
../repos/coreutils/src/realpath:     file format elf32-littlearm


Disassembly of section .init:

00010dd0 <.init>:
   10dd0:	push	{r3, lr}
   10dd4:	bl	1109c <__mempcpy_chk@plt+0x48>
   10dd8:	pop	{r3, pc}

Disassembly of section .plt:

00010ddc <calloc@plt-0x14>:
   10ddc:	push	{lr}		; (str lr, [sp, #-4]!)
   10de0:	ldr	lr, [pc, #4]	; 10dec <calloc@plt-0x4>
   10de4:	add	lr, pc, lr
   10de8:	ldr	pc, [lr, #8]!
   10dec:	andeq	r6, r1, r4, lsl r2

00010df0 <calloc@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #90112	; 0x16000
   10df8:	ldr	pc, [ip, #532]!	; 0x214

00010dfc <fputs_unlocked@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #90112	; 0x16000
   10e04:	ldr	pc, [ip, #524]!	; 0x20c

00010e08 <raise@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #90112	; 0x16000
   10e10:	ldr	pc, [ip, #516]!	; 0x204

00010e14 <strcmp@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #90112	; 0x16000
   10e1c:	ldr	pc, [ip, #508]!	; 0x1fc

00010e20 <fflush@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #90112	; 0x16000
   10e28:	ldr	pc, [ip, #500]!	; 0x1f4

00010e2c <memmove@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #90112	; 0x16000
   10e34:	ldr	pc, [ip, #492]!	; 0x1ec

00010e38 <free@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #90112	; 0x16000
   10e40:	ldr	pc, [ip, #484]!	; 0x1e4

00010e44 <faccessat@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #90112	; 0x16000
   10e4c:	ldr	pc, [ip, #476]!	; 0x1dc

00010e50 <_exit@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #90112	; 0x16000
   10e58:	ldr	pc, [ip, #468]!	; 0x1d4

00010e5c <memcpy@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #90112	; 0x16000
   10e64:	ldr	pc, [ip, #460]!	; 0x1cc

00010e68 <mbsinit@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #90112	; 0x16000
   10e70:	ldr	pc, [ip, #452]!	; 0x1c4

00010e74 <memcmp@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #90112	; 0x16000
   10e7c:	ldr	pc, [ip, #444]!	; 0x1bc

00010e80 <dcgettext@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #90112	; 0x16000
   10e88:	ldr	pc, [ip, #436]!	; 0x1b4

00010e8c <realloc@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #90112	; 0x16000
   10e94:	ldr	pc, [ip, #428]!	; 0x1ac

00010e98 <textdomain@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #90112	; 0x16000
   10ea0:	ldr	pc, [ip, #420]!	; 0x1a4

00010ea4 <rawmemchr@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #90112	; 0x16000
   10eac:	ldr	pc, [ip, #412]!	; 0x19c

00010eb0 <iswprint@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #90112	; 0x16000
   10eb8:	ldr	pc, [ip, #404]!	; 0x194

00010ebc <readlink@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #90112	; 0x16000
   10ec4:	ldr	pc, [ip, #396]!	; 0x18c

00010ec8 <lseek64@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #90112	; 0x16000
   10ed0:	ldr	pc, [ip, #388]!	; 0x184

00010ed4 <__ctype_get_mb_cur_max@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #90112	; 0x16000
   10edc:	ldr	pc, [ip, #380]!	; 0x17c

00010ee0 <__fpending@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #90112	; 0x16000
   10ee8:	ldr	pc, [ip, #372]!	; 0x174

00010eec <ferror_unlocked@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #90112	; 0x16000
   10ef4:	ldr	pc, [ip, #364]!	; 0x16c

00010ef8 <mbrtowc@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #90112	; 0x16000
   10f00:	ldr	pc, [ip, #356]!	; 0x164

00010f04 <error@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #90112	; 0x16000
   10f0c:	ldr	pc, [ip, #348]!	; 0x15c

00010f10 <malloc@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #90112	; 0x16000
   10f18:	ldr	pc, [ip, #340]!	; 0x154

00010f1c <__libc_start_main@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #90112	; 0x16000
   10f24:	ldr	pc, [ip, #332]!	; 0x14c

00010f28 <__freading@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #90112	; 0x16000
   10f30:	ldr	pc, [ip, #324]!	; 0x144

00010f34 <__gmon_start__@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #90112	; 0x16000
   10f3c:	ldr	pc, [ip, #316]!	; 0x13c

00010f40 <getopt_long@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #90112	; 0x16000
   10f48:	ldr	pc, [ip, #308]!	; 0x134

00010f4c <__ctype_b_loc@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #90112	; 0x16000
   10f54:	ldr	pc, [ip, #300]!	; 0x12c

00010f58 <getcwd@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #90112	; 0x16000
   10f60:	ldr	pc, [ip, #292]!	; 0x124

00010f64 <exit@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #90112	; 0x16000
   10f6c:	ldr	pc, [ip, #284]!	; 0x11c

00010f70 <strlen@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #90112	; 0x16000
   10f78:	ldr	pc, [ip, #276]!	; 0x114

00010f7c <__errno_location@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #90112	; 0x16000
   10f84:	ldr	pc, [ip, #268]!	; 0x10c

00010f88 <__cxa_atexit@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #90112	; 0x16000
   10f90:	ldr	pc, [ip, #260]!	; 0x104

00010f94 <memset@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #90112	; 0x16000
   10f9c:	ldr	pc, [ip, #252]!	; 0xfc

00010fa0 <__printf_chk@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #90112	; 0x16000
   10fa8:	ldr	pc, [ip, #244]!	; 0xf4

00010fac <fileno@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #90112	; 0x16000
   10fb4:	ldr	pc, [ip, #236]!	; 0xec

00010fb8 <__fprintf_chk@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #90112	; 0x16000
   10fc0:	ldr	pc, [ip, #228]!	; 0xe4

00010fc4 <fclose@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #90112	; 0x16000
   10fcc:	ldr	pc, [ip, #220]!	; 0xdc

00010fd0 <fseeko64@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #90112	; 0x16000
   10fd8:	ldr	pc, [ip, #212]!	; 0xd4

00010fdc <setlocale@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #90112	; 0x16000
   10fe4:	ldr	pc, [ip, #204]!	; 0xcc

00010fe8 <strrchr@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #90112	; 0x16000
   10ff0:	ldr	pc, [ip, #196]!	; 0xc4

00010ff4 <nl_langinfo@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #90112	; 0x16000
   10ffc:	ldr	pc, [ip, #188]!	; 0xbc

00011000 <bindtextdomain@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #90112	; 0x16000
   11008:	ldr	pc, [ip, #180]!	; 0xb4

0001100c <__xstat64@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #90112	; 0x16000
   11014:	ldr	pc, [ip, #172]!	; 0xac

00011018 <fputs@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #90112	; 0x16000
   11020:	ldr	pc, [ip, #164]!	; 0xa4

00011024 <strncmp@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #90112	; 0x16000
   1102c:	ldr	pc, [ip, #156]!	; 0x9c

00011030 <abort@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #90112	; 0x16000
   11038:	ldr	pc, [ip, #148]!	; 0x94

0001103c <putchar_unlocked@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #90112	; 0x16000
   11044:	ldr	pc, [ip, #140]!	; 0x8c

00011048 <strspn@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #90112	; 0x16000
   11050:	ldr	pc, [ip, #132]!	; 0x84

00011054 <__mempcpy_chk@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #90112	; 0x16000
   1105c:	ldr	pc, [ip, #124]!	; 0x7c

Disassembly of section .text:

00011060 <.text>:
   11060:	mov	fp, #0
   11064:	mov	lr, #0
   11068:	pop	{r1}		; (ldr r1, [sp], #4)
   1106c:	mov	r2, sp
   11070:	push	{r2}		; (str r2, [sp, #-4]!)
   11074:	push	{r0}		; (str r0, [sp, #-4]!)
   11078:	ldr	ip, [pc, #16]	; 11090 <__mempcpy_chk@plt+0x3c>
   1107c:	push	{ip}		; (str ip, [sp, #-4]!)
   11080:	ldr	r0, [pc, #12]	; 11094 <__mempcpy_chk@plt+0x40>
   11084:	ldr	r3, [pc, #12]	; 11098 <__mempcpy_chk@plt+0x44>
   11088:	bl	10f1c <__libc_start_main@plt>
   1108c:	bl	11030 <abort@plt>
   11090:	andeq	r6, r1, r8, lsr r2
   11094:	muleq	r1, r0, r3
   11098:	ldrdeq	r6, [r1], -r8
   1109c:	ldr	r3, [pc, #20]	; 110b8 <__mempcpy_chk@plt+0x64>
   110a0:	ldr	r2, [pc, #20]	; 110bc <__mempcpy_chk@plt+0x68>
   110a4:	add	r3, pc, r3
   110a8:	ldr	r2, [r3, r2]
   110ac:	cmp	r2, #0
   110b0:	bxeq	lr
   110b4:	b	10f34 <__gmon_start__@plt>
   110b8:	andeq	r5, r1, r4, asr pc
   110bc:	ldrdeq	r0, [r0], -ip
   110c0:	ldr	r0, [pc, #24]	; 110e0 <__mempcpy_chk@plt+0x8c>
   110c4:	ldr	r3, [pc, #24]	; 110e4 <__mempcpy_chk@plt+0x90>
   110c8:	cmp	r3, r0
   110cc:	bxeq	lr
   110d0:	ldr	r3, [pc, #16]	; 110e8 <__mempcpy_chk@plt+0x94>
   110d4:	cmp	r3, #0
   110d8:	bxeq	lr
   110dc:	bx	r3
   110e0:	andeq	r7, r2, r0, lsr r1
   110e4:	andeq	r7, r2, r0, lsr r1
   110e8:	andeq	r0, r0, r0
   110ec:	ldr	r0, [pc, #36]	; 11118 <__mempcpy_chk@plt+0xc4>
   110f0:	ldr	r1, [pc, #36]	; 1111c <__mempcpy_chk@plt+0xc8>
   110f4:	sub	r1, r1, r0
   110f8:	asr	r1, r1, #2
   110fc:	add	r1, r1, r1, lsr #31
   11100:	asrs	r1, r1, #1
   11104:	bxeq	lr
   11108:	ldr	r3, [pc, #16]	; 11120 <__mempcpy_chk@plt+0xcc>
   1110c:	cmp	r3, #0
   11110:	bxeq	lr
   11114:	bx	r3
   11118:	andeq	r7, r2, r0, lsr r1
   1111c:	andeq	r7, r2, r0, lsr r1
   11120:	andeq	r0, r0, r0
   11124:	push	{r4, lr}
   11128:	ldr	r4, [pc, #24]	; 11148 <__mempcpy_chk@plt+0xf4>
   1112c:	ldrb	r3, [r4]
   11130:	cmp	r3, #0
   11134:	popne	{r4, pc}
   11138:	bl	110c0 <__mempcpy_chk@plt+0x6c>
   1113c:	mov	r3, #1
   11140:	strb	r3, [r4]
   11144:	pop	{r4, pc}
   11148:	andeq	r7, r2, ip, asr #2
   1114c:	b	110ec <__mempcpy_chk@plt+0x98>
   11150:	push	{fp, lr}
   11154:	mov	fp, sp
   11158:	sub	sp, sp, #56	; 0x38
   1115c:	mov	r8, r0
   11160:	cmp	r0, #0
   11164:	bne	11350 <__mempcpy_chk@plt+0x2fc>
   11168:	movw	r1, #25243	; 0x629b
   1116c:	mov	r0, #0
   11170:	mov	r2, #5
   11174:	movt	r1, #1
   11178:	bl	10e80 <dcgettext@plt>
   1117c:	mov	r1, r0
   11180:	movw	r0, #29028	; 0x7164
   11184:	movt	r0, #2
   11188:	ldr	r2, [r0]
   1118c:	mov	r0, #1
   11190:	bl	10fa0 <__printf_chk@plt>
   11194:	movw	r1, #25274	; 0x62ba
   11198:	mov	r0, #0
   1119c:	mov	r2, #5
   111a0:	movt	r1, #1
   111a4:	bl	10e80 <dcgettext@plt>
   111a8:	movw	r9, #28996	; 0x7144
   111ac:	movt	r9, #2
   111b0:	ldr	r1, [r9]
   111b4:	bl	10dfc <fputs_unlocked@plt>
   111b8:	movw	r1, #25353	; 0x6309
   111bc:	mov	r0, #0
   111c0:	mov	r2, #5
   111c4:	movt	r1, #1
   111c8:	bl	10e80 <dcgettext@plt>
   111cc:	ldr	r1, [r9]
   111d0:	bl	10dfc <fputs_unlocked@plt>
   111d4:	movw	r1, #25979	; 0x657b
   111d8:	mov	r0, #0
   111dc:	mov	r2, #5
   111e0:	movt	r1, #1
   111e4:	bl	10e80 <dcgettext@plt>
   111e8:	ldr	r1, [r9]
   111ec:	bl	10dfc <fputs_unlocked@plt>
   111f0:	movw	r1, #26024	; 0x65a8
   111f4:	mov	r0, #0
   111f8:	mov	r2, #5
   111fc:	movt	r1, #1
   11200:	bl	10e80 <dcgettext@plt>
   11204:	ldr	r1, [r9]
   11208:	bl	10dfc <fputs_unlocked@plt>
   1120c:	movw	r0, #26832	; 0x68d0
   11210:	mov	r6, sp
   11214:	movt	r0, #1
   11218:	mov	r1, r6
   1121c:	ldm	r0!, {r2, r3, r4, r5}
   11220:	stmia	r1!, {r2, r3, r4, r5}
   11224:	ldm	r0!, {r2, r3, r4, r5, r7}
   11228:	stmia	r1!, {r2, r3, r4, r5, r7}
   1122c:	ldm	r0, {r2, r3, r4, r5, r7}
   11230:	stm	r1, {r2, r3, r4, r5, r7}
   11234:	movw	r1, #26163	; 0x6633
   11238:	movw	r5, #26078	; 0x65de
   1123c:	movt	r1, #1
   11240:	movt	r5, #1
   11244:	mov	r0, r5
   11248:	bl	10e14 <strcmp@plt>
   1124c:	cmp	r0, #0
   11250:	ldrne	r1, [r6, #8]!
   11254:	cmpne	r1, #0
   11258:	bne	11244 <__mempcpy_chk@plt+0x1f0>
   1125c:	ldr	r6, [r6, #4]
   11260:	movw	r1, #26258	; 0x6692
   11264:	mov	r0, #0
   11268:	mov	r2, #5
   1126c:	movt	r1, #1
   11270:	bl	10e80 <dcgettext@plt>
   11274:	movw	r2, #26119	; 0x6607
   11278:	movw	r3, #26281	; 0x66a9
   1127c:	mov	r1, r0
   11280:	mov	r0, #1
   11284:	movt	r2, #1
   11288:	movt	r3, #1
   1128c:	bl	10fa0 <__printf_chk@plt>
   11290:	cmp	r6, #0
   11294:	mov	r0, #5
   11298:	mov	r1, #0
   1129c:	moveq	r6, r5
   112a0:	bl	10fdc <setlocale@plt>
   112a4:	cmp	r0, #0
   112a8:	beq	112e0 <__mempcpy_chk@plt+0x28c>
   112ac:	movw	r1, #26321	; 0x66d1
   112b0:	mov	r2, #3
   112b4:	movt	r1, #1
   112b8:	bl	11024 <strncmp@plt>
   112bc:	cmp	r0, #0
   112c0:	beq	112e0 <__mempcpy_chk@plt+0x28c>
   112c4:	movw	r1, #26325	; 0x66d5
   112c8:	mov	r0, #0
   112cc:	mov	r2, #5
   112d0:	movt	r1, #1
   112d4:	bl	10e80 <dcgettext@plt>
   112d8:	ldr	r1, [r9]
   112dc:	bl	10dfc <fputs_unlocked@plt>
   112e0:	movw	r1, #26396	; 0x671c
   112e4:	mov	r0, #0
   112e8:	mov	r2, #5
   112ec:	movt	r1, #1
   112f0:	bl	10e80 <dcgettext@plt>
   112f4:	movw	r2, #26281	; 0x66a9
   112f8:	mov	r1, r0
   112fc:	mov	r0, #1
   11300:	mov	r3, r5
   11304:	movt	r2, #1
   11308:	bl	10fa0 <__printf_chk@plt>
   1130c:	movw	r1, #26423	; 0x6737
   11310:	mov	r0, #0
   11314:	mov	r2, #5
   11318:	movt	r1, #1
   1131c:	bl	10e80 <dcgettext@plt>
   11320:	movw	r3, #25352	; 0x6308
   11324:	mov	r1, r0
   11328:	movw	r0, #26191	; 0x664f
   1132c:	cmp	r6, r5
   11330:	mov	r2, r6
   11334:	movt	r0, #1
   11338:	movt	r3, #1
   1133c:	moveq	r3, r0
   11340:	mov	r0, #1
   11344:	bl	10fa0 <__printf_chk@plt>
   11348:	mov	r0, r8
   1134c:	bl	10f64 <exit@plt>
   11350:	movw	r0, #28992	; 0x7140
   11354:	movw	r1, #25204	; 0x6274
   11358:	mov	r2, #5
   1135c:	movt	r0, #2
   11360:	movt	r1, #1
   11364:	ldr	r5, [r0]
   11368:	mov	r0, #0
   1136c:	bl	10e80 <dcgettext@plt>
   11370:	mov	r2, r0
   11374:	movw	r0, #29028	; 0x7164
   11378:	mov	r1, #1
   1137c:	movt	r0, #2
   11380:	ldr	r3, [r0]
   11384:	mov	r0, r5
   11388:	bl	10fb8 <__fprintf_chk@plt>
   1138c:	b	11348 <__mempcpy_chk@plt+0x2f4>
   11390:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11394:	add	fp, sp, #28
   11398:	sub	sp, sp, #12
   1139c:	mov	r5, r0
   113a0:	ldr	r0, [r1]
   113a4:	str	r1, [sp, #8]
   113a8:	bl	13570 <__mempcpy_chk@plt+0x251c>
   113ac:	movw	r1, #25352	; 0x6308
   113b0:	mov	r0, #6
   113b4:	movt	r1, #1
   113b8:	bl	10fdc <setlocale@plt>
   113bc:	movw	r4, #26123	; 0x660b
   113c0:	movw	r1, #26087	; 0x65e7
   113c4:	movt	r4, #1
   113c8:	movt	r1, #1
   113cc:	mov	r0, r4
   113d0:	bl	11000 <bindtextdomain@plt>
   113d4:	mov	r0, r4
   113d8:	bl	10e98 <textdomain@plt>
   113dc:	movw	r0, #9108	; 0x2394
   113e0:	movt	r0, #1
   113e4:	bl	1623c <__mempcpy_chk@plt+0x51e8>
   113e8:	movw	r9, #26111	; 0x65ff
   113ec:	movw	r7, #26624	; 0x6800
   113f0:	mov	r8, #0
   113f4:	mov	r4, #0
   113f8:	mov	sl, #0
   113fc:	mov	r6, #1
   11400:	movt	r9, #1
   11404:	movt	r7, #1
   11408:	b	114b0 <__mempcpy_chk@plt+0x45c>
   1140c:	cmp	r0, #76	; 0x4c
   11410:	bne	117e8 <__mempcpy_chk@plt+0x794>
   11414:	movw	r1, #29008	; 0x7150
   11418:	mov	r0, #1
   1141c:	orr	r6, r6, #4
   11420:	movt	r1, #2
   11424:	strb	r0, [r1]
   11428:	b	114b0 <__mempcpy_chk@plt+0x45c>
   1142c:	cmp	r0, #113	; 0x71
   11430:	bne	11484 <__mempcpy_chk@plt+0x430>
   11434:	movw	r0, #29009	; 0x7151
   11438:	movt	r0, #2
   1143c:	b	11448 <__mempcpy_chk@plt+0x3f4>
   11440:	movw	r0, #29010	; 0x7152
   11444:	movt	r0, #2
   11448:	mov	r1, #1
   1144c:	strb	r1, [r0]
   11450:	b	114b0 <__mempcpy_chk@plt+0x45c>
   11454:	movw	r0, #29008	; 0x7150
   11458:	bic	r6, r6, #4
   1145c:	movt	r0, #2
   11460:	strb	r8, [r0]
   11464:	b	114b0 <__mempcpy_chk@plt+0x45c>
   11468:	movw	r1, #257	; 0x101
   1146c:	cmp	r0, r1
   11470:	bne	117e8 <__mempcpy_chk@plt+0x794>
   11474:	movw	r0, #29000	; 0x7148
   11478:	movt	r0, #2
   1147c:	ldr	sl, [r0]
   11480:	b	114b0 <__mempcpy_chk@plt+0x45c>
   11484:	cmp	r0, #115	; 0x73
   11488:	bne	117e8 <__mempcpy_chk@plt+0x794>
   1148c:	movw	r0, #29008	; 0x7150
   11490:	orr	r6, r6, #4
   11494:	movt	r0, #2
   11498:	strb	r8, [r0]
   1149c:	b	114b0 <__mempcpy_chk@plt+0x45c>
   114a0:	cmp	r0, #109	; 0x6d
   114a4:	bne	117e8 <__mempcpy_chk@plt+0x794>
   114a8:	mov	r0, #2
   114ac:	bfi	r6, r0, #0, #2
   114b0:	ldr	r1, [sp, #8]
   114b4:	mov	r0, r5
   114b8:	mov	r2, r9
   114bc:	mov	r3, r7
   114c0:	str	r8, [sp]
   114c4:	bl	10f40 <getopt_long@plt>
   114c8:	cmp	r0, #112	; 0x70
   114cc:	bgt	114f0 <__mempcpy_chk@plt+0x49c>
   114d0:	cmp	r0, #79	; 0x4f
   114d4:	ble	11518 <__mempcpy_chk@plt+0x4c4>
   114d8:	cmp	r0, #80	; 0x50
   114dc:	beq	11454 <__mempcpy_chk@plt+0x400>
   114e0:	cmp	r0, #101	; 0x65
   114e4:	bne	114a0 <__mempcpy_chk@plt+0x44c>
   114e8:	bic	r6, r6, #3
   114ec:	b	114b0 <__mempcpy_chk@plt+0x45c>
   114f0:	cmp	r0, #121	; 0x79
   114f4:	ble	1142c <__mempcpy_chk@plt+0x3d8>
   114f8:	cmp	r0, #122	; 0x7a
   114fc:	beq	11440 <__mempcpy_chk@plt+0x3ec>
   11500:	cmp	r0, #256	; 0x100
   11504:	bne	11468 <__mempcpy_chk@plt+0x414>
   11508:	movw	r0, #29000	; 0x7148
   1150c:	movt	r0, #2
   11510:	ldr	r4, [r0]
   11514:	b	114b0 <__mempcpy_chk@plt+0x45c>
   11518:	cmp	r0, #75	; 0x4b
   1151c:	bgt	1140c <__mempcpy_chk@plt+0x3b8>
   11520:	cmn	r0, #1
   11524:	bne	11764 <__mempcpy_chk@plt+0x710>
   11528:	movw	r9, #28984	; 0x7138
   1152c:	movt	r9, #2
   11530:	ldr	r0, [r9]
   11534:	cmp	r0, r5
   11538:	bge	117c4 <__mempcpy_chk@plt+0x770>
   1153c:	cmp	sl, #0
   11540:	mov	r7, sl
   11544:	moveq	r7, r4
   11548:	cmp	r4, #0
   1154c:	movne	r7, r4
   11550:	and	r4, r6, #3
   11554:	cmp	r7, #0
   11558:	beq	11590 <__mempcpy_chk@plt+0x53c>
   1155c:	mov	r0, r7
   11560:	mov	r1, r6
   11564:	bl	11870 <__mempcpy_chk@plt+0x81c>
   11568:	movw	r1, #29012	; 0x7154
   1156c:	cmp	r0, #0
   11570:	movt	r1, #2
   11574:	str	r0, [r1]
   11578:	beq	117f0 <__mempcpy_chk@plt+0x79c>
   1157c:	cmp	r4, #0
   11580:	bne	11590 <__mempcpy_chk@plt+0x53c>
   11584:	bl	118c8 <__mempcpy_chk@plt+0x874>
   11588:	cmp	r0, #0
   1158c:	beq	11838 <__mempcpy_chk@plt+0x7e4>
   11590:	cmp	sl, r7
   11594:	beq	115fc <__mempcpy_chk@plt+0x5a8>
   11598:	cmp	sl, #0
   1159c:	beq	1162c <__mempcpy_chk@plt+0x5d8>
   115a0:	mov	r0, sl
   115a4:	mov	r1, r6
   115a8:	bl	11870 <__mempcpy_chk@plt+0x81c>
   115ac:	cmp	r0, #0
   115b0:	beq	11808 <__mempcpy_chk@plt+0x7b4>
   115b4:	mov	r7, r0
   115b8:	cmp	r4, #0
   115bc:	bne	115d0 <__mempcpy_chk@plt+0x57c>
   115c0:	mov	r0, r7
   115c4:	bl	118c8 <__mempcpy_chk@plt+0x874>
   115c8:	cmp	r0, #0
   115cc:	beq	11848 <__mempcpy_chk@plt+0x7f4>
   115d0:	movw	r4, #29012	; 0x7154
   115d4:	mov	r0, r7
   115d8:	movt	r4, #2
   115dc:	ldr	r1, [r4]
   115e0:	bl	11940 <__mempcpy_chk@plt+0x8ec>
   115e4:	cmp	r0, #0
   115e8:	beq	1160c <__mempcpy_chk@plt+0x5b8>
   115ec:	movw	r0, #29016	; 0x7158
   115f0:	movt	r0, #2
   115f4:	str	r7, [r0]
   115f8:	b	1162c <__mempcpy_chk@plt+0x5d8>
   115fc:	movw	r0, #29012	; 0x7154
   11600:	movt	r0, #2
   11604:	ldr	r0, [r0]
   11608:	b	11620 <__mempcpy_chk@plt+0x5cc>
   1160c:	mov	r0, r7
   11610:	bl	12544 <__mempcpy_chk@plt+0x14f0>
   11614:	ldr	r0, [r4]
   11618:	mov	r1, #0
   1161c:	str	r1, [r4]
   11620:	movw	r1, #29016	; 0x7158
   11624:	movt	r1, #2
   11628:	str	r0, [r1]
   1162c:	ldr	r1, [r9]
   11630:	mov	r0, #0
   11634:	cmp	r1, r5
   11638:	bge	1175c <__mempcpy_chk@plt+0x708>
   1163c:	mov	r8, #1
   11640:	ldr	r0, [sp, #8]
   11644:	ldr	r4, [r0, r1, lsl #2]
   11648:	mov	r1, r6
   1164c:	mov	r0, r4
   11650:	bl	11870 <__mempcpy_chk@plt+0x81c>
   11654:	cmp	r0, #0
   11658:	beq	116f4 <__mempcpy_chk@plt+0x6a0>
   1165c:	mov	r7, r0
   11660:	movw	r0, #29012	; 0x7154
   11664:	movt	r0, #2
   11668:	ldr	r4, [r0]
   1166c:	cmp	r4, #0
   11670:	beq	116b4 <__mempcpy_chk@plt+0x660>
   11674:	movw	r0, #29016	; 0x7158
   11678:	movt	r0, #2
   1167c:	ldr	r0, [r0]
   11680:	cmp	r0, #0
   11684:	beq	11698 <__mempcpy_chk@plt+0x644>
   11688:	mov	r1, r7
   1168c:	bl	11940 <__mempcpy_chk@plt+0x8ec>
   11690:	cmp	r0, #0
   11694:	beq	116b4 <__mempcpy_chk@plt+0x660>
   11698:	mov	r0, r7
   1169c:	mov	r1, r4
   116a0:	mov	r2, #0
   116a4:	mov	r3, #0
   116a8:	bl	119e0 <__mempcpy_chk@plt+0x98c>
   116ac:	cmp	r0, #0
   116b0:	bne	116c8 <__mempcpy_chk@plt+0x674>
   116b4:	movw	r0, #28996	; 0x7144
   116b8:	movt	r0, #2
   116bc:	ldr	r1, [r0]
   116c0:	mov	r0, r7
   116c4:	bl	10dfc <fputs_unlocked@plt>
   116c8:	movw	r0, #29010	; 0x7152
   116cc:	movt	r0, #2
   116d0:	ldrb	r0, [r0]
   116d4:	cmp	r0, #0
   116d8:	mov	r0, #10
   116dc:	movwne	r0, #0
   116e0:	bl	1103c <putchar_unlocked@plt>
   116e4:	mov	r0, r7
   116e8:	bl	12544 <__mempcpy_chk@plt+0x14f0>
   116ec:	mov	sl, #1
   116f0:	b	11740 <__mempcpy_chk@plt+0x6ec>
   116f4:	movw	r0, #29009	; 0x7151
   116f8:	mov	sl, #0
   116fc:	movt	r0, #2
   11700:	ldrb	r0, [r0]
   11704:	cmp	r0, #0
   11708:	bne	11740 <__mempcpy_chk@plt+0x6ec>
   1170c:	bl	10f7c <__errno_location@plt>
   11710:	ldr	r7, [r0]
   11714:	mov	r0, #0
   11718:	mov	r1, #3
   1171c:	mov	r2, r4
   11720:	mov	sl, #0
   11724:	bl	14de0 <__mempcpy_chk@plt+0x3d8c>
   11728:	movw	r2, #26948	; 0x6944
   1172c:	mov	r3, r0
   11730:	mov	r0, #0
   11734:	mov	r1, r7
   11738:	movt	r2, #1
   1173c:	bl	10f04 <error@plt>
   11740:	ldr	r0, [r9]
   11744:	and	r8, r8, sl
   11748:	add	r1, r0, #1
   1174c:	cmp	r1, r5
   11750:	str	r1, [r9]
   11754:	blt	11640 <__mempcpy_chk@plt+0x5ec>
   11758:	eor	r0, r8, #1
   1175c:	sub	sp, fp, #28
   11760:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11764:	cmn	r0, #3
   11768:	bne	117b4 <__mempcpy_chk@plt+0x760>
   1176c:	movw	r0, #28904	; 0x70e8
   11770:	movw	r2, #26133	; 0x6615
   11774:	mov	r1, #0
   11778:	movt	r0, #2
   1177c:	movt	r2, #1
   11780:	str	r1, [sp, #4]
   11784:	movw	r1, #26078	; 0x65de
   11788:	ldr	r3, [r0]
   1178c:	movw	r0, #28996	; 0x7144
   11790:	str	r2, [sp]
   11794:	movw	r2, #26119	; 0x6607
   11798:	movt	r1, #1
   1179c:	movt	r0, #2
   117a0:	movt	r2, #1
   117a4:	ldr	r0, [r0]
   117a8:	bl	155d0 <__mempcpy_chk@plt+0x457c>
   117ac:	mov	r0, #0
   117b0:	bl	10f64 <exit@plt>
   117b4:	cmn	r0, #2
   117b8:	bne	117e8 <__mempcpy_chk@plt+0x794>
   117bc:	mov	r0, #0
   117c0:	bl	11150 <__mempcpy_chk@plt+0xfc>
   117c4:	movw	r1, #26147	; 0x6623
   117c8:	mov	r0, #0
   117cc:	mov	r2, #5
   117d0:	movt	r1, #1
   117d4:	bl	10e80 <dcgettext@plt>
   117d8:	mov	r2, r0
   117dc:	mov	r0, #0
   117e0:	mov	r1, #0
   117e4:	bl	10f04 <error@plt>
   117e8:	mov	r0, #1
   117ec:	bl	11150 <__mempcpy_chk@plt+0xfc>
   117f0:	bl	10f7c <__errno_location@plt>
   117f4:	ldr	r4, [r0]
   117f8:	mov	r0, #0
   117fc:	mov	r1, #3
   11800:	mov	r2, r7
   11804:	b	1181c <__mempcpy_chk@plt+0x7c8>
   11808:	bl	10f7c <__errno_location@plt>
   1180c:	ldr	r4, [r0]
   11810:	mov	r0, #0
   11814:	mov	r1, #3
   11818:	mov	r2, sl
   1181c:	bl	14de0 <__mempcpy_chk@plt+0x3d8c>
   11820:	movw	r2, #26948	; 0x6944
   11824:	mov	r3, r0
   11828:	mov	r0, #1
   1182c:	mov	r1, r4
   11830:	movt	r2, #1
   11834:	bl	10f04 <error@plt>
   11838:	mov	r0, #0
   1183c:	mov	r1, #3
   11840:	mov	r2, r7
   11844:	b	11854 <__mempcpy_chk@plt+0x800>
   11848:	mov	r0, #0
   1184c:	mov	r1, #3
   11850:	mov	r2, sl
   11854:	bl	14de0 <__mempcpy_chk@plt+0x3d8c>
   11858:	movw	r2, #26948	; 0x6944
   1185c:	mov	r3, r0
   11860:	mov	r0, #1
   11864:	mov	r1, #20
   11868:	movt	r2, #1
   1186c:	bl	10f04 <error@plt>
   11870:	push	{r4, r5, fp, lr}
   11874:	add	fp, sp, #8
   11878:	mov	r5, r1
   1187c:	bl	11ca8 <__mempcpy_chk@plt+0xc54>
   11880:	mov	r4, r0
   11884:	movw	r0, #29008	; 0x7150
   11888:	movt	r0, #2
   1188c:	ldrb	r0, [r0]
   11890:	cmp	r0, #1
   11894:	bne	118c0 <__mempcpy_chk@plt+0x86c>
   11898:	cmp	r4, #0
   1189c:	beq	118c0 <__mempcpy_chk@plt+0x86c>
   118a0:	bic	r1, r5, #4
   118a4:	mov	r0, r4
   118a8:	bl	11ca8 <__mempcpy_chk@plt+0xc54>
   118ac:	mov	r5, r0
   118b0:	mov	r0, r4
   118b4:	bl	12544 <__mempcpy_chk@plt+0x14f0>
   118b8:	mov	r0, r5
   118bc:	pop	{r4, r5, fp, pc}
   118c0:	mov	r0, r4
   118c4:	pop	{r4, r5, fp, pc}
   118c8:	push	{r4, r5, r6, sl, fp, lr}
   118cc:	add	fp, sp, #16
   118d0:	sub	sp, sp, #104	; 0x68
   118d4:	mov	r1, sp
   118d8:	mov	r4, r0
   118dc:	bl	16254 <__mempcpy_chk@plt+0x5200>
   118e0:	cmp	r0, #0
   118e4:	ldreq	r0, [sp, #16]
   118e8:	andeq	r0, r0, #61440	; 0xf000
   118ec:	subeq	r0, r0, #16384	; 0x4000
   118f0:	clzeq	r0, r0
   118f4:	lsreq	r0, r0, #5
   118f8:	subeq	sp, fp, #16
   118fc:	popeq	{r4, r5, r6, sl, fp, pc}
   11900:	bl	10f7c <__errno_location@plt>
   11904:	ldr	r5, [r0]
   11908:	movw	r1, #26602	; 0x67ea
   1190c:	mov	r0, #0
   11910:	mov	r2, #5
   11914:	movt	r1, #1
   11918:	bl	10e80 <dcgettext@plt>
   1191c:	mov	r6, r0
   11920:	mov	r0, #4
   11924:	mov	r1, r4
   11928:	bl	14c3c <__mempcpy_chk@plt+0x3be8>
   1192c:	mov	r3, r0
   11930:	mov	r0, #1
   11934:	mov	r1, r5
   11938:	mov	r2, r6
   1193c:	bl	10f04 <error@plt>
   11940:	push	{fp, lr}
   11944:	mov	fp, sp
   11948:	ldrb	ip, [r0, #1]
   1194c:	cmp	ip, #47	; 0x2f
   11950:	beq	1196c <__mempcpy_chk@plt+0x918>
   11954:	cmp	ip, #0
   11958:	bne	1198c <__mempcpy_chk@plt+0x938>
   1195c:	ldrb	r0, [r1, #1]
   11960:	subs	r0, r0, #47	; 0x2f
   11964:	movwne	r0, #1
   11968:	pop	{fp, pc}
   1196c:	ldrb	r2, [r0, #2]
   11970:	ldrb	r3, [r1, #1]
   11974:	cmp	r2, #0
   11978:	bne	11990 <__mempcpy_chk@plt+0x93c>
   1197c:	sub	r0, r3, #47	; 0x2f
   11980:	clz	r0, r0
   11984:	lsr	r0, r0, #5
   11988:	pop	{fp, pc}
   1198c:	ldrb	r3, [r1, #1]
   11990:	add	r2, r0, #2
   11994:	add	r1, r1, #2
   11998:	mov	r0, #0
   1199c:	tst	r3, #255	; 0xff
   119a0:	beq	119dc <__mempcpy_chk@plt+0x988>
   119a4:	uxtb	lr, r3
   119a8:	uxtb	r3, ip
   119ac:	cmp	r3, lr
   119b0:	popne	{fp, pc}
   119b4:	ldrb	ip, [r2], #1
   119b8:	ldrb	r3, [r1], #1
   119bc:	cmp	ip, #0
   119c0:	bne	1199c <__mempcpy_chk@plt+0x948>
   119c4:	sub	r1, r3, #47	; 0x2f
   119c8:	clz	r0, r3
   119cc:	clz	r1, r1
   119d0:	lsr	r0, r0, #5
   119d4:	lsr	r1, r1, #5
   119d8:	orr	r0, r1, r0
   119dc:	pop	{fp, pc}
   119e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   119e4:	add	fp, sp, #28
   119e8:	sub	sp, sp, #12
   119ec:	str	r3, [sp, #4]
   119f0:	str	r2, [sp, #8]
   119f4:	mov	r5, r1
   119f8:	mov	r4, r0
   119fc:	mov	r6, #0
   11a00:	ldrb	r0, [r0, #1]
   11a04:	ldrb	r1, [r1, #1]
   11a08:	sub	r0, r0, #47	; 0x2f
   11a0c:	sub	r1, r1, #47	; 0x2f
   11a10:	clz	r0, r0
   11a14:	clz	r1, r1
   11a18:	lsr	r0, r0, #5
   11a1c:	lsr	r1, r1, #5
   11a20:	teq	r1, r0
   11a24:	bne	11c08 <__mempcpy_chk@plt+0xbb4>
   11a28:	ldrb	r3, [r5]
   11a2c:	ldrb	r1, [r4]
   11a30:	cmp	r3, #0
   11a34:	beq	11a7c <__mempcpy_chk@plt+0xa28>
   11a38:	mov	r0, #0
   11a3c:	mov	r2, #1
   11a40:	tst	r1, #255	; 0xff
   11a44:	beq	11a98 <__mempcpy_chk@plt+0xa44>
   11a48:	uxtb	r7, r1
   11a4c:	uxtb	r6, r3
   11a50:	cmp	r6, r7
   11a54:	bne	11a98 <__mempcpy_chk@plt+0xa44>
   11a58:	ldrb	r3, [r5, r2]
   11a5c:	ldrb	r1, [r4, r2]
   11a60:	cmp	r7, #47	; 0x2f
   11a64:	moveq	r0, r2
   11a68:	add	r2, r2, #1
   11a6c:	cmp	r3, #0
   11a70:	bne	11a40 <__mempcpy_chk@plt+0x9ec>
   11a74:	sub	r2, r2, #1
   11a78:	b	11a84 <__mempcpy_chk@plt+0xa30>
   11a7c:	mov	r2, #0
   11a80:	mov	r0, #0
   11a84:	cmp	r1, #0
   11a88:	beq	11aac <__mempcpy_chk@plt+0xa58>
   11a8c:	cmp	r1, #47	; 0x2f
   11a90:	moveq	r0, r2
   11a94:	b	11ab0 <__mempcpy_chk@plt+0xa5c>
   11a98:	tst	r1, #255	; 0xff
   11a9c:	uxtbeq	r1, r3
   11aa0:	cmpeq	r1, #47	; 0x2f
   11aa4:	bne	11ab0 <__mempcpy_chk@plt+0xa5c>
   11aa8:	sub	r2, r2, #1
   11aac:	mov	r0, r2
   11ab0:	cmp	r0, #0
   11ab4:	beq	11ba0 <__mempcpy_chk@plt+0xb4c>
   11ab8:	ldrb	r1, [r4, r0]!
   11abc:	ldrb	r0, [r5, r0]!
   11ac0:	cmp	r1, #47	; 0x2f
   11ac4:	mov	r8, r4
   11ac8:	sub	r1, r1, #47	; 0x2f
   11acc:	addeq	r8, r8, #1
   11ad0:	cmp	r0, #47	; 0x2f
   11ad4:	clz	r1, r1
   11ad8:	addeq	r5, r5, #1
   11adc:	lsr	r1, r1, #5
   11ae0:	ldrb	r0, [r5]
   11ae4:	cmp	r0, #0
   11ae8:	beq	11ba8 <__mempcpy_chk@plt+0xb54>
   11aec:	movw	r0, #26889	; 0x6909
   11af0:	add	sl, sp, #4
   11af4:	add	r9, sp, #8
   11af8:	str	r1, [sp]
   11afc:	movt	r0, #1
   11b00:	mov	r1, r9
   11b04:	mov	r2, sl
   11b08:	bl	11c24 <__mempcpy_chk@plt+0xbd0>
   11b0c:	movw	r6, #26888	; 0x6908
   11b10:	mov	r7, r0
   11b14:	movt	r6, #1
   11b18:	b	11b38 <__mempcpy_chk@plt+0xae4>
   11b1c:	mov	r0, r6
   11b20:	mov	r1, r9
   11b24:	mov	r2, sl
   11b28:	bl	11c24 <__mempcpy_chk@plt+0xbd0>
   11b2c:	and	r1, r7, #1
   11b30:	orr	r7, r1, r0
   11b34:	add	r5, r5, #1
   11b38:	ldrb	r0, [r5]
   11b3c:	cmp	r0, #47	; 0x2f
   11b40:	beq	11b1c <__mempcpy_chk@plt+0xac8>
   11b44:	cmp	r0, #0
   11b48:	bne	11b34 <__mempcpy_chk@plt+0xae0>
   11b4c:	ldr	r0, [sp]
   11b50:	and	r7, r7, #1
   11b54:	ldrb	r0, [r4, r0]
   11b58:	cmp	r0, #0
   11b5c:	beq	11c14 <__mempcpy_chk@plt+0xbc0>
   11b60:	movw	r0, #28063	; 0x6d9f
   11b64:	add	r4, sp, #8
   11b68:	add	r5, sp, #4
   11b6c:	movt	r0, #1
   11b70:	mov	r1, r4
   11b74:	mov	r2, r5
   11b78:	bl	11c24 <__mempcpy_chk@plt+0xbd0>
   11b7c:	orr	r6, r0, r7
   11b80:	mov	r0, r8
   11b84:	mov	r1, r4
   11b88:	mov	r2, r5
   11b8c:	bl	11c24 <__mempcpy_chk@plt+0xbd0>
   11b90:	orrs	r0, r6, r0
   11b94:	bne	11bd8 <__mempcpy_chk@plt+0xb84>
   11b98:	mov	r6, #1
   11b9c:	b	11c08 <__mempcpy_chk@plt+0xbb4>
   11ba0:	mov	r6, #0
   11ba4:	b	11c08 <__mempcpy_chk@plt+0xbb4>
   11ba8:	ldrb	r0, [r4, r1]
   11bac:	movw	r1, #26890	; 0x690a
   11bb0:	add	r2, sp, #4
   11bb4:	movt	r1, #1
   11bb8:	cmp	r0, #0
   11bbc:	moveq	r8, r1
   11bc0:	add	r1, sp, #8
   11bc4:	mov	r0, r8
   11bc8:	bl	11c24 <__mempcpy_chk@plt+0xbd0>
   11bcc:	mov	r6, #1
   11bd0:	cmp	r0, #0
   11bd4:	beq	11c08 <__mempcpy_chk@plt+0xbb4>
   11bd8:	movw	r1, #26892	; 0x690c
   11bdc:	mov	r0, #0
   11be0:	mov	r2, #5
   11be4:	mov	r6, #0
   11be8:	movt	r1, #1
   11bec:	bl	10e80 <dcgettext@plt>
   11bf0:	movw	r2, #26948	; 0x6944
   11bf4:	mov	r3, r0
   11bf8:	mov	r0, #0
   11bfc:	mov	r1, #36	; 0x24
   11c00:	movt	r2, #1
   11c04:	bl	10f04 <error@plt>
   11c08:	mov	r0, r6
   11c0c:	sub	sp, fp, #28
   11c10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11c14:	mov	r6, #1
   11c18:	cmp	r7, #0
   11c1c:	bne	11bd8 <__mempcpy_chk@plt+0xb84>
   11c20:	b	11c08 <__mempcpy_chk@plt+0xbb4>
   11c24:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11c28:	add	fp, sp, #24
   11c2c:	ldr	r7, [r1]
   11c30:	mov	r6, r0
   11c34:	cmp	r7, #0
   11c38:	beq	11c8c <__mempcpy_chk@plt+0xc38>
   11c3c:	mov	r0, r6
   11c40:	mov	r8, r2
   11c44:	mov	r5, r1
   11c48:	bl	10f70 <strlen@plt>
   11c4c:	ldr	r1, [r8]
   11c50:	mov	r4, r0
   11c54:	mov	r0, #1
   11c58:	cmp	r4, r1
   11c5c:	popcs	{r4, r5, r6, r7, r8, sl, fp, pc}
   11c60:	add	r2, r4, #1
   11c64:	mov	r0, r7
   11c68:	mov	r1, r6
   11c6c:	bl	10e5c <memcpy@plt>
   11c70:	ldr	r0, [r5]
   11c74:	add	r0, r0, r4
   11c78:	str	r0, [r5]
   11c7c:	ldr	r0, [r8]
   11c80:	sub	r0, r0, r4
   11c84:	str	r0, [r8]
   11c88:	b	11ca0 <__mempcpy_chk@plt+0xc4c>
   11c8c:	movw	r0, #28996	; 0x7144
   11c90:	movt	r0, #2
   11c94:	ldr	r1, [r0]
   11c98:	mov	r0, r6
   11c9c:	bl	10dfc <fputs_unlocked@plt>
   11ca0:	mov	r0, #0
   11ca4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11ca8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11cac:	add	fp, sp, #28
   11cb0:	sub	sp, sp, #180	; 0xb4
   11cb4:	sub	sp, sp, #3072	; 0xc00
   11cb8:	mov	r8, r0
   11cbc:	and	r7, r1, #3
   11cc0:	sub	r0, r1, #1
   11cc4:	tst	r0, r7
   11cc8:	beq	11ce8 <__mempcpy_chk@plt+0xc94>
   11ccc:	bl	10f7c <__errno_location@plt>
   11cd0:	mov	r1, #22
   11cd4:	mov	r4, #0
   11cd8:	str	r1, [r0]
   11cdc:	mov	r0, r4
   11ce0:	sub	sp, fp, #28
   11ce4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11ce8:	cmp	r8, #0
   11cec:	beq	11ccc <__mempcpy_chk@plt+0xc78>
   11cf0:	ldrb	r0, [r8]
   11cf4:	cmp	r0, #0
   11cf8:	beq	11d70 <__mempcpy_chk@plt+0xd1c>
   11cfc:	sub	lr, fp, #1024	; 0x400
   11d00:	mov	r4, r1
   11d04:	mov	r1, #1024	; 0x400
   11d08:	cmp	r0, #47	; 0x2f
   11d0c:	sub	r2, lr, #40	; 0x28
   11d10:	str	r1, [fp, #-1060]	; 0xfffffbdc
   11d14:	add	r2, r2, #8
   11d18:	str	r2, [sp, #12]
   11d1c:	str	r2, [fp, #-1064]	; 0xfffffbd8
   11d20:	add	r2, sp, #1184	; 0x4a0
   11d24:	add	r2, r2, #8
   11d28:	str	r2, [sp, #1184]	; 0x4a0
   11d2c:	str	r2, [sp, #16]
   11d30:	add	r2, sp, #48	; 0x30
   11d34:	str	r1, [sp, #1188]	; 0x4a4
   11d38:	add	r5, r2, #8
   11d3c:	mov	r0, r5
   11d40:	str	r5, [sp, #48]	; 0x30
   11d44:	str	r1, [sp, #52]	; 0x34
   11d48:	str	r5, [sp, #8]
   11d4c:	bne	11d7c <__mempcpy_chk@plt+0xd28>
   11d50:	mov	r1, r8
   11d54:	mov	r2, #0
   11d58:	mov	r3, #1024	; 0x400
   11d5c:	bl	11054 <__mempcpy_chk@plt>
   11d60:	mov	r6, r0
   11d64:	mov	r0, #47	; 0x2f
   11d68:	strb	r0, [r6], #1
   11d6c:	b	11d9c <__mempcpy_chk@plt+0xd48>
   11d70:	bl	10f7c <__errno_location@plt>
   11d74:	mov	r1, #2
   11d78:	b	11cd4 <__mempcpy_chk@plt+0xc80>
   11d7c:	mov	r1, #1024	; 0x400
   11d80:	bl	10f58 <getcwd@plt>
   11d84:	cmp	r0, #0
   11d88:	beq	12298 <__mempcpy_chk@plt+0x1244>
   11d8c:	mov	r0, r5
   11d90:	mov	r1, #0
   11d94:	bl	10ea4 <rawmemchr@plt>
   11d98:	mov	r6, r0
   11d9c:	ldrb	r0, [r8]
   11da0:	cmp	r0, #0
   11da4:	beq	1225c <__mempcpy_chk@plt+0x1208>
   11da8:	and	r1, r4, #4
   11dac:	add	r9, sp, #48	; 0x30
   11db0:	str	r7, [sp, #32]
   11db4:	str	r1, [sp, #40]	; 0x28
   11db8:	mov	r1, #0
   11dbc:	str	r1, [sp, #24]
   11dc0:	mov	r1, #0
   11dc4:	str	r1, [sp, #36]	; 0x24
   11dc8:	mov	r1, #0
   11dcc:	str	r1, [sp, #20]
   11dd0:	b	12204 <__mempcpy_chk@plt+0x11b0>
   11dd4:	uxtb	r0, r0
   11dd8:	cmp	r0, #46	; 0x2e
   11ddc:	ldrbeq	r0, [r8, #1]
   11de0:	cmpeq	r0, #46	; 0x2e
   11de4:	bne	11e24 <__mempcpy_chk@plt+0xdd0>
   11de8:	add	r0, r5, #1
   11dec:	cmp	r6, r0
   11df0:	bls	11f18 <__mempcpy_chk@plt+0xec4>
   11df4:	sub	r0, r6, #1
   11df8:	mov	r6, r0
   11dfc:	cmp	r0, r5
   11e00:	bls	11f18 <__mempcpy_chk@plt+0xec4>
   11e04:	mov	r0, r6
   11e08:	ldrb	r1, [r0, #-1]!
   11e0c:	cmp	r1, #47	; 0x2f
   11e10:	bne	11df8 <__mempcpy_chk@plt+0xda4>
   11e14:	b	11f18 <__mempcpy_chk@plt+0xec4>
   11e18:	uxtb	r0, r0
   11e1c:	cmp	r0, #46	; 0x2e
   11e20:	beq	11f18 <__mempcpy_chk@plt+0xec4>
   11e24:	ldrb	r0, [r6, #-1]
   11e28:	add	r4, r2, #2
   11e2c:	str	r2, [sp, #44]	; 0x2c
   11e30:	cmp	r0, #47	; 0x2f
   11e34:	movne	r0, #47	; 0x2f
   11e38:	strbne	r0, [r6], #1
   11e3c:	ldr	r0, [sp, #52]	; 0x34
   11e40:	add	r0, r5, r0
   11e44:	sub	r0, r0, r6
   11e48:	cmp	r0, r4
   11e4c:	bcs	11e84 <__mempcpy_chk@plt+0xe30>
   11e50:	mov	r0, r9
   11e54:	bl	1517c <__mempcpy_chk@plt+0x4128>
   11e58:	cmp	r0, #0
   11e5c:	beq	1235c <__mempcpy_chk@plt+0x1308>
   11e60:	sub	r0, r6, r5
   11e64:	ldr	r5, [sp, #48]	; 0x30
   11e68:	ldr	r1, [sp, #52]	; 0x34
   11e6c:	add	r6, r5, r0
   11e70:	add	r0, r5, r1
   11e74:	sub	r0, r0, r6
   11e78:	cmp	r0, r4
   11e7c:	bcc	11e50 <__mempcpy_chk@plt+0xdfc>
   11e80:	ldr	r2, [sp, #44]	; 0x2c
   11e84:	mov	r0, r6
   11e88:	mov	r1, r8
   11e8c:	mvn	r3, #0
   11e90:	bl	11054 <__mempcpy_chk@plt>
   11e94:	mov	r6, r0
   11e98:	mov	r0, #0
   11e9c:	strb	r0, [r6]
   11ea0:	ldr	r0, [sp, #40]	; 0x28
   11ea4:	cmp	r0, #0
   11ea8:	bne	11f0c <__mempcpy_chk@plt+0xeb8>
   11eac:	ldr	r0, [sp, #1188]	; 0x4a4
   11eb0:	ldr	r7, [sp, #1184]	; 0x4a0
   11eb4:	sub	r9, r0, #1
   11eb8:	mov	r0, r5
   11ebc:	mov	r1, r7
   11ec0:	mov	r2, r9
   11ec4:	bl	10ebc <readlink@plt>
   11ec8:	cmp	r0, r9
   11ecc:	blt	11ee4 <__mempcpy_chk@plt+0xe90>
   11ed0:	add	r0, sp, #1184	; 0x4a0
   11ed4:	bl	15110 <__mempcpy_chk@plt+0x40bc>
   11ed8:	cmp	r0, #0
   11edc:	bne	11eac <__mempcpy_chk@plt+0xe58>
   11ee0:	b	1235c <__mempcpy_chk@plt+0x1308>
   11ee4:	mov	r4, r0
   11ee8:	cmp	r0, #0
   11eec:	add	r9, sp, #48	; 0x30
   11ef0:	blt	11f0c <__mempcpy_chk@plt+0xeb8>
   11ef4:	ldr	r0, [sp, #24]
   11ef8:	cmp	r0, #19
   11efc:	bgt	11f90 <__mempcpy_chk@plt+0xf3c>
   11f00:	add	r0, r0, #1
   11f04:	str	r0, [sp, #24]
   11f08:	b	120f4 <__mempcpy_chk@plt+0x10a0>
   11f0c:	ldr	r7, [sp, #32]
   11f10:	cmp	r7, #2
   11f14:	bne	11f2c <__mempcpy_chk@plt+0xed8>
   11f18:	mov	r8, sl
   11f1c:	ldrb	r0, [r8]
   11f20:	cmp	r0, #0
   11f24:	bne	12204 <__mempcpy_chk@plt+0x11b0>
   11f28:	b	12264 <__mempcpy_chk@plt+0x1210>
   11f2c:	ldrb	r0, [sl]
   11f30:	cmp	r0, #47	; 0x2f
   11f34:	bne	1205c <__mempcpy_chk@plt+0x1008>
   11f38:	mov	r2, sl
   11f3c:	mov	r1, r2
   11f40:	ldrb	r3, [r2, #1]!
   11f44:	cmp	r3, #47	; 0x2f
   11f48:	beq	11f3c <__mempcpy_chk@plt+0xee8>
   11f4c:	cmp	r3, #46	; 0x2e
   11f50:	bne	12054 <__mempcpy_chk@plt+0x1000>
   11f54:	add	r2, r1, #2
   11f58:	ldrb	r3, [r2]
   11f5c:	cmp	r3, #47	; 0x2f
   11f60:	beq	11f3c <__mempcpy_chk@plt+0xee8>
   11f64:	cmp	r3, #0
   11f68:	beq	11f84 <__mempcpy_chk@plt+0xf30>
   11f6c:	cmp	r3, #46	; 0x2e
   11f70:	bne	1205c <__mempcpy_chk@plt+0x1008>
   11f74:	ldrb	r1, [r1, #3]
   11f78:	cmp	r1, #47	; 0x2f
   11f7c:	cmpne	r1, #0
   11f80:	bne	1205c <__mempcpy_chk@plt+0x1008>
   11f84:	mov	r0, #47	; 0x2f
   11f88:	strh	r0, [r6]
   11f8c:	b	12070 <__mempcpy_chk@plt+0x101c>
   11f90:	ldrb	r0, [r8]
   11f94:	cmp	r0, #0
   11f98:	beq	120f4 <__mempcpy_chk@plt+0x10a0>
   11f9c:	ldr	r9, [sp, #44]	; 0x2c
   11fa0:	mov	r0, #0
   11fa4:	movw	r1, #26890	; 0x690a
   11fa8:	add	lr, sp, #1024	; 0x400
   11fac:	movt	r1, #1
   11fb0:	strb	r0, [r6, -r9]
   11fb4:	ldrb	r0, [r5]
   11fb8:	cmp	r0, #0
   11fbc:	mov	r0, r5
   11fc0:	moveq	r0, r1
   11fc4:	add	r1, lr, #56	; 0x38
   11fc8:	bl	16254 <__mempcpy_chk@plt+0x5200>
   11fcc:	cmp	r0, #0
   11fd0:	bne	1236c <__mempcpy_chk@plt+0x1318>
   11fd4:	rsb	r0, r9, #0
   11fd8:	ldr	r9, [sp, #20]
   11fdc:	ldrb	r1, [r8]
   11fe0:	cmp	r9, #0
   11fe4:	strb	r1, [r6, r0]
   11fe8:	bne	12020 <__mempcpy_chk@plt+0xfcc>
   11fec:	movw	r0, #13648	; 0x3550
   11ff0:	movw	r2, #13504	; 0x34c0
   11ff4:	movw	r3, #13560	; 0x34f8
   11ff8:	mov	r1, #0
   11ffc:	movt	r0, #1
   12000:	movt	r2, #1
   12004:	movt	r3, #1
   12008:	str	r0, [sp]
   1200c:	mov	r0, #7
   12010:	bl	129e8 <__mempcpy_chk@plt+0x1994>
   12014:	mov	r9, r0
   12018:	cmp	r0, #0
   1201c:	beq	1235c <__mempcpy_chk@plt+0x1308>
   12020:	add	lr, sp, #1024	; 0x400
   12024:	mov	r0, r9
   12028:	mov	r1, r8
   1202c:	add	r2, lr, #56	; 0x38
   12030:	bl	124f8 <__mempcpy_chk@plt+0x14a4>
   12034:	cmp	r0, #0
   12038:	str	r9, [sp, #20]
   1203c:	beq	120e0 <__mempcpy_chk@plt+0x108c>
   12040:	ldr	r7, [sp, #32]
   12044:	cmp	r7, #2
   12048:	bne	12360 <__mempcpy_chk@plt+0x130c>
   1204c:	mov	r8, sl
   12050:	b	121c0 <__mempcpy_chk@plt+0x116c>
   12054:	cmp	r3, #0
   12058:	beq	11f84 <__mempcpy_chk@plt+0xf30>
   1205c:	ldr	r1, [sp, #40]	; 0x28
   12060:	cmp	r1, #0
   12064:	beq	12090 <__mempcpy_chk@plt+0x103c>
   12068:	cmp	r0, #0
   1206c:	bne	11f18 <__mempcpy_chk@plt+0xec4>
   12070:	mvn	r0, #99	; 0x63
   12074:	mov	r1, r5
   12078:	mov	r2, #0
   1207c:	mov	r3, #512	; 0x200
   12080:	bl	10e44 <faccessat@plt>
   12084:	cmp	r0, #0
   12088:	bne	120a0 <__mempcpy_chk@plt+0x104c>
   1208c:	b	11f18 <__mempcpy_chk@plt+0xec4>
   12090:	bl	10f7c <__errno_location@plt>
   12094:	ldr	r0, [r0]
   12098:	cmp	r0, #22
   1209c:	beq	11f18 <__mempcpy_chk@plt+0xec4>
   120a0:	mov	r4, #1
   120a4:	cmp	r7, #1
   120a8:	bne	12284 <__mempcpy_chk@plt+0x1230>
   120ac:	bl	10f7c <__errno_location@plt>
   120b0:	ldr	r0, [r0]
   120b4:	cmp	r0, #2
   120b8:	bne	12284 <__mempcpy_chk@plt+0x1230>
   120bc:	movw	r1, #28063	; 0x6d9f
   120c0:	mov	r0, sl
   120c4:	movt	r1, #1
   120c8:	bl	11048 <strspn@plt>
   120cc:	ldrb	r0, [sl, r0]
   120d0:	mov	r8, sl
   120d4:	cmp	r0, #0
   120d8:	beq	11f1c <__mempcpy_chk@plt+0xec8>
   120dc:	b	12284 <__mempcpy_chk@plt+0x1230>
   120e0:	add	lr, sp, #1024	; 0x400
   120e4:	mov	r0, r9
   120e8:	mov	r1, r8
   120ec:	add	r2, lr, #56	; 0x38
   120f0:	bl	1247c <__mempcpy_chk@plt+0x1428>
   120f4:	mov	r0, #0
   120f8:	strb	r0, [r7, r4]
   120fc:	ldr	r0, [sp, #36]	; 0x24
   12100:	ldr	r8, [fp, #-1064]	; 0xfffffbd8
   12104:	tst	r0, #1
   12108:	ldr	r0, [sp, #28]
   1210c:	subne	r0, sl, r8
   12110:	str	r0, [sp, #28]
   12114:	mov	r0, sl
   12118:	bl	10f70 <strlen@plt>
   1211c:	adds	r9, r0, r4
   12120:	str	r0, [sp, #44]	; 0x2c
   12124:	bcs	1235c <__mempcpy_chk@plt+0x1308>
   12128:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   1212c:	cmp	r0, r9
   12130:	bhi	12158 <__mempcpy_chk@plt+0x1104>
   12134:	sub	lr, fp, #1024	; 0x400
   12138:	sub	r0, lr, #40	; 0x28
   1213c:	bl	1517c <__mempcpy_chk@plt+0x4128>
   12140:	cmp	r0, #0
   12144:	beq	1235c <__mempcpy_chk@plt+0x1308>
   12148:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   1214c:	cmp	r0, r9
   12150:	bls	12134 <__mempcpy_chk@plt+0x10e0>
   12154:	ldr	r8, [fp, #-1064]	; 0xfffffbd8
   12158:	ldr	r0, [sp, #36]	; 0x24
   1215c:	ldr	r1, [sp, #44]	; 0x2c
   12160:	tst	r0, #1
   12164:	ldr	r0, [sp, #28]
   12168:	add	r2, r1, #1
   1216c:	addne	sl, r8, r0
   12170:	add	r0, r8, r4
   12174:	mov	r1, sl
   12178:	bl	10e2c <memmove@plt>
   1217c:	mov	r0, r8
   12180:	mov	r1, r7
   12184:	mov	r2, r4
   12188:	bl	10e5c <memcpy@plt>
   1218c:	ldrb	r0, [r7]
   12190:	cmp	r0, #47	; 0x2f
   12194:	bne	121c8 <__mempcpy_chk@plt+0x1174>
   12198:	mov	r0, r5
   1219c:	mov	r1, r7
   121a0:	mov	r2, #0
   121a4:	mvn	r3, #0
   121a8:	bl	11054 <__mempcpy_chk@plt>
   121ac:	mov	r6, r0
   121b0:	mov	r0, #47	; 0x2f
   121b4:	strb	r0, [r6], #1
   121b8:	mov	r0, #1
   121bc:	str	r0, [sp, #36]	; 0x24
   121c0:	add	r9, sp, #48	; 0x30
   121c4:	b	11f1c <__mempcpy_chk@plt+0xec8>
   121c8:	add	r0, r5, #1
   121cc:	mov	r1, #1
   121d0:	add	r9, sp, #48	; 0x30
   121d4:	cmp	r6, r0
   121d8:	str	r1, [sp, #36]	; 0x24
   121dc:	bls	11f1c <__mempcpy_chk@plt+0xec8>
   121e0:	sub	r0, r6, #1
   121e4:	mov	r6, r0
   121e8:	cmp	r0, r5
   121ec:	bls	11f1c <__mempcpy_chk@plt+0xec8>
   121f0:	mov	r0, r6
   121f4:	ldrb	r1, [r0, #-1]!
   121f8:	cmp	r1, #47	; 0x2f
   121fc:	bne	121e4 <__mempcpy_chk@plt+0x1190>
   12200:	b	11f1c <__mempcpy_chk@plt+0xec8>
   12204:	uxtb	r1, r0
   12208:	cmp	r1, #47	; 0x2f
   1220c:	bne	1221c <__mempcpy_chk@plt+0x11c8>
   12210:	ldrb	r0, [r8, #1]!
   12214:	cmp	r0, #47	; 0x2f
   12218:	beq	12210 <__mempcpy_chk@plt+0x11bc>
   1221c:	mov	r1, r0
   12220:	mov	sl, r8
   12224:	b	1222c <__mempcpy_chk@plt+0x11d8>
   12228:	ldrb	r1, [sl, #1]!
   1222c:	uxtb	r1, r1
   12230:	cmp	r1, #0
   12234:	cmpne	r1, #47	; 0x2f
   12238:	bne	12228 <__mempcpy_chk@plt+0x11d4>
   1223c:	sub	r2, sl, r8
   12240:	cmp	r2, #1
   12244:	beq	11e18 <__mempcpy_chk@plt+0xdc4>
   12248:	cmp	r2, #2
   1224c:	beq	11dd4 <__mempcpy_chk@plt+0xd80>
   12250:	cmp	r2, #0
   12254:	bne	11e24 <__mempcpy_chk@plt+0xdd0>
   12258:	b	12264 <__mempcpy_chk@plt+0x1210>
   1225c:	mov	r0, #0
   12260:	str	r0, [sp, #20]
   12264:	add	r0, r5, #1
   12268:	cmp	r6, r0
   1226c:	bls	12280 <__mempcpy_chk@plt+0x122c>
   12270:	mov	r0, r6
   12274:	ldrb	r1, [r0, #-1]!
   12278:	cmp	r1, #47	; 0x2f
   1227c:	moveq	r6, r0
   12280:	mov	r4, #0
   12284:	ldr	r0, [sp, #20]
   12288:	cmp	r0, #0
   1228c:	beq	122f0 <__mempcpy_chk@plt+0x129c>
   12290:	bl	12d14 <__mempcpy_chk@plt+0x1cc0>
   12294:	b	122f0 <__mempcpy_chk@plt+0x129c>
   12298:	bl	10f7c <__errno_location@plt>
   1229c:	ldr	r5, [sp, #8]
   122a0:	mov	r6, r0
   122a4:	add	r9, sp, #48	; 0x30
   122a8:	ldr	r0, [r6]
   122ac:	cmp	r0, #34	; 0x22
   122b0:	bne	122e0 <__mempcpy_chk@plt+0x128c>
   122b4:	mov	r0, r9
   122b8:	bl	15110 <__mempcpy_chk@plt+0x40bc>
   122bc:	cmp	r0, #0
   122c0:	beq	1235c <__mempcpy_chk@plt+0x1308>
   122c4:	ldr	r5, [sp, #48]	; 0x30
   122c8:	ldr	r1, [sp, #52]	; 0x34
   122cc:	mov	r0, r5
   122d0:	bl	10f58 <getcwd@plt>
   122d4:	cmp	r0, #0
   122d8:	beq	122a8 <__mempcpy_chk@plt+0x1254>
   122dc:	b	11d8c <__mempcpy_chk@plt+0xd38>
   122e0:	cmp	r0, #12
   122e4:	beq	1235c <__mempcpy_chk@plt+0x1308>
   122e8:	mov	r4, #1
   122ec:	mov	r6, r5
   122f0:	ldr	r0, [fp, #-1064]	; 0xfffffbd8
   122f4:	ldr	r1, [sp, #12]
   122f8:	cmp	r0, r1
   122fc:	beq	12304 <__mempcpy_chk@plt+0x12b0>
   12300:	bl	12544 <__mempcpy_chk@plt+0x14f0>
   12304:	ldr	r0, [sp, #1184]	; 0x4a0
   12308:	ldr	r1, [sp, #16]
   1230c:	cmp	r0, r1
   12310:	beq	12318 <__mempcpy_chk@plt+0x12c4>
   12314:	bl	12544 <__mempcpy_chk@plt+0x14f0>
   12318:	cmp	r4, #0
   1231c:	beq	1233c <__mempcpy_chk@plt+0x12e8>
   12320:	ldr	r0, [sp, #48]	; 0x30
   12324:	ldr	r1, [sp, #8]
   12328:	mov	r4, #0
   1232c:	cmp	r0, r1
   12330:	beq	11cdc <__mempcpy_chk@plt+0xc88>
   12334:	bl	12544 <__mempcpy_chk@plt+0x14f0>
   12338:	b	11cdc <__mempcpy_chk@plt+0xc88>
   1233c:	mov	r0, #0
   12340:	strb	r0, [r6], #1
   12344:	add	r0, sp, #48	; 0x30
   12348:	sub	r1, r6, r5
   1234c:	bl	150ac <__mempcpy_chk@plt+0x4058>
   12350:	mov	r4, r0
   12354:	cmp	r0, #0
   12358:	bne	11cdc <__mempcpy_chk@plt+0xc88>
   1235c:	bl	15b28 <__mempcpy_chk@plt+0x4ad4>
   12360:	bl	10f7c <__errno_location@plt>
   12364:	mov	r1, #40	; 0x28
   12368:	str	r1, [r0]
   1236c:	mov	r4, #1
   12370:	b	12284 <__mempcpy_chk@plt+0x1230>
   12374:	movw	r1, #29020	; 0x715c
   12378:	movt	r1, #2
   1237c:	str	r0, [r1]
   12380:	bx	lr
   12384:	movw	r1, #29024	; 0x7160
   12388:	movt	r1, #2
   1238c:	strb	r0, [r1]
   12390:	bx	lr
   12394:	push	{r4, r5, r6, sl, fp, lr}
   12398:	add	fp, sp, #16
   1239c:	sub	sp, sp, #8
   123a0:	movw	r0, #28996	; 0x7144
   123a4:	movt	r0, #2
   123a8:	ldr	r0, [r0]
   123ac:	bl	15c40 <__mempcpy_chk@plt+0x4bec>
   123b0:	cmp	r0, #0
   123b4:	beq	123dc <__mempcpy_chk@plt+0x1388>
   123b8:	movw	r0, #29024	; 0x7160
   123bc:	movt	r0, #2
   123c0:	ldrb	r0, [r0]
   123c4:	cmp	r0, #0
   123c8:	beq	123fc <__mempcpy_chk@plt+0x13a8>
   123cc:	bl	10f7c <__errno_location@plt>
   123d0:	ldr	r0, [r0]
   123d4:	cmp	r0, #32
   123d8:	bne	123fc <__mempcpy_chk@plt+0x13a8>
   123dc:	movw	r0, #28992	; 0x7140
   123e0:	movt	r0, #2
   123e4:	ldr	r0, [r0]
   123e8:	bl	15c40 <__mempcpy_chk@plt+0x4bec>
   123ec:	cmp	r0, #0
   123f0:	subeq	sp, fp, #16
   123f4:	popeq	{r4, r5, r6, sl, fp, pc}
   123f8:	b	1246c <__mempcpy_chk@plt+0x1418>
   123fc:	movw	r1, #26932	; 0x6934
   12400:	mov	r0, #0
   12404:	mov	r2, #5
   12408:	movt	r1, #1
   1240c:	bl	10e80 <dcgettext@plt>
   12410:	mov	r4, r0
   12414:	movw	r0, #29020	; 0x715c
   12418:	movt	r0, #2
   1241c:	ldr	r6, [r0]
   12420:	bl	10f7c <__errno_location@plt>
   12424:	ldr	r5, [r0]
   12428:	cmp	r6, #0
   1242c:	bne	12448 <__mempcpy_chk@plt+0x13f4>
   12430:	movw	r2, #26948	; 0x6944
   12434:	mov	r0, #0
   12438:	mov	r1, r5
   1243c:	mov	r3, r4
   12440:	movt	r2, #1
   12444:	b	12468 <__mempcpy_chk@plt+0x1414>
   12448:	mov	r0, r6
   1244c:	bl	14d34 <__mempcpy_chk@plt+0x3ce0>
   12450:	movw	r2, #26944	; 0x6940
   12454:	mov	r3, r0
   12458:	str	r4, [sp]
   1245c:	mov	r0, #0
   12460:	mov	r1, r5
   12464:	movt	r2, #1
   12468:	bl	10f04 <error@plt>
   1246c:	movw	r0, #28908	; 0x70ec
   12470:	movt	r0, #2
   12474:	ldr	r0, [r0]
   12478:	bl	10e50 <_exit@plt>
   1247c:	push	{r4, r5, r6, r7, fp, lr}
   12480:	add	fp, sp, #16
   12484:	cmp	r0, #0
   12488:	popeq	{r4, r5, r6, r7, fp, pc}
   1248c:	mov	r5, r0
   12490:	mov	r0, #24
   12494:	mov	r6, r2
   12498:	mov	r7, r1
   1249c:	bl	156d8 <__mempcpy_chk@plt+0x4684>
   124a0:	mov	r4, r0
   124a4:	mov	r0, r7
   124a8:	bl	15ae8 <__mempcpy_chk@plt+0x4a94>
   124ac:	str	r0, [r4]
   124b0:	ldrd	r0, [r6, #96]	; 0x60
   124b4:	str	r1, [r4, #12]
   124b8:	str	r0, [r4, #8]
   124bc:	ldrd	r0, [r6]
   124c0:	str	r1, [r4, #20]
   124c4:	str	r0, [r4, #16]
   124c8:	mov	r0, r5
   124cc:	mov	r1, r4
   124d0:	bl	13370 <__mempcpy_chk@plt+0x231c>
   124d4:	cmp	r0, #0
   124d8:	beq	124f4 <__mempcpy_chk@plt+0x14a0>
   124dc:	cmp	r0, r4
   124e0:	beq	124f0 <__mempcpy_chk@plt+0x149c>
   124e4:	mov	r0, r4
   124e8:	pop	{r4, r5, r6, r7, fp, lr}
   124ec:	b	13550 <__mempcpy_chk@plt+0x24fc>
   124f0:	pop	{r4, r5, r6, r7, fp, pc}
   124f4:	bl	15b28 <__mempcpy_chk@plt+0x4ad4>
   124f8:	cmp	r0, #0
   124fc:	moveq	r0, #0
   12500:	bxeq	lr
   12504:	push	{r4, r5, fp, lr}
   12508:	add	fp, sp, #8
   1250c:	sub	sp, sp, #24
   12510:	str	r1, [sp]
   12514:	mov	r1, sp
   12518:	ldrd	r4, [r2, #96]	; 0x60
   1251c:	str	r5, [sp, #12]
   12520:	str	r4, [sp, #8]
   12524:	ldrd	r2, [r2]
   12528:	str	r3, [sp, #20]
   1252c:	str	r2, [sp, #16]
   12530:	bl	12748 <__mempcpy_chk@plt+0x16f4>
   12534:	cmp	r0, #0
   12538:	movwne	r0, #1
   1253c:	sub	sp, fp, #8
   12540:	pop	{r4, r5, fp, pc}
   12544:	push	{r4, r5, r6, sl, fp, lr}
   12548:	add	fp, sp, #16
   1254c:	mov	r4, r0
   12550:	bl	10f7c <__errno_location@plt>
   12554:	ldr	r6, [r0]
   12558:	mov	r5, r0
   1255c:	mov	r0, r4
   12560:	bl	10e38 <free@plt>
   12564:	str	r6, [r5]
   12568:	pop	{r4, r5, r6, sl, fp, pc}
   1256c:	andeq	r0, r0, r0
   12570:	ldr	r0, [r0, #8]
   12574:	bx	lr
   12578:	ldr	r0, [r0, #12]
   1257c:	bx	lr
   12580:	ldr	r0, [r0, #16]
   12584:	bx	lr
   12588:	ldm	r0, {r2, ip}
   1258c:	mov	r0, #0
   12590:	cmp	r2, ip
   12594:	bxcs	lr
   12598:	mov	r0, #0
   1259c:	ldr	r1, [r2]
   125a0:	cmp	r1, #0
   125a4:	beq	125c8 <__mempcpy_chk@plt+0x1574>
   125a8:	mov	r3, #0
   125ac:	mov	r1, r2
   125b0:	ldr	r1, [r1, #4]
   125b4:	add	r3, r3, #1
   125b8:	cmp	r1, #0
   125bc:	bne	125b0 <__mempcpy_chk@plt+0x155c>
   125c0:	cmp	r3, r0
   125c4:	movhi	r0, r3
   125c8:	add	r2, r2, #8
   125cc:	cmp	r2, ip
   125d0:	bcc	1259c <__mempcpy_chk@plt+0x1548>
   125d4:	bx	lr
   125d8:	push	{fp, lr}
   125dc:	mov	fp, sp
   125e0:	ldm	r0, {r3, ip}
   125e4:	mov	lr, #0
   125e8:	mov	r1, #0
   125ec:	cmp	r3, ip
   125f0:	bcs	1262c <__mempcpy_chk@plt+0x15d8>
   125f4:	mov	r1, #0
   125f8:	mov	lr, #0
   125fc:	ldr	r2, [r3]
   12600:	cmp	r2, #0
   12604:	beq	12620 <__mempcpy_chk@plt+0x15cc>
   12608:	mov	r2, r3
   1260c:	ldr	r2, [r2, #4]
   12610:	add	r1, r1, #1
   12614:	cmp	r2, #0
   12618:	bne	1260c <__mempcpy_chk@plt+0x15b8>
   1261c:	add	lr, lr, #1
   12620:	add	r3, r3, #8
   12624:	cmp	r3, ip
   12628:	bcc	125fc <__mempcpy_chk@plt+0x15a8>
   1262c:	ldr	r2, [r0, #12]
   12630:	cmp	lr, r2
   12634:	bne	1264c <__mempcpy_chk@plt+0x15f8>
   12638:	ldr	r2, [r0, #16]
   1263c:	mov	r0, #1
   12640:	cmp	r1, r2
   12644:	movne	r0, #0
   12648:	pop	{fp, pc}
   1264c:	mov	r0, #0
   12650:	pop	{fp, pc}
   12654:	nop	{0}
   12658:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1265c:	add	fp, sp, #24
   12660:	sub	sp, sp, #8
   12664:	ldr	r6, [r0]
   12668:	ldmib	r0, {r2, r7, r8}
   1266c:	ldr	r3, [r0, #16]
   12670:	mov	r4, r1
   12674:	mov	r5, #0
   12678:	cmp	r6, r2
   1267c:	bcs	126bc <__mempcpy_chk@plt+0x1668>
   12680:	mov	r5, #0
   12684:	ldr	r0, [r6]
   12688:	cmp	r0, #0
   1268c:	beq	126b0 <__mempcpy_chk@plt+0x165c>
   12690:	mov	r0, #0
   12694:	mov	r1, r6
   12698:	ldr	r1, [r1, #4]
   1269c:	add	r0, r0, #1
   126a0:	cmp	r1, #0
   126a4:	bne	12698 <__mempcpy_chk@plt+0x1644>
   126a8:	cmp	r0, r5
   126ac:	movhi	r5, r0
   126b0:	add	r6, r6, #8
   126b4:	cmp	r6, r2
   126b8:	bcc	12684 <__mempcpy_chk@plt+0x1630>
   126bc:	movw	r2, #26951	; 0x6947
   126c0:	mov	r0, r4
   126c4:	mov	r1, #1
   126c8:	movt	r2, #1
   126cc:	bl	10fb8 <__fprintf_chk@plt>
   126d0:	movw	r2, #26975	; 0x695f
   126d4:	mov	r0, r4
   126d8:	mov	r1, #1
   126dc:	mov	r3, r7
   126e0:	movt	r2, #1
   126e4:	bl	10fb8 <__fprintf_chk@plt>
   126e8:	vldr	d16, [pc, #80]	; 12740 <__mempcpy_chk@plt+0x16ec>
   126ec:	vmov	s0, r8
   126f0:	movw	r2, #26999	; 0x6977
   126f4:	mov	r0, r4
   126f8:	mov	r1, #1
   126fc:	mov	r3, r8
   12700:	vcvt.f64.u32	d17, s0
   12704:	vmov	s0, r7
   12708:	movt	r2, #1
   1270c:	vcvt.f64.u32	d18, s0
   12710:	vmul.f64	d16, d17, d16
   12714:	vdiv.f64	d16, d16, d18
   12718:	vstr	d16, [sp]
   1271c:	bl	10fb8 <__fprintf_chk@plt>
   12720:	movw	r2, #27032	; 0x6998
   12724:	mov	r0, r4
   12728:	mov	r1, #1
   1272c:	mov	r3, r5
   12730:	movt	r2, #1
   12734:	sub	sp, fp, #24
   12738:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1273c:	b	10fb8 <__fprintf_chk@plt>
   12740:	andeq	r0, r0, r0
   12744:	subsmi	r0, r9, r0
   12748:	push	{r4, r5, r6, r7, fp, lr}
   1274c:	add	fp, sp, #16
   12750:	mov	r4, r1
   12754:	ldr	r1, [r0, #8]
   12758:	ldr	r2, [r0, #24]
   1275c:	mov	r5, r0
   12760:	mov	r0, r4
   12764:	blx	r2
   12768:	ldr	r1, [r5, #8]
   1276c:	cmp	r0, r1
   12770:	bcs	127d0 <__mempcpy_chk@plt+0x177c>
   12774:	ldr	r7, [r5]
   12778:	mov	r6, #0
   1277c:	ldr	r1, [r7, r0, lsl #3]!
   12780:	cmp	r1, #0
   12784:	cmpne	r7, #0
   12788:	bne	127b8 <__mempcpy_chk@plt+0x1764>
   1278c:	mov	r0, r6
   12790:	pop	{r4, r5, r6, r7, fp, pc}
   12794:	ldr	r2, [r5, #28]
   12798:	mov	r0, r4
   1279c:	blx	r2
   127a0:	cmp	r0, #0
   127a4:	bne	127c8 <__mempcpy_chk@plt+0x1774>
   127a8:	ldr	r7, [r7, #4]
   127ac:	cmp	r7, #0
   127b0:	beq	1278c <__mempcpy_chk@plt+0x1738>
   127b4:	ldr	r1, [r7]
   127b8:	cmp	r1, r4
   127bc:	bne	12794 <__mempcpy_chk@plt+0x1740>
   127c0:	mov	r6, r4
   127c4:	b	1278c <__mempcpy_chk@plt+0x1738>
   127c8:	ldr	r6, [r7]
   127cc:	b	1278c <__mempcpy_chk@plt+0x1738>
   127d0:	bl	11030 <abort@plt>
   127d4:	ldr	r1, [r0, #16]
   127d8:	cmp	r1, #0
   127dc:	moveq	r0, #0
   127e0:	bxeq	lr
   127e4:	ldm	r0, {r1, r2}
   127e8:	b	127f8 <__mempcpy_chk@plt+0x17a4>
   127ec:	ldr	r0, [r1], #8
   127f0:	cmp	r0, #0
   127f4:	bxne	lr
   127f8:	cmp	r1, r2
   127fc:	bcc	127ec <__mempcpy_chk@plt+0x1798>
   12800:	push	{fp, lr}
   12804:	mov	fp, sp
   12808:	bl	11030 <abort@plt>
   1280c:	push	{r4, r5, fp, lr}
   12810:	add	fp, sp, #8
   12814:	mov	r5, r1
   12818:	ldr	r1, [r0, #8]
   1281c:	ldr	r2, [r0, #24]
   12820:	mov	r4, r0
   12824:	mov	r0, r5
   12828:	blx	r2
   1282c:	ldr	r1, [r4, #8]
   12830:	cmp	r0, r1
   12834:	bcs	12890 <__mempcpy_chk@plt+0x183c>
   12838:	ldr	r1, [r4]
   1283c:	add	r2, r1, r0, lsl #3
   12840:	ldr	r3, [r2]
   12844:	ldr	r2, [r2, #4]
   12848:	cmp	r3, r5
   1284c:	beq	1285c <__mempcpy_chk@plt+0x1808>
   12850:	cmp	r2, #0
   12854:	bne	12840 <__mempcpy_chk@plt+0x17ec>
   12858:	b	12868 <__mempcpy_chk@plt+0x1814>
   1285c:	cmp	r2, #0
   12860:	ldrne	r0, [r2]
   12864:	popne	{r4, r5, fp, pc}
   12868:	ldr	r2, [r4, #4]
   1286c:	add	r0, r1, r0, lsl #3
   12870:	add	r1, r0, #8
   12874:	cmp	r1, r2
   12878:	movcs	r0, #0
   1287c:	popcs	{r4, r5, fp, pc}
   12880:	ldr	r0, [r1], #8
   12884:	cmp	r0, #0
   12888:	popne	{r4, r5, fp, pc}
   1288c:	b	12874 <__mempcpy_chk@plt+0x1820>
   12890:	bl	11030 <abort@plt>
   12894:	push	{r4, r5, fp, lr}
   12898:	add	fp, sp, #8
   1289c:	ldm	r0, {r5, lr}
   128a0:	mov	ip, r0
   128a4:	mov	r0, #0
   128a8:	cmp	r5, lr
   128ac:	bcs	128f8 <__mempcpy_chk@plt+0x18a4>
   128b0:	mov	r0, #0
   128b4:	ldr	r3, [r5]
   128b8:	cmp	r3, #0
   128bc:	cmpne	r5, #0
   128c0:	beq	128ec <__mempcpy_chk@plt+0x1898>
   128c4:	mov	r3, r5
   128c8:	cmp	r0, r2
   128cc:	popcs	{r4, r5, fp, pc}
   128d0:	ldr	r4, [r3]
   128d4:	str	r4, [r1, r0, lsl #2]
   128d8:	add	r0, r0, #1
   128dc:	ldr	r3, [r3, #4]
   128e0:	cmp	r3, #0
   128e4:	bne	128c8 <__mempcpy_chk@plt+0x1874>
   128e8:	ldr	lr, [ip, #4]
   128ec:	add	r5, r5, #8
   128f0:	cmp	r5, lr
   128f4:	bcc	128b4 <__mempcpy_chk@plt+0x1860>
   128f8:	pop	{r4, r5, fp, pc}
   128fc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12900:	add	fp, sp, #24
   12904:	mov	r5, r1
   12908:	ldr	r4, [r0]
   1290c:	ldr	r1, [r0, #4]
   12910:	mov	r6, #0
   12914:	cmp	r4, r1
   12918:	bcs	1298c <__mempcpy_chk@plt+0x1938>
   1291c:	mov	r9, r2
   12920:	mov	r8, r0
   12924:	mov	r6, #0
   12928:	b	12970 <__mempcpy_chk@plt+0x191c>
   1292c:	mov	r1, r9
   12930:	blx	r5
   12934:	cmp	r0, #0
   12938:	beq	1298c <__mempcpy_chk@plt+0x1938>
   1293c:	mov	r7, r4
   12940:	ldr	r7, [r7, #4]
   12944:	add	r6, r6, #1
   12948:	cmp	r7, #0
   1294c:	beq	12968 <__mempcpy_chk@plt+0x1914>
   12950:	ldr	r0, [r7]
   12954:	mov	r1, r9
   12958:	blx	r5
   1295c:	cmp	r0, #0
   12960:	bne	12940 <__mempcpy_chk@plt+0x18ec>
   12964:	b	1298c <__mempcpy_chk@plt+0x1938>
   12968:	ldr	r1, [r8, #4]
   1296c:	b	12980 <__mempcpy_chk@plt+0x192c>
   12970:	ldr	r0, [r4]
   12974:	cmp	r0, #0
   12978:	cmpne	r4, #0
   1297c:	bne	1292c <__mempcpy_chk@plt+0x18d8>
   12980:	add	r4, r4, #8
   12984:	cmp	r4, r1
   12988:	bcc	12970 <__mempcpy_chk@plt+0x191c>
   1298c:	mov	r0, r6
   12990:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12994:	ldrb	r2, [r0]
   12998:	cmp	r2, #0
   1299c:	moveq	r0, #0
   129a0:	bxeq	lr
   129a4:	add	r3, r0, #1
   129a8:	mov	r0, #0
   129ac:	rsb	r0, r0, r0, lsl #5
   129b0:	uxtab	r0, r0, r2
   129b4:	udiv	r2, r0, r1
   129b8:	mls	r0, r2, r1, r0
   129bc:	ldrb	r2, [r3], #1
   129c0:	cmp	r2, #0
   129c4:	bne	129ac <__mempcpy_chk@plt+0x1958>
   129c8:	bx	lr
   129cc:	movw	r1, #27056	; 0x69b0
   129d0:	movt	r1, #1
   129d4:	vld1.32	{d16-d17}, [r1]!
   129d8:	ldr	r1, [r1]
   129dc:	vst1.32	{d16-d17}, [r0]!
   129e0:	str	r1, [r0]
   129e4:	bx	lr
   129e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   129ec:	add	fp, sp, #28
   129f0:	sub	sp, sp, #4
   129f4:	movw	sl, #10972	; 0x2adc
   129f8:	movw	r5, #10952	; 0x2ac8
   129fc:	cmp	r3, #0
   12a00:	mov	r8, r0
   12a04:	mov	r0, #40	; 0x28
   12a08:	mov	r7, r1
   12a0c:	movt	sl, #1
   12a10:	movt	r5, #1
   12a14:	movne	sl, r3
   12a18:	cmp	r2, #0
   12a1c:	movne	r5, r2
   12a20:	bl	15bc0 <__mempcpy_chk@plt+0x4b6c>
   12a24:	mov	r9, #0
   12a28:	cmp	r0, #0
   12a2c:	beq	12abc <__mempcpy_chk@plt+0x1a68>
   12a30:	movw	r6, #27056	; 0x69b0
   12a34:	cmp	r7, #0
   12a38:	mov	r4, r0
   12a3c:	movt	r6, #1
   12a40:	movne	r6, r7
   12a44:	str	r6, [r0, #20]
   12a48:	bl	12aec <__mempcpy_chk@plt+0x1a98>
   12a4c:	cmp	r0, #0
   12a50:	beq	12ab4 <__mempcpy_chk@plt+0x1a60>
   12a54:	mov	r0, r8
   12a58:	mov	r1, r6
   12a5c:	bl	12b98 <__mempcpy_chk@plt+0x1b44>
   12a60:	cmp	r0, #0
   12a64:	str	r0, [r4, #8]
   12a68:	beq	12ab4 <__mempcpy_chk@plt+0x1a60>
   12a6c:	mov	r1, #8
   12a70:	bl	15b6c <__mempcpy_chk@plt+0x4b18>
   12a74:	cmp	r0, #0
   12a78:	str	r0, [r4]
   12a7c:	beq	12ab4 <__mempcpy_chk@plt+0x1a60>
   12a80:	ldr	r1, [fp, #8]
   12a84:	mov	r2, #0
   12a88:	mov	r9, r4
   12a8c:	str	r2, [r4, #12]
   12a90:	str	r2, [r4, #16]
   12a94:	str	r5, [r4, #24]
   12a98:	str	sl, [r4, #28]
   12a9c:	str	r1, [r4, #32]
   12aa0:	str	r2, [r4, #36]	; 0x24
   12aa4:	ldr	r1, [r4, #8]
   12aa8:	add	r0, r0, r1, lsl #3
   12aac:	str	r0, [r4, #4]
   12ab0:	b	12abc <__mempcpy_chk@plt+0x1a68>
   12ab4:	mov	r0, r4
   12ab8:	bl	12544 <__mempcpy_chk@plt+0x14f0>
   12abc:	mov	r0, r9
   12ac0:	sub	sp, fp, #28
   12ac4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ac8:	ror	r2, r0, #3
   12acc:	udiv	r2, r2, r1
   12ad0:	mul	r1, r2, r1
   12ad4:	rsb	r0, r1, r0, ror #3
   12ad8:	bx	lr
   12adc:	sub	r0, r0, r1
   12ae0:	clz	r0, r0
   12ae4:	lsr	r0, r0, #5
   12ae8:	bx	lr
   12aec:	ldr	r3, [r0, #20]
   12af0:	movw	r2, #27056	; 0x69b0
   12af4:	mov	r1, r0
   12af8:	mov	r0, #1
   12afc:	movt	r2, #1
   12b00:	cmp	r3, r2
   12b04:	beq	12b88 <__mempcpy_chk@plt+0x1b34>
   12b08:	vldr	s2, [pc, #124]	; 12b8c <__mempcpy_chk@plt+0x1b38>
   12b0c:	vldr	s0, [r3, #8]
   12b10:	vcmpe.f32	s0, s2
   12b14:	vmrs	APSR_nzcv, fpscr
   12b18:	ble	12b80 <__mempcpy_chk@plt+0x1b2c>
   12b1c:	vldr	s4, [pc, #108]	; 12b90 <__mempcpy_chk@plt+0x1b3c>
   12b20:	vcmpe.f32	s0, s4
   12b24:	vmrs	APSR_nzcv, fpscr
   12b28:	bpl	12b80 <__mempcpy_chk@plt+0x1b2c>
   12b2c:	vldr	s4, [pc, #96]	; 12b94 <__mempcpy_chk@plt+0x1b40>
   12b30:	vldr	s6, [r3, #12]
   12b34:	vcmpe.f32	s6, s4
   12b38:	vmrs	APSR_nzcv, fpscr
   12b3c:	ble	12b80 <__mempcpy_chk@plt+0x1b2c>
   12b40:	vldr	s4, [r3]
   12b44:	vcmpe.f32	s4, #0.0
   12b48:	vmrs	APSR_nzcv, fpscr
   12b4c:	blt	12b80 <__mempcpy_chk@plt+0x1b2c>
   12b50:	vadd.f32	s2, s4, s2
   12b54:	vcmpe.f32	s2, s0
   12b58:	vmrs	APSR_nzcv, fpscr
   12b5c:	bpl	12b80 <__mempcpy_chk@plt+0x1b2c>
   12b60:	vldr	s0, [r3, #4]
   12b64:	vmov.f32	s4, #112	; 0x3f800000  1.0
   12b68:	vcmpe.f32	s0, s4
   12b6c:	vmrs	APSR_nzcv, fpscr
   12b70:	bhi	12b80 <__mempcpy_chk@plt+0x1b2c>
   12b74:	vcmpe.f32	s2, s0
   12b78:	vmrs	APSR_nzcv, fpscr
   12b7c:	bxmi	lr
   12b80:	mov	r0, #0
   12b84:	str	r2, [r1, #20]
   12b88:	bx	lr
   12b8c:	stclcc	12, cr12, [ip, #820]	; 0x334
   12b90:	svccc	0x00666666
   12b94:	svccc	0x008ccccd
   12b98:	ldrb	r2, [r1, #16]
   12b9c:	cmp	r2, #0
   12ba0:	bne	12bd0 <__mempcpy_chk@plt+0x1b7c>
   12ba4:	vldr	s0, [r1, #8]
   12ba8:	vldr	s4, [pc, #160]	; 12c50 <__mempcpy_chk@plt+0x1bfc>
   12bac:	vmov	s2, r0
   12bb0:	mov	r0, #0
   12bb4:	vcvt.f32.u32	s2, s2
   12bb8:	vdiv.f32	s2, s2, s0
   12bbc:	vcmpe.f32	s2, s4
   12bc0:	vcvt.u32.f32	s0, s2
   12bc4:	vmrs	APSR_nzcv, fpscr
   12bc8:	bxge	lr
   12bcc:	vmov	r0, s0
   12bd0:	cmp	r0, #10
   12bd4:	movls	r0, #10
   12bd8:	orr	r0, r0, #1
   12bdc:	b	12c34 <__mempcpy_chk@plt+0x1be0>
   12be0:	mov	r1, #3
   12be4:	cmp	r0, #10
   12be8:	bcc	12c20 <__mempcpy_chk@plt+0x1bcc>
   12bec:	mov	r1, #3
   12bf0:	mov	ip, #9
   12bf4:	mov	r2, #12
   12bf8:	udiv	r3, r0, r1
   12bfc:	mls	r3, r3, r1, r0
   12c00:	cmp	r3, #0
   12c04:	beq	12c20 <__mempcpy_chk@plt+0x1bcc>
   12c08:	add	r3, ip, r2
   12c0c:	add	r2, r2, #8
   12c10:	add	r1, r1, #2
   12c14:	add	ip, r3, #4
   12c18:	cmp	ip, r0
   12c1c:	bcc	12bf8 <__mempcpy_chk@plt+0x1ba4>
   12c20:	udiv	r2, r0, r1
   12c24:	mls	r1, r2, r1, r0
   12c28:	cmp	r1, #0
   12c2c:	bne	12c44 <__mempcpy_chk@plt+0x1bf0>
   12c30:	add	r0, r0, #2
   12c34:	cmn	r0, #1
   12c38:	bne	12be0 <__mempcpy_chk@plt+0x1b8c>
   12c3c:	mov	r0, #0
   12c40:	bx	lr
   12c44:	cmp	r0, #536870912	; 0x20000000
   12c48:	movcs	r0, #0
   12c4c:	bx	lr
   12c50:	svcmi	0x00800000
   12c54:	push	{r4, r5, r6, r7, fp, lr}
   12c58:	add	fp, sp, #16
   12c5c:	mov	r4, r0
   12c60:	ldr	r5, [r0]
   12c64:	ldr	r0, [r0, #4]
   12c68:	cmp	r5, r0
   12c6c:	bcs	12d04 <__mempcpy_chk@plt+0x1cb0>
   12c70:	mov	r6, #0
   12c74:	ldr	r1, [r5]
   12c78:	cmp	r1, #0
   12c7c:	beq	12cf8 <__mempcpy_chk@plt+0x1ca4>
   12c80:	ldr	r1, [r4, #32]
   12c84:	ldr	r7, [r5, #4]
   12c88:	cmp	r1, #0
   12c8c:	mov	r0, r1
   12c90:	movwne	r0, #1
   12c94:	cmp	r7, #0
   12c98:	beq	12cdc <__mempcpy_chk@plt+0x1c88>
   12c9c:	tst	r0, #1
   12ca0:	beq	12cb0 <__mempcpy_chk@plt+0x1c5c>
   12ca4:	ldr	r0, [r7]
   12ca8:	blx	r1
   12cac:	ldr	r1, [r4, #32]
   12cb0:	str	r6, [r7]
   12cb4:	cmp	r1, #0
   12cb8:	ldr	r0, [r4, #36]	; 0x24
   12cbc:	ldr	r2, [r7, #4]
   12cc0:	str	r0, [r7, #4]
   12cc4:	mov	r0, r1
   12cc8:	str	r7, [r4, #36]	; 0x24
   12ccc:	mov	r7, r2
   12cd0:	movwne	r0, #1
   12cd4:	cmp	r2, #0
   12cd8:	bne	12c9c <__mempcpy_chk@plt+0x1c48>
   12cdc:	cmp	r0, #0
   12ce0:	beq	12cec <__mempcpy_chk@plt+0x1c98>
   12ce4:	ldr	r0, [r5]
   12ce8:	blx	r1
   12cec:	str	r6, [r5]
   12cf0:	str	r6, [r5, #4]
   12cf4:	ldr	r0, [r4, #4]
   12cf8:	add	r5, r5, #8
   12cfc:	cmp	r5, r0
   12d00:	bcc	12c74 <__mempcpy_chk@plt+0x1c20>
   12d04:	mov	r0, #0
   12d08:	str	r0, [r4, #12]
   12d0c:	str	r0, [r4, #16]
   12d10:	pop	{r4, r5, r6, r7, fp, pc}
   12d14:	push	{r4, r5, r6, sl, fp, lr}
   12d18:	add	fp, sp, #16
   12d1c:	mov	r4, r0
   12d20:	ldr	r0, [r0, #32]
   12d24:	cmp	r0, #0
   12d28:	ldrne	r0, [r4, #16]
   12d2c:	cmpne	r0, #0
   12d30:	beq	12d88 <__mempcpy_chk@plt+0x1d34>
   12d34:	ldr	r5, [r4]
   12d38:	ldr	r1, [r4, #4]
   12d3c:	b	12d80 <__mempcpy_chk@plt+0x1d2c>
   12d40:	ldr	r0, [r5]
   12d44:	cmp	r0, #0
   12d48:	cmpne	r5, #0
   12d4c:	beq	12d7c <__mempcpy_chk@plt+0x1d28>
   12d50:	ldr	r1, [r4, #32]
   12d54:	blx	r1
   12d58:	ldr	r6, [r5, #4]
   12d5c:	b	12d70 <__mempcpy_chk@plt+0x1d1c>
   12d60:	ldr	r1, [r4, #32]
   12d64:	ldr	r0, [r6]
   12d68:	blx	r1
   12d6c:	ldr	r6, [r6, #4]
   12d70:	cmp	r6, #0
   12d74:	bne	12d60 <__mempcpy_chk@plt+0x1d0c>
   12d78:	ldr	r1, [r4, #4]
   12d7c:	add	r5, r5, #8
   12d80:	cmp	r5, r1
   12d84:	bcc	12d40 <__mempcpy_chk@plt+0x1cec>
   12d88:	ldr	r5, [r4]
   12d8c:	ldr	r1, [r4, #4]
   12d90:	b	12dbc <__mempcpy_chk@plt+0x1d68>
   12d94:	ldr	r0, [r5, #4]
   12d98:	cmp	r0, #0
   12d9c:	beq	12db8 <__mempcpy_chk@plt+0x1d64>
   12da0:	ldr	r6, [r0, #4]
   12da4:	bl	12544 <__mempcpy_chk@plt+0x14f0>
   12da8:	cmp	r6, #0
   12dac:	mov	r0, r6
   12db0:	bne	12da0 <__mempcpy_chk@plt+0x1d4c>
   12db4:	ldr	r1, [r4, #4]
   12db8:	add	r5, r5, #8
   12dbc:	cmp	r5, r1
   12dc0:	bcc	12d94 <__mempcpy_chk@plt+0x1d40>
   12dc4:	ldr	r0, [r4, #36]	; 0x24
   12dc8:	cmp	r0, #0
   12dcc:	beq	12de4 <__mempcpy_chk@plt+0x1d90>
   12dd0:	ldr	r5, [r0, #4]
   12dd4:	bl	12544 <__mempcpy_chk@plt+0x14f0>
   12dd8:	cmp	r5, #0
   12ddc:	mov	r0, r5
   12de0:	bne	12dd0 <__mempcpy_chk@plt+0x1d7c>
   12de4:	ldr	r0, [r4]
   12de8:	bl	12544 <__mempcpy_chk@plt+0x14f0>
   12dec:	mov	r0, r4
   12df0:	pop	{r4, r5, r6, sl, fp, lr}
   12df4:	b	12544 <__mempcpy_chk@plt+0x14f0>
   12df8:	push	{r4, r5, r6, r7, fp, lr}
   12dfc:	add	fp, sp, #16
   12e00:	sub	sp, sp, #40	; 0x28
   12e04:	mov	r7, r0
   12e08:	mov	r2, r1
   12e0c:	mov	r4, r0
   12e10:	ldr	r1, [r7, #20]!
   12e14:	mov	r0, r2
   12e18:	bl	12b98 <__mempcpy_chk@plt+0x1b44>
   12e1c:	mov	r5, #0
   12e20:	cmp	r0, #0
   12e24:	beq	12eb8 <__mempcpy_chk@plt+0x1e64>
   12e28:	mov	r6, r0
   12e2c:	ldr	r0, [r4, #8]
   12e30:	cmp	r6, r0
   12e34:	beq	12eb4 <__mempcpy_chk@plt+0x1e60>
   12e38:	mov	r0, r6
   12e3c:	mov	r1, #8
   12e40:	bl	15b6c <__mempcpy_chk@plt+0x4b18>
   12e44:	cmp	r0, #0
   12e48:	str	r0, [sp]
   12e4c:	beq	12eb8 <__mempcpy_chk@plt+0x1e64>
   12e50:	mov	r1, #0
   12e54:	add	r0, r0, r6, lsl #3
   12e58:	str	r6, [sp, #8]
   12e5c:	mov	r5, sp
   12e60:	mov	r2, #0
   12e64:	str	r1, [sp, #12]
   12e68:	str	r1, [sp, #16]
   12e6c:	str	r0, [sp, #4]
   12e70:	add	r0, r5, #20
   12e74:	mov	r1, r4
   12e78:	vld1.32	{d16-d17}, [r7]
   12e7c:	vst1.32	{d16-d17}, [r0]
   12e80:	ldr	r0, [r4, #36]	; 0x24
   12e84:	str	r0, [sp, #36]	; 0x24
   12e88:	mov	r0, r5
   12e8c:	bl	12f10 <__mempcpy_chk@plt+0x1ebc>
   12e90:	cmp	r0, #0
   12e94:	beq	12ec4 <__mempcpy_chk@plt+0x1e70>
   12e98:	ldr	r0, [r4]
   12e9c:	bl	12544 <__mempcpy_chk@plt+0x14f0>
   12ea0:	mov	r0, #36	; 0x24
   12ea4:	vld1.32	{d16-d17}, [r5], r0
   12ea8:	vst1.32	{d16-d17}, [r4], r0
   12eac:	ldr	r0, [r5]
   12eb0:	str	r0, [r4]
   12eb4:	mov	r5, #1
   12eb8:	mov	r0, r5
   12ebc:	sub	sp, fp, #16
   12ec0:	pop	{r4, r5, r6, r7, fp, pc}
   12ec4:	ldr	r0, [sp, #36]	; 0x24
   12ec8:	mov	r1, sp
   12ecc:	mov	r2, #1
   12ed0:	str	r0, [r4, #36]	; 0x24
   12ed4:	mov	r0, r4
   12ed8:	bl	12f10 <__mempcpy_chk@plt+0x1ebc>
   12edc:	cmp	r0, #0
   12ee0:	beq	12f0c <__mempcpy_chk@plt+0x1eb8>
   12ee4:	mov	r1, sp
   12ee8:	mov	r0, r4
   12eec:	mov	r2, #0
   12ef0:	mov	r5, #0
   12ef4:	bl	12f10 <__mempcpy_chk@plt+0x1ebc>
   12ef8:	cmp	r0, #0
   12efc:	beq	12f0c <__mempcpy_chk@plt+0x1eb8>
   12f00:	ldr	r0, [sp]
   12f04:	bl	12544 <__mempcpy_chk@plt+0x14f0>
   12f08:	b	12eb8 <__mempcpy_chk@plt+0x1e64>
   12f0c:	bl	11030 <abort@plt>
   12f10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f14:	add	fp, sp, #28
   12f18:	sub	sp, sp, #12
   12f1c:	ldr	sl, [r1]
   12f20:	str	r1, [sp, #8]
   12f24:	ldr	r1, [r1, #4]
   12f28:	mov	r7, r0
   12f2c:	mov	r0, #1
   12f30:	str	r2, [sp, #4]
   12f34:	cmp	sl, r1
   12f38:	bcs	13094 <__mempcpy_chk@plt+0x2040>
   12f3c:	add	r8, r7, #36	; 0x24
   12f40:	mov	r9, #0
   12f44:	ldr	r4, [sl]
   12f48:	cmp	r4, #0
   12f4c:	beq	1307c <__mempcpy_chk@plt+0x2028>
   12f50:	ldr	r5, [sl, #4]
   12f54:	cmp	r5, #0
   12f58:	beq	12fd0 <__mempcpy_chk@plt+0x1f7c>
   12f5c:	ldr	r1, [r7, #8]
   12f60:	ldr	r4, [r5]
   12f64:	ldr	r2, [r7, #24]
   12f68:	mov	r0, r4
   12f6c:	blx	r2
   12f70:	ldr	r1, [r7, #8]
   12f74:	cmp	r0, r1
   12f78:	bcs	130a4 <__mempcpy_chk@plt+0x2050>
   12f7c:	ldr	r3, [r7]
   12f80:	ldr	r2, [r5, #4]
   12f84:	ldr	r6, [r3, r0, lsl #3]
   12f88:	cmp	r6, #0
   12f8c:	beq	12f9c <__mempcpy_chk@plt+0x1f48>
   12f90:	add	r0, r3, r0, lsl #3
   12f94:	add	r0, r0, #4
   12f98:	b	12fb4 <__mempcpy_chk@plt+0x1f60>
   12f9c:	str	r4, [r3, r0, lsl #3]
   12fa0:	ldr	r0, [r7, #12]
   12fa4:	add	r0, r0, #1
   12fa8:	str	r0, [r7, #12]
   12fac:	mov	r0, r8
   12fb0:	str	r9, [r5]
   12fb4:	ldr	r3, [r0]
   12fb8:	cmp	r2, #0
   12fbc:	str	r3, [r5, #4]
   12fc0:	str	r5, [r0]
   12fc4:	mov	r5, r2
   12fc8:	bne	12f60 <__mempcpy_chk@plt+0x1f0c>
   12fcc:	ldr	r4, [sl]
   12fd0:	ldr	r0, [sp, #4]
   12fd4:	str	r9, [sl, #4]
   12fd8:	cmp	r0, #0
   12fdc:	bne	1307c <__mempcpy_chk@plt+0x2028>
   12fe0:	ldr	r1, [r7, #8]
   12fe4:	ldr	r2, [r7, #24]
   12fe8:	mov	r0, r4
   12fec:	blx	r2
   12ff0:	mov	r5, r0
   12ff4:	ldr	r0, [r7, #8]
   12ff8:	cmp	r5, r0
   12ffc:	bcs	130a4 <__mempcpy_chk@plt+0x2050>
   13000:	ldr	r6, [r7]
   13004:	ldr	r0, [r6, r5, lsl #3]
   13008:	cmp	r0, #0
   1300c:	beq	1302c <__mempcpy_chk@plt+0x1fd8>
   13010:	ldr	r0, [r8]
   13014:	cmp	r0, #0
   13018:	beq	13040 <__mempcpy_chk@plt+0x1fec>
   1301c:	mov	r1, r0
   13020:	ldr	r2, [r1, #4]!
   13024:	str	r2, [r8]
   13028:	b	13054 <__mempcpy_chk@plt+0x2000>
   1302c:	str	r4, [r6, r5, lsl #3]
   13030:	ldr	r0, [r7, #12]
   13034:	add	r0, r0, #1
   13038:	str	r0, [r7, #12]
   1303c:	b	13068 <__mempcpy_chk@plt+0x2014>
   13040:	mov	r0, #8
   13044:	bl	15bc0 <__mempcpy_chk@plt+0x4b6c>
   13048:	cmp	r0, #0
   1304c:	beq	1309c <__mempcpy_chk@plt+0x2048>
   13050:	add	r1, r0, #4
   13054:	str	r4, [r0]
   13058:	add	r2, r6, r5, lsl #3
   1305c:	ldr	r3, [r2, #4]
   13060:	str	r3, [r1]
   13064:	str	r0, [r2, #4]
   13068:	ldr	r1, [sp, #8]
   1306c:	str	r9, [sl]
   13070:	ldr	r0, [r1, #12]
   13074:	sub	r0, r0, #1
   13078:	str	r0, [r1, #12]
   1307c:	ldr	r0, [sp, #8]
   13080:	add	sl, sl, #8
   13084:	ldr	r0, [r0, #4]
   13088:	cmp	sl, r0
   1308c:	bcc	12f44 <__mempcpy_chk@plt+0x1ef0>
   13090:	mov	r0, #1
   13094:	sub	sp, fp, #28
   13098:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1309c:	mov	r0, #0
   130a0:	b	13094 <__mempcpy_chk@plt+0x2040>
   130a4:	bl	11030 <abort@plt>
   130a8:	push	{r4, r5, r6, r7, fp, lr}
   130ac:	add	fp, sp, #16
   130b0:	sub	sp, sp, #8
   130b4:	cmp	r1, #0
   130b8:	beq	13238 <__mempcpy_chk@plt+0x21e4>
   130bc:	mov	r7, r2
   130c0:	add	r2, sp, #4
   130c4:	mov	r3, #0
   130c8:	mov	r5, r1
   130cc:	mov	r4, r0
   130d0:	mov	r6, #0
   130d4:	bl	13240 <__mempcpy_chk@plt+0x21ec>
   130d8:	cmp	r0, #0
   130dc:	beq	130ec <__mempcpy_chk@plt+0x2098>
   130e0:	cmp	r7, #0
   130e4:	strne	r0, [r7]
   130e8:	b	13224 <__mempcpy_chk@plt+0x21d0>
   130ec:	ldr	r0, [r4, #20]
   130f0:	vldr	s0, [r4, #8]
   130f4:	vldr	s2, [r4, #12]
   130f8:	vldr	s4, [r0, #8]
   130fc:	vcvt.f32.u32	s0, s0
   13100:	vcvt.f32.u32	s2, s2
   13104:	vmul.f32	s0, s4, s0
   13108:	vcmpe.f32	s0, s2
   1310c:	vmrs	APSR_nzcv, fpscr
   13110:	bpl	131a4 <__mempcpy_chk@plt+0x2150>
   13114:	mov	r0, r4
   13118:	bl	12aec <__mempcpy_chk@plt+0x1a98>
   1311c:	vldr	s0, [r4, #8]
   13120:	ldr	r0, [r4, #20]
   13124:	vldr	s4, [r4, #12]
   13128:	vcvt.f32.u32	s2, s0
   1312c:	vldr	s0, [r0, #8]
   13130:	vcvt.f32.u32	s4, s4
   13134:	vmul.f32	s6, s0, s2
   13138:	vcmpe.f32	s6, s4
   1313c:	vmrs	APSR_nzcv, fpscr
   13140:	bpl	131a4 <__mempcpy_chk@plt+0x2150>
   13144:	vldr	s4, [r0, #12]
   13148:	ldrb	r0, [r0, #16]
   1314c:	mvn	r6, #0
   13150:	vmul.f32	s2, s4, s2
   13154:	vldr	s4, [pc, #224]	; 1323c <__mempcpy_chk@plt+0x21e8>
   13158:	cmp	r0, #0
   1315c:	vmul.f32	s0, s0, s2
   13160:	vseleq.f32	s0, s0, s2
   13164:	vcmpe.f32	s0, s4
   13168:	vmrs	APSR_nzcv, fpscr
   1316c:	bge	13224 <__mempcpy_chk@plt+0x21d0>
   13170:	vcvt.u32.f32	s0, s0
   13174:	mov	r0, r4
   13178:	vmov	r1, s0
   1317c:	bl	12df8 <__mempcpy_chk@plt+0x1da4>
   13180:	cmp	r0, #0
   13184:	beq	13224 <__mempcpy_chk@plt+0x21d0>
   13188:	add	r2, sp, #4
   1318c:	mov	r0, r4
   13190:	mov	r1, r5
   13194:	mov	r3, #0
   13198:	bl	13240 <__mempcpy_chk@plt+0x21ec>
   1319c:	cmp	r0, #0
   131a0:	bne	13238 <__mempcpy_chk@plt+0x21e4>
   131a4:	ldr	r6, [sp, #4]
   131a8:	ldr	r0, [r6]
   131ac:	cmp	r0, #0
   131b0:	beq	131d0 <__mempcpy_chk@plt+0x217c>
   131b4:	ldr	r0, [r4, #36]	; 0x24
   131b8:	cmp	r0, #0
   131bc:	beq	131f0 <__mempcpy_chk@plt+0x219c>
   131c0:	mov	r1, r0
   131c4:	ldr	r2, [r1, #4]!
   131c8:	str	r2, [r4, #36]	; 0x24
   131cc:	b	13204 <__mempcpy_chk@plt+0x21b0>
   131d0:	str	r5, [r6]
   131d4:	ldr	r0, [r4, #12]
   131d8:	ldr	r1, [r4, #16]
   131dc:	add	r0, r0, #1
   131e0:	add	r1, r1, #1
   131e4:	str	r0, [r4, #12]
   131e8:	str	r1, [r4, #16]
   131ec:	b	13220 <__mempcpy_chk@plt+0x21cc>
   131f0:	mov	r0, #8
   131f4:	bl	15bc0 <__mempcpy_chk@plt+0x4b6c>
   131f8:	cmp	r0, #0
   131fc:	beq	13230 <__mempcpy_chk@plt+0x21dc>
   13200:	add	r1, r0, #4
   13204:	str	r5, [r0]
   13208:	ldr	r2, [r6, #4]
   1320c:	str	r2, [r1]
   13210:	str	r0, [r6, #4]
   13214:	ldr	r0, [r4, #16]
   13218:	add	r0, r0, #1
   1321c:	str	r0, [r4, #16]
   13220:	mov	r6, #1
   13224:	mov	r0, r6
   13228:	sub	sp, fp, #16
   1322c:	pop	{r4, r5, r6, r7, fp, pc}
   13230:	mvn	r6, #0
   13234:	b	13224 <__mempcpy_chk@plt+0x21d0>
   13238:	bl	11030 <abort@plt>
   1323c:	svcmi	0x00800000
   13240:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13244:	add	fp, sp, #24
   13248:	mov	r7, r2
   1324c:	mov	r4, r1
   13250:	ldr	r1, [r0, #8]
   13254:	ldr	r2, [r0, #24]
   13258:	mov	r5, r0
   1325c:	mov	r8, r3
   13260:	mov	r0, r4
   13264:	blx	r2
   13268:	ldr	r1, [r5, #8]
   1326c:	cmp	r0, r1
   13270:	bcs	1336c <__mempcpy_chk@plt+0x2318>
   13274:	ldr	r1, [r5]
   13278:	add	r6, r1, r0, lsl #3
   1327c:	str	r6, [r7]
   13280:	ldr	r1, [r1, r0, lsl #3]
   13284:	cmp	r1, #0
   13288:	beq	13320 <__mempcpy_chk@plt+0x22cc>
   1328c:	cmp	r1, r4
   13290:	beq	132ac <__mempcpy_chk@plt+0x2258>
   13294:	ldr	r2, [r5, #28]
   13298:	mov	r0, r4
   1329c:	blx	r2
   132a0:	cmp	r0, #0
   132a4:	beq	132e0 <__mempcpy_chk@plt+0x228c>
   132a8:	ldr	r4, [r6]
   132ac:	cmp	r8, #0
   132b0:	beq	13324 <__mempcpy_chk@plt+0x22d0>
   132b4:	ldr	r0, [r6, #4]
   132b8:	cmp	r0, #0
   132bc:	beq	1332c <__mempcpy_chk@plt+0x22d8>
   132c0:	ldm	r0, {r1, r2}
   132c4:	stm	r6, {r1, r2}
   132c8:	mov	r1, #0
   132cc:	str	r1, [r0]
   132d0:	ldr	r1, [r5, #36]	; 0x24
   132d4:	str	r1, [r0, #4]
   132d8:	str	r0, [r5, #36]	; 0x24
   132dc:	b	13324 <__mempcpy_chk@plt+0x22d0>
   132e0:	ldr	r0, [r6, #4]!
   132e4:	cmp	r0, #0
   132e8:	beq	13320 <__mempcpy_chk@plt+0x22cc>
   132ec:	ldr	r1, [r0]
   132f0:	cmp	r1, r4
   132f4:	beq	13338 <__mempcpy_chk@plt+0x22e4>
   132f8:	ldr	r2, [r5, #28]
   132fc:	mov	r0, r4
   13300:	blx	r2
   13304:	ldr	r1, [r6]
   13308:	cmp	r0, #0
   1330c:	bne	13340 <__mempcpy_chk@plt+0x22ec>
   13310:	ldr	r0, [r1, #4]!
   13314:	cmp	r0, #0
   13318:	mov	r6, r1
   1331c:	bne	132ec <__mempcpy_chk@plt+0x2298>
   13320:	mov	r4, #0
   13324:	mov	r0, r4
   13328:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1332c:	mov	r0, #0
   13330:	str	r0, [r6]
   13334:	b	13324 <__mempcpy_chk@plt+0x22d0>
   13338:	mov	r1, r0
   1333c:	b	13344 <__mempcpy_chk@plt+0x22f0>
   13340:	ldr	r4, [r1]
   13344:	cmp	r8, #0
   13348:	beq	13324 <__mempcpy_chk@plt+0x22d0>
   1334c:	ldr	r0, [r1, #4]
   13350:	str	r0, [r6]
   13354:	mov	r0, #0
   13358:	str	r0, [r1]
   1335c:	ldr	r0, [r5, #36]	; 0x24
   13360:	str	r0, [r1, #4]
   13364:	str	r1, [r5, #36]	; 0x24
   13368:	b	13324 <__mempcpy_chk@plt+0x22d0>
   1336c:	bl	11030 <abort@plt>
   13370:	push	{r4, sl, fp, lr}
   13374:	add	fp, sp, #8
   13378:	sub	sp, sp, #8
   1337c:	add	r2, sp, #4
   13380:	mov	r4, r1
   13384:	bl	130a8 <__mempcpy_chk@plt+0x2054>
   13388:	cmn	r0, #1
   1338c:	beq	133a0 <__mempcpy_chk@plt+0x234c>
   13390:	ldr	r1, [sp, #4]
   13394:	cmp	r0, #0
   13398:	moveq	r4, r1
   1339c:	b	133a4 <__mempcpy_chk@plt+0x2350>
   133a0:	mov	r4, #0
   133a4:	mov	r0, r4
   133a8:	sub	sp, fp, #8
   133ac:	pop	{r4, sl, fp, pc}
   133b0:	push	{r4, r5, r6, sl, fp, lr}
   133b4:	add	fp, sp, #16
   133b8:	sub	sp, sp, #8
   133bc:	add	r2, sp, #4
   133c0:	mov	r3, #1
   133c4:	mov	r4, r0
   133c8:	bl	13240 <__mempcpy_chk@plt+0x21ec>
   133cc:	mov	r5, r0
   133d0:	cmp	r0, #0
   133d4:	beq	134b0 <__mempcpy_chk@plt+0x245c>
   133d8:	ldr	r0, [r4, #16]
   133dc:	sub	r0, r0, #1
   133e0:	str	r0, [r4, #16]
   133e4:	ldr	r0, [sp, #4]
   133e8:	ldr	r0, [r0]
   133ec:	cmp	r0, #0
   133f0:	bne	134b0 <__mempcpy_chk@plt+0x245c>
   133f4:	ldr	r0, [r4, #12]
   133f8:	vldr	s0, [r4, #8]
   133fc:	sub	r0, r0, #1
   13400:	str	r0, [r4, #12]
   13404:	vmov	s4, r0
   13408:	ldr	r1, [r4, #20]
   1340c:	vldr	s2, [r1]
   13410:	vcvt.f32.u32	s0, s0
   13414:	vcvt.f32.u32	s4, s4
   13418:	vmul.f32	s0, s2, s0
   1341c:	vcmpe.f32	s0, s4
   13420:	vmrs	APSR_nzcv, fpscr
   13424:	ble	134b0 <__mempcpy_chk@plt+0x245c>
   13428:	mov	r0, r4
   1342c:	bl	12aec <__mempcpy_chk@plt+0x1a98>
   13430:	vldr	s0, [r4, #8]
   13434:	ldr	r0, [r4, #20]
   13438:	vldr	s2, [r4, #12]
   1343c:	vcvt.f32.u32	s0, s0
   13440:	vldr	s4, [r0]
   13444:	vcvt.f32.u32	s2, s2
   13448:	vmul.f32	s4, s4, s0
   1344c:	vcmpe.f32	s4, s2
   13450:	vmrs	APSR_nzcv, fpscr
   13454:	ble	134b0 <__mempcpy_chk@plt+0x245c>
   13458:	ldrb	r1, [r0, #16]
   1345c:	vldr	s2, [r0, #4]
   13460:	cmp	r1, #0
   13464:	vmul.f32	s0, s2, s0
   13468:	vldreq	s2, [r0, #8]
   1346c:	mov	r0, r4
   13470:	vmuleq.f32	s0, s0, s2
   13474:	vcvt.u32.f32	s0, s0
   13478:	vmov	r1, s0
   1347c:	bl	12df8 <__mempcpy_chk@plt+0x1da4>
   13480:	cmp	r0, #0
   13484:	bne	134b0 <__mempcpy_chk@plt+0x245c>
   13488:	ldr	r0, [r4, #36]	; 0x24
   1348c:	cmp	r0, #0
   13490:	beq	134a8 <__mempcpy_chk@plt+0x2454>
   13494:	ldr	r6, [r0, #4]
   13498:	bl	12544 <__mempcpy_chk@plt+0x14f0>
   1349c:	cmp	r6, #0
   134a0:	mov	r0, r6
   134a4:	bne	13494 <__mempcpy_chk@plt+0x2440>
   134a8:	mov	r0, #0
   134ac:	str	r0, [r4, #36]	; 0x24
   134b0:	mov	r0, r5
   134b4:	sub	sp, fp, #16
   134b8:	pop	{r4, r5, r6, sl, fp, pc}
   134bc:	b	133b0 <__mempcpy_chk@plt+0x235c>
   134c0:	push	{r4, r5, fp, lr}
   134c4:	add	fp, sp, #8
   134c8:	mov	r5, r0
   134cc:	ldr	r0, [r0]
   134d0:	mov	r4, r1
   134d4:	bl	15e5c <__mempcpy_chk@plt+0x4e08>
   134d8:	ldrd	r2, [r5, #8]
   134dc:	eor	r0, r2, r0
   134e0:	mov	r1, r3
   134e4:	mov	r2, r4
   134e8:	mov	r3, #0
   134ec:	bl	16064 <__mempcpy_chk@plt+0x5010>
   134f0:	mov	r0, r2
   134f4:	pop	{r4, r5, fp, pc}
   134f8:	push	{r4, r5, r6, r7, fp, lr}
   134fc:	add	fp, sp, #16
   13500:	ldrd	r2, [r1, #8]
   13504:	ldrd	r4, [r0, #8]
   13508:	eor	r3, r5, r3
   1350c:	eor	r2, r4, r2
   13510:	orrs	r2, r2, r3
   13514:	mov	r2, #0
   13518:	bne	13548 <__mempcpy_chk@plt+0x24f4>
   1351c:	ldrd	r4, [r1, #16]
   13520:	ldrd	r6, [r0, #16]
   13524:	eor	r3, r7, r5
   13528:	eor	r7, r6, r4
   1352c:	orrs	r3, r7, r3
   13530:	bne	13548 <__mempcpy_chk@plt+0x24f4>
   13534:	ldr	r1, [r1]
   13538:	ldr	r0, [r0]
   1353c:	bl	10e14 <strcmp@plt>
   13540:	clz	r0, r0
   13544:	lsr	r2, r0, #5
   13548:	mov	r0, r2
   1354c:	pop	{r4, r5, r6, r7, fp, pc}
   13550:	push	{r4, sl, fp, lr}
   13554:	add	fp, sp, #8
   13558:	mov	r4, r0
   1355c:	ldr	r0, [r0]
   13560:	bl	12544 <__mempcpy_chk@plt+0x14f0>
   13564:	mov	r0, r4
   13568:	pop	{r4, sl, fp, lr}
   1356c:	b	12544 <__mempcpy_chk@plt+0x14f0>
   13570:	push	{r4, r5, fp, lr}
   13574:	add	fp, sp, #8
   13578:	cmp	r0, #0
   1357c:	beq	13610 <__mempcpy_chk@plt+0x25bc>
   13580:	mov	r1, #47	; 0x2f
   13584:	mov	r4, r0
   13588:	bl	10fe8 <strrchr@plt>
   1358c:	cmp	r0, #0
   13590:	mov	r5, r4
   13594:	addne	r5, r0, #1
   13598:	sub	r0, r5, r4
   1359c:	cmp	r0, #7
   135a0:	blt	135f4 <__mempcpy_chk@plt+0x25a0>
   135a4:	movw	r1, #27132	; 0x69fc
   135a8:	sub	r0, r5, #7
   135ac:	mov	r2, #7
   135b0:	movt	r1, #1
   135b4:	bl	11024 <strncmp@plt>
   135b8:	cmp	r0, #0
   135bc:	bne	135f4 <__mempcpy_chk@plt+0x25a0>
   135c0:	movw	r1, #27140	; 0x6a04
   135c4:	mov	r0, r5
   135c8:	mov	r2, #3
   135cc:	movt	r1, #1
   135d0:	bl	11024 <strncmp@plt>
   135d4:	cmp	r0, #0
   135d8:	beq	135e4 <__mempcpy_chk@plt+0x2590>
   135dc:	mov	r4, r5
   135e0:	b	135f4 <__mempcpy_chk@plt+0x25a0>
   135e4:	movw	r0, #28976	; 0x7130
   135e8:	add	r4, r5, #3
   135ec:	movt	r0, #2
   135f0:	str	r4, [r0]
   135f4:	movw	r0, #28980	; 0x7134
   135f8:	movt	r0, #2
   135fc:	str	r4, [r0]
   13600:	movw	r0, #29028	; 0x7164
   13604:	movt	r0, #2
   13608:	str	r4, [r0]
   1360c:	pop	{r4, r5, fp, pc}
   13610:	movw	r0, #28992	; 0x7140
   13614:	movt	r0, #2
   13618:	ldr	r1, [r0]
   1361c:	movw	r0, #27076	; 0x69c4
   13620:	movt	r0, #1
   13624:	bl	11018 <fputs@plt>
   13628:	bl	11030 <abort@plt>
   1362c:	push	{r4, r5, r6, sl, fp, lr}
   13630:	add	fp, sp, #16
   13634:	mov	r4, r0
   13638:	movw	r0, #29032	; 0x7168
   1363c:	movt	r0, #2
   13640:	cmp	r4, #0
   13644:	moveq	r4, r0
   13648:	bl	10f7c <__errno_location@plt>
   1364c:	ldr	r6, [r0]
   13650:	mov	r5, r0
   13654:	mov	r0, r4
   13658:	mov	r1, #48	; 0x30
   1365c:	bl	15a28 <__mempcpy_chk@plt+0x49d4>
   13660:	str	r6, [r5]
   13664:	pop	{r4, r5, r6, sl, fp, pc}
   13668:	movw	r1, #29032	; 0x7168
   1366c:	cmp	r0, #0
   13670:	movt	r1, #2
   13674:	movne	r1, r0
   13678:	ldr	r0, [r1]
   1367c:	bx	lr
   13680:	movw	r2, #29032	; 0x7168
   13684:	cmp	r0, #0
   13688:	movt	r2, #2
   1368c:	movne	r2, r0
   13690:	str	r1, [r2]
   13694:	bx	lr
   13698:	movw	r3, #29032	; 0x7168
   1369c:	cmp	r0, #0
   136a0:	movt	r3, #2
   136a4:	movne	r3, r0
   136a8:	ubfx	r0, r1, #5, #3
   136ac:	and	r1, r1, #31
   136b0:	add	r0, r3, r0, lsl #2
   136b4:	ldr	r3, [r0, #8]
   136b8:	eor	r2, r2, r3, lsr r1
   136bc:	and	r2, r2, #1
   136c0:	eor	r2, r3, r2, lsl r1
   136c4:	str	r2, [r0, #8]
   136c8:	mov	r0, #1
   136cc:	and	r0, r0, r3, lsr r1
   136d0:	bx	lr
   136d4:	movw	r2, #29032	; 0x7168
   136d8:	cmp	r0, #0
   136dc:	movt	r2, #2
   136e0:	movne	r2, r0
   136e4:	ldr	r0, [r2, #4]
   136e8:	str	r1, [r2, #4]
   136ec:	bx	lr
   136f0:	movw	r3, #29032	; 0x7168
   136f4:	cmp	r0, #0
   136f8:	movt	r3, #2
   136fc:	movne	r3, r0
   13700:	cmp	r1, #0
   13704:	mov	r0, #10
   13708:	cmpne	r2, #0
   1370c:	str	r0, [r3]
   13710:	bne	13720 <__mempcpy_chk@plt+0x26cc>
   13714:	push	{fp, lr}
   13718:	mov	fp, sp
   1371c:	bl	11030 <abort@plt>
   13720:	str	r1, [r3, #40]	; 0x28
   13724:	str	r2, [r3, #44]	; 0x2c
   13728:	bx	lr
   1372c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13730:	add	fp, sp, #28
   13734:	sub	sp, sp, #20
   13738:	mov	r7, r0
   1373c:	ldr	r0, [fp, #8]
   13740:	movw	r5, #29032	; 0x7168
   13744:	mov	r8, r3
   13748:	mov	r9, r2
   1374c:	mov	sl, r1
   13750:	movt	r5, #2
   13754:	cmp	r0, #0
   13758:	movne	r5, r0
   1375c:	bl	10f7c <__errno_location@plt>
   13760:	mov	r4, r0
   13764:	ldm	r5, {r0, r1}
   13768:	ldr	r2, [r5, #40]	; 0x28
   1376c:	ldr	r3, [r5, #44]	; 0x2c
   13770:	add	r5, r5, #8
   13774:	ldr	r6, [r4]
   13778:	stm	sp, {r0, r1, r5}
   1377c:	str	r2, [sp, #12]
   13780:	str	r3, [sp, #16]
   13784:	mov	r0, r7
   13788:	mov	r1, sl
   1378c:	mov	r2, r9
   13790:	mov	r3, r8
   13794:	bl	137a4 <__mempcpy_chk@plt+0x2750>
   13798:	str	r6, [r4]
   1379c:	sub	sp, fp, #28
   137a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   137a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   137a8:	add	fp, sp, #28
   137ac:	sub	sp, sp, #156	; 0x9c
   137b0:	str	r0, [fp, #-56]	; 0xffffffc8
   137b4:	ldr	r0, [fp, #12]
   137b8:	mov	r4, r1
   137bc:	str	r3, [sp, #80]	; 0x50
   137c0:	str	r2, [fp, #-84]	; 0xffffffac
   137c4:	and	r1, r0, #4
   137c8:	str	r1, [sp, #24]
   137cc:	and	r1, r0, #1
   137d0:	str	r1, [sp, #28]
   137d4:	ubfx	r7, r0, #1, #1
   137d8:	bl	10ed4 <__ctype_get_mb_cur_max@plt>
   137dc:	str	r0, [sp, #32]
   137e0:	ldr	r0, [fp, #24]
   137e4:	ldr	r9, [fp, #8]
   137e8:	mov	r2, #0
   137ec:	mov	r1, #0
   137f0:	mov	r5, #0
   137f4:	str	r2, [sp, #52]	; 0x34
   137f8:	mov	r2, #1
   137fc:	str	r0, [sp, #72]	; 0x48
   13800:	ldr	r0, [fp, #20]
   13804:	str	r0, [sp, #64]	; 0x40
   13808:	mov	r0, #0
   1380c:	str	r0, [sp, #92]	; 0x5c
   13810:	mov	r0, #0
   13814:	str	r0, [fp, #-76]	; 0xffffffb4
   13818:	mov	r0, #0
   1381c:	cmp	r9, #10
   13820:	str	r1, [sp, #68]	; 0x44
   13824:	bhi	14824 <__mempcpy_chk@plt+0x37d0>
   13828:	add	r1, pc, #28
   1382c:	ldr	ip, [fp, #-84]	; 0xffffffac
   13830:	ldr	lr, [sp, #80]	; 0x50
   13834:	mov	r6, r4
   13838:	mov	r8, #0
   1383c:	mov	r3, #1
   13840:	mov	sl, #0
   13844:	mov	r4, r2
   13848:	ldr	pc, [r1, r9, lsl #2]
   1384c:	andeq	r3, r1, ip, lsl r9
   13850:	andeq	r3, r1, r8, asr r9
   13854:	andeq	r3, r1, ip, lsr #18
   13858:	andeq	r3, r1, r4, lsl r9
   1385c:	andeq	r3, r1, ip, asr #18
   13860:	andeq	r3, r1, r4, lsr #19
   13864:	andeq	r3, r1, ip, lsr r9
   13868:	andeq	r3, r1, r4, lsl #20
   1386c:	andeq	r3, r1, r8, ror r8
   13870:	andeq	r3, r1, r8, ror r8
   13874:	andeq	r3, r1, r0, lsr #17
   13878:	movw	r0, #27224	; 0x6a58
   1387c:	mov	r1, r9
   13880:	movt	r0, #1
   13884:	bl	14f8c <__mempcpy_chk@plt+0x3f38>
   13888:	str	r0, [sp, #64]	; 0x40
   1388c:	movw	r0, #27226	; 0x6a5a
   13890:	mov	r1, r9
   13894:	movt	r0, #1
   13898:	bl	14f8c <__mempcpy_chk@plt+0x3f38>
   1389c:	str	r0, [sp, #72]	; 0x48
   138a0:	mov	r8, #0
   138a4:	mov	sl, r7
   138a8:	tst	r7, #1
   138ac:	str	r5, [fp, #-48]	; 0xffffffd0
   138b0:	bne	138ec <__mempcpy_chk@plt+0x2898>
   138b4:	ldr	r0, [sp, #64]	; 0x40
   138b8:	ldrb	r0, [r0]
   138bc:	cmp	r0, #0
   138c0:	beq	138ec <__mempcpy_chk@plt+0x2898>
   138c4:	ldr	r1, [sp, #64]	; 0x40
   138c8:	mov	r8, #0
   138cc:	add	r1, r1, #1
   138d0:	cmp	r8, r6
   138d4:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   138d8:	strbcc	r0, [r2, r8]
   138dc:	ldrb	r0, [r1, r8]
   138e0:	add	r8, r8, #1
   138e4:	cmp	r0, #0
   138e8:	bne	138d0 <__mempcpy_chk@plt+0x287c>
   138ec:	ldr	r7, [sp, #72]	; 0x48
   138f0:	mov	r0, r7
   138f4:	bl	10f70 <strlen@plt>
   138f8:	ldr	ip, [fp, #-84]	; 0xffffffac
   138fc:	ldr	lr, [sp, #80]	; 0x50
   13900:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13904:	str	r0, [fp, #-76]	; 0xffffffb4
   13908:	str	r7, [sp, #92]	; 0x5c
   1390c:	mov	r3, #1
   13910:	b	13a04 <__mempcpy_chk@plt+0x29b0>
   13914:	mov	r0, #1
   13918:	b	13958 <__mempcpy_chk@plt+0x2904>
   1391c:	mov	r9, #0
   13920:	mov	r8, #0
   13924:	mov	r3, r0
   13928:	b	13a00 <__mempcpy_chk@plt+0x29ac>
   1392c:	tst	r7, #1
   13930:	bne	13958 <__mempcpy_chk@plt+0x2904>
   13934:	mov	r3, r0
   13938:	b	13980 <__mempcpy_chk@plt+0x292c>
   1393c:	mov	r0, #1
   13940:	mov	r8, #0
   13944:	mov	r9, #5
   13948:	b	139b8 <__mempcpy_chk@plt+0x2964>
   1394c:	mov	r3, #1
   13950:	tst	r7, #1
   13954:	beq	13980 <__mempcpy_chk@plt+0x292c>
   13958:	mov	r1, #1
   1395c:	mov	r8, #0
   13960:	mov	r9, #2
   13964:	mov	r3, r0
   13968:	mov	sl, #1
   1396c:	str	r1, [fp, #-76]	; 0xffffffb4
   13970:	movw	r1, #27226	; 0x6a5a
   13974:	movt	r1, #1
   13978:	str	r1, [sp, #92]	; 0x5c
   1397c:	b	13a04 <__mempcpy_chk@plt+0x29b0>
   13980:	cmp	r6, #0
   13984:	mov	r8, #1
   13988:	mov	r9, #2
   1398c:	ldrne	r1, [fp, #-56]	; 0xffffffc8
   13990:	movne	r0, #39	; 0x27
   13994:	strbne	r0, [r1]
   13998:	movw	r0, #27226	; 0x6a5a
   1399c:	movt	r0, #1
   139a0:	b	139f4 <__mempcpy_chk@plt+0x29a0>
   139a4:	mov	r9, #5
   139a8:	tst	r7, #1
   139ac:	beq	139d4 <__mempcpy_chk@plt+0x2980>
   139b0:	mov	r0, #1
   139b4:	mov	r8, #0
   139b8:	str	r0, [fp, #-76]	; 0xffffffb4
   139bc:	movw	r0, #27222	; 0x6a56
   139c0:	mov	r3, #1
   139c4:	mov	sl, #1
   139c8:	movt	r0, #1
   139cc:	str	r0, [sp, #92]	; 0x5c
   139d0:	b	13a04 <__mempcpy_chk@plt+0x29b0>
   139d4:	cmp	r6, #0
   139d8:	mov	r8, #1
   139dc:	mov	r3, #1
   139e0:	ldrne	r1, [fp, #-56]	; 0xffffffc8
   139e4:	movne	r0, #34	; 0x22
   139e8:	strbne	r0, [r1]
   139ec:	movw	r0, #27222	; 0x6a56
   139f0:	movt	r0, #1
   139f4:	str	r0, [sp, #92]	; 0x5c
   139f8:	mov	r0, #1
   139fc:	str	r0, [fp, #-76]	; 0xffffffb4
   13a00:	mov	sl, #0
   13a04:	ldr	r0, [fp, #16]
   13a08:	mov	r7, #0
   13a0c:	str	r9, [fp, #-64]	; 0xffffffc0
   13a10:	str	sl, [fp, #-72]	; 0xffffffb8
   13a14:	str	r3, [sp, #84]	; 0x54
   13a18:	cmp	r0, #0
   13a1c:	movwne	r0, #1
   13a20:	and	r0, r0, sl
   13a24:	str	r0, [fp, #-88]	; 0xffffffa8
   13a28:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13a2c:	cmp	r0, #0
   13a30:	movwne	r0, #1
   13a34:	subs	r2, r9, #2
   13a38:	and	r1, r0, sl
   13a3c:	str	r2, [fp, #-80]	; 0xffffffb0
   13a40:	and	r1, r3, r1
   13a44:	str	r1, [sp, #44]	; 0x2c
   13a48:	clz	r1, r2
   13a4c:	lsr	r1, r1, #5
   13a50:	and	r1, r1, sl
   13a54:	str	r1, [sp, #56]	; 0x38
   13a58:	mov	r1, r2
   13a5c:	eor	r2, sl, #1
   13a60:	movwne	r1, #1
   13a64:	str	r2, [sp, #88]	; 0x58
   13a68:	orr	r2, r1, r2
   13a6c:	and	r1, r1, r3
   13a70:	and	r0, r0, r1
   13a74:	str	r2, [sp, #60]	; 0x3c
   13a78:	str	r1, [fp, #-68]	; 0xffffffbc
   13a7c:	str	r0, [fp, #-60]	; 0xffffffc4
   13a80:	eor	r0, r3, #1
   13a84:	str	r0, [sp, #48]	; 0x30
   13a88:	cmn	lr, #1
   13a8c:	beq	13a9c <__mempcpy_chk@plt+0x2a48>
   13a90:	cmp	r7, lr
   13a94:	bne	13aa8 <__mempcpy_chk@plt+0x2a54>
   13a98:	b	14654 <__mempcpy_chk@plt+0x3600>
   13a9c:	ldrb	r0, [ip, r7]
   13aa0:	cmp	r0, #0
   13aa4:	beq	1465c <__mempcpy_chk@plt+0x3608>
   13aa8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13aac:	mov	r9, #0
   13ab0:	str	r5, [fp, #-48]	; 0xffffffd0
   13ab4:	str	r6, [fp, #-52]	; 0xffffffcc
   13ab8:	cmp	r0, #0
   13abc:	beq	13afc <__mempcpy_chk@plt+0x2aa8>
   13ac0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13ac4:	mov	r5, r4
   13ac8:	add	r4, r7, r0
   13acc:	cmp	r0, #2
   13ad0:	bcc	13aec <__mempcpy_chk@plt+0x2a98>
   13ad4:	cmn	lr, #1
   13ad8:	bne	13aec <__mempcpy_chk@plt+0x2a98>
   13adc:	mov	r0, ip
   13ae0:	bl	10f70 <strlen@plt>
   13ae4:	ldr	ip, [fp, #-84]	; 0xffffffac
   13ae8:	mov	lr, r0
   13aec:	cmp	r4, lr
   13af0:	bls	13b04 <__mempcpy_chk@plt+0x2ab0>
   13af4:	mov	r6, #0
   13af8:	b	13b44 <__mempcpy_chk@plt+0x2af0>
   13afc:	mov	r6, #0
   13b00:	b	13b48 <__mempcpy_chk@plt+0x2af4>
   13b04:	ldr	r1, [sp, #92]	; 0x5c
   13b08:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13b0c:	add	r0, ip, r7
   13b10:	mov	r4, lr
   13b14:	bl	10e74 <memcmp@plt>
   13b18:	ldr	r2, [sp, #88]	; 0x58
   13b1c:	cmp	r0, #0
   13b20:	mov	r1, r0
   13b24:	movwne	r1, #1
   13b28:	orr	r1, r1, r2
   13b2c:	tst	r1, #1
   13b30:	beq	146f0 <__mempcpy_chk@plt+0x369c>
   13b34:	ldr	ip, [fp, #-84]	; 0xffffffac
   13b38:	clz	r0, r0
   13b3c:	mov	lr, r4
   13b40:	lsr	r6, r0, #5
   13b44:	mov	r4, r5
   13b48:	ldrb	r5, [ip, r7]
   13b4c:	cmp	r5, #126	; 0x7e
   13b50:	bhi	13f18 <__mempcpy_chk@plt+0x2ec4>
   13b54:	add	r3, pc, #16
   13b58:	mov	sl, #1
   13b5c:	mov	r2, #110	; 0x6e
   13b60:	mov	r0, #97	; 0x61
   13b64:	mov	r1, #0
   13b68:	ldr	pc, [r3, r5, lsl #2]
   13b6c:	strdeq	r3, [r1], -ip
   13b70:	andeq	r3, r1, r8, lsl pc
   13b74:	andeq	r3, r1, r8, lsl pc
   13b78:	andeq	r3, r1, r8, lsl pc
   13b7c:	andeq	r3, r1, r8, lsl pc
   13b80:	andeq	r3, r1, r8, lsl pc
   13b84:	andeq	r3, r1, r8, lsl pc
   13b88:			; <UNDEFINED> instruction: 0x00013fbc
   13b8c:	ldrdeq	r3, [r1], -ip
   13b90:	ldrdeq	r3, [r1], -r4
   13b94:	andeq	r3, r1, r8, ror #27
   13b98:	andeq	r3, r1, ip, ror #28
   13b9c:	andeq	r3, r1, ip, asr #27
   13ba0:	andeq	r3, r1, r4, ror #27
   13ba4:	andeq	r3, r1, r8, lsl pc
   13ba8:	andeq	r3, r1, r8, lsl pc
   13bac:	andeq	r3, r1, r8, lsl pc
   13bb0:	andeq	r3, r1, r8, lsl pc
   13bb4:	andeq	r3, r1, r8, lsl pc
   13bb8:	andeq	r3, r1, r8, lsl pc
   13bbc:	andeq	r3, r1, r8, lsl pc
   13bc0:	andeq	r3, r1, r8, lsl pc
   13bc4:	andeq	r3, r1, r8, lsl pc
   13bc8:	andeq	r3, r1, r8, lsl pc
   13bcc:	andeq	r3, r1, r8, lsl pc
   13bd0:	andeq	r3, r1, r8, lsl pc
   13bd4:	andeq	r3, r1, r8, lsl pc
   13bd8:	andeq	r3, r1, r8, lsl pc
   13bdc:	andeq	r3, r1, r8, lsl pc
   13be0:	andeq	r3, r1, r8, lsl pc
   13be4:	andeq	r3, r1, r8, lsl pc
   13be8:	andeq	r3, r1, r8, lsl pc
   13bec:	andeq	r3, r1, ip, ror pc
   13bf0:	andeq	r3, r1, r0, lsl #31
   13bf4:	andeq	r3, r1, r0, lsl #31
   13bf8:	andeq	r3, r1, ip, ror sp
   13bfc:	andeq	r3, r1, r0, lsl #31
   13c00:	andeq	r3, r1, r8, ror #26
   13c04:	andeq	r3, r1, r0, lsl #31
   13c08:	andeq	r3, r1, r4, ror lr
   13c0c:	andeq	r3, r1, r0, lsl #31
   13c10:	andeq	r3, r1, r0, lsl #31
   13c14:	andeq	r3, r1, r0, lsl #31
   13c18:	andeq	r3, r1, r8, ror #26
   13c1c:	andeq	r3, r1, r8, ror #26
   13c20:	andeq	r3, r1, r8, ror #26
   13c24:	andeq	r3, r1, r8, ror #26
   13c28:	andeq	r3, r1, r8, ror #26
   13c2c:	andeq	r3, r1, r8, ror #26
   13c30:	andeq	r3, r1, r8, ror #26
   13c34:	andeq	r3, r1, r8, ror #26
   13c38:	andeq	r3, r1, r8, ror #26
   13c3c:	andeq	r3, r1, r8, ror #26
   13c40:	andeq	r3, r1, r8, ror #26
   13c44:	andeq	r3, r1, r8, ror #26
   13c48:	andeq	r3, r1, r8, ror #26
   13c4c:	andeq	r3, r1, r8, ror #26
   13c50:	andeq	r3, r1, r8, ror #26
   13c54:	andeq	r3, r1, r8, ror #26
   13c58:	andeq	r3, r1, r0, lsl #31
   13c5c:	andeq	r3, r1, r0, lsl #31
   13c60:	andeq	r3, r1, r0, lsl #31
   13c64:	andeq	r3, r1, r0, lsl #31
   13c68:	andeq	r3, r1, r0, asr #28
   13c6c:	andeq	r3, r1, r8, lsl pc
   13c70:	andeq	r3, r1, r8, ror #26
   13c74:	andeq	r3, r1, r8, ror #26
   13c78:	andeq	r3, r1, r8, ror #26
   13c7c:	andeq	r3, r1, r8, ror #26
   13c80:	andeq	r3, r1, r8, ror #26
   13c84:	andeq	r3, r1, r8, ror #26
   13c88:	andeq	r3, r1, r8, ror #26
   13c8c:	andeq	r3, r1, r8, ror #26
   13c90:	andeq	r3, r1, r8, ror #26
   13c94:	andeq	r3, r1, r8, ror #26
   13c98:	andeq	r3, r1, r8, ror #26
   13c9c:	andeq	r3, r1, r8, ror #26
   13ca0:	andeq	r3, r1, r8, ror #26
   13ca4:	andeq	r3, r1, r8, ror #26
   13ca8:	andeq	r3, r1, r8, ror #26
   13cac:	andeq	r3, r1, r8, ror #26
   13cb0:	andeq	r3, r1, r8, ror #26
   13cb4:	andeq	r3, r1, r8, ror #26
   13cb8:	andeq	r3, r1, r8, ror #26
   13cbc:	andeq	r3, r1, r8, ror #26
   13cc0:	andeq	r3, r1, r8, ror #26
   13cc4:	andeq	r3, r1, r8, ror #26
   13cc8:	andeq	r3, r1, r8, ror #26
   13ccc:	andeq	r3, r1, r8, ror #26
   13cd0:	andeq	r3, r1, r8, ror #26
   13cd4:	andeq	r3, r1, r8, ror #26
   13cd8:	andeq	r3, r1, r0, lsl #31
   13cdc:	andeq	r3, r1, r8, lsr #27
   13ce0:	andeq	r3, r1, r8, ror #26
   13ce4:	andeq	r3, r1, r0, lsl #31
   13ce8:	andeq	r3, r1, r8, ror #26
   13cec:	andeq	r3, r1, r0, lsl #31
   13cf0:	andeq	r3, r1, r8, ror #26
   13cf4:	andeq	r3, r1, r8, ror #26
   13cf8:	andeq	r3, r1, r8, ror #26
   13cfc:	andeq	r3, r1, r8, ror #26
   13d00:	andeq	r3, r1, r8, ror #26
   13d04:	andeq	r3, r1, r8, ror #26
   13d08:	andeq	r3, r1, r8, ror #26
   13d0c:	andeq	r3, r1, r8, ror #26
   13d10:	andeq	r3, r1, r8, ror #26
   13d14:	andeq	r3, r1, r8, ror #26
   13d18:	andeq	r3, r1, r8, ror #26
   13d1c:	andeq	r3, r1, r8, ror #26
   13d20:	andeq	r3, r1, r8, ror #26
   13d24:	andeq	r3, r1, r8, ror #26
   13d28:	andeq	r3, r1, r8, ror #26
   13d2c:	andeq	r3, r1, r8, ror #26
   13d30:	andeq	r3, r1, r8, ror #26
   13d34:	andeq	r3, r1, r8, ror #26
   13d38:	andeq	r3, r1, r8, ror #26
   13d3c:	andeq	r3, r1, r8, ror #26
   13d40:	andeq	r3, r1, r8, ror #26
   13d44:	andeq	r3, r1, r8, ror #26
   13d48:	andeq	r3, r1, r8, ror #26
   13d4c:	andeq	r3, r1, r8, ror #26
   13d50:	andeq	r3, r1, r8, ror #26
   13d54:	andeq	r3, r1, r8, ror #26
   13d58:	andeq	r3, r1, ip, lsl #27
   13d5c:	andeq	r3, r1, r0, lsl #31
   13d60:	andeq	r3, r1, ip, lsl #27
   13d64:	andeq	r3, r1, ip, ror sp
   13d68:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13d6c:	cmp	r0, #0
   13d70:	beq	13fd0 <__mempcpy_chk@plt+0x2f7c>
   13d74:	ldr	r0, [fp, #16]
   13d78:	b	13fd4 <__mempcpy_chk@plt+0x2f80>
   13d7c:	mov	sl, #0
   13d80:	cmp	r7, #0
   13d84:	bne	141ec <__mempcpy_chk@plt+0x3198>
   13d88:	b	13f7c <__mempcpy_chk@plt+0x2f28>
   13d8c:	mov	sl, #0
   13d90:	cmn	lr, #1
   13d94:	beq	13f68 <__mempcpy_chk@plt+0x2f14>
   13d98:	cmp	r7, #0
   13d9c:	cmpeq	lr, #1
   13da0:	bne	141ec <__mempcpy_chk@plt+0x3198>
   13da4:	b	13f7c <__mempcpy_chk@plt+0x2f28>
   13da8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13dac:	cmp	r0, #2
   13db0:	bne	13fa0 <__mempcpy_chk@plt+0x2f4c>
   13db4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13db8:	tst	r0, #1
   13dbc:	bne	1470c <__mempcpy_chk@plt+0x36b8>
   13dc0:	mov	r9, #0
   13dc4:	mov	r0, #92	; 0x5c
   13dc8:	b	13fb4 <__mempcpy_chk@plt+0x2f60>
   13dcc:	mov	r0, #102	; 0x66
   13dd0:	b	13fbc <__mempcpy_chk@plt+0x2f68>
   13dd4:	mov	r2, #116	; 0x74
   13dd8:	b	13de8 <__mempcpy_chk@plt+0x2d94>
   13ddc:	mov	r0, #98	; 0x62
   13de0:	b	13fbc <__mempcpy_chk@plt+0x2f68>
   13de4:	mov	r2, #114	; 0x72
   13de8:	ldr	r0, [sp, #60]	; 0x3c
   13dec:	tst	r0, #1
   13df0:	mov	r0, r2
   13df4:	bne	13fbc <__mempcpy_chk@plt+0x2f68>
   13df8:	b	1470c <__mempcpy_chk@plt+0x36b8>
   13dfc:	ldr	r0, [sp, #84]	; 0x54
   13e00:	tst	r0, #1
   13e04:	beq	140a8 <__mempcpy_chk@plt+0x3054>
   13e08:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13e0c:	tst	r0, #1
   13e10:	bne	14814 <__mempcpy_chk@plt+0x37c0>
   13e14:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13e18:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13e1c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13e20:	cmp	r0, #2
   13e24:	ldr	r0, [fp, #-80]	; 0xffffffb0
   13e28:	movwne	r0, #1
   13e2c:	orr	r0, r0, r3
   13e30:	tst	r0, #1
   13e34:	beq	14528 <__mempcpy_chk@plt+0x34d4>
   13e38:	mov	r0, r8
   13e3c:	b	14568 <__mempcpy_chk@plt+0x3514>
   13e40:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13e44:	mov	r9, #0
   13e48:	mov	r5, #63	; 0x3f
   13e4c:	cmp	r0, #5
   13e50:	beq	141f4 <__mempcpy_chk@plt+0x31a0>
   13e54:	cmp	r0, #2
   13e58:	bne	142b4 <__mempcpy_chk@plt+0x3260>
   13e5c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13e60:	tst	r0, #1
   13e64:	beq	142b8 <__mempcpy_chk@plt+0x3264>
   13e68:	b	1470c <__mempcpy_chk@plt+0x36b8>
   13e6c:	mov	r0, #118	; 0x76
   13e70:	b	13fbc <__mempcpy_chk@plt+0x2f68>
   13e74:	mov	r0, #1
   13e78:	mov	r5, #39	; 0x27
   13e7c:	str	r0, [sp, #52]	; 0x34
   13e80:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13e84:	cmp	r0, #2
   13e88:	bne	13f10 <__mempcpy_chk@plt+0x2ebc>
   13e8c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13e90:	tst	r0, #1
   13e94:	bne	1470c <__mempcpy_chk@plt+0x36b8>
   13e98:	ldr	r3, [sp, #68]	; 0x44
   13e9c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   13ea0:	mov	r9, #0
   13ea4:	clz	r1, r2
   13ea8:	cmp	r3, #0
   13eac:	mov	r0, r3
   13eb0:	movwne	r0, #1
   13eb4:	lsr	r1, r1, #5
   13eb8:	orrs	r0, r0, r1
   13ebc:	moveq	r3, r2
   13ec0:	moveq	r2, r0
   13ec4:	cmp	r8, r2
   13ec8:	str	r3, [sp, #68]	; 0x44
   13ecc:	str	r2, [fp, #-52]	; 0xffffffcc
   13ed0:	ldrcc	r1, [fp, #-56]	; 0xffffffc8
   13ed4:	movcc	r0, #39	; 0x27
   13ed8:	strbcc	r0, [r1, r8]
   13edc:	add	r0, r8, #1
   13ee0:	cmp	r0, r2
   13ee4:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   13ee8:	movcc	r1, #92	; 0x5c
   13eec:	strbcc	r1, [r3, r0]
   13ef0:	add	r0, r8, #2
   13ef4:	add	r8, r8, #3
   13ef8:	cmp	r0, r2
   13efc:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   13f00:	movcc	r1, #39	; 0x27
   13f04:	strbcc	r1, [r2, r0]
   13f08:	mov	r0, #0
   13f0c:	str	r0, [fp, #-48]	; 0xffffffd0
   13f10:	mov	sl, #1
   13f14:	b	13d68 <__mempcpy_chk@plt+0x2d14>
   13f18:	ldr	r0, [sp, #32]
   13f1c:	cmp	r0, #1
   13f20:	bne	140cc <__mempcpy_chk@plt+0x3078>
   13f24:	str	lr, [sp, #80]	; 0x50
   13f28:	bl	10f4c <__ctype_b_loc@plt>
   13f2c:	ldr	r0, [r0]
   13f30:	ldr	ip, [fp, #-84]	; 0xffffffac
   13f34:	mov	r1, #1
   13f38:	add	r0, r0, r5, lsl #1
   13f3c:	ldrb	r0, [r0, #1]
   13f40:	ubfx	sl, r0, #6, #1
   13f44:	ldr	r0, [sp, #48]	; 0x30
   13f48:	mov	r2, r1
   13f4c:	cmp	r1, #1
   13f50:	orr	r0, sl, r0
   13f54:	bhi	142c0 <__mempcpy_chk@plt+0x326c>
   13f58:	tst	r0, #1
   13f5c:	beq	142c0 <__mempcpy_chk@plt+0x326c>
   13f60:	ldr	lr, [sp, #80]	; 0x50
   13f64:	b	13d68 <__mempcpy_chk@plt+0x2d14>
   13f68:	cmp	r7, #0
   13f6c:	bne	141e8 <__mempcpy_chk@plt+0x3194>
   13f70:	ldrb	r0, [ip, #1]
   13f74:	cmp	r0, #0
   13f78:	bne	141e8 <__mempcpy_chk@plt+0x3194>
   13f7c:	mov	r1, #1
   13f80:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13f84:	cmp	r0, #2
   13f88:	bne	13f98 <__mempcpy_chk@plt+0x2f44>
   13f8c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13f90:	tst	r0, #1
   13f94:	bne	1470c <__mempcpy_chk@plt+0x36b8>
   13f98:	mov	sl, r1
   13f9c:	b	13d68 <__mempcpy_chk@plt+0x2d14>
   13fa0:	ldr	r1, [sp, #44]	; 0x2c
   13fa4:	mov	r9, #0
   13fa8:	mov	r0, #92	; 0x5c
   13fac:	cmp	r1, #0
   13fb0:	beq	13fbc <__mempcpy_chk@plt+0x2f68>
   13fb4:	mov	sl, #0
   13fb8:	b	144d4 <__mempcpy_chk@plt+0x3480>
   13fbc:	ldr	r1, [sp, #84]	; 0x54
   13fc0:	mov	sl, #0
   13fc4:	mov	r9, #0
   13fc8:	tst	r1, #1
   13fcc:	bne	14008 <__mempcpy_chk@plt+0x2fb4>
   13fd0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13fd4:	cmp	r0, #0
   13fd8:	mov	r0, r5
   13fdc:	beq	14000 <__mempcpy_chk@plt+0x2fac>
   13fe0:	ldr	r1, [fp, #16]
   13fe4:	ubfx	r0, r5, #5, #3
   13fe8:	mov	r2, #1
   13fec:	ldr	r0, [r1, r0, lsl #2]
   13ff0:	and	r1, r5, #31
   13ff4:	tst	r0, r2, lsl r1
   13ff8:	mov	r0, r5
   13ffc:	bne	14008 <__mempcpy_chk@plt+0x2fb4>
   14000:	cmp	r6, #0
   14004:	beq	144d4 <__mempcpy_chk@plt+0x3480>
   14008:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1400c:	ldr	r6, [fp, #-52]	; 0xffffffcc
   14010:	tst	r1, #1
   14014:	bne	146e8 <__mempcpy_chk@plt+0x3694>
   14018:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1401c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   14020:	cmp	r1, #2
   14024:	ldr	r1, [fp, #-80]	; 0xffffffb0
   14028:	movwne	r1, #1
   1402c:	orr	r1, r1, r5
   14030:	tst	r1, #1
   14034:	bne	14078 <__mempcpy_chk@plt+0x3024>
   14038:	cmp	r8, r6
   1403c:	mov	r5, #1
   14040:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   14044:	movcc	r1, #39	; 0x27
   14048:	strbcc	r1, [r2, r8]
   1404c:	add	r1, r8, #1
   14050:	cmp	r1, r6
   14054:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   14058:	movcc	r2, #36	; 0x24
   1405c:	strbcc	r2, [r3, r1]
   14060:	add	r1, r8, #2
   14064:	add	r8, r8, #3
   14068:	cmp	r1, r6
   1406c:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   14070:	movcc	r2, #39	; 0x27
   14074:	strbcc	r2, [r3, r1]
   14078:	cmp	r8, r6
   1407c:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   14080:	movcc	r1, #92	; 0x5c
   14084:	strbcc	r1, [r2, r8]
   14088:	add	r8, r8, #1
   1408c:	cmp	r8, r6
   14090:	and	r4, r4, sl
   14094:	ldrcc	r1, [fp, #-56]	; 0xffffffc8
   14098:	strbcc	r0, [r1, r8]
   1409c:	add	r8, r8, #1
   140a0:	add	r7, r7, #1
   140a4:	b	13a88 <__mempcpy_chk@plt+0x2a34>
   140a8:	ldr	r0, [sp, #28]
   140ac:	mov	sl, #0
   140b0:	mov	r9, #0
   140b4:	mov	r5, #0
   140b8:	cmp	r0, #0
   140bc:	beq	13fd0 <__mempcpy_chk@plt+0x2f7c>
   140c0:	ldr	r6, [fp, #-52]	; 0xffffffcc
   140c4:	ldr	r5, [fp, #-48]	; 0xffffffd0
   140c8:	b	140a0 <__mempcpy_chk@plt+0x304c>
   140cc:	mov	r0, #0
   140d0:	cmn	lr, #1
   140d4:	str	r6, [sp, #76]	; 0x4c
   140d8:	str	r4, [sp, #20]
   140dc:	str	r0, [fp, #-36]	; 0xffffffdc
   140e0:	str	r0, [fp, #-40]	; 0xffffffd8
   140e4:	bne	140f8 <__mempcpy_chk@plt+0x30a4>
   140e8:	mov	r0, ip
   140ec:	bl	10f70 <strlen@plt>
   140f0:	ldr	ip, [fp, #-84]	; 0xffffffac
   140f4:	mov	lr, r0
   140f8:	add	r0, ip, r7
   140fc:	mov	sl, #1
   14100:	mov	r6, #0
   14104:	sub	r4, fp, #40	; 0x28
   14108:	str	lr, [sp, #80]	; 0x50
   1410c:	str	r0, [sp, #36]	; 0x24
   14110:	str	r6, [sp, #40]	; 0x28
   14114:	add	r6, r6, r7
   14118:	sub	r0, fp, #44	; 0x2c
   1411c:	mov	r3, r4
   14120:	add	r1, ip, r6
   14124:	sub	r2, lr, r6
   14128:	bl	15ed0 <__mempcpy_chk@plt+0x4e7c>
   1412c:	cmp	r0, #0
   14130:	beq	1463c <__mempcpy_chk@plt+0x35e8>
   14134:	cmn	r0, #1
   14138:	beq	145fc <__mempcpy_chk@plt+0x35a8>
   1413c:	ldr	lr, [sp, #80]	; 0x50
   14140:	cmn	r0, #2
   14144:	beq	14604 <__mempcpy_chk@plt+0x35b0>
   14148:	ldr	r2, [sp, #56]	; 0x38
   1414c:	cmp	r0, #2
   14150:	mov	r1, #0
   14154:	movwcc	r1, #1
   14158:	eor	r2, r2, #1
   1415c:	orrs	r1, r2, r1
   14160:	bne	141ac <__mempcpy_chk@plt+0x3158>
   14164:	ldr	r1, [sp, #40]	; 0x28
   14168:	ldr	r2, [sp, #36]	; 0x24
   1416c:	add	ip, r2, r1
   14170:	mov	r2, #1
   14174:	ldrb	r3, [ip, r2]
   14178:	sub	r6, r3, #94	; 0x5e
   1417c:	cmp	r6, #30
   14180:	bhi	14194 <__mempcpy_chk@plt+0x3140>
   14184:	mov	r4, #1
   14188:	mov	r1, #1073741829	; 0x40000005
   1418c:	tst	r1, r4, lsl r6
   14190:	bne	14708 <__mempcpy_chk@plt+0x36b4>
   14194:	sub	r3, r3, #91	; 0x5b
   14198:	cmp	r3, #2
   1419c:	bcc	14708 <__mempcpy_chk@plt+0x36b4>
   141a0:	add	r2, r2, #1
   141a4:	cmp	r2, r0
   141a8:	bcc	14174 <__mempcpy_chk@plt+0x3120>
   141ac:	ldr	r6, [sp, #40]	; 0x28
   141b0:	add	r6, r0, r6
   141b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   141b8:	bl	10eb0 <iswprint@plt>
   141bc:	cmp	r0, #0
   141c0:	sub	r4, fp, #40	; 0x28
   141c4:	movwne	r0, #1
   141c8:	and	sl, sl, r0
   141cc:	mov	r0, r4
   141d0:	bl	10e68 <mbsinit@plt>
   141d4:	ldr	lr, [sp, #80]	; 0x50
   141d8:	ldr	ip, [fp, #-84]	; 0xffffffac
   141dc:	cmp	r0, #0
   141e0:	beq	14110 <__mempcpy_chk@plt+0x30bc>
   141e4:	b	14644 <__mempcpy_chk@plt+0x35f0>
   141e8:	mvn	lr, #0
   141ec:	mov	r9, #0
   141f0:	b	13d68 <__mempcpy_chk@plt+0x2d14>
   141f4:	ldr	r0, [sp, #24]
   141f8:	cmp	r0, #0
   141fc:	beq	142b4 <__mempcpy_chk@plt+0x3260>
   14200:	add	r0, r7, #2
   14204:	cmp	r0, lr
   14208:	bcs	142b4 <__mempcpy_chk@plt+0x3260>
   1420c:	add	r1, ip, r7
   14210:	ldrb	r1, [r1, #1]
   14214:	cmp	r1, #63	; 0x3f
   14218:	bne	142b4 <__mempcpy_chk@plt+0x3260>
   1421c:	ldrb	r5, [ip, r0]
   14220:	sub	r1, r5, #33	; 0x21
   14224:	cmp	r1, #29
   14228:	bhi	142b4 <__mempcpy_chk@plt+0x3260>
   1422c:	movw	r3, #20929	; 0x51c1
   14230:	mov	r2, #1
   14234:	movt	r3, #14336	; 0x3800
   14238:	tst	r3, r2, lsl r1
   1423c:	beq	142b4 <__mempcpy_chk@plt+0x3260>
   14240:	ldr	r1, [fp, #-72]	; 0xffffffb8
   14244:	tst	r1, #1
   14248:	bne	1481c <__mempcpy_chk@plt+0x37c8>
   1424c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14250:	mov	r7, r0
   14254:	cmp	r8, r1
   14258:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   1425c:	movcc	r1, #63	; 0x3f
   14260:	strbcc	r1, [r2, r8]
   14264:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14268:	add	r1, r8, #1
   1426c:	cmp	r1, r2
   14270:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   14274:	movcc	r2, #34	; 0x22
   14278:	strbcc	r2, [r3, r1]
   1427c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14280:	add	r1, r8, #2
   14284:	cmp	r1, r2
   14288:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   1428c:	movcc	r2, #34	; 0x22
   14290:	strbcc	r2, [r3, r1]
   14294:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14298:	add	r1, r8, #3
   1429c:	add	r8, r8, #4
   142a0:	cmp	r1, r2
   142a4:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   142a8:	movcc	r2, #63	; 0x3f
   142ac:	strbcc	r2, [r3, r1]
   142b0:	b	142b8 <__mempcpy_chk@plt+0x3264>
   142b4:	mov	r5, #63	; 0x3f
   142b8:	mov	sl, #0
   142bc:	b	13d68 <__mempcpy_chk@plt+0x2d14>
   142c0:	str	r0, [sp, #40]	; 0x28
   142c4:	add	r0, r2, r7
   142c8:	str	r6, [sp, #76]	; 0x4c
   142cc:	add	r1, r7, #1
   142d0:	ldr	lr, [sp, #80]	; 0x50
   142d4:	ldr	r7, [fp, #-64]	; 0xffffffc0
   142d8:	ldr	r6, [fp, #-52]	; 0xffffffcc
   142dc:	mov	r3, #0
   142e0:	str	r0, [sp, #36]	; 0x24
   142e4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   142e8:	b	1437c <__mempcpy_chk@plt+0x3328>
   142ec:	str	r0, [sp, #76]	; 0x4c
   142f0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   142f4:	cmp	r9, #0
   142f8:	movwne	r9, #1
   142fc:	mvn	r7, r0
   14300:	orr	r7, r7, r9
   14304:	tst	r7, #1
   14308:	bne	14358 <__mempcpy_chk@plt+0x3304>
   1430c:	ldr	r6, [fp, #-52]	; 0xffffffcc
   14310:	cmp	r8, r6
   14314:	bcs	1432c <__mempcpy_chk@plt+0x32d8>
   14318:	ldr	r7, [fp, #-56]	; 0xffffffc8
   1431c:	mov	r2, r4
   14320:	mov	r4, #39	; 0x27
   14324:	strb	r4, [r7, r8]
   14328:	mov	r4, r2
   1432c:	add	r7, r8, #1
   14330:	cmp	r7, r6
   14334:	bcs	1434c <__mempcpy_chk@plt+0x32f8>
   14338:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1433c:	mov	r2, r4
   14340:	mov	r4, #39	; 0x27
   14344:	strb	r4, [r0, r7]
   14348:	mov	r4, r2
   1434c:	add	r8, r8, #2
   14350:	mov	r0, #0
   14354:	b	14360 <__mempcpy_chk@plt+0x330c>
   14358:	ldr	r6, [fp, #-52]	; 0xffffffcc
   1435c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14360:	cmp	r8, r6
   14364:	ldr	r7, [fp, #-64]	; 0xffffffc0
   14368:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   1436c:	strbcc	r5, [r2, r8]
   14370:	add	r8, r8, #1
   14374:	ldrb	r5, [ip, r1]
   14378:	add	r1, r1, #1
   1437c:	ldr	r2, [sp, #40]	; 0x28
   14380:	tst	r2, #1
   14384:	beq	143c0 <__mempcpy_chk@plt+0x336c>
   14388:	ldr	r2, [sp, #76]	; 0x4c
   1438c:	str	r0, [fp, #-48]	; 0xffffffd0
   14390:	tst	r2, #1
   14394:	beq	143b8 <__mempcpy_chk@plt+0x3364>
   14398:	cmp	r8, r6
   1439c:	bcs	143b4 <__mempcpy_chk@plt+0x3360>
   143a0:	ldr	r6, [fp, #-56]	; 0xffffffc8
   143a4:	mov	r2, r4
   143a8:	mov	r4, #92	; 0x5c
   143ac:	strb	r4, [r6, r8]
   143b0:	mov	r4, r2
   143b4:	add	r8, r8, #1
   143b8:	mov	r0, #0
   143bc:	b	144b4 <__mempcpy_chk@plt+0x3460>
   143c0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   143c4:	tst	r2, #1
   143c8:	bne	14714 <__mempcpy_chk@plt+0x36c0>
   143cc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   143d0:	cmp	r7, #2
   143d4:	movwne	r3, #1
   143d8:	orr	r3, r3, r0
   143dc:	tst	r3, #1
   143e0:	bne	1443c <__mempcpy_chk@plt+0x33e8>
   143e4:	cmp	r8, r6
   143e8:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   143ec:	movcc	r3, #39	; 0x27
   143f0:	strbcc	r3, [r2, r8]
   143f4:	add	r3, r8, #1
   143f8:	cmp	r3, r6
   143fc:	bcs	14414 <__mempcpy_chk@plt+0x33c0>
   14400:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14404:	mov	r7, r4
   14408:	mov	r4, #36	; 0x24
   1440c:	strb	r4, [r2, r3]
   14410:	mov	r4, r7
   14414:	add	r3, r8, #2
   14418:	cmp	r3, r6
   1441c:	bcs	14434 <__mempcpy_chk@plt+0x33e0>
   14420:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14424:	mov	r7, r4
   14428:	mov	r4, #39	; 0x27
   1442c:	strb	r4, [r2, r3]
   14430:	mov	r4, r7
   14434:	add	r8, r8, #3
   14438:	mov	r0, #1
   1443c:	cmp	r8, r6
   14440:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   14444:	movcc	r3, #92	; 0x5c
   14448:	strbcc	r3, [r2, r8]
   1444c:	add	r3, r8, #1
   14450:	cmp	r3, r6
   14454:	bcs	14474 <__mempcpy_chk@plt+0x3420>
   14458:	mov	r2, r4
   1445c:	and	r7, r5, #192	; 0xc0
   14460:	mov	r4, #48	; 0x30
   14464:	orr	r7, r4, r7, lsr #6
   14468:	mov	r4, r2
   1446c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14470:	strb	r7, [r2, r3]
   14474:	add	r3, r8, #2
   14478:	cmp	r3, r6
   1447c:	bcs	1449c <__mempcpy_chk@plt+0x3448>
   14480:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14484:	mov	r6, r4
   14488:	lsr	r7, r5, #3
   1448c:	mov	r4, #6
   14490:	bfi	r7, r4, #3, #29
   14494:	mov	r4, r6
   14498:	strb	r7, [r2, r3]
   1449c:	str	r0, [fp, #-48]	; 0xffffffd0
   144a0:	ldr	r0, [sp, #76]	; 0x4c
   144a4:	mov	r3, #6
   144a8:	add	r8, r8, #3
   144ac:	bfi	r5, r3, #3, #29
   144b0:	mov	r3, #1
   144b4:	ldr	r2, [sp, #36]	; 0x24
   144b8:	and	r9, r3, #1
   144bc:	cmp	r2, r1
   144c0:	bhi	142ec <__mempcpy_chk@plt+0x3298>
   144c4:	cmp	r9, #0
   144c8:	sub	r7, r1, #1
   144cc:	mov	r0, r5
   144d0:	movwne	r9, #1
   144d4:	cmp	r9, #0
   144d8:	bne	1451c <__mempcpy_chk@plt+0x34c8>
   144dc:	ldr	r5, [fp, #-48]	; 0xffffffd0
   144e0:	ldr	r6, [fp, #-52]	; 0xffffffcc
   144e4:	tst	r5, #1
   144e8:	beq	1408c <__mempcpy_chk@plt+0x3038>
   144ec:	cmp	r8, r6
   144f0:	mov	r5, #0
   144f4:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   144f8:	movcc	r1, #39	; 0x27
   144fc:	strbcc	r1, [r2, r8]
   14500:	add	r1, r8, #1
   14504:	add	r8, r8, #2
   14508:	cmp	r1, r6
   1450c:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   14510:	movcc	r2, #39	; 0x27
   14514:	strbcc	r2, [r3, r1]
   14518:	b	1408c <__mempcpy_chk@plt+0x3038>
   1451c:	ldr	r6, [fp, #-52]	; 0xffffffcc
   14520:	ldr	r5, [fp, #-48]	; 0xffffffd0
   14524:	b	1408c <__mempcpy_chk@plt+0x3038>
   14528:	cmp	r8, r1
   1452c:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   14530:	movcc	r0, #39	; 0x27
   14534:	strbcc	r0, [r2, r8]
   14538:	add	r0, r8, #1
   1453c:	cmp	r0, r1
   14540:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   14544:	movcc	r2, #36	; 0x24
   14548:	strbcc	r2, [r3, r0]
   1454c:	add	r0, r8, #2
   14550:	cmp	r0, r1
   14554:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   14558:	movcc	r2, #39	; 0x27
   1455c:	strbcc	r2, [r3, r0]
   14560:	add	r0, r8, #3
   14564:	mov	r3, #1
   14568:	cmp	r0, r1
   1456c:	add	r8, r0, #1
   14570:	str	r3, [fp, #-48]	; 0xffffffd0
   14574:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   14578:	movcc	r1, #92	; 0x5c
   1457c:	strbcc	r1, [r2, r0]
   14580:	ldr	r1, [fp, #-64]	; 0xffffffc0
   14584:	cmp	r1, #2
   14588:	beq	145ec <__mempcpy_chk@plt+0x3598>
   1458c:	add	r1, r7, #1
   14590:	mov	sl, #0
   14594:	mov	r9, #1
   14598:	mov	r5, #48	; 0x30
   1459c:	cmp	r1, lr
   145a0:	bcs	13d68 <__mempcpy_chk@plt+0x2d14>
   145a4:	ldrb	r1, [ip, r1]
   145a8:	sub	r1, r1, #48	; 0x30
   145ac:	uxtb	r1, r1
   145b0:	cmp	r1, #9
   145b4:	bhi	13d68 <__mempcpy_chk@plt+0x2d14>
   145b8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   145bc:	cmp	r8, r1
   145c0:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   145c4:	movcc	r1, #48	; 0x30
   145c8:	strbcc	r1, [r2, r8]
   145cc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   145d0:	add	r1, r0, #2
   145d4:	add	r8, r0, #3
   145d8:	cmp	r1, r2
   145dc:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   145e0:	movcc	r2, #48	; 0x30
   145e4:	strbcc	r2, [r3, r1]
   145e8:	b	13d68 <__mempcpy_chk@plt+0x2d14>
   145ec:	mov	r0, #48	; 0x30
   145f0:	mov	r9, #1
   145f4:	mov	sl, #0
   145f8:	b	14000 <__mempcpy_chk@plt+0x2fac>
   145fc:	mov	sl, #0
   14600:	b	1463c <__mempcpy_chk@plt+0x35e8>
   14604:	mov	sl, #0
   14608:	cmp	lr, r6
   1460c:	bls	1463c <__mempcpy_chk@plt+0x35e8>
   14610:	ldr	ip, [fp, #-84]	; 0xffffffac
   14614:	ldr	r6, [sp, #40]	; 0x28
   14618:	ldr	r0, [sp, #36]	; 0x24
   1461c:	ldrb	r0, [r0, r6]
   14620:	cmp	r0, #0
   14624:	beq	14644 <__mempcpy_chk@plt+0x35f0>
   14628:	add	r6, r6, #1
   1462c:	add	r0, r7, r6
   14630:	cmp	r0, lr
   14634:	bcc	14618 <__mempcpy_chk@plt+0x35c4>
   14638:	b	14644 <__mempcpy_chk@plt+0x35f0>
   1463c:	ldr	ip, [fp, #-84]	; 0xffffffac
   14640:	ldr	r6, [sp, #40]	; 0x28
   14644:	mov	r1, r6
   14648:	ldr	r4, [sp, #20]
   1464c:	ldr	r6, [sp, #76]	; 0x4c
   14650:	b	13f44 <__mempcpy_chk@plt+0x2ef0>
   14654:	mov	lr, r7
   14658:	b	14660 <__mempcpy_chk@plt+0x360c>
   1465c:	mvn	lr, #0
   14660:	ldr	r9, [fp, #-64]	; 0xffffffc0
   14664:	ldr	r1, [fp, #-72]	; 0xffffffb8
   14668:	eor	r0, r9, #2
   1466c:	orr	r0, r0, r8
   14670:	clz	r0, r0
   14674:	lsr	r0, r0, #5
   14678:	tst	r1, r0
   1467c:	bne	14778 <__mempcpy_chk@plt+0x3724>
   14680:	mov	r0, r1
   14684:	ldr	r1, [fp, #-80]	; 0xffffffb0
   14688:	cmp	r9, #2
   1468c:	movwne	r1, #1
   14690:	orr	r0, r0, r1
   14694:	tst	r0, #1
   14698:	bne	147b8 <__mempcpy_chk@plt+0x3764>
   1469c:	ldr	r0, [sp, #52]	; 0x34
   146a0:	ldr	r1, [sp, #68]	; 0x44
   146a4:	str	lr, [sp, #80]	; 0x50
   146a8:	eor	r0, r0, #1
   146ac:	tst	r0, #1
   146b0:	bne	147b8 <__mempcpy_chk@plt+0x3764>
   146b4:	tst	r4, #1
   146b8:	bne	14780 <__mempcpy_chk@plt+0x372c>
   146bc:	mov	r7, #0
   146c0:	cmp	r1, #0
   146c4:	beq	147b0 <__mempcpy_chk@plt+0x375c>
   146c8:	ldr	r0, [sp, #84]	; 0x54
   146cc:	mov	r3, #0
   146d0:	cmp	r6, #0
   146d4:	mov	r2, #0
   146d8:	mov	r4, r1
   146dc:	str	r3, [fp, #-72]	; 0xffffffb8
   146e0:	beq	1381c <__mempcpy_chk@plt+0x27c8>
   146e4:	b	147b8 <__mempcpy_chk@plt+0x3764>
   146e8:	ldr	r7, [fp, #-64]	; 0xffffffc0
   146ec:	b	14714 <__mempcpy_chk@plt+0x36c0>
   146f0:	ldr	ip, [fp, #-84]	; 0xffffffac
   146f4:	mov	r2, #1
   146f8:	mov	lr, r4
   146fc:	ldr	r7, [fp, #-64]	; 0xffffffc0
   14700:	ldr	r6, [fp, #-52]	; 0xffffffcc
   14704:	b	14718 <__mempcpy_chk@plt+0x36c4>
   14708:	ldr	ip, [fp, #-84]	; 0xffffffac
   1470c:	mov	r7, #2
   14710:	ldr	r6, [fp, #-52]	; 0xffffffcc
   14714:	ldr	r2, [sp, #84]	; 0x54
   14718:	mov	r0, #0
   1471c:	ldr	r1, [fp, #12]
   14720:	tst	r2, #1
   14724:	mov	r2, r7
   14728:	mov	r3, lr
   1472c:	str	r0, [sp, #8]
   14730:	ldr	r0, [sp, #64]	; 0x40
   14734:	movwne	r2, #4
   14738:	cmp	r7, #2
   1473c:	movne	r2, r7
   14740:	str	r2, [sp]
   14744:	mov	r2, ip
   14748:	bic	r1, r1, #2
   1474c:	str	r0, [sp, #12]
   14750:	ldr	r0, [sp, #72]	; 0x48
   14754:	str	r1, [sp, #4]
   14758:	mov	r1, r6
   1475c:	str	r0, [sp, #16]
   14760:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14764:	bl	137a4 <__mempcpy_chk@plt+0x2750>
   14768:	mov	r8, r0
   1476c:	mov	r0, r8
   14770:	sub	sp, fp, #28
   14774:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14778:	mov	r7, #2
   1477c:	b	14714 <__mempcpy_chk@plt+0x36c0>
   14780:	mov	r0, #5
   14784:	ldr	r2, [fp, #-84]	; 0xffffffac
   14788:	ldr	r3, [sp, #80]	; 0x50
   1478c:	str	r0, [sp]
   14790:	ldr	r0, [fp, #12]
   14794:	str	r0, [sp, #4]
   14798:	ldr	r0, [fp, #16]
   1479c:	str	r0, [sp, #8]
   147a0:	ldr	r0, [sp, #64]	; 0x40
   147a4:	str	r0, [sp, #12]
   147a8:	ldr	r0, [sp, #72]	; 0x48
   147ac:	b	1475c <__mempcpy_chk@plt+0x3708>
   147b0:	mov	r0, #0
   147b4:	str	r0, [fp, #-72]	; 0xffffffb8
   147b8:	ldr	r1, [sp, #92]	; 0x5c
   147bc:	cmp	r1, #0
   147c0:	beq	14800 <__mempcpy_chk@plt+0x37ac>
   147c4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   147c8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   147cc:	tst	r0, #1
   147d0:	bne	14804 <__mempcpy_chk@plt+0x37b0>
   147d4:	ldrb	r0, [r1]
   147d8:	cmp	r0, #0
   147dc:	beq	14804 <__mempcpy_chk@plt+0x37b0>
   147e0:	add	r1, r1, #1
   147e4:	cmp	r8, r6
   147e8:	strbcc	r0, [r2, r8]
   147ec:	add	r8, r8, #1
   147f0:	ldrb	r0, [r1], #1
   147f4:	cmp	r0, #0
   147f8:	bne	147e4 <__mempcpy_chk@plt+0x3790>
   147fc:	b	14804 <__mempcpy_chk@plt+0x37b0>
   14800:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14804:	cmp	r8, r6
   14808:	movcc	r0, #0
   1480c:	strbcc	r0, [r2, r8]
   14810:	b	1476c <__mempcpy_chk@plt+0x3718>
   14814:	mov	r2, #1
   14818:	b	146fc <__mempcpy_chk@plt+0x36a8>
   1481c:	mov	r7, #5
   14820:	b	14710 <__mempcpy_chk@plt+0x36bc>
   14824:	bl	11030 <abort@plt>
   14828:	mov	r3, r2
   1482c:	mov	r2, #0
   14830:	b	14834 <__mempcpy_chk@plt+0x37e0>
   14834:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14838:	add	fp, sp, #28
   1483c:	sub	sp, sp, #36	; 0x24
   14840:	movw	r8, #29032	; 0x7168
   14844:	cmp	r3, #0
   14848:	mov	r4, r2
   1484c:	str	r2, [sp, #24]
   14850:	mov	r5, r1
   14854:	mov	r6, r0
   14858:	str	r0, [sp, #20]
   1485c:	movt	r8, #2
   14860:	movne	r8, r3
   14864:	bl	10f7c <__errno_location@plt>
   14868:	str	r0, [sp, #28]
   1486c:	cmp	r4, #0
   14870:	add	sl, r8, #8
   14874:	ldm	r8, {r3, r9}
   14878:	ldr	r7, [r0]
   1487c:	ldr	r1, [r8, #40]	; 0x28
   14880:	ldr	r2, [r8, #44]	; 0x2c
   14884:	mov	r0, #0
   14888:	orreq	r9, r9, #1
   1488c:	str	r7, [sp, #32]
   14890:	mov	r7, r5
   14894:	stm	sp, {r3, r9, sl}
   14898:	str	r1, [sp, #12]
   1489c:	str	r2, [sp, #16]
   148a0:	mov	r1, #0
   148a4:	mov	r2, r6
   148a8:	mov	r3, r5
   148ac:	bl	137a4 <__mempcpy_chk@plt+0x2750>
   148b0:	add	r4, r0, #1
   148b4:	mov	r5, r0
   148b8:	mov	r0, r4
   148bc:	bl	15708 <__mempcpy_chk@plt+0x46b4>
   148c0:	mov	r6, r0
   148c4:	ldr	r0, [r8]
   148c8:	ldr	r2, [r8, #44]	; 0x2c
   148cc:	ldr	r1, [r8, #40]	; 0x28
   148d0:	mov	r3, r7
   148d4:	stm	sp, {r0, r9, sl}
   148d8:	str	r2, [sp, #16]
   148dc:	str	r1, [sp, #12]
   148e0:	mov	r0, r6
   148e4:	mov	r1, r4
   148e8:	ldr	r2, [sp, #20]
   148ec:	bl	137a4 <__mempcpy_chk@plt+0x2750>
   148f0:	ldr	r0, [sp, #24]
   148f4:	ldr	r1, [sp, #32]
   148f8:	ldr	r2, [sp, #28]
   148fc:	cmp	r0, #0
   14900:	str	r1, [r2]
   14904:	strne	r5, [r0]
   14908:	mov	r0, r6
   1490c:	sub	sp, fp, #28
   14910:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14914:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14918:	add	fp, sp, #24
   1491c:	movw	r5, #28916	; 0x70f4
   14920:	movw	r8, #28912	; 0x70f0
   14924:	movt	r5, #2
   14928:	movt	r8, #2
   1492c:	ldr	r0, [r5]
   14930:	ldr	r4, [r8]
   14934:	cmp	r0, #2
   14938:	blt	14964 <__mempcpy_chk@plt+0x3910>
   1493c:	add	r7, r4, #12
   14940:	mov	r6, #0
   14944:	ldr	r0, [r7, r6, lsl #3]
   14948:	bl	12544 <__mempcpy_chk@plt+0x14f0>
   1494c:	ldr	r1, [r5]
   14950:	add	r2, r6, #2
   14954:	add	r0, r6, #1
   14958:	mov	r6, r0
   1495c:	cmp	r2, r1
   14960:	blt	14944 <__mempcpy_chk@plt+0x38f0>
   14964:	ldr	r0, [r4, #4]
   14968:	movw	r7, #29080	; 0x7198
   1496c:	movt	r7, #2
   14970:	cmp	r0, r7
   14974:	beq	1498c <__mempcpy_chk@plt+0x3938>
   14978:	bl	12544 <__mempcpy_chk@plt+0x14f0>
   1497c:	movw	r0, #28920	; 0x70f8
   14980:	mov	r6, #256	; 0x100
   14984:	movt	r0, #2
   14988:	strd	r6, [r0]
   1498c:	movw	r6, #28920	; 0x70f8
   14990:	movt	r6, #2
   14994:	cmp	r4, r6
   14998:	beq	149a8 <__mempcpy_chk@plt+0x3954>
   1499c:	mov	r0, r4
   149a0:	bl	12544 <__mempcpy_chk@plt+0x14f0>
   149a4:	str	r6, [r8]
   149a8:	mov	r0, #1
   149ac:	str	r0, [r5]
   149b0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   149b4:	movw	r3, #29032	; 0x7168
   149b8:	mvn	r2, #0
   149bc:	movt	r3, #2
   149c0:	b	149c4 <__mempcpy_chk@plt+0x3970>
   149c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   149c8:	add	fp, sp, #28
   149cc:	sub	sp, sp, #44	; 0x2c
   149d0:	mov	r7, r3
   149d4:	str	r2, [sp, #36]	; 0x24
   149d8:	str	r1, [sp, #32]
   149dc:	mov	r5, r0
   149e0:	bl	10f7c <__errno_location@plt>
   149e4:	cmp	r5, #0
   149e8:	blt	14b54 <__mempcpy_chk@plt+0x3b00>
   149ec:	cmn	r5, #-2147483647	; 0x80000001
   149f0:	beq	14b54 <__mempcpy_chk@plt+0x3b00>
   149f4:	movw	r8, #28916	; 0x70f4
   149f8:	movw	r4, #28912	; 0x70f0
   149fc:	str	r0, [sp, #28]
   14a00:	ldr	r0, [r0]
   14a04:	movt	r8, #2
   14a08:	movt	r4, #2
   14a0c:	ldr	r1, [r8]
   14a10:	ldr	r6, [r4]
   14a14:	str	r0, [sp, #24]
   14a18:	cmp	r1, r5
   14a1c:	ble	14a28 <__mempcpy_chk@plt+0x39d4>
   14a20:	mov	sl, r6
   14a24:	b	14a90 <__mempcpy_chk@plt+0x3a3c>
   14a28:	movw	r9, #28920	; 0x70f8
   14a2c:	mov	r0, #8
   14a30:	add	r2, r5, #1
   14a34:	str	r1, [fp, #-32]	; 0xffffffe0
   14a38:	mvn	r3, #-2147483648	; 0x80000000
   14a3c:	movt	r9, #2
   14a40:	str	r0, [sp]
   14a44:	sub	r2, r2, r1
   14a48:	sub	r1, fp, #32
   14a4c:	subs	r0, r6, r9
   14a50:	movne	r0, r6
   14a54:	bl	15838 <__mempcpy_chk@plt+0x47e4>
   14a58:	cmp	r6, r9
   14a5c:	mov	sl, r0
   14a60:	str	r0, [r4]
   14a64:	ldrdeq	r0, [r9]
   14a68:	stmeq	sl, {r0, r1}
   14a6c:	ldr	r1, [r8]
   14a70:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14a74:	add	r0, sl, r1, lsl #3
   14a78:	sub	r1, r2, r1
   14a7c:	lsl	r2, r1, #3
   14a80:	mov	r1, #0
   14a84:	bl	10f94 <memset@plt>
   14a88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14a8c:	str	r0, [r8]
   14a90:	mov	r9, sl
   14a94:	ldr	r6, [r9, r5, lsl #3]!
   14a98:	ldr	r4, [r9, #4]!
   14a9c:	ldm	r7, {r0, r1}
   14aa0:	ldr	r2, [r7, #40]	; 0x28
   14aa4:	ldr	r3, [r7, #44]	; 0x2c
   14aa8:	orr	r8, r1, #1
   14aac:	add	r1, r7, #8
   14ab0:	stm	sp, {r0, r8}
   14ab4:	add	r0, sp, #8
   14ab8:	str	r1, [sp, #20]
   14abc:	stm	r0, {r1, r2, r3}
   14ac0:	mov	r0, r4
   14ac4:	mov	r1, r6
   14ac8:	ldr	r2, [sp, #32]
   14acc:	ldr	r3, [sp, #36]	; 0x24
   14ad0:	bl	137a4 <__mempcpy_chk@plt+0x2750>
   14ad4:	cmp	r6, r0
   14ad8:	bhi	14b3c <__mempcpy_chk@plt+0x3ae8>
   14adc:	add	r6, r0, #1
   14ae0:	movw	r0, #29080	; 0x7198
   14ae4:	movt	r0, #2
   14ae8:	str	r6, [sl, r5, lsl #3]
   14aec:	cmp	r4, r0
   14af0:	beq	14afc <__mempcpy_chk@plt+0x3aa8>
   14af4:	mov	r0, r4
   14af8:	bl	12544 <__mempcpy_chk@plt+0x14f0>
   14afc:	mov	r0, r6
   14b00:	bl	15708 <__mempcpy_chk@plt+0x46b4>
   14b04:	str	r0, [r9]
   14b08:	mov	r4, r0
   14b0c:	add	r3, sp, #8
   14b10:	ldr	r0, [r7]
   14b14:	ldr	r1, [r7, #40]	; 0x28
   14b18:	ldr	r2, [r7, #44]	; 0x2c
   14b1c:	stm	sp, {r0, r8}
   14b20:	ldr	r0, [sp, #20]
   14b24:	stm	r3, {r0, r1, r2}
   14b28:	mov	r0, r4
   14b2c:	mov	r1, r6
   14b30:	ldr	r2, [sp, #32]
   14b34:	ldr	r3, [sp, #36]	; 0x24
   14b38:	bl	137a4 <__mempcpy_chk@plt+0x2750>
   14b3c:	ldr	r0, [sp, #28]
   14b40:	ldr	r1, [sp, #24]
   14b44:	str	r1, [r0]
   14b48:	mov	r0, r4
   14b4c:	sub	sp, fp, #28
   14b50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b54:	bl	11030 <abort@plt>
   14b58:	movw	r3, #29032	; 0x7168
   14b5c:	movt	r3, #2
   14b60:	b	149c4 <__mempcpy_chk@plt+0x3970>
   14b64:	movw	r3, #29032	; 0x7168
   14b68:	mov	r1, r0
   14b6c:	mov	r0, #0
   14b70:	mvn	r2, #0
   14b74:	movt	r3, #2
   14b78:	b	149c4 <__mempcpy_chk@plt+0x3970>
   14b7c:	movw	r3, #29032	; 0x7168
   14b80:	mov	r2, r1
   14b84:	mov	r1, r0
   14b88:	mov	r0, #0
   14b8c:	movt	r3, #2
   14b90:	b	149c4 <__mempcpy_chk@plt+0x3970>
   14b94:	push	{fp, lr}
   14b98:	mov	fp, sp
   14b9c:	sub	sp, sp, #48	; 0x30
   14ba0:	vmov.i32	q8, #0	; 0x00000000
   14ba4:	mov	ip, #32
   14ba8:	mov	r3, sp
   14bac:	mov	lr, r2
   14bb0:	cmp	r1, #10
   14bb4:	add	r2, r3, #16
   14bb8:	vst1.64	{d16-d17}, [r3], ip
   14bbc:	vst1.64	{d16-d17}, [r3]
   14bc0:	vst1.64	{d16-d17}, [r2]
   14bc4:	beq	14be4 <__mempcpy_chk@plt+0x3b90>
   14bc8:	str	r1, [sp]
   14bcc:	mov	r3, sp
   14bd0:	mov	r1, lr
   14bd4:	mvn	r2, #0
   14bd8:	bl	149c4 <__mempcpy_chk@plt+0x3970>
   14bdc:	mov	sp, fp
   14be0:	pop	{fp, pc}
   14be4:	bl	11030 <abort@plt>
   14be8:	push	{r4, sl, fp, lr}
   14bec:	add	fp, sp, #8
   14bf0:	sub	sp, sp, #48	; 0x30
   14bf4:	mov	ip, r3
   14bf8:	mov	r3, sp
   14bfc:	vmov.i32	q8, #0	; 0x00000000
   14c00:	mov	lr, #32
   14c04:	cmp	r1, #10
   14c08:	add	r4, r3, #16
   14c0c:	vst1.64	{d16-d17}, [r3], lr
   14c10:	vst1.64	{d16-d17}, [r3]
   14c14:	vst1.64	{d16-d17}, [r4]
   14c18:	beq	14c38 <__mempcpy_chk@plt+0x3be4>
   14c1c:	str	r1, [sp]
   14c20:	mov	r1, r2
   14c24:	mov	r3, sp
   14c28:	mov	r2, ip
   14c2c:	bl	149c4 <__mempcpy_chk@plt+0x3970>
   14c30:	sub	sp, fp, #8
   14c34:	pop	{r4, sl, fp, pc}
   14c38:	bl	11030 <abort@plt>
   14c3c:	mov	r2, r1
   14c40:	mov	r1, r0
   14c44:	mov	r0, #0
   14c48:	b	14b94 <__mempcpy_chk@plt+0x3b40>
   14c4c:	mov	r3, r2
   14c50:	mov	r2, r1
   14c54:	mov	r1, r0
   14c58:	mov	r0, #0
   14c5c:	b	14be8 <__mempcpy_chk@plt+0x3b94>
   14c60:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14c64:	add	fp, sp, #24
   14c68:	sub	sp, sp, #48	; 0x30
   14c6c:	movw	r8, #29032	; 0x7168
   14c70:	mov	lr, r0
   14c74:	mov	r3, sp
   14c78:	mov	ip, r1
   14c7c:	movt	r8, #2
   14c80:	mov	r1, r3
   14c84:	ldm	r8!, {r0, r4, r5, r6, r7, r9}
   14c88:	stmia	r1!, {r0, r4, r5, r6, r7, r9}
   14c8c:	ldm	r8, {r0, r4, r5, r6, r7, r9}
   14c90:	stm	r1, {r0, r4, r5, r6, r7, r9}
   14c94:	ubfx	r0, r2, #5, #3
   14c98:	and	r2, r2, #31
   14c9c:	mov	r4, #1
   14ca0:	add	r0, r3, r0, lsl #2
   14ca4:	ldr	r1, [r0, #8]
   14ca8:	bic	r4, r4, r1, lsr r2
   14cac:	eor	r1, r1, r4, lsl r2
   14cb0:	mov	r2, ip
   14cb4:	str	r1, [r0, #8]
   14cb8:	mov	r0, #0
   14cbc:	mov	r1, lr
   14cc0:	bl	149c4 <__mempcpy_chk@plt+0x3970>
   14cc4:	sub	sp, fp, #24
   14cc8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14ccc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14cd0:	add	fp, sp, #24
   14cd4:	sub	sp, sp, #48	; 0x30
   14cd8:	movw	lr, #29032	; 0x7168
   14cdc:	mov	ip, r0
   14ce0:	mov	r3, sp
   14ce4:	movt	lr, #2
   14ce8:	mov	r2, r3
   14cec:	ldm	lr!, {r0, r4, r5, r6, r7, r8}
   14cf0:	stmia	r2!, {r0, r4, r5, r6, r7, r8}
   14cf4:	ldm	lr, {r0, r4, r5, r6, r7, r8}
   14cf8:	stm	r2, {r0, r4, r5, r6, r7, r8}
   14cfc:	ubfx	r0, r1, #5, #3
   14d00:	and	r1, r1, #31
   14d04:	mov	r7, #1
   14d08:	add	r0, r3, r0, lsl #2
   14d0c:	ldr	r2, [r0, #8]
   14d10:	bic	r7, r7, r2, lsr r1
   14d14:	eor	r1, r2, r7, lsl r1
   14d18:	mvn	r2, #0
   14d1c:	str	r1, [r0, #8]
   14d20:	mov	r0, #0
   14d24:	mov	r1, ip
   14d28:	bl	149c4 <__mempcpy_chk@plt+0x3970>
   14d2c:	sub	sp, fp, #24
   14d30:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14d34:	push	{r4, r5, r6, r7, fp, lr}
   14d38:	add	fp, sp, #16
   14d3c:	sub	sp, sp, #48	; 0x30
   14d40:	movw	lr, #29032	; 0x7168
   14d44:	mov	ip, r0
   14d48:	mov	r3, sp
   14d4c:	movt	lr, #2
   14d50:	mov	r2, r3
   14d54:	ldm	lr!, {r0, r1, r4, r5, r6, r7}
   14d58:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   14d5c:	ldm	lr, {r0, r1, r4, r5, r6, r7}
   14d60:	stm	r2, {r0, r1, r4, r5, r6, r7}
   14d64:	mov	r1, ip
   14d68:	mvn	r2, #0
   14d6c:	ldr	r0, [sp, #12]
   14d70:	orr	r0, r0, #67108864	; 0x4000000
   14d74:	str	r0, [sp, #12]
   14d78:	mov	r0, #0
   14d7c:	bl	149c4 <__mempcpy_chk@plt+0x3970>
   14d80:	sub	sp, fp, #16
   14d84:	pop	{r4, r5, r6, r7, fp, pc}
   14d88:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14d8c:	add	fp, sp, #24
   14d90:	sub	sp, sp, #48	; 0x30
   14d94:	movw	r8, #29032	; 0x7168
   14d98:	mov	ip, r1
   14d9c:	mov	lr, r0
   14da0:	mov	r3, sp
   14da4:	movt	r8, #2
   14da8:	mov	r2, r3
   14dac:	ldm	r8!, {r0, r1, r4, r5, r6, r7}
   14db0:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   14db4:	ldm	r8, {r0, r1, r4, r5, r6, r7}
   14db8:	stm	r2, {r0, r1, r4, r5, r6, r7}
   14dbc:	mov	r1, lr
   14dc0:	mov	r2, ip
   14dc4:	ldr	r0, [sp, #12]
   14dc8:	orr	r0, r0, #67108864	; 0x4000000
   14dcc:	str	r0, [sp, #12]
   14dd0:	mov	r0, #0
   14dd4:	bl	149c4 <__mempcpy_chk@plt+0x3970>
   14dd8:	sub	sp, fp, #24
   14ddc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14de0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14de4:	add	fp, sp, #24
   14de8:	sub	sp, sp, #96	; 0x60
   14dec:	mov	lr, sp
   14df0:	vmov.i32	q8, #0	; 0x00000000
   14df4:	mov	ip, r2
   14df8:	cmp	r1, #10
   14dfc:	add	r3, lr, #16
   14e00:	mov	r2, lr
   14e04:	vst1.64	{d16-d17}, [r3]
   14e08:	mov	r3, #28
   14e0c:	vst1.64	{d16-d17}, [r2], r3
   14e10:	vst1.32	{d16-d17}, [r2]
   14e14:	beq	14e54 <__mempcpy_chk@plt+0x3e00>
   14e18:	str	r1, [sp, #48]	; 0x30
   14e1c:	add	r3, sp, #48	; 0x30
   14e20:	ldm	lr!, {r2, r4, r5, r6, r7}
   14e24:	add	r1, r3, #4
   14e28:	stmia	r1!, {r2, r4, r5, r6, r7}
   14e2c:	ldm	lr, {r2, r4, r5, r6, r7, r8}
   14e30:	stm	r1, {r2, r4, r5, r6, r7, r8}
   14e34:	mvn	r2, #0
   14e38:	ldr	r1, [sp, #60]	; 0x3c
   14e3c:	orr	r1, r1, #67108864	; 0x4000000
   14e40:	str	r1, [sp, #60]	; 0x3c
   14e44:	mov	r1, ip
   14e48:	bl	149c4 <__mempcpy_chk@plt+0x3970>
   14e4c:	sub	sp, fp, #24
   14e50:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14e54:	bl	11030 <abort@plt>
   14e58:	push	{fp, lr}
   14e5c:	mov	fp, sp
   14e60:	sub	sp, sp, #8
   14e64:	mvn	ip, #0
   14e68:	str	ip, [sp]
   14e6c:	bl	14e78 <__mempcpy_chk@plt+0x3e24>
   14e70:	mov	sp, fp
   14e74:	pop	{fp, pc}
   14e78:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14e7c:	add	fp, sp, #24
   14e80:	sub	sp, sp, #48	; 0x30
   14e84:	movw	ip, #29032	; 0x7168
   14e88:	mov	lr, r3
   14e8c:	mov	r3, sp
   14e90:	cmp	r1, #0
   14e94:	movt	ip, #2
   14e98:	cmpne	r2, #0
   14e9c:	ldm	ip!, {r4, r5, r6, r7, r8, r9}
   14ea0:	stmia	r3!, {r4, r5, r6, r7, r8, r9}
   14ea4:	ldm	ip, {r4, r5, r6, r7, r8, r9}
   14ea8:	stm	r3, {r4, r5, r6, r7, r8, r9}
   14eac:	mov	r3, #10
   14eb0:	str	r3, [sp]
   14eb4:	bne	14ebc <__mempcpy_chk@plt+0x3e68>
   14eb8:	bl	11030 <abort@plt>
   14ebc:	ldr	ip, [fp, #8]
   14ec0:	str	r2, [sp, #44]	; 0x2c
   14ec4:	str	r1, [sp, #40]	; 0x28
   14ec8:	mov	r3, sp
   14ecc:	mov	r1, lr
   14ed0:	mov	r2, ip
   14ed4:	bl	149c4 <__mempcpy_chk@plt+0x3970>
   14ed8:	sub	sp, fp, #24
   14edc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14ee0:	push	{fp, lr}
   14ee4:	mov	fp, sp
   14ee8:	sub	sp, sp, #8
   14eec:	mov	r3, r2
   14ef0:	mov	r2, r1
   14ef4:	mov	r1, r0
   14ef8:	mvn	r0, #0
   14efc:	str	r0, [sp]
   14f00:	mov	r0, #0
   14f04:	bl	14e78 <__mempcpy_chk@plt+0x3e24>
   14f08:	mov	sp, fp
   14f0c:	pop	{fp, pc}
   14f10:	push	{fp, lr}
   14f14:	mov	fp, sp
   14f18:	sub	sp, sp, #8
   14f1c:	mov	ip, r2
   14f20:	mov	r2, r1
   14f24:	mov	r1, r0
   14f28:	str	r3, [sp]
   14f2c:	mov	r0, #0
   14f30:	mov	r3, ip
   14f34:	bl	14e78 <__mempcpy_chk@plt+0x3e24>
   14f38:	mov	sp, fp
   14f3c:	pop	{fp, pc}
   14f40:	movw	r3, #28928	; 0x7100
   14f44:	movt	r3, #2
   14f48:	b	149c4 <__mempcpy_chk@plt+0x3970>
   14f4c:	movw	r3, #28928	; 0x7100
   14f50:	mov	r2, r1
   14f54:	mov	r1, r0
   14f58:	mov	r0, #0
   14f5c:	movt	r3, #2
   14f60:	b	149c4 <__mempcpy_chk@plt+0x3970>
   14f64:	movw	r3, #28928	; 0x7100
   14f68:	mvn	r2, #0
   14f6c:	movt	r3, #2
   14f70:	b	149c4 <__mempcpy_chk@plt+0x3970>
   14f74:	movw	r3, #28928	; 0x7100
   14f78:	mov	r1, r0
   14f7c:	mov	r0, #0
   14f80:	mvn	r2, #0
   14f84:	movt	r3, #2
   14f88:	b	149c4 <__mempcpy_chk@plt+0x3970>
   14f8c:	push	{r4, r5, fp, lr}
   14f90:	add	fp, sp, #8
   14f94:	mov	r5, r0
   14f98:	mov	r4, r1
   14f9c:	mov	r0, #0
   14fa0:	mov	r2, #5
   14fa4:	mov	r1, r5
   14fa8:	bl	10e80 <dcgettext@plt>
   14fac:	cmp	r0, r5
   14fb0:	popne	{r4, r5, fp, pc}
   14fb4:	bl	15e98 <__mempcpy_chk@plt+0x4e44>
   14fb8:	ldrb	r1, [r0]
   14fbc:	and	r1, r1, #223	; 0xdf
   14fc0:	cmp	r1, #71	; 0x47
   14fc4:	beq	1502c <__mempcpy_chk@plt+0x3fd8>
   14fc8:	cmp	r1, #85	; 0x55
   14fcc:	bne	15050 <__mempcpy_chk@plt+0x3ffc>
   14fd0:	ldrb	r1, [r0, #1]
   14fd4:	and	r1, r1, #223	; 0xdf
   14fd8:	cmp	r1, #84	; 0x54
   14fdc:	bne	15050 <__mempcpy_chk@plt+0x3ffc>
   14fe0:	ldrb	r1, [r0, #2]
   14fe4:	and	r1, r1, #223	; 0xdf
   14fe8:	cmp	r1, #70	; 0x46
   14fec:	ldrbeq	r1, [r0, #3]
   14ff0:	cmpeq	r1, #45	; 0x2d
   14ff4:	bne	15050 <__mempcpy_chk@plt+0x3ffc>
   14ff8:	ldrb	r1, [r0, #4]
   14ffc:	cmp	r1, #56	; 0x38
   15000:	ldrbeq	r0, [r0, #5]
   15004:	cmpeq	r0, #0
   15008:	bne	15050 <__mempcpy_chk@plt+0x3ffc>
   1500c:	ldrb	r1, [r5]
   15010:	movw	r2, #27228	; 0x6a5c
   15014:	movw	r0, #27232	; 0x6a60
   15018:	movt	r2, #1
   1501c:	movt	r0, #1
   15020:	cmp	r1, #96	; 0x60
   15024:	moveq	r0, r2
   15028:	pop	{r4, r5, fp, pc}
   1502c:	ldrb	r1, [r0, #1]
   15030:	and	r1, r1, #223	; 0xdf
   15034:	cmp	r1, #66	; 0x42
   15038:	bne	15050 <__mempcpy_chk@plt+0x3ffc>
   1503c:	ldrb	r1, [r0, #2]
   15040:	cmp	r1, #49	; 0x31
   15044:	ldrbeq	r1, [r0, #3]
   15048:	cmpeq	r1, #56	; 0x38
   1504c:	beq	1506c <__mempcpy_chk@plt+0x4018>
   15050:	movw	r1, #27222	; 0x6a56
   15054:	movw	r0, #27226	; 0x6a5a
   15058:	cmp	r4, #9
   1505c:	movt	r1, #1
   15060:	movt	r0, #1
   15064:	moveq	r0, r1
   15068:	pop	{r4, r5, fp, pc}
   1506c:	ldrb	r1, [r0, #4]
   15070:	cmp	r1, #48	; 0x30
   15074:	ldrbeq	r1, [r0, #5]
   15078:	cmpeq	r1, #51	; 0x33
   1507c:	bne	15050 <__mempcpy_chk@plt+0x3ffc>
   15080:	ldrb	r1, [r0, #6]
   15084:	cmp	r1, #48	; 0x30
   15088:	ldrbeq	r0, [r0, #7]
   1508c:	cmpeq	r0, #0
   15090:	bne	15050 <__mempcpy_chk@plt+0x3ffc>
   15094:	ldrb	r1, [r5]
   15098:	movw	r2, #27236	; 0x6a64
   1509c:	movw	r0, #27240	; 0x6a68
   150a0:	movt	r2, #1
   150a4:	movt	r0, #1
   150a8:	b	15020 <__mempcpy_chk@plt+0x3fcc>
   150ac:	push	{r4, r5, r6, sl, fp, lr}
   150b0:	add	fp, sp, #16
   150b4:	ldr	r4, [r0], #8
   150b8:	mov	r5, r1
   150bc:	cmp	r4, r0
   150c0:	beq	150e0 <__mempcpy_chk@plt+0x408c>
   150c4:	mov	r0, r4
   150c8:	mov	r1, r5
   150cc:	bl	15bf0 <__mempcpy_chk@plt+0x4b9c>
   150d0:	mov	r6, r0
   150d4:	cmp	r0, #0
   150d8:	moveq	r6, r4
   150dc:	b	15108 <__mempcpy_chk@plt+0x40b4>
   150e0:	mov	r0, r5
   150e4:	bl	15bc0 <__mempcpy_chk@plt+0x4b6c>
   150e8:	cmp	r0, #0
   150ec:	beq	15104 <__mempcpy_chk@plt+0x40b0>
   150f0:	mov	r1, r4
   150f4:	mov	r2, r5
   150f8:	mov	r6, r0
   150fc:	bl	10e5c <memcpy@plt>
   15100:	b	15108 <__mempcpy_chk@plt+0x40b4>
   15104:	mov	r6, #0
   15108:	mov	r0, r6
   1510c:	pop	{r4, r5, r6, sl, fp, pc}
   15110:	push	{r4, r5, r6, sl, fp, lr}
   15114:	add	fp, sp, #16
   15118:	mov	r4, r0
   1511c:	add	r6, r0, #8
   15120:	ldrd	r0, [r0]
   15124:	lsl	r5, r1, #1
   15128:	cmp	r0, r6
   1512c:	beq	15138 <__mempcpy_chk@plt+0x40e4>
   15130:	bl	12544 <__mempcpy_chk@plt+0x14f0>
   15134:	ldr	r1, [r4, #4]
   15138:	cmp	r5, r1
   1513c:	bcc	15160 <__mempcpy_chk@plt+0x410c>
   15140:	mov	r0, r5
   15144:	bl	15bc0 <__mempcpy_chk@plt+0x4b6c>
   15148:	cmp	r0, #0
   1514c:	beq	1516c <__mempcpy_chk@plt+0x4118>
   15150:	str	r0, [r4]
   15154:	mov	r0, #1
   15158:	str	r5, [r4, #4]
   1515c:	pop	{r4, r5, r6, sl, fp, pc}
   15160:	bl	10f7c <__errno_location@plt>
   15164:	mov	r1, #12
   15168:	str	r1, [r0]
   1516c:	str	r6, [r4]
   15170:	mov	r0, #0
   15174:	mov	r5, #1024	; 0x400
   15178:	b	15158 <__mempcpy_chk@plt+0x4104>
   1517c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15180:	add	fp, sp, #24
   15184:	ldrd	r8, [r0]
   15188:	add	r7, r0, #8
   1518c:	mov	r4, r0
   15190:	lsl	r5, r9, #1
   15194:	cmp	r8, r7
   15198:	beq	151c4 <__mempcpy_chk@plt+0x4170>
   1519c:	cmp	r5, r9
   151a0:	bcc	151f8 <__mempcpy_chk@plt+0x41a4>
   151a4:	mov	r0, r8
   151a8:	mov	r1, r5
   151ac:	bl	15bf0 <__mempcpy_chk@plt+0x4b9c>
   151b0:	mov	r6, r0
   151b4:	cmp	r0, #0
   151b8:	bne	151e8 <__mempcpy_chk@plt+0x4194>
   151bc:	ldr	r8, [r4]
   151c0:	b	15204 <__mempcpy_chk@plt+0x41b0>
   151c4:	mov	r0, r5
   151c8:	bl	15bc0 <__mempcpy_chk@plt+0x4b6c>
   151cc:	cmp	r0, #0
   151d0:	moveq	r0, #0
   151d4:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   151d8:	ldr	r2, [r4, #4]
   151dc:	mov	r1, r8
   151e0:	mov	r6, r0
   151e4:	bl	10e5c <memcpy@plt>
   151e8:	str	r6, [r4]
   151ec:	mov	r0, #1
   151f0:	str	r5, [r4, #4]
   151f4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   151f8:	bl	10f7c <__errno_location@plt>
   151fc:	mov	r1, #12
   15200:	str	r1, [r0]
   15204:	mov	r0, r8
   15208:	bl	12544 <__mempcpy_chk@plt+0x14f0>
   1520c:	mov	r0, #0
   15210:	mov	r5, #1024	; 0x400
   15214:	str	r7, [r4]
   15218:	b	151f0 <__mempcpy_chk@plt+0x419c>
   1521c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15220:	add	fp, sp, #24
   15224:	sub	sp, sp, #32
   15228:	ldr	r6, [fp, #12]
   1522c:	ldr	r7, [fp, #8]
   15230:	mov	r4, r2
   15234:	mov	r8, r0
   15238:	cmp	r1, #0
   1523c:	beq	15264 <__mempcpy_chk@plt+0x4210>
   15240:	movw	r2, #27328	; 0x6ac0
   15244:	mov	r5, r1
   15248:	str	r3, [sp, #4]
   1524c:	str	r4, [sp]
   15250:	mov	r0, r8
   15254:	mov	r1, #1
   15258:	movt	r2, #1
   1525c:	mov	r3, r5
   15260:	b	1527c <__mempcpy_chk@plt+0x4228>
   15264:	movw	r2, #27340	; 0x6acc
   15268:	str	r3, [sp]
   1526c:	mov	r0, r8
   15270:	mov	r1, #1
   15274:	mov	r3, r4
   15278:	movt	r2, #1
   1527c:	bl	10fb8 <__fprintf_chk@plt>
   15280:	movw	r1, #27347	; 0x6ad3
   15284:	mov	r0, #0
   15288:	mov	r2, #5
   1528c:	movt	r1, #1
   15290:	bl	10e80 <dcgettext@plt>
   15294:	movw	r2, #28065	; 0x6da1
   15298:	mov	r3, r0
   1529c:	movw	r0, #2022	; 0x7e6
   152a0:	mov	r1, #1
   152a4:	str	r0, [sp]
   152a8:	movt	r2, #1
   152ac:	mov	r0, r8
   152b0:	bl	10fb8 <__fprintf_chk@plt>
   152b4:	movw	r4, #25351	; 0x6307
   152b8:	mov	r1, r8
   152bc:	movt	r4, #1
   152c0:	mov	r0, r4
   152c4:	bl	10dfc <fputs_unlocked@plt>
   152c8:	movw	r1, #27351	; 0x6ad7
   152cc:	mov	r0, #0
   152d0:	mov	r2, #5
   152d4:	movt	r1, #1
   152d8:	bl	10e80 <dcgettext@plt>
   152dc:	movw	r3, #27522	; 0x6b82
   152e0:	mov	r2, r0
   152e4:	mov	r0, r8
   152e8:	mov	r1, #1
   152ec:	movt	r3, #1
   152f0:	bl	10fb8 <__fprintf_chk@plt>
   152f4:	mov	r0, r4
   152f8:	mov	r1, r8
   152fc:	bl	10dfc <fputs_unlocked@plt>
   15300:	cmp	r6, #9
   15304:	bhi	15368 <__mempcpy_chk@plt+0x4314>
   15308:	add	r0, pc, #0
   1530c:	ldr	pc, [r0, r6, lsl #2]
   15310:	andeq	r5, r1, r0, asr #10
   15314:	andeq	r5, r1, r8, lsr r3
   15318:	andeq	r5, r1, r4, ror r3
   1531c:	muleq	r1, ip, r3
   15320:	andeq	r5, r1, r4, asr #7
   15324:	andeq	r5, r1, ip, ror #7
   15328:	andeq	r5, r1, r4, lsl r4
   1532c:	andeq	r5, r1, ip, asr #8
   15330:	andeq	r5, r1, ip, ror #9
   15334:	muleq	r1, r4, r4
   15338:	movw	r1, #27556	; 0x6ba4
   1533c:	mov	r0, #0
   15340:	mov	r2, #5
   15344:	movt	r1, #1
   15348:	bl	10e80 <dcgettext@plt>
   1534c:	ldr	r3, [r7]
   15350:	mov	r2, r0
   15354:	mov	r0, r8
   15358:	mov	r1, #1
   1535c:	sub	sp, fp, #24
   15360:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   15364:	b	10fb8 <__fprintf_chk@plt>
   15368:	movw	r1, #27875	; 0x6ce3
   1536c:	movt	r1, #1
   15370:	b	1549c <__mempcpy_chk@plt+0x4448>
   15374:	movw	r1, #27572	; 0x6bb4
   15378:	mov	r0, #0
   1537c:	mov	r2, #5
   15380:	movt	r1, #1
   15384:	bl	10e80 <dcgettext@plt>
   15388:	mov	r2, r0
   1538c:	ldr	r3, [r7]
   15390:	ldr	r0, [r7, #4]
   15394:	str	r0, [sp]
   15398:	b	15488 <__mempcpy_chk@plt+0x4434>
   1539c:	movw	r1, #27595	; 0x6bcb
   153a0:	mov	r0, #0
   153a4:	mov	r2, #5
   153a8:	movt	r1, #1
   153ac:	bl	10e80 <dcgettext@plt>
   153b0:	ldr	r3, [r7]
   153b4:	mov	r2, r0
   153b8:	ldmib	r7, {r0, r1}
   153bc:	stm	sp, {r0, r1}
   153c0:	b	15488 <__mempcpy_chk@plt+0x4434>
   153c4:	movw	r1, #27623	; 0x6be7
   153c8:	mov	r0, #0
   153cc:	mov	r2, #5
   153d0:	movt	r1, #1
   153d4:	bl	10e80 <dcgettext@plt>
   153d8:	ldr	r3, [r7]
   153dc:	mov	r2, r0
   153e0:	ldmib	r7, {r0, r1, r7}
   153e4:	stm	sp, {r0, r1, r7}
   153e8:	b	15488 <__mempcpy_chk@plt+0x4434>
   153ec:	movw	r1, #27655	; 0x6c07
   153f0:	mov	r0, #0
   153f4:	mov	r2, #5
   153f8:	movt	r1, #1
   153fc:	bl	10e80 <dcgettext@plt>
   15400:	ldr	r3, [r7]
   15404:	mov	r2, r0
   15408:	ldmib	r7, {r0, r1, r6, r7}
   1540c:	stm	sp, {r0, r1, r6, r7}
   15410:	b	15488 <__mempcpy_chk@plt+0x4434>
   15414:	movw	r1, #27691	; 0x6c2b
   15418:	mov	r0, #0
   1541c:	mov	r2, #5
   15420:	movt	r1, #1
   15424:	bl	10e80 <dcgettext@plt>
   15428:	ldr	r3, [r7]
   1542c:	mov	r2, r0
   15430:	ldmib	r7, {r0, r1, r6}
   15434:	ldr	r5, [r7, #16]
   15438:	ldr	r7, [r7, #20]
   1543c:	stm	sp, {r0, r1, r6}
   15440:	str	r5, [sp, #12]
   15444:	str	r7, [sp, #16]
   15448:	b	15488 <__mempcpy_chk@plt+0x4434>
   1544c:	movw	r1, #27731	; 0x6c53
   15450:	mov	r0, #0
   15454:	mov	r2, #5
   15458:	movt	r1, #1
   1545c:	bl	10e80 <dcgettext@plt>
   15460:	ldr	r3, [r7]
   15464:	mov	r2, r0
   15468:	ldmib	r7, {r0, r1, r6}
   1546c:	ldr	r5, [r7, #16]
   15470:	ldr	r4, [r7, #20]
   15474:	ldr	r7, [r7, #24]
   15478:	stm	sp, {r0, r1, r6}
   1547c:	str	r5, [sp, #12]
   15480:	str	r4, [sp, #16]
   15484:	str	r7, [sp, #20]
   15488:	mov	r0, r8
   1548c:	mov	r1, #1
   15490:	b	1553c <__mempcpy_chk@plt+0x44e8>
   15494:	movw	r1, #27823	; 0x6caf
   15498:	movt	r1, #1
   1549c:	mov	r0, #0
   154a0:	mov	r2, #5
   154a4:	bl	10e80 <dcgettext@plt>
   154a8:	mov	ip, r0
   154ac:	ldr	r3, [r7]
   154b0:	ldr	r0, [r7, #4]
   154b4:	ldr	r1, [r7, #8]
   154b8:	ldr	r6, [r7, #12]
   154bc:	ldr	r5, [r7, #16]
   154c0:	ldr	r4, [r7, #20]
   154c4:	ldr	r2, [r7, #24]
   154c8:	ldr	lr, [r7, #28]
   154cc:	ldr	r7, [r7, #32]
   154d0:	stm	sp, {r0, r1, r6}
   154d4:	str	r5, [sp, #12]
   154d8:	str	r4, [sp, #16]
   154dc:	str	r2, [sp, #20]
   154e0:	str	lr, [sp, #24]
   154e4:	str	r7, [sp, #28]
   154e8:	b	15530 <__mempcpy_chk@plt+0x44dc>
   154ec:	movw	r1, #27775	; 0x6c7f
   154f0:	mov	r0, #0
   154f4:	mov	r2, #5
   154f8:	movt	r1, #1
   154fc:	bl	10e80 <dcgettext@plt>
   15500:	mov	ip, r0
   15504:	ldr	r3, [r7]
   15508:	ldmib	r7, {r0, r1, r6}
   1550c:	ldr	r5, [r7, #16]
   15510:	ldr	r4, [r7, #20]
   15514:	ldr	r2, [r7, #24]
   15518:	ldr	r7, [r7, #28]
   1551c:	stm	sp, {r0, r1, r6}
   15520:	str	r5, [sp, #12]
   15524:	str	r4, [sp, #16]
   15528:	str	r2, [sp, #20]
   1552c:	str	r7, [sp, #24]
   15530:	mov	r0, r8
   15534:	mov	r1, #1
   15538:	mov	r2, ip
   1553c:	bl	10fb8 <__fprintf_chk@plt>
   15540:	sub	sp, fp, #24
   15544:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15548:	push	{r4, sl, fp, lr}
   1554c:	add	fp, sp, #8
   15550:	sub	sp, sp, #8
   15554:	ldr	ip, [fp, #8]
   15558:	mov	lr, #0
   1555c:	ldr	r4, [ip, lr, lsl #2]
   15560:	add	lr, lr, #1
   15564:	cmp	r4, #0
   15568:	bne	1555c <__mempcpy_chk@plt+0x4508>
   1556c:	sub	r4, lr, #1
   15570:	str	ip, [sp]
   15574:	str	r4, [sp, #4]
   15578:	bl	1521c <__mempcpy_chk@plt+0x41c8>
   1557c:	sub	sp, fp, #8
   15580:	pop	{r4, sl, fp, pc}
   15584:	push	{r4, r5, fp, lr}
   15588:	add	fp, sp, #8
   1558c:	sub	sp, sp, #48	; 0x30
   15590:	ldr	r4, [fp, #8]
   15594:	mov	ip, #0
   15598:	add	lr, sp, #8
   1559c:	ldr	r5, [r4]
   155a0:	cmp	r5, #0
   155a4:	str	r5, [lr, ip, lsl #2]
   155a8:	beq	155bc <__mempcpy_chk@plt+0x4568>
   155ac:	add	ip, ip, #1
   155b0:	add	r4, r4, #4
   155b4:	cmp	ip, #10
   155b8:	bcc	1559c <__mempcpy_chk@plt+0x4548>
   155bc:	str	lr, [sp]
   155c0:	str	ip, [sp, #4]
   155c4:	bl	1521c <__mempcpy_chk@plt+0x41c8>
   155c8:	sub	sp, fp, #8
   155cc:	pop	{r4, r5, fp, pc}
   155d0:	push	{fp, lr}
   155d4:	mov	fp, sp
   155d8:	sub	sp, sp, #8
   155dc:	add	ip, fp, #8
   155e0:	str	ip, [sp, #4]
   155e4:	str	ip, [sp]
   155e8:	bl	15584 <__mempcpy_chk@plt+0x4530>
   155ec:	mov	sp, fp
   155f0:	pop	{fp, pc}
   155f4:	push	{fp, lr}
   155f8:	mov	fp, sp
   155fc:	movw	r0, #28996	; 0x7144
   15600:	movt	r0, #2
   15604:	ldr	r1, [r0]
   15608:	movw	r0, #25351	; 0x6307
   1560c:	movt	r0, #1
   15610:	bl	10dfc <fputs_unlocked@plt>
   15614:	movw	r1, #27935	; 0x6d1f
   15618:	mov	r0, #0
   1561c:	mov	r2, #5
   15620:	movt	r1, #1
   15624:	bl	10e80 <dcgettext@plt>
   15628:	movw	r2, #27955	; 0x6d33
   1562c:	mov	r1, r0
   15630:	mov	r0, #1
   15634:	movt	r2, #1
   15638:	bl	10fa0 <__printf_chk@plt>
   1563c:	movw	r1, #27977	; 0x6d49
   15640:	mov	r0, #0
   15644:	mov	r2, #5
   15648:	movt	r1, #1
   1564c:	bl	10e80 <dcgettext@plt>
   15650:	movw	r2, #26119	; 0x6607
   15654:	movw	r3, #26281	; 0x66a9
   15658:	mov	r1, r0
   1565c:	mov	r0, #1
   15660:	movt	r2, #1
   15664:	movt	r3, #1
   15668:	bl	10fa0 <__printf_chk@plt>
   1566c:	movw	r1, #27997	; 0x6d5d
   15670:	mov	r0, #0
   15674:	mov	r2, #5
   15678:	movt	r1, #1
   1567c:	bl	10e80 <dcgettext@plt>
   15680:	movw	r2, #28036	; 0x6d84
   15684:	mov	r1, r0
   15688:	mov	r0, #1
   1568c:	movt	r2, #1
   15690:	pop	{fp, lr}
   15694:	b	10fa0 <__printf_chk@plt>
   15698:	b	1569c <__mempcpy_chk@plt+0x4648>
   1569c:	push	{r4, r5, r6, sl, fp, lr}
   156a0:	add	fp, sp, #16
   156a4:	mov	r4, r2
   156a8:	mov	r5, r1
   156ac:	mov	r6, r0
   156b0:	bl	15f30 <__mempcpy_chk@plt+0x4edc>
   156b4:	cmp	r0, #0
   156b8:	popne	{r4, r5, r6, sl, fp, pc}
   156bc:	cmp	r6, #0
   156c0:	beq	156d4 <__mempcpy_chk@plt+0x4680>
   156c4:	cmp	r5, #0
   156c8:	cmpne	r4, #0
   156cc:	bne	156d4 <__mempcpy_chk@plt+0x4680>
   156d0:	pop	{r4, r5, r6, sl, fp, pc}
   156d4:	bl	15b28 <__mempcpy_chk@plt+0x4ad4>
   156d8:	push	{fp, lr}
   156dc:	mov	fp, sp
   156e0:	bl	15bc0 <__mempcpy_chk@plt+0x4b6c>
   156e4:	cmp	r0, #0
   156e8:	popne	{fp, pc}
   156ec:	bl	15b28 <__mempcpy_chk@plt+0x4ad4>
   156f0:	push	{fp, lr}
   156f4:	mov	fp, sp
   156f8:	bl	15bc0 <__mempcpy_chk@plt+0x4b6c>
   156fc:	cmp	r0, #0
   15700:	popne	{fp, pc}
   15704:	bl	15b28 <__mempcpy_chk@plt+0x4ad4>
   15708:	push	{fp, lr}
   1570c:	mov	fp, sp
   15710:	bl	15bc0 <__mempcpy_chk@plt+0x4b6c>
   15714:	cmp	r0, #0
   15718:	popne	{fp, pc}
   1571c:	bl	15b28 <__mempcpy_chk@plt+0x4ad4>
   15720:	push	{r4, r5, fp, lr}
   15724:	add	fp, sp, #8
   15728:	mov	r4, r1
   1572c:	mov	r5, r0
   15730:	bl	15bf0 <__mempcpy_chk@plt+0x4b9c>
   15734:	cmp	r0, #0
   15738:	popne	{r4, r5, fp, pc}
   1573c:	cmp	r5, #0
   15740:	beq	15750 <__mempcpy_chk@plt+0x46fc>
   15744:	cmp	r4, #0
   15748:	bne	15750 <__mempcpy_chk@plt+0x46fc>
   1574c:	pop	{r4, r5, fp, pc}
   15750:	bl	15b28 <__mempcpy_chk@plt+0x4ad4>
   15754:	push	{fp, lr}
   15758:	mov	fp, sp
   1575c:	cmp	r1, #0
   15760:	orreq	r1, r1, #1
   15764:	bl	15bf0 <__mempcpy_chk@plt+0x4b9c>
   15768:	cmp	r0, #0
   1576c:	popne	{fp, pc}
   15770:	bl	15b28 <__mempcpy_chk@plt+0x4ad4>
   15774:	push	{fp, lr}
   15778:	mov	fp, sp
   1577c:	clz	r3, r2
   15780:	lsr	ip, r3, #5
   15784:	clz	r3, r1
   15788:	lsr	r3, r3, #5
   1578c:	orrs	r3, r3, ip
   15790:	movwne	r1, #1
   15794:	movwne	r2, #1
   15798:	bl	15f30 <__mempcpy_chk@plt+0x4edc>
   1579c:	cmp	r0, #0
   157a0:	popne	{fp, pc}
   157a4:	bl	15b28 <__mempcpy_chk@plt+0x4ad4>
   157a8:	push	{fp, lr}
   157ac:	mov	fp, sp
   157b0:	mov	r2, r1
   157b4:	mov	r1, r0
   157b8:	mov	r0, #0
   157bc:	bl	15f30 <__mempcpy_chk@plt+0x4edc>
   157c0:	cmp	r0, #0
   157c4:	popne	{fp, pc}
   157c8:	bl	15b28 <__mempcpy_chk@plt+0x4ad4>
   157cc:	mov	r2, r1
   157d0:	mov	r1, r0
   157d4:	mov	r0, #0
   157d8:	b	15774 <__mempcpy_chk@plt+0x4720>
   157dc:	mov	r2, #1
   157e0:	b	157e4 <__mempcpy_chk@plt+0x4790>
   157e4:	push	{r4, r5, fp, lr}
   157e8:	add	fp, sp, #8
   157ec:	ldr	r5, [r1]
   157f0:	mov	r4, r1
   157f4:	cmp	r0, #0
   157f8:	beq	15810 <__mempcpy_chk@plt+0x47bc>
   157fc:	mov	r1, #1
   15800:	add	r1, r1, r5, lsr #1
   15804:	adds	r5, r5, r1
   15808:	bcc	15828 <__mempcpy_chk@plt+0x47d4>
   1580c:	bl	15b28 <__mempcpy_chk@plt+0x4ad4>
   15810:	cmp	r5, #0
   15814:	bne	15828 <__mempcpy_chk@plt+0x47d4>
   15818:	mov	r1, #64	; 0x40
   1581c:	cmp	r2, #64	; 0x40
   15820:	udiv	r5, r1, r2
   15824:	addhi	r5, r5, #1
   15828:	mov	r1, r5
   1582c:	bl	1569c <__mempcpy_chk@plt+0x4648>
   15830:	str	r5, [r4]
   15834:	pop	{r4, r5, fp, pc}
   15838:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1583c:	add	fp, sp, #24
   15840:	ldr	r6, [r1]
   15844:	mov	r8, r1
   15848:	ldr	r4, [fp, #8]
   1584c:	add	r1, r6, r6, asr #1
   15850:	cmp	r1, r6
   15854:	mvnvs	r1, #-2147483648	; 0x80000000
   15858:	cmp	r1, r3
   1585c:	mov	r5, r1
   15860:	movgt	r5, r3
   15864:	cmn	r3, #1
   15868:	movle	r5, r1
   1586c:	cmn	r4, #1
   15870:	ble	15890 <__mempcpy_chk@plt+0x483c>
   15874:	cmp	r4, #0
   15878:	beq	158e4 <__mempcpy_chk@plt+0x4890>
   1587c:	cmn	r5, #1
   15880:	ble	158b8 <__mempcpy_chk@plt+0x4864>
   15884:	mvn	r7, #-2147483648	; 0x80000000
   15888:	udiv	r1, r7, r4
   1588c:	b	158ac <__mempcpy_chk@plt+0x4858>
   15890:	cmn	r5, #1
   15894:	ble	158d4 <__mempcpy_chk@plt+0x4880>
   15898:	cmn	r4, #1
   1589c:	beq	158e4 <__mempcpy_chk@plt+0x4890>
   158a0:	mov	r1, #-2147483648	; 0x80000000
   158a4:	mvn	r7, #-2147483648	; 0x80000000
   158a8:	sdiv	r1, r1, r4
   158ac:	cmp	r1, r5
   158b0:	bge	158e4 <__mempcpy_chk@plt+0x4890>
   158b4:	b	158f4 <__mempcpy_chk@plt+0x48a0>
   158b8:	beq	158e4 <__mempcpy_chk@plt+0x4890>
   158bc:	mov	r1, #-2147483648	; 0x80000000
   158c0:	mvn	r7, #-2147483648	; 0x80000000
   158c4:	sdiv	r1, r1, r5
   158c8:	cmp	r1, r4
   158cc:	bge	158e4 <__mempcpy_chk@plt+0x4890>
   158d0:	b	158f4 <__mempcpy_chk@plt+0x48a0>
   158d4:	mvn	r7, #-2147483648	; 0x80000000
   158d8:	sdiv	r1, r7, r4
   158dc:	cmp	r5, r1
   158e0:	blt	158f4 <__mempcpy_chk@plt+0x48a0>
   158e4:	mul	r1, r5, r4
   158e8:	mov	r7, #64	; 0x40
   158ec:	cmp	r1, #63	; 0x3f
   158f0:	bgt	158fc <__mempcpy_chk@plt+0x48a8>
   158f4:	sdiv	r5, r7, r4
   158f8:	mul	r1, r5, r4
   158fc:	cmp	r0, #0
   15900:	moveq	r7, #0
   15904:	streq	r7, [r8]
   15908:	sub	r7, r5, r6
   1590c:	cmp	r7, r2
   15910:	bge	159b4 <__mempcpy_chk@plt+0x4960>
   15914:	add	r5, r6, r2
   15918:	mov	r2, #0
   1591c:	mov	r1, #0
   15920:	cmp	r5, r3
   15924:	movwgt	r2, #1
   15928:	cmn	r3, #1
   1592c:	movwgt	r1, #1
   15930:	cmp	r5, r6
   15934:	bvs	1599c <__mempcpy_chk@plt+0x4948>
   15938:	ands	r1, r1, r2
   1593c:	bne	1599c <__mempcpy_chk@plt+0x4948>
   15940:	cmn	r4, #1
   15944:	ble	15964 <__mempcpy_chk@plt+0x4910>
   15948:	cmp	r4, #0
   1594c:	beq	159b0 <__mempcpy_chk@plt+0x495c>
   15950:	cmn	r5, #1
   15954:	ble	15988 <__mempcpy_chk@plt+0x4934>
   15958:	mvn	r1, #-2147483648	; 0x80000000
   1595c:	udiv	r1, r1, r4
   15960:	b	1597c <__mempcpy_chk@plt+0x4928>
   15964:	cmn	r5, #1
   15968:	ble	159a0 <__mempcpy_chk@plt+0x494c>
   1596c:	cmn	r4, #1
   15970:	beq	159b0 <__mempcpy_chk@plt+0x495c>
   15974:	mov	r1, #-2147483648	; 0x80000000
   15978:	sdiv	r1, r1, r4
   1597c:	cmp	r1, r5
   15980:	bge	159b0 <__mempcpy_chk@plt+0x495c>
   15984:	b	1599c <__mempcpy_chk@plt+0x4948>
   15988:	beq	159b0 <__mempcpy_chk@plt+0x495c>
   1598c:	mov	r1, #-2147483648	; 0x80000000
   15990:	sdiv	r1, r1, r5
   15994:	cmp	r1, r4
   15998:	bge	159b0 <__mempcpy_chk@plt+0x495c>
   1599c:	bl	15b28 <__mempcpy_chk@plt+0x4ad4>
   159a0:	mvn	r1, #-2147483648	; 0x80000000
   159a4:	sdiv	r1, r1, r4
   159a8:	cmp	r5, r1
   159ac:	blt	1599c <__mempcpy_chk@plt+0x4948>
   159b0:	mul	r1, r5, r4
   159b4:	bl	15720 <__mempcpy_chk@plt+0x46cc>
   159b8:	str	r5, [r8]
   159bc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   159c0:	push	{fp, lr}
   159c4:	mov	fp, sp
   159c8:	mov	r1, #1
   159cc:	bl	15b6c <__mempcpy_chk@plt+0x4b18>
   159d0:	cmp	r0, #0
   159d4:	popne	{fp, pc}
   159d8:	bl	15b28 <__mempcpy_chk@plt+0x4ad4>
   159dc:	push	{fp, lr}
   159e0:	mov	fp, sp
   159e4:	bl	15b6c <__mempcpy_chk@plt+0x4b18>
   159e8:	cmp	r0, #0
   159ec:	popne	{fp, pc}
   159f0:	bl	15b28 <__mempcpy_chk@plt+0x4ad4>
   159f4:	push	{fp, lr}
   159f8:	mov	fp, sp
   159fc:	mov	r1, #1
   15a00:	bl	15b6c <__mempcpy_chk@plt+0x4b18>
   15a04:	cmp	r0, #0
   15a08:	popne	{fp, pc}
   15a0c:	bl	15b28 <__mempcpy_chk@plt+0x4ad4>
   15a10:	push	{fp, lr}
   15a14:	mov	fp, sp
   15a18:	bl	15b6c <__mempcpy_chk@plt+0x4b18>
   15a1c:	cmp	r0, #0
   15a20:	popne	{fp, pc}
   15a24:	bl	15b28 <__mempcpy_chk@plt+0x4ad4>
   15a28:	push	{r4, r5, r6, sl, fp, lr}
   15a2c:	add	fp, sp, #16
   15a30:	mov	r5, r0
   15a34:	mov	r0, r1
   15a38:	mov	r4, r1
   15a3c:	bl	15bc0 <__mempcpy_chk@plt+0x4b6c>
   15a40:	cmp	r0, #0
   15a44:	beq	15a60 <__mempcpy_chk@plt+0x4a0c>
   15a48:	mov	r1, r5
   15a4c:	mov	r2, r4
   15a50:	mov	r6, r0
   15a54:	bl	10e5c <memcpy@plt>
   15a58:	mov	r0, r6
   15a5c:	pop	{r4, r5, r6, sl, fp, pc}
   15a60:	bl	15b28 <__mempcpy_chk@plt+0x4ad4>
   15a64:	push	{r4, r5, r6, sl, fp, lr}
   15a68:	add	fp, sp, #16
   15a6c:	mov	r5, r0
   15a70:	mov	r0, r1
   15a74:	mov	r4, r1
   15a78:	bl	15bc0 <__mempcpy_chk@plt+0x4b6c>
   15a7c:	cmp	r0, #0
   15a80:	beq	15a9c <__mempcpy_chk@plt+0x4a48>
   15a84:	mov	r1, r5
   15a88:	mov	r2, r4
   15a8c:	mov	r6, r0
   15a90:	bl	10e5c <memcpy@plt>
   15a94:	mov	r0, r6
   15a98:	pop	{r4, r5, r6, sl, fp, pc}
   15a9c:	bl	15b28 <__mempcpy_chk@plt+0x4ad4>
   15aa0:	push	{r4, r5, r6, sl, fp, lr}
   15aa4:	add	fp, sp, #16
   15aa8:	mov	r5, r0
   15aac:	add	r0, r1, #1
   15ab0:	mov	r4, r1
   15ab4:	bl	15bc0 <__mempcpy_chk@plt+0x4b6c>
   15ab8:	cmp	r0, #0
   15abc:	beq	15ae4 <__mempcpy_chk@plt+0x4a90>
   15ac0:	mov	r6, r0
   15ac4:	mov	r0, #0
   15ac8:	mov	r1, r5
   15acc:	mov	r2, r4
   15ad0:	strb	r0, [r6, r4]
   15ad4:	mov	r0, r6
   15ad8:	bl	10e5c <memcpy@plt>
   15adc:	mov	r0, r6
   15ae0:	pop	{r4, r5, r6, sl, fp, pc}
   15ae4:	bl	15b28 <__mempcpy_chk@plt+0x4ad4>
   15ae8:	push	{r4, r5, r6, sl, fp, lr}
   15aec:	add	fp, sp, #16
   15af0:	mov	r4, r0
   15af4:	bl	10f70 <strlen@plt>
   15af8:	add	r5, r0, #1
   15afc:	mov	r0, r5
   15b00:	bl	15bc0 <__mempcpy_chk@plt+0x4b6c>
   15b04:	cmp	r0, #0
   15b08:	beq	15b24 <__mempcpy_chk@plt+0x4ad0>
   15b0c:	mov	r1, r4
   15b10:	mov	r2, r5
   15b14:	mov	r6, r0
   15b18:	bl	10e5c <memcpy@plt>
   15b1c:	mov	r0, r6
   15b20:	pop	{r4, r5, r6, sl, fp, pc}
   15b24:	bl	15b28 <__mempcpy_chk@plt+0x4ad4>
   15b28:	push	{fp, lr}
   15b2c:	mov	fp, sp
   15b30:	movw	r0, #28908	; 0x70ec
   15b34:	movw	r1, #28112	; 0x6dd0
   15b38:	mov	r2, #5
   15b3c:	movt	r0, #2
   15b40:	movt	r1, #1
   15b44:	ldr	r4, [r0]
   15b48:	mov	r0, #0
   15b4c:	bl	10e80 <dcgettext@plt>
   15b50:	movw	r2, #26948	; 0x6944
   15b54:	mov	r3, r0
   15b58:	mov	r0, r4
   15b5c:	mov	r1, #0
   15b60:	movt	r2, #1
   15b64:	bl	10f04 <error@plt>
   15b68:	bl	11030 <abort@plt>
   15b6c:	clz	r2, r1
   15b70:	clz	r3, r0
   15b74:	lsr	r2, r2, #5
   15b78:	lsr	r3, r3, #5
   15b7c:	orrs	r2, r3, r2
   15b80:	movwne	r1, #1
   15b84:	movwne	r0, #1
   15b88:	cmp	r1, #0
   15b8c:	beq	15bbc <__mempcpy_chk@plt+0x4b68>
   15b90:	mvn	r2, #-2147483648	; 0x80000000
   15b94:	udiv	r2, r2, r1
   15b98:	cmp	r2, r0
   15b9c:	bcs	15bbc <__mempcpy_chk@plt+0x4b68>
   15ba0:	push	{fp, lr}
   15ba4:	mov	fp, sp
   15ba8:	bl	10f7c <__errno_location@plt>
   15bac:	mov	r1, #12
   15bb0:	str	r1, [r0]
   15bb4:	mov	r0, #0
   15bb8:	pop	{fp, pc}
   15bbc:	b	10df0 <calloc@plt>
   15bc0:	cmp	r0, #0
   15bc4:	movweq	r0, #1
   15bc8:	cmn	r0, #1
   15bcc:	ble	15bd4 <__mempcpy_chk@plt+0x4b80>
   15bd0:	b	10f10 <malloc@plt>
   15bd4:	push	{fp, lr}
   15bd8:	mov	fp, sp
   15bdc:	bl	10f7c <__errno_location@plt>
   15be0:	mov	r1, #12
   15be4:	str	r1, [r0]
   15be8:	mov	r0, #0
   15bec:	pop	{fp, pc}
   15bf0:	push	{fp, lr}
   15bf4:	mov	fp, sp
   15bf8:	cmp	r0, #0
   15bfc:	beq	15c18 <__mempcpy_chk@plt+0x4bc4>
   15c00:	cmp	r1, #0
   15c04:	beq	15c24 <__mempcpy_chk@plt+0x4bd0>
   15c08:	cmn	r1, #1
   15c0c:	ble	15c2c <__mempcpy_chk@plt+0x4bd8>
   15c10:	pop	{fp, lr}
   15c14:	b	10e8c <realloc@plt>
   15c18:	mov	r0, r1
   15c1c:	pop	{fp, lr}
   15c20:	b	15bc0 <__mempcpy_chk@plt+0x4b6c>
   15c24:	bl	12544 <__mempcpy_chk@plt+0x14f0>
   15c28:	b	15c38 <__mempcpy_chk@plt+0x4be4>
   15c2c:	bl	10f7c <__errno_location@plt>
   15c30:	mov	r1, #12
   15c34:	str	r1, [r0]
   15c38:	mov	r0, #0
   15c3c:	pop	{fp, pc}
   15c40:	push	{r4, r5, r6, sl, fp, lr}
   15c44:	add	fp, sp, #16
   15c48:	mov	r4, r0
   15c4c:	bl	10ee0 <__fpending@plt>
   15c50:	mov	r5, r0
   15c54:	mov	r0, r4
   15c58:	bl	10eec <ferror_unlocked@plt>
   15c5c:	mov	r6, r0
   15c60:	mov	r0, r4
   15c64:	bl	15cc0 <__mempcpy_chk@plt+0x4c6c>
   15c68:	cmp	r6, #0
   15c6c:	beq	15c8c <__mempcpy_chk@plt+0x4c38>
   15c70:	mvn	r4, #0
   15c74:	cmp	r0, #0
   15c78:	bne	15cb8 <__mempcpy_chk@plt+0x4c64>
   15c7c:	bl	10f7c <__errno_location@plt>
   15c80:	mov	r1, #0
   15c84:	str	r1, [r0]
   15c88:	b	15cb8 <__mempcpy_chk@plt+0x4c64>
   15c8c:	cmp	r0, #0
   15c90:	mov	r4, r0
   15c94:	mvnne	r4, #0
   15c98:	cmp	r5, #0
   15c9c:	bne	15cb8 <__mempcpy_chk@plt+0x4c64>
   15ca0:	cmp	r0, #0
   15ca4:	beq	15cb8 <__mempcpy_chk@plt+0x4c64>
   15ca8:	bl	10f7c <__errno_location@plt>
   15cac:	ldr	r0, [r0]
   15cb0:	subs	r4, r0, #9
   15cb4:	mvnne	r4, #0
   15cb8:	mov	r0, r4
   15cbc:	pop	{r4, r5, r6, sl, fp, pc}
   15cc0:	push	{r4, r5, r6, sl, fp, lr}
   15cc4:	add	fp, sp, #16
   15cc8:	sub	sp, sp, #8
   15ccc:	mov	r4, r0
   15cd0:	bl	10fac <fileno@plt>
   15cd4:	cmn	r0, #1
   15cd8:	ble	15d4c <__mempcpy_chk@plt+0x4cf8>
   15cdc:	mov	r0, r4
   15ce0:	bl	10f28 <__freading@plt>
   15ce4:	cmp	r0, #0
   15ce8:	beq	15d14 <__mempcpy_chk@plt+0x4cc0>
   15cec:	mov	r0, r4
   15cf0:	bl	10fac <fileno@plt>
   15cf4:	mov	r1, #1
   15cf8:	mov	r2, #0
   15cfc:	mov	r3, #0
   15d00:	str	r1, [sp]
   15d04:	bl	10ec8 <lseek64@plt>
   15d08:	and	r0, r0, r1
   15d0c:	cmn	r0, #1
   15d10:	beq	15d4c <__mempcpy_chk@plt+0x4cf8>
   15d14:	mov	r0, r4
   15d18:	bl	15d5c <__mempcpy_chk@plt+0x4d08>
   15d1c:	cmp	r0, #0
   15d20:	beq	15d4c <__mempcpy_chk@plt+0x4cf8>
   15d24:	bl	10f7c <__errno_location@plt>
   15d28:	ldr	r6, [r0]
   15d2c:	mov	r5, r0
   15d30:	mov	r0, r4
   15d34:	bl	10fc4 <fclose@plt>
   15d38:	cmp	r6, #0
   15d3c:	strne	r6, [r5]
   15d40:	mvnne	r0, #0
   15d44:	sub	sp, fp, #16
   15d48:	pop	{r4, r5, r6, sl, fp, pc}
   15d4c:	mov	r0, r4
   15d50:	sub	sp, fp, #16
   15d54:	pop	{r4, r5, r6, sl, fp, lr}
   15d58:	b	10fc4 <fclose@plt>
   15d5c:	push	{r4, sl, fp, lr}
   15d60:	add	fp, sp, #8
   15d64:	sub	sp, sp, #8
   15d68:	mov	r4, r0
   15d6c:	cmp	r0, #0
   15d70:	beq	15d8c <__mempcpy_chk@plt+0x4d38>
   15d74:	mov	r0, r4
   15d78:	bl	10f28 <__freading@plt>
   15d7c:	cmp	r0, #0
   15d80:	ldrbne	r0, [r4, #1]
   15d84:	tstne	r0, #1
   15d88:	bne	15d9c <__mempcpy_chk@plt+0x4d48>
   15d8c:	mov	r0, r4
   15d90:	sub	sp, fp, #8
   15d94:	pop	{r4, sl, fp, lr}
   15d98:	b	10e20 <fflush@plt>
   15d9c:	mov	r0, #1
   15da0:	mov	r2, #0
   15da4:	mov	r3, #0
   15da8:	str	r0, [sp]
   15dac:	mov	r0, r4
   15db0:	bl	15db8 <__mempcpy_chk@plt+0x4d64>
   15db4:	b	15d8c <__mempcpy_chk@plt+0x4d38>
   15db8:	push	{r4, r5, r6, r7, fp, lr}
   15dbc:	add	fp, sp, #16
   15dc0:	sub	sp, sp, #8
   15dc4:	mov	r4, r0
   15dc8:	ldr	r0, [r0, #4]
   15dcc:	mov	r5, r3
   15dd0:	mov	r6, r2
   15dd4:	ldr	r1, [r4, #8]
   15dd8:	cmp	r1, r0
   15ddc:	bne	15df8 <__mempcpy_chk@plt+0x4da4>
   15de0:	ldrd	r0, [r4, #16]
   15de4:	cmp	r1, r0
   15de8:	bne	15df8 <__mempcpy_chk@plt+0x4da4>
   15dec:	ldr	r0, [r4, #36]	; 0x24
   15df0:	cmp	r0, #0
   15df4:	beq	15e10 <__mempcpy_chk@plt+0x4dbc>
   15df8:	mov	r0, r4
   15dfc:	mov	r2, r6
   15e00:	mov	r3, r5
   15e04:	sub	sp, fp, #16
   15e08:	pop	{r4, r5, r6, r7, fp, lr}
   15e0c:	b	10fd0 <fseeko64@plt>
   15e10:	ldr	r7, [fp, #8]
   15e14:	mov	r0, r4
   15e18:	bl	10fac <fileno@plt>
   15e1c:	mov	r2, r6
   15e20:	mov	r3, r5
   15e24:	str	r7, [sp]
   15e28:	bl	10ec8 <lseek64@plt>
   15e2c:	and	r2, r0, r1
   15e30:	cmn	r2, #1
   15e34:	beq	15e50 <__mempcpy_chk@plt+0x4dfc>
   15e38:	strd	r0, [r4, #80]	; 0x50
   15e3c:	ldr	r0, [r4]
   15e40:	bic	r0, r0, #16
   15e44:	str	r0, [r4]
   15e48:	mov	r0, #0
   15e4c:	b	15e54 <__mempcpy_chk@plt+0x4e00>
   15e50:	mvn	r0, #0
   15e54:	sub	sp, fp, #16
   15e58:	pop	{r4, r5, r6, r7, fp, pc}
   15e5c:	ldrb	r2, [r0]
   15e60:	cmp	r2, #0
   15e64:	beq	15e88 <__mempcpy_chk@plt+0x4e34>
   15e68:	add	r3, r0, #1
   15e6c:	mov	r0, #0
   15e70:	ror	r0, r0, #23
   15e74:	uxtab	r0, r0, r2
   15e78:	ldrb	r2, [r3], #1
   15e7c:	cmp	r2, #0
   15e80:	bne	15e70 <__mempcpy_chk@plt+0x4e1c>
   15e84:	b	15e8c <__mempcpy_chk@plt+0x4e38>
   15e88:	mov	r0, #0
   15e8c:	udiv	r2, r0, r1
   15e90:	mls	r0, r2, r1, r0
   15e94:	bx	lr
   15e98:	push	{fp, lr}
   15e9c:	mov	fp, sp
   15ea0:	mov	r0, #14
   15ea4:	bl	10ff4 <nl_langinfo@plt>
   15ea8:	movw	r1, #25352	; 0x6308
   15eac:	cmp	r0, #0
   15eb0:	movt	r1, #1
   15eb4:	movne	r1, r0
   15eb8:	movw	r0, #28129	; 0x6de1
   15ebc:	ldrb	r2, [r1]
   15ec0:	movt	r0, #1
   15ec4:	cmp	r2, #0
   15ec8:	movne	r0, r1
   15ecc:	pop	{fp, pc}
   15ed0:	push	{r4, r5, r6, r7, fp, lr}
   15ed4:	add	fp, sp, #16
   15ed8:	sub	sp, sp, #8
   15edc:	add	r5, sp, #4
   15ee0:	cmp	r0, #0
   15ee4:	mov	r7, r2
   15ee8:	mov	r4, r1
   15eec:	movne	r5, r0
   15ef0:	mov	r0, r5
   15ef4:	bl	10ef8 <mbrtowc@plt>
   15ef8:	mov	r6, r0
   15efc:	cmp	r7, #0
   15f00:	beq	15f24 <__mempcpy_chk@plt+0x4ed0>
   15f04:	cmn	r6, #2
   15f08:	bcc	15f24 <__mempcpy_chk@plt+0x4ed0>
   15f0c:	mov	r0, #0
   15f10:	bl	15f6c <__mempcpy_chk@plt+0x4f18>
   15f14:	cmp	r0, #0
   15f18:	ldrbeq	r0, [r4]
   15f1c:	moveq	r6, #1
   15f20:	streq	r0, [r5]
   15f24:	mov	r0, r6
   15f28:	sub	sp, fp, #16
   15f2c:	pop	{r4, r5, r6, r7, fp, pc}
   15f30:	cmp	r2, #0
   15f34:	beq	15f64 <__mempcpy_chk@plt+0x4f10>
   15f38:	mvn	r3, #0
   15f3c:	udiv	r3, r3, r2
   15f40:	cmp	r3, r1
   15f44:	bcs	15f64 <__mempcpy_chk@plt+0x4f10>
   15f48:	push	{fp, lr}
   15f4c:	mov	fp, sp
   15f50:	bl	10f7c <__errno_location@plt>
   15f54:	mov	r1, #12
   15f58:	str	r1, [r0]
   15f5c:	mov	r0, #0
   15f60:	pop	{fp, pc}
   15f64:	mul	r1, r2, r1
   15f68:	b	15bf0 <__mempcpy_chk@plt+0x4b9c>
   15f6c:	push	{r4, sl, fp, lr}
   15f70:	add	fp, sp, #8
   15f74:	sub	sp, sp, #264	; 0x108
   15f78:	add	r1, sp, #7
   15f7c:	movw	r2, #257	; 0x101
   15f80:	bl	15fd0 <__mempcpy_chk@plt+0x4f7c>
   15f84:	mov	r4, #0
   15f88:	cmp	r0, #0
   15f8c:	bne	15fc4 <__mempcpy_chk@plt+0x4f70>
   15f90:	movw	r1, #28135	; 0x6de7
   15f94:	add	r0, sp, #7
   15f98:	movt	r1, #1
   15f9c:	bl	10e14 <strcmp@plt>
   15fa0:	cmp	r0, #0
   15fa4:	beq	15fc4 <__mempcpy_chk@plt+0x4f70>
   15fa8:	movw	r1, #28137	; 0x6de9
   15fac:	add	r0, sp, #7
   15fb0:	movt	r1, #1
   15fb4:	bl	10e14 <strcmp@plt>
   15fb8:	mov	r4, r0
   15fbc:	cmp	r0, #0
   15fc0:	movwne	r4, #1
   15fc4:	mov	r0, r4
   15fc8:	sub	sp, fp, #8
   15fcc:	pop	{r4, sl, fp, pc}
   15fd0:	push	{r4, r5, r6, r7, fp, lr}
   15fd4:	add	fp, sp, #16
   15fd8:	mov	r4, r1
   15fdc:	mov	r1, #0
   15fe0:	mov	r6, r2
   15fe4:	bl	10fdc <setlocale@plt>
   15fe8:	cmp	r0, #0
   15fec:	beq	16018 <__mempcpy_chk@plt+0x4fc4>
   15ff0:	mov	r7, r0
   15ff4:	bl	10f70 <strlen@plt>
   15ff8:	cmp	r0, r6
   15ffc:	bcs	1602c <__mempcpy_chk@plt+0x4fd8>
   16000:	add	r2, r0, #1
   16004:	mov	r0, r4
   16008:	mov	r1, r7
   1600c:	bl	10e5c <memcpy@plt>
   16010:	mov	r5, #0
   16014:	b	16054 <__mempcpy_chk@plt+0x5000>
   16018:	cmp	r6, #0
   1601c:	mov	r5, #22
   16020:	movne	r0, #0
   16024:	strbne	r0, [r4]
   16028:	b	16054 <__mempcpy_chk@plt+0x5000>
   1602c:	mov	r5, #34	; 0x22
   16030:	cmp	r6, #0
   16034:	beq	16054 <__mempcpy_chk@plt+0x5000>
   16038:	sub	r6, r6, #1
   1603c:	mov	r0, r4
   16040:	mov	r1, r7
   16044:	mov	r2, r6
   16048:	bl	10e5c <memcpy@plt>
   1604c:	mov	r0, #0
   16050:	strb	r0, [r4, r6]
   16054:	mov	r0, r5
   16058:	pop	{r4, r5, r6, r7, fp, pc}
   1605c:	mov	r1, #0
   16060:	b	10fdc <setlocale@plt>
   16064:	cmp	r3, #0
   16068:	cmpeq	r2, #0
   1606c:	bne	16084 <__mempcpy_chk@plt+0x5030>
   16070:	cmp	r1, #0
   16074:	cmpeq	r0, #0
   16078:	mvnne	r1, #0
   1607c:	mvnne	r0, #0
   16080:	b	160a0 <__mempcpy_chk@plt+0x504c>
   16084:	sub	sp, sp, #8
   16088:	push	{sp, lr}
   1608c:	bl	160b0 <__mempcpy_chk@plt+0x505c>
   16090:	ldr	lr, [sp, #4]
   16094:	add	sp, sp, #8
   16098:	pop	{r2, r3}
   1609c:	bx	lr
   160a0:	push	{r1, lr}
   160a4:	mov	r0, #8
   160a8:	bl	10e08 <raise@plt>
   160ac:	pop	{r1, pc}
   160b0:	cmp	r1, r3
   160b4:	cmpeq	r0, r2
   160b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   160bc:	mov	r4, r0
   160c0:	movcc	r0, #0
   160c4:	mov	r5, r1
   160c8:	ldr	lr, [sp, #36]	; 0x24
   160cc:	movcc	r1, r0
   160d0:	bcc	161cc <__mempcpy_chk@plt+0x5178>
   160d4:	cmp	r3, #0
   160d8:	clzeq	ip, r2
   160dc:	clzne	ip, r3
   160e0:	addeq	ip, ip, #32
   160e4:	cmp	r5, #0
   160e8:	clzeq	r1, r4
   160ec:	addeq	r1, r1, #32
   160f0:	clzne	r1, r5
   160f4:	sub	ip, ip, r1
   160f8:	sub	sl, ip, #32
   160fc:	lsl	r9, r3, ip
   16100:	rsb	fp, ip, #32
   16104:	orr	r9, r9, r2, lsl sl
   16108:	orr	r9, r9, r2, lsr fp
   1610c:	lsl	r8, r2, ip
   16110:	cmp	r5, r9
   16114:	cmpeq	r4, r8
   16118:	movcc	r0, #0
   1611c:	movcc	r1, r0
   16120:	bcc	1613c <__mempcpy_chk@plt+0x50e8>
   16124:	mov	r0, #1
   16128:	subs	r4, r4, r8
   1612c:	lsl	r1, r0, sl
   16130:	orr	r1, r1, r0, lsr fp
   16134:	lsl	r0, r0, ip
   16138:	sbc	r5, r5, r9
   1613c:	cmp	ip, #0
   16140:	beq	161cc <__mempcpy_chk@plt+0x5178>
   16144:	lsr	r6, r8, #1
   16148:	orr	r6, r6, r9, lsl #31
   1614c:	lsr	r7, r9, #1
   16150:	mov	r2, ip
   16154:	b	16178 <__mempcpy_chk@plt+0x5124>
   16158:	subs	r3, r4, r6
   1615c:	sbc	r8, r5, r7
   16160:	adds	r3, r3, r3
   16164:	adc	r8, r8, r8
   16168:	adds	r4, r3, #1
   1616c:	adc	r5, r8, #0
   16170:	subs	r2, r2, #1
   16174:	beq	16194 <__mempcpy_chk@plt+0x5140>
   16178:	cmp	r5, r7
   1617c:	cmpeq	r4, r6
   16180:	bcs	16158 <__mempcpy_chk@plt+0x5104>
   16184:	adds	r4, r4, r4
   16188:	adc	r5, r5, r5
   1618c:	subs	r2, r2, #1
   16190:	bne	16178 <__mempcpy_chk@plt+0x5124>
   16194:	lsr	r3, r4, ip
   16198:	orr	r3, r3, r5, lsl fp
   1619c:	lsr	r2, r5, ip
   161a0:	orr	r3, r3, r5, lsr sl
   161a4:	adds	r0, r0, r4
   161a8:	mov	r4, r3
   161ac:	lsl	r3, r2, ip
   161b0:	orr	r3, r3, r4, lsl sl
   161b4:	lsl	ip, r4, ip
   161b8:	orr	r3, r3, r4, lsr fp
   161bc:	adc	r1, r1, r5
   161c0:	subs	r0, r0, ip
   161c4:	mov	r5, r2
   161c8:	sbc	r1, r1, r3
   161cc:	cmp	lr, #0
   161d0:	strdne	r4, [lr]
   161d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   161d8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   161dc:	mov	r7, r0
   161e0:	ldr	r6, [pc, #72]	; 16230 <__mempcpy_chk@plt+0x51dc>
   161e4:	ldr	r5, [pc, #72]	; 16234 <__mempcpy_chk@plt+0x51e0>
   161e8:	add	r6, pc, r6
   161ec:	add	r5, pc, r5
   161f0:	sub	r6, r6, r5
   161f4:	mov	r8, r1
   161f8:	mov	r9, r2
   161fc:	bl	10dd0 <calloc@plt-0x20>
   16200:	asrs	r6, r6, #2
   16204:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16208:	mov	r4, #0
   1620c:	add	r4, r4, #1
   16210:	ldr	r3, [r5], #4
   16214:	mov	r2, r9
   16218:	mov	r1, r8
   1621c:	mov	r0, r7
   16220:	blx	r3
   16224:	cmp	r6, r4
   16228:	bne	1620c <__mempcpy_chk@plt+0x51b8>
   1622c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16230:	andeq	r0, r1, ip, lsl sp
   16234:	andeq	r0, r1, r4, lsl sp
   16238:	bx	lr
   1623c:	ldr	r3, [pc, #12]	; 16250 <__mempcpy_chk@plt+0x51fc>
   16240:	mov	r1, #0
   16244:	add	r3, pc, r3
   16248:	ldr	r2, [r3]
   1624c:	b	10f88 <__cxa_atexit@plt>
   16250:	muleq	r1, r8, lr
   16254:	mov	r2, r1
   16258:	mov	r1, r0
   1625c:	mov	r0, #3
   16260:	b	1100c <__xstat64@plt>

Disassembly of section .fini:

00016264 <.fini>:
   16264:	push	{r3, lr}
   16268:	pop	{r3, pc}
