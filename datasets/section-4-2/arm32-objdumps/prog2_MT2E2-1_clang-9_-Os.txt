
../repos/prog2/MT2E2-1:     file format elf32-littlearm


Disassembly of section .init:

000110c0 <.init>:
   110c0:	push	{r3, lr}
   110c4:	bl	111e8 <_start@@Base+0x3c>
   110c8:	pop	{r3, pc}

Disassembly of section .plt:

000110cc <calloc@plt-0x14>:
   110cc:	push	{lr}		; (str lr, [sp, #-4]!)
   110d0:	ldr	lr, [pc, #4]	; 110dc <calloc@plt-0x4>
   110d4:	add	lr, pc, lr
   110d8:	ldr	pc, [lr, #8]!
   110dc:	andeq	r1, r1, r4, lsr #30

000110e0 <calloc@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #69632	; 0x11000
   110e8:	ldr	pc, [ip, #3876]!	; 0xf24

000110ec <strcmp@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #69632	; 0x11000
   110f4:	ldr	pc, [ip, #3868]!	; 0xf1c

000110f8 <printf@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #69632	; 0x11000
   11100:	ldr	pc, [ip, #3860]!	; 0xf14

00011104 <__isoc99_fscanf@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #69632	; 0x11000
   1110c:	ldr	pc, [ip, #3852]!	; 0xf0c

00011110 <fopen@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #69632	; 0x11000
   11118:	ldr	pc, [ip, #3844]!	; 0xf04

0001111c <free@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #69632	; 0x11000
   11124:	ldr	pc, [ip, #3836]!	; 0xefc

00011128 <memcpy@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #69632	; 0x11000
   11130:	ldr	pc, [ip, #3828]!	; 0xef4

00011134 <realloc@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #69632	; 0x11000
   1113c:	ldr	pc, [ip, #3820]!	; 0xeec

00011140 <strcpy@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #69632	; 0x11000
   11148:	ldr	pc, [ip, #3812]!	; 0xee4

0001114c <puts@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #69632	; 0x11000
   11154:	ldr	pc, [ip, #3804]!	; 0xedc

00011158 <malloc@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #69632	; 0x11000
   11160:	ldr	pc, [ip, #3796]!	; 0xed4

00011164 <__libc_start_main@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #69632	; 0x11000
   1116c:	ldr	pc, [ip, #3788]!	; 0xecc

00011170 <__gmon_start__@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #69632	; 0x11000
   11178:	ldr	pc, [ip, #3780]!	; 0xec4

0001117c <strlen@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #69632	; 0x11000
   11184:	ldr	pc, [ip, #3772]!	; 0xebc

00011188 <putchar@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #69632	; 0x11000
   11190:	ldr	pc, [ip, #3764]!	; 0xeb4

00011194 <fclose@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #69632	; 0x11000
   1119c:	ldr	pc, [ip, #3756]!	; 0xeac

000111a0 <abort@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #69632	; 0x11000
   111a8:	ldr	pc, [ip, #3748]!	; 0xea4

Disassembly of section .text:

000111ac <_start@@Base>:
   111ac:	mov	fp, #0
   111b0:	mov	lr, #0
   111b4:	pop	{r1}		; (ldr r1, [sp], #4)
   111b8:	mov	r2, sp
   111bc:	push	{r2}		; (str r2, [sp, #-4]!)
   111c0:	push	{r0}		; (str r0, [sp, #-4]!)
   111c4:	ldr	ip, [pc, #16]	; 111dc <_start@@Base+0x30>
   111c8:	push	{ip}		; (str ip, [sp, #-4]!)
   111cc:	ldr	r0, [pc, #12]	; 111e0 <_start@@Base+0x34>
   111d0:	ldr	r3, [pc, #12]	; 111e4 <_start@@Base+0x38>
   111d4:	bl	11164 <__libc_start_main@plt>
   111d8:	bl	111a0 <abort@plt>
   111dc:	andeq	r2, r1, r4, asr #15
   111e0:	andeq	r1, r1, r4, asr #8
   111e4:	andeq	r2, r1, r4, ror #14
   111e8:	ldr	r3, [pc, #20]	; 11204 <_start@@Base+0x58>
   111ec:	ldr	r2, [pc, #20]	; 11208 <_start@@Base+0x5c>
   111f0:	add	r3, pc, r3
   111f4:	ldr	r2, [r3, r2]
   111f8:	cmp	r2, #0
   111fc:	bxeq	lr
   11200:	b	11170 <__gmon_start__@plt>
   11204:	andeq	r1, r1, r8, lsl #28
   11208:	andeq	r0, r0, r0, asr r0
   1120c:	ldr	r0, [pc, #24]	; 1122c <_start@@Base+0x80>
   11210:	ldr	r3, [pc, #24]	; 11230 <_start@@Base+0x84>
   11214:	cmp	r3, r0
   11218:	bxeq	lr
   1121c:	ldr	r3, [pc, #16]	; 11234 <_start@@Base+0x88>
   11220:	cmp	r3, #0
   11224:	bxeq	lr
   11228:	bx	r3
   1122c:	andeq	r3, r2, ip, asr r0
   11230:	andeq	r3, r2, ip, asr r0
   11234:	andeq	r0, r0, r0
   11238:	ldr	r0, [pc, #36]	; 11264 <_start@@Base+0xb8>
   1123c:	ldr	r1, [pc, #36]	; 11268 <_start@@Base+0xbc>
   11240:	sub	r1, r1, r0
   11244:	asr	r1, r1, #2
   11248:	add	r1, r1, r1, lsr #31
   1124c:	asrs	r1, r1, #1
   11250:	bxeq	lr
   11254:	ldr	r3, [pc, #16]	; 1126c <_start@@Base+0xc0>
   11258:	cmp	r3, #0
   1125c:	bxeq	lr
   11260:	bx	r3
   11264:	andeq	r3, r2, ip, asr r0
   11268:	andeq	r3, r2, ip, asr r0
   1126c:	andeq	r0, r0, r0
   11270:	push	{r4, lr}
   11274:	ldr	r4, [pc, #24]	; 11294 <_start@@Base+0xe8>
   11278:	ldrb	r3, [r4]
   1127c:	cmp	r3, #0
   11280:	popne	{r4, pc}
   11284:	bl	1120c <_start@@Base+0x60>
   11288:	mov	r3, #1
   1128c:	strb	r3, [r4]
   11290:	pop	{r4, pc}
   11294:	andeq	r3, r2, ip, asr r0
   11298:	b	11238 <_start@@Base+0x8c>

0001129c <crescente@@Base>:
   1129c:	push	{r4, r5, fp, lr}
   112a0:	add	fp, sp, #8
   112a4:	cmp	r0, #0
   112a8:	popeq	{r4, r5, fp, pc}
   112ac:	movw	r5, #10196	; 0x27d4
   112b0:	mov	r4, r0
   112b4:	movt	r5, #1
   112b8:	ldr	r0, [r4, #4]
   112bc:	bl	1129c <crescente@@Base>
   112c0:	ldr	r1, [r4]
   112c4:	mov	r0, r5
   112c8:	bl	110f8 <printf@plt>
   112cc:	ldr	r4, [r4, #8]
   112d0:	cmp	r4, #0
   112d4:	bne	112b8 <crescente@@Base+0x1c>
   112d8:	pop	{r4, r5, fp, pc}

000112dc <decrescente@@Base>:
   112dc:	push	{r4, r5, fp, lr}
   112e0:	add	fp, sp, #8
   112e4:	cmp	r0, #0
   112e8:	popeq	{r4, r5, fp, pc}
   112ec:	movw	r5, #10196	; 0x27d4
   112f0:	mov	r4, r0
   112f4:	movt	r5, #1
   112f8:	ldr	r0, [r4, #8]
   112fc:	bl	112dc <decrescente@@Base>
   11300:	ldr	r1, [r4]
   11304:	mov	r0, r5
   11308:	bl	110f8 <printf@plt>
   1130c:	ldr	r4, [r4, #4]
   11310:	cmp	r4, #0
   11314:	bne	112f8 <decrescente@@Base+0x1c>
   11318:	pop	{r4, r5, fp, pc}

0001131c <avl_imprime_ord@@Base>:
   1131c:	ldr	r0, [r0]
   11320:	cmp	r1, #0
   11324:	bmi	1132c <avl_imprime_ord@@Base+0x10>
   11328:	b	1129c <crescente@@Base>
   1132c:	b	112dc <decrescente@@Base>

00011330 <valida_passwds@@Base>:
   11330:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11334:	add	fp, sp, #28
   11338:	sub	sp, sp, #52	; 0x34
   1133c:	mov	r8, r1
   11340:	movw	r1, #9776	; 0x2630
   11344:	mov	r7, r0
   11348:	mov	r0, #10
   1134c:	mov	r9, r2
   11350:	movt	r1, #1
   11354:	bl	120e8 <tabela_nova@@Base>
   11358:	movw	r1, #10200	; 0x27d8
   1135c:	mov	r4, r0
   11360:	add	r2, sp, #27
   11364:	add	r3, sp, #2
   11368:	mov	r0, r7
   1136c:	movt	r1, #1
   11370:	bl	11104 <__isoc99_fscanf@plt>
   11374:	cmp	r0, #2
   11378:	bne	113b8 <valida_passwds@@Base+0x88>
   1137c:	movw	sl, #10200	; 0x27d8
   11380:	add	r5, sp, #27
   11384:	add	r6, sp, #2
   11388:	movt	sl, #1
   1138c:	mov	r0, r4
   11390:	mov	r1, r5
   11394:	mov	r2, r6
   11398:	bl	121c8 <tabela_adiciona@@Base>
   1139c:	mov	r0, r7
   113a0:	mov	r1, sl
   113a4:	mov	r2, r5
   113a8:	mov	r3, r6
   113ac:	bl	11104 <__isoc99_fscanf@plt>
   113b0:	cmp	r0, #2
   113b4:	beq	1138c <valida_passwds@@Base+0x5c>
   113b8:	ldr	r6, [r9]
   113bc:	cmp	r6, #0
   113c0:	ldrne	r7, [r8]
   113c4:	cmpne	r7, #0
   113c8:	beq	1142c <valida_passwds@@Base+0xfc>
   113cc:	movw	r8, #10206	; 0x27de
   113d0:	movw	r9, #10315	; 0x284b
   113d4:	movw	r5, #10293	; 0x2835
   113d8:	movt	r8, #1
   113dc:	movt	r9, #1
   113e0:	movt	r5, #1
   113e4:	ldr	r2, [r6]
   113e8:	ldr	r1, [r7]
   113ec:	mov	r0, r8
   113f0:	bl	110f8 <printf@plt>
   113f4:	ldr	r1, [r7]
   113f8:	mov	r0, r4
   113fc:	bl	123c4 <tabela_valor@@Base>
   11400:	ldr	r1, [r6]
   11404:	bl	110ec <strcmp@plt>
   11408:	cmp	r0, #0
   1140c:	mov	r0, r5
   11410:	moveq	r0, r9
   11414:	bl	1114c <puts@plt>
   11418:	ldr	r6, [r6, #4]
   1141c:	cmp	r6, #0
   11420:	ldrne	r7, [r7, #4]
   11424:	cmpne	r7, #0
   11428:	bne	113e4 <valida_passwds@@Base+0xb4>
   1142c:	mov	r0, r4
   11430:	bl	1242c <tabela_esvazia@@Base>
   11434:	mov	r0, r4
   11438:	bl	1111c <free@plt>
   1143c:	sub	sp, fp, #28
   11440:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00011444 <main@@Base>:
   11444:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11448:	add	fp, sp, #24
   1144c:	sub	sp, sp, #384	; 0x180
   11450:	movw	r0, #10408	; 0x28a8
   11454:	add	r5, sp, #80	; 0x50
   11458:	movt	r0, #1
   1145c:	mov	r1, r5
   11460:	ldm	r0!, {r2, r3, r6, r7}
   11464:	stmia	r1!, {r2, r3, r6, r7}
   11468:	ldm	r0!, {r2, r3, r6, r7}
   1146c:	stmia	r1!, {r2, r3, r6, r7}
   11470:	ldm	r0, {r2, r3, r4, r6, r7}
   11474:	movw	r0, #10340	; 0x2864
   11478:	movt	r0, #1
   1147c:	stm	r1, {r2, r3, r4, r6, r7}
   11480:	bl	1114c <puts@plt>
   11484:	mov	r6, #0
   11488:	bl	115d0 <avl_nova@@Base>
   1148c:	mov	r4, r0
   11490:	add	r1, r5, r6
   11494:	mov	r0, r4
   11498:	bl	118d8 <avl_insere@@Base>
   1149c:	add	r6, r6, #4
   114a0:	cmp	r6, #52	; 0x34
   114a4:	bne	11490 <main@@Base+0x4c>
   114a8:	movw	r0, #10230	; 0x27f6
   114ac:	movt	r0, #1
   114b0:	bl	110f8 <printf@plt>
   114b4:	ldr	r0, [r4]
   114b8:	bl	11b28 <avl_imprime@@Base>
   114bc:	movw	r0, #10248	; 0x2808
   114c0:	movt	r0, #1
   114c4:	bl	110f8 <printf@plt>
   114c8:	ldr	r0, [r4]
   114cc:	bl	1129c <crescente@@Base>
   114d0:	movw	r0, #10877	; 0x2a7d
   114d4:	movt	r0, #1
   114d8:	bl	1114c <puts@plt>
   114dc:	movw	r1, #10464	; 0x28e0
   114e0:	add	r6, sp, #80	; 0x50
   114e4:	mov	r2, #300	; 0x12c
   114e8:	movt	r1, #1
   114ec:	mov	r0, r6
   114f0:	bl	11128 <memcpy@plt>
   114f4:	movw	r1, #10768	; 0x2a10
   114f8:	mov	r4, sp
   114fc:	mov	r2, #75	; 0x4b
   11500:	movt	r1, #1
   11504:	mov	r0, r4
   11508:	bl	11128 <memcpy@plt>
   1150c:	movw	r0, #10357	; 0x2875
   11510:	movt	r0, #1
   11514:	bl	1114c <puts@plt>
   11518:	movw	r0, #10277	; 0x2825
   1151c:	movw	r1, #10291	; 0x2833
   11520:	movt	r0, #1
   11524:	movt	r1, #1
   11528:	bl	11110 <fopen@plt>
   1152c:	cmp	r0, #0
   11530:	beq	115b8 <main@@Base+0x174>
   11534:	mov	r8, r0
   11538:	mov	r5, #0
   1153c:	bl	11d70 <lista_nova@@Base>
   11540:	mov	r7, r0
   11544:	add	r1, r6, r5
   11548:	mov	r0, r7
   1154c:	mov	r2, #0
   11550:	bl	11e14 <lista_insere@@Base>
   11554:	add	r5, r5, #100	; 0x64
   11558:	cmp	r5, #300	; 0x12c
   1155c:	bne	11544 <main@@Base+0x100>
   11560:	mov	r5, #0
   11564:	bl	11d70 <lista_nova@@Base>
   11568:	mov	r6, r0
   1156c:	add	r1, r4, r5
   11570:	mov	r0, r6
   11574:	mov	r2, #0
   11578:	bl	11e14 <lista_insere@@Base>
   1157c:	add	r5, r5, #25
   11580:	cmp	r5, #75	; 0x4b
   11584:	bne	1156c <main@@Base+0x128>
   11588:	mov	r0, r8
   1158c:	mov	r1, r7
   11590:	mov	r2, r6
   11594:	bl	11330 <valida_passwds@@Base>
   11598:	mov	r0, r7
   1159c:	bl	11d9c <lista_apaga@@Base>
   115a0:	mov	r0, r6
   115a4:	bl	11d9c <lista_apaga@@Base>
   115a8:	mov	r0, r8
   115ac:	bl	11194 <fclose@plt>
   115b0:	mov	r0, #0
   115b4:	b	115c8 <main@@Base+0x184>
   115b8:	movw	r0, #10374	; 0x2886
   115bc:	movt	r0, #1
   115c0:	bl	1114c <puts@plt>
   115c4:	mvn	r0, #0
   115c8:	sub	sp, fp, #24
   115cc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000115d0 <avl_nova@@Base>:
   115d0:	push	{fp, lr}
   115d4:	mov	fp, sp
   115d8:	mov	r0, #4
   115dc:	bl	11158 <malloc@plt>
   115e0:	cmp	r0, #0
   115e4:	moveq	r0, #0
   115e8:	movne	r1, #0
   115ec:	strne	r1, [r0]
   115f0:	pop	{fp, pc}

000115f4 <avl_apaga@@Base>:
   115f4:	cmp	r0, #0
   115f8:	bxeq	lr
   115fc:	push	{r4, sl, fp, lr}
   11600:	add	fp, sp, #8
   11604:	mov	r4, r0
   11608:	ldr	r0, [r0]
   1160c:	cmp	r0, #0
   11610:	beq	11624 <avl_apaga@@Base+0x30>
   11614:	ldr	r1, [r0]
   11618:	bl	11630 <avl_remove_impl@@Base>
   1161c:	str	r0, [r4]
   11620:	b	1160c <avl_apaga@@Base+0x18>
   11624:	mov	r0, r4
   11628:	pop	{r4, sl, fp, lr}
   1162c:	b	1111c <free@plt>

00011630 <avl_remove_impl@@Base>:
   11630:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11634:	add	fp, sp, #24
   11638:	mov	r8, #0
   1163c:	cmp	r0, #0
   11640:	beq	11790 <avl_remove_impl@@Base+0x160>
   11644:	ldr	r6, [r0]
   11648:	mov	r5, r0
   1164c:	mov	r7, r1
   11650:	mov	r0, r1
   11654:	mov	r1, r6
   11658:	bl	110ec <strcmp@plt>
   1165c:	mov	r4, r5
   11660:	cmn	r0, #1
   11664:	bgt	11670 <avl_remove_impl@@Base+0x40>
   11668:	ldr	r0, [r4, #4]!
   1166c:	b	1167c <avl_remove_impl@@Base+0x4c>
   11670:	cmp	r0, #0
   11674:	beq	11798 <avl_remove_impl@@Base+0x168>
   11678:	ldr	r0, [r4, #8]!
   1167c:	mov	r1, r7
   11680:	bl	11630 <avl_remove_impl@@Base>
   11684:	str	r0, [r4]
   11688:	ldr	r0, [r5, #4]
   1168c:	cmp	r0, #0
   11690:	beq	1169c <avl_remove_impl@@Base+0x6c>
   11694:	ldr	r2, [r0, #12]
   11698:	b	116a0 <avl_remove_impl@@Base+0x70>
   1169c:	mvn	r2, #0
   116a0:	ldr	r1, [r5, #8]
   116a4:	cmp	r1, #0
   116a8:	beq	116c8 <avl_remove_impl@@Base+0x98>
   116ac:	ldr	r3, [r1, #12]
   116b0:	cmp	r2, r3
   116b4:	movgt	r3, r2
   116b8:	add	r2, r3, #1
   116bc:	str	r2, [r5, #12]
   116c0:	ldr	r2, [r1, #12]
   116c4:	b	116d8 <avl_remove_impl@@Base+0xa8>
   116c8:	orr	r2, r2, r2, asr #31
   116cc:	add	r2, r2, #1
   116d0:	str	r2, [r5, #12]
   116d4:	mvn	r2, #0
   116d8:	cmp	r0, #0
   116dc:	beq	116e8 <avl_remove_impl@@Base+0xb8>
   116e0:	ldr	r3, [r0, #12]
   116e4:	b	116ec <avl_remove_impl@@Base+0xbc>
   116e8:	mvn	r3, #0
   116ec:	sub	r2, r2, r3
   116f0:	cmp	r2, #2
   116f4:	blt	11740 <avl_remove_impl@@Base+0x110>
   116f8:	cmp	r1, #0
   116fc:	beq	11734 <avl_remove_impl@@Base+0x104>
   11700:	ldr	r3, [r1, #8]
   11704:	mvn	r2, #0
   11708:	mvn	r0, #0
   1170c:	cmp	r3, #0
   11710:	ldrne	r2, [r3, #12]
   11714:	ldr	r3, [r1, #4]
   11718:	cmp	r3, #0
   1171c:	ldrne	r0, [r3, #12]
   11720:	cmp	r2, r0
   11724:	bge	11734 <avl_remove_impl@@Base+0x104>
   11728:	mov	r0, r1
   1172c:	bl	11bf0 <roda_direita@@Base>
   11730:	str	r0, [r5, #8]
   11734:	mov	r0, r5
   11738:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1173c:	b	11c5c <roda_esquerda@@Base>
   11740:	cmn	r2, #2
   11744:	bgt	1178c <avl_remove_impl@@Base+0x15c>
   11748:	cmp	r0, #0
   1174c:	beq	11780 <avl_remove_impl@@Base+0x150>
   11750:	ldr	r3, [r0, #8]
   11754:	mvn	r2, #0
   11758:	mvn	r1, #0
   1175c:	cmp	r3, #0
   11760:	ldrne	r2, [r3, #12]
   11764:	ldr	r3, [r0, #4]
   11768:	cmp	r3, #0
   1176c:	ldrne	r1, [r3, #12]
   11770:	cmp	r2, r1
   11774:	ble	11780 <avl_remove_impl@@Base+0x150>
   11778:	bl	11c5c <roda_esquerda@@Base>
   1177c:	str	r0, [r5, #4]
   11780:	mov	r0, r5
   11784:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   11788:	b	11bf0 <roda_direita@@Base>
   1178c:	mov	r8, r5
   11790:	mov	r0, r8
   11794:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11798:	ldr	r0, [r4, #8]!
   1179c:	ldr	r7, [r4, #-4]
   117a0:	cmp	r7, #0
   117a4:	beq	117ec <avl_remove_impl@@Base+0x1bc>
   117a8:	cmp	r0, #0
   117ac:	beq	117f8 <avl_remove_impl@@Base+0x1c8>
   117b0:	mov	r7, r0
   117b4:	ldr	r0, [r0, #4]
   117b8:	cmp	r0, #0
   117bc:	bne	117b0 <avl_remove_impl@@Base+0x180>
   117c0:	ldr	r0, [r7]
   117c4:	bl	1117c <strlen@plt>
   117c8:	add	r1, r0, #1
   117cc:	mov	r0, r6
   117d0:	bl	11134 <realloc@plt>
   117d4:	str	r0, [r5]
   117d8:	ldr	r1, [r7]
   117dc:	bl	11140 <strcpy@plt>
   117e0:	ldr	r1, [r7]
   117e4:	ldr	r0, [r5, #8]
   117e8:	b	11680 <avl_remove_impl@@Base+0x50>
   117ec:	cmp	r0, #0
   117f0:	mov	r7, r0
   117f4:	beq	11838 <avl_remove_impl@@Base+0x208>
   117f8:	ldr	r0, [r7]
   117fc:	bl	1117c <strlen@plt>
   11800:	add	r1, r0, #1
   11804:	mov	r0, r6
   11808:	bl	11134 <realloc@plt>
   1180c:	str	r0, [r5]
   11810:	ldr	r1, [r7]
   11814:	bl	11140 <strcpy@plt>
   11818:	ldr	r0, [r7, #4]
   1181c:	str	r0, [r5, #4]
   11820:	ldr	r0, [r7, #8]
   11824:	str	r0, [r5, #8]
   11828:	ldr	r0, [r7, #12]
   1182c:	str	r0, [r5, #12]
   11830:	ldr	r6, [r7]
   11834:	b	11840 <avl_remove_impl@@Base+0x210>
   11838:	mov	r7, r5
   1183c:	mov	r5, #0
   11840:	mov	r0, r6
   11844:	bl	1111c <free@plt>
   11848:	mov	r0, r7
   1184c:	bl	1111c <free@plt>
   11850:	cmp	r5, #0
   11854:	bne	11688 <avl_remove_impl@@Base+0x58>
   11858:	b	11790 <avl_remove_impl@@Base+0x160>

0001185c <avl_pesquisa@@Base>:
   1185c:	cmp	r0, #0
   11860:	cmpne	r1, #0
   11864:	bne	11870 <avl_pesquisa@@Base+0x14>
   11868:	mov	r0, #0
   1186c:	bx	lr
   11870:	ldr	r0, [r0]
   11874:	b	11878 <avl_pesquisa_impl@@Base>

00011878 <avl_pesquisa_impl@@Base>:
   11878:	push	{r4, r5, r6, sl, fp, lr}
   1187c:	add	fp, sp, #16
   11880:	mov	r4, #0
   11884:	cmp	r0, #0
   11888:	beq	118d0 <avl_pesquisa_impl@@Base+0x58>
   1188c:	mov	r5, r1
   11890:	mov	r6, r0
   11894:	ldr	r1, [r6]
   11898:	mov	r0, r5
   1189c:	bl	110ec <strcmp@plt>
   118a0:	cmn	r0, #1
   118a4:	bgt	118b0 <avl_pesquisa_impl@@Base+0x38>
   118a8:	add	r0, r6, #4
   118ac:	b	118bc <avl_pesquisa_impl@@Base+0x44>
   118b0:	cmp	r0, #0
   118b4:	beq	118cc <avl_pesquisa_impl@@Base+0x54>
   118b8:	add	r0, r6, #8
   118bc:	ldr	r6, [r0]
   118c0:	cmp	r6, #0
   118c4:	bne	11894 <avl_pesquisa_impl@@Base+0x1c>
   118c8:	b	118d0 <avl_pesquisa_impl@@Base+0x58>
   118cc:	mov	r4, r6
   118d0:	mov	r0, r4
   118d4:	pop	{r4, r5, r6, sl, fp, pc}

000118d8 <avl_insere@@Base>:
   118d8:	push	{r4, sl, fp, lr}
   118dc:	add	fp, sp, #8
   118e0:	mov	r4, r0
   118e4:	mvn	r0, #0
   118e8:	cmp	r4, #0
   118ec:	cmpne	r1, #0
   118f0:	bne	118f8 <avl_insere@@Base+0x20>
   118f4:	pop	{r4, sl, fp, pc}
   118f8:	ldr	r0, [r4]
   118fc:	bl	1190c <avl_insere_impl@@Base>
   11900:	str	r0, [r4]
   11904:	mov	r0, #0
   11908:	pop	{r4, sl, fp, pc}

0001190c <avl_insere_impl@@Base>:
   1190c:	push	{r4, r5, fp, lr}
   11910:	add	fp, sp, #8
   11914:	mov	r5, r1
   11918:	cmp	r0, #0
   1191c:	beq	1194c <avl_insere_impl@@Base+0x40>
   11920:	ldr	r1, [r0]
   11924:	mov	r4, r0
   11928:	mov	r0, r5
   1192c:	bl	110ec <strcmp@plt>
   11930:	cmn	r0, #1
   11934:	bgt	11958 <avl_insere_impl@@Base+0x4c>
   11938:	ldr	r0, [r4, #4]
   1193c:	mov	r1, r5
   11940:	bl	1190c <avl_insere_impl@@Base>
   11944:	str	r0, [r4, #4]
   11948:	b	11974 <avl_insere_impl@@Base+0x68>
   1194c:	mov	r0, r5
   11950:	pop	{r4, r5, fp, lr}
   11954:	b	11ba4 <avl_novo_no@@Base>
   11958:	cmp	r0, #0
   1195c:	beq	11a74 <avl_insere_impl@@Base+0x168>
   11960:	ldr	r0, [r4, #8]
   11964:	mov	r1, r5
   11968:	bl	1190c <avl_insere_impl@@Base>
   1196c:	str	r0, [r4, #8]
   11970:	ldr	r0, [r4, #4]
   11974:	cmp	r0, #0
   11978:	beq	11984 <avl_insere_impl@@Base+0x78>
   1197c:	ldr	r2, [r0, #12]
   11980:	b	11988 <avl_insere_impl@@Base+0x7c>
   11984:	mvn	r2, #0
   11988:	ldr	r1, [r4, #8]
   1198c:	cmp	r1, #0
   11990:	beq	119b0 <avl_insere_impl@@Base+0xa4>
   11994:	ldr	r3, [r1, #12]
   11998:	cmp	r2, r3
   1199c:	movgt	r3, r2
   119a0:	add	r2, r3, #1
   119a4:	str	r2, [r4, #12]
   119a8:	ldr	r2, [r1, #12]
   119ac:	b	119c0 <avl_insere_impl@@Base+0xb4>
   119b0:	orr	r2, r2, r2, asr #31
   119b4:	add	r2, r2, #1
   119b8:	str	r2, [r4, #12]
   119bc:	mvn	r2, #0
   119c0:	cmp	r0, #0
   119c4:	beq	119d0 <avl_insere_impl@@Base+0xc4>
   119c8:	ldr	r3, [r0, #12]
   119cc:	b	119d4 <avl_insere_impl@@Base+0xc8>
   119d0:	mvn	r3, #0
   119d4:	sub	r2, r2, r3
   119d8:	cmp	r2, #2
   119dc:	blt	11a28 <avl_insere_impl@@Base+0x11c>
   119e0:	cmp	r1, #0
   119e4:	beq	11a1c <avl_insere_impl@@Base+0x110>
   119e8:	ldr	r3, [r1, #8]
   119ec:	mvn	r2, #0
   119f0:	mvn	r0, #0
   119f4:	cmp	r3, #0
   119f8:	ldrne	r2, [r3, #12]
   119fc:	ldr	r3, [r1, #4]
   11a00:	cmp	r3, #0
   11a04:	ldrne	r0, [r3, #12]
   11a08:	cmp	r2, r0
   11a0c:	bge	11a1c <avl_insere_impl@@Base+0x110>
   11a10:	mov	r0, r1
   11a14:	bl	11bf0 <roda_direita@@Base>
   11a18:	str	r0, [r4, #8]
   11a1c:	mov	r0, r4
   11a20:	pop	{r4, r5, fp, lr}
   11a24:	b	11c5c <roda_esquerda@@Base>
   11a28:	cmn	r2, #2
   11a2c:	bgt	11a74 <avl_insere_impl@@Base+0x168>
   11a30:	cmp	r0, #0
   11a34:	beq	11a68 <avl_insere_impl@@Base+0x15c>
   11a38:	ldr	r3, [r0, #8]
   11a3c:	mvn	r2, #0
   11a40:	mvn	r1, #0
   11a44:	cmp	r3, #0
   11a48:	ldrne	r2, [r3, #12]
   11a4c:	ldr	r3, [r0, #4]
   11a50:	cmp	r3, #0
   11a54:	ldrne	r1, [r3, #12]
   11a58:	cmp	r2, r1
   11a5c:	ble	11a68 <avl_insere_impl@@Base+0x15c>
   11a60:	bl	11c5c <roda_esquerda@@Base>
   11a64:	str	r0, [r4, #4]
   11a68:	mov	r0, r4
   11a6c:	pop	{r4, r5, fp, lr}
   11a70:	b	11bf0 <roda_direita@@Base>
   11a74:	mov	r0, r4
   11a78:	pop	{r4, r5, fp, pc}

00011a7c <avl_remove@@Base>:
   11a7c:	push	{r4, sl, fp, lr}
   11a80:	add	fp, sp, #8
   11a84:	mov	r4, r0
   11a88:	mvn	r0, #0
   11a8c:	cmp	r4, #0
   11a90:	cmpne	r1, #0
   11a94:	bne	11a9c <avl_remove@@Base+0x20>
   11a98:	pop	{r4, sl, fp, pc}
   11a9c:	ldr	r0, [r4]
   11aa0:	bl	11630 <avl_remove_impl@@Base>
   11aa4:	str	r0, [r4]
   11aa8:	mov	r0, #0
   11aac:	pop	{r4, sl, fp, pc}

00011ab0 <avl_min@@Base>:
   11ab0:	cmp	r0, #0
   11ab4:	moveq	r0, #0
   11ab8:	bxeq	lr
   11abc:	mov	r1, r0
   11ac0:	ldr	r0, [r0, #4]
   11ac4:	cmp	r0, #0
   11ac8:	bne	11abc <avl_min@@Base+0xc>
   11acc:	ldr	r0, [r1]
   11ad0:	bx	lr

00011ad4 <avl_no_valormin@@Base>:
   11ad4:	mov	r1, r0
   11ad8:	ldr	r0, [r0, #4]
   11adc:	cmp	r0, #0
   11ae0:	bne	11ad4 <avl_no_valormin@@Base>
   11ae4:	mov	r0, r1
   11ae8:	bx	lr

00011aec <avl_max@@Base>:
   11aec:	cmp	r0, #0
   11af0:	moveq	r0, #0
   11af4:	bxeq	lr
   11af8:	mov	r1, r0
   11afc:	ldr	r0, [r0, #8]
   11b00:	cmp	r0, #0
   11b04:	bne	11af8 <avl_max@@Base+0xc>
   11b08:	ldr	r0, [r1]
   11b0c:	bx	lr

00011b10 <avl_no_valormax@@Base>:
   11b10:	mov	r1, r0
   11b14:	ldr	r0, [r0, #8]
   11b18:	cmp	r0, #0
   11b1c:	bne	11b10 <avl_no_valormax@@Base>
   11b20:	mov	r0, r1
   11b24:	bx	lr

00011b28 <avl_imprime@@Base>:
   11b28:	cmp	r0, #0
   11b2c:	bxeq	lr
   11b30:	push	{fp, lr}
   11b34:	mov	fp, sp
   11b38:	bl	11b48 <avl_preordem_impl@@Base>
   11b3c:	mov	r0, #10
   11b40:	pop	{fp, lr}
   11b44:	b	11188 <putchar@plt>

00011b48 <avl_preordem_impl@@Base>:
   11b48:	push	{r4, r5, fp, lr}
   11b4c:	add	fp, sp, #8
   11b50:	cmp	r0, #0
   11b54:	popeq	{r4, r5, fp, pc}
   11b58:	movw	r5, #10196	; 0x27d4
   11b5c:	mov	r4, r0
   11b60:	movt	r5, #1
   11b64:	ldr	r1, [r4]
   11b68:	mov	r0, r5
   11b6c:	bl	110f8 <printf@plt>
   11b70:	ldr	r0, [r4, #4]
   11b74:	bl	11b48 <avl_preordem_impl@@Base>
   11b78:	ldr	r4, [r4, #8]
   11b7c:	cmp	r4, #0
   11b80:	bne	11b64 <avl_preordem_impl@@Base+0x1c>
   11b84:	pop	{r4, r5, fp, pc}

00011b88 <avl_altura@@Base>:
   11b88:	cmp	r0, #0
   11b8c:	ldrne	r0, [r0, #12]
   11b90:	mvneq	r0, #0
   11b94:	bx	lr

00011b98 <max@@Base>:
   11b98:	cmp	r0, r1
   11b9c:	movle	r0, r1
   11ba0:	bx	lr

00011ba4 <avl_novo_no@@Base>:
   11ba4:	push	{r4, r5, fp, lr}
   11ba8:	add	fp, sp, #8
   11bac:	mov	r4, r0
   11bb0:	mov	r0, #16
   11bb4:	bl	11158 <malloc@plt>
   11bb8:	mov	r5, r0
   11bbc:	mov	r0, r4
   11bc0:	bl	1117c <strlen@plt>
   11bc4:	add	r0, r0, #1
   11bc8:	bl	11158 <malloc@plt>
   11bcc:	mov	r1, r4
   11bd0:	str	r0, [r5]
   11bd4:	bl	11140 <strcpy@plt>
   11bd8:	mov	r0, #0
   11bdc:	str	r0, [r5, #4]
   11be0:	str	r0, [r5, #8]
   11be4:	str	r0, [r5, #12]
   11be8:	mov	r0, r5
   11bec:	pop	{r4, r5, fp, pc}

00011bf0 <roda_direita@@Base>:
   11bf0:	mov	r1, r0
   11bf4:	ldr	r0, [r0, #4]
   11bf8:	mvn	ip, #0
   11bfc:	mvn	r2, #0
   11c00:	ldr	r3, [r0, #8]
   11c04:	str	r1, [r0, #8]
   11c08:	str	r3, [r1, #4]
   11c0c:	cmp	r3, #0
   11c10:	ldrne	ip, [r3, #12]
   11c14:	ldr	r3, [r1, #8]
   11c18:	cmp	r3, #0
   11c1c:	ldrne	r2, [r3, #12]
   11c20:	cmp	ip, r2
   11c24:	movgt	r2, ip
   11c28:	add	r2, r2, #1
   11c2c:	str	r2, [r1, #12]
   11c30:	ldr	r1, [r0, #4]
   11c34:	cmp	r1, #0
   11c38:	beq	11c44 <roda_direita@@Base+0x54>
   11c3c:	ldr	r1, [r1, #12]
   11c40:	b	11c48 <roda_direita@@Base+0x58>
   11c44:	mvn	r1, #0
   11c48:	cmp	r1, r2
   11c4c:	movgt	r2, r1
   11c50:	add	r1, r2, #1
   11c54:	str	r1, [r0, #12]
   11c58:	bx	lr

00011c5c <roda_esquerda@@Base>:
   11c5c:	push	{fp, lr}
   11c60:	mov	fp, sp
   11c64:	mov	r1, r0
   11c68:	ldr	r0, [r0, #8]
   11c6c:	mvn	r3, #0
   11c70:	mvn	r2, #0
   11c74:	ldr	ip, [r0, #4]
   11c78:	str	r1, [r0, #4]
   11c7c:	str	ip, [r1, #8]
   11c80:	ldr	lr, [r1, #4]
   11c84:	cmp	lr, #0
   11c88:	ldrne	r3, [lr, #12]
   11c8c:	cmp	ip, #0
   11c90:	ldrne	r2, [ip, #12]
   11c94:	cmp	r3, r2
   11c98:	movgt	r2, r3
   11c9c:	add	r2, r2, #1
   11ca0:	str	r2, [r1, #12]
   11ca4:	ldr	r1, [r0, #8]
   11ca8:	cmp	r1, #0
   11cac:	beq	11cb8 <roda_esquerda@@Base+0x5c>
   11cb0:	ldr	r1, [r1, #12]
   11cb4:	b	11cbc <roda_esquerda@@Base+0x60>
   11cb8:	mvn	r1, #0
   11cbc:	cmp	r2, r1
   11cc0:	movgt	r1, r2
   11cc4:	add	r1, r1, #1
   11cc8:	str	r1, [r0, #12]
   11ccc:	pop	{fp, pc}

00011cd0 <calc_balanceamento@@Base>:
   11cd0:	cmp	r0, #0
   11cd4:	moveq	r0, #0
   11cd8:	bxeq	lr
   11cdc:	ldr	r3, [r0, #8]
   11ce0:	ldr	r0, [r0, #4]
   11ce4:	mvn	r2, #0
   11ce8:	mvn	r1, #0
   11cec:	cmp	r3, #0
   11cf0:	ldrne	r2, [r3, #12]
   11cf4:	cmp	r0, #0
   11cf8:	ldrne	r1, [r0, #12]
   11cfc:	sub	r0, r2, r1
   11d00:	bx	lr

00011d04 <novo_str@@Base>:
   11d04:	push	{r4, r5, r6, sl, fp, lr}
   11d08:	add	fp, sp, #16
   11d0c:	mov	r6, r0
   11d10:	mov	r0, #12
   11d14:	bl	11158 <malloc@plt>
   11d18:	mov	r5, #0
   11d1c:	cmp	r0, #0
   11d20:	beq	11d68 <novo_str@@Base+0x64>
   11d24:	mov	r4, r0
   11d28:	mov	r0, r6
   11d2c:	bl	1117c <strlen@plt>
   11d30:	add	r0, r0, #1
   11d34:	bl	11158 <malloc@plt>
   11d38:	cmp	r0, #0
   11d3c:	str	r0, [r4]
   11d40:	beq	11d60 <novo_str@@Base+0x5c>
   11d44:	mov	r1, r6
   11d48:	bl	11140 <strcpy@plt>
   11d4c:	mov	r0, #0
   11d50:	mov	r5, r4
   11d54:	str	r0, [r4, #4]
   11d58:	str	r0, [r4, #8]
   11d5c:	b	11d68 <novo_str@@Base+0x64>
   11d60:	mov	r0, r4
   11d64:	bl	1111c <free@plt>
   11d68:	mov	r0, r5
   11d6c:	pop	{r4, r5, r6, sl, fp, pc}

00011d70 <lista_nova@@Base>:
   11d70:	push	{fp, lr}
   11d74:	mov	fp, sp
   11d78:	mov	r0, #12
   11d7c:	bl	11158 <malloc@plt>
   11d80:	cmp	r0, #0
   11d84:	moveq	r0, #0
   11d88:	movne	r1, #0
   11d8c:	strne	r1, [r0]
   11d90:	strne	r1, [r0, #4]
   11d94:	strne	r1, [r0, #8]
   11d98:	pop	{fp, pc}

00011d9c <lista_apaga@@Base>:
   11d9c:	cmp	r0, #0
   11da0:	bxeq	lr
   11da4:	push	{r4, r5, fp, lr}
   11da8:	add	fp, sp, #8
   11dac:	mov	r4, r0
   11db0:	ldr	r5, [r4]
   11db4:	cmp	r5, #0
   11db8:	beq	11dd8 <lista_apaga@@Base+0x3c>
   11dbc:	ldr	r0, [r5, #4]
   11dc0:	str	r0, [r4]
   11dc4:	ldr	r0, [r5]
   11dc8:	bl	1111c <free@plt>
   11dcc:	mov	r0, r5
   11dd0:	bl	1111c <free@plt>
   11dd4:	b	11db0 <lista_apaga@@Base+0x14>
   11dd8:	mov	r0, r4
   11ddc:	pop	{r4, r5, fp, lr}
   11de0:	b	1111c <free@plt>

00011de4 <lista_tamanho@@Base>:
   11de4:	cmp	r0, #0
   11de8:	ldrne	r0, [r0, #8]
   11dec:	mvneq	r0, #0
   11df0:	bx	lr

00011df4 <lista_inicio@@Base>:
   11df4:	cmp	r0, #0
   11df8:	ldrne	r0, [r0]
   11dfc:	moveq	r0, #0
   11e00:	bx	lr

00011e04 <lista_fim@@Base>:
   11e04:	cmp	r0, #0
   11e08:	ldrne	r0, [r0, #4]
   11e0c:	moveq	r0, #0
   11e10:	bx	lr

00011e14 <lista_insere@@Base>:
   11e14:	push	{r4, r5, r6, sl, fp, lr}
   11e18:	add	fp, sp, #16
   11e1c:	cmp	r0, #0
   11e20:	mov	r6, #0
   11e24:	cmpne	r1, #0
   11e28:	bne	11e34 <lista_insere@@Base+0x20>
   11e2c:	mov	r0, r6
   11e30:	pop	{r4, r5, r6, sl, fp, pc}
   11e34:	mov	r4, r0
   11e38:	mov	r0, r1
   11e3c:	mov	r5, r2
   11e40:	bl	11d04 <novo_str@@Base>
   11e44:	cmp	r0, #0
   11e48:	beq	11e2c <lista_insere@@Base+0x18>
   11e4c:	ldr	r2, [r4, #8]
   11e50:	ldr	r1, [r4]
   11e54:	cmp	r5, #0
   11e58:	add	r2, r2, #1
   11e5c:	str	r2, [r4, #8]
   11e60:	beq	11e84 <lista_insere@@Base+0x70>
   11e64:	cmp	r1, r5
   11e68:	beq	11e9c <lista_insere@@Base+0x88>
   11e6c:	ldr	r1, [r5, #8]
   11e70:	str	r5, [r0, #4]
   11e74:	str	r1, [r0, #8]
   11e78:	str	r0, [r1, #4]
   11e7c:	str	r0, [r5, #8]
   11e80:	b	11eb4 <lista_insere@@Base+0xa0>
   11e84:	cmp	r1, #0
   11e88:	beq	11eac <lista_insere@@Base+0x98>
   11e8c:	ldr	r1, [r4, #4]
   11e90:	str	r1, [r0, #8]
   11e94:	str	r0, [r1, #4]
   11e98:	b	11eb0 <lista_insere@@Base+0x9c>
   11e9c:	str	r5, [r0, #4]
   11ea0:	str	r0, [r5, #8]
   11ea4:	str	r0, [r4]
   11ea8:	b	11eb4 <lista_insere@@Base+0xa0>
   11eac:	str	r0, [r4]
   11eb0:	str	r0, [r4, #4]
   11eb4:	mov	r6, r0
   11eb8:	b	11e2c <lista_insere@@Base+0x18>

00011ebc <lista_remove@@Base>:
   11ebc:	push	{r4, r5, fp, lr}
   11ec0:	add	fp, sp, #8
   11ec4:	cmp	r0, #0
   11ec8:	mov	r4, #0
   11ecc:	movne	r5, r1
   11ed0:	cmpne	r1, #0
   11ed4:	beq	11f24 <lista_remove@@Base+0x68>
   11ed8:	ldr	r1, [r0, #8]
   11edc:	sub	r1, r1, #1
   11ee0:	str	r1, [r0, #8]
   11ee4:	ldr	r1, [r5, #8]
   11ee8:	ldr	r4, [r5, #4]
   11eec:	cmp	r1, #0
   11ef0:	beq	11f00 <lista_remove@@Base+0x44>
   11ef4:	str	r4, [r1, #4]
   11ef8:	ldr	r4, [r5, #4]
   11efc:	b	11f04 <lista_remove@@Base+0x48>
   11f00:	str	r4, [r0]
   11f04:	cmp	r4, #0
   11f08:	add	r2, r4, #8
   11f0c:	addeq	r2, r0, #4
   11f10:	str	r1, [r2]
   11f14:	ldr	r0, [r5]
   11f18:	bl	1111c <free@plt>
   11f1c:	mov	r0, r5
   11f20:	bl	1111c <free@plt>
   11f24:	mov	r0, r4
   11f28:	pop	{r4, r5, fp, pc}

00011f2c <lista_pesquisa@@Base>:
   11f2c:	push	{r4, r5, r6, sl, fp, lr}
   11f30:	add	fp, sp, #16
   11f34:	cmp	r0, #0
   11f38:	mov	r4, #0
   11f3c:	movne	r5, r1
   11f40:	cmpne	r1, #0
   11f44:	bne	11f50 <lista_pesquisa@@Base+0x24>
   11f48:	mov	r0, r4
   11f4c:	pop	{r4, r5, r6, sl, fp, pc}
   11f50:	cmp	r2, #1
   11f54:	bhi	11f48 <lista_pesquisa@@Base+0x1c>
   11f58:	cmp	r2, #0
   11f5c:	beq	11f88 <lista_pesquisa@@Base+0x5c>
   11f60:	ldr	r6, [r0, #4]
   11f64:	cmp	r6, #0
   11f68:	beq	11f48 <lista_pesquisa@@Base+0x1c>
   11f6c:	ldr	r0, [r6]
   11f70:	mov	r1, r5
   11f74:	bl	110ec <strcmp@plt>
   11f78:	cmp	r0, #0
   11f7c:	beq	11fb0 <lista_pesquisa@@Base+0x84>
   11f80:	ldr	r6, [r6, #8]
   11f84:	b	11f64 <lista_pesquisa@@Base+0x38>
   11f88:	ldr	r6, [r0]
   11f8c:	cmp	r6, #0
   11f90:	beq	11f48 <lista_pesquisa@@Base+0x1c>
   11f94:	ldr	r0, [r6]
   11f98:	mov	r1, r5
   11f9c:	bl	110ec <strcmp@plt>
   11fa0:	cmp	r0, #0
   11fa4:	beq	11fb0 <lista_pesquisa@@Base+0x84>
   11fa8:	ldr	r6, [r6, #4]
   11fac:	b	11f8c <lista_pesquisa@@Base+0x60>
   11fb0:	mov	r4, r6
   11fb4:	b	11f48 <lista_pesquisa@@Base+0x1c>

00011fb8 <lista_ordena@@Base>:
   11fb8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11fbc:	add	fp, sp, #24
   11fc0:	cmp	r0, #0
   11fc4:	beq	1203c <lista_ordena@@Base+0x84>
   11fc8:	ldr	r1, [r0, #8]
   11fcc:	mov	r8, #0
   11fd0:	cmp	r1, #0
   11fd4:	beq	12040 <lista_ordena@@Base+0x88>
   11fd8:	ldr	r0, [r0]
   11fdc:	mov	r5, r0
   11fe0:	ldr	r4, [r5, #4]!
   11fe4:	cmp	r4, #0
   11fe8:	beq	12040 <lista_ordena@@Base+0x88>
   11fec:	mov	r9, r0
   11ff0:	mov	r7, r0
   11ff4:	mov	r6, r4
   11ff8:	ldr	r1, [r7]
   11ffc:	ldr	r0, [r6]
   12000:	bl	110ec <strcmp@plt>
   12004:	cmp	r0, #0
   12008:	movmi	r7, r6
   1200c:	ldr	r6, [r6, #4]
   12010:	cmp	r6, #0
   12014:	bne	11ff8 <lista_ordena@@Base+0x40>
   12018:	cmp	r7, r9
   1201c:	mov	r0, r4
   12020:	beq	11fdc <lista_ordena@@Base+0x24>
   12024:	ldr	r0, [r9]
   12028:	ldr	r1, [r7]
   1202c:	str	r1, [r9]
   12030:	str	r0, [r7]
   12034:	ldr	r0, [r5]
   12038:	b	11fdc <lista_ordena@@Base+0x24>
   1203c:	mvn	r8, #0
   12040:	mov	r0, r8
   12044:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012048 <lista_inverte@@Base>:
   12048:	push	{fp, lr}
   1204c:	mov	fp, sp
   12050:	cmp	r0, #0
   12054:	beq	120b0 <lista_inverte@@Base+0x68>
   12058:	ldr	r2, [r0, #8]
   1205c:	mov	r1, #0
   12060:	cmp	r2, #2
   12064:	blt	120e0 <lista_inverte@@Base+0x98>
   12068:	sub	r1, r2, #2
   1206c:	cmp	r1, #0
   12070:	ble	120b8 <lista_inverte@@Base+0x70>
   12074:	ldr	ip, [r0]
   12078:	ldr	r3, [ip, #4]
   1207c:	mov	r2, r3
   12080:	ldr	r3, [r3, #4]
   12084:	subs	r1, r1, #1
   12088:	ldr	lr, [r2, #8]
   1208c:	str	r3, [lr, #4]
   12090:	ldr	r3, [r2, #4]
   12094:	str	lr, [r3, #8]
   12098:	str	ip, [r2, #4]
   1209c:	str	r2, [ip, #8]
   120a0:	mov	ip, r2
   120a4:	bne	1207c <lista_inverte@@Base+0x34>
   120a8:	str	r2, [r0]
   120ac:	b	120bc <lista_inverte@@Base+0x74>
   120b0:	mvn	r1, #0
   120b4:	b	120e0 <lista_inverte@@Base+0x98>
   120b8:	ldr	r2, [r0]
   120bc:	ldr	r3, [r0, #4]
   120c0:	mov	r1, #0
   120c4:	ldr	ip, [r3, #8]
   120c8:	str	ip, [r0, #4]
   120cc:	str	r1, [ip, #4]
   120d0:	str	r2, [r3, #4]
   120d4:	str	r1, [r3, #8]
   120d8:	str	r3, [r2, #8]
   120dc:	str	r3, [r0]
   120e0:	mov	r0, r1
   120e4:	pop	{fp, pc}

000120e8 <tabela_nova@@Base>:
   120e8:	push	{r4, r5, r6, r7, fp, lr}
   120ec:	add	fp, sp, #16
   120f0:	mov	r4, #0
   120f4:	cmp	r0, #1
   120f8:	blt	12150 <tabela_nova@@Base+0x68>
   120fc:	mov	r6, r1
   12100:	cmp	r1, #0
   12104:	beq	12150 <tabela_nova@@Base+0x68>
   12108:	mov	r5, r0
   1210c:	mov	r0, #12
   12110:	bl	11158 <malloc@plt>
   12114:	cmp	r0, #0
   12118:	beq	12150 <tabela_nova@@Base+0x68>
   1211c:	mov	r7, r0
   12120:	mov	r0, r5
   12124:	mov	r1, #4
   12128:	bl	110e0 <calloc@plt>
   1212c:	cmp	r0, #0
   12130:	str	r0, [r7, #4]
   12134:	beq	12148 <tabela_nova@@Base+0x60>
   12138:	mov	r4, r7
   1213c:	str	r6, [r7]
   12140:	str	r5, [r7, #8]
   12144:	b	12150 <tabela_nova@@Base+0x68>
   12148:	mov	r0, r7
   1214c:	bl	1111c <free@plt>
   12150:	mov	r0, r4
   12154:	pop	{r4, r5, r6, r7, fp, pc}

00012158 <tabela_apaga@@Base>:
   12158:	cmp	r0, #0
   1215c:	bxeq	lr
   12160:	push	{r4, r5, r6, r7, fp, lr}
   12164:	add	fp, sp, #16
   12168:	mov	r4, r0
   1216c:	ldr	r0, [r0, #4]
   12170:	ldr	r1, [r4, #8]
   12174:	cmp	r1, #1
   12178:	blt	121b8 <tabela_apaga@@Base+0x60>
   1217c:	mov	r6, #0
   12180:	ldr	r5, [r0, r6, lsl #2]
   12184:	cmp	r5, #0
   12188:	beq	121ac <tabela_apaga@@Base+0x54>
   1218c:	ldm	r5, {r0, r7}
   12190:	bl	1111c <free@plt>
   12194:	mov	r0, r5
   12198:	bl	1111c <free@plt>
   1219c:	cmp	r7, #0
   121a0:	mov	r5, r7
   121a4:	bne	1218c <tabela_apaga@@Base+0x34>
   121a8:	ldmib	r4, {r0, r1}
   121ac:	add	r6, r6, #1
   121b0:	cmp	r6, r1
   121b4:	blt	12180 <tabela_apaga@@Base+0x28>
   121b8:	bl	1111c <free@plt>
   121bc:	mov	r0, r4
   121c0:	pop	{r4, r5, r6, r7, fp, lr}
   121c4:	b	1111c <free@plt>

000121c8 <tabela_adiciona@@Base>:
   121c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   121cc:	add	fp, sp, #28
   121d0:	sub	sp, sp, #4
   121d4:	mvn	sl, #1
   121d8:	cmp	r0, #0
   121dc:	beq	121f4 <tabela_adiciona@@Base+0x2c>
   121e0:	cmp	r1, #0
   121e4:	mov	r7, r1
   121e8:	movne	r9, r2
   121ec:	cmpne	r2, #0
   121f0:	bne	12200 <tabela_adiciona@@Base+0x38>
   121f4:	mov	r0, sl
   121f8:	sub	sp, fp, #28
   121fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12200:	ldr	r2, [r0]
   12204:	ldr	r1, [r0, #8]
   12208:	mov	r6, r0
   1220c:	mov	r0, r7
   12210:	blx	r2
   12214:	mov	r8, r0
   12218:	ldr	r0, [r6, #4]
   1221c:	ldr	r4, [r0, r8, lsl #2]
   12220:	cmp	r4, #0
   12224:	beq	12248 <tabela_adiciona@@Base+0x80>
   12228:	ldr	r5, [r4]
   1222c:	mov	r1, r7
   12230:	mov	r0, r5
   12234:	bl	110ec <strcmp@plt>
   12238:	cmp	r0, #0
   1223c:	beq	12298 <tabela_adiciona@@Base+0xd0>
   12240:	ldr	r4, [r4, #4]
   12244:	b	12220 <tabela_adiciona@@Base+0x58>
   12248:	mov	r0, #8
   1224c:	bl	11158 <malloc@plt>
   12250:	cmp	r0, #0
   12254:	beq	121f4 <tabela_adiciona@@Base+0x2c>
   12258:	mov	r5, r0
   1225c:	mov	r0, #125	; 0x7d
   12260:	bl	11158 <malloc@plt>
   12264:	cmp	r0, #0
   12268:	str	r0, [r5]
   1226c:	beq	121f4 <tabela_adiciona@@Base+0x2c>
   12270:	mov	r1, r7
   12274:	bl	11140 <strcpy@plt>
   12278:	add	r0, r0, #25
   1227c:	mov	r1, r9
   12280:	bl	11140 <strcpy@plt>
   12284:	ldr	r0, [r6, #4]
   12288:	ldr	r1, [r0, r8, lsl #2]
   1228c:	str	r1, [r5, #4]
   12290:	str	r5, [r0, r8, lsl #2]
   12294:	b	122a4 <tabela_adiciona@@Base+0xdc>
   12298:	add	r0, r5, #25
   1229c:	mov	r1, r9
   122a0:	bl	11140 <strcpy@plt>
   122a4:	mov	sl, #0
   122a8:	b	121f4 <tabela_adiciona@@Base+0x2c>

000122ac <tabela_remove@@Base>:
   122ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   122b0:	add	fp, sp, #28
   122b4:	sub	sp, sp, #4
   122b8:	cmp	r0, #0
   122bc:	beq	1233c <tabela_remove@@Base+0x90>
   122c0:	mov	r6, r1
   122c4:	ldr	r2, [r0]
   122c8:	ldr	r1, [r0, #8]
   122cc:	mov	r4, r0
   122d0:	mov	r0, r6
   122d4:	blx	r2
   122d8:	ldr	r9, [r4, #4]
   122dc:	mvn	sl, #2
   122e0:	ldr	r7, [r9, r0, lsl #2]
   122e4:	cmp	r7, #0
   122e8:	beq	12378 <tabela_remove@@Base+0xcc>
   122ec:	ldr	r5, [r7]
   122f0:	mov	r8, r0
   122f4:	mov	r1, r6
   122f8:	mov	r0, r5
   122fc:	bl	110ec <strcmp@plt>
   12300:	cmp	r0, #0
   12304:	beq	12344 <tabela_remove@@Base+0x98>
   12308:	mov	r4, r7
   1230c:	ldr	r7, [r4, #4]
   12310:	cmp	r7, #0
   12314:	beq	12378 <tabela_remove@@Base+0xcc>
   12318:	ldr	r5, [r7]
   1231c:	mov	r1, r6
   12320:	mov	r0, r5
   12324:	bl	110ec <strcmp@plt>
   12328:	cmp	r0, #0
   1232c:	mov	r0, r4
   12330:	mov	r4, r7
   12334:	bne	1230c <tabela_remove@@Base+0x60>
   12338:	b	12348 <tabela_remove@@Base+0x9c>
   1233c:	mvn	sl, #1
   12340:	b	12378 <tabela_remove@@Base+0xcc>
   12344:	mov	r0, #0
   12348:	ldr	r1, [r7, #4]
   1234c:	cmp	r0, #0
   12350:	beq	1235c <tabela_remove@@Base+0xb0>
   12354:	str	r1, [r0, #4]
   12358:	b	12364 <tabela_remove@@Base+0xb8>
   1235c:	str	r1, [r9, r8, lsl #2]
   12360:	ldr	r5, [r7]
   12364:	mov	r0, r5
   12368:	bl	1111c <free@plt>
   1236c:	mov	r0, r7
   12370:	bl	1111c <free@plt>
   12374:	mov	sl, #0
   12378:	mov	r0, sl
   1237c:	sub	sp, fp, #28
   12380:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012384 <tabela_existe@@Base>:
   12384:	mov	r2, r0
   12388:	mvn	r0, #1
   1238c:	cmp	r2, #0
   12390:	cmpne	r1, #0
   12394:	bne	1239c <tabela_existe@@Base+0x18>
   12398:	bx	lr
   1239c:	push	{fp, lr}
   123a0:	mov	fp, sp
   123a4:	mov	r0, r2
   123a8:	bl	123c4 <tabela_valor@@Base>
   123ac:	mov	r1, r0
   123b0:	mov	r0, #1
   123b4:	cmp	r1, #0
   123b8:	mvneq	r0, #2
   123bc:	pop	{fp, lr}
   123c0:	bx	lr

000123c4 <tabela_valor@@Base>:
   123c4:	push	{r4, r5, r6, r7, fp, lr}
   123c8:	add	fp, sp, #16
   123cc:	mov	r4, #0
   123d0:	cmp	r0, #0
   123d4:	beq	12424 <tabela_valor@@Base+0x60>
   123d8:	mov	r5, r1
   123dc:	ldr	r2, [r0]
   123e0:	ldr	r1, [r0, #8]
   123e4:	mov	r6, r0
   123e8:	mov	r0, r5
   123ec:	blx	r2
   123f0:	ldr	r1, [r6, #4]
   123f4:	ldr	r7, [r1, r0, lsl #2]
   123f8:	cmp	r7, #0
   123fc:	beq	12424 <tabela_valor@@Base+0x60>
   12400:	ldr	r6, [r7]
   12404:	mov	r1, r5
   12408:	mov	r0, r6
   1240c:	bl	110ec <strcmp@plt>
   12410:	cmp	r0, #0
   12414:	beq	12420 <tabela_valor@@Base+0x5c>
   12418:	ldr	r7, [r7, #4]
   1241c:	b	123f8 <tabela_valor@@Base+0x34>
   12420:	add	r4, r6, #25
   12424:	mov	r0, r4
   12428:	pop	{r4, r5, r6, r7, fp, pc}

0001242c <tabela_esvazia@@Base>:
   1242c:	push	{r4, r5, r6, r7, fp, lr}
   12430:	add	fp, sp, #16
   12434:	cmp	r0, #0
   12438:	beq	1249c <tabela_esvazia@@Base+0x70>
   1243c:	ldr	r1, [r0, #8]
   12440:	mov	r4, r0
   12444:	cmp	r1, #1
   12448:	blt	124a4 <tabela_esvazia@@Base+0x78>
   1244c:	mov	r6, #0
   12450:	ldr	r2, [r4, #4]
   12454:	ldr	r5, [r2, r6, lsl #2]
   12458:	cmp	r5, #0
   1245c:	beq	12484 <tabela_esvazia@@Base+0x58>
   12460:	ldm	r5, {r0, r7}
   12464:	bl	1111c <free@plt>
   12468:	mov	r0, r5
   1246c:	bl	1111c <free@plt>
   12470:	cmp	r7, #0
   12474:	mov	r5, r7
   12478:	bne	12460 <tabela_esvazia@@Base+0x34>
   1247c:	ldr	r2, [r4, #4]
   12480:	ldr	r1, [r4, #8]
   12484:	mov	r0, #0
   12488:	str	r0, [r2, r6, lsl #2]
   1248c:	add	r6, r6, #1
   12490:	cmp	r6, r1
   12494:	blt	12450 <tabela_esvazia@@Base+0x24>
   12498:	pop	{r4, r5, r6, r7, fp, pc}
   1249c:	mvn	r0, #1
   124a0:	pop	{r4, r5, r6, r7, fp, pc}
   124a4:	mov	r0, #0
   124a8:	pop	{r4, r5, r6, r7, fp, pc}

000124ac <tabela_numelementos@@Base>:
   124ac:	cmp	r0, #0
   124b0:	mvneq	r0, #1
   124b4:	bxeq	lr
   124b8:	ldr	r1, [r0, #8]
   124bc:	cmp	r1, #1
   124c0:	movlt	r0, #0
   124c4:	bxlt	lr
   124c8:	ldr	ip, [r0, #4]
   124cc:	mov	r0, #0
   124d0:	mov	r3, #0
   124d4:	ldr	r2, [ip, r3, lsl #2]
   124d8:	cmp	r2, #0
   124dc:	beq	124ec <tabela_numelementos@@Base+0x40>
   124e0:	ldr	r2, [r2, #4]
   124e4:	add	r0, r0, #1
   124e8:	b	124d8 <tabela_numelementos@@Base+0x2c>
   124ec:	add	r3, r3, #1
   124f0:	cmp	r3, r1
   124f4:	bxge	lr
   124f8:	b	124d4 <tabela_numelementos@@Base+0x28>

000124fc <tabela_elementos@@Base>:
   124fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12500:	add	fp, sp, #28
   12504:	sub	sp, sp, #4
   12508:	cmp	r0, #0
   1250c:	beq	125d8 <tabela_elementos@@Base+0xdc>
   12510:	ldr	r2, [r0, #8]
   12514:	mov	r5, r0
   12518:	cmp	r2, #1
   1251c:	blt	125e0 <tabela_elementos@@Base+0xe4>
   12520:	ldr	r7, [r5, #4]
   12524:	mov	r0, #0
   12528:	mov	r3, #0
   1252c:	ldr	r6, [r7, r3, lsl #2]
   12530:	cmp	r6, #0
   12534:	beq	12544 <tabela_elementos@@Base+0x48>
   12538:	ldr	r6, [r6, #4]
   1253c:	add	r0, r0, #1
   12540:	b	12530 <tabela_elementos@@Base+0x34>
   12544:	add	r3, r3, #1
   12548:	cmp	r3, r2
   1254c:	bne	1252c <tabela_elementos@@Base+0x30>
   12550:	mov	r6, #0
   12554:	cmp	r0, #1
   12558:	str	r0, [r1]
   1255c:	blt	125ec <tabela_elementos@@Base+0xf0>
   12560:	mov	r1, #125	; 0x7d
   12564:	mul	r0, r0, r1
   12568:	bl	11158 <malloc@plt>
   1256c:	cmp	r0, #0
   12570:	beq	125ec <tabela_elementos@@Base+0xf0>
   12574:	ldr	sl, [r5, #8]
   12578:	mov	r8, r0
   1257c:	cmp	sl, #1
   12580:	blt	125d0 <tabela_elementos@@Base+0xd4>
   12584:	mov	r4, #0
   12588:	mov	r6, #0
   1258c:	ldr	r9, [r7, r6, lsl #2]
   12590:	cmp	r9, #0
   12594:	beq	125c4 <tabela_elementos@@Base+0xc8>
   12598:	mov	r0, #125	; 0x7d
   1259c:	mla	r5, r4, r0, r8
   125a0:	ldr	r1, [r9]
   125a4:	mov	r0, r5
   125a8:	mov	r2, #125	; 0x7d
   125ac:	bl	11128 <memcpy@plt>
   125b0:	ldr	r9, [r9, #4]
   125b4:	add	r5, r5, #125	; 0x7d
   125b8:	add	r4, r4, #1
   125bc:	cmp	r9, #0
   125c0:	bne	125a0 <tabela_elementos@@Base+0xa4>
   125c4:	add	r6, r6, #1
   125c8:	cmp	r6, sl
   125cc:	blt	1258c <tabela_elementos@@Base+0x90>
   125d0:	mov	r6, r8
   125d4:	b	125ec <tabela_elementos@@Base+0xf0>
   125d8:	mvn	r0, #1
   125dc:	b	125e4 <tabela_elementos@@Base+0xe8>
   125e0:	mov	r0, #0
   125e4:	str	r0, [r1]
   125e8:	mov	r6, #0
   125ec:	mov	r0, r6
   125f0:	sub	sp, fp, #28
   125f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000125f8 <hash_krm@@Base>:
   125f8:	ldrb	r2, [r0]
   125fc:	cmp	r2, #0
   12600:	beq	12620 <hash_krm@@Base+0x28>
   12604:	add	r3, r0, #1
   12608:	mov	r0, #7
   1260c:	uxtab	r0, r0, r2
   12610:	ldrb	r2, [r3], #1
   12614:	cmp	r2, #0
   12618:	bne	1260c <hash_krm@@Base+0x14>
   1261c:	b	12624 <hash_krm@@Base+0x2c>
   12620:	mov	r0, #7
   12624:	udiv	r2, r0, r1
   12628:	mls	r0, r2, r1, r0
   1262c:	bx	lr

00012630 <hash_djbm@@Base>:
   12630:	ldrb	r2, [r0]
   12634:	cmp	r2, #0
   12638:	beq	12660 <hash_djbm@@Base+0x30>
   1263c:	add	r3, r0, #1
   12640:	movw	r0, #5347	; 0x14e3
   12644:	uxtb	r2, r2
   12648:	rsb	r0, r0, r0, lsl #5
   1264c:	eor	r0, r0, r2
   12650:	ldrb	r2, [r3], #1
   12654:	cmp	r2, #0
   12658:	bne	12644 <hash_djbm@@Base+0x14>
   1265c:	b	12664 <hash_djbm@@Base+0x34>
   12660:	movw	r0, #5347	; 0x14e3
   12664:	udiv	r2, r0, r1
   12668:	mls	r0, r2, r1, r0
   1266c:	bx	lr

00012670 <mostraTabela@@Base>:
   12670:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12674:	add	fp, sp, #24
   12678:	mov	r4, r0
   1267c:	cmp	r0, #0
   12680:	beq	126c4 <mostraTabela@@Base+0x54>
   12684:	ldr	r0, [r4, #8]
   12688:	cmp	r0, #1
   1268c:	blt	126cc <mostraTabela@@Base+0x5c>
   12690:	ldr	r2, [r4, #4]
   12694:	mov	r1, #0
   12698:	mov	r3, #0
   1269c:	ldr	r7, [r2, r3, lsl #2]
   126a0:	cmp	r7, #0
   126a4:	beq	126b4 <mostraTabela@@Base+0x44>
   126a8:	ldr	r7, [r7, #4]
   126ac:	add	r1, r1, #1
   126b0:	b	126a0 <mostraTabela@@Base+0x30>
   126b4:	add	r3, r3, #1
   126b8:	cmp	r3, r0
   126bc:	bne	1269c <mostraTabela@@Base+0x2c>
   126c0:	b	126d0 <mostraTabela@@Base+0x60>
   126c4:	mvn	r1, #1
   126c8:	b	126d0 <mostraTabela@@Base+0x60>
   126cc:	mov	r1, #0
   126d0:	movw	r0, #10843	; 0x2a5b
   126d4:	movt	r0, #1
   126d8:	bl	110f8 <printf@plt>
   126dc:	ldr	r0, [r4, #8]
   126e0:	cmp	r0, #1
   126e4:	blt	12758 <mostraTabela@@Base+0xe8>
   126e8:	movw	r8, #10879	; 0x2a7f
   126ec:	movw	r7, #10886	; 0x2a86
   126f0:	mov	r5, #0
   126f4:	movt	r8, #1
   126f8:	movt	r7, #1
   126fc:	ldr	r1, [r4, #4]
   12700:	ldr	r1, [r1, r5, lsl #2]
   12704:	cmp	r1, #0
   12708:	beq	1274c <mostraTabela@@Base+0xdc>
   1270c:	mov	r0, r8
   12710:	mov	r1, r5
   12714:	bl	110f8 <printf@plt>
   12718:	ldr	r0, [r4, #4]
   1271c:	ldr	r6, [r0, r5, lsl #2]
   12720:	cmp	r6, #0
   12724:	beq	12740 <mostraTabela@@Base+0xd0>
   12728:	ldr	r1, [r6]
   1272c:	mov	r0, r7
   12730:	add	r2, r1, #25
   12734:	bl	110f8 <printf@plt>
   12738:	ldr	r6, [r6, #4]
   1273c:	b	12720 <mostraTabela@@Base+0xb0>
   12740:	mov	r0, #10
   12744:	bl	11188 <putchar@plt>
   12748:	ldr	r0, [r4, #8]
   1274c:	add	r5, r5, #1
   12750:	cmp	r5, r0
   12754:	blt	126fc <mostraTabela@@Base+0x8c>
   12758:	mov	r0, #10
   1275c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   12760:	b	11188 <putchar@plt>

00012764 <__libc_csu_init@@Base>:
   12764:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12768:	mov	r7, r0
   1276c:	ldr	r6, [pc, #72]	; 127bc <__libc_csu_init@@Base+0x58>
   12770:	ldr	r5, [pc, #72]	; 127c0 <__libc_csu_init@@Base+0x5c>
   12774:	add	r6, pc, r6
   12778:	add	r5, pc, r5
   1277c:	sub	r6, r6, r5
   12780:	mov	r8, r1
   12784:	mov	r9, r2
   12788:	bl	110c0 <calloc@plt-0x20>
   1278c:	asrs	r6, r6, #2
   12790:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12794:	mov	r4, #0
   12798:	add	r4, r4, #1
   1279c:	ldr	r3, [r5], #4
   127a0:	mov	r2, r9
   127a4:	mov	r1, r8
   127a8:	mov	r0, r7
   127ac:	blx	r3
   127b0:	cmp	r6, r4
   127b4:	bne	12798 <__libc_csu_init@@Base+0x34>
   127b8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   127bc:	muleq	r1, r0, r7
   127c0:	andeq	r0, r1, r8, lsl #15

000127c4 <__libc_csu_fini@@Base>:
   127c4:	bx	lr

Disassembly of section .fini:

000127c8 <.fini>:
   127c8:	push	{r3, lr}
   127cc:	pop	{r3, pc}
