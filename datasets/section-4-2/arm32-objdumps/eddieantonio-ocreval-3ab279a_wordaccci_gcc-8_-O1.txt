
../repos/eddieantonio-ocreval-3ab279a/wordaccci/wordaccci:     file format elf32-littlearm


Disassembly of section .init:

00010760 <.init>:
   10760:	push	{r3, lr}
   10764:	bl	108ec <abort@plt+0x4c>
   10768:	pop	{r3, pc}

Disassembly of section .plt:

0001076c <calloc@plt-0x14>:
   1076c:	push	{lr}		; (str lr, [sp, #-4]!)
   10770:	ldr	lr, [pc, #4]	; 1077c <calloc@plt-0x4>
   10774:	add	lr, pc, lr
   10778:	ldr	pc, [lr, #8]!
   1077c:	andeq	r2, r1, r4, lsl #17

00010780 <calloc@plt>:
   10780:	add	ip, pc, #0, 12
   10784:	add	ip, ip, #73728	; 0x12000
   10788:	ldr	pc, [ip, #2180]!	; 0x884

0001078c <strcmp@plt>:
   1078c:	add	ip, pc, #0, 12
   10790:	add	ip, ip, #73728	; 0x12000
   10794:	ldr	pc, [ip, #2172]!	; 0x87c

00010798 <strtol@plt>:
   10798:	add	ip, pc, #0, 12
   1079c:	add	ip, ip, #73728	; 0x12000
   107a0:	ldr	pc, [ip, #2164]!	; 0x874

000107a4 <printf@plt>:
   107a4:	add	ip, pc, #0, 12
   107a8:	add	ip, ip, #73728	; 0x12000
   107ac:	ldr	pc, [ip, #2156]!	; 0x86c

000107b0 <fopen@plt>:
   107b0:	add	ip, pc, #0, 12
   107b4:	add	ip, ip, #73728	; 0x12000
   107b8:	ldr	pc, [ip, #2148]!	; 0x864

000107bc <free@plt>:
   107bc:	add	ip, pc, #0, 12
   107c0:	add	ip, ip, #73728	; 0x12000
   107c4:	ldr	pc, [ip, #2140]!	; 0x85c

000107c8 <fgets@plt>:
   107c8:	add	ip, pc, #0, 12
   107cc:	add	ip, ip, #73728	; 0x12000
   107d0:	ldr	pc, [ip, #2132]!	; 0x854

000107d4 <strdup@plt>:
   107d4:	add	ip, pc, #0, 12
   107d8:	add	ip, ip, #73728	; 0x12000
   107dc:	ldr	pc, [ip, #2124]!	; 0x84c

000107e0 <unlink@plt>:
   107e0:	add	ip, pc, #0, 12
   107e4:	add	ip, ip, #73728	; 0x12000
   107e8:	ldr	pc, [ip, #2116]!	; 0x844

000107ec <__xstat@plt>:
   107ec:	add	ip, pc, #0, 12
   107f0:	add	ip, ip, #73728	; 0x12000
   107f4:	ldr	pc, [ip, #2108]!	; 0x83c

000107f8 <fwrite@plt>:
   107f8:	add	ip, pc, #0, 12
   107fc:	add	ip, ip, #73728	; 0x12000
   10800:	ldr	pc, [ip, #2100]!	; 0x834

00010804 <__libc_start_main@plt>:
   10804:	add	ip, pc, #0, 12
   10808:	add	ip, ip, #73728	; 0x12000
   1080c:	ldr	pc, [ip, #2092]!	; 0x82c

00010810 <__sysv_signal@plt>:
   10810:	add	ip, pc, #0, 12
   10814:	add	ip, ip, #73728	; 0x12000
   10818:	ldr	pc, [ip, #2084]!	; 0x824

0001081c <__gmon_start__@plt>:
   1081c:	add	ip, pc, #0, 12
   10820:	add	ip, ip, #73728	; 0x12000
   10824:	ldr	pc, [ip, #2076]!	; 0x81c

00010828 <getpid@plt>:
   10828:	add	ip, pc, #0, 12
   1082c:	add	ip, ip, #73728	; 0x12000
   10830:	ldr	pc, [ip, #2068]!	; 0x814

00010834 <exit@plt>:
   10834:	add	ip, pc, #0, 12
   10838:	add	ip, ip, #73728	; 0x12000
   1083c:	ldr	pc, [ip, #2060]!	; 0x80c

00010840 <strlen@plt>:
   10840:	add	ip, pc, #0, 12
   10844:	add	ip, ip, #73728	; 0x12000
   10848:	ldr	pc, [ip, #2052]!	; 0x804

0001084c <fprintf@plt>:
   1084c:	add	ip, pc, #0, 12
   10850:	add	ip, ip, #73728	; 0x12000
   10854:	ldr	pc, [ip, #2044]!	; 0x7fc

00010858 <sqrt@plt>:
   10858:	add	ip, pc, #0, 12
   1085c:	add	ip, ip, #73728	; 0x12000
   10860:	ldr	pc, [ip, #2036]!	; 0x7f4

00010864 <__isoc99_sscanf@plt>:
   10864:	add	ip, pc, #0, 12
   10868:	add	ip, ip, #73728	; 0x12000
   1086c:	ldr	pc, [ip, #2028]!	; 0x7ec

00010870 <fclose@plt>:
   10870:	add	ip, pc, #0, 12
   10874:	add	ip, ip, #73728	; 0x12000
   10878:	ldr	pc, [ip, #2020]!	; 0x7e4

0001087c <fputc@plt>:
   1087c:	add	ip, pc, #0, 12
   10880:	add	ip, ip, #73728	; 0x12000
   10884:	ldr	pc, [ip, #2012]!	; 0x7dc

00010888 <sprintf@plt>:
   10888:	add	ip, pc, #0, 12
   1088c:	add	ip, ip, #73728	; 0x12000
   10890:	ldr	pc, [ip, #2004]!	; 0x7d4

00010894 <strncmp@plt>:
   10894:	add	ip, pc, #0, 12
   10898:	add	ip, ip, #73728	; 0x12000
   1089c:	ldr	pc, [ip, #1996]!	; 0x7cc

000108a0 <abort@plt>:
   108a0:	add	ip, pc, #0, 12
   108a4:	add	ip, ip, #73728	; 0x12000
   108a8:	ldr	pc, [ip, #1988]!	; 0x7c4

Disassembly of section .text:

000108b0 <error@@Base-0x13fc>:
   108b0:	mov	fp, #0
   108b4:	mov	lr, #0
   108b8:	pop	{r1}		; (ldr r1, [sp], #4)
   108bc:	mov	r2, sp
   108c0:	push	{r2}		; (str r2, [sp, #-4]!)
   108c4:	push	{r0}		; (str r0, [sp, #-4]!)
   108c8:	ldr	ip, [pc, #16]	; 108e0 <abort@plt+0x40>
   108cc:	push	{ip}		; (str ip, [sp, #-4]!)
   108d0:	ldr	r0, [pc, #12]	; 108e4 <abort@plt+0x44>
   108d4:	ldr	r3, [pc, #12]	; 108e8 <abort@plt+0x48>
   108d8:	bl	10804 <__libc_start_main@plt>
   108dc:	bl	108a0 <abort@plt>
   108e0:	ldrdeq	r2, [r1], -r4
   108e4:	andeq	r0, r1, r8, asr #21
   108e8:	andeq	r2, r1, r4, ror r4
   108ec:	ldr	r3, [pc, #20]	; 10908 <abort@plt+0x68>
   108f0:	ldr	r2, [pc, #20]	; 1090c <abort@plt+0x6c>
   108f4:	add	r3, pc, r3
   108f8:	ldr	r2, [r3, r2]
   108fc:	cmp	r2, #0
   10900:	bxeq	lr
   10904:	b	1081c <__gmon_start__@plt>
   10908:	andeq	r2, r1, r4, lsl #14
   1090c:	andeq	r0, r0, r0, ror r0
   10910:	ldr	r0, [pc, #24]	; 10930 <abort@plt+0x90>
   10914:	ldr	r3, [pc, #24]	; 10934 <abort@plt+0x94>
   10918:	cmp	r3, r0
   1091c:	bxeq	lr
   10920:	ldr	r3, [pc, #16]	; 10938 <abort@plt+0x98>
   10924:	cmp	r3, #0
   10928:	bxeq	lr
   1092c:	bx	r3
   10930:	andeq	r3, r2, r4, lsl #1
   10934:	andeq	r3, r2, r4, lsl #1
   10938:	andeq	r0, r0, r0
   1093c:	ldr	r0, [pc, #36]	; 10968 <abort@plt+0xc8>
   10940:	ldr	r1, [pc, #36]	; 1096c <abort@plt+0xcc>
   10944:	sub	r1, r1, r0
   10948:	asr	r1, r1, #2
   1094c:	add	r1, r1, r1, lsr #31
   10950:	asrs	r1, r1, #1
   10954:	bxeq	lr
   10958:	ldr	r3, [pc, #16]	; 10970 <abort@plt+0xd0>
   1095c:	cmp	r3, #0
   10960:	bxeq	lr
   10964:	bx	r3
   10968:	andeq	r3, r2, r4, lsl #1
   1096c:	andeq	r3, r2, r4, lsl #1
   10970:	andeq	r0, r0, r0
   10974:	push	{r4, lr}
   10978:	ldr	r4, [pc, #24]	; 10998 <abort@plt+0xf8>
   1097c:	ldrb	r3, [r4]
   10980:	cmp	r3, #0
   10984:	popne	{r4, pc}
   10988:	bl	10910 <abort@plt+0x70>
   1098c:	mov	r3, #1
   10990:	strb	r3, [r4]
   10994:	pop	{r4, pc}
   10998:	muleq	r2, r8, r0
   1099c:	b	1093c <abort@plt+0x9c>
   109a0:	strd	r4, [sp, #-16]!
   109a4:	str	r6, [sp, #8]
   109a8:	str	lr, [sp, #12]
   109ac:	movw	r4, #12560	; 0x3110
   109b0:	movt	r4, #2
   109b4:	ldr	r5, [r4]
   109b8:	ldr	r6, [r4, #4]
   109bc:	mov	r1, r0
   109c0:	mov	r0, r4
   109c4:	bl	113d0 <abort@plt+0xb30>
   109c8:	ldr	r2, [r4, #4]
   109cc:	ldr	r1, [r4]
   109d0:	sub	r2, r2, r6
   109d4:	sub	r1, r1, r5
   109d8:	movw	r0, #29664	; 0x73e0
   109dc:	movt	r0, #2
   109e0:	bl	10b30 <abort@plt+0x290>
   109e4:	ldrd	r4, [sp]
   109e8:	ldr	r6, [sp, #8]
   109ec:	add	sp, sp, #12
   109f0:	pop	{pc}		; (ldr pc, [sp], #4)
   109f4:	str	r4, [sp, #-8]!
   109f8:	str	lr, [sp, #4]
   109fc:	sub	sp, sp, #32
   10a00:	movw	r4, #29664	; 0x73e0
   10a04:	movt	r4, #2
   10a08:	add	r2, sp, #16
   10a0c:	add	r1, sp, #24
   10a10:	mov	r0, r4
   10a14:	bl	10b90 <abort@plt+0x2f0>
   10a18:	ldr	r1, [r4, #12]
   10a1c:	movw	r0, #9444	; 0x24e4
   10a20:	movt	r0, #1
   10a24:	bl	107a4 <printf@plt>
   10a28:	movw	r4, #12560	; 0x3110
   10a2c:	movt	r4, #2
   10a30:	ldr	r1, [r4]
   10a34:	movw	r0, #9468	; 0x24fc
   10a38:	movt	r0, #1
   10a3c:	bl	107a4 <printf@plt>
   10a40:	ldr	r1, [r4, #4]
   10a44:	movw	r0, #9484	; 0x250c
   10a48:	movt	r0, #1
   10a4c:	bl	107a4 <printf@plt>
   10a50:	ldr	r2, [r4]
   10a54:	ldr	r3, [r4, #4]
   10a58:	sub	r3, r2, r3
   10a5c:	vmov	s14, r3
   10a60:	vcvt.f64.s32	d7, s14
   10a64:	vldr	d6, [pc, #84]	; 10ac0 <abort@plt+0x220>
   10a68:	vmul.f64	d7, d7, d6
   10a6c:	vmov	s13, r2
   10a70:	vcvt.f64.s32	d6, s13
   10a74:	vdiv.f64	d7, d7, d6
   10a78:	vmov	r2, r3, d7
   10a7c:	movw	r0, #9508	; 0x2524
   10a80:	movt	r0, #1
   10a84:	bl	107a4 <printf@plt>
   10a88:	movw	r3, #9552	; 0x2550
   10a8c:	movt	r3, #1
   10a90:	str	r3, [sp, #8]
   10a94:	ldrd	r2, [sp, #16]
   10a98:	strd	r2, [sp]
   10a9c:	ldrd	r2, [sp, #24]
   10aa0:	movw	r0, #9528	; 0x2538
   10aa4:	movt	r0, #1
   10aa8:	bl	107a4 <printf@plt>
   10aac:	add	sp, sp, #32
   10ab0:	ldr	r4, [sp]
   10ab4:	add	sp, sp, #4
   10ab8:	pop	{pc}		; (ldr pc, [sp], #4)
   10abc:	nop	{0}
   10ac0:	andeq	r0, r0, r0
   10ac4:	subsmi	r0, r9, r0
   10ac8:	strd	r4, [sp, #-12]!
   10acc:	str	lr, [sp, #8]
   10ad0:	sub	sp, sp, #12
   10ad4:	str	r0, [sp, #4]
   10ad8:	mov	r5, r1
   10adc:	mov	r3, #0
   10ae0:	movw	r2, #9604	; 0x2584
   10ae4:	movt	r2, #1
   10ae8:	add	r0, sp, #4
   10aec:	bl	11e18 <error@@Base+0x16c>
   10af0:	ldr	r3, [sp, #4]
   10af4:	cmp	r3, #1
   10af8:	subgt	r5, r5, #4
   10afc:	movgt	r4, #0
   10b00:	ble	10b24 <abort@plt+0x284>
   10b04:	ldr	r0, [r5, #4]!
   10b08:	bl	109a0 <abort@plt+0x100>
   10b0c:	add	r4, r4, #1
   10b10:	ldr	r3, [sp, #4]
   10b14:	cmp	r3, r4
   10b18:	bgt	10b04 <abort@plt+0x264>
   10b1c:	bl	109f4 <abort@plt+0x154>
   10b20:	bl	11c4c <abort@plt+0x13ac>
   10b24:	movw	r0, #9652	; 0x25b4
   10b28:	movt	r0, #1
   10b2c:	bl	11cac <error@@Base>
   10b30:	strd	r4, [sp, #-16]!
   10b34:	str	r6, [sp, #8]
   10b38:	str	lr, [sp, #12]
   10b3c:	mov	r4, r0
   10b40:	mov	r6, r1
   10b44:	mov	r5, r2
   10b48:	mov	r1, #32
   10b4c:	mov	r0, #1
   10b50:	bl	11cec <error@@Base+0x40>
   10b54:	str	r6, [r0, #8]
   10b58:	str	r5, [r0, #12]
   10b5c:	ldr	r1, [r4, #24]
   10b60:	add	r1, r1, r6
   10b64:	str	r1, [r4, #24]
   10b68:	ldr	r2, [r4, #28]
   10b6c:	add	r2, r2, r5
   10b70:	str	r2, [r4, #28]
   10b74:	mov	r1, r0
   10b78:	mov	r0, r4
   10b7c:	bl	12140 <error@@Base+0x494>
   10b80:	ldrd	r4, [sp]
   10b84:	ldr	r6, [sp, #8]
   10b88:	add	sp, sp, #12
   10b8c:	pop	{pc}		; (ldr pc, [sp], #4)
   10b90:	strd	r4, [sp, #-16]!
   10b94:	str	r6, [sp, #8]
   10b98:	str	lr, [sp, #12]
   10b9c:	vpush	{d8}
   10ba0:	mov	r6, r2
   10ba4:	ldr	r2, [r0]
   10ba8:	cmp	r2, #0
   10bac:	beq	10d10 <abort@plt+0x470>
   10bb0:	mov	r4, r0
   10bb4:	mov	r5, r1
   10bb8:	mov	r3, r2
   10bbc:	mov	r0, #0
   10bc0:	ldr	r1, [r3, #8]
   10bc4:	cmp	r1, #0
   10bc8:	addgt	r0, r0, #1
   10bcc:	ldr	r3, [r3, #4]
   10bd0:	cmp	r3, #0
   10bd4:	bne	10bc0 <abort@plt+0x320>
   10bd8:	cmp	r0, #1
   10bdc:	ble	10d10 <abort@plt+0x470>
   10be0:	ldr	r3, [r4, #28]
   10be4:	ldr	r1, [r4, #24]
   10be8:	sub	r3, r1, r3
   10bec:	vmov	s14, r3
   10bf0:	vcvt.f64.s32	d7, s14
   10bf4:	vldr	d6, [pc, #412]	; 10d98 <abort@plt+0x4f8>
   10bf8:	vmul.f64	d7, d7, d6
   10bfc:	vmov	s13, r1
   10c00:	vcvt.f64.s32	d6, s13
   10c04:	vdiv.f64	d1, d7, d6
   10c08:	vstr	d1, [r4, #32]
   10c0c:	vldr	s15, [r4, #12]
   10c10:	vcvt.f64.s32	d2, s15
   10c14:	vmul.f64	d1, d1, d2
   10c18:	vldr	d4, [pc, #384]	; 10da0 <abort@plt+0x500>
   10c1c:	vldr	d0, [pc, #372]	; 10d98 <abort@plt+0x4f8>
   10c20:	vmov	r3, s15
   10c24:	sub	r3, r3, #1
   10c28:	vmov	s6, r3
   10c2c:	vcvt.f64.s32	d3, s6
   10c30:	ldr	r1, [r4, #24]
   10c34:	ldr	r3, [r2, #8]
   10c38:	sub	r1, r1, r3
   10c3c:	ldr	r3, [r4, #28]
   10c40:	ldr	r0, [r2, #12]
   10c44:	sub	r3, r3, r0
   10c48:	sub	r3, r1, r3
   10c4c:	vmov	s14, r3
   10c50:	vcvt.f64.s32	d7, s14
   10c54:	vmul.f64	d7, d7, d0
   10c58:	vmov	s13, r1
   10c5c:	vcvt.f64.s32	d6, s13
   10c60:	vdiv.f64	d5, d7, d6
   10c64:	vstr	d5, [r2, #16]
   10c68:	vmov.f64	d7, d1
   10c6c:	vmls.f64	d7, d3, d5
   10c70:	vstr	d7, [r2, #24]
   10c74:	vadd.f64	d4, d4, d5
   10c78:	ldr	r2, [r2, #4]
   10c7c:	cmp	r2, #0
   10c80:	bne	10c30 <abort@plt+0x390>
   10c84:	vmul.f64	d4, d3, d4
   10c88:	vdiv.f64	d7, d4, d2
   10c8c:	vsub.f64	d1, d1, d7
   10c90:	vstr	d1, [r4, #40]	; 0x28
   10c94:	ldr	r3, [r4]
   10c98:	cmp	r3, #0
   10c9c:	beq	10d1c <abort@plt+0x47c>
   10ca0:	vldr	d6, [pc, #248]	; 10da0 <abort@plt+0x500>
   10ca4:	vldr	d7, [r3, #24]
   10ca8:	vsub.f64	d7, d7, d1
   10cac:	vmla.f64	d6, d7, d7
   10cb0:	ldr	r3, [r3, #4]
   10cb4:	cmp	r3, #0
   10cb8:	bne	10ca4 <abort@plt+0x404>
   10cbc:	vdiv.f64	d7, d6, d3
   10cc0:	vdiv.f64	d0, d7, d2
   10cc4:	vsqrt.f64	d8, d0
   10cc8:	vcmp.f64	d0, #0.0
   10ccc:	vmrs	APSR_nzcv, fpscr
   10cd0:	bmi	10d24 <abort@plt+0x484>
   10cd4:	vldr	d7, [pc, #204]	; 10da8 <abort@plt+0x508>
   10cd8:	vmul.f64	d7, d8, d7
   10cdc:	vldr	d6, [r4, #40]	; 0x28
   10ce0:	vsub.f64	d6, d6, d7
   10ce4:	vldr	d5, [pc, #172]	; 10d98 <abort@plt+0x4f8>
   10ce8:	vcmpe.f64	d6, d5
   10cec:	vmrs	APSR_nzcv, fpscr
   10cf0:	bgt	10d2c <abort@plt+0x48c>
   10cf4:	vcmpe.f64	d6, #0.0
   10cf8:	vmrs	APSR_nzcv, fpscr
   10cfc:	bmi	10d68 <abort@plt+0x4c8>
   10d00:	vcmp.f64	d6, d5
   10d04:	vmrs	APSR_nzcv, fpscr
   10d08:	vmovgt.f64	d6, d5
   10d0c:	b	10d30 <abort@plt+0x490>
   10d10:	movw	r0, #9676	; 0x25cc
   10d14:	movt	r0, #1
   10d18:	bl	11cac <error@@Base>
   10d1c:	vldr	d6, [pc, #124]	; 10da0 <abort@plt+0x500>
   10d20:	b	10cbc <abort@plt+0x41c>
   10d24:	bl	10858 <sqrt@plt>
   10d28:	b	10cd4 <abort@plt+0x434>
   10d2c:	vldr	d6, [pc, #100]	; 10d98 <abort@plt+0x4f8>
   10d30:	vstr	d6, [r5]
   10d34:	vldr	d6, [r4, #40]	; 0x28
   10d38:	vadd.f64	d7, d7, d6
   10d3c:	vldr	d6, [pc, #84]	; 10d98 <abort@plt+0x4f8>
   10d40:	vcmpe.f64	d7, d6
   10d44:	vmrs	APSR_nzcv, fpscr
   10d48:	bgt	10d70 <abort@plt+0x4d0>
   10d4c:	vcmpe.f64	d7, #0.0
   10d50:	vmrs	APSR_nzcv, fpscr
   10d54:	bmi	10d8c <abort@plt+0x4ec>
   10d58:	vcmp.f64	d7, d6
   10d5c:	vmrs	APSR_nzcv, fpscr
   10d60:	vmovgt.f64	d7, d6
   10d64:	b	10d74 <abort@plt+0x4d4>
   10d68:	vldr	d6, [pc, #48]	; 10da0 <abort@plt+0x500>
   10d6c:	b	10d30 <abort@plt+0x490>
   10d70:	vldr	d7, [pc, #32]	; 10d98 <abort@plt+0x4f8>
   10d74:	vstr	d7, [r6]
   10d78:	vpop	{d8}
   10d7c:	ldrd	r4, [sp]
   10d80:	ldr	r6, [sp, #8]
   10d84:	add	sp, sp, #12
   10d88:	pop	{pc}		; (ldr pc, [sp], #4)
   10d8c:	vldr	d7, [pc, #12]	; 10da0 <abort@plt+0x500>
   10d90:	b	10d74 <abort@plt+0x4d4>
   10d94:	nop	{0}
   10d98:	andeq	r0, r0, r0
   10d9c:	subsmi	r0, r9, r0
	...
   10da8:			; <UNDEFINED> instruction: 0xf5c28f5c
   10dac:	svccc	0x00ff5c28
   10db0:	str	r4, [sp, #-8]!
   10db4:	str	lr, [sp, #4]
   10db8:	mov	r2, r0
   10dbc:	mov	r1, #99	; 0x63
   10dc0:	movw	r0, #12444	; 0x309c
   10dc4:	movt	r0, #2
   10dc8:	bl	107c8 <fgets@plt>
   10dcc:	adds	r0, r0, #0
   10dd0:	movne	r0, #1
   10dd4:	ldr	r4, [sp]
   10dd8:	add	sp, sp, #4
   10ddc:	pop	{pc}		; (ldr pc, [sp], #4)
   10de0:	str	r4, [sp, #-8]!
   10de4:	str	lr, [sp, #4]
   10de8:	mov	r4, r1
   10dec:	bl	10db0 <abort@plt+0x510>
   10df0:	cmp	r0, #0
   10df4:	moveq	r0, #0
   10df8:	bne	10e08 <abort@plt+0x568>
   10dfc:	ldr	r4, [sp]
   10e00:	add	sp, sp, #4
   10e04:	pop	{pc}		; (ldr pc, [sp], #4)
   10e08:	mov	r2, r4
   10e0c:	movw	r1, #9824	; 0x2660
   10e10:	movt	r1, #1
   10e14:	movw	r0, #12444	; 0x309c
   10e18:	movt	r0, #2
   10e1c:	bl	10864 <__isoc99_sscanf@plt>
   10e20:	cmp	r0, #1
   10e24:	movne	r0, #0
   10e28:	moveq	r0, #1
   10e2c:	b	10dfc <abort@plt+0x55c>
   10e30:	str	r4, [sp, #-8]!
   10e34:	str	lr, [sp, #4]
   10e38:	ldr	r3, [r1]
   10e3c:	cmp	r3, #0
   10e40:	bne	10e68 <abort@plt+0x5c8>
   10e44:	mov	r3, r0
   10e48:	mov	r2, #8
   10e4c:	mov	r1, #1
   10e50:	movw	r0, #9700	; 0x25e4
   10e54:	movt	r0, #1
   10e58:	bl	107f8 <fwrite@plt>
   10e5c:	ldr	r4, [sp]
   10e60:	add	sp, sp, #4
   10e64:	pop	{pc}		; (ldr pc, [sp], #4)
   10e68:	ldr	r2, [r1, #4]
   10e6c:	sub	r2, r3, r2
   10e70:	vmov	s12, r2
   10e74:	vcvt.f64.s32	d6, s12
   10e78:	vldr	d7, [pc, #32]	; 10ea0 <abort@plt+0x600>
   10e7c:	vmul.f64	d6, d6, d7
   10e80:	vmov	s15, r3
   10e84:	vcvt.f64.s32	d7, s15
   10e88:	vdiv.f64	d7, d6, d7
   10e8c:	vmov	r2, r3, d7
   10e90:	movw	r1, #9712	; 0x25f0
   10e94:	movt	r1, #1
   10e98:	bl	1084c <fprintf@plt>
   10e9c:	b	10e5c <abort@plt+0x5bc>
   10ea0:	andeq	r0, r0, r0
   10ea4:	subsmi	r0, r9, r0
   10ea8:	strd	r4, [sp, #-16]!
   10eac:	str	r6, [sp, #8]
   10eb0:	str	lr, [sp, #12]
   10eb4:	mov	r4, r0
   10eb8:	subs	r5, r1, #0
   10ebc:	beq	10f08 <abort@plt+0x668>
   10ec0:	ldr	r3, [r5, #4]
   10ec4:	ldr	r2, [r5]
   10ec8:	movw	r1, #9720	; 0x25f8
   10ecc:	movt	r1, #1
   10ed0:	bl	1084c <fprintf@plt>
   10ed4:	mov	r1, r5
   10ed8:	mov	r0, r4
   10edc:	bl	10e30 <abort@plt+0x590>
   10ee0:	mov	r3, r4
   10ee4:	mov	r2, #3
   10ee8:	mov	r1, #1
   10eec:	movw	r0, #9760	; 0x2620
   10ef0:	movt	r0, #1
   10ef4:	bl	107f8 <fwrite@plt>
   10ef8:	ldrd	r4, [sp]
   10efc:	ldr	r6, [sp, #8]
   10f00:	add	sp, sp, #12
   10f04:	pop	{pc}		; (ldr pc, [sp], #4)
   10f08:	mov	r3, r0
   10f0c:	mov	r2, #26
   10f10:	mov	r1, #1
   10f14:	movw	r0, #9732	; 0x2604
   10f18:	movt	r0, #1
   10f1c:	bl	107f8 <fwrite@plt>
   10f20:	b	10ee0 <abort@plt+0x640>
   10f24:	strd	r4, [sp, #-32]!	; 0xffffffe0
   10f28:	strd	r6, [sp, #8]
   10f2c:	strd	r8, [sp, #16]
   10f30:	str	sl, [sp, #24]
   10f34:	str	lr, [sp, #28]
   10f38:	mov	r7, r0
   10f3c:	mov	r5, r1
   10f40:	mov	r6, r2
   10f44:	ldrb	r9, [sp, #32]
   10f48:	ldrb	sl, [sp, #36]	; 0x24
   10f4c:	mov	r2, r3
   10f50:	movw	r1, #9764	; 0x2624
   10f54:	movt	r1, #1
   10f58:	bl	1084c <fprintf@plt>
   10f5c:	mov	r1, #0
   10f60:	mov	r0, r7
   10f64:	bl	10ea8 <abort@plt+0x608>
   10f68:	cmp	r9, #0
   10f6c:	bne	11054 <abort@plt+0x7b4>
   10f70:	movw	r2, #9812	; 0x2654
   10f74:	movt	r2, #1
   10f78:	movw	r1, #10120	; 0x2788
   10f7c:	movt	r1, #1
   10f80:	mov	r0, r7
   10f84:	bl	1084c <fprintf@plt>
   10f88:	cmp	r6, #0
   10f8c:	bgt	11074 <abort@plt+0x7d4>
   10f90:	b	10fd8 <abort@plt+0x738>
   10f94:	add	r4, r4, #1
   10f98:	sxth	r4, r4
   10f9c:	cmp	r4, r6
   10fa0:	bgt	10fd0 <abort@plt+0x730>
   10fa4:	add	r1, r5, r4, lsl #3
   10fa8:	ldr	r3, [r5, r4, lsl #3]
   10fac:	cmp	r3, #0
   10fb0:	ble	10f94 <abort@plt+0x6f4>
   10fb4:	mov	r0, r7
   10fb8:	bl	10ea8 <abort@plt+0x608>
   10fbc:	mov	r2, r4
   10fc0:	mov	r1, r8
   10fc4:	mov	r0, r7
   10fc8:	bl	1084c <fprintf@plt>
   10fcc:	b	10f94 <abort@plt+0x6f4>
   10fd0:	cmp	r9, #0
   10fd4:	bne	10ff8 <abort@plt+0x758>
   10fd8:	cmp	sl, #0
   10fdc:	bne	1102c <abort@plt+0x78c>
   10fe0:	ldrd	r4, [sp]
   10fe4:	ldrd	r6, [sp, #8]
   10fe8:	ldrd	r8, [sp, #16]
   10fec:	ldr	sl, [sp, #24]
   10ff0:	add	sp, sp, #28
   10ff4:	pop	{pc}		; (ldr pc, [sp], #4)
   10ff8:	add	r3, r6, #1
   10ffc:	add	r1, r5, r3, lsl #3
   11000:	ldr	r3, [r5, r3, lsl #3]
   11004:	cmp	r3, #0
   11008:	ble	10fd8 <abort@plt+0x738>
   1100c:	mov	r0, r7
   11010:	bl	10ea8 <abort@plt+0x608>
   11014:	mov	r2, r6
   11018:	movw	r1, #9784	; 0x2638
   1101c:	movt	r1, #1
   11020:	mov	r0, r7
   11024:	bl	1084c <fprintf@plt>
   11028:	b	10fd8 <abort@plt+0x738>
   1102c:	mov	r1, r5
   11030:	mov	r0, r7
   11034:	bl	10ea8 <abort@plt+0x608>
   11038:	mov	r3, r7
   1103c:	mov	r2, #7
   11040:	mov	r1, #1
   11044:	movw	r0, #9796	; 0x2644
   11048:	movt	r0, #1
   1104c:	bl	107f8 <fwrite@plt>
   11050:	b	10fe0 <abort@plt+0x740>
   11054:	movw	r2, #9804	; 0x264c
   11058:	movt	r2, #1
   1105c:	movw	r1, #10120	; 0x2788
   11060:	movt	r1, #1
   11064:	mov	r0, r7
   11068:	bl	1084c <fprintf@plt>
   1106c:	cmp	r6, #0
   11070:	ble	10ff8 <abort@plt+0x758>
   11074:	mov	r4, #1
   11078:	movw	r8, #9772	; 0x262c
   1107c:	movt	r8, #1
   11080:	b	10fa4 <abort@plt+0x704>
   11084:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11088:	strd	r6, [sp, #8]
   1108c:	str	r8, [sp, #16]
   11090:	str	lr, [sp, #20]
   11094:	mov	r6, r0
   11098:	mov	r5, r1
   1109c:	mov	r7, r2
   110a0:	mov	r0, r1
   110a4:	bl	118c4 <abort@plt+0x1024>
   110a8:	add	r4, r5, #4096	; 0x1000
   110ac:	movw	r2, #4440	; 0x1158
   110b0:	movt	r2, #1
   110b4:	ldr	r1, [r4, #3952]	; 0xf70
   110b8:	ldr	r0, [r4, #3956]	; 0xf74
   110bc:	bl	1243c <error@@Base+0x790>
   110c0:	mov	r2, r7
   110c4:	movw	r1, #9764	; 0x2624
   110c8:	movt	r1, #1
   110cc:	mov	r0, r6
   110d0:	bl	1084c <fprintf@plt>
   110d4:	mov	r1, #0
   110d8:	mov	r0, r6
   110dc:	bl	10ea8 <abort@plt+0x608>
   110e0:	mov	r1, r6
   110e4:	mov	r0, #10
   110e8:	bl	1087c <fputc@plt>
   110ec:	ldr	r3, [r4, #3956]	; 0xf74
   110f0:	cmp	r3, #0
   110f4:	ble	11144 <abort@plt+0x8a4>
   110f8:	mov	r4, #0
   110fc:	add	r5, r5, #4096	; 0x1000
   11100:	movw	r7, #10120	; 0x2788
   11104:	movt	r7, #1
   11108:	ldr	r3, [r5, #3952]	; 0xf70
   1110c:	ldr	r1, [r3, r4, lsl #2]
   11110:	add	r1, r1, #12
   11114:	mov	r0, r6
   11118:	bl	10ea8 <abort@plt+0x608>
   1111c:	ldr	r3, [r5, #3952]	; 0xf70
   11120:	ldr	r3, [r3, r4, lsl #2]
   11124:	ldr	r2, [r3, #8]
   11128:	mov	r1, r7
   1112c:	mov	r0, r6
   11130:	bl	1084c <fprintf@plt>
   11134:	add	r4, r4, #1
   11138:	ldr	r3, [r5, #3956]	; 0xf74
   1113c:	cmp	r3, r4
   11140:	bgt	11108 <abort@plt+0x868>
   11144:	ldrd	r4, [sp]
   11148:	ldrd	r6, [sp, #8]
   1114c:	ldr	r8, [sp, #16]
   11150:	add	sp, sp, #20
   11154:	pop	{pc}		; (ldr pc, [sp], #4)
   11158:	str	r4, [sp, #-8]!
   1115c:	str	lr, [sp, #4]
   11160:	ldr	r1, [r1, #8]
   11164:	ldr	r0, [r0, #8]
   11168:	bl	11ab0 <abort@plt+0x1210>
   1116c:	ldr	r4, [sp]
   11170:	add	sp, sp, #4
   11174:	pop	{pc}		; (ldr pc, [sp], #4)
   11178:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1117c:	strd	r6, [sp, #8]
   11180:	strd	r8, [sp, #16]
   11184:	str	lr, [sp, #24]
   11188:	sub	sp, sp, #12
   1118c:	mov	r5, r0
   11190:	mov	r4, r1
   11194:	bl	10db0 <abort@plt+0x510>
   11198:	cmp	r0, #0
   1119c:	moveq	r6, #0
   111a0:	beq	11258 <abort@plt+0x9b8>
   111a4:	mov	r0, r5
   111a8:	bl	10db0 <abort@plt+0x510>
   111ac:	cmp	r0, #0
   111b0:	moveq	r6, #0
   111b4:	beq	11258 <abort@plt+0x9b8>
   111b8:	mov	r6, #0
   111bc:	movw	r9, #9820	; 0x265c
   111c0:	movt	r9, #1
   111c4:	movw	r8, #12444	; 0x309c
   111c8:	movt	r8, #2
   111cc:	add	r7, r8, #29
   111d0:	b	11248 <abort@plt+0x9a8>
   111d4:	mov	r3, sp
   111d8:	add	r2, sp, #4
   111dc:	mov	r1, r9
   111e0:	mov	r0, r8
   111e4:	bl	10864 <__isoc99_sscanf@plt>
   111e8:	cmp	r0, #2
   111ec:	bne	11258 <abort@plt+0x9b8>
   111f0:	mov	r2, #10
   111f4:	mov	r1, #0
   111f8:	mov	r0, r7
   111fc:	bl	10798 <strtol@plt>
   11200:	cmp	r0, #0
   11204:	bne	11224 <abort@plt+0x984>
   11208:	movw	r1, #9796	; 0x2644
   1120c:	movt	r1, #1
   11210:	mov	r0, r7
   11214:	bl	1078c <strcmp@plt>
   11218:	cmp	r0, #0
   1121c:	ldreq	r6, [sp, #4]
   11220:	movne	r0, #11
   11224:	add	r2, r4, r0, lsl #3
   11228:	ldr	r3, [r4, r0, lsl #3]
   1122c:	ldr	r1, [sp, #4]
   11230:	add	r3, r3, r1
   11234:	str	r3, [r4, r0, lsl #3]
   11238:	ldr	r3, [r2, #4]
   1123c:	ldr	r1, [sp]
   11240:	add	r3, r3, r1
   11244:	str	r3, [r2, #4]
   11248:	mov	r0, r5
   1124c:	bl	10db0 <abort@plt+0x510>
   11250:	cmp	r0, #0
   11254:	bne	111d4 <abort@plt+0x934>
   11258:	mov	r0, r6
   1125c:	add	sp, sp, #12
   11260:	ldrd	r4, [sp]
   11264:	ldrd	r6, [sp, #8]
   11268:	ldrd	r8, [sp, #16]
   1126c:	add	sp, sp, #24
   11270:	pop	{pc}		; (ldr pc, [sp], #4)
   11274:	ldr	r3, [r0]
   11278:	add	r1, r3, r1
   1127c:	str	r1, [r0]
   11280:	ldr	r3, [r0, #4]
   11284:	add	r2, r3, r2
   11288:	str	r2, [r0, #4]
   1128c:	bx	lr
   11290:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11294:	strd	r6, [sp, #8]
   11298:	str	r8, [sp, #16]
   1129c:	str	lr, [sp, #20]
   112a0:	mov	r7, r0
   112a4:	mov	r8, r1
   112a8:	mov	r6, r2
   112ac:	mov	r5, r3
   112b0:	bl	11798 <abort@plt+0xef8>
   112b4:	subs	r4, r0, #0
   112b8:	beq	112e8 <abort@plt+0xa48>
   112bc:	ldr	r2, [r4, #12]
   112c0:	add	r2, r2, r6
   112c4:	str	r2, [r4, #12]
   112c8:	ldr	r3, [r4, #16]
   112cc:	add	r3, r3, r5
   112d0:	str	r3, [r4, #16]
   112d4:	ldrd	r4, [sp]
   112d8:	ldrd	r6, [sp, #8]
   112dc:	ldr	r8, [sp, #16]
   112e0:	add	sp, sp, #20
   112e4:	pop	{pc}		; (ldr pc, [sp], #4)
   112e8:	mov	r1, #20
   112ec:	mov	r0, #1
   112f0:	bl	11cec <error@@Base+0x40>
   112f4:	mov	r4, r0
   112f8:	mov	r0, r8
   112fc:	bl	107d4 <strdup@plt>
   11300:	str	r0, [r4, #8]
   11304:	mov	r1, r4
   11308:	mov	r0, r7
   1130c:	bl	117f4 <abort@plt+0xf54>
   11310:	b	112bc <abort@plt+0xa1c>
   11314:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11318:	strd	r6, [sp, #8]
   1131c:	str	r8, [sp, #16]
   11320:	str	lr, [sp, #20]
   11324:	sub	sp, sp, #8
   11328:	mov	r5, r0
   1132c:	mov	r6, r1
   11330:	bl	10db0 <abort@plt+0x510>
   11334:	cmp	r0, #0
   11338:	beq	113b8 <abort@plt+0xb18>
   1133c:	mov	r0, r5
   11340:	bl	10db0 <abort@plt+0x510>
   11344:	cmp	r0, #0
   11348:	beq	113b8 <abort@plt+0xb18>
   1134c:	movw	r7, #9820	; 0x265c
   11350:	movt	r7, #1
   11354:	movw	r4, #12444	; 0x309c
   11358:	movt	r4, #2
   1135c:	add	r8, r4, #29
   11360:	b	113a8 <abort@plt+0xb08>
   11364:	mov	r3, sp
   11368:	add	r2, sp, #4
   1136c:	mov	r1, r7
   11370:	mov	r0, r4
   11374:	bl	10864 <__isoc99_sscanf@plt>
   11378:	cmp	r0, #2
   1137c:	bne	113b8 <abort@plt+0xb18>
   11380:	mov	r0, r4
   11384:	bl	10840 <strlen@plt>
   11388:	add	r0, r4, r0
   1138c:	mov	r3, #0
   11390:	strb	r3, [r0, #-1]
   11394:	ldr	r3, [sp]
   11398:	ldr	r2, [sp, #4]
   1139c:	mov	r1, r8
   113a0:	mov	r0, r6
   113a4:	bl	11290 <abort@plt+0x9f0>
   113a8:	mov	r0, r5
   113ac:	bl	10db0 <abort@plt+0x510>
   113b0:	cmp	r0, #0
   113b4:	bne	11364 <abort@plt+0xac4>
   113b8:	add	sp, sp, #8
   113bc:	ldrd	r4, [sp]
   113c0:	ldrd	r6, [sp, #8]
   113c4:	ldr	r8, [sp, #16]
   113c8:	add	sp, sp, #20
   113cc:	pop	{pc}		; (ldr pc, [sp], #4)
   113d0:	strd	r4, [sp, #-20]!	; 0xffffffec
   113d4:	strd	r6, [sp, #8]
   113d8:	str	lr, [sp, #16]
   113dc:	sub	sp, sp, #12
   113e0:	mov	r5, r0
   113e4:	mov	r6, r1
   113e8:	movw	r1, #9836	; 0x266c
   113ec:	movt	r1, #1
   113f0:	mov	r0, r6
   113f4:	bl	11d94 <error@@Base+0xe8>
   113f8:	mov	r4, r0
   113fc:	bl	10db0 <abort@plt+0x510>
   11400:	cmp	r0, #0
   11404:	beq	11550 <abort@plt+0xcb0>
   11408:	mov	r2, #45	; 0x2d
   1140c:	movw	r1, #9840	; 0x2670
   11410:	movt	r1, #1
   11414:	movw	r0, #12444	; 0x309c
   11418:	movt	r0, #2
   1141c:	bl	10894 <strncmp@plt>
   11420:	cmp	r0, #0
   11424:	bne	11550 <abort@plt+0xcb0>
   11428:	mov	r0, r4
   1142c:	bl	10db0 <abort@plt+0x510>
   11430:	cmp	r0, #0
   11434:	beq	11550 <abort@plt+0xcb0>
   11438:	movw	r1, #9888	; 0x26a0
   1143c:	movt	r1, #1
   11440:	movw	r0, #12444	; 0x309c
   11444:	movt	r0, #2
   11448:	bl	1078c <strcmp@plt>
   1144c:	cmp	r0, #0
   11450:	bne	11550 <abort@plt+0xcb0>
   11454:	add	r1, sp, #4
   11458:	mov	r0, r4
   1145c:	bl	10de0 <abort@plt+0x540>
   11460:	cmp	r0, #0
   11464:	beq	11550 <abort@plt+0xcb0>
   11468:	mov	r1, sp
   1146c:	mov	r0, r4
   11470:	bl	10de0 <abort@plt+0x540>
   11474:	cmp	r0, #0
   11478:	beq	11550 <abort@plt+0xcb0>
   1147c:	mov	r0, r4
   11480:	bl	10db0 <abort@plt+0x510>
   11484:	cmp	r0, #0
   11488:	beq	11550 <abort@plt+0xcb0>
   1148c:	mov	r0, r4
   11490:	bl	10db0 <abort@plt+0x510>
   11494:	cmp	r0, #0
   11498:	beq	11550 <abort@plt+0xcb0>
   1149c:	ldr	r3, [r5]
   114a0:	ldr	r2, [sp, #4]
   114a4:	add	r3, r3, r2
   114a8:	str	r3, [r5]
   114ac:	ldr	r3, [r5, #4]
   114b0:	ldr	r2, [sp]
   114b4:	add	r3, r3, r2
   114b8:	str	r3, [r5, #4]
   114bc:	add	r1, r5, #8
   114c0:	mov	r0, r4
   114c4:	bl	11178 <abort@plt+0x8d8>
   114c8:	mov	r7, r0
   114cc:	add	r1, r5, #416	; 0x1a0
   114d0:	mov	r0, r4
   114d4:	bl	11178 <abort@plt+0x8d8>
   114d8:	mov	r6, r0
   114dc:	add	r1, r5, #824	; 0x338
   114e0:	mov	r0, r4
   114e4:	bl	11178 <abort@plt+0x8d8>
   114e8:	ldr	r3, [sp, #4]
   114ec:	cmp	r3, #0
   114f0:	bgt	11510 <abort@plt+0xc70>
   114f4:	mov	r0, r4
   114f8:	bl	11b38 <abort@plt+0x1298>
   114fc:	add	sp, sp, #12
   11500:	ldrd	r4, [sp]
   11504:	ldrd	r6, [sp, #8]
   11508:	add	sp, sp, #16
   1150c:	pop	{pc}		; (ldr pc, [sp], #4)
   11510:	add	r1, r5, #920	; 0x398
   11514:	mov	r0, r4
   11518:	bl	11178 <abort@plt+0x8d8>
   1151c:	cmp	r7, #0
   11520:	bgt	11540 <abort@plt+0xca0>
   11524:	cmp	r6, #0
   11528:	ble	114f4 <abort@plt+0xc54>
   1152c:	add	r1, r5, #9024	; 0x2340
   11530:	add	r1, r1, #24
   11534:	mov	r0, r4
   11538:	bl	11314 <abort@plt+0xa74>
   1153c:	b	114f4 <abort@plt+0xc54>
   11540:	add	r1, r5, #992	; 0x3e0
   11544:	mov	r0, r4
   11548:	bl	11314 <abort@plt+0xa74>
   1154c:	b	11524 <abort@plt+0xc84>
   11550:	movw	r1, #9828	; 0x2664
   11554:	movt	r1, #1
   11558:	cmp	r6, #0
   1155c:	movne	r1, r6
   11560:	movw	r0, #9936	; 0x26d0
   11564:	movt	r0, #1
   11568:	bl	11d50 <error@@Base+0xa4>
   1156c:	strd	r4, [sp, #-20]!	; 0xffffffec
   11570:	strd	r6, [sp, #8]
   11574:	str	lr, [sp, #16]
   11578:	sub	sp, sp, #12
   1157c:	mov	r5, r0
   11580:	mov	r0, r1
   11584:	movw	r1, #9956	; 0x26e4
   11588:	movt	r1, #1
   1158c:	bl	11d94 <error@@Base+0xe8>
   11590:	mov	r4, r0
   11594:	movw	r3, #9888	; 0x26a0
   11598:	movt	r3, #1
   1159c:	movw	r2, #9840	; 0x2670
   115a0:	movt	r2, #1
   115a4:	movw	r1, #9960	; 0x26e8
   115a8:	movt	r1, #1
   115ac:	bl	1084c <fprintf@plt>
   115b0:	ldr	r2, [r5]
   115b4:	movw	r1, #9968	; 0x26f0
   115b8:	movt	r1, #1
   115bc:	mov	r0, r4
   115c0:	bl	1084c <fprintf@plt>
   115c4:	ldr	r2, [r5, #4]
   115c8:	movw	r1, #9984	; 0x2700
   115cc:	movt	r1, #1
   115d0:	mov	r0, r4
   115d4:	bl	1084c <fprintf@plt>
   115d8:	mov	r1, r5
   115dc:	mov	r0, r4
   115e0:	bl	10e30 <abort@plt+0x590>
   115e4:	mov	r3, r4
   115e8:	mov	r2, #12
   115ec:	mov	r1, #1
   115f0:	movw	r0, #10008	; 0x2718
   115f4:	movt	r0, #1
   115f8:	bl	107f8 <fwrite@plt>
   115fc:	mov	r6, #1
   11600:	str	r6, [sp, #4]
   11604:	mov	r7, #0
   11608:	str	r7, [sp]
   1160c:	movw	r3, #10024	; 0x2728
   11610:	movt	r3, #1
   11614:	mov	r2, #50	; 0x32
   11618:	add	r1, r5, #8
   1161c:	mov	r0, r4
   11620:	bl	10f24 <abort@plt+0x684>
   11624:	str	r6, [sp, #4]
   11628:	str	r7, [sp]
   1162c:	movw	r3, #10036	; 0x2734
   11630:	movt	r3, #1
   11634:	mov	r2, #50	; 0x32
   11638:	add	r1, r5, #416	; 0x1a0
   1163c:	mov	r0, r4
   11640:	bl	10f24 <abort@plt+0x684>
   11644:	str	r6, [sp, #4]
   11648:	str	r6, [sp]
   1164c:	movw	r3, #10052	; 0x2744
   11650:	movt	r3, #1
   11654:	mov	r2, #10
   11658:	add	r1, r5, #824	; 0x338
   1165c:	mov	r0, r4
   11660:	bl	10f24 <abort@plt+0x684>
   11664:	ldr	r3, [r5]
   11668:	cmp	r3, r7
   1166c:	bgt	1168c <abort@plt+0xdec>
   11670:	mov	r0, r4
   11674:	bl	11b38 <abort@plt+0x1298>
   11678:	add	sp, sp, #12
   1167c:	ldrd	r4, [sp]
   11680:	ldrd	r6, [sp, #8]
   11684:	add	sp, sp, #16
   11688:	pop	{pc}		; (ldr pc, [sp], #4)
   1168c:	str	r7, [sp, #4]
   11690:	str	r7, [sp]
   11694:	movw	r3, #10076	; 0x275c
   11698:	movt	r3, #1
   1169c:	mov	r2, #8
   116a0:	add	r1, r5, #920	; 0x398
   116a4:	mov	r0, r4
   116a8:	bl	10f24 <abort@plt+0x684>
   116ac:	ldr	r3, [r5, #8]
   116b0:	cmp	r3, r7
   116b4:	bgt	116e0 <abort@plt+0xe40>
   116b8:	ldr	r3, [r5, #416]	; 0x1a0
   116bc:	cmp	r3, #0
   116c0:	ble	11670 <abort@plt+0xdd0>
   116c4:	movw	r2, #10036	; 0x2734
   116c8:	movt	r2, #1
   116cc:	add	r1, r5, #9024	; 0x2340
   116d0:	add	r1, r1, #24
   116d4:	mov	r0, r4
   116d8:	bl	11084 <abort@plt+0x7e4>
   116dc:	b	11670 <abort@plt+0xdd0>
   116e0:	movw	r2, #10024	; 0x2728
   116e4:	movt	r2, #1
   116e8:	add	r1, r5, #992	; 0x3e0
   116ec:	mov	r0, r4
   116f0:	bl	11084 <abort@plt+0x7e4>
   116f4:	b	116b8 <abort@plt+0xe18>
   116f8:	ldrb	r3, [r0]
   116fc:	cmp	r3, #0
   11700:	beq	11740 <abort@plt+0xea0>
   11704:	mov	r2, #0
   11708:	add	r2, r2, r3
   1170c:	ldrb	r3, [r0, #1]!
   11710:	cmp	r3, #0
   11714:	bne	11708 <abort@plt+0xe68>
   11718:	movw	r3, #20065	; 0x4e61
   1171c:	movt	r3, #33354	; 0x824a
   11720:	smull	r1, r3, r3, r2
   11724:	add	r3, r3, r2
   11728:	asr	r0, r2, #31
   1172c:	rsb	r3, r0, r3, asr #8
   11730:	movw	r0, #503	; 0x1f7
   11734:	mls	r0, r0, r3, r2
   11738:	sxth	r0, r0
   1173c:	bx	lr
   11740:	mov	r2, #0
   11744:	b	11718 <abort@plt+0xe78>
   11748:	strd	r4, [sp, #-16]!
   1174c:	str	r6, [sp, #8]
   11750:	str	lr, [sp, #12]
   11754:	mov	r6, r0
   11758:	mov	r4, r0
   1175c:	add	r5, r0, #8000	; 0x1f40
   11760:	add	r5, r5, #48	; 0x30
   11764:	mov	r0, r4
   11768:	bl	12104 <error@@Base+0x458>
   1176c:	add	r4, r4, #16
   11770:	cmp	r4, r5
   11774:	bne	11764 <abort@plt+0xec4>
   11778:	add	r6, r6, #4096	; 0x1000
   1177c:	mov	r3, #0
   11780:	str	r3, [r6, #3952]	; 0xf70
   11784:	str	r3, [r6, #3956]	; 0xf74
   11788:	ldrd	r4, [sp]
   1178c:	ldr	r6, [sp, #8]
   11790:	add	sp, sp, #12
   11794:	pop	{pc}		; (ldr pc, [sp], #4)
   11798:	strd	r4, [sp, #-16]!
   1179c:	str	r6, [sp, #8]
   117a0:	str	lr, [sp, #12]
   117a4:	mov	r4, r0
   117a8:	mov	r5, r1
   117ac:	mov	r0, r1
   117b0:	bl	116f8 <abort@plt+0xe58>
   117b4:	ldr	r4, [r4, r0, lsl #4]
   117b8:	cmp	r4, #0
   117bc:	beq	117e0 <abort@plt+0xf40>
   117c0:	ldr	r1, [r4, #8]
   117c4:	mov	r0, r5
   117c8:	bl	1078c <strcmp@plt>
   117cc:	cmp	r0, #0
   117d0:	beq	117e0 <abort@plt+0xf40>
   117d4:	ldr	r4, [r4, #4]
   117d8:	cmp	r4, #0
   117dc:	bne	117c0 <abort@plt+0xf20>
   117e0:	mov	r0, r4
   117e4:	ldrd	r4, [sp]
   117e8:	ldr	r6, [sp, #8]
   117ec:	add	sp, sp, #12
   117f0:	pop	{pc}		; (ldr pc, [sp], #4)
   117f4:	strd	r4, [sp, #-16]!
   117f8:	str	r6, [sp, #8]
   117fc:	str	lr, [sp, #12]
   11800:	mov	r4, r0
   11804:	mov	r5, r1
   11808:	ldr	r0, [r1, #8]
   1180c:	bl	116f8 <abort@plt+0xe58>
   11810:	mov	r1, r5
   11814:	add	r0, r4, r0, lsl #4
   11818:	bl	1211c <error@@Base+0x470>
   1181c:	add	r3, r4, #4096	; 0x1000
   11820:	ldr	r0, [r3, #3952]	; 0xf70
   11824:	cmp	r0, #0
   11828:	beq	1183c <abort@plt+0xf9c>
   1182c:	bl	107bc <free@plt>
   11830:	add	r3, r4, #4096	; 0x1000
   11834:	mov	r2, #0
   11838:	str	r2, [r3, #3952]	; 0xf70
   1183c:	add	r4, r4, #4096	; 0x1000
   11840:	ldr	r3, [r4, #3956]	; 0xf74
   11844:	add	r3, r3, #1
   11848:	str	r3, [r4, #3956]	; 0xf74
   1184c:	ldrd	r4, [sp]
   11850:	ldr	r6, [sp, #8]
   11854:	add	sp, sp, #12
   11858:	pop	{pc}		; (ldr pc, [sp], #4)
   1185c:	strd	r4, [sp, #-16]!
   11860:	str	r6, [sp, #8]
   11864:	str	lr, [sp, #12]
   11868:	mov	r4, r0
   1186c:	mov	r5, r1
   11870:	ldr	r0, [r1, #8]
   11874:	bl	116f8 <abort@plt+0xe58>
   11878:	mov	r1, r5
   1187c:	add	r0, r4, r0, lsl #4
   11880:	bl	121a8 <error@@Base+0x4fc>
   11884:	add	r3, r4, #4096	; 0x1000
   11888:	ldr	r0, [r3, #3952]	; 0xf70
   1188c:	cmp	r0, #0
   11890:	beq	118a4 <abort@plt+0x1004>
   11894:	bl	107bc <free@plt>
   11898:	add	r3, r4, #4096	; 0x1000
   1189c:	mov	r2, #0
   118a0:	str	r2, [r3, #3952]	; 0xf70
   118a4:	add	r4, r4, #4096	; 0x1000
   118a8:	ldr	r3, [r4, #3956]	; 0xf74
   118ac:	sub	r3, r3, #1
   118b0:	str	r3, [r4, #3956]	; 0xf74
   118b4:	ldrd	r4, [sp]
   118b8:	ldr	r6, [sp, #8]
   118bc:	add	sp, sp, #12
   118c0:	pop	{pc}		; (ldr pc, [sp], #4)
   118c4:	add	r3, r0, #4096	; 0x1000
   118c8:	ldr	r3, [r3, #3952]	; 0xf70
   118cc:	cmp	r3, #0
   118d0:	bxne	lr
   118d4:	add	r3, r0, #4096	; 0x1000
   118d8:	ldr	r3, [r3, #3956]	; 0xf74
   118dc:	cmp	r3, #0
   118e0:	bxeq	lr
   118e4:	strd	r4, [sp, #-16]!
   118e8:	str	r6, [sp, #8]
   118ec:	str	lr, [sp, #12]
   118f0:	mov	r4, r0
   118f4:	mov	r1, #4
   118f8:	mov	r0, r3
   118fc:	bl	11cec <error@@Base+0x40>
   11900:	add	r3, r4, #4096	; 0x1000
   11904:	str	r0, [r3, #3952]	; 0xf70
   11908:	mov	r1, #0
   1190c:	mov	lr, r1
   11910:	mov	ip, r3
   11914:	movw	r5, #503	; 0x1f7
   11918:	b	11928 <abort@plt+0x1088>
   1191c:	add	lr, lr, #1
   11920:	cmp	lr, r5
   11924:	beq	11958 <abort@plt+0x10b8>
   11928:	ldr	r3, [r4, lr, lsl #4]
   1192c:	cmp	r3, #0
   11930:	beq	1191c <abort@plt+0x107c>
   11934:	lsl	r2, r1, #2
   11938:	add	r1, r1, #1
   1193c:	ldr	r0, [ip, #3952]	; 0xf70
   11940:	str	r3, [r0, r2]
   11944:	ldr	r3, [r3, #4]
   11948:	add	r2, r2, #4
   1194c:	cmp	r3, #0
   11950:	bne	11938 <abort@plt+0x1098>
   11954:	b	1191c <abort@plt+0x107c>
   11958:	ldrd	r4, [sp]
   1195c:	ldr	r6, [sp, #8]
   11960:	add	sp, sp, #12
   11964:	pop	{pc}		; (ldr pc, [sp], #4)
   11968:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1196c:	strd	r6, [sp, #8]
   11970:	str	r8, [sp, #16]
   11974:	str	lr, [sp, #20]
   11978:	mov	r7, r0
   1197c:	mov	r6, r1
   11980:	mov	r4, r0
   11984:	add	r5, r0, #8000	; 0x1f40
   11988:	add	r5, r5, #48	; 0x30
   1198c:	mov	r1, r6
   11990:	mov	r0, r4
   11994:	bl	12288 <error@@Base+0x5dc>
   11998:	add	r4, r4, #16
   1199c:	cmp	r4, r5
   119a0:	bne	1198c <abort@plt+0x10ec>
   119a4:	add	r3, r7, #4096	; 0x1000
   119a8:	ldr	r0, [r3, #3952]	; 0xf70
   119ac:	cmp	r0, #0
   119b0:	beq	119c4 <abort@plt+0x1124>
   119b4:	bl	107bc <free@plt>
   119b8:	add	r3, r7, #4096	; 0x1000
   119bc:	mov	r2, #0
   119c0:	str	r2, [r3, #3952]	; 0xf70
   119c4:	add	r7, r7, #4096	; 0x1000
   119c8:	mov	r3, #0
   119cc:	str	r3, [r7, #3956]	; 0xf74
   119d0:	ldrd	r4, [sp]
   119d4:	ldrd	r6, [sp, #8]
   119d8:	ldr	r8, [sp, #16]
   119dc:	add	sp, sp, #20
   119e0:	pop	{pc}		; (ldr pc, [sp], #4)
   119e4:	strd	r4, [sp, #-12]!
   119e8:	str	lr, [sp, #8]
   119ec:	sub	sp, sp, #116	; 0x74
   119f0:	mov	r5, r0
   119f4:	movw	r3, #29716	; 0x7414
   119f8:	movt	r3, #2
   119fc:	ldr	r4, [r3]
   11a00:	bl	10828 <getpid@plt>
   11a04:	str	r5, [sp]
   11a08:	mov	r3, r0
   11a0c:	mov	r2, r4
   11a10:	movw	r1, #10084	; 0x2764
   11a14:	movt	r1, #1
   11a18:	add	r0, sp, #12
   11a1c:	bl	10888 <sprintf@plt>
   11a20:	add	r0, sp, #12
   11a24:	bl	107d4 <strdup@plt>
   11a28:	add	sp, sp, #116	; 0x74
   11a2c:	ldrd	r4, [sp]
   11a30:	add	sp, sp, #8
   11a34:	pop	{pc}		; (ldr pc, [sp], #4)
   11a38:	str	r7, [sp, #-8]!
   11a3c:	str	lr, [sp, #4]
   11a40:	mov	r6, r0
   11a44:	movw	r3, #29720	; 0x7418
   11a48:	movt	r3, #2
   11a4c:	ldr	r3, [r3]
   11a50:	cmp	r3, #0
   11a54:	beq	11a5c <abort@plt+0x11bc>
   11a58:	blx	r3
   11a5c:	movw	r3, #12544	; 0x3100
   11a60:	movt	r3, #2
   11a64:	ldrsh	r3, [r3]
   11a68:	cmp	r3, #0
   11a6c:	ble	11aa8 <abort@plt+0x1208>
   11a70:	mov	r4, #1
   11a74:	movw	r5, #12544	; 0x3100
   11a78:	movt	r5, #2
   11a7c:	mov	r0, r4
   11a80:	bl	119e4 <abort@plt+0x1144>
   11a84:	mov	r7, r0
   11a88:	bl	107e0 <unlink@plt>
   11a8c:	mov	r0, r7
   11a90:	bl	107bc <free@plt>
   11a94:	add	r4, r4, #1
   11a98:	sxth	r4, r4
   11a9c:	ldrsh	r3, [r5]
   11aa0:	cmp	r3, r4
   11aa4:	bge	11a7c <abort@plt+0x11dc>
   11aa8:	mov	r0, r6
   11aac:	bl	10834 <exit@plt>
   11ab0:	str	r4, [sp, #-8]!
   11ab4:	str	lr, [sp, #4]
   11ab8:	ldrb	r3, [r0]
   11abc:	cmp	r3, #0
   11ac0:	beq	11b14 <abort@plt+0x1274>
   11ac4:	ldrb	r2, [r1]
   11ac8:	cmp	r2, r3
   11acc:	bne	11b30 <abort@plt+0x1290>
   11ad0:	mov	ip, r1
   11ad4:	mov	r2, r0
   11ad8:	rsb	r0, r0, #1
   11adc:	add	r4, r0, r2
   11ae0:	ldrb	r3, [r2, #1]!
   11ae4:	cmp	r3, #0
   11ae8:	beq	11b18 <abort@plt+0x1278>
   11aec:	ldrb	lr, [ip, #1]!
   11af0:	cmp	lr, r3
   11af4:	beq	11adc <abort@plt+0x123c>
   11af8:	ldrb	r2, [r1, r4]
   11afc:	cmp	r2, r3
   11b00:	mvnhi	r0, #0
   11b04:	movls	r0, #1
   11b08:	ldr	r4, [sp]
   11b0c:	add	sp, sp, #4
   11b10:	pop	{pc}		; (ldr pc, [sp], #4)
   11b14:	mov	r4, #0
   11b18:	ldrb	r3, [r1, r4]
   11b1c:	cmp	r3, #0
   11b20:	moveq	r0, #0
   11b24:	beq	11b08 <abort@plt+0x1268>
   11b28:	mov	r3, #0
   11b2c:	b	11af8 <abort@plt+0x1258>
   11b30:	mov	r4, #0
   11b34:	b	11af8 <abort@plt+0x1258>
   11b38:	movw	r3, #12432	; 0x3090
   11b3c:	movt	r3, #2
   11b40:	ldr	r3, [r3]
   11b44:	cmp	r3, r0
   11b48:	bxeq	lr
   11b4c:	movw	r3, #12436	; 0x3094
   11b50:	movt	r3, #2
   11b54:	ldr	r3, [r3]
   11b58:	cmp	r3, r0
   11b5c:	bxeq	lr
   11b60:	str	r4, [sp, #-8]!
   11b64:	str	lr, [sp, #4]
   11b68:	bl	10870 <fclose@plt>
   11b6c:	ldr	r4, [sp]
   11b70:	add	sp, sp, #4
   11b74:	pop	{pc}		; (ldr pc, [sp], #4)
   11b78:	push	{lr}		; (str lr, [sp, #-4]!)
   11b7c:	sub	sp, sp, #92	; 0x5c
   11b80:	mov	r2, sp
   11b84:	mov	r1, r0
   11b88:	mov	r0, #3
   11b8c:	bl	107ec <__xstat@plt>
   11b90:	clz	r0, r0
   11b94:	lsr	r0, r0, #5
   11b98:	add	sp, sp, #92	; 0x5c
   11b9c:	pop	{pc}		; (ldr pc, [sp], #4)
   11ba0:	str	r4, [sp, #-8]!
   11ba4:	str	lr, [sp, #4]
   11ba8:	movw	r3, #12544	; 0x3100
   11bac:	movt	r3, #2
   11bb0:	ldrh	r0, [r3]
   11bb4:	add	r0, r0, #1
   11bb8:	sxth	r0, r0
   11bbc:	strh	r0, [r3]
   11bc0:	bl	119e4 <abort@plt+0x1144>
   11bc4:	mov	r4, r0
   11bc8:	bl	107e0 <unlink@plt>
   11bcc:	mov	r0, r4
   11bd0:	ldr	r4, [sp]
   11bd4:	add	sp, sp, #4
   11bd8:	pop	{pc}		; (ldr pc, [sp], #4)
   11bdc:	str	r4, [sp, #-8]!
   11be0:	str	lr, [sp, #4]
   11be4:	mov	r4, r0
   11be8:	bl	10840 <strlen@plt>
   11bec:	uxth	r0, r0
   11bf0:	sub	r2, r0, #1
   11bf4:	sxth	r2, r2
   11bf8:	cmp	r2, #0
   11bfc:	blt	11c38 <abort@plt+0x1398>
   11c00:	ldrb	r3, [r4, r2]
   11c04:	cmp	r3, #47	; 0x2f
   11c08:	beq	11c38 <abort@plt+0x1398>
   11c0c:	sub	r0, r0, #2
   11c10:	sxth	r3, r0
   11c14:	add	r1, r3, #1
   11c18:	add	r1, r4, r1
   11c1c:	sxth	r2, r3
   11c20:	cmp	r2, #0
   11c24:	blt	11c38 <abort@plt+0x1398>
   11c28:	sub	r3, r3, #1
   11c2c:	ldrb	r0, [r1, #-1]!
   11c30:	cmp	r0, #47	; 0x2f
   11c34:	bne	11c1c <abort@plt+0x137c>
   11c38:	add	r0, r2, #1
   11c3c:	add	r0, r4, r0
   11c40:	ldr	r4, [sp]
   11c44:	add	sp, sp, #4
   11c48:	pop	{pc}		; (ldr pc, [sp], #4)
   11c4c:	str	r4, [sp, #-8]!
   11c50:	str	lr, [sp, #4]
   11c54:	mov	r0, #0
   11c58:	bl	11a38 <abort@plt+0x1198>
   11c5c:	str	r4, [sp, #-8]!
   11c60:	str	lr, [sp, #4]
   11c64:	movw	r2, #29712	; 0x7410
   11c68:	movt	r2, #2
   11c6c:	ldr	r2, [r2]
   11c70:	cmp	r2, #0
   11c74:	beq	11c80 <abort@plt+0x13e0>
   11c78:	blx	r2
   11c7c:	bl	11c4c <abort@plt+0x13ac>
   11c80:	movw	r2, #29716	; 0x7414
   11c84:	movt	r2, #2
   11c88:	movw	ip, #12424	; 0x3088
   11c8c:	movt	ip, #2
   11c90:	mov	r3, r0
   11c94:	ldr	r2, [r2]
   11c98:	movw	r1, #10100	; 0x2774
   11c9c:	movt	r1, #1
   11ca0:	ldr	r0, [ip]
   11ca4:	bl	1084c <fprintf@plt>
   11ca8:	b	11c7c <abort@plt+0x13dc>

00011cac <error@@Base>:
   11cac:	str	r4, [sp, #-8]!
   11cb0:	str	lr, [sp, #4]
   11cb4:	movw	r2, #29716	; 0x7414
   11cb8:	movt	r2, #2
   11cbc:	movw	ip, #12424	; 0x3088
   11cc0:	movt	ip, #2
   11cc4:	mov	r3, r0
   11cc8:	ldr	r2, [r2]
   11ccc:	movw	r1, #10116	; 0x2784
   11cd0:	movt	r1, #1
   11cd4:	ldr	r0, [ip]
   11cd8:	bl	1084c <fprintf@plt>
   11cdc:	movw	r3, #12412	; 0x307c
   11ce0:	movt	r3, #2
   11ce4:	ldr	r0, [r3]
   11ce8:	bl	11a38 <abort@plt+0x1198>
   11cec:	str	r4, [sp, #-8]!
   11cf0:	str	lr, [sp, #4]
   11cf4:	bl	10780 <calloc@plt>
   11cf8:	cmp	r0, #0
   11cfc:	beq	11d0c <error@@Base+0x60>
   11d00:	ldr	r4, [sp]
   11d04:	add	sp, sp, #4
   11d08:	pop	{pc}		; (ldr pc, [sp], #4)
   11d0c:	movw	r0, #10124	; 0x278c
   11d10:	movt	r0, #1
   11d14:	bl	11cac <error@@Base>
   11d18:	movw	r3, #12544	; 0x3100
   11d1c:	movt	r3, #2
   11d20:	ldrb	r3, [r3, #2]
   11d24:	cmp	r3, #0
   11d28:	bxne	lr
   11d2c:	str	r4, [sp, #-8]!
   11d30:	str	lr, [sp, #4]
   11d34:	movw	r3, #12544	; 0x3100
   11d38:	movt	r3, #2
   11d3c:	mov	r2, #1
   11d40:	strb	r2, [r3, #2]
   11d44:	movw	r0, #10152	; 0x27a8
   11d48:	movt	r0, #1
   11d4c:	bl	11cac <error@@Base>
   11d50:	push	{lr}		; (str lr, [sp, #-4]!)
   11d54:	sub	sp, sp, #12
   11d58:	movw	r2, #29716	; 0x7414
   11d5c:	movt	r2, #2
   11d60:	movw	ip, #12424	; 0x3088
   11d64:	movt	ip, #2
   11d68:	str	r1, [sp]
   11d6c:	mov	r3, r0
   11d70:	ldr	r2, [r2]
   11d74:	movw	r1, #10168	; 0x27b8
   11d78:	movt	r1, #1
   11d7c:	ldr	r0, [ip]
   11d80:	bl	1084c <fprintf@plt>
   11d84:	movw	r3, #12412	; 0x307c
   11d88:	movt	r3, #2
   11d8c:	ldr	r0, [r3]
   11d90:	bl	11a38 <abort@plt+0x1198>
   11d94:	strd	r4, [sp, #-16]!
   11d98:	str	r6, [sp, #8]
   11d9c:	str	lr, [sp, #12]
   11da0:	subs	r5, r0, #0
   11da4:	beq	11dcc <error@@Base+0x120>
   11da8:	mov	r4, r1
   11dac:	mov	r0, r5
   11db0:	bl	107b0 <fopen@plt>
   11db4:	cmp	r0, #0
   11db8:	beq	11dec <error@@Base+0x140>
   11dbc:	ldrd	r4, [sp]
   11dc0:	ldr	r6, [sp, #8]
   11dc4:	add	sp, sp, #12
   11dc8:	pop	{pc}		; (ldr pc, [sp], #4)
   11dcc:	ldrb	r3, [r1]
   11dd0:	cmp	r3, #114	; 0x72
   11dd4:	movweq	r3, #12432	; 0x3090
   11dd8:	movteq	r3, #2
   11ddc:	movwne	r3, #12436	; 0x3094
   11de0:	movtne	r3, #2
   11de4:	ldr	r0, [r3]
   11de8:	b	11dbc <error@@Base+0x110>
   11dec:	ldrb	r3, [r4]
   11df0:	cmp	r3, #119	; 0x77
   11df4:	beq	11e08 <error@@Base+0x15c>
   11df8:	mov	r1, r5
   11dfc:	movw	r0, #10208	; 0x27e0
   11e00:	movt	r0, #1
   11e04:	bl	11d50 <error@@Base+0xa4>
   11e08:	mov	r1, r5
   11e0c:	movw	r0, #10184	; 0x27c8
   11e10:	movt	r0, #1
   11e14:	bl	11d50 <error@@Base+0xa4>
   11e18:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11e1c:	strd	r6, [sp, #8]
   11e20:	strd	r8, [sp, #16]
   11e24:	strd	sl, [sp, #24]
   11e28:	str	lr, [sp, #32]
   11e2c:	sub	sp, sp, #28
   11e30:	mov	r5, r0
   11e34:	str	r0, [sp, #4]
   11e38:	mov	r9, r1
   11e3c:	str	r2, [sp, #20]
   11e40:	mov	r6, r3
   11e44:	ldr	r0, [r1]
   11e48:	bl	11bdc <abort@plt+0x133c>
   11e4c:	movw	r3, #29716	; 0x7414
   11e50:	movt	r3, #2
   11e54:	str	r0, [r3]
   11e58:	movw	r4, #7448	; 0x1d18
   11e5c:	movt	r4, #1
   11e60:	mov	r1, r4
   11e64:	mov	r0, #2
   11e68:	bl	10810 <__sysv_signal@plt>
   11e6c:	mov	r1, r4
   11e70:	mov	r0, #15
   11e74:	bl	10810 <__sysv_signal@plt>
   11e78:	ldr	r7, [r5]
   11e7c:	cmp	r7, #1
   11e80:	beq	11eac <error@@Base+0x200>
   11e84:	movle	r8, #0
   11e88:	ble	11ec4 <error@@Base+0x218>
   11e8c:	mov	r8, #0
   11e90:	mov	sl, #1
   11e94:	mov	r4, sl
   11e98:	movw	r3, #10228	; 0x27f4
   11e9c:	movt	r3, #1
   11ea0:	str	r3, [sp, #12]
   11ea4:	str	r6, [sp, #16]
   11ea8:	b	11f68 <error@@Base+0x2bc>
   11eac:	movw	r3, #12412	; 0x307c
   11eb0:	movt	r3, #2
   11eb4:	ldrb	r3, [r3, #4]
   11eb8:	cmp	r3, #0
   11ebc:	moveq	r8, #0
   11ec0:	bne	11ee8 <error@@Base+0x23c>
   11ec4:	ldr	r3, [sp, #4]
   11ec8:	str	r8, [r3]
   11ecc:	add	sp, sp, #28
   11ed0:	ldrd	r4, [sp]
   11ed4:	ldrd	r6, [sp, #8]
   11ed8:	ldrd	r8, [sp, #16]
   11edc:	ldrd	sl, [sp, #24]
   11ee0:	add	sp, sp, #32
   11ee4:	pop	{pc}		; (ldr pc, [sp], #4)
   11ee8:	ldr	r0, [sp, #20]
   11eec:	bl	11c5c <abort@plt+0x13bc>
   11ef0:	ldr	r0, [sp, #20]
   11ef4:	bl	11c5c <abort@plt+0x13bc>
   11ef8:	ldr	r0, [sp, #16]
   11efc:	b	12000 <error@@Base+0x354>
   11f00:	ldr	r3, [r0, #8]
   11f04:	cmp	r3, #0
   11f08:	beq	1205c <error@@Base+0x3b0>
   11f0c:	ldrb	r2, [r5, #2]
   11f10:	cmp	r2, #0
   11f14:	bne	1205c <error@@Base+0x3b0>
   11f18:	ldrb	r2, [r3]
   11f1c:	cmp	r2, #0
   11f20:	bne	11f30 <error@@Base+0x284>
   11f24:	mov	r2, #1
   11f28:	strb	r2, [r3]
   11f2c:	b	11f4c <error@@Base+0x2a0>
   11f30:	mov	r1, r5
   11f34:	movw	r0, #10252	; 0x280c
   11f38:	movt	r0, #1
   11f3c:	bl	11d50 <error@@Base+0xa4>
   11f40:	add	r3, r8, #1
   11f44:	str	r5, [r9, r8, lsl #2]
   11f48:	sxth	r8, r3
   11f4c:	add	r4, r4, #1
   11f50:	sxth	r4, r4
   11f54:	mov	sl, r4
   11f58:	ldr	r3, [sp, #4]
   11f5c:	ldr	r7, [r3]
   11f60:	cmp	r4, r7
   11f64:	bge	11ec4 <error@@Base+0x218>
   11f68:	lsl	r3, r4, #2
   11f6c:	str	r3, [sp, #8]
   11f70:	ldr	r5, [r9, r4, lsl #2]
   11f74:	ldrb	r3, [r5]
   11f78:	cmp	r3, #45	; 0x2d
   11f7c:	bne	11f40 <error@@Base+0x294>
   11f80:	ldrb	fp, [r5, #1]
   11f84:	cmp	fp, #0
   11f88:	beq	11f40 <error@@Base+0x294>
   11f8c:	mov	r0, r5
   11f90:	bl	10840 <strlen@plt>
   11f94:	mov	r2, r0
   11f98:	mov	r1, r5
   11f9c:	ldr	r0, [sp, #12]
   11fa0:	bl	10894 <strncmp@plt>
   11fa4:	cmp	r0, #0
   11fa8:	beq	11ef0 <error@@Base+0x244>
   11fac:	add	sl, sl, #1
   11fb0:	cmp	sl, r7
   11fb4:	ldrlt	r3, [sp, #8]
   11fb8:	addlt	r3, r9, r3
   11fbc:	ldrlt	r1, [r3, #4]
   11fc0:	movge	r1, #0
   11fc4:	cmp	r6, #0
   11fc8:	beq	1205c <error@@Base+0x3b0>
   11fcc:	ldrb	r3, [r6]
   11fd0:	cmp	fp, r3
   11fd4:	cmpne	r3, #0
   11fd8:	beq	11ef8 <error@@Base+0x24c>
   11fdc:	mov	r2, #0
   11fe0:	add	r2, r2, #1
   11fe4:	sxth	r2, r2
   11fe8:	add	r3, r2, r2, lsl #1
   11fec:	add	r0, r6, r3, lsl #2
   11ff0:	ldrb	r3, [r6, r3, lsl #2]
   11ff4:	cmp	fp, r3
   11ff8:	cmpne	r3, #0
   11ffc:	bne	11fe0 <error@@Base+0x334>
   12000:	cmp	r3, #0
   12004:	beq	1205c <error@@Base+0x3b0>
   12008:	ldr	r3, [r0, #4]
   1200c:	cmp	r3, #0
   12010:	beq	11f00 <error@@Base+0x254>
   12014:	ldrb	r2, [r5, #2]
   12018:	cmp	r1, #0
   1201c:	cmpeq	r2, #0
   12020:	beq	12050 <error@@Base+0x3a4>
   12024:	ldr	r0, [r3]
   12028:	cmp	r0, #0
   1202c:	bne	11f30 <error@@Base+0x284>
   12030:	cmp	r2, #0
   12034:	addne	r1, r5, #2
   12038:	str	r1, [r3]
   1203c:	ldrb	r3, [r5, #2]
   12040:	cmp	r3, #0
   12044:	addeq	r4, r4, #1
   12048:	sxtheq	r4, r4
   1204c:	b	11f4c <error@@Base+0x2a0>
   12050:	ldr	r3, [r0, #8]
   12054:	cmp	r3, #0
   12058:	bne	11f18 <error@@Base+0x26c>
   1205c:	mov	r1, r5
   12060:	movw	r0, #10236	; 0x27fc
   12064:	movt	r0, #1
   12068:	bl	11d50 <error@@Base+0xa4>
   1206c:	push	{lr}		; (str lr, [sp, #-4]!)
   12070:	sub	sp, sp, #12
   12074:	movw	r2, #29716	; 0x7414
   12078:	movt	r2, #2
   1207c:	movw	ip, #12424	; 0x3088
   12080:	movt	ip, #2
   12084:	str	r1, [sp]
   12088:	mov	r3, r0
   1208c:	ldr	r2, [r2]
   12090:	movw	r1, #10168	; 0x27b8
   12094:	movt	r1, #1
   12098:	ldr	r0, [ip]
   1209c:	bl	1084c <fprintf@plt>
   120a0:	add	sp, sp, #12
   120a4:	pop	{pc}		; (ldr pc, [sp], #4)
   120a8:	str	r4, [sp, #-8]!
   120ac:	str	lr, [sp, #4]
   120b0:	mov	r4, r0
   120b4:	str	r1, [r2]
   120b8:	str	r3, [r2, #4]
   120bc:	cmp	r1, #0
   120c0:	strne	r2, [r1, #4]
   120c4:	streq	r2, [r0]
   120c8:	cmp	r3, #0
   120cc:	strne	r2, [r3]
   120d0:	streq	r2, [r0, #4]
   120d4:	ldr	r0, [r0, #8]
   120d8:	cmp	r0, #0
   120dc:	beq	120ec <error@@Base+0x440>
   120e0:	bl	107bc <free@plt>
   120e4:	mov	r3, #0
   120e8:	str	r3, [r4, #8]
   120ec:	ldr	r3, [r4, #12]
   120f0:	add	r3, r3, #1
   120f4:	str	r3, [r4, #12]
   120f8:	ldr	r4, [sp]
   120fc:	add	sp, sp, #4
   12100:	pop	{pc}		; (ldr pc, [sp], #4)
   12104:	mov	r3, #0
   12108:	str	r3, [r0, #4]
   1210c:	str	r3, [r0]
   12110:	str	r3, [r0, #8]
   12114:	str	r3, [r0, #12]
   12118:	bx	lr
   1211c:	str	r4, [sp, #-8]!
   12120:	str	lr, [sp, #4]
   12124:	ldr	r3, [r0]
   12128:	mov	r2, r1
   1212c:	mov	r1, #0
   12130:	bl	120a8 <error@@Base+0x3fc>
   12134:	ldr	r4, [sp]
   12138:	add	sp, sp, #4
   1213c:	pop	{pc}		; (ldr pc, [sp], #4)
   12140:	str	r4, [sp, #-8]!
   12144:	str	lr, [sp, #4]
   12148:	mov	r3, #0
   1214c:	mov	r2, r1
   12150:	ldr	r1, [r0, #4]
   12154:	bl	120a8 <error@@Base+0x3fc>
   12158:	ldr	r4, [sp]
   1215c:	add	sp, sp, #4
   12160:	pop	{pc}		; (ldr pc, [sp], #4)
   12164:	str	r4, [sp, #-8]!
   12168:	str	lr, [sp, #4]
   1216c:	mov	ip, r2
   12170:	mov	r3, r2
   12174:	mov	r2, r1
   12178:	ldr	r1, [ip]
   1217c:	bl	120a8 <error@@Base+0x3fc>
   12180:	ldr	r4, [sp]
   12184:	add	sp, sp, #4
   12188:	pop	{pc}		; (ldr pc, [sp], #4)
   1218c:	str	r4, [sp, #-8]!
   12190:	str	lr, [sp, #4]
   12194:	ldr	r3, [r1, #4]
   12198:	bl	120a8 <error@@Base+0x3fc>
   1219c:	ldr	r4, [sp]
   121a0:	add	sp, sp, #4
   121a4:	pop	{pc}		; (ldr pc, [sp], #4)
   121a8:	str	r4, [sp, #-8]!
   121ac:	str	lr, [sp, #4]
   121b0:	mov	r4, r0
   121b4:	ldr	r3, [r1]
   121b8:	cmp	r3, #0
   121bc:	ldrne	r2, [r1, #4]
   121c0:	strne	r2, [r3, #4]
   121c4:	ldreq	r3, [r1, #4]
   121c8:	streq	r3, [r0]
   121cc:	ldr	r3, [r1, #4]
   121d0:	cmp	r3, #0
   121d4:	ldrne	r2, [r1]
   121d8:	strne	r2, [r3]
   121dc:	ldreq	r3, [r1]
   121e0:	streq	r3, [r0, #4]
   121e4:	mov	r3, #0
   121e8:	str	r3, [r1, #4]
   121ec:	str	r3, [r1]
   121f0:	ldr	r0, [r0, #8]
   121f4:	cmp	r0, r3
   121f8:	beq	12208 <error@@Base+0x55c>
   121fc:	bl	107bc <free@plt>
   12200:	mov	r3, #0
   12204:	str	r3, [r4, #8]
   12208:	ldr	r3, [r4, #12]
   1220c:	sub	r3, r3, #1
   12210:	str	r3, [r4, #12]
   12214:	ldr	r4, [sp]
   12218:	add	sp, sp, #4
   1221c:	pop	{pc}		; (ldr pc, [sp], #4)
   12220:	ldr	r3, [r0, #8]
   12224:	cmp	r3, #0
   12228:	bxne	lr
   1222c:	ldr	r3, [r0, #12]
   12230:	cmp	r3, #0
   12234:	bxeq	lr
   12238:	str	r4, [sp, #-8]!
   1223c:	str	lr, [sp, #4]
   12240:	mov	r4, r0
   12244:	mov	r1, #4
   12248:	mov	r0, r3
   1224c:	bl	11cec <error@@Base+0x40>
   12250:	str	r0, [r4, #8]
   12254:	ldr	r3, [r4]
   12258:	cmp	r3, #0
   1225c:	beq	1227c <error@@Base+0x5d0>
   12260:	mov	r2, #0
   12264:	ldr	r1, [r4, #8]
   12268:	str	r3, [r1, r2]
   1226c:	ldr	r3, [r3, #4]
   12270:	add	r2, r2, #4
   12274:	cmp	r3, #0
   12278:	bne	12264 <error@@Base+0x5b8>
   1227c:	ldr	r4, [sp]
   12280:	add	sp, sp, #4
   12284:	pop	{pc}		; (ldr pc, [sp], #4)
   12288:	strd	r4, [sp, #-16]!
   1228c:	str	r6, [sp, #8]
   12290:	str	lr, [sp, #12]
   12294:	mov	r5, r0
   12298:	mov	r6, r1
   1229c:	ldr	r4, [r0]
   122a0:	cmp	r4, #0
   122a4:	beq	122c8 <error@@Base+0x61c>
   122a8:	mov	r1, r4
   122ac:	mov	r0, r5
   122b0:	bl	121a8 <error@@Base+0x4fc>
   122b4:	mov	r0, r4
   122b8:	blx	r6
   122bc:	ldr	r4, [r5]
   122c0:	cmp	r4, #0
   122c4:	bne	122a8 <error@@Base+0x5fc>
   122c8:	ldrd	r4, [sp]
   122cc:	ldr	r6, [sp, #8]
   122d0:	add	sp, sp, #12
   122d4:	pop	{pc}		; (ldr pc, [sp], #4)
   122d8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   122dc:	strd	r6, [sp, #8]
   122e0:	strd	r8, [sp, #16]
   122e4:	str	sl, [sp, #24]
   122e8:	str	lr, [sp, #28]
   122ec:	mov	r8, r0
   122f0:	mov	r9, r1
   122f4:	movw	r3, #12548	; 0x3104
   122f8:	movt	r3, #2
   122fc:	ldr	r3, [r3]
   12300:	ldr	r6, [r3, r0, lsl #2]
   12304:	cmp	r0, r1
   12308:	movge	r4, r1
   1230c:	movge	r7, r0
   12310:	bge	1237c <error@@Base+0x6d0>
   12314:	mov	r4, r1
   12318:	mov	sl, r0
   1231c:	movw	r5, #12548	; 0x3104
   12320:	movt	r5, #2
   12324:	b	123e0 <error@@Base+0x734>
   12328:	mov	r7, r4
   1232c:	cmp	sl, r7
   12330:	beq	12378 <error@@Base+0x6cc>
   12334:	ldr	r3, [r5]
   12338:	add	r4, sl, #1
   1233c:	ldr	r2, [r3, r7, lsl #2]
   12340:	str	r2, [r3, sl, lsl #2]
   12344:	cmp	r4, r7
   12348:	movge	sl, r4
   1234c:	bge	123c0 <error@@Base+0x714>
   12350:	ldr	r2, [r5]
   12354:	ldr	r3, [r5, #4]
   12358:	ldr	r1, [r2, r4, lsl #2]
   1235c:	mov	r0, r6
   12360:	blx	r3
   12364:	cmp	r0, #0
   12368:	ble	123bc <error@@Base+0x710>
   1236c:	add	r4, r4, #1
   12370:	cmp	r4, r7
   12374:	bne	12350 <error@@Base+0x6a4>
   12378:	mov	r4, r7
   1237c:	movw	r3, #12548	; 0x3104
   12380:	movt	r3, #2
   12384:	ldr	r3, [r3]
   12388:	str	r6, [r3, r4, lsl #2]
   1238c:	sub	r1, r4, #1
   12390:	cmp	r8, r1
   12394:	blt	12424 <error@@Base+0x778>
   12398:	add	r0, r7, #1
   1239c:	cmp	r9, r0
   123a0:	bgt	12430 <error@@Base+0x784>
   123a4:	ldrd	r4, [sp]
   123a8:	ldrd	r6, [sp, #8]
   123ac:	ldrd	r8, [sp, #16]
   123b0:	ldr	sl, [sp, #24]
   123b4:	add	sp, sp, #28
   123b8:	pop	{pc}		; (ldr pc, [sp], #4)
   123bc:	mov	sl, r4
   123c0:	cmp	sl, r7
   123c4:	beq	12378 <error@@Base+0x6cc>
   123c8:	ldr	r3, [r5]
   123cc:	sub	r4, r7, #1
   123d0:	ldr	r2, [r3, sl, lsl #2]
   123d4:	str	r2, [r3, r7, lsl #2]
   123d8:	cmp	r4, sl
   123dc:	ble	1241c <error@@Base+0x770>
   123e0:	cmp	sl, r4
   123e4:	movge	r7, r4
   123e8:	bge	1232c <error@@Base+0x680>
   123ec:	ldr	r2, [r5]
   123f0:	ldr	r3, [r5, #4]
   123f4:	ldr	r1, [r2, r4, lsl #2]
   123f8:	mov	r0, r6
   123fc:	blx	r3
   12400:	cmp	r0, #0
   12404:	bge	12328 <error@@Base+0x67c>
   12408:	sub	r4, r4, #1
   1240c:	cmp	r4, sl
   12410:	bne	123ec <error@@Base+0x740>
   12414:	mov	r7, sl
   12418:	b	12378 <error@@Base+0x6cc>
   1241c:	mov	r7, sl
   12420:	b	1237c <error@@Base+0x6d0>
   12424:	mov	r0, r8
   12428:	bl	122d8 <error@@Base+0x62c>
   1242c:	b	12398 <error@@Base+0x6ec>
   12430:	mov	r1, r9
   12434:	bl	122d8 <error@@Base+0x62c>
   12438:	b	123a4 <error@@Base+0x6f8>
   1243c:	cmp	r0, #1
   12440:	bxle	lr
   12444:	str	r4, [sp, #-8]!
   12448:	str	lr, [sp, #4]
   1244c:	movw	r3, #12548	; 0x3104
   12450:	movt	r3, #2
   12454:	str	r1, [r3]
   12458:	str	r2, [r3, #4]
   1245c:	sub	r1, r0, #1
   12460:	mov	r0, #0
   12464:	bl	122d8 <error@@Base+0x62c>
   12468:	ldr	r4, [sp]
   1246c:	add	sp, sp, #4
   12470:	pop	{pc}		; (ldr pc, [sp], #4)
   12474:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12478:	mov	r7, r0
   1247c:	ldr	r6, [pc, #72]	; 124cc <error@@Base+0x820>
   12480:	ldr	r5, [pc, #72]	; 124d0 <error@@Base+0x824>
   12484:	add	r6, pc, r6
   12488:	add	r5, pc, r5
   1248c:	sub	r6, r6, r5
   12490:	mov	r8, r1
   12494:	mov	r9, r2
   12498:	bl	10760 <calloc@plt-0x20>
   1249c:	asrs	r6, r6, #2
   124a0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   124a4:	mov	r4, #0
   124a8:	add	r4, r4, #1
   124ac:	ldr	r3, [r5], #4
   124b0:	mov	r2, r9
   124b4:	mov	r1, r8
   124b8:	mov	r0, r7
   124bc:	blx	r3
   124c0:	cmp	r6, r4
   124c4:	bne	124a8 <error@@Base+0x7fc>
   124c8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   124cc:	andeq	r0, r1, r8, ror sl
   124d0:	andeq	r0, r1, r0, ror sl
   124d4:	bx	lr

Disassembly of section .fini:

000124d8 <.fini>:
   124d8:	push	{r3, lr}
   124dc:	pop	{r3, pc}
