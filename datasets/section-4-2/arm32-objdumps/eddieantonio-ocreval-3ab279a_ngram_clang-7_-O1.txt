
../repos/eddieantonio-ocreval-3ab279a/ngram/ngram:     file format elf32-littlearm


Disassembly of section .init:

00010a44 <.init>:
   10a44:	push	{r3, lr}
   10a48:	bl	10c2c <getc@plt+0x48>
   10a4c:	pop	{r3, pc}

Disassembly of section .plt:

00010a50 <calloc@plt-0x14>:
   10a50:	push	{lr}		; (str lr, [sp, #-4]!)
   10a54:	ldr	lr, [pc, #4]	; 10a60 <calloc@plt-0x4>
   10a58:	add	lr, pc, lr
   10a5c:	ldr	pc, [lr, #8]!
   10a60:	andeq	r2, r1, r0, lsr #11

00010a64 <calloc@plt>:
   10a64:	add	ip, pc, #0, 12
   10a68:	add	ip, ip, #73728	; 0x12000
   10a6c:	ldr	pc, [ip, #1440]!	; 0x5a0

00010a70 <strcmp@plt>:
   10a70:	add	ip, pc, #0, 12
   10a74:	add	ip, ip, #73728	; 0x12000
   10a78:	ldr	pc, [ip, #1432]!	; 0x598

00010a7c <printf@plt>:
   10a7c:	add	ip, pc, #0, 12
   10a80:	add	ip, ip, #73728	; 0x12000
   10a84:	ldr	pc, [ip, #1424]!	; 0x590

00010a88 <fopen@plt>:
   10a88:	add	ip, pc, #0, 12
   10a8c:	add	ip, ip, #73728	; 0x12000
   10a90:	ldr	pc, [ip, #1416]!	; 0x588

00010a94 <free@plt>:
   10a94:	add	ip, pc, #0, 12
   10a98:	add	ip, ip, #73728	; 0x12000
   10a9c:	ldr	pc, [ip, #1408]!	; 0x580

00010aa0 <utf8proc_get_property@plt>:
   10aa0:	add	ip, pc, #0, 12
   10aa4:	add	ip, ip, #73728	; 0x12000
   10aa8:	ldr	pc, [ip, #1400]!	; 0x578

00010aac <fgets@plt>:
   10aac:	add	ip, pc, #0, 12
   10ab0:	add	ip, ip, #73728	; 0x12000
   10ab4:	ldr	pc, [ip, #1392]!	; 0x570

00010ab8 <utf8proc_encode_char@plt>:
   10ab8:	add	ip, pc, #0, 12
   10abc:	add	ip, ip, #73728	; 0x12000
   10ac0:	ldr	pc, [ip, #1384]!	; 0x568

00010ac4 <strdup@plt>:
   10ac4:	add	ip, pc, #0, 12
   10ac8:	add	ip, ip, #73728	; 0x12000
   10acc:	ldr	pc, [ip, #1376]!	; 0x560

00010ad0 <rewind@plt>:
   10ad0:	add	ip, pc, #0, 12
   10ad4:	add	ip, ip, #73728	; 0x12000
   10ad8:	ldr	pc, [ip, #1368]!	; 0x558

00010adc <unlink@plt>:
   10adc:	add	ip, pc, #0, 12
   10ae0:	add	ip, ip, #73728	; 0x12000
   10ae4:	ldr	pc, [ip, #1360]!	; 0x550

00010ae8 <utf8proc_tolower@plt>:
   10ae8:	add	ip, pc, #0, 12
   10aec:	add	ip, ip, #73728	; 0x12000
   10af0:	ldr	pc, [ip, #1352]!	; 0x548

00010af4 <__xstat@plt>:
   10af4:	add	ip, pc, #0, 12
   10af8:	add	ip, ip, #73728	; 0x12000
   10afc:	ldr	pc, [ip, #1344]!	; 0x540

00010b00 <fwrite@plt>:
   10b00:	add	ip, pc, #0, 12
   10b04:	add	ip, ip, #73728	; 0x12000
   10b08:	ldr	pc, [ip, #1336]!	; 0x538

00010b0c <strcat@plt>:
   10b0c:	add	ip, pc, #0, 12
   10b10:	add	ip, ip, #73728	; 0x12000
   10b14:	ldr	pc, [ip, #1328]!	; 0x530

00010b18 <fread@plt>:
   10b18:	add	ip, pc, #0, 12
   10b1c:	add	ip, ip, #73728	; 0x12000
   10b20:	ldr	pc, [ip, #1320]!	; 0x528

00010b24 <utf8proc_iterate@plt>:
   10b24:	add	ip, pc, #0, 12
   10b28:	add	ip, ip, #73728	; 0x12000
   10b2c:	ldr	pc, [ip, #1312]!	; 0x520

00010b30 <puts@plt>:
   10b30:	add	ip, pc, #0, 12
   10b34:	add	ip, ip, #73728	; 0x12000
   10b38:	ldr	pc, [ip, #1304]!	; 0x518

00010b3c <__libc_start_main@plt>:
   10b3c:	add	ip, pc, #0, 12
   10b40:	add	ip, ip, #73728	; 0x12000
   10b44:	ldr	pc, [ip, #1296]!	; 0x510

00010b48 <__sysv_signal@plt>:
   10b48:	add	ip, pc, #0, 12
   10b4c:	add	ip, ip, #73728	; 0x12000
   10b50:	ldr	pc, [ip, #1288]!	; 0x508

00010b54 <__gmon_start__@plt>:
   10b54:	add	ip, pc, #0, 12
   10b58:	add	ip, ip, #73728	; 0x12000
   10b5c:	ldr	pc, [ip, #1280]!	; 0x500

00010b60 <getpid@plt>:
   10b60:	add	ip, pc, #0, 12
   10b64:	add	ip, ip, #73728	; 0x12000
   10b68:	ldr	pc, [ip, #1272]!	; 0x4f8

00010b6c <exit@plt>:
   10b6c:	add	ip, pc, #0, 12
   10b70:	add	ip, ip, #73728	; 0x12000
   10b74:	ldr	pc, [ip, #1264]!	; 0x4f0

00010b78 <utf8proc_category@plt>:
   10b78:	add	ip, pc, #0, 12
   10b7c:	add	ip, ip, #73728	; 0x12000
   10b80:	ldr	pc, [ip, #1256]!	; 0x4e8

00010b84 <strlen@plt>:
   10b84:	add	ip, pc, #0, 12
   10b88:	add	ip, ip, #73728	; 0x12000
   10b8c:	ldr	pc, [ip, #1248]!	; 0x4e0

00010b90 <fprintf@plt>:
   10b90:	add	ip, pc, #0, 12
   10b94:	add	ip, ip, #73728	; 0x12000
   10b98:	ldr	pc, [ip, #1240]!	; 0x4d8

00010b9c <fclose@plt>:
   10b9c:	add	ip, pc, #0, 12
   10ba0:	add	ip, ip, #73728	; 0x12000
   10ba4:	ldr	pc, [ip, #1232]!	; 0x4d0

00010ba8 <sprintf@plt>:
   10ba8:	add	ip, pc, #0, 12
   10bac:	add	ip, ip, #73728	; 0x12000
   10bb0:	ldr	pc, [ip, #1224]!	; 0x4c8

00010bb4 <utf8proc_errmsg@plt>:
   10bb4:	add	ip, pc, #0, 12
   10bb8:	add	ip, ip, #73728	; 0x12000
   10bbc:	ldr	pc, [ip, #1216]!	; 0x4c0

00010bc0 <fputs@plt>:
   10bc0:	add	ip, pc, #0, 12
   10bc4:	add	ip, ip, #73728	; 0x12000
   10bc8:	ldr	pc, [ip, #1208]!	; 0x4b8

00010bcc <strncmp@plt>:
   10bcc:	add	ip, pc, #0, 12
   10bd0:	add	ip, ip, #73728	; 0x12000
   10bd4:	ldr	pc, [ip, #1200]!	; 0x4b0

00010bd8 <abort@plt>:
   10bd8:	add	ip, pc, #0, 12
   10bdc:	add	ip, ip, #73728	; 0x12000
   10be0:	ldr	pc, [ip, #1192]!	; 0x4a8

00010be4 <getc@plt>:
   10be4:	add	ip, pc, #0, 12
   10be8:	add	ip, ip, #73728	; 0x12000
   10bec:	ldr	pc, [ip, #1184]!	; 0x4a0

Disassembly of section .text:

00010bf0 <error@@Base-0xde4>:
   10bf0:	mov	fp, #0
   10bf4:	mov	lr, #0
   10bf8:	pop	{r1}		; (ldr r1, [sp], #4)
   10bfc:	mov	r2, sp
   10c00:	push	{r2}		; (str r2, [sp, #-4]!)
   10c04:	push	{r0}		; (str r0, [sp, #-4]!)
   10c08:	ldr	ip, [pc, #16]	; 10c20 <getc@plt+0x3c>
   10c0c:	push	{ip}		; (str ip, [sp, #-4]!)
   10c10:	ldr	r0, [pc, #12]	; 10c24 <getc@plt+0x40>
   10c14:	ldr	r3, [pc, #12]	; 10c28 <getc@plt+0x44>
   10c18:	bl	10b3c <__libc_start_main@plt>
   10c1c:	bl	10bd8 <abort@plt>
   10c20:	andeq	r2, r1, r0, ror #7
   10c24:	muleq	r1, r0, r0
   10c28:	andeq	r2, r1, r0, lsl #7
   10c2c:	ldr	r3, [pc, #20]	; 10c48 <getc@plt+0x64>
   10c30:	ldr	r2, [pc, #20]	; 10c4c <getc@plt+0x68>
   10c34:	add	r3, pc, r3
   10c38:	ldr	r2, [r3, r2]
   10c3c:	cmp	r2, #0
   10c40:	bxeq	lr
   10c44:	b	10b54 <__gmon_start__@plt>
   10c48:	andeq	r2, r1, r4, asr #7
   10c4c:	muleq	r0, r0, r0
   10c50:	ldr	r0, [pc, #24]	; 10c70 <getc@plt+0x8c>
   10c54:	ldr	r3, [pc, #24]	; 10c74 <getc@plt+0x90>
   10c58:	cmp	r3, r0
   10c5c:	bxeq	lr
   10c60:	ldr	r3, [pc, #16]	; 10c78 <getc@plt+0x94>
   10c64:	cmp	r3, #0
   10c68:	bxeq	lr
   10c6c:	bx	r3
   10c70:	andeq	r3, r2, r8, asr #1
   10c74:	andeq	r3, r2, r8, asr #1
   10c78:	andeq	r0, r0, r0
   10c7c:	ldr	r0, [pc, #36]	; 10ca8 <getc@plt+0xc4>
   10c80:	ldr	r1, [pc, #36]	; 10cac <getc@plt+0xc8>
   10c84:	sub	r1, r1, r0
   10c88:	asr	r1, r1, #2
   10c8c:	add	r1, r1, r1, lsr #31
   10c90:	asrs	r1, r1, #1
   10c94:	bxeq	lr
   10c98:	ldr	r3, [pc, #16]	; 10cb0 <getc@plt+0xcc>
   10c9c:	cmp	r3, #0
   10ca0:	bxeq	lr
   10ca4:	bx	r3
   10ca8:	andeq	r3, r2, r8, asr #1
   10cac:	andeq	r3, r2, r8, asr #1
   10cb0:	andeq	r0, r0, r0
   10cb4:	push	{r4, lr}
   10cb8:	ldr	r4, [pc, #24]	; 10cd8 <getc@plt+0xf4>
   10cbc:	ldrb	r3, [r4]
   10cc0:	cmp	r3, #0
   10cc4:	popne	{r4, pc}
   10cc8:	bl	10c50 <getc@plt+0x6c>
   10ccc:	mov	r3, #1
   10cd0:	strb	r3, [r4]
   10cd4:	pop	{r4, pc}
   10cd8:	ldrdeq	r3, [r2], -r8
   10cdc:	b	10c7c <getc@plt+0x98>
   10ce0:	movw	r0, #12540	; 0x30fc
   10ce4:	movt	r0, #2
   10ce8:	ldr	r1, [r0]
   10cec:	cmp	r1, #0
   10cf0:	moveq	r0, #1
   10cf4:	bxeq	lr
   10cf8:	ldrb	r0, [r1]
   10cfc:	sub	r2, r0, #49	; 0x31
   10d00:	uxtb	r2, r2
   10d04:	cmp	r2, #2
   10d08:	ldrbls	r2, [r1, #1]
   10d0c:	cmpls	r2, #0
   10d10:	subeq	r0, r0, #48	; 0x30
   10d14:	bxeq	lr
   10d18:	push	{fp, lr}
   10d1c:	mov	fp, sp
   10d20:	movw	r0, #9220	; 0x2404
   10d24:	movt	r0, #1
   10d28:	bl	11a14 <error@@Base+0x40>
   10d2c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10d30:	add	fp, sp, #24
   10d34:	mov	r8, r2
   10d38:	mov	r7, r1
   10d3c:	mov	r5, r0
   10d40:	movw	r4, #12544	; 0x3100
   10d44:	movt	r4, #2
   10d48:	mov	r0, r4
   10d4c:	mov	r1, r5
   10d50:	bl	1141c <getc@plt+0x838>
   10d54:	mov	r6, r0
   10d58:	cmp	r0, #0
   10d5c:	bne	10dc0 <getc@plt+0x1dc>
   10d60:	mov	r0, #1
   10d64:	mov	r1, #32
   10d68:	bl	11634 <getc@plt+0xa50>
   10d6c:	mov	r6, r0
   10d70:	mov	r0, r5
   10d74:	bl	10ac4 <strdup@plt>
   10d78:	str	r0, [r6, #8]
   10d7c:	movw	r1, #12536	; 0x30f8
   10d80:	movt	r1, #2
   10d84:	ldrsh	r0, [r1]
   10d88:	cmp	r0, #1
   10d8c:	blt	10db0 <getc@plt+0x1cc>
   10d90:	add	r0, r6, #12
   10d94:	ldrsh	r1, [r1]
   10d98:	mov	r2, #0
   10d9c:	ldr	r3, [r7, r2, lsl #2]
   10da0:	str	r3, [r0, r2, lsl #2]
   10da4:	add	r2, r2, #1
   10da8:	cmp	r2, r1
   10dac:	blt	10d9c <getc@plt+0x1b8>
   10db0:	movw	r0, #12544	; 0x3100
   10db4:	movt	r0, #2
   10db8:	mov	r1, r6
   10dbc:	bl	114c4 <getc@plt+0x8e0>
   10dc0:	ldr	r0, [r6, #24]
   10dc4:	add	r0, r0, #1
   10dc8:	str	r0, [r6, #24]
   10dcc:	movw	r0, #8056	; 0x1f78
   10dd0:	mov	r1, r4
   10dd4:	ldr	r0, [r1, r0]!
   10dd8:	add	r0, r0, #1
   10ddc:	str	r0, [r1]
   10de0:	tst	r8, #255	; 0xff
   10de4:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   10de8:	ldr	r0, [r6, #28]
   10dec:	add	r0, r0, #1
   10df0:	str	r0, [r6, #28]
   10df4:	movw	r0, #8060	; 0x1f7c
   10df8:	ldr	r0, [r4, r0]!
   10dfc:	add	r0, r0, #1
   10e00:	str	r0, [r4]
   10e04:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   10e08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10e0c:	add	fp, sp, #28
   10e10:	sub	sp, sp, #52	; 0x34
   10e14:	mov	r4, r0
   10e18:	movw	r5, #12520	; 0x30e8
   10e1c:	movt	r5, #2
   10e20:	movw	r1, #2708	; 0xa94
   10e24:	movt	r1, #1
   10e28:	mov	r0, r5
   10e2c:	bl	11270 <getc@plt+0x68c>
   10e30:	movw	r2, #12468	; 0x30b4
   10e34:	movt	r2, #2
   10e38:	mov	r0, r5
   10e3c:	mov	r1, r4
   10e40:	bl	11cc0 <error@@Base+0x2ec>
   10e44:	ldr	r8, [r5]
   10e48:	cmp	r8, #0
   10e4c:	beq	10f00 <getc@plt+0x31c>
   10e50:	add	r4, sp, #16
   10e54:	add	r5, sp, #25
   10e58:	add	r6, sp, #4
   10e5c:	mov	r0, #0
   10e60:	strb	r0, [sp, #25]
   10e64:	movw	r0, #12536	; 0x30f8
   10e68:	movt	r0, #2
   10e6c:	ldrsh	r0, [r0]
   10e70:	cmp	r0, #1
   10e74:	mov	r9, #0
   10e78:	blt	10ee4 <getc@plt+0x300>
   10e7c:	mov	sl, #0
   10e80:	mov	r9, #0
   10e84:	mov	r7, r8
   10e88:	cmp	r7, #0
   10e8c:	beq	10f00 <getc@plt+0x31c>
   10e90:	ldr	r1, [r7, #12]
   10e94:	mov	r0, #0
   10e98:	mov	r2, r4
   10e9c:	mov	r3, #1
   10ea0:	bl	12084 <error@@Base+0x6b0>
   10ea4:	mov	r0, r5
   10ea8:	mov	r1, r4
   10eac:	bl	10b0c <strcat@plt>
   10eb0:	ldr	r0, [r7, #12]
   10eb4:	str	r0, [r6, sl, lsl #2]
   10eb8:	ldrb	r0, [r7, #8]
   10ebc:	cmp	r0, #0
   10ec0:	mov	r0, #1
   10ec4:	movne	r9, r0
   10ec8:	add	sl, sl, #1
   10ecc:	ldr	r7, [r7, #4]
   10ed0:	movw	r0, #12536	; 0x30f8
   10ed4:	movt	r0, #2
   10ed8:	ldrsh	r0, [r0]
   10edc:	cmp	sl, r0
   10ee0:	blt	10e88 <getc@plt+0x2a4>
   10ee4:	uxtb	r2, r9
   10ee8:	mov	r0, r5
   10eec:	mov	r1, r6
   10ef0:	bl	10d2c <getc@plt+0x148>
   10ef4:	ldr	r8, [r8, #4]
   10ef8:	cmp	r8, #0
   10efc:	bne	10e5c <getc@plt+0x278>
   10f00:	sub	sp, fp, #28
   10f04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10f08:	push	{fp, lr}
   10f0c:	mov	fp, sp
   10f10:	movw	r2, #12536	; 0x30f8
   10f14:	movt	r2, #2
   10f18:	ldrsh	r3, [r2]
   10f1c:	cmp	r3, #1
   10f20:	movlt	r0, #0
   10f24:	poplt	{fp, pc}
   10f28:	add	r0, r0, #12
   10f2c:	add	r1, r1, #12
   10f30:	ldrsh	ip, [r2]
   10f34:	mov	r3, #0
   10f38:	b	10f58 <getc@plt+0x374>
   10f3c:	add	r3, r3, #1
   10f40:	sxth	r3, r3
   10f44:	add	r0, r0, #4
   10f48:	add	r1, r1, #4
   10f4c:	cmp	r3, ip
   10f50:	movge	r0, #0
   10f54:	popge	{fp, pc}
   10f58:	ldr	lr, [r1]
   10f5c:	ldr	r2, [r0]
   10f60:	cmp	r2, lr
   10f64:	beq	10f3c <getc@plt+0x358>
   10f68:	ldr	r1, [r1]
   10f6c:	ldr	r2, [r0]
   10f70:	mov	r0, #1
   10f74:	cmp	r2, r1
   10f78:	mvncc	r0, #0
   10f7c:	pop	{fp, pc}
   10f80:	ldr	r2, [r1, #24]
   10f84:	ldr	r3, [r0, #24]
   10f88:	cmp	r2, r3
   10f8c:	bne	10fa4 <getc@plt+0x3c0>
   10f90:	ldr	r2, [r1, #28]
   10f94:	ldr	r3, [r0, #28]
   10f98:	cmp	r2, r3
   10f9c:	bne	10fa4 <getc@plt+0x3c0>
   10fa0:	b	10f08 <getc@plt+0x324>
   10fa4:	sub	r0, r2, r3
   10fa8:	bx	lr
   10fac:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10fb0:	add	fp, sp, #24
   10fb4:	movw	r0, #9344	; 0x2480
   10fb8:	movt	r0, #1
   10fbc:	bl	10b30 <puts@plt>
   10fc0:	movw	r8, #8052	; 0x1f74
   10fc4:	movw	r5, #12544	; 0x3100
   10fc8:	movt	r5, #2
   10fcc:	ldr	r0, [r5, r8]
   10fd0:	cmp	r0, #1
   10fd4:	blt	11014 <getc@plt+0x430>
   10fd8:	mov	r7, #0
   10fdc:	movw	r6, #8048	; 0x1f70
   10fe0:	movw	r4, #9234	; 0x2412
   10fe4:	movt	r4, #1
   10fe8:	ldr	r0, [r5, r6]
   10fec:	ldr	r0, [r0, r7, lsl #2]
   10ff0:	ldr	r3, [r0, #8]
   10ff4:	ldr	r1, [r0, #24]
   10ff8:	ldr	r2, [r0, #28]
   10ffc:	mov	r0, r4
   11000:	bl	10a7c <printf@plt>
   11004:	ldr	r0, [r5, r8]
   11008:	add	r7, r7, #1
   1100c:	cmp	r7, r0
   11010:	blt	10fe8 <getc@plt+0x404>
   11014:	movw	r0, #8060	; 0x1f7c
   11018:	ldr	r2, [r5, r0]
   1101c:	movw	r0, #8056	; 0x1f78
   11020:	ldr	r1, [r5, r0]
   11024:	movw	r0, #9252	; 0x2424
   11028:	movt	r0, #1
   1102c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   11030:	b	10a7c <printf@plt>
   11034:	push	{r4, sl, fp, lr}
   11038:	add	fp, sp, #8
   1103c:	movw	r4, #12544	; 0x3100
   11040:	movt	r4, #2
   11044:	mov	r0, r4
   11048:	bl	11570 <getc@plt+0x98c>
   1104c:	movw	r0, #8052	; 0x1f74
   11050:	ldr	r0, [r4, r0]!
   11054:	ldr	r1, [r4, #-4]
   11058:	movw	r2, #3848	; 0xf08
   1105c:	movt	r2, #1
   11060:	bl	112b0 <getc@plt+0x6cc>
   11064:	bl	10fac <getc@plt+0x3c8>
   11068:	movw	r0, #9463	; 0x24f7
   1106c:	movt	r0, #1
   11070:	bl	10b30 <puts@plt>
   11074:	ldr	r1, [r4, #-4]
   11078:	ldr	r0, [r4]
   1107c:	movw	r2, #3968	; 0xf80
   11080:	movt	r2, #1
   11084:	bl	112b0 <getc@plt+0x6cc>
   11088:	pop	{r4, sl, fp, lr}
   1108c:	b	10fac <getc@plt+0x3c8>
   11090:	push	{fp, lr}
   11094:	mov	fp, sp
   11098:	sub	sp, sp, #8
   1109c:	mov	r4, r1
   110a0:	str	r0, [sp, #4]
   110a4:	add	r0, sp, #4
   110a8:	movw	r2, #9271	; 0x2437
   110ac:	movt	r2, #1
   110b0:	movw	r3, #12444	; 0x309c
   110b4:	movt	r3, #2
   110b8:	bl	11854 <getc@plt+0xc70>
   110bc:	ldr	r0, [sp, #4]
   110c0:	cmp	r0, #0
   110c4:	beq	11108 <getc@plt+0x524>
   110c8:	bl	10ce0 <getc@plt+0xfc>
   110cc:	movw	r1, #12536	; 0x30f8
   110d0:	movt	r1, #2
   110d4:	strh	r0, [r1]
   110d8:	ldr	r0, [sp, #4]
   110dc:	cmp	r0, #1
   110e0:	blt	11100 <getc@plt+0x51c>
   110e4:	mov	r5, #0
   110e8:	ldr	r0, [r4, r5, lsl #2]
   110ec:	bl	10e08 <getc@plt+0x224>
   110f0:	add	r5, r5, #1
   110f4:	ldr	r0, [sp, #4]
   110f8:	cmp	r5, r0
   110fc:	blt	110e8 <getc@plt+0x504>
   11100:	bl	11034 <getc@plt+0x450>
   11104:	bl	11994 <getc@plt+0xdb0>
   11108:	movw	r0, #9318	; 0x2466
   1110c:	movt	r0, #1
   11110:	bl	119d4 <error@@Base>
   11114:	vmov.i32	q8, #0	; 0x00000000
   11118:	vst1.32	{d16-d17}, [r0]
   1111c:	bx	lr
   11120:	mov	r2, r1
   11124:	ldr	r3, [r0]
   11128:	mov	r1, #0
   1112c:	b	11130 <getc@plt+0x54c>
   11130:	push	{r4, sl, fp, lr}
   11134:	add	fp, sp, #8
   11138:	mov	r4, r0
   1113c:	stm	r2, {r1, r3}
   11140:	cmp	r1, #0
   11144:	addne	r0, r1, #4
   11148:	str	r2, [r0]
   1114c:	cmp	r3, #0
   11150:	addeq	r3, r4, #4
   11154:	str	r2, [r3]
   11158:	mov	r0, r4
   1115c:	bl	111ec <getc@plt+0x608>
   11160:	ldr	r0, [r4, #12]
   11164:	add	r0, r0, #1
   11168:	str	r0, [r4, #12]
   1116c:	pop	{r4, sl, fp, pc}
   11170:	mov	r2, r1
   11174:	ldr	r1, [r0, #4]
   11178:	mov	r3, #0
   1117c:	b	11130 <getc@plt+0x54c>
   11180:	mov	r3, r2
   11184:	mov	r2, r1
   11188:	ldr	r1, [r3]
   1118c:	b	11130 <getc@plt+0x54c>
   11190:	ldr	r3, [r1, #4]
   11194:	b	11130 <getc@plt+0x54c>
   11198:	push	{r4, sl, fp, lr}
   1119c:	add	fp, sp, #8
   111a0:	mov	r4, r0
   111a4:	ldm	r1, {r0, r2}
   111a8:	cmp	r0, #0
   111ac:	mov	r3, r4
   111b0:	addne	r3, r0, #4
   111b4:	str	r2, [r3]
   111b8:	ldm	r1, {r0, r2}
   111bc:	cmp	r2, #0
   111c0:	addeq	r2, r4, #4
   111c4:	str	r0, [r2]
   111c8:	mov	r0, #0
   111cc:	str	r0, [r1]
   111d0:	str	r0, [r1, #4]
   111d4:	mov	r0, r4
   111d8:	bl	111ec <getc@plt+0x608>
   111dc:	ldr	r0, [r4, #12]
   111e0:	sub	r0, r0, #1
   111e4:	str	r0, [r4, #12]
   111e8:	pop	{r4, sl, fp, pc}
   111ec:	push	{r4, sl, fp, lr}
   111f0:	add	fp, sp, #8
   111f4:	mov	r4, r0
   111f8:	ldr	r0, [r0, #8]
   111fc:	cmp	r0, #0
   11200:	popeq	{r4, sl, fp, pc}
   11204:	bl	10a94 <free@plt>
   11208:	mov	r0, #0
   1120c:	str	r0, [r4, #8]
   11210:	pop	{r4, sl, fp, pc}
   11214:	push	{r4, sl, fp, lr}
   11218:	add	fp, sp, #8
   1121c:	mov	r4, r0
   11220:	ldr	r0, [r0, #8]
   11224:	cmp	r0, #0
   11228:	bne	1126c <getc@plt+0x688>
   1122c:	ldr	r0, [r4, #12]
   11230:	cmp	r0, #0
   11234:	beq	1126c <getc@plt+0x688>
   11238:	mov	r1, #4
   1123c:	bl	11634 <getc@plt+0xa50>
   11240:	str	r0, [r4, #8]
   11244:	ldr	r0, [r4]
   11248:	cmp	r0, #0
   1124c:	popeq	{r4, sl, fp, pc}
   11250:	mov	r1, #0
   11254:	ldr	r2, [r4, #8]
   11258:	str	r0, [r2, r1]
   1125c:	add	r1, r1, #4
   11260:	ldr	r0, [r0, #4]
   11264:	cmp	r0, #0
   11268:	bne	11254 <getc@plt+0x670>
   1126c:	pop	{r4, sl, fp, pc}
   11270:	push	{r4, r5, r6, sl, fp, lr}
   11274:	add	fp, sp, #16
   11278:	ldr	r6, [r0]
   1127c:	cmp	r6, #0
   11280:	popeq	{r4, r5, r6, sl, fp, pc}
   11284:	mov	r4, r1
   11288:	mov	r5, r0
   1128c:	mov	r0, r5
   11290:	mov	r1, r6
   11294:	bl	11198 <getc@plt+0x5b4>
   11298:	mov	r0, r6
   1129c:	blx	r4
   112a0:	ldr	r6, [r5]
   112a4:	cmp	r6, #0
   112a8:	bne	1128c <getc@plt+0x6a8>
   112ac:	pop	{r4, r5, r6, sl, fp, pc}
   112b0:	cmp	r0, #2
   112b4:	bxlt	lr
   112b8:	movw	r3, #12512	; 0x30e0
   112bc:	movt	r3, #2
   112c0:	str	r2, [r3]
   112c4:	movw	r2, #12508	; 0x30dc
   112c8:	movt	r2, #2
   112cc:	str	r1, [r2]
   112d0:	sub	r1, r0, #1
   112d4:	mov	r0, #0
   112d8:	b	112dc <getc@plt+0x6f8>
   112dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   112e0:	add	fp, sp, #28
   112e4:	sub	sp, sp, #4
   112e8:	mov	r8, r1
   112ec:	mov	r9, r0
   112f0:	movw	r7, #12508	; 0x30dc
   112f4:	movt	r7, #2
   112f8:	movw	sl, #12512	; 0x30e0
   112fc:	movt	sl, #2
   11300:	b	1132c <getc@plt+0x748>
   11304:	ldr	r0, [r7]
   11308:	str	r6, [r0, r4, lsl #2]
   1130c:	sub	r1, r4, #1
   11310:	cmp	r1, r9
   11314:	movgt	r0, r9
   11318:	blgt	112dc <getc@plt+0x6f8>
   1131c:	add	r9, r5, #1
   11320:	cmp	r9, r8
   11324:	subge	sp, fp, #28
   11328:	popge	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1132c:	ldr	r0, [r7]
   11330:	ldr	r6, [r0, r9, lsl #2]
   11334:	cmp	r9, r8
   11338:	mov	r4, r8
   1133c:	mov	r5, r9
   11340:	bge	11304 <getc@plt+0x720>
   11344:	mov	r5, r9
   11348:	mov	r4, r8
   1134c:	cmp	r5, r4
   11350:	blt	11364 <getc@plt+0x780>
   11354:	b	11380 <getc@plt+0x79c>
   11358:	sub	r4, r4, #1
   1135c:	cmp	r5, r4
   11360:	bge	11380 <getc@plt+0x79c>
   11364:	ldr	r0, [r7]
   11368:	ldr	r1, [r0, r4, lsl #2]
   1136c:	ldr	r2, [sl]
   11370:	mov	r0, r6
   11374:	blx	r2
   11378:	cmn	r0, #1
   1137c:	ble	11358 <getc@plt+0x774>
   11380:	cmp	r5, r4
   11384:	beq	11398 <getc@plt+0x7b4>
   11388:	ldr	r0, [r7]
   1138c:	ldr	r1, [r0, r4, lsl #2]
   11390:	str	r1, [r0, r5, lsl #2]
   11394:	add	r5, r5, #1
   11398:	cmp	r5, r4
   1139c:	bge	113bc <getc@plt+0x7d8>
   113a0:	ldr	r0, [r7]
   113a4:	ldr	r1, [r0, r5, lsl #2]
   113a8:	ldr	r2, [sl]
   113ac:	mov	r0, r6
   113b0:	blx	r2
   113b4:	cmp	r0, #1
   113b8:	bge	11394 <getc@plt+0x7b0>
   113bc:	cmp	r5, r4
   113c0:	ldrne	r0, [r7]
   113c4:	ldrne	r1, [r0, r5, lsl #2]
   113c8:	strne	r1, [r0, r4, lsl #2]
   113cc:	subne	r4, r4, #1
   113d0:	cmp	r5, r4
   113d4:	blt	1135c <getc@plt+0x778>
   113d8:	b	11304 <getc@plt+0x720>
   113dc:	push	{r4, r5, r6, sl, fp, lr}
   113e0:	add	fp, sp, #16
   113e4:	mov	r4, r0
   113e8:	movw	r6, #503	; 0x1f7
   113ec:	mov	r5, r0
   113f0:	mov	r0, r5
   113f4:	bl	11114 <getc@plt+0x530>
   113f8:	subs	r6, r6, #1
   113fc:	add	r5, r5, #16
   11400:	bne	113f0 <getc@plt+0x80c>
   11404:	movw	r0, #8052	; 0x1f74
   11408:	mov	r1, #0
   1140c:	str	r1, [r4, r0]
   11410:	movw	r0, #8048	; 0x1f70
   11414:	str	r1, [r4, r0]
   11418:	pop	{r4, r5, r6, sl, fp, pc}
   1141c:	push	{r4, r5, r6, sl, fp, lr}
   11420:	add	fp, sp, #16
   11424:	mov	r5, r1
   11428:	mov	r4, r0
   1142c:	mov	r0, r1
   11430:	bl	11478 <getc@plt+0x894>
   11434:	ldr	r6, [r4, r0, lsl #4]
   11438:	mov	r4, #0
   1143c:	cmp	r6, #0
   11440:	bne	11458 <getc@plt+0x874>
   11444:	mov	r0, r4
   11448:	pop	{r4, r5, r6, sl, fp, pc}
   1144c:	ldr	r6, [r6, #4]
   11450:	cmp	r6, #0
   11454:	beq	11444 <getc@plt+0x860>
   11458:	ldr	r1, [r6, #8]
   1145c:	mov	r0, r5
   11460:	bl	10a70 <strcmp@plt>
   11464:	cmp	r0, #0
   11468:	bne	1144c <getc@plt+0x868>
   1146c:	mov	r4, r6
   11470:	mov	r0, r4
   11474:	pop	{r4, r5, r6, sl, fp, pc}
   11478:	ldrb	r1, [r0]
   1147c:	cmp	r1, #0
   11480:	moveq	r0, #0
   11484:	sxtheq	r0, r0
   11488:	bxeq	lr
   1148c:	add	r2, r0, #1
   11490:	mov	r0, #0
   11494:	uxtab	r0, r0, r1
   11498:	ldrb	r1, [r2], #1
   1149c:	cmp	r1, #0
   114a0:	bne	11494 <getc@plt+0x8b0>
   114a4:	movw	r1, #20065	; 0x4e61
   114a8:	movt	r1, #33354	; 0x824a
   114ac:	umull	r1, r2, r0, r1
   114b0:	lsr	r1, r2, #8
   114b4:	movw	r2, #503	; 0x1f7
   114b8:	mls	r0, r1, r2, r0
   114bc:	sxth	r0, r0
   114c0:	bx	lr
   114c4:	push	{r4, r5, fp, lr}
   114c8:	add	fp, sp, #8
   114cc:	mov	r4, r1
   114d0:	mov	r5, r0
   114d4:	ldr	r0, [r1, #8]
   114d8:	bl	11478 <getc@plt+0x894>
   114dc:	add	r0, r5, r0, lsl #4
   114e0:	mov	r1, r4
   114e4:	bl	11120 <getc@plt+0x53c>
   114e8:	mov	r0, r5
   114ec:	bl	11504 <getc@plt+0x920>
   114f0:	movw	r0, #8052	; 0x1f74
   114f4:	ldr	r0, [r5, r0]!
   114f8:	add	r0, r0, #1
   114fc:	str	r0, [r5]
   11500:	pop	{r4, r5, fp, pc}
   11504:	push	{r4, sl, fp, lr}
   11508:	add	fp, sp, #8
   1150c:	mov	r4, r0
   11510:	movw	r0, #8048	; 0x1f70
   11514:	ldr	r0, [r4, r0]!
   11518:	cmp	r0, #0
   1151c:	popeq	{r4, sl, fp, pc}
   11520:	bl	10a94 <free@plt>
   11524:	mov	r0, #0
   11528:	str	r0, [r4]
   1152c:	pop	{r4, sl, fp, pc}
   11530:	push	{r4, r5, fp, lr}
   11534:	add	fp, sp, #8
   11538:	mov	r4, r1
   1153c:	mov	r5, r0
   11540:	ldr	r0, [r1, #8]
   11544:	bl	11478 <getc@plt+0x894>
   11548:	add	r0, r5, r0, lsl #4
   1154c:	mov	r1, r4
   11550:	bl	11198 <getc@plt+0x5b4>
   11554:	mov	r0, r5
   11558:	bl	11504 <getc@plt+0x920>
   1155c:	movw	r0, #8052	; 0x1f74
   11560:	ldr	r0, [r5, r0]!
   11564:	sub	r0, r0, #1
   11568:	str	r0, [r5]
   1156c:	pop	{r4, r5, fp, pc}
   11570:	push	{r4, r5, fp, lr}
   11574:	add	fp, sp, #8
   11578:	mov	r4, r0
   1157c:	movw	r0, #8048	; 0x1f70
   11580:	mov	r5, r4
   11584:	ldr	r0, [r5, r0]!
   11588:	cmp	r0, #0
   1158c:	bne	115e8 <getc@plt+0xa04>
   11590:	movw	r0, #8052	; 0x1f74
   11594:	ldr	r0, [r4, r0]
   11598:	cmp	r0, #0
   1159c:	popeq	{r4, r5, fp, pc}
   115a0:	mov	r1, #4
   115a4:	bl	11634 <getc@plt+0xa50>
   115a8:	str	r0, [r5]
   115ac:	mov	r0, #0
   115b0:	movw	ip, #503	; 0x1f7
   115b4:	mov	r2, #0
   115b8:	ldr	r3, [r4, r2, lsl #4]
   115bc:	cmp	r3, #0
   115c0:	beq	115dc <getc@plt+0x9f8>
   115c4:	ldr	r1, [r5]
   115c8:	str	r3, [r1, r0, lsl #2]
   115cc:	add	r0, r0, #1
   115d0:	ldr	r3, [r3, #4]
   115d4:	cmp	r3, #0
   115d8:	bne	115c4 <getc@plt+0x9e0>
   115dc:	add	r2, r2, #1
   115e0:	cmp	r2, ip
   115e4:	bne	115b8 <getc@plt+0x9d4>
   115e8:	pop	{r4, r5, fp, pc}
   115ec:	push	{r4, r5, r6, r7, fp, lr}
   115f0:	add	fp, sp, #16
   115f4:	mov	r5, r1
   115f8:	mov	r4, r0
   115fc:	mov	r6, #0
   11600:	movw	r7, #8048	; 0x1f70
   11604:	add	r0, r4, r6
   11608:	mov	r1, r5
   1160c:	bl	11270 <getc@plt+0x68c>
   11610:	add	r6, r6, #16
   11614:	cmp	r6, r7
   11618:	bne	11604 <getc@plt+0xa20>
   1161c:	mov	r0, r4
   11620:	bl	11504 <getc@plt+0x920>
   11624:	movw	r0, #8052	; 0x1f74
   11628:	mov	r1, #0
   1162c:	str	r1, [r4, r0]
   11630:	pop	{r4, r5, r6, r7, fp, pc}
   11634:	push	{fp, lr}
   11638:	mov	fp, sp
   1163c:	bl	10a64 <calloc@plt>
   11640:	cmp	r0, #0
   11644:	popne	{fp, pc}
   11648:	movw	r0, #9376	; 0x24a0
   1164c:	movt	r0, #1
   11650:	bl	119d4 <error@@Base>
   11654:	push	{r4, r5, r6, sl, fp, lr}
   11658:	add	fp, sp, #16
   1165c:	mov	r2, r0
   11660:	ldrb	ip, [r1]
   11664:	ldrb	r3, [r0]
   11668:	mov	r0, #0
   1166c:	cmp	r3, #0
   11670:	beq	116a8 <getc@plt+0xac4>
   11674:	add	lr, r1, #1
   11678:	add	r6, r2, #1
   1167c:	mov	r2, #0
   11680:	uxtb	r4, ip
   11684:	uxtb	r5, r3
   11688:	cmp	r5, r4
   1168c:	bne	116b8 <getc@plt+0xad4>
   11690:	ldrb	ip, [lr, r2]
   11694:	ldrb	r3, [r6, r2]
   11698:	add	r2, r2, #1
   1169c:	cmp	r3, #0
   116a0:	bne	11680 <getc@plt+0xa9c>
   116a4:	b	116ac <getc@plt+0xac8>
   116a8:	mov	r2, #0
   116ac:	cmp	ip, #0
   116b0:	popeq	{r4, r5, r6, sl, fp, pc}
   116b4:	mov	r3, #0
   116b8:	ldrb	r1, [r1, r2]
   116bc:	uxtb	r2, r3
   116c0:	mov	r0, #1
   116c4:	cmp	r2, r1
   116c8:	mvncc	r0, #0
   116cc:	pop	{r4, r5, r6, sl, fp, pc}
   116d0:	push	{r4, r5, fp, lr}
   116d4:	add	fp, sp, #8
   116d8:	mov	r5, r1
   116dc:	cmp	r0, #0
   116e0:	beq	11714 <getc@plt+0xb30>
   116e4:	mov	r4, r0
   116e8:	mov	r1, r5
   116ec:	bl	10a88 <fopen@plt>
   116f0:	cmp	r0, #0
   116f4:	popne	{r4, r5, fp, pc}
   116f8:	ldrb	r0, [r5]
   116fc:	cmp	r0, #119	; 0x77
   11700:	bne	11738 <getc@plt+0xb54>
   11704:	movw	r0, #9402	; 0x24ba
   11708:	movt	r0, #1
   1170c:	mov	r1, r4
   11710:	bl	11a14 <error@@Base+0x40>
   11714:	ldrb	r0, [r5]
   11718:	movw	r1, #12496	; 0x30d0
   1171c:	movt	r1, #2
   11720:	movw	r2, #12500	; 0x30d4
   11724:	movt	r2, #2
   11728:	cmp	r0, #114	; 0x72
   1172c:	moveq	r2, r1
   11730:	ldr	r0, [r2]
   11734:	pop	{r4, r5, fp, pc}
   11738:	movw	r0, #9424	; 0x24d0
   1173c:	movt	r0, #1
   11740:	mov	r1, r4
   11744:	bl	11a14 <error@@Base+0x40>
   11748:	movw	r1, #12496	; 0x30d0
   1174c:	movt	r1, #2
   11750:	ldr	r1, [r1]
   11754:	cmp	r1, r0
   11758:	movwne	r1, #12500	; 0x30d4
   1175c:	movtne	r1, #2
   11760:	ldrne	r1, [r1]
   11764:	cmpne	r1, r0
   11768:	bxeq	lr
   1176c:	b	10b9c <fclose@plt>
   11770:	push	{fp, lr}
   11774:	mov	fp, sp
   11778:	sub	sp, sp, #88	; 0x58
   1177c:	mov	r1, sp
   11780:	bl	123e4 <error@@Base+0xa10>
   11784:	clz	r0, r0
   11788:	lsr	r0, r0, #5
   1178c:	mov	sp, fp
   11790:	pop	{fp, pc}
   11794:	push	{r4, sl, fp, lr}
   11798:	add	fp, sp, #8
   1179c:	movw	r0, #12516	; 0x30e4
   117a0:	movt	r0, #2
   117a4:	ldrh	r1, [r0]
   117a8:	add	r1, r1, #1
   117ac:	strh	r1, [r0]
   117b0:	sxth	r0, r1
   117b4:	bl	117c8 <getc@plt+0xbe4>
   117b8:	mov	r4, r0
   117bc:	bl	10adc <unlink@plt>
   117c0:	mov	r0, r4
   117c4:	pop	{r4, sl, fp, pc}
   117c8:	push	{r4, r5, fp, lr}
   117cc:	add	fp, sp, #8
   117d0:	sub	sp, sp, #104	; 0x68
   117d4:	mov	r4, r0
   117d8:	movw	r0, #20612	; 0x5084
   117dc:	movt	r0, #2
   117e0:	ldr	r5, [r0]
   117e4:	bl	10b60 <getpid@plt>
   117e8:	mov	r3, r0
   117ec:	sxth	r0, r4
   117f0:	str	r0, [sp]
   117f4:	add	r4, sp, #4
   117f8:	movw	r1, #9465	; 0x24f9
   117fc:	movt	r1, #1
   11800:	mov	r0, r4
   11804:	mov	r2, r5
   11808:	bl	10ba8 <sprintf@plt>
   1180c:	mov	r0, r4
   11810:	bl	10ac4 <strdup@plt>
   11814:	sub	sp, fp, #8
   11818:	pop	{r4, r5, fp, pc}
   1181c:	push	{r4, sl, fp, lr}
   11820:	add	fp, sp, #8
   11824:	mov	r4, r0
   11828:	bl	10b84 <strlen@plt>
   1182c:	sub	r0, r0, #1
   11830:	sxth	r0, r0
   11834:	cmp	r0, #0
   11838:	blt	11848 <getc@plt+0xc64>
   1183c:	ldrb	r1, [r4, r0]
   11840:	cmp	r1, #47	; 0x2f
   11844:	bne	1182c <getc@plt+0xc48>
   11848:	add	r0, r4, r0
   1184c:	add	r0, r0, #1
   11850:	pop	{r4, sl, fp, pc}
   11854:	push	{r4, r5, r6, r7, fp, lr}
   11858:	add	fp, sp, #16
   1185c:	mov	r4, r3
   11860:	mov	r5, r2
   11864:	mov	r6, r1
   11868:	mov	r7, r0
   1186c:	ldr	r0, [r1]
   11870:	bl	1181c <getc@plt+0xc38>
   11874:	movw	r1, #20612	; 0x5084
   11878:	movt	r1, #2
   1187c:	str	r0, [r1]
   11880:	bl	11a9c <error@@Base+0xc8>
   11884:	mov	r0, r7
   11888:	mov	r1, r6
   1188c:	mov	r2, r5
   11890:	mov	r3, r4
   11894:	pop	{r4, r5, r6, r7, fp, lr}
   11898:	b	1189c <getc@plt+0xcb8>
   1189c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   118a0:	add	fp, sp, #28
   118a4:	sub	sp, sp, #12
   118a8:	stmib	sp, {r2, r3}
   118ac:	mov	r7, r1
   118b0:	mov	r5, r0
   118b4:	ldr	r0, [r0]
   118b8:	cmp	r0, #1
   118bc:	bne	118d4 <getc@plt+0xcf0>
   118c0:	movw	r0, #12480	; 0x30c0
   118c4:	movt	r0, #2
   118c8:	ldrb	r0, [r0]
   118cc:	cmp	r0, #0
   118d0:	bne	1198c <getc@plt+0xda8>
   118d4:	ldr	r9, [r5]
   118d8:	mov	r6, #0
   118dc:	cmp	r9, #2
   118e0:	blt	1197c <getc@plt+0xd98>
   118e4:	mov	sl, #1
   118e8:	mov	r6, #0
   118ec:	mov	r8, #1
   118f0:	ldr	r4, [r7, sl, lsl #2]
   118f4:	ldrb	r0, [r4]
   118f8:	cmp	r0, #45	; 0x2d
   118fc:	bne	11958 <getc@plt+0xd74>
   11900:	ldrb	r0, [r4, #1]
   11904:	cmp	r0, #0
   11908:	beq	11958 <getc@plt+0xd74>
   1190c:	mov	r0, r4
   11910:	bl	10b84 <strlen@plt>
   11914:	mov	r2, r0
   11918:	movw	r0, #9494	; 0x2516
   1191c:	movt	r0, #1
   11920:	mov	r1, r4
   11924:	bl	10bcc <strncmp@plt>
   11928:	cmp	r0, #0
   1192c:	beq	1198c <getc@plt+0xda8>
   11930:	add	r0, sl, #1
   11934:	mov	r1, #0
   11938:	cmp	r0, r9
   1193c:	ldrlt	r1, [r7, r0, lsl #2]
   11940:	mov	r0, r4
   11944:	ldr	r2, [sp, #8]
   11948:	bl	11b48 <error@@Base+0x174>
   1194c:	cmp	r0, #0
   11950:	addne	r8, r8, #1
   11954:	b	11968 <getc@plt+0xd84>
   11958:	ldr	r0, [r7, sl, lsl #2]
   1195c:	sxth	r1, r6
   11960:	str	r0, [r7, r1, lsl #2]
   11964:	add	r6, r6, #1
   11968:	ldr	r9, [r5]
   1196c:	add	r8, r8, #1
   11970:	sxth	sl, r8
   11974:	cmp	r9, sl
   11978:	bgt	118f0 <getc@plt+0xd0c>
   1197c:	sxth	r0, r6
   11980:	str	r0, [r5]
   11984:	sub	sp, fp, #28
   11988:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1198c:	ldr	r0, [sp, #4]
   11990:	bl	11af8 <error@@Base+0x124>
   11994:	push	{fp, lr}
   11998:	mov	fp, sp
   1199c:	mov	r0, #0
   119a0:	bl	119a4 <getc@plt+0xdc0>
   119a4:	push	{fp, lr}
   119a8:	mov	fp, sp
   119ac:	mov	r4, r0
   119b0:	movw	r0, #20616	; 0x5088
   119b4:	movt	r0, #2
   119b8:	ldr	r0, [r0]
   119bc:	cmp	r0, #0
   119c0:	beq	119c8 <getc@plt+0xde4>
   119c4:	blx	r0
   119c8:	bl	11c38 <error@@Base+0x264>
   119cc:	mov	r0, r4
   119d0:	bl	10b6c <exit@plt>

000119d4 <error@@Base>:
   119d4:	push	{fp, lr}
   119d8:	mov	fp, sp
   119dc:	mov	r3, r0
   119e0:	movw	r0, #20612	; 0x5084
   119e4:	movt	r0, #2
   119e8:	ldr	r2, [r0]
   119ec:	movw	r0, #12488	; 0x30c8
   119f0:	movt	r0, #2
   119f4:	ldr	r0, [r0]
   119f8:	movw	r1, #9444	; 0x24e4
   119fc:	movt	r1, #1
   11a00:	bl	10b90 <fprintf@plt>
   11a04:	movw	r0, #12484	; 0x30c4
   11a08:	movt	r0, #2
   11a0c:	ldr	r0, [r0]
   11a10:	bl	119a4 <getc@plt+0xdc0>
   11a14:	push	{fp, lr}
   11a18:	mov	fp, sp
   11a1c:	sub	sp, sp, #8
   11a20:	mov	r3, r0
   11a24:	movw	r0, #20612	; 0x5084
   11a28:	movt	r0, #2
   11a2c:	ldr	r2, [r0]
   11a30:	movw	r0, #12488	; 0x30c8
   11a34:	movt	r0, #2
   11a38:	ldr	r0, [r0]
   11a3c:	str	r1, [sp]
   11a40:	movw	r1, #9452	; 0x24ec
   11a44:	movt	r1, #1
   11a48:	bl	10b90 <fprintf@plt>
   11a4c:	movw	r0, #12484	; 0x30c4
   11a50:	movt	r0, #2
   11a54:	ldr	r0, [r0]
   11a58:	bl	119a4 <getc@plt+0xdc0>
   11a5c:	push	{fp, lr}
   11a60:	mov	fp, sp
   11a64:	sub	sp, sp, #8
   11a68:	mov	r3, r0
   11a6c:	movw	r0, #20612	; 0x5084
   11a70:	movt	r0, #2
   11a74:	ldr	r2, [r0]
   11a78:	movw	r0, #12488	; 0x30c8
   11a7c:	movt	r0, #2
   11a80:	ldr	r0, [r0]
   11a84:	str	r1, [sp]
   11a88:	movw	r1, #9452	; 0x24ec
   11a8c:	movt	r1, #1
   11a90:	bl	10b90 <fprintf@plt>
   11a94:	mov	sp, fp
   11a98:	pop	{fp, pc}
   11a9c:	push	{r4, sl, fp, lr}
   11aa0:	add	fp, sp, #8
   11aa4:	movw	r4, #6856	; 0x1ac8
   11aa8:	movt	r4, #1
   11aac:	mov	r0, #2
   11ab0:	mov	r1, r4
   11ab4:	bl	10b48 <__sysv_signal@plt>
   11ab8:	mov	r0, #15
   11abc:	mov	r1, r4
   11ac0:	pop	{r4, sl, fp, lr}
   11ac4:	b	10b48 <__sysv_signal@plt>
   11ac8:	movw	r0, #12518	; 0x30e6
   11acc:	movt	r0, #2
   11ad0:	ldrb	r1, [r0]
   11ad4:	cmp	r1, #1
   11ad8:	bxeq	lr
   11adc:	push	{fp, lr}
   11ae0:	mov	fp, sp
   11ae4:	mov	r1, #1
   11ae8:	strb	r1, [r0]
   11aec:	movw	r0, #9479	; 0x2507
   11af0:	movt	r0, #1
   11af4:	bl	119d4 <error@@Base>
   11af8:	push	{fp, lr}
   11afc:	mov	fp, sp
   11b00:	mov	r3, r0
   11b04:	movw	r0, #20608	; 0x5080
   11b08:	movt	r0, #2
   11b0c:	ldr	r0, [r0]
   11b10:	cmp	r0, #0
   11b14:	bne	11b40 <error@@Base+0x16c>
   11b18:	movw	r0, #20612	; 0x5084
   11b1c:	movt	r0, #2
   11b20:	ldr	r2, [r0]
   11b24:	movw	r0, #12488	; 0x30c8
   11b28:	movt	r0, #2
   11b2c:	ldr	r0, [r0]
   11b30:	movw	r1, #9500	; 0x251c
   11b34:	movt	r1, #1
   11b38:	bl	10b90 <fprintf@plt>
   11b3c:	bl	11994 <getc@plt+0xdb0>
   11b40:	blx	r0
   11b44:	bl	11994 <getc@plt+0xdb0>
   11b48:	push	{r4, sl, fp, lr}
   11b4c:	add	fp, sp, #8
   11b50:	mov	ip, r0
   11b54:	cmp	r2, #0
   11b58:	ldrbne	r0, [r2]
   11b5c:	cmpne	r0, #0
   11b60:	bne	11b74 <error@@Base+0x1a0>
   11b64:	movw	r0, #9515	; 0x252b
   11b68:	movt	r0, #1
   11b6c:	mov	r1, ip
   11b70:	bl	11a14 <error@@Base+0x40>
   11b74:	ldrb	lr, [ip, #1]
   11b78:	mov	r3, #0
   11b7c:	cmp	lr, r0
   11b80:	beq	11ba8 <error@@Base+0x1d4>
   11b84:	mov	r0, #1
   11b88:	sxth	r3, r0
   11b8c:	add	r4, r3, r3, lsl #1
   11b90:	ldrb	r4, [r2, r4, lsl #2]
   11b94:	cmp	r4, #0
   11b98:	beq	11b64 <error@@Base+0x190>
   11b9c:	add	r0, r0, #1
   11ba0:	cmp	lr, r4
   11ba4:	bne	11b88 <error@@Base+0x1b4>
   11ba8:	add	r0, r3, r3, lsl #1
   11bac:	add	r3, r2, r0, lsl #2
   11bb0:	ldr	r0, [r3, #4]
   11bb4:	cmp	r0, #0
   11bb8:	beq	11bf8 <error@@Base+0x224>
   11bbc:	mov	r2, ip
   11bc0:	ldrb	lr, [r2, #2]!
   11bc4:	cmp	r1, #0
   11bc8:	cmpeq	lr, #0
   11bcc:	beq	11bf8 <error@@Base+0x224>
   11bd0:	ldr	r3, [r0]
   11bd4:	cmp	r3, #0
   11bd8:	bne	11c28 <error@@Base+0x254>
   11bdc:	cmp	lr, #0
   11be0:	movne	r1, r2
   11be4:	str	r1, [r0]
   11be8:	ldrb	r0, [r2]
   11bec:	clz	r0, r0
   11bf0:	lsr	r0, r0, #5
   11bf4:	pop	{r4, sl, fp, pc}
   11bf8:	ldr	r0, [r3, #8]
   11bfc:	cmp	r0, #0
   11c00:	beq	11b64 <error@@Base+0x190>
   11c04:	ldrb	r1, [ip, #2]
   11c08:	cmp	r1, #0
   11c0c:	bne	11b64 <error@@Base+0x190>
   11c10:	ldrb	r1, [r0]
   11c14:	cmp	r1, #0
   11c18:	moveq	r1, #1
   11c1c:	strbeq	r1, [r0]
   11c20:	moveq	r0, #0
   11c24:	popeq	{r4, sl, fp, pc}
   11c28:	movw	r0, #9530	; 0x253a
   11c2c:	movt	r0, #1
   11c30:	mov	r1, ip
   11c34:	bl	11a14 <error@@Base+0x40>
   11c38:	push	{r4, r5, r6, sl, fp, lr}
   11c3c:	add	fp, sp, #16
   11c40:	movw	r5, #12516	; 0x30e4
   11c44:	movt	r5, #2
   11c48:	ldrsh	r0, [r5]
   11c4c:	cmp	r0, #1
   11c50:	poplt	{r4, r5, r6, sl, fp, pc}
   11c54:	mov	r6, #1
   11c58:	sxth	r0, r6
   11c5c:	bl	117c8 <getc@plt+0xbe4>
   11c60:	mov	r4, r0
   11c64:	bl	10adc <unlink@plt>
   11c68:	mov	r0, r4
   11c6c:	bl	10a94 <free@plt>
   11c70:	add	r0, r6, #1
   11c74:	sxth	r6, r0
   11c78:	ldrsh	r0, [r5]
   11c7c:	cmp	r6, r0
   11c80:	ble	11c58 <error@@Base+0x284>
   11c84:	pop	{r4, r5, r6, sl, fp, pc}
   11c88:	push	{r4, r5, r6, sl, fp, lr}
   11c8c:	add	fp, sp, #16
   11c90:	mov	r4, r2
   11c94:	mov	r5, r1
   11c98:	mov	r6, r0
   11c9c:	mov	r0, #1
   11ca0:	mov	r1, #16
   11ca4:	bl	11634 <getc@plt+0xa50>
   11ca8:	mov	r1, r0
   11cac:	strb	r5, [r0, #8]
   11cb0:	str	r4, [r0, #12]
   11cb4:	mov	r0, r6
   11cb8:	pop	{r4, r5, r6, sl, fp, lr}
   11cbc:	b	11170 <getc@plt+0x58c>
   11cc0:	push	{r4, r5, r6, r7, fp, lr}
   11cc4:	add	fp, sp, #16
   11cc8:	mov	r5, r2
   11ccc:	mov	r2, r1
   11cd0:	mov	r4, r0
   11cd4:	cmp	r1, #0
   11cd8:	bne	11ce8 <error@@Base+0x314>
   11cdc:	ldrb	r0, [r5]
   11ce0:	cmp	r0, #0
   11ce4:	bne	11d80 <error@@Base+0x3ac>
   11ce8:	ldr	r7, [r4, #4]
   11cec:	movw	r1, #9751	; 0x2617
   11cf0:	movt	r1, #1
   11cf4:	mov	r0, r2
   11cf8:	bl	116d0 <getc@plt+0xaec>
   11cfc:	mov	r6, r0
   11d00:	ldrb	r0, [r5]
   11d04:	cmp	r0, #0
   11d08:	beq	11d18 <error@@Base+0x344>
   11d0c:	mov	r0, r6
   11d10:	bl	11d94 <error@@Base+0x3c0>
   11d14:	strb	r0, [r5, #11]
   11d18:	ldrb	r2, [r5, #1]
   11d1c:	ldr	r3, [r5, #4]
   11d20:	cmp	r3, #0
   11d24:	movweq	r3, #94	; 0x5e
   11d28:	mov	r0, r6
   11d2c:	mov	r1, r4
   11d30:	bl	11e40 <error@@Base+0x46c>
   11d34:	mov	r0, r6
   11d38:	bl	11748 <getc@plt+0xb64>
   11d3c:	ldrb	r0, [r5, #9]
   11d40:	cmp	r0, #0
   11d44:	beq	11d60 <error@@Base+0x38c>
   11d48:	cmp	r7, #0
   11d4c:	mov	r0, r4
   11d50:	addne	r0, r7, #4
   11d54:	ldr	r1, [r0]
   11d58:	mov	r0, r4
   11d5c:	bl	11f48 <error@@Base+0x574>
   11d60:	ldrb	r0, [r5, #10]
   11d64:	cmp	r0, #0
   11d68:	popeq	{r4, r5, r6, r7, fp, pc}
   11d6c:	cmp	r7, #0
   11d70:	addne	r4, r7, #4
   11d74:	ldr	r0, [r4]
   11d78:	pop	{r4, r5, r6, r7, fp, lr}
   11d7c:	b	12030 <error@@Base+0x65c>
   11d80:	movw	r0, #9547	; 0x254b
   11d84:	movt	r0, #1
   11d88:	movw	r1, #9563	; 0x255b
   11d8c:	movt	r1, #1
   11d90:	bl	11a14 <error@@Base+0x40>
   11d94:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11d98:	add	fp, sp, #24
   11d9c:	sub	sp, sp, #104	; 0x68
   11da0:	mov	r4, r0
   11da4:	add	r0, sp, #4
   11da8:	mov	r1, #99	; 0x63
   11dac:	mov	r2, r4
   11db0:	bl	10aac <fgets@plt>
   11db4:	cmp	r0, #0
   11db8:	beq	11dd8 <error@@Base+0x404>
   11dbc:	add	r0, sp, #4
   11dc0:	movw	r1, #9617	; 0x2591
   11dc4:	movt	r1, #1
   11dc8:	mov	r2, #51	; 0x33
   11dcc:	bl	10bcc <strncmp@plt>
   11dd0:	cmp	r0, #0
   11dd4:	beq	11df0 <error@@Base+0x41c>
   11dd8:	mov	r0, r4
   11ddc:	bl	10ad0 <rewind@plt>
   11de0:	mov	r7, #0
   11de4:	mov	r0, r7
   11de8:	sub	sp, fp, #24
   11dec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11df0:	mov	r6, #0
   11df4:	add	r5, sp, #4
   11df8:	movw	r8, #9673	; 0x25c9
   11dfc:	movt	r8, #1
   11e00:	mov	r7, #1
   11e04:	mov	r0, r5
   11e08:	mov	r1, #99	; 0x63
   11e0c:	mov	r2, r4
   11e10:	bl	10aac <fgets@plt>
   11e14:	cmp	r0, #0
   11e18:	beq	11de4 <error@@Base+0x410>
   11e1c:	mov	r0, r5
   11e20:	mov	r1, r8
   11e24:	bl	10a70 <strcmp@plt>
   11e28:	cmp	r0, #0
   11e2c:	addeq	r6, r6, #1
   11e30:	sxth	r6, r6
   11e34:	cmp	r6, #2
   11e38:	blt	11e04 <error@@Base+0x430>
   11e3c:	b	11de4 <error@@Base+0x410>
   11e40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11e44:	add	fp, sp, #28
   11e48:	sub	sp, sp, #20
   11e4c:	str	r3, [sp, #8]
   11e50:	mov	r5, r2
   11e54:	str	r1, [sp, #4]
   11e58:	mov	r9, r0
   11e5c:	bl	10be4 <getc@plt>
   11e60:	cmn	r0, #1
   11e64:	beq	11f20 <error@@Base+0x54c>
   11e68:	uxtb	r8, r5
   11e6c:	add	r4, sp, #16
   11e70:	add	r1, r4, #1
   11e74:	str	r1, [sp]
   11e78:	mov	r7, #0
   11e7c:	movw	r6, #11776	; 0x2e00
   11e80:	movt	r6, #2
   11e84:	add	r1, r6, r0
   11e88:	ldrsb	sl, [r1]
   11e8c:	cmp	sl, #0
   11e90:	ble	11f28 <error@@Base+0x554>
   11e94:	strb	r0, [sp, #16]
   11e98:	cmp	sl, #1
   11e9c:	beq	11ec8 <error@@Base+0x4f4>
   11ea0:	mov	r5, r8
   11ea4:	sub	r8, sl, #1
   11ea8:	ldr	r0, [sp]
   11eac:	mov	r1, #1
   11eb0:	mov	r2, r8
   11eb4:	mov	r3, r9
   11eb8:	bl	10b18 <fread@plt>
   11ebc:	cmp	r0, r8
   11ec0:	mov	r8, r5
   11ec4:	bne	11f3c <error@@Base+0x568>
   11ec8:	mov	r0, r4
   11ecc:	mov	r1, #4
   11ed0:	add	r2, sp, #12
   11ed4:	bl	10b24 <utf8proc_iterate@plt>
   11ed8:	cmp	r0, sl
   11edc:	bne	11f34 <error@@Base+0x560>
   11ee0:	ldr	r2, [sp, #12]
   11ee4:	cmp	r8, #0
   11ee8:	beq	11efc <error@@Base+0x528>
   11eec:	mov	r5, #1
   11ef0:	ldr	r0, [sp, #8]
   11ef4:	cmp	r2, r0
   11ef8:	beq	11f0c <error@@Base+0x538>
   11efc:	ldr	r0, [sp, #4]
   11f00:	mov	r1, r7
   11f04:	bl	11c88 <error@@Base+0x2b4>
   11f08:	mov	r5, #0
   11f0c:	mov	r0, r9
   11f10:	bl	10be4 <getc@plt>
   11f14:	cmn	r0, #1
   11f18:	mov	r7, r5
   11f1c:	bne	11e84 <error@@Base+0x4b0>
   11f20:	sub	sp, fp, #28
   11f24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f28:	movw	r0, #9729	; 0x2601
   11f2c:	movt	r0, #1
   11f30:	bl	119d4 <error@@Base>
   11f34:	bl	10bb4 <utf8proc_errmsg@plt>
   11f38:	bl	119d4 <error@@Base>
   11f3c:	movw	r0, #9753	; 0x2619
   11f40:	movt	r0, #1
   11f44:	bl	119d4 <error@@Base>
   11f48:	push	{r4, r5, r6, r7, fp, lr}
   11f4c:	add	fp, sp, #16
   11f50:	cmp	r1, #0
   11f54:	popeq	{r4, r5, r6, r7, fp, pc}
   11f58:	mov	r5, r1
   11f5c:	mov	r4, r0
   11f60:	mov	r6, #32
   11f64:	mov	r7, r1
   11f68:	ldr	r0, [r7, #12]
   11f6c:	bl	1230c <error@@Base+0x938>
   11f70:	cmp	r0, #0
   11f74:	strne	r6, [r7, #12]
   11f78:	ldr	r7, [r7, #4]
   11f7c:	cmp	r7, #0
   11f80:	bne	11f68 <error@@Base+0x594>
   11f84:	mov	r6, #0
   11f88:	b	11f9c <error@@Base+0x5c8>
   11f8c:	mov	r0, #1
   11f90:	cmp	r1, #32
   11f94:	beq	11fc4 <error@@Base+0x5f0>
   11f98:	b	12004 <error@@Base+0x630>
   11f9c:	ldr	r7, [r5, #4]
   11fa0:	ldr	r1, [r5, #12]
   11fa4:	cmp	r1, #32
   11fa8:	bne	11ff0 <error@@Base+0x61c>
   11fac:	tst	r6, #255	; 0xff
   11fb0:	beq	11fc4 <error@@Base+0x5f0>
   11fb4:	cmp	r7, #0
   11fb8:	ldrne	r1, [r7, #12]
   11fbc:	cmpne	r1, #10
   11fc0:	bne	11f8c <error@@Base+0x5b8>
   11fc4:	tst	r6, #255	; 0xff
   11fc8:	cmpne	r7, #0
   11fcc:	beq	1200c <error@@Base+0x638>
   11fd0:	ldr	r0, [r7, #12]
   11fd4:	cmp	r0, #32
   11fd8:	bne	1200c <error@@Base+0x638>
   11fdc:	ldrb	r0, [r5, #8]
   11fe0:	ldrb	r1, [r7, #8]
   11fe4:	orr	r0, r1, r0
   11fe8:	strb	r0, [r7, #8]
   11fec:	b	1200c <error@@Base+0x638>
   11ff0:	subs	r0, r1, #10
   11ff4:	movwne	r0, #1
   11ff8:	tst	r6, #255	; 0xff
   11ffc:	cmpeq	r1, #10
   12000:	beq	1200c <error@@Base+0x638>
   12004:	mov	r6, r0
   12008:	b	12020 <error@@Base+0x64c>
   1200c:	mov	r0, r4
   12010:	mov	r1, r5
   12014:	bl	11198 <getc@plt+0x5b4>
   12018:	mov	r0, r5
   1201c:	bl	10a94 <free@plt>
   12020:	cmp	r7, #0
   12024:	mov	r5, r7
   12028:	bne	11f9c <error@@Base+0x5c8>
   1202c:	pop	{r4, r5, r6, r7, fp, pc}
   12030:	push	{r4, sl, fp, lr}
   12034:	add	fp, sp, #8
   12038:	cmp	r0, #0
   1203c:	popeq	{r4, sl, fp, pc}
   12040:	mov	r4, r0
   12044:	ldr	r0, [r4, #12]
   12048:	bl	10ae8 <utf8proc_tolower@plt>
   1204c:	str	r0, [r4, #12]
   12050:	ldr	r4, [r4, #4]
   12054:	cmp	r4, #0
   12058:	bne	12044 <error@@Base+0x670>
   1205c:	pop	{r4, sl, fp, pc}
   12060:	push	{fp, lr}
   12064:	mov	fp, sp
   12068:	bl	10ab8 <utf8proc_encode_char@plt>
   1206c:	cmp	r0, #0
   12070:	sxtbgt	r0, r0
   12074:	popgt	{fp, pc}
   12078:	movw	r0, #9573	; 0x2565
   1207c:	movt	r0, #1
   12080:	bl	119d4 <error@@Base>
   12084:	push	{r4, r5, r6, r7, fp, lr}
   12088:	add	fp, sp, #16
   1208c:	mov	r7, r3
   12090:	mov	r4, r2
   12094:	mov	r5, r1
   12098:	tst	r0, #255	; 0xff
   1209c:	beq	120dc <error@@Base+0x708>
   120a0:	mov	r0, #94	; 0x5e
   120a4:	mov	r1, r4
   120a8:	bl	12060 <error@@Base+0x68c>
   120ac:	mov	r6, r0
   120b0:	cmp	r5, #10
   120b4:	bne	120e8 <error@@Base+0x714>
   120b8:	movw	r0, #9463	; 0x24f7
   120bc:	movt	r0, #1
   120c0:	movw	r1, #9596	; 0x257c
   120c4:	movt	r1, #1
   120c8:	tst	r7, #255	; 0xff
   120cc:	moveq	r1, r0
   120d0:	add	r0, r4, r6
   120d4:	pop	{r4, r5, r6, r7, fp, lr}
   120d8:	b	10ba8 <sprintf@plt>
   120dc:	mov	r6, #0
   120e0:	cmp	r5, #10
   120e4:	beq	120b8 <error@@Base+0x6e4>
   120e8:	mov	r0, r5
   120ec:	bl	12160 <error@@Base+0x78c>
   120f0:	cmp	r0, #0
   120f4:	beq	12134 <error@@Base+0x760>
   120f8:	mov	r0, r5
   120fc:	bl	121a0 <error@@Base+0x7cc>
   12100:	cmp	r0, #0
   12104:	beq	12118 <error@@Base+0x744>
   12108:	add	r1, r4, r6
   1210c:	movw	r0, #9676	; 0x25cc
   12110:	bl	12060 <error@@Base+0x68c>
   12114:	add	r6, r6, r0
   12118:	add	r1, r4, r6
   1211c:	mov	r0, r5
   12120:	bl	12060 <error@@Base+0x68c>
   12124:	add	r0, r6, r0
   12128:	mov	r1, #0
   1212c:	strb	r1, [r4, r0]
   12130:	pop	{r4, r5, r6, r7, fp, pc}
   12134:	add	r0, r4, r6
   12138:	cmp	r5, #255	; 0xff
   1213c:	bhi	1214c <error@@Base+0x778>
   12140:	movw	r1, #9601	; 0x2581
   12144:	movt	r1, #1
   12148:	b	12154 <error@@Base+0x780>
   1214c:	movw	r1, #9608	; 0x2588
   12150:	movt	r1, #1
   12154:	mov	r2, r5
   12158:	pop	{r4, r5, r6, r7, fp, lr}
   1215c:	b	10ba8 <sprintf@plt>
   12160:	push	{r4, sl, fp, lr}
   12164:	add	fp, sp, #8
   12168:	mov	r4, r0
   1216c:	bl	10aa0 <utf8proc_get_property@plt>
   12170:	mov	r1, r0
   12174:	mov	r0, #1
   12178:	cmp	r4, #32
   1217c:	popeq	{r4, sl, fp, pc}
   12180:	ldrsh	r1, [r1]
   12184:	sub	r2, r1, #1
   12188:	cmp	r2, #22
   1218c:	bcs	12194 <error@@Base+0x7c0>
   12190:	pop	{r4, sl, fp, pc}
   12194:	cmp	r1, #29
   12198:	movne	r0, #0
   1219c:	pop	{r4, sl, fp, pc}
   121a0:	push	{fp, lr}
   121a4:	mov	fp, sp
   121a8:	bl	10b78 <utf8proc_category@plt>
   121ac:	sub	r1, r0, #6
   121b0:	mov	r0, #0
   121b4:	cmp	r1, #3
   121b8:	movwcc	r0, #1
   121bc:	pop	{fp, pc}
   121c0:	push	{r4, r5, r6, r7, fp, lr}
   121c4:	add	fp, sp, #16
   121c8:	sub	sp, sp, #16
   121cc:	mov	r6, r2
   121d0:	mov	r2, r1
   121d4:	mov	r5, r0
   121d8:	movw	r1, #9615	; 0x258f
   121dc:	movt	r1, #1
   121e0:	mov	r0, r2
   121e4:	bl	116d0 <getc@plt+0xaec>
   121e8:	mov	r4, r0
   121ec:	cmp	r6, #0
   121f0:	beq	12244 <error@@Base+0x870>
   121f4:	movw	r0, #9617	; 0x2591
   121f8:	movt	r0, #1
   121fc:	mov	r1, #55	; 0x37
   12200:	mov	r2, #1
   12204:	mov	r3, r4
   12208:	bl	10b00 <fwrite@plt>
   1220c:	movw	r7, #9673	; 0x25c9
   12210:	movt	r7, #1
   12214:	mov	r0, r7
   12218:	mov	r1, #55	; 0x37
   1221c:	mov	r2, #1
   12220:	mov	r3, r4
   12224:	bl	10b00 <fwrite@plt>
   12228:	mov	r0, r4
   1222c:	blx	r6
   12230:	mov	r0, r7
   12234:	mov	r1, #55	; 0x37
   12238:	mov	r2, #1
   1223c:	mov	r3, r4
   12240:	bl	10b00 <fwrite@plt>
   12244:	ldr	r6, [r5]
   12248:	cmp	r6, #0
   1224c:	beq	12280 <error@@Base+0x8ac>
   12250:	add	r5, sp, #7
   12254:	ldr	r1, [r6, #12]
   12258:	ldrb	r0, [r6, #8]
   1225c:	mov	r2, r5
   12260:	mov	r3, #0
   12264:	bl	12084 <error@@Base+0x6b0>
   12268:	mov	r0, r5
   1226c:	mov	r1, r4
   12270:	bl	10bc0 <fputs@plt>
   12274:	ldr	r6, [r6, #4]
   12278:	cmp	r6, #0
   1227c:	bne	12254 <error@@Base+0x880>
   12280:	mov	r0, r4
   12284:	bl	11748 <getc@plt+0xb64>
   12288:	sub	sp, fp, #16
   1228c:	pop	{r4, r5, r6, r7, fp, pc}
   12290:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12294:	add	fp, sp, #24
   12298:	sub	sp, sp, #8
   1229c:	mov	r6, r0
   122a0:	mov	r0, #0
   122a4:	str	r0, [sp, #4]
   122a8:	ldrb	r0, [r1]
   122ac:	mov	r8, #1
   122b0:	cmp	r0, #0
   122b4:	beq	12300 <error@@Base+0x92c>
   122b8:	mov	r5, r1
   122bc:	add	r7, sp, #4
   122c0:	mov	r0, r5
   122c4:	mvn	r1, #0
   122c8:	mov	r2, r7
   122cc:	bl	10b24 <utf8proc_iterate@plt>
   122d0:	cmp	r0, #1
   122d4:	blt	122fc <error@@Base+0x928>
   122d8:	mov	r4, r0
   122dc:	ldr	r2, [sp, #4]
   122e0:	mov	r0, r6
   122e4:	mov	r1, #0
   122e8:	bl	11c88 <error@@Base+0x2b4>
   122ec:	ldrb	r0, [r5, r4]!
   122f0:	cmp	r0, #0
   122f4:	bne	122c0 <error@@Base+0x8ec>
   122f8:	b	12300 <error@@Base+0x92c>
   122fc:	mov	r8, #0
   12300:	mov	r0, r8
   12304:	sub	sp, fp, #24
   12308:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1230c:	push	{r4, sl, fp, lr}
   12310:	add	fp, sp, #8
   12314:	mov	r4, r0
   12318:	bl	10aa0 <utf8proc_get_property@plt>
   1231c:	cmp	r4, #10
   12320:	ble	1233c <error@@Base+0x968>
   12324:	sub	r1, r4, #11
   12328:	cmp	r1, #3
   1232c:	bcc	12358 <error@@Base+0x984>
   12330:	cmp	r4, #160	; 0xa0
   12334:	beq	12358 <error@@Base+0x984>
   12338:	b	12364 <error@@Base+0x990>
   1233c:	cmp	r4, #9
   12340:	beq	12358 <error@@Base+0x984>
   12344:	mov	r1, #0
   12348:	cmp	r4, #10
   1234c:	bne	12364 <error@@Base+0x990>
   12350:	mov	r0, r1
   12354:	pop	{r4, sl, fp, pc}
   12358:	mov	r1, #1
   1235c:	mov	r0, r1
   12360:	pop	{r4, sl, fp, pc}
   12364:	ldrsh	r0, [r0]
   12368:	sub	r0, r0, #23
   1236c:	mov	r1, #0
   12370:	cmp	r0, #3
   12374:	movwcc	r1, #1
   12378:	mov	r0, r1
   1237c:	pop	{r4, sl, fp, pc}
   12380:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12384:	mov	r7, r0
   12388:	ldr	r6, [pc, #72]	; 123d8 <error@@Base+0xa04>
   1238c:	ldr	r5, [pc, #72]	; 123dc <error@@Base+0xa08>
   12390:	add	r6, pc, r6
   12394:	add	r5, pc, r5
   12398:	sub	r6, r6, r5
   1239c:	mov	r8, r1
   123a0:	mov	r9, r2
   123a4:	bl	10a44 <calloc@plt-0x20>
   123a8:	asrs	r6, r6, #2
   123ac:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   123b0:	mov	r4, #0
   123b4:	add	r4, r4, #1
   123b8:	ldr	r3, [r5], #4
   123bc:	mov	r2, r9
   123c0:	mov	r1, r8
   123c4:	mov	r0, r7
   123c8:	blx	r3
   123cc:	cmp	r6, r4
   123d0:	bne	123b4 <error@@Base+0x9e0>
   123d4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   123d8:	andeq	r0, r1, r4, ror #20
   123dc:	andeq	r0, r1, ip, asr sl
   123e0:	bx	lr
   123e4:	mov	r2, r1
   123e8:	mov	r1, r0
   123ec:	mov	r0, #3
   123f0:	b	10af4 <__xstat@plt>

Disassembly of section .fini:

000123f4 <.fini>:
   123f4:	push	{r3, lr}
   123f8:	pop	{r3, pc}
