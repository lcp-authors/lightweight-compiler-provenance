
../repos/charybdis/modules/.libs/m_pass.so:     file format elf32-littlearm


Disassembly of section .init:

00000514 <_init>:
 514:	push	{r3, lr}
 518:	bl	5ac <call_weak_fn>
 51c:	pop	{r3, pc}

Disassembly of section .plt:

00000520 <.plt>:
 520:	push	{lr}		; (str lr, [sp, #-4]!)
 524:	ldr	lr, [pc, #4]	; 530 <.plt+0x10>
 528:	add	lr, pc, lr
 52c:	ldr	pc, [lr, #8]!
 530:	.word	0x00010ad0

00000534 <__cxa_finalize@plt>:
 534:	add	ip, pc, #0, 12
 538:	add	ip, ip, #16, 20	; 0x10000
 53c:	ldr	pc, [ip, #2768]!	; 0xad0

00000540 <rb_outofmemory@plt>:
 540:	add	ip, pc, #0, 12
 544:	add	ip, ip, #16, 20	; 0x10000
 548:	ldr	pc, [ip, #2760]!	; 0xac8

0000054c <strcpy@plt>:
 54c:	add	ip, pc, #0, 12
 550:	add	ip, ip, #16, 20	; 0x10000
 554:	ldr	pc, [ip, #2752]!	; 0xac0

00000558 <malloc@plt>:
 558:	add	ip, pc, #0, 12
 55c:	add	ip, ip, #16, 20	; 0x10000
 560:	ldr	pc, [ip, #2744]!	; 0xab8

00000564 <__gmon_start__@plt>:
 564:	add	ip, pc, #0, 12
 568:	add	ip, ip, #16, 20	; 0x10000
 56c:	ldr	pc, [ip, #2736]!	; 0xab0

00000570 <strlen@plt>:
 570:	add	ip, pc, #0, 12
 574:	add	ip, ip, #16, 20	; 0x10000
 578:	ldr	pc, [ip, #2728]!	; 0xaa8

0000057c <strchr@plt>:
 57c:	add	ip, pc, #0, 12
 580:	add	ip, ip, #16, 20	; 0x10000
 584:	ldr	pc, [ip, #2720]!	; 0xaa0

00000588 <atoi@plt>:
 588:	add	ip, pc, #0, 12
 58c:	add	ip, ip, #16, 20	; 0x10000
 590:	ldr	pc, [ip, #2712]!	; 0xa98

00000594 <rb_strlcpy@plt>:
 594:	add	ip, pc, #0, 12
 598:	add	ip, ip, #16, 20	; 0x10000
 59c:	ldr	pc, [ip, #2704]!	; 0xa90

000005a0 <irccmp@plt>:
 5a0:	add	ip, pc, #0, 12
 5a4:	add	ip, ip, #16, 20	; 0x10000
 5a8:	ldr	pc, [ip, #2696]!	; 0xa88

Disassembly of section .text:

000005ac <call_weak_fn>:
 5ac:	ldr	r3, [pc, #20]	; 5c8 <call_weak_fn+0x1c>
 5b0:	ldr	r2, [pc, #20]	; 5cc <call_weak_fn+0x20>
 5b4:	add	r3, pc, r3
 5b8:	ldr	r2, [r3, r2]
 5bc:	cmp	r2, #0
 5c0:	bxeq	lr
 5c4:	b	564 <__gmon_start__@plt>
 5c8:	.word	0x00010a44
 5cc:	.word	0x00000040

000005d0 <deregister_tm_clones>:
 5d0:	ldr	r3, [pc, #52]	; 60c <deregister_tm_clones+0x3c>
 5d4:	ldr	r0, [pc, #52]	; 610 <deregister_tm_clones+0x40>
 5d8:	add	r3, pc, r3
 5dc:	add	r0, pc, r0
 5e0:	add	r3, r3, #3
 5e4:	sub	r3, r3, r0
 5e8:	cmp	r3, #6
 5ec:	ldr	r3, [pc, #32]	; 614 <deregister_tm_clones+0x44>
 5f0:	add	r3, pc, r3
 5f4:	bxls	lr
 5f8:	ldr	r2, [pc, #24]	; 618 <deregister_tm_clones+0x48>
 5fc:	ldr	r3, [r3, r2]
 600:	cmp	r3, #0
 604:	bxeq	lr
 608:	bx	r3
 60c:	.word	0x00010ae8
 610:	.word	0x00010ae4
 614:	.word	0x00010a08
 618:	.word	0x00000038

0000061c <register_tm_clones>:
 61c:	ldr	r1, [pc, #56]	; 65c <register_tm_clones+0x40>
 620:	ldr	r0, [pc, #56]	; 660 <register_tm_clones+0x44>
 624:	add	r1, pc, r1
 628:	add	r0, pc, r0
 62c:	sub	r1, r1, r0
 630:	ldr	r3, [pc, #44]	; 664 <register_tm_clones+0x48>
 634:	asr	r1, r1, #2
 638:	add	r3, pc, r3
 63c:	add	r1, r1, r1, lsr #31
 640:	asrs	r1, r1, #1
 644:	bxeq	lr
 648:	ldr	r2, [pc, #24]	; 668 <register_tm_clones+0x4c>
 64c:	ldr	r3, [r3, r2]
 650:	cmp	r3, #0
 654:	bxeq	lr
 658:	bx	r3
 65c:	.word	0x00010a9c
 660:	.word	0x00010a98
 664:	.word	0x000109c0
 668:	.word	0x0000004c

0000066c <__do_global_dtors_aux>:
 66c:	ldr	r3, [pc, #76]	; 6c0 <__do_global_dtors_aux+0x54>
 670:	ldr	r2, [pc, #76]	; 6c4 <__do_global_dtors_aux+0x58>
 674:	add	r3, pc, r3
 678:	add	r2, pc, r2
 67c:	ldrb	r3, [r3]
 680:	cmp	r3, #0
 684:	bxne	lr
 688:	ldr	r3, [pc, #56]	; 6c8 <__do_global_dtors_aux+0x5c>
 68c:	push	{r4, lr}
 690:	ldr	r3, [r2, r3]
 694:	cmp	r3, #0
 698:	beq	6a8 <__do_global_dtors_aux+0x3c>
 69c:	ldr	r3, [pc, #40]	; 6cc <__do_global_dtors_aux+0x60>
 6a0:	ldr	r0, [pc, r3]
 6a4:	bl	534 <__cxa_finalize@plt>
 6a8:	bl	5d0 <deregister_tm_clones>
 6ac:	ldr	r3, [pc, #28]	; 6d0 <__do_global_dtors_aux+0x64>
 6b0:	mov	r2, #1
 6b4:	add	r3, pc, r3
 6b8:	strb	r2, [r3]
 6bc:	pop	{r4, pc}
 6c0:	.word	0x00010a4c
 6c4:	.word	0x00010980
 6c8:	.word	0x00000034
 6cc:	.word	0x000109a8
 6d0:	.word	0x00010a0c

000006d4 <frame_dummy>:
 6d4:	ldr	r0, [pc, #56]	; 714 <frame_dummy+0x40>
 6d8:	ldr	r3, [pc, #56]	; 718 <frame_dummy+0x44>
 6dc:	add	r0, pc, r0
 6e0:	ldr	r2, [r0]
 6e4:	add	r3, pc, r3
 6e8:	cmp	r2, #0
 6ec:	bne	6f4 <frame_dummy+0x20>
 6f0:	b	61c <register_tm_clones>
 6f4:	ldr	r2, [pc, #32]	; 71c <frame_dummy+0x48>
 6f8:	ldr	r3, [r3, r2]
 6fc:	cmp	r3, #0
 700:	beq	6f0 <frame_dummy+0x1c>
 704:	push	{r4, lr}
 708:	blx	r3
 70c:	pop	{r4, lr}
 710:	b	61c <register_tm_clones>
 714:	.word	0x00010818
 718:	.word	0x00010914
 71c:	.word	0x00000048

00000720 <mr_pass>:
 720:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 724:	add	fp, sp, #36	; 0x24
 728:	mov	sl, r3
 72c:	ldr	r3, [fp, #4]
 730:	mov	r4, r1
 734:	ldr	r8, [pc, #456]	; 904 <mr_pass+0x1e4>
 738:	ldr	r5, [r3, #4]
 73c:	add	r8, pc, r8
 740:	mov	r0, r5
 744:	bl	570 <strlen@plt>
 748:	mov	r1, r5
 74c:	add	r0, r0, #15
 750:	bic	r0, r0, #7
 754:	sub	sp, sp, r0
 758:	mov	r0, sp
 75c:	bl	54c <strcpy@plt>
 760:	ldr	r9, [r4, #432]	; 0x1b0
 764:	ldr	r3, [r9, #276]	; 0x114
 768:	cmp	r3, #0
 76c:	bne	8fc <mr_pass+0x1dc>
 770:	ldr	r7, [r9, #280]	; 0x118
 774:	cmp	r7, #0
 778:	bne	8fc <mr_pass+0x1dc>
 77c:	mov	r1, #58	; 0x3a
 780:	mov	r0, sp
 784:	bl	57c <strchr@plt>
 788:	mov	r6, sp
 78c:	subs	r5, r0, #0
 790:	addne	r2, r5, #1
 794:	movne	r6, r2
 798:	strbne	r7, [r5]
 79c:	ldrb	r2, [r6]
 7a0:	movne	r5, sp
 7a4:	cmp	r2, #0
 7a8:	beq	7cc <mr_pass+0xac>
 7ac:	mov	r0, #128	; 0x80
 7b0:	bl	558 <malloc@plt>
 7b4:	subs	r7, r0, #0
 7b8:	bne	7c0 <mr_pass+0xa0>
 7bc:	bl	540 <rb_outofmemory@plt>
 7c0:	mov	r2, #128	; 0x80
 7c4:	mov	r1, r6
 7c8:	bl	594 <rb_strlcpy@plt>
 7cc:	cmp	r5, #0
 7d0:	str	r7, [r9, #276]	; 0x114
 7d4:	beq	808 <mr_pass+0xe8>
 7d8:	ldrb	r3, [r5]
 7dc:	cmp	r3, #0
 7e0:	beq	808 <mr_pass+0xe8>
 7e4:	mov	r0, #128	; 0x80
 7e8:	ldr	r6, [r4, #432]	; 0x1b0
 7ec:	bl	558 <malloc@plt>
 7f0:	subs	r9, r0, #0
 7f4:	beq	7bc <mr_pass+0x9c>
 7f8:	mov	r2, #128	; 0x80
 7fc:	mov	r1, r5
 800:	bl	594 <rb_strlcpy@plt>
 804:	str	r9, [r6, #280]	; 0x118
 808:	cmp	sl, #2
 80c:	ble	8fc <mr_pass+0x1dc>
 810:	ldr	r3, [r4, #24]
 814:	cmp	r3, #0
 818:	bne	8fc <mr_pass+0x1dc>
 81c:	ldr	r3, [r4, #436]	; 0x1b4
 820:	cmp	r3, #0
 824:	beq	8fc <mr_pass+0x1dc>
 828:	ldr	r3, [fp, #4]
 82c:	ldr	r1, [pc, #212]	; 908 <mr_pass+0x1e8>
 830:	ldr	r0, [r3, #8]
 834:	add	r1, pc, r1
 838:	bl	5a0 <irccmp@plt>
 83c:	cmp	r0, #0
 840:	bne	854 <mr_pass+0x134>
 844:	ldr	r3, [r4, #52]	; 0x34
 848:	cmp	r3, #0
 84c:	moveq	r3, #268435456	; 0x10000000
 850:	streq	r3, [r4, #52]	; 0x34
 854:	cmp	sl, #5
 858:	bne	8fc <mr_pass+0x1dc>
 85c:	ldr	r3, [fp, #4]
 860:	ldr	r0, [r3, #12]
 864:	bl	588 <atoi@plt>
 868:	cmp	r0, #5
 86c:	ble	8fc <mr_pass+0x1dc>
 870:	ldr	r3, [fp, #4]
 874:	ldr	r1, [r3, #16]
 878:	ldr	r3, [pc, #140]	; 90c <mr_pass+0x1ec>
 87c:	ldrb	r2, [r1]
 880:	ldr	r3, [r8, r3]
 884:	ldr	r2, [r3, r2, lsl #2]
 888:	tst	r2, #16
 88c:	beq	8fc <mr_pass+0x1dc>
 890:	ldrb	r2, [r1, #1]
 894:	ldr	r0, [r3, r2, lsl #2]
 898:	ldr	r2, [pc, #112]	; 910 <mr_pass+0x1f0>
 89c:	tst	r0, r2
 8a0:	beq	8fc <mr_pass+0x1dc>
 8a4:	ldrb	r0, [r1, #2]
 8a8:	ldr	r3, [r3, r0, lsl #2]
 8ac:	tst	r3, r2
 8b0:	beq	8fc <mr_pass+0x1dc>
 8b4:	ldrb	r3, [r1, #3]
 8b8:	cmp	r3, #0
 8bc:	bne	8fc <mr_pass+0x1dc>
 8c0:	ldr	r3, [r4, #436]	; 0x1b4
 8c4:	adds	r0, r3, #260	; 0x104
 8c8:	beq	8d8 <mr_pass+0x1b8>
 8cc:	ldrb	r3, [r3, #260]	; 0x104
 8d0:	cmp	r3, #0
 8d4:	bne	8fc <mr_pass+0x1dc>
 8d8:	ldr	r3, [pc, #52]	; 914 <mr_pass+0x1f4>
 8dc:	ldr	r2, [r4, #432]	; 0x1b0
 8e0:	ldr	ip, [r8, r3]
 8e4:	ldr	r3, [r2, #296]	; 0x128
 8e8:	ldr	ip, [ip]
 8ec:	orr	r3, r3, ip
 8f0:	str	r3, [r2, #296]	; 0x128
 8f4:	mov	r2, #10
 8f8:	bl	594 <rb_strlcpy@plt>
 8fc:	sub	sp, fp, #36	; 0x24
 900:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 904:	.word	0x000108bc
 908:	.word	0x00000122
 90c:	.word	0x00000044
 910:	.word	0x00010010
 914:	.word	0x0000003c

Disassembly of section .fini:

00000918 <_fini>:
 918:	push	{r3, lr}
 91c:	pop	{r3, pc}
