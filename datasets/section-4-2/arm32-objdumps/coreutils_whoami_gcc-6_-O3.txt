
../repos/coreutils/src/whoami:     file format elf32-littlearm


Disassembly of section .init:

00010b44 <.init>:
   10b44:	push	{r3, lr}
   10b48:	bl	10f38 <abort@plt+0x1b8>
   10b4c:	pop	{r3, pc}

Disassembly of section .plt:

00010b50 <calloc@plt-0x14>:
   10b50:	push	{lr}		; (str lr, [sp, #-4]!)
   10b54:	ldr	lr, [pc, #4]	; 10b60 <calloc@plt-0x4>
   10b58:	add	lr, pc, lr
   10b5c:	ldr	pc, [lr, #8]!
   10b60:	andeq	r7, r1, r0, lsr #9

00010b64 <calloc@plt>:
   10b64:	add	ip, pc, #0, 12
   10b68:	add	ip, ip, #94208	; 0x17000
   10b6c:	ldr	pc, [ip, #1184]!	; 0x4a0

00010b70 <fputs_unlocked@plt>:
   10b70:	add	ip, pc, #0, 12
   10b74:	add	ip, ip, #94208	; 0x17000
   10b78:	ldr	pc, [ip, #1176]!	; 0x498

00010b7c <raise@plt>:
   10b7c:	add	ip, pc, #0, 12
   10b80:	add	ip, ip, #94208	; 0x17000
   10b84:	ldr	pc, [ip, #1168]!	; 0x490

00010b88 <strcmp@plt>:
   10b88:	add	ip, pc, #0, 12
   10b8c:	add	ip, ip, #94208	; 0x17000
   10b90:	ldr	pc, [ip, #1160]!	; 0x488

00010b94 <getpwuid@plt>:
   10b94:	add	ip, pc, #0, 12
   10b98:	add	ip, ip, #94208	; 0x17000
   10b9c:	ldr	pc, [ip, #1152]!	; 0x480

00010ba0 <fflush@plt>:
   10ba0:	add	ip, pc, #0, 12
   10ba4:	add	ip, ip, #94208	; 0x17000
   10ba8:	ldr	pc, [ip, #1144]!	; 0x478

00010bac <free@plt>:
   10bac:	add	ip, pc, #0, 12
   10bb0:	add	ip, ip, #94208	; 0x17000
   10bb4:	ldr	pc, [ip, #1136]!	; 0x470

00010bb8 <_exit@plt>:
   10bb8:	add	ip, pc, #0, 12
   10bbc:	add	ip, ip, #94208	; 0x17000
   10bc0:	ldr	pc, [ip, #1128]!	; 0x468

00010bc4 <memcpy@plt>:
   10bc4:	add	ip, pc, #0, 12
   10bc8:	add	ip, ip, #94208	; 0x17000
   10bcc:	ldr	pc, [ip, #1120]!	; 0x460

00010bd0 <mbsinit@plt>:
   10bd0:	add	ip, pc, #0, 12
   10bd4:	add	ip, ip, #94208	; 0x17000
   10bd8:	ldr	pc, [ip, #1112]!	; 0x458

00010bdc <memcmp@plt>:
   10bdc:	add	ip, pc, #0, 12
   10be0:	add	ip, ip, #94208	; 0x17000
   10be4:	ldr	pc, [ip, #1104]!	; 0x450

00010be8 <fputc_unlocked@plt>:
   10be8:	add	ip, pc, #0, 12
   10bec:	add	ip, ip, #94208	; 0x17000
   10bf0:	ldr	pc, [ip, #1096]!	; 0x448

00010bf4 <dcgettext@plt>:
   10bf4:	add	ip, pc, #0, 12
   10bf8:	add	ip, ip, #94208	; 0x17000
   10bfc:	ldr	pc, [ip, #1088]!	; 0x440

00010c00 <realloc@plt>:
   10c00:	add	ip, pc, #0, 12
   10c04:	add	ip, ip, #94208	; 0x17000
   10c08:	ldr	pc, [ip, #1080]!	; 0x438

00010c0c <textdomain@plt>:
   10c0c:	add	ip, pc, #0, 12
   10c10:	add	ip, ip, #94208	; 0x17000
   10c14:	ldr	pc, [ip, #1072]!	; 0x430

00010c18 <geteuid@plt>:
   10c18:	add	ip, pc, #0, 12
   10c1c:	add	ip, ip, #94208	; 0x17000
   10c20:	ldr	pc, [ip, #1064]!	; 0x428

00010c24 <iswprint@plt>:
   10c24:	add	ip, pc, #0, 12
   10c28:	add	ip, ip, #94208	; 0x17000
   10c2c:	ldr	pc, [ip, #1056]!	; 0x420

00010c30 <fwrite@plt>:
   10c30:	add	ip, pc, #0, 12
   10c34:	add	ip, ip, #94208	; 0x17000
   10c38:	ldr	pc, [ip, #1048]!	; 0x418

00010c3c <lseek64@plt>:
   10c3c:	add	ip, pc, #0, 12
   10c40:	add	ip, ip, #94208	; 0x17000
   10c44:	ldr	pc, [ip, #1040]!	; 0x410

00010c48 <__ctype_get_mb_cur_max@plt>:
   10c48:	add	ip, pc, #0, 12
   10c4c:	add	ip, ip, #94208	; 0x17000
   10c50:	ldr	pc, [ip, #1032]!	; 0x408

00010c54 <__fpending@plt>:
   10c54:	add	ip, pc, #0, 12
   10c58:	add	ip, ip, #94208	; 0x17000
   10c5c:	ldr	pc, [ip, #1024]!	; 0x400

00010c60 <mbrtowc@plt>:
   10c60:	add	ip, pc, #0, 12
   10c64:	add	ip, ip, #94208	; 0x17000
   10c68:	ldr	pc, [ip, #1016]!	; 0x3f8

00010c6c <error@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #94208	; 0x17000
   10c74:	ldr	pc, [ip, #1008]!	; 0x3f0

00010c78 <puts@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #94208	; 0x17000
   10c80:	ldr	pc, [ip, #1000]!	; 0x3e8

00010c84 <malloc@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #94208	; 0x17000
   10c8c:	ldr	pc, [ip, #992]!	; 0x3e0

00010c90 <__libc_start_main@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #94208	; 0x17000
   10c98:	ldr	pc, [ip, #984]!	; 0x3d8

00010c9c <__freading@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #94208	; 0x17000
   10ca4:	ldr	pc, [ip, #976]!	; 0x3d0

00010ca8 <__gmon_start__@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #94208	; 0x17000
   10cb0:	ldr	pc, [ip, #968]!	; 0x3c8

00010cb4 <getopt_long@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #94208	; 0x17000
   10cbc:	ldr	pc, [ip, #960]!	; 0x3c0

00010cc0 <__ctype_b_loc@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #94208	; 0x17000
   10cc8:	ldr	pc, [ip, #952]!	; 0x3b8

00010ccc <exit@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #94208	; 0x17000
   10cd4:	ldr	pc, [ip, #944]!	; 0x3b0

00010cd8 <strlen@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #94208	; 0x17000
   10ce0:	ldr	pc, [ip, #936]!	; 0x3a8

00010ce4 <__errno_location@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #94208	; 0x17000
   10cec:	ldr	pc, [ip, #928]!	; 0x3a0

00010cf0 <__cxa_atexit@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #94208	; 0x17000
   10cf8:	ldr	pc, [ip, #920]!	; 0x398

00010cfc <memset@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #94208	; 0x17000
   10d04:	ldr	pc, [ip, #912]!	; 0x390

00010d08 <__printf_chk@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #94208	; 0x17000
   10d10:	ldr	pc, [ip, #904]!	; 0x388

00010d14 <fileno@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #94208	; 0x17000
   10d1c:	ldr	pc, [ip, #896]!	; 0x380

00010d20 <__fprintf_chk@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #94208	; 0x17000
   10d28:	ldr	pc, [ip, #888]!	; 0x378

00010d2c <fclose@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #94208	; 0x17000
   10d34:	ldr	pc, [ip, #880]!	; 0x370

00010d38 <fseeko64@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #94208	; 0x17000
   10d40:	ldr	pc, [ip, #872]!	; 0x368

00010d44 <setlocale@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #94208	; 0x17000
   10d4c:	ldr	pc, [ip, #864]!	; 0x360

00010d50 <strrchr@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #94208	; 0x17000
   10d58:	ldr	pc, [ip, #856]!	; 0x358

00010d5c <nl_langinfo@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #94208	; 0x17000
   10d64:	ldr	pc, [ip, #848]!	; 0x350

00010d68 <bindtextdomain@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #94208	; 0x17000
   10d70:	ldr	pc, [ip, #840]!	; 0x348

00010d74 <strncmp@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #94208	; 0x17000
   10d7c:	ldr	pc, [ip, #832]!	; 0x340

00010d80 <abort@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #94208	; 0x17000
   10d88:	ldr	pc, [ip, #824]!	; 0x338

Disassembly of section .text:

00010d8c <.text>:
   10d8c:	push	{r4, r5, r6, r7, r8, lr}
   10d90:	mov	r6, r0
   10d94:	sub	sp, sp, #24
   10d98:	ldr	r0, [r1]
   10d9c:	mov	r5, r1
   10da0:	bl	11580 <abort@plt+0x800>
   10da4:	ldr	r1, [pc, #288]	; 10ecc <abort@plt+0x14c>
   10da8:	mov	r0, #6
   10dac:	bl	10d44 <setlocale@plt>
   10db0:	ldr	r1, [pc, #280]	; 10ed0 <abort@plt+0x150>
   10db4:	ldr	r0, [pc, #280]	; 10ed4 <abort@plt+0x154>
   10db8:	bl	10d68 <bindtextdomain@plt>
   10dbc:	ldr	r0, [pc, #272]	; 10ed4 <abort@plt+0x154>
   10dc0:	bl	10c0c <textdomain@plt>
   10dc4:	ldr	r0, [pc, #268]	; 10ed8 <abort@plt+0x158>
   10dc8:	bl	1705c <abort@plt+0x62dc>
   10dcc:	ldr	r1, [pc, #264]	; 10edc <abort@plt+0x15c>
   10dd0:	ldr	r2, [pc, #264]	; 10ee0 <abort@plt+0x160>
   10dd4:	ldr	r3, [pc, #264]	; 10ee4 <abort@plt+0x164>
   10dd8:	ldr	r1, [r1]
   10ddc:	ldr	r8, [pc, #260]	; 10ee8 <abort@plt+0x168>
   10de0:	mov	r4, #0
   10de4:	mov	r7, #1
   10de8:	str	r1, [sp]
   10dec:	str	r2, [sp, #12]
   10df0:	str	r3, [sp, #8]
   10df4:	mov	r1, r5
   10df8:	ldr	r3, [pc, #236]	; 10eec <abort@plt+0x16c>
   10dfc:	mov	r0, r6
   10e00:	str	r4, [sp, #16]
   10e04:	str	r7, [sp, #4]
   10e08:	ldr	r2, [pc, #224]	; 10ef0 <abort@plt+0x170>
   10e0c:	bl	114a8 <abort@plt+0x728>
   10e10:	ldr	r3, [r8]
   10e14:	cmp	r6, r3
   10e18:	bne	10e90 <abort@plt+0x110>
   10e1c:	bl	10ce4 <__errno_location@plt>
   10e20:	str	r4, [r0]
   10e24:	mov	r5, r0
   10e28:	bl	10c18 <geteuid@plt>
   10e2c:	cmn	r0, #1
   10e30:	mov	r4, r0
   10e34:	beq	10e60 <abort@plt+0xe0>
   10e38:	mov	r0, r4
   10e3c:	bl	10b94 <getpwuid@plt>
   10e40:	cmp	r0, #0
   10e44:	ldreq	r6, [r5]
   10e48:	beq	10e6c <abort@plt+0xec>
   10e4c:	ldr	r0, [r0]
   10e50:	bl	10c78 <puts@plt>
   10e54:	mov	r0, #0
   10e58:	add	sp, sp, #24
   10e5c:	pop	{r4, r5, r6, r7, r8, pc}
   10e60:	ldr	r6, [r5]
   10e64:	cmp	r6, #0
   10e68:	beq	10e38 <abort@plt+0xb8>
   10e6c:	mov	r2, #5
   10e70:	ldr	r1, [pc, #124]	; 10ef4 <abort@plt+0x174>
   10e74:	mov	r0, #0
   10e78:	bl	10bf4 <dcgettext@plt>
   10e7c:	mov	r3, r4
   10e80:	mov	r1, r6
   10e84:	mov	r2, r0
   10e88:	mov	r0, #1
   10e8c:	bl	10c6c <error@plt>
   10e90:	mov	r2, #5
   10e94:	ldr	r1, [pc, #92]	; 10ef8 <abort@plt+0x178>
   10e98:	mov	r0, r4
   10e9c:	bl	10bf4 <dcgettext@plt>
   10ea0:	ldr	r3, [r8]
   10ea4:	mov	r6, r0
   10ea8:	ldr	r0, [r5, r3, lsl #2]
   10eac:	bl	1544c <abort@plt+0x46cc>
   10eb0:	mov	r2, r6
   10eb4:	mov	r1, r4
   10eb8:	mov	r3, r0
   10ebc:	mov	r0, r4
   10ec0:	bl	10c6c <error@plt>
   10ec4:	mov	r0, r7
   10ec8:	bl	11024 <abort@plt+0x2a4>
   10ecc:	andeq	r7, r1, r4, asr r1
   10ed0:	andeq	r7, r1, ip, lsr #5
   10ed4:	andeq	r7, r1, r4, lsl #4
   10ed8:	andeq	r1, r1, ip, lsl #6
   10edc:	ldrdeq	r8, [r2], -r0
   10ee0:	andeq	r7, r1, r4, asr #5
   10ee4:	andeq	r1, r1, r4, lsr #32
   10ee8:	andeq	r8, r2, r0, lsr #2
   10eec:	andeq	r7, r1, r0, lsl #4
   10ef0:	strheq	r7, [r1], -r8
   10ef4:	andeq	r7, r1, ip, ror #5
   10ef8:	ldrdeq	r7, [r1], -r8
   10efc:	mov	fp, #0
   10f00:	mov	lr, #0
   10f04:	pop	{r1}		; (ldr r1, [sp], #4)
   10f08:	mov	r2, sp
   10f0c:	push	{r2}		; (str r2, [sp, #-4]!)
   10f10:	push	{r0}		; (str r0, [sp, #-4]!)
   10f14:	ldr	ip, [pc, #16]	; 10f2c <abort@plt+0x1ac>
   10f18:	push	{ip}		; (str ip, [sp, #-4]!)
   10f1c:	ldr	r0, [pc, #12]	; 10f30 <abort@plt+0x1b0>
   10f20:	ldr	r3, [pc, #12]	; 10f34 <abort@plt+0x1b4>
   10f24:	bl	10c90 <__libc_start_main@plt>
   10f28:	bl	10d80 <abort@plt>
   10f2c:	andeq	r7, r1, r8, asr r0
   10f30:	andeq	r0, r1, ip, lsl #27
   10f34:	strdeq	r6, [r1], -r8
   10f38:	ldr	r3, [pc, #20]	; 10f54 <abort@plt+0x1d4>
   10f3c:	ldr	r2, [pc, #20]	; 10f58 <abort@plt+0x1d8>
   10f40:	add	r3, pc, r3
   10f44:	ldr	r2, [r3, r2]
   10f48:	cmp	r2, #0
   10f4c:	bxeq	lr
   10f50:	b	10ca8 <__gmon_start__@plt>
   10f54:	strheq	r7, [r1], -r8
   10f58:	andeq	r0, r0, r4, asr #1
   10f5c:	ldr	r3, [pc, #28]	; 10f80 <abort@plt+0x200>
   10f60:	ldr	r0, [pc, #28]	; 10f84 <abort@plt+0x204>
   10f64:	sub	r3, r3, r0
   10f68:	cmp	r3, #6
   10f6c:	bxls	lr
   10f70:	ldr	r3, [pc, #16]	; 10f88 <abort@plt+0x208>
   10f74:	cmp	r3, #0
   10f78:	bxeq	lr
   10f7c:	bx	r3
   10f80:	andeq	r8, r2, fp, lsl r1
   10f84:	andeq	r8, r2, r8, lsl r1
   10f88:	andeq	r0, r0, r0
   10f8c:	ldr	r1, [pc, #36]	; 10fb8 <abort@plt+0x238>
   10f90:	ldr	r0, [pc, #36]	; 10fbc <abort@plt+0x23c>
   10f94:	sub	r1, r1, r0
   10f98:	asr	r1, r1, #2
   10f9c:	add	r1, r1, r1, lsr #31
   10fa0:	asrs	r1, r1, #1
   10fa4:	bxeq	lr
   10fa8:	ldr	r3, [pc, #16]	; 10fc0 <abort@plt+0x240>
   10fac:	cmp	r3, #0
   10fb0:	bxeq	lr
   10fb4:	bx	r3
   10fb8:	andeq	r8, r2, r8, lsl r1
   10fbc:	andeq	r8, r2, r8, lsl r1
   10fc0:	andeq	r0, r0, r0
   10fc4:	push	{r4, lr}
   10fc8:	ldr	r4, [pc, #24]	; 10fe8 <abort@plt+0x268>
   10fcc:	ldrb	r3, [r4]
   10fd0:	cmp	r3, #0
   10fd4:	popne	{r4, pc}
   10fd8:	bl	10f5c <abort@plt+0x1dc>
   10fdc:	mov	r3, #1
   10fe0:	strb	r3, [r4]
   10fe4:	pop	{r4, pc}
   10fe8:	andeq	r8, r2, r4, lsr r1
   10fec:	ldr	r0, [pc, #40]	; 1101c <abort@plt+0x29c>
   10ff0:	ldr	r3, [r0]
   10ff4:	cmp	r3, #0
   10ff8:	bne	11000 <abort@plt+0x280>
   10ffc:	b	10f8c <abort@plt+0x20c>
   11000:	ldr	r3, [pc, #24]	; 11020 <abort@plt+0x2a0>
   11004:	cmp	r3, #0
   11008:	beq	10ffc <abort@plt+0x27c>
   1100c:	push	{r4, lr}
   11010:	blx	r3
   11014:	pop	{r4, lr}
   11018:	b	10f8c <abort@plt+0x20c>
   1101c:	andeq	r7, r2, r4, lsl pc
   11020:	andeq	r0, r0, r0
   11024:	subs	r6, r0, #0
   11028:	push	{r7, lr}
   1102c:	sub	sp, sp, #56	; 0x38
   11030:	beq	1106c <abort@plt+0x2ec>
   11034:	ldr	r3, [pc, #612]	; 112a0 <abort@plt+0x520>
   11038:	mov	r2, #5
   1103c:	ldr	r1, [pc, #608]	; 112a4 <abort@plt+0x524>
   11040:	mov	r0, #0
   11044:	ldr	r4, [r3]
   11048:	bl	10bf4 <dcgettext@plt>
   1104c:	ldr	r3, [pc, #596]	; 112a8 <abort@plt+0x528>
   11050:	mov	r1, #1
   11054:	ldr	r3, [r3]
   11058:	mov	r2, r0
   1105c:	mov	r0, r4
   11060:	bl	10d20 <__fprintf_chk@plt>
   11064:	mov	r0, r6
   11068:	bl	10ccc <exit@plt>
   1106c:	mov	r2, #5
   11070:	ldr	r1, [pc, #564]	; 112ac <abort@plt+0x52c>
   11074:	bl	10bf4 <dcgettext@plt>
   11078:	ldr	r3, [pc, #552]	; 112a8 <abort@plt+0x528>
   1107c:	ldr	r7, [pc, #556]	; 112b0 <abort@plt+0x530>
   11080:	ldr	r4, [pc, #556]	; 112b4 <abort@plt+0x534>
   11084:	ldr	r2, [r3]
   11088:	mov	r1, r0
   1108c:	mov	r0, #1
   11090:	bl	10d08 <__printf_chk@plt>
   11094:	mov	r2, #5
   11098:	ldr	r1, [pc, #536]	; 112b8 <abort@plt+0x538>
   1109c:	mov	r0, r6
   110a0:	bl	10bf4 <dcgettext@plt>
   110a4:	ldr	r1, [r7]
   110a8:	bl	10b70 <fputs_unlocked@plt>
   110ac:	mov	r2, #5
   110b0:	ldr	r1, [pc, #516]	; 112bc <abort@plt+0x53c>
   110b4:	mov	r0, r6
   110b8:	bl	10bf4 <dcgettext@plt>
   110bc:	ldr	r1, [r7]
   110c0:	bl	10b70 <fputs_unlocked@plt>
   110c4:	mov	r2, #5
   110c8:	ldr	r1, [pc, #496]	; 112c0 <abort@plt+0x540>
   110cc:	mov	r0, r6
   110d0:	bl	10bf4 <dcgettext@plt>
   110d4:	ldr	r1, [r7]
   110d8:	bl	10b70 <fputs_unlocked@plt>
   110dc:	ldm	r4!, {r0, r1, r2, r3}
   110e0:	mov	lr, sp
   110e4:	stmia	lr!, {r0, r1, r2, r3}
   110e8:	ldm	r4!, {r0, r1, r2, r3}
   110ec:	ldr	ip, [sp]
   110f0:	stmia	lr!, {r0, r1, r2, r3}
   110f4:	cmp	ip, #0
   110f8:	ldm	r4!, {r0, r1, r2, r3}
   110fc:	stmia	lr!, {r0, r1, r2, r3}
   11100:	ldm	r4, {r0, r1}
   11104:	moveq	r4, sp
   11108:	stm	lr, {r0, r1}
   1110c:	beq	1113c <abort@plt+0x3bc>
   11110:	ldr	r5, [pc, #428]	; 112c4 <abort@plt+0x544>
   11114:	mov	r4, sp
   11118:	b	11128 <abort@plt+0x3a8>
   1111c:	ldr	ip, [r4, #8]!
   11120:	cmp	ip, #0
   11124:	beq	1113c <abort@plt+0x3bc>
   11128:	mov	r1, ip
   1112c:	mov	r0, r5
   11130:	bl	10b88 <strcmp@plt>
   11134:	cmp	r0, #0
   11138:	bne	1111c <abort@plt+0x39c>
   1113c:	ldr	r4, [r4, #4]
   11140:	mov	r2, #5
   11144:	cmp	r4, #0
   11148:	ldr	r1, [pc, #376]	; 112c8 <abort@plt+0x548>
   1114c:	beq	111f4 <abort@plt+0x474>
   11150:	mov	r0, #0
   11154:	bl	10bf4 <dcgettext@plt>
   11158:	ldr	r3, [pc, #364]	; 112cc <abort@plt+0x54c>
   1115c:	ldr	r2, [pc, #364]	; 112d0 <abort@plt+0x550>
   11160:	mov	r1, r0
   11164:	mov	r0, #1
   11168:	bl	10d08 <__printf_chk@plt>
   1116c:	mov	r1, #0
   11170:	mov	r0, #5
   11174:	bl	10d44 <setlocale@plt>
   11178:	cmp	r0, #0
   1117c:	ldreq	r5, [pc, #320]	; 112c4 <abort@plt+0x544>
   11180:	beq	1119c <abort@plt+0x41c>
   11184:	mov	r2, #3
   11188:	ldr	r1, [pc, #324]	; 112d4 <abort@plt+0x554>
   1118c:	bl	10d74 <strncmp@plt>
   11190:	ldr	r5, [pc, #300]	; 112c4 <abort@plt+0x544>
   11194:	cmp	r0, #0
   11198:	bne	11284 <abort@plt+0x504>
   1119c:	mov	r2, #5
   111a0:	ldr	r1, [pc, #304]	; 112d8 <abort@plt+0x558>
   111a4:	mov	r0, #0
   111a8:	bl	10bf4 <dcgettext@plt>
   111ac:	ldr	r3, [pc, #272]	; 112c4 <abort@plt+0x544>
   111b0:	ldr	r2, [pc, #276]	; 112cc <abort@plt+0x54c>
   111b4:	mov	r1, r0
   111b8:	mov	r0, #1
   111bc:	bl	10d08 <__printf_chk@plt>
   111c0:	mov	r2, #5
   111c4:	ldr	r1, [pc, #272]	; 112dc <abort@plt+0x55c>
   111c8:	mov	r0, #0
   111cc:	bl	10bf4 <dcgettext@plt>
   111d0:	ldr	r2, [pc, #264]	; 112e0 <abort@plt+0x560>
   111d4:	cmp	r4, r5
   111d8:	ldr	r3, [pc, #260]	; 112e4 <abort@plt+0x564>
   111dc:	movne	r3, r2
   111e0:	mov	r1, r0
   111e4:	mov	r2, r4
   111e8:	mov	r0, #1
   111ec:	bl	10d08 <__printf_chk@plt>
   111f0:	b	11064 <abort@plt+0x2e4>
   111f4:	mov	r0, r4
   111f8:	bl	10bf4 <dcgettext@plt>
   111fc:	ldr	r3, [pc, #200]	; 112cc <abort@plt+0x54c>
   11200:	ldr	r2, [pc, #200]	; 112d0 <abort@plt+0x550>
   11204:	mov	r1, r0
   11208:	mov	r0, #1
   1120c:	bl	10d08 <__printf_chk@plt>
   11210:	mov	r1, r4
   11214:	mov	r0, #5
   11218:	bl	10d44 <setlocale@plt>
   1121c:	cmp	r0, #0
   11220:	beq	11238 <abort@plt+0x4b8>
   11224:	mov	r2, #3
   11228:	ldr	r1, [pc, #164]	; 112d4 <abort@plt+0x554>
   1122c:	bl	10d74 <strncmp@plt>
   11230:	cmp	r0, #0
   11234:	bne	1127c <abort@plt+0x4fc>
   11238:	mov	r2, #5
   1123c:	ldr	r1, [pc, #148]	; 112d8 <abort@plt+0x558>
   11240:	mov	r0, #0
   11244:	bl	10bf4 <dcgettext@plt>
   11248:	ldr	r3, [pc, #116]	; 112c4 <abort@plt+0x544>
   1124c:	ldr	r2, [pc, #120]	; 112cc <abort@plt+0x54c>
   11250:	mov	r4, r3
   11254:	mov	r1, r0
   11258:	mov	r0, #1
   1125c:	bl	10d08 <__printf_chk@plt>
   11260:	ldr	r1, [pc, #116]	; 112dc <abort@plt+0x55c>
   11264:	mov	r2, #5
   11268:	mov	r0, #0
   1126c:	bl	10bf4 <dcgettext@plt>
   11270:	ldr	r3, [pc, #108]	; 112e4 <abort@plt+0x564>
   11274:	mov	r1, r0
   11278:	b	111e4 <abort@plt+0x464>
   1127c:	ldr	r5, [pc, #64]	; 112c4 <abort@plt+0x544>
   11280:	mov	r4, r5
   11284:	mov	r2, #5
   11288:	ldr	r1, [pc, #88]	; 112e8 <abort@plt+0x568>
   1128c:	mov	r0, #0
   11290:	bl	10bf4 <dcgettext@plt>
   11294:	ldr	r1, [r7]
   11298:	bl	10b70 <fputs_unlocked@plt>
   1129c:	b	1119c <abort@plt+0x41c>
   112a0:	andeq	r8, r2, r8, lsr #2
   112a4:	andeq	r7, r1, r0, asr #1
   112a8:	andeq	r8, r2, r0, asr #2
   112ac:	andeq	r7, r1, r8, ror #1
   112b0:	andeq	r8, r2, ip, lsr #2
   112b4:	andeq	r7, r1, r0, lsl #1
   112b8:	andeq	r7, r1, r0, lsl #2
   112bc:	andeq	r7, r1, r8, asr r1
   112c0:	andeq	r7, r1, r8, lsl #3
   112c4:	strheq	r7, [r1], -r8
   112c8:	andeq	r7, r1, r0, asr #3
   112cc:	ldrdeq	r7, [r1], -r8
   112d0:	andeq	r7, r1, r0, lsl #4
   112d4:	andeq	r7, r1, r0, lsl r2
   112d8:	andeq	r7, r1, ip, asr r2
   112dc:	andeq	r7, r1, r8, ror r2
   112e0:	andeq	r7, r1, r4, asr r1
   112e4:	andeq	r7, r1, r8, lsl r3
   112e8:	andeq	r7, r1, r4, lsl r2
   112ec:	ldr	r3, [pc, #4]	; 112f8 <abort@plt+0x578>
   112f0:	str	r0, [r3]
   112f4:	bx	lr
   112f8:	andeq	r8, r2, r8, lsr r1
   112fc:	ldr	r3, [pc, #4]	; 11308 <abort@plt+0x588>
   11300:	strb	r0, [r3, #4]
   11304:	bx	lr
   11308:	andeq	r8, r2, r8, lsr r1
   1130c:	ldr	r3, [pc, #192]	; 113d4 <abort@plt+0x654>
   11310:	push	{r4, r5, r6, lr}
   11314:	sub	sp, sp, #8
   11318:	ldr	r0, [r3]
   1131c:	bl	16760 <abort@plt+0x59e0>
   11320:	cmp	r0, #0
   11324:	beq	11348 <abort@plt+0x5c8>
   11328:	ldr	r4, [pc, #168]	; 113d8 <abort@plt+0x658>
   1132c:	ldrb	r3, [r4, #4]
   11330:	cmp	r3, #0
   11334:	beq	11364 <abort@plt+0x5e4>
   11338:	bl	10ce4 <__errno_location@plt>
   1133c:	ldr	r3, [r0]
   11340:	cmp	r3, #32
   11344:	bne	11364 <abort@plt+0x5e4>
   11348:	ldr	r3, [pc, #140]	; 113dc <abort@plt+0x65c>
   1134c:	ldr	r0, [r3]
   11350:	bl	16760 <abort@plt+0x59e0>
   11354:	cmp	r0, #0
   11358:	bne	113ac <abort@plt+0x62c>
   1135c:	add	sp, sp, #8
   11360:	pop	{r4, r5, r6, pc}
   11364:	mov	r2, #5
   11368:	ldr	r1, [pc, #112]	; 113e0 <abort@plt+0x660>
   1136c:	mov	r0, #0
   11370:	bl	10bf4 <dcgettext@plt>
   11374:	ldr	r4, [r4]
   11378:	cmp	r4, #0
   1137c:	mov	r5, r0
   11380:	beq	113b8 <abort@plt+0x638>
   11384:	bl	10ce4 <__errno_location@plt>
   11388:	ldr	r6, [r0]
   1138c:	mov	r0, r4
   11390:	bl	141ec <abort@plt+0x346c>
   11394:	mov	r1, r6
   11398:	str	r5, [sp]
   1139c:	ldr	r2, [pc, #64]	; 113e4 <abort@plt+0x664>
   113a0:	mov	r3, r0
   113a4:	mov	r0, #0
   113a8:	bl	10c6c <error@plt>
   113ac:	ldr	r3, [pc, #52]	; 113e8 <abort@plt+0x668>
   113b0:	ldr	r0, [r3]
   113b4:	bl	10bb8 <_exit@plt>
   113b8:	bl	10ce4 <__errno_location@plt>
   113bc:	mov	r3, r5
   113c0:	ldr	r2, [pc, #36]	; 113ec <abort@plt+0x66c>
   113c4:	ldr	r1, [r0]
   113c8:	mov	r0, r4
   113cc:	bl	10c6c <error@plt>
   113d0:	b	113ac <abort@plt+0x62c>
   113d4:	andeq	r8, r2, ip, lsr #2
   113d8:	andeq	r8, r2, r8, lsr r1
   113dc:	andeq	r8, r2, r8, lsr #2
   113e0:	andeq	r7, r1, ip, lsl #7
   113e4:	muleq	r1, r8, r3
   113e8:	ldrdeq	r8, [r2], -r4
   113ec:	muleq	r1, ip, r3
   113f0:	push	{r4, r5, r6, r7, r8, lr}
   113f4:	cmp	r0, #2
   113f8:	ldr	r4, [pc, #148]	; 11494 <abort@plt+0x714>
   113fc:	mov	r5, #0
   11400:	sub	sp, sp, #16
   11404:	ldr	r6, [r4]
   11408:	str	r5, [r4]
   1140c:	beq	11428 <abort@plt+0x6a8>
   11410:	ldr	r3, [pc, #128]	; 11498 <abort@plt+0x718>
   11414:	mov	r2, #0
   11418:	str	r6, [r4]
   1141c:	str	r2, [r3]
   11420:	add	sp, sp, #16
   11424:	pop	{r4, r5, r6, r7, r8, pc}
   11428:	mov	r8, r3
   1142c:	mov	r7, r2
   11430:	str	r5, [sp]
   11434:	ldr	r3, [pc, #96]	; 1149c <abort@plt+0x71c>
   11438:	ldr	r2, [pc, #96]	; 114a0 <abort@plt+0x720>
   1143c:	bl	10cb4 <getopt_long@plt>
   11440:	cmn	r0, #1
   11444:	beq	11410 <abort@plt+0x690>
   11448:	cmp	r0, #104	; 0x68
   1144c:	beq	11484 <abort@plt+0x704>
   11450:	cmp	r0, #118	; 0x76
   11454:	bne	11410 <abort@plt+0x690>
   11458:	ldr	r3, [pc, #68]	; 114a4 <abort@plt+0x724>
   1145c:	add	ip, sp, #48	; 0x30
   11460:	mov	r2, r8
   11464:	ldr	r0, [r3]
   11468:	mov	r1, r7
   1146c:	str	ip, [sp]
   11470:	ldr	r3, [sp, #40]	; 0x28
   11474:	str	ip, [sp, #12]
   11478:	bl	159a4 <abort@plt+0x4c24>
   1147c:	mov	r0, r5
   11480:	bl	10ccc <exit@plt>
   11484:	mov	r0, r5
   11488:	ldr	r3, [sp, #44]	; 0x2c
   1148c:	blx	r3
   11490:	b	11410 <abort@plt+0x690>
   11494:	andeq	r8, r2, r0, lsr r1
   11498:	andeq	r8, r2, r0, lsr #2
   1149c:	andeq	r7, r1, r0, lsr #7
   114a0:	ldrdeq	r7, [r1], -r0
   114a4:	andeq	r8, r2, ip, lsr #2
   114a8:	push	{r4, r5, r6, r7, r8, lr}
   114ac:	sub	sp, sp, #16
   114b0:	ldr	r5, [pc, #176]	; 11568 <abort@plt+0x7e8>
   114b4:	ldrb	r8, [sp, #44]	; 0x2c
   114b8:	ldr	r4, [pc, #172]	; 1156c <abort@plt+0x7ec>
   114bc:	ldr	lr, [pc, #172]	; 11570 <abort@plt+0x7f0>
   114c0:	cmp	r8, #0
   114c4:	mov	r6, r2
   114c8:	movne	r2, r5
   114cc:	mov	r5, #0
   114d0:	mov	ip, #1
   114d4:	moveq	r2, lr
   114d8:	mov	r7, r3
   114dc:	str	r5, [sp]
   114e0:	ldr	r3, [pc, #140]	; 11574 <abort@plt+0x7f4>
   114e4:	ldr	r8, [r4]
   114e8:	str	ip, [r4]
   114ec:	bl	10cb4 <getopt_long@plt>
   114f0:	cmn	r0, #1
   114f4:	beq	11544 <abort@plt+0x7c4>
   114f8:	cmp	r0, #104	; 0x68
   114fc:	beq	11550 <abort@plt+0x7d0>
   11500:	cmp	r0, #118	; 0x76
   11504:	bne	11534 <abort@plt+0x7b4>
   11508:	ldr	r3, [pc, #104]	; 11578 <abort@plt+0x7f8>
   1150c:	add	ip, sp, #52	; 0x34
   11510:	mov	r2, r7
   11514:	ldr	r0, [r3]
   11518:	mov	r1, r6
   1151c:	str	ip, [sp]
   11520:	ldr	r3, [sp, #40]	; 0x28
   11524:	str	ip, [sp, #12]
   11528:	bl	159a4 <abort@plt+0x4c24>
   1152c:	mov	r0, r5
   11530:	bl	10ccc <exit@plt>
   11534:	ldr	r3, [pc, #64]	; 1157c <abort@plt+0x7fc>
   11538:	ldr	r0, [r3]
   1153c:	ldr	r3, [sp, #48]	; 0x30
   11540:	blx	r3
   11544:	str	r8, [r4]
   11548:	add	sp, sp, #16
   1154c:	pop	{r4, r5, r6, r7, r8, pc}
   11550:	mov	r0, r5
   11554:	ldr	r3, [sp, #48]	; 0x30
   11558:	blx	r3
   1155c:	str	r8, [r4]
   11560:	add	sp, sp, #16
   11564:	pop	{r4, r5, r6, r7, r8, pc}
   11568:	andeq	r7, r1, r4, asr r1
   1156c:	andeq	r8, r2, r0, lsr r1
   11570:	ldrdeq	r7, [r1], -r0
   11574:	andeq	r7, r1, r0, lsr #7
   11578:	andeq	r8, r2, ip, lsr #2
   1157c:	ldrdeq	r8, [r2], -r4
   11580:	push	{r4, r5, r6, lr}
   11584:	subs	r4, r0, #0
   11588:	beq	115fc <abort@plt+0x87c>
   1158c:	mov	r1, #47	; 0x2f
   11590:	bl	10d50 <strrchr@plt>
   11594:	subs	r5, r0, #0
   11598:	beq	115e8 <abort@plt+0x868>
   1159c:	add	r6, r5, #1
   115a0:	sub	r3, r6, r4
   115a4:	cmp	r3, #6
   115a8:	ble	115e8 <abort@plt+0x868>
   115ac:	mov	r2, #7
   115b0:	ldr	r1, [pc, #96]	; 11618 <abort@plt+0x898>
   115b4:	sub	r0, r5, #6
   115b8:	bl	10d74 <strncmp@plt>
   115bc:	cmp	r0, #0
   115c0:	bne	115e8 <abort@plt+0x868>
   115c4:	mov	r2, #3
   115c8:	ldr	r1, [pc, #76]	; 1161c <abort@plt+0x89c>
   115cc:	mov	r0, r6
   115d0:	bl	10d74 <strncmp@plt>
   115d4:	cmp	r0, #0
   115d8:	movne	r4, r6
   115dc:	ldreq	r3, [pc, #60]	; 11620 <abort@plt+0x8a0>
   115e0:	addeq	r4, r5, #4
   115e4:	streq	r4, [r3]
   115e8:	ldr	r2, [pc, #52]	; 11624 <abort@plt+0x8a4>
   115ec:	ldr	r3, [pc, #52]	; 11628 <abort@plt+0x8a8>
   115f0:	str	r4, [r2]
   115f4:	str	r4, [r3]
   115f8:	pop	{r4, r5, r6, pc}
   115fc:	ldr	r3, [pc, #40]	; 1162c <abort@plt+0x8ac>
   11600:	mov	r2, #55	; 0x37
   11604:	mov	r1, #1
   11608:	ldr	r3, [r3]
   1160c:	ldr	r0, [pc, #28]	; 11630 <abort@plt+0x8b0>
   11610:	bl	10c30 <fwrite@plt>
   11614:	bl	10d80 <abort@plt>
   11618:	andeq	r7, r1, ip, lsl r4
   1161c:	andeq	r7, r1, r4, lsr #8
   11620:	andeq	r8, r2, r8, lsl r1
   11624:	andeq	r8, r2, r0, asr #2
   11628:	andeq	r8, r2, ip, lsl r1
   1162c:	andeq	r8, r2, r8, lsr #2
   11630:	andeq	r7, r1, r4, ror #7
   11634:	push	{r4, r5, r6, lr}
   11638:	mov	r4, r0
   1163c:	mov	r5, r1
   11640:	bl	169d4 <abort@plt+0x5c54>
   11644:	ldrb	r3, [r0]
   11648:	bic	r3, r3, #32
   1164c:	cmp	r3, #85	; 0x55
   11650:	bne	116b0 <abort@plt+0x930>
   11654:	ldrb	r3, [r0, #1]
   11658:	bic	r3, r3, #32
   1165c:	cmp	r3, #84	; 0x54
   11660:	bne	116ec <abort@plt+0x96c>
   11664:	ldrb	r3, [r0, #2]
   11668:	bic	r3, r3, #32
   1166c:	cmp	r3, #70	; 0x46
   11670:	bne	116ec <abort@plt+0x96c>
   11674:	ldrb	r3, [r0, #3]
   11678:	cmp	r3, #45	; 0x2d
   1167c:	bne	116ec <abort@plt+0x96c>
   11680:	ldrb	r3, [r0, #4]
   11684:	cmp	r3, #56	; 0x38
   11688:	bne	116ec <abort@plt+0x96c>
   1168c:	ldrb	r3, [r0, #5]
   11690:	cmp	r3, #0
   11694:	bne	116ec <abort@plt+0x96c>
   11698:	ldrb	r2, [r4]
   1169c:	ldr	r3, [pc, #152]	; 1173c <abort@plt+0x9bc>
   116a0:	ldr	r0, [pc, #152]	; 11740 <abort@plt+0x9c0>
   116a4:	cmp	r2, #96	; 0x60
   116a8:	movne	r0, r3
   116ac:	pop	{r4, r5, r6, pc}
   116b0:	cmp	r3, #71	; 0x47
   116b4:	bne	116ec <abort@plt+0x96c>
   116b8:	ldrb	r3, [r0, #1]
   116bc:	bic	r3, r3, #32
   116c0:	cmp	r3, #66	; 0x42
   116c4:	bne	116ec <abort@plt+0x96c>
   116c8:	ldrb	r3, [r0, #2]
   116cc:	cmp	r3, #49	; 0x31
   116d0:	bne	116ec <abort@plt+0x96c>
   116d4:	ldrb	r3, [r0, #3]
   116d8:	cmp	r3, #56	; 0x38
   116dc:	bne	116ec <abort@plt+0x96c>
   116e0:	ldrb	r3, [r0, #4]
   116e4:	cmp	r3, #48	; 0x30
   116e8:	beq	11700 <abort@plt+0x980>
   116ec:	ldr	r3, [pc, #80]	; 11744 <abort@plt+0x9c4>
   116f0:	cmp	r5, #9
   116f4:	ldr	r0, [pc, #76]	; 11748 <abort@plt+0x9c8>
   116f8:	movne	r0, r3
   116fc:	pop	{r4, r5, r6, pc}
   11700:	ldrb	r3, [r0, #5]
   11704:	cmp	r3, #51	; 0x33
   11708:	bne	116ec <abort@plt+0x96c>
   1170c:	ldrb	r3, [r0, #6]
   11710:	cmp	r3, #48	; 0x30
   11714:	bne	116ec <abort@plt+0x96c>
   11718:	ldrb	r3, [r0, #7]
   1171c:	cmp	r3, #0
   11720:	bne	116ec <abort@plt+0x96c>
   11724:	ldrb	r2, [r4]
   11728:	ldr	r3, [pc, #28]	; 1174c <abort@plt+0x9cc>
   1172c:	ldr	r0, [pc, #28]	; 11750 <abort@plt+0x9d0>
   11730:	cmp	r2, #96	; 0x60
   11734:	movne	r0, r3
   11738:	pop	{r4, r5, r6, pc}
   1173c:	andeq	r7, r1, r0, lsl #9
   11740:	andeq	r7, r1, ip, ror r4
   11744:	muleq	r1, r0, r4
   11748:	andeq	r7, r1, ip, lsl #9
   1174c:	andeq	r7, r1, r8, lsl #9
   11750:	andeq	r7, r1, r4, lsl #9
   11754:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11758:	sub	sp, sp, #140	; 0x8c
   1175c:	mov	r9, r1
   11760:	str	r3, [sp, #24]
   11764:	mov	r3, #1
   11768:	mov	sl, r0
   1176c:	str	r2, [sp, #44]	; 0x2c
   11770:	str	r3, [sp, #28]
   11774:	bl	10c48 <__ctype_get_mb_cur_max@plt>
   11778:	ldr	r3, [sp, #180]	; 0xb4
   1177c:	mov	fp, r9
   11780:	mov	r9, sl
   11784:	lsr	r3, r3, #1
   11788:	and	r3, r3, #1
   1178c:	str	r3, [sp, #40]	; 0x28
   11790:	ldr	r3, [sp, #180]	; 0xb4
   11794:	mov	r2, #0
   11798:	and	r3, r3, #4
   1179c:	str	r3, [sp, #100]	; 0x64
   117a0:	ldr	r3, [sp, #180]	; 0xb4
   117a4:	str	r2, [sp, #76]	; 0x4c
   117a8:	and	r3, r3, #1
   117ac:	str	r3, [sp, #96]	; 0x60
   117b0:	str	r2, [sp, #36]	; 0x24
   117b4:	str	r2, [sp, #56]	; 0x38
   117b8:	str	r2, [sp, #68]	; 0x44
   117bc:	str	r2, [sp, #72]	; 0x48
   117c0:	str	r2, [sp, #84]	; 0x54
   117c4:	str	r0, [sp, #80]	; 0x50
   117c8:	ldr	r3, [sp, #176]	; 0xb0
   117cc:	cmp	r3, #10
   117d0:	ldrls	pc, [pc, r3, lsl #2]
   117d4:	b	129ac <abort@plt+0x1c2c>
   117d8:	andeq	r1, r1, r4, lsl #16
   117dc:	andeq	r1, r1, r4, lsr #22
   117e0:	andeq	r1, r1, ip, ror ip
   117e4:	andeq	r1, r1, r8, asr fp
   117e8:	ldrdeq	r1, [r1], -r0
   117ec:			; <UNDEFINED> instruction: 0x00011cb0
   117f0:	andeq	r1, r1, r8, ror fp
   117f4:	muleq	r1, ip, fp
   117f8:	andeq	r1, r1, r4, asr #23
   117fc:	andeq	r1, r1, r4, asr #23
   11800:	andeq	r1, r1, r4, asr #23
   11804:	mov	r3, #0
   11808:	ldr	r1, [sp, #56]	; 0x38
   1180c:	ldr	r2, [sp, #176]	; 0xb0
   11810:	ldr	lr, [sp, #176]	; 0xb0
   11814:	mov	r8, r3
   11818:	mov	ip, r3
   1181c:	str	r3, [sp, #40]	; 0x28
   11820:	mov	r3, r1
   11824:	cmp	r2, #2
   11828:	moveq	r3, #0
   1182c:	andne	r3, r3, #1
   11830:	mov	r0, r3
   11834:	str	r3, [sp, #92]	; 0x5c
   11838:	ldr	r3, [sp, #68]	; 0x44
   1183c:	sub	lr, lr, #2
   11840:	adds	r2, r3, #0
   11844:	movne	r2, #1
   11848:	and	r3, r1, ip
   1184c:	and	r3, r2, r3
   11850:	clz	lr, lr
   11854:	str	r3, [sp, #88]	; 0x58
   11858:	lsr	lr, lr, #5
   1185c:	mov	r3, ip
   11860:	and	r3, r3, lr
   11864:	mov	sl, #0
   11868:	and	r0, r2, r0
   1186c:	str	r3, [sp, #64]	; 0x40
   11870:	eor	r3, r1, #1
   11874:	str	lr, [sp, #52]	; 0x34
   11878:	str	r0, [sp, #48]	; 0x30
   1187c:	str	r3, [sp, #60]	; 0x3c
   11880:	ldr	r3, [sp, #24]
   11884:	cmn	r3, #1
   11888:	beq	11db8 <abort@plt+0x1038>
   1188c:	subs	r7, r3, sl
   11890:	movne	r7, #1
   11894:	cmp	r7, #0
   11898:	beq	11dd0 <abort@plt+0x1050>
   1189c:	ldr	r3, [sp, #48]	; 0x30
   118a0:	cmp	r3, #0
   118a4:	beq	1213c <abort@plt+0x13bc>
   118a8:	ldr	r2, [sp, #68]	; 0x44
   118ac:	ldr	r1, [sp, #24]
   118b0:	cmp	r2, #1
   118b4:	mov	r3, r2
   118b8:	movls	r3, #0
   118bc:	movhi	r3, #1
   118c0:	cmn	r1, #1
   118c4:	movne	r3, #0
   118c8:	cmp	r3, #0
   118cc:	add	r4, sl, r2
   118d0:	beq	118e0 <abort@plt+0xb60>
   118d4:	ldr	r0, [sp, #44]	; 0x2c
   118d8:	bl	10cd8 <strlen@plt>
   118dc:	str	r0, [sp, #24]
   118e0:	ldr	r3, [sp, #24]
   118e4:	cmp	r3, r4
   118e8:	ldr	r3, [sp, #44]	; 0x2c
   118ec:	add	r5, r3, sl
   118f0:	bcc	12144 <abort@plt+0x13c4>
   118f4:	mov	r0, r5
   118f8:	ldr	r2, [sp, #68]	; 0x44
   118fc:	ldr	r1, [sp, #72]	; 0x48
   11900:	bl	10bdc <memcmp@plt>
   11904:	cmp	r0, #0
   11908:	bne	12144 <abort@plt+0x13c4>
   1190c:	ldr	r3, [sp, #40]	; 0x28
   11910:	cmp	r3, #0
   11914:	bne	12b00 <abort@plt+0x1d80>
   11918:	ldrb	r4, [r5]
   1191c:	cmp	r4, #126	; 0x7e
   11920:	ldrls	pc, [pc, r4, lsl #2]
   11924:	b	12a3c <abort@plt+0x1cbc>
   11928:	strdeq	r1, [r1], -ip
   1192c:	andeq	r2, r1, ip, lsr sl
   11930:	andeq	r2, r1, ip, lsr sl
   11934:	andeq	r2, r1, ip, lsr sl
   11938:	andeq	r2, r1, ip, lsr sl
   1193c:	andeq	r2, r1, ip, lsr sl
   11940:	andeq	r2, r1, ip, lsr sl
   11944:	andeq	r1, r1, r8, ror #31
   11948:	ldrdeq	r1, [r1], -r4
   1194c:			; <UNDEFINED> instruction: 0x00011fb0
   11950:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   11954:	andeq	r1, r1, r0, asr #31
   11958:	strdeq	r1, [r1], -r8
   1195c:	andeq	r2, r1, ip, lsr #2
   11960:	andeq	r2, r1, ip, lsr sl
   11964:	andeq	r2, r1, ip, lsr sl
   11968:	andeq	r2, r1, ip, lsr sl
   1196c:	andeq	r2, r1, ip, lsr sl
   11970:	andeq	r2, r1, ip, lsr sl
   11974:	andeq	r2, r1, ip, lsr sl
   11978:	andeq	r2, r1, ip, lsr sl
   1197c:	andeq	r2, r1, ip, lsr sl
   11980:	andeq	r2, r1, ip, lsr sl
   11984:	andeq	r2, r1, ip, lsr sl
   11988:	andeq	r2, r1, ip, lsr sl
   1198c:	andeq	r2, r1, ip, lsr sl
   11990:	andeq	r2, r1, ip, lsr sl
   11994:	andeq	r2, r1, ip, lsr sl
   11998:	andeq	r2, r1, ip, lsr sl
   1199c:	andeq	r2, r1, ip, lsr sl
   119a0:	andeq	r2, r1, ip, lsr sl
   119a4:	andeq	r2, r1, ip, lsr sl
   119a8:	andeq	r2, r1, ip, lsl r1
   119ac:	strdeq	r2, [r1], -ip
   119b0:	strdeq	r2, [r1], -ip
   119b4:	ldrdeq	r2, [r1], -ip
   119b8:	strdeq	r2, [r1], -ip
   119bc:	andeq	r1, r1, r8, ror #29
   119c0:	strdeq	r2, [r1], -ip
   119c4:	andeq	r1, r1, r4, asr #29
   119c8:	strdeq	r2, [r1], -ip
   119cc:	strdeq	r2, [r1], -ip
   119d0:	strdeq	r2, [r1], -ip
   119d4:	andeq	r1, r1, r8, ror #29
   119d8:	andeq	r1, r1, r8, ror #29
   119dc:	andeq	r1, r1, r8, ror #29
   119e0:	andeq	r1, r1, r8, ror #29
   119e4:	andeq	r1, r1, r8, ror #29
   119e8:	andeq	r1, r1, r8, ror #29
   119ec:	andeq	r1, r1, r8, ror #29
   119f0:	andeq	r1, r1, r8, ror #29
   119f4:	andeq	r1, r1, r8, ror #29
   119f8:	andeq	r1, r1, r8, ror #29
   119fc:	andeq	r1, r1, r8, ror #29
   11a00:	andeq	r1, r1, r8, ror #29
   11a04:	andeq	r1, r1, r8, ror #29
   11a08:	andeq	r1, r1, r8, ror #29
   11a0c:	andeq	r1, r1, r8, ror #29
   11a10:	andeq	r1, r1, r8, ror #29
   11a14:	strdeq	r2, [r1], -ip
   11a18:	strdeq	r2, [r1], -ip
   11a1c:	strdeq	r2, [r1], -ip
   11a20:	strdeq	r2, [r1], -ip
   11a24:	andeq	r1, r1, r4, ror lr
   11a28:	andeq	r2, r1, ip, lsr sl
   11a2c:	andeq	r1, r1, r8, ror #29
   11a30:	andeq	r1, r1, r8, ror #29
   11a34:	andeq	r1, r1, r8, ror #29
   11a38:	andeq	r1, r1, r8, ror #29
   11a3c:	andeq	r1, r1, r8, ror #29
   11a40:	andeq	r1, r1, r8, ror #29
   11a44:	andeq	r1, r1, r8, ror #29
   11a48:	andeq	r1, r1, r8, ror #29
   11a4c:	andeq	r1, r1, r8, ror #29
   11a50:	andeq	r1, r1, r8, ror #29
   11a54:	andeq	r1, r1, r8, ror #29
   11a58:	andeq	r1, r1, r8, ror #29
   11a5c:	andeq	r1, r1, r8, ror #29
   11a60:	andeq	r1, r1, r8, ror #29
   11a64:	andeq	r1, r1, r8, ror #29
   11a68:	andeq	r1, r1, r8, ror #29
   11a6c:	andeq	r1, r1, r8, ror #29
   11a70:	andeq	r1, r1, r8, ror #29
   11a74:	andeq	r1, r1, r8, ror #29
   11a78:	andeq	r1, r1, r8, ror #29
   11a7c:	andeq	r1, r1, r8, ror #29
   11a80:	andeq	r1, r1, r8, ror #29
   11a84:	andeq	r1, r1, r8, ror #29
   11a88:	andeq	r1, r1, r8, ror #29
   11a8c:	andeq	r1, r1, r8, ror #29
   11a90:	andeq	r1, r1, r8, ror #29
   11a94:	strdeq	r2, [r1], -ip
   11a98:	andeq	r1, r1, r0, asr #28
   11a9c:	andeq	r1, r1, r8, ror #29
   11aa0:	strdeq	r2, [r1], -ip
   11aa4:	andeq	r1, r1, r8, ror #29
   11aa8:	strdeq	r2, [r1], -ip
   11aac:	andeq	r1, r1, r8, ror #29
   11ab0:	andeq	r1, r1, r8, ror #29
   11ab4:	andeq	r1, r1, r8, ror #29
   11ab8:	andeq	r1, r1, r8, ror #29
   11abc:	andeq	r1, r1, r8, ror #29
   11ac0:	andeq	r1, r1, r8, ror #29
   11ac4:	andeq	r1, r1, r8, ror #29
   11ac8:	andeq	r1, r1, r8, ror #29
   11acc:	andeq	r1, r1, r8, ror #29
   11ad0:	andeq	r1, r1, r8, ror #29
   11ad4:	andeq	r1, r1, r8, ror #29
   11ad8:	andeq	r1, r1, r8, ror #29
   11adc:	andeq	r1, r1, r8, ror #29
   11ae0:	andeq	r1, r1, r8, ror #29
   11ae4:	andeq	r1, r1, r8, ror #29
   11ae8:	andeq	r1, r1, r8, ror #29
   11aec:	andeq	r1, r1, r8, ror #29
   11af0:	andeq	r1, r1, r8, ror #29
   11af4:	andeq	r1, r1, r8, ror #29
   11af8:	andeq	r1, r1, r8, ror #29
   11afc:	andeq	r1, r1, r8, ror #29
   11b00:	andeq	r1, r1, r8, ror #29
   11b04:	andeq	r1, r1, r8, ror #29
   11b08:	andeq	r1, r1, r8, ror #29
   11b0c:	andeq	r1, r1, r8, ror #29
   11b10:	andeq	r1, r1, r8, ror #29
   11b14:	strdeq	r1, [r1], -r8
   11b18:	strdeq	r2, [r1], -ip
   11b1c:	strdeq	r1, [r1], -r8
   11b20:	ldrdeq	r2, [r1], -ip
   11b24:	mov	r3, #1
   11b28:	str	r3, [sp, #40]	; 0x28
   11b2c:	str	r3, [sp, #68]	; 0x44
   11b30:	mov	r8, #0
   11b34:	ldr	r3, [pc, #4056]	; 12b14 <abort@plt+0x1d94>
   11b38:	str	r3, [sp, #72]	; 0x48
   11b3c:	mov	r3, #2
   11b40:	str	r3, [sp, #176]	; 0xb0
   11b44:	ldr	r1, [sp, #56]	; 0x38
   11b48:	mov	r2, r3
   11b4c:	ldr	ip, [sp, #40]	; 0x28
   11b50:	mov	lr, r3
   11b54:	b	11820 <abort@plt+0xaa0>
   11b58:	mov	r3, #1
   11b5c:	str	r3, [sp, #56]	; 0x38
   11b60:	str	r3, [sp, #68]	; 0x44
   11b64:	str	r3, [sp, #40]	; 0x28
   11b68:	ldr	r3, [pc, #4004]	; 12b14 <abort@plt+0x1d94>
   11b6c:	mov	r8, #0
   11b70:	str	r3, [sp, #72]	; 0x48
   11b74:	b	11b3c <abort@plt+0xdbc>
   11b78:	mov	r3, #1
   11b7c:	str	r3, [sp, #56]	; 0x38
   11b80:	str	r3, [sp, #68]	; 0x44
   11b84:	str	r3, [sp, #40]	; 0x28
   11b88:	ldr	r3, [pc, #3976]	; 12b18 <abort@plt+0x1d98>
   11b8c:	mov	r8, #0
   11b90:	str	r3, [sp, #72]	; 0x48
   11b94:	mov	r3, #5
   11b98:	b	11b40 <abort@plt+0xdc0>
   11b9c:	mov	r3, #0
   11ba0:	str	r3, [sp, #40]	; 0x28
   11ba4:	mov	r3, #1
   11ba8:	str	r3, [sp, #56]	; 0x38
   11bac:	mov	r8, #0
   11bb0:	mov	r1, r3
   11bb4:	ldr	r2, [sp, #176]	; 0xb0
   11bb8:	ldr	ip, [sp, #40]	; 0x28
   11bbc:	ldr	lr, [sp, #176]	; 0xb0
   11bc0:	b	11820 <abort@plt+0xaa0>
   11bc4:	ldr	r3, [sp, #176]	; 0xb0
   11bc8:	cmp	r3, #10
   11bcc:	beq	11c10 <abort@plt+0xe90>
   11bd0:	mov	r2, #5
   11bd4:	ldr	r1, [pc, #3904]	; 12b1c <abort@plt+0x1d9c>
   11bd8:	mov	r0, #0
   11bdc:	bl	10bf4 <dcgettext@plt>
   11be0:	ldr	r2, [pc, #3892]	; 12b1c <abort@plt+0x1d9c>
   11be4:	cmp	r0, r2
   11be8:	str	r0, [sp, #188]	; 0xbc
   11bec:	beq	12ca8 <abort@plt+0x1f28>
   11bf0:	mov	r2, #5
   11bf4:	ldr	r1, [pc, #3864]	; 12b14 <abort@plt+0x1d94>
   11bf8:	mov	r0, #0
   11bfc:	bl	10bf4 <dcgettext@plt>
   11c00:	ldr	r2, [pc, #3852]	; 12b14 <abort@plt+0x1d94>
   11c04:	cmp	r0, r2
   11c08:	str	r0, [sp, #192]	; 0xc0
   11c0c:	beq	12c98 <abort@plt+0x1f18>
   11c10:	ldr	r8, [sp, #40]	; 0x28
   11c14:	cmp	r8, #0
   11c18:	movne	r8, #0
   11c1c:	bne	11c4c <abort@plt+0xecc>
   11c20:	ldr	r3, [sp, #188]	; 0xbc
   11c24:	ldrb	r3, [r3]
   11c28:	cmp	r3, #0
   11c2c:	beq	11c4c <abort@plt+0xecc>
   11c30:	ldr	r2, [sp, #188]	; 0xbc
   11c34:	cmp	fp, r8
   11c38:	strbhi	r3, [r9, r8]
   11c3c:	ldrb	r3, [r2, #1]!
   11c40:	add	r8, r8, #1
   11c44:	cmp	r3, #0
   11c48:	bne	11c34 <abort@plt+0xeb4>
   11c4c:	ldr	r0, [sp, #192]	; 0xc0
   11c50:	bl	10cd8 <strlen@plt>
   11c54:	ldr	r3, [sp, #192]	; 0xc0
   11c58:	ldr	r2, [sp, #176]	; 0xb0
   11c5c:	str	r3, [sp, #72]	; 0x48
   11c60:	mov	r3, #1
   11c64:	str	r3, [sp, #56]	; 0x38
   11c68:	mov	r1, r3
   11c6c:	ldr	ip, [sp, #40]	; 0x28
   11c70:	ldr	lr, [sp, #176]	; 0xb0
   11c74:	str	r0, [sp, #68]	; 0x44
   11c78:	b	11820 <abort@plt+0xaa0>
   11c7c:	ldr	r3, [sp, #40]	; 0x28
   11c80:	cmp	r3, #0
   11c84:	beq	1292c <abort@plt+0x1bac>
   11c88:	mov	r3, #1
   11c8c:	str	r3, [sp, #68]	; 0x44
   11c90:	ldr	r3, [pc, #3708]	; 12b14 <abort@plt+0x1d94>
   11c94:	str	r3, [sp, #72]	; 0x48
   11c98:	mov	r8, #0
   11c9c:	ldr	r1, [sp, #56]	; 0x38
   11ca0:	ldr	r2, [sp, #176]	; 0xb0
   11ca4:	ldr	ip, [sp, #40]	; 0x28
   11ca8:	ldr	lr, [sp, #176]	; 0xb0
   11cac:	b	11820 <abort@plt+0xaa0>
   11cb0:	ldr	r3, [sp, #40]	; 0x28
   11cb4:	cmp	r3, #0
   11cb8:	beq	129b0 <abort@plt+0x1c30>
   11cbc:	str	r3, [sp, #56]	; 0x38
   11cc0:	mov	r3, #1
   11cc4:	str	r3, [sp, #68]	; 0x44
   11cc8:	ldr	r3, [pc, #3656]	; 12b18 <abort@plt+0x1d98>
   11ccc:	b	11c94 <abort@plt+0xf14>
   11cd0:	ldr	r3, [sp, #40]	; 0x28
   11cd4:	cmp	r3, #0
   11cd8:	mov	r3, #1
   11cdc:	streq	r3, [sp, #56]	; 0x38
   11ce0:	beq	1292c <abort@plt+0x1bac>
   11ce4:	str	r3, [sp, #68]	; 0x44
   11ce8:	ldr	r3, [pc, #3620]	; 12b14 <abort@plt+0x1d94>
   11cec:	mov	r8, #0
   11cf0:	str	r3, [sp, #72]	; 0x48
   11cf4:	b	11b3c <abort@plt+0xdbc>
   11cf8:	ldr	r3, [sp, #24]
   11cfc:	ldr	r6, [sp, #48]	; 0x30
   11d00:	cmn	r3, #1
   11d04:	beq	12360 <abort@plt+0x15e0>
   11d08:	subs	r3, r3, #1
   11d0c:	movne	r3, #1
   11d10:	cmp	r3, #0
   11d14:	beq	120e0 <abort@plt+0x1360>
   11d18:	ldr	r1, [sp, #52]	; 0x34
   11d1c:	mov	r7, r3
   11d20:	mov	r3, #0
   11d24:	str	r3, [sp, #32]
   11d28:	ldr	r3, [sp, #60]	; 0x3c
   11d2c:	orr	r2, r1, r3
   11d30:	ldr	r3, [sp, #40]	; 0x28
   11d34:	eor	r2, r2, #1
   11d38:	orr	r2, r3, r2
   11d3c:	tst	r2, #255	; 0xff
   11d40:	bne	12664 <abort@plt+0x18e4>
   11d44:	cmp	r6, #0
   11d48:	bne	11f24 <abort@plt+0x11a4>
   11d4c:	ldr	r3, [sp, #36]	; 0x24
   11d50:	add	sl, sl, #1
   11d54:	and	r3, r3, r7
   11d58:	uxtb	r6, r3
   11d5c:	cmp	r6, #0
   11d60:	beq	11d8c <abort@plt+0x100c>
   11d64:	cmp	fp, r8
   11d68:	movhi	r3, #39	; 0x27
   11d6c:	strbhi	r3, [r9, r8]
   11d70:	add	r3, r8, #1
   11d74:	cmp	fp, r3
   11d78:	movhi	r2, #39	; 0x27
   11d7c:	add	r8, r8, #2
   11d80:	strbhi	r2, [r9, r3]
   11d84:	mov	r3, #0
   11d88:	str	r3, [sp, #36]	; 0x24
   11d8c:	ldr	r2, [sp, #32]
   11d90:	cmp	r8, fp
   11d94:	ldr	r3, [sp, #28]
   11d98:	strbcc	r4, [r9, r8]
   11d9c:	cmp	r2, #0
   11da0:	moveq	r3, #0
   11da4:	str	r3, [sp, #28]
   11da8:	ldr	r3, [sp, #24]
   11dac:	add	r8, r8, #1
   11db0:	cmn	r3, #1
   11db4:	bne	1188c <abort@plt+0xb0c>
   11db8:	ldr	r3, [sp, #44]	; 0x2c
   11dbc:	ldrb	r3, [r3, sl]
   11dc0:	adds	r7, r3, #0
   11dc4:	movne	r7, #1
   11dc8:	cmp	r7, #0
   11dcc:	bne	1189c <abort@plt+0xb1c>
   11dd0:	ldr	r3, [sp, #64]	; 0x40
   11dd4:	cmp	r8, #0
   11dd8:	movne	r3, #0
   11ddc:	andeq	r3, r3, #1
   11de0:	cmp	r3, #0
   11de4:	str	r3, [sp, #64]	; 0x40
   11de8:	bne	1288c <abort@plt+0x1b0c>
   11dec:	ldr	r3, [sp, #40]	; 0x28
   11df0:	ldr	r2, [sp, #52]	; 0x34
   11df4:	eor	r3, r3, #1
   11df8:	ands	r2, r2, r3
   11dfc:	beq	12cb8 <abort@plt+0x1f38>
   11e00:	ldr	r3, [sp, #76]	; 0x4c
   11e04:	cmp	r3, #0
   11e08:	beq	12c88 <abort@plt+0x1f08>
   11e0c:	ldr	r3, [sp, #28]
   11e10:	cmp	r3, #0
   11e14:	bne	12c44 <abort@plt+0x1ec4>
   11e18:	ldr	r2, [sp, #84]	; 0x54
   11e1c:	clz	r3, fp
   11e20:	cmp	r2, #0
   11e24:	lsr	r3, r3, #5
   11e28:	moveq	r3, #0
   11e2c:	cmp	r3, #0
   11e30:	beq	12be4 <abort@plt+0x1e64>
   11e34:	mov	fp, r2
   11e38:	str	r3, [sp, #76]	; 0x4c
   11e3c:	b	117c8 <abort@plt+0xa48>
   11e40:	ldr	r3, [sp, #176]	; 0xb0
   11e44:	ldr	r6, [sp, #48]	; 0x30
   11e48:	cmp	r3, #2
   11e4c:	beq	12384 <abort@plt+0x1604>
   11e50:	ldr	r3, [sp, #88]	; 0x58
   11e54:	cmp	r3, #0
   11e58:	beq	12908 <abort@plt+0x1b88>
   11e5c:	mov	r3, #0
   11e60:	add	sl, sl, #1
   11e64:	ldr	r6, [sp, #36]	; 0x24
   11e68:	str	r3, [sp, #32]
   11e6c:	mov	r4, #92	; 0x5c
   11e70:	b	11d5c <abort@plt+0xfdc>
   11e74:	ldr	r3, [sp, #176]	; 0xb0
   11e78:	ldr	r6, [sp, #48]	; 0x30
   11e7c:	cmp	r3, #2
   11e80:	beq	123b4 <abort@plt+0x1634>
   11e84:	cmp	r3, #5
   11e88:	bne	12918 <abort@plt+0x1b98>
   11e8c:	ldr	r3, [sp, #100]	; 0x64
   11e90:	cmp	r3, #0
   11e94:	beq	1297c <abort@plt+0x1bfc>
   11e98:	ldr	r2, [sp, #24]
   11e9c:	add	r3, sl, #2
   11ea0:	cmp	r2, r3
   11ea4:	bls	11eb4 <abort@plt+0x1134>
   11ea8:	ldrb	r4, [r5, #1]
   11eac:	cmp	r4, #63	; 0x3f
   11eb0:	beq	12b24 <abort@plt+0x1da4>
   11eb4:	mov	r1, #0
   11eb8:	str	r1, [sp, #32]
   11ebc:	mov	r4, #63	; 0x3f
   11ec0:	b	11d28 <abort@plt+0xfa8>
   11ec4:	ldr	r3, [sp, #176]	; 0xb0
   11ec8:	ldr	r6, [sp, #48]	; 0x30
   11ecc:	cmp	r3, #2
   11ed0:	beq	123e0 <abort@plt+0x1660>
   11ed4:	str	r7, [sp, #32]
   11ed8:	str	r7, [sp, #76]	; 0x4c
   11edc:	mov	r1, #0
   11ee0:	mov	r4, #39	; 0x27
   11ee4:	b	11d28 <abort@plt+0xfa8>
   11ee8:	ldr	r6, [sp, #48]	; 0x30
   11eec:	ldr	r1, [sp, #52]	; 0x34
   11ef0:	str	r7, [sp, #32]
   11ef4:	b	11d28 <abort@plt+0xfa8>
   11ef8:	ldr	r6, [sp, #48]	; 0x30
   11efc:	ldr	r1, [sp, #52]	; 0x34
   11f00:	mov	r4, #12
   11f04:	mov	r3, #102	; 0x66
   11f08:	ldr	r2, [sp, #56]	; 0x38
   11f0c:	cmp	r2, #0
   11f10:	streq	r2, [sp, #32]
   11f14:	beq	11d28 <abort@plt+0xfa8>
   11f18:	mov	r4, r3
   11f1c:	mov	r3, #0
   11f20:	str	r3, [sp, #32]
   11f24:	ldr	r3, [sp, #40]	; 0x28
   11f28:	cmp	r3, #0
   11f2c:	bne	1269c <abort@plt+0x191c>
   11f30:	ldr	r3, [sp, #36]	; 0x24
   11f34:	eor	r3, r3, #1
   11f38:	and	r3, r3, r1
   11f3c:	ands	r3, r3, #255	; 0xff
   11f40:	beq	11f78 <abort@plt+0x11f8>
   11f44:	cmp	fp, r8
   11f48:	movhi	r2, #39	; 0x27
   11f4c:	strbhi	r2, [r9, r8]
   11f50:	add	r2, r8, #1
   11f54:	cmp	fp, r2
   11f58:	movhi	r1, #36	; 0x24
   11f5c:	strbhi	r1, [r9, r2]
   11f60:	add	r2, r8, #2
   11f64:	cmp	fp, r2
   11f68:	add	r8, r8, #3
   11f6c:	movhi	r1, #39	; 0x27
   11f70:	strbhi	r1, [r9, r2]
   11f74:	str	r3, [sp, #36]	; 0x24
   11f78:	cmp	fp, r8
   11f7c:	movhi	r3, #92	; 0x5c
   11f80:	strbhi	r3, [r9, r8]
   11f84:	add	sl, sl, #1
   11f88:	add	r8, r8, #1
   11f8c:	b	11d8c <abort@plt+0x100c>
   11f90:	ldr	r6, [sp, #48]	; 0x30
   11f94:	mov	r4, #10
   11f98:	mov	r3, #110	; 0x6e
   11f9c:	ldr	r2, [sp, #64]	; 0x40
   11fa0:	cmp	r2, #0
   11fa4:	bne	12a24 <abort@plt+0x1ca4>
   11fa8:	ldr	r1, [sp, #52]	; 0x34
   11fac:	b	11f08 <abort@plt+0x1188>
   11fb0:	ldr	r6, [sp, #48]	; 0x30
   11fb4:	ldr	r1, [sp, #52]	; 0x34
   11fb8:	mov	r3, #116	; 0x74
   11fbc:	b	11f08 <abort@plt+0x1188>
   11fc0:	ldr	r6, [sp, #48]	; 0x30
   11fc4:	ldr	r1, [sp, #52]	; 0x34
   11fc8:	mov	r4, #11
   11fcc:	mov	r3, #118	; 0x76
   11fd0:	b	11f08 <abort@plt+0x1188>
   11fd4:	ldr	r6, [sp, #48]	; 0x30
   11fd8:	ldr	r1, [sp, #52]	; 0x34
   11fdc:	mov	r4, #8
   11fe0:	mov	r3, #98	; 0x62
   11fe4:	b	11f08 <abort@plt+0x1188>
   11fe8:	ldr	r6, [sp, #48]	; 0x30
   11fec:	ldr	r1, [sp, #52]	; 0x34
   11ff0:	mov	r4, #7
   11ff4:	mov	r3, #97	; 0x61
   11ff8:	b	11f08 <abort@plt+0x1188>
   11ffc:	ldr	r3, [sp, #56]	; 0x38
   12000:	ldr	r6, [sp, #48]	; 0x30
   12004:	cmp	r3, #0
   12008:	beq	124cc <abort@plt+0x174c>
   1200c:	ldr	r3, [sp, #40]	; 0x28
   12010:	cmp	r3, #0
   12014:	bne	12b00 <abort@plt+0x1d80>
   12018:	ldr	r3, [sp, #36]	; 0x24
   1201c:	ldr	r2, [sp, #52]	; 0x34
   12020:	eor	r3, r3, #1
   12024:	ands	r3, r2, r3
   12028:	moveq	r2, r8
   1202c:	beq	12064 <abort@plt+0x12e4>
   12030:	cmp	fp, r8
   12034:	movhi	r2, #39	; 0x27
   12038:	strbhi	r2, [r9, r8]
   1203c:	add	r2, r8, #1
   12040:	cmp	fp, r2
   12044:	movhi	r1, #36	; 0x24
   12048:	strbhi	r1, [r9, r2]
   1204c:	add	r2, r8, #2
   12050:	cmp	fp, r2
   12054:	movhi	r1, #39	; 0x27
   12058:	strbhi	r1, [r9, r2]
   1205c:	add	r2, r8, #3
   12060:	str	r3, [sp, #36]	; 0x24
   12064:	cmp	fp, r2
   12068:	movhi	r3, #92	; 0x5c
   1206c:	strbhi	r3, [r9, r2]
   12070:	ldr	r3, [sp, #92]	; 0x5c
   12074:	add	r8, r2, #1
   12078:	cmp	r3, #0
   1207c:	beq	12a00 <abort@plt+0x1c80>
   12080:	ldr	r1, [sp, #24]
   12084:	add	r3, sl, #1
   12088:	cmp	r1, r3
   1208c:	bls	120c4 <abort@plt+0x1344>
   12090:	ldr	r1, [sp, #44]	; 0x2c
   12094:	ldrb	r3, [r1, r3]
   12098:	sub	r3, r3, #48	; 0x30
   1209c:	cmp	r3, #9
   120a0:	bhi	120c4 <abort@plt+0x1344>
   120a4:	cmp	fp, r8
   120a8:	movhi	r3, #48	; 0x30
   120ac:	strbhi	r3, [r9, r8]
   120b0:	add	r3, r2, #2
   120b4:	cmp	fp, r3
   120b8:	add	r8, r2, #3
   120bc:	movhi	r1, #48	; 0x30
   120c0:	strbhi	r1, [r9, r3]
   120c4:	ldr	r3, [sp, #40]	; 0x28
   120c8:	ldr	r1, [sp, #52]	; 0x34
   120cc:	mov	r7, r3
   120d0:	str	r3, [sp, #32]
   120d4:	mov	r4, #48	; 0x30
   120d8:	b	11d28 <abort@plt+0xfa8>
   120dc:	ldr	r6, [sp, #48]	; 0x30
   120e0:	cmp	sl, #0
   120e4:	streq	r7, [sp, #32]
   120e8:	beq	12108 <abort@plt+0x1388>
   120ec:	mov	r3, #0
   120f0:	ldr	r1, [sp, #52]	; 0x34
   120f4:	str	r3, [sp, #32]
   120f8:	b	11d28 <abort@plt+0xfa8>
   120fc:	ldr	r6, [sp, #48]	; 0x30
   12100:	mov	r3, #0
   12104:	str	r3, [sp, #32]
   12108:	ldr	r3, [sp, #64]	; 0x40
   1210c:	cmp	r3, #0
   12110:	bne	1288c <abort@plt+0x1b0c>
   12114:	ldr	r1, [sp, #52]	; 0x34
   12118:	b	11d28 <abort@plt+0xfa8>
   1211c:	ldr	r3, [sp, #48]	; 0x30
   12120:	mov	r6, r3
   12124:	str	r3, [sp, #32]
   12128:	b	12108 <abort@plt+0x1388>
   1212c:	ldr	r6, [sp, #48]	; 0x30
   12130:	mov	r4, #13
   12134:	mov	r3, #114	; 0x72
   12138:	b	11f9c <abort@plt+0x121c>
   1213c:	ldr	r3, [sp, #44]	; 0x2c
   12140:	add	r5, r3, sl
   12144:	ldrb	r4, [r5]
   12148:	cmp	r4, #126	; 0x7e
   1214c:	ldrls	pc, [pc, r4, lsl #2]
   12150:	b	124ec <abort@plt+0x176c>
   12154:			; <UNDEFINED> instruction: 0x000124bc
   12158:	andeq	r2, r1, ip, ror #9
   1215c:	andeq	r2, r1, ip, ror #9
   12160:	andeq	r2, r1, ip, ror #9
   12164:	andeq	r2, r1, ip, ror #9
   12168:	andeq	r2, r1, ip, ror #9
   1216c:	andeq	r2, r1, ip, ror #9
   12170:			; <UNDEFINED> instruction: 0x000124b4
   12174:	andeq	r2, r1, ip, lsr #9
   12178:	andeq	r2, r1, r0, lsr #9
   1217c:	muleq	r1, r8, r4
   12180:	muleq	r1, r0, r4
   12184:	andeq	r2, r1, r8, lsl #9
   12188:	andeq	r2, r1, r0, lsl #9
   1218c:	andeq	r2, r1, ip, ror #9
   12190:	andeq	r2, r1, ip, ror #9
   12194:	andeq	r2, r1, ip, ror #9
   12198:	andeq	r2, r1, ip, ror #9
   1219c:	andeq	r2, r1, ip, ror #9
   121a0:	andeq	r2, r1, ip, ror #9
   121a4:	andeq	r2, r1, ip, ror #9
   121a8:	andeq	r2, r1, ip, ror #9
   121ac:	andeq	r2, r1, ip, ror #9
   121b0:	andeq	r2, r1, ip, ror #9
   121b4:	andeq	r2, r1, ip, ror #9
   121b8:	andeq	r2, r1, ip, ror #9
   121bc:	andeq	r2, r1, ip, ror #9
   121c0:	andeq	r2, r1, ip, ror #9
   121c4:	andeq	r2, r1, ip, ror #9
   121c8:	andeq	r2, r1, ip, ror #9
   121cc:	andeq	r2, r1, ip, ror #9
   121d0:	andeq	r2, r1, ip, ror #9
   121d4:	andeq	r2, r1, r4, ror r4
   121d8:	andeq	r2, r1, ip, ror #8
   121dc:	andeq	r2, r1, ip, ror #8
   121e0:	andeq	r2, r1, r4, ror #8
   121e4:	andeq	r2, r1, ip, ror #8
   121e8:	andeq	r2, r1, ip, asr r4
   121ec:	andeq	r2, r1, ip, ror #8
   121f0:	ldrdeq	r2, [r1], -r0
   121f4:	andeq	r2, r1, ip, ror #8
   121f8:	andeq	r2, r1, ip, ror #8
   121fc:	andeq	r2, r1, ip, ror #8
   12200:	andeq	r2, r1, ip, asr r4
   12204:	andeq	r2, r1, ip, asr r4
   12208:	andeq	r2, r1, ip, asr r4
   1220c:	andeq	r2, r1, ip, asr r4
   12210:	andeq	r2, r1, ip, asr r4
   12214:	andeq	r2, r1, ip, asr r4
   12218:	andeq	r2, r1, ip, asr r4
   1221c:	andeq	r2, r1, ip, asr r4
   12220:	andeq	r2, r1, ip, asr r4
   12224:	andeq	r2, r1, ip, asr r4
   12228:	andeq	r2, r1, ip, asr r4
   1222c:	andeq	r2, r1, ip, asr r4
   12230:	andeq	r2, r1, ip, asr r4
   12234:	andeq	r2, r1, ip, asr r4
   12238:	andeq	r2, r1, ip, asr r4
   1223c:	andeq	r2, r1, ip, asr r4
   12240:	andeq	r2, r1, ip, ror #8
   12244:	andeq	r2, r1, ip, ror #8
   12248:	andeq	r2, r1, ip, ror #8
   1224c:	andeq	r2, r1, ip, ror #8
   12250:	andeq	r2, r1, r4, lsr #7
   12254:	andeq	r2, r1, ip, ror #9
   12258:	andeq	r2, r1, ip, asr r4
   1225c:	andeq	r2, r1, ip, asr r4
   12260:	andeq	r2, r1, ip, asr r4
   12264:	andeq	r2, r1, ip, asr r4
   12268:	andeq	r2, r1, ip, asr r4
   1226c:	andeq	r2, r1, ip, asr r4
   12270:	andeq	r2, r1, ip, asr r4
   12274:	andeq	r2, r1, ip, asr r4
   12278:	andeq	r2, r1, ip, asr r4
   1227c:	andeq	r2, r1, ip, asr r4
   12280:	andeq	r2, r1, ip, asr r4
   12284:	andeq	r2, r1, ip, asr r4
   12288:	andeq	r2, r1, ip, asr r4
   1228c:	andeq	r2, r1, ip, asr r4
   12290:	andeq	r2, r1, ip, asr r4
   12294:	andeq	r2, r1, ip, asr r4
   12298:	andeq	r2, r1, ip, asr r4
   1229c:	andeq	r2, r1, ip, asr r4
   122a0:	andeq	r2, r1, ip, asr r4
   122a4:	andeq	r2, r1, ip, asr r4
   122a8:	andeq	r2, r1, ip, asr r4
   122ac:	andeq	r2, r1, ip, asr r4
   122b0:	andeq	r2, r1, ip, asr r4
   122b4:	andeq	r2, r1, ip, asr r4
   122b8:	andeq	r2, r1, ip, asr r4
   122bc:	andeq	r2, r1, ip, asr r4
   122c0:	andeq	r2, r1, ip, ror #8
   122c4:	andeq	r2, r1, r4, ror r3
   122c8:	andeq	r2, r1, ip, asr r4
   122cc:	andeq	r2, r1, ip, ror #8
   122d0:	andeq	r2, r1, ip, asr r4
   122d4:	andeq	r2, r1, ip, ror #8
   122d8:	andeq	r2, r1, ip, asr r4
   122dc:	andeq	r2, r1, ip, asr r4
   122e0:	andeq	r2, r1, ip, asr r4
   122e4:	andeq	r2, r1, ip, asr r4
   122e8:	andeq	r2, r1, ip, asr r4
   122ec:	andeq	r2, r1, ip, asr r4
   122f0:	andeq	r2, r1, ip, asr r4
   122f4:	andeq	r2, r1, ip, asr r4
   122f8:	andeq	r2, r1, ip, asr r4
   122fc:	andeq	r2, r1, ip, asr r4
   12300:	andeq	r2, r1, ip, asr r4
   12304:	andeq	r2, r1, ip, asr r4
   12308:	andeq	r2, r1, ip, asr r4
   1230c:	andeq	r2, r1, ip, asr r4
   12310:	andeq	r2, r1, ip, asr r4
   12314:	andeq	r2, r1, ip, asr r4
   12318:	andeq	r2, r1, ip, asr r4
   1231c:	andeq	r2, r1, ip, asr r4
   12320:	andeq	r2, r1, ip, asr r4
   12324:	andeq	r2, r1, ip, asr r4
   12328:	andeq	r2, r1, ip, asr r4
   1232c:	andeq	r2, r1, ip, asr r4
   12330:	andeq	r2, r1, ip, asr r4
   12334:	andeq	r2, r1, ip, asr r4
   12338:	andeq	r2, r1, ip, asr r4
   1233c:	andeq	r2, r1, ip, asr r4
   12340:	andeq	r2, r1, r0, asr r3
   12344:	andeq	r2, r1, ip, ror #8
   12348:	andeq	r2, r1, r0, asr r3
   1234c:	andeq	r2, r1, r4, ror #8
   12350:	ldr	r3, [sp, #24]
   12354:	mov	r6, #0
   12358:	cmn	r3, #1
   1235c:	bne	11d08 <abort@plt+0xf88>
   12360:	ldr	r3, [sp, #44]	; 0x2c
   12364:	ldrb	r3, [r3, #1]
   12368:	adds	r3, r3, #0
   1236c:	movne	r3, #1
   12370:	b	11d10 <abort@plt+0xf90>
   12374:	ldr	r3, [sp, #176]	; 0xb0
   12378:	mov	r6, #0
   1237c:	cmp	r3, #2
   12380:	bne	11e50 <abort@plt+0x10d0>
   12384:	ldr	r3, [sp, #64]	; 0x40
   12388:	cmp	r3, #0
   1238c:	bne	12bc4 <abort@plt+0x1e44>
   12390:	add	sl, sl, #1
   12394:	ldr	r6, [sp, #36]	; 0x24
   12398:	str	r3, [sp, #32]
   1239c:	mov	r4, #92	; 0x5c
   123a0:	b	11d5c <abort@plt+0xfdc>
   123a4:	ldr	r3, [sp, #176]	; 0xb0
   123a8:	mov	r6, #0
   123ac:	cmp	r3, #2
   123b0:	bne	11e84 <abort@plt+0x1104>
   123b4:	ldr	r3, [sp, #40]	; 0x28
   123b8:	cmp	r3, #0
   123bc:	bne	126a0 <abort@plt+0x1920>
   123c0:	mov	r1, r7
   123c4:	str	r3, [sp, #32]
   123c8:	mov	r4, #63	; 0x3f
   123cc:	b	11d28 <abort@plt+0xfa8>
   123d0:	ldr	r3, [sp, #176]	; 0xb0
   123d4:	mov	r6, #0
   123d8:	cmp	r3, #2
   123dc:	bne	11ed4 <abort@plt+0x1154>
   123e0:	ldr	r3, [sp, #64]	; 0x40
   123e4:	cmp	r3, #0
   123e8:	bne	12bc4 <abort@plt+0x1e44>
   123ec:	ldr	r2, [sp, #84]	; 0x54
   123f0:	adds	r3, fp, #0
   123f4:	movne	r3, #1
   123f8:	cmp	r2, #0
   123fc:	movne	r3, #0
   12400:	cmp	r3, #0
   12404:	strne	fp, [sp, #84]	; 0x54
   12408:	movne	fp, #0
   1240c:	bne	1243c <abort@plt+0x16bc>
   12410:	cmp	fp, r8
   12414:	movhi	r3, #39	; 0x27
   12418:	strbhi	r3, [r9, r8]
   1241c:	add	r3, r8, #1
   12420:	cmp	fp, r3
   12424:	movhi	r2, #92	; 0x5c
   12428:	strbhi	r2, [r9, r3]
   1242c:	add	r3, r8, #2
   12430:	cmp	fp, r3
   12434:	movhi	r2, #39	; 0x27
   12438:	strbhi	r2, [r9, r3]
   1243c:	ldr	r3, [sp, #64]	; 0x40
   12440:	add	r8, r8, #3
   12444:	mov	r1, r7
   12448:	str	r7, [sp, #32]
   1244c:	str	r7, [sp, #76]	; 0x4c
   12450:	str	r3, [sp, #36]	; 0x24
   12454:	mov	r4, #39	; 0x27
   12458:	b	11d28 <abort@plt+0xfa8>
   1245c:	mov	r6, #0
   12460:	b	11eec <abort@plt+0x116c>
   12464:	mov	r6, #0
   12468:	b	120e0 <abort@plt+0x1360>
   1246c:	mov	r6, #0
   12470:	b	12100 <abort@plt+0x1380>
   12474:	str	r7, [sp, #32]
   12478:	mov	r6, #0
   1247c:	b	12108 <abort@plt+0x1388>
   12480:	mov	r6, #0
   12484:	b	12130 <abort@plt+0x13b0>
   12488:	mov	r6, #0
   1248c:	b	11efc <abort@plt+0x117c>
   12490:	mov	r6, #0
   12494:	b	11fc4 <abort@plt+0x1244>
   12498:	mov	r6, #0
   1249c:	b	11f94 <abort@plt+0x1214>
   124a0:	mov	r6, #0
   124a4:	mov	r3, #116	; 0x74
   124a8:	b	11f9c <abort@plt+0x121c>
   124ac:	mov	r6, #0
   124b0:	b	11fd8 <abort@plt+0x1258>
   124b4:	mov	r6, #0
   124b8:	b	11fec <abort@plt+0x126c>
   124bc:	ldr	r3, [sp, #56]	; 0x38
   124c0:	mov	r6, #0
   124c4:	cmp	r3, #0
   124c8:	bne	1200c <abort@plt+0x128c>
   124cc:	ldr	r3, [sp, #96]	; 0x60
   124d0:	cmp	r3, #0
   124d4:	addne	sl, sl, #1
   124d8:	bne	11880 <abort@plt+0xb00>
   124dc:	ldr	r1, [sp, #52]	; 0x34
   124e0:	str	r3, [sp, #32]
   124e4:	mov	r4, r3
   124e8:	b	11d28 <abort@plt+0xfa8>
   124ec:	mov	r6, #0
   124f0:	ldr	r3, [sp, #80]	; 0x50
   124f4:	cmp	r3, #1
   124f8:	bne	126e8 <abort@plt+0x1968>
   124fc:	bl	10cc0 <__ctype_b_loc@plt>
   12500:	ldr	r2, [sp, #80]	; 0x50
   12504:	sxth	r3, r4
   12508:	mov	r1, r2
   1250c:	lsl	r3, r3, #1
   12510:	ldr	r2, [r0]
   12514:	ldrh	r3, [r2, r3]
   12518:	and	r3, r3, #16384	; 0x4000
   1251c:	cmp	r3, #0
   12520:	movne	r3, #1
   12524:	moveq	r3, #0
   12528:	str	r3, [sp, #32]
   1252c:	moveq	r3, #1
   12530:	movne	r3, #0
   12534:	ldr	r2, [sp, #56]	; 0x38
   12538:	and	r3, r3, r2
   1253c:	ands	r3, r3, #255	; 0xff
   12540:	beq	12114 <abort@plt+0x1394>
   12544:	add	r1, sl, r1
   12548:	mov	r0, #0
   1254c:	ldr	r7, [sp, #40]	; 0x28
   12550:	ldr	r2, [sp, #36]	; 0x24
   12554:	ldr	lr, [sp, #52]	; 0x34
   12558:	b	12608 <abort@plt+0x1888>
   1255c:	cmp	r7, #0
   12560:	bne	1295c <abort@plt+0x1bdc>
   12564:	eor	r0, r2, #1
   12568:	ands	r0, lr, r0
   1256c:	beq	125a4 <abort@plt+0x1824>
   12570:	cmp	fp, r8
   12574:	movhi	r2, #39	; 0x27
   12578:	strbhi	r2, [r9, r8]
   1257c:	add	r2, r8, #1
   12580:	cmp	fp, r2
   12584:	movhi	ip, #36	; 0x24
   12588:	strbhi	ip, [r9, r2]
   1258c:	add	r2, r8, #2
   12590:	cmp	fp, r2
   12594:	movhi	ip, #39	; 0x27
   12598:	strbhi	ip, [r9, r2]
   1259c:	add	r8, r8, #3
   125a0:	mov	r2, r0
   125a4:	cmp	fp, r8
   125a8:	movhi	r0, #92	; 0x5c
   125ac:	strbhi	r0, [r9, r8]
   125b0:	add	r0, r8, #1
   125b4:	cmp	fp, r0
   125b8:	lsrhi	ip, r4, #6
   125bc:	addhi	ip, ip, #48	; 0x30
   125c0:	strbhi	ip, [r9, r0]
   125c4:	add	ip, r8, #2
   125c8:	cmp	fp, ip
   125cc:	lsrhi	r0, r4, #3
   125d0:	andhi	r0, r0, #7
   125d4:	addhi	r0, r0, #48	; 0x30
   125d8:	add	sl, sl, #1
   125dc:	strbhi	r0, [r9, ip]
   125e0:	and	r4, r4, #7
   125e4:	cmp	sl, r1
   125e8:	add	r4, r4, #48	; 0x30
   125ec:	add	r8, r8, #3
   125f0:	bcs	12974 <abort@plt+0x1bf4>
   125f4:	mov	r0, r3
   125f8:	cmp	fp, r8
   125fc:	strbhi	r4, [r9, r8]
   12600:	ldrb	r4, [r5, #1]!
   12604:	add	r8, r8, #1
   12608:	cmp	r3, #0
   1260c:	bne	1255c <abort@plt+0x17dc>
   12610:	cmp	r6, #0
   12614:	bne	126b8 <abort@plt+0x1938>
   12618:	eor	r6, r0, #1
   1261c:	and	r6, r6, r2
   12620:	add	sl, sl, #1
   12624:	cmp	r1, sl
   12628:	uxtb	r6, r6
   1262c:	bls	126e0 <abort@plt+0x1960>
   12630:	cmp	r6, #0
   12634:	beq	125f8 <abort@plt+0x1878>
   12638:	cmp	fp, r8
   1263c:	movhi	r2, #39	; 0x27
   12640:	strbhi	r2, [r9, r8]
   12644:	add	r2, r8, #1
   12648:	cmp	fp, r2
   1264c:	movhi	ip, #39	; 0x27
   12650:	strbhi	ip, [r9, r2]
   12654:	add	r8, r8, #2
   12658:	mov	r6, r3
   1265c:	mov	r2, r3
   12660:	b	125f8 <abort@plt+0x1878>
   12664:	ldr	r3, [sp, #184]	; 0xb8
   12668:	cmp	r3, #0
   1266c:	beq	11d44 <abort@plt+0xfc4>
   12670:	lsr	r2, r4, #5
   12674:	mov	r0, r3
   12678:	uxtb	r2, r2
   1267c:	and	r3, r4, #31
   12680:	ldr	r2, [r0, r2, lsl #2]
   12684:	lsr	r3, r2, r3
   12688:	tst	r3, #1
   1268c:	beq	11d44 <abort@plt+0xfc4>
   12690:	ldr	r3, [sp, #40]	; 0x28
   12694:	cmp	r3, #0
   12698:	beq	11f30 <abort@plt+0x11b0>
   1269c:	mov	r3, r1
   126a0:	str	r3, [sp, #64]	; 0x40
   126a4:	mov	sl, r9
   126a8:	ldr	r3, [sp, #56]	; 0x38
   126ac:	mov	r9, fp
   126b0:	ldr	r2, [sp, #64]	; 0x40
   126b4:	b	128a4 <abort@plt+0x1b24>
   126b8:	cmp	fp, r8
   126bc:	eor	r6, r0, #1
   126c0:	movhi	ip, #92	; 0x5c
   126c4:	and	r6, r6, r2
   126c8:	add	sl, sl, #1
   126cc:	strbhi	ip, [r9, r8]
   126d0:	cmp	r1, sl
   126d4:	add	r8, r8, #1
   126d8:	uxtb	r6, r6
   126dc:	bhi	12630 <abort@plt+0x18b0>
   126e0:	str	r2, [sp, #36]	; 0x24
   126e4:	b	11d5c <abort@plt+0xfdc>
   126e8:	ldr	r3, [sp, #24]
   126ec:	cmn	r3, #1
   126f0:	mov	r3, #0
   126f4:	str	r3, [sp, #128]	; 0x80
   126f8:	str	r3, [sp, #132]	; 0x84
   126fc:	beq	129f0 <abort@plt+0x1c70>
   12700:	mov	r2, r7
   12704:	mov	r3, #0
   12708:	str	r7, [sp, #104]	; 0x68
   1270c:	str	r5, [sp, #116]	; 0x74
   12710:	mov	r7, r3
   12714:	mov	r5, r2
   12718:	str	r4, [sp, #32]
   1271c:	str	r6, [sp, #108]	; 0x6c
   12720:	str	r8, [sp, #112]	; 0x70
   12724:	ldr	r3, [sp, #44]	; 0x2c
   12728:	add	r6, sl, r7
   1272c:	add	r4, r3, r6
   12730:	ldr	r3, [sp, #24]
   12734:	mov	r1, r4
   12738:	sub	r2, r3, r6
   1273c:	add	r0, sp, #124	; 0x7c
   12740:	add	r3, sp, #128	; 0x80
   12744:	bl	16a08 <abort@plt+0x5c88>
   12748:	subs	r8, r0, #0
   1274c:	beq	12ad4 <abort@plt+0x1d54>
   12750:	cmn	r8, #1
   12754:	beq	12aac <abort@plt+0x1d2c>
   12758:	cmn	r8, #2
   1275c:	beq	12a44 <abort@plt+0x1cc4>
   12760:	ldr	r3, [sp, #64]	; 0x40
   12764:	cmp	r3, #0
   12768:	beq	12828 <abort@plt+0x1aa8>
   1276c:	cmp	r8, #1
   12770:	beq	12828 <abort@plt+0x1aa8>
   12774:	sub	r3, r8, #1
   12778:	add	r6, r3, r6
   1277c:	ldr	r3, [sp, #44]	; 0x2c
   12780:	add	r6, r3, r6
   12784:	ldrb	r3, [r4, #1]!
   12788:	sub	r3, r3, #91	; 0x5b
   1278c:	cmp	r3, #33	; 0x21
   12790:	ldrls	pc, [pc, r3, lsl #2]
   12794:	b	12820 <abort@plt+0x1aa0>
   12798:	andeq	r2, r1, ip, lsl #17
   1279c:	andeq	r2, r1, ip, lsl #17
   127a0:	andeq	r2, r1, r0, lsr #16
   127a4:	andeq	r2, r1, ip, lsl #17
   127a8:	andeq	r2, r1, r0, lsr #16
   127ac:	andeq	r2, r1, ip, lsl #17
   127b0:	andeq	r2, r1, r0, lsr #16
   127b4:	andeq	r2, r1, r0, lsr #16
   127b8:	andeq	r2, r1, r0, lsr #16
   127bc:	andeq	r2, r1, r0, lsr #16
   127c0:	andeq	r2, r1, r0, lsr #16
   127c4:	andeq	r2, r1, r0, lsr #16
   127c8:	andeq	r2, r1, r0, lsr #16
   127cc:	andeq	r2, r1, r0, lsr #16
   127d0:	andeq	r2, r1, r0, lsr #16
   127d4:	andeq	r2, r1, r0, lsr #16
   127d8:	andeq	r2, r1, r0, lsr #16
   127dc:	andeq	r2, r1, r0, lsr #16
   127e0:	andeq	r2, r1, r0, lsr #16
   127e4:	andeq	r2, r1, r0, lsr #16
   127e8:	andeq	r2, r1, r0, lsr #16
   127ec:	andeq	r2, r1, r0, lsr #16
   127f0:	andeq	r2, r1, r0, lsr #16
   127f4:	andeq	r2, r1, r0, lsr #16
   127f8:	andeq	r2, r1, r0, lsr #16
   127fc:	andeq	r2, r1, r0, lsr #16
   12800:	andeq	r2, r1, r0, lsr #16
   12804:	andeq	r2, r1, r0, lsr #16
   12808:	andeq	r2, r1, r0, lsr #16
   1280c:	andeq	r2, r1, r0, lsr #16
   12810:	andeq	r2, r1, r0, lsr #16
   12814:	andeq	r2, r1, r0, lsr #16
   12818:	andeq	r2, r1, r0, lsr #16
   1281c:	andeq	r2, r1, ip, lsl #17
   12820:	cmp	r6, r4
   12824:	bne	12784 <abort@plt+0x1a04>
   12828:	ldr	r0, [sp, #124]	; 0x7c
   1282c:	bl	10c24 <iswprint@plt>
   12830:	add	r7, r7, r8
   12834:	cmp	r0, #0
   12838:	add	r0, sp, #128	; 0x80
   1283c:	moveq	r5, #0
   12840:	bl	10bd0 <mbsinit@plt>
   12844:	cmp	r0, #0
   12848:	beq	12724 <abort@plt+0x19a4>
   1284c:	ldr	r4, [sp, #32]
   12850:	str	r5, [sp, #32]
   12854:	ldr	r3, [sp, #32]
   12858:	mov	r1, r7
   1285c:	eor	r3, r3, #1
   12860:	ldr	r7, [sp, #104]	; 0x68
   12864:	ldr	r6, [sp, #108]	; 0x6c
   12868:	ldr	r8, [sp, #112]	; 0x70
   1286c:	ldr	r5, [sp, #116]	; 0x74
   12870:	uxtb	r3, r3
   12874:	cmp	r1, #1
   12878:	bls	12534 <abort@plt+0x17b4>
   1287c:	ldr	r2, [sp, #56]	; 0x38
   12880:	and	r3, r3, r2
   12884:	uxtb	r3, r3
   12888:	b	12544 <abort@plt+0x17c4>
   1288c:	mov	r3, #2
   12890:	str	r3, [sp, #176]	; 0xb0
   12894:	ldr	r2, [sp, #64]	; 0x40
   12898:	ldr	r3, [sp, #56]	; 0x38
   1289c:	mov	sl, r9
   128a0:	mov	r9, fp
   128a4:	and	r3, r3, r2
   128a8:	tst	r3, #255	; 0xff
   128ac:	ldr	r3, [sp, #176]	; 0xb0
   128b0:	movne	r3, #4
   128b4:	str	r3, [sp, #176]	; 0xb0
   128b8:	ldr	r3, [sp, #180]	; 0xb4
   128bc:	mov	ip, #0
   128c0:	bic	r3, r3, #2
   128c4:	str	r3, [sp, #4]
   128c8:	ldr	r3, [sp, #192]	; 0xc0
   128cc:	ldr	r2, [sp, #44]	; 0x2c
   128d0:	str	r3, [sp, #16]
   128d4:	ldr	r3, [sp, #188]	; 0xbc
   128d8:	mov	r1, r9
   128dc:	str	r3, [sp, #12]
   128e0:	ldr	r3, [sp, #176]	; 0xb0
   128e4:	mov	r0, sl
   128e8:	str	r3, [sp]
   128ec:	str	ip, [sp, #8]
   128f0:	ldr	r3, [sp, #24]
   128f4:	bl	11754 <abort@plt+0x9d4>
   128f8:	mov	fp, r0
   128fc:	mov	r0, fp
   12900:	add	sp, sp, #140	; 0x8c
   12904:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12908:	mov	r4, #92	; 0x5c
   1290c:	mov	r1, #0
   12910:	mov	r3, r4
   12914:	b	11f08 <abort@plt+0x1188>
   12918:	mov	r3, #0
   1291c:	ldr	r1, [sp, #52]	; 0x34
   12920:	str	r3, [sp, #32]
   12924:	mov	r4, #63	; 0x3f
   12928:	b	11d28 <abort@plt+0xfa8>
   1292c:	cmp	fp, #0
   12930:	beq	1298c <abort@plt+0x1c0c>
   12934:	mov	r3, #39	; 0x27
   12938:	strb	r3, [r9]
   1293c:	mov	r3, #0
   12940:	str	r3, [sp, #40]	; 0x28
   12944:	mov	r3, #1
   12948:	str	r3, [sp, #68]	; 0x44
   1294c:	ldr	r3, [pc, #448]	; 12b14 <abort@plt+0x1d94>
   12950:	mov	r8, #1
   12954:	str	r3, [sp, #72]	; 0x48
   12958:	b	11b3c <abort@plt+0xdbc>
   1295c:	ldr	r3, [sp, #40]	; 0x28
   12960:	mov	sl, r9
   12964:	str	r3, [sp, #56]	; 0x38
   12968:	mov	r9, fp
   1296c:	ldr	r2, [sp, #64]	; 0x40
   12970:	b	128a4 <abort@plt+0x1b24>
   12974:	str	r2, [sp, #36]	; 0x24
   12978:	b	11d8c <abort@plt+0x100c>
   1297c:	mov	r1, #0
   12980:	str	r3, [sp, #32]
   12984:	mov	r4, #63	; 0x3f
   12988:	b	11d28 <abort@plt+0xfa8>
   1298c:	ldr	r3, [pc, #384]	; 12b14 <abort@plt+0x1d94>
   12990:	str	r3, [sp, #72]	; 0x48
   12994:	mov	r3, #0
   12998:	str	r3, [sp, #40]	; 0x28
   1299c:	mov	r3, #1
   129a0:	str	r3, [sp, #68]	; 0x44
   129a4:	mov	r8, r3
   129a8:	b	11b3c <abort@plt+0xdbc>
   129ac:	bl	10d80 <abort@plt>
   129b0:	cmp	fp, #0
   129b4:	beq	12a14 <abort@plt+0x1c94>
   129b8:	mov	r2, #1
   129bc:	mov	r3, #34	; 0x22
   129c0:	strb	r3, [r9]
   129c4:	mov	r8, r2
   129c8:	mov	r3, r2
   129cc:	str	r2, [sp, #68]	; 0x44
   129d0:	str	r3, [sp, #56]	; 0x38
   129d4:	ldr	r3, [pc, #316]	; 12b18 <abort@plt+0x1d98>
   129d8:	ldr	r1, [sp, #56]	; 0x38
   129dc:	str	r3, [sp, #72]	; 0x48
   129e0:	ldr	r2, [sp, #176]	; 0xb0
   129e4:	ldr	ip, [sp, #40]	; 0x28
   129e8:	ldr	lr, [sp, #176]	; 0xb0
   129ec:	b	11820 <abort@plt+0xaa0>
   129f0:	ldr	r0, [sp, #44]	; 0x2c
   129f4:	bl	10cd8 <strlen@plt>
   129f8:	str	r0, [sp, #24]
   129fc:	b	12700 <abort@plt+0x1980>
   12a00:	mov	r7, #0
   12a04:	ldr	r1, [sp, #52]	; 0x34
   12a08:	str	r3, [sp, #32]
   12a0c:	mov	r4, #48	; 0x30
   12a10:	b	11d28 <abort@plt+0xfa8>
   12a14:	mov	r3, #1
   12a18:	str	r3, [sp, #68]	; 0x44
   12a1c:	mov	r8, r3
   12a20:	b	129d0 <abort@plt+0x1c50>
   12a24:	mov	r3, #2
   12a28:	mov	sl, r9
   12a2c:	str	r3, [sp, #176]	; 0xb0
   12a30:	mov	r9, fp
   12a34:	ldr	r3, [sp, #56]	; 0x38
   12a38:	b	128a4 <abort@plt+0x1b24>
   12a3c:	ldr	r6, [sp, #48]	; 0x30
   12a40:	b	124f0 <abort@plt+0x1770>
   12a44:	ldr	r0, [sp, #24]
   12a48:	mov	ip, r6
   12a4c:	cmp	r0, ip
   12a50:	mov	r1, r7
   12a54:	mov	r2, r4
   12a58:	ldr	r7, [sp, #104]	; 0x68
   12a5c:	ldr	r4, [sp, #32]
   12a60:	ldr	r6, [sp, #108]	; 0x6c
   12a64:	ldr	r8, [sp, #112]	; 0x70
   12a68:	ldr	r5, [sp, #116]	; 0x74
   12a6c:	bls	12a9c <abort@plt+0x1d1c>
   12a70:	ldrb	r3, [r2]
   12a74:	cmp	r3, #0
   12a78:	bne	12a8c <abort@plt+0x1d0c>
   12a7c:	b	12bac <abort@plt+0x1e2c>
   12a80:	ldrb	r3, [r2, #1]!
   12a84:	cmp	r3, #0
   12a88:	beq	12bac <abort@plt+0x1e2c>
   12a8c:	add	r1, r1, #1
   12a90:	add	r3, sl, r1
   12a94:	cmp	r0, r3
   12a98:	bhi	12a80 <abort@plt+0x1d00>
   12a9c:	mov	r2, #0
   12aa0:	mov	r3, r7
   12aa4:	str	r2, [sp, #32]
   12aa8:	b	12874 <abort@plt+0x1af4>
   12aac:	mov	r1, r7
   12ab0:	ldr	r7, [sp, #104]	; 0x68
   12ab4:	mov	r2, #0
   12ab8:	ldr	r4, [sp, #32]
   12abc:	ldr	r6, [sp, #108]	; 0x6c
   12ac0:	ldr	r8, [sp, #112]	; 0x70
   12ac4:	ldr	r5, [sp, #116]	; 0x74
   12ac8:	mov	r3, r7
   12acc:	str	r2, [sp, #32]
   12ad0:	b	12874 <abort@plt+0x1af4>
   12ad4:	mov	r3, r5
   12ad8:	eor	r3, r3, #1
   12adc:	ldr	r4, [sp, #32]
   12ae0:	mov	r1, r7
   12ae4:	str	r5, [sp, #32]
   12ae8:	ldr	r7, [sp, #104]	; 0x68
   12aec:	ldr	r6, [sp, #108]	; 0x6c
   12af0:	ldr	r8, [sp, #112]	; 0x70
   12af4:	ldr	r5, [sp, #116]	; 0x74
   12af8:	uxtb	r3, r3
   12afc:	b	12874 <abort@plt+0x1af4>
   12b00:	mov	sl, r9
   12b04:	str	r3, [sp, #56]	; 0x38
   12b08:	mov	r9, fp
   12b0c:	ldr	r2, [sp, #64]	; 0x40
   12b10:	b	128a4 <abort@plt+0x1b24>
   12b14:	muleq	r1, r0, r4
   12b18:	andeq	r7, r1, ip, lsl #9
   12b1c:	muleq	r1, r4, r4
   12b20:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   12b24:	ldr	r2, [sp, #44]	; 0x2c
   12b28:	ldrb	r1, [r2, r3]
   12b2c:	sub	r2, r1, #33	; 0x21
   12b30:	uxtb	r2, r2
   12b34:	cmp	r2, #29
   12b38:	bhi	12bb8 <abort@plt+0x1e38>
   12b3c:	ldr	r0, [pc, #-36]	; 12b20 <abort@plt+0x1da0>
   12b40:	mov	ip, #1
   12b44:	ands	r2, r0, ip, lsl r2
   12b48:	beq	12bd8 <abort@plt+0x1e58>
   12b4c:	ldr	r2, [sp, #40]	; 0x28
   12b50:	cmp	r2, #0
   12b54:	bne	12ccc <abort@plt+0x1f4c>
   12b58:	add	r2, r8, #1
   12b5c:	cmp	fp, r8
   12b60:	strbhi	r4, [r9, r8]
   12b64:	cmp	fp, r2
   12b68:	movhi	r0, #34	; 0x22
   12b6c:	strbhi	r0, [r9, r2]
   12b70:	add	r2, r8, #2
   12b74:	cmp	fp, r2
   12b78:	movhi	r0, #34	; 0x22
   12b7c:	strbhi	r0, [r9, r2]
   12b80:	add	r2, r8, #3
   12b84:	cmp	fp, r2
   12b88:	mov	sl, r3
   12b8c:	ldr	r3, [sp, #40]	; 0x28
   12b90:	movhi	r0, #63	; 0x3f
   12b94:	mov	r4, r1
   12b98:	strbhi	r0, [r9, r2]
   12b9c:	add	r8, r8, #4
   12ba0:	mov	r1, r3
   12ba4:	str	r3, [sp, #32]
   12ba8:	b	11d28 <abort@plt+0xfa8>
   12bac:	str	r3, [sp, #32]
   12bb0:	mov	r3, r7
   12bb4:	b	12874 <abort@plt+0x1af4>
   12bb8:	mov	r1, #0
   12bbc:	str	r1, [sp, #32]
   12bc0:	b	11d28 <abort@plt+0xfa8>
   12bc4:	mov	sl, r9
   12bc8:	ldr	r3, [sp, #56]	; 0x38
   12bcc:	mov	r9, fp
   12bd0:	ldr	r2, [sp, #64]	; 0x40
   12bd4:	b	128a4 <abort@plt+0x1b24>
   12bd8:	str	r2, [sp, #32]
   12bdc:	mov	r1, #0
   12be0:	b	11d28 <abort@plt+0xfa8>
   12be4:	ldr	r2, [sp, #76]	; 0x4c
   12be8:	mov	sl, r9
   12bec:	mov	r9, fp
   12bf0:	mov	fp, r8
   12bf4:	ldr	r1, [sp, #72]	; 0x48
   12bf8:	cmp	r1, #0
   12bfc:	moveq	r3, #0
   12c00:	andne	r3, r2, #1
   12c04:	cmp	r3, #0
   12c08:	beq	12c34 <abort@plt+0x1eb4>
   12c0c:	ldrb	r3, [r1]
   12c10:	cmp	r3, #0
   12c14:	beq	12c34 <abort@plt+0x1eb4>
   12c18:	mov	r2, r1
   12c1c:	cmp	r9, fp
   12c20:	strbhi	r3, [sl, fp]
   12c24:	ldrb	r3, [r2, #1]!
   12c28:	add	fp, fp, #1
   12c2c:	cmp	r3, #0
   12c30:	bne	12c1c <abort@plt+0x1e9c>
   12c34:	cmp	r9, fp
   12c38:	movhi	r3, #0
   12c3c:	strbhi	r3, [sl, fp]
   12c40:	b	128fc <abort@plt+0x1b7c>
   12c44:	ldr	r3, [sp, #192]	; 0xc0
   12c48:	mov	ip, #5
   12c4c:	str	r3, [sp, #16]
   12c50:	ldr	r3, [sp, #188]	; 0xbc
   12c54:	ldr	r2, [sp, #44]	; 0x2c
   12c58:	str	r3, [sp, #12]
   12c5c:	ldr	r3, [sp, #184]	; 0xb8
   12c60:	ldr	r1, [sp, #84]	; 0x54
   12c64:	str	r3, [sp, #8]
   12c68:	ldr	r3, [sp, #180]	; 0xb4
   12c6c:	mov	r0, r9
   12c70:	str	r3, [sp, #4]
   12c74:	str	ip, [sp]
   12c78:	ldr	r3, [sp, #24]
   12c7c:	bl	11754 <abort@plt+0x9d4>
   12c80:	mov	fp, r0
   12c84:	b	128fc <abort@plt+0x1b7c>
   12c88:	mov	sl, r9
   12c8c:	mov	r9, fp
   12c90:	mov	fp, r8
   12c94:	b	12bf4 <abort@plt+0x1e74>
   12c98:	ldr	r1, [sp, #176]	; 0xb0
   12c9c:	bl	11634 <abort@plt+0x8b4>
   12ca0:	str	r0, [sp, #192]	; 0xc0
   12ca4:	b	11c10 <abort@plt+0xe90>
   12ca8:	ldr	r1, [sp, #176]	; 0xb0
   12cac:	bl	11634 <abort@plt+0x8b4>
   12cb0:	str	r0, [sp, #188]	; 0xbc
   12cb4:	b	11bf0 <abort@plt+0xe70>
   12cb8:	mov	sl, r9
   12cbc:	mov	r2, r3
   12cc0:	mov	r9, fp
   12cc4:	mov	fp, r8
   12cc8:	b	12bf4 <abort@plt+0x1e74>
   12ccc:	mov	sl, r9
   12cd0:	mov	r9, fp
   12cd4:	b	128b8 <abort@plt+0x1b38>
   12cd8:	push	{r4, r5, r6, lr}
   12cdc:	mov	r5, r0
   12ce0:	bl	10ce4 <__errno_location@plt>
   12ce4:	cmp	r5, #0
   12ce8:	mov	r1, #48	; 0x30
   12cec:	mov	r4, r0
   12cf0:	ldr	r0, [pc, #16]	; 12d08 <abort@plt+0x1f88>
   12cf4:	ldr	r6, [r4]
   12cf8:	movne	r0, r5
   12cfc:	bl	16574 <abort@plt+0x57f4>
   12d00:	str	r6, [r4]
   12d04:	pop	{r4, r5, r6, pc}
   12d08:	andeq	r8, r2, r4, asr #2
   12d0c:	ldr	r3, [pc, #12]	; 12d20 <abort@plt+0x1fa0>
   12d10:	cmp	r0, #0
   12d14:	moveq	r0, r3
   12d18:	ldr	r0, [r0]
   12d1c:	bx	lr
   12d20:	andeq	r8, r2, r4, asr #2
   12d24:	ldr	r3, [pc, #12]	; 12d38 <abort@plt+0x1fb8>
   12d28:	cmp	r0, #0
   12d2c:	moveq	r0, r3
   12d30:	str	r1, [r0]
   12d34:	bx	lr
   12d38:	andeq	r8, r2, r4, asr #2
   12d3c:	ldr	r3, [pc, #52]	; 12d78 <abort@plt+0x1ff8>
   12d40:	cmp	r0, #0
   12d44:	moveq	r0, r3
   12d48:	add	r3, r0, #8
   12d4c:	push	{lr}		; (str lr, [sp, #-4]!)
   12d50:	lsr	lr, r1, #5
   12d54:	and	r1, r1, #31
   12d58:	ldr	ip, [r3, lr, lsl #2]
   12d5c:	lsr	r0, ip, r1
   12d60:	eor	r2, r2, r0
   12d64:	and	r2, r2, #1
   12d68:	and	r0, r0, #1
   12d6c:	eor	r1, ip, r2, lsl r1
   12d70:	str	r1, [r3, lr, lsl #2]
   12d74:	pop	{pc}		; (ldr pc, [sp], #4)
   12d78:	andeq	r8, r2, r4, asr #2
   12d7c:	ldr	r3, [pc, #16]	; 12d94 <abort@plt+0x2014>
   12d80:	cmp	r0, #0
   12d84:	movne	r3, r0
   12d88:	ldr	r0, [r3, #4]
   12d8c:	str	r1, [r3, #4]
   12d90:	bx	lr
   12d94:	andeq	r8, r2, r4, asr #2
   12d98:	ldr	r3, [pc, #44]	; 12dcc <abort@plt+0x204c>
   12d9c:	cmp	r0, #0
   12da0:	moveq	r0, r3
   12da4:	mov	ip, #10
   12da8:	cmp	r2, #0
   12dac:	cmpne	r1, #0
   12db0:	str	ip, [r0]
   12db4:	beq	12dc4 <abort@plt+0x2044>
   12db8:	str	r1, [r0, #40]	; 0x28
   12dbc:	str	r2, [r0, #44]	; 0x2c
   12dc0:	bx	lr
   12dc4:	push	{r4, lr}
   12dc8:	bl	10d80 <abort@plt>
   12dcc:	andeq	r8, r2, r4, asr #2
   12dd0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12dd4:	sub	sp, sp, #24
   12dd8:	ldr	ip, [pc, #108]	; 12e4c <abort@plt+0x20cc>
   12ddc:	ldr	r4, [sp, #56]	; 0x38
   12de0:	mov	r9, r2
   12de4:	cmp	r4, #0
   12de8:	moveq	r4, ip
   12dec:	mov	sl, r3
   12df0:	mov	r7, r0
   12df4:	mov	r8, r1
   12df8:	bl	10ce4 <__errno_location@plt>
   12dfc:	ldr	r3, [r4, #44]	; 0x2c
   12e00:	mov	r1, r8
   12e04:	ldr	r6, [r0]
   12e08:	str	r3, [sp, #16]
   12e0c:	ldr	r2, [r4, #40]	; 0x28
   12e10:	add	r3, r4, #8
   12e14:	str	r3, [sp, #8]
   12e18:	str	r2, [sp, #12]
   12e1c:	ldr	r2, [r4, #4]
   12e20:	mov	r5, r0
   12e24:	str	r2, [sp, #4]
   12e28:	ldr	ip, [r4]
   12e2c:	mov	r3, sl
   12e30:	mov	r2, r9
   12e34:	mov	r0, r7
   12e38:	str	ip, [sp]
   12e3c:	bl	11754 <abort@plt+0x9d4>
   12e40:	str	r6, [r5]
   12e44:	add	sp, sp, #24
   12e48:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12e4c:	andeq	r8, r2, r4, asr #2
   12e50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12e54:	cmp	r2, #0
   12e58:	sub	sp, sp, #36	; 0x24
   12e5c:	ldr	r4, [pc, #164]	; 12f08 <abort@plt+0x2188>
   12e60:	mov	r8, r1
   12e64:	movne	r4, r2
   12e68:	mov	r7, r0
   12e6c:	bl	10ce4 <__errno_location@plt>
   12e70:	ldr	r3, [r4, #44]	; 0x2c
   12e74:	ldr	r5, [r4, #4]
   12e78:	add	r9, r4, #8
   12e7c:	orr	r5, r5, #1
   12e80:	mov	r1, #0
   12e84:	mov	r2, r7
   12e88:	ldr	fp, [r0]
   12e8c:	str	r3, [sp, #16]
   12e90:	ldr	r3, [r4, #40]	; 0x28
   12e94:	stmib	sp, {r5, r9}
   12e98:	str	r3, [sp, #12]
   12e9c:	ldr	r3, [r4]
   12ea0:	mov	r6, r0
   12ea4:	str	r3, [sp]
   12ea8:	mov	r0, r1
   12eac:	mov	r3, r8
   12eb0:	bl	11754 <abort@plt+0x9d4>
   12eb4:	add	r1, r0, #1
   12eb8:	mov	r0, r1
   12ebc:	str	r1, [sp, #28]
   12ec0:	bl	16030 <abort@plt+0x52b0>
   12ec4:	ldr	r3, [r4, #44]	; 0x2c
   12ec8:	ldr	r1, [sp, #28]
   12ecc:	str	r3, [sp, #16]
   12ed0:	ldr	r3, [r4, #40]	; 0x28
   12ed4:	str	r5, [sp, #4]
   12ed8:	str	r3, [sp, #12]
   12edc:	str	r9, [sp, #8]
   12ee0:	ldr	ip, [r4]
   12ee4:	mov	r3, r8
   12ee8:	mov	r2, r7
   12eec:	str	ip, [sp]
   12ef0:	mov	sl, r0
   12ef4:	bl	11754 <abort@plt+0x9d4>
   12ef8:	mov	r0, sl
   12efc:	str	fp, [r6]
   12f00:	add	sp, sp, #36	; 0x24
   12f04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12f08:	andeq	r8, r2, r4, asr #2
   12f0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f10:	cmp	r3, #0
   12f14:	sub	sp, sp, #44	; 0x2c
   12f18:	ldr	r4, [pc, #192]	; 12fe0 <abort@plt+0x2260>
   12f1c:	mov	r6, r2
   12f20:	movne	r4, r3
   12f24:	mov	r9, r1
   12f28:	mov	r8, r0
   12f2c:	bl	10ce4 <__errno_location@plt>
   12f30:	ldr	r3, [r4, #44]	; 0x2c
   12f34:	ldr	r5, [r4, #4]
   12f38:	add	sl, r4, #8
   12f3c:	cmp	r6, #0
   12f40:	orreq	r5, r5, #1
   12f44:	mov	r1, #0
   12f48:	ldr	r2, [r0]
   12f4c:	str	r3, [sp, #16]
   12f50:	ldr	r3, [r4, #40]	; 0x28
   12f54:	stmib	sp, {r5, sl}
   12f58:	str	r3, [sp, #12]
   12f5c:	ldr	r3, [r4]
   12f60:	mov	r7, r0
   12f64:	str	r2, [sp, #28]
   12f68:	str	r3, [sp]
   12f6c:	mov	r2, r8
   12f70:	mov	r3, r9
   12f74:	mov	r0, r1
   12f78:	bl	11754 <abort@plt+0x9d4>
   12f7c:	add	r1, r0, #1
   12f80:	mov	fp, r0
   12f84:	mov	r0, r1
   12f88:	str	r1, [sp, #36]	; 0x24
   12f8c:	bl	16030 <abort@plt+0x52b0>
   12f90:	ldr	r3, [r4, #44]	; 0x2c
   12f94:	mov	r2, r8
   12f98:	str	r3, [sp, #16]
   12f9c:	ldr	r3, [r4, #40]	; 0x28
   12fa0:	str	r5, [sp, #4]
   12fa4:	str	r3, [sp, #12]
   12fa8:	str	sl, [sp, #8]
   12fac:	ldr	ip, [r4]
   12fb0:	ldr	r1, [sp, #36]	; 0x24
   12fb4:	mov	r3, r9
   12fb8:	str	ip, [sp]
   12fbc:	str	r0, [sp, #32]
   12fc0:	bl	11754 <abort@plt+0x9d4>
   12fc4:	ldr	r2, [sp, #28]
   12fc8:	cmp	r6, #0
   12fcc:	str	r2, [r7]
   12fd0:	ldr	r0, [sp, #32]
   12fd4:	strne	fp, [r6]
   12fd8:	add	sp, sp, #44	; 0x2c
   12fdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12fe0:	andeq	r8, r2, r4, asr #2
   12fe4:	push	{r4, r5, r6, r7, r8, lr}
   12fe8:	ldr	r6, [pc, #116]	; 13064 <abort@plt+0x22e4>
   12fec:	ldr	r3, [r6, #4]
   12ff0:	ldr	r7, [r6]
   12ff4:	cmp	r3, #1
   12ff8:	movgt	r5, r7
   12ffc:	movgt	r4, #1
   13000:	ble	13020 <abort@plt+0x22a0>
   13004:	ldr	r0, [r5, #12]
   13008:	bl	168dc <abort@plt+0x5b5c>
   1300c:	ldr	r3, [r6, #4]
   13010:	add	r4, r4, #1
   13014:	cmp	r3, r4
   13018:	add	r5, r5, #8
   1301c:	bgt	13004 <abort@plt+0x2284>
   13020:	ldr	r0, [r7, #4]
   13024:	ldr	r4, [pc, #60]	; 13068 <abort@plt+0x22e8>
   13028:	cmp	r0, r4
   1302c:	beq	13040 <abort@plt+0x22c0>
   13030:	bl	168dc <abort@plt+0x5b5c>
   13034:	mov	r3, #256	; 0x100
   13038:	str	r4, [r6, #12]
   1303c:	str	r3, [r6, #8]
   13040:	ldr	r4, [pc, #36]	; 1306c <abort@plt+0x22ec>
   13044:	cmp	r7, r4
   13048:	beq	13058 <abort@plt+0x22d8>
   1304c:	mov	r0, r7
   13050:	bl	168dc <abort@plt+0x5b5c>
   13054:	str	r4, [r6]
   13058:	mov	r3, #1
   1305c:	str	r3, [r6, #4]
   13060:	pop	{r4, r5, r6, r7, r8, pc}
   13064:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   13068:	andeq	r8, r2, r4, ror r1
   1306c:	andeq	r8, r2, r0, ror #1
   13070:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13074:	sub	sp, sp, #44	; 0x2c
   13078:	mov	r5, r0
   1307c:	mov	sl, r1
   13080:	bl	10ce4 <__errno_location@plt>
   13084:	ldr	r4, [pc, #400]	; 1321c <abort@plt+0x249c>
   13088:	cmn	r5, #-2147483647	; 0x80000001
   1308c:	ldr	r6, [r4]
   13090:	mov	r8, r0
   13094:	movne	r0, #0
   13098:	moveq	r0, #1
   1309c:	ldr	r3, [r8]
   130a0:	orrs	r0, r0, r5, lsr #31
   130a4:	str	r3, [sp, #24]
   130a8:	bne	13218 <abort@plt+0x2498>
   130ac:	ldr	r2, [r4, #4]
   130b0:	cmp	r5, r2
   130b4:	blt	13114 <abort@plt+0x2394>
   130b8:	add	r7, r4, #8
   130bc:	cmp	r6, r7
   130c0:	str	r2, [sp, #36]	; 0x24
   130c4:	beq	131e8 <abort@plt+0x2468>
   130c8:	mov	r3, #8
   130cc:	sub	r2, r5, r2
   130d0:	mov	r0, r6
   130d4:	str	r3, [sp]
   130d8:	add	r2, r2, #1
   130dc:	mvn	r3, #-2147483648	; 0x80000000
   130e0:	add	r1, sp, #36	; 0x24
   130e4:	bl	1624c <abort@plt+0x54cc>
   130e8:	mov	r6, r0
   130ec:	str	r0, [r4]
   130f0:	ldr	r0, [r4, #4]
   130f4:	ldr	r2, [sp, #36]	; 0x24
   130f8:	mov	r1, #0
   130fc:	sub	r2, r2, r0
   13100:	add	r0, r6, r0, lsl #3
   13104:	lsl	r2, r2, #3
   13108:	bl	10cfc <memset@plt>
   1310c:	ldr	r3, [sp, #36]	; 0x24
   13110:	str	r3, [r4, #4]
   13114:	ldr	r4, [pc, #260]	; 13220 <abort@plt+0x24a0>
   13118:	add	fp, r6, r5, lsl #3
   1311c:	ldr	r9, [r6, r5, lsl #3]
   13120:	ldr	r0, [r4, #4]
   13124:	ldr	r3, [r4]
   13128:	ldr	r7, [fp, #4]
   1312c:	ldr	r1, [r4, #44]	; 0x2c
   13130:	ldr	r2, [r4, #40]	; 0x28
   13134:	orr	r0, r0, #1
   13138:	str	r3, [sp]
   1313c:	add	r3, r4, #8
   13140:	str	r0, [sp, #28]
   13144:	str	r0, [sp, #4]
   13148:	str	r1, [sp, #16]
   1314c:	str	r2, [sp, #12]
   13150:	str	r3, [sp, #8]
   13154:	mov	r0, r7
   13158:	mov	r1, r9
   1315c:	mvn	r3, #0
   13160:	mov	r2, sl
   13164:	bl	11754 <abort@plt+0x9d4>
   13168:	cmp	r9, r0
   1316c:	bhi	131d4 <abort@plt+0x2454>
   13170:	add	r3, r4, #48	; 0x30
   13174:	add	r9, r0, #1
   13178:	cmp	r7, r3
   1317c:	str	r9, [r6, r5, lsl #3]
   13180:	beq	1318c <abort@plt+0x240c>
   13184:	mov	r0, r7
   13188:	bl	168dc <abort@plt+0x5b5c>
   1318c:	mov	r0, r9
   13190:	bl	16030 <abort@plt+0x52b0>
   13194:	ldr	ip, [r4, #44]	; 0x2c
   13198:	ldr	r3, [r4]
   1319c:	ldr	lr, [r4, #40]	; 0x28
   131a0:	ldr	r4, [pc, #124]	; 13224 <abort@plt+0x24a4>
   131a4:	mov	r2, sl
   131a8:	mov	r1, r9
   131ac:	str	r0, [fp, #4]
   131b0:	str	r4, [sp, #8]
   131b4:	ldr	r4, [sp, #28]
   131b8:	str	r3, [sp]
   131bc:	str	r4, [sp, #4]
   131c0:	str	ip, [sp, #16]
   131c4:	str	lr, [sp, #12]
   131c8:	mvn	r3, #0
   131cc:	mov	r7, r0
   131d0:	bl	11754 <abort@plt+0x9d4>
   131d4:	ldr	r3, [sp, #24]
   131d8:	mov	r0, r7
   131dc:	str	r3, [r8]
   131e0:	add	sp, sp, #44	; 0x2c
   131e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   131e8:	mov	r3, #8
   131ec:	sub	r2, r5, r2
   131f0:	str	r3, [sp]
   131f4:	add	r1, sp, #36	; 0x24
   131f8:	add	r2, r2, #1
   131fc:	mvn	r3, #-2147483648	; 0x80000000
   13200:	bl	1624c <abort@plt+0x54cc>
   13204:	mov	r6, r0
   13208:	ldm	r7, {r0, r1}
   1320c:	str	r6, [r4]
   13210:	stm	r6, {r0, r1}
   13214:	b	130f0 <abort@plt+0x2370>
   13218:	bl	10d80 <abort@plt>
   1321c:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   13220:	andeq	r8, r2, r4, asr #2
   13224:	andeq	r8, r2, ip, asr #2
   13228:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1322c:	sub	sp, sp, #52	; 0x34
   13230:	mov	r5, r0
   13234:	mov	sl, r1
   13238:	mov	fp, r2
   1323c:	bl	10ce4 <__errno_location@plt>
   13240:	ldr	r4, [pc, #408]	; 133e0 <abort@plt+0x2660>
   13244:	cmn	r5, #-2147483647	; 0x80000001
   13248:	ldr	r6, [r4]
   1324c:	mov	r8, r0
   13250:	movne	r0, #0
   13254:	moveq	r0, #1
   13258:	ldr	r3, [r8]
   1325c:	orrs	r0, r0, r5, lsr #31
   13260:	str	r3, [sp, #28]
   13264:	bne	133dc <abort@plt+0x265c>
   13268:	ldr	r2, [r4, #4]
   1326c:	cmp	r5, r2
   13270:	blt	132d0 <abort@plt+0x2550>
   13274:	add	r7, r4, #8
   13278:	cmp	r6, r7
   1327c:	str	r2, [sp, #44]	; 0x2c
   13280:	beq	133ac <abort@plt+0x262c>
   13284:	mov	r3, #8
   13288:	sub	r2, r5, r2
   1328c:	mov	r0, r6
   13290:	str	r3, [sp]
   13294:	add	r2, r2, #1
   13298:	mvn	r3, #-2147483648	; 0x80000000
   1329c:	add	r1, sp, #44	; 0x2c
   132a0:	bl	1624c <abort@plt+0x54cc>
   132a4:	mov	r6, r0
   132a8:	str	r0, [r4]
   132ac:	ldr	r0, [r4, #4]
   132b0:	ldr	r2, [sp, #44]	; 0x2c
   132b4:	mov	r1, #0
   132b8:	sub	r2, r2, r0
   132bc:	add	r0, r6, r0, lsl #3
   132c0:	lsl	r2, r2, #3
   132c4:	bl	10cfc <memset@plt>
   132c8:	ldr	r3, [sp, #44]	; 0x2c
   132cc:	str	r3, [r4, #4]
   132d0:	ldr	r4, [pc, #268]	; 133e4 <abort@plt+0x2664>
   132d4:	add	r3, r6, r5, lsl #3
   132d8:	str	r3, [sp, #32]
   132dc:	ldr	r7, [r3, #4]
   132e0:	ldr	r0, [r4, #4]
   132e4:	ldr	r3, [r4]
   132e8:	ldr	r9, [r6, r5, lsl #3]
   132ec:	ldr	r1, [r4, #44]	; 0x2c
   132f0:	ldr	r2, [r4, #40]	; 0x28
   132f4:	orr	r0, r0, #1
   132f8:	str	r3, [sp]
   132fc:	add	r3, r4, #8
   13300:	str	r0, [sp, #36]	; 0x24
   13304:	str	r0, [sp, #4]
   13308:	str	r1, [sp, #16]
   1330c:	str	r2, [sp, #12]
   13310:	str	r3, [sp, #8]
   13314:	mov	r0, r7
   13318:	mov	r1, r9
   1331c:	mov	r3, fp
   13320:	mov	r2, sl
   13324:	bl	11754 <abort@plt+0x9d4>
   13328:	cmp	r9, r0
   1332c:	bhi	13398 <abort@plt+0x2618>
   13330:	add	r3, r4, #48	; 0x30
   13334:	add	r9, r0, #1
   13338:	cmp	r7, r3
   1333c:	str	r9, [r6, r5, lsl #3]
   13340:	beq	1334c <abort@plt+0x25cc>
   13344:	mov	r0, r7
   13348:	bl	168dc <abort@plt+0x5b5c>
   1334c:	mov	r0, r9
   13350:	bl	16030 <abort@plt+0x52b0>
   13354:	ldr	ip, [sp, #32]
   13358:	ldr	lr, [r4, #44]	; 0x2c
   1335c:	ldr	r5, [r4, #40]	; 0x28
   13360:	mov	r3, fp
   13364:	mov	r2, sl
   13368:	mov	r1, r9
   1336c:	str	r0, [ip, #4]
   13370:	ldr	ip, [r4]
   13374:	ldr	r4, [pc, #108]	; 133e8 <abort@plt+0x2668>
   13378:	str	lr, [sp, #16]
   1337c:	str	r4, [sp, #8]
   13380:	ldr	r4, [sp, #36]	; 0x24
   13384:	str	r5, [sp, #12]
   13388:	str	r4, [sp, #4]
   1338c:	str	ip, [sp]
   13390:	mov	r7, r0
   13394:	bl	11754 <abort@plt+0x9d4>
   13398:	ldr	r3, [sp, #28]
   1339c:	mov	r0, r7
   133a0:	str	r3, [r8]
   133a4:	add	sp, sp, #52	; 0x34
   133a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   133ac:	mov	r3, #8
   133b0:	sub	r2, r5, r2
   133b4:	str	r3, [sp]
   133b8:	add	r1, sp, #44	; 0x2c
   133bc:	add	r2, r2, #1
   133c0:	mvn	r3, #-2147483648	; 0x80000000
   133c4:	bl	1624c <abort@plt+0x54cc>
   133c8:	mov	r6, r0
   133cc:	ldm	r7, {r0, r1}
   133d0:	str	r6, [r4]
   133d4:	stm	r6, {r0, r1}
   133d8:	b	132ac <abort@plt+0x252c>
   133dc:	bl	10d80 <abort@plt>
   133e0:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   133e4:	andeq	r8, r2, r4, asr #2
   133e8:	andeq	r8, r2, ip, asr #2
   133ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   133f0:	sub	sp, sp, #44	; 0x2c
   133f4:	mov	sl, r0
   133f8:	bl	10ce4 <__errno_location@plt>
   133fc:	ldr	r4, [pc, #352]	; 13564 <abort@plt+0x27e4>
   13400:	ldr	r2, [r4, #4]
   13404:	ldr	r5, [r4]
   13408:	cmp	r2, #0
   1340c:	ldr	r3, [r0]
   13410:	mov	r8, r0
   13414:	str	r3, [sp, #28]
   13418:	bgt	13474 <abort@plt+0x26f4>
   1341c:	add	r6, r4, #8
   13420:	cmp	r5, r6
   13424:	str	r2, [sp, #36]	; 0x24
   13428:	beq	13534 <abort@plt+0x27b4>
   1342c:	mov	r3, #8
   13430:	mov	r0, r5
   13434:	str	r3, [sp]
   13438:	rsb	r2, r2, #1
   1343c:	mvn	r3, #-2147483648	; 0x80000000
   13440:	add	r1, sp, #36	; 0x24
   13444:	bl	1624c <abort@plt+0x54cc>
   13448:	mov	r5, r0
   1344c:	str	r0, [r4]
   13450:	ldr	r0, [r4, #4]
   13454:	ldr	r2, [sp, #36]	; 0x24
   13458:	mov	r1, #0
   1345c:	sub	r2, r2, r0
   13460:	add	r0, r5, r0, lsl #3
   13464:	lsl	r2, r2, #3
   13468:	bl	10cfc <memset@plt>
   1346c:	ldr	r3, [sp, #36]	; 0x24
   13470:	str	r3, [r4, #4]
   13474:	ldr	r4, [pc, #236]	; 13568 <abort@plt+0x27e8>
   13478:	ldr	r9, [r5]
   1347c:	ldr	r6, [r5, #4]
   13480:	ldr	r7, [r4, #4]
   13484:	ldr	r1, [r4, #44]	; 0x2c
   13488:	ldr	r2, [r4, #40]	; 0x28
   1348c:	ldr	r3, [r4]
   13490:	orr	r7, r7, #1
   13494:	add	fp, r4, #8
   13498:	str	r1, [sp, #16]
   1349c:	str	r2, [sp, #12]
   134a0:	str	r3, [sp]
   134a4:	str	r7, [sp, #4]
   134a8:	str	fp, [sp, #8]
   134ac:	mov	r1, r9
   134b0:	mov	r0, r6
   134b4:	mvn	r3, #0
   134b8:	mov	r2, sl
   134bc:	bl	11754 <abort@plt+0x9d4>
   134c0:	cmp	r9, r0
   134c4:	bhi	13520 <abort@plt+0x27a0>
   134c8:	add	r3, r4, #48	; 0x30
   134cc:	add	r9, r0, #1
   134d0:	cmp	r6, r3
   134d4:	str	r9, [r5]
   134d8:	beq	134e4 <abort@plt+0x2764>
   134dc:	mov	r0, r6
   134e0:	bl	168dc <abort@plt+0x5b5c>
   134e4:	mov	r0, r9
   134e8:	bl	16030 <abort@plt+0x52b0>
   134ec:	ldr	ip, [r4, #44]	; 0x2c
   134f0:	ldr	r3, [r4]
   134f4:	ldr	lr, [r4, #40]	; 0x28
   134f8:	mov	r2, sl
   134fc:	mov	r1, r9
   13500:	str	r0, [r5, #4]
   13504:	str	r3, [sp]
   13508:	stmib	sp, {r7, fp}
   1350c:	str	ip, [sp, #16]
   13510:	str	lr, [sp, #12]
   13514:	mvn	r3, #0
   13518:	mov	r6, r0
   1351c:	bl	11754 <abort@plt+0x9d4>
   13520:	ldr	r3, [sp, #28]
   13524:	mov	r0, r6
   13528:	str	r3, [r8]
   1352c:	add	sp, sp, #44	; 0x2c
   13530:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13534:	mov	r3, #8
   13538:	str	r3, [sp]
   1353c:	add	r1, sp, #36	; 0x24
   13540:	rsb	r2, r2, #1
   13544:	mvn	r3, #-2147483648	; 0x80000000
   13548:	mov	r0, #0
   1354c:	bl	1624c <abort@plt+0x54cc>
   13550:	mov	r5, r0
   13554:	ldm	r6, {r0, r1}
   13558:	str	r5, [r4]
   1355c:	stm	r5, {r0, r1}
   13560:	b	13450 <abort@plt+0x26d0>
   13564:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   13568:	andeq	r8, r2, r4, asr #2
   1356c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13570:	sub	sp, sp, #44	; 0x2c
   13574:	mov	r9, r0
   13578:	mov	sl, r1
   1357c:	bl	10ce4 <__errno_location@plt>
   13580:	ldr	r4, [pc, #364]	; 136f4 <abort@plt+0x2974>
   13584:	ldr	r2, [r4, #4]
   13588:	ldr	r5, [r4]
   1358c:	cmp	r2, #0
   13590:	ldr	r3, [r0]
   13594:	mov	r7, r0
   13598:	str	r3, [sp, #24]
   1359c:	bgt	135f8 <abort@plt+0x2878>
   135a0:	add	r6, r4, #8
   135a4:	cmp	r5, r6
   135a8:	str	r2, [sp, #36]	; 0x24
   135ac:	beq	136c4 <abort@plt+0x2944>
   135b0:	mov	r3, #8
   135b4:	mov	r0, r5
   135b8:	str	r3, [sp]
   135bc:	rsb	r2, r2, #1
   135c0:	mvn	r3, #-2147483648	; 0x80000000
   135c4:	add	r1, sp, #36	; 0x24
   135c8:	bl	1624c <abort@plt+0x54cc>
   135cc:	mov	r5, r0
   135d0:	str	r0, [r4]
   135d4:	ldr	r0, [r4, #4]
   135d8:	ldr	r2, [sp, #36]	; 0x24
   135dc:	mov	r1, #0
   135e0:	sub	r2, r2, r0
   135e4:	add	r0, r5, r0, lsl #3
   135e8:	lsl	r2, r2, #3
   135ec:	bl	10cfc <memset@plt>
   135f0:	ldr	r3, [sp, #36]	; 0x24
   135f4:	str	r3, [r4, #4]
   135f8:	ldr	r4, [pc, #248]	; 136f8 <abort@plt+0x2978>
   135fc:	ldr	r8, [r5]
   13600:	ldr	r6, [r5, #4]
   13604:	ldr	r0, [r4, #4]
   13608:	ldr	r1, [r4, #44]	; 0x2c
   1360c:	ldr	r2, [r4, #40]	; 0x28
   13610:	ldr	r3, [r4]
   13614:	orr	r0, r0, #1
   13618:	add	fp, r4, #8
   1361c:	str	r0, [sp, #28]
   13620:	str	r0, [sp, #4]
   13624:	str	r1, [sp, #16]
   13628:	str	r2, [sp, #12]
   1362c:	str	r3, [sp]
   13630:	str	fp, [sp, #8]
   13634:	mov	r1, r8
   13638:	mov	r0, r6
   1363c:	mov	r3, sl
   13640:	mov	r2, r9
   13644:	bl	11754 <abort@plt+0x9d4>
   13648:	cmp	r8, r0
   1364c:	bhi	136b0 <abort@plt+0x2930>
   13650:	add	r3, r4, #48	; 0x30
   13654:	add	r8, r0, #1
   13658:	cmp	r6, r3
   1365c:	str	r8, [r5]
   13660:	beq	1366c <abort@plt+0x28ec>
   13664:	mov	r0, r6
   13668:	bl	168dc <abort@plt+0x5b5c>
   1366c:	mov	r0, r8
   13670:	bl	16030 <abort@plt+0x52b0>
   13674:	ldr	lr, [r4, #44]	; 0x2c
   13678:	ldr	ip, [r4]
   1367c:	mov	r3, sl
   13680:	mov	r2, r9
   13684:	mov	r1, r8
   13688:	str	r0, [r5, #4]
   1368c:	ldr	r5, [r4, #40]	; 0x28
   13690:	ldr	r4, [sp, #28]
   13694:	str	fp, [sp, #8]
   13698:	str	r4, [sp, #4]
   1369c:	str	lr, [sp, #16]
   136a0:	str	r5, [sp, #12]
   136a4:	str	ip, [sp]
   136a8:	mov	r6, r0
   136ac:	bl	11754 <abort@plt+0x9d4>
   136b0:	ldr	r3, [sp, #24]
   136b4:	mov	r0, r6
   136b8:	str	r3, [r7]
   136bc:	add	sp, sp, #44	; 0x2c
   136c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   136c4:	mov	r3, #8
   136c8:	str	r3, [sp]
   136cc:	add	r1, sp, #36	; 0x24
   136d0:	rsb	r2, r2, #1
   136d4:	mvn	r3, #-2147483648	; 0x80000000
   136d8:	mov	r0, #0
   136dc:	bl	1624c <abort@plt+0x54cc>
   136e0:	mov	r5, r0
   136e4:	ldm	r6, {r0, r1}
   136e8:	str	r5, [r4]
   136ec:	stm	r5, {r0, r1}
   136f0:	b	135d4 <abort@plt+0x2854>
   136f4:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   136f8:	andeq	r8, r2, r4, asr #2
   136fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13700:	sub	sp, sp, #132	; 0x84
   13704:	mov	r5, r1
   13708:	mov	r4, r0
   1370c:	mov	r9, r2
   13710:	add	r0, sp, #80	; 0x50
   13714:	mov	r2, #48	; 0x30
   13718:	mov	r1, #0
   1371c:	bl	10cfc <memset@plt>
   13720:	cmp	r5, #10
   13724:	beq	138dc <abort@plt+0x2b5c>
   13728:	add	lr, sp, #80	; 0x50
   1372c:	str	r5, [sp, #80]	; 0x50
   13730:	ldm	lr!, {r0, r1, r2, r3}
   13734:	add	ip, sp, #32
   13738:	ldr	r6, [pc, #416]	; 138e0 <abort@plt+0x2b60>
   1373c:	stmia	ip!, {r0, r1, r2, r3}
   13740:	ldm	lr!, {r0, r1, r2, r3}
   13744:	stmia	ip!, {r0, r1, r2, r3}
   13748:	ldm	lr, {r0, r1, r2, r3}
   1374c:	stm	ip, {r0, r1, r2, r3}
   13750:	bl	10ce4 <__errno_location@plt>
   13754:	cmn	r4, #-2147483647	; 0x80000001
   13758:	ldr	r5, [r6]
   1375c:	mov	r7, r0
   13760:	movne	r0, #0
   13764:	moveq	r0, #1
   13768:	ldr	r3, [r7]
   1376c:	orrs	r0, r0, r4, lsr #31
   13770:	str	r3, [sp, #24]
   13774:	bne	138dc <abort@plt+0x2b5c>
   13778:	ldr	r2, [r6, #4]
   1377c:	cmp	r4, r2
   13780:	blt	137e0 <abort@plt+0x2a60>
   13784:	add	r8, r6, #8
   13788:	cmp	r5, r8
   1378c:	str	r2, [sp, #80]	; 0x50
   13790:	beq	138ac <abort@plt+0x2b2c>
   13794:	mov	r3, #8
   13798:	sub	r2, r4, r2
   1379c:	mov	r0, r5
   137a0:	str	r3, [sp]
   137a4:	add	r2, r2, #1
   137a8:	add	r1, sp, #80	; 0x50
   137ac:	mvn	r3, #-2147483648	; 0x80000000
   137b0:	bl	1624c <abort@plt+0x54cc>
   137b4:	mov	r5, r0
   137b8:	str	r0, [r6]
   137bc:	ldr	r0, [r6, #4]
   137c0:	ldr	r2, [sp, #80]	; 0x50
   137c4:	mov	r1, #0
   137c8:	sub	r2, r2, r0
   137cc:	add	r0, r5, r0, lsl #3
   137d0:	lsl	r2, r2, #3
   137d4:	bl	10cfc <memset@plt>
   137d8:	ldr	r3, [sp, #80]	; 0x50
   137dc:	str	r3, [r6, #4]
   137e0:	add	fp, r5, r4, lsl #3
   137e4:	ldr	r1, [sp, #36]	; 0x24
   137e8:	ldr	r8, [r5, r4, lsl #3]
   137ec:	ldr	r6, [fp, #4]
   137f0:	ldr	r2, [sp, #72]	; 0x48
   137f4:	ldr	r3, [sp, #32]
   137f8:	ldr	ip, [sp, #76]	; 0x4c
   137fc:	orr	r1, r1, #1
   13800:	add	sl, sp, #40	; 0x28
   13804:	str	r1, [sp, #28]
   13808:	str	r1, [sp, #4]
   1380c:	str	r2, [sp, #12]
   13810:	str	r3, [sp]
   13814:	mov	r0, r6
   13818:	mov	r1, r8
   1381c:	str	ip, [sp, #16]
   13820:	str	sl, [sp, #8]
   13824:	mvn	r3, #0
   13828:	mov	r2, r9
   1382c:	bl	11754 <abort@plt+0x9d4>
   13830:	cmp	r8, r0
   13834:	bhi	13898 <abort@plt+0x2b18>
   13838:	ldr	r3, [pc, #164]	; 138e4 <abort@plt+0x2b64>
   1383c:	add	r8, r0, #1
   13840:	cmp	r6, r3
   13844:	str	r8, [r5, r4, lsl #3]
   13848:	beq	13854 <abort@plt+0x2ad4>
   1384c:	mov	r0, r6
   13850:	bl	168dc <abort@plt+0x5b5c>
   13854:	mov	r0, r8
   13858:	bl	16030 <abort@plt+0x52b0>
   1385c:	ldr	lr, [sp, #76]	; 0x4c
   13860:	ldr	r3, [sp, #32]
   13864:	ldr	ip, [sp, #72]	; 0x48
   13868:	ldr	r4, [sp, #28]
   1386c:	mov	r2, r9
   13870:	mov	r1, r8
   13874:	str	r0, [fp, #4]
   13878:	str	r3, [sp]
   1387c:	str	sl, [sp, #8]
   13880:	str	r4, [sp, #4]
   13884:	str	lr, [sp, #16]
   13888:	str	ip, [sp, #12]
   1388c:	mvn	r3, #0
   13890:	mov	r6, r0
   13894:	bl	11754 <abort@plt+0x9d4>
   13898:	ldr	r3, [sp, #24]
   1389c:	mov	r0, r6
   138a0:	str	r3, [r7]
   138a4:	add	sp, sp, #132	; 0x84
   138a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   138ac:	mov	r3, #8
   138b0:	sub	r2, r4, r2
   138b4:	add	r1, sp, #80	; 0x50
   138b8:	str	r3, [sp]
   138bc:	add	r2, r2, #1
   138c0:	mvn	r3, #-2147483648	; 0x80000000
   138c4:	bl	1624c <abort@plt+0x54cc>
   138c8:	mov	r5, r0
   138cc:	ldm	r8, {r0, r1}
   138d0:	str	r5, [r6]
   138d4:	stm	r5, {r0, r1}
   138d8:	b	137bc <abort@plt+0x2a3c>
   138dc:	bl	10d80 <abort@plt>
   138e0:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   138e4:	andeq	r8, r2, r4, ror r1
   138e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   138ec:	sub	sp, sp, #132	; 0x84
   138f0:	mov	r5, r1
   138f4:	mov	r4, r0
   138f8:	mov	r9, r2
   138fc:	add	r0, sp, #80	; 0x50
   13900:	mov	r2, #48	; 0x30
   13904:	mov	r1, #0
   13908:	mov	sl, r3
   1390c:	bl	10cfc <memset@plt>
   13910:	cmp	r5, #10
   13914:	beq	13ad0 <abort@plt+0x2d50>
   13918:	add	lr, sp, #80	; 0x50
   1391c:	str	r5, [sp, #80]	; 0x50
   13920:	ldm	lr!, {r0, r1, r2, r3}
   13924:	add	ip, sp, #32
   13928:	ldr	r6, [pc, #420]	; 13ad4 <abort@plt+0x2d54>
   1392c:	stmia	ip!, {r0, r1, r2, r3}
   13930:	ldm	lr!, {r0, r1, r2, r3}
   13934:	stmia	ip!, {r0, r1, r2, r3}
   13938:	ldm	lr, {r0, r1, r2, r3}
   1393c:	stm	ip, {r0, r1, r2, r3}
   13940:	bl	10ce4 <__errno_location@plt>
   13944:	cmn	r4, #-2147483647	; 0x80000001
   13948:	ldr	r5, [r6]
   1394c:	mov	r7, r0
   13950:	movne	r0, #0
   13954:	moveq	r0, #1
   13958:	ldr	r3, [r7]
   1395c:	orrs	r0, r0, r4, lsr #31
   13960:	str	r3, [sp, #24]
   13964:	bne	13ad0 <abort@plt+0x2d50>
   13968:	ldr	r2, [r6, #4]
   1396c:	cmp	r4, r2
   13970:	blt	139d0 <abort@plt+0x2c50>
   13974:	add	r8, r6, #8
   13978:	cmp	r5, r8
   1397c:	str	r2, [sp, #80]	; 0x50
   13980:	beq	13aa0 <abort@plt+0x2d20>
   13984:	mov	r3, #8
   13988:	sub	r2, r4, r2
   1398c:	mov	r0, r5
   13990:	str	r3, [sp]
   13994:	add	r2, r2, #1
   13998:	add	r1, sp, #80	; 0x50
   1399c:	mvn	r3, #-2147483648	; 0x80000000
   139a0:	bl	1624c <abort@plt+0x54cc>
   139a4:	mov	r5, r0
   139a8:	str	r0, [r6]
   139ac:	ldr	r0, [r6, #4]
   139b0:	ldr	r2, [sp, #80]	; 0x50
   139b4:	mov	r1, #0
   139b8:	sub	r2, r2, r0
   139bc:	add	r0, r5, r0, lsl #3
   139c0:	lsl	r2, r2, #3
   139c4:	bl	10cfc <memset@plt>
   139c8:	ldr	r3, [sp, #80]	; 0x50
   139cc:	str	r3, [r6, #4]
   139d0:	add	fp, r5, r4, lsl #3
   139d4:	ldr	r3, [sp, #32]
   139d8:	ldr	r1, [sp, #36]	; 0x24
   139dc:	ldr	r8, [r5, r4, lsl #3]
   139e0:	ldr	r6, [fp, #4]
   139e4:	ldr	r2, [sp, #72]	; 0x48
   139e8:	ldr	ip, [sp, #76]	; 0x4c
   139ec:	orr	r1, r1, #1
   139f0:	str	r3, [sp]
   139f4:	add	r3, sp, #40	; 0x28
   139f8:	str	r1, [sp, #28]
   139fc:	str	r1, [sp, #4]
   13a00:	str	r2, [sp, #12]
   13a04:	str	r3, [sp, #8]
   13a08:	mov	r0, r6
   13a0c:	mov	r1, r8
   13a10:	str	ip, [sp, #16]
   13a14:	mov	r3, sl
   13a18:	mov	r2, r9
   13a1c:	bl	11754 <abort@plt+0x9d4>
   13a20:	cmp	r8, r0
   13a24:	bhi	13a8c <abort@plt+0x2d0c>
   13a28:	ldr	r3, [pc, #168]	; 13ad8 <abort@plt+0x2d58>
   13a2c:	add	r8, r0, #1
   13a30:	cmp	r6, r3
   13a34:	str	r8, [r5, r4, lsl #3]
   13a38:	beq	13a44 <abort@plt+0x2cc4>
   13a3c:	mov	r0, r6
   13a40:	bl	168dc <abort@plt+0x5b5c>
   13a44:	mov	r0, r8
   13a48:	bl	16030 <abort@plt+0x52b0>
   13a4c:	add	lr, sp, #40	; 0x28
   13a50:	ldr	ip, [sp, #76]	; 0x4c
   13a54:	ldr	r4, [sp, #72]	; 0x48
   13a58:	ldr	r5, [sp, #28]
   13a5c:	mov	r3, sl
   13a60:	mov	r2, r9
   13a64:	mov	r1, r8
   13a68:	str	r0, [fp, #4]
   13a6c:	str	lr, [sp, #8]
   13a70:	ldr	lr, [sp, #32]
   13a74:	str	r5, [sp, #4]
   13a78:	str	ip, [sp, #16]
   13a7c:	str	r4, [sp, #12]
   13a80:	str	lr, [sp]
   13a84:	mov	r6, r0
   13a88:	bl	11754 <abort@plt+0x9d4>
   13a8c:	ldr	r3, [sp, #24]
   13a90:	mov	r0, r6
   13a94:	str	r3, [r7]
   13a98:	add	sp, sp, #132	; 0x84
   13a9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13aa0:	mov	r3, #8
   13aa4:	sub	r2, r4, r2
   13aa8:	add	r1, sp, #80	; 0x50
   13aac:	str	r3, [sp]
   13ab0:	add	r2, r2, #1
   13ab4:	mvn	r3, #-2147483648	; 0x80000000
   13ab8:	bl	1624c <abort@plt+0x54cc>
   13abc:	mov	r5, r0
   13ac0:	ldm	r8, {r0, r1}
   13ac4:	str	r5, [r6]
   13ac8:	stm	r5, {r0, r1}
   13acc:	b	139ac <abort@plt+0x2c2c>
   13ad0:	bl	10d80 <abort@plt>
   13ad4:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   13ad8:	andeq	r8, r2, r4, ror r1
   13adc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ae0:	sub	sp, sp, #124	; 0x7c
   13ae4:	mov	r4, r0
   13ae8:	mov	r9, r1
   13aec:	add	r0, sp, #72	; 0x48
   13af0:	mov	r2, #48	; 0x30
   13af4:	mov	r1, #0
   13af8:	bl	10cfc <memset@plt>
   13afc:	cmp	r4, #10
   13b00:	beq	13c8c <abort@plt+0x2f0c>
   13b04:	add	lr, sp, #72	; 0x48
   13b08:	str	r4, [sp, #72]	; 0x48
   13b0c:	ldm	lr!, {r0, r1, r2, r3}
   13b10:	add	ip, sp, #24
   13b14:	ldr	r5, [pc, #372]	; 13c90 <abort@plt+0x2f10>
   13b18:	stmia	ip!, {r0, r1, r2, r3}
   13b1c:	ldm	lr!, {r0, r1, r2, r3}
   13b20:	stmia	ip!, {r0, r1, r2, r3}
   13b24:	ldm	lr, {r0, r1, r2, r3}
   13b28:	stm	ip, {r0, r1, r2, r3}
   13b2c:	bl	10ce4 <__errno_location@plt>
   13b30:	ldr	r2, [r5, #4]
   13b34:	ldr	r4, [r5]
   13b38:	cmp	r2, #0
   13b3c:	mov	r7, r0
   13b40:	ldr	fp, [r0]
   13b44:	bgt	13ba0 <abort@plt+0x2e20>
   13b48:	add	r6, r5, #8
   13b4c:	cmp	r4, r6
   13b50:	str	r2, [sp, #72]	; 0x48
   13b54:	beq	13c5c <abort@plt+0x2edc>
   13b58:	mov	r3, #8
   13b5c:	mov	r0, r4
   13b60:	str	r3, [sp]
   13b64:	rsb	r2, r2, #1
   13b68:	add	r1, sp, #72	; 0x48
   13b6c:	mvn	r3, #-2147483648	; 0x80000000
   13b70:	bl	1624c <abort@plt+0x54cc>
   13b74:	mov	r4, r0
   13b78:	str	r0, [r5]
   13b7c:	ldr	r0, [r5, #4]
   13b80:	ldr	r2, [sp, #72]	; 0x48
   13b84:	mov	r1, #0
   13b88:	sub	r2, r2, r0
   13b8c:	add	r0, r4, r0, lsl #3
   13b90:	lsl	r2, r2, #3
   13b94:	bl	10cfc <memset@plt>
   13b98:	ldr	r3, [sp, #72]	; 0x48
   13b9c:	str	r3, [r5, #4]
   13ba0:	ldr	r6, [sp, #28]
   13ba4:	ldr	r8, [r4]
   13ba8:	ldr	r5, [r4, #4]
   13bac:	ldr	r2, [sp, #64]	; 0x40
   13bb0:	ldr	r3, [sp, #24]
   13bb4:	ldr	ip, [sp, #68]	; 0x44
   13bb8:	orr	r6, r6, #1
   13bbc:	add	sl, sp, #32
   13bc0:	str	r2, [sp, #12]
   13bc4:	str	r3, [sp]
   13bc8:	str	r6, [sp, #4]
   13bcc:	mov	r1, r8
   13bd0:	mov	r0, r5
   13bd4:	str	ip, [sp, #16]
   13bd8:	str	sl, [sp, #8]
   13bdc:	mvn	r3, #0
   13be0:	mov	r2, r9
   13be4:	bl	11754 <abort@plt+0x9d4>
   13be8:	cmp	r8, r0
   13bec:	bhi	13c4c <abort@plt+0x2ecc>
   13bf0:	ldr	r3, [pc, #156]	; 13c94 <abort@plt+0x2f14>
   13bf4:	add	r8, r0, #1
   13bf8:	cmp	r5, r3
   13bfc:	str	r8, [r4]
   13c00:	beq	13c0c <abort@plt+0x2e8c>
   13c04:	mov	r0, r5
   13c08:	bl	168dc <abort@plt+0x5b5c>
   13c0c:	mov	r0, r8
   13c10:	bl	16030 <abort@plt+0x52b0>
   13c14:	ldr	lr, [sp, #68]	; 0x44
   13c18:	ldr	r3, [sp, #24]
   13c1c:	ldr	ip, [sp, #64]	; 0x40
   13c20:	mov	r2, r9
   13c24:	mov	r1, r8
   13c28:	str	r0, [r4, #4]
   13c2c:	str	r3, [sp]
   13c30:	str	sl, [sp, #8]
   13c34:	str	r6, [sp, #4]
   13c38:	str	lr, [sp, #16]
   13c3c:	str	ip, [sp, #12]
   13c40:	mvn	r3, #0
   13c44:	mov	r5, r0
   13c48:	bl	11754 <abort@plt+0x9d4>
   13c4c:	mov	r0, r5
   13c50:	str	fp, [r7]
   13c54:	add	sp, sp, #124	; 0x7c
   13c58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13c5c:	mov	r3, #8
   13c60:	add	r1, sp, #72	; 0x48
   13c64:	str	r3, [sp]
   13c68:	rsb	r2, r2, #1
   13c6c:	mvn	r3, #-2147483648	; 0x80000000
   13c70:	mov	r0, #0
   13c74:	bl	1624c <abort@plt+0x54cc>
   13c78:	mov	r4, r0
   13c7c:	ldm	r6, {r0, r1}
   13c80:	str	r4, [r5]
   13c84:	stm	r4, {r0, r1}
   13c88:	b	13b7c <abort@plt+0x2dfc>
   13c8c:	bl	10d80 <abort@plt>
   13c90:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   13c94:	andeq	r8, r2, r4, ror r1
   13c98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13c9c:	sub	sp, sp, #132	; 0x84
   13ca0:	mov	r4, r0
   13ca4:	mov	r9, r1
   13ca8:	mov	sl, r2
   13cac:	add	r0, sp, #80	; 0x50
   13cb0:	mov	r2, #48	; 0x30
   13cb4:	mov	r1, #0
   13cb8:	bl	10cfc <memset@plt>
   13cbc:	cmp	r4, #10
   13cc0:	beq	13e54 <abort@plt+0x30d4>
   13cc4:	add	lr, sp, #80	; 0x50
   13cc8:	str	r4, [sp, #80]	; 0x50
   13ccc:	ldm	lr!, {r0, r1, r2, r3}
   13cd0:	add	ip, sp, #32
   13cd4:	ldr	r5, [pc, #380]	; 13e58 <abort@plt+0x30d8>
   13cd8:	stmia	ip!, {r0, r1, r2, r3}
   13cdc:	ldm	lr!, {r0, r1, r2, r3}
   13ce0:	stmia	ip!, {r0, r1, r2, r3}
   13ce4:	ldm	lr, {r0, r1, r2, r3}
   13ce8:	stm	ip, {r0, r1, r2, r3}
   13cec:	bl	10ce4 <__errno_location@plt>
   13cf0:	ldr	r2, [r5, #4]
   13cf4:	ldr	r4, [r5]
   13cf8:	cmp	r2, #0
   13cfc:	ldr	r3, [r0]
   13d00:	mov	r7, r0
   13d04:	str	r3, [sp, #28]
   13d08:	bgt	13d64 <abort@plt+0x2fe4>
   13d0c:	add	r6, r5, #8
   13d10:	cmp	r4, r6
   13d14:	str	r2, [sp, #80]	; 0x50
   13d18:	beq	13e24 <abort@plt+0x30a4>
   13d1c:	mov	r3, #8
   13d20:	mov	r0, r4
   13d24:	str	r3, [sp]
   13d28:	rsb	r2, r2, #1
   13d2c:	add	r1, sp, #80	; 0x50
   13d30:	mvn	r3, #-2147483648	; 0x80000000
   13d34:	bl	1624c <abort@plt+0x54cc>
   13d38:	mov	r4, r0
   13d3c:	str	r0, [r5]
   13d40:	ldr	r0, [r5, #4]
   13d44:	ldr	r2, [sp, #80]	; 0x50
   13d48:	mov	r1, #0
   13d4c:	sub	r2, r2, r0
   13d50:	add	r0, r4, r0, lsl #3
   13d54:	lsl	r2, r2, #3
   13d58:	bl	10cfc <memset@plt>
   13d5c:	ldr	r3, [sp, #80]	; 0x50
   13d60:	str	r3, [r5, #4]
   13d64:	ldr	r6, [sp, #36]	; 0x24
   13d68:	ldr	r8, [r4]
   13d6c:	ldr	r5, [r4, #4]
   13d70:	ldr	r2, [sp, #72]	; 0x48
   13d74:	ldr	r3, [sp, #32]
   13d78:	ldr	ip, [sp, #76]	; 0x4c
   13d7c:	orr	r6, r6, #1
   13d80:	add	fp, sp, #40	; 0x28
   13d84:	str	r2, [sp, #12]
   13d88:	str	r3, [sp]
   13d8c:	str	r6, [sp, #4]
   13d90:	mov	r1, r8
   13d94:	mov	r0, r5
   13d98:	str	ip, [sp, #16]
   13d9c:	str	fp, [sp, #8]
   13da0:	mov	r3, sl
   13da4:	mov	r2, r9
   13da8:	bl	11754 <abort@plt+0x9d4>
   13dac:	cmp	r8, r0
   13db0:	bhi	13e10 <abort@plt+0x3090>
   13db4:	ldr	r3, [pc, #160]	; 13e5c <abort@plt+0x30dc>
   13db8:	add	r8, r0, #1
   13dbc:	cmp	r5, r3
   13dc0:	str	r8, [r4]
   13dc4:	beq	13dd0 <abort@plt+0x3050>
   13dc8:	mov	r0, r5
   13dcc:	bl	168dc <abort@plt+0x5b5c>
   13dd0:	mov	r0, r8
   13dd4:	bl	16030 <abort@plt+0x52b0>
   13dd8:	ldr	ip, [sp, #76]	; 0x4c
   13ddc:	ldr	lr, [sp, #32]
   13de0:	mov	r3, sl
   13de4:	mov	r2, r9
   13de8:	mov	r1, r8
   13dec:	str	r0, [r4, #4]
   13df0:	ldr	r4, [sp, #72]	; 0x48
   13df4:	str	fp, [sp, #8]
   13df8:	str	r6, [sp, #4]
   13dfc:	str	ip, [sp, #16]
   13e00:	str	r4, [sp, #12]
   13e04:	str	lr, [sp]
   13e08:	mov	r5, r0
   13e0c:	bl	11754 <abort@plt+0x9d4>
   13e10:	ldr	r3, [sp, #28]
   13e14:	mov	r0, r5
   13e18:	str	r3, [r7]
   13e1c:	add	sp, sp, #132	; 0x84
   13e20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e24:	mov	r3, #8
   13e28:	add	r1, sp, #80	; 0x50
   13e2c:	str	r3, [sp]
   13e30:	rsb	r2, r2, #1
   13e34:	mvn	r3, #-2147483648	; 0x80000000
   13e38:	mov	r0, #0
   13e3c:	bl	1624c <abort@plt+0x54cc>
   13e40:	mov	r4, r0
   13e44:	ldm	r6, {r0, r1}
   13e48:	str	r4, [r5]
   13e4c:	stm	r4, {r0, r1}
   13e50:	b	13d40 <abort@plt+0x2fc0>
   13e54:	bl	10d80 <abort@plt>
   13e58:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   13e5c:	andeq	r8, r2, r4, ror r1
   13e60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e64:	mov	r4, r2
   13e68:	ldr	lr, [pc, #432]	; 14020 <abort@plt+0x32a0>
   13e6c:	mov	sl, r0
   13e70:	mov	fp, r1
   13e74:	ldm	lr!, {r0, r1, r2, r3}
   13e78:	sub	sp, sp, #92	; 0x5c
   13e7c:	add	ip, sp, #40	; 0x28
   13e80:	lsr	r7, r4, #5
   13e84:	stmia	ip!, {r0, r1, r2, r3}
   13e88:	add	r6, sp, #48	; 0x30
   13e8c:	ldm	lr!, {r0, r1, r2, r3}
   13e90:	and	r4, r4, #31
   13e94:	ldr	r5, [pc, #392]	; 14024 <abort@plt+0x32a4>
   13e98:	stmia	ip!, {r0, r1, r2, r3}
   13e9c:	ldm	lr, {r0, r1, r2, r3}
   13ea0:	stm	ip, {r0, r1, r2, r3}
   13ea4:	ldr	r2, [r6, r7, lsl #2]
   13ea8:	lsr	r3, r2, r4
   13eac:	eor	r3, r3, #1
   13eb0:	and	r3, r3, #1
   13eb4:	eor	r4, r2, r3, lsl r4
   13eb8:	str	r4, [r6, r7, lsl #2]
   13ebc:	bl	10ce4 <__errno_location@plt>
   13ec0:	ldr	r2, [r5, #4]
   13ec4:	ldr	r4, [r5]
   13ec8:	cmp	r2, #0
   13ecc:	ldr	r3, [r0]
   13ed0:	mov	r8, r0
   13ed4:	str	r3, [sp, #28]
   13ed8:	bgt	13f34 <abort@plt+0x31b4>
   13edc:	add	r7, r5, #8
   13ee0:	cmp	r4, r7
   13ee4:	str	r2, [sp, #36]	; 0x24
   13ee8:	beq	13ff0 <abort@plt+0x3270>
   13eec:	mov	r3, #8
   13ef0:	mov	r0, r4
   13ef4:	str	r3, [sp]
   13ef8:	rsb	r2, r2, #1
   13efc:	mvn	r3, #-2147483648	; 0x80000000
   13f00:	add	r1, sp, #36	; 0x24
   13f04:	bl	1624c <abort@plt+0x54cc>
   13f08:	mov	r4, r0
   13f0c:	str	r0, [r5]
   13f10:	ldr	r0, [r5, #4]
   13f14:	ldr	r2, [sp, #36]	; 0x24
   13f18:	mov	r1, #0
   13f1c:	sub	r2, r2, r0
   13f20:	add	r0, r4, r0, lsl #3
   13f24:	lsl	r2, r2, #3
   13f28:	bl	10cfc <memset@plt>
   13f2c:	ldr	r3, [sp, #36]	; 0x24
   13f30:	str	r3, [r5, #4]
   13f34:	ldr	r7, [sp, #44]	; 0x2c
   13f38:	ldr	r9, [r4]
   13f3c:	ldr	r5, [r4, #4]
   13f40:	ldr	r2, [sp, #80]	; 0x50
   13f44:	ldr	r3, [sp, #40]	; 0x28
   13f48:	ldr	ip, [sp, #84]	; 0x54
   13f4c:	orr	r7, r7, #1
   13f50:	str	r2, [sp, #12]
   13f54:	str	r3, [sp]
   13f58:	str	r7, [sp, #4]
   13f5c:	str	r6, [sp, #8]
   13f60:	mov	r1, r9
   13f64:	mov	r0, r5
   13f68:	str	ip, [sp, #16]
   13f6c:	mov	r3, fp
   13f70:	mov	r2, sl
   13f74:	bl	11754 <abort@plt+0x9d4>
   13f78:	cmp	r9, r0
   13f7c:	bhi	13fdc <abort@plt+0x325c>
   13f80:	ldr	r3, [pc, #160]	; 14028 <abort@plt+0x32a8>
   13f84:	add	r9, r0, #1
   13f88:	cmp	r5, r3
   13f8c:	str	r9, [r4]
   13f90:	beq	13f9c <abort@plt+0x321c>
   13f94:	mov	r0, r5
   13f98:	bl	168dc <abort@plt+0x5b5c>
   13f9c:	mov	r0, r9
   13fa0:	bl	16030 <abort@plt+0x52b0>
   13fa4:	ldr	ip, [sp, #84]	; 0x54
   13fa8:	ldr	lr, [sp, #40]	; 0x28
   13fac:	mov	r3, fp
   13fb0:	mov	r2, sl
   13fb4:	mov	r1, r9
   13fb8:	str	r0, [r4, #4]
   13fbc:	ldr	r4, [sp, #80]	; 0x50
   13fc0:	str	r6, [sp, #8]
   13fc4:	str	r7, [sp, #4]
   13fc8:	str	ip, [sp, #16]
   13fcc:	str	r4, [sp, #12]
   13fd0:	str	lr, [sp]
   13fd4:	mov	r5, r0
   13fd8:	bl	11754 <abort@plt+0x9d4>
   13fdc:	ldr	r3, [sp, #28]
   13fe0:	mov	r0, r5
   13fe4:	str	r3, [r8]
   13fe8:	add	sp, sp, #92	; 0x5c
   13fec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ff0:	mov	r3, #8
   13ff4:	str	r3, [sp]
   13ff8:	add	r1, sp, #36	; 0x24
   13ffc:	rsb	r2, r2, #1
   14000:	mvn	r3, #-2147483648	; 0x80000000
   14004:	mov	r0, #0
   14008:	bl	1624c <abort@plt+0x54cc>
   1400c:	mov	r4, r0
   14010:	ldm	r7, {r0, r1}
   14014:	str	r4, [r5]
   14018:	stm	r4, {r0, r1}
   1401c:	b	13f10 <abort@plt+0x3190>
   14020:	andeq	r8, r2, r4, asr #2
   14024:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   14028:	andeq	r8, r2, r4, ror r1
   1402c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14030:	mov	r4, r1
   14034:	ldr	lr, [pc, #420]	; 141e0 <abort@plt+0x3460>
   14038:	mov	r6, r0
   1403c:	sub	sp, sp, #84	; 0x54
   14040:	ldm	lr!, {r0, r1, r2, r3}
   14044:	add	ip, sp, #32
   14048:	lsr	r8, r4, #5
   1404c:	add	r5, sp, #40	; 0x28
   14050:	stmia	ip!, {r0, r1, r2, r3}
   14054:	and	r4, r4, #31
   14058:	ldm	lr!, {r0, r1, r2, r3}
   1405c:	ldr	r7, [pc, #384]	; 141e4 <abort@plt+0x3464>
   14060:	stmia	ip!, {r0, r1, r2, r3}
   14064:	ldm	lr, {r0, r1, r2, r3}
   14068:	stm	ip, {r0, r1, r2, r3}
   1406c:	ldr	r2, [r5, r8, lsl #2]
   14070:	lsr	r3, r2, r4
   14074:	eor	r3, r3, #1
   14078:	and	r3, r3, #1
   1407c:	eor	r4, r2, r3, lsl r4
   14080:	str	r4, [r5, r8, lsl #2]
   14084:	bl	10ce4 <__errno_location@plt>
   14088:	ldr	r2, [r7, #4]
   1408c:	ldr	r4, [r7]
   14090:	cmp	r2, #0
   14094:	mov	r9, r0
   14098:	ldr	sl, [r0]
   1409c:	bgt	140f8 <abort@plt+0x3378>
   140a0:	add	r8, r7, #8
   140a4:	cmp	r4, r8
   140a8:	str	r2, [sp, #28]
   140ac:	beq	141b0 <abort@plt+0x3430>
   140b0:	mov	r3, #8
   140b4:	mov	r0, r4
   140b8:	str	r3, [sp]
   140bc:	rsb	r2, r2, #1
   140c0:	mvn	r3, #-2147483648	; 0x80000000
   140c4:	add	r1, sp, #28
   140c8:	bl	1624c <abort@plt+0x54cc>
   140cc:	mov	r4, r0
   140d0:	str	r0, [r7]
   140d4:	ldr	r0, [r7, #4]
   140d8:	ldr	r2, [sp, #28]
   140dc:	mov	r1, #0
   140e0:	sub	r2, r2, r0
   140e4:	add	r0, r4, r0, lsl #3
   140e8:	lsl	r2, r2, #3
   140ec:	bl	10cfc <memset@plt>
   140f0:	ldr	r3, [sp, #28]
   140f4:	str	r3, [r7, #4]
   140f8:	ldr	r8, [sp, #36]	; 0x24
   140fc:	ldr	fp, [r4]
   14100:	ldr	r7, [r4, #4]
   14104:	ldr	r2, [sp, #72]	; 0x48
   14108:	ldr	r3, [sp, #32]
   1410c:	ldr	ip, [sp, #76]	; 0x4c
   14110:	orr	r8, r8, #1
   14114:	str	r2, [sp, #12]
   14118:	str	r3, [sp]
   1411c:	str	r8, [sp, #4]
   14120:	str	r5, [sp, #8]
   14124:	mov	r1, fp
   14128:	mov	r0, r7
   1412c:	str	ip, [sp, #16]
   14130:	mvn	r3, #0
   14134:	mov	r2, r6
   14138:	bl	11754 <abort@plt+0x9d4>
   1413c:	cmp	fp, r0
   14140:	bhi	141a0 <abort@plt+0x3420>
   14144:	ldr	r3, [pc, #156]	; 141e8 <abort@plt+0x3468>
   14148:	add	fp, r0, #1
   1414c:	cmp	r7, r3
   14150:	str	fp, [r4]
   14154:	beq	14160 <abort@plt+0x33e0>
   14158:	mov	r0, r7
   1415c:	bl	168dc <abort@plt+0x5b5c>
   14160:	mov	r0, fp
   14164:	bl	16030 <abort@plt+0x52b0>
   14168:	ldr	lr, [sp, #76]	; 0x4c
   1416c:	ldr	r3, [sp, #32]
   14170:	ldr	ip, [sp, #72]	; 0x48
   14174:	mov	r2, r6
   14178:	mov	r1, fp
   1417c:	str	r0, [r4, #4]
   14180:	str	r3, [sp]
   14184:	str	r5, [sp, #8]
   14188:	str	r8, [sp, #4]
   1418c:	str	lr, [sp, #16]
   14190:	str	ip, [sp, #12]
   14194:	mvn	r3, #0
   14198:	mov	r7, r0
   1419c:	bl	11754 <abort@plt+0x9d4>
   141a0:	mov	r0, r7
   141a4:	str	sl, [r9]
   141a8:	add	sp, sp, #84	; 0x54
   141ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   141b0:	mov	r3, #8
   141b4:	str	r3, [sp]
   141b8:	add	r1, sp, #28
   141bc:	rsb	r2, r2, #1
   141c0:	mvn	r3, #-2147483648	; 0x80000000
   141c4:	mov	r0, #0
   141c8:	bl	1624c <abort@plt+0x54cc>
   141cc:	mov	r4, r0
   141d0:	ldm	r8, {r0, r1}
   141d4:	str	r4, [r7]
   141d8:	stm	r4, {r0, r1}
   141dc:	b	140d4 <abort@plt+0x3354>
   141e0:	andeq	r8, r2, r4, asr #2
   141e4:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   141e8:	andeq	r8, r2, r4, ror r1
   141ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   141f0:	mov	r6, r0
   141f4:	ldr	lr, [pc, #404]	; 14390 <abort@plt+0x3610>
   141f8:	sub	sp, sp, #84	; 0x54
   141fc:	add	ip, sp, #32
   14200:	ldm	lr!, {r0, r1, r2, r3}
   14204:	ldr	r5, [pc, #392]	; 14394 <abort@plt+0x3614>
   14208:	stmia	ip!, {r0, r1, r2, r3}
   1420c:	ldm	lr!, {r0, r1, r2, r3}
   14210:	ldr	r4, [sp, #44]	; 0x2c
   14214:	stmia	ip!, {r0, r1, r2, r3}
   14218:	ldm	lr, {r0, r1, r2, r3}
   1421c:	mvn	lr, r4
   14220:	and	lr, lr, #67108864	; 0x4000000
   14224:	eor	lr, lr, r4
   14228:	stm	ip, {r0, r1, r2, r3}
   1422c:	str	lr, [sp, #44]	; 0x2c
   14230:	bl	10ce4 <__errno_location@plt>
   14234:	ldr	r2, [r5, #4]
   14238:	ldr	r4, [r5]
   1423c:	cmp	r2, #0
   14240:	mov	r8, r0
   14244:	ldr	sl, [r0]
   14248:	bgt	142a4 <abort@plt+0x3524>
   1424c:	add	r7, r5, #8
   14250:	cmp	r4, r7
   14254:	str	r2, [sp, #28]
   14258:	beq	14360 <abort@plt+0x35e0>
   1425c:	mov	r3, #8
   14260:	mov	r0, r4
   14264:	str	r3, [sp]
   14268:	rsb	r2, r2, #1
   1426c:	mvn	r3, #-2147483648	; 0x80000000
   14270:	add	r1, sp, #28
   14274:	bl	1624c <abort@plt+0x54cc>
   14278:	mov	r4, r0
   1427c:	str	r0, [r5]
   14280:	ldr	r0, [r5, #4]
   14284:	ldr	r2, [sp, #28]
   14288:	mov	r1, #0
   1428c:	sub	r2, r2, r0
   14290:	add	r0, r4, r0, lsl #3
   14294:	lsl	r2, r2, #3
   14298:	bl	10cfc <memset@plt>
   1429c:	ldr	r3, [sp, #28]
   142a0:	str	r3, [r5, #4]
   142a4:	ldr	r7, [sp, #36]	; 0x24
   142a8:	ldr	r9, [r4]
   142ac:	ldr	r5, [r4, #4]
   142b0:	ldr	r2, [sp, #72]	; 0x48
   142b4:	ldr	r3, [sp, #32]
   142b8:	ldr	ip, [sp, #76]	; 0x4c
   142bc:	orr	r7, r7, #1
   142c0:	add	fp, sp, #40	; 0x28
   142c4:	str	r2, [sp, #12]
   142c8:	str	r3, [sp]
   142cc:	str	r7, [sp, #4]
   142d0:	mov	r1, r9
   142d4:	mov	r0, r5
   142d8:	str	ip, [sp, #16]
   142dc:	str	fp, [sp, #8]
   142e0:	mvn	r3, #0
   142e4:	mov	r2, r6
   142e8:	bl	11754 <abort@plt+0x9d4>
   142ec:	cmp	r9, r0
   142f0:	bhi	14350 <abort@plt+0x35d0>
   142f4:	ldr	r3, [pc, #156]	; 14398 <abort@plt+0x3618>
   142f8:	add	r9, r0, #1
   142fc:	cmp	r5, r3
   14300:	str	r9, [r4]
   14304:	beq	14310 <abort@plt+0x3590>
   14308:	mov	r0, r5
   1430c:	bl	168dc <abort@plt+0x5b5c>
   14310:	mov	r0, r9
   14314:	bl	16030 <abort@plt+0x52b0>
   14318:	ldr	lr, [sp, #76]	; 0x4c
   1431c:	ldr	r3, [sp, #32]
   14320:	ldr	ip, [sp, #72]	; 0x48
   14324:	mov	r2, r6
   14328:	mov	r1, r9
   1432c:	str	r0, [r4, #4]
   14330:	str	r3, [sp]
   14334:	str	fp, [sp, #8]
   14338:	str	r7, [sp, #4]
   1433c:	str	lr, [sp, #16]
   14340:	str	ip, [sp, #12]
   14344:	mvn	r3, #0
   14348:	mov	r5, r0
   1434c:	bl	11754 <abort@plt+0x9d4>
   14350:	mov	r0, r5
   14354:	str	sl, [r8]
   14358:	add	sp, sp, #84	; 0x54
   1435c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14360:	mov	r3, #8
   14364:	str	r3, [sp]
   14368:	add	r1, sp, #28
   1436c:	rsb	r2, r2, #1
   14370:	mvn	r3, #-2147483648	; 0x80000000
   14374:	mov	r0, #0
   14378:	bl	1624c <abort@plt+0x54cc>
   1437c:	mov	r4, r0
   14380:	ldm	r7, {r0, r1}
   14384:	str	r4, [r5]
   14388:	stm	r4, {r0, r1}
   1438c:	b	14280 <abort@plt+0x3500>
   14390:	andeq	r8, r2, r4, asr #2
   14394:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   14398:	andeq	r8, r2, r4, ror r1
   1439c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   143a0:	mov	r9, r0
   143a4:	ldr	lr, [pc, #416]	; 1454c <abort@plt+0x37cc>
   143a8:	mov	sl, r1
   143ac:	sub	sp, sp, #92	; 0x5c
   143b0:	ldm	lr!, {r0, r1, r2, r3}
   143b4:	add	ip, sp, #40	; 0x28
   143b8:	ldr	r5, [pc, #400]	; 14550 <abort@plt+0x37d0>
   143bc:	stmia	ip!, {r0, r1, r2, r3}
   143c0:	ldm	lr!, {r0, r1, r2, r3}
   143c4:	ldr	r4, [sp, #52]	; 0x34
   143c8:	stmia	ip!, {r0, r1, r2, r3}
   143cc:	ldm	lr, {r0, r1, r2, r3}
   143d0:	mvn	lr, r4
   143d4:	and	lr, lr, #67108864	; 0x4000000
   143d8:	eor	lr, lr, r4
   143dc:	stm	ip, {r0, r1, r2, r3}
   143e0:	str	lr, [sp, #52]	; 0x34
   143e4:	bl	10ce4 <__errno_location@plt>
   143e8:	ldr	r2, [r5, #4]
   143ec:	ldr	r4, [r5]
   143f0:	cmp	r2, #0
   143f4:	ldr	r3, [r0]
   143f8:	mov	r7, r0
   143fc:	str	r3, [sp, #28]
   14400:	bgt	1445c <abort@plt+0x36dc>
   14404:	add	r6, r5, #8
   14408:	cmp	r4, r6
   1440c:	str	r2, [sp, #36]	; 0x24
   14410:	beq	1451c <abort@plt+0x379c>
   14414:	mov	r3, #8
   14418:	mov	r0, r4
   1441c:	str	r3, [sp]
   14420:	rsb	r2, r2, #1
   14424:	mvn	r3, #-2147483648	; 0x80000000
   14428:	add	r1, sp, #36	; 0x24
   1442c:	bl	1624c <abort@plt+0x54cc>
   14430:	mov	r4, r0
   14434:	str	r0, [r5]
   14438:	ldr	r0, [r5, #4]
   1443c:	ldr	r2, [sp, #36]	; 0x24
   14440:	mov	r1, #0
   14444:	sub	r2, r2, r0
   14448:	add	r0, r4, r0, lsl #3
   1444c:	lsl	r2, r2, #3
   14450:	bl	10cfc <memset@plt>
   14454:	ldr	r3, [sp, #36]	; 0x24
   14458:	str	r3, [r5, #4]
   1445c:	ldr	r6, [sp, #44]	; 0x2c
   14460:	ldr	r8, [r4]
   14464:	ldr	r5, [r4, #4]
   14468:	ldr	r2, [sp, #80]	; 0x50
   1446c:	ldr	r3, [sp, #40]	; 0x28
   14470:	ldr	ip, [sp, #84]	; 0x54
   14474:	orr	r6, r6, #1
   14478:	add	fp, sp, #48	; 0x30
   1447c:	str	r2, [sp, #12]
   14480:	str	r3, [sp]
   14484:	str	r6, [sp, #4]
   14488:	mov	r1, r8
   1448c:	mov	r0, r5
   14490:	str	ip, [sp, #16]
   14494:	str	fp, [sp, #8]
   14498:	mov	r3, sl
   1449c:	mov	r2, r9
   144a0:	bl	11754 <abort@plt+0x9d4>
   144a4:	cmp	r8, r0
   144a8:	bhi	14508 <abort@plt+0x3788>
   144ac:	ldr	r3, [pc, #160]	; 14554 <abort@plt+0x37d4>
   144b0:	add	r8, r0, #1
   144b4:	cmp	r5, r3
   144b8:	str	r8, [r4]
   144bc:	beq	144c8 <abort@plt+0x3748>
   144c0:	mov	r0, r5
   144c4:	bl	168dc <abort@plt+0x5b5c>
   144c8:	mov	r0, r8
   144cc:	bl	16030 <abort@plt+0x52b0>
   144d0:	ldr	ip, [sp, #84]	; 0x54
   144d4:	ldr	lr, [sp, #40]	; 0x28
   144d8:	mov	r3, sl
   144dc:	mov	r2, r9
   144e0:	mov	r1, r8
   144e4:	str	r0, [r4, #4]
   144e8:	ldr	r4, [sp, #80]	; 0x50
   144ec:	str	fp, [sp, #8]
   144f0:	str	r6, [sp, #4]
   144f4:	str	ip, [sp, #16]
   144f8:	str	r4, [sp, #12]
   144fc:	str	lr, [sp]
   14500:	mov	r5, r0
   14504:	bl	11754 <abort@plt+0x9d4>
   14508:	ldr	r3, [sp, #28]
   1450c:	mov	r0, r5
   14510:	str	r3, [r7]
   14514:	add	sp, sp, #92	; 0x5c
   14518:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1451c:	mov	r3, #8
   14520:	str	r3, [sp]
   14524:	add	r1, sp, #36	; 0x24
   14528:	rsb	r2, r2, #1
   1452c:	mvn	r3, #-2147483648	; 0x80000000
   14530:	mov	r0, #0
   14534:	bl	1624c <abort@plt+0x54cc>
   14538:	mov	r4, r0
   1453c:	ldm	r6, {r0, r1}
   14540:	str	r4, [r5]
   14544:	stm	r4, {r0, r1}
   14548:	b	14438 <abort@plt+0x36b8>
   1454c:	andeq	r8, r2, r4, asr #2
   14550:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   14554:	andeq	r8, r2, r4, ror r1
   14558:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1455c:	sub	sp, sp, #180	; 0xb4
   14560:	mov	r6, r1
   14564:	mov	r4, r0
   14568:	mov	r9, r2
   1456c:	add	r0, sp, #80	; 0x50
   14570:	mov	r2, #48	; 0x30
   14574:	mov	r1, #0
   14578:	bl	10cfc <memset@plt>
   1457c:	cmp	r6, #10
   14580:	beq	14760 <abort@plt+0x39e0>
   14584:	add	r5, sp, #80	; 0x50
   14588:	str	r6, [sp, #80]	; 0x50
   1458c:	ldm	r5!, {r0, r1, r2, r3}
   14590:	add	ip, sp, #128	; 0x80
   14594:	mov	r7, ip
   14598:	add	lr, sp, #32
   1459c:	stmia	ip!, {r0, r1, r2, r3}
   145a0:	mov	r8, #67108864	; 0x4000000
   145a4:	ldm	r5!, {r0, r1, r2, r3}
   145a8:	ldr	r6, [pc, #436]	; 14764 <abort@plt+0x39e4>
   145ac:	stmia	ip!, {r0, r1, r2, r3}
   145b0:	ldm	r5, {r0, r1, r2, r3}
   145b4:	stm	ip, {r0, r1, r2, r3}
   145b8:	ldm	r7!, {r0, r1, r2, r3}
   145bc:	stmia	lr!, {r0, r1, r2, r3}
   145c0:	ldm	r7!, {r0, r1, r2, r3}
   145c4:	str	r8, [sp, #44]	; 0x2c
   145c8:	stmia	lr!, {r0, r1, r2, r3}
   145cc:	ldm	ip, {r0, r1, r2, r3}
   145d0:	stm	lr, {r0, r1, r2, r3}
   145d4:	bl	10ce4 <__errno_location@plt>
   145d8:	cmn	r4, #-2147483647	; 0x80000001
   145dc:	ldr	r5, [r6]
   145e0:	mov	r7, r0
   145e4:	movne	r0, #0
   145e8:	moveq	r0, #1
   145ec:	ldr	r3, [r7]
   145f0:	orrs	r0, r0, r4, lsr #31
   145f4:	str	r3, [sp, #24]
   145f8:	bne	14760 <abort@plt+0x39e0>
   145fc:	ldr	r2, [r6, #4]
   14600:	cmp	r4, r2
   14604:	blt	14664 <abort@plt+0x38e4>
   14608:	add	r8, r6, #8
   1460c:	cmp	r5, r8
   14610:	str	r2, [sp, #80]	; 0x50
   14614:	beq	14730 <abort@plt+0x39b0>
   14618:	mov	r3, #8
   1461c:	sub	r2, r4, r2
   14620:	mov	r0, r5
   14624:	str	r3, [sp]
   14628:	add	r2, r2, #1
   1462c:	add	r1, sp, #80	; 0x50
   14630:	mvn	r3, #-2147483648	; 0x80000000
   14634:	bl	1624c <abort@plt+0x54cc>
   14638:	mov	r5, r0
   1463c:	str	r0, [r6]
   14640:	ldr	r0, [r6, #4]
   14644:	ldr	r2, [sp, #80]	; 0x50
   14648:	mov	r1, #0
   1464c:	sub	r2, r2, r0
   14650:	add	r0, r5, r0, lsl #3
   14654:	lsl	r2, r2, #3
   14658:	bl	10cfc <memset@plt>
   1465c:	ldr	r3, [sp, #80]	; 0x50
   14660:	str	r3, [r6, #4]
   14664:	add	fp, r5, r4, lsl #3
   14668:	ldr	r1, [sp, #36]	; 0x24
   1466c:	ldr	r8, [r5, r4, lsl #3]
   14670:	ldr	r6, [fp, #4]
   14674:	ldr	r2, [sp, #72]	; 0x48
   14678:	ldr	r3, [sp, #32]
   1467c:	ldr	ip, [sp, #76]	; 0x4c
   14680:	orr	r1, r1, #1
   14684:	add	sl, sp, #40	; 0x28
   14688:	str	r1, [sp, #28]
   1468c:	str	r1, [sp, #4]
   14690:	str	r2, [sp, #12]
   14694:	str	r3, [sp]
   14698:	mov	r0, r6
   1469c:	mov	r1, r8
   146a0:	str	ip, [sp, #16]
   146a4:	str	sl, [sp, #8]
   146a8:	mvn	r3, #0
   146ac:	mov	r2, r9
   146b0:	bl	11754 <abort@plt+0x9d4>
   146b4:	cmp	r8, r0
   146b8:	bhi	1471c <abort@plt+0x399c>
   146bc:	ldr	r3, [pc, #164]	; 14768 <abort@plt+0x39e8>
   146c0:	add	r8, r0, #1
   146c4:	cmp	r6, r3
   146c8:	str	r8, [r5, r4, lsl #3]
   146cc:	beq	146d8 <abort@plt+0x3958>
   146d0:	mov	r0, r6
   146d4:	bl	168dc <abort@plt+0x5b5c>
   146d8:	mov	r0, r8
   146dc:	bl	16030 <abort@plt+0x52b0>
   146e0:	ldr	lr, [sp, #76]	; 0x4c
   146e4:	ldr	r3, [sp, #32]
   146e8:	ldr	ip, [sp, #72]	; 0x48
   146ec:	ldr	r4, [sp, #28]
   146f0:	mov	r2, r9
   146f4:	mov	r1, r8
   146f8:	str	r0, [fp, #4]
   146fc:	str	r3, [sp]
   14700:	str	sl, [sp, #8]
   14704:	str	r4, [sp, #4]
   14708:	str	lr, [sp, #16]
   1470c:	str	ip, [sp, #12]
   14710:	mvn	r3, #0
   14714:	mov	r6, r0
   14718:	bl	11754 <abort@plt+0x9d4>
   1471c:	ldr	r3, [sp, #24]
   14720:	mov	r0, r6
   14724:	str	r3, [r7]
   14728:	add	sp, sp, #180	; 0xb4
   1472c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14730:	mov	r3, #8
   14734:	sub	r2, r4, r2
   14738:	add	r1, sp, #80	; 0x50
   1473c:	str	r3, [sp]
   14740:	add	r2, r2, #1
   14744:	mvn	r3, #-2147483648	; 0x80000000
   14748:	bl	1624c <abort@plt+0x54cc>
   1474c:	mov	r5, r0
   14750:	ldm	r8, {r0, r1}
   14754:	str	r5, [r6]
   14758:	stm	r5, {r0, r1}
   1475c:	b	14640 <abort@plt+0x38c0>
   14760:	bl	10d80 <abort@plt>
   14764:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   14768:	andeq	r8, r2, r4, ror r1
   1476c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14770:	mov	r7, r1
   14774:	ldr	lr, [pc, #492]	; 14968 <abort@plt+0x3be8>
   14778:	mov	r8, r2
   1477c:	mov	r4, r0
   14780:	mov	fp, r3
   14784:	ldm	lr!, {r0, r1, r2, r3}
   14788:	sub	sp, sp, #100	; 0x64
   1478c:	add	ip, sp, #48	; 0x30
   14790:	mov	sl, #10
   14794:	stmia	ip!, {r0, r1, r2, r3}
   14798:	cmp	r8, #0
   1479c:	cmpne	r7, #0
   147a0:	ldm	lr!, {r0, r1, r2, r3}
   147a4:	str	sl, [sp, #48]	; 0x30
   147a8:	stmia	ip!, {r0, r1, r2, r3}
   147ac:	ldm	lr, {r0, r1, r2, r3}
   147b0:	stm	ip, {r0, r1, r2, r3}
   147b4:	beq	14964 <abort@plt+0x3be4>
   147b8:	str	r7, [sp, #88]	; 0x58
   147bc:	str	r8, [sp, #92]	; 0x5c
   147c0:	bl	10ce4 <__errno_location@plt>
   147c4:	ldr	r6, [pc, #416]	; 1496c <abort@plt+0x3bec>
   147c8:	cmn	r4, #-2147483647	; 0x80000001
   147cc:	ldr	r5, [r6]
   147d0:	mov	r9, r0
   147d4:	movne	r0, #0
   147d8:	moveq	r0, #1
   147dc:	ldr	r3, [r9]
   147e0:	orrs	r0, r0, r4, lsr #31
   147e4:	str	r3, [sp, #28]
   147e8:	bne	14964 <abort@plt+0x3be4>
   147ec:	ldr	r2, [r6, #4]
   147f0:	cmp	r4, r2
   147f4:	movlt	r3, sl
   147f8:	blt	14864 <abort@plt+0x3ae4>
   147fc:	add	r7, r6, #8
   14800:	cmp	r5, r7
   14804:	str	r2, [sp, #44]	; 0x2c
   14808:	beq	14934 <abort@plt+0x3bb4>
   1480c:	mov	r3, #8
   14810:	sub	r2, r4, r2
   14814:	mov	r0, r5
   14818:	str	r3, [sp]
   1481c:	add	r2, r2, #1
   14820:	mvn	r3, #-2147483648	; 0x80000000
   14824:	add	r1, sp, #44	; 0x2c
   14828:	bl	1624c <abort@plt+0x54cc>
   1482c:	mov	r5, r0
   14830:	str	r0, [r6]
   14834:	ldr	r0, [r6, #4]
   14838:	ldr	r2, [sp, #44]	; 0x2c
   1483c:	mov	r1, #0
   14840:	sub	r2, r2, r0
   14844:	add	r0, r5, r0, lsl #3
   14848:	lsl	r2, r2, #3
   1484c:	bl	10cfc <memset@plt>
   14850:	ldr	r3, [sp, #48]	; 0x30
   14854:	ldr	r7, [sp, #88]	; 0x58
   14858:	ldr	r8, [sp, #92]	; 0x5c
   1485c:	ldr	r2, [sp, #44]	; 0x2c
   14860:	str	r2, [r6, #4]
   14864:	add	r2, r5, r4, lsl #3
   14868:	mov	r1, r2
   1486c:	str	r2, [sp, #32]
   14870:	ldr	r2, [sp, #52]	; 0x34
   14874:	ldr	r6, [r1, #4]
   14878:	ldr	sl, [r5, r4, lsl #3]
   1487c:	orr	r2, r2, #1
   14880:	str	r3, [sp]
   14884:	add	r3, sp, #56	; 0x38
   14888:	str	r2, [sp, #36]	; 0x24
   1488c:	str	r2, [sp, #4]
   14890:	str	r3, [sp, #8]
   14894:	mov	r0, r6
   14898:	str	r8, [sp, #16]
   1489c:	str	r7, [sp, #12]
   148a0:	mov	r1, sl
   148a4:	mvn	r3, #0
   148a8:	mov	r2, fp
   148ac:	bl	11754 <abort@plt+0x9d4>
   148b0:	cmp	sl, r0
   148b4:	bhi	14920 <abort@plt+0x3ba0>
   148b8:	ldr	r3, [pc, #176]	; 14970 <abort@plt+0x3bf0>
   148bc:	add	r7, r0, #1
   148c0:	cmp	r6, r3
   148c4:	str	r7, [r5, r4, lsl #3]
   148c8:	beq	148d4 <abort@plt+0x3b54>
   148cc:	mov	r0, r6
   148d0:	bl	168dc <abort@plt+0x5b5c>
   148d4:	mov	r0, r7
   148d8:	bl	16030 <abort@plt+0x52b0>
   148dc:	ldr	r3, [sp, #32]
   148e0:	ldr	lr, [sp, #92]	; 0x5c
   148e4:	ldr	ip, [sp, #88]	; 0x58
   148e8:	ldr	r4, [sp, #36]	; 0x24
   148ec:	mov	r2, fp
   148f0:	mov	r1, r7
   148f4:	str	r0, [r3, #4]
   148f8:	add	r3, sp, #56	; 0x38
   148fc:	str	r3, [sp, #8]
   14900:	ldr	r3, [sp, #48]	; 0x30
   14904:	str	r4, [sp, #4]
   14908:	str	r3, [sp]
   1490c:	str	lr, [sp, #16]
   14910:	str	ip, [sp, #12]
   14914:	mvn	r3, #0
   14918:	mov	r6, r0
   1491c:	bl	11754 <abort@plt+0x9d4>
   14920:	ldr	r3, [sp, #28]
   14924:	mov	r0, r6
   14928:	str	r3, [r9]
   1492c:	add	sp, sp, #100	; 0x64
   14930:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14934:	mov	r3, #8
   14938:	sub	r2, r4, r2
   1493c:	str	r3, [sp]
   14940:	add	r1, sp, #44	; 0x2c
   14944:	add	r2, r2, #1
   14948:	mvn	r3, #-2147483648	; 0x80000000
   1494c:	bl	1624c <abort@plt+0x54cc>
   14950:	mov	r5, r0
   14954:	ldm	r7, {r0, r1}
   14958:	str	r5, [r6]
   1495c:	stm	r5, {r0, r1}
   14960:	b	14834 <abort@plt+0x3ab4>
   14964:	bl	10d80 <abort@plt>
   14968:	andeq	r8, r2, r4, asr #2
   1496c:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   14970:	andeq	r8, r2, r4, ror r1
   14974:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14978:	mov	r7, r1
   1497c:	ldr	lr, [pc, #492]	; 14b70 <abort@plt+0x3df0>
   14980:	mov	r8, r2
   14984:	mov	r4, r0
   14988:	mov	fp, r3
   1498c:	ldm	lr!, {r0, r1, r2, r3}
   14990:	sub	sp, sp, #100	; 0x64
   14994:	add	ip, sp, #48	; 0x30
   14998:	mov	sl, #10
   1499c:	stmia	ip!, {r0, r1, r2, r3}
   149a0:	cmp	r8, #0
   149a4:	cmpne	r7, #0
   149a8:	ldm	lr!, {r0, r1, r2, r3}
   149ac:	str	sl, [sp, #48]	; 0x30
   149b0:	stmia	ip!, {r0, r1, r2, r3}
   149b4:	ldm	lr, {r0, r1, r2, r3}
   149b8:	stm	ip, {r0, r1, r2, r3}
   149bc:	beq	14b6c <abort@plt+0x3dec>
   149c0:	str	r7, [sp, #88]	; 0x58
   149c4:	str	r8, [sp, #92]	; 0x5c
   149c8:	bl	10ce4 <__errno_location@plt>
   149cc:	ldr	r6, [pc, #416]	; 14b74 <abort@plt+0x3df4>
   149d0:	cmn	r4, #-2147483647	; 0x80000001
   149d4:	ldr	r5, [r6]
   149d8:	mov	r9, r0
   149dc:	movne	r0, #0
   149e0:	moveq	r0, #1
   149e4:	ldr	r3, [r9]
   149e8:	orrs	r0, r0, r4, lsr #31
   149ec:	str	r3, [sp, #28]
   149f0:	bne	14b6c <abort@plt+0x3dec>
   149f4:	ldr	r2, [r6, #4]
   149f8:	cmp	r4, r2
   149fc:	movlt	r3, sl
   14a00:	blt	14a6c <abort@plt+0x3cec>
   14a04:	add	r7, r6, #8
   14a08:	cmp	r5, r7
   14a0c:	str	r2, [sp, #44]	; 0x2c
   14a10:	beq	14b3c <abort@plt+0x3dbc>
   14a14:	mov	r3, #8
   14a18:	sub	r2, r4, r2
   14a1c:	mov	r0, r5
   14a20:	str	r3, [sp]
   14a24:	add	r2, r2, #1
   14a28:	mvn	r3, #-2147483648	; 0x80000000
   14a2c:	add	r1, sp, #44	; 0x2c
   14a30:	bl	1624c <abort@plt+0x54cc>
   14a34:	mov	r5, r0
   14a38:	str	r0, [r6]
   14a3c:	ldr	r0, [r6, #4]
   14a40:	ldr	r2, [sp, #44]	; 0x2c
   14a44:	mov	r1, #0
   14a48:	sub	r2, r2, r0
   14a4c:	add	r0, r5, r0, lsl #3
   14a50:	lsl	r2, r2, #3
   14a54:	bl	10cfc <memset@plt>
   14a58:	ldr	r3, [sp, #48]	; 0x30
   14a5c:	ldr	r7, [sp, #88]	; 0x58
   14a60:	ldr	r8, [sp, #92]	; 0x5c
   14a64:	ldr	r2, [sp, #44]	; 0x2c
   14a68:	str	r2, [r6, #4]
   14a6c:	add	r2, r5, r4, lsl #3
   14a70:	mov	r1, r2
   14a74:	str	r2, [sp, #32]
   14a78:	ldr	r2, [sp, #52]	; 0x34
   14a7c:	ldr	r6, [r1, #4]
   14a80:	ldr	sl, [r5, r4, lsl #3]
   14a84:	orr	r2, r2, #1
   14a88:	str	r3, [sp]
   14a8c:	add	r3, sp, #56	; 0x38
   14a90:	str	r2, [sp, #36]	; 0x24
   14a94:	str	r2, [sp, #4]
   14a98:	str	r3, [sp, #8]
   14a9c:	mov	r0, r6
   14aa0:	str	r8, [sp, #16]
   14aa4:	str	r7, [sp, #12]
   14aa8:	mov	r1, sl
   14aac:	ldr	r3, [sp, #136]	; 0x88
   14ab0:	mov	r2, fp
   14ab4:	bl	11754 <abort@plt+0x9d4>
   14ab8:	cmp	sl, r0
   14abc:	bhi	14b28 <abort@plt+0x3da8>
   14ac0:	ldr	r3, [pc, #176]	; 14b78 <abort@plt+0x3df8>
   14ac4:	add	r7, r0, #1
   14ac8:	cmp	r6, r3
   14acc:	str	r7, [r5, r4, lsl #3]
   14ad0:	beq	14adc <abort@plt+0x3d5c>
   14ad4:	mov	r0, r6
   14ad8:	bl	168dc <abort@plt+0x5b5c>
   14adc:	mov	r0, r7
   14ae0:	bl	16030 <abort@plt+0x52b0>
   14ae4:	ldr	r3, [sp, #32]
   14ae8:	ldr	lr, [sp, #92]	; 0x5c
   14aec:	ldr	ip, [sp, #88]	; 0x58
   14af0:	ldr	r4, [sp, #36]	; 0x24
   14af4:	mov	r2, fp
   14af8:	mov	r1, r7
   14afc:	str	r0, [r3, #4]
   14b00:	add	r3, sp, #56	; 0x38
   14b04:	str	r3, [sp, #8]
   14b08:	ldr	r3, [sp, #48]	; 0x30
   14b0c:	str	r4, [sp, #4]
   14b10:	str	r3, [sp]
   14b14:	str	lr, [sp, #16]
   14b18:	str	ip, [sp, #12]
   14b1c:	ldr	r3, [sp, #136]	; 0x88
   14b20:	mov	r6, r0
   14b24:	bl	11754 <abort@plt+0x9d4>
   14b28:	ldr	r3, [sp, #28]
   14b2c:	mov	r0, r6
   14b30:	str	r3, [r9]
   14b34:	add	sp, sp, #100	; 0x64
   14b38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b3c:	mov	r3, #8
   14b40:	sub	r2, r4, r2
   14b44:	str	r3, [sp]
   14b48:	add	r1, sp, #44	; 0x2c
   14b4c:	add	r2, r2, #1
   14b50:	mvn	r3, #-2147483648	; 0x80000000
   14b54:	bl	1624c <abort@plt+0x54cc>
   14b58:	mov	r5, r0
   14b5c:	ldm	r7, {r0, r1}
   14b60:	str	r5, [r6]
   14b64:	stm	r5, {r0, r1}
   14b68:	b	14a3c <abort@plt+0x3cbc>
   14b6c:	bl	10d80 <abort@plt>
   14b70:	andeq	r8, r2, r4, asr #2
   14b74:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   14b78:	andeq	r8, r2, r4, ror r1
   14b7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14b80:	mov	r5, r0
   14b84:	ldr	lr, [pc, #452]	; 14d50 <abort@plt+0x3fd0>
   14b88:	mov	r6, r1
   14b8c:	mov	sl, r2
   14b90:	ldm	lr!, {r0, r1, r2, r3}
   14b94:	sub	sp, sp, #92	; 0x5c
   14b98:	add	ip, sp, #40	; 0x28
   14b9c:	cmp	r6, #0
   14ba0:	cmpne	r5, #0
   14ba4:	stmia	ip!, {r0, r1, r2, r3}
   14ba8:	mov	r9, #10
   14bac:	ldm	lr!, {r0, r1, r2, r3}
   14bb0:	moveq	fp, #1
   14bb4:	movne	fp, #0
   14bb8:	str	r9, [sp, #40]	; 0x28
   14bbc:	stmia	ip!, {r0, r1, r2, r3}
   14bc0:	ldm	lr, {r0, r1, r2, r3}
   14bc4:	stm	ip, {r0, r1, r2, r3}
   14bc8:	beq	14d4c <abort@plt+0x3fcc>
   14bcc:	str	r5, [sp, #80]	; 0x50
   14bd0:	str	r6, [sp, #84]	; 0x54
   14bd4:	bl	10ce4 <__errno_location@plt>
   14bd8:	ldr	r7, [pc, #372]	; 14d54 <abort@plt+0x3fd4>
   14bdc:	ldr	r2, [r7, #4]
   14be0:	ldr	r4, [r7]
   14be4:	cmp	r2, #0
   14be8:	ldr	r3, [r0]
   14bec:	mov	r8, r0
   14bf0:	str	r3, [sp, #24]
   14bf4:	movgt	r3, r9
   14bf8:	bgt	14c60 <abort@plt+0x3ee0>
   14bfc:	add	r5, r7, #8
   14c00:	cmp	r4, r5
   14c04:	str	r2, [sp, #36]	; 0x24
   14c08:	beq	14d1c <abort@plt+0x3f9c>
   14c0c:	mov	r3, #8
   14c10:	mov	r0, r4
   14c14:	str	r3, [sp]
   14c18:	rsb	r2, r2, #1
   14c1c:	mvn	r3, #-2147483648	; 0x80000000
   14c20:	add	r1, sp, #36	; 0x24
   14c24:	bl	1624c <abort@plt+0x54cc>
   14c28:	mov	r4, r0
   14c2c:	str	r0, [r7]
   14c30:	ldr	r0, [r7, #4]
   14c34:	ldr	r2, [sp, #36]	; 0x24
   14c38:	mov	r1, #0
   14c3c:	sub	r2, r2, r0
   14c40:	add	r0, r4, r0, lsl #3
   14c44:	lsl	r2, r2, #3
   14c48:	bl	10cfc <memset@plt>
   14c4c:	ldr	r3, [sp, #40]	; 0x28
   14c50:	ldr	r5, [sp, #80]	; 0x50
   14c54:	ldr	r6, [sp, #84]	; 0x54
   14c58:	ldr	r2, [sp, #36]	; 0x24
   14c5c:	str	r2, [r7, #4]
   14c60:	ldr	r2, [sp, #44]	; 0x2c
   14c64:	ldr	r9, [r4]
   14c68:	ldr	r7, [r4, #4]
   14c6c:	orr	r2, r2, #1
   14c70:	add	fp, sp, #48	; 0x30
   14c74:	str	r2, [sp, #28]
   14c78:	str	r2, [sp, #4]
   14c7c:	str	r3, [sp]
   14c80:	str	r6, [sp, #16]
   14c84:	str	r5, [sp, #12]
   14c88:	mov	r1, r9
   14c8c:	mov	r0, r7
   14c90:	str	fp, [sp, #8]
   14c94:	mvn	r3, #0
   14c98:	mov	r2, sl
   14c9c:	bl	11754 <abort@plt+0x9d4>
   14ca0:	cmp	r9, r0
   14ca4:	bhi	14d08 <abort@plt+0x3f88>
   14ca8:	ldr	r3, [pc, #168]	; 14d58 <abort@plt+0x3fd8>
   14cac:	add	r5, r0, #1
   14cb0:	cmp	r7, r3
   14cb4:	str	r5, [r4]
   14cb8:	beq	14cc4 <abort@plt+0x3f44>
   14cbc:	mov	r0, r7
   14cc0:	bl	168dc <abort@plt+0x5b5c>
   14cc4:	mov	r0, r5
   14cc8:	bl	16030 <abort@plt+0x52b0>
   14ccc:	ldr	lr, [sp, #84]	; 0x54
   14cd0:	ldr	r3, [sp, #40]	; 0x28
   14cd4:	ldr	ip, [sp, #80]	; 0x50
   14cd8:	mov	r2, sl
   14cdc:	mov	r1, r5
   14ce0:	str	r0, [r4, #4]
   14ce4:	ldr	r4, [sp, #28]
   14ce8:	str	r3, [sp]
   14cec:	str	fp, [sp, #8]
   14cf0:	str	r4, [sp, #4]
   14cf4:	str	lr, [sp, #16]
   14cf8:	str	ip, [sp, #12]
   14cfc:	mvn	r3, #0
   14d00:	mov	r7, r0
   14d04:	bl	11754 <abort@plt+0x9d4>
   14d08:	ldr	r3, [sp, #24]
   14d0c:	mov	r0, r7
   14d10:	str	r3, [r8]
   14d14:	add	sp, sp, #92	; 0x5c
   14d18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d1c:	mov	r3, #8
   14d20:	str	r3, [sp]
   14d24:	add	r1, sp, #36	; 0x24
   14d28:	rsb	r2, r2, #1
   14d2c:	mov	r0, fp
   14d30:	mvn	r3, #-2147483648	; 0x80000000
   14d34:	bl	1624c <abort@plt+0x54cc>
   14d38:	mov	r4, r0
   14d3c:	ldm	r5, {r0, r1}
   14d40:	str	r4, [r7]
   14d44:	stm	r4, {r0, r1}
   14d48:	b	14c30 <abort@plt+0x3eb0>
   14d4c:	bl	10d80 <abort@plt>
   14d50:	andeq	r8, r2, r4, asr #2
   14d54:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   14d58:	andeq	r8, r2, r4, ror r1
   14d5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14d60:	mov	r5, r0
   14d64:	ldr	lr, [pc, #464]	; 14f3c <abort@plt+0x41bc>
   14d68:	mov	r6, r1
   14d6c:	mov	sl, r2
   14d70:	mov	fp, r3
   14d74:	ldm	lr!, {r0, r1, r2, r3}
   14d78:	sub	sp, sp, #92	; 0x5c
   14d7c:	add	ip, sp, #40	; 0x28
   14d80:	cmp	r6, #0
   14d84:	cmpne	r5, #0
   14d88:	stmia	ip!, {r0, r1, r2, r3}
   14d8c:	moveq	r4, #1
   14d90:	ldm	lr!, {r0, r1, r2, r3}
   14d94:	movne	r4, #0
   14d98:	mov	r9, #10
   14d9c:	str	r4, [sp, #28]
   14da0:	stmia	ip!, {r0, r1, r2, r3}
   14da4:	ldm	lr, {r0, r1, r2, r3}
   14da8:	str	r9, [sp, #40]	; 0x28
   14dac:	stm	ip, {r0, r1, r2, r3}
   14db0:	beq	14f38 <abort@plt+0x41b8>
   14db4:	str	r5, [sp, #80]	; 0x50
   14db8:	str	r6, [sp, #84]	; 0x54
   14dbc:	bl	10ce4 <__errno_location@plt>
   14dc0:	ldr	r7, [pc, #376]	; 14f40 <abort@plt+0x41c0>
   14dc4:	ldr	r2, [r7, #4]
   14dc8:	ldr	r4, [r7]
   14dcc:	cmp	r2, #0
   14dd0:	ldr	r3, [r0]
   14dd4:	mov	r8, r0
   14dd8:	str	r3, [sp, #24]
   14ddc:	movgt	r3, r9
   14de0:	bgt	14e48 <abort@plt+0x40c8>
   14de4:	add	r5, r7, #8
   14de8:	cmp	r4, r5
   14dec:	str	r2, [sp, #36]	; 0x24
   14df0:	beq	14f08 <abort@plt+0x4188>
   14df4:	mov	r3, #8
   14df8:	mov	r0, r4
   14dfc:	str	r3, [sp]
   14e00:	rsb	r2, r2, #1
   14e04:	mvn	r3, #-2147483648	; 0x80000000
   14e08:	add	r1, sp, #36	; 0x24
   14e0c:	bl	1624c <abort@plt+0x54cc>
   14e10:	mov	r4, r0
   14e14:	str	r0, [r7]
   14e18:	ldr	r0, [r7, #4]
   14e1c:	ldr	r2, [sp, #36]	; 0x24
   14e20:	mov	r1, #0
   14e24:	sub	r2, r2, r0
   14e28:	add	r0, r4, r0, lsl #3
   14e2c:	lsl	r2, r2, #3
   14e30:	bl	10cfc <memset@plt>
   14e34:	ldr	r3, [sp, #40]	; 0x28
   14e38:	ldr	r5, [sp, #80]	; 0x50
   14e3c:	ldr	r6, [sp, #84]	; 0x54
   14e40:	ldr	r2, [sp, #36]	; 0x24
   14e44:	str	r2, [r7, #4]
   14e48:	ldr	r2, [sp, #44]	; 0x2c
   14e4c:	ldr	r9, [r4]
   14e50:	ldr	r7, [r4, #4]
   14e54:	orr	r2, r2, #1
   14e58:	str	r3, [sp]
   14e5c:	add	r3, sp, #48	; 0x30
   14e60:	str	r2, [sp, #28]
   14e64:	str	r2, [sp, #4]
   14e68:	str	r3, [sp, #8]
   14e6c:	str	r6, [sp, #16]
   14e70:	str	r5, [sp, #12]
   14e74:	mov	r1, r9
   14e78:	mov	r0, r7
   14e7c:	mov	r3, fp
   14e80:	mov	r2, sl
   14e84:	bl	11754 <abort@plt+0x9d4>
   14e88:	cmp	r9, r0
   14e8c:	bhi	14ef4 <abort@plt+0x4174>
   14e90:	ldr	r3, [pc, #172]	; 14f44 <abort@plt+0x41c4>
   14e94:	add	r5, r0, #1
   14e98:	cmp	r7, r3
   14e9c:	str	r5, [r4]
   14ea0:	beq	14eac <abort@plt+0x412c>
   14ea4:	mov	r0, r7
   14ea8:	bl	168dc <abort@plt+0x5b5c>
   14eac:	mov	r0, r5
   14eb0:	bl	16030 <abort@plt+0x52b0>
   14eb4:	add	lr, sp, #48	; 0x30
   14eb8:	ldr	ip, [sp, #84]	; 0x54
   14ebc:	mov	r1, r5
   14ec0:	ldr	r5, [sp, #28]
   14ec4:	mov	r3, fp
   14ec8:	mov	r2, sl
   14ecc:	str	r0, [r4, #4]
   14ed0:	ldr	r4, [sp, #80]	; 0x50
   14ed4:	str	lr, [sp, #8]
   14ed8:	ldr	lr, [sp, #40]	; 0x28
   14edc:	str	r5, [sp, #4]
   14ee0:	str	ip, [sp, #16]
   14ee4:	str	r4, [sp, #12]
   14ee8:	str	lr, [sp]
   14eec:	mov	r7, r0
   14ef0:	bl	11754 <abort@plt+0x9d4>
   14ef4:	ldr	r3, [sp, #24]
   14ef8:	mov	r0, r7
   14efc:	str	r3, [r8]
   14f00:	add	sp, sp, #92	; 0x5c
   14f04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14f08:	mov	r3, #8
   14f0c:	str	r3, [sp]
   14f10:	add	r1, sp, #36	; 0x24
   14f14:	rsb	r2, r2, #1
   14f18:	ldr	r0, [sp, #28]
   14f1c:	mvn	r3, #-2147483648	; 0x80000000
   14f20:	bl	1624c <abort@plt+0x54cc>
   14f24:	mov	r4, r0
   14f28:	ldm	r5, {r0, r1}
   14f2c:	str	r4, [r7]
   14f30:	stm	r4, {r0, r1}
   14f34:	b	14e18 <abort@plt+0x4098>
   14f38:	bl	10d80 <abort@plt>
   14f3c:	andeq	r8, r2, r4, asr #2
   14f40:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   14f44:	andeq	r8, r2, r4, ror r1
   14f48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14f4c:	sub	sp, sp, #52	; 0x34
   14f50:	mov	r5, r0
   14f54:	mov	sl, r1
   14f58:	mov	fp, r2
   14f5c:	bl	10ce4 <__errno_location@plt>
   14f60:	ldr	r4, [pc, #404]	; 150fc <abort@plt+0x437c>
   14f64:	cmn	r5, #-2147483647	; 0x80000001
   14f68:	ldr	r6, [r4]
   14f6c:	mov	r8, r0
   14f70:	movne	r0, #0
   14f74:	moveq	r0, #1
   14f78:	ldr	r3, [r8]
   14f7c:	orrs	r0, r0, r5, lsr #31
   14f80:	str	r3, [sp, #28]
   14f84:	bne	150f8 <abort@plt+0x4378>
   14f88:	ldr	r2, [r4, #4]
   14f8c:	cmp	r5, r2
   14f90:	blt	14ff0 <abort@plt+0x4270>
   14f94:	add	r7, r4, #8
   14f98:	cmp	r6, r7
   14f9c:	str	r2, [sp, #44]	; 0x2c
   14fa0:	beq	150c8 <abort@plt+0x4348>
   14fa4:	mov	r3, #8
   14fa8:	sub	r2, r5, r2
   14fac:	mov	r0, r6
   14fb0:	str	r3, [sp]
   14fb4:	add	r2, r2, #1
   14fb8:	mvn	r3, #-2147483648	; 0x80000000
   14fbc:	add	r1, sp, #44	; 0x2c
   14fc0:	bl	1624c <abort@plt+0x54cc>
   14fc4:	mov	r6, r0
   14fc8:	str	r0, [r4]
   14fcc:	ldr	r0, [r4, #4]
   14fd0:	ldr	r2, [sp, #44]	; 0x2c
   14fd4:	mov	r1, #0
   14fd8:	sub	r2, r2, r0
   14fdc:	add	r0, r6, r0, lsl #3
   14fe0:	lsl	r2, r2, #3
   14fe4:	bl	10cfc <memset@plt>
   14fe8:	ldr	r3, [sp, #44]	; 0x2c
   14fec:	str	r3, [r4, #4]
   14ff0:	ldr	r2, [r4, #56]	; 0x38
   14ff4:	add	r3, r6, r5, lsl #3
   14ff8:	ldr	r1, [r4, #20]
   14ffc:	ldr	r7, [r3, #4]
   15000:	ldr	r9, [r6, r5, lsl #3]
   15004:	ldr	ip, [r4, #60]	; 0x3c
   15008:	str	r3, [sp, #32]
   1500c:	ldr	r3, [r4, #16]
   15010:	str	r2, [sp, #12]
   15014:	ldr	r2, [pc, #228]	; 15100 <abort@plt+0x4380>
   15018:	orr	r1, r1, #1
   1501c:	str	r1, [sp, #36]	; 0x24
   15020:	str	r1, [sp, #4]
   15024:	str	r2, [sp, #8]
   15028:	str	r3, [sp]
   1502c:	mov	r0, r7
   15030:	mov	r1, r9
   15034:	str	ip, [sp, #16]
   15038:	mov	r3, fp
   1503c:	mov	r2, sl
   15040:	bl	11754 <abort@plt+0x9d4>
   15044:	cmp	r9, r0
   15048:	bhi	150b4 <abort@plt+0x4334>
   1504c:	ldr	r3, [pc, #176]	; 15104 <abort@plt+0x4384>
   15050:	add	r9, r0, #1
   15054:	cmp	r7, r3
   15058:	str	r9, [r6, r5, lsl #3]
   1505c:	beq	15068 <abort@plt+0x42e8>
   15060:	mov	r0, r7
   15064:	bl	168dc <abort@plt+0x5b5c>
   15068:	mov	r0, r9
   1506c:	bl	16030 <abort@plt+0x52b0>
   15070:	ldr	ip, [sp, #32]
   15074:	ldr	lr, [r4, #60]	; 0x3c
   15078:	ldr	r5, [r4, #56]	; 0x38
   1507c:	mov	r3, fp
   15080:	mov	r2, sl
   15084:	mov	r1, r9
   15088:	str	r0, [ip, #4]
   1508c:	ldr	ip, [r4, #16]
   15090:	ldr	r4, [pc, #104]	; 15100 <abort@plt+0x4380>
   15094:	str	lr, [sp, #16]
   15098:	str	r4, [sp, #8]
   1509c:	ldr	r4, [sp, #36]	; 0x24
   150a0:	str	r5, [sp, #12]
   150a4:	str	r4, [sp, #4]
   150a8:	str	ip, [sp]
   150ac:	mov	r7, r0
   150b0:	bl	11754 <abort@plt+0x9d4>
   150b4:	ldr	r3, [sp, #28]
   150b8:	mov	r0, r7
   150bc:	str	r3, [r8]
   150c0:	add	sp, sp, #52	; 0x34
   150c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   150c8:	mov	r3, #8
   150cc:	sub	r2, r5, r2
   150d0:	str	r3, [sp]
   150d4:	add	r1, sp, #44	; 0x2c
   150d8:	add	r2, r2, #1
   150dc:	mvn	r3, #-2147483648	; 0x80000000
   150e0:	bl	1624c <abort@plt+0x54cc>
   150e4:	mov	r6, r0
   150e8:	ldm	r7, {r0, r1}
   150ec:	str	r6, [r4]
   150f0:	stm	r6, {r0, r1}
   150f4:	b	14fcc <abort@plt+0x424c>
   150f8:	bl	10d80 <abort@plt>
   150fc:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   15100:	strdeq	r8, [r2], -r0
   15104:	andeq	r8, r2, r4, ror r1
   15108:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1510c:	sub	sp, sp, #44	; 0x2c
   15110:	mov	r9, r0
   15114:	mov	sl, r1
   15118:	bl	10ce4 <__errno_location@plt>
   1511c:	ldr	r4, [pc, #360]	; 1528c <abort@plt+0x450c>
   15120:	ldr	r2, [r4, #4]
   15124:	ldr	r5, [r4]
   15128:	cmp	r2, #0
   1512c:	ldr	r3, [r0]
   15130:	mov	r7, r0
   15134:	str	r3, [sp, #24]
   15138:	bgt	15194 <abort@plt+0x4414>
   1513c:	add	r6, r4, #8
   15140:	cmp	r5, r6
   15144:	str	r2, [sp, #36]	; 0x24
   15148:	beq	1525c <abort@plt+0x44dc>
   1514c:	mov	r3, #8
   15150:	mov	r0, r5
   15154:	str	r3, [sp]
   15158:	rsb	r2, r2, #1
   1515c:	mvn	r3, #-2147483648	; 0x80000000
   15160:	add	r1, sp, #36	; 0x24
   15164:	bl	1624c <abort@plt+0x54cc>
   15168:	mov	r5, r0
   1516c:	str	r0, [r4]
   15170:	ldr	r0, [r4, #4]
   15174:	ldr	r2, [sp, #36]	; 0x24
   15178:	mov	r1, #0
   1517c:	sub	r2, r2, r0
   15180:	add	r0, r5, r0, lsl #3
   15184:	lsl	r2, r2, #3
   15188:	bl	10cfc <memset@plt>
   1518c:	ldr	r3, [sp, #36]	; 0x24
   15190:	str	r3, [r4, #4]
   15194:	ldr	r1, [r4, #20]
   15198:	ldr	r8, [r5]
   1519c:	ldr	r6, [r5, #4]
   151a0:	ldr	r2, [r4, #56]	; 0x38
   151a4:	ldr	r3, [r4, #16]
   151a8:	ldr	ip, [r4, #60]	; 0x3c
   151ac:	ldr	fp, [pc, #220]	; 15290 <abort@plt+0x4510>
   151b0:	orr	r1, r1, #1
   151b4:	str	r1, [sp, #28]
   151b8:	str	r1, [sp, #4]
   151bc:	str	r2, [sp, #12]
   151c0:	str	r3, [sp]
   151c4:	mov	r1, r8
   151c8:	mov	r0, r6
   151cc:	str	ip, [sp, #16]
   151d0:	str	fp, [sp, #8]
   151d4:	mov	r3, sl
   151d8:	mov	r2, r9
   151dc:	bl	11754 <abort@plt+0x9d4>
   151e0:	cmp	r8, r0
   151e4:	bhi	15248 <abort@plt+0x44c8>
   151e8:	ldr	r3, [pc, #164]	; 15294 <abort@plt+0x4514>
   151ec:	add	r8, r0, #1
   151f0:	cmp	r6, r3
   151f4:	str	r8, [r5]
   151f8:	beq	15204 <abort@plt+0x4484>
   151fc:	mov	r0, r6
   15200:	bl	168dc <abort@plt+0x5b5c>
   15204:	mov	r0, r8
   15208:	bl	16030 <abort@plt+0x52b0>
   1520c:	ldr	lr, [r4, #60]	; 0x3c
   15210:	ldr	ip, [r4, #16]
   15214:	mov	r3, sl
   15218:	mov	r2, r9
   1521c:	mov	r1, r8
   15220:	str	r0, [r5, #4]
   15224:	ldr	r5, [r4, #56]	; 0x38
   15228:	ldr	r4, [sp, #28]
   1522c:	str	fp, [sp, #8]
   15230:	str	r4, [sp, #4]
   15234:	str	lr, [sp, #16]
   15238:	str	r5, [sp, #12]
   1523c:	str	ip, [sp]
   15240:	mov	r6, r0
   15244:	bl	11754 <abort@plt+0x9d4>
   15248:	ldr	r3, [sp, #24]
   1524c:	mov	r0, r6
   15250:	str	r3, [r7]
   15254:	add	sp, sp, #44	; 0x2c
   15258:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1525c:	mov	r3, #8
   15260:	str	r3, [sp]
   15264:	add	r1, sp, #36	; 0x24
   15268:	rsb	r2, r2, #1
   1526c:	mvn	r3, #-2147483648	; 0x80000000
   15270:	mov	r0, #0
   15274:	bl	1624c <abort@plt+0x54cc>
   15278:	mov	r5, r0
   1527c:	ldm	r6, {r0, r1}
   15280:	str	r5, [r4]
   15284:	stm	r5, {r0, r1}
   15288:	b	15170 <abort@plt+0x43f0>
   1528c:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   15290:	strdeq	r8, [r2], -r0
   15294:	andeq	r8, r2, r4, ror r1
   15298:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1529c:	sub	sp, sp, #44	; 0x2c
   152a0:	mov	r5, r0
   152a4:	mov	sl, r1
   152a8:	bl	10ce4 <__errno_location@plt>
   152ac:	ldr	r4, [pc, #396]	; 15440 <abort@plt+0x46c0>
   152b0:	cmn	r5, #-2147483647	; 0x80000001
   152b4:	ldr	r6, [r4]
   152b8:	mov	r8, r0
   152bc:	movne	r0, #0
   152c0:	moveq	r0, #1
   152c4:	ldr	r3, [r8]
   152c8:	orrs	r0, r0, r5, lsr #31
   152cc:	str	r3, [sp, #24]
   152d0:	bne	1543c <abort@plt+0x46bc>
   152d4:	ldr	r2, [r4, #4]
   152d8:	cmp	r5, r2
   152dc:	blt	1533c <abort@plt+0x45bc>
   152e0:	add	r7, r4, #8
   152e4:	cmp	r6, r7
   152e8:	str	r2, [sp, #36]	; 0x24
   152ec:	beq	1540c <abort@plt+0x468c>
   152f0:	mov	r3, #8
   152f4:	sub	r2, r5, r2
   152f8:	mov	r0, r6
   152fc:	str	r3, [sp]
   15300:	add	r2, r2, #1
   15304:	mvn	r3, #-2147483648	; 0x80000000
   15308:	add	r1, sp, #36	; 0x24
   1530c:	bl	1624c <abort@plt+0x54cc>
   15310:	mov	r6, r0
   15314:	str	r0, [r4]
   15318:	ldr	r0, [r4, #4]
   1531c:	ldr	r2, [sp, #36]	; 0x24
   15320:	mov	r1, #0
   15324:	sub	r2, r2, r0
   15328:	add	r0, r6, r0, lsl #3
   1532c:	lsl	r2, r2, #3
   15330:	bl	10cfc <memset@plt>
   15334:	ldr	r3, [sp, #36]	; 0x24
   15338:	str	r3, [r4, #4]
   1533c:	ldr	r2, [r4, #56]	; 0x38
   15340:	add	fp, r6, r5, lsl #3
   15344:	ldr	r1, [r4, #20]
   15348:	ldr	r9, [r6, r5, lsl #3]
   1534c:	ldr	r7, [fp, #4]
   15350:	ldr	r3, [r4, #16]
   15354:	ldr	ip, [r4, #60]	; 0x3c
   15358:	str	r2, [sp, #12]
   1535c:	ldr	r2, [pc, #224]	; 15444 <abort@plt+0x46c4>
   15360:	orr	r1, r1, #1
   15364:	str	r1, [sp, #28]
   15368:	str	r1, [sp, #4]
   1536c:	str	r2, [sp, #8]
   15370:	str	r3, [sp]
   15374:	mov	r0, r7
   15378:	mov	r1, r9
   1537c:	str	ip, [sp, #16]
   15380:	mvn	r3, #0
   15384:	mov	r2, sl
   15388:	bl	11754 <abort@plt+0x9d4>
   1538c:	cmp	r9, r0
   15390:	bhi	153f8 <abort@plt+0x4678>
   15394:	ldr	r3, [pc, #172]	; 15448 <abort@plt+0x46c8>
   15398:	add	r9, r0, #1
   1539c:	cmp	r7, r3
   153a0:	str	r9, [r6, r5, lsl #3]
   153a4:	beq	153b0 <abort@plt+0x4630>
   153a8:	mov	r0, r7
   153ac:	bl	168dc <abort@plt+0x5b5c>
   153b0:	mov	r0, r9
   153b4:	bl	16030 <abort@plt+0x52b0>
   153b8:	ldr	ip, [r4, #60]	; 0x3c
   153bc:	ldr	r3, [r4, #16]
   153c0:	ldr	lr, [r4, #56]	; 0x38
   153c4:	ldr	r4, [pc, #120]	; 15444 <abort@plt+0x46c4>
   153c8:	mov	r2, sl
   153cc:	mov	r1, r9
   153d0:	str	r0, [fp, #4]
   153d4:	str	r4, [sp, #8]
   153d8:	ldr	r4, [sp, #28]
   153dc:	str	r3, [sp]
   153e0:	str	r4, [sp, #4]
   153e4:	str	ip, [sp, #16]
   153e8:	str	lr, [sp, #12]
   153ec:	mvn	r3, #0
   153f0:	mov	r7, r0
   153f4:	bl	11754 <abort@plt+0x9d4>
   153f8:	ldr	r3, [sp, #24]
   153fc:	mov	r0, r7
   15400:	str	r3, [r8]
   15404:	add	sp, sp, #44	; 0x2c
   15408:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1540c:	mov	r3, #8
   15410:	sub	r2, r5, r2
   15414:	str	r3, [sp]
   15418:	add	r1, sp, #36	; 0x24
   1541c:	add	r2, r2, #1
   15420:	mvn	r3, #-2147483648	; 0x80000000
   15424:	bl	1624c <abort@plt+0x54cc>
   15428:	mov	r6, r0
   1542c:	ldm	r7, {r0, r1}
   15430:	str	r6, [r4]
   15434:	stm	r6, {r0, r1}
   15438:	b	15318 <abort@plt+0x4598>
   1543c:	bl	10d80 <abort@plt>
   15440:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   15444:	strdeq	r8, [r2], -r0
   15448:	andeq	r8, r2, r4, ror r1
   1544c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15450:	sub	sp, sp, #44	; 0x2c
   15454:	mov	sl, r0
   15458:	bl	10ce4 <__errno_location@plt>
   1545c:	ldr	r4, [pc, #348]	; 155c0 <abort@plt+0x4840>
   15460:	ldr	r2, [r4, #4]
   15464:	ldr	r5, [r4]
   15468:	cmp	r2, #0
   1546c:	ldr	r3, [r0]
   15470:	mov	r8, r0
   15474:	str	r3, [sp, #28]
   15478:	bgt	154d4 <abort@plt+0x4754>
   1547c:	add	r6, r4, #8
   15480:	cmp	r5, r6
   15484:	str	r2, [sp, #36]	; 0x24
   15488:	beq	15590 <abort@plt+0x4810>
   1548c:	mov	r3, #8
   15490:	mov	r0, r5
   15494:	str	r3, [sp]
   15498:	rsb	r2, r2, #1
   1549c:	mvn	r3, #-2147483648	; 0x80000000
   154a0:	add	r1, sp, #36	; 0x24
   154a4:	bl	1624c <abort@plt+0x54cc>
   154a8:	mov	r5, r0
   154ac:	str	r0, [r4]
   154b0:	ldr	r0, [r4, #4]
   154b4:	ldr	r2, [sp, #36]	; 0x24
   154b8:	mov	r1, #0
   154bc:	sub	r2, r2, r0
   154c0:	add	r0, r5, r0, lsl #3
   154c4:	lsl	r2, r2, #3
   154c8:	bl	10cfc <memset@plt>
   154cc:	ldr	r3, [sp, #36]	; 0x24
   154d0:	str	r3, [r4, #4]
   154d4:	ldr	r7, [r4, #20]
   154d8:	ldr	r9, [r5]
   154dc:	ldr	r6, [r5, #4]
   154e0:	ldr	r2, [r4, #56]	; 0x38
   154e4:	ldr	r3, [r4, #16]
   154e8:	ldr	ip, [r4, #60]	; 0x3c
   154ec:	ldr	fp, [pc, #208]	; 155c4 <abort@plt+0x4844>
   154f0:	orr	r7, r7, #1
   154f4:	str	r2, [sp, #12]
   154f8:	str	r3, [sp]
   154fc:	str	r7, [sp, #4]
   15500:	mov	r1, r9
   15504:	mov	r0, r6
   15508:	str	ip, [sp, #16]
   1550c:	str	fp, [sp, #8]
   15510:	mvn	r3, #0
   15514:	mov	r2, sl
   15518:	bl	11754 <abort@plt+0x9d4>
   1551c:	cmp	r9, r0
   15520:	bhi	1557c <abort@plt+0x47fc>
   15524:	ldr	r3, [pc, #156]	; 155c8 <abort@plt+0x4848>
   15528:	add	r9, r0, #1
   1552c:	cmp	r6, r3
   15530:	str	r9, [r5]
   15534:	beq	15540 <abort@plt+0x47c0>
   15538:	mov	r0, r6
   1553c:	bl	168dc <abort@plt+0x5b5c>
   15540:	mov	r0, r9
   15544:	bl	16030 <abort@plt+0x52b0>
   15548:	ldr	ip, [r4, #60]	; 0x3c
   1554c:	ldr	r3, [r4, #16]
   15550:	ldr	lr, [r4, #56]	; 0x38
   15554:	mov	r2, sl
   15558:	mov	r1, r9
   1555c:	str	r0, [r5, #4]
   15560:	str	r3, [sp]
   15564:	stmib	sp, {r7, fp}
   15568:	str	ip, [sp, #16]
   1556c:	str	lr, [sp, #12]
   15570:	mvn	r3, #0
   15574:	mov	r6, r0
   15578:	bl	11754 <abort@plt+0x9d4>
   1557c:	ldr	r3, [sp, #28]
   15580:	mov	r0, r6
   15584:	str	r3, [r8]
   15588:	add	sp, sp, #44	; 0x2c
   1558c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15590:	mov	r3, #8
   15594:	str	r3, [sp]
   15598:	add	r1, sp, #36	; 0x24
   1559c:	rsb	r2, r2, #1
   155a0:	mvn	r3, #-2147483648	; 0x80000000
   155a4:	mov	r0, #0
   155a8:	bl	1624c <abort@plt+0x54cc>
   155ac:	mov	r5, r0
   155b0:	ldm	r6, {r0, r1}
   155b4:	str	r5, [r4]
   155b8:	stm	r5, {r0, r1}
   155bc:	b	154b0 <abort@plt+0x4730>
   155c0:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   155c4:	strdeq	r8, [r2], -r0
   155c8:	andeq	r8, r2, r4, ror r1
   155cc:	push	{r4, r5, r6, lr}
   155d0:	sub	sp, sp, #32
   155d4:	cmp	r1, #0
   155d8:	mov	r4, r0
   155dc:	ldr	r5, [sp, #48]	; 0x30
   155e0:	ldr	r6, [sp, #52]	; 0x34
   155e4:	beq	158fc <abort@plt+0x4b7c>
   155e8:	stm	sp, {r2, r3}
   155ec:	mov	r3, r1
   155f0:	ldr	r2, [pc, #808]	; 15920 <abort@plt+0x4ba0>
   155f4:	mov	r1, #1
   155f8:	bl	10d20 <__fprintf_chk@plt>
   155fc:	mov	r2, #5
   15600:	ldr	r1, [pc, #796]	; 15924 <abort@plt+0x4ba4>
   15604:	mov	r0, #0
   15608:	bl	10bf4 <dcgettext@plt>
   1560c:	ldr	r3, [pc, #788]	; 15928 <abort@plt+0x4ba8>
   15610:	ldr	r2, [pc, #788]	; 1592c <abort@plt+0x4bac>
   15614:	str	r3, [sp]
   15618:	mov	r1, #1
   1561c:	mov	r3, r0
   15620:	mov	r0, r4
   15624:	bl	10d20 <__fprintf_chk@plt>
   15628:	mov	r1, r4
   1562c:	mov	r0, #10
   15630:	bl	10be8 <fputc_unlocked@plt>
   15634:	mov	r2, #5
   15638:	ldr	r1, [pc, #752]	; 15930 <abort@plt+0x4bb0>
   1563c:	mov	r0, #0
   15640:	bl	10bf4 <dcgettext@plt>
   15644:	mov	r1, #1
   15648:	ldr	r3, [pc, #740]	; 15934 <abort@plt+0x4bb4>
   1564c:	mov	r2, r0
   15650:	mov	r0, r4
   15654:	bl	10d20 <__fprintf_chk@plt>
   15658:	mov	r1, r4
   1565c:	mov	r0, #10
   15660:	bl	10be8 <fputc_unlocked@plt>
   15664:	cmp	r6, #9
   15668:	ldrls	pc, [pc, r6, lsl #2]
   1566c:	b	15914 <abort@plt+0x4b94>
   15670:	strdeq	r5, [r1], -r4
   15674:	strdeq	r5, [r1], -ip
   15678:	andeq	r5, r1, r8, lsr #14
   1567c:	andeq	r5, r1, ip, asr r7
   15680:	muleq	r1, r8, r7
   15684:	ldrdeq	r5, [r1], -r4
   15688:	andeq	r5, r1, r0, lsl r8
   1568c:	andeq	r5, r1, r4, asr r8
   15690:	andeq	r5, r1, r4, lsr #17
   15694:	muleq	r1, r8, r6
   15698:	ldr	r1, [pc, #664]	; 15938 <abort@plt+0x4bb8>
   1569c:	mov	r2, #5
   156a0:	mov	r0, #0
   156a4:	bl	10bf4 <dcgettext@plt>
   156a8:	ldr	ip, [r5, #32]
   156ac:	ldr	r1, [r5, #28]
   156b0:	ldr	r2, [r5, #24]
   156b4:	ldr	r3, [r5]
   156b8:	ldr	r6, [r5, #20]
   156bc:	str	ip, [sp, #28]
   156c0:	ldr	lr, [r5, #16]
   156c4:	str	r1, [sp, #24]
   156c8:	ldr	ip, [r5, #12]
   156cc:	str	r2, [sp, #20]
   156d0:	ldr	r1, [r5, #8]
   156d4:	ldr	r2, [r5, #4]
   156d8:	str	r6, [sp, #16]
   156dc:	stmib	sp, {r1, ip, lr}
   156e0:	mov	r1, #1
   156e4:	str	r2, [sp]
   156e8:	mov	r2, r0
   156ec:	mov	r0, r4
   156f0:	bl	10d20 <__fprintf_chk@plt>
   156f4:	add	sp, sp, #32
   156f8:	pop	{r4, r5, r6, pc}
   156fc:	mov	r2, #5
   15700:	ldr	r1, [pc, #564]	; 1593c <abort@plt+0x4bbc>
   15704:	mov	r0, #0
   15708:	bl	10bf4 <dcgettext@plt>
   1570c:	ldr	r3, [r5]
   15710:	mov	r1, #1
   15714:	mov	r2, r0
   15718:	mov	r0, r4
   1571c:	add	sp, sp, #32
   15720:	pop	{r4, r5, r6, lr}
   15724:	b	10d20 <__fprintf_chk@plt>
   15728:	mov	r2, #5
   1572c:	ldr	r1, [pc, #524]	; 15940 <abort@plt+0x4bc0>
   15730:	mov	r0, #0
   15734:	bl	10bf4 <dcgettext@plt>
   15738:	ldr	r2, [r5, #4]
   1573c:	ldr	r3, [r5]
   15740:	mov	r1, #1
   15744:	str	r2, [sp, #48]	; 0x30
   15748:	mov	r2, r0
   1574c:	mov	r0, r4
   15750:	add	sp, sp, #32
   15754:	pop	{r4, r5, r6, lr}
   15758:	b	10d20 <__fprintf_chk@plt>
   1575c:	mov	r2, #5
   15760:	ldr	r1, [pc, #476]	; 15944 <abort@plt+0x4bc4>
   15764:	mov	r0, #0
   15768:	bl	10bf4 <dcgettext@plt>
   1576c:	ldr	r1, [r5, #8]
   15770:	ldr	r2, [r5, #4]
   15774:	ldr	r3, [r5]
   15778:	str	r1, [sp, #52]	; 0x34
   1577c:	str	r2, [sp, #48]	; 0x30
   15780:	mov	r1, #1
   15784:	mov	r2, r0
   15788:	mov	r0, r4
   1578c:	add	sp, sp, #32
   15790:	pop	{r4, r5, r6, lr}
   15794:	b	10d20 <__fprintf_chk@plt>
   15798:	mov	r2, #5
   1579c:	ldr	r1, [pc, #420]	; 15948 <abort@plt+0x4bc8>
   157a0:	mov	r0, #0
   157a4:	bl	10bf4 <dcgettext@plt>
   157a8:	ldr	r1, [r5, #8]
   157ac:	ldr	ip, [r5, #12]
   157b0:	ldr	r2, [r5, #4]
   157b4:	ldr	r3, [r5]
   157b8:	stmib	sp, {r1, ip}
   157bc:	str	r2, [sp]
   157c0:	mov	r1, #1
   157c4:	mov	r2, r0
   157c8:	mov	r0, r4
   157cc:	bl	10d20 <__fprintf_chk@plt>
   157d0:	b	156f4 <abort@plt+0x4974>
   157d4:	mov	r2, #5
   157d8:	ldr	r1, [pc, #364]	; 1594c <abort@plt+0x4bcc>
   157dc:	mov	r0, #0
   157e0:	bl	10bf4 <dcgettext@plt>
   157e4:	add	r1, r5, #8
   157e8:	ldr	r2, [r5, #4]
   157ec:	ldm	r1, {r1, ip, lr}
   157f0:	ldr	r3, [r5]
   157f4:	str	r2, [sp]
   157f8:	stmib	sp, {r1, ip, lr}
   157fc:	mov	r1, #1
   15800:	mov	r2, r0
   15804:	mov	r0, r4
   15808:	bl	10d20 <__fprintf_chk@plt>
   1580c:	b	156f4 <abort@plt+0x4974>
   15810:	mov	r2, #5
   15814:	ldr	r1, [pc, #308]	; 15950 <abort@plt+0x4bd0>
   15818:	mov	r0, #0
   1581c:	bl	10bf4 <dcgettext@plt>
   15820:	add	r1, r5, #8
   15824:	ldr	r2, [r5, #4]
   15828:	ldm	r1, {r1, ip, lr}
   1582c:	ldr	r6, [r5, #20]
   15830:	ldr	r3, [r5]
   15834:	stmib	sp, {r1, ip, lr}
   15838:	mov	r1, #1
   1583c:	str	r2, [sp]
   15840:	str	r6, [sp, #16]
   15844:	mov	r2, r0
   15848:	mov	r0, r4
   1584c:	bl	10d20 <__fprintf_chk@plt>
   15850:	b	156f4 <abort@plt+0x4974>
   15854:	mov	r2, #5
   15858:	ldr	r1, [pc, #244]	; 15954 <abort@plt+0x4bd4>
   1585c:	mov	r0, #0
   15860:	bl	10bf4 <dcgettext@plt>
   15864:	ldr	r2, [r5, #24]
   15868:	ldr	r3, [r5]
   1586c:	ldr	r6, [r5, #20]
   15870:	ldr	lr, [r5, #16]
   15874:	ldr	ip, [r5, #12]
   15878:	str	r2, [sp, #20]
   1587c:	ldr	r1, [r5, #8]
   15880:	ldr	r2, [r5, #4]
   15884:	str	r6, [sp, #16]
   15888:	stmib	sp, {r1, ip, lr}
   1588c:	mov	r1, #1
   15890:	str	r2, [sp]
   15894:	mov	r2, r0
   15898:	mov	r0, r4
   1589c:	bl	10d20 <__fprintf_chk@plt>
   158a0:	b	156f4 <abort@plt+0x4974>
   158a4:	mov	r2, #5
   158a8:	ldr	r1, [pc, #168]	; 15958 <abort@plt+0x4bd8>
   158ac:	mov	r0, #0
   158b0:	bl	10bf4 <dcgettext@plt>
   158b4:	ldr	r1, [r5, #28]
   158b8:	ldr	r2, [r5, #24]
   158bc:	ldr	r3, [r5]
   158c0:	ldr	r6, [r5, #20]
   158c4:	ldr	lr, [r5, #16]
   158c8:	str	r1, [sp, #24]
   158cc:	ldr	ip, [r5, #12]
   158d0:	str	r2, [sp, #20]
   158d4:	ldr	r1, [r5, #8]
   158d8:	ldr	r2, [r5, #4]
   158dc:	str	r6, [sp, #16]
   158e0:	stmib	sp, {r1, ip, lr}
   158e4:	mov	r1, #1
   158e8:	str	r2, [sp]
   158ec:	mov	r2, r0
   158f0:	mov	r0, r4
   158f4:	bl	10d20 <__fprintf_chk@plt>
   158f8:	b	156f4 <abort@plt+0x4974>
   158fc:	str	r3, [sp]
   15900:	mov	r1, #1
   15904:	mov	r3, r2
   15908:	ldr	r2, [pc, #76]	; 1595c <abort@plt+0x4bdc>
   1590c:	bl	10d20 <__fprintf_chk@plt>
   15910:	b	155fc <abort@plt+0x487c>
   15914:	mov	r2, #5
   15918:	ldr	r1, [pc, #64]	; 15960 <abort@plt+0x4be0>
   1591c:	b	156a0 <abort@plt+0x4920>
   15920:	andeq	r7, r1, r0, lsl #10
   15924:	andeq	r7, r1, r4, lsl r5
   15928:	andeq	r0, r0, r6, ror #15
   1592c:	andeq	r7, r1, ip, ror #15
   15930:	andeq	r7, r1, r8, lsl r5
   15934:	andeq	r7, r1, r4, asr #11
   15938:	strdeq	r7, [r1], -r4
   1593c:	andeq	r7, r1, r8, ror #11
   15940:	strdeq	r7, [r1], -r8
   15944:	andeq	r7, r1, r0, lsl r6
   15948:	andeq	r7, r1, ip, lsr #12
   1594c:	andeq	r7, r1, ip, asr #12
   15950:	andeq	r7, r1, r0, ror r6
   15954:	muleq	r1, r8, r6
   15958:	andeq	r7, r1, r4, asr #13
   1595c:	andeq	r7, r1, ip, lsl #10
   15960:	andeq	r7, r1, r8, lsr #14
   15964:	push	{r4, r5, lr}
   15968:	sub	sp, sp, #12
   1596c:	ldr	r5, [sp, #24]
   15970:	ldr	ip, [r5]
   15974:	cmp	ip, #0
   15978:	beq	15994 <abort@plt+0x4c14>
   1597c:	mov	lr, r5
   15980:	mov	ip, #0
   15984:	ldr	r4, [lr, #4]!
   15988:	add	ip, ip, #1
   1598c:	cmp	r4, #0
   15990:	bne	15984 <abort@plt+0x4c04>
   15994:	stm	sp, {r5, ip}
   15998:	bl	155cc <abort@plt+0x484c>
   1599c:	add	sp, sp, #12
   159a0:	pop	{r4, r5, pc}
   159a4:	push	{r4, r5, lr}
   159a8:	sub	sp, sp, #76	; 0x4c
   159ac:	mov	r5, r0
   159b0:	ldr	ip, [sp, #88]	; 0x58
   159b4:	ldr	r0, [ip]
   159b8:	cmp	r0, #0
   159bc:	str	r0, [sp, #32]
   159c0:	beq	15d94 <abort@plt+0x5014>
   159c4:	ldr	r0, [ip, #4]
   159c8:	cmp	r0, #0
   159cc:	str	r0, [sp, #36]	; 0x24
   159d0:	beq	15d9c <abort@plt+0x501c>
   159d4:	ldr	r0, [ip, #8]
   159d8:	cmp	r0, #0
   159dc:	str	r0, [sp, #40]	; 0x28
   159e0:	beq	15da4 <abort@plt+0x5024>
   159e4:	ldr	r0, [ip, #12]
   159e8:	cmp	r0, #0
   159ec:	str	r0, [sp, #44]	; 0x2c
   159f0:	beq	15dac <abort@plt+0x502c>
   159f4:	ldr	r0, [ip, #16]
   159f8:	cmp	r0, #0
   159fc:	str	r0, [sp, #48]	; 0x30
   15a00:	beq	15db4 <abort@plt+0x5034>
   15a04:	ldr	r0, [ip, #20]
   15a08:	cmp	r0, #0
   15a0c:	str	r0, [sp, #52]	; 0x34
   15a10:	beq	15dbc <abort@plt+0x503c>
   15a14:	ldr	r0, [ip, #24]
   15a18:	cmp	r0, #0
   15a1c:	str	r0, [sp, #56]	; 0x38
   15a20:	beq	15dc4 <abort@plt+0x5044>
   15a24:	ldr	r0, [ip, #28]
   15a28:	cmp	r0, #0
   15a2c:	str	r0, [sp, #60]	; 0x3c
   15a30:	beq	15dcc <abort@plt+0x504c>
   15a34:	ldr	r0, [ip, #32]
   15a38:	cmp	r0, #0
   15a3c:	str	r0, [sp, #64]	; 0x40
   15a40:	beq	15dd4 <abort@plt+0x5054>
   15a44:	ldr	r0, [ip, #36]	; 0x24
   15a48:	cmp	r0, #0
   15a4c:	movne	r4, #10
   15a50:	moveq	r4, #9
   15a54:	cmp	r1, #0
   15a58:	beq	15d6c <abort@plt+0x4fec>
   15a5c:	stm	sp, {r2, r3}
   15a60:	mov	r0, r5
   15a64:	mov	r3, r1
   15a68:	ldr	r2, [pc, #876]	; 15ddc <abort@plt+0x505c>
   15a6c:	mov	r1, #1
   15a70:	bl	10d20 <__fprintf_chk@plt>
   15a74:	mov	r2, #5
   15a78:	ldr	r1, [pc, #864]	; 15de0 <abort@plt+0x5060>
   15a7c:	mov	r0, #0
   15a80:	bl	10bf4 <dcgettext@plt>
   15a84:	ldr	r3, [pc, #856]	; 15de4 <abort@plt+0x5064>
   15a88:	ldr	r2, [pc, #856]	; 15de8 <abort@plt+0x5068>
   15a8c:	str	r3, [sp]
   15a90:	mov	r1, #1
   15a94:	mov	r3, r0
   15a98:	mov	r0, r5
   15a9c:	bl	10d20 <__fprintf_chk@plt>
   15aa0:	mov	r1, r5
   15aa4:	mov	r0, #10
   15aa8:	bl	10be8 <fputc_unlocked@plt>
   15aac:	mov	r2, #5
   15ab0:	ldr	r1, [pc, #820]	; 15dec <abort@plt+0x506c>
   15ab4:	mov	r0, #0
   15ab8:	bl	10bf4 <dcgettext@plt>
   15abc:	mov	r1, #1
   15ac0:	ldr	r3, [pc, #808]	; 15df0 <abort@plt+0x5070>
   15ac4:	mov	r2, r0
   15ac8:	mov	r0, r5
   15acc:	bl	10d20 <__fprintf_chk@plt>
   15ad0:	mov	r1, r5
   15ad4:	mov	r0, #10
   15ad8:	bl	10be8 <fputc_unlocked@plt>
   15adc:	cmp	r4, #9
   15ae0:	ldrls	pc, [pc, r4, lsl #2]
   15ae4:	b	15d88 <abort@plt+0x5008>
   15ae8:	andeq	r5, r1, ip, ror #22
   15aec:	andeq	r5, r1, r4, ror fp
   15af0:	andeq	r5, r1, r0, lsr #23
   15af4:	ldrdeq	r5, [r1], -r4
   15af8:	andeq	r5, r1, ip, lsl #24
   15afc:	andeq	r5, r1, r8, asr #24
   15b00:	andeq	r5, r1, r4, lsl #25
   15b04:	andeq	r5, r1, r8, asr #25
   15b08:	andeq	r5, r1, r4, lsl sp
   15b0c:	andeq	r5, r1, r0, lsl fp
   15b10:	ldr	r1, [pc, #732]	; 15df4 <abort@plt+0x5074>
   15b14:	mov	r2, #5
   15b18:	mov	r0, #0
   15b1c:	bl	10bf4 <dcgettext@plt>
   15b20:	ldr	ip, [sp, #64]	; 0x40
   15b24:	ldr	r1, [sp, #60]	; 0x3c
   15b28:	ldr	r2, [sp, #56]	; 0x38
   15b2c:	ldr	lr, [sp, #48]	; 0x30
   15b30:	str	ip, [sp, #28]
   15b34:	str	r1, [sp, #24]
   15b38:	ldr	ip, [sp, #44]	; 0x2c
   15b3c:	ldr	r1, [sp, #40]	; 0x28
   15b40:	ldr	r4, [sp, #52]	; 0x34
   15b44:	str	r2, [sp, #20]
   15b48:	ldr	r2, [sp, #36]	; 0x24
   15b4c:	stmib	sp, {r1, ip, lr}
   15b50:	mov	r1, #1
   15b54:	str	r2, [sp]
   15b58:	ldr	r3, [sp, #32]
   15b5c:	str	r4, [sp, #16]
   15b60:	mov	r2, r0
   15b64:	mov	r0, r5
   15b68:	bl	10d20 <__fprintf_chk@plt>
   15b6c:	add	sp, sp, #76	; 0x4c
   15b70:	pop	{r4, r5, pc}
   15b74:	mov	r2, #5
   15b78:	ldr	r1, [pc, #632]	; 15df8 <abort@plt+0x5078>
   15b7c:	mov	r0, #0
   15b80:	bl	10bf4 <dcgettext@plt>
   15b84:	ldr	r3, [sp, #32]
   15b88:	mov	r1, #1
   15b8c:	mov	r2, r0
   15b90:	mov	r0, r5
   15b94:	add	sp, sp, #76	; 0x4c
   15b98:	pop	{r4, r5, lr}
   15b9c:	b	10d20 <__fprintf_chk@plt>
   15ba0:	mov	r2, #5
   15ba4:	ldr	r1, [pc, #592]	; 15dfc <abort@plt+0x507c>
   15ba8:	mov	r0, #0
   15bac:	bl	10bf4 <dcgettext@plt>
   15bb0:	ldr	r2, [sp, #36]	; 0x24
   15bb4:	ldr	r3, [sp, #32]
   15bb8:	str	r2, [sp, #88]	; 0x58
   15bbc:	mov	r1, #1
   15bc0:	mov	r2, r0
   15bc4:	mov	r0, r5
   15bc8:	add	sp, sp, #76	; 0x4c
   15bcc:	pop	{r4, r5, lr}
   15bd0:	b	10d20 <__fprintf_chk@plt>
   15bd4:	mov	r2, #5
   15bd8:	ldr	r1, [pc, #544]	; 15e00 <abort@plt+0x5080>
   15bdc:	mov	r0, #0
   15be0:	bl	10bf4 <dcgettext@plt>
   15be4:	ldr	r1, [sp, #40]	; 0x28
   15be8:	ldr	r2, [sp, #36]	; 0x24
   15bec:	str	r1, [sp, #4]
   15bf0:	str	r2, [sp]
   15bf4:	ldr	r3, [sp, #32]
   15bf8:	mov	r1, #1
   15bfc:	mov	r2, r0
   15c00:	mov	r0, r5
   15c04:	bl	10d20 <__fprintf_chk@plt>
   15c08:	b	15b6c <abort@plt+0x4dec>
   15c0c:	mov	r2, #5
   15c10:	ldr	r1, [pc, #492]	; 15e04 <abort@plt+0x5084>
   15c14:	mov	r0, #0
   15c18:	bl	10bf4 <dcgettext@plt>
   15c1c:	ldr	r1, [sp, #40]	; 0x28
   15c20:	ldr	ip, [sp, #44]	; 0x2c
   15c24:	ldr	r2, [sp, #36]	; 0x24
   15c28:	ldr	r3, [sp, #32]
   15c2c:	stmib	sp, {r1, ip}
   15c30:	str	r2, [sp]
   15c34:	mov	r1, #1
   15c38:	mov	r2, r0
   15c3c:	mov	r0, r5
   15c40:	bl	10d20 <__fprintf_chk@plt>
   15c44:	b	15b6c <abort@plt+0x4dec>
   15c48:	mov	r2, #5
   15c4c:	ldr	r1, [pc, #436]	; 15e08 <abort@plt+0x5088>
   15c50:	mov	r0, #0
   15c54:	bl	10bf4 <dcgettext@plt>
   15c58:	add	r1, sp, #40	; 0x28
   15c5c:	ldr	r2, [sp, #36]	; 0x24
   15c60:	ldm	r1, {r1, ip, lr}
   15c64:	ldr	r3, [sp, #32]
   15c68:	str	r2, [sp]
   15c6c:	stmib	sp, {r1, ip, lr}
   15c70:	mov	r1, #1
   15c74:	mov	r2, r0
   15c78:	mov	r0, r5
   15c7c:	bl	10d20 <__fprintf_chk@plt>
   15c80:	b	15b6c <abort@plt+0x4dec>
   15c84:	mov	r2, #5
   15c88:	ldr	r1, [pc, #380]	; 15e0c <abort@plt+0x508c>
   15c8c:	mov	r0, #0
   15c90:	bl	10bf4 <dcgettext@plt>
   15c94:	add	r1, sp, #40	; 0x28
   15c98:	ldr	r2, [sp, #36]	; 0x24
   15c9c:	ldm	r1, {r1, ip, lr}
   15ca0:	ldr	r4, [sp, #52]	; 0x34
   15ca4:	str	r2, [sp]
   15ca8:	stmib	sp, {r1, ip, lr}
   15cac:	mov	r1, #1
   15cb0:	ldr	r3, [sp, #32]
   15cb4:	str	r4, [sp, #16]
   15cb8:	mov	r2, r0
   15cbc:	mov	r0, r5
   15cc0:	bl	10d20 <__fprintf_chk@plt>
   15cc4:	b	15b6c <abort@plt+0x4dec>
   15cc8:	mov	r2, #5
   15ccc:	ldr	r1, [pc, #316]	; 15e10 <abort@plt+0x5090>
   15cd0:	mov	r0, #0
   15cd4:	bl	10bf4 <dcgettext@plt>
   15cd8:	add	r1, sp, #40	; 0x28
   15cdc:	ldr	r2, [sp, #56]	; 0x38
   15ce0:	ldm	r1, {r1, ip, lr}
   15ce4:	ldr	r4, [sp, #52]	; 0x34
   15ce8:	str	r2, [sp, #20]
   15cec:	ldr	r2, [sp, #36]	; 0x24
   15cf0:	stmib	sp, {r1, ip, lr}
   15cf4:	mov	r1, #1
   15cf8:	str	r2, [sp]
   15cfc:	ldr	r3, [sp, #32]
   15d00:	str	r4, [sp, #16]
   15d04:	mov	r2, r0
   15d08:	mov	r0, r5
   15d0c:	bl	10d20 <__fprintf_chk@plt>
   15d10:	b	15b6c <abort@plt+0x4dec>
   15d14:	mov	r2, #5
   15d18:	ldr	r1, [pc, #244]	; 15e14 <abort@plt+0x5094>
   15d1c:	mov	r0, #0
   15d20:	bl	10bf4 <dcgettext@plt>
   15d24:	ldr	r1, [sp, #60]	; 0x3c
   15d28:	ldr	r2, [sp, #56]	; 0x38
   15d2c:	ldr	lr, [sp, #48]	; 0x30
   15d30:	ldr	ip, [sp, #44]	; 0x2c
   15d34:	str	r1, [sp, #24]
   15d38:	ldr	r1, [sp, #40]	; 0x28
   15d3c:	ldr	r4, [sp, #52]	; 0x34
   15d40:	str	r2, [sp, #20]
   15d44:	ldr	r2, [sp, #36]	; 0x24
   15d48:	stmib	sp, {r1, ip, lr}
   15d4c:	mov	r1, #1
   15d50:	str	r2, [sp]
   15d54:	ldr	r3, [sp, #32]
   15d58:	str	r4, [sp, #16]
   15d5c:	mov	r2, r0
   15d60:	mov	r0, r5
   15d64:	bl	10d20 <__fprintf_chk@plt>
   15d68:	b	15b6c <abort@plt+0x4dec>
   15d6c:	str	r3, [sp]
   15d70:	mov	r1, #1
   15d74:	mov	r3, r2
   15d78:	mov	r0, r5
   15d7c:	ldr	r2, [pc, #148]	; 15e18 <abort@plt+0x5098>
   15d80:	bl	10d20 <__fprintf_chk@plt>
   15d84:	b	15a74 <abort@plt+0x4cf4>
   15d88:	mov	r2, #5
   15d8c:	ldr	r1, [pc, #136]	; 15e1c <abort@plt+0x509c>
   15d90:	b	15b18 <abort@plt+0x4d98>
   15d94:	mov	r4, r0
   15d98:	b	15a54 <abort@plt+0x4cd4>
   15d9c:	mov	r4, #1
   15da0:	b	15a54 <abort@plt+0x4cd4>
   15da4:	mov	r4, #2
   15da8:	b	15a54 <abort@plt+0x4cd4>
   15dac:	mov	r4, #3
   15db0:	b	15a54 <abort@plt+0x4cd4>
   15db4:	mov	r4, #4
   15db8:	b	15a54 <abort@plt+0x4cd4>
   15dbc:	mov	r4, #5
   15dc0:	b	15a54 <abort@plt+0x4cd4>
   15dc4:	mov	r4, #6
   15dc8:	b	15a54 <abort@plt+0x4cd4>
   15dcc:	mov	r4, #7
   15dd0:	b	15a54 <abort@plt+0x4cd4>
   15dd4:	mov	r4, #8
   15dd8:	b	15a54 <abort@plt+0x4cd4>
   15ddc:	andeq	r7, r1, r0, lsl #10
   15de0:	andeq	r7, r1, r4, lsl r5
   15de4:	andeq	r0, r0, r6, ror #15
   15de8:	andeq	r7, r1, ip, ror #15
   15dec:	andeq	r7, r1, r8, lsl r5
   15df0:	andeq	r7, r1, r4, asr #11
   15df4:	strdeq	r7, [r1], -r4
   15df8:	andeq	r7, r1, r8, ror #11
   15dfc:	strdeq	r7, [r1], -r8
   15e00:	andeq	r7, r1, r0, lsl r6
   15e04:	andeq	r7, r1, ip, lsr #12
   15e08:	andeq	r7, r1, ip, asr #12
   15e0c:	andeq	r7, r1, r0, ror r6
   15e10:	muleq	r1, r8, r6
   15e14:	andeq	r7, r1, r4, asr #13
   15e18:	andeq	r7, r1, ip, lsl #10
   15e1c:	andeq	r7, r1, r8, lsr #14
   15e20:	push	{r3}		; (str r3, [sp, #-4]!)
   15e24:	push	{lr}		; (str lr, [sp, #-4]!)
   15e28:	sub	sp, sp, #56	; 0x38
   15e2c:	add	r3, sp, #64	; 0x40
   15e30:	ldr	ip, [sp, #64]	; 0x40
   15e34:	str	r3, [sp, #12]
   15e38:	cmp	ip, #0
   15e3c:	str	ip, [sp, #16]
   15e40:	beq	15ed8 <abort@plt+0x5158>
   15e44:	ldr	ip, [sp, #68]	; 0x44
   15e48:	cmp	ip, #0
   15e4c:	str	ip, [sp, #20]
   15e50:	beq	15ef8 <abort@plt+0x5178>
   15e54:	ldr	ip, [sp, #72]	; 0x48
   15e58:	cmp	ip, #0
   15e5c:	str	ip, [sp, #24]
   15e60:	beq	15f00 <abort@plt+0x5180>
   15e64:	ldr	ip, [sp, #76]	; 0x4c
   15e68:	cmp	ip, #0
   15e6c:	str	ip, [sp, #28]
   15e70:	beq	15f08 <abort@plt+0x5188>
   15e74:	ldr	ip, [sp, #80]	; 0x50
   15e78:	cmp	ip, #0
   15e7c:	str	ip, [sp, #32]
   15e80:	beq	15f10 <abort@plt+0x5190>
   15e84:	ldr	ip, [sp, #84]	; 0x54
   15e88:	cmp	ip, #0
   15e8c:	str	ip, [sp, #36]	; 0x24
   15e90:	beq	15f18 <abort@plt+0x5198>
   15e94:	ldr	ip, [sp, #88]	; 0x58
   15e98:	cmp	ip, #0
   15e9c:	str	ip, [sp, #40]	; 0x28
   15ea0:	beq	15f20 <abort@plt+0x51a0>
   15ea4:	ldr	ip, [sp, #92]	; 0x5c
   15ea8:	cmp	ip, #0
   15eac:	str	ip, [sp, #44]	; 0x2c
   15eb0:	beq	15f28 <abort@plt+0x51a8>
   15eb4:	ldr	ip, [sp, #96]	; 0x60
   15eb8:	cmp	ip, #0
   15ebc:	str	ip, [sp, #48]	; 0x30
   15ec0:	beq	15f30 <abort@plt+0x51b0>
   15ec4:	ldr	ip, [sp, #100]	; 0x64
   15ec8:	cmp	ip, #0
   15ecc:	str	ip, [sp, #52]	; 0x34
   15ed0:	movne	ip, #10
   15ed4:	moveq	ip, #9
   15ed8:	add	r3, sp, #16
   15edc:	stm	sp, {r3, ip}
   15ee0:	ldr	r3, [sp, #60]	; 0x3c
   15ee4:	bl	155cc <abort@plt+0x484c>
   15ee8:	add	sp, sp, #56	; 0x38
   15eec:	pop	{lr}		; (ldr lr, [sp], #4)
   15ef0:	add	sp, sp, #4
   15ef4:	bx	lr
   15ef8:	mov	ip, #1
   15efc:	b	15ed8 <abort@plt+0x5158>
   15f00:	mov	ip, #2
   15f04:	b	15ed8 <abort@plt+0x5158>
   15f08:	mov	ip, #3
   15f0c:	b	15ed8 <abort@plt+0x5158>
   15f10:	mov	ip, #4
   15f14:	b	15ed8 <abort@plt+0x5158>
   15f18:	mov	ip, #5
   15f1c:	b	15ed8 <abort@plt+0x5158>
   15f20:	mov	ip, #6
   15f24:	b	15ed8 <abort@plt+0x5158>
   15f28:	mov	ip, #7
   15f2c:	b	15ed8 <abort@plt+0x5158>
   15f30:	mov	ip, #8
   15f34:	b	15ed8 <abort@plt+0x5158>
   15f38:	ldr	r3, [pc, #116]	; 15fb4 <abort@plt+0x5234>
   15f3c:	push	{r4, lr}
   15f40:	mov	r0, #10
   15f44:	ldr	r1, [r3]
   15f48:	bl	10be8 <fputc_unlocked@plt>
   15f4c:	mov	r2, #5
   15f50:	ldr	r1, [pc, #96]	; 15fb8 <abort@plt+0x5238>
   15f54:	mov	r0, #0
   15f58:	bl	10bf4 <dcgettext@plt>
   15f5c:	ldr	r2, [pc, #88]	; 15fbc <abort@plt+0x523c>
   15f60:	mov	r1, r0
   15f64:	mov	r0, #1
   15f68:	bl	10d08 <__printf_chk@plt>
   15f6c:	mov	r2, #5
   15f70:	ldr	r1, [pc, #72]	; 15fc0 <abort@plt+0x5240>
   15f74:	mov	r0, #0
   15f78:	bl	10bf4 <dcgettext@plt>
   15f7c:	ldr	r3, [pc, #64]	; 15fc4 <abort@plt+0x5244>
   15f80:	ldr	r2, [pc, #64]	; 15fc8 <abort@plt+0x5248>
   15f84:	mov	r1, r0
   15f88:	mov	r0, #1
   15f8c:	bl	10d08 <__printf_chk@plt>
   15f90:	mov	r2, #5
   15f94:	ldr	r1, [pc, #48]	; 15fcc <abort@plt+0x524c>
   15f98:	mov	r0, #0
   15f9c:	bl	10bf4 <dcgettext@plt>
   15fa0:	ldr	r2, [pc, #40]	; 15fd0 <abort@plt+0x5250>
   15fa4:	pop	{r4, lr}
   15fa8:	mov	r1, r0
   15fac:	mov	r0, #1
   15fb0:	b	10d08 <__printf_chk@plt>
   15fb4:	andeq	r8, r2, ip, lsr #2
   15fb8:	andeq	r7, r1, r4, ror #14
   15fbc:	andeq	r7, r1, r8, ror r7
   15fc0:	muleq	r1, r0, r7
   15fc4:	ldrdeq	r7, [r1], -r8
   15fc8:	andeq	r7, r1, r0, lsl #4
   15fcc:	andeq	r7, r1, r4, lsr #15
   15fd0:	andeq	r7, r1, ip, asr #15
   15fd4:	push	{r4, r5, r6, lr}
   15fd8:	mov	r6, r0
   15fdc:	mov	r5, r1
   15fe0:	mov	r4, r2
   15fe4:	bl	16a5c <abort@plt+0x5cdc>
   15fe8:	cmp	r0, #0
   15fec:	popne	{r4, r5, r6, pc}
   15ff0:	cmp	r6, #0
   15ff4:	beq	16004 <abort@plt+0x5284>
   15ff8:	cmp	r5, #0
   15ffc:	cmpne	r4, #0
   16000:	popeq	{r4, r5, r6, pc}
   16004:	bl	16650 <abort@plt+0x58d0>
   16008:	push	{r4, lr}
   1600c:	bl	166d8 <abort@plt+0x5958>
   16010:	cmp	r0, #0
   16014:	popne	{r4, pc}
   16018:	bl	16650 <abort@plt+0x58d0>
   1601c:	push	{r4, lr}
   16020:	bl	166d8 <abort@plt+0x5958>
   16024:	cmp	r0, #0
   16028:	popne	{r4, pc}
   1602c:	bl	16650 <abort@plt+0x58d0>
   16030:	push	{r4, lr}
   16034:	bl	166d8 <abort@plt+0x5958>
   16038:	cmp	r0, #0
   1603c:	popne	{r4, pc}
   16040:	bl	16650 <abort@plt+0x58d0>
   16044:	push	{r4, r5, r6, lr}
   16048:	mov	r5, r0
   1604c:	mov	r4, r1
   16050:	bl	16704 <abort@plt+0x5984>
   16054:	cmp	r0, #0
   16058:	popne	{r4, r5, r6, pc}
   1605c:	adds	r4, r4, #0
   16060:	movne	r4, #1
   16064:	cmp	r5, #0
   16068:	orreq	r4, r4, #1
   1606c:	cmp	r4, #0
   16070:	popeq	{r4, r5, r6, pc}
   16074:	bl	16650 <abort@plt+0x58d0>
   16078:	push	{r4, lr}
   1607c:	cmp	r1, #0
   16080:	orreq	r1, r1, #1
   16084:	bl	16704 <abort@plt+0x5984>
   16088:	cmp	r0, #0
   1608c:	popne	{r4, pc}
   16090:	bl	16650 <abort@plt+0x58d0>
   16094:	push	{r4, r5, r6, lr}
   16098:	mov	r6, r0
   1609c:	mov	r5, r1
   160a0:	mov	r4, r2
   160a4:	bl	16a5c <abort@plt+0x5cdc>
   160a8:	cmp	r0, #0
   160ac:	popne	{r4, r5, r6, pc}
   160b0:	cmp	r6, #0
   160b4:	beq	160c4 <abort@plt+0x5344>
   160b8:	cmp	r5, #0
   160bc:	cmpne	r4, #0
   160c0:	popeq	{r4, r5, r6, pc}
   160c4:	bl	16650 <abort@plt+0x58d0>
   160c8:	cmp	r2, #0
   160cc:	cmpne	r1, #0
   160d0:	moveq	r2, #1
   160d4:	moveq	r1, r2
   160d8:	push	{r4, lr}
   160dc:	bl	16a5c <abort@plt+0x5cdc>
   160e0:	cmp	r0, #0
   160e4:	popne	{r4, pc}
   160e8:	bl	16650 <abort@plt+0x58d0>
   160ec:	push	{r4, lr}
   160f0:	mov	r2, r1
   160f4:	mov	r1, r0
   160f8:	mov	r0, #0
   160fc:	bl	16a5c <abort@plt+0x5cdc>
   16100:	cmp	r0, #0
   16104:	popne	{r4, pc}
   16108:	bl	16650 <abort@plt+0x58d0>
   1610c:	cmp	r1, #0
   16110:	cmpne	r0, #0
   16114:	moveq	r2, #1
   16118:	movne	r2, r1
   1611c:	moveq	r1, r2
   16120:	movne	r1, r0
   16124:	push	{r4, lr}
   16128:	mov	r0, #0
   1612c:	bl	16a5c <abort@plt+0x5cdc>
   16130:	cmp	r0, #0
   16134:	popne	{r4, pc}
   16138:	bl	16650 <abort@plt+0x58d0>
   1613c:	cmp	r0, #0
   16140:	push	{r4, r5, r6, lr}
   16144:	mov	r5, r1
   16148:	ldr	r4, [r1]
   1614c:	beq	16188 <abort@plt+0x5408>
   16150:	lsr	r2, r4, #1
   16154:	add	r3, r2, #1
   16158:	mvn	r3, r3
   1615c:	cmp	r4, r3
   16160:	bhi	161a4 <abort@plt+0x5424>
   16164:	add	r4, r4, #1
   16168:	add	r4, r4, r2
   1616c:	mov	r1, r4
   16170:	mov	r2, #1
   16174:	bl	16a5c <abort@plt+0x5cdc>
   16178:	cmp	r0, #0
   1617c:	beq	161a8 <abort@plt+0x5428>
   16180:	str	r4, [r5]
   16184:	pop	{r4, r5, r6, pc}
   16188:	cmp	r4, #0
   1618c:	moveq	r4, #64	; 0x40
   16190:	mov	r1, r4
   16194:	mov	r2, #1
   16198:	bl	16a5c <abort@plt+0x5cdc>
   1619c:	cmp	r0, #0
   161a0:	bne	16180 <abort@plt+0x5400>
   161a4:	bl	16650 <abort@plt+0x58d0>
   161a8:	cmp	r4, #0
   161ac:	bne	161a4 <abort@plt+0x5424>
   161b0:	str	r4, [r5]
   161b4:	pop	{r4, r5, r6, pc}
   161b8:	cmp	r0, #0
   161bc:	push	{r4, r5, r6, lr}
   161c0:	mov	r5, r1
   161c4:	ldr	r4, [r1]
   161c8:	mov	r6, r2
   161cc:	beq	16210 <abort@plt+0x5490>
   161d0:	lsr	r1, r4, #1
   161d4:	add	r3, r1, #1
   161d8:	mvn	r3, r3
   161dc:	cmp	r4, r3
   161e0:	bhi	16248 <abort@plt+0x54c8>
   161e4:	add	r4, r4, #1
   161e8:	add	r4, r4, r1
   161ec:	mov	r1, r4
   161f0:	bl	16a5c <abort@plt+0x5cdc>
   161f4:	cmp	r0, #0
   161f8:	bne	16208 <abort@plt+0x5488>
   161fc:	cmp	r4, #0
   16200:	cmpne	r6, #0
   16204:	bne	16248 <abort@plt+0x54c8>
   16208:	str	r4, [r5]
   1620c:	pop	{r4, r5, r6, pc}
   16210:	cmp	r4, #0
   16214:	bne	16230 <abort@plt+0x54b0>
   16218:	mov	r1, r2
   1621c:	mov	r0, #64	; 0x40
   16220:	bl	16b9c <abort@plt+0x5e1c>
   16224:	cmp	r0, #0
   16228:	movne	r4, r0
   1622c:	addeq	r4, r0, #1
   16230:	mov	r2, r6
   16234:	mov	r1, r4
   16238:	mov	r0, #0
   1623c:	bl	16a5c <abort@plt+0x5cdc>
   16240:	cmp	r0, #0
   16244:	bne	16208 <abort@plt+0x5488>
   16248:	bl	16650 <abort@plt+0x58d0>
   1624c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16250:	sub	sp, sp, #12
   16254:	ldr	r6, [r1]
   16258:	mov	r8, r1
   1625c:	mov	r9, r0
   16260:	asrs	r4, r6, #1
   16264:	mov	sl, r2
   16268:	mov	fp, r3
   1626c:	ldr	r7, [sp, #48]	; 0x30
   16270:	bmi	163ec <abort@plt+0x566c>
   16274:	mvn	r1, #-2147483648	; 0x80000000
   16278:	sub	r1, r1, r4
   1627c:	cmp	r6, r1
   16280:	movle	r1, #0
   16284:	movgt	r1, #1
   16288:	mvn	r3, fp
   1628c:	cmp	r1, #0
   16290:	addeq	r4, r4, r6
   16294:	mvnne	r4, #-2147483648	; 0x80000000
   16298:	lsr	r3, r3, #31
   1629c:	cmp	fp, r4
   162a0:	movge	r2, #0
   162a4:	andlt	r2, r3, #1
   162a8:	cmp	r2, #0
   162ac:	beq	1639c <abort@plt+0x561c>
   162b0:	cmp	r7, #0
   162b4:	blt	16484 <abort@plt+0x5704>
   162b8:	bne	1647c <abort@plt+0x56fc>
   162bc:	mov	r5, #64	; 0x40
   162c0:	mov	r1, r7
   162c4:	mov	r0, r5
   162c8:	str	r3, [sp, #4]
   162cc:	bl	16da8 <abort@plt+0x6028>
   162d0:	mov	r1, r7
   162d4:	mov	r4, r0
   162d8:	mov	r0, r5
   162dc:	bl	16fc8 <abort@plt+0x6248>
   162e0:	ldr	r3, [sp, #4]
   162e4:	sub	r5, r5, r1
   162e8:	cmp	r9, #0
   162ec:	sub	r2, r4, r6
   162f0:	streq	r9, [r8]
   162f4:	cmp	r2, sl
   162f8:	bge	1637c <abort@plt+0x55fc>
   162fc:	cmp	sl, #0
   16300:	blt	1641c <abort@plt+0x569c>
   16304:	cmp	r6, #0
   16308:	blt	16328 <abort@plt+0x55a8>
   1630c:	mvn	r2, #-2147483648	; 0x80000000
   16310:	sub	r2, r2, sl
   16314:	cmp	r6, r2
   16318:	movle	r2, #0
   1631c:	movgt	r2, #1
   16320:	cmp	r2, #0
   16324:	bne	16418 <abort@plt+0x5698>
   16328:	add	r6, r6, sl
   1632c:	cmp	fp, r6
   16330:	movge	r3, #0
   16334:	andlt	r3, r3, #1
   16338:	cmp	r3, #0
   1633c:	mov	r4, r6
   16340:	bne	16418 <abort@plt+0x5698>
   16344:	cmp	r7, #0
   16348:	blt	16430 <abort@plt+0x56b0>
   1634c:	beq	16378 <abort@plt+0x55f8>
   16350:	cmp	r6, #0
   16354:	blt	164d4 <abort@plt+0x5754>
   16358:	mov	r1, r7
   1635c:	mvn	r0, #-2147483648	; 0x80000000
   16360:	bl	16da8 <abort@plt+0x6028>
   16364:	cmp	r6, r0
   16368:	movle	r0, #0
   1636c:	movgt	r0, #1
   16370:	cmp	r0, #0
   16374:	bne	16418 <abort@plt+0x5698>
   16378:	mul	r5, r6, r7
   1637c:	mov	r1, r5
   16380:	mov	r0, r9
   16384:	bl	16704 <abort@plt+0x5984>
   16388:	cmp	r0, #0
   1638c:	beq	16400 <abort@plt+0x5680>
   16390:	str	r4, [r8]
   16394:	add	sp, sp, #12
   16398:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1639c:	cmp	r7, #0
   163a0:	blt	1645c <abort@plt+0x56dc>
   163a4:	beq	162bc <abort@plt+0x553c>
   163a8:	cmp	r4, #0
   163ac:	blt	1648c <abort@plt+0x570c>
   163b0:	mov	r1, r7
   163b4:	mvn	r0, #-2147483648	; 0x80000000
   163b8:	str	r3, [sp, #4]
   163bc:	bl	16da8 <abort@plt+0x6028>
   163c0:	ldr	r3, [sp, #4]
   163c4:	cmp	r0, r4
   163c8:	movge	r0, #0
   163cc:	movlt	r0, #1
   163d0:	cmp	r0, #0
   163d4:	mvnne	r5, #-2147483648	; 0x80000000
   163d8:	bne	162c0 <abort@plt+0x5540>
   163dc:	mul	r5, r7, r4
   163e0:	cmp	r5, #63	; 0x3f
   163e4:	bgt	162e8 <abort@plt+0x5568>
   163e8:	b	162bc <abort@plt+0x553c>
   163ec:	rsb	r1, r4, #-2147483648	; 0x80000000
   163f0:	cmp	r6, r1
   163f4:	movge	r1, #0
   163f8:	movlt	r1, #1
   163fc:	b	16288 <abort@plt+0x5508>
   16400:	adds	r5, r5, #0
   16404:	movne	r5, #1
   16408:	cmp	r9, #0
   1640c:	orreq	r5, r5, #1
   16410:	cmp	r5, #0
   16414:	beq	16390 <abort@plt+0x5610>
   16418:	bl	16650 <abort@plt+0x58d0>
   1641c:	rsb	r2, sl, #-2147483648	; 0x80000000
   16420:	cmp	r6, r2
   16424:	movge	r2, #0
   16428:	movlt	r2, #1
   1642c:	b	16320 <abort@plt+0x55a0>
   16430:	cmp	r6, #0
   16434:	blt	164b8 <abort@plt+0x5738>
   16438:	cmn	r7, #1
   1643c:	beq	16378 <abort@plt+0x55f8>
   16440:	mov	r1, r7
   16444:	mov	r0, #-2147483648	; 0x80000000
   16448:	bl	16da8 <abort@plt+0x6028>
   1644c:	cmp	r6, r0
   16450:	movle	r0, #0
   16454:	movgt	r0, #1
   16458:	b	16370 <abort@plt+0x55f0>
   1645c:	cmp	r4, #0
   16460:	blt	164f8 <abort@plt+0x5778>
   16464:	cmn	r7, #1
   16468:	beq	163dc <abort@plt+0x565c>
   1646c:	str	r3, [sp, #4]
   16470:	mov	r1, r7
   16474:	mov	r0, #-2147483648	; 0x80000000
   16478:	b	163bc <abort@plt+0x563c>
   1647c:	mov	r4, fp
   16480:	b	163b0 <abort@plt+0x5630>
   16484:	mov	r4, fp
   16488:	b	16464 <abort@plt+0x56e4>
   1648c:	cmn	r4, #1
   16490:	beq	163dc <abort@plt+0x565c>
   16494:	mov	r1, r4
   16498:	mov	r0, #-2147483648	; 0x80000000
   1649c:	str	r3, [sp, #4]
   164a0:	bl	16da8 <abort@plt+0x6028>
   164a4:	ldr	r3, [sp, #4]
   164a8:	cmp	r7, r0
   164ac:	movle	r0, #0
   164b0:	movgt	r0, #1
   164b4:	b	163d0 <abort@plt+0x5650>
   164b8:	mov	r1, r7
   164bc:	mvn	r0, #-2147483648	; 0x80000000
   164c0:	bl	16da8 <abort@plt+0x6028>
   164c4:	cmp	r6, r0
   164c8:	movge	r0, #0
   164cc:	movlt	r0, #1
   164d0:	b	16370 <abort@plt+0x55f0>
   164d4:	cmn	r6, #1
   164d8:	beq	16378 <abort@plt+0x55f8>
   164dc:	mov	r1, r6
   164e0:	mov	r0, #-2147483648	; 0x80000000
   164e4:	bl	16da8 <abort@plt+0x6028>
   164e8:	cmp	r7, r0
   164ec:	movle	r0, #0
   164f0:	movgt	r0, #1
   164f4:	b	16370 <abort@plt+0x55f0>
   164f8:	mov	r1, r7
   164fc:	mvn	r0, #-2147483648	; 0x80000000
   16500:	str	r3, [sp, #4]
   16504:	bl	16da8 <abort@plt+0x6028>
   16508:	ldr	r3, [sp, #4]
   1650c:	cmp	r0, r4
   16510:	movle	r0, #0
   16514:	movgt	r0, #1
   16518:	b	163d0 <abort@plt+0x5650>
   1651c:	push	{r4, lr}
   16520:	mov	r1, #1
   16524:	bl	16690 <abort@plt+0x5910>
   16528:	cmp	r0, #0
   1652c:	popne	{r4, pc}
   16530:	bl	16650 <abort@plt+0x58d0>
   16534:	push	{r4, lr}
   16538:	mov	r1, #1
   1653c:	bl	16690 <abort@plt+0x5910>
   16540:	cmp	r0, #0
   16544:	popne	{r4, pc}
   16548:	bl	16650 <abort@plt+0x58d0>
   1654c:	push	{r4, lr}
   16550:	bl	16690 <abort@plt+0x5910>
   16554:	cmp	r0, #0
   16558:	popne	{r4, pc}
   1655c:	bl	16650 <abort@plt+0x58d0>
   16560:	push	{r4, lr}
   16564:	bl	16690 <abort@plt+0x5910>
   16568:	cmp	r0, #0
   1656c:	popne	{r4, pc}
   16570:	bl	16650 <abort@plt+0x58d0>
   16574:	push	{r4, r5, r6, lr}
   16578:	mov	r6, r0
   1657c:	mov	r0, r1
   16580:	mov	r4, r1
   16584:	bl	166d8 <abort@plt+0x5958>
   16588:	subs	r5, r0, #0
   1658c:	beq	165a4 <abort@plt+0x5824>
   16590:	mov	r2, r4
   16594:	mov	r1, r6
   16598:	bl	10bc4 <memcpy@plt>
   1659c:	mov	r0, r5
   165a0:	pop	{r4, r5, r6, pc}
   165a4:	bl	16650 <abort@plt+0x58d0>
   165a8:	push	{r4, r5, r6, lr}
   165ac:	mov	r6, r0
   165b0:	mov	r0, r1
   165b4:	mov	r4, r1
   165b8:	bl	166d8 <abort@plt+0x5958>
   165bc:	subs	r5, r0, #0
   165c0:	beq	165d8 <abort@plt+0x5858>
   165c4:	mov	r2, r4
   165c8:	mov	r1, r6
   165cc:	bl	10bc4 <memcpy@plt>
   165d0:	mov	r0, r5
   165d4:	pop	{r4, r5, r6, pc}
   165d8:	bl	16650 <abort@plt+0x58d0>
   165dc:	push	{r4, r5, r6, lr}
   165e0:	mov	r6, r0
   165e4:	add	r0, r1, #1
   165e8:	mov	r4, r1
   165ec:	bl	166d8 <abort@plt+0x5958>
   165f0:	subs	r5, r0, #0
   165f4:	beq	16614 <abort@plt+0x5894>
   165f8:	mov	r3, #0
   165fc:	mov	r1, r6
   16600:	strb	r3, [r5, r4]
   16604:	mov	r2, r4
   16608:	bl	10bc4 <memcpy@plt>
   1660c:	mov	r0, r5
   16610:	pop	{r4, r5, r6, pc}
   16614:	bl	16650 <abort@plt+0x58d0>
   16618:	push	{r4, r5, r6, lr}
   1661c:	mov	r6, r0
   16620:	bl	10cd8 <strlen@plt>
   16624:	add	r4, r0, #1
   16628:	mov	r0, r4
   1662c:	bl	166d8 <abort@plt+0x5958>
   16630:	subs	r5, r0, #0
   16634:	beq	1664c <abort@plt+0x58cc>
   16638:	mov	r2, r4
   1663c:	mov	r1, r6
   16640:	bl	10bc4 <memcpy@plt>
   16644:	mov	r0, r5
   16648:	pop	{r4, r5, r6, pc}
   1664c:	bl	16650 <abort@plt+0x58d0>
   16650:	ldr	r3, [pc, #44]	; 16684 <abort@plt+0x5904>
   16654:	push	{r4, lr}
   16658:	mov	r2, #5
   1665c:	ldr	r1, [pc, #36]	; 16688 <abort@plt+0x5908>
   16660:	mov	r0, #0
   16664:	ldr	r4, [r3]
   16668:	bl	10bf4 <dcgettext@plt>
   1666c:	ldr	r2, [pc, #24]	; 1668c <abort@plt+0x590c>
   16670:	mov	r1, #0
   16674:	mov	r3, r0
   16678:	mov	r0, r4
   1667c:	bl	10c6c <error@plt>
   16680:	bl	10d80 <abort@plt>
   16684:	ldrdeq	r8, [r2], -r4
   16688:	andeq	r7, r1, ip, lsl r8
   1668c:	muleq	r1, ip, r3
   16690:	cmp	r1, #0
   16694:	cmpne	r0, #0
   16698:	moveq	r1, #1
   1669c:	moveq	r0, r1
   166a0:	umull	r2, r3, r0, r1
   166a4:	adds	r3, r3, #0
   166a8:	movne	r3, #1
   166ac:	cmp	r2, #0
   166b0:	blt	166c0 <abort@plt+0x5940>
   166b4:	cmp	r3, #0
   166b8:	bne	166c0 <abort@plt+0x5940>
   166bc:	b	10b64 <calloc@plt>
   166c0:	push	{r4, lr}
   166c4:	bl	10ce4 <__errno_location@plt>
   166c8:	mov	r3, #12
   166cc:	str	r3, [r0]
   166d0:	mov	r0, #0
   166d4:	pop	{r4, pc}
   166d8:	cmp	r0, #0
   166dc:	moveq	r0, #1
   166e0:	cmp	r0, #0
   166e4:	blt	166ec <abort@plt+0x596c>
   166e8:	b	10c84 <malloc@plt>
   166ec:	push	{r4, lr}
   166f0:	bl	10ce4 <__errno_location@plt>
   166f4:	mov	r3, #12
   166f8:	str	r3, [r0]
   166fc:	mov	r0, #0
   16700:	pop	{r4, pc}
   16704:	cmp	r0, #0
   16708:	beq	1672c <abort@plt+0x59ac>
   1670c:	cmp	r1, #0
   16710:	push	{lr}		; (str lr, [sp, #-4]!)
   16714:	sub	sp, sp, #12
   16718:	beq	16734 <abort@plt+0x59b4>
   1671c:	blt	1674c <abort@plt+0x59cc>
   16720:	add	sp, sp, #12
   16724:	pop	{lr}		; (ldr lr, [sp], #4)
   16728:	b	10c00 <realloc@plt>
   1672c:	mov	r0, r1
   16730:	b	166d8 <abort@plt+0x5958>
   16734:	str	r1, [sp, #4]
   16738:	bl	168dc <abort@plt+0x5b5c>
   1673c:	ldr	r3, [sp, #4]
   16740:	mov	r0, r3
   16744:	add	sp, sp, #12
   16748:	pop	{pc}		; (ldr pc, [sp], #4)
   1674c:	bl	10ce4 <__errno_location@plt>
   16750:	mov	r2, #12
   16754:	mov	r3, #0
   16758:	str	r2, [r0]
   1675c:	b	16740 <abort@plt+0x59c0>
   16760:	push	{r4, r5, r6, lr}
   16764:	mov	r4, r0
   16768:	bl	10c54 <__fpending@plt>
   1676c:	ldr	r5, [r4]
   16770:	and	r5, r5, #32
   16774:	mov	r6, r0
   16778:	mov	r0, r4
   1677c:	bl	167dc <abort@plt+0x5a5c>
   16780:	cmp	r5, #0
   16784:	mov	r4, r0
   16788:	bne	167a8 <abort@plt+0x5a28>
   1678c:	cmp	r0, #0
   16790:	beq	167a0 <abort@plt+0x5a20>
   16794:	cmp	r6, #0
   16798:	beq	167c4 <abort@plt+0x5a44>
   1679c:	mvn	r4, #0
   167a0:	mov	r0, r4
   167a4:	pop	{r4, r5, r6, pc}
   167a8:	cmp	r0, #0
   167ac:	bne	1679c <abort@plt+0x5a1c>
   167b0:	bl	10ce4 <__errno_location@plt>
   167b4:	str	r4, [r0]
   167b8:	mvn	r4, #0
   167bc:	mov	r0, r4
   167c0:	pop	{r4, r5, r6, pc}
   167c4:	bl	10ce4 <__errno_location@plt>
   167c8:	ldr	r4, [r0]
   167cc:	subs	r4, r4, #9
   167d0:	mvnne	r4, #0
   167d4:	mov	r0, r4
   167d8:	pop	{r4, r5, r6, pc}
   167dc:	push	{r4, r5, lr}
   167e0:	sub	sp, sp, #12
   167e4:	mov	r4, r0
   167e8:	bl	10d14 <fileno@plt>
   167ec:	cmp	r0, #0
   167f0:	mov	r0, r4
   167f4:	blt	16870 <abort@plt+0x5af0>
   167f8:	bl	10c9c <__freading@plt>
   167fc:	cmp	r0, #0
   16800:	bne	1683c <abort@plt+0x5abc>
   16804:	mov	r0, r4
   16808:	bl	1687c <abort@plt+0x5afc>
   1680c:	cmp	r0, #0
   16810:	beq	1686c <abort@plt+0x5aec>
   16814:	bl	10ce4 <__errno_location@plt>
   16818:	mov	r5, r0
   1681c:	mov	r0, r4
   16820:	ldr	r4, [r5]
   16824:	bl	10d2c <fclose@plt>
   16828:	cmp	r4, #0
   1682c:	mvnne	r0, #0
   16830:	strne	r4, [r5]
   16834:	add	sp, sp, #12
   16838:	pop	{r4, r5, pc}
   1683c:	mov	r0, r4
   16840:	bl	10d14 <fileno@plt>
   16844:	mov	r3, #1
   16848:	str	r3, [sp]
   1684c:	mov	r2, #0
   16850:	mov	r3, #0
   16854:	bl	10c3c <lseek64@plt>
   16858:	mvn	r3, #0
   1685c:	mvn	r2, #0
   16860:	cmp	r1, r3
   16864:	cmpeq	r0, r2
   16868:	bne	16804 <abort@plt+0x5a84>
   1686c:	mov	r0, r4
   16870:	add	sp, sp, #12
   16874:	pop	{r4, r5, lr}
   16878:	b	10d2c <fclose@plt>
   1687c:	push	{r4, lr}
   16880:	subs	r4, r0, #0
   16884:	sub	sp, sp, #8
   16888:	beq	168a4 <abort@plt+0x5b24>
   1688c:	bl	10c9c <__freading@plt>
   16890:	cmp	r0, #0
   16894:	beq	168a4 <abort@plt+0x5b24>
   16898:	ldr	r3, [r4]
   1689c:	tst	r3, #256	; 0x100
   168a0:	bne	168b4 <abort@plt+0x5b34>
   168a4:	mov	r0, r4
   168a8:	add	sp, sp, #8
   168ac:	pop	{r4, lr}
   168b0:	b	10ba0 <fflush@plt>
   168b4:	mov	r3, #1
   168b8:	str	r3, [sp]
   168bc:	mov	r2, #0
   168c0:	mov	r3, #0
   168c4:	mov	r0, r4
   168c8:	bl	16934 <abort@plt+0x5bb4>
   168cc:	mov	r0, r4
   168d0:	add	sp, sp, #8
   168d4:	pop	{r4, lr}
   168d8:	b	10ba0 <fflush@plt>
   168dc:	push	{r4, r5, lr}
   168e0:	sub	sp, sp, #12
   168e4:	mov	r5, r0
   168e8:	bl	10ce4 <__errno_location@plt>
   168ec:	mov	r2, #0
   168f0:	mov	r4, r0
   168f4:	ldr	r3, [r0]
   168f8:	str	r2, [r4]
   168fc:	mov	r0, r5
   16900:	str	r3, [sp]
   16904:	str	r3, [sp, #4]
   16908:	bl	10bac <free@plt>
   1690c:	ldr	r3, [r4]
   16910:	add	r2, sp, #8
   16914:	cmp	r3, #0
   16918:	moveq	r3, #4
   1691c:	movne	r3, #0
   16920:	add	r3, r2, r3
   16924:	ldr	r3, [r3, #-8]
   16928:	str	r3, [r4]
   1692c:	add	sp, sp, #12
   16930:	pop	{r4, r5, pc}
   16934:	push	{r4, r5, r6, r7, r8, lr}
   16938:	sub	sp, sp, #8
   1693c:	ldmib	r0, {ip, lr}
   16940:	mov	r4, r0
   16944:	ldr	r5, [sp, #32]
   16948:	cmp	lr, ip
   1694c:	beq	16964 <abort@plt+0x5be4>
   16950:	str	r5, [sp, #32]
   16954:	mov	r0, r4
   16958:	add	sp, sp, #8
   1695c:	pop	{r4, r5, r6, r7, r8, lr}
   16960:	b	10d38 <fseeko64@plt>
   16964:	ldr	lr, [r0, #20]
   16968:	ldr	ip, [r0, #16]
   1696c:	cmp	lr, ip
   16970:	bne	16950 <abort@plt+0x5bd0>
   16974:	ldr	r8, [r0, #36]	; 0x24
   16978:	cmp	r8, #0
   1697c:	bne	16950 <abort@plt+0x5bd0>
   16980:	mov	r6, r2
   16984:	mov	r7, r3
   16988:	bl	10d14 <fileno@plt>
   1698c:	mov	r2, r6
   16990:	mov	r3, r7
   16994:	str	r5, [sp]
   16998:	bl	10c3c <lseek64@plt>
   1699c:	mvn	r3, #0
   169a0:	mvn	r2, #0
   169a4:	cmp	r1, r3
   169a8:	cmpeq	r0, r2
   169ac:	beq	169cc <abort@plt+0x5c4c>
   169b0:	ldr	r3, [r4]
   169b4:	strd	r0, [r4, #80]	; 0x50
   169b8:	mov	r0, r8
   169bc:	bic	r3, r3, #16
   169c0:	str	r3, [r4]
   169c4:	add	sp, sp, #8
   169c8:	pop	{r4, r5, r6, r7, r8, pc}
   169cc:	mvn	r0, #0
   169d0:	b	169c4 <abort@plt+0x5c44>
   169d4:	push	{r4, lr}
   169d8:	mov	r0, #14
   169dc:	bl	10d5c <nl_langinfo@plt>
   169e0:	cmp	r0, #0
   169e4:	beq	169fc <abort@plt+0x5c7c>
   169e8:	ldrb	r2, [r0]
   169ec:	ldr	r3, [pc, #16]	; 16a04 <abort@plt+0x5c84>
   169f0:	cmp	r2, #0
   169f4:	moveq	r0, r3
   169f8:	pop	{r4, pc}
   169fc:	ldr	r0, [pc]	; 16a04 <abort@plt+0x5c84>
   16a00:	pop	{r4, pc}
   16a04:	andeq	r7, r1, r0, lsr r8
   16a08:	push	{r4, r5, r6, r7, lr}
   16a0c:	subs	r6, r0, #0
   16a10:	sub	sp, sp, #12
   16a14:	addeq	r6, sp, #4
   16a18:	mov	r0, r6
   16a1c:	mov	r5, r2
   16a20:	mov	r7, r1
   16a24:	bl	10c60 <mbrtowc@plt>
   16a28:	cmp	r5, #0
   16a2c:	cmnne	r0, #3
   16a30:	mov	r4, r0
   16a34:	bls	16a50 <abort@plt+0x5cd0>
   16a38:	mov	r0, #0
   16a3c:	bl	16aa8 <abort@plt+0x5d28>
   16a40:	cmp	r0, #0
   16a44:	moveq	r4, #1
   16a48:	ldrbeq	r3, [r7]
   16a4c:	streq	r3, [r6]
   16a50:	mov	r0, r4
   16a54:	add	sp, sp, #12
   16a58:	pop	{r4, r5, r6, r7, pc}
   16a5c:	push	{r4, r5, r6, lr}
   16a60:	subs	r4, r2, #0
   16a64:	mov	r6, r0
   16a68:	mov	r5, r1
   16a6c:	beq	16a98 <abort@plt+0x5d18>
   16a70:	mov	r1, r4
   16a74:	mvn	r0, #0
   16a78:	bl	16b9c <abort@plt+0x5e1c>
   16a7c:	cmp	r0, r5
   16a80:	bcs	16a98 <abort@plt+0x5d18>
   16a84:	bl	10ce4 <__errno_location@plt>
   16a88:	mov	r3, #12
   16a8c:	str	r3, [r0]
   16a90:	mov	r0, #0
   16a94:	pop	{r4, r5, r6, pc}
   16a98:	mul	r1, r5, r4
   16a9c:	mov	r0, r6
   16aa0:	pop	{r4, r5, r6, lr}
   16aa4:	b	16704 <abort@plt+0x5984>
   16aa8:	push	{lr}		; (str lr, [sp, #-4]!)
   16aac:	sub	sp, sp, #268	; 0x10c
   16ab0:	add	r1, sp, #4
   16ab4:	ldr	r2, [pc, #60]	; 16af8 <abort@plt+0x5d78>
   16ab8:	bl	16b04 <abort@plt+0x5d84>
   16abc:	cmp	r0, #0
   16ac0:	movne	r0, #0
   16ac4:	bne	16af0 <abort@plt+0x5d70>
   16ac8:	ldr	r1, [pc, #44]	; 16afc <abort@plt+0x5d7c>
   16acc:	add	r0, sp, #4
   16ad0:	bl	10b88 <strcmp@plt>
   16ad4:	cmp	r0, #0
   16ad8:	beq	16af0 <abort@plt+0x5d70>
   16adc:	add	r0, sp, #4
   16ae0:	ldr	r1, [pc, #24]	; 16b00 <abort@plt+0x5d80>
   16ae4:	bl	10b88 <strcmp@plt>
   16ae8:	adds	r0, r0, #0
   16aec:	movne	r0, #1
   16af0:	add	sp, sp, #268	; 0x10c
   16af4:	pop	{pc}		; (ldr pc, [sp], #4)
   16af8:	andeq	r0, r0, r1, lsl #2
   16afc:	andeq	r7, r1, r8, lsr r8
   16b00:	andeq	r7, r1, ip, lsr r8
   16b04:	push	{r4, r5, r6, lr}
   16b08:	mov	r5, r1
   16b0c:	mov	r1, #0
   16b10:	mov	r4, r2
   16b14:	bl	10d44 <setlocale@plt>
   16b18:	subs	r6, r0, #0
   16b1c:	beq	16b78 <abort@plt+0x5df8>
   16b20:	bl	10cd8 <strlen@plt>
   16b24:	cmp	r4, r0
   16b28:	bhi	16b60 <abort@plt+0x5de0>
   16b2c:	cmp	r4, #0
   16b30:	bne	16b3c <abort@plt+0x5dbc>
   16b34:	mov	r0, #34	; 0x22
   16b38:	pop	{r4, r5, r6, pc}
   16b3c:	sub	r4, r4, #1
   16b40:	mov	r1, r6
   16b44:	mov	r2, r4
   16b48:	mov	r0, r5
   16b4c:	bl	10bc4 <memcpy@plt>
   16b50:	mov	r3, #0
   16b54:	strb	r3, [r5, r4]
   16b58:	mov	r0, #34	; 0x22
   16b5c:	pop	{r4, r5, r6, pc}
   16b60:	add	r2, r0, #1
   16b64:	mov	r1, r6
   16b68:	mov	r0, r5
   16b6c:	bl	10bc4 <memcpy@plt>
   16b70:	mov	r0, #0
   16b74:	pop	{r4, r5, r6, pc}
   16b78:	cmp	r4, #0
   16b7c:	beq	16b8c <abort@plt+0x5e0c>
   16b80:	strb	r6, [r5]
   16b84:	mov	r0, #22
   16b88:	pop	{r4, r5, r6, pc}
   16b8c:	mov	r0, #22
   16b90:	pop	{r4, r5, r6, pc}
   16b94:	mov	r1, #0
   16b98:	b	10d44 <setlocale@plt>
   16b9c:	subs	r2, r1, #1
   16ba0:	bxeq	lr
   16ba4:	bcc	16d7c <abort@plt+0x5ffc>
   16ba8:	cmp	r0, r1
   16bac:	bls	16d60 <abort@plt+0x5fe0>
   16bb0:	tst	r1, r2
   16bb4:	beq	16d6c <abort@plt+0x5fec>
   16bb8:	clz	r3, r0
   16bbc:	clz	r2, r1
   16bc0:	sub	r3, r2, r3
   16bc4:	rsbs	r3, r3, #31
   16bc8:	addne	r3, r3, r3, lsl #1
   16bcc:	mov	r2, #0
   16bd0:	addne	pc, pc, r3, lsl #2
   16bd4:	nop			; (mov r0, r0)
   16bd8:	cmp	r0, r1, lsl #31
   16bdc:	adc	r2, r2, r2
   16be0:	subcs	r0, r0, r1, lsl #31
   16be4:	cmp	r0, r1, lsl #30
   16be8:	adc	r2, r2, r2
   16bec:	subcs	r0, r0, r1, lsl #30
   16bf0:	cmp	r0, r1, lsl #29
   16bf4:	adc	r2, r2, r2
   16bf8:	subcs	r0, r0, r1, lsl #29
   16bfc:	cmp	r0, r1, lsl #28
   16c00:	adc	r2, r2, r2
   16c04:	subcs	r0, r0, r1, lsl #28
   16c08:	cmp	r0, r1, lsl #27
   16c0c:	adc	r2, r2, r2
   16c10:	subcs	r0, r0, r1, lsl #27
   16c14:	cmp	r0, r1, lsl #26
   16c18:	adc	r2, r2, r2
   16c1c:	subcs	r0, r0, r1, lsl #26
   16c20:	cmp	r0, r1, lsl #25
   16c24:	adc	r2, r2, r2
   16c28:	subcs	r0, r0, r1, lsl #25
   16c2c:	cmp	r0, r1, lsl #24
   16c30:	adc	r2, r2, r2
   16c34:	subcs	r0, r0, r1, lsl #24
   16c38:	cmp	r0, r1, lsl #23
   16c3c:	adc	r2, r2, r2
   16c40:	subcs	r0, r0, r1, lsl #23
   16c44:	cmp	r0, r1, lsl #22
   16c48:	adc	r2, r2, r2
   16c4c:	subcs	r0, r0, r1, lsl #22
   16c50:	cmp	r0, r1, lsl #21
   16c54:	adc	r2, r2, r2
   16c58:	subcs	r0, r0, r1, lsl #21
   16c5c:	cmp	r0, r1, lsl #20
   16c60:	adc	r2, r2, r2
   16c64:	subcs	r0, r0, r1, lsl #20
   16c68:	cmp	r0, r1, lsl #19
   16c6c:	adc	r2, r2, r2
   16c70:	subcs	r0, r0, r1, lsl #19
   16c74:	cmp	r0, r1, lsl #18
   16c78:	adc	r2, r2, r2
   16c7c:	subcs	r0, r0, r1, lsl #18
   16c80:	cmp	r0, r1, lsl #17
   16c84:	adc	r2, r2, r2
   16c88:	subcs	r0, r0, r1, lsl #17
   16c8c:	cmp	r0, r1, lsl #16
   16c90:	adc	r2, r2, r2
   16c94:	subcs	r0, r0, r1, lsl #16
   16c98:	cmp	r0, r1, lsl #15
   16c9c:	adc	r2, r2, r2
   16ca0:	subcs	r0, r0, r1, lsl #15
   16ca4:	cmp	r0, r1, lsl #14
   16ca8:	adc	r2, r2, r2
   16cac:	subcs	r0, r0, r1, lsl #14
   16cb0:	cmp	r0, r1, lsl #13
   16cb4:	adc	r2, r2, r2
   16cb8:	subcs	r0, r0, r1, lsl #13
   16cbc:	cmp	r0, r1, lsl #12
   16cc0:	adc	r2, r2, r2
   16cc4:	subcs	r0, r0, r1, lsl #12
   16cc8:	cmp	r0, r1, lsl #11
   16ccc:	adc	r2, r2, r2
   16cd0:	subcs	r0, r0, r1, lsl #11
   16cd4:	cmp	r0, r1, lsl #10
   16cd8:	adc	r2, r2, r2
   16cdc:	subcs	r0, r0, r1, lsl #10
   16ce0:	cmp	r0, r1, lsl #9
   16ce4:	adc	r2, r2, r2
   16ce8:	subcs	r0, r0, r1, lsl #9
   16cec:	cmp	r0, r1, lsl #8
   16cf0:	adc	r2, r2, r2
   16cf4:	subcs	r0, r0, r1, lsl #8
   16cf8:	cmp	r0, r1, lsl #7
   16cfc:	adc	r2, r2, r2
   16d00:	subcs	r0, r0, r1, lsl #7
   16d04:	cmp	r0, r1, lsl #6
   16d08:	adc	r2, r2, r2
   16d0c:	subcs	r0, r0, r1, lsl #6
   16d10:	cmp	r0, r1, lsl #5
   16d14:	adc	r2, r2, r2
   16d18:	subcs	r0, r0, r1, lsl #5
   16d1c:	cmp	r0, r1, lsl #4
   16d20:	adc	r2, r2, r2
   16d24:	subcs	r0, r0, r1, lsl #4
   16d28:	cmp	r0, r1, lsl #3
   16d2c:	adc	r2, r2, r2
   16d30:	subcs	r0, r0, r1, lsl #3
   16d34:	cmp	r0, r1, lsl #2
   16d38:	adc	r2, r2, r2
   16d3c:	subcs	r0, r0, r1, lsl #2
   16d40:	cmp	r0, r1, lsl #1
   16d44:	adc	r2, r2, r2
   16d48:	subcs	r0, r0, r1, lsl #1
   16d4c:	cmp	r0, r1
   16d50:	adc	r2, r2, r2
   16d54:	subcs	r0, r0, r1
   16d58:	mov	r0, r2
   16d5c:	bx	lr
   16d60:	moveq	r0, #1
   16d64:	movne	r0, #0
   16d68:	bx	lr
   16d6c:	clz	r2, r1
   16d70:	rsb	r2, r2, #31
   16d74:	lsr	r0, r0, r2
   16d78:	bx	lr
   16d7c:	cmp	r0, #0
   16d80:	mvnne	r0, #0
   16d84:	b	16fe8 <abort@plt+0x6268>
   16d88:	cmp	r1, #0
   16d8c:	beq	16d7c <abort@plt+0x5ffc>
   16d90:	push	{r0, r1, lr}
   16d94:	bl	16b9c <abort@plt+0x5e1c>
   16d98:	pop	{r1, r2, lr}
   16d9c:	mul	r3, r2, r0
   16da0:	sub	r1, r1, r3
   16da4:	bx	lr
   16da8:	cmp	r1, #0
   16dac:	beq	16fb8 <abort@plt+0x6238>
   16db0:	eor	ip, r0, r1
   16db4:	rsbmi	r1, r1, #0
   16db8:	subs	r2, r1, #1
   16dbc:	beq	16f84 <abort@plt+0x6204>
   16dc0:	movs	r3, r0
   16dc4:	rsbmi	r3, r0, #0
   16dc8:	cmp	r3, r1
   16dcc:	bls	16f90 <abort@plt+0x6210>
   16dd0:	tst	r1, r2
   16dd4:	beq	16fa0 <abort@plt+0x6220>
   16dd8:	clz	r2, r3
   16ddc:	clz	r0, r1
   16de0:	sub	r2, r0, r2
   16de4:	rsbs	r2, r2, #31
   16de8:	addne	r2, r2, r2, lsl #1
   16dec:	mov	r0, #0
   16df0:	addne	pc, pc, r2, lsl #2
   16df4:	nop			; (mov r0, r0)
   16df8:	cmp	r3, r1, lsl #31
   16dfc:	adc	r0, r0, r0
   16e00:	subcs	r3, r3, r1, lsl #31
   16e04:	cmp	r3, r1, lsl #30
   16e08:	adc	r0, r0, r0
   16e0c:	subcs	r3, r3, r1, lsl #30
   16e10:	cmp	r3, r1, lsl #29
   16e14:	adc	r0, r0, r0
   16e18:	subcs	r3, r3, r1, lsl #29
   16e1c:	cmp	r3, r1, lsl #28
   16e20:	adc	r0, r0, r0
   16e24:	subcs	r3, r3, r1, lsl #28
   16e28:	cmp	r3, r1, lsl #27
   16e2c:	adc	r0, r0, r0
   16e30:	subcs	r3, r3, r1, lsl #27
   16e34:	cmp	r3, r1, lsl #26
   16e38:	adc	r0, r0, r0
   16e3c:	subcs	r3, r3, r1, lsl #26
   16e40:	cmp	r3, r1, lsl #25
   16e44:	adc	r0, r0, r0
   16e48:	subcs	r3, r3, r1, lsl #25
   16e4c:	cmp	r3, r1, lsl #24
   16e50:	adc	r0, r0, r0
   16e54:	subcs	r3, r3, r1, lsl #24
   16e58:	cmp	r3, r1, lsl #23
   16e5c:	adc	r0, r0, r0
   16e60:	subcs	r3, r3, r1, lsl #23
   16e64:	cmp	r3, r1, lsl #22
   16e68:	adc	r0, r0, r0
   16e6c:	subcs	r3, r3, r1, lsl #22
   16e70:	cmp	r3, r1, lsl #21
   16e74:	adc	r0, r0, r0
   16e78:	subcs	r3, r3, r1, lsl #21
   16e7c:	cmp	r3, r1, lsl #20
   16e80:	adc	r0, r0, r0
   16e84:	subcs	r3, r3, r1, lsl #20
   16e88:	cmp	r3, r1, lsl #19
   16e8c:	adc	r0, r0, r0
   16e90:	subcs	r3, r3, r1, lsl #19
   16e94:	cmp	r3, r1, lsl #18
   16e98:	adc	r0, r0, r0
   16e9c:	subcs	r3, r3, r1, lsl #18
   16ea0:	cmp	r3, r1, lsl #17
   16ea4:	adc	r0, r0, r0
   16ea8:	subcs	r3, r3, r1, lsl #17
   16eac:	cmp	r3, r1, lsl #16
   16eb0:	adc	r0, r0, r0
   16eb4:	subcs	r3, r3, r1, lsl #16
   16eb8:	cmp	r3, r1, lsl #15
   16ebc:	adc	r0, r0, r0
   16ec0:	subcs	r3, r3, r1, lsl #15
   16ec4:	cmp	r3, r1, lsl #14
   16ec8:	adc	r0, r0, r0
   16ecc:	subcs	r3, r3, r1, lsl #14
   16ed0:	cmp	r3, r1, lsl #13
   16ed4:	adc	r0, r0, r0
   16ed8:	subcs	r3, r3, r1, lsl #13
   16edc:	cmp	r3, r1, lsl #12
   16ee0:	adc	r0, r0, r0
   16ee4:	subcs	r3, r3, r1, lsl #12
   16ee8:	cmp	r3, r1, lsl #11
   16eec:	adc	r0, r0, r0
   16ef0:	subcs	r3, r3, r1, lsl #11
   16ef4:	cmp	r3, r1, lsl #10
   16ef8:	adc	r0, r0, r0
   16efc:	subcs	r3, r3, r1, lsl #10
   16f00:	cmp	r3, r1, lsl #9
   16f04:	adc	r0, r0, r0
   16f08:	subcs	r3, r3, r1, lsl #9
   16f0c:	cmp	r3, r1, lsl #8
   16f10:	adc	r0, r0, r0
   16f14:	subcs	r3, r3, r1, lsl #8
   16f18:	cmp	r3, r1, lsl #7
   16f1c:	adc	r0, r0, r0
   16f20:	subcs	r3, r3, r1, lsl #7
   16f24:	cmp	r3, r1, lsl #6
   16f28:	adc	r0, r0, r0
   16f2c:	subcs	r3, r3, r1, lsl #6
   16f30:	cmp	r3, r1, lsl #5
   16f34:	adc	r0, r0, r0
   16f38:	subcs	r3, r3, r1, lsl #5
   16f3c:	cmp	r3, r1, lsl #4
   16f40:	adc	r0, r0, r0
   16f44:	subcs	r3, r3, r1, lsl #4
   16f48:	cmp	r3, r1, lsl #3
   16f4c:	adc	r0, r0, r0
   16f50:	subcs	r3, r3, r1, lsl #3
   16f54:	cmp	r3, r1, lsl #2
   16f58:	adc	r0, r0, r0
   16f5c:	subcs	r3, r3, r1, lsl #2
   16f60:	cmp	r3, r1, lsl #1
   16f64:	adc	r0, r0, r0
   16f68:	subcs	r3, r3, r1, lsl #1
   16f6c:	cmp	r3, r1
   16f70:	adc	r0, r0, r0
   16f74:	subcs	r3, r3, r1
   16f78:	cmp	ip, #0
   16f7c:	rsbmi	r0, r0, #0
   16f80:	bx	lr
   16f84:	teq	ip, r0
   16f88:	rsbmi	r0, r0, #0
   16f8c:	bx	lr
   16f90:	movcc	r0, #0
   16f94:	asreq	r0, ip, #31
   16f98:	orreq	r0, r0, #1
   16f9c:	bx	lr
   16fa0:	clz	r2, r1
   16fa4:	rsb	r2, r2, #31
   16fa8:	cmp	ip, #0
   16fac:	lsr	r0, r3, r2
   16fb0:	rsbmi	r0, r0, #0
   16fb4:	bx	lr
   16fb8:	cmp	r0, #0
   16fbc:	mvngt	r0, #-2147483648	; 0x80000000
   16fc0:	movlt	r0, #-2147483648	; 0x80000000
   16fc4:	b	16fe8 <abort@plt+0x6268>
   16fc8:	cmp	r1, #0
   16fcc:	beq	16fb8 <abort@plt+0x6238>
   16fd0:	push	{r0, r1, lr}
   16fd4:	bl	16db0 <abort@plt+0x6030>
   16fd8:	pop	{r1, r2, lr}
   16fdc:	mul	r3, r2, r0
   16fe0:	sub	r1, r1, r3
   16fe4:	bx	lr
   16fe8:	push	{r1, lr}
   16fec:	mov	r0, #8
   16ff0:	bl	10b7c <raise@plt>
   16ff4:	pop	{r1, pc}
   16ff8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16ffc:	mov	r7, r0
   17000:	ldr	r6, [pc, #72]	; 17050 <abort@plt+0x62d0>
   17004:	ldr	r5, [pc, #72]	; 17054 <abort@plt+0x62d4>
   17008:	add	r6, pc, r6
   1700c:	add	r5, pc, r5
   17010:	sub	r6, r6, r5
   17014:	mov	r8, r1
   17018:	mov	r9, r2
   1701c:	bl	10b44 <calloc@plt-0x20>
   17020:	asrs	r6, r6, #2
   17024:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   17028:	mov	r4, #0
   1702c:	add	r4, r4, #1
   17030:	ldr	r3, [r5], #4
   17034:	mov	r2, r9
   17038:	mov	r1, r8
   1703c:	mov	r0, r7
   17040:	blx	r3
   17044:	cmp	r6, r4
   17048:	bne	1702c <abort@plt+0x62ac>
   1704c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17050:	andeq	r0, r1, r0, lsl #30
   17054:	strdeq	r0, [r1], -r8
   17058:	bx	lr
   1705c:	ldr	r3, [pc, #12]	; 17070 <abort@plt+0x62f0>
   17060:	mov	r1, #0
   17064:	add	r3, pc, r3
   17068:	ldr	r2, [r3]
   1706c:	b	10cf0 <__cxa_atexit@plt>
   17070:	andeq	r1, r1, r0, rrx

Disassembly of section .fini:

00017074 <.fini>:
   17074:	push	{r3, lr}
   17078:	pop	{r3, pc}
