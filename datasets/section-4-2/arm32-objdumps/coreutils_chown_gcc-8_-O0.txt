
../repos/coreutils/src/chown:     file format elf32-littlearm


Disassembly of section .init:

00010fe0 <.init>:
   10fe0:	push	{r3, lr}
   10fe4:	bl	113ac <__assert_fail@plt+0x4c>
   10fe8:	pop	{r3, pc}

Disassembly of section .plt:

00010fec <fstatfs64@plt-0x14>:
   10fec:	push	{lr}		; (str lr, [sp, #-4]!)
   10ff0:	ldr	lr, [pc, #4]	; 10ffc <fstatfs64@plt-0x4>
   10ff4:	add	lr, pc, lr
   10ff8:	ldr	pc, [lr, #8]!
   10ffc:	andeq	r0, r2, r4

00011000 <fstatfs64@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #32, 20	; 0x20000
   11008:	ldr	pc, [ip, #4]!

0001100c <calloc@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #126976	; 0x1f000
   11014:	ldr	pc, [ip, #4092]!	; 0xffc

00011018 <endgrent@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #126976	; 0x1f000
   11020:	ldr	pc, [ip, #4084]!	; 0xff4

00011024 <fputs_unlocked@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #126976	; 0x1f000
   1102c:	ldr	pc, [ip, #4076]!	; 0xfec

00011030 <raise@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #126976	; 0x1f000
   11038:	ldr	pc, [ip, #4068]!	; 0xfe4

0001103c <getpwnam@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #126976	; 0x1f000
   11044:	ldr	pc, [ip, #4060]!	; 0xfdc

00011048 <strcmp@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #126976	; 0x1f000
   11050:	ldr	pc, [ip, #4052]!	; 0xfd4

00011054 <getpwuid@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #126976	; 0x1f000
   1105c:	ldr	pc, [ip, #4044]!	; 0xfcc

00011060 <printf@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #126976	; 0x1f000
   11068:	ldr	pc, [ip, #4036]!	; 0xfc4

0001106c <fflush@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #126976	; 0x1f000
   11074:	ldr	pc, [ip, #4028]!	; 0xfbc

00011078 <memmove@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #126976	; 0x1f000
   11080:	ldr	pc, [ip, #4020]!	; 0xfb4

00011084 <free@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #126976	; 0x1f000
   1108c:	ldr	pc, [ip, #4012]!	; 0xfac

00011090 <_exit@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #126976	; 0x1f000
   11098:	ldr	pc, [ip, #4004]!	; 0xfa4

0001109c <memcpy@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #126976	; 0x1f000
   110a4:	ldr	pc, [ip, #3996]!	; 0xf9c

000110a8 <mbsinit@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #126976	; 0x1f000
   110b0:	ldr	pc, [ip, #3988]!	; 0xf94

000110b4 <memcmp@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #126976	; 0x1f000
   110bc:	ldr	pc, [ip, #3980]!	; 0xf8c

000110c0 <stpcpy@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #126976	; 0x1f000
   110c8:	ldr	pc, [ip, #3972]!	; 0xf84

000110cc <fputc_unlocked@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #126976	; 0x1f000
   110d4:	ldr	pc, [ip, #3964]!	; 0xf7c

000110d8 <realloc@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #126976	; 0x1f000
   110e0:	ldr	pc, [ip, #3956]!	; 0xf74

000110e4 <textdomain@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #126976	; 0x1f000
   110ec:	ldr	pc, [ip, #3948]!	; 0xf6c

000110f0 <__fxstatat64@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #126976	; 0x1f000
   110f8:	ldr	pc, [ip, #3940]!	; 0xf64

000110fc <iswprint@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #126976	; 0x1f000
   11104:	ldr	pc, [ip, #3932]!	; 0xf5c

00011108 <__fxstat64@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #126976	; 0x1f000
   11110:	ldr	pc, [ip, #3924]!	; 0xf54

00011114 <fwrite@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #126976	; 0x1f000
   1111c:	ldr	pc, [ip, #3916]!	; 0xf4c

00011120 <lseek64@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #126976	; 0x1f000
   11128:	ldr	pc, [ip, #3908]!	; 0xf44

0001112c <__ctype_get_mb_cur_max@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #126976	; 0x1f000
   11134:	ldr	pc, [ip, #3900]!	; 0xf3c

00011138 <strcpy@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #126976	; 0x1f000
   11140:	ldr	pc, [ip, #3892]!	; 0xf34

00011144 <__fpending@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #126976	; 0x1f000
   1114c:	ldr	pc, [ip, #3884]!	; 0xf2c

00011150 <ferror_unlocked@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #126976	; 0x1f000
   11158:	ldr	pc, [ip, #3876]!	; 0xf24

0001115c <mbrtowc@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #126976	; 0x1f000
   11164:	ldr	pc, [ip, #3868]!	; 0xf1c

00011168 <error@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #126976	; 0x1f000
   11170:	ldr	pc, [ip, #3860]!	; 0xf14

00011174 <open64@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #126976	; 0x1f000
   1117c:	ldr	pc, [ip, #3852]!	; 0xf0c

00011180 <malloc@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #126976	; 0x1f000
   11188:	ldr	pc, [ip, #3844]!	; 0xf04

0001118c <__libc_start_main@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #126976	; 0x1f000
   11194:	ldr	pc, [ip, #3836]!	; 0xefc

00011198 <__freading@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #126976	; 0x1f000
   111a0:	ldr	pc, [ip, #3828]!	; 0xef4

000111a4 <__gmon_start__@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #126976	; 0x1f000
   111ac:	ldr	pc, [ip, #3820]!	; 0xeec

000111b0 <getopt_long@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #126976	; 0x1f000
   111b8:	ldr	pc, [ip, #3812]!	; 0xee4

000111bc <__ctype_b_loc@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #126976	; 0x1f000
   111c4:	ldr	pc, [ip, #3804]!	; 0xedc

000111c8 <exit@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #126976	; 0x1f000
   111d0:	ldr	pc, [ip, #3796]!	; 0xed4

000111d4 <gettext@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #126976	; 0x1f000
   111dc:	ldr	pc, [ip, #3788]!	; 0xecc

000111e0 <strtoul@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #126976	; 0x1f000
   111e8:	ldr	pc, [ip, #3780]!	; 0xec4

000111ec <strlen@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #126976	; 0x1f000
   111f4:	ldr	pc, [ip, #3772]!	; 0xebc

000111f8 <strchr@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #126976	; 0x1f000
   11200:	ldr	pc, [ip, #3764]!	; 0xeb4

00011204 <openat64@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #126976	; 0x1f000
   1120c:	ldr	pc, [ip, #3756]!	; 0xeac

00011210 <fchown@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #126976	; 0x1f000
   11218:	ldr	pc, [ip, #3748]!	; 0xea4

0001121c <fprintf@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #126976	; 0x1f000
   11224:	ldr	pc, [ip, #3740]!	; 0xe9c

00011228 <__errno_location@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #126976	; 0x1f000
   11230:	ldr	pc, [ip, #3732]!	; 0xe94

00011234 <__cxa_atexit@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #126976	; 0x1f000
   1123c:	ldr	pc, [ip, #3724]!	; 0xe8c

00011240 <memset@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #126976	; 0x1f000
   11248:	ldr	pc, [ip, #3716]!	; 0xe84

0001124c <fileno@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #126976	; 0x1f000
   11254:	ldr	pc, [ip, #3708]!	; 0xe7c

00011258 <fclose@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #126976	; 0x1f000
   11260:	ldr	pc, [ip, #3700]!	; 0xe74

00011264 <fseeko64@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #126976	; 0x1f000
   1126c:	ldr	pc, [ip, #3692]!	; 0xe6c

00011270 <fcntl64@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #126976	; 0x1f000
   11278:	ldr	pc, [ip, #3684]!	; 0xe64

0001127c <setlocale@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #126976	; 0x1f000
   11284:	ldr	pc, [ip, #3676]!	; 0xe5c

00011288 <endpwent@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #126976	; 0x1f000
   11290:	ldr	pc, [ip, #3668]!	; 0xe54

00011294 <strrchr@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #126976	; 0x1f000
   1129c:	ldr	pc, [ip, #3660]!	; 0xe4c

000112a0 <nl_langinfo@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #126976	; 0x1f000
   112a8:	ldr	pc, [ip, #3652]!	; 0xe44

000112ac <readdir64@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #126976	; 0x1f000
   112b4:	ldr	pc, [ip, #3644]!	; 0xe3c

000112b8 <fdopendir@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #126976	; 0x1f000
   112c0:	ldr	pc, [ip, #3636]!	; 0xe34

000112c4 <dirfd@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #126976	; 0x1f000
   112cc:	ldr	pc, [ip, #3628]!	; 0xe2c

000112d0 <fchdir@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #126976	; 0x1f000
   112d8:	ldr	pc, [ip, #3620]!	; 0xe24

000112dc <qsort@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #126976	; 0x1f000
   112e4:	ldr	pc, [ip, #3612]!	; 0xe1c

000112e8 <fchownat@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #126976	; 0x1f000
   112f0:	ldr	pc, [ip, #3604]!	; 0xe14

000112f4 <bindtextdomain@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #126976	; 0x1f000
   112fc:	ldr	pc, [ip, #3596]!	; 0xe0c

00011300 <__xstat64@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #126976	; 0x1f000
   11308:	ldr	pc, [ip, #3588]!	; 0xe04

0001130c <strncmp@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #126976	; 0x1f000
   11314:	ldr	pc, [ip, #3580]!	; 0xdfc

00011318 <abort@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #126976	; 0x1f000
   11320:	ldr	pc, [ip, #3572]!	; 0xdf4

00011324 <close@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #126976	; 0x1f000
   1132c:	ldr	pc, [ip, #3564]!	; 0xdec

00011330 <__lxstat64@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #126976	; 0x1f000
   11338:	ldr	pc, [ip, #3556]!	; 0xde4

0001133c <closedir@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #126976	; 0x1f000
   11344:	ldr	pc, [ip, #3548]!	; 0xddc

00011348 <getgrgid@plt>:
   11348:	add	ip, pc, #0, 12
   1134c:	add	ip, ip, #126976	; 0x1f000
   11350:	ldr	pc, [ip, #3540]!	; 0xdd4

00011354 <getgrnam@plt>:
   11354:	add	ip, pc, #0, 12
   11358:	add	ip, ip, #126976	; 0x1f000
   1135c:	ldr	pc, [ip, #3532]!	; 0xdcc

00011360 <__assert_fail@plt>:
   11360:	add	ip, pc, #0, 12
   11364:	add	ip, ip, #126976	; 0x1f000
   11368:	ldr	pc, [ip, #3524]!	; 0xdc4

Disassembly of section .text:

00011370 <.text>:
   11370:	mov	fp, #0
   11374:	mov	lr, #0
   11378:	pop	{r1}		; (ldr r1, [sp], #4)
   1137c:	mov	r2, sp
   11380:	push	{r2}		; (str r2, [sp, #-4]!)
   11384:	push	{r0}		; (str r0, [sp, #-4]!)
   11388:	ldr	ip, [pc, #16]	; 113a0 <__assert_fail@plt+0x40>
   1138c:	push	{ip}		; (str ip, [sp, #-4]!)
   11390:	ldr	r0, [pc, #12]	; 113a4 <__assert_fail@plt+0x44>
   11394:	ldr	r3, [pc, #12]	; 113a8 <__assert_fail@plt+0x48>
   11398:	bl	1118c <__libc_start_main@plt>
   1139c:	bl	11318 <abort@plt>
   113a0:	andeq	pc, r1, r8, ror #1
   113a4:	ldrdeq	r1, [r1], -r4
   113a8:	andeq	pc, r1, r8, lsl #1
   113ac:	ldr	r3, [pc, #20]	; 113c8 <__assert_fail@plt+0x68>
   113b0:	ldr	r2, [pc, #20]	; 113cc <__assert_fail@plt+0x6c>
   113b4:	add	r3, pc, r3
   113b8:	ldr	r2, [r3, r2]
   113bc:	cmp	r2, #0
   113c0:	bxeq	lr
   113c4:	b	111a4 <__gmon_start__@plt>
   113c8:	andeq	pc, r1, r4, asr #24
   113cc:	andeq	r0, r0, r0, lsr r1
   113d0:	ldr	r0, [pc, #24]	; 113f0 <__assert_fail@plt+0x90>
   113d4:	ldr	r3, [pc, #24]	; 113f4 <__assert_fail@plt+0x94>
   113d8:	cmp	r3, r0
   113dc:	bxeq	lr
   113e0:	ldr	r3, [pc, #16]	; 113f8 <__assert_fail@plt+0x98>
   113e4:	cmp	r3, #0
   113e8:	bxeq	lr
   113ec:	bx	r3
   113f0:	muleq	r3, r0, r1
   113f4:	muleq	r3, r0, r1
   113f8:	andeq	r0, r0, r0
   113fc:	ldr	r0, [pc, #36]	; 11428 <__assert_fail@plt+0xc8>
   11400:	ldr	r1, [pc, #36]	; 1142c <__assert_fail@plt+0xcc>
   11404:	sub	r1, r1, r0
   11408:	asr	r1, r1, #2
   1140c:	add	r1, r1, r1, lsr #31
   11410:	asrs	r1, r1, #1
   11414:	bxeq	lr
   11418:	ldr	r3, [pc, #16]	; 11430 <__assert_fail@plt+0xd0>
   1141c:	cmp	r3, #0
   11420:	bxeq	lr
   11424:	bx	r3
   11428:	muleq	r3, r0, r1
   1142c:	muleq	r3, r0, r1
   11430:	andeq	r0, r0, r0
   11434:	push	{r4, lr}
   11438:	ldr	r4, [pc, #24]	; 11458 <__assert_fail@plt+0xf8>
   1143c:	ldrb	r3, [r4]
   11440:	cmp	r3, #0
   11444:	popne	{r4, pc}
   11448:	bl	113d0 <__assert_fail@plt+0x70>
   1144c:	mov	r3, #1
   11450:	strb	r3, [r4]
   11454:	pop	{r4, pc}
   11458:	andeq	r1, r3, ip, lsr #3
   1145c:	b	113fc <__assert_fail@plt+0x9c>
   11460:	str	fp, [sp, #-8]!
   11464:	str	lr, [sp, #4]
   11468:	add	fp, sp, #4
   1146c:	sub	sp, sp, #80	; 0x50
   11470:	str	r0, [fp, #-80]	; 0xffffffb0
   11474:	movw	r2, #62172	; 0xf2dc
   11478:	movt	r2, #1
   1147c:	sub	r3, fp, #72	; 0x48
   11480:	ldrd	r0, [r2]
   11484:	strd	r0, [r3]
   11488:	ldrd	r0, [r2, #8]
   1148c:	strd	r0, [r3, #8]
   11490:	ldrd	r0, [r2, #16]
   11494:	strd	r0, [r3, #16]
   11498:	ldrd	r0, [r2, #24]
   1149c:	strd	r0, [r3, #24]
   114a0:	ldrd	r0, [r2, #32]
   114a4:	strd	r0, [r3, #32]
   114a8:	ldrd	r0, [r2, #40]	; 0x28
   114ac:	strd	r0, [r3, #40]	; 0x28
   114b0:	ldrd	r0, [r2, #48]	; 0x30
   114b4:	strd	r0, [r3, #48]	; 0x30
   114b8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   114bc:	str	r3, [fp, #-8]
   114c0:	sub	r3, fp, #72	; 0x48
   114c4:	str	r3, [fp, #-12]
   114c8:	b	114d8 <__assert_fail@plt+0x178>
   114cc:	ldr	r3, [fp, #-12]
   114d0:	add	r3, r3, #8
   114d4:	str	r3, [fp, #-12]
   114d8:	ldr	r3, [fp, #-12]
   114dc:	ldr	r3, [r3]
   114e0:	cmp	r3, #0
   114e4:	beq	11508 <__assert_fail@plt+0x1a8>
   114e8:	ldr	r3, [fp, #-12]
   114ec:	ldr	r3, [r3]
   114f0:	mov	r1, r3
   114f4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   114f8:	bl	11048 <strcmp@plt>
   114fc:	mov	r3, r0
   11500:	cmp	r3, #0
   11504:	bne	114cc <__assert_fail@plt+0x16c>
   11508:	ldr	r3, [fp, #-12]
   1150c:	ldr	r3, [r3, #4]
   11510:	cmp	r3, #0
   11514:	beq	11524 <__assert_fail@plt+0x1c4>
   11518:	ldr	r3, [fp, #-12]
   1151c:	ldr	r3, [r3, #4]
   11520:	str	r3, [fp, #-8]
   11524:	movw	r0, #61800	; 0xf168
   11528:	movt	r0, #1
   1152c:	bl	111d4 <gettext@plt>
   11530:	mov	r3, r0
   11534:	movw	r2, #61824	; 0xf180
   11538:	movt	r2, #1
   1153c:	movw	r1, #61864	; 0xf1a8
   11540:	movt	r1, #1
   11544:	mov	r0, r3
   11548:	bl	11060 <printf@plt>
   1154c:	mov	r1, #0
   11550:	mov	r0, #5
   11554:	bl	1127c <setlocale@plt>
   11558:	str	r0, [fp, #-16]
   1155c:	ldr	r3, [fp, #-16]
   11560:	cmp	r3, #0
   11564:	beq	115b0 <__assert_fail@plt+0x250>
   11568:	mov	r2, #3
   1156c:	movw	r1, #61880	; 0xf1b8
   11570:	movt	r1, #1
   11574:	ldr	r0, [fp, #-16]
   11578:	bl	1130c <strncmp@plt>
   1157c:	mov	r3, r0
   11580:	cmp	r3, #0
   11584:	beq	115b0 <__assert_fail@plt+0x250>
   11588:	movw	r0, #61884	; 0xf1bc
   1158c:	movt	r0, #1
   11590:	bl	111d4 <gettext@plt>
   11594:	mov	r2, r0
   11598:	movw	r3, #4516	; 0x11a4
   1159c:	movt	r3, #3
   115a0:	ldr	r3, [r3]
   115a4:	mov	r1, r3
   115a8:	mov	r0, r2
   115ac:	bl	11024 <fputs_unlocked@plt>
   115b0:	movw	r0, #61956	; 0xf204
   115b4:	movt	r0, #1
   115b8:	bl	111d4 <gettext@plt>
   115bc:	mov	r3, r0
   115c0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   115c4:	movw	r1, #61824	; 0xf180
   115c8:	movt	r1, #1
   115cc:	mov	r0, r3
   115d0:	bl	11060 <printf@plt>
   115d4:	movw	r0, #61984	; 0xf220
   115d8:	movt	r0, #1
   115dc:	bl	111d4 <gettext@plt>
   115e0:	ldr	r2, [fp, #-8]
   115e4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   115e8:	cmp	r2, r3
   115ec:	bne	115fc <__assert_fail@plt+0x29c>
   115f0:	movw	r3, #62036	; 0xf254
   115f4:	movt	r3, #1
   115f8:	b	11604 <__assert_fail@plt+0x2a4>
   115fc:	movw	r3, #62048	; 0xf260
   11600:	movt	r3, #1
   11604:	mov	r2, r3
   11608:	ldr	r1, [fp, #-8]
   1160c:	bl	11060 <printf@plt>
   11610:	nop	{0}
   11614:	sub	sp, fp, #4
   11618:	ldr	fp, [sp]
   1161c:	add	sp, sp, #4
   11620:	pop	{pc}		; (ldr pc, [sp], #4)
   11624:	str	r4, [sp, #-12]!
   11628:	str	fp, [sp, #4]
   1162c:	str	lr, [sp, #8]
   11630:	add	fp, sp, #8
   11634:	sub	sp, sp, #12
   11638:	str	r0, [fp, #-16]
   1163c:	ldr	r3, [fp, #-16]
   11640:	cmp	r3, #0
   11644:	beq	11680 <__assert_fail@plt+0x320>
   11648:	movw	r3, #4512	; 0x11a0
   1164c:	movt	r3, #3
   11650:	ldr	r4, [r3]
   11654:	movw	r0, #62596	; 0xf484
   11658:	movt	r0, #1
   1165c:	bl	111d4 <gettext@plt>
   11660:	mov	r1, r0
   11664:	movw	r3, #4560	; 0x11d0
   11668:	movt	r3, #3
   1166c:	ldr	r3, [r3]
   11670:	mov	r2, r3
   11674:	mov	r0, r4
   11678:	bl	1121c <fprintf@plt>
   1167c:	b	118cc <__assert_fail@plt+0x56c>
   11680:	movw	r0, #62636	; 0xf4ac
   11684:	movt	r0, #1
   11688:	bl	111d4 <gettext@plt>
   1168c:	movw	r3, #4560	; 0x11d0
   11690:	movt	r3, #3
   11694:	ldr	r1, [r3]
   11698:	movw	r3, #4560	; 0x11d0
   1169c:	movt	r3, #3
   116a0:	ldr	r3, [r3]
   116a4:	mov	r2, r3
   116a8:	bl	11060 <printf@plt>
   116ac:	movw	r0, #62736	; 0xf510
   116b0:	movt	r0, #1
   116b4:	bl	111d4 <gettext@plt>
   116b8:	mov	r2, r0
   116bc:	movw	r3, #4516	; 0x11a4
   116c0:	movt	r3, #3
   116c4:	ldr	r3, [r3]
   116c8:	mov	r1, r3
   116cc:	mov	r0, r2
   116d0:	bl	11024 <fputs_unlocked@plt>
   116d4:	movw	r0, #62884	; 0xf5a4
   116d8:	movt	r0, #1
   116dc:	bl	111d4 <gettext@plt>
   116e0:	mov	r2, r0
   116e4:	movw	r3, #4516	; 0x11a4
   116e8:	movt	r3, #3
   116ec:	ldr	r3, [r3]
   116f0:	mov	r1, r3
   116f4:	mov	r0, r2
   116f8:	bl	11024 <fputs_unlocked@plt>
   116fc:	movw	r0, #63088	; 0xf670
   11700:	movt	r0, #1
   11704:	bl	111d4 <gettext@plt>
   11708:	mov	r2, r0
   1170c:	movw	r3, #4516	; 0x11a4
   11710:	movt	r3, #3
   11714:	ldr	r3, [r3]
   11718:	mov	r1, r3
   1171c:	mov	r0, r2
   11720:	bl	11024 <fputs_unlocked@plt>
   11724:	movw	r0, #63320	; 0xf758
   11728:	movt	r0, #1
   1172c:	bl	111d4 <gettext@plt>
   11730:	mov	r2, r0
   11734:	movw	r3, #4516	; 0x11a4
   11738:	movt	r3, #3
   1173c:	ldr	r3, [r3]
   11740:	mov	r1, r3
   11744:	mov	r0, r2
   11748:	bl	11024 <fputs_unlocked@plt>
   1174c:	movw	r0, #63440	; 0xf7d0
   11750:	movt	r0, #1
   11754:	bl	111d4 <gettext@plt>
   11758:	mov	r2, r0
   1175c:	movw	r3, #4516	; 0x11a4
   11760:	movt	r3, #3
   11764:	ldr	r3, [r3]
   11768:	mov	r1, r3
   1176c:	mov	r0, r2
   11770:	bl	11024 <fputs_unlocked@plt>
   11774:	movw	r0, #63780	; 0xf924
   11778:	movt	r0, #1
   1177c:	bl	111d4 <gettext@plt>
   11780:	mov	r2, r0
   11784:	movw	r3, #4516	; 0x11a4
   11788:	movt	r3, #3
   1178c:	ldr	r3, [r3]
   11790:	mov	r1, r3
   11794:	mov	r0, r2
   11798:	bl	11024 <fputs_unlocked@plt>
   1179c:	movw	r0, #63908	; 0xf9a4
   117a0:	movt	r0, #1
   117a4:	bl	111d4 <gettext@plt>
   117a8:	mov	r2, r0
   117ac:	movw	r3, #4516	; 0x11a4
   117b0:	movt	r3, #3
   117b4:	ldr	r3, [r3]
   117b8:	mov	r1, r3
   117bc:	mov	r0, r2
   117c0:	bl	11024 <fputs_unlocked@plt>
   117c4:	movw	r0, #64032	; 0xfa20
   117c8:	movt	r0, #1
   117cc:	bl	111d4 <gettext@plt>
   117d0:	mov	r2, r0
   117d4:	movw	r3, #4516	; 0x11a4
   117d8:	movt	r3, #3
   117dc:	ldr	r3, [r3]
   117e0:	mov	r1, r3
   117e4:	mov	r0, r2
   117e8:	bl	11024 <fputs_unlocked@plt>
   117ec:	movw	r0, #64104	; 0xfa68
   117f0:	movt	r0, #1
   117f4:	bl	111d4 <gettext@plt>
   117f8:	mov	r2, r0
   117fc:	movw	r3, #4516	; 0x11a4
   11800:	movt	r3, #3
   11804:	ldr	r3, [r3]
   11808:	mov	r1, r3
   1180c:	mov	r0, r2
   11810:	bl	11024 <fputs_unlocked@plt>
   11814:	movw	r0, #64572	; 0xfc3c
   11818:	movt	r0, #1
   1181c:	bl	111d4 <gettext@plt>
   11820:	mov	r2, r0
   11824:	movw	r3, #4516	; 0x11a4
   11828:	movt	r3, #3
   1182c:	ldr	r3, [r3]
   11830:	mov	r1, r3
   11834:	mov	r0, r2
   11838:	bl	11024 <fputs_unlocked@plt>
   1183c:	movw	r0, #64620	; 0xfc6c
   11840:	movt	r0, #1
   11844:	bl	111d4 <gettext@plt>
   11848:	mov	r2, r0
   1184c:	movw	r3, #4516	; 0x11a4
   11850:	movt	r3, #3
   11854:	ldr	r3, [r3]
   11858:	mov	r1, r3
   1185c:	mov	r0, r2
   11860:	bl	11024 <fputs_unlocked@plt>
   11864:	movw	r0, #64676	; 0xfca4
   11868:	movt	r0, #1
   1186c:	bl	111d4 <gettext@plt>
   11870:	mov	r2, r0
   11874:	movw	r3, #4516	; 0x11a4
   11878:	movt	r3, #3
   1187c:	ldr	r3, [r3]
   11880:	mov	r1, r3
   11884:	mov	r0, r2
   11888:	bl	11024 <fputs_unlocked@plt>
   1188c:	movw	r0, #64868	; 0xfd64
   11890:	movt	r0, #1
   11894:	bl	111d4 <gettext@plt>
   11898:	movw	r3, #4560	; 0x11d0
   1189c:	movt	r3, #3
   118a0:	ldr	r1, [r3]
   118a4:	movw	r3, #4560	; 0x11d0
   118a8:	movt	r3, #3
   118ac:	ldr	r2, [r3]
   118b0:	movw	r3, #4560	; 0x11d0
   118b4:	movt	r3, #3
   118b8:	ldr	r3, [r3]
   118bc:	bl	11060 <printf@plt>
   118c0:	movw	r0, #65072	; 0xfe30
   118c4:	movt	r0, #1
   118c8:	bl	11460 <__assert_fail@plt+0x100>
   118cc:	ldr	r0, [fp, #-16]
   118d0:	bl	111c8 <exit@plt>
   118d4:	strd	r4, [sp, #-16]!
   118d8:	str	fp, [sp, #8]
   118dc:	str	lr, [sp, #12]
   118e0:	add	fp, sp, #12
   118e4:	sub	sp, sp, #200	; 0xc8
   118e8:	str	r0, [fp, #-192]	; 0xffffff40
   118ec:	str	r1, [fp, #-196]	; 0xffffff3c
   118f0:	mov	r3, #0
   118f4:	strb	r3, [fp, #-13]
   118f8:	mvn	r3, #0
   118fc:	str	r3, [fp, #-44]	; 0xffffffd4
   11900:	mvn	r3, #0
   11904:	str	r3, [fp, #-48]	; 0xffffffd0
   11908:	mvn	r3, #0
   1190c:	str	r3, [fp, #-52]	; 0xffffffcc
   11910:	mvn	r3, #0
   11914:	str	r3, [fp, #-56]	; 0xffffffc8
   11918:	mov	r3, #16
   1191c:	str	r3, [fp, #-20]	; 0xffffffec
   11920:	mvn	r3, #0
   11924:	str	r3, [fp, #-24]	; 0xffffffe8
   11928:	ldr	r3, [fp, #-196]	; 0xffffff3c
   1192c:	ldr	r3, [r3]
   11930:	mov	r0, r3
   11934:	bl	18af4 <__assert_fail@plt+0x7794>
   11938:	movw	r1, #62048	; 0xf260
   1193c:	movt	r1, #1
   11940:	mov	r0, #6
   11944:	bl	1127c <setlocale@plt>
   11948:	movw	r1, #65080	; 0xfe38
   1194c:	movt	r1, #1
   11950:	movw	r0, #62072	; 0xf278
   11954:	movt	r0, #1
   11958:	bl	112f4 <bindtextdomain@plt>
   1195c:	movw	r0, #62072	; 0xf278
   11960:	movt	r0, #1
   11964:	bl	110e4 <textdomain@plt>
   11968:	movw	r0, #13500	; 0x34bc
   1196c:	movt	r0, #1
   11970:	bl	1f0ec <__assert_fail@plt+0xdd8c>
   11974:	sub	r3, fp, #80	; 0x50
   11978:	mov	r0, r3
   1197c:	bl	11fd8 <__assert_fail@plt+0xc78>
   11980:	b	11bec <__assert_fail@plt+0x88c>
   11984:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11988:	cmp	r3, #102	; 0x66
   1198c:	beq	11b6c <__assert_fail@plt+0x80c>
   11990:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11994:	cmp	r3, #102	; 0x66
   11998:	bgt	11a04 <__assert_fail@plt+0x6a4>
   1199c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   119a0:	cmp	r3, #76	; 0x4c
   119a4:	beq	11a88 <__assert_fail@plt+0x728>
   119a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   119ac:	cmp	r3, #76	; 0x4c
   119b0:	bgt	119dc <__assert_fail@plt+0x67c>
   119b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   119b8:	cmn	r3, #2
   119bc:	beq	11b84 <__assert_fail@plt+0x824>
   119c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   119c4:	cmp	r3, #72	; 0x48
   119c8:	beq	11a7c <__assert_fail@plt+0x71c>
   119cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   119d0:	cmn	r3, #3
   119d4:	beq	11b8c <__assert_fail@plt+0x82c>
   119d8:	b	11be4 <__assert_fail@plt+0x884>
   119dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   119e0:	cmp	r3, #82	; 0x52
   119e4:	beq	11b54 <__assert_fail@plt+0x7f4>
   119e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   119ec:	cmp	r3, #99	; 0x63
   119f0:	beq	11b60 <__assert_fail@plt+0x800>
   119f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   119f8:	cmp	r3, #80	; 0x50
   119fc:	beq	11a94 <__assert_fail@plt+0x734>
   11a00:	b	11be4 <__assert_fail@plt+0x884>
   11a04:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11a08:	movw	r2, #257	; 0x101
   11a0c:	cmp	r3, r2
   11a10:	beq	11aec <__assert_fail@plt+0x78c>
   11a14:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11a18:	movw	r2, #257	; 0x101
   11a1c:	cmp	r3, r2
   11a20:	bgt	11a4c <__assert_fail@plt+0x6ec>
   11a24:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11a28:	cmp	r3, #118	; 0x76
   11a2c:	beq	11b78 <__assert_fail@plt+0x818>
   11a30:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11a34:	cmp	r3, #256	; 0x100
   11a38:	beq	11aac <__assert_fail@plt+0x74c>
   11a3c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11a40:	cmp	r3, #104	; 0x68
   11a44:	beq	11aa0 <__assert_fail@plt+0x740>
   11a48:	b	11be4 <__assert_fail@plt+0x884>
   11a4c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11a50:	movw	r2, #259	; 0x103
   11a54:	cmp	r3, r2
   11a58:	beq	11ac4 <__assert_fail@plt+0x764>
   11a5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11a60:	movw	r2, #259	; 0x103
   11a64:	cmp	r3, r2
   11a68:	blt	11ab8 <__assert_fail@plt+0x758>
   11a6c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11a70:	cmp	r3, #260	; 0x104
   11a74:	beq	11ad0 <__assert_fail@plt+0x770>
   11a78:	b	11be4 <__assert_fail@plt+0x884>
   11a7c:	mov	r3, #17
   11a80:	str	r3, [fp, #-20]	; 0xffffffec
   11a84:	b	11bec <__assert_fail@plt+0x88c>
   11a88:	mov	r3, #2
   11a8c:	str	r3, [fp, #-20]	; 0xffffffec
   11a90:	b	11bec <__assert_fail@plt+0x88c>
   11a94:	mov	r3, #16
   11a98:	str	r3, [fp, #-20]	; 0xffffffec
   11a9c:	b	11bec <__assert_fail@plt+0x88c>
   11aa0:	mov	r3, #0
   11aa4:	str	r3, [fp, #-24]	; 0xffffffe8
   11aa8:	b	11bec <__assert_fail@plt+0x88c>
   11aac:	mov	r3, #1
   11ab0:	str	r3, [fp, #-24]	; 0xffffffe8
   11ab4:	b	11bec <__assert_fail@plt+0x88c>
   11ab8:	mov	r3, #0
   11abc:	strb	r3, [fp, #-13]
   11ac0:	b	11bec <__assert_fail@plt+0x88c>
   11ac4:	mov	r3, #1
   11ac8:	strb	r3, [fp, #-13]
   11acc:	b	11bec <__assert_fail@plt+0x88c>
   11ad0:	movw	r3, #4520	; 0x11a8
   11ad4:	movt	r3, #3
   11ad8:	ldr	r2, [r3]
   11adc:	movw	r3, #4528	; 0x11b0
   11ae0:	movt	r3, #3
   11ae4:	str	r2, [r3]
   11ae8:	b	11bec <__assert_fail@plt+0x88c>
   11aec:	movw	r3, #4520	; 0x11a8
   11af0:	movt	r3, #3
   11af4:	ldr	r0, [r3]
   11af8:	sub	r2, fp, #56	; 0x38
   11afc:	sub	r1, fp, #52	; 0x34
   11b00:	mov	r3, #0
   11b04:	str	r3, [sp]
   11b08:	mov	r3, #0
   11b0c:	bl	1b9b0 <__assert_fail@plt+0xa650>
   11b10:	str	r0, [fp, #-32]	; 0xffffffe0
   11b14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11b18:	cmp	r3, #0
   11b1c:	beq	11bec <__assert_fail@plt+0x88c>
   11b20:	movw	r3, #4520	; 0x11a8
   11b24:	movt	r3, #3
   11b28:	ldr	r3, [r3]
   11b2c:	mov	r0, r3
   11b30:	bl	1b454 <__assert_fail@plt+0xa0f4>
   11b34:	mov	r3, r0
   11b38:	str	r3, [sp]
   11b3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11b40:	movw	r2, #65104	; 0xfe50
   11b44:	movt	r2, #1
   11b48:	mov	r1, #0
   11b4c:	mov	r0, #1
   11b50:	bl	11168 <error@plt>
   11b54:	mov	r3, #1
   11b58:	strb	r3, [fp, #-76]	; 0xffffffb4
   11b5c:	b	11bec <__assert_fail@plt+0x88c>
   11b60:	mov	r3, #1
   11b64:	str	r3, [fp, #-80]	; 0xffffffb0
   11b68:	b	11bec <__assert_fail@plt+0x88c>
   11b6c:	mov	r3, #1
   11b70:	strb	r3, [fp, #-67]	; 0xffffffbd
   11b74:	b	11bec <__assert_fail@plt+0x88c>
   11b78:	mov	r3, #0
   11b7c:	str	r3, [fp, #-80]	; 0xffffffb0
   11b80:	b	11bec <__assert_fail@plt+0x88c>
   11b84:	mov	r0, #0
   11b88:	bl	11624 <__assert_fail@plt+0x2c4>
   11b8c:	movw	r3, #4516	; 0x11a4
   11b90:	movt	r3, #3
   11b94:	ldr	r0, [r3]
   11b98:	movw	r3, #4412	; 0x113c
   11b9c:	movt	r3, #3
   11ba0:	ldr	r2, [r3]
   11ba4:	mov	r3, #0
   11ba8:	str	r3, [sp, #8]
   11bac:	movw	r3, #65112	; 0xfe58
   11bb0:	movt	r3, #1
   11bb4:	str	r3, [sp, #4]
   11bb8:	movw	r3, #65128	; 0xfe68
   11bbc:	movt	r3, #1
   11bc0:	str	r3, [sp]
   11bc4:	mov	r3, r2
   11bc8:	movw	r2, #61864	; 0xf1a8
   11bcc:	movt	r2, #1
   11bd0:	movw	r1, #65072	; 0xfe30
   11bd4:	movt	r1, #1
   11bd8:	bl	1c180 <__assert_fail@plt+0xae20>
   11bdc:	mov	r0, #0
   11be0:	bl	111c8 <exit@plt>
   11be4:	mov	r0, #1
   11be8:	bl	11624 <__assert_fail@plt+0x2c4>
   11bec:	mov	r3, #0
   11bf0:	str	r3, [sp]
   11bf4:	movw	r3, #62372	; 0xf3a4
   11bf8:	movt	r3, #1
   11bfc:	movw	r2, #65144	; 0xfe78
   11c00:	movt	r2, #1
   11c04:	ldr	r1, [fp, #-196]	; 0xffffff3c
   11c08:	ldr	r0, [fp, #-192]	; 0xffffff40
   11c0c:	bl	111b0 <getopt_long@plt>
   11c10:	str	r0, [fp, #-28]	; 0xffffffe4
   11c14:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11c18:	cmn	r3, #1
   11c1c:	bne	11984 <__assert_fail@plt+0x624>
   11c20:	ldrb	r3, [fp, #-76]	; 0xffffffb4
   11c24:	cmp	r3, #0
   11c28:	beq	11c70 <__assert_fail@plt+0x910>
   11c2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11c30:	cmp	r3, #16
   11c34:	bne	11c78 <__assert_fail@plt+0x918>
   11c38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11c3c:	cmp	r3, #1
   11c40:	bne	11c64 <__assert_fail@plt+0x904>
   11c44:	movw	r0, #65156	; 0xfe84
   11c48:	movt	r0, #1
   11c4c:	bl	111d4 <gettext@plt>
   11c50:	mov	r3, r0
   11c54:	mov	r2, r3
   11c58:	mov	r1, #0
   11c5c:	mov	r0, #1
   11c60:	bl	11168 <error@plt>
   11c64:	mov	r3, #0
   11c68:	str	r3, [fp, #-24]	; 0xffffffe8
   11c6c:	b	11c78 <__assert_fail@plt+0x918>
   11c70:	mov	r3, #16
   11c74:	str	r3, [fp, #-20]	; 0xffffffec
   11c78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11c7c:	cmp	r3, #0
   11c80:	movne	r3, #1
   11c84:	moveq	r3, #0
   11c88:	uxtb	r3, r3
   11c8c:	strb	r3, [fp, #-68]	; 0xffffffbc
   11c90:	movw	r3, #4504	; 0x1198
   11c94:	movt	r3, #3
   11c98:	ldr	r3, [r3]
   11c9c:	ldr	r2, [fp, #-192]	; 0xffffff40
   11ca0:	sub	r2, r2, r3
   11ca4:	movw	r3, #4528	; 0x11b0
   11ca8:	movt	r3, #3
   11cac:	ldr	r3, [r3]
   11cb0:	cmp	r3, #0
   11cb4:	beq	11cc0 <__assert_fail@plt+0x960>
   11cb8:	mov	r3, #1
   11cbc:	b	11cc4 <__assert_fail@plt+0x964>
   11cc0:	mov	r3, #2
   11cc4:	cmp	r3, r2
   11cc8:	ble	11d54 <__assert_fail@plt+0x9f4>
   11ccc:	movw	r3, #4504	; 0x1198
   11cd0:	movt	r3, #3
   11cd4:	ldr	r3, [r3]
   11cd8:	ldr	r2, [fp, #-192]	; 0xffffff40
   11cdc:	cmp	r2, r3
   11ce0:	bgt	11d08 <__assert_fail@plt+0x9a8>
   11ce4:	movw	r0, #65200	; 0xfeb0
   11ce8:	movt	r0, #1
   11cec:	bl	111d4 <gettext@plt>
   11cf0:	mov	r3, r0
   11cf4:	mov	r2, r3
   11cf8:	mov	r1, #0
   11cfc:	mov	r0, #0
   11d00:	bl	11168 <error@plt>
   11d04:	b	11d4c <__assert_fail@plt+0x9ec>
   11d08:	movw	r0, #65216	; 0xfec0
   11d0c:	movt	r0, #1
   11d10:	bl	111d4 <gettext@plt>
   11d14:	mov	r4, r0
   11d18:	ldr	r3, [fp, #-192]	; 0xffffff40
   11d1c:	sub	r3, r3, #-1073741823	; 0xc0000001
   11d20:	lsl	r3, r3, #2
   11d24:	ldr	r2, [fp, #-196]	; 0xffffff3c
   11d28:	add	r3, r2, r3
   11d2c:	ldr	r3, [r3]
   11d30:	mov	r0, r3
   11d34:	bl	1b454 <__assert_fail@plt+0xa0f4>
   11d38:	mov	r3, r0
   11d3c:	mov	r2, r4
   11d40:	mov	r1, #0
   11d44:	mov	r0, #0
   11d48:	bl	11168 <error@plt>
   11d4c:	mov	r0, #1
   11d50:	bl	11624 <__assert_fail@plt+0x2c4>
   11d54:	movw	r3, #4528	; 0x11b0
   11d58:	movt	r3, #3
   11d5c:	ldr	r3, [r3]
   11d60:	cmp	r3, #0
   11d64:	beq	11e14 <__assert_fail@plt+0xab4>
   11d68:	movw	r3, #4528	; 0x11b0
   11d6c:	movt	r3, #3
   11d70:	ldr	r3, [r3]
   11d74:	sub	r2, fp, #188	; 0xbc
   11d78:	mov	r1, r2
   11d7c:	mov	r0, r3
   11d80:	bl	1f104 <__assert_fail@plt+0xdda4>
   11d84:	mov	r3, r0
   11d88:	cmp	r3, #0
   11d8c:	beq	11dd8 <__assert_fail@plt+0xa78>
   11d90:	bl	11228 <__errno_location@plt>
   11d94:	mov	r3, r0
   11d98:	ldr	r4, [r3]
   11d9c:	movw	r0, #65244	; 0xfedc
   11da0:	movt	r0, #1
   11da4:	bl	111d4 <gettext@plt>
   11da8:	mov	r5, r0
   11dac:	movw	r3, #4528	; 0x11b0
   11db0:	movt	r3, #3
   11db4:	ldr	r3, [r3]
   11db8:	mov	r1, r3
   11dbc:	mov	r0, #4
   11dc0:	bl	1af74 <__assert_fail@plt+0x9c14>
   11dc4:	mov	r3, r0
   11dc8:	mov	r2, r5
   11dcc:	mov	r1, r4
   11dd0:	mov	r0, #1
   11dd4:	bl	11168 <error@plt>
   11dd8:	ldr	r3, [fp, #-164]	; 0xffffff5c
   11ddc:	str	r3, [fp, #-44]	; 0xffffffd4
   11de0:	ldr	r3, [fp, #-160]	; 0xffffff60
   11de4:	str	r3, [fp, #-48]	; 0xffffffd0
   11de8:	ldr	r3, [fp, #-164]	; 0xffffff5c
   11dec:	mov	r0, r3
   11df0:	bl	12108 <__assert_fail@plt+0xda8>
   11df4:	mov	r3, r0
   11df8:	str	r3, [fp, #-64]	; 0xffffffc0
   11dfc:	ldr	r3, [fp, #-160]	; 0xffffff60
   11e00:	mov	r0, r3
   11e04:	bl	12094 <__assert_fail@plt+0xd34>
   11e08:	mov	r3, r0
   11e0c:	str	r3, [fp, #-60]	; 0xffffffc4
   11e10:	b	11ef0 <__assert_fail@plt+0xb90>
   11e14:	movw	r3, #4504	; 0x1198
   11e18:	movt	r3, #3
   11e1c:	ldr	r3, [r3]
   11e20:	lsl	r3, r3, #2
   11e24:	ldr	r2, [fp, #-196]	; 0xffffff3c
   11e28:	add	r3, r2, r3
   11e2c:	ldr	r0, [r3]
   11e30:	sub	r3, fp, #80	; 0x50
   11e34:	add	ip, r3, #16
   11e38:	sub	r2, fp, #48	; 0x30
   11e3c:	sub	r1, fp, #44	; 0x2c
   11e40:	sub	r3, fp, #80	; 0x50
   11e44:	add	r3, r3, #20
   11e48:	str	r3, [sp]
   11e4c:	mov	r3, ip
   11e50:	bl	1b9b0 <__assert_fail@plt+0xa650>
   11e54:	str	r0, [fp, #-36]	; 0xffffffdc
   11e58:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11e5c:	cmp	r3, #0
   11e60:	beq	11ea8 <__assert_fail@plt+0xb48>
   11e64:	movw	r3, #4504	; 0x1198
   11e68:	movt	r3, #3
   11e6c:	ldr	r3, [r3]
   11e70:	lsl	r3, r3, #2
   11e74:	ldr	r2, [fp, #-196]	; 0xffffff3c
   11e78:	add	r3, r2, r3
   11e7c:	ldr	r3, [r3]
   11e80:	mov	r0, r3
   11e84:	bl	1b454 <__assert_fail@plt+0xa0f4>
   11e88:	mov	r3, r0
   11e8c:	str	r3, [sp]
   11e90:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11e94:	movw	r2, #65104	; 0xfe50
   11e98:	movt	r2, #1
   11e9c:	mov	r1, #0
   11ea0:	mov	r0, #1
   11ea4:	bl	11168 <error@plt>
   11ea8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   11eac:	cmp	r3, #0
   11eb0:	bne	11ed4 <__assert_fail@plt+0xb74>
   11eb4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11eb8:	cmp	r3, #0
   11ebc:	beq	11ed4 <__assert_fail@plt+0xb74>
   11ec0:	movw	r0, #62048	; 0xf260
   11ec4:	movt	r0, #1
   11ec8:	bl	1cb2c <__assert_fail@plt+0xb7cc>
   11ecc:	mov	r3, r0
   11ed0:	str	r3, [fp, #-64]	; 0xffffffc0
   11ed4:	movw	r3, #4504	; 0x1198
   11ed8:	movt	r3, #3
   11edc:	ldr	r3, [r3]
   11ee0:	add	r2, r3, #1
   11ee4:	movw	r3, #4504	; 0x1198
   11ee8:	movt	r3, #3
   11eec:	str	r2, [r3]
   11ef0:	ldrb	r3, [fp, #-76]	; 0xffffffb4
   11ef4:	cmp	r3, #0
   11ef8:	beq	11f68 <__assert_fail@plt+0xc08>
   11efc:	ldrb	r3, [fp, #-13]
   11f00:	cmp	r3, #0
   11f04:	beq	11f68 <__assert_fail@plt+0xc08>
   11f08:	movw	r0, #4536	; 0x11b8
   11f0c:	movt	r0, #3
   11f10:	bl	1b48c <__assert_fail@plt+0xa12c>
   11f14:	mov	r3, r0
   11f18:	str	r3, [fp, #-72]	; 0xffffffb8
   11f1c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   11f20:	cmp	r3, #0
   11f24:	bne	11f68 <__assert_fail@plt+0xc08>
   11f28:	bl	11228 <__errno_location@plt>
   11f2c:	mov	r3, r0
   11f30:	ldr	r4, [r3]
   11f34:	movw	r0, #65244	; 0xfedc
   11f38:	movt	r0, #1
   11f3c:	bl	111d4 <gettext@plt>
   11f40:	mov	r5, r0
   11f44:	movw	r1, #65276	; 0xfefc
   11f48:	movt	r1, #1
   11f4c:	mov	r0, #4
   11f50:	bl	1af74 <__assert_fail@plt+0x9c14>
   11f54:	mov	r3, r0
   11f58:	mov	r2, r5
   11f5c:	mov	r1, r4
   11f60:	mov	r0, #1
   11f64:	bl	11168 <error@plt>
   11f68:	ldr	r3, [fp, #-20]	; 0xffffffec
   11f6c:	orr	r3, r3, #1024	; 0x400
   11f70:	str	r3, [fp, #-20]	; 0xffffffec
   11f74:	movw	r3, #4504	; 0x1198
   11f78:	movt	r3, #3
   11f7c:	ldr	r3, [r3]
   11f80:	lsl	r3, r3, #2
   11f84:	ldr	r2, [fp, #-196]	; 0xffffff3c
   11f88:	add	r0, r2, r3
   11f8c:	ldr	ip, [fp, #-44]	; 0xffffffd4
   11f90:	ldr	lr, [fp, #-48]	; 0xffffffd0
   11f94:	ldr	r3, [fp, #-52]	; 0xffffffcc
   11f98:	ldr	r2, [fp, #-56]	; 0xffffffc8
   11f9c:	sub	r1, fp, #80	; 0x50
   11fa0:	str	r1, [sp, #8]
   11fa4:	str	r2, [sp, #4]
   11fa8:	str	r3, [sp]
   11fac:	mov	r3, lr
   11fb0:	mov	r2, ip
   11fb4:	ldr	r1, [fp, #-20]	; 0xffffffec
   11fb8:	bl	131e4 <__assert_fail@plt+0x1e84>
   11fbc:	mov	r3, r0
   11fc0:	strb	r3, [fp, #-37]	; 0xffffffdb
   11fc4:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   11fc8:	eor	r3, r3, #1
   11fcc:	uxtb	r3, r3
   11fd0:	mov	r0, r3
   11fd4:	bl	111c8 <exit@plt>
   11fd8:	push	{fp}		; (str fp, [sp, #-4]!)
   11fdc:	add	fp, sp, #0
   11fe0:	sub	sp, sp, #12
   11fe4:	str	r0, [fp, #-8]
   11fe8:	ldr	r3, [fp, #-8]
   11fec:	mov	r2, #2
   11ff0:	str	r2, [r3]
   11ff4:	ldr	r3, [fp, #-8]
   11ff8:	mov	r2, #0
   11ffc:	str	r2, [r3, #8]
   12000:	ldr	r3, [fp, #-8]
   12004:	mov	r2, #1
   12008:	strb	r2, [r3, #12]
   1200c:	ldr	r3, [fp, #-8]
   12010:	mov	r2, #0
   12014:	strb	r2, [r3, #4]
   12018:	ldr	r3, [fp, #-8]
   1201c:	mov	r2, #0
   12020:	strb	r2, [r3, #13]
   12024:	ldr	r3, [fp, #-8]
   12028:	mov	r2, #0
   1202c:	str	r2, [r3, #16]
   12030:	ldr	r3, [fp, #-8]
   12034:	mov	r2, #0
   12038:	str	r2, [r3, #20]
   1203c:	nop	{0}
   12040:	add	sp, fp, #0
   12044:	pop	{fp}		; (ldr fp, [sp], #4)
   12048:	bx	lr
   1204c:	str	fp, [sp, #-8]!
   12050:	str	lr, [sp, #4]
   12054:	add	fp, sp, #4
   12058:	sub	sp, sp, #8
   1205c:	str	r0, [fp, #-8]
   12060:	ldr	r3, [fp, #-8]
   12064:	ldr	r3, [r3, #16]
   12068:	mov	r0, r3
   1206c:	bl	1360c <__assert_fail@plt+0x22ac>
   12070:	ldr	r3, [fp, #-8]
   12074:	ldr	r3, [r3, #20]
   12078:	mov	r0, r3
   1207c:	bl	1360c <__assert_fail@plt+0x22ac>
   12080:	nop	{0}
   12084:	sub	sp, fp, #4
   12088:	ldr	fp, [sp]
   1208c:	add	sp, sp, #4
   12090:	pop	{pc}		; (ldr pc, [sp], #4)
   12094:	str	fp, [sp, #-8]!
   12098:	str	lr, [sp, #4]
   1209c:	add	fp, sp, #4
   120a0:	sub	sp, sp, #40	; 0x28
   120a4:	str	r0, [fp, #-40]	; 0xffffffd8
   120a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   120ac:	bl	11348 <getgrgid@plt>
   120b0:	str	r0, [fp, #-8]
   120b4:	ldr	r3, [fp, #-8]
   120b8:	cmp	r3, #0
   120bc:	beq	120cc <__assert_fail@plt+0xd6c>
   120c0:	ldr	r3, [fp, #-8]
   120c4:	ldr	r3, [r3]
   120c8:	b	120e8 <__assert_fail@plt+0xd88>
   120cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   120d0:	mov	r0, r3
   120d4:	mov	r1, #0
   120d8:	sub	r3, fp, #32
   120dc:	mov	r2, r3
   120e0:	bl	18904 <__assert_fail@plt+0x75a4>
   120e4:	mov	r3, r0
   120e8:	mov	r0, r3
   120ec:	bl	1cb2c <__assert_fail@plt+0xb7cc>
   120f0:	mov	r3, r0
   120f4:	mov	r0, r3
   120f8:	sub	sp, fp, #4
   120fc:	ldr	fp, [sp]
   12100:	add	sp, sp, #4
   12104:	pop	{pc}		; (ldr pc, [sp], #4)
   12108:	str	fp, [sp, #-8]!
   1210c:	str	lr, [sp, #4]
   12110:	add	fp, sp, #4
   12114:	sub	sp, sp, #40	; 0x28
   12118:	str	r0, [fp, #-40]	; 0xffffffd8
   1211c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12120:	bl	11054 <getpwuid@plt>
   12124:	str	r0, [fp, #-8]
   12128:	ldr	r3, [fp, #-8]
   1212c:	cmp	r3, #0
   12130:	beq	12140 <__assert_fail@plt+0xde0>
   12134:	ldr	r3, [fp, #-8]
   12138:	ldr	r3, [r3]
   1213c:	b	1215c <__assert_fail@plt+0xdfc>
   12140:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12144:	mov	r0, r3
   12148:	mov	r1, #0
   1214c:	sub	r3, fp, #32
   12150:	mov	r2, r3
   12154:	bl	18904 <__assert_fail@plt+0x75a4>
   12158:	mov	r3, r0
   1215c:	mov	r0, r3
   12160:	bl	1cb2c <__assert_fail@plt+0xb7cc>
   12164:	mov	r3, r0
   12168:	mov	r0, r3
   1216c:	sub	sp, fp, #4
   12170:	ldr	fp, [sp]
   12174:	add	sp, sp, #4
   12178:	pop	{pc}		; (ldr pc, [sp], #4)
   1217c:	str	r4, [sp, #-12]!
   12180:	str	fp, [sp, #4]
   12184:	str	lr, [sp, #8]
   12188:	add	fp, sp, #8
   1218c:	sub	sp, sp, #20
   12190:	str	r0, [fp, #-24]	; 0xffffffe8
   12194:	str	r1, [fp, #-28]	; 0xffffffe4
   12198:	mov	r3, #0
   1219c:	str	r3, [fp, #-16]
   121a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   121a4:	cmp	r3, #0
   121a8:	beq	12234 <__assert_fail@plt+0xed4>
   121ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   121b0:	cmp	r3, #0
   121b4:	beq	12220 <__assert_fail@plt+0xec0>
   121b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   121bc:	bl	111ec <strlen@plt>
   121c0:	mov	r4, r0
   121c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   121c8:	bl	111ec <strlen@plt>
   121cc:	mov	r3, r0
   121d0:	add	r3, r4, r3
   121d4:	add	r3, r3, #2
   121d8:	mov	r0, r3
   121dc:	bl	1c300 <__assert_fail@plt+0xafa0>
   121e0:	mov	r3, r0
   121e4:	str	r3, [fp, #-16]
   121e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   121ec:	ldr	r0, [fp, #-16]
   121f0:	bl	110c0 <stpcpy@plt>
   121f4:	mov	r2, r0
   121f8:	movw	r3, #65280	; 0xff00
   121fc:	movt	r3, #1
   12200:	mov	r1, r2
   12204:	ldrh	r3, [r3]
   12208:	strh	r3, [r1]
   1220c:	add	r3, r2, #1
   12210:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12214:	mov	r0, r3
   12218:	bl	11138 <strcpy@plt>
   1221c:	b	12250 <__assert_fail@plt+0xef0>
   12220:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12224:	bl	1cb2c <__assert_fail@plt+0xb7cc>
   12228:	mov	r3, r0
   1222c:	str	r3, [fp, #-16]
   12230:	b	12250 <__assert_fail@plt+0xef0>
   12234:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12238:	cmp	r3, #0
   1223c:	beq	12250 <__assert_fail@plt+0xef0>
   12240:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12244:	bl	1cb2c <__assert_fail@plt+0xb7cc>
   12248:	mov	r3, r0
   1224c:	str	r3, [fp, #-16]
   12250:	ldr	r3, [fp, #-16]
   12254:	mov	r0, r3
   12258:	sub	sp, fp, #8
   1225c:	ldr	r4, [sp]
   12260:	ldr	fp, [sp, #4]
   12264:	add	sp, sp, #8
   12268:	pop	{pc}		; (ldr pc, [sp], #4)
   1226c:	str	r4, [sp, #-12]!
   12270:	str	fp, [sp, #4]
   12274:	str	lr, [sp, #8]
   12278:	add	fp, sp, #8
   1227c:	sub	sp, sp, #36	; 0x24
   12280:	str	r0, [fp, #-32]	; 0xffffffe0
   12284:	str	r1, [fp, #-36]	; 0xffffffdc
   12288:	str	r2, [fp, #-40]	; 0xffffffd8
   1228c:	str	r3, [fp, #-44]	; 0xffffffd4
   12290:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12294:	cmp	r3, #1
   12298:	bne	122cc <__assert_fail@plt+0xf6c>
   1229c:	movw	r0, #65284	; 0xff04
   122a0:	movt	r0, #1
   122a4:	bl	111d4 <gettext@plt>
   122a8:	mov	r4, r0
   122ac:	ldr	r1, [fp, #-32]	; 0xffffffe0
   122b0:	mov	r0, #4
   122b4:	bl	1af74 <__assert_fail@plt+0x9c14>
   122b8:	mov	r3, r0
   122bc:	mov	r1, r3
   122c0:	mov	r0, r4
   122c4:	bl	11060 <printf@plt>
   122c8:	b	124f8 <__assert_fail@plt+0x1198>
   122cc:	ldr	r1, [fp, #8]
   122d0:	ldr	r0, [fp, #4]
   122d4:	bl	1217c <__assert_fail@plt+0xe1c>
   122d8:	str	r0, [fp, #-24]	; 0xffffffe8
   122dc:	ldr	r3, [fp, #4]
   122e0:	cmp	r3, #0
   122e4:	beq	122f0 <__assert_fail@plt+0xf90>
   122e8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   122ec:	b	122f4 <__assert_fail@plt+0xf94>
   122f0:	mov	r2, #0
   122f4:	ldr	r3, [fp, #8]
   122f8:	cmp	r3, #0
   122fc:	beq	12308 <__assert_fail@plt+0xfa8>
   12300:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12304:	b	1230c <__assert_fail@plt+0xfac>
   12308:	mov	r3, #0
   1230c:	mov	r1, r3
   12310:	mov	r0, r2
   12314:	bl	1217c <__assert_fail@plt+0xe1c>
   12318:	str	r0, [fp, #-20]	; 0xffffffec
   1231c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12320:	cmp	r3, #3
   12324:	beq	12398 <__assert_fail@plt+0x1038>
   12328:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1232c:	cmp	r3, #4
   12330:	beq	1246c <__assert_fail@plt+0x110c>
   12334:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12338:	cmp	r3, #2
   1233c:	bne	124c4 <__assert_fail@plt+0x1164>
   12340:	ldr	r3, [fp, #4]
   12344:	cmp	r3, #0
   12348:	beq	12360 <__assert_fail@plt+0x1000>
   1234c:	movw	r0, #65340	; 0xff3c
   12350:	movt	r0, #1
   12354:	bl	111d4 <gettext@plt>
   12358:	mov	r3, r0
   1235c:	b	12390 <__assert_fail@plt+0x1030>
   12360:	ldr	r3, [fp, #8]
   12364:	cmp	r3, #0
   12368:	beq	12380 <__assert_fail@plt+0x1020>
   1236c:	movw	r0, #65380	; 0xff64
   12370:	movt	r0, #1
   12374:	bl	111d4 <gettext@plt>
   12378:	mov	r3, r0
   1237c:	b	12390 <__assert_fail@plt+0x1030>
   12380:	movw	r0, #65416	; 0xff88
   12384:	movt	r0, #1
   12388:	bl	111d4 <gettext@plt>
   1238c:	mov	r3, r0
   12390:	str	r3, [fp, #-16]
   12394:	b	124c8 <__assert_fail@plt+0x1168>
   12398:	ldr	r3, [fp, #-20]	; 0xffffffec
   1239c:	cmp	r3, #0
   123a0:	beq	123fc <__assert_fail@plt+0x109c>
   123a4:	ldr	r3, [fp, #4]
   123a8:	cmp	r3, #0
   123ac:	beq	123c4 <__assert_fail@plt+0x1064>
   123b0:	movw	r0, #65448	; 0xffa8
   123b4:	movt	r0, #1
   123b8:	bl	111d4 <gettext@plt>
   123bc:	mov	r3, r0
   123c0:	b	123f4 <__assert_fail@plt+0x1094>
   123c4:	ldr	r3, [fp, #8]
   123c8:	cmp	r3, #0
   123cc:	beq	123e4 <__assert_fail@plt+0x1084>
   123d0:	movw	r0, #65496	; 0xffd8
   123d4:	movt	r0, #1
   123d8:	bl	111d4 <gettext@plt>
   123dc:	mov	r3, r0
   123e0:	b	123f4 <__assert_fail@plt+0x1094>
   123e4:	movw	r0, #4
   123e8:	movt	r0, #2
   123ec:	bl	111d4 <gettext@plt>
   123f0:	mov	r3, r0
   123f4:	str	r3, [fp, #-16]
   123f8:	b	124c8 <__assert_fail@plt+0x1168>
   123fc:	ldr	r3, [fp, #4]
   12400:	cmp	r3, #0
   12404:	beq	1241c <__assert_fail@plt+0x10bc>
   12408:	movw	r0, #40	; 0x28
   1240c:	movt	r0, #2
   12410:	bl	111d4 <gettext@plt>
   12414:	mov	r3, r0
   12418:	b	1244c <__assert_fail@plt+0x10ec>
   1241c:	ldr	r3, [fp, #8]
   12420:	cmp	r3, #0
   12424:	beq	1243c <__assert_fail@plt+0x10dc>
   12428:	movw	r0, #80	; 0x50
   1242c:	movt	r0, #2
   12430:	bl	111d4 <gettext@plt>
   12434:	mov	r3, r0
   12438:	b	1244c <__assert_fail@plt+0x10ec>
   1243c:	movw	r0, #4
   12440:	movt	r0, #2
   12444:	bl	111d4 <gettext@plt>
   12448:	mov	r3, r0
   1244c:	str	r3, [fp, #-16]
   12450:	ldr	r0, [fp, #-20]	; 0xffffffec
   12454:	bl	1360c <__assert_fail@plt+0x22ac>
   12458:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1245c:	str	r3, [fp, #-20]	; 0xffffffec
   12460:	mov	r3, #0
   12464:	str	r3, [fp, #-24]	; 0xffffffe8
   12468:	b	124c8 <__assert_fail@plt+0x1168>
   1246c:	ldr	r3, [fp, #4]
   12470:	cmp	r3, #0
   12474:	beq	1248c <__assert_fail@plt+0x112c>
   12478:	movw	r0, #116	; 0x74
   1247c:	movt	r0, #2
   12480:	bl	111d4 <gettext@plt>
   12484:	mov	r3, r0
   12488:	b	124bc <__assert_fail@plt+0x115c>
   1248c:	ldr	r3, [fp, #8]
   12490:	cmp	r3, #0
   12494:	beq	124ac <__assert_fail@plt+0x114c>
   12498:	movw	r0, #148	; 0x94
   1249c:	movt	r0, #2
   124a0:	bl	111d4 <gettext@plt>
   124a4:	mov	r3, r0
   124a8:	b	124bc <__assert_fail@plt+0x115c>
   124ac:	movw	r0, #176	; 0xb0
   124b0:	movt	r0, #2
   124b4:	bl	111d4 <gettext@plt>
   124b8:	mov	r3, r0
   124bc:	str	r3, [fp, #-16]
   124c0:	b	124c8 <__assert_fail@plt+0x1168>
   124c4:	bl	11318 <abort@plt>
   124c8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   124cc:	mov	r0, #4
   124d0:	bl	1af74 <__assert_fail@plt+0x9c14>
   124d4:	mov	r1, r0
   124d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   124dc:	ldr	r2, [fp, #-20]	; 0xffffffec
   124e0:	ldr	r0, [fp, #-16]
   124e4:	bl	11060 <printf@plt>
   124e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   124ec:	bl	1360c <__assert_fail@plt+0x22ac>
   124f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   124f4:	bl	1360c <__assert_fail@plt+0x22ac>
   124f8:	sub	sp, fp, #8
   124fc:	ldr	r4, [sp]
   12500:	ldr	fp, [sp, #4]
   12504:	add	sp, sp, #8
   12508:	pop	{pc}		; (ldr pc, [sp], #4)
   1250c:	str	fp, [sp, #-8]!
   12510:	str	lr, [sp, #4]
   12514:	add	fp, sp, #4
   12518:	sub	sp, sp, #136	; 0x88
   1251c:	str	r0, [fp, #-128]	; 0xffffff80
   12520:	str	r1, [fp, #-132]	; 0xffffff7c
   12524:	str	r2, [fp, #-136]	; 0xffffff78
   12528:	str	r3, [fp, #-140]	; 0xffffff74
   1252c:	mov	r3, #2
   12530:	str	r3, [fp, #-8]
   12534:	mov	r3, #2304	; 0x900
   12538:	str	r3, [fp, #-12]
   1253c:	ldr	r3, [fp, #8]
   12540:	cmn	r3, #1
   12544:	bne	1255c <__assert_fail@plt+0x11fc>
   12548:	ldr	r3, [fp, #12]
   1254c:	cmn	r3, #1
   12550:	bne	1255c <__assert_fail@plt+0x11fc>
   12554:	mov	r3, #5
   12558:	b	12748 <__assert_fail@plt+0x13e8>
   1255c:	ldr	r3, [fp, #-136]	; 0xffffff78
   12560:	ldr	r3, [r3, #16]
   12564:	and	r3, r3, #61440	; 0xf000
   12568:	cmp	r3, #32768	; 0x8000
   1256c:	beq	1259c <__assert_fail@plt+0x123c>
   12570:	ldr	r3, [fp, #-136]	; 0xffffff78
   12574:	ldr	r3, [r3, #16]
   12578:	and	r3, r3, #61440	; 0xf000
   1257c:	cmp	r3, #16384	; 0x4000
   12580:	bne	12594 <__assert_fail@plt+0x1234>
   12584:	ldr	r3, [fp, #-12]
   12588:	orr	r3, r3, #16384	; 0x4000
   1258c:	str	r3, [fp, #-12]
   12590:	b	1259c <__assert_fail@plt+0x123c>
   12594:	mov	r3, #5
   12598:	b	12748 <__assert_fail@plt+0x13e8>
   1259c:	ldr	r2, [fp, #-12]
   125a0:	ldr	r1, [fp, #-132]	; 0xffffff7c
   125a4:	ldr	r0, [fp, #-128]	; 0xffffff80
   125a8:	bl	11204 <openat64@plt>
   125ac:	str	r0, [fp, #-16]
   125b0:	ldr	r3, [fp, #-16]
   125b4:	cmp	r3, #0
   125b8:	bge	12630 <__assert_fail@plt+0x12d0>
   125bc:	bl	11228 <__errno_location@plt>
   125c0:	mov	r3, r0
   125c4:	ldr	r3, [r3]
   125c8:	cmp	r3, #13
   125cc:	bne	1260c <__assert_fail@plt+0x12ac>
   125d0:	ldr	r3, [fp, #-136]	; 0xffffff78
   125d4:	ldr	r3, [r3, #16]
   125d8:	and	r3, r3, #61440	; 0xf000
   125dc:	cmp	r3, #32768	; 0x8000
   125e0:	bne	1260c <__assert_fail@plt+0x12ac>
   125e4:	ldr	r3, [fp, #-12]
   125e8:	orr	r3, r3, #1
   125ec:	mov	r2, r3
   125f0:	ldr	r1, [fp, #-132]	; 0xffffff7c
   125f4:	ldr	r0, [fp, #-128]	; 0xffffff80
   125f8:	bl	11204 <openat64@plt>
   125fc:	str	r0, [fp, #-16]
   12600:	ldr	r3, [fp, #-16]
   12604:	cmp	r3, #0
   12608:	bge	12630 <__assert_fail@plt+0x12d0>
   1260c:	bl	11228 <__errno_location@plt>
   12610:	mov	r3, r0
   12614:	ldr	r3, [r3]
   12618:	cmp	r3, #13
   1261c:	bne	12628 <__assert_fail@plt+0x12c8>
   12620:	mov	r3, #5
   12624:	b	12748 <__assert_fail@plt+0x13e8>
   12628:	mov	r3, #6
   1262c:	b	12748 <__assert_fail@plt+0x13e8>
   12630:	sub	r3, fp, #124	; 0x7c
   12634:	mov	r1, r3
   12638:	ldr	r0, [fp, #-16]
   1263c:	bl	1f114 <__assert_fail@plt+0xddb4>
   12640:	mov	r3, r0
   12644:	cmp	r3, #0
   12648:	beq	12658 <__assert_fail@plt+0x12f8>
   1264c:	mov	r3, #6
   12650:	str	r3, [fp, #-8]
   12654:	b	1271c <__assert_fail@plt+0x13bc>
   12658:	ldr	r3, [fp, #-136]	; 0xffffff78
   1265c:	ldrd	r0, [r3, #96]	; 0x60
   12660:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   12664:	cmp	r1, r3
   12668:	cmpeq	r0, r2
   1266c:	bne	12688 <__assert_fail@plt+0x1328>
   12670:	ldr	r3, [fp, #-136]	; 0xffffff78
   12674:	ldrd	r0, [r3]
   12678:	ldrd	r2, [fp, #-124]	; 0xffffff84
   1267c:	cmp	r1, r3
   12680:	cmpeq	r0, r2
   12684:	beq	12694 <__assert_fail@plt+0x1334>
   12688:	mov	r3, #4
   1268c:	str	r3, [fp, #-8]
   12690:	b	1271c <__assert_fail@plt+0x13bc>
   12694:	ldr	r3, [fp, #8]
   12698:	cmn	r3, #1
   1269c:	beq	126b0 <__assert_fail@plt+0x1350>
   126a0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   126a4:	ldr	r2, [fp, #8]
   126a8:	cmp	r2, r3
   126ac:	bne	1271c <__assert_fail@plt+0x13bc>
   126b0:	ldr	r3, [fp, #12]
   126b4:	cmn	r3, #1
   126b8:	beq	126cc <__assert_fail@plt+0x136c>
   126bc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   126c0:	ldr	r2, [fp, #12]
   126c4:	cmp	r2, r3
   126c8:	bne	1271c <__assert_fail@plt+0x13bc>
   126cc:	ldr	r2, [fp, #4]
   126d0:	ldr	r1, [fp, #-140]	; 0xffffff74
   126d4:	ldr	r0, [fp, #-16]
   126d8:	bl	11210 <fchown@plt>
   126dc:	mov	r3, r0
   126e0:	cmp	r3, #0
   126e4:	bne	12714 <__assert_fail@plt+0x13b4>
   126e8:	ldr	r0, [fp, #-16]
   126ec:	bl	11324 <close@plt>
   126f0:	mov	r3, r0
   126f4:	cmp	r3, #0
   126f8:	bne	12704 <__assert_fail@plt+0x13a4>
   126fc:	mov	r3, #2
   12700:	b	12708 <__assert_fail@plt+0x13a8>
   12704:	mov	r3, #6
   12708:	str	r3, [fp, #-8]
   1270c:	ldr	r3, [fp, #-8]
   12710:	b	12748 <__assert_fail@plt+0x13e8>
   12714:	mov	r3, #6
   12718:	str	r3, [fp, #-8]
   1271c:	bl	11228 <__errno_location@plt>
   12720:	mov	r3, r0
   12724:	ldr	r3, [r3]
   12728:	str	r3, [fp, #-20]	; 0xffffffec
   1272c:	ldr	r0, [fp, #-16]
   12730:	bl	11324 <close@plt>
   12734:	bl	11228 <__errno_location@plt>
   12738:	mov	r2, r0
   1273c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12740:	str	r3, [r2]
   12744:	ldr	r3, [fp, #-8]
   12748:	mov	r0, r3
   1274c:	sub	sp, fp, #4
   12750:	ldr	fp, [sp]
   12754:	add	sp, sp, #4
   12758:	pop	{pc}		; (ldr pc, [sp], #4)
   1275c:	strd	r4, [sp, #-16]!
   12760:	str	fp, [sp, #8]
   12764:	str	lr, [sp, #12]
   12768:	add	fp, sp, #12
   1276c:	sub	sp, sp, #176	; 0xb0
   12770:	str	r0, [fp, #-160]	; 0xffffff60
   12774:	str	r1, [fp, #-164]	; 0xffffff5c
   12778:	str	r2, [fp, #-168]	; 0xffffff58
   1277c:	str	r3, [fp, #-172]	; 0xffffff54
   12780:	ldr	r3, [fp, #-164]	; 0xffffff5c
   12784:	ldr	r3, [r3, #28]
   12788:	str	r3, [fp, #-24]	; 0xffffffe8
   1278c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   12790:	ldr	r3, [r3, #24]
   12794:	str	r3, [fp, #-28]	; 0xffffffe4
   12798:	mov	r3, #1
   1279c:	strb	r3, [fp, #-17]	; 0xffffffef
   127a0:	mov	r3, #1
   127a4:	strb	r3, [fp, #-19]	; 0xffffffed
   127a8:	ldr	r3, [fp, #-164]	; 0xffffff5c
   127ac:	ldrh	r3, [r3, #56]	; 0x38
   127b0:	sub	r3, r3, #1
   127b4:	cmp	r3, #9
   127b8:	ldrls	pc, [pc, r3, lsl #2]
   127bc:	b	12afc <__assert_fail@plt+0x179c>
   127c0:	andeq	r2, r1, r8, ror #15
   127c4:	andeq	r2, r1, r8, lsr #21
   127c8:	strdeq	r2, [r1], -ip
   127cc:	andeq	r2, r1, ip, asr #20
   127d0:	strdeq	r2, [r1], -ip
   127d4:	andeq	r2, r1, r8, lsr r9
   127d8:	strdeq	r2, [r1], -r8
   127dc:	strdeq	r2, [r1], -ip
   127e0:	strdeq	r2, [r1], -ip
   127e4:	andeq	r2, r1, r8, asr r9
   127e8:	ldr	r3, [fp, #12]
   127ec:	ldrb	r3, [r3, #4]
   127f0:	cmp	r3, #0
   127f4:	beq	12b04 <__assert_fail@plt+0x17a4>
   127f8:	ldr	r3, [fp, #12]
   127fc:	ldr	r3, [r3, #8]
   12800:	cmp	r3, #0
   12804:	beq	12930 <__assert_fail@plt+0x15d0>
   12808:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1280c:	ldrd	r0, [r3, #160]	; 0xa0
   12810:	ldr	r3, [fp, #12]
   12814:	ldr	r3, [r3, #8]
   12818:	ldrd	r2, [r3]
   1281c:	cmp	r1, r3
   12820:	cmpeq	r0, r2
   12824:	bne	12930 <__assert_fail@plt+0x15d0>
   12828:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1282c:	ldrd	r0, [r3, #64]	; 0x40
   12830:	ldr	r3, [fp, #12]
   12834:	ldr	r3, [r3, #8]
   12838:	ldrd	r2, [r3, #8]
   1283c:	cmp	r1, r3
   12840:	cmpeq	r0, r2
   12844:	bne	12930 <__assert_fail@plt+0x15d0>
   12848:	movw	r1, #204	; 0xcc
   1284c:	movt	r1, #2
   12850:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12854:	bl	11048 <strcmp@plt>
   12858:	mov	r3, r0
   1285c:	cmp	r3, #0
   12860:	bne	12898 <__assert_fail@plt+0x1538>
   12864:	movw	r0, #208	; 0xd0
   12868:	movt	r0, #2
   1286c:	bl	111d4 <gettext@plt>
   12870:	mov	r4, r0
   12874:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12878:	mov	r0, #4
   1287c:	bl	1af74 <__assert_fail@plt+0x9c14>
   12880:	mov	r3, r0
   12884:	mov	r2, r4
   12888:	mov	r1, #0
   1288c:	mov	r0, #0
   12890:	bl	11168 <error@plt>
   12894:	b	128ec <__assert_fail@plt+0x158c>
   12898:	movw	r0, #256	; 0x100
   1289c:	movt	r0, #2
   128a0:	bl	111d4 <gettext@plt>
   128a4:	mov	r4, r0
   128a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   128ac:	mov	r1, #4
   128b0:	mov	r0, #0
   128b4:	bl	1aec0 <__assert_fail@plt+0x9b60>
   128b8:	mov	r5, r0
   128bc:	movw	r2, #204	; 0xcc
   128c0:	movt	r2, #2
   128c4:	mov	r1, #4
   128c8:	mov	r0, #1
   128cc:	bl	1aec0 <__assert_fail@plt+0x9b60>
   128d0:	mov	r3, r0
   128d4:	str	r3, [sp]
   128d8:	mov	r3, r5
   128dc:	mov	r2, r4
   128e0:	mov	r1, #0
   128e4:	mov	r0, #0
   128e8:	bl	11168 <error@plt>
   128ec:	movw	r0, #316	; 0x13c
   128f0:	movt	r0, #2
   128f4:	bl	111d4 <gettext@plt>
   128f8:	mov	r3, r0
   128fc:	mov	r2, r3
   12900:	mov	r1, #0
   12904:	mov	r0, #0
   12908:	bl	11168 <error@plt>
   1290c:	mov	r2, #4
   12910:	ldr	r1, [fp, #-164]	; 0xffffff5c
   12914:	ldr	r0, [fp, #-160]	; 0xffffff60
   12918:	bl	150f8 <__assert_fail@plt+0x3d98>
   1291c:	ldr	r0, [fp, #-160]	; 0xffffff60
   12920:	bl	1494c <__assert_fail@plt+0x35ec>
   12924:	str	r0, [fp, #-32]	; 0xffffffe0
   12928:	mov	r3, #0
   1292c:	b	131cc <__assert_fail@plt+0x1e6c>
   12930:	mov	r3, #1
   12934:	b	131cc <__assert_fail@plt+0x1e6c>
   12938:	ldr	r3, [fp, #12]
   1293c:	ldrb	r3, [r3, #4]
   12940:	eor	r3, r3, #1
   12944:	uxtb	r3, r3
   12948:	cmp	r3, #0
   1294c:	beq	12b0c <__assert_fail@plt+0x17ac>
   12950:	mov	r3, #1
   12954:	b	131cc <__assert_fail@plt+0x1e6c>
   12958:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1295c:	ldr	r3, [r3, #48]	; 0x30
   12960:	cmp	r3, #0
   12964:	bne	1299c <__assert_fail@plt+0x163c>
   12968:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1296c:	ldr	r3, [r3, #16]
   12970:	cmp	r3, #0
   12974:	bne	1299c <__assert_fail@plt+0x163c>
   12978:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1297c:	mov	r2, #1
   12980:	str	r2, [r3, #16]
   12984:	mov	r2, #1
   12988:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1298c:	ldr	r0, [fp, #-160]	; 0xffffff60
   12990:	bl	150f8 <__assert_fail@plt+0x3d98>
   12994:	mov	r3, #1
   12998:	b	131cc <__assert_fail@plt+0x1e6c>
   1299c:	ldr	r3, [fp, #12]
   129a0:	ldrb	r3, [r3, #13]
   129a4:	eor	r3, r3, #1
   129a8:	uxtb	r3, r3
   129ac:	cmp	r3, #0
   129b0:	beq	129ec <__assert_fail@plt+0x168c>
   129b4:	ldr	r3, [fp, #-164]	; 0xffffff5c
   129b8:	ldr	r4, [r3, #32]
   129bc:	movw	r0, #368	; 0x170
   129c0:	movt	r0, #2
   129c4:	bl	111d4 <gettext@plt>
   129c8:	mov	r5, r0
   129cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   129d0:	mov	r0, #4
   129d4:	bl	1af74 <__assert_fail@plt+0x9c14>
   129d8:	mov	r3, r0
   129dc:	mov	r2, r5
   129e0:	mov	r1, r4
   129e4:	mov	r0, #0
   129e8:	bl	11168 <error@plt>
   129ec:	mov	r3, #0
   129f0:	strb	r3, [fp, #-17]	; 0xffffffef
   129f4:	b	12b18 <__assert_fail@plt+0x17b8>
   129f8:	ldr	r3, [fp, #12]
   129fc:	ldrb	r3, [r3, #13]
   12a00:	eor	r3, r3, #1
   12a04:	uxtb	r3, r3
   12a08:	cmp	r3, #0
   12a0c:	beq	12a40 <__assert_fail@plt+0x16e0>
   12a10:	ldr	r3, [fp, #-164]	; 0xffffff5c
   12a14:	ldr	r4, [r3, #32]
   12a18:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12a1c:	mov	r1, #3
   12a20:	mov	r0, #0
   12a24:	bl	1b158 <__assert_fail@plt+0x9df8>
   12a28:	mov	r3, r0
   12a2c:	movw	r2, #388	; 0x184
   12a30:	movt	r2, #2
   12a34:	mov	r1, r4
   12a38:	mov	r0, #0
   12a3c:	bl	11168 <error@plt>
   12a40:	mov	r3, #0
   12a44:	strb	r3, [fp, #-17]	; 0xffffffef
   12a48:	b	12b18 <__assert_fail@plt+0x17b8>
   12a4c:	ldr	r3, [fp, #12]
   12a50:	ldrb	r3, [r3, #13]
   12a54:	eor	r3, r3, #1
   12a58:	uxtb	r3, r3
   12a5c:	cmp	r3, #0
   12a60:	beq	12a9c <__assert_fail@plt+0x173c>
   12a64:	ldr	r3, [fp, #-164]	; 0xffffff5c
   12a68:	ldr	r4, [r3, #32]
   12a6c:	movw	r0, #392	; 0x188
   12a70:	movt	r0, #2
   12a74:	bl	111d4 <gettext@plt>
   12a78:	mov	r5, r0
   12a7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12a80:	mov	r0, #4
   12a84:	bl	1af74 <__assert_fail@plt+0x9c14>
   12a88:	mov	r3, r0
   12a8c:	mov	r2, r5
   12a90:	mov	r1, r4
   12a94:	mov	r0, #0
   12a98:	bl	11168 <error@plt>
   12a9c:	mov	r3, #0
   12aa0:	strb	r3, [fp, #-17]	; 0xffffffef
   12aa4:	b	12b18 <__assert_fail@plt+0x17b8>
   12aa8:	ldr	r1, [fp, #-164]	; 0xffffff5c
   12aac:	ldr	r0, [fp, #-160]	; 0xffffff60
   12ab0:	bl	1cc4c <__assert_fail@plt+0xb8ec>
   12ab4:	mov	r3, r0
   12ab8:	cmp	r3, #0
   12abc:	beq	12b14 <__assert_fail@plt+0x17b4>
   12ac0:	movw	r0, #420	; 0x1a4
   12ac4:	movt	r0, #2
   12ac8:	bl	111d4 <gettext@plt>
   12acc:	mov	r4, r0
   12ad0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12ad4:	mov	r1, #3
   12ad8:	mov	r0, #0
   12adc:	bl	1b158 <__assert_fail@plt+0x9df8>
   12ae0:	mov	r3, r0
   12ae4:	mov	r2, r4
   12ae8:	mov	r1, #0
   12aec:	mov	r0, #0
   12af0:	bl	11168 <error@plt>
   12af4:	mov	r3, #0
   12af8:	b	131cc <__assert_fail@plt+0x1e6c>
   12afc:	nop	{0}
   12b00:	b	12b18 <__assert_fail@plt+0x17b8>
   12b04:	nop	{0}
   12b08:	b	12b18 <__assert_fail@plt+0x17b8>
   12b0c:	nop	{0}
   12b10:	b	12b18 <__assert_fail@plt+0x17b8>
   12b14:	nop	{0}
   12b18:	ldrb	r3, [fp, #-17]	; 0xffffffef
   12b1c:	eor	r3, r3, #1
   12b20:	uxtb	r3, r3
   12b24:	cmp	r3, #0
   12b28:	beq	12b40 <__assert_fail@plt+0x17e0>
   12b2c:	mov	r3, #0
   12b30:	strb	r3, [fp, #-18]	; 0xffffffee
   12b34:	mov	r3, #0
   12b38:	str	r3, [fp, #-16]
   12b3c:	b	12cc8 <__assert_fail@plt+0x1968>
   12b40:	ldr	r3, [fp, #4]
   12b44:	cmn	r3, #1
   12b48:	bne	12ba8 <__assert_fail@plt+0x1848>
   12b4c:	ldr	r3, [fp, #8]
   12b50:	cmn	r3, #1
   12b54:	bne	12ba8 <__assert_fail@plt+0x1848>
   12b58:	ldr	r3, [fp, #12]
   12b5c:	ldr	r3, [r3]
   12b60:	cmp	r3, #2
   12b64:	bne	12ba8 <__assert_fail@plt+0x1848>
   12b68:	ldr	r3, [fp, #12]
   12b6c:	ldr	r3, [r3, #8]
   12b70:	cmp	r3, #0
   12b74:	bne	12ba8 <__assert_fail@plt+0x1848>
   12b78:	ldr	r3, [fp, #12]
   12b7c:	ldrb	r3, [r3, #12]
   12b80:	eor	r3, r3, #1
   12b84:	uxtb	r3, r3
   12b88:	cmp	r3, #0
   12b8c:	beq	12ba8 <__assert_fail@plt+0x1848>
   12b90:	mov	r3, #1
   12b94:	strb	r3, [fp, #-18]	; 0xffffffee
   12b98:	ldr	r3, [fp, #-164]	; 0xffffff5c
   12b9c:	add	r3, r3, #64	; 0x40
   12ba0:	str	r3, [fp, #-16]
   12ba4:	b	12cc8 <__assert_fail@plt+0x1968>
   12ba8:	ldr	r3, [fp, #-164]	; 0xffffff5c
   12bac:	add	r3, r3, #64	; 0x40
   12bb0:	str	r3, [fp, #-16]
   12bb4:	ldr	r3, [fp, #12]
   12bb8:	ldrb	r3, [r3, #12]
   12bbc:	cmp	r3, #0
   12bc0:	beq	12c60 <__assert_fail@plt+0x1900>
   12bc4:	ldr	r3, [fp, #-16]
   12bc8:	ldr	r3, [r3, #16]
   12bcc:	and	r3, r3, #61440	; 0xf000
   12bd0:	cmp	r3, #40960	; 0xa000
   12bd4:	bne	12c60 <__assert_fail@plt+0x1900>
   12bd8:	ldr	r3, [fp, #-160]	; 0xffffff60
   12bdc:	ldr	r0, [r3, #32]
   12be0:	sub	r2, fp, #156	; 0x9c
   12be4:	mov	r3, #0
   12be8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12bec:	bl	1f134 <__assert_fail@plt+0xddd4>
   12bf0:	mov	r3, r0
   12bf4:	cmp	r3, #0
   12bf8:	beq	12c58 <__assert_fail@plt+0x18f8>
   12bfc:	ldr	r3, [fp, #12]
   12c00:	ldrb	r3, [r3, #13]
   12c04:	eor	r3, r3, #1
   12c08:	uxtb	r3, r3
   12c0c:	cmp	r3, #0
   12c10:	beq	12c50 <__assert_fail@plt+0x18f0>
   12c14:	bl	11228 <__errno_location@plt>
   12c18:	mov	r3, r0
   12c1c:	ldr	r4, [r3]
   12c20:	movw	r0, #608	; 0x260
   12c24:	movt	r0, #2
   12c28:	bl	111d4 <gettext@plt>
   12c2c:	mov	r5, r0
   12c30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12c34:	mov	r0, #4
   12c38:	bl	1af74 <__assert_fail@plt+0x9c14>
   12c3c:	mov	r3, r0
   12c40:	mov	r2, r5
   12c44:	mov	r1, r4
   12c48:	mov	r0, #0
   12c4c:	bl	11168 <error@plt>
   12c50:	mov	r3, #0
   12c54:	strb	r3, [fp, #-17]	; 0xffffffef
   12c58:	sub	r3, fp, #156	; 0x9c
   12c5c:	str	r3, [fp, #-16]
   12c60:	ldrb	r3, [fp, #-17]	; 0xffffffef
   12c64:	cmp	r3, #0
   12c68:	beq	12cb4 <__assert_fail@plt+0x1954>
   12c6c:	ldr	r3, [fp, #4]
   12c70:	cmn	r3, #1
   12c74:	beq	12c8c <__assert_fail@plt+0x192c>
   12c78:	ldr	r3, [fp, #-16]
   12c7c:	ldr	r3, [r3, #24]
   12c80:	ldr	r2, [fp, #4]
   12c84:	cmp	r2, r3
   12c88:	bne	12cb4 <__assert_fail@plt+0x1954>
   12c8c:	ldr	r3, [fp, #8]
   12c90:	cmn	r3, #1
   12c94:	beq	12cac <__assert_fail@plt+0x194c>
   12c98:	ldr	r3, [fp, #-16]
   12c9c:	ldr	r3, [r3, #28]
   12ca0:	ldr	r2, [fp, #8]
   12ca4:	cmp	r2, r3
   12ca8:	bne	12cb4 <__assert_fail@plt+0x1954>
   12cac:	mov	r3, #1
   12cb0:	b	12cb8 <__assert_fail@plt+0x1958>
   12cb4:	mov	r3, #0
   12cb8:	strb	r3, [fp, #-18]	; 0xffffffee
   12cbc:	ldrb	r3, [fp, #-18]	; 0xffffffee
   12cc0:	and	r3, r3, #1
   12cc4:	strb	r3, [fp, #-18]	; 0xffffffee
   12cc8:	ldrb	r3, [fp, #-17]	; 0xffffffef
   12ccc:	cmp	r3, #0
   12cd0:	beq	12e30 <__assert_fail@plt+0x1ad0>
   12cd4:	ldr	r3, [fp, #-164]	; 0xffffff5c
   12cd8:	ldrh	r3, [r3, #56]	; 0x38
   12cdc:	cmp	r3, #1
   12ce0:	beq	12d14 <__assert_fail@plt+0x19b4>
   12ce4:	ldr	r3, [fp, #-164]	; 0xffffff5c
   12ce8:	ldrh	r3, [r3, #56]	; 0x38
   12cec:	cmp	r3, #2
   12cf0:	beq	12d14 <__assert_fail@plt+0x19b4>
   12cf4:	ldr	r3, [fp, #-164]	; 0xffffff5c
   12cf8:	ldrh	r3, [r3, #56]	; 0x38
   12cfc:	cmp	r3, #6
   12d00:	beq	12d14 <__assert_fail@plt+0x19b4>
   12d04:	ldr	r3, [fp, #-164]	; 0xffffff5c
   12d08:	ldrh	r3, [r3, #56]	; 0x38
   12d0c:	cmp	r3, #4
   12d10:	bne	12e30 <__assert_fail@plt+0x1ad0>
   12d14:	ldr	r3, [fp, #12]
   12d18:	ldr	r3, [r3, #8]
   12d1c:	cmp	r3, #0
   12d20:	beq	12e30 <__assert_fail@plt+0x1ad0>
   12d24:	ldr	r3, [fp, #-16]
   12d28:	ldrd	r0, [r3, #96]	; 0x60
   12d2c:	ldr	r3, [fp, #12]
   12d30:	ldr	r3, [r3, #8]
   12d34:	ldrd	r2, [r3]
   12d38:	cmp	r1, r3
   12d3c:	cmpeq	r0, r2
   12d40:	bne	12e30 <__assert_fail@plt+0x1ad0>
   12d44:	ldr	r3, [fp, #-16]
   12d48:	ldrd	r0, [r3]
   12d4c:	ldr	r3, [fp, #12]
   12d50:	ldr	r3, [r3, #8]
   12d54:	ldrd	r2, [r3, #8]
   12d58:	cmp	r1, r3
   12d5c:	cmpeq	r0, r2
   12d60:	bne	12e30 <__assert_fail@plt+0x1ad0>
   12d64:	movw	r1, #204	; 0xcc
   12d68:	movt	r1, #2
   12d6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12d70:	bl	11048 <strcmp@plt>
   12d74:	mov	r3, r0
   12d78:	cmp	r3, #0
   12d7c:	bne	12db4 <__assert_fail@plt+0x1a54>
   12d80:	movw	r0, #208	; 0xd0
   12d84:	movt	r0, #2
   12d88:	bl	111d4 <gettext@plt>
   12d8c:	mov	r4, r0
   12d90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12d94:	mov	r0, #4
   12d98:	bl	1af74 <__assert_fail@plt+0x9c14>
   12d9c:	mov	r3, r0
   12da0:	mov	r2, r4
   12da4:	mov	r1, #0
   12da8:	mov	r0, #0
   12dac:	bl	11168 <error@plt>
   12db0:	b	12e08 <__assert_fail@plt+0x1aa8>
   12db4:	movw	r0, #256	; 0x100
   12db8:	movt	r0, #2
   12dbc:	bl	111d4 <gettext@plt>
   12dc0:	mov	r4, r0
   12dc4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12dc8:	mov	r1, #4
   12dcc:	mov	r0, #0
   12dd0:	bl	1aec0 <__assert_fail@plt+0x9b60>
   12dd4:	mov	r5, r0
   12dd8:	movw	r2, #204	; 0xcc
   12ddc:	movt	r2, #2
   12de0:	mov	r1, #4
   12de4:	mov	r0, #1
   12de8:	bl	1aec0 <__assert_fail@plt+0x9b60>
   12dec:	mov	r3, r0
   12df0:	str	r3, [sp]
   12df4:	mov	r3, r5
   12df8:	mov	r2, r4
   12dfc:	mov	r1, #0
   12e00:	mov	r0, #0
   12e04:	bl	11168 <error@plt>
   12e08:	movw	r0, #316	; 0x13c
   12e0c:	movt	r0, #2
   12e10:	bl	111d4 <gettext@plt>
   12e14:	mov	r3, r0
   12e18:	mov	r2, r3
   12e1c:	mov	r1, #0
   12e20:	mov	r0, #0
   12e24:	bl	11168 <error@plt>
   12e28:	mov	r3, #0
   12e2c:	b	131cc <__assert_fail@plt+0x1e6c>
   12e30:	ldrb	r3, [fp, #-18]	; 0xffffffee
   12e34:	cmp	r3, #0
   12e38:	beq	13004 <__assert_fail@plt+0x1ca4>
   12e3c:	ldr	r3, [fp, #12]
   12e40:	ldrb	r3, [r3, #12]
   12e44:	eor	r3, r3, #1
   12e48:	uxtb	r3, r3
   12e4c:	cmp	r3, #0
   12e50:	beq	12ebc <__assert_fail@plt+0x1b5c>
   12e54:	ldr	r3, [fp, #-160]	; 0xffffff60
   12e58:	ldr	r0, [r3, #32]
   12e5c:	ldr	r3, [fp, #-172]	; 0xffffff54
   12e60:	ldr	r2, [fp, #-168]	; 0xffffff58
   12e64:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12e68:	bl	13404 <__assert_fail@plt+0x20a4>
   12e6c:	mov	r3, r0
   12e70:	cmp	r3, #0
   12e74:	moveq	r3, #1
   12e78:	movne	r3, #0
   12e7c:	strb	r3, [fp, #-17]	; 0xffffffef
   12e80:	ldrb	r3, [fp, #-17]	; 0xffffffef
   12e84:	eor	r3, r3, #1
   12e88:	uxtb	r3, r3
   12e8c:	cmp	r3, #0
   12e90:	beq	12f70 <__assert_fail@plt+0x1c10>
   12e94:	bl	11228 <__errno_location@plt>
   12e98:	mov	r3, r0
   12e9c:	ldr	r3, [r3]
   12ea0:	cmp	r3, #95	; 0x5f
   12ea4:	bne	12f70 <__assert_fail@plt+0x1c10>
   12ea8:	mov	r3, #1
   12eac:	strb	r3, [fp, #-17]	; 0xffffffef
   12eb0:	mov	r3, #0
   12eb4:	strb	r3, [fp, #-19]	; 0xffffffed
   12eb8:	b	12f70 <__assert_fail@plt+0x1c10>
   12ebc:	ldr	r3, [fp, #-160]	; 0xffffff60
   12ec0:	ldr	r0, [r3, #32]
   12ec4:	ldr	r3, [fp, #8]
   12ec8:	str	r3, [sp, #8]
   12ecc:	ldr	r3, [fp, #4]
   12ed0:	str	r3, [sp, #4]
   12ed4:	ldr	r3, [fp, #-172]	; 0xffffff54
   12ed8:	str	r3, [sp]
   12edc:	ldr	r3, [fp, #-168]	; 0xffffff58
   12ee0:	ldr	r2, [fp, #-16]
   12ee4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12ee8:	bl	1250c <__assert_fail@plt+0x11ac>
   12eec:	str	r0, [fp, #-36]	; 0xffffffdc
   12ef0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12ef4:	sub	r3, r3, #2
   12ef8:	cmp	r3, #4
   12efc:	ldrls	pc, [pc, r3, lsl #2]
   12f00:	b	12f68 <__assert_fail@plt+0x1c08>
   12f04:	andeq	r2, r1, ip, ror #30
   12f08:	andeq	r2, r1, r4, asr pc
   12f0c:	andeq	r2, r1, r4, asr pc
   12f10:	andeq	r2, r1, r8, lsl pc
   12f14:	andeq	r2, r1, r8, asr #30
   12f18:	ldr	r3, [fp, #-160]	; 0xffffff60
   12f1c:	ldr	r0, [r3, #32]
   12f20:	ldr	r3, [fp, #-172]	; 0xffffff54
   12f24:	ldr	r2, [fp, #-168]	; 0xffffff58
   12f28:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12f2c:	bl	133b0 <__assert_fail@plt+0x2050>
   12f30:	mov	r3, r0
   12f34:	cmp	r3, #0
   12f38:	moveq	r3, #1
   12f3c:	movne	r3, #0
   12f40:	strb	r3, [fp, #-17]	; 0xffffffef
   12f44:	b	12f70 <__assert_fail@plt+0x1c10>
   12f48:	mov	r3, #0
   12f4c:	strb	r3, [fp, #-17]	; 0xffffffef
   12f50:	b	12f70 <__assert_fail@plt+0x1c10>
   12f54:	mov	r3, #0
   12f58:	strb	r3, [fp, #-18]	; 0xffffffee
   12f5c:	mov	r3, #0
   12f60:	strb	r3, [fp, #-17]	; 0xffffffef
   12f64:	b	12f70 <__assert_fail@plt+0x1c10>
   12f68:	bl	11318 <abort@plt>
   12f6c:	nop	{0}
   12f70:	ldrb	r3, [fp, #-18]	; 0xffffffee
   12f74:	cmp	r3, #0
   12f78:	beq	13004 <__assert_fail@plt+0x1ca4>
   12f7c:	ldrb	r3, [fp, #-17]	; 0xffffffef
   12f80:	eor	r3, r3, #1
   12f84:	uxtb	r3, r3
   12f88:	cmp	r3, #0
   12f8c:	beq	13004 <__assert_fail@plt+0x1ca4>
   12f90:	ldr	r3, [fp, #12]
   12f94:	ldrb	r3, [r3, #13]
   12f98:	eor	r3, r3, #1
   12f9c:	uxtb	r3, r3
   12fa0:	cmp	r3, #0
   12fa4:	beq	13004 <__assert_fail@plt+0x1ca4>
   12fa8:	bl	11228 <__errno_location@plt>
   12fac:	mov	r3, r0
   12fb0:	ldr	r4, [r3]
   12fb4:	ldr	r3, [fp, #-168]	; 0xffffff58
   12fb8:	cmn	r3, #1
   12fbc:	beq	12fd4 <__assert_fail@plt+0x1c74>
   12fc0:	movw	r0, #632	; 0x278
   12fc4:	movt	r0, #2
   12fc8:	bl	111d4 <gettext@plt>
   12fcc:	mov	r5, r0
   12fd0:	b	12fe4 <__assert_fail@plt+0x1c84>
   12fd4:	movw	r0, #660	; 0x294
   12fd8:	movt	r0, #2
   12fdc:	bl	111d4 <gettext@plt>
   12fe0:	mov	r5, r0
   12fe4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12fe8:	mov	r0, #4
   12fec:	bl	1af74 <__assert_fail@plt+0x9c14>
   12ff0:	mov	r3, r0
   12ff4:	mov	r2, r5
   12ff8:	mov	r1, r4
   12ffc:	mov	r0, #0
   13000:	bl	11168 <error@plt>
   13004:	ldr	r3, [fp, #12]
   13008:	ldr	r3, [r3]
   1300c:	cmp	r3, #2
   13010:	beq	131a0 <__assert_fail@plt+0x1e40>
   13014:	ldrb	r3, [fp, #-18]	; 0xffffffee
   13018:	cmp	r3, #0
   1301c:	beq	13080 <__assert_fail@plt+0x1d20>
   13020:	ldrb	r3, [fp, #-17]	; 0xffffffef
   13024:	cmp	r3, #0
   13028:	beq	13080 <__assert_fail@plt+0x1d20>
   1302c:	ldrb	r3, [fp, #-19]	; 0xffffffed
   13030:	cmp	r3, #0
   13034:	beq	13080 <__assert_fail@plt+0x1d20>
   13038:	ldr	r3, [fp, #-168]	; 0xffffff58
   1303c:	cmn	r3, #1
   13040:	beq	13058 <__assert_fail@plt+0x1cf8>
   13044:	ldr	r3, [fp, #-16]
   13048:	ldr	r3, [r3, #24]
   1304c:	ldr	r2, [fp, #-168]	; 0xffffff58
   13050:	cmp	r2, r3
   13054:	bne	13078 <__assert_fail@plt+0x1d18>
   13058:	ldr	r3, [fp, #-172]	; 0xffffff54
   1305c:	cmn	r3, #1
   13060:	beq	13080 <__assert_fail@plt+0x1d20>
   13064:	ldr	r3, [fp, #-16]
   13068:	ldr	r3, [r3, #28]
   1306c:	ldr	r2, [fp, #-172]	; 0xffffff54
   13070:	cmp	r2, r3
   13074:	beq	13080 <__assert_fail@plt+0x1d20>
   13078:	mov	r3, #1
   1307c:	b	13084 <__assert_fail@plt+0x1d24>
   13080:	mov	r3, #0
   13084:	strb	r3, [fp, #-37]	; 0xffffffdb
   13088:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   1308c:	and	r3, r3, #1
   13090:	strb	r3, [fp, #-37]	; 0xffffffdb
   13094:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   13098:	cmp	r3, #0
   1309c:	bne	130b0 <__assert_fail@plt+0x1d50>
   130a0:	ldr	r3, [fp, #12]
   130a4:	ldr	r3, [r3]
   130a8:	cmp	r3, #0
   130ac:	bne	131a0 <__assert_fail@plt+0x1e40>
   130b0:	ldrb	r3, [fp, #-17]	; 0xffffffef
   130b4:	eor	r3, r3, #1
   130b8:	uxtb	r3, r3
   130bc:	cmp	r3, #0
   130c0:	beq	130cc <__assert_fail@plt+0x1d6c>
   130c4:	mov	r3, #3
   130c8:	b	13108 <__assert_fail@plt+0x1da8>
   130cc:	ldrb	r3, [fp, #-19]	; 0xffffffed
   130d0:	eor	r3, r3, #1
   130d4:	uxtb	r3, r3
   130d8:	cmp	r3, #0
   130dc:	beq	130e8 <__assert_fail@plt+0x1d88>
   130e0:	mov	r3, #1
   130e4:	b	13108 <__assert_fail@plt+0x1da8>
   130e8:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   130ec:	eor	r3, r3, #1
   130f0:	uxtb	r3, r3
   130f4:	cmp	r3, #0
   130f8:	beq	13104 <__assert_fail@plt+0x1da4>
   130fc:	mov	r3, #4
   13100:	b	13108 <__assert_fail@plt+0x1da8>
   13104:	mov	r3, #2
   13108:	str	r3, [fp, #-44]	; 0xffffffd4
   1310c:	ldr	r3, [fp, #-16]
   13110:	cmp	r3, #0
   13114:	beq	13130 <__assert_fail@plt+0x1dd0>
   13118:	ldr	r3, [fp, #-16]
   1311c:	ldr	r3, [r3, #24]
   13120:	mov	r0, r3
   13124:	bl	12108 <__assert_fail@plt+0xda8>
   13128:	mov	r3, r0
   1312c:	b	13134 <__assert_fail@plt+0x1dd4>
   13130:	mov	r3, #0
   13134:	str	r3, [fp, #-48]	; 0xffffffd0
   13138:	ldr	r3, [fp, #-16]
   1313c:	cmp	r3, #0
   13140:	beq	1315c <__assert_fail@plt+0x1dfc>
   13144:	ldr	r3, [fp, #-16]
   13148:	ldr	r3, [r3, #28]
   1314c:	mov	r0, r3
   13150:	bl	12094 <__assert_fail@plt+0xd34>
   13154:	mov	r3, r0
   13158:	b	13160 <__assert_fail@plt+0x1e00>
   1315c:	mov	r3, #0
   13160:	str	r3, [fp, #-52]	; 0xffffffcc
   13164:	ldr	r3, [fp, #12]
   13168:	ldr	r3, [r3, #16]
   1316c:	ldr	r2, [fp, #12]
   13170:	ldr	r2, [r2, #20]
   13174:	str	r2, [sp, #4]
   13178:	str	r3, [sp]
   1317c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   13180:	ldr	r2, [fp, #-48]	; 0xffffffd0
   13184:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13188:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1318c:	bl	1226c <__assert_fail@plt+0xf0c>
   13190:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13194:	bl	1360c <__assert_fail@plt+0x22ac>
   13198:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1319c:	bl	1360c <__assert_fail@plt+0x22ac>
   131a0:	ldr	r3, [fp, #12]
   131a4:	ldrb	r3, [r3, #4]
   131a8:	eor	r3, r3, #1
   131ac:	uxtb	r3, r3
   131b0:	cmp	r3, #0
   131b4:	beq	131c8 <__assert_fail@plt+0x1e68>
   131b8:	mov	r2, #4
   131bc:	ldr	r1, [fp, #-164]	; 0xffffff5c
   131c0:	ldr	r0, [fp, #-160]	; 0xffffff60
   131c4:	bl	150f8 <__assert_fail@plt+0x3d98>
   131c8:	ldrb	r3, [fp, #-17]	; 0xffffffef
   131cc:	mov	r0, r3
   131d0:	sub	sp, fp, #12
   131d4:	ldrd	r4, [sp]
   131d8:	ldr	fp, [sp, #8]
   131dc:	add	sp, sp, #12
   131e0:	pop	{pc}		; (ldr pc, [sp], #4)
   131e4:	str	r4, [sp, #-12]!
   131e8:	str	fp, [sp, #4]
   131ec:	str	lr, [sp, #8]
   131f0:	add	fp, sp, #8
   131f4:	sub	sp, sp, #52	; 0x34
   131f8:	str	r0, [fp, #-32]	; 0xffffffe0
   131fc:	str	r1, [fp, #-36]	; 0xffffffdc
   13200:	str	r2, [fp, #-40]	; 0xffffffd8
   13204:	str	r3, [fp, #-44]	; 0xffffffd4
   13208:	mov	r3, #1
   1320c:	strb	r3, [fp, #-13]
   13210:	ldr	r3, [fp, #4]
   13214:	cmn	r3, #1
   13218:	bne	13248 <__assert_fail@plt+0x1ee8>
   1321c:	ldr	r3, [fp, #8]
   13220:	cmn	r3, #1
   13224:	bne	13248 <__assert_fail@plt+0x1ee8>
   13228:	ldr	r3, [fp, #12]
   1322c:	ldrb	r3, [r3, #12]
   13230:	cmp	r3, #0
   13234:	bne	13248 <__assert_fail@plt+0x1ee8>
   13238:	ldr	r3, [fp, #12]
   1323c:	ldr	r3, [r3]
   13240:	cmp	r3, #2
   13244:	beq	13250 <__assert_fail@plt+0x1ef0>
   13248:	mov	r3, #0
   1324c:	b	13254 <__assert_fail@plt+0x1ef4>
   13250:	mov	r3, #8
   13254:	str	r3, [fp, #-20]	; 0xffffffec
   13258:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1325c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13260:	orr	r3, r2, r3
   13264:	mov	r2, #0
   13268:	mov	r1, r3
   1326c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13270:	bl	1cbb8 <__assert_fail@plt+0xb858>
   13274:	mov	r3, r0
   13278:	str	r3, [fp, #-24]	; 0xffffffe8
   1327c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13280:	bl	1494c <__assert_fail@plt+0x35ec>
   13284:	str	r0, [fp, #-28]	; 0xffffffe4
   13288:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1328c:	cmp	r3, #0
   13290:	bne	132f8 <__assert_fail@plt+0x1f98>
   13294:	bl	11228 <__errno_location@plt>
   13298:	mov	r3, r0
   1329c:	ldr	r3, [r3]
   132a0:	cmp	r3, #0
   132a4:	beq	13348 <__assert_fail@plt+0x1fe8>
   132a8:	ldr	r3, [fp, #12]
   132ac:	ldrb	r3, [r3, #13]
   132b0:	eor	r3, r3, #1
   132b4:	uxtb	r3, r3
   132b8:	cmp	r3, #0
   132bc:	beq	132ec <__assert_fail@plt+0x1f8c>
   132c0:	bl	11228 <__errno_location@plt>
   132c4:	mov	r3, r0
   132c8:	ldr	r4, [r3]
   132cc:	movw	r0, #684	; 0x2ac
   132d0:	movt	r0, #2
   132d4:	bl	111d4 <gettext@plt>
   132d8:	mov	r3, r0
   132dc:	mov	r2, r3
   132e0:	mov	r1, r4
   132e4:	mov	r0, #0
   132e8:	bl	11168 <error@plt>
   132ec:	mov	r3, #0
   132f0:	strb	r3, [fp, #-13]
   132f4:	b	13348 <__assert_fail@plt+0x1fe8>
   132f8:	ldr	r3, [fp, #12]
   132fc:	str	r3, [sp, #8]
   13300:	ldr	r3, [fp, #8]
   13304:	str	r3, [sp, #4]
   13308:	ldr	r3, [fp, #4]
   1330c:	str	r3, [sp]
   13310:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13314:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13318:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1331c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13320:	bl	1275c <__assert_fail@plt+0x13fc>
   13324:	mov	r3, r0
   13328:	mov	r2, r3
   1332c:	ldrb	r3, [fp, #-13]
   13330:	and	r3, r3, r2
   13334:	cmp	r3, #0
   13338:	movne	r3, #1
   1333c:	moveq	r3, #0
   13340:	strb	r3, [fp, #-13]
   13344:	b	1327c <__assert_fail@plt+0x1f1c>
   13348:	nop	{0}
   1334c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13350:	bl	143e8 <__assert_fail@plt+0x3088>
   13354:	mov	r3, r0
   13358:	cmp	r3, #0
   1335c:	beq	13394 <__assert_fail@plt+0x2034>
   13360:	bl	11228 <__errno_location@plt>
   13364:	mov	r3, r0
   13368:	ldr	r4, [r3]
   1336c:	movw	r0, #700	; 0x2bc
   13370:	movt	r0, #2
   13374:	bl	111d4 <gettext@plt>
   13378:	mov	r3, r0
   1337c:	mov	r2, r3
   13380:	mov	r1, r4
   13384:	mov	r0, #0
   13388:	bl	11168 <error@plt>
   1338c:	mov	r3, #0
   13390:	strb	r3, [fp, #-13]
   13394:	ldrb	r3, [fp, #-13]
   13398:	mov	r0, r3
   1339c:	sub	sp, fp, #8
   133a0:	ldr	r4, [sp]
   133a4:	ldr	fp, [sp, #4]
   133a8:	add	sp, sp, #8
   133ac:	pop	{pc}		; (ldr pc, [sp], #4)
   133b0:	str	fp, [sp, #-8]!
   133b4:	str	lr, [sp, #4]
   133b8:	add	fp, sp, #4
   133bc:	sub	sp, sp, #24
   133c0:	str	r0, [fp, #-8]
   133c4:	str	r1, [fp, #-12]
   133c8:	str	r2, [fp, #-16]
   133cc:	str	r3, [fp, #-20]	; 0xffffffec
   133d0:	mov	r3, #0
   133d4:	str	r3, [sp]
   133d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   133dc:	ldr	r2, [fp, #-16]
   133e0:	ldr	r1, [fp, #-12]
   133e4:	ldr	r0, [fp, #-8]
   133e8:	bl	112e8 <fchownat@plt>
   133ec:	mov	r3, r0
   133f0:	mov	r0, r3
   133f4:	sub	sp, fp, #4
   133f8:	ldr	fp, [sp]
   133fc:	add	sp, sp, #4
   13400:	pop	{pc}		; (ldr pc, [sp], #4)
   13404:	str	fp, [sp, #-8]!
   13408:	str	lr, [sp, #4]
   1340c:	add	fp, sp, #4
   13410:	sub	sp, sp, #24
   13414:	str	r0, [fp, #-8]
   13418:	str	r1, [fp, #-12]
   1341c:	str	r2, [fp, #-16]
   13420:	str	r3, [fp, #-20]	; 0xffffffec
   13424:	mov	r3, #256	; 0x100
   13428:	str	r3, [sp]
   1342c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13430:	ldr	r2, [fp, #-16]
   13434:	ldr	r1, [fp, #-12]
   13438:	ldr	r0, [fp, #-8]
   1343c:	bl	112e8 <fchownat@plt>
   13440:	mov	r3, r0
   13444:	mov	r0, r3
   13448:	sub	sp, fp, #4
   1344c:	ldr	fp, [sp]
   13450:	add	sp, sp, #4
   13454:	pop	{pc}		; (ldr pc, [sp], #4)
   13458:	push	{fp}		; (str fp, [sp, #-4]!)
   1345c:	add	fp, sp, #0
   13460:	sub	sp, sp, #12
   13464:	str	r0, [fp, #-8]
   13468:	movw	r3, #4552	; 0x11c8
   1346c:	movt	r3, #3
   13470:	ldr	r2, [fp, #-8]
   13474:	str	r2, [r3]
   13478:	nop	{0}
   1347c:	add	sp, fp, #0
   13480:	pop	{fp}		; (ldr fp, [sp], #4)
   13484:	bx	lr
   13488:	push	{fp}		; (str fp, [sp, #-4]!)
   1348c:	add	fp, sp, #0
   13490:	sub	sp, sp, #12
   13494:	mov	r3, r0
   13498:	strb	r3, [fp, #-5]
   1349c:	movw	r3, #4556	; 0x11cc
   134a0:	movt	r3, #3
   134a4:	ldrb	r2, [fp, #-5]
   134a8:	strb	r2, [r3]
   134ac:	nop	{0}
   134b0:	add	sp, fp, #0
   134b4:	pop	{fp}		; (ldr fp, [sp], #4)
   134b8:	bx	lr
   134bc:	str	r4, [sp, #-12]!
   134c0:	str	fp, [sp, #4]
   134c4:	str	lr, [sp, #8]
   134c8:	add	fp, sp, #8
   134cc:	sub	sp, sp, #20
   134d0:	movw	r3, #4516	; 0x11a4
   134d4:	movt	r3, #3
   134d8:	ldr	r3, [r3]
   134dc:	mov	r0, r3
   134e0:	bl	1da68 <__assert_fail@plt+0xc708>
   134e4:	mov	r3, r0
   134e8:	cmp	r3, #0
   134ec:	beq	135c0 <__assert_fail@plt+0x2260>
   134f0:	movw	r3, #4556	; 0x11cc
   134f4:	movt	r3, #3
   134f8:	ldrb	r3, [r3]
   134fc:	eor	r3, r3, #1
   13500:	uxtb	r3, r3
   13504:	cmp	r3, #0
   13508:	bne	13520 <__assert_fail@plt+0x21c0>
   1350c:	bl	11228 <__errno_location@plt>
   13510:	mov	r3, r0
   13514:	ldr	r3, [r3]
   13518:	cmp	r3, #32
   1351c:	beq	135c0 <__assert_fail@plt+0x2260>
   13520:	movw	r0, #736	; 0x2e0
   13524:	movt	r0, #2
   13528:	bl	111d4 <gettext@plt>
   1352c:	str	r0, [fp, #-16]
   13530:	movw	r3, #4552	; 0x11c8
   13534:	movt	r3, #3
   13538:	ldr	r3, [r3]
   1353c:	cmp	r3, #0
   13540:	beq	1358c <__assert_fail@plt+0x222c>
   13544:	bl	11228 <__errno_location@plt>
   13548:	mov	r3, r0
   1354c:	ldr	r4, [r3]
   13550:	movw	r3, #4552	; 0x11c8
   13554:	movt	r3, #3
   13558:	ldr	r3, [r3]
   1355c:	mov	r0, r3
   13560:	bl	1b0e0 <__assert_fail@plt+0x9d80>
   13564:	mov	r2, r0
   13568:	ldr	r3, [fp, #-16]
   1356c:	str	r3, [sp]
   13570:	mov	r3, r2
   13574:	movw	r2, #748	; 0x2ec
   13578:	movt	r2, #2
   1357c:	mov	r1, r4
   13580:	mov	r0, #0
   13584:	bl	11168 <error@plt>
   13588:	b	135ac <__assert_fail@plt+0x224c>
   1358c:	bl	11228 <__errno_location@plt>
   13590:	mov	r3, r0
   13594:	ldr	r1, [r3]
   13598:	ldr	r3, [fp, #-16]
   1359c:	movw	r2, #756	; 0x2f4
   135a0:	movt	r2, #2
   135a4:	mov	r0, #0
   135a8:	bl	11168 <error@plt>
   135ac:	movw	r3, #4416	; 0x1140
   135b0:	movt	r3, #3
   135b4:	ldr	r3, [r3]
   135b8:	mov	r0, r3
   135bc:	bl	11090 <_exit@plt>
   135c0:	movw	r3, #4512	; 0x11a0
   135c4:	movt	r3, #3
   135c8:	ldr	r3, [r3]
   135cc:	mov	r0, r3
   135d0:	bl	1da68 <__assert_fail@plt+0xc708>
   135d4:	mov	r3, r0
   135d8:	cmp	r3, #0
   135dc:	beq	135f4 <__assert_fail@plt+0x2294>
   135e0:	movw	r3, #4416	; 0x1140
   135e4:	movt	r3, #3
   135e8:	ldr	r3, [r3]
   135ec:	mov	r0, r3
   135f0:	bl	11090 <_exit@plt>
   135f4:	nop	{0}
   135f8:	sub	sp, fp, #8
   135fc:	ldr	r4, [sp]
   13600:	ldr	fp, [sp, #4]
   13604:	add	sp, sp, #8
   13608:	pop	{pc}		; (ldr pc, [sp], #4)
   1360c:	str	r4, [sp, #-12]!
   13610:	str	fp, [sp, #4]
   13614:	str	lr, [sp, #8]
   13618:	add	fp, sp, #8
   1361c:	sub	sp, sp, #20
   13620:	str	r0, [fp, #-24]	; 0xffffffe8
   13624:	bl	11228 <__errno_location@plt>
   13628:	mov	r3, r0
   1362c:	ldr	r3, [r3]
   13630:	str	r3, [fp, #-20]	; 0xffffffec
   13634:	bl	11228 <__errno_location@plt>
   13638:	mov	r3, r0
   1363c:	ldr	r3, [r3]
   13640:	str	r3, [fp, #-16]
   13644:	bl	11228 <__errno_location@plt>
   13648:	mov	r2, r0
   1364c:	mov	r3, #0
   13650:	str	r3, [r2]
   13654:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13658:	bl	11084 <free@plt>
   1365c:	bl	11228 <__errno_location@plt>
   13660:	mov	r3, r0
   13664:	ldr	r3, [r3]
   13668:	cmp	r3, #0
   1366c:	moveq	r3, #1
   13670:	movne	r3, #0
   13674:	uxtb	r3, r3
   13678:	mov	r4, r3
   1367c:	bl	11228 <__errno_location@plt>
   13680:	mov	r2, r0
   13684:	lsl	r3, r4, #2
   13688:	sub	r1, fp, #12
   1368c:	add	r3, r1, r3
   13690:	ldr	r3, [r3, #-8]
   13694:	str	r3, [r2]
   13698:	nop	{0}
   1369c:	sub	sp, fp, #8
   136a0:	ldr	r4, [sp]
   136a4:	ldr	fp, [sp, #4]
   136a8:	add	sp, sp, #8
   136ac:	pop	{pc}		; (ldr pc, [sp], #4)
   136b0:	push	{fp}		; (str fp, [sp, #-4]!)
   136b4:	add	fp, sp, #0
   136b8:	sub	sp, sp, #20
   136bc:	str	r0, [fp, #-16]
   136c0:	str	r1, [fp, #-20]	; 0xffffffec
   136c4:	ldr	r3, [fp, #-16]
   136c8:	str	r3, [fp, #-8]
   136cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   136d0:	str	r3, [fp, #-12]
   136d4:	ldr	r3, [fp, #-8]
   136d8:	ldrd	r0, [r3, #8]
   136dc:	ldr	r3, [fp, #-12]
   136e0:	ldrd	r2, [r3, #8]
   136e4:	cmp	r1, r3
   136e8:	cmpeq	r0, r2
   136ec:	bne	13714 <__assert_fail@plt+0x23b4>
   136f0:	ldr	r3, [fp, #-8]
   136f4:	ldrd	r0, [r3]
   136f8:	ldr	r3, [fp, #-12]
   136fc:	ldrd	r2, [r3]
   13700:	cmp	r1, r3
   13704:	cmpeq	r0, r2
   13708:	bne	13714 <__assert_fail@plt+0x23b4>
   1370c:	mov	r3, #1
   13710:	b	13718 <__assert_fail@plt+0x23b8>
   13714:	mov	r3, #0
   13718:	and	r3, r3, #1
   1371c:	uxtb	r3, r3
   13720:	mov	r0, r3
   13724:	add	sp, fp, #0
   13728:	pop	{fp}		; (ldr fp, [sp], #4)
   1372c:	bx	lr
   13730:	str	fp, [sp, #-8]!
   13734:	str	lr, [sp, #4]
   13738:	add	fp, sp, #4
   1373c:	sub	sp, sp, #16
   13740:	str	r0, [fp, #-16]
   13744:	str	r1, [fp, #-20]	; 0xffffffec
   13748:	ldr	r3, [fp, #-16]
   1374c:	str	r3, [fp, #-8]
   13750:	ldr	r3, [fp, #-8]
   13754:	ldrd	r0, [r3, #8]
   13758:	ldr	r3, [fp, #-20]	; 0xffffffec
   1375c:	mov	r2, r3
   13760:	mov	r3, #0
   13764:	bl	1ef14 <__assert_fail@plt+0xdbb4>
   13768:	mov	r3, r2
   1376c:	mov	r0, r3
   13770:	sub	sp, fp, #4
   13774:	ldr	fp, [sp]
   13778:	add	sp, sp, #4
   1377c:	pop	{pc}		; (ldr pc, [sp], #4)
   13780:	str	fp, [sp, #-8]!
   13784:	str	lr, [sp, #4]
   13788:	add	fp, sp, #4
   1378c:	sub	sp, sp, #16
   13790:	str	r0, [fp, #-8]
   13794:	ldr	r3, [fp, #-8]
   13798:	ldr	r2, [r3, #48]	; 0x30
   1379c:	movw	r3, #258	; 0x102
   137a0:	and	r3, r3, r2
   137a4:	cmp	r3, #0
   137a8:	beq	137fc <__assert_fail@plt+0x249c>
   137ac:	movw	r3, #13836	; 0x360c
   137b0:	movt	r3, #1
   137b4:	str	r3, [sp]
   137b8:	movw	r3, #14000	; 0x36b0
   137bc:	movt	r3, #1
   137c0:	movw	r2, #14128	; 0x3730
   137c4:	movt	r2, #1
   137c8:	mov	r1, #0
   137cc:	mov	r0, #31
   137d0:	bl	176a4 <__assert_fail@plt+0x6344>
   137d4:	mov	r3, r0
   137d8:	mov	r2, r3
   137dc:	ldr	r3, [fp, #-8]
   137e0:	str	r2, [r3, #56]	; 0x38
   137e4:	ldr	r3, [fp, #-8]
   137e8:	ldr	r3, [r3, #56]	; 0x38
   137ec:	cmp	r3, #0
   137f0:	bne	1383c <__assert_fail@plt+0x24dc>
   137f4:	mov	r3, #0
   137f8:	b	13840 <__assert_fail@plt+0x24e0>
   137fc:	mov	r0, #32
   13800:	bl	1d51c <__assert_fail@plt+0xc1bc>
   13804:	mov	r3, r0
   13808:	mov	r2, r3
   1380c:	ldr	r3, [fp, #-8]
   13810:	str	r2, [r3, #56]	; 0x38
   13814:	ldr	r3, [fp, #-8]
   13818:	ldr	r3, [r3, #56]	; 0x38
   1381c:	cmp	r3, #0
   13820:	bne	1382c <__assert_fail@plt+0x24cc>
   13824:	mov	r3, #0
   13828:	b	13840 <__assert_fail@plt+0x24e0>
   1382c:	ldr	r3, [fp, #-8]
   13830:	ldr	r3, [r3, #56]	; 0x38
   13834:	mov	r0, r3
   13838:	bl	1dba4 <__assert_fail@plt+0xc844>
   1383c:	mov	r3, #1
   13840:	mov	r0, r3
   13844:	sub	sp, fp, #4
   13848:	ldr	fp, [sp]
   1384c:	add	sp, sp, #4
   13850:	pop	{pc}		; (ldr pc, [sp], #4)
   13854:	str	fp, [sp, #-8]!
   13858:	str	lr, [sp, #4]
   1385c:	add	fp, sp, #4
   13860:	sub	sp, sp, #24
   13864:	str	r0, [fp, #-24]	; 0xffffffe8
   13868:	str	r1, [fp, #-28]	; 0xffffffe4
   1386c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13870:	ldr	r2, [r3, #48]	; 0x30
   13874:	movw	r3, #258	; 0x102
   13878:	and	r3, r3, r2
   1387c:	cmp	r3, #0
   13880:	beq	13944 <__assert_fail@plt+0x25e4>
   13884:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13888:	add	r3, r3, #64	; 0x40
   1388c:	str	r3, [fp, #-8]
   13890:	mov	r0, #24
   13894:	bl	1d51c <__assert_fail@plt+0xc1bc>
   13898:	mov	r3, r0
   1389c:	str	r3, [fp, #-12]
   138a0:	ldr	r3, [fp, #-12]
   138a4:	cmp	r3, #0
   138a8:	bne	138b4 <__assert_fail@plt+0x2554>
   138ac:	mov	r3, #0
   138b0:	b	13988 <__assert_fail@plt+0x2628>
   138b4:	ldr	r3, [fp, #-8]
   138b8:	ldrd	r2, [r3]
   138bc:	ldr	r1, [fp, #-12]
   138c0:	strd	r2, [r1]
   138c4:	ldr	r3, [fp, #-8]
   138c8:	ldrd	r2, [r3, #96]	; 0x60
   138cc:	ldr	r1, [fp, #-12]
   138d0:	strd	r2, [r1, #8]
   138d4:	ldr	r3, [fp, #-12]
   138d8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   138dc:	str	r2, [r3, #16]
   138e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   138e4:	ldr	r3, [r3, #56]	; 0x38
   138e8:	ldr	r1, [fp, #-12]
   138ec:	mov	r0, r3
   138f0:	bl	18450 <__assert_fail@plt+0x70f0>
   138f4:	str	r0, [fp, #-16]
   138f8:	ldr	r2, [fp, #-16]
   138fc:	ldr	r3, [fp, #-12]
   13900:	cmp	r2, r3
   13904:	beq	13984 <__assert_fail@plt+0x2624>
   13908:	ldr	r0, [fp, #-12]
   1390c:	bl	1360c <__assert_fail@plt+0x22ac>
   13910:	ldr	r3, [fp, #-16]
   13914:	cmp	r3, #0
   13918:	bne	13924 <__assert_fail@plt+0x25c4>
   1391c:	mov	r3, #0
   13920:	b	13988 <__assert_fail@plt+0x2628>
   13924:	ldr	r3, [fp, #-16]
   13928:	ldr	r2, [r3, #16]
   1392c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13930:	str	r2, [r3]
   13934:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13938:	mov	r2, #2
   1393c:	strh	r2, [r3, #56]	; 0x38
   13940:	b	13984 <__assert_fail@plt+0x2624>
   13944:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13948:	ldr	r2, [r3, #56]	; 0x38
   1394c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13950:	add	r3, r3, #64	; 0x40
   13954:	mov	r1, r3
   13958:	mov	r0, r2
   1395c:	bl	1dbe4 <__assert_fail@plt+0xc884>
   13960:	mov	r3, r0
   13964:	cmp	r3, #0
   13968:	beq	13984 <__assert_fail@plt+0x2624>
   1396c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13970:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13974:	str	r2, [r3]
   13978:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1397c:	mov	r2, #2
   13980:	strh	r2, [r3, #56]	; 0x38
   13984:	mov	r3, #1
   13988:	mov	r0, r3
   1398c:	sub	sp, fp, #4
   13990:	ldr	fp, [sp]
   13994:	add	sp, sp, #4
   13998:	pop	{pc}		; (ldr pc, [sp], #4)
   1399c:	str	fp, [sp, #-8]!
   139a0:	str	lr, [sp, #4]
   139a4:	add	fp, sp, #4
   139a8:	sub	sp, sp, #48	; 0x30
   139ac:	str	r0, [fp, #-48]	; 0xffffffd0
   139b0:	str	r1, [fp, #-52]	; 0xffffffcc
   139b4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   139b8:	add	r3, r3, #64	; 0x40
   139bc:	str	r3, [fp, #-8]
   139c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   139c4:	ldr	r2, [r3, #48]	; 0x30
   139c8:	movw	r3, #258	; 0x102
   139cc:	and	r3, r3, r2
   139d0:	cmp	r3, #0
   139d4:	beq	13a28 <__assert_fail@plt+0x26c8>
   139d8:	ldr	r3, [fp, #-8]
   139dc:	ldrd	r2, [r3]
   139e0:	strd	r2, [fp, #-44]	; 0xffffffd4
   139e4:	ldr	r3, [fp, #-8]
   139e8:	ldrd	r2, [r3, #96]	; 0x60
   139ec:	strd	r2, [fp, #-36]	; 0xffffffdc
   139f0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   139f4:	ldr	r3, [r3, #56]	; 0x38
   139f8:	sub	r2, fp, #44	; 0x2c
   139fc:	mov	r1, r2
   13a00:	mov	r0, r3
   13a04:	bl	184c0 <__assert_fail@plt+0x7160>
   13a08:	str	r0, [fp, #-12]
   13a0c:	ldr	r3, [fp, #-12]
   13a10:	cmp	r3, #0
   13a14:	bne	13a1c <__assert_fail@plt+0x26bc>
   13a18:	bl	11318 <abort@plt>
   13a1c:	ldr	r0, [fp, #-12]
   13a20:	bl	1360c <__assert_fail@plt+0x22ac>
   13a24:	b	13ad0 <__assert_fail@plt+0x2770>
   13a28:	ldr	r3, [fp, #-52]	; 0xffffffcc
   13a2c:	ldr	r3, [r3, #4]
   13a30:	str	r3, [fp, #-16]
   13a34:	ldr	r3, [fp, #-16]
   13a38:	cmp	r3, #0
   13a3c:	beq	13ad0 <__assert_fail@plt+0x2770>
   13a40:	ldr	r3, [fp, #-16]
   13a44:	ldr	r3, [r3, #48]	; 0x30
   13a48:	cmp	r3, #0
   13a4c:	blt	13ad0 <__assert_fail@plt+0x2770>
   13a50:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13a54:	ldr	r3, [r3, #56]	; 0x38
   13a58:	ldrd	r2, [r3, #16]
   13a5c:	orrs	r3, r2, r3
   13a60:	bne	13a68 <__assert_fail@plt+0x2708>
   13a64:	bl	11318 <abort@plt>
   13a68:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13a6c:	ldr	r3, [r3, #56]	; 0x38
   13a70:	ldrd	r0, [r3]
   13a74:	ldr	r3, [fp, #-8]
   13a78:	ldrd	r2, [r3, #96]	; 0x60
   13a7c:	cmp	r1, r3
   13a80:	cmpeq	r0, r2
   13a84:	bne	13ad0 <__assert_fail@plt+0x2770>
   13a88:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13a8c:	ldr	r3, [r3, #56]	; 0x38
   13a90:	ldrd	r0, [r3, #8]
   13a94:	ldr	r3, [fp, #-8]
   13a98:	ldrd	r2, [r3]
   13a9c:	cmp	r1, r3
   13aa0:	cmpeq	r0, r2
   13aa4:	bne	13ad0 <__assert_fail@plt+0x2770>
   13aa8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13aac:	ldr	r1, [r3, #56]	; 0x38
   13ab0:	ldr	r3, [fp, #-16]
   13ab4:	ldrd	r2, [r3, #64]	; 0x40
   13ab8:	strd	r2, [r1, #8]
   13abc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13ac0:	ldr	r1, [r3, #56]	; 0x38
   13ac4:	ldr	r3, [fp, #-16]
   13ac8:	ldrd	r2, [r3, #160]	; 0xa0
   13acc:	strd	r2, [r1]
   13ad0:	nop	{0}
   13ad4:	sub	sp, fp, #4
   13ad8:	ldr	fp, [sp]
   13adc:	add	sp, sp, #4
   13ae0:	pop	{pc}		; (ldr pc, [sp], #4)
   13ae4:	str	fp, [sp, #-8]!
   13ae8:	str	lr, [sp, #4]
   13aec:	add	fp, sp, #4
   13af0:	sub	sp, sp, #8
   13af4:	str	r0, [fp, #-8]
   13af8:	ldr	r3, [fp, #-8]
   13afc:	ldr	r2, [r3, #48]	; 0x30
   13b00:	movw	r3, #258	; 0x102
   13b04:	and	r3, r3, r2
   13b08:	cmp	r3, #0
   13b0c:	beq	13b34 <__assert_fail@plt+0x27d4>
   13b10:	ldr	r3, [fp, #-8]
   13b14:	ldr	r3, [r3, #56]	; 0x38
   13b18:	cmp	r3, #0
   13b1c:	beq	13b44 <__assert_fail@plt+0x27e4>
   13b20:	ldr	r3, [fp, #-8]
   13b24:	ldr	r3, [r3, #56]	; 0x38
   13b28:	mov	r0, r3
   13b2c:	bl	17998 <__assert_fail@plt+0x6638>
   13b30:	b	13b44 <__assert_fail@plt+0x27e4>
   13b34:	ldr	r3, [fp, #-8]
   13b38:	ldr	r3, [r3, #56]	; 0x38
   13b3c:	mov	r0, r3
   13b40:	bl	1360c <__assert_fail@plt+0x22ac>
   13b44:	nop	{0}
   13b48:	sub	sp, fp, #4
   13b4c:	ldr	fp, [sp]
   13b50:	add	sp, sp, #4
   13b54:	pop	{pc}		; (ldr pc, [sp], #4)
   13b58:	str	fp, [sp, #-8]!
   13b5c:	str	lr, [sp, #4]
   13b60:	add	fp, sp, #4
   13b64:	sub	sp, sp, #16
   13b68:	str	r0, [fp, #-16]
   13b6c:	b	13b90 <__assert_fail@plt+0x2830>
   13b70:	ldr	r0, [fp, #-16]
   13b74:	bl	18854 <__assert_fail@plt+0x74f4>
   13b78:	str	r0, [fp, #-8]
   13b7c:	ldr	r3, [fp, #-8]
   13b80:	cmp	r3, #0
   13b84:	blt	13b90 <__assert_fail@plt+0x2830>
   13b88:	ldr	r0, [fp, #-8]
   13b8c:	bl	11324 <close@plt>
   13b90:	ldr	r0, [fp, #-16]
   13b94:	bl	1876c <__assert_fail@plt+0x740c>
   13b98:	mov	r3, r0
   13b9c:	eor	r3, r3, #1
   13ba0:	uxtb	r3, r3
   13ba4:	cmp	r3, #0
   13ba8:	bne	13b70 <__assert_fail@plt+0x2810>
   13bac:	nop	{0}
   13bb0:	sub	sp, fp, #4
   13bb4:	ldr	fp, [sp]
   13bb8:	add	sp, sp, #4
   13bbc:	pop	{pc}		; (ldr pc, [sp], #4)
   13bc0:	str	fp, [sp, #-8]!
   13bc4:	str	lr, [sp, #4]
   13bc8:	add	fp, sp, #4
   13bcc:	sub	sp, sp, #8
   13bd0:	str	r0, [fp, #-8]
   13bd4:	mov	r3, r1
   13bd8:	strb	r3, [fp, #-9]
   13bdc:	ldr	r3, [fp, #-8]
   13be0:	ldrh	r3, [r3, #56]	; 0x38
   13be4:	cmp	r3, #11
   13be8:	beq	13bf0 <__assert_fail@plt+0x2890>
   13bec:	bl	11318 <abort@plt>
   13bf0:	ldrb	r3, [fp, #-9]
   13bf4:	cmp	r3, #0
   13bf8:	beq	13c08 <__assert_fail@plt+0x28a8>
   13bfc:	mov	r2, #2
   13c00:	mov	r3, #0
   13c04:	b	13c10 <__assert_fail@plt+0x28b0>
   13c08:	mov	r2, #1
   13c0c:	mov	r3, #0
   13c10:	ldr	r1, [fp, #-8]
   13c14:	strd	r2, [r1, #112]	; 0x70
   13c18:	nop	{0}
   13c1c:	sub	sp, fp, #4
   13c20:	ldr	fp, [sp]
   13c24:	add	sp, sp, #4
   13c28:	pop	{pc}		; (ldr pc, [sp], #4)
   13c2c:	str	fp, [sp, #-8]!
   13c30:	str	lr, [sp, #4]
   13c34:	add	fp, sp, #4
   13c38:	sub	sp, sp, #24
   13c3c:	str	r0, [fp, #-16]
   13c40:	str	r1, [fp, #-20]	; 0xffffffec
   13c44:	mov	r3, r2
   13c48:	strb	r3, [fp, #-21]	; 0xffffffeb
   13c4c:	ldr	r3, [fp, #-16]
   13c50:	ldr	r3, [r3, #32]
   13c54:	str	r3, [fp, #-8]
   13c58:	ldr	r2, [fp, #-8]
   13c5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13c60:	cmp	r2, r3
   13c64:	bne	13c78 <__assert_fail@plt+0x2918>
   13c68:	ldr	r3, [fp, #-8]
   13c6c:	cmn	r3, #100	; 0x64
   13c70:	beq	13c78 <__assert_fail@plt+0x2918>
   13c74:	bl	11318 <abort@plt>
   13c78:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   13c7c:	cmp	r3, #0
   13c80:	beq	13cb4 <__assert_fail@plt+0x2954>
   13c84:	ldr	r3, [fp, #-16]
   13c88:	add	r3, r3, #60	; 0x3c
   13c8c:	ldr	r1, [fp, #-8]
   13c90:	mov	r0, r3
   13c94:	bl	18794 <__assert_fail@plt+0x7434>
   13c98:	str	r0, [fp, #-12]
   13c9c:	ldr	r3, [fp, #-12]
   13ca0:	cmp	r3, #0
   13ca4:	blt	13cdc <__assert_fail@plt+0x297c>
   13ca8:	ldr	r0, [fp, #-12]
   13cac:	bl	11324 <close@plt>
   13cb0:	b	13cdc <__assert_fail@plt+0x297c>
   13cb4:	ldr	r3, [fp, #-16]
   13cb8:	ldr	r3, [r3, #48]	; 0x30
   13cbc:	and	r3, r3, #4
   13cc0:	cmp	r3, #0
   13cc4:	bne	13cdc <__assert_fail@plt+0x297c>
   13cc8:	ldr	r3, [fp, #-8]
   13ccc:	cmp	r3, #0
   13cd0:	blt	13cdc <__assert_fail@plt+0x297c>
   13cd4:	ldr	r0, [fp, #-8]
   13cd8:	bl	11324 <close@plt>
   13cdc:	ldr	r3, [fp, #-16]
   13ce0:	ldr	r2, [fp, #-20]	; 0xffffffec
   13ce4:	str	r2, [r3, #32]
   13ce8:	nop	{0}
   13cec:	sub	sp, fp, #4
   13cf0:	ldr	fp, [sp]
   13cf4:	add	sp, sp, #4
   13cf8:	pop	{pc}		; (ldr pc, [sp], #4)
   13cfc:	str	fp, [sp, #-8]!
   13d00:	str	lr, [sp, #4]
   13d04:	add	fp, sp, #4
   13d08:	sub	sp, sp, #16
   13d0c:	str	r0, [fp, #-16]
   13d10:	ldr	r3, [fp, #-16]
   13d14:	ldr	r3, [r3, #48]	; 0x30
   13d18:	and	r3, r3, #4
   13d1c:	cmp	r3, #0
   13d20:	bne	13db0 <__assert_fail@plt+0x2a50>
   13d24:	ldr	r3, [fp, #-16]
   13d28:	ldr	r3, [r3, #48]	; 0x30
   13d2c:	and	r3, r3, #512	; 0x200
   13d30:	cmp	r3, #0
   13d34:	beq	13d70 <__assert_fail@plt+0x2a10>
   13d38:	ldr	r3, [fp, #-16]
   13d3c:	ldr	r3, [r3, #48]	; 0x30
   13d40:	and	r3, r3, #512	; 0x200
   13d44:	cmp	r3, #0
   13d48:	bne	13d58 <__assert_fail@plt+0x29f8>
   13d4c:	ldr	r3, [fp, #-16]
   13d50:	ldr	r3, [r3, #28]
   13d54:	b	13d5c <__assert_fail@plt+0x29fc>
   13d58:	mvn	r3, #99	; 0x63
   13d5c:	mov	r2, #1
   13d60:	mov	r1, r3
   13d64:	ldr	r0, [fp, #-16]
   13d68:	bl	13c2c <__assert_fail@plt+0x28cc>
   13d6c:	b	13db0 <__assert_fail@plt+0x2a50>
   13d70:	ldr	r3, [fp, #-16]
   13d74:	ldr	r3, [r3, #48]	; 0x30
   13d78:	and	r3, r3, #512	; 0x200
   13d7c:	cmp	r3, #0
   13d80:	bne	13d90 <__assert_fail@plt+0x2a30>
   13d84:	ldr	r3, [fp, #-16]
   13d88:	ldr	r3, [r3, #28]
   13d8c:	b	13d94 <__assert_fail@plt+0x2a34>
   13d90:	mvn	r3, #99	; 0x63
   13d94:	mov	r0, r3
   13d98:	bl	112d0 <fchdir@plt>
   13d9c:	mov	r3, r0
   13da0:	cmp	r3, #0
   13da4:	beq	13db0 <__assert_fail@plt+0x2a50>
   13da8:	mov	r3, #1
   13dac:	b	13db4 <__assert_fail@plt+0x2a54>
   13db0:	mov	r3, #0
   13db4:	str	r3, [fp, #-8]
   13db8:	ldr	r3, [fp, #-16]
   13dbc:	add	r3, r3, #60	; 0x3c
   13dc0:	mov	r0, r3
   13dc4:	bl	13b58 <__assert_fail@plt+0x27f8>
   13dc8:	ldr	r3, [fp, #-8]
   13dcc:	mov	r0, r3
   13dd0:	sub	sp, fp, #4
   13dd4:	ldr	fp, [sp]
   13dd8:	add	sp, sp, #4
   13ddc:	pop	{pc}		; (ldr pc, [sp], #4)
   13de0:	str	fp, [sp, #-8]!
   13de4:	str	lr, [sp, #4]
   13de8:	add	fp, sp, #4
   13dec:	sub	sp, sp, #16
   13df0:	str	r0, [fp, #-16]
   13df4:	str	r1, [fp, #-20]	; 0xffffffec
   13df8:	ldr	r3, [fp, #-16]
   13dfc:	ldr	r3, [r3, #48]	; 0x30
   13e00:	lsl	r3, r3, #11
   13e04:	and	r3, r3, #32768	; 0x8000
   13e08:	orr	r3, r3, #540672	; 0x84000
   13e0c:	orr	r3, r3, #2304	; 0x900
   13e10:	str	r3, [fp, #-8]
   13e14:	ldr	r3, [fp, #-16]
   13e18:	ldr	r3, [r3, #48]	; 0x30
   13e1c:	and	r3, r3, #512	; 0x200
   13e20:	cmp	r3, #0
   13e24:	beq	13e48 <__assert_fail@plt+0x2ae8>
   13e28:	ldr	r3, [fp, #-16]
   13e2c:	ldr	r3, [r3, #32]
   13e30:	ldr	r2, [fp, #-8]
   13e34:	ldr	r1, [fp, #-20]	; 0xffffffec
   13e38:	mov	r0, r3
   13e3c:	bl	189a4 <__assert_fail@plt+0x7644>
   13e40:	mov	r3, r0
   13e44:	b	13e58 <__assert_fail@plt+0x2af8>
   13e48:	ldr	r1, [fp, #-8]
   13e4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13e50:	bl	1e1fc <__assert_fail@plt+0xce9c>
   13e54:	mov	r3, r0
   13e58:	str	r3, [fp, #-12]
   13e5c:	ldr	r3, [fp, #-12]
   13e60:	mov	r0, r3
   13e64:	sub	sp, fp, #4
   13e68:	ldr	fp, [sp]
   13e6c:	add	sp, sp, #4
   13e70:	pop	{pc}		; (ldr pc, [sp], #4)
   13e74:	strd	r4, [sp, #-28]!	; 0xffffffe4
   13e78:	strd	r6, [sp, #8]
   13e7c:	str	r8, [sp, #16]
   13e80:	str	fp, [sp, #20]
   13e84:	str	lr, [sp, #24]
   13e88:	add	fp, sp, #24
   13e8c:	sub	sp, sp, #36	; 0x24
   13e90:	str	r0, [fp, #-56]	; 0xffffffc8
   13e94:	mov	r7, r1
   13e98:	str	r2, [fp, #-60]	; 0xffffffc4
   13e9c:	mov	r3, #0
   13ea0:	str	r3, [fp, #-32]	; 0xffffffe0
   13ea4:	mov	r3, #0
   13ea8:	str	r3, [fp, #-36]	; 0xffffffdc
   13eac:	bic	r3, r7, #4080	; 0xff0
   13eb0:	bic	r3, r3, #15
   13eb4:	cmp	r3, #0
   13eb8:	beq	13ed4 <__assert_fail@plt+0x2b74>
   13ebc:	bl	11228 <__errno_location@plt>
   13ec0:	mov	r2, r0
   13ec4:	mov	r3, #22
   13ec8:	str	r3, [r2]
   13ecc:	mov	r3, #0
   13ed0:	b	142f4 <__assert_fail@plt+0x2f94>
   13ed4:	and	r3, r7, #4
   13ed8:	cmp	r3, #0
   13edc:	beq	13f04 <__assert_fail@plt+0x2ba4>
   13ee0:	and	r3, r7, #512	; 0x200
   13ee4:	cmp	r3, #0
   13ee8:	beq	13f04 <__assert_fail@plt+0x2ba4>
   13eec:	bl	11228 <__errno_location@plt>
   13ef0:	mov	r2, r0
   13ef4:	mov	r3, #22
   13ef8:	str	r3, [r2]
   13efc:	mov	r3, #0
   13f00:	b	142f4 <__assert_fail@plt+0x2f94>
   13f04:	and	r3, r7, #18
   13f08:	cmp	r3, #0
   13f0c:	bne	13f28 <__assert_fail@plt+0x2bc8>
   13f10:	bl	11228 <__errno_location@plt>
   13f14:	mov	r2, r0
   13f18:	mov	r3, #22
   13f1c:	str	r3, [r2]
   13f20:	mov	r3, #0
   13f24:	b	142f4 <__assert_fail@plt+0x2f94>
   13f28:	mov	r1, #96	; 0x60
   13f2c:	mov	r0, #1
   13f30:	bl	1d44c <__assert_fail@plt+0xc0ec>
   13f34:	mov	r3, r0
   13f38:	mov	r4, r3
   13f3c:	cmp	r4, #0
   13f40:	bne	13f4c <__assert_fail@plt+0x2bec>
   13f44:	mov	r3, #0
   13f48:	b	142f4 <__assert_fail@plt+0x2f94>
   13f4c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13f50:	str	r3, [r4, #44]	; 0x2c
   13f54:	str	r7, [r4, #48]	; 0x30
   13f58:	ldr	r3, [r4, #48]	; 0x30
   13f5c:	and	r3, r3, #2
   13f60:	cmp	r3, #0
   13f64:	beq	13f80 <__assert_fail@plt+0x2c20>
   13f68:	ldr	r3, [r4, #48]	; 0x30
   13f6c:	orr	r3, r3, #4
   13f70:	str	r3, [r4, #48]	; 0x30
   13f74:	ldr	r3, [r4, #48]	; 0x30
   13f78:	bic	r3, r3, #512	; 0x200
   13f7c:	str	r3, [r4, #48]	; 0x30
   13f80:	mvn	r3, #99	; 0x63
   13f84:	str	r3, [r4, #32]
   13f88:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13f8c:	bl	16744 <__assert_fail@plt+0x53e4>
   13f90:	str	r0, [fp, #-44]	; 0xffffffd4
   13f94:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13f98:	cmp	r3, #4096	; 0x1000
   13f9c:	movcs	r3, r3
   13fa0:	movcc	r3, #4096	; 0x1000
   13fa4:	mov	r1, r3
   13fa8:	mov	r0, r4
   13fac:	bl	16518 <__assert_fail@plt+0x51b8>
   13fb0:	mov	r3, r0
   13fb4:	eor	r3, r3, #1
   13fb8:	uxtb	r3, r3
   13fbc:	cmp	r3, #0
   13fc0:	bne	142e4 <__assert_fail@plt+0x2f84>
   13fc4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13fc8:	ldr	r3, [r3]
   13fcc:	cmp	r3, #0
   13fd0:	beq	14004 <__assert_fail@plt+0x2ca4>
   13fd4:	mov	r2, #0
   13fd8:	movw	r1, #760	; 0x2f8
   13fdc:	movt	r1, #2
   13fe0:	mov	r0, r4
   13fe4:	bl	163e8 <__assert_fail@plt+0x5088>
   13fe8:	str	r0, [fp, #-32]	; 0xffffffe0
   13fec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13ff0:	cmp	r3, #0
   13ff4:	beq	142d0 <__assert_fail@plt+0x2f70>
   13ff8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13ffc:	mvn	r2, #0
   14000:	str	r2, [r3, #48]	; 0x30
   14004:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14008:	cmp	r3, #0
   1400c:	beq	14020 <__assert_fail@plt+0x2cc0>
   14010:	ldr	r3, [r4, #48]	; 0x30
   14014:	and	r3, r3, #1024	; 0x400
   14018:	cmp	r3, #0
   1401c:	beq	14028 <__assert_fail@plt+0x2cc8>
   14020:	mov	r3, #1
   14024:	b	1402c <__assert_fail@plt+0x2ccc>
   14028:	mov	r3, #0
   1402c:	strb	r3, [fp, #-45]	; 0xffffffd3
   14030:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   14034:	and	r3, r3, #1
   14038:	strb	r3, [fp, #-45]	; 0xffffffd3
   1403c:	mov	r6, #0
   14040:	mov	r8, #0
   14044:	b	141a4 <__assert_fail@plt+0x2e44>
   14048:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1404c:	ldr	r3, [r3]
   14050:	mov	r0, r3
   14054:	bl	111ec <strlen@plt>
   14058:	str	r0, [fp, #-40]	; 0xffffffd8
   1405c:	and	r3, r7, #2048	; 0x800
   14060:	cmp	r3, #0
   14064:	bne	140d4 <__assert_fail@plt+0x2d74>
   14068:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1406c:	ldr	r3, [r3]
   14070:	str	r3, [fp, #-52]	; 0xffffffcc
   14074:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14078:	cmp	r3, #2
   1407c:	bls	140d4 <__assert_fail@plt+0x2d74>
   14080:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14084:	sub	r3, r3, #1
   14088:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1408c:	add	r3, r2, r3
   14090:	ldrb	r3, [r3]
   14094:	cmp	r3, #47	; 0x2f
   14098:	bne	140d4 <__assert_fail@plt+0x2d74>
   1409c:	b	140ac <__assert_fail@plt+0x2d4c>
   140a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   140a4:	sub	r3, r3, #1
   140a8:	str	r3, [fp, #-40]	; 0xffffffd8
   140ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   140b0:	cmp	r3, #1
   140b4:	bls	140d4 <__assert_fail@plt+0x2d74>
   140b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   140bc:	sub	r3, r3, #2
   140c0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   140c4:	add	r3, r2, r3
   140c8:	ldrb	r3, [r3]
   140cc:	cmp	r3, #47	; 0x2f
   140d0:	beq	140a0 <__assert_fail@plt+0x2d40>
   140d4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   140d8:	ldr	r3, [r3]
   140dc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   140e0:	mov	r1, r3
   140e4:	mov	r0, r4
   140e8:	bl	163e8 <__assert_fail@plt+0x5088>
   140ec:	mov	r5, r0
   140f0:	cmp	r5, #0
   140f4:	beq	142a8 <__assert_fail@plt+0x2f48>
   140f8:	mov	r3, #0
   140fc:	str	r3, [r5, #48]	; 0x30
   14100:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14104:	str	r3, [r5, #4]
   14108:	add	r3, r5, #168	; 0xa8
   1410c:	str	r3, [r5, #24]
   14110:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   14114:	cmp	r3, #0
   14118:	beq	1413c <__assert_fail@plt+0x2ddc>
   1411c:	cmp	r6, #0
   14120:	beq	1413c <__assert_fail@plt+0x2ddc>
   14124:	mov	r3, #11
   14128:	strh	r3, [r5, #56]	; 0x38
   1412c:	mov	r1, #1
   14130:	mov	r0, r5
   14134:	bl	13bc0 <__assert_fail@plt+0x2860>
   14138:	b	14154 <__assert_fail@plt+0x2df4>
   1413c:	mov	r2, #0
   14140:	mov	r1, r5
   14144:	mov	r0, r4
   14148:	bl	16034 <__assert_fail@plt+0x4cd4>
   1414c:	mov	r3, r0
   14150:	strh	r3, [r5, #56]	; 0x38
   14154:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14158:	cmp	r3, #0
   1415c:	beq	1416c <__assert_fail@plt+0x2e0c>
   14160:	str	r6, [r5, #8]
   14164:	mov	r6, r5
   14168:	b	14194 <__assert_fail@plt+0x2e34>
   1416c:	mov	r3, #0
   14170:	str	r3, [r5, #8]
   14174:	cmp	r6, #0
   14178:	bne	14188 <__assert_fail@plt+0x2e28>
   1417c:	mov	r6, r5
   14180:	str	r6, [fp, #-36]	; 0xffffffdc
   14184:	b	14194 <__assert_fail@plt+0x2e34>
   14188:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1418c:	str	r5, [r3, #8]
   14190:	str	r5, [fp, #-36]	; 0xffffffdc
   14194:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14198:	add	r3, r3, #4
   1419c:	str	r3, [fp, #-56]	; 0xffffffc8
   141a0:	add	r8, r8, #1
   141a4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   141a8:	ldr	r3, [r3]
   141ac:	cmp	r3, #0
   141b0:	bne	14048 <__assert_fail@plt+0x2ce8>
   141b4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   141b8:	cmp	r3, #0
   141bc:	beq	141dc <__assert_fail@plt+0x2e7c>
   141c0:	cmp	r8, #1
   141c4:	bls	141dc <__assert_fail@plt+0x2e7c>
   141c8:	mov	r2, r8
   141cc:	mov	r1, r6
   141d0:	mov	r0, r4
   141d4:	bl	16284 <__assert_fail@plt+0x4f24>
   141d8:	mov	r6, r0
   141dc:	mov	r2, #0
   141e0:	movw	r1, #760	; 0x2f8
   141e4:	movt	r1, #2
   141e8:	mov	r0, r4
   141ec:	bl	163e8 <__assert_fail@plt+0x5088>
   141f0:	mov	r3, r0
   141f4:	str	r3, [r4]
   141f8:	ldr	r3, [r4]
   141fc:	cmp	r3, #0
   14200:	beq	142b0 <__assert_fail@plt+0x2f50>
   14204:	ldr	r3, [r4]
   14208:	str	r6, [r3, #8]
   1420c:	ldr	r3, [r4]
   14210:	mov	r2, #9
   14214:	strh	r2, [r3, #56]	; 0x38
   14218:	ldr	r3, [r4]
   1421c:	mov	r2, #1
   14220:	str	r2, [r3, #48]	; 0x30
   14224:	mov	r0, r4
   14228:	bl	13780 <__assert_fail@plt+0x2420>
   1422c:	mov	r3, r0
   14230:	eor	r3, r3, #1
   14234:	uxtb	r3, r3
   14238:	cmp	r3, #0
   1423c:	bne	142b8 <__assert_fail@plt+0x2f58>
   14240:	ldr	r3, [r4, #48]	; 0x30
   14244:	and	r3, r3, #4
   14248:	cmp	r3, #0
   1424c:	bne	14290 <__assert_fail@plt+0x2f30>
   14250:	ldr	r3, [r4, #48]	; 0x30
   14254:	and	r3, r3, #512	; 0x200
   14258:	cmp	r3, #0
   1425c:	bne	14290 <__assert_fail@plt+0x2f30>
   14260:	movw	r1, #764	; 0x2fc
   14264:	movt	r1, #2
   14268:	mov	r0, r4
   1426c:	bl	13de0 <__assert_fail@plt+0x2a80>
   14270:	mov	r3, r0
   14274:	str	r3, [r4, #28]
   14278:	ldr	r3, [r4, #28]
   1427c:	cmp	r3, #0
   14280:	bge	14290 <__assert_fail@plt+0x2f30>
   14284:	ldr	r3, [r4, #48]	; 0x30
   14288:	orr	r3, r3, #4
   1428c:	str	r3, [r4, #48]	; 0x30
   14290:	add	r3, r4, #60	; 0x3c
   14294:	mvn	r1, #0
   14298:	mov	r0, r3
   1429c:	bl	186e4 <__assert_fail@plt+0x7384>
   142a0:	mov	r3, r4
   142a4:	b	142f4 <__assert_fail@plt+0x2f94>
   142a8:	nop	{0}
   142ac:	b	142bc <__assert_fail@plt+0x2f5c>
   142b0:	nop	{0}
   142b4:	b	142bc <__assert_fail@plt+0x2f5c>
   142b8:	nop	{0}
   142bc:	mov	r0, r6
   142c0:	bl	164b8 <__assert_fail@plt+0x5158>
   142c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   142c8:	bl	1360c <__assert_fail@plt+0x22ac>
   142cc:	b	142d4 <__assert_fail@plt+0x2f74>
   142d0:	nop	{0}
   142d4:	ldr	r3, [r4, #24]
   142d8:	mov	r0, r3
   142dc:	bl	1360c <__assert_fail@plt+0x22ac>
   142e0:	b	142e8 <__assert_fail@plt+0x2f88>
   142e4:	nop	{0}
   142e8:	mov	r0, r4
   142ec:	bl	1360c <__assert_fail@plt+0x22ac>
   142f0:	mov	r3, #0
   142f4:	mov	r0, r3
   142f8:	sub	sp, fp, #24
   142fc:	ldrd	r4, [sp]
   14300:	ldrd	r6, [sp, #8]
   14304:	ldr	r8, [sp, #16]
   14308:	ldr	fp, [sp, #20]
   1430c:	add	sp, sp, #24
   14310:	pop	{pc}		; (ldr pc, [sp], #4)
   14314:	strd	r4, [sp, #-20]!	; 0xffffffec
   14318:	str	r6, [sp, #8]
   1431c:	str	fp, [sp, #12]
   14320:	str	lr, [sp, #16]
   14324:	add	fp, sp, #16
   14328:	sub	sp, sp, #12
   1432c:	str	r0, [fp, #-24]	; 0xffffffe8
   14330:	mov	r4, r1
   14334:	ldr	r3, [r4, #52]	; 0x34
   14338:	str	r3, [r4, #40]	; 0x28
   1433c:	ldr	r6, [r4, #40]	; 0x28
   14340:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14344:	ldr	r3, [r3, #24]
   14348:	add	r1, r4, #168	; 0xa8
   1434c:	add	r2, r6, #1
   14350:	mov	r0, r3
   14354:	bl	11078 <memmove@plt>
   14358:	add	r3, r4, #168	; 0xa8
   1435c:	mov	r1, #47	; 0x2f
   14360:	mov	r0, r3
   14364:	bl	11294 <strrchr@plt>
   14368:	mov	r5, r0
   1436c:	cmp	r5, #0
   14370:	beq	143b8 <__assert_fail@plt+0x3058>
   14374:	add	r3, r4, #168	; 0xa8
   14378:	cmp	r5, r3
   1437c:	bne	14390 <__assert_fail@plt+0x3030>
   14380:	add	r3, r5, #1
   14384:	ldrb	r3, [r3]
   14388:	cmp	r3, #0
   1438c:	beq	143b8 <__assert_fail@plt+0x3058>
   14390:	add	r5, r5, #1
   14394:	mov	r0, r5
   14398:	bl	111ec <strlen@plt>
   1439c:	mov	r6, r0
   143a0:	add	r3, r4, #168	; 0xa8
   143a4:	add	r2, r6, #1
   143a8:	mov	r1, r5
   143ac:	mov	r0, r3
   143b0:	bl	11078 <memmove@plt>
   143b4:	str	r6, [r4, #52]	; 0x34
   143b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   143bc:	ldr	r3, [r3, #24]
   143c0:	str	r3, [r4, #28]
   143c4:	ldr	r3, [r4, #28]
   143c8:	str	r3, [r4, #24]
   143cc:	nop	{0}
   143d0:	sub	sp, fp, #16
   143d4:	ldrd	r4, [sp]
   143d8:	ldr	r6, [sp, #8]
   143dc:	ldr	fp, [sp, #12]
   143e0:	add	sp, sp, #16
   143e4:	pop	{pc}		; (ldr pc, [sp], #4)
   143e8:	strd	r4, [sp, #-16]!
   143ec:	str	fp, [sp, #8]
   143f0:	str	lr, [sp, #12]
   143f4:	add	fp, sp, #12
   143f8:	sub	sp, sp, #16
   143fc:	str	r0, [fp, #-24]	; 0xffffffe8
   14400:	mov	r3, #0
   14404:	str	r3, [fp, #-16]
   14408:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1440c:	ldr	r3, [r3]
   14410:	cmp	r3, #0
   14414:	beq	14460 <__assert_fail@plt+0x3100>
   14418:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1441c:	ldr	r4, [r3]
   14420:	b	1444c <__assert_fail@plt+0x30ec>
   14424:	mov	r5, r4
   14428:	ldr	r3, [r4, #8]
   1442c:	cmp	r3, #0
   14430:	beq	1443c <__assert_fail@plt+0x30dc>
   14434:	ldr	r3, [r4, #8]
   14438:	b	14440 <__assert_fail@plt+0x30e0>
   1443c:	ldr	r3, [r4, #4]
   14440:	mov	r4, r3
   14444:	mov	r0, r5
   14448:	bl	1360c <__assert_fail@plt+0x22ac>
   1444c:	ldr	r3, [r4, #48]	; 0x30
   14450:	cmp	r3, #0
   14454:	bge	14424 <__assert_fail@plt+0x30c4>
   14458:	mov	r0, r4
   1445c:	bl	1360c <__assert_fail@plt+0x22ac>
   14460:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14464:	ldr	r3, [r3, #4]
   14468:	cmp	r3, #0
   1446c:	beq	14480 <__assert_fail@plt+0x3120>
   14470:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14474:	ldr	r3, [r3, #4]
   14478:	mov	r0, r3
   1447c:	bl	164b8 <__assert_fail@plt+0x5158>
   14480:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14484:	ldr	r3, [r3, #8]
   14488:	mov	r0, r3
   1448c:	bl	1360c <__assert_fail@plt+0x22ac>
   14490:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14494:	ldr	r3, [r3, #24]
   14498:	mov	r0, r3
   1449c:	bl	1360c <__assert_fail@plt+0x22ac>
   144a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   144a4:	ldr	r3, [r3, #48]	; 0x30
   144a8:	and	r3, r3, #512	; 0x200
   144ac:	cmp	r3, #0
   144b0:	beq	144f4 <__assert_fail@plt+0x3194>
   144b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   144b8:	ldr	r3, [r3, #32]
   144bc:	cmp	r3, #0
   144c0:	blt	1456c <__assert_fail@plt+0x320c>
   144c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   144c8:	ldr	r3, [r3, #32]
   144cc:	mov	r0, r3
   144d0:	bl	11324 <close@plt>
   144d4:	mov	r3, r0
   144d8:	cmp	r3, #0
   144dc:	beq	1456c <__assert_fail@plt+0x320c>
   144e0:	bl	11228 <__errno_location@plt>
   144e4:	mov	r3, r0
   144e8:	ldr	r3, [r3]
   144ec:	str	r3, [fp, #-16]
   144f0:	b	1456c <__assert_fail@plt+0x320c>
   144f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   144f8:	ldr	r3, [r3, #48]	; 0x30
   144fc:	and	r3, r3, #4
   14500:	cmp	r3, #0
   14504:	bne	1456c <__assert_fail@plt+0x320c>
   14508:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1450c:	ldr	r3, [r3, #28]
   14510:	mov	r0, r3
   14514:	bl	112d0 <fchdir@plt>
   14518:	mov	r3, r0
   1451c:	cmp	r3, #0
   14520:	beq	14534 <__assert_fail@plt+0x31d4>
   14524:	bl	11228 <__errno_location@plt>
   14528:	mov	r3, r0
   1452c:	ldr	r3, [r3]
   14530:	str	r3, [fp, #-16]
   14534:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14538:	ldr	r3, [r3, #28]
   1453c:	mov	r0, r3
   14540:	bl	11324 <close@plt>
   14544:	mov	r3, r0
   14548:	cmp	r3, #0
   1454c:	beq	1456c <__assert_fail@plt+0x320c>
   14550:	ldr	r3, [fp, #-16]
   14554:	cmp	r3, #0
   14558:	bne	1456c <__assert_fail@plt+0x320c>
   1455c:	bl	11228 <__errno_location@plt>
   14560:	mov	r3, r0
   14564:	ldr	r3, [r3]
   14568:	str	r3, [fp, #-16]
   1456c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14570:	add	r3, r3, #60	; 0x3c
   14574:	mov	r0, r3
   14578:	bl	13b58 <__assert_fail@plt+0x27f8>
   1457c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14580:	ldr	r3, [r3, #52]	; 0x34
   14584:	cmp	r3, #0
   14588:	beq	1459c <__assert_fail@plt+0x323c>
   1458c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14590:	ldr	r3, [r3, #52]	; 0x34
   14594:	mov	r0, r3
   14598:	bl	17998 <__assert_fail@plt+0x6638>
   1459c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   145a0:	bl	13ae4 <__assert_fail@plt+0x2784>
   145a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   145a8:	bl	1360c <__assert_fail@plt+0x22ac>
   145ac:	ldr	r3, [fp, #-16]
   145b0:	cmp	r3, #0
   145b4:	beq	145d0 <__assert_fail@plt+0x3270>
   145b8:	bl	11228 <__errno_location@plt>
   145bc:	mov	r2, r0
   145c0:	ldr	r3, [fp, #-16]
   145c4:	str	r3, [r2]
   145c8:	mvn	r3, #0
   145cc:	b	145d4 <__assert_fail@plt+0x3274>
   145d0:	mov	r3, #0
   145d4:	mov	r0, r3
   145d8:	sub	sp, fp, #12
   145dc:	ldrd	r4, [sp]
   145e0:	ldr	fp, [sp, #8]
   145e4:	add	sp, sp, #12
   145e8:	pop	{pc}		; (ldr pc, [sp], #4)
   145ec:	str	fp, [sp, #-8]!
   145f0:	str	lr, [sp, #4]
   145f4:	add	fp, sp, #4
   145f8:	sub	sp, sp, #24
   145fc:	str	r0, [fp, #-24]	; 0xffffffe8
   14600:	str	r1, [fp, #-28]	; 0xffffffe4
   14604:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14608:	str	r3, [fp, #-8]
   1460c:	ldr	r3, [fp, #-8]
   14610:	ldrd	r2, [r3]
   14614:	strd	r2, [fp, #-20]	; 0xffffffec
   14618:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1461c:	mov	r2, r3
   14620:	mov	r3, #0
   14624:	ldrd	r0, [fp, #-20]	; 0xffffffec
   14628:	bl	1ef14 <__assert_fail@plt+0xdbb4>
   1462c:	mov	r3, r2
   14630:	mov	r0, r3
   14634:	sub	sp, fp, #4
   14638:	ldr	fp, [sp]
   1463c:	add	sp, sp, #4
   14640:	pop	{pc}		; (ldr pc, [sp], #4)
   14644:	push	{fp}		; (str fp, [sp, #-4]!)
   14648:	add	fp, sp, #0
   1464c:	sub	sp, sp, #20
   14650:	str	r0, [fp, #-16]
   14654:	str	r1, [fp, #-20]	; 0xffffffec
   14658:	ldr	r3, [fp, #-16]
   1465c:	str	r3, [fp, #-8]
   14660:	ldr	r3, [fp, #-20]	; 0xffffffec
   14664:	str	r3, [fp, #-12]
   14668:	ldr	r3, [fp, #-8]
   1466c:	ldrd	r0, [r3]
   14670:	ldr	r3, [fp, #-12]
   14674:	ldrd	r2, [r3]
   14678:	cmp	r1, r3
   1467c:	cmpeq	r0, r2
   14680:	moveq	r3, #1
   14684:	movne	r3, #0
   14688:	uxtb	r3, r3
   1468c:	mov	r0, r3
   14690:	add	sp, fp, #0
   14694:	pop	{fp}		; (ldr fp, [sp], #4)
   14698:	bx	lr
   1469c:	str	fp, [sp, #-8]!
   146a0:	str	lr, [sp, #4]
   146a4:	add	fp, sp, #4
   146a8:	sub	sp, sp, #136	; 0x88
   146ac:	str	r0, [fp, #-128]	; 0xffffff80
   146b0:	str	r1, [fp, #-132]	; 0xffffff7c
   146b4:	ldr	r3, [fp, #-128]	; 0xffffff80
   146b8:	ldr	r3, [r3, #44]	; 0x2c
   146bc:	str	r3, [fp, #-12]
   146c0:	ldr	r3, [fp, #-12]
   146c4:	ldr	r3, [r3, #52]	; 0x34
   146c8:	str	r3, [fp, #-8]
   146cc:	ldr	r3, [fp, #-12]
   146d0:	ldr	r3, [r3, #48]	; 0x30
   146d4:	and	r3, r3, #512	; 0x200
   146d8:	cmp	r3, #0
   146dc:	bne	146e8 <__assert_fail@plt+0x3388>
   146e0:	mov	r3, #0
   146e4:	b	1482c <__assert_fail@plt+0x34cc>
   146e8:	ldr	r3, [fp, #-8]
   146ec:	cmp	r3, #0
   146f0:	bne	14738 <__assert_fail@plt+0x33d8>
   146f4:	movw	r3, #13836	; 0x360c
   146f8:	movt	r3, #1
   146fc:	str	r3, [sp]
   14700:	movw	r3, #17988	; 0x4644
   14704:	movt	r3, #1
   14708:	movw	r2, #17900	; 0x45ec
   1470c:	movt	r2, #1
   14710:	mov	r1, #0
   14714:	mov	r0, #13
   14718:	bl	176a4 <__assert_fail@plt+0x6344>
   1471c:	mov	r3, r0
   14720:	mov	r2, r3
   14724:	ldr	r3, [fp, #-12]
   14728:	str	r2, [r3, #52]	; 0x34
   1472c:	ldr	r3, [fp, #-12]
   14730:	ldr	r3, [r3, #52]	; 0x34
   14734:	str	r3, [fp, #-8]
   14738:	ldr	r3, [fp, #-8]
   1473c:	cmp	r3, #0
   14740:	beq	1477c <__assert_fail@plt+0x341c>
   14744:	ldr	r3, [fp, #-128]	; 0xffffff80
   14748:	ldrd	r2, [r3, #64]	; 0x40
   1474c:	strd	r2, [fp, #-124]	; 0xffffff84
   14750:	sub	r3, fp, #124	; 0x7c
   14754:	mov	r1, r3
   14758:	ldr	r0, [fp, #-8]
   1475c:	bl	16e00 <__assert_fail@plt+0x5aa0>
   14760:	str	r0, [fp, #-16]
   14764:	ldr	r3, [fp, #-16]
   14768:	cmp	r3, #0
   1476c:	beq	1477c <__assert_fail@plt+0x341c>
   14770:	ldr	r3, [fp, #-16]
   14774:	ldr	r3, [r3, #8]
   14778:	b	1482c <__assert_fail@plt+0x34cc>
   1477c:	ldr	r3, [fp, #-132]	; 0xffffff7c
   14780:	cmp	r3, #0
   14784:	blt	147a4 <__assert_fail@plt+0x3444>
   14788:	sub	r3, fp, #108	; 0x6c
   1478c:	mov	r1, r3
   14790:	ldr	r0, [fp, #-132]	; 0xffffff7c
   14794:	bl	11000 <fstatfs64@plt>
   14798:	mov	r3, r0
   1479c:	cmp	r3, #0
   147a0:	beq	147ac <__assert_fail@plt+0x344c>
   147a4:	mov	r3, #0
   147a8:	b	1482c <__assert_fail@plt+0x34cc>
   147ac:	ldr	r3, [fp, #-8]
   147b0:	cmp	r3, #0
   147b4:	beq	14828 <__assert_fail@plt+0x34c8>
   147b8:	mov	r0, #16
   147bc:	bl	1d51c <__assert_fail@plt+0xc1bc>
   147c0:	mov	r3, r0
   147c4:	str	r3, [fp, #-20]	; 0xffffffec
   147c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   147cc:	cmp	r3, #0
   147d0:	beq	14828 <__assert_fail@plt+0x34c8>
   147d4:	ldr	r3, [fp, #-128]	; 0xffffff80
   147d8:	ldrd	r2, [r3, #64]	; 0x40
   147dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   147e0:	strd	r2, [r1]
   147e4:	ldr	r2, [fp, #-108]	; 0xffffff94
   147e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   147ec:	str	r2, [r3, #8]
   147f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   147f4:	ldr	r0, [fp, #-8]
   147f8:	bl	18450 <__assert_fail@plt+0x70f0>
   147fc:	str	r0, [fp, #-16]
   14800:	ldr	r3, [fp, #-16]
   14804:	cmp	r3, #0
   14808:	beq	14820 <__assert_fail@plt+0x34c0>
   1480c:	ldr	r2, [fp, #-16]
   14810:	ldr	r3, [fp, #-20]	; 0xffffffec
   14814:	cmp	r2, r3
   14818:	beq	14828 <__assert_fail@plt+0x34c8>
   1481c:	bl	11318 <abort@plt>
   14820:	ldr	r0, [fp, #-20]	; 0xffffffec
   14824:	bl	1360c <__assert_fail@plt+0x22ac>
   14828:	ldr	r3, [fp, #-108]	; 0xffffff94
   1482c:	mov	r0, r3
   14830:	sub	sp, fp, #4
   14834:	ldr	fp, [sp]
   14838:	add	sp, sp, #4
   1483c:	pop	{pc}		; (ldr pc, [sp], #4)
   14840:	str	fp, [sp, #-8]!
   14844:	str	lr, [sp, #4]
   14848:	add	fp, sp, #4
   1484c:	sub	sp, sp, #8
   14850:	str	r0, [fp, #-8]
   14854:	str	r1, [fp, #-12]
   14858:	ldr	r1, [fp, #-12]
   1485c:	ldr	r0, [fp, #-8]
   14860:	bl	1469c <__assert_fail@plt+0x333c>
   14864:	mov	r2, r0
   14868:	movw	r3, #26985	; 0x6969
   1486c:	cmp	r2, r3
   14870:	beq	14894 <__assert_fail@plt+0x3534>
   14874:	movw	r3, #6548	; 0x1994
   14878:	movt	r3, #258	; 0x102
   1487c:	cmp	r2, r3
   14880:	beq	14894 <__assert_fail@plt+0x3534>
   14884:	movw	r3, #19778	; 0x4d42
   14888:	movt	r3, #65363	; 0xff53
   1488c:	cmp	r2, r3
   14890:	bne	1489c <__assert_fail@plt+0x353c>
   14894:	mov	r3, #0
   14898:	b	148a0 <__assert_fail@plt+0x3540>
   1489c:	mov	r3, #1
   148a0:	mov	r0, r3
   148a4:	sub	sp, fp, #4
   148a8:	ldr	fp, [sp]
   148ac:	add	sp, sp, #4
   148b0:	pop	{pc}		; (ldr pc, [sp], #4)
   148b4:	str	fp, [sp, #-8]!
   148b8:	str	lr, [sp, #4]
   148bc:	add	fp, sp, #4
   148c0:	sub	sp, sp, #8
   148c4:	str	r0, [fp, #-8]
   148c8:	str	r1, [fp, #-12]
   148cc:	ldr	r1, [fp, #-12]
   148d0:	ldr	r0, [fp, #-8]
   148d4:	bl	1469c <__assert_fail@plt+0x333c>
   148d8:	mov	r3, r0
   148dc:	movw	r2, #26985	; 0x6969
   148e0:	cmp	r3, r2
   148e4:	beq	1492c <__assert_fail@plt+0x35cc>
   148e8:	movw	r2, #26985	; 0x6969
   148ec:	cmp	r3, r2
   148f0:	bgt	14910 <__assert_fail@plt+0x35b0>
   148f4:	movw	r2, #19778	; 0x4d42
   148f8:	movt	r2, #65363	; 0xff53
   148fc:	cmp	r3, r2
   14900:	beq	1492c <__assert_fail@plt+0x35cc>
   14904:	cmp	r3, #0
   14908:	beq	1492c <__assert_fail@plt+0x35cc>
   1490c:	b	14934 <__assert_fail@plt+0x35d4>
   14910:	movw	r2, #40864	; 0x9fa0
   14914:	cmp	r3, r2
   14918:	beq	1492c <__assert_fail@plt+0x35cc>
   1491c:	movw	r2, #16719	; 0x414f
   14920:	movt	r2, #21318	; 0x5346
   14924:	cmp	r3, r2
   14928:	bne	14934 <__assert_fail@plt+0x35d4>
   1492c:	mov	r3, #0
   14930:	b	14938 <__assert_fail@plt+0x35d8>
   14934:	mov	r3, #1
   14938:	mov	r0, r3
   1493c:	sub	sp, fp, #4
   14940:	ldr	fp, [sp]
   14944:	add	sp, sp, #4
   14948:	pop	{pc}		; (ldr pc, [sp], #4)
   1494c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14950:	strd	r6, [sp, #8]
   14954:	str	fp, [sp, #16]
   14958:	str	lr, [sp, #20]
   1495c:	add	fp, sp, #20
   14960:	mov	r5, r0
   14964:	ldr	r3, [r5]
   14968:	cmp	r3, #0
   1496c:	beq	14980 <__assert_fail@plt+0x3620>
   14970:	ldr	r3, [r5, #48]	; 0x30
   14974:	and	r3, r3, #8192	; 0x2000
   14978:	cmp	r3, #0
   1497c:	beq	14988 <__assert_fail@plt+0x3628>
   14980:	mov	r3, #0
   14984:	b	150dc <__assert_fail@plt+0x3d7c>
   14988:	ldr	r4, [r5]
   1498c:	ldrh	r6, [r4, #60]	; 0x3c
   14990:	mov	r3, #3
   14994:	strh	r3, [r4, #60]	; 0x3c
   14998:	cmp	r6, #1
   1499c:	bne	149c0 <__assert_fail@plt+0x3660>
   149a0:	mov	r2, #0
   149a4:	mov	r1, r4
   149a8:	mov	r0, r5
   149ac:	bl	16034 <__assert_fail@plt+0x4cd4>
   149b0:	mov	r3, r0
   149b4:	strh	r3, [r4, #56]	; 0x38
   149b8:	mov	r3, r4
   149bc:	b	150dc <__assert_fail@plt+0x3d7c>
   149c0:	cmp	r6, #2
   149c4:	bne	14a68 <__assert_fail@plt+0x3708>
   149c8:	ldrh	r3, [r4, #56]	; 0x38
   149cc:	cmp	r3, #12
   149d0:	beq	149e0 <__assert_fail@plt+0x3680>
   149d4:	ldrh	r3, [r4, #56]	; 0x38
   149d8:	cmp	r3, #13
   149dc:	bne	14a68 <__assert_fail@plt+0x3708>
   149e0:	mov	r2, #1
   149e4:	mov	r1, r4
   149e8:	mov	r0, r5
   149ec:	bl	16034 <__assert_fail@plt+0x4cd4>
   149f0:	mov	r3, r0
   149f4:	strh	r3, [r4, #56]	; 0x38
   149f8:	ldrh	r3, [r4, #56]	; 0x38
   149fc:	cmp	r3, #1
   14a00:	bne	14e28 <__assert_fail@plt+0x3ac8>
   14a04:	ldr	r3, [r5, #48]	; 0x30
   14a08:	and	r3, r3, #4
   14a0c:	cmp	r3, #0
   14a10:	bne	14e28 <__assert_fail@plt+0x3ac8>
   14a14:	movw	r1, #764	; 0x2fc
   14a18:	movt	r1, #2
   14a1c:	mov	r0, r5
   14a20:	bl	13de0 <__assert_fail@plt+0x2a80>
   14a24:	mov	r3, r0
   14a28:	str	r3, [r4, #36]	; 0x24
   14a2c:	ldr	r3, [r4, #36]	; 0x24
   14a30:	cmp	r3, #0
   14a34:	bge	14a54 <__assert_fail@plt+0x36f4>
   14a38:	bl	11228 <__errno_location@plt>
   14a3c:	mov	r3, r0
   14a40:	ldr	r3, [r3]
   14a44:	str	r3, [r4, #32]
   14a48:	mov	r3, #7
   14a4c:	strh	r3, [r4, #56]	; 0x38
   14a50:	b	14e28 <__assert_fail@plt+0x3ac8>
   14a54:	ldrh	r3, [r4, #58]	; 0x3a
   14a58:	orr	r3, r3, #2
   14a5c:	uxth	r3, r3
   14a60:	strh	r3, [r4, #58]	; 0x3a
   14a64:	b	14e28 <__assert_fail@plt+0x3ac8>
   14a68:	ldrh	r3, [r4, #56]	; 0x38
   14a6c:	cmp	r3, #1
   14a70:	bne	14c20 <__assert_fail@plt+0x38c0>
   14a74:	cmp	r6, #4
   14a78:	beq	14aa0 <__assert_fail@plt+0x3740>
   14a7c:	ldr	r3, [r5, #48]	; 0x30
   14a80:	and	r3, r3, #64	; 0x40
   14a84:	cmp	r3, #0
   14a88:	beq	14af8 <__assert_fail@plt+0x3798>
   14a8c:	ldrd	r0, [r4, #64]	; 0x40
   14a90:	ldrd	r2, [r5, #16]
   14a94:	cmp	r1, r3
   14a98:	cmpeq	r0, r2
   14a9c:	beq	14af8 <__assert_fail@plt+0x3798>
   14aa0:	ldrh	r3, [r4, #58]	; 0x3a
   14aa4:	and	r3, r3, #2
   14aa8:	cmp	r3, #0
   14aac:	beq	14abc <__assert_fail@plt+0x375c>
   14ab0:	ldr	r3, [r4, #36]	; 0x24
   14ab4:	mov	r0, r3
   14ab8:	bl	11324 <close@plt>
   14abc:	ldr	r3, [r5, #4]
   14ac0:	cmp	r3, #0
   14ac4:	beq	14adc <__assert_fail@plt+0x377c>
   14ac8:	ldr	r3, [r5, #4]
   14acc:	mov	r0, r3
   14ad0:	bl	164b8 <__assert_fail@plt+0x5158>
   14ad4:	mov	r3, #0
   14ad8:	str	r3, [r5, #4]
   14adc:	mov	r3, #6
   14ae0:	strh	r3, [r4, #56]	; 0x38
   14ae4:	mov	r1, r4
   14ae8:	mov	r0, r5
   14aec:	bl	1399c <__assert_fail@plt+0x263c>
   14af0:	mov	r3, r4
   14af4:	b	150dc <__assert_fail@plt+0x3d7c>
   14af8:	ldr	r3, [r5, #4]
   14afc:	cmp	r3, #0
   14b00:	beq	14b34 <__assert_fail@plt+0x37d4>
   14b04:	ldr	r3, [r5, #48]	; 0x30
   14b08:	and	r3, r3, #4096	; 0x1000
   14b0c:	cmp	r3, #0
   14b10:	beq	14b34 <__assert_fail@plt+0x37d4>
   14b14:	ldr	r3, [r5, #48]	; 0x30
   14b18:	bic	r3, r3, #4096	; 0x1000
   14b1c:	str	r3, [r5, #48]	; 0x30
   14b20:	ldr	r3, [r5, #4]
   14b24:	mov	r0, r3
   14b28:	bl	164b8 <__assert_fail@plt+0x5158>
   14b2c:	mov	r3, #0
   14b30:	str	r3, [r5, #4]
   14b34:	ldr	r3, [r5, #4]
   14b38:	cmp	r3, #0
   14b3c:	beq	14ba4 <__assert_fail@plt+0x3844>
   14b40:	ldr	r3, [r4, #24]
   14b44:	mvn	r2, #0
   14b48:	mov	r1, r4
   14b4c:	mov	r0, r5
   14b50:	bl	167c8 <__assert_fail@plt+0x5468>
   14b54:	mov	r3, r0
   14b58:	cmp	r3, #0
   14b5c:	beq	14c10 <__assert_fail@plt+0x38b0>
   14b60:	bl	11228 <__errno_location@plt>
   14b64:	mov	r3, r0
   14b68:	ldr	r3, [r3]
   14b6c:	str	r3, [r4, #32]
   14b70:	ldrh	r3, [r4, #58]	; 0x3a
   14b74:	orr	r3, r3, #1
   14b78:	uxth	r3, r3
   14b7c:	strh	r3, [r4, #58]	; 0x3a
   14b80:	ldr	r4, [r5, #4]
   14b84:	b	14b98 <__assert_fail@plt+0x3838>
   14b88:	ldr	r3, [r4, #4]
   14b8c:	ldr	r3, [r3, #24]
   14b90:	str	r3, [r4, #24]
   14b94:	ldr	r4, [r4, #8]
   14b98:	cmp	r4, #0
   14b9c:	bne	14b88 <__assert_fail@plt+0x3828>
   14ba0:	b	14c10 <__assert_fail@plt+0x38b0>
   14ba4:	mov	r1, #3
   14ba8:	mov	r0, r5
   14bac:	bl	154e0 <__assert_fail@plt+0x4180>
   14bb0:	mov	r3, r0
   14bb4:	str	r3, [r5, #4]
   14bb8:	ldr	r3, [r5, #4]
   14bbc:	cmp	r3, #0
   14bc0:	bne	14c10 <__assert_fail@plt+0x38b0>
   14bc4:	ldr	r3, [r5, #48]	; 0x30
   14bc8:	and	r3, r3, #8192	; 0x2000
   14bcc:	cmp	r3, #0
   14bd0:	beq	14bdc <__assert_fail@plt+0x387c>
   14bd4:	mov	r3, #0
   14bd8:	b	150dc <__assert_fail@plt+0x3d7c>
   14bdc:	ldr	r3, [r4, #32]
   14be0:	cmp	r3, #0
   14be4:	beq	14bfc <__assert_fail@plt+0x389c>
   14be8:	ldrh	r3, [r4, #56]	; 0x38
   14bec:	cmp	r3, #4
   14bf0:	beq	14bfc <__assert_fail@plt+0x389c>
   14bf4:	mov	r3, #7
   14bf8:	strh	r3, [r4, #56]	; 0x38
   14bfc:	mov	r1, r4
   14c00:	mov	r0, r5
   14c04:	bl	1399c <__assert_fail@plt+0x263c>
   14c08:	mov	r3, r4
   14c0c:	b	150dc <__assert_fail@plt+0x3d7c>
   14c10:	ldr	r4, [r5, #4]
   14c14:	mov	r3, #0
   14c18:	str	r3, [r5, #4]
   14c1c:	b	14db8 <__assert_fail@plt+0x3a58>
   14c20:	nop	{0}
   14c24:	mov	r6, r4
   14c28:	ldr	r3, [r4, #8]
   14c2c:	cmp	r3, #0
   14c30:	bne	14c9c <__assert_fail@plt+0x393c>
   14c34:	ldr	r3, [r4, #4]
   14c38:	ldr	r3, [r3, #12]
   14c3c:	cmp	r3, #0
   14c40:	beq	14c9c <__assert_fail@plt+0x393c>
   14c44:	ldr	r4, [r6, #4]
   14c48:	str	r4, [r5]
   14c4c:	ldr	r2, [r5, #24]
   14c50:	ldr	r3, [r4, #40]	; 0x28
   14c54:	add	r3, r2, r3
   14c58:	mov	r2, #0
   14c5c:	strb	r2, [r3]
   14c60:	mov	r1, #3
   14c64:	mov	r0, r5
   14c68:	bl	154e0 <__assert_fail@plt+0x4180>
   14c6c:	mov	r4, r0
   14c70:	cmp	r4, #0
   14c74:	bne	14c90 <__assert_fail@plt+0x3930>
   14c78:	ldr	r3, [r5, #48]	; 0x30
   14c7c:	and	r3, r3, #8192	; 0x2000
   14c80:	cmp	r3, #0
   14c84:	beq	14edc <__assert_fail@plt+0x3b7c>
   14c88:	mov	r3, #0
   14c8c:	b	150dc <__assert_fail@plt+0x3d7c>
   14c90:	mov	r0, r6
   14c94:	bl	1360c <__assert_fail@plt+0x22ac>
   14c98:	b	14db8 <__assert_fail@plt+0x3a58>
   14c9c:	ldr	r4, [r4, #8]
   14ca0:	cmp	r4, #0
   14ca4:	beq	14ee4 <__assert_fail@plt+0x3b84>
   14ca8:	str	r4, [r5]
   14cac:	mov	r0, r6
   14cb0:	bl	1360c <__assert_fail@plt+0x22ac>
   14cb4:	ldr	r3, [r4, #48]	; 0x30
   14cb8:	cmp	r3, #0
   14cbc:	bne	14d08 <__assert_fail@plt+0x39a8>
   14cc0:	mov	r0, r5
   14cc4:	bl	13cfc <__assert_fail@plt+0x299c>
   14cc8:	mov	r3, r0
   14ccc:	cmp	r3, #0
   14cd0:	beq	14ce8 <__assert_fail@plt+0x3988>
   14cd4:	ldr	r3, [r5, #48]	; 0x30
   14cd8:	orr	r3, r3, #8192	; 0x2000
   14cdc:	str	r3, [r5, #48]	; 0x30
   14ce0:	mov	r3, #0
   14ce4:	b	150dc <__assert_fail@plt+0x3d7c>
   14ce8:	mov	r0, r5
   14cec:	bl	13ae4 <__assert_fail@plt+0x2784>
   14cf0:	mov	r1, r4
   14cf4:	mov	r0, r5
   14cf8:	bl	14314 <__assert_fail@plt+0x2fb4>
   14cfc:	mov	r0, r5
   14d00:	bl	13780 <__assert_fail@plt+0x2420>
   14d04:	b	14e2c <__assert_fail@plt+0x3acc>
   14d08:	ldrh	r3, [r4, #60]	; 0x3c
   14d0c:	cmp	r3, #4
   14d10:	bne	14d18 <__assert_fail@plt+0x39b8>
   14d14:	b	14c24 <__assert_fail@plt+0x38c4>
   14d18:	ldrh	r3, [r4, #60]	; 0x3c
   14d1c:	cmp	r3, #2
   14d20:	bne	14db4 <__assert_fail@plt+0x3a54>
   14d24:	mov	r2, #1
   14d28:	mov	r1, r4
   14d2c:	mov	r0, r5
   14d30:	bl	16034 <__assert_fail@plt+0x4cd4>
   14d34:	mov	r3, r0
   14d38:	strh	r3, [r4, #56]	; 0x38
   14d3c:	ldrh	r3, [r4, #56]	; 0x38
   14d40:	cmp	r3, #1
   14d44:	bne	14da8 <__assert_fail@plt+0x3a48>
   14d48:	ldr	r3, [r5, #48]	; 0x30
   14d4c:	and	r3, r3, #4
   14d50:	cmp	r3, #0
   14d54:	bne	14da8 <__assert_fail@plt+0x3a48>
   14d58:	movw	r1, #764	; 0x2fc
   14d5c:	movt	r1, #2
   14d60:	mov	r0, r5
   14d64:	bl	13de0 <__assert_fail@plt+0x2a80>
   14d68:	mov	r3, r0
   14d6c:	str	r3, [r4, #36]	; 0x24
   14d70:	ldr	r3, [r4, #36]	; 0x24
   14d74:	cmp	r3, #0
   14d78:	bge	14d98 <__assert_fail@plt+0x3a38>
   14d7c:	bl	11228 <__errno_location@plt>
   14d80:	mov	r3, r0
   14d84:	ldr	r3, [r3]
   14d88:	str	r3, [r4, #32]
   14d8c:	mov	r3, #7
   14d90:	strh	r3, [r4, #56]	; 0x38
   14d94:	b	14da8 <__assert_fail@plt+0x3a48>
   14d98:	ldrh	r3, [r4, #58]	; 0x3a
   14d9c:	orr	r3, r3, #2
   14da0:	uxth	r3, r3
   14da4:	strh	r3, [r4, #58]	; 0x3a
   14da8:	mov	r3, #3
   14dac:	strh	r3, [r4, #60]	; 0x3c
   14db0:	b	14db8 <__assert_fail@plt+0x3a58>
   14db4:	nop	{0}
   14db8:	ldr	r2, [r5, #24]
   14dbc:	ldr	r3, [r4, #4]
   14dc0:	ldr	r1, [r3, #28]
   14dc4:	ldr	r3, [r4, #4]
   14dc8:	ldr	r3, [r3, #40]	; 0x28
   14dcc:	sub	r3, r3, #1
   14dd0:	add	r3, r1, r3
   14dd4:	ldrb	r3, [r3]
   14dd8:	cmp	r3, #47	; 0x2f
   14ddc:	bne	14df0 <__assert_fail@plt+0x3a90>
   14de0:	ldr	r3, [r4, #4]
   14de4:	ldr	r3, [r3, #40]	; 0x28
   14de8:	sub	r3, r3, #1
   14dec:	b	14df8 <__assert_fail@plt+0x3a98>
   14df0:	ldr	r3, [r4, #4]
   14df4:	ldr	r3, [r3, #40]	; 0x28
   14df8:	add	r6, r2, r3
   14dfc:	mov	r3, r6
   14e00:	add	r6, r3, #1
   14e04:	mov	r2, #47	; 0x2f
   14e08:	strb	r2, [r3]
   14e0c:	add	r1, r4, #168	; 0xa8
   14e10:	ldr	r3, [r4, #52]	; 0x34
   14e14:	add	r3, r3, #1
   14e18:	mov	r2, r3
   14e1c:	mov	r0, r6
   14e20:	bl	11078 <memmove@plt>
   14e24:	b	14e2c <__assert_fail@plt+0x3acc>
   14e28:	nop	{0}
   14e2c:	str	r4, [r5]
   14e30:	ldrh	r3, [r4, #56]	; 0x38
   14e34:	cmp	r3, #11
   14e38:	bne	14e7c <__assert_fail@plt+0x3b1c>
   14e3c:	ldrd	r2, [r4, #112]	; 0x70
   14e40:	cmp	r3, #0
   14e44:	cmpeq	r2, #2
   14e48:	bne	14e68 <__assert_fail@plt+0x3b08>
   14e4c:	mov	r2, #0
   14e50:	mov	r1, r4
   14e54:	mov	r0, r5
   14e58:	bl	16034 <__assert_fail@plt+0x4cd4>
   14e5c:	mov	r3, r0
   14e60:	strh	r3, [r4, #56]	; 0x38
   14e64:	b	14e7c <__assert_fail@plt+0x3b1c>
   14e68:	ldrd	r2, [r4, #112]	; 0x70
   14e6c:	cmp	r3, #0
   14e70:	cmpeq	r2, #1
   14e74:	beq	14e7c <__assert_fail@plt+0x3b1c>
   14e78:	bl	11318 <abort@plt>
   14e7c:	ldrh	r3, [r4, #56]	; 0x38
   14e80:	cmp	r3, #1
   14e84:	bne	14ed4 <__assert_fail@plt+0x3b74>
   14e88:	ldr	r3, [r4, #48]	; 0x30
   14e8c:	cmp	r3, #0
   14e90:	bne	14e9c <__assert_fail@plt+0x3b3c>
   14e94:	ldrd	r2, [r4, #64]	; 0x40
   14e98:	strd	r2, [r5, #16]
   14e9c:	mov	r1, r4
   14ea0:	mov	r0, r5
   14ea4:	bl	13854 <__assert_fail@plt+0x24f4>
   14ea8:	mov	r3, r0
   14eac:	eor	r3, r3, #1
   14eb0:	uxtb	r3, r3
   14eb4:	cmp	r3, #0
   14eb8:	beq	14ed4 <__assert_fail@plt+0x3b74>
   14ebc:	bl	11228 <__errno_location@plt>
   14ec0:	mov	r2, r0
   14ec4:	mov	r3, #12
   14ec8:	str	r3, [r2]
   14ecc:	mov	r3, #0
   14ed0:	b	150dc <__assert_fail@plt+0x3d7c>
   14ed4:	mov	r3, r4
   14ed8:	b	150dc <__assert_fail@plt+0x3d7c>
   14edc:	nop	{0}
   14ee0:	b	14ee8 <__assert_fail@plt+0x3b88>
   14ee4:	nop	{0}
   14ee8:	ldr	r4, [r6, #4]
   14eec:	str	r4, [r5]
   14ef0:	mov	r0, r6
   14ef4:	bl	1360c <__assert_fail@plt+0x22ac>
   14ef8:	ldr	r3, [r4, #48]	; 0x30
   14efc:	cmn	r3, #1
   14f00:	bne	14f2c <__assert_fail@plt+0x3bcc>
   14f04:	mov	r0, r4
   14f08:	bl	1360c <__assert_fail@plt+0x22ac>
   14f0c:	bl	11228 <__errno_location@plt>
   14f10:	mov	r2, r0
   14f14:	mov	r3, #0
   14f18:	str	r3, [r2]
   14f1c:	mov	r3, #0
   14f20:	str	r3, [r5]
   14f24:	mov	r3, #0
   14f28:	b	150dc <__assert_fail@plt+0x3d7c>
   14f2c:	ldrh	r3, [r4, #56]	; 0x38
   14f30:	cmp	r3, #11
   14f34:	bne	14f3c <__assert_fail@plt+0x3bdc>
   14f38:	bl	11318 <abort@plt>
   14f3c:	ldr	r2, [r5, #24]
   14f40:	ldr	r3, [r4, #40]	; 0x28
   14f44:	add	r3, r2, r3
   14f48:	mov	r2, #0
   14f4c:	strb	r2, [r3]
   14f50:	ldr	r3, [r4, #48]	; 0x30
   14f54:	cmp	r3, #0
   14f58:	bne	14f90 <__assert_fail@plt+0x3c30>
   14f5c:	mov	r0, r5
   14f60:	bl	13cfc <__assert_fail@plt+0x299c>
   14f64:	mov	r3, r0
   14f68:	cmp	r3, #0
   14f6c:	beq	15080 <__assert_fail@plt+0x3d20>
   14f70:	bl	11228 <__errno_location@plt>
   14f74:	mov	r3, r0
   14f78:	ldr	r3, [r3]
   14f7c:	str	r3, [r4, #32]
   14f80:	ldr	r3, [r5, #48]	; 0x30
   14f84:	orr	r3, r3, #8192	; 0x2000
   14f88:	str	r3, [r5, #48]	; 0x30
   14f8c:	b	15080 <__assert_fail@plt+0x3d20>
   14f90:	ldrh	r3, [r4, #58]	; 0x3a
   14f94:	and	r3, r3, #2
   14f98:	cmp	r3, #0
   14f9c:	beq	15030 <__assert_fail@plt+0x3cd0>
   14fa0:	ldr	r3, [r5, #48]	; 0x30
   14fa4:	and	r3, r3, #4
   14fa8:	cmp	r3, #0
   14fac:	bne	15020 <__assert_fail@plt+0x3cc0>
   14fb0:	ldr	r3, [r5, #48]	; 0x30
   14fb4:	and	r3, r3, #512	; 0x200
   14fb8:	cmp	r3, #0
   14fbc:	beq	14fdc <__assert_fail@plt+0x3c7c>
   14fc0:	ldr	r3, [r4, #36]	; 0x24
   14fc4:	mov	r2, #1
   14fc8:	mov	r1, r3
   14fcc:	mov	r0, r5
   14fd0:	bl	13c2c <__assert_fail@plt+0x28cc>
   14fd4:	mov	r3, #0
   14fd8:	b	14ffc <__assert_fail@plt+0x3c9c>
   14fdc:	ldr	r3, [r4, #36]	; 0x24
   14fe0:	mov	r0, r3
   14fe4:	bl	112d0 <fchdir@plt>
   14fe8:	mov	r3, r0
   14fec:	cmp	r3, #0
   14ff0:	movne	r3, #1
   14ff4:	moveq	r3, #0
   14ff8:	uxtb	r3, r3
   14ffc:	cmp	r3, #0
   15000:	beq	15020 <__assert_fail@plt+0x3cc0>
   15004:	bl	11228 <__errno_location@plt>
   15008:	mov	r3, r0
   1500c:	ldr	r3, [r3]
   15010:	str	r3, [r4, #32]
   15014:	ldr	r3, [r5, #48]	; 0x30
   15018:	orr	r3, r3, #8192	; 0x2000
   1501c:	str	r3, [r5, #48]	; 0x30
   15020:	ldr	r3, [r4, #36]	; 0x24
   15024:	mov	r0, r3
   15028:	bl	11324 <close@plt>
   1502c:	b	15080 <__assert_fail@plt+0x3d20>
   15030:	ldrh	r3, [r4, #58]	; 0x3a
   15034:	and	r3, r3, #1
   15038:	cmp	r3, #0
   1503c:	bne	15080 <__assert_fail@plt+0x3d20>
   15040:	ldr	r1, [r4, #4]
   15044:	movw	r3, #768	; 0x300
   15048:	movt	r3, #2
   1504c:	mvn	r2, #0
   15050:	mov	r0, r5
   15054:	bl	167c8 <__assert_fail@plt+0x5468>
   15058:	mov	r3, r0
   1505c:	cmp	r3, #0
   15060:	beq	15080 <__assert_fail@plt+0x3d20>
   15064:	bl	11228 <__errno_location@plt>
   15068:	mov	r3, r0
   1506c:	ldr	r3, [r3]
   15070:	str	r3, [r4, #32]
   15074:	ldr	r3, [r5, #48]	; 0x30
   15078:	orr	r3, r3, #8192	; 0x2000
   1507c:	str	r3, [r5, #48]	; 0x30
   15080:	ldrh	r3, [r4, #56]	; 0x38
   15084:	cmp	r3, #2
   15088:	beq	150c0 <__assert_fail@plt+0x3d60>
   1508c:	ldr	r3, [r4, #32]
   15090:	cmp	r3, #0
   15094:	beq	150a0 <__assert_fail@plt+0x3d40>
   15098:	mov	r3, #7
   1509c:	b	150a4 <__assert_fail@plt+0x3d44>
   150a0:	mov	r3, #6
   150a4:	strh	r3, [r4, #56]	; 0x38
   150a8:	ldr	r3, [r4, #32]
   150ac:	cmp	r3, #0
   150b0:	bne	150c0 <__assert_fail@plt+0x3d60>
   150b4:	mov	r1, r4
   150b8:	mov	r0, r5
   150bc:	bl	1399c <__assert_fail@plt+0x263c>
   150c0:	ldr	r3, [r5, #48]	; 0x30
   150c4:	and	r3, r3, #8192	; 0x2000
   150c8:	cmp	r3, #0
   150cc:	bne	150d8 <__assert_fail@plt+0x3d78>
   150d0:	mov	r3, r4
   150d4:	b	150dc <__assert_fail@plt+0x3d7c>
   150d8:	mov	r3, #0
   150dc:	mov	r0, r3
   150e0:	sub	sp, fp, #20
   150e4:	ldrd	r4, [sp]
   150e8:	ldrd	r6, [sp, #8]
   150ec:	ldr	fp, [sp, #16]
   150f0:	add	sp, sp, #20
   150f4:	pop	{pc}		; (ldr pc, [sp], #4)
   150f8:	str	fp, [sp, #-8]!
   150fc:	str	lr, [sp, #4]
   15100:	add	fp, sp, #4
   15104:	sub	sp, sp, #16
   15108:	str	r0, [fp, #-8]
   1510c:	str	r1, [fp, #-12]
   15110:	str	r2, [fp, #-16]
   15114:	ldr	r3, [fp, #-16]
   15118:	cmp	r3, #0
   1511c:	beq	15168 <__assert_fail@plt+0x3e08>
   15120:	ldr	r3, [fp, #-16]
   15124:	cmp	r3, #1
   15128:	beq	15168 <__assert_fail@plt+0x3e08>
   1512c:	ldr	r3, [fp, #-16]
   15130:	cmp	r3, #2
   15134:	beq	15168 <__assert_fail@plt+0x3e08>
   15138:	ldr	r3, [fp, #-16]
   1513c:	cmp	r3, #3
   15140:	beq	15168 <__assert_fail@plt+0x3e08>
   15144:	ldr	r3, [fp, #-16]
   15148:	cmp	r3, #4
   1514c:	beq	15168 <__assert_fail@plt+0x3e08>
   15150:	bl	11228 <__errno_location@plt>
   15154:	mov	r2, r0
   15158:	mov	r3, #22
   1515c:	str	r3, [r2]
   15160:	mov	r3, #1
   15164:	b	1517c <__assert_fail@plt+0x3e1c>
   15168:	ldr	r3, [fp, #-16]
   1516c:	uxth	r2, r3
   15170:	ldr	r3, [fp, #-12]
   15174:	strh	r2, [r3, #60]	; 0x3c
   15178:	mov	r3, #0
   1517c:	mov	r0, r3
   15180:	sub	sp, fp, #4
   15184:	ldr	fp, [sp]
   15188:	add	sp, sp, #4
   1518c:	pop	{pc}		; (ldr pc, [sp], #4)
   15190:	strd	r4, [sp, #-16]!
   15194:	str	fp, [sp, #8]
   15198:	str	lr, [sp, #12]
   1519c:	add	fp, sp, #12
   151a0:	sub	sp, sp, #16
   151a4:	mov	r4, r0
   151a8:	str	r1, [fp, #-24]	; 0xffffffe8
   151ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   151b0:	cmp	r3, #0
   151b4:	beq	151dc <__assert_fail@plt+0x3e7c>
   151b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   151bc:	cmp	r3, #4096	; 0x1000
   151c0:	beq	151dc <__assert_fail@plt+0x3e7c>
   151c4:	bl	11228 <__errno_location@plt>
   151c8:	mov	r2, r0
   151cc:	mov	r3, #22
   151d0:	str	r3, [r2]
   151d4:	mov	r3, #0
   151d8:	b	15374 <__assert_fail@plt+0x4014>
   151dc:	ldr	r5, [r4]
   151e0:	bl	11228 <__errno_location@plt>
   151e4:	mov	r2, r0
   151e8:	mov	r3, #0
   151ec:	str	r3, [r2]
   151f0:	ldr	r3, [r4, #48]	; 0x30
   151f4:	and	r3, r3, #8192	; 0x2000
   151f8:	cmp	r3, #0
   151fc:	beq	15208 <__assert_fail@plt+0x3ea8>
   15200:	mov	r3, #0
   15204:	b	15374 <__assert_fail@plt+0x4014>
   15208:	ldrh	r3, [r5, #56]	; 0x38
   1520c:	cmp	r3, #9
   15210:	bne	1521c <__assert_fail@plt+0x3ebc>
   15214:	ldr	r3, [r5, #8]
   15218:	b	15374 <__assert_fail@plt+0x4014>
   1521c:	ldrh	r3, [r5, #56]	; 0x38
   15220:	cmp	r3, #1
   15224:	beq	15230 <__assert_fail@plt+0x3ed0>
   15228:	mov	r3, #0
   1522c:	b	15374 <__assert_fail@plt+0x4014>
   15230:	ldr	r3, [r4, #4]
   15234:	cmp	r3, #0
   15238:	beq	15248 <__assert_fail@plt+0x3ee8>
   1523c:	ldr	r3, [r4, #4]
   15240:	mov	r0, r3
   15244:	bl	164b8 <__assert_fail@plt+0x5158>
   15248:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1524c:	cmp	r3, #4096	; 0x1000
   15250:	bne	1526c <__assert_fail@plt+0x3f0c>
   15254:	ldr	r3, [r4, #48]	; 0x30
   15258:	orr	r3, r3, #4096	; 0x1000
   1525c:	str	r3, [r4, #48]	; 0x30
   15260:	mov	r3, #2
   15264:	str	r3, [fp, #-24]	; 0xffffffe8
   15268:	b	15274 <__assert_fail@plt+0x3f14>
   1526c:	mov	r3, #1
   15270:	str	r3, [fp, #-24]	; 0xffffffe8
   15274:	ldr	r3, [r5, #48]	; 0x30
   15278:	cmp	r3, #0
   1527c:	bne	152a0 <__assert_fail@plt+0x3f40>
   15280:	ldr	r3, [r5, #24]
   15284:	ldrb	r3, [r3]
   15288:	cmp	r3, #47	; 0x2f
   1528c:	beq	152a0 <__assert_fail@plt+0x3f40>
   15290:	ldr	r3, [r4, #48]	; 0x30
   15294:	and	r3, r3, #4
   15298:	cmp	r3, #0
   1529c:	beq	152bc <__assert_fail@plt+0x3f5c>
   152a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   152a4:	mov	r0, r4
   152a8:	bl	154e0 <__assert_fail@plt+0x4180>
   152ac:	mov	r3, r0
   152b0:	str	r3, [r4, #4]
   152b4:	ldr	r3, [r4, #4]
   152b8:	b	15374 <__assert_fail@plt+0x4014>
   152bc:	movw	r1, #764	; 0x2fc
   152c0:	movt	r1, #2
   152c4:	mov	r0, r4
   152c8:	bl	13de0 <__assert_fail@plt+0x2a80>
   152cc:	str	r0, [fp, #-16]
   152d0:	ldr	r3, [fp, #-16]
   152d4:	cmp	r3, #0
   152d8:	bge	152ec <__assert_fail@plt+0x3f8c>
   152dc:	mov	r3, #0
   152e0:	str	r3, [r4, #4]
   152e4:	mov	r3, #0
   152e8:	b	15374 <__assert_fail@plt+0x4014>
   152ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   152f0:	mov	r0, r4
   152f4:	bl	154e0 <__assert_fail@plt+0x4180>
   152f8:	mov	r3, r0
   152fc:	str	r3, [r4, #4]
   15300:	ldr	r3, [r4, #48]	; 0x30
   15304:	and	r3, r3, #512	; 0x200
   15308:	cmp	r3, #0
   1530c:	beq	15324 <__assert_fail@plt+0x3fc4>
   15310:	mov	r2, #1
   15314:	ldr	r1, [fp, #-16]
   15318:	mov	r0, r4
   1531c:	bl	13c2c <__assert_fail@plt+0x28cc>
   15320:	b	15370 <__assert_fail@plt+0x4010>
   15324:	ldr	r0, [fp, #-16]
   15328:	bl	112d0 <fchdir@plt>
   1532c:	mov	r3, r0
   15330:	cmp	r3, #0
   15334:	beq	15368 <__assert_fail@plt+0x4008>
   15338:	bl	11228 <__errno_location@plt>
   1533c:	mov	r3, r0
   15340:	ldr	r3, [r3]
   15344:	str	r3, [fp, #-20]	; 0xffffffec
   15348:	ldr	r0, [fp, #-16]
   1534c:	bl	11324 <close@plt>
   15350:	bl	11228 <__errno_location@plt>
   15354:	mov	r2, r0
   15358:	ldr	r3, [fp, #-20]	; 0xffffffec
   1535c:	str	r3, [r2]
   15360:	mov	r3, #0
   15364:	b	15374 <__assert_fail@plt+0x4014>
   15368:	ldr	r0, [fp, #-16]
   1536c:	bl	11324 <close@plt>
   15370:	ldr	r3, [r4, #4]
   15374:	mov	r0, r3
   15378:	sub	sp, fp, #12
   1537c:	ldrd	r4, [sp]
   15380:	ldr	fp, [sp, #8]
   15384:	add	sp, sp, #12
   15388:	pop	{pc}		; (ldr pc, [sp], #4)
   1538c:	push	{fp}		; (str fp, [sp, #-4]!)
   15390:	add	fp, sp, #0
   15394:	sub	sp, sp, #12
   15398:	str	r0, [fp, #-8]
   1539c:	str	r1, [fp, #-12]
   153a0:	ldr	r3, [fp, #-8]
   153a4:	ldr	r3, [r3]
   153a8:	ldrd	r0, [r3, #160]	; 0xa0
   153ac:	ldr	r3, [fp, #-12]
   153b0:	ldr	r3, [r3]
   153b4:	ldrd	r2, [r3, #160]	; 0xa0
   153b8:	cmp	r1, r3
   153bc:	cmpeq	r0, r2
   153c0:	movhi	r3, #1
   153c4:	movls	r3, #0
   153c8:	uxtb	r3, r3
   153cc:	mov	ip, r3
   153d0:	ldr	r3, [fp, #-8]
   153d4:	ldr	r3, [r3]
   153d8:	ldrd	r0, [r3, #160]	; 0xa0
   153dc:	ldr	r3, [fp, #-12]
   153e0:	ldr	r3, [r3]
   153e4:	ldrd	r2, [r3, #160]	; 0xa0
   153e8:	cmp	r1, r3
   153ec:	cmpeq	r0, r2
   153f0:	movcc	r3, #1
   153f4:	movcs	r3, #0
   153f8:	uxtb	r3, r3
   153fc:	sub	r3, ip, r3
   15400:	mov	r0, r3
   15404:	add	sp, fp, #0
   15408:	pop	{fp}		; (ldr fp, [sp], #4)
   1540c:	bx	lr
   15410:	push	{fp}		; (str fp, [sp, #-4]!)
   15414:	add	fp, sp, #0
   15418:	sub	sp, sp, #20
   1541c:	str	r0, [fp, #-16]
   15420:	str	r1, [fp, #-20]	; 0xffffffec
   15424:	ldr	r3, [fp, #-20]	; 0xffffffec
   15428:	sub	r3, r3, #1
   1542c:	cmp	r3, #11
   15430:	ldrls	pc, [pc, r3, lsl #2]
   15434:	b	154bc <__assert_fail@plt+0x415c>
   15438:	andeq	r5, r1, ip, lsl #9
   1543c:	andeq	r5, r1, r4, ror r4
   15440:			; <UNDEFINED> instruction: 0x000154bc
   15444:	andeq	r5, r1, r0, lsl #9
   15448:			; <UNDEFINED> instruction: 0x000154bc
   1544c:	andeq	r5, r1, r8, ror #8
   15450:			; <UNDEFINED> instruction: 0x000154bc
   15454:	andeq	r5, r1, r4, lsr #9
   15458:			; <UNDEFINED> instruction: 0x000154bc
   1545c:	muleq	r1, r8, r4
   15460:			; <UNDEFINED> instruction: 0x000154bc
   15464:			; <UNDEFINED> instruction: 0x000154b0
   15468:	mov	r3, #24576	; 0x6000
   1546c:	str	r3, [fp, #-8]
   15470:	b	154c4 <__assert_fail@plt+0x4164>
   15474:	mov	r3, #8192	; 0x2000
   15478:	str	r3, [fp, #-8]
   1547c:	b	154c4 <__assert_fail@plt+0x4164>
   15480:	mov	r3, #16384	; 0x4000
   15484:	str	r3, [fp, #-8]
   15488:	b	154c4 <__assert_fail@plt+0x4164>
   1548c:	mov	r3, #4096	; 0x1000
   15490:	str	r3, [fp, #-8]
   15494:	b	154c4 <__assert_fail@plt+0x4164>
   15498:	mov	r3, #40960	; 0xa000
   1549c:	str	r3, [fp, #-8]
   154a0:	b	154c4 <__assert_fail@plt+0x4164>
   154a4:	mov	r3, #32768	; 0x8000
   154a8:	str	r3, [fp, #-8]
   154ac:	b	154c4 <__assert_fail@plt+0x4164>
   154b0:	mov	r3, #49152	; 0xc000
   154b4:	str	r3, [fp, #-8]
   154b8:	b	154c4 <__assert_fail@plt+0x4164>
   154bc:	mov	r3, #0
   154c0:	str	r3, [fp, #-8]
   154c4:	ldr	r3, [fp, #-16]
   154c8:	ldr	r2, [fp, #-8]
   154cc:	str	r2, [r3, #16]
   154d0:	nop	{0}
   154d4:	add	sp, fp, #0
   154d8:	pop	{fp}		; (ldr fp, [sp], #4)
   154dc:	bx	lr
   154e0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   154e4:	strd	r6, [sp, #8]
   154e8:	str	fp, [sp, #16]
   154ec:	str	lr, [sp, #20]
   154f0:	add	fp, sp, #20
   154f4:	sub	sp, sp, #80	; 0x50
   154f8:	mov	r4, r0
   154fc:	str	r1, [fp, #-96]	; 0xffffffa0
   15500:	ldr	r3, [r4]
   15504:	str	r3, [fp, #-44]	; 0xffffffd4
   15508:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1550c:	ldr	r3, [r3, #12]
   15510:	cmp	r3, #0
   15514:	movne	r3, #1
   15518:	moveq	r3, #0
   1551c:	strb	r3, [fp, #-45]	; 0xffffffd3
   15520:	mov	r3, #0
   15524:	strb	r3, [fp, #-37]	; 0xffffffdb
   15528:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   1552c:	cmp	r3, #0
   15530:	beq	155ac <__assert_fail@plt+0x424c>
   15534:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15538:	ldr	r3, [r3, #12]
   1553c:	str	r3, [fp, #-52]	; 0xffffffcc
   15540:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15544:	bl	112c4 <dirfd@plt>
   15548:	mov	r3, r0
   1554c:	str	r3, [fp, #-92]	; 0xffffffa4
   15550:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15554:	cmp	r3, #0
   15558:	bge	15710 <__assert_fail@plt+0x43b0>
   1555c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15560:	ldr	r3, [r3, #12]
   15564:	mov	r0, r3
   15568:	bl	1133c <closedir@plt>
   1556c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15570:	mov	r2, #0
   15574:	str	r2, [r3, #12]
   15578:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1557c:	cmp	r3, #3
   15580:	bne	155a4 <__assert_fail@plt+0x4244>
   15584:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15588:	mov	r2, #4
   1558c:	strh	r2, [r3, #56]	; 0x38
   15590:	bl	11228 <__errno_location@plt>
   15594:	mov	r3, r0
   15598:	ldr	r2, [r3]
   1559c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   155a0:	str	r2, [r3, #32]
   155a4:	mov	r3, #0
   155a8:	b	16018 <__assert_fail@plt+0x4cb8>
   155ac:	ldr	r3, [r4, #48]	; 0x30
   155b0:	and	r3, r3, #4
   155b4:	cmp	r3, #0
   155b8:	bne	155d4 <__assert_fail@plt+0x4274>
   155bc:	ldr	r3, [r4, #48]	; 0x30
   155c0:	and	r3, r3, #512	; 0x200
   155c4:	cmp	r3, #0
   155c8:	beq	155d4 <__assert_fail@plt+0x4274>
   155cc:	ldr	r0, [r4, #32]
   155d0:	b	155d8 <__assert_fail@plt+0x4278>
   155d4:	mvn	r0, #99	; 0x63
   155d8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   155dc:	ldr	r1, [r3, #24]
   155e0:	ldr	r3, [r4, #48]	; 0x30
   155e4:	and	r3, r3, #16
   155e8:	cmp	r3, #0
   155ec:	beq	15618 <__assert_fail@plt+0x42b8>
   155f0:	ldr	r3, [r4, #48]	; 0x30
   155f4:	and	r3, r3, #1
   155f8:	cmp	r3, #0
   155fc:	beq	15610 <__assert_fail@plt+0x42b0>
   15600:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15604:	ldr	r3, [r3, #48]	; 0x30
   15608:	cmp	r3, #0
   1560c:	beq	15618 <__assert_fail@plt+0x42b8>
   15610:	mov	r2, #32768	; 0x8000
   15614:	b	1561c <__assert_fail@plt+0x42bc>
   15618:	mov	r2, #0
   1561c:	sub	r3, fp, #92	; 0x5c
   15620:	bl	18a34 <__assert_fail@plt+0x76d4>
   15624:	mov	r3, r0
   15628:	mov	r2, r3
   1562c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15630:	str	r2, [r3, #12]
   15634:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15638:	ldr	r3, [r3, #12]
   1563c:	cmp	r3, #0
   15640:	bne	15678 <__assert_fail@plt+0x4318>
   15644:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15648:	cmp	r3, #3
   1564c:	bne	15670 <__assert_fail@plt+0x4310>
   15650:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15654:	mov	r2, #4
   15658:	strh	r2, [r3, #56]	; 0x38
   1565c:	bl	11228 <__errno_location@plt>
   15660:	mov	r3, r0
   15664:	ldr	r2, [r3]
   15668:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1566c:	str	r2, [r3, #32]
   15670:	mov	r3, #0
   15674:	b	16018 <__assert_fail@plt+0x4cb8>
   15678:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1567c:	ldrh	r3, [r3, #56]	; 0x38
   15680:	cmp	r3, #11
   15684:	bne	156ac <__assert_fail@plt+0x434c>
   15688:	mov	r2, #0
   1568c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15690:	mov	r0, r4
   15694:	bl	16034 <__assert_fail@plt+0x4cd4>
   15698:	mov	r3, r0
   1569c:	mov	r2, r3
   156a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   156a4:	strh	r2, [r3, #56]	; 0x38
   156a8:	b	15710 <__assert_fail@plt+0x43b0>
   156ac:	ldr	r3, [r4, #48]	; 0x30
   156b0:	and	r3, r3, #256	; 0x100
   156b4:	cmp	r3, #0
   156b8:	beq	15710 <__assert_fail@plt+0x43b0>
   156bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   156c0:	mov	r0, r4
   156c4:	bl	1399c <__assert_fail@plt+0x263c>
   156c8:	mov	r2, #0
   156cc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   156d0:	mov	r0, r4
   156d4:	bl	16034 <__assert_fail@plt+0x4cd4>
   156d8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   156dc:	mov	r0, r4
   156e0:	bl	13854 <__assert_fail@plt+0x24f4>
   156e4:	mov	r3, r0
   156e8:	eor	r3, r3, #1
   156ec:	uxtb	r3, r3
   156f0:	cmp	r3, #0
   156f4:	beq	15710 <__assert_fail@plt+0x43b0>
   156f8:	bl	11228 <__errno_location@plt>
   156fc:	mov	r2, r0
   15700:	mov	r3, #12
   15704:	str	r3, [r2]
   15708:	mov	r3, #0
   1570c:	b	16018 <__assert_fail@plt+0x4cb8>
   15710:	ldr	r3, [r4, #44]	; 0x2c
   15714:	cmp	r3, #0
   15718:	beq	15724 <__assert_fail@plt+0x43c4>
   1571c:	mvn	r3, #0
   15720:	b	1572c <__assert_fail@plt+0x43cc>
   15724:	movw	r3, #34464	; 0x86a0
   15728:	movt	r3, #1
   1572c:	str	r3, [fp, #-56]	; 0xffffffc8
   15730:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   15734:	cmp	r3, #0
   15738:	beq	15748 <__assert_fail@plt+0x43e8>
   1573c:	mov	r3, #1
   15740:	strb	r3, [fp, #-25]	; 0xffffffe7
   15744:	b	158e4 <__assert_fail@plt+0x4584>
   15748:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1574c:	cmp	r3, #2
   15750:	beq	157b8 <__assert_fail@plt+0x4458>
   15754:	ldr	r3, [r4, #48]	; 0x30
   15758:	and	r3, r3, #8
   1575c:	cmp	r3, #0
   15760:	beq	157b0 <__assert_fail@plt+0x4450>
   15764:	ldr	r3, [r4, #48]	; 0x30
   15768:	and	r3, r3, #16
   1576c:	cmp	r3, #0
   15770:	beq	157b0 <__assert_fail@plt+0x4450>
   15774:	ldr	r3, [r4, #48]	; 0x30
   15778:	and	r3, r3, #32
   1577c:	cmp	r3, #0
   15780:	bne	157b0 <__assert_fail@plt+0x4450>
   15784:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15788:	ldr	r3, [r3, #84]	; 0x54
   1578c:	cmp	r3, #2
   15790:	bne	157b0 <__assert_fail@plt+0x4450>
   15794:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15798:	mov	r1, r3
   1579c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   157a0:	bl	148b4 <__assert_fail@plt+0x3554>
   157a4:	mov	r3, r0
   157a8:	cmp	r3, #0
   157ac:	bne	157b8 <__assert_fail@plt+0x4458>
   157b0:	mov	r3, #1
   157b4:	b	157bc <__assert_fail@plt+0x445c>
   157b8:	mov	r3, #0
   157bc:	strb	r3, [fp, #-25]	; 0xffffffe7
   157c0:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   157c4:	and	r3, r3, #1
   157c8:	strb	r3, [fp, #-25]	; 0xffffffe7
   157cc:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   157d0:	cmp	r3, #0
   157d4:	bne	157e4 <__assert_fail@plt+0x4484>
   157d8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   157dc:	cmp	r3, #3
   157e0:	bne	158e4 <__assert_fail@plt+0x4584>
   157e4:	ldr	r3, [r4, #48]	; 0x30
   157e8:	and	r3, r3, #512	; 0x200
   157ec:	cmp	r3, #0
   157f0:	beq	15810 <__assert_fail@plt+0x44b0>
   157f4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   157f8:	mov	r2, #3
   157fc:	movw	r1, #1030	; 0x406
   15800:	mov	r0, r3
   15804:	bl	1de18 <__assert_fail@plt+0xcab8>
   15808:	mov	r3, r0
   1580c:	str	r3, [fp, #-92]	; 0xffffffa4
   15810:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15814:	cmp	r3, #0
   15818:	blt	1583c <__assert_fail@plt+0x44dc>
   1581c:	ldr	r2, [fp, #-92]	; 0xffffffa4
   15820:	mov	r3, #0
   15824:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15828:	mov	r0, r4
   1582c:	bl	167c8 <__assert_fail@plt+0x5468>
   15830:	mov	r3, r0
   15834:	cmp	r3, #0
   15838:	beq	158dc <__assert_fail@plt+0x457c>
   1583c:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   15840:	cmp	r3, #0
   15844:	beq	15868 <__assert_fail@plt+0x4508>
   15848:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1584c:	cmp	r3, #3
   15850:	bne	15868 <__assert_fail@plt+0x4508>
   15854:	bl	11228 <__errno_location@plt>
   15858:	mov	r3, r0
   1585c:	ldr	r2, [r3]
   15860:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15864:	str	r2, [r3, #32]
   15868:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1586c:	ldrh	r3, [r3, #58]	; 0x3a
   15870:	orr	r3, r3, #1
   15874:	uxth	r2, r3
   15878:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1587c:	strh	r2, [r3, #58]	; 0x3a
   15880:	mov	r3, #0
   15884:	strb	r3, [fp, #-25]	; 0xffffffe7
   15888:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1588c:	ldr	r3, [r3, #12]
   15890:	mov	r0, r3
   15894:	bl	1133c <closedir@plt>
   15898:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1589c:	mov	r2, #0
   158a0:	str	r2, [r3, #12]
   158a4:	ldr	r3, [r4, #48]	; 0x30
   158a8:	and	r3, r3, #512	; 0x200
   158ac:	cmp	r3, #0
   158b0:	beq	158cc <__assert_fail@plt+0x456c>
   158b4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   158b8:	cmp	r3, #0
   158bc:	blt	158cc <__assert_fail@plt+0x456c>
   158c0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   158c4:	mov	r0, r3
   158c8:	bl	11324 <close@plt>
   158cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   158d0:	mov	r2, #0
   158d4:	str	r2, [r3, #12]
   158d8:	b	158e4 <__assert_fail@plt+0x4584>
   158dc:	mov	r3, #1
   158e0:	strb	r3, [fp, #-25]	; 0xffffffe7
   158e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   158e8:	ldr	r2, [r3, #28]
   158ec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   158f0:	ldr	r3, [r3, #40]	; 0x28
   158f4:	sub	r3, r3, #1
   158f8:	add	r3, r2, r3
   158fc:	ldrb	r3, [r3]
   15900:	cmp	r3, #47	; 0x2f
   15904:	bne	15918 <__assert_fail@plt+0x45b8>
   15908:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1590c:	ldr	r3, [r3, #40]	; 0x28
   15910:	sub	r3, r3, #1
   15914:	b	15920 <__assert_fail@plt+0x45c0>
   15918:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1591c:	ldr	r3, [r3, #40]	; 0x28
   15920:	str	r3, [fp, #-60]	; 0xffffffc4
   15924:	ldr	r3, [r4, #48]	; 0x30
   15928:	and	r3, r3, #4
   1592c:	cmp	r3, #0
   15930:	beq	1595c <__assert_fail@plt+0x45fc>
   15934:	ldr	r2, [r4, #24]
   15938:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1593c:	add	r3, r2, r3
   15940:	str	r3, [fp, #-36]	; 0xffffffdc
   15944:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15948:	add	r2, r3, #1
   1594c:	str	r2, [fp, #-36]	; 0xffffffdc
   15950:	mov	r2, #47	; 0x2f
   15954:	strb	r2, [r3]
   15958:	b	15964 <__assert_fail@plt+0x4604>
   1595c:	mov	r3, #0
   15960:	str	r3, [fp, #-36]	; 0xffffffdc
   15964:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15968:	add	r3, r3, #1
   1596c:	str	r3, [fp, #-60]	; 0xffffffc4
   15970:	ldr	r2, [r4, #36]	; 0x24
   15974:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15978:	sub	r3, r2, r3
   1597c:	str	r3, [fp, #-32]	; 0xffffffe0
   15980:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15984:	ldr	r3, [r3, #48]	; 0x30
   15988:	add	r3, r3, #1
   1598c:	str	r3, [fp, #-64]	; 0xffffffc0
   15990:	mov	r3, #0
   15994:	strb	r3, [fp, #-26]	; 0xffffffe6
   15998:	mov	r7, #0
   1599c:	mov	r3, #0
   159a0:	str	r3, [fp, #-24]	; 0xffffffe8
   159a4:	mov	r6, #0
   159a8:	b	15df8 <__assert_fail@plt+0x4a98>
   159ac:	bl	11228 <__errno_location@plt>
   159b0:	mov	r2, r0
   159b4:	mov	r3, #0
   159b8:	str	r3, [r2]
   159bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   159c0:	ldr	r3, [r3, #12]
   159c4:	mov	r0, r3
   159c8:	bl	112ac <readdir64@plt>
   159cc:	str	r0, [fp, #-68]	; 0xffffffbc
   159d0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   159d4:	cmp	r3, #0
   159d8:	bne	15a30 <__assert_fail@plt+0x46d0>
   159dc:	bl	11228 <__errno_location@plt>
   159e0:	mov	r3, r0
   159e4:	ldr	r3, [r3]
   159e8:	cmp	r3, #0
   159ec:	beq	15e0c <__assert_fail@plt+0x4aac>
   159f0:	bl	11228 <__errno_location@plt>
   159f4:	mov	r3, r0
   159f8:	ldr	r2, [r3]
   159fc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15a00:	str	r2, [r3, #32]
   15a04:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   15a08:	cmp	r3, #0
   15a0c:	bne	15a18 <__assert_fail@plt+0x46b8>
   15a10:	cmp	r6, #0
   15a14:	beq	15a20 <__assert_fail@plt+0x46c0>
   15a18:	mov	r2, #7
   15a1c:	b	15a24 <__assert_fail@plt+0x46c4>
   15a20:	mov	r2, #4
   15a24:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15a28:	strh	r2, [r3, #56]	; 0x38
   15a2c:	b	15e0c <__assert_fail@plt+0x4aac>
   15a30:	ldr	r3, [r4, #48]	; 0x30
   15a34:	and	r3, r3, #32
   15a38:	cmp	r3, #0
   15a3c:	bne	15a84 <__assert_fail@plt+0x4724>
   15a40:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15a44:	ldrb	r3, [r3, #19]
   15a48:	cmp	r3, #46	; 0x2e
   15a4c:	bne	15a84 <__assert_fail@plt+0x4724>
   15a50:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15a54:	ldrb	r3, [r3, #20]
   15a58:	cmp	r3, #0
   15a5c:	beq	15df8 <__assert_fail@plt+0x4a98>
   15a60:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15a64:	ldrb	r3, [r3, #20]
   15a68:	cmp	r3, #46	; 0x2e
   15a6c:	bne	15a84 <__assert_fail@plt+0x4724>
   15a70:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15a74:	ldrb	r3, [r3, #21]
   15a78:	cmp	r3, #0
   15a7c:	bne	15a84 <__assert_fail@plt+0x4724>
   15a80:	b	15df8 <__assert_fail@plt+0x4a98>
   15a84:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15a88:	add	r3, r3, #19
   15a8c:	mov	r0, r3
   15a90:	bl	111ec <strlen@plt>
   15a94:	str	r0, [fp, #-72]	; 0xffffffb8
   15a98:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15a9c:	add	r3, r3, #19
   15aa0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15aa4:	mov	r1, r3
   15aa8:	mov	r0, r4
   15aac:	bl	163e8 <__assert_fail@plt+0x5088>
   15ab0:	mov	r5, r0
   15ab4:	cmp	r5, #0
   15ab8:	beq	15b08 <__assert_fail@plt+0x47a8>
   15abc:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15ac0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15ac4:	cmp	r2, r3
   15ac8:	bcc	15bc0 <__assert_fail@plt+0x4860>
   15acc:	ldr	r3, [r4, #24]
   15ad0:	str	r3, [fp, #-76]	; 0xffffffb4
   15ad4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15ad8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15adc:	add	r3, r2, r3
   15ae0:	add	r3, r3, #1
   15ae4:	mov	r1, r3
   15ae8:	mov	r0, r4
   15aec:	bl	16518 <__assert_fail@plt+0x51b8>
   15af0:	mov	r3, r0
   15af4:	eor	r3, r3, #1
   15af8:	uxtb	r3, r3
   15afc:	cmp	r3, #0
   15b00:	beq	15b78 <__assert_fail@plt+0x4818>
   15b04:	b	15b0c <__assert_fail@plt+0x47ac>
   15b08:	nop	{0}
   15b0c:	bl	11228 <__errno_location@plt>
   15b10:	mov	r3, r0
   15b14:	ldr	r3, [r3]
   15b18:	str	r3, [fp, #-88]	; 0xffffffa8
   15b1c:	mov	r0, r5
   15b20:	bl	1360c <__assert_fail@plt+0x22ac>
   15b24:	mov	r0, r7
   15b28:	bl	164b8 <__assert_fail@plt+0x5158>
   15b2c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15b30:	ldr	r3, [r3, #12]
   15b34:	mov	r0, r3
   15b38:	bl	1133c <closedir@plt>
   15b3c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15b40:	mov	r2, #0
   15b44:	str	r2, [r3, #12]
   15b48:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15b4c:	mov	r2, #7
   15b50:	strh	r2, [r3, #56]	; 0x38
   15b54:	ldr	r3, [r4, #48]	; 0x30
   15b58:	orr	r3, r3, #8192	; 0x2000
   15b5c:	str	r3, [r4, #48]	; 0x30
   15b60:	bl	11228 <__errno_location@plt>
   15b64:	mov	r2, r0
   15b68:	ldr	r3, [fp, #-88]	; 0xffffffa8
   15b6c:	str	r3, [r2]
   15b70:	mov	r3, #0
   15b74:	b	16018 <__assert_fail@plt+0x4cb8>
   15b78:	ldr	r3, [r4, #24]
   15b7c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   15b80:	cmp	r2, r3
   15b84:	beq	15bb0 <__assert_fail@plt+0x4850>
   15b88:	mov	r3, #1
   15b8c:	strb	r3, [fp, #-26]	; 0xffffffe6
   15b90:	ldr	r3, [r4, #48]	; 0x30
   15b94:	and	r3, r3, #4
   15b98:	cmp	r3, #0
   15b9c:	beq	15bb0 <__assert_fail@plt+0x4850>
   15ba0:	ldr	r2, [r4, #24]
   15ba4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15ba8:	add	r3, r2, r3
   15bac:	str	r3, [fp, #-36]	; 0xffffffdc
   15bb0:	ldr	r2, [r4, #36]	; 0x24
   15bb4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15bb8:	sub	r3, r2, r3
   15bbc:	str	r3, [fp, #-32]	; 0xffffffe0
   15bc0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   15bc4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15bc8:	add	r3, r2, r3
   15bcc:	str	r3, [fp, #-80]	; 0xffffffb0
   15bd0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   15bd4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15bd8:	cmp	r2, r3
   15bdc:	bcs	15c3c <__assert_fail@plt+0x48dc>
   15be0:	mov	r0, r5
   15be4:	bl	1360c <__assert_fail@plt+0x22ac>
   15be8:	mov	r0, r7
   15bec:	bl	164b8 <__assert_fail@plt+0x5158>
   15bf0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15bf4:	ldr	r3, [r3, #12]
   15bf8:	mov	r0, r3
   15bfc:	bl	1133c <closedir@plt>
   15c00:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15c04:	mov	r2, #0
   15c08:	str	r2, [r3, #12]
   15c0c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15c10:	mov	r2, #7
   15c14:	strh	r2, [r3, #56]	; 0x38
   15c18:	ldr	r3, [r4, #48]	; 0x30
   15c1c:	orr	r3, r3, #8192	; 0x2000
   15c20:	str	r3, [r4, #48]	; 0x30
   15c24:	bl	11228 <__errno_location@plt>
   15c28:	mov	r2, r0
   15c2c:	mov	r3, #36	; 0x24
   15c30:	str	r3, [r2]
   15c34:	mov	r3, #0
   15c38:	b	16018 <__assert_fail@plt+0x4cb8>
   15c3c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15c40:	str	r3, [r5, #48]	; 0x30
   15c44:	ldr	r3, [r4]
   15c48:	str	r3, [r5, #4]
   15c4c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15c50:	str	r3, [r5, #40]	; 0x28
   15c54:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15c58:	ldrd	r2, [r3]
   15c5c:	strd	r2, [r5, #160]	; 0xa0
   15c60:	ldr	r3, [r4, #48]	; 0x30
   15c64:	and	r3, r3, #4
   15c68:	cmp	r3, #0
   15c6c:	beq	15c94 <__assert_fail@plt+0x4934>
   15c70:	ldr	r3, [r5, #28]
   15c74:	str	r3, [r5, #24]
   15c78:	add	r1, r5, #168	; 0xa8
   15c7c:	ldr	r3, [r5, #52]	; 0x34
   15c80:	add	r3, r3, #1
   15c84:	mov	r2, r3
   15c88:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15c8c:	bl	11078 <memmove@plt>
   15c90:	b	15c9c <__assert_fail@plt+0x493c>
   15c94:	add	r3, r5, #168	; 0xa8
   15c98:	str	r3, [r5, #24]
   15c9c:	ldr	r3, [r4, #44]	; 0x2c
   15ca0:	cmp	r3, #0
   15ca4:	beq	15cb8 <__assert_fail@plt+0x4958>
   15ca8:	ldr	r3, [r4, #48]	; 0x30
   15cac:	and	r3, r3, #1024	; 0x400
   15cb0:	cmp	r3, #0
   15cb4:	beq	15d78 <__assert_fail@plt+0x4a18>
   15cb8:	ldr	r3, [r4, #48]	; 0x30
   15cbc:	and	r3, r3, #8
   15cc0:	cmp	r3, #0
   15cc4:	beq	15d10 <__assert_fail@plt+0x49b0>
   15cc8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15ccc:	ldrb	r3, [r3, #18]
   15cd0:	cmp	r3, #0
   15cd4:	beq	15d10 <__assert_fail@plt+0x49b0>
   15cd8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15cdc:	ldrb	r3, [r3, #18]
   15ce0:	cmp	r3, #4
   15ce4:	beq	15d10 <__assert_fail@plt+0x49b0>
   15ce8:	ldr	r3, [r4, #48]	; 0x30
   15cec:	and	r3, r3, #16
   15cf0:	cmp	r3, #0
   15cf4:	bne	15d08 <__assert_fail@plt+0x49a8>
   15cf8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15cfc:	ldrb	r3, [r3, #18]
   15d00:	cmp	r3, #10
   15d04:	beq	15d10 <__assert_fail@plt+0x49b0>
   15d08:	mov	r3, #1
   15d0c:	b	15d14 <__assert_fail@plt+0x49b4>
   15d10:	mov	r3, #0
   15d14:	strb	r3, [fp, #-81]	; 0xffffffaf
   15d18:	ldrb	r3, [fp, #-81]	; 0xffffffaf
   15d1c:	and	r3, r3, #1
   15d20:	strb	r3, [fp, #-81]	; 0xffffffaf
   15d24:	mov	r3, #11
   15d28:	strh	r3, [r5, #56]	; 0x38
   15d2c:	add	r2, r5, #64	; 0x40
   15d30:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15d34:	ldrb	r3, [r3, #18]
   15d38:	mov	r1, r3
   15d3c:	mov	r0, r2
   15d40:	bl	15410 <__assert_fail@plt+0x40b0>
   15d44:	ldrb	r3, [fp, #-81]	; 0xffffffaf
   15d48:	cmp	r3, #0
   15d4c:	movne	r3, #1
   15d50:	moveq	r3, #0
   15d54:	uxtb	r3, r3
   15d58:	eor	r3, r3, #1
   15d5c:	uxtb	r3, r3
   15d60:	and	r3, r3, #1
   15d64:	uxtb	r3, r3
   15d68:	mov	r1, r3
   15d6c:	mov	r0, r5
   15d70:	bl	13bc0 <__assert_fail@plt+0x2860>
   15d74:	b	15d90 <__assert_fail@plt+0x4a30>
   15d78:	mov	r2, #0
   15d7c:	mov	r1, r5
   15d80:	mov	r0, r4
   15d84:	bl	16034 <__assert_fail@plt+0x4cd4>
   15d88:	mov	r3, r0
   15d8c:	strh	r3, [r5, #56]	; 0x38
   15d90:	mov	r3, #0
   15d94:	str	r3, [r5, #8]
   15d98:	cmp	r7, #0
   15d9c:	bne	15dac <__assert_fail@plt+0x4a4c>
   15da0:	str	r5, [fp, #-24]	; 0xffffffe8
   15da4:	ldr	r7, [fp, #-24]	; 0xffffffe8
   15da8:	b	15db8 <__assert_fail@plt+0x4a58>
   15dac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15db0:	str	r5, [r3, #8]
   15db4:	str	r5, [fp, #-24]	; 0xffffffe8
   15db8:	movw	r3, #10000	; 0x2710
   15dbc:	cmp	r6, r3
   15dc0:	bne	15de8 <__assert_fail@plt+0x4a88>
   15dc4:	ldr	r3, [r4, #44]	; 0x2c
   15dc8:	cmp	r3, #0
   15dcc:	bne	15de8 <__assert_fail@plt+0x4a88>
   15dd0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15dd4:	mov	r1, r3
   15dd8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15ddc:	bl	14840 <__assert_fail@plt+0x34e0>
   15de0:	mov	r3, r0
   15de4:	strb	r3, [fp, #-37]	; 0xffffffdb
   15de8:	add	r6, r6, #1
   15dec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15df0:	cmp	r3, r6
   15df4:	bls	15e40 <__assert_fail@plt+0x4ae0>
   15df8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15dfc:	ldr	r3, [r3, #12]
   15e00:	cmp	r3, #0
   15e04:	bne	159ac <__assert_fail@plt+0x464c>
   15e08:	b	15e10 <__assert_fail@plt+0x4ab0>
   15e0c:	nop	{0}
   15e10:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15e14:	ldr	r3, [r3, #12]
   15e18:	cmp	r3, #0
   15e1c:	beq	15e48 <__assert_fail@plt+0x4ae8>
   15e20:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15e24:	ldr	r3, [r3, #12]
   15e28:	mov	r0, r3
   15e2c:	bl	1133c <closedir@plt>
   15e30:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15e34:	mov	r2, #0
   15e38:	str	r2, [r3, #12]
   15e3c:	b	15e4c <__assert_fail@plt+0x4aec>
   15e40:	nop	{0}
   15e44:	b	15e4c <__assert_fail@plt+0x4aec>
   15e48:	nop	{0}
   15e4c:	ldrb	r3, [fp, #-26]	; 0xffffffe6
   15e50:	cmp	r3, #0
   15e54:	beq	15e64 <__assert_fail@plt+0x4b04>
   15e58:	mov	r1, r7
   15e5c:	mov	r0, r4
   15e60:	bl	16610 <__assert_fail@plt+0x52b0>
   15e64:	ldr	r3, [r4, #48]	; 0x30
   15e68:	and	r3, r3, #4
   15e6c:	cmp	r3, #0
   15e70:	beq	15ea4 <__assert_fail@plt+0x4b44>
   15e74:	ldr	r3, [r4, #36]	; 0x24
   15e78:	ldr	r2, [fp, #-60]	; 0xffffffc4
   15e7c:	cmp	r2, r3
   15e80:	beq	15e8c <__assert_fail@plt+0x4b2c>
   15e84:	cmp	r6, #0
   15e88:	bne	15e98 <__assert_fail@plt+0x4b38>
   15e8c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15e90:	sub	r3, r3, #1
   15e94:	str	r3, [fp, #-36]	; 0xffffffdc
   15e98:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15e9c:	mov	r2, #0
   15ea0:	strb	r2, [r3]
   15ea4:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   15ea8:	eor	r3, r3, #1
   15eac:	uxtb	r3, r3
   15eb0:	cmp	r3, #0
   15eb4:	beq	15f68 <__assert_fail@plt+0x4c08>
   15eb8:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   15ebc:	cmp	r3, #0
   15ec0:	beq	15f68 <__assert_fail@plt+0x4c08>
   15ec4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15ec8:	cmp	r3, #1
   15ecc:	beq	15ed8 <__assert_fail@plt+0x4b78>
   15ed0:	cmp	r6, #0
   15ed4:	bne	15f68 <__assert_fail@plt+0x4c08>
   15ed8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15edc:	ldr	r3, [r3, #48]	; 0x30
   15ee0:	cmp	r3, #0
   15ee4:	bne	15f08 <__assert_fail@plt+0x4ba8>
   15ee8:	mov	r0, r4
   15eec:	bl	13cfc <__assert_fail@plt+0x299c>
   15ef0:	mov	r3, r0
   15ef4:	cmp	r3, #0
   15ef8:	movne	r3, #1
   15efc:	moveq	r3, #0
   15f00:	uxtb	r3, r3
   15f04:	b	15f38 <__assert_fail@plt+0x4bd8>
   15f08:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15f0c:	ldr	r1, [r3, #4]
   15f10:	movw	r3, #768	; 0x300
   15f14:	movt	r3, #2
   15f18:	mvn	r2, #0
   15f1c:	mov	r0, r4
   15f20:	bl	167c8 <__assert_fail@plt+0x5468>
   15f24:	mov	r3, r0
   15f28:	cmp	r3, #0
   15f2c:	movne	r3, #1
   15f30:	moveq	r3, #0
   15f34:	uxtb	r3, r3
   15f38:	cmp	r3, #0
   15f3c:	beq	15f68 <__assert_fail@plt+0x4c08>
   15f40:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15f44:	mov	r2, #7
   15f48:	strh	r2, [r3, #56]	; 0x38
   15f4c:	ldr	r3, [r4, #48]	; 0x30
   15f50:	orr	r3, r3, #8192	; 0x2000
   15f54:	str	r3, [r4, #48]	; 0x30
   15f58:	mov	r0, r7
   15f5c:	bl	164b8 <__assert_fail@plt+0x5158>
   15f60:	mov	r3, #0
   15f64:	b	16018 <__assert_fail@plt+0x4cb8>
   15f68:	cmp	r6, #0
   15f6c:	bne	15fb8 <__assert_fail@plt+0x4c58>
   15f70:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15f74:	cmp	r3, #3
   15f78:	bne	15fa8 <__assert_fail@plt+0x4c48>
   15f7c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15f80:	ldrh	r3, [r3, #56]	; 0x38
   15f84:	cmp	r3, #4
   15f88:	beq	15fa8 <__assert_fail@plt+0x4c48>
   15f8c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15f90:	ldrh	r3, [r3, #56]	; 0x38
   15f94:	cmp	r3, #7
   15f98:	beq	15fa8 <__assert_fail@plt+0x4c48>
   15f9c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15fa0:	mov	r2, #6
   15fa4:	strh	r2, [r3, #56]	; 0x38
   15fa8:	mov	r0, r7
   15fac:	bl	164b8 <__assert_fail@plt+0x5158>
   15fb0:	mov	r3, #0
   15fb4:	b	16018 <__assert_fail@plt+0x4cb8>
   15fb8:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   15fbc:	cmp	r3, #0
   15fc0:	beq	15fec <__assert_fail@plt+0x4c8c>
   15fc4:	movw	r3, #21388	; 0x538c
   15fc8:	movt	r3, #1
   15fcc:	str	r3, [r4, #44]	; 0x2c
   15fd0:	mov	r2, r6
   15fd4:	mov	r1, r7
   15fd8:	mov	r0, r4
   15fdc:	bl	16284 <__assert_fail@plt+0x4f24>
   15fe0:	mov	r7, r0
   15fe4:	mov	r3, #0
   15fe8:	str	r3, [r4, #44]	; 0x2c
   15fec:	ldr	r3, [r4, #44]	; 0x2c
   15ff0:	cmp	r3, #0
   15ff4:	beq	16014 <__assert_fail@plt+0x4cb4>
   15ff8:	cmp	r6, #1
   15ffc:	bls	16014 <__assert_fail@plt+0x4cb4>
   16000:	mov	r2, r6
   16004:	mov	r1, r7
   16008:	mov	r0, r4
   1600c:	bl	16284 <__assert_fail@plt+0x4f24>
   16010:	mov	r7, r0
   16014:	mov	r3, r7
   16018:	mov	r0, r3
   1601c:	sub	sp, fp, #20
   16020:	ldrd	r4, [sp]
   16024:	ldrd	r6, [sp, #8]
   16028:	ldr	fp, [sp, #16]
   1602c:	add	sp, sp, #20
   16030:	pop	{pc}		; (ldr pc, [sp], #4)
   16034:	str	r4, [sp, #-12]!
   16038:	str	fp, [sp, #4]
   1603c:	str	lr, [sp, #8]
   16040:	add	fp, sp, #8
   16044:	sub	sp, sp, #20
   16048:	str	r0, [fp, #-24]	; 0xffffffe8
   1604c:	mov	r4, r1
   16050:	mov	r3, r2
   16054:	strb	r3, [fp, #-25]	; 0xffffffe7
   16058:	add	r3, r4, #64	; 0x40
   1605c:	str	r3, [fp, #-16]
   16060:	ldr	r3, [r4, #48]	; 0x30
   16064:	cmp	r3, #0
   16068:	bne	16088 <__assert_fail@plt+0x4d28>
   1606c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16070:	ldr	r3, [r3, #48]	; 0x30
   16074:	and	r3, r3, #1
   16078:	cmp	r3, #0
   1607c:	beq	16088 <__assert_fail@plt+0x4d28>
   16080:	mov	r3, #1
   16084:	strb	r3, [fp, #-25]	; 0xffffffe7
   16088:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1608c:	ldr	r3, [r3, #48]	; 0x30
   16090:	and	r3, r3, #2
   16094:	cmp	r3, #0
   16098:	bne	160a8 <__assert_fail@plt+0x4d48>
   1609c:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   160a0:	cmp	r3, #0
   160a4:	beq	16120 <__assert_fail@plt+0x4dc0>
   160a8:	ldr	r3, [r4, #24]
   160ac:	ldr	r1, [fp, #-16]
   160b0:	mov	r0, r3
   160b4:	bl	1f104 <__assert_fail@plt+0xdda4>
   160b8:	mov	r3, r0
   160bc:	cmp	r3, #0
   160c0:	beq	1616c <__assert_fail@plt+0x4e0c>
   160c4:	bl	11228 <__errno_location@plt>
   160c8:	mov	r3, r0
   160cc:	ldr	r3, [r3]
   160d0:	cmp	r3, #2
   160d4:	bne	1610c <__assert_fail@plt+0x4dac>
   160d8:	ldr	r3, [r4, #24]
   160dc:	ldr	r1, [fp, #-16]
   160e0:	mov	r0, r3
   160e4:	bl	1f124 <__assert_fail@plt+0xddc4>
   160e8:	mov	r3, r0
   160ec:	cmp	r3, #0
   160f0:	bne	1610c <__assert_fail@plt+0x4dac>
   160f4:	bl	11228 <__errno_location@plt>
   160f8:	mov	r2, r0
   160fc:	mov	r3, #0
   16100:	str	r3, [r2]
   16104:	mov	r3, #13
   16108:	b	16210 <__assert_fail@plt+0x4eb0>
   1610c:	bl	11228 <__errno_location@plt>
   16110:	mov	r3, r0
   16114:	ldr	r3, [r3]
   16118:	str	r3, [r4, #32]
   1611c:	b	16154 <__assert_fail@plt+0x4df4>
   16120:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16124:	ldr	r0, [r3, #32]
   16128:	ldr	r1, [r4, #24]
   1612c:	mov	r3, #256	; 0x100
   16130:	ldr	r2, [fp, #-16]
   16134:	bl	1f134 <__assert_fail@plt+0xddd4>
   16138:	mov	r3, r0
   1613c:	cmp	r3, #0
   16140:	beq	1616c <__assert_fail@plt+0x4e0c>
   16144:	bl	11228 <__errno_location@plt>
   16148:	mov	r3, r0
   1614c:	ldr	r3, [r3]
   16150:	str	r3, [r4, #32]
   16154:	mov	r2, #104	; 0x68
   16158:	mov	r1, #0
   1615c:	ldr	r0, [fp, #-16]
   16160:	bl	11240 <memset@plt>
   16164:	mov	r3, #10
   16168:	b	16210 <__assert_fail@plt+0x4eb0>
   1616c:	ldr	r3, [fp, #-16]
   16170:	ldr	r3, [r3, #16]
   16174:	and	r3, r3, #61440	; 0xf000
   16178:	cmp	r3, #16384	; 0x4000
   1617c:	bne	161d4 <__assert_fail@plt+0x4e74>
   16180:	ldrb	r3, [r4, #168]	; 0xa8
   16184:	cmp	r3, #46	; 0x2e
   16188:	bne	161cc <__assert_fail@plt+0x4e6c>
   1618c:	ldrb	r3, [r4, #169]	; 0xa9
   16190:	cmp	r3, #0
   16194:	beq	161b0 <__assert_fail@plt+0x4e50>
   16198:	ldrb	r3, [r4, #169]	; 0xa9
   1619c:	cmp	r3, #46	; 0x2e
   161a0:	bne	161cc <__assert_fail@plt+0x4e6c>
   161a4:	ldrb	r3, [r4, #170]	; 0xaa
   161a8:	cmp	r3, #0
   161ac:	bne	161cc <__assert_fail@plt+0x4e6c>
   161b0:	ldr	r3, [r4, #48]	; 0x30
   161b4:	cmp	r3, #0
   161b8:	bne	161c4 <__assert_fail@plt+0x4e64>
   161bc:	mov	r3, #1
   161c0:	b	16210 <__assert_fail@plt+0x4eb0>
   161c4:	mov	r3, #5
   161c8:	b	16210 <__assert_fail@plt+0x4eb0>
   161cc:	mov	r3, #1
   161d0:	b	16210 <__assert_fail@plt+0x4eb0>
   161d4:	ldr	r3, [fp, #-16]
   161d8:	ldr	r3, [r3, #16]
   161dc:	and	r3, r3, #61440	; 0xf000
   161e0:	cmp	r3, #40960	; 0xa000
   161e4:	bne	161f0 <__assert_fail@plt+0x4e90>
   161e8:	mov	r3, #12
   161ec:	b	16210 <__assert_fail@plt+0x4eb0>
   161f0:	ldr	r3, [fp, #-16]
   161f4:	ldr	r3, [r3, #16]
   161f8:	and	r3, r3, #61440	; 0xf000
   161fc:	cmp	r3, #32768	; 0x8000
   16200:	bne	1620c <__assert_fail@plt+0x4eac>
   16204:	mov	r3, #8
   16208:	b	16210 <__assert_fail@plt+0x4eb0>
   1620c:	mov	r3, #3
   16210:	mov	r0, r3
   16214:	sub	sp, fp, #8
   16218:	ldr	r4, [sp]
   1621c:	ldr	fp, [sp, #4]
   16220:	add	sp, sp, #8
   16224:	pop	{pc}		; (ldr pc, [sp], #4)
   16228:	str	fp, [sp, #-8]!
   1622c:	str	lr, [sp, #4]
   16230:	add	fp, sp, #4
   16234:	sub	sp, sp, #16
   16238:	str	r0, [fp, #-16]
   1623c:	str	r1, [fp, #-20]	; 0xffffffec
   16240:	ldr	r3, [fp, #-16]
   16244:	str	r3, [fp, #-8]
   16248:	ldr	r3, [fp, #-20]	; 0xffffffec
   1624c:	str	r3, [fp, #-12]
   16250:	ldr	r3, [fp, #-8]
   16254:	ldr	r3, [r3]
   16258:	ldr	r3, [r3, #44]	; 0x2c
   1625c:	ldr	r3, [r3, #44]	; 0x2c
   16260:	ldr	r1, [fp, #-12]
   16264:	ldr	r0, [fp, #-8]
   16268:	blx	r3
   1626c:	mov	r3, r0
   16270:	mov	r0, r3
   16274:	sub	sp, fp, #4
   16278:	ldr	fp, [sp]
   1627c:	add	sp, sp, #4
   16280:	pop	{pc}		; (ldr pc, [sp], #4)
   16284:	strd	r4, [sp, #-20]!	; 0xffffffec
   16288:	str	r6, [sp, #8]
   1628c:	str	fp, [sp, #12]
   16290:	str	lr, [sp, #16]
   16294:	add	fp, sp, #16
   16298:	sub	sp, sp, #28
   1629c:	str	r0, [fp, #-40]	; 0xffffffd8
   162a0:	str	r1, [fp, #-44]	; 0xffffffd4
   162a4:	mov	r5, r2
   162a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   162ac:	ldr	r3, [r3, #44]	; 0x2c
   162b0:	str	r3, [fp, #-24]	; 0xffffffe8
   162b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   162b8:	ldr	r3, [r3, #40]	; 0x28
   162bc:	cmp	r5, r3
   162c0:	bls	1634c <__assert_fail@plt+0x4fec>
   162c4:	add	r2, r5, #40	; 0x28
   162c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   162cc:	str	r2, [r3, #40]	; 0x28
   162d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   162d4:	ldr	r3, [r3, #40]	; 0x28
   162d8:	cmn	r3, #-1073741823	; 0xc0000001
   162dc:	bhi	16310 <__assert_fail@plt+0x4fb0>
   162e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   162e4:	ldr	r2, [r3, #8]
   162e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   162ec:	ldr	r3, [r3, #40]	; 0x28
   162f0:	lsl	r3, r3, #2
   162f4:	mov	r1, r3
   162f8:	mov	r0, r2
   162fc:	bl	1d5ac <__assert_fail@plt+0xc24c>
   16300:	str	r0, [fp, #-28]	; 0xffffffe4
   16304:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16308:	cmp	r3, #0
   1630c:	bne	16340 <__assert_fail@plt+0x4fe0>
   16310:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16314:	ldr	r3, [r3, #8]
   16318:	mov	r0, r3
   1631c:	bl	1360c <__assert_fail@plt+0x22ac>
   16320:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16324:	mov	r2, #0
   16328:	str	r2, [r3, #8]
   1632c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16330:	mov	r2, #0
   16334:	str	r2, [r3, #40]	; 0x28
   16338:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1633c:	b	163cc <__assert_fail@plt+0x506c>
   16340:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16344:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16348:	str	r2, [r3, #8]
   1634c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16350:	ldr	r4, [r3, #8]
   16354:	ldr	r6, [fp, #-44]	; 0xffffffd4
   16358:	b	1636c <__assert_fail@plt+0x500c>
   1635c:	mov	r3, r4
   16360:	add	r4, r3, #4
   16364:	str	r6, [r3]
   16368:	ldr	r6, [r6, #8]
   1636c:	cmp	r6, #0
   16370:	bne	1635c <__assert_fail@plt+0x4ffc>
   16374:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16378:	ldr	r0, [r3, #8]
   1637c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16380:	mov	r2, #4
   16384:	mov	r1, r5
   16388:	bl	112dc <qsort@plt>
   1638c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16390:	ldr	r4, [r3, #8]
   16394:	ldr	r3, [r4]
   16398:	str	r3, [fp, #-44]	; 0xffffffd4
   1639c:	b	163b0 <__assert_fail@plt+0x5050>
   163a0:	ldr	r3, [r4]
   163a4:	ldr	r2, [r4, #4]
   163a8:	str	r2, [r3, #8]
   163ac:	add	r4, r4, #4
   163b0:	sub	r5, r5, #1
   163b4:	cmp	r5, #0
   163b8:	bne	163a0 <__assert_fail@plt+0x5040>
   163bc:	ldr	r3, [r4]
   163c0:	mov	r2, #0
   163c4:	str	r2, [r3, #8]
   163c8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   163cc:	mov	r0, r3
   163d0:	sub	sp, fp, #16
   163d4:	ldrd	r4, [sp]
   163d8:	ldr	r6, [sp, #8]
   163dc:	ldr	fp, [sp, #12]
   163e0:	add	sp, sp, #16
   163e4:	pop	{pc}		; (ldr pc, [sp], #4)
   163e8:	strd	r4, [sp, #-16]!
   163ec:	str	fp, [sp, #8]
   163f0:	str	lr, [sp, #12]
   163f4:	add	fp, sp, #12
   163f8:	sub	sp, sp, #16
   163fc:	str	r0, [fp, #-24]	; 0xffffffe8
   16400:	str	r1, [fp, #-28]	; 0xffffffe4
   16404:	mov	r5, r2
   16408:	add	r3, r5, #176	; 0xb0
   1640c:	bic	r3, r3, #7
   16410:	str	r3, [fp, #-16]
   16414:	ldr	r0, [fp, #-16]
   16418:	bl	1d51c <__assert_fail@plt+0xc1bc>
   1641c:	mov	r3, r0
   16420:	mov	r4, r3
   16424:	cmp	r4, #0
   16428:	bne	16434 <__assert_fail@plt+0x50d4>
   1642c:	mov	r3, #0
   16430:	b	164a0 <__assert_fail@plt+0x5140>
   16434:	add	r3, r4, #168	; 0xa8
   16438:	mov	r2, r5
   1643c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16440:	mov	r0, r3
   16444:	bl	1109c <memcpy@plt>
   16448:	add	r3, r4, r5
   1644c:	mov	r2, #0
   16450:	strb	r2, [r3, #168]	; 0xa8
   16454:	str	r5, [r4, #52]	; 0x34
   16458:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1645c:	str	r3, [r4, #44]	; 0x2c
   16460:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16464:	ldr	r3, [r3, #24]
   16468:	str	r3, [r4, #28]
   1646c:	mov	r3, #0
   16470:	str	r3, [r4, #32]
   16474:	mov	r3, #0
   16478:	str	r3, [r4, #12]
   1647c:	mov	r3, #0
   16480:	strh	r3, [r4, #58]	; 0x3a
   16484:	mov	r3, #3
   16488:	strh	r3, [r4, #60]	; 0x3c
   1648c:	mov	r3, #0
   16490:	str	r3, [r4, #16]
   16494:	mov	r3, #0
   16498:	str	r3, [r4, #20]
   1649c:	mov	r3, r4
   164a0:	mov	r0, r3
   164a4:	sub	sp, fp, #12
   164a8:	ldrd	r4, [sp]
   164ac:	ldr	fp, [sp, #8]
   164b0:	add	sp, sp, #12
   164b4:	pop	{pc}		; (ldr pc, [sp], #4)
   164b8:	strd	r4, [sp, #-16]!
   164bc:	str	fp, [sp, #8]
   164c0:	str	lr, [sp, #12]
   164c4:	add	fp, sp, #12
   164c8:	mov	r5, r0
   164cc:	b	164f4 <__assert_fail@plt+0x5194>
   164d0:	ldr	r5, [r5, #8]
   164d4:	ldr	r3, [r4, #12]
   164d8:	cmp	r3, #0
   164dc:	beq	164ec <__assert_fail@plt+0x518c>
   164e0:	ldr	r3, [r4, #12]
   164e4:	mov	r0, r3
   164e8:	bl	1133c <closedir@plt>
   164ec:	mov	r0, r4
   164f0:	bl	1360c <__assert_fail@plt+0x22ac>
   164f4:	mov	r4, r5
   164f8:	cmp	r4, #0
   164fc:	bne	164d0 <__assert_fail@plt+0x5170>
   16500:	nop	{0}
   16504:	sub	sp, fp, #12
   16508:	ldrd	r4, [sp]
   1650c:	ldr	fp, [sp, #8]
   16510:	add	sp, sp, #12
   16514:	pop	{pc}		; (ldr pc, [sp], #4)
   16518:	str	fp, [sp, #-8]!
   1651c:	str	lr, [sp, #4]
   16520:	add	fp, sp, #4
   16524:	sub	sp, sp, #16
   16528:	str	r0, [fp, #-16]
   1652c:	str	r1, [fp, #-20]	; 0xffffffec
   16530:	ldr	r3, [fp, #-16]
   16534:	ldr	r2, [r3, #36]	; 0x24
   16538:	ldr	r3, [fp, #-20]	; 0xffffffec
   1653c:	add	r3, r2, r3
   16540:	add	r3, r3, #256	; 0x100
   16544:	str	r3, [fp, #-8]
   16548:	ldr	r3, [fp, #-16]
   1654c:	ldr	r3, [r3, #36]	; 0x24
   16550:	ldr	r2, [fp, #-8]
   16554:	cmp	r2, r3
   16558:	bcs	16590 <__assert_fail@plt+0x5230>
   1655c:	ldr	r3, [fp, #-16]
   16560:	ldr	r3, [r3, #24]
   16564:	mov	r0, r3
   16568:	bl	1360c <__assert_fail@plt+0x22ac>
   1656c:	ldr	r3, [fp, #-16]
   16570:	mov	r2, #0
   16574:	str	r2, [r3, #24]
   16578:	bl	11228 <__errno_location@plt>
   1657c:	mov	r2, r0
   16580:	mov	r3, #36	; 0x24
   16584:	str	r3, [r2]
   16588:	mov	r3, #0
   1658c:	b	165fc <__assert_fail@plt+0x529c>
   16590:	ldr	r3, [fp, #-16]
   16594:	ldr	r2, [fp, #-8]
   16598:	str	r2, [r3, #36]	; 0x24
   1659c:	ldr	r3, [fp, #-16]
   165a0:	ldr	r2, [r3, #24]
   165a4:	ldr	r3, [fp, #-16]
   165a8:	ldr	r3, [r3, #36]	; 0x24
   165ac:	mov	r1, r3
   165b0:	mov	r0, r2
   165b4:	bl	1d5ac <__assert_fail@plt+0xc24c>
   165b8:	str	r0, [fp, #-12]
   165bc:	ldr	r3, [fp, #-12]
   165c0:	cmp	r3, #0
   165c4:	bne	165ec <__assert_fail@plt+0x528c>
   165c8:	ldr	r3, [fp, #-16]
   165cc:	ldr	r3, [r3, #24]
   165d0:	mov	r0, r3
   165d4:	bl	1360c <__assert_fail@plt+0x22ac>
   165d8:	ldr	r3, [fp, #-16]
   165dc:	mov	r2, #0
   165e0:	str	r2, [r3, #24]
   165e4:	mov	r3, #0
   165e8:	b	165fc <__assert_fail@plt+0x529c>
   165ec:	ldr	r3, [fp, #-16]
   165f0:	ldr	r2, [fp, #-12]
   165f4:	str	r2, [r3, #24]
   165f8:	mov	r3, #1
   165fc:	mov	r0, r3
   16600:	sub	sp, fp, #4
   16604:	ldr	fp, [sp]
   16608:	add	sp, sp, #4
   1660c:	pop	{pc}		; (ldr pc, [sp], #4)
   16610:	push	{fp}		; (str fp, [sp, #-4]!)
   16614:	add	fp, sp, #0
   16618:	sub	sp, sp, #20
   1661c:	str	r0, [fp, #-16]
   16620:	str	r1, [fp, #-20]	; 0xffffffec
   16624:	ldr	r3, [fp, #-16]
   16628:	ldr	r3, [r3, #24]
   1662c:	str	r3, [fp, #-12]
   16630:	ldr	r3, [fp, #-16]
   16634:	ldr	r3, [r3, #4]
   16638:	str	r3, [fp, #-8]
   1663c:	b	16698 <__assert_fail@plt+0x5338>
   16640:	ldr	r3, [fp, #-8]
   16644:	ldr	r2, [r3, #24]
   16648:	ldr	r3, [fp, #-8]
   1664c:	add	r3, r3, #168	; 0xa8
   16650:	cmp	r2, r3
   16654:	beq	16680 <__assert_fail@plt+0x5320>
   16658:	ldr	r3, [fp, #-8]
   1665c:	ldr	r2, [r3, #24]
   16660:	ldr	r3, [fp, #-8]
   16664:	ldr	r3, [r3, #28]
   16668:	sub	r3, r2, r3
   1666c:	mov	r2, r3
   16670:	ldr	r3, [fp, #-12]
   16674:	add	r2, r3, r2
   16678:	ldr	r3, [fp, #-8]
   1667c:	str	r2, [r3, #24]
   16680:	ldr	r3, [fp, #-8]
   16684:	ldr	r2, [fp, #-12]
   16688:	str	r2, [r3, #28]
   1668c:	ldr	r3, [fp, #-8]
   16690:	ldr	r3, [r3, #8]
   16694:	str	r3, [fp, #-8]
   16698:	ldr	r3, [fp, #-8]
   1669c:	cmp	r3, #0
   166a0:	bne	16640 <__assert_fail@plt+0x52e0>
   166a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   166a8:	str	r3, [fp, #-8]
   166ac:	b	16724 <__assert_fail@plt+0x53c4>
   166b0:	ldr	r3, [fp, #-8]
   166b4:	ldr	r2, [r3, #24]
   166b8:	ldr	r3, [fp, #-8]
   166bc:	add	r3, r3, #168	; 0xa8
   166c0:	cmp	r2, r3
   166c4:	beq	166f0 <__assert_fail@plt+0x5390>
   166c8:	ldr	r3, [fp, #-8]
   166cc:	ldr	r2, [r3, #24]
   166d0:	ldr	r3, [fp, #-8]
   166d4:	ldr	r3, [r3, #28]
   166d8:	sub	r3, r2, r3
   166dc:	mov	r2, r3
   166e0:	ldr	r3, [fp, #-12]
   166e4:	add	r2, r3, r2
   166e8:	ldr	r3, [fp, #-8]
   166ec:	str	r2, [r3, #24]
   166f0:	ldr	r3, [fp, #-8]
   166f4:	ldr	r2, [fp, #-12]
   166f8:	str	r2, [r3, #28]
   166fc:	ldr	r3, [fp, #-8]
   16700:	ldr	r3, [r3, #8]
   16704:	cmp	r3, #0
   16708:	beq	16718 <__assert_fail@plt+0x53b8>
   1670c:	ldr	r3, [fp, #-8]
   16710:	ldr	r3, [r3, #8]
   16714:	b	16720 <__assert_fail@plt+0x53c0>
   16718:	ldr	r3, [fp, #-8]
   1671c:	ldr	r3, [r3, #4]
   16720:	str	r3, [fp, #-8]
   16724:	ldr	r3, [fp, #-8]
   16728:	ldr	r3, [r3, #48]	; 0x30
   1672c:	cmp	r3, #0
   16730:	bge	166b0 <__assert_fail@plt+0x5350>
   16734:	nop	{0}
   16738:	add	sp, fp, #0
   1673c:	pop	{fp}		; (ldr fp, [sp], #4)
   16740:	bx	lr
   16744:	str	fp, [sp, #-8]!
   16748:	str	lr, [sp, #4]
   1674c:	add	fp, sp, #4
   16750:	sub	sp, sp, #16
   16754:	str	r0, [fp, #-16]
   16758:	mov	r3, #0
   1675c:	str	r3, [fp, #-8]
   16760:	b	1679c <__assert_fail@plt+0x543c>
   16764:	ldr	r3, [fp, #-16]
   16768:	ldr	r3, [r3]
   1676c:	mov	r0, r3
   16770:	bl	111ec <strlen@plt>
   16774:	str	r0, [fp, #-12]
   16778:	ldr	r2, [fp, #-12]
   1677c:	ldr	r3, [fp, #-8]
   16780:	cmp	r2, r3
   16784:	bls	16790 <__assert_fail@plt+0x5430>
   16788:	ldr	r3, [fp, #-12]
   1678c:	str	r3, [fp, #-8]
   16790:	ldr	r3, [fp, #-16]
   16794:	add	r3, r3, #4
   16798:	str	r3, [fp, #-16]
   1679c:	ldr	r3, [fp, #-16]
   167a0:	ldr	r3, [r3]
   167a4:	cmp	r3, #0
   167a8:	bne	16764 <__assert_fail@plt+0x5404>
   167ac:	ldr	r3, [fp, #-8]
   167b0:	add	r3, r3, #1
   167b4:	mov	r0, r3
   167b8:	sub	sp, fp, #4
   167bc:	ldr	fp, [sp]
   167c0:	add	sp, sp, #4
   167c4:	pop	{pc}		; (ldr pc, [sp], #4)
   167c8:	str	fp, [sp, #-8]!
   167cc:	str	lr, [sp, #4]
   167d0:	add	fp, sp, #4
   167d4:	sub	sp, sp, #144	; 0x90
   167d8:	str	r0, [fp, #-136]	; 0xffffff78
   167dc:	str	r1, [fp, #-140]	; 0xffffff74
   167e0:	str	r2, [fp, #-144]	; 0xffffff70
   167e4:	str	r3, [fp, #-148]	; 0xffffff6c
   167e8:	ldr	r3, [fp, #-148]	; 0xffffff6c
   167ec:	cmp	r3, #0
   167f0:	beq	16818 <__assert_fail@plt+0x54b8>
   167f4:	movw	r1, #768	; 0x300
   167f8:	movt	r1, #2
   167fc:	ldr	r0, [fp, #-148]	; 0xffffff6c
   16800:	bl	11048 <strcmp@plt>
   16804:	mov	r3, r0
   16808:	cmp	r3, #0
   1680c:	bne	16818 <__assert_fail@plt+0x54b8>
   16810:	mov	r3, #1
   16814:	b	1681c <__assert_fail@plt+0x54bc>
   16818:	mov	r3, #0
   1681c:	strb	r3, [fp, #-13]
   16820:	ldrb	r3, [fp, #-13]
   16824:	and	r3, r3, #1
   16828:	strb	r3, [fp, #-13]
   1682c:	ldr	r3, [fp, #-136]	; 0xffffff78
   16830:	ldr	r3, [r3, #48]	; 0x30
   16834:	and	r3, r3, #4
   16838:	cmp	r3, #0
   1683c:	beq	16870 <__assert_fail@plt+0x5510>
   16840:	ldr	r3, [fp, #-136]	; 0xffffff78
   16844:	ldr	r3, [r3, #48]	; 0x30
   16848:	and	r3, r3, #512	; 0x200
   1684c:	cmp	r3, #0
   16850:	beq	16868 <__assert_fail@plt+0x5508>
   16854:	ldr	r3, [fp, #-144]	; 0xffffff70
   16858:	cmp	r3, #0
   1685c:	blt	16868 <__assert_fail@plt+0x5508>
   16860:	ldr	r0, [fp, #-144]	; 0xffffff70
   16864:	bl	11324 <close@plt>
   16868:	mov	r3, #0
   1686c:	b	16a70 <__assert_fail@plt+0x5710>
   16870:	ldr	r3, [fp, #-144]	; 0xffffff70
   16874:	cmp	r3, #0
   16878:	bge	168f0 <__assert_fail@plt+0x5590>
   1687c:	ldrb	r3, [fp, #-13]
   16880:	cmp	r3, #0
   16884:	beq	168f0 <__assert_fail@plt+0x5590>
   16888:	ldr	r3, [fp, #-136]	; 0xffffff78
   1688c:	ldr	r3, [r3, #48]	; 0x30
   16890:	and	r3, r3, #512	; 0x200
   16894:	cmp	r3, #0
   16898:	beq	168f0 <__assert_fail@plt+0x5590>
   1689c:	ldr	r3, [fp, #-136]	; 0xffffff78
   168a0:	add	r3, r3, #60	; 0x3c
   168a4:	mov	r0, r3
   168a8:	bl	1876c <__assert_fail@plt+0x740c>
   168ac:	mov	r3, r0
   168b0:	eor	r3, r3, #1
   168b4:	uxtb	r3, r3
   168b8:	cmp	r3, #0
   168bc:	beq	168f0 <__assert_fail@plt+0x5590>
   168c0:	ldr	r3, [fp, #-136]	; 0xffffff78
   168c4:	add	r3, r3, #60	; 0x3c
   168c8:	mov	r0, r3
   168cc:	bl	18854 <__assert_fail@plt+0x74f4>
   168d0:	str	r0, [fp, #-20]	; 0xffffffec
   168d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   168d8:	cmp	r3, #0
   168dc:	blt	168f0 <__assert_fail@plt+0x5590>
   168e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   168e4:	str	r3, [fp, #-144]	; 0xffffff70
   168e8:	mov	r3, #0
   168ec:	str	r3, [fp, #-148]	; 0xffffff6c
   168f0:	ldr	r3, [fp, #-144]	; 0xffffff70
   168f4:	str	r3, [fp, #-12]
   168f8:	ldr	r3, [fp, #-144]	; 0xffffff70
   168fc:	cmp	r3, #0
   16900:	bge	16928 <__assert_fail@plt+0x55c8>
   16904:	ldr	r1, [fp, #-148]	; 0xffffff6c
   16908:	ldr	r0, [fp, #-136]	; 0xffffff78
   1690c:	bl	13de0 <__assert_fail@plt+0x2a80>
   16910:	str	r0, [fp, #-12]
   16914:	ldr	r3, [fp, #-12]
   16918:	cmp	r3, #0
   1691c:	bge	16928 <__assert_fail@plt+0x55c8>
   16920:	mvn	r3, #0
   16924:	b	16a70 <__assert_fail@plt+0x5710>
   16928:	ldr	r3, [fp, #-136]	; 0xffffff78
   1692c:	ldr	r3, [r3, #48]	; 0x30
   16930:	and	r3, r3, #2
   16934:	cmp	r3, #0
   16938:	bne	16964 <__assert_fail@plt+0x5604>
   1693c:	ldr	r3, [fp, #-148]	; 0xffffff6c
   16940:	cmp	r3, #0
   16944:	beq	169dc <__assert_fail@plt+0x567c>
   16948:	movw	r1, #768	; 0x300
   1694c:	movt	r1, #2
   16950:	ldr	r0, [fp, #-148]	; 0xffffff6c
   16954:	bl	11048 <strcmp@plt>
   16958:	mov	r3, r0
   1695c:	cmp	r3, #0
   16960:	bne	169dc <__assert_fail@plt+0x567c>
   16964:	sub	r3, fp, #132	; 0x84
   16968:	mov	r1, r3
   1696c:	ldr	r0, [fp, #-12]
   16970:	bl	1f114 <__assert_fail@plt+0xddb4>
   16974:	mov	r3, r0
   16978:	cmp	r3, #0
   1697c:	beq	1698c <__assert_fail@plt+0x562c>
   16980:	mvn	r3, #0
   16984:	str	r3, [fp, #-8]
   16988:	b	16a38 <__assert_fail@plt+0x56d8>
   1698c:	ldr	r3, [fp, #-140]	; 0xffffff74
   16990:	ldrd	r0, [r3, #64]	; 0x40
   16994:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   16998:	cmp	r1, r3
   1699c:	cmpeq	r0, r2
   169a0:	bne	169bc <__assert_fail@plt+0x565c>
   169a4:	ldr	r3, [fp, #-140]	; 0xffffff74
   169a8:	ldrd	r0, [r3, #160]	; 0xa0
   169ac:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   169b0:	cmp	r1, r3
   169b4:	cmpeq	r0, r2
   169b8:	beq	169dc <__assert_fail@plt+0x567c>
   169bc:	bl	11228 <__errno_location@plt>
   169c0:	mov	r2, r0
   169c4:	mov	r3, #2
   169c8:	str	r3, [r2]
   169cc:	mvn	r3, #0
   169d0:	str	r3, [fp, #-8]
   169d4:	nop	{0}
   169d8:	b	16a38 <__assert_fail@plt+0x56d8>
   169dc:	ldr	r3, [fp, #-136]	; 0xffffff78
   169e0:	ldr	r3, [r3, #48]	; 0x30
   169e4:	and	r3, r3, #512	; 0x200
   169e8:	cmp	r3, #0
   169ec:	beq	16a2c <__assert_fail@plt+0x56cc>
   169f0:	ldrb	r3, [fp, #-13]
   169f4:	cmp	r3, #0
   169f8:	movne	r3, #1
   169fc:	moveq	r3, #0
   16a00:	uxtb	r3, r3
   16a04:	eor	r3, r3, #1
   16a08:	uxtb	r3, r3
   16a0c:	and	r3, r3, #1
   16a10:	uxtb	r3, r3
   16a14:	mov	r2, r3
   16a18:	ldr	r1, [fp, #-12]
   16a1c:	ldr	r0, [fp, #-136]	; 0xffffff78
   16a20:	bl	13c2c <__assert_fail@plt+0x28cc>
   16a24:	mov	r3, #0
   16a28:	b	16a70 <__assert_fail@plt+0x5710>
   16a2c:	ldr	r0, [fp, #-12]
   16a30:	bl	112d0 <fchdir@plt>
   16a34:	str	r0, [fp, #-8]
   16a38:	ldr	r3, [fp, #-144]	; 0xffffff70
   16a3c:	cmp	r3, #0
   16a40:	bge	16a6c <__assert_fail@plt+0x570c>
   16a44:	bl	11228 <__errno_location@plt>
   16a48:	mov	r3, r0
   16a4c:	ldr	r3, [r3]
   16a50:	str	r3, [fp, #-24]	; 0xffffffe8
   16a54:	ldr	r0, [fp, #-12]
   16a58:	bl	11324 <close@plt>
   16a5c:	bl	11228 <__errno_location@plt>
   16a60:	mov	r2, r0
   16a64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16a68:	str	r3, [r2]
   16a6c:	ldr	r3, [fp, #-8]
   16a70:	mov	r0, r3
   16a74:	sub	sp, fp, #4
   16a78:	ldr	fp, [sp]
   16a7c:	add	sp, sp, #4
   16a80:	pop	{pc}		; (ldr pc, [sp], #4)
   16a84:	andeq	r0, r0, r0
   16a88:	push	{fp}		; (str fp, [sp, #-4]!)
   16a8c:	add	fp, sp, #0
   16a90:	sub	sp, sp, #12
   16a94:	str	r0, [fp, #-8]
   16a98:	ldr	r3, [fp, #-8]
   16a9c:	ldr	r3, [r3, #8]
   16aa0:	mov	r0, r3
   16aa4:	add	sp, fp, #0
   16aa8:	pop	{fp}		; (ldr fp, [sp], #4)
   16aac:	bx	lr
   16ab0:	push	{fp}		; (str fp, [sp, #-4]!)
   16ab4:	add	fp, sp, #0
   16ab8:	sub	sp, sp, #12
   16abc:	str	r0, [fp, #-8]
   16ac0:	ldr	r3, [fp, #-8]
   16ac4:	ldr	r3, [r3, #12]
   16ac8:	mov	r0, r3
   16acc:	add	sp, fp, #0
   16ad0:	pop	{fp}		; (ldr fp, [sp], #4)
   16ad4:	bx	lr
   16ad8:	push	{fp}		; (str fp, [sp, #-4]!)
   16adc:	add	fp, sp, #0
   16ae0:	sub	sp, sp, #12
   16ae4:	str	r0, [fp, #-8]
   16ae8:	ldr	r3, [fp, #-8]
   16aec:	ldr	r3, [r3, #16]
   16af0:	mov	r0, r3
   16af4:	add	sp, fp, #0
   16af8:	pop	{fp}		; (ldr fp, [sp], #4)
   16afc:	bx	lr
   16b00:	push	{fp}		; (str fp, [sp, #-4]!)
   16b04:	add	fp, sp, #0
   16b08:	sub	sp, sp, #28
   16b0c:	str	r0, [fp, #-24]	; 0xffffffe8
   16b10:	mov	r3, #0
   16b14:	str	r3, [fp, #-12]
   16b18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16b1c:	ldr	r3, [r3]
   16b20:	str	r3, [fp, #-8]
   16b24:	b	16b94 <__assert_fail@plt+0x5834>
   16b28:	ldr	r3, [fp, #-8]
   16b2c:	ldr	r3, [r3]
   16b30:	cmp	r3, #0
   16b34:	beq	16b88 <__assert_fail@plt+0x5828>
   16b38:	ldr	r3, [fp, #-8]
   16b3c:	str	r3, [fp, #-16]
   16b40:	mov	r3, #1
   16b44:	str	r3, [fp, #-20]	; 0xffffffec
   16b48:	b	16b58 <__assert_fail@plt+0x57f8>
   16b4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16b50:	add	r3, r3, #1
   16b54:	str	r3, [fp, #-20]	; 0xffffffec
   16b58:	ldr	r3, [fp, #-16]
   16b5c:	ldr	r3, [r3, #4]
   16b60:	str	r3, [fp, #-16]
   16b64:	ldr	r3, [fp, #-16]
   16b68:	cmp	r3, #0
   16b6c:	bne	16b4c <__assert_fail@plt+0x57ec>
   16b70:	ldr	r2, [fp, #-20]	; 0xffffffec
   16b74:	ldr	r3, [fp, #-12]
   16b78:	cmp	r2, r3
   16b7c:	bls	16b88 <__assert_fail@plt+0x5828>
   16b80:	ldr	r3, [fp, #-20]	; 0xffffffec
   16b84:	str	r3, [fp, #-12]
   16b88:	ldr	r3, [fp, #-8]
   16b8c:	add	r3, r3, #8
   16b90:	str	r3, [fp, #-8]
   16b94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16b98:	ldr	r3, [r3, #4]
   16b9c:	ldr	r2, [fp, #-8]
   16ba0:	cmp	r2, r3
   16ba4:	bcc	16b28 <__assert_fail@plt+0x57c8>
   16ba8:	ldr	r3, [fp, #-12]
   16bac:	mov	r0, r3
   16bb0:	add	sp, fp, #0
   16bb4:	pop	{fp}		; (ldr fp, [sp], #4)
   16bb8:	bx	lr
   16bbc:	push	{fp}		; (str fp, [sp, #-4]!)
   16bc0:	add	fp, sp, #0
   16bc4:	sub	sp, sp, #28
   16bc8:	str	r0, [fp, #-24]	; 0xffffffe8
   16bcc:	mov	r3, #0
   16bd0:	str	r3, [fp, #-12]
   16bd4:	mov	r3, #0
   16bd8:	str	r3, [fp, #-16]
   16bdc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16be0:	ldr	r3, [r3]
   16be4:	str	r3, [fp, #-8]
   16be8:	b	16c50 <__assert_fail@plt+0x58f0>
   16bec:	ldr	r3, [fp, #-8]
   16bf0:	ldr	r3, [r3]
   16bf4:	cmp	r3, #0
   16bf8:	beq	16c44 <__assert_fail@plt+0x58e4>
   16bfc:	ldr	r3, [fp, #-8]
   16c00:	str	r3, [fp, #-20]	; 0xffffffec
   16c04:	ldr	r3, [fp, #-12]
   16c08:	add	r3, r3, #1
   16c0c:	str	r3, [fp, #-12]
   16c10:	ldr	r3, [fp, #-16]
   16c14:	add	r3, r3, #1
   16c18:	str	r3, [fp, #-16]
   16c1c:	b	16c2c <__assert_fail@plt+0x58cc>
   16c20:	ldr	r3, [fp, #-16]
   16c24:	add	r3, r3, #1
   16c28:	str	r3, [fp, #-16]
   16c2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16c30:	ldr	r3, [r3, #4]
   16c34:	str	r3, [fp, #-20]	; 0xffffffec
   16c38:	ldr	r3, [fp, #-20]	; 0xffffffec
   16c3c:	cmp	r3, #0
   16c40:	bne	16c20 <__assert_fail@plt+0x58c0>
   16c44:	ldr	r3, [fp, #-8]
   16c48:	add	r3, r3, #8
   16c4c:	str	r3, [fp, #-8]
   16c50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16c54:	ldr	r3, [r3, #4]
   16c58:	ldr	r2, [fp, #-8]
   16c5c:	cmp	r2, r3
   16c60:	bcc	16bec <__assert_fail@plt+0x588c>
   16c64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16c68:	ldr	r3, [r3, #12]
   16c6c:	ldr	r2, [fp, #-12]
   16c70:	cmp	r2, r3
   16c74:	bne	16c94 <__assert_fail@plt+0x5934>
   16c78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16c7c:	ldr	r3, [r3, #16]
   16c80:	ldr	r2, [fp, #-16]
   16c84:	cmp	r2, r3
   16c88:	bne	16c94 <__assert_fail@plt+0x5934>
   16c8c:	mov	r3, #1
   16c90:	b	16c98 <__assert_fail@plt+0x5938>
   16c94:	mov	r3, #0
   16c98:	mov	r0, r3
   16c9c:	add	sp, fp, #0
   16ca0:	pop	{fp}		; (ldr fp, [sp], #4)
   16ca4:	bx	lr
   16ca8:	str	fp, [sp, #-8]!
   16cac:	str	lr, [sp, #4]
   16cb0:	add	fp, sp, #4
   16cb4:	sub	sp, sp, #32
   16cb8:	str	r0, [fp, #-24]	; 0xffffffe8
   16cbc:	str	r1, [fp, #-28]	; 0xffffffe4
   16cc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16cc4:	bl	16ad8 <__assert_fail@plt+0x5778>
   16cc8:	str	r0, [fp, #-8]
   16ccc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16cd0:	bl	16a88 <__assert_fail@plt+0x5728>
   16cd4:	str	r0, [fp, #-12]
   16cd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16cdc:	bl	16ab0 <__assert_fail@plt+0x5750>
   16ce0:	str	r0, [fp, #-16]
   16ce4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ce8:	bl	16b00 <__assert_fail@plt+0x57a0>
   16cec:	str	r0, [fp, #-20]	; 0xffffffec
   16cf0:	ldr	r2, [fp, #-8]
   16cf4:	movw	r1, #792	; 0x318
   16cf8:	movt	r1, #2
   16cfc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16d00:	bl	1121c <fprintf@plt>
   16d04:	ldr	r2, [fp, #-12]
   16d08:	movw	r1, #816	; 0x330
   16d0c:	movt	r1, #2
   16d10:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16d14:	bl	1121c <fprintf@plt>
   16d18:	ldr	r3, [fp, #-16]
   16d1c:	vmov	s15, r3
   16d20:	vcvt.f64.u32	d7, s15
   16d24:	vldr	d6, [pc, #84]	; 16d80 <__assert_fail@plt+0x5a20>
   16d28:	vmul.f64	d5, d7, d6
   16d2c:	ldr	r3, [fp, #-12]
   16d30:	vmov	s15, r3
   16d34:	vcvt.f64.u32	d6, s15
   16d38:	vdiv.f64	d7, d5, d6
   16d3c:	vstr	d7, [sp]
   16d40:	ldr	r2, [fp, #-16]
   16d44:	movw	r1, #840	; 0x348
   16d48:	movt	r1, #2
   16d4c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16d50:	bl	1121c <fprintf@plt>
   16d54:	ldr	r2, [fp, #-20]	; 0xffffffec
   16d58:	movw	r1, #876	; 0x36c
   16d5c:	movt	r1, #2
   16d60:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16d64:	bl	1121c <fprintf@plt>
   16d68:	nop	{0}
   16d6c:	sub	sp, fp, #4
   16d70:	ldr	fp, [sp]
   16d74:	add	sp, sp, #4
   16d78:	pop	{pc}		; (ldr pc, [sp], #4)
   16d7c:	nop	{0}
   16d80:	andeq	r0, r0, r0
   16d84:	subsmi	r0, r9, r0
   16d88:	str	fp, [sp, #-8]!
   16d8c:	str	lr, [sp, #4]
   16d90:	add	fp, sp, #4
   16d94:	sub	sp, sp, #16
   16d98:	str	r0, [fp, #-16]
   16d9c:	str	r1, [fp, #-20]	; 0xffffffec
   16da0:	ldr	r3, [fp, #-16]
   16da4:	ldr	r3, [r3, #24]
   16da8:	ldr	r2, [fp, #-16]
   16dac:	ldr	r2, [r2, #8]
   16db0:	mov	r1, r2
   16db4:	ldr	r0, [fp, #-20]	; 0xffffffec
   16db8:	blx	r3
   16dbc:	str	r0, [fp, #-8]
   16dc0:	ldr	r3, [fp, #-16]
   16dc4:	ldr	r3, [r3, #8]
   16dc8:	ldr	r2, [fp, #-8]
   16dcc:	cmp	r2, r3
   16dd0:	bcc	16dd8 <__assert_fail@plt+0x5a78>
   16dd4:	bl	11318 <abort@plt>
   16dd8:	ldr	r3, [fp, #-16]
   16ddc:	ldr	r2, [r3]
   16de0:	ldr	r3, [fp, #-8]
   16de4:	lsl	r3, r3, #3
   16de8:	add	r3, r2, r3
   16dec:	mov	r0, r3
   16df0:	sub	sp, fp, #4
   16df4:	ldr	fp, [sp]
   16df8:	add	sp, sp, #4
   16dfc:	pop	{pc}		; (ldr pc, [sp], #4)
   16e00:	str	fp, [sp, #-8]!
   16e04:	str	lr, [sp, #4]
   16e08:	add	fp, sp, #4
   16e0c:	sub	sp, sp, #16
   16e10:	str	r0, [fp, #-16]
   16e14:	str	r1, [fp, #-20]	; 0xffffffec
   16e18:	ldr	r1, [fp, #-20]	; 0xffffffec
   16e1c:	ldr	r0, [fp, #-16]
   16e20:	bl	16d88 <__assert_fail@plt+0x5a28>
   16e24:	str	r0, [fp, #-12]
   16e28:	ldr	r3, [fp, #-12]
   16e2c:	ldr	r3, [r3]
   16e30:	cmp	r3, #0
   16e34:	bne	16e40 <__assert_fail@plt+0x5ae0>
   16e38:	mov	r3, #0
   16e3c:	b	16eb0 <__assert_fail@plt+0x5b50>
   16e40:	ldr	r3, [fp, #-12]
   16e44:	str	r3, [fp, #-8]
   16e48:	b	16ea0 <__assert_fail@plt+0x5b40>
   16e4c:	ldr	r3, [fp, #-8]
   16e50:	ldr	r3, [r3]
   16e54:	ldr	r2, [fp, #-20]	; 0xffffffec
   16e58:	cmp	r2, r3
   16e5c:	beq	16e88 <__assert_fail@plt+0x5b28>
   16e60:	ldr	r3, [fp, #-16]
   16e64:	ldr	r3, [r3, #28]
   16e68:	ldr	r2, [fp, #-8]
   16e6c:	ldr	r2, [r2]
   16e70:	mov	r1, r2
   16e74:	ldr	r0, [fp, #-20]	; 0xffffffec
   16e78:	blx	r3
   16e7c:	mov	r3, r0
   16e80:	cmp	r3, #0
   16e84:	beq	16e94 <__assert_fail@plt+0x5b34>
   16e88:	ldr	r3, [fp, #-8]
   16e8c:	ldr	r3, [r3]
   16e90:	b	16eb0 <__assert_fail@plt+0x5b50>
   16e94:	ldr	r3, [fp, #-8]
   16e98:	ldr	r3, [r3, #4]
   16e9c:	str	r3, [fp, #-8]
   16ea0:	ldr	r3, [fp, #-8]
   16ea4:	cmp	r3, #0
   16ea8:	bne	16e4c <__assert_fail@plt+0x5aec>
   16eac:	mov	r3, #0
   16eb0:	mov	r0, r3
   16eb4:	sub	sp, fp, #4
   16eb8:	ldr	fp, [sp]
   16ebc:	add	sp, sp, #4
   16ec0:	pop	{pc}		; (ldr pc, [sp], #4)
   16ec4:	str	fp, [sp, #-8]!
   16ec8:	str	lr, [sp, #4]
   16ecc:	add	fp, sp, #4
   16ed0:	sub	sp, sp, #16
   16ed4:	str	r0, [fp, #-16]
   16ed8:	ldr	r3, [fp, #-16]
   16edc:	ldr	r3, [r3, #16]
   16ee0:	cmp	r3, #0
   16ee4:	bne	16ef0 <__assert_fail@plt+0x5b90>
   16ee8:	mov	r3, #0
   16eec:	b	16f40 <__assert_fail@plt+0x5be0>
   16ef0:	ldr	r3, [fp, #-16]
   16ef4:	ldr	r3, [r3]
   16ef8:	str	r3, [fp, #-8]
   16efc:	ldr	r3, [fp, #-16]
   16f00:	ldr	r3, [r3, #4]
   16f04:	ldr	r2, [fp, #-8]
   16f08:	cmp	r2, r3
   16f0c:	bcc	16f14 <__assert_fail@plt+0x5bb4>
   16f10:	bl	11318 <abort@plt>
   16f14:	ldr	r3, [fp, #-8]
   16f18:	ldr	r3, [r3]
   16f1c:	cmp	r3, #0
   16f20:	beq	16f30 <__assert_fail@plt+0x5bd0>
   16f24:	ldr	r3, [fp, #-8]
   16f28:	ldr	r3, [r3]
   16f2c:	b	16f40 <__assert_fail@plt+0x5be0>
   16f30:	ldr	r3, [fp, #-8]
   16f34:	add	r3, r3, #8
   16f38:	str	r3, [fp, #-8]
   16f3c:	b	16efc <__assert_fail@plt+0x5b9c>
   16f40:	mov	r0, r3
   16f44:	sub	sp, fp, #4
   16f48:	ldr	fp, [sp]
   16f4c:	add	sp, sp, #4
   16f50:	pop	{pc}		; (ldr pc, [sp], #4)
   16f54:	str	fp, [sp, #-8]!
   16f58:	str	lr, [sp, #4]
   16f5c:	add	fp, sp, #4
   16f60:	sub	sp, sp, #16
   16f64:	str	r0, [fp, #-16]
   16f68:	str	r1, [fp, #-20]	; 0xffffffec
   16f6c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16f70:	ldr	r0, [fp, #-16]
   16f74:	bl	16d88 <__assert_fail@plt+0x5a28>
   16f78:	str	r0, [fp, #-8]
   16f7c:	ldr	r3, [fp, #-8]
   16f80:	str	r3, [fp, #-12]
   16f84:	ldr	r3, [fp, #-12]
   16f88:	ldr	r3, [r3]
   16f8c:	ldr	r2, [fp, #-20]	; 0xffffffec
   16f90:	cmp	r2, r3
   16f94:	bne	16fb8 <__assert_fail@plt+0x5c58>
   16f98:	ldr	r3, [fp, #-12]
   16f9c:	ldr	r3, [r3, #4]
   16fa0:	cmp	r3, #0
   16fa4:	beq	16fb8 <__assert_fail@plt+0x5c58>
   16fa8:	ldr	r3, [fp, #-12]
   16fac:	ldr	r3, [r3, #4]
   16fb0:	ldr	r3, [r3]
   16fb4:	b	17014 <__assert_fail@plt+0x5cb4>
   16fb8:	ldr	r3, [fp, #-12]
   16fbc:	ldr	r3, [r3, #4]
   16fc0:	str	r3, [fp, #-12]
   16fc4:	ldr	r3, [fp, #-12]
   16fc8:	cmp	r3, #0
   16fcc:	bne	16f84 <__assert_fail@plt+0x5c24>
   16fd0:	b	16ff0 <__assert_fail@plt+0x5c90>
   16fd4:	ldr	r3, [fp, #-8]
   16fd8:	ldr	r3, [r3]
   16fdc:	cmp	r3, #0
   16fe0:	beq	16ff0 <__assert_fail@plt+0x5c90>
   16fe4:	ldr	r3, [fp, #-8]
   16fe8:	ldr	r3, [r3]
   16fec:	b	17014 <__assert_fail@plt+0x5cb4>
   16ff0:	ldr	r3, [fp, #-8]
   16ff4:	add	r3, r3, #8
   16ff8:	str	r3, [fp, #-8]
   16ffc:	ldr	r3, [fp, #-16]
   17000:	ldr	r3, [r3, #4]
   17004:	ldr	r2, [fp, #-8]
   17008:	cmp	r2, r3
   1700c:	bcc	16fd4 <__assert_fail@plt+0x5c74>
   17010:	mov	r3, #0
   17014:	mov	r0, r3
   17018:	sub	sp, fp, #4
   1701c:	ldr	fp, [sp]
   17020:	add	sp, sp, #4
   17024:	pop	{pc}		; (ldr pc, [sp], #4)
   17028:	push	{fp}		; (str fp, [sp, #-4]!)
   1702c:	add	fp, sp, #0
   17030:	sub	sp, sp, #36	; 0x24
   17034:	str	r0, [fp, #-24]	; 0xffffffe8
   17038:	str	r1, [fp, #-28]	; 0xffffffe4
   1703c:	str	r2, [fp, #-32]	; 0xffffffe0
   17040:	mov	r3, #0
   17044:	str	r3, [fp, #-8]
   17048:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1704c:	ldr	r3, [r3]
   17050:	str	r3, [fp, #-12]
   17054:	b	170d4 <__assert_fail@plt+0x5d74>
   17058:	ldr	r3, [fp, #-12]
   1705c:	ldr	r3, [r3]
   17060:	cmp	r3, #0
   17064:	beq	170c8 <__assert_fail@plt+0x5d68>
   17068:	ldr	r3, [fp, #-12]
   1706c:	str	r3, [fp, #-16]
   17070:	b	170bc <__assert_fail@plt+0x5d5c>
   17074:	ldr	r2, [fp, #-8]
   17078:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1707c:	cmp	r2, r3
   17080:	bcc	1708c <__assert_fail@plt+0x5d2c>
   17084:	ldr	r3, [fp, #-8]
   17088:	b	170ec <__assert_fail@plt+0x5d8c>
   1708c:	ldr	r3, [fp, #-8]
   17090:	add	r2, r3, #1
   17094:	str	r2, [fp, #-8]
   17098:	lsl	r3, r3, #2
   1709c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   170a0:	add	r3, r2, r3
   170a4:	ldr	r2, [fp, #-16]
   170a8:	ldr	r2, [r2]
   170ac:	str	r2, [r3]
   170b0:	ldr	r3, [fp, #-16]
   170b4:	ldr	r3, [r3, #4]
   170b8:	str	r3, [fp, #-16]
   170bc:	ldr	r3, [fp, #-16]
   170c0:	cmp	r3, #0
   170c4:	bne	17074 <__assert_fail@plt+0x5d14>
   170c8:	ldr	r3, [fp, #-12]
   170cc:	add	r3, r3, #8
   170d0:	str	r3, [fp, #-12]
   170d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   170d8:	ldr	r3, [r3, #4]
   170dc:	ldr	r2, [fp, #-12]
   170e0:	cmp	r2, r3
   170e4:	bcc	17058 <__assert_fail@plt+0x5cf8>
   170e8:	ldr	r3, [fp, #-8]
   170ec:	mov	r0, r3
   170f0:	add	sp, fp, #0
   170f4:	pop	{fp}		; (ldr fp, [sp], #4)
   170f8:	bx	lr
   170fc:	str	fp, [sp, #-8]!
   17100:	str	lr, [sp, #4]
   17104:	add	fp, sp, #4
   17108:	sub	sp, sp, #32
   1710c:	str	r0, [fp, #-24]	; 0xffffffe8
   17110:	str	r1, [fp, #-28]	; 0xffffffe4
   17114:	str	r2, [fp, #-32]	; 0xffffffe0
   17118:	mov	r3, #0
   1711c:	str	r3, [fp, #-8]
   17120:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17124:	ldr	r3, [r3]
   17128:	str	r3, [fp, #-12]
   1712c:	b	171b0 <__assert_fail@plt+0x5e50>
   17130:	ldr	r3, [fp, #-12]
   17134:	ldr	r3, [r3]
   17138:	cmp	r3, #0
   1713c:	beq	171a4 <__assert_fail@plt+0x5e44>
   17140:	ldr	r3, [fp, #-12]
   17144:	str	r3, [fp, #-16]
   17148:	b	17198 <__assert_fail@plt+0x5e38>
   1714c:	ldr	r3, [fp, #-16]
   17150:	ldr	r2, [r3]
   17154:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17158:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1715c:	mov	r0, r2
   17160:	blx	r3
   17164:	mov	r3, r0
   17168:	eor	r3, r3, #1
   1716c:	uxtb	r3, r3
   17170:	cmp	r3, #0
   17174:	beq	17180 <__assert_fail@plt+0x5e20>
   17178:	ldr	r3, [fp, #-8]
   1717c:	b	171c8 <__assert_fail@plt+0x5e68>
   17180:	ldr	r3, [fp, #-8]
   17184:	add	r3, r3, #1
   17188:	str	r3, [fp, #-8]
   1718c:	ldr	r3, [fp, #-16]
   17190:	ldr	r3, [r3, #4]
   17194:	str	r3, [fp, #-16]
   17198:	ldr	r3, [fp, #-16]
   1719c:	cmp	r3, #0
   171a0:	bne	1714c <__assert_fail@plt+0x5dec>
   171a4:	ldr	r3, [fp, #-12]
   171a8:	add	r3, r3, #8
   171ac:	str	r3, [fp, #-12]
   171b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   171b4:	ldr	r3, [r3, #4]
   171b8:	ldr	r2, [fp, #-12]
   171bc:	cmp	r2, r3
   171c0:	bcc	17130 <__assert_fail@plt+0x5dd0>
   171c4:	ldr	r3, [fp, #-8]
   171c8:	mov	r0, r3
   171cc:	sub	sp, fp, #4
   171d0:	ldr	fp, [sp]
   171d4:	add	sp, sp, #4
   171d8:	pop	{pc}		; (ldr pc, [sp], #4)
   171dc:	push	{fp}		; (str fp, [sp, #-4]!)
   171e0:	add	fp, sp, #0
   171e4:	sub	sp, sp, #20
   171e8:	str	r0, [fp, #-16]
   171ec:	str	r1, [fp, #-20]	; 0xffffffec
   171f0:	mov	r3, #0
   171f4:	str	r3, [fp, #-8]
   171f8:	b	17238 <__assert_fail@plt+0x5ed8>
   171fc:	ldr	r2, [fp, #-8]
   17200:	mov	r3, r2
   17204:	lsl	r3, r3, #5
   17208:	sub	r2, r3, r2
   1720c:	ldrb	r3, [fp, #-9]
   17210:	add	r3, r2, r3
   17214:	ldr	r2, [fp, #-20]	; 0xffffffec
   17218:	udiv	r2, r3, r2
   1721c:	ldr	r1, [fp, #-20]	; 0xffffffec
   17220:	mul	r2, r1, r2
   17224:	sub	r3, r3, r2
   17228:	str	r3, [fp, #-8]
   1722c:	ldr	r3, [fp, #-16]
   17230:	add	r3, r3, #1
   17234:	str	r3, [fp, #-16]
   17238:	ldr	r3, [fp, #-16]
   1723c:	ldrb	r3, [r3]
   17240:	strb	r3, [fp, #-9]
   17244:	ldrb	r3, [fp, #-9]
   17248:	cmp	r3, #0
   1724c:	bne	171fc <__assert_fail@plt+0x5e9c>
   17250:	ldr	r3, [fp, #-8]
   17254:	mov	r0, r3
   17258:	add	sp, fp, #0
   1725c:	pop	{fp}		; (ldr fp, [sp], #4)
   17260:	bx	lr
   17264:	push	{fp}		; (str fp, [sp, #-4]!)
   17268:	add	fp, sp, #0
   1726c:	sub	sp, sp, #20
   17270:	str	r0, [fp, #-16]
   17274:	mov	r3, #3
   17278:	str	r3, [fp, #-8]
   1727c:	ldr	r3, [fp, #-8]
   17280:	ldr	r2, [fp, #-8]
   17284:	mul	r3, r2, r3
   17288:	str	r3, [fp, #-12]
   1728c:	b	172bc <__assert_fail@plt+0x5f5c>
   17290:	ldr	r3, [fp, #-8]
   17294:	add	r3, r3, #1
   17298:	str	r3, [fp, #-8]
   1729c:	ldr	r3, [fp, #-8]
   172a0:	lsl	r3, r3, #2
   172a4:	ldr	r2, [fp, #-12]
   172a8:	add	r3, r2, r3
   172ac:	str	r3, [fp, #-12]
   172b0:	ldr	r3, [fp, #-8]
   172b4:	add	r3, r3, #1
   172b8:	str	r3, [fp, #-8]
   172bc:	ldr	r2, [fp, #-12]
   172c0:	ldr	r3, [fp, #-16]
   172c4:	cmp	r2, r3
   172c8:	bcs	172ec <__assert_fail@plt+0x5f8c>
   172cc:	ldr	r3, [fp, #-16]
   172d0:	ldr	r2, [fp, #-8]
   172d4:	udiv	r2, r3, r2
   172d8:	ldr	r1, [fp, #-8]
   172dc:	mul	r2, r1, r2
   172e0:	sub	r3, r3, r2
   172e4:	cmp	r3, #0
   172e8:	bne	17290 <__assert_fail@plt+0x5f30>
   172ec:	ldr	r3, [fp, #-16]
   172f0:	ldr	r2, [fp, #-8]
   172f4:	udiv	r2, r3, r2
   172f8:	ldr	r1, [fp, #-8]
   172fc:	mul	r2, r1, r2
   17300:	sub	r3, r3, r2
   17304:	cmp	r3, #0
   17308:	movne	r3, #1
   1730c:	moveq	r3, #0
   17310:	uxtb	r3, r3
   17314:	mov	r0, r3
   17318:	add	sp, fp, #0
   1731c:	pop	{fp}		; (ldr fp, [sp], #4)
   17320:	bx	lr
   17324:	str	fp, [sp, #-8]!
   17328:	str	lr, [sp, #4]
   1732c:	add	fp, sp, #4
   17330:	sub	sp, sp, #8
   17334:	str	r0, [fp, #-8]
   17338:	ldr	r3, [fp, #-8]
   1733c:	cmp	r3, #9
   17340:	bhi	1734c <__assert_fail@plt+0x5fec>
   17344:	mov	r3, #10
   17348:	str	r3, [fp, #-8]
   1734c:	ldr	r3, [fp, #-8]
   17350:	orr	r3, r3, #1
   17354:	str	r3, [fp, #-8]
   17358:	b	17368 <__assert_fail@plt+0x6008>
   1735c:	ldr	r3, [fp, #-8]
   17360:	add	r3, r3, #2
   17364:	str	r3, [fp, #-8]
   17368:	ldr	r3, [fp, #-8]
   1736c:	cmn	r3, #1
   17370:	beq	17390 <__assert_fail@plt+0x6030>
   17374:	ldr	r0, [fp, #-8]
   17378:	bl	17264 <__assert_fail@plt+0x5f04>
   1737c:	mov	r3, r0
   17380:	eor	r3, r3, #1
   17384:	uxtb	r3, r3
   17388:	cmp	r3, #0
   1738c:	bne	1735c <__assert_fail@plt+0x5ffc>
   17390:	ldr	r3, [fp, #-8]
   17394:	mov	r0, r3
   17398:	sub	sp, fp, #4
   1739c:	ldr	fp, [sp]
   173a0:	add	sp, sp, #4
   173a4:	pop	{pc}		; (ldr pc, [sp], #4)
   173a8:	push	{fp}		; (str fp, [sp, #-4]!)
   173ac:	add	fp, sp, #0
   173b0:	sub	sp, sp, #12
   173b4:	str	r0, [fp, #-8]
   173b8:	ldr	r3, [fp, #-8]
   173bc:	movw	r2, #772	; 0x304
   173c0:	movt	r2, #2
   173c4:	ldrd	r0, [r2]
   173c8:	strd	r0, [r3]
   173cc:	ldrd	r0, [r2, #8]
   173d0:	strd	r0, [r3, #8]
   173d4:	ldr	r2, [r2, #16]
   173d8:	str	r2, [r3, #16]
   173dc:	nop	{0}
   173e0:	add	sp, fp, #0
   173e4:	pop	{fp}		; (ldr fp, [sp], #4)
   173e8:	bx	lr
   173ec:	str	fp, [sp, #-8]!
   173f0:	str	lr, [sp, #4]
   173f4:	add	fp, sp, #4
   173f8:	sub	sp, sp, #16
   173fc:	str	r0, [fp, #-16]
   17400:	str	r1, [fp, #-20]	; 0xffffffec
   17404:	ldr	r3, [fp, #-16]
   17408:	mov	r1, #3
   1740c:	mov	r0, r3
   17410:	bl	1d83c <__assert_fail@plt+0xc4dc>
   17414:	str	r0, [fp, #-8]
   17418:	ldr	r3, [fp, #-8]
   1741c:	ldr	r2, [fp, #-20]	; 0xffffffec
   17420:	udiv	r2, r3, r2
   17424:	ldr	r1, [fp, #-20]	; 0xffffffec
   17428:	mul	r2, r1, r2
   1742c:	sub	r3, r3, r2
   17430:	mov	r0, r3
   17434:	sub	sp, fp, #4
   17438:	ldr	fp, [sp]
   1743c:	add	sp, sp, #4
   17440:	pop	{pc}		; (ldr pc, [sp], #4)
   17444:	push	{fp}		; (str fp, [sp, #-4]!)
   17448:	add	fp, sp, #0
   1744c:	sub	sp, sp, #12
   17450:	str	r0, [fp, #-8]
   17454:	str	r1, [fp, #-12]
   17458:	ldr	r2, [fp, #-8]
   1745c:	ldr	r3, [fp, #-12]
   17460:	cmp	r2, r3
   17464:	moveq	r3, #1
   17468:	movne	r3, #0
   1746c:	uxtb	r3, r3
   17470:	mov	r0, r3
   17474:	add	sp, fp, #0
   17478:	pop	{fp}		; (ldr fp, [sp], #4)
   1747c:	bx	lr
   17480:	push	{fp}		; (str fp, [sp, #-4]!)
   17484:	add	fp, sp, #0
   17488:	sub	sp, sp, #20
   1748c:	str	r0, [fp, #-16]
   17490:	ldr	r3, [fp, #-16]
   17494:	ldr	r3, [r3, #20]
   17498:	str	r3, [fp, #-8]
   1749c:	ldr	r2, [fp, #-8]
   174a0:	movw	r3, #772	; 0x304
   174a4:	movt	r3, #2
   174a8:	cmp	r2, r3
   174ac:	bne	174b8 <__assert_fail@plt+0x6158>
   174b0:	mov	r3, #1
   174b4:	b	175ac <__assert_fail@plt+0x624c>
   174b8:	movw	r3, #52429	; 0xcccd
   174bc:	movt	r3, #15820	; 0x3dcc
   174c0:	str	r3, [fp, #-12]
   174c4:	ldr	r3, [fp, #-8]
   174c8:	vldr	s15, [r3, #8]
   174cc:	vldr	s14, [fp, #-12]
   174d0:	vcmpe.f32	s14, s15
   174d4:	vmrs	APSR_nzcv, fpscr
   174d8:	bpl	17598 <__assert_fail@plt+0x6238>
   174dc:	ldr	r3, [fp, #-8]
   174e0:	vldr	s14, [r3, #8]
   174e4:	vldr	s13, [pc, #208]	; 175bc <__assert_fail@plt+0x625c>
   174e8:	vldr	s15, [fp, #-12]
   174ec:	vsub.f32	s15, s13, s15
   174f0:	vcmpe.f32	s14, s15
   174f4:	vmrs	APSR_nzcv, fpscr
   174f8:	bpl	17598 <__assert_fail@plt+0x6238>
   174fc:	vldr	s15, [fp, #-12]
   17500:	vldr	s14, [pc, #180]	; 175bc <__assert_fail@plt+0x625c>
   17504:	vadd.f32	s14, s15, s14
   17508:	ldr	r3, [fp, #-8]
   1750c:	vldr	s15, [r3, #12]
   17510:	vcmpe.f32	s14, s15
   17514:	vmrs	APSR_nzcv, fpscr
   17518:	bpl	17598 <__assert_fail@plt+0x6238>
   1751c:	ldr	r3, [fp, #-8]
   17520:	vldr	s15, [r3]
   17524:	vcmpe.f32	s15, #0.0
   17528:	vmrs	APSR_nzcv, fpscr
   1752c:	blt	17598 <__assert_fail@plt+0x6238>
   17530:	ldr	r3, [fp, #-8]
   17534:	vldr	s14, [r3]
   17538:	vldr	s15, [fp, #-12]
   1753c:	vadd.f32	s14, s14, s15
   17540:	ldr	r3, [fp, #-8]
   17544:	vldr	s15, [r3, #4]
   17548:	vcmpe.f32	s14, s15
   1754c:	vmrs	APSR_nzcv, fpscr
   17550:	bpl	17598 <__assert_fail@plt+0x6238>
   17554:	ldr	r3, [fp, #-8]
   17558:	vldr	s15, [r3, #4]
   1755c:	vldr	s14, [pc, #88]	; 175bc <__assert_fail@plt+0x625c>
   17560:	vcmpe.f32	s15, s14
   17564:	vmrs	APSR_nzcv, fpscr
   17568:	bhi	17598 <__assert_fail@plt+0x6238>
   1756c:	ldr	r3, [fp, #-8]
   17570:	vldr	s14, [r3]
   17574:	vldr	s15, [fp, #-12]
   17578:	vadd.f32	s14, s14, s15
   1757c:	ldr	r3, [fp, #-8]
   17580:	vldr	s15, [r3, #8]
   17584:	vcmpe.f32	s14, s15
   17588:	vmrs	APSR_nzcv, fpscr
   1758c:	bpl	17598 <__assert_fail@plt+0x6238>
   17590:	mov	r3, #1
   17594:	b	175ac <__assert_fail@plt+0x624c>
   17598:	ldr	r2, [fp, #-16]
   1759c:	movw	r3, #772	; 0x304
   175a0:	movt	r3, #2
   175a4:	str	r3, [r2, #20]
   175a8:	mov	r3, #0
   175ac:	mov	r0, r3
   175b0:	add	sp, fp, #0
   175b4:	pop	{fp}		; (ldr fp, [sp], #4)
   175b8:	bx	lr
   175bc:	svccc	0x00800000
   175c0:	str	fp, [sp, #-8]!
   175c4:	str	lr, [sp, #4]
   175c8:	add	fp, sp, #4
   175cc:	sub	sp, sp, #16
   175d0:	str	r0, [fp, #-16]
   175d4:	str	r1, [fp, #-20]	; 0xffffffec
   175d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   175dc:	ldrb	r3, [r3, #16]
   175e0:	eor	r3, r3, #1
   175e4:	uxtb	r3, r3
   175e8:	cmp	r3, #0
   175ec:	beq	17638 <__assert_fail@plt+0x62d8>
   175f0:	ldr	r3, [fp, #-16]
   175f4:	vmov	s15, r3
   175f8:	vcvt.f32.u32	s13, s15
   175fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   17600:	vldr	s14, [r3, #8]
   17604:	vdiv.f32	s15, s13, s14
   17608:	vstr	s15, [fp, #-8]
   1760c:	vldr	s15, [fp, #-8]
   17610:	vldr	s14, [pc, #136]	; 176a0 <__assert_fail@plt+0x6340>
   17614:	vcmpe.f32	s15, s14
   17618:	vmrs	APSR_nzcv, fpscr
   1761c:	blt	17628 <__assert_fail@plt+0x62c8>
   17620:	mov	r3, #0
   17624:	b	1768c <__assert_fail@plt+0x632c>
   17628:	vldr	s15, [fp, #-8]
   1762c:	vcvt.u32.f32	s15, s15
   17630:	vmov	r3, s15
   17634:	str	r3, [fp, #-16]
   17638:	ldr	r0, [fp, #-16]
   1763c:	bl	17324 <__assert_fail@plt+0x5fc4>
   17640:	str	r0, [fp, #-16]
   17644:	mov	r3, #0
   17648:	ldr	r2, [fp, #-16]
   1764c:	lsl	r2, r2, #2
   17650:	ldr	r1, [fp, #-16]
   17654:	lsr	r1, r1, #30
   17658:	cmp	r1, #0
   1765c:	beq	17664 <__assert_fail@plt+0x6304>
   17660:	mov	r3, #1
   17664:	cmp	r2, #0
   17668:	bge	17670 <__assert_fail@plt+0x6310>
   1766c:	mov	r3, #1
   17670:	and	r3, r3, #1
   17674:	uxtb	r3, r3
   17678:	cmp	r3, #0
   1767c:	beq	17688 <__assert_fail@plt+0x6328>
   17680:	mov	r3, #0
   17684:	b	1768c <__assert_fail@plt+0x632c>
   17688:	ldr	r3, [fp, #-16]
   1768c:	mov	r0, r3
   17690:	sub	sp, fp, #4
   17694:	ldr	fp, [sp]
   17698:	add	sp, sp, #4
   1769c:	pop	{pc}		; (ldr pc, [sp], #4)
   176a0:	svcmi	0x00800000
   176a4:	str	fp, [sp, #-8]!
   176a8:	str	lr, [sp, #4]
   176ac:	add	fp, sp, #4
   176b0:	sub	sp, sp, #24
   176b4:	str	r0, [fp, #-16]
   176b8:	str	r1, [fp, #-20]	; 0xffffffec
   176bc:	str	r2, [fp, #-24]	; 0xffffffe8
   176c0:	str	r3, [fp, #-28]	; 0xffffffe4
   176c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   176c8:	cmp	r3, #0
   176cc:	bne	176dc <__assert_fail@plt+0x637c>
   176d0:	movw	r3, #29676	; 0x73ec
   176d4:	movt	r3, #1
   176d8:	str	r3, [fp, #-24]	; 0xffffffe8
   176dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   176e0:	cmp	r3, #0
   176e4:	bne	176f4 <__assert_fail@plt+0x6394>
   176e8:	movw	r3, #29764	; 0x7444
   176ec:	movt	r3, #1
   176f0:	str	r3, [fp, #-28]	; 0xffffffe4
   176f4:	mov	r0, #40	; 0x28
   176f8:	bl	1d51c <__assert_fail@plt+0xc1bc>
   176fc:	mov	r3, r0
   17700:	str	r3, [fp, #-8]
   17704:	ldr	r3, [fp, #-8]
   17708:	cmp	r3, #0
   1770c:	bne	17718 <__assert_fail@plt+0x63b8>
   17710:	mov	r3, #0
   17714:	b	17844 <__assert_fail@plt+0x64e4>
   17718:	ldr	r3, [fp, #-20]	; 0xffffffec
   1771c:	cmp	r3, #0
   17720:	bne	17730 <__assert_fail@plt+0x63d0>
   17724:	movw	r3, #772	; 0x304
   17728:	movt	r3, #2
   1772c:	str	r3, [fp, #-20]	; 0xffffffec
   17730:	ldr	r3, [fp, #-8]
   17734:	ldr	r2, [fp, #-20]	; 0xffffffec
   17738:	str	r2, [r3, #20]
   1773c:	ldr	r0, [fp, #-8]
   17740:	bl	17480 <__assert_fail@plt+0x6120>
   17744:	mov	r3, r0
   17748:	eor	r3, r3, #1
   1774c:	uxtb	r3, r3
   17750:	cmp	r3, #0
   17754:	bne	17824 <__assert_fail@plt+0x64c4>
   17758:	ldr	r1, [fp, #-20]	; 0xffffffec
   1775c:	ldr	r0, [fp, #-16]
   17760:	bl	175c0 <__assert_fail@plt+0x6260>
   17764:	mov	r2, r0
   17768:	ldr	r3, [fp, #-8]
   1776c:	str	r2, [r3, #8]
   17770:	ldr	r3, [fp, #-8]
   17774:	ldr	r3, [r3, #8]
   17778:	cmp	r3, #0
   1777c:	beq	1782c <__assert_fail@plt+0x64cc>
   17780:	ldr	r3, [fp, #-8]
   17784:	ldr	r3, [r3, #8]
   17788:	mov	r1, #8
   1778c:	mov	r0, r3
   17790:	bl	1d44c <__assert_fail@plt+0xc0ec>
   17794:	mov	r3, r0
   17798:	mov	r2, r3
   1779c:	ldr	r3, [fp, #-8]
   177a0:	str	r2, [r3]
   177a4:	ldr	r3, [fp, #-8]
   177a8:	ldr	r3, [r3]
   177ac:	cmp	r3, #0
   177b0:	beq	17834 <__assert_fail@plt+0x64d4>
   177b4:	ldr	r3, [fp, #-8]
   177b8:	ldr	r2, [r3]
   177bc:	ldr	r3, [fp, #-8]
   177c0:	ldr	r3, [r3, #8]
   177c4:	lsl	r3, r3, #3
   177c8:	add	r2, r2, r3
   177cc:	ldr	r3, [fp, #-8]
   177d0:	str	r2, [r3, #4]
   177d4:	ldr	r3, [fp, #-8]
   177d8:	mov	r2, #0
   177dc:	str	r2, [r3, #12]
   177e0:	ldr	r3, [fp, #-8]
   177e4:	mov	r2, #0
   177e8:	str	r2, [r3, #16]
   177ec:	ldr	r3, [fp, #-8]
   177f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   177f4:	str	r2, [r3, #24]
   177f8:	ldr	r3, [fp, #-8]
   177fc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17800:	str	r2, [r3, #28]
   17804:	ldr	r3, [fp, #-8]
   17808:	ldr	r2, [fp, #4]
   1780c:	str	r2, [r3, #32]
   17810:	ldr	r3, [fp, #-8]
   17814:	mov	r2, #0
   17818:	str	r2, [r3, #36]	; 0x24
   1781c:	ldr	r3, [fp, #-8]
   17820:	b	17844 <__assert_fail@plt+0x64e4>
   17824:	nop	{0}
   17828:	b	17838 <__assert_fail@plt+0x64d8>
   1782c:	nop	{0}
   17830:	b	17838 <__assert_fail@plt+0x64d8>
   17834:	nop	{0}
   17838:	ldr	r0, [fp, #-8]
   1783c:	bl	1360c <__assert_fail@plt+0x22ac>
   17840:	mov	r3, #0
   17844:	mov	r0, r3
   17848:	sub	sp, fp, #4
   1784c:	ldr	fp, [sp]
   17850:	add	sp, sp, #4
   17854:	pop	{pc}		; (ldr pc, [sp], #4)
   17858:	str	fp, [sp, #-8]!
   1785c:	str	lr, [sp, #4]
   17860:	add	fp, sp, #4
   17864:	sub	sp, sp, #24
   17868:	str	r0, [fp, #-24]	; 0xffffffe8
   1786c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17870:	ldr	r3, [r3]
   17874:	str	r3, [fp, #-8]
   17878:	b	17958 <__assert_fail@plt+0x65f8>
   1787c:	ldr	r3, [fp, #-8]
   17880:	ldr	r3, [r3]
   17884:	cmp	r3, #0
   17888:	beq	1794c <__assert_fail@plt+0x65ec>
   1788c:	ldr	r3, [fp, #-8]
   17890:	ldr	r3, [r3, #4]
   17894:	str	r3, [fp, #-12]
   17898:	b	17900 <__assert_fail@plt+0x65a0>
   1789c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   178a0:	ldr	r3, [r3, #32]
   178a4:	cmp	r3, #0
   178a8:	beq	178c4 <__assert_fail@plt+0x6564>
   178ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   178b0:	ldr	r3, [r3, #32]
   178b4:	ldr	r2, [fp, #-12]
   178b8:	ldr	r2, [r2]
   178bc:	mov	r0, r2
   178c0:	blx	r3
   178c4:	ldr	r3, [fp, #-12]
   178c8:	mov	r2, #0
   178cc:	str	r2, [r3]
   178d0:	ldr	r3, [fp, #-12]
   178d4:	ldr	r3, [r3, #4]
   178d8:	str	r3, [fp, #-16]
   178dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   178e0:	ldr	r2, [r3, #36]	; 0x24
   178e4:	ldr	r3, [fp, #-12]
   178e8:	str	r2, [r3, #4]
   178ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   178f0:	ldr	r2, [fp, #-12]
   178f4:	str	r2, [r3, #36]	; 0x24
   178f8:	ldr	r3, [fp, #-16]
   178fc:	str	r3, [fp, #-12]
   17900:	ldr	r3, [fp, #-12]
   17904:	cmp	r3, #0
   17908:	bne	1789c <__assert_fail@plt+0x653c>
   1790c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17910:	ldr	r3, [r3, #32]
   17914:	cmp	r3, #0
   17918:	beq	17934 <__assert_fail@plt+0x65d4>
   1791c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17920:	ldr	r3, [r3, #32]
   17924:	ldr	r2, [fp, #-8]
   17928:	ldr	r2, [r2]
   1792c:	mov	r0, r2
   17930:	blx	r3
   17934:	ldr	r3, [fp, #-8]
   17938:	mov	r2, #0
   1793c:	str	r2, [r3]
   17940:	ldr	r3, [fp, #-8]
   17944:	mov	r2, #0
   17948:	str	r2, [r3, #4]
   1794c:	ldr	r3, [fp, #-8]
   17950:	add	r3, r3, #8
   17954:	str	r3, [fp, #-8]
   17958:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1795c:	ldr	r3, [r3, #4]
   17960:	ldr	r2, [fp, #-8]
   17964:	cmp	r2, r3
   17968:	bcc	1787c <__assert_fail@plt+0x651c>
   1796c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17970:	mov	r2, #0
   17974:	str	r2, [r3, #12]
   17978:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1797c:	mov	r2, #0
   17980:	str	r2, [r3, #16]
   17984:	nop	{0}
   17988:	sub	sp, fp, #4
   1798c:	ldr	fp, [sp]
   17990:	add	sp, sp, #4
   17994:	pop	{pc}		; (ldr pc, [sp], #4)
   17998:	str	fp, [sp, #-8]!
   1799c:	str	lr, [sp, #4]
   179a0:	add	fp, sp, #4
   179a4:	sub	sp, sp, #24
   179a8:	str	r0, [fp, #-24]	; 0xffffffe8
   179ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   179b0:	ldr	r3, [r3, #32]
   179b4:	cmp	r3, #0
   179b8:	beq	17a48 <__assert_fail@plt+0x66e8>
   179bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   179c0:	ldr	r3, [r3, #16]
   179c4:	cmp	r3, #0
   179c8:	beq	17a48 <__assert_fail@plt+0x66e8>
   179cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   179d0:	ldr	r3, [r3]
   179d4:	str	r3, [fp, #-8]
   179d8:	b	17a34 <__assert_fail@plt+0x66d4>
   179dc:	ldr	r3, [fp, #-8]
   179e0:	ldr	r3, [r3]
   179e4:	cmp	r3, #0
   179e8:	beq	17a28 <__assert_fail@plt+0x66c8>
   179ec:	ldr	r3, [fp, #-8]
   179f0:	str	r3, [fp, #-12]
   179f4:	b	17a1c <__assert_fail@plt+0x66bc>
   179f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   179fc:	ldr	r3, [r3, #32]
   17a00:	ldr	r2, [fp, #-12]
   17a04:	ldr	r2, [r2]
   17a08:	mov	r0, r2
   17a0c:	blx	r3
   17a10:	ldr	r3, [fp, #-12]
   17a14:	ldr	r3, [r3, #4]
   17a18:	str	r3, [fp, #-12]
   17a1c:	ldr	r3, [fp, #-12]
   17a20:	cmp	r3, #0
   17a24:	bne	179f8 <__assert_fail@plt+0x6698>
   17a28:	ldr	r3, [fp, #-8]
   17a2c:	add	r3, r3, #8
   17a30:	str	r3, [fp, #-8]
   17a34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17a38:	ldr	r3, [r3, #4]
   17a3c:	ldr	r2, [fp, #-8]
   17a40:	cmp	r2, r3
   17a44:	bcc	179dc <__assert_fail@plt+0x667c>
   17a48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17a4c:	ldr	r3, [r3]
   17a50:	str	r3, [fp, #-8]
   17a54:	b	17a9c <__assert_fail@plt+0x673c>
   17a58:	ldr	r3, [fp, #-8]
   17a5c:	ldr	r3, [r3, #4]
   17a60:	str	r3, [fp, #-12]
   17a64:	b	17a84 <__assert_fail@plt+0x6724>
   17a68:	ldr	r3, [fp, #-12]
   17a6c:	ldr	r3, [r3, #4]
   17a70:	str	r3, [fp, #-16]
   17a74:	ldr	r0, [fp, #-12]
   17a78:	bl	1360c <__assert_fail@plt+0x22ac>
   17a7c:	ldr	r3, [fp, #-16]
   17a80:	str	r3, [fp, #-12]
   17a84:	ldr	r3, [fp, #-12]
   17a88:	cmp	r3, #0
   17a8c:	bne	17a68 <__assert_fail@plt+0x6708>
   17a90:	ldr	r3, [fp, #-8]
   17a94:	add	r3, r3, #8
   17a98:	str	r3, [fp, #-8]
   17a9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17aa0:	ldr	r3, [r3, #4]
   17aa4:	ldr	r2, [fp, #-8]
   17aa8:	cmp	r2, r3
   17aac:	bcc	17a58 <__assert_fail@plt+0x66f8>
   17ab0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17ab4:	ldr	r3, [r3, #36]	; 0x24
   17ab8:	str	r3, [fp, #-12]
   17abc:	b	17adc <__assert_fail@plt+0x677c>
   17ac0:	ldr	r3, [fp, #-12]
   17ac4:	ldr	r3, [r3, #4]
   17ac8:	str	r3, [fp, #-16]
   17acc:	ldr	r0, [fp, #-12]
   17ad0:	bl	1360c <__assert_fail@plt+0x22ac>
   17ad4:	ldr	r3, [fp, #-16]
   17ad8:	str	r3, [fp, #-12]
   17adc:	ldr	r3, [fp, #-12]
   17ae0:	cmp	r3, #0
   17ae4:	bne	17ac0 <__assert_fail@plt+0x6760>
   17ae8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17aec:	ldr	r3, [r3]
   17af0:	mov	r0, r3
   17af4:	bl	1360c <__assert_fail@plt+0x22ac>
   17af8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17afc:	bl	1360c <__assert_fail@plt+0x22ac>
   17b00:	nop	{0}
   17b04:	sub	sp, fp, #4
   17b08:	ldr	fp, [sp]
   17b0c:	add	sp, sp, #4
   17b10:	pop	{pc}		; (ldr pc, [sp], #4)
   17b14:	str	fp, [sp, #-8]!
   17b18:	str	lr, [sp, #4]
   17b1c:	add	fp, sp, #4
   17b20:	sub	sp, sp, #16
   17b24:	str	r0, [fp, #-16]
   17b28:	ldr	r3, [fp, #-16]
   17b2c:	ldr	r3, [r3, #36]	; 0x24
   17b30:	cmp	r3, #0
   17b34:	beq	17b58 <__assert_fail@plt+0x67f8>
   17b38:	ldr	r3, [fp, #-16]
   17b3c:	ldr	r3, [r3, #36]	; 0x24
   17b40:	str	r3, [fp, #-8]
   17b44:	ldr	r3, [fp, #-8]
   17b48:	ldr	r2, [r3, #4]
   17b4c:	ldr	r3, [fp, #-16]
   17b50:	str	r2, [r3, #36]	; 0x24
   17b54:	b	17b68 <__assert_fail@plt+0x6808>
   17b58:	mov	r0, #8
   17b5c:	bl	1d51c <__assert_fail@plt+0xc1bc>
   17b60:	mov	r3, r0
   17b64:	str	r3, [fp, #-8]
   17b68:	ldr	r3, [fp, #-8]
   17b6c:	mov	r0, r3
   17b70:	sub	sp, fp, #4
   17b74:	ldr	fp, [sp]
   17b78:	add	sp, sp, #4
   17b7c:	pop	{pc}		; (ldr pc, [sp], #4)
   17b80:	push	{fp}		; (str fp, [sp, #-4]!)
   17b84:	add	fp, sp, #0
   17b88:	sub	sp, sp, #12
   17b8c:	str	r0, [fp, #-8]
   17b90:	str	r1, [fp, #-12]
   17b94:	ldr	r3, [fp, #-12]
   17b98:	mov	r2, #0
   17b9c:	str	r2, [r3]
   17ba0:	ldr	r3, [fp, #-8]
   17ba4:	ldr	r2, [r3, #36]	; 0x24
   17ba8:	ldr	r3, [fp, #-12]
   17bac:	str	r2, [r3, #4]
   17bb0:	ldr	r3, [fp, #-8]
   17bb4:	ldr	r2, [fp, #-12]
   17bb8:	str	r2, [r3, #36]	; 0x24
   17bbc:	nop	{0}
   17bc0:	add	sp, fp, #0
   17bc4:	pop	{fp}		; (ldr fp, [sp], #4)
   17bc8:	bx	lr
   17bcc:	str	fp, [sp, #-8]!
   17bd0:	str	lr, [sp, #4]
   17bd4:	add	fp, sp, #4
   17bd8:	sub	sp, sp, #40	; 0x28
   17bdc:	str	r0, [fp, #-32]	; 0xffffffe0
   17be0:	str	r1, [fp, #-36]	; 0xffffffdc
   17be4:	str	r2, [fp, #-40]	; 0xffffffd8
   17be8:	strb	r3, [fp, #-41]	; 0xffffffd7
   17bec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17bf0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17bf4:	bl	16d88 <__assert_fail@plt+0x5a28>
   17bf8:	str	r0, [fp, #-12]
   17bfc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17c00:	ldr	r2, [fp, #-12]
   17c04:	str	r2, [r3]
   17c08:	ldr	r3, [fp, #-12]
   17c0c:	ldr	r3, [r3]
   17c10:	cmp	r3, #0
   17c14:	bne	17c20 <__assert_fail@plt+0x68c0>
   17c18:	mov	r3, #0
   17c1c:	b	17d84 <__assert_fail@plt+0x6a24>
   17c20:	ldr	r3, [fp, #-12]
   17c24:	ldr	r3, [r3]
   17c28:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17c2c:	cmp	r2, r3
   17c30:	beq	17c5c <__assert_fail@plt+0x68fc>
   17c34:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17c38:	ldr	r3, [r3, #28]
   17c3c:	ldr	r2, [fp, #-12]
   17c40:	ldr	r2, [r2]
   17c44:	mov	r1, r2
   17c48:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17c4c:	blx	r3
   17c50:	mov	r3, r0
   17c54:	cmp	r3, #0
   17c58:	beq	17cc8 <__assert_fail@plt+0x6968>
   17c5c:	ldr	r3, [fp, #-12]
   17c60:	ldr	r3, [r3]
   17c64:	str	r3, [fp, #-24]	; 0xffffffe8
   17c68:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   17c6c:	cmp	r3, #0
   17c70:	beq	17cc0 <__assert_fail@plt+0x6960>
   17c74:	ldr	r3, [fp, #-12]
   17c78:	ldr	r3, [r3, #4]
   17c7c:	cmp	r3, #0
   17c80:	beq	17cb4 <__assert_fail@plt+0x6954>
   17c84:	ldr	r3, [fp, #-12]
   17c88:	ldr	r3, [r3, #4]
   17c8c:	str	r3, [fp, #-28]	; 0xffffffe4
   17c90:	ldr	r2, [fp, #-12]
   17c94:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17c98:	mov	r1, r2
   17c9c:	ldrd	r2, [r3]
   17ca0:	strd	r2, [r1]
   17ca4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17ca8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17cac:	bl	17b80 <__assert_fail@plt+0x6820>
   17cb0:	b	17cc0 <__assert_fail@plt+0x6960>
   17cb4:	ldr	r3, [fp, #-12]
   17cb8:	mov	r2, #0
   17cbc:	str	r2, [r3]
   17cc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17cc4:	b	17d84 <__assert_fail@plt+0x6a24>
   17cc8:	ldr	r3, [fp, #-12]
   17ccc:	str	r3, [fp, #-8]
   17cd0:	b	17d70 <__assert_fail@plt+0x6a10>
   17cd4:	ldr	r3, [fp, #-8]
   17cd8:	ldr	r3, [r3, #4]
   17cdc:	ldr	r3, [r3]
   17ce0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17ce4:	cmp	r2, r3
   17ce8:	beq	17d18 <__assert_fail@plt+0x69b8>
   17cec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17cf0:	ldr	r3, [r3, #28]
   17cf4:	ldr	r2, [fp, #-8]
   17cf8:	ldr	r2, [r2, #4]
   17cfc:	ldr	r2, [r2]
   17d00:	mov	r1, r2
   17d04:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17d08:	blx	r3
   17d0c:	mov	r3, r0
   17d10:	cmp	r3, #0
   17d14:	beq	17d64 <__assert_fail@plt+0x6a04>
   17d18:	ldr	r3, [fp, #-8]
   17d1c:	ldr	r3, [r3, #4]
   17d20:	ldr	r3, [r3]
   17d24:	str	r3, [fp, #-16]
   17d28:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   17d2c:	cmp	r3, #0
   17d30:	beq	17d5c <__assert_fail@plt+0x69fc>
   17d34:	ldr	r3, [fp, #-8]
   17d38:	ldr	r3, [r3, #4]
   17d3c:	str	r3, [fp, #-20]	; 0xffffffec
   17d40:	ldr	r3, [fp, #-20]	; 0xffffffec
   17d44:	ldr	r2, [r3, #4]
   17d48:	ldr	r3, [fp, #-8]
   17d4c:	str	r2, [r3, #4]
   17d50:	ldr	r1, [fp, #-20]	; 0xffffffec
   17d54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17d58:	bl	17b80 <__assert_fail@plt+0x6820>
   17d5c:	ldr	r3, [fp, #-16]
   17d60:	b	17d84 <__assert_fail@plt+0x6a24>
   17d64:	ldr	r3, [fp, #-8]
   17d68:	ldr	r3, [r3, #4]
   17d6c:	str	r3, [fp, #-8]
   17d70:	ldr	r3, [fp, #-8]
   17d74:	ldr	r3, [r3, #4]
   17d78:	cmp	r3, #0
   17d7c:	bne	17cd4 <__assert_fail@plt+0x6974>
   17d80:	mov	r3, #0
   17d84:	mov	r0, r3
   17d88:	sub	sp, fp, #4
   17d8c:	ldr	fp, [sp]
   17d90:	add	sp, sp, #4
   17d94:	pop	{pc}		; (ldr pc, [sp], #4)
   17d98:	str	fp, [sp, #-8]!
   17d9c:	str	lr, [sp, #4]
   17da0:	add	fp, sp, #4
   17da4:	sub	sp, sp, #40	; 0x28
   17da8:	str	r0, [fp, #-32]	; 0xffffffe0
   17dac:	str	r1, [fp, #-36]	; 0xffffffdc
   17db0:	mov	r3, r2
   17db4:	strb	r3, [fp, #-37]	; 0xffffffdb
   17db8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17dbc:	ldr	r3, [r3]
   17dc0:	str	r3, [fp, #-8]
   17dc4:	b	17f64 <__assert_fail@plt+0x6c04>
   17dc8:	ldr	r3, [fp, #-8]
   17dcc:	ldr	r3, [r3]
   17dd0:	cmp	r3, #0
   17dd4:	beq	17f58 <__assert_fail@plt+0x6bf8>
   17dd8:	ldr	r3, [fp, #-8]
   17ddc:	ldr	r3, [r3, #4]
   17de0:	str	r3, [fp, #-12]
   17de4:	b	17e74 <__assert_fail@plt+0x6b14>
   17de8:	ldr	r3, [fp, #-12]
   17dec:	ldr	r3, [r3]
   17df0:	str	r3, [fp, #-16]
   17df4:	ldr	r1, [fp, #-16]
   17df8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17dfc:	bl	16d88 <__assert_fail@plt+0x5a28>
   17e00:	str	r0, [fp, #-20]	; 0xffffffec
   17e04:	ldr	r3, [fp, #-12]
   17e08:	ldr	r3, [r3, #4]
   17e0c:	str	r3, [fp, #-24]	; 0xffffffe8
   17e10:	ldr	r3, [fp, #-20]	; 0xffffffec
   17e14:	ldr	r3, [r3]
   17e18:	cmp	r3, #0
   17e1c:	beq	17e40 <__assert_fail@plt+0x6ae0>
   17e20:	ldr	r3, [fp, #-20]	; 0xffffffec
   17e24:	ldr	r2, [r3, #4]
   17e28:	ldr	r3, [fp, #-12]
   17e2c:	str	r2, [r3, #4]
   17e30:	ldr	r3, [fp, #-20]	; 0xffffffec
   17e34:	ldr	r2, [fp, #-12]
   17e38:	str	r2, [r3, #4]
   17e3c:	b	17e6c <__assert_fail@plt+0x6b0c>
   17e40:	ldr	r3, [fp, #-20]	; 0xffffffec
   17e44:	ldr	r2, [fp, #-16]
   17e48:	str	r2, [r3]
   17e4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17e50:	ldr	r3, [r3, #12]
   17e54:	add	r2, r3, #1
   17e58:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17e5c:	str	r2, [r3, #12]
   17e60:	ldr	r1, [fp, #-12]
   17e64:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17e68:	bl	17b80 <__assert_fail@plt+0x6820>
   17e6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17e70:	str	r3, [fp, #-12]
   17e74:	ldr	r3, [fp, #-12]
   17e78:	cmp	r3, #0
   17e7c:	bne	17de8 <__assert_fail@plt+0x6a88>
   17e80:	ldr	r3, [fp, #-8]
   17e84:	ldr	r3, [r3]
   17e88:	str	r3, [fp, #-16]
   17e8c:	ldr	r3, [fp, #-8]
   17e90:	mov	r2, #0
   17e94:	str	r2, [r3, #4]
   17e98:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   17e9c:	cmp	r3, #0
   17ea0:	bne	17f54 <__assert_fail@plt+0x6bf4>
   17ea4:	ldr	r1, [fp, #-16]
   17ea8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17eac:	bl	16d88 <__assert_fail@plt+0x5a28>
   17eb0:	str	r0, [fp, #-20]	; 0xffffffec
   17eb4:	ldr	r3, [fp, #-20]	; 0xffffffec
   17eb8:	ldr	r3, [r3]
   17ebc:	cmp	r3, #0
   17ec0:	beq	17f10 <__assert_fail@plt+0x6bb0>
   17ec4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17ec8:	bl	17b14 <__assert_fail@plt+0x67b4>
   17ecc:	str	r0, [fp, #-28]	; 0xffffffe4
   17ed0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17ed4:	cmp	r3, #0
   17ed8:	bne	17ee4 <__assert_fail@plt+0x6b84>
   17edc:	mov	r3, #0
   17ee0:	b	17f7c <__assert_fail@plt+0x6c1c>
   17ee4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17ee8:	ldr	r2, [fp, #-16]
   17eec:	str	r2, [r3]
   17ef0:	ldr	r3, [fp, #-20]	; 0xffffffec
   17ef4:	ldr	r2, [r3, #4]
   17ef8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17efc:	str	r2, [r3, #4]
   17f00:	ldr	r3, [fp, #-20]	; 0xffffffec
   17f04:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17f08:	str	r2, [r3, #4]
   17f0c:	b	17f30 <__assert_fail@plt+0x6bd0>
   17f10:	ldr	r3, [fp, #-20]	; 0xffffffec
   17f14:	ldr	r2, [fp, #-16]
   17f18:	str	r2, [r3]
   17f1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17f20:	ldr	r3, [r3, #12]
   17f24:	add	r2, r3, #1
   17f28:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17f2c:	str	r2, [r3, #12]
   17f30:	ldr	r3, [fp, #-8]
   17f34:	mov	r2, #0
   17f38:	str	r2, [r3]
   17f3c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17f40:	ldr	r3, [r3, #12]
   17f44:	sub	r2, r3, #1
   17f48:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17f4c:	str	r2, [r3, #12]
   17f50:	b	17f58 <__assert_fail@plt+0x6bf8>
   17f54:	nop	{0}
   17f58:	ldr	r3, [fp, #-8]
   17f5c:	add	r3, r3, #8
   17f60:	str	r3, [fp, #-8]
   17f64:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17f68:	ldr	r3, [r3, #4]
   17f6c:	ldr	r2, [fp, #-8]
   17f70:	cmp	r2, r3
   17f74:	bcc	17dc8 <__assert_fail@plt+0x6a68>
   17f78:	mov	r3, #1
   17f7c:	mov	r0, r3
   17f80:	sub	sp, fp, #4
   17f84:	ldr	fp, [sp]
   17f88:	add	sp, sp, #4
   17f8c:	pop	{pc}		; (ldr pc, [sp], #4)
   17f90:	str	fp, [sp, #-8]!
   17f94:	str	lr, [sp, #4]
   17f98:	add	fp, sp, #4
   17f9c:	sub	sp, sp, #56	; 0x38
   17fa0:	str	r0, [fp, #-56]	; 0xffffffc8
   17fa4:	str	r1, [fp, #-60]	; 0xffffffc4
   17fa8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17fac:	ldr	r3, [r3, #20]
   17fb0:	mov	r1, r3
   17fb4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   17fb8:	bl	175c0 <__assert_fail@plt+0x6260>
   17fbc:	str	r0, [fp, #-8]
   17fc0:	ldr	r3, [fp, #-8]
   17fc4:	cmp	r3, #0
   17fc8:	bne	17fd4 <__assert_fail@plt+0x6c74>
   17fcc:	mov	r3, #0
   17fd0:	b	181b0 <__assert_fail@plt+0x6e50>
   17fd4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17fd8:	ldr	r3, [r3, #8]
   17fdc:	ldr	r2, [fp, #-8]
   17fe0:	cmp	r2, r3
   17fe4:	bne	17ff0 <__assert_fail@plt+0x6c90>
   17fe8:	mov	r3, #1
   17fec:	b	181b0 <__assert_fail@plt+0x6e50>
   17ff0:	sub	r3, fp, #52	; 0x34
   17ff4:	str	r3, [fp, #-12]
   17ff8:	mov	r1, #8
   17ffc:	ldr	r0, [fp, #-8]
   18000:	bl	1d44c <__assert_fail@plt+0xc0ec>
   18004:	mov	r3, r0
   18008:	mov	r2, r3
   1800c:	ldr	r3, [fp, #-12]
   18010:	str	r2, [r3]
   18014:	ldr	r3, [fp, #-12]
   18018:	ldr	r3, [r3]
   1801c:	cmp	r3, #0
   18020:	bne	1802c <__assert_fail@plt+0x6ccc>
   18024:	mov	r3, #0
   18028:	b	181b0 <__assert_fail@plt+0x6e50>
   1802c:	ldr	r3, [fp, #-12]
   18030:	ldr	r2, [fp, #-8]
   18034:	str	r2, [r3, #8]
   18038:	ldr	r3, [fp, #-12]
   1803c:	ldr	r2, [r3]
   18040:	ldr	r3, [fp, #-8]
   18044:	lsl	r3, r3, #3
   18048:	add	r2, r2, r3
   1804c:	ldr	r3, [fp, #-12]
   18050:	str	r2, [r3, #4]
   18054:	ldr	r3, [fp, #-12]
   18058:	mov	r2, #0
   1805c:	str	r2, [r3, #12]
   18060:	ldr	r3, [fp, #-12]
   18064:	mov	r2, #0
   18068:	str	r2, [r3, #16]
   1806c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   18070:	ldr	r2, [r3, #20]
   18074:	ldr	r3, [fp, #-12]
   18078:	str	r2, [r3, #20]
   1807c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   18080:	ldr	r2, [r3, #24]
   18084:	ldr	r3, [fp, #-12]
   18088:	str	r2, [r3, #24]
   1808c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   18090:	ldr	r2, [r3, #28]
   18094:	ldr	r3, [fp, #-12]
   18098:	str	r2, [r3, #28]
   1809c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   180a0:	ldr	r2, [r3, #32]
   180a4:	ldr	r3, [fp, #-12]
   180a8:	str	r2, [r3, #32]
   180ac:	ldr	r3, [fp, #-56]	; 0xffffffc8
   180b0:	ldr	r2, [r3, #36]	; 0x24
   180b4:	ldr	r3, [fp, #-12]
   180b8:	str	r2, [r3, #36]	; 0x24
   180bc:	mov	r2, #0
   180c0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   180c4:	ldr	r0, [fp, #-12]
   180c8:	bl	17d98 <__assert_fail@plt+0x6a38>
   180cc:	mov	r3, r0
   180d0:	cmp	r3, #0
   180d4:	beq	18140 <__assert_fail@plt+0x6de0>
   180d8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   180dc:	ldr	r3, [r3]
   180e0:	mov	r0, r3
   180e4:	bl	1360c <__assert_fail@plt+0x22ac>
   180e8:	ldr	r3, [fp, #-12]
   180ec:	ldr	r2, [r3]
   180f0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   180f4:	str	r2, [r3]
   180f8:	ldr	r3, [fp, #-12]
   180fc:	ldr	r2, [r3, #4]
   18100:	ldr	r3, [fp, #-56]	; 0xffffffc8
   18104:	str	r2, [r3, #4]
   18108:	ldr	r3, [fp, #-12]
   1810c:	ldr	r2, [r3, #8]
   18110:	ldr	r3, [fp, #-56]	; 0xffffffc8
   18114:	str	r2, [r3, #8]
   18118:	ldr	r3, [fp, #-12]
   1811c:	ldr	r2, [r3, #12]
   18120:	ldr	r3, [fp, #-56]	; 0xffffffc8
   18124:	str	r2, [r3, #12]
   18128:	ldr	r3, [fp, #-12]
   1812c:	ldr	r2, [r3, #36]	; 0x24
   18130:	ldr	r3, [fp, #-56]	; 0xffffffc8
   18134:	str	r2, [r3, #36]	; 0x24
   18138:	mov	r3, #1
   1813c:	b	181b0 <__assert_fail@plt+0x6e50>
   18140:	ldr	r3, [fp, #-12]
   18144:	ldr	r2, [r3, #36]	; 0x24
   18148:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1814c:	str	r2, [r3, #36]	; 0x24
   18150:	mov	r2, #1
   18154:	ldr	r1, [fp, #-12]
   18158:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1815c:	bl	17d98 <__assert_fail@plt+0x6a38>
   18160:	mov	r3, r0
   18164:	eor	r3, r3, #1
   18168:	uxtb	r3, r3
   1816c:	cmp	r3, #0
   18170:	bne	18198 <__assert_fail@plt+0x6e38>
   18174:	mov	r2, #0
   18178:	ldr	r1, [fp, #-12]
   1817c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18180:	bl	17d98 <__assert_fail@plt+0x6a38>
   18184:	mov	r3, r0
   18188:	eor	r3, r3, #1
   1818c:	uxtb	r3, r3
   18190:	cmp	r3, #0
   18194:	beq	1819c <__assert_fail@plt+0x6e3c>
   18198:	bl	11318 <abort@plt>
   1819c:	ldr	r3, [fp, #-12]
   181a0:	ldr	r3, [r3]
   181a4:	mov	r0, r3
   181a8:	bl	1360c <__assert_fail@plt+0x22ac>
   181ac:	mov	r3, #0
   181b0:	mov	r0, r3
   181b4:	sub	sp, fp, #4
   181b8:	ldr	fp, [sp]
   181bc:	add	sp, sp, #4
   181c0:	pop	{pc}		; (ldr pc, [sp], #4)
   181c4:	str	fp, [sp, #-8]!
   181c8:	str	lr, [sp, #4]
   181cc:	add	fp, sp, #4
   181d0:	sub	sp, sp, #40	; 0x28
   181d4:	str	r0, [fp, #-32]	; 0xffffffe0
   181d8:	str	r1, [fp, #-36]	; 0xffffffdc
   181dc:	str	r2, [fp, #-40]	; 0xffffffd8
   181e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   181e4:	cmp	r3, #0
   181e8:	bne	181f0 <__assert_fail@plt+0x6e90>
   181ec:	bl	11318 <abort@plt>
   181f0:	sub	r2, fp, #24
   181f4:	mov	r3, #0
   181f8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   181fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18200:	bl	17bcc <__assert_fail@plt+0x686c>
   18204:	str	r0, [fp, #-8]
   18208:	ldr	r3, [fp, #-8]
   1820c:	cmp	r3, #0
   18210:	beq	18234 <__assert_fail@plt+0x6ed4>
   18214:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18218:	cmp	r3, #0
   1821c:	beq	1822c <__assert_fail@plt+0x6ecc>
   18220:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18224:	ldr	r2, [fp, #-8]
   18228:	str	r2, [r3]
   1822c:	mov	r3, #0
   18230:	b	18438 <__assert_fail@plt+0x70d8>
   18234:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18238:	ldr	r3, [r3, #12]
   1823c:	vmov	s15, r3
   18240:	vcvt.f32.u32	s14, s15
   18244:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18248:	ldr	r3, [r3, #20]
   1824c:	vldr	s13, [r3, #8]
   18250:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18254:	ldr	r3, [r3, #8]
   18258:	vmov	s15, r3
   1825c:	vcvt.f32.u32	s15, s15
   18260:	vmul.f32	s15, s13, s15
   18264:	vcmpe.f32	s14, s15
   18268:	vmrs	APSR_nzcv, fpscr
   1826c:	ble	1838c <__assert_fail@plt+0x702c>
   18270:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18274:	bl	17480 <__assert_fail@plt+0x6120>
   18278:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1827c:	ldr	r3, [r3, #12]
   18280:	vmov	s15, r3
   18284:	vcvt.f32.u32	s14, s15
   18288:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1828c:	ldr	r3, [r3, #20]
   18290:	vldr	s13, [r3, #8]
   18294:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18298:	ldr	r3, [r3, #8]
   1829c:	vmov	s15, r3
   182a0:	vcvt.f32.u32	s15, s15
   182a4:	vmul.f32	s15, s13, s15
   182a8:	vcmpe.f32	s14, s15
   182ac:	vmrs	APSR_nzcv, fpscr
   182b0:	ble	1838c <__assert_fail@plt+0x702c>
   182b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   182b8:	ldr	r3, [r3, #20]
   182bc:	str	r3, [fp, #-12]
   182c0:	ldr	r3, [fp, #-12]
   182c4:	ldrb	r3, [r3, #16]
   182c8:	cmp	r3, #0
   182cc:	beq	182f0 <__assert_fail@plt+0x6f90>
   182d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   182d4:	ldr	r3, [r3, #8]
   182d8:	vmov	s15, r3
   182dc:	vcvt.f32.u32	s14, s15
   182e0:	ldr	r3, [fp, #-12]
   182e4:	vldr	s15, [r3, #12]
   182e8:	vmul.f32	s15, s14, s15
   182ec:	b	18318 <__assert_fail@plt+0x6fb8>
   182f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   182f4:	ldr	r3, [r3, #8]
   182f8:	vmov	s15, r3
   182fc:	vcvt.f32.u32	s14, s15
   18300:	ldr	r3, [fp, #-12]
   18304:	vldr	s15, [r3, #12]
   18308:	vmul.f32	s14, s14, s15
   1830c:	ldr	r3, [fp, #-12]
   18310:	vldr	s15, [r3, #8]
   18314:	vmul.f32	s15, s14, s15
   18318:	vstr	s15, [fp, #-16]
   1831c:	vldr	s15, [fp, #-16]
   18320:	vldr	s14, [pc, #292]	; 1844c <__assert_fail@plt+0x70ec>
   18324:	vcmpe.f32	s15, s14
   18328:	vmrs	APSR_nzcv, fpscr
   1832c:	blt	18338 <__assert_fail@plt+0x6fd8>
   18330:	mvn	r3, #0
   18334:	b	18438 <__assert_fail@plt+0x70d8>
   18338:	vldr	s15, [fp, #-16]
   1833c:	vcvt.u32.f32	s15, s15
   18340:	vmov	r1, s15
   18344:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18348:	bl	17f90 <__assert_fail@plt+0x6c30>
   1834c:	mov	r3, r0
   18350:	eor	r3, r3, #1
   18354:	uxtb	r3, r3
   18358:	cmp	r3, #0
   1835c:	beq	18368 <__assert_fail@plt+0x7008>
   18360:	mvn	r3, #0
   18364:	b	18438 <__assert_fail@plt+0x70d8>
   18368:	sub	r2, fp, #24
   1836c:	mov	r3, #0
   18370:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18374:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18378:	bl	17bcc <__assert_fail@plt+0x686c>
   1837c:	mov	r3, r0
   18380:	cmp	r3, #0
   18384:	beq	1838c <__assert_fail@plt+0x702c>
   18388:	bl	11318 <abort@plt>
   1838c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18390:	ldr	r3, [r3]
   18394:	cmp	r3, #0
   18398:	beq	18400 <__assert_fail@plt+0x70a0>
   1839c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   183a0:	bl	17b14 <__assert_fail@plt+0x67b4>
   183a4:	str	r0, [fp, #-20]	; 0xffffffec
   183a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   183ac:	cmp	r3, #0
   183b0:	bne	183bc <__assert_fail@plt+0x705c>
   183b4:	mvn	r3, #0
   183b8:	b	18438 <__assert_fail@plt+0x70d8>
   183bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   183c0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   183c4:	str	r2, [r3]
   183c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   183cc:	ldr	r2, [r3, #4]
   183d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   183d4:	str	r2, [r3, #4]
   183d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   183dc:	ldr	r2, [fp, #-20]	; 0xffffffec
   183e0:	str	r2, [r3, #4]
   183e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   183e8:	ldr	r3, [r3, #16]
   183ec:	add	r2, r3, #1
   183f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   183f4:	str	r2, [r3, #16]
   183f8:	mov	r3, #1
   183fc:	b	18438 <__assert_fail@plt+0x70d8>
   18400:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18404:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18408:	str	r2, [r3]
   1840c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18410:	ldr	r3, [r3, #16]
   18414:	add	r2, r3, #1
   18418:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1841c:	str	r2, [r3, #16]
   18420:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18424:	ldr	r3, [r3, #12]
   18428:	add	r2, r3, #1
   1842c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18430:	str	r2, [r3, #12]
   18434:	mov	r3, #1
   18438:	mov	r0, r3
   1843c:	sub	sp, fp, #4
   18440:	ldr	fp, [sp]
   18444:	add	sp, sp, #4
   18448:	pop	{pc}		; (ldr pc, [sp], #4)
   1844c:	svcmi	0x00800000
   18450:	str	fp, [sp, #-8]!
   18454:	str	lr, [sp, #4]
   18458:	add	fp, sp, #4
   1845c:	sub	sp, sp, #16
   18460:	str	r0, [fp, #-16]
   18464:	str	r1, [fp, #-20]	; 0xffffffec
   18468:	sub	r3, fp, #12
   1846c:	mov	r2, r3
   18470:	ldr	r1, [fp, #-20]	; 0xffffffec
   18474:	ldr	r0, [fp, #-16]
   18478:	bl	181c4 <__assert_fail@plt+0x6e64>
   1847c:	str	r0, [fp, #-8]
   18480:	ldr	r3, [fp, #-8]
   18484:	cmn	r3, #1
   18488:	beq	184a8 <__assert_fail@plt+0x7148>
   1848c:	ldr	r3, [fp, #-8]
   18490:	cmp	r3, #0
   18494:	bne	184a0 <__assert_fail@plt+0x7140>
   18498:	ldr	r3, [fp, #-12]
   1849c:	b	184ac <__assert_fail@plt+0x714c>
   184a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   184a4:	b	184ac <__assert_fail@plt+0x714c>
   184a8:	mov	r3, #0
   184ac:	mov	r0, r3
   184b0:	sub	sp, fp, #4
   184b4:	ldr	fp, [sp]
   184b8:	add	sp, sp, #4
   184bc:	pop	{pc}		; (ldr pc, [sp], #4)
   184c0:	str	fp, [sp, #-8]!
   184c4:	str	lr, [sp, #4]
   184c8:	add	fp, sp, #4
   184cc:	sub	sp, sp, #32
   184d0:	str	r0, [fp, #-32]	; 0xffffffe0
   184d4:	str	r1, [fp, #-36]	; 0xffffffdc
   184d8:	sub	r2, fp, #28
   184dc:	mov	r3, #1
   184e0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   184e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   184e8:	bl	17bcc <__assert_fail@plt+0x686c>
   184ec:	str	r0, [fp, #-12]
   184f0:	ldr	r3, [fp, #-12]
   184f4:	cmp	r3, #0
   184f8:	bne	18504 <__assert_fail@plt+0x71a4>
   184fc:	mov	r3, #0
   18500:	b	18694 <__assert_fail@plt+0x7334>
   18504:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18508:	ldr	r3, [r3, #16]
   1850c:	sub	r2, r3, #1
   18510:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18514:	str	r2, [r3, #16]
   18518:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1851c:	ldr	r3, [r3]
   18520:	cmp	r3, #0
   18524:	bne	18690 <__assert_fail@plt+0x7330>
   18528:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1852c:	ldr	r3, [r3, #12]
   18530:	sub	r2, r3, #1
   18534:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18538:	str	r2, [r3, #12]
   1853c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18540:	ldr	r3, [r3, #12]
   18544:	vmov	s15, r3
   18548:	vcvt.f32.u32	s14, s15
   1854c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18550:	ldr	r3, [r3, #20]
   18554:	vldr	s13, [r3]
   18558:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1855c:	ldr	r3, [r3, #8]
   18560:	vmov	s15, r3
   18564:	vcvt.f32.u32	s15, s15
   18568:	vmul.f32	s15, s13, s15
   1856c:	vcmpe.f32	s14, s15
   18570:	vmrs	APSR_nzcv, fpscr
   18574:	bpl	18690 <__assert_fail@plt+0x7330>
   18578:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1857c:	bl	17480 <__assert_fail@plt+0x6120>
   18580:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18584:	ldr	r3, [r3, #12]
   18588:	vmov	s15, r3
   1858c:	vcvt.f32.u32	s14, s15
   18590:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18594:	ldr	r3, [r3, #20]
   18598:	vldr	s13, [r3]
   1859c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   185a0:	ldr	r3, [r3, #8]
   185a4:	vmov	s15, r3
   185a8:	vcvt.f32.u32	s15, s15
   185ac:	vmul.f32	s15, s13, s15
   185b0:	vcmpe.f32	s14, s15
   185b4:	vmrs	APSR_nzcv, fpscr
   185b8:	bpl	18690 <__assert_fail@plt+0x7330>
   185bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   185c0:	ldr	r3, [r3, #20]
   185c4:	str	r3, [fp, #-16]
   185c8:	ldr	r3, [fp, #-16]
   185cc:	ldrb	r3, [r3, #16]
   185d0:	cmp	r3, #0
   185d4:	beq	185fc <__assert_fail@plt+0x729c>
   185d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   185dc:	ldr	r3, [r3, #8]
   185e0:	vmov	s15, r3
   185e4:	vcvt.f32.u32	s14, s15
   185e8:	ldr	r3, [fp, #-16]
   185ec:	vldr	s15, [r3, #4]
   185f0:	vmul.f32	s15, s14, s15
   185f4:	vcvt.u32.f32	s15, s15
   185f8:	b	18628 <__assert_fail@plt+0x72c8>
   185fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18600:	ldr	r3, [r3, #8]
   18604:	vmov	s15, r3
   18608:	vcvt.f32.u32	s14, s15
   1860c:	ldr	r3, [fp, #-16]
   18610:	vldr	s15, [r3, #4]
   18614:	vmul.f32	s14, s14, s15
   18618:	ldr	r3, [fp, #-16]
   1861c:	vldr	s15, [r3, #8]
   18620:	vmul.f32	s15, s14, s15
   18624:	vcvt.u32.f32	s15, s15
   18628:	vstr	s15, [fp, #-20]	; 0xffffffec
   1862c:	ldr	r1, [fp, #-20]	; 0xffffffec
   18630:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18634:	bl	17f90 <__assert_fail@plt+0x6c30>
   18638:	mov	r3, r0
   1863c:	eor	r3, r3, #1
   18640:	uxtb	r3, r3
   18644:	cmp	r3, #0
   18648:	beq	18690 <__assert_fail@plt+0x7330>
   1864c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18650:	ldr	r3, [r3, #36]	; 0x24
   18654:	str	r3, [fp, #-8]
   18658:	b	18678 <__assert_fail@plt+0x7318>
   1865c:	ldr	r3, [fp, #-8]
   18660:	ldr	r3, [r3, #4]
   18664:	str	r3, [fp, #-24]	; 0xffffffe8
   18668:	ldr	r0, [fp, #-8]
   1866c:	bl	1360c <__assert_fail@plt+0x22ac>
   18670:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18674:	str	r3, [fp, #-8]
   18678:	ldr	r3, [fp, #-8]
   1867c:	cmp	r3, #0
   18680:	bne	1865c <__assert_fail@plt+0x72fc>
   18684:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18688:	mov	r2, #0
   1868c:	str	r2, [r3, #36]	; 0x24
   18690:	ldr	r3, [fp, #-12]
   18694:	mov	r0, r3
   18698:	sub	sp, fp, #4
   1869c:	ldr	fp, [sp]
   186a0:	add	sp, sp, #4
   186a4:	pop	{pc}		; (ldr pc, [sp], #4)
   186a8:	str	fp, [sp, #-8]!
   186ac:	str	lr, [sp, #4]
   186b0:	add	fp, sp, #4
   186b4:	sub	sp, sp, #8
   186b8:	str	r0, [fp, #-8]
   186bc:	str	r1, [fp, #-12]
   186c0:	ldr	r1, [fp, #-12]
   186c4:	ldr	r0, [fp, #-8]
   186c8:	bl	184c0 <__assert_fail@plt+0x7160>
   186cc:	mov	r3, r0
   186d0:	mov	r0, r3
   186d4:	sub	sp, fp, #4
   186d8:	ldr	fp, [sp]
   186dc:	add	sp, sp, #4
   186e0:	pop	{pc}		; (ldr pc, [sp], #4)
   186e4:	push	{fp}		; (str fp, [sp, #-4]!)
   186e8:	add	fp, sp, #0
   186ec:	sub	sp, sp, #20
   186f0:	str	r0, [fp, #-16]
   186f4:	str	r1, [fp, #-20]	; 0xffffffec
   186f8:	ldr	r3, [fp, #-16]
   186fc:	mov	r2, #1
   18700:	strb	r2, [r3, #28]
   18704:	ldr	r3, [fp, #-16]
   18708:	mov	r2, #0
   1870c:	str	r2, [r3, #20]
   18710:	ldr	r3, [fp, #-16]
   18714:	mov	r2, #0
   18718:	str	r2, [r3, #24]
   1871c:	mov	r3, #0
   18720:	str	r3, [fp, #-8]
   18724:	b	18744 <__assert_fail@plt+0x73e4>
   18728:	ldr	r3, [fp, #-16]
   1872c:	ldr	r2, [fp, #-8]
   18730:	ldr	r1, [fp, #-20]	; 0xffffffec
   18734:	str	r1, [r3, r2, lsl #2]
   18738:	ldr	r3, [fp, #-8]
   1873c:	add	r3, r3, #1
   18740:	str	r3, [fp, #-8]
   18744:	ldr	r3, [fp, #-8]
   18748:	cmp	r3, #3
   1874c:	ble	18728 <__assert_fail@plt+0x73c8>
   18750:	ldr	r3, [fp, #-16]
   18754:	ldr	r2, [fp, #-20]	; 0xffffffec
   18758:	str	r2, [r3, #16]
   1875c:	nop	{0}
   18760:	add	sp, fp, #0
   18764:	pop	{fp}		; (ldr fp, [sp], #4)
   18768:	bx	lr
   1876c:	push	{fp}		; (str fp, [sp, #-4]!)
   18770:	add	fp, sp, #0
   18774:	sub	sp, sp, #12
   18778:	str	r0, [fp, #-8]
   1877c:	ldr	r3, [fp, #-8]
   18780:	ldrb	r3, [r3, #28]
   18784:	mov	r0, r3
   18788:	add	sp, fp, #0
   1878c:	pop	{fp}		; (ldr fp, [sp], #4)
   18790:	bx	lr
   18794:	push	{fp}		; (str fp, [sp, #-4]!)
   18798:	add	fp, sp, #0
   1879c:	sub	sp, sp, #20
   187a0:	str	r0, [fp, #-16]
   187a4:	str	r1, [fp, #-20]	; 0xffffffec
   187a8:	ldr	r3, [fp, #-16]
   187ac:	ldr	r3, [r3, #20]
   187b0:	ldr	r2, [fp, #-16]
   187b4:	ldrb	r2, [r2, #28]
   187b8:	eor	r2, r2, #1
   187bc:	uxtb	r2, r2
   187c0:	add	r3, r3, r2
   187c4:	and	r3, r3, #3
   187c8:	str	r3, [fp, #-8]
   187cc:	ldr	r3, [fp, #-16]
   187d0:	ldr	r2, [fp, #-8]
   187d4:	ldr	r3, [r3, r2, lsl #2]
   187d8:	str	r3, [fp, #-12]
   187dc:	ldr	r3, [fp, #-16]
   187e0:	ldr	r2, [fp, #-8]
   187e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   187e8:	str	r1, [r3, r2, lsl #2]
   187ec:	ldr	r3, [fp, #-16]
   187f0:	ldr	r2, [fp, #-8]
   187f4:	str	r2, [r3, #20]
   187f8:	ldr	r3, [fp, #-16]
   187fc:	ldr	r3, [r3, #24]
   18800:	ldr	r2, [fp, #-8]
   18804:	cmp	r2, r3
   18808:	bne	18834 <__assert_fail@plt+0x74d4>
   1880c:	ldr	r3, [fp, #-16]
   18810:	ldr	r3, [r3, #24]
   18814:	ldr	r2, [fp, #-16]
   18818:	ldrb	r2, [r2, #28]
   1881c:	eor	r2, r2, #1
   18820:	uxtb	r2, r2
   18824:	add	r3, r3, r2
   18828:	and	r2, r3, #3
   1882c:	ldr	r3, [fp, #-16]
   18830:	str	r2, [r3, #24]
   18834:	ldr	r3, [fp, #-16]
   18838:	mov	r2, #0
   1883c:	strb	r2, [r3, #28]
   18840:	ldr	r3, [fp, #-12]
   18844:	mov	r0, r3
   18848:	add	sp, fp, #0
   1884c:	pop	{fp}		; (ldr fp, [sp], #4)
   18850:	bx	lr
   18854:	str	fp, [sp, #-8]!
   18858:	str	lr, [sp, #4]
   1885c:	add	fp, sp, #4
   18860:	sub	sp, sp, #16
   18864:	str	r0, [fp, #-16]
   18868:	ldr	r0, [fp, #-16]
   1886c:	bl	1876c <__assert_fail@plt+0x740c>
   18870:	mov	r3, r0
   18874:	cmp	r3, #0
   18878:	beq	18880 <__assert_fail@plt+0x7520>
   1887c:	bl	11318 <abort@plt>
   18880:	ldr	r3, [fp, #-16]
   18884:	ldr	r2, [r3, #20]
   18888:	ldr	r3, [fp, #-16]
   1888c:	ldr	r3, [r3, r2, lsl #2]
   18890:	str	r3, [fp, #-8]
   18894:	ldr	r3, [fp, #-16]
   18898:	ldr	r2, [r3, #20]
   1889c:	ldr	r3, [fp, #-16]
   188a0:	ldr	r1, [r3, #16]
   188a4:	ldr	r3, [fp, #-16]
   188a8:	str	r1, [r3, r2, lsl #2]
   188ac:	ldr	r3, [fp, #-16]
   188b0:	ldr	r2, [r3, #20]
   188b4:	ldr	r3, [fp, #-16]
   188b8:	ldr	r3, [r3, #24]
   188bc:	cmp	r2, r3
   188c0:	bne	188d4 <__assert_fail@plt+0x7574>
   188c4:	ldr	r3, [fp, #-16]
   188c8:	mov	r2, #1
   188cc:	strb	r2, [r3, #28]
   188d0:	b	188ec <__assert_fail@plt+0x758c>
   188d4:	ldr	r3, [fp, #-16]
   188d8:	ldr	r3, [r3, #20]
   188dc:	add	r3, r3, #3
   188e0:	and	r2, r3, #3
   188e4:	ldr	r3, [fp, #-16]
   188e8:	str	r2, [r3, #20]
   188ec:	ldr	r3, [fp, #-8]
   188f0:	mov	r0, r3
   188f4:	sub	sp, fp, #4
   188f8:	ldr	fp, [sp]
   188fc:	add	sp, sp, #4
   18900:	pop	{pc}		; (ldr pc, [sp], #4)
   18904:	str	fp, [sp, #-8]!
   18908:	str	lr, [sp, #4]
   1890c:	add	fp, sp, #4
   18910:	sub	sp, sp, #24
   18914:	strd	r0, [fp, #-20]	; 0xffffffec
   18918:	str	r2, [fp, #-24]	; 0xffffffe8
   1891c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18920:	add	r3, r3, #20
   18924:	str	r3, [fp, #-8]
   18928:	ldr	r3, [fp, #-8]
   1892c:	mov	r2, #0
   18930:	strb	r2, [r3]
   18934:	ldrd	r0, [fp, #-20]	; 0xffffffec
   18938:	mov	r2, #10
   1893c:	mov	r3, #0
   18940:	bl	1ef14 <__assert_fail@plt+0xdbb4>
   18944:	uxtb	r3, r2
   18948:	ldr	r2, [fp, #-8]
   1894c:	sub	r2, r2, #1
   18950:	str	r2, [fp, #-8]
   18954:	add	r3, r3, #48	; 0x30
   18958:	uxtb	r2, r3
   1895c:	ldr	r3, [fp, #-8]
   18960:	strb	r2, [r3]
   18964:	ldrd	r0, [fp, #-20]	; 0xffffffec
   18968:	mov	r2, #10
   1896c:	mov	r3, #0
   18970:	bl	1ef14 <__assert_fail@plt+0xdbb4>
   18974:	mov	r2, r0
   18978:	mov	r3, r1
   1897c:	strd	r2, [fp, #-20]	; 0xffffffec
   18980:	ldrd	r2, [fp, #-20]	; 0xffffffec
   18984:	orrs	r3, r2, r3
   18988:	bne	18934 <__assert_fail@plt+0x75d4>
   1898c:	ldr	r3, [fp, #-8]
   18990:	mov	r0, r3
   18994:	sub	sp, fp, #4
   18998:	ldr	fp, [sp]
   1899c:	add	sp, sp, #4
   189a0:	pop	{pc}		; (ldr pc, [sp], #4)
   189a4:	push	{r2, r3}
   189a8:	str	fp, [sp, #-8]!
   189ac:	str	lr, [sp, #4]
   189b0:	add	fp, sp, #4
   189b4:	sub	sp, sp, #16
   189b8:	str	r0, [fp, #-16]
   189bc:	str	r1, [fp, #-20]	; 0xffffffec
   189c0:	mov	r3, #0
   189c4:	str	r3, [fp, #-8]
   189c8:	ldr	r3, [fp, #4]
   189cc:	and	r3, r3, #64	; 0x40
   189d0:	cmp	r3, #0
   189d4:	beq	189f4 <__assert_fail@plt+0x7694>
   189d8:	add	r3, fp, #8
   189dc:	str	r3, [fp, #-12]
   189e0:	ldr	r3, [fp, #-12]
   189e4:	add	r2, r3, #4
   189e8:	str	r2, [fp, #-12]
   189ec:	ldr	r3, [r3]
   189f0:	str	r3, [fp, #-8]
   189f4:	ldr	r3, [fp, #-8]
   189f8:	ldr	r2, [fp, #4]
   189fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   18a00:	ldr	r0, [fp, #-16]
   18a04:	bl	11204 <openat64@plt>
   18a08:	mov	r3, r0
   18a0c:	mov	r0, r3
   18a10:	bl	1b4f8 <__assert_fail@plt+0xa198>
   18a14:	mov	r3, r0
   18a18:	mov	r0, r3
   18a1c:	sub	sp, fp, #4
   18a20:	ldr	fp, [sp]
   18a24:	ldr	lr, [sp, #4]
   18a28:	add	sp, sp, #8
   18a2c:	add	sp, sp, #8
   18a30:	bx	lr
   18a34:	str	fp, [sp, #-8]!
   18a38:	str	lr, [sp, #4]
   18a3c:	add	fp, sp, #4
   18a40:	sub	sp, sp, #32
   18a44:	str	r0, [fp, #-24]	; 0xffffffe8
   18a48:	str	r1, [fp, #-28]	; 0xffffffe4
   18a4c:	str	r2, [fp, #-32]	; 0xffffffe0
   18a50:	str	r3, [fp, #-36]	; 0xffffffdc
   18a54:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18a58:	orr	r3, r3, #540672	; 0x84000
   18a5c:	orr	r3, r3, #2304	; 0x900
   18a60:	str	r3, [fp, #-8]
   18a64:	ldr	r2, [fp, #-8]
   18a68:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18a6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a70:	bl	189a4 <__assert_fail@plt+0x7644>
   18a74:	str	r0, [fp, #-12]
   18a78:	ldr	r3, [fp, #-12]
   18a7c:	cmp	r3, #0
   18a80:	bge	18a8c <__assert_fail@plt+0x772c>
   18a84:	mov	r3, #0
   18a88:	b	18ae0 <__assert_fail@plt+0x7780>
   18a8c:	ldr	r0, [fp, #-12]
   18a90:	bl	112b8 <fdopendir@plt>
   18a94:	str	r0, [fp, #-16]
   18a98:	ldr	r3, [fp, #-16]
   18a9c:	cmp	r3, #0
   18aa0:	beq	18ab4 <__assert_fail@plt+0x7754>
   18aa4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18aa8:	ldr	r2, [fp, #-12]
   18aac:	str	r2, [r3]
   18ab0:	b	18adc <__assert_fail@plt+0x777c>
   18ab4:	bl	11228 <__errno_location@plt>
   18ab8:	mov	r3, r0
   18abc:	ldr	r3, [r3]
   18ac0:	str	r3, [fp, #-20]	; 0xffffffec
   18ac4:	ldr	r0, [fp, #-12]
   18ac8:	bl	11324 <close@plt>
   18acc:	bl	11228 <__errno_location@plt>
   18ad0:	mov	r2, r0
   18ad4:	ldr	r3, [fp, #-20]	; 0xffffffec
   18ad8:	str	r3, [r2]
   18adc:	ldr	r3, [fp, #-16]
   18ae0:	mov	r0, r3
   18ae4:	sub	sp, fp, #4
   18ae8:	ldr	fp, [sp]
   18aec:	add	sp, sp, #4
   18af0:	pop	{pc}		; (ldr pc, [sp], #4)
   18af4:	str	fp, [sp, #-8]!
   18af8:	str	lr, [sp, #4]
   18afc:	add	fp, sp, #4
   18b00:	sub	sp, sp, #16
   18b04:	str	r0, [fp, #-16]
   18b08:	ldr	r3, [fp, #-16]
   18b0c:	cmp	r3, #0
   18b10:	bne	18b38 <__assert_fail@plt+0x77d8>
   18b14:	movw	r3, #4512	; 0x11a0
   18b18:	movt	r3, #3
   18b1c:	ldr	r3, [r3]
   18b20:	mov	r2, #55	; 0x37
   18b24:	mov	r1, #1
   18b28:	movw	r0, #900	; 0x384
   18b2c:	movt	r0, #2
   18b30:	bl	11114 <fwrite@plt>
   18b34:	bl	11318 <abort@plt>
   18b38:	mov	r1, #47	; 0x2f
   18b3c:	ldr	r0, [fp, #-16]
   18b40:	bl	11294 <strrchr@plt>
   18b44:	str	r0, [fp, #-8]
   18b48:	ldr	r3, [fp, #-8]
   18b4c:	cmp	r3, #0
   18b50:	beq	18b60 <__assert_fail@plt+0x7800>
   18b54:	ldr	r3, [fp, #-8]
   18b58:	add	r3, r3, #1
   18b5c:	b	18b64 <__assert_fail@plt+0x7804>
   18b60:	ldr	r3, [fp, #-16]
   18b64:	str	r3, [fp, #-12]
   18b68:	ldr	r2, [fp, #-12]
   18b6c:	ldr	r3, [fp, #-16]
   18b70:	sub	r3, r2, r3
   18b74:	cmp	r3, #6
   18b78:	ble	18be8 <__assert_fail@plt+0x7888>
   18b7c:	ldr	r3, [fp, #-12]
   18b80:	sub	r3, r3, #7
   18b84:	mov	r2, #7
   18b88:	movw	r1, #956	; 0x3bc
   18b8c:	movt	r1, #2
   18b90:	mov	r0, r3
   18b94:	bl	1130c <strncmp@plt>
   18b98:	mov	r3, r0
   18b9c:	cmp	r3, #0
   18ba0:	bne	18be8 <__assert_fail@plt+0x7888>
   18ba4:	ldr	r3, [fp, #-12]
   18ba8:	str	r3, [fp, #-16]
   18bac:	mov	r2, #3
   18bb0:	movw	r1, #964	; 0x3c4
   18bb4:	movt	r1, #2
   18bb8:	ldr	r0, [fp, #-12]
   18bbc:	bl	1130c <strncmp@plt>
   18bc0:	mov	r3, r0
   18bc4:	cmp	r3, #0
   18bc8:	bne	18be8 <__assert_fail@plt+0x7888>
   18bcc:	ldr	r3, [fp, #-12]
   18bd0:	add	r3, r3, #3
   18bd4:	str	r3, [fp, #-16]
   18bd8:	movw	r3, #4496	; 0x1190
   18bdc:	movt	r3, #3
   18be0:	ldr	r2, [fp, #-16]
   18be4:	str	r2, [r3]
   18be8:	movw	r3, #4560	; 0x11d0
   18bec:	movt	r3, #3
   18bf0:	ldr	r2, [fp, #-16]
   18bf4:	str	r2, [r3]
   18bf8:	movw	r3, #4500	; 0x1194
   18bfc:	movt	r3, #3
   18c00:	ldr	r2, [fp, #-16]
   18c04:	str	r2, [r3]
   18c08:	nop	{0}
   18c0c:	sub	sp, fp, #4
   18c10:	ldr	fp, [sp]
   18c14:	add	sp, sp, #4
   18c18:	pop	{pc}		; (ldr pc, [sp], #4)
   18c1c:	str	fp, [sp, #-8]!
   18c20:	str	lr, [sp, #4]
   18c24:	add	fp, sp, #4
   18c28:	sub	sp, sp, #16
   18c2c:	str	r0, [fp, #-16]
   18c30:	bl	11228 <__errno_location@plt>
   18c34:	mov	r3, r0
   18c38:	ldr	r3, [r3]
   18c3c:	str	r3, [fp, #-8]
   18c40:	ldr	r3, [fp, #-16]
   18c44:	cmp	r3, #0
   18c48:	beq	18c54 <__assert_fail@plt+0x78f4>
   18c4c:	ldr	r3, [fp, #-16]
   18c50:	b	18c5c <__assert_fail@plt+0x78fc>
   18c54:	movw	r3, #4564	; 0x11d4
   18c58:	movt	r3, #3
   18c5c:	mov	r1, #48	; 0x30
   18c60:	mov	r0, r3
   18c64:	bl	1ca20 <__assert_fail@plt+0xb6c0>
   18c68:	mov	r3, r0
   18c6c:	str	r3, [fp, #-12]
   18c70:	bl	11228 <__errno_location@plt>
   18c74:	mov	r2, r0
   18c78:	ldr	r3, [fp, #-8]
   18c7c:	str	r3, [r2]
   18c80:	ldr	r3, [fp, #-12]
   18c84:	mov	r0, r3
   18c88:	sub	sp, fp, #4
   18c8c:	ldr	fp, [sp]
   18c90:	add	sp, sp, #4
   18c94:	pop	{pc}		; (ldr pc, [sp], #4)
   18c98:	push	{fp}		; (str fp, [sp, #-4]!)
   18c9c:	add	fp, sp, #0
   18ca0:	sub	sp, sp, #12
   18ca4:	str	r0, [fp, #-8]
   18ca8:	ldr	r3, [fp, #-8]
   18cac:	cmp	r3, #0
   18cb0:	beq	18cbc <__assert_fail@plt+0x795c>
   18cb4:	ldr	r3, [fp, #-8]
   18cb8:	b	18cc4 <__assert_fail@plt+0x7964>
   18cbc:	movw	r3, #4564	; 0x11d4
   18cc0:	movt	r3, #3
   18cc4:	ldr	r3, [r3]
   18cc8:	mov	r0, r3
   18ccc:	add	sp, fp, #0
   18cd0:	pop	{fp}		; (ldr fp, [sp], #4)
   18cd4:	bx	lr
   18cd8:	push	{fp}		; (str fp, [sp, #-4]!)
   18cdc:	add	fp, sp, #0
   18ce0:	sub	sp, sp, #12
   18ce4:	str	r0, [fp, #-8]
   18ce8:	str	r1, [fp, #-12]
   18cec:	ldr	r3, [fp, #-8]
   18cf0:	cmp	r3, #0
   18cf4:	beq	18d00 <__assert_fail@plt+0x79a0>
   18cf8:	ldr	r3, [fp, #-8]
   18cfc:	b	18d08 <__assert_fail@plt+0x79a8>
   18d00:	movw	r3, #4564	; 0x11d4
   18d04:	movt	r3, #3
   18d08:	ldr	r2, [fp, #-12]
   18d0c:	str	r2, [r3]
   18d10:	nop	{0}
   18d14:	add	sp, fp, #0
   18d18:	pop	{fp}		; (ldr fp, [sp], #4)
   18d1c:	bx	lr
   18d20:	push	{fp}		; (str fp, [sp, #-4]!)
   18d24:	add	fp, sp, #0
   18d28:	sub	sp, sp, #36	; 0x24
   18d2c:	str	r0, [fp, #-24]	; 0xffffffe8
   18d30:	mov	r3, r1
   18d34:	str	r2, [fp, #-32]	; 0xffffffe0
   18d38:	strb	r3, [fp, #-25]	; 0xffffffe7
   18d3c:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   18d40:	strb	r3, [fp, #-5]
   18d44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18d48:	cmp	r3, #0
   18d4c:	beq	18d58 <__assert_fail@plt+0x79f8>
   18d50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18d54:	b	18d60 <__assert_fail@plt+0x7a00>
   18d58:	movw	r3, #4564	; 0x11d4
   18d5c:	movt	r3, #3
   18d60:	add	r2, r3, #8
   18d64:	ldrb	r3, [fp, #-5]
   18d68:	lsr	r3, r3, #5
   18d6c:	uxtb	r3, r3
   18d70:	lsl	r3, r3, #2
   18d74:	add	r3, r2, r3
   18d78:	str	r3, [fp, #-12]
   18d7c:	ldrb	r3, [fp, #-5]
   18d80:	and	r3, r3, #31
   18d84:	str	r3, [fp, #-16]
   18d88:	ldr	r3, [fp, #-12]
   18d8c:	ldr	r2, [r3]
   18d90:	ldr	r3, [fp, #-16]
   18d94:	lsr	r3, r2, r3
   18d98:	and	r3, r3, #1
   18d9c:	str	r3, [fp, #-20]	; 0xffffffec
   18da0:	ldr	r3, [fp, #-12]
   18da4:	ldr	r3, [r3]
   18da8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   18dac:	and	r1, r2, #1
   18db0:	ldr	r2, [fp, #-20]	; 0xffffffec
   18db4:	eor	r1, r1, r2
   18db8:	ldr	r2, [fp, #-16]
   18dbc:	lsl	r2, r1, r2
   18dc0:	eor	r2, r2, r3
   18dc4:	ldr	r3, [fp, #-12]
   18dc8:	str	r2, [r3]
   18dcc:	ldr	r3, [fp, #-20]	; 0xffffffec
   18dd0:	mov	r0, r3
   18dd4:	add	sp, fp, #0
   18dd8:	pop	{fp}		; (ldr fp, [sp], #4)
   18ddc:	bx	lr
   18de0:	push	{fp}		; (str fp, [sp, #-4]!)
   18de4:	add	fp, sp, #0
   18de8:	sub	sp, sp, #20
   18dec:	str	r0, [fp, #-16]
   18df0:	str	r1, [fp, #-20]	; 0xffffffec
   18df4:	ldr	r3, [fp, #-16]
   18df8:	cmp	r3, #0
   18dfc:	bne	18e0c <__assert_fail@plt+0x7aac>
   18e00:	movw	r3, #4564	; 0x11d4
   18e04:	movt	r3, #3
   18e08:	str	r3, [fp, #-16]
   18e0c:	ldr	r3, [fp, #-16]
   18e10:	ldr	r3, [r3, #4]
   18e14:	str	r3, [fp, #-8]
   18e18:	ldr	r3, [fp, #-16]
   18e1c:	ldr	r2, [fp, #-20]	; 0xffffffec
   18e20:	str	r2, [r3, #4]
   18e24:	ldr	r3, [fp, #-8]
   18e28:	mov	r0, r3
   18e2c:	add	sp, fp, #0
   18e30:	pop	{fp}		; (ldr fp, [sp], #4)
   18e34:	bx	lr
   18e38:	str	fp, [sp, #-8]!
   18e3c:	str	lr, [sp, #4]
   18e40:	add	fp, sp, #4
   18e44:	sub	sp, sp, #16
   18e48:	str	r0, [fp, #-8]
   18e4c:	str	r1, [fp, #-12]
   18e50:	str	r2, [fp, #-16]
   18e54:	ldr	r3, [fp, #-8]
   18e58:	cmp	r3, #0
   18e5c:	bne	18e6c <__assert_fail@plt+0x7b0c>
   18e60:	movw	r3, #4564	; 0x11d4
   18e64:	movt	r3, #3
   18e68:	str	r3, [fp, #-8]
   18e6c:	ldr	r3, [fp, #-8]
   18e70:	mov	r2, #10
   18e74:	str	r2, [r3]
   18e78:	ldr	r3, [fp, #-12]
   18e7c:	cmp	r3, #0
   18e80:	beq	18e90 <__assert_fail@plt+0x7b30>
   18e84:	ldr	r3, [fp, #-16]
   18e88:	cmp	r3, #0
   18e8c:	bne	18e94 <__assert_fail@plt+0x7b34>
   18e90:	bl	11318 <abort@plt>
   18e94:	ldr	r3, [fp, #-8]
   18e98:	ldr	r2, [fp, #-12]
   18e9c:	str	r2, [r3, #40]	; 0x28
   18ea0:	ldr	r3, [fp, #-8]
   18ea4:	ldr	r2, [fp, #-16]
   18ea8:	str	r2, [r3, #44]	; 0x2c
   18eac:	nop	{0}
   18eb0:	sub	sp, fp, #4
   18eb4:	ldr	fp, [sp]
   18eb8:	add	sp, sp, #4
   18ebc:	pop	{pc}		; (ldr pc, [sp], #4)
   18ec0:	str	fp, [sp, #-8]!
   18ec4:	str	lr, [sp, #4]
   18ec8:	add	fp, sp, #4
   18ecc:	sub	sp, sp, #56	; 0x38
   18ed0:	str	r0, [fp, #-56]	; 0xffffffc8
   18ed4:	str	r1, [fp, #-60]	; 0xffffffc4
   18ed8:	sub	r1, fp, #52	; 0x34
   18edc:	mov	r2, #0
   18ee0:	mov	r3, #0
   18ee4:	strd	r2, [r1]
   18ee8:	strd	r2, [r1, #8]
   18eec:	strd	r2, [r1, #16]
   18ef0:	strd	r2, [r1, #24]
   18ef4:	strd	r2, [r1, #32]
   18ef8:	strd	r2, [r1, #40]	; 0x28
   18efc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18f00:	cmp	r3, #10
   18f04:	bne	18f0c <__assert_fail@plt+0x7bac>
   18f08:	bl	11318 <abort@plt>
   18f0c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18f10:	str	r3, [fp, #-52]	; 0xffffffcc
   18f14:	ldr	r3, [fp, #-56]	; 0xffffffc8
   18f18:	mov	r2, r3
   18f1c:	sub	r3, fp, #52	; 0x34
   18f20:	ldrd	r0, [r3]
   18f24:	strd	r0, [r2]
   18f28:	ldrd	r0, [r3, #8]
   18f2c:	strd	r0, [r2, #8]
   18f30:	ldrd	r0, [r3, #16]
   18f34:	strd	r0, [r2, #16]
   18f38:	ldrd	r0, [r3, #24]
   18f3c:	strd	r0, [r2, #24]
   18f40:	ldrd	r0, [r3, #32]
   18f44:	strd	r0, [r2, #32]
   18f48:	ldrd	r0, [r3, #40]	; 0x28
   18f4c:	strd	r0, [r2, #40]	; 0x28
   18f50:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18f54:	sub	sp, fp, #4
   18f58:	ldr	fp, [sp]
   18f5c:	add	sp, sp, #4
   18f60:	pop	{pc}		; (ldr pc, [sp], #4)
   18f64:	str	fp, [sp, #-8]!
   18f68:	str	lr, [sp, #4]
   18f6c:	add	fp, sp, #4
   18f70:	sub	sp, sp, #16
   18f74:	str	r0, [fp, #-16]
   18f78:	str	r1, [fp, #-20]	; 0xffffffec
   18f7c:	ldr	r0, [fp, #-16]
   18f80:	bl	111d4 <gettext@plt>
   18f84:	str	r0, [fp, #-8]
   18f88:	ldr	r2, [fp, #-8]
   18f8c:	ldr	r3, [fp, #-16]
   18f90:	cmp	r2, r3
   18f94:	beq	18fa0 <__assert_fail@plt+0x7c40>
   18f98:	ldr	r3, [fp, #-8]
   18f9c:	b	19050 <__assert_fail@plt+0x7cf0>
   18fa0:	bl	1e5b0 <__assert_fail@plt+0xd250>
   18fa4:	str	r0, [fp, #-12]
   18fa8:	movw	r1, #1156	; 0x484
   18fac:	movt	r1, #2
   18fb0:	ldr	r0, [fp, #-12]
   18fb4:	bl	1d9bc <__assert_fail@plt+0xc65c>
   18fb8:	mov	r3, r0
   18fbc:	cmp	r3, #0
   18fc0:	bne	18fec <__assert_fail@plt+0x7c8c>
   18fc4:	ldr	r3, [fp, #-16]
   18fc8:	ldrb	r3, [r3]
   18fcc:	cmp	r3, #96	; 0x60
   18fd0:	bne	18fe0 <__assert_fail@plt+0x7c80>
   18fd4:	movw	r3, #1164	; 0x48c
   18fd8:	movt	r3, #2
   18fdc:	b	19050 <__assert_fail@plt+0x7cf0>
   18fe0:	movw	r3, #1168	; 0x490
   18fe4:	movt	r3, #2
   18fe8:	b	19050 <__assert_fail@plt+0x7cf0>
   18fec:	movw	r1, #1172	; 0x494
   18ff0:	movt	r1, #2
   18ff4:	ldr	r0, [fp, #-12]
   18ff8:	bl	1d9bc <__assert_fail@plt+0xc65c>
   18ffc:	mov	r3, r0
   19000:	cmp	r3, #0
   19004:	bne	19030 <__assert_fail@plt+0x7cd0>
   19008:	ldr	r3, [fp, #-16]
   1900c:	ldrb	r3, [r3]
   19010:	cmp	r3, #96	; 0x60
   19014:	bne	19024 <__assert_fail@plt+0x7cc4>
   19018:	movw	r3, #1180	; 0x49c
   1901c:	movt	r3, #2
   19020:	b	19050 <__assert_fail@plt+0x7cf0>
   19024:	movw	r3, #1184	; 0x4a0
   19028:	movt	r3, #2
   1902c:	b	19050 <__assert_fail@plt+0x7cf0>
   19030:	ldr	r3, [fp, #-20]	; 0xffffffec
   19034:	cmp	r3, #9
   19038:	bne	19048 <__assert_fail@plt+0x7ce8>
   1903c:	movw	r3, #1188	; 0x4a4
   19040:	movt	r3, #2
   19044:	b	19050 <__assert_fail@plt+0x7cf0>
   19048:	movw	r3, #1192	; 0x4a8
   1904c:	movt	r3, #2
   19050:	mov	r0, r3
   19054:	sub	sp, fp, #4
   19058:	ldr	fp, [sp]
   1905c:	add	sp, sp, #4
   19060:	pop	{pc}		; (ldr pc, [sp], #4)
   19064:	str	r4, [sp, #-12]!
   19068:	str	fp, [sp, #4]
   1906c:	str	lr, [sp, #8]
   19070:	add	fp, sp, #8
   19074:	sub	sp, sp, #116	; 0x74
   19078:	str	r0, [fp, #-88]	; 0xffffffa8
   1907c:	str	r1, [fp, #-92]	; 0xffffffa4
   19080:	str	r2, [fp, #-96]	; 0xffffffa0
   19084:	str	r3, [fp, #-100]	; 0xffffff9c
   19088:	mov	r3, #0
   1908c:	str	r3, [fp, #-20]	; 0xffffffec
   19090:	mov	r3, #0
   19094:	str	r3, [fp, #-24]	; 0xffffffe8
   19098:	mov	r3, #0
   1909c:	str	r3, [fp, #-28]	; 0xffffffe4
   190a0:	mov	r3, #0
   190a4:	str	r3, [fp, #-32]	; 0xffffffe0
   190a8:	mov	r3, #0
   190ac:	strb	r3, [fp, #-33]	; 0xffffffdf
   190b0:	bl	1112c <__ctype_get_mb_cur_max@plt>
   190b4:	mov	r3, r0
   190b8:	cmp	r3, #1
   190bc:	moveq	r3, #1
   190c0:	movne	r3, #0
   190c4:	strb	r3, [fp, #-57]	; 0xffffffc7
   190c8:	ldr	r3, [fp, #8]
   190cc:	and	r3, r3, #2
   190d0:	cmp	r3, #0
   190d4:	movne	r3, #1
   190d8:	moveq	r3, #0
   190dc:	strb	r3, [fp, #-34]	; 0xffffffde
   190e0:	mov	r3, #0
   190e4:	strb	r3, [fp, #-35]	; 0xffffffdd
   190e8:	mov	r3, #0
   190ec:	strb	r3, [fp, #-36]	; 0xffffffdc
   190f0:	mov	r3, #1
   190f4:	strb	r3, [fp, #-37]	; 0xffffffdb
   190f8:	ldr	r3, [fp, #4]
   190fc:	cmp	r3, #10
   19100:	ldrls	pc, [pc, r3, lsl #2]
   19104:	b	1931c <__assert_fail@plt+0x7fbc>
   19108:	andeq	r9, r1, r0, lsl r3
   1910c:	andeq	r9, r1, r8, lsl #5
   19110:	andeq	r9, r1, ip, lsr #5
   19114:	andeq	r9, r1, r0, lsl #5
   19118:	muleq	r1, r0, r2
   1911c:	andeq	r9, r1, r4, asr #2
   19120:	andeq	r9, r1, r4, lsr r1
   19124:	andeq	r9, r1, r8, lsr #3
   19128:			; <UNDEFINED> instruction: 0x000191bc
   1912c:			; <UNDEFINED> instruction: 0x000191bc
   19130:			; <UNDEFINED> instruction: 0x000191bc
   19134:	mov	r3, #5
   19138:	str	r3, [fp, #4]
   1913c:	mov	r3, #1
   19140:	strb	r3, [fp, #-34]	; 0xffffffde
   19144:	ldrb	r3, [fp, #-34]	; 0xffffffde
   19148:	eor	r3, r3, #1
   1914c:	uxtb	r3, r3
   19150:	cmp	r3, #0
   19154:	beq	19188 <__assert_fail@plt+0x7e28>
   19158:	ldr	r2, [fp, #-20]	; 0xffffffec
   1915c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19160:	cmp	r2, r3
   19164:	bcs	1917c <__assert_fail@plt+0x7e1c>
   19168:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1916c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19170:	add	r3, r2, r3
   19174:	mov	r2, #34	; 0x22
   19178:	strb	r2, [r3]
   1917c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19180:	add	r3, r3, #1
   19184:	str	r3, [fp, #-20]	; 0xffffffec
   19188:	mov	r3, #1
   1918c:	strb	r3, [fp, #-33]	; 0xffffffdf
   19190:	movw	r3, #1188	; 0x4a4
   19194:	movt	r3, #2
   19198:	str	r3, [fp, #-28]	; 0xffffffe4
   1919c:	mov	r3, #1
   191a0:	str	r3, [fp, #-32]	; 0xffffffe0
   191a4:	b	19320 <__assert_fail@plt+0x7fc0>
   191a8:	mov	r3, #1
   191ac:	strb	r3, [fp, #-33]	; 0xffffffdf
   191b0:	mov	r3, #0
   191b4:	strb	r3, [fp, #-34]	; 0xffffffde
   191b8:	b	19320 <__assert_fail@plt+0x7fc0>
   191bc:	ldr	r3, [fp, #4]
   191c0:	cmp	r3, #10
   191c4:	beq	191f0 <__assert_fail@plt+0x7e90>
   191c8:	ldr	r1, [fp, #4]
   191cc:	movw	r0, #1196	; 0x4ac
   191d0:	movt	r0, #2
   191d4:	bl	18f64 <__assert_fail@plt+0x7c04>
   191d8:	str	r0, [fp, #16]
   191dc:	ldr	r1, [fp, #4]
   191e0:	movw	r0, #1192	; 0x4a8
   191e4:	movt	r0, #2
   191e8:	bl	18f64 <__assert_fail@plt+0x7c04>
   191ec:	str	r0, [fp, #20]
   191f0:	ldrb	r3, [fp, #-34]	; 0xffffffde
   191f4:	eor	r3, r3, #1
   191f8:	uxtb	r3, r3
   191fc:	cmp	r3, #0
   19200:	beq	19260 <__assert_fail@plt+0x7f00>
   19204:	ldr	r3, [fp, #16]
   19208:	str	r3, [fp, #-28]	; 0xffffffe4
   1920c:	b	19250 <__assert_fail@plt+0x7ef0>
   19210:	ldr	r2, [fp, #-20]	; 0xffffffec
   19214:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19218:	cmp	r2, r3
   1921c:	bcs	19238 <__assert_fail@plt+0x7ed8>
   19220:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19224:	ldr	r3, [fp, #-20]	; 0xffffffec
   19228:	add	r3, r2, r3
   1922c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   19230:	ldrb	r2, [r2]
   19234:	strb	r2, [r3]
   19238:	ldr	r3, [fp, #-20]	; 0xffffffec
   1923c:	add	r3, r3, #1
   19240:	str	r3, [fp, #-20]	; 0xffffffec
   19244:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19248:	add	r3, r3, #1
   1924c:	str	r3, [fp, #-28]	; 0xffffffe4
   19250:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19254:	ldrb	r3, [r3]
   19258:	cmp	r3, #0
   1925c:	bne	19210 <__assert_fail@plt+0x7eb0>
   19260:	mov	r3, #1
   19264:	strb	r3, [fp, #-33]	; 0xffffffdf
   19268:	ldr	r3, [fp, #20]
   1926c:	str	r3, [fp, #-28]	; 0xffffffe4
   19270:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19274:	bl	111ec <strlen@plt>
   19278:	str	r0, [fp, #-32]	; 0xffffffe0
   1927c:	b	19320 <__assert_fail@plt+0x7fc0>
   19280:	mov	r3, #1
   19284:	strb	r3, [fp, #-33]	; 0xffffffdf
   19288:	mov	r3, #1
   1928c:	strb	r3, [fp, #-34]	; 0xffffffde
   19290:	ldrb	r3, [fp, #-34]	; 0xffffffde
   19294:	eor	r3, r3, #1
   19298:	uxtb	r3, r3
   1929c:	cmp	r3, #0
   192a0:	beq	192ac <__assert_fail@plt+0x7f4c>
   192a4:	mov	r3, #1
   192a8:	strb	r3, [fp, #-33]	; 0xffffffdf
   192ac:	mov	r3, #2
   192b0:	str	r3, [fp, #4]
   192b4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   192b8:	eor	r3, r3, #1
   192bc:	uxtb	r3, r3
   192c0:	cmp	r3, #0
   192c4:	beq	192f8 <__assert_fail@plt+0x7f98>
   192c8:	ldr	r2, [fp, #-20]	; 0xffffffec
   192cc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   192d0:	cmp	r2, r3
   192d4:	bcs	192ec <__assert_fail@plt+0x7f8c>
   192d8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   192dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   192e0:	add	r3, r2, r3
   192e4:	mov	r2, #39	; 0x27
   192e8:	strb	r2, [r3]
   192ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   192f0:	add	r3, r3, #1
   192f4:	str	r3, [fp, #-20]	; 0xffffffec
   192f8:	movw	r3, #1192	; 0x4a8
   192fc:	movt	r3, #2
   19300:	str	r3, [fp, #-28]	; 0xffffffe4
   19304:	mov	r3, #1
   19308:	str	r3, [fp, #-32]	; 0xffffffe0
   1930c:	b	19320 <__assert_fail@plt+0x7fc0>
   19310:	mov	r3, #0
   19314:	strb	r3, [fp, #-34]	; 0xffffffde
   19318:	b	19320 <__assert_fail@plt+0x7fc0>
   1931c:	bl	11318 <abort@plt>
   19320:	mov	r3, #0
   19324:	str	r3, [fp, #-16]
   19328:	b	1a4c4 <__assert_fail@plt+0x9164>
   1932c:	mov	r3, #0
   19330:	strb	r3, [fp, #-40]	; 0xffffffd8
   19334:	mov	r3, #0
   19338:	strb	r3, [fp, #-41]	; 0xffffffd7
   1933c:	mov	r3, #0
   19340:	strb	r3, [fp, #-42]	; 0xffffffd6
   19344:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   19348:	cmp	r3, #0
   1934c:	beq	193e8 <__assert_fail@plt+0x8088>
   19350:	ldr	r3, [fp, #4]
   19354:	cmp	r3, #2
   19358:	beq	193e8 <__assert_fail@plt+0x8088>
   1935c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19360:	cmp	r3, #0
   19364:	beq	193e8 <__assert_fail@plt+0x8088>
   19368:	ldr	r2, [fp, #-16]
   1936c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19370:	add	r4, r2, r3
   19374:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19378:	cmn	r3, #1
   1937c:	bne	193a0 <__assert_fail@plt+0x8040>
   19380:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19384:	cmp	r3, #1
   19388:	bls	193a0 <__assert_fail@plt+0x8040>
   1938c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19390:	bl	111ec <strlen@plt>
   19394:	str	r0, [fp, #-100]	; 0xffffff9c
   19398:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1939c:	b	193a4 <__assert_fail@plt+0x8044>
   193a0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   193a4:	cmp	r3, r4
   193a8:	bcc	193e8 <__assert_fail@plt+0x8088>
   193ac:	ldr	r2, [fp, #-96]	; 0xffffffa0
   193b0:	ldr	r3, [fp, #-16]
   193b4:	add	r3, r2, r3
   193b8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   193bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   193c0:	mov	r0, r3
   193c4:	bl	110b4 <memcmp@plt>
   193c8:	mov	r3, r0
   193cc:	cmp	r3, #0
   193d0:	bne	193e8 <__assert_fail@plt+0x8088>
   193d4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   193d8:	cmp	r3, #0
   193dc:	bne	1a680 <__assert_fail@plt+0x9320>
   193e0:	mov	r3, #1
   193e4:	strb	r3, [fp, #-40]	; 0xffffffd8
   193e8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   193ec:	ldr	r3, [fp, #-16]
   193f0:	add	r3, r2, r3
   193f4:	ldrb	r3, [r3]
   193f8:	strb	r3, [fp, #-38]	; 0xffffffda
   193fc:	ldrb	r3, [fp, #-38]	; 0xffffffda
   19400:	cmp	r3, #126	; 0x7e
   19404:	ldrls	pc, [pc, r3, lsl #2]
   19408:	b	19c40 <__assert_fail@plt+0x88e0>
   1940c:	andeq	r9, r1, r8, lsl #12
   19410:	andeq	r9, r1, r0, asr #24
   19414:	andeq	r9, r1, r0, asr #24
   19418:	andeq	r9, r1, r0, asr #24
   1941c:	andeq	r9, r1, r0, asr #24
   19420:	andeq	r9, r1, r0, asr #24
   19424:	andeq	r9, r1, r0, asr #24
   19428:	strdeq	r9, [r1], -ip
   1942c:	andeq	r9, r1, r8, lsl #20
   19430:	andeq	r9, r1, r8, lsr sl
   19434:	andeq	r9, r1, r0, lsr #20
   19438:	andeq	r9, r1, r4, asr #20
   1943c:	andeq	r9, r1, r4, lsl sl
   19440:	andeq	r9, r1, ip, lsr #20
   19444:	andeq	r9, r1, r0, asr #24
   19448:	andeq	r9, r1, r0, asr #24
   1944c:	andeq	r9, r1, r0, asr #24
   19450:	andeq	r9, r1, r0, asr #24
   19454:	andeq	r9, r1, r0, asr #24
   19458:	andeq	r9, r1, r0, asr #24
   1945c:	andeq	r9, r1, r0, asr #24
   19460:	andeq	r9, r1, r0, asr #24
   19464:	andeq	r9, r1, r0, asr #24
   19468:	andeq	r9, r1, r0, asr #24
   1946c:	andeq	r9, r1, r0, asr #24
   19470:	andeq	r9, r1, r0, asr #24
   19474:	andeq	r9, r1, r0, asr #24
   19478:	andeq	r9, r1, r0, asr #24
   1947c:	andeq	r9, r1, r0, asr #24
   19480:	andeq	r9, r1, r0, asr #24
   19484:	andeq	r9, r1, r0, asr #24
   19488:	andeq	r9, r1, r0, asr #24
   1948c:	andeq	r9, r1, r4, lsr #22
   19490:	andeq	r9, r1, ip, lsr #22
   19494:	andeq	r9, r1, ip, lsr #22
   19498:	andeq	r9, r1, r8, lsl fp
   1949c:	andeq	r9, r1, ip, lsr #22
   194a0:	andeq	r9, r1, r4, lsr ip
   194a4:	andeq	r9, r1, ip, lsr #22
   194a8:	andeq	r9, r1, r8, asr #22
   194ac:	andeq	r9, r1, ip, lsr #22
   194b0:	andeq	r9, r1, ip, lsr #22
   194b4:	andeq	r9, r1, ip, lsr #22
   194b8:	andeq	r9, r1, r4, lsr ip
   194bc:	andeq	r9, r1, r4, lsr ip
   194c0:	andeq	r9, r1, r4, lsr ip
   194c4:	andeq	r9, r1, r4, lsr ip
   194c8:	andeq	r9, r1, r4, lsr ip
   194cc:	andeq	r9, r1, r4, lsr ip
   194d0:	andeq	r9, r1, r4, lsr ip
   194d4:	andeq	r9, r1, r4, lsr ip
   194d8:	andeq	r9, r1, r4, lsr ip
   194dc:	andeq	r9, r1, r4, lsr ip
   194e0:	andeq	r9, r1, r4, lsr ip
   194e4:	andeq	r9, r1, r4, lsr ip
   194e8:	andeq	r9, r1, r4, lsr ip
   194ec:	andeq	r9, r1, r4, lsr ip
   194f0:	andeq	r9, r1, r4, lsr ip
   194f4:	andeq	r9, r1, r4, lsr ip
   194f8:	andeq	r9, r1, ip, lsr #22
   194fc:	andeq	r9, r1, ip, lsr #22
   19500:	andeq	r9, r1, ip, lsr #22
   19504:	andeq	r9, r1, ip, lsr #22
   19508:	andeq	r9, r1, r8, ror #15
   1950c:	andeq	r9, r1, r0, asr #24
   19510:	andeq	r9, r1, r4, lsr ip
   19514:	andeq	r9, r1, r4, lsr ip
   19518:	andeq	r9, r1, r4, lsr ip
   1951c:	andeq	r9, r1, r4, lsr ip
   19520:	andeq	r9, r1, r4, lsr ip
   19524:	andeq	r9, r1, r4, lsr ip
   19528:	andeq	r9, r1, r4, lsr ip
   1952c:	andeq	r9, r1, r4, lsr ip
   19530:	andeq	r9, r1, r4, lsr ip
   19534:	andeq	r9, r1, r4, lsr ip
   19538:	andeq	r9, r1, r4, lsr ip
   1953c:	andeq	r9, r1, r4, lsr ip
   19540:	andeq	r9, r1, r4, lsr ip
   19544:	andeq	r9, r1, r4, lsr ip
   19548:	andeq	r9, r1, r4, lsr ip
   1954c:	andeq	r9, r1, r4, lsr ip
   19550:	andeq	r9, r1, r4, lsr ip
   19554:	andeq	r9, r1, r4, lsr ip
   19558:	andeq	r9, r1, r4, lsr ip
   1955c:	andeq	r9, r1, r4, lsr ip
   19560:	andeq	r9, r1, r4, lsr ip
   19564:	andeq	r9, r1, r4, lsr ip
   19568:	andeq	r9, r1, r4, lsr ip
   1956c:	andeq	r9, r1, r4, lsr ip
   19570:	andeq	r9, r1, r4, lsr ip
   19574:	andeq	r9, r1, r4, lsr ip
   19578:	andeq	r9, r1, ip, lsr #22
   1957c:	andeq	r9, r1, r0, asr sl
   19580:	andeq	r9, r1, r4, lsr ip
   19584:	andeq	r9, r1, ip, lsr #22
   19588:	andeq	r9, r1, r4, lsr ip
   1958c:	andeq	r9, r1, ip, lsr #22
   19590:	andeq	r9, r1, r4, lsr ip
   19594:	andeq	r9, r1, r4, lsr ip
   19598:	andeq	r9, r1, r4, lsr ip
   1959c:	andeq	r9, r1, r4, lsr ip
   195a0:	andeq	r9, r1, r4, lsr ip
   195a4:	andeq	r9, r1, r4, lsr ip
   195a8:	andeq	r9, r1, r4, lsr ip
   195ac:	andeq	r9, r1, r4, lsr ip
   195b0:	andeq	r9, r1, r4, lsr ip
   195b4:	andeq	r9, r1, r4, lsr ip
   195b8:	andeq	r9, r1, r4, lsr ip
   195bc:	andeq	r9, r1, r4, lsr ip
   195c0:	andeq	r9, r1, r4, lsr ip
   195c4:	andeq	r9, r1, r4, lsr ip
   195c8:	andeq	r9, r1, r4, lsr ip
   195cc:	andeq	r9, r1, r4, lsr ip
   195d0:	andeq	r9, r1, r4, lsr ip
   195d4:	andeq	r9, r1, r4, lsr ip
   195d8:	andeq	r9, r1, r4, lsr ip
   195dc:	andeq	r9, r1, r4, lsr ip
   195e0:	andeq	r9, r1, r4, lsr ip
   195e4:	andeq	r9, r1, r4, lsr ip
   195e8:	andeq	r9, r1, r4, lsr ip
   195ec:	andeq	r9, r1, r4, lsr ip
   195f0:	andeq	r9, r1, r4, lsr ip
   195f4:	andeq	r9, r1, r4, lsr ip
   195f8:	ldrdeq	r9, [r1], -r0
   195fc:	andeq	r9, r1, ip, lsr #22
   19600:	ldrdeq	r9, [r1], -r0
   19604:	andeq	r9, r1, r8, lsl fp
   19608:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   1960c:	cmp	r3, #0
   19610:	beq	197d4 <__assert_fail@plt+0x8474>
   19614:	ldrb	r3, [fp, #-34]	; 0xffffffde
   19618:	cmp	r3, #0
   1961c:	bne	1a688 <__assert_fail@plt+0x9328>
   19620:	mov	r3, #1
   19624:	strb	r3, [fp, #-41]	; 0xffffffd7
   19628:	ldr	r3, [fp, #4]
   1962c:	cmp	r3, #2
   19630:	bne	196e0 <__assert_fail@plt+0x8380>
   19634:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   19638:	eor	r3, r3, #1
   1963c:	uxtb	r3, r3
   19640:	cmp	r3, #0
   19644:	beq	196e0 <__assert_fail@plt+0x8380>
   19648:	ldr	r2, [fp, #-20]	; 0xffffffec
   1964c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19650:	cmp	r2, r3
   19654:	bcs	1966c <__assert_fail@plt+0x830c>
   19658:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1965c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19660:	add	r3, r2, r3
   19664:	mov	r2, #39	; 0x27
   19668:	strb	r2, [r3]
   1966c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19670:	add	r3, r3, #1
   19674:	str	r3, [fp, #-20]	; 0xffffffec
   19678:	ldr	r2, [fp, #-20]	; 0xffffffec
   1967c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19680:	cmp	r2, r3
   19684:	bcs	1969c <__assert_fail@plt+0x833c>
   19688:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1968c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19690:	add	r3, r2, r3
   19694:	mov	r2, #36	; 0x24
   19698:	strb	r2, [r3]
   1969c:	ldr	r3, [fp, #-20]	; 0xffffffec
   196a0:	add	r3, r3, #1
   196a4:	str	r3, [fp, #-20]	; 0xffffffec
   196a8:	ldr	r2, [fp, #-20]	; 0xffffffec
   196ac:	ldr	r3, [fp, #-92]	; 0xffffffa4
   196b0:	cmp	r2, r3
   196b4:	bcs	196cc <__assert_fail@plt+0x836c>
   196b8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   196bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   196c0:	add	r3, r2, r3
   196c4:	mov	r2, #39	; 0x27
   196c8:	strb	r2, [r3]
   196cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   196d0:	add	r3, r3, #1
   196d4:	str	r3, [fp, #-20]	; 0xffffffec
   196d8:	mov	r3, #1
   196dc:	strb	r3, [fp, #-35]	; 0xffffffdd
   196e0:	ldr	r2, [fp, #-20]	; 0xffffffec
   196e4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   196e8:	cmp	r2, r3
   196ec:	bcs	19704 <__assert_fail@plt+0x83a4>
   196f0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   196f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   196f8:	add	r3, r2, r3
   196fc:	mov	r2, #92	; 0x5c
   19700:	strb	r2, [r3]
   19704:	ldr	r3, [fp, #-20]	; 0xffffffec
   19708:	add	r3, r3, #1
   1970c:	str	r3, [fp, #-20]	; 0xffffffec
   19710:	ldr	r3, [fp, #4]
   19714:	cmp	r3, #2
   19718:	beq	197c8 <__assert_fail@plt+0x8468>
   1971c:	ldr	r3, [fp, #-16]
   19720:	add	r3, r3, #1
   19724:	ldr	r2, [fp, #-100]	; 0xffffff9c
   19728:	cmp	r2, r3
   1972c:	bls	197c8 <__assert_fail@plt+0x8468>
   19730:	ldr	r3, [fp, #-16]
   19734:	add	r3, r3, #1
   19738:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1973c:	add	r3, r2, r3
   19740:	ldrb	r3, [r3]
   19744:	cmp	r3, #47	; 0x2f
   19748:	bls	197c8 <__assert_fail@plt+0x8468>
   1974c:	ldr	r3, [fp, #-16]
   19750:	add	r3, r3, #1
   19754:	ldr	r2, [fp, #-96]	; 0xffffffa0
   19758:	add	r3, r2, r3
   1975c:	ldrb	r3, [r3]
   19760:	cmp	r3, #57	; 0x39
   19764:	bhi	197c8 <__assert_fail@plt+0x8468>
   19768:	ldr	r2, [fp, #-20]	; 0xffffffec
   1976c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19770:	cmp	r2, r3
   19774:	bcs	1978c <__assert_fail@plt+0x842c>
   19778:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1977c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19780:	add	r3, r2, r3
   19784:	mov	r2, #48	; 0x30
   19788:	strb	r2, [r3]
   1978c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19790:	add	r3, r3, #1
   19794:	str	r3, [fp, #-20]	; 0xffffffec
   19798:	ldr	r2, [fp, #-20]	; 0xffffffec
   1979c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   197a0:	cmp	r2, r3
   197a4:	bcs	197bc <__assert_fail@plt+0x845c>
   197a8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   197ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   197b0:	add	r3, r2, r3
   197b4:	mov	r2, #48	; 0x30
   197b8:	strb	r2, [r3]
   197bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   197c0:	add	r3, r3, #1
   197c4:	str	r3, [fp, #-20]	; 0xffffffec
   197c8:	mov	r3, #48	; 0x30
   197cc:	strb	r3, [fp, #-38]	; 0xffffffda
   197d0:	b	1a210 <__assert_fail@plt+0x8eb0>
   197d4:	ldr	r3, [fp, #8]
   197d8:	and	r3, r3, #1
   197dc:	cmp	r3, #0
   197e0:	beq	1a210 <__assert_fail@plt+0x8eb0>
   197e4:	b	1a4b8 <__assert_fail@plt+0x9158>
   197e8:	ldr	r3, [fp, #4]
   197ec:	cmp	r3, #2
   197f0:	beq	19804 <__assert_fail@plt+0x84a4>
   197f4:	ldr	r3, [fp, #4]
   197f8:	cmp	r3, #5
   197fc:	beq	19814 <__assert_fail@plt+0x84b4>
   19800:	b	199f8 <__assert_fail@plt+0x8698>
   19804:	ldrb	r3, [fp, #-34]	; 0xffffffde
   19808:	cmp	r3, #0
   1980c:	beq	199ec <__assert_fail@plt+0x868c>
   19810:	b	1a6bc <__assert_fail@plt+0x935c>
   19814:	ldr	r3, [fp, #8]
   19818:	and	r3, r3, #4
   1981c:	cmp	r3, #0
   19820:	beq	199f4 <__assert_fail@plt+0x8694>
   19824:	ldr	r3, [fp, #-16]
   19828:	add	r3, r3, #2
   1982c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   19830:	cmp	r2, r3
   19834:	bls	199f4 <__assert_fail@plt+0x8694>
   19838:	ldr	r3, [fp, #-16]
   1983c:	add	r3, r3, #1
   19840:	ldr	r2, [fp, #-96]	; 0xffffffa0
   19844:	add	r3, r2, r3
   19848:	ldrb	r3, [r3]
   1984c:	cmp	r3, #63	; 0x3f
   19850:	bne	199f4 <__assert_fail@plt+0x8694>
   19854:	ldr	r3, [fp, #-16]
   19858:	add	r3, r3, #2
   1985c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   19860:	add	r3, r2, r3
   19864:	ldrb	r3, [r3]
   19868:	sub	r3, r3, #33	; 0x21
   1986c:	cmp	r3, #29
   19870:	ldrls	pc, [pc, r3, lsl #2]
   19874:	b	199e4 <__assert_fail@plt+0x8684>
   19878:	strdeq	r9, [r1], -r0
   1987c:	andeq	r9, r1, r4, ror #19
   19880:	andeq	r9, r1, r4, ror #19
   19884:	andeq	r9, r1, r4, ror #19
   19888:	andeq	r9, r1, r4, ror #19
   1988c:	andeq	r9, r1, r4, ror #19
   19890:	strdeq	r9, [r1], -r0
   19894:	strdeq	r9, [r1], -r0
   19898:	strdeq	r9, [r1], -r0
   1989c:	andeq	r9, r1, r4, ror #19
   198a0:	andeq	r9, r1, r4, ror #19
   198a4:	andeq	r9, r1, r4, ror #19
   198a8:	strdeq	r9, [r1], -r0
   198ac:	andeq	r9, r1, r4, ror #19
   198b0:	strdeq	r9, [r1], -r0
   198b4:	andeq	r9, r1, r4, ror #19
   198b8:	andeq	r9, r1, r4, ror #19
   198bc:	andeq	r9, r1, r4, ror #19
   198c0:	andeq	r9, r1, r4, ror #19
   198c4:	andeq	r9, r1, r4, ror #19
   198c8:	andeq	r9, r1, r4, ror #19
   198cc:	andeq	r9, r1, r4, ror #19
   198d0:	andeq	r9, r1, r4, ror #19
   198d4:	andeq	r9, r1, r4, ror #19
   198d8:	andeq	r9, r1, r4, ror #19
   198dc:	andeq	r9, r1, r4, ror #19
   198e0:	andeq	r9, r1, r4, ror #19
   198e4:	strdeq	r9, [r1], -r0
   198e8:	strdeq	r9, [r1], -r0
   198ec:	strdeq	r9, [r1], -r0
   198f0:	ldrb	r3, [fp, #-34]	; 0xffffffde
   198f4:	cmp	r3, #0
   198f8:	bne	1a690 <__assert_fail@plt+0x9330>
   198fc:	ldr	r3, [fp, #-16]
   19900:	add	r3, r3, #2
   19904:	ldr	r2, [fp, #-96]	; 0xffffffa0
   19908:	add	r3, r2, r3
   1990c:	ldrb	r3, [r3]
   19910:	strb	r3, [fp, #-38]	; 0xffffffda
   19914:	ldr	r3, [fp, #-16]
   19918:	add	r3, r3, #2
   1991c:	str	r3, [fp, #-16]
   19920:	ldr	r2, [fp, #-20]	; 0xffffffec
   19924:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19928:	cmp	r2, r3
   1992c:	bcs	19944 <__assert_fail@plt+0x85e4>
   19930:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19934:	ldr	r3, [fp, #-20]	; 0xffffffec
   19938:	add	r3, r2, r3
   1993c:	mov	r2, #63	; 0x3f
   19940:	strb	r2, [r3]
   19944:	ldr	r3, [fp, #-20]	; 0xffffffec
   19948:	add	r3, r3, #1
   1994c:	str	r3, [fp, #-20]	; 0xffffffec
   19950:	ldr	r2, [fp, #-20]	; 0xffffffec
   19954:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19958:	cmp	r2, r3
   1995c:	bcs	19974 <__assert_fail@plt+0x8614>
   19960:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19964:	ldr	r3, [fp, #-20]	; 0xffffffec
   19968:	add	r3, r2, r3
   1996c:	mov	r2, #34	; 0x22
   19970:	strb	r2, [r3]
   19974:	ldr	r3, [fp, #-20]	; 0xffffffec
   19978:	add	r3, r3, #1
   1997c:	str	r3, [fp, #-20]	; 0xffffffec
   19980:	ldr	r2, [fp, #-20]	; 0xffffffec
   19984:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19988:	cmp	r2, r3
   1998c:	bcs	199a4 <__assert_fail@plt+0x8644>
   19990:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19994:	ldr	r3, [fp, #-20]	; 0xffffffec
   19998:	add	r3, r2, r3
   1999c:	mov	r2, #34	; 0x22
   199a0:	strb	r2, [r3]
   199a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   199a8:	add	r3, r3, #1
   199ac:	str	r3, [fp, #-20]	; 0xffffffec
   199b0:	ldr	r2, [fp, #-20]	; 0xffffffec
   199b4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   199b8:	cmp	r2, r3
   199bc:	bcs	199d4 <__assert_fail@plt+0x8674>
   199c0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   199c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   199c8:	add	r3, r2, r3
   199cc:	mov	r2, #63	; 0x3f
   199d0:	strb	r2, [r3]
   199d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   199d8:	add	r3, r3, #1
   199dc:	str	r3, [fp, #-20]	; 0xffffffec
   199e0:	b	199e8 <__assert_fail@plt+0x8688>
   199e4:	nop	{0}
   199e8:	b	199f4 <__assert_fail@plt+0x8694>
   199ec:	nop	{0}
   199f0:	b	1a244 <__assert_fail@plt+0x8ee4>
   199f4:	nop	{0}
   199f8:	b	1a244 <__assert_fail@plt+0x8ee4>
   199fc:	mov	r3, #97	; 0x61
   19a00:	strb	r3, [fp, #-39]	; 0xffffffd9
   19a04:	b	19ab8 <__assert_fail@plt+0x8758>
   19a08:	mov	r3, #98	; 0x62
   19a0c:	strb	r3, [fp, #-39]	; 0xffffffd9
   19a10:	b	19ab8 <__assert_fail@plt+0x8758>
   19a14:	mov	r3, #102	; 0x66
   19a18:	strb	r3, [fp, #-39]	; 0xffffffd9
   19a1c:	b	19ab8 <__assert_fail@plt+0x8758>
   19a20:	mov	r3, #110	; 0x6e
   19a24:	strb	r3, [fp, #-39]	; 0xffffffd9
   19a28:	b	19a9c <__assert_fail@plt+0x873c>
   19a2c:	mov	r3, #114	; 0x72
   19a30:	strb	r3, [fp, #-39]	; 0xffffffd9
   19a34:	b	19a9c <__assert_fail@plt+0x873c>
   19a38:	mov	r3, #116	; 0x74
   19a3c:	strb	r3, [fp, #-39]	; 0xffffffd9
   19a40:	b	19a9c <__assert_fail@plt+0x873c>
   19a44:	mov	r3, #118	; 0x76
   19a48:	strb	r3, [fp, #-39]	; 0xffffffd9
   19a4c:	b	19ab8 <__assert_fail@plt+0x8758>
   19a50:	ldrb	r3, [fp, #-38]	; 0xffffffda
   19a54:	strb	r3, [fp, #-39]	; 0xffffffd9
   19a58:	ldr	r3, [fp, #4]
   19a5c:	cmp	r3, #2
   19a60:	bne	19a74 <__assert_fail@plt+0x8714>
   19a64:	ldrb	r3, [fp, #-34]	; 0xffffffde
   19a68:	cmp	r3, #0
   19a6c:	beq	1a3d0 <__assert_fail@plt+0x9070>
   19a70:	b	1a6bc <__assert_fail@plt+0x935c>
   19a74:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   19a78:	cmp	r3, #0
   19a7c:	beq	19a98 <__assert_fail@plt+0x8738>
   19a80:	ldrb	r3, [fp, #-34]	; 0xffffffde
   19a84:	cmp	r3, #0
   19a88:	beq	19a98 <__assert_fail@plt+0x8738>
   19a8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19a90:	cmp	r3, #0
   19a94:	bne	1a3d8 <__assert_fail@plt+0x9078>
   19a98:	nop	{0}
   19a9c:	ldr	r3, [fp, #4]
   19aa0:	cmp	r3, #2
   19aa4:	bne	19ab4 <__assert_fail@plt+0x8754>
   19aa8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   19aac:	cmp	r3, #0
   19ab0:	bne	1a698 <__assert_fail@plt+0x9338>
   19ab4:	nop	{0}
   19ab8:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   19abc:	cmp	r3, #0
   19ac0:	beq	1a218 <__assert_fail@plt+0x8eb8>
   19ac4:	ldrb	r3, [fp, #-39]	; 0xffffffd9
   19ac8:	strb	r3, [fp, #-38]	; 0xffffffda
   19acc:	b	1a2d0 <__assert_fail@plt+0x8f70>
   19ad0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19ad4:	cmn	r3, #1
   19ad8:	bne	19afc <__assert_fail@plt+0x879c>
   19adc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19ae0:	add	r3, r3, #1
   19ae4:	ldrb	r3, [r3]
   19ae8:	cmp	r3, #0
   19aec:	movne	r3, #1
   19af0:	moveq	r3, #0
   19af4:	uxtb	r3, r3
   19af8:	b	19b10 <__assert_fail@plt+0x87b0>
   19afc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19b00:	cmp	r3, #1
   19b04:	movne	r3, #1
   19b08:	moveq	r3, #0
   19b0c:	uxtb	r3, r3
   19b10:	cmp	r3, #0
   19b14:	bne	1a220 <__assert_fail@plt+0x8ec0>
   19b18:	ldr	r3, [fp, #-16]
   19b1c:	cmp	r3, #0
   19b20:	bne	1a228 <__assert_fail@plt+0x8ec8>
   19b24:	mov	r3, #1
   19b28:	strb	r3, [fp, #-42]	; 0xffffffd6
   19b2c:	ldr	r3, [fp, #4]
   19b30:	cmp	r3, #2
   19b34:	bne	1a230 <__assert_fail@plt+0x8ed0>
   19b38:	ldrb	r3, [fp, #-34]	; 0xffffffde
   19b3c:	cmp	r3, #0
   19b40:	beq	1a230 <__assert_fail@plt+0x8ed0>
   19b44:	b	1a6bc <__assert_fail@plt+0x935c>
   19b48:	mov	r3, #1
   19b4c:	strb	r3, [fp, #-36]	; 0xffffffdc
   19b50:	mov	r3, #1
   19b54:	strb	r3, [fp, #-42]	; 0xffffffd6
   19b58:	ldr	r3, [fp, #4]
   19b5c:	cmp	r3, #2
   19b60:	bne	1a238 <__assert_fail@plt+0x8ed8>
   19b64:	ldrb	r3, [fp, #-34]	; 0xffffffde
   19b68:	cmp	r3, #0
   19b6c:	bne	1a6a0 <__assert_fail@plt+0x9340>
   19b70:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19b74:	cmp	r3, #0
   19b78:	beq	19b98 <__assert_fail@plt+0x8838>
   19b7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19b80:	cmp	r3, #0
   19b84:	bne	19b98 <__assert_fail@plt+0x8838>
   19b88:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19b8c:	str	r3, [fp, #-24]	; 0xffffffe8
   19b90:	mov	r3, #0
   19b94:	str	r3, [fp, #-92]	; 0xffffffa4
   19b98:	ldr	r2, [fp, #-20]	; 0xffffffec
   19b9c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19ba0:	cmp	r2, r3
   19ba4:	bcs	19bbc <__assert_fail@plt+0x885c>
   19ba8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19bac:	ldr	r3, [fp, #-20]	; 0xffffffec
   19bb0:	add	r3, r2, r3
   19bb4:	mov	r2, #39	; 0x27
   19bb8:	strb	r2, [r3]
   19bbc:	ldr	r3, [fp, #-20]	; 0xffffffec
   19bc0:	add	r3, r3, #1
   19bc4:	str	r3, [fp, #-20]	; 0xffffffec
   19bc8:	ldr	r2, [fp, #-20]	; 0xffffffec
   19bcc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19bd0:	cmp	r2, r3
   19bd4:	bcs	19bec <__assert_fail@plt+0x888c>
   19bd8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19bdc:	ldr	r3, [fp, #-20]	; 0xffffffec
   19be0:	add	r3, r2, r3
   19be4:	mov	r2, #92	; 0x5c
   19be8:	strb	r2, [r3]
   19bec:	ldr	r3, [fp, #-20]	; 0xffffffec
   19bf0:	add	r3, r3, #1
   19bf4:	str	r3, [fp, #-20]	; 0xffffffec
   19bf8:	ldr	r2, [fp, #-20]	; 0xffffffec
   19bfc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19c00:	cmp	r2, r3
   19c04:	bcs	19c1c <__assert_fail@plt+0x88bc>
   19c08:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19c0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19c10:	add	r3, r2, r3
   19c14:	mov	r2, #39	; 0x27
   19c18:	strb	r2, [r3]
   19c1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19c20:	add	r3, r3, #1
   19c24:	str	r3, [fp, #-20]	; 0xffffffec
   19c28:	mov	r3, #0
   19c2c:	strb	r3, [fp, #-35]	; 0xffffffdd
   19c30:	b	1a238 <__assert_fail@plt+0x8ed8>
   19c34:	mov	r3, #1
   19c38:	strb	r3, [fp, #-42]	; 0xffffffd6
   19c3c:	b	1a244 <__assert_fail@plt+0x8ee4>
   19c40:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   19c44:	cmp	r3, #0
   19c48:	beq	19c88 <__assert_fail@plt+0x8928>
   19c4c:	mov	r3, #1
   19c50:	str	r3, [fp, #-48]	; 0xffffffd0
   19c54:	bl	111bc <__ctype_b_loc@plt>
   19c58:	mov	r3, r0
   19c5c:	ldr	r2, [r3]
   19c60:	ldrb	r3, [fp, #-38]	; 0xffffffda
   19c64:	lsl	r3, r3, #1
   19c68:	add	r3, r2, r3
   19c6c:	ldrh	r3, [r3]
   19c70:	and	r3, r3, #16384	; 0x4000
   19c74:	cmp	r3, #0
   19c78:	movne	r3, #1
   19c7c:	moveq	r3, #0
   19c80:	strb	r3, [fp, #-49]	; 0xffffffcf
   19c84:	b	19ed4 <__assert_fail@plt+0x8b74>
   19c88:	sub	r3, fp, #76	; 0x4c
   19c8c:	mov	r2, #8
   19c90:	mov	r1, #0
   19c94:	mov	r0, r3
   19c98:	bl	11240 <memset@plt>
   19c9c:	mov	r3, #0
   19ca0:	str	r3, [fp, #-48]	; 0xffffffd0
   19ca4:	mov	r3, #1
   19ca8:	strb	r3, [fp, #-49]	; 0xffffffcf
   19cac:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19cb0:	cmn	r3, #1
   19cb4:	bne	19cc4 <__assert_fail@plt+0x8964>
   19cb8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19cbc:	bl	111ec <strlen@plt>
   19cc0:	str	r0, [fp, #-100]	; 0xffffff9c
   19cc4:	ldr	r2, [fp, #-16]
   19cc8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19ccc:	add	r3, r2, r3
   19cd0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   19cd4:	add	r1, r2, r3
   19cd8:	ldr	r2, [fp, #-16]
   19cdc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19ce0:	add	r3, r2, r3
   19ce4:	ldr	r2, [fp, #-100]	; 0xffffff9c
   19ce8:	sub	r2, r2, r3
   19cec:	sub	r3, fp, #76	; 0x4c
   19cf0:	sub	r0, fp, #80	; 0x50
   19cf4:	bl	1e618 <__assert_fail@plt+0xd2b8>
   19cf8:	str	r0, [fp, #-64]	; 0xffffffc0
   19cfc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   19d00:	cmp	r3, #0
   19d04:	beq	19ec8 <__assert_fail@plt+0x8b68>
   19d08:	ldr	r3, [fp, #-64]	; 0xffffffc0
   19d0c:	cmn	r3, #1
   19d10:	bne	19d20 <__assert_fail@plt+0x89c0>
   19d14:	mov	r3, #0
   19d18:	strb	r3, [fp, #-49]	; 0xffffffcf
   19d1c:	b	19ed4 <__assert_fail@plt+0x8b74>
   19d20:	ldr	r3, [fp, #-64]	; 0xffffffc0
   19d24:	cmn	r3, #2
   19d28:	bne	19d80 <__assert_fail@plt+0x8a20>
   19d2c:	mov	r3, #0
   19d30:	strb	r3, [fp, #-49]	; 0xffffffcf
   19d34:	b	19d44 <__assert_fail@plt+0x89e4>
   19d38:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19d3c:	add	r3, r3, #1
   19d40:	str	r3, [fp, #-48]	; 0xffffffd0
   19d44:	ldr	r2, [fp, #-16]
   19d48:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19d4c:	add	r3, r2, r3
   19d50:	ldr	r2, [fp, #-100]	; 0xffffff9c
   19d54:	cmp	r2, r3
   19d58:	bls	19ed0 <__assert_fail@plt+0x8b70>
   19d5c:	ldr	r2, [fp, #-16]
   19d60:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19d64:	add	r3, r2, r3
   19d68:	ldr	r2, [fp, #-96]	; 0xffffffa0
   19d6c:	add	r3, r2, r3
   19d70:	ldrb	r3, [r3]
   19d74:	cmp	r3, #0
   19d78:	bne	19d38 <__assert_fail@plt+0x89d8>
   19d7c:	b	19ed0 <__assert_fail@plt+0x8b70>
   19d80:	ldrb	r3, [fp, #-34]	; 0xffffffde
   19d84:	cmp	r3, #0
   19d88:	beq	19e7c <__assert_fail@plt+0x8b1c>
   19d8c:	ldr	r3, [fp, #4]
   19d90:	cmp	r3, #2
   19d94:	bne	19e7c <__assert_fail@plt+0x8b1c>
   19d98:	mov	r3, #1
   19d9c:	str	r3, [fp, #-56]	; 0xffffffc8
   19da0:	b	19e6c <__assert_fail@plt+0x8b0c>
   19da4:	ldr	r2, [fp, #-16]
   19da8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19dac:	add	r2, r2, r3
   19db0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19db4:	add	r3, r2, r3
   19db8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   19dbc:	add	r3, r2, r3
   19dc0:	ldrb	r3, [r3]
   19dc4:	sub	r3, r3, #91	; 0x5b
   19dc8:	cmp	r3, #33	; 0x21
   19dcc:	ldrls	pc, [pc, r3, lsl #2]
   19dd0:	b	19e5c <__assert_fail@plt+0x8afc>
   19dd4:			; <UNDEFINED> instruction: 0x0001a6bc
   19dd8:			; <UNDEFINED> instruction: 0x0001a6bc
   19ddc:	andeq	r9, r1, ip, asr lr
   19de0:			; <UNDEFINED> instruction: 0x0001a6bc
   19de4:	andeq	r9, r1, ip, asr lr
   19de8:			; <UNDEFINED> instruction: 0x0001a6bc
   19dec:	andeq	r9, r1, ip, asr lr
   19df0:	andeq	r9, r1, ip, asr lr
   19df4:	andeq	r9, r1, ip, asr lr
   19df8:	andeq	r9, r1, ip, asr lr
   19dfc:	andeq	r9, r1, ip, asr lr
   19e00:	andeq	r9, r1, ip, asr lr
   19e04:	andeq	r9, r1, ip, asr lr
   19e08:	andeq	r9, r1, ip, asr lr
   19e0c:	andeq	r9, r1, ip, asr lr
   19e10:	andeq	r9, r1, ip, asr lr
   19e14:	andeq	r9, r1, ip, asr lr
   19e18:	andeq	r9, r1, ip, asr lr
   19e1c:	andeq	r9, r1, ip, asr lr
   19e20:	andeq	r9, r1, ip, asr lr
   19e24:	andeq	r9, r1, ip, asr lr
   19e28:	andeq	r9, r1, ip, asr lr
   19e2c:	andeq	r9, r1, ip, asr lr
   19e30:	andeq	r9, r1, ip, asr lr
   19e34:	andeq	r9, r1, ip, asr lr
   19e38:	andeq	r9, r1, ip, asr lr
   19e3c:	andeq	r9, r1, ip, asr lr
   19e40:	andeq	r9, r1, ip, asr lr
   19e44:	andeq	r9, r1, ip, asr lr
   19e48:	andeq	r9, r1, ip, asr lr
   19e4c:	andeq	r9, r1, ip, asr lr
   19e50:	andeq	r9, r1, ip, asr lr
   19e54:	andeq	r9, r1, ip, asr lr
   19e58:			; <UNDEFINED> instruction: 0x0001a6bc
   19e5c:	nop	{0}
   19e60:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19e64:	add	r3, r3, #1
   19e68:	str	r3, [fp, #-56]	; 0xffffffc8
   19e6c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   19e70:	ldr	r3, [fp, #-64]	; 0xffffffc0
   19e74:	cmp	r2, r3
   19e78:	bcc	19da4 <__assert_fail@plt+0x8a44>
   19e7c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   19e80:	mov	r0, r3
   19e84:	bl	110fc <iswprint@plt>
   19e88:	mov	r3, r0
   19e8c:	cmp	r3, #0
   19e90:	bne	19e9c <__assert_fail@plt+0x8b3c>
   19e94:	mov	r3, #0
   19e98:	strb	r3, [fp, #-49]	; 0xffffffcf
   19e9c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   19ea0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   19ea4:	add	r3, r2, r3
   19ea8:	str	r3, [fp, #-48]	; 0xffffffd0
   19eac:	sub	r3, fp, #76	; 0x4c
   19eb0:	mov	r0, r3
   19eb4:	bl	110a8 <mbsinit@plt>
   19eb8:	mov	r3, r0
   19ebc:	cmp	r3, #0
   19ec0:	beq	19cc4 <__assert_fail@plt+0x8964>
   19ec4:	b	19ed4 <__assert_fail@plt+0x8b74>
   19ec8:	nop	{0}
   19ecc:	b	19ed4 <__assert_fail@plt+0x8b74>
   19ed0:	nop	{0}
   19ed4:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   19ed8:	strb	r3, [fp, #-42]	; 0xffffffd6
   19edc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19ee0:	cmp	r3, #1
   19ee4:	bhi	19f08 <__assert_fail@plt+0x8ba8>
   19ee8:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   19eec:	cmp	r3, #0
   19ef0:	beq	1a240 <__assert_fail@plt+0x8ee0>
   19ef4:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   19ef8:	eor	r3, r3, #1
   19efc:	uxtb	r3, r3
   19f00:	cmp	r3, #0
   19f04:	beq	1a240 <__assert_fail@plt+0x8ee0>
   19f08:	ldr	r2, [fp, #-16]
   19f0c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19f10:	add	r3, r2, r3
   19f14:	str	r3, [fp, #-68]	; 0xffffffbc
   19f18:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   19f1c:	cmp	r3, #0
   19f20:	beq	1a0d4 <__assert_fail@plt+0x8d74>
   19f24:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   19f28:	eor	r3, r3, #1
   19f2c:	uxtb	r3, r3
   19f30:	cmp	r3, #0
   19f34:	beq	1a0d4 <__assert_fail@plt+0x8d74>
   19f38:	ldrb	r3, [fp, #-34]	; 0xffffffde
   19f3c:	cmp	r3, #0
   19f40:	bne	1a6a8 <__assert_fail@plt+0x9348>
   19f44:	mov	r3, #1
   19f48:	strb	r3, [fp, #-41]	; 0xffffffd7
   19f4c:	ldr	r3, [fp, #4]
   19f50:	cmp	r3, #2
   19f54:	bne	1a004 <__assert_fail@plt+0x8ca4>
   19f58:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   19f5c:	eor	r3, r3, #1
   19f60:	uxtb	r3, r3
   19f64:	cmp	r3, #0
   19f68:	beq	1a004 <__assert_fail@plt+0x8ca4>
   19f6c:	ldr	r2, [fp, #-20]	; 0xffffffec
   19f70:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19f74:	cmp	r2, r3
   19f78:	bcs	19f90 <__assert_fail@plt+0x8c30>
   19f7c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19f80:	ldr	r3, [fp, #-20]	; 0xffffffec
   19f84:	add	r3, r2, r3
   19f88:	mov	r2, #39	; 0x27
   19f8c:	strb	r2, [r3]
   19f90:	ldr	r3, [fp, #-20]	; 0xffffffec
   19f94:	add	r3, r3, #1
   19f98:	str	r3, [fp, #-20]	; 0xffffffec
   19f9c:	ldr	r2, [fp, #-20]	; 0xffffffec
   19fa0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19fa4:	cmp	r2, r3
   19fa8:	bcs	19fc0 <__assert_fail@plt+0x8c60>
   19fac:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19fb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   19fb4:	add	r3, r2, r3
   19fb8:	mov	r2, #36	; 0x24
   19fbc:	strb	r2, [r3]
   19fc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   19fc4:	add	r3, r3, #1
   19fc8:	str	r3, [fp, #-20]	; 0xffffffec
   19fcc:	ldr	r2, [fp, #-20]	; 0xffffffec
   19fd0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19fd4:	cmp	r2, r3
   19fd8:	bcs	19ff0 <__assert_fail@plt+0x8c90>
   19fdc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19fe0:	ldr	r3, [fp, #-20]	; 0xffffffec
   19fe4:	add	r3, r2, r3
   19fe8:	mov	r2, #39	; 0x27
   19fec:	strb	r2, [r3]
   19ff0:	ldr	r3, [fp, #-20]	; 0xffffffec
   19ff4:	add	r3, r3, #1
   19ff8:	str	r3, [fp, #-20]	; 0xffffffec
   19ffc:	mov	r3, #1
   1a000:	strb	r3, [fp, #-35]	; 0xffffffdd
   1a004:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a008:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a00c:	cmp	r2, r3
   1a010:	bcs	1a028 <__assert_fail@plt+0x8cc8>
   1a014:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a018:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a01c:	add	r3, r2, r3
   1a020:	mov	r2, #92	; 0x5c
   1a024:	strb	r2, [r3]
   1a028:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a02c:	add	r3, r3, #1
   1a030:	str	r3, [fp, #-20]	; 0xffffffec
   1a034:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a038:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a03c:	cmp	r2, r3
   1a040:	bcs	1a068 <__assert_fail@plt+0x8d08>
   1a044:	ldrb	r3, [fp, #-38]	; 0xffffffda
   1a048:	lsr	r3, r3, #6
   1a04c:	uxtb	r2, r3
   1a050:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1a054:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a058:	add	r3, r1, r3
   1a05c:	add	r2, r2, #48	; 0x30
   1a060:	uxtb	r2, r2
   1a064:	strb	r2, [r3]
   1a068:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a06c:	add	r3, r3, #1
   1a070:	str	r3, [fp, #-20]	; 0xffffffec
   1a074:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a078:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a07c:	cmp	r2, r3
   1a080:	bcs	1a0b0 <__assert_fail@plt+0x8d50>
   1a084:	ldrb	r3, [fp, #-38]	; 0xffffffda
   1a088:	lsr	r3, r3, #3
   1a08c:	uxtb	r3, r3
   1a090:	and	r3, r3, #7
   1a094:	uxtb	r2, r3
   1a098:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1a09c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a0a0:	add	r3, r1, r3
   1a0a4:	add	r2, r2, #48	; 0x30
   1a0a8:	uxtb	r2, r2
   1a0ac:	strb	r2, [r3]
   1a0b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a0b4:	add	r3, r3, #1
   1a0b8:	str	r3, [fp, #-20]	; 0xffffffec
   1a0bc:	ldrb	r3, [fp, #-38]	; 0xffffffda
   1a0c0:	and	r3, r3, #7
   1a0c4:	uxtb	r3, r3
   1a0c8:	add	r3, r3, #48	; 0x30
   1a0cc:	strb	r3, [fp, #-38]	; 0xffffffda
   1a0d0:	b	1a118 <__assert_fail@plt+0x8db8>
   1a0d4:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   1a0d8:	cmp	r3, #0
   1a0dc:	beq	1a118 <__assert_fail@plt+0x8db8>
   1a0e0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a0e4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a0e8:	cmp	r2, r3
   1a0ec:	bcs	1a104 <__assert_fail@plt+0x8da4>
   1a0f0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a0f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a0f8:	add	r3, r2, r3
   1a0fc:	mov	r2, #92	; 0x5c
   1a100:	strb	r2, [r3]
   1a104:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a108:	add	r3, r3, #1
   1a10c:	str	r3, [fp, #-20]	; 0xffffffec
   1a110:	mov	r3, #0
   1a114:	strb	r3, [fp, #-40]	; 0xffffffd8
   1a118:	ldr	r3, [fp, #-16]
   1a11c:	add	r3, r3, #1
   1a120:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1a124:	cmp	r2, r3
   1a128:	bls	1a208 <__assert_fail@plt+0x8ea8>
   1a12c:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   1a130:	cmp	r3, #0
   1a134:	beq	1a1b4 <__assert_fail@plt+0x8e54>
   1a138:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   1a13c:	eor	r3, r3, #1
   1a140:	uxtb	r3, r3
   1a144:	cmp	r3, #0
   1a148:	beq	1a1b4 <__assert_fail@plt+0x8e54>
   1a14c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a150:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a154:	cmp	r2, r3
   1a158:	bcs	1a170 <__assert_fail@plt+0x8e10>
   1a15c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a160:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a164:	add	r3, r2, r3
   1a168:	mov	r2, #39	; 0x27
   1a16c:	strb	r2, [r3]
   1a170:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a174:	add	r3, r3, #1
   1a178:	str	r3, [fp, #-20]	; 0xffffffec
   1a17c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a180:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a184:	cmp	r2, r3
   1a188:	bcs	1a1a0 <__assert_fail@plt+0x8e40>
   1a18c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a190:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a194:	add	r3, r2, r3
   1a198:	mov	r2, #39	; 0x27
   1a19c:	strb	r2, [r3]
   1a1a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a1a4:	add	r3, r3, #1
   1a1a8:	str	r3, [fp, #-20]	; 0xffffffec
   1a1ac:	mov	r3, #0
   1a1b0:	strb	r3, [fp, #-35]	; 0xffffffdd
   1a1b4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a1b8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a1bc:	cmp	r2, r3
   1a1c0:	bcs	1a1d8 <__assert_fail@plt+0x8e78>
   1a1c4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a1c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a1cc:	add	r3, r2, r3
   1a1d0:	ldrb	r2, [fp, #-38]	; 0xffffffda
   1a1d4:	strb	r2, [r3]
   1a1d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a1dc:	add	r3, r3, #1
   1a1e0:	str	r3, [fp, #-20]	; 0xffffffec
   1a1e4:	ldr	r3, [fp, #-16]
   1a1e8:	add	r3, r3, #1
   1a1ec:	str	r3, [fp, #-16]
   1a1f0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1a1f4:	ldr	r3, [fp, #-16]
   1a1f8:	add	r3, r2, r3
   1a1fc:	ldrb	r3, [r3]
   1a200:	strb	r3, [fp, #-38]	; 0xffffffda
   1a204:	b	19f18 <__assert_fail@plt+0x8bb8>
   1a208:	nop	{0}
   1a20c:	b	1a3e4 <__assert_fail@plt+0x9084>
   1a210:	nop	{0}
   1a214:	b	1a244 <__assert_fail@plt+0x8ee4>
   1a218:	nop	{0}
   1a21c:	b	1a244 <__assert_fail@plt+0x8ee4>
   1a220:	nop	{0}
   1a224:	b	1a244 <__assert_fail@plt+0x8ee4>
   1a228:	nop	{0}
   1a22c:	b	1a244 <__assert_fail@plt+0x8ee4>
   1a230:	nop	{0}
   1a234:	b	1a244 <__assert_fail@plt+0x8ee4>
   1a238:	nop	{0}
   1a23c:	b	1a244 <__assert_fail@plt+0x8ee4>
   1a240:	nop	{0}
   1a244:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   1a248:	eor	r3, r3, #1
   1a24c:	uxtb	r3, r3
   1a250:	cmp	r3, #0
   1a254:	bne	1a264 <__assert_fail@plt+0x8f04>
   1a258:	ldr	r3, [fp, #4]
   1a25c:	cmp	r3, #2
   1a260:	bne	1a278 <__assert_fail@plt+0x8f18>
   1a264:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1a268:	eor	r3, r3, #1
   1a26c:	uxtb	r3, r3
   1a270:	cmp	r3, #0
   1a274:	bne	1a2b8 <__assert_fail@plt+0x8f58>
   1a278:	ldr	r3, [fp, #12]
   1a27c:	cmp	r3, #0
   1a280:	beq	1a2b8 <__assert_fail@plt+0x8f58>
   1a284:	ldrb	r3, [fp, #-38]	; 0xffffffda
   1a288:	lsr	r3, r3, #5
   1a28c:	uxtb	r3, r3
   1a290:	lsl	r3, r3, #2
   1a294:	ldr	r2, [fp, #12]
   1a298:	add	r3, r2, r3
   1a29c:	ldr	r2, [r3]
   1a2a0:	ldrb	r3, [fp, #-38]	; 0xffffffda
   1a2a4:	and	r3, r3, #31
   1a2a8:	lsr	r3, r2, r3
   1a2ac:	and	r3, r3, #1
   1a2b0:	cmp	r3, #0
   1a2b4:	bne	1a2cc <__assert_fail@plt+0x8f6c>
   1a2b8:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   1a2bc:	eor	r3, r3, #1
   1a2c0:	uxtb	r3, r3
   1a2c4:	cmp	r3, #0
   1a2c8:	bne	1a3e0 <__assert_fail@plt+0x9080>
   1a2cc:	nop	{0}
   1a2d0:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1a2d4:	cmp	r3, #0
   1a2d8:	bne	1a6b0 <__assert_fail@plt+0x9350>
   1a2dc:	mov	r3, #1
   1a2e0:	strb	r3, [fp, #-41]	; 0xffffffd7
   1a2e4:	ldr	r3, [fp, #4]
   1a2e8:	cmp	r3, #2
   1a2ec:	bne	1a39c <__assert_fail@plt+0x903c>
   1a2f0:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   1a2f4:	eor	r3, r3, #1
   1a2f8:	uxtb	r3, r3
   1a2fc:	cmp	r3, #0
   1a300:	beq	1a39c <__assert_fail@plt+0x903c>
   1a304:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a308:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a30c:	cmp	r2, r3
   1a310:	bcs	1a328 <__assert_fail@plt+0x8fc8>
   1a314:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a318:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a31c:	add	r3, r2, r3
   1a320:	mov	r2, #39	; 0x27
   1a324:	strb	r2, [r3]
   1a328:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a32c:	add	r3, r3, #1
   1a330:	str	r3, [fp, #-20]	; 0xffffffec
   1a334:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a338:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a33c:	cmp	r2, r3
   1a340:	bcs	1a358 <__assert_fail@plt+0x8ff8>
   1a344:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a348:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a34c:	add	r3, r2, r3
   1a350:	mov	r2, #36	; 0x24
   1a354:	strb	r2, [r3]
   1a358:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a35c:	add	r3, r3, #1
   1a360:	str	r3, [fp, #-20]	; 0xffffffec
   1a364:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a368:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a36c:	cmp	r2, r3
   1a370:	bcs	1a388 <__assert_fail@plt+0x9028>
   1a374:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a378:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a37c:	add	r3, r2, r3
   1a380:	mov	r2, #39	; 0x27
   1a384:	strb	r2, [r3]
   1a388:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a38c:	add	r3, r3, #1
   1a390:	str	r3, [fp, #-20]	; 0xffffffec
   1a394:	mov	r3, #1
   1a398:	strb	r3, [fp, #-35]	; 0xffffffdd
   1a39c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a3a0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a3a4:	cmp	r2, r3
   1a3a8:	bcs	1a3c0 <__assert_fail@plt+0x9060>
   1a3ac:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a3b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a3b4:	add	r3, r2, r3
   1a3b8:	mov	r2, #92	; 0x5c
   1a3bc:	strb	r2, [r3]
   1a3c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a3c4:	add	r3, r3, #1
   1a3c8:	str	r3, [fp, #-20]	; 0xffffffec
   1a3cc:	b	1a3e4 <__assert_fail@plt+0x9084>
   1a3d0:	nop	{0}
   1a3d4:	b	1a3e4 <__assert_fail@plt+0x9084>
   1a3d8:	nop	{0}
   1a3dc:	b	1a3e4 <__assert_fail@plt+0x9084>
   1a3e0:	nop	{0}
   1a3e4:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   1a3e8:	cmp	r3, #0
   1a3ec:	beq	1a46c <__assert_fail@plt+0x910c>
   1a3f0:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   1a3f4:	eor	r3, r3, #1
   1a3f8:	uxtb	r3, r3
   1a3fc:	cmp	r3, #0
   1a400:	beq	1a46c <__assert_fail@plt+0x910c>
   1a404:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a408:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a40c:	cmp	r2, r3
   1a410:	bcs	1a428 <__assert_fail@plt+0x90c8>
   1a414:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a418:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a41c:	add	r3, r2, r3
   1a420:	mov	r2, #39	; 0x27
   1a424:	strb	r2, [r3]
   1a428:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a42c:	add	r3, r3, #1
   1a430:	str	r3, [fp, #-20]	; 0xffffffec
   1a434:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a438:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a43c:	cmp	r2, r3
   1a440:	bcs	1a458 <__assert_fail@plt+0x90f8>
   1a444:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a448:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a44c:	add	r3, r2, r3
   1a450:	mov	r2, #39	; 0x27
   1a454:	strb	r2, [r3]
   1a458:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a45c:	add	r3, r3, #1
   1a460:	str	r3, [fp, #-20]	; 0xffffffec
   1a464:	mov	r3, #0
   1a468:	strb	r3, [fp, #-35]	; 0xffffffdd
   1a46c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a470:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a474:	cmp	r2, r3
   1a478:	bcs	1a490 <__assert_fail@plt+0x9130>
   1a47c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a480:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a484:	add	r3, r2, r3
   1a488:	ldrb	r2, [fp, #-38]	; 0xffffffda
   1a48c:	strb	r2, [r3]
   1a490:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a494:	add	r3, r3, #1
   1a498:	str	r3, [fp, #-20]	; 0xffffffec
   1a49c:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   1a4a0:	eor	r3, r3, #1
   1a4a4:	uxtb	r3, r3
   1a4a8:	cmp	r3, #0
   1a4ac:	beq	1a4b8 <__assert_fail@plt+0x9158>
   1a4b0:	mov	r3, #0
   1a4b4:	strb	r3, [fp, #-37]	; 0xffffffdb
   1a4b8:	ldr	r3, [fp, #-16]
   1a4bc:	add	r3, r3, #1
   1a4c0:	str	r3, [fp, #-16]
   1a4c4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a4c8:	cmn	r3, #1
   1a4cc:	bne	1a4f4 <__assert_fail@plt+0x9194>
   1a4d0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1a4d4:	ldr	r3, [fp, #-16]
   1a4d8:	add	r3, r2, r3
   1a4dc:	ldrb	r3, [r3]
   1a4e0:	cmp	r3, #0
   1a4e4:	movne	r3, #1
   1a4e8:	moveq	r3, #0
   1a4ec:	uxtb	r3, r3
   1a4f0:	b	1a50c <__assert_fail@plt+0x91ac>
   1a4f4:	ldr	r2, [fp, #-16]
   1a4f8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a4fc:	cmp	r2, r3
   1a500:	movne	r3, #1
   1a504:	moveq	r3, #0
   1a508:	uxtb	r3, r3
   1a50c:	cmp	r3, #0
   1a510:	bne	1932c <__assert_fail@plt+0x7fcc>
   1a514:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a518:	cmp	r3, #0
   1a51c:	bne	1a538 <__assert_fail@plt+0x91d8>
   1a520:	ldr	r3, [fp, #4]
   1a524:	cmp	r3, #2
   1a528:	bne	1a538 <__assert_fail@plt+0x91d8>
   1a52c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1a530:	cmp	r3, #0
   1a534:	bne	1a6b8 <__assert_fail@plt+0x9358>
   1a538:	ldr	r3, [fp, #4]
   1a53c:	cmp	r3, #2
   1a540:	bne	1a5e0 <__assert_fail@plt+0x9280>
   1a544:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1a548:	eor	r3, r3, #1
   1a54c:	uxtb	r3, r3
   1a550:	cmp	r3, #0
   1a554:	beq	1a5e0 <__assert_fail@plt+0x9280>
   1a558:	ldrb	r3, [fp, #-36]	; 0xffffffdc
   1a55c:	cmp	r3, #0
   1a560:	beq	1a5e0 <__assert_fail@plt+0x9280>
   1a564:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   1a568:	cmp	r3, #0
   1a56c:	beq	1a5b4 <__assert_fail@plt+0x9254>
   1a570:	ldr	r3, [fp, #20]
   1a574:	str	r3, [sp, #16]
   1a578:	ldr	r3, [fp, #16]
   1a57c:	str	r3, [sp, #12]
   1a580:	ldr	r3, [fp, #12]
   1a584:	str	r3, [sp, #8]
   1a588:	ldr	r3, [fp, #8]
   1a58c:	str	r3, [sp, #4]
   1a590:	mov	r3, #5
   1a594:	str	r3, [sp]
   1a598:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a59c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1a5a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a5a4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1a5a8:	bl	19064 <__assert_fail@plt+0x7d04>
   1a5ac:	mov	r3, r0
   1a5b0:	b	1a720 <__assert_fail@plt+0x93c0>
   1a5b4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a5b8:	cmp	r3, #0
   1a5bc:	bne	1a5e0 <__assert_fail@plt+0x9280>
   1a5c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a5c4:	cmp	r3, #0
   1a5c8:	beq	1a5e0 <__assert_fail@plt+0x9280>
   1a5cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a5d0:	str	r3, [fp, #-92]	; 0xffffffa4
   1a5d4:	mov	r3, #0
   1a5d8:	str	r3, [fp, #-20]	; 0xffffffec
   1a5dc:	b	190f8 <__assert_fail@plt+0x7d98>
   1a5e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a5e4:	cmp	r3, #0
   1a5e8:	beq	1a654 <__assert_fail@plt+0x92f4>
   1a5ec:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1a5f0:	eor	r3, r3, #1
   1a5f4:	uxtb	r3, r3
   1a5f8:	cmp	r3, #0
   1a5fc:	beq	1a654 <__assert_fail@plt+0x92f4>
   1a600:	b	1a644 <__assert_fail@plt+0x92e4>
   1a604:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a608:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a60c:	cmp	r2, r3
   1a610:	bcs	1a62c <__assert_fail@plt+0x92cc>
   1a614:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a618:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a61c:	add	r3, r2, r3
   1a620:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1a624:	ldrb	r2, [r2]
   1a628:	strb	r2, [r3]
   1a62c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a630:	add	r3, r3, #1
   1a634:	str	r3, [fp, #-20]	; 0xffffffec
   1a638:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a63c:	add	r3, r3, #1
   1a640:	str	r3, [fp, #-28]	; 0xffffffe4
   1a644:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a648:	ldrb	r3, [r3]
   1a64c:	cmp	r3, #0
   1a650:	bne	1a604 <__assert_fail@plt+0x92a4>
   1a654:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a658:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a65c:	cmp	r2, r3
   1a660:	bcs	1a678 <__assert_fail@plt+0x9318>
   1a664:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a668:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a66c:	add	r3, r2, r3
   1a670:	mov	r2, #0
   1a674:	strb	r2, [r3]
   1a678:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a67c:	b	1a720 <__assert_fail@plt+0x93c0>
   1a680:	nop	{0}
   1a684:	b	1a6bc <__assert_fail@plt+0x935c>
   1a688:	nop	{0}
   1a68c:	b	1a6bc <__assert_fail@plt+0x935c>
   1a690:	nop	{0}
   1a694:	b	1a6bc <__assert_fail@plt+0x935c>
   1a698:	nop	{0}
   1a69c:	b	1a6bc <__assert_fail@plt+0x935c>
   1a6a0:	nop	{0}
   1a6a4:	b	1a6bc <__assert_fail@plt+0x935c>
   1a6a8:	nop	{0}
   1a6ac:	b	1a6bc <__assert_fail@plt+0x935c>
   1a6b0:	nop	{0}
   1a6b4:	b	1a6bc <__assert_fail@plt+0x935c>
   1a6b8:	nop	{0}
   1a6bc:	ldr	r3, [fp, #4]
   1a6c0:	cmp	r3, #2
   1a6c4:	bne	1a6dc <__assert_fail@plt+0x937c>
   1a6c8:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   1a6cc:	cmp	r3, #0
   1a6d0:	beq	1a6dc <__assert_fail@plt+0x937c>
   1a6d4:	mov	r3, #4
   1a6d8:	str	r3, [fp, #4]
   1a6dc:	ldr	r3, [fp, #8]
   1a6e0:	bic	r3, r3, #2
   1a6e4:	ldr	r2, [fp, #20]
   1a6e8:	str	r2, [sp, #16]
   1a6ec:	ldr	r2, [fp, #16]
   1a6f0:	str	r2, [sp, #12]
   1a6f4:	mov	r2, #0
   1a6f8:	str	r2, [sp, #8]
   1a6fc:	str	r3, [sp, #4]
   1a700:	ldr	r3, [fp, #4]
   1a704:	str	r3, [sp]
   1a708:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a70c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1a710:	ldr	r1, [fp, #-92]	; 0xffffffa4
   1a714:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1a718:	bl	19064 <__assert_fail@plt+0x7d04>
   1a71c:	mov	r3, r0
   1a720:	mov	r0, r3
   1a724:	sub	sp, fp, #8
   1a728:	ldr	r4, [sp]
   1a72c:	ldr	fp, [sp, #4]
   1a730:	add	sp, sp, #8
   1a734:	pop	{pc}		; (ldr pc, [sp], #4)
   1a738:	str	fp, [sp, #-8]!
   1a73c:	str	lr, [sp, #4]
   1a740:	add	fp, sp, #4
   1a744:	sub	sp, sp, #56	; 0x38
   1a748:	str	r0, [fp, #-24]	; 0xffffffe8
   1a74c:	str	r1, [fp, #-28]	; 0xffffffe4
   1a750:	str	r2, [fp, #-32]	; 0xffffffe0
   1a754:	str	r3, [fp, #-36]	; 0xffffffdc
   1a758:	ldr	r3, [fp, #4]
   1a75c:	cmp	r3, #0
   1a760:	beq	1a76c <__assert_fail@plt+0x940c>
   1a764:	ldr	r3, [fp, #4]
   1a768:	b	1a774 <__assert_fail@plt+0x9414>
   1a76c:	movw	r3, #4564	; 0x11d4
   1a770:	movt	r3, #3
   1a774:	str	r3, [fp, #-8]
   1a778:	bl	11228 <__errno_location@plt>
   1a77c:	mov	r3, r0
   1a780:	ldr	r3, [r3]
   1a784:	str	r3, [fp, #-12]
   1a788:	ldr	r3, [fp, #-8]
   1a78c:	ldr	r3, [r3]
   1a790:	ldr	r2, [fp, #-8]
   1a794:	ldr	r2, [r2, #4]
   1a798:	ldr	r1, [fp, #-8]
   1a79c:	add	r1, r1, #8
   1a7a0:	ldr	r0, [fp, #-8]
   1a7a4:	ldr	r0, [r0, #40]	; 0x28
   1a7a8:	ldr	ip, [fp, #-8]
   1a7ac:	ldr	ip, [ip, #44]	; 0x2c
   1a7b0:	str	ip, [sp, #16]
   1a7b4:	str	r0, [sp, #12]
   1a7b8:	str	r1, [sp, #8]
   1a7bc:	str	r2, [sp, #4]
   1a7c0:	str	r3, [sp]
   1a7c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a7c8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1a7cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a7d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a7d4:	bl	19064 <__assert_fail@plt+0x7d04>
   1a7d8:	str	r0, [fp, #-16]
   1a7dc:	bl	11228 <__errno_location@plt>
   1a7e0:	mov	r2, r0
   1a7e4:	ldr	r3, [fp, #-12]
   1a7e8:	str	r3, [r2]
   1a7ec:	ldr	r3, [fp, #-16]
   1a7f0:	mov	r0, r3
   1a7f4:	sub	sp, fp, #4
   1a7f8:	ldr	fp, [sp]
   1a7fc:	add	sp, sp, #4
   1a800:	pop	{pc}		; (ldr pc, [sp], #4)
   1a804:	str	fp, [sp, #-8]!
   1a808:	str	lr, [sp, #4]
   1a80c:	add	fp, sp, #4
   1a810:	sub	sp, sp, #16
   1a814:	str	r0, [fp, #-8]
   1a818:	str	r1, [fp, #-12]
   1a81c:	str	r2, [fp, #-16]
   1a820:	ldr	r3, [fp, #-16]
   1a824:	mov	r2, #0
   1a828:	ldr	r1, [fp, #-12]
   1a82c:	ldr	r0, [fp, #-8]
   1a830:	bl	1a84c <__assert_fail@plt+0x94ec>
   1a834:	mov	r3, r0
   1a838:	mov	r0, r3
   1a83c:	sub	sp, fp, #4
   1a840:	ldr	fp, [sp]
   1a844:	add	sp, sp, #4
   1a848:	pop	{pc}		; (ldr pc, [sp], #4)
   1a84c:	str	fp, [sp, #-8]!
   1a850:	str	lr, [sp, #4]
   1a854:	add	fp, sp, #4
   1a858:	sub	sp, sp, #64	; 0x40
   1a85c:	str	r0, [fp, #-32]	; 0xffffffe0
   1a860:	str	r1, [fp, #-36]	; 0xffffffdc
   1a864:	str	r2, [fp, #-40]	; 0xffffffd8
   1a868:	str	r3, [fp, #-44]	; 0xffffffd4
   1a86c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a870:	cmp	r3, #0
   1a874:	beq	1a880 <__assert_fail@plt+0x9520>
   1a878:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a87c:	b	1a888 <__assert_fail@plt+0x9528>
   1a880:	movw	r3, #4564	; 0x11d4
   1a884:	movt	r3, #3
   1a888:	str	r3, [fp, #-8]
   1a88c:	bl	11228 <__errno_location@plt>
   1a890:	mov	r3, r0
   1a894:	ldr	r3, [r3]
   1a898:	str	r3, [fp, #-12]
   1a89c:	ldr	r3, [fp, #-8]
   1a8a0:	ldr	r3, [r3, #4]
   1a8a4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a8a8:	cmp	r2, #0
   1a8ac:	moveq	r2, #1
   1a8b0:	movne	r2, #0
   1a8b4:	uxtb	r2, r2
   1a8b8:	orr	r3, r3, r2
   1a8bc:	str	r3, [fp, #-16]
   1a8c0:	ldr	r3, [fp, #-8]
   1a8c4:	ldr	r3, [r3]
   1a8c8:	ldr	r2, [fp, #-8]
   1a8cc:	add	r2, r2, #8
   1a8d0:	ldr	r1, [fp, #-8]
   1a8d4:	ldr	r1, [r1, #40]	; 0x28
   1a8d8:	ldr	r0, [fp, #-8]
   1a8dc:	ldr	r0, [r0, #44]	; 0x2c
   1a8e0:	str	r0, [sp, #16]
   1a8e4:	str	r1, [sp, #12]
   1a8e8:	str	r2, [sp, #8]
   1a8ec:	ldr	r2, [fp, #-16]
   1a8f0:	str	r2, [sp, #4]
   1a8f4:	str	r3, [sp]
   1a8f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a8fc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1a900:	mov	r1, #0
   1a904:	mov	r0, #0
   1a908:	bl	19064 <__assert_fail@plt+0x7d04>
   1a90c:	mov	r3, r0
   1a910:	add	r3, r3, #1
   1a914:	str	r3, [fp, #-20]	; 0xffffffec
   1a918:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a91c:	bl	1c380 <__assert_fail@plt+0xb020>
   1a920:	mov	r3, r0
   1a924:	str	r3, [fp, #-24]	; 0xffffffe8
   1a928:	ldr	r3, [fp, #-8]
   1a92c:	ldr	r3, [r3]
   1a930:	ldr	r2, [fp, #-8]
   1a934:	add	r2, r2, #8
   1a938:	ldr	r1, [fp, #-8]
   1a93c:	ldr	r1, [r1, #40]	; 0x28
   1a940:	ldr	r0, [fp, #-8]
   1a944:	ldr	r0, [r0, #44]	; 0x2c
   1a948:	str	r0, [sp, #16]
   1a94c:	str	r1, [sp, #12]
   1a950:	str	r2, [sp, #8]
   1a954:	ldr	r2, [fp, #-16]
   1a958:	str	r2, [sp, #4]
   1a95c:	str	r3, [sp]
   1a960:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a964:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1a968:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a96c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a970:	bl	19064 <__assert_fail@plt+0x7d04>
   1a974:	bl	11228 <__errno_location@plt>
   1a978:	mov	r2, r0
   1a97c:	ldr	r3, [fp, #-12]
   1a980:	str	r3, [r2]
   1a984:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a988:	cmp	r3, #0
   1a98c:	beq	1a9a0 <__assert_fail@plt+0x9640>
   1a990:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a994:	sub	r2, r3, #1
   1a998:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a99c:	str	r2, [r3]
   1a9a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a9a4:	mov	r0, r3
   1a9a8:	sub	sp, fp, #4
   1a9ac:	ldr	fp, [sp]
   1a9b0:	add	sp, sp, #4
   1a9b4:	pop	{pc}		; (ldr pc, [sp], #4)
   1a9b8:	str	fp, [sp, #-8]!
   1a9bc:	str	lr, [sp, #4]
   1a9c0:	add	fp, sp, #4
   1a9c4:	sub	sp, sp, #8
   1a9c8:	movw	r3, #4432	; 0x1150
   1a9cc:	movt	r3, #3
   1a9d0:	ldr	r3, [r3]
   1a9d4:	str	r3, [fp, #-12]
   1a9d8:	mov	r3, #1
   1a9dc:	str	r3, [fp, #-8]
   1a9e0:	b	1aa0c <__assert_fail@plt+0x96ac>
   1a9e4:	ldr	r3, [fp, #-8]
   1a9e8:	lsl	r3, r3, #3
   1a9ec:	ldr	r2, [fp, #-12]
   1a9f0:	add	r3, r2, r3
   1a9f4:	ldr	r3, [r3, #4]
   1a9f8:	mov	r0, r3
   1a9fc:	bl	1360c <__assert_fail@plt+0x22ac>
   1aa00:	ldr	r3, [fp, #-8]
   1aa04:	add	r3, r3, #1
   1aa08:	str	r3, [fp, #-8]
   1aa0c:	movw	r3, #4420	; 0x1144
   1aa10:	movt	r3, #3
   1aa14:	ldr	r3, [r3]
   1aa18:	ldr	r2, [fp, #-8]
   1aa1c:	cmp	r2, r3
   1aa20:	blt	1a9e4 <__assert_fail@plt+0x9684>
   1aa24:	ldr	r3, [fp, #-12]
   1aa28:	ldr	r2, [r3, #4]
   1aa2c:	movw	r3, #4612	; 0x1204
   1aa30:	movt	r3, #3
   1aa34:	cmp	r2, r3
   1aa38:	beq	1aa70 <__assert_fail@plt+0x9710>
   1aa3c:	ldr	r3, [fp, #-12]
   1aa40:	ldr	r3, [r3, #4]
   1aa44:	mov	r0, r3
   1aa48:	bl	1360c <__assert_fail@plt+0x22ac>
   1aa4c:	movw	r3, #4424	; 0x1148
   1aa50:	movt	r3, #3
   1aa54:	mov	r2, #256	; 0x100
   1aa58:	str	r2, [r3]
   1aa5c:	movw	r3, #4424	; 0x1148
   1aa60:	movt	r3, #3
   1aa64:	movw	r2, #4612	; 0x1204
   1aa68:	movt	r2, #3
   1aa6c:	str	r2, [r3, #4]
   1aa70:	ldr	r2, [fp, #-12]
   1aa74:	movw	r3, #4424	; 0x1148
   1aa78:	movt	r3, #3
   1aa7c:	cmp	r2, r3
   1aa80:	beq	1aaa0 <__assert_fail@plt+0x9740>
   1aa84:	ldr	r0, [fp, #-12]
   1aa88:	bl	1360c <__assert_fail@plt+0x22ac>
   1aa8c:	movw	r3, #4432	; 0x1150
   1aa90:	movt	r3, #3
   1aa94:	movw	r2, #4424	; 0x1148
   1aa98:	movt	r2, #3
   1aa9c:	str	r2, [r3]
   1aaa0:	movw	r3, #4420	; 0x1144
   1aaa4:	movt	r3, #3
   1aaa8:	mov	r2, #1
   1aaac:	str	r2, [r3]
   1aab0:	nop	{0}
   1aab4:	sub	sp, fp, #4
   1aab8:	ldr	fp, [sp]
   1aabc:	add	sp, sp, #4
   1aac0:	pop	{pc}		; (ldr pc, [sp], #4)
   1aac4:	str	fp, [sp, #-8]!
   1aac8:	str	lr, [sp, #4]
   1aacc:	add	fp, sp, #4
   1aad0:	sub	sp, sp, #80	; 0x50
   1aad4:	str	r0, [fp, #-48]	; 0xffffffd0
   1aad8:	str	r1, [fp, #-52]	; 0xffffffcc
   1aadc:	str	r2, [fp, #-56]	; 0xffffffc8
   1aae0:	str	r3, [fp, #-60]	; 0xffffffc4
   1aae4:	bl	11228 <__errno_location@plt>
   1aae8:	mov	r3, r0
   1aaec:	ldr	r3, [r3]
   1aaf0:	str	r3, [fp, #-16]
   1aaf4:	movw	r3, #4432	; 0x1150
   1aaf8:	movt	r3, #3
   1aafc:	ldr	r3, [r3]
   1ab00:	str	r3, [fp, #-8]
   1ab04:	mvn	r3, #-2147483648	; 0x80000000
   1ab08:	str	r3, [fp, #-20]	; 0xffffffec
   1ab0c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ab10:	cmp	r3, #0
   1ab14:	blt	1ab28 <__assert_fail@plt+0x97c8>
   1ab18:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1ab1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ab20:	cmp	r2, r3
   1ab24:	blt	1ab2c <__assert_fail@plt+0x97cc>
   1ab28:	bl	11318 <abort@plt>
   1ab2c:	movw	r3, #4420	; 0x1144
   1ab30:	movt	r3, #3
   1ab34:	ldr	r3, [r3]
   1ab38:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1ab3c:	cmp	r2, r3
   1ab40:	blt	1ac38 <__assert_fail@plt+0x98d8>
   1ab44:	ldr	r2, [fp, #-8]
   1ab48:	movw	r3, #4424	; 0x1148
   1ab4c:	movt	r3, #3
   1ab50:	cmp	r2, r3
   1ab54:	moveq	r3, #1
   1ab58:	movne	r3, #0
   1ab5c:	strb	r3, [fp, #-21]	; 0xffffffeb
   1ab60:	movw	r3, #4420	; 0x1144
   1ab64:	movt	r3, #3
   1ab68:	ldr	r3, [r3]
   1ab6c:	str	r3, [fp, #-40]	; 0xffffffd8
   1ab70:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   1ab74:	cmp	r3, #0
   1ab78:	beq	1ab84 <__assert_fail@plt+0x9824>
   1ab7c:	mov	r0, #0
   1ab80:	b	1ab88 <__assert_fail@plt+0x9828>
   1ab84:	ldr	r0, [fp, #-8]
   1ab88:	movw	r3, #4420	; 0x1144
   1ab8c:	movt	r3, #3
   1ab90:	ldr	r3, [r3]
   1ab94:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1ab98:	sub	r3, r2, r3
   1ab9c:	add	r2, r3, #1
   1aba0:	sub	r1, fp, #40	; 0x28
   1aba4:	mov	r3, #8
   1aba8:	str	r3, [sp]
   1abac:	ldr	r3, [fp, #-20]	; 0xffffffec
   1abb0:	bl	1c6e0 <__assert_fail@plt+0xb380>
   1abb4:	str	r0, [fp, #-8]
   1abb8:	movw	r3, #4432	; 0x1150
   1abbc:	movt	r3, #3
   1abc0:	ldr	r2, [fp, #-8]
   1abc4:	str	r2, [r3]
   1abc8:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   1abcc:	cmp	r3, #0
   1abd0:	beq	1abec <__assert_fail@plt+0x988c>
   1abd4:	ldr	r2, [fp, #-8]
   1abd8:	movw	r3, #4424	; 0x1148
   1abdc:	movt	r3, #3
   1abe0:	mov	r1, r2
   1abe4:	ldrd	r2, [r3]
   1abe8:	strd	r2, [r1]
   1abec:	movw	r3, #4420	; 0x1144
   1abf0:	movt	r3, #3
   1abf4:	ldr	r3, [r3]
   1abf8:	lsl	r3, r3, #3
   1abfc:	ldr	r2, [fp, #-8]
   1ac00:	add	r0, r2, r3
   1ac04:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ac08:	movw	r3, #4420	; 0x1144
   1ac0c:	movt	r3, #3
   1ac10:	ldr	r3, [r3]
   1ac14:	sub	r3, r2, r3
   1ac18:	lsl	r3, r3, #3
   1ac1c:	mov	r2, r3
   1ac20:	mov	r1, #0
   1ac24:	bl	11240 <memset@plt>
   1ac28:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ac2c:	movw	r3, #4420	; 0x1144
   1ac30:	movt	r3, #3
   1ac34:	str	r2, [r3]
   1ac38:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ac3c:	lsl	r3, r3, #3
   1ac40:	ldr	r2, [fp, #-8]
   1ac44:	add	r3, r2, r3
   1ac48:	ldr	r3, [r3]
   1ac4c:	str	r3, [fp, #-28]	; 0xffffffe4
   1ac50:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ac54:	lsl	r3, r3, #3
   1ac58:	ldr	r2, [fp, #-8]
   1ac5c:	add	r3, r2, r3
   1ac60:	ldr	r3, [r3, #4]
   1ac64:	str	r3, [fp, #-12]
   1ac68:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1ac6c:	ldr	r3, [r3, #4]
   1ac70:	orr	r3, r3, #1
   1ac74:	str	r3, [fp, #-32]	; 0xffffffe0
   1ac78:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1ac7c:	ldr	r3, [r3]
   1ac80:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1ac84:	add	r2, r2, #8
   1ac88:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1ac8c:	ldr	r1, [r1, #40]	; 0x28
   1ac90:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1ac94:	ldr	r0, [r0, #44]	; 0x2c
   1ac98:	str	r0, [sp, #16]
   1ac9c:	str	r1, [sp, #12]
   1aca0:	str	r2, [sp, #8]
   1aca4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1aca8:	str	r2, [sp, #4]
   1acac:	str	r3, [sp]
   1acb0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1acb4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1acb8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1acbc:	ldr	r0, [fp, #-12]
   1acc0:	bl	19064 <__assert_fail@plt+0x7d04>
   1acc4:	str	r0, [fp, #-36]	; 0xffffffdc
   1acc8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1accc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1acd0:	cmp	r2, r3
   1acd4:	bhi	1ad8c <__assert_fail@plt+0x9a2c>
   1acd8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1acdc:	add	r3, r3, #1
   1ace0:	str	r3, [fp, #-28]	; 0xffffffe4
   1ace4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ace8:	lsl	r3, r3, #3
   1acec:	ldr	r2, [fp, #-8]
   1acf0:	add	r3, r2, r3
   1acf4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1acf8:	str	r2, [r3]
   1acfc:	ldr	r2, [fp, #-12]
   1ad00:	movw	r3, #4612	; 0x1204
   1ad04:	movt	r3, #3
   1ad08:	cmp	r2, r3
   1ad0c:	beq	1ad18 <__assert_fail@plt+0x99b8>
   1ad10:	ldr	r0, [fp, #-12]
   1ad14:	bl	1360c <__assert_fail@plt+0x22ac>
   1ad18:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ad1c:	bl	1c380 <__assert_fail@plt+0xb020>
   1ad20:	mov	r3, r0
   1ad24:	str	r3, [fp, #-12]
   1ad28:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ad2c:	lsl	r3, r3, #3
   1ad30:	ldr	r2, [fp, #-8]
   1ad34:	add	r3, r2, r3
   1ad38:	ldr	r2, [fp, #-12]
   1ad3c:	str	r2, [r3, #4]
   1ad40:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1ad44:	ldr	r3, [r3]
   1ad48:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1ad4c:	add	r2, r2, #8
   1ad50:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1ad54:	ldr	r1, [r1, #40]	; 0x28
   1ad58:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1ad5c:	ldr	r0, [r0, #44]	; 0x2c
   1ad60:	str	r0, [sp, #16]
   1ad64:	str	r1, [sp, #12]
   1ad68:	str	r2, [sp, #8]
   1ad6c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ad70:	str	r2, [sp, #4]
   1ad74:	str	r3, [sp]
   1ad78:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ad7c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1ad80:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ad84:	ldr	r0, [fp, #-12]
   1ad88:	bl	19064 <__assert_fail@plt+0x7d04>
   1ad8c:	bl	11228 <__errno_location@plt>
   1ad90:	mov	r2, r0
   1ad94:	ldr	r3, [fp, #-16]
   1ad98:	str	r3, [r2]
   1ad9c:	ldr	r3, [fp, #-12]
   1ada0:	mov	r0, r3
   1ada4:	sub	sp, fp, #4
   1ada8:	ldr	fp, [sp]
   1adac:	add	sp, sp, #4
   1adb0:	pop	{pc}		; (ldr pc, [sp], #4)
   1adb4:	str	fp, [sp, #-8]!
   1adb8:	str	lr, [sp, #4]
   1adbc:	add	fp, sp, #4
   1adc0:	sub	sp, sp, #8
   1adc4:	str	r0, [fp, #-8]
   1adc8:	str	r1, [fp, #-12]
   1adcc:	movw	r3, #4564	; 0x11d4
   1add0:	movt	r3, #3
   1add4:	mvn	r2, #0
   1add8:	ldr	r1, [fp, #-12]
   1addc:	ldr	r0, [fp, #-8]
   1ade0:	bl	1aac4 <__assert_fail@plt+0x9764>
   1ade4:	mov	r3, r0
   1ade8:	mov	r0, r3
   1adec:	sub	sp, fp, #4
   1adf0:	ldr	fp, [sp]
   1adf4:	add	sp, sp, #4
   1adf8:	pop	{pc}		; (ldr pc, [sp], #4)
   1adfc:	str	fp, [sp, #-8]!
   1ae00:	str	lr, [sp, #4]
   1ae04:	add	fp, sp, #4
   1ae08:	sub	sp, sp, #16
   1ae0c:	str	r0, [fp, #-8]
   1ae10:	str	r1, [fp, #-12]
   1ae14:	str	r2, [fp, #-16]
   1ae18:	movw	r3, #4564	; 0x11d4
   1ae1c:	movt	r3, #3
   1ae20:	ldr	r2, [fp, #-16]
   1ae24:	ldr	r1, [fp, #-12]
   1ae28:	ldr	r0, [fp, #-8]
   1ae2c:	bl	1aac4 <__assert_fail@plt+0x9764>
   1ae30:	mov	r3, r0
   1ae34:	mov	r0, r3
   1ae38:	sub	sp, fp, #4
   1ae3c:	ldr	fp, [sp]
   1ae40:	add	sp, sp, #4
   1ae44:	pop	{pc}		; (ldr pc, [sp], #4)
   1ae48:	str	fp, [sp, #-8]!
   1ae4c:	str	lr, [sp, #4]
   1ae50:	add	fp, sp, #4
   1ae54:	sub	sp, sp, #8
   1ae58:	str	r0, [fp, #-8]
   1ae5c:	ldr	r1, [fp, #-8]
   1ae60:	mov	r0, #0
   1ae64:	bl	1adb4 <__assert_fail@plt+0x9a54>
   1ae68:	mov	r3, r0
   1ae6c:	mov	r0, r3
   1ae70:	sub	sp, fp, #4
   1ae74:	ldr	fp, [sp]
   1ae78:	add	sp, sp, #4
   1ae7c:	pop	{pc}		; (ldr pc, [sp], #4)
   1ae80:	str	fp, [sp, #-8]!
   1ae84:	str	lr, [sp, #4]
   1ae88:	add	fp, sp, #4
   1ae8c:	sub	sp, sp, #8
   1ae90:	str	r0, [fp, #-8]
   1ae94:	str	r1, [fp, #-12]
   1ae98:	ldr	r2, [fp, #-12]
   1ae9c:	ldr	r1, [fp, #-8]
   1aea0:	mov	r0, #0
   1aea4:	bl	1adfc <__assert_fail@plt+0x9a9c>
   1aea8:	mov	r3, r0
   1aeac:	mov	r0, r3
   1aeb0:	sub	sp, fp, #4
   1aeb4:	ldr	fp, [sp]
   1aeb8:	add	sp, sp, #4
   1aebc:	pop	{pc}		; (ldr pc, [sp], #4)
   1aec0:	str	fp, [sp, #-8]!
   1aec4:	str	lr, [sp, #4]
   1aec8:	add	fp, sp, #4
   1aecc:	sub	sp, sp, #64	; 0x40
   1aed0:	str	r0, [fp, #-56]	; 0xffffffc8
   1aed4:	str	r1, [fp, #-60]	; 0xffffffc4
   1aed8:	str	r2, [fp, #-64]	; 0xffffffc0
   1aedc:	sub	r3, fp, #52	; 0x34
   1aee0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1aee4:	mov	r0, r3
   1aee8:	bl	18ec0 <__assert_fail@plt+0x7b60>
   1aeec:	sub	r3, fp, #52	; 0x34
   1aef0:	mvn	r2, #0
   1aef4:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1aef8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1aefc:	bl	1aac4 <__assert_fail@plt+0x9764>
   1af00:	mov	r3, r0
   1af04:	mov	r0, r3
   1af08:	sub	sp, fp, #4
   1af0c:	ldr	fp, [sp]
   1af10:	add	sp, sp, #4
   1af14:	pop	{pc}		; (ldr pc, [sp], #4)
   1af18:	str	fp, [sp, #-8]!
   1af1c:	str	lr, [sp, #4]
   1af20:	add	fp, sp, #4
   1af24:	sub	sp, sp, #64	; 0x40
   1af28:	str	r0, [fp, #-56]	; 0xffffffc8
   1af2c:	str	r1, [fp, #-60]	; 0xffffffc4
   1af30:	str	r2, [fp, #-64]	; 0xffffffc0
   1af34:	str	r3, [fp, #-68]	; 0xffffffbc
   1af38:	sub	r3, fp, #52	; 0x34
   1af3c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1af40:	mov	r0, r3
   1af44:	bl	18ec0 <__assert_fail@plt+0x7b60>
   1af48:	sub	r3, fp, #52	; 0x34
   1af4c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1af50:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1af54:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1af58:	bl	1aac4 <__assert_fail@plt+0x9764>
   1af5c:	mov	r3, r0
   1af60:	mov	r0, r3
   1af64:	sub	sp, fp, #4
   1af68:	ldr	fp, [sp]
   1af6c:	add	sp, sp, #4
   1af70:	pop	{pc}		; (ldr pc, [sp], #4)
   1af74:	str	fp, [sp, #-8]!
   1af78:	str	lr, [sp, #4]
   1af7c:	add	fp, sp, #4
   1af80:	sub	sp, sp, #8
   1af84:	str	r0, [fp, #-8]
   1af88:	str	r1, [fp, #-12]
   1af8c:	ldr	r2, [fp, #-12]
   1af90:	ldr	r1, [fp, #-8]
   1af94:	mov	r0, #0
   1af98:	bl	1aec0 <__assert_fail@plt+0x9b60>
   1af9c:	mov	r3, r0
   1afa0:	mov	r0, r3
   1afa4:	sub	sp, fp, #4
   1afa8:	ldr	fp, [sp]
   1afac:	add	sp, sp, #4
   1afb0:	pop	{pc}		; (ldr pc, [sp], #4)
   1afb4:	str	fp, [sp, #-8]!
   1afb8:	str	lr, [sp, #4]
   1afbc:	add	fp, sp, #4
   1afc0:	sub	sp, sp, #16
   1afc4:	str	r0, [fp, #-8]
   1afc8:	str	r1, [fp, #-12]
   1afcc:	str	r2, [fp, #-16]
   1afd0:	ldr	r3, [fp, #-16]
   1afd4:	ldr	r2, [fp, #-12]
   1afd8:	ldr	r1, [fp, #-8]
   1afdc:	mov	r0, #0
   1afe0:	bl	1af18 <__assert_fail@plt+0x9bb8>
   1afe4:	mov	r3, r0
   1afe8:	mov	r0, r3
   1afec:	sub	sp, fp, #4
   1aff0:	ldr	fp, [sp]
   1aff4:	add	sp, sp, #4
   1aff8:	pop	{pc}		; (ldr pc, [sp], #4)
   1affc:	str	fp, [sp, #-8]!
   1b000:	str	lr, [sp, #4]
   1b004:	add	fp, sp, #4
   1b008:	sub	sp, sp, #64	; 0x40
   1b00c:	str	r0, [fp, #-56]	; 0xffffffc8
   1b010:	str	r1, [fp, #-60]	; 0xffffffc4
   1b014:	mov	r3, r2
   1b018:	strb	r3, [fp, #-61]	; 0xffffffc3
   1b01c:	movw	r2, #4564	; 0x11d4
   1b020:	movt	r2, #3
   1b024:	sub	r3, fp, #52	; 0x34
   1b028:	ldrd	r0, [r2]
   1b02c:	strd	r0, [r3]
   1b030:	ldrd	r0, [r2, #8]
   1b034:	strd	r0, [r3, #8]
   1b038:	ldrd	r0, [r2, #16]
   1b03c:	strd	r0, [r3, #16]
   1b040:	ldrd	r0, [r2, #24]
   1b044:	strd	r0, [r3, #24]
   1b048:	ldrd	r0, [r2, #32]
   1b04c:	strd	r0, [r3, #32]
   1b050:	ldrd	r0, [r2, #40]	; 0x28
   1b054:	strd	r0, [r3, #40]	; 0x28
   1b058:	ldrb	r1, [fp, #-61]	; 0xffffffc3
   1b05c:	sub	r3, fp, #52	; 0x34
   1b060:	mov	r2, #1
   1b064:	mov	r0, r3
   1b068:	bl	18d20 <__assert_fail@plt+0x79c0>
   1b06c:	sub	r3, fp, #52	; 0x34
   1b070:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1b074:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1b078:	mov	r0, #0
   1b07c:	bl	1aac4 <__assert_fail@plt+0x9764>
   1b080:	mov	r3, r0
   1b084:	mov	r0, r3
   1b088:	sub	sp, fp, #4
   1b08c:	ldr	fp, [sp]
   1b090:	add	sp, sp, #4
   1b094:	pop	{pc}		; (ldr pc, [sp], #4)
   1b098:	str	fp, [sp, #-8]!
   1b09c:	str	lr, [sp, #4]
   1b0a0:	add	fp, sp, #4
   1b0a4:	sub	sp, sp, #8
   1b0a8:	str	r0, [fp, #-8]
   1b0ac:	mov	r3, r1
   1b0b0:	strb	r3, [fp, #-9]
   1b0b4:	ldrb	r3, [fp, #-9]
   1b0b8:	mov	r2, r3
   1b0bc:	mvn	r1, #0
   1b0c0:	ldr	r0, [fp, #-8]
   1b0c4:	bl	1affc <__assert_fail@plt+0x9c9c>
   1b0c8:	mov	r3, r0
   1b0cc:	mov	r0, r3
   1b0d0:	sub	sp, fp, #4
   1b0d4:	ldr	fp, [sp]
   1b0d8:	add	sp, sp, #4
   1b0dc:	pop	{pc}		; (ldr pc, [sp], #4)
   1b0e0:	str	fp, [sp, #-8]!
   1b0e4:	str	lr, [sp, #4]
   1b0e8:	add	fp, sp, #4
   1b0ec:	sub	sp, sp, #8
   1b0f0:	str	r0, [fp, #-8]
   1b0f4:	mov	r1, #58	; 0x3a
   1b0f8:	ldr	r0, [fp, #-8]
   1b0fc:	bl	1b098 <__assert_fail@plt+0x9d38>
   1b100:	mov	r3, r0
   1b104:	mov	r0, r3
   1b108:	sub	sp, fp, #4
   1b10c:	ldr	fp, [sp]
   1b110:	add	sp, sp, #4
   1b114:	pop	{pc}		; (ldr pc, [sp], #4)
   1b118:	str	fp, [sp, #-8]!
   1b11c:	str	lr, [sp, #4]
   1b120:	add	fp, sp, #4
   1b124:	sub	sp, sp, #8
   1b128:	str	r0, [fp, #-8]
   1b12c:	str	r1, [fp, #-12]
   1b130:	mov	r2, #58	; 0x3a
   1b134:	ldr	r1, [fp, #-12]
   1b138:	ldr	r0, [fp, #-8]
   1b13c:	bl	1affc <__assert_fail@plt+0x9c9c>
   1b140:	mov	r3, r0
   1b144:	mov	r0, r3
   1b148:	sub	sp, fp, #4
   1b14c:	ldr	fp, [sp]
   1b150:	add	sp, sp, #4
   1b154:	pop	{pc}		; (ldr pc, [sp], #4)
   1b158:	str	fp, [sp, #-8]!
   1b15c:	str	lr, [sp, #4]
   1b160:	add	fp, sp, #4
   1b164:	sub	sp, sp, #112	; 0x70
   1b168:	str	r0, [fp, #-56]	; 0xffffffc8
   1b16c:	str	r1, [fp, #-60]	; 0xffffffc4
   1b170:	str	r2, [fp, #-64]	; 0xffffffc0
   1b174:	sub	r3, fp, #116	; 0x74
   1b178:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1b17c:	mov	r0, r3
   1b180:	bl	18ec0 <__assert_fail@plt+0x7b60>
   1b184:	sub	r3, fp, #52	; 0x34
   1b188:	sub	r2, fp, #116	; 0x74
   1b18c:	ldrd	r0, [r2]
   1b190:	strd	r0, [r3]
   1b194:	ldrd	r0, [r2, #8]
   1b198:	strd	r0, [r3, #8]
   1b19c:	ldrd	r0, [r2, #16]
   1b1a0:	strd	r0, [r3, #16]
   1b1a4:	ldrd	r0, [r2, #24]
   1b1a8:	strd	r0, [r3, #24]
   1b1ac:	ldrd	r0, [r2, #32]
   1b1b0:	strd	r0, [r3, #32]
   1b1b4:	ldrd	r0, [r2, #40]	; 0x28
   1b1b8:	strd	r0, [r3, #40]	; 0x28
   1b1bc:	sub	r3, fp, #52	; 0x34
   1b1c0:	mov	r2, #1
   1b1c4:	mov	r1, #58	; 0x3a
   1b1c8:	mov	r0, r3
   1b1cc:	bl	18d20 <__assert_fail@plt+0x79c0>
   1b1d0:	sub	r3, fp, #52	; 0x34
   1b1d4:	mvn	r2, #0
   1b1d8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1b1dc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b1e0:	bl	1aac4 <__assert_fail@plt+0x9764>
   1b1e4:	mov	r3, r0
   1b1e8:	mov	r0, r3
   1b1ec:	sub	sp, fp, #4
   1b1f0:	ldr	fp, [sp]
   1b1f4:	add	sp, sp, #4
   1b1f8:	pop	{pc}		; (ldr pc, [sp], #4)
   1b1fc:	str	fp, [sp, #-8]!
   1b200:	str	lr, [sp, #4]
   1b204:	add	fp, sp, #4
   1b208:	sub	sp, sp, #24
   1b20c:	str	r0, [fp, #-8]
   1b210:	str	r1, [fp, #-12]
   1b214:	str	r2, [fp, #-16]
   1b218:	str	r3, [fp, #-20]	; 0xffffffec
   1b21c:	mvn	r3, #0
   1b220:	str	r3, [sp]
   1b224:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b228:	ldr	r2, [fp, #-16]
   1b22c:	ldr	r1, [fp, #-12]
   1b230:	ldr	r0, [fp, #-8]
   1b234:	bl	1b250 <__assert_fail@plt+0x9ef0>
   1b238:	mov	r3, r0
   1b23c:	mov	r0, r3
   1b240:	sub	sp, fp, #4
   1b244:	ldr	fp, [sp]
   1b248:	add	sp, sp, #4
   1b24c:	pop	{pc}		; (ldr pc, [sp], #4)
   1b250:	str	fp, [sp, #-8]!
   1b254:	str	lr, [sp, #4]
   1b258:	add	fp, sp, #4
   1b25c:	sub	sp, sp, #64	; 0x40
   1b260:	str	r0, [fp, #-56]	; 0xffffffc8
   1b264:	str	r1, [fp, #-60]	; 0xffffffc4
   1b268:	str	r2, [fp, #-64]	; 0xffffffc0
   1b26c:	str	r3, [fp, #-68]	; 0xffffffbc
   1b270:	movw	r2, #4564	; 0x11d4
   1b274:	movt	r2, #3
   1b278:	sub	r3, fp, #52	; 0x34
   1b27c:	ldrd	r0, [r2]
   1b280:	strd	r0, [r3]
   1b284:	ldrd	r0, [r2, #8]
   1b288:	strd	r0, [r3, #8]
   1b28c:	ldrd	r0, [r2, #16]
   1b290:	strd	r0, [r3, #16]
   1b294:	ldrd	r0, [r2, #24]
   1b298:	strd	r0, [r3, #24]
   1b29c:	ldrd	r0, [r2, #32]
   1b2a0:	strd	r0, [r3, #32]
   1b2a4:	ldrd	r0, [r2, #40]	; 0x28
   1b2a8:	strd	r0, [r3, #40]	; 0x28
   1b2ac:	sub	r3, fp, #52	; 0x34
   1b2b0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b2b4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1b2b8:	mov	r0, r3
   1b2bc:	bl	18e38 <__assert_fail@plt+0x7ad8>
   1b2c0:	sub	r3, fp, #52	; 0x34
   1b2c4:	ldr	r2, [fp, #4]
   1b2c8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1b2cc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b2d0:	bl	1aac4 <__assert_fail@plt+0x9764>
   1b2d4:	mov	r3, r0
   1b2d8:	mov	r0, r3
   1b2dc:	sub	sp, fp, #4
   1b2e0:	ldr	fp, [sp]
   1b2e4:	add	sp, sp, #4
   1b2e8:	pop	{pc}		; (ldr pc, [sp], #4)
   1b2ec:	str	fp, [sp, #-8]!
   1b2f0:	str	lr, [sp, #4]
   1b2f4:	add	fp, sp, #4
   1b2f8:	sub	sp, sp, #16
   1b2fc:	str	r0, [fp, #-8]
   1b300:	str	r1, [fp, #-12]
   1b304:	str	r2, [fp, #-16]
   1b308:	ldr	r3, [fp, #-16]
   1b30c:	ldr	r2, [fp, #-12]
   1b310:	ldr	r1, [fp, #-8]
   1b314:	mov	r0, #0
   1b318:	bl	1b1fc <__assert_fail@plt+0x9e9c>
   1b31c:	mov	r3, r0
   1b320:	mov	r0, r3
   1b324:	sub	sp, fp, #4
   1b328:	ldr	fp, [sp]
   1b32c:	add	sp, sp, #4
   1b330:	pop	{pc}		; (ldr pc, [sp], #4)
   1b334:	str	fp, [sp, #-8]!
   1b338:	str	lr, [sp, #4]
   1b33c:	add	fp, sp, #4
   1b340:	sub	sp, sp, #24
   1b344:	str	r0, [fp, #-8]
   1b348:	str	r1, [fp, #-12]
   1b34c:	str	r2, [fp, #-16]
   1b350:	str	r3, [fp, #-20]	; 0xffffffec
   1b354:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b358:	str	r3, [sp]
   1b35c:	ldr	r3, [fp, #-16]
   1b360:	ldr	r2, [fp, #-12]
   1b364:	ldr	r1, [fp, #-8]
   1b368:	mov	r0, #0
   1b36c:	bl	1b250 <__assert_fail@plt+0x9ef0>
   1b370:	mov	r3, r0
   1b374:	mov	r0, r3
   1b378:	sub	sp, fp, #4
   1b37c:	ldr	fp, [sp]
   1b380:	add	sp, sp, #4
   1b384:	pop	{pc}		; (ldr pc, [sp], #4)
   1b388:	str	fp, [sp, #-8]!
   1b38c:	str	lr, [sp, #4]
   1b390:	add	fp, sp, #4
   1b394:	sub	sp, sp, #16
   1b398:	str	r0, [fp, #-8]
   1b39c:	str	r1, [fp, #-12]
   1b3a0:	str	r2, [fp, #-16]
   1b3a4:	movw	r3, #4436	; 0x1154
   1b3a8:	movt	r3, #3
   1b3ac:	ldr	r2, [fp, #-16]
   1b3b0:	ldr	r1, [fp, #-12]
   1b3b4:	ldr	r0, [fp, #-8]
   1b3b8:	bl	1aac4 <__assert_fail@plt+0x9764>
   1b3bc:	mov	r3, r0
   1b3c0:	mov	r0, r3
   1b3c4:	sub	sp, fp, #4
   1b3c8:	ldr	fp, [sp]
   1b3cc:	add	sp, sp, #4
   1b3d0:	pop	{pc}		; (ldr pc, [sp], #4)
   1b3d4:	str	fp, [sp, #-8]!
   1b3d8:	str	lr, [sp, #4]
   1b3dc:	add	fp, sp, #4
   1b3e0:	sub	sp, sp, #8
   1b3e4:	str	r0, [fp, #-8]
   1b3e8:	str	r1, [fp, #-12]
   1b3ec:	ldr	r2, [fp, #-12]
   1b3f0:	ldr	r1, [fp, #-8]
   1b3f4:	mov	r0, #0
   1b3f8:	bl	1b388 <__assert_fail@plt+0xa028>
   1b3fc:	mov	r3, r0
   1b400:	mov	r0, r3
   1b404:	sub	sp, fp, #4
   1b408:	ldr	fp, [sp]
   1b40c:	add	sp, sp, #4
   1b410:	pop	{pc}		; (ldr pc, [sp], #4)
   1b414:	str	fp, [sp, #-8]!
   1b418:	str	lr, [sp, #4]
   1b41c:	add	fp, sp, #4
   1b420:	sub	sp, sp, #8
   1b424:	str	r0, [fp, #-8]
   1b428:	str	r1, [fp, #-12]
   1b42c:	mvn	r2, #0
   1b430:	ldr	r1, [fp, #-12]
   1b434:	ldr	r0, [fp, #-8]
   1b438:	bl	1b388 <__assert_fail@plt+0xa028>
   1b43c:	mov	r3, r0
   1b440:	mov	r0, r3
   1b444:	sub	sp, fp, #4
   1b448:	ldr	fp, [sp]
   1b44c:	add	sp, sp, #4
   1b450:	pop	{pc}		; (ldr pc, [sp], #4)
   1b454:	str	fp, [sp, #-8]!
   1b458:	str	lr, [sp, #4]
   1b45c:	add	fp, sp, #4
   1b460:	sub	sp, sp, #8
   1b464:	str	r0, [fp, #-8]
   1b468:	ldr	r1, [fp, #-8]
   1b46c:	mov	r0, #0
   1b470:	bl	1b414 <__assert_fail@plt+0xa0b4>
   1b474:	mov	r3, r0
   1b478:	mov	r0, r3
   1b47c:	sub	sp, fp, #4
   1b480:	ldr	fp, [sp]
   1b484:	add	sp, sp, #4
   1b488:	pop	{pc}		; (ldr pc, [sp], #4)
   1b48c:	str	fp, [sp, #-8]!
   1b490:	str	lr, [sp, #4]
   1b494:	add	fp, sp, #4
   1b498:	sub	sp, sp, #112	; 0x70
   1b49c:	str	r0, [fp, #-112]	; 0xffffff90
   1b4a0:	sub	r3, fp, #108	; 0x6c
   1b4a4:	mov	r1, r3
   1b4a8:	movw	r0, #1200	; 0x4b0
   1b4ac:	movt	r0, #2
   1b4b0:	bl	1f124 <__assert_fail@plt+0xddc4>
   1b4b4:	mov	r3, r0
   1b4b8:	cmp	r3, #0
   1b4bc:	beq	1b4c8 <__assert_fail@plt+0xa168>
   1b4c0:	mov	r3, #0
   1b4c4:	b	1b4e4 <__assert_fail@plt+0xa184>
   1b4c8:	ldrd	r2, [fp, #-12]
   1b4cc:	ldr	r1, [fp, #-112]	; 0xffffff90
   1b4d0:	strd	r2, [r1]
   1b4d4:	ldrd	r2, [fp, #-108]	; 0xffffff94
   1b4d8:	ldr	r1, [fp, #-112]	; 0xffffff90
   1b4dc:	strd	r2, [r1, #8]
   1b4e0:	ldr	r3, [fp, #-112]	; 0xffffff90
   1b4e4:	mov	r0, r3
   1b4e8:	sub	sp, fp, #4
   1b4ec:	ldr	fp, [sp]
   1b4f0:	add	sp, sp, #4
   1b4f4:	pop	{pc}		; (ldr pc, [sp], #4)
   1b4f8:	str	fp, [sp, #-8]!
   1b4fc:	str	lr, [sp, #4]
   1b500:	add	fp, sp, #4
   1b504:	sub	sp, sp, #16
   1b508:	str	r0, [fp, #-16]
   1b50c:	ldr	r3, [fp, #-16]
   1b510:	cmp	r3, #0
   1b514:	blt	1b560 <__assert_fail@plt+0xa200>
   1b518:	ldr	r3, [fp, #-16]
   1b51c:	cmp	r3, #2
   1b520:	bgt	1b560 <__assert_fail@plt+0xa200>
   1b524:	ldr	r0, [fp, #-16]
   1b528:	bl	1e774 <__assert_fail@plt+0xd414>
   1b52c:	str	r0, [fp, #-8]
   1b530:	bl	11228 <__errno_location@plt>
   1b534:	mov	r3, r0
   1b538:	ldr	r3, [r3]
   1b53c:	str	r3, [fp, #-12]
   1b540:	ldr	r0, [fp, #-16]
   1b544:	bl	11324 <close@plt>
   1b548:	bl	11228 <__errno_location@plt>
   1b54c:	mov	r2, r0
   1b550:	ldr	r3, [fp, #-12]
   1b554:	str	r3, [r2]
   1b558:	ldr	r3, [fp, #-8]
   1b55c:	str	r3, [fp, #-16]
   1b560:	ldr	r3, [fp, #-16]
   1b564:	mov	r0, r3
   1b568:	sub	sp, fp, #4
   1b56c:	ldr	fp, [sp]
   1b570:	add	sp, sp, #4
   1b574:	pop	{pc}		; (ldr pc, [sp], #4)
   1b578:	str	fp, [sp, #-8]!
   1b57c:	str	lr, [sp, #4]
   1b580:	add	fp, sp, #4
   1b584:	sub	sp, sp, #96	; 0x60
   1b588:	str	r0, [fp, #-80]	; 0xffffffb0
   1b58c:	str	r1, [fp, #-84]	; 0xffffffac
   1b590:	str	r2, [fp, #-88]	; 0xffffffa8
   1b594:	str	r3, [fp, #-92]	; 0xffffffa4
   1b598:	mov	r3, #0
   1b59c:	str	r3, [fp, #-16]
   1b5a0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1b5a4:	ldr	r3, [r3]
   1b5a8:	str	r3, [fp, #-20]	; 0xffffffec
   1b5ac:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1b5b0:	cmp	r3, #0
   1b5b4:	beq	1b5c4 <__assert_fail@plt+0xa264>
   1b5b8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1b5bc:	ldr	r3, [r3]
   1b5c0:	b	1b5c8 <__assert_fail@plt+0xa268>
   1b5c4:	mvn	r3, #0
   1b5c8:	str	r3, [fp, #-24]	; 0xffffffe8
   1b5cc:	mov	r3, #0
   1b5d0:	str	r3, [fp, #-8]
   1b5d4:	ldr	r3, [fp, #4]
   1b5d8:	cmp	r3, #0
   1b5dc:	beq	1b5ec <__assert_fail@plt+0xa28c>
   1b5e0:	ldr	r3, [fp, #4]
   1b5e4:	mov	r2, #0
   1b5e8:	str	r2, [r3]
   1b5ec:	ldr	r3, [fp, #8]
   1b5f0:	cmp	r3, #0
   1b5f4:	beq	1b604 <__assert_fail@plt+0xa2a4>
   1b5f8:	ldr	r3, [fp, #8]
   1b5fc:	mov	r2, #0
   1b600:	str	r2, [r3]
   1b604:	mov	r3, #0
   1b608:	str	r3, [fp, #-12]
   1b60c:	ldr	r3, [fp, #-84]	; 0xffffffac
   1b610:	cmp	r3, #0
   1b614:	bne	1b63c <__assert_fail@plt+0xa2dc>
   1b618:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1b61c:	ldrb	r3, [r3]
   1b620:	cmp	r3, #0
   1b624:	beq	1b688 <__assert_fail@plt+0xa328>
   1b628:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1b62c:	bl	1cb2c <__assert_fail@plt+0xb7cc>
   1b630:	mov	r3, r0
   1b634:	str	r3, [fp, #-12]
   1b638:	b	1b688 <__assert_fail@plt+0xa328>
   1b63c:	ldr	r2, [fp, #-84]	; 0xffffffac
   1b640:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1b644:	sub	r3, r2, r3
   1b648:	str	r3, [fp, #-28]	; 0xffffffe4
   1b64c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b650:	cmp	r3, #0
   1b654:	beq	1b688 <__assert_fail@plt+0xa328>
   1b658:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b65c:	add	r3, r3, #1
   1b660:	mov	r1, r3
   1b664:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1b668:	bl	1ca6c <__assert_fail@plt+0xb70c>
   1b66c:	mov	r3, r0
   1b670:	str	r3, [fp, #-12]
   1b674:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b678:	ldr	r2, [fp, #-12]
   1b67c:	add	r3, r2, r3
   1b680:	mov	r2, #0
   1b684:	strb	r2, [r3]
   1b688:	ldr	r3, [fp, #-84]	; 0xffffffac
   1b68c:	cmp	r3, #0
   1b690:	beq	1b6b4 <__assert_fail@plt+0xa354>
   1b694:	ldr	r3, [fp, #-84]	; 0xffffffac
   1b698:	add	r3, r3, #1
   1b69c:	ldrb	r3, [r3]
   1b6a0:	cmp	r3, #0
   1b6a4:	beq	1b6b4 <__assert_fail@plt+0xa354>
   1b6a8:	ldr	r3, [fp, #-84]	; 0xffffffac
   1b6ac:	add	r3, r3, #1
   1b6b0:	b	1b6b8 <__assert_fail@plt+0xa358>
   1b6b4:	mov	r3, #0
   1b6b8:	str	r3, [fp, #-32]	; 0xffffffe0
   1b6bc:	ldr	r3, [fp, #-12]
   1b6c0:	cmp	r3, #0
   1b6c4:	beq	1b834 <__assert_fail@plt+0xa4d4>
   1b6c8:	ldr	r3, [fp, #-12]
   1b6cc:	ldrb	r3, [r3]
   1b6d0:	cmp	r3, #43	; 0x2b
   1b6d4:	beq	1b6e8 <__assert_fail@plt+0xa388>
   1b6d8:	ldr	r0, [fp, #-12]
   1b6dc:	bl	1103c <getpwnam@plt>
   1b6e0:	mov	r3, r0
   1b6e4:	b	1b6ec <__assert_fail@plt+0xa38c>
   1b6e8:	mov	r3, #0
   1b6ec:	str	r3, [fp, #-36]	; 0xffffffdc
   1b6f0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b6f4:	cmp	r3, #0
   1b6f8:	bne	1b7ac <__assert_fail@plt+0xa44c>
   1b6fc:	ldr	r3, [fp, #-84]	; 0xffffffac
   1b700:	cmp	r3, #0
   1b704:	beq	1b71c <__assert_fail@plt+0xa3bc>
   1b708:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b70c:	cmp	r3, #0
   1b710:	bne	1b71c <__assert_fail@plt+0xa3bc>
   1b714:	mov	r3, #1
   1b718:	b	1b720 <__assert_fail@plt+0xa3c0>
   1b71c:	mov	r3, #0
   1b720:	strb	r3, [fp, #-37]	; 0xffffffdb
   1b724:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   1b728:	and	r3, r3, #1
   1b72c:	strb	r3, [fp, #-37]	; 0xffffffdb
   1b730:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   1b734:	cmp	r3, #0
   1b738:	beq	1b750 <__assert_fail@plt+0xa3f0>
   1b73c:	movw	r3, #4484	; 0x1184
   1b740:	movt	r3, #3
   1b744:	ldr	r3, [r3]
   1b748:	str	r3, [fp, #-8]
   1b74c:	b	1b830 <__assert_fail@plt+0xa4d0>
   1b750:	sub	r2, fp, #48	; 0x30
   1b754:	movw	r3, #1204	; 0x4b4
   1b758:	movt	r3, #2
   1b75c:	str	r3, [sp]
   1b760:	mov	r3, r2
   1b764:	mov	r2, #10
   1b768:	mov	r1, #0
   1b76c:	ldr	r0, [fp, #-12]
   1b770:	bl	1ce00 <__assert_fail@plt+0xbaa0>
   1b774:	mov	r3, r0
   1b778:	cmp	r3, #0
   1b77c:	bne	1b798 <__assert_fail@plt+0xa438>
   1b780:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b784:	cmn	r3, #1
   1b788:	beq	1b798 <__assert_fail@plt+0xa438>
   1b78c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1b790:	str	r3, [fp, #-20]	; 0xffffffec
   1b794:	b	1b830 <__assert_fail@plt+0xa4d0>
   1b798:	movw	r3, #4488	; 0x1188
   1b79c:	movt	r3, #3
   1b7a0:	ldr	r3, [r3]
   1b7a4:	str	r3, [fp, #-8]
   1b7a8:	b	1b830 <__assert_fail@plt+0xa4d0>
   1b7ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b7b0:	ldr	r3, [r3, #8]
   1b7b4:	str	r3, [fp, #-20]	; 0xffffffec
   1b7b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b7bc:	cmp	r3, #0
   1b7c0:	bne	1b830 <__assert_fail@plt+0xa4d0>
   1b7c4:	ldr	r3, [fp, #-84]	; 0xffffffac
   1b7c8:	cmp	r3, #0
   1b7cc:	beq	1b830 <__assert_fail@plt+0xa4d0>
   1b7d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b7d4:	ldr	r3, [r3, #12]
   1b7d8:	str	r3, [fp, #-24]	; 0xffffffe8
   1b7dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b7e0:	bl	11348 <getgrgid@plt>
   1b7e4:	str	r0, [fp, #-44]	; 0xffffffd4
   1b7e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b7ec:	cmp	r3, #0
   1b7f0:	beq	1b800 <__assert_fail@plt+0xa4a0>
   1b7f4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b7f8:	ldr	r3, [r3]
   1b7fc:	b	1b81c <__assert_fail@plt+0xa4bc>
   1b800:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b804:	mov	r0, r3
   1b808:	mov	r1, #0
   1b80c:	sub	r3, fp, #72	; 0x48
   1b810:	mov	r2, r3
   1b814:	bl	18904 <__assert_fail@plt+0x75a4>
   1b818:	mov	r3, r0
   1b81c:	mov	r0, r3
   1b820:	bl	1cb2c <__assert_fail@plt+0xb7cc>
   1b824:	mov	r3, r0
   1b828:	str	r3, [fp, #-16]
   1b82c:	bl	11018 <endgrent@plt>
   1b830:	bl	11288 <endpwent@plt>
   1b834:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b838:	cmp	r3, #0
   1b83c:	beq	1b8fc <__assert_fail@plt+0xa59c>
   1b840:	ldr	r3, [fp, #-8]
   1b844:	cmp	r3, #0
   1b848:	bne	1b8fc <__assert_fail@plt+0xa59c>
   1b84c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b850:	ldrb	r3, [r3]
   1b854:	cmp	r3, #43	; 0x2b
   1b858:	beq	1b86c <__assert_fail@plt+0xa50c>
   1b85c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b860:	bl	11354 <getgrnam@plt>
   1b864:	mov	r3, r0
   1b868:	b	1b870 <__assert_fail@plt+0xa510>
   1b86c:	mov	r3, #0
   1b870:	str	r3, [fp, #-44]	; 0xffffffd4
   1b874:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b878:	cmp	r3, #0
   1b87c:	bne	1b8dc <__assert_fail@plt+0xa57c>
   1b880:	sub	r2, fp, #76	; 0x4c
   1b884:	movw	r3, #1204	; 0x4b4
   1b888:	movt	r3, #2
   1b88c:	str	r3, [sp]
   1b890:	mov	r3, r2
   1b894:	mov	r2, #10
   1b898:	mov	r1, #0
   1b89c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b8a0:	bl	1ce00 <__assert_fail@plt+0xbaa0>
   1b8a4:	mov	r3, r0
   1b8a8:	cmp	r3, #0
   1b8ac:	bne	1b8c8 <__assert_fail@plt+0xa568>
   1b8b0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1b8b4:	cmn	r3, #1
   1b8b8:	beq	1b8c8 <__assert_fail@plt+0xa568>
   1b8bc:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1b8c0:	str	r3, [fp, #-24]	; 0xffffffe8
   1b8c4:	b	1b8e8 <__assert_fail@plt+0xa588>
   1b8c8:	movw	r3, #4492	; 0x118c
   1b8cc:	movt	r3, #3
   1b8d0:	ldr	r3, [r3]
   1b8d4:	str	r3, [fp, #-8]
   1b8d8:	b	1b8e8 <__assert_fail@plt+0xa588>
   1b8dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b8e0:	ldr	r3, [r3, #8]
   1b8e4:	str	r3, [fp, #-24]	; 0xffffffe8
   1b8e8:	bl	11018 <endgrent@plt>
   1b8ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b8f0:	bl	1cb2c <__assert_fail@plt+0xb7cc>
   1b8f4:	mov	r3, r0
   1b8f8:	str	r3, [fp, #-16]
   1b8fc:	ldr	r3, [fp, #-8]
   1b900:	cmp	r3, #0
   1b904:	bne	1b96c <__assert_fail@plt+0xa60c>
   1b908:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1b90c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b910:	str	r2, [r3]
   1b914:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1b918:	cmp	r3, #0
   1b91c:	beq	1b92c <__assert_fail@plt+0xa5cc>
   1b920:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1b924:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b928:	str	r2, [r3]
   1b92c:	ldr	r3, [fp, #4]
   1b930:	cmp	r3, #0
   1b934:	beq	1b94c <__assert_fail@plt+0xa5ec>
   1b938:	ldr	r3, [fp, #4]
   1b93c:	ldr	r2, [fp, #-12]
   1b940:	str	r2, [r3]
   1b944:	mov	r3, #0
   1b948:	str	r3, [fp, #-12]
   1b94c:	ldr	r3, [fp, #8]
   1b950:	cmp	r3, #0
   1b954:	beq	1b96c <__assert_fail@plt+0xa60c>
   1b958:	ldr	r3, [fp, #8]
   1b95c:	ldr	r2, [fp, #-16]
   1b960:	str	r2, [r3]
   1b964:	mov	r3, #0
   1b968:	str	r3, [fp, #-16]
   1b96c:	ldr	r0, [fp, #-12]
   1b970:	bl	1360c <__assert_fail@plt+0x22ac>
   1b974:	ldr	r0, [fp, #-16]
   1b978:	bl	1360c <__assert_fail@plt+0x22ac>
   1b97c:	ldr	r3, [fp, #-8]
   1b980:	cmp	r3, #0
   1b984:	beq	1b998 <__assert_fail@plt+0xa638>
   1b988:	ldr	r0, [fp, #-8]
   1b98c:	bl	111d4 <gettext@plt>
   1b990:	mov	r3, r0
   1b994:	b	1b99c <__assert_fail@plt+0xa63c>
   1b998:	mov	r3, #0
   1b99c:	mov	r0, r3
   1b9a0:	sub	sp, fp, #4
   1b9a4:	ldr	fp, [sp]
   1b9a8:	add	sp, sp, #4
   1b9ac:	pop	{pc}		; (ldr pc, [sp], #4)
   1b9b0:	str	fp, [sp, #-8]!
   1b9b4:	str	lr, [sp, #4]
   1b9b8:	add	fp, sp, #4
   1b9bc:	sub	sp, sp, #40	; 0x28
   1b9c0:	str	r0, [fp, #-24]	; 0xffffffe8
   1b9c4:	str	r1, [fp, #-28]	; 0xffffffe4
   1b9c8:	str	r2, [fp, #-32]	; 0xffffffe0
   1b9cc:	str	r3, [fp, #-36]	; 0xffffffdc
   1b9d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b9d4:	cmp	r3, #0
   1b9d8:	beq	1b9f0 <__assert_fail@plt+0xa690>
   1b9dc:	mov	r1, #58	; 0x3a
   1b9e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b9e4:	bl	111f8 <strchr@plt>
   1b9e8:	mov	r3, r0
   1b9ec:	b	1b9f4 <__assert_fail@plt+0xa694>
   1b9f0:	mov	r3, #0
   1b9f4:	str	r3, [fp, #-12]
   1b9f8:	ldr	r3, [fp, #4]
   1b9fc:	str	r3, [sp, #4]
   1ba00:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ba04:	str	r3, [sp]
   1ba08:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ba0c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1ba10:	ldr	r1, [fp, #-12]
   1ba14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ba18:	bl	1b578 <__assert_fail@plt+0xa218>
   1ba1c:	str	r0, [fp, #-8]
   1ba20:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ba24:	cmp	r3, #0
   1ba28:	beq	1ba98 <__assert_fail@plt+0xa738>
   1ba2c:	ldr	r3, [fp, #-12]
   1ba30:	cmp	r3, #0
   1ba34:	bne	1ba98 <__assert_fail@plt+0xa738>
   1ba38:	ldr	r3, [fp, #-8]
   1ba3c:	cmp	r3, #0
   1ba40:	beq	1ba98 <__assert_fail@plt+0xa738>
   1ba44:	mov	r1, #46	; 0x2e
   1ba48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ba4c:	bl	111f8 <strchr@plt>
   1ba50:	str	r0, [fp, #-16]
   1ba54:	ldr	r3, [fp, #-16]
   1ba58:	cmp	r3, #0
   1ba5c:	beq	1ba98 <__assert_fail@plt+0xa738>
   1ba60:	ldr	r3, [fp, #4]
   1ba64:	str	r3, [sp, #4]
   1ba68:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ba6c:	str	r3, [sp]
   1ba70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ba74:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1ba78:	ldr	r1, [fp, #-16]
   1ba7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ba80:	bl	1b578 <__assert_fail@plt+0xa218>
   1ba84:	mov	r3, r0
   1ba88:	cmp	r3, #0
   1ba8c:	bne	1ba98 <__assert_fail@plt+0xa738>
   1ba90:	mov	r3, #0
   1ba94:	str	r3, [fp, #-8]
   1ba98:	ldr	r3, [fp, #-8]
   1ba9c:	mov	r0, r3
   1baa0:	sub	sp, fp, #4
   1baa4:	ldr	fp, [sp]
   1baa8:	add	sp, sp, #4
   1baac:	pop	{pc}		; (ldr pc, [sp], #4)
   1bab0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1bab4:	strd	r6, [sp, #8]
   1bab8:	str	fp, [sp, #16]
   1babc:	str	lr, [sp, #20]
   1bac0:	add	fp, sp, #20
   1bac4:	sub	sp, sp, #48	; 0x30
   1bac8:	str	r0, [fp, #-24]	; 0xffffffe8
   1bacc:	str	r1, [fp, #-28]	; 0xffffffe4
   1bad0:	str	r2, [fp, #-32]	; 0xffffffe0
   1bad4:	str	r3, [fp, #-36]	; 0xffffffdc
   1bad8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1badc:	cmp	r3, #0
   1bae0:	beq	1bb08 <__assert_fail@plt+0xa7a8>
   1bae4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1bae8:	str	r3, [sp]
   1baec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1baf0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1baf4:	movw	r1, #1256	; 0x4e8
   1baf8:	movt	r1, #2
   1bafc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bb00:	bl	1121c <fprintf@plt>
   1bb04:	b	1bb20 <__assert_fail@plt+0xa7c0>
   1bb08:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1bb0c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1bb10:	movw	r1, #1268	; 0x4f4
   1bb14:	movt	r1, #2
   1bb18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bb1c:	bl	1121c <fprintf@plt>
   1bb20:	movw	r0, #1276	; 0x4fc
   1bb24:	movt	r0, #2
   1bb28:	bl	111d4 <gettext@plt>
   1bb2c:	mov	r2, r0
   1bb30:	movw	r3, #2022	; 0x7e6
   1bb34:	movw	r1, #2060	; 0x80c
   1bb38:	movt	r1, #2
   1bb3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bb40:	bl	1121c <fprintf@plt>
   1bb44:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bb48:	mov	r0, #10
   1bb4c:	bl	110cc <fputc_unlocked@plt>
   1bb50:	movw	r0, #1280	; 0x500
   1bb54:	movt	r0, #2
   1bb58:	bl	111d4 <gettext@plt>
   1bb5c:	mov	r3, r0
   1bb60:	movw	r2, #1452	; 0x5ac
   1bb64:	movt	r2, #2
   1bb68:	mov	r1, r3
   1bb6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bb70:	bl	1121c <fprintf@plt>
   1bb74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bb78:	mov	r0, #10
   1bb7c:	bl	110cc <fputc_unlocked@plt>
   1bb80:	ldr	r3, [fp, #8]
   1bb84:	cmp	r3, #9
   1bb88:	ldrls	pc, [pc, r3, lsl #2]
   1bb8c:	b	1bf6c <__assert_fail@plt+0xac0c>
   1bb90:	andeq	ip, r1, r8, lsl r0
   1bb94:			; <UNDEFINED> instruction: 0x0001bbb8
   1bb98:	andeq	fp, r1, r0, ror #23
   1bb9c:	andeq	fp, r1, r0, lsl ip
   1bba0:	andeq	fp, r1, r4, asr ip
   1bba4:			; <UNDEFINED> instruction: 0x0001bcb0
   1bba8:	andeq	fp, r1, ip, lsl sp
   1bbac:	muleq	r1, r8, sp
   1bbb0:	andeq	fp, r1, r4, lsr #28
   1bbb4:	andeq	fp, r1, r0, asr #29
   1bbb8:	movw	r0, #1488	; 0x5d0
   1bbbc:	movt	r0, #2
   1bbc0:	bl	111d4 <gettext@plt>
   1bbc4:	mov	r1, r0
   1bbc8:	ldr	r3, [fp, #4]
   1bbcc:	ldr	r3, [r3]
   1bbd0:	mov	r2, r3
   1bbd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bbd8:	bl	1121c <fprintf@plt>
   1bbdc:	b	1c01c <__assert_fail@plt+0xacbc>
   1bbe0:	movw	r0, #1504	; 0x5e0
   1bbe4:	movt	r0, #2
   1bbe8:	bl	111d4 <gettext@plt>
   1bbec:	mov	r1, r0
   1bbf0:	ldr	r3, [fp, #4]
   1bbf4:	ldr	r2, [r3]
   1bbf8:	ldr	r3, [fp, #4]
   1bbfc:	add	r3, r3, #4
   1bc00:	ldr	r3, [r3]
   1bc04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bc08:	bl	1121c <fprintf@plt>
   1bc0c:	b	1c01c <__assert_fail@plt+0xacbc>
   1bc10:	movw	r0, #1528	; 0x5f8
   1bc14:	movt	r0, #2
   1bc18:	bl	111d4 <gettext@plt>
   1bc1c:	ldr	r3, [fp, #4]
   1bc20:	ldr	r2, [r3]
   1bc24:	ldr	r3, [fp, #4]
   1bc28:	add	r3, r3, #4
   1bc2c:	ldr	r1, [r3]
   1bc30:	ldr	r3, [fp, #4]
   1bc34:	add	r3, r3, #8
   1bc38:	ldr	r3, [r3]
   1bc3c:	str	r3, [sp]
   1bc40:	mov	r3, r1
   1bc44:	mov	r1, r0
   1bc48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bc4c:	bl	1121c <fprintf@plt>
   1bc50:	b	1c01c <__assert_fail@plt+0xacbc>
   1bc54:	movw	r0, #1556	; 0x614
   1bc58:	movt	r0, #2
   1bc5c:	bl	111d4 <gettext@plt>
   1bc60:	mov	ip, r0
   1bc64:	ldr	r3, [fp, #4]
   1bc68:	ldr	r1, [r3]
   1bc6c:	ldr	r3, [fp, #4]
   1bc70:	add	r3, r3, #4
   1bc74:	ldr	r0, [r3]
   1bc78:	ldr	r3, [fp, #4]
   1bc7c:	add	r3, r3, #8
   1bc80:	ldr	r3, [r3]
   1bc84:	ldr	r2, [fp, #4]
   1bc88:	add	r2, r2, #12
   1bc8c:	ldr	r2, [r2]
   1bc90:	str	r2, [sp, #4]
   1bc94:	str	r3, [sp]
   1bc98:	mov	r3, r0
   1bc9c:	mov	r2, r1
   1bca0:	mov	r1, ip
   1bca4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bca8:	bl	1121c <fprintf@plt>
   1bcac:	b	1c01c <__assert_fail@plt+0xacbc>
   1bcb0:	movw	r0, #1588	; 0x634
   1bcb4:	movt	r0, #2
   1bcb8:	bl	111d4 <gettext@plt>
   1bcbc:	mov	lr, r0
   1bcc0:	ldr	r3, [fp, #4]
   1bcc4:	ldr	r0, [r3]
   1bcc8:	ldr	r3, [fp, #4]
   1bccc:	add	r3, r3, #4
   1bcd0:	ldr	ip, [r3]
   1bcd4:	ldr	r3, [fp, #4]
   1bcd8:	add	r3, r3, #8
   1bcdc:	ldr	r3, [r3]
   1bce0:	ldr	r2, [fp, #4]
   1bce4:	add	r2, r2, #12
   1bce8:	ldr	r2, [r2]
   1bcec:	ldr	r1, [fp, #4]
   1bcf0:	add	r1, r1, #16
   1bcf4:	ldr	r1, [r1]
   1bcf8:	str	r1, [sp, #8]
   1bcfc:	str	r2, [sp, #4]
   1bd00:	str	r3, [sp]
   1bd04:	mov	r3, ip
   1bd08:	mov	r2, r0
   1bd0c:	mov	r1, lr
   1bd10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bd14:	bl	1121c <fprintf@plt>
   1bd18:	b	1c01c <__assert_fail@plt+0xacbc>
   1bd1c:	movw	r0, #1624	; 0x658
   1bd20:	movt	r0, #2
   1bd24:	bl	111d4 <gettext@plt>
   1bd28:	mov	r4, r0
   1bd2c:	ldr	r3, [fp, #4]
   1bd30:	ldr	ip, [r3]
   1bd34:	ldr	r3, [fp, #4]
   1bd38:	add	r3, r3, #4
   1bd3c:	ldr	lr, [r3]
   1bd40:	ldr	r3, [fp, #4]
   1bd44:	add	r3, r3, #8
   1bd48:	ldr	r3, [r3]
   1bd4c:	ldr	r2, [fp, #4]
   1bd50:	add	r2, r2, #12
   1bd54:	ldr	r2, [r2]
   1bd58:	ldr	r1, [fp, #4]
   1bd5c:	add	r1, r1, #16
   1bd60:	ldr	r1, [r1]
   1bd64:	ldr	r0, [fp, #4]
   1bd68:	add	r0, r0, #20
   1bd6c:	ldr	r0, [r0]
   1bd70:	str	r0, [sp, #12]
   1bd74:	str	r1, [sp, #8]
   1bd78:	str	r2, [sp, #4]
   1bd7c:	str	r3, [sp]
   1bd80:	mov	r3, lr
   1bd84:	mov	r2, ip
   1bd88:	mov	r1, r4
   1bd8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bd90:	bl	1121c <fprintf@plt>
   1bd94:	b	1c01c <__assert_fail@plt+0xacbc>
   1bd98:	movw	r0, #1664	; 0x680
   1bd9c:	movt	r0, #2
   1bda0:	bl	111d4 <gettext@plt>
   1bda4:	mov	r5, r0
   1bda8:	ldr	r3, [fp, #4]
   1bdac:	ldr	lr, [r3]
   1bdb0:	ldr	r3, [fp, #4]
   1bdb4:	add	r3, r3, #4
   1bdb8:	ldr	r4, [r3]
   1bdbc:	ldr	r3, [fp, #4]
   1bdc0:	add	r3, r3, #8
   1bdc4:	ldr	r3, [r3]
   1bdc8:	ldr	r2, [fp, #4]
   1bdcc:	add	r2, r2, #12
   1bdd0:	ldr	r2, [r2]
   1bdd4:	ldr	r1, [fp, #4]
   1bdd8:	add	r1, r1, #16
   1bddc:	ldr	r1, [r1]
   1bde0:	ldr	r0, [fp, #4]
   1bde4:	add	r0, r0, #20
   1bde8:	ldr	r0, [r0]
   1bdec:	ldr	ip, [fp, #4]
   1bdf0:	add	ip, ip, #24
   1bdf4:	ldr	ip, [ip]
   1bdf8:	str	ip, [sp, #16]
   1bdfc:	str	r0, [sp, #12]
   1be00:	str	r1, [sp, #8]
   1be04:	str	r2, [sp, #4]
   1be08:	str	r3, [sp]
   1be0c:	mov	r3, r4
   1be10:	mov	r2, lr
   1be14:	mov	r1, r5
   1be18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1be1c:	bl	1121c <fprintf@plt>
   1be20:	b	1c01c <__assert_fail@plt+0xacbc>
   1be24:	movw	r0, #1708	; 0x6ac
   1be28:	movt	r0, #2
   1be2c:	bl	111d4 <gettext@plt>
   1be30:	mov	r6, r0
   1be34:	ldr	r3, [fp, #4]
   1be38:	ldr	r4, [r3]
   1be3c:	ldr	r3, [fp, #4]
   1be40:	add	r3, r3, #4
   1be44:	ldr	r5, [r3]
   1be48:	ldr	r3, [fp, #4]
   1be4c:	add	r3, r3, #8
   1be50:	ldr	r3, [r3]
   1be54:	ldr	r2, [fp, #4]
   1be58:	add	r2, r2, #12
   1be5c:	ldr	r2, [r2]
   1be60:	ldr	r1, [fp, #4]
   1be64:	add	r1, r1, #16
   1be68:	ldr	r1, [r1]
   1be6c:	ldr	r0, [fp, #4]
   1be70:	add	r0, r0, #20
   1be74:	ldr	r0, [r0]
   1be78:	ldr	ip, [fp, #4]
   1be7c:	add	ip, ip, #24
   1be80:	ldr	ip, [ip]
   1be84:	ldr	lr, [fp, #4]
   1be88:	add	lr, lr, #28
   1be8c:	ldr	lr, [lr]
   1be90:	str	lr, [sp, #20]
   1be94:	str	ip, [sp, #16]
   1be98:	str	r0, [sp, #12]
   1be9c:	str	r1, [sp, #8]
   1bea0:	str	r2, [sp, #4]
   1bea4:	str	r3, [sp]
   1bea8:	mov	r3, r5
   1beac:	mov	r2, r4
   1beb0:	mov	r1, r6
   1beb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1beb8:	bl	1121c <fprintf@plt>
   1bebc:	b	1c01c <__assert_fail@plt+0xacbc>
   1bec0:	movw	r0, #1756	; 0x6dc
   1bec4:	movt	r0, #2
   1bec8:	bl	111d4 <gettext@plt>
   1becc:	mov	r7, r0
   1bed0:	ldr	r3, [fp, #4]
   1bed4:	ldr	r5, [r3]
   1bed8:	ldr	r3, [fp, #4]
   1bedc:	add	r3, r3, #4
   1bee0:	ldr	r6, [r3]
   1bee4:	ldr	r3, [fp, #4]
   1bee8:	add	r3, r3, #8
   1beec:	ldr	r3, [r3]
   1bef0:	ldr	r2, [fp, #4]
   1bef4:	add	r2, r2, #12
   1bef8:	ldr	r2, [r2]
   1befc:	ldr	r1, [fp, #4]
   1bf00:	add	r1, r1, #16
   1bf04:	ldr	r1, [r1]
   1bf08:	ldr	r0, [fp, #4]
   1bf0c:	add	r0, r0, #20
   1bf10:	ldr	r0, [r0]
   1bf14:	ldr	ip, [fp, #4]
   1bf18:	add	ip, ip, #24
   1bf1c:	ldr	ip, [ip]
   1bf20:	ldr	lr, [fp, #4]
   1bf24:	add	lr, lr, #28
   1bf28:	ldr	lr, [lr]
   1bf2c:	ldr	r4, [fp, #4]
   1bf30:	add	r4, r4, #32
   1bf34:	ldr	r4, [r4]
   1bf38:	str	r4, [sp, #24]
   1bf3c:	str	lr, [sp, #20]
   1bf40:	str	ip, [sp, #16]
   1bf44:	str	r0, [sp, #12]
   1bf48:	str	r1, [sp, #8]
   1bf4c:	str	r2, [sp, #4]
   1bf50:	str	r3, [sp]
   1bf54:	mov	r3, r6
   1bf58:	mov	r2, r5
   1bf5c:	mov	r1, r7
   1bf60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bf64:	bl	1121c <fprintf@plt>
   1bf68:	b	1c01c <__assert_fail@plt+0xacbc>
   1bf6c:	movw	r0, #1808	; 0x710
   1bf70:	movt	r0, #2
   1bf74:	bl	111d4 <gettext@plt>
   1bf78:	mov	r7, r0
   1bf7c:	ldr	r3, [fp, #4]
   1bf80:	ldr	r5, [r3]
   1bf84:	ldr	r3, [fp, #4]
   1bf88:	add	r3, r3, #4
   1bf8c:	ldr	r6, [r3]
   1bf90:	ldr	r3, [fp, #4]
   1bf94:	add	r3, r3, #8
   1bf98:	ldr	r3, [r3]
   1bf9c:	ldr	r2, [fp, #4]
   1bfa0:	add	r2, r2, #12
   1bfa4:	ldr	r2, [r2]
   1bfa8:	ldr	r1, [fp, #4]
   1bfac:	add	r1, r1, #16
   1bfb0:	ldr	r1, [r1]
   1bfb4:	ldr	r0, [fp, #4]
   1bfb8:	add	r0, r0, #20
   1bfbc:	ldr	r0, [r0]
   1bfc0:	ldr	ip, [fp, #4]
   1bfc4:	add	ip, ip, #24
   1bfc8:	ldr	ip, [ip]
   1bfcc:	ldr	lr, [fp, #4]
   1bfd0:	add	lr, lr, #28
   1bfd4:	ldr	lr, [lr]
   1bfd8:	ldr	r4, [fp, #4]
   1bfdc:	add	r4, r4, #32
   1bfe0:	ldr	r4, [r4]
   1bfe4:	str	r4, [sp, #24]
   1bfe8:	str	lr, [sp, #20]
   1bfec:	str	ip, [sp, #16]
   1bff0:	str	r0, [sp, #12]
   1bff4:	str	r1, [sp, #8]
   1bff8:	str	r2, [sp, #4]
   1bffc:	str	r3, [sp]
   1c000:	mov	r3, r6
   1c004:	mov	r2, r5
   1c008:	mov	r1, r7
   1c00c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c010:	bl	1121c <fprintf@plt>
   1c014:	b	1c01c <__assert_fail@plt+0xacbc>
   1c018:	nop	{0}
   1c01c:	nop	{0}
   1c020:	sub	sp, fp, #20
   1c024:	ldrd	r4, [sp]
   1c028:	ldrd	r6, [sp, #8]
   1c02c:	ldr	fp, [sp, #16]
   1c030:	add	sp, sp, #20
   1c034:	pop	{pc}		; (ldr pc, [sp], #4)
   1c038:	str	fp, [sp, #-8]!
   1c03c:	str	lr, [sp, #4]
   1c040:	add	fp, sp, #4
   1c044:	sub	sp, sp, #32
   1c048:	str	r0, [fp, #-16]
   1c04c:	str	r1, [fp, #-20]	; 0xffffffec
   1c050:	str	r2, [fp, #-24]	; 0xffffffe8
   1c054:	str	r3, [fp, #-28]	; 0xffffffe4
   1c058:	mov	r3, #0
   1c05c:	str	r3, [fp, #-8]
   1c060:	b	1c070 <__assert_fail@plt+0xad10>
   1c064:	ldr	r3, [fp, #-8]
   1c068:	add	r3, r3, #1
   1c06c:	str	r3, [fp, #-8]
   1c070:	ldr	r3, [fp, #-8]
   1c074:	lsl	r3, r3, #2
   1c078:	ldr	r2, [fp, #4]
   1c07c:	add	r3, r2, r3
   1c080:	ldr	r3, [r3]
   1c084:	cmp	r3, #0
   1c088:	bne	1c064 <__assert_fail@plt+0xad04>
   1c08c:	ldr	r3, [fp, #-8]
   1c090:	str	r3, [sp, #4]
   1c094:	ldr	r3, [fp, #4]
   1c098:	str	r3, [sp]
   1c09c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c0a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c0a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c0a8:	ldr	r0, [fp, #-16]
   1c0ac:	bl	1bab0 <__assert_fail@plt+0xa750>
   1c0b0:	nop	{0}
   1c0b4:	sub	sp, fp, #4
   1c0b8:	ldr	fp, [sp]
   1c0bc:	add	sp, sp, #4
   1c0c0:	pop	{pc}		; (ldr pc, [sp], #4)
   1c0c4:	str	fp, [sp, #-8]!
   1c0c8:	str	lr, [sp, #4]
   1c0cc:	add	fp, sp, #4
   1c0d0:	sub	sp, sp, #72	; 0x48
   1c0d4:	str	r0, [fp, #-56]	; 0xffffffc8
   1c0d8:	str	r1, [fp, #-60]	; 0xffffffc4
   1c0dc:	str	r2, [fp, #-64]	; 0xffffffc0
   1c0e0:	str	r3, [fp, #-68]	; 0xffffffbc
   1c0e4:	mov	r3, #0
   1c0e8:	str	r3, [fp, #-8]
   1c0ec:	b	1c0fc <__assert_fail@plt+0xad9c>
   1c0f0:	ldr	r3, [fp, #-8]
   1c0f4:	add	r3, r3, #1
   1c0f8:	str	r3, [fp, #-8]
   1c0fc:	ldr	r3, [fp, #-8]
   1c100:	cmp	r3, #9
   1c104:	bhi	1c148 <__assert_fail@plt+0xade8>
   1c108:	ldr	r3, [fp, #4]
   1c10c:	add	r2, r3, #4
   1c110:	str	r2, [fp, #4]
   1c114:	ldr	r2, [r3]
   1c118:	ldr	r3, [fp, #-8]
   1c11c:	lsl	r3, r3, #2
   1c120:	sub	r1, fp, #4
   1c124:	add	r3, r1, r3
   1c128:	str	r2, [r3, #-44]	; 0xffffffd4
   1c12c:	ldr	r3, [fp, #-8]
   1c130:	lsl	r3, r3, #2
   1c134:	sub	r2, fp, #4
   1c138:	add	r3, r2, r3
   1c13c:	ldr	r3, [r3, #-44]	; 0xffffffd4
   1c140:	cmp	r3, #0
   1c144:	bne	1c0f0 <__assert_fail@plt+0xad90>
   1c148:	ldr	r3, [fp, #-8]
   1c14c:	str	r3, [sp, #4]
   1c150:	sub	r3, fp, #48	; 0x30
   1c154:	str	r3, [sp]
   1c158:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1c15c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1c160:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1c164:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1c168:	bl	1bab0 <__assert_fail@plt+0xa750>
   1c16c:	nop	{0}
   1c170:	sub	sp, fp, #4
   1c174:	ldr	fp, [sp]
   1c178:	add	sp, sp, #4
   1c17c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c180:	push	{r3}		; (str r3, [sp, #-4]!)
   1c184:	str	fp, [sp, #-8]!
   1c188:	str	lr, [sp, #4]
   1c18c:	add	fp, sp, #4
   1c190:	sub	sp, sp, #36	; 0x24
   1c194:	str	r0, [fp, #-20]	; 0xffffffec
   1c198:	str	r1, [fp, #-24]	; 0xffffffe8
   1c19c:	str	r2, [fp, #-28]	; 0xffffffe4
   1c1a0:	add	r3, fp, #8
   1c1a4:	str	r3, [fp, #-12]
   1c1a8:	ldr	r3, [fp, #-12]
   1c1ac:	str	r3, [sp]
   1c1b0:	ldr	r3, [fp, #4]
   1c1b4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c1b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c1bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c1c0:	bl	1c0c4 <__assert_fail@plt+0xad64>
   1c1c4:	nop	{0}
   1c1c8:	sub	sp, fp, #4
   1c1cc:	ldr	fp, [sp]
   1c1d0:	ldr	lr, [sp, #4]
   1c1d4:	add	sp, sp, #8
   1c1d8:	add	sp, sp, #4
   1c1dc:	bx	lr
   1c1e0:	str	fp, [sp, #-8]!
   1c1e4:	str	lr, [sp, #4]
   1c1e8:	add	fp, sp, #4
   1c1ec:	movw	r3, #4516	; 0x11a4
   1c1f0:	movt	r3, #3
   1c1f4:	ldr	r3, [r3]
   1c1f8:	mov	r1, r3
   1c1fc:	mov	r0, #10
   1c200:	bl	110cc <fputc_unlocked@plt>
   1c204:	movw	r0, #1868	; 0x74c
   1c208:	movt	r0, #2
   1c20c:	bl	111d4 <gettext@plt>
   1c210:	mov	r3, r0
   1c214:	movw	r1, #1888	; 0x760
   1c218:	movt	r1, #2
   1c21c:	mov	r0, r3
   1c220:	bl	11060 <printf@plt>
   1c224:	movw	r0, #1912	; 0x778
   1c228:	movt	r0, #2
   1c22c:	bl	111d4 <gettext@plt>
   1c230:	mov	r3, r0
   1c234:	movw	r2, #1932	; 0x78c
   1c238:	movt	r2, #2
   1c23c:	movw	r1, #1972	; 0x7b4
   1c240:	movt	r1, #2
   1c244:	mov	r0, r3
   1c248:	bl	11060 <printf@plt>
   1c24c:	movw	r0, #1988	; 0x7c4
   1c250:	movt	r0, #2
   1c254:	bl	111d4 <gettext@plt>
   1c258:	mov	r3, r0
   1c25c:	movw	r1, #2028	; 0x7ec
   1c260:	movt	r1, #2
   1c264:	mov	r0, r3
   1c268:	bl	11060 <printf@plt>
   1c26c:	nop	{0}
   1c270:	sub	sp, fp, #4
   1c274:	ldr	fp, [sp]
   1c278:	add	sp, sp, #4
   1c27c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c280:	str	fp, [sp, #-8]!
   1c284:	str	lr, [sp, #4]
   1c288:	add	fp, sp, #4
   1c28c:	sub	sp, sp, #16
   1c290:	str	r0, [fp, #-8]
   1c294:	str	r1, [fp, #-12]
   1c298:	str	r2, [fp, #-16]
   1c29c:	ldr	r2, [fp, #-16]
   1c2a0:	ldr	r1, [fp, #-12]
   1c2a4:	ldr	r0, [fp, #-8]
   1c2a8:	bl	1c464 <__assert_fail@plt+0xb104>
   1c2ac:	mov	r3, r0
   1c2b0:	mov	r0, r3
   1c2b4:	sub	sp, fp, #4
   1c2b8:	ldr	fp, [sp]
   1c2bc:	add	sp, sp, #4
   1c2c0:	pop	{pc}		; (ldr pc, [sp], #4)
   1c2c4:	str	fp, [sp, #-8]!
   1c2c8:	str	lr, [sp, #4]
   1c2cc:	add	fp, sp, #4
   1c2d0:	sub	sp, sp, #8
   1c2d4:	str	r0, [fp, #-8]
   1c2d8:	ldr	r3, [fp, #-8]
   1c2dc:	cmp	r3, #0
   1c2e0:	bne	1c2e8 <__assert_fail@plt+0xaf88>
   1c2e4:	bl	1cb74 <__assert_fail@plt+0xb814>
   1c2e8:	ldr	r3, [fp, #-8]
   1c2ec:	mov	r0, r3
   1c2f0:	sub	sp, fp, #4
   1c2f4:	ldr	fp, [sp]
   1c2f8:	add	sp, sp, #4
   1c2fc:	pop	{pc}		; (ldr pc, [sp], #4)
   1c300:	str	fp, [sp, #-8]!
   1c304:	str	lr, [sp, #4]
   1c308:	add	fp, sp, #4
   1c30c:	sub	sp, sp, #8
   1c310:	str	r0, [fp, #-8]
   1c314:	ldr	r0, [fp, #-8]
   1c318:	bl	1d51c <__assert_fail@plt+0xc1bc>
   1c31c:	mov	r3, r0
   1c320:	mov	r0, r3
   1c324:	bl	1c2c4 <__assert_fail@plt+0xaf64>
   1c328:	mov	r3, r0
   1c32c:	mov	r0, r3
   1c330:	sub	sp, fp, #4
   1c334:	ldr	fp, [sp]
   1c338:	add	sp, sp, #4
   1c33c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c340:	str	fp, [sp, #-8]!
   1c344:	str	lr, [sp, #4]
   1c348:	add	fp, sp, #4
   1c34c:	sub	sp, sp, #8
   1c350:	str	r0, [fp, #-8]
   1c354:	ldr	r0, [fp, #-8]
   1c358:	bl	1e468 <__assert_fail@plt+0xd108>
   1c35c:	mov	r3, r0
   1c360:	mov	r0, r3
   1c364:	bl	1c2c4 <__assert_fail@plt+0xaf64>
   1c368:	mov	r3, r0
   1c36c:	mov	r0, r3
   1c370:	sub	sp, fp, #4
   1c374:	ldr	fp, [sp]
   1c378:	add	sp, sp, #4
   1c37c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c380:	str	fp, [sp, #-8]!
   1c384:	str	lr, [sp, #4]
   1c388:	add	fp, sp, #4
   1c38c:	sub	sp, sp, #8
   1c390:	str	r0, [fp, #-8]
   1c394:	ldr	r0, [fp, #-8]
   1c398:	bl	1c300 <__assert_fail@plt+0xafa0>
   1c39c:	mov	r3, r0
   1c3a0:	mov	r0, r3
   1c3a4:	sub	sp, fp, #4
   1c3a8:	ldr	fp, [sp]
   1c3ac:	add	sp, sp, #4
   1c3b0:	pop	{pc}		; (ldr pc, [sp], #4)
   1c3b4:	str	fp, [sp, #-8]!
   1c3b8:	str	lr, [sp, #4]
   1c3bc:	add	fp, sp, #4
   1c3c0:	sub	sp, sp, #16
   1c3c4:	str	r0, [fp, #-16]
   1c3c8:	str	r1, [fp, #-20]	; 0xffffffec
   1c3cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c3d0:	ldr	r0, [fp, #-16]
   1c3d4:	bl	1d5ac <__assert_fail@plt+0xc24c>
   1c3d8:	str	r0, [fp, #-8]
   1c3dc:	ldr	r3, [fp, #-8]
   1c3e0:	cmp	r3, #0
   1c3e4:	bne	1c404 <__assert_fail@plt+0xb0a4>
   1c3e8:	ldr	r3, [fp, #-16]
   1c3ec:	cmp	r3, #0
   1c3f0:	beq	1c400 <__assert_fail@plt+0xb0a0>
   1c3f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c3f8:	cmp	r3, #0
   1c3fc:	beq	1c404 <__assert_fail@plt+0xb0a4>
   1c400:	bl	1cb74 <__assert_fail@plt+0xb814>
   1c404:	ldr	r3, [fp, #-8]
   1c408:	mov	r0, r3
   1c40c:	sub	sp, fp, #4
   1c410:	ldr	fp, [sp]
   1c414:	add	sp, sp, #4
   1c418:	pop	{pc}		; (ldr pc, [sp], #4)
   1c41c:	str	fp, [sp, #-8]!
   1c420:	str	lr, [sp, #4]
   1c424:	add	fp, sp, #4
   1c428:	sub	sp, sp, #8
   1c42c:	str	r0, [fp, #-8]
   1c430:	str	r1, [fp, #-12]
   1c434:	ldr	r1, [fp, #-12]
   1c438:	ldr	r0, [fp, #-8]
   1c43c:	bl	1e4a0 <__assert_fail@plt+0xd140>
   1c440:	mov	r3, r0
   1c444:	mov	r0, r3
   1c448:	bl	1c2c4 <__assert_fail@plt+0xaf64>
   1c44c:	mov	r3, r0
   1c450:	mov	r0, r3
   1c454:	sub	sp, fp, #4
   1c458:	ldr	fp, [sp]
   1c45c:	add	sp, sp, #4
   1c460:	pop	{pc}		; (ldr pc, [sp], #4)
   1c464:	str	fp, [sp, #-8]!
   1c468:	str	lr, [sp, #4]
   1c46c:	add	fp, sp, #4
   1c470:	sub	sp, sp, #24
   1c474:	str	r0, [fp, #-16]
   1c478:	str	r1, [fp, #-20]	; 0xffffffec
   1c47c:	str	r2, [fp, #-24]	; 0xffffffe8
   1c480:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c484:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c488:	ldr	r0, [fp, #-16]
   1c48c:	bl	1e6d0 <__assert_fail@plt+0xd370>
   1c490:	str	r0, [fp, #-8]
   1c494:	ldr	r3, [fp, #-8]
   1c498:	cmp	r3, #0
   1c49c:	bne	1c4c8 <__assert_fail@plt+0xb168>
   1c4a0:	ldr	r3, [fp, #-16]
   1c4a4:	cmp	r3, #0
   1c4a8:	beq	1c4c4 <__assert_fail@plt+0xb164>
   1c4ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c4b0:	cmp	r3, #0
   1c4b4:	beq	1c4c8 <__assert_fail@plt+0xb168>
   1c4b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c4bc:	cmp	r3, #0
   1c4c0:	beq	1c4c8 <__assert_fail@plt+0xb168>
   1c4c4:	bl	1cb74 <__assert_fail@plt+0xb814>
   1c4c8:	ldr	r3, [fp, #-8]
   1c4cc:	mov	r0, r3
   1c4d0:	sub	sp, fp, #4
   1c4d4:	ldr	fp, [sp]
   1c4d8:	add	sp, sp, #4
   1c4dc:	pop	{pc}		; (ldr pc, [sp], #4)
   1c4e0:	str	fp, [sp, #-8]!
   1c4e4:	str	lr, [sp, #4]
   1c4e8:	add	fp, sp, #4
   1c4ec:	sub	sp, sp, #16
   1c4f0:	str	r0, [fp, #-8]
   1c4f4:	str	r1, [fp, #-12]
   1c4f8:	str	r2, [fp, #-16]
   1c4fc:	ldr	r2, [fp, #-16]
   1c500:	ldr	r1, [fp, #-12]
   1c504:	ldr	r0, [fp, #-8]
   1c508:	bl	1e540 <__assert_fail@plt+0xd1e0>
   1c50c:	mov	r3, r0
   1c510:	mov	r0, r3
   1c514:	bl	1c2c4 <__assert_fail@plt+0xaf64>
   1c518:	mov	r3, r0
   1c51c:	mov	r0, r3
   1c520:	sub	sp, fp, #4
   1c524:	ldr	fp, [sp]
   1c528:	add	sp, sp, #4
   1c52c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c530:	str	fp, [sp, #-8]!
   1c534:	str	lr, [sp, #4]
   1c538:	add	fp, sp, #4
   1c53c:	sub	sp, sp, #8
   1c540:	str	r0, [fp, #-8]
   1c544:	str	r1, [fp, #-12]
   1c548:	ldr	r2, [fp, #-12]
   1c54c:	ldr	r1, [fp, #-8]
   1c550:	mov	r0, #0
   1c554:	bl	1c464 <__assert_fail@plt+0xb104>
   1c558:	mov	r3, r0
   1c55c:	mov	r0, r3
   1c560:	sub	sp, fp, #4
   1c564:	ldr	fp, [sp]
   1c568:	add	sp, sp, #4
   1c56c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c570:	str	fp, [sp, #-8]!
   1c574:	str	lr, [sp, #4]
   1c578:	add	fp, sp, #4
   1c57c:	sub	sp, sp, #8
   1c580:	str	r0, [fp, #-8]
   1c584:	str	r1, [fp, #-12]
   1c588:	ldr	r2, [fp, #-12]
   1c58c:	ldr	r1, [fp, #-8]
   1c590:	mov	r0, #0
   1c594:	bl	1c4e0 <__assert_fail@plt+0xb180>
   1c598:	mov	r3, r0
   1c59c:	mov	r0, r3
   1c5a0:	sub	sp, fp, #4
   1c5a4:	ldr	fp, [sp]
   1c5a8:	add	sp, sp, #4
   1c5ac:	pop	{pc}		; (ldr pc, [sp], #4)
   1c5b0:	str	fp, [sp, #-8]!
   1c5b4:	str	lr, [sp, #4]
   1c5b8:	add	fp, sp, #4
   1c5bc:	sub	sp, sp, #8
   1c5c0:	str	r0, [fp, #-8]
   1c5c4:	str	r1, [fp, #-12]
   1c5c8:	mov	r2, #1
   1c5cc:	ldr	r1, [fp, #-12]
   1c5d0:	ldr	r0, [fp, #-8]
   1c5d4:	bl	1c5f0 <__assert_fail@plt+0xb290>
   1c5d8:	mov	r3, r0
   1c5dc:	mov	r0, r3
   1c5e0:	sub	sp, fp, #4
   1c5e4:	ldr	fp, [sp]
   1c5e8:	add	sp, sp, #4
   1c5ec:	pop	{pc}		; (ldr pc, [sp], #4)
   1c5f0:	str	fp, [sp, #-8]!
   1c5f4:	str	lr, [sp, #4]
   1c5f8:	add	fp, sp, #4
   1c5fc:	sub	sp, sp, #24
   1c600:	str	r0, [fp, #-16]
   1c604:	str	r1, [fp, #-20]	; 0xffffffec
   1c608:	str	r2, [fp, #-24]	; 0xffffffe8
   1c60c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c610:	ldr	r3, [r3]
   1c614:	str	r3, [fp, #-8]
   1c618:	ldr	r3, [fp, #-16]
   1c61c:	cmp	r3, #0
   1c620:	bne	1c668 <__assert_fail@plt+0xb308>
   1c624:	ldr	r3, [fp, #-8]
   1c628:	cmp	r3, #0
   1c62c:	bne	1c6a4 <__assert_fail@plt+0xb344>
   1c630:	mov	r2, #64	; 0x40
   1c634:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c638:	udiv	r3, r2, r3
   1c63c:	str	r3, [fp, #-8]
   1c640:	ldr	r3, [fp, #-8]
   1c644:	cmp	r3, #0
   1c648:	moveq	r3, #1
   1c64c:	movne	r3, #0
   1c650:	uxtb	r3, r3
   1c654:	mov	r2, r3
   1c658:	ldr	r3, [fp, #-8]
   1c65c:	add	r3, r2, r3
   1c660:	str	r3, [fp, #-8]
   1c664:	b	1c6a4 <__assert_fail@plt+0xb344>
   1c668:	ldr	r2, [fp, #-8]
   1c66c:	ldr	r3, [fp, #-8]
   1c670:	lsr	r3, r3, #1
   1c674:	add	r3, r3, #1
   1c678:	mov	r1, #0
   1c67c:	adds	r3, r2, r3
   1c680:	bcc	1c688 <__assert_fail@plt+0xb328>
   1c684:	mov	r1, #1
   1c688:	str	r3, [fp, #-8]
   1c68c:	mov	r3, r1
   1c690:	and	r3, r3, #1
   1c694:	uxtb	r3, r3
   1c698:	cmp	r3, #0
   1c69c:	beq	1c6a4 <__assert_fail@plt+0xb344>
   1c6a0:	bl	1cb74 <__assert_fail@plt+0xb814>
   1c6a4:	ldr	r3, [fp, #-8]
   1c6a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c6ac:	mov	r1, r3
   1c6b0:	ldr	r0, [fp, #-16]
   1c6b4:	bl	1c464 <__assert_fail@plt+0xb104>
   1c6b8:	str	r0, [fp, #-16]
   1c6bc:	ldr	r2, [fp, #-8]
   1c6c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c6c4:	str	r2, [r3]
   1c6c8:	ldr	r3, [fp, #-16]
   1c6cc:	mov	r0, r3
   1c6d0:	sub	sp, fp, #4
   1c6d4:	ldr	fp, [sp]
   1c6d8:	add	sp, sp, #4
   1c6dc:	pop	{pc}		; (ldr pc, [sp], #4)
   1c6e0:	str	fp, [sp, #-8]!
   1c6e4:	str	lr, [sp, #4]
   1c6e8:	add	fp, sp, #4
   1c6ec:	sub	sp, sp, #32
   1c6f0:	str	r0, [fp, #-24]	; 0xffffffe8
   1c6f4:	str	r1, [fp, #-28]	; 0xffffffe4
   1c6f8:	str	r2, [fp, #-32]	; 0xffffffe0
   1c6fc:	str	r3, [fp, #-36]	; 0xffffffdc
   1c700:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c704:	ldr	r3, [r3]
   1c708:	str	r3, [fp, #-8]
   1c70c:	ldr	r3, [fp, #-8]
   1c710:	asr	r3, r3, #1
   1c714:	mov	r1, #0
   1c718:	ldr	r2, [fp, #-8]
   1c71c:	adds	r3, r2, r3
   1c720:	bvc	1c728 <__assert_fail@plt+0xb3c8>
   1c724:	mov	r1, #1
   1c728:	str	r3, [fp, #-16]
   1c72c:	mov	r3, r1
   1c730:	and	r3, r3, #1
   1c734:	uxtb	r3, r3
   1c738:	cmp	r3, #0
   1c73c:	beq	1c748 <__assert_fail@plt+0xb3e8>
   1c740:	mvn	r3, #-2147483648	; 0x80000000
   1c744:	str	r3, [fp, #-16]
   1c748:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c74c:	cmp	r3, #0
   1c750:	blt	1c76c <__assert_fail@plt+0xb40c>
   1c754:	ldr	r3, [fp, #-16]
   1c758:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c75c:	cmp	r2, r3
   1c760:	bge	1c76c <__assert_fail@plt+0xb40c>
   1c764:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c768:	str	r3, [fp, #-16]
   1c76c:	ldr	r2, [fp, #-16]
   1c770:	mov	lr, #0
   1c774:	ldr	r3, [fp, #4]
   1c778:	smull	r2, r3, r2, r3
   1c77c:	mov	r0, #0
   1c780:	mov	r1, #0
   1c784:	mov	r0, r3
   1c788:	asr	r1, r3, #31
   1c78c:	asr	ip, r2, #31
   1c790:	cmp	ip, r0
   1c794:	beq	1c79c <__assert_fail@plt+0xb43c>
   1c798:	mov	lr, #1
   1c79c:	mov	r3, r2
   1c7a0:	str	r3, [fp, #-20]	; 0xffffffec
   1c7a4:	mov	r3, lr
   1c7a8:	and	r3, r3, #1
   1c7ac:	uxtb	r3, r3
   1c7b0:	cmp	r3, #0
   1c7b4:	beq	1c7c0 <__assert_fail@plt+0xb460>
   1c7b8:	mvn	r3, #-2147483648	; 0x80000000
   1c7bc:	b	1c7d8 <__assert_fail@plt+0xb478>
   1c7c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c7c4:	cmp	r3, #63	; 0x3f
   1c7c8:	bgt	1c7d4 <__assert_fail@plt+0xb474>
   1c7cc:	mov	r3, #64	; 0x40
   1c7d0:	b	1c7d8 <__assert_fail@plt+0xb478>
   1c7d4:	mov	r3, #0
   1c7d8:	str	r3, [fp, #-12]
   1c7dc:	ldr	r3, [fp, #-12]
   1c7e0:	cmp	r3, #0
   1c7e4:	beq	1c81c <__assert_fail@plt+0xb4bc>
   1c7e8:	ldr	r2, [fp, #-12]
   1c7ec:	ldr	r3, [fp, #4]
   1c7f0:	sdiv	r3, r2, r3
   1c7f4:	str	r3, [fp, #-16]
   1c7f8:	ldr	r3, [fp, #-12]
   1c7fc:	ldr	r2, [fp, #4]
   1c800:	sdiv	r2, r3, r2
   1c804:	ldr	r1, [fp, #4]
   1c808:	mul	r2, r1, r2
   1c80c:	sub	r3, r3, r2
   1c810:	ldr	r2, [fp, #-12]
   1c814:	sub	r3, r2, r3
   1c818:	str	r3, [fp, #-20]	; 0xffffffec
   1c81c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c820:	cmp	r3, #0
   1c824:	bne	1c834 <__assert_fail@plt+0xb4d4>
   1c828:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c82c:	mov	r2, #0
   1c830:	str	r2, [r3]
   1c834:	ldr	r2, [fp, #-16]
   1c838:	ldr	r3, [fp, #-8]
   1c83c:	sub	r3, r2, r3
   1c840:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c844:	cmp	r2, r3
   1c848:	ble	1c8e8 <__assert_fail@plt+0xb588>
   1c84c:	mov	r1, #0
   1c850:	ldr	r2, [fp, #-8]
   1c854:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c858:	adds	r3, r2, r3
   1c85c:	bvc	1c864 <__assert_fail@plt+0xb504>
   1c860:	mov	r1, #1
   1c864:	str	r3, [fp, #-16]
   1c868:	mov	r3, r1
   1c86c:	and	r3, r3, #1
   1c870:	uxtb	r3, r3
   1c874:	cmp	r3, #0
   1c878:	bne	1c8e4 <__assert_fail@plt+0xb584>
   1c87c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c880:	cmp	r3, #0
   1c884:	blt	1c898 <__assert_fail@plt+0xb538>
   1c888:	ldr	r3, [fp, #-16]
   1c88c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c890:	cmp	r2, r3
   1c894:	blt	1c8e4 <__assert_fail@plt+0xb584>
   1c898:	ldr	r2, [fp, #-16]
   1c89c:	mov	lr, #0
   1c8a0:	ldr	r3, [fp, #4]
   1c8a4:	smull	r2, r3, r2, r3
   1c8a8:	mov	r0, #0
   1c8ac:	mov	r1, #0
   1c8b0:	mov	r0, r3
   1c8b4:	asr	r1, r3, #31
   1c8b8:	asr	ip, r2, #31
   1c8bc:	cmp	ip, r0
   1c8c0:	beq	1c8c8 <__assert_fail@plt+0xb568>
   1c8c4:	mov	lr, #1
   1c8c8:	mov	r3, r2
   1c8cc:	str	r3, [fp, #-20]	; 0xffffffec
   1c8d0:	mov	r3, lr
   1c8d4:	and	r3, r3, #1
   1c8d8:	uxtb	r3, r3
   1c8dc:	cmp	r3, #0
   1c8e0:	beq	1c8e8 <__assert_fail@plt+0xb588>
   1c8e4:	bl	1cb74 <__assert_fail@plt+0xb814>
   1c8e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c8ec:	mov	r1, r3
   1c8f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c8f4:	bl	1c3b4 <__assert_fail@plt+0xb054>
   1c8f8:	str	r0, [fp, #-24]	; 0xffffffe8
   1c8fc:	ldr	r2, [fp, #-16]
   1c900:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c904:	str	r2, [r3]
   1c908:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c90c:	mov	r0, r3
   1c910:	sub	sp, fp, #4
   1c914:	ldr	fp, [sp]
   1c918:	add	sp, sp, #4
   1c91c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c920:	str	fp, [sp, #-8]!
   1c924:	str	lr, [sp, #4]
   1c928:	add	fp, sp, #4
   1c92c:	sub	sp, sp, #8
   1c930:	str	r0, [fp, #-8]
   1c934:	mov	r1, #1
   1c938:	ldr	r0, [fp, #-8]
   1c93c:	bl	1c990 <__assert_fail@plt+0xb630>
   1c940:	mov	r3, r0
   1c944:	mov	r0, r3
   1c948:	sub	sp, fp, #4
   1c94c:	ldr	fp, [sp]
   1c950:	add	sp, sp, #4
   1c954:	pop	{pc}		; (ldr pc, [sp], #4)
   1c958:	str	fp, [sp, #-8]!
   1c95c:	str	lr, [sp, #4]
   1c960:	add	fp, sp, #4
   1c964:	sub	sp, sp, #8
   1c968:	str	r0, [fp, #-8]
   1c96c:	mov	r1, #1
   1c970:	ldr	r0, [fp, #-8]
   1c974:	bl	1c9d8 <__assert_fail@plt+0xb678>
   1c978:	mov	r3, r0
   1c97c:	mov	r0, r3
   1c980:	sub	sp, fp, #4
   1c984:	ldr	fp, [sp]
   1c988:	add	sp, sp, #4
   1c98c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c990:	str	fp, [sp, #-8]!
   1c994:	str	lr, [sp, #4]
   1c998:	add	fp, sp, #4
   1c99c:	sub	sp, sp, #8
   1c9a0:	str	r0, [fp, #-8]
   1c9a4:	str	r1, [fp, #-12]
   1c9a8:	ldr	r1, [fp, #-12]
   1c9ac:	ldr	r0, [fp, #-8]
   1c9b0:	bl	1d44c <__assert_fail@plt+0xc0ec>
   1c9b4:	mov	r3, r0
   1c9b8:	mov	r0, r3
   1c9bc:	bl	1c2c4 <__assert_fail@plt+0xaf64>
   1c9c0:	mov	r3, r0
   1c9c4:	mov	r0, r3
   1c9c8:	sub	sp, fp, #4
   1c9cc:	ldr	fp, [sp]
   1c9d0:	add	sp, sp, #4
   1c9d4:	pop	{pc}		; (ldr pc, [sp], #4)
   1c9d8:	str	fp, [sp, #-8]!
   1c9dc:	str	lr, [sp, #4]
   1c9e0:	add	fp, sp, #4
   1c9e4:	sub	sp, sp, #8
   1c9e8:	str	r0, [fp, #-8]
   1c9ec:	str	r1, [fp, #-12]
   1c9f0:	ldr	r1, [fp, #-12]
   1c9f4:	ldr	r0, [fp, #-8]
   1c9f8:	bl	1e4fc <__assert_fail@plt+0xd19c>
   1c9fc:	mov	r3, r0
   1ca00:	mov	r0, r3
   1ca04:	bl	1c2c4 <__assert_fail@plt+0xaf64>
   1ca08:	mov	r3, r0
   1ca0c:	mov	r0, r3
   1ca10:	sub	sp, fp, #4
   1ca14:	ldr	fp, [sp]
   1ca18:	add	sp, sp, #4
   1ca1c:	pop	{pc}		; (ldr pc, [sp], #4)
   1ca20:	str	fp, [sp, #-8]!
   1ca24:	str	lr, [sp, #4]
   1ca28:	add	fp, sp, #4
   1ca2c:	sub	sp, sp, #8
   1ca30:	str	r0, [fp, #-8]
   1ca34:	str	r1, [fp, #-12]
   1ca38:	ldr	r0, [fp, #-12]
   1ca3c:	bl	1c300 <__assert_fail@plt+0xafa0>
   1ca40:	mov	r3, r0
   1ca44:	ldr	r2, [fp, #-12]
   1ca48:	ldr	r1, [fp, #-8]
   1ca4c:	mov	r0, r3
   1ca50:	bl	1109c <memcpy@plt>
   1ca54:	mov	r3, r0
   1ca58:	mov	r0, r3
   1ca5c:	sub	sp, fp, #4
   1ca60:	ldr	fp, [sp]
   1ca64:	add	sp, sp, #4
   1ca68:	pop	{pc}		; (ldr pc, [sp], #4)
   1ca6c:	str	fp, [sp, #-8]!
   1ca70:	str	lr, [sp, #4]
   1ca74:	add	fp, sp, #4
   1ca78:	sub	sp, sp, #8
   1ca7c:	str	r0, [fp, #-8]
   1ca80:	str	r1, [fp, #-12]
   1ca84:	ldr	r0, [fp, #-12]
   1ca88:	bl	1c340 <__assert_fail@plt+0xafe0>
   1ca8c:	mov	r3, r0
   1ca90:	mov	r0, r3
   1ca94:	ldr	r3, [fp, #-12]
   1ca98:	mov	r2, r3
   1ca9c:	ldr	r1, [fp, #-8]
   1caa0:	bl	1109c <memcpy@plt>
   1caa4:	mov	r3, r0
   1caa8:	mov	r0, r3
   1caac:	sub	sp, fp, #4
   1cab0:	ldr	fp, [sp]
   1cab4:	add	sp, sp, #4
   1cab8:	pop	{pc}		; (ldr pc, [sp], #4)
   1cabc:	str	fp, [sp, #-8]!
   1cac0:	str	lr, [sp, #4]
   1cac4:	add	fp, sp, #4
   1cac8:	sub	sp, sp, #16
   1cacc:	str	r0, [fp, #-16]
   1cad0:	str	r1, [fp, #-20]	; 0xffffffec
   1cad4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cad8:	add	r3, r3, #1
   1cadc:	mov	r0, r3
   1cae0:	bl	1c340 <__assert_fail@plt+0xafe0>
   1cae4:	mov	r3, r0
   1cae8:	str	r3, [fp, #-8]
   1caec:	ldr	r3, [fp, #-20]	; 0xffffffec
   1caf0:	ldr	r2, [fp, #-8]
   1caf4:	add	r3, r2, r3
   1caf8:	mov	r2, #0
   1cafc:	strb	r2, [r3]
   1cb00:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cb04:	mov	r2, r3
   1cb08:	ldr	r1, [fp, #-16]
   1cb0c:	ldr	r0, [fp, #-8]
   1cb10:	bl	1109c <memcpy@plt>
   1cb14:	mov	r3, r0
   1cb18:	mov	r0, r3
   1cb1c:	sub	sp, fp, #4
   1cb20:	ldr	fp, [sp]
   1cb24:	add	sp, sp, #4
   1cb28:	pop	{pc}		; (ldr pc, [sp], #4)
   1cb2c:	str	fp, [sp, #-8]!
   1cb30:	str	lr, [sp, #4]
   1cb34:	add	fp, sp, #4
   1cb38:	sub	sp, sp, #8
   1cb3c:	str	r0, [fp, #-8]
   1cb40:	ldr	r0, [fp, #-8]
   1cb44:	bl	111ec <strlen@plt>
   1cb48:	mov	r3, r0
   1cb4c:	add	r3, r3, #1
   1cb50:	mov	r1, r3
   1cb54:	ldr	r0, [fp, #-8]
   1cb58:	bl	1ca20 <__assert_fail@plt+0xb6c0>
   1cb5c:	mov	r3, r0
   1cb60:	mov	r0, r3
   1cb64:	sub	sp, fp, #4
   1cb68:	ldr	fp, [sp]
   1cb6c:	add	sp, sp, #4
   1cb70:	pop	{pc}		; (ldr pc, [sp], #4)
   1cb74:	strd	r4, [sp, #-16]!
   1cb78:	str	fp, [sp, #8]
   1cb7c:	str	lr, [sp, #12]
   1cb80:	add	fp, sp, #12
   1cb84:	movw	r3, #4416	; 0x1140
   1cb88:	movt	r3, #3
   1cb8c:	ldr	r4, [r3]
   1cb90:	movw	r0, #2108	; 0x83c
   1cb94:	movt	r0, #2
   1cb98:	bl	111d4 <gettext@plt>
   1cb9c:	mov	r3, r0
   1cba0:	movw	r2, #2128	; 0x850
   1cba4:	movt	r2, #2
   1cba8:	mov	r1, #0
   1cbac:	mov	r0, r4
   1cbb0:	bl	11168 <error@plt>
   1cbb4:	bl	11318 <abort@plt>
   1cbb8:	str	fp, [sp, #-8]!
   1cbbc:	str	lr, [sp, #4]
   1cbc0:	add	fp, sp, #4
   1cbc4:	sub	sp, sp, #24
   1cbc8:	str	r0, [fp, #-16]
   1cbcc:	str	r1, [fp, #-20]	; 0xffffffec
   1cbd0:	str	r2, [fp, #-24]	; 0xffffffe8
   1cbd4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cbd8:	orr	r3, r3, #512	; 0x200
   1cbdc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1cbe0:	mov	r1, r3
   1cbe4:	ldr	r0, [fp, #-16]
   1cbe8:	bl	13e74 <__assert_fail@plt+0x2b14>
   1cbec:	str	r0, [fp, #-8]
   1cbf0:	ldr	r3, [fp, #-8]
   1cbf4:	cmp	r3, #0
   1cbf8:	bne	1cc34 <__assert_fail@plt+0xb8d4>
   1cbfc:	bl	11228 <__errno_location@plt>
   1cc00:	mov	r3, r0
   1cc04:	ldr	r3, [r3]
   1cc08:	cmp	r3, #22
   1cc0c:	bne	1cc30 <__assert_fail@plt+0xb8d0>
   1cc10:	movw	r3, #2160	; 0x870
   1cc14:	movt	r3, #2
   1cc18:	mov	r2, #41	; 0x29
   1cc1c:	movw	r1, #2132	; 0x854
   1cc20:	movt	r1, #2
   1cc24:	movw	r0, #2144	; 0x860
   1cc28:	movt	r0, #2
   1cc2c:	bl	11360 <__assert_fail@plt>
   1cc30:	bl	1cb74 <__assert_fail@plt+0xb814>
   1cc34:	ldr	r3, [fp, #-8]
   1cc38:	mov	r0, r3
   1cc3c:	sub	sp, fp, #4
   1cc40:	ldr	fp, [sp]
   1cc44:	add	sp, sp, #4
   1cc48:	pop	{pc}		; (ldr pc, [sp], #4)
   1cc4c:	push	{fp}		; (str fp, [sp, #-4]!)
   1cc50:	add	fp, sp, #0
   1cc54:	sub	sp, sp, #12
   1cc58:	str	r0, [fp, #-8]
   1cc5c:	str	r1, [fp, #-12]
   1cc60:	ldr	r3, [fp, #-8]
   1cc64:	ldr	r3, [r3, #48]	; 0x30
   1cc68:	and	r3, r3, #16
   1cc6c:	cmp	r3, #0
   1cc70:	beq	1cc88 <__assert_fail@plt+0xb928>
   1cc74:	ldr	r3, [fp, #-8]
   1cc78:	ldr	r3, [r3, #48]	; 0x30
   1cc7c:	and	r3, r3, #1
   1cc80:	cmp	r3, #0
   1cc84:	beq	1ccc0 <__assert_fail@plt+0xb960>
   1cc88:	ldr	r3, [fp, #-8]
   1cc8c:	ldr	r3, [r3, #48]	; 0x30
   1cc90:	and	r3, r3, #16
   1cc94:	cmp	r3, #0
   1cc98:	beq	1ccc8 <__assert_fail@plt+0xb968>
   1cc9c:	ldr	r3, [fp, #-8]
   1cca0:	ldr	r3, [r3, #48]	; 0x30
   1cca4:	and	r3, r3, #1
   1cca8:	cmp	r3, #0
   1ccac:	beq	1ccc8 <__assert_fail@plt+0xb968>
   1ccb0:	ldr	r3, [fp, #-12]
   1ccb4:	ldr	r3, [r3, #48]	; 0x30
   1ccb8:	cmp	r3, #0
   1ccbc:	beq	1ccc8 <__assert_fail@plt+0xb968>
   1ccc0:	mov	r3, #1
   1ccc4:	b	1cccc <__assert_fail@plt+0xb96c>
   1ccc8:	mov	r3, #0
   1cccc:	and	r3, r3, #1
   1ccd0:	uxtb	r3, r3
   1ccd4:	mov	r0, r3
   1ccd8:	add	sp, fp, #0
   1ccdc:	pop	{fp}		; (ldr fp, [sp], #4)
   1cce0:	bx	lr
   1cce4:	push	{fp}		; (str fp, [sp, #-4]!)
   1cce8:	add	fp, sp, #0
   1ccec:	sub	sp, sp, #20
   1ccf0:	str	r0, [fp, #-16]
   1ccf4:	str	r1, [fp, #-20]	; 0xffffffec
   1ccf8:	ldr	r3, [fp, #-16]
   1ccfc:	ldr	r3, [r3]
   1cd00:	mov	ip, #0
   1cd04:	ldr	r2, [fp, #-20]	; 0xffffffec
   1cd08:	cmp	r2, #0
   1cd0c:	bge	1cd1c <__assert_fail@plt+0xb9bc>
   1cd10:	cmp	r3, #0
   1cd14:	beq	1cd1c <__assert_fail@plt+0xb9bc>
   1cd18:	mov	ip, #1
   1cd1c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1cd20:	umull	r0, r1, r3, r2
   1cd24:	mov	r2, #0
   1cd28:	mov	r3, #0
   1cd2c:	mov	r2, r1
   1cd30:	mov	r3, #0
   1cd34:	cmp	r2, #0
   1cd38:	beq	1cd40 <__assert_fail@plt+0xb9e0>
   1cd3c:	mov	ip, #1
   1cd40:	mov	r3, r0
   1cd44:	str	r3, [fp, #-8]
   1cd48:	mov	r3, ip
   1cd4c:	and	r3, r3, #1
   1cd50:	uxtb	r3, r3
   1cd54:	cmp	r3, #0
   1cd58:	beq	1cd70 <__assert_fail@plt+0xba10>
   1cd5c:	ldr	r3, [fp, #-16]
   1cd60:	mvn	r2, #0
   1cd64:	str	r2, [r3]
   1cd68:	mov	r3, #1
   1cd6c:	b	1cd80 <__assert_fail@plt+0xba20>
   1cd70:	ldr	r2, [fp, #-8]
   1cd74:	ldr	r3, [fp, #-16]
   1cd78:	str	r2, [r3]
   1cd7c:	mov	r3, #0
   1cd80:	mov	r0, r3
   1cd84:	add	sp, fp, #0
   1cd88:	pop	{fp}		; (ldr fp, [sp], #4)
   1cd8c:	bx	lr
   1cd90:	str	fp, [sp, #-8]!
   1cd94:	str	lr, [sp, #4]
   1cd98:	add	fp, sp, #4
   1cd9c:	sub	sp, sp, #24
   1cda0:	str	r0, [fp, #-16]
   1cda4:	str	r1, [fp, #-20]	; 0xffffffec
   1cda8:	str	r2, [fp, #-24]	; 0xffffffe8
   1cdac:	mov	r3, #0
   1cdb0:	str	r3, [fp, #-8]
   1cdb4:	b	1cdd4 <__assert_fail@plt+0xba74>
   1cdb8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1cdbc:	ldr	r0, [fp, #-16]
   1cdc0:	bl	1cce4 <__assert_fail@plt+0xb984>
   1cdc4:	mov	r2, r0
   1cdc8:	ldr	r3, [fp, #-8]
   1cdcc:	orr	r3, r3, r2
   1cdd0:	str	r3, [fp, #-8]
   1cdd4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cdd8:	sub	r2, r3, #1
   1cddc:	str	r2, [fp, #-24]	; 0xffffffe8
   1cde0:	cmp	r3, #0
   1cde4:	bne	1cdb8 <__assert_fail@plt+0xba58>
   1cde8:	ldr	r3, [fp, #-8]
   1cdec:	mov	r0, r3
   1cdf0:	sub	sp, fp, #4
   1cdf4:	ldr	fp, [sp]
   1cdf8:	add	sp, sp, #4
   1cdfc:	pop	{pc}		; (ldr pc, [sp], #4)
   1ce00:	str	fp, [sp, #-8]!
   1ce04:	str	lr, [sp, #4]
   1ce08:	add	fp, sp, #4
   1ce0c:	sub	sp, sp, #56	; 0x38
   1ce10:	str	r0, [fp, #-48]	; 0xffffffd0
   1ce14:	str	r1, [fp, #-52]	; 0xffffffcc
   1ce18:	str	r2, [fp, #-56]	; 0xffffffc8
   1ce1c:	str	r3, [fp, #-60]	; 0xffffffc4
   1ce20:	mov	r3, #0
   1ce24:	str	r3, [fp, #-8]
   1ce28:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ce2c:	cmp	r3, #0
   1ce30:	blt	1ce40 <__assert_fail@plt+0xbae0>
   1ce34:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ce38:	cmp	r3, #36	; 0x24
   1ce3c:	ble	1ce60 <__assert_fail@plt+0xbb00>
   1ce40:	movw	r3, #2228	; 0x8b4
   1ce44:	movt	r3, #2
   1ce48:	mov	r2, #85	; 0x55
   1ce4c:	movw	r1, #2172	; 0x87c
   1ce50:	movt	r1, #2
   1ce54:	movw	r0, #2188	; 0x88c
   1ce58:	movt	r0, #2
   1ce5c:	bl	11360 <__assert_fail@plt>
   1ce60:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1ce64:	cmp	r3, #0
   1ce68:	bne	1ce74 <__assert_fail@plt+0xbb14>
   1ce6c:	sub	r3, fp, #36	; 0x24
   1ce70:	b	1ce78 <__assert_fail@plt+0xbb18>
   1ce74:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1ce78:	str	r3, [fp, #-32]	; 0xffffffe0
   1ce7c:	bl	11228 <__errno_location@plt>
   1ce80:	mov	r2, r0
   1ce84:	mov	r3, #0
   1ce88:	str	r3, [r2]
   1ce8c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ce90:	str	r3, [fp, #-12]
   1ce94:	ldr	r3, [fp, #-12]
   1ce98:	ldrb	r3, [r3]
   1ce9c:	strb	r3, [fp, #-13]
   1cea0:	b	1cebc <__assert_fail@plt+0xbb5c>
   1cea4:	ldr	r3, [fp, #-12]
   1cea8:	add	r3, r3, #1
   1ceac:	str	r3, [fp, #-12]
   1ceb0:	ldr	r3, [fp, #-12]
   1ceb4:	ldrb	r3, [r3]
   1ceb8:	strb	r3, [fp, #-13]
   1cebc:	bl	111bc <__ctype_b_loc@plt>
   1cec0:	mov	r3, r0
   1cec4:	ldr	r2, [r3]
   1cec8:	ldrb	r3, [fp, #-13]
   1cecc:	lsl	r3, r3, #1
   1ced0:	add	r3, r2, r3
   1ced4:	ldrh	r3, [r3]
   1ced8:	and	r3, r3, #8192	; 0x2000
   1cedc:	cmp	r3, #0
   1cee0:	bne	1cea4 <__assert_fail@plt+0xbb44>
   1cee4:	ldrb	r3, [fp, #-13]
   1cee8:	cmp	r3, #45	; 0x2d
   1ceec:	bne	1cef8 <__assert_fail@plt+0xbb98>
   1cef0:	mov	r3, #4
   1cef4:	b	1d438 <__assert_fail@plt+0xc0d8>
   1cef8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1cefc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1cf00:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1cf04:	bl	111e0 <strtoul@plt>
   1cf08:	mov	r3, r0
   1cf0c:	str	r3, [fp, #-40]	; 0xffffffd8
   1cf10:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cf14:	ldr	r3, [r3]
   1cf18:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1cf1c:	cmp	r2, r3
   1cf20:	bne	1cf7c <__assert_fail@plt+0xbc1c>
   1cf24:	ldr	r3, [fp, #4]
   1cf28:	cmp	r3, #0
   1cf2c:	beq	1cf74 <__assert_fail@plt+0xbc14>
   1cf30:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cf34:	ldr	r3, [r3]
   1cf38:	ldrb	r3, [r3]
   1cf3c:	cmp	r3, #0
   1cf40:	beq	1cf74 <__assert_fail@plt+0xbc14>
   1cf44:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cf48:	ldr	r3, [r3]
   1cf4c:	ldrb	r3, [r3]
   1cf50:	mov	r1, r3
   1cf54:	ldr	r0, [fp, #4]
   1cf58:	bl	111f8 <strchr@plt>
   1cf5c:	mov	r3, r0
   1cf60:	cmp	r3, #0
   1cf64:	beq	1cf74 <__assert_fail@plt+0xbc14>
   1cf68:	mov	r3, #1
   1cf6c:	str	r3, [fp, #-40]	; 0xffffffd8
   1cf70:	b	1cfb4 <__assert_fail@plt+0xbc54>
   1cf74:	mov	r3, #4
   1cf78:	b	1d438 <__assert_fail@plt+0xc0d8>
   1cf7c:	bl	11228 <__errno_location@plt>
   1cf80:	mov	r3, r0
   1cf84:	ldr	r3, [r3]
   1cf88:	cmp	r3, #0
   1cf8c:	beq	1cfb4 <__assert_fail@plt+0xbc54>
   1cf90:	bl	11228 <__errno_location@plt>
   1cf94:	mov	r3, r0
   1cf98:	ldr	r3, [r3]
   1cf9c:	cmp	r3, #34	; 0x22
   1cfa0:	beq	1cfac <__assert_fail@plt+0xbc4c>
   1cfa4:	mov	r3, #4
   1cfa8:	b	1d438 <__assert_fail@plt+0xc0d8>
   1cfac:	mov	r3, #1
   1cfb0:	str	r3, [fp, #-8]
   1cfb4:	ldr	r3, [fp, #4]
   1cfb8:	cmp	r3, #0
   1cfbc:	bne	1cfd4 <__assert_fail@plt+0xbc74>
   1cfc0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1cfc4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1cfc8:	str	r2, [r3]
   1cfcc:	ldr	r3, [fp, #-8]
   1cfd0:	b	1d438 <__assert_fail@plt+0xc0d8>
   1cfd4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cfd8:	ldr	r3, [r3]
   1cfdc:	ldrb	r3, [r3]
   1cfe0:	cmp	r3, #0
   1cfe4:	beq	1d428 <__assert_fail@plt+0xc0c8>
   1cfe8:	mov	r3, #1024	; 0x400
   1cfec:	str	r3, [fp, #-20]	; 0xffffffec
   1cff0:	mov	r3, #1
   1cff4:	str	r3, [fp, #-24]	; 0xffffffe8
   1cff8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cffc:	ldr	r3, [r3]
   1d000:	ldrb	r3, [r3]
   1d004:	mov	r1, r3
   1d008:	ldr	r0, [fp, #4]
   1d00c:	bl	111f8 <strchr@plt>
   1d010:	mov	r3, r0
   1d014:	cmp	r3, #0
   1d018:	bne	1d034 <__assert_fail@plt+0xbcd4>
   1d01c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1d020:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d024:	str	r2, [r3]
   1d028:	ldr	r3, [fp, #-8]
   1d02c:	orr	r3, r3, #2
   1d030:	b	1d438 <__assert_fail@plt+0xc0d8>
   1d034:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d038:	ldr	r3, [r3]
   1d03c:	ldrb	r3, [r3]
   1d040:	sub	r3, r3, #69	; 0x45
   1d044:	cmp	r3, #47	; 0x2f
   1d048:	ldrls	pc, [pc, r3, lsl #2]
   1d04c:	b	1d1a0 <__assert_fail@plt+0xbe40>
   1d050:	andeq	sp, r1, r0, lsl r1
   1d054:	andeq	sp, r1, r0, lsr #3
   1d058:	andeq	sp, r1, r0, lsl r1
   1d05c:	andeq	sp, r1, r0, lsr #3
   1d060:	andeq	sp, r1, r0, lsr #3
   1d064:	andeq	sp, r1, r0, lsr #3
   1d068:	andeq	sp, r1, r0, lsl r1
   1d06c:	andeq	sp, r1, r0, lsr #3
   1d070:	andeq	sp, r1, r0, lsl r1
   1d074:	andeq	sp, r1, r0, lsr #3
   1d078:	andeq	sp, r1, r0, lsr #3
   1d07c:	andeq	sp, r1, r0, lsl r1
   1d080:	andeq	sp, r1, r0, lsr #3
   1d084:	andeq	sp, r1, r0, lsr #3
   1d088:	andeq	sp, r1, r0, lsr #3
   1d08c:	andeq	sp, r1, r0, lsl r1
   1d090:	andeq	sp, r1, r0, lsr #3
   1d094:	andeq	sp, r1, r0, lsr #3
   1d098:	andeq	sp, r1, r0, lsr #3
   1d09c:	andeq	sp, r1, r0, lsr #3
   1d0a0:	andeq	sp, r1, r0, lsl r1
   1d0a4:	andeq	sp, r1, r0, lsl r1
   1d0a8:	andeq	sp, r1, r0, lsr #3
   1d0ac:	andeq	sp, r1, r0, lsr #3
   1d0b0:	andeq	sp, r1, r0, lsr #3
   1d0b4:	andeq	sp, r1, r0, lsr #3
   1d0b8:	andeq	sp, r1, r0, lsr #3
   1d0bc:	andeq	sp, r1, r0, lsr #3
   1d0c0:	andeq	sp, r1, r0, lsr #3
   1d0c4:	andeq	sp, r1, r0, lsr #3
   1d0c8:	andeq	sp, r1, r0, lsr #3
   1d0cc:	andeq	sp, r1, r0, lsr #3
   1d0d0:	andeq	sp, r1, r0, lsr #3
   1d0d4:	andeq	sp, r1, r0, lsr #3
   1d0d8:	andeq	sp, r1, r0, lsl r1
   1d0dc:	andeq	sp, r1, r0, lsr #3
   1d0e0:	andeq	sp, r1, r0, lsr #3
   1d0e4:	andeq	sp, r1, r0, lsr #3
   1d0e8:	andeq	sp, r1, r0, lsl r1
   1d0ec:	andeq	sp, r1, r0, lsr #3
   1d0f0:	andeq	sp, r1, r0, lsl r1
   1d0f4:	andeq	sp, r1, r0, lsr #3
   1d0f8:	andeq	sp, r1, r0, lsr #3
   1d0fc:	andeq	sp, r1, r0, lsr #3
   1d100:	andeq	sp, r1, r0, lsr #3
   1d104:	andeq	sp, r1, r0, lsr #3
   1d108:	andeq	sp, r1, r0, lsr #3
   1d10c:	andeq	sp, r1, r0, lsl r1
   1d110:	mov	r1, #48	; 0x30
   1d114:	ldr	r0, [fp, #4]
   1d118:	bl	111f8 <strchr@plt>
   1d11c:	mov	r3, r0
   1d120:	cmp	r3, #0
   1d124:	beq	1d194 <__assert_fail@plt+0xbe34>
   1d128:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d12c:	ldr	r3, [r3]
   1d130:	add	r3, r3, #1
   1d134:	ldrb	r3, [r3]
   1d138:	cmp	r3, #68	; 0x44
   1d13c:	beq	1d17c <__assert_fail@plt+0xbe1c>
   1d140:	cmp	r3, #105	; 0x69
   1d144:	beq	1d154 <__assert_fail@plt+0xbdf4>
   1d148:	cmp	r3, #66	; 0x42
   1d14c:	beq	1d17c <__assert_fail@plt+0xbe1c>
   1d150:	b	1d1a0 <__assert_fail@plt+0xbe40>
   1d154:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d158:	ldr	r3, [r3]
   1d15c:	add	r3, r3, #2
   1d160:	ldrb	r3, [r3]
   1d164:	cmp	r3, #66	; 0x42
   1d168:	bne	1d19c <__assert_fail@plt+0xbe3c>
   1d16c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d170:	add	r3, r3, #2
   1d174:	str	r3, [fp, #-24]	; 0xffffffe8
   1d178:	b	1d19c <__assert_fail@plt+0xbe3c>
   1d17c:	mov	r3, #1000	; 0x3e8
   1d180:	str	r3, [fp, #-20]	; 0xffffffec
   1d184:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d188:	add	r3, r3, #1
   1d18c:	str	r3, [fp, #-24]	; 0xffffffe8
   1d190:	b	1d1a0 <__assert_fail@plt+0xbe40>
   1d194:	nop	{0}
   1d198:	b	1d1a0 <__assert_fail@plt+0xbe40>
   1d19c:	nop	{0}
   1d1a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d1a4:	ldr	r3, [r3]
   1d1a8:	ldrb	r3, [r3]
   1d1ac:	sub	r3, r3, #66	; 0x42
   1d1b0:	cmp	r3, #53	; 0x35
   1d1b4:	ldrls	pc, [pc, r3, lsl #2]
   1d1b8:	b	1d3c8 <__assert_fail@plt+0xc068>
   1d1bc:	andeq	sp, r1, ip, lsr #5
   1d1c0:	andeq	sp, r1, r8, asr #7
   1d1c4:	andeq	sp, r1, r8, asr #7
   1d1c8:	ldrdeq	sp, [r1], -r0
   1d1cc:	andeq	sp, r1, r8, asr #7
   1d1d0:	andeq	sp, r1, ip, ror #5
   1d1d4:	andeq	sp, r1, r8, asr #7
   1d1d8:	andeq	sp, r1, r8, asr #7
   1d1dc:	andeq	sp, r1, r8, asr #7
   1d1e0:	andeq	sp, r1, r8, lsl #6
   1d1e4:	andeq	sp, r1, r8, asr #7
   1d1e8:	andeq	sp, r1, r4, lsr #6
   1d1ec:	andeq	sp, r1, r8, asr #7
   1d1f0:	andeq	sp, r1, r8, asr #7
   1d1f4:	andeq	sp, r1, r0, asr #6
   1d1f8:	andeq	sp, r1, r8, asr #7
   1d1fc:	andeq	sp, r1, r8, asr #7
   1d200:	andeq	sp, r1, r8, asr #7
   1d204:	andeq	sp, r1, ip, asr r3
   1d208:	andeq	sp, r1, r8, asr #7
   1d20c:	andeq	sp, r1, r8, asr #7
   1d210:	andeq	sp, r1, r8, asr #7
   1d214:	andeq	sp, r1, r8, asr #7
   1d218:	muleq	r1, r0, r3
   1d21c:	andeq	sp, r1, ip, lsr #7
   1d220:	andeq	sp, r1, r8, asr #7
   1d224:	andeq	sp, r1, r8, asr #7
   1d228:	andeq	sp, r1, r8, asr #7
   1d22c:	andeq	sp, r1, r8, asr #7
   1d230:	andeq	sp, r1, r8, asr #7
   1d234:	andeq	sp, r1, r8, asr #7
   1d238:	andeq	sp, r1, r8, asr #7
   1d23c:	muleq	r1, r4, r2
   1d240:	andeq	sp, r1, r4, asr #5
   1d244:	andeq	sp, r1, r8, asr #7
   1d248:	andeq	sp, r1, r8, asr #7
   1d24c:	andeq	sp, r1, r8, asr #7
   1d250:	andeq	sp, r1, ip, ror #5
   1d254:	andeq	sp, r1, r8, asr #7
   1d258:	andeq	sp, r1, r8, asr #7
   1d25c:	andeq	sp, r1, r8, asr #7
   1d260:	andeq	sp, r1, r8, lsl #6
   1d264:	andeq	sp, r1, r8, asr #7
   1d268:	andeq	sp, r1, r4, lsr #6
   1d26c:	andeq	sp, r1, r8, asr #7
   1d270:	andeq	sp, r1, r8, asr #7
   1d274:	andeq	sp, r1, r8, asr #7
   1d278:	andeq	sp, r1, r8, asr #7
   1d27c:	andeq	sp, r1, r8, asr #7
   1d280:	andeq	sp, r1, r8, asr #7
   1d284:	andeq	sp, r1, ip, asr r3
   1d288:	andeq	sp, r1, r8, asr #7
   1d28c:	andeq	sp, r1, r8, asr #7
   1d290:	andeq	sp, r1, r8, ror r3
   1d294:	sub	r3, fp, #40	; 0x28
   1d298:	mov	r1, #512	; 0x200
   1d29c:	mov	r0, r3
   1d2a0:	bl	1cce4 <__assert_fail@plt+0xb984>
   1d2a4:	str	r0, [fp, #-28]	; 0xffffffe4
   1d2a8:	b	1d3e0 <__assert_fail@plt+0xc080>
   1d2ac:	sub	r3, fp, #40	; 0x28
   1d2b0:	mov	r1, #1024	; 0x400
   1d2b4:	mov	r0, r3
   1d2b8:	bl	1cce4 <__assert_fail@plt+0xb984>
   1d2bc:	str	r0, [fp, #-28]	; 0xffffffe4
   1d2c0:	b	1d3e0 <__assert_fail@plt+0xc080>
   1d2c4:	mov	r3, #0
   1d2c8:	str	r3, [fp, #-28]	; 0xffffffe4
   1d2cc:	b	1d3e0 <__assert_fail@plt+0xc080>
   1d2d0:	sub	r3, fp, #40	; 0x28
   1d2d4:	mov	r2, #6
   1d2d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d2dc:	mov	r0, r3
   1d2e0:	bl	1cd90 <__assert_fail@plt+0xba30>
   1d2e4:	str	r0, [fp, #-28]	; 0xffffffe4
   1d2e8:	b	1d3e0 <__assert_fail@plt+0xc080>
   1d2ec:	sub	r3, fp, #40	; 0x28
   1d2f0:	mov	r2, #3
   1d2f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d2f8:	mov	r0, r3
   1d2fc:	bl	1cd90 <__assert_fail@plt+0xba30>
   1d300:	str	r0, [fp, #-28]	; 0xffffffe4
   1d304:	b	1d3e0 <__assert_fail@plt+0xc080>
   1d308:	sub	r3, fp, #40	; 0x28
   1d30c:	mov	r2, #1
   1d310:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d314:	mov	r0, r3
   1d318:	bl	1cd90 <__assert_fail@plt+0xba30>
   1d31c:	str	r0, [fp, #-28]	; 0xffffffe4
   1d320:	b	1d3e0 <__assert_fail@plt+0xc080>
   1d324:	sub	r3, fp, #40	; 0x28
   1d328:	mov	r2, #2
   1d32c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d330:	mov	r0, r3
   1d334:	bl	1cd90 <__assert_fail@plt+0xba30>
   1d338:	str	r0, [fp, #-28]	; 0xffffffe4
   1d33c:	b	1d3e0 <__assert_fail@plt+0xc080>
   1d340:	sub	r3, fp, #40	; 0x28
   1d344:	mov	r2, #5
   1d348:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d34c:	mov	r0, r3
   1d350:	bl	1cd90 <__assert_fail@plt+0xba30>
   1d354:	str	r0, [fp, #-28]	; 0xffffffe4
   1d358:	b	1d3e0 <__assert_fail@plt+0xc080>
   1d35c:	sub	r3, fp, #40	; 0x28
   1d360:	mov	r2, #4
   1d364:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d368:	mov	r0, r3
   1d36c:	bl	1cd90 <__assert_fail@plt+0xba30>
   1d370:	str	r0, [fp, #-28]	; 0xffffffe4
   1d374:	b	1d3e0 <__assert_fail@plt+0xc080>
   1d378:	sub	r3, fp, #40	; 0x28
   1d37c:	mov	r1, #2
   1d380:	mov	r0, r3
   1d384:	bl	1cce4 <__assert_fail@plt+0xb984>
   1d388:	str	r0, [fp, #-28]	; 0xffffffe4
   1d38c:	b	1d3e0 <__assert_fail@plt+0xc080>
   1d390:	sub	r3, fp, #40	; 0x28
   1d394:	mov	r2, #8
   1d398:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d39c:	mov	r0, r3
   1d3a0:	bl	1cd90 <__assert_fail@plt+0xba30>
   1d3a4:	str	r0, [fp, #-28]	; 0xffffffe4
   1d3a8:	b	1d3e0 <__assert_fail@plt+0xc080>
   1d3ac:	sub	r3, fp, #40	; 0x28
   1d3b0:	mov	r2, #7
   1d3b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d3b8:	mov	r0, r3
   1d3bc:	bl	1cd90 <__assert_fail@plt+0xba30>
   1d3c0:	str	r0, [fp, #-28]	; 0xffffffe4
   1d3c4:	b	1d3e0 <__assert_fail@plt+0xc080>
   1d3c8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1d3cc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d3d0:	str	r2, [r3]
   1d3d4:	ldr	r3, [fp, #-8]
   1d3d8:	orr	r3, r3, #2
   1d3dc:	b	1d438 <__assert_fail@plt+0xc0d8>
   1d3e0:	ldr	r2, [fp, #-8]
   1d3e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d3e8:	orr	r3, r2, r3
   1d3ec:	str	r3, [fp, #-8]
   1d3f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d3f4:	ldr	r2, [r3]
   1d3f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d3fc:	add	r2, r2, r3
   1d400:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d404:	str	r2, [r3]
   1d408:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d40c:	ldr	r3, [r3]
   1d410:	ldrb	r3, [r3]
   1d414:	cmp	r3, #0
   1d418:	beq	1d428 <__assert_fail@plt+0xc0c8>
   1d41c:	ldr	r3, [fp, #-8]
   1d420:	orr	r3, r3, #2
   1d424:	str	r3, [fp, #-8]
   1d428:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1d42c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d430:	str	r2, [r3]
   1d434:	ldr	r3, [fp, #-8]
   1d438:	mov	r0, r3
   1d43c:	sub	sp, fp, #4
   1d440:	ldr	fp, [sp]
   1d444:	add	sp, sp, #4
   1d448:	pop	{pc}		; (ldr pc, [sp], #4)
   1d44c:	str	fp, [sp, #-8]!
   1d450:	str	lr, [sp, #4]
   1d454:	add	fp, sp, #4
   1d458:	sub	sp, sp, #16
   1d45c:	str	r0, [fp, #-16]
   1d460:	str	r1, [fp, #-20]	; 0xffffffec
   1d464:	ldr	r3, [fp, #-16]
   1d468:	cmp	r3, #0
   1d46c:	beq	1d47c <__assert_fail@plt+0xc11c>
   1d470:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d474:	cmp	r3, #0
   1d478:	bne	1d48c <__assert_fail@plt+0xc12c>
   1d47c:	mov	r3, #1
   1d480:	str	r3, [fp, #-20]	; 0xffffffec
   1d484:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d488:	str	r3, [fp, #-16]
   1d48c:	mov	ip, #0
   1d490:	ldr	r2, [fp, #-16]
   1d494:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d498:	umull	r0, r1, r2, r3
   1d49c:	mov	r2, #0
   1d4a0:	mov	r3, #0
   1d4a4:	mov	r2, r1
   1d4a8:	mov	r3, #0
   1d4ac:	cmp	r2, #0
   1d4b0:	beq	1d4b8 <__assert_fail@plt+0xc158>
   1d4b4:	mov	ip, #1
   1d4b8:	cmp	r0, #0
   1d4bc:	bge	1d4c4 <__assert_fail@plt+0xc164>
   1d4c0:	mov	ip, #1
   1d4c4:	mov	r3, ip
   1d4c8:	and	r3, r3, #1
   1d4cc:	uxtb	r3, r3
   1d4d0:	cmp	r3, #0
   1d4d4:	beq	1d4f0 <__assert_fail@plt+0xc190>
   1d4d8:	bl	11228 <__errno_location@plt>
   1d4dc:	mov	r2, r0
   1d4e0:	mov	r3, #12
   1d4e4:	str	r3, [r2]
   1d4e8:	mov	r3, #0
   1d4ec:	b	1d508 <__assert_fail@plt+0xc1a8>
   1d4f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d4f4:	ldr	r0, [fp, #-16]
   1d4f8:	bl	1100c <calloc@plt>
   1d4fc:	mov	r3, r0
   1d500:	str	r3, [fp, #-8]
   1d504:	ldr	r3, [fp, #-8]
   1d508:	mov	r0, r3
   1d50c:	sub	sp, fp, #4
   1d510:	ldr	fp, [sp]
   1d514:	add	sp, sp, #4
   1d518:	pop	{pc}		; (ldr pc, [sp], #4)
   1d51c:	str	fp, [sp, #-8]!
   1d520:	str	lr, [sp, #4]
   1d524:	add	fp, sp, #4
   1d528:	sub	sp, sp, #16
   1d52c:	str	r0, [fp, #-16]
   1d530:	ldr	r3, [fp, #-16]
   1d534:	cmp	r3, #0
   1d538:	bne	1d544 <__assert_fail@plt+0xc1e4>
   1d53c:	mov	r3, #1
   1d540:	str	r3, [fp, #-16]
   1d544:	mov	r2, #0
   1d548:	ldr	r3, [fp, #-16]
   1d54c:	cmp	r3, #0
   1d550:	bge	1d558 <__assert_fail@plt+0xc1f8>
   1d554:	mov	r2, #1
   1d558:	mov	r3, r2
   1d55c:	and	r3, r3, #1
   1d560:	uxtb	r3, r3
   1d564:	cmp	r3, #0
   1d568:	beq	1d584 <__assert_fail@plt+0xc224>
   1d56c:	bl	11228 <__errno_location@plt>
   1d570:	mov	r2, r0
   1d574:	mov	r3, #12
   1d578:	str	r3, [r2]
   1d57c:	mov	r3, #0
   1d580:	b	1d598 <__assert_fail@plt+0xc238>
   1d584:	ldr	r0, [fp, #-16]
   1d588:	bl	11180 <malloc@plt>
   1d58c:	mov	r3, r0
   1d590:	str	r3, [fp, #-8]
   1d594:	ldr	r3, [fp, #-8]
   1d598:	mov	r0, r3
   1d59c:	sub	sp, fp, #4
   1d5a0:	ldr	fp, [sp]
   1d5a4:	add	sp, sp, #4
   1d5a8:	pop	{pc}		; (ldr pc, [sp], #4)
   1d5ac:	str	fp, [sp, #-8]!
   1d5b0:	str	lr, [sp, #4]
   1d5b4:	add	fp, sp, #4
   1d5b8:	sub	sp, sp, #16
   1d5bc:	str	r0, [fp, #-16]
   1d5c0:	str	r1, [fp, #-20]	; 0xffffffec
   1d5c4:	ldr	r3, [fp, #-16]
   1d5c8:	cmp	r3, #0
   1d5cc:	bne	1d5e0 <__assert_fail@plt+0xc280>
   1d5d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d5d4:	bl	1d51c <__assert_fail@plt+0xc1bc>
   1d5d8:	mov	r3, r0
   1d5dc:	b	1d650 <__assert_fail@plt+0xc2f0>
   1d5e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d5e4:	cmp	r3, #0
   1d5e8:	bne	1d5fc <__assert_fail@plt+0xc29c>
   1d5ec:	ldr	r0, [fp, #-16]
   1d5f0:	bl	1360c <__assert_fail@plt+0x22ac>
   1d5f4:	mov	r3, #0
   1d5f8:	b	1d650 <__assert_fail@plt+0xc2f0>
   1d5fc:	mov	r2, #0
   1d600:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d604:	cmp	r3, #0
   1d608:	bge	1d610 <__assert_fail@plt+0xc2b0>
   1d60c:	mov	r2, #1
   1d610:	mov	r3, r2
   1d614:	and	r3, r3, #1
   1d618:	uxtb	r3, r3
   1d61c:	cmp	r3, #0
   1d620:	beq	1d63c <__assert_fail@plt+0xc2dc>
   1d624:	bl	11228 <__errno_location@plt>
   1d628:	mov	r2, r0
   1d62c:	mov	r3, #12
   1d630:	str	r3, [r2]
   1d634:	mov	r3, #0
   1d638:	b	1d650 <__assert_fail@plt+0xc2f0>
   1d63c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d640:	ldr	r0, [fp, #-16]
   1d644:	bl	110d8 <realloc@plt>
   1d648:	str	r0, [fp, #-8]
   1d64c:	ldr	r3, [fp, #-8]
   1d650:	mov	r0, r3
   1d654:	sub	sp, fp, #4
   1d658:	ldr	fp, [sp]
   1d65c:	add	sp, sp, #4
   1d660:	pop	{pc}		; (ldr pc, [sp], #4)
   1d664:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1d668:	strd	r6, [sp, #8]
   1d66c:	strd	r8, [sp, #16]
   1d670:	str	fp, [sp, #24]
   1d674:	add	fp, sp, #24
   1d678:	sub	sp, sp, #20
   1d67c:	strd	r0, [fp, #-36]	; 0xffffffdc
   1d680:	str	r2, [fp, #-40]	; 0xffffffd8
   1d684:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1d688:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1d68c:	sub	ip, r1, #32
   1d690:	rsb	r0, r1, #32
   1d694:	lsl	r7, r3, r1
   1d698:	orr	r7, r7, r2, lsl ip
   1d69c:	orr	r7, r7, r2, lsr r0
   1d6a0:	lsl	r6, r2, r1
   1d6a4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1d6a8:	rsb	r1, r1, #0
   1d6ac:	and	r1, r1, #63	; 0x3f
   1d6b0:	rsb	ip, r1, #32
   1d6b4:	sub	r0, r1, #32
   1d6b8:	lsr	r4, r2, r1
   1d6bc:	orr	r4, r4, r3, lsl ip
   1d6c0:	orr	r4, r4, r3, lsr r0
   1d6c4:	lsr	r5, r3, r1
   1d6c8:	orr	r8, r6, r4
   1d6cc:	orr	r9, r7, r5
   1d6d0:	mov	r4, r8
   1d6d4:	mov	r5, r9
   1d6d8:	mov	r2, r4
   1d6dc:	mov	r3, r5
   1d6e0:	mov	r0, r2
   1d6e4:	mov	r1, r3
   1d6e8:	sub	sp, fp, #24
   1d6ec:	ldrd	r4, [sp]
   1d6f0:	ldrd	r6, [sp, #8]
   1d6f4:	ldrd	r8, [sp, #16]
   1d6f8:	ldr	fp, [sp, #24]
   1d6fc:	add	sp, sp, #28
   1d700:	bx	lr
   1d704:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1d708:	strd	r6, [sp, #8]
   1d70c:	strd	r8, [sp, #16]
   1d710:	str	fp, [sp, #24]
   1d714:	add	fp, sp, #24
   1d718:	sub	sp, sp, #20
   1d71c:	strd	r0, [fp, #-36]	; 0xffffffdc
   1d720:	str	r2, [fp, #-40]	; 0xffffffd8
   1d724:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1d728:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1d72c:	rsb	ip, r1, #32
   1d730:	sub	r0, r1, #32
   1d734:	lsr	r6, r2, r1
   1d738:	orr	r6, r6, r3, lsl ip
   1d73c:	orr	r6, r6, r3, lsr r0
   1d740:	lsr	r7, r3, r1
   1d744:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1d748:	rsb	r1, r1, #0
   1d74c:	and	r1, r1, #63	; 0x3f
   1d750:	sub	ip, r1, #32
   1d754:	rsb	r0, r1, #32
   1d758:	lsl	r5, r3, r1
   1d75c:	orr	r5, r5, r2, lsl ip
   1d760:	orr	r5, r5, r2, lsr r0
   1d764:	lsl	r4, r2, r1
   1d768:	orr	r8, r6, r4
   1d76c:	orr	r9, r7, r5
   1d770:	mov	r4, r8
   1d774:	mov	r5, r9
   1d778:	mov	r2, r4
   1d77c:	mov	r3, r5
   1d780:	mov	r0, r2
   1d784:	mov	r1, r3
   1d788:	sub	sp, fp, #24
   1d78c:	ldrd	r4, [sp]
   1d790:	ldrd	r6, [sp, #8]
   1d794:	ldrd	r8, [sp, #16]
   1d798:	ldr	fp, [sp, #24]
   1d79c:	add	sp, sp, #28
   1d7a0:	bx	lr
   1d7a4:	push	{fp}		; (str fp, [sp, #-4]!)
   1d7a8:	add	fp, sp, #0
   1d7ac:	sub	sp, sp, #12
   1d7b0:	str	r0, [fp, #-8]
   1d7b4:	str	r1, [fp, #-12]
   1d7b8:	ldr	r2, [fp, #-8]
   1d7bc:	ldr	r3, [fp, #-12]
   1d7c0:	rsb	r3, r3, #32
   1d7c4:	ror	r3, r2, r3
   1d7c8:	mov	r0, r3
   1d7cc:	add	sp, fp, #0
   1d7d0:	pop	{fp}		; (ldr fp, [sp], #4)
   1d7d4:	bx	lr
   1d7d8:	push	{fp}		; (str fp, [sp, #-4]!)
   1d7dc:	add	fp, sp, #0
   1d7e0:	sub	sp, sp, #12
   1d7e4:	str	r0, [fp, #-8]
   1d7e8:	str	r1, [fp, #-12]
   1d7ec:	ldr	r2, [fp, #-8]
   1d7f0:	ldr	r3, [fp, #-12]
   1d7f4:	ror	r3, r2, r3
   1d7f8:	mov	r0, r3
   1d7fc:	add	sp, fp, #0
   1d800:	pop	{fp}		; (ldr fp, [sp], #4)
   1d804:	bx	lr
   1d808:	push	{fp}		; (str fp, [sp, #-4]!)
   1d80c:	add	fp, sp, #0
   1d810:	sub	sp, sp, #12
   1d814:	str	r0, [fp, #-8]
   1d818:	str	r1, [fp, #-12]
   1d81c:	ldr	r2, [fp, #-8]
   1d820:	ldr	r3, [fp, #-12]
   1d824:	rsb	r3, r3, #32
   1d828:	ror	r3, r2, r3
   1d82c:	mov	r0, r3
   1d830:	add	sp, fp, #0
   1d834:	pop	{fp}		; (ldr fp, [sp], #4)
   1d838:	bx	lr
   1d83c:	push	{fp}		; (str fp, [sp, #-4]!)
   1d840:	add	fp, sp, #0
   1d844:	sub	sp, sp, #12
   1d848:	str	r0, [fp, #-8]
   1d84c:	str	r1, [fp, #-12]
   1d850:	ldr	r2, [fp, #-8]
   1d854:	ldr	r3, [fp, #-12]
   1d858:	ror	r3, r2, r3
   1d85c:	mov	r0, r3
   1d860:	add	sp, fp, #0
   1d864:	pop	{fp}		; (ldr fp, [sp], #4)
   1d868:	bx	lr
   1d86c:	push	{fp}		; (str fp, [sp, #-4]!)
   1d870:	add	fp, sp, #0
   1d874:	sub	sp, sp, #12
   1d878:	mov	r3, r0
   1d87c:	str	r1, [fp, #-12]
   1d880:	strh	r3, [fp, #-6]
   1d884:	ldrh	r2, [fp, #-6]
   1d888:	ldr	r3, [fp, #-12]
   1d88c:	lsl	r3, r2, r3
   1d890:	uxth	r2, r3
   1d894:	ldrh	r1, [fp, #-6]
   1d898:	ldr	r3, [fp, #-12]
   1d89c:	rsb	r3, r3, #16
   1d8a0:	lsr	r3, r1, r3
   1d8a4:	uxth	r3, r3
   1d8a8:	orr	r3, r2, r3
   1d8ac:	uxth	r3, r3
   1d8b0:	mov	r0, r3
   1d8b4:	add	sp, fp, #0
   1d8b8:	pop	{fp}		; (ldr fp, [sp], #4)
   1d8bc:	bx	lr
   1d8c0:	push	{fp}		; (str fp, [sp, #-4]!)
   1d8c4:	add	fp, sp, #0
   1d8c8:	sub	sp, sp, #12
   1d8cc:	mov	r3, r0
   1d8d0:	str	r1, [fp, #-12]
   1d8d4:	strh	r3, [fp, #-6]
   1d8d8:	ldrh	r2, [fp, #-6]
   1d8dc:	ldr	r3, [fp, #-12]
   1d8e0:	lsr	r3, r2, r3
   1d8e4:	uxth	r2, r3
   1d8e8:	ldrh	r1, [fp, #-6]
   1d8ec:	ldr	r3, [fp, #-12]
   1d8f0:	rsb	r3, r3, #16
   1d8f4:	lsl	r3, r1, r3
   1d8f8:	uxth	r3, r3
   1d8fc:	orr	r3, r2, r3
   1d900:	uxth	r3, r3
   1d904:	mov	r0, r3
   1d908:	add	sp, fp, #0
   1d90c:	pop	{fp}		; (ldr fp, [sp], #4)
   1d910:	bx	lr
   1d914:	push	{fp}		; (str fp, [sp, #-4]!)
   1d918:	add	fp, sp, #0
   1d91c:	sub	sp, sp, #12
   1d920:	mov	r3, r0
   1d924:	str	r1, [fp, #-12]
   1d928:	strb	r3, [fp, #-5]
   1d92c:	ldrb	r2, [fp, #-5]
   1d930:	ldr	r3, [fp, #-12]
   1d934:	lsl	r3, r2, r3
   1d938:	uxtb	r2, r3
   1d93c:	ldrb	r1, [fp, #-5]
   1d940:	ldr	r3, [fp, #-12]
   1d944:	rsb	r3, r3, #8
   1d948:	lsr	r3, r1, r3
   1d94c:	uxtb	r3, r3
   1d950:	orr	r3, r2, r3
   1d954:	uxtb	r3, r3
   1d958:	mov	r0, r3
   1d95c:	add	sp, fp, #0
   1d960:	pop	{fp}		; (ldr fp, [sp], #4)
   1d964:	bx	lr
   1d968:	push	{fp}		; (str fp, [sp, #-4]!)
   1d96c:	add	fp, sp, #0
   1d970:	sub	sp, sp, #12
   1d974:	mov	r3, r0
   1d978:	str	r1, [fp, #-12]
   1d97c:	strb	r3, [fp, #-5]
   1d980:	ldrb	r2, [fp, #-5]
   1d984:	ldr	r3, [fp, #-12]
   1d988:	lsr	r3, r2, r3
   1d98c:	uxtb	r2, r3
   1d990:	ldrb	r1, [fp, #-5]
   1d994:	ldr	r3, [fp, #-12]
   1d998:	rsb	r3, r3, #8
   1d99c:	lsl	r3, r1, r3
   1d9a0:	uxtb	r3, r3
   1d9a4:	orr	r3, r2, r3
   1d9a8:	uxtb	r3, r3
   1d9ac:	mov	r0, r3
   1d9b0:	add	sp, fp, #0
   1d9b4:	pop	{fp}		; (ldr fp, [sp], #4)
   1d9b8:	bx	lr
   1d9bc:	strd	r4, [sp, #-16]!
   1d9c0:	str	fp, [sp, #8]
   1d9c4:	str	lr, [sp, #12]
   1d9c8:	add	fp, sp, #12
   1d9cc:	sub	sp, sp, #16
   1d9d0:	str	r0, [fp, #-24]	; 0xffffffe8
   1d9d4:	str	r1, [fp, #-28]	; 0xffffffe4
   1d9d8:	ldr	r5, [fp, #-24]	; 0xffffffe8
   1d9dc:	ldr	r4, [fp, #-28]	; 0xffffffe4
   1d9e0:	cmp	r5, r4
   1d9e4:	bne	1d9f0 <__assert_fail@plt+0xc690>
   1d9e8:	mov	r3, #0
   1d9ec:	b	1da50 <__assert_fail@plt+0xc6f0>
   1d9f0:	ldrb	r3, [r5]
   1d9f4:	mov	r0, r3
   1d9f8:	bl	1ec58 <__assert_fail@plt+0xd8f8>
   1d9fc:	mov	r3, r0
   1da00:	strb	r3, [fp, #-13]
   1da04:	ldrb	r3, [r4]
   1da08:	mov	r0, r3
   1da0c:	bl	1ec58 <__assert_fail@plt+0xd8f8>
   1da10:	mov	r3, r0
   1da14:	strb	r3, [fp, #-14]
   1da18:	ldrb	r3, [fp, #-13]
   1da1c:	cmp	r3, #0
   1da20:	beq	1da40 <__assert_fail@plt+0xc6e0>
   1da24:	add	r5, r5, #1
   1da28:	add	r4, r4, #1
   1da2c:	ldrb	r2, [fp, #-13]
   1da30:	ldrb	r3, [fp, #-14]
   1da34:	cmp	r2, r3
   1da38:	beq	1d9f0 <__assert_fail@plt+0xc690>
   1da3c:	b	1da44 <__assert_fail@plt+0xc6e4>
   1da40:	nop	{0}
   1da44:	ldrb	r2, [fp, #-13]
   1da48:	ldrb	r3, [fp, #-14]
   1da4c:	sub	r3, r2, r3
   1da50:	mov	r0, r3
   1da54:	sub	sp, fp, #12
   1da58:	ldrd	r4, [sp]
   1da5c:	ldr	fp, [sp, #8]
   1da60:	add	sp, sp, #12
   1da64:	pop	{pc}		; (ldr pc, [sp], #4)
   1da68:	str	fp, [sp, #-8]!
   1da6c:	str	lr, [sp, #4]
   1da70:	add	fp, sp, #4
   1da74:	sub	sp, sp, #16
   1da78:	str	r0, [fp, #-16]
   1da7c:	ldr	r0, [fp, #-16]
   1da80:	bl	11144 <__fpending@plt>
   1da84:	mov	r3, r0
   1da88:	cmp	r3, #0
   1da8c:	movne	r3, #1
   1da90:	moveq	r3, #0
   1da94:	strb	r3, [fp, #-5]
   1da98:	ldr	r0, [fp, #-16]
   1da9c:	bl	11150 <ferror_unlocked@plt>
   1daa0:	mov	r3, r0
   1daa4:	cmp	r3, #0
   1daa8:	movne	r3, #1
   1daac:	moveq	r3, #0
   1dab0:	strb	r3, [fp, #-6]
   1dab4:	ldr	r0, [fp, #-16]
   1dab8:	bl	1dd14 <__assert_fail@plt+0xc9b4>
   1dabc:	mov	r3, r0
   1dac0:	cmp	r3, #0
   1dac4:	movne	r3, #1
   1dac8:	moveq	r3, #0
   1dacc:	strb	r3, [fp, #-7]
   1dad0:	ldrb	r3, [fp, #-6]
   1dad4:	cmp	r3, #0
   1dad8:	bne	1db08 <__assert_fail@plt+0xc7a8>
   1dadc:	ldrb	r3, [fp, #-7]
   1dae0:	cmp	r3, #0
   1dae4:	beq	1db34 <__assert_fail@plt+0xc7d4>
   1dae8:	ldrb	r3, [fp, #-5]
   1daec:	cmp	r3, #0
   1daf0:	bne	1db08 <__assert_fail@plt+0xc7a8>
   1daf4:	bl	11228 <__errno_location@plt>
   1daf8:	mov	r3, r0
   1dafc:	ldr	r3, [r3]
   1db00:	cmp	r3, #9
   1db04:	beq	1db34 <__assert_fail@plt+0xc7d4>
   1db08:	ldrb	r3, [fp, #-7]
   1db0c:	eor	r3, r3, #1
   1db10:	uxtb	r3, r3
   1db14:	cmp	r3, #0
   1db18:	beq	1db2c <__assert_fail@plt+0xc7cc>
   1db1c:	bl	11228 <__errno_location@plt>
   1db20:	mov	r2, r0
   1db24:	mov	r3, #0
   1db28:	str	r3, [r2]
   1db2c:	mvn	r3, #0
   1db30:	b	1db38 <__assert_fail@plt+0xc7d8>
   1db34:	mov	r3, #0
   1db38:	mov	r0, r3
   1db3c:	sub	sp, fp, #4
   1db40:	ldr	fp, [sp]
   1db44:	add	sp, sp, #4
   1db48:	pop	{pc}		; (ldr pc, [sp], #4)
   1db4c:	strd	r4, [sp, #-12]!
   1db50:	str	fp, [sp, #8]
   1db54:	add	fp, sp, #8
   1db58:	sub	sp, sp, #12
   1db5c:	strd	r0, [fp, #-20]	; 0xffffffec
   1db60:	ldrd	r0, [fp, #-20]	; 0xffffffec
   1db64:	subs	r4, r0, #1
   1db68:	sbc	r5, r1, #0
   1db6c:	ldrd	r0, [fp, #-20]	; 0xffffffec
   1db70:	and	r2, r4, r0
   1db74:	and	r3, r5, r1
   1db78:	orr	r3, r2, r3
   1db7c:	cmp	r3, #0
   1db80:	moveq	r3, #1
   1db84:	movne	r3, #0
   1db88:	uxtb	r3, r3
   1db8c:	mov	r0, r3
   1db90:	sub	sp, fp, #8
   1db94:	ldrd	r4, [sp]
   1db98:	ldr	fp, [sp, #8]
   1db9c:	add	sp, sp, #12
   1dba0:	bx	lr
   1dba4:	push	{fp}		; (str fp, [sp, #-4]!)
   1dba8:	add	fp, sp, #0
   1dbac:	sub	sp, sp, #12
   1dbb0:	str	r0, [fp, #-8]
   1dbb4:	ldr	r1, [fp, #-8]
   1dbb8:	mov	r2, #0
   1dbbc:	mov	r3, #0
   1dbc0:	strd	r2, [r1, #16]
   1dbc4:	ldr	r2, [fp, #-8]
   1dbc8:	movw	r3, #62998	; 0xf616
   1dbcc:	movt	r3, #149	; 0x95
   1dbd0:	str	r3, [r2, #24]
   1dbd4:	nop	{0}
   1dbd8:	add	sp, fp, #0
   1dbdc:	pop	{fp}		; (ldr fp, [sp], #4)
   1dbe0:	bx	lr
   1dbe4:	strd	r4, [sp, #-16]!
   1dbe8:	str	fp, [sp, #8]
   1dbec:	str	lr, [sp, #12]
   1dbf0:	add	fp, sp, #12
   1dbf4:	sub	sp, sp, #8
   1dbf8:	str	r0, [fp, #-16]
   1dbfc:	str	r1, [fp, #-20]	; 0xffffffec
   1dc00:	ldr	r3, [fp, #-16]
   1dc04:	ldr	r2, [r3, #24]
   1dc08:	movw	r3, #62998	; 0xf616
   1dc0c:	movt	r3, #149	; 0x95
   1dc10:	cmp	r2, r3
   1dc14:	beq	1dc38 <__assert_fail@plt+0xc8d8>
   1dc18:	movw	r3, #2284	; 0x8ec
   1dc1c:	movt	r3, #2
   1dc20:	mov	r2, #60	; 0x3c
   1dc24:	movw	r1, #2240	; 0x8c0
   1dc28:	movt	r1, #2
   1dc2c:	movw	r0, #2260	; 0x8d4
   1dc30:	movt	r0, #2
   1dc34:	bl	11360 <__assert_fail@plt>
   1dc38:	ldr	r3, [fp, #-16]
   1dc3c:	ldrd	r2, [r3, #16]
   1dc40:	orrs	r3, r2, r3
   1dc44:	beq	1dc88 <__assert_fail@plt+0xc928>
   1dc48:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dc4c:	ldrd	r0, [r3, #96]	; 0x60
   1dc50:	ldr	r3, [fp, #-16]
   1dc54:	ldrd	r2, [r3]
   1dc58:	cmp	r1, r3
   1dc5c:	cmpeq	r0, r2
   1dc60:	bne	1dc88 <__assert_fail@plt+0xc928>
   1dc64:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dc68:	ldrd	r0, [r3]
   1dc6c:	ldr	r3, [fp, #-16]
   1dc70:	ldrd	r2, [r3, #8]
   1dc74:	cmp	r1, r3
   1dc78:	cmpeq	r0, r2
   1dc7c:	bne	1dc88 <__assert_fail@plt+0xc928>
   1dc80:	mov	r3, #1
   1dc84:	b	1dcfc <__assert_fail@plt+0xc99c>
   1dc88:	ldr	r3, [fp, #-16]
   1dc8c:	ldrd	r2, [r3, #16]
   1dc90:	adds	r4, r2, #1
   1dc94:	adc	r5, r3, #0
   1dc98:	ldr	r3, [fp, #-16]
   1dc9c:	strd	r4, [r3, #16]
   1dca0:	ldr	r3, [fp, #-16]
   1dca4:	ldrd	r2, [r3, #16]
   1dca8:	mov	r0, r2
   1dcac:	mov	r1, r3
   1dcb0:	bl	1db4c <__assert_fail@plt+0xc7ec>
   1dcb4:	mov	r3, r0
   1dcb8:	cmp	r3, #0
   1dcbc:	beq	1dcf8 <__assert_fail@plt+0xc998>
   1dcc0:	ldr	r3, [fp, #-16]
   1dcc4:	ldrd	r2, [r3, #16]
   1dcc8:	orrs	r3, r2, r3
   1dccc:	bne	1dcd8 <__assert_fail@plt+0xc978>
   1dcd0:	mov	r3, #1
   1dcd4:	b	1dcfc <__assert_fail@plt+0xc99c>
   1dcd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dcdc:	ldrd	r2, [r3]
   1dce0:	ldr	r1, [fp, #-16]
   1dce4:	strd	r2, [r1, #8]
   1dce8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dcec:	ldrd	r2, [r3, #96]	; 0x60
   1dcf0:	ldr	r1, [fp, #-16]
   1dcf4:	strd	r2, [r1]
   1dcf8:	mov	r3, #0
   1dcfc:	mov	r0, r3
   1dd00:	sub	sp, fp, #12
   1dd04:	ldrd	r4, [sp]
   1dd08:	ldr	fp, [sp, #8]
   1dd0c:	add	sp, sp, #12
   1dd10:	pop	{pc}		; (ldr pc, [sp], #4)
   1dd14:	str	fp, [sp, #-8]!
   1dd18:	str	lr, [sp, #4]
   1dd1c:	add	fp, sp, #4
   1dd20:	sub	sp, sp, #32
   1dd24:	str	r0, [fp, #-24]	; 0xffffffe8
   1dd28:	mov	r3, #0
   1dd2c:	str	r3, [fp, #-8]
   1dd30:	mov	r3, #0
   1dd34:	str	r3, [fp, #-12]
   1dd38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dd3c:	bl	1124c <fileno@plt>
   1dd40:	str	r0, [fp, #-16]
   1dd44:	ldr	r3, [fp, #-16]
   1dd48:	cmp	r3, #0
   1dd4c:	bge	1dd60 <__assert_fail@plt+0xca00>
   1dd50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dd54:	bl	11258 <fclose@plt>
   1dd58:	mov	r3, r0
   1dd5c:	b	1de04 <__assert_fail@plt+0xcaa4>
   1dd60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dd64:	bl	11198 <__freading@plt>
   1dd68:	mov	r3, r0
   1dd6c:	cmp	r3, #0
   1dd70:	beq	1ddac <__assert_fail@plt+0xca4c>
   1dd74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dd78:	bl	1124c <fileno@plt>
   1dd7c:	mov	r1, r0
   1dd80:	mov	r3, #1
   1dd84:	str	r3, [sp]
   1dd88:	mov	r2, #0
   1dd8c:	mov	r3, #0
   1dd90:	mov	r0, r1
   1dd94:	bl	11120 <lseek64@plt>
   1dd98:	mvn	r2, #0
   1dd9c:	mvn	r3, #0
   1dda0:	cmp	r1, r3
   1dda4:	cmpeq	r0, r2
   1dda8:	beq	1ddd0 <__assert_fail@plt+0xca70>
   1ddac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ddb0:	bl	1e2d8 <__assert_fail@plt+0xcf78>
   1ddb4:	mov	r3, r0
   1ddb8:	cmp	r3, #0
   1ddbc:	beq	1ddd0 <__assert_fail@plt+0xca70>
   1ddc0:	bl	11228 <__errno_location@plt>
   1ddc4:	mov	r3, r0
   1ddc8:	ldr	r3, [r3]
   1ddcc:	str	r3, [fp, #-8]
   1ddd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ddd4:	bl	11258 <fclose@plt>
   1ddd8:	str	r0, [fp, #-12]
   1dddc:	ldr	r3, [fp, #-8]
   1dde0:	cmp	r3, #0
   1dde4:	beq	1de00 <__assert_fail@plt+0xcaa0>
   1dde8:	bl	11228 <__errno_location@plt>
   1ddec:	mov	r2, r0
   1ddf0:	ldr	r3, [fp, #-8]
   1ddf4:	str	r3, [r2]
   1ddf8:	mvn	r3, #0
   1ddfc:	str	r3, [fp, #-12]
   1de00:	ldr	r3, [fp, #-12]
   1de04:	mov	r0, r3
   1de08:	sub	sp, fp, #4
   1de0c:	ldr	fp, [sp]
   1de10:	add	sp, sp, #4
   1de14:	pop	{pc}		; (ldr pc, [sp], #4)
   1de18:	push	{r1, r2, r3}
   1de1c:	str	fp, [sp, #-8]!
   1de20:	str	lr, [sp, #4]
   1de24:	add	fp, sp, #4
   1de28:	sub	sp, sp, #36	; 0x24
   1de2c:	str	r0, [fp, #-36]	; 0xffffffdc
   1de30:	mvn	r3, #0
   1de34:	str	r3, [fp, #-12]
   1de38:	add	r3, fp, #8
   1de3c:	str	r3, [fp, #-32]	; 0xffffffe0
   1de40:	ldr	r3, [fp, #4]
   1de44:	cmp	r3, #0
   1de48:	beq	1de60 <__assert_fail@plt+0xcb00>
   1de4c:	ldr	r3, [fp, #4]
   1de50:	movw	r2, #1030	; 0x406
   1de54:	cmp	r3, r2
   1de58:	beq	1de88 <__assert_fail@plt+0xcb28>
   1de5c:	b	1deb0 <__assert_fail@plt+0xcb50>
   1de60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1de64:	add	r2, r3, #4
   1de68:	str	r2, [fp, #-32]	; 0xffffffe0
   1de6c:	ldr	r3, [r3]
   1de70:	str	r3, [fp, #-16]
   1de74:	ldr	r1, [fp, #-16]
   1de78:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1de7c:	bl	1e05c <__assert_fail@plt+0xccfc>
   1de80:	str	r0, [fp, #-12]
   1de84:	b	1e03c <__assert_fail@plt+0xccdc>
   1de88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1de8c:	add	r2, r3, #4
   1de90:	str	r2, [fp, #-32]	; 0xffffffe0
   1de94:	ldr	r3, [r3]
   1de98:	str	r3, [fp, #-20]	; 0xffffffec
   1de9c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1dea0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1dea4:	bl	1e0a0 <__assert_fail@plt+0xcd40>
   1dea8:	str	r0, [fp, #-12]
   1deac:	b	1e03c <__assert_fail@plt+0xccdc>
   1deb0:	ldr	r3, [fp, #4]
   1deb4:	cmp	r3, #11
   1deb8:	beq	1dfcc <__assert_fail@plt+0xcc6c>
   1debc:	ldr	r3, [fp, #4]
   1dec0:	cmp	r3, #11
   1dec4:	bgt	1df4c <__assert_fail@plt+0xcbec>
   1dec8:	ldr	r3, [fp, #4]
   1decc:	cmp	r3, #3
   1ded0:	beq	1dfcc <__assert_fail@plt+0xcc6c>
   1ded4:	ldr	r3, [fp, #4]
   1ded8:	cmp	r3, #3
   1dedc:	bgt	1df08 <__assert_fail@plt+0xcba8>
   1dee0:	ldr	r3, [fp, #4]
   1dee4:	cmp	r3, #1
   1dee8:	beq	1dfcc <__assert_fail@plt+0xcc6c>
   1deec:	ldr	r3, [fp, #4]
   1def0:	cmp	r3, #1
   1def4:	bgt	1dfe0 <__assert_fail@plt+0xcc80>
   1def8:	ldr	r3, [fp, #4]
   1defc:	cmp	r3, #0
   1df00:	beq	1dfe0 <__assert_fail@plt+0xcc80>
   1df04:	b	1e00c <__assert_fail@plt+0xccac>
   1df08:	ldr	r3, [fp, #4]
   1df0c:	cmp	r3, #8
   1df10:	beq	1dfe0 <__assert_fail@plt+0xcc80>
   1df14:	ldr	r3, [fp, #4]
   1df18:	cmp	r3, #8
   1df1c:	bgt	1df30 <__assert_fail@plt+0xcbd0>
   1df20:	ldr	r3, [fp, #4]
   1df24:	cmp	r3, #4
   1df28:	beq	1dfe0 <__assert_fail@plt+0xcc80>
   1df2c:	b	1e00c <__assert_fail@plt+0xccac>
   1df30:	ldr	r3, [fp, #4]
   1df34:	cmp	r3, #9
   1df38:	beq	1dfcc <__assert_fail@plt+0xcc6c>
   1df3c:	ldr	r3, [fp, #4]
   1df40:	cmp	r3, #10
   1df44:	beq	1dfe0 <__assert_fail@plt+0xcc80>
   1df48:	b	1e00c <__assert_fail@plt+0xccac>
   1df4c:	ldr	r3, [fp, #4]
   1df50:	movw	r2, #1031	; 0x407
   1df54:	cmp	r3, r2
   1df58:	bgt	1df9c <__assert_fail@plt+0xcc3c>
   1df5c:	ldr	r3, [fp, #4]
   1df60:	movw	r2, #1030	; 0x406
   1df64:	cmp	r3, r2
   1df68:	bge	1dfe0 <__assert_fail@plt+0xcc80>
   1df6c:	ldr	r3, [fp, #4]
   1df70:	movw	r2, #1025	; 0x401
   1df74:	cmp	r3, r2
   1df78:	beq	1dfcc <__assert_fail@plt+0xcc6c>
   1df7c:	ldr	r3, [fp, #4]
   1df80:	movw	r2, #1026	; 0x402
   1df84:	cmp	r3, r2
   1df88:	beq	1dfe0 <__assert_fail@plt+0xcc80>
   1df8c:	ldr	r3, [fp, #4]
   1df90:	cmp	r3, #1024	; 0x400
   1df94:	beq	1dfe0 <__assert_fail@plt+0xcc80>
   1df98:	b	1e00c <__assert_fail@plt+0xccac>
   1df9c:	ldr	r3, [fp, #4]
   1dfa0:	movw	r2, #1033	; 0x409
   1dfa4:	cmp	r3, r2
   1dfa8:	beq	1dfe0 <__assert_fail@plt+0xcc80>
   1dfac:	ldr	r3, [fp, #4]
   1dfb0:	movw	r2, #1033	; 0x409
   1dfb4:	cmp	r3, r2
   1dfb8:	blt	1dfcc <__assert_fail@plt+0xcc6c>
   1dfbc:	ldr	r3, [fp, #4]
   1dfc0:	movw	r2, #1034	; 0x40a
   1dfc4:	cmp	r3, r2
   1dfc8:	bne	1e00c <__assert_fail@plt+0xccac>
   1dfcc:	ldr	r1, [fp, #4]
   1dfd0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1dfd4:	bl	11270 <fcntl64@plt>
   1dfd8:	str	r0, [fp, #-12]
   1dfdc:	b	1e038 <__assert_fail@plt+0xccd8>
   1dfe0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dfe4:	add	r2, r3, #4
   1dfe8:	str	r2, [fp, #-32]	; 0xffffffe0
   1dfec:	ldr	r3, [r3]
   1dff0:	str	r3, [fp, #-24]	; 0xffffffe8
   1dff4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1dff8:	ldr	r1, [fp, #4]
   1dffc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e000:	bl	11270 <fcntl64@plt>
   1e004:	str	r0, [fp, #-12]
   1e008:	b	1e038 <__assert_fail@plt+0xccd8>
   1e00c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e010:	add	r2, r3, #4
   1e014:	str	r2, [fp, #-32]	; 0xffffffe0
   1e018:	ldr	r3, [r3]
   1e01c:	str	r3, [fp, #-28]	; 0xffffffe4
   1e020:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e024:	ldr	r1, [fp, #4]
   1e028:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e02c:	bl	11270 <fcntl64@plt>
   1e030:	str	r0, [fp, #-12]
   1e034:	nop	{0}
   1e038:	nop	{0}
   1e03c:	ldr	r3, [fp, #-12]
   1e040:	mov	r0, r3
   1e044:	sub	sp, fp, #4
   1e048:	ldr	fp, [sp]
   1e04c:	ldr	lr, [sp, #4]
   1e050:	add	sp, sp, #8
   1e054:	add	sp, sp, #12
   1e058:	bx	lr
   1e05c:	str	fp, [sp, #-8]!
   1e060:	str	lr, [sp, #4]
   1e064:	add	fp, sp, #4
   1e068:	sub	sp, sp, #16
   1e06c:	str	r0, [fp, #-16]
   1e070:	str	r1, [fp, #-20]	; 0xffffffec
   1e074:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e078:	mov	r1, #0
   1e07c:	ldr	r0, [fp, #-16]
   1e080:	bl	11270 <fcntl64@plt>
   1e084:	str	r0, [fp, #-8]
   1e088:	ldr	r3, [fp, #-8]
   1e08c:	mov	r0, r3
   1e090:	sub	sp, fp, #4
   1e094:	ldr	fp, [sp]
   1e098:	add	sp, sp, #4
   1e09c:	pop	{pc}		; (ldr pc, [sp], #4)
   1e0a0:	str	fp, [sp, #-8]!
   1e0a4:	str	lr, [sp, #4]
   1e0a8:	add	fp, sp, #4
   1e0ac:	sub	sp, sp, #24
   1e0b0:	str	r0, [fp, #-24]	; 0xffffffe8
   1e0b4:	str	r1, [fp, #-28]	; 0xffffffe4
   1e0b8:	movw	r3, #4868	; 0x1304
   1e0bc:	movt	r3, #3
   1e0c0:	ldr	r3, [r3]
   1e0c4:	cmp	r3, #0
   1e0c8:	blt	1e144 <__assert_fail@plt+0xcde4>
   1e0cc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e0d0:	movw	r1, #1030	; 0x406
   1e0d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e0d8:	bl	11270 <fcntl64@plt>
   1e0dc:	str	r0, [fp, #-8]
   1e0e0:	ldr	r3, [fp, #-8]
   1e0e4:	cmp	r3, #0
   1e0e8:	bge	1e100 <__assert_fail@plt+0xcda0>
   1e0ec:	bl	11228 <__errno_location@plt>
   1e0f0:	mov	r3, r0
   1e0f4:	ldr	r3, [r3]
   1e0f8:	cmp	r3, #22
   1e0fc:	beq	1e114 <__assert_fail@plt+0xcdb4>
   1e100:	movw	r3, #4868	; 0x1304
   1e104:	movt	r3, #3
   1e108:	mov	r2, #1
   1e10c:	str	r2, [r3]
   1e110:	b	1e154 <__assert_fail@plt+0xcdf4>
   1e114:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e118:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e11c:	bl	1e05c <__assert_fail@plt+0xccfc>
   1e120:	str	r0, [fp, #-8]
   1e124:	ldr	r3, [fp, #-8]
   1e128:	cmp	r3, #0
   1e12c:	blt	1e154 <__assert_fail@plt+0xcdf4>
   1e130:	movw	r3, #4868	; 0x1304
   1e134:	movt	r3, #3
   1e138:	mvn	r2, #0
   1e13c:	str	r2, [r3]
   1e140:	b	1e154 <__assert_fail@plt+0xcdf4>
   1e144:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e148:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e14c:	bl	1e05c <__assert_fail@plt+0xccfc>
   1e150:	str	r0, [fp, #-8]
   1e154:	ldr	r3, [fp, #-8]
   1e158:	cmp	r3, #0
   1e15c:	blt	1e1e4 <__assert_fail@plt+0xce84>
   1e160:	movw	r3, #4868	; 0x1304
   1e164:	movt	r3, #3
   1e168:	ldr	r3, [r3]
   1e16c:	cmn	r3, #1
   1e170:	bne	1e1e4 <__assert_fail@plt+0xce84>
   1e174:	mov	r1, #1
   1e178:	ldr	r0, [fp, #-8]
   1e17c:	bl	11270 <fcntl64@plt>
   1e180:	str	r0, [fp, #-12]
   1e184:	ldr	r3, [fp, #-12]
   1e188:	cmp	r3, #0
   1e18c:	blt	1e1b4 <__assert_fail@plt+0xce54>
   1e190:	ldr	r3, [fp, #-12]
   1e194:	orr	r3, r3, #1
   1e198:	mov	r2, r3
   1e19c:	mov	r1, #2
   1e1a0:	ldr	r0, [fp, #-8]
   1e1a4:	bl	11270 <fcntl64@plt>
   1e1a8:	mov	r3, r0
   1e1ac:	cmn	r3, #1
   1e1b0:	bne	1e1e4 <__assert_fail@plt+0xce84>
   1e1b4:	bl	11228 <__errno_location@plt>
   1e1b8:	mov	r3, r0
   1e1bc:	ldr	r3, [r3]
   1e1c0:	str	r3, [fp, #-16]
   1e1c4:	ldr	r0, [fp, #-8]
   1e1c8:	bl	11324 <close@plt>
   1e1cc:	bl	11228 <__errno_location@plt>
   1e1d0:	mov	r2, r0
   1e1d4:	ldr	r3, [fp, #-16]
   1e1d8:	str	r3, [r2]
   1e1dc:	mvn	r3, #0
   1e1e0:	str	r3, [fp, #-8]
   1e1e4:	ldr	r3, [fp, #-8]
   1e1e8:	mov	r0, r3
   1e1ec:	sub	sp, fp, #4
   1e1f0:	ldr	fp, [sp]
   1e1f4:	add	sp, sp, #4
   1e1f8:	pop	{pc}		; (ldr pc, [sp], #4)
   1e1fc:	push	{r1, r2, r3}
   1e200:	str	fp, [sp, #-8]!
   1e204:	str	lr, [sp, #4]
   1e208:	add	fp, sp, #4
   1e20c:	sub	sp, sp, #20
   1e210:	str	r0, [fp, #-20]	; 0xffffffec
   1e214:	mov	r3, #0
   1e218:	str	r3, [fp, #-12]
   1e21c:	ldr	r3, [fp, #4]
   1e220:	and	r3, r3, #64	; 0x40
   1e224:	cmp	r3, #0
   1e228:	beq	1e248 <__assert_fail@plt+0xcee8>
   1e22c:	add	r3, fp, #8
   1e230:	str	r3, [fp, #-16]
   1e234:	ldr	r3, [fp, #-16]
   1e238:	add	r2, r3, #4
   1e23c:	str	r2, [fp, #-16]
   1e240:	ldr	r3, [r3]
   1e244:	str	r3, [fp, #-12]
   1e248:	ldr	r2, [fp, #-12]
   1e24c:	ldr	r1, [fp, #4]
   1e250:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e254:	bl	11174 <open64@plt>
   1e258:	mov	r3, r0
   1e25c:	mov	r0, r3
   1e260:	bl	1b4f8 <__assert_fail@plt+0xa198>
   1e264:	mov	r3, r0
   1e268:	mov	r0, r3
   1e26c:	sub	sp, fp, #4
   1e270:	ldr	fp, [sp]
   1e274:	ldr	lr, [sp, #4]
   1e278:	add	sp, sp, #8
   1e27c:	add	sp, sp, #12
   1e280:	bx	lr
   1e284:	str	fp, [sp, #-8]!
   1e288:	str	lr, [sp, #4]
   1e28c:	add	fp, sp, #4
   1e290:	sub	sp, sp, #16
   1e294:	str	r0, [fp, #-8]
   1e298:	ldr	r3, [fp, #-8]
   1e29c:	ldr	r3, [r3]
   1e2a0:	and	r3, r3, #256	; 0x100
   1e2a4:	cmp	r3, #0
   1e2a8:	beq	1e2c4 <__assert_fail@plt+0xcf64>
   1e2ac:	mov	r3, #1
   1e2b0:	str	r3, [sp]
   1e2b4:	mov	r2, #0
   1e2b8:	mov	r3, #0
   1e2bc:	ldr	r0, [fp, #-8]
   1e2c0:	bl	1e344 <__assert_fail@plt+0xcfe4>
   1e2c4:	nop	{0}
   1e2c8:	sub	sp, fp, #4
   1e2cc:	ldr	fp, [sp]
   1e2d0:	add	sp, sp, #4
   1e2d4:	pop	{pc}		; (ldr pc, [sp], #4)
   1e2d8:	str	fp, [sp, #-8]!
   1e2dc:	str	lr, [sp, #4]
   1e2e0:	add	fp, sp, #4
   1e2e4:	sub	sp, sp, #8
   1e2e8:	str	r0, [fp, #-8]
   1e2ec:	ldr	r3, [fp, #-8]
   1e2f0:	cmp	r3, #0
   1e2f4:	beq	1e30c <__assert_fail@plt+0xcfac>
   1e2f8:	ldr	r0, [fp, #-8]
   1e2fc:	bl	11198 <__freading@plt>
   1e300:	mov	r3, r0
   1e304:	cmp	r3, #0
   1e308:	bne	1e31c <__assert_fail@plt+0xcfbc>
   1e30c:	ldr	r0, [fp, #-8]
   1e310:	bl	1106c <fflush@plt>
   1e314:	mov	r3, r0
   1e318:	b	1e330 <__assert_fail@plt+0xcfd0>
   1e31c:	ldr	r0, [fp, #-8]
   1e320:	bl	1e284 <__assert_fail@plt+0xcf24>
   1e324:	ldr	r0, [fp, #-8]
   1e328:	bl	1106c <fflush@plt>
   1e32c:	mov	r3, r0
   1e330:	mov	r0, r3
   1e334:	sub	sp, fp, #4
   1e338:	ldr	fp, [sp]
   1e33c:	add	sp, sp, #4
   1e340:	pop	{pc}		; (ldr pc, [sp], #4)
   1e344:	str	fp, [sp, #-8]!
   1e348:	str	lr, [sp, #4]
   1e34c:	add	fp, sp, #4
   1e350:	sub	sp, sp, #32
   1e354:	str	r0, [fp, #-16]
   1e358:	strd	r2, [fp, #-28]	; 0xffffffe4
   1e35c:	ldr	r3, [fp, #-16]
   1e360:	ldr	r2, [r3, #8]
   1e364:	ldr	r3, [fp, #-16]
   1e368:	ldr	r3, [r3, #4]
   1e36c:	cmp	r2, r3
   1e370:	bne	1e408 <__assert_fail@plt+0xd0a8>
   1e374:	ldr	r3, [fp, #-16]
   1e378:	ldr	r2, [r3, #20]
   1e37c:	ldr	r3, [fp, #-16]
   1e380:	ldr	r3, [r3, #16]
   1e384:	cmp	r2, r3
   1e388:	bne	1e408 <__assert_fail@plt+0xd0a8>
   1e38c:	ldr	r3, [fp, #-16]
   1e390:	ldr	r3, [r3, #36]	; 0x24
   1e394:	cmp	r3, #0
   1e398:	bne	1e408 <__assert_fail@plt+0xd0a8>
   1e39c:	ldr	r0, [fp, #-16]
   1e3a0:	bl	1124c <fileno@plt>
   1e3a4:	mov	r1, r0
   1e3a8:	ldr	r3, [fp, #4]
   1e3ac:	str	r3, [sp]
   1e3b0:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   1e3b4:	mov	r0, r1
   1e3b8:	bl	11120 <lseek64@plt>
   1e3bc:	strd	r0, [fp, #-12]
   1e3c0:	ldrd	r2, [fp, #-12]
   1e3c4:	mvn	r0, #0
   1e3c8:	mvn	r1, #0
   1e3cc:	cmp	r3, r1
   1e3d0:	cmpeq	r2, r0
   1e3d4:	bne	1e3e0 <__assert_fail@plt+0xd080>
   1e3d8:	mvn	r3, #0
   1e3dc:	b	1e420 <__assert_fail@plt+0xd0c0>
   1e3e0:	ldr	r3, [fp, #-16]
   1e3e4:	ldr	r3, [r3]
   1e3e8:	bic	r2, r3, #16
   1e3ec:	ldr	r3, [fp, #-16]
   1e3f0:	str	r2, [r3]
   1e3f4:	ldr	r1, [fp, #-16]
   1e3f8:	ldrd	r2, [fp, #-12]
   1e3fc:	strd	r2, [r1, #80]	; 0x50
   1e400:	mov	r3, #0
   1e404:	b	1e420 <__assert_fail@plt+0xd0c0>
   1e408:	ldr	r3, [fp, #4]
   1e40c:	str	r3, [sp]
   1e410:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   1e414:	ldr	r0, [fp, #-16]
   1e418:	bl	11264 <fseeko64@plt>
   1e41c:	mov	r3, r0
   1e420:	mov	r0, r3
   1e424:	sub	sp, fp, #4
   1e428:	ldr	fp, [sp]
   1e42c:	add	sp, sp, #4
   1e430:	pop	{pc}		; (ldr pc, [sp], #4)
   1e434:	str	fp, [sp, #-8]!
   1e438:	str	lr, [sp, #4]
   1e43c:	add	fp, sp, #4
   1e440:	bl	11228 <__errno_location@plt>
   1e444:	mov	r2, r0
   1e448:	mov	r3, #12
   1e44c:	str	r3, [r2]
   1e450:	mov	r3, #0
   1e454:	mov	r0, r3
   1e458:	sub	sp, fp, #4
   1e45c:	ldr	fp, [sp]
   1e460:	add	sp, sp, #4
   1e464:	pop	{pc}		; (ldr pc, [sp], #4)
   1e468:	str	fp, [sp, #-8]!
   1e46c:	str	lr, [sp, #4]
   1e470:	add	fp, sp, #4
   1e474:	sub	sp, sp, #8
   1e478:	str	r0, [fp, #-8]
   1e47c:	ldr	r3, [fp, #-8]
   1e480:	mov	r0, r3
   1e484:	bl	1d51c <__assert_fail@plt+0xc1bc>
   1e488:	mov	r3, r0
   1e48c:	mov	r0, r3
   1e490:	sub	sp, fp, #4
   1e494:	ldr	fp, [sp]
   1e498:	add	sp, sp, #4
   1e49c:	pop	{pc}		; (ldr pc, [sp], #4)
   1e4a0:	str	fp, [sp, #-8]!
   1e4a4:	str	lr, [sp, #4]
   1e4a8:	add	fp, sp, #4
   1e4ac:	sub	sp, sp, #8
   1e4b0:	str	r0, [fp, #-8]
   1e4b4:	str	r1, [fp, #-12]
   1e4b8:	ldr	r3, [fp, #-12]
   1e4bc:	cmp	r3, #0
   1e4c0:	moveq	r3, #1
   1e4c4:	movne	r3, #0
   1e4c8:	uxtb	r3, r3
   1e4cc:	mov	r2, r3
   1e4d0:	ldr	r3, [fp, #-12]
   1e4d4:	orr	r3, r2, r3
   1e4d8:	mov	r1, r3
   1e4dc:	ldr	r0, [fp, #-8]
   1e4e0:	bl	1d5ac <__assert_fail@plt+0xc24c>
   1e4e4:	mov	r3, r0
   1e4e8:	mov	r0, r3
   1e4ec:	sub	sp, fp, #4
   1e4f0:	ldr	fp, [sp]
   1e4f4:	add	sp, sp, #4
   1e4f8:	pop	{pc}		; (ldr pc, [sp], #4)
   1e4fc:	str	fp, [sp, #-8]!
   1e500:	str	lr, [sp, #4]
   1e504:	add	fp, sp, #4
   1e508:	sub	sp, sp, #8
   1e50c:	str	r0, [fp, #-8]
   1e510:	str	r1, [fp, #-12]
   1e514:	ldr	r3, [fp, #-8]
   1e518:	ldr	r2, [fp, #-12]
   1e51c:	mov	r1, r2
   1e520:	mov	r0, r3
   1e524:	bl	1d44c <__assert_fail@plt+0xc0ec>
   1e528:	mov	r3, r0
   1e52c:	mov	r0, r3
   1e530:	sub	sp, fp, #4
   1e534:	ldr	fp, [sp]
   1e538:	add	sp, sp, #4
   1e53c:	pop	{pc}		; (ldr pc, [sp], #4)
   1e540:	str	fp, [sp, #-8]!
   1e544:	str	lr, [sp, #4]
   1e548:	add	fp, sp, #4
   1e54c:	sub	sp, sp, #16
   1e550:	str	r0, [fp, #-8]
   1e554:	str	r1, [fp, #-12]
   1e558:	str	r2, [fp, #-16]
   1e55c:	ldr	r3, [fp, #-12]
   1e560:	cmp	r3, #0
   1e564:	beq	1e574 <__assert_fail@plt+0xd214>
   1e568:	ldr	r3, [fp, #-16]
   1e56c:	cmp	r3, #0
   1e570:	bne	1e584 <__assert_fail@plt+0xd224>
   1e574:	mov	r3, #1
   1e578:	str	r3, [fp, #-16]
   1e57c:	ldr	r3, [fp, #-16]
   1e580:	str	r3, [fp, #-12]
   1e584:	ldr	r3, [fp, #-12]
   1e588:	ldr	r2, [fp, #-16]
   1e58c:	mov	r1, r3
   1e590:	ldr	r0, [fp, #-8]
   1e594:	bl	1e6d0 <__assert_fail@plt+0xd370>
   1e598:	mov	r3, r0
   1e59c:	mov	r0, r3
   1e5a0:	sub	sp, fp, #4
   1e5a4:	ldr	fp, [sp]
   1e5a8:	add	sp, sp, #4
   1e5ac:	pop	{pc}		; (ldr pc, [sp], #4)
   1e5b0:	str	fp, [sp, #-8]!
   1e5b4:	str	lr, [sp, #4]
   1e5b8:	add	fp, sp, #4
   1e5bc:	sub	sp, sp, #8
   1e5c0:	mov	r0, #14
   1e5c4:	bl	112a0 <nl_langinfo@plt>
   1e5c8:	str	r0, [fp, #-8]
   1e5cc:	ldr	r3, [fp, #-8]
   1e5d0:	cmp	r3, #0
   1e5d4:	bne	1e5e4 <__assert_fail@plt+0xd284>
   1e5d8:	movw	r3, #2296	; 0x8f8
   1e5dc:	movt	r3, #2
   1e5e0:	str	r3, [fp, #-8]
   1e5e4:	ldr	r3, [fp, #-8]
   1e5e8:	ldrb	r3, [r3]
   1e5ec:	cmp	r3, #0
   1e5f0:	bne	1e600 <__assert_fail@plt+0xd2a0>
   1e5f4:	movw	r3, #2300	; 0x8fc
   1e5f8:	movt	r3, #2
   1e5fc:	str	r3, [fp, #-8]
   1e600:	ldr	r3, [fp, #-8]
   1e604:	mov	r0, r3
   1e608:	sub	sp, fp, #4
   1e60c:	ldr	fp, [sp]
   1e610:	add	sp, sp, #4
   1e614:	pop	{pc}		; (ldr pc, [sp], #4)
   1e618:	str	fp, [sp, #-8]!
   1e61c:	str	lr, [sp, #4]
   1e620:	add	fp, sp, #4
   1e624:	sub	sp, sp, #32
   1e628:	str	r0, [fp, #-24]	; 0xffffffe8
   1e62c:	str	r1, [fp, #-28]	; 0xffffffe4
   1e630:	str	r2, [fp, #-32]	; 0xffffffe0
   1e634:	str	r3, [fp, #-36]	; 0xffffffdc
   1e638:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e63c:	cmp	r3, #0
   1e640:	bne	1e64c <__assert_fail@plt+0xd2ec>
   1e644:	sub	r3, fp, #16
   1e648:	str	r3, [fp, #-24]	; 0xffffffe8
   1e64c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e650:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e654:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e658:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e65c:	bl	1115c <mbrtowc@plt>
   1e660:	str	r0, [fp, #-8]
   1e664:	ldr	r3, [fp, #-8]
   1e668:	cmn	r3, #3
   1e66c:	bls	1e6b8 <__assert_fail@plt+0xd358>
   1e670:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e674:	cmp	r3, #0
   1e678:	beq	1e6b8 <__assert_fail@plt+0xd358>
   1e67c:	mov	r0, #0
   1e680:	bl	1ecd8 <__assert_fail@plt+0xd978>
   1e684:	mov	r3, r0
   1e688:	eor	r3, r3, #1
   1e68c:	uxtb	r3, r3
   1e690:	cmp	r3, #0
   1e694:	beq	1e6b8 <__assert_fail@plt+0xd358>
   1e698:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e69c:	ldrb	r3, [r3]
   1e6a0:	strb	r3, [fp, #-9]
   1e6a4:	ldrb	r2, [fp, #-9]
   1e6a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e6ac:	str	r2, [r3]
   1e6b0:	mov	r3, #1
   1e6b4:	b	1e6bc <__assert_fail@plt+0xd35c>
   1e6b8:	ldr	r3, [fp, #-8]
   1e6bc:	mov	r0, r3
   1e6c0:	sub	sp, fp, #4
   1e6c4:	ldr	fp, [sp]
   1e6c8:	add	sp, sp, #4
   1e6cc:	pop	{pc}		; (ldr pc, [sp], #4)
   1e6d0:	str	fp, [sp, #-8]!
   1e6d4:	str	lr, [sp, #4]
   1e6d8:	add	fp, sp, #4
   1e6dc:	sub	sp, sp, #24
   1e6e0:	str	r0, [fp, #-16]
   1e6e4:	str	r1, [fp, #-20]	; 0xffffffec
   1e6e8:	str	r2, [fp, #-24]	; 0xffffffe8
   1e6ec:	mov	ip, #0
   1e6f0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e6f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e6f8:	umull	r0, r1, r2, r3
   1e6fc:	mov	r2, #0
   1e700:	mov	r3, #0
   1e704:	mov	r2, r1
   1e708:	mov	r3, #0
   1e70c:	cmp	r2, #0
   1e710:	beq	1e718 <__assert_fail@plt+0xd3b8>
   1e714:	mov	ip, #1
   1e718:	mov	r3, r0
   1e71c:	str	r3, [fp, #-8]
   1e720:	mov	r3, ip
   1e724:	and	r3, r3, #1
   1e728:	uxtb	r3, r3
   1e72c:	cmp	r3, #0
   1e730:	beq	1e74c <__assert_fail@plt+0xd3ec>
   1e734:	bl	11228 <__errno_location@plt>
   1e738:	mov	r2, r0
   1e73c:	mov	r3, #12
   1e740:	str	r3, [r2]
   1e744:	mov	r3, #0
   1e748:	b	1e760 <__assert_fail@plt+0xd400>
   1e74c:	ldr	r3, [fp, #-8]
   1e750:	mov	r1, r3
   1e754:	ldr	r0, [fp, #-16]
   1e758:	bl	1d5ac <__assert_fail@plt+0xc24c>
   1e75c:	mov	r3, r0
   1e760:	mov	r0, r3
   1e764:	sub	sp, fp, #4
   1e768:	ldr	fp, [sp]
   1e76c:	add	sp, sp, #4
   1e770:	pop	{pc}		; (ldr pc, [sp], #4)
   1e774:	str	fp, [sp, #-8]!
   1e778:	str	lr, [sp, #4]
   1e77c:	add	fp, sp, #4
   1e780:	sub	sp, sp, #8
   1e784:	str	r0, [fp, #-8]
   1e788:	mov	r2, #3
   1e78c:	mov	r1, #0
   1e790:	ldr	r0, [fp, #-8]
   1e794:	bl	1de18 <__assert_fail@plt+0xcab8>
   1e798:	mov	r3, r0
   1e79c:	mov	r0, r3
   1e7a0:	sub	sp, fp, #4
   1e7a4:	ldr	fp, [sp]
   1e7a8:	add	sp, sp, #4
   1e7ac:	pop	{pc}		; (ldr pc, [sp], #4)
   1e7b0:	push	{fp}		; (str fp, [sp, #-4]!)
   1e7b4:	add	fp, sp, #0
   1e7b8:	sub	sp, sp, #12
   1e7bc:	str	r0, [fp, #-8]
   1e7c0:	ldr	r3, [fp, #-8]
   1e7c4:	cmp	r3, #90	; 0x5a
   1e7c8:	bgt	1e7ec <__assert_fail@plt+0xd48c>
   1e7cc:	ldr	r3, [fp, #-8]
   1e7d0:	cmp	r3, #65	; 0x41
   1e7d4:	bge	1e7fc <__assert_fail@plt+0xd49c>
   1e7d8:	ldr	r3, [fp, #-8]
   1e7dc:	sub	r3, r3, #48	; 0x30
   1e7e0:	cmp	r3, #9
   1e7e4:	bhi	1e804 <__assert_fail@plt+0xd4a4>
   1e7e8:	b	1e7fc <__assert_fail@plt+0xd49c>
   1e7ec:	ldr	r3, [fp, #-8]
   1e7f0:	sub	r3, r3, #97	; 0x61
   1e7f4:	cmp	r3, #25
   1e7f8:	bhi	1e804 <__assert_fail@plt+0xd4a4>
   1e7fc:	mov	r3, #1
   1e800:	b	1e808 <__assert_fail@plt+0xd4a8>
   1e804:	mov	r3, #0
   1e808:	mov	r0, r3
   1e80c:	add	sp, fp, #0
   1e810:	pop	{fp}		; (ldr fp, [sp], #4)
   1e814:	bx	lr
   1e818:	push	{fp}		; (str fp, [sp, #-4]!)
   1e81c:	add	fp, sp, #0
   1e820:	sub	sp, sp, #12
   1e824:	str	r0, [fp, #-8]
   1e828:	ldr	r3, [fp, #-8]
   1e82c:	cmp	r3, #65	; 0x41
   1e830:	blt	1e858 <__assert_fail@plt+0xd4f8>
   1e834:	ldr	r3, [fp, #-8]
   1e838:	cmp	r3, #90	; 0x5a
   1e83c:	ble	1e850 <__assert_fail@plt+0xd4f0>
   1e840:	ldr	r3, [fp, #-8]
   1e844:	sub	r3, r3, #97	; 0x61
   1e848:	cmp	r3, #25
   1e84c:	bhi	1e858 <__assert_fail@plt+0xd4f8>
   1e850:	mov	r3, #1
   1e854:	b	1e85c <__assert_fail@plt+0xd4fc>
   1e858:	mov	r3, #0
   1e85c:	mov	r0, r3
   1e860:	add	sp, fp, #0
   1e864:	pop	{fp}		; (ldr fp, [sp], #4)
   1e868:	bx	lr
   1e86c:	push	{fp}		; (str fp, [sp, #-4]!)
   1e870:	add	fp, sp, #0
   1e874:	sub	sp, sp, #12
   1e878:	str	r0, [fp, #-8]
   1e87c:	ldr	r3, [fp, #-8]
   1e880:	cmp	r3, #127	; 0x7f
   1e884:	bhi	1e890 <__assert_fail@plt+0xd530>
   1e888:	mov	r3, #1
   1e88c:	b	1e894 <__assert_fail@plt+0xd534>
   1e890:	mov	r3, #0
   1e894:	mov	r0, r3
   1e898:	add	sp, fp, #0
   1e89c:	pop	{fp}		; (ldr fp, [sp], #4)
   1e8a0:	bx	lr
   1e8a4:	push	{fp}		; (str fp, [sp, #-4]!)
   1e8a8:	add	fp, sp, #0
   1e8ac:	sub	sp, sp, #12
   1e8b0:	str	r0, [fp, #-8]
   1e8b4:	ldr	r3, [fp, #-8]
   1e8b8:	cmp	r3, #32
   1e8bc:	beq	1e8cc <__assert_fail@plt+0xd56c>
   1e8c0:	ldr	r3, [fp, #-8]
   1e8c4:	cmp	r3, #9
   1e8c8:	bne	1e8d4 <__assert_fail@plt+0xd574>
   1e8cc:	mov	r3, #1
   1e8d0:	b	1e8d8 <__assert_fail@plt+0xd578>
   1e8d4:	mov	r3, #0
   1e8d8:	and	r3, r3, #1
   1e8dc:	uxtb	r3, r3
   1e8e0:	mov	r0, r3
   1e8e4:	add	sp, fp, #0
   1e8e8:	pop	{fp}		; (ldr fp, [sp], #4)
   1e8ec:	bx	lr
   1e8f0:	push	{fp}		; (str fp, [sp, #-4]!)
   1e8f4:	add	fp, sp, #0
   1e8f8:	sub	sp, sp, #12
   1e8fc:	str	r0, [fp, #-8]
   1e900:	ldr	r3, [fp, #-8]
   1e904:	cmp	r3, #0
   1e908:	blt	1e92c <__assert_fail@plt+0xd5cc>
   1e90c:	ldr	r3, [fp, #-8]
   1e910:	cmp	r3, #31
   1e914:	ble	1e924 <__assert_fail@plt+0xd5c4>
   1e918:	ldr	r3, [fp, #-8]
   1e91c:	cmp	r3, #127	; 0x7f
   1e920:	bne	1e92c <__assert_fail@plt+0xd5cc>
   1e924:	mov	r3, #1
   1e928:	b	1e930 <__assert_fail@plt+0xd5d0>
   1e92c:	mov	r3, #0
   1e930:	mov	r0, r3
   1e934:	add	sp, fp, #0
   1e938:	pop	{fp}		; (ldr fp, [sp], #4)
   1e93c:	bx	lr
   1e940:	push	{fp}		; (str fp, [sp, #-4]!)
   1e944:	add	fp, sp, #0
   1e948:	sub	sp, sp, #12
   1e94c:	str	r0, [fp, #-8]
   1e950:	ldr	r3, [fp, #-8]
   1e954:	sub	r3, r3, #48	; 0x30
   1e958:	cmp	r3, #9
   1e95c:	bhi	1e968 <__assert_fail@plt+0xd608>
   1e960:	mov	r3, #1
   1e964:	b	1e96c <__assert_fail@plt+0xd60c>
   1e968:	mov	r3, #0
   1e96c:	mov	r0, r3
   1e970:	add	sp, fp, #0
   1e974:	pop	{fp}		; (ldr fp, [sp], #4)
   1e978:	bx	lr
   1e97c:	push	{fp}		; (str fp, [sp, #-4]!)
   1e980:	add	fp, sp, #0
   1e984:	sub	sp, sp, #12
   1e988:	str	r0, [fp, #-8]
   1e98c:	ldr	r3, [fp, #-8]
   1e990:	sub	r3, r3, #33	; 0x21
   1e994:	cmp	r3, #93	; 0x5d
   1e998:	bhi	1e9a4 <__assert_fail@plt+0xd644>
   1e99c:	mov	r3, #1
   1e9a0:	b	1e9a8 <__assert_fail@plt+0xd648>
   1e9a4:	mov	r3, #0
   1e9a8:	mov	r0, r3
   1e9ac:	add	sp, fp, #0
   1e9b0:	pop	{fp}		; (ldr fp, [sp], #4)
   1e9b4:	bx	lr
   1e9b8:	push	{fp}		; (str fp, [sp, #-4]!)
   1e9bc:	add	fp, sp, #0
   1e9c0:	sub	sp, sp, #12
   1e9c4:	str	r0, [fp, #-8]
   1e9c8:	ldr	r3, [fp, #-8]
   1e9cc:	sub	r3, r3, #97	; 0x61
   1e9d0:	cmp	r3, #25
   1e9d4:	bhi	1e9e0 <__assert_fail@plt+0xd680>
   1e9d8:	mov	r3, #1
   1e9dc:	b	1e9e4 <__assert_fail@plt+0xd684>
   1e9e0:	mov	r3, #0
   1e9e4:	mov	r0, r3
   1e9e8:	add	sp, fp, #0
   1e9ec:	pop	{fp}		; (ldr fp, [sp], #4)
   1e9f0:	bx	lr
   1e9f4:	push	{fp}		; (str fp, [sp, #-4]!)
   1e9f8:	add	fp, sp, #0
   1e9fc:	sub	sp, sp, #12
   1ea00:	str	r0, [fp, #-8]
   1ea04:	ldr	r3, [fp, #-8]
   1ea08:	sub	r3, r3, #32
   1ea0c:	cmp	r3, #94	; 0x5e
   1ea10:	bhi	1ea1c <__assert_fail@plt+0xd6bc>
   1ea14:	mov	r3, #1
   1ea18:	b	1ea20 <__assert_fail@plt+0xd6c0>
   1ea1c:	mov	r3, #0
   1ea20:	mov	r0, r3
   1ea24:	add	sp, fp, #0
   1ea28:	pop	{fp}		; (ldr fp, [sp], #4)
   1ea2c:	bx	lr
   1ea30:	push	{fp}		; (str fp, [sp, #-4]!)
   1ea34:	add	fp, sp, #0
   1ea38:	sub	sp, sp, #12
   1ea3c:	str	r0, [fp, #-8]
   1ea40:	ldr	r3, [fp, #-8]
   1ea44:	cmp	r3, #64	; 0x40
   1ea48:	bgt	1ea6c <__assert_fail@plt+0xd70c>
   1ea4c:	ldr	r3, [fp, #-8]
   1ea50:	cmp	r3, #58	; 0x3a
   1ea54:	bge	1ea94 <__assert_fail@plt+0xd734>
   1ea58:	ldr	r3, [fp, #-8]
   1ea5c:	sub	r3, r3, #33	; 0x21
   1ea60:	cmp	r3, #14
   1ea64:	bhi	1ea9c <__assert_fail@plt+0xd73c>
   1ea68:	b	1ea94 <__assert_fail@plt+0xd734>
   1ea6c:	ldr	r3, [fp, #-8]
   1ea70:	cmp	r3, #91	; 0x5b
   1ea74:	blt	1ea9c <__assert_fail@plt+0xd73c>
   1ea78:	ldr	r3, [fp, #-8]
   1ea7c:	cmp	r3, #96	; 0x60
   1ea80:	ble	1ea94 <__assert_fail@plt+0xd734>
   1ea84:	ldr	r3, [fp, #-8]
   1ea88:	sub	r3, r3, #123	; 0x7b
   1ea8c:	cmp	r3, #3
   1ea90:	bhi	1ea9c <__assert_fail@plt+0xd73c>
   1ea94:	mov	r3, #1
   1ea98:	b	1eaa0 <__assert_fail@plt+0xd740>
   1ea9c:	mov	r3, #0
   1eaa0:	mov	r0, r3
   1eaa4:	add	sp, fp, #0
   1eaa8:	pop	{fp}		; (ldr fp, [sp], #4)
   1eaac:	bx	lr
   1eab0:	push	{fp}		; (str fp, [sp, #-4]!)
   1eab4:	add	fp, sp, #0
   1eab8:	sub	sp, sp, #12
   1eabc:	str	r0, [fp, #-8]
   1eac0:	ldr	r3, [fp, #-8]
   1eac4:	cmp	r3, #9
   1eac8:	blt	1eaec <__assert_fail@plt+0xd78c>
   1eacc:	ldr	r3, [fp, #-8]
   1ead0:	cmp	r3, #13
   1ead4:	ble	1eae4 <__assert_fail@plt+0xd784>
   1ead8:	ldr	r3, [fp, #-8]
   1eadc:	cmp	r3, #32
   1eae0:	bne	1eaec <__assert_fail@plt+0xd78c>
   1eae4:	mov	r3, #1
   1eae8:	b	1eaf0 <__assert_fail@plt+0xd790>
   1eaec:	mov	r3, #0
   1eaf0:	mov	r0, r3
   1eaf4:	add	sp, fp, #0
   1eaf8:	pop	{fp}		; (ldr fp, [sp], #4)
   1eafc:	bx	lr
   1eb00:	push	{fp}		; (str fp, [sp, #-4]!)
   1eb04:	add	fp, sp, #0
   1eb08:	sub	sp, sp, #12
   1eb0c:	str	r0, [fp, #-8]
   1eb10:	ldr	r3, [fp, #-8]
   1eb14:	sub	r3, r3, #65	; 0x41
   1eb18:	cmp	r3, #25
   1eb1c:	bhi	1eb28 <__assert_fail@plt+0xd7c8>
   1eb20:	mov	r3, #1
   1eb24:	b	1eb2c <__assert_fail@plt+0xd7cc>
   1eb28:	mov	r3, #0
   1eb2c:	mov	r0, r3
   1eb30:	add	sp, fp, #0
   1eb34:	pop	{fp}		; (ldr fp, [sp], #4)
   1eb38:	bx	lr
   1eb3c:	push	{fp}		; (str fp, [sp, #-4]!)
   1eb40:	add	fp, sp, #0
   1eb44:	sub	sp, sp, #12
   1eb48:	str	r0, [fp, #-8]
   1eb4c:	ldr	r3, [fp, #-8]
   1eb50:	sub	r3, r3, #48	; 0x30
   1eb54:	cmp	r3, #54	; 0x36
   1eb58:	ldrls	pc, [pc, r3, lsl #2]
   1eb5c:	b	1ec44 <__assert_fail@plt+0xd8e4>
   1eb60:	andeq	lr, r1, ip, lsr ip
   1eb64:	andeq	lr, r1, ip, lsr ip
   1eb68:	andeq	lr, r1, ip, lsr ip
   1eb6c:	andeq	lr, r1, ip, lsr ip
   1eb70:	andeq	lr, r1, ip, lsr ip
   1eb74:	andeq	lr, r1, ip, lsr ip
   1eb78:	andeq	lr, r1, ip, lsr ip
   1eb7c:	andeq	lr, r1, ip, lsr ip
   1eb80:	andeq	lr, r1, ip, lsr ip
   1eb84:	andeq	lr, r1, ip, lsr ip
   1eb88:	andeq	lr, r1, r4, asr #24
   1eb8c:	andeq	lr, r1, r4, asr #24
   1eb90:	andeq	lr, r1, r4, asr #24
   1eb94:	andeq	lr, r1, r4, asr #24
   1eb98:	andeq	lr, r1, r4, asr #24
   1eb9c:	andeq	lr, r1, r4, asr #24
   1eba0:	andeq	lr, r1, r4, asr #24
   1eba4:	andeq	lr, r1, ip, lsr ip
   1eba8:	andeq	lr, r1, ip, lsr ip
   1ebac:	andeq	lr, r1, ip, lsr ip
   1ebb0:	andeq	lr, r1, ip, lsr ip
   1ebb4:	andeq	lr, r1, ip, lsr ip
   1ebb8:	andeq	lr, r1, ip, lsr ip
   1ebbc:	andeq	lr, r1, r4, asr #24
   1ebc0:	andeq	lr, r1, r4, asr #24
   1ebc4:	andeq	lr, r1, r4, asr #24
   1ebc8:	andeq	lr, r1, r4, asr #24
   1ebcc:	andeq	lr, r1, r4, asr #24
   1ebd0:	andeq	lr, r1, r4, asr #24
   1ebd4:	andeq	lr, r1, r4, asr #24
   1ebd8:	andeq	lr, r1, r4, asr #24
   1ebdc:	andeq	lr, r1, r4, asr #24
   1ebe0:	andeq	lr, r1, r4, asr #24
   1ebe4:	andeq	lr, r1, r4, asr #24
   1ebe8:	andeq	lr, r1, r4, asr #24
   1ebec:	andeq	lr, r1, r4, asr #24
   1ebf0:	andeq	lr, r1, r4, asr #24
   1ebf4:	andeq	lr, r1, r4, asr #24
   1ebf8:	andeq	lr, r1, r4, asr #24
   1ebfc:	andeq	lr, r1, r4, asr #24
   1ec00:	andeq	lr, r1, r4, asr #24
   1ec04:	andeq	lr, r1, r4, asr #24
   1ec08:	andeq	lr, r1, r4, asr #24
   1ec0c:	andeq	lr, r1, r4, asr #24
   1ec10:	andeq	lr, r1, r4, asr #24
   1ec14:	andeq	lr, r1, r4, asr #24
   1ec18:	andeq	lr, r1, r4, asr #24
   1ec1c:	andeq	lr, r1, r4, asr #24
   1ec20:	andeq	lr, r1, r4, asr #24
   1ec24:	andeq	lr, r1, ip, lsr ip
   1ec28:	andeq	lr, r1, ip, lsr ip
   1ec2c:	andeq	lr, r1, ip, lsr ip
   1ec30:	andeq	lr, r1, ip, lsr ip
   1ec34:	andeq	lr, r1, ip, lsr ip
   1ec38:	andeq	lr, r1, ip, lsr ip
   1ec3c:	mov	r3, #1
   1ec40:	b	1ec48 <__assert_fail@plt+0xd8e8>
   1ec44:	mov	r3, #0
   1ec48:	mov	r0, r3
   1ec4c:	add	sp, fp, #0
   1ec50:	pop	{fp}		; (ldr fp, [sp], #4)
   1ec54:	bx	lr
   1ec58:	push	{fp}		; (str fp, [sp, #-4]!)
   1ec5c:	add	fp, sp, #0
   1ec60:	sub	sp, sp, #12
   1ec64:	str	r0, [fp, #-8]
   1ec68:	ldr	r3, [fp, #-8]
   1ec6c:	sub	r3, r3, #65	; 0x41
   1ec70:	cmp	r3, #25
   1ec74:	bhi	1ec84 <__assert_fail@plt+0xd924>
   1ec78:	ldr	r3, [fp, #-8]
   1ec7c:	add	r3, r3, #32
   1ec80:	b	1ec88 <__assert_fail@plt+0xd928>
   1ec84:	ldr	r3, [fp, #-8]
   1ec88:	mov	r0, r3
   1ec8c:	add	sp, fp, #0
   1ec90:	pop	{fp}		; (ldr fp, [sp], #4)
   1ec94:	bx	lr
   1ec98:	push	{fp}		; (str fp, [sp, #-4]!)
   1ec9c:	add	fp, sp, #0
   1eca0:	sub	sp, sp, #12
   1eca4:	str	r0, [fp, #-8]
   1eca8:	ldr	r3, [fp, #-8]
   1ecac:	sub	r3, r3, #97	; 0x61
   1ecb0:	cmp	r3, #25
   1ecb4:	bhi	1ecc4 <__assert_fail@plt+0xd964>
   1ecb8:	ldr	r3, [fp, #-8]
   1ecbc:	sub	r3, r3, #32
   1ecc0:	b	1ecc8 <__assert_fail@plt+0xd968>
   1ecc4:	ldr	r3, [fp, #-8]
   1ecc8:	mov	r0, r3
   1eccc:	add	sp, fp, #0
   1ecd0:	pop	{fp}		; (ldr fp, [sp], #4)
   1ecd4:	bx	lr
   1ecd8:	str	fp, [sp, #-8]!
   1ecdc:	str	lr, [sp, #4]
   1ece0:	add	fp, sp, #4
   1ece4:	sub	sp, sp, #272	; 0x110
   1ece8:	str	r0, [fp, #-272]	; 0xfffffef0
   1ecec:	sub	r3, fp, #264	; 0x108
   1ecf0:	movw	r2, #257	; 0x101
   1ecf4:	mov	r1, r3
   1ecf8:	ldr	r0, [fp, #-272]	; 0xfffffef0
   1ecfc:	bl	1ee9c <__assert_fail@plt+0xdb3c>
   1ed00:	mov	r3, r0
   1ed04:	cmp	r3, #0
   1ed08:	beq	1ed14 <__assert_fail@plt+0xd9b4>
   1ed0c:	mov	r3, #0
   1ed10:	b	1ed68 <__assert_fail@plt+0xda08>
   1ed14:	sub	r3, fp, #264	; 0x108
   1ed18:	movw	r1, #2308	; 0x904
   1ed1c:	movt	r1, #2
   1ed20:	mov	r0, r3
   1ed24:	bl	11048 <strcmp@plt>
   1ed28:	mov	r3, r0
   1ed2c:	cmp	r3, #0
   1ed30:	beq	1ed5c <__assert_fail@plt+0xd9fc>
   1ed34:	sub	r3, fp, #264	; 0x108
   1ed38:	movw	r1, #2312	; 0x908
   1ed3c:	movt	r1, #2
   1ed40:	mov	r0, r3
   1ed44:	bl	11048 <strcmp@plt>
   1ed48:	mov	r3, r0
   1ed4c:	cmp	r3, #0
   1ed50:	beq	1ed5c <__assert_fail@plt+0xd9fc>
   1ed54:	mov	r3, #1
   1ed58:	b	1ed60 <__assert_fail@plt+0xda00>
   1ed5c:	mov	r3, #0
   1ed60:	and	r3, r3, #1
   1ed64:	uxtb	r3, r3
   1ed68:	mov	r0, r3
   1ed6c:	sub	sp, fp, #4
   1ed70:	ldr	fp, [sp]
   1ed74:	add	sp, sp, #4
   1ed78:	pop	{pc}		; (ldr pc, [sp], #4)
   1ed7c:	str	fp, [sp, #-8]!
   1ed80:	str	lr, [sp, #4]
   1ed84:	add	fp, sp, #4
   1ed88:	sub	sp, sp, #16
   1ed8c:	str	r0, [fp, #-16]
   1ed90:	mov	r1, #0
   1ed94:	ldr	r0, [fp, #-16]
   1ed98:	bl	1127c <setlocale@plt>
   1ed9c:	str	r0, [fp, #-8]
   1eda0:	ldr	r3, [fp, #-8]
   1eda4:	mov	r0, r3
   1eda8:	sub	sp, fp, #4
   1edac:	ldr	fp, [sp]
   1edb0:	add	sp, sp, #4
   1edb4:	pop	{pc}		; (ldr pc, [sp], #4)
   1edb8:	str	fp, [sp, #-8]!
   1edbc:	str	lr, [sp, #4]
   1edc0:	add	fp, sp, #4
   1edc4:	sub	sp, sp, #24
   1edc8:	str	r0, [fp, #-16]
   1edcc:	str	r1, [fp, #-20]	; 0xffffffec
   1edd0:	str	r2, [fp, #-24]	; 0xffffffe8
   1edd4:	ldr	r0, [fp, #-16]
   1edd8:	bl	1ed7c <__assert_fail@plt+0xda1c>
   1eddc:	str	r0, [fp, #-8]
   1ede0:	ldr	r3, [fp, #-8]
   1ede4:	cmp	r3, #0
   1ede8:	bne	1ee0c <__assert_fail@plt+0xdaac>
   1edec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1edf0:	cmp	r3, #0
   1edf4:	beq	1ee04 <__assert_fail@plt+0xdaa4>
   1edf8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1edfc:	mov	r2, #0
   1ee00:	strb	r2, [r3]
   1ee04:	mov	r3, #22
   1ee08:	b	1ee88 <__assert_fail@plt+0xdb28>
   1ee0c:	ldr	r0, [fp, #-8]
   1ee10:	bl	111ec <strlen@plt>
   1ee14:	str	r0, [fp, #-12]
   1ee18:	ldr	r2, [fp, #-12]
   1ee1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ee20:	cmp	r2, r3
   1ee24:	bcs	1ee48 <__assert_fail@plt+0xdae8>
   1ee28:	ldr	r3, [fp, #-12]
   1ee2c:	add	r3, r3, #1
   1ee30:	mov	r2, r3
   1ee34:	ldr	r1, [fp, #-8]
   1ee38:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ee3c:	bl	1109c <memcpy@plt>
   1ee40:	mov	r3, #0
   1ee44:	b	1ee88 <__assert_fail@plt+0xdb28>
   1ee48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ee4c:	cmp	r3, #0
   1ee50:	beq	1ee84 <__assert_fail@plt+0xdb24>
   1ee54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ee58:	sub	r3, r3, #1
   1ee5c:	mov	r2, r3
   1ee60:	ldr	r1, [fp, #-8]
   1ee64:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ee68:	bl	1109c <memcpy@plt>
   1ee6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ee70:	sub	r3, r3, #1
   1ee74:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ee78:	add	r3, r2, r3
   1ee7c:	mov	r2, #0
   1ee80:	strb	r2, [r3]
   1ee84:	mov	r3, #34	; 0x22
   1ee88:	mov	r0, r3
   1ee8c:	sub	sp, fp, #4
   1ee90:	ldr	fp, [sp]
   1ee94:	add	sp, sp, #4
   1ee98:	pop	{pc}		; (ldr pc, [sp], #4)
   1ee9c:	str	fp, [sp, #-8]!
   1eea0:	str	lr, [sp, #4]
   1eea4:	add	fp, sp, #4
   1eea8:	sub	sp, sp, #16
   1eeac:	str	r0, [fp, #-8]
   1eeb0:	str	r1, [fp, #-12]
   1eeb4:	str	r2, [fp, #-16]
   1eeb8:	ldr	r2, [fp, #-16]
   1eebc:	ldr	r1, [fp, #-12]
   1eec0:	ldr	r0, [fp, #-8]
   1eec4:	bl	1edb8 <__assert_fail@plt+0xda58>
   1eec8:	mov	r3, r0
   1eecc:	mov	r0, r3
   1eed0:	sub	sp, fp, #4
   1eed4:	ldr	fp, [sp]
   1eed8:	add	sp, sp, #4
   1eedc:	pop	{pc}		; (ldr pc, [sp], #4)
   1eee0:	str	fp, [sp, #-8]!
   1eee4:	str	lr, [sp, #4]
   1eee8:	add	fp, sp, #4
   1eeec:	sub	sp, sp, #8
   1eef0:	str	r0, [fp, #-8]
   1eef4:	ldr	r0, [fp, #-8]
   1eef8:	bl	1ed7c <__assert_fail@plt+0xda1c>
   1eefc:	mov	r3, r0
   1ef00:	mov	r0, r3
   1ef04:	sub	sp, fp, #4
   1ef08:	ldr	fp, [sp]
   1ef0c:	add	sp, sp, #4
   1ef10:	pop	{pc}		; (ldr pc, [sp], #4)
   1ef14:	cmp	r3, #0
   1ef18:	cmpeq	r2, #0
   1ef1c:	bne	1ef34 <__assert_fail@plt+0xdbd4>
   1ef20:	cmp	r1, #0
   1ef24:	cmpeq	r0, #0
   1ef28:	mvnne	r1, #0
   1ef2c:	mvnne	r0, #0
   1ef30:	b	1ef50 <__assert_fail@plt+0xdbf0>
   1ef34:	sub	sp, sp, #8
   1ef38:	push	{sp, lr}
   1ef3c:	bl	1ef60 <__assert_fail@plt+0xdc00>
   1ef40:	ldr	lr, [sp, #4]
   1ef44:	add	sp, sp, #8
   1ef48:	pop	{r2, r3}
   1ef4c:	bx	lr
   1ef50:	push	{r1, lr}
   1ef54:	mov	r0, #8
   1ef58:	bl	11030 <raise@plt>
   1ef5c:	pop	{r1, pc}
   1ef60:	cmp	r1, r3
   1ef64:	cmpeq	r0, r2
   1ef68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ef6c:	mov	r4, r0
   1ef70:	movcc	r0, #0
   1ef74:	mov	r5, r1
   1ef78:	ldr	lr, [sp, #36]	; 0x24
   1ef7c:	movcc	r1, r0
   1ef80:	bcc	1f07c <__assert_fail@plt+0xdd1c>
   1ef84:	cmp	r3, #0
   1ef88:	clzeq	ip, r2
   1ef8c:	clzne	ip, r3
   1ef90:	addeq	ip, ip, #32
   1ef94:	cmp	r5, #0
   1ef98:	clzeq	r1, r4
   1ef9c:	addeq	r1, r1, #32
   1efa0:	clzne	r1, r5
   1efa4:	sub	ip, ip, r1
   1efa8:	sub	sl, ip, #32
   1efac:	lsl	r9, r3, ip
   1efb0:	rsb	fp, ip, #32
   1efb4:	orr	r9, r9, r2, lsl sl
   1efb8:	orr	r9, r9, r2, lsr fp
   1efbc:	lsl	r8, r2, ip
   1efc0:	cmp	r5, r9
   1efc4:	cmpeq	r4, r8
   1efc8:	movcc	r0, #0
   1efcc:	movcc	r1, r0
   1efd0:	bcc	1efec <__assert_fail@plt+0xdc8c>
   1efd4:	mov	r0, #1
   1efd8:	subs	r4, r4, r8
   1efdc:	lsl	r1, r0, sl
   1efe0:	orr	r1, r1, r0, lsr fp
   1efe4:	lsl	r0, r0, ip
   1efe8:	sbc	r5, r5, r9
   1efec:	cmp	ip, #0
   1eff0:	beq	1f07c <__assert_fail@plt+0xdd1c>
   1eff4:	lsr	r6, r8, #1
   1eff8:	orr	r6, r6, r9, lsl #31
   1effc:	lsr	r7, r9, #1
   1f000:	mov	r2, ip
   1f004:	b	1f028 <__assert_fail@plt+0xdcc8>
   1f008:	subs	r3, r4, r6
   1f00c:	sbc	r8, r5, r7
   1f010:	adds	r3, r3, r3
   1f014:	adc	r8, r8, r8
   1f018:	adds	r4, r3, #1
   1f01c:	adc	r5, r8, #0
   1f020:	subs	r2, r2, #1
   1f024:	beq	1f044 <__assert_fail@plt+0xdce4>
   1f028:	cmp	r5, r7
   1f02c:	cmpeq	r4, r6
   1f030:	bcs	1f008 <__assert_fail@plt+0xdca8>
   1f034:	adds	r4, r4, r4
   1f038:	adc	r5, r5, r5
   1f03c:	subs	r2, r2, #1
   1f040:	bne	1f028 <__assert_fail@plt+0xdcc8>
   1f044:	lsr	r3, r4, ip
   1f048:	orr	r3, r3, r5, lsl fp
   1f04c:	lsr	r2, r5, ip
   1f050:	orr	r3, r3, r5, lsr sl
   1f054:	adds	r0, r0, r4
   1f058:	mov	r4, r3
   1f05c:	lsl	r3, r2, ip
   1f060:	orr	r3, r3, r4, lsl sl
   1f064:	lsl	ip, r4, ip
   1f068:	orr	r3, r3, r4, lsr fp
   1f06c:	adc	r1, r1, r5
   1f070:	subs	r0, r0, ip
   1f074:	mov	r5, r2
   1f078:	sbc	r1, r1, r3
   1f07c:	cmp	lr, #0
   1f080:	strdne	r4, [lr]
   1f084:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f088:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1f08c:	mov	r7, r0
   1f090:	ldr	r6, [pc, #72]	; 1f0e0 <__assert_fail@plt+0xdd80>
   1f094:	ldr	r5, [pc, #72]	; 1f0e4 <__assert_fail@plt+0xdd84>
   1f098:	add	r6, pc, r6
   1f09c:	add	r5, pc, r5
   1f0a0:	sub	r6, r6, r5
   1f0a4:	mov	r8, r1
   1f0a8:	mov	r9, r2
   1f0ac:	bl	10fe0 <fstatfs64@plt-0x20>
   1f0b0:	asrs	r6, r6, #2
   1f0b4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1f0b8:	mov	r4, #0
   1f0bc:	add	r4, r4, #1
   1f0c0:	ldr	r3, [r5], #4
   1f0c4:	mov	r2, r9
   1f0c8:	mov	r1, r8
   1f0cc:	mov	r0, r7
   1f0d0:	blx	r3
   1f0d4:	cmp	r6, r4
   1f0d8:	bne	1f0bc <__assert_fail@plt+0xdd5c>
   1f0dc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1f0e0:	andeq	r1, r1, r4, ror lr
   1f0e4:	andeq	r1, r1, ip, ror #28
   1f0e8:	bx	lr
   1f0ec:	ldr	r3, [pc, #12]	; 1f100 <__assert_fail@plt+0xdda0>
   1f0f0:	mov	r1, #0
   1f0f4:	add	r3, pc, r3
   1f0f8:	ldr	r2, [r3]
   1f0fc:	b	11234 <__cxa_atexit@plt>
   1f100:	andeq	r2, r1, ip, lsr r0
   1f104:	mov	r2, r1
   1f108:	mov	r1, r0
   1f10c:	mov	r0, #3
   1f110:	b	11300 <__xstat64@plt>
   1f114:	mov	r2, r1
   1f118:	mov	r1, r0
   1f11c:	mov	r0, #3
   1f120:	b	11108 <__fxstat64@plt>
   1f124:	mov	r2, r1
   1f128:	mov	r1, r0
   1f12c:	mov	r0, #3
   1f130:	b	11330 <__lxstat64@plt>
   1f134:	push	{lr}		; (str lr, [sp, #-4]!)
   1f138:	sub	sp, sp, #12
   1f13c:	str	r3, [sp]
   1f140:	mov	r3, r2
   1f144:	mov	r2, r1
   1f148:	mov	r1, r0
   1f14c:	mov	r0, #3
   1f150:	bl	110f0 <__fxstatat64@plt>
   1f154:	add	sp, sp, #12
   1f158:	pop	{pc}		; (ldr pc, [sp], #4)

Disassembly of section .fini:

0001f15c <.fini>:
   1f15c:	push	{r3, lr}
   1f160:	pop	{r3, pc}
