
../repos/sgerbino-table-2fdd8d0/bin/table_row_test:     file format elf32-littlearm


Disassembly of section .init:

00011ee0 <.init>:
   11ee0:	push	{r3, lr}
   11ee4:	bl	11ff0 <_start@@Base+0x3c>
   11ee8:	pop	{r3, pc}

Disassembly of section .plt:

00011eec <strcmp@plt-0x14>:
   11eec:	push	{lr}		; (str lr, [sp, #-4]!)
   11ef0:	ldr	lr, [pc, #4]	; 11efc <strcmp@plt-0x4>
   11ef4:	add	lr, pc, lr
   11ef8:	ldr	pc, [lr, #8]!
   11efc:	andeq	r3, r1, r4, lsl #2

00011f00 <strcmp@plt>:
   11f00:	add	ip, pc, #0, 12
   11f04:	add	ip, ip, #77824	; 0x13000
   11f08:	ldr	pc, [ip, #260]!	; 0x104

00011f0c <printf@plt>:
   11f0c:	add	ip, pc, #0, 12
   11f10:	add	ip, ip, #77824	; 0x13000
   11f14:	ldr	pc, [ip, #252]!	; 0xfc

00011f18 <free@plt>:
   11f18:	add	ip, pc, #0, 12
   11f1c:	add	ip, ip, #77824	; 0x13000
   11f20:	ldr	pc, [ip, #244]!	; 0xf4

00011f24 <time@plt>:
   11f24:	add	ip, pc, #0, 12
   11f28:	add	ip, ip, #77824	; 0x13000
   11f2c:	ldr	pc, [ip, #236]!	; 0xec

00011f30 <realloc@plt>:
   11f30:	add	ip, pc, #0, 12
   11f34:	add	ip, ip, #77824	; 0x13000
   11f38:	ldr	pc, [ip, #228]!	; 0xe4

00011f3c <strcpy@plt>:
   11f3c:	add	ip, pc, #0, 12
   11f40:	add	ip, ip, #77824	; 0x13000
   11f44:	ldr	pc, [ip, #220]!	; 0xdc

00011f48 <malloc@plt>:
   11f48:	add	ip, pc, #0, 12
   11f4c:	add	ip, ip, #77824	; 0x13000
   11f50:	ldr	pc, [ip, #212]!	; 0xd4

00011f54 <__libc_start_main@plt>:
   11f54:	add	ip, pc, #0, 12
   11f58:	add	ip, ip, #77824	; 0x13000
   11f5c:	ldr	pc, [ip, #204]!	; 0xcc

00011f60 <__gmon_start__@plt>:
   11f60:	add	ip, pc, #0, 12
   11f64:	add	ip, ip, #77824	; 0x13000
   11f68:	ldr	pc, [ip, #196]!	; 0xc4

00011f6c <strlen@plt>:
   11f6c:	add	ip, pc, #0, 12
   11f70:	add	ip, ip, #77824	; 0x13000
   11f74:	ldr	pc, [ip, #188]!	; 0xbc

00011f78 <srand@plt>:
   11f78:	add	ip, pc, #0, 12
   11f7c:	add	ip, ip, #77824	; 0x13000
   11f80:	ldr	pc, [ip, #180]!	; 0xb4

00011f84 <snprintf@plt>:
   11f84:	add	ip, pc, #0, 12
   11f88:	add	ip, ip, #77824	; 0x13000
   11f8c:	ldr	pc, [ip, #172]!	; 0xac

00011f90 <__isoc99_sscanf@plt>:
   11f90:	add	ip, pc, #0, 12
   11f94:	add	ip, ip, #77824	; 0x13000
   11f98:	ldr	pc, [ip, #164]!	; 0xa4

00011f9c <rand@plt>:
   11f9c:	add	ip, pc, #0, 12
   11fa0:	add	ip, ip, #77824	; 0x13000
   11fa4:	ldr	pc, [ip, #156]!	; 0x9c

00011fa8 <abort@plt>:
   11fa8:	add	ip, pc, #0, 12
   11fac:	add	ip, ip, #77824	; 0x13000
   11fb0:	ldr	pc, [ip, #148]!	; 0x94

Disassembly of section .text:

00011fb4 <_start@@Base>:
   11fb4:	mov	fp, #0
   11fb8:	mov	lr, #0
   11fbc:	pop	{r1}		; (ldr r1, [sp], #4)
   11fc0:	mov	r2, sp
   11fc4:	push	{r2}		; (str r2, [sp, #-4]!)
   11fc8:	push	{r0}		; (str r0, [sp, #-4]!)
   11fcc:	ldr	ip, [pc, #16]	; 11fe4 <_start@@Base+0x30>
   11fd0:	push	{ip}		; (str ip, [sp, #-4]!)
   11fd4:	ldr	r0, [pc, #12]	; 11fe8 <_start@@Base+0x34>
   11fd8:	ldr	r3, [pc, #12]	; 11fec <_start@@Base+0x38>
   11fdc:	bl	11f54 <__libc_start_main@plt>
   11fe0:	bl	11fa8 <abort@plt>
   11fe4:	andeq	r4, r1, r0, ror #22
   11fe8:	andeq	r2, r1, r4, lsr #1
   11fec:	andeq	r4, r1, r0, lsl #22
   11ff0:	ldr	r3, [pc, #20]	; 1200c <_start@@Base+0x58>
   11ff4:	ldr	r2, [pc, #20]	; 12010 <_start@@Base+0x5c>
   11ff8:	add	r3, pc, r3
   11ffc:	ldr	r2, [r3, r2]
   12000:	cmp	r2, #0
   12004:	bxeq	lr
   12008:	b	11f60 <__gmon_start__@plt>
   1200c:	andeq	r3, r1, r0
   12010:	andeq	r0, r0, r8, asr #32
   12014:	ldr	r0, [pc, #24]	; 12034 <_start@@Base+0x80>
   12018:	ldr	r3, [pc, #24]	; 12038 <_start@@Base+0x84>
   1201c:	cmp	r3, r0
   12020:	bxeq	lr
   12024:	ldr	r3, [pc, #16]	; 1203c <_start@@Base+0x88>
   12028:	cmp	r3, #0
   1202c:	bxeq	lr
   12030:	bx	r3
   12034:	andeq	r5, r2, r4, asr r0
   12038:	andeq	r5, r2, r4, asr r0
   1203c:	andeq	r0, r0, r0
   12040:	ldr	r0, [pc, #36]	; 1206c <_start@@Base+0xb8>
   12044:	ldr	r1, [pc, #36]	; 12070 <_start@@Base+0xbc>
   12048:	sub	r1, r1, r0
   1204c:	asr	r1, r1, #2
   12050:	add	r1, r1, r1, lsr #31
   12054:	asrs	r1, r1, #1
   12058:	bxeq	lr
   1205c:	ldr	r3, [pc, #16]	; 12074 <_start@@Base+0xc0>
   12060:	cmp	r3, #0
   12064:	bxeq	lr
   12068:	bx	r3
   1206c:	andeq	r5, r2, r4, asr r0
   12070:	andeq	r5, r2, r4, asr r0
   12074:	andeq	r0, r0, r0
   12078:	push	{r4, lr}
   1207c:	ldr	r4, [pc, #24]	; 1209c <_start@@Base+0xe8>
   12080:	ldrb	r3, [r4]
   12084:	cmp	r3, #0
   12088:	popne	{r4, pc}
   1208c:	bl	12014 <_start@@Base+0x60>
   12090:	mov	r3, #1
   12094:	strb	r3, [r4]
   12098:	pop	{r4, pc}
   1209c:	andeq	r5, r2, r4, asr r0
   120a0:	b	12040 <_start@@Base+0x8c>

000120a4 <main@@Base>:
   120a4:	push	{r4, r5, r6, sl, fp, lr}
   120a8:	add	fp, sp, #16
   120ac:	sub	sp, sp, #64	; 0x40
   120b0:	add	r0, sp, #4
   120b4:	bl	11f24 <time@plt>
   120b8:	bl	11f78 <srand@plt>
   120bc:	bl	11f9c <rand@plt>
   120c0:	add	r5, sp, #8
   120c4:	mov	r4, r0
   120c8:	mov	r0, r5
   120cc:	bl	12194 <table_init@@Base>
   120d0:	movw	r0, #34079	; 0x851f
   120d4:	mov	r6, #0
   120d8:	movt	r0, #20971	; 0x51eb
   120dc:	umull	r0, r1, r4, r0
   120e0:	lsr	r0, r1, #5
   120e4:	mov	r1, #100	; 0x64
   120e8:	mls	r0, r0, r1, r4
   120ec:	add	r4, r0, #100	; 0x64
   120f0:	mov	r0, r5
   120f4:	bl	13824 <table_add_row@@Base>
   120f8:	add	r6, r6, #1
   120fc:	cmp	r6, r4
   12100:	bcc	120f0 <main@@Base+0x4c>
   12104:	add	r0, sp, #8
   12108:	bl	1381c <table_get_row_length@@Base>
   1210c:	mov	r5, #0
   12110:	cmp	r0, r4
   12114:	beq	12130 <main@@Base+0x8c>
   12118:	mov	r2, r0
   1211c:	movw	r0, #19316	; 0x4b74
   12120:	mov	r1, r4
   12124:	movt	r0, #1
   12128:	bl	11f0c <printf@plt>
   1212c:	mvn	r5, #0
   12130:	add	r0, sp, #8
   12134:	bl	121f0 <table_destroy@@Base>
   12138:	mov	r0, r5
   1213c:	sub	sp, fp, #16
   12140:	pop	{r4, r5, r6, sl, fp, pc}

00012144 <table_new@@Base>:
   12144:	push	{fp, lr}
   12148:	mov	fp, sp
   1214c:	mov	r0, #56	; 0x38
   12150:	bl	11f48 <malloc@plt>
   12154:	mov	r1, #0
   12158:	mov	r2, #10
   1215c:	mov	r3, #20
   12160:	vmov.i32	q8, #0	; 0x00000000
   12164:	str	r1, [r0]
   12168:	stmib	r0, {r1, r2}
   1216c:	str	r1, [r0, #12]
   12170:	str	r1, [r0, #16]
   12174:	str	r1, [r0, #20]
   12178:	str	r3, [r0, #24]
   1217c:	str	r1, [r0, #28]
   12180:	str	r2, [r0, #48]	; 0x30
   12184:	str	r1, [r0, #52]	; 0x34
   12188:	add	r1, r0, #32
   1218c:	vst1.32	{d16-d17}, [r1]
   12190:	pop	{fp, pc}

00012194 <table_init@@Base>:
   12194:	mov	r1, #0
   12198:	mov	r2, #10
   1219c:	mov	r3, #20
   121a0:	vmov.i32	q8, #0	; 0x00000000
   121a4:	str	r1, [r0]
   121a8:	stmib	r0, {r1, r2}
   121ac:	str	r1, [r0, #12]
   121b0:	str	r1, [r0, #16]
   121b4:	str	r1, [r0, #20]
   121b8:	str	r3, [r0, #24]
   121bc:	str	r1, [r0, #28]
   121c0:	str	r2, [r0, #48]	; 0x30
   121c4:	str	r1, [r0, #52]	; 0x34
   121c8:	add	r0, r0, #32
   121cc:	vst1.32	{d16-d17}, [r0]
   121d0:	bx	lr

000121d4 <table_delete@@Base>:
   121d4:	push	{r4, sl, fp, lr}
   121d8:	add	fp, sp, #8
   121dc:	mov	r4, r0
   121e0:	bl	121f0 <table_destroy@@Base>
   121e4:	mov	r0, r4
   121e8:	pop	{r4, sl, fp, lr}
   121ec:	b	11f18 <free@plt>

000121f0 <table_destroy@@Base>:
   121f0:	cmp	r0, #0
   121f4:	bxeq	lr
   121f8:	push	{r4, r5, r6, sl, fp, lr}
   121fc:	add	fp, sp, #16
   12200:	mvn	r1, #0
   12204:	mvn	r2, #0
   12208:	mov	r3, #64	; 0x40
   1220c:	mov	r4, r0
   12210:	bl	12a80 <table_notify@@Base>
   12214:	mov	r0, r4
   12218:	bl	1381c <table_get_row_length@@Base>
   1221c:	cmp	r0, #1
   12220:	blt	12244 <table_destroy@@Base+0x54>
   12224:	mov	r5, r0
   12228:	mov	r6, #0
   1222c:	mov	r0, r4
   12230:	mov	r1, r6
   12234:	bl	137c4 <table_row_destroy@@Base>
   12238:	add	r6, r6, #1
   1223c:	cmp	r5, r6
   12240:	bne	1222c <table_destroy@@Base+0x3c>
   12244:	ldr	r0, [r4, #16]
   12248:	cmp	r0, #0
   1224c:	beq	12254 <table_destroy@@Base+0x64>
   12250:	bl	11f18 <free@plt>
   12254:	mov	r0, r4
   12258:	bl	12b74 <table_get_column_length@@Base>
   1225c:	cmp	r0, #1
   12260:	blt	12284 <table_destroy@@Base+0x94>
   12264:	mov	r5, r0
   12268:	mov	r6, #0
   1226c:	mov	r0, r4
   12270:	mov	r1, r6
   12274:	bl	12b5c <table_column_destroy@@Base>
   12278:	add	r6, r6, #1
   1227c:	cmp	r5, r6
   12280:	bne	1226c <table_destroy@@Base+0x7c>
   12284:	ldr	r0, [r4]
   12288:	cmp	r0, #0
   1228c:	beq	12294 <table_destroy@@Base+0xa4>
   12290:	bl	11f18 <free@plt>
   12294:	ldr	r0, [r4, #36]	; 0x24
   12298:	cmp	r0, #0
   1229c:	beq	122a4 <table_destroy@@Base+0xb4>
   122a0:	bl	11f18 <free@plt>
   122a4:	ldr	r0, [r4, #40]	; 0x28
   122a8:	cmp	r0, #0
   122ac:	beq	122b4 <table_destroy@@Base+0xc4>
   122b0:	bl	11f18 <free@plt>
   122b4:	ldr	r0, [r4, #44]	; 0x2c
   122b8:	cmp	r0, #0
   122bc:	pop	{r4, r5, r6, sl, fp, lr}
   122c0:	beq	122c8 <table_destroy@@Base+0xd8>
   122c4:	b	11f18 <free@plt>
   122c8:	bx	lr

000122cc <table_dupe@@Base>:
   122cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   122d0:	add	fp, sp, #28
   122d4:	sub	sp, sp, #12
   122d8:	mov	r4, r0
   122dc:	bl	1381c <table_get_row_length@@Base>
   122e0:	mov	r8, r0
   122e4:	mov	r0, r4
   122e8:	bl	12b74 <table_get_column_length@@Base>
   122ec:	mov	r6, r0
   122f0:	mov	r0, #56	; 0x38
   122f4:	bl	11f48 <malloc@plt>
   122f8:	mov	sl, r0
   122fc:	mov	r5, #0
   12300:	mov	r0, #10
   12304:	mov	r1, #20
   12308:	cmp	r6, #1
   1230c:	vmov.i32	q8, #0	; 0x00000000
   12310:	str	r5, [sl]
   12314:	str	r5, [sl, #4]
   12318:	str	r0, [sl, #8]
   1231c:	str	r5, [sl, #12]
   12320:	str	r5, [sl, #16]
   12324:	str	r5, [sl, #20]
   12328:	str	r1, [sl, #24]
   1232c:	str	r5, [sl, #28]
   12330:	str	r0, [sl, #48]	; 0x30
   12334:	add	r0, sl, #32
   12338:	str	r5, [sl, #52]	; 0x34
   1233c:	vst1.32	{d16-d17}, [r0]
   12340:	blt	1237c <table_dupe@@Base+0xb0>
   12344:	mov	r0, r4
   12348:	mov	r1, r5
   1234c:	bl	12bd8 <table_get_column_name@@Base>
   12350:	mov	r7, r0
   12354:	mov	r0, r4
   12358:	mov	r1, r5
   1235c:	bl	12be8 <table_get_column_data_type@@Base>
   12360:	mov	r2, r0
   12364:	mov	r0, sl
   12368:	mov	r1, r7
   1236c:	bl	12bfc <table_add_column@@Base>
   12370:	add	r5, r5, #1
   12374:	cmp	r6, r5
   12378:	bne	12344 <table_dupe@@Base+0x78>
   1237c:	cmp	r8, #1
   12380:	blt	127e8 <table_dupe@@Base+0x51c>
   12384:	mov	r5, #0
   12388:	add	r9, sp, #8
   1238c:	mov	r0, sl
   12390:	bl	13824 <table_add_row@@Base>
   12394:	cmp	r6, #1
   12398:	blt	127dc <table_dupe@@Base+0x510>
   1239c:	mov	r7, #0
   123a0:	mov	r0, r4
   123a4:	mov	r1, r7
   123a8:	bl	12be8 <table_get_column_data_type@@Base>
   123ac:	cmp	r0, #23
   123b0:	bhi	127d0 <table_dupe@@Base+0x504>
   123b4:	add	r1, pc, #0
   123b8:	ldr	pc, [r1, r0, lsl #2]
   123bc:	andeq	r2, r1, ip, lsl r4
   123c0:	andeq	r2, r1, r4, asr #8
   123c4:	andeq	r2, r1, ip, ror #8
   123c8:	muleq	r1, r4, r4
   123cc:			; <UNDEFINED> instruction: 0x000124bc
   123d0:	andeq	r2, r1, r4, ror #9
   123d4:	andeq	r2, r1, ip, lsl #10
   123d8:	andeq	r2, r1, r4, lsr r5
   123dc:	andeq	r2, r1, ip, asr r5
   123e0:	andeq	r2, r1, r4, lsl #11
   123e4:	andeq	r2, r1, ip, lsr #11
   123e8:	ldrdeq	r2, [r1], -r4
   123ec:	strdeq	r2, [r1], -ip
   123f0:	andeq	r2, r1, r4, lsr #12
   123f4:	andeq	r2, r1, ip, asr #12
   123f8:	andeq	r2, r1, r4, ror r6
   123fc:	muleq	r1, ip, r6
   12400:	andeq	r2, r1, r0, asr #13
   12404:	andeq	r2, r1, r4, ror #13
   12408:	andeq	r2, r1, r8, lsl #14
   1240c:	andeq	r2, r1, r0, lsr r7
   12410:	andeq	r2, r1, r8, asr r7
   12414:	andeq	r2, r1, r0, lsl #15
   12418:	andeq	r2, r1, r8, lsr #15
   1241c:	mov	r0, r4
   12420:	mov	r1, r5
   12424:	mov	r2, r7
   12428:	bl	13574 <table_get_int@@Base>
   1242c:	mov	r3, r0
   12430:	mov	r0, sl
   12434:	mov	r1, r5
   12438:	mov	r2, r7
   1243c:	bl	13d20 <table_set_int@@Base>
   12440:	b	127d0 <table_dupe@@Base+0x504>
   12444:	mov	r0, r4
   12448:	mov	r1, r5
   1244c:	mov	r2, r7
   12450:	bl	1358c <table_get_uint@@Base>
   12454:	mov	r3, r0
   12458:	mov	r0, sl
   1245c:	mov	r1, r5
   12460:	mov	r2, r7
   12464:	bl	13d48 <table_set_uint@@Base>
   12468:	b	127d0 <table_dupe@@Base+0x504>
   1246c:	mov	r0, r4
   12470:	mov	r1, r5
   12474:	mov	r2, r7
   12478:	bl	135a4 <table_get_int8@@Base>
   1247c:	mov	r3, r0
   12480:	mov	r0, sl
   12484:	mov	r1, r5
   12488:	mov	r2, r7
   1248c:	bl	13d70 <table_set_int8@@Base>
   12490:	b	127d0 <table_dupe@@Base+0x504>
   12494:	mov	r0, r4
   12498:	mov	r1, r5
   1249c:	mov	r2, r7
   124a0:	bl	135bc <table_get_uint8@@Base>
   124a4:	mov	r3, r0
   124a8:	mov	r0, sl
   124ac:	mov	r1, r5
   124b0:	mov	r2, r7
   124b4:	bl	13d98 <table_set_uint8@@Base>
   124b8:	b	127d0 <table_dupe@@Base+0x504>
   124bc:	mov	r0, r4
   124c0:	mov	r1, r5
   124c4:	mov	r2, r7
   124c8:	bl	135d4 <table_get_int16@@Base>
   124cc:	mov	r3, r0
   124d0:	mov	r0, sl
   124d4:	mov	r1, r5
   124d8:	mov	r2, r7
   124dc:	bl	13dc0 <table_set_int16@@Base>
   124e0:	b	127d0 <table_dupe@@Base+0x504>
   124e4:	mov	r0, r4
   124e8:	mov	r1, r5
   124ec:	mov	r2, r7
   124f0:	bl	135ec <table_get_uint16@@Base>
   124f4:	mov	r3, r0
   124f8:	mov	r0, sl
   124fc:	mov	r1, r5
   12500:	mov	r2, r7
   12504:	bl	13de8 <table_set_uint16@@Base>
   12508:	b	127d0 <table_dupe@@Base+0x504>
   1250c:	mov	r0, r4
   12510:	mov	r1, r5
   12514:	mov	r2, r7
   12518:	bl	13604 <table_get_int32@@Base>
   1251c:	mov	r3, r0
   12520:	mov	r0, sl
   12524:	mov	r1, r5
   12528:	mov	r2, r7
   1252c:	bl	13e10 <table_set_int32@@Base>
   12530:	b	127d0 <table_dupe@@Base+0x504>
   12534:	mov	r0, r4
   12538:	mov	r1, r5
   1253c:	mov	r2, r7
   12540:	bl	1361c <table_get_uint32@@Base>
   12544:	mov	r3, r0
   12548:	mov	r0, sl
   1254c:	mov	r1, r5
   12550:	mov	r2, r7
   12554:	bl	13e38 <table_set_uint32@@Base>
   12558:	b	127d0 <table_dupe@@Base+0x504>
   1255c:	mov	r0, r4
   12560:	mov	r1, r5
   12564:	mov	r2, r7
   12568:	bl	13634 <table_get_int64@@Base>
   1256c:	stm	sp, {r0, r1}
   12570:	mov	r0, sl
   12574:	mov	r1, r5
   12578:	mov	r2, r7
   1257c:	bl	13e60 <table_set_int64@@Base>
   12580:	b	127d0 <table_dupe@@Base+0x504>
   12584:	mov	r0, r4
   12588:	mov	r1, r5
   1258c:	mov	r2, r7
   12590:	bl	1364c <table_get_uint64@@Base>
   12594:	stm	sp, {r0, r1}
   12598:	mov	r0, sl
   1259c:	mov	r1, r5
   125a0:	mov	r2, r7
   125a4:	bl	13e94 <table_set_uint64@@Base>
   125a8:	b	127d0 <table_dupe@@Base+0x504>
   125ac:	mov	r0, r4
   125b0:	mov	r1, r5
   125b4:	mov	r2, r7
   125b8:	bl	13664 <table_get_short@@Base>
   125bc:	mov	r3, r0
   125c0:	mov	r0, sl
   125c4:	mov	r1, r5
   125c8:	mov	r2, r7
   125cc:	bl	13ec8 <table_set_short@@Base>
   125d0:	b	127d0 <table_dupe@@Base+0x504>
   125d4:	mov	r0, r4
   125d8:	mov	r1, r5
   125dc:	mov	r2, r7
   125e0:	bl	1367c <table_get_ushort@@Base>
   125e4:	mov	r3, r0
   125e8:	mov	r0, sl
   125ec:	mov	r1, r5
   125f0:	mov	r2, r7
   125f4:	bl	13ef0 <table_set_ushort@@Base>
   125f8:	b	127d0 <table_dupe@@Base+0x504>
   125fc:	mov	r0, r4
   12600:	mov	r1, r5
   12604:	mov	r2, r7
   12608:	bl	13694 <table_get_long@@Base>
   1260c:	mov	r3, r0
   12610:	mov	r0, sl
   12614:	mov	r1, r5
   12618:	mov	r2, r7
   1261c:	bl	13f18 <table_set_long@@Base>
   12620:	b	127d0 <table_dupe@@Base+0x504>
   12624:	mov	r0, r4
   12628:	mov	r1, r5
   1262c:	mov	r2, r7
   12630:	bl	136ac <table_get_ulong@@Base>
   12634:	mov	r3, r0
   12638:	mov	r0, sl
   1263c:	mov	r1, r5
   12640:	mov	r2, r7
   12644:	bl	13f40 <table_set_ulong@@Base>
   12648:	b	127d0 <table_dupe@@Base+0x504>
   1264c:	mov	r0, r4
   12650:	mov	r1, r5
   12654:	mov	r2, r7
   12658:	bl	136c4 <table_get_llong@@Base>
   1265c:	stm	sp, {r0, r1}
   12660:	mov	r0, sl
   12664:	mov	r1, r5
   12668:	mov	r2, r7
   1266c:	bl	13f68 <table_set_llong@@Base>
   12670:	b	127d0 <table_dupe@@Base+0x504>
   12674:	mov	r0, r4
   12678:	mov	r1, r5
   1267c:	mov	r2, r7
   12680:	bl	136dc <table_get_ullong@@Base>
   12684:	stm	sp, {r0, r1}
   12688:	mov	r0, sl
   1268c:	mov	r1, r5
   12690:	mov	r2, r7
   12694:	bl	13f9c <table_set_ullong@@Base>
   12698:	b	127d0 <table_dupe@@Base+0x504>
   1269c:	mov	r0, r4
   126a0:	mov	r1, r5
   126a4:	mov	r2, r7
   126a8:	bl	136f4 <table_get_float@@Base>
   126ac:	mov	r0, sl
   126b0:	mov	r1, r5
   126b4:	mov	r2, r7
   126b8:	bl	13fd0 <table_set_float@@Base>
   126bc:	b	127d0 <table_dupe@@Base+0x504>
   126c0:	mov	r0, r4
   126c4:	mov	r1, r5
   126c8:	mov	r2, r7
   126cc:	bl	1370c <table_get_double@@Base>
   126d0:	mov	r0, sl
   126d4:	mov	r1, r5
   126d8:	mov	r2, r7
   126dc:	bl	13ff8 <table_set_double@@Base>
   126e0:	b	127d0 <table_dupe@@Base+0x504>
   126e4:	mov	r0, r4
   126e8:	mov	r1, r5
   126ec:	mov	r2, r7
   126f0:	bl	13724 <table_get_ldouble@@Base>
   126f4:	mov	r0, sl
   126f8:	mov	r1, r5
   126fc:	mov	r2, r7
   12700:	bl	14020 <table_set_ldouble@@Base>
   12704:	b	127d0 <table_dupe@@Base+0x504>
   12708:	mov	r0, r4
   1270c:	mov	r1, r5
   12710:	mov	r2, r7
   12714:	bl	1373c <table_get_char@@Base>
   12718:	mov	r3, r0
   1271c:	mov	r0, sl
   12720:	mov	r1, r5
   12724:	mov	r2, r7
   12728:	bl	14068 <table_set_char@@Base>
   1272c:	b	127d0 <table_dupe@@Base+0x504>
   12730:	mov	r0, r4
   12734:	mov	r1, r5
   12738:	mov	r2, r7
   1273c:	bl	13754 <table_get_uchar@@Base>
   12740:	mov	r3, r0
   12744:	mov	r0, sl
   12748:	mov	r1, r5
   1274c:	mov	r2, r7
   12750:	bl	14090 <table_set_uchar@@Base>
   12754:	b	127d0 <table_dupe@@Base+0x504>
   12758:	mov	r0, r4
   1275c:	mov	r1, r5
   12760:	mov	r2, r7
   12764:	bl	1376c <table_get_string@@Base>
   12768:	mov	r3, r0
   1276c:	mov	r0, sl
   12770:	mov	r1, r5
   12774:	mov	r2, r7
   12778:	bl	14048 <table_set_string@@Base>
   1277c:	b	127d0 <table_dupe@@Base+0x504>
   12780:	mov	r0, r4
   12784:	mov	r1, r5
   12788:	mov	r2, r7
   1278c:	bl	1355c <table_get_bool@@Base>
   12790:	mov	r3, r0
   12794:	mov	r0, sl
   12798:	mov	r1, r5
   1279c:	mov	r2, r7
   127a0:	bl	13cf8 <table_set_bool@@Base>
   127a4:	b	127d0 <table_dupe@@Base+0x504>
   127a8:	mov	r0, r4
   127ac:	mov	r1, r5
   127b0:	mov	r2, r7
   127b4:	bl	13780 <table_get_ptr@@Base>
   127b8:	str	r0, [sp, #8]
   127bc:	mov	r0, sl
   127c0:	mov	r1, r5
   127c4:	mov	r2, r7
   127c8:	mov	r3, r9
   127cc:	bl	140b8 <table_set_ptr@@Base>
   127d0:	add	r7, r7, #1
   127d4:	cmp	r6, r7
   127d8:	bne	123a0 <table_dupe@@Base+0xd4>
   127dc:	add	r5, r5, #1
   127e0:	cmp	r5, r8
   127e4:	bne	1238c <table_dupe@@Base+0xc0>
   127e8:	mov	r0, sl
   127ec:	sub	sp, fp, #28
   127f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000127f4 <table_get_major_version@@Base>:
   127f4:	mov	r0, #0
   127f8:	bx	lr

000127fc <table_get_minor_version@@Base>:
   127fc:	mov	r0, #0
   12800:	bx	lr

00012804 <table_get_patch_version@@Base>:
   12804:	mov	r0, #0
   12808:	bx	lr

0001280c <table_get_version@@Base>:
   1280c:	movw	r0, #19517	; 0x4c3d
   12810:	movt	r0, #1
   12814:	bx	lr

00012818 <table_get_callback_length@@Base>:
   12818:	ldr	r0, [r0, #32]
   1281c:	bx	lr

00012820 <table_register_callback@@Base>:
   12820:	push	{r4, r5, r6, r7, fp, lr}
   12824:	add	fp, sp, #16
   12828:	mov	r5, r0
   1282c:	ldr	r0, [r0, #32]
   12830:	mov	r4, r3
   12834:	mov	r6, r2
   12838:	mov	r7, r1
   1283c:	cmp	r0, #1
   12840:	blt	12874 <table_register_callback@@Base+0x54>
   12844:	ldr	r2, [r5, #36]	; 0x24
   12848:	mov	r1, #0
   1284c:	ldr	r3, [r2, r1, lsl #2]
   12850:	cmp	r3, r7
   12854:	bne	12868 <table_register_callback@@Base+0x48>
   12858:	ldr	r3, [r5, #40]	; 0x28
   1285c:	ldr	r3, [r3, r1, lsl #2]
   12860:	cmp	r3, r6
   12864:	beq	128f8 <table_register_callback@@Base+0xd8>
   12868:	add	r1, r1, #1
   1286c:	cmp	r1, r0
   12870:	blt	1284c <table_register_callback@@Base+0x2c>
   12874:	ldr	r1, [r5, #48]	; 0x30
   12878:	udiv	r2, r0, r1
   1287c:	mls	r2, r2, r1, r0
   12880:	cmp	r2, #0
   12884:	bne	128d0 <table_register_callback@@Base+0xb0>
   12888:	ldr	r2, [r5, #52]	; 0x34
   1288c:	ldr	r0, [r5, #36]	; 0x24
   12890:	add	r1, r2, r1
   12894:	str	r1, [r5, #52]	; 0x34
   12898:	lsl	r1, r1, #2
   1289c:	bl	11f30 <realloc@plt>
   128a0:	str	r0, [r5, #36]	; 0x24
   128a4:	ldr	r1, [r5, #52]	; 0x34
   128a8:	ldr	r0, [r5, #40]	; 0x28
   128ac:	lsl	r1, r1, #2
   128b0:	bl	11f30 <realloc@plt>
   128b4:	str	r0, [r5, #40]	; 0x28
   128b8:	ldr	r1, [r5, #52]	; 0x34
   128bc:	ldr	r0, [r5, #44]	; 0x2c
   128c0:	lsl	r1, r1, #2
   128c4:	bl	11f30 <realloc@plt>
   128c8:	str	r0, [r5, #44]	; 0x2c
   128cc:	ldr	r0, [r5, #32]
   128d0:	ldr	r1, [r5, #36]	; 0x24
   128d4:	str	r7, [r1, r0, lsl #2]
   128d8:	ldr	r1, [r5, #40]	; 0x28
   128dc:	str	r6, [r1, r0, lsl #2]
   128e0:	ldr	r1, [r5, #44]	; 0x2c
   128e4:	str	r4, [r1, r0, lsl #2]
   128e8:	ldr	r0, [r5, #32]
   128ec:	add	r0, r0, #1
   128f0:	str	r0, [r5, #32]
   128f4:	pop	{r4, r5, r6, r7, fp, pc}
   128f8:	cmp	r1, #0
   128fc:	ldrne	r0, [r5, #44]	; 0x2c
   12900:	ldrne	r2, [r0, r1, lsl #2]
   12904:	orrne	r2, r2, r4
   12908:	strne	r2, [r0, r1, lsl #2]
   1290c:	popne	{r4, r5, r6, r7, fp, pc}
   12910:	b	12874 <table_register_callback@@Base+0x54>

00012914 <table_unregister_callback@@Base>:
   12914:	push	{r4, r5, r6, sl, fp, lr}
   12918:	add	fp, sp, #16
   1291c:	ldr	r4, [r0, #32]
   12920:	cmp	r4, #1
   12924:	blt	1295c <table_unregister_callback@@Base+0x48>
   12928:	ldr	r3, [r0, #36]	; 0x24
   1292c:	mov	r6, r0
   12930:	mov	r0, #0
   12934:	ldr	r5, [r3, r0, lsl #2]
   12938:	cmp	r5, r1
   1293c:	bne	12950 <table_unregister_callback@@Base+0x3c>
   12940:	ldr	r5, [r6, #40]	; 0x28
   12944:	ldr	r5, [r5, r0, lsl #2]
   12948:	cmp	r5, r2
   1294c:	beq	12960 <table_unregister_callback@@Base+0x4c>
   12950:	add	r0, r0, #1
   12954:	cmp	r0, r4
   12958:	blt	12934 <table_unregister_callback@@Base+0x20>
   1295c:	pop	{r4, r5, r6, sl, fp, pc}
   12960:	sub	r1, r4, #1
   12964:	cmp	r0, r1
   12968:	bge	129f8 <table_unregister_callback@@Base+0xe4>
   1296c:	add	r1, r3, r0, lsl #2
   12970:	ldr	r1, [r1, #4]
   12974:	str	r1, [r3, r0, lsl #2]
   12978:	ldr	r1, [r6, #40]	; 0x28
   1297c:	add	r2, r1, r0, lsl #2
   12980:	ldr	r2, [r2, #4]
   12984:	str	r2, [r1, r0, lsl #2]
   12988:	ldr	r1, [r6, #44]	; 0x2c
   1298c:	add	r2, r1, r0, lsl #2
   12990:	ldr	r2, [r2, #4]
   12994:	str	r2, [r1, r0, lsl #2]
   12998:	add	r2, r0, #1
   1299c:	ldr	r1, [r6, #32]
   129a0:	sub	r1, r1, #1
   129a4:	cmp	r2, r1
   129a8:	bge	129f8 <table_unregister_callback@@Base+0xe4>
   129ac:	ldr	r1, [r6, #36]	; 0x24
   129b0:	add	r1, r1, r0, lsl #2
   129b4:	ldr	r2, [r1, #8]
   129b8:	str	r2, [r1, #4]
   129bc:	ldr	r1, [r6, #40]	; 0x28
   129c0:	add	r1, r1, r0, lsl #2
   129c4:	ldr	r2, [r1, #8]
   129c8:	str	r2, [r1, #4]
   129cc:	ldr	r1, [r6, #44]	; 0x2c
   129d0:	add	r1, r1, r0, lsl #2
   129d4:	ldr	r2, [r1, #8]
   129d8:	str	r2, [r1, #4]
   129dc:	add	r2, r0, #1
   129e0:	add	r0, r0, #2
   129e4:	ldr	r1, [r6, #32]
   129e8:	sub	r1, r1, #1
   129ec:	cmp	r0, r1
   129f0:	mov	r0, r2
   129f4:	blt	129ac <table_unregister_callback@@Base+0x98>
   129f8:	str	r1, [r6, #32]
   129fc:	ldr	r2, [r6, #48]	; 0x30
   12a00:	udiv	r0, r1, r2
   12a04:	mls	r0, r0, r2, r1
   12a08:	cmp	r0, #0
   12a0c:	popne	{r4, r5, r6, sl, fp, pc}
   12a10:	ldr	r1, [r6, #52]	; 0x34
   12a14:	ldr	r0, [r6, #36]	; 0x24
   12a18:	subs	r1, r1, r2
   12a1c:	str	r1, [r6, #52]	; 0x34
   12a20:	beq	12a58 <table_unregister_callback@@Base+0x144>
   12a24:	lsl	r1, r1, #2
   12a28:	bl	11f30 <realloc@plt>
   12a2c:	str	r0, [r6, #36]	; 0x24
   12a30:	ldr	r1, [r6, #52]	; 0x34
   12a34:	ldr	r0, [r6, #40]	; 0x28
   12a38:	lsl	r1, r1, #2
   12a3c:	bl	11f30 <realloc@plt>
   12a40:	str	r0, [r6, #40]	; 0x28
   12a44:	ldr	r1, [r6, #52]	; 0x34
   12a48:	ldr	r0, [r6, #44]	; 0x2c
   12a4c:	lsl	r1, r1, #2
   12a50:	bl	11f30 <realloc@plt>
   12a54:	b	12a78 <table_unregister_callback@@Base+0x164>
   12a58:	bl	11f18 <free@plt>
   12a5c:	ldr	r0, [r6, #40]	; 0x28
   12a60:	bl	11f18 <free@plt>
   12a64:	ldr	r0, [r6, #44]	; 0x2c
   12a68:	bl	11f18 <free@plt>
   12a6c:	mov	r0, #0
   12a70:	str	r0, [r6, #36]	; 0x24
   12a74:	str	r0, [r6, #40]	; 0x28
   12a78:	str	r0, [r6, #44]	; 0x2c
   12a7c:	pop	{r4, r5, r6, sl, fp, pc}

00012a80 <table_notify@@Base>:
   12a80:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12a84:	add	fp, sp, #24
   12a88:	sub	sp, sp, #8
   12a8c:	mov	r7, r0
   12a90:	ldr	r0, [r0, #32]
   12a94:	cmp	r0, #1
   12a98:	blt	12af4 <table_notify@@Base+0x74>
   12a9c:	mov	r4, r3
   12aa0:	mov	r8, r2
   12aa4:	mov	r9, r1
   12aa8:	mov	r5, #0
   12aac:	ldr	r1, [r7, #44]	; 0x2c
   12ab0:	ldr	r1, [r1, r5, lsl #2]
   12ab4:	tst	r1, r4
   12ab8:	beq	12ae8 <table_notify@@Base+0x68>
   12abc:	ldr	r0, [r7, #36]	; 0x24
   12ac0:	ldr	r1, [r7, #40]	; 0x28
   12ac4:	mov	r2, r8
   12ac8:	mov	r3, r4
   12acc:	ldr	r6, [r0, r5, lsl #2]
   12ad0:	ldr	r0, [r1, r5, lsl #2]
   12ad4:	mov	r1, r9
   12ad8:	str	r0, [sp]
   12adc:	mov	r0, r7
   12ae0:	blx	r6
   12ae4:	ldr	r0, [r7, #32]
   12ae8:	add	r5, r5, #1
   12aec:	cmp	r5, r0
   12af0:	blt	12aac <table_notify@@Base+0x2c>
   12af4:	sub	sp, fp, #24
   12af8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012afc <table_column_init@@Base>:
   12afc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12b00:	add	fp, sp, #24
   12b04:	ldr	r7, [r0]
   12b08:	mov	r0, r2
   12b0c:	mov	r4, r3
   12b10:	mov	r5, r2
   12b14:	mov	r6, r1
   12b18:	bl	11f6c <strlen@plt>
   12b1c:	add	r0, r0, #1
   12b20:	bl	11f48 <malloc@plt>
   12b24:	ldr	r8, [fp, #8]
   12b28:	add	r6, r6, r6, lsl #1
   12b2c:	cmp	r0, #0
   12b30:	str	r0, [r7, r6, lsl #2]
   12b34:	beq	12b40 <table_column_init@@Base+0x44>
   12b38:	mov	r1, r5
   12b3c:	bl	11f3c <strcpy@plt>
   12b40:	add	r0, r7, r6, lsl #2
   12b44:	stmib	r0, {r4, r8}
   12b48:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012b4c <table_get_col_ptr@@Base>:
   12b4c:	ldr	r0, [r0]
   12b50:	add	r1, r1, r1, lsl #1
   12b54:	add	r0, r0, r1, lsl #2
   12b58:	bx	lr

00012b5c <table_column_destroy@@Base>:
   12b5c:	ldr	r0, [r0]
   12b60:	add	r1, r1, r1, lsl #1
   12b64:	ldr	r0, [r0, r1, lsl #2]
   12b68:	cmp	r0, #0
   12b6c:	bxeq	lr
   12b70:	b	11f18 <free@plt>

00012b74 <table_get_column_length@@Base>:
   12b74:	ldr	r0, [r0, #4]
   12b78:	bx	lr

00012b7c <table_get_column@@Base>:
   12b7c:	push	{r4, r5, r6, r7, fp, lr}
   12b80:	add	fp, sp, #16
   12b84:	ldr	r6, [r0, #4]
   12b88:	cmp	r6, #1
   12b8c:	blt	12bc4 <table_get_column@@Base+0x48>
   12b90:	ldr	r7, [r0]
   12b94:	mov	r5, r1
   12b98:	mov	r4, #0
   12b9c:	ldr	r0, [r7]
   12ba0:	mov	r1, r5
   12ba4:	bl	11f00 <strcmp@plt>
   12ba8:	cmp	r0, #0
   12bac:	beq	12bc8 <table_get_column@@Base+0x4c>
   12bb0:	add	r4, r4, #1
   12bb4:	add	r7, r7, #12
   12bb8:	cmp	r4, r6
   12bbc:	blt	12b9c <table_get_column@@Base+0x20>
   12bc0:	b	12bc8 <table_get_column@@Base+0x4c>
   12bc4:	mov	r4, #0
   12bc8:	cmp	r4, r6
   12bcc:	mvneq	r4, #0
   12bd0:	mov	r0, r4
   12bd4:	pop	{r4, r5, r6, r7, fp, pc}

00012bd8 <table_get_column_name@@Base>:
   12bd8:	ldr	r0, [r0]
   12bdc:	add	r1, r1, r1, lsl #1
   12be0:	ldr	r0, [r0, r1, lsl #2]
   12be4:	bx	lr

00012be8 <table_get_column_data_type@@Base>:
   12be8:	ldr	r0, [r0]
   12bec:	add	r1, r1, r1, lsl #1
   12bf0:	add	r0, r0, r1, lsl #2
   12bf4:	ldr	r0, [r0, #4]
   12bf8:	bx	lr

00012bfc <table_add_column@@Base>:
   12bfc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12c00:	add	fp, sp, #24
   12c04:	sub	sp, sp, #8
   12c08:	mov	r4, r0
   12c0c:	mov	r8, r1
   12c10:	ldr	r0, [r0, #4]
   12c14:	mov	r9, r2
   12c18:	ldr	r1, [r4, #8]
   12c1c:	udiv	r2, r0, r1
   12c20:	mls	r0, r2, r1, r0
   12c24:	cmp	r0, #0
   12c28:	bne	12c94 <table_add_column@@Base+0x98>
   12c2c:	ldr	r2, [r4, #12]
   12c30:	ldr	r0, [r4]
   12c34:	add	r1, r2, r1
   12c38:	str	r1, [r4, #12]
   12c3c:	add	r1, r1, r1, lsl #1
   12c40:	lsl	r1, r1, #2
   12c44:	bl	11f30 <realloc@plt>
   12c48:	str	r0, [r4]
   12c4c:	mov	r0, r4
   12c50:	bl	1381c <table_get_row_length@@Base>
   12c54:	cmp	r0, #1
   12c58:	blt	12c94 <table_add_column@@Base+0x98>
   12c5c:	mov	r6, r0
   12c60:	mov	r7, #0
   12c64:	mov	r0, r4
   12c68:	mov	r1, r7
   12c6c:	bl	137b8 <table_get_row_ptr@@Base>
   12c70:	ldr	r1, [r4, #12]
   12c74:	mov	r5, r0
   12c78:	ldr	r0, [r0]
   12c7c:	lsl	r1, r1, #2
   12c80:	bl	11f30 <realloc@plt>
   12c84:	add	r7, r7, #1
   12c88:	str	r0, [r5]
   12c8c:	cmp	r6, r7
   12c90:	bne	12c64 <table_add_column@@Base+0x68>
   12c94:	mov	r0, r4
   12c98:	bl	1381c <table_get_row_length@@Base>
   12c9c:	ldr	r6, [r4, #4]
   12ca0:	mov	r7, r0
   12ca4:	mov	r0, r9
   12ca8:	bl	13530 <table_get_default_compare_function_for_data_type@@Base>
   12cac:	str	r0, [sp]
   12cb0:	mov	r0, r4
   12cb4:	mov	r1, r6
   12cb8:	mov	r2, r8
   12cbc:	mov	r3, r9
   12cc0:	bl	12afc <table_column_init@@Base>
   12cc4:	cmp	r7, #1
   12cc8:	blt	12cec <table_add_column@@Base+0xf0>
   12ccc:	mov	r5, #0
   12cd0:	mov	r0, r4
   12cd4:	mov	r1, r5
   12cd8:	mov	r2, r6
   12cdc:	bl	140d8 <table_cell_init@@Base>
   12ce0:	add	r5, r5, #1
   12ce4:	cmp	r7, r5
   12ce8:	bne	12cd0 <table_add_column@@Base+0xd4>
   12cec:	ldr	r2, [r4, #4]
   12cf0:	mov	r0, r4
   12cf4:	mvn	r1, #0
   12cf8:	mov	r3, #8
   12cfc:	bl	12a80 <table_notify@@Base>
   12d00:	ldr	r0, [r4, #4]
   12d04:	add	r1, r0, #1
   12d08:	str	r1, [r4, #4]
   12d0c:	sub	sp, fp, #24
   12d10:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012d14 <table_remove_column@@Base>:
   12d14:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12d18:	add	fp, sp, #24
   12d1c:	mov	r5, r0
   12d20:	ldr	r0, [r0]
   12d24:	add	r6, r1, r1, lsl #1
   12d28:	mov	r9, r1
   12d2c:	ldr	r0, [r0, r6, lsl #2]
   12d30:	cmp	r0, #0
   12d34:	beq	12d3c <table_remove_column@@Base+0x28>
   12d38:	bl	11f18 <free@plt>
   12d3c:	ldr	r0, [r5, #4]
   12d40:	sub	r4, r0, #1
   12d44:	cmp	r4, r9
   12d48:	ble	12d78 <table_remove_column@@Base+0x64>
   12d4c:	sub	r0, r4, r9
   12d50:	lsl	r1, r6, #2
   12d54:	ldr	r2, [r5]
   12d58:	subs	r0, r0, #1
   12d5c:	add	r2, r2, r1
   12d60:	add	r1, r1, #12
   12d64:	vldr	d16, [r2, #12]
   12d68:	ldr	r3, [r2, #20]
   12d6c:	str	r3, [r2, #8]
   12d70:	vstr	d16, [r2]
   12d74:	bne	12d54 <table_remove_column@@Base+0x40>
   12d78:	mov	r0, r5
   12d7c:	bl	1381c <table_get_row_length@@Base>
   12d80:	cmp	r0, #1
   12d84:	blt	12de0 <table_remove_column@@Base+0xcc>
   12d88:	mov	r6, r0
   12d8c:	mov	r7, #0
   12d90:	mov	r0, r5
   12d94:	mov	r1, r7
   12d98:	mov	r2, r9
   12d9c:	bl	14114 <table_cell_destroy@@Base>
   12da0:	mov	r0, r5
   12da4:	mov	r1, r7
   12da8:	bl	137b8 <table_get_row_ptr@@Base>
   12dac:	cmp	r4, r9
   12db0:	ble	12dd4 <table_remove_column@@Base+0xc0>
   12db4:	mov	r1, r9
   12db8:	ldr	r2, [r0]
   12dbc:	add	r3, r2, r1, lsl #2
   12dc0:	ldr	r3, [r3, #4]
   12dc4:	str	r3, [r2, r1, lsl #2]
   12dc8:	add	r1, r1, #1
   12dcc:	cmp	r4, r1
   12dd0:	bne	12db8 <table_remove_column@@Base+0xa4>
   12dd4:	add	r7, r7, #1
   12dd8:	cmp	r7, r6
   12ddc:	bne	12d90 <table_remove_column@@Base+0x7c>
   12de0:	ldmib	r5, {r0, r1}
   12de4:	sub	r0, r0, #1
   12de8:	udiv	r2, r0, r1
   12dec:	str	r0, [r5, #4]
   12df0:	mls	r0, r2, r1, r0
   12df4:	cmp	r0, #0
   12df8:	bne	12e64 <table_remove_column@@Base+0x150>
   12dfc:	ldr	r2, [r5, #12]
   12e00:	ldr	r0, [r5]
   12e04:	sub	r1, r2, r1
   12e08:	str	r1, [r5, #12]
   12e0c:	add	r1, r1, r1, lsl #1
   12e10:	lsl	r1, r1, #2
   12e14:	bl	11f30 <realloc@plt>
   12e18:	str	r0, [r5]
   12e1c:	mov	r0, r5
   12e20:	bl	1381c <table_get_row_length@@Base>
   12e24:	cmp	r0, #1
   12e28:	blt	12e64 <table_remove_column@@Base+0x150>
   12e2c:	mov	r8, r0
   12e30:	mov	r7, #0
   12e34:	mov	r0, r5
   12e38:	mov	r1, r7
   12e3c:	bl	137b8 <table_get_row_ptr@@Base>
   12e40:	ldr	r1, [r5, #12]
   12e44:	mov	r6, r0
   12e48:	ldr	r0, [r0]
   12e4c:	lsl	r1, r1, #2
   12e50:	bl	11f30 <realloc@plt>
   12e54:	add	r7, r7, #1
   12e58:	str	r0, [r6]
   12e5c:	cmp	r8, r7
   12e60:	bne	12e34 <table_remove_column@@Base+0x120>
   12e64:	mov	r0, r5
   12e68:	mvn	r1, #0
   12e6c:	mov	r2, r9
   12e70:	mov	r3, #16
   12e74:	bl	12a80 <table_notify@@Base>
   12e78:	mov	r0, #0
   12e7c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012e80 <table_get_column_compare_function@@Base>:
   12e80:	ldr	r0, [r0]
   12e84:	add	r1, r1, r1, lsl #1
   12e88:	add	r0, r0, r1, lsl #2
   12e8c:	ldr	r0, [r0, #8]
   12e90:	bx	lr

00012e94 <table_set_column_compare_function@@Base>:
   12e94:	ldr	r0, [r0]
   12e98:	add	r1, r1, r1, lsl #1
   12e9c:	add	r0, r0, r1, lsl #2
   12ea0:	str	r2, [r0, #8]
   12ea4:	bx	lr

00012ea8 <table_compare_bool@@Base>:
   12ea8:	cmp	r0, #0
   12eac:	beq	12ed4 <table_compare_bool@@Base+0x2c>
   12eb0:	cmp	r1, #0
   12eb4:	beq	12ee0 <table_compare_bool@@Base+0x38>
   12eb8:	ldrb	r2, [r1]
   12ebc:	ldrb	r0, [r0]
   12ec0:	mov	r1, #0
   12ec4:	cmp	r0, r2
   12ec8:	mvncc	r1, #0
   12ecc:	movwhi	r1, #1
   12ed0:	b	12ee4 <table_compare_bool@@Base+0x3c>
   12ed4:	cmp	r1, #0
   12ed8:	mvnne	r1, #0
   12edc:	b	12ee4 <table_compare_bool@@Base+0x3c>
   12ee0:	mov	r1, #1
   12ee4:	mov	r0, r1
   12ee8:	bx	lr

00012eec <table_compare_int@@Base>:
   12eec:	cmp	r0, #0
   12ef0:	beq	12f18 <table_compare_int@@Base+0x2c>
   12ef4:	cmp	r1, #0
   12ef8:	beq	12f24 <table_compare_int@@Base+0x38>
   12efc:	ldr	r2, [r1]
   12f00:	ldr	r0, [r0]
   12f04:	mov	r1, #0
   12f08:	cmp	r0, r2
   12f0c:	mvnlt	r1, #0
   12f10:	movwgt	r1, #1
   12f14:	b	12f28 <table_compare_int@@Base+0x3c>
   12f18:	cmp	r1, #0
   12f1c:	mvnne	r1, #0
   12f20:	b	12f28 <table_compare_int@@Base+0x3c>
   12f24:	mov	r1, #1
   12f28:	mov	r0, r1
   12f2c:	bx	lr

00012f30 <table_compare_uint@@Base>:
   12f30:	cmp	r0, #0
   12f34:	beq	12f5c <table_compare_uint@@Base+0x2c>
   12f38:	cmp	r1, #0
   12f3c:	beq	12f68 <table_compare_uint@@Base+0x38>
   12f40:	ldr	r2, [r1]
   12f44:	ldr	r0, [r0]
   12f48:	mov	r1, #0
   12f4c:	cmp	r0, r2
   12f50:	mvncc	r1, #0
   12f54:	movwhi	r1, #1
   12f58:	b	12f6c <table_compare_uint@@Base+0x3c>
   12f5c:	cmp	r1, #0
   12f60:	mvnne	r1, #0
   12f64:	b	12f6c <table_compare_uint@@Base+0x3c>
   12f68:	mov	r1, #1
   12f6c:	mov	r0, r1
   12f70:	bx	lr

00012f74 <table_compare_int8@@Base>:
   12f74:	cmp	r0, #0
   12f78:	beq	12fa0 <table_compare_int8@@Base+0x2c>
   12f7c:	cmp	r1, #0
   12f80:	beq	12fac <table_compare_int8@@Base+0x38>
   12f84:	ldrsb	r2, [r1]
   12f88:	ldrsb	r0, [r0]
   12f8c:	mov	r1, #0
   12f90:	cmp	r0, r2
   12f94:	mvnlt	r1, #0
   12f98:	movwgt	r1, #1
   12f9c:	b	12fb0 <table_compare_int8@@Base+0x3c>
   12fa0:	cmp	r1, #0
   12fa4:	mvnne	r1, #0
   12fa8:	b	12fb0 <table_compare_int8@@Base+0x3c>
   12fac:	mov	r1, #1
   12fb0:	mov	r0, r1
   12fb4:	bx	lr

00012fb8 <table_compare_uint8@@Base>:
   12fb8:	cmp	r0, #0
   12fbc:	beq	12fe4 <table_compare_uint8@@Base+0x2c>
   12fc0:	cmp	r1, #0
   12fc4:	beq	12ff0 <table_compare_uint8@@Base+0x38>
   12fc8:	ldrb	r2, [r1]
   12fcc:	ldrb	r0, [r0]
   12fd0:	mov	r1, #0
   12fd4:	cmp	r0, r2
   12fd8:	mvncc	r1, #0
   12fdc:	movwhi	r1, #1
   12fe0:	b	12ff4 <table_compare_uint8@@Base+0x3c>
   12fe4:	cmp	r1, #0
   12fe8:	mvnne	r1, #0
   12fec:	b	12ff4 <table_compare_uint8@@Base+0x3c>
   12ff0:	mov	r1, #1
   12ff4:	mov	r0, r1
   12ff8:	bx	lr

00012ffc <table_compare_int16@@Base>:
   12ffc:	cmp	r0, #0
   13000:	beq	13028 <table_compare_int16@@Base+0x2c>
   13004:	cmp	r1, #0
   13008:	beq	13034 <table_compare_int16@@Base+0x38>
   1300c:	ldrsh	r2, [r1]
   13010:	ldrsh	r0, [r0]
   13014:	mov	r1, #0
   13018:	cmp	r0, r2
   1301c:	mvnlt	r1, #0
   13020:	movwgt	r1, #1
   13024:	b	13038 <table_compare_int16@@Base+0x3c>
   13028:	cmp	r1, #0
   1302c:	mvnne	r1, #0
   13030:	b	13038 <table_compare_int16@@Base+0x3c>
   13034:	mov	r1, #1
   13038:	mov	r0, r1
   1303c:	bx	lr

00013040 <table_compare_uint16@@Base>:
   13040:	cmp	r0, #0
   13044:	beq	1306c <table_compare_uint16@@Base+0x2c>
   13048:	cmp	r1, #0
   1304c:	beq	13078 <table_compare_uint16@@Base+0x38>
   13050:	ldrh	r2, [r1]
   13054:	ldrh	r0, [r0]
   13058:	mov	r1, #0
   1305c:	cmp	r0, r2
   13060:	mvncc	r1, #0
   13064:	movwhi	r1, #1
   13068:	b	1307c <table_compare_uint16@@Base+0x3c>
   1306c:	cmp	r1, #0
   13070:	mvnne	r1, #0
   13074:	b	1307c <table_compare_uint16@@Base+0x3c>
   13078:	mov	r1, #1
   1307c:	mov	r0, r1
   13080:	bx	lr

00013084 <table_compare_int32@@Base>:
   13084:	cmp	r0, #0
   13088:	beq	130b0 <table_compare_int32@@Base+0x2c>
   1308c:	cmp	r1, #0
   13090:	beq	130bc <table_compare_int32@@Base+0x38>
   13094:	ldr	r2, [r1]
   13098:	ldr	r0, [r0]
   1309c:	mov	r1, #0
   130a0:	cmp	r0, r2
   130a4:	mvnlt	r1, #0
   130a8:	movwgt	r1, #1
   130ac:	b	130c0 <table_compare_int32@@Base+0x3c>
   130b0:	cmp	r1, #0
   130b4:	mvnne	r1, #0
   130b8:	b	130c0 <table_compare_int32@@Base+0x3c>
   130bc:	mov	r1, #1
   130c0:	mov	r0, r1
   130c4:	bx	lr

000130c8 <table_compare_uint32@@Base>:
   130c8:	cmp	r0, #0
   130cc:	beq	130f4 <table_compare_uint32@@Base+0x2c>
   130d0:	cmp	r1, #0
   130d4:	beq	13100 <table_compare_uint32@@Base+0x38>
   130d8:	ldr	r2, [r1]
   130dc:	ldr	r0, [r0]
   130e0:	mov	r1, #0
   130e4:	cmp	r0, r2
   130e8:	mvncc	r1, #0
   130ec:	movwhi	r1, #1
   130f0:	b	13104 <table_compare_uint32@@Base+0x3c>
   130f4:	cmp	r1, #0
   130f8:	mvnne	r1, #0
   130fc:	b	13104 <table_compare_uint32@@Base+0x3c>
   13100:	mov	r1, #1
   13104:	mov	r0, r1
   13108:	bx	lr

0001310c <table_compare_int64@@Base>:
   1310c:	cmp	r0, #0
   13110:	beq	13158 <table_compare_int64@@Base+0x4c>
   13114:	cmp	r1, #0
   13118:	beq	13164 <table_compare_int64@@Base+0x58>
   1311c:	push	{r5, r7, fp, lr}
   13120:	add	fp, sp, #8
   13124:	ldm	r1, {r2, r7}
   13128:	ldm	r0, {r0, r5}
   1312c:	mov	r1, #0
   13130:	subs	r3, r0, r2
   13134:	sbcs	r3, r5, r7
   13138:	movwlt	r1, #1
   1313c:	cmp	r1, #0
   13140:	mvnne	r1, #0
   13144:	subs	r0, r2, r0
   13148:	sbcs	r0, r7, r5
   1314c:	movwlt	r1, #1
   13150:	pop	{r5, r7, fp, lr}
   13154:	b	13168 <table_compare_int64@@Base+0x5c>
   13158:	cmp	r1, #0
   1315c:	mvnne	r1, #0
   13160:	b	13168 <table_compare_int64@@Base+0x5c>
   13164:	mov	r1, #1
   13168:	mov	r0, r1
   1316c:	bx	lr

00013170 <table_compare_uint64@@Base>:
   13170:	cmp	r0, #0
   13174:	beq	131bc <table_compare_uint64@@Base+0x4c>
   13178:	cmp	r1, #0
   1317c:	beq	131c8 <table_compare_uint64@@Base+0x58>
   13180:	push	{r5, r7, fp, lr}
   13184:	add	fp, sp, #8
   13188:	ldm	r1, {r2, r7}
   1318c:	ldm	r0, {r0, r5}
   13190:	mov	r1, #0
   13194:	subs	r3, r0, r2
   13198:	sbcs	r3, r5, r7
   1319c:	movwcc	r1, #1
   131a0:	cmp	r1, #0
   131a4:	mvnne	r1, #0
   131a8:	subs	r0, r2, r0
   131ac:	sbcs	r0, r7, r5
   131b0:	movwcc	r1, #1
   131b4:	pop	{r5, r7, fp, lr}
   131b8:	b	131cc <table_compare_uint64@@Base+0x5c>
   131bc:	cmp	r1, #0
   131c0:	mvnne	r1, #0
   131c4:	b	131cc <table_compare_uint64@@Base+0x5c>
   131c8:	mov	r1, #1
   131cc:	mov	r0, r1
   131d0:	bx	lr

000131d4 <table_compare_short@@Base>:
   131d4:	cmp	r0, #0
   131d8:	beq	13200 <table_compare_short@@Base+0x2c>
   131dc:	cmp	r1, #0
   131e0:	beq	1320c <table_compare_short@@Base+0x38>
   131e4:	ldrsh	r2, [r1]
   131e8:	ldrsh	r0, [r0]
   131ec:	mov	r1, #0
   131f0:	cmp	r0, r2
   131f4:	mvnlt	r1, #0
   131f8:	movwgt	r1, #1
   131fc:	b	13210 <table_compare_short@@Base+0x3c>
   13200:	cmp	r1, #0
   13204:	mvnne	r1, #0
   13208:	b	13210 <table_compare_short@@Base+0x3c>
   1320c:	mov	r1, #1
   13210:	mov	r0, r1
   13214:	bx	lr

00013218 <table_compare_ushort@@Base>:
   13218:	cmp	r0, #0
   1321c:	beq	13244 <table_compare_ushort@@Base+0x2c>
   13220:	cmp	r1, #0
   13224:	beq	13250 <table_compare_ushort@@Base+0x38>
   13228:	ldrh	r2, [r1]
   1322c:	ldrh	r0, [r0]
   13230:	mov	r1, #0
   13234:	cmp	r0, r2
   13238:	mvncc	r1, #0
   1323c:	movwhi	r1, #1
   13240:	b	13254 <table_compare_ushort@@Base+0x3c>
   13244:	cmp	r1, #0
   13248:	mvnne	r1, #0
   1324c:	b	13254 <table_compare_ushort@@Base+0x3c>
   13250:	mov	r1, #1
   13254:	mov	r0, r1
   13258:	bx	lr

0001325c <table_compare_long@@Base>:
   1325c:	cmp	r0, #0
   13260:	beq	13288 <table_compare_long@@Base+0x2c>
   13264:	cmp	r1, #0
   13268:	beq	13294 <table_compare_long@@Base+0x38>
   1326c:	ldr	r2, [r1]
   13270:	ldr	r0, [r0]
   13274:	mov	r1, #0
   13278:	cmp	r0, r2
   1327c:	mvnlt	r1, #0
   13280:	movwgt	r1, #1
   13284:	b	13298 <table_compare_long@@Base+0x3c>
   13288:	cmp	r1, #0
   1328c:	mvnne	r1, #0
   13290:	b	13298 <table_compare_long@@Base+0x3c>
   13294:	mov	r1, #1
   13298:	mov	r0, r1
   1329c:	bx	lr

000132a0 <table_compare_ulong@@Base>:
   132a0:	cmp	r0, #0
   132a4:	beq	132cc <table_compare_ulong@@Base+0x2c>
   132a8:	cmp	r1, #0
   132ac:	beq	132d8 <table_compare_ulong@@Base+0x38>
   132b0:	ldr	r2, [r1]
   132b4:	ldr	r0, [r0]
   132b8:	mov	r1, #0
   132bc:	cmp	r0, r2
   132c0:	mvncc	r1, #0
   132c4:	movwhi	r1, #1
   132c8:	b	132dc <table_compare_ulong@@Base+0x3c>
   132cc:	cmp	r1, #0
   132d0:	mvnne	r1, #0
   132d4:	b	132dc <table_compare_ulong@@Base+0x3c>
   132d8:	mov	r1, #1
   132dc:	mov	r0, r1
   132e0:	bx	lr

000132e4 <table_compare_llong@@Base>:
   132e4:	cmp	r0, #0
   132e8:	beq	13330 <table_compare_llong@@Base+0x4c>
   132ec:	cmp	r1, #0
   132f0:	beq	1333c <table_compare_llong@@Base+0x58>
   132f4:	push	{r5, r7, fp, lr}
   132f8:	add	fp, sp, #8
   132fc:	ldm	r1, {r2, r7}
   13300:	ldm	r0, {r0, r5}
   13304:	mov	r1, #0
   13308:	subs	r3, r0, r2
   1330c:	sbcs	r3, r5, r7
   13310:	movwlt	r1, #1
   13314:	cmp	r1, #0
   13318:	mvnne	r1, #0
   1331c:	subs	r0, r2, r0
   13320:	sbcs	r0, r7, r5
   13324:	movwlt	r1, #1
   13328:	pop	{r5, r7, fp, lr}
   1332c:	b	13340 <table_compare_llong@@Base+0x5c>
   13330:	cmp	r1, #0
   13334:	mvnne	r1, #0
   13338:	b	13340 <table_compare_llong@@Base+0x5c>
   1333c:	mov	r1, #1
   13340:	mov	r0, r1
   13344:	bx	lr

00013348 <table_compare_ullong@@Base>:
   13348:	cmp	r0, #0
   1334c:	beq	13374 <table_compare_ullong@@Base+0x2c>
   13350:	cmp	r1, #0
   13354:	beq	13380 <table_compare_ullong@@Base+0x38>
   13358:	ldr	r2, [r1]
   1335c:	ldr	r0, [r0]
   13360:	mov	r1, #0
   13364:	cmp	r0, r2
   13368:	mvncc	r1, #0
   1336c:	movwhi	r1, #1
   13370:	b	13384 <table_compare_ullong@@Base+0x3c>
   13374:	cmp	r1, #0
   13378:	mvnne	r1, #0
   1337c:	b	13384 <table_compare_ullong@@Base+0x3c>
   13380:	mov	r1, #1
   13384:	mov	r0, r1
   13388:	bx	lr

0001338c <table_compare_float@@Base>:
   1338c:	cmp	r0, #0
   13390:	beq	133bc <table_compare_float@@Base+0x30>
   13394:	cmp	r1, #0
   13398:	beq	133c8 <table_compare_float@@Base+0x3c>
   1339c:	vldr	s0, [r1]
   133a0:	vldr	s2, [r0]
   133a4:	mov	r1, #0
   133a8:	vcmpe.f32	s2, s0
   133ac:	vmrs	APSR_nzcv, fpscr
   133b0:	mvnmi	r1, #0
   133b4:	movwgt	r1, #1
   133b8:	b	133cc <table_compare_float@@Base+0x40>
   133bc:	cmp	r1, #0
   133c0:	mvnne	r1, #0
   133c4:	b	133cc <table_compare_float@@Base+0x40>
   133c8:	mov	r1, #1
   133cc:	mov	r0, r1
   133d0:	bx	lr

000133d4 <table_compare_double@@Base>:
   133d4:	cmp	r0, #0
   133d8:	beq	13404 <table_compare_double@@Base+0x30>
   133dc:	cmp	r1, #0
   133e0:	beq	13410 <table_compare_double@@Base+0x3c>
   133e4:	vldr	d16, [r1]
   133e8:	vldr	d17, [r0]
   133ec:	mov	r1, #0
   133f0:	vcmpe.f64	d17, d16
   133f4:	vmrs	APSR_nzcv, fpscr
   133f8:	mvnmi	r1, #0
   133fc:	movwgt	r1, #1
   13400:	b	13414 <table_compare_double@@Base+0x40>
   13404:	cmp	r1, #0
   13408:	mvnne	r1, #0
   1340c:	b	13414 <table_compare_double@@Base+0x40>
   13410:	mov	r1, #1
   13414:	mov	r0, r1
   13418:	bx	lr

0001341c <table_compare_ldouble@@Base>:
   1341c:	cmp	r0, #0
   13420:	beq	1344c <table_compare_ldouble@@Base+0x30>
   13424:	cmp	r1, #0
   13428:	beq	13458 <table_compare_ldouble@@Base+0x3c>
   1342c:	vldr	d16, [r1]
   13430:	vldr	d17, [r0]
   13434:	mov	r1, #0
   13438:	vcmpe.f64	d17, d16
   1343c:	vmrs	APSR_nzcv, fpscr
   13440:	mvnmi	r1, #0
   13444:	movwgt	r1, #1
   13448:	b	1345c <table_compare_ldouble@@Base+0x40>
   1344c:	cmp	r1, #0
   13450:	mvnne	r1, #0
   13454:	b	1345c <table_compare_ldouble@@Base+0x40>
   13458:	mov	r1, #1
   1345c:	mov	r0, r1
   13460:	bx	lr

00013464 <table_compare_char@@Base>:
   13464:	cmp	r0, #0
   13468:	beq	13490 <table_compare_char@@Base+0x2c>
   1346c:	cmp	r1, #0
   13470:	beq	1349c <table_compare_char@@Base+0x38>
   13474:	ldrb	r2, [r1]
   13478:	ldrb	r0, [r0]
   1347c:	mov	r1, #0
   13480:	cmp	r0, r2
   13484:	mvncc	r1, #0
   13488:	movwhi	r1, #1
   1348c:	b	134a0 <table_compare_char@@Base+0x3c>
   13490:	cmp	r1, #0
   13494:	mvnne	r1, #0
   13498:	b	134a0 <table_compare_char@@Base+0x3c>
   1349c:	mov	r1, #1
   134a0:	mov	r0, r1
   134a4:	bx	lr

000134a8 <table_compare_uchar@@Base>:
   134a8:	cmp	r0, #0
   134ac:	beq	134d4 <table_compare_uchar@@Base+0x2c>
   134b0:	cmp	r1, #0
   134b4:	beq	134e0 <table_compare_uchar@@Base+0x38>
   134b8:	ldrb	r2, [r1]
   134bc:	ldrb	r0, [r0]
   134c0:	mov	r1, #0
   134c4:	cmp	r0, r2
   134c8:	mvncc	r1, #0
   134cc:	movwhi	r1, #1
   134d0:	b	134e4 <table_compare_uchar@@Base+0x3c>
   134d4:	cmp	r1, #0
   134d8:	mvnne	r1, #0
   134dc:	b	134e4 <table_compare_uchar@@Base+0x3c>
   134e0:	mov	r1, #1
   134e4:	mov	r0, r1
   134e8:	bx	lr

000134ec <table_compare_string@@Base>:
   134ec:	cmp	r0, #0
   134f0:	beq	13500 <table_compare_string@@Base+0x14>
   134f4:	cmp	r1, #0
   134f8:	beq	1350c <table_compare_string@@Base+0x20>
   134fc:	b	11f00 <strcmp@plt>
   13500:	cmp	r1, #0
   13504:	mvnne	r1, #0
   13508:	b	13510 <table_compare_string@@Base+0x24>
   1350c:	mov	r1, #1
   13510:	mov	r0, r1
   13514:	bx	lr

00013518 <table_compare_ptr@@Base>:
   13518:	mov	r2, #0
   1351c:	cmp	r0, r1
   13520:	mvncc	r2, #0
   13524:	movwhi	r2, #1
   13528:	mov	r0, r2
   1352c:	bx	lr

00013530 <table_get_default_compare_function_for_data_type@@Base>:
   13530:	cmp	r0, #23
   13534:	movwls	r1, #19376	; 0x4bb0
   13538:	movhi	r0, #0
   1353c:	movtls	r1, #1
   13540:	ldrls	r0, [r1, r0, lsl #2]
   13544:	bx	lr

00013548 <table_get@@Base>:
   13548:	push	{fp, lr}
   1354c:	mov	fp, sp
   13550:	bl	140f8 <table_get_cell_ptr@@Base>
   13554:	ldr	r0, [r0]
   13558:	pop	{fp, pc}

0001355c <table_get_bool@@Base>:
   1355c:	push	{fp, lr}
   13560:	mov	fp, sp
   13564:	bl	140f8 <table_get_cell_ptr@@Base>
   13568:	ldr	r0, [r0]
   1356c:	ldrb	r0, [r0]
   13570:	pop	{fp, pc}

00013574 <table_get_int@@Base>:
   13574:	push	{fp, lr}
   13578:	mov	fp, sp
   1357c:	bl	140f8 <table_get_cell_ptr@@Base>
   13580:	ldr	r0, [r0]
   13584:	ldr	r0, [r0]
   13588:	pop	{fp, pc}

0001358c <table_get_uint@@Base>:
   1358c:	push	{fp, lr}
   13590:	mov	fp, sp
   13594:	bl	140f8 <table_get_cell_ptr@@Base>
   13598:	ldr	r0, [r0]
   1359c:	ldr	r0, [r0]
   135a0:	pop	{fp, pc}

000135a4 <table_get_int8@@Base>:
   135a4:	push	{fp, lr}
   135a8:	mov	fp, sp
   135ac:	bl	140f8 <table_get_cell_ptr@@Base>
   135b0:	ldr	r0, [r0]
   135b4:	ldrsb	r0, [r0]
   135b8:	pop	{fp, pc}

000135bc <table_get_uint8@@Base>:
   135bc:	push	{fp, lr}
   135c0:	mov	fp, sp
   135c4:	bl	140f8 <table_get_cell_ptr@@Base>
   135c8:	ldr	r0, [r0]
   135cc:	ldrb	r0, [r0]
   135d0:	pop	{fp, pc}

000135d4 <table_get_int16@@Base>:
   135d4:	push	{fp, lr}
   135d8:	mov	fp, sp
   135dc:	bl	140f8 <table_get_cell_ptr@@Base>
   135e0:	ldr	r0, [r0]
   135e4:	ldrsh	r0, [r0]
   135e8:	pop	{fp, pc}

000135ec <table_get_uint16@@Base>:
   135ec:	push	{fp, lr}
   135f0:	mov	fp, sp
   135f4:	bl	140f8 <table_get_cell_ptr@@Base>
   135f8:	ldr	r0, [r0]
   135fc:	ldrh	r0, [r0]
   13600:	pop	{fp, pc}

00013604 <table_get_int32@@Base>:
   13604:	push	{fp, lr}
   13608:	mov	fp, sp
   1360c:	bl	140f8 <table_get_cell_ptr@@Base>
   13610:	ldr	r0, [r0]
   13614:	ldr	r0, [r0]
   13618:	pop	{fp, pc}

0001361c <table_get_uint32@@Base>:
   1361c:	push	{fp, lr}
   13620:	mov	fp, sp
   13624:	bl	140f8 <table_get_cell_ptr@@Base>
   13628:	ldr	r0, [r0]
   1362c:	ldr	r0, [r0]
   13630:	pop	{fp, pc}

00013634 <table_get_int64@@Base>:
   13634:	push	{fp, lr}
   13638:	mov	fp, sp
   1363c:	bl	140f8 <table_get_cell_ptr@@Base>
   13640:	ldr	r0, [r0]
   13644:	ldrd	r0, [r0]
   13648:	pop	{fp, pc}

0001364c <table_get_uint64@@Base>:
   1364c:	push	{fp, lr}
   13650:	mov	fp, sp
   13654:	bl	140f8 <table_get_cell_ptr@@Base>
   13658:	ldr	r0, [r0]
   1365c:	ldrd	r0, [r0]
   13660:	pop	{fp, pc}

00013664 <table_get_short@@Base>:
   13664:	push	{fp, lr}
   13668:	mov	fp, sp
   1366c:	bl	140f8 <table_get_cell_ptr@@Base>
   13670:	ldr	r0, [r0]
   13674:	ldrsh	r0, [r0]
   13678:	pop	{fp, pc}

0001367c <table_get_ushort@@Base>:
   1367c:	push	{fp, lr}
   13680:	mov	fp, sp
   13684:	bl	140f8 <table_get_cell_ptr@@Base>
   13688:	ldr	r0, [r0]
   1368c:	ldrh	r0, [r0]
   13690:	pop	{fp, pc}

00013694 <table_get_long@@Base>:
   13694:	push	{fp, lr}
   13698:	mov	fp, sp
   1369c:	bl	140f8 <table_get_cell_ptr@@Base>
   136a0:	ldr	r0, [r0]
   136a4:	ldr	r0, [r0]
   136a8:	pop	{fp, pc}

000136ac <table_get_ulong@@Base>:
   136ac:	push	{fp, lr}
   136b0:	mov	fp, sp
   136b4:	bl	140f8 <table_get_cell_ptr@@Base>
   136b8:	ldr	r0, [r0]
   136bc:	ldr	r0, [r0]
   136c0:	pop	{fp, pc}

000136c4 <table_get_llong@@Base>:
   136c4:	push	{fp, lr}
   136c8:	mov	fp, sp
   136cc:	bl	140f8 <table_get_cell_ptr@@Base>
   136d0:	ldr	r0, [r0]
   136d4:	ldrd	r0, [r0]
   136d8:	pop	{fp, pc}

000136dc <table_get_ullong@@Base>:
   136dc:	push	{fp, lr}
   136e0:	mov	fp, sp
   136e4:	bl	140f8 <table_get_cell_ptr@@Base>
   136e8:	ldr	r0, [r0]
   136ec:	ldrd	r0, [r0]
   136f0:	pop	{fp, pc}

000136f4 <table_get_float@@Base>:
   136f4:	push	{fp, lr}
   136f8:	mov	fp, sp
   136fc:	bl	140f8 <table_get_cell_ptr@@Base>
   13700:	ldr	r0, [r0]
   13704:	vldr	s0, [r0]
   13708:	pop	{fp, pc}

0001370c <table_get_double@@Base>:
   1370c:	push	{fp, lr}
   13710:	mov	fp, sp
   13714:	bl	140f8 <table_get_cell_ptr@@Base>
   13718:	ldr	r0, [r0]
   1371c:	vldr	d0, [r0]
   13720:	pop	{fp, pc}

00013724 <table_get_ldouble@@Base>:
   13724:	push	{fp, lr}
   13728:	mov	fp, sp
   1372c:	bl	140f8 <table_get_cell_ptr@@Base>
   13730:	ldr	r0, [r0]
   13734:	vldr	d0, [r0]
   13738:	pop	{fp, pc}

0001373c <table_get_char@@Base>:
   1373c:	push	{fp, lr}
   13740:	mov	fp, sp
   13744:	bl	140f8 <table_get_cell_ptr@@Base>
   13748:	ldr	r0, [r0]
   1374c:	ldrb	r0, [r0]
   13750:	pop	{fp, pc}

00013754 <table_get_uchar@@Base>:
   13754:	push	{fp, lr}
   13758:	mov	fp, sp
   1375c:	bl	140f8 <table_get_cell_ptr@@Base>
   13760:	ldr	r0, [r0]
   13764:	ldrb	r0, [r0]
   13768:	pop	{fp, pc}

0001376c <table_get_string@@Base>:
   1376c:	push	{fp, lr}
   13770:	mov	fp, sp
   13774:	bl	140f8 <table_get_cell_ptr@@Base>
   13778:	ldr	r0, [r0]
   1377c:	pop	{fp, pc}

00013780 <table_get_ptr@@Base>:
   13780:	push	{fp, lr}
   13784:	mov	fp, sp
   13788:	bl	140f8 <table_get_cell_ptr@@Base>
   1378c:	ldr	r0, [r0]
   13790:	pop	{fp, pc}

00013794 <table_row_init@@Base>:
   13794:	push	{r4, r5, fp, lr}
   13798:	add	fp, sp, #8
   1379c:	mov	r4, r1
   137a0:	ldr	r1, [r0, #12]
   137a4:	ldr	r5, [r0, #16]
   137a8:	lsl	r0, r1, #2
   137ac:	bl	11f48 <malloc@plt>
   137b0:	str	r0, [r5, r4, lsl #2]
   137b4:	pop	{r4, r5, fp, pc}

000137b8 <table_get_row_ptr@@Base>:
   137b8:	ldr	r0, [r0, #16]
   137bc:	add	r0, r0, r1, lsl #2
   137c0:	bx	lr

000137c4 <table_row_destroy@@Base>:
   137c4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   137c8:	add	fp, sp, #24
   137cc:	mov	r4, r1
   137d0:	mov	r5, r0
   137d4:	bl	12b74 <table_get_column_length@@Base>
   137d8:	ldr	r8, [r5, #16]
   137dc:	cmp	r0, #1
   137e0:	blt	13808 <table_row_destroy@@Base+0x44>
   137e4:	mov	r6, r0
   137e8:	mov	r7, #0
   137ec:	mov	r0, r5
   137f0:	mov	r1, r4
   137f4:	mov	r2, r7
   137f8:	bl	14114 <table_cell_destroy@@Base>
   137fc:	add	r7, r7, #1
   13800:	cmp	r6, r7
   13804:	bne	137ec <table_row_destroy@@Base+0x28>
   13808:	ldr	r0, [r8, r4, lsl #2]
   1380c:	cmp	r0, #0
   13810:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   13814:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13818:	b	11f18 <free@plt>

0001381c <table_get_row_length@@Base>:
   1381c:	ldr	r0, [r0, #20]
   13820:	bx	lr

00013824 <table_add_row@@Base>:
   13824:	push	{r4, r5, r6, r7, fp, lr}
   13828:	add	fp, sp, #16
   1382c:	ldr	r5, [r0, #20]
   13830:	ldr	r1, [r0, #24]
   13834:	mov	r4, r0
   13838:	udiv	r0, r5, r1
   1383c:	mls	r0, r0, r1, r5
   13840:	cmp	r0, #0
   13844:	bne	13868 <table_add_row@@Base+0x44>
   13848:	ldr	r2, [r4, #28]
   1384c:	ldr	r0, [r4, #16]
   13850:	add	r1, r2, r1
   13854:	str	r1, [r4, #28]
   13858:	lsl	r1, r1, #2
   1385c:	bl	11f30 <realloc@plt>
   13860:	str	r0, [r4, #16]
   13864:	ldr	r5, [r4, #20]
   13868:	mov	r0, r4
   1386c:	bl	12b74 <table_get_column_length@@Base>
   13870:	mov	r6, r0
   13874:	ldr	r0, [r4, #12]
   13878:	ldr	r7, [r4, #16]
   1387c:	lsl	r0, r0, #2
   13880:	bl	11f48 <malloc@plt>
   13884:	cmp	r6, #1
   13888:	str	r0, [r7, r5, lsl #2]
   1388c:	blt	138b0 <table_add_row@@Base+0x8c>
   13890:	mov	r7, #0
   13894:	mov	r0, r4
   13898:	mov	r1, r5
   1389c:	mov	r2, r7
   138a0:	bl	140d8 <table_cell_init@@Base>
   138a4:	add	r7, r7, #1
   138a8:	cmp	r6, r7
   138ac:	bne	13894 <table_add_row@@Base+0x70>
   138b0:	ldr	r1, [r4, #20]
   138b4:	mov	r0, r4
   138b8:	mvn	r2, #0
   138bc:	mov	r3, #2
   138c0:	bl	12a80 <table_notify@@Base>
   138c4:	ldr	r0, [r4, #20]
   138c8:	add	r1, r0, #1
   138cc:	str	r1, [r4, #20]
   138d0:	pop	{r4, r5, r6, r7, fp, pc}

000138d4 <table_remove_row@@Base>:
   138d4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   138d8:	add	fp, sp, #24
   138dc:	ldr	r8, [r0, #20]
   138e0:	mov	r4, r1
   138e4:	mov	r5, r0
   138e8:	bl	12b74 <table_get_column_length@@Base>
   138ec:	cmp	r0, #1
   138f0:	blt	1393c <table_remove_row@@Base+0x68>
   138f4:	mov	r6, r0
   138f8:	mov	r7, #0
   138fc:	mov	r0, r5
   13900:	mov	r1, r7
   13904:	bl	12be8 <table_get_column_data_type@@Base>
   13908:	cmp	r0, #23
   1390c:	beq	13930 <table_remove_row@@Base+0x5c>
   13910:	mov	r0, r5
   13914:	mov	r1, r4
   13918:	mov	r2, r7
   1391c:	bl	140f8 <table_get_cell_ptr@@Base>
   13920:	ldr	r0, [r0]
   13924:	cmp	r0, #0
   13928:	beq	13930 <table_remove_row@@Base+0x5c>
   1392c:	bl	11f18 <free@plt>
   13930:	add	r7, r7, #1
   13934:	cmp	r6, r7
   13938:	bne	138fc <table_remove_row@@Base+0x28>
   1393c:	ldr	r0, [r5, #16]
   13940:	ldr	r0, [r0, r4, lsl #2]
   13944:	cmp	r0, #0
   13948:	beq	13950 <table_remove_row@@Base+0x7c>
   1394c:	bl	11f18 <free@plt>
   13950:	sub	r0, r8, #1
   13954:	cmp	r0, r4
   13958:	ble	1397c <table_remove_row@@Base+0xa8>
   1395c:	mov	r1, r4
   13960:	ldr	r2, [r5, #16]
   13964:	add	r3, r2, r1, lsl #2
   13968:	ldr	r3, [r3, #4]
   1396c:	str	r3, [r2, r1, lsl #2]
   13970:	add	r1, r1, #1
   13974:	cmp	r0, r1
   13978:	bne	13960 <table_remove_row@@Base+0x8c>
   1397c:	ldr	r0, [r5, #20]
   13980:	ldr	r1, [r5, #24]
   13984:	sub	r0, r0, #1
   13988:	udiv	r2, r0, r1
   1398c:	str	r0, [r5, #20]
   13990:	mls	r0, r2, r1, r0
   13994:	cmp	r0, #0
   13998:	bne	139b8 <table_remove_row@@Base+0xe4>
   1399c:	ldr	r2, [r5, #28]
   139a0:	ldr	r0, [r5, #16]
   139a4:	sub	r1, r2, r1
   139a8:	str	r1, [r5, #28]
   139ac:	lsl	r1, r1, #2
   139b0:	bl	11f30 <realloc@plt>
   139b4:	str	r0, [r5, #16]
   139b8:	mov	r0, r5
   139bc:	mov	r1, r4
   139c0:	mvn	r2, #0
   139c4:	mov	r3, #4
   139c8:	bl	12a80 <table_notify@@Base>
   139cc:	mov	r0, #0
   139d0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000139d4 <table_set_row_ptr@@Base>:
   139d4:	ldr	r2, [r2]
   139d8:	ldr	r0, [r0, #16]
   139dc:	str	r2, [r0, r1, lsl #2]
   139e0:	bx	lr

000139e4 <table_set@@Base>:
   139e4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   139e8:	add	fp, sp, #24
   139ec:	mov	r8, r3
   139f0:	mov	r4, r2
   139f4:	mov	r9, r1
   139f8:	mov	r6, r0
   139fc:	bl	140f8 <table_get_cell_ptr@@Base>
   13a00:	mov	r5, r0
   13a04:	mov	r0, r6
   13a08:	mov	r1, r4
   13a0c:	bl	12b4c <table_get_col_ptr@@Base>
   13a10:	ldr	r1, [fp, #8]
   13a14:	mvn	r7, #0
   13a18:	cmp	r1, #23
   13a1c:	bhi	13cdc <table_set@@Base+0x2f8>
   13a20:	add	r2, pc, #0
   13a24:	ldr	pc, [r2, r1, lsl #2]
   13a28:	andeq	r3, r1, r8, lsl #21
   13a2c:	muleq	r1, r8, sl
   13a30:	andeq	r3, r1, r8, lsr #21
   13a34:			; <UNDEFINED> instruction: 0x00013ab8
   13a38:	andeq	r3, r1, r8, asr #21
   13a3c:	ldrdeq	r3, [r1], -r8
   13a40:	andeq	r3, r1, r8, ror #21
   13a44:	strdeq	r3, [r1], -r8
   13a48:	andeq	r3, r1, r8, lsl #22
   13a4c:	andeq	r3, r1, r8, lsl fp
   13a50:	andeq	r3, r1, r8, lsr #22
   13a54:	andeq	r3, r1, r8, lsr fp
   13a58:	andeq	r3, r1, r0, ror fp
   13a5c:	andeq	r3, r1, r0, lsl #23
   13a60:	muleq	r1, r0, fp
   13a64:	andeq	r3, r1, r0, lsr #23
   13a68:			; <UNDEFINED> instruction: 0x00013bb0
   13a6c:	andeq	r3, r1, r4, ror #23
   13a70:	strdeq	r3, [r1], -r4
   13a74:	andeq	r3, r1, r4, lsr ip
   13a78:	andeq	r3, r1, r4, asr #24
   13a7c:	andeq	r3, r1, r4, asr ip
   13a80:	muleq	r1, r0, ip
   13a84:	andeq	r3, r1, r4, ror #25
   13a88:	ldr	r0, [r0, #4]
   13a8c:	cmp	r0, #0
   13a90:	bne	13cdc <table_set@@Base+0x2f8>
   13a94:	b	13bbc <table_set@@Base+0x1d8>
   13a98:	ldr	r0, [r0, #4]
   13a9c:	cmp	r0, #1
   13aa0:	beq	13bbc <table_set@@Base+0x1d8>
   13aa4:	b	13cdc <table_set@@Base+0x2f8>
   13aa8:	ldr	r0, [r0, #4]
   13aac:	cmp	r0, #2
   13ab0:	beq	13c9c <table_set@@Base+0x2b8>
   13ab4:	b	13cdc <table_set@@Base+0x2f8>
   13ab8:	ldr	r0, [r0, #4]
   13abc:	cmp	r0, #3
   13ac0:	beq	13c9c <table_set@@Base+0x2b8>
   13ac4:	b	13cdc <table_set@@Base+0x2f8>
   13ac8:	ldr	r0, [r0, #4]
   13acc:	cmp	r0, #4
   13ad0:	beq	13b44 <table_set@@Base+0x160>
   13ad4:	b	13cdc <table_set@@Base+0x2f8>
   13ad8:	ldr	r0, [r0, #4]
   13adc:	cmp	r0, #5
   13ae0:	beq	13b44 <table_set@@Base+0x160>
   13ae4:	b	13cdc <table_set@@Base+0x2f8>
   13ae8:	ldr	r0, [r0, #4]
   13aec:	cmp	r0, #6
   13af0:	beq	13bbc <table_set@@Base+0x1d8>
   13af4:	b	13cdc <table_set@@Base+0x2f8>
   13af8:	ldr	r0, [r0, #4]
   13afc:	cmp	r0, #7
   13b00:	beq	13bbc <table_set@@Base+0x1d8>
   13b04:	b	13cdc <table_set@@Base+0x2f8>
   13b08:	ldr	r0, [r0, #4]
   13b0c:	cmp	r0, #8
   13b10:	beq	13c00 <table_set@@Base+0x21c>
   13b14:	b	13cdc <table_set@@Base+0x2f8>
   13b18:	ldr	r0, [r0, #4]
   13b1c:	cmp	r0, #9
   13b20:	beq	13c00 <table_set@@Base+0x21c>
   13b24:	b	13cdc <table_set@@Base+0x2f8>
   13b28:	ldr	r0, [r0, #4]
   13b2c:	cmp	r0, #10
   13b30:	beq	13b44 <table_set@@Base+0x160>
   13b34:	b	13cdc <table_set@@Base+0x2f8>
   13b38:	ldr	r0, [r0, #4]
   13b3c:	cmp	r0, #11
   13b40:	bne	13cdc <table_set@@Base+0x2f8>
   13b44:	ldr	r0, [r5]
   13b48:	cmp	r0, #0
   13b4c:	bne	13b64 <table_set@@Base+0x180>
   13b50:	mov	r0, #2
   13b54:	bl	11f48 <malloc@plt>
   13b58:	cmp	r0, #0
   13b5c:	str	r0, [r5]
   13b60:	beq	13cdc <table_set@@Base+0x2f8>
   13b64:	ldrh	r1, [r8]
   13b68:	strh	r1, [r0]
   13b6c:	b	13cc4 <table_set@@Base+0x2e0>
   13b70:	ldr	r0, [r0, #4]
   13b74:	cmp	r0, #12
   13b78:	beq	13bbc <table_set@@Base+0x1d8>
   13b7c:	b	13cdc <table_set@@Base+0x2f8>
   13b80:	ldr	r0, [r0, #4]
   13b84:	cmp	r0, #13
   13b88:	beq	13bbc <table_set@@Base+0x1d8>
   13b8c:	b	13cdc <table_set@@Base+0x2f8>
   13b90:	ldr	r0, [r0, #4]
   13b94:	cmp	r0, #14
   13b98:	beq	13c00 <table_set@@Base+0x21c>
   13b9c:	b	13cdc <table_set@@Base+0x2f8>
   13ba0:	ldr	r0, [r0, #4]
   13ba4:	cmp	r0, #15
   13ba8:	beq	13c00 <table_set@@Base+0x21c>
   13bac:	b	13cdc <table_set@@Base+0x2f8>
   13bb0:	ldr	r0, [r0, #4]
   13bb4:	cmp	r0, #16
   13bb8:	bne	13cdc <table_set@@Base+0x2f8>
   13bbc:	ldr	r0, [r5]
   13bc0:	cmp	r0, #0
   13bc4:	bne	13bdc <table_set@@Base+0x1f8>
   13bc8:	mov	r0, #4
   13bcc:	bl	11f48 <malloc@plt>
   13bd0:	cmp	r0, #0
   13bd4:	str	r0, [r5]
   13bd8:	beq	13cdc <table_set@@Base+0x2f8>
   13bdc:	ldr	r1, [r8]
   13be0:	b	13c2c <table_set@@Base+0x248>
   13be4:	ldr	r0, [r0, #4]
   13be8:	cmp	r0, #17
   13bec:	beq	13c00 <table_set@@Base+0x21c>
   13bf0:	b	13cdc <table_set@@Base+0x2f8>
   13bf4:	ldr	r0, [r0, #4]
   13bf8:	cmp	r0, #18
   13bfc:	bne	13cdc <table_set@@Base+0x2f8>
   13c00:	ldr	r0, [r5]
   13c04:	cmp	r0, #0
   13c08:	bne	13c20 <table_set@@Base+0x23c>
   13c0c:	mov	r0, #8
   13c10:	bl	11f48 <malloc@plt>
   13c14:	cmp	r0, #0
   13c18:	str	r0, [r5]
   13c1c:	beq	13cdc <table_set@@Base+0x2f8>
   13c20:	ldr	r1, [r8]
   13c24:	ldr	r2, [r8, #4]
   13c28:	str	r2, [r0, #4]
   13c2c:	str	r1, [r0]
   13c30:	b	13cc4 <table_set@@Base+0x2e0>
   13c34:	ldr	r0, [r0, #4]
   13c38:	cmp	r0, #19
   13c3c:	beq	13c9c <table_set@@Base+0x2b8>
   13c40:	b	13cdc <table_set@@Base+0x2f8>
   13c44:	ldr	r0, [r0, #4]
   13c48:	cmp	r0, #20
   13c4c:	beq	13c9c <table_set@@Base+0x2b8>
   13c50:	b	13cdc <table_set@@Base+0x2f8>
   13c54:	ldr	r0, [r0, #4]
   13c58:	cmp	r0, #21
   13c5c:	bne	13cdc <table_set@@Base+0x2f8>
   13c60:	mov	r0, r8
   13c64:	bl	11f6c <strlen@plt>
   13c68:	ldr	r2, [r5]
   13c6c:	add	r1, r0, #1
   13c70:	mov	r0, r2
   13c74:	bl	11f30 <realloc@plt>
   13c78:	cmp	r0, #0
   13c7c:	str	r0, [r5]
   13c80:	beq	13cdc <table_set@@Base+0x2f8>
   13c84:	mov	r1, r8
   13c88:	bl	11f3c <strcpy@plt>
   13c8c:	b	13cc4 <table_set@@Base+0x2e0>
   13c90:	ldr	r0, [r0, #4]
   13c94:	cmp	r0, #22
   13c98:	bne	13cdc <table_set@@Base+0x2f8>
   13c9c:	ldr	r0, [r5]
   13ca0:	cmp	r0, #0
   13ca4:	bne	13cbc <table_set@@Base+0x2d8>
   13ca8:	mov	r0, #1
   13cac:	bl	11f48 <malloc@plt>
   13cb0:	cmp	r0, #0
   13cb4:	str	r0, [r5]
   13cb8:	beq	13cdc <table_set@@Base+0x2f8>
   13cbc:	ldrb	r1, [r8]
   13cc0:	strb	r1, [r0]
   13cc4:	mov	r0, r6
   13cc8:	mov	r1, r9
   13ccc:	mov	r2, r4
   13cd0:	mov	r3, #1
   13cd4:	bl	12a80 <table_notify@@Base>
   13cd8:	mov	r7, #0
   13cdc:	mov	r0, r7
   13ce0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13ce4:	ldr	r0, [r0, #4]
   13ce8:	cmp	r0, #23
   13cec:	bne	13cdc <table_set@@Base+0x2f8>
   13cf0:	str	r8, [r5]
   13cf4:	b	13cc4 <table_set@@Base+0x2e0>

00013cf8 <table_set_bool@@Base>:
   13cf8:	push	{fp, lr}
   13cfc:	mov	fp, sp
   13d00:	sub	sp, sp, #8
   13d04:	strb	r3, [fp, #-1]
   13d08:	mov	r3, #22
   13d0c:	str	r3, [sp]
   13d10:	sub	r3, fp, #1
   13d14:	bl	139e4 <table_set@@Base>
   13d18:	mov	sp, fp
   13d1c:	pop	{fp, pc}

00013d20 <table_set_int@@Base>:
   13d20:	push	{fp, lr}
   13d24:	mov	fp, sp
   13d28:	sub	sp, sp, #8
   13d2c:	str	r3, [sp, #4]
   13d30:	mov	r3, #0
   13d34:	str	r3, [sp]
   13d38:	add	r3, sp, #4
   13d3c:	bl	139e4 <table_set@@Base>
   13d40:	mov	sp, fp
   13d44:	pop	{fp, pc}

00013d48 <table_set_uint@@Base>:
   13d48:	push	{fp, lr}
   13d4c:	mov	fp, sp
   13d50:	sub	sp, sp, #8
   13d54:	str	r3, [sp, #4]
   13d58:	mov	r3, #1
   13d5c:	str	r3, [sp]
   13d60:	add	r3, sp, #4
   13d64:	bl	139e4 <table_set@@Base>
   13d68:	mov	sp, fp
   13d6c:	pop	{fp, pc}

00013d70 <table_set_int8@@Base>:
   13d70:	push	{fp, lr}
   13d74:	mov	fp, sp
   13d78:	sub	sp, sp, #8
   13d7c:	strb	r3, [fp, #-1]
   13d80:	mov	r3, #2
   13d84:	str	r3, [sp]
   13d88:	sub	r3, fp, #1
   13d8c:	bl	139e4 <table_set@@Base>
   13d90:	mov	sp, fp
   13d94:	pop	{fp, pc}

00013d98 <table_set_uint8@@Base>:
   13d98:	push	{fp, lr}
   13d9c:	mov	fp, sp
   13da0:	sub	sp, sp, #8
   13da4:	strb	r3, [fp, #-1]
   13da8:	mov	r3, #3
   13dac:	str	r3, [sp]
   13db0:	sub	r3, fp, #1
   13db4:	bl	139e4 <table_set@@Base>
   13db8:	mov	sp, fp
   13dbc:	pop	{fp, pc}

00013dc0 <table_set_int16@@Base>:
   13dc0:	push	{fp, lr}
   13dc4:	mov	fp, sp
   13dc8:	sub	sp, sp, #8
   13dcc:	strh	r3, [fp, #-2]
   13dd0:	mov	r3, #4
   13dd4:	str	r3, [sp]
   13dd8:	sub	r3, fp, #2
   13ddc:	bl	139e4 <table_set@@Base>
   13de0:	mov	sp, fp
   13de4:	pop	{fp, pc}

00013de8 <table_set_uint16@@Base>:
   13de8:	push	{fp, lr}
   13dec:	mov	fp, sp
   13df0:	sub	sp, sp, #8
   13df4:	strh	r3, [fp, #-2]
   13df8:	mov	r3, #5
   13dfc:	str	r3, [sp]
   13e00:	sub	r3, fp, #2
   13e04:	bl	139e4 <table_set@@Base>
   13e08:	mov	sp, fp
   13e0c:	pop	{fp, pc}

00013e10 <table_set_int32@@Base>:
   13e10:	push	{fp, lr}
   13e14:	mov	fp, sp
   13e18:	sub	sp, sp, #8
   13e1c:	str	r3, [sp, #4]
   13e20:	mov	r3, #6
   13e24:	str	r3, [sp]
   13e28:	add	r3, sp, #4
   13e2c:	bl	139e4 <table_set@@Base>
   13e30:	mov	sp, fp
   13e34:	pop	{fp, pc}

00013e38 <table_set_uint32@@Base>:
   13e38:	push	{fp, lr}
   13e3c:	mov	fp, sp
   13e40:	sub	sp, sp, #8
   13e44:	str	r3, [sp, #4]
   13e48:	mov	r3, #7
   13e4c:	str	r3, [sp]
   13e50:	add	r3, sp, #4
   13e54:	bl	139e4 <table_set@@Base>
   13e58:	mov	sp, fp
   13e5c:	pop	{fp, pc}

00013e60 <table_set_int64@@Base>:
   13e60:	push	{fp, lr}
   13e64:	mov	fp, sp
   13e68:	sub	sp, sp, #16
   13e6c:	ldr	r3, [fp, #12]
   13e70:	str	r3, [sp, #12]
   13e74:	ldr	r3, [fp, #8]
   13e78:	str	r3, [sp, #8]
   13e7c:	mov	r3, #8
   13e80:	str	r3, [sp]
   13e84:	add	r3, sp, #8
   13e88:	bl	139e4 <table_set@@Base>
   13e8c:	mov	sp, fp
   13e90:	pop	{fp, pc}

00013e94 <table_set_uint64@@Base>:
   13e94:	push	{fp, lr}
   13e98:	mov	fp, sp
   13e9c:	sub	sp, sp, #16
   13ea0:	ldr	r3, [fp, #12]
   13ea4:	str	r3, [sp, #12]
   13ea8:	ldr	r3, [fp, #8]
   13eac:	str	r3, [sp, #8]
   13eb0:	mov	r3, #9
   13eb4:	str	r3, [sp]
   13eb8:	add	r3, sp, #8
   13ebc:	bl	139e4 <table_set@@Base>
   13ec0:	mov	sp, fp
   13ec4:	pop	{fp, pc}

00013ec8 <table_set_short@@Base>:
   13ec8:	push	{fp, lr}
   13ecc:	mov	fp, sp
   13ed0:	sub	sp, sp, #8
   13ed4:	strh	r3, [fp, #-2]
   13ed8:	mov	r3, #10
   13edc:	str	r3, [sp]
   13ee0:	sub	r3, fp, #2
   13ee4:	bl	139e4 <table_set@@Base>
   13ee8:	mov	sp, fp
   13eec:	pop	{fp, pc}

00013ef0 <table_set_ushort@@Base>:
   13ef0:	push	{fp, lr}
   13ef4:	mov	fp, sp
   13ef8:	sub	sp, sp, #8
   13efc:	strh	r3, [fp, #-2]
   13f00:	mov	r3, #11
   13f04:	str	r3, [sp]
   13f08:	sub	r3, fp, #2
   13f0c:	bl	139e4 <table_set@@Base>
   13f10:	mov	sp, fp
   13f14:	pop	{fp, pc}

00013f18 <table_set_long@@Base>:
   13f18:	push	{fp, lr}
   13f1c:	mov	fp, sp
   13f20:	sub	sp, sp, #8
   13f24:	str	r3, [sp, #4]
   13f28:	mov	r3, #12
   13f2c:	str	r3, [sp]
   13f30:	add	r3, sp, #4
   13f34:	bl	139e4 <table_set@@Base>
   13f38:	mov	sp, fp
   13f3c:	pop	{fp, pc}

00013f40 <table_set_ulong@@Base>:
   13f40:	push	{fp, lr}
   13f44:	mov	fp, sp
   13f48:	sub	sp, sp, #8
   13f4c:	str	r3, [sp, #4]
   13f50:	mov	r3, #13
   13f54:	str	r3, [sp]
   13f58:	add	r3, sp, #4
   13f5c:	bl	139e4 <table_set@@Base>
   13f60:	mov	sp, fp
   13f64:	pop	{fp, pc}

00013f68 <table_set_llong@@Base>:
   13f68:	push	{fp, lr}
   13f6c:	mov	fp, sp
   13f70:	sub	sp, sp, #16
   13f74:	ldr	r3, [fp, #12]
   13f78:	str	r3, [sp, #12]
   13f7c:	ldr	r3, [fp, #8]
   13f80:	str	r3, [sp, #8]
   13f84:	mov	r3, #14
   13f88:	str	r3, [sp]
   13f8c:	add	r3, sp, #8
   13f90:	bl	139e4 <table_set@@Base>
   13f94:	mov	sp, fp
   13f98:	pop	{fp, pc}

00013f9c <table_set_ullong@@Base>:
   13f9c:	push	{fp, lr}
   13fa0:	mov	fp, sp
   13fa4:	sub	sp, sp, #16
   13fa8:	ldr	r3, [fp, #12]
   13fac:	str	r3, [sp, #12]
   13fb0:	ldr	r3, [fp, #8]
   13fb4:	str	r3, [sp, #8]
   13fb8:	mov	r3, #15
   13fbc:	str	r3, [sp]
   13fc0:	add	r3, sp, #8
   13fc4:	bl	139e4 <table_set@@Base>
   13fc8:	mov	sp, fp
   13fcc:	pop	{fp, pc}

00013fd0 <table_set_float@@Base>:
   13fd0:	push	{fp, lr}
   13fd4:	mov	fp, sp
   13fd8:	sub	sp, sp, #8
   13fdc:	mov	r3, #16
   13fe0:	vstr	s0, [sp, #4]
   13fe4:	str	r3, [sp]
   13fe8:	add	r3, sp, #4
   13fec:	bl	139e4 <table_set@@Base>
   13ff0:	mov	sp, fp
   13ff4:	pop	{fp, pc}

00013ff8 <table_set_double@@Base>:
   13ff8:	push	{fp, lr}
   13ffc:	mov	fp, sp
   14000:	sub	sp, sp, #16
   14004:	mov	r3, #17
   14008:	vstr	d0, [sp, #8]
   1400c:	str	r3, [sp]
   14010:	add	r3, sp, #8
   14014:	bl	139e4 <table_set@@Base>
   14018:	mov	sp, fp
   1401c:	pop	{fp, pc}

00014020 <table_set_ldouble@@Base>:
   14020:	push	{fp, lr}
   14024:	mov	fp, sp
   14028:	sub	sp, sp, #16
   1402c:	mov	r3, #18
   14030:	vstr	d0, [sp, #8]
   14034:	str	r3, [sp]
   14038:	add	r3, sp, #8
   1403c:	bl	139e4 <table_set@@Base>
   14040:	mov	sp, fp
   14044:	pop	{fp, pc}

00014048 <table_set_string@@Base>:
   14048:	push	{fp, lr}
   1404c:	mov	fp, sp
   14050:	sub	sp, sp, #8
   14054:	mov	ip, #21
   14058:	str	ip, [sp]
   1405c:	bl	139e4 <table_set@@Base>
   14060:	mov	sp, fp
   14064:	pop	{fp, pc}

00014068 <table_set_char@@Base>:
   14068:	push	{fp, lr}
   1406c:	mov	fp, sp
   14070:	sub	sp, sp, #8
   14074:	strb	r3, [fp, #-1]
   14078:	mov	r3, #19
   1407c:	str	r3, [sp]
   14080:	sub	r3, fp, #1
   14084:	bl	139e4 <table_set@@Base>
   14088:	mov	sp, fp
   1408c:	pop	{fp, pc}

00014090 <table_set_uchar@@Base>:
   14090:	push	{fp, lr}
   14094:	mov	fp, sp
   14098:	sub	sp, sp, #8
   1409c:	strb	r3, [fp, #-1]
   140a0:	mov	r3, #20
   140a4:	str	r3, [sp]
   140a8:	sub	r3, fp, #1
   140ac:	bl	139e4 <table_set@@Base>
   140b0:	mov	sp, fp
   140b4:	pop	{fp, pc}

000140b8 <table_set_ptr@@Base>:
   140b8:	push	{fp, lr}
   140bc:	mov	fp, sp
   140c0:	sub	sp, sp, #8
   140c4:	mov	ip, #23
   140c8:	str	ip, [sp]
   140cc:	bl	139e4 <table_set@@Base>
   140d0:	mov	sp, fp
   140d4:	pop	{fp, pc}

000140d8 <table_cell_init@@Base>:
   140d8:	push	{r4, sl, fp, lr}
   140dc:	add	fp, sp, #8
   140e0:	mov	r4, r2
   140e4:	bl	137b8 <table_get_row_ptr@@Base>
   140e8:	ldr	r0, [r0]
   140ec:	mov	r1, #0
   140f0:	str	r1, [r0, r4, lsl #2]
   140f4:	pop	{r4, sl, fp, pc}

000140f8 <table_get_cell_ptr@@Base>:
   140f8:	push	{r4, sl, fp, lr}
   140fc:	add	fp, sp, #8
   14100:	mov	r4, r2
   14104:	bl	137b8 <table_get_row_ptr@@Base>
   14108:	ldr	r0, [r0]
   1410c:	add	r0, r0, r4, lsl #2
   14110:	pop	{r4, sl, fp, pc}

00014114 <table_cell_destroy@@Base>:
   14114:	push	{r4, r5, r6, sl, fp, lr}
   14118:	add	fp, sp, #16
   1411c:	mov	r5, r1
   14120:	mov	r1, r2
   14124:	mov	r4, r2
   14128:	mov	r6, r0
   1412c:	bl	12be8 <table_get_column_data_type@@Base>
   14130:	cmp	r0, #23
   14134:	popeq	{r4, r5, r6, sl, fp, pc}
   14138:	mov	r0, r6
   1413c:	mov	r1, r5
   14140:	bl	137b8 <table_get_row_ptr@@Base>
   14144:	ldr	r0, [r0]
   14148:	ldr	r0, [r0, r4, lsl #2]
   1414c:	cmp	r0, #0
   14150:	beq	1415c <table_cell_destroy@@Base+0x48>
   14154:	pop	{r4, r5, r6, sl, fp, lr}
   14158:	b	11f18 <free@plt>
   1415c:	pop	{r4, r5, r6, sl, fp, pc}

00014160 <table_cell_to_buffer@@Base>:
   14160:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14164:	add	fp, sp, #24
   14168:	sub	sp, sp, #8
   1416c:	mov	r7, r1
   14170:	mov	r1, r2
   14174:	mov	r5, r3
   14178:	mov	r6, r2
   1417c:	mov	r4, r0
   14180:	bl	12be8 <table_get_column_data_type@@Base>
   14184:	cmp	r0, #23
   14188:	bhi	14478 <table_cell_to_buffer@@Base+0x318>
   1418c:	ldr	r8, [fp, #8]
   14190:	add	r1, pc, #0
   14194:	ldr	pc, [r1, r0, lsl #2]
   14198:	strdeq	r4, [r1], -r8
   1419c:	andeq	r4, r1, ip, lsl #4
   141a0:	andeq	r4, r1, r0, lsr #4
   141a4:	andeq	r4, r1, r4, lsr r2
   141a8:	andeq	r4, r1, r8, asr #4
   141ac:	andeq	r4, r1, ip, asr r2
   141b0:	andeq	r4, r1, r0, ror r2
   141b4:	andeq	r4, r1, r4, lsl #5
   141b8:	andeq	r4, r1, r4, lsr #5
   141bc:			; <UNDEFINED> instruction: 0x000142b8
   141c0:	andeq	r4, r1, ip, asr #5
   141c4:	andeq	r4, r1, ip, ror #5
   141c8:	andeq	r4, r1, ip, lsl #6
   141cc:	andeq	r4, r1, ip, lsr #6
   141d0:	andeq	r4, r1, ip, asr #6
   141d4:	andeq	r4, r1, ip, ror #6
   141d8:	andeq	r4, r1, ip, lsl #7
   141dc:			; <UNDEFINED> instruction: 0x000143b0
   141e0:	ldrdeq	r4, [r1], -r0
   141e4:	strdeq	r4, [r1], -ip
   141e8:	andeq	r4, r1, r0, lsl r4
   141ec:	andeq	r4, r1, r0, lsr r4
   141f0:	andeq	r4, r1, r0, asr r4
   141f4:	andeq	r4, r1, r4, lsl #9
   141f8:	mov	r0, r4
   141fc:	mov	r1, r7
   14200:	mov	r2, r6
   14204:	bl	13574 <table_get_int@@Base>
   14208:	b	14460 <table_cell_to_buffer@@Base+0x300>
   1420c:	mov	r0, r4
   14210:	mov	r1, r7
   14214:	mov	r2, r6
   14218:	bl	1358c <table_get_uint@@Base>
   1421c:	b	14294 <table_cell_to_buffer@@Base+0x134>
   14220:	mov	r0, r4
   14224:	mov	r1, r7
   14228:	mov	r2, r6
   1422c:	bl	135a4 <table_get_int8@@Base>
   14230:	b	14460 <table_cell_to_buffer@@Base+0x300>
   14234:	mov	r0, r4
   14238:	mov	r1, r7
   1423c:	mov	r2, r6
   14240:	bl	135bc <table_get_uint8@@Base>
   14244:	b	14294 <table_cell_to_buffer@@Base+0x134>
   14248:	mov	r0, r4
   1424c:	mov	r1, r7
   14250:	mov	r2, r6
   14254:	bl	135d4 <table_get_int16@@Base>
   14258:	b	14460 <table_cell_to_buffer@@Base+0x300>
   1425c:	mov	r0, r4
   14260:	mov	r1, r7
   14264:	mov	r2, r6
   14268:	bl	135ec <table_get_uint16@@Base>
   1426c:	b	14294 <table_cell_to_buffer@@Base+0x134>
   14270:	mov	r0, r4
   14274:	mov	r1, r7
   14278:	mov	r2, r6
   1427c:	bl	13604 <table_get_int32@@Base>
   14280:	b	14460 <table_cell_to_buffer@@Base+0x300>
   14284:	mov	r0, r4
   14288:	mov	r1, r7
   1428c:	mov	r2, r6
   14290:	bl	1361c <table_get_uint32@@Base>
   14294:	movw	r2, #19472	; 0x4c10
   14298:	mov	r3, r0
   1429c:	movt	r2, #1
   142a0:	b	1446c <table_cell_to_buffer@@Base+0x30c>
   142a4:	mov	r0, r4
   142a8:	mov	r1, r7
   142ac:	mov	r2, r6
   142b0:	bl	13634 <table_get_int64@@Base>
   142b4:	b	1435c <table_cell_to_buffer@@Base+0x1fc>
   142b8:	mov	r0, r4
   142bc:	mov	r1, r7
   142c0:	mov	r2, r6
   142c4:	bl	1364c <table_get_uint64@@Base>
   142c8:	b	1437c <table_cell_to_buffer@@Base+0x21c>
   142cc:	mov	r0, r4
   142d0:	mov	r1, r7
   142d4:	mov	r2, r6
   142d8:	bl	13664 <table_get_short@@Base>
   142dc:	movw	r2, #19485	; 0x4c1d
   142e0:	mov	r3, r0
   142e4:	movt	r2, #1
   142e8:	b	1446c <table_cell_to_buffer@@Base+0x30c>
   142ec:	mov	r0, r4
   142f0:	mov	r1, r7
   142f4:	mov	r2, r6
   142f8:	bl	1367c <table_get_ushort@@Base>
   142fc:	movw	r2, #19489	; 0x4c21
   14300:	mov	r3, r0
   14304:	movt	r2, #1
   14308:	b	1446c <table_cell_to_buffer@@Base+0x30c>
   1430c:	mov	r0, r4
   14310:	mov	r1, r7
   14314:	mov	r2, r6
   14318:	bl	13694 <table_get_long@@Base>
   1431c:	movw	r2, #19493	; 0x4c25
   14320:	mov	r3, r0
   14324:	movt	r2, #1
   14328:	b	1446c <table_cell_to_buffer@@Base+0x30c>
   1432c:	mov	r0, r4
   14330:	mov	r1, r7
   14334:	mov	r2, r6
   14338:	bl	136ac <table_get_ulong@@Base>
   1433c:	movw	r2, #19497	; 0x4c29
   14340:	mov	r3, r0
   14344:	movt	r2, #1
   14348:	b	1446c <table_cell_to_buffer@@Base+0x30c>
   1434c:	mov	r0, r4
   14350:	mov	r1, r7
   14354:	mov	r2, r6
   14358:	bl	136c4 <table_get_llong@@Base>
   1435c:	movw	r2, #19475	; 0x4c13
   14360:	stm	sp, {r0, r1}
   14364:	movt	r2, #1
   14368:	b	143ec <table_cell_to_buffer@@Base+0x28c>
   1436c:	mov	r0, r4
   14370:	mov	r1, r7
   14374:	mov	r2, r6
   14378:	bl	136dc <table_get_ullong@@Base>
   1437c:	movw	r2, #19480	; 0x4c18
   14380:	stm	sp, {r0, r1}
   14384:	movt	r2, #1
   14388:	b	143ec <table_cell_to_buffer@@Base+0x28c>
   1438c:	mov	r0, r4
   14390:	mov	r1, r7
   14394:	mov	r2, r6
   14398:	bl	136f4 <table_get_float@@Base>
   1439c:	movw	r2, #19504	; 0x4c30
   143a0:	vcvt.f64.f32	d16, s0
   143a4:	vstr	d16, [sp]
   143a8:	movt	r2, #1
   143ac:	b	143ec <table_cell_to_buffer@@Base+0x28c>
   143b0:	mov	r0, r4
   143b4:	mov	r1, r7
   143b8:	mov	r2, r6
   143bc:	bl	1370c <table_get_double@@Base>
   143c0:	movw	r2, #19507	; 0x4c33
   143c4:	vstr	d0, [sp]
   143c8:	movt	r2, #1
   143cc:	b	143ec <table_cell_to_buffer@@Base+0x28c>
   143d0:	mov	r0, r4
   143d4:	mov	r1, r7
   143d8:	mov	r2, r6
   143dc:	bl	13724 <table_get_ldouble@@Base>
   143e0:	movw	r2, #19511	; 0x4c37
   143e4:	vstr	d0, [sp]
   143e8:	movt	r2, #1
   143ec:	mov	r0, r5
   143f0:	mov	r1, r8
   143f4:	bl	11f84 <snprintf@plt>
   143f8:	b	14478 <table_cell_to_buffer@@Base+0x318>
   143fc:	mov	r0, r4
   14400:	mov	r1, r7
   14404:	mov	r2, r6
   14408:	bl	1373c <table_get_char@@Base>
   1440c:	b	14420 <table_cell_to_buffer@@Base+0x2c0>
   14410:	mov	r0, r4
   14414:	mov	r1, r7
   14418:	mov	r2, r6
   1441c:	bl	13754 <table_get_uchar@@Base>
   14420:	movw	r2, #19515	; 0x4c3b
   14424:	mov	r3, r0
   14428:	movt	r2, #1
   1442c:	b	1446c <table_cell_to_buffer@@Base+0x30c>
   14430:	mov	r0, r4
   14434:	mov	r1, r7
   14438:	mov	r2, r6
   1443c:	bl	1376c <table_get_string@@Base>
   14440:	movw	r2, #19501	; 0x4c2d
   14444:	mov	r3, r0
   14448:	movt	r2, #1
   1444c:	b	1446c <table_cell_to_buffer@@Base+0x30c>
   14450:	mov	r0, r4
   14454:	mov	r1, r7
   14458:	mov	r2, r6
   1445c:	bl	1355c <table_get_bool@@Base>
   14460:	movw	r2, #19372	; 0x4bac
   14464:	mov	r3, r0
   14468:	movt	r2, #1
   1446c:	mov	r0, r5
   14470:	mov	r1, r8
   14474:	bl	11f84 <snprintf@plt>
   14478:	mov	r0, #0
   1447c:	sub	sp, fp, #24
   14480:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14484:	mov	r0, r4
   14488:	mov	r1, r7
   1448c:	mov	r2, r6
   14490:	bl	13780 <table_get_ptr@@Base>
   14494:	movw	r2, #19518	; 0x4c3e
   14498:	mov	r3, r0
   1449c:	movt	r2, #1
   144a0:	b	1446c <table_cell_to_buffer@@Base+0x30c>

000144a4 <table_cell_from_buffer@@Base>:
   144a4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   144a8:	add	fp, sp, #24
   144ac:	sub	sp, sp, #264	; 0x108
   144b0:	mov	r5, r1
   144b4:	mov	r1, r2
   144b8:	mov	r7, r3
   144bc:	mov	r4, r2
   144c0:	mov	r6, r0
   144c4:	bl	12be8 <table_get_column_data_type@@Base>
   144c8:	cmp	r0, #23
   144cc:	bhi	14aa0 <table_cell_from_buffer@@Base+0x5fc>
   144d0:	add	r1, pc, #0
   144d4:	ldr	pc, [r1, r0, lsl #2]
   144d8:	andeq	r4, r1, r8, lsr r5
   144dc:	andeq	r4, r1, r0, ror r5
   144e0:	andeq	r4, r1, r8, lsr #11
   144e4:	andeq	r4, r1, r0, ror #11
   144e8:	andeq	r4, r1, r8, lsl r6
   144ec:	andeq	r4, r1, r0, asr r6
   144f0:	andeq	r4, r1, r8, lsl #13
   144f4:	andeq	r4, r1, r0, asr #13
   144f8:	strdeq	r4, [r1], -r8
   144fc:	andeq	r4, r1, r8, lsr r7
   14500:	andeq	r4, r1, r8, ror r7
   14504:			; <UNDEFINED> instruction: 0x000147b0
   14508:	andeq	r4, r1, r8, ror #15
   1450c:	andeq	r4, r1, r0, lsr #16
   14510:	andeq	r4, r1, r8, asr r8
   14514:	muleq	r1, r8, r8
   14518:	ldrdeq	r4, [r1], -r8
   1451c:	andeq	r4, r1, r0, lsl r9
   14520:	andeq	r4, r1, r8, asr #18
   14524:	andeq	r4, r1, r0, lsl #19
   14528:			; <UNDEFINED> instruction: 0x000149b8
   1452c:	strdeq	r4, [r1], -r0
   14530:	andeq	r4, r1, r8, lsr #20
   14534:	andeq	r4, r1, ip, ror #20
   14538:	movw	r1, #19372	; 0x4bac
   1453c:	add	r2, sp, #8
   14540:	mov	r0, r7
   14544:	movt	r1, #1
   14548:	bl	11f90 <__isoc99_sscanf@plt>
   1454c:	mvn	r7, #0
   14550:	cmp	r0, #1
   14554:	bne	14aa4 <table_cell_from_buffer@@Base+0x600>
   14558:	ldr	r3, [sp, #8]
   1455c:	mov	r0, r6
   14560:	mov	r1, r5
   14564:	mov	r2, r4
   14568:	bl	13d20 <table_set_int@@Base>
   1456c:	b	14aa0 <table_cell_from_buffer@@Base+0x5fc>
   14570:	movw	r1, #19472	; 0x4c10
   14574:	add	r2, sp, #8
   14578:	mov	r0, r7
   1457c:	movt	r1, #1
   14580:	bl	11f90 <__isoc99_sscanf@plt>
   14584:	mvn	r7, #0
   14588:	cmp	r0, #1
   1458c:	bne	14aa4 <table_cell_from_buffer@@Base+0x600>
   14590:	ldr	r3, [sp, #8]
   14594:	mov	r0, r6
   14598:	mov	r1, r5
   1459c:	mov	r2, r4
   145a0:	bl	13d48 <table_set_uint@@Base>
   145a4:	b	14aa0 <table_cell_from_buffer@@Base+0x5fc>
   145a8:	movw	r1, #19521	; 0x4c41
   145ac:	add	r2, sp, #8
   145b0:	mov	r0, r7
   145b4:	movt	r1, #1
   145b8:	bl	11f90 <__isoc99_sscanf@plt>
   145bc:	mvn	r7, #0
   145c0:	cmp	r0, #1
   145c4:	bne	14aa4 <table_cell_from_buffer@@Base+0x600>
   145c8:	ldrsb	r3, [sp, #8]
   145cc:	mov	r0, r6
   145d0:	mov	r1, r5
   145d4:	mov	r2, r4
   145d8:	bl	13d70 <table_set_int8@@Base>
   145dc:	b	14aa0 <table_cell_from_buffer@@Base+0x5fc>
   145e0:	movw	r1, #19526	; 0x4c46
   145e4:	add	r2, sp, #8
   145e8:	mov	r0, r7
   145ec:	movt	r1, #1
   145f0:	bl	11f90 <__isoc99_sscanf@plt>
   145f4:	mvn	r7, #0
   145f8:	cmp	r0, #1
   145fc:	bne	14aa4 <table_cell_from_buffer@@Base+0x600>
   14600:	ldrb	r3, [sp, #8]
   14604:	mov	r0, r6
   14608:	mov	r1, r5
   1460c:	mov	r2, r4
   14610:	bl	13d98 <table_set_uint8@@Base>
   14614:	b	14aa0 <table_cell_from_buffer@@Base+0x5fc>
   14618:	movw	r1, #19485	; 0x4c1d
   1461c:	add	r2, sp, #8
   14620:	mov	r0, r7
   14624:	movt	r1, #1
   14628:	bl	11f90 <__isoc99_sscanf@plt>
   1462c:	mvn	r7, #0
   14630:	cmp	r0, #1
   14634:	bne	14aa4 <table_cell_from_buffer@@Base+0x600>
   14638:	ldrsh	r3, [sp, #8]
   1463c:	mov	r0, r6
   14640:	mov	r1, r5
   14644:	mov	r2, r4
   14648:	bl	13dc0 <table_set_int16@@Base>
   1464c:	b	14aa0 <table_cell_from_buffer@@Base+0x5fc>
   14650:	movw	r1, #19489	; 0x4c21
   14654:	add	r2, sp, #8
   14658:	mov	r0, r7
   1465c:	movt	r1, #1
   14660:	bl	11f90 <__isoc99_sscanf@plt>
   14664:	mvn	r7, #0
   14668:	cmp	r0, #1
   1466c:	bne	14aa4 <table_cell_from_buffer@@Base+0x600>
   14670:	ldrh	r3, [sp, #8]
   14674:	mov	r0, r6
   14678:	mov	r1, r5
   1467c:	mov	r2, r4
   14680:	bl	13de8 <table_set_uint16@@Base>
   14684:	b	14aa0 <table_cell_from_buffer@@Base+0x5fc>
   14688:	movw	r1, #19372	; 0x4bac
   1468c:	add	r2, sp, #8
   14690:	mov	r0, r7
   14694:	movt	r1, #1
   14698:	bl	11f90 <__isoc99_sscanf@plt>
   1469c:	mvn	r7, #0
   146a0:	cmp	r0, #1
   146a4:	bne	14aa4 <table_cell_from_buffer@@Base+0x600>
   146a8:	ldr	r3, [sp, #8]
   146ac:	mov	r0, r6
   146b0:	mov	r1, r5
   146b4:	mov	r2, r4
   146b8:	bl	13e10 <table_set_int32@@Base>
   146bc:	b	14aa0 <table_cell_from_buffer@@Base+0x5fc>
   146c0:	movw	r1, #19472	; 0x4c10
   146c4:	add	r2, sp, #8
   146c8:	mov	r0, r7
   146cc:	movt	r1, #1
   146d0:	bl	11f90 <__isoc99_sscanf@plt>
   146d4:	mvn	r7, #0
   146d8:	cmp	r0, #1
   146dc:	bne	14aa4 <table_cell_from_buffer@@Base+0x600>
   146e0:	ldr	r3, [sp, #8]
   146e4:	mov	r0, r6
   146e8:	mov	r1, r5
   146ec:	mov	r2, r4
   146f0:	bl	13e38 <table_set_uint32@@Base>
   146f4:	b	14aa0 <table_cell_from_buffer@@Base+0x5fc>
   146f8:	movw	r1, #19475	; 0x4c13
   146fc:	add	r2, sp, #8
   14700:	mov	r0, r7
   14704:	movt	r1, #1
   14708:	bl	11f90 <__isoc99_sscanf@plt>
   1470c:	mvn	r7, #0
   14710:	cmp	r0, #1
   14714:	bne	14aa4 <table_cell_from_buffer@@Base+0x600>
   14718:	ldr	r0, [sp, #8]
   1471c:	ldr	r1, [sp, #12]
   14720:	mov	r2, r4
   14724:	stm	sp, {r0, r1}
   14728:	mov	r0, r6
   1472c:	mov	r1, r5
   14730:	bl	13e60 <table_set_int64@@Base>
   14734:	b	14aa0 <table_cell_from_buffer@@Base+0x5fc>
   14738:	movw	r1, #19480	; 0x4c18
   1473c:	add	r2, sp, #8
   14740:	mov	r0, r7
   14744:	movt	r1, #1
   14748:	bl	11f90 <__isoc99_sscanf@plt>
   1474c:	mvn	r7, #0
   14750:	cmp	r0, #1
   14754:	bne	14aa4 <table_cell_from_buffer@@Base+0x600>
   14758:	ldr	r0, [sp, #8]
   1475c:	ldr	r1, [sp, #12]
   14760:	mov	r2, r4
   14764:	stm	sp, {r0, r1}
   14768:	mov	r0, r6
   1476c:	mov	r1, r5
   14770:	bl	13e94 <table_set_uint64@@Base>
   14774:	b	14aa0 <table_cell_from_buffer@@Base+0x5fc>
   14778:	movw	r1, #19485	; 0x4c1d
   1477c:	add	r2, sp, #8
   14780:	mov	r0, r7
   14784:	movt	r1, #1
   14788:	bl	11f90 <__isoc99_sscanf@plt>
   1478c:	mvn	r7, #0
   14790:	cmp	r0, #1
   14794:	bne	14aa4 <table_cell_from_buffer@@Base+0x600>
   14798:	ldrsh	r3, [sp, #8]
   1479c:	mov	r0, r6
   147a0:	mov	r1, r5
   147a4:	mov	r2, r4
   147a8:	bl	13ec8 <table_set_short@@Base>
   147ac:	b	14aa0 <table_cell_from_buffer@@Base+0x5fc>
   147b0:	movw	r1, #19489	; 0x4c21
   147b4:	add	r2, sp, #8
   147b8:	mov	r0, r7
   147bc:	movt	r1, #1
   147c0:	bl	11f90 <__isoc99_sscanf@plt>
   147c4:	mvn	r7, #0
   147c8:	cmp	r0, #1
   147cc:	bne	14aa4 <table_cell_from_buffer@@Base+0x600>
   147d0:	ldrh	r3, [sp, #8]
   147d4:	mov	r0, r6
   147d8:	mov	r1, r5
   147dc:	mov	r2, r4
   147e0:	bl	13ef0 <table_set_ushort@@Base>
   147e4:	b	14aa0 <table_cell_from_buffer@@Base+0x5fc>
   147e8:	movw	r1, #19493	; 0x4c25
   147ec:	add	r2, sp, #8
   147f0:	mov	r0, r7
   147f4:	movt	r1, #1
   147f8:	bl	11f90 <__isoc99_sscanf@plt>
   147fc:	mvn	r7, #0
   14800:	cmp	r0, #1
   14804:	bne	14aa4 <table_cell_from_buffer@@Base+0x600>
   14808:	ldr	r3, [sp, #8]
   1480c:	mov	r0, r6
   14810:	mov	r1, r5
   14814:	mov	r2, r4
   14818:	bl	13f18 <table_set_long@@Base>
   1481c:	b	14aa0 <table_cell_from_buffer@@Base+0x5fc>
   14820:	movw	r1, #19497	; 0x4c29
   14824:	add	r2, sp, #8
   14828:	mov	r0, r7
   1482c:	movt	r1, #1
   14830:	bl	11f90 <__isoc99_sscanf@plt>
   14834:	mvn	r7, #0
   14838:	cmp	r0, #1
   1483c:	bne	14aa4 <table_cell_from_buffer@@Base+0x600>
   14840:	ldr	r3, [sp, #8]
   14844:	mov	r0, r6
   14848:	mov	r1, r5
   1484c:	mov	r2, r4
   14850:	bl	13f40 <table_set_ulong@@Base>
   14854:	b	14aa0 <table_cell_from_buffer@@Base+0x5fc>
   14858:	movw	r1, #19475	; 0x4c13
   1485c:	add	r2, sp, #8
   14860:	mov	r0, r7
   14864:	movt	r1, #1
   14868:	bl	11f90 <__isoc99_sscanf@plt>
   1486c:	mvn	r7, #0
   14870:	cmp	r0, #1
   14874:	bne	14aa4 <table_cell_from_buffer@@Base+0x600>
   14878:	ldr	r0, [sp, #8]
   1487c:	ldr	r1, [sp, #12]
   14880:	mov	r2, r4
   14884:	stm	sp, {r0, r1}
   14888:	mov	r0, r6
   1488c:	mov	r1, r5
   14890:	bl	13f68 <table_set_llong@@Base>
   14894:	b	14aa0 <table_cell_from_buffer@@Base+0x5fc>
   14898:	movw	r1, #19480	; 0x4c18
   1489c:	add	r2, sp, #8
   148a0:	mov	r0, r7
   148a4:	movt	r1, #1
   148a8:	bl	11f90 <__isoc99_sscanf@plt>
   148ac:	mvn	r7, #0
   148b0:	cmp	r0, #1
   148b4:	bne	14aa4 <table_cell_from_buffer@@Base+0x600>
   148b8:	ldr	r0, [sp, #8]
   148bc:	ldr	r1, [sp, #12]
   148c0:	mov	r2, r4
   148c4:	stm	sp, {r0, r1}
   148c8:	mov	r0, r6
   148cc:	mov	r1, r5
   148d0:	bl	13f9c <table_set_ullong@@Base>
   148d4:	b	14aa0 <table_cell_from_buffer@@Base+0x5fc>
   148d8:	movw	r1, #19504	; 0x4c30
   148dc:	add	r2, sp, #8
   148e0:	mov	r0, r7
   148e4:	movt	r1, #1
   148e8:	bl	11f90 <__isoc99_sscanf@plt>
   148ec:	mvn	r7, #0
   148f0:	cmp	r0, #1
   148f4:	bne	14aa4 <table_cell_from_buffer@@Base+0x600>
   148f8:	vldr	s0, [sp, #8]
   148fc:	mov	r0, r6
   14900:	mov	r1, r5
   14904:	mov	r2, r4
   14908:	bl	13fd0 <table_set_float@@Base>
   1490c:	b	14aa0 <table_cell_from_buffer@@Base+0x5fc>
   14910:	movw	r1, #19507	; 0x4c33
   14914:	add	r2, sp, #8
   14918:	mov	r0, r7
   1491c:	movt	r1, #1
   14920:	bl	11f90 <__isoc99_sscanf@plt>
   14924:	mvn	r7, #0
   14928:	cmp	r0, #1
   1492c:	bne	14aa4 <table_cell_from_buffer@@Base+0x600>
   14930:	vldr	d0, [sp, #8]
   14934:	mov	r0, r6
   14938:	mov	r1, r5
   1493c:	mov	r2, r4
   14940:	bl	13ff8 <table_set_double@@Base>
   14944:	b	14aa0 <table_cell_from_buffer@@Base+0x5fc>
   14948:	movw	r1, #19511	; 0x4c37
   1494c:	add	r2, sp, #8
   14950:	mov	r0, r7
   14954:	movt	r1, #1
   14958:	bl	11f90 <__isoc99_sscanf@plt>
   1495c:	mvn	r7, #0
   14960:	cmp	r0, #1
   14964:	bne	14aa4 <table_cell_from_buffer@@Base+0x600>
   14968:	vldr	d0, [sp, #8]
   1496c:	mov	r0, r6
   14970:	mov	r1, r5
   14974:	mov	r2, r4
   14978:	bl	14020 <table_set_ldouble@@Base>
   1497c:	b	14aa0 <table_cell_from_buffer@@Base+0x5fc>
   14980:	movw	r1, #19515	; 0x4c3b
   14984:	add	r2, sp, #8
   14988:	mov	r0, r7
   1498c:	movt	r1, #1
   14990:	bl	11f90 <__isoc99_sscanf@plt>
   14994:	mvn	r7, #0
   14998:	cmp	r0, #1
   1499c:	bne	14aa4 <table_cell_from_buffer@@Base+0x600>
   149a0:	ldrb	r3, [sp, #8]
   149a4:	mov	r0, r6
   149a8:	mov	r1, r5
   149ac:	mov	r2, r4
   149b0:	bl	14068 <table_set_char@@Base>
   149b4:	b	14aa0 <table_cell_from_buffer@@Base+0x5fc>
   149b8:	movw	r1, #19515	; 0x4c3b
   149bc:	add	r2, sp, #8
   149c0:	mov	r0, r7
   149c4:	movt	r1, #1
   149c8:	bl	11f90 <__isoc99_sscanf@plt>
   149cc:	mvn	r7, #0
   149d0:	cmp	r0, #1
   149d4:	bne	14aa4 <table_cell_from_buffer@@Base+0x600>
   149d8:	ldrb	r3, [sp, #8]
   149dc:	mov	r0, r6
   149e0:	mov	r1, r5
   149e4:	mov	r2, r4
   149e8:	bl	14090 <table_set_uchar@@Base>
   149ec:	b	14aa0 <table_cell_from_buffer@@Base+0x5fc>
   149f0:	movw	r1, #19501	; 0x4c2d
   149f4:	add	r2, sp, #8
   149f8:	mov	r0, r7
   149fc:	movt	r1, #1
   14a00:	bl	11f90 <__isoc99_sscanf@plt>
   14a04:	mvn	r7, #0
   14a08:	cmp	r0, #1
   14a0c:	bne	14aa4 <table_cell_from_buffer@@Base+0x600>
   14a10:	add	r3, sp, #8
   14a14:	mov	r0, r6
   14a18:	mov	r1, r5
   14a1c:	mov	r2, r4
   14a20:	bl	14048 <table_set_string@@Base>
   14a24:	b	14aa0 <table_cell_from_buffer@@Base+0x5fc>
   14a28:	movw	r1, #19372	; 0x4bac
   14a2c:	add	r2, sp, #8
   14a30:	mov	r0, r7
   14a34:	movt	r1, #1
   14a38:	bl	11f90 <__isoc99_sscanf@plt>
   14a3c:	mvn	r7, #0
   14a40:	cmp	r0, #1
   14a44:	bne	14aa4 <table_cell_from_buffer@@Base+0x600>
   14a48:	ldr	r0, [sp, #8]
   14a4c:	cmp	r0, #0
   14a50:	beq	14ab0 <table_cell_from_buffer@@Base+0x60c>
   14a54:	mov	r0, r6
   14a58:	mov	r1, r5
   14a5c:	mov	r2, r4
   14a60:	mov	r3, #1
   14a64:	bl	13cf8 <table_set_bool@@Base>
   14a68:	b	14aa0 <table_cell_from_buffer@@Base+0x5fc>
   14a6c:	movw	r1, #19518	; 0x4c3e
   14a70:	add	r2, sp, #8
   14a74:	mov	r0, r7
   14a78:	movt	r1, #1
   14a7c:	bl	11f90 <__isoc99_sscanf@plt>
   14a80:	mvn	r7, #0
   14a84:	cmp	r0, #1
   14a88:	bne	14aa4 <table_cell_from_buffer@@Base+0x600>
   14a8c:	ldr	r3, [sp, #8]
   14a90:	mov	r0, r6
   14a94:	mov	r1, r5
   14a98:	mov	r2, r4
   14a9c:	bl	140b8 <table_set_ptr@@Base>
   14aa0:	mov	r7, #0
   14aa4:	mov	r0, r7
   14aa8:	sub	sp, fp, #24
   14aac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14ab0:	mov	r0, r6
   14ab4:	mov	r1, r5
   14ab8:	mov	r2, r4
   14abc:	mov	r3, #0
   14ac0:	mov	r7, #0
   14ac4:	bl	13cf8 <table_set_bool@@Base>
   14ac8:	b	14aa4 <table_cell_from_buffer@@Base+0x600>

00014acc <table_cell_nullify@@Base>:
   14acc:	push	{r4, r5, fp, lr}
   14ad0:	add	fp, sp, #8
   14ad4:	mov	r4, r2
   14ad8:	bl	137b8 <table_get_row_ptr@@Base>
   14adc:	ldr	r5, [r0]
   14ae0:	ldr	r0, [r5, r4, lsl #2]
   14ae4:	cmp	r0, #0
   14ae8:	beq	14af8 <table_cell_nullify@@Base+0x2c>
   14aec:	bl	11f18 <free@plt>
   14af0:	mov	r0, #0
   14af4:	str	r0, [r5, r4, lsl #2]
   14af8:	mov	r0, #0
   14afc:	pop	{r4, r5, fp, pc}

00014b00 <__libc_csu_init@@Base>:
   14b00:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14b04:	mov	r7, r0
   14b08:	ldr	r6, [pc, #72]	; 14b58 <__libc_csu_init@@Base+0x58>
   14b0c:	ldr	r5, [pc, #72]	; 14b5c <__libc_csu_init@@Base+0x5c>
   14b10:	add	r6, pc, r6
   14b14:	add	r5, pc, r5
   14b18:	sub	r6, r6, r5
   14b1c:	mov	r8, r1
   14b20:	mov	r9, r2
   14b24:	bl	11ee0 <strcmp@plt-0x20>
   14b28:	asrs	r6, r6, #2
   14b2c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14b30:	mov	r4, #0
   14b34:	add	r4, r4, #1
   14b38:	ldr	r3, [r5], #4
   14b3c:	mov	r2, r9
   14b40:	mov	r1, r8
   14b44:	mov	r0, r7
   14b48:	blx	r3
   14b4c:	cmp	r6, r4
   14b50:	bne	14b34 <__libc_csu_init@@Base+0x34>
   14b54:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14b58:	strdeq	r0, [r1], -r4
   14b5c:	andeq	r0, r1, ip, ror #7

00014b60 <__libc_csu_fini@@Base>:
   14b60:	bx	lr

Disassembly of section .fini:

00014b64 <.fini>:
   14b64:	push	{r3, lr}
   14b68:	pop	{r3, pc}
