
../repos/prog2/7.1:     file format elf32-littlearm


Disassembly of section .init:

00010e28 <.init>:
   10e28:	push	{r3, lr}
   10e2c:	bl	10f38 <_start@@Base+0x3c>
   10e30:	pop	{r3, pc}

Disassembly of section .plt:

00010e34 <strcmp@plt-0x14>:
   10e34:	push	{lr}		; (str lr, [sp, #-4]!)
   10e38:	ldr	lr, [pc, #4]	; 10e44 <strcmp@plt-0x4>
   10e3c:	add	lr, pc, lr
   10e40:	ldr	pc, [lr, #8]!
   10e44:			; <UNDEFINED> instruction: 0x000121bc

00010e48 <strcmp@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #73728	; 0x12000
   10e50:	ldr	pc, [ip, #444]!	; 0x1bc

00010e54 <printf@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #73728	; 0x12000
   10e5c:	ldr	pc, [ip, #436]!	; 0x1b4

00010e60 <fopen@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #73728	; 0x12000
   10e68:	ldr	pc, [ip, #428]!	; 0x1ac

00010e6c <free@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #73728	; 0x12000
   10e74:	ldr	pc, [ip, #420]!	; 0x1a4

00010e78 <fgets@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #73728	; 0x12000
   10e80:	ldr	pc, [ip, #412]!	; 0x19c

00010e84 <memcpy@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #73728	; 0x12000
   10e8c:	ldr	pc, [ip, #404]!	; 0x194

00010e90 <realloc@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #73728	; 0x12000
   10e98:	ldr	pc, [ip, #396]!	; 0x18c

00010e9c <strcpy@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #73728	; 0x12000
   10ea4:	ldr	pc, [ip, #388]!	; 0x184

00010ea8 <malloc@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #73728	; 0x12000
   10eb0:	ldr	pc, [ip, #380]!	; 0x17c

00010eb4 <__libc_start_main@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #73728	; 0x12000
   10ebc:	ldr	pc, [ip, #372]!	; 0x174

00010ec0 <__gmon_start__@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #73728	; 0x12000
   10ec8:	ldr	pc, [ip, #364]!	; 0x16c

00010ecc <strlen@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #73728	; 0x12000
   10ed4:	ldr	pc, [ip, #356]!	; 0x164

00010ed8 <fclose@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #73728	; 0x12000
   10ee0:	ldr	pc, [ip, #348]!	; 0x15c

00010ee4 <strtok@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #73728	; 0x12000
   10eec:	ldr	pc, [ip, #340]!	; 0x154

00010ef0 <abort@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #73728	; 0x12000
   10ef8:	ldr	pc, [ip, #332]!	; 0x14c

Disassembly of section .text:

00010efc <_start@@Base>:
   10efc:	mov	fp, #0
   10f00:	mov	lr, #0
   10f04:	pop	{r1}		; (ldr r1, [sp], #4)
   10f08:	mov	r2, sp
   10f0c:	push	{r2}		; (str r2, [sp, #-4]!)
   10f10:	push	{r0}		; (str r0, [sp, #-4]!)
   10f14:	ldr	ip, [pc, #16]	; 10f2c <_start@@Base+0x30>
   10f18:	push	{ip}		; (str ip, [sp, #-4]!)
   10f1c:	ldr	r0, [pc, #12]	; 10f30 <_start@@Base+0x34>
   10f20:	ldr	r3, [pc, #12]	; 10f34 <_start@@Base+0x38>
   10f24:	bl	10eb4 <__libc_start_main@plt>
   10f28:	bl	10ef0 <abort@plt>
   10f2c:			; <UNDEFINED> instruction: 0x000128b8
   10f30:	andeq	r0, r1, ip, ror #31
   10f34:	andeq	r2, r1, r8, asr r8
   10f38:	ldr	r3, [pc, #20]	; 10f54 <_start@@Base+0x58>
   10f3c:	ldr	r2, [pc, #20]	; 10f58 <_start@@Base+0x5c>
   10f40:	add	r3, pc, r3
   10f44:	ldr	r2, [r3, r2]
   10f48:	cmp	r2, #0
   10f4c:	bxeq	lr
   10f50:	b	10ec0 <__gmon_start__@plt>
   10f54:	strheq	r2, [r1], -r8
   10f58:	andeq	r0, r0, ip, asr #32
   10f5c:	ldr	r0, [pc, #24]	; 10f7c <_start@@Base+0x80>
   10f60:	ldr	r3, [pc, #24]	; 10f80 <_start@@Base+0x84>
   10f64:	cmp	r3, r0
   10f68:	bxeq	lr
   10f6c:	ldr	r3, [pc, #16]	; 10f84 <_start@@Base+0x88>
   10f70:	cmp	r3, #0
   10f74:	bxeq	lr
   10f78:	bx	r3
   10f7c:	andeq	r3, r2, ip, asr r0
   10f80:	andeq	r3, r2, ip, asr r0
   10f84:	andeq	r0, r0, r0
   10f88:	ldr	r0, [pc, #36]	; 10fb4 <_start@@Base+0xb8>
   10f8c:	ldr	r1, [pc, #36]	; 10fb8 <_start@@Base+0xbc>
   10f90:	sub	r1, r1, r0
   10f94:	asr	r1, r1, #2
   10f98:	add	r1, r1, r1, lsr #31
   10f9c:	asrs	r1, r1, #1
   10fa0:	bxeq	lr
   10fa4:	ldr	r3, [pc, #16]	; 10fbc <_start@@Base+0xc0>
   10fa8:	cmp	r3, #0
   10fac:	bxeq	lr
   10fb0:	bx	r3
   10fb4:	andeq	r3, r2, ip, asr r0
   10fb8:	andeq	r3, r2, ip, asr r0
   10fbc:	andeq	r0, r0, r0
   10fc0:	push	{r4, lr}
   10fc4:	ldr	r4, [pc, #24]	; 10fe4 <_start@@Base+0xe8>
   10fc8:	ldrb	r3, [r4]
   10fcc:	cmp	r3, #0
   10fd0:	popne	{r4, pc}
   10fd4:	bl	10f5c <_start@@Base+0x60>
   10fd8:	mov	r3, #1
   10fdc:	strb	r3, [r4]
   10fe0:	pop	{r4, pc}
   10fe4:	andeq	r3, r2, ip, asr r0
   10fe8:	b	10f88 <_start@@Base+0x8c>

00010fec <main@@Base>:
   10fec:	push	{fp, lr}
   10ff0:	mov	fp, sp
   10ff4:	sub	sp, sp, #224	; 0xe0
   10ff8:	ldr	r0, [pc, #664]	; 11298 <main@@Base+0x2ac>
   10ffc:	add	r0, pc, r0
   11000:	movw	r1, #0
   11004:	str	r1, [fp, #-4]
   11008:	bl	10e54 <printf@plt>
   1100c:	ldr	r1, [pc, #636]	; 11290 <main@@Base+0x2a4>
   11010:	ldr	r1, [pc, r1]
   11014:	ldr	r2, [pc, #632]	; 11294 <main@@Base+0x2a8>
   11018:	add	r2, pc, r2
   1101c:	sub	r3, fp, #44	; 0x2c
   11020:	str	r0, [sp, #56]	; 0x38
   11024:	mov	r0, r3
   11028:	str	r1, [sp, #52]	; 0x34
   1102c:	mov	r1, r2
   11030:	movw	r2, #40	; 0x28
   11034:	bl	10e84 <memcpy@plt>
   11038:	ldr	r0, [sp, #52]	; 0x34
   1103c:	blx	r0
   11040:	str	r0, [sp, #72]	; 0x48
   11044:	movw	r0, #0
   11048:	str	r0, [sp, #76]	; 0x4c
   1104c:	ldr	r0, [sp, #76]	; 0x4c
   11050:	cmp	r0, #10
   11054:	bge	11080 <main@@Base+0x94>
   11058:	ldr	r0, [sp, #72]	; 0x48
   1105c:	ldr	r1, [sp, #76]	; 0x4c
   11060:	sub	r2, fp, #44	; 0x2c
   11064:	add	r1, r2, r1, lsl #2
   11068:	ldr	r1, [r1]
   1106c:	bl	123b0 <bst_insere@@Base>
   11070:	ldr	r0, [sp, #76]	; 0x4c
   11074:	add	r0, r0, #1
   11078:	str	r0, [sp, #76]	; 0x4c
   1107c:	b	1104c <main@@Base+0x60>
   11080:	ldr	r0, [sp, #72]	; 0x48
   11084:	ldr	r0, [r0]
   11088:	bl	12788 <bst_altura@@Base>
   1108c:	ldr	r1, [pc, #536]	; 112ac <main@@Base+0x2c0>
   11090:	add	r1, pc, r1
   11094:	str	r0, [sp, #48]	; 0x30
   11098:	mov	r0, r1
   1109c:	ldr	r1, [sp, #48]	; 0x30
   110a0:	bl	10e54 <printf@plt>
   110a4:	ldr	r1, [sp, #72]	; 0x48
   110a8:	str	r0, [sp, #44]	; 0x2c
   110ac:	mov	r0, r1
   110b0:	bl	12650 <bst_imprime@@Base>
   110b4:	ldr	r0, [pc, #492]	; 112a8 <main@@Base+0x2bc>
   110b8:	add	r0, pc, r0
   110bc:	bl	10e54 <printf@plt>
   110c0:	ldr	r1, [pc, #476]	; 112a4 <main@@Base+0x2b8>
   110c4:	ldr	r1, [pc, r1]
   110c8:	str	r0, [sp, #40]	; 0x28
   110cc:	blx	r1
   110d0:	ldr	r1, [pc, #452]	; 1129c <main@@Base+0x2b0>
   110d4:	add	r1, pc, r1
   110d8:	ldr	r2, [pc, #448]	; 112a0 <main@@Base+0x2b4>
   110dc:	add	r2, pc, r2
   110e0:	str	r0, [sp, #68]	; 0x44
   110e4:	mov	r0, r1
   110e8:	mov	r1, r2
   110ec:	bl	10e60 <fopen@plt>
   110f0:	str	r0, [sp, #64]	; 0x40
   110f4:	add	r0, sp, #80	; 0x50
   110f8:	ldr	r2, [sp, #64]	; 0x40
   110fc:	movw	r1, #100	; 0x64
   11100:	bl	10e78 <fgets@plt>
   11104:	movw	r1, #0
   11108:	cmp	r0, r1
   1110c:	beq	111b4 <main@@Base+0x1c8>
   11110:	ldr	r0, [pc, #436]	; 112cc <main@@Base+0x2e0>
   11114:	add	r1, pc, r0
   11118:	add	r0, sp, #80	; 0x50
   1111c:	str	r0, [sp, #36]	; 0x24
   11120:	bl	10ee4 <strtok@plt>
   11124:	ldr	r1, [pc, #412]	; 112c8 <main@@Base+0x2dc>
   11128:	add	r1, pc, r1
   1112c:	add	r2, sp, #80	; 0x50
   11130:	ldr	r3, [sp, #36]	; 0x24
   11134:	str	r0, [sp, #32]
   11138:	mov	r0, r3
   1113c:	ldr	ip, [sp, #32]
   11140:	str	r1, [sp, #28]
   11144:	mov	r1, ip
   11148:	str	r2, [sp, #24]
   1114c:	bl	10e9c <strcpy@plt>
   11150:	movw	r1, #0
   11154:	str	r0, [sp, #20]
   11158:	mov	r0, r1
   1115c:	ldr	r1, [sp, #28]
   11160:	bl	10ee4 <strtok@plt>
   11164:	add	r1, sp, #80	; 0x50
   11168:	ldr	r2, [sp, #24]
   1116c:	str	r0, [sp, #16]
   11170:	mov	r0, r2
   11174:	ldr	r3, [sp, #16]
   11178:	str	r1, [sp, #12]
   1117c:	mov	r1, r3
   11180:	bl	10e9c <strcpy@plt>
   11184:	ldr	r1, [sp, #12]
   11188:	str	r0, [sp, #8]
   1118c:	mov	r0, r1
   11190:	bl	10ecc <strlen@plt>
   11194:	sub	r0, r0, #1
   11198:	ldr	r1, [sp, #12]
   1119c:	add	r0, r1, r0
   111a0:	movw	r2, #0
   111a4:	strb	r2, [r0]
   111a8:	ldr	r0, [sp, #68]	; 0x44
   111ac:	bl	1181c <avl_insere@@Base>
   111b0:	b	110f4 <main@@Base+0x108>
   111b4:	ldr	r0, [sp, #64]	; 0x40
   111b8:	bl	10ed8 <fclose@plt>
   111bc:	ldr	r1, [pc, #236]	; 112b0 <main@@Base+0x2c4>
   111c0:	add	r1, pc, r1
   111c4:	ldr	r2, [sp, #68]	; 0x44
   111c8:	str	r0, [sp, #4]
   111cc:	mov	r0, r2
   111d0:	bl	11718 <avl_pesquisa@@Base>
   111d4:	str	r0, [sp, #60]	; 0x3c
   111d8:	ldr	r0, [sp, #60]	; 0x3c
   111dc:	movw	r1, #0
   111e0:	cmp	r0, r1
   111e4:	beq	11204 <main@@Base+0x218>
   111e8:	ldr	r0, [pc, #196]	; 112b4 <main@@Base+0x2c8>
   111ec:	add	r0, pc, r0
   111f0:	ldr	r1, [sp, #60]	; 0x3c
   111f4:	ldr	r1, [r1]
   111f8:	ldr	r2, [sp, #60]	; 0x3c
   111fc:	ldr	r2, [r2, #16]
   11200:	bl	10e54 <printf@plt>
   11204:	ldr	r0, [pc, #172]	; 112b8 <main@@Base+0x2cc>
   11208:	add	r1, pc, r0
   1120c:	ldr	r0, [sp, #68]	; 0x44
   11210:	bl	11718 <avl_pesquisa@@Base>
   11214:	str	r0, [sp, #60]	; 0x3c
   11218:	ldr	r0, [sp, #60]	; 0x3c
   1121c:	movw	r1, #0
   11220:	cmp	r0, r1
   11224:	beq	11244 <main@@Base+0x258>
   11228:	ldr	r0, [pc, #140]	; 112bc <main@@Base+0x2d0>
   1122c:	add	r0, pc, r0
   11230:	ldr	r1, [sp, #60]	; 0x3c
   11234:	ldr	r1, [r1]
   11238:	ldr	r2, [sp, #60]	; 0x3c
   1123c:	ldr	r2, [r2, #16]
   11240:	bl	10e54 <printf@plt>
   11244:	ldr	r0, [pc, #116]	; 112c0 <main@@Base+0x2d4>
   11248:	add	r1, pc, r0
   1124c:	ldr	r0, [sp, #68]	; 0x44
   11250:	bl	11718 <avl_pesquisa@@Base>
   11254:	str	r0, [sp, #60]	; 0x3c
   11258:	ldr	r0, [sp, #60]	; 0x3c
   1125c:	movw	r1, #0
   11260:	cmp	r0, r1
   11264:	beq	11284 <main@@Base+0x298>
   11268:	ldr	r0, [pc, #84]	; 112c4 <main@@Base+0x2d8>
   1126c:	add	r0, pc, r0
   11270:	ldr	r1, [sp, #60]	; 0x3c
   11274:	ldr	r1, [r1]
   11278:	ldr	r2, [sp, #60]	; 0x3c
   1127c:	ldr	r2, [r2, #16]
   11280:	bl	10e54 <printf@plt>
   11284:	movw	r0, #0
   11288:	mov	sp, fp
   1128c:	pop	{fp, pc}
   11290:	andeq	r2, r1, r0, lsr r0
   11294:	andeq	r1, r1, r8, asr #29
   11298:	andeq	r1, r0, r4, asr #17
   1129c:	andeq	r1, r0, lr, lsl r8
   112a0:	andeq	r1, r0, r2, lsr #16
   112a4:	andeq	r1, r1, r4, lsl #31
   112a8:	andeq	r1, r0, r5, lsr r8
   112ac:	andeq	r1, r0, r9, asr #16
   112b0:	andeq	r1, r0, r2, asr #14
   112b4:	andeq	r1, r0, pc, lsl r7
   112b8:	andeq	r1, r0, ip, lsl #14
   112bc:	ldrdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   112c0:	ldrdeq	r1, [r0], -r2
   112c4:	muleq	r0, pc, r6	; <UNPREDICTABLE>
   112c8:	ldrdeq	r1, [r0], -r8
   112cc:	andeq	r1, r0, ip, ror #15

000112d0 <avl_nova@@Base>:
   112d0:	push	{fp, lr}
   112d4:	mov	fp, sp
   112d8:	sub	sp, sp, #8
   112dc:	movw	r0, #4
   112e0:	bl	10ea8 <malloc@plt>
   112e4:	str	r0, [sp]
   112e8:	ldr	r0, [sp]
   112ec:	movw	r1, #0
   112f0:	cmp	r0, r1
   112f4:	bne	11304 <avl_nova@@Base+0x34>
   112f8:	movw	r0, #0
   112fc:	str	r0, [sp, #4]
   11300:	b	11318 <avl_nova@@Base+0x48>
   11304:	ldr	r0, [sp]
   11308:	movw	r1, #0
   1130c:	str	r1, [r0]
   11310:	ldr	r0, [sp]
   11314:	str	r0, [sp, #4]
   11318:	ldr	r0, [sp, #4]
   1131c:	mov	sp, fp
   11320:	pop	{fp, pc}

00011324 <avl_apaga@@Base>:
   11324:	push	{fp, lr}
   11328:	mov	fp, sp
   1132c:	sub	sp, sp, #8
   11330:	str	r0, [sp, #4]
   11334:	ldr	r0, [sp, #4]
   11338:	movw	r1, #0
   1133c:	cmp	r0, r1
   11340:	bne	11348 <avl_apaga@@Base+0x24>
   11344:	b	1138c <avl_apaga@@Base+0x68>
   11348:	b	1134c <avl_apaga@@Base+0x28>
   1134c:	ldr	r0, [sp, #4]
   11350:	ldr	r0, [r0]
   11354:	movw	r1, #0
   11358:	cmp	r0, r1
   1135c:	beq	11384 <avl_apaga@@Base+0x60>
   11360:	ldr	r0, [sp, #4]
   11364:	ldr	r0, [r0]
   11368:	ldr	r1, [sp, #4]
   1136c:	ldr	r1, [r1]
   11370:	ldr	r1, [r1]
   11374:	bl	11394 <avl_remove_impl@@Base>
   11378:	ldr	r1, [sp, #4]
   1137c:	str	r0, [r1]
   11380:	b	1134c <avl_apaga@@Base+0x28>
   11384:	ldr	r0, [sp, #4]
   11388:	bl	10e6c <free@plt>
   1138c:	mov	sp, fp
   11390:	pop	{fp, pc}

00011394 <avl_remove_impl@@Base>:
   11394:	push	{fp, lr}
   11398:	mov	fp, sp
   1139c:	sub	sp, sp, #64	; 0x40
   113a0:	str	r0, [fp, #-8]
   113a4:	str	r1, [fp, #-12]
   113a8:	ldr	r0, [fp, #-8]
   113ac:	movw	r1, #0
   113b0:	cmp	r0, r1
   113b4:	bne	113c4 <avl_remove_impl@@Base+0x30>
   113b8:	ldr	r0, [fp, #-8]
   113bc:	str	r0, [fp, #-4]
   113c0:	b	1170c <avl_remove_impl@@Base+0x378>
   113c4:	ldr	r0, [fp, #-12]
   113c8:	ldr	r1, [fp, #-8]
   113cc:	ldr	r1, [r1]
   113d0:	bl	10e48 <strcmp@plt>
   113d4:	cmp	r0, #0
   113d8:	bge	113f8 <avl_remove_impl@@Base+0x64>
   113dc:	ldr	r0, [fp, #-8]
   113e0:	ldr	r0, [r0, #4]
   113e4:	ldr	r1, [fp, #-12]
   113e8:	bl	11394 <avl_remove_impl@@Base>
   113ec:	ldr	r1, [fp, #-8]
   113f0:	str	r0, [r1, #4]
   113f4:	b	115f0 <avl_remove_impl@@Base+0x25c>
   113f8:	ldr	r0, [fp, #-12]
   113fc:	ldr	r1, [fp, #-8]
   11400:	ldr	r1, [r1]
   11404:	bl	10e48 <strcmp@plt>
   11408:	cmp	r0, #0
   1140c:	ble	1142c <avl_remove_impl@@Base+0x98>
   11410:	ldr	r0, [fp, #-8]
   11414:	ldr	r0, [r0, #8]
   11418:	ldr	r1, [fp, #-12]
   1141c:	bl	11394 <avl_remove_impl@@Base>
   11420:	ldr	r1, [fp, #-8]
   11424:	str	r0, [r1, #8]
   11428:	b	115ec <avl_remove_impl@@Base+0x258>
   1142c:	ldr	r0, [fp, #-8]
   11430:	ldr	r0, [r0, #4]
   11434:	movw	r1, #0
   11438:	cmp	r0, r1
   1143c:	beq	11454 <avl_remove_impl@@Base+0xc0>
   11440:	ldr	r0, [fp, #-8]
   11444:	ldr	r0, [r0, #8]
   11448:	movw	r1, #0
   1144c:	cmp	r0, r1
   11450:	bne	11554 <avl_remove_impl@@Base+0x1c0>
   11454:	ldr	r0, [fp, #-8]
   11458:	ldr	r0, [r0, #4]
   1145c:	movw	r1, #0
   11460:	cmp	r0, r1
   11464:	beq	11478 <avl_remove_impl@@Base+0xe4>
   11468:	ldr	r0, [fp, #-8]
   1146c:	ldr	r0, [r0, #4]
   11470:	str	r0, [fp, #-28]	; 0xffffffe4
   11474:	b	11484 <avl_remove_impl@@Base+0xf0>
   11478:	ldr	r0, [fp, #-8]
   1147c:	ldr	r0, [r0, #8]
   11480:	str	r0, [fp, #-28]	; 0xffffffe4
   11484:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11488:	str	r0, [fp, #-16]
   1148c:	ldr	r0, [fp, #-16]
   11490:	movw	r1, #0
   11494:	cmp	r0, r1
   11498:	bne	114b0 <avl_remove_impl@@Base+0x11c>
   1149c:	ldr	r0, [fp, #-8]
   114a0:	str	r0, [fp, #-16]
   114a4:	movw	r0, #0
   114a8:	str	r0, [fp, #-8]
   114ac:	b	1153c <avl_remove_impl@@Base+0x1a8>
   114b0:	ldr	r0, [fp, #-8]
   114b4:	ldr	r0, [r0]
   114b8:	ldr	r1, [fp, #-16]
   114bc:	ldr	r1, [r1]
   114c0:	str	r0, [sp, #32]
   114c4:	mov	r0, r1
   114c8:	bl	10ecc <strlen@plt>
   114cc:	add	r0, r0, #1
   114d0:	mov	r1, r0
   114d4:	ldr	r2, [sp, #32]
   114d8:	str	r0, [sp, #28]
   114dc:	mov	r0, r2
   114e0:	ldr	r3, [sp, #28]
   114e4:	str	r1, [sp, #24]
   114e8:	mov	r1, r3
   114ec:	bl	10e90 <realloc@plt>
   114f0:	ldr	r1, [fp, #-8]
   114f4:	str	r0, [r1]
   114f8:	ldr	r0, [fp, #-8]
   114fc:	ldr	r0, [r0]
   11500:	ldr	r1, [fp, #-16]
   11504:	ldr	r1, [r1]
   11508:	bl	10e9c <strcpy@plt>
   1150c:	ldr	r1, [fp, #-16]
   11510:	ldr	r1, [r1, #4]
   11514:	ldr	r2, [fp, #-8]
   11518:	str	r1, [r2, #4]
   1151c:	ldr	r1, [fp, #-16]
   11520:	ldr	r1, [r1, #8]
   11524:	ldr	r2, [fp, #-8]
   11528:	str	r1, [r2, #8]
   1152c:	ldr	r1, [fp, #-16]
   11530:	ldr	r1, [r1, #12]
   11534:	ldr	r2, [fp, #-8]
   11538:	str	r1, [r2, #12]
   1153c:	ldr	r0, [fp, #-16]
   11540:	ldr	r0, [r0]
   11544:	bl	10e6c <free@plt>
   11548:	ldr	r0, [fp, #-16]
   1154c:	bl	10e6c <free@plt>
   11550:	b	115e8 <avl_remove_impl@@Base+0x254>
   11554:	ldr	r0, [fp, #-8]
   11558:	ldr	r0, [r0, #8]
   1155c:	bl	11b24 <avl_no_valormin@@Base>
   11560:	str	r0, [fp, #-20]	; 0xffffffec
   11564:	ldr	r0, [fp, #-8]
   11568:	ldr	r0, [r0]
   1156c:	ldr	r1, [fp, #-20]	; 0xffffffec
   11570:	ldr	r1, [r1]
   11574:	str	r0, [sp, #20]
   11578:	mov	r0, r1
   1157c:	bl	10ecc <strlen@plt>
   11580:	add	r0, r0, #1
   11584:	mov	r1, r0
   11588:	ldr	r2, [sp, #20]
   1158c:	str	r0, [sp, #16]
   11590:	mov	r0, r2
   11594:	ldr	r3, [sp, #16]
   11598:	str	r1, [sp, #12]
   1159c:	mov	r1, r3
   115a0:	bl	10e90 <realloc@plt>
   115a4:	ldr	r1, [fp, #-8]
   115a8:	str	r0, [r1]
   115ac:	ldr	r0, [fp, #-8]
   115b0:	ldr	r0, [r0]
   115b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   115b8:	ldr	r1, [r1]
   115bc:	bl	10e9c <strcpy@plt>
   115c0:	ldr	r1, [fp, #-8]
   115c4:	ldr	r1, [r1, #8]
   115c8:	ldr	r2, [fp, #-20]	; 0xffffffec
   115cc:	ldr	r2, [r2]
   115d0:	str	r0, [sp, #8]
   115d4:	mov	r0, r1
   115d8:	mov	r1, r2
   115dc:	bl	11394 <avl_remove_impl@@Base>
   115e0:	ldr	r1, [fp, #-8]
   115e4:	str	r0, [r1, #8]
   115e8:	b	115ec <avl_remove_impl@@Base+0x258>
   115ec:	b	115f0 <avl_remove_impl@@Base+0x25c>
   115f0:	ldr	r0, [fp, #-8]
   115f4:	movw	r1, #0
   115f8:	cmp	r0, r1
   115fc:	bne	1160c <avl_remove_impl@@Base+0x278>
   11600:	ldr	r0, [fp, #-8]
   11604:	str	r0, [fp, #-4]
   11608:	b	1170c <avl_remove_impl@@Base+0x378>
   1160c:	ldr	r0, [fp, #-8]
   11610:	ldr	r0, [r0, #4]
   11614:	bl	11ca4 <avl_altura@@Base>
   11618:	ldr	r1, [fp, #-8]
   1161c:	ldr	r1, [r1, #8]
   11620:	str	r0, [sp, #4]
   11624:	mov	r0, r1
   11628:	bl	11ca4 <avl_altura@@Base>
   1162c:	ldr	r1, [sp, #4]
   11630:	str	r0, [sp]
   11634:	mov	r0, r1
   11638:	ldr	r1, [sp]
   1163c:	bl	11ce0 <max@@Base>
   11640:	add	r0, r0, #1
   11644:	ldr	r1, [fp, #-8]
   11648:	str	r0, [r1, #12]
   1164c:	ldr	r0, [fp, #-8]
   11650:	bl	11f3c <calc_balanceamento@@Base>
   11654:	str	r0, [fp, #-24]	; 0xffffffe8
   11658:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1165c:	cmp	r0, #1
   11660:	ble	116ac <avl_remove_impl@@Base+0x318>
   11664:	ldr	r0, [fp, #-8]
   11668:	ldr	r0, [r0, #8]
   1166c:	bl	11f3c <calc_balanceamento@@Base>
   11670:	cmp	r0, #0
   11674:	bge	1169c <avl_remove_impl@@Base+0x308>
   11678:	ldr	r0, [fp, #-8]
   1167c:	ldr	r0, [r0, #8]
   11680:	bl	11da4 <roda_direita@@Base>
   11684:	ldr	r1, [fp, #-8]
   11688:	str	r0, [r1, #8]
   1168c:	ldr	r0, [fp, #-8]
   11690:	bl	11e70 <roda_esquerda@@Base>
   11694:	str	r0, [fp, #-4]
   11698:	b	1170c <avl_remove_impl@@Base+0x378>
   1169c:	ldr	r0, [fp, #-8]
   116a0:	bl	11e70 <roda_esquerda@@Base>
   116a4:	str	r0, [fp, #-4]
   116a8:	b	1170c <avl_remove_impl@@Base+0x378>
   116ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   116b0:	cmn	r0, #1
   116b4:	bge	11700 <avl_remove_impl@@Base+0x36c>
   116b8:	ldr	r0, [fp, #-8]
   116bc:	ldr	r0, [r0, #4]
   116c0:	bl	11f3c <calc_balanceamento@@Base>
   116c4:	cmp	r0, #0
   116c8:	ble	116f0 <avl_remove_impl@@Base+0x35c>
   116cc:	ldr	r0, [fp, #-8]
   116d0:	ldr	r0, [r0, #4]
   116d4:	bl	11e70 <roda_esquerda@@Base>
   116d8:	ldr	r1, [fp, #-8]
   116dc:	str	r0, [r1, #4]
   116e0:	ldr	r0, [fp, #-8]
   116e4:	bl	11da4 <roda_direita@@Base>
   116e8:	str	r0, [fp, #-4]
   116ec:	b	1170c <avl_remove_impl@@Base+0x378>
   116f0:	ldr	r0, [fp, #-8]
   116f4:	bl	11da4 <roda_direita@@Base>
   116f8:	str	r0, [fp, #-4]
   116fc:	b	1170c <avl_remove_impl@@Base+0x378>
   11700:	b	11704 <avl_remove_impl@@Base+0x370>
   11704:	ldr	r0, [fp, #-8]
   11708:	str	r0, [fp, #-4]
   1170c:	ldr	r0, [fp, #-4]
   11710:	mov	sp, fp
   11714:	pop	{fp, pc}

00011718 <avl_pesquisa@@Base>:
   11718:	push	{fp, lr}
   1171c:	mov	fp, sp
   11720:	sub	sp, sp, #16
   11724:	str	r0, [sp, #8]
   11728:	str	r1, [sp, #4]
   1172c:	ldr	r0, [sp, #8]
   11730:	movw	r1, #0
   11734:	cmp	r0, r1
   11738:	beq	1174c <avl_pesquisa@@Base+0x34>
   1173c:	ldr	r0, [sp, #4]
   11740:	movw	r1, #0
   11744:	cmp	r0, r1
   11748:	bne	11758 <avl_pesquisa@@Base+0x40>
   1174c:	movw	r0, #0
   11750:	str	r0, [fp, #-4]
   11754:	b	1176c <avl_pesquisa@@Base+0x54>
   11758:	ldr	r0, [sp, #8]
   1175c:	ldr	r0, [r0]
   11760:	ldr	r1, [sp, #4]
   11764:	bl	11778 <avl_pesquisa_impl@@Base>
   11768:	str	r0, [fp, #-4]
   1176c:	ldr	r0, [fp, #-4]
   11770:	mov	sp, fp
   11774:	pop	{fp, pc}

00011778 <avl_pesquisa_impl@@Base>:
   11778:	push	{fp, lr}
   1177c:	mov	fp, sp
   11780:	sub	sp, sp, #16
   11784:	str	r0, [sp, #8]
   11788:	str	r1, [sp, #4]
   1178c:	ldr	r0, [sp, #8]
   11790:	movw	r1, #0
   11794:	cmp	r0, r1
   11798:	bne	117a8 <avl_pesquisa_impl@@Base+0x30>
   1179c:	movw	r0, #0
   117a0:	str	r0, [fp, #-4]
   117a4:	b	11810 <avl_pesquisa_impl@@Base+0x98>
   117a8:	ldr	r0, [sp, #4]
   117ac:	ldr	r1, [sp, #8]
   117b0:	ldr	r1, [r1]
   117b4:	bl	10e48 <strcmp@plt>
   117b8:	cmp	r0, #0
   117bc:	bge	117d8 <avl_pesquisa_impl@@Base+0x60>
   117c0:	ldr	r0, [sp, #8]
   117c4:	ldr	r0, [r0, #4]
   117c8:	ldr	r1, [sp, #4]
   117cc:	bl	11778 <avl_pesquisa_impl@@Base>
   117d0:	str	r0, [fp, #-4]
   117d4:	b	11810 <avl_pesquisa_impl@@Base+0x98>
   117d8:	ldr	r0, [sp, #4]
   117dc:	ldr	r1, [sp, #8]
   117e0:	ldr	r1, [r1]
   117e4:	bl	10e48 <strcmp@plt>
   117e8:	cmp	r0, #0
   117ec:	ble	11808 <avl_pesquisa_impl@@Base+0x90>
   117f0:	ldr	r0, [sp, #8]
   117f4:	ldr	r0, [r0, #8]
   117f8:	ldr	r1, [sp, #4]
   117fc:	bl	11778 <avl_pesquisa_impl@@Base>
   11800:	str	r0, [fp, #-4]
   11804:	b	11810 <avl_pesquisa_impl@@Base+0x98>
   11808:	ldr	r0, [sp, #8]
   1180c:	str	r0, [fp, #-4]
   11810:	ldr	r0, [fp, #-4]
   11814:	mov	sp, fp
   11818:	pop	{fp, pc}

0001181c <avl_insere@@Base>:
   1181c:	push	{fp, lr}
   11820:	mov	fp, sp
   11824:	sub	sp, sp, #16
   11828:	str	r0, [sp, #8]
   1182c:	str	r1, [sp, #4]
   11830:	ldr	r0, [sp, #8]
   11834:	movw	r1, #0
   11838:	cmp	r0, r1
   1183c:	beq	11850 <avl_insere@@Base+0x34>
   11840:	ldr	r0, [sp, #4]
   11844:	movw	r1, #0
   11848:	cmp	r0, r1
   1184c:	bne	1185c <avl_insere@@Base+0x40>
   11850:	mvn	r0, #0
   11854:	str	r0, [fp, #-4]
   11858:	b	1187c <avl_insere@@Base+0x60>
   1185c:	ldr	r0, [sp, #8]
   11860:	ldr	r0, [r0]
   11864:	ldr	r1, [sp, #4]
   11868:	bl	11888 <avl_insere_impl@@Base>
   1186c:	ldr	r1, [sp, #8]
   11870:	str	r0, [r1]
   11874:	movw	r0, #0
   11878:	str	r0, [fp, #-4]
   1187c:	ldr	r0, [fp, #-4]
   11880:	mov	sp, fp
   11884:	pop	{fp, pc}

00011888 <avl_insere_impl@@Base>:
   11888:	push	{fp, lr}
   1188c:	mov	fp, sp
   11890:	sub	sp, sp, #24
   11894:	str	r0, [fp, #-8]
   11898:	str	r1, [sp, #12]
   1189c:	ldr	r0, [fp, #-8]
   118a0:	movw	r1, #0
   118a4:	cmp	r0, r1
   118a8:	bne	118bc <avl_insere_impl@@Base+0x34>
   118ac:	ldr	r0, [sp, #12]
   118b0:	bl	11d1c <avl_novo_no@@Base>
   118b4:	str	r0, [fp, #-4]
   118b8:	b	11a60 <avl_insere_impl@@Base+0x1d8>
   118bc:	ldr	r0, [sp, #12]
   118c0:	ldr	r1, [fp, #-8]
   118c4:	ldr	r1, [r1]
   118c8:	bl	10e48 <strcmp@plt>
   118cc:	cmp	r0, #0
   118d0:	bge	118f0 <avl_insere_impl@@Base+0x68>
   118d4:	ldr	r0, [fp, #-8]
   118d8:	ldr	r0, [r0, #4]
   118dc:	ldr	r1, [sp, #12]
   118e0:	bl	11888 <avl_insere_impl@@Base>
   118e4:	ldr	r1, [fp, #-8]
   118e8:	str	r0, [r1, #4]
   118ec:	b	11960 <avl_insere_impl@@Base+0xd8>
   118f0:	ldr	r0, [sp, #12]
   118f4:	ldr	r1, [fp, #-8]
   118f8:	ldr	r1, [r1]
   118fc:	bl	10e48 <strcmp@plt>
   11900:	cmp	r0, #0
   11904:	ble	11924 <avl_insere_impl@@Base+0x9c>
   11908:	ldr	r0, [fp, #-8]
   1190c:	ldr	r0, [r0, #8]
   11910:	ldr	r1, [sp, #12]
   11914:	bl	11888 <avl_insere_impl@@Base>
   11918:	ldr	r1, [fp, #-8]
   1191c:	str	r0, [r1, #8]
   11920:	b	1195c <avl_insere_impl@@Base+0xd4>
   11924:	ldr	r0, [sp, #12]
   11928:	ldr	r1, [fp, #-8]
   1192c:	ldr	r1, [r1]
   11930:	bl	10e48 <strcmp@plt>
   11934:	cmp	r0, #0
   11938:	bne	11958 <avl_insere_impl@@Base+0xd0>
   1193c:	ldr	r0, [fp, #-8]
   11940:	ldr	r1, [r0, #16]
   11944:	add	r1, r1, #1
   11948:	str	r1, [r0, #16]
   1194c:	ldr	r0, [fp, #-8]
   11950:	str	r0, [fp, #-4]
   11954:	b	11a60 <avl_insere_impl@@Base+0x1d8>
   11958:	b	1195c <avl_insere_impl@@Base+0xd4>
   1195c:	b	11960 <avl_insere_impl@@Base+0xd8>
   11960:	ldr	r0, [fp, #-8]
   11964:	ldr	r0, [r0, #4]
   11968:	bl	11ca4 <avl_altura@@Base>
   1196c:	ldr	r1, [fp, #-8]
   11970:	ldr	r1, [r1, #8]
   11974:	str	r0, [sp, #4]
   11978:	mov	r0, r1
   1197c:	bl	11ca4 <avl_altura@@Base>
   11980:	ldr	r1, [sp, #4]
   11984:	str	r0, [sp]
   11988:	mov	r0, r1
   1198c:	ldr	r1, [sp]
   11990:	bl	11ce0 <max@@Base>
   11994:	add	r0, r0, #1
   11998:	ldr	r1, [fp, #-8]
   1199c:	str	r0, [r1, #12]
   119a0:	ldr	r0, [fp, #-8]
   119a4:	bl	11f3c <calc_balanceamento@@Base>
   119a8:	str	r0, [sp, #8]
   119ac:	ldr	r0, [sp, #8]
   119b0:	cmp	r0, #1
   119b4:	ble	11a00 <avl_insere_impl@@Base+0x178>
   119b8:	ldr	r0, [fp, #-8]
   119bc:	ldr	r0, [r0, #8]
   119c0:	bl	11f3c <calc_balanceamento@@Base>
   119c4:	cmp	r0, #0
   119c8:	bge	119f0 <avl_insere_impl@@Base+0x168>
   119cc:	ldr	r0, [fp, #-8]
   119d0:	ldr	r0, [r0, #8]
   119d4:	bl	11da4 <roda_direita@@Base>
   119d8:	ldr	r1, [fp, #-8]
   119dc:	str	r0, [r1, #8]
   119e0:	ldr	r0, [fp, #-8]
   119e4:	bl	11e70 <roda_esquerda@@Base>
   119e8:	str	r0, [fp, #-4]
   119ec:	b	11a60 <avl_insere_impl@@Base+0x1d8>
   119f0:	ldr	r0, [fp, #-8]
   119f4:	bl	11e70 <roda_esquerda@@Base>
   119f8:	str	r0, [fp, #-4]
   119fc:	b	11a60 <avl_insere_impl@@Base+0x1d8>
   11a00:	ldr	r0, [sp, #8]
   11a04:	cmn	r0, #1
   11a08:	bge	11a54 <avl_insere_impl@@Base+0x1cc>
   11a0c:	ldr	r0, [fp, #-8]
   11a10:	ldr	r0, [r0, #4]
   11a14:	bl	11f3c <calc_balanceamento@@Base>
   11a18:	cmp	r0, #0
   11a1c:	ble	11a44 <avl_insere_impl@@Base+0x1bc>
   11a20:	ldr	r0, [fp, #-8]
   11a24:	ldr	r0, [r0, #4]
   11a28:	bl	11e70 <roda_esquerda@@Base>
   11a2c:	ldr	r1, [fp, #-8]
   11a30:	str	r0, [r1, #4]
   11a34:	ldr	r0, [fp, #-8]
   11a38:	bl	11da4 <roda_direita@@Base>
   11a3c:	str	r0, [fp, #-4]
   11a40:	b	11a60 <avl_insere_impl@@Base+0x1d8>
   11a44:	ldr	r0, [fp, #-8]
   11a48:	bl	11da4 <roda_direita@@Base>
   11a4c:	str	r0, [fp, #-4]
   11a50:	b	11a60 <avl_insere_impl@@Base+0x1d8>
   11a54:	b	11a58 <avl_insere_impl@@Base+0x1d0>
   11a58:	ldr	r0, [fp, #-8]
   11a5c:	str	r0, [fp, #-4]
   11a60:	ldr	r0, [fp, #-4]
   11a64:	mov	sp, fp
   11a68:	pop	{fp, pc}

00011a6c <avl_remove@@Base>:
   11a6c:	push	{fp, lr}
   11a70:	mov	fp, sp
   11a74:	sub	sp, sp, #16
   11a78:	str	r0, [sp, #8]
   11a7c:	str	r1, [sp, #4]
   11a80:	ldr	r0, [sp, #8]
   11a84:	movw	r1, #0
   11a88:	cmp	r0, r1
   11a8c:	beq	11aa0 <avl_remove@@Base+0x34>
   11a90:	ldr	r0, [sp, #4]
   11a94:	movw	r1, #0
   11a98:	cmp	r0, r1
   11a9c:	bne	11aac <avl_remove@@Base+0x40>
   11aa0:	mvn	r0, #0
   11aa4:	str	r0, [fp, #-4]
   11aa8:	b	11acc <avl_remove@@Base+0x60>
   11aac:	ldr	r0, [sp, #8]
   11ab0:	ldr	r0, [r0]
   11ab4:	ldr	r1, [sp, #4]
   11ab8:	bl	11394 <avl_remove_impl@@Base>
   11abc:	ldr	r1, [sp, #8]
   11ac0:	str	r0, [r1]
   11ac4:	movw	r0, #0
   11ac8:	str	r0, [fp, #-4]
   11acc:	ldr	r0, [fp, #-4]
   11ad0:	mov	sp, fp
   11ad4:	pop	{fp, pc}

00011ad8 <avl_min@@Base>:
   11ad8:	push	{fp, lr}
   11adc:	mov	fp, sp
   11ae0:	sub	sp, sp, #8
   11ae4:	str	r0, [sp]
   11ae8:	ldr	r0, [sp]
   11aec:	movw	r1, #0
   11af0:	cmp	r0, r1
   11af4:	bne	11b04 <avl_min@@Base+0x2c>
   11af8:	movw	r0, #0
   11afc:	str	r0, [sp, #4]
   11b00:	b	11b18 <avl_min@@Base+0x40>
   11b04:	ldr	r0, [sp]
   11b08:	ldr	r0, [r0]
   11b0c:	bl	11b24 <avl_no_valormin@@Base>
   11b10:	ldr	r0, [r0]
   11b14:	str	r0, [sp, #4]
   11b18:	ldr	r0, [sp, #4]
   11b1c:	mov	sp, fp
   11b20:	pop	{fp, pc}

00011b24 <avl_no_valormin@@Base>:
   11b24:	sub	sp, sp, #8
   11b28:	str	r0, [sp, #4]
   11b2c:	ldr	r0, [sp, #4]
   11b30:	str	r0, [sp]
   11b34:	ldr	r0, [sp]
   11b38:	ldr	r0, [r0, #4]
   11b3c:	movw	r1, #0
   11b40:	cmp	r0, r1
   11b44:	beq	11b58 <avl_no_valormin@@Base+0x34>
   11b48:	ldr	r0, [sp]
   11b4c:	ldr	r0, [r0, #4]
   11b50:	str	r0, [sp]
   11b54:	b	11b34 <avl_no_valormin@@Base+0x10>
   11b58:	ldr	r0, [sp]
   11b5c:	add	sp, sp, #8
   11b60:	bx	lr

00011b64 <avl_max@@Base>:
   11b64:	push	{fp, lr}
   11b68:	mov	fp, sp
   11b6c:	sub	sp, sp, #8
   11b70:	str	r0, [sp]
   11b74:	ldr	r0, [sp]
   11b78:	movw	r1, #0
   11b7c:	cmp	r0, r1
   11b80:	bne	11b90 <avl_max@@Base+0x2c>
   11b84:	movw	r0, #0
   11b88:	str	r0, [sp, #4]
   11b8c:	b	11ba4 <avl_max@@Base+0x40>
   11b90:	ldr	r0, [sp]
   11b94:	ldr	r0, [r0]
   11b98:	bl	11bb0 <avl_no_valormax@@Base>
   11b9c:	ldr	r0, [r0]
   11ba0:	str	r0, [sp, #4]
   11ba4:	ldr	r0, [sp, #4]
   11ba8:	mov	sp, fp
   11bac:	pop	{fp, pc}

00011bb0 <avl_no_valormax@@Base>:
   11bb0:	sub	sp, sp, #8
   11bb4:	str	r0, [sp, #4]
   11bb8:	ldr	r0, [sp, #4]
   11bbc:	str	r0, [sp]
   11bc0:	ldr	r0, [sp]
   11bc4:	ldr	r0, [r0, #8]
   11bc8:	movw	r1, #0
   11bcc:	cmp	r0, r1
   11bd0:	beq	11be4 <avl_no_valormax@@Base+0x34>
   11bd4:	ldr	r0, [sp]
   11bd8:	ldr	r0, [r0, #8]
   11bdc:	str	r0, [sp]
   11be0:	b	11bc0 <avl_no_valormax@@Base+0x10>
   11be4:	ldr	r0, [sp]
   11be8:	add	sp, sp, #8
   11bec:	bx	lr

00011bf0 <avl_imprime@@Base>:
   11bf0:	push	{fp, lr}
   11bf4:	mov	fp, sp
   11bf8:	sub	sp, sp, #8
   11bfc:	str	r0, [sp, #4]
   11c00:	ldr	r0, [sp, #4]
   11c04:	movw	r1, #0
   11c08:	cmp	r0, r1
   11c0c:	bne	11c14 <avl_imprime@@Base+0x24>
   11c10:	b	11c2c <avl_imprime@@Base+0x3c>
   11c14:	ldr	r0, [sp, #4]
   11c18:	ldr	r0, [r0]
   11c1c:	bl	11c38 <avl_preordem_impl@@Base>
   11c20:	ldr	r0, [pc, #12]	; 11c34 <avl_imprime@@Base+0x44>
   11c24:	add	r0, pc, r0
   11c28:	bl	10e54 <printf@plt>
   11c2c:	mov	sp, fp
   11c30:	pop	{fp, pc}
   11c34:	andeq	r0, r0, ip, asr #25

00011c38 <avl_preordem_impl@@Base>:
   11c38:	push	{fp, lr}
   11c3c:	mov	fp, sp
   11c40:	sub	sp, sp, #8
   11c44:	str	r0, [sp, #4]
   11c48:	ldr	r0, [sp, #4]
   11c4c:	movw	r1, #0
   11c50:	cmp	r0, r1
   11c54:	bne	11c5c <avl_preordem_impl@@Base+0x24>
   11c58:	b	11c98 <avl_preordem_impl@@Base+0x60>
   11c5c:	ldr	r0, [pc, #60]	; 11ca0 <avl_preordem_impl@@Base+0x68>
   11c60:	add	r0, pc, r0
   11c64:	ldr	r1, [sp, #4]
   11c68:	ldr	r1, [r1]
   11c6c:	ldr	r2, [sp, #4]
   11c70:	ldr	r2, [r2, #16]
   11c74:	bl	10e54 <printf@plt>
   11c78:	ldr	r1, [sp, #4]
   11c7c:	ldr	r1, [r1, #4]
   11c80:	str	r0, [sp]
   11c84:	mov	r0, r1
   11c88:	bl	11c38 <avl_preordem_impl@@Base>
   11c8c:	ldr	r0, [sp, #4]
   11c90:	ldr	r0, [r0, #8]
   11c94:	bl	11c38 <avl_preordem_impl@@Base>
   11c98:	mov	sp, fp
   11c9c:	pop	{fp, pc}
   11ca0:	andeq	r0, r0, r1, asr #25

00011ca4 <avl_altura@@Base>:
   11ca4:	sub	sp, sp, #8
   11ca8:	str	r0, [sp]
   11cac:	ldr	r0, [sp]
   11cb0:	movw	r1, #0
   11cb4:	cmp	r0, r1
   11cb8:	bne	11cc8 <avl_altura@@Base+0x24>
   11cbc:	mvn	r0, #0
   11cc0:	str	r0, [sp, #4]
   11cc4:	b	11cd4 <avl_altura@@Base+0x30>
   11cc8:	ldr	r0, [sp]
   11ccc:	ldr	r0, [r0, #12]
   11cd0:	str	r0, [sp, #4]
   11cd4:	ldr	r0, [sp, #4]
   11cd8:	add	sp, sp, #8
   11cdc:	bx	lr

00011ce0 <max@@Base>:
   11ce0:	sub	sp, sp, #12
   11ce4:	str	r0, [sp, #8]
   11ce8:	str	r1, [sp, #4]
   11cec:	ldr	r0, [sp, #8]
   11cf0:	ldr	r1, [sp, #4]
   11cf4:	cmp	r0, r1
   11cf8:	ble	11d08 <max@@Base+0x28>
   11cfc:	ldr	r0, [sp, #8]
   11d00:	str	r0, [sp]
   11d04:	b	11d10 <max@@Base+0x30>
   11d08:	ldr	r0, [sp, #4]
   11d0c:	str	r0, [sp]
   11d10:	ldr	r0, [sp]
   11d14:	add	sp, sp, #12
   11d18:	bx	lr

00011d1c <avl_novo_no@@Base>:
   11d1c:	push	{fp, lr}
   11d20:	mov	fp, sp
   11d24:	sub	sp, sp, #16
   11d28:	str	r0, [fp, #-4]
   11d2c:	mov	r0, #20
   11d30:	bl	10ea8 <malloc@plt>
   11d34:	str	r0, [sp, #8]
   11d38:	ldr	r0, [fp, #-4]
   11d3c:	bl	10ecc <strlen@plt>
   11d40:	add	r0, r0, #1
   11d44:	mov	r1, r0
   11d48:	str	r1, [sp, #4]
   11d4c:	bl	10ea8 <malloc@plt>
   11d50:	ldr	r1, [sp, #8]
   11d54:	str	r0, [r1]
   11d58:	ldr	r0, [sp, #8]
   11d5c:	ldr	r0, [r0]
   11d60:	ldr	r1, [fp, #-4]
   11d64:	bl	10e9c <strcpy@plt>
   11d68:	ldr	r1, [sp, #8]
   11d6c:	movw	r2, #0
   11d70:	str	r2, [r1, #4]
   11d74:	ldr	r1, [sp, #8]
   11d78:	str	r2, [r1, #8]
   11d7c:	ldr	r1, [sp, #8]
   11d80:	str	r2, [r1, #12]
   11d84:	ldr	r1, [sp, #8]
   11d88:	movw	r2, #1
   11d8c:	str	r2, [r1, #16]
   11d90:	ldr	r1, [sp, #8]
   11d94:	str	r0, [sp]
   11d98:	mov	r0, r1
   11d9c:	mov	sp, fp
   11da0:	pop	{fp, pc}

00011da4 <roda_direita@@Base>:
   11da4:	push	{fp, lr}
   11da8:	mov	fp, sp
   11dac:	sub	sp, sp, #32
   11db0:	str	r0, [fp, #-4]
   11db4:	ldr	r0, [fp, #-4]
   11db8:	ldr	r0, [r0, #4]
   11dbc:	str	r0, [fp, #-8]
   11dc0:	ldr	r0, [fp, #-8]
   11dc4:	ldr	r0, [r0, #8]
   11dc8:	str	r0, [fp, #-12]
   11dcc:	ldr	r0, [fp, #-4]
   11dd0:	ldr	r1, [fp, #-8]
   11dd4:	str	r0, [r1, #8]
   11dd8:	ldr	r0, [fp, #-12]
   11ddc:	ldr	r1, [fp, #-4]
   11de0:	str	r0, [r1, #4]
   11de4:	ldr	r0, [fp, #-4]
   11de8:	ldr	r0, [r0, #4]
   11dec:	bl	11ca4 <avl_altura@@Base>
   11df0:	ldr	r1, [fp, #-4]
   11df4:	ldr	r1, [r1, #8]
   11df8:	str	r0, [sp, #16]
   11dfc:	mov	r0, r1
   11e00:	bl	11ca4 <avl_altura@@Base>
   11e04:	ldr	r1, [sp, #16]
   11e08:	str	r0, [sp, #12]
   11e0c:	mov	r0, r1
   11e10:	ldr	r1, [sp, #12]
   11e14:	bl	11ce0 <max@@Base>
   11e18:	add	r0, r0, #1
   11e1c:	ldr	r1, [fp, #-4]
   11e20:	str	r0, [r1, #12]
   11e24:	ldr	r0, [fp, #-8]
   11e28:	ldr	r0, [r0, #4]
   11e2c:	bl	11ca4 <avl_altura@@Base>
   11e30:	ldr	r1, [fp, #-8]
   11e34:	ldr	r1, [r1, #8]
   11e38:	str	r0, [sp, #8]
   11e3c:	mov	r0, r1
   11e40:	bl	11ca4 <avl_altura@@Base>
   11e44:	ldr	r1, [sp, #8]
   11e48:	str	r0, [sp, #4]
   11e4c:	mov	r0, r1
   11e50:	ldr	r1, [sp, #4]
   11e54:	bl	11ce0 <max@@Base>
   11e58:	add	r0, r0, #1
   11e5c:	ldr	r1, [fp, #-8]
   11e60:	str	r0, [r1, #12]
   11e64:	ldr	r0, [fp, #-8]
   11e68:	mov	sp, fp
   11e6c:	pop	{fp, pc}

00011e70 <roda_esquerda@@Base>:
   11e70:	push	{fp, lr}
   11e74:	mov	fp, sp
   11e78:	sub	sp, sp, #32
   11e7c:	str	r0, [fp, #-4]
   11e80:	ldr	r0, [fp, #-4]
   11e84:	ldr	r0, [r0, #8]
   11e88:	str	r0, [fp, #-8]
   11e8c:	ldr	r0, [fp, #-8]
   11e90:	ldr	r0, [r0, #4]
   11e94:	str	r0, [fp, #-12]
   11e98:	ldr	r0, [fp, #-4]
   11e9c:	ldr	r1, [fp, #-8]
   11ea0:	str	r0, [r1, #4]
   11ea4:	ldr	r0, [fp, #-12]
   11ea8:	ldr	r1, [fp, #-4]
   11eac:	str	r0, [r1, #8]
   11eb0:	ldr	r0, [fp, #-4]
   11eb4:	ldr	r0, [r0, #4]
   11eb8:	bl	11ca4 <avl_altura@@Base>
   11ebc:	ldr	r1, [fp, #-4]
   11ec0:	ldr	r1, [r1, #8]
   11ec4:	str	r0, [sp, #16]
   11ec8:	mov	r0, r1
   11ecc:	bl	11ca4 <avl_altura@@Base>
   11ed0:	ldr	r1, [sp, #16]
   11ed4:	str	r0, [sp, #12]
   11ed8:	mov	r0, r1
   11edc:	ldr	r1, [sp, #12]
   11ee0:	bl	11ce0 <max@@Base>
   11ee4:	add	r0, r0, #1
   11ee8:	ldr	r1, [fp, #-4]
   11eec:	str	r0, [r1, #12]
   11ef0:	ldr	r0, [fp, #-8]
   11ef4:	ldr	r0, [r0, #4]
   11ef8:	bl	11ca4 <avl_altura@@Base>
   11efc:	ldr	r1, [fp, #-8]
   11f00:	ldr	r1, [r1, #8]
   11f04:	str	r0, [sp, #8]
   11f08:	mov	r0, r1
   11f0c:	bl	11ca4 <avl_altura@@Base>
   11f10:	ldr	r1, [sp, #8]
   11f14:	str	r0, [sp, #4]
   11f18:	mov	r0, r1
   11f1c:	ldr	r1, [sp, #4]
   11f20:	bl	11ce0 <max@@Base>
   11f24:	add	r0, r0, #1
   11f28:	ldr	r1, [fp, #-8]
   11f2c:	str	r0, [r1, #12]
   11f30:	ldr	r0, [fp, #-8]
   11f34:	mov	sp, fp
   11f38:	pop	{fp, pc}

00011f3c <calc_balanceamento@@Base>:
   11f3c:	push	{fp, lr}
   11f40:	mov	fp, sp
   11f44:	sub	sp, sp, #16
   11f48:	str	r0, [sp, #8]
   11f4c:	ldr	r0, [sp, #8]
   11f50:	movw	r1, #0
   11f54:	cmp	r0, r1
   11f58:	bne	11f68 <calc_balanceamento@@Base+0x2c>
   11f5c:	movw	r0, #0
   11f60:	str	r0, [fp, #-4]
   11f64:	b	11f94 <calc_balanceamento@@Base+0x58>
   11f68:	ldr	r0, [sp, #8]
   11f6c:	ldr	r0, [r0, #8]
   11f70:	bl	11ca4 <avl_altura@@Base>
   11f74:	ldr	r1, [sp, #8]
   11f78:	ldr	r1, [r1, #4]
   11f7c:	str	r0, [sp, #4]
   11f80:	mov	r0, r1
   11f84:	bl	11ca4 <avl_altura@@Base>
   11f88:	ldr	r1, [sp, #4]
   11f8c:	sub	r0, r1, r0
   11f90:	str	r0, [fp, #-4]
   11f94:	ldr	r0, [fp, #-4]
   11f98:	mov	sp, fp
   11f9c:	pop	{fp, pc}

00011fa0 <bst_nova@@Base>:
   11fa0:	push	{fp, lr}
   11fa4:	mov	fp, sp
   11fa8:	sub	sp, sp, #8
   11fac:	movw	r0, #4
   11fb0:	bl	10ea8 <malloc@plt>
   11fb4:	str	r0, [sp]
   11fb8:	ldr	r0, [sp]
   11fbc:	movw	r1, #0
   11fc0:	cmp	r0, r1
   11fc4:	bne	11fd4 <bst_nova@@Base+0x34>
   11fc8:	movw	r0, #0
   11fcc:	str	r0, [sp, #4]
   11fd0:	b	11fe8 <bst_nova@@Base+0x48>
   11fd4:	ldr	r0, [sp]
   11fd8:	movw	r1, #0
   11fdc:	str	r1, [r0]
   11fe0:	ldr	r0, [sp]
   11fe4:	str	r0, [sp, #4]
   11fe8:	ldr	r0, [sp, #4]
   11fec:	mov	sp, fp
   11ff0:	pop	{fp, pc}

00011ff4 <bst_apaga@@Base>:
   11ff4:	push	{fp, lr}
   11ff8:	mov	fp, sp
   11ffc:	sub	sp, sp, #8
   12000:	str	r0, [sp, #4]
   12004:	ldr	r0, [sp, #4]
   12008:	ldr	r0, [r0]
   1200c:	movw	r1, #0
   12010:	cmp	r0, r1
   12014:	beq	1203c <bst_apaga@@Base+0x48>
   12018:	ldr	r0, [sp, #4]
   1201c:	ldr	r0, [r0]
   12020:	ldr	r1, [sp, #4]
   12024:	ldr	r1, [r1]
   12028:	ldr	r1, [r1]
   1202c:	bl	1204c <bst_remove_impl@@Base>
   12030:	ldr	r1, [sp, #4]
   12034:	str	r0, [r1]
   12038:	b	12004 <bst_apaga@@Base+0x10>
   1203c:	ldr	r0, [sp, #4]
   12040:	bl	10e6c <free@plt>
   12044:	mov	sp, fp
   12048:	pop	{fp, pc}

0001204c <bst_remove_impl@@Base>:
   1204c:	push	{fp, lr}
   12050:	mov	fp, sp
   12054:	sub	sp, sp, #56	; 0x38
   12058:	str	r0, [fp, #-8]
   1205c:	str	r1, [fp, #-12]
   12060:	ldr	r0, [fp, #-8]
   12064:	movw	r1, #0
   12068:	cmp	r0, r1
   1206c:	bne	1207c <bst_remove_impl@@Base+0x30>
   12070:	ldr	r0, [fp, #-8]
   12074:	str	r0, [fp, #-4]
   12078:	b	122a0 <bst_remove_impl@@Base+0x254>
   1207c:	ldr	r0, [fp, #-12]
   12080:	ldr	r1, [fp, #-8]
   12084:	ldr	r1, [r1]
   12088:	bl	10e48 <strcmp@plt>
   1208c:	cmp	r0, #0
   12090:	bge	120b0 <bst_remove_impl@@Base+0x64>
   12094:	ldr	r0, [fp, #-8]
   12098:	ldr	r0, [r0, #4]
   1209c:	ldr	r1, [fp, #-12]
   120a0:	bl	1204c <bst_remove_impl@@Base>
   120a4:	ldr	r1, [fp, #-8]
   120a8:	str	r0, [r1, #4]
   120ac:	b	12298 <bst_remove_impl@@Base+0x24c>
   120b0:	ldr	r0, [fp, #-12]
   120b4:	ldr	r1, [fp, #-8]
   120b8:	ldr	r1, [r1]
   120bc:	bl	10e48 <strcmp@plt>
   120c0:	cmp	r0, #0
   120c4:	ble	120e4 <bst_remove_impl@@Base+0x98>
   120c8:	ldr	r0, [fp, #-8]
   120cc:	ldr	r0, [r0, #8]
   120d0:	ldr	r1, [fp, #-12]
   120d4:	bl	1204c <bst_remove_impl@@Base>
   120d8:	ldr	r1, [fp, #-8]
   120dc:	str	r0, [r1, #8]
   120e0:	b	12294 <bst_remove_impl@@Base+0x248>
   120e4:	ldr	r0, [fp, #-8]
   120e8:	ldr	r0, [r0, #4]
   120ec:	movw	r1, #0
   120f0:	cmp	r0, r1
   120f4:	beq	1210c <bst_remove_impl@@Base+0xc0>
   120f8:	ldr	r0, [fp, #-8]
   120fc:	ldr	r0, [r0, #8]
   12100:	movw	r1, #0
   12104:	cmp	r0, r1
   12108:	bne	121fc <bst_remove_impl@@Base+0x1b0>
   1210c:	ldr	r0, [fp, #-8]
   12110:	ldr	r0, [r0, #4]
   12114:	movw	r1, #0
   12118:	cmp	r0, r1
   1211c:	beq	12130 <bst_remove_impl@@Base+0xe4>
   12120:	ldr	r0, [fp, #-8]
   12124:	ldr	r0, [r0, #4]
   12128:	str	r0, [fp, #-24]	; 0xffffffe8
   1212c:	b	1213c <bst_remove_impl@@Base+0xf0>
   12130:	ldr	r0, [fp, #-8]
   12134:	ldr	r0, [r0, #8]
   12138:	str	r0, [fp, #-24]	; 0xffffffe8
   1213c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12140:	str	r0, [fp, #-16]
   12144:	ldr	r0, [fp, #-16]
   12148:	movw	r1, #0
   1214c:	cmp	r0, r1
   12150:	bne	12168 <bst_remove_impl@@Base+0x11c>
   12154:	ldr	r0, [fp, #-8]
   12158:	str	r0, [fp, #-16]
   1215c:	movw	r0, #0
   12160:	str	r0, [fp, #-8]
   12164:	b	121e4 <bst_remove_impl@@Base+0x198>
   12168:	ldr	r0, [fp, #-8]
   1216c:	ldr	r0, [r0]
   12170:	ldr	r1, [fp, #-16]
   12174:	ldr	r1, [r1]
   12178:	str	r0, [sp, #28]
   1217c:	mov	r0, r1
   12180:	bl	10ecc <strlen@plt>
   12184:	add	r0, r0, #1
   12188:	mov	r1, r0
   1218c:	ldr	r2, [sp, #28]
   12190:	str	r0, [sp, #24]
   12194:	mov	r0, r2
   12198:	ldr	r3, [sp, #24]
   1219c:	str	r1, [sp, #20]
   121a0:	mov	r1, r3
   121a4:	bl	10e90 <realloc@plt>
   121a8:	ldr	r1, [fp, #-8]
   121ac:	str	r0, [r1]
   121b0:	ldr	r0, [fp, #-8]
   121b4:	ldr	r0, [r0]
   121b8:	ldr	r1, [fp, #-16]
   121bc:	ldr	r1, [r1]
   121c0:	bl	10e9c <strcpy@plt>
   121c4:	ldr	r1, [fp, #-16]
   121c8:	ldr	r1, [r1, #4]
   121cc:	ldr	r2, [fp, #-8]
   121d0:	str	r1, [r2, #4]
   121d4:	ldr	r1, [fp, #-16]
   121d8:	ldr	r1, [r1, #8]
   121dc:	ldr	r2, [fp, #-8]
   121e0:	str	r1, [r2, #8]
   121e4:	ldr	r0, [fp, #-16]
   121e8:	ldr	r0, [r0]
   121ec:	bl	10e6c <free@plt>
   121f0:	ldr	r0, [fp, #-16]
   121f4:	bl	10e6c <free@plt>
   121f8:	b	12290 <bst_remove_impl@@Base+0x244>
   121fc:	ldr	r0, [fp, #-8]
   12200:	ldr	r0, [r0, #8]
   12204:	bl	12584 <bst_no_valormin@@Base>
   12208:	str	r0, [fp, #-20]	; 0xffffffec
   1220c:	ldr	r0, [fp, #-8]
   12210:	ldr	r0, [r0]
   12214:	ldr	r1, [fp, #-20]	; 0xffffffec
   12218:	ldr	r1, [r1]
   1221c:	str	r0, [sp, #16]
   12220:	mov	r0, r1
   12224:	bl	10ecc <strlen@plt>
   12228:	add	r0, r0, #1
   1222c:	mov	r1, r0
   12230:	ldr	r2, [sp, #16]
   12234:	str	r0, [sp, #12]
   12238:	mov	r0, r2
   1223c:	ldr	r3, [sp, #12]
   12240:	str	r1, [sp, #8]
   12244:	mov	r1, r3
   12248:	bl	10e90 <realloc@plt>
   1224c:	ldr	r1, [fp, #-8]
   12250:	str	r0, [r1]
   12254:	ldr	r0, [fp, #-8]
   12258:	ldr	r0, [r0]
   1225c:	ldr	r1, [fp, #-20]	; 0xffffffec
   12260:	ldr	r1, [r1]
   12264:	bl	10e9c <strcpy@plt>
   12268:	ldr	r1, [fp, #-8]
   1226c:	ldr	r1, [r1, #8]
   12270:	ldr	r2, [fp, #-20]	; 0xffffffec
   12274:	ldr	r2, [r2]
   12278:	str	r0, [sp, #4]
   1227c:	mov	r0, r1
   12280:	mov	r1, r2
   12284:	bl	1204c <bst_remove_impl@@Base>
   12288:	ldr	r1, [fp, #-8]
   1228c:	str	r0, [r1, #8]
   12290:	b	12294 <bst_remove_impl@@Base+0x248>
   12294:	b	12298 <bst_remove_impl@@Base+0x24c>
   12298:	ldr	r0, [fp, #-8]
   1229c:	str	r0, [fp, #-4]
   122a0:	ldr	r0, [fp, #-4]
   122a4:	mov	sp, fp
   122a8:	pop	{fp, pc}

000122ac <bst_pesquisa@@Base>:
   122ac:	push	{fp, lr}
   122b0:	mov	fp, sp
   122b4:	sub	sp, sp, #16
   122b8:	str	r0, [sp, #8]
   122bc:	str	r1, [sp, #4]
   122c0:	ldr	r0, [sp, #8]
   122c4:	movw	r1, #0
   122c8:	cmp	r0, r1
   122cc:	beq	122e0 <bst_pesquisa@@Base+0x34>
   122d0:	ldr	r0, [sp, #4]
   122d4:	movw	r1, #0
   122d8:	cmp	r0, r1
   122dc:	bne	122ec <bst_pesquisa@@Base+0x40>
   122e0:	movw	r0, #0
   122e4:	str	r0, [fp, #-4]
   122e8:	b	12300 <bst_pesquisa@@Base+0x54>
   122ec:	ldr	r0, [sp, #8]
   122f0:	ldr	r0, [r0]
   122f4:	ldr	r1, [sp, #4]
   122f8:	bl	1230c <bst_pesquisa_impl@@Base>
   122fc:	str	r0, [fp, #-4]
   12300:	ldr	r0, [fp, #-4]
   12304:	mov	sp, fp
   12308:	pop	{fp, pc}

0001230c <bst_pesquisa_impl@@Base>:
   1230c:	push	{fp, lr}
   12310:	mov	fp, sp
   12314:	sub	sp, sp, #16
   12318:	str	r0, [sp, #8]
   1231c:	str	r1, [sp, #4]
   12320:	ldr	r0, [sp, #8]
   12324:	movw	r1, #0
   12328:	cmp	r0, r1
   1232c:	bne	1233c <bst_pesquisa_impl@@Base+0x30>
   12330:	movw	r0, #0
   12334:	str	r0, [fp, #-4]
   12338:	b	123a4 <bst_pesquisa_impl@@Base+0x98>
   1233c:	ldr	r0, [sp, #4]
   12340:	ldr	r1, [sp, #8]
   12344:	ldr	r1, [r1]
   12348:	bl	10e48 <strcmp@plt>
   1234c:	cmp	r0, #0
   12350:	bge	1236c <bst_pesquisa_impl@@Base+0x60>
   12354:	ldr	r0, [sp, #8]
   12358:	ldr	r0, [r0, #4]
   1235c:	ldr	r1, [sp, #4]
   12360:	bl	1230c <bst_pesquisa_impl@@Base>
   12364:	str	r0, [fp, #-4]
   12368:	b	123a4 <bst_pesquisa_impl@@Base+0x98>
   1236c:	ldr	r0, [sp, #4]
   12370:	ldr	r1, [sp, #8]
   12374:	ldr	r1, [r1]
   12378:	bl	10e48 <strcmp@plt>
   1237c:	cmp	r0, #0
   12380:	ble	1239c <bst_pesquisa_impl@@Base+0x90>
   12384:	ldr	r0, [sp, #8]
   12388:	ldr	r0, [r0, #8]
   1238c:	ldr	r1, [sp, #4]
   12390:	bl	1230c <bst_pesquisa_impl@@Base>
   12394:	str	r0, [fp, #-4]
   12398:	b	123a4 <bst_pesquisa_impl@@Base+0x98>
   1239c:	ldr	r0, [sp, #8]
   123a0:	str	r0, [fp, #-4]
   123a4:	ldr	r0, [fp, #-4]
   123a8:	mov	sp, fp
   123ac:	pop	{fp, pc}

000123b0 <bst_insere@@Base>:
   123b0:	push	{fp, lr}
   123b4:	mov	fp, sp
   123b8:	sub	sp, sp, #16
   123bc:	str	r0, [sp, #8]
   123c0:	str	r1, [sp, #4]
   123c4:	ldr	r0, [sp, #8]
   123c8:	movw	r1, #0
   123cc:	cmp	r0, r1
   123d0:	beq	123e4 <bst_insere@@Base+0x34>
   123d4:	ldr	r0, [sp, #4]
   123d8:	movw	r1, #0
   123dc:	cmp	r0, r1
   123e0:	bne	123f0 <bst_insere@@Base+0x40>
   123e4:	mvn	r0, #0
   123e8:	str	r0, [fp, #-4]
   123ec:	b	12410 <bst_insere@@Base+0x60>
   123f0:	ldr	r0, [sp, #8]
   123f4:	ldr	r0, [r0]
   123f8:	ldr	r1, [sp, #4]
   123fc:	bl	1241c <bst_insere_impl@@Base>
   12400:	ldr	r1, [sp, #8]
   12404:	str	r0, [r1]
   12408:	movw	r0, #0
   1240c:	str	r0, [fp, #-4]
   12410:	ldr	r0, [fp, #-4]
   12414:	mov	sp, fp
   12418:	pop	{fp, pc}

0001241c <bst_insere_impl@@Base>:
   1241c:	push	{fp, lr}
   12420:	mov	fp, sp
   12424:	sub	sp, sp, #16
   12428:	str	r0, [sp, #8]
   1242c:	str	r1, [sp, #4]
   12430:	ldr	r0, [sp, #8]
   12434:	movw	r1, #0
   12438:	cmp	r0, r1
   1243c:	bne	12450 <bst_insere_impl@@Base+0x34>
   12440:	ldr	r0, [sp, #4]
   12444:	bl	12714 <bst_novo_no@@Base>
   12448:	str	r0, [fp, #-4]
   1244c:	b	124c0 <bst_insere_impl@@Base+0xa4>
   12450:	ldr	r0, [sp, #4]
   12454:	ldr	r1, [sp, #8]
   12458:	ldr	r1, [r1]
   1245c:	bl	10e48 <strcmp@plt>
   12460:	cmp	r0, #0
   12464:	bge	12484 <bst_insere_impl@@Base+0x68>
   12468:	ldr	r0, [sp, #8]
   1246c:	ldr	r0, [r0, #4]
   12470:	ldr	r1, [sp, #4]
   12474:	bl	1241c <bst_insere_impl@@Base>
   12478:	ldr	r1, [sp, #8]
   1247c:	str	r0, [r1, #4]
   12480:	b	124b8 <bst_insere_impl@@Base+0x9c>
   12484:	ldr	r0, [sp, #4]
   12488:	ldr	r1, [sp, #8]
   1248c:	ldr	r1, [r1]
   12490:	bl	10e48 <strcmp@plt>
   12494:	cmp	r0, #0
   12498:	ble	124b4 <bst_insere_impl@@Base+0x98>
   1249c:	ldr	r0, [sp, #8]
   124a0:	ldr	r0, [r0, #8]
   124a4:	ldr	r1, [sp, #4]
   124a8:	bl	1241c <bst_insere_impl@@Base>
   124ac:	ldr	r1, [sp, #8]
   124b0:	str	r0, [r1, #8]
   124b4:	b	124b8 <bst_insere_impl@@Base+0x9c>
   124b8:	ldr	r0, [sp, #8]
   124bc:	str	r0, [fp, #-4]
   124c0:	ldr	r0, [fp, #-4]
   124c4:	mov	sp, fp
   124c8:	pop	{fp, pc}

000124cc <bst_remove@@Base>:
   124cc:	push	{fp, lr}
   124d0:	mov	fp, sp
   124d4:	sub	sp, sp, #16
   124d8:	str	r0, [sp, #8]
   124dc:	str	r1, [sp, #4]
   124e0:	ldr	r0, [sp, #8]
   124e4:	movw	r1, #0
   124e8:	cmp	r0, r1
   124ec:	beq	12500 <bst_remove@@Base+0x34>
   124f0:	ldr	r0, [sp, #4]
   124f4:	movw	r1, #0
   124f8:	cmp	r0, r1
   124fc:	bne	1250c <bst_remove@@Base+0x40>
   12500:	mvn	r0, #0
   12504:	str	r0, [fp, #-4]
   12508:	b	1252c <bst_remove@@Base+0x60>
   1250c:	ldr	r0, [sp, #8]
   12510:	ldr	r0, [r0]
   12514:	ldr	r1, [sp, #4]
   12518:	bl	1204c <bst_remove_impl@@Base>
   1251c:	ldr	r1, [sp, #8]
   12520:	str	r0, [r1]
   12524:	movw	r0, #0
   12528:	str	r0, [fp, #-4]
   1252c:	ldr	r0, [fp, #-4]
   12530:	mov	sp, fp
   12534:	pop	{fp, pc}

00012538 <bst_min@@Base>:
   12538:	push	{fp, lr}
   1253c:	mov	fp, sp
   12540:	sub	sp, sp, #8
   12544:	str	r0, [sp]
   12548:	ldr	r0, [sp]
   1254c:	movw	r1, #0
   12550:	cmp	r0, r1
   12554:	bne	12564 <bst_min@@Base+0x2c>
   12558:	movw	r0, #0
   1255c:	str	r0, [sp, #4]
   12560:	b	12578 <bst_min@@Base+0x40>
   12564:	ldr	r0, [sp]
   12568:	ldr	r0, [r0]
   1256c:	bl	12584 <bst_no_valormin@@Base>
   12570:	ldr	r0, [r0]
   12574:	str	r0, [sp, #4]
   12578:	ldr	r0, [sp, #4]
   1257c:	mov	sp, fp
   12580:	pop	{fp, pc}

00012584 <bst_no_valormin@@Base>:
   12584:	sub	sp, sp, #8
   12588:	str	r0, [sp, #4]
   1258c:	ldr	r0, [sp, #4]
   12590:	str	r0, [sp]
   12594:	ldr	r0, [sp]
   12598:	ldr	r0, [r0, #4]
   1259c:	movw	r1, #0
   125a0:	cmp	r0, r1
   125a4:	beq	125b8 <bst_no_valormin@@Base+0x34>
   125a8:	ldr	r0, [sp]
   125ac:	ldr	r0, [r0, #4]
   125b0:	str	r0, [sp]
   125b4:	b	12594 <bst_no_valormin@@Base+0x10>
   125b8:	ldr	r0, [sp]
   125bc:	add	sp, sp, #8
   125c0:	bx	lr

000125c4 <bst_max@@Base>:
   125c4:	push	{fp, lr}
   125c8:	mov	fp, sp
   125cc:	sub	sp, sp, #8
   125d0:	str	r0, [sp]
   125d4:	ldr	r0, [sp]
   125d8:	movw	r1, #0
   125dc:	cmp	r0, r1
   125e0:	bne	125f0 <bst_max@@Base+0x2c>
   125e4:	movw	r0, #0
   125e8:	str	r0, [sp, #4]
   125ec:	b	12604 <bst_max@@Base+0x40>
   125f0:	ldr	r0, [sp]
   125f4:	ldr	r0, [r0]
   125f8:	bl	12610 <bst_no_valormax@@Base>
   125fc:	ldr	r0, [r0]
   12600:	str	r0, [sp, #4]
   12604:	ldr	r0, [sp, #4]
   12608:	mov	sp, fp
   1260c:	pop	{fp, pc}

00012610 <bst_no_valormax@@Base>:
   12610:	sub	sp, sp, #8
   12614:	str	r0, [sp, #4]
   12618:	ldr	r0, [sp, #4]
   1261c:	str	r0, [sp]
   12620:	ldr	r0, [sp]
   12624:	ldr	r0, [r0, #8]
   12628:	movw	r1, #0
   1262c:	cmp	r0, r1
   12630:	beq	12644 <bst_no_valormax@@Base+0x34>
   12634:	ldr	r0, [sp]
   12638:	ldr	r0, [r0, #8]
   1263c:	str	r0, [sp]
   12640:	b	12620 <bst_no_valormax@@Base+0x10>
   12644:	ldr	r0, [sp]
   12648:	add	sp, sp, #8
   1264c:	bx	lr

00012650 <bst_imprime@@Base>:
   12650:	push	{fp, lr}
   12654:	mov	fp, sp
   12658:	sub	sp, sp, #8
   1265c:	str	r0, [sp, #4]
   12660:	ldr	r0, [sp, #4]
   12664:	movw	r1, #0
   12668:	cmp	r0, r1
   1266c:	bne	12674 <bst_imprime@@Base+0x24>
   12670:	b	126a0 <bst_imprime@@Base+0x50>
   12674:	ldr	r0, [pc, #48]	; 126ac <bst_imprime@@Base+0x5c>
   12678:	add	r0, pc, r0
   1267c:	bl	10e54 <printf@plt>
   12680:	ldr	r1, [sp, #4]
   12684:	ldr	r1, [r1]
   12688:	str	r0, [sp]
   1268c:	mov	r0, r1
   12690:	bl	126b0 <bst_preordem_impl@@Base>
   12694:	ldr	r0, [pc, #12]	; 126a8 <bst_imprime@@Base+0x58>
   12698:	add	r0, pc, r0
   1269c:	bl	10e54 <printf@plt>
   126a0:	mov	sp, fp
   126a4:	pop	{fp, pc}
   126a8:	andeq	r0, r0, r8, asr r2
   126ac:			; <UNDEFINED> instruction: 0x000002b0

000126b0 <bst_preordem_impl@@Base>:
   126b0:	push	{fp, lr}
   126b4:	mov	fp, sp
   126b8:	sub	sp, sp, #8
   126bc:	str	r0, [sp, #4]
   126c0:	ldr	r0, [sp, #4]
   126c4:	movw	r1, #0
   126c8:	cmp	r0, r1
   126cc:	bne	126d4 <bst_preordem_impl@@Base+0x24>
   126d0:	b	12708 <bst_preordem_impl@@Base+0x58>
   126d4:	ldr	r0, [pc, #52]	; 12710 <bst_preordem_impl@@Base+0x60>
   126d8:	add	r0, pc, r0
   126dc:	ldr	r1, [sp, #4]
   126e0:	ldr	r1, [r1]
   126e4:	bl	10e54 <printf@plt>
   126e8:	ldr	r1, [sp, #4]
   126ec:	ldr	r1, [r1, #4]
   126f0:	str	r0, [sp]
   126f4:	mov	r0, r1
   126f8:	bl	126b0 <bst_preordem_impl@@Base>
   126fc:	ldr	r0, [sp, #4]
   12700:	ldr	r0, [r0, #8]
   12704:	bl	126b0 <bst_preordem_impl@@Base>
   12708:	mov	sp, fp
   1270c:	pop	{fp, pc}
   12710:	andeq	r0, r0, fp, asr r2

00012714 <bst_novo_no@@Base>:
   12714:	push	{fp, lr}
   12718:	mov	fp, sp
   1271c:	sub	sp, sp, #16
   12720:	str	r0, [fp, #-4]
   12724:	mov	r0, #12
   12728:	bl	10ea8 <malloc@plt>
   1272c:	str	r0, [sp, #8]
   12730:	ldr	r0, [fp, #-4]
   12734:	bl	10ecc <strlen@plt>
   12738:	add	r0, r0, #1
   1273c:	mov	r1, r0
   12740:	str	r1, [sp, #4]
   12744:	bl	10ea8 <malloc@plt>
   12748:	ldr	r1, [sp, #8]
   1274c:	str	r0, [r1]
   12750:	ldr	r0, [sp, #8]
   12754:	ldr	r0, [r0]
   12758:	ldr	r1, [fp, #-4]
   1275c:	bl	10e9c <strcpy@plt>
   12760:	ldr	r1, [sp, #8]
   12764:	movw	r2, #0
   12768:	str	r2, [r1, #4]
   1276c:	ldr	r1, [sp, #8]
   12770:	str	r2, [r1, #8]
   12774:	ldr	r1, [sp, #8]
   12778:	str	r0, [sp]
   1277c:	mov	r0, r1
   12780:	mov	sp, fp
   12784:	pop	{fp, pc}

00012788 <bst_altura@@Base>:
   12788:	push	{fp, lr}
   1278c:	mov	fp, sp
   12790:	sub	sp, sp, #16
   12794:	str	r0, [sp, #8]
   12798:	movw	r0, #0
   1279c:	str	r0, [sp, #4]
   127a0:	str	r0, [sp]
   127a4:	ldr	r1, [sp, #8]
   127a8:	cmp	r1, r0
   127ac:	bne	127bc <bst_altura@@Base+0x34>
   127b0:	mvn	r0, #0
   127b4:	str	r0, [fp, #-4]
   127b8:	b	1284c <bst_altura@@Base+0xc4>
   127bc:	ldr	r0, [sp, #8]
   127c0:	ldr	r0, [r0, #8]
   127c4:	movw	r1, #0
   127c8:	cmp	r0, r1
   127cc:	bne	127f0 <bst_altura@@Base+0x68>
   127d0:	ldr	r0, [sp, #8]
   127d4:	ldr	r0, [r0, #4]
   127d8:	movw	r1, #0
   127dc:	cmp	r0, r1
   127e0:	bne	127f0 <bst_altura@@Base+0x68>
   127e4:	movw	r0, #0
   127e8:	str	r0, [fp, #-4]
   127ec:	b	1284c <bst_altura@@Base+0xc4>
   127f0:	ldr	r0, [sp, #8]
   127f4:	ldr	r0, [r0, #4]
   127f8:	bl	12788 <bst_altura@@Base>
   127fc:	str	r0, [sp, #4]
   12800:	ldr	r0, [sp, #8]
   12804:	ldr	r0, [r0, #8]
   12808:	bl	12788 <bst_altura@@Base>
   1280c:	str	r0, [sp]
   12810:	ldr	r0, [sp, #4]
   12814:	ldr	r1, [sp]
   12818:	cmp	r0, r1
   1281c:	ble	12838 <bst_altura@@Base+0xb0>
   12820:	ldr	r0, [sp, #8]
   12824:	ldr	r0, [r0, #4]
   12828:	bl	12788 <bst_altura@@Base>
   1282c:	add	r0, r0, #1
   12830:	str	r0, [fp, #-4]
   12834:	b	1284c <bst_altura@@Base+0xc4>
   12838:	ldr	r0, [sp, #8]
   1283c:	ldr	r0, [r0, #8]
   12840:	bl	12788 <bst_altura@@Base>
   12844:	add	r0, r0, #1
   12848:	str	r0, [fp, #-4]
   1284c:	ldr	r0, [fp, #-4]
   12850:	mov	sp, fp
   12854:	pop	{fp, pc}

00012858 <__libc_csu_init@@Base>:
   12858:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1285c:	mov	r7, r0
   12860:	ldr	r6, [pc, #72]	; 128b0 <__libc_csu_init@@Base+0x58>
   12864:	ldr	r5, [pc, #72]	; 128b4 <__libc_csu_init@@Base+0x5c>
   12868:	add	r6, pc, r6
   1286c:	add	r5, pc, r5
   12870:	sub	r6, r6, r5
   12874:	mov	r8, r1
   12878:	mov	r9, r2
   1287c:	bl	10e28 <strcmp@plt-0x20>
   12880:	asrs	r6, r6, #2
   12884:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12888:	mov	r4, #0
   1288c:	add	r4, r4, #1
   12890:	ldr	r3, [r5], #4
   12894:	mov	r2, r9
   12898:	mov	r1, r8
   1289c:	mov	r0, r7
   128a0:	blx	r3
   128a4:	cmp	r6, r4
   128a8:	bne	1288c <__libc_csu_init@@Base+0x34>
   128ac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   128b0:	andeq	r0, r1, r4, ror r6
   128b4:	andeq	r0, r1, ip, ror #12

000128b8 <__libc_csu_fini@@Base>:
   128b8:	bx	lr

Disassembly of section .fini:

000128bc <.fini>:
   128bc:	push	{r3, lr}
   128c0:	pop	{r3, pc}
