
../repos/tbeu-matio-3dd266d/test/test_snprintf:     file format elf32-littlearm


Disassembly of section .init:

00010444 <.init>:
   10444:	push	{r3, lr}
   10448:	bl	1050c <abort@plt+0x48>
   1044c:	pop	{r3, pc}

Disassembly of section .plt:

00010450 <strcmp@plt-0x14>:
   10450:	push	{lr}		; (str lr, [sp, #-4]!)
   10454:	ldr	lr, [pc, #4]	; 10460 <strcmp@plt-0x4>
   10458:	add	lr, pc, lr
   1045c:	ldr	pc, [lr, #8]!
   10460:	andeq	r0, r1, r0, lsr #23

00010464 <strcmp@plt>:
   10464:	add	ip, pc, #0, 12
   10468:	add	ip, ip, #16, 20	; 0x10000
   1046c:	ldr	pc, [ip, #2976]!	; 0xba0

00010470 <printf@plt>:
   10470:	add	ip, pc, #0, 12
   10474:	add	ip, ip, #16, 20	; 0x10000
   10478:	ldr	pc, [ip, #2968]!	; 0xb98

0001047c <pow@plt>:
   1047c:	add	ip, pc, #0, 12
   10480:	add	ip, ip, #16, 20	; 0x10000
   10484:	ldr	pc, [ip, #2960]!	; 0xb90

00010488 <puts@plt>:
   10488:	add	ip, pc, #0, 12
   1048c:	add	ip, ip, #16, 20	; 0x10000
   10490:	ldr	pc, [ip, #2952]!	; 0xb88

00010494 <__libc_start_main@plt>:
   10494:	add	ip, pc, #0, 12
   10498:	add	ip, ip, #16, 20	; 0x10000
   1049c:	ldr	pc, [ip, #2944]!	; 0xb80

000104a0 <__gmon_start__@plt>:
   104a0:	add	ip, pc, #0, 12
   104a4:	add	ip, ip, #16, 20	; 0x10000
   104a8:	ldr	pc, [ip, #2936]!	; 0xb78

000104ac <snprintf@plt>:
   104ac:	add	ip, pc, #0, 12
   104b0:	add	ip, ip, #16, 20	; 0x10000
   104b4:	ldr	pc, [ip, #2928]!	; 0xb70

000104b8 <sprintf@plt>:
   104b8:	add	ip, pc, #0, 12
   104bc:	add	ip, ip, #16, 20	; 0x10000
   104c0:	ldr	pc, [ip, #2920]!	; 0xb68

000104c4 <abort@plt>:
   104c4:	add	ip, pc, #0, 12
   104c8:	add	ip, ip, #16, 20	; 0x10000
   104cc:	ldr	pc, [ip, #2912]!	; 0xb60

Disassembly of section .text:

000104d0 <.text>:
   104d0:	mov	fp, #0
   104d4:	mov	lr, #0
   104d8:	pop	{r1}		; (ldr r1, [sp], #4)
   104dc:	mov	r2, sp
   104e0:	push	{r2}		; (str r2, [sp, #-4]!)
   104e4:	push	{r0}		; (str r0, [sp, #-4]!)
   104e8:	ldr	ip, [pc, #16]	; 10500 <abort@plt+0x3c>
   104ec:	push	{ip}		; (str ip, [sp, #-4]!)
   104f0:	ldr	r0, [pc, #12]	; 10504 <abort@plt+0x40>
   104f4:	ldr	r3, [pc, #12]	; 10508 <abort@plt+0x44>
   104f8:	bl	10494 <__libc_start_main@plt>
   104fc:	bl	104c4 <abort@plt>
   10500:	andeq	r0, r1, r0, lsl sl
   10504:	andeq	r0, r1, r0, asr #11
   10508:			; <UNDEFINED> instruction: 0x000109b0
   1050c:	ldr	r3, [pc, #20]	; 10528 <abort@plt+0x64>
   10510:	ldr	r2, [pc, #20]	; 1052c <abort@plt+0x68>
   10514:	add	r3, pc, r3
   10518:	ldr	r2, [r3, r2]
   1051c:	cmp	r2, #0
   10520:	bxeq	lr
   10524:	b	104a0 <__gmon_start__@plt>
   10528:	andeq	r0, r1, r4, ror #21
   1052c:	andeq	r0, r0, r0, lsr r0
   10530:	ldr	r0, [pc, #24]	; 10550 <abort@plt+0x8c>
   10534:	ldr	r3, [pc, #24]	; 10554 <abort@plt+0x90>
   10538:	cmp	r3, r0
   1053c:	bxeq	lr
   10540:	ldr	r3, [pc, #16]	; 10558 <abort@plt+0x94>
   10544:	cmp	r3, #0
   10548:	bxeq	lr
   1054c:	bx	r3
   10550:	andeq	r1, r2, ip, lsr r0
   10554:	andeq	r1, r2, ip, lsr r0
   10558:	andeq	r0, r0, r0
   1055c:	ldr	r0, [pc, #36]	; 10588 <abort@plt+0xc4>
   10560:	ldr	r1, [pc, #36]	; 1058c <abort@plt+0xc8>
   10564:	sub	r1, r1, r0
   10568:	asr	r1, r1, #2
   1056c:	add	r1, r1, r1, lsr #31
   10570:	asrs	r1, r1, #1
   10574:	bxeq	lr
   10578:	ldr	r3, [pc, #16]	; 10590 <abort@plt+0xcc>
   1057c:	cmp	r3, #0
   10580:	bxeq	lr
   10584:	bx	r3
   10588:	andeq	r1, r2, ip, lsr r0
   1058c:	andeq	r1, r2, ip, lsr r0
   10590:	andeq	r0, r0, r0
   10594:	push	{r4, lr}
   10598:	ldr	r4, [pc, #24]	; 105b8 <abort@plt+0xf4>
   1059c:	ldrb	r3, [r4]
   105a0:	cmp	r3, #0
   105a4:	popne	{r4, pc}
   105a8:	bl	10530 <abort@plt+0x6c>
   105ac:	mov	r3, #1
   105b0:	strb	r3, [r4]
   105b4:	pop	{r4, pc}
   105b8:	andeq	r1, r2, ip, lsr r0
   105bc:	b	1055c <abort@plt+0x98>
   105c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   105c4:	add	fp, sp, #28
   105c8:	sub	sp, sp, #4
   105cc:	vpush	{d8-d10}
   105d0:	sub	sp, sp, #24
   105d4:	sub	sp, sp, #2048	; 0x800
   105d8:	movw	r0, #2993	; 0xbb1
   105dc:	movt	r0, #1
   105e0:	bl	10488 <puts@plt>
   105e4:	mov	r0, #0
   105e8:	add	lr, sp, #1024	; 0x400
   105ec:	add	sl, lr, #20
   105f0:	add	r6, sp, #20
   105f4:	mov	r1, #0
   105f8:	str	r1, [sp, #16]
   105fc:	b	10610 <abort@plt+0x14c>
   10600:	ldr	r0, [sp, #12]
   10604:	add	r0, r0, #1
   10608:	cmp	r0, #15
   1060c:	beq	106ec <abort@plt+0x228>
   10610:	str	r0, [sp, #12]
   10614:	movw	r1, #3088	; 0xc10
   10618:	movt	r1, #1
   1061c:	ldr	r7, [r1, r0, lsl #2]
   10620:	mov	r9, #0
   10624:	b	10634 <abort@plt+0x170>
   10628:	add	r9, r9, #8
   1062c:	cmp	r9, #104	; 0x68
   10630:	beq	10600 <abort@plt+0x13c>
   10634:	movw	r0, #3152	; 0xc50
   10638:	movt	r0, #1
   1063c:	add	r0, r0, r9
   10640:	vldr	d8, [r0]
   10644:	vstr	d8, [sp]
   10648:	mov	r0, #0
   1064c:	mov	r1, #0
   10650:	mov	r2, r7
   10654:	bl	104ac <snprintf@plt>
   10658:	mov	r5, r0
   1065c:	vstr	d8, [sp]
   10660:	mov	r0, sl
   10664:	mov	r1, #1024	; 0x400
   10668:	mov	r2, r7
   1066c:	bl	104ac <snprintf@plt>
   10670:	mov	r8, r0
   10674:	vmov	r2, r3, d8
   10678:	mov	r0, r6
   1067c:	mov	r1, r7
   10680:	bl	104b8 <sprintf@plt>
   10684:	mov	r0, sl
   10688:	mov	r1, r6
   1068c:	bl	10464 <strcmp@plt>
   10690:	cmp	r0, #0
   10694:	beq	106bc <abort@plt+0x1f8>
   10698:	movw	r0, #2836	; 0xb14
   1069c:	movt	r0, #1
   106a0:	mov	r1, r7
   106a4:	mov	r2, sl
   106a8:	mov	r3, r6
   106ac:	bl	10470 <printf@plt>
   106b0:	ldr	r0, [sp, #16]
   106b4:	add	r0, r0, #1
   106b8:	str	r0, [sp, #16]
   106bc:	cmp	r5, r8
   106c0:	beq	10628 <abort@plt+0x164>
   106c4:	movw	r0, #2905	; 0xb59
   106c8:	movt	r0, #1
   106cc:	mov	r1, r5
   106d0:	mov	r2, r8
   106d4:	mov	r3, r7
   106d8:	bl	10470 <printf@plt>
   106dc:	ldr	r0, [sp, #16]
   106e0:	add	r0, r0, #1
   106e4:	str	r0, [sp, #16]
   106e8:	b	10628 <abort@plt+0x164>
   106ec:	mov	r0, #0
   106f0:	b	10704 <abort@plt+0x240>
   106f4:	ldr	r0, [sp, #12]
   106f8:	add	r0, r0, #1
   106fc:	cmp	r0, #10
   10700:	beq	107e8 <abort@plt+0x324>
   10704:	str	r0, [sp, #12]
   10708:	movw	r1, #3264	; 0xcc0
   1070c:	movt	r1, #1
   10710:	ldr	r7, [r1, r0, lsl #2]
   10714:	mov	sl, #0
   10718:	b	10728 <abort@plt+0x264>
   1071c:	add	sl, sl, #1
   10720:	cmp	sl, #5
   10724:	beq	106f4 <abort@plt+0x230>
   10728:	movw	r0, #3372	; 0xd2c
   1072c:	movt	r0, #1
   10730:	ldr	r9, [r0, sl, lsl #2]
   10734:	mov	r0, #0
   10738:	mov	r1, #0
   1073c:	mov	r2, r7
   10740:	mov	r3, r9
   10744:	bl	104ac <snprintf@plt>
   10748:	mov	r5, r0
   1074c:	add	lr, sp, #1024	; 0x400
   10750:	add	r6, lr, #20
   10754:	mov	r0, r6
   10758:	mov	r1, #1024	; 0x400
   1075c:	mov	r2, r7
   10760:	mov	r3, r9
   10764:	bl	104ac <snprintf@plt>
   10768:	mov	r8, r0
   1076c:	add	r0, sp, #20
   10770:	mov	r1, r7
   10774:	mov	r2, r9
   10778:	mov	r4, r0
   1077c:	bl	104b8 <sprintf@plt>
   10780:	mov	r0, r6
   10784:	mov	r1, r4
   10788:	bl	10464 <strcmp@plt>
   1078c:	cmp	r0, #0
   10790:	beq	107b8 <abort@plt+0x2f4>
   10794:	movw	r0, #2836	; 0xb14
   10798:	movt	r0, #1
   1079c:	mov	r1, r7
   107a0:	mov	r2, r6
   107a4:	mov	r3, r4
   107a8:	bl	10470 <printf@plt>
   107ac:	ldr	r0, [sp, #16]
   107b0:	add	r0, r0, #1
   107b4:	str	r0, [sp, #16]
   107b8:	cmp	r5, r8
   107bc:	beq	1071c <abort@plt+0x258>
   107c0:	movw	r0, #2905	; 0xb59
   107c4:	movt	r0, #1
   107c8:	mov	r1, r5
   107cc:	mov	r2, r8
   107d0:	mov	r3, r7
   107d4:	bl	10470 <printf@plt>
   107d8:	ldr	r0, [sp, #16]
   107dc:	add	r0, r0, #1
   107e0:	str	r0, [sp, #16]
   107e4:	b	1071c <abort@plt+0x258>
   107e8:	mov	r0, #0
   107ec:	b	10800 <abort@plt+0x33c>
   107f0:	ldr	r0, [sp, #12]
   107f4:	add	r0, r0, #1
   107f8:	cmp	r0, #10
   107fc:	beq	108e4 <abort@plt+0x420>
   10800:	str	r0, [sp, #12]
   10804:	movw	r1, #3308	; 0xcec
   10808:	movt	r1, #1
   1080c:	ldr	r7, [r1, r0, lsl #2]
   10810:	mov	sl, #0
   10814:	b	10824 <abort@plt+0x360>
   10818:	add	sl, sl, #1
   1081c:	cmp	sl, #4
   10820:	beq	107f0 <abort@plt+0x32c>
   10824:	movw	r0, #3352	; 0xd18
   10828:	movt	r0, #1
   1082c:	ldr	r9, [r0, sl, lsl #2]
   10830:	mov	r0, #0
   10834:	mov	r1, #0
   10838:	mov	r2, r7
   1083c:	mov	r3, r9
   10840:	bl	104ac <snprintf@plt>
   10844:	mov	r5, r0
   10848:	add	lr, sp, #1024	; 0x400
   1084c:	add	r6, lr, #20
   10850:	mov	r0, r6
   10854:	mov	r1, #1024	; 0x400
   10858:	mov	r2, r7
   1085c:	mov	r3, r9
   10860:	bl	104ac <snprintf@plt>
   10864:	mov	r8, r0
   10868:	add	r0, sp, #20
   1086c:	mov	r1, r7
   10870:	mov	r2, r9
   10874:	mov	r4, r0
   10878:	bl	104b8 <sprintf@plt>
   1087c:	mov	r0, r6
   10880:	mov	r1, r4
   10884:	bl	10464 <strcmp@plt>
   10888:	cmp	r0, #0
   1088c:	beq	108b4 <abort@plt+0x3f0>
   10890:	movw	r0, #2836	; 0xb14
   10894:	movt	r0, #1
   10898:	mov	r1, r7
   1089c:	mov	r2, r6
   108a0:	mov	r3, r4
   108a4:	bl	10470 <printf@plt>
   108a8:	ldr	r0, [sp, #16]
   108ac:	add	r0, r0, #1
   108b0:	str	r0, [sp, #16]
   108b4:	cmp	r5, r8
   108b8:	beq	10818 <abort@plt+0x354>
   108bc:	movw	r0, #2905	; 0xb59
   108c0:	movt	r0, #1
   108c4:	mov	r1, r5
   108c8:	mov	r2, r8
   108cc:	mov	r3, r7
   108d0:	bl	10470 <printf@plt>
   108d4:	ldr	r0, [sp, #16]
   108d8:	add	r0, r0, #1
   108dc:	str	r0, [sp, #16]
   108e0:	b	10818 <abort@plt+0x354>
   108e4:	movw	r0, #2935	; 0xb77
   108e8:	movt	r0, #1
   108ec:	ldr	r1, [sp, #16]
   108f0:	movw	r2, #285	; 0x11d
   108f4:	bl	10470 <printf@plt>
   108f8:	movw	r0, #3049	; 0xbe9
   108fc:	movt	r0, #1
   10900:	bl	10488 <puts@plt>
   10904:	mvn	r5, #0
   10908:	vmov.f64	d8, #36	; 0x41200000  10.0
   1090c:	vldr	d9, [pc, #148]	; 109a8 <abort@plt+0x4e4>
   10910:	add	lr, sp, #1024	; 0x400
   10914:	add	r8, lr, #20
   10918:	movw	r6, #2596	; 0xa24
   1091c:	movt	r6, #1
   10920:	add	r7, sp, #20
   10924:	add	r4, r5, #1
   10928:	vmov	s0, r4
   1092c:	vcvt.f64.s32	d1, s0
   10930:	vmov.f64	d0, d8
   10934:	bl	1047c <pow@plt>
   10938:	vmul.f64	d10, d0, d9
   1093c:	vstr	d10, [sp]
   10940:	mov	r0, r8
   10944:	mov	r1, #1024	; 0x400
   10948:	mov	r2, r6
   1094c:	bl	104ac <snprintf@plt>
   10950:	vmov	r2, r3, d10
   10954:	mov	r0, r7
   10958:	mov	r1, r6
   1095c:	bl	104b8 <sprintf@plt>
   10960:	mov	r0, r8
   10964:	mov	r1, r7
   10968:	bl	10464 <strcmp@plt>
   1096c:	cmp	r0, #0
   10970:	bne	10984 <abort@plt+0x4c0>
   10974:	cmp	r4, #99	; 0x63
   10978:	mov	r5, r4
   1097c:	bne	10924 <abort@plt+0x460>
   10980:	b	10994 <abort@plt+0x4d0>
   10984:	movw	r0, #2963	; 0xb93
   10988:	movt	r0, #1
   1098c:	mov	r1, r5
   10990:	bl	10470 <printf@plt>
   10994:	mov	r0, #0
   10998:	sub	sp, fp, #56	; 0x38
   1099c:	vpop	{d8-d10}
   109a0:	add	sp, sp, #4
   109a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   109a8:	smlsldcc	pc, r6, pc, r6	; <UNPREDICTABLE>
   109ac:	svccc	0x00bf9add
   109b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   109b4:	mov	r7, r0
   109b8:	ldr	r6, [pc, #72]	; 10a08 <abort@plt+0x544>
   109bc:	ldr	r5, [pc, #72]	; 10a0c <abort@plt+0x548>
   109c0:	add	r6, pc, r6
   109c4:	add	r5, pc, r5
   109c8:	sub	r6, r6, r5
   109cc:	mov	r8, r1
   109d0:	mov	r9, r2
   109d4:	bl	10444 <strcmp@plt-0x20>
   109d8:	asrs	r6, r6, #2
   109dc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   109e0:	mov	r4, #0
   109e4:	add	r4, r4, #1
   109e8:	ldr	r3, [r5], #4
   109ec:	mov	r2, r9
   109f0:	mov	r1, r8
   109f4:	mov	r0, r7
   109f8:	blx	r3
   109fc:	cmp	r6, r4
   10a00:	bne	109e4 <abort@plt+0x520>
   10a04:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10a08:	andeq	r0, r1, ip, lsr r5
   10a0c:	andeq	r0, r1, r4, lsr r5
   10a10:	bx	lr

Disassembly of section .fini:

00010a14 <.fini>:
   10a14:	push	{r3, lr}
   10a18:	pop	{r3, pc}
