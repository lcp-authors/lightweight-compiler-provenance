
../repos/coreutils/src/nice:     file format elf32-littlearm


Disassembly of section .init:

00010d34 <.init>:
   10d34:	push	{r3, lr}
   10d38:	bl	10fdc <__assert_fail@plt+0x48>
   10d3c:	pop	{r3, pc}

Disassembly of section .plt:

00010d40 <calloc@plt-0x14>:
   10d40:	push	{lr}		; (str lr, [sp, #-4]!)
   10d44:	ldr	lr, [pc, #4]	; 10d50 <calloc@plt-0x4>
   10d48:	add	lr, pc, lr
   10d4c:	ldr	pc, [lr, #8]!
   10d50:			; <UNDEFINED> instruction: 0x0001c2b0

00010d54 <calloc@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #28, 20	; 0x1c000
   10d5c:	ldr	pc, [ip, #688]!	; 0x2b0

00010d60 <fputs_unlocked@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #28, 20	; 0x1c000
   10d68:	ldr	pc, [ip, #680]!	; 0x2a8

00010d6c <raise@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #28, 20	; 0x1c000
   10d74:	ldr	pc, [ip, #672]!	; 0x2a0

00010d78 <strcmp@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #28, 20	; 0x1c000
   10d80:	ldr	pc, [ip, #664]!	; 0x298

00010d84 <strtol@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #28, 20	; 0x1c000
   10d8c:	ldr	pc, [ip, #656]!	; 0x290

00010d90 <printf@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #28, 20	; 0x1c000
   10d98:	ldr	pc, [ip, #648]!	; 0x288

00010d9c <fflush@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #28, 20	; 0x1c000
   10da4:	ldr	pc, [ip, #640]!	; 0x280

00010da8 <free@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #28, 20	; 0x1c000
   10db0:	ldr	pc, [ip, #632]!	; 0x278

00010db4 <_exit@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #28, 20	; 0x1c000
   10dbc:	ldr	pc, [ip, #624]!	; 0x270

00010dc0 <memcpy@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #28, 20	; 0x1c000
   10dc8:	ldr	pc, [ip, #616]!	; 0x268

00010dcc <execvp@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #28, 20	; 0x1c000
   10dd4:	ldr	pc, [ip, #608]!	; 0x260

00010dd8 <mbsinit@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #28, 20	; 0x1c000
   10de0:	ldr	pc, [ip, #600]!	; 0x258

00010de4 <memcmp@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #28, 20	; 0x1c000
   10dec:	ldr	pc, [ip, #592]!	; 0x250

00010df0 <realloc@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #28, 20	; 0x1c000
   10df8:	ldr	pc, [ip, #584]!	; 0x248

00010dfc <getpriority@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #28, 20	; 0x1c000
   10e04:	ldr	pc, [ip, #576]!	; 0x240

00010e08 <textdomain@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #28, 20	; 0x1c000
   10e10:	ldr	pc, [ip, #568]!	; 0x238

00010e14 <iswprint@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #28, 20	; 0x1c000
   10e1c:	ldr	pc, [ip, #560]!	; 0x230

00010e20 <lseek64@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #28, 20	; 0x1c000
   10e28:	ldr	pc, [ip, #552]!	; 0x228

00010e2c <__ctype_get_mb_cur_max@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #28, 20	; 0x1c000
   10e34:	ldr	pc, [ip, #544]!	; 0x220

00010e38 <__fpending@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #28, 20	; 0x1c000
   10e40:	ldr	pc, [ip, #536]!	; 0x218

00010e44 <ferror_unlocked@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #28, 20	; 0x1c000
   10e4c:	ldr	pc, [ip, #528]!	; 0x210

00010e50 <mbrtowc@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #28, 20	; 0x1c000
   10e58:	ldr	pc, [ip, #520]!	; 0x208

00010e5c <error@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #28, 20	; 0x1c000
   10e64:	ldr	pc, [ip, #512]!	; 0x200

00010e68 <setpriority@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #28, 20	; 0x1c000
   10e70:	ldr	pc, [ip, #504]!	; 0x1f8

00010e74 <malloc@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #28, 20	; 0x1c000
   10e7c:	ldr	pc, [ip, #496]!	; 0x1f0

00010e80 <__libc_start_main@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #28, 20	; 0x1c000
   10e88:	ldr	pc, [ip, #488]!	; 0x1e8

00010e8c <__freading@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #28, 20	; 0x1c000
   10e94:	ldr	pc, [ip, #480]!	; 0x1e0

00010e98 <__gmon_start__@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #28, 20	; 0x1c000
   10ea0:	ldr	pc, [ip, #472]!	; 0x1d8

00010ea4 <getopt_long@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #28, 20	; 0x1c000
   10eac:	ldr	pc, [ip, #464]!	; 0x1d0

00010eb0 <__ctype_b_loc@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #28, 20	; 0x1c000
   10eb8:	ldr	pc, [ip, #456]!	; 0x1c8

00010ebc <exit@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #28, 20	; 0x1c000
   10ec4:	ldr	pc, [ip, #448]!	; 0x1c0

00010ec8 <gettext@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #28, 20	; 0x1c000
   10ed0:	ldr	pc, [ip, #440]!	; 0x1b8

00010ed4 <strlen@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #28, 20	; 0x1c000
   10edc:	ldr	pc, [ip, #432]!	; 0x1b0

00010ee0 <strchr@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #28, 20	; 0x1c000
   10ee8:	ldr	pc, [ip, #424]!	; 0x1a8

00010eec <fprintf@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #28, 20	; 0x1c000
   10ef4:	ldr	pc, [ip, #416]!	; 0x1a0

00010ef8 <__errno_location@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #28, 20	; 0x1c000
   10f00:	ldr	pc, [ip, #408]!	; 0x198

00010f04 <__cxa_atexit@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #28, 20	; 0x1c000
   10f0c:	ldr	pc, [ip, #400]!	; 0x190

00010f10 <memset@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #28, 20	; 0x1c000
   10f18:	ldr	pc, [ip, #392]!	; 0x188

00010f1c <fileno@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #28, 20	; 0x1c000
   10f24:	ldr	pc, [ip, #384]!	; 0x180

00010f28 <fclose@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #28, 20	; 0x1c000
   10f30:	ldr	pc, [ip, #376]!	; 0x178

00010f34 <fseeko64@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #28, 20	; 0x1c000
   10f3c:	ldr	pc, [ip, #368]!	; 0x170

00010f40 <setlocale@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #28, 20	; 0x1c000
   10f48:	ldr	pc, [ip, #360]!	; 0x168

00010f4c <strrchr@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #28, 20	; 0x1c000
   10f54:	ldr	pc, [ip, #352]!	; 0x160

00010f58 <nl_langinfo@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #28, 20	; 0x1c000
   10f60:	ldr	pc, [ip, #344]!	; 0x158

00010f64 <bindtextdomain@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #28, 20	; 0x1c000
   10f6c:	ldr	pc, [ip, #336]!	; 0x150

00010f70 <fputs@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #28, 20	; 0x1c000
   10f78:	ldr	pc, [ip, #328]!	; 0x148

00010f7c <strncmp@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #28, 20	; 0x1c000
   10f84:	ldr	pc, [ip, #320]!	; 0x140

00010f88 <abort@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #28, 20	; 0x1c000
   10f90:	ldr	pc, [ip, #312]!	; 0x138

00010f94 <__assert_fail@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #28, 20	; 0x1c000
   10f9c:	ldr	pc, [ip, #304]!	; 0x130

Disassembly of section .text:

00010fa0 <.text>:
   10fa0:	mov	fp, #0
   10fa4:	mov	lr, #0
   10fa8:	pop	{r1}		; (ldr r1, [sp], #4)
   10fac:	mov	r2, sp
   10fb0:	push	{r2}		; (str r2, [sp, #-4]!)
   10fb4:	push	{r0}		; (str r0, [sp, #-4]!)
   10fb8:	ldr	ip, [pc, #16]	; 10fd0 <__assert_fail@plt+0x3c>
   10fbc:	push	{ip}		; (str ip, [sp, #-4]!)
   10fc0:	ldr	r0, [pc, #12]	; 10fd4 <__assert_fail@plt+0x40>
   10fc4:	ldr	r3, [pc, #12]	; 10fd8 <__assert_fail@plt+0x44>
   10fc8:	bl	10e80 <__libc_start_main@plt>
   10fcc:	bl	10f88 <abort@plt>
   10fd0:			; <UNDEFINED> instruction: 0x0001bebc
   10fd4:	andeq	r1, r1, r4, asr #7
   10fd8:	andeq	fp, r1, ip, asr lr
   10fdc:	ldr	r3, [pc, #20]	; 10ff8 <__assert_fail@plt+0x64>
   10fe0:	ldr	r2, [pc, #20]	; 10ffc <__assert_fail@plt+0x68>
   10fe4:	add	r3, pc, r3
   10fe8:	ldr	r2, [r3, r2]
   10fec:	cmp	r2, #0
   10ff0:	bxeq	lr
   10ff4:	b	10e98 <__gmon_start__@plt>
   10ff8:	andeq	ip, r1, r4, lsl r0
   10ffc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11000:	ldr	r0, [pc, #24]	; 11020 <__assert_fail@plt+0x8c>
   11004:	ldr	r3, [pc, #24]	; 11024 <__assert_fail@plt+0x90>
   11008:	cmp	r3, r0
   1100c:	bxeq	lr
   11010:	ldr	r3, [pc, #16]	; 11028 <__assert_fail@plt+0x94>
   11014:	cmp	r3, #0
   11018:	bxeq	lr
   1101c:	bx	r3
   11020:	andeq	sp, r2, r4, lsr #2
   11024:	andeq	sp, r2, r4, lsr #2
   11028:	andeq	r0, r0, r0
   1102c:	ldr	r0, [pc, #36]	; 11058 <__assert_fail@plt+0xc4>
   11030:	ldr	r1, [pc, #36]	; 1105c <__assert_fail@plt+0xc8>
   11034:	sub	r1, r1, r0
   11038:	asr	r1, r1, #2
   1103c:	add	r1, r1, r1, lsr #31
   11040:	asrs	r1, r1, #1
   11044:	bxeq	lr
   11048:	ldr	r3, [pc, #16]	; 11060 <__assert_fail@plt+0xcc>
   1104c:	cmp	r3, #0
   11050:	bxeq	lr
   11054:	bx	r3
   11058:	andeq	sp, r2, r4, lsr #2
   1105c:	andeq	sp, r2, r4, lsr #2
   11060:	andeq	r0, r0, r0
   11064:	push	{r4, lr}
   11068:	ldr	r4, [pc, #24]	; 11088 <__assert_fail@plt+0xf4>
   1106c:	ldrb	r3, [r4]
   11070:	cmp	r3, #0
   11074:	popne	{r4, pc}
   11078:	bl	11000 <__assert_fail@plt+0x6c>
   1107c:	mov	r3, #1
   11080:	strb	r3, [r4]
   11084:	pop	{r4, pc}
   11088:	andeq	sp, r2, r4, asr #2
   1108c:	b	1102c <__assert_fail@plt+0x98>
   11090:	push	{fp, lr}
   11094:	mov	fp, sp
   11098:	sub	sp, sp, #40	; 0x28
   1109c:	str	r0, [fp, #-4]
   110a0:	ldr	r0, [fp, #-4]
   110a4:	cmp	r0, #0
   110a8:	beq	110f8 <__assert_fail@plt+0x164>
   110ac:	b	110b0 <__assert_fail@plt+0x11c>
   110b0:	movw	r0, #53560	; 0xd138
   110b4:	movt	r0, #2
   110b8:	ldr	r0, [r0]
   110bc:	movw	r1, #48868	; 0xbee4
   110c0:	movt	r1, #1
   110c4:	str	r0, [fp, #-8]
   110c8:	mov	r0, r1
   110cc:	bl	10ec8 <gettext@plt>
   110d0:	movw	r1, #53584	; 0xd150
   110d4:	movt	r1, #2
   110d8:	ldr	r2, [r1]
   110dc:	ldr	r1, [fp, #-8]
   110e0:	str	r0, [fp, #-12]
   110e4:	mov	r0, r1
   110e8:	ldr	r1, [fp, #-12]
   110ec:	bl	10eec <fprintf@plt>
   110f0:	str	r0, [fp, #-16]
   110f4:	b	111d4 <__assert_fail@plt+0x240>
   110f8:	movw	r0, #48907	; 0xbf0b
   110fc:	movt	r0, #1
   11100:	bl	10ec8 <gettext@plt>
   11104:	movw	lr, #53584	; 0xd150
   11108:	movt	lr, #2
   1110c:	ldr	r1, [lr]
   11110:	bl	10d90 <printf@plt>
   11114:	movw	r1, #48946	; 0xbf32
   11118:	movt	r1, #1
   1111c:	str	r0, [sp, #20]
   11120:	mov	r0, r1
   11124:	bl	10ec8 <gettext@plt>
   11128:	mvn	r1, #19
   1112c:	movw	r2, #19
   11130:	bl	10d90 <printf@plt>
   11134:	str	r0, [sp, #16]
   11138:	bl	111dc <__assert_fail@plt+0x248>
   1113c:	movw	r0, #49168	; 0xc010
   11140:	movt	r0, #1
   11144:	bl	10ec8 <gettext@plt>
   11148:	movw	r1, #53564	; 0xd13c
   1114c:	movt	r1, #2
   11150:	ldr	r1, [r1]
   11154:	bl	10d60 <fputs_unlocked@plt>
   11158:	movw	r1, #49235	; 0xc053
   1115c:	movt	r1, #1
   11160:	str	r0, [sp, #12]
   11164:	mov	r0, r1
   11168:	bl	10ec8 <gettext@plt>
   1116c:	movw	r1, #53564	; 0xd13c
   11170:	movt	r1, #2
   11174:	ldr	r1, [r1]
   11178:	bl	10d60 <fputs_unlocked@plt>
   1117c:	movw	r1, #49280	; 0xc080
   11180:	movt	r1, #1
   11184:	str	r0, [sp, #8]
   11188:	mov	r0, r1
   1118c:	bl	10ec8 <gettext@plt>
   11190:	movw	r1, #53564	; 0xd13c
   11194:	movt	r1, #2
   11198:	ldr	r1, [r1]
   1119c:	bl	10d60 <fputs_unlocked@plt>
   111a0:	movw	r1, #49334	; 0xc0b6
   111a4:	movt	r1, #1
   111a8:	str	r0, [sp, #4]
   111ac:	mov	r0, r1
   111b0:	bl	10ec8 <gettext@plt>
   111b4:	movw	r1, #49525	; 0xc175
   111b8:	movt	r1, #1
   111bc:	bl	10d90 <printf@plt>
   111c0:	movw	r1, #49525	; 0xc175
   111c4:	movt	r1, #1
   111c8:	str	r0, [sp]
   111cc:	mov	r0, r1
   111d0:	bl	11210 <__assert_fail@plt+0x27c>
   111d4:	ldr	r0, [fp, #-4]
   111d8:	bl	10ebc <exit@plt>
   111dc:	push	{fp, lr}
   111e0:	mov	fp, sp
   111e4:	sub	sp, sp, #8
   111e8:	movw	r0, #49697	; 0xc221
   111ec:	movt	r0, #1
   111f0:	bl	10ec8 <gettext@plt>
   111f4:	movw	lr, #53564	; 0xd13c
   111f8:	movt	lr, #2
   111fc:	ldr	r1, [lr]
   11200:	bl	10d60 <fputs_unlocked@plt>
   11204:	str	r0, [sp, #4]
   11208:	mov	sp, fp
   1120c:	pop	{fp, pc}
   11210:	push	{fp, lr}
   11214:	mov	fp, sp
   11218:	sub	sp, sp, #96	; 0x60
   1121c:	add	r1, sp, #36	; 0x24
   11220:	movw	r2, #50160	; 0xc3f0
   11224:	movt	r2, #1
   11228:	str	r0, [fp, #-4]
   1122c:	mov	r0, r1
   11230:	str	r1, [sp, #20]
   11234:	mov	r1, r2
   11238:	movw	r2, #56	; 0x38
   1123c:	bl	10dc0 <memcpy@plt>
   11240:	ldr	r0, [fp, #-4]
   11244:	str	r0, [sp, #32]
   11248:	ldr	r0, [sp, #20]
   1124c:	str	r0, [sp, #28]
   11250:	ldr	r0, [sp, #28]
   11254:	ldr	r0, [r0]
   11258:	movw	r1, #0
   1125c:	cmp	r0, r1
   11260:	movw	r0, #0
   11264:	str	r0, [sp, #16]
   11268:	beq	11294 <__assert_fail@plt+0x300>
   1126c:	ldr	r0, [fp, #-4]
   11270:	ldr	r1, [sp, #28]
   11274:	ldr	r1, [r1]
   11278:	bl	10d78 <strcmp@plt>
   1127c:	cmp	r0, #0
   11280:	movw	r0, #0
   11284:	moveq	r0, #1
   11288:	mvn	r1, #0
   1128c:	eor	r0, r0, r1
   11290:	str	r0, [sp, #16]
   11294:	ldr	r0, [sp, #16]
   11298:	tst	r0, #1
   1129c:	beq	112b0 <__assert_fail@plt+0x31c>
   112a0:	ldr	r0, [sp, #28]
   112a4:	add	r0, r0, #8
   112a8:	str	r0, [sp, #28]
   112ac:	b	11250 <__assert_fail@plt+0x2bc>
   112b0:	ldr	r0, [sp, #28]
   112b4:	ldr	r0, [r0, #4]
   112b8:	movw	r1, #0
   112bc:	cmp	r0, r1
   112c0:	beq	112d0 <__assert_fail@plt+0x33c>
   112c4:	ldr	r0, [sp, #28]
   112c8:	ldr	r0, [r0, #4]
   112cc:	str	r0, [sp, #32]
   112d0:	movw	r0, #49867	; 0xc2cb
   112d4:	movt	r0, #1
   112d8:	bl	10ec8 <gettext@plt>
   112dc:	movw	r1, #49558	; 0xc196
   112e0:	movt	r1, #1
   112e4:	movw	r2, #49890	; 0xc2e2
   112e8:	movt	r2, #1
   112ec:	bl	10d90 <printf@plt>
   112f0:	movw	r1, #5
   112f4:	str	r0, [sp, #12]
   112f8:	mov	r0, r1
   112fc:	movw	r1, #0
   11300:	bl	10f40 <setlocale@plt>
   11304:	str	r0, [sp, #24]
   11308:	ldr	r0, [sp, #24]
   1130c:	movw	r1, #0
   11310:	cmp	r0, r1
   11314:	beq	11354 <__assert_fail@plt+0x3c0>
   11318:	ldr	r0, [sp, #24]
   1131c:	movw	r1, #49930	; 0xc30a
   11320:	movt	r1, #1
   11324:	movw	r2, #3
   11328:	bl	10f7c <strncmp@plt>
   1132c:	cmp	r0, #0
   11330:	beq	11354 <__assert_fail@plt+0x3c0>
   11334:	movw	r0, #49934	; 0xc30e
   11338:	movt	r0, #1
   1133c:	bl	10ec8 <gettext@plt>
   11340:	movw	lr, #53564	; 0xd13c
   11344:	movt	lr, #2
   11348:	ldr	r1, [lr]
   1134c:	bl	10d60 <fputs_unlocked@plt>
   11350:	str	r0, [sp, #8]
   11354:	movw	r0, #50005	; 0xc355
   11358:	movt	r0, #1
   1135c:	bl	10ec8 <gettext@plt>
   11360:	ldr	r2, [fp, #-4]
   11364:	movw	r1, #49890	; 0xc2e2
   11368:	movt	r1, #1
   1136c:	bl	10d90 <printf@plt>
   11370:	movw	r1, #50032	; 0xc370
   11374:	movt	r1, #1
   11378:	str	r0, [sp, #4]
   1137c:	mov	r0, r1
   11380:	bl	10ec8 <gettext@plt>
   11384:	ldr	r1, [sp, #32]
   11388:	ldr	r2, [sp, #32]
   1138c:	ldr	lr, [fp, #-4]
   11390:	cmp	r2, lr
   11394:	movw	r2, #0
   11398:	moveq	r2, #1
   1139c:	tst	r2, #1
   113a0:	movw	r2, #50082	; 0xc3a2
   113a4:	movt	r2, #1
   113a8:	movw	lr, #49800	; 0xc288
   113ac:	movt	lr, #1
   113b0:	movne	r2, lr
   113b4:	bl	10d90 <printf@plt>
   113b8:	str	r0, [sp]
   113bc:	mov	sp, fp
   113c0:	pop	{fp, pc}
   113c4:	push	{fp, lr}
   113c8:	mov	fp, sp
   113cc:	sub	sp, sp, #176	; 0xb0
   113d0:	movw	r2, #0
   113d4:	str	r2, [fp, #-4]
   113d8:	str	r0, [fp, #-8]
   113dc:	str	r1, [fp, #-12]
   113e0:	movw	r0, #10
   113e4:	str	r0, [fp, #-20]	; 0xffffffec
   113e8:	str	r2, [fp, #-24]	; 0xffffffe8
   113ec:	ldr	r0, [fp, #-12]
   113f0:	ldr	r0, [r0]
   113f4:	bl	11bac <__assert_fail@plt+0xc18>
   113f8:	movw	r0, #6
   113fc:	movw	r1, #50082	; 0xc3a2
   11400:	movt	r1, #1
   11404:	bl	10f40 <setlocale@plt>
   11408:	movw	r1, #49562	; 0xc19a
   1140c:	movt	r1, #1
   11410:	str	r0, [fp, #-60]	; 0xffffffc4
   11414:	mov	r0, r1
   11418:	movw	r1, #49530	; 0xc17a
   1141c:	movt	r1, #1
   11420:	bl	10f64 <bindtextdomain@plt>
   11424:	movw	r1, #49562	; 0xc19a
   11428:	movt	r1, #1
   1142c:	str	r0, [fp, #-64]	; 0xffffffc0
   11430:	mov	r0, r1
   11434:	bl	10e08 <textdomain@plt>
   11438:	movw	r1, #125	; 0x7d
   1143c:	str	r0, [fp, #-68]	; 0xffffffbc
   11440:	mov	r0, r1
   11444:	bl	119d8 <__assert_fail@plt+0xa44>
   11448:	movw	r0, #6796	; 0x1a8c
   1144c:	movt	r0, #1
   11450:	bl	1bec0 <__assert_fail@plt+0xaf2c>
   11454:	movw	r1, #1
   11458:	str	r1, [fp, #-32]	; 0xffffffe0
   1145c:	str	r0, [fp, #-72]	; 0xffffffb8
   11460:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11464:	ldr	r1, [fp, #-8]
   11468:	cmp	r0, r1
   1146c:	bge	11678 <__assert_fail@plt+0x6e4>
   11470:	ldr	r0, [fp, #-12]
   11474:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11478:	add	r0, r0, r1, lsl #2
   1147c:	ldr	r0, [r0]
   11480:	str	r0, [fp, #-36]	; 0xffffffdc
   11484:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11488:	ldrb	r0, [r0]
   1148c:	cmp	r0, #45	; 0x2d
   11490:	bne	1150c <__assert_fail@plt+0x578>
   11494:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11498:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1149c:	ldrb	r1, [r1, #1]
   114a0:	cmp	r1, #45	; 0x2d
   114a4:	movw	r1, #1
   114a8:	str	r0, [fp, #-76]	; 0xffffffb4
   114ac:	str	r1, [fp, #-80]	; 0xffffffb0
   114b0:	beq	114cc <__assert_fail@plt+0x538>
   114b4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   114b8:	ldrb	r0, [r0, #1]
   114bc:	cmp	r0, #43	; 0x2b
   114c0:	movw	r0, #0
   114c4:	moveq	r0, #1
   114c8:	str	r0, [fp, #-80]	; 0xffffffb0
   114cc:	ldr	r0, [fp, #-80]	; 0xffffffb0
   114d0:	and	r0, r0, #1
   114d4:	add	r0, r0, #1
   114d8:	ldr	r1, [fp, #-76]	; 0xffffffb4
   114dc:	add	r0, r1, r0
   114e0:	ldrb	r0, [r0]
   114e4:	sub	r0, r0, #48	; 0x30
   114e8:	cmp	r0, #9
   114ec:	bhi	1150c <__assert_fail@plt+0x578>
   114f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   114f4:	add	r0, r0, #1
   114f8:	str	r0, [fp, #-24]	; 0xffffffe8
   114fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11500:	add	r0, r0, #1
   11504:	str	r0, [fp, #-32]	; 0xffffffe0
   11508:	b	11674 <__assert_fail@plt+0x6e0>
   1150c:	ldr	r0, [fp, #-8]
   11510:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11514:	rsb	r1, r1, #1
   11518:	add	r0, r0, r1
   1151c:	str	r0, [fp, #-44]	; 0xffffffd4
   11520:	ldr	r0, [fp, #-12]
   11524:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11528:	add	r0, r0, r1, lsl #2
   1152c:	sub	r0, r0, #4
   11530:	str	r0, [fp, #-48]	; 0xffffffd0
   11534:	ldr	r0, [fp, #-12]
   11538:	ldr	r0, [r0]
   1153c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   11540:	str	r0, [r1]
   11544:	movw	r0, #53552	; 0xd130
   11548:	movt	r0, #2
   1154c:	mov	r1, #0
   11550:	str	r1, [r0]
   11554:	ldr	r2, [fp, #-44]	; 0xffffffd4
   11558:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1155c:	mov	ip, sp
   11560:	str	r1, [ip]
   11564:	movw	r1, #49554	; 0xc192
   11568:	movt	r1, #1
   1156c:	movw	ip, #50096	; 0xc3b0
   11570:	movt	ip, #1
   11574:	str	r0, [fp, #-84]	; 0xffffffac
   11578:	mov	r0, r2
   1157c:	str	r1, [sp, #88]	; 0x58
   11580:	mov	r1, r3
   11584:	ldr	r2, [sp, #88]	; 0x58
   11588:	mov	r3, ip
   1158c:	bl	10ea4 <getopt_long@plt>
   11590:	str	r0, [fp, #-40]	; 0xffffffd8
   11594:	ldr	r0, [fp, #-84]	; 0xffffffac
   11598:	ldr	r1, [r0]
   1159c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   115a0:	add	r1, r2, r1
   115a4:	sub	r1, r1, #1
   115a8:	str	r1, [fp, #-32]	; 0xffffffe0
   115ac:	ldr	r1, [fp, #-40]	; 0xffffffd8
   115b0:	cmn	r1, #3
   115b4:	str	r1, [sp, #84]	; 0x54
   115b8:	beq	11610 <__assert_fail@plt+0x67c>
   115bc:	b	115c0 <__assert_fail@plt+0x62c>
   115c0:	ldr	r0, [sp, #84]	; 0x54
   115c4:	cmn	r0, #2
   115c8:	beq	11608 <__assert_fail@plt+0x674>
   115cc:	b	115d0 <__assert_fail@plt+0x63c>
   115d0:	ldr	r0, [sp, #84]	; 0x54
   115d4:	cmn	r0, #1
   115d8:	beq	11604 <__assert_fail@plt+0x670>
   115dc:	b	115e0 <__assert_fail@plt+0x64c>
   115e0:	ldr	r0, [sp, #84]	; 0x54
   115e4:	cmp	r0, #110	; 0x6e
   115e8:	bne	11658 <__assert_fail@plt+0x6c4>
   115ec:	b	115f0 <__assert_fail@plt+0x65c>
   115f0:	movw	r0, #53568	; 0xd140
   115f4:	movt	r0, #2
   115f8:	ldr	r0, [r0]
   115fc:	str	r0, [fp, #-24]	; 0xffffffe8
   11600:	b	11660 <__assert_fail@plt+0x6cc>
   11604:	b	11660 <__assert_fail@plt+0x6cc>
   11608:	movw	r0, #0
   1160c:	bl	11090 <__assert_fail@plt+0xfc>
   11610:	movw	r0, #53564	; 0xd13c
   11614:	movt	r0, #2
   11618:	ldr	r0, [r0]
   1161c:	movw	r1, #53468	; 0xd0dc
   11620:	movt	r1, #2
   11624:	ldr	r3, [r1]
   11628:	movw	r1, #49525	; 0xc175
   1162c:	movt	r1, #1
   11630:	movw	r2, #49558	; 0xc196
   11634:	movt	r2, #1
   11638:	movw	ip, #49572	; 0xc1a4
   1163c:	movt	ip, #1
   11640:	str	ip, [sp]
   11644:	movw	ip, #0
   11648:	str	ip, [sp, #4]
   1164c:	bl	14ac4 <__assert_fail@plt+0x3b30>
   11650:	movw	r0, #0
   11654:	bl	10ebc <exit@plt>
   11658:	movw	r0, #125	; 0x7d
   1165c:	bl	11090 <__assert_fail@plt+0xfc>
   11660:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11664:	cmn	r0, #1
   11668:	bne	11670 <__assert_fail@plt+0x6dc>
   1166c:	b	11678 <__assert_fail@plt+0x6e4>
   11670:	b	11674 <__assert_fail@plt+0x6e0>
   11674:	b	11460 <__assert_fail@plt+0x4cc>
   11678:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1167c:	movw	r1, #0
   11680:	cmp	r0, r1
   11684:	beq	11760 <__assert_fail@plt+0x7cc>
   11688:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1168c:	movw	r1, #0
   11690:	movw	r2, #10
   11694:	sub	r3, fp, #52	; 0x34
   11698:	movw	ip, #50082	; 0xc3a2
   1169c:	movt	ip, #1
   116a0:	str	ip, [sp]
   116a4:	bl	17a80 <__assert_fail@plt+0x6aec>
   116a8:	movw	r1, #1
   116ac:	cmp	r1, r0
   116b0:	bcs	116ec <__assert_fail@plt+0x758>
   116b4:	movw	r0, #49588	; 0xc1b4
   116b8:	movt	r0, #1
   116bc:	bl	10ec8 <gettext@plt>
   116c0:	ldr	lr, [fp, #-24]	; 0xffffffe8
   116c4:	str	r0, [sp, #80]	; 0x50
   116c8:	mov	r0, lr
   116cc:	bl	14208 <__assert_fail@plt+0x3274>
   116d0:	movw	lr, #125	; 0x7d
   116d4:	str	r0, [sp, #76]	; 0x4c
   116d8:	mov	r0, lr
   116dc:	movw	r1, #0
   116e0:	ldr	r2, [sp, #80]	; 0x50
   116e4:	ldr	r3, [sp, #76]	; 0x4c
   116e8:	bl	10e5c <error@plt>
   116ec:	ldr	r0, [fp, #-52]	; 0xffffffcc
   116f0:	cmp	r0, #39	; 0x27
   116f4:	bge	11704 <__assert_fail@plt+0x770>
   116f8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   116fc:	str	r0, [sp, #72]	; 0x48
   11700:	b	11710 <__assert_fail@plt+0x77c>
   11704:	movw	r0, #39	; 0x27
   11708:	str	r0, [sp, #72]	; 0x48
   1170c:	b	11710 <__assert_fail@plt+0x77c>
   11710:	ldr	r0, [sp, #72]	; 0x48
   11714:	mvn	r1, #38	; 0x26
   11718:	cmp	r1, r0
   1171c:	ble	1172c <__assert_fail@plt+0x798>
   11720:	mvn	r0, #38	; 0x26
   11724:	str	r0, [sp, #68]	; 0x44
   11728:	b	11758 <__assert_fail@plt+0x7c4>
   1172c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11730:	cmp	r0, #39	; 0x27
   11734:	bge	11744 <__assert_fail@plt+0x7b0>
   11738:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1173c:	str	r0, [sp, #64]	; 0x40
   11740:	b	11750 <__assert_fail@plt+0x7bc>
   11744:	movw	r0, #39	; 0x27
   11748:	str	r0, [sp, #64]	; 0x40
   1174c:	b	11750 <__assert_fail@plt+0x7bc>
   11750:	ldr	r0, [sp, #64]	; 0x40
   11754:	str	r0, [sp, #68]	; 0x44
   11758:	ldr	r0, [sp, #68]	; 0x44
   1175c:	str	r0, [fp, #-20]	; 0xffffffec
   11760:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11764:	ldr	r1, [fp, #-8]
   11768:	cmp	r0, r1
   1176c:	bne	11834 <__assert_fail@plt+0x8a0>
   11770:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11774:	movw	r1, #0
   11778:	cmp	r0, r1
   1177c:	beq	117ac <__assert_fail@plt+0x818>
   11780:	movw	r0, #49610	; 0xc1ca
   11784:	movt	r0, #1
   11788:	bl	10ec8 <gettext@plt>
   1178c:	movw	lr, #0
   11790:	str	r0, [sp, #60]	; 0x3c
   11794:	mov	r0, lr
   11798:	mov	r1, lr
   1179c:	ldr	r2, [sp, #60]	; 0x3c
   117a0:	bl	10e5c <error@plt>
   117a4:	movw	r0, #125	; 0x7d
   117a8:	bl	11090 <__assert_fail@plt+0xfc>
   117ac:	bl	10ef8 <__errno_location@plt>
   117b0:	movw	lr, #0
   117b4:	str	lr, [r0]
   117b8:	mov	r0, lr
   117bc:	mov	r1, lr
   117c0:	bl	10dfc <getpriority@plt>
   117c4:	str	r0, [fp, #-16]
   117c8:	ldr	r0, [fp, #-16]
   117cc:	cmn	r0, #1
   117d0:	bne	11814 <__assert_fail@plt+0x880>
   117d4:	bl	10ef8 <__errno_location@plt>
   117d8:	ldr	r0, [r0]
   117dc:	cmp	r0, #0
   117e0:	beq	11814 <__assert_fail@plt+0x880>
   117e4:	bl	10ef8 <__errno_location@plt>
   117e8:	ldr	r1, [r0]
   117ec:	movw	r0, #49653	; 0xc1f5
   117f0:	movt	r0, #1
   117f4:	str	r1, [sp, #56]	; 0x38
   117f8:	bl	10ec8 <gettext@plt>
   117fc:	movw	r1, #125	; 0x7d
   11800:	str	r0, [sp, #52]	; 0x34
   11804:	mov	r0, r1
   11808:	ldr	r1, [sp, #56]	; 0x38
   1180c:	ldr	r2, [sp, #52]	; 0x34
   11810:	bl	10e5c <error@plt>
   11814:	ldr	r1, [fp, #-16]
   11818:	movw	r0, #49673	; 0xc209
   1181c:	movt	r0, #1
   11820:	bl	10d90 <printf@plt>
   11824:	movw	r1, #0
   11828:	str	r1, [fp, #-4]
   1182c:	str	r0, [sp, #48]	; 0x30
   11830:	b	119cc <__assert_fail@plt+0xa38>
   11834:	bl	10ef8 <__errno_location@plt>
   11838:	movw	lr, #0
   1183c:	str	lr, [r0]
   11840:	mov	r0, lr
   11844:	mov	r1, lr
   11848:	bl	10dfc <getpriority@plt>
   1184c:	str	r0, [fp, #-16]
   11850:	ldr	r0, [fp, #-16]
   11854:	cmn	r0, #1
   11858:	bne	1189c <__assert_fail@plt+0x908>
   1185c:	bl	10ef8 <__errno_location@plt>
   11860:	ldr	r0, [r0]
   11864:	cmp	r0, #0
   11868:	beq	1189c <__assert_fail@plt+0x908>
   1186c:	bl	10ef8 <__errno_location@plt>
   11870:	ldr	r1, [r0]
   11874:	movw	r0, #49653	; 0xc1f5
   11878:	movt	r0, #1
   1187c:	str	r1, [sp, #44]	; 0x2c
   11880:	bl	10ec8 <gettext@plt>
   11884:	movw	r1, #125	; 0x7d
   11888:	str	r0, [sp, #40]	; 0x28
   1188c:	mov	r0, r1
   11890:	ldr	r1, [sp, #44]	; 0x2c
   11894:	ldr	r2, [sp, #40]	; 0x28
   11898:	bl	10e5c <error@plt>
   1189c:	ldr	r0, [fp, #-16]
   118a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   118a4:	add	r2, r0, r1
   118a8:	movw	r0, #0
   118ac:	str	r0, [sp, #36]	; 0x24
   118b0:	ldr	r1, [sp, #36]	; 0x24
   118b4:	bl	10e68 <setpriority@plt>
   118b8:	cmp	r0, #0
   118bc:	movw	r0, #0
   118c0:	moveq	r0, #1
   118c4:	and	r0, r0, #1
   118c8:	strb	r0, [fp, #-25]	; 0xffffffe7
   118cc:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   118d0:	tst	r0, #1
   118d4:	bne	1194c <__assert_fail@plt+0x9b8>
   118d8:	bl	10ef8 <__errno_location@plt>
   118dc:	ldr	r0, [r0]
   118e0:	bl	11a04 <__assert_fail@plt+0xa70>
   118e4:	tst	r0, #1
   118e8:	movw	r0, #0
   118ec:	moveq	r0, #125	; 0x7d
   118f0:	str	r0, [sp, #32]
   118f4:	bl	10ef8 <__errno_location@plt>
   118f8:	ldr	r1, [r0]
   118fc:	movw	r0, #49677	; 0xc20d
   11900:	movt	r0, #1
   11904:	str	r1, [sp, #28]
   11908:	bl	10ec8 <gettext@plt>
   1190c:	ldr	r1, [sp, #32]
   11910:	str	r0, [sp, #24]
   11914:	mov	r0, r1
   11918:	ldr	r1, [sp, #28]
   1191c:	ldr	r2, [sp, #24]
   11920:	bl	10e5c <error@plt>
   11924:	movw	r0, #53560	; 0xd138
   11928:	movt	r0, #2
   1192c:	ldr	r0, [r0]
   11930:	bl	10e44 <ferror_unlocked@plt>
   11934:	cmp	r0, #0
   11938:	beq	11948 <__assert_fail@plt+0x9b4>
   1193c:	movw	r0, #125	; 0x7d
   11940:	str	r0, [fp, #-4]
   11944:	b	119cc <__assert_fail@plt+0xa38>
   11948:	b	1194c <__assert_fail@plt+0x9b8>
   1194c:	ldr	r0, [fp, #-12]
   11950:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11954:	ldr	r1, [r0, r1, lsl #2]!
   11958:	str	r0, [sp, #20]
   1195c:	mov	r0, r1
   11960:	ldr	r1, [sp, #20]
   11964:	bl	10dcc <execvp@plt>
   11968:	str	r0, [sp, #16]
   1196c:	bl	10ef8 <__errno_location@plt>
   11970:	ldr	r0, [r0]
   11974:	mov	r1, #126	; 0x7e
   11978:	cmp	r0, #2
   1197c:	movweq	r1, #127	; 0x7f
   11980:	str	r1, [fp, #-56]	; 0xffffffc8
   11984:	bl	10ef8 <__errno_location@plt>
   11988:	ldr	r1, [r0]
   1198c:	ldr	r0, [fp, #-12]
   11990:	ldr	lr, [fp, #-32]	; 0xffffffe0
   11994:	add	r0, r0, lr, lsl #2
   11998:	ldr	r0, [r0]
   1199c:	str	r1, [sp, #12]
   119a0:	bl	14208 <__assert_fail@plt+0x3274>
   119a4:	movw	r1, #0
   119a8:	str	r0, [sp, #8]
   119ac:	mov	r0, r1
   119b0:	ldr	r1, [sp, #12]
   119b4:	movw	r2, #50247	; 0xc447
   119b8:	movt	r2, #1
   119bc:	ldr	r3, [sp, #8]
   119c0:	bl	10e5c <error@plt>
   119c4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   119c8:	str	r0, [fp, #-4]
   119cc:	ldr	r0, [fp, #-4]
   119d0:	mov	sp, fp
   119d4:	pop	{fp, pc}
   119d8:	sub	sp, sp, #4
   119dc:	str	r0, [sp]
   119e0:	ldr	r0, [sp]
   119e4:	cmp	r0, #1
   119e8:	beq	119fc <__assert_fail@plt+0xa68>
   119ec:	ldr	r0, [sp]
   119f0:	movw	r1, #53472	; 0xd0e0
   119f4:	movt	r1, #2
   119f8:	str	r0, [r1]
   119fc:	add	sp, sp, #4
   11a00:	bx	lr
   11a04:	sub	sp, sp, #8
   11a08:	str	r0, [sp, #4]
   11a0c:	ldr	r0, [sp, #4]
   11a10:	cmp	r0, #13
   11a14:	movw	r0, #1
   11a18:	str	r0, [sp]
   11a1c:	beq	11a34 <__assert_fail@plt+0xaa0>
   11a20:	ldr	r0, [sp, #4]
   11a24:	cmp	r0, #1
   11a28:	movw	r0, #0
   11a2c:	moveq	r0, #1
   11a30:	str	r0, [sp]
   11a34:	ldr	r0, [sp]
   11a38:	and	r0, r0, #1
   11a3c:	add	sp, sp, #8
   11a40:	bx	lr
   11a44:	sub	sp, sp, #4
   11a48:	str	r0, [sp]
   11a4c:	ldr	r0, [sp]
   11a50:	movw	r1, #53576	; 0xd148
   11a54:	movt	r1, #2
   11a58:	str	r0, [r1]
   11a5c:	add	sp, sp, #4
   11a60:	bx	lr
   11a64:	sub	sp, sp, #4
   11a68:	and	r0, r0, #1
   11a6c:	strb	r0, [sp, #3]
   11a70:	ldrb	r0, [sp, #3]
   11a74:	and	r0, r0, #1
   11a78:	movw	r1, #53580	; 0xd14c
   11a7c:	movt	r1, #2
   11a80:	strb	r0, [r1]
   11a84:	add	sp, sp, #4
   11a88:	bx	lr
   11a8c:	push	{fp, lr}
   11a90:	mov	fp, sp
   11a94:	sub	sp, sp, #24
   11a98:	movw	r0, #53564	; 0xd13c
   11a9c:	movt	r0, #2
   11aa0:	ldr	r0, [r0]
   11aa4:	bl	199b4 <__assert_fail@plt+0x8a20>
   11aa8:	cmp	r0, #0
   11aac:	beq	11b7c <__assert_fail@plt+0xbe8>
   11ab0:	movw	r0, #53580	; 0xd14c
   11ab4:	movt	r0, #2
   11ab8:	ldrb	r0, [r0]
   11abc:	tst	r0, #1
   11ac0:	beq	11ad4 <__assert_fail@plt+0xb40>
   11ac4:	bl	10ef8 <__errno_location@plt>
   11ac8:	ldr	r0, [r0]
   11acc:	cmp	r0, #32
   11ad0:	beq	11b7c <__assert_fail@plt+0xbe8>
   11ad4:	movw	r0, #50231	; 0xc437
   11ad8:	movt	r0, #1
   11adc:	bl	10ec8 <gettext@plt>
   11ae0:	str	r0, [fp, #-4]
   11ae4:	movw	r0, #53576	; 0xd148
   11ae8:	movt	r0, #2
   11aec:	ldr	r0, [r0]
   11af0:	movw	lr, #0
   11af4:	cmp	r0, lr
   11af8:	beq	11b50 <__assert_fail@plt+0xbbc>
   11afc:	bl	10ef8 <__errno_location@plt>
   11b00:	ldr	r1, [r0]
   11b04:	movw	r0, #53576	; 0xd148
   11b08:	movt	r0, #2
   11b0c:	ldr	r0, [r0]
   11b10:	str	r1, [fp, #-8]
   11b14:	bl	13f6c <__assert_fail@plt+0x2fd8>
   11b18:	ldr	r1, [fp, #-4]
   11b1c:	movw	lr, #0
   11b20:	str	r0, [sp, #12]
   11b24:	mov	r0, lr
   11b28:	ldr	lr, [fp, #-8]
   11b2c:	str	r1, [sp, #8]
   11b30:	mov	r1, lr
   11b34:	movw	r2, #50243	; 0xc443
   11b38:	movt	r2, #1
   11b3c:	ldr	r3, [sp, #12]
   11b40:	ldr	ip, [sp, #8]
   11b44:	str	ip, [sp]
   11b48:	bl	10e5c <error@plt>
   11b4c:	b	11b6c <__assert_fail@plt+0xbd8>
   11b50:	bl	10ef8 <__errno_location@plt>
   11b54:	ldr	r1, [r0]
   11b58:	ldr	r3, [fp, #-4]
   11b5c:	movw	r0, #0
   11b60:	movw	r2, #50247	; 0xc447
   11b64:	movt	r2, #1
   11b68:	bl	10e5c <error@plt>
   11b6c:	movw	r0, #53472	; 0xd0e0
   11b70:	movt	r0, #2
   11b74:	ldr	r0, [r0]
   11b78:	bl	10db4 <_exit@plt>
   11b7c:	movw	r0, #53560	; 0xd138
   11b80:	movt	r0, #2
   11b84:	ldr	r0, [r0]
   11b88:	bl	199b4 <__assert_fail@plt+0x8a20>
   11b8c:	cmp	r0, #0
   11b90:	beq	11ba4 <__assert_fail@plt+0xc10>
   11b94:	movw	r0, #53472	; 0xd0e0
   11b98:	movt	r0, #2
   11b9c:	ldr	r0, [r0]
   11ba0:	bl	10db4 <_exit@plt>
   11ba4:	mov	sp, fp
   11ba8:	pop	{fp, pc}
   11bac:	push	{fp, lr}
   11bb0:	mov	fp, sp
   11bb4:	sub	sp, sp, #24
   11bb8:	str	r0, [fp, #-4]
   11bbc:	ldr	r0, [fp, #-4]
   11bc0:	movw	r1, #0
   11bc4:	cmp	r0, r1
   11bc8:	bne	11bec <__assert_fail@plt+0xc58>
   11bcc:	movw	r0, #53560	; 0xd138
   11bd0:	movt	r0, #2
   11bd4:	ldr	r1, [r0]
   11bd8:	movw	r0, #50250	; 0xc44a
   11bdc:	movt	r0, #1
   11be0:	bl	10f70 <fputs@plt>
   11be4:	str	r0, [sp, #8]
   11be8:	bl	10f88 <abort@plt>
   11bec:	ldr	r0, [fp, #-4]
   11bf0:	movw	r1, #47	; 0x2f
   11bf4:	bl	10f4c <strrchr@plt>
   11bf8:	str	r0, [fp, #-8]
   11bfc:	ldr	r0, [fp, #-8]
   11c00:	movw	r1, #0
   11c04:	cmp	r0, r1
   11c08:	beq	11c1c <__assert_fail@plt+0xc88>
   11c0c:	ldr	r0, [fp, #-8]
   11c10:	add	r0, r0, #1
   11c14:	str	r0, [sp, #4]
   11c18:	b	11c24 <__assert_fail@plt+0xc90>
   11c1c:	ldr	r0, [fp, #-4]
   11c20:	str	r0, [sp, #4]
   11c24:	ldr	r0, [sp, #4]
   11c28:	str	r0, [sp, #12]
   11c2c:	ldr	r0, [sp, #12]
   11c30:	ldr	r1, [fp, #-4]
   11c34:	sub	r0, r0, r1
   11c38:	cmp	r0, #7
   11c3c:	blt	11ca8 <__assert_fail@plt+0xd14>
   11c40:	ldr	r0, [sp, #12]
   11c44:	mvn	r1, #6
   11c48:	add	r0, r0, r1
   11c4c:	movw	r1, #50306	; 0xc482
   11c50:	movt	r1, #1
   11c54:	movw	r2, #7
   11c58:	bl	10f7c <strncmp@plt>
   11c5c:	cmp	r0, #0
   11c60:	bne	11ca8 <__assert_fail@plt+0xd14>
   11c64:	ldr	r0, [sp, #12]
   11c68:	str	r0, [fp, #-4]
   11c6c:	ldr	r0, [sp, #12]
   11c70:	movw	r1, #50314	; 0xc48a
   11c74:	movt	r1, #1
   11c78:	movw	r2, #3
   11c7c:	bl	10f7c <strncmp@plt>
   11c80:	cmp	r0, #0
   11c84:	bne	11ca4 <__assert_fail@plt+0xd10>
   11c88:	ldr	r0, [sp, #12]
   11c8c:	add	r0, r0, #3
   11c90:	str	r0, [fp, #-4]
   11c94:	ldr	r0, [fp, #-4]
   11c98:	movw	r1, #53544	; 0xd128
   11c9c:	movt	r1, #2
   11ca0:	str	r0, [r1]
   11ca4:	b	11ca8 <__assert_fail@plt+0xd14>
   11ca8:	ldr	r0, [fp, #-4]
   11cac:	movw	r1, #53584	; 0xd150
   11cb0:	movt	r1, #2
   11cb4:	str	r0, [r1]
   11cb8:	ldr	r0, [fp, #-4]
   11cbc:	movw	r1, #53548	; 0xd12c
   11cc0:	movt	r1, #2
   11cc4:	str	r0, [r1]
   11cc8:	mov	sp, fp
   11ccc:	pop	{fp, pc}
   11cd0:	push	{fp, lr}
   11cd4:	mov	fp, sp
   11cd8:	sub	sp, sp, #24
   11cdc:	str	r0, [fp, #-4]
   11ce0:	bl	10ef8 <__errno_location@plt>
   11ce4:	ldr	r0, [r0]
   11ce8:	str	r0, [fp, #-8]
   11cec:	ldr	r0, [fp, #-4]
   11cf0:	movw	lr, #0
   11cf4:	cmp	r0, lr
   11cf8:	beq	11d08 <__assert_fail@plt+0xd74>
   11cfc:	ldr	r0, [fp, #-4]
   11d00:	str	r0, [sp, #8]
   11d04:	b	11d18 <__assert_fail@plt+0xd84>
   11d08:	movw	r0, #53588	; 0xd154
   11d0c:	movt	r0, #2
   11d10:	str	r0, [sp, #8]
   11d14:	b	11d18 <__assert_fail@plt+0xd84>
   11d18:	ldr	r0, [sp, #8]
   11d1c:	movw	r1, #48	; 0x30
   11d20:	bl	17930 <__assert_fail@plt+0x699c>
   11d24:	str	r0, [sp, #12]
   11d28:	ldr	r0, [fp, #-8]
   11d2c:	str	r0, [sp, #4]
   11d30:	bl	10ef8 <__errno_location@plt>
   11d34:	ldr	r1, [sp, #4]
   11d38:	str	r1, [r0]
   11d3c:	ldr	r0, [sp, #12]
   11d40:	mov	sp, fp
   11d44:	pop	{fp, pc}
   11d48:	sub	sp, sp, #8
   11d4c:	str	r0, [sp, #4]
   11d50:	ldr	r0, [sp, #4]
   11d54:	movw	r1, #0
   11d58:	cmp	r0, r1
   11d5c:	beq	11d6c <__assert_fail@plt+0xdd8>
   11d60:	ldr	r0, [sp, #4]
   11d64:	str	r0, [sp]
   11d68:	b	11d7c <__assert_fail@plt+0xde8>
   11d6c:	movw	r0, #53588	; 0xd154
   11d70:	movt	r0, #2
   11d74:	str	r0, [sp]
   11d78:	b	11d7c <__assert_fail@plt+0xde8>
   11d7c:	ldr	r0, [sp]
   11d80:	ldr	r0, [r0]
   11d84:	add	sp, sp, #8
   11d88:	bx	lr
   11d8c:	sub	sp, sp, #16
   11d90:	str	r0, [sp, #12]
   11d94:	str	r1, [sp, #8]
   11d98:	ldr	r0, [sp, #8]
   11d9c:	ldr	r1, [sp, #12]
   11da0:	movw	r2, #0
   11da4:	cmp	r1, r2
   11da8:	str	r0, [sp, #4]
   11dac:	beq	11dbc <__assert_fail@plt+0xe28>
   11db0:	ldr	r0, [sp, #12]
   11db4:	str	r0, [sp]
   11db8:	b	11dcc <__assert_fail@plt+0xe38>
   11dbc:	movw	r0, #53588	; 0xd154
   11dc0:	movt	r0, #2
   11dc4:	str	r0, [sp]
   11dc8:	b	11dcc <__assert_fail@plt+0xe38>
   11dcc:	ldr	r0, [sp]
   11dd0:	ldr	r1, [sp, #4]
   11dd4:	str	r1, [r0]
   11dd8:	add	sp, sp, #16
   11ddc:	bx	lr
   11de0:	sub	sp, sp, #32
   11de4:	str	r0, [sp, #28]
   11de8:	strb	r1, [sp, #27]
   11dec:	str	r2, [sp, #20]
   11df0:	ldrb	r0, [sp, #27]
   11df4:	strb	r0, [sp, #19]
   11df8:	ldr	r0, [sp, #28]
   11dfc:	movw	r1, #0
   11e00:	cmp	r0, r1
   11e04:	beq	11e14 <__assert_fail@plt+0xe80>
   11e08:	ldr	r0, [sp, #28]
   11e0c:	str	r0, [sp]
   11e10:	b	11e24 <__assert_fail@plt+0xe90>
   11e14:	movw	r0, #53588	; 0xd154
   11e18:	movt	r0, #2
   11e1c:	str	r0, [sp]
   11e20:	b	11e24 <__assert_fail@plt+0xe90>
   11e24:	ldr	r0, [sp]
   11e28:	add	r0, r0, #8
   11e2c:	ldrb	r1, [sp, #19]
   11e30:	lsr	r1, r1, #5
   11e34:	add	r0, r0, r1, lsl #2
   11e38:	str	r0, [sp, #12]
   11e3c:	ldrb	r0, [sp, #19]
   11e40:	and	r0, r0, #31
   11e44:	str	r0, [sp, #8]
   11e48:	ldr	r0, [sp, #12]
   11e4c:	ldr	r0, [r0]
   11e50:	ldr	r1, [sp, #8]
   11e54:	lsr	r0, r0, r1
   11e58:	and	r0, r0, #1
   11e5c:	str	r0, [sp, #4]
   11e60:	ldr	r0, [sp, #20]
   11e64:	and	r0, r0, #1
   11e68:	ldr	r1, [sp, #4]
   11e6c:	eor	r0, r0, r1
   11e70:	ldr	r1, [sp, #8]
   11e74:	lsl	r0, r0, r1
   11e78:	ldr	r1, [sp, #12]
   11e7c:	ldr	r2, [r1]
   11e80:	eor	r0, r2, r0
   11e84:	str	r0, [r1]
   11e88:	ldr	r0, [sp, #4]
   11e8c:	add	sp, sp, #32
   11e90:	bx	lr
   11e94:	sub	sp, sp, #12
   11e98:	str	r0, [sp, #8]
   11e9c:	str	r1, [sp, #4]
   11ea0:	ldr	r0, [sp, #8]
   11ea4:	movw	r1, #0
   11ea8:	cmp	r0, r1
   11eac:	bne	11ebc <__assert_fail@plt+0xf28>
   11eb0:	movw	r0, #53588	; 0xd154
   11eb4:	movt	r0, #2
   11eb8:	str	r0, [sp, #8]
   11ebc:	ldr	r0, [sp, #8]
   11ec0:	ldr	r0, [r0, #4]
   11ec4:	str	r0, [sp]
   11ec8:	ldr	r0, [sp, #4]
   11ecc:	ldr	r1, [sp, #8]
   11ed0:	str	r0, [r1, #4]
   11ed4:	ldr	r0, [sp]
   11ed8:	add	sp, sp, #12
   11edc:	bx	lr
   11ee0:	push	{fp, lr}
   11ee4:	mov	fp, sp
   11ee8:	sub	sp, sp, #16
   11eec:	str	r0, [fp, #-4]
   11ef0:	str	r1, [sp, #8]
   11ef4:	str	r2, [sp, #4]
   11ef8:	ldr	r0, [fp, #-4]
   11efc:	movw	r1, #0
   11f00:	cmp	r0, r1
   11f04:	bne	11f14 <__assert_fail@plt+0xf80>
   11f08:	movw	r0, #53588	; 0xd154
   11f0c:	movt	r0, #2
   11f10:	str	r0, [fp, #-4]
   11f14:	ldr	r0, [fp, #-4]
   11f18:	movw	r1, #10
   11f1c:	str	r1, [r0]
   11f20:	ldr	r0, [sp, #8]
   11f24:	movw	r1, #0
   11f28:	cmp	r0, r1
   11f2c:	beq	11f40 <__assert_fail@plt+0xfac>
   11f30:	ldr	r0, [sp, #4]
   11f34:	movw	r1, #0
   11f38:	cmp	r0, r1
   11f3c:	bne	11f44 <__assert_fail@plt+0xfb0>
   11f40:	bl	10f88 <abort@plt>
   11f44:	ldr	r0, [sp, #8]
   11f48:	ldr	r1, [fp, #-4]
   11f4c:	str	r0, [r1, #40]	; 0x28
   11f50:	ldr	r0, [sp, #4]
   11f54:	ldr	r1, [fp, #-4]
   11f58:	str	r0, [r1, #44]	; 0x2c
   11f5c:	mov	sp, fp
   11f60:	pop	{fp, pc}
   11f64:	push	{r4, r5, r6, sl, fp, lr}
   11f68:	add	fp, sp, #16
   11f6c:	sub	sp, sp, #64	; 0x40
   11f70:	ldr	ip, [fp, #8]
   11f74:	str	r0, [fp, #-20]	; 0xffffffec
   11f78:	str	r1, [fp, #-24]	; 0xffffffe8
   11f7c:	str	r2, [fp, #-28]	; 0xffffffe4
   11f80:	str	r3, [fp, #-32]	; 0xffffffe0
   11f84:	ldr	r0, [fp, #8]
   11f88:	movw	r1, #0
   11f8c:	cmp	r0, r1
   11f90:	str	ip, [sp, #32]
   11f94:	beq	11fa4 <__assert_fail@plt+0x1010>
   11f98:	ldr	r0, [fp, #8]
   11f9c:	str	r0, [sp, #28]
   11fa0:	b	11fb4 <__assert_fail@plt+0x1020>
   11fa4:	movw	r0, #53588	; 0xd154
   11fa8:	movt	r0, #2
   11fac:	str	r0, [sp, #28]
   11fb0:	b	11fb4 <__assert_fail@plt+0x1020>
   11fb4:	ldr	r0, [sp, #28]
   11fb8:	str	r0, [fp, #-36]	; 0xffffffdc
   11fbc:	bl	10ef8 <__errno_location@plt>
   11fc0:	ldr	r0, [r0]
   11fc4:	str	r0, [sp, #40]	; 0x28
   11fc8:	ldr	r0, [fp, #-20]	; 0xffffffec
   11fcc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11fd0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11fd4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11fd8:	ldr	lr, [fp, #-36]	; 0xffffffdc
   11fdc:	ldr	lr, [lr]
   11fe0:	ldr	ip, [fp, #-36]	; 0xffffffdc
   11fe4:	ldr	ip, [ip, #4]
   11fe8:	ldr	r4, [fp, #-36]	; 0xffffffdc
   11fec:	add	r4, r4, #8
   11ff0:	ldr	r5, [fp, #-36]	; 0xffffffdc
   11ff4:	ldr	r5, [r5, #40]	; 0x28
   11ff8:	ldr	r6, [fp, #-36]	; 0xffffffdc
   11ffc:	ldr	r6, [r6, #44]	; 0x2c
   12000:	str	lr, [sp]
   12004:	str	ip, [sp, #4]
   12008:	str	r4, [sp, #8]
   1200c:	str	r5, [sp, #12]
   12010:	str	r6, [sp, #16]
   12014:	bl	1203c <__assert_fail@plt+0x10a8>
   12018:	str	r0, [sp, #36]	; 0x24
   1201c:	ldr	r0, [sp, #40]	; 0x28
   12020:	str	r0, [sp, #24]
   12024:	bl	10ef8 <__errno_location@plt>
   12028:	ldr	r1, [sp, #24]
   1202c:	str	r1, [r0]
   12030:	ldr	r0, [sp, #36]	; 0x24
   12034:	sub	sp, fp, #16
   12038:	pop	{r4, r5, r6, sl, fp, pc}
   1203c:	push	{r4, r5, r6, sl, fp, lr}
   12040:	add	fp, sp, #16
   12044:	sub	sp, sp, #168	; 0xa8
   12048:	ldr	ip, [fp, #24]
   1204c:	ldr	lr, [fp, #20]
   12050:	ldr	r4, [fp, #16]
   12054:	ldr	r5, [fp, #12]
   12058:	ldr	r6, [fp, #8]
   1205c:	str	r0, [fp, #-24]	; 0xffffffe8
   12060:	str	r1, [fp, #-28]	; 0xffffffe4
   12064:	str	r2, [fp, #-32]	; 0xffffffe0
   12068:	str	r3, [fp, #-36]	; 0xffffffdc
   1206c:	movw	r0, #0
   12070:	str	r0, [fp, #-44]	; 0xffffffd4
   12074:	str	r0, [fp, #-48]	; 0xffffffd0
   12078:	str	r0, [fp, #-52]	; 0xffffffcc
   1207c:	str	r0, [fp, #-56]	; 0xffffffc8
   12080:	movw	r0, #0
   12084:	strb	r0, [fp, #-57]	; 0xffffffc7
   12088:	str	r6, [sp, #80]	; 0x50
   1208c:	str	lr, [sp, #76]	; 0x4c
   12090:	str	r4, [sp, #72]	; 0x48
   12094:	str	r5, [sp, #68]	; 0x44
   12098:	str	ip, [sp, #64]	; 0x40
   1209c:	bl	10e2c <__ctype_get_mb_cur_max@plt>
   120a0:	cmp	r0, #1
   120a4:	movw	r0, #0
   120a8:	moveq	r0, #1
   120ac:	and	r0, r0, #1
   120b0:	strb	r0, [fp, #-58]	; 0xffffffc6
   120b4:	ldr	r0, [fp, #12]
   120b8:	and	r0, r0, #2
   120bc:	cmp	r0, #0
   120c0:	movw	r0, #0
   120c4:	movne	r0, #1
   120c8:	and	r0, r0, #1
   120cc:	strb	r0, [fp, #-59]	; 0xffffffc5
   120d0:	movw	r0, #0
   120d4:	strb	r0, [fp, #-60]	; 0xffffffc4
   120d8:	strb	r0, [fp, #-61]	; 0xffffffc3
   120dc:	movw	r0, #1
   120e0:	strb	r0, [fp, #-62]	; 0xffffffc2
   120e4:	ldr	r0, [fp, #8]
   120e8:	cmp	r0, #10
   120ec:	str	r0, [sp, #60]	; 0x3c
   120f0:	bhi	12318 <__assert_fail@plt+0x1384>
   120f4:	add	r0, pc, #8
   120f8:	ldr	r1, [sp, #60]	; 0x3c
   120fc:	ldr	r0, [r0, r1, lsl #2]
   12100:	mov	pc, r0
   12104:	andeq	r2, r1, ip, lsl #6
   12108:	andeq	r2, r1, r8, lsl #5
   1210c:	andeq	r2, r1, r8, lsr #5
   12110:	andeq	r2, r1, r0, lsl #5
   12114:	muleq	r1, r0, r2
   12118:	andeq	r2, r1, r0, asr #2
   1211c:	andeq	r2, r1, r0, lsr r1
   12120:	andeq	r2, r1, r4, lsr #3
   12124:			; <UNDEFINED> instruction: 0x000121b8
   12128:			; <UNDEFINED> instruction: 0x000121b8
   1212c:			; <UNDEFINED> instruction: 0x000121b8
   12130:	movw	r0, #5
   12134:	str	r0, [fp, #8]
   12138:	movw	r0, #1
   1213c:	strb	r0, [fp, #-59]	; 0xffffffc5
   12140:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12144:	tst	r0, #1
   12148:	bne	12184 <__assert_fail@plt+0x11f0>
   1214c:	b	12150 <__assert_fail@plt+0x11bc>
   12150:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12154:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12158:	cmp	r0, r1
   1215c:	bcs	12174 <__assert_fail@plt+0x11e0>
   12160:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12164:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12168:	add	r0, r0, r1
   1216c:	movw	r1, #34	; 0x22
   12170:	strb	r1, [r0]
   12174:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12178:	add	r0, r0, #1
   1217c:	str	r0, [fp, #-44]	; 0xffffffd4
   12180:	b	12184 <__assert_fail@plt+0x11f0>
   12184:	movw	r0, #1
   12188:	strb	r0, [fp, #-57]	; 0xffffffc7
   1218c:	movw	r0, #50394	; 0xc4da
   12190:	movt	r0, #1
   12194:	str	r0, [fp, #-52]	; 0xffffffcc
   12198:	movw	r0, #1
   1219c:	str	r0, [fp, #-56]	; 0xffffffc8
   121a0:	b	1231c <__assert_fail@plt+0x1388>
   121a4:	movw	r0, #1
   121a8:	strb	r0, [fp, #-57]	; 0xffffffc7
   121ac:	movw	r0, #0
   121b0:	strb	r0, [fp, #-59]	; 0xffffffc5
   121b4:	b	1231c <__assert_fail@plt+0x1388>
   121b8:	ldr	r0, [fp, #8]
   121bc:	cmp	r0, #10
   121c0:	beq	121ec <__assert_fail@plt+0x1258>
   121c4:	ldr	r1, [fp, #8]
   121c8:	movw	r0, #50396	; 0xc4dc
   121cc:	movt	r0, #1
   121d0:	bl	1422c <__assert_fail@plt+0x3298>
   121d4:	str	r0, [fp, #20]
   121d8:	ldr	r1, [fp, #8]
   121dc:	movw	r0, #50398	; 0xc4de
   121e0:	movt	r0, #1
   121e4:	bl	1422c <__assert_fail@plt+0x3298>
   121e8:	str	r0, [fp, #24]
   121ec:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   121f0:	tst	r0, #1
   121f4:	bne	12260 <__assert_fail@plt+0x12cc>
   121f8:	ldr	r0, [fp, #20]
   121fc:	str	r0, [fp, #-52]	; 0xffffffcc
   12200:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12204:	ldrsb	r0, [r0]
   12208:	cmp	r0, #0
   1220c:	beq	1225c <__assert_fail@plt+0x12c8>
   12210:	b	12214 <__assert_fail@plt+0x1280>
   12214:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12218:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1221c:	cmp	r0, r1
   12220:	bcs	1223c <__assert_fail@plt+0x12a8>
   12224:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12228:	ldrb	r0, [r0]
   1222c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12230:	ldr	r2, [fp, #-44]	; 0xffffffd4
   12234:	add	r1, r1, r2
   12238:	strb	r0, [r1]
   1223c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12240:	add	r0, r0, #1
   12244:	str	r0, [fp, #-44]	; 0xffffffd4
   12248:	b	1224c <__assert_fail@plt+0x12b8>
   1224c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12250:	add	r0, r0, #1
   12254:	str	r0, [fp, #-52]	; 0xffffffcc
   12258:	b	12200 <__assert_fail@plt+0x126c>
   1225c:	b	12260 <__assert_fail@plt+0x12cc>
   12260:	movw	r0, #1
   12264:	strb	r0, [fp, #-57]	; 0xffffffc7
   12268:	ldr	r0, [fp, #24]
   1226c:	str	r0, [fp, #-52]	; 0xffffffcc
   12270:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12274:	bl	10ed4 <strlen@plt>
   12278:	str	r0, [fp, #-56]	; 0xffffffc8
   1227c:	b	1231c <__assert_fail@plt+0x1388>
   12280:	movw	r0, #1
   12284:	strb	r0, [fp, #-57]	; 0xffffffc7
   12288:	movw	r0, #1
   1228c:	strb	r0, [fp, #-59]	; 0xffffffc5
   12290:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12294:	tst	r0, #1
   12298:	bne	122a4 <__assert_fail@plt+0x1310>
   1229c:	movw	r0, #1
   122a0:	strb	r0, [fp, #-57]	; 0xffffffc7
   122a4:	b	122a8 <__assert_fail@plt+0x1314>
   122a8:	movw	r0, #2
   122ac:	str	r0, [fp, #8]
   122b0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   122b4:	tst	r0, #1
   122b8:	bne	122f4 <__assert_fail@plt+0x1360>
   122bc:	b	122c0 <__assert_fail@plt+0x132c>
   122c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   122c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   122c8:	cmp	r0, r1
   122cc:	bcs	122e4 <__assert_fail@plt+0x1350>
   122d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   122d4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   122d8:	add	r0, r0, r1
   122dc:	movw	r1, #39	; 0x27
   122e0:	strb	r1, [r0]
   122e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   122e8:	add	r0, r0, #1
   122ec:	str	r0, [fp, #-44]	; 0xffffffd4
   122f0:	b	122f4 <__assert_fail@plt+0x1360>
   122f4:	movw	r0, #50398	; 0xc4de
   122f8:	movt	r0, #1
   122fc:	str	r0, [fp, #-52]	; 0xffffffcc
   12300:	movw	r0, #1
   12304:	str	r0, [fp, #-56]	; 0xffffffc8
   12308:	b	1231c <__assert_fail@plt+0x1388>
   1230c:	movw	r0, #0
   12310:	strb	r0, [fp, #-59]	; 0xffffffc5
   12314:	b	1231c <__assert_fail@plt+0x1388>
   12318:	bl	10f88 <abort@plt>
   1231c:	movw	r0, #0
   12320:	str	r0, [fp, #-40]	; 0xffffffd8
   12324:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12328:	cmn	r0, #1
   1232c:	bne	12358 <__assert_fail@plt+0x13c4>
   12330:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12334:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12338:	add	r0, r0, r1
   1233c:	ldrb	r0, [r0]
   12340:	cmp	r0, #0
   12344:	movw	r0, #0
   12348:	moveq	r0, #1
   1234c:	and	r0, r0, #1
   12350:	str	r0, [sp, #56]	; 0x38
   12354:	b	12374 <__assert_fail@plt+0x13e0>
   12358:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1235c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12360:	cmp	r0, r1
   12364:	movw	r0, #0
   12368:	moveq	r0, #1
   1236c:	and	r0, r0, #1
   12370:	str	r0, [sp, #56]	; 0x38
   12374:	ldr	r0, [sp, #56]	; 0x38
   12378:	cmp	r0, #0
   1237c:	movw	r0, #0
   12380:	movne	r0, #1
   12384:	mvn	r1, #0
   12388:	eor	r0, r0, r1
   1238c:	tst	r0, #1
   12390:	beq	13580 <__assert_fail@plt+0x25ec>
   12394:	movw	r0, #0
   12398:	strb	r0, [fp, #-65]	; 0xffffffbf
   1239c:	strb	r0, [fp, #-66]	; 0xffffffbe
   123a0:	strb	r0, [fp, #-67]	; 0xffffffbd
   123a4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   123a8:	tst	r0, #1
   123ac:	beq	12458 <__assert_fail@plt+0x14c4>
   123b0:	ldr	r0, [fp, #8]
   123b4:	cmp	r0, #2
   123b8:	beq	12458 <__assert_fail@plt+0x14c4>
   123bc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   123c0:	cmp	r0, #0
   123c4:	beq	12458 <__assert_fail@plt+0x14c4>
   123c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   123cc:	ldr	r1, [fp, #-56]	; 0xffffffc8
   123d0:	add	r0, r0, r1
   123d4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   123d8:	cmn	r1, #1
   123dc:	str	r0, [sp, #52]	; 0x34
   123e0:	bne	12408 <__assert_fail@plt+0x1474>
   123e4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   123e8:	movw	r1, #1
   123ec:	cmp	r1, r0
   123f0:	bcs	12408 <__assert_fail@plt+0x1474>
   123f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   123f8:	bl	10ed4 <strlen@plt>
   123fc:	str	r0, [fp, #-36]	; 0xffffffdc
   12400:	str	r0, [sp, #48]	; 0x30
   12404:	b	12410 <__assert_fail@plt+0x147c>
   12408:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1240c:	str	r0, [sp, #48]	; 0x30
   12410:	ldr	r0, [sp, #48]	; 0x30
   12414:	ldr	r1, [sp, #52]	; 0x34
   12418:	cmp	r1, r0
   1241c:	bhi	12458 <__assert_fail@plt+0x14c4>
   12420:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12424:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12428:	add	r0, r0, r1
   1242c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12430:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12434:	bl	10de4 <memcmp@plt>
   12438:	cmp	r0, #0
   1243c:	bne	12458 <__assert_fail@plt+0x14c4>
   12440:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12444:	tst	r0, #1
   12448:	beq	12450 <__assert_fail@plt+0x14bc>
   1244c:	b	13700 <__assert_fail@plt+0x276c>
   12450:	movw	r0, #1
   12454:	strb	r0, [fp, #-65]	; 0xffffffbf
   12458:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1245c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12460:	ldrb	r0, [r0, r1]
   12464:	strb	r0, [fp, #-63]	; 0xffffffc1
   12468:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1246c:	mov	r1, r0
   12470:	cmp	r0, #126	; 0x7e
   12474:	str	r1, [sp, #44]	; 0x2c
   12478:	bhi	12ce8 <__assert_fail@plt+0x1d54>
   1247c:	add	r0, pc, #8
   12480:	ldr	r1, [sp, #44]	; 0x2c
   12484:	ldr	r0, [r0, r1, lsl #2]
   12488:	mov	pc, r0
   1248c:	andeq	r2, r1, r8, lsl #13
   12490:	andeq	r2, r1, r8, ror #25
   12494:	andeq	r2, r1, r8, ror #25
   12498:	andeq	r2, r1, r8, ror #25
   1249c:	andeq	r2, r1, r8, ror #25
   124a0:	andeq	r2, r1, r8, ror #25
   124a4:	andeq	r2, r1, r8, ror #25
   124a8:	muleq	r1, r0, sl
   124ac:	muleq	r1, ip, sl
   124b0:	andeq	r2, r1, ip, asr #21
   124b4:			; <UNDEFINED> instruction: 0x00012ab4
   124b8:	ldrdeq	r2, [r1], -r8
   124bc:	andeq	r2, r1, r8, lsr #21
   124c0:	andeq	r2, r1, r0, asr #21
   124c4:	andeq	r2, r1, r8, ror #25
   124c8:	andeq	r2, r1, r8, ror #25
   124cc:	andeq	r2, r1, r8, ror #25
   124d0:	andeq	r2, r1, r8, ror #25
   124d4:	andeq	r2, r1, r8, ror #25
   124d8:	andeq	r2, r1, r8, ror #25
   124dc:	andeq	r2, r1, r8, ror #25
   124e0:	andeq	r2, r1, r8, ror #25
   124e4:	andeq	r2, r1, r8, ror #25
   124e8:	andeq	r2, r1, r8, ror #25
   124ec:	andeq	r2, r1, r8, ror #25
   124f0:	andeq	r2, r1, r8, ror #25
   124f4:	andeq	r2, r1, r8, ror #25
   124f8:	andeq	r2, r1, r8, ror #25
   124fc:	andeq	r2, r1, r8, ror #25
   12500:	andeq	r2, r1, r8, ror #25
   12504:	andeq	r2, r1, r8, ror #25
   12508:	andeq	r2, r1, r8, ror #25
   1250c:			; <UNDEFINED> instruction: 0x00012bbc
   12510:	andeq	r2, r1, r4, asr #23
   12514:	andeq	r2, r1, r4, asr #23
   12518:	andeq	r2, r1, r8, lsr #23
   1251c:	andeq	r2, r1, r4, asr #23
   12520:	ldrdeq	r2, [r1], -ip
   12524:	andeq	r2, r1, r4, asr #23
   12528:	andeq	r2, r1, r4, ror #23
   1252c:	andeq	r2, r1, r4, asr #23
   12530:	andeq	r2, r1, r4, asr #23
   12534:	andeq	r2, r1, r4, asr #23
   12538:	ldrdeq	r2, [r1], -ip
   1253c:	ldrdeq	r2, [r1], -ip
   12540:	ldrdeq	r2, [r1], -ip
   12544:	ldrdeq	r2, [r1], -ip
   12548:	ldrdeq	r2, [r1], -ip
   1254c:	ldrdeq	r2, [r1], -ip
   12550:	ldrdeq	r2, [r1], -ip
   12554:	ldrdeq	r2, [r1], -ip
   12558:	ldrdeq	r2, [r1], -ip
   1255c:	ldrdeq	r2, [r1], -ip
   12560:	ldrdeq	r2, [r1], -ip
   12564:	ldrdeq	r2, [r1], -ip
   12568:	ldrdeq	r2, [r1], -ip
   1256c:	ldrdeq	r2, [r1], -ip
   12570:	ldrdeq	r2, [r1], -ip
   12574:	ldrdeq	r2, [r1], -ip
   12578:	andeq	r2, r1, r4, asr #23
   1257c:	andeq	r2, r1, r4, asr #23
   12580:	andeq	r2, r1, r4, asr #23
   12584:	andeq	r2, r1, r4, asr #23
   12588:	muleq	r1, r4, r8
   1258c:	andeq	r2, r1, r8, ror #25
   12590:	ldrdeq	r2, [r1], -ip
   12594:	ldrdeq	r2, [r1], -ip
   12598:	ldrdeq	r2, [r1], -ip
   1259c:	ldrdeq	r2, [r1], -ip
   125a0:	ldrdeq	r2, [r1], -ip
   125a4:	ldrdeq	r2, [r1], -ip
   125a8:	ldrdeq	r2, [r1], -ip
   125ac:	ldrdeq	r2, [r1], -ip
   125b0:	ldrdeq	r2, [r1], -ip
   125b4:	ldrdeq	r2, [r1], -ip
   125b8:	ldrdeq	r2, [r1], -ip
   125bc:	ldrdeq	r2, [r1], -ip
   125c0:	ldrdeq	r2, [r1], -ip
   125c4:	ldrdeq	r2, [r1], -ip
   125c8:	ldrdeq	r2, [r1], -ip
   125cc:	ldrdeq	r2, [r1], -ip
   125d0:	ldrdeq	r2, [r1], -ip
   125d4:	ldrdeq	r2, [r1], -ip
   125d8:	ldrdeq	r2, [r1], -ip
   125dc:	ldrdeq	r2, [r1], -ip
   125e0:	ldrdeq	r2, [r1], -ip
   125e4:	ldrdeq	r2, [r1], -ip
   125e8:	ldrdeq	r2, [r1], -ip
   125ec:	ldrdeq	r2, [r1], -ip
   125f0:	ldrdeq	r2, [r1], -ip
   125f4:	ldrdeq	r2, [r1], -ip
   125f8:	andeq	r2, r1, r4, asr #23
   125fc:	andeq	r2, r1, r4, ror #21
   12600:	ldrdeq	r2, [r1], -ip
   12604:	andeq	r2, r1, r4, asr #23
   12608:	ldrdeq	r2, [r1], -ip
   1260c:	andeq	r2, r1, r4, asr #23
   12610:	ldrdeq	r2, [r1], -ip
   12614:	ldrdeq	r2, [r1], -ip
   12618:	ldrdeq	r2, [r1], -ip
   1261c:	ldrdeq	r2, [r1], -ip
   12620:	ldrdeq	r2, [r1], -ip
   12624:	ldrdeq	r2, [r1], -ip
   12628:	ldrdeq	r2, [r1], -ip
   1262c:	ldrdeq	r2, [r1], -ip
   12630:	ldrdeq	r2, [r1], -ip
   12634:	ldrdeq	r2, [r1], -ip
   12638:	ldrdeq	r2, [r1], -ip
   1263c:	ldrdeq	r2, [r1], -ip
   12640:	ldrdeq	r2, [r1], -ip
   12644:	ldrdeq	r2, [r1], -ip
   12648:	ldrdeq	r2, [r1], -ip
   1264c:	ldrdeq	r2, [r1], -ip
   12650:	ldrdeq	r2, [r1], -ip
   12654:	ldrdeq	r2, [r1], -ip
   12658:	ldrdeq	r2, [r1], -ip
   1265c:	ldrdeq	r2, [r1], -ip
   12660:	ldrdeq	r2, [r1], -ip
   12664:	ldrdeq	r2, [r1], -ip
   12668:	ldrdeq	r2, [r1], -ip
   1266c:	ldrdeq	r2, [r1], -ip
   12670:	ldrdeq	r2, [r1], -ip
   12674:	ldrdeq	r2, [r1], -ip
   12678:	andeq	r2, r1, r4, ror fp
   1267c:	andeq	r2, r1, r4, asr #23
   12680:	andeq	r2, r1, r4, ror fp
   12684:	andeq	r2, r1, r8, lsr #23
   12688:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1268c:	tst	r0, #1
   12690:	beq	12878 <__assert_fail@plt+0x18e4>
   12694:	b	12698 <__assert_fail@plt+0x1704>
   12698:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1269c:	tst	r0, #1
   126a0:	beq	126a8 <__assert_fail@plt+0x1714>
   126a4:	b	13700 <__assert_fail@plt+0x276c>
   126a8:	movw	r0, #1
   126ac:	strb	r0, [fp, #-66]	; 0xffffffbe
   126b0:	ldr	r0, [fp, #8]
   126b4:	cmp	r0, #2
   126b8:	bne	1276c <__assert_fail@plt+0x17d8>
   126bc:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   126c0:	tst	r0, #1
   126c4:	bne	1276c <__assert_fail@plt+0x17d8>
   126c8:	b	126cc <__assert_fail@plt+0x1738>
   126cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   126d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   126d4:	cmp	r0, r1
   126d8:	bcs	126f0 <__assert_fail@plt+0x175c>
   126dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   126e0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   126e4:	add	r0, r0, r1
   126e8:	movw	r1, #39	; 0x27
   126ec:	strb	r1, [r0]
   126f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   126f4:	add	r0, r0, #1
   126f8:	str	r0, [fp, #-44]	; 0xffffffd4
   126fc:	b	12700 <__assert_fail@plt+0x176c>
   12700:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12704:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12708:	cmp	r0, r1
   1270c:	bcs	12724 <__assert_fail@plt+0x1790>
   12710:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12714:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12718:	add	r0, r0, r1
   1271c:	movw	r1, #36	; 0x24
   12720:	strb	r1, [r0]
   12724:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12728:	add	r0, r0, #1
   1272c:	str	r0, [fp, #-44]	; 0xffffffd4
   12730:	b	12734 <__assert_fail@plt+0x17a0>
   12734:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12738:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1273c:	cmp	r0, r1
   12740:	bcs	12758 <__assert_fail@plt+0x17c4>
   12744:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12748:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1274c:	add	r0, r0, r1
   12750:	movw	r1, #39	; 0x27
   12754:	strb	r1, [r0]
   12758:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1275c:	add	r0, r0, #1
   12760:	str	r0, [fp, #-44]	; 0xffffffd4
   12764:	movw	r0, #1
   12768:	strb	r0, [fp, #-60]	; 0xffffffc4
   1276c:	b	12770 <__assert_fail@plt+0x17dc>
   12770:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12774:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12778:	cmp	r0, r1
   1277c:	bcs	12794 <__assert_fail@plt+0x1800>
   12780:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12784:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12788:	add	r0, r0, r1
   1278c:	movw	r1, #92	; 0x5c
   12790:	strb	r1, [r0]
   12794:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12798:	add	r0, r0, #1
   1279c:	str	r0, [fp, #-44]	; 0xffffffd4
   127a0:	b	127a4 <__assert_fail@plt+0x1810>
   127a4:	ldr	r0, [fp, #8]
   127a8:	cmp	r0, #2
   127ac:	beq	1286c <__assert_fail@plt+0x18d8>
   127b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   127b4:	add	r0, r0, #1
   127b8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   127bc:	cmp	r0, r1
   127c0:	bcs	1286c <__assert_fail@plt+0x18d8>
   127c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   127c8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   127cc:	add	r1, r1, #1
   127d0:	add	r0, r0, r1
   127d4:	ldrb	r0, [r0]
   127d8:	movw	r1, #48	; 0x30
   127dc:	cmp	r1, r0
   127e0:	bgt	1286c <__assert_fail@plt+0x18d8>
   127e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   127e8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   127ec:	add	r1, r1, #1
   127f0:	add	r0, r0, r1
   127f4:	ldrb	r0, [r0]
   127f8:	cmp	r0, #57	; 0x39
   127fc:	bgt	1286c <__assert_fail@plt+0x18d8>
   12800:	b	12804 <__assert_fail@plt+0x1870>
   12804:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12808:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1280c:	cmp	r0, r1
   12810:	bcs	12828 <__assert_fail@plt+0x1894>
   12814:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12818:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1281c:	add	r0, r0, r1
   12820:	movw	r1, #48	; 0x30
   12824:	strb	r1, [r0]
   12828:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1282c:	add	r0, r0, #1
   12830:	str	r0, [fp, #-44]	; 0xffffffd4
   12834:	b	12838 <__assert_fail@plt+0x18a4>
   12838:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1283c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12840:	cmp	r0, r1
   12844:	bcs	1285c <__assert_fail@plt+0x18c8>
   12848:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1284c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12850:	add	r0, r0, r1
   12854:	movw	r1, #48	; 0x30
   12858:	strb	r1, [r0]
   1285c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12860:	add	r0, r0, #1
   12864:	str	r0, [fp, #-44]	; 0xffffffd4
   12868:	b	1286c <__assert_fail@plt+0x18d8>
   1286c:	movw	r0, #48	; 0x30
   12870:	strb	r0, [fp, #-63]	; 0xffffffc1
   12874:	b	12890 <__assert_fail@plt+0x18fc>
   12878:	ldr	r0, [fp, #12]
   1287c:	and	r0, r0, #1
   12880:	cmp	r0, #0
   12884:	beq	1288c <__assert_fail@plt+0x18f8>
   12888:	b	13570 <__assert_fail@plt+0x25dc>
   1288c:	b	12890 <__assert_fail@plt+0x18fc>
   12890:	b	1330c <__assert_fail@plt+0x2378>
   12894:	ldr	r0, [fp, #8]
   12898:	cmp	r0, #2
   1289c:	str	r0, [sp, #40]	; 0x28
   128a0:	beq	128b8 <__assert_fail@plt+0x1924>
   128a4:	b	128a8 <__assert_fail@plt+0x1914>
   128a8:	ldr	r0, [sp, #40]	; 0x28
   128ac:	cmp	r0, #5
   128b0:	beq	128cc <__assert_fail@plt+0x1938>
   128b4:	b	12a88 <__assert_fail@plt+0x1af4>
   128b8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   128bc:	tst	r0, #1
   128c0:	beq	128c8 <__assert_fail@plt+0x1934>
   128c4:	b	13700 <__assert_fail@plt+0x276c>
   128c8:	b	12a8c <__assert_fail@plt+0x1af8>
   128cc:	ldr	r0, [fp, #12]
   128d0:	and	r0, r0, #4
   128d4:	cmp	r0, #0
   128d8:	beq	12a84 <__assert_fail@plt+0x1af0>
   128dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   128e0:	add	r0, r0, #2
   128e4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   128e8:	cmp	r0, r1
   128ec:	bcs	12a84 <__assert_fail@plt+0x1af0>
   128f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   128f4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   128f8:	add	r1, r1, #1
   128fc:	add	r0, r0, r1
   12900:	ldrb	r0, [r0]
   12904:	cmp	r0, #63	; 0x3f
   12908:	bne	12a84 <__assert_fail@plt+0x1af0>
   1290c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12910:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12914:	add	r0, r0, r1
   12918:	ldrb	r0, [r0, #2]
   1291c:	mov	r1, r0
   12920:	cmp	r0, #33	; 0x21
   12924:	str	r1, [sp, #36]	; 0x24
   12928:	beq	12978 <__assert_fail@plt+0x19e4>
   1292c:	b	12930 <__assert_fail@plt+0x199c>
   12930:	ldr	r0, [sp, #36]	; 0x24
   12934:	sub	r1, r0, #39	; 0x27
   12938:	cmp	r1, #3
   1293c:	bcc	12978 <__assert_fail@plt+0x19e4>
   12940:	b	12944 <__assert_fail@plt+0x19b0>
   12944:	ldr	r0, [sp, #36]	; 0x24
   12948:	cmp	r0, #45	; 0x2d
   1294c:	beq	12978 <__assert_fail@plt+0x19e4>
   12950:	b	12954 <__assert_fail@plt+0x19c0>
   12954:	ldr	r0, [sp, #36]	; 0x24
   12958:	cmp	r0, #47	; 0x2f
   1295c:	beq	12978 <__assert_fail@plt+0x19e4>
   12960:	b	12964 <__assert_fail@plt+0x19d0>
   12964:	ldr	r0, [sp, #36]	; 0x24
   12968:	sub	r1, r0, #60	; 0x3c
   1296c:	cmp	r1, #2
   12970:	bhi	12a7c <__assert_fail@plt+0x1ae8>
   12974:	b	12978 <__assert_fail@plt+0x19e4>
   12978:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1297c:	tst	r0, #1
   12980:	beq	12988 <__assert_fail@plt+0x19f4>
   12984:	b	13700 <__assert_fail@plt+0x276c>
   12988:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1298c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12990:	add	r1, r1, #2
   12994:	add	r0, r0, r1
   12998:	ldrb	r0, [r0]
   1299c:	strb	r0, [fp, #-63]	; 0xffffffc1
   129a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   129a4:	add	r0, r0, #2
   129a8:	str	r0, [fp, #-40]	; 0xffffffd8
   129ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   129b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   129b4:	cmp	r0, r1
   129b8:	bcs	129d0 <__assert_fail@plt+0x1a3c>
   129bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   129c0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   129c4:	add	r0, r0, r1
   129c8:	movw	r1, #63	; 0x3f
   129cc:	strb	r1, [r0]
   129d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   129d4:	add	r0, r0, #1
   129d8:	str	r0, [fp, #-44]	; 0xffffffd4
   129dc:	b	129e0 <__assert_fail@plt+0x1a4c>
   129e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   129e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   129e8:	cmp	r0, r1
   129ec:	bcs	12a04 <__assert_fail@plt+0x1a70>
   129f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   129f4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   129f8:	add	r0, r0, r1
   129fc:	movw	r1, #34	; 0x22
   12a00:	strb	r1, [r0]
   12a04:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12a08:	add	r0, r0, #1
   12a0c:	str	r0, [fp, #-44]	; 0xffffffd4
   12a10:	b	12a14 <__assert_fail@plt+0x1a80>
   12a14:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12a18:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12a1c:	cmp	r0, r1
   12a20:	bcs	12a38 <__assert_fail@plt+0x1aa4>
   12a24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12a28:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12a2c:	add	r0, r0, r1
   12a30:	movw	r1, #34	; 0x22
   12a34:	strb	r1, [r0]
   12a38:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12a3c:	add	r0, r0, #1
   12a40:	str	r0, [fp, #-44]	; 0xffffffd4
   12a44:	b	12a48 <__assert_fail@plt+0x1ab4>
   12a48:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12a4c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12a50:	cmp	r0, r1
   12a54:	bcs	12a6c <__assert_fail@plt+0x1ad8>
   12a58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12a5c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12a60:	add	r0, r0, r1
   12a64:	movw	r1, #63	; 0x3f
   12a68:	strb	r1, [r0]
   12a6c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12a70:	add	r0, r0, #1
   12a74:	str	r0, [fp, #-44]	; 0xffffffd4
   12a78:	b	12a80 <__assert_fail@plt+0x1aec>
   12a7c:	b	12a80 <__assert_fail@plt+0x1aec>
   12a80:	b	12a84 <__assert_fail@plt+0x1af0>
   12a84:	b	12a8c <__assert_fail@plt+0x1af8>
   12a88:	b	12a8c <__assert_fail@plt+0x1af8>
   12a8c:	b	1330c <__assert_fail@plt+0x2378>
   12a90:	movw	r0, #97	; 0x61
   12a94:	strb	r0, [fp, #-64]	; 0xffffffc0
   12a98:	b	12b58 <__assert_fail@plt+0x1bc4>
   12a9c:	movw	r0, #98	; 0x62
   12aa0:	strb	r0, [fp, #-64]	; 0xffffffc0
   12aa4:	b	12b58 <__assert_fail@plt+0x1bc4>
   12aa8:	movw	r0, #102	; 0x66
   12aac:	strb	r0, [fp, #-64]	; 0xffffffc0
   12ab0:	b	12b58 <__assert_fail@plt+0x1bc4>
   12ab4:	movw	r0, #110	; 0x6e
   12ab8:	strb	r0, [fp, #-64]	; 0xffffffc0
   12abc:	b	12b38 <__assert_fail@plt+0x1ba4>
   12ac0:	movw	r0, #114	; 0x72
   12ac4:	strb	r0, [fp, #-64]	; 0xffffffc0
   12ac8:	b	12b38 <__assert_fail@plt+0x1ba4>
   12acc:	movw	r0, #116	; 0x74
   12ad0:	strb	r0, [fp, #-64]	; 0xffffffc0
   12ad4:	b	12b38 <__assert_fail@plt+0x1ba4>
   12ad8:	movw	r0, #118	; 0x76
   12adc:	strb	r0, [fp, #-64]	; 0xffffffc0
   12ae0:	b	12b58 <__assert_fail@plt+0x1bc4>
   12ae4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   12ae8:	strb	r0, [fp, #-64]	; 0xffffffc0
   12aec:	ldr	r0, [fp, #8]
   12af0:	cmp	r0, #2
   12af4:	bne	12b0c <__assert_fail@plt+0x1b78>
   12af8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12afc:	tst	r0, #1
   12b00:	beq	12b08 <__assert_fail@plt+0x1b74>
   12b04:	b	13700 <__assert_fail@plt+0x276c>
   12b08:	b	13494 <__assert_fail@plt+0x2500>
   12b0c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   12b10:	tst	r0, #1
   12b14:	beq	12b34 <__assert_fail@plt+0x1ba0>
   12b18:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12b1c:	tst	r0, #1
   12b20:	beq	12b34 <__assert_fail@plt+0x1ba0>
   12b24:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12b28:	cmp	r0, #0
   12b2c:	beq	12b34 <__assert_fail@plt+0x1ba0>
   12b30:	b	13494 <__assert_fail@plt+0x2500>
   12b34:	b	12b38 <__assert_fail@plt+0x1ba4>
   12b38:	ldr	r0, [fp, #8]
   12b3c:	cmp	r0, #2
   12b40:	bne	12b54 <__assert_fail@plt+0x1bc0>
   12b44:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12b48:	tst	r0, #1
   12b4c:	beq	12b54 <__assert_fail@plt+0x1bc0>
   12b50:	b	13700 <__assert_fail@plt+0x276c>
   12b54:	b	12b58 <__assert_fail@plt+0x1bc4>
   12b58:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   12b5c:	tst	r0, #1
   12b60:	beq	12b70 <__assert_fail@plt+0x1bdc>
   12b64:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   12b68:	strb	r0, [fp, #-63]	; 0xffffffc1
   12b6c:	b	13380 <__assert_fail@plt+0x23ec>
   12b70:	b	1330c <__assert_fail@plt+0x2378>
   12b74:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12b78:	cmn	r0, #1
   12b7c:	bne	12b94 <__assert_fail@plt+0x1c00>
   12b80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12b84:	ldrb	r0, [r0, #1]
   12b88:	cmp	r0, #0
   12b8c:	beq	12ba4 <__assert_fail@plt+0x1c10>
   12b90:	b	12ba0 <__assert_fail@plt+0x1c0c>
   12b94:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12b98:	cmp	r0, #1
   12b9c:	beq	12ba4 <__assert_fail@plt+0x1c10>
   12ba0:	b	1330c <__assert_fail@plt+0x2378>
   12ba4:	b	12ba8 <__assert_fail@plt+0x1c14>
   12ba8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12bac:	cmp	r0, #0
   12bb0:	beq	12bb8 <__assert_fail@plt+0x1c24>
   12bb4:	b	1330c <__assert_fail@plt+0x2378>
   12bb8:	b	12bbc <__assert_fail@plt+0x1c28>
   12bbc:	movw	r0, #1
   12bc0:	strb	r0, [fp, #-67]	; 0xffffffbd
   12bc4:	ldr	r0, [fp, #8]
   12bc8:	cmp	r0, #2
   12bcc:	bne	12be0 <__assert_fail@plt+0x1c4c>
   12bd0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12bd4:	tst	r0, #1
   12bd8:	beq	12be0 <__assert_fail@plt+0x1c4c>
   12bdc:	b	13700 <__assert_fail@plt+0x276c>
   12be0:	b	1330c <__assert_fail@plt+0x2378>
   12be4:	movw	r0, #1
   12be8:	strb	r0, [fp, #-61]	; 0xffffffc3
   12bec:	strb	r0, [fp, #-67]	; 0xffffffbd
   12bf0:	ldr	r0, [fp, #8]
   12bf4:	cmp	r0, #2
   12bf8:	bne	12cd8 <__assert_fail@plt+0x1d44>
   12bfc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12c00:	tst	r0, #1
   12c04:	beq	12c0c <__assert_fail@plt+0x1c78>
   12c08:	b	13700 <__assert_fail@plt+0x276c>
   12c0c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12c10:	cmp	r0, #0
   12c14:	beq	12c34 <__assert_fail@plt+0x1ca0>
   12c18:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12c1c:	cmp	r0, #0
   12c20:	bne	12c34 <__assert_fail@plt+0x1ca0>
   12c24:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12c28:	str	r0, [fp, #-48]	; 0xffffffd0
   12c2c:	movw	r0, #0
   12c30:	str	r0, [fp, #-28]	; 0xffffffe4
   12c34:	b	12c38 <__assert_fail@plt+0x1ca4>
   12c38:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12c3c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12c40:	cmp	r0, r1
   12c44:	bcs	12c5c <__assert_fail@plt+0x1cc8>
   12c48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12c4c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12c50:	add	r0, r0, r1
   12c54:	movw	r1, #39	; 0x27
   12c58:	strb	r1, [r0]
   12c5c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12c60:	add	r0, r0, #1
   12c64:	str	r0, [fp, #-44]	; 0xffffffd4
   12c68:	b	12c6c <__assert_fail@plt+0x1cd8>
   12c6c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12c70:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12c74:	cmp	r0, r1
   12c78:	bcs	12c90 <__assert_fail@plt+0x1cfc>
   12c7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12c80:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12c84:	add	r0, r0, r1
   12c88:	movw	r1, #92	; 0x5c
   12c8c:	strb	r1, [r0]
   12c90:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12c94:	add	r0, r0, #1
   12c98:	str	r0, [fp, #-44]	; 0xffffffd4
   12c9c:	b	12ca0 <__assert_fail@plt+0x1d0c>
   12ca0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12ca4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12ca8:	cmp	r0, r1
   12cac:	bcs	12cc4 <__assert_fail@plt+0x1d30>
   12cb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12cb4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12cb8:	add	r0, r0, r1
   12cbc:	movw	r1, #39	; 0x27
   12cc0:	strb	r1, [r0]
   12cc4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12cc8:	add	r0, r0, #1
   12ccc:	str	r0, [fp, #-44]	; 0xffffffd4
   12cd0:	movw	r0, #0
   12cd4:	strb	r0, [fp, #-60]	; 0xffffffc4
   12cd8:	b	1330c <__assert_fail@plt+0x2378>
   12cdc:	movw	r0, #1
   12ce0:	strb	r0, [fp, #-67]	; 0xffffffbd
   12ce4:	b	1330c <__assert_fail@plt+0x2378>
   12ce8:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   12cec:	tst	r0, #1
   12cf0:	beq	12d34 <__assert_fail@plt+0x1da0>
   12cf4:	mov	r0, #1
   12cf8:	str	r0, [fp, #-72]	; 0xffffffb8
   12cfc:	bl	10eb0 <__ctype_b_loc@plt>
   12d00:	ldr	r0, [r0]
   12d04:	ldrb	lr, [fp, #-63]	; 0xffffffc1
   12d08:	mov	r1, lr
   12d0c:	add	r0, r0, lr, lsl #1
   12d10:	ldrh	r0, [r0]
   12d14:	and	r0, r0, #16384	; 0x4000
   12d18:	cmp	r0, #0
   12d1c:	movw	r0, #0
   12d20:	movne	r0, #1
   12d24:	and	r0, r0, #1
   12d28:	strb	r0, [fp, #-73]	; 0xffffffb7
   12d2c:	str	r1, [sp, #32]
   12d30:	b	12fc0 <__assert_fail@plt+0x202c>
   12d34:	sub	r0, fp, #84	; 0x54
   12d38:	movw	r1, #0
   12d3c:	and	r1, r1, #255	; 0xff
   12d40:	movw	r2, #8
   12d44:	bl	10f10 <memset@plt>
   12d48:	movw	r0, #0
   12d4c:	str	r0, [fp, #-72]	; 0xffffffb8
   12d50:	movw	r0, #1
   12d54:	strb	r0, [fp, #-73]	; 0xffffffb7
   12d58:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12d5c:	cmn	r0, #1
   12d60:	bne	12d70 <__assert_fail@plt+0x1ddc>
   12d64:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12d68:	bl	10ed4 <strlen@plt>
   12d6c:	str	r0, [fp, #-36]	; 0xffffffdc
   12d70:	b	12d74 <__assert_fail@plt+0x1de0>
   12d74:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12d78:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12d7c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   12d80:	add	r1, r1, r2
   12d84:	add	r1, r0, r1
   12d88:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12d8c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12d90:	ldr	r3, [fp, #-72]	; 0xffffffb8
   12d94:	add	r2, r2, r3
   12d98:	sub	r2, r0, r2
   12d9c:	sub	r0, fp, #88	; 0x58
   12da0:	sub	r3, fp, #84	; 0x54
   12da4:	bl	19f9c <__assert_fail@plt+0x9008>
   12da8:	str	r0, [sp, #92]	; 0x5c
   12dac:	ldr	r0, [sp, #92]	; 0x5c
   12db0:	cmp	r0, #0
   12db4:	bne	12dbc <__assert_fail@plt+0x1e28>
   12db8:	b	12fbc <__assert_fail@plt+0x2028>
   12dbc:	ldr	r0, [sp, #92]	; 0x5c
   12dc0:	cmn	r0, #1
   12dc4:	bne	12dd4 <__assert_fail@plt+0x1e40>
   12dc8:	movw	r0, #0
   12dcc:	strb	r0, [fp, #-73]	; 0xffffffb7
   12dd0:	b	12fbc <__assert_fail@plt+0x2028>
   12dd4:	ldr	r0, [sp, #92]	; 0x5c
   12dd8:	cmn	r0, #2
   12ddc:	bne	12e50 <__assert_fail@plt+0x1ebc>
   12de0:	movw	r0, #0
   12de4:	strb	r0, [fp, #-73]	; 0xffffffb7
   12de8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12dec:	ldr	r1, [fp, #-72]	; 0xffffffb8
   12df0:	add	r0, r0, r1
   12df4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12df8:	cmp	r0, r1
   12dfc:	movw	r0, #0
   12e00:	str	r0, [sp, #28]
   12e04:	bcs	12e30 <__assert_fail@plt+0x1e9c>
   12e08:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12e0c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12e10:	ldr	r2, [fp, #-72]	; 0xffffffb8
   12e14:	add	r1, r1, r2
   12e18:	add	r0, r0, r1
   12e1c:	ldrb	r0, [r0]
   12e20:	cmp	r0, #0
   12e24:	movw	r0, #0
   12e28:	movne	r0, #1
   12e2c:	str	r0, [sp, #28]
   12e30:	ldr	r0, [sp, #28]
   12e34:	tst	r0, #1
   12e38:	beq	12e4c <__assert_fail@plt+0x1eb8>
   12e3c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12e40:	add	r0, r0, #1
   12e44:	str	r0, [fp, #-72]	; 0xffffffb8
   12e48:	b	12de8 <__assert_fail@plt+0x1e54>
   12e4c:	b	12fbc <__assert_fail@plt+0x2028>
   12e50:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12e54:	tst	r0, #1
   12e58:	beq	12f64 <__assert_fail@plt+0x1fd0>
   12e5c:	ldr	r0, [fp, #8]
   12e60:	cmp	r0, #2
   12e64:	bne	12f64 <__assert_fail@plt+0x1fd0>
   12e68:	movw	r0, #1
   12e6c:	str	r0, [sp, #88]	; 0x58
   12e70:	ldr	r0, [sp, #88]	; 0x58
   12e74:	ldr	r1, [sp, #92]	; 0x5c
   12e78:	cmp	r0, r1
   12e7c:	bcs	12f60 <__assert_fail@plt+0x1fcc>
   12e80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12e84:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12e88:	ldr	r2, [fp, #-72]	; 0xffffffb8
   12e8c:	add	r1, r1, r2
   12e90:	ldr	r2, [sp, #88]	; 0x58
   12e94:	add	r1, r1, r2
   12e98:	ldrb	r0, [r0, r1]
   12e9c:	sub	r0, r0, #91	; 0x5b
   12ea0:	cmp	r0, #33	; 0x21
   12ea4:	str	r0, [sp, #24]
   12ea8:	bhi	12f48 <__assert_fail@plt+0x1fb4>
   12eac:	add	r0, pc, #8
   12eb0:	ldr	r1, [sp, #24]
   12eb4:	ldr	r0, [r0, r1, lsl #2]
   12eb8:	mov	pc, r0
   12ebc:	andeq	r2, r1, r4, asr #30
   12ec0:	andeq	r2, r1, r4, asr #30
   12ec4:	andeq	r2, r1, r8, asr #30
   12ec8:	andeq	r2, r1, r4, asr #30
   12ecc:	andeq	r2, r1, r8, asr #30
   12ed0:	andeq	r2, r1, r4, asr #30
   12ed4:	andeq	r2, r1, r8, asr #30
   12ed8:	andeq	r2, r1, r8, asr #30
   12edc:	andeq	r2, r1, r8, asr #30
   12ee0:	andeq	r2, r1, r8, asr #30
   12ee4:	andeq	r2, r1, r8, asr #30
   12ee8:	andeq	r2, r1, r8, asr #30
   12eec:	andeq	r2, r1, r8, asr #30
   12ef0:	andeq	r2, r1, r8, asr #30
   12ef4:	andeq	r2, r1, r8, asr #30
   12ef8:	andeq	r2, r1, r8, asr #30
   12efc:	andeq	r2, r1, r8, asr #30
   12f00:	andeq	r2, r1, r8, asr #30
   12f04:	andeq	r2, r1, r8, asr #30
   12f08:	andeq	r2, r1, r8, asr #30
   12f0c:	andeq	r2, r1, r8, asr #30
   12f10:	andeq	r2, r1, r8, asr #30
   12f14:	andeq	r2, r1, r8, asr #30
   12f18:	andeq	r2, r1, r8, asr #30
   12f1c:	andeq	r2, r1, r8, asr #30
   12f20:	andeq	r2, r1, r8, asr #30
   12f24:	andeq	r2, r1, r8, asr #30
   12f28:	andeq	r2, r1, r8, asr #30
   12f2c:	andeq	r2, r1, r8, asr #30
   12f30:	andeq	r2, r1, r8, asr #30
   12f34:	andeq	r2, r1, r8, asr #30
   12f38:	andeq	r2, r1, r8, asr #30
   12f3c:	andeq	r2, r1, r8, asr #30
   12f40:	andeq	r2, r1, r4, asr #30
   12f44:	b	13700 <__assert_fail@plt+0x276c>
   12f48:	b	12f4c <__assert_fail@plt+0x1fb8>
   12f4c:	b	12f50 <__assert_fail@plt+0x1fbc>
   12f50:	ldr	r0, [sp, #88]	; 0x58
   12f54:	add	r0, r0, #1
   12f58:	str	r0, [sp, #88]	; 0x58
   12f5c:	b	12e70 <__assert_fail@plt+0x1edc>
   12f60:	b	12f64 <__assert_fail@plt+0x1fd0>
   12f64:	ldr	r0, [fp, #-88]	; 0xffffffa8
   12f68:	bl	10e14 <iswprint@plt>
   12f6c:	cmp	r0, #0
   12f70:	bne	12f7c <__assert_fail@plt+0x1fe8>
   12f74:	movw	r0, #0
   12f78:	strb	r0, [fp, #-73]	; 0xffffffb7
   12f7c:	ldr	r0, [sp, #92]	; 0x5c
   12f80:	ldr	r1, [fp, #-72]	; 0xffffffb8
   12f84:	add	r0, r1, r0
   12f88:	str	r0, [fp, #-72]	; 0xffffffb8
   12f8c:	b	12f90 <__assert_fail@plt+0x1ffc>
   12f90:	b	12f94 <__assert_fail@plt+0x2000>
   12f94:	b	12f98 <__assert_fail@plt+0x2004>
   12f98:	sub	r0, fp, #84	; 0x54
   12f9c:	bl	10dd8 <mbsinit@plt>
   12fa0:	cmp	r0, #0
   12fa4:	movw	r0, #0
   12fa8:	movne	r0, #1
   12fac:	mvn	lr, #0
   12fb0:	eor	r0, r0, lr
   12fb4:	tst	r0, #1
   12fb8:	bne	12d74 <__assert_fail@plt+0x1de0>
   12fbc:	b	12fc0 <__assert_fail@plt+0x202c>
   12fc0:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   12fc4:	and	r0, r0, #1
   12fc8:	strb	r0, [fp, #-67]	; 0xffffffbd
   12fcc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12fd0:	movw	r1, #1
   12fd4:	cmp	r1, r0
   12fd8:	bcc	12ff4 <__assert_fail@plt+0x2060>
   12fdc:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   12fe0:	tst	r0, #1
   12fe4:	beq	13308 <__assert_fail@plt+0x2374>
   12fe8:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   12fec:	tst	r0, #1
   12ff0:	bne	13308 <__assert_fail@plt+0x2374>
   12ff4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12ff8:	ldr	r1, [fp, #-72]	; 0xffffffb8
   12ffc:	add	r0, r0, r1
   13000:	str	r0, [sp, #84]	; 0x54
   13004:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13008:	tst	r0, #1
   1300c:	beq	131bc <__assert_fail@plt+0x2228>
   13010:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   13014:	tst	r0, #1
   13018:	bne	131bc <__assert_fail@plt+0x2228>
   1301c:	b	13020 <__assert_fail@plt+0x208c>
   13020:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13024:	tst	r0, #1
   13028:	beq	13030 <__assert_fail@plt+0x209c>
   1302c:	b	13700 <__assert_fail@plt+0x276c>
   13030:	movw	r0, #1
   13034:	strb	r0, [fp, #-66]	; 0xffffffbe
   13038:	ldr	r0, [fp, #8]
   1303c:	cmp	r0, #2
   13040:	bne	130f4 <__assert_fail@plt+0x2160>
   13044:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   13048:	tst	r0, #1
   1304c:	bne	130f4 <__assert_fail@plt+0x2160>
   13050:	b	13054 <__assert_fail@plt+0x20c0>
   13054:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13058:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1305c:	cmp	r0, r1
   13060:	bcs	13078 <__assert_fail@plt+0x20e4>
   13064:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13068:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1306c:	add	r0, r0, r1
   13070:	movw	r1, #39	; 0x27
   13074:	strb	r1, [r0]
   13078:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1307c:	add	r0, r0, #1
   13080:	str	r0, [fp, #-44]	; 0xffffffd4
   13084:	b	13088 <__assert_fail@plt+0x20f4>
   13088:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1308c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13090:	cmp	r0, r1
   13094:	bcs	130ac <__assert_fail@plt+0x2118>
   13098:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1309c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   130a0:	add	r0, r0, r1
   130a4:	movw	r1, #36	; 0x24
   130a8:	strb	r1, [r0]
   130ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   130b0:	add	r0, r0, #1
   130b4:	str	r0, [fp, #-44]	; 0xffffffd4
   130b8:	b	130bc <__assert_fail@plt+0x2128>
   130bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   130c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   130c4:	cmp	r0, r1
   130c8:	bcs	130e0 <__assert_fail@plt+0x214c>
   130cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   130d0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   130d4:	add	r0, r0, r1
   130d8:	movw	r1, #39	; 0x27
   130dc:	strb	r1, [r0]
   130e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   130e4:	add	r0, r0, #1
   130e8:	str	r0, [fp, #-44]	; 0xffffffd4
   130ec:	movw	r0, #1
   130f0:	strb	r0, [fp, #-60]	; 0xffffffc4
   130f4:	b	130f8 <__assert_fail@plt+0x2164>
   130f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   130fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13100:	cmp	r0, r1
   13104:	bcs	1311c <__assert_fail@plt+0x2188>
   13108:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1310c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13110:	add	r0, r0, r1
   13114:	movw	r1, #92	; 0x5c
   13118:	strb	r1, [r0]
   1311c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13120:	add	r0, r0, #1
   13124:	str	r0, [fp, #-44]	; 0xffffffd4
   13128:	b	1312c <__assert_fail@plt+0x2198>
   1312c:	b	13130 <__assert_fail@plt+0x219c>
   13130:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13134:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13138:	cmp	r0, r1
   1313c:	bcs	1315c <__assert_fail@plt+0x21c8>
   13140:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13144:	asr	r0, r0, #6
   13148:	add	r0, r0, #48	; 0x30
   1314c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13150:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13154:	add	r1, r1, r2
   13158:	strb	r0, [r1]
   1315c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13160:	add	r0, r0, #1
   13164:	str	r0, [fp, #-44]	; 0xffffffd4
   13168:	b	1316c <__assert_fail@plt+0x21d8>
   1316c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13170:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13174:	cmp	r0, r1
   13178:	bcs	1319c <__assert_fail@plt+0x2208>
   1317c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13180:	asr	r0, r0, #3
   13184:	and	r0, r0, #7
   13188:	add	r0, r0, #48	; 0x30
   1318c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13190:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13194:	add	r1, r1, r2
   13198:	strb	r0, [r1]
   1319c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   131a0:	add	r0, r0, #1
   131a4:	str	r0, [fp, #-44]	; 0xffffffd4
   131a8:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   131ac:	and	r0, r0, #7
   131b0:	add	r0, r0, #48	; 0x30
   131b4:	strb	r0, [fp, #-63]	; 0xffffffc1
   131b8:	b	13208 <__assert_fail@plt+0x2274>
   131bc:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   131c0:	tst	r0, #1
   131c4:	beq	13204 <__assert_fail@plt+0x2270>
   131c8:	b	131cc <__assert_fail@plt+0x2238>
   131cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   131d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   131d4:	cmp	r0, r1
   131d8:	bcs	131f0 <__assert_fail@plt+0x225c>
   131dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   131e0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   131e4:	add	r0, r0, r1
   131e8:	movw	r1, #92	; 0x5c
   131ec:	strb	r1, [r0]
   131f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   131f4:	add	r0, r0, #1
   131f8:	str	r0, [fp, #-44]	; 0xffffffd4
   131fc:	movw	r0, #0
   13200:	strb	r0, [fp, #-65]	; 0xffffffbf
   13204:	b	13208 <__assert_fail@plt+0x2274>
   13208:	ldr	r0, [sp, #84]	; 0x54
   1320c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13210:	add	r1, r1, #1
   13214:	cmp	r0, r1
   13218:	bhi	13220 <__assert_fail@plt+0x228c>
   1321c:	b	13304 <__assert_fail@plt+0x2370>
   13220:	b	13224 <__assert_fail@plt+0x2290>
   13224:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   13228:	tst	r0, #1
   1322c:	beq	132ac <__assert_fail@plt+0x2318>
   13230:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   13234:	tst	r0, #1
   13238:	bne	132ac <__assert_fail@plt+0x2318>
   1323c:	b	13240 <__assert_fail@plt+0x22ac>
   13240:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13244:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13248:	cmp	r0, r1
   1324c:	bcs	13264 <__assert_fail@plt+0x22d0>
   13250:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13254:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13258:	add	r0, r0, r1
   1325c:	movw	r1, #39	; 0x27
   13260:	strb	r1, [r0]
   13264:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13268:	add	r0, r0, #1
   1326c:	str	r0, [fp, #-44]	; 0xffffffd4
   13270:	b	13274 <__assert_fail@plt+0x22e0>
   13274:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13278:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1327c:	cmp	r0, r1
   13280:	bcs	13298 <__assert_fail@plt+0x2304>
   13284:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13288:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1328c:	add	r0, r0, r1
   13290:	movw	r1, #39	; 0x27
   13294:	strb	r1, [r0]
   13298:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1329c:	add	r0, r0, #1
   132a0:	str	r0, [fp, #-44]	; 0xffffffd4
   132a4:	movw	r0, #0
   132a8:	strb	r0, [fp, #-60]	; 0xffffffc4
   132ac:	b	132b0 <__assert_fail@plt+0x231c>
   132b0:	b	132b4 <__assert_fail@plt+0x2320>
   132b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   132b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   132bc:	cmp	r0, r1
   132c0:	bcs	132d8 <__assert_fail@plt+0x2344>
   132c4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   132c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   132cc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   132d0:	add	r1, r1, r2
   132d4:	strb	r0, [r1]
   132d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   132dc:	add	r0, r0, #1
   132e0:	str	r0, [fp, #-44]	; 0xffffffd4
   132e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   132e8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   132ec:	add	r1, r1, #1
   132f0:	str	r1, [fp, #-40]	; 0xffffffd8
   132f4:	add	r0, r0, r1
   132f8:	ldrb	r0, [r0]
   132fc:	strb	r0, [fp, #-63]	; 0xffffffc1
   13300:	b	13004 <__assert_fail@plt+0x2070>
   13304:	b	13494 <__assert_fail@plt+0x2500>
   13308:	b	1330c <__assert_fail@plt+0x2378>
   1330c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13310:	tst	r0, #1
   13314:	beq	13324 <__assert_fail@plt+0x2390>
   13318:	ldr	r0, [fp, #8]
   1331c:	cmp	r0, #2
   13320:	bne	13330 <__assert_fail@plt+0x239c>
   13324:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13328:	tst	r0, #1
   1332c:	beq	1336c <__assert_fail@plt+0x23d8>
   13330:	ldr	r0, [fp, #16]
   13334:	movw	r1, #0
   13338:	cmp	r0, r1
   1333c:	beq	1336c <__assert_fail@plt+0x23d8>
   13340:	ldr	r0, [fp, #16]
   13344:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   13348:	lsr	r1, r1, #5
   1334c:	add	r0, r0, r1, lsl #2
   13350:	ldr	r0, [r0]
   13354:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   13358:	and	r1, r1, #31
   1335c:	lsr	r0, r0, r1
   13360:	and	r0, r0, #1
   13364:	cmp	r0, #0
   13368:	bne	1337c <__assert_fail@plt+0x23e8>
   1336c:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   13370:	tst	r0, #1
   13374:	bne	1337c <__assert_fail@plt+0x23e8>
   13378:	b	13494 <__assert_fail@plt+0x2500>
   1337c:	b	13380 <__assert_fail@plt+0x23ec>
   13380:	b	13384 <__assert_fail@plt+0x23f0>
   13384:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13388:	tst	r0, #1
   1338c:	beq	13394 <__assert_fail@plt+0x2400>
   13390:	b	13700 <__assert_fail@plt+0x276c>
   13394:	movw	r0, #1
   13398:	strb	r0, [fp, #-66]	; 0xffffffbe
   1339c:	ldr	r0, [fp, #8]
   133a0:	cmp	r0, #2
   133a4:	bne	13458 <__assert_fail@plt+0x24c4>
   133a8:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   133ac:	tst	r0, #1
   133b0:	bne	13458 <__assert_fail@plt+0x24c4>
   133b4:	b	133b8 <__assert_fail@plt+0x2424>
   133b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   133bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   133c0:	cmp	r0, r1
   133c4:	bcs	133dc <__assert_fail@plt+0x2448>
   133c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   133cc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   133d0:	add	r0, r0, r1
   133d4:	movw	r1, #39	; 0x27
   133d8:	strb	r1, [r0]
   133dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   133e0:	add	r0, r0, #1
   133e4:	str	r0, [fp, #-44]	; 0xffffffd4
   133e8:	b	133ec <__assert_fail@plt+0x2458>
   133ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   133f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   133f4:	cmp	r0, r1
   133f8:	bcs	13410 <__assert_fail@plt+0x247c>
   133fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13400:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13404:	add	r0, r0, r1
   13408:	movw	r1, #36	; 0x24
   1340c:	strb	r1, [r0]
   13410:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13414:	add	r0, r0, #1
   13418:	str	r0, [fp, #-44]	; 0xffffffd4
   1341c:	b	13420 <__assert_fail@plt+0x248c>
   13420:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13424:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13428:	cmp	r0, r1
   1342c:	bcs	13444 <__assert_fail@plt+0x24b0>
   13430:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13434:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13438:	add	r0, r0, r1
   1343c:	movw	r1, #39	; 0x27
   13440:	strb	r1, [r0]
   13444:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13448:	add	r0, r0, #1
   1344c:	str	r0, [fp, #-44]	; 0xffffffd4
   13450:	movw	r0, #1
   13454:	strb	r0, [fp, #-60]	; 0xffffffc4
   13458:	b	1345c <__assert_fail@plt+0x24c8>
   1345c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13460:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13464:	cmp	r0, r1
   13468:	bcs	13480 <__assert_fail@plt+0x24ec>
   1346c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13470:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13474:	add	r0, r0, r1
   13478:	movw	r1, #92	; 0x5c
   1347c:	strb	r1, [r0]
   13480:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13484:	add	r0, r0, #1
   13488:	str	r0, [fp, #-44]	; 0xffffffd4
   1348c:	b	13490 <__assert_fail@plt+0x24fc>
   13490:	b	13494 <__assert_fail@plt+0x2500>
   13494:	b	13498 <__assert_fail@plt+0x2504>
   13498:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1349c:	tst	r0, #1
   134a0:	beq	13520 <__assert_fail@plt+0x258c>
   134a4:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   134a8:	tst	r0, #1
   134ac:	bne	13520 <__assert_fail@plt+0x258c>
   134b0:	b	134b4 <__assert_fail@plt+0x2520>
   134b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   134b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   134bc:	cmp	r0, r1
   134c0:	bcs	134d8 <__assert_fail@plt+0x2544>
   134c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   134c8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   134cc:	add	r0, r0, r1
   134d0:	movw	r1, #39	; 0x27
   134d4:	strb	r1, [r0]
   134d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   134dc:	add	r0, r0, #1
   134e0:	str	r0, [fp, #-44]	; 0xffffffd4
   134e4:	b	134e8 <__assert_fail@plt+0x2554>
   134e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   134ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   134f0:	cmp	r0, r1
   134f4:	bcs	1350c <__assert_fail@plt+0x2578>
   134f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   134fc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13500:	add	r0, r0, r1
   13504:	movw	r1, #39	; 0x27
   13508:	strb	r1, [r0]
   1350c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13510:	add	r0, r0, #1
   13514:	str	r0, [fp, #-44]	; 0xffffffd4
   13518:	movw	r0, #0
   1351c:	strb	r0, [fp, #-60]	; 0xffffffc4
   13520:	b	13524 <__assert_fail@plt+0x2590>
   13524:	b	13528 <__assert_fail@plt+0x2594>
   13528:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1352c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13530:	cmp	r0, r1
   13534:	bcs	1354c <__assert_fail@plt+0x25b8>
   13538:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1353c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13540:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13544:	add	r1, r1, r2
   13548:	strb	r0, [r1]
   1354c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13550:	add	r0, r0, #1
   13554:	str	r0, [fp, #-44]	; 0xffffffd4
   13558:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   1355c:	tst	r0, #1
   13560:	bne	1356c <__assert_fail@plt+0x25d8>
   13564:	movw	r0, #0
   13568:	strb	r0, [fp, #-62]	; 0xffffffc2
   1356c:	b	13570 <__assert_fail@plt+0x25dc>
   13570:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13574:	add	r0, r0, #1
   13578:	str	r0, [fp, #-40]	; 0xffffffd8
   1357c:	b	12324 <__assert_fail@plt+0x1390>
   13580:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13584:	cmp	r0, #0
   13588:	bne	135a8 <__assert_fail@plt+0x2614>
   1358c:	ldr	r0, [fp, #8]
   13590:	cmp	r0, #2
   13594:	bne	135a8 <__assert_fail@plt+0x2614>
   13598:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1359c:	tst	r0, #1
   135a0:	beq	135a8 <__assert_fail@plt+0x2614>
   135a4:	b	13700 <__assert_fail@plt+0x276c>
   135a8:	ldr	r0, [fp, #8]
   135ac:	cmp	r0, #2
   135b0:	bne	13650 <__assert_fail@plt+0x26bc>
   135b4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   135b8:	tst	r0, #1
   135bc:	bne	13650 <__assert_fail@plt+0x26bc>
   135c0:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   135c4:	tst	r0, #1
   135c8:	beq	13650 <__assert_fail@plt+0x26bc>
   135cc:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   135d0:	tst	r0, #1
   135d4:	beq	1361c <__assert_fail@plt+0x2688>
   135d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   135dc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   135e0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   135e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   135e8:	ldr	ip, [fp, #12]
   135ec:	ldr	lr, [fp, #16]
   135f0:	ldr	r4, [fp, #20]
   135f4:	ldr	r5, [fp, #24]
   135f8:	movw	r6, #5
   135fc:	str	r6, [sp]
   13600:	str	ip, [sp, #4]
   13604:	str	lr, [sp, #8]
   13608:	str	r4, [sp, #12]
   1360c:	str	r5, [sp, #16]
   13610:	bl	1203c <__assert_fail@plt+0x10a8>
   13614:	str	r0, [fp, #-20]	; 0xffffffec
   13618:	b	13768 <__assert_fail@plt+0x27d4>
   1361c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13620:	cmp	r0, #0
   13624:	bne	13648 <__assert_fail@plt+0x26b4>
   13628:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1362c:	cmp	r0, #0
   13630:	beq	13648 <__assert_fail@plt+0x26b4>
   13634:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13638:	str	r0, [fp, #-28]	; 0xffffffe4
   1363c:	movw	r0, #0
   13640:	str	r0, [fp, #-44]	; 0xffffffd4
   13644:	b	120e4 <__assert_fail@plt+0x1150>
   13648:	b	1364c <__assert_fail@plt+0x26b8>
   1364c:	b	13650 <__assert_fail@plt+0x26bc>
   13650:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13654:	movw	r1, #0
   13658:	cmp	r0, r1
   1365c:	beq	136d0 <__assert_fail@plt+0x273c>
   13660:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13664:	tst	r0, #1
   13668:	bne	136d0 <__assert_fail@plt+0x273c>
   1366c:	b	13670 <__assert_fail@plt+0x26dc>
   13670:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13674:	ldrsb	r0, [r0]
   13678:	cmp	r0, #0
   1367c:	beq	136cc <__assert_fail@plt+0x2738>
   13680:	b	13684 <__assert_fail@plt+0x26f0>
   13684:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13688:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1368c:	cmp	r0, r1
   13690:	bcs	136ac <__assert_fail@plt+0x2718>
   13694:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13698:	ldrb	r0, [r0]
   1369c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   136a0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   136a4:	add	r1, r1, r2
   136a8:	strb	r0, [r1]
   136ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   136b0:	add	r0, r0, #1
   136b4:	str	r0, [fp, #-44]	; 0xffffffd4
   136b8:	b	136bc <__assert_fail@plt+0x2728>
   136bc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   136c0:	add	r0, r0, #1
   136c4:	str	r0, [fp, #-52]	; 0xffffffcc
   136c8:	b	13670 <__assert_fail@plt+0x26dc>
   136cc:	b	136d0 <__assert_fail@plt+0x273c>
   136d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   136d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   136d8:	cmp	r0, r1
   136dc:	bcs	136f4 <__assert_fail@plt+0x2760>
   136e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   136e4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   136e8:	add	r0, r0, r1
   136ec:	movw	r1, #0
   136f0:	strb	r1, [r0]
   136f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   136f8:	str	r0, [fp, #-20]	; 0xffffffec
   136fc:	b	13768 <__assert_fail@plt+0x27d4>
   13700:	ldr	r0, [fp, #8]
   13704:	cmp	r0, #2
   13708:	bne	13720 <__assert_fail@plt+0x278c>
   1370c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13710:	tst	r0, #1
   13714:	beq	13720 <__assert_fail@plt+0x278c>
   13718:	movw	r0, #4
   1371c:	str	r0, [fp, #8]
   13720:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13724:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13728:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1372c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13730:	ldr	ip, [fp, #8]
   13734:	ldr	lr, [fp, #12]
   13738:	mvn	r4, #2
   1373c:	and	lr, lr, r4
   13740:	ldr	r4, [fp, #20]
   13744:	ldr	r5, [fp, #24]
   13748:	str	ip, [sp]
   1374c:	str	lr, [sp, #4]
   13750:	movw	ip, #0
   13754:	str	ip, [sp, #8]
   13758:	str	r4, [sp, #12]
   1375c:	str	r5, [sp, #16]
   13760:	bl	1203c <__assert_fail@plt+0x10a8>
   13764:	str	r0, [fp, #-20]	; 0xffffffec
   13768:	ldr	r0, [fp, #-20]	; 0xffffffec
   1376c:	sub	sp, fp, #16
   13770:	pop	{r4, r5, r6, sl, fp, pc}
   13774:	push	{fp, lr}
   13778:	mov	fp, sp
   1377c:	sub	sp, sp, #16
   13780:	str	r0, [fp, #-4]
   13784:	str	r1, [sp, #8]
   13788:	str	r2, [sp, #4]
   1378c:	ldr	r0, [fp, #-4]
   13790:	ldr	r1, [sp, #8]
   13794:	ldr	r3, [sp, #4]
   13798:	movw	r2, #0
   1379c:	bl	137a8 <__assert_fail@plt+0x2814>
   137a0:	mov	sp, fp
   137a4:	pop	{fp, pc}
   137a8:	push	{r4, r5, r6, sl, fp, lr}
   137ac:	add	fp, sp, #16
   137b0:	sub	sp, sp, #72	; 0x48
   137b4:	str	r0, [fp, #-20]	; 0xffffffec
   137b8:	str	r1, [fp, #-24]	; 0xffffffe8
   137bc:	str	r2, [fp, #-28]	; 0xffffffe4
   137c0:	str	r3, [fp, #-32]	; 0xffffffe0
   137c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   137c8:	movw	r1, #0
   137cc:	cmp	r0, r1
   137d0:	beq	137e0 <__assert_fail@plt+0x284c>
   137d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   137d8:	str	r0, [sp, #32]
   137dc:	b	137f0 <__assert_fail@plt+0x285c>
   137e0:	movw	r0, #53588	; 0xd154
   137e4:	movt	r0, #2
   137e8:	str	r0, [sp, #32]
   137ec:	b	137f0 <__assert_fail@plt+0x285c>
   137f0:	ldr	r0, [sp, #32]
   137f4:	str	r0, [fp, #-36]	; 0xffffffdc
   137f8:	bl	10ef8 <__errno_location@plt>
   137fc:	ldr	r0, [r0]
   13800:	str	r0, [fp, #-40]	; 0xffffffd8
   13804:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13808:	ldr	r0, [r0, #4]
   1380c:	ldr	lr, [fp, #-28]	; 0xffffffe4
   13810:	movw	r1, #0
   13814:	cmp	lr, r1
   13818:	movw	lr, #0
   1381c:	movne	lr, #1
   13820:	tst	lr, #1
   13824:	mov	lr, r1
   13828:	moveq	lr, #1
   1382c:	orr	r0, r0, lr
   13830:	str	r0, [sp, #44]	; 0x2c
   13834:	ldr	r2, [fp, #-20]	; 0xffffffec
   13838:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1383c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13840:	ldr	r0, [r0]
   13844:	ldr	lr, [sp, #44]	; 0x2c
   13848:	ldr	ip, [fp, #-36]	; 0xffffffdc
   1384c:	add	ip, ip, #8
   13850:	ldr	r4, [fp, #-36]	; 0xffffffdc
   13854:	ldr	r4, [r4, #40]	; 0x28
   13858:	ldr	r5, [fp, #-36]	; 0xffffffdc
   1385c:	ldr	r5, [r5, #44]	; 0x2c
   13860:	str	r0, [sp, #28]
   13864:	mov	r0, r1
   13868:	ldr	r6, [sp, #28]
   1386c:	str	r6, [sp]
   13870:	str	lr, [sp, #4]
   13874:	str	ip, [sp, #8]
   13878:	str	r4, [sp, #12]
   1387c:	str	r5, [sp, #16]
   13880:	bl	1203c <__assert_fail@plt+0x10a8>
   13884:	add	r0, r0, #1
   13888:	str	r0, [sp, #40]	; 0x28
   1388c:	ldr	r0, [sp, #40]	; 0x28
   13890:	bl	14ccc <__assert_fail@plt+0x3d38>
   13894:	str	r0, [sp, #36]	; 0x24
   13898:	ldr	r0, [sp, #36]	; 0x24
   1389c:	ldr	r1, [sp, #40]	; 0x28
   138a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   138a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   138a8:	ldr	ip, [fp, #-36]	; 0xffffffdc
   138ac:	ldr	ip, [ip]
   138b0:	ldr	lr, [sp, #44]	; 0x2c
   138b4:	ldr	r4, [fp, #-36]	; 0xffffffdc
   138b8:	add	r4, r4, #8
   138bc:	ldr	r5, [fp, #-36]	; 0xffffffdc
   138c0:	ldr	r5, [r5, #40]	; 0x28
   138c4:	ldr	r6, [fp, #-36]	; 0xffffffdc
   138c8:	ldr	r6, [r6, #44]	; 0x2c
   138cc:	str	ip, [sp]
   138d0:	str	lr, [sp, #4]
   138d4:	str	r4, [sp, #8]
   138d8:	str	r5, [sp, #12]
   138dc:	str	r6, [sp, #16]
   138e0:	bl	1203c <__assert_fail@plt+0x10a8>
   138e4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   138e8:	str	r0, [sp, #24]
   138ec:	str	r1, [sp, #20]
   138f0:	bl	10ef8 <__errno_location@plt>
   138f4:	ldr	r1, [sp, #20]
   138f8:	str	r1, [r0]
   138fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13900:	movw	r2, #0
   13904:	cmp	r0, r2
   13908:	beq	1391c <__assert_fail@plt+0x2988>
   1390c:	ldr	r0, [sp, #40]	; 0x28
   13910:	sub	r0, r0, #1
   13914:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13918:	str	r0, [r1]
   1391c:	ldr	r0, [sp, #36]	; 0x24
   13920:	sub	sp, fp, #16
   13924:	pop	{r4, r5, r6, sl, fp, pc}
   13928:	push	{fp, lr}
   1392c:	mov	fp, sp
   13930:	sub	sp, sp, #8
   13934:	movw	r0, #53476	; 0xd0e4
   13938:	movt	r0, #2
   1393c:	ldr	r0, [r0]
   13940:	str	r0, [sp, #4]
   13944:	movw	r0, #1
   13948:	str	r0, [sp]
   1394c:	ldr	r0, [sp]
   13950:	movw	r1, #53480	; 0xd0e8
   13954:	movt	r1, #2
   13958:	ldr	r1, [r1]
   1395c:	cmp	r0, r1
   13960:	bge	13988 <__assert_fail@plt+0x29f4>
   13964:	ldr	r0, [sp, #4]
   13968:	ldr	r1, [sp]
   1396c:	add	r0, r0, r1, lsl #3
   13970:	ldr	r0, [r0, #4]
   13974:	bl	19c20 <__assert_fail@plt+0x8c8c>
   13978:	ldr	r0, [sp]
   1397c:	add	r0, r0, #1
   13980:	str	r0, [sp]
   13984:	b	1394c <__assert_fail@plt+0x29b8>
   13988:	ldr	r0, [sp, #4]
   1398c:	ldr	r0, [r0, #4]
   13990:	movw	r1, #53636	; 0xd184
   13994:	movt	r1, #2
   13998:	cmp	r0, r1
   1399c:	beq	139c8 <__assert_fail@plt+0x2a34>
   139a0:	ldr	r0, [sp, #4]
   139a4:	ldr	r0, [r0, #4]
   139a8:	bl	19c20 <__assert_fail@plt+0x8c8c>
   139ac:	movw	r0, #256	; 0x100
   139b0:	movw	lr, #53484	; 0xd0ec
   139b4:	movt	lr, #2
   139b8:	str	r0, [lr]
   139bc:	movw	r0, #53636	; 0xd184
   139c0:	movt	r0, #2
   139c4:	str	r0, [lr, #4]
   139c8:	ldr	r0, [sp, #4]
   139cc:	movw	r1, #53484	; 0xd0ec
   139d0:	movt	r1, #2
   139d4:	cmp	r0, r1
   139d8:	beq	139f8 <__assert_fail@plt+0x2a64>
   139dc:	ldr	r0, [sp, #4]
   139e0:	bl	19c20 <__assert_fail@plt+0x8c8c>
   139e4:	movw	r0, #53476	; 0xd0e4
   139e8:	movt	r0, #2
   139ec:	movw	lr, #53484	; 0xd0ec
   139f0:	movt	lr, #2
   139f4:	str	lr, [r0]
   139f8:	movw	r0, #53480	; 0xd0e8
   139fc:	movt	r0, #2
   13a00:	movw	r1, #1
   13a04:	str	r1, [r0]
   13a08:	mov	sp, fp
   13a0c:	pop	{fp, pc}
   13a10:	push	{fp, lr}
   13a14:	mov	fp, sp
   13a18:	sub	sp, sp, #8
   13a1c:	str	r0, [sp, #4]
   13a20:	str	r1, [sp]
   13a24:	ldr	r0, [sp, #4]
   13a28:	ldr	r1, [sp]
   13a2c:	mvn	r2, #0
   13a30:	movw	r3, #53588	; 0xd154
   13a34:	movt	r3, #2
   13a38:	bl	13a44 <__assert_fail@plt+0x2ab0>
   13a3c:	mov	sp, fp
   13a40:	pop	{fp, pc}
   13a44:	push	{r4, r5, r6, sl, fp, lr}
   13a48:	add	fp, sp, #16
   13a4c:	sub	sp, sp, #88	; 0x58
   13a50:	str	r0, [fp, #-20]	; 0xffffffec
   13a54:	str	r1, [fp, #-24]	; 0xffffffe8
   13a58:	str	r2, [fp, #-28]	; 0xffffffe4
   13a5c:	str	r3, [fp, #-32]	; 0xffffffe0
   13a60:	bl	10ef8 <__errno_location@plt>
   13a64:	ldr	r1, [pc, #676]	; 13d10 <__assert_fail@plt+0x2d7c>
   13a68:	ldr	r0, [r0]
   13a6c:	str	r0, [fp, #-36]	; 0xffffffdc
   13a70:	movw	r0, #53476	; 0xd0e4
   13a74:	movt	r0, #2
   13a78:	ldr	r0, [r0]
   13a7c:	str	r0, [fp, #-40]	; 0xffffffd8
   13a80:	str	r1, [fp, #-44]	; 0xffffffd4
   13a84:	ldr	r0, [fp, #-20]	; 0xffffffec
   13a88:	movw	r1, #0
   13a8c:	cmp	r1, r0
   13a90:	bgt	13aa4 <__assert_fail@plt+0x2b10>
   13a94:	ldr	r0, [fp, #-20]	; 0xffffffec
   13a98:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13a9c:	cmp	r0, r1
   13aa0:	blt	13aa8 <__assert_fail@plt+0x2b14>
   13aa4:	bl	10f88 <abort@plt>
   13aa8:	movw	r0, #53480	; 0xd0e8
   13aac:	movt	r0, #2
   13ab0:	ldr	r0, [r0]
   13ab4:	ldr	r1, [fp, #-20]	; 0xffffffec
   13ab8:	cmp	r0, r1
   13abc:	bgt	13bb4 <__assert_fail@plt+0x2c20>
   13ac0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13ac4:	movw	r1, #53484	; 0xd0ec
   13ac8:	movt	r1, #2
   13acc:	cmp	r0, r1
   13ad0:	movw	r0, #0
   13ad4:	moveq	r0, #1
   13ad8:	and	r0, r0, #1
   13adc:	strb	r0, [fp, #-45]	; 0xffffffd3
   13ae0:	movw	r0, #53480	; 0xd0e8
   13ae4:	movt	r0, #2
   13ae8:	ldr	r0, [r0]
   13aec:	str	r0, [sp, #52]	; 0x34
   13af0:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   13af4:	tst	r0, #1
   13af8:	beq	13b08 <__assert_fail@plt+0x2b74>
   13afc:	movw	r0, #0
   13b00:	str	r0, [sp, #32]
   13b04:	b	13b10 <__assert_fail@plt+0x2b7c>
   13b08:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13b0c:	str	r0, [sp, #32]
   13b10:	ldr	r0, [sp, #32]
   13b14:	ldr	r1, [fp, #-20]	; 0xffffffec
   13b18:	movw	r2, #53480	; 0xd0e8
   13b1c:	movt	r2, #2
   13b20:	ldr	r2, [r2]
   13b24:	sub	r1, r1, r2
   13b28:	add	r2, r1, #1
   13b2c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13b30:	add	r1, sp, #52	; 0x34
   13b34:	movw	ip, #8
   13b38:	str	ip, [sp]
   13b3c:	bl	14f08 <__assert_fail@plt+0x3f74>
   13b40:	str	r0, [fp, #-40]	; 0xffffffd8
   13b44:	movw	r1, #53476	; 0xd0e4
   13b48:	movt	r1, #2
   13b4c:	str	r0, [r1]
   13b50:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   13b54:	tst	r0, #1
   13b58:	beq	13b78 <__assert_fail@plt+0x2be4>
   13b5c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13b60:	movw	r1, #53484	; 0xd0ec
   13b64:	movt	r1, #2
   13b68:	ldr	r2, [r1]
   13b6c:	str	r2, [r0]
   13b70:	ldr	r1, [r1, #4]
   13b74:	str	r1, [r0, #4]
   13b78:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13b7c:	movw	r1, #53480	; 0xd0e8
   13b80:	movt	r1, #2
   13b84:	ldr	r1, [r1]
   13b88:	add	r0, r0, r1, lsl #3
   13b8c:	ldr	r2, [sp, #52]	; 0x34
   13b90:	sub	r1, r2, r1
   13b94:	lsl	r2, r1, #3
   13b98:	movw	r1, #0
   13b9c:	and	r1, r1, #255	; 0xff
   13ba0:	bl	10f10 <memset@plt>
   13ba4:	ldr	r0, [sp, #52]	; 0x34
   13ba8:	movw	r1, #53480	; 0xd0e8
   13bac:	movt	r1, #2
   13bb0:	str	r0, [r1]
   13bb4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13bb8:	ldr	r1, [fp, #-20]	; 0xffffffec
   13bbc:	ldr	r0, [r0, r1, lsl #3]
   13bc0:	str	r0, [sp, #48]	; 0x30
   13bc4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13bc8:	ldr	r1, [fp, #-20]	; 0xffffffec
   13bcc:	add	r0, r0, r1, lsl #3
   13bd0:	ldr	r0, [r0, #4]
   13bd4:	str	r0, [sp, #44]	; 0x2c
   13bd8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13bdc:	ldr	r0, [r0, #4]
   13be0:	orr	r0, r0, #1
   13be4:	str	r0, [sp, #40]	; 0x28
   13be8:	ldr	r0, [sp, #44]	; 0x2c
   13bec:	ldr	r1, [sp, #48]	; 0x30
   13bf0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13bf4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13bf8:	ldr	ip, [fp, #-32]	; 0xffffffe0
   13bfc:	ldr	ip, [ip]
   13c00:	ldr	lr, [sp, #40]	; 0x28
   13c04:	ldr	r4, [fp, #-32]	; 0xffffffe0
   13c08:	add	r4, r4, #8
   13c0c:	ldr	r5, [fp, #-32]	; 0xffffffe0
   13c10:	ldr	r5, [r5, #40]	; 0x28
   13c14:	ldr	r6, [fp, #-32]	; 0xffffffe0
   13c18:	ldr	r6, [r6, #44]	; 0x2c
   13c1c:	str	ip, [sp]
   13c20:	str	lr, [sp, #4]
   13c24:	str	r4, [sp, #8]
   13c28:	str	r5, [sp, #12]
   13c2c:	str	r6, [sp, #16]
   13c30:	bl	1203c <__assert_fail@plt+0x10a8>
   13c34:	str	r0, [sp, #36]	; 0x24
   13c38:	ldr	r0, [sp, #48]	; 0x30
   13c3c:	ldr	r1, [sp, #36]	; 0x24
   13c40:	cmp	r0, r1
   13c44:	bhi	13cf0 <__assert_fail@plt+0x2d5c>
   13c48:	ldr	r0, [sp, #36]	; 0x24
   13c4c:	add	r0, r0, #1
   13c50:	str	r0, [sp, #48]	; 0x30
   13c54:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13c58:	ldr	r2, [fp, #-20]	; 0xffffffec
   13c5c:	add	r1, r1, r2, lsl #3
   13c60:	str	r0, [r1]
   13c64:	ldr	r0, [sp, #44]	; 0x2c
   13c68:	movw	r1, #53636	; 0xd184
   13c6c:	movt	r1, #2
   13c70:	cmp	r0, r1
   13c74:	beq	13c80 <__assert_fail@plt+0x2cec>
   13c78:	ldr	r0, [sp, #44]	; 0x2c
   13c7c:	bl	19c20 <__assert_fail@plt+0x8c8c>
   13c80:	ldr	r0, [sp, #48]	; 0x30
   13c84:	bl	14ccc <__assert_fail@plt+0x3d38>
   13c88:	mov	lr, r0
   13c8c:	str	r0, [sp, #44]	; 0x2c
   13c90:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13c94:	ldr	r1, [fp, #-20]	; 0xffffffec
   13c98:	add	r0, r0, r1, lsl #3
   13c9c:	str	lr, [r0, #4]
   13ca0:	ldr	r0, [sp, #44]	; 0x2c
   13ca4:	ldr	r1, [sp, #48]	; 0x30
   13ca8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13cac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13cb0:	ldr	lr, [fp, #-32]	; 0xffffffe0
   13cb4:	ldr	lr, [lr]
   13cb8:	ldr	ip, [sp, #40]	; 0x28
   13cbc:	ldr	r4, [fp, #-32]	; 0xffffffe0
   13cc0:	add	r4, r4, #8
   13cc4:	ldr	r5, [fp, #-32]	; 0xffffffe0
   13cc8:	ldr	r5, [r5, #40]	; 0x28
   13ccc:	ldr	r6, [fp, #-32]	; 0xffffffe0
   13cd0:	ldr	r6, [r6, #44]	; 0x2c
   13cd4:	str	lr, [sp]
   13cd8:	str	ip, [sp, #4]
   13cdc:	str	r4, [sp, #8]
   13ce0:	str	r5, [sp, #12]
   13ce4:	str	r6, [sp, #16]
   13ce8:	bl	1203c <__assert_fail@plt+0x10a8>
   13cec:	str	r0, [sp, #28]
   13cf0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13cf4:	str	r0, [sp, #24]
   13cf8:	bl	10ef8 <__errno_location@plt>
   13cfc:	ldr	lr, [sp, #24]
   13d00:	str	lr, [r0]
   13d04:	ldr	r0, [sp, #44]	; 0x2c
   13d08:	sub	sp, fp, #16
   13d0c:	pop	{r4, r5, r6, sl, fp, pc}
   13d10:	svcvc	0x00ffffff
   13d14:	push	{fp, lr}
   13d18:	mov	fp, sp
   13d1c:	sub	sp, sp, #16
   13d20:	str	r0, [fp, #-4]
   13d24:	str	r1, [sp, #8]
   13d28:	str	r2, [sp, #4]
   13d2c:	ldr	r0, [fp, #-4]
   13d30:	ldr	r1, [sp, #8]
   13d34:	ldr	r2, [sp, #4]
   13d38:	movw	r3, #53588	; 0xd154
   13d3c:	movt	r3, #2
   13d40:	bl	13a44 <__assert_fail@plt+0x2ab0>
   13d44:	mov	sp, fp
   13d48:	pop	{fp, pc}
   13d4c:	push	{fp, lr}
   13d50:	mov	fp, sp
   13d54:	sub	sp, sp, #8
   13d58:	str	r0, [sp, #4]
   13d5c:	ldr	r1, [sp, #4]
   13d60:	movw	r0, #0
   13d64:	bl	13a10 <__assert_fail@plt+0x2a7c>
   13d68:	mov	sp, fp
   13d6c:	pop	{fp, pc}
   13d70:	push	{fp, lr}
   13d74:	mov	fp, sp
   13d78:	sub	sp, sp, #8
   13d7c:	str	r0, [sp, #4]
   13d80:	str	r1, [sp]
   13d84:	ldr	r1, [sp, #4]
   13d88:	ldr	r2, [sp]
   13d8c:	movw	r0, #0
   13d90:	bl	13d14 <__assert_fail@plt+0x2d80>
   13d94:	mov	sp, fp
   13d98:	pop	{fp, pc}
   13d9c:	push	{fp, lr}
   13da0:	mov	fp, sp
   13da4:	sub	sp, sp, #64	; 0x40
   13da8:	str	r0, [fp, #-4]
   13dac:	str	r1, [fp, #-8]
   13db0:	str	r2, [fp, #-12]
   13db4:	ldr	r1, [fp, #-8]
   13db8:	add	r0, sp, #4
   13dbc:	bl	13ddc <__assert_fail@plt+0x2e48>
   13dc0:	ldr	r0, [fp, #-4]
   13dc4:	ldr	r1, [fp, #-12]
   13dc8:	mvn	r2, #0
   13dcc:	add	r3, sp, #4
   13dd0:	bl	13a44 <__assert_fail@plt+0x2ab0>
   13dd4:	mov	sp, fp
   13dd8:	pop	{fp, pc}
   13ddc:	push	{fp, lr}
   13de0:	mov	fp, sp
   13de4:	sub	sp, sp, #8
   13de8:	str	r1, [sp, #4]
   13dec:	mov	r1, r0
   13df0:	str	r0, [sp]
   13df4:	mov	r0, r1
   13df8:	movw	r1, #0
   13dfc:	and	r1, r1, #255	; 0xff
   13e00:	movw	r2, #48	; 0x30
   13e04:	bl	10f10 <memset@plt>
   13e08:	ldr	r0, [sp, #4]
   13e0c:	cmp	r0, #10
   13e10:	bne	13e18 <__assert_fail@plt+0x2e84>
   13e14:	bl	10f88 <abort@plt>
   13e18:	ldr	r0, [sp, #4]
   13e1c:	ldr	r1, [sp]
   13e20:	str	r0, [r1]
   13e24:	mov	sp, fp
   13e28:	pop	{fp, pc}
   13e2c:	push	{fp, lr}
   13e30:	mov	fp, sp
   13e34:	sub	sp, sp, #64	; 0x40
   13e38:	str	r0, [fp, #-4]
   13e3c:	str	r1, [fp, #-8]
   13e40:	str	r2, [fp, #-12]
   13e44:	str	r3, [fp, #-16]
   13e48:	ldr	r1, [fp, #-8]
   13e4c:	mov	r0, sp
   13e50:	bl	13ddc <__assert_fail@plt+0x2e48>
   13e54:	ldr	r0, [fp, #-4]
   13e58:	ldr	r1, [fp, #-12]
   13e5c:	ldr	r2, [fp, #-16]
   13e60:	mov	r3, sp
   13e64:	bl	13a44 <__assert_fail@plt+0x2ab0>
   13e68:	mov	sp, fp
   13e6c:	pop	{fp, pc}
   13e70:	push	{fp, lr}
   13e74:	mov	fp, sp
   13e78:	sub	sp, sp, #8
   13e7c:	str	r0, [sp, #4]
   13e80:	str	r1, [sp]
   13e84:	ldr	r1, [sp, #4]
   13e88:	ldr	r2, [sp]
   13e8c:	movw	r0, #0
   13e90:	bl	13d9c <__assert_fail@plt+0x2e08>
   13e94:	mov	sp, fp
   13e98:	pop	{fp, pc}
   13e9c:	push	{fp, lr}
   13ea0:	mov	fp, sp
   13ea4:	sub	sp, sp, #16
   13ea8:	str	r0, [fp, #-4]
   13eac:	str	r1, [sp, #8]
   13eb0:	str	r2, [sp, #4]
   13eb4:	ldr	r1, [fp, #-4]
   13eb8:	ldr	r2, [sp, #8]
   13ebc:	ldr	r3, [sp, #4]
   13ec0:	movw	r0, #0
   13ec4:	bl	13e2c <__assert_fail@plt+0x2e98>
   13ec8:	mov	sp, fp
   13ecc:	pop	{fp, pc}
   13ed0:	push	{fp, lr}
   13ed4:	mov	fp, sp
   13ed8:	sub	sp, sp, #72	; 0x48
   13edc:	movw	r3, #53588	; 0xd154
   13ee0:	movt	r3, #2
   13ee4:	str	r0, [fp, #-4]
   13ee8:	str	r1, [fp, #-8]
   13eec:	strb	r2, [fp, #-9]
   13ef0:	add	r0, sp, #12
   13ef4:	mov	r1, r0
   13ef8:	str	r0, [sp, #8]
   13efc:	mov	r0, r1
   13f00:	mov	r1, r3
   13f04:	movw	r2, #48	; 0x30
   13f08:	bl	10dc0 <memcpy@plt>
   13f0c:	ldr	r0, [sp, #8]
   13f10:	ldrb	r1, [fp, #-9]
   13f14:	movw	r2, #1
   13f18:	bl	11de0 <__assert_fail@plt+0xe4c>
   13f1c:	ldr	r1, [fp, #-4]
   13f20:	ldr	r2, [fp, #-8]
   13f24:	movw	r3, #0
   13f28:	str	r0, [sp, #4]
   13f2c:	mov	r0, r3
   13f30:	add	r3, sp, #12
   13f34:	bl	13a44 <__assert_fail@plt+0x2ab0>
   13f38:	mov	sp, fp
   13f3c:	pop	{fp, pc}
   13f40:	push	{fp, lr}
   13f44:	mov	fp, sp
   13f48:	sub	sp, sp, #8
   13f4c:	str	r0, [sp, #4]
   13f50:	strb	r1, [sp, #3]
   13f54:	ldr	r0, [sp, #4]
   13f58:	mvn	r1, #0
   13f5c:	ldrb	r2, [sp, #3]
   13f60:	bl	13ed0 <__assert_fail@plt+0x2f3c>
   13f64:	mov	sp, fp
   13f68:	pop	{fp, pc}
   13f6c:	push	{fp, lr}
   13f70:	mov	fp, sp
   13f74:	sub	sp, sp, #8
   13f78:	str	r0, [sp, #4]
   13f7c:	ldr	r0, [sp, #4]
   13f80:	movw	r1, #58	; 0x3a
   13f84:	and	r1, r1, #255	; 0xff
   13f88:	bl	13f40 <__assert_fail@plt+0x2fac>
   13f8c:	mov	sp, fp
   13f90:	pop	{fp, pc}
   13f94:	push	{fp, lr}
   13f98:	mov	fp, sp
   13f9c:	sub	sp, sp, #8
   13fa0:	str	r0, [sp, #4]
   13fa4:	str	r1, [sp]
   13fa8:	ldr	r0, [sp, #4]
   13fac:	ldr	r1, [sp]
   13fb0:	movw	r2, #58	; 0x3a
   13fb4:	and	r2, r2, #255	; 0xff
   13fb8:	bl	13ed0 <__assert_fail@plt+0x2f3c>
   13fbc:	mov	sp, fp
   13fc0:	pop	{fp, pc}
   13fc4:	push	{fp, lr}
   13fc8:	mov	fp, sp
   13fcc:	sub	sp, sp, #120	; 0x78
   13fd0:	str	r0, [fp, #-4]
   13fd4:	str	r1, [fp, #-8]
   13fd8:	str	r2, [fp, #-12]
   13fdc:	ldr	r1, [fp, #-8]
   13fe0:	add	r0, sp, #12
   13fe4:	bl	13ddc <__assert_fail@plt+0x2e48>
   13fe8:	add	r0, sp, #60	; 0x3c
   13fec:	mov	r1, r0
   13ff0:	add	r2, sp, #12
   13ff4:	str	r0, [sp, #8]
   13ff8:	mov	r0, r1
   13ffc:	mov	r1, r2
   14000:	movw	r2, #48	; 0x30
   14004:	bl	10dc0 <memcpy@plt>
   14008:	ldr	r0, [sp, #8]
   1400c:	movw	r1, #58	; 0x3a
   14010:	and	r1, r1, #255	; 0xff
   14014:	movw	r2, #1
   14018:	bl	11de0 <__assert_fail@plt+0xe4c>
   1401c:	ldr	r1, [fp, #-4]
   14020:	ldr	r2, [fp, #-12]
   14024:	str	r0, [sp, #4]
   14028:	mov	r0, r1
   1402c:	mov	r1, r2
   14030:	mvn	r2, #0
   14034:	add	r3, sp, #60	; 0x3c
   14038:	bl	13a44 <__assert_fail@plt+0x2ab0>
   1403c:	mov	sp, fp
   14040:	pop	{fp, pc}
   14044:	push	{fp, lr}
   14048:	mov	fp, sp
   1404c:	sub	sp, sp, #24
   14050:	str	r0, [fp, #-4]
   14054:	str	r1, [fp, #-8]
   14058:	str	r2, [sp, #12]
   1405c:	str	r3, [sp, #8]
   14060:	ldr	r0, [fp, #-4]
   14064:	ldr	r1, [fp, #-8]
   14068:	ldr	r2, [sp, #12]
   1406c:	ldr	r3, [sp, #8]
   14070:	mvn	ip, #0
   14074:	str	ip, [sp]
   14078:	bl	14084 <__assert_fail@plt+0x30f0>
   1407c:	mov	sp, fp
   14080:	pop	{fp, pc}
   14084:	push	{fp, lr}
   14088:	mov	fp, sp
   1408c:	sub	sp, sp, #72	; 0x48
   14090:	ldr	ip, [fp, #8]
   14094:	movw	lr, #53588	; 0xd154
   14098:	movt	lr, #2
   1409c:	str	r0, [fp, #-4]
   140a0:	str	r1, [fp, #-8]
   140a4:	str	r2, [fp, #-12]
   140a8:	str	r3, [fp, #-16]
   140ac:	add	r0, sp, #8
   140b0:	mov	r1, r0
   140b4:	str	r0, [sp, #4]
   140b8:	mov	r0, r1
   140bc:	mov	r1, lr
   140c0:	movw	r2, #48	; 0x30
   140c4:	str	ip, [sp]
   140c8:	bl	10dc0 <memcpy@plt>
   140cc:	ldr	r1, [fp, #-8]
   140d0:	ldr	r2, [fp, #-12]
   140d4:	ldr	r0, [sp, #4]
   140d8:	bl	11ee0 <__assert_fail@plt+0xf4c>
   140dc:	ldr	r0, [fp, #-4]
   140e0:	ldr	r1, [fp, #-16]
   140e4:	ldr	r2, [fp, #8]
   140e8:	add	r3, sp, #8
   140ec:	bl	13a44 <__assert_fail@plt+0x2ab0>
   140f0:	mov	sp, fp
   140f4:	pop	{fp, pc}
   140f8:	push	{fp, lr}
   140fc:	mov	fp, sp
   14100:	sub	sp, sp, #16
   14104:	str	r0, [fp, #-4]
   14108:	str	r1, [sp, #8]
   1410c:	str	r2, [sp, #4]
   14110:	ldr	r1, [fp, #-4]
   14114:	ldr	r2, [sp, #8]
   14118:	ldr	r3, [sp, #4]
   1411c:	movw	r0, #0
   14120:	bl	14044 <__assert_fail@plt+0x30b0>
   14124:	mov	sp, fp
   14128:	pop	{fp, pc}
   1412c:	push	{fp, lr}
   14130:	mov	fp, sp
   14134:	sub	sp, sp, #24
   14138:	str	r0, [fp, #-4]
   1413c:	str	r1, [fp, #-8]
   14140:	str	r2, [sp, #12]
   14144:	str	r3, [sp, #8]
   14148:	ldr	r1, [fp, #-4]
   1414c:	ldr	r2, [fp, #-8]
   14150:	ldr	r3, [sp, #12]
   14154:	ldr	r0, [sp, #8]
   14158:	movw	ip, #0
   1415c:	str	r0, [sp, #4]
   14160:	mov	r0, ip
   14164:	ldr	ip, [sp, #4]
   14168:	str	ip, [sp]
   1416c:	bl	14084 <__assert_fail@plt+0x30f0>
   14170:	mov	sp, fp
   14174:	pop	{fp, pc}
   14178:	push	{fp, lr}
   1417c:	mov	fp, sp
   14180:	sub	sp, sp, #16
   14184:	str	r0, [fp, #-4]
   14188:	str	r1, [sp, #8]
   1418c:	str	r2, [sp, #4]
   14190:	ldr	r0, [fp, #-4]
   14194:	ldr	r1, [sp, #8]
   14198:	ldr	r2, [sp, #4]
   1419c:	movw	r3, #53492	; 0xd0f4
   141a0:	movt	r3, #2
   141a4:	bl	13a44 <__assert_fail@plt+0x2ab0>
   141a8:	mov	sp, fp
   141ac:	pop	{fp, pc}
   141b0:	push	{fp, lr}
   141b4:	mov	fp, sp
   141b8:	sub	sp, sp, #8
   141bc:	str	r0, [sp, #4]
   141c0:	str	r1, [sp]
   141c4:	ldr	r1, [sp, #4]
   141c8:	ldr	r2, [sp]
   141cc:	movw	r0, #0
   141d0:	bl	14178 <__assert_fail@plt+0x31e4>
   141d4:	mov	sp, fp
   141d8:	pop	{fp, pc}
   141dc:	push	{fp, lr}
   141e0:	mov	fp, sp
   141e4:	sub	sp, sp, #8
   141e8:	str	r0, [sp, #4]
   141ec:	str	r1, [sp]
   141f0:	ldr	r0, [sp, #4]
   141f4:	ldr	r1, [sp]
   141f8:	mvn	r2, #0
   141fc:	bl	14178 <__assert_fail@plt+0x31e4>
   14200:	mov	sp, fp
   14204:	pop	{fp, pc}
   14208:	push	{fp, lr}
   1420c:	mov	fp, sp
   14210:	sub	sp, sp, #8
   14214:	str	r0, [sp, #4]
   14218:	ldr	r1, [sp, #4]
   1421c:	movw	r0, #0
   14220:	bl	141dc <__assert_fail@plt+0x3248>
   14224:	mov	sp, fp
   14228:	pop	{fp, pc}
   1422c:	push	{fp, lr}
   14230:	mov	fp, sp
   14234:	sub	sp, sp, #24
   14238:	str	r0, [fp, #-8]
   1423c:	str	r1, [sp, #12]
   14240:	ldr	r0, [fp, #-8]
   14244:	bl	10ec8 <gettext@plt>
   14248:	str	r0, [sp, #8]
   1424c:	ldr	r0, [sp, #8]
   14250:	ldr	r1, [fp, #-8]
   14254:	cmp	r0, r1
   14258:	beq	14268 <__assert_fail@plt+0x32d4>
   1425c:	ldr	r0, [sp, #8]
   14260:	str	r0, [fp, #-4]
   14264:	b	14334 <__assert_fail@plt+0x33a0>
   14268:	bl	19f40 <__assert_fail@plt+0x8fac>
   1426c:	str	r0, [sp, #4]
   14270:	ldr	r0, [sp, #4]
   14274:	movw	r1, #50400	; 0xc4e0
   14278:	movt	r1, #1
   1427c:	bl	198fc <__assert_fail@plt+0x8968>
   14280:	cmp	r0, #0
   14284:	bne	142bc <__assert_fail@plt+0x3328>
   14288:	ldr	r0, [fp, #-8]
   1428c:	ldrb	r0, [r0]
   14290:	cmp	r0, #96	; 0x60
   14294:	movw	r0, #0
   14298:	moveq	r0, #1
   1429c:	tst	r0, #1
   142a0:	movw	r0, #50410	; 0xc4ea
   142a4:	movt	r0, #1
   142a8:	movw	r1, #50406	; 0xc4e6
   142ac:	movt	r1, #1
   142b0:	movne	r0, r1
   142b4:	str	r0, [fp, #-4]
   142b8:	b	14334 <__assert_fail@plt+0x33a0>
   142bc:	ldr	r0, [sp, #4]
   142c0:	movw	r1, #50414	; 0xc4ee
   142c4:	movt	r1, #1
   142c8:	bl	198fc <__assert_fail@plt+0x8968>
   142cc:	cmp	r0, #0
   142d0:	bne	14308 <__assert_fail@plt+0x3374>
   142d4:	ldr	r0, [fp, #-8]
   142d8:	ldrb	r0, [r0]
   142dc:	cmp	r0, #96	; 0x60
   142e0:	movw	r0, #0
   142e4:	moveq	r0, #1
   142e8:	tst	r0, #1
   142ec:	movw	r0, #50426	; 0xc4fa
   142f0:	movt	r0, #1
   142f4:	movw	r1, #50422	; 0xc4f6
   142f8:	movt	r1, #1
   142fc:	movne	r0, r1
   14300:	str	r0, [fp, #-4]
   14304:	b	14334 <__assert_fail@plt+0x33a0>
   14308:	ldr	r0, [sp, #12]
   1430c:	cmp	r0, #9
   14310:	movw	r0, #0
   14314:	moveq	r0, #1
   14318:	tst	r0, #1
   1431c:	movw	r0, #50398	; 0xc4de
   14320:	movt	r0, #1
   14324:	movw	r1, #50394	; 0xc4da
   14328:	movt	r1, #1
   1432c:	movne	r0, r1
   14330:	str	r0, [fp, #-4]
   14334:	ldr	r0, [fp, #-4]
   14338:	mov	sp, fp
   1433c:	pop	{fp, pc}
   14340:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14344:	add	fp, sp, #28
   14348:	sub	sp, sp, #260	; 0x104
   1434c:	ldr	ip, [fp, #12]
   14350:	ldr	lr, [fp, #8]
   14354:	str	r0, [fp, #-32]	; 0xffffffe0
   14358:	str	r1, [fp, #-36]	; 0xffffffdc
   1435c:	str	r2, [fp, #-40]	; 0xffffffd8
   14360:	str	r3, [fp, #-44]	; 0xffffffd4
   14364:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14368:	movw	r1, #0
   1436c:	cmp	r0, r1
   14370:	str	lr, [fp, #-48]	; 0xffffffd0
   14374:	str	ip, [fp, #-52]	; 0xffffffcc
   14378:	beq	143b0 <__assert_fail@plt+0x341c>
   1437c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14380:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14384:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14388:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1438c:	movw	ip, #50516	; 0xc554
   14390:	movt	ip, #1
   14394:	str	r1, [fp, #-56]	; 0xffffffc8
   14398:	mov	r1, ip
   1439c:	ldr	ip, [fp, #-56]	; 0xffffffc8
   143a0:	str	ip, [sp]
   143a4:	bl	10eec <fprintf@plt>
   143a8:	str	r0, [fp, #-60]	; 0xffffffc4
   143ac:	b	143cc <__assert_fail@plt+0x3438>
   143b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   143b4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   143b8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   143bc:	movw	r1, #50528	; 0xc560
   143c0:	movt	r1, #1
   143c4:	bl	10eec <fprintf@plt>
   143c8:	str	r0, [fp, #-64]	; 0xffffffc0
   143cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   143d0:	movw	r1, #50535	; 0xc567
   143d4:	movt	r1, #1
   143d8:	str	r0, [fp, #-68]	; 0xffffffbc
   143dc:	mov	r0, r1
   143e0:	bl	10ec8 <gettext@plt>
   143e4:	movw	r1, #51253	; 0xc835
   143e8:	movt	r1, #1
   143ec:	movw	r3, #2022	; 0x7e6
   143f0:	ldr	lr, [fp, #-68]	; 0xffffffbc
   143f4:	str	r0, [fp, #-72]	; 0xffffffb8
   143f8:	mov	r0, lr
   143fc:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14400:	bl	10eec <fprintf@plt>
   14404:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14408:	movw	r2, #50081	; 0xc3a1
   1440c:	movt	r2, #1
   14410:	str	r0, [fp, #-76]	; 0xffffffb4
   14414:	mov	r0, r2
   14418:	str	r2, [fp, #-80]	; 0xffffffb0
   1441c:	bl	10d60 <fputs_unlocked@plt>
   14420:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14424:	movw	r2, #50539	; 0xc56b
   14428:	movt	r2, #1
   1442c:	str	r0, [fp, #-84]	; 0xffffffac
   14430:	mov	r0, r2
   14434:	str	r1, [fp, #-88]	; 0xffffffa8
   14438:	bl	10ec8 <gettext@plt>
   1443c:	movw	r2, #50710	; 0xc616
   14440:	movt	r2, #1
   14444:	ldr	r1, [fp, #-88]	; 0xffffffa8
   14448:	str	r0, [fp, #-92]	; 0xffffffa4
   1444c:	mov	r0, r1
   14450:	ldr	r1, [fp, #-92]	; 0xffffffa4
   14454:	bl	10eec <fprintf@plt>
   14458:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1445c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   14460:	str	r0, [fp, #-96]	; 0xffffffa0
   14464:	mov	r0, r2
   14468:	bl	10d60 <fputs_unlocked@plt>
   1446c:	ldr	r1, [fp, #12]
   14470:	cmp	r1, #9
   14474:	str	r0, [fp, #-100]	; 0xffffff9c
   14478:	str	r1, [fp, #-104]	; 0xffffff98
   1447c:	bhi	148bc <__assert_fail@plt+0x3928>
   14480:	add	r0, pc, #8
   14484:	ldr	r1, [fp, #-104]	; 0xffffff98
   14488:	ldr	r0, [r0, r1, lsl #2]
   1448c:	mov	pc, r0
   14490:			; <UNDEFINED> instruction: 0x000144b8
   14494:			; <UNDEFINED> instruction: 0x000144bc
   14498:	strdeq	r4, [r1], -r8
   1449c:	andeq	r4, r1, ip, lsr r5
   144a0:	muleq	r1, r8, r5
   144a4:	andeq	r4, r1, r0, lsl #12
   144a8:	andeq	r4, r1, r4, ror r6
   144ac:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   144b0:	andeq	r4, r1, r0, lsl #15
   144b4:	andeq	r4, r1, r8, lsl r8
   144b8:	b	1495c <__assert_fail@plt+0x39c8>
   144bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   144c0:	movw	r1, #50744	; 0xc638
   144c4:	movt	r1, #1
   144c8:	str	r0, [fp, #-108]	; 0xffffff94
   144cc:	mov	r0, r1
   144d0:	bl	10ec8 <gettext@plt>
   144d4:	ldr	r1, [fp, #8]
   144d8:	ldr	r2, [r1]
   144dc:	ldr	r1, [fp, #-108]	; 0xffffff94
   144e0:	str	r0, [fp, #-112]	; 0xffffff90
   144e4:	mov	r0, r1
   144e8:	ldr	r1, [fp, #-112]	; 0xffffff90
   144ec:	bl	10eec <fprintf@plt>
   144f0:	str	r0, [fp, #-116]	; 0xffffff8c
   144f4:	b	1495c <__assert_fail@plt+0x39c8>
   144f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   144fc:	movw	r1, #50760	; 0xc648
   14500:	movt	r1, #1
   14504:	str	r0, [fp, #-120]	; 0xffffff88
   14508:	mov	r0, r1
   1450c:	bl	10ec8 <gettext@plt>
   14510:	ldr	r1, [fp, #8]
   14514:	ldr	r2, [r1]
   14518:	ldr	r1, [fp, #8]
   1451c:	ldr	r3, [r1, #4]
   14520:	ldr	r1, [fp, #-120]	; 0xffffff88
   14524:	str	r0, [fp, #-124]	; 0xffffff84
   14528:	mov	r0, r1
   1452c:	ldr	r1, [fp, #-124]	; 0xffffff84
   14530:	bl	10eec <fprintf@plt>
   14534:	str	r0, [fp, #-128]	; 0xffffff80
   14538:	b	1495c <__assert_fail@plt+0x39c8>
   1453c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14540:	movw	r1, #50783	; 0xc65f
   14544:	movt	r1, #1
   14548:	str	r0, [fp, #-132]	; 0xffffff7c
   1454c:	mov	r0, r1
   14550:	bl	10ec8 <gettext@plt>
   14554:	ldr	r1, [fp, #8]
   14558:	ldr	r2, [r1]
   1455c:	ldr	r1, [fp, #8]
   14560:	ldr	r3, [r1, #4]
   14564:	ldr	r1, [fp, #8]
   14568:	ldr	r1, [r1, #8]
   1456c:	ldr	lr, [fp, #-132]	; 0xffffff7c
   14570:	str	r0, [fp, #-136]	; 0xffffff78
   14574:	mov	r0, lr
   14578:	ldr	ip, [fp, #-136]	; 0xffffff78
   1457c:	str	r1, [fp, #-140]	; 0xffffff74
   14580:	mov	r1, ip
   14584:	ldr	r4, [fp, #-140]	; 0xffffff74
   14588:	str	r4, [sp]
   1458c:	bl	10eec <fprintf@plt>
   14590:	str	r0, [sp, #144]	; 0x90
   14594:	b	1495c <__assert_fail@plt+0x39c8>
   14598:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1459c:	movw	r1, #50811	; 0xc67b
   145a0:	movt	r1, #1
   145a4:	str	r0, [sp, #140]	; 0x8c
   145a8:	mov	r0, r1
   145ac:	bl	10ec8 <gettext@plt>
   145b0:	ldr	r1, [fp, #8]
   145b4:	ldr	r2, [r1]
   145b8:	ldr	r1, [fp, #8]
   145bc:	ldr	r3, [r1, #4]
   145c0:	ldr	r1, [fp, #8]
   145c4:	ldr	r1, [r1, #8]
   145c8:	ldr	lr, [fp, #8]
   145cc:	ldr	lr, [lr, #12]
   145d0:	ldr	ip, [sp, #140]	; 0x8c
   145d4:	str	r0, [sp, #136]	; 0x88
   145d8:	mov	r0, ip
   145dc:	ldr	r4, [sp, #136]	; 0x88
   145e0:	str	r1, [sp, #132]	; 0x84
   145e4:	mov	r1, r4
   145e8:	ldr	r5, [sp, #132]	; 0x84
   145ec:	str	r5, [sp]
   145f0:	str	lr, [sp, #4]
   145f4:	bl	10eec <fprintf@plt>
   145f8:	str	r0, [sp, #128]	; 0x80
   145fc:	b	1495c <__assert_fail@plt+0x39c8>
   14600:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14604:	movw	r1, #50843	; 0xc69b
   14608:	movt	r1, #1
   1460c:	str	r0, [sp, #124]	; 0x7c
   14610:	mov	r0, r1
   14614:	bl	10ec8 <gettext@plt>
   14618:	ldr	r1, [fp, #8]
   1461c:	ldr	r2, [r1]
   14620:	ldr	r1, [fp, #8]
   14624:	ldr	r3, [r1, #4]
   14628:	ldr	r1, [fp, #8]
   1462c:	ldr	r1, [r1, #8]
   14630:	ldr	lr, [fp, #8]
   14634:	ldr	lr, [lr, #12]
   14638:	ldr	ip, [fp, #8]
   1463c:	ldr	ip, [ip, #16]
   14640:	ldr	r4, [sp, #124]	; 0x7c
   14644:	str	r0, [sp, #120]	; 0x78
   14648:	mov	r0, r4
   1464c:	ldr	r5, [sp, #120]	; 0x78
   14650:	str	r1, [sp, #116]	; 0x74
   14654:	mov	r1, r5
   14658:	ldr	r6, [sp, #116]	; 0x74
   1465c:	str	r6, [sp]
   14660:	str	lr, [sp, #4]
   14664:	str	ip, [sp, #8]
   14668:	bl	10eec <fprintf@plt>
   1466c:	str	r0, [sp, #112]	; 0x70
   14670:	b	1495c <__assert_fail@plt+0x39c8>
   14674:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14678:	movw	r1, #50879	; 0xc6bf
   1467c:	movt	r1, #1
   14680:	str	r0, [sp, #108]	; 0x6c
   14684:	mov	r0, r1
   14688:	bl	10ec8 <gettext@plt>
   1468c:	ldr	r1, [fp, #8]
   14690:	ldr	r2, [r1]
   14694:	ldr	r1, [fp, #8]
   14698:	ldr	r3, [r1, #4]
   1469c:	ldr	r1, [fp, #8]
   146a0:	ldr	r1, [r1, #8]
   146a4:	ldr	lr, [fp, #8]
   146a8:	ldr	lr, [lr, #12]
   146ac:	ldr	ip, [fp, #8]
   146b0:	ldr	ip, [ip, #16]
   146b4:	ldr	r4, [fp, #8]
   146b8:	ldr	r4, [r4, #20]
   146bc:	ldr	r5, [sp, #108]	; 0x6c
   146c0:	str	r0, [sp, #104]	; 0x68
   146c4:	mov	r0, r5
   146c8:	ldr	r6, [sp, #104]	; 0x68
   146cc:	str	r1, [sp, #100]	; 0x64
   146d0:	mov	r1, r6
   146d4:	ldr	r7, [sp, #100]	; 0x64
   146d8:	str	r7, [sp]
   146dc:	str	lr, [sp, #4]
   146e0:	str	ip, [sp, #8]
   146e4:	str	r4, [sp, #12]
   146e8:	bl	10eec <fprintf@plt>
   146ec:	str	r0, [sp, #96]	; 0x60
   146f0:	b	1495c <__assert_fail@plt+0x39c8>
   146f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   146f8:	movw	r1, #50919	; 0xc6e7
   146fc:	movt	r1, #1
   14700:	str	r0, [sp, #92]	; 0x5c
   14704:	mov	r0, r1
   14708:	bl	10ec8 <gettext@plt>
   1470c:	ldr	r1, [fp, #8]
   14710:	ldr	r2, [r1]
   14714:	ldr	r1, [fp, #8]
   14718:	ldr	r3, [r1, #4]
   1471c:	ldr	r1, [fp, #8]
   14720:	ldr	r1, [r1, #8]
   14724:	ldr	lr, [fp, #8]
   14728:	ldr	lr, [lr, #12]
   1472c:	ldr	ip, [fp, #8]
   14730:	ldr	ip, [ip, #16]
   14734:	ldr	r4, [fp, #8]
   14738:	ldr	r4, [r4, #20]
   1473c:	ldr	r5, [fp, #8]
   14740:	ldr	r5, [r5, #24]
   14744:	ldr	r6, [sp, #92]	; 0x5c
   14748:	str	r0, [sp, #88]	; 0x58
   1474c:	mov	r0, r6
   14750:	ldr	r7, [sp, #88]	; 0x58
   14754:	str	r1, [sp, #84]	; 0x54
   14758:	mov	r1, r7
   1475c:	ldr	r8, [sp, #84]	; 0x54
   14760:	str	r8, [sp]
   14764:	str	lr, [sp, #4]
   14768:	str	ip, [sp, #8]
   1476c:	str	r4, [sp, #12]
   14770:	str	r5, [sp, #16]
   14774:	bl	10eec <fprintf@plt>
   14778:	str	r0, [sp, #80]	; 0x50
   1477c:	b	1495c <__assert_fail@plt+0x39c8>
   14780:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14784:	movw	r1, #50963	; 0xc713
   14788:	movt	r1, #1
   1478c:	str	r0, [sp, #76]	; 0x4c
   14790:	mov	r0, r1
   14794:	bl	10ec8 <gettext@plt>
   14798:	ldr	r1, [fp, #8]
   1479c:	ldr	r2, [r1]
   147a0:	ldr	r1, [fp, #8]
   147a4:	ldr	r3, [r1, #4]
   147a8:	ldr	r1, [fp, #8]
   147ac:	ldr	r1, [r1, #8]
   147b0:	ldr	lr, [fp, #8]
   147b4:	ldr	lr, [lr, #12]
   147b8:	ldr	ip, [fp, #8]
   147bc:	ldr	ip, [ip, #16]
   147c0:	ldr	r4, [fp, #8]
   147c4:	ldr	r4, [r4, #20]
   147c8:	ldr	r5, [fp, #8]
   147cc:	ldr	r5, [r5, #24]
   147d0:	ldr	r6, [fp, #8]
   147d4:	ldr	r6, [r6, #28]
   147d8:	ldr	r7, [sp, #76]	; 0x4c
   147dc:	str	r0, [sp, #72]	; 0x48
   147e0:	mov	r0, r7
   147e4:	ldr	r8, [sp, #72]	; 0x48
   147e8:	str	r1, [sp, #68]	; 0x44
   147ec:	mov	r1, r8
   147f0:	ldr	r9, [sp, #68]	; 0x44
   147f4:	str	r9, [sp]
   147f8:	str	lr, [sp, #4]
   147fc:	str	ip, [sp, #8]
   14800:	str	r4, [sp, #12]
   14804:	str	r5, [sp, #16]
   14808:	str	r6, [sp, #20]
   1480c:	bl	10eec <fprintf@plt>
   14810:	str	r0, [sp, #64]	; 0x40
   14814:	b	1495c <__assert_fail@plt+0x39c8>
   14818:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1481c:	movw	r1, #51011	; 0xc743
   14820:	movt	r1, #1
   14824:	str	r0, [sp, #60]	; 0x3c
   14828:	mov	r0, r1
   1482c:	bl	10ec8 <gettext@plt>
   14830:	ldr	r1, [fp, #8]
   14834:	ldr	r2, [r1]
   14838:	ldr	r1, [fp, #8]
   1483c:	ldr	r3, [r1, #4]
   14840:	ldr	r1, [fp, #8]
   14844:	ldr	r1, [r1, #8]
   14848:	ldr	lr, [fp, #8]
   1484c:	ldr	lr, [lr, #12]
   14850:	ldr	ip, [fp, #8]
   14854:	ldr	ip, [ip, #16]
   14858:	ldr	r4, [fp, #8]
   1485c:	ldr	r4, [r4, #20]
   14860:	ldr	r5, [fp, #8]
   14864:	ldr	r5, [r5, #24]
   14868:	ldr	r6, [fp, #8]
   1486c:	ldr	r6, [r6, #28]
   14870:	ldr	r7, [fp, #8]
   14874:	ldr	r7, [r7, #32]
   14878:	ldr	r8, [sp, #60]	; 0x3c
   1487c:	str	r0, [sp, #56]	; 0x38
   14880:	mov	r0, r8
   14884:	ldr	r9, [sp, #56]	; 0x38
   14888:	str	r1, [sp, #52]	; 0x34
   1488c:	mov	r1, r9
   14890:	ldr	sl, [sp, #52]	; 0x34
   14894:	str	sl, [sp]
   14898:	str	lr, [sp, #4]
   1489c:	str	ip, [sp, #8]
   148a0:	str	r4, [sp, #12]
   148a4:	str	r5, [sp, #16]
   148a8:	str	r6, [sp, #20]
   148ac:	str	r7, [sp, #24]
   148b0:	bl	10eec <fprintf@plt>
   148b4:	str	r0, [sp, #48]	; 0x30
   148b8:	b	1495c <__assert_fail@plt+0x39c8>
   148bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   148c0:	movw	r1, #51063	; 0xc777
   148c4:	movt	r1, #1
   148c8:	str	r0, [sp, #44]	; 0x2c
   148cc:	mov	r0, r1
   148d0:	bl	10ec8 <gettext@plt>
   148d4:	ldr	r1, [fp, #8]
   148d8:	ldr	r2, [r1]
   148dc:	ldr	r1, [fp, #8]
   148e0:	ldr	r3, [r1, #4]
   148e4:	ldr	r1, [fp, #8]
   148e8:	ldr	r1, [r1, #8]
   148ec:	ldr	lr, [fp, #8]
   148f0:	ldr	lr, [lr, #12]
   148f4:	ldr	ip, [fp, #8]
   148f8:	ldr	ip, [ip, #16]
   148fc:	ldr	r4, [fp, #8]
   14900:	ldr	r4, [r4, #20]
   14904:	ldr	r5, [fp, #8]
   14908:	ldr	r5, [r5, #24]
   1490c:	ldr	r6, [fp, #8]
   14910:	ldr	r6, [r6, #28]
   14914:	ldr	r7, [fp, #8]
   14918:	ldr	r7, [r7, #32]
   1491c:	ldr	r8, [sp, #44]	; 0x2c
   14920:	str	r0, [sp, #40]	; 0x28
   14924:	mov	r0, r8
   14928:	ldr	r9, [sp, #40]	; 0x28
   1492c:	str	r1, [sp, #36]	; 0x24
   14930:	mov	r1, r9
   14934:	ldr	sl, [sp, #36]	; 0x24
   14938:	str	sl, [sp]
   1493c:	str	lr, [sp, #4]
   14940:	str	ip, [sp, #8]
   14944:	str	r4, [sp, #12]
   14948:	str	r5, [sp, #16]
   1494c:	str	r6, [sp, #20]
   14950:	str	r7, [sp, #24]
   14954:	bl	10eec <fprintf@plt>
   14958:	str	r0, [sp, #32]
   1495c:	sub	sp, fp, #28
   14960:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14964:	push	{fp, lr}
   14968:	mov	fp, sp
   1496c:	sub	sp, sp, #32
   14970:	ldr	ip, [fp, #8]
   14974:	str	r0, [fp, #-4]
   14978:	str	r1, [fp, #-8]
   1497c:	str	r2, [fp, #-12]
   14980:	str	r3, [sp, #16]
   14984:	movw	r0, #0
   14988:	str	r0, [sp, #12]
   1498c:	str	ip, [sp, #8]
   14990:	ldr	r0, [fp, #8]
   14994:	ldr	r1, [sp, #12]
   14998:	add	r0, r0, r1, lsl #2
   1499c:	ldr	r0, [r0]
   149a0:	movw	r1, #0
   149a4:	cmp	r0, r1
   149a8:	beq	149c0 <__assert_fail@plt+0x3a2c>
   149ac:	b	149b0 <__assert_fail@plt+0x3a1c>
   149b0:	ldr	r0, [sp, #12]
   149b4:	add	r0, r0, #1
   149b8:	str	r0, [sp, #12]
   149bc:	b	14990 <__assert_fail@plt+0x39fc>
   149c0:	ldr	r0, [fp, #-4]
   149c4:	ldr	r1, [fp, #-8]
   149c8:	ldr	r2, [fp, #-12]
   149cc:	ldr	r3, [sp, #16]
   149d0:	ldr	ip, [fp, #8]
   149d4:	ldr	lr, [sp, #12]
   149d8:	str	ip, [sp]
   149dc:	str	lr, [sp, #4]
   149e0:	bl	14340 <__assert_fail@plt+0x33ac>
   149e4:	mov	sp, fp
   149e8:	pop	{fp, pc}
   149ec:	push	{fp, lr}
   149f0:	mov	fp, sp
   149f4:	sub	sp, sp, #80	; 0x50
   149f8:	ldr	ip, [fp, #8]
   149fc:	str	ip, [fp, #-4]
   14a00:	str	r0, [fp, #-8]
   14a04:	str	r1, [fp, #-12]
   14a08:	str	r2, [fp, #-16]
   14a0c:	str	r3, [fp, #-20]	; 0xffffffec
   14a10:	movw	r0, #0
   14a14:	str	r0, [fp, #-24]	; 0xffffffe8
   14a18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14a1c:	cmp	r0, #10
   14a20:	movw	r0, #0
   14a24:	str	r0, [sp, #12]
   14a28:	bcs	14a60 <__assert_fail@plt+0x3acc>
   14a2c:	ldr	r0, [fp, #-4]
   14a30:	add	r1, r0, #4
   14a34:	str	r1, [fp, #-4]
   14a38:	ldr	r0, [r0]
   14a3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14a40:	add	r2, sp, #16
   14a44:	add	r1, r2, r1, lsl #2
   14a48:	str	r0, [r1]
   14a4c:	movw	r1, #0
   14a50:	cmp	r0, r1
   14a54:	movw	r0, #0
   14a58:	movne	r0, #1
   14a5c:	str	r0, [sp, #12]
   14a60:	ldr	r0, [sp, #12]
   14a64:	tst	r0, #1
   14a68:	beq	14a80 <__assert_fail@plt+0x3aec>
   14a6c:	b	14a70 <__assert_fail@plt+0x3adc>
   14a70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14a74:	add	r0, r0, #1
   14a78:	str	r0, [fp, #-24]	; 0xffffffe8
   14a7c:	b	14a18 <__assert_fail@plt+0x3a84>
   14a80:	add	r0, sp, #16
   14a84:	ldr	r1, [fp, #-8]
   14a88:	ldr	r2, [fp, #-12]
   14a8c:	ldr	r3, [fp, #-16]
   14a90:	ldr	ip, [fp, #-20]	; 0xffffffec
   14a94:	ldr	lr, [fp, #-24]	; 0xffffffe8
   14a98:	str	r0, [sp, #8]
   14a9c:	mov	r0, r1
   14aa0:	mov	r1, r2
   14aa4:	mov	r2, r3
   14aa8:	mov	r3, ip
   14aac:	ldr	ip, [sp, #8]
   14ab0:	str	ip, [sp]
   14ab4:	str	lr, [sp, #4]
   14ab8:	bl	14340 <__assert_fail@plt+0x33ac>
   14abc:	mov	sp, fp
   14ac0:	pop	{fp, pc}
   14ac4:	push	{fp, lr}
   14ac8:	mov	fp, sp
   14acc:	sub	sp, sp, #32
   14ad0:	str	r0, [fp, #-4]
   14ad4:	str	r1, [fp, #-8]
   14ad8:	str	r2, [fp, #-12]
   14adc:	str	r3, [sp, #16]
   14ae0:	add	r0, fp, #8
   14ae4:	str	r0, [sp, #12]
   14ae8:	ldr	r0, [fp, #-4]
   14aec:	ldr	r1, [fp, #-8]
   14af0:	ldr	r2, [fp, #-12]
   14af4:	ldr	r3, [sp, #16]
   14af8:	ldr	ip, [sp, #12]
   14afc:	mov	lr, sp
   14b00:	str	ip, [lr]
   14b04:	bl	149ec <__assert_fail@plt+0x3a58>
   14b08:	add	r0, sp, #12
   14b0c:	str	r0, [sp, #8]
   14b10:	mov	sp, fp
   14b14:	pop	{fp, pc}
   14b18:	push	{fp, lr}
   14b1c:	mov	fp, sp
   14b20:	sub	sp, sp, #16
   14b24:	movw	r0, #53564	; 0xd13c
   14b28:	movt	r0, #2
   14b2c:	ldr	r1, [r0]
   14b30:	movw	r0, #50081	; 0xc3a1
   14b34:	movt	r0, #1
   14b38:	bl	10d60 <fputs_unlocked@plt>
   14b3c:	movw	r1, #51123	; 0xc7b3
   14b40:	movt	r1, #1
   14b44:	str	r0, [fp, #-4]
   14b48:	mov	r0, r1
   14b4c:	bl	10ec8 <gettext@plt>
   14b50:	movw	r1, #51143	; 0xc7c7
   14b54:	movt	r1, #1
   14b58:	bl	10d90 <printf@plt>
   14b5c:	movw	r1, #51165	; 0xc7dd
   14b60:	movt	r1, #1
   14b64:	str	r0, [sp, #8]
   14b68:	mov	r0, r1
   14b6c:	bl	10ec8 <gettext@plt>
   14b70:	movw	r1, #49558	; 0xc196
   14b74:	movt	r1, #1
   14b78:	movw	r2, #49890	; 0xc2e2
   14b7c:	movt	r2, #1
   14b80:	bl	10d90 <printf@plt>
   14b84:	movw	r1, #51185	; 0xc7f1
   14b88:	movt	r1, #1
   14b8c:	str	r0, [sp, #4]
   14b90:	mov	r0, r1
   14b94:	bl	10ec8 <gettext@plt>
   14b98:	movw	r1, #51224	; 0xc818
   14b9c:	movt	r1, #1
   14ba0:	bl	10d90 <printf@plt>
   14ba4:	str	r0, [sp]
   14ba8:	mov	sp, fp
   14bac:	pop	{fp, pc}
   14bb0:	push	{fp, lr}
   14bb4:	mov	fp, sp
   14bb8:	sub	sp, sp, #16
   14bbc:	str	r0, [fp, #-4]
   14bc0:	str	r1, [sp, #8]
   14bc4:	str	r2, [sp, #4]
   14bc8:	ldr	r0, [fp, #-4]
   14bcc:	ldr	r1, [sp, #8]
   14bd0:	ldr	r2, [sp, #4]
   14bd4:	bl	14be0 <__assert_fail@plt+0x3c4c>
   14bd8:	mov	sp, fp
   14bdc:	pop	{fp, pc}
   14be0:	push	{fp, lr}
   14be4:	mov	fp, sp
   14be8:	sub	sp, sp, #16
   14bec:	str	r0, [fp, #-4]
   14bf0:	str	r1, [sp, #8]
   14bf4:	str	r2, [sp, #4]
   14bf8:	ldr	r0, [fp, #-4]
   14bfc:	ldr	r1, [sp, #8]
   14c00:	ldr	r2, [sp, #4]
   14c04:	bl	1a04c <__assert_fail@plt+0x90b8>
   14c08:	str	r0, [sp]
   14c0c:	ldr	r0, [sp]
   14c10:	movw	r1, #0
   14c14:	cmp	r0, r1
   14c18:	bne	14c48 <__assert_fail@plt+0x3cb4>
   14c1c:	ldr	r0, [fp, #-4]
   14c20:	movw	r1, #0
   14c24:	cmp	r0, r1
   14c28:	beq	14c44 <__assert_fail@plt+0x3cb0>
   14c2c:	ldr	r0, [sp, #8]
   14c30:	cmp	r0, #0
   14c34:	beq	14c48 <__assert_fail@plt+0x3cb4>
   14c38:	ldr	r0, [sp, #4]
   14c3c:	cmp	r0, #0
   14c40:	beq	14c48 <__assert_fail@plt+0x3cb4>
   14c44:	bl	17a30 <__assert_fail@plt+0x6a9c>
   14c48:	ldr	r0, [sp]
   14c4c:	mov	sp, fp
   14c50:	pop	{fp, pc}
   14c54:	push	{fp, lr}
   14c58:	mov	fp, sp
   14c5c:	sub	sp, sp, #8
   14c60:	str	r0, [sp, #4]
   14c64:	ldr	r0, [sp, #4]
   14c68:	bl	197e8 <__assert_fail@plt+0x8854>
   14c6c:	bl	14c78 <__assert_fail@plt+0x3ce4>
   14c70:	mov	sp, fp
   14c74:	pop	{fp, pc}
   14c78:	push	{fp, lr}
   14c7c:	mov	fp, sp
   14c80:	sub	sp, sp, #8
   14c84:	str	r0, [sp, #4]
   14c88:	ldr	r0, [sp, #4]
   14c8c:	movw	r1, #0
   14c90:	cmp	r0, r1
   14c94:	bne	14c9c <__assert_fail@plt+0x3d08>
   14c98:	bl	17a30 <__assert_fail@plt+0x6a9c>
   14c9c:	ldr	r0, [sp, #4]
   14ca0:	mov	sp, fp
   14ca4:	pop	{fp, pc}
   14ca8:	push	{fp, lr}
   14cac:	mov	fp, sp
   14cb0:	sub	sp, sp, #8
   14cb4:	str	r0, [sp, #4]
   14cb8:	ldr	r0, [sp, #4]
   14cbc:	bl	19d88 <__assert_fail@plt+0x8df4>
   14cc0:	bl	14c78 <__assert_fail@plt+0x3ce4>
   14cc4:	mov	sp, fp
   14cc8:	pop	{fp, pc}
   14ccc:	push	{fp, lr}
   14cd0:	mov	fp, sp
   14cd4:	sub	sp, sp, #8
   14cd8:	str	r0, [sp, #4]
   14cdc:	ldr	r0, [sp, #4]
   14ce0:	bl	14c54 <__assert_fail@plt+0x3cc0>
   14ce4:	mov	sp, fp
   14ce8:	pop	{fp, pc}
   14cec:	push	{fp, lr}
   14cf0:	mov	fp, sp
   14cf4:	sub	sp, sp, #16
   14cf8:	str	r0, [fp, #-4]
   14cfc:	str	r1, [sp, #8]
   14d00:	ldr	r0, [fp, #-4]
   14d04:	ldr	r1, [sp, #8]
   14d08:	bl	19858 <__assert_fail@plt+0x88c4>
   14d0c:	str	r0, [sp, #4]
   14d10:	ldr	r0, [sp, #4]
   14d14:	movw	r1, #0
   14d18:	cmp	r0, r1
   14d1c:	bne	14d40 <__assert_fail@plt+0x3dac>
   14d20:	ldr	r0, [fp, #-4]
   14d24:	movw	r1, #0
   14d28:	cmp	r0, r1
   14d2c:	beq	14d3c <__assert_fail@plt+0x3da8>
   14d30:	ldr	r0, [sp, #8]
   14d34:	cmp	r0, #0
   14d38:	beq	14d40 <__assert_fail@plt+0x3dac>
   14d3c:	bl	17a30 <__assert_fail@plt+0x6a9c>
   14d40:	ldr	r0, [sp, #4]
   14d44:	mov	sp, fp
   14d48:	pop	{fp, pc}
   14d4c:	push	{fp, lr}
   14d50:	mov	fp, sp
   14d54:	sub	sp, sp, #8
   14d58:	str	r0, [sp, #4]
   14d5c:	str	r1, [sp]
   14d60:	ldr	r0, [sp, #4]
   14d64:	ldr	r1, [sp]
   14d68:	bl	19dc8 <__assert_fail@plt+0x8e34>
   14d6c:	bl	14c78 <__assert_fail@plt+0x3ce4>
   14d70:	mov	sp, fp
   14d74:	pop	{fp, pc}
   14d78:	push	{fp, lr}
   14d7c:	mov	fp, sp
   14d80:	sub	sp, sp, #16
   14d84:	str	r0, [fp, #-4]
   14d88:	str	r1, [sp, #8]
   14d8c:	str	r2, [sp, #4]
   14d90:	ldr	r0, [fp, #-4]
   14d94:	ldr	r1, [sp, #8]
   14d98:	ldr	r2, [sp, #4]
   14d9c:	bl	19ec0 <__assert_fail@plt+0x8f2c>
   14da0:	bl	14c78 <__assert_fail@plt+0x3ce4>
   14da4:	mov	sp, fp
   14da8:	pop	{fp, pc}
   14dac:	push	{fp, lr}
   14db0:	mov	fp, sp
   14db4:	sub	sp, sp, #8
   14db8:	str	r0, [sp, #4]
   14dbc:	str	r1, [sp]
   14dc0:	ldr	r1, [sp, #4]
   14dc4:	ldr	r2, [sp]
   14dc8:	movw	r0, #0
   14dcc:	bl	14be0 <__assert_fail@plt+0x3c4c>
   14dd0:	mov	sp, fp
   14dd4:	pop	{fp, pc}
   14dd8:	push	{fp, lr}
   14ddc:	mov	fp, sp
   14de0:	sub	sp, sp, #8
   14de4:	str	r0, [sp, #4]
   14de8:	str	r1, [sp]
   14dec:	ldr	r1, [sp, #4]
   14df0:	ldr	r2, [sp]
   14df4:	movw	r0, #0
   14df8:	bl	14d78 <__assert_fail@plt+0x3de4>
   14dfc:	mov	sp, fp
   14e00:	pop	{fp, pc}
   14e04:	push	{fp, lr}
   14e08:	mov	fp, sp
   14e0c:	sub	sp, sp, #8
   14e10:	str	r0, [sp, #4]
   14e14:	str	r1, [sp]
   14e18:	ldr	r0, [sp, #4]
   14e1c:	ldr	r1, [sp]
   14e20:	movw	r2, #1
   14e24:	bl	14e30 <__assert_fail@plt+0x3e9c>
   14e28:	mov	sp, fp
   14e2c:	pop	{fp, pc}
   14e30:	push	{fp, lr}
   14e34:	mov	fp, sp
   14e38:	sub	sp, sp, #16
   14e3c:	str	r0, [fp, #-4]
   14e40:	str	r1, [sp, #8]
   14e44:	str	r2, [sp, #4]
   14e48:	ldr	r0, [sp, #8]
   14e4c:	ldr	r0, [r0]
   14e50:	str	r0, [sp]
   14e54:	ldr	r0, [fp, #-4]
   14e58:	movw	r1, #0
   14e5c:	cmp	r0, r1
   14e60:	bne	14eac <__assert_fail@plt+0x3f18>
   14e64:	ldr	r0, [sp]
   14e68:	cmp	r0, #0
   14e6c:	bne	14ea8 <__assert_fail@plt+0x3f14>
   14e70:	ldr	r0, [sp, #4]
   14e74:	movw	r1, #64	; 0x40
   14e78:	udiv	r0, r1, r0
   14e7c:	str	r0, [sp]
   14e80:	ldr	r0, [sp]
   14e84:	cmp	r0, #0
   14e88:	movw	r0, #0
   14e8c:	movne	r0, #1
   14e90:	mvn	r1, #0
   14e94:	eor	r0, r0, r1
   14e98:	and	r0, r0, #1
   14e9c:	ldr	r1, [sp]
   14ea0:	add	r0, r1, r0
   14ea4:	str	r0, [sp]
   14ea8:	b	14edc <__assert_fail@plt+0x3f48>
   14eac:	ldr	r0, [sp]
   14eb0:	ldr	r1, [sp]
   14eb4:	lsr	r1, r1, #1
   14eb8:	add	r1, r1, #1
   14ebc:	adds	r0, r0, r1
   14ec0:	mov	r1, #0
   14ec4:	adc	r1, r1, #0
   14ec8:	str	r0, [sp]
   14ecc:	tst	r1, #1
   14ed0:	beq	14ed8 <__assert_fail@plt+0x3f44>
   14ed4:	bl	17a30 <__assert_fail@plt+0x6a9c>
   14ed8:	b	14edc <__assert_fail@plt+0x3f48>
   14edc:	ldr	r0, [fp, #-4]
   14ee0:	ldr	r1, [sp]
   14ee4:	ldr	r2, [sp, #4]
   14ee8:	bl	14be0 <__assert_fail@plt+0x3c4c>
   14eec:	str	r0, [fp, #-4]
   14ef0:	ldr	r0, [sp]
   14ef4:	ldr	r1, [sp, #8]
   14ef8:	str	r0, [r1]
   14efc:	ldr	r0, [fp, #-4]
   14f00:	mov	sp, fp
   14f04:	pop	{fp, pc}
   14f08:	push	{fp, lr}
   14f0c:	mov	fp, sp
   14f10:	sub	sp, sp, #376	; 0x178
   14f14:	ldr	ip, [fp, #8]
   14f18:	str	r0, [fp, #-4]
   14f1c:	str	r1, [fp, #-8]
   14f20:	str	r2, [fp, #-12]
   14f24:	str	r3, [fp, #-16]
   14f28:	ldr	r0, [fp, #-8]
   14f2c:	ldr	r0, [r0]
   14f30:	str	r0, [fp, #-20]	; 0xffffffec
   14f34:	ldr	r0, [fp, #-20]	; 0xffffffec
   14f38:	ldr	r1, [fp, #-20]	; 0xffffffec
   14f3c:	asr	r1, r1, #1
   14f40:	add	r1, r0, r1
   14f44:	mov	r2, #1
   14f48:	cmp	r1, r0
   14f4c:	movwvc	r2, #0
   14f50:	str	r1, [fp, #-24]	; 0xffffffe8
   14f54:	tst	r2, #1
   14f58:	str	ip, [fp, #-36]	; 0xffffffdc
   14f5c:	beq	14f68 <__assert_fail@plt+0x3fd4>
   14f60:	ldr	r0, [pc, #4044]	; 15f34 <__assert_fail@plt+0x4fa0>
   14f64:	str	r0, [fp, #-24]	; 0xffffffe8
   14f68:	ldr	r0, [fp, #-16]
   14f6c:	movw	r1, #0
   14f70:	cmp	r1, r0
   14f74:	bgt	14f90 <__assert_fail@plt+0x3ffc>
   14f78:	ldr	r0, [fp, #-16]
   14f7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14f80:	cmp	r0, r1
   14f84:	bge	14f90 <__assert_fail@plt+0x3ffc>
   14f88:	ldr	r0, [fp, #-16]
   14f8c:	str	r0, [fp, #-24]	; 0xffffffe8
   14f90:	b	15368 <__assert_fail@plt+0x43d4>
   14f94:	b	14f98 <__assert_fail@plt+0x4004>
   14f98:	ldr	r0, [fp, #8]
   14f9c:	cmp	r0, #0
   14fa0:	bge	150b4 <__assert_fail@plt+0x4120>
   14fa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14fa8:	cmp	r0, #0
   14fac:	bge	15038 <__assert_fail@plt+0x40a4>
   14fb0:	b	14fb4 <__assert_fail@plt+0x4020>
   14fb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14fb8:	ldr	r1, [fp, #8]
   14fbc:	movw	r2, #127	; 0x7f
   14fc0:	sdiv	r1, r2, r1
   14fc4:	cmp	r0, r1
   14fc8:	blt	15154 <__assert_fail@plt+0x41c0>
   14fcc:	b	1516c <__assert_fail@plt+0x41d8>
   14fd0:	b	14fd4 <__assert_fail@plt+0x4040>
   14fd4:	ldr	r0, [pc, #4076]	; 15fc8 <__assert_fail@plt+0x5034>
   14fd8:	ldr	r1, [fp, #8]
   14fdc:	cmp	r1, r0
   14fe0:	blt	14ff8 <__assert_fail@plt+0x4064>
   14fe4:	b	15004 <__assert_fail@plt+0x4070>
   14fe8:	ldr	r0, [fp, #8]
   14fec:	movw	r1, #0
   14ff0:	cmp	r1, r0
   14ff4:	bge	15004 <__assert_fail@plt+0x4070>
   14ff8:	movw	r0, #0
   14ffc:	str	r0, [fp, #-40]	; 0xffffffd8
   15000:	b	1501c <__assert_fail@plt+0x4088>
   15004:	ldr	r0, [fp, #8]
   15008:	movw	r1, #0
   1500c:	sub	r0, r1, r0
   15010:	movw	r1, #127	; 0x7f
   15014:	sdiv	r0, r1, r0
   15018:	str	r0, [fp, #-40]	; 0xffffffd8
   1501c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15020:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15024:	mvn	r2, #0
   15028:	sub	r1, r2, r1
   1502c:	cmp	r0, r1
   15030:	ble	15154 <__assert_fail@plt+0x41c0>
   15034:	b	1516c <__assert_fail@plt+0x41d8>
   15038:	b	1503c <__assert_fail@plt+0x40a8>
   1503c:	b	15098 <__assert_fail@plt+0x4104>
   15040:	b	15098 <__assert_fail@plt+0x4104>
   15044:	ldr	r0, [fp, #8]
   15048:	cmn	r0, #1
   1504c:	bne	15098 <__assert_fail@plt+0x4104>
   15050:	b	15054 <__assert_fail@plt+0x40c0>
   15054:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15058:	mvn	r1, #127	; 0x7f
   1505c:	add	r0, r0, r1
   15060:	movw	r1, #0
   15064:	cmp	r1, r0
   15068:	blt	15154 <__assert_fail@plt+0x41c0>
   1506c:	b	1516c <__assert_fail@plt+0x41d8>
   15070:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15074:	movw	r1, #0
   15078:	cmp	r1, r0
   1507c:	bge	1516c <__assert_fail@plt+0x41d8>
   15080:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15084:	sub	r0, r0, #1
   15088:	movw	r1, #127	; 0x7f
   1508c:	cmp	r1, r0
   15090:	blt	15154 <__assert_fail@plt+0x41c0>
   15094:	b	1516c <__assert_fail@plt+0x41d8>
   15098:	ldr	r0, [fp, #8]
   1509c:	mvn	r1, #127	; 0x7f
   150a0:	sdiv	r0, r1, r0
   150a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   150a8:	cmp	r0, r1
   150ac:	blt	15154 <__assert_fail@plt+0x41c0>
   150b0:	b	1516c <__assert_fail@plt+0x41d8>
   150b4:	ldr	r0, [fp, #8]
   150b8:	cmp	r0, #0
   150bc:	bne	150c4 <__assert_fail@plt+0x4130>
   150c0:	b	1516c <__assert_fail@plt+0x41d8>
   150c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   150c8:	cmp	r0, #0
   150cc:	bge	1513c <__assert_fail@plt+0x41a8>
   150d0:	b	150d4 <__assert_fail@plt+0x4140>
   150d4:	b	15120 <__assert_fail@plt+0x418c>
   150d8:	b	15120 <__assert_fail@plt+0x418c>
   150dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   150e0:	cmn	r0, #1
   150e4:	bne	15120 <__assert_fail@plt+0x418c>
   150e8:	b	150ec <__assert_fail@plt+0x4158>
   150ec:	ldr	r0, [fp, #8]
   150f0:	mvn	r1, #127	; 0x7f
   150f4:	add	r0, r0, r1
   150f8:	movw	r1, #0
   150fc:	cmp	r1, r0
   15100:	blt	15154 <__assert_fail@plt+0x41c0>
   15104:	b	1516c <__assert_fail@plt+0x41d8>
   15108:	ldr	r0, [fp, #8]
   1510c:	sub	r0, r0, #1
   15110:	movw	r1, #127	; 0x7f
   15114:	cmp	r1, r0
   15118:	blt	15154 <__assert_fail@plt+0x41c0>
   1511c:	b	1516c <__assert_fail@plt+0x41d8>
   15120:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15124:	mvn	r1, #127	; 0x7f
   15128:	sdiv	r0, r1, r0
   1512c:	ldr	r1, [fp, #8]
   15130:	cmp	r0, r1
   15134:	blt	15154 <__assert_fail@plt+0x41c0>
   15138:	b	1516c <__assert_fail@plt+0x41d8>
   1513c:	ldr	r0, [fp, #8]
   15140:	movw	r1, #127	; 0x7f
   15144:	sdiv	r0, r1, r0
   15148:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1514c:	cmp	r0, r1
   15150:	bge	1516c <__assert_fail@plt+0x41d8>
   15154:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15158:	ldr	r1, [fp, #8]
   1515c:	mul	r0, r0, r1
   15160:	sxtb	r0, r0
   15164:	str	r0, [fp, #-28]	; 0xffffffe4
   15168:	b	16380 <__assert_fail@plt+0x53ec>
   1516c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15170:	ldr	r1, [fp, #8]
   15174:	mul	r0, r0, r1
   15178:	sxtb	r0, r0
   1517c:	str	r0, [fp, #-28]	; 0xffffffe4
   15180:	b	16390 <__assert_fail@plt+0x53fc>
   15184:	ldr	r0, [fp, #8]
   15188:	cmp	r0, #0
   1518c:	bge	1529c <__assert_fail@plt+0x4308>
   15190:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15194:	cmp	r0, #0
   15198:	bge	15224 <__assert_fail@plt+0x4290>
   1519c:	b	151a0 <__assert_fail@plt+0x420c>
   151a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   151a4:	ldr	r1, [fp, #8]
   151a8:	movw	r2, #255	; 0xff
   151ac:	sdiv	r1, r2, r1
   151b0:	cmp	r0, r1
   151b4:	blt	15338 <__assert_fail@plt+0x43a4>
   151b8:	b	15350 <__assert_fail@plt+0x43bc>
   151bc:	b	151c0 <__assert_fail@plt+0x422c>
   151c0:	ldr	r0, [pc, #3584]	; 15fc8 <__assert_fail@plt+0x5034>
   151c4:	ldr	r1, [fp, #8]
   151c8:	cmp	r1, r0
   151cc:	blt	151e4 <__assert_fail@plt+0x4250>
   151d0:	b	151f0 <__assert_fail@plt+0x425c>
   151d4:	ldr	r0, [fp, #8]
   151d8:	movw	r1, #0
   151dc:	cmp	r1, r0
   151e0:	bge	151f0 <__assert_fail@plt+0x425c>
   151e4:	movw	r0, #0
   151e8:	str	r0, [fp, #-44]	; 0xffffffd4
   151ec:	b	15208 <__assert_fail@plt+0x4274>
   151f0:	ldr	r0, [fp, #8]
   151f4:	movw	r1, #0
   151f8:	sub	r0, r1, r0
   151fc:	movw	r1, #255	; 0xff
   15200:	sdiv	r0, r1, r0
   15204:	str	r0, [fp, #-44]	; 0xffffffd4
   15208:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1520c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15210:	mvn	r2, #0
   15214:	sub	r1, r2, r1
   15218:	cmp	r0, r1
   1521c:	ble	15338 <__assert_fail@plt+0x43a4>
   15220:	b	15350 <__assert_fail@plt+0x43bc>
   15224:	b	15228 <__assert_fail@plt+0x4294>
   15228:	b	15280 <__assert_fail@plt+0x42ec>
   1522c:	b	15280 <__assert_fail@plt+0x42ec>
   15230:	ldr	r0, [fp, #8]
   15234:	cmn	r0, #1
   15238:	bne	15280 <__assert_fail@plt+0x42ec>
   1523c:	b	15240 <__assert_fail@plt+0x42ac>
   15240:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15244:	add	r0, r0, #0
   15248:	movw	r1, #0
   1524c:	cmp	r1, r0
   15250:	blt	15338 <__assert_fail@plt+0x43a4>
   15254:	b	15350 <__assert_fail@plt+0x43bc>
   15258:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1525c:	movw	r1, #0
   15260:	cmp	r1, r0
   15264:	bge	15350 <__assert_fail@plt+0x43bc>
   15268:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1526c:	sub	r0, r0, #1
   15270:	mvn	r1, #0
   15274:	cmp	r1, r0
   15278:	blt	15338 <__assert_fail@plt+0x43a4>
   1527c:	b	15350 <__assert_fail@plt+0x43bc>
   15280:	ldr	r0, [fp, #8]
   15284:	movw	r1, #0
   15288:	sdiv	r0, r1, r0
   1528c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15290:	cmp	r0, r1
   15294:	blt	15338 <__assert_fail@plt+0x43a4>
   15298:	b	15350 <__assert_fail@plt+0x43bc>
   1529c:	ldr	r0, [fp, #8]
   152a0:	cmp	r0, #0
   152a4:	bne	152ac <__assert_fail@plt+0x4318>
   152a8:	b	15350 <__assert_fail@plt+0x43bc>
   152ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   152b0:	cmp	r0, #0
   152b4:	bge	15320 <__assert_fail@plt+0x438c>
   152b8:	b	152bc <__assert_fail@plt+0x4328>
   152bc:	b	15304 <__assert_fail@plt+0x4370>
   152c0:	b	15304 <__assert_fail@plt+0x4370>
   152c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   152c8:	cmn	r0, #1
   152cc:	bne	15304 <__assert_fail@plt+0x4370>
   152d0:	b	152d4 <__assert_fail@plt+0x4340>
   152d4:	ldr	r0, [fp, #8]
   152d8:	add	r0, r0, #0
   152dc:	movw	r1, #0
   152e0:	cmp	r1, r0
   152e4:	blt	15338 <__assert_fail@plt+0x43a4>
   152e8:	b	15350 <__assert_fail@plt+0x43bc>
   152ec:	ldr	r0, [fp, #8]
   152f0:	sub	r0, r0, #1
   152f4:	mvn	r1, #0
   152f8:	cmp	r1, r0
   152fc:	blt	15338 <__assert_fail@plt+0x43a4>
   15300:	b	15350 <__assert_fail@plt+0x43bc>
   15304:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15308:	movw	r1, #0
   1530c:	sdiv	r0, r1, r0
   15310:	ldr	r1, [fp, #8]
   15314:	cmp	r0, r1
   15318:	blt	15338 <__assert_fail@plt+0x43a4>
   1531c:	b	15350 <__assert_fail@plt+0x43bc>
   15320:	ldr	r0, [fp, #8]
   15324:	movw	r1, #255	; 0xff
   15328:	sdiv	r0, r1, r0
   1532c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15330:	cmp	r0, r1
   15334:	bge	15350 <__assert_fail@plt+0x43bc>
   15338:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1533c:	ldr	r1, [fp, #8]
   15340:	mul	r0, r0, r1
   15344:	and	r0, r0, #255	; 0xff
   15348:	str	r0, [fp, #-28]	; 0xffffffe4
   1534c:	b	16380 <__assert_fail@plt+0x53ec>
   15350:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15354:	ldr	r1, [fp, #8]
   15358:	mul	r0, r0, r1
   1535c:	and	r0, r0, #255	; 0xff
   15360:	str	r0, [fp, #-28]	; 0xffffffe4
   15364:	b	16390 <__assert_fail@plt+0x53fc>
   15368:	b	15740 <__assert_fail@plt+0x47ac>
   1536c:	b	15370 <__assert_fail@plt+0x43dc>
   15370:	ldr	r0, [fp, #8]
   15374:	cmp	r0, #0
   15378:	bge	1548c <__assert_fail@plt+0x44f8>
   1537c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15380:	cmp	r0, #0
   15384:	bge	15410 <__assert_fail@plt+0x447c>
   15388:	b	1538c <__assert_fail@plt+0x43f8>
   1538c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15390:	ldr	r1, [fp, #8]
   15394:	movw	r2, #32767	; 0x7fff
   15398:	sdiv	r1, r2, r1
   1539c:	cmp	r0, r1
   153a0:	blt	1552c <__assert_fail@plt+0x4598>
   153a4:	b	15544 <__assert_fail@plt+0x45b0>
   153a8:	b	153ac <__assert_fail@plt+0x4418>
   153ac:	ldr	r0, [pc, #3092]	; 15fc8 <__assert_fail@plt+0x5034>
   153b0:	ldr	r1, [fp, #8]
   153b4:	cmp	r1, r0
   153b8:	blt	153d0 <__assert_fail@plt+0x443c>
   153bc:	b	153dc <__assert_fail@plt+0x4448>
   153c0:	ldr	r0, [fp, #8]
   153c4:	movw	r1, #0
   153c8:	cmp	r1, r0
   153cc:	bge	153dc <__assert_fail@plt+0x4448>
   153d0:	movw	r0, #0
   153d4:	str	r0, [fp, #-48]	; 0xffffffd0
   153d8:	b	153f4 <__assert_fail@plt+0x4460>
   153dc:	ldr	r0, [fp, #8]
   153e0:	movw	r1, #0
   153e4:	sub	r0, r1, r0
   153e8:	movw	r1, #32767	; 0x7fff
   153ec:	sdiv	r0, r1, r0
   153f0:	str	r0, [fp, #-48]	; 0xffffffd0
   153f4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   153f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   153fc:	mvn	r2, #0
   15400:	sub	r1, r2, r1
   15404:	cmp	r0, r1
   15408:	ble	1552c <__assert_fail@plt+0x4598>
   1540c:	b	15544 <__assert_fail@plt+0x45b0>
   15410:	b	15414 <__assert_fail@plt+0x4480>
   15414:	b	15470 <__assert_fail@plt+0x44dc>
   15418:	b	15470 <__assert_fail@plt+0x44dc>
   1541c:	ldr	r0, [fp, #8]
   15420:	cmn	r0, #1
   15424:	bne	15470 <__assert_fail@plt+0x44dc>
   15428:	b	1542c <__assert_fail@plt+0x4498>
   1542c:	ldr	r0, [pc, #3928]	; 1638c <__assert_fail@plt+0x53f8>
   15430:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15434:	add	r0, r1, r0
   15438:	movw	r1, #0
   1543c:	cmp	r1, r0
   15440:	blt	1552c <__assert_fail@plt+0x4598>
   15444:	b	15544 <__assert_fail@plt+0x45b0>
   15448:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1544c:	movw	r1, #0
   15450:	cmp	r1, r0
   15454:	bge	15544 <__assert_fail@plt+0x45b0>
   15458:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1545c:	sub	r0, r0, #1
   15460:	movw	r1, #32767	; 0x7fff
   15464:	cmp	r1, r0
   15468:	blt	1552c <__assert_fail@plt+0x4598>
   1546c:	b	15544 <__assert_fail@plt+0x45b0>
   15470:	ldr	r0, [pc, #3860]	; 1638c <__assert_fail@plt+0x53f8>
   15474:	ldr	r1, [fp, #8]
   15478:	sdiv	r0, r0, r1
   1547c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15480:	cmp	r0, r1
   15484:	blt	1552c <__assert_fail@plt+0x4598>
   15488:	b	15544 <__assert_fail@plt+0x45b0>
   1548c:	ldr	r0, [fp, #8]
   15490:	cmp	r0, #0
   15494:	bne	1549c <__assert_fail@plt+0x4508>
   15498:	b	15544 <__assert_fail@plt+0x45b0>
   1549c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   154a0:	cmp	r0, #0
   154a4:	bge	15514 <__assert_fail@plt+0x4580>
   154a8:	b	154ac <__assert_fail@plt+0x4518>
   154ac:	b	154f8 <__assert_fail@plt+0x4564>
   154b0:	b	154f8 <__assert_fail@plt+0x4564>
   154b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   154b8:	cmn	r0, #1
   154bc:	bne	154f8 <__assert_fail@plt+0x4564>
   154c0:	b	154c4 <__assert_fail@plt+0x4530>
   154c4:	ldr	r0, [pc, #3776]	; 1638c <__assert_fail@plt+0x53f8>
   154c8:	ldr	r1, [fp, #8]
   154cc:	add	r0, r1, r0
   154d0:	movw	r1, #0
   154d4:	cmp	r1, r0
   154d8:	blt	1552c <__assert_fail@plt+0x4598>
   154dc:	b	15544 <__assert_fail@plt+0x45b0>
   154e0:	ldr	r0, [fp, #8]
   154e4:	sub	r0, r0, #1
   154e8:	movw	r1, #32767	; 0x7fff
   154ec:	cmp	r1, r0
   154f0:	blt	1552c <__assert_fail@plt+0x4598>
   154f4:	b	15544 <__assert_fail@plt+0x45b0>
   154f8:	ldr	r0, [pc, #3724]	; 1638c <__assert_fail@plt+0x53f8>
   154fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15500:	sdiv	r0, r0, r1
   15504:	ldr	r1, [fp, #8]
   15508:	cmp	r0, r1
   1550c:	blt	1552c <__assert_fail@plt+0x4598>
   15510:	b	15544 <__assert_fail@plt+0x45b0>
   15514:	ldr	r0, [fp, #8]
   15518:	movw	r1, #32767	; 0x7fff
   1551c:	sdiv	r0, r1, r0
   15520:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15524:	cmp	r0, r1
   15528:	bge	15544 <__assert_fail@plt+0x45b0>
   1552c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15530:	ldr	r1, [fp, #8]
   15534:	mul	r0, r0, r1
   15538:	sxth	r0, r0
   1553c:	str	r0, [fp, #-28]	; 0xffffffe4
   15540:	b	16380 <__assert_fail@plt+0x53ec>
   15544:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15548:	ldr	r1, [fp, #8]
   1554c:	mul	r0, r0, r1
   15550:	sxth	r0, r0
   15554:	str	r0, [fp, #-28]	; 0xffffffe4
   15558:	b	16390 <__assert_fail@plt+0x53fc>
   1555c:	ldr	r0, [fp, #8]
   15560:	cmp	r0, #0
   15564:	bge	15674 <__assert_fail@plt+0x46e0>
   15568:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1556c:	cmp	r0, #0
   15570:	bge	155fc <__assert_fail@plt+0x4668>
   15574:	b	15578 <__assert_fail@plt+0x45e4>
   15578:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1557c:	ldr	r1, [fp, #8]
   15580:	movw	r2, #65535	; 0xffff
   15584:	sdiv	r1, r2, r1
   15588:	cmp	r0, r1
   1558c:	blt	15710 <__assert_fail@plt+0x477c>
   15590:	b	15728 <__assert_fail@plt+0x4794>
   15594:	b	15598 <__assert_fail@plt+0x4604>
   15598:	ldr	r0, [pc, #2600]	; 15fc8 <__assert_fail@plt+0x5034>
   1559c:	ldr	r1, [fp, #8]
   155a0:	cmp	r1, r0
   155a4:	blt	155bc <__assert_fail@plt+0x4628>
   155a8:	b	155c8 <__assert_fail@plt+0x4634>
   155ac:	ldr	r0, [fp, #8]
   155b0:	movw	r1, #0
   155b4:	cmp	r1, r0
   155b8:	bge	155c8 <__assert_fail@plt+0x4634>
   155bc:	movw	r0, #0
   155c0:	str	r0, [fp, #-52]	; 0xffffffcc
   155c4:	b	155e0 <__assert_fail@plt+0x464c>
   155c8:	ldr	r0, [fp, #8]
   155cc:	movw	r1, #0
   155d0:	sub	r0, r1, r0
   155d4:	movw	r1, #65535	; 0xffff
   155d8:	sdiv	r0, r1, r0
   155dc:	str	r0, [fp, #-52]	; 0xffffffcc
   155e0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   155e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   155e8:	mvn	r2, #0
   155ec:	sub	r1, r2, r1
   155f0:	cmp	r0, r1
   155f4:	ble	15710 <__assert_fail@plt+0x477c>
   155f8:	b	15728 <__assert_fail@plt+0x4794>
   155fc:	b	15600 <__assert_fail@plt+0x466c>
   15600:	b	15658 <__assert_fail@plt+0x46c4>
   15604:	b	15658 <__assert_fail@plt+0x46c4>
   15608:	ldr	r0, [fp, #8]
   1560c:	cmn	r0, #1
   15610:	bne	15658 <__assert_fail@plt+0x46c4>
   15614:	b	15618 <__assert_fail@plt+0x4684>
   15618:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1561c:	add	r0, r0, #0
   15620:	movw	r1, #0
   15624:	cmp	r1, r0
   15628:	blt	15710 <__assert_fail@plt+0x477c>
   1562c:	b	15728 <__assert_fail@plt+0x4794>
   15630:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15634:	movw	r1, #0
   15638:	cmp	r1, r0
   1563c:	bge	15728 <__assert_fail@plt+0x4794>
   15640:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15644:	sub	r0, r0, #1
   15648:	mvn	r1, #0
   1564c:	cmp	r1, r0
   15650:	blt	15710 <__assert_fail@plt+0x477c>
   15654:	b	15728 <__assert_fail@plt+0x4794>
   15658:	ldr	r0, [fp, #8]
   1565c:	movw	r1, #0
   15660:	sdiv	r0, r1, r0
   15664:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15668:	cmp	r0, r1
   1566c:	blt	15710 <__assert_fail@plt+0x477c>
   15670:	b	15728 <__assert_fail@plt+0x4794>
   15674:	ldr	r0, [fp, #8]
   15678:	cmp	r0, #0
   1567c:	bne	15684 <__assert_fail@plt+0x46f0>
   15680:	b	15728 <__assert_fail@plt+0x4794>
   15684:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15688:	cmp	r0, #0
   1568c:	bge	156f8 <__assert_fail@plt+0x4764>
   15690:	b	15694 <__assert_fail@plt+0x4700>
   15694:	b	156dc <__assert_fail@plt+0x4748>
   15698:	b	156dc <__assert_fail@plt+0x4748>
   1569c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   156a0:	cmn	r0, #1
   156a4:	bne	156dc <__assert_fail@plt+0x4748>
   156a8:	b	156ac <__assert_fail@plt+0x4718>
   156ac:	ldr	r0, [fp, #8]
   156b0:	add	r0, r0, #0
   156b4:	movw	r1, #0
   156b8:	cmp	r1, r0
   156bc:	blt	15710 <__assert_fail@plt+0x477c>
   156c0:	b	15728 <__assert_fail@plt+0x4794>
   156c4:	ldr	r0, [fp, #8]
   156c8:	sub	r0, r0, #1
   156cc:	mvn	r1, #0
   156d0:	cmp	r1, r0
   156d4:	blt	15710 <__assert_fail@plt+0x477c>
   156d8:	b	15728 <__assert_fail@plt+0x4794>
   156dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   156e0:	movw	r1, #0
   156e4:	sdiv	r0, r1, r0
   156e8:	ldr	r1, [fp, #8]
   156ec:	cmp	r0, r1
   156f0:	blt	15710 <__assert_fail@plt+0x477c>
   156f4:	b	15728 <__assert_fail@plt+0x4794>
   156f8:	ldr	r0, [fp, #8]
   156fc:	movw	r1, #65535	; 0xffff
   15700:	sdiv	r0, r1, r0
   15704:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15708:	cmp	r0, r1
   1570c:	bge	15728 <__assert_fail@plt+0x4794>
   15710:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15714:	ldr	r1, [fp, #8]
   15718:	mul	r0, r0, r1
   1571c:	uxth	r0, r0
   15720:	str	r0, [fp, #-28]	; 0xffffffe4
   15724:	b	16380 <__assert_fail@plt+0x53ec>
   15728:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1572c:	ldr	r1, [fp, #8]
   15730:	mul	r0, r0, r1
   15734:	uxth	r0, r0
   15738:	str	r0, [fp, #-28]	; 0xffffffe4
   1573c:	b	16390 <__assert_fail@plt+0x53fc>
   15740:	b	15744 <__assert_fail@plt+0x47b0>
   15744:	b	15748 <__assert_fail@plt+0x47b4>
   15748:	ldr	r0, [fp, #8]
   1574c:	cmp	r0, #0
   15750:	bge	15854 <__assert_fail@plt+0x48c0>
   15754:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15758:	cmp	r0, #0
   1575c:	bge	157e8 <__assert_fail@plt+0x4854>
   15760:	b	15764 <__assert_fail@plt+0x47d0>
   15764:	ldr	r0, [pc, #1992]	; 15f34 <__assert_fail@plt+0x4fa0>
   15768:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1576c:	ldr	r2, [fp, #8]
   15770:	sdiv	r0, r0, r2
   15774:	cmp	r1, r0
   15778:	blt	158e4 <__assert_fail@plt+0x4950>
   1577c:	b	158f8 <__assert_fail@plt+0x4964>
   15780:	b	15784 <__assert_fail@plt+0x47f0>
   15784:	ldr	r0, [pc, #2108]	; 15fc8 <__assert_fail@plt+0x5034>
   15788:	ldr	r1, [fp, #8]
   1578c:	cmp	r1, r0
   15790:	blt	157a8 <__assert_fail@plt+0x4814>
   15794:	b	157b4 <__assert_fail@plt+0x4820>
   15798:	ldr	r0, [fp, #8]
   1579c:	movw	r1, #0
   157a0:	cmp	r1, r0
   157a4:	bge	157b4 <__assert_fail@plt+0x4820>
   157a8:	movw	r0, #0
   157ac:	str	r0, [fp, #-56]	; 0xffffffc8
   157b0:	b	157cc <__assert_fail@plt+0x4838>
   157b4:	ldr	r0, [pc, #1912]	; 15f34 <__assert_fail@plt+0x4fa0>
   157b8:	ldr	r1, [fp, #8]
   157bc:	movw	r2, #0
   157c0:	sub	r1, r2, r1
   157c4:	sdiv	r0, r0, r1
   157c8:	str	r0, [fp, #-56]	; 0xffffffc8
   157cc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   157d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   157d4:	mvn	r2, #0
   157d8:	sub	r1, r2, r1
   157dc:	cmp	r0, r1
   157e0:	ble	158e4 <__assert_fail@plt+0x4950>
   157e4:	b	158f8 <__assert_fail@plt+0x4964>
   157e8:	ldr	r0, [fp, #8]
   157ec:	cmn	r0, #1
   157f0:	bne	15838 <__assert_fail@plt+0x48a4>
   157f4:	b	157f8 <__assert_fail@plt+0x4864>
   157f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   157fc:	add	r0, r0, #-2147483648	; 0x80000000
   15800:	movw	r1, #0
   15804:	cmp	r1, r0
   15808:	blt	158e4 <__assert_fail@plt+0x4950>
   1580c:	b	158f8 <__assert_fail@plt+0x4964>
   15810:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15814:	movw	r1, #0
   15818:	cmp	r1, r0
   1581c:	bge	158f8 <__assert_fail@plt+0x4964>
   15820:	ldr	r0, [pc, #1804]	; 15f34 <__assert_fail@plt+0x4fa0>
   15824:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15828:	sub	r1, r1, #1
   1582c:	cmp	r0, r1
   15830:	blt	158e4 <__assert_fail@plt+0x4950>
   15834:	b	158f8 <__assert_fail@plt+0x4964>
   15838:	ldr	r0, [pc, #4072]	; 16828 <__assert_fail@plt+0x5894>
   1583c:	ldr	r1, [fp, #8]
   15840:	sdiv	r0, r0, r1
   15844:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15848:	cmp	r0, r1
   1584c:	blt	158e4 <__assert_fail@plt+0x4950>
   15850:	b	158f8 <__assert_fail@plt+0x4964>
   15854:	ldr	r0, [fp, #8]
   15858:	cmp	r0, #0
   1585c:	bne	15864 <__assert_fail@plt+0x48d0>
   15860:	b	158f8 <__assert_fail@plt+0x4964>
   15864:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15868:	cmp	r0, #0
   1586c:	bge	158cc <__assert_fail@plt+0x4938>
   15870:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15874:	cmn	r0, #1
   15878:	bne	158b0 <__assert_fail@plt+0x491c>
   1587c:	b	15880 <__assert_fail@plt+0x48ec>
   15880:	ldr	r0, [fp, #8]
   15884:	add	r0, r0, #-2147483648	; 0x80000000
   15888:	movw	r1, #0
   1588c:	cmp	r1, r0
   15890:	blt	158e4 <__assert_fail@plt+0x4950>
   15894:	b	158f8 <__assert_fail@plt+0x4964>
   15898:	ldr	r0, [pc, #1684]	; 15f34 <__assert_fail@plt+0x4fa0>
   1589c:	ldr	r1, [fp, #8]
   158a0:	sub	r1, r1, #1
   158a4:	cmp	r0, r1
   158a8:	blt	158e4 <__assert_fail@plt+0x4950>
   158ac:	b	158f8 <__assert_fail@plt+0x4964>
   158b0:	ldr	r0, [pc, #3952]	; 16828 <__assert_fail@plt+0x5894>
   158b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   158b8:	sdiv	r0, r0, r1
   158bc:	ldr	r1, [fp, #8]
   158c0:	cmp	r0, r1
   158c4:	blt	158e4 <__assert_fail@plt+0x4950>
   158c8:	b	158f8 <__assert_fail@plt+0x4964>
   158cc:	ldr	r0, [pc, #1632]	; 15f34 <__assert_fail@plt+0x4fa0>
   158d0:	ldr	r1, [fp, #8]
   158d4:	sdiv	r0, r0, r1
   158d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   158dc:	cmp	r0, r1
   158e0:	bge	158f8 <__assert_fail@plt+0x4964>
   158e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   158e8:	ldr	r1, [fp, #8]
   158ec:	mul	r0, r0, r1
   158f0:	str	r0, [fp, #-28]	; 0xffffffe4
   158f4:	b	16380 <__assert_fail@plt+0x53ec>
   158f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   158fc:	ldr	r1, [fp, #8]
   15900:	mul	r0, r0, r1
   15904:	str	r0, [fp, #-28]	; 0xffffffe4
   15908:	b	16390 <__assert_fail@plt+0x53fc>
   1590c:	ldr	r0, [fp, #8]
   15910:	cmp	r0, #0
   15914:	bge	15a24 <__assert_fail@plt+0x4a90>
   15918:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1591c:	cmp	r0, #0
   15920:	bge	159ac <__assert_fail@plt+0x4a18>
   15924:	b	15944 <__assert_fail@plt+0x49b0>
   15928:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1592c:	ldr	r1, [fp, #8]
   15930:	mvn	r2, #0
   15934:	udiv	r1, r2, r1
   15938:	cmp	r0, r1
   1593c:	bcc	15ac0 <__assert_fail@plt+0x4b2c>
   15940:	b	15ad4 <__assert_fail@plt+0x4b40>
   15944:	b	15948 <__assert_fail@plt+0x49b4>
   15948:	ldr	r0, [pc, #1656]	; 15fc8 <__assert_fail@plt+0x5034>
   1594c:	ldr	r1, [fp, #8]
   15950:	cmp	r1, r0
   15954:	blt	1596c <__assert_fail@plt+0x49d8>
   15958:	b	15978 <__assert_fail@plt+0x49e4>
   1595c:	ldr	r0, [fp, #8]
   15960:	movw	r1, #0
   15964:	cmp	r1, r0
   15968:	bge	15978 <__assert_fail@plt+0x49e4>
   1596c:	movw	r0, #1
   15970:	str	r0, [fp, #-60]	; 0xffffffc4
   15974:	b	15990 <__assert_fail@plt+0x49fc>
   15978:	ldr	r0, [fp, #8]
   1597c:	movw	r1, #0
   15980:	sub	r0, r1, r0
   15984:	mvn	r1, #0
   15988:	udiv	r0, r1, r0
   1598c:	str	r0, [fp, #-60]	; 0xffffffc4
   15990:	ldr	r0, [fp, #-60]	; 0xffffffc4
   15994:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15998:	mvn	r2, #0
   1599c:	sub	r1, r2, r1
   159a0:	cmp	r0, r1
   159a4:	bls	15ac0 <__assert_fail@plt+0x4b2c>
   159a8:	b	15ad4 <__assert_fail@plt+0x4b40>
   159ac:	b	159b0 <__assert_fail@plt+0x4a1c>
   159b0:	b	15a08 <__assert_fail@plt+0x4a74>
   159b4:	b	15a08 <__assert_fail@plt+0x4a74>
   159b8:	ldr	r0, [fp, #8]
   159bc:	cmn	r0, #1
   159c0:	bne	15a08 <__assert_fail@plt+0x4a74>
   159c4:	b	159c8 <__assert_fail@plt+0x4a34>
   159c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   159cc:	add	r0, r0, #0
   159d0:	movw	r1, #0
   159d4:	cmp	r1, r0
   159d8:	blt	15ac0 <__assert_fail@plt+0x4b2c>
   159dc:	b	15ad4 <__assert_fail@plt+0x4b40>
   159e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   159e4:	movw	r1, #0
   159e8:	cmp	r1, r0
   159ec:	bge	15ad4 <__assert_fail@plt+0x4b40>
   159f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   159f4:	sub	r0, r0, #1
   159f8:	mvn	r1, #0
   159fc:	cmp	r1, r0
   15a00:	blt	15ac0 <__assert_fail@plt+0x4b2c>
   15a04:	b	15ad4 <__assert_fail@plt+0x4b40>
   15a08:	ldr	r0, [fp, #8]
   15a0c:	movw	r1, #0
   15a10:	sdiv	r0, r1, r0
   15a14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15a18:	cmp	r0, r1
   15a1c:	blt	15ac0 <__assert_fail@plt+0x4b2c>
   15a20:	b	15ad4 <__assert_fail@plt+0x4b40>
   15a24:	ldr	r0, [fp, #8]
   15a28:	cmp	r0, #0
   15a2c:	bne	15a34 <__assert_fail@plt+0x4aa0>
   15a30:	b	15ad4 <__assert_fail@plt+0x4b40>
   15a34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a38:	cmp	r0, #0
   15a3c:	bge	15aa8 <__assert_fail@plt+0x4b14>
   15a40:	b	15a44 <__assert_fail@plt+0x4ab0>
   15a44:	b	15a8c <__assert_fail@plt+0x4af8>
   15a48:	b	15a8c <__assert_fail@plt+0x4af8>
   15a4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a50:	cmn	r0, #1
   15a54:	bne	15a8c <__assert_fail@plt+0x4af8>
   15a58:	b	15a5c <__assert_fail@plt+0x4ac8>
   15a5c:	ldr	r0, [fp, #8]
   15a60:	add	r0, r0, #0
   15a64:	movw	r1, #0
   15a68:	cmp	r1, r0
   15a6c:	blt	15ac0 <__assert_fail@plt+0x4b2c>
   15a70:	b	15ad4 <__assert_fail@plt+0x4b40>
   15a74:	ldr	r0, [fp, #8]
   15a78:	sub	r0, r0, #1
   15a7c:	mvn	r1, #0
   15a80:	cmp	r1, r0
   15a84:	blt	15ac0 <__assert_fail@plt+0x4b2c>
   15a88:	b	15ad4 <__assert_fail@plt+0x4b40>
   15a8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a90:	movw	r1, #0
   15a94:	sdiv	r0, r1, r0
   15a98:	ldr	r1, [fp, #8]
   15a9c:	cmp	r0, r1
   15aa0:	blt	15ac0 <__assert_fail@plt+0x4b2c>
   15aa4:	b	15ad4 <__assert_fail@plt+0x4b40>
   15aa8:	ldr	r0, [fp, #8]
   15aac:	mvn	r1, #0
   15ab0:	udiv	r0, r1, r0
   15ab4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15ab8:	cmp	r0, r1
   15abc:	bcs	15ad4 <__assert_fail@plt+0x4b40>
   15ac0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ac4:	ldr	r1, [fp, #8]
   15ac8:	mul	r0, r0, r1
   15acc:	str	r0, [fp, #-28]	; 0xffffffe4
   15ad0:	b	16380 <__assert_fail@plt+0x53ec>
   15ad4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ad8:	ldr	r1, [fp, #8]
   15adc:	mul	r0, r0, r1
   15ae0:	str	r0, [fp, #-28]	; 0xffffffe4
   15ae4:	b	16390 <__assert_fail@plt+0x53fc>
   15ae8:	b	15aec <__assert_fail@plt+0x4b58>
   15aec:	b	15af0 <__assert_fail@plt+0x4b5c>
   15af0:	ldr	r0, [fp, #8]
   15af4:	cmp	r0, #0
   15af8:	bge	15bfc <__assert_fail@plt+0x4c68>
   15afc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b00:	cmp	r0, #0
   15b04:	bge	15b90 <__assert_fail@plt+0x4bfc>
   15b08:	b	15b0c <__assert_fail@plt+0x4b78>
   15b0c:	ldr	r0, [pc, #1056]	; 15f34 <__assert_fail@plt+0x4fa0>
   15b10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15b14:	ldr	r2, [fp, #8]
   15b18:	sdiv	r0, r0, r2
   15b1c:	cmp	r1, r0
   15b20:	blt	15c8c <__assert_fail@plt+0x4cf8>
   15b24:	b	15ca0 <__assert_fail@plt+0x4d0c>
   15b28:	b	15b2c <__assert_fail@plt+0x4b98>
   15b2c:	ldr	r0, [pc, #1172]	; 15fc8 <__assert_fail@plt+0x5034>
   15b30:	ldr	r1, [fp, #8]
   15b34:	cmp	r1, r0
   15b38:	blt	15b50 <__assert_fail@plt+0x4bbc>
   15b3c:	b	15b5c <__assert_fail@plt+0x4bc8>
   15b40:	ldr	r0, [fp, #8]
   15b44:	movw	r1, #0
   15b48:	cmp	r1, r0
   15b4c:	bge	15b5c <__assert_fail@plt+0x4bc8>
   15b50:	movw	r0, #0
   15b54:	str	r0, [fp, #-64]	; 0xffffffc0
   15b58:	b	15b74 <__assert_fail@plt+0x4be0>
   15b5c:	ldr	r0, [pc, #976]	; 15f34 <__assert_fail@plt+0x4fa0>
   15b60:	ldr	r1, [fp, #8]
   15b64:	movw	r2, #0
   15b68:	sub	r1, r2, r1
   15b6c:	sdiv	r0, r0, r1
   15b70:	str	r0, [fp, #-64]	; 0xffffffc0
   15b74:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15b78:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15b7c:	mvn	r2, #0
   15b80:	sub	r1, r2, r1
   15b84:	cmp	r0, r1
   15b88:	ble	15c8c <__assert_fail@plt+0x4cf8>
   15b8c:	b	15ca0 <__assert_fail@plt+0x4d0c>
   15b90:	ldr	r0, [fp, #8]
   15b94:	cmn	r0, #1
   15b98:	bne	15be0 <__assert_fail@plt+0x4c4c>
   15b9c:	b	15ba0 <__assert_fail@plt+0x4c0c>
   15ba0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ba4:	add	r0, r0, #-2147483648	; 0x80000000
   15ba8:	movw	r1, #0
   15bac:	cmp	r1, r0
   15bb0:	blt	15c8c <__assert_fail@plt+0x4cf8>
   15bb4:	b	15ca0 <__assert_fail@plt+0x4d0c>
   15bb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15bbc:	movw	r1, #0
   15bc0:	cmp	r1, r0
   15bc4:	bge	15ca0 <__assert_fail@plt+0x4d0c>
   15bc8:	ldr	r0, [pc, #868]	; 15f34 <__assert_fail@plt+0x4fa0>
   15bcc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15bd0:	sub	r1, r1, #1
   15bd4:	cmp	r0, r1
   15bd8:	blt	15c8c <__assert_fail@plt+0x4cf8>
   15bdc:	b	15ca0 <__assert_fail@plt+0x4d0c>
   15be0:	ldr	r0, [pc, #3136]	; 16828 <__assert_fail@plt+0x5894>
   15be4:	ldr	r1, [fp, #8]
   15be8:	sdiv	r0, r0, r1
   15bec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15bf0:	cmp	r0, r1
   15bf4:	blt	15c8c <__assert_fail@plt+0x4cf8>
   15bf8:	b	15ca0 <__assert_fail@plt+0x4d0c>
   15bfc:	ldr	r0, [fp, #8]
   15c00:	cmp	r0, #0
   15c04:	bne	15c0c <__assert_fail@plt+0x4c78>
   15c08:	b	15ca0 <__assert_fail@plt+0x4d0c>
   15c0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c10:	cmp	r0, #0
   15c14:	bge	15c74 <__assert_fail@plt+0x4ce0>
   15c18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c1c:	cmn	r0, #1
   15c20:	bne	15c58 <__assert_fail@plt+0x4cc4>
   15c24:	b	15c28 <__assert_fail@plt+0x4c94>
   15c28:	ldr	r0, [fp, #8]
   15c2c:	add	r0, r0, #-2147483648	; 0x80000000
   15c30:	movw	r1, #0
   15c34:	cmp	r1, r0
   15c38:	blt	15c8c <__assert_fail@plt+0x4cf8>
   15c3c:	b	15ca0 <__assert_fail@plt+0x4d0c>
   15c40:	ldr	r0, [pc, #748]	; 15f34 <__assert_fail@plt+0x4fa0>
   15c44:	ldr	r1, [fp, #8]
   15c48:	sub	r1, r1, #1
   15c4c:	cmp	r0, r1
   15c50:	blt	15c8c <__assert_fail@plt+0x4cf8>
   15c54:	b	15ca0 <__assert_fail@plt+0x4d0c>
   15c58:	ldr	r0, [pc, #3016]	; 16828 <__assert_fail@plt+0x5894>
   15c5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15c60:	sdiv	r0, r0, r1
   15c64:	ldr	r1, [fp, #8]
   15c68:	cmp	r0, r1
   15c6c:	blt	15c8c <__assert_fail@plt+0x4cf8>
   15c70:	b	15ca0 <__assert_fail@plt+0x4d0c>
   15c74:	ldr	r0, [pc, #696]	; 15f34 <__assert_fail@plt+0x4fa0>
   15c78:	ldr	r1, [fp, #8]
   15c7c:	sdiv	r0, r0, r1
   15c80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15c84:	cmp	r0, r1
   15c88:	bge	15ca0 <__assert_fail@plt+0x4d0c>
   15c8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c90:	ldr	r1, [fp, #8]
   15c94:	mul	r0, r0, r1
   15c98:	str	r0, [fp, #-28]	; 0xffffffe4
   15c9c:	b	16380 <__assert_fail@plt+0x53ec>
   15ca0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ca4:	ldr	r1, [fp, #8]
   15ca8:	mul	r0, r0, r1
   15cac:	str	r0, [fp, #-28]	; 0xffffffe4
   15cb0:	b	16390 <__assert_fail@plt+0x53fc>
   15cb4:	ldr	r0, [fp, #8]
   15cb8:	cmp	r0, #0
   15cbc:	bge	15dcc <__assert_fail@plt+0x4e38>
   15cc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15cc4:	cmp	r0, #0
   15cc8:	bge	15d54 <__assert_fail@plt+0x4dc0>
   15ccc:	b	15cec <__assert_fail@plt+0x4d58>
   15cd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15cd4:	ldr	r1, [fp, #8]
   15cd8:	mvn	r2, #0
   15cdc:	udiv	r1, r2, r1
   15ce0:	cmp	r0, r1
   15ce4:	bcc	15e68 <__assert_fail@plt+0x4ed4>
   15ce8:	b	15e7c <__assert_fail@plt+0x4ee8>
   15cec:	b	15cf0 <__assert_fail@plt+0x4d5c>
   15cf0:	ldr	r0, [pc, #720]	; 15fc8 <__assert_fail@plt+0x5034>
   15cf4:	ldr	r1, [fp, #8]
   15cf8:	cmp	r1, r0
   15cfc:	blt	15d14 <__assert_fail@plt+0x4d80>
   15d00:	b	15d20 <__assert_fail@plt+0x4d8c>
   15d04:	ldr	r0, [fp, #8]
   15d08:	movw	r1, #0
   15d0c:	cmp	r1, r0
   15d10:	bge	15d20 <__assert_fail@plt+0x4d8c>
   15d14:	movw	r0, #1
   15d18:	str	r0, [fp, #-68]	; 0xffffffbc
   15d1c:	b	15d38 <__assert_fail@plt+0x4da4>
   15d20:	ldr	r0, [fp, #8]
   15d24:	movw	r1, #0
   15d28:	sub	r0, r1, r0
   15d2c:	mvn	r1, #0
   15d30:	udiv	r0, r1, r0
   15d34:	str	r0, [fp, #-68]	; 0xffffffbc
   15d38:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15d3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15d40:	mvn	r2, #0
   15d44:	sub	r1, r2, r1
   15d48:	cmp	r0, r1
   15d4c:	bls	15e68 <__assert_fail@plt+0x4ed4>
   15d50:	b	15e7c <__assert_fail@plt+0x4ee8>
   15d54:	b	15d58 <__assert_fail@plt+0x4dc4>
   15d58:	b	15db0 <__assert_fail@plt+0x4e1c>
   15d5c:	b	15db0 <__assert_fail@plt+0x4e1c>
   15d60:	ldr	r0, [fp, #8]
   15d64:	cmn	r0, #1
   15d68:	bne	15db0 <__assert_fail@plt+0x4e1c>
   15d6c:	b	15d70 <__assert_fail@plt+0x4ddc>
   15d70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d74:	add	r0, r0, #0
   15d78:	movw	r1, #0
   15d7c:	cmp	r1, r0
   15d80:	blt	15e68 <__assert_fail@plt+0x4ed4>
   15d84:	b	15e7c <__assert_fail@plt+0x4ee8>
   15d88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d8c:	movw	r1, #0
   15d90:	cmp	r1, r0
   15d94:	bge	15e7c <__assert_fail@plt+0x4ee8>
   15d98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d9c:	sub	r0, r0, #1
   15da0:	mvn	r1, #0
   15da4:	cmp	r1, r0
   15da8:	blt	15e68 <__assert_fail@plt+0x4ed4>
   15dac:	b	15e7c <__assert_fail@plt+0x4ee8>
   15db0:	ldr	r0, [fp, #8]
   15db4:	movw	r1, #0
   15db8:	sdiv	r0, r1, r0
   15dbc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15dc0:	cmp	r0, r1
   15dc4:	blt	15e68 <__assert_fail@plt+0x4ed4>
   15dc8:	b	15e7c <__assert_fail@plt+0x4ee8>
   15dcc:	ldr	r0, [fp, #8]
   15dd0:	cmp	r0, #0
   15dd4:	bne	15ddc <__assert_fail@plt+0x4e48>
   15dd8:	b	15e7c <__assert_fail@plt+0x4ee8>
   15ddc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15de0:	cmp	r0, #0
   15de4:	bge	15e50 <__assert_fail@plt+0x4ebc>
   15de8:	b	15dec <__assert_fail@plt+0x4e58>
   15dec:	b	15e34 <__assert_fail@plt+0x4ea0>
   15df0:	b	15e34 <__assert_fail@plt+0x4ea0>
   15df4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15df8:	cmn	r0, #1
   15dfc:	bne	15e34 <__assert_fail@plt+0x4ea0>
   15e00:	b	15e04 <__assert_fail@plt+0x4e70>
   15e04:	ldr	r0, [fp, #8]
   15e08:	add	r0, r0, #0
   15e0c:	movw	r1, #0
   15e10:	cmp	r1, r0
   15e14:	blt	15e68 <__assert_fail@plt+0x4ed4>
   15e18:	b	15e7c <__assert_fail@plt+0x4ee8>
   15e1c:	ldr	r0, [fp, #8]
   15e20:	sub	r0, r0, #1
   15e24:	mvn	r1, #0
   15e28:	cmp	r1, r0
   15e2c:	blt	15e68 <__assert_fail@plt+0x4ed4>
   15e30:	b	15e7c <__assert_fail@plt+0x4ee8>
   15e34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e38:	movw	r1, #0
   15e3c:	sdiv	r0, r1, r0
   15e40:	ldr	r1, [fp, #8]
   15e44:	cmp	r0, r1
   15e48:	blt	15e68 <__assert_fail@plt+0x4ed4>
   15e4c:	b	15e7c <__assert_fail@plt+0x4ee8>
   15e50:	ldr	r0, [fp, #8]
   15e54:	mvn	r1, #0
   15e58:	udiv	r0, r1, r0
   15e5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15e60:	cmp	r0, r1
   15e64:	bcs	15e7c <__assert_fail@plt+0x4ee8>
   15e68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e6c:	ldr	r1, [fp, #8]
   15e70:	mul	r0, r0, r1
   15e74:	str	r0, [fp, #-28]	; 0xffffffe4
   15e78:	b	16380 <__assert_fail@plt+0x53ec>
   15e7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e80:	ldr	r1, [fp, #8]
   15e84:	mul	r0, r0, r1
   15e88:	str	r0, [fp, #-28]	; 0xffffffe4
   15e8c:	b	16390 <__assert_fail@plt+0x53fc>
   15e90:	b	15e94 <__assert_fail@plt+0x4f00>
   15e94:	ldr	r0, [fp, #8]
   15e98:	cmp	r0, #0
   15e9c:	bge	1602c <__assert_fail@plt+0x5098>
   15ea0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ea4:	cmp	r0, #0
   15ea8:	bge	15f94 <__assert_fail@plt+0x5000>
   15eac:	b	15eb0 <__assert_fail@plt+0x4f1c>
   15eb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15eb4:	ldr	r1, [fp, #8]
   15eb8:	asr	r3, r1, #31
   15ebc:	mvn	r2, #0
   15ec0:	mvn	ip, #-2147483648	; 0x80000000
   15ec4:	str	r0, [fp, #-72]	; 0xffffffb8
   15ec8:	mov	r0, r2
   15ecc:	str	r1, [fp, #-76]	; 0xffffffb4
   15ed0:	mov	r1, ip
   15ed4:	ldr	r2, [fp, #-76]	; 0xffffffb4
   15ed8:	bl	1bc14 <__assert_fail@plt+0xac80>
   15edc:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15ee0:	subs	r0, r2, r0
   15ee4:	rscs	r1, r1, r2, asr #31
   15ee8:	str	r0, [fp, #-80]	; 0xffffffb0
   15eec:	str	r1, [fp, #-84]	; 0xffffffac
   15ef0:	blt	1610c <__assert_fail@plt+0x5178>
   15ef4:	b	16120 <__assert_fail@plt+0x518c>
   15ef8:	b	15efc <__assert_fail@plt+0x4f68>
   15efc:	ldr	r0, [pc, #196]	; 15fc8 <__assert_fail@plt+0x5034>
   15f00:	ldr	r1, [fp, #8]
   15f04:	cmp	r1, r0
   15f08:	blt	15f20 <__assert_fail@plt+0x4f8c>
   15f0c:	b	15f38 <__assert_fail@plt+0x4fa4>
   15f10:	ldr	r0, [fp, #8]
   15f14:	movw	r1, #0
   15f18:	cmp	r1, r0
   15f1c:	bge	15f38 <__assert_fail@plt+0x4fa4>
   15f20:	mov	r0, #0
   15f24:	mvn	r1, #0
   15f28:	str	r1, [fp, #-88]	; 0xffffffa8
   15f2c:	str	r0, [fp, #-92]	; 0xffffffa4
   15f30:	b	15f6c <__assert_fail@plt+0x4fd8>
   15f34:	svcvc	0x00ffffff
   15f38:	ldr	r0, [fp, #8]
   15f3c:	rsb	r0, r0, #0
   15f40:	asr	r3, r0, #31
   15f44:	mvn	r1, #0
   15f48:	mvn	r2, #-2147483648	; 0x80000000
   15f4c:	str	r0, [fp, #-96]	; 0xffffffa0
   15f50:	mov	r0, r1
   15f54:	mov	r1, r2
   15f58:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15f5c:	bl	1bc14 <__assert_fail@plt+0xac80>
   15f60:	str	r0, [fp, #-88]	; 0xffffffa8
   15f64:	str	r1, [fp, #-92]	; 0xffffffa4
   15f68:	b	15f6c <__assert_fail@plt+0x4fd8>
   15f6c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   15f70:	ldr	r1, [fp, #-88]	; 0xffffffa8
   15f74:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15f78:	mvn	r2, r2
   15f7c:	subs	r1, r2, r1
   15f80:	rscs	r0, r0, r2, asr #31
   15f84:	str	r1, [fp, #-100]	; 0xffffff9c
   15f88:	str	r0, [fp, #-104]	; 0xffffff98
   15f8c:	bge	1610c <__assert_fail@plt+0x5178>
   15f90:	b	16120 <__assert_fail@plt+0x518c>
   15f94:	ldr	r0, [fp, #8]
   15f98:	cmn	r0, #1
   15f9c:	bne	15fec <__assert_fail@plt+0x5058>
   15fa0:	b	15fa4 <__assert_fail@plt+0x5010>
   15fa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15fa8:	mov	r1, #-2147483648	; 0x80000000
   15fac:	add	r1, r1, r0, asr #31
   15fb0:	rsbs	r0, r0, #0
   15fb4:	rscs	r1, r1, #0
   15fb8:	str	r0, [fp, #-108]	; 0xffffff94
   15fbc:	str	r1, [fp, #-112]	; 0xffffff90
   15fc0:	blt	1610c <__assert_fail@plt+0x5178>
   15fc4:	b	16120 <__assert_fail@plt+0x518c>
   15fc8:	andhi	r0, r0, r1
   15fcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15fd0:	movw	r1, #0
   15fd4:	cmp	r1, r0
   15fd8:	bge	16120 <__assert_fail@plt+0x518c>
   15fdc:	mov	r0, #0
   15fe0:	cmp	r0, #0
   15fe4:	bne	1610c <__assert_fail@plt+0x5178>
   15fe8:	b	16120 <__assert_fail@plt+0x518c>
   15fec:	ldr	r0, [fp, #8]
   15ff0:	asr	r3, r0, #31
   15ff4:	mov	r1, #0
   15ff8:	mov	r2, #-2147483648	; 0x80000000
   15ffc:	str	r0, [fp, #-116]	; 0xffffff8c
   16000:	mov	r0, r1
   16004:	mov	r1, r2
   16008:	ldr	r2, [fp, #-116]	; 0xffffff8c
   1600c:	bl	1bc14 <__assert_fail@plt+0xac80>
   16010:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16014:	subs	r0, r0, r2
   16018:	sbcs	r1, r1, r2, asr #31
   1601c:	str	r0, [fp, #-120]	; 0xffffff88
   16020:	str	r1, [fp, #-124]	; 0xffffff84
   16024:	blt	1610c <__assert_fail@plt+0x5178>
   16028:	b	16120 <__assert_fail@plt+0x518c>
   1602c:	ldr	r0, [fp, #8]
   16030:	cmp	r0, #0
   16034:	bne	1603c <__assert_fail@plt+0x50a8>
   16038:	b	16120 <__assert_fail@plt+0x518c>
   1603c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16040:	cmp	r0, #0
   16044:	bge	160cc <__assert_fail@plt+0x5138>
   16048:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1604c:	cmn	r0, #1
   16050:	bne	1608c <__assert_fail@plt+0x50f8>
   16054:	b	16058 <__assert_fail@plt+0x50c4>
   16058:	ldr	r0, [fp, #8]
   1605c:	mov	r1, #-2147483648	; 0x80000000
   16060:	add	r1, r1, r0, asr #31
   16064:	rsbs	r0, r0, #0
   16068:	rscs	r1, r1, #0
   1606c:	str	r0, [fp, #-128]	; 0xffffff80
   16070:	str	r1, [fp, #-132]	; 0xffffff7c
   16074:	blt	1610c <__assert_fail@plt+0x5178>
   16078:	b	16120 <__assert_fail@plt+0x518c>
   1607c:	mov	r0, #0
   16080:	cmp	r0, #0
   16084:	bne	1610c <__assert_fail@plt+0x5178>
   16088:	b	16120 <__assert_fail@plt+0x518c>
   1608c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16090:	asr	r3, r0, #31
   16094:	mov	r1, #0
   16098:	mov	r2, #-2147483648	; 0x80000000
   1609c:	str	r0, [fp, #-136]	; 0xffffff78
   160a0:	mov	r0, r1
   160a4:	mov	r1, r2
   160a8:	ldr	r2, [fp, #-136]	; 0xffffff78
   160ac:	bl	1bc14 <__assert_fail@plt+0xac80>
   160b0:	ldr	r2, [fp, #8]
   160b4:	subs	r0, r0, r2
   160b8:	sbcs	r1, r1, r2, asr #31
   160bc:	str	r0, [fp, #-140]	; 0xffffff74
   160c0:	str	r1, [fp, #-144]	; 0xffffff70
   160c4:	blt	1610c <__assert_fail@plt+0x5178>
   160c8:	b	16120 <__assert_fail@plt+0x518c>
   160cc:	ldr	r0, [fp, #8]
   160d0:	asr	r3, r0, #31
   160d4:	mvn	r1, #0
   160d8:	mvn	r2, #-2147483648	; 0x80000000
   160dc:	str	r0, [fp, #-148]	; 0xffffff6c
   160e0:	mov	r0, r1
   160e4:	mov	r1, r2
   160e8:	ldr	r2, [fp, #-148]	; 0xffffff6c
   160ec:	bl	1bc14 <__assert_fail@plt+0xac80>
   160f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   160f4:	subs	r0, r0, r2
   160f8:	sbcs	r1, r1, r2, asr #31
   160fc:	str	r0, [fp, #-152]	; 0xffffff68
   16100:	str	r1, [fp, #-156]	; 0xffffff64
   16104:	bge	16120 <__assert_fail@plt+0x518c>
   16108:	b	1610c <__assert_fail@plt+0x5178>
   1610c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16110:	ldr	r1, [fp, #8]
   16114:	mul	r0, r0, r1
   16118:	str	r0, [fp, #-28]	; 0xffffffe4
   1611c:	b	16380 <__assert_fail@plt+0x53ec>
   16120:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16124:	ldr	r1, [fp, #8]
   16128:	mul	r0, r0, r1
   1612c:	str	r0, [fp, #-28]	; 0xffffffe4
   16130:	b	16390 <__assert_fail@plt+0x53fc>
   16134:	ldr	r0, [fp, #8]
   16138:	cmp	r0, #0
   1613c:	bge	1629c <__assert_fail@plt+0x5308>
   16140:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16144:	cmp	r0, #0
   16148:	bge	16224 <__assert_fail@plt+0x5290>
   1614c:	b	16194 <__assert_fail@plt+0x5200>
   16150:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16154:	ldr	r1, [fp, #8]
   16158:	asr	r3, r1, #31
   1615c:	mvn	r2, #0
   16160:	str	r0, [fp, #-160]	; 0xffffff60
   16164:	mov	r0, r2
   16168:	str	r1, [fp, #-164]	; 0xffffff5c
   1616c:	mov	r1, r2
   16170:	ldr	r2, [fp, #-164]	; 0xffffff5c
   16174:	bl	1bce8 <__assert_fail@plt+0xad54>
   16178:	ldr	r2, [fp, #-160]	; 0xffffff60
   1617c:	subs	r0, r2, r0
   16180:	rscs	r1, r1, r2, asr #31
   16184:	str	r0, [fp, #-168]	; 0xffffff58
   16188:	str	r1, [fp, #-172]	; 0xffffff54
   1618c:	bcc	16358 <__assert_fail@plt+0x53c4>
   16190:	b	1636c <__assert_fail@plt+0x53d8>
   16194:	b	16198 <__assert_fail@plt+0x5204>
   16198:	ldr	r0, [pc, #-472]	; 15fc8 <__assert_fail@plt+0x5034>
   1619c:	ldr	r1, [fp, #8]
   161a0:	cmp	r1, r0
   161a4:	blt	161bc <__assert_fail@plt+0x5228>
   161a8:	b	161d0 <__assert_fail@plt+0x523c>
   161ac:	ldr	r0, [fp, #8]
   161b0:	movw	r1, #0
   161b4:	cmp	r1, r0
   161b8:	bge	161d0 <__assert_fail@plt+0x523c>
   161bc:	mov	r0, #1
   161c0:	mvn	r1, #0
   161c4:	str	r1, [fp, #-176]	; 0xffffff50
   161c8:	str	r0, [fp, #-180]	; 0xffffff4c
   161cc:	b	161fc <__assert_fail@plt+0x5268>
   161d0:	ldr	r0, [fp, #8]
   161d4:	rsb	r0, r0, #0
   161d8:	asr	r3, r0, #31
   161dc:	mvn	r1, #0
   161e0:	str	r0, [fp, #-184]	; 0xffffff48
   161e4:	mov	r0, r1
   161e8:	ldr	r2, [fp, #-184]	; 0xffffff48
   161ec:	bl	1bce8 <__assert_fail@plt+0xad54>
   161f0:	str	r0, [fp, #-176]	; 0xffffff50
   161f4:	str	r1, [fp, #-180]	; 0xffffff4c
   161f8:	b	161fc <__assert_fail@plt+0x5268>
   161fc:	ldr	r0, [fp, #-180]	; 0xffffff4c
   16200:	ldr	r1, [fp, #-176]	; 0xffffff50
   16204:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16208:	mvn	r2, r2
   1620c:	subs	r1, r2, r1
   16210:	rscs	r0, r0, r2, asr #31
   16214:	str	r1, [sp, #188]	; 0xbc
   16218:	str	r0, [sp, #184]	; 0xb8
   1621c:	bcs	16358 <__assert_fail@plt+0x53c4>
   16220:	b	1636c <__assert_fail@plt+0x53d8>
   16224:	b	16228 <__assert_fail@plt+0x5294>
   16228:	b	16280 <__assert_fail@plt+0x52ec>
   1622c:	b	16280 <__assert_fail@plt+0x52ec>
   16230:	ldr	r0, [fp, #8]
   16234:	cmn	r0, #1
   16238:	bne	16280 <__assert_fail@plt+0x52ec>
   1623c:	b	16240 <__assert_fail@plt+0x52ac>
   16240:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16244:	add	r0, r0, #0
   16248:	movw	r1, #0
   1624c:	cmp	r1, r0
   16250:	blt	16358 <__assert_fail@plt+0x53c4>
   16254:	b	1636c <__assert_fail@plt+0x53d8>
   16258:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1625c:	movw	r1, #0
   16260:	cmp	r1, r0
   16264:	bge	1636c <__assert_fail@plt+0x53d8>
   16268:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1626c:	sub	r0, r0, #1
   16270:	mvn	r1, #0
   16274:	cmp	r1, r0
   16278:	blt	16358 <__assert_fail@plt+0x53c4>
   1627c:	b	1636c <__assert_fail@plt+0x53d8>
   16280:	ldr	r0, [fp, #8]
   16284:	movw	r1, #0
   16288:	sdiv	r0, r1, r0
   1628c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16290:	cmp	r0, r1
   16294:	blt	16358 <__assert_fail@plt+0x53c4>
   16298:	b	1636c <__assert_fail@plt+0x53d8>
   1629c:	ldr	r0, [fp, #8]
   162a0:	cmp	r0, #0
   162a4:	bne	162ac <__assert_fail@plt+0x5318>
   162a8:	b	1636c <__assert_fail@plt+0x53d8>
   162ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   162b0:	cmp	r0, #0
   162b4:	bge	16320 <__assert_fail@plt+0x538c>
   162b8:	b	162bc <__assert_fail@plt+0x5328>
   162bc:	b	16304 <__assert_fail@plt+0x5370>
   162c0:	b	16304 <__assert_fail@plt+0x5370>
   162c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   162c8:	cmn	r0, #1
   162cc:	bne	16304 <__assert_fail@plt+0x5370>
   162d0:	b	162d4 <__assert_fail@plt+0x5340>
   162d4:	ldr	r0, [fp, #8]
   162d8:	add	r0, r0, #0
   162dc:	movw	r1, #0
   162e0:	cmp	r1, r0
   162e4:	blt	16358 <__assert_fail@plt+0x53c4>
   162e8:	b	1636c <__assert_fail@plt+0x53d8>
   162ec:	ldr	r0, [fp, #8]
   162f0:	sub	r0, r0, #1
   162f4:	mvn	r1, #0
   162f8:	cmp	r1, r0
   162fc:	blt	16358 <__assert_fail@plt+0x53c4>
   16300:	b	1636c <__assert_fail@plt+0x53d8>
   16304:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16308:	movw	r1, #0
   1630c:	sdiv	r0, r1, r0
   16310:	ldr	r1, [fp, #8]
   16314:	cmp	r0, r1
   16318:	blt	16358 <__assert_fail@plt+0x53c4>
   1631c:	b	1636c <__assert_fail@plt+0x53d8>
   16320:	ldr	r0, [fp, #8]
   16324:	asr	r3, r0, #31
   16328:	mvn	r1, #0
   1632c:	str	r0, [sp, #180]	; 0xb4
   16330:	mov	r0, r1
   16334:	ldr	r2, [sp, #180]	; 0xb4
   16338:	bl	1bce8 <__assert_fail@plt+0xad54>
   1633c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16340:	subs	r0, r0, r2
   16344:	sbcs	r1, r1, r2, asr #31
   16348:	str	r0, [sp, #176]	; 0xb0
   1634c:	str	r1, [sp, #172]	; 0xac
   16350:	bcs	1636c <__assert_fail@plt+0x53d8>
   16354:	b	16358 <__assert_fail@plt+0x53c4>
   16358:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1635c:	ldr	r1, [fp, #8]
   16360:	mul	r0, r0, r1
   16364:	str	r0, [fp, #-28]	; 0xffffffe4
   16368:	b	16380 <__assert_fail@plt+0x53ec>
   1636c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16370:	ldr	r1, [fp, #8]
   16374:	mul	r0, r0, r1
   16378:	str	r0, [fp, #-28]	; 0xffffffe4
   1637c:	b	16390 <__assert_fail@plt+0x53fc>
   16380:	ldr	r0, [pc, #-1108]	; 15f34 <__assert_fail@plt+0x4fa0>
   16384:	str	r0, [sp, #168]	; 0xa8
   16388:	b	163b0 <__assert_fail@plt+0x541c>
   1638c:			; <UNDEFINED> instruction: 0xffff8000
   16390:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16394:	cmp	r0, #64	; 0x40
   16398:	movw	r0, #0
   1639c:	movlt	r0, #1
   163a0:	tst	r0, #1
   163a4:	movw	r0, #64	; 0x40
   163a8:	moveq	r0, #0
   163ac:	str	r0, [sp, #168]	; 0xa8
   163b0:	ldr	r0, [sp, #168]	; 0xa8
   163b4:	str	r0, [fp, #-32]	; 0xffffffe0
   163b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   163bc:	cmp	r0, #0
   163c0:	beq	163f0 <__assert_fail@plt+0x545c>
   163c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   163c8:	ldr	r1, [fp, #8]
   163cc:	sdiv	r0, r0, r1
   163d0:	str	r0, [fp, #-24]	; 0xffffffe8
   163d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   163d8:	mov	r1, r0
   163dc:	ldr	r2, [fp, #8]
   163e0:	sdiv	r3, r0, r2
   163e4:	mls	r0, r3, r2, r0
   163e8:	sub	r0, r1, r0
   163ec:	str	r0, [fp, #-28]	; 0xffffffe4
   163f0:	ldr	r0, [fp, #-4]
   163f4:	movw	r1, #0
   163f8:	cmp	r0, r1
   163fc:	bne	1640c <__assert_fail@plt+0x5478>
   16400:	ldr	r0, [fp, #-8]
   16404:	movw	r1, #0
   16408:	str	r1, [r0]
   1640c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16410:	ldr	r1, [fp, #-20]	; 0xffffffec
   16414:	sub	r0, r0, r1
   16418:	ldr	r1, [fp, #-12]
   1641c:	cmp	r0, r1
   16420:	bge	17858 <__assert_fail@plt+0x68c4>
   16424:	ldr	r0, [fp, #-20]	; 0xffffffec
   16428:	ldr	r1, [fp, #-12]
   1642c:	add	r1, r0, r1
   16430:	mov	r2, #1
   16434:	cmp	r1, r0
   16438:	movwvc	r2, #0
   1643c:	str	r1, [fp, #-24]	; 0xffffffe8
   16440:	tst	r2, #1
   16444:	bne	17854 <__assert_fail@plt+0x68c0>
   16448:	ldr	r0, [fp, #-16]
   1644c:	movw	r1, #0
   16450:	cmp	r1, r0
   16454:	bgt	16468 <__assert_fail@plt+0x54d4>
   16458:	ldr	r0, [fp, #-16]
   1645c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16460:	cmp	r0, r1
   16464:	blt	17854 <__assert_fail@plt+0x68c0>
   16468:	b	16844 <__assert_fail@plt+0x58b0>
   1646c:	b	16470 <__assert_fail@plt+0x54dc>
   16470:	ldr	r0, [fp, #8]
   16474:	cmp	r0, #0
   16478:	bge	1658c <__assert_fail@plt+0x55f8>
   1647c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16480:	cmp	r0, #0
   16484:	bge	16510 <__assert_fail@plt+0x557c>
   16488:	b	1648c <__assert_fail@plt+0x54f8>
   1648c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16490:	ldr	r1, [fp, #8]
   16494:	movw	r2, #127	; 0x7f
   16498:	sdiv	r1, r2, r1
   1649c:	cmp	r0, r1
   164a0:	blt	1662c <__assert_fail@plt+0x5698>
   164a4:	b	16644 <__assert_fail@plt+0x56b0>
   164a8:	b	164ac <__assert_fail@plt+0x5518>
   164ac:	ldr	r0, [pc, #-1260]	; 15fc8 <__assert_fail@plt+0x5034>
   164b0:	ldr	r1, [fp, #8]
   164b4:	cmp	r1, r0
   164b8:	blt	164d0 <__assert_fail@plt+0x553c>
   164bc:	b	164dc <__assert_fail@plt+0x5548>
   164c0:	ldr	r0, [fp, #8]
   164c4:	movw	r1, #0
   164c8:	cmp	r1, r0
   164cc:	bge	164dc <__assert_fail@plt+0x5548>
   164d0:	movw	r0, #0
   164d4:	str	r0, [sp, #164]	; 0xa4
   164d8:	b	164f4 <__assert_fail@plt+0x5560>
   164dc:	ldr	r0, [fp, #8]
   164e0:	movw	r1, #0
   164e4:	sub	r0, r1, r0
   164e8:	movw	r1, #127	; 0x7f
   164ec:	sdiv	r0, r1, r0
   164f0:	str	r0, [sp, #164]	; 0xa4
   164f4:	ldr	r0, [sp, #164]	; 0xa4
   164f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   164fc:	mvn	r2, #0
   16500:	sub	r1, r2, r1
   16504:	cmp	r0, r1
   16508:	ble	1662c <__assert_fail@plt+0x5698>
   1650c:	b	16644 <__assert_fail@plt+0x56b0>
   16510:	b	16514 <__assert_fail@plt+0x5580>
   16514:	b	16570 <__assert_fail@plt+0x55dc>
   16518:	b	16570 <__assert_fail@plt+0x55dc>
   1651c:	ldr	r0, [fp, #8]
   16520:	cmn	r0, #1
   16524:	bne	16570 <__assert_fail@plt+0x55dc>
   16528:	b	1652c <__assert_fail@plt+0x5598>
   1652c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16530:	mvn	r1, #127	; 0x7f
   16534:	add	r0, r0, r1
   16538:	movw	r1, #0
   1653c:	cmp	r1, r0
   16540:	blt	1662c <__assert_fail@plt+0x5698>
   16544:	b	16644 <__assert_fail@plt+0x56b0>
   16548:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1654c:	movw	r1, #0
   16550:	cmp	r1, r0
   16554:	bge	16644 <__assert_fail@plt+0x56b0>
   16558:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1655c:	sub	r0, r0, #1
   16560:	movw	r1, #127	; 0x7f
   16564:	cmp	r1, r0
   16568:	blt	1662c <__assert_fail@plt+0x5698>
   1656c:	b	16644 <__assert_fail@plt+0x56b0>
   16570:	ldr	r0, [fp, #8]
   16574:	mvn	r1, #127	; 0x7f
   16578:	sdiv	r0, r1, r0
   1657c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16580:	cmp	r0, r1
   16584:	blt	1662c <__assert_fail@plt+0x5698>
   16588:	b	16644 <__assert_fail@plt+0x56b0>
   1658c:	ldr	r0, [fp, #8]
   16590:	cmp	r0, #0
   16594:	bne	1659c <__assert_fail@plt+0x5608>
   16598:	b	16644 <__assert_fail@plt+0x56b0>
   1659c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   165a0:	cmp	r0, #0
   165a4:	bge	16614 <__assert_fail@plt+0x5680>
   165a8:	b	165ac <__assert_fail@plt+0x5618>
   165ac:	b	165f8 <__assert_fail@plt+0x5664>
   165b0:	b	165f8 <__assert_fail@plt+0x5664>
   165b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   165b8:	cmn	r0, #1
   165bc:	bne	165f8 <__assert_fail@plt+0x5664>
   165c0:	b	165c4 <__assert_fail@plt+0x5630>
   165c4:	ldr	r0, [fp, #8]
   165c8:	mvn	r1, #127	; 0x7f
   165cc:	add	r0, r0, r1
   165d0:	movw	r1, #0
   165d4:	cmp	r1, r0
   165d8:	blt	1662c <__assert_fail@plt+0x5698>
   165dc:	b	16644 <__assert_fail@plt+0x56b0>
   165e0:	ldr	r0, [fp, #8]
   165e4:	sub	r0, r0, #1
   165e8:	movw	r1, #127	; 0x7f
   165ec:	cmp	r1, r0
   165f0:	blt	1662c <__assert_fail@plt+0x5698>
   165f4:	b	16644 <__assert_fail@plt+0x56b0>
   165f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   165fc:	mvn	r1, #127	; 0x7f
   16600:	sdiv	r0, r1, r0
   16604:	ldr	r1, [fp, #8]
   16608:	cmp	r0, r1
   1660c:	blt	1662c <__assert_fail@plt+0x5698>
   16610:	b	16644 <__assert_fail@plt+0x56b0>
   16614:	ldr	r0, [fp, #8]
   16618:	movw	r1, #127	; 0x7f
   1661c:	sdiv	r0, r1, r0
   16620:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16624:	cmp	r0, r1
   16628:	bge	16644 <__assert_fail@plt+0x56b0>
   1662c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16630:	ldr	r1, [fp, #8]
   16634:	mul	r0, r0, r1
   16638:	sxtb	r0, r0
   1663c:	str	r0, [fp, #-28]	; 0xffffffe4
   16640:	b	17854 <__assert_fail@plt+0x68c0>
   16644:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16648:	ldr	r1, [fp, #8]
   1664c:	mul	r0, r0, r1
   16650:	sxtb	r0, r0
   16654:	str	r0, [fp, #-28]	; 0xffffffe4
   16658:	b	17858 <__assert_fail@plt+0x68c4>
   1665c:	ldr	r0, [fp, #8]
   16660:	cmp	r0, #0
   16664:	bge	16774 <__assert_fail@plt+0x57e0>
   16668:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1666c:	cmp	r0, #0
   16670:	bge	166fc <__assert_fail@plt+0x5768>
   16674:	b	16678 <__assert_fail@plt+0x56e4>
   16678:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1667c:	ldr	r1, [fp, #8]
   16680:	movw	r2, #255	; 0xff
   16684:	sdiv	r1, r2, r1
   16688:	cmp	r0, r1
   1668c:	blt	16810 <__assert_fail@plt+0x587c>
   16690:	b	1682c <__assert_fail@plt+0x5898>
   16694:	b	16698 <__assert_fail@plt+0x5704>
   16698:	ldr	r0, [pc, #-1752]	; 15fc8 <__assert_fail@plt+0x5034>
   1669c:	ldr	r1, [fp, #8]
   166a0:	cmp	r1, r0
   166a4:	blt	166bc <__assert_fail@plt+0x5728>
   166a8:	b	166c8 <__assert_fail@plt+0x5734>
   166ac:	ldr	r0, [fp, #8]
   166b0:	movw	r1, #0
   166b4:	cmp	r1, r0
   166b8:	bge	166c8 <__assert_fail@plt+0x5734>
   166bc:	movw	r0, #0
   166c0:	str	r0, [sp, #160]	; 0xa0
   166c4:	b	166e0 <__assert_fail@plt+0x574c>
   166c8:	ldr	r0, [fp, #8]
   166cc:	movw	r1, #0
   166d0:	sub	r0, r1, r0
   166d4:	movw	r1, #255	; 0xff
   166d8:	sdiv	r0, r1, r0
   166dc:	str	r0, [sp, #160]	; 0xa0
   166e0:	ldr	r0, [sp, #160]	; 0xa0
   166e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   166e8:	mvn	r2, #0
   166ec:	sub	r1, r2, r1
   166f0:	cmp	r0, r1
   166f4:	ble	16810 <__assert_fail@plt+0x587c>
   166f8:	b	1682c <__assert_fail@plt+0x5898>
   166fc:	b	16700 <__assert_fail@plt+0x576c>
   16700:	b	16758 <__assert_fail@plt+0x57c4>
   16704:	b	16758 <__assert_fail@plt+0x57c4>
   16708:	ldr	r0, [fp, #8]
   1670c:	cmn	r0, #1
   16710:	bne	16758 <__assert_fail@plt+0x57c4>
   16714:	b	16718 <__assert_fail@plt+0x5784>
   16718:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1671c:	add	r0, r0, #0
   16720:	movw	r1, #0
   16724:	cmp	r1, r0
   16728:	blt	16810 <__assert_fail@plt+0x587c>
   1672c:	b	1682c <__assert_fail@plt+0x5898>
   16730:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16734:	movw	r1, #0
   16738:	cmp	r1, r0
   1673c:	bge	1682c <__assert_fail@plt+0x5898>
   16740:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16744:	sub	r0, r0, #1
   16748:	mvn	r1, #0
   1674c:	cmp	r1, r0
   16750:	blt	16810 <__assert_fail@plt+0x587c>
   16754:	b	1682c <__assert_fail@plt+0x5898>
   16758:	ldr	r0, [fp, #8]
   1675c:	movw	r1, #0
   16760:	sdiv	r0, r1, r0
   16764:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16768:	cmp	r0, r1
   1676c:	blt	16810 <__assert_fail@plt+0x587c>
   16770:	b	1682c <__assert_fail@plt+0x5898>
   16774:	ldr	r0, [fp, #8]
   16778:	cmp	r0, #0
   1677c:	bne	16784 <__assert_fail@plt+0x57f0>
   16780:	b	1682c <__assert_fail@plt+0x5898>
   16784:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16788:	cmp	r0, #0
   1678c:	bge	167f8 <__assert_fail@plt+0x5864>
   16790:	b	16794 <__assert_fail@plt+0x5800>
   16794:	b	167dc <__assert_fail@plt+0x5848>
   16798:	b	167dc <__assert_fail@plt+0x5848>
   1679c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   167a0:	cmn	r0, #1
   167a4:	bne	167dc <__assert_fail@plt+0x5848>
   167a8:	b	167ac <__assert_fail@plt+0x5818>
   167ac:	ldr	r0, [fp, #8]
   167b0:	add	r0, r0, #0
   167b4:	movw	r1, #0
   167b8:	cmp	r1, r0
   167bc:	blt	16810 <__assert_fail@plt+0x587c>
   167c0:	b	1682c <__assert_fail@plt+0x5898>
   167c4:	ldr	r0, [fp, #8]
   167c8:	sub	r0, r0, #1
   167cc:	mvn	r1, #0
   167d0:	cmp	r1, r0
   167d4:	blt	16810 <__assert_fail@plt+0x587c>
   167d8:	b	1682c <__assert_fail@plt+0x5898>
   167dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   167e0:	movw	r1, #0
   167e4:	sdiv	r0, r1, r0
   167e8:	ldr	r1, [fp, #8]
   167ec:	cmp	r0, r1
   167f0:	blt	16810 <__assert_fail@plt+0x587c>
   167f4:	b	1682c <__assert_fail@plt+0x5898>
   167f8:	ldr	r0, [fp, #8]
   167fc:	movw	r1, #255	; 0xff
   16800:	sdiv	r0, r1, r0
   16804:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16808:	cmp	r0, r1
   1680c:	bge	1682c <__assert_fail@plt+0x5898>
   16810:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16814:	ldr	r1, [fp, #8]
   16818:	mul	r0, r0, r1
   1681c:	and	r0, r0, #255	; 0xff
   16820:	str	r0, [fp, #-28]	; 0xffffffe4
   16824:	b	17854 <__assert_fail@plt+0x68c0>
   16828:	andhi	r0, r0, r0
   1682c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16830:	ldr	r1, [fp, #8]
   16834:	mul	r0, r0, r1
   16838:	and	r0, r0, #255	; 0xff
   1683c:	str	r0, [fp, #-28]	; 0xffffffe4
   16840:	b	17858 <__assert_fail@plt+0x68c4>
   16844:	b	16c1c <__assert_fail@plt+0x5c88>
   16848:	b	1684c <__assert_fail@plt+0x58b8>
   1684c:	ldr	r0, [fp, #8]
   16850:	cmp	r0, #0
   16854:	bge	16968 <__assert_fail@plt+0x59d4>
   16858:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1685c:	cmp	r0, #0
   16860:	bge	168ec <__assert_fail@plt+0x5958>
   16864:	b	16868 <__assert_fail@plt+0x58d4>
   16868:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1686c:	ldr	r1, [fp, #8]
   16870:	movw	r2, #32767	; 0x7fff
   16874:	sdiv	r1, r2, r1
   16878:	cmp	r0, r1
   1687c:	blt	16a08 <__assert_fail@plt+0x5a74>
   16880:	b	16a20 <__assert_fail@plt+0x5a8c>
   16884:	b	16888 <__assert_fail@plt+0x58f4>
   16888:	ldr	r0, [pc, #4084]	; 17884 <__assert_fail@plt+0x68f0>
   1688c:	ldr	r1, [fp, #8]
   16890:	cmp	r1, r0
   16894:	blt	168ac <__assert_fail@plt+0x5918>
   16898:	b	168b8 <__assert_fail@plt+0x5924>
   1689c:	ldr	r0, [fp, #8]
   168a0:	movw	r1, #0
   168a4:	cmp	r1, r0
   168a8:	bge	168b8 <__assert_fail@plt+0x5924>
   168ac:	movw	r0, #0
   168b0:	str	r0, [sp, #156]	; 0x9c
   168b4:	b	168d0 <__assert_fail@plt+0x593c>
   168b8:	ldr	r0, [fp, #8]
   168bc:	movw	r1, #0
   168c0:	sub	r0, r1, r0
   168c4:	movw	r1, #32767	; 0x7fff
   168c8:	sdiv	r0, r1, r0
   168cc:	str	r0, [sp, #156]	; 0x9c
   168d0:	ldr	r0, [sp, #156]	; 0x9c
   168d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   168d8:	mvn	r2, #0
   168dc:	sub	r1, r2, r1
   168e0:	cmp	r0, r1
   168e4:	ble	16a08 <__assert_fail@plt+0x5a74>
   168e8:	b	16a20 <__assert_fail@plt+0x5a8c>
   168ec:	b	168f0 <__assert_fail@plt+0x595c>
   168f0:	b	1694c <__assert_fail@plt+0x59b8>
   168f4:	b	1694c <__assert_fail@plt+0x59b8>
   168f8:	ldr	r0, [fp, #8]
   168fc:	cmn	r0, #1
   16900:	bne	1694c <__assert_fail@plt+0x59b8>
   16904:	b	16908 <__assert_fail@plt+0x5974>
   16908:	ldr	r0, [pc, #3964]	; 1788c <__assert_fail@plt+0x68f8>
   1690c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16910:	add	r0, r1, r0
   16914:	movw	r1, #0
   16918:	cmp	r1, r0
   1691c:	blt	16a08 <__assert_fail@plt+0x5a74>
   16920:	b	16a20 <__assert_fail@plt+0x5a8c>
   16924:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16928:	movw	r1, #0
   1692c:	cmp	r1, r0
   16930:	bge	16a20 <__assert_fail@plt+0x5a8c>
   16934:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16938:	sub	r0, r0, #1
   1693c:	movw	r1, #32767	; 0x7fff
   16940:	cmp	r1, r0
   16944:	blt	16a08 <__assert_fail@plt+0x5a74>
   16948:	b	16a20 <__assert_fail@plt+0x5a8c>
   1694c:	ldr	r0, [pc, #3896]	; 1788c <__assert_fail@plt+0x68f8>
   16950:	ldr	r1, [fp, #8]
   16954:	sdiv	r0, r0, r1
   16958:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1695c:	cmp	r0, r1
   16960:	blt	16a08 <__assert_fail@plt+0x5a74>
   16964:	b	16a20 <__assert_fail@plt+0x5a8c>
   16968:	ldr	r0, [fp, #8]
   1696c:	cmp	r0, #0
   16970:	bne	16978 <__assert_fail@plt+0x59e4>
   16974:	b	16a20 <__assert_fail@plt+0x5a8c>
   16978:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1697c:	cmp	r0, #0
   16980:	bge	169f0 <__assert_fail@plt+0x5a5c>
   16984:	b	16988 <__assert_fail@plt+0x59f4>
   16988:	b	169d4 <__assert_fail@plt+0x5a40>
   1698c:	b	169d4 <__assert_fail@plt+0x5a40>
   16990:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16994:	cmn	r0, #1
   16998:	bne	169d4 <__assert_fail@plt+0x5a40>
   1699c:	b	169a0 <__assert_fail@plt+0x5a0c>
   169a0:	ldr	r0, [pc, #3812]	; 1788c <__assert_fail@plt+0x68f8>
   169a4:	ldr	r1, [fp, #8]
   169a8:	add	r0, r1, r0
   169ac:	movw	r1, #0
   169b0:	cmp	r1, r0
   169b4:	blt	16a08 <__assert_fail@plt+0x5a74>
   169b8:	b	16a20 <__assert_fail@plt+0x5a8c>
   169bc:	ldr	r0, [fp, #8]
   169c0:	sub	r0, r0, #1
   169c4:	movw	r1, #32767	; 0x7fff
   169c8:	cmp	r1, r0
   169cc:	blt	16a08 <__assert_fail@plt+0x5a74>
   169d0:	b	16a20 <__assert_fail@plt+0x5a8c>
   169d4:	ldr	r0, [pc, #3760]	; 1788c <__assert_fail@plt+0x68f8>
   169d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   169dc:	sdiv	r0, r0, r1
   169e0:	ldr	r1, [fp, #8]
   169e4:	cmp	r0, r1
   169e8:	blt	16a08 <__assert_fail@plt+0x5a74>
   169ec:	b	16a20 <__assert_fail@plt+0x5a8c>
   169f0:	ldr	r0, [fp, #8]
   169f4:	movw	r1, #32767	; 0x7fff
   169f8:	sdiv	r0, r1, r0
   169fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16a00:	cmp	r0, r1
   16a04:	bge	16a20 <__assert_fail@plt+0x5a8c>
   16a08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a0c:	ldr	r1, [fp, #8]
   16a10:	mul	r0, r0, r1
   16a14:	sxth	r0, r0
   16a18:	str	r0, [fp, #-28]	; 0xffffffe4
   16a1c:	b	17854 <__assert_fail@plt+0x68c0>
   16a20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a24:	ldr	r1, [fp, #8]
   16a28:	mul	r0, r0, r1
   16a2c:	sxth	r0, r0
   16a30:	str	r0, [fp, #-28]	; 0xffffffe4
   16a34:	b	17858 <__assert_fail@plt+0x68c4>
   16a38:	ldr	r0, [fp, #8]
   16a3c:	cmp	r0, #0
   16a40:	bge	16b50 <__assert_fail@plt+0x5bbc>
   16a44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a48:	cmp	r0, #0
   16a4c:	bge	16ad8 <__assert_fail@plt+0x5b44>
   16a50:	b	16a54 <__assert_fail@plt+0x5ac0>
   16a54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a58:	ldr	r1, [fp, #8]
   16a5c:	movw	r2, #65535	; 0xffff
   16a60:	sdiv	r1, r2, r1
   16a64:	cmp	r0, r1
   16a68:	blt	16bec <__assert_fail@plt+0x5c58>
   16a6c:	b	16c04 <__assert_fail@plt+0x5c70>
   16a70:	b	16a74 <__assert_fail@plt+0x5ae0>
   16a74:	ldr	r0, [pc, #3592]	; 17884 <__assert_fail@plt+0x68f0>
   16a78:	ldr	r1, [fp, #8]
   16a7c:	cmp	r1, r0
   16a80:	blt	16a98 <__assert_fail@plt+0x5b04>
   16a84:	b	16aa4 <__assert_fail@plt+0x5b10>
   16a88:	ldr	r0, [fp, #8]
   16a8c:	movw	r1, #0
   16a90:	cmp	r1, r0
   16a94:	bge	16aa4 <__assert_fail@plt+0x5b10>
   16a98:	movw	r0, #0
   16a9c:	str	r0, [sp, #152]	; 0x98
   16aa0:	b	16abc <__assert_fail@plt+0x5b28>
   16aa4:	ldr	r0, [fp, #8]
   16aa8:	movw	r1, #0
   16aac:	sub	r0, r1, r0
   16ab0:	movw	r1, #65535	; 0xffff
   16ab4:	sdiv	r0, r1, r0
   16ab8:	str	r0, [sp, #152]	; 0x98
   16abc:	ldr	r0, [sp, #152]	; 0x98
   16ac0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16ac4:	mvn	r2, #0
   16ac8:	sub	r1, r2, r1
   16acc:	cmp	r0, r1
   16ad0:	ble	16bec <__assert_fail@plt+0x5c58>
   16ad4:	b	16c04 <__assert_fail@plt+0x5c70>
   16ad8:	b	16adc <__assert_fail@plt+0x5b48>
   16adc:	b	16b34 <__assert_fail@plt+0x5ba0>
   16ae0:	b	16b34 <__assert_fail@plt+0x5ba0>
   16ae4:	ldr	r0, [fp, #8]
   16ae8:	cmn	r0, #1
   16aec:	bne	16b34 <__assert_fail@plt+0x5ba0>
   16af0:	b	16af4 <__assert_fail@plt+0x5b60>
   16af4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16af8:	add	r0, r0, #0
   16afc:	movw	r1, #0
   16b00:	cmp	r1, r0
   16b04:	blt	16bec <__assert_fail@plt+0x5c58>
   16b08:	b	16c04 <__assert_fail@plt+0x5c70>
   16b0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b10:	movw	r1, #0
   16b14:	cmp	r1, r0
   16b18:	bge	16c04 <__assert_fail@plt+0x5c70>
   16b1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b20:	sub	r0, r0, #1
   16b24:	mvn	r1, #0
   16b28:	cmp	r1, r0
   16b2c:	blt	16bec <__assert_fail@plt+0x5c58>
   16b30:	b	16c04 <__assert_fail@plt+0x5c70>
   16b34:	ldr	r0, [fp, #8]
   16b38:	movw	r1, #0
   16b3c:	sdiv	r0, r1, r0
   16b40:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16b44:	cmp	r0, r1
   16b48:	blt	16bec <__assert_fail@plt+0x5c58>
   16b4c:	b	16c04 <__assert_fail@plt+0x5c70>
   16b50:	ldr	r0, [fp, #8]
   16b54:	cmp	r0, #0
   16b58:	bne	16b60 <__assert_fail@plt+0x5bcc>
   16b5c:	b	16c04 <__assert_fail@plt+0x5c70>
   16b60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b64:	cmp	r0, #0
   16b68:	bge	16bd4 <__assert_fail@plt+0x5c40>
   16b6c:	b	16b70 <__assert_fail@plt+0x5bdc>
   16b70:	b	16bb8 <__assert_fail@plt+0x5c24>
   16b74:	b	16bb8 <__assert_fail@plt+0x5c24>
   16b78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b7c:	cmn	r0, #1
   16b80:	bne	16bb8 <__assert_fail@plt+0x5c24>
   16b84:	b	16b88 <__assert_fail@plt+0x5bf4>
   16b88:	ldr	r0, [fp, #8]
   16b8c:	add	r0, r0, #0
   16b90:	movw	r1, #0
   16b94:	cmp	r1, r0
   16b98:	blt	16bec <__assert_fail@plt+0x5c58>
   16b9c:	b	16c04 <__assert_fail@plt+0x5c70>
   16ba0:	ldr	r0, [fp, #8]
   16ba4:	sub	r0, r0, #1
   16ba8:	mvn	r1, #0
   16bac:	cmp	r1, r0
   16bb0:	blt	16bec <__assert_fail@plt+0x5c58>
   16bb4:	b	16c04 <__assert_fail@plt+0x5c70>
   16bb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16bbc:	movw	r1, #0
   16bc0:	sdiv	r0, r1, r0
   16bc4:	ldr	r1, [fp, #8]
   16bc8:	cmp	r0, r1
   16bcc:	blt	16bec <__assert_fail@plt+0x5c58>
   16bd0:	b	16c04 <__assert_fail@plt+0x5c70>
   16bd4:	ldr	r0, [fp, #8]
   16bd8:	movw	r1, #65535	; 0xffff
   16bdc:	sdiv	r0, r1, r0
   16be0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16be4:	cmp	r0, r1
   16be8:	bge	16c04 <__assert_fail@plt+0x5c70>
   16bec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16bf0:	ldr	r1, [fp, #8]
   16bf4:	mul	r0, r0, r1
   16bf8:	uxth	r0, r0
   16bfc:	str	r0, [fp, #-28]	; 0xffffffe4
   16c00:	b	17854 <__assert_fail@plt+0x68c0>
   16c04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c08:	ldr	r1, [fp, #8]
   16c0c:	mul	r0, r0, r1
   16c10:	uxth	r0, r0
   16c14:	str	r0, [fp, #-28]	; 0xffffffe4
   16c18:	b	17858 <__assert_fail@plt+0x68c4>
   16c1c:	b	16c20 <__assert_fail@plt+0x5c8c>
   16c20:	b	16c24 <__assert_fail@plt+0x5c90>
   16c24:	ldr	r0, [fp, #8]
   16c28:	cmp	r0, #0
   16c2c:	bge	16d30 <__assert_fail@plt+0x5d9c>
   16c30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c34:	cmp	r0, #0
   16c38:	bge	16cc4 <__assert_fail@plt+0x5d30>
   16c3c:	b	16c40 <__assert_fail@plt+0x5cac>
   16c40:	ldr	r0, [pc, #3128]	; 17880 <__assert_fail@plt+0x68ec>
   16c44:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16c48:	ldr	r2, [fp, #8]
   16c4c:	sdiv	r0, r0, r2
   16c50:	cmp	r1, r0
   16c54:	blt	16dc0 <__assert_fail@plt+0x5e2c>
   16c58:	b	16dd4 <__assert_fail@plt+0x5e40>
   16c5c:	b	16c60 <__assert_fail@plt+0x5ccc>
   16c60:	ldr	r0, [pc, #3100]	; 17884 <__assert_fail@plt+0x68f0>
   16c64:	ldr	r1, [fp, #8]
   16c68:	cmp	r1, r0
   16c6c:	blt	16c84 <__assert_fail@plt+0x5cf0>
   16c70:	b	16c90 <__assert_fail@plt+0x5cfc>
   16c74:	ldr	r0, [fp, #8]
   16c78:	movw	r1, #0
   16c7c:	cmp	r1, r0
   16c80:	bge	16c90 <__assert_fail@plt+0x5cfc>
   16c84:	movw	r0, #0
   16c88:	str	r0, [sp, #148]	; 0x94
   16c8c:	b	16ca8 <__assert_fail@plt+0x5d14>
   16c90:	ldr	r0, [pc, #3048]	; 17880 <__assert_fail@plt+0x68ec>
   16c94:	ldr	r1, [fp, #8]
   16c98:	movw	r2, #0
   16c9c:	sub	r1, r2, r1
   16ca0:	sdiv	r0, r0, r1
   16ca4:	str	r0, [sp, #148]	; 0x94
   16ca8:	ldr	r0, [sp, #148]	; 0x94
   16cac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16cb0:	mvn	r2, #0
   16cb4:	sub	r1, r2, r1
   16cb8:	cmp	r0, r1
   16cbc:	ble	16dc0 <__assert_fail@plt+0x5e2c>
   16cc0:	b	16dd4 <__assert_fail@plt+0x5e40>
   16cc4:	ldr	r0, [fp, #8]
   16cc8:	cmn	r0, #1
   16ccc:	bne	16d14 <__assert_fail@plt+0x5d80>
   16cd0:	b	16cd4 <__assert_fail@plt+0x5d40>
   16cd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16cd8:	add	r0, r0, #-2147483648	; 0x80000000
   16cdc:	movw	r1, #0
   16ce0:	cmp	r1, r0
   16ce4:	blt	16dc0 <__assert_fail@plt+0x5e2c>
   16ce8:	b	16dd4 <__assert_fail@plt+0x5e40>
   16cec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16cf0:	movw	r1, #0
   16cf4:	cmp	r1, r0
   16cf8:	bge	16dd4 <__assert_fail@plt+0x5e40>
   16cfc:	ldr	r0, [pc, #2940]	; 17880 <__assert_fail@plt+0x68ec>
   16d00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16d04:	sub	r1, r1, #1
   16d08:	cmp	r0, r1
   16d0c:	blt	16dc0 <__assert_fail@plt+0x5e2c>
   16d10:	b	16dd4 <__assert_fail@plt+0x5e40>
   16d14:	ldr	r0, [pc, #2924]	; 17888 <__assert_fail@plt+0x68f4>
   16d18:	ldr	r1, [fp, #8]
   16d1c:	sdiv	r0, r0, r1
   16d20:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16d24:	cmp	r0, r1
   16d28:	blt	16dc0 <__assert_fail@plt+0x5e2c>
   16d2c:	b	16dd4 <__assert_fail@plt+0x5e40>
   16d30:	ldr	r0, [fp, #8]
   16d34:	cmp	r0, #0
   16d38:	bne	16d40 <__assert_fail@plt+0x5dac>
   16d3c:	b	16dd4 <__assert_fail@plt+0x5e40>
   16d40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d44:	cmp	r0, #0
   16d48:	bge	16da8 <__assert_fail@plt+0x5e14>
   16d4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d50:	cmn	r0, #1
   16d54:	bne	16d8c <__assert_fail@plt+0x5df8>
   16d58:	b	16d5c <__assert_fail@plt+0x5dc8>
   16d5c:	ldr	r0, [fp, #8]
   16d60:	add	r0, r0, #-2147483648	; 0x80000000
   16d64:	movw	r1, #0
   16d68:	cmp	r1, r0
   16d6c:	blt	16dc0 <__assert_fail@plt+0x5e2c>
   16d70:	b	16dd4 <__assert_fail@plt+0x5e40>
   16d74:	ldr	r0, [pc, #2820]	; 17880 <__assert_fail@plt+0x68ec>
   16d78:	ldr	r1, [fp, #8]
   16d7c:	sub	r1, r1, #1
   16d80:	cmp	r0, r1
   16d84:	blt	16dc0 <__assert_fail@plt+0x5e2c>
   16d88:	b	16dd4 <__assert_fail@plt+0x5e40>
   16d8c:	ldr	r0, [pc, #2804]	; 17888 <__assert_fail@plt+0x68f4>
   16d90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16d94:	sdiv	r0, r0, r1
   16d98:	ldr	r1, [fp, #8]
   16d9c:	cmp	r0, r1
   16da0:	blt	16dc0 <__assert_fail@plt+0x5e2c>
   16da4:	b	16dd4 <__assert_fail@plt+0x5e40>
   16da8:	ldr	r0, [pc, #2768]	; 17880 <__assert_fail@plt+0x68ec>
   16dac:	ldr	r1, [fp, #8]
   16db0:	sdiv	r0, r0, r1
   16db4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16db8:	cmp	r0, r1
   16dbc:	bge	16dd4 <__assert_fail@plt+0x5e40>
   16dc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16dc4:	ldr	r1, [fp, #8]
   16dc8:	mul	r0, r0, r1
   16dcc:	str	r0, [fp, #-28]	; 0xffffffe4
   16dd0:	b	17854 <__assert_fail@plt+0x68c0>
   16dd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16dd8:	ldr	r1, [fp, #8]
   16ddc:	mul	r0, r0, r1
   16de0:	str	r0, [fp, #-28]	; 0xffffffe4
   16de4:	b	17858 <__assert_fail@plt+0x68c4>
   16de8:	ldr	r0, [fp, #8]
   16dec:	cmp	r0, #0
   16df0:	bge	16f00 <__assert_fail@plt+0x5f6c>
   16df4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16df8:	cmp	r0, #0
   16dfc:	bge	16e88 <__assert_fail@plt+0x5ef4>
   16e00:	b	16e20 <__assert_fail@plt+0x5e8c>
   16e04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e08:	ldr	r1, [fp, #8]
   16e0c:	mvn	r2, #0
   16e10:	udiv	r1, r2, r1
   16e14:	cmp	r0, r1
   16e18:	bcc	16f9c <__assert_fail@plt+0x6008>
   16e1c:	b	16fb0 <__assert_fail@plt+0x601c>
   16e20:	b	16e24 <__assert_fail@plt+0x5e90>
   16e24:	ldr	r0, [pc, #2648]	; 17884 <__assert_fail@plt+0x68f0>
   16e28:	ldr	r1, [fp, #8]
   16e2c:	cmp	r1, r0
   16e30:	blt	16e48 <__assert_fail@plt+0x5eb4>
   16e34:	b	16e54 <__assert_fail@plt+0x5ec0>
   16e38:	ldr	r0, [fp, #8]
   16e3c:	movw	r1, #0
   16e40:	cmp	r1, r0
   16e44:	bge	16e54 <__assert_fail@plt+0x5ec0>
   16e48:	movw	r0, #1
   16e4c:	str	r0, [sp, #144]	; 0x90
   16e50:	b	16e6c <__assert_fail@plt+0x5ed8>
   16e54:	ldr	r0, [fp, #8]
   16e58:	movw	r1, #0
   16e5c:	sub	r0, r1, r0
   16e60:	mvn	r1, #0
   16e64:	udiv	r0, r1, r0
   16e68:	str	r0, [sp, #144]	; 0x90
   16e6c:	ldr	r0, [sp, #144]	; 0x90
   16e70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16e74:	mvn	r2, #0
   16e78:	sub	r1, r2, r1
   16e7c:	cmp	r0, r1
   16e80:	bls	16f9c <__assert_fail@plt+0x6008>
   16e84:	b	16fb0 <__assert_fail@plt+0x601c>
   16e88:	b	16e8c <__assert_fail@plt+0x5ef8>
   16e8c:	b	16ee4 <__assert_fail@plt+0x5f50>
   16e90:	b	16ee4 <__assert_fail@plt+0x5f50>
   16e94:	ldr	r0, [fp, #8]
   16e98:	cmn	r0, #1
   16e9c:	bne	16ee4 <__assert_fail@plt+0x5f50>
   16ea0:	b	16ea4 <__assert_fail@plt+0x5f10>
   16ea4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ea8:	add	r0, r0, #0
   16eac:	movw	r1, #0
   16eb0:	cmp	r1, r0
   16eb4:	blt	16f9c <__assert_fail@plt+0x6008>
   16eb8:	b	16fb0 <__assert_fail@plt+0x601c>
   16ebc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ec0:	movw	r1, #0
   16ec4:	cmp	r1, r0
   16ec8:	bge	16fb0 <__assert_fail@plt+0x601c>
   16ecc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ed0:	sub	r0, r0, #1
   16ed4:	mvn	r1, #0
   16ed8:	cmp	r1, r0
   16edc:	blt	16f9c <__assert_fail@plt+0x6008>
   16ee0:	b	16fb0 <__assert_fail@plt+0x601c>
   16ee4:	ldr	r0, [fp, #8]
   16ee8:	movw	r1, #0
   16eec:	sdiv	r0, r1, r0
   16ef0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16ef4:	cmp	r0, r1
   16ef8:	blt	16f9c <__assert_fail@plt+0x6008>
   16efc:	b	16fb0 <__assert_fail@plt+0x601c>
   16f00:	ldr	r0, [fp, #8]
   16f04:	cmp	r0, #0
   16f08:	bne	16f10 <__assert_fail@plt+0x5f7c>
   16f0c:	b	16fb0 <__assert_fail@plt+0x601c>
   16f10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f14:	cmp	r0, #0
   16f18:	bge	16f84 <__assert_fail@plt+0x5ff0>
   16f1c:	b	16f20 <__assert_fail@plt+0x5f8c>
   16f20:	b	16f68 <__assert_fail@plt+0x5fd4>
   16f24:	b	16f68 <__assert_fail@plt+0x5fd4>
   16f28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f2c:	cmn	r0, #1
   16f30:	bne	16f68 <__assert_fail@plt+0x5fd4>
   16f34:	b	16f38 <__assert_fail@plt+0x5fa4>
   16f38:	ldr	r0, [fp, #8]
   16f3c:	add	r0, r0, #0
   16f40:	movw	r1, #0
   16f44:	cmp	r1, r0
   16f48:	blt	16f9c <__assert_fail@plt+0x6008>
   16f4c:	b	16fb0 <__assert_fail@plt+0x601c>
   16f50:	ldr	r0, [fp, #8]
   16f54:	sub	r0, r0, #1
   16f58:	mvn	r1, #0
   16f5c:	cmp	r1, r0
   16f60:	blt	16f9c <__assert_fail@plt+0x6008>
   16f64:	b	16fb0 <__assert_fail@plt+0x601c>
   16f68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f6c:	movw	r1, #0
   16f70:	sdiv	r0, r1, r0
   16f74:	ldr	r1, [fp, #8]
   16f78:	cmp	r0, r1
   16f7c:	blt	16f9c <__assert_fail@plt+0x6008>
   16f80:	b	16fb0 <__assert_fail@plt+0x601c>
   16f84:	ldr	r0, [fp, #8]
   16f88:	mvn	r1, #0
   16f8c:	udiv	r0, r1, r0
   16f90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16f94:	cmp	r0, r1
   16f98:	bcs	16fb0 <__assert_fail@plt+0x601c>
   16f9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16fa0:	ldr	r1, [fp, #8]
   16fa4:	mul	r0, r0, r1
   16fa8:	str	r0, [fp, #-28]	; 0xffffffe4
   16fac:	b	17854 <__assert_fail@plt+0x68c0>
   16fb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16fb4:	ldr	r1, [fp, #8]
   16fb8:	mul	r0, r0, r1
   16fbc:	str	r0, [fp, #-28]	; 0xffffffe4
   16fc0:	b	17858 <__assert_fail@plt+0x68c4>
   16fc4:	b	16fc8 <__assert_fail@plt+0x6034>
   16fc8:	b	16fcc <__assert_fail@plt+0x6038>
   16fcc:	ldr	r0, [fp, #8]
   16fd0:	cmp	r0, #0
   16fd4:	bge	170d8 <__assert_fail@plt+0x6144>
   16fd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16fdc:	cmp	r0, #0
   16fe0:	bge	1706c <__assert_fail@plt+0x60d8>
   16fe4:	b	16fe8 <__assert_fail@plt+0x6054>
   16fe8:	ldr	r0, [pc, #2192]	; 17880 <__assert_fail@plt+0x68ec>
   16fec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16ff0:	ldr	r2, [fp, #8]
   16ff4:	sdiv	r0, r0, r2
   16ff8:	cmp	r1, r0
   16ffc:	blt	17168 <__assert_fail@plt+0x61d4>
   17000:	b	1717c <__assert_fail@plt+0x61e8>
   17004:	b	17008 <__assert_fail@plt+0x6074>
   17008:	ldr	r0, [pc, #2164]	; 17884 <__assert_fail@plt+0x68f0>
   1700c:	ldr	r1, [fp, #8]
   17010:	cmp	r1, r0
   17014:	blt	1702c <__assert_fail@plt+0x6098>
   17018:	b	17038 <__assert_fail@plt+0x60a4>
   1701c:	ldr	r0, [fp, #8]
   17020:	movw	r1, #0
   17024:	cmp	r1, r0
   17028:	bge	17038 <__assert_fail@plt+0x60a4>
   1702c:	movw	r0, #0
   17030:	str	r0, [sp, #140]	; 0x8c
   17034:	b	17050 <__assert_fail@plt+0x60bc>
   17038:	ldr	r0, [pc, #2112]	; 17880 <__assert_fail@plt+0x68ec>
   1703c:	ldr	r1, [fp, #8]
   17040:	movw	r2, #0
   17044:	sub	r1, r2, r1
   17048:	sdiv	r0, r0, r1
   1704c:	str	r0, [sp, #140]	; 0x8c
   17050:	ldr	r0, [sp, #140]	; 0x8c
   17054:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17058:	mvn	r2, #0
   1705c:	sub	r1, r2, r1
   17060:	cmp	r0, r1
   17064:	ble	17168 <__assert_fail@plt+0x61d4>
   17068:	b	1717c <__assert_fail@plt+0x61e8>
   1706c:	ldr	r0, [fp, #8]
   17070:	cmn	r0, #1
   17074:	bne	170bc <__assert_fail@plt+0x6128>
   17078:	b	1707c <__assert_fail@plt+0x60e8>
   1707c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17080:	add	r0, r0, #-2147483648	; 0x80000000
   17084:	movw	r1, #0
   17088:	cmp	r1, r0
   1708c:	blt	17168 <__assert_fail@plt+0x61d4>
   17090:	b	1717c <__assert_fail@plt+0x61e8>
   17094:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17098:	movw	r1, #0
   1709c:	cmp	r1, r0
   170a0:	bge	1717c <__assert_fail@plt+0x61e8>
   170a4:	ldr	r0, [pc, #2004]	; 17880 <__assert_fail@plt+0x68ec>
   170a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   170ac:	sub	r1, r1, #1
   170b0:	cmp	r0, r1
   170b4:	blt	17168 <__assert_fail@plt+0x61d4>
   170b8:	b	1717c <__assert_fail@plt+0x61e8>
   170bc:	ldr	r0, [pc, #1988]	; 17888 <__assert_fail@plt+0x68f4>
   170c0:	ldr	r1, [fp, #8]
   170c4:	sdiv	r0, r0, r1
   170c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   170cc:	cmp	r0, r1
   170d0:	blt	17168 <__assert_fail@plt+0x61d4>
   170d4:	b	1717c <__assert_fail@plt+0x61e8>
   170d8:	ldr	r0, [fp, #8]
   170dc:	cmp	r0, #0
   170e0:	bne	170e8 <__assert_fail@plt+0x6154>
   170e4:	b	1717c <__assert_fail@plt+0x61e8>
   170e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170ec:	cmp	r0, #0
   170f0:	bge	17150 <__assert_fail@plt+0x61bc>
   170f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170f8:	cmn	r0, #1
   170fc:	bne	17134 <__assert_fail@plt+0x61a0>
   17100:	b	17104 <__assert_fail@plt+0x6170>
   17104:	ldr	r0, [fp, #8]
   17108:	add	r0, r0, #-2147483648	; 0x80000000
   1710c:	movw	r1, #0
   17110:	cmp	r1, r0
   17114:	blt	17168 <__assert_fail@plt+0x61d4>
   17118:	b	1717c <__assert_fail@plt+0x61e8>
   1711c:	ldr	r0, [pc, #1884]	; 17880 <__assert_fail@plt+0x68ec>
   17120:	ldr	r1, [fp, #8]
   17124:	sub	r1, r1, #1
   17128:	cmp	r0, r1
   1712c:	blt	17168 <__assert_fail@plt+0x61d4>
   17130:	b	1717c <__assert_fail@plt+0x61e8>
   17134:	ldr	r0, [pc, #1868]	; 17888 <__assert_fail@plt+0x68f4>
   17138:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1713c:	sdiv	r0, r0, r1
   17140:	ldr	r1, [fp, #8]
   17144:	cmp	r0, r1
   17148:	blt	17168 <__assert_fail@plt+0x61d4>
   1714c:	b	1717c <__assert_fail@plt+0x61e8>
   17150:	ldr	r0, [pc, #1832]	; 17880 <__assert_fail@plt+0x68ec>
   17154:	ldr	r1, [fp, #8]
   17158:	sdiv	r0, r0, r1
   1715c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17160:	cmp	r0, r1
   17164:	bge	1717c <__assert_fail@plt+0x61e8>
   17168:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1716c:	ldr	r1, [fp, #8]
   17170:	mul	r0, r0, r1
   17174:	str	r0, [fp, #-28]	; 0xffffffe4
   17178:	b	17854 <__assert_fail@plt+0x68c0>
   1717c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17180:	ldr	r1, [fp, #8]
   17184:	mul	r0, r0, r1
   17188:	str	r0, [fp, #-28]	; 0xffffffe4
   1718c:	b	17858 <__assert_fail@plt+0x68c4>
   17190:	ldr	r0, [fp, #8]
   17194:	cmp	r0, #0
   17198:	bge	172a8 <__assert_fail@plt+0x6314>
   1719c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171a0:	cmp	r0, #0
   171a4:	bge	17230 <__assert_fail@plt+0x629c>
   171a8:	b	171c8 <__assert_fail@plt+0x6234>
   171ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171b0:	ldr	r1, [fp, #8]
   171b4:	mvn	r2, #0
   171b8:	udiv	r1, r2, r1
   171bc:	cmp	r0, r1
   171c0:	bcc	17344 <__assert_fail@plt+0x63b0>
   171c4:	b	17358 <__assert_fail@plt+0x63c4>
   171c8:	b	171cc <__assert_fail@plt+0x6238>
   171cc:	ldr	r0, [pc, #1712]	; 17884 <__assert_fail@plt+0x68f0>
   171d0:	ldr	r1, [fp, #8]
   171d4:	cmp	r1, r0
   171d8:	blt	171f0 <__assert_fail@plt+0x625c>
   171dc:	b	171fc <__assert_fail@plt+0x6268>
   171e0:	ldr	r0, [fp, #8]
   171e4:	movw	r1, #0
   171e8:	cmp	r1, r0
   171ec:	bge	171fc <__assert_fail@plt+0x6268>
   171f0:	movw	r0, #1
   171f4:	str	r0, [sp, #136]	; 0x88
   171f8:	b	17214 <__assert_fail@plt+0x6280>
   171fc:	ldr	r0, [fp, #8]
   17200:	movw	r1, #0
   17204:	sub	r0, r1, r0
   17208:	mvn	r1, #0
   1720c:	udiv	r0, r1, r0
   17210:	str	r0, [sp, #136]	; 0x88
   17214:	ldr	r0, [sp, #136]	; 0x88
   17218:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1721c:	mvn	r2, #0
   17220:	sub	r1, r2, r1
   17224:	cmp	r0, r1
   17228:	bls	17344 <__assert_fail@plt+0x63b0>
   1722c:	b	17358 <__assert_fail@plt+0x63c4>
   17230:	b	17234 <__assert_fail@plt+0x62a0>
   17234:	b	1728c <__assert_fail@plt+0x62f8>
   17238:	b	1728c <__assert_fail@plt+0x62f8>
   1723c:	ldr	r0, [fp, #8]
   17240:	cmn	r0, #1
   17244:	bne	1728c <__assert_fail@plt+0x62f8>
   17248:	b	1724c <__assert_fail@plt+0x62b8>
   1724c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17250:	add	r0, r0, #0
   17254:	movw	r1, #0
   17258:	cmp	r1, r0
   1725c:	blt	17344 <__assert_fail@plt+0x63b0>
   17260:	b	17358 <__assert_fail@plt+0x63c4>
   17264:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17268:	movw	r1, #0
   1726c:	cmp	r1, r0
   17270:	bge	17358 <__assert_fail@plt+0x63c4>
   17274:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17278:	sub	r0, r0, #1
   1727c:	mvn	r1, #0
   17280:	cmp	r1, r0
   17284:	blt	17344 <__assert_fail@plt+0x63b0>
   17288:	b	17358 <__assert_fail@plt+0x63c4>
   1728c:	ldr	r0, [fp, #8]
   17290:	movw	r1, #0
   17294:	sdiv	r0, r1, r0
   17298:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1729c:	cmp	r0, r1
   172a0:	blt	17344 <__assert_fail@plt+0x63b0>
   172a4:	b	17358 <__assert_fail@plt+0x63c4>
   172a8:	ldr	r0, [fp, #8]
   172ac:	cmp	r0, #0
   172b0:	bne	172b8 <__assert_fail@plt+0x6324>
   172b4:	b	17358 <__assert_fail@plt+0x63c4>
   172b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172bc:	cmp	r0, #0
   172c0:	bge	1732c <__assert_fail@plt+0x6398>
   172c4:	b	172c8 <__assert_fail@plt+0x6334>
   172c8:	b	17310 <__assert_fail@plt+0x637c>
   172cc:	b	17310 <__assert_fail@plt+0x637c>
   172d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172d4:	cmn	r0, #1
   172d8:	bne	17310 <__assert_fail@plt+0x637c>
   172dc:	b	172e0 <__assert_fail@plt+0x634c>
   172e0:	ldr	r0, [fp, #8]
   172e4:	add	r0, r0, #0
   172e8:	movw	r1, #0
   172ec:	cmp	r1, r0
   172f0:	blt	17344 <__assert_fail@plt+0x63b0>
   172f4:	b	17358 <__assert_fail@plt+0x63c4>
   172f8:	ldr	r0, [fp, #8]
   172fc:	sub	r0, r0, #1
   17300:	mvn	r1, #0
   17304:	cmp	r1, r0
   17308:	blt	17344 <__assert_fail@plt+0x63b0>
   1730c:	b	17358 <__assert_fail@plt+0x63c4>
   17310:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17314:	movw	r1, #0
   17318:	sdiv	r0, r1, r0
   1731c:	ldr	r1, [fp, #8]
   17320:	cmp	r0, r1
   17324:	blt	17344 <__assert_fail@plt+0x63b0>
   17328:	b	17358 <__assert_fail@plt+0x63c4>
   1732c:	ldr	r0, [fp, #8]
   17330:	mvn	r1, #0
   17334:	udiv	r0, r1, r0
   17338:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1733c:	cmp	r0, r1
   17340:	bcs	17358 <__assert_fail@plt+0x63c4>
   17344:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17348:	ldr	r1, [fp, #8]
   1734c:	mul	r0, r0, r1
   17350:	str	r0, [fp, #-28]	; 0xffffffe4
   17354:	b	17854 <__assert_fail@plt+0x68c0>
   17358:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1735c:	ldr	r1, [fp, #8]
   17360:	mul	r0, r0, r1
   17364:	str	r0, [fp, #-28]	; 0xffffffe4
   17368:	b	17858 <__assert_fail@plt+0x68c4>
   1736c:	b	17370 <__assert_fail@plt+0x63dc>
   17370:	ldr	r0, [fp, #8]
   17374:	cmp	r0, #0
   17378:	bge	17500 <__assert_fail@plt+0x656c>
   1737c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17380:	cmp	r0, #0
   17384:	bge	1746c <__assert_fail@plt+0x64d8>
   17388:	b	1738c <__assert_fail@plt+0x63f8>
   1738c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17390:	ldr	r1, [fp, #8]
   17394:	asr	r3, r1, #31
   17398:	mvn	r2, #0
   1739c:	mvn	ip, #-2147483648	; 0x80000000
   173a0:	str	r0, [sp, #132]	; 0x84
   173a4:	mov	r0, r2
   173a8:	str	r1, [sp, #128]	; 0x80
   173ac:	mov	r1, ip
   173b0:	ldr	r2, [sp, #128]	; 0x80
   173b4:	bl	1bc14 <__assert_fail@plt+0xac80>
   173b8:	ldr	r2, [sp, #132]	; 0x84
   173bc:	subs	r0, r2, r0
   173c0:	rscs	r1, r1, r2, asr #31
   173c4:	str	r0, [sp, #124]	; 0x7c
   173c8:	str	r1, [sp, #120]	; 0x78
   173cc:	blt	175e0 <__assert_fail@plt+0x664c>
   173d0:	b	175f4 <__assert_fail@plt+0x6660>
   173d4:	b	173d8 <__assert_fail@plt+0x6444>
   173d8:	ldr	r0, [pc, #1188]	; 17884 <__assert_fail@plt+0x68f0>
   173dc:	ldr	r1, [fp, #8]
   173e0:	cmp	r1, r0
   173e4:	blt	173fc <__assert_fail@plt+0x6468>
   173e8:	b	17410 <__assert_fail@plt+0x647c>
   173ec:	ldr	r0, [fp, #8]
   173f0:	movw	r1, #0
   173f4:	cmp	r1, r0
   173f8:	bge	17410 <__assert_fail@plt+0x647c>
   173fc:	mov	r0, #0
   17400:	mvn	r1, #0
   17404:	str	r1, [sp, #116]	; 0x74
   17408:	str	r0, [sp, #112]	; 0x70
   1740c:	b	17444 <__assert_fail@plt+0x64b0>
   17410:	ldr	r0, [fp, #8]
   17414:	rsb	r0, r0, #0
   17418:	asr	r3, r0, #31
   1741c:	mvn	r1, #0
   17420:	mvn	r2, #-2147483648	; 0x80000000
   17424:	str	r0, [sp, #108]	; 0x6c
   17428:	mov	r0, r1
   1742c:	mov	r1, r2
   17430:	ldr	r2, [sp, #108]	; 0x6c
   17434:	bl	1bc14 <__assert_fail@plt+0xac80>
   17438:	str	r0, [sp, #116]	; 0x74
   1743c:	str	r1, [sp, #112]	; 0x70
   17440:	b	17444 <__assert_fail@plt+0x64b0>
   17444:	ldr	r0, [sp, #112]	; 0x70
   17448:	ldr	r1, [sp, #116]	; 0x74
   1744c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17450:	mvn	r2, r2
   17454:	subs	r1, r2, r1
   17458:	rscs	r0, r0, r2, asr #31
   1745c:	str	r1, [sp, #104]	; 0x68
   17460:	str	r0, [sp, #100]	; 0x64
   17464:	bge	175e0 <__assert_fail@plt+0x664c>
   17468:	b	175f4 <__assert_fail@plt+0x6660>
   1746c:	ldr	r0, [fp, #8]
   17470:	cmn	r0, #1
   17474:	bne	174c0 <__assert_fail@plt+0x652c>
   17478:	b	1747c <__assert_fail@plt+0x64e8>
   1747c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17480:	mov	r1, #-2147483648	; 0x80000000
   17484:	add	r1, r1, r0, asr #31
   17488:	rsbs	r0, r0, #0
   1748c:	rscs	r1, r1, #0
   17490:	str	r0, [sp, #96]	; 0x60
   17494:	str	r1, [sp, #92]	; 0x5c
   17498:	blt	175e0 <__assert_fail@plt+0x664c>
   1749c:	b	175f4 <__assert_fail@plt+0x6660>
   174a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174a4:	movw	r1, #0
   174a8:	cmp	r1, r0
   174ac:	bge	175f4 <__assert_fail@plt+0x6660>
   174b0:	mov	r0, #0
   174b4:	cmp	r0, #0
   174b8:	bne	175e0 <__assert_fail@plt+0x664c>
   174bc:	b	175f4 <__assert_fail@plt+0x6660>
   174c0:	ldr	r0, [fp, #8]
   174c4:	asr	r3, r0, #31
   174c8:	mov	r1, #0
   174cc:	mov	r2, #-2147483648	; 0x80000000
   174d0:	str	r0, [sp, #88]	; 0x58
   174d4:	mov	r0, r1
   174d8:	mov	r1, r2
   174dc:	ldr	r2, [sp, #88]	; 0x58
   174e0:	bl	1bc14 <__assert_fail@plt+0xac80>
   174e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   174e8:	subs	r0, r0, r2
   174ec:	sbcs	r1, r1, r2, asr #31
   174f0:	str	r0, [sp, #84]	; 0x54
   174f4:	str	r1, [sp, #80]	; 0x50
   174f8:	blt	175e0 <__assert_fail@plt+0x664c>
   174fc:	b	175f4 <__assert_fail@plt+0x6660>
   17500:	ldr	r0, [fp, #8]
   17504:	cmp	r0, #0
   17508:	bne	17510 <__assert_fail@plt+0x657c>
   1750c:	b	175f4 <__assert_fail@plt+0x6660>
   17510:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17514:	cmp	r0, #0
   17518:	bge	175a0 <__assert_fail@plt+0x660c>
   1751c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17520:	cmn	r0, #1
   17524:	bne	17560 <__assert_fail@plt+0x65cc>
   17528:	b	1752c <__assert_fail@plt+0x6598>
   1752c:	ldr	r0, [fp, #8]
   17530:	mov	r1, #-2147483648	; 0x80000000
   17534:	add	r1, r1, r0, asr #31
   17538:	rsbs	r0, r0, #0
   1753c:	rscs	r1, r1, #0
   17540:	str	r0, [sp, #76]	; 0x4c
   17544:	str	r1, [sp, #72]	; 0x48
   17548:	blt	175e0 <__assert_fail@plt+0x664c>
   1754c:	b	175f4 <__assert_fail@plt+0x6660>
   17550:	mov	r0, #0
   17554:	cmp	r0, #0
   17558:	bne	175e0 <__assert_fail@plt+0x664c>
   1755c:	b	175f4 <__assert_fail@plt+0x6660>
   17560:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17564:	asr	r3, r0, #31
   17568:	mov	r1, #0
   1756c:	mov	r2, #-2147483648	; 0x80000000
   17570:	str	r0, [sp, #68]	; 0x44
   17574:	mov	r0, r1
   17578:	mov	r1, r2
   1757c:	ldr	r2, [sp, #68]	; 0x44
   17580:	bl	1bc14 <__assert_fail@plt+0xac80>
   17584:	ldr	r2, [fp, #8]
   17588:	subs	r0, r0, r2
   1758c:	sbcs	r1, r1, r2, asr #31
   17590:	str	r0, [sp, #64]	; 0x40
   17594:	str	r1, [sp, #60]	; 0x3c
   17598:	blt	175e0 <__assert_fail@plt+0x664c>
   1759c:	b	175f4 <__assert_fail@plt+0x6660>
   175a0:	ldr	r0, [fp, #8]
   175a4:	asr	r3, r0, #31
   175a8:	mvn	r1, #0
   175ac:	mvn	r2, #-2147483648	; 0x80000000
   175b0:	str	r0, [sp, #56]	; 0x38
   175b4:	mov	r0, r1
   175b8:	mov	r1, r2
   175bc:	ldr	r2, [sp, #56]	; 0x38
   175c0:	bl	1bc14 <__assert_fail@plt+0xac80>
   175c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   175c8:	subs	r0, r0, r2
   175cc:	sbcs	r1, r1, r2, asr #31
   175d0:	str	r0, [sp, #52]	; 0x34
   175d4:	str	r1, [sp, #48]	; 0x30
   175d8:	bge	175f4 <__assert_fail@plt+0x6660>
   175dc:	b	175e0 <__assert_fail@plt+0x664c>
   175e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   175e4:	ldr	r1, [fp, #8]
   175e8:	mul	r0, r0, r1
   175ec:	str	r0, [fp, #-28]	; 0xffffffe4
   175f0:	b	17854 <__assert_fail@plt+0x68c0>
   175f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   175f8:	ldr	r1, [fp, #8]
   175fc:	mul	r0, r0, r1
   17600:	str	r0, [fp, #-28]	; 0xffffffe4
   17604:	b	17858 <__assert_fail@plt+0x68c4>
   17608:	ldr	r0, [fp, #8]
   1760c:	cmp	r0, #0
   17610:	bge	17770 <__assert_fail@plt+0x67dc>
   17614:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17618:	cmp	r0, #0
   1761c:	bge	176f8 <__assert_fail@plt+0x6764>
   17620:	b	17668 <__assert_fail@plt+0x66d4>
   17624:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17628:	ldr	r1, [fp, #8]
   1762c:	asr	r3, r1, #31
   17630:	mvn	r2, #0
   17634:	str	r0, [sp, #44]	; 0x2c
   17638:	mov	r0, r2
   1763c:	str	r1, [sp, #40]	; 0x28
   17640:	mov	r1, r2
   17644:	ldr	r2, [sp, #40]	; 0x28
   17648:	bl	1bce8 <__assert_fail@plt+0xad54>
   1764c:	ldr	r2, [sp, #44]	; 0x2c
   17650:	subs	r0, r2, r0
   17654:	rscs	r1, r1, r2, asr #31
   17658:	str	r0, [sp, #36]	; 0x24
   1765c:	str	r1, [sp, #32]
   17660:	bcc	1782c <__assert_fail@plt+0x6898>
   17664:	b	17840 <__assert_fail@plt+0x68ac>
   17668:	b	1766c <__assert_fail@plt+0x66d8>
   1766c:	ldr	r0, [pc, #528]	; 17884 <__assert_fail@plt+0x68f0>
   17670:	ldr	r1, [fp, #8]
   17674:	cmp	r1, r0
   17678:	blt	17690 <__assert_fail@plt+0x66fc>
   1767c:	b	176a4 <__assert_fail@plt+0x6710>
   17680:	ldr	r0, [fp, #8]
   17684:	movw	r1, #0
   17688:	cmp	r1, r0
   1768c:	bge	176a4 <__assert_fail@plt+0x6710>
   17690:	mov	r0, #1
   17694:	mvn	r1, #0
   17698:	str	r1, [sp, #28]
   1769c:	str	r0, [sp, #24]
   176a0:	b	176d0 <__assert_fail@plt+0x673c>
   176a4:	ldr	r0, [fp, #8]
   176a8:	rsb	r0, r0, #0
   176ac:	asr	r3, r0, #31
   176b0:	mvn	r1, #0
   176b4:	str	r0, [sp, #20]
   176b8:	mov	r0, r1
   176bc:	ldr	r2, [sp, #20]
   176c0:	bl	1bce8 <__assert_fail@plt+0xad54>
   176c4:	str	r0, [sp, #28]
   176c8:	str	r1, [sp, #24]
   176cc:	b	176d0 <__assert_fail@plt+0x673c>
   176d0:	ldr	r0, [sp, #24]
   176d4:	ldr	r1, [sp, #28]
   176d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   176dc:	mvn	r2, r2
   176e0:	subs	r1, r2, r1
   176e4:	rscs	r0, r0, r2, asr #31
   176e8:	str	r1, [sp, #16]
   176ec:	str	r0, [sp, #12]
   176f0:	bcs	1782c <__assert_fail@plt+0x6898>
   176f4:	b	17840 <__assert_fail@plt+0x68ac>
   176f8:	b	176fc <__assert_fail@plt+0x6768>
   176fc:	b	17754 <__assert_fail@plt+0x67c0>
   17700:	b	17754 <__assert_fail@plt+0x67c0>
   17704:	ldr	r0, [fp, #8]
   17708:	cmn	r0, #1
   1770c:	bne	17754 <__assert_fail@plt+0x67c0>
   17710:	b	17714 <__assert_fail@plt+0x6780>
   17714:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17718:	add	r0, r0, #0
   1771c:	movw	r1, #0
   17720:	cmp	r1, r0
   17724:	blt	1782c <__assert_fail@plt+0x6898>
   17728:	b	17840 <__assert_fail@plt+0x68ac>
   1772c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17730:	movw	r1, #0
   17734:	cmp	r1, r0
   17738:	bge	17840 <__assert_fail@plt+0x68ac>
   1773c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17740:	sub	r0, r0, #1
   17744:	mvn	r1, #0
   17748:	cmp	r1, r0
   1774c:	blt	1782c <__assert_fail@plt+0x6898>
   17750:	b	17840 <__assert_fail@plt+0x68ac>
   17754:	ldr	r0, [fp, #8]
   17758:	movw	r1, #0
   1775c:	sdiv	r0, r1, r0
   17760:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17764:	cmp	r0, r1
   17768:	blt	1782c <__assert_fail@plt+0x6898>
   1776c:	b	17840 <__assert_fail@plt+0x68ac>
   17770:	ldr	r0, [fp, #8]
   17774:	cmp	r0, #0
   17778:	bne	17780 <__assert_fail@plt+0x67ec>
   1777c:	b	17840 <__assert_fail@plt+0x68ac>
   17780:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17784:	cmp	r0, #0
   17788:	bge	177f4 <__assert_fail@plt+0x6860>
   1778c:	b	17790 <__assert_fail@plt+0x67fc>
   17790:	b	177d8 <__assert_fail@plt+0x6844>
   17794:	b	177d8 <__assert_fail@plt+0x6844>
   17798:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1779c:	cmn	r0, #1
   177a0:	bne	177d8 <__assert_fail@plt+0x6844>
   177a4:	b	177a8 <__assert_fail@plt+0x6814>
   177a8:	ldr	r0, [fp, #8]
   177ac:	add	r0, r0, #0
   177b0:	movw	r1, #0
   177b4:	cmp	r1, r0
   177b8:	blt	1782c <__assert_fail@plt+0x6898>
   177bc:	b	17840 <__assert_fail@plt+0x68ac>
   177c0:	ldr	r0, [fp, #8]
   177c4:	sub	r0, r0, #1
   177c8:	mvn	r1, #0
   177cc:	cmp	r1, r0
   177d0:	blt	1782c <__assert_fail@plt+0x6898>
   177d4:	b	17840 <__assert_fail@plt+0x68ac>
   177d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   177dc:	movw	r1, #0
   177e0:	sdiv	r0, r1, r0
   177e4:	ldr	r1, [fp, #8]
   177e8:	cmp	r0, r1
   177ec:	blt	1782c <__assert_fail@plt+0x6898>
   177f0:	b	17840 <__assert_fail@plt+0x68ac>
   177f4:	ldr	r0, [fp, #8]
   177f8:	asr	r3, r0, #31
   177fc:	mvn	r1, #0
   17800:	str	r0, [sp, #8]
   17804:	mov	r0, r1
   17808:	ldr	r2, [sp, #8]
   1780c:	bl	1bce8 <__assert_fail@plt+0xad54>
   17810:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17814:	subs	r0, r0, r2
   17818:	sbcs	r1, r1, r2, asr #31
   1781c:	str	r0, [sp, #4]
   17820:	str	r1, [sp]
   17824:	bcs	17840 <__assert_fail@plt+0x68ac>
   17828:	b	1782c <__assert_fail@plt+0x6898>
   1782c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17830:	ldr	r1, [fp, #8]
   17834:	mul	r0, r0, r1
   17838:	str	r0, [fp, #-28]	; 0xffffffe4
   1783c:	b	17854 <__assert_fail@plt+0x68c0>
   17840:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17844:	ldr	r1, [fp, #8]
   17848:	mul	r0, r0, r1
   1784c:	str	r0, [fp, #-28]	; 0xffffffe4
   17850:	b	17858 <__assert_fail@plt+0x68c4>
   17854:	bl	17a30 <__assert_fail@plt+0x6a9c>
   17858:	ldr	r0, [fp, #-4]
   1785c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17860:	bl	14cec <__assert_fail@plt+0x3d58>
   17864:	str	r0, [fp, #-4]
   17868:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1786c:	ldr	r1, [fp, #-8]
   17870:	str	r0, [r1]
   17874:	ldr	r0, [fp, #-4]
   17878:	mov	sp, fp
   1787c:	pop	{fp, pc}
   17880:	svcvc	0x00ffffff
   17884:	andhi	r0, r0, r1
   17888:	andhi	r0, r0, r0
   1788c:			; <UNDEFINED> instruction: 0xffff8000
   17890:	push	{fp, lr}
   17894:	mov	fp, sp
   17898:	sub	sp, sp, #8
   1789c:	str	r0, [sp, #4]
   178a0:	ldr	r0, [sp, #4]
   178a4:	movw	r1, #1
   178a8:	bl	178b4 <__assert_fail@plt+0x6920>
   178ac:	mov	sp, fp
   178b0:	pop	{fp, pc}
   178b4:	push	{fp, lr}
   178b8:	mov	fp, sp
   178bc:	sub	sp, sp, #8
   178c0:	str	r0, [sp, #4]
   178c4:	str	r1, [sp]
   178c8:	ldr	r0, [sp, #4]
   178cc:	ldr	r1, [sp]
   178d0:	bl	1974c <__assert_fail@plt+0x87b8>
   178d4:	bl	14c78 <__assert_fail@plt+0x3ce4>
   178d8:	mov	sp, fp
   178dc:	pop	{fp, pc}
   178e0:	push	{fp, lr}
   178e4:	mov	fp, sp
   178e8:	sub	sp, sp, #8
   178ec:	str	r0, [sp, #4]
   178f0:	ldr	r0, [sp, #4]
   178f4:	movw	r1, #1
   178f8:	bl	17904 <__assert_fail@plt+0x6970>
   178fc:	mov	sp, fp
   17900:	pop	{fp, pc}
   17904:	push	{fp, lr}
   17908:	mov	fp, sp
   1790c:	sub	sp, sp, #8
   17910:	str	r0, [sp, #4]
   17914:	str	r1, [sp]
   17918:	ldr	r0, [sp, #4]
   1791c:	ldr	r1, [sp]
   17920:	bl	19e30 <__assert_fail@plt+0x8e9c>
   17924:	bl	14c78 <__assert_fail@plt+0x3ce4>
   17928:	mov	sp, fp
   1792c:	pop	{fp, pc}
   17930:	push	{fp, lr}
   17934:	mov	fp, sp
   17938:	sub	sp, sp, #16
   1793c:	str	r0, [fp, #-4]
   17940:	str	r1, [sp, #8]
   17944:	ldr	r0, [sp, #8]
   17948:	bl	14c54 <__assert_fail@plt+0x3cc0>
   1794c:	ldr	r1, [fp, #-4]
   17950:	ldr	r2, [sp, #8]
   17954:	str	r0, [sp, #4]
   17958:	bl	10dc0 <memcpy@plt>
   1795c:	ldr	r0, [sp, #4]
   17960:	mov	sp, fp
   17964:	pop	{fp, pc}
   17968:	push	{fp, lr}
   1796c:	mov	fp, sp
   17970:	sub	sp, sp, #16
   17974:	str	r0, [fp, #-4]
   17978:	str	r1, [sp, #8]
   1797c:	ldr	r0, [sp, #8]
   17980:	bl	14ca8 <__assert_fail@plt+0x3d14>
   17984:	ldr	r1, [fp, #-4]
   17988:	ldr	r2, [sp, #8]
   1798c:	str	r0, [sp, #4]
   17990:	bl	10dc0 <memcpy@plt>
   17994:	ldr	r0, [sp, #4]
   17998:	mov	sp, fp
   1799c:	pop	{fp, pc}
   179a0:	push	{fp, lr}
   179a4:	mov	fp, sp
   179a8:	sub	sp, sp, #16
   179ac:	str	r0, [fp, #-4]
   179b0:	str	r1, [sp, #8]
   179b4:	ldr	r0, [sp, #8]
   179b8:	add	r0, r0, #1
   179bc:	bl	14ca8 <__assert_fail@plt+0x3d14>
   179c0:	str	r0, [sp, #4]
   179c4:	ldr	r0, [sp, #4]
   179c8:	ldr	r1, [sp, #8]
   179cc:	add	r0, r0, r1
   179d0:	movw	r1, #0
   179d4:	strb	r1, [r0]
   179d8:	ldr	r0, [sp, #4]
   179dc:	ldr	r1, [fp, #-4]
   179e0:	ldr	r2, [sp, #8]
   179e4:	str	r0, [sp]
   179e8:	bl	10dc0 <memcpy@plt>
   179ec:	ldr	r0, [sp]
   179f0:	mov	sp, fp
   179f4:	pop	{fp, pc}
   179f8:	push	{fp, lr}
   179fc:	mov	fp, sp
   17a00:	sub	sp, sp, #8
   17a04:	str	r0, [sp, #4]
   17a08:	ldr	r0, [sp, #4]
   17a0c:	ldr	r1, [sp, #4]
   17a10:	str	r0, [sp]
   17a14:	mov	r0, r1
   17a18:	bl	10ed4 <strlen@plt>
   17a1c:	add	r1, r0, #1
   17a20:	ldr	r0, [sp]
   17a24:	bl	17930 <__assert_fail@plt+0x699c>
   17a28:	mov	sp, fp
   17a2c:	pop	{fp, pc}
   17a30:	push	{fp, lr}
   17a34:	mov	fp, sp
   17a38:	sub	sp, sp, #8
   17a3c:	movw	r0, #53472	; 0xd0e0
   17a40:	movt	r0, #2
   17a44:	ldr	r0, [r0]
   17a48:	movw	r1, #51300	; 0xc864
   17a4c:	movt	r1, #1
   17a50:	str	r0, [sp, #4]
   17a54:	mov	r0, r1
   17a58:	bl	10ec8 <gettext@plt>
   17a5c:	ldr	r1, [sp, #4]
   17a60:	str	r0, [sp]
   17a64:	mov	r0, r1
   17a68:	movw	r1, #0
   17a6c:	movw	r2, #50247	; 0xc447
   17a70:	movt	r2, #1
   17a74:	ldr	r3, [sp]
   17a78:	bl	10e5c <error@plt>
   17a7c:	bl	10f88 <abort@plt>
   17a80:	push	{fp, lr}
   17a84:	mov	fp, sp
   17a88:	sub	sp, sp, #72	; 0x48
   17a8c:	ldr	ip, [fp, #8]
   17a90:	str	r0, [fp, #-8]
   17a94:	str	r1, [fp, #-12]
   17a98:	str	r2, [fp, #-16]
   17a9c:	str	r3, [fp, #-20]	; 0xffffffec
   17aa0:	movw	r0, #0
   17aa4:	str	r0, [sp, #36]	; 0x24
   17aa8:	ldr	r1, [fp, #-16]
   17aac:	cmp	r0, r1
   17ab0:	str	ip, [sp, #20]
   17ab4:	bgt	17ac8 <__assert_fail@plt+0x6b34>
   17ab8:	ldr	r0, [fp, #-16]
   17abc:	cmp	r0, #36	; 0x24
   17ac0:	bgt	17ac8 <__assert_fail@plt+0x6b34>
   17ac4:	b	17ae8 <__assert_fail@plt+0x6b54>
   17ac8:	movw	r0, #51317	; 0xc875
   17acc:	movt	r0, #1
   17ad0:	movw	r1, #51355	; 0xc89b
   17ad4:	movt	r1, #1
   17ad8:	movw	r2, #85	; 0x55
   17adc:	movw	r3, #51369	; 0xc8a9
   17ae0:	movt	r3, #1
   17ae4:	bl	10f94 <__assert_fail@plt>
   17ae8:	ldr	r0, [fp, #-12]
   17aec:	movw	r1, #0
   17af0:	cmp	r0, r1
   17af4:	beq	17b04 <__assert_fail@plt+0x6b70>
   17af8:	ldr	r0, [fp, #-12]
   17afc:	str	r0, [sp, #16]
   17b00:	b	17b10 <__assert_fail@plt+0x6b7c>
   17b04:	sub	r0, fp, #24
   17b08:	str	r0, [sp, #16]
   17b0c:	b	17b10 <__assert_fail@plt+0x6b7c>
   17b10:	ldr	r0, [sp, #16]
   17b14:	str	r0, [fp, #-28]	; 0xffffffe4
   17b18:	bl	10ef8 <__errno_location@plt>
   17b1c:	movw	lr, #0
   17b20:	str	lr, [r0]
   17b24:	ldr	r0, [fp, #-8]
   17b28:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17b2c:	ldr	r2, [fp, #-16]
   17b30:	bl	10d84 <strtol@plt>
   17b34:	str	r0, [fp, #-32]	; 0xffffffe0
   17b38:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17b3c:	ldr	r0, [r0]
   17b40:	ldr	r1, [fp, #-8]
   17b44:	cmp	r0, r1
   17b48:	bne	17bac <__assert_fail@plt+0x6c18>
   17b4c:	ldr	r0, [fp, #8]
   17b50:	movw	r1, #0
   17b54:	cmp	r0, r1
   17b58:	beq	17b9c <__assert_fail@plt+0x6c08>
   17b5c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17b60:	ldr	r0, [r0]
   17b64:	ldrb	r0, [r0]
   17b68:	cmp	r0, #0
   17b6c:	beq	17b9c <__assert_fail@plt+0x6c08>
   17b70:	ldr	r0, [fp, #8]
   17b74:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17b78:	ldr	r1, [r1]
   17b7c:	ldrb	r1, [r1]
   17b80:	bl	10ee0 <strchr@plt>
   17b84:	movw	r1, #0
   17b88:	cmp	r0, r1
   17b8c:	beq	17b9c <__assert_fail@plt+0x6c08>
   17b90:	movw	r0, #1
   17b94:	str	r0, [fp, #-32]	; 0xffffffe0
   17b98:	b	17ba8 <__assert_fail@plt+0x6c14>
   17b9c:	movw	r0, #4
   17ba0:	str	r0, [fp, #-4]
   17ba4:	b	18074 <__assert_fail@plt+0x70e0>
   17ba8:	b	17be4 <__assert_fail@plt+0x6c50>
   17bac:	bl	10ef8 <__errno_location@plt>
   17bb0:	ldr	r0, [r0]
   17bb4:	cmp	r0, #0
   17bb8:	beq	17be0 <__assert_fail@plt+0x6c4c>
   17bbc:	bl	10ef8 <__errno_location@plt>
   17bc0:	ldr	r0, [r0]
   17bc4:	cmp	r0, #34	; 0x22
   17bc8:	beq	17bd8 <__assert_fail@plt+0x6c44>
   17bcc:	movw	r0, #4
   17bd0:	str	r0, [fp, #-4]
   17bd4:	b	18074 <__assert_fail@plt+0x70e0>
   17bd8:	movw	r0, #1
   17bdc:	str	r0, [sp, #36]	; 0x24
   17be0:	b	17be4 <__assert_fail@plt+0x6c50>
   17be4:	ldr	r0, [fp, #8]
   17be8:	movw	r1, #0
   17bec:	cmp	r0, r1
   17bf0:	bne	17c0c <__assert_fail@plt+0x6c78>
   17bf4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17bf8:	ldr	r1, [fp, #-20]	; 0xffffffec
   17bfc:	str	r0, [r1]
   17c00:	ldr	r0, [sp, #36]	; 0x24
   17c04:	str	r0, [fp, #-4]
   17c08:	b	18074 <__assert_fail@plt+0x70e0>
   17c0c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17c10:	ldr	r0, [r0]
   17c14:	ldrb	r0, [r0]
   17c18:	cmp	r0, #0
   17c1c:	beq	18060 <__assert_fail@plt+0x70cc>
   17c20:	movw	r0, #1024	; 0x400
   17c24:	str	r0, [sp, #32]
   17c28:	movw	r0, #1
   17c2c:	str	r0, [sp, #28]
   17c30:	ldr	r0, [fp, #8]
   17c34:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17c38:	ldr	r1, [r1]
   17c3c:	ldrb	r1, [r1]
   17c40:	bl	10ee0 <strchr@plt>
   17c44:	movw	r1, #0
   17c48:	cmp	r0, r1
   17c4c:	bne	17c6c <__assert_fail@plt+0x6cd8>
   17c50:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17c54:	ldr	r1, [fp, #-20]	; 0xffffffec
   17c58:	str	r0, [r1]
   17c5c:	ldr	r0, [sp, #36]	; 0x24
   17c60:	orr	r0, r0, #2
   17c64:	str	r0, [fp, #-4]
   17c68:	b	18074 <__assert_fail@plt+0x70e0>
   17c6c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17c70:	ldr	r0, [r0]
   17c74:	ldrb	r0, [r0]
   17c78:	sub	r0, r0, #69	; 0x45
   17c7c:	cmp	r0, #47	; 0x2f
   17c80:	str	r0, [sp, #12]
   17c84:	bhi	17df0 <__assert_fail@plt+0x6e5c>
   17c88:	add	r0, pc, #8
   17c8c:	ldr	r1, [sp, #12]
   17c90:	ldr	r0, [r0, r1, lsl #2]
   17c94:	mov	pc, r0
   17c98:	andeq	r7, r1, r8, asr sp
   17c9c:	strdeq	r7, [r1], -r0
   17ca0:	andeq	r7, r1, r8, asr sp
   17ca4:	strdeq	r7, [r1], -r0
   17ca8:	strdeq	r7, [r1], -r0
   17cac:	strdeq	r7, [r1], -r0
   17cb0:	andeq	r7, r1, r8, asr sp
   17cb4:	strdeq	r7, [r1], -r0
   17cb8:	andeq	r7, r1, r8, asr sp
   17cbc:	strdeq	r7, [r1], -r0
   17cc0:	strdeq	r7, [r1], -r0
   17cc4:	andeq	r7, r1, r8, asr sp
   17cc8:	strdeq	r7, [r1], -r0
   17ccc:	strdeq	r7, [r1], -r0
   17cd0:	strdeq	r7, [r1], -r0
   17cd4:	andeq	r7, r1, r8, asr sp
   17cd8:	strdeq	r7, [r1], -r0
   17cdc:	strdeq	r7, [r1], -r0
   17ce0:	strdeq	r7, [r1], -r0
   17ce4:	strdeq	r7, [r1], -r0
   17ce8:	andeq	r7, r1, r8, asr sp
   17cec:	andeq	r7, r1, r8, asr sp
   17cf0:	strdeq	r7, [r1], -r0
   17cf4:	strdeq	r7, [r1], -r0
   17cf8:	strdeq	r7, [r1], -r0
   17cfc:	strdeq	r7, [r1], -r0
   17d00:	strdeq	r7, [r1], -r0
   17d04:	strdeq	r7, [r1], -r0
   17d08:	strdeq	r7, [r1], -r0
   17d0c:	strdeq	r7, [r1], -r0
   17d10:	strdeq	r7, [r1], -r0
   17d14:	strdeq	r7, [r1], -r0
   17d18:	strdeq	r7, [r1], -r0
   17d1c:	strdeq	r7, [r1], -r0
   17d20:	andeq	r7, r1, r8, asr sp
   17d24:	strdeq	r7, [r1], -r0
   17d28:	strdeq	r7, [r1], -r0
   17d2c:	strdeq	r7, [r1], -r0
   17d30:	andeq	r7, r1, r8, asr sp
   17d34:	strdeq	r7, [r1], -r0
   17d38:	andeq	r7, r1, r8, asr sp
   17d3c:	strdeq	r7, [r1], -r0
   17d40:	strdeq	r7, [r1], -r0
   17d44:	strdeq	r7, [r1], -r0
   17d48:	strdeq	r7, [r1], -r0
   17d4c:	strdeq	r7, [r1], -r0
   17d50:	strdeq	r7, [r1], -r0
   17d54:	andeq	r7, r1, r8, asr sp
   17d58:	ldr	r0, [fp, #8]
   17d5c:	movw	r1, #48	; 0x30
   17d60:	bl	10ee0 <strchr@plt>
   17d64:	movw	r1, #0
   17d68:	cmp	r0, r1
   17d6c:	beq	17dec <__assert_fail@plt+0x6e58>
   17d70:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17d74:	ldr	r0, [r0]
   17d78:	ldrb	r0, [r0, #1]
   17d7c:	mov	r1, r0
   17d80:	cmp	r0, #66	; 0x42
   17d84:	str	r1, [sp, #8]
   17d88:	beq	17dd4 <__assert_fail@plt+0x6e40>
   17d8c:	b	17d90 <__assert_fail@plt+0x6dfc>
   17d90:	ldr	r0, [sp, #8]
   17d94:	cmp	r0, #68	; 0x44
   17d98:	beq	17dd4 <__assert_fail@plt+0x6e40>
   17d9c:	b	17da0 <__assert_fail@plt+0x6e0c>
   17da0:	ldr	r0, [sp, #8]
   17da4:	cmp	r0, #105	; 0x69
   17da8:	bne	17de8 <__assert_fail@plt+0x6e54>
   17dac:	b	17db0 <__assert_fail@plt+0x6e1c>
   17db0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17db4:	ldr	r0, [r0]
   17db8:	ldrb	r0, [r0, #2]
   17dbc:	cmp	r0, #66	; 0x42
   17dc0:	bne	17dd0 <__assert_fail@plt+0x6e3c>
   17dc4:	ldr	r0, [sp, #28]
   17dc8:	add	r0, r0, #2
   17dcc:	str	r0, [sp, #28]
   17dd0:	b	17de8 <__assert_fail@plt+0x6e54>
   17dd4:	movw	r0, #1000	; 0x3e8
   17dd8:	str	r0, [sp, #32]
   17ddc:	ldr	r0, [sp, #28]
   17de0:	add	r0, r0, #1
   17de4:	str	r0, [sp, #28]
   17de8:	b	17dec <__assert_fail@plt+0x6e58>
   17dec:	b	17df0 <__assert_fail@plt+0x6e5c>
   17df0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17df4:	ldr	r0, [r0]
   17df8:	ldrb	r0, [r0]
   17dfc:	sub	r0, r0, #66	; 0x42
   17e00:	cmp	r0, #53	; 0x35
   17e04:	str	r0, [sp, #4]
   17e08:	bhi	17ffc <__assert_fail@plt+0x7068>
   17e0c:	add	r0, pc, #8
   17e10:	ldr	r1, [sp, #4]
   17e14:	ldr	r0, [r0, r1, lsl #2]
   17e18:	mov	pc, r0
   17e1c:	andeq	r7, r1, r8, lsl #30
   17e20:	strdeq	r7, [r1], -ip
   17e24:	strdeq	r7, [r1], -ip
   17e28:	andeq	r7, r1, r8, lsr #30
   17e2c:	strdeq	r7, [r1], -ip
   17e30:	andeq	r7, r1, r0, asr #30
   17e34:	strdeq	r7, [r1], -ip
   17e38:	strdeq	r7, [r1], -ip
   17e3c:	strdeq	r7, [r1], -ip
   17e40:	andeq	r7, r1, r8, asr pc
   17e44:	strdeq	r7, [r1], -ip
   17e48:	andeq	r7, r1, r0, ror pc
   17e4c:	strdeq	r7, [r1], -ip
   17e50:	strdeq	r7, [r1], -ip
   17e54:	andeq	r7, r1, r8, lsl #31
   17e58:	strdeq	r7, [r1], -ip
   17e5c:	strdeq	r7, [r1], -ip
   17e60:	strdeq	r7, [r1], -ip
   17e64:	andeq	r7, r1, r0, lsr #31
   17e68:	strdeq	r7, [r1], -ip
   17e6c:	strdeq	r7, [r1], -ip
   17e70:	strdeq	r7, [r1], -ip
   17e74:	strdeq	r7, [r1], -ip
   17e78:	andeq	r7, r1, ip, asr #31
   17e7c:	andeq	r7, r1, r4, ror #31
   17e80:	strdeq	r7, [r1], -ip
   17e84:	strdeq	r7, [r1], -ip
   17e88:	strdeq	r7, [r1], -ip
   17e8c:	strdeq	r7, [r1], -ip
   17e90:	strdeq	r7, [r1], -ip
   17e94:	strdeq	r7, [r1], -ip
   17e98:	strdeq	r7, [r1], -ip
   17e9c:	strdeq	r7, [r1], -r4
   17ea0:	andeq	r7, r1, ip, lsl pc
   17ea4:	strdeq	r7, [r1], -ip
   17ea8:	strdeq	r7, [r1], -ip
   17eac:	strdeq	r7, [r1], -ip
   17eb0:	andeq	r7, r1, r0, asr #30
   17eb4:	strdeq	r7, [r1], -ip
   17eb8:	strdeq	r7, [r1], -ip
   17ebc:	strdeq	r7, [r1], -ip
   17ec0:	andeq	r7, r1, r8, asr pc
   17ec4:	strdeq	r7, [r1], -ip
   17ec8:	andeq	r7, r1, r0, ror pc
   17ecc:	strdeq	r7, [r1], -ip
   17ed0:	strdeq	r7, [r1], -ip
   17ed4:	strdeq	r7, [r1], -ip
   17ed8:	strdeq	r7, [r1], -ip
   17edc:	strdeq	r7, [r1], -ip
   17ee0:	strdeq	r7, [r1], -ip
   17ee4:	andeq	r7, r1, r0, lsr #31
   17ee8:	strdeq	r7, [r1], -ip
   17eec:	strdeq	r7, [r1], -ip
   17ef0:			; <UNDEFINED> instruction: 0x00017fb8
   17ef4:	sub	r0, fp, #32
   17ef8:	movw	r1, #512	; 0x200
   17efc:	bl	18080 <__assert_fail@plt+0x70ec>
   17f00:	str	r0, [sp, #24]
   17f04:	b	18018 <__assert_fail@plt+0x7084>
   17f08:	sub	r0, fp, #32
   17f0c:	movw	r1, #1024	; 0x400
   17f10:	bl	18080 <__assert_fail@plt+0x70ec>
   17f14:	str	r0, [sp, #24]
   17f18:	b	18018 <__assert_fail@plt+0x7084>
   17f1c:	movw	r0, #0
   17f20:	str	r0, [sp, #24]
   17f24:	b	18018 <__assert_fail@plt+0x7084>
   17f28:	ldr	r1, [sp, #32]
   17f2c:	sub	r0, fp, #32
   17f30:	movw	r2, #6
   17f34:	bl	196ec <__assert_fail@plt+0x8758>
   17f38:	str	r0, [sp, #24]
   17f3c:	b	18018 <__assert_fail@plt+0x7084>
   17f40:	ldr	r1, [sp, #32]
   17f44:	sub	r0, fp, #32
   17f48:	movw	r2, #3
   17f4c:	bl	196ec <__assert_fail@plt+0x8758>
   17f50:	str	r0, [sp, #24]
   17f54:	b	18018 <__assert_fail@plt+0x7084>
   17f58:	ldr	r1, [sp, #32]
   17f5c:	sub	r0, fp, #32
   17f60:	movw	r2, #1
   17f64:	bl	196ec <__assert_fail@plt+0x8758>
   17f68:	str	r0, [sp, #24]
   17f6c:	b	18018 <__assert_fail@plt+0x7084>
   17f70:	ldr	r1, [sp, #32]
   17f74:	sub	r0, fp, #32
   17f78:	movw	r2, #2
   17f7c:	bl	196ec <__assert_fail@plt+0x8758>
   17f80:	str	r0, [sp, #24]
   17f84:	b	18018 <__assert_fail@plt+0x7084>
   17f88:	ldr	r1, [sp, #32]
   17f8c:	sub	r0, fp, #32
   17f90:	movw	r2, #5
   17f94:	bl	196ec <__assert_fail@plt+0x8758>
   17f98:	str	r0, [sp, #24]
   17f9c:	b	18018 <__assert_fail@plt+0x7084>
   17fa0:	ldr	r1, [sp, #32]
   17fa4:	sub	r0, fp, #32
   17fa8:	movw	r2, #4
   17fac:	bl	196ec <__assert_fail@plt+0x8758>
   17fb0:	str	r0, [sp, #24]
   17fb4:	b	18018 <__assert_fail@plt+0x7084>
   17fb8:	sub	r0, fp, #32
   17fbc:	movw	r1, #2
   17fc0:	bl	18080 <__assert_fail@plt+0x70ec>
   17fc4:	str	r0, [sp, #24]
   17fc8:	b	18018 <__assert_fail@plt+0x7084>
   17fcc:	ldr	r1, [sp, #32]
   17fd0:	sub	r0, fp, #32
   17fd4:	movw	r2, #8
   17fd8:	bl	196ec <__assert_fail@plt+0x8758>
   17fdc:	str	r0, [sp, #24]
   17fe0:	b	18018 <__assert_fail@plt+0x7084>
   17fe4:	ldr	r1, [sp, #32]
   17fe8:	sub	r0, fp, #32
   17fec:	movw	r2, #7
   17ff0:	bl	196ec <__assert_fail@plt+0x8758>
   17ff4:	str	r0, [sp, #24]
   17ff8:	b	18018 <__assert_fail@plt+0x7084>
   17ffc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18000:	ldr	r1, [fp, #-20]	; 0xffffffec
   18004:	str	r0, [r1]
   18008:	ldr	r0, [sp, #36]	; 0x24
   1800c:	orr	r0, r0, #2
   18010:	str	r0, [fp, #-4]
   18014:	b	18074 <__assert_fail@plt+0x70e0>
   18018:	ldr	r0, [sp, #24]
   1801c:	ldr	r1, [sp, #36]	; 0x24
   18020:	orr	r0, r1, r0
   18024:	str	r0, [sp, #36]	; 0x24
   18028:	ldr	r0, [sp, #28]
   1802c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18030:	ldr	r2, [r1]
   18034:	add	r0, r2, r0
   18038:	str	r0, [r1]
   1803c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18040:	ldr	r0, [r0]
   18044:	ldrsb	r0, [r0]
   18048:	cmp	r0, #0
   1804c:	beq	1805c <__assert_fail@plt+0x70c8>
   18050:	ldr	r0, [sp, #36]	; 0x24
   18054:	orr	r0, r0, #2
   18058:	str	r0, [sp, #36]	; 0x24
   1805c:	b	18060 <__assert_fail@plt+0x70cc>
   18060:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18064:	ldr	r1, [fp, #-20]	; 0xffffffec
   18068:	str	r0, [r1]
   1806c:	ldr	r0, [sp, #36]	; 0x24
   18070:	str	r0, [fp, #-4]
   18074:	ldr	r0, [fp, #-4]
   18078:	mov	sp, fp
   1807c:	pop	{fp, pc}
   18080:	push	{fp, lr}
   18084:	mov	fp, sp
   18088:	sub	sp, sp, #184	; 0xb8
   1808c:	str	r0, [fp, #-8]
   18090:	str	r1, [fp, #-12]
   18094:	b	184d4 <__assert_fail@plt+0x7540>
   18098:	b	1809c <__assert_fail@plt+0x7108>
   1809c:	ldr	r0, [fp, #-12]
   180a0:	cmp	r0, #0
   180a4:	bge	181d4 <__assert_fail@plt+0x7240>
   180a8:	ldr	r0, [fp, #-8]
   180ac:	ldr	r0, [r0]
   180b0:	cmp	r0, #0
   180b4:	bge	18148 <__assert_fail@plt+0x71b4>
   180b8:	b	180bc <__assert_fail@plt+0x7128>
   180bc:	ldr	r0, [fp, #-8]
   180c0:	ldr	r0, [r0]
   180c4:	ldr	r1, [fp, #-12]
   180c8:	movw	r2, #127	; 0x7f
   180cc:	sdiv	r1, r2, r1
   180d0:	cmp	r0, r1
   180d4:	blt	18284 <__assert_fail@plt+0x72f0>
   180d8:	b	182a0 <__assert_fail@plt+0x730c>
   180dc:	b	180e0 <__assert_fail@plt+0x714c>
   180e0:	ldr	r0, [pc, #4064]	; 190c8 <__assert_fail@plt+0x8134>
   180e4:	ldr	r1, [fp, #-12]
   180e8:	cmp	r1, r0
   180ec:	blt	18104 <__assert_fail@plt+0x7170>
   180f0:	b	18110 <__assert_fail@plt+0x717c>
   180f4:	ldr	r0, [fp, #-12]
   180f8:	movw	r1, #0
   180fc:	cmp	r1, r0
   18100:	bge	18110 <__assert_fail@plt+0x717c>
   18104:	movw	r0, #0
   18108:	str	r0, [fp, #-20]	; 0xffffffec
   1810c:	b	18128 <__assert_fail@plt+0x7194>
   18110:	ldr	r0, [fp, #-12]
   18114:	movw	r1, #0
   18118:	sub	r0, r1, r0
   1811c:	movw	r1, #127	; 0x7f
   18120:	sdiv	r0, r1, r0
   18124:	str	r0, [fp, #-20]	; 0xffffffec
   18128:	ldr	r0, [fp, #-20]	; 0xffffffec
   1812c:	ldr	r1, [fp, #-8]
   18130:	ldr	r1, [r1]
   18134:	mvn	r2, #0
   18138:	sub	r1, r2, r1
   1813c:	cmp	r0, r1
   18140:	ble	18284 <__assert_fail@plt+0x72f0>
   18144:	b	182a0 <__assert_fail@plt+0x730c>
   18148:	b	1814c <__assert_fail@plt+0x71b8>
   1814c:	b	181b4 <__assert_fail@plt+0x7220>
   18150:	b	181b4 <__assert_fail@plt+0x7220>
   18154:	ldr	r0, [fp, #-12]
   18158:	cmn	r0, #1
   1815c:	bne	181b4 <__assert_fail@plt+0x7220>
   18160:	b	18164 <__assert_fail@plt+0x71d0>
   18164:	ldr	r0, [fp, #-8]
   18168:	ldr	r0, [r0]
   1816c:	mvn	r1, #127	; 0x7f
   18170:	add	r0, r0, r1
   18174:	movw	r1, #0
   18178:	cmp	r1, r0
   1817c:	blt	18284 <__assert_fail@plt+0x72f0>
   18180:	b	182a0 <__assert_fail@plt+0x730c>
   18184:	ldr	r0, [fp, #-8]
   18188:	ldr	r0, [r0]
   1818c:	movw	r1, #0
   18190:	cmp	r1, r0
   18194:	bge	182a0 <__assert_fail@plt+0x730c>
   18198:	ldr	r0, [fp, #-8]
   1819c:	ldr	r0, [r0]
   181a0:	sub	r0, r0, #1
   181a4:	movw	r1, #127	; 0x7f
   181a8:	cmp	r1, r0
   181ac:	blt	18284 <__assert_fail@plt+0x72f0>
   181b0:	b	182a0 <__assert_fail@plt+0x730c>
   181b4:	ldr	r0, [fp, #-12]
   181b8:	mvn	r1, #127	; 0x7f
   181bc:	sdiv	r0, r1, r0
   181c0:	ldr	r1, [fp, #-8]
   181c4:	ldr	r1, [r1]
   181c8:	cmp	r0, r1
   181cc:	blt	18284 <__assert_fail@plt+0x72f0>
   181d0:	b	182a0 <__assert_fail@plt+0x730c>
   181d4:	ldr	r0, [fp, #-12]
   181d8:	cmp	r0, #0
   181dc:	bne	181e4 <__assert_fail@plt+0x7250>
   181e0:	b	182a0 <__assert_fail@plt+0x730c>
   181e4:	ldr	r0, [fp, #-8]
   181e8:	ldr	r0, [r0]
   181ec:	cmp	r0, #0
   181f0:	bge	18268 <__assert_fail@plt+0x72d4>
   181f4:	b	181f8 <__assert_fail@plt+0x7264>
   181f8:	b	18248 <__assert_fail@plt+0x72b4>
   181fc:	b	18248 <__assert_fail@plt+0x72b4>
   18200:	ldr	r0, [fp, #-8]
   18204:	ldr	r0, [r0]
   18208:	cmn	r0, #1
   1820c:	bne	18248 <__assert_fail@plt+0x72b4>
   18210:	b	18214 <__assert_fail@plt+0x7280>
   18214:	ldr	r0, [fp, #-12]
   18218:	mvn	r1, #127	; 0x7f
   1821c:	add	r0, r0, r1
   18220:	movw	r1, #0
   18224:	cmp	r1, r0
   18228:	blt	18284 <__assert_fail@plt+0x72f0>
   1822c:	b	182a0 <__assert_fail@plt+0x730c>
   18230:	ldr	r0, [fp, #-12]
   18234:	sub	r0, r0, #1
   18238:	movw	r1, #127	; 0x7f
   1823c:	cmp	r1, r0
   18240:	blt	18284 <__assert_fail@plt+0x72f0>
   18244:	b	182a0 <__assert_fail@plt+0x730c>
   18248:	ldr	r0, [fp, #-8]
   1824c:	ldr	r0, [r0]
   18250:	mvn	r1, #127	; 0x7f
   18254:	sdiv	r0, r1, r0
   18258:	ldr	r1, [fp, #-12]
   1825c:	cmp	r0, r1
   18260:	blt	18284 <__assert_fail@plt+0x72f0>
   18264:	b	182a0 <__assert_fail@plt+0x730c>
   18268:	ldr	r0, [fp, #-12]
   1826c:	movw	r1, #127	; 0x7f
   18270:	sdiv	r0, r1, r0
   18274:	ldr	r1, [fp, #-8]
   18278:	ldr	r1, [r1]
   1827c:	cmp	r0, r1
   18280:	bge	182a0 <__assert_fail@plt+0x730c>
   18284:	ldr	r0, [fp, #-8]
   18288:	ldr	r0, [r0]
   1828c:	ldr	r1, [fp, #-12]
   18290:	mul	r0, r0, r1
   18294:	sxtb	r0, r0
   18298:	str	r0, [fp, #-16]
   1829c:	b	19688 <__assert_fail@plt+0x86f4>
   182a0:	ldr	r0, [fp, #-8]
   182a4:	ldr	r0, [r0]
   182a8:	ldr	r1, [fp, #-12]
   182ac:	mul	r0, r0, r1
   182b0:	sxtb	r0, r0
   182b4:	str	r0, [fp, #-16]
   182b8:	b	196c0 <__assert_fail@plt+0x872c>
   182bc:	ldr	r0, [fp, #-12]
   182c0:	cmp	r0, #0
   182c4:	bge	183f0 <__assert_fail@plt+0x745c>
   182c8:	ldr	r0, [fp, #-8]
   182cc:	ldr	r0, [r0]
   182d0:	cmp	r0, #0
   182d4:	bge	18368 <__assert_fail@plt+0x73d4>
   182d8:	b	182dc <__assert_fail@plt+0x7348>
   182dc:	ldr	r0, [fp, #-8]
   182e0:	ldr	r0, [r0]
   182e4:	ldr	r1, [fp, #-12]
   182e8:	movw	r2, #255	; 0xff
   182ec:	sdiv	r1, r2, r1
   182f0:	cmp	r0, r1
   182f4:	blt	1849c <__assert_fail@plt+0x7508>
   182f8:	b	184b8 <__assert_fail@plt+0x7524>
   182fc:	b	18300 <__assert_fail@plt+0x736c>
   18300:	ldr	r0, [pc, #3520]	; 190c8 <__assert_fail@plt+0x8134>
   18304:	ldr	r1, [fp, #-12]
   18308:	cmp	r1, r0
   1830c:	blt	18324 <__assert_fail@plt+0x7390>
   18310:	b	18330 <__assert_fail@plt+0x739c>
   18314:	ldr	r0, [fp, #-12]
   18318:	movw	r1, #0
   1831c:	cmp	r1, r0
   18320:	bge	18330 <__assert_fail@plt+0x739c>
   18324:	movw	r0, #0
   18328:	str	r0, [fp, #-24]	; 0xffffffe8
   1832c:	b	18348 <__assert_fail@plt+0x73b4>
   18330:	ldr	r0, [fp, #-12]
   18334:	movw	r1, #0
   18338:	sub	r0, r1, r0
   1833c:	movw	r1, #255	; 0xff
   18340:	sdiv	r0, r1, r0
   18344:	str	r0, [fp, #-24]	; 0xffffffe8
   18348:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1834c:	ldr	r1, [fp, #-8]
   18350:	ldr	r1, [r1]
   18354:	mvn	r2, #0
   18358:	sub	r1, r2, r1
   1835c:	cmp	r0, r1
   18360:	ble	1849c <__assert_fail@plt+0x7508>
   18364:	b	184b8 <__assert_fail@plt+0x7524>
   18368:	b	1836c <__assert_fail@plt+0x73d8>
   1836c:	b	183d0 <__assert_fail@plt+0x743c>
   18370:	b	183d0 <__assert_fail@plt+0x743c>
   18374:	ldr	r0, [fp, #-12]
   18378:	cmn	r0, #1
   1837c:	bne	183d0 <__assert_fail@plt+0x743c>
   18380:	b	18384 <__assert_fail@plt+0x73f0>
   18384:	ldr	r0, [fp, #-8]
   18388:	ldr	r0, [r0]
   1838c:	add	r0, r0, #0
   18390:	movw	r1, #0
   18394:	cmp	r1, r0
   18398:	blt	1849c <__assert_fail@plt+0x7508>
   1839c:	b	184b8 <__assert_fail@plt+0x7524>
   183a0:	ldr	r0, [fp, #-8]
   183a4:	ldr	r0, [r0]
   183a8:	movw	r1, #0
   183ac:	cmp	r1, r0
   183b0:	bge	184b8 <__assert_fail@plt+0x7524>
   183b4:	ldr	r0, [fp, #-8]
   183b8:	ldr	r0, [r0]
   183bc:	sub	r0, r0, #1
   183c0:	mvn	r1, #0
   183c4:	cmp	r1, r0
   183c8:	blt	1849c <__assert_fail@plt+0x7508>
   183cc:	b	184b8 <__assert_fail@plt+0x7524>
   183d0:	ldr	r0, [fp, #-12]
   183d4:	movw	r1, #0
   183d8:	sdiv	r0, r1, r0
   183dc:	ldr	r1, [fp, #-8]
   183e0:	ldr	r1, [r1]
   183e4:	cmp	r0, r1
   183e8:	blt	1849c <__assert_fail@plt+0x7508>
   183ec:	b	184b8 <__assert_fail@plt+0x7524>
   183f0:	ldr	r0, [fp, #-12]
   183f4:	cmp	r0, #0
   183f8:	bne	18400 <__assert_fail@plt+0x746c>
   183fc:	b	184b8 <__assert_fail@plt+0x7524>
   18400:	ldr	r0, [fp, #-8]
   18404:	ldr	r0, [r0]
   18408:	cmp	r0, #0
   1840c:	bge	18480 <__assert_fail@plt+0x74ec>
   18410:	b	18414 <__assert_fail@plt+0x7480>
   18414:	b	18460 <__assert_fail@plt+0x74cc>
   18418:	b	18460 <__assert_fail@plt+0x74cc>
   1841c:	ldr	r0, [fp, #-8]
   18420:	ldr	r0, [r0]
   18424:	cmn	r0, #1
   18428:	bne	18460 <__assert_fail@plt+0x74cc>
   1842c:	b	18430 <__assert_fail@plt+0x749c>
   18430:	ldr	r0, [fp, #-12]
   18434:	add	r0, r0, #0
   18438:	movw	r1, #0
   1843c:	cmp	r1, r0
   18440:	blt	1849c <__assert_fail@plt+0x7508>
   18444:	b	184b8 <__assert_fail@plt+0x7524>
   18448:	ldr	r0, [fp, #-12]
   1844c:	sub	r0, r0, #1
   18450:	mvn	r1, #0
   18454:	cmp	r1, r0
   18458:	blt	1849c <__assert_fail@plt+0x7508>
   1845c:	b	184b8 <__assert_fail@plt+0x7524>
   18460:	ldr	r0, [fp, #-8]
   18464:	ldr	r0, [r0]
   18468:	movw	r1, #0
   1846c:	sdiv	r0, r1, r0
   18470:	ldr	r1, [fp, #-12]
   18474:	cmp	r0, r1
   18478:	blt	1849c <__assert_fail@plt+0x7508>
   1847c:	b	184b8 <__assert_fail@plt+0x7524>
   18480:	ldr	r0, [fp, #-12]
   18484:	movw	r1, #255	; 0xff
   18488:	sdiv	r0, r1, r0
   1848c:	ldr	r1, [fp, #-8]
   18490:	ldr	r1, [r1]
   18494:	cmp	r0, r1
   18498:	bge	184b8 <__assert_fail@plt+0x7524>
   1849c:	ldr	r0, [fp, #-8]
   184a0:	ldr	r0, [r0]
   184a4:	ldr	r1, [fp, #-12]
   184a8:	mul	r0, r0, r1
   184ac:	and	r0, r0, #255	; 0xff
   184b0:	str	r0, [fp, #-16]
   184b4:	b	19688 <__assert_fail@plt+0x86f4>
   184b8:	ldr	r0, [fp, #-8]
   184bc:	ldr	r0, [r0]
   184c0:	ldr	r1, [fp, #-12]
   184c4:	mul	r0, r0, r1
   184c8:	and	r0, r0, #255	; 0xff
   184cc:	str	r0, [fp, #-16]
   184d0:	b	196c0 <__assert_fail@plt+0x872c>
   184d4:	b	18914 <__assert_fail@plt+0x7980>
   184d8:	b	184dc <__assert_fail@plt+0x7548>
   184dc:	ldr	r0, [fp, #-12]
   184e0:	cmp	r0, #0
   184e4:	bge	18614 <__assert_fail@plt+0x7680>
   184e8:	ldr	r0, [fp, #-8]
   184ec:	ldr	r0, [r0]
   184f0:	cmp	r0, #0
   184f4:	bge	18588 <__assert_fail@plt+0x75f4>
   184f8:	b	184fc <__assert_fail@plt+0x7568>
   184fc:	ldr	r0, [fp, #-8]
   18500:	ldr	r0, [r0]
   18504:	ldr	r1, [fp, #-12]
   18508:	movw	r2, #32767	; 0x7fff
   1850c:	sdiv	r1, r2, r1
   18510:	cmp	r0, r1
   18514:	blt	186c4 <__assert_fail@plt+0x7730>
   18518:	b	186e0 <__assert_fail@plt+0x774c>
   1851c:	b	18520 <__assert_fail@plt+0x758c>
   18520:	ldr	r0, [pc, #2976]	; 190c8 <__assert_fail@plt+0x8134>
   18524:	ldr	r1, [fp, #-12]
   18528:	cmp	r1, r0
   1852c:	blt	18544 <__assert_fail@plt+0x75b0>
   18530:	b	18550 <__assert_fail@plt+0x75bc>
   18534:	ldr	r0, [fp, #-12]
   18538:	movw	r1, #0
   1853c:	cmp	r1, r0
   18540:	bge	18550 <__assert_fail@plt+0x75bc>
   18544:	movw	r0, #0
   18548:	str	r0, [fp, #-28]	; 0xffffffe4
   1854c:	b	18568 <__assert_fail@plt+0x75d4>
   18550:	ldr	r0, [fp, #-12]
   18554:	movw	r1, #0
   18558:	sub	r0, r1, r0
   1855c:	movw	r1, #32767	; 0x7fff
   18560:	sdiv	r0, r1, r0
   18564:	str	r0, [fp, #-28]	; 0xffffffe4
   18568:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1856c:	ldr	r1, [fp, #-8]
   18570:	ldr	r1, [r1]
   18574:	mvn	r2, #0
   18578:	sub	r1, r2, r1
   1857c:	cmp	r0, r1
   18580:	ble	186c4 <__assert_fail@plt+0x7730>
   18584:	b	186e0 <__assert_fail@plt+0x774c>
   18588:	b	1858c <__assert_fail@plt+0x75f8>
   1858c:	b	185f4 <__assert_fail@plt+0x7660>
   18590:	b	185f4 <__assert_fail@plt+0x7660>
   18594:	ldr	r0, [fp, #-12]
   18598:	cmn	r0, #1
   1859c:	bne	185f4 <__assert_fail@plt+0x7660>
   185a0:	b	185a4 <__assert_fail@plt+0x7610>
   185a4:	ldr	r0, [pc, #4076]	; 19598 <__assert_fail@plt+0x8604>
   185a8:	ldr	r1, [fp, #-8]
   185ac:	ldr	r1, [r1]
   185b0:	add	r0, r1, r0
   185b4:	movw	r1, #0
   185b8:	cmp	r1, r0
   185bc:	blt	186c4 <__assert_fail@plt+0x7730>
   185c0:	b	186e0 <__assert_fail@plt+0x774c>
   185c4:	ldr	r0, [fp, #-8]
   185c8:	ldr	r0, [r0]
   185cc:	movw	r1, #0
   185d0:	cmp	r1, r0
   185d4:	bge	186e0 <__assert_fail@plt+0x774c>
   185d8:	ldr	r0, [fp, #-8]
   185dc:	ldr	r0, [r0]
   185e0:	sub	r0, r0, #1
   185e4:	movw	r1, #32767	; 0x7fff
   185e8:	cmp	r1, r0
   185ec:	blt	186c4 <__assert_fail@plt+0x7730>
   185f0:	b	186e0 <__assert_fail@plt+0x774c>
   185f4:	ldr	r0, [pc, #3996]	; 19598 <__assert_fail@plt+0x8604>
   185f8:	ldr	r1, [fp, #-12]
   185fc:	sdiv	r0, r0, r1
   18600:	ldr	r1, [fp, #-8]
   18604:	ldr	r1, [r1]
   18608:	cmp	r0, r1
   1860c:	blt	186c4 <__assert_fail@plt+0x7730>
   18610:	b	186e0 <__assert_fail@plt+0x774c>
   18614:	ldr	r0, [fp, #-12]
   18618:	cmp	r0, #0
   1861c:	bne	18624 <__assert_fail@plt+0x7690>
   18620:	b	186e0 <__assert_fail@plt+0x774c>
   18624:	ldr	r0, [fp, #-8]
   18628:	ldr	r0, [r0]
   1862c:	cmp	r0, #0
   18630:	bge	186a8 <__assert_fail@plt+0x7714>
   18634:	b	18638 <__assert_fail@plt+0x76a4>
   18638:	b	18688 <__assert_fail@plt+0x76f4>
   1863c:	b	18688 <__assert_fail@plt+0x76f4>
   18640:	ldr	r0, [fp, #-8]
   18644:	ldr	r0, [r0]
   18648:	cmn	r0, #1
   1864c:	bne	18688 <__assert_fail@plt+0x76f4>
   18650:	b	18654 <__assert_fail@plt+0x76c0>
   18654:	ldr	r0, [pc, #3900]	; 19598 <__assert_fail@plt+0x8604>
   18658:	ldr	r1, [fp, #-12]
   1865c:	add	r0, r1, r0
   18660:	movw	r1, #0
   18664:	cmp	r1, r0
   18668:	blt	186c4 <__assert_fail@plt+0x7730>
   1866c:	b	186e0 <__assert_fail@plt+0x774c>
   18670:	ldr	r0, [fp, #-12]
   18674:	sub	r0, r0, #1
   18678:	movw	r1, #32767	; 0x7fff
   1867c:	cmp	r1, r0
   18680:	blt	186c4 <__assert_fail@plt+0x7730>
   18684:	b	186e0 <__assert_fail@plt+0x774c>
   18688:	ldr	r0, [pc, #3848]	; 19598 <__assert_fail@plt+0x8604>
   1868c:	ldr	r1, [fp, #-8]
   18690:	ldr	r1, [r1]
   18694:	sdiv	r0, r0, r1
   18698:	ldr	r1, [fp, #-12]
   1869c:	cmp	r0, r1
   186a0:	blt	186c4 <__assert_fail@plt+0x7730>
   186a4:	b	186e0 <__assert_fail@plt+0x774c>
   186a8:	ldr	r0, [fp, #-12]
   186ac:	movw	r1, #32767	; 0x7fff
   186b0:	sdiv	r0, r1, r0
   186b4:	ldr	r1, [fp, #-8]
   186b8:	ldr	r1, [r1]
   186bc:	cmp	r0, r1
   186c0:	bge	186e0 <__assert_fail@plt+0x774c>
   186c4:	ldr	r0, [fp, #-8]
   186c8:	ldr	r0, [r0]
   186cc:	ldr	r1, [fp, #-12]
   186d0:	mul	r0, r0, r1
   186d4:	sxth	r0, r0
   186d8:	str	r0, [fp, #-16]
   186dc:	b	19688 <__assert_fail@plt+0x86f4>
   186e0:	ldr	r0, [fp, #-8]
   186e4:	ldr	r0, [r0]
   186e8:	ldr	r1, [fp, #-12]
   186ec:	mul	r0, r0, r1
   186f0:	sxth	r0, r0
   186f4:	str	r0, [fp, #-16]
   186f8:	b	196c0 <__assert_fail@plt+0x872c>
   186fc:	ldr	r0, [fp, #-12]
   18700:	cmp	r0, #0
   18704:	bge	18830 <__assert_fail@plt+0x789c>
   18708:	ldr	r0, [fp, #-8]
   1870c:	ldr	r0, [r0]
   18710:	cmp	r0, #0
   18714:	bge	187a8 <__assert_fail@plt+0x7814>
   18718:	b	1871c <__assert_fail@plt+0x7788>
   1871c:	ldr	r0, [fp, #-8]
   18720:	ldr	r0, [r0]
   18724:	ldr	r1, [fp, #-12]
   18728:	movw	r2, #65535	; 0xffff
   1872c:	sdiv	r1, r2, r1
   18730:	cmp	r0, r1
   18734:	blt	188dc <__assert_fail@plt+0x7948>
   18738:	b	188f8 <__assert_fail@plt+0x7964>
   1873c:	b	18740 <__assert_fail@plt+0x77ac>
   18740:	ldr	r0, [pc, #3992]	; 196e0 <__assert_fail@plt+0x874c>
   18744:	ldr	r1, [fp, #-12]
   18748:	cmp	r1, r0
   1874c:	blt	18764 <__assert_fail@plt+0x77d0>
   18750:	b	18770 <__assert_fail@plt+0x77dc>
   18754:	ldr	r0, [fp, #-12]
   18758:	movw	r1, #0
   1875c:	cmp	r1, r0
   18760:	bge	18770 <__assert_fail@plt+0x77dc>
   18764:	movw	r0, #0
   18768:	str	r0, [fp, #-32]	; 0xffffffe0
   1876c:	b	18788 <__assert_fail@plt+0x77f4>
   18770:	ldr	r0, [fp, #-12]
   18774:	movw	r1, #0
   18778:	sub	r0, r1, r0
   1877c:	movw	r1, #65535	; 0xffff
   18780:	sdiv	r0, r1, r0
   18784:	str	r0, [fp, #-32]	; 0xffffffe0
   18788:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1878c:	ldr	r1, [fp, #-8]
   18790:	ldr	r1, [r1]
   18794:	mvn	r2, #0
   18798:	sub	r1, r2, r1
   1879c:	cmp	r0, r1
   187a0:	ble	188dc <__assert_fail@plt+0x7948>
   187a4:	b	188f8 <__assert_fail@plt+0x7964>
   187a8:	b	187ac <__assert_fail@plt+0x7818>
   187ac:	b	18810 <__assert_fail@plt+0x787c>
   187b0:	b	18810 <__assert_fail@plt+0x787c>
   187b4:	ldr	r0, [fp, #-12]
   187b8:	cmn	r0, #1
   187bc:	bne	18810 <__assert_fail@plt+0x787c>
   187c0:	b	187c4 <__assert_fail@plt+0x7830>
   187c4:	ldr	r0, [fp, #-8]
   187c8:	ldr	r0, [r0]
   187cc:	add	r0, r0, #0
   187d0:	movw	r1, #0
   187d4:	cmp	r1, r0
   187d8:	blt	188dc <__assert_fail@plt+0x7948>
   187dc:	b	188f8 <__assert_fail@plt+0x7964>
   187e0:	ldr	r0, [fp, #-8]
   187e4:	ldr	r0, [r0]
   187e8:	movw	r1, #0
   187ec:	cmp	r1, r0
   187f0:	bge	188f8 <__assert_fail@plt+0x7964>
   187f4:	ldr	r0, [fp, #-8]
   187f8:	ldr	r0, [r0]
   187fc:	sub	r0, r0, #1
   18800:	mvn	r1, #0
   18804:	cmp	r1, r0
   18808:	blt	188dc <__assert_fail@plt+0x7948>
   1880c:	b	188f8 <__assert_fail@plt+0x7964>
   18810:	ldr	r0, [fp, #-12]
   18814:	movw	r1, #0
   18818:	sdiv	r0, r1, r0
   1881c:	ldr	r1, [fp, #-8]
   18820:	ldr	r1, [r1]
   18824:	cmp	r0, r1
   18828:	blt	188dc <__assert_fail@plt+0x7948>
   1882c:	b	188f8 <__assert_fail@plt+0x7964>
   18830:	ldr	r0, [fp, #-12]
   18834:	cmp	r0, #0
   18838:	bne	18840 <__assert_fail@plt+0x78ac>
   1883c:	b	188f8 <__assert_fail@plt+0x7964>
   18840:	ldr	r0, [fp, #-8]
   18844:	ldr	r0, [r0]
   18848:	cmp	r0, #0
   1884c:	bge	188c0 <__assert_fail@plt+0x792c>
   18850:	b	18854 <__assert_fail@plt+0x78c0>
   18854:	b	188a0 <__assert_fail@plt+0x790c>
   18858:	b	188a0 <__assert_fail@plt+0x790c>
   1885c:	ldr	r0, [fp, #-8]
   18860:	ldr	r0, [r0]
   18864:	cmn	r0, #1
   18868:	bne	188a0 <__assert_fail@plt+0x790c>
   1886c:	b	18870 <__assert_fail@plt+0x78dc>
   18870:	ldr	r0, [fp, #-12]
   18874:	add	r0, r0, #0
   18878:	movw	r1, #0
   1887c:	cmp	r1, r0
   18880:	blt	188dc <__assert_fail@plt+0x7948>
   18884:	b	188f8 <__assert_fail@plt+0x7964>
   18888:	ldr	r0, [fp, #-12]
   1888c:	sub	r0, r0, #1
   18890:	mvn	r1, #0
   18894:	cmp	r1, r0
   18898:	blt	188dc <__assert_fail@plt+0x7948>
   1889c:	b	188f8 <__assert_fail@plt+0x7964>
   188a0:	ldr	r0, [fp, #-8]
   188a4:	ldr	r0, [r0]
   188a8:	movw	r1, #0
   188ac:	sdiv	r0, r1, r0
   188b0:	ldr	r1, [fp, #-12]
   188b4:	cmp	r0, r1
   188b8:	blt	188dc <__assert_fail@plt+0x7948>
   188bc:	b	188f8 <__assert_fail@plt+0x7964>
   188c0:	ldr	r0, [fp, #-12]
   188c4:	movw	r1, #65535	; 0xffff
   188c8:	sdiv	r0, r1, r0
   188cc:	ldr	r1, [fp, #-8]
   188d0:	ldr	r1, [r1]
   188d4:	cmp	r0, r1
   188d8:	bge	188f8 <__assert_fail@plt+0x7964>
   188dc:	ldr	r0, [fp, #-8]
   188e0:	ldr	r0, [r0]
   188e4:	ldr	r1, [fp, #-12]
   188e8:	mul	r0, r0, r1
   188ec:	uxth	r0, r0
   188f0:	str	r0, [fp, #-16]
   188f4:	b	19688 <__assert_fail@plt+0x86f4>
   188f8:	ldr	r0, [fp, #-8]
   188fc:	ldr	r0, [r0]
   18900:	ldr	r1, [fp, #-12]
   18904:	mul	r0, r0, r1
   18908:	uxth	r0, r0
   1890c:	str	r0, [fp, #-16]
   18910:	b	196c0 <__assert_fail@plt+0x872c>
   18914:	b	18918 <__assert_fail@plt+0x7984>
   18918:	b	1891c <__assert_fail@plt+0x7988>
   1891c:	ldr	r0, [fp, #-12]
   18920:	cmp	r0, #0
   18924:	bge	18a44 <__assert_fail@plt+0x7ab0>
   18928:	ldr	r0, [fp, #-8]
   1892c:	ldr	r0, [r0]
   18930:	cmp	r0, #0
   18934:	bge	189c8 <__assert_fail@plt+0x7a34>
   18938:	b	1893c <__assert_fail@plt+0x79a8>
   1893c:	ldr	r0, [pc, #3488]	; 196e4 <__assert_fail@plt+0x8750>
   18940:	ldr	r1, [fp, #-8]
   18944:	ldr	r1, [r1]
   18948:	ldr	r2, [fp, #-12]
   1894c:	sdiv	r0, r0, r2
   18950:	cmp	r1, r0
   18954:	blt	18ae4 <__assert_fail@plt+0x7b50>
   18958:	b	18afc <__assert_fail@plt+0x7b68>
   1895c:	b	18960 <__assert_fail@plt+0x79cc>
   18960:	ldr	r0, [pc, #3448]	; 196e0 <__assert_fail@plt+0x874c>
   18964:	ldr	r1, [fp, #-12]
   18968:	cmp	r1, r0
   1896c:	blt	18984 <__assert_fail@plt+0x79f0>
   18970:	b	18990 <__assert_fail@plt+0x79fc>
   18974:	ldr	r0, [fp, #-12]
   18978:	movw	r1, #0
   1897c:	cmp	r1, r0
   18980:	bge	18990 <__assert_fail@plt+0x79fc>
   18984:	movw	r0, #0
   18988:	str	r0, [fp, #-36]	; 0xffffffdc
   1898c:	b	189a8 <__assert_fail@plt+0x7a14>
   18990:	ldr	r0, [pc, #3404]	; 196e4 <__assert_fail@plt+0x8750>
   18994:	ldr	r1, [fp, #-12]
   18998:	movw	r2, #0
   1899c:	sub	r1, r2, r1
   189a0:	sdiv	r0, r0, r1
   189a4:	str	r0, [fp, #-36]	; 0xffffffdc
   189a8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   189ac:	ldr	r1, [fp, #-8]
   189b0:	ldr	r1, [r1]
   189b4:	mvn	r2, #0
   189b8:	sub	r1, r2, r1
   189bc:	cmp	r0, r1
   189c0:	ble	18ae4 <__assert_fail@plt+0x7b50>
   189c4:	b	18afc <__assert_fail@plt+0x7b68>
   189c8:	ldr	r0, [fp, #-12]
   189cc:	cmn	r0, #1
   189d0:	bne	18a24 <__assert_fail@plt+0x7a90>
   189d4:	b	189d8 <__assert_fail@plt+0x7a44>
   189d8:	ldr	r0, [fp, #-8]
   189dc:	ldr	r0, [r0]
   189e0:	add	r0, r0, #-2147483648	; 0x80000000
   189e4:	movw	r1, #0
   189e8:	cmp	r1, r0
   189ec:	blt	18ae4 <__assert_fail@plt+0x7b50>
   189f0:	b	18afc <__assert_fail@plt+0x7b68>
   189f4:	ldr	r0, [fp, #-8]
   189f8:	ldr	r0, [r0]
   189fc:	movw	r1, #0
   18a00:	cmp	r1, r0
   18a04:	bge	18afc <__assert_fail@plt+0x7b68>
   18a08:	ldr	r0, [pc, #3284]	; 196e4 <__assert_fail@plt+0x8750>
   18a0c:	ldr	r1, [fp, #-8]
   18a10:	ldr	r1, [r1]
   18a14:	sub	r1, r1, #1
   18a18:	cmp	r0, r1
   18a1c:	blt	18ae4 <__assert_fail@plt+0x7b50>
   18a20:	b	18afc <__assert_fail@plt+0x7b68>
   18a24:	ldr	r0, [pc, #3260]	; 196e8 <__assert_fail@plt+0x8754>
   18a28:	ldr	r1, [fp, #-12]
   18a2c:	sdiv	r0, r0, r1
   18a30:	ldr	r1, [fp, #-8]
   18a34:	ldr	r1, [r1]
   18a38:	cmp	r0, r1
   18a3c:	blt	18ae4 <__assert_fail@plt+0x7b50>
   18a40:	b	18afc <__assert_fail@plt+0x7b68>
   18a44:	ldr	r0, [fp, #-12]
   18a48:	cmp	r0, #0
   18a4c:	bne	18a54 <__assert_fail@plt+0x7ac0>
   18a50:	b	18afc <__assert_fail@plt+0x7b68>
   18a54:	ldr	r0, [fp, #-8]
   18a58:	ldr	r0, [r0]
   18a5c:	cmp	r0, #0
   18a60:	bge	18ac8 <__assert_fail@plt+0x7b34>
   18a64:	ldr	r0, [fp, #-8]
   18a68:	ldr	r0, [r0]
   18a6c:	cmn	r0, #1
   18a70:	bne	18aa8 <__assert_fail@plt+0x7b14>
   18a74:	b	18a78 <__assert_fail@plt+0x7ae4>
   18a78:	ldr	r0, [fp, #-12]
   18a7c:	add	r0, r0, #-2147483648	; 0x80000000
   18a80:	movw	r1, #0
   18a84:	cmp	r1, r0
   18a88:	blt	18ae4 <__assert_fail@plt+0x7b50>
   18a8c:	b	18afc <__assert_fail@plt+0x7b68>
   18a90:	ldr	r0, [pc, #3148]	; 196e4 <__assert_fail@plt+0x8750>
   18a94:	ldr	r1, [fp, #-12]
   18a98:	sub	r1, r1, #1
   18a9c:	cmp	r0, r1
   18aa0:	blt	18ae4 <__assert_fail@plt+0x7b50>
   18aa4:	b	18afc <__assert_fail@plt+0x7b68>
   18aa8:	ldr	r0, [pc, #3128]	; 196e8 <__assert_fail@plt+0x8754>
   18aac:	ldr	r1, [fp, #-8]
   18ab0:	ldr	r1, [r1]
   18ab4:	sdiv	r0, r0, r1
   18ab8:	ldr	r1, [fp, #-12]
   18abc:	cmp	r0, r1
   18ac0:	blt	18ae4 <__assert_fail@plt+0x7b50>
   18ac4:	b	18afc <__assert_fail@plt+0x7b68>
   18ac8:	ldr	r0, [pc, #3092]	; 196e4 <__assert_fail@plt+0x8750>
   18acc:	ldr	r1, [fp, #-12]
   18ad0:	sdiv	r0, r0, r1
   18ad4:	ldr	r1, [fp, #-8]
   18ad8:	ldr	r1, [r1]
   18adc:	cmp	r0, r1
   18ae0:	bge	18afc <__assert_fail@plt+0x7b68>
   18ae4:	ldr	r0, [fp, #-8]
   18ae8:	ldr	r0, [r0]
   18aec:	ldr	r1, [fp, #-12]
   18af0:	mul	r0, r0, r1
   18af4:	str	r0, [fp, #-16]
   18af8:	b	19688 <__assert_fail@plt+0x86f4>
   18afc:	ldr	r0, [fp, #-8]
   18b00:	ldr	r0, [r0]
   18b04:	ldr	r1, [fp, #-12]
   18b08:	mul	r0, r0, r1
   18b0c:	str	r0, [fp, #-16]
   18b10:	b	196c0 <__assert_fail@plt+0x872c>
   18b14:	ldr	r0, [fp, #-12]
   18b18:	cmp	r0, #0
   18b1c:	bge	18c48 <__assert_fail@plt+0x7cb4>
   18b20:	ldr	r0, [fp, #-8]
   18b24:	ldr	r0, [r0]
   18b28:	cmp	r0, #0
   18b2c:	bge	18bc0 <__assert_fail@plt+0x7c2c>
   18b30:	b	18b54 <__assert_fail@plt+0x7bc0>
   18b34:	ldr	r0, [fp, #-8]
   18b38:	ldr	r0, [r0]
   18b3c:	ldr	r1, [fp, #-12]
   18b40:	mvn	r2, #0
   18b44:	udiv	r1, r2, r1
   18b48:	cmp	r0, r1
   18b4c:	bcc	18cf4 <__assert_fail@plt+0x7d60>
   18b50:	b	18d0c <__assert_fail@plt+0x7d78>
   18b54:	b	18b58 <__assert_fail@plt+0x7bc4>
   18b58:	ldr	r0, [pc, #2944]	; 196e0 <__assert_fail@plt+0x874c>
   18b5c:	ldr	r1, [fp, #-12]
   18b60:	cmp	r1, r0
   18b64:	blt	18b7c <__assert_fail@plt+0x7be8>
   18b68:	b	18b88 <__assert_fail@plt+0x7bf4>
   18b6c:	ldr	r0, [fp, #-12]
   18b70:	movw	r1, #0
   18b74:	cmp	r1, r0
   18b78:	bge	18b88 <__assert_fail@plt+0x7bf4>
   18b7c:	movw	r0, #1
   18b80:	str	r0, [fp, #-40]	; 0xffffffd8
   18b84:	b	18ba0 <__assert_fail@plt+0x7c0c>
   18b88:	ldr	r0, [fp, #-12]
   18b8c:	movw	r1, #0
   18b90:	sub	r0, r1, r0
   18b94:	mvn	r1, #0
   18b98:	udiv	r0, r1, r0
   18b9c:	str	r0, [fp, #-40]	; 0xffffffd8
   18ba0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18ba4:	ldr	r1, [fp, #-8]
   18ba8:	ldr	r1, [r1]
   18bac:	mvn	r2, #0
   18bb0:	sub	r1, r2, r1
   18bb4:	cmp	r0, r1
   18bb8:	bls	18cf4 <__assert_fail@plt+0x7d60>
   18bbc:	b	18d0c <__assert_fail@plt+0x7d78>
   18bc0:	b	18bc4 <__assert_fail@plt+0x7c30>
   18bc4:	b	18c28 <__assert_fail@plt+0x7c94>
   18bc8:	b	18c28 <__assert_fail@plt+0x7c94>
   18bcc:	ldr	r0, [fp, #-12]
   18bd0:	cmn	r0, #1
   18bd4:	bne	18c28 <__assert_fail@plt+0x7c94>
   18bd8:	b	18bdc <__assert_fail@plt+0x7c48>
   18bdc:	ldr	r0, [fp, #-8]
   18be0:	ldr	r0, [r0]
   18be4:	add	r0, r0, #0
   18be8:	movw	r1, #0
   18bec:	cmp	r1, r0
   18bf0:	blt	18cf4 <__assert_fail@plt+0x7d60>
   18bf4:	b	18d0c <__assert_fail@plt+0x7d78>
   18bf8:	ldr	r0, [fp, #-8]
   18bfc:	ldr	r0, [r0]
   18c00:	movw	r1, #0
   18c04:	cmp	r1, r0
   18c08:	bge	18d0c <__assert_fail@plt+0x7d78>
   18c0c:	ldr	r0, [fp, #-8]
   18c10:	ldr	r0, [r0]
   18c14:	sub	r0, r0, #1
   18c18:	mvn	r1, #0
   18c1c:	cmp	r1, r0
   18c20:	blt	18cf4 <__assert_fail@plt+0x7d60>
   18c24:	b	18d0c <__assert_fail@plt+0x7d78>
   18c28:	ldr	r0, [fp, #-12]
   18c2c:	movw	r1, #0
   18c30:	sdiv	r0, r1, r0
   18c34:	ldr	r1, [fp, #-8]
   18c38:	ldr	r1, [r1]
   18c3c:	cmp	r0, r1
   18c40:	blt	18cf4 <__assert_fail@plt+0x7d60>
   18c44:	b	18d0c <__assert_fail@plt+0x7d78>
   18c48:	ldr	r0, [fp, #-12]
   18c4c:	cmp	r0, #0
   18c50:	bne	18c58 <__assert_fail@plt+0x7cc4>
   18c54:	b	18d0c <__assert_fail@plt+0x7d78>
   18c58:	ldr	r0, [fp, #-8]
   18c5c:	ldr	r0, [r0]
   18c60:	cmp	r0, #0
   18c64:	bge	18cd8 <__assert_fail@plt+0x7d44>
   18c68:	b	18c6c <__assert_fail@plt+0x7cd8>
   18c6c:	b	18cb8 <__assert_fail@plt+0x7d24>
   18c70:	b	18cb8 <__assert_fail@plt+0x7d24>
   18c74:	ldr	r0, [fp, #-8]
   18c78:	ldr	r0, [r0]
   18c7c:	cmn	r0, #1
   18c80:	bne	18cb8 <__assert_fail@plt+0x7d24>
   18c84:	b	18c88 <__assert_fail@plt+0x7cf4>
   18c88:	ldr	r0, [fp, #-12]
   18c8c:	add	r0, r0, #0
   18c90:	movw	r1, #0
   18c94:	cmp	r1, r0
   18c98:	blt	18cf4 <__assert_fail@plt+0x7d60>
   18c9c:	b	18d0c <__assert_fail@plt+0x7d78>
   18ca0:	ldr	r0, [fp, #-12]
   18ca4:	sub	r0, r0, #1
   18ca8:	mvn	r1, #0
   18cac:	cmp	r1, r0
   18cb0:	blt	18cf4 <__assert_fail@plt+0x7d60>
   18cb4:	b	18d0c <__assert_fail@plt+0x7d78>
   18cb8:	ldr	r0, [fp, #-8]
   18cbc:	ldr	r0, [r0]
   18cc0:	movw	r1, #0
   18cc4:	sdiv	r0, r1, r0
   18cc8:	ldr	r1, [fp, #-12]
   18ccc:	cmp	r0, r1
   18cd0:	blt	18cf4 <__assert_fail@plt+0x7d60>
   18cd4:	b	18d0c <__assert_fail@plt+0x7d78>
   18cd8:	ldr	r0, [fp, #-12]
   18cdc:	mvn	r1, #0
   18ce0:	udiv	r0, r1, r0
   18ce4:	ldr	r1, [fp, #-8]
   18ce8:	ldr	r1, [r1]
   18cec:	cmp	r0, r1
   18cf0:	bcs	18d0c <__assert_fail@plt+0x7d78>
   18cf4:	ldr	r0, [fp, #-8]
   18cf8:	ldr	r0, [r0]
   18cfc:	ldr	r1, [fp, #-12]
   18d00:	mul	r0, r0, r1
   18d04:	str	r0, [fp, #-16]
   18d08:	b	19688 <__assert_fail@plt+0x86f4>
   18d0c:	ldr	r0, [fp, #-8]
   18d10:	ldr	r0, [r0]
   18d14:	ldr	r1, [fp, #-12]
   18d18:	mul	r0, r0, r1
   18d1c:	str	r0, [fp, #-16]
   18d20:	b	196c0 <__assert_fail@plt+0x872c>
   18d24:	b	18d28 <__assert_fail@plt+0x7d94>
   18d28:	b	18d2c <__assert_fail@plt+0x7d98>
   18d2c:	ldr	r0, [fp, #-12]
   18d30:	cmp	r0, #0
   18d34:	bge	18e54 <__assert_fail@plt+0x7ec0>
   18d38:	ldr	r0, [fp, #-8]
   18d3c:	ldr	r0, [r0]
   18d40:	cmp	r0, #0
   18d44:	bge	18dd8 <__assert_fail@plt+0x7e44>
   18d48:	b	18d4c <__assert_fail@plt+0x7db8>
   18d4c:	ldr	r0, [pc, #2448]	; 196e4 <__assert_fail@plt+0x8750>
   18d50:	ldr	r1, [fp, #-8]
   18d54:	ldr	r1, [r1]
   18d58:	ldr	r2, [fp, #-12]
   18d5c:	sdiv	r0, r0, r2
   18d60:	cmp	r1, r0
   18d64:	blt	18ef4 <__assert_fail@plt+0x7f60>
   18d68:	b	18f0c <__assert_fail@plt+0x7f78>
   18d6c:	b	18d70 <__assert_fail@plt+0x7ddc>
   18d70:	ldr	r0, [pc, #2408]	; 196e0 <__assert_fail@plt+0x874c>
   18d74:	ldr	r1, [fp, #-12]
   18d78:	cmp	r1, r0
   18d7c:	blt	18d94 <__assert_fail@plt+0x7e00>
   18d80:	b	18da0 <__assert_fail@plt+0x7e0c>
   18d84:	ldr	r0, [fp, #-12]
   18d88:	movw	r1, #0
   18d8c:	cmp	r1, r0
   18d90:	bge	18da0 <__assert_fail@plt+0x7e0c>
   18d94:	movw	r0, #0
   18d98:	str	r0, [fp, #-44]	; 0xffffffd4
   18d9c:	b	18db8 <__assert_fail@plt+0x7e24>
   18da0:	ldr	r0, [pc, #2364]	; 196e4 <__assert_fail@plt+0x8750>
   18da4:	ldr	r1, [fp, #-12]
   18da8:	movw	r2, #0
   18dac:	sub	r1, r2, r1
   18db0:	sdiv	r0, r0, r1
   18db4:	str	r0, [fp, #-44]	; 0xffffffd4
   18db8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18dbc:	ldr	r1, [fp, #-8]
   18dc0:	ldr	r1, [r1]
   18dc4:	mvn	r2, #0
   18dc8:	sub	r1, r2, r1
   18dcc:	cmp	r0, r1
   18dd0:	ble	18ef4 <__assert_fail@plt+0x7f60>
   18dd4:	b	18f0c <__assert_fail@plt+0x7f78>
   18dd8:	ldr	r0, [fp, #-12]
   18ddc:	cmn	r0, #1
   18de0:	bne	18e34 <__assert_fail@plt+0x7ea0>
   18de4:	b	18de8 <__assert_fail@plt+0x7e54>
   18de8:	ldr	r0, [fp, #-8]
   18dec:	ldr	r0, [r0]
   18df0:	add	r0, r0, #-2147483648	; 0x80000000
   18df4:	movw	r1, #0
   18df8:	cmp	r1, r0
   18dfc:	blt	18ef4 <__assert_fail@plt+0x7f60>
   18e00:	b	18f0c <__assert_fail@plt+0x7f78>
   18e04:	ldr	r0, [fp, #-8]
   18e08:	ldr	r0, [r0]
   18e0c:	movw	r1, #0
   18e10:	cmp	r1, r0
   18e14:	bge	18f0c <__assert_fail@plt+0x7f78>
   18e18:	ldr	r0, [pc, #2244]	; 196e4 <__assert_fail@plt+0x8750>
   18e1c:	ldr	r1, [fp, #-8]
   18e20:	ldr	r1, [r1]
   18e24:	sub	r1, r1, #1
   18e28:	cmp	r0, r1
   18e2c:	blt	18ef4 <__assert_fail@plt+0x7f60>
   18e30:	b	18f0c <__assert_fail@plt+0x7f78>
   18e34:	ldr	r0, [pc, #2220]	; 196e8 <__assert_fail@plt+0x8754>
   18e38:	ldr	r1, [fp, #-12]
   18e3c:	sdiv	r0, r0, r1
   18e40:	ldr	r1, [fp, #-8]
   18e44:	ldr	r1, [r1]
   18e48:	cmp	r0, r1
   18e4c:	blt	18ef4 <__assert_fail@plt+0x7f60>
   18e50:	b	18f0c <__assert_fail@plt+0x7f78>
   18e54:	ldr	r0, [fp, #-12]
   18e58:	cmp	r0, #0
   18e5c:	bne	18e64 <__assert_fail@plt+0x7ed0>
   18e60:	b	18f0c <__assert_fail@plt+0x7f78>
   18e64:	ldr	r0, [fp, #-8]
   18e68:	ldr	r0, [r0]
   18e6c:	cmp	r0, #0
   18e70:	bge	18ed8 <__assert_fail@plt+0x7f44>
   18e74:	ldr	r0, [fp, #-8]
   18e78:	ldr	r0, [r0]
   18e7c:	cmn	r0, #1
   18e80:	bne	18eb8 <__assert_fail@plt+0x7f24>
   18e84:	b	18e88 <__assert_fail@plt+0x7ef4>
   18e88:	ldr	r0, [fp, #-12]
   18e8c:	add	r0, r0, #-2147483648	; 0x80000000
   18e90:	movw	r1, #0
   18e94:	cmp	r1, r0
   18e98:	blt	18ef4 <__assert_fail@plt+0x7f60>
   18e9c:	b	18f0c <__assert_fail@plt+0x7f78>
   18ea0:	ldr	r0, [pc, #2108]	; 196e4 <__assert_fail@plt+0x8750>
   18ea4:	ldr	r1, [fp, #-12]
   18ea8:	sub	r1, r1, #1
   18eac:	cmp	r0, r1
   18eb0:	blt	18ef4 <__assert_fail@plt+0x7f60>
   18eb4:	b	18f0c <__assert_fail@plt+0x7f78>
   18eb8:	ldr	r0, [pc, #2088]	; 196e8 <__assert_fail@plt+0x8754>
   18ebc:	ldr	r1, [fp, #-8]
   18ec0:	ldr	r1, [r1]
   18ec4:	sdiv	r0, r0, r1
   18ec8:	ldr	r1, [fp, #-12]
   18ecc:	cmp	r0, r1
   18ed0:	blt	18ef4 <__assert_fail@plt+0x7f60>
   18ed4:	b	18f0c <__assert_fail@plt+0x7f78>
   18ed8:	ldr	r0, [pc, #2052]	; 196e4 <__assert_fail@plt+0x8750>
   18edc:	ldr	r1, [fp, #-12]
   18ee0:	sdiv	r0, r0, r1
   18ee4:	ldr	r1, [fp, #-8]
   18ee8:	ldr	r1, [r1]
   18eec:	cmp	r0, r1
   18ef0:	bge	18f0c <__assert_fail@plt+0x7f78>
   18ef4:	ldr	r0, [fp, #-8]
   18ef8:	ldr	r0, [r0]
   18efc:	ldr	r1, [fp, #-12]
   18f00:	mul	r0, r0, r1
   18f04:	str	r0, [fp, #-16]
   18f08:	b	19688 <__assert_fail@plt+0x86f4>
   18f0c:	ldr	r0, [fp, #-8]
   18f10:	ldr	r0, [r0]
   18f14:	ldr	r1, [fp, #-12]
   18f18:	mul	r0, r0, r1
   18f1c:	str	r0, [fp, #-16]
   18f20:	b	196c0 <__assert_fail@plt+0x872c>
   18f24:	ldr	r0, [fp, #-12]
   18f28:	cmp	r0, #0
   18f2c:	bge	19058 <__assert_fail@plt+0x80c4>
   18f30:	ldr	r0, [fp, #-8]
   18f34:	ldr	r0, [r0]
   18f38:	cmp	r0, #0
   18f3c:	bge	18fd0 <__assert_fail@plt+0x803c>
   18f40:	b	18f64 <__assert_fail@plt+0x7fd0>
   18f44:	ldr	r0, [fp, #-8]
   18f48:	ldr	r0, [r0]
   18f4c:	ldr	r1, [fp, #-12]
   18f50:	mvn	r2, #0
   18f54:	udiv	r1, r2, r1
   18f58:	cmp	r0, r1
   18f5c:	bcc	19108 <__assert_fail@plt+0x8174>
   18f60:	b	19120 <__assert_fail@plt+0x818c>
   18f64:	b	18f68 <__assert_fail@plt+0x7fd4>
   18f68:	ldr	r0, [pc, #1904]	; 196e0 <__assert_fail@plt+0x874c>
   18f6c:	ldr	r1, [fp, #-12]
   18f70:	cmp	r1, r0
   18f74:	blt	18f8c <__assert_fail@plt+0x7ff8>
   18f78:	b	18f98 <__assert_fail@plt+0x8004>
   18f7c:	ldr	r0, [fp, #-12]
   18f80:	movw	r1, #0
   18f84:	cmp	r1, r0
   18f88:	bge	18f98 <__assert_fail@plt+0x8004>
   18f8c:	movw	r0, #1
   18f90:	str	r0, [fp, #-48]	; 0xffffffd0
   18f94:	b	18fb0 <__assert_fail@plt+0x801c>
   18f98:	ldr	r0, [fp, #-12]
   18f9c:	movw	r1, #0
   18fa0:	sub	r0, r1, r0
   18fa4:	mvn	r1, #0
   18fa8:	udiv	r0, r1, r0
   18fac:	str	r0, [fp, #-48]	; 0xffffffd0
   18fb0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18fb4:	ldr	r1, [fp, #-8]
   18fb8:	ldr	r1, [r1]
   18fbc:	mvn	r2, #0
   18fc0:	sub	r1, r2, r1
   18fc4:	cmp	r0, r1
   18fc8:	bls	19108 <__assert_fail@plt+0x8174>
   18fcc:	b	19120 <__assert_fail@plt+0x818c>
   18fd0:	b	18fd4 <__assert_fail@plt+0x8040>
   18fd4:	b	19038 <__assert_fail@plt+0x80a4>
   18fd8:	b	19038 <__assert_fail@plt+0x80a4>
   18fdc:	ldr	r0, [fp, #-12]
   18fe0:	cmn	r0, #1
   18fe4:	bne	19038 <__assert_fail@plt+0x80a4>
   18fe8:	b	18fec <__assert_fail@plt+0x8058>
   18fec:	ldr	r0, [fp, #-8]
   18ff0:	ldr	r0, [r0]
   18ff4:	add	r0, r0, #0
   18ff8:	movw	r1, #0
   18ffc:	cmp	r1, r0
   19000:	blt	19108 <__assert_fail@plt+0x8174>
   19004:	b	19120 <__assert_fail@plt+0x818c>
   19008:	ldr	r0, [fp, #-8]
   1900c:	ldr	r0, [r0]
   19010:	movw	r1, #0
   19014:	cmp	r1, r0
   19018:	bge	19120 <__assert_fail@plt+0x818c>
   1901c:	ldr	r0, [fp, #-8]
   19020:	ldr	r0, [r0]
   19024:	sub	r0, r0, #1
   19028:	mvn	r1, #0
   1902c:	cmp	r1, r0
   19030:	blt	19108 <__assert_fail@plt+0x8174>
   19034:	b	19120 <__assert_fail@plt+0x818c>
   19038:	ldr	r0, [fp, #-12]
   1903c:	movw	r1, #0
   19040:	sdiv	r0, r1, r0
   19044:	ldr	r1, [fp, #-8]
   19048:	ldr	r1, [r1]
   1904c:	cmp	r0, r1
   19050:	blt	19108 <__assert_fail@plt+0x8174>
   19054:	b	19120 <__assert_fail@plt+0x818c>
   19058:	ldr	r0, [fp, #-12]
   1905c:	cmp	r0, #0
   19060:	bne	19068 <__assert_fail@plt+0x80d4>
   19064:	b	19120 <__assert_fail@plt+0x818c>
   19068:	ldr	r0, [fp, #-8]
   1906c:	ldr	r0, [r0]
   19070:	cmp	r0, #0
   19074:	bge	190ec <__assert_fail@plt+0x8158>
   19078:	b	1907c <__assert_fail@plt+0x80e8>
   1907c:	b	190cc <__assert_fail@plt+0x8138>
   19080:	b	190cc <__assert_fail@plt+0x8138>
   19084:	ldr	r0, [fp, #-8]
   19088:	ldr	r0, [r0]
   1908c:	cmn	r0, #1
   19090:	bne	190cc <__assert_fail@plt+0x8138>
   19094:	b	19098 <__assert_fail@plt+0x8104>
   19098:	ldr	r0, [fp, #-12]
   1909c:	add	r0, r0, #0
   190a0:	movw	r1, #0
   190a4:	cmp	r1, r0
   190a8:	blt	19108 <__assert_fail@plt+0x8174>
   190ac:	b	19120 <__assert_fail@plt+0x818c>
   190b0:	ldr	r0, [fp, #-12]
   190b4:	sub	r0, r0, #1
   190b8:	mvn	r1, #0
   190bc:	cmp	r1, r0
   190c0:	blt	19108 <__assert_fail@plt+0x8174>
   190c4:	b	19120 <__assert_fail@plt+0x818c>
   190c8:	andhi	r0, r0, r1
   190cc:	ldr	r0, [fp, #-8]
   190d0:	ldr	r0, [r0]
   190d4:	movw	r1, #0
   190d8:	sdiv	r0, r1, r0
   190dc:	ldr	r1, [fp, #-12]
   190e0:	cmp	r0, r1
   190e4:	blt	19108 <__assert_fail@plt+0x8174>
   190e8:	b	19120 <__assert_fail@plt+0x818c>
   190ec:	ldr	r0, [fp, #-12]
   190f0:	mvn	r1, #0
   190f4:	udiv	r0, r1, r0
   190f8:	ldr	r1, [fp, #-8]
   190fc:	ldr	r1, [r1]
   19100:	cmp	r0, r1
   19104:	bcs	19120 <__assert_fail@plt+0x818c>
   19108:	ldr	r0, [fp, #-8]
   1910c:	ldr	r0, [r0]
   19110:	ldr	r1, [fp, #-12]
   19114:	mul	r0, r0, r1
   19118:	str	r0, [fp, #-16]
   1911c:	b	19688 <__assert_fail@plt+0x86f4>
   19120:	ldr	r0, [fp, #-8]
   19124:	ldr	r0, [r0]
   19128:	ldr	r1, [fp, #-12]
   1912c:	mul	r0, r0, r1
   19130:	str	r0, [fp, #-16]
   19134:	b	196c0 <__assert_fail@plt+0x872c>
   19138:	b	1913c <__assert_fail@plt+0x81a8>
   1913c:	ldr	r0, [fp, #-12]
   19140:	cmp	r0, #0
   19144:	bge	192e4 <__assert_fail@plt+0x8350>
   19148:	ldr	r0, [fp, #-8]
   1914c:	ldr	r0, [r0]
   19150:	cmp	r0, #0
   19154:	bge	19244 <__assert_fail@plt+0x82b0>
   19158:	b	1915c <__assert_fail@plt+0x81c8>
   1915c:	ldr	r0, [fp, #-8]
   19160:	ldr	r0, [r0]
   19164:	ldr	r1, [fp, #-12]
   19168:	asr	r3, r1, #31
   1916c:	mvn	r2, #0
   19170:	mvn	ip, #-2147483648	; 0x80000000
   19174:	str	r0, [fp, #-52]	; 0xffffffcc
   19178:	mov	r0, r2
   1917c:	str	r1, [fp, #-56]	; 0xffffffc8
   19180:	mov	r1, ip
   19184:	ldr	r2, [fp, #-56]	; 0xffffffc8
   19188:	bl	1bc14 <__assert_fail@plt+0xac80>
   1918c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   19190:	subs	r0, r2, r0
   19194:	rscs	r1, r1, r2, asr #31
   19198:	str	r0, [fp, #-60]	; 0xffffffc4
   1919c:	str	r1, [fp, #-64]	; 0xffffffc0
   191a0:	blt	193d4 <__assert_fail@plt+0x8440>
   191a4:	b	193ec <__assert_fail@plt+0x8458>
   191a8:	b	191ac <__assert_fail@plt+0x8218>
   191ac:	ldr	r0, [pc, #1324]	; 196e0 <__assert_fail@plt+0x874c>
   191b0:	ldr	r1, [fp, #-12]
   191b4:	cmp	r1, r0
   191b8:	blt	191d0 <__assert_fail@plt+0x823c>
   191bc:	b	191e4 <__assert_fail@plt+0x8250>
   191c0:	ldr	r0, [fp, #-12]
   191c4:	movw	r1, #0
   191c8:	cmp	r1, r0
   191cc:	bge	191e4 <__assert_fail@plt+0x8250>
   191d0:	mov	r0, #0
   191d4:	mvn	r1, #0
   191d8:	str	r1, [fp, #-68]	; 0xffffffbc
   191dc:	str	r0, [fp, #-72]	; 0xffffffb8
   191e0:	b	19218 <__assert_fail@plt+0x8284>
   191e4:	ldr	r0, [fp, #-12]
   191e8:	rsb	r0, r0, #0
   191ec:	asr	r3, r0, #31
   191f0:	mvn	r1, #0
   191f4:	mvn	r2, #-2147483648	; 0x80000000
   191f8:	str	r0, [fp, #-76]	; 0xffffffb4
   191fc:	mov	r0, r1
   19200:	mov	r1, r2
   19204:	ldr	r2, [fp, #-76]	; 0xffffffb4
   19208:	bl	1bc14 <__assert_fail@plt+0xac80>
   1920c:	str	r0, [fp, #-68]	; 0xffffffbc
   19210:	str	r1, [fp, #-72]	; 0xffffffb8
   19214:	b	19218 <__assert_fail@plt+0x8284>
   19218:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1921c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   19220:	ldr	r2, [fp, #-8]
   19224:	ldr	r2, [r2]
   19228:	mvn	r2, r2
   1922c:	subs	r1, r2, r1
   19230:	rscs	r0, r0, r2, asr #31
   19234:	str	r1, [fp, #-80]	; 0xffffffb0
   19238:	str	r0, [fp, #-84]	; 0xffffffac
   1923c:	bge	193d4 <__assert_fail@plt+0x8440>
   19240:	b	193ec <__assert_fail@plt+0x8458>
   19244:	ldr	r0, [fp, #-12]
   19248:	cmn	r0, #1
   1924c:	bne	192a0 <__assert_fail@plt+0x830c>
   19250:	b	19254 <__assert_fail@plt+0x82c0>
   19254:	ldr	r0, [fp, #-8]
   19258:	ldr	r0, [r0]
   1925c:	mov	r1, #-2147483648	; 0x80000000
   19260:	add	r1, r1, r0, asr #31
   19264:	rsbs	r0, r0, #0
   19268:	rscs	r1, r1, #0
   1926c:	str	r0, [fp, #-88]	; 0xffffffa8
   19270:	str	r1, [sp, #92]	; 0x5c
   19274:	blt	193d4 <__assert_fail@plt+0x8440>
   19278:	b	193ec <__assert_fail@plt+0x8458>
   1927c:	ldr	r0, [fp, #-8]
   19280:	ldr	r0, [r0]
   19284:	movw	r1, #0
   19288:	cmp	r1, r0
   1928c:	bge	193ec <__assert_fail@plt+0x8458>
   19290:	mov	r0, #0
   19294:	cmp	r0, #0
   19298:	bne	193d4 <__assert_fail@plt+0x8440>
   1929c:	b	193ec <__assert_fail@plt+0x8458>
   192a0:	ldr	r0, [fp, #-12]
   192a4:	asr	r3, r0, #31
   192a8:	mov	r1, #0
   192ac:	mov	r2, #-2147483648	; 0x80000000
   192b0:	str	r0, [sp, #88]	; 0x58
   192b4:	mov	r0, r1
   192b8:	mov	r1, r2
   192bc:	ldr	r2, [sp, #88]	; 0x58
   192c0:	bl	1bc14 <__assert_fail@plt+0xac80>
   192c4:	ldr	r2, [fp, #-8]
   192c8:	ldr	r2, [r2]
   192cc:	subs	r0, r0, r2
   192d0:	sbcs	r1, r1, r2, asr #31
   192d4:	str	r0, [sp, #84]	; 0x54
   192d8:	str	r1, [sp, #80]	; 0x50
   192dc:	blt	193d4 <__assert_fail@plt+0x8440>
   192e0:	b	193ec <__assert_fail@plt+0x8458>
   192e4:	ldr	r0, [fp, #-12]
   192e8:	cmp	r0, #0
   192ec:	bne	192f4 <__assert_fail@plt+0x8360>
   192f0:	b	193ec <__assert_fail@plt+0x8458>
   192f4:	ldr	r0, [fp, #-8]
   192f8:	ldr	r0, [r0]
   192fc:	cmp	r0, #0
   19300:	bge	19390 <__assert_fail@plt+0x83fc>
   19304:	ldr	r0, [fp, #-8]
   19308:	ldr	r0, [r0]
   1930c:	cmn	r0, #1
   19310:	bne	1934c <__assert_fail@plt+0x83b8>
   19314:	b	19318 <__assert_fail@plt+0x8384>
   19318:	ldr	r0, [fp, #-12]
   1931c:	mov	r1, #-2147483648	; 0x80000000
   19320:	add	r1, r1, r0, asr #31
   19324:	rsbs	r0, r0, #0
   19328:	rscs	r1, r1, #0
   1932c:	str	r0, [sp, #76]	; 0x4c
   19330:	str	r1, [sp, #72]	; 0x48
   19334:	blt	193d4 <__assert_fail@plt+0x8440>
   19338:	b	193ec <__assert_fail@plt+0x8458>
   1933c:	mov	r0, #0
   19340:	cmp	r0, #0
   19344:	bne	193d4 <__assert_fail@plt+0x8440>
   19348:	b	193ec <__assert_fail@plt+0x8458>
   1934c:	ldr	r0, [fp, #-8]
   19350:	ldr	r0, [r0]
   19354:	asr	r3, r0, #31
   19358:	mov	r1, #0
   1935c:	mov	r2, #-2147483648	; 0x80000000
   19360:	str	r0, [sp, #68]	; 0x44
   19364:	mov	r0, r1
   19368:	mov	r1, r2
   1936c:	ldr	r2, [sp, #68]	; 0x44
   19370:	bl	1bc14 <__assert_fail@plt+0xac80>
   19374:	ldr	r2, [fp, #-12]
   19378:	subs	r0, r0, r2
   1937c:	sbcs	r1, r1, r2, asr #31
   19380:	str	r0, [sp, #64]	; 0x40
   19384:	str	r1, [sp, #60]	; 0x3c
   19388:	blt	193d4 <__assert_fail@plt+0x8440>
   1938c:	b	193ec <__assert_fail@plt+0x8458>
   19390:	ldr	r0, [fp, #-12]
   19394:	asr	r3, r0, #31
   19398:	mvn	r1, #0
   1939c:	mvn	r2, #-2147483648	; 0x80000000
   193a0:	str	r0, [sp, #56]	; 0x38
   193a4:	mov	r0, r1
   193a8:	mov	r1, r2
   193ac:	ldr	r2, [sp, #56]	; 0x38
   193b0:	bl	1bc14 <__assert_fail@plt+0xac80>
   193b4:	ldr	r2, [fp, #-8]
   193b8:	ldr	r2, [r2]
   193bc:	subs	r0, r0, r2
   193c0:	sbcs	r1, r1, r2, asr #31
   193c4:	str	r0, [sp, #52]	; 0x34
   193c8:	str	r1, [sp, #48]	; 0x30
   193cc:	bge	193ec <__assert_fail@plt+0x8458>
   193d0:	b	193d4 <__assert_fail@plt+0x8440>
   193d4:	ldr	r0, [fp, #-8]
   193d8:	ldr	r0, [r0]
   193dc:	ldr	r1, [fp, #-12]
   193e0:	mul	r0, r0, r1
   193e4:	str	r0, [fp, #-16]
   193e8:	b	19688 <__assert_fail@plt+0x86f4>
   193ec:	ldr	r0, [fp, #-8]
   193f0:	ldr	r0, [r0]
   193f4:	ldr	r1, [fp, #-12]
   193f8:	mul	r0, r0, r1
   193fc:	str	r0, [fp, #-16]
   19400:	b	196c0 <__assert_fail@plt+0x872c>
   19404:	ldr	r0, [fp, #-12]
   19408:	cmp	r0, #0
   1940c:	bge	19588 <__assert_fail@plt+0x85f4>
   19410:	ldr	r0, [fp, #-8]
   19414:	ldr	r0, [r0]
   19418:	cmp	r0, #0
   1941c:	bge	19500 <__assert_fail@plt+0x856c>
   19420:	b	1946c <__assert_fail@plt+0x84d8>
   19424:	ldr	r0, [fp, #-8]
   19428:	ldr	r0, [r0]
   1942c:	ldr	r1, [fp, #-12]
   19430:	asr	r3, r1, #31
   19434:	mvn	r2, #0
   19438:	str	r0, [sp, #44]	; 0x2c
   1943c:	mov	r0, r2
   19440:	str	r1, [sp, #40]	; 0x28
   19444:	mov	r1, r2
   19448:	ldr	r2, [sp, #40]	; 0x28
   1944c:	bl	1bce8 <__assert_fail@plt+0xad54>
   19450:	ldr	r2, [sp, #44]	; 0x2c
   19454:	subs	r0, r2, r0
   19458:	rscs	r1, r1, r2, asr #31
   1945c:	str	r0, [sp, #36]	; 0x24
   19460:	str	r1, [sp, #32]
   19464:	bcc	19658 <__assert_fail@plt+0x86c4>
   19468:	b	19670 <__assert_fail@plt+0x86dc>
   1946c:	b	19470 <__assert_fail@plt+0x84dc>
   19470:	ldr	r0, [pc, #616]	; 196e0 <__assert_fail@plt+0x874c>
   19474:	ldr	r1, [fp, #-12]
   19478:	cmp	r1, r0
   1947c:	blt	19494 <__assert_fail@plt+0x8500>
   19480:	b	194a8 <__assert_fail@plt+0x8514>
   19484:	ldr	r0, [fp, #-12]
   19488:	movw	r1, #0
   1948c:	cmp	r1, r0
   19490:	bge	194a8 <__assert_fail@plt+0x8514>
   19494:	mov	r0, #1
   19498:	mvn	r1, #0
   1949c:	str	r1, [sp, #28]
   194a0:	str	r0, [sp, #24]
   194a4:	b	194d4 <__assert_fail@plt+0x8540>
   194a8:	ldr	r0, [fp, #-12]
   194ac:	rsb	r0, r0, #0
   194b0:	asr	r3, r0, #31
   194b4:	mvn	r1, #0
   194b8:	str	r0, [sp, #20]
   194bc:	mov	r0, r1
   194c0:	ldr	r2, [sp, #20]
   194c4:	bl	1bce8 <__assert_fail@plt+0xad54>
   194c8:	str	r0, [sp, #28]
   194cc:	str	r1, [sp, #24]
   194d0:	b	194d4 <__assert_fail@plt+0x8540>
   194d4:	ldr	r0, [sp, #24]
   194d8:	ldr	r1, [sp, #28]
   194dc:	ldr	r2, [fp, #-8]
   194e0:	ldr	r2, [r2]
   194e4:	mvn	r2, r2
   194e8:	subs	r1, r2, r1
   194ec:	rscs	r0, r0, r2, asr #31
   194f0:	str	r1, [sp, #16]
   194f4:	str	r0, [sp, #12]
   194f8:	bcs	19658 <__assert_fail@plt+0x86c4>
   194fc:	b	19670 <__assert_fail@plt+0x86dc>
   19500:	b	19504 <__assert_fail@plt+0x8570>
   19504:	b	19568 <__assert_fail@plt+0x85d4>
   19508:	b	19568 <__assert_fail@plt+0x85d4>
   1950c:	ldr	r0, [fp, #-12]
   19510:	cmn	r0, #1
   19514:	bne	19568 <__assert_fail@plt+0x85d4>
   19518:	b	1951c <__assert_fail@plt+0x8588>
   1951c:	ldr	r0, [fp, #-8]
   19520:	ldr	r0, [r0]
   19524:	add	r0, r0, #0
   19528:	movw	r1, #0
   1952c:	cmp	r1, r0
   19530:	blt	19658 <__assert_fail@plt+0x86c4>
   19534:	b	19670 <__assert_fail@plt+0x86dc>
   19538:	ldr	r0, [fp, #-8]
   1953c:	ldr	r0, [r0]
   19540:	movw	r1, #0
   19544:	cmp	r1, r0
   19548:	bge	19670 <__assert_fail@plt+0x86dc>
   1954c:	ldr	r0, [fp, #-8]
   19550:	ldr	r0, [r0]
   19554:	sub	r0, r0, #1
   19558:	mvn	r1, #0
   1955c:	cmp	r1, r0
   19560:	blt	19658 <__assert_fail@plt+0x86c4>
   19564:	b	19670 <__assert_fail@plt+0x86dc>
   19568:	ldr	r0, [fp, #-12]
   1956c:	movw	r1, #0
   19570:	sdiv	r0, r1, r0
   19574:	ldr	r1, [fp, #-8]
   19578:	ldr	r1, [r1]
   1957c:	cmp	r0, r1
   19580:	blt	19658 <__assert_fail@plt+0x86c4>
   19584:	b	19670 <__assert_fail@plt+0x86dc>
   19588:	ldr	r0, [fp, #-12]
   1958c:	cmp	r0, #0
   19590:	bne	1959c <__assert_fail@plt+0x8608>
   19594:	b	19670 <__assert_fail@plt+0x86dc>
   19598:			; <UNDEFINED> instruction: 0xffff8000
   1959c:	ldr	r0, [fp, #-8]
   195a0:	ldr	r0, [r0]
   195a4:	cmp	r0, #0
   195a8:	bge	1961c <__assert_fail@plt+0x8688>
   195ac:	b	195b0 <__assert_fail@plt+0x861c>
   195b0:	b	195fc <__assert_fail@plt+0x8668>
   195b4:	b	195fc <__assert_fail@plt+0x8668>
   195b8:	ldr	r0, [fp, #-8]
   195bc:	ldr	r0, [r0]
   195c0:	cmn	r0, #1
   195c4:	bne	195fc <__assert_fail@plt+0x8668>
   195c8:	b	195cc <__assert_fail@plt+0x8638>
   195cc:	ldr	r0, [fp, #-12]
   195d0:	add	r0, r0, #0
   195d4:	movw	r1, #0
   195d8:	cmp	r1, r0
   195dc:	blt	19658 <__assert_fail@plt+0x86c4>
   195e0:	b	19670 <__assert_fail@plt+0x86dc>
   195e4:	ldr	r0, [fp, #-12]
   195e8:	sub	r0, r0, #1
   195ec:	mvn	r1, #0
   195f0:	cmp	r1, r0
   195f4:	blt	19658 <__assert_fail@plt+0x86c4>
   195f8:	b	19670 <__assert_fail@plt+0x86dc>
   195fc:	ldr	r0, [fp, #-8]
   19600:	ldr	r0, [r0]
   19604:	movw	r1, #0
   19608:	sdiv	r0, r1, r0
   1960c:	ldr	r1, [fp, #-12]
   19610:	cmp	r0, r1
   19614:	blt	19658 <__assert_fail@plt+0x86c4>
   19618:	b	19670 <__assert_fail@plt+0x86dc>
   1961c:	ldr	r0, [fp, #-12]
   19620:	asr	r3, r0, #31
   19624:	mvn	r1, #0
   19628:	str	r0, [sp, #8]
   1962c:	mov	r0, r1
   19630:	ldr	r2, [sp, #8]
   19634:	bl	1bce8 <__assert_fail@plt+0xad54>
   19638:	ldr	r2, [fp, #-8]
   1963c:	ldr	r2, [r2]
   19640:	subs	r0, r0, r2
   19644:	sbcs	r1, r1, r2, asr #31
   19648:	str	r0, [sp, #4]
   1964c:	str	r1, [sp]
   19650:	bcs	19670 <__assert_fail@plt+0x86dc>
   19654:	b	19658 <__assert_fail@plt+0x86c4>
   19658:	ldr	r0, [fp, #-8]
   1965c:	ldr	r0, [r0]
   19660:	ldr	r1, [fp, #-12]
   19664:	mul	r0, r0, r1
   19668:	str	r0, [fp, #-16]
   1966c:	b	19688 <__assert_fail@plt+0x86f4>
   19670:	ldr	r0, [fp, #-8]
   19674:	ldr	r0, [r0]
   19678:	ldr	r1, [fp, #-12]
   1967c:	mul	r0, r0, r1
   19680:	str	r0, [fp, #-16]
   19684:	b	196c0 <__assert_fail@plt+0x872c>
   19688:	ldr	r0, [pc, #88]	; 196e8 <__assert_fail@plt+0x8754>
   1968c:	ldr	r1, [pc, #80]	; 196e4 <__assert_fail@plt+0x8750>
   19690:	ldr	r2, [fp, #-8]
   19694:	ldr	r2, [r2]
   19698:	cmp	r2, #0
   1969c:	movw	r2, #0
   196a0:	movlt	r2, #1
   196a4:	tst	r2, #1
   196a8:	movne	r1, r0
   196ac:	ldr	r0, [fp, #-8]
   196b0:	str	r1, [r0]
   196b4:	movw	r0, #1
   196b8:	str	r0, [fp, #-4]
   196bc:	b	196d4 <__assert_fail@plt+0x8740>
   196c0:	ldr	r0, [fp, #-16]
   196c4:	ldr	r1, [fp, #-8]
   196c8:	str	r0, [r1]
   196cc:	movw	r0, #0
   196d0:	str	r0, [fp, #-4]
   196d4:	ldr	r0, [fp, #-4]
   196d8:	mov	sp, fp
   196dc:	pop	{fp, pc}
   196e0:	andhi	r0, r0, r1
   196e4:	svcvc	0x00ffffff
   196e8:	andhi	r0, r0, r0
   196ec:	push	{fp, lr}
   196f0:	mov	fp, sp
   196f4:	sub	sp, sp, #16
   196f8:	str	r0, [fp, #-4]
   196fc:	str	r1, [sp, #8]
   19700:	str	r2, [sp, #4]
   19704:	movw	r0, #0
   19708:	str	r0, [sp]
   1970c:	ldr	r0, [sp, #4]
   19710:	mvn	r1, #0
   19714:	add	r1, r0, r1
   19718:	str	r1, [sp, #4]
   1971c:	cmp	r0, #0
   19720:	beq	19740 <__assert_fail@plt+0x87ac>
   19724:	ldr	r0, [fp, #-4]
   19728:	ldr	r1, [sp, #8]
   1972c:	bl	18080 <__assert_fail@plt+0x70ec>
   19730:	ldr	r1, [sp]
   19734:	orr	r0, r1, r0
   19738:	str	r0, [sp]
   1973c:	b	1970c <__assert_fail@plt+0x8778>
   19740:	ldr	r0, [sp]
   19744:	mov	sp, fp
   19748:	pop	{fp, pc}
   1974c:	push	{fp, lr}
   19750:	mov	fp, sp
   19754:	sub	sp, sp, #16
   19758:	str	r0, [sp, #8]
   1975c:	str	r1, [sp, #4]
   19760:	ldr	r0, [sp, #8]
   19764:	cmp	r0, #0
   19768:	beq	19778 <__assert_fail@plt+0x87e4>
   1976c:	ldr	r0, [sp, #4]
   19770:	cmp	r0, #0
   19774:	bne	19784 <__assert_fail@plt+0x87f0>
   19778:	movw	r0, #1
   1977c:	str	r0, [sp, #4]
   19780:	str	r0, [sp, #8]
   19784:	ldr	r0, [sp, #4]
   19788:	cmp	r0, #0
   1978c:	beq	197c0 <__assert_fail@plt+0x882c>
   19790:	ldr	r0, [pc, #76]	; 197e4 <__assert_fail@plt+0x8850>
   19794:	ldr	r1, [sp, #4]
   19798:	udiv	r0, r0, r1
   1979c:	ldr	r1, [sp, #8]
   197a0:	cmp	r0, r1
   197a4:	bcs	197c0 <__assert_fail@plt+0x882c>
   197a8:	bl	10ef8 <__errno_location@plt>
   197ac:	movw	lr, #12
   197b0:	str	lr, [r0]
   197b4:	movw	r0, #0
   197b8:	str	r0, [fp, #-4]
   197bc:	b	197d8 <__assert_fail@plt+0x8844>
   197c0:	ldr	r0, [sp, #8]
   197c4:	ldr	r1, [sp, #4]
   197c8:	bl	10d54 <calloc@plt>
   197cc:	str	r0, [sp]
   197d0:	ldr	r0, [sp]
   197d4:	str	r0, [fp, #-4]
   197d8:	ldr	r0, [fp, #-4]
   197dc:	mov	sp, fp
   197e0:	pop	{fp, pc}
   197e4:	svcvc	0x00ffffff
   197e8:	push	{fp, lr}
   197ec:	mov	fp, sp
   197f0:	sub	sp, sp, #16
   197f4:	str	r0, [sp, #8]
   197f8:	ldr	r0, [sp, #8]
   197fc:	cmp	r0, #0
   19800:	bne	1980c <__assert_fail@plt+0x8878>
   19804:	movw	r0, #1
   19808:	str	r0, [sp, #8]
   1980c:	ldr	r0, [pc, #64]	; 19854 <__assert_fail@plt+0x88c0>
   19810:	ldr	r1, [sp, #8]
   19814:	cmp	r0, r1
   19818:	bcs	19834 <__assert_fail@plt+0x88a0>
   1981c:	bl	10ef8 <__errno_location@plt>
   19820:	movw	lr, #12
   19824:	str	lr, [r0]
   19828:	movw	r0, #0
   1982c:	str	r0, [fp, #-4]
   19830:	b	19848 <__assert_fail@plt+0x88b4>
   19834:	ldr	r0, [sp, #8]
   19838:	bl	10e74 <malloc@plt>
   1983c:	str	r0, [sp, #4]
   19840:	ldr	r0, [sp, #4]
   19844:	str	r0, [fp, #-4]
   19848:	ldr	r0, [fp, #-4]
   1984c:	mov	sp, fp
   19850:	pop	{fp, pc}
   19854:	svcvc	0x00ffffff
   19858:	push	{fp, lr}
   1985c:	mov	fp, sp
   19860:	sub	sp, sp, #16
   19864:	str	r0, [sp, #8]
   19868:	str	r1, [sp, #4]
   1986c:	ldr	r0, [sp, #8]
   19870:	movw	r1, #0
   19874:	cmp	r0, r1
   19878:	bne	1988c <__assert_fail@plt+0x88f8>
   1987c:	ldr	r0, [sp, #4]
   19880:	bl	197e8 <__assert_fail@plt+0x8854>
   19884:	str	r0, [fp, #-4]
   19888:	b	198ec <__assert_fail@plt+0x8958>
   1988c:	ldr	r0, [sp, #4]
   19890:	cmp	r0, #0
   19894:	bne	198ac <__assert_fail@plt+0x8918>
   19898:	ldr	r0, [sp, #8]
   1989c:	bl	19c20 <__assert_fail@plt+0x8c8c>
   198a0:	movw	r0, #0
   198a4:	str	r0, [fp, #-4]
   198a8:	b	198ec <__assert_fail@plt+0x8958>
   198ac:	ldr	r0, [pc, #68]	; 198f8 <__assert_fail@plt+0x8964>
   198b0:	ldr	r1, [sp, #4]
   198b4:	cmp	r0, r1
   198b8:	bcs	198d4 <__assert_fail@plt+0x8940>
   198bc:	bl	10ef8 <__errno_location@plt>
   198c0:	movw	lr, #12
   198c4:	str	lr, [r0]
   198c8:	movw	r0, #0
   198cc:	str	r0, [fp, #-4]
   198d0:	b	198ec <__assert_fail@plt+0x8958>
   198d4:	ldr	r0, [sp, #8]
   198d8:	ldr	r1, [sp, #4]
   198dc:	bl	10df0 <realloc@plt>
   198e0:	str	r0, [sp]
   198e4:	ldr	r0, [sp]
   198e8:	str	r0, [fp, #-4]
   198ec:	ldr	r0, [fp, #-4]
   198f0:	mov	sp, fp
   198f4:	pop	{fp, pc}
   198f8:	svcvc	0x00ffffff
   198fc:	push	{fp, lr}
   19900:	mov	fp, sp
   19904:	sub	sp, sp, #24
   19908:	str	r0, [fp, #-8]
   1990c:	str	r1, [sp, #12]
   19910:	ldr	r0, [fp, #-8]
   19914:	str	r0, [sp, #8]
   19918:	ldr	r0, [sp, #12]
   1991c:	str	r0, [sp, #4]
   19920:	ldr	r0, [sp, #8]
   19924:	ldr	r1, [sp, #4]
   19928:	cmp	r0, r1
   1992c:	bne	1993c <__assert_fail@plt+0x89a8>
   19930:	movw	r0, #0
   19934:	str	r0, [fp, #-4]
   19938:	b	199a8 <__assert_fail@plt+0x8a14>
   1993c:	b	19940 <__assert_fail@plt+0x89ac>
   19940:	ldr	r0, [sp, #8]
   19944:	ldrb	r0, [r0]
   19948:	bl	1b994 <__assert_fail@plt+0xaa00>
   1994c:	strb	r0, [sp, #3]
   19950:	ldr	r0, [sp, #4]
   19954:	ldrb	r0, [r0]
   19958:	bl	1b994 <__assert_fail@plt+0xaa00>
   1995c:	strb	r0, [sp, #2]
   19960:	ldrb	r0, [sp, #3]
   19964:	cmp	r0, #0
   19968:	bne	19970 <__assert_fail@plt+0x89dc>
   1996c:	b	19998 <__assert_fail@plt+0x8a04>
   19970:	ldr	r0, [sp, #8]
   19974:	add	r0, r0, #1
   19978:	str	r0, [sp, #8]
   1997c:	ldr	r0, [sp, #4]
   19980:	add	r0, r0, #1
   19984:	str	r0, [sp, #4]
   19988:	ldrb	r0, [sp, #3]
   1998c:	ldrb	r1, [sp, #2]
   19990:	cmp	r0, r1
   19994:	beq	19940 <__assert_fail@plt+0x89ac>
   19998:	ldrb	r0, [sp, #3]
   1999c:	ldrb	r1, [sp, #2]
   199a0:	sub	r0, r0, r1
   199a4:	str	r0, [fp, #-4]
   199a8:	ldr	r0, [fp, #-4]
   199ac:	mov	sp, fp
   199b0:	pop	{fp, pc}
   199b4:	push	{fp, lr}
   199b8:	mov	fp, sp
   199bc:	sub	sp, sp, #16
   199c0:	str	r0, [sp, #8]
   199c4:	ldr	r0, [sp, #8]
   199c8:	bl	10e38 <__fpending@plt>
   199cc:	cmp	r0, #0
   199d0:	movw	r0, #0
   199d4:	movne	r0, #1
   199d8:	and	r0, r0, #1
   199dc:	strb	r0, [sp, #7]
   199e0:	ldr	r0, [sp, #8]
   199e4:	bl	10e44 <ferror_unlocked@plt>
   199e8:	cmp	r0, #0
   199ec:	movw	r0, #0
   199f0:	movne	r0, #1
   199f4:	and	r0, r0, #1
   199f8:	strb	r0, [sp, #6]
   199fc:	ldr	r0, [sp, #8]
   19a00:	bl	19a84 <__assert_fail@plt+0x8af0>
   19a04:	cmp	r0, #0
   19a08:	movw	r0, #0
   19a0c:	movne	r0, #1
   19a10:	and	r0, r0, #1
   19a14:	strb	r0, [sp, #5]
   19a18:	ldrb	r0, [sp, #6]
   19a1c:	tst	r0, #1
   19a20:	bne	19a4c <__assert_fail@plt+0x8ab8>
   19a24:	ldrb	r0, [sp, #5]
   19a28:	tst	r0, #1
   19a2c:	beq	19a70 <__assert_fail@plt+0x8adc>
   19a30:	ldrb	r0, [sp, #7]
   19a34:	tst	r0, #1
   19a38:	bne	19a4c <__assert_fail@plt+0x8ab8>
   19a3c:	bl	10ef8 <__errno_location@plt>
   19a40:	ldr	r0, [r0]
   19a44:	cmp	r0, #9
   19a48:	beq	19a70 <__assert_fail@plt+0x8adc>
   19a4c:	ldrb	r0, [sp, #5]
   19a50:	tst	r0, #1
   19a54:	bne	19a64 <__assert_fail@plt+0x8ad0>
   19a58:	bl	10ef8 <__errno_location@plt>
   19a5c:	movw	lr, #0
   19a60:	str	lr, [r0]
   19a64:	mvn	r0, #0
   19a68:	str	r0, [fp, #-4]
   19a6c:	b	19a78 <__assert_fail@plt+0x8ae4>
   19a70:	movw	r0, #0
   19a74:	str	r0, [fp, #-4]
   19a78:	ldr	r0, [fp, #-4]
   19a7c:	mov	sp, fp
   19a80:	pop	{fp, pc}
   19a84:	push	{fp, lr}
   19a88:	mov	fp, sp
   19a8c:	sub	sp, sp, #32
   19a90:	str	r0, [fp, #-8]
   19a94:	movw	r0, #0
   19a98:	str	r0, [fp, #-12]
   19a9c:	str	r0, [sp, #12]
   19aa0:	ldr	r0, [fp, #-8]
   19aa4:	bl	10f1c <fileno@plt>
   19aa8:	str	r0, [sp, #16]
   19aac:	ldr	r0, [sp, #16]
   19ab0:	cmp	r0, #0
   19ab4:	bge	19ac8 <__assert_fail@plt+0x8b34>
   19ab8:	ldr	r0, [fp, #-8]
   19abc:	bl	10f28 <fclose@plt>
   19ac0:	str	r0, [fp, #-4]
   19ac4:	b	19b64 <__assert_fail@plt+0x8bd0>
   19ac8:	ldr	r0, [fp, #-8]
   19acc:	bl	10e8c <__freading@plt>
   19ad0:	cmp	r0, #0
   19ad4:	beq	19b0c <__assert_fail@plt+0x8b78>
   19ad8:	ldr	r0, [fp, #-8]
   19adc:	bl	10f1c <fileno@plt>
   19ae0:	mov	lr, sp
   19ae4:	mov	r1, #1
   19ae8:	str	r1, [lr]
   19aec:	mov	r1, #0
   19af0:	mov	r2, r1
   19af4:	mov	r3, r1
   19af8:	bl	10e20 <lseek64@plt>
   19afc:	and	r0, r0, r1
   19b00:	cmn	r0, #1
   19b04:	beq	19b28 <__assert_fail@plt+0x8b94>
   19b08:	b	19b0c <__assert_fail@plt+0x8b78>
   19b0c:	ldr	r0, [fp, #-8]
   19b10:	bl	19b70 <__assert_fail@plt+0x8bdc>
   19b14:	cmp	r0, #0
   19b18:	beq	19b28 <__assert_fail@plt+0x8b94>
   19b1c:	bl	10ef8 <__errno_location@plt>
   19b20:	ldr	r0, [r0]
   19b24:	str	r0, [fp, #-12]
   19b28:	ldr	r0, [fp, #-8]
   19b2c:	bl	10f28 <fclose@plt>
   19b30:	str	r0, [sp, #12]
   19b34:	ldr	r0, [fp, #-12]
   19b38:	cmp	r0, #0
   19b3c:	beq	19b5c <__assert_fail@plt+0x8bc8>
   19b40:	ldr	r0, [fp, #-12]
   19b44:	str	r0, [sp, #8]
   19b48:	bl	10ef8 <__errno_location@plt>
   19b4c:	ldr	lr, [sp, #8]
   19b50:	str	lr, [r0]
   19b54:	mvn	r0, #0
   19b58:	str	r0, [sp, #12]
   19b5c:	ldr	r0, [sp, #12]
   19b60:	str	r0, [fp, #-4]
   19b64:	ldr	r0, [fp, #-4]
   19b68:	mov	sp, fp
   19b6c:	pop	{fp, pc}
   19b70:	push	{fp, lr}
   19b74:	mov	fp, sp
   19b78:	sub	sp, sp, #8
   19b7c:	str	r0, [sp]
   19b80:	ldr	r0, [sp]
   19b84:	movw	r1, #0
   19b88:	cmp	r0, r1
   19b8c:	beq	19ba0 <__assert_fail@plt+0x8c0c>
   19b90:	ldr	r0, [sp]
   19b94:	bl	10e8c <__freading@plt>
   19b98:	cmp	r0, #0
   19b9c:	bne	19bb0 <__assert_fail@plt+0x8c1c>
   19ba0:	ldr	r0, [sp]
   19ba4:	bl	10d9c <fflush@plt>
   19ba8:	str	r0, [sp, #4]
   19bac:	b	19bc4 <__assert_fail@plt+0x8c30>
   19bb0:	ldr	r0, [sp]
   19bb4:	bl	19bd0 <__assert_fail@plt+0x8c3c>
   19bb8:	ldr	r0, [sp]
   19bbc:	bl	10d9c <fflush@plt>
   19bc0:	str	r0, [sp, #4]
   19bc4:	ldr	r0, [sp, #4]
   19bc8:	mov	sp, fp
   19bcc:	pop	{fp, pc}
   19bd0:	push	{fp, lr}
   19bd4:	mov	fp, sp
   19bd8:	sub	sp, sp, #16
   19bdc:	str	r0, [fp, #-4]
   19be0:	ldr	r0, [fp, #-4]
   19be4:	ldr	r0, [r0]
   19be8:	and	r0, r0, #256	; 0x100
   19bec:	cmp	r0, #0
   19bf0:	beq	19c18 <__assert_fail@plt+0x8c84>
   19bf4:	ldr	r0, [fp, #-4]
   19bf8:	mov	r1, sp
   19bfc:	mov	r2, #1
   19c00:	str	r2, [r1]
   19c04:	mov	r1, #0
   19c08:	mov	r2, r1
   19c0c:	mov	r3, r1
   19c10:	bl	19c60 <__assert_fail@plt+0x8ccc>
   19c14:	str	r0, [sp, #8]
   19c18:	mov	sp, fp
   19c1c:	pop	{fp, pc}
   19c20:	push	{fp, lr}
   19c24:	mov	fp, sp
   19c28:	sub	sp, sp, #16
   19c2c:	str	r0, [fp, #-4]
   19c30:	bl	10ef8 <__errno_location@plt>
   19c34:	ldr	r0, [r0]
   19c38:	str	r0, [sp, #8]
   19c3c:	ldr	r0, [fp, #-4]
   19c40:	bl	10da8 <free@plt>
   19c44:	ldr	r0, [sp, #8]
   19c48:	str	r0, [sp, #4]
   19c4c:	bl	10ef8 <__errno_location@plt>
   19c50:	ldr	lr, [sp, #4]
   19c54:	str	lr, [r0]
   19c58:	mov	sp, fp
   19c5c:	pop	{fp, pc}
   19c60:	push	{fp, lr}
   19c64:	mov	fp, sp
   19c68:	sub	sp, sp, #32
   19c6c:	ldr	r1, [fp, #8]
   19c70:	str	r0, [fp, #-8]
   19c74:	str	r3, [sp, #20]
   19c78:	str	r2, [sp, #16]
   19c7c:	ldr	r0, [fp, #-8]
   19c80:	ldr	r0, [r0, #8]
   19c84:	ldr	r2, [fp, #-8]
   19c88:	ldr	r2, [r2, #4]
   19c8c:	cmp	r0, r2
   19c90:	str	r1, [sp, #4]
   19c94:	bne	19d40 <__assert_fail@plt+0x8dac>
   19c98:	ldr	r0, [fp, #-8]
   19c9c:	ldr	r0, [r0, #20]
   19ca0:	ldr	r1, [fp, #-8]
   19ca4:	ldr	r1, [r1, #16]
   19ca8:	cmp	r0, r1
   19cac:	bne	19d40 <__assert_fail@plt+0x8dac>
   19cb0:	ldr	r0, [fp, #-8]
   19cb4:	ldr	r0, [r0, #36]	; 0x24
   19cb8:	movw	r1, #0
   19cbc:	cmp	r0, r1
   19cc0:	bne	19d40 <__assert_fail@plt+0x8dac>
   19cc4:	ldr	r0, [fp, #-8]
   19cc8:	bl	10f1c <fileno@plt>
   19ccc:	ldr	r2, [sp, #16]
   19cd0:	ldr	r3, [sp, #20]
   19cd4:	ldr	lr, [fp, #8]
   19cd8:	mov	r1, sp
   19cdc:	str	lr, [r1]
   19ce0:	bl	10e20 <lseek64@plt>
   19ce4:	str	r1, [sp, #12]
   19ce8:	str	r0, [sp, #8]
   19cec:	ldr	r0, [sp, #8]
   19cf0:	ldr	r1, [sp, #12]
   19cf4:	and	r0, r0, r1
   19cf8:	cmn	r0, #1
   19cfc:	bne	19d10 <__assert_fail@plt+0x8d7c>
   19d00:	b	19d04 <__assert_fail@plt+0x8d70>
   19d04:	mvn	r0, #0
   19d08:	str	r0, [fp, #-4]
   19d0c:	b	19d60 <__assert_fail@plt+0x8dcc>
   19d10:	ldr	r0, [fp, #-8]
   19d14:	ldr	r1, [r0]
   19d18:	bic	r1, r1, #16
   19d1c:	str	r1, [r0]
   19d20:	ldr	r0, [sp, #8]
   19d24:	ldr	r1, [sp, #12]
   19d28:	ldr	r2, [fp, #-8]
   19d2c:	str	r1, [r2, #84]	; 0x54
   19d30:	str	r0, [r2, #80]	; 0x50
   19d34:	movw	r0, #0
   19d38:	str	r0, [fp, #-4]
   19d3c:	b	19d60 <__assert_fail@plt+0x8dcc>
   19d40:	ldr	r0, [fp, #-8]
   19d44:	ldr	r2, [sp, #16]
   19d48:	ldr	r3, [sp, #20]
   19d4c:	ldr	r1, [fp, #8]
   19d50:	mov	ip, sp
   19d54:	str	r1, [ip]
   19d58:	bl	10f34 <fseeko64@plt>
   19d5c:	str	r0, [fp, #-4]
   19d60:	ldr	r0, [fp, #-4]
   19d64:	mov	sp, fp
   19d68:	pop	{fp, pc}
   19d6c:	push	{fp, lr}
   19d70:	mov	fp, sp
   19d74:	bl	10ef8 <__errno_location@plt>
   19d78:	movw	lr, #12
   19d7c:	str	lr, [r0]
   19d80:	movw	r0, #0
   19d84:	pop	{fp, pc}
   19d88:	push	{fp, lr}
   19d8c:	mov	fp, sp
   19d90:	sub	sp, sp, #8
   19d94:	str	r0, [sp, #4]
   19d98:	ldr	r0, [sp, #4]
   19d9c:	cmn	r0, #1
   19da0:	bhi	19db4 <__assert_fail@plt+0x8e20>
   19da4:	ldr	r0, [sp, #4]
   19da8:	bl	197e8 <__assert_fail@plt+0x8854>
   19dac:	str	r0, [sp]
   19db0:	b	19dbc <__assert_fail@plt+0x8e28>
   19db4:	bl	19d6c <__assert_fail@plt+0x8dd8>
   19db8:	str	r0, [sp]
   19dbc:	ldr	r0, [sp]
   19dc0:	mov	sp, fp
   19dc4:	pop	{fp, pc}
   19dc8:	push	{fp, lr}
   19dcc:	mov	fp, sp
   19dd0:	sub	sp, sp, #16
   19dd4:	str	r0, [fp, #-4]
   19dd8:	str	r1, [sp, #8]
   19ddc:	ldr	r0, [sp, #8]
   19de0:	cmn	r0, #1
   19de4:	bhi	19e1c <__assert_fail@plt+0x8e88>
   19de8:	ldr	r0, [fp, #-4]
   19dec:	ldr	r1, [sp, #8]
   19df0:	ldr	r2, [sp, #8]
   19df4:	cmp	r2, #0
   19df8:	movw	r2, #0
   19dfc:	movne	r2, #1
   19e00:	mvn	r3, #0
   19e04:	eor	r2, r2, r3
   19e08:	and	r2, r2, #1
   19e0c:	orr	r1, r1, r2
   19e10:	bl	19858 <__assert_fail@plt+0x88c4>
   19e14:	str	r0, [sp, #4]
   19e18:	b	19e24 <__assert_fail@plt+0x8e90>
   19e1c:	bl	19d6c <__assert_fail@plt+0x8dd8>
   19e20:	str	r0, [sp, #4]
   19e24:	ldr	r0, [sp, #4]
   19e28:	mov	sp, fp
   19e2c:	pop	{fp, pc}
   19e30:	push	{fp, lr}
   19e34:	mov	fp, sp
   19e38:	sub	sp, sp, #16
   19e3c:	str	r0, [sp, #8]
   19e40:	str	r1, [sp, #4]
   19e44:	ldr	r0, [sp, #8]
   19e48:	mvn	r1, #0
   19e4c:	cmp	r1, r0
   19e50:	bcs	19e74 <__assert_fail@plt+0x8ee0>
   19e54:	ldr	r0, [sp, #4]
   19e58:	cmp	r0, #0
   19e5c:	beq	19e6c <__assert_fail@plt+0x8ed8>
   19e60:	bl	19d6c <__assert_fail@plt+0x8dd8>
   19e64:	str	r0, [fp, #-4]
   19e68:	b	19eb4 <__assert_fail@plt+0x8f20>
   19e6c:	movw	r0, #0
   19e70:	str	r0, [sp, #8]
   19e74:	ldr	r0, [sp, #4]
   19e78:	mvn	r1, #0
   19e7c:	cmp	r1, r0
   19e80:	bcs	19ea4 <__assert_fail@plt+0x8f10>
   19e84:	ldr	r0, [sp, #8]
   19e88:	cmp	r0, #0
   19e8c:	beq	19e9c <__assert_fail@plt+0x8f08>
   19e90:	bl	19d6c <__assert_fail@plt+0x8dd8>
   19e94:	str	r0, [fp, #-4]
   19e98:	b	19eb4 <__assert_fail@plt+0x8f20>
   19e9c:	movw	r0, #0
   19ea0:	str	r0, [sp, #4]
   19ea4:	ldr	r0, [sp, #8]
   19ea8:	ldr	r1, [sp, #4]
   19eac:	bl	1974c <__assert_fail@plt+0x87b8>
   19eb0:	str	r0, [fp, #-4]
   19eb4:	ldr	r0, [fp, #-4]
   19eb8:	mov	sp, fp
   19ebc:	pop	{fp, pc}
   19ec0:	push	{fp, lr}
   19ec4:	mov	fp, sp
   19ec8:	sub	sp, sp, #16
   19ecc:	str	r0, [fp, #-4]
   19ed0:	str	r1, [sp, #8]
   19ed4:	str	r2, [sp, #4]
   19ed8:	ldr	r0, [sp, #8]
   19edc:	cmp	r0, #0
   19ee0:	beq	19ef0 <__assert_fail@plt+0x8f5c>
   19ee4:	ldr	r0, [sp, #4]
   19ee8:	cmp	r0, #0
   19eec:	bne	19efc <__assert_fail@plt+0x8f68>
   19ef0:	movw	r0, #1
   19ef4:	str	r0, [sp, #4]
   19ef8:	str	r0, [sp, #8]
   19efc:	ldr	r0, [sp, #8]
   19f00:	cmn	r0, #1
   19f04:	bhi	19f2c <__assert_fail@plt+0x8f98>
   19f08:	ldr	r0, [sp, #4]
   19f0c:	cmn	r0, #1
   19f10:	bhi	19f2c <__assert_fail@plt+0x8f98>
   19f14:	ldr	r0, [fp, #-4]
   19f18:	ldr	r1, [sp, #8]
   19f1c:	ldr	r2, [sp, #4]
   19f20:	bl	1a04c <__assert_fail@plt+0x90b8>
   19f24:	str	r0, [sp]
   19f28:	b	19f34 <__assert_fail@plt+0x8fa0>
   19f2c:	bl	19d6c <__assert_fail@plt+0x8dd8>
   19f30:	str	r0, [sp]
   19f34:	ldr	r0, [sp]
   19f38:	mov	sp, fp
   19f3c:	pop	{fp, pc}
   19f40:	push	{fp, lr}
   19f44:	mov	fp, sp
   19f48:	sub	sp, sp, #8
   19f4c:	movw	r0, #14
   19f50:	bl	10f58 <nl_langinfo@plt>
   19f54:	str	r0, [sp, #4]
   19f58:	ldr	r0, [sp, #4]
   19f5c:	movw	lr, #0
   19f60:	cmp	r0, lr
   19f64:	bne	19f74 <__assert_fail@plt+0x8fe0>
   19f68:	movw	r0, #50082	; 0xc3a2
   19f6c:	movt	r0, #1
   19f70:	str	r0, [sp, #4]
   19f74:	ldr	r0, [sp, #4]
   19f78:	ldrb	r0, [r0]
   19f7c:	cmp	r0, #0
   19f80:	bne	19f90 <__assert_fail@plt+0x8ffc>
   19f84:	movw	r0, #51440	; 0xc8f0
   19f88:	movt	r0, #1
   19f8c:	str	r0, [sp, #4]
   19f90:	ldr	r0, [sp, #4]
   19f94:	mov	sp, fp
   19f98:	pop	{fp, pc}
   19f9c:	push	{fp, lr}
   19fa0:	mov	fp, sp
   19fa4:	sub	sp, sp, #32
   19fa8:	str	r0, [fp, #-8]
   19fac:	str	r1, [fp, #-12]
   19fb0:	str	r2, [sp, #16]
   19fb4:	str	r3, [sp, #12]
   19fb8:	ldr	r0, [fp, #-8]
   19fbc:	movw	r1, #0
   19fc0:	cmp	r0, r1
   19fc4:	bne	19fd0 <__assert_fail@plt+0x903c>
   19fc8:	add	r0, sp, #4
   19fcc:	str	r0, [fp, #-8]
   19fd0:	ldr	r0, [fp, #-8]
   19fd4:	ldr	r1, [fp, #-12]
   19fd8:	ldr	r2, [sp, #16]
   19fdc:	ldr	r3, [sp, #12]
   19fe0:	bl	10e50 <mbrtowc@plt>
   19fe4:	str	r0, [sp, #8]
   19fe8:	ldr	r0, [sp, #8]
   19fec:	mvn	r1, #1
   19ff0:	cmp	r1, r0
   19ff4:	bhi	1a038 <__assert_fail@plt+0x90a4>
   19ff8:	ldr	r0, [sp, #16]
   19ffc:	cmp	r0, #0
   1a000:	beq	1a038 <__assert_fail@plt+0x90a4>
   1a004:	movw	r0, #0
   1a008:	bl	1ba1c <__assert_fail@plt+0xaa88>
   1a00c:	tst	r0, #1
   1a010:	bne	1a038 <__assert_fail@plt+0x90a4>
   1a014:	ldr	r0, [fp, #-12]
   1a018:	ldrb	r0, [r0]
   1a01c:	strb	r0, [sp, #3]
   1a020:	ldrb	r0, [sp, #3]
   1a024:	ldr	r1, [fp, #-8]
   1a028:	str	r0, [r1]
   1a02c:	movw	r0, #1
   1a030:	str	r0, [fp, #-4]
   1a034:	b	1a040 <__assert_fail@plt+0x90ac>
   1a038:	ldr	r0, [sp, #8]
   1a03c:	str	r0, [fp, #-4]
   1a040:	ldr	r0, [fp, #-4]
   1a044:	mov	sp, fp
   1a048:	pop	{fp, pc}
   1a04c:	push	{fp, lr}
   1a050:	mov	fp, sp
   1a054:	sub	sp, sp, #176	; 0xb0
   1a058:	str	r0, [fp, #-8]
   1a05c:	str	r1, [fp, #-12]
   1a060:	str	r2, [fp, #-16]
   1a064:	b	1a41c <__assert_fail@plt+0x9488>
   1a068:	b	1a23c <__assert_fail@plt+0x92a8>
   1a06c:	ldr	r0, [fp, #-16]
   1a070:	cmp	r0, #0
   1a074:	bcs	1a178 <__assert_fail@plt+0x91e4>
   1a078:	ldr	r0, [fp, #-12]
   1a07c:	cmp	r0, #0
   1a080:	bcs	1a108 <__assert_fail@plt+0x9174>
   1a084:	b	1a0a4 <__assert_fail@plt+0x9110>
   1a088:	ldr	r0, [fp, #-12]
   1a08c:	ldr	r1, [fp, #-16]
   1a090:	movw	r2, #127	; 0x7f
   1a094:	udiv	r1, r2, r1
   1a098:	cmp	r0, r1
   1a09c:	bcc	1a20c <__assert_fail@plt+0x9278>
   1a0a0:	b	1a224 <__assert_fail@plt+0x9290>
   1a0a4:	b	1a0b8 <__assert_fail@plt+0x9124>
   1a0a8:	ldr	r0, [fp, #-16]
   1a0ac:	cmp	r0, #1
   1a0b0:	bcc	1a0c8 <__assert_fail@plt+0x9134>
   1a0b4:	b	1a0d4 <__assert_fail@plt+0x9140>
   1a0b8:	ldr	r0, [fp, #-16]
   1a0bc:	movw	r1, #0
   1a0c0:	cmp	r1, r0
   1a0c4:	bcs	1a0d4 <__assert_fail@plt+0x9140>
   1a0c8:	movw	r0, #0
   1a0cc:	str	r0, [fp, #-24]	; 0xffffffe8
   1a0d0:	b	1a0ec <__assert_fail@plt+0x9158>
   1a0d4:	ldr	r0, [fp, #-16]
   1a0d8:	movw	r1, #0
   1a0dc:	sub	r0, r1, r0
   1a0e0:	movw	r1, #127	; 0x7f
   1a0e4:	udiv	r0, r1, r0
   1a0e8:	str	r0, [fp, #-24]	; 0xffffffe8
   1a0ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a0f0:	ldr	r1, [fp, #-12]
   1a0f4:	mvn	r2, #0
   1a0f8:	sub	r1, r2, r1
   1a0fc:	cmp	r0, r1
   1a100:	bls	1a20c <__assert_fail@plt+0x9278>
   1a104:	b	1a224 <__assert_fail@plt+0x9290>
   1a108:	ldr	r0, [fp, #-16]
   1a10c:	cmn	r0, #1
   1a110:	bne	1a15c <__assert_fail@plt+0x91c8>
   1a114:	b	1a134 <__assert_fail@plt+0x91a0>
   1a118:	ldr	r0, [fp, #-12]
   1a11c:	mvn	r1, #127	; 0x7f
   1a120:	add	r0, r0, r1
   1a124:	movw	r1, #0
   1a128:	cmp	r1, r0
   1a12c:	bcc	1a20c <__assert_fail@plt+0x9278>
   1a130:	b	1a224 <__assert_fail@plt+0x9290>
   1a134:	ldr	r0, [fp, #-12]
   1a138:	movw	r1, #0
   1a13c:	cmp	r1, r0
   1a140:	bcs	1a224 <__assert_fail@plt+0x9290>
   1a144:	ldr	r0, [fp, #-12]
   1a148:	sub	r0, r0, #1
   1a14c:	movw	r1, #127	; 0x7f
   1a150:	cmp	r1, r0
   1a154:	bcc	1a20c <__assert_fail@plt+0x9278>
   1a158:	b	1a224 <__assert_fail@plt+0x9290>
   1a15c:	ldr	r0, [fp, #-16]
   1a160:	mvn	r1, #127	; 0x7f
   1a164:	udiv	r0, r1, r0
   1a168:	ldr	r1, [fp, #-12]
   1a16c:	cmp	r0, r1
   1a170:	bcc	1a20c <__assert_fail@plt+0x9278>
   1a174:	b	1a224 <__assert_fail@plt+0x9290>
   1a178:	ldr	r0, [fp, #-16]
   1a17c:	cmp	r0, #0
   1a180:	bne	1a188 <__assert_fail@plt+0x91f4>
   1a184:	b	1a224 <__assert_fail@plt+0x9290>
   1a188:	ldr	r0, [fp, #-12]
   1a18c:	cmp	r0, #0
   1a190:	bcs	1a1f4 <__assert_fail@plt+0x9260>
   1a194:	ldr	r0, [fp, #-12]
   1a198:	cmn	r0, #1
   1a19c:	bne	1a1d8 <__assert_fail@plt+0x9244>
   1a1a0:	b	1a1c0 <__assert_fail@plt+0x922c>
   1a1a4:	ldr	r0, [fp, #-16]
   1a1a8:	mvn	r1, #127	; 0x7f
   1a1ac:	add	r0, r0, r1
   1a1b0:	movw	r1, #0
   1a1b4:	cmp	r1, r0
   1a1b8:	bcc	1a20c <__assert_fail@plt+0x9278>
   1a1bc:	b	1a224 <__assert_fail@plt+0x9290>
   1a1c0:	ldr	r0, [fp, #-16]
   1a1c4:	sub	r0, r0, #1
   1a1c8:	movw	r1, #127	; 0x7f
   1a1cc:	cmp	r1, r0
   1a1d0:	bcc	1a20c <__assert_fail@plt+0x9278>
   1a1d4:	b	1a224 <__assert_fail@plt+0x9290>
   1a1d8:	ldr	r0, [fp, #-12]
   1a1dc:	mvn	r1, #127	; 0x7f
   1a1e0:	udiv	r0, r1, r0
   1a1e4:	ldr	r1, [fp, #-16]
   1a1e8:	cmp	r0, r1
   1a1ec:	bcc	1a20c <__assert_fail@plt+0x9278>
   1a1f0:	b	1a224 <__assert_fail@plt+0x9290>
   1a1f4:	ldr	r0, [fp, #-16]
   1a1f8:	movw	r1, #127	; 0x7f
   1a1fc:	udiv	r0, r1, r0
   1a200:	ldr	r1, [fp, #-12]
   1a204:	cmp	r0, r1
   1a208:	bcs	1a224 <__assert_fail@plt+0x9290>
   1a20c:	ldr	r0, [fp, #-12]
   1a210:	ldr	r1, [fp, #-16]
   1a214:	mul	r0, r0, r1
   1a218:	sxtb	r0, r0
   1a21c:	str	r0, [fp, #-20]	; 0xffffffec
   1a220:	b	1b39c <__assert_fail@plt+0xa408>
   1a224:	ldr	r0, [fp, #-12]
   1a228:	ldr	r1, [fp, #-16]
   1a22c:	mul	r0, r0, r1
   1a230:	sxtb	r0, r0
   1a234:	str	r0, [fp, #-20]	; 0xffffffec
   1a238:	b	1b3b4 <__assert_fail@plt+0xa420>
   1a23c:	ldr	r0, [fp, #-16]
   1a240:	cmp	r0, #0
   1a244:	bcs	1a350 <__assert_fail@plt+0x93bc>
   1a248:	ldr	r0, [fp, #-12]
   1a24c:	cmp	r0, #0
   1a250:	bcs	1a2d8 <__assert_fail@plt+0x9344>
   1a254:	b	1a274 <__assert_fail@plt+0x92e0>
   1a258:	ldr	r0, [fp, #-12]
   1a25c:	ldr	r1, [fp, #-16]
   1a260:	movw	r2, #255	; 0xff
   1a264:	udiv	r1, r2, r1
   1a268:	cmp	r0, r1
   1a26c:	bcc	1a3ec <__assert_fail@plt+0x9458>
   1a270:	b	1a404 <__assert_fail@plt+0x9470>
   1a274:	b	1a288 <__assert_fail@plt+0x92f4>
   1a278:	ldr	r0, [fp, #-16]
   1a27c:	cmp	r0, #1
   1a280:	bcc	1a298 <__assert_fail@plt+0x9304>
   1a284:	b	1a2a4 <__assert_fail@plt+0x9310>
   1a288:	ldr	r0, [fp, #-16]
   1a28c:	movw	r1, #0
   1a290:	cmp	r1, r0
   1a294:	bcs	1a2a4 <__assert_fail@plt+0x9310>
   1a298:	movw	r0, #0
   1a29c:	str	r0, [fp, #-28]	; 0xffffffe4
   1a2a0:	b	1a2bc <__assert_fail@plt+0x9328>
   1a2a4:	ldr	r0, [fp, #-16]
   1a2a8:	movw	r1, #0
   1a2ac:	sub	r0, r1, r0
   1a2b0:	movw	r1, #255	; 0xff
   1a2b4:	udiv	r0, r1, r0
   1a2b8:	str	r0, [fp, #-28]	; 0xffffffe4
   1a2bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a2c0:	ldr	r1, [fp, #-12]
   1a2c4:	mvn	r2, #0
   1a2c8:	sub	r1, r2, r1
   1a2cc:	cmp	r0, r1
   1a2d0:	bls	1a3ec <__assert_fail@plt+0x9458>
   1a2d4:	b	1a404 <__assert_fail@plt+0x9470>
   1a2d8:	b	1a2e0 <__assert_fail@plt+0x934c>
   1a2dc:	b	1a2e4 <__assert_fail@plt+0x9350>
   1a2e0:	b	1a334 <__assert_fail@plt+0x93a0>
   1a2e4:	ldr	r0, [fp, #-16]
   1a2e8:	cmn	r0, #1
   1a2ec:	bne	1a334 <__assert_fail@plt+0x93a0>
   1a2f0:	b	1a30c <__assert_fail@plt+0x9378>
   1a2f4:	ldr	r0, [fp, #-12]
   1a2f8:	add	r0, r0, #0
   1a2fc:	movw	r1, #0
   1a300:	cmp	r1, r0
   1a304:	bcc	1a3ec <__assert_fail@plt+0x9458>
   1a308:	b	1a404 <__assert_fail@plt+0x9470>
   1a30c:	ldr	r0, [fp, #-12]
   1a310:	movw	r1, #0
   1a314:	cmp	r1, r0
   1a318:	bcs	1a404 <__assert_fail@plt+0x9470>
   1a31c:	ldr	r0, [fp, #-12]
   1a320:	sub	r0, r0, #1
   1a324:	mvn	r1, #0
   1a328:	cmp	r1, r0
   1a32c:	bcc	1a3ec <__assert_fail@plt+0x9458>
   1a330:	b	1a404 <__assert_fail@plt+0x9470>
   1a334:	ldr	r0, [fp, #-16]
   1a338:	movw	r1, #0
   1a33c:	udiv	r0, r1, r0
   1a340:	ldr	r1, [fp, #-12]
   1a344:	cmp	r0, r1
   1a348:	bcc	1a3ec <__assert_fail@plt+0x9458>
   1a34c:	b	1a404 <__assert_fail@plt+0x9470>
   1a350:	ldr	r0, [fp, #-16]
   1a354:	cmp	r0, #0
   1a358:	bne	1a360 <__assert_fail@plt+0x93cc>
   1a35c:	b	1a404 <__assert_fail@plt+0x9470>
   1a360:	ldr	r0, [fp, #-12]
   1a364:	cmp	r0, #0
   1a368:	bcs	1a3d4 <__assert_fail@plt+0x9440>
   1a36c:	b	1a374 <__assert_fail@plt+0x93e0>
   1a370:	b	1a378 <__assert_fail@plt+0x93e4>
   1a374:	b	1a3b8 <__assert_fail@plt+0x9424>
   1a378:	ldr	r0, [fp, #-12]
   1a37c:	cmn	r0, #1
   1a380:	bne	1a3b8 <__assert_fail@plt+0x9424>
   1a384:	b	1a3a0 <__assert_fail@plt+0x940c>
   1a388:	ldr	r0, [fp, #-16]
   1a38c:	add	r0, r0, #0
   1a390:	movw	r1, #0
   1a394:	cmp	r1, r0
   1a398:	bcc	1a3ec <__assert_fail@plt+0x9458>
   1a39c:	b	1a404 <__assert_fail@plt+0x9470>
   1a3a0:	ldr	r0, [fp, #-16]
   1a3a4:	sub	r0, r0, #1
   1a3a8:	mvn	r1, #0
   1a3ac:	cmp	r1, r0
   1a3b0:	bcc	1a3ec <__assert_fail@plt+0x9458>
   1a3b4:	b	1a404 <__assert_fail@plt+0x9470>
   1a3b8:	ldr	r0, [fp, #-12]
   1a3bc:	movw	r1, #0
   1a3c0:	udiv	r0, r1, r0
   1a3c4:	ldr	r1, [fp, #-16]
   1a3c8:	cmp	r0, r1
   1a3cc:	bcc	1a3ec <__assert_fail@plt+0x9458>
   1a3d0:	b	1a404 <__assert_fail@plt+0x9470>
   1a3d4:	ldr	r0, [fp, #-16]
   1a3d8:	movw	r1, #255	; 0xff
   1a3dc:	udiv	r0, r1, r0
   1a3e0:	ldr	r1, [fp, #-12]
   1a3e4:	cmp	r0, r1
   1a3e8:	bcs	1a404 <__assert_fail@plt+0x9470>
   1a3ec:	ldr	r0, [fp, #-12]
   1a3f0:	ldr	r1, [fp, #-16]
   1a3f4:	mul	r0, r0, r1
   1a3f8:	and	r0, r0, #255	; 0xff
   1a3fc:	str	r0, [fp, #-20]	; 0xffffffec
   1a400:	b	1b39c <__assert_fail@plt+0xa408>
   1a404:	ldr	r0, [fp, #-12]
   1a408:	ldr	r1, [fp, #-16]
   1a40c:	mul	r0, r0, r1
   1a410:	and	r0, r0, #255	; 0xff
   1a414:	str	r0, [fp, #-20]	; 0xffffffec
   1a418:	b	1b3b4 <__assert_fail@plt+0xa420>
   1a41c:	b	1a7d4 <__assert_fail@plt+0x9840>
   1a420:	b	1a5f4 <__assert_fail@plt+0x9660>
   1a424:	ldr	r0, [fp, #-16]
   1a428:	cmp	r0, #0
   1a42c:	bcs	1a530 <__assert_fail@plt+0x959c>
   1a430:	ldr	r0, [fp, #-12]
   1a434:	cmp	r0, #0
   1a438:	bcs	1a4c0 <__assert_fail@plt+0x952c>
   1a43c:	b	1a45c <__assert_fail@plt+0x94c8>
   1a440:	ldr	r0, [fp, #-12]
   1a444:	ldr	r1, [fp, #-16]
   1a448:	movw	r2, #32767	; 0x7fff
   1a44c:	udiv	r1, r2, r1
   1a450:	cmp	r0, r1
   1a454:	bcc	1a5c4 <__assert_fail@plt+0x9630>
   1a458:	b	1a5dc <__assert_fail@plt+0x9648>
   1a45c:	b	1a470 <__assert_fail@plt+0x94dc>
   1a460:	ldr	r0, [fp, #-16]
   1a464:	cmp	r0, #1
   1a468:	bcc	1a480 <__assert_fail@plt+0x94ec>
   1a46c:	b	1a48c <__assert_fail@plt+0x94f8>
   1a470:	ldr	r0, [fp, #-16]
   1a474:	movw	r1, #0
   1a478:	cmp	r1, r0
   1a47c:	bcs	1a48c <__assert_fail@plt+0x94f8>
   1a480:	movw	r0, #0
   1a484:	str	r0, [fp, #-32]	; 0xffffffe0
   1a488:	b	1a4a4 <__assert_fail@plt+0x9510>
   1a48c:	ldr	r0, [fp, #-16]
   1a490:	movw	r1, #0
   1a494:	sub	r0, r1, r0
   1a498:	movw	r1, #32767	; 0x7fff
   1a49c:	udiv	r0, r1, r0
   1a4a0:	str	r0, [fp, #-32]	; 0xffffffe0
   1a4a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a4a8:	ldr	r1, [fp, #-12]
   1a4ac:	mvn	r2, #0
   1a4b0:	sub	r1, r2, r1
   1a4b4:	cmp	r0, r1
   1a4b8:	bls	1a5c4 <__assert_fail@plt+0x9630>
   1a4bc:	b	1a5dc <__assert_fail@plt+0x9648>
   1a4c0:	ldr	r0, [fp, #-16]
   1a4c4:	cmn	r0, #1
   1a4c8:	bne	1a514 <__assert_fail@plt+0x9580>
   1a4cc:	b	1a4ec <__assert_fail@plt+0x9558>
   1a4d0:	ldr	r0, [pc, #3840]	; 1b3d8 <__assert_fail@plt+0xa444>
   1a4d4:	ldr	r1, [fp, #-12]
   1a4d8:	add	r0, r1, r0
   1a4dc:	movw	r1, #0
   1a4e0:	cmp	r1, r0
   1a4e4:	bcc	1a5c4 <__assert_fail@plt+0x9630>
   1a4e8:	b	1a5dc <__assert_fail@plt+0x9648>
   1a4ec:	ldr	r0, [fp, #-12]
   1a4f0:	movw	r1, #0
   1a4f4:	cmp	r1, r0
   1a4f8:	bcs	1a5dc <__assert_fail@plt+0x9648>
   1a4fc:	ldr	r0, [fp, #-12]
   1a500:	sub	r0, r0, #1
   1a504:	movw	r1, #32767	; 0x7fff
   1a508:	cmp	r1, r0
   1a50c:	bcc	1a5c4 <__assert_fail@plt+0x9630>
   1a510:	b	1a5dc <__assert_fail@plt+0x9648>
   1a514:	ldr	r0, [pc, #3772]	; 1b3d8 <__assert_fail@plt+0xa444>
   1a518:	ldr	r1, [fp, #-16]
   1a51c:	udiv	r0, r0, r1
   1a520:	ldr	r1, [fp, #-12]
   1a524:	cmp	r0, r1
   1a528:	bcc	1a5c4 <__assert_fail@plt+0x9630>
   1a52c:	b	1a5dc <__assert_fail@plt+0x9648>
   1a530:	ldr	r0, [fp, #-16]
   1a534:	cmp	r0, #0
   1a538:	bne	1a540 <__assert_fail@plt+0x95ac>
   1a53c:	b	1a5dc <__assert_fail@plt+0x9648>
   1a540:	ldr	r0, [fp, #-12]
   1a544:	cmp	r0, #0
   1a548:	bcs	1a5ac <__assert_fail@plt+0x9618>
   1a54c:	ldr	r0, [fp, #-12]
   1a550:	cmn	r0, #1
   1a554:	bne	1a590 <__assert_fail@plt+0x95fc>
   1a558:	b	1a578 <__assert_fail@plt+0x95e4>
   1a55c:	ldr	r0, [pc, #3700]	; 1b3d8 <__assert_fail@plt+0xa444>
   1a560:	ldr	r1, [fp, #-16]
   1a564:	add	r0, r1, r0
   1a568:	movw	r1, #0
   1a56c:	cmp	r1, r0
   1a570:	bcc	1a5c4 <__assert_fail@plt+0x9630>
   1a574:	b	1a5dc <__assert_fail@plt+0x9648>
   1a578:	ldr	r0, [fp, #-16]
   1a57c:	sub	r0, r0, #1
   1a580:	movw	r1, #32767	; 0x7fff
   1a584:	cmp	r1, r0
   1a588:	bcc	1a5c4 <__assert_fail@plt+0x9630>
   1a58c:	b	1a5dc <__assert_fail@plt+0x9648>
   1a590:	ldr	r0, [pc, #3648]	; 1b3d8 <__assert_fail@plt+0xa444>
   1a594:	ldr	r1, [fp, #-12]
   1a598:	udiv	r0, r0, r1
   1a59c:	ldr	r1, [fp, #-16]
   1a5a0:	cmp	r0, r1
   1a5a4:	bcc	1a5c4 <__assert_fail@plt+0x9630>
   1a5a8:	b	1a5dc <__assert_fail@plt+0x9648>
   1a5ac:	ldr	r0, [fp, #-16]
   1a5b0:	movw	r1, #32767	; 0x7fff
   1a5b4:	udiv	r0, r1, r0
   1a5b8:	ldr	r1, [fp, #-12]
   1a5bc:	cmp	r0, r1
   1a5c0:	bcs	1a5dc <__assert_fail@plt+0x9648>
   1a5c4:	ldr	r0, [fp, #-12]
   1a5c8:	ldr	r1, [fp, #-16]
   1a5cc:	mul	r0, r0, r1
   1a5d0:	sxth	r0, r0
   1a5d4:	str	r0, [fp, #-20]	; 0xffffffec
   1a5d8:	b	1b39c <__assert_fail@plt+0xa408>
   1a5dc:	ldr	r0, [fp, #-12]
   1a5e0:	ldr	r1, [fp, #-16]
   1a5e4:	mul	r0, r0, r1
   1a5e8:	sxth	r0, r0
   1a5ec:	str	r0, [fp, #-20]	; 0xffffffec
   1a5f0:	b	1b3b4 <__assert_fail@plt+0xa420>
   1a5f4:	ldr	r0, [fp, #-16]
   1a5f8:	cmp	r0, #0
   1a5fc:	bcs	1a708 <__assert_fail@plt+0x9774>
   1a600:	ldr	r0, [fp, #-12]
   1a604:	cmp	r0, #0
   1a608:	bcs	1a690 <__assert_fail@plt+0x96fc>
   1a60c:	b	1a62c <__assert_fail@plt+0x9698>
   1a610:	ldr	r0, [fp, #-12]
   1a614:	ldr	r1, [fp, #-16]
   1a618:	movw	r2, #65535	; 0xffff
   1a61c:	udiv	r1, r2, r1
   1a620:	cmp	r0, r1
   1a624:	bcc	1a7a4 <__assert_fail@plt+0x9810>
   1a628:	b	1a7bc <__assert_fail@plt+0x9828>
   1a62c:	b	1a640 <__assert_fail@plt+0x96ac>
   1a630:	ldr	r0, [fp, #-16]
   1a634:	cmp	r0, #1
   1a638:	bcc	1a650 <__assert_fail@plt+0x96bc>
   1a63c:	b	1a65c <__assert_fail@plt+0x96c8>
   1a640:	ldr	r0, [fp, #-16]
   1a644:	movw	r1, #0
   1a648:	cmp	r1, r0
   1a64c:	bcs	1a65c <__assert_fail@plt+0x96c8>
   1a650:	movw	r0, #0
   1a654:	str	r0, [fp, #-36]	; 0xffffffdc
   1a658:	b	1a674 <__assert_fail@plt+0x96e0>
   1a65c:	ldr	r0, [fp, #-16]
   1a660:	movw	r1, #0
   1a664:	sub	r0, r1, r0
   1a668:	movw	r1, #65535	; 0xffff
   1a66c:	udiv	r0, r1, r0
   1a670:	str	r0, [fp, #-36]	; 0xffffffdc
   1a674:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a678:	ldr	r1, [fp, #-12]
   1a67c:	mvn	r2, #0
   1a680:	sub	r1, r2, r1
   1a684:	cmp	r0, r1
   1a688:	bls	1a7a4 <__assert_fail@plt+0x9810>
   1a68c:	b	1a7bc <__assert_fail@plt+0x9828>
   1a690:	b	1a698 <__assert_fail@plt+0x9704>
   1a694:	b	1a69c <__assert_fail@plt+0x9708>
   1a698:	b	1a6ec <__assert_fail@plt+0x9758>
   1a69c:	ldr	r0, [fp, #-16]
   1a6a0:	cmn	r0, #1
   1a6a4:	bne	1a6ec <__assert_fail@plt+0x9758>
   1a6a8:	b	1a6c4 <__assert_fail@plt+0x9730>
   1a6ac:	ldr	r0, [fp, #-12]
   1a6b0:	add	r0, r0, #0
   1a6b4:	movw	r1, #0
   1a6b8:	cmp	r1, r0
   1a6bc:	bcc	1a7a4 <__assert_fail@plt+0x9810>
   1a6c0:	b	1a7bc <__assert_fail@plt+0x9828>
   1a6c4:	ldr	r0, [fp, #-12]
   1a6c8:	movw	r1, #0
   1a6cc:	cmp	r1, r0
   1a6d0:	bcs	1a7bc <__assert_fail@plt+0x9828>
   1a6d4:	ldr	r0, [fp, #-12]
   1a6d8:	sub	r0, r0, #1
   1a6dc:	mvn	r1, #0
   1a6e0:	cmp	r1, r0
   1a6e4:	bcc	1a7a4 <__assert_fail@plt+0x9810>
   1a6e8:	b	1a7bc <__assert_fail@plt+0x9828>
   1a6ec:	ldr	r0, [fp, #-16]
   1a6f0:	movw	r1, #0
   1a6f4:	udiv	r0, r1, r0
   1a6f8:	ldr	r1, [fp, #-12]
   1a6fc:	cmp	r0, r1
   1a700:	bcc	1a7a4 <__assert_fail@plt+0x9810>
   1a704:	b	1a7bc <__assert_fail@plt+0x9828>
   1a708:	ldr	r0, [fp, #-16]
   1a70c:	cmp	r0, #0
   1a710:	bne	1a718 <__assert_fail@plt+0x9784>
   1a714:	b	1a7bc <__assert_fail@plt+0x9828>
   1a718:	ldr	r0, [fp, #-12]
   1a71c:	cmp	r0, #0
   1a720:	bcs	1a78c <__assert_fail@plt+0x97f8>
   1a724:	b	1a72c <__assert_fail@plt+0x9798>
   1a728:	b	1a730 <__assert_fail@plt+0x979c>
   1a72c:	b	1a770 <__assert_fail@plt+0x97dc>
   1a730:	ldr	r0, [fp, #-12]
   1a734:	cmn	r0, #1
   1a738:	bne	1a770 <__assert_fail@plt+0x97dc>
   1a73c:	b	1a758 <__assert_fail@plt+0x97c4>
   1a740:	ldr	r0, [fp, #-16]
   1a744:	add	r0, r0, #0
   1a748:	movw	r1, #0
   1a74c:	cmp	r1, r0
   1a750:	bcc	1a7a4 <__assert_fail@plt+0x9810>
   1a754:	b	1a7bc <__assert_fail@plt+0x9828>
   1a758:	ldr	r0, [fp, #-16]
   1a75c:	sub	r0, r0, #1
   1a760:	mvn	r1, #0
   1a764:	cmp	r1, r0
   1a768:	bcc	1a7a4 <__assert_fail@plt+0x9810>
   1a76c:	b	1a7bc <__assert_fail@plt+0x9828>
   1a770:	ldr	r0, [fp, #-12]
   1a774:	movw	r1, #0
   1a778:	udiv	r0, r1, r0
   1a77c:	ldr	r1, [fp, #-16]
   1a780:	cmp	r0, r1
   1a784:	bcc	1a7a4 <__assert_fail@plt+0x9810>
   1a788:	b	1a7bc <__assert_fail@plt+0x9828>
   1a78c:	ldr	r0, [fp, #-16]
   1a790:	movw	r1, #65535	; 0xffff
   1a794:	udiv	r0, r1, r0
   1a798:	ldr	r1, [fp, #-12]
   1a79c:	cmp	r0, r1
   1a7a0:	bcs	1a7bc <__assert_fail@plt+0x9828>
   1a7a4:	ldr	r0, [fp, #-12]
   1a7a8:	ldr	r1, [fp, #-16]
   1a7ac:	mul	r0, r0, r1
   1a7b0:	uxth	r0, r0
   1a7b4:	str	r0, [fp, #-20]	; 0xffffffec
   1a7b8:	b	1b39c <__assert_fail@plt+0xa408>
   1a7bc:	ldr	r0, [fp, #-12]
   1a7c0:	ldr	r1, [fp, #-16]
   1a7c4:	mul	r0, r0, r1
   1a7c8:	uxth	r0, r0
   1a7cc:	str	r0, [fp, #-20]	; 0xffffffec
   1a7d0:	b	1b3b4 <__assert_fail@plt+0xa420>
   1a7d4:	b	1a7d8 <__assert_fail@plt+0x9844>
   1a7d8:	b	1a99c <__assert_fail@plt+0x9a08>
   1a7dc:	ldr	r0, [fp, #-16]
   1a7e0:	cmp	r0, #0
   1a7e4:	bcs	1a8e4 <__assert_fail@plt+0x9950>
   1a7e8:	ldr	r0, [fp, #-12]
   1a7ec:	cmp	r0, #0
   1a7f0:	bcs	1a878 <__assert_fail@plt+0x98e4>
   1a7f4:	b	1a814 <__assert_fail@plt+0x9880>
   1a7f8:	ldr	r0, [pc, #3024]	; 1b3d0 <__assert_fail@plt+0xa43c>
   1a7fc:	ldr	r1, [fp, #-12]
   1a800:	ldr	r2, [fp, #-16]
   1a804:	udiv	r0, r0, r2
   1a808:	cmp	r1, r0
   1a80c:	bcc	1a974 <__assert_fail@plt+0x99e0>
   1a810:	b	1a988 <__assert_fail@plt+0x99f4>
   1a814:	b	1a828 <__assert_fail@plt+0x9894>
   1a818:	ldr	r0, [fp, #-16]
   1a81c:	cmp	r0, #1
   1a820:	bcc	1a838 <__assert_fail@plt+0x98a4>
   1a824:	b	1a844 <__assert_fail@plt+0x98b0>
   1a828:	ldr	r0, [fp, #-16]
   1a82c:	movw	r1, #0
   1a830:	cmp	r1, r0
   1a834:	bcs	1a844 <__assert_fail@plt+0x98b0>
   1a838:	movw	r0, #0
   1a83c:	str	r0, [fp, #-40]	; 0xffffffd8
   1a840:	b	1a85c <__assert_fail@plt+0x98c8>
   1a844:	ldr	r0, [pc, #2948]	; 1b3d0 <__assert_fail@plt+0xa43c>
   1a848:	ldr	r1, [fp, #-16]
   1a84c:	movw	r2, #0
   1a850:	sub	r1, r2, r1
   1a854:	udiv	r0, r0, r1
   1a858:	str	r0, [fp, #-40]	; 0xffffffd8
   1a85c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a860:	ldr	r1, [fp, #-12]
   1a864:	mvn	r2, #0
   1a868:	sub	r1, r2, r1
   1a86c:	cmp	r0, r1
   1a870:	bls	1a974 <__assert_fail@plt+0x99e0>
   1a874:	b	1a988 <__assert_fail@plt+0x99f4>
   1a878:	ldr	r0, [fp, #-16]
   1a87c:	cmn	r0, #1
   1a880:	bne	1a8c8 <__assert_fail@plt+0x9934>
   1a884:	b	1a8a0 <__assert_fail@plt+0x990c>
   1a888:	ldr	r0, [fp, #-12]
   1a88c:	add	r0, r0, #-2147483648	; 0x80000000
   1a890:	movw	r1, #0
   1a894:	cmp	r1, r0
   1a898:	bcc	1a974 <__assert_fail@plt+0x99e0>
   1a89c:	b	1a988 <__assert_fail@plt+0x99f4>
   1a8a0:	ldr	r0, [fp, #-12]
   1a8a4:	movw	r1, #0
   1a8a8:	cmp	r1, r0
   1a8ac:	bcs	1a988 <__assert_fail@plt+0x99f4>
   1a8b0:	ldr	r0, [pc, #2840]	; 1b3d0 <__assert_fail@plt+0xa43c>
   1a8b4:	ldr	r1, [fp, #-12]
   1a8b8:	sub	r1, r1, #1
   1a8bc:	cmp	r0, r1
   1a8c0:	bcc	1a974 <__assert_fail@plt+0x99e0>
   1a8c4:	b	1a988 <__assert_fail@plt+0x99f4>
   1a8c8:	ldr	r0, [pc, #2820]	; 1b3d4 <__assert_fail@plt+0xa440>
   1a8cc:	ldr	r1, [fp, #-16]
   1a8d0:	udiv	r0, r0, r1
   1a8d4:	ldr	r1, [fp, #-12]
   1a8d8:	cmp	r0, r1
   1a8dc:	bcc	1a974 <__assert_fail@plt+0x99e0>
   1a8e0:	b	1a988 <__assert_fail@plt+0x99f4>
   1a8e4:	ldr	r0, [fp, #-16]
   1a8e8:	cmp	r0, #0
   1a8ec:	bne	1a8f4 <__assert_fail@plt+0x9960>
   1a8f0:	b	1a988 <__assert_fail@plt+0x99f4>
   1a8f4:	ldr	r0, [fp, #-12]
   1a8f8:	cmp	r0, #0
   1a8fc:	bcs	1a95c <__assert_fail@plt+0x99c8>
   1a900:	ldr	r0, [fp, #-12]
   1a904:	cmn	r0, #1
   1a908:	bne	1a940 <__assert_fail@plt+0x99ac>
   1a90c:	b	1a928 <__assert_fail@plt+0x9994>
   1a910:	ldr	r0, [fp, #-16]
   1a914:	add	r0, r0, #-2147483648	; 0x80000000
   1a918:	movw	r1, #0
   1a91c:	cmp	r1, r0
   1a920:	bcc	1a974 <__assert_fail@plt+0x99e0>
   1a924:	b	1a988 <__assert_fail@plt+0x99f4>
   1a928:	ldr	r0, [pc, #2720]	; 1b3d0 <__assert_fail@plt+0xa43c>
   1a92c:	ldr	r1, [fp, #-16]
   1a930:	sub	r1, r1, #1
   1a934:	cmp	r0, r1
   1a938:	bcc	1a974 <__assert_fail@plt+0x99e0>
   1a93c:	b	1a988 <__assert_fail@plt+0x99f4>
   1a940:	ldr	r0, [pc, #2700]	; 1b3d4 <__assert_fail@plt+0xa440>
   1a944:	ldr	r1, [fp, #-12]
   1a948:	udiv	r0, r0, r1
   1a94c:	ldr	r1, [fp, #-16]
   1a950:	cmp	r0, r1
   1a954:	bcc	1a974 <__assert_fail@plt+0x99e0>
   1a958:	b	1a988 <__assert_fail@plt+0x99f4>
   1a95c:	ldr	r0, [pc, #2668]	; 1b3d0 <__assert_fail@plt+0xa43c>
   1a960:	ldr	r1, [fp, #-16]
   1a964:	udiv	r0, r0, r1
   1a968:	ldr	r1, [fp, #-12]
   1a96c:	cmp	r0, r1
   1a970:	bcs	1a988 <__assert_fail@plt+0x99f4>
   1a974:	ldr	r0, [fp, #-12]
   1a978:	ldr	r1, [fp, #-16]
   1a97c:	mul	r0, r0, r1
   1a980:	str	r0, [fp, #-20]	; 0xffffffec
   1a984:	b	1b39c <__assert_fail@plt+0xa408>
   1a988:	ldr	r0, [fp, #-12]
   1a98c:	ldr	r1, [fp, #-16]
   1a990:	mul	r0, r0, r1
   1a994:	str	r0, [fp, #-20]	; 0xffffffec
   1a998:	b	1b3b4 <__assert_fail@plt+0xa420>
   1a99c:	ldr	r0, [fp, #-16]
   1a9a0:	cmp	r0, #0
   1a9a4:	bcs	1aab0 <__assert_fail@plt+0x9b1c>
   1a9a8:	ldr	r0, [fp, #-12]
   1a9ac:	cmp	r0, #0
   1a9b0:	bcs	1aa38 <__assert_fail@plt+0x9aa4>
   1a9b4:	b	1a9d4 <__assert_fail@plt+0x9a40>
   1a9b8:	ldr	r0, [fp, #-12]
   1a9bc:	ldr	r1, [fp, #-16]
   1a9c0:	mvn	r2, #0
   1a9c4:	udiv	r1, r2, r1
   1a9c8:	cmp	r0, r1
   1a9cc:	bcc	1ab4c <__assert_fail@plt+0x9bb8>
   1a9d0:	b	1ab60 <__assert_fail@plt+0x9bcc>
   1a9d4:	b	1a9e8 <__assert_fail@plt+0x9a54>
   1a9d8:	ldr	r0, [fp, #-16]
   1a9dc:	cmp	r0, #1
   1a9e0:	bcc	1a9f8 <__assert_fail@plt+0x9a64>
   1a9e4:	b	1aa04 <__assert_fail@plt+0x9a70>
   1a9e8:	ldr	r0, [fp, #-16]
   1a9ec:	movw	r1, #0
   1a9f0:	cmp	r1, r0
   1a9f4:	bcs	1aa04 <__assert_fail@plt+0x9a70>
   1a9f8:	movw	r0, #1
   1a9fc:	str	r0, [fp, #-44]	; 0xffffffd4
   1aa00:	b	1aa1c <__assert_fail@plt+0x9a88>
   1aa04:	ldr	r0, [fp, #-16]
   1aa08:	movw	r1, #0
   1aa0c:	sub	r0, r1, r0
   1aa10:	mvn	r1, #0
   1aa14:	udiv	r0, r1, r0
   1aa18:	str	r0, [fp, #-44]	; 0xffffffd4
   1aa1c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aa20:	ldr	r1, [fp, #-12]
   1aa24:	mvn	r2, #0
   1aa28:	sub	r1, r2, r1
   1aa2c:	cmp	r0, r1
   1aa30:	bls	1ab4c <__assert_fail@plt+0x9bb8>
   1aa34:	b	1ab60 <__assert_fail@plt+0x9bcc>
   1aa38:	b	1aa40 <__assert_fail@plt+0x9aac>
   1aa3c:	b	1aa44 <__assert_fail@plt+0x9ab0>
   1aa40:	b	1aa94 <__assert_fail@plt+0x9b00>
   1aa44:	ldr	r0, [fp, #-16]
   1aa48:	cmn	r0, #1
   1aa4c:	bne	1aa94 <__assert_fail@plt+0x9b00>
   1aa50:	b	1aa6c <__assert_fail@plt+0x9ad8>
   1aa54:	ldr	r0, [fp, #-12]
   1aa58:	add	r0, r0, #0
   1aa5c:	movw	r1, #0
   1aa60:	cmp	r1, r0
   1aa64:	bcc	1ab4c <__assert_fail@plt+0x9bb8>
   1aa68:	b	1ab60 <__assert_fail@plt+0x9bcc>
   1aa6c:	ldr	r0, [fp, #-12]
   1aa70:	movw	r1, #0
   1aa74:	cmp	r1, r0
   1aa78:	bcs	1ab60 <__assert_fail@plt+0x9bcc>
   1aa7c:	ldr	r0, [fp, #-12]
   1aa80:	sub	r0, r0, #1
   1aa84:	mvn	r1, #0
   1aa88:	cmp	r1, r0
   1aa8c:	bcc	1ab4c <__assert_fail@plt+0x9bb8>
   1aa90:	b	1ab60 <__assert_fail@plt+0x9bcc>
   1aa94:	ldr	r0, [fp, #-16]
   1aa98:	movw	r1, #0
   1aa9c:	udiv	r0, r1, r0
   1aaa0:	ldr	r1, [fp, #-12]
   1aaa4:	cmp	r0, r1
   1aaa8:	bcc	1ab4c <__assert_fail@plt+0x9bb8>
   1aaac:	b	1ab60 <__assert_fail@plt+0x9bcc>
   1aab0:	ldr	r0, [fp, #-16]
   1aab4:	cmp	r0, #0
   1aab8:	bne	1aac0 <__assert_fail@plt+0x9b2c>
   1aabc:	b	1ab60 <__assert_fail@plt+0x9bcc>
   1aac0:	ldr	r0, [fp, #-12]
   1aac4:	cmp	r0, #0
   1aac8:	bcs	1ab34 <__assert_fail@plt+0x9ba0>
   1aacc:	b	1aad4 <__assert_fail@plt+0x9b40>
   1aad0:	b	1aad8 <__assert_fail@plt+0x9b44>
   1aad4:	b	1ab18 <__assert_fail@plt+0x9b84>
   1aad8:	ldr	r0, [fp, #-12]
   1aadc:	cmn	r0, #1
   1aae0:	bne	1ab18 <__assert_fail@plt+0x9b84>
   1aae4:	b	1ab00 <__assert_fail@plt+0x9b6c>
   1aae8:	ldr	r0, [fp, #-16]
   1aaec:	add	r0, r0, #0
   1aaf0:	movw	r1, #0
   1aaf4:	cmp	r1, r0
   1aaf8:	bcc	1ab4c <__assert_fail@plt+0x9bb8>
   1aafc:	b	1ab60 <__assert_fail@plt+0x9bcc>
   1ab00:	ldr	r0, [fp, #-16]
   1ab04:	sub	r0, r0, #1
   1ab08:	mvn	r1, #0
   1ab0c:	cmp	r1, r0
   1ab10:	bcc	1ab4c <__assert_fail@plt+0x9bb8>
   1ab14:	b	1ab60 <__assert_fail@plt+0x9bcc>
   1ab18:	ldr	r0, [fp, #-12]
   1ab1c:	movw	r1, #0
   1ab20:	udiv	r0, r1, r0
   1ab24:	ldr	r1, [fp, #-16]
   1ab28:	cmp	r0, r1
   1ab2c:	bcc	1ab4c <__assert_fail@plt+0x9bb8>
   1ab30:	b	1ab60 <__assert_fail@plt+0x9bcc>
   1ab34:	ldr	r0, [fp, #-16]
   1ab38:	mvn	r1, #0
   1ab3c:	udiv	r0, r1, r0
   1ab40:	ldr	r1, [fp, #-12]
   1ab44:	cmp	r0, r1
   1ab48:	bcs	1ab60 <__assert_fail@plt+0x9bcc>
   1ab4c:	ldr	r0, [fp, #-12]
   1ab50:	ldr	r1, [fp, #-16]
   1ab54:	mul	r0, r0, r1
   1ab58:	str	r0, [fp, #-20]	; 0xffffffec
   1ab5c:	b	1b39c <__assert_fail@plt+0xa408>
   1ab60:	ldr	r0, [fp, #-12]
   1ab64:	ldr	r1, [fp, #-16]
   1ab68:	mul	r0, r0, r1
   1ab6c:	str	r0, [fp, #-20]	; 0xffffffec
   1ab70:	b	1b3b4 <__assert_fail@plt+0xa420>
   1ab74:	b	1ab78 <__assert_fail@plt+0x9be4>
   1ab78:	b	1ad3c <__assert_fail@plt+0x9da8>
   1ab7c:	ldr	r0, [fp, #-16]
   1ab80:	cmp	r0, #0
   1ab84:	bcs	1ac84 <__assert_fail@plt+0x9cf0>
   1ab88:	ldr	r0, [fp, #-12]
   1ab8c:	cmp	r0, #0
   1ab90:	bcs	1ac18 <__assert_fail@plt+0x9c84>
   1ab94:	b	1abb4 <__assert_fail@plt+0x9c20>
   1ab98:	ldr	r0, [pc, #2096]	; 1b3d0 <__assert_fail@plt+0xa43c>
   1ab9c:	ldr	r1, [fp, #-12]
   1aba0:	ldr	r2, [fp, #-16]
   1aba4:	udiv	r0, r0, r2
   1aba8:	cmp	r1, r0
   1abac:	bcc	1ad14 <__assert_fail@plt+0x9d80>
   1abb0:	b	1ad28 <__assert_fail@plt+0x9d94>
   1abb4:	b	1abc8 <__assert_fail@plt+0x9c34>
   1abb8:	ldr	r0, [fp, #-16]
   1abbc:	cmp	r0, #1
   1abc0:	bcc	1abd8 <__assert_fail@plt+0x9c44>
   1abc4:	b	1abe4 <__assert_fail@plt+0x9c50>
   1abc8:	ldr	r0, [fp, #-16]
   1abcc:	movw	r1, #0
   1abd0:	cmp	r1, r0
   1abd4:	bcs	1abe4 <__assert_fail@plt+0x9c50>
   1abd8:	movw	r0, #0
   1abdc:	str	r0, [fp, #-48]	; 0xffffffd0
   1abe0:	b	1abfc <__assert_fail@plt+0x9c68>
   1abe4:	ldr	r0, [pc, #2020]	; 1b3d0 <__assert_fail@plt+0xa43c>
   1abe8:	ldr	r1, [fp, #-16]
   1abec:	movw	r2, #0
   1abf0:	sub	r1, r2, r1
   1abf4:	udiv	r0, r0, r1
   1abf8:	str	r0, [fp, #-48]	; 0xffffffd0
   1abfc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ac00:	ldr	r1, [fp, #-12]
   1ac04:	mvn	r2, #0
   1ac08:	sub	r1, r2, r1
   1ac0c:	cmp	r0, r1
   1ac10:	bls	1ad14 <__assert_fail@plt+0x9d80>
   1ac14:	b	1ad28 <__assert_fail@plt+0x9d94>
   1ac18:	ldr	r0, [fp, #-16]
   1ac1c:	cmn	r0, #1
   1ac20:	bne	1ac68 <__assert_fail@plt+0x9cd4>
   1ac24:	b	1ac40 <__assert_fail@plt+0x9cac>
   1ac28:	ldr	r0, [fp, #-12]
   1ac2c:	add	r0, r0, #-2147483648	; 0x80000000
   1ac30:	movw	r1, #0
   1ac34:	cmp	r1, r0
   1ac38:	bcc	1ad14 <__assert_fail@plt+0x9d80>
   1ac3c:	b	1ad28 <__assert_fail@plt+0x9d94>
   1ac40:	ldr	r0, [fp, #-12]
   1ac44:	movw	r1, #0
   1ac48:	cmp	r1, r0
   1ac4c:	bcs	1ad28 <__assert_fail@plt+0x9d94>
   1ac50:	ldr	r0, [pc, #1912]	; 1b3d0 <__assert_fail@plt+0xa43c>
   1ac54:	ldr	r1, [fp, #-12]
   1ac58:	sub	r1, r1, #1
   1ac5c:	cmp	r0, r1
   1ac60:	bcc	1ad14 <__assert_fail@plt+0x9d80>
   1ac64:	b	1ad28 <__assert_fail@plt+0x9d94>
   1ac68:	ldr	r0, [pc, #1892]	; 1b3d4 <__assert_fail@plt+0xa440>
   1ac6c:	ldr	r1, [fp, #-16]
   1ac70:	udiv	r0, r0, r1
   1ac74:	ldr	r1, [fp, #-12]
   1ac78:	cmp	r0, r1
   1ac7c:	bcc	1ad14 <__assert_fail@plt+0x9d80>
   1ac80:	b	1ad28 <__assert_fail@plt+0x9d94>
   1ac84:	ldr	r0, [fp, #-16]
   1ac88:	cmp	r0, #0
   1ac8c:	bne	1ac94 <__assert_fail@plt+0x9d00>
   1ac90:	b	1ad28 <__assert_fail@plt+0x9d94>
   1ac94:	ldr	r0, [fp, #-12]
   1ac98:	cmp	r0, #0
   1ac9c:	bcs	1acfc <__assert_fail@plt+0x9d68>
   1aca0:	ldr	r0, [fp, #-12]
   1aca4:	cmn	r0, #1
   1aca8:	bne	1ace0 <__assert_fail@plt+0x9d4c>
   1acac:	b	1acc8 <__assert_fail@plt+0x9d34>
   1acb0:	ldr	r0, [fp, #-16]
   1acb4:	add	r0, r0, #-2147483648	; 0x80000000
   1acb8:	movw	r1, #0
   1acbc:	cmp	r1, r0
   1acc0:	bcc	1ad14 <__assert_fail@plt+0x9d80>
   1acc4:	b	1ad28 <__assert_fail@plt+0x9d94>
   1acc8:	ldr	r0, [pc, #1792]	; 1b3d0 <__assert_fail@plt+0xa43c>
   1accc:	ldr	r1, [fp, #-16]
   1acd0:	sub	r1, r1, #1
   1acd4:	cmp	r0, r1
   1acd8:	bcc	1ad14 <__assert_fail@plt+0x9d80>
   1acdc:	b	1ad28 <__assert_fail@plt+0x9d94>
   1ace0:	ldr	r0, [pc, #1772]	; 1b3d4 <__assert_fail@plt+0xa440>
   1ace4:	ldr	r1, [fp, #-12]
   1ace8:	udiv	r0, r0, r1
   1acec:	ldr	r1, [fp, #-16]
   1acf0:	cmp	r0, r1
   1acf4:	bcc	1ad14 <__assert_fail@plt+0x9d80>
   1acf8:	b	1ad28 <__assert_fail@plt+0x9d94>
   1acfc:	ldr	r0, [pc, #1740]	; 1b3d0 <__assert_fail@plt+0xa43c>
   1ad00:	ldr	r1, [fp, #-16]
   1ad04:	udiv	r0, r0, r1
   1ad08:	ldr	r1, [fp, #-12]
   1ad0c:	cmp	r0, r1
   1ad10:	bcs	1ad28 <__assert_fail@plt+0x9d94>
   1ad14:	ldr	r0, [fp, #-12]
   1ad18:	ldr	r1, [fp, #-16]
   1ad1c:	mul	r0, r0, r1
   1ad20:	str	r0, [fp, #-20]	; 0xffffffec
   1ad24:	b	1b39c <__assert_fail@plt+0xa408>
   1ad28:	ldr	r0, [fp, #-12]
   1ad2c:	ldr	r1, [fp, #-16]
   1ad30:	mul	r0, r0, r1
   1ad34:	str	r0, [fp, #-20]	; 0xffffffec
   1ad38:	b	1b3b4 <__assert_fail@plt+0xa420>
   1ad3c:	ldr	r0, [fp, #-16]
   1ad40:	cmp	r0, #0
   1ad44:	bcs	1ae50 <__assert_fail@plt+0x9ebc>
   1ad48:	ldr	r0, [fp, #-12]
   1ad4c:	cmp	r0, #0
   1ad50:	bcs	1add8 <__assert_fail@plt+0x9e44>
   1ad54:	b	1ad74 <__assert_fail@plt+0x9de0>
   1ad58:	ldr	r0, [fp, #-12]
   1ad5c:	ldr	r1, [fp, #-16]
   1ad60:	mvn	r2, #0
   1ad64:	udiv	r1, r2, r1
   1ad68:	cmp	r0, r1
   1ad6c:	bcc	1aeec <__assert_fail@plt+0x9f58>
   1ad70:	b	1af00 <__assert_fail@plt+0x9f6c>
   1ad74:	b	1ad88 <__assert_fail@plt+0x9df4>
   1ad78:	ldr	r0, [fp, #-16]
   1ad7c:	cmp	r0, #1
   1ad80:	bcc	1ad98 <__assert_fail@plt+0x9e04>
   1ad84:	b	1ada4 <__assert_fail@plt+0x9e10>
   1ad88:	ldr	r0, [fp, #-16]
   1ad8c:	movw	r1, #0
   1ad90:	cmp	r1, r0
   1ad94:	bcs	1ada4 <__assert_fail@plt+0x9e10>
   1ad98:	movw	r0, #1
   1ad9c:	str	r0, [fp, #-52]	; 0xffffffcc
   1ada0:	b	1adbc <__assert_fail@plt+0x9e28>
   1ada4:	ldr	r0, [fp, #-16]
   1ada8:	movw	r1, #0
   1adac:	sub	r0, r1, r0
   1adb0:	mvn	r1, #0
   1adb4:	udiv	r0, r1, r0
   1adb8:	str	r0, [fp, #-52]	; 0xffffffcc
   1adbc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1adc0:	ldr	r1, [fp, #-12]
   1adc4:	mvn	r2, #0
   1adc8:	sub	r1, r2, r1
   1adcc:	cmp	r0, r1
   1add0:	bls	1aeec <__assert_fail@plt+0x9f58>
   1add4:	b	1af00 <__assert_fail@plt+0x9f6c>
   1add8:	b	1ade0 <__assert_fail@plt+0x9e4c>
   1addc:	b	1ade4 <__assert_fail@plt+0x9e50>
   1ade0:	b	1ae34 <__assert_fail@plt+0x9ea0>
   1ade4:	ldr	r0, [fp, #-16]
   1ade8:	cmn	r0, #1
   1adec:	bne	1ae34 <__assert_fail@plt+0x9ea0>
   1adf0:	b	1ae0c <__assert_fail@plt+0x9e78>
   1adf4:	ldr	r0, [fp, #-12]
   1adf8:	add	r0, r0, #0
   1adfc:	movw	r1, #0
   1ae00:	cmp	r1, r0
   1ae04:	bcc	1aeec <__assert_fail@plt+0x9f58>
   1ae08:	b	1af00 <__assert_fail@plt+0x9f6c>
   1ae0c:	ldr	r0, [fp, #-12]
   1ae10:	movw	r1, #0
   1ae14:	cmp	r1, r0
   1ae18:	bcs	1af00 <__assert_fail@plt+0x9f6c>
   1ae1c:	ldr	r0, [fp, #-12]
   1ae20:	sub	r0, r0, #1
   1ae24:	mvn	r1, #0
   1ae28:	cmp	r1, r0
   1ae2c:	bcc	1aeec <__assert_fail@plt+0x9f58>
   1ae30:	b	1af00 <__assert_fail@plt+0x9f6c>
   1ae34:	ldr	r0, [fp, #-16]
   1ae38:	movw	r1, #0
   1ae3c:	udiv	r0, r1, r0
   1ae40:	ldr	r1, [fp, #-12]
   1ae44:	cmp	r0, r1
   1ae48:	bcc	1aeec <__assert_fail@plt+0x9f58>
   1ae4c:	b	1af00 <__assert_fail@plt+0x9f6c>
   1ae50:	ldr	r0, [fp, #-16]
   1ae54:	cmp	r0, #0
   1ae58:	bne	1ae60 <__assert_fail@plt+0x9ecc>
   1ae5c:	b	1af00 <__assert_fail@plt+0x9f6c>
   1ae60:	ldr	r0, [fp, #-12]
   1ae64:	cmp	r0, #0
   1ae68:	bcs	1aed4 <__assert_fail@plt+0x9f40>
   1ae6c:	b	1ae74 <__assert_fail@plt+0x9ee0>
   1ae70:	b	1ae78 <__assert_fail@plt+0x9ee4>
   1ae74:	b	1aeb8 <__assert_fail@plt+0x9f24>
   1ae78:	ldr	r0, [fp, #-12]
   1ae7c:	cmn	r0, #1
   1ae80:	bne	1aeb8 <__assert_fail@plt+0x9f24>
   1ae84:	b	1aea0 <__assert_fail@plt+0x9f0c>
   1ae88:	ldr	r0, [fp, #-16]
   1ae8c:	add	r0, r0, #0
   1ae90:	movw	r1, #0
   1ae94:	cmp	r1, r0
   1ae98:	bcc	1aeec <__assert_fail@plt+0x9f58>
   1ae9c:	b	1af00 <__assert_fail@plt+0x9f6c>
   1aea0:	ldr	r0, [fp, #-16]
   1aea4:	sub	r0, r0, #1
   1aea8:	mvn	r1, #0
   1aeac:	cmp	r1, r0
   1aeb0:	bcc	1aeec <__assert_fail@plt+0x9f58>
   1aeb4:	b	1af00 <__assert_fail@plt+0x9f6c>
   1aeb8:	ldr	r0, [fp, #-12]
   1aebc:	movw	r1, #0
   1aec0:	udiv	r0, r1, r0
   1aec4:	ldr	r1, [fp, #-16]
   1aec8:	cmp	r0, r1
   1aecc:	bcc	1aeec <__assert_fail@plt+0x9f58>
   1aed0:	b	1af00 <__assert_fail@plt+0x9f6c>
   1aed4:	ldr	r0, [fp, #-16]
   1aed8:	mvn	r1, #0
   1aedc:	udiv	r0, r1, r0
   1aee0:	ldr	r1, [fp, #-12]
   1aee4:	cmp	r0, r1
   1aee8:	bcs	1af00 <__assert_fail@plt+0x9f6c>
   1aeec:	ldr	r0, [fp, #-12]
   1aef0:	ldr	r1, [fp, #-16]
   1aef4:	mul	r0, r0, r1
   1aef8:	str	r0, [fp, #-20]	; 0xffffffec
   1aefc:	b	1b39c <__assert_fail@plt+0xa408>
   1af00:	ldr	r0, [fp, #-12]
   1af04:	ldr	r1, [fp, #-16]
   1af08:	mul	r0, r0, r1
   1af0c:	str	r0, [fp, #-20]	; 0xffffffec
   1af10:	b	1b3b4 <__assert_fail@plt+0xa420>
   1af14:	b	1b168 <__assert_fail@plt+0xa1d4>
   1af18:	ldr	r0, [fp, #-16]
   1af1c:	cmp	r0, #0
   1af20:	bcs	1b080 <__assert_fail@plt+0xa0ec>
   1af24:	ldr	r0, [fp, #-12]
   1af28:	cmp	r0, #0
   1af2c:	bcs	1affc <__assert_fail@plt+0xa068>
   1af30:	b	1af34 <__assert_fail@plt+0x9fa0>
   1af34:	ldr	r0, [fp, #-12]
   1af38:	ldr	r2, [fp, #-16]
   1af3c:	mvn	r1, #0
   1af40:	mvn	r3, #-2147483648	; 0x80000000
   1af44:	mov	ip, #0
   1af48:	str	r0, [fp, #-56]	; 0xffffffc8
   1af4c:	mov	r0, r1
   1af50:	mov	r1, r3
   1af54:	mov	r3, ip
   1af58:	bl	1bce8 <__assert_fail@plt+0xad54>
   1af5c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1af60:	subs	r0, r2, r0
   1af64:	rscs	r1, r1, #0
   1af68:	str	r0, [fp, #-60]	; 0xffffffc4
   1af6c:	str	r1, [fp, #-64]	; 0xffffffc0
   1af70:	blt	1b140 <__assert_fail@plt+0xa1ac>
   1af74:	b	1b154 <__assert_fail@plt+0xa1c0>
   1af78:	b	1af8c <__assert_fail@plt+0x9ff8>
   1af7c:	ldr	r0, [fp, #-16]
   1af80:	cmp	r0, #1
   1af84:	bcc	1af9c <__assert_fail@plt+0xa008>
   1af88:	b	1afb0 <__assert_fail@plt+0xa01c>
   1af8c:	ldr	r0, [fp, #-16]
   1af90:	movw	r1, #0
   1af94:	cmp	r1, r0
   1af98:	bcs	1afb0 <__assert_fail@plt+0xa01c>
   1af9c:	mov	r0, #0
   1afa0:	mvn	r1, #0
   1afa4:	str	r1, [fp, #-68]	; 0xffffffbc
   1afa8:	str	r0, [fp, #-72]	; 0xffffffb8
   1afac:	b	1afd4 <__assert_fail@plt+0xa040>
   1afb0:	ldr	r0, [fp, #-16]
   1afb4:	rsb	r2, r0, #0
   1afb8:	mvn	r0, #0
   1afbc:	mvn	r1, #-2147483648	; 0x80000000
   1afc0:	mov	r3, #0
   1afc4:	bl	1bce8 <__assert_fail@plt+0xad54>
   1afc8:	str	r0, [fp, #-68]	; 0xffffffbc
   1afcc:	str	r1, [fp, #-72]	; 0xffffffb8
   1afd0:	b	1afd4 <__assert_fail@plt+0xa040>
   1afd4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1afd8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1afdc:	ldr	r2, [fp, #-12]
   1afe0:	mvn	r2, r2
   1afe4:	subs	r1, r2, r1
   1afe8:	rscs	r0, r0, #0
   1afec:	str	r1, [fp, #-76]	; 0xffffffb4
   1aff0:	str	r0, [fp, #-80]	; 0xffffffb0
   1aff4:	bge	1b140 <__assert_fail@plt+0xa1ac>
   1aff8:	b	1b154 <__assert_fail@plt+0xa1c0>
   1affc:	ldr	r0, [fp, #-16]
   1b000:	cmn	r0, #1
   1b004:	bne	1b04c <__assert_fail@plt+0xa0b8>
   1b008:	b	1b02c <__assert_fail@plt+0xa098>
   1b00c:	ldr	r0, [fp, #-12]
   1b010:	rsbs	r0, r0, #0
   1b014:	mov	r1, #0
   1b018:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1b01c:	str	r0, [fp, #-84]	; 0xffffffac
   1b020:	str	r1, [sp, #88]	; 0x58
   1b024:	blt	1b140 <__assert_fail@plt+0xa1ac>
   1b028:	b	1b154 <__assert_fail@plt+0xa1c0>
   1b02c:	ldr	r0, [fp, #-12]
   1b030:	movw	r1, #0
   1b034:	cmp	r1, r0
   1b038:	bcs	1b154 <__assert_fail@plt+0xa1c0>
   1b03c:	mov	r0, #0
   1b040:	cmp	r0, #0
   1b044:	bne	1b140 <__assert_fail@plt+0xa1ac>
   1b048:	b	1b154 <__assert_fail@plt+0xa1c0>
   1b04c:	ldr	r2, [fp, #-16]
   1b050:	mov	r1, #-2147483648	; 0x80000000
   1b054:	mov	r0, #0
   1b058:	str	r0, [sp, #84]	; 0x54
   1b05c:	ldr	r3, [sp, #84]	; 0x54
   1b060:	bl	1bc14 <__assert_fail@plt+0xac80>
   1b064:	ldr	r2, [fp, #-12]
   1b068:	subs	r0, r0, r2
   1b06c:	sbcs	r1, r1, #0
   1b070:	str	r0, [sp, #80]	; 0x50
   1b074:	str	r1, [sp, #76]	; 0x4c
   1b078:	blt	1b140 <__assert_fail@plt+0xa1ac>
   1b07c:	b	1b154 <__assert_fail@plt+0xa1c0>
   1b080:	ldr	r0, [fp, #-16]
   1b084:	cmp	r0, #0
   1b088:	bne	1b090 <__assert_fail@plt+0xa0fc>
   1b08c:	b	1b154 <__assert_fail@plt+0xa1c0>
   1b090:	ldr	r0, [fp, #-12]
   1b094:	cmp	r0, #0
   1b098:	bcs	1b110 <__assert_fail@plt+0xa17c>
   1b09c:	ldr	r0, [fp, #-12]
   1b0a0:	cmn	r0, #1
   1b0a4:	bne	1b0dc <__assert_fail@plt+0xa148>
   1b0a8:	b	1b0cc <__assert_fail@plt+0xa138>
   1b0ac:	ldr	r0, [fp, #-16]
   1b0b0:	rsbs	r0, r0, #0
   1b0b4:	mov	r1, #0
   1b0b8:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1b0bc:	str	r0, [sp, #72]	; 0x48
   1b0c0:	str	r1, [sp, #68]	; 0x44
   1b0c4:	blt	1b140 <__assert_fail@plt+0xa1ac>
   1b0c8:	b	1b154 <__assert_fail@plt+0xa1c0>
   1b0cc:	mov	r0, #0
   1b0d0:	cmp	r0, #0
   1b0d4:	bne	1b140 <__assert_fail@plt+0xa1ac>
   1b0d8:	b	1b154 <__assert_fail@plt+0xa1c0>
   1b0dc:	ldr	r2, [fp, #-12]
   1b0e0:	mov	r1, #-2147483648	; 0x80000000
   1b0e4:	mov	r0, #0
   1b0e8:	str	r0, [sp, #64]	; 0x40
   1b0ec:	ldr	r3, [sp, #64]	; 0x40
   1b0f0:	bl	1bc14 <__assert_fail@plt+0xac80>
   1b0f4:	ldr	r2, [fp, #-16]
   1b0f8:	subs	r0, r0, r2
   1b0fc:	sbcs	r1, r1, #0
   1b100:	str	r0, [sp, #60]	; 0x3c
   1b104:	str	r1, [sp, #56]	; 0x38
   1b108:	blt	1b140 <__assert_fail@plt+0xa1ac>
   1b10c:	b	1b154 <__assert_fail@plt+0xa1c0>
   1b110:	ldr	r2, [fp, #-16]
   1b114:	mvn	r0, #0
   1b118:	mvn	r1, #-2147483648	; 0x80000000
   1b11c:	mov	r3, #0
   1b120:	bl	1bce8 <__assert_fail@plt+0xad54>
   1b124:	ldr	r2, [fp, #-12]
   1b128:	subs	r0, r0, r2
   1b12c:	sbcs	r1, r1, #0
   1b130:	str	r0, [sp, #52]	; 0x34
   1b134:	str	r1, [sp, #48]	; 0x30
   1b138:	bge	1b154 <__assert_fail@plt+0xa1c0>
   1b13c:	b	1b140 <__assert_fail@plt+0xa1ac>
   1b140:	ldr	r0, [fp, #-12]
   1b144:	ldr	r1, [fp, #-16]
   1b148:	mul	r0, r0, r1
   1b14c:	str	r0, [fp, #-20]	; 0xffffffec
   1b150:	b	1b39c <__assert_fail@plt+0xa408>
   1b154:	ldr	r0, [fp, #-12]
   1b158:	ldr	r1, [fp, #-16]
   1b15c:	mul	r0, r0, r1
   1b160:	str	r0, [fp, #-20]	; 0xffffffec
   1b164:	b	1b3b4 <__assert_fail@plt+0xa420>
   1b168:	ldr	r0, [fp, #-16]
   1b16c:	cmp	r0, #0
   1b170:	bcs	1b2bc <__assert_fail@plt+0xa328>
   1b174:	ldr	r0, [fp, #-12]
   1b178:	cmp	r0, #0
   1b17c:	bcs	1b244 <__assert_fail@plt+0xa2b0>
   1b180:	b	1b1bc <__assert_fail@plt+0xa228>
   1b184:	ldr	r0, [fp, #-12]
   1b188:	ldr	r2, [fp, #-16]
   1b18c:	mvn	r1, #0
   1b190:	mov	r3, #0
   1b194:	str	r0, [sp, #44]	; 0x2c
   1b198:	mov	r0, r1
   1b19c:	bl	1bce8 <__assert_fail@plt+0xad54>
   1b1a0:	ldr	r2, [sp, #44]	; 0x2c
   1b1a4:	subs	r0, r2, r0
   1b1a8:	rscs	r1, r1, #0
   1b1ac:	str	r0, [sp, #40]	; 0x28
   1b1b0:	str	r1, [sp, #36]	; 0x24
   1b1b4:	bcc	1b374 <__assert_fail@plt+0xa3e0>
   1b1b8:	b	1b388 <__assert_fail@plt+0xa3f4>
   1b1bc:	b	1b1d0 <__assert_fail@plt+0xa23c>
   1b1c0:	ldr	r0, [fp, #-16]
   1b1c4:	cmp	r0, #1
   1b1c8:	bcc	1b1e0 <__assert_fail@plt+0xa24c>
   1b1cc:	b	1b1f4 <__assert_fail@plt+0xa260>
   1b1d0:	ldr	r0, [fp, #-16]
   1b1d4:	movw	r1, #0
   1b1d8:	cmp	r1, r0
   1b1dc:	bcs	1b1f4 <__assert_fail@plt+0xa260>
   1b1e0:	mov	r0, #1
   1b1e4:	mvn	r1, #0
   1b1e8:	str	r1, [sp, #32]
   1b1ec:	str	r0, [sp, #28]
   1b1f0:	b	1b21c <__assert_fail@plt+0xa288>
   1b1f4:	ldr	r0, [fp, #-16]
   1b1f8:	rsb	r2, r0, #0
   1b1fc:	mvn	r0, #0
   1b200:	mov	r3, #0
   1b204:	str	r0, [sp, #24]
   1b208:	ldr	r1, [sp, #24]
   1b20c:	bl	1bce8 <__assert_fail@plt+0xad54>
   1b210:	str	r0, [sp, #32]
   1b214:	str	r1, [sp, #28]
   1b218:	b	1b21c <__assert_fail@plt+0xa288>
   1b21c:	ldr	r0, [sp, #28]
   1b220:	ldr	r1, [sp, #32]
   1b224:	ldr	r2, [fp, #-12]
   1b228:	mvn	r2, r2
   1b22c:	subs	r1, r2, r1
   1b230:	rscs	r0, r0, #0
   1b234:	str	r1, [sp, #20]
   1b238:	str	r0, [sp, #16]
   1b23c:	bcs	1b374 <__assert_fail@plt+0xa3e0>
   1b240:	b	1b388 <__assert_fail@plt+0xa3f4>
   1b244:	b	1b24c <__assert_fail@plt+0xa2b8>
   1b248:	b	1b250 <__assert_fail@plt+0xa2bc>
   1b24c:	b	1b2a0 <__assert_fail@plt+0xa30c>
   1b250:	ldr	r0, [fp, #-16]
   1b254:	cmn	r0, #1
   1b258:	bne	1b2a0 <__assert_fail@plt+0xa30c>
   1b25c:	b	1b278 <__assert_fail@plt+0xa2e4>
   1b260:	ldr	r0, [fp, #-12]
   1b264:	add	r0, r0, #0
   1b268:	movw	r1, #0
   1b26c:	cmp	r1, r0
   1b270:	bcc	1b374 <__assert_fail@plt+0xa3e0>
   1b274:	b	1b388 <__assert_fail@plt+0xa3f4>
   1b278:	ldr	r0, [fp, #-12]
   1b27c:	movw	r1, #0
   1b280:	cmp	r1, r0
   1b284:	bcs	1b388 <__assert_fail@plt+0xa3f4>
   1b288:	ldr	r0, [fp, #-12]
   1b28c:	sub	r0, r0, #1
   1b290:	mvn	r1, #0
   1b294:	cmp	r1, r0
   1b298:	bcc	1b374 <__assert_fail@plt+0xa3e0>
   1b29c:	b	1b388 <__assert_fail@plt+0xa3f4>
   1b2a0:	ldr	r0, [fp, #-16]
   1b2a4:	movw	r1, #0
   1b2a8:	udiv	r0, r1, r0
   1b2ac:	ldr	r1, [fp, #-12]
   1b2b0:	cmp	r0, r1
   1b2b4:	bcc	1b374 <__assert_fail@plt+0xa3e0>
   1b2b8:	b	1b388 <__assert_fail@plt+0xa3f4>
   1b2bc:	ldr	r0, [fp, #-16]
   1b2c0:	cmp	r0, #0
   1b2c4:	bne	1b2cc <__assert_fail@plt+0xa338>
   1b2c8:	b	1b388 <__assert_fail@plt+0xa3f4>
   1b2cc:	ldr	r0, [fp, #-12]
   1b2d0:	cmp	r0, #0
   1b2d4:	bcs	1b340 <__assert_fail@plt+0xa3ac>
   1b2d8:	b	1b2e0 <__assert_fail@plt+0xa34c>
   1b2dc:	b	1b2e4 <__assert_fail@plt+0xa350>
   1b2e0:	b	1b324 <__assert_fail@plt+0xa390>
   1b2e4:	ldr	r0, [fp, #-12]
   1b2e8:	cmn	r0, #1
   1b2ec:	bne	1b324 <__assert_fail@plt+0xa390>
   1b2f0:	b	1b30c <__assert_fail@plt+0xa378>
   1b2f4:	ldr	r0, [fp, #-16]
   1b2f8:	add	r0, r0, #0
   1b2fc:	movw	r1, #0
   1b300:	cmp	r1, r0
   1b304:	bcc	1b374 <__assert_fail@plt+0xa3e0>
   1b308:	b	1b388 <__assert_fail@plt+0xa3f4>
   1b30c:	ldr	r0, [fp, #-16]
   1b310:	sub	r0, r0, #1
   1b314:	mvn	r1, #0
   1b318:	cmp	r1, r0
   1b31c:	bcc	1b374 <__assert_fail@plt+0xa3e0>
   1b320:	b	1b388 <__assert_fail@plt+0xa3f4>
   1b324:	ldr	r0, [fp, #-12]
   1b328:	movw	r1, #0
   1b32c:	udiv	r0, r1, r0
   1b330:	ldr	r1, [fp, #-16]
   1b334:	cmp	r0, r1
   1b338:	bcc	1b374 <__assert_fail@plt+0xa3e0>
   1b33c:	b	1b388 <__assert_fail@plt+0xa3f4>
   1b340:	ldr	r2, [fp, #-16]
   1b344:	mvn	r0, #0
   1b348:	mov	r3, #0
   1b34c:	str	r0, [sp, #12]
   1b350:	ldr	r1, [sp, #12]
   1b354:	bl	1bce8 <__assert_fail@plt+0xad54>
   1b358:	ldr	r2, [fp, #-12]
   1b35c:	subs	r0, r0, r2
   1b360:	sbcs	r1, r1, #0
   1b364:	str	r0, [sp, #8]
   1b368:	str	r1, [sp, #4]
   1b36c:	bcs	1b388 <__assert_fail@plt+0xa3f4>
   1b370:	b	1b374 <__assert_fail@plt+0xa3e0>
   1b374:	ldr	r0, [fp, #-12]
   1b378:	ldr	r1, [fp, #-16]
   1b37c:	mul	r0, r0, r1
   1b380:	str	r0, [fp, #-20]	; 0xffffffec
   1b384:	b	1b39c <__assert_fail@plt+0xa408>
   1b388:	ldr	r0, [fp, #-12]
   1b38c:	ldr	r1, [fp, #-16]
   1b390:	mul	r0, r0, r1
   1b394:	str	r0, [fp, #-20]	; 0xffffffec
   1b398:	b	1b3b4 <__assert_fail@plt+0xa420>
   1b39c:	bl	10ef8 <__errno_location@plt>
   1b3a0:	movw	lr, #12
   1b3a4:	str	lr, [r0]
   1b3a8:	movw	r0, #0
   1b3ac:	str	r0, [fp, #-4]
   1b3b0:	b	1b3c4 <__assert_fail@plt+0xa430>
   1b3b4:	ldr	r0, [fp, #-8]
   1b3b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b3bc:	bl	19858 <__assert_fail@plt+0x88c4>
   1b3c0:	str	r0, [fp, #-4]
   1b3c4:	ldr	r0, [fp, #-4]
   1b3c8:	mov	sp, fp
   1b3cc:	pop	{fp, pc}
   1b3d0:	svcvc	0x00ffffff
   1b3d4:	andhi	r0, r0, r0
   1b3d8:			; <UNDEFINED> instruction: 0xffff8000
   1b3dc:	sub	sp, sp, #12
   1b3e0:	str	r0, [sp, #4]
   1b3e4:	ldr	r0, [sp, #4]
   1b3e8:	sub	r1, r0, #48	; 0x30
   1b3ec:	cmp	r1, #10
   1b3f0:	str	r0, [sp]
   1b3f4:	bcc	1b424 <__assert_fail@plt+0xa490>
   1b3f8:	b	1b3fc <__assert_fail@plt+0xa468>
   1b3fc:	ldr	r0, [sp]
   1b400:	sub	r1, r0, #65	; 0x41
   1b404:	cmp	r1, #26
   1b408:	bcc	1b424 <__assert_fail@plt+0xa490>
   1b40c:	b	1b410 <__assert_fail@plt+0xa47c>
   1b410:	ldr	r0, [sp]
   1b414:	sub	r1, r0, #97	; 0x61
   1b418:	cmp	r1, #25
   1b41c:	bhi	1b434 <__assert_fail@plt+0xa4a0>
   1b420:	b	1b424 <__assert_fail@plt+0xa490>
   1b424:	movw	r0, #1
   1b428:	and	r0, r0, #1
   1b42c:	strb	r0, [sp, #11]
   1b430:	b	1b440 <__assert_fail@plt+0xa4ac>
   1b434:	movw	r0, #0
   1b438:	and	r0, r0, #1
   1b43c:	strb	r0, [sp, #11]
   1b440:	ldrb	r0, [sp, #11]
   1b444:	and	r0, r0, #1
   1b448:	add	sp, sp, #12
   1b44c:	bx	lr
   1b450:	sub	sp, sp, #12
   1b454:	str	r0, [sp, #4]
   1b458:	ldr	r0, [sp, #4]
   1b45c:	sub	r1, r0, #65	; 0x41
   1b460:	cmp	r1, #26
   1b464:	str	r0, [sp]
   1b468:	bcc	1b484 <__assert_fail@plt+0xa4f0>
   1b46c:	b	1b470 <__assert_fail@plt+0xa4dc>
   1b470:	ldr	r0, [sp]
   1b474:	sub	r1, r0, #97	; 0x61
   1b478:	cmp	r1, #25
   1b47c:	bhi	1b494 <__assert_fail@plt+0xa500>
   1b480:	b	1b484 <__assert_fail@plt+0xa4f0>
   1b484:	movw	r0, #1
   1b488:	and	r0, r0, #1
   1b48c:	strb	r0, [sp, #11]
   1b490:	b	1b4a0 <__assert_fail@plt+0xa50c>
   1b494:	movw	r0, #0
   1b498:	and	r0, r0, #1
   1b49c:	strb	r0, [sp, #11]
   1b4a0:	ldrb	r0, [sp, #11]
   1b4a4:	and	r0, r0, #1
   1b4a8:	add	sp, sp, #12
   1b4ac:	bx	lr
   1b4b0:	sub	sp, sp, #8
   1b4b4:	str	r0, [sp]
   1b4b8:	ldr	r0, [sp]
   1b4bc:	cmp	r0, #127	; 0x7f
   1b4c0:	bhi	1b4d8 <__assert_fail@plt+0xa544>
   1b4c4:	b	1b4c8 <__assert_fail@plt+0xa534>
   1b4c8:	movw	r0, #1
   1b4cc:	and	r0, r0, #1
   1b4d0:	strb	r0, [sp, #7]
   1b4d4:	b	1b4e4 <__assert_fail@plt+0xa550>
   1b4d8:	movw	r0, #0
   1b4dc:	and	r0, r0, #1
   1b4e0:	strb	r0, [sp, #7]
   1b4e4:	ldrb	r0, [sp, #7]
   1b4e8:	and	r0, r0, #1
   1b4ec:	add	sp, sp, #8
   1b4f0:	bx	lr
   1b4f4:	sub	sp, sp, #8
   1b4f8:	str	r0, [sp, #4]
   1b4fc:	ldr	r0, [sp, #4]
   1b500:	cmp	r0, #32
   1b504:	movw	r0, #1
   1b508:	str	r0, [sp]
   1b50c:	beq	1b524 <__assert_fail@plt+0xa590>
   1b510:	ldr	r0, [sp, #4]
   1b514:	cmp	r0, #9
   1b518:	movw	r0, #0
   1b51c:	moveq	r0, #1
   1b520:	str	r0, [sp]
   1b524:	ldr	r0, [sp]
   1b528:	and	r0, r0, #1
   1b52c:	add	sp, sp, #8
   1b530:	bx	lr
   1b534:	sub	sp, sp, #12
   1b538:	str	r0, [sp, #4]
   1b53c:	ldr	r0, [sp, #4]
   1b540:	cmp	r0, #32
   1b544:	str	r0, [sp]
   1b548:	bcc	1b560 <__assert_fail@plt+0xa5cc>
   1b54c:	b	1b550 <__assert_fail@plt+0xa5bc>
   1b550:	ldr	r0, [sp]
   1b554:	cmp	r0, #127	; 0x7f
   1b558:	bne	1b570 <__assert_fail@plt+0xa5dc>
   1b55c:	b	1b560 <__assert_fail@plt+0xa5cc>
   1b560:	movw	r0, #1
   1b564:	and	r0, r0, #1
   1b568:	strb	r0, [sp, #11]
   1b56c:	b	1b57c <__assert_fail@plt+0xa5e8>
   1b570:	movw	r0, #0
   1b574:	and	r0, r0, #1
   1b578:	strb	r0, [sp, #11]
   1b57c:	ldrb	r0, [sp, #11]
   1b580:	and	r0, r0, #1
   1b584:	add	sp, sp, #12
   1b588:	bx	lr
   1b58c:	sub	sp, sp, #8
   1b590:	str	r0, [sp]
   1b594:	ldr	r0, [sp]
   1b598:	sub	r0, r0, #48	; 0x30
   1b59c:	cmp	r0, #9
   1b5a0:	bhi	1b5b8 <__assert_fail@plt+0xa624>
   1b5a4:	b	1b5a8 <__assert_fail@plt+0xa614>
   1b5a8:	movw	r0, #1
   1b5ac:	and	r0, r0, #1
   1b5b0:	strb	r0, [sp, #7]
   1b5b4:	b	1b5c4 <__assert_fail@plt+0xa630>
   1b5b8:	movw	r0, #0
   1b5bc:	and	r0, r0, #1
   1b5c0:	strb	r0, [sp, #7]
   1b5c4:	ldrb	r0, [sp, #7]
   1b5c8:	and	r0, r0, #1
   1b5cc:	add	sp, sp, #8
   1b5d0:	bx	lr
   1b5d4:	sub	sp, sp, #8
   1b5d8:	str	r0, [sp]
   1b5dc:	ldr	r0, [sp]
   1b5e0:	sub	r0, r0, #33	; 0x21
   1b5e4:	cmp	r0, #93	; 0x5d
   1b5e8:	bhi	1b600 <__assert_fail@plt+0xa66c>
   1b5ec:	b	1b5f0 <__assert_fail@plt+0xa65c>
   1b5f0:	movw	r0, #1
   1b5f4:	and	r0, r0, #1
   1b5f8:	strb	r0, [sp, #7]
   1b5fc:	b	1b60c <__assert_fail@plt+0xa678>
   1b600:	movw	r0, #0
   1b604:	and	r0, r0, #1
   1b608:	strb	r0, [sp, #7]
   1b60c:	ldrb	r0, [sp, #7]
   1b610:	and	r0, r0, #1
   1b614:	add	sp, sp, #8
   1b618:	bx	lr
   1b61c:	sub	sp, sp, #8
   1b620:	str	r0, [sp]
   1b624:	ldr	r0, [sp]
   1b628:	sub	r0, r0, #97	; 0x61
   1b62c:	cmp	r0, #25
   1b630:	bhi	1b648 <__assert_fail@plt+0xa6b4>
   1b634:	b	1b638 <__assert_fail@plt+0xa6a4>
   1b638:	movw	r0, #1
   1b63c:	and	r0, r0, #1
   1b640:	strb	r0, [sp, #7]
   1b644:	b	1b654 <__assert_fail@plt+0xa6c0>
   1b648:	movw	r0, #0
   1b64c:	and	r0, r0, #1
   1b650:	strb	r0, [sp, #7]
   1b654:	ldrb	r0, [sp, #7]
   1b658:	and	r0, r0, #1
   1b65c:	add	sp, sp, #8
   1b660:	bx	lr
   1b664:	sub	sp, sp, #8
   1b668:	str	r0, [sp]
   1b66c:	ldr	r0, [sp]
   1b670:	sub	r0, r0, #32
   1b674:	cmp	r0, #94	; 0x5e
   1b678:	bhi	1b690 <__assert_fail@plt+0xa6fc>
   1b67c:	b	1b680 <__assert_fail@plt+0xa6ec>
   1b680:	movw	r0, #1
   1b684:	and	r0, r0, #1
   1b688:	strb	r0, [sp, #7]
   1b68c:	b	1b69c <__assert_fail@plt+0xa708>
   1b690:	movw	r0, #0
   1b694:	and	r0, r0, #1
   1b698:	strb	r0, [sp, #7]
   1b69c:	ldrb	r0, [sp, #7]
   1b6a0:	and	r0, r0, #1
   1b6a4:	add	sp, sp, #8
   1b6a8:	bx	lr
   1b6ac:	sub	sp, sp, #12
   1b6b0:	str	r0, [sp, #4]
   1b6b4:	ldr	r0, [sp, #4]
   1b6b8:	sub	r0, r0, #33	; 0x21
   1b6bc:	cmp	r0, #93	; 0x5d
   1b6c0:	str	r0, [sp]
   1b6c4:	bhi	1b860 <__assert_fail@plt+0xa8cc>
   1b6c8:	add	r0, pc, #8
   1b6cc:	ldr	r1, [sp]
   1b6d0:	ldr	r0, [r0, r1, lsl #2]
   1b6d4:	mov	pc, r0
   1b6d8:	andeq	fp, r1, r0, asr r8
   1b6dc:	andeq	fp, r1, r0, asr r8
   1b6e0:	andeq	fp, r1, r0, asr r8
   1b6e4:	andeq	fp, r1, r0, asr r8
   1b6e8:	andeq	fp, r1, r0, asr r8
   1b6ec:	andeq	fp, r1, r0, asr r8
   1b6f0:	andeq	fp, r1, r0, asr r8
   1b6f4:	andeq	fp, r1, r0, asr r8
   1b6f8:	andeq	fp, r1, r0, asr r8
   1b6fc:	andeq	fp, r1, r0, asr r8
   1b700:	andeq	fp, r1, r0, asr r8
   1b704:	andeq	fp, r1, r0, asr r8
   1b708:	andeq	fp, r1, r0, asr r8
   1b70c:	andeq	fp, r1, r0, asr r8
   1b710:	andeq	fp, r1, r0, asr r8
   1b714:	andeq	fp, r1, r0, ror #16
   1b718:	andeq	fp, r1, r0, ror #16
   1b71c:	andeq	fp, r1, r0, ror #16
   1b720:	andeq	fp, r1, r0, ror #16
   1b724:	andeq	fp, r1, r0, ror #16
   1b728:	andeq	fp, r1, r0, ror #16
   1b72c:	andeq	fp, r1, r0, ror #16
   1b730:	andeq	fp, r1, r0, ror #16
   1b734:	andeq	fp, r1, r0, ror #16
   1b738:	andeq	fp, r1, r0, ror #16
   1b73c:	andeq	fp, r1, r0, asr r8
   1b740:	andeq	fp, r1, r0, asr r8
   1b744:	andeq	fp, r1, r0, asr r8
   1b748:	andeq	fp, r1, r0, asr r8
   1b74c:	andeq	fp, r1, r0, asr r8
   1b750:	andeq	fp, r1, r0, asr r8
   1b754:	andeq	fp, r1, r0, asr r8
   1b758:	andeq	fp, r1, r0, ror #16
   1b75c:	andeq	fp, r1, r0, ror #16
   1b760:	andeq	fp, r1, r0, ror #16
   1b764:	andeq	fp, r1, r0, ror #16
   1b768:	andeq	fp, r1, r0, ror #16
   1b76c:	andeq	fp, r1, r0, ror #16
   1b770:	andeq	fp, r1, r0, ror #16
   1b774:	andeq	fp, r1, r0, ror #16
   1b778:	andeq	fp, r1, r0, ror #16
   1b77c:	andeq	fp, r1, r0, ror #16
   1b780:	andeq	fp, r1, r0, ror #16
   1b784:	andeq	fp, r1, r0, ror #16
   1b788:	andeq	fp, r1, r0, ror #16
   1b78c:	andeq	fp, r1, r0, ror #16
   1b790:	andeq	fp, r1, r0, ror #16
   1b794:	andeq	fp, r1, r0, ror #16
   1b798:	andeq	fp, r1, r0, ror #16
   1b79c:	andeq	fp, r1, r0, ror #16
   1b7a0:	andeq	fp, r1, r0, ror #16
   1b7a4:	andeq	fp, r1, r0, ror #16
   1b7a8:	andeq	fp, r1, r0, ror #16
   1b7ac:	andeq	fp, r1, r0, ror #16
   1b7b0:	andeq	fp, r1, r0, ror #16
   1b7b4:	andeq	fp, r1, r0, ror #16
   1b7b8:	andeq	fp, r1, r0, ror #16
   1b7bc:	andeq	fp, r1, r0, ror #16
   1b7c0:	andeq	fp, r1, r0, asr r8
   1b7c4:	andeq	fp, r1, r0, asr r8
   1b7c8:	andeq	fp, r1, r0, asr r8
   1b7cc:	andeq	fp, r1, r0, asr r8
   1b7d0:	andeq	fp, r1, r0, asr r8
   1b7d4:	andeq	fp, r1, r0, asr r8
   1b7d8:	andeq	fp, r1, r0, ror #16
   1b7dc:	andeq	fp, r1, r0, ror #16
   1b7e0:	andeq	fp, r1, r0, ror #16
   1b7e4:	andeq	fp, r1, r0, ror #16
   1b7e8:	andeq	fp, r1, r0, ror #16
   1b7ec:	andeq	fp, r1, r0, ror #16
   1b7f0:	andeq	fp, r1, r0, ror #16
   1b7f4:	andeq	fp, r1, r0, ror #16
   1b7f8:	andeq	fp, r1, r0, ror #16
   1b7fc:	andeq	fp, r1, r0, ror #16
   1b800:	andeq	fp, r1, r0, ror #16
   1b804:	andeq	fp, r1, r0, ror #16
   1b808:	andeq	fp, r1, r0, ror #16
   1b80c:	andeq	fp, r1, r0, ror #16
   1b810:	andeq	fp, r1, r0, ror #16
   1b814:	andeq	fp, r1, r0, ror #16
   1b818:	andeq	fp, r1, r0, ror #16
   1b81c:	andeq	fp, r1, r0, ror #16
   1b820:	andeq	fp, r1, r0, ror #16
   1b824:	andeq	fp, r1, r0, ror #16
   1b828:	andeq	fp, r1, r0, ror #16
   1b82c:	andeq	fp, r1, r0, ror #16
   1b830:	andeq	fp, r1, r0, ror #16
   1b834:	andeq	fp, r1, r0, ror #16
   1b838:	andeq	fp, r1, r0, ror #16
   1b83c:	andeq	fp, r1, r0, ror #16
   1b840:	andeq	fp, r1, r0, asr r8
   1b844:	andeq	fp, r1, r0, asr r8
   1b848:	andeq	fp, r1, r0, asr r8
   1b84c:	andeq	fp, r1, r0, asr r8
   1b850:	movw	r0, #1
   1b854:	and	r0, r0, #1
   1b858:	strb	r0, [sp, #11]
   1b85c:	b	1b86c <__assert_fail@plt+0xa8d8>
   1b860:	movw	r0, #0
   1b864:	and	r0, r0, #1
   1b868:	strb	r0, [sp, #11]
   1b86c:	ldrb	r0, [sp, #11]
   1b870:	and	r0, r0, #1
   1b874:	add	sp, sp, #12
   1b878:	bx	lr
   1b87c:	sub	sp, sp, #12
   1b880:	str	r0, [sp, #4]
   1b884:	ldr	r0, [sp, #4]
   1b888:	sub	r1, r0, #9
   1b88c:	cmp	r1, #5
   1b890:	str	r0, [sp]
   1b894:	bcc	1b8ac <__assert_fail@plt+0xa918>
   1b898:	b	1b89c <__assert_fail@plt+0xa908>
   1b89c:	ldr	r0, [sp]
   1b8a0:	cmp	r0, #32
   1b8a4:	bne	1b8bc <__assert_fail@plt+0xa928>
   1b8a8:	b	1b8ac <__assert_fail@plt+0xa918>
   1b8ac:	movw	r0, #1
   1b8b0:	and	r0, r0, #1
   1b8b4:	strb	r0, [sp, #11]
   1b8b8:	b	1b8c8 <__assert_fail@plt+0xa934>
   1b8bc:	movw	r0, #0
   1b8c0:	and	r0, r0, #1
   1b8c4:	strb	r0, [sp, #11]
   1b8c8:	ldrb	r0, [sp, #11]
   1b8cc:	and	r0, r0, #1
   1b8d0:	add	sp, sp, #12
   1b8d4:	bx	lr
   1b8d8:	sub	sp, sp, #8
   1b8dc:	str	r0, [sp]
   1b8e0:	ldr	r0, [sp]
   1b8e4:	sub	r0, r0, #65	; 0x41
   1b8e8:	cmp	r0, #25
   1b8ec:	bhi	1b904 <__assert_fail@plt+0xa970>
   1b8f0:	b	1b8f4 <__assert_fail@plt+0xa960>
   1b8f4:	movw	r0, #1
   1b8f8:	and	r0, r0, #1
   1b8fc:	strb	r0, [sp, #7]
   1b900:	b	1b910 <__assert_fail@plt+0xa97c>
   1b904:	movw	r0, #0
   1b908:	and	r0, r0, #1
   1b90c:	strb	r0, [sp, #7]
   1b910:	ldrb	r0, [sp, #7]
   1b914:	and	r0, r0, #1
   1b918:	add	sp, sp, #8
   1b91c:	bx	lr
   1b920:	sub	sp, sp, #12
   1b924:	str	r0, [sp, #4]
   1b928:	ldr	r0, [sp, #4]
   1b92c:	sub	r1, r0, #48	; 0x30
   1b930:	cmp	r1, #10
   1b934:	str	r0, [sp]
   1b938:	bcc	1b968 <__assert_fail@plt+0xa9d4>
   1b93c:	b	1b940 <__assert_fail@plt+0xa9ac>
   1b940:	ldr	r0, [sp]
   1b944:	sub	r1, r0, #65	; 0x41
   1b948:	cmp	r1, #6
   1b94c:	bcc	1b968 <__assert_fail@plt+0xa9d4>
   1b950:	b	1b954 <__assert_fail@plt+0xa9c0>
   1b954:	ldr	r0, [sp]
   1b958:	sub	r1, r0, #97	; 0x61
   1b95c:	cmp	r1, #5
   1b960:	bhi	1b978 <__assert_fail@plt+0xa9e4>
   1b964:	b	1b968 <__assert_fail@plt+0xa9d4>
   1b968:	movw	r0, #1
   1b96c:	and	r0, r0, #1
   1b970:	strb	r0, [sp, #11]
   1b974:	b	1b984 <__assert_fail@plt+0xa9f0>
   1b978:	movw	r0, #0
   1b97c:	and	r0, r0, #1
   1b980:	strb	r0, [sp, #11]
   1b984:	ldrb	r0, [sp, #11]
   1b988:	and	r0, r0, #1
   1b98c:	add	sp, sp, #12
   1b990:	bx	lr
   1b994:	sub	sp, sp, #8
   1b998:	str	r0, [sp]
   1b99c:	ldr	r0, [sp]
   1b9a0:	sub	r0, r0, #65	; 0x41
   1b9a4:	cmp	r0, #25
   1b9a8:	bhi	1b9c4 <__assert_fail@plt+0xaa30>
   1b9ac:	b	1b9b0 <__assert_fail@plt+0xaa1c>
   1b9b0:	ldr	r0, [sp]
   1b9b4:	sub	r0, r0, #65	; 0x41
   1b9b8:	add	r0, r0, #97	; 0x61
   1b9bc:	str	r0, [sp, #4]
   1b9c0:	b	1b9cc <__assert_fail@plt+0xaa38>
   1b9c4:	ldr	r0, [sp]
   1b9c8:	str	r0, [sp, #4]
   1b9cc:	ldr	r0, [sp, #4]
   1b9d0:	add	sp, sp, #8
   1b9d4:	bx	lr
   1b9d8:	sub	sp, sp, #8
   1b9dc:	str	r0, [sp]
   1b9e0:	ldr	r0, [sp]
   1b9e4:	sub	r0, r0, #97	; 0x61
   1b9e8:	cmp	r0, #25
   1b9ec:	bhi	1ba08 <__assert_fail@plt+0xaa74>
   1b9f0:	b	1b9f4 <__assert_fail@plt+0xaa60>
   1b9f4:	ldr	r0, [sp]
   1b9f8:	sub	r0, r0, #97	; 0x61
   1b9fc:	add	r0, r0, #65	; 0x41
   1ba00:	str	r0, [sp, #4]
   1ba04:	b	1ba10 <__assert_fail@plt+0xaa7c>
   1ba08:	ldr	r0, [sp]
   1ba0c:	str	r0, [sp, #4]
   1ba10:	ldr	r0, [sp, #4]
   1ba14:	add	sp, sp, #8
   1ba18:	bx	lr
   1ba1c:	push	{r4, r5, fp, lr}
   1ba20:	add	fp, sp, #8
   1ba24:	sub	sp, sp, #272	; 0x110
   1ba28:	add	r1, sp, #7
   1ba2c:	str	r0, [fp, #-16]
   1ba30:	ldr	r0, [fp, #-16]
   1ba34:	movw	r2, #257	; 0x101
   1ba38:	bl	1bab8 <__assert_fail@plt+0xab24>
   1ba3c:	cmp	r0, #0
   1ba40:	beq	1ba54 <__assert_fail@plt+0xaac0>
   1ba44:	movw	r0, #0
   1ba48:	and	r0, r0, #1
   1ba4c:	strb	r0, [fp, #-9]
   1ba50:	b	1baa8 <__assert_fail@plt+0xab14>
   1ba54:	add	r0, sp, #7
   1ba58:	movw	r1, #51446	; 0xc8f6
   1ba5c:	movt	r1, #1
   1ba60:	bl	10d78 <strcmp@plt>
   1ba64:	cmp	r0, #0
   1ba68:	movw	r0, #1
   1ba6c:	str	r0, [sp]
   1ba70:	beq	1ba94 <__assert_fail@plt+0xab00>
   1ba74:	add	r0, sp, #7
   1ba78:	movw	r1, #51448	; 0xc8f8
   1ba7c:	movt	r1, #1
   1ba80:	bl	10d78 <strcmp@plt>
   1ba84:	cmp	r0, #0
   1ba88:	movw	r0, #0
   1ba8c:	moveq	r0, #1
   1ba90:	str	r0, [sp]
   1ba94:	ldr	r0, [sp]
   1ba98:	mvn	r1, #0
   1ba9c:	eor	r0, r0, r1
   1baa0:	and	r0, r0, #1
   1baa4:	strb	r0, [fp, #-9]
   1baa8:	ldrb	r0, [fp, #-9]
   1baac:	and	r0, r0, #1
   1bab0:	sub	sp, fp, #8
   1bab4:	pop	{r4, r5, fp, pc}
   1bab8:	push	{fp, lr}
   1babc:	mov	fp, sp
   1bac0:	sub	sp, sp, #16
   1bac4:	str	r0, [fp, #-4]
   1bac8:	str	r1, [sp, #8]
   1bacc:	str	r2, [sp, #4]
   1bad0:	ldr	r0, [fp, #-4]
   1bad4:	ldr	r1, [sp, #8]
   1bad8:	ldr	r2, [sp, #4]
   1badc:	bl	1bae8 <__assert_fail@plt+0xab54>
   1bae0:	mov	sp, fp
   1bae4:	pop	{fp, pc}
   1bae8:	push	{fp, lr}
   1baec:	mov	fp, sp
   1baf0:	sub	sp, sp, #24
   1baf4:	str	r0, [fp, #-8]
   1baf8:	str	r1, [sp, #12]
   1bafc:	str	r2, [sp, #8]
   1bb00:	ldr	r0, [fp, #-8]
   1bb04:	bl	1bbe8 <__assert_fail@plt+0xac54>
   1bb08:	str	r0, [sp, #4]
   1bb0c:	ldr	r0, [sp, #4]
   1bb10:	movw	r1, #0
   1bb14:	cmp	r0, r1
   1bb18:	bne	1bb40 <__assert_fail@plt+0xabac>
   1bb1c:	ldr	r0, [sp, #8]
   1bb20:	cmp	r0, #0
   1bb24:	bls	1bb34 <__assert_fail@plt+0xaba0>
   1bb28:	ldr	r0, [sp, #12]
   1bb2c:	movw	r1, #0
   1bb30:	strb	r1, [r0]
   1bb34:	movw	r0, #22
   1bb38:	str	r0, [fp, #-4]
   1bb3c:	b	1bbbc <__assert_fail@plt+0xac28>
   1bb40:	ldr	r0, [sp, #4]
   1bb44:	bl	10ed4 <strlen@plt>
   1bb48:	str	r0, [sp]
   1bb4c:	ldr	r0, [sp]
   1bb50:	ldr	lr, [sp, #8]
   1bb54:	cmp	r0, lr
   1bb58:	bcs	1bb7c <__assert_fail@plt+0xabe8>
   1bb5c:	ldr	r0, [sp, #12]
   1bb60:	ldr	r1, [sp, #4]
   1bb64:	ldr	r2, [sp]
   1bb68:	add	r2, r2, #1
   1bb6c:	bl	10dc0 <memcpy@plt>
   1bb70:	movw	r0, #0
   1bb74:	str	r0, [fp, #-4]
   1bb78:	b	1bbbc <__assert_fail@plt+0xac28>
   1bb7c:	ldr	r0, [sp, #8]
   1bb80:	cmp	r0, #0
   1bb84:	bls	1bbb4 <__assert_fail@plt+0xac20>
   1bb88:	ldr	r0, [sp, #12]
   1bb8c:	ldr	r1, [sp, #4]
   1bb90:	ldr	r2, [sp, #8]
   1bb94:	sub	r2, r2, #1
   1bb98:	bl	10dc0 <memcpy@plt>
   1bb9c:	ldr	r0, [sp, #12]
   1bba0:	ldr	r1, [sp, #8]
   1bba4:	sub	r1, r1, #1
   1bba8:	add	r0, r0, r1
   1bbac:	movw	r1, #0
   1bbb0:	strb	r1, [r0]
   1bbb4:	movw	r0, #34	; 0x22
   1bbb8:	str	r0, [fp, #-4]
   1bbbc:	ldr	r0, [fp, #-4]
   1bbc0:	mov	sp, fp
   1bbc4:	pop	{fp, pc}
   1bbc8:	push	{fp, lr}
   1bbcc:	mov	fp, sp
   1bbd0:	sub	sp, sp, #8
   1bbd4:	str	r0, [sp, #4]
   1bbd8:	ldr	r0, [sp, #4]
   1bbdc:	bl	1bbe8 <__assert_fail@plt+0xac54>
   1bbe0:	mov	sp, fp
   1bbe4:	pop	{fp, pc}
   1bbe8:	push	{fp, lr}
   1bbec:	mov	fp, sp
   1bbf0:	sub	sp, sp, #8
   1bbf4:	str	r0, [sp, #4]
   1bbf8:	ldr	r0, [sp, #4]
   1bbfc:	movw	r1, #0
   1bc00:	bl	10f40 <setlocale@plt>
   1bc04:	str	r0, [sp]
   1bc08:	ldr	r0, [sp]
   1bc0c:	mov	sp, fp
   1bc10:	pop	{fp, pc}
   1bc14:	cmp	r3, #0
   1bc18:	cmpeq	r2, #0
   1bc1c:	bne	1bc40 <__assert_fail@plt+0xacac>
   1bc20:	cmp	r1, #0
   1bc24:	movlt	r1, #-2147483648	; 0x80000000
   1bc28:	movlt	r0, #0
   1bc2c:	blt	1bc3c <__assert_fail@plt+0xaca8>
   1bc30:	cmpeq	r0, #0
   1bc34:	mvnne	r1, #-2147483648	; 0x80000000
   1bc38:	mvnne	r0, #0
   1bc3c:	b	1bd24 <__assert_fail@plt+0xad90>
   1bc40:	sub	sp, sp, #8
   1bc44:	push	{sp, lr}
   1bc48:	cmp	r1, #0
   1bc4c:	blt	1bc6c <__assert_fail@plt+0xacd8>
   1bc50:	cmp	r3, #0
   1bc54:	blt	1bca0 <__assert_fail@plt+0xad0c>
   1bc58:	bl	1bd34 <__assert_fail@plt+0xada0>
   1bc5c:	ldr	lr, [sp, #4]
   1bc60:	add	sp, sp, #8
   1bc64:	pop	{r2, r3}
   1bc68:	bx	lr
   1bc6c:	rsbs	r0, r0, #0
   1bc70:	sbc	r1, r1, r1, lsl #1
   1bc74:	cmp	r3, #0
   1bc78:	blt	1bcc4 <__assert_fail@plt+0xad30>
   1bc7c:	bl	1bd34 <__assert_fail@plt+0xada0>
   1bc80:	ldr	lr, [sp, #4]
   1bc84:	add	sp, sp, #8
   1bc88:	pop	{r2, r3}
   1bc8c:	rsbs	r0, r0, #0
   1bc90:	sbc	r1, r1, r1, lsl #1
   1bc94:	rsbs	r2, r2, #0
   1bc98:	sbc	r3, r3, r3, lsl #1
   1bc9c:	bx	lr
   1bca0:	rsbs	r2, r2, #0
   1bca4:	sbc	r3, r3, r3, lsl #1
   1bca8:	bl	1bd34 <__assert_fail@plt+0xada0>
   1bcac:	ldr	lr, [sp, #4]
   1bcb0:	add	sp, sp, #8
   1bcb4:	pop	{r2, r3}
   1bcb8:	rsbs	r0, r0, #0
   1bcbc:	sbc	r1, r1, r1, lsl #1
   1bcc0:	bx	lr
   1bcc4:	rsbs	r2, r2, #0
   1bcc8:	sbc	r3, r3, r3, lsl #1
   1bccc:	bl	1bd34 <__assert_fail@plt+0xada0>
   1bcd0:	ldr	lr, [sp, #4]
   1bcd4:	add	sp, sp, #8
   1bcd8:	pop	{r2, r3}
   1bcdc:	rsbs	r2, r2, #0
   1bce0:	sbc	r3, r3, r3, lsl #1
   1bce4:	bx	lr
   1bce8:	cmp	r3, #0
   1bcec:	cmpeq	r2, #0
   1bcf0:	bne	1bd08 <__assert_fail@plt+0xad74>
   1bcf4:	cmp	r1, #0
   1bcf8:	cmpeq	r0, #0
   1bcfc:	mvnne	r1, #0
   1bd00:	mvnne	r0, #0
   1bd04:	b	1bd24 <__assert_fail@plt+0xad90>
   1bd08:	sub	sp, sp, #8
   1bd0c:	push	{sp, lr}
   1bd10:	bl	1bd34 <__assert_fail@plt+0xada0>
   1bd14:	ldr	lr, [sp, #4]
   1bd18:	add	sp, sp, #8
   1bd1c:	pop	{r2, r3}
   1bd20:	bx	lr
   1bd24:	push	{r1, lr}
   1bd28:	mov	r0, #8
   1bd2c:	bl	10d6c <raise@plt>
   1bd30:	pop	{r1, pc}
   1bd34:	cmp	r1, r3
   1bd38:	cmpeq	r0, r2
   1bd3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bd40:	mov	r4, r0
   1bd44:	movcc	r0, #0
   1bd48:	mov	r5, r1
   1bd4c:	ldr	lr, [sp, #36]	; 0x24
   1bd50:	movcc	r1, r0
   1bd54:	bcc	1be50 <__assert_fail@plt+0xaebc>
   1bd58:	cmp	r3, #0
   1bd5c:	clzeq	ip, r2
   1bd60:	clzne	ip, r3
   1bd64:	addeq	ip, ip, #32
   1bd68:	cmp	r5, #0
   1bd6c:	clzeq	r1, r4
   1bd70:	addeq	r1, r1, #32
   1bd74:	clzne	r1, r5
   1bd78:	sub	ip, ip, r1
   1bd7c:	sub	sl, ip, #32
   1bd80:	lsl	r9, r3, ip
   1bd84:	rsb	fp, ip, #32
   1bd88:	orr	r9, r9, r2, lsl sl
   1bd8c:	orr	r9, r9, r2, lsr fp
   1bd90:	lsl	r8, r2, ip
   1bd94:	cmp	r5, r9
   1bd98:	cmpeq	r4, r8
   1bd9c:	movcc	r0, #0
   1bda0:	movcc	r1, r0
   1bda4:	bcc	1bdc0 <__assert_fail@plt+0xae2c>
   1bda8:	mov	r0, #1
   1bdac:	subs	r4, r4, r8
   1bdb0:	lsl	r1, r0, sl
   1bdb4:	orr	r1, r1, r0, lsr fp
   1bdb8:	lsl	r0, r0, ip
   1bdbc:	sbc	r5, r5, r9
   1bdc0:	cmp	ip, #0
   1bdc4:	beq	1be50 <__assert_fail@plt+0xaebc>
   1bdc8:	lsr	r6, r8, #1
   1bdcc:	orr	r6, r6, r9, lsl #31
   1bdd0:	lsr	r7, r9, #1
   1bdd4:	mov	r2, ip
   1bdd8:	b	1bdfc <__assert_fail@plt+0xae68>
   1bddc:	subs	r3, r4, r6
   1bde0:	sbc	r8, r5, r7
   1bde4:	adds	r3, r3, r3
   1bde8:	adc	r8, r8, r8
   1bdec:	adds	r4, r3, #1
   1bdf0:	adc	r5, r8, #0
   1bdf4:	subs	r2, r2, #1
   1bdf8:	beq	1be18 <__assert_fail@plt+0xae84>
   1bdfc:	cmp	r5, r7
   1be00:	cmpeq	r4, r6
   1be04:	bcs	1bddc <__assert_fail@plt+0xae48>
   1be08:	adds	r4, r4, r4
   1be0c:	adc	r5, r5, r5
   1be10:	subs	r2, r2, #1
   1be14:	bne	1bdfc <__assert_fail@plt+0xae68>
   1be18:	lsr	r3, r4, ip
   1be1c:	orr	r3, r3, r5, lsl fp
   1be20:	lsr	r2, r5, ip
   1be24:	orr	r3, r3, r5, lsr sl
   1be28:	adds	r0, r0, r4
   1be2c:	mov	r4, r3
   1be30:	lsl	r3, r2, ip
   1be34:	orr	r3, r3, r4, lsl sl
   1be38:	lsl	ip, r4, ip
   1be3c:	orr	r3, r3, r4, lsr fp
   1be40:	adc	r1, r1, r5
   1be44:	subs	r0, r0, ip
   1be48:	mov	r5, r2
   1be4c:	sbc	r1, r1, r3
   1be50:	cmp	lr, #0
   1be54:	strdne	r4, [lr]
   1be58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1be5c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1be60:	mov	r7, r0
   1be64:	ldr	r6, [pc, #72]	; 1beb4 <__assert_fail@plt+0xaf20>
   1be68:	ldr	r5, [pc, #72]	; 1beb8 <__assert_fail@plt+0xaf24>
   1be6c:	add	r6, pc, r6
   1be70:	add	r5, pc, r5
   1be74:	sub	r6, r6, r5
   1be78:	mov	r8, r1
   1be7c:	mov	r9, r2
   1be80:	bl	10d34 <calloc@plt-0x20>
   1be84:	asrs	r6, r6, #2
   1be88:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1be8c:	mov	r4, #0
   1be90:	add	r4, r4, #1
   1be94:	ldr	r3, [r5], #4
   1be98:	mov	r2, r9
   1be9c:	mov	r1, r8
   1bea0:	mov	r0, r7
   1bea4:	blx	r3
   1bea8:	cmp	r6, r4
   1beac:	bne	1be90 <__assert_fail@plt+0xaefc>
   1beb0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1beb4:	muleq	r1, r8, r0
   1beb8:	muleq	r1, r0, r0
   1bebc:	bx	lr
   1bec0:	ldr	r3, [pc, #12]	; 1bed4 <__assert_fail@plt+0xaf40>
   1bec4:	mov	r1, #0
   1bec8:	add	r3, pc, r3
   1becc:	ldr	r2, [r3]
   1bed0:	b	10f04 <__cxa_atexit@plt>
   1bed4:	andeq	r1, r1, r8, lsl #4

Disassembly of section .fini:

0001bed8 <.fini>:
   1bed8:	push	{r3, lr}
   1bedc:	pop	{r3, pc}
