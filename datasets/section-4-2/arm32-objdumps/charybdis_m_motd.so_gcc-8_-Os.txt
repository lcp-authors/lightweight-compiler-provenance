
../repos/charybdis/modules/.libs/m_motd.so:     file format elf32-littlearm


Disassembly of section .init:

000004e0 <_init>:
 4e0:	push	{r3, lr}
 4e4:	bl	560 <call_weak_fn>
 4e8:	pop	{r3, pc}

Disassembly of section .plt:

000004ec <.plt>:
 4ec:	push	{lr}		; (str lr, [sp, #-4]!)
 4f0:	ldr	lr, [pc, #4]	; 4fc <.plt+0x10>
 4f4:	add	lr, pc, lr
 4f8:	ldr	pc, [lr, #8]!
 4fc:	.word	0x00010b04

00000500 <rb_current_time@plt>:
 500:	add	ip, pc, #0, 12
 504:	add	ip, ip, #16, 20	; 0x10000
 508:	ldr	pc, [ip, #2820]!	; 0xb04

0000050c <__cxa_finalize@plt>:
 50c:	add	ip, pc, #0, 12
 510:	add	ip, ip, #16, 20	; 0x10000
 514:	ldr	pc, [ip, #2812]!	; 0xafc

00000518 <sendto_one@plt>:
 518:	add	ip, pc, #0, 12
 51c:	add	ip, ip, #16, 20	; 0x10000
 520:	ldr	pc, [ip, #2804]!	; 0xaf4

00000524 <send_user_motd@plt>:
 524:	add	ip, pc, #0, 12
 528:	add	ip, ip, #16, 20	; 0x10000
 52c:	ldr	pc, [ip, #2796]!	; 0xaec

00000530 <hunt_server@plt>:
 530:	add	ip, pc, #0, 12
 534:	add	ip, ip, #16, 20	; 0x10000
 538:	ldr	pc, [ip, #2788]!	; 0xae4

0000053c <__gmon_start__@plt>:
 53c:	add	ip, pc, #0, 12
 540:	add	ip, ip, #16, 20	; 0x10000
 544:	ldr	pc, [ip, #2780]!	; 0xadc

00000548 <ratelimit_client@plt>:
 548:	add	ip, pc, #0, 12
 54c:	add	ip, ip, #16, 20	; 0x10000
 550:	ldr	pc, [ip, #2772]!	; 0xad4

00000554 <call_hook@plt>:
 554:	add	ip, pc, #0, 12
 558:	add	ip, ip, #16, 20	; 0x10000
 55c:	ldr	pc, [ip, #2764]!	; 0xacc

Disassembly of section .text:

00000560 <call_weak_fn>:
 560:	ldr	r3, [pc, #20]	; 57c <call_weak_fn+0x1c>
 564:	ldr	r2, [pc, #20]	; 580 <call_weak_fn+0x20>
 568:	add	r3, pc, r3
 56c:	ldr	r2, [r3, r2]
 570:	cmp	r2, #0
 574:	bxeq	lr
 578:	b	53c <__gmon_start__@plt>
 57c:	.word	0x00010a90
 580:	.word	0x00000034

00000584 <deregister_tm_clones>:
 584:	ldr	r0, [pc, #44]	; 5b8 <deregister_tm_clones+0x34>
 588:	ldr	r3, [pc, #44]	; 5bc <deregister_tm_clones+0x38>
 58c:	add	r0, pc, r0
 590:	add	r3, pc, r3
 594:	cmp	r3, r0
 598:	ldr	r3, [pc, #32]	; 5c0 <deregister_tm_clones+0x3c>
 59c:	add	r3, pc, r3
 5a0:	bxeq	lr
 5a4:	ldr	r2, [pc, #24]	; 5c4 <deregister_tm_clones+0x40>
 5a8:	ldr	r3, [r3, r2]
 5ac:	cmp	r3, #0
 5b0:	bxeq	lr
 5b4:	bx	r3
 5b8:	.word	0x00010b3c
 5bc:	.word	0x00010b38
 5c0:	.word	0x00010a5c
 5c4:	.word	0x00000030

000005c8 <register_tm_clones>:
 5c8:	ldr	r0, [pc, #56]	; 608 <register_tm_clones+0x40>
 5cc:	ldr	r3, [pc, #56]	; 60c <register_tm_clones+0x44>
 5d0:	add	r0, pc, r0
 5d4:	add	r3, pc, r3
 5d8:	sub	r1, r3, r0
 5dc:	ldr	r3, [pc, #44]	; 610 <register_tm_clones+0x48>
 5e0:	asr	r1, r1, #2
 5e4:	add	r3, pc, r3
 5e8:	add	r1, r1, r1, lsr #31
 5ec:	asrs	r1, r1, #1
 5f0:	bxeq	lr
 5f4:	ldr	r2, [pc, #24]	; 614 <register_tm_clones+0x4c>
 5f8:	ldr	r3, [r3, r2]
 5fc:	cmp	r3, #0
 600:	bxeq	lr
 604:	bx	r3
 608:	.word	0x00010af8
 60c:	.word	0x00010af4
 610:	.word	0x00010a14
 614:	.word	0x0000003c

00000618 <__do_global_dtors_aux>:
 618:	ldr	r3, [pc, #76]	; 66c <__do_global_dtors_aux+0x54>
 61c:	ldr	r2, [pc, #76]	; 670 <__do_global_dtors_aux+0x58>
 620:	add	r3, pc, r3
 624:	add	r2, pc, r2
 628:	ldrb	r3, [r3]
 62c:	cmp	r3, #0
 630:	bxne	lr
 634:	ldr	r3, [pc, #56]	; 674 <__do_global_dtors_aux+0x5c>
 638:	push	{r4, lr}
 63c:	ldr	r3, [r2, r3]
 640:	cmp	r3, #0
 644:	beq	654 <__do_global_dtors_aux+0x3c>
 648:	ldr	r3, [pc, #40]	; 678 <__do_global_dtors_aux+0x60>
 64c:	ldr	r0, [pc, r3]
 650:	bl	50c <__cxa_finalize@plt>
 654:	bl	584 <deregister_tm_clones>
 658:	ldr	r3, [pc, #28]	; 67c <__do_global_dtors_aux+0x64>
 65c:	mov	r2, #1
 660:	add	r3, pc, r3
 664:	strb	r2, [r3]
 668:	pop	{r4, pc}
 66c:	.word	0x00010aa8
 670:	.word	0x000109d4
 674:	.word	0x0000002c
 678:	.word	0x000109f4
 67c:	.word	0x00010a68

00000680 <frame_dummy>:
 680:	b	5c8 <register_tm_clones>

00000684 <m_motd>:
 684:	push	{r4, r5, r6, r7, r8, r9, lr}
 688:	cmp	r3, #1
 68c:	sub	sp, sp, #28
 690:	mov	r9, r1
 694:	mov	r4, r2
 698:	mov	r7, r3
 69c:	ldr	r5, [pc, #244]	; 798 <m_motd+0x114>
 6a0:	add	r5, pc, r5
 6a4:	ble	740 <m_motd+0xbc>
 6a8:	ldr	r3, [pc, #236]	; 79c <m_motd+0x118>
 6ac:	ldr	r8, [pc, #236]	; 7a0 <m_motd+0x11c>
 6b0:	ldr	r3, [r5, r3]
 6b4:	add	r8, pc, r8
 6b8:	ldr	r6, [r3, #184]	; 0xb8
 6bc:	ldr	r3, [r8]
 6c0:	add	r6, r6, r3
 6c4:	bl	500 <rb_current_time@plt>
 6c8:	cmp	r6, r0
 6cc:	ble	724 <m_motd+0xa0>
 6d0:	ldr	r3, [pc, #204]	; 7a4 <m_motd+0x120>
 6d4:	add	r6, r4, #88	; 0x58
 6d8:	mov	r0, r4
 6dc:	ldr	r1, [pc, #196]	; 7a8 <m_motd+0x124>
 6e0:	ldr	r5, [r5, r3]
 6e4:	ldr	r3, [pc, #192]	; 7ac <m_motd+0x128>
 6e8:	add	r1, pc, r1
 6ec:	add	r5, r5, #88	; 0x58
 6f0:	mov	r2, r5
 6f4:	add	r3, pc, r3
 6f8:	str	r3, [sp]
 6fc:	mov	r3, r6
 700:	bl	518 <sendto_one@plt>
 704:	ldr	r1, [pc, #164]	; 7b0 <m_motd+0x12c>
 708:	mov	r3, r6
 70c:	mov	r2, r5
 710:	mov	r0, r4
 714:	add	r1, pc, r1
 718:	bl	518 <sendto_one@plt>
 71c:	add	sp, sp, #28
 720:	pop	{r4, r5, r6, r7, r8, r9, pc}
 724:	mov	r1, #6
 728:	mov	r0, r4
 72c:	bl	548 <ratelimit_client@plt>
 730:	cmp	r0, #0
 734:	beq	6d0 <m_motd+0x4c>
 738:	bl	500 <rb_current_time@plt>
 73c:	str	r0, [r8]
 740:	ldr	r2, [pc, #108]	; 7b4 <m_motd+0x130>
 744:	mov	r1, r4
 748:	mov	r0, r9
 74c:	str	r7, [sp]
 750:	ldr	r3, [sp, #56]	; 0x38
 754:	add	r2, pc, r2
 758:	str	r3, [sp, #4]
 75c:	mov	r3, #1
 760:	bl	530 <hunt_server@plt>
 764:	cmp	r0, #0
 768:	bne	71c <m_motd+0x98>
 76c:	ldr	r3, [pc, #68]	; 7b8 <m_motd+0x134>
 770:	add	r1, sp, #12
 774:	str	r4, [sp, #12]
 778:	str	r0, [sp, #16]
 77c:	str	r0, [sp, #20]
 780:	ldr	r3, [r5, r3]
 784:	ldr	r0, [r3]
 788:	bl	554 <call_hook@plt>
 78c:	mov	r0, r4
 790:	bl	524 <send_user_motd@plt>
 794:	b	71c <m_motd+0x98>
 798:	.word	0x00010958
 79c:	.word	0x00000044
 7a0:	.word	0x00010a18
 7a4:	.word	0x00000040
 7a8:	.word	0x00000189
 7ac:	.word	0x000001e8
 7b0:	.word	0x000001cd
 7b4:	.word	0x000001af
 7b8:	.word	0x00000038

000007bc <mo_motd>:
 7bc:	push	{r4, r5, lr}
 7c0:	sub	sp, sp, #28
 7c4:	mov	r0, r1
 7c8:	mov	r4, r2
 7cc:	mov	r1, r2
 7d0:	ldr	r2, [sp, #40]	; 0x28
 7d4:	str	r3, [sp]
 7d8:	mov	r3, #1
 7dc:	ldr	r5, [pc, #72]	; 82c <mo_motd+0x70>
 7e0:	str	r2, [sp, #4]
 7e4:	ldr	r2, [pc, #68]	; 830 <mo_motd+0x74>
 7e8:	add	r5, pc, r5
 7ec:	add	r2, pc, r2
 7f0:	bl	530 <hunt_server@plt>
 7f4:	cmp	r0, #0
 7f8:	bne	824 <mo_motd+0x68>
 7fc:	ldr	r3, [pc, #48]	; 834 <mo_motd+0x78>
 800:	add	r1, sp, #12
 804:	str	r4, [sp, #12]
 808:	str	r0, [sp, #16]
 80c:	str	r0, [sp, #20]
 810:	ldr	r3, [r5, r3]
 814:	ldr	r0, [r3]
 818:	bl	554 <call_hook@plt>
 81c:	mov	r0, r4
 820:	bl	524 <send_user_motd@plt>
 824:	add	sp, sp, #28
 828:	pop	{r4, r5, pc}
 82c:	.word	0x00010810
 830:	.word	0x00000117
 834:	.word	0x00000038

Disassembly of section .fini:

00000838 <_fini>:
 838:	push	{r3, lr}
 83c:	pop	{r3, pc}
