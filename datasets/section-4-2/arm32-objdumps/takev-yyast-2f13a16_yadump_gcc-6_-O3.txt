
../repos/takev-yyast-2f13a16/yyast/yadump:     file format elf32-littlearm


Disassembly of section .init:

000104ac <.init>:
   104ac:	push	{r3, lr}
   104b0:	bl	106f4 <close@plt+0x180>
   104b4:	pop	{r3, pc}

Disassembly of section .plt:

000104b8 <free@plt-0x14>:
   104b8:	push	{lr}		; (str lr, [sp, #-4]!)
   104bc:	ldr	lr, [pc, #4]	; 104c8 <free@plt-0x4>
   104c0:	add	lr, pc, lr
   104c4:	ldr	pc, [lr, #8]!
   104c8:	andeq	r0, r1, r8, lsr fp

000104cc <free@plt>:
   104cc:	add	ip, pc, #0, 12
   104d0:	add	ip, ip, #16, 20	; 0x10000
   104d4:	ldr	pc, [ip, #2872]!	; 0xb38

000104d8 <strndup@plt>:
   104d8:	add	ip, pc, #0, 12
   104dc:	add	ip, ip, #16, 20	; 0x10000
   104e0:	ldr	pc, [ip, #2864]!	; 0xb30

000104e4 <perror@plt>:
   104e4:	add	ip, pc, #0, 12
   104e8:	add	ip, ip, #16, 20	; 0x10000
   104ec:	ldr	pc, [ip, #2856]!	; 0xb28

000104f0 <fwrite@plt>:
   104f0:	add	ip, pc, #0, 12
   104f4:	add	ip, ip, #16, 20	; 0x10000
   104f8:	ldr	pc, [ip, #2848]!	; 0xb20

000104fc <__libc_start_main@plt>:
   104fc:	add	ip, pc, #0, 12
   10500:	add	ip, ip, #16, 20	; 0x10000
   10504:	ldr	pc, [ip, #2840]!	; 0xb18

00010508 <__fxstat@plt>:
   10508:	add	ip, pc, #0, 12
   1050c:	add	ip, ip, #16, 20	; 0x10000
   10510:	ldr	pc, [ip, #2832]!	; 0xb10

00010514 <__gmon_start__@plt>:
   10514:	add	ip, pc, #0, 12
   10518:	add	ip, ip, #16, 20	; 0x10000
   1051c:	ldr	pc, [ip, #2824]!	; 0xb08

00010520 <open@plt>:
   10520:	add	ip, pc, #0, 12
   10524:	add	ip, ip, #16, 20	; 0x10000
   10528:	ldr	pc, [ip, #2816]!	; 0xb00

0001052c <exit@plt>:
   1052c:	add	ip, pc, #0, 12
   10530:	add	ip, ip, #16, 20	; 0x10000
   10534:	ldr	pc, [ip, #2808]!	; 0xaf8

00010538 <mmap@plt>:
   10538:	add	ip, pc, #0, 12
   1053c:	add	ip, ip, #16, 20	; 0x10000
   10540:	ldr	pc, [ip, #2800]!	; 0xaf0

00010544 <fprintf@plt>:
   10544:	add	ip, pc, #0, 12
   10548:	add	ip, ip, #16, 20	; 0x10000
   1054c:	ldr	pc, [ip, #2792]!	; 0xae8

00010550 <munmap@plt>:
   10550:	add	ip, pc, #0, 12
   10554:	add	ip, ip, #16, 20	; 0x10000
   10558:	ldr	pc, [ip, #2784]!	; 0xae0

0001055c <fputc@plt>:
   1055c:	add	ip, pc, #0, 12
   10560:	add	ip, ip, #16, 20	; 0x10000
   10564:	ldr	pc, [ip, #2776]!	; 0xad8

00010568 <abort@plt>:
   10568:	add	ip, pc, #0, 12
   1056c:	add	ip, ip, #16, 20	; 0x10000
   10570:	ldr	pc, [ip, #2768]!	; 0xad0

00010574 <close@plt>:
   10574:	add	ip, pc, #0, 12
   10578:	add	ip, ip, #16, 20	; 0x10000
   1057c:	ldr	pc, [ip, #2760]!	; 0xac8

Disassembly of section .text:

00010580 <.text>:
   10580:	cmp	r0, #2
   10584:	push	{r4, r5, r6, r7, lr}
   10588:	sub	sp, sp, #100	; 0x64
   1058c:	bne	1062c <close@plt+0xb8>
   10590:	ldr	r0, [r1, #4]
   10594:	mov	r1, #0
   10598:	bl	10520 <open@plt>
   1059c:	cmn	r0, #1
   105a0:	mov	r4, r0
   105a4:	beq	1068c <close@plt+0x118>
   105a8:	mov	r1, r0
   105ac:	add	r2, sp, #8
   105b0:	mov	r0, #3
   105b4:	bl	10508 <__fxstat@plt>
   105b8:	cmn	r0, #1
   105bc:	beq	1067c <close@plt+0x108>
   105c0:	ldr	r6, [sp, #52]	; 0x34
   105c4:	mov	r5, #0
   105c8:	mov	r3, #1
   105cc:	str	r4, [sp]
   105d0:	mov	r1, r6
   105d4:	str	r5, [sp, #4]
   105d8:	mov	r0, r5
   105dc:	mov	r2, r3
   105e0:	bl	10538 <mmap@plt>
   105e4:	cmn	r0, #1
   105e8:	mov	r7, r0
   105ec:	beq	1066c <close@plt+0xf8>
   105f0:	mov	r2, r5
   105f4:	mov	r1, r6
   105f8:	bl	1089c <close@plt+0x328>
   105fc:	mov	r1, r6
   10600:	mov	r0, r7
   10604:	bl	10550 <munmap@plt>
   10608:	cmn	r0, #1
   1060c:	beq	1065c <close@plt+0xe8>
   10610:	mov	r0, r4
   10614:	bl	10574 <close@plt>
   10618:	cmn	r0, #1
   1061c:	beq	1064c <close@plt+0xd8>
   10620:	mov	r0, r5
   10624:	add	sp, sp, #100	; 0x64
   10628:	pop	{r4, r5, r6, r7, pc}
   1062c:	ldr	r3, [pc, #104]	; 1069c <close@plt+0x128>
   10630:	mov	r2, #31
   10634:	mov	r1, #1
   10638:	ldr	r3, [r3]
   1063c:	ldr	r0, [pc, #92]	; 106a0 <close@plt+0x12c>
   10640:	bl	104f0 <fwrite@plt>
   10644:	mov	r0, #1
   10648:	bl	1052c <exit@plt>
   1064c:	ldr	r0, [pc, #80]	; 106a4 <close@plt+0x130>
   10650:	bl	104e4 <perror@plt>
   10654:	mov	r0, #1
   10658:	bl	1052c <exit@plt>
   1065c:	ldr	r0, [pc, #68]	; 106a8 <close@plt+0x134>
   10660:	bl	104e4 <perror@plt>
   10664:	mov	r0, #1
   10668:	bl	1052c <exit@plt>
   1066c:	ldr	r0, [pc, #56]	; 106ac <close@plt+0x138>
   10670:	bl	104e4 <perror@plt>
   10674:	mov	r0, #1
   10678:	bl	1052c <exit@plt>
   1067c:	ldr	r0, [pc, #44]	; 106b0 <close@plt+0x13c>
   10680:	bl	104e4 <perror@plt>
   10684:	mov	r0, #1
   10688:	bl	1052c <exit@plt>
   1068c:	ldr	r0, [pc, #32]	; 106b4 <close@plt+0x140>
   10690:	bl	104e4 <perror@plt>
   10694:	mov	r0, #1
   10698:	bl	1052c <exit@plt>
   1069c:	andeq	r1, r2, r8, asr r0
   106a0:	andeq	r0, r1, r8, lsl #28
   106a4:	andeq	r0, r1, r8, lsr #29
   106a8:	andeq	r0, r1, r0, lsl #29
   106ac:	andeq	r0, r1, ip, asr lr
   106b0:	andeq	r0, r1, r0, asr #28
   106b4:	andeq	r0, r1, r8, lsr #28
   106b8:	mov	fp, #0
   106bc:	mov	lr, #0
   106c0:	pop	{r1}		; (ldr r1, [sp], #4)
   106c4:	mov	r2, sp
   106c8:	push	{r2}		; (str r2, [sp, #-4]!)
   106cc:	push	{r0}		; (str r0, [sp, #-4]!)
   106d0:	ldr	ip, [pc, #16]	; 106e8 <close@plt+0x174>
   106d4:	push	{ip}		; (str ip, [sp, #-4]!)
   106d8:	ldr	r0, [pc, #12]	; 106ec <close@plt+0x178>
   106dc:	ldr	r3, [pc, #12]	; 106f0 <close@plt+0x17c>
   106e0:	bl	104fc <__libc_start_main@plt>
   106e4:	bl	10568 <abort@plt>
   106e8:	andeq	r0, r1, r8, lsl #26
   106ec:	andeq	r0, r1, r0, lsl #11
   106f0:	andeq	r0, r1, r8, lsr #25
   106f4:	ldr	r3, [pc, #20]	; 10710 <close@plt+0x19c>
   106f8:	ldr	r2, [pc, #20]	; 10714 <close@plt+0x1a0>
   106fc:	add	r3, pc, r3
   10700:	ldr	r2, [r3, r2]
   10704:	cmp	r2, #0
   10708:	bxeq	lr
   1070c:	b	10514 <__gmon_start__@plt>
   10710:	strdeq	r0, [r1], -ip
   10714:	andeq	r0, r0, r8, asr #32
   10718:	ldr	r3, [pc, #28]	; 1073c <close@plt+0x1c8>
   1071c:	ldr	r0, [pc, #28]	; 10740 <close@plt+0x1cc>
   10720:	sub	r3, r3, r0
   10724:	cmp	r3, #6
   10728:	bxls	lr
   1072c:	ldr	r3, [pc, #16]	; 10744 <close@plt+0x1d0>
   10730:	cmp	r3, #0
   10734:	bxeq	lr
   10738:	bx	r3
   1073c:	andeq	r1, r2, r7, asr r0
   10740:	andeq	r1, r2, r4, asr r0
   10744:	andeq	r0, r0, r0
   10748:	ldr	r1, [pc, #36]	; 10774 <close@plt+0x200>
   1074c:	ldr	r0, [pc, #36]	; 10778 <close@plt+0x204>
   10750:	sub	r1, r1, r0
   10754:	asr	r1, r1, #2
   10758:	add	r1, r1, r1, lsr #31
   1075c:	asrs	r1, r1, #1
   10760:	bxeq	lr
   10764:	ldr	r3, [pc, #16]	; 1077c <close@plt+0x208>
   10768:	cmp	r3, #0
   1076c:	bxeq	lr
   10770:	bx	r3
   10774:	andeq	r1, r2, r4, asr r0
   10778:	andeq	r1, r2, r4, asr r0
   1077c:	andeq	r0, r0, r0
   10780:	push	{r4, lr}
   10784:	ldr	r4, [pc, #24]	; 107a4 <close@plt+0x230>
   10788:	ldrb	r3, [r4]
   1078c:	cmp	r3, #0
   10790:	popne	{r4, pc}
   10794:	bl	10718 <close@plt+0x1a4>
   10798:	mov	r3, #1
   1079c:	strb	r3, [r4]
   107a0:	pop	{r4, pc}
   107a4:	andeq	r1, r2, r0, rrx
   107a8:	ldr	r0, [pc, #40]	; 107d8 <close@plt+0x264>
   107ac:	ldr	r3, [r0]
   107b0:	cmp	r3, #0
   107b4:	bne	107bc <close@plt+0x248>
   107b8:	b	10748 <close@plt+0x1d4>
   107bc:	ldr	r3, [pc, #24]	; 107dc <close@plt+0x268>
   107c0:	cmp	r3, #0
   107c4:	beq	107b8 <close@plt+0x244>
   107c8:	push	{r4, lr}
   107cc:	blx	r3
   107d0:	pop	{r4, lr}
   107d4:	b	10748 <close@plt+0x1d4>
   107d8:	andeq	r0, r2, r4, lsl pc
   107dc:	andeq	r0, r0, r0
   107e0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   107e4:	subs	r5, r0, #0
   107e8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   107ec:	ldr	r9, [pc, #48]	; 10824 <close@plt+0x2b0>
   107f0:	ldr	r8, [pc, #48]	; 10828 <close@plt+0x2b4>
   107f4:	mov	r4, #0
   107f8:	mov	r7, #2
   107fc:	mov	r6, #1
   10800:	add	r4, r4, #1
   10804:	ldr	r3, [r9]
   10808:	mov	r2, r7
   1080c:	mov	r1, r6
   10810:	mov	r0, r8
   10814:	bl	104f0 <fwrite@plt>
   10818:	cmp	r5, r4
   1081c:	bne	10800 <close@plt+0x28c>
   10820:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10824:	andeq	r1, r2, ip, asr r0
   10828:	andeq	r0, r1, r8, lsl sp
   1082c:	ldr	ip, [pc, #96]	; 10894 <close@plt+0x320>
   10830:	push	{r4, r5, r6, lr}
   10834:	lsr	r2, r1, #8
   10838:	lsr	r4, r0, #8
   1083c:	lsr	lr, r0, #16
   10840:	ldr	r5, [ip]
   10844:	sub	sp, sp, #24
   10848:	lsr	ip, r0, #24
   1084c:	uxtb	r6, r0
   10850:	lsr	r3, r1, #16
   10854:	uxtb	r0, r1
   10858:	uxtb	lr, lr
   1085c:	uxtb	r4, r4
   10860:	uxtb	r2, r2
   10864:	str	r2, [sp]
   10868:	stmib	sp, {r0, ip}
   1086c:	lsr	r2, r1, #24
   10870:	str	r4, [sp, #16]
   10874:	str	lr, [sp, #12]
   10878:	uxtb	r3, r3
   1087c:	str	r6, [sp, #20]
   10880:	mov	r0, r5
   10884:	ldr	r1, [pc, #12]	; 10898 <close@plt+0x324>
   10888:	bl	10544 <fprintf@plt>
   1088c:	add	sp, sp, #24
   10890:	pop	{r4, r5, r6, pc}
   10894:	andeq	r1, r2, ip, asr r0
   10898:	andeq	r0, r1, ip, lsl sp
   1089c:	cmp	r1, #31
   108a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   108a4:	sub	sp, sp, #44	; 0x2c
   108a8:	bls	10c40 <close@plt+0x6cc>
   108ac:	ldr	ip, [r0, #4]
   108b0:	mov	r7, r0
   108b4:	ldr	fp, [r0, #12]
   108b8:	rev	ip, ip
   108bc:	ldr	lr, [r0]
   108c0:	rev	fp, fp
   108c4:	str	ip, [sp, #36]	; 0x24
   108c8:	ldrb	ip, [r7, #31]
   108cc:	ldr	r3, [r0, #16]
   108d0:	mov	r6, r2
   108d4:	sub	fp, fp, #32
   108d8:	ldr	r0, [r0, #20]
   108dc:	ldr	r2, [r7, #24]
   108e0:	rev	lr, lr
   108e4:	cmp	r1, fp
   108e8:	str	lr, [sp, #32]
   108ec:	rev	r3, r3
   108f0:	rev	r0, r0
   108f4:	rev	r2, r2
   108f8:	str	ip, [sp, #28]
   108fc:	bcc	10c18 <close@plt+0x6a4>
   10900:	cmn	r2, #1
   10904:	ldr	r5, [pc, #852]	; 10c60 <close@plt+0x6ec>
   10908:	beq	109f8 <close@plt+0x484>
   1090c:	str	r0, [sp]
   10910:	ldr	r1, [pc, #844]	; 10c64 <close@plt+0x6f0>
   10914:	ldr	r0, [r5]
   10918:	bl	10544 <fprintf@plt>
   1091c:	mov	r2, fp
   10920:	mov	r3, #0
   10924:	ldr	r1, [pc, #828]	; 10c68 <close@plt+0x6f4>
   10928:	ldr	r0, [r5]
   1092c:	bl	10544 <fprintf@plt>
   10930:	cmp	r6, #0
   10934:	beq	10968 <close@plt+0x3f4>
   10938:	ldr	sl, [pc, #812]	; 10c6c <close@plt+0x6f8>
   1093c:	mov	r4, #0
   10940:	mov	r9, #2
   10944:	mov	r8, #1
   10948:	add	r4, r4, #1
   1094c:	ldr	r3, [r5]
   10950:	mov	r2, r9
   10954:	mov	r1, r8
   10958:	mov	r0, sl
   1095c:	bl	104f0 <fwrite@plt>
   10960:	cmp	r4, r6
   10964:	bne	10948 <close@plt+0x3d4>
   10968:	ldr	r1, [r5]
   1096c:	mov	r0, #32
   10970:	bl	1055c <fputc@plt>
   10974:	ldr	ip, [sp, #36]	; 0x24
   10978:	ldr	lr, [sp, #32]
   1097c:	lsr	r1, ip, #16
   10980:	lsr	r2, lr, #8
   10984:	lsr	r0, ip, #8
   10988:	uxtb	r1, r1
   1098c:	uxtb	r2, r2
   10990:	lsr	r3, lr, #16
   10994:	str	r1, [sp, #12]
   10998:	str	r2, [sp]
   1099c:	uxtb	r1, ip
   109a0:	uxtb	r2, lr
   109a4:	lsr	ip, ip, #24
   109a8:	uxtb	r0, r0
   109ac:	str	r0, [sp, #16]
   109b0:	uxtb	r3, r3
   109b4:	str	r1, [sp, #20]
   109b8:	stmib	sp, {r2, ip}
   109bc:	ldr	r0, [r5]
   109c0:	lsr	r2, lr, #24
   109c4:	ldr	r1, [pc, #676]	; 10c70 <close@plt+0x6fc>
   109c8:	bl	10544 <fprintf@plt>
   109cc:	ldr	r3, [sp, #28]
   109d0:	cmp	r3, #6
   109d4:	ldrls	pc, [pc, r3, lsl #2]
   109d8:	b	10b04 <close@plt+0x590>
   109dc:	andeq	r0, r1, r0, asr #20
   109e0:	andeq	r0, r1, r4, lsl #22
   109e4:	andeq	r0, r1, r8, asr sl
   109e8:	andeq	r0, r1, r0, lsr #21
   109ec:	andeq	r0, r1, ip, asr #21
   109f0:	andeq	r0, r1, r8, ror #21
   109f4:	andeq	r0, r1, r0, lsl sl
   109f8:	mov	r2, #11
   109fc:	mov	r1, #1
   10a00:	ldr	r3, [r5]
   10a04:	ldr	r0, [pc, #616]	; 10c74 <close@plt+0x700>
   10a08:	bl	104f0 <fwrite@plt>
   10a0c:	b	1091c <close@plt+0x3a8>
   10a10:	cmp	fp, #8
   10a14:	beq	10b20 <close@plt+0x5ac>
   10a18:	mov	r2, fp
   10a1c:	ldr	r0, [r5]
   10a20:	ldr	r1, [pc, #592]	; 10c78 <close@plt+0x704>
   10a24:	bl	10544 <fprintf@plt>
   10a28:	ldr	r0, [r7, #12]
   10a2c:	rev	r0, r0
   10a30:	add	r0, r0, #7
   10a34:	bic	r0, r0, #7
   10a38:	add	sp, sp, #44	; 0x2c
   10a3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10a40:	ldr	r3, [r5]
   10a44:	mov	r2, #6
   10a48:	mov	r1, #1
   10a4c:	ldr	r0, [pc, #552]	; 10c7c <close@plt+0x708>
   10a50:	bl	104f0 <fwrite@plt>
   10a54:	b	10a28 <close@plt+0x4b4>
   10a58:	ldr	r1, [r5]
   10a5c:	mov	r0, #10
   10a60:	bl	1055c <fputc@plt>
   10a64:	cmp	fp, #0
   10a68:	beq	10a28 <close@plt+0x4b4>
   10a6c:	mov	r1, #0
   10a70:	add	r6, r6, #1
   10a74:	mov	r4, r1
   10a78:	add	r0, r4, #32
   10a7c:	sub	r1, fp, r1
   10a80:	add	r0, r7, r0
   10a84:	mov	r2, r6
   10a88:	bl	1089c <close@plt+0x328>
   10a8c:	add	r4, r4, r0
   10a90:	cmp	fp, r4
   10a94:	mov	r1, r4
   10a98:	bhi	10a78 <close@plt+0x504>
   10a9c:	b	10a28 <close@plt+0x4b4>
   10aa0:	mov	r1, fp
   10aa4:	add	r0, r7, #32
   10aa8:	bl	104d8 <strndup@plt>
   10aac:	ldr	r1, [pc, #460]	; 10c80 <close@plt+0x70c>
   10ab0:	mov	r4, r0
   10ab4:	mov	r2, r0
   10ab8:	ldr	r0, [r5]
   10abc:	bl	10544 <fprintf@plt>
   10ac0:	mov	r0, r4
   10ac4:	bl	104cc <free@plt>
   10ac8:	b	10a28 <close@plt+0x4b4>
   10acc:	cmp	fp, #8
   10ad0:	beq	10bc8 <close@plt+0x654>
   10ad4:	mov	r2, fp
   10ad8:	ldr	r0, [r5]
   10adc:	ldr	r1, [pc, #416]	; 10c84 <close@plt+0x710>
   10ae0:	bl	10544 <fprintf@plt>
   10ae4:	b	10a28 <close@plt+0x4b4>
   10ae8:	cmp	fp, #8
   10aec:	beq	10b78 <close@plt+0x604>
   10af0:	mov	r2, fp
   10af4:	ldr	r0, [r5]
   10af8:	ldr	r1, [pc, #392]	; 10c88 <close@plt+0x714>
   10afc:	bl	10544 <fprintf@plt>
   10b00:	b	10a28 <close@plt+0x4b4>
   10b04:	ldr	r3, [pc, #384]	; 10c8c <close@plt+0x718>
   10b08:	mov	r2, #11
   10b0c:	mov	r1, #1
   10b10:	ldr	r3, [r3]
   10b14:	ldr	r0, [pc, #372]	; 10c90 <close@plt+0x71c>
   10b18:	bl	104f0 <fwrite@plt>
   10b1c:	b	10a28 <close@plt+0x4b4>
   10b20:	ldrb	r0, [r7, #37]	; 0x25
   10b24:	ldrb	r2, [r7, #33]	; 0x21
   10b28:	ldrb	r1, [r7, #36]	; 0x24
   10b2c:	ldrb	r3, [r7, #32]
   10b30:	ldrb	lr, [r7, #38]	; 0x26
   10b34:	ldrb	ip, [r7, #34]	; 0x22
   10b38:	orr	r1, r1, r0, lsl #8
   10b3c:	orr	r3, r3, r2, lsl #8
   10b40:	ldrb	r0, [r7, #39]	; 0x27
   10b44:	ldrb	r2, [r7, #35]	; 0x23
   10b48:	orr	r1, r1, lr, lsl #16
   10b4c:	orr	r3, r3, ip, lsl #16
   10b50:	orr	r1, r1, r0, lsl #24
   10b54:	orr	r3, r3, r2, lsl #24
   10b58:	rev	r8, r1
   10b5c:	rev	r9, r3
   10b60:	ldr	r0, [r5]
   10b64:	mov	r2, r8
   10b68:	mov	r3, r9
   10b6c:	ldr	r1, [pc, #288]	; 10c94 <close@plt+0x720>
   10b70:	bl	10544 <fprintf@plt>
   10b74:	b	10a28 <close@plt+0x4b4>
   10b78:	ldrb	r0, [r7, #33]	; 0x21
   10b7c:	ldrb	r1, [r7, #37]	; 0x25
   10b80:	ldrb	r3, [r7, #32]
   10b84:	ldrb	r2, [r7, #36]	; 0x24
   10b88:	ldrb	lr, [r7, #34]	; 0x22
   10b8c:	ldrb	ip, [r7, #38]	; 0x26
   10b90:	orr	r3, r3, r0, lsl #8
   10b94:	orr	r2, r2, r1, lsl #8
   10b98:	ldrb	r0, [r7, #35]	; 0x23
   10b9c:	ldrb	r1, [r7, #39]	; 0x27
   10ba0:	orr	r3, r3, lr, lsl #16
   10ba4:	orr	r2, r2, ip, lsl #16
   10ba8:	orr	r3, r3, r0, lsl #24
   10bac:	orr	r2, r2, r1, lsl #24
   10bb0:	ldr	r0, [r5]
   10bb4:	rev	r3, r3
   10bb8:	rev	r2, r2
   10bbc:	ldr	r1, [pc, #212]	; 10c98 <close@plt+0x724>
   10bc0:	bl	10544 <fprintf@plt>
   10bc4:	b	10a28 <close@plt+0x4b4>
   10bc8:	ldrb	r0, [r7, #33]	; 0x21
   10bcc:	ldrb	r1, [r7, #37]	; 0x25
   10bd0:	ldrb	r3, [r7, #32]
   10bd4:	ldrb	r2, [r7, #36]	; 0x24
   10bd8:	ldrb	lr, [r7, #34]	; 0x22
   10bdc:	ldrb	ip, [r7, #38]	; 0x26
   10be0:	orr	r3, r3, r0, lsl #8
   10be4:	orr	r2, r2, r1, lsl #8
   10be8:	ldrb	r0, [r7, #35]	; 0x23
   10bec:	ldrb	r1, [r7, #39]	; 0x27
   10bf0:	orr	r3, r3, lr, lsl #16
   10bf4:	orr	r2, r2, ip, lsl #16
   10bf8:	orr	r3, r3, r0, lsl #24
   10bfc:	orr	r2, r2, r1, lsl #24
   10c00:	ldr	r0, [r5]
   10c04:	rev	r3, r3
   10c08:	rev	r2, r2
   10c0c:	ldr	r1, [pc, #136]	; 10c9c <close@plt+0x728>
   10c10:	bl	10544 <fprintf@plt>
   10c14:	b	10a28 <close@plt+0x4b4>
   10c18:	ldr	r2, [pc, #64]	; 10c60 <close@plt+0x6ec>
   10c1c:	mov	r3, #0
   10c20:	str	r1, [sp]
   10c24:	ldr	r1, [pc, #116]	; 10ca0 <close@plt+0x72c>
   10c28:	ldr	r0, [r2]
   10c2c:	mov	r2, fp
   10c30:	str	r3, [sp, #4]
   10c34:	bl	10544 <fprintf@plt>
   10c38:	mov	r0, #1
   10c3c:	bl	1052c <exit@plt>
   10c40:	ldr	r3, [pc, #24]	; 10c60 <close@plt+0x6ec>
   10c44:	mov	r2, #39	; 0x27
   10c48:	mov	r1, #1
   10c4c:	ldr	r3, [r3]
   10c50:	ldr	r0, [pc, #76]	; 10ca4 <close@plt+0x730>
   10c54:	bl	104f0 <fwrite@plt>
   10c58:	mov	r0, #1
   10c5c:	bl	1052c <exit@plt>
   10c60:	andeq	r1, r2, ip, asr r0
   10c64:	muleq	r1, r4, sp
   10c68:			; <UNDEFINED> instruction: 0x00010db0
   10c6c:	andeq	r0, r1, r8, lsl sp
   10c70:	andeq	r0, r1, ip, lsl sp
   10c74:	andeq	r0, r1, r4, lsr #27
   10c78:	andeq	r0, r1, r4, ror #27
   10c7c:	strdeq	r0, [r1], -r4
   10c80:	andeq	r0, r1, ip, ror #27
   10c84:	andeq	r0, r1, r4, asr #27
   10c88:	ldrdeq	r0, [r1], -r4
   10c8c:	andeq	r1, r2, r8, asr r0
   10c90:	strdeq	r0, [r1], -ip
   10c94:	ldrdeq	r0, [r1], -ip
   10c98:	andeq	r0, r1, ip, asr #27
   10c9c:			; <UNDEFINED> instruction: 0x00010dbc
   10ca0:	andeq	r0, r1, r8, asr sp
   10ca4:	andeq	r0, r1, r0, lsr sp
   10ca8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10cac:	mov	r7, r0
   10cb0:	ldr	r6, [pc, #72]	; 10d00 <close@plt+0x78c>
   10cb4:	ldr	r5, [pc, #72]	; 10d04 <close@plt+0x790>
   10cb8:	add	r6, pc, r6
   10cbc:	add	r5, pc, r5
   10cc0:	sub	r6, r6, r5
   10cc4:	mov	r8, r1
   10cc8:	mov	r9, r2
   10ccc:	bl	104ac <free@plt-0x20>
   10cd0:	asrs	r6, r6, #2
   10cd4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10cd8:	mov	r4, #0
   10cdc:	add	r4, r4, #1
   10ce0:	ldr	r3, [r5], #4
   10ce4:	mov	r2, r9
   10ce8:	mov	r1, r8
   10cec:	mov	r0, r7
   10cf0:	blx	r3
   10cf4:	cmp	r6, r4
   10cf8:	bne	10cdc <close@plt+0x768>
   10cfc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10d00:	andeq	r0, r1, r0, asr r2
   10d04:	andeq	r0, r1, r8, asr #4
   10d08:	bx	lr

Disassembly of section .fini:

00010d0c <.fini>:
   10d0c:	push	{r3, lr}
   10d10:	pop	{r3, pc}
