
../repos/coreutils/src/getlimits:     file format elf32-littlearm


Disassembly of section .init:

00010bc0 <.init>:
   10bc0:	push	{r3, lr}
   10bc4:	bl	1180c <__snprintf_chk@plt+0x9ec>
   10bc8:	pop	{r3, pc}

Disassembly of section .plt:

00010bcc <calloc@plt-0x14>:
   10bcc:	push	{lr}		; (str lr, [sp, #-4]!)
   10bd0:	ldr	lr, [pc, #4]	; 10bdc <calloc@plt-0x4>
   10bd4:	add	lr, pc, lr
   10bd8:	ldr	pc, [lr, #8]!
   10bdc:	andeq	r6, r1, r4, lsr #8

00010be0 <calloc@plt>:
   10be0:	add	ip, pc, #0, 12
   10be4:	add	ip, ip, #90112	; 0x16000
   10be8:	ldr	pc, [ip, #1060]!	; 0x424

00010bec <fputs_unlocked@plt>:
   10bec:	add	ip, pc, #0, 12
   10bf0:	add	ip, ip, #90112	; 0x16000
   10bf4:	ldr	pc, [ip, #1052]!	; 0x41c

00010bf8 <raise@plt>:
   10bf8:	add	ip, pc, #0, 12
   10bfc:	add	ip, ip, #90112	; 0x16000
   10c00:	ldr	pc, [ip, #1044]!	; 0x414

00010c04 <strcmp@plt>:
   10c04:	add	ip, pc, #0, 12
   10c08:	add	ip, ip, #90112	; 0x16000
   10c0c:	ldr	pc, [ip, #1036]!	; 0x40c

00010c10 <fflush@plt>:
   10c10:	add	ip, pc, #0, 12
   10c14:	add	ip, ip, #90112	; 0x16000
   10c18:	ldr	pc, [ip, #1028]!	; 0x404

00010c1c <free@plt>:
   10c1c:	add	ip, pc, #0, 12
   10c20:	add	ip, ip, #90112	; 0x16000
   10c24:	ldr	pc, [ip, #1020]!	; 0x3fc

00010c28 <_exit@plt>:
   10c28:	add	ip, pc, #0, 12
   10c2c:	add	ip, ip, #90112	; 0x16000
   10c30:	ldr	pc, [ip, #1012]!	; 0x3f4

00010c34 <memcpy@plt>:
   10c34:	add	ip, pc, #0, 12
   10c38:	add	ip, ip, #90112	; 0x16000
   10c3c:	ldr	pc, [ip, #1004]!	; 0x3ec

00010c40 <mbsinit@plt>:
   10c40:	add	ip, pc, #0, 12
   10c44:	add	ip, ip, #90112	; 0x16000
   10c48:	ldr	pc, [ip, #996]!	; 0x3e4

00010c4c <strtold@plt>:
   10c4c:	add	ip, pc, #0, 12
   10c50:	add	ip, ip, #90112	; 0x16000
   10c54:	ldr	pc, [ip, #988]!	; 0x3dc

00010c58 <memcmp@plt>:
   10c58:	add	ip, pc, #0, 12
   10c5c:	add	ip, ip, #90112	; 0x16000
   10c60:	ldr	pc, [ip, #980]!	; 0x3d4

00010c64 <fputc_unlocked@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #90112	; 0x16000
   10c6c:	ldr	pc, [ip, #972]!	; 0x3cc

00010c70 <dcgettext@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #90112	; 0x16000
   10c78:	ldr	pc, [ip, #964]!	; 0x3c4

00010c7c <realloc@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #90112	; 0x16000
   10c84:	ldr	pc, [ip, #956]!	; 0x3bc

00010c88 <textdomain@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #90112	; 0x16000
   10c90:	ldr	pc, [ip, #948]!	; 0x3b4

00010c94 <iswprint@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #90112	; 0x16000
   10c9c:	ldr	pc, [ip, #940]!	; 0x3ac

00010ca0 <fwrite@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #90112	; 0x16000
   10ca8:	ldr	pc, [ip, #932]!	; 0x3a4

00010cac <lseek64@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #90112	; 0x16000
   10cb4:	ldr	pc, [ip, #924]!	; 0x39c

00010cb8 <__ctype_get_mb_cur_max@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #90112	; 0x16000
   10cc0:	ldr	pc, [ip, #916]!	; 0x394

00010cc4 <__fpending@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #90112	; 0x16000
   10ccc:	ldr	pc, [ip, #908]!	; 0x38c

00010cd0 <mbrtowc@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #90112	; 0x16000
   10cd8:	ldr	pc, [ip, #900]!	; 0x384

00010cdc <error@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #90112	; 0x16000
   10ce4:	ldr	pc, [ip, #892]!	; 0x37c

00010ce8 <strtof@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #90112	; 0x16000
   10cf0:	ldr	pc, [ip, #884]!	; 0x374

00010cf4 <puts@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #90112	; 0x16000
   10cfc:	ldr	pc, [ip, #876]!	; 0x36c

00010d00 <malloc@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #90112	; 0x16000
   10d08:	ldr	pc, [ip, #868]!	; 0x364

00010d0c <__libc_start_main@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #90112	; 0x16000
   10d14:	ldr	pc, [ip, #860]!	; 0x35c

00010d18 <__freading@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #90112	; 0x16000
   10d20:	ldr	pc, [ip, #852]!	; 0x354

00010d24 <__gmon_start__@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #90112	; 0x16000
   10d2c:	ldr	pc, [ip, #844]!	; 0x34c

00010d30 <getopt_long@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #90112	; 0x16000
   10d38:	ldr	pc, [ip, #836]!	; 0x344

00010d3c <__ctype_b_loc@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #90112	; 0x16000
   10d44:	ldr	pc, [ip, #828]!	; 0x33c

00010d48 <exit@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #90112	; 0x16000
   10d50:	ldr	pc, [ip, #820]!	; 0x334

00010d54 <strlen@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #90112	; 0x16000
   10d5c:	ldr	pc, [ip, #812]!	; 0x32c

00010d60 <__errno_location@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #90112	; 0x16000
   10d68:	ldr	pc, [ip, #804]!	; 0x324

00010d6c <__sprintf_chk@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #90112	; 0x16000
   10d74:	ldr	pc, [ip, #796]!	; 0x31c

00010d78 <__cxa_atexit@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #90112	; 0x16000
   10d80:	ldr	pc, [ip, #788]!	; 0x314

00010d84 <memset@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #90112	; 0x16000
   10d8c:	ldr	pc, [ip, #780]!	; 0x30c

00010d90 <__printf_chk@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #90112	; 0x16000
   10d98:	ldr	pc, [ip, #772]!	; 0x304

00010d9c <strtod@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #90112	; 0x16000
   10da4:	ldr	pc, [ip, #764]!	; 0x2fc

00010da8 <fileno@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #90112	; 0x16000
   10db0:	ldr	pc, [ip, #756]!	; 0x2f4

00010db4 <__fprintf_chk@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #90112	; 0x16000
   10dbc:	ldr	pc, [ip, #748]!	; 0x2ec

00010dc0 <fclose@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #90112	; 0x16000
   10dc8:	ldr	pc, [ip, #740]!	; 0x2e4

00010dcc <fseeko64@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #90112	; 0x16000
   10dd4:	ldr	pc, [ip, #732]!	; 0x2dc

00010dd8 <setlocale@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #90112	; 0x16000
   10de0:	ldr	pc, [ip, #724]!	; 0x2d4

00010de4 <strrchr@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #90112	; 0x16000
   10dec:	ldr	pc, [ip, #716]!	; 0x2cc

00010df0 <nl_langinfo@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #90112	; 0x16000
   10df8:	ldr	pc, [ip, #708]!	; 0x2c4

00010dfc <bindtextdomain@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #90112	; 0x16000
   10e04:	ldr	pc, [ip, #700]!	; 0x2bc

00010e08 <strncmp@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #90112	; 0x16000
   10e10:	ldr	pc, [ip, #692]!	; 0x2b4

00010e14 <abort@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #90112	; 0x16000
   10e1c:	ldr	pc, [ip, #684]!	; 0x2ac

00010e20 <__snprintf_chk@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #90112	; 0x16000
   10e28:	ldr	pc, [ip, #676]!	; 0x2a4

Disassembly of section .text:

00010e30 <.text>:
   10e30:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10e34:	vpush	{d8-d9}
   10e38:	mov	r8, r0
   10e3c:	ldr	r4, [pc, #1148]	; 112c0 <__snprintf_chk@plt+0x4a0>
   10e40:	ldr	r0, [r1]
   10e44:	sub	sp, sp, #80	; 0x50
   10e48:	mov	r5, r1
   10e4c:	bl	122d8 <__snprintf_chk@plt+0x14b8>
   10e50:	ldr	r1, [pc, #1132]	; 112c4 <__snprintf_chk@plt+0x4a4>
   10e54:	mov	r0, #6
   10e58:	bl	10dd8 <setlocale@plt>
   10e5c:	ldr	r1, [pc, #1124]	; 112c8 <__snprintf_chk@plt+0x4a8>
   10e60:	mov	r0, r4
   10e64:	bl	10dfc <bindtextdomain@plt>
   10e68:	mov	r0, r4
   10e6c:	bl	10c88 <textdomain@plt>
   10e70:	ldr	r0, [pc, #1108]	; 112cc <__snprintf_chk@plt+0x4ac>
   10e74:	bl	15624 <__snprintf_chk@plt+0x4804>
   10e78:	ldr	ip, [pc, #1104]	; 112d0 <__snprintf_chk@plt+0x4b0>
   10e7c:	ldr	r2, [pc, #1104]	; 112d4 <__snprintf_chk@plt+0x4b4>
   10e80:	ldr	r3, [pc, #1104]	; 112d8 <__snprintf_chk@plt+0x4b8>
   10e84:	ldr	r4, [pc, #1104]	; 112dc <__snprintf_chk@plt+0x4bc>
   10e88:	mov	sl, #0
   10e8c:	mov	r6, #255	; 0xff
   10e90:	mov	r7, #0
   10e94:	stmib	sp, {r2, ip}
   10e98:	mov	r1, r5
   10e9c:	mov	r0, r8
   10ea0:	str	r3, [sp]
   10ea4:	str	sl, [sp, #12]
   10ea8:	ldr	r3, [pc, #1072]	; 112e0 <__snprintf_chk@plt+0x4c0>
   10eac:	ldr	r2, [pc, #1072]	; 112e4 <__snprintf_chk@plt+0x4c4>
   10eb0:	bl	12148 <__snprintf_chk@plt+0x1328>
   10eb4:	mov	r3, r4
   10eb8:	strd	r6, [sp]
   10ebc:	add	r0, sp, #17
   10ec0:	mov	r2, #21
   10ec4:	mov	r1, #1
   10ec8:	bl	10d6c <__sprintf_chk@plt>
   10ecc:	add	r2, sp, #17
   10ed0:	ldr	r1, [pc, #1040]	; 112e8 <__snprintf_chk@plt+0x4c8>
   10ed4:	mov	r0, #1
   10ed8:	bl	10d90 <__printf_chk@plt>
   10edc:	add	r0, sp, #16
   10ee0:	bl	118f8 <__snprintf_chk@plt+0xad8>
   10ee4:	mov	r8, #127	; 0x7f
   10ee8:	mov	r9, #0
   10eec:	ldr	r1, [pc, #1016]	; 112ec <__snprintf_chk@plt+0x4cc>
   10ef0:	ldr	r5, [pc, #1016]	; 112f0 <__snprintf_chk@plt+0x4d0>
   10ef4:	vldr	d9, [pc, #948]	; 112b0 <__snprintf_chk@plt+0x490>
   10ef8:	vldr	d8, [pc, #952]	; 112b8 <__snprintf_chk@plt+0x498>
   10efc:	mov	r2, r0
   10f00:	mov	r0, #1
   10f04:	bl	10d90 <__printf_chk@plt>
   10f08:	mov	r3, r4
   10f0c:	strd	r8, [sp]
   10f10:	add	r0, sp, #17
   10f14:	mov	r2, #21
   10f18:	mov	r1, #1
   10f1c:	bl	10d6c <__sprintf_chk@plt>
   10f20:	add	r2, sp, #17
   10f24:	ldr	r1, [pc, #968]	; 112f4 <__snprintf_chk@plt+0x4d4>
   10f28:	mov	r0, #1
   10f2c:	bl	10d90 <__printf_chk@plt>
   10f30:	add	r0, sp, #16
   10f34:	bl	118f8 <__snprintf_chk@plt+0xad8>
   10f38:	mvn	r8, #127	; 0x7f
   10f3c:	mvn	r9, #0
   10f40:	ldr	r1, [pc, #944]	; 112f8 <__snprintf_chk@plt+0x4d8>
   10f44:	mov	r2, r0
   10f48:	mov	r0, #1
   10f4c:	bl	10d90 <__printf_chk@plt>
   10f50:	mov	r3, r5
   10f54:	strd	r8, [sp]
   10f58:	add	r0, sp, #17
   10f5c:	mov	r2, #21
   10f60:	mov	r1, #1
   10f64:	bl	10d6c <__sprintf_chk@plt>
   10f68:	add	r2, sp, #17
   10f6c:	ldr	r1, [pc, #904]	; 112fc <__snprintf_chk@plt+0x4dc>
   10f70:	mov	r0, #1
   10f74:	bl	10d90 <__printf_chk@plt>
   10f78:	add	r0, sp, #16
   10f7c:	bl	118f8 <__snprintf_chk@plt+0xad8>
   10f80:	ldr	r1, [pc, #888]	; 11300 <__snprintf_chk@plt+0x4e0>
   10f84:	mvn	r8, #-2147483648	; 0x80000000
   10f88:	mov	r9, #0
   10f8c:	mov	r2, r0
   10f90:	mov	r0, #1
   10f94:	bl	10d90 <__printf_chk@plt>
   10f98:	mov	r3, r4
   10f9c:	strd	r6, [sp]
   10fa0:	add	r0, sp, #17
   10fa4:	mov	r2, #21
   10fa8:	mov	r1, #1
   10fac:	bl	10d6c <__sprintf_chk@plt>
   10fb0:	add	r2, sp, #17
   10fb4:	ldr	r1, [pc, #840]	; 11304 <__snprintf_chk@plt+0x4e4>
   10fb8:	mov	r0, #1
   10fbc:	bl	10d90 <__printf_chk@plt>
   10fc0:	add	r0, sp, #16
   10fc4:	bl	118f8 <__snprintf_chk@plt+0xad8>
   10fc8:	ldr	r6, [pc, #824]	; 11308 <__snprintf_chk@plt+0x4e8>
   10fcc:	mov	r7, #0
   10fd0:	ldr	r1, [pc, #820]	; 1130c <__snprintf_chk@plt+0x4ec>
   10fd4:	mov	r2, r0
   10fd8:	mov	r0, #1
   10fdc:	bl	10d90 <__printf_chk@plt>
   10fe0:	mov	r3, r4
   10fe4:	strd	r6, [sp]
   10fe8:	add	r0, sp, #17
   10fec:	mov	r2, #21
   10ff0:	mov	r1, #1
   10ff4:	bl	10d6c <__sprintf_chk@plt>
   10ff8:	add	r2, sp, #17
   10ffc:	ldr	r1, [pc, #780]	; 11310 <__snprintf_chk@plt+0x4f0>
   11000:	mov	r0, #1
   11004:	bl	10d90 <__printf_chk@plt>
   11008:	add	r0, sp, #16
   1100c:	bl	118f8 <__snprintf_chk@plt+0xad8>
   11010:	ldr	r6, [pc, #764]	; 11314 <__snprintf_chk@plt+0x4f4>
   11014:	mvn	r7, #0
   11018:	ldr	r1, [pc, #760]	; 11318 <__snprintf_chk@plt+0x4f8>
   1101c:	mov	r2, r0
   11020:	mov	r0, #1
   11024:	bl	10d90 <__printf_chk@plt>
   11028:	mov	r3, r5
   1102c:	strd	r6, [sp]
   11030:	add	r0, sp, #17
   11034:	mov	r2, #21
   11038:	mov	r1, #1
   1103c:	bl	10d6c <__sprintf_chk@plt>
   11040:	add	r2, sp, #17
   11044:	ldr	r1, [pc, #720]	; 1131c <__snprintf_chk@plt+0x4fc>
   11048:	mov	r0, #1
   1104c:	bl	10d90 <__printf_chk@plt>
   11050:	add	r0, sp, #16
   11054:	bl	118f8 <__snprintf_chk@plt+0xad8>
   11058:	ldr	r1, [pc, #704]	; 11320 <__snprintf_chk@plt+0x500>
   1105c:	mov	r6, #-2147483648	; 0x80000000
   11060:	mvn	r7, #0
   11064:	mov	r2, r0
   11068:	mov	r0, #1
   1106c:	bl	10d90 <__printf_chk@plt>
   11070:	mov	r3, r4
   11074:	strd	r8, [sp]
   11078:	add	r0, sp, #17
   1107c:	mov	r2, #21
   11080:	mov	r1, #1
   11084:	bl	10d6c <__sprintf_chk@plt>
   11088:	add	r2, sp, #17
   1108c:	ldr	r1, [pc, #656]	; 11324 <__snprintf_chk@plt+0x504>
   11090:	mov	r0, #1
   11094:	bl	10d90 <__printf_chk@plt>
   11098:	add	r0, sp, #16
   1109c:	bl	118f8 <__snprintf_chk@plt+0xad8>
   110a0:	ldr	r1, [pc, #640]	; 11328 <__snprintf_chk@plt+0x508>
   110a4:	mov	r2, r0
   110a8:	mov	r0, #1
   110ac:	bl	10d90 <__printf_chk@plt>
   110b0:	mov	r3, r5
   110b4:	strd	r6, [sp]
   110b8:	add	r0, sp, #17
   110bc:	mov	r2, #21
   110c0:	mov	r1, #1
   110c4:	bl	10d6c <__sprintf_chk@plt>
   110c8:	add	r2, sp, #17
   110cc:	ldr	r1, [pc, #600]	; 1132c <__snprintf_chk@plt+0x50c>
   110d0:	mov	r0, #1
   110d4:	bl	10d90 <__printf_chk@plt>
   110d8:	add	r0, sp, #16
   110dc:	bl	118f8 <__snprintf_chk@plt+0xad8>
   110e0:	mvn	r6, #0
   110e4:	mov	r7, #0
   110e8:	ldr	r1, [pc, #576]	; 11330 <__snprintf_chk@plt+0x510>
   110ec:	mov	r2, r0
   110f0:	mov	r0, #1
   110f4:	bl	10d90 <__printf_chk@plt>
   110f8:	mov	r3, r4
   110fc:	strd	r6, [sp]
   11100:	add	r0, sp, #17
   11104:	mov	r2, #21
   11108:	mov	r1, #1
   1110c:	bl	10d6c <__sprintf_chk@plt>
   11110:	add	r2, sp, #17
   11114:	ldr	r1, [pc, #536]	; 11334 <__snprintf_chk@plt+0x514>
   11118:	mov	r0, #1
   1111c:	bl	10d90 <__printf_chk@plt>
   11120:	add	r0, sp, #16
   11124:	bl	118f8 <__snprintf_chk@plt+0xad8>
   11128:	ldr	r1, [pc, #520]	; 11338 <__snprintf_chk@plt+0x518>
   1112c:	mov	r2, r0
   11130:	mov	r0, #1
   11134:	bl	10d90 <__printf_chk@plt>
   11138:	mov	r3, r4
   1113c:	strd	r8, [sp]
   11140:	add	r0, sp, #17
   11144:	mov	r2, #21
   11148:	mov	r1, #1
   1114c:	bl	10d6c <__sprintf_chk@plt>
   11150:	add	r2, sp, #17
   11154:	ldr	r1, [pc, #480]	; 1133c <__snprintf_chk@plt+0x51c>
   11158:	mov	r0, #1
   1115c:	bl	10d90 <__printf_chk@plt>
   11160:	add	r0, sp, #16
   11164:	bl	118f8 <__snprintf_chk@plt+0xad8>
   11168:	ldr	r1, [pc, #464]	; 11340 <__snprintf_chk@plt+0x520>
   1116c:	mov	r2, r0
   11170:	mov	r0, #1
   11174:	bl	10d90 <__printf_chk@plt>
   11178:	mov	r2, #-2147483648	; 0x80000000
   1117c:	mvn	r3, #0
   11180:	add	r0, sp, #17
   11184:	strd	r2, [sp]
   11188:	mov	r1, #1
   1118c:	mov	r3, r5
   11190:	mov	r2, #21
   11194:	bl	10d6c <__sprintf_chk@plt>
   11198:	add	r2, sp, #17
   1119c:	ldr	r1, [pc, #416]	; 11344 <__snprintf_chk@plt+0x524>
   111a0:	mov	r0, #1
   111a4:	bl	10d90 <__printf_chk@plt>
   111a8:	add	r0, sp, #16
   111ac:	bl	118f8 <__snprintf_chk@plt+0xad8>
   111b0:	ldr	r1, [pc, #400]	; 11348 <__snprintf_chk@plt+0x528>
   111b4:	mov	r2, r0
   111b8:	mov	r0, #1
   111bc:	bl	10d90 <__printf_chk@plt>
   111c0:	mov	r3, r4
   111c4:	strd	r6, [sp]
   111c8:	add	r0, sp, #17
   111cc:	mov	r2, #21
   111d0:	mov	r1, #1
   111d4:	bl	10d6c <__sprintf_chk@plt>
   111d8:	add	r2, sp, #17
   111dc:	ldr	r1, [pc, #360]	; 1134c <__snprintf_chk@plt+0x52c>
   111e0:	mov	r0, #1
   111e4:	bl	10d90 <__printf_chk@plt>
   111e8:	add	r0, sp, #16
   111ec:	bl	118f8 <__snprintf_chk@plt+0xad8>
   111f0:	ldr	r1, [pc, #344]	; 11350 <__snprintf_chk@plt+0x530>
   111f4:	mov	r2, r0
   111f8:	mov	r0, #1
   111fc:	bl	10d90 <__printf_chk@plt>
   11200:	mov	r3, r4
   11204:	strd	r6, [sp]
   11208:	add	r0, sp, #17
   1120c:	mov	r2, #21
   11210:	mov	r1, #1
   11214:	bl	10d6c <__sprintf_chk@plt>
   11218:	add	r2, sp, #17
   1121c:	ldr	r1, [pc, #304]	; 11354 <__snprintf_chk@plt+0x534>
   11220:	mov	r0, #1
   11224:	bl	10d90 <__printf_chk@plt>
   11228:	add	r0, sp, #16
   1122c:	bl	118f8 <__snprintf_chk@plt+0xad8>
   11230:	ldr	r1, [pc, #288]	; 11358 <__snprintf_chk@plt+0x538>
   11234:	mov	r2, r0
   11238:	mov	r0, #1
   1123c:	bl	10d90 <__printf_chk@plt>
   11240:	mov	r3, r4
   11244:	strd	r8, [sp]
   11248:	add	r0, sp, #17
   1124c:	mov	r2, #21
   11250:	mov	r1, #1
   11254:	bl	10d6c <__sprintf_chk@plt>
   11258:	add	r2, sp, #17
   1125c:	ldr	r1, [pc, #248]	; 1135c <__snprintf_chk@plt+0x53c>
   11260:	mov	r0, #1
   11264:	bl	10d90 <__printf_chk@plt>
   11268:	add	r0, sp, #16
   1126c:	bl	118f8 <__snprintf_chk@plt+0xad8>
   11270:	ldr	r1, [pc, #232]	; 11360 <__snprintf_chk@plt+0x540>
   11274:	mov	r2, r0
   11278:	mov	r0, #1
   1127c:	bl	10d90 <__printf_chk@plt>
   11280:	mov	r2, #-2147483648	; 0x80000000
   11284:	mvn	r3, #0
   11288:	add	r0, sp, #17
   1128c:	strd	r2, [sp]
   11290:	mov	r1, #1
   11294:	mov	r3, r5
   11298:	mov	r2, #21
   1129c:	bl	10d6c <__sprintf_chk@plt>
   112a0:	add	r2, sp, #17
   112a4:	ldr	r1, [pc, #184]	; 11364 <__snprintf_chk@plt+0x544>
   112a8:	mov	r0, #1
   112ac:	b	113e4 <__snprintf_chk@plt+0x5c4>
   112b0:	andeq	r0, r0, r0
   112b4:	andseq	r0, r0, r0
   112b8:			; <UNDEFINED> instruction: 0xffffffff
   112bc:	svcvc	0x00efffff
   112c0:			; <UNDEFINED> instruction: 0x000157b8
   112c4:	andeq	r5, r1, r8, lsl #14
   112c8:	andeq	r5, r1, r0, ror #16
   112cc:	andeq	r1, r1, r0, lsl #25
   112d0:	andeq	r5, r1, r8, ror r8
   112d4:	muleq	r1, r8, r9
   112d8:	andeq	r5, r1, r8, lsl #17
   112dc:	muleq	r1, r8, r8
   112e0:			; <UNDEFINED> instruction: 0x000157b4
   112e4:	andeq	r5, r1, r0, lsl #13
   112e8:	andeq	r5, r1, r0, lsr #17
   112ec:			; <UNDEFINED> instruction: 0x000158b0
   112f0:	andeq	r5, r1, r0, ror #17
   112f4:	andeq	r5, r1, r0, asr #17
   112f8:	ldrdeq	r5, [r1], -r0
   112fc:	andeq	r5, r1, r8, ror #17
   11300:	strdeq	r5, [r1], -r8
   11304:	andeq	r5, r1, r8, lsl #18
   11308:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
   1130c:	andeq	r5, r1, r8, lsl r9
   11310:	andeq	r5, r1, r8, lsr #18
   11314:			; <UNDEFINED> instruction: 0xffff8000
   11318:	andeq	r5, r1, r8, lsr r9
   1131c:	andeq	r5, r1, r8, asr #18
   11320:	andeq	r5, r1, r8, asr r9
   11324:	andeq	r5, r1, r8, ror #18
   11328:	andeq	r5, r1, r4, ror r9
   1132c:	andeq	r5, r1, r4, lsl #19
   11330:	muleq	r1, r0, r9
   11334:	andeq	r5, r1, r0, lsr #19
   11338:			; <UNDEFINED> instruction: 0x000159b0
   1133c:	andeq	r5, r1, r0, asr #19
   11340:	ldrdeq	r5, [r1], -r0
   11344:	andeq	r5, r1, r0, ror #19
   11348:	strdeq	r5, [r1], -r0
   1134c:	andeq	r5, r1, r0, lsl #20
   11350:	andeq	r5, r1, r0, lsl sl
   11354:	andeq	r5, r1, r0, lsr #20
   11358:	andeq	r5, r1, r0, lsr sl
   1135c:	andeq	r5, r1, r0, asr #20
   11360:	andeq	r5, r1, r0, asr sl
   11364:	andeq	r5, r1, r0, ror #20
   11368:	andeq	r5, r1, r0, ror sl
   1136c:	andeq	r5, r1, r0, lsl #21
   11370:	muleq	r1, r0, sl
   11374:	andeq	r5, r1, r4, lsr #21
   11378:			; <UNDEFINED> instruction: 0x00015ab4
   1137c:	andeq	r5, r1, r8, asr #21
   11380:	ldrdeq	r5, [r1], -r8
   11384:	andeq	r5, r1, r8, ror #21
   11388:	strdeq	r5, [r1], -r8
   1138c:	andeq	r5, r1, r8, lsl #22
   11390:	andeq	r5, r1, r8, lsl fp
   11394:	andeq	r5, r1, r8, lsr #22
   11398:	andeq	r5, r1, r8, lsr fp
   1139c:	andeq	r5, r1, r8, asr #22
   113a0:	andeq	r5, r1, r8, asr fp
   113a4:	andeq	r5, r1, r8, ror #22
   113a8:	andeq	r5, r1, r8, ror fp
   113ac:	andeq	r5, r1, r8, lsl #23
   113b0:	muleq	r1, r8, fp
   113b4:	andeq	r5, r1, ip, lsr #23
   113b8:			; <UNDEFINED> instruction: 0x00015bbc
   113bc:	ldrdeq	r5, [r1], -r0
   113c0:	andeq	r5, r1, r0, ror #23
   113c4:	strdeq	r5, [r1], -r4
   113c8:	andeq	r5, r1, r0, lsl #24
   113cc:	andeq	r5, r1, ip, lsl #24
   113d0:	andeq	r5, r1, r8, lsl ip
   113d4:	andeq	r5, r1, r4, lsr #24
   113d8:	andeq	r5, r1, r0, lsr ip
   113dc:	addeq	r0, r0, r0
   113e0:	svcvc	0x007fffff
   113e4:	bl	10d90 <__printf_chk@plt>
   113e8:	add	r0, sp, #16
   113ec:	bl	118f8 <__snprintf_chk@plt+0xad8>
   113f0:	ldr	r1, [pc, #-144]	; 11368 <__snprintf_chk@plt+0x548>
   113f4:	mov	r2, r0
   113f8:	mov	r0, #1
   113fc:	bl	10d90 <__printf_chk@plt>
   11400:	mov	r3, r4
   11404:	strd	r8, [sp]
   11408:	add	r0, sp, #17
   1140c:	mov	r2, #21
   11410:	mov	r1, #1
   11414:	bl	10d6c <__sprintf_chk@plt>
   11418:	add	r2, sp, #17
   1141c:	ldr	r1, [pc, #-184]	; 1136c <__snprintf_chk@plt+0x54c>
   11420:	mov	r0, #1
   11424:	bl	10d90 <__printf_chk@plt>
   11428:	add	r0, sp, #16
   1142c:	bl	118f8 <__snprintf_chk@plt+0xad8>
   11430:	ldr	r1, [pc, #-200]	; 11370 <__snprintf_chk@plt+0x550>
   11434:	mov	r2, r0
   11438:	mov	r0, #1
   1143c:	bl	10d90 <__printf_chk@plt>
   11440:	mov	r2, #-2147483648	; 0x80000000
   11444:	mvn	r3, #0
   11448:	add	r0, sp, #17
   1144c:	strd	r2, [sp]
   11450:	mov	r1, #1
   11454:	mov	r3, r5
   11458:	mov	r2, #21
   1145c:	bl	10d6c <__sprintf_chk@plt>
   11460:	add	r2, sp, #17
   11464:	ldr	r1, [pc, #-248]	; 11374 <__snprintf_chk@plt+0x554>
   11468:	mov	r0, #1
   1146c:	bl	10d90 <__printf_chk@plt>
   11470:	add	r0, sp, #16
   11474:	bl	118f8 <__snprintf_chk@plt+0xad8>
   11478:	ldr	r1, [pc, #-264]	; 11378 <__snprintf_chk@plt+0x558>
   1147c:	mov	r2, r0
   11480:	mov	r0, #1
   11484:	bl	10d90 <__printf_chk@plt>
   11488:	mov	r3, r4
   1148c:	strd	r6, [sp]
   11490:	add	r0, sp, #17
   11494:	mov	r2, #21
   11498:	mov	r1, #1
   1149c:	bl	10d6c <__sprintf_chk@plt>
   114a0:	add	r2, sp, #17
   114a4:	ldr	r1, [pc, #-304]	; 1137c <__snprintf_chk@plt+0x55c>
   114a8:	mov	r0, #1
   114ac:	bl	10d90 <__printf_chk@plt>
   114b0:	add	r0, sp, #16
   114b4:	bl	118f8 <__snprintf_chk@plt+0xad8>
   114b8:	ldr	r1, [pc, #-320]	; 11380 <__snprintf_chk@plt+0x560>
   114bc:	mov	r2, r0
   114c0:	mov	r0, #1
   114c4:	bl	10d90 <__printf_chk@plt>
   114c8:	mov	r3, r4
   114cc:	strd	r6, [sp]
   114d0:	add	r0, sp, #17
   114d4:	mov	r2, #21
   114d8:	mov	r1, #1
   114dc:	bl	10d6c <__sprintf_chk@plt>
   114e0:	add	r2, sp, #17
   114e4:	ldr	r1, [pc, #-360]	; 11384 <__snprintf_chk@plt+0x564>
   114e8:	mov	r0, #1
   114ec:	bl	10d90 <__printf_chk@plt>
   114f0:	add	r0, sp, #16
   114f4:	bl	118f8 <__snprintf_chk@plt+0xad8>
   114f8:	ldr	r1, [pc, #-376]	; 11388 <__snprintf_chk@plt+0x568>
   114fc:	mov	r6, #0
   11500:	mov	r7, #-2147483648	; 0x80000000
   11504:	mov	r2, r0
   11508:	mov	r0, #1
   1150c:	bl	10d90 <__printf_chk@plt>
   11510:	mov	r3, r4
   11514:	strd	r8, [sp]
   11518:	add	r0, sp, #17
   1151c:	mov	r2, #21
   11520:	mov	r1, #1
   11524:	bl	10d6c <__sprintf_chk@plt>
   11528:	add	r2, sp, #17
   1152c:	ldr	r1, [pc, #-424]	; 1138c <__snprintf_chk@plt+0x56c>
   11530:	mov	r0, #1
   11534:	bl	10d90 <__printf_chk@plt>
   11538:	add	r0, sp, #16
   1153c:	bl	118f8 <__snprintf_chk@plt+0xad8>
   11540:	ldr	r1, [pc, #-440]	; 11390 <__snprintf_chk@plt+0x570>
   11544:	mvn	r8, #0
   11548:	mvn	r9, #-2147483648	; 0x80000000
   1154c:	mov	r2, r0
   11550:	mov	r0, #1
   11554:	bl	10d90 <__printf_chk@plt>
   11558:	mov	r2, #-2147483648	; 0x80000000
   1155c:	mvn	r3, #0
   11560:	add	r0, sp, #17
   11564:	strd	r2, [sp]
   11568:	mov	r1, #1
   1156c:	mov	r3, r5
   11570:	mov	r2, #21
   11574:	bl	10d6c <__sprintf_chk@plt>
   11578:	add	r2, sp, #17
   1157c:	ldr	r1, [pc, #-496]	; 11394 <__snprintf_chk@plt+0x574>
   11580:	mov	r0, #1
   11584:	bl	10d90 <__printf_chk@plt>
   11588:	add	r0, sp, #16
   1158c:	bl	118f8 <__snprintf_chk@plt+0xad8>
   11590:	ldr	r1, [pc, #-512]	; 11398 <__snprintf_chk@plt+0x578>
   11594:	mov	r2, r0
   11598:	mov	r0, #1
   1159c:	bl	10d90 <__printf_chk@plt>
   115a0:	mov	r3, r4
   115a4:	add	r0, sp, #17
   115a8:	strd	r8, [sp]
   115ac:	mov	r2, #21
   115b0:	mov	r1, #1
   115b4:	bl	10d6c <__sprintf_chk@plt>
   115b8:	add	r2, sp, #17
   115bc:	ldr	r1, [pc, #-552]	; 1139c <__snprintf_chk@plt+0x57c>
   115c0:	mov	r0, #1
   115c4:	bl	10d90 <__printf_chk@plt>
   115c8:	add	r0, sp, #16
   115cc:	bl	118f8 <__snprintf_chk@plt+0xad8>
   115d0:	ldr	r1, [pc, #-568]	; 113a0 <__snprintf_chk@plt+0x580>
   115d4:	mov	r2, r0
   115d8:	mov	r0, #1
   115dc:	bl	10d90 <__printf_chk@plt>
   115e0:	mov	r3, r5
   115e4:	strd	r6, [sp]
   115e8:	add	r0, sp, #17
   115ec:	mov	r2, #21
   115f0:	mov	r1, #1
   115f4:	bl	10d6c <__sprintf_chk@plt>
   115f8:	add	r2, sp, #17
   115fc:	ldr	r1, [pc, #-608]	; 113a4 <__snprintf_chk@plt+0x584>
   11600:	mov	r0, #1
   11604:	bl	10d90 <__printf_chk@plt>
   11608:	add	r0, sp, #16
   1160c:	bl	118f8 <__snprintf_chk@plt+0xad8>
   11610:	ldr	r1, [pc, #-624]	; 113a8 <__snprintf_chk@plt+0x588>
   11614:	mov	r2, r0
   11618:	mov	r0, #1
   1161c:	bl	10d90 <__printf_chk@plt>
   11620:	mov	r3, r4
   11624:	strd	r8, [sp]
   11628:	add	r0, sp, #17
   1162c:	mov	r2, #21
   11630:	mov	r1, #1
   11634:	bl	10d6c <__sprintf_chk@plt>
   11638:	add	r2, sp, #17
   1163c:	ldr	r1, [pc, #-664]	; 113ac <__snprintf_chk@plt+0x58c>
   11640:	mov	r0, #1
   11644:	bl	10d90 <__printf_chk@plt>
   11648:	add	r0, sp, #16
   1164c:	bl	118f8 <__snprintf_chk@plt+0xad8>
   11650:	ldr	r1, [pc, #-680]	; 113b0 <__snprintf_chk@plt+0x590>
   11654:	mov	r2, r0
   11658:	mov	r0, #1
   1165c:	bl	10d90 <__printf_chk@plt>
   11660:	mov	r3, r5
   11664:	strd	r6, [sp]
   11668:	add	r0, sp, #17
   1166c:	mov	r2, #21
   11670:	mov	r1, #1
   11674:	bl	10d6c <__sprintf_chk@plt>
   11678:	add	r2, sp, #17
   1167c:	ldr	r1, [pc, #-720]	; 113b4 <__snprintf_chk@plt+0x594>
   11680:	mov	r0, #1
   11684:	bl	10d90 <__printf_chk@plt>
   11688:	add	r0, sp, #16
   1168c:	bl	118f8 <__snprintf_chk@plt+0xad8>
   11690:	mvn	r6, #0
   11694:	mvn	r7, #0
   11698:	ldr	r1, [pc, #-744]	; 113b8 <__snprintf_chk@plt+0x598>
   1169c:	mov	r2, r0
   116a0:	mov	r0, #1
   116a4:	bl	10d90 <__printf_chk@plt>
   116a8:	mov	r3, r4
   116ac:	add	r0, sp, #17
   116b0:	strd	r6, [sp]
   116b4:	mov	r2, #21
   116b8:	mov	r1, #1
   116bc:	bl	10d6c <__sprintf_chk@plt>
   116c0:	add	r2, sp, #17
   116c4:	ldr	r1, [pc, #-784]	; 113bc <__snprintf_chk@plt+0x59c>
   116c8:	mov	r0, #1
   116cc:	bl	10d90 <__printf_chk@plt>
   116d0:	add	r0, sp, #16
   116d4:	bl	118f8 <__snprintf_chk@plt+0xad8>
   116d8:	ldr	r1, [pc, #-800]	; 113c0 <__snprintf_chk@plt+0x5a0>
   116dc:	mov	r2, r0
   116e0:	mov	r0, #1
   116e4:	bl	10d90 <__printf_chk@plt>
   116e8:	ldr	r1, [pc, #-812]	; 113c4 <__snprintf_chk@plt+0x5a4>
   116ec:	mov	r0, #1
   116f0:	bl	10d90 <__printf_chk@plt>
   116f4:	vldr	s0, [pc, #-800]	; 113dc <__snprintf_chk@plt+0x5bc>
   116f8:	bl	1196c <__snprintf_chk@plt+0xb4c>
   116fc:	ldr	r1, [pc, #-828]	; 113c8 <__snprintf_chk@plt+0x5a8>
   11700:	mov	r0, #1
   11704:	bl	10d90 <__printf_chk@plt>
   11708:	vldr	s0, [pc, #-816]	; 113e0 <__snprintf_chk@plt+0x5c0>
   1170c:	bl	1196c <__snprintf_chk@plt+0xb4c>
   11710:	ldr	r1, [pc, #-844]	; 113cc <__snprintf_chk@plt+0x5ac>
   11714:	mov	r0, #1
   11718:	bl	10d90 <__printf_chk@plt>
   1171c:	mov	r3, sl
   11720:	vmov.f64	d0, d9
   11724:	mov	r2, #1
   11728:	mov	r1, #40	; 0x28
   1172c:	add	r0, sp, #40	; 0x28
   11730:	bl	11d68 <__snprintf_chk@plt+0xf48>
   11734:	add	r0, sp, #40	; 0x28
   11738:	bl	10cf4 <puts@plt>
   1173c:	ldr	r1, [pc, #-884]	; 113d0 <__snprintf_chk@plt+0x5b0>
   11740:	mov	r0, #1
   11744:	bl	10d90 <__printf_chk@plt>
   11748:	mov	r3, sl
   1174c:	vmov.f64	d0, d8
   11750:	mov	r2, #1
   11754:	mov	r1, #40	; 0x28
   11758:	add	r0, sp, #40	; 0x28
   1175c:	bl	11d68 <__snprintf_chk@plt+0xf48>
   11760:	add	r0, sp, #40	; 0x28
   11764:	bl	10cf4 <puts@plt>
   11768:	ldr	r1, [pc, #-924]	; 113d4 <__snprintf_chk@plt+0x5b4>
   1176c:	mov	r0, #1
   11770:	bl	10d90 <__printf_chk@plt>
   11774:	vmov.f64	d0, d9
   11778:	mov	r3, sl
   1177c:	mov	r2, #1
   11780:	mov	r1, #40	; 0x28
   11784:	add	r0, sp, #40	; 0x28
   11788:	bl	11ff8 <__snprintf_chk@plt+0x11d8>
   1178c:	add	r0, sp, #40	; 0x28
   11790:	bl	10cf4 <puts@plt>
   11794:	ldr	r1, [pc, #-964]	; 113d8 <__snprintf_chk@plt+0x5b8>
   11798:	mov	r0, #1
   1179c:	bl	10d90 <__printf_chk@plt>
   117a0:	vmov.f64	d0, d8
   117a4:	mov	r3, sl
   117a8:	mov	r2, #1
   117ac:	mov	r1, #40	; 0x28
   117b0:	add	r0, sp, #40	; 0x28
   117b4:	bl	11ff8 <__snprintf_chk@plt+0x11d8>
   117b8:	add	r0, sp, #40	; 0x28
   117bc:	bl	10cf4 <puts@plt>
   117c0:	mov	r0, sl
   117c4:	add	sp, sp, #80	; 0x50
   117c8:	vpop	{d8-d9}
   117cc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   117d0:	mov	fp, #0
   117d4:	mov	lr, #0
   117d8:	pop	{r1}		; (ldr r1, [sp], #4)
   117dc:	mov	r2, sp
   117e0:	push	{r2}		; (str r2, [sp, #-4]!)
   117e4:	push	{r0}		; (str r0, [sp, #-4]!)
   117e8:	ldr	ip, [pc, #16]	; 11800 <__snprintf_chk@plt+0x9e0>
   117ec:	push	{ip}		; (str ip, [sp, #-4]!)
   117f0:	ldr	r0, [pc, #12]	; 11804 <__snprintf_chk@plt+0x9e4>
   117f4:	ldr	r3, [pc, #12]	; 11808 <__snprintf_chk@plt+0x9e8>
   117f8:	bl	10d0c <__libc_start_main@plt>
   117fc:	bl	10e14 <abort@plt>
   11800:	andeq	r5, r1, r0, lsr #12
   11804:	andeq	r0, r1, r0, lsr lr
   11808:	andeq	r5, r1, r0, asr #11
   1180c:	ldr	r3, [pc, #20]	; 11828 <__snprintf_chk@plt+0xa08>
   11810:	ldr	r2, [pc, #20]	; 1182c <__snprintf_chk@plt+0xa0c>
   11814:	add	r3, pc, r3
   11818:	ldr	r2, [r3, r2]
   1181c:	cmp	r2, #0
   11820:	bxeq	lr
   11824:	b	10d24 <__gmon_start__@plt>
   11828:	andeq	r5, r1, r4, ror #15
   1182c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11830:	ldr	r3, [pc, #28]	; 11854 <__snprintf_chk@plt+0xa34>
   11834:	ldr	r0, [pc, #28]	; 11858 <__snprintf_chk@plt+0xa38>
   11838:	sub	r3, r3, r0
   1183c:	cmp	r3, #6
   11840:	bxls	lr
   11844:	ldr	r3, [pc, #16]	; 1185c <__snprintf_chk@plt+0xa3c>
   11848:	cmp	r3, #0
   1184c:	bxeq	lr
   11850:	bx	r3
   11854:	andeq	r7, r2, r3, lsr #2
   11858:	andeq	r7, r2, r0, lsr #2
   1185c:	andeq	r0, r0, r0
   11860:	ldr	r1, [pc, #36]	; 1188c <__snprintf_chk@plt+0xa6c>
   11864:	ldr	r0, [pc, #36]	; 11890 <__snprintf_chk@plt+0xa70>
   11868:	sub	r1, r1, r0
   1186c:	asr	r1, r1, #2
   11870:	add	r1, r1, r1, lsr #31
   11874:	asrs	r1, r1, #1
   11878:	bxeq	lr
   1187c:	ldr	r3, [pc, #16]	; 11894 <__snprintf_chk@plt+0xa74>
   11880:	cmp	r3, #0
   11884:	bxeq	lr
   11888:	bx	r3
   1188c:	andeq	r7, r2, r0, lsr #2
   11890:	andeq	r7, r2, r0, lsr #2
   11894:	andeq	r0, r0, r0
   11898:	push	{r4, lr}
   1189c:	ldr	r4, [pc, #24]	; 118bc <__snprintf_chk@plt+0xa9c>
   118a0:	ldrb	r3, [r4]
   118a4:	cmp	r3, #0
   118a8:	popne	{r4, pc}
   118ac:	bl	11830 <__snprintf_chk@plt+0xa10>
   118b0:	mov	r3, #1
   118b4:	strb	r3, [r4]
   118b8:	pop	{r4, pc}
   118bc:	andeq	r7, r2, ip, lsr r1
   118c0:	ldr	r0, [pc, #40]	; 118f0 <__snprintf_chk@plt+0xad0>
   118c4:	ldr	r3, [r0]
   118c8:	cmp	r3, #0
   118cc:	bne	118d4 <__snprintf_chk@plt+0xab4>
   118d0:	b	11860 <__snprintf_chk@plt+0xa40>
   118d4:	ldr	r3, [pc, #24]	; 118f4 <__snprintf_chk@plt+0xad4>
   118d8:	cmp	r3, #0
   118dc:	beq	118d0 <__snprintf_chk@plt+0xab0>
   118e0:	push	{r4, lr}
   118e4:	blx	r3
   118e8:	pop	{r4, lr}
   118ec:	b	11860 <__snprintf_chk@plt+0xa40>
   118f0:	andeq	r6, r2, r4, lsl pc
   118f4:	andeq	r0, r0, r0
   118f8:	push	{r4, r5, r6, lr}
   118fc:	ldrb	r5, [r0, #1]
   11900:	sub	r4, r5, #45	; 0x2d
   11904:	clz	r4, r4
   11908:	lsr	r4, r4, #5
   1190c:	add	r4, r4, #1
   11910:	add	r4, r0, r4
   11914:	mov	r0, r4
   11918:	bl	10d54 <strlen@plt>
   1191c:	mov	r1, #48	; 0x30
   11920:	strb	r1, [r4, #-1]
   11924:	add	r0, r4, r0
   11928:	sub	r3, r0, #1
   1192c:	ldrb	r2, [r0, #-1]
   11930:	cmp	r2, #57	; 0x39
   11934:	bne	11948 <__snprintf_chk@plt+0xb28>
   11938:	strb	r1, [r3]
   1193c:	ldrb	r2, [r3, #-1]!
   11940:	cmp	r2, #57	; 0x39
   11944:	beq	11938 <__snprintf_chk@plt+0xb18>
   11948:	cmp	r4, r3
   1194c:	movcc	r0, r4
   11950:	movcs	r0, r3
   11954:	add	r2, r2, #1
   11958:	cmp	r5, #45	; 0x2d
   1195c:	strb	r2, [r3]
   11960:	strbeq	r5, [r0, #-1]
   11964:	subeq	r0, r0, #1
   11968:	pop	{r4, r5, r6, pc}
   1196c:	push	{lr}		; (str lr, [sp, #-4]!)
   11970:	sub	sp, sp, #36	; 0x24
   11974:	mov	r3, #0
   11978:	mov	r2, #1
   1197c:	mov	r1, #31
   11980:	mov	r0, sp
   11984:	bl	11eb0 <__snprintf_chk@plt+0x1090>
   11988:	mov	r0, sp
   1198c:	bl	10cf4 <puts@plt>
   11990:	add	sp, sp, #36	; 0x24
   11994:	pop	{pc}		; (ldr pc, [sp], #4)
   11998:	subs	r6, r0, #0
   1199c:	push	{r7, lr}
   119a0:	sub	sp, sp, #56	; 0x38
   119a4:	beq	119e0 <__snprintf_chk@plt+0xbc0>
   119a8:	ldr	r3, [pc, #612]	; 11c14 <__snprintf_chk@plt+0xdf4>
   119ac:	mov	r2, #5
   119b0:	ldr	r1, [pc, #608]	; 11c18 <__snprintf_chk@plt+0xdf8>
   119b4:	mov	r0, #0
   119b8:	ldr	r4, [r3]
   119bc:	bl	10c70 <dcgettext@plt>
   119c0:	ldr	r3, [pc, #596]	; 11c1c <__snprintf_chk@plt+0xdfc>
   119c4:	mov	r1, #1
   119c8:	ldr	r3, [r3]
   119cc:	mov	r2, r0
   119d0:	mov	r0, r4
   119d4:	bl	10db4 <__fprintf_chk@plt>
   119d8:	mov	r0, r6
   119dc:	bl	10d48 <exit@plt>
   119e0:	mov	r2, #5
   119e4:	ldr	r1, [pc, #564]	; 11c20 <__snprintf_chk@plt+0xe00>
   119e8:	bl	10c70 <dcgettext@plt>
   119ec:	ldr	r3, [pc, #552]	; 11c1c <__snprintf_chk@plt+0xdfc>
   119f0:	ldr	r7, [pc, #556]	; 11c24 <__snprintf_chk@plt+0xe04>
   119f4:	ldr	r4, [pc, #556]	; 11c28 <__snprintf_chk@plt+0xe08>
   119f8:	ldr	r2, [r3]
   119fc:	mov	r1, r0
   11a00:	mov	r0, #1
   11a04:	bl	10d90 <__printf_chk@plt>
   11a08:	mov	r2, #5
   11a0c:	ldr	r1, [pc, #536]	; 11c2c <__snprintf_chk@plt+0xe0c>
   11a10:	mov	r0, r6
   11a14:	bl	10c70 <dcgettext@plt>
   11a18:	ldr	r1, [r7]
   11a1c:	bl	10bec <fputs_unlocked@plt>
   11a20:	mov	r2, #5
   11a24:	ldr	r1, [pc, #516]	; 11c30 <__snprintf_chk@plt+0xe10>
   11a28:	mov	r0, r6
   11a2c:	bl	10c70 <dcgettext@plt>
   11a30:	ldr	r1, [r7]
   11a34:	bl	10bec <fputs_unlocked@plt>
   11a38:	mov	r2, #5
   11a3c:	ldr	r1, [pc, #496]	; 11c34 <__snprintf_chk@plt+0xe14>
   11a40:	mov	r0, r6
   11a44:	bl	10c70 <dcgettext@plt>
   11a48:	ldr	r1, [r7]
   11a4c:	bl	10bec <fputs_unlocked@plt>
   11a50:	ldm	r4!, {r0, r1, r2, r3}
   11a54:	mov	lr, sp
   11a58:	stmia	lr!, {r0, r1, r2, r3}
   11a5c:	ldm	r4!, {r0, r1, r2, r3}
   11a60:	ldr	ip, [sp]
   11a64:	stmia	lr!, {r0, r1, r2, r3}
   11a68:	cmp	ip, #0
   11a6c:	ldm	r4!, {r0, r1, r2, r3}
   11a70:	stmia	lr!, {r0, r1, r2, r3}
   11a74:	ldm	r4, {r0, r1}
   11a78:	moveq	r4, sp
   11a7c:	stm	lr, {r0, r1}
   11a80:	beq	11ab0 <__snprintf_chk@plt+0xc90>
   11a84:	ldr	r5, [pc, #428]	; 11c38 <__snprintf_chk@plt+0xe18>
   11a88:	mov	r4, sp
   11a8c:	b	11a9c <__snprintf_chk@plt+0xc7c>
   11a90:	ldr	ip, [r4, #8]!
   11a94:	cmp	ip, #0
   11a98:	beq	11ab0 <__snprintf_chk@plt+0xc90>
   11a9c:	mov	r1, ip
   11aa0:	mov	r0, r5
   11aa4:	bl	10c04 <strcmp@plt>
   11aa8:	cmp	r0, #0
   11aac:	bne	11a90 <__snprintf_chk@plt+0xc70>
   11ab0:	ldr	r4, [r4, #4]
   11ab4:	mov	r2, #5
   11ab8:	cmp	r4, #0
   11abc:	ldr	r1, [pc, #376]	; 11c3c <__snprintf_chk@plt+0xe1c>
   11ac0:	beq	11b68 <__snprintf_chk@plt+0xd48>
   11ac4:	mov	r0, #0
   11ac8:	bl	10c70 <dcgettext@plt>
   11acc:	ldr	r3, [pc, #364]	; 11c40 <__snprintf_chk@plt+0xe20>
   11ad0:	ldr	r2, [pc, #364]	; 11c44 <__snprintf_chk@plt+0xe24>
   11ad4:	mov	r1, r0
   11ad8:	mov	r0, #1
   11adc:	bl	10d90 <__printf_chk@plt>
   11ae0:	mov	r1, #0
   11ae4:	mov	r0, #5
   11ae8:	bl	10dd8 <setlocale@plt>
   11aec:	cmp	r0, #0
   11af0:	ldreq	r5, [pc, #320]	; 11c38 <__snprintf_chk@plt+0xe18>
   11af4:	beq	11b10 <__snprintf_chk@plt+0xcf0>
   11af8:	mov	r2, #3
   11afc:	ldr	r1, [pc, #324]	; 11c48 <__snprintf_chk@plt+0xe28>
   11b00:	bl	10e08 <strncmp@plt>
   11b04:	ldr	r5, [pc, #300]	; 11c38 <__snprintf_chk@plt+0xe18>
   11b08:	cmp	r0, #0
   11b0c:	bne	11bf8 <__snprintf_chk@plt+0xdd8>
   11b10:	mov	r2, #5
   11b14:	ldr	r1, [pc, #304]	; 11c4c <__snprintf_chk@plt+0xe2c>
   11b18:	mov	r0, #0
   11b1c:	bl	10c70 <dcgettext@plt>
   11b20:	ldr	r3, [pc, #272]	; 11c38 <__snprintf_chk@plt+0xe18>
   11b24:	ldr	r2, [pc, #276]	; 11c40 <__snprintf_chk@plt+0xe20>
   11b28:	mov	r1, r0
   11b2c:	mov	r0, #1
   11b30:	bl	10d90 <__printf_chk@plt>
   11b34:	mov	r2, #5
   11b38:	ldr	r1, [pc, #272]	; 11c50 <__snprintf_chk@plt+0xe30>
   11b3c:	mov	r0, #0
   11b40:	bl	10c70 <dcgettext@plt>
   11b44:	ldr	r2, [pc, #264]	; 11c54 <__snprintf_chk@plt+0xe34>
   11b48:	cmp	r4, r5
   11b4c:	ldr	r3, [pc, #260]	; 11c58 <__snprintf_chk@plt+0xe38>
   11b50:	movne	r3, r2
   11b54:	mov	r1, r0
   11b58:	mov	r2, r4
   11b5c:	mov	r0, #1
   11b60:	bl	10d90 <__printf_chk@plt>
   11b64:	b	119d8 <__snprintf_chk@plt+0xbb8>
   11b68:	mov	r0, r4
   11b6c:	bl	10c70 <dcgettext@plt>
   11b70:	ldr	r3, [pc, #200]	; 11c40 <__snprintf_chk@plt+0xe20>
   11b74:	ldr	r2, [pc, #200]	; 11c44 <__snprintf_chk@plt+0xe24>
   11b78:	mov	r1, r0
   11b7c:	mov	r0, #1
   11b80:	bl	10d90 <__printf_chk@plt>
   11b84:	mov	r1, r4
   11b88:	mov	r0, #5
   11b8c:	bl	10dd8 <setlocale@plt>
   11b90:	cmp	r0, #0
   11b94:	beq	11bac <__snprintf_chk@plt+0xd8c>
   11b98:	mov	r2, #3
   11b9c:	ldr	r1, [pc, #164]	; 11c48 <__snprintf_chk@plt+0xe28>
   11ba0:	bl	10e08 <strncmp@plt>
   11ba4:	cmp	r0, #0
   11ba8:	bne	11bf0 <__snprintf_chk@plt+0xdd0>
   11bac:	mov	r2, #5
   11bb0:	ldr	r1, [pc, #148]	; 11c4c <__snprintf_chk@plt+0xe2c>
   11bb4:	mov	r0, #0
   11bb8:	bl	10c70 <dcgettext@plt>
   11bbc:	ldr	r3, [pc, #116]	; 11c38 <__snprintf_chk@plt+0xe18>
   11bc0:	ldr	r2, [pc, #120]	; 11c40 <__snprintf_chk@plt+0xe20>
   11bc4:	mov	r4, r3
   11bc8:	mov	r1, r0
   11bcc:	mov	r0, #1
   11bd0:	bl	10d90 <__printf_chk@plt>
   11bd4:	ldr	r1, [pc, #116]	; 11c50 <__snprintf_chk@plt+0xe30>
   11bd8:	mov	r2, #5
   11bdc:	mov	r0, #0
   11be0:	bl	10c70 <dcgettext@plt>
   11be4:	ldr	r3, [pc, #108]	; 11c58 <__snprintf_chk@plt+0xe38>
   11be8:	mov	r1, r0
   11bec:	b	11b58 <__snprintf_chk@plt+0xd38>
   11bf0:	ldr	r5, [pc, #64]	; 11c38 <__snprintf_chk@plt+0xe18>
   11bf4:	mov	r4, r5
   11bf8:	mov	r2, #5
   11bfc:	ldr	r1, [pc, #88]	; 11c5c <__snprintf_chk@plt+0xe3c>
   11c00:	mov	r0, #0
   11c04:	bl	10c70 <dcgettext@plt>
   11c08:	ldr	r1, [r7]
   11c0c:	bl	10bec <fputs_unlocked@plt>
   11c10:	b	11b10 <__snprintf_chk@plt+0xcf0>
   11c14:	andeq	r7, r2, r0, lsr r1
   11c18:	andeq	r5, r1, ip, lsl #13
   11c1c:	andeq	r7, r2, r8, asr #2
   11c20:			; <UNDEFINED> instruction: 0x000156b4
   11c24:	andeq	r7, r2, r4, lsr r1
   11c28:	andeq	r5, r1, r8, asr #12
   11c2c:	andeq	r5, r1, r0, asr #13
   11c30:	andeq	r5, r1, ip, lsl #14
   11c34:	andeq	r5, r1, ip, lsr r7
   11c38:	andeq	r5, r1, r0, lsl #13
   11c3c:	andeq	r5, r1, r4, ror r7
   11c40:	andeq	r5, r1, ip, lsl #15
   11c44:			; <UNDEFINED> instruction: 0x000157b4
   11c48:	andeq	r5, r1, r4, asr #15
   11c4c:	andeq	r5, r1, r0, lsl r8
   11c50:	andeq	r5, r1, ip, lsr #16
   11c54:	andeq	r5, r1, r8, lsl #14
   11c58:	andeq	r5, r1, r4, asr #24
   11c5c:	andeq	r5, r1, r8, asr #15
   11c60:	ldr	r3, [pc, #4]	; 11c6c <__snprintf_chk@plt+0xe4c>
   11c64:	str	r0, [r3]
   11c68:	bx	lr
   11c6c:	andeq	r7, r2, r0, asr #2
   11c70:	ldr	r3, [pc, #4]	; 11c7c <__snprintf_chk@plt+0xe5c>
   11c74:	strb	r0, [r3, #4]
   11c78:	bx	lr
   11c7c:	andeq	r7, r2, r0, asr #2
   11c80:	ldr	r3, [pc, #192]	; 11d48 <__snprintf_chk@plt+0xf28>
   11c84:	push	{r4, r5, r6, lr}
   11c88:	sub	sp, sp, #8
   11c8c:	ldr	r0, [r3]
   11c90:	bl	14d28 <__snprintf_chk@plt+0x3f08>
   11c94:	cmp	r0, #0
   11c98:	beq	11cbc <__snprintf_chk@plt+0xe9c>
   11c9c:	ldr	r4, [pc, #168]	; 11d4c <__snprintf_chk@plt+0xf2c>
   11ca0:	ldrb	r3, [r4, #4]
   11ca4:	cmp	r3, #0
   11ca8:	beq	11cd8 <__snprintf_chk@plt+0xeb8>
   11cac:	bl	10d60 <__errno_location@plt>
   11cb0:	ldr	r3, [r0]
   11cb4:	cmp	r3, #32
   11cb8:	bne	11cd8 <__snprintf_chk@plt+0xeb8>
   11cbc:	ldr	r3, [pc, #140]	; 11d50 <__snprintf_chk@plt+0xf30>
   11cc0:	ldr	r0, [r3]
   11cc4:	bl	14d28 <__snprintf_chk@plt+0x3f08>
   11cc8:	cmp	r0, #0
   11ccc:	bne	11d20 <__snprintf_chk@plt+0xf00>
   11cd0:	add	sp, sp, #8
   11cd4:	pop	{r4, r5, r6, pc}
   11cd8:	mov	r2, #5
   11cdc:	ldr	r1, [pc, #112]	; 11d54 <__snprintf_chk@plt+0xf34>
   11ce0:	mov	r0, #0
   11ce4:	bl	10c70 <dcgettext@plt>
   11ce8:	ldr	r4, [r4]
   11cec:	cmp	r4, #0
   11cf0:	mov	r5, r0
   11cf4:	beq	11d2c <__snprintf_chk@plt+0xf0c>
   11cf8:	bl	10d60 <__errno_location@plt>
   11cfc:	ldr	r6, [r0]
   11d00:	mov	r0, r4
   11d04:	bl	14000 <__snprintf_chk@plt+0x31e0>
   11d08:	mov	r1, r6
   11d0c:	str	r5, [sp]
   11d10:	ldr	r2, [pc, #64]	; 11d58 <__snprintf_chk@plt+0xf38>
   11d14:	mov	r3, r0
   11d18:	mov	r0, #0
   11d1c:	bl	10cdc <error@plt>
   11d20:	ldr	r3, [pc, #52]	; 11d5c <__snprintf_chk@plt+0xf3c>
   11d24:	ldr	r0, [r3]
   11d28:	bl	10c28 <_exit@plt>
   11d2c:	bl	10d60 <__errno_location@plt>
   11d30:	mov	r3, r5
   11d34:	ldr	r2, [pc, #36]	; 11d60 <__snprintf_chk@plt+0xf40>
   11d38:	ldr	r1, [r0]
   11d3c:	mov	r0, r4
   11d40:	bl	10cdc <error@plt>
   11d44:	b	11d20 <__snprintf_chk@plt+0xf00>
   11d48:	andeq	r7, r2, r4, lsr r1
   11d4c:	andeq	r7, r2, r0, asr #2
   11d50:	andeq	r7, r2, r0, lsr r1
   11d54:	andeq	r5, r1, r8, lsr #25
   11d58:			; <UNDEFINED> instruction: 0x00015cb4
   11d5c:	ldrdeq	r7, [r2], -ip
   11d60:			; <UNDEFINED> instruction: 0x00015cb8
   11d64:	andeq	r0, r0, r0
   11d68:	vcmpe.f64	d0, #0.0
   11d6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11d70:	vldr	d7, [pc, #304]	; 11ea8 <__snprintf_chk@plt+0x1088>
   11d74:	vpush	{d8}
   11d78:	vmrs	APSR_nzcv, fpscr
   11d7c:	mov	r6, r0
   11d80:	and	r4, r2, #1
   11d84:	sub	sp, sp, #44	; 0x2c
   11d88:	vnegmi.f64	d6, d0
   11d8c:	vmovpl.f64	d6, d0
   11d90:	add	r0, sp, #40	; 0x28
   11d94:	mov	r7, #37	; 0x25
   11d98:	mov	r5, r1
   11d9c:	vcmpe.f64	d6, d7
   11da0:	lsr	r1, r2, #1
   11da4:	mov	sl, r3
   11da8:	mov	r3, #45	; 0x2d
   11dac:	strb	r3, [r0, #-11]!
   11db0:	strb	r7, [sp, #28]
   11db4:	tst	r2, #16
   11db8:	add	lr, r0, r4
   11dbc:	and	r1, r1, #1
   11dc0:	lsr	r3, r2, #2
   11dc4:	mov	r7, #43	; 0x2b
   11dc8:	strb	r7, [r0, r4]
   11dcc:	and	r3, r3, #1
   11dd0:	add	r0, lr, r1
   11dd4:	moveq	ip, #103	; 0x67
   11dd8:	movne	ip, #71	; 0x47
   11ddc:	mov	r4, #32
   11de0:	vmrs	APSR_nzcv, fpscr
   11de4:	lsr	r2, r2, #3
   11de8:	strb	r4, [lr, r1]
   11dec:	and	r2, r2, #1
   11df0:	add	lr, r0, r3
   11df4:	mov	r4, #48	; 0x30
   11df8:	strb	r4, [r0, r3]
   11dfc:	add	r3, lr, r2
   11e00:	mov	r0, #42	; 0x2a
   11e04:	strb	r0, [lr, r2]
   11e08:	mov	r1, #0
   11e0c:	mov	r2, #46	; 0x2e
   11e10:	vmov.f64	d8, d0
   11e14:	movmi	r4, #1
   11e18:	movpl	r4, #15
   11e1c:	strb	r0, [r3, #2]
   11e20:	strb	r2, [r3, #1]
   11e24:	add	r9, sp, #28
   11e28:	strb	ip, [r3, #3]
   11e2c:	mvn	r8, #0
   11e30:	strb	r1, [r3, #4]
   11e34:	mov	r7, #1
   11e38:	b	11e40 <__snprintf_chk@plt+0x1020>
   11e3c:	add	r4, r4, #1
   11e40:	mov	r2, r7
   11e44:	mov	r3, r8
   11e48:	vstr	d8, [sp, #16]
   11e4c:	str	r4, [sp, #8]
   11e50:	stm	sp, {r9, sl}
   11e54:	mov	r1, r5
   11e58:	mov	r0, r6
   11e5c:	bl	10e20 <__snprintf_chk@plt>
   11e60:	cmp	r4, #16
   11e64:	movle	r2, #0
   11e68:	movgt	r2, #1
   11e6c:	orrs	r3, r2, r0, lsr #31
   11e70:	mov	fp, r0
   11e74:	bne	11e98 <__snprintf_chk@plt+0x1078>
   11e78:	cmp	r5, r0
   11e7c:	bls	11e3c <__snprintf_chk@plt+0x101c>
   11e80:	mov	r1, #0
   11e84:	mov	r0, r6
   11e88:	bl	10d9c <strtod@plt>
   11e8c:	vcmp.f64	d8, d0
   11e90:	vmrs	APSR_nzcv, fpscr
   11e94:	bne	11e3c <__snprintf_chk@plt+0x101c>
   11e98:	mov	r0, fp
   11e9c:	add	sp, sp, #44	; 0x2c
   11ea0:	vpop	{d8}
   11ea4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11ea8:	andeq	r0, r0, r0
   11eac:	andseq	r0, r0, r0
   11eb0:	vcmpe.f32	s0, #0.0
   11eb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11eb8:	vldr	s15, [pc, #308]	; 11ff4 <__snprintf_chk@plt+0x11d4>
   11ebc:	vpush	{d8-d9}
   11ec0:	vmrs	APSR_nzcv, fpscr
   11ec4:	mov	r6, r0
   11ec8:	and	r4, r2, #1
   11ecc:	sub	sp, sp, #44	; 0x2c
   11ed0:	vnegmi.f32	s14, s0
   11ed4:	vmovpl.f32	s14, s0
   11ed8:	add	r0, sp, #40	; 0x28
   11edc:	mov	r7, #37	; 0x25
   11ee0:	mov	r5, r1
   11ee4:	vcmpe.f32	s14, s15
   11ee8:	lsr	r1, r2, #1
   11eec:	mov	sl, r3
   11ef0:	mov	r3, #45	; 0x2d
   11ef4:	strb	r3, [r0, #-11]!
   11ef8:	strb	r7, [sp, #28]
   11efc:	tst	r2, #16
   11f00:	add	lr, r0, r4
   11f04:	and	r1, r1, #1
   11f08:	lsr	r3, r2, #2
   11f0c:	mov	r7, #43	; 0x2b
   11f10:	strb	r7, [r0, r4]
   11f14:	and	r3, r3, #1
   11f18:	add	r0, lr, r1
   11f1c:	moveq	ip, #103	; 0x67
   11f20:	movne	ip, #71	; 0x47
   11f24:	mov	r4, #32
   11f28:	vmrs	APSR_nzcv, fpscr
   11f2c:	lsr	r2, r2, #3
   11f30:	strb	r4, [lr, r1]
   11f34:	and	r2, r2, #1
   11f38:	add	lr, r0, r3
   11f3c:	mov	r4, #48	; 0x30
   11f40:	strb	r4, [r0, r3]
   11f44:	add	r3, lr, r2
   11f48:	mov	r0, #42	; 0x2a
   11f4c:	strb	r0, [lr, r2]
   11f50:	mov	r1, #0
   11f54:	mov	r2, #46	; 0x2e
   11f58:	vmov.f32	s18, s0
   11f5c:	vcvt.f64.f32	d8, s0
   11f60:	movmi	r4, #1
   11f64:	movpl	r4, #6
   11f68:	strb	r0, [r3, #2]
   11f6c:	strb	r2, [r3, #1]
   11f70:	add	r9, sp, #28
   11f74:	strb	ip, [r3, #3]
   11f78:	mvn	r8, #0
   11f7c:	strb	r1, [r3, #4]
   11f80:	mov	r7, #1
   11f84:	b	11f8c <__snprintf_chk@plt+0x116c>
   11f88:	add	r4, r4, #1
   11f8c:	mov	r2, r7
   11f90:	mov	r3, r8
   11f94:	vstr	d8, [sp, #16]
   11f98:	str	r4, [sp, #8]
   11f9c:	stm	sp, {r9, sl}
   11fa0:	mov	r1, r5
   11fa4:	mov	r0, r6
   11fa8:	bl	10e20 <__snprintf_chk@plt>
   11fac:	cmp	r4, #8
   11fb0:	movle	r2, #0
   11fb4:	movgt	r2, #1
   11fb8:	orrs	r3, r2, r0, lsr #31
   11fbc:	mov	fp, r0
   11fc0:	bne	11fe4 <__snprintf_chk@plt+0x11c4>
   11fc4:	cmp	r5, r0
   11fc8:	bls	11f88 <__snprintf_chk@plt+0x1168>
   11fcc:	mov	r1, #0
   11fd0:	mov	r0, r6
   11fd4:	bl	10ce8 <strtof@plt>
   11fd8:	vcmp.f32	s18, s0
   11fdc:	vmrs	APSR_nzcv, fpscr
   11fe0:	bne	11f88 <__snprintf_chk@plt+0x1168>
   11fe4:	mov	r0, fp
   11fe8:	add	sp, sp, #44	; 0x2c
   11fec:	vpop	{d8-d9}
   11ff0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11ff4:	addeq	r0, r0, r0
   11ff8:	vcmpe.f64	d0, #0.0
   11ffc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12000:	vpush	{d8}
   12004:	vldr	d7, [pc, #308]	; 12140 <__snprintf_chk@plt+0x1320>
   12008:	vmrs	APSR_nzcv, fpscr
   1200c:	mov	r6, r0
   12010:	sub	sp, sp, #44	; 0x2c
   12014:	add	r0, sp, #40	; 0x28
   12018:	vnegmi.f64	d6, d0
   1201c:	vmovpl.f64	d6, d0
   12020:	and	r4, r2, #1
   12024:	mov	r7, #37	; 0x25
   12028:	mov	r5, r1
   1202c:	vcmpe.f64	d6, d7
   12030:	lsr	r1, r2, #1
   12034:	mov	sl, r3
   12038:	mov	r3, #45	; 0x2d
   1203c:	strb	r3, [r0, #-11]!
   12040:	strb	r7, [sp, #28]
   12044:	add	lr, r0, r4
   12048:	and	r1, r1, #1
   1204c:	lsr	r3, r2, #2
   12050:	mov	r7, #43	; 0x2b
   12054:	strb	r7, [r0, r4]
   12058:	tst	r2, #16
   1205c:	add	r0, lr, r1
   12060:	and	r3, r3, #1
   12064:	mov	r4, #32
   12068:	lsr	r2, r2, #3
   1206c:	strb	r4, [lr, r1]
   12070:	and	r2, r2, #1
   12074:	add	lr, r0, r3
   12078:	mov	r4, #48	; 0x30
   1207c:	moveq	ip, #103	; 0x67
   12080:	movne	ip, #71	; 0x47
   12084:	vmrs	APSR_nzcv, fpscr
   12088:	strb	r4, [r0, r3]
   1208c:	add	r3, lr, r2
   12090:	mov	r0, #42	; 0x2a
   12094:	strb	r0, [lr, r2]
   12098:	mov	r2, #46	; 0x2e
   1209c:	mov	r1, #0
   120a0:	strb	r2, [r3, #1]
   120a4:	mov	r2, #76	; 0x4c
   120a8:	vmov.f64	d8, d0
   120ac:	movmi	r4, #1
   120b0:	movpl	r4, #15
   120b4:	strb	r0, [r3, #2]
   120b8:	strb	r2, [r3, #3]
   120bc:	add	r9, sp, #28
   120c0:	strb	ip, [r3, #4]
   120c4:	mvn	r8, #0
   120c8:	strb	r1, [r3, #5]
   120cc:	mov	r7, #1
   120d0:	b	120d8 <__snprintf_chk@plt+0x12b8>
   120d4:	add	r4, r4, #1
   120d8:	mov	r2, r7
   120dc:	mov	r3, r8
   120e0:	vstr	d8, [sp, #16]
   120e4:	str	r4, [sp, #8]
   120e8:	stm	sp, {r9, sl}
   120ec:	mov	r1, r5
   120f0:	mov	r0, r6
   120f4:	bl	10e20 <__snprintf_chk@plt>
   120f8:	cmp	r4, #16
   120fc:	movle	r2, #0
   12100:	movgt	r2, #1
   12104:	orrs	r3, r2, r0, lsr #31
   12108:	mov	fp, r0
   1210c:	bne	12130 <__snprintf_chk@plt+0x1310>
   12110:	cmp	r5, r0
   12114:	bls	120d4 <__snprintf_chk@plt+0x12b4>
   12118:	mov	r1, #0
   1211c:	mov	r0, r6
   12120:	bl	10c4c <strtold@plt>
   12124:	vcmp.f64	d8, d0
   12128:	vmrs	APSR_nzcv, fpscr
   1212c:	bne	120d4 <__snprintf_chk@plt+0x12b4>
   12130:	mov	r0, fp
   12134:	add	sp, sp, #44	; 0x2c
   12138:	vpop	{d8}
   1213c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12140:	andeq	r0, r0, r0
   12144:	andseq	r0, r0, r0
   12148:	push	{r4, r5, r6, r7, r8, lr}
   1214c:	cmp	r0, #2
   12150:	ldr	r4, [pc, #148]	; 121ec <__snprintf_chk@plt+0x13cc>
   12154:	mov	r5, #0
   12158:	sub	sp, sp, #16
   1215c:	ldr	r6, [r4]
   12160:	str	r5, [r4]
   12164:	beq	12180 <__snprintf_chk@plt+0x1360>
   12168:	ldr	r3, [pc, #128]	; 121f0 <__snprintf_chk@plt+0x13d0>
   1216c:	mov	r2, #0
   12170:	str	r6, [r4]
   12174:	str	r2, [r3]
   12178:	add	sp, sp, #16
   1217c:	pop	{r4, r5, r6, r7, r8, pc}
   12180:	mov	r8, r3
   12184:	mov	r7, r2
   12188:	str	r5, [sp]
   1218c:	ldr	r3, [pc, #96]	; 121f4 <__snprintf_chk@plt+0x13d4>
   12190:	ldr	r2, [pc, #96]	; 121f8 <__snprintf_chk@plt+0x13d8>
   12194:	bl	10d30 <getopt_long@plt>
   12198:	cmn	r0, #1
   1219c:	beq	12168 <__snprintf_chk@plt+0x1348>
   121a0:	cmp	r0, #104	; 0x68
   121a4:	beq	121dc <__snprintf_chk@plt+0x13bc>
   121a8:	cmp	r0, #118	; 0x76
   121ac:	bne	12168 <__snprintf_chk@plt+0x1348>
   121b0:	ldr	r3, [pc, #68]	; 121fc <__snprintf_chk@plt+0x13dc>
   121b4:	add	ip, sp, #48	; 0x30
   121b8:	mov	r2, r8
   121bc:	ldr	r0, [r3]
   121c0:	mov	r1, r7
   121c4:	str	ip, [sp]
   121c8:	ldr	r3, [sp, #40]	; 0x28
   121cc:	str	ip, [sp, #12]
   121d0:	bl	14588 <__snprintf_chk@plt+0x3768>
   121d4:	mov	r0, r5
   121d8:	bl	10d48 <exit@plt>
   121dc:	mov	r0, r5
   121e0:	ldr	r3, [sp, #44]	; 0x2c
   121e4:	blx	r3
   121e8:	b	12168 <__snprintf_chk@plt+0x1348>
   121ec:	andeq	r7, r2, r8, lsr r1
   121f0:	andeq	r7, r2, r8, lsr #2
   121f4:			; <UNDEFINED> instruction: 0x00015cbc
   121f8:	andeq	r5, r1, ip, ror #25
   121fc:	andeq	r7, r2, r4, lsr r1
   12200:	push	{r4, r5, r6, r7, r8, lr}
   12204:	sub	sp, sp, #16
   12208:	ldr	r5, [pc, #176]	; 122c0 <__snprintf_chk@plt+0x14a0>
   1220c:	ldrb	r8, [sp, #44]	; 0x2c
   12210:	ldr	r4, [pc, #172]	; 122c4 <__snprintf_chk@plt+0x14a4>
   12214:	ldr	lr, [pc, #172]	; 122c8 <__snprintf_chk@plt+0x14a8>
   12218:	cmp	r8, #0
   1221c:	mov	r6, r2
   12220:	movne	r2, r5
   12224:	mov	r5, #0
   12228:	mov	ip, #1
   1222c:	moveq	r2, lr
   12230:	mov	r7, r3
   12234:	str	r5, [sp]
   12238:	ldr	r3, [pc, #140]	; 122cc <__snprintf_chk@plt+0x14ac>
   1223c:	ldr	r8, [r4]
   12240:	str	ip, [r4]
   12244:	bl	10d30 <getopt_long@plt>
   12248:	cmn	r0, #1
   1224c:	beq	1229c <__snprintf_chk@plt+0x147c>
   12250:	cmp	r0, #104	; 0x68
   12254:	beq	122a8 <__snprintf_chk@plt+0x1488>
   12258:	cmp	r0, #118	; 0x76
   1225c:	bne	1228c <__snprintf_chk@plt+0x146c>
   12260:	ldr	r3, [pc, #104]	; 122d0 <__snprintf_chk@plt+0x14b0>
   12264:	add	ip, sp, #52	; 0x34
   12268:	mov	r2, r7
   1226c:	ldr	r0, [r3]
   12270:	mov	r1, r6
   12274:	str	ip, [sp]
   12278:	ldr	r3, [sp, #40]	; 0x28
   1227c:	str	ip, [sp, #12]
   12280:	bl	14588 <__snprintf_chk@plt+0x3768>
   12284:	mov	r0, r5
   12288:	bl	10d48 <exit@plt>
   1228c:	ldr	r3, [pc, #64]	; 122d4 <__snprintf_chk@plt+0x14b4>
   12290:	ldr	r0, [r3]
   12294:	ldr	r3, [sp, #48]	; 0x30
   12298:	blx	r3
   1229c:	str	r8, [r4]
   122a0:	add	sp, sp, #16
   122a4:	pop	{r4, r5, r6, r7, r8, pc}
   122a8:	mov	r0, r5
   122ac:	ldr	r3, [sp, #48]	; 0x30
   122b0:	blx	r3
   122b4:	str	r8, [r4]
   122b8:	add	sp, sp, #16
   122bc:	pop	{r4, r5, r6, r7, r8, pc}
   122c0:	andeq	r5, r1, r8, lsl #14
   122c4:	andeq	r7, r2, r8, lsr r1
   122c8:	andeq	r5, r1, ip, ror #25
   122cc:			; <UNDEFINED> instruction: 0x00015cbc
   122d0:	andeq	r7, r2, r4, lsr r1
   122d4:	ldrdeq	r7, [r2], -ip
   122d8:	push	{r4, r5, r6, lr}
   122dc:	subs	r4, r0, #0
   122e0:	beq	12354 <__snprintf_chk@plt+0x1534>
   122e4:	mov	r1, #47	; 0x2f
   122e8:	bl	10de4 <strrchr@plt>
   122ec:	subs	r5, r0, #0
   122f0:	beq	12340 <__snprintf_chk@plt+0x1520>
   122f4:	add	r6, r5, #1
   122f8:	sub	r3, r6, r4
   122fc:	cmp	r3, #6
   12300:	ble	12340 <__snprintf_chk@plt+0x1520>
   12304:	mov	r2, #7
   12308:	ldr	r1, [pc, #96]	; 12370 <__snprintf_chk@plt+0x1550>
   1230c:	sub	r0, r5, #6
   12310:	bl	10e08 <strncmp@plt>
   12314:	cmp	r0, #0
   12318:	bne	12340 <__snprintf_chk@plt+0x1520>
   1231c:	mov	r2, #3
   12320:	ldr	r1, [pc, #76]	; 12374 <__snprintf_chk@plt+0x1554>
   12324:	mov	r0, r6
   12328:	bl	10e08 <strncmp@plt>
   1232c:	cmp	r0, #0
   12330:	movne	r4, r6
   12334:	ldreq	r3, [pc, #60]	; 12378 <__snprintf_chk@plt+0x1558>
   12338:	addeq	r4, r5, #4
   1233c:	streq	r4, [r3]
   12340:	ldr	r2, [pc, #52]	; 1237c <__snprintf_chk@plt+0x155c>
   12344:	ldr	r3, [pc, #52]	; 12380 <__snprintf_chk@plt+0x1560>
   12348:	str	r4, [r2]
   1234c:	str	r4, [r3]
   12350:	pop	{r4, r5, r6, pc}
   12354:	ldr	r3, [pc, #40]	; 12384 <__snprintf_chk@plt+0x1564>
   12358:	mov	r2, #55	; 0x37
   1235c:	mov	r1, #1
   12360:	ldr	r3, [r3]
   12364:	ldr	r0, [pc, #28]	; 12388 <__snprintf_chk@plt+0x1568>
   12368:	bl	10ca0 <fwrite@plt>
   1236c:	bl	10e14 <abort@plt>
   12370:	andeq	r5, r1, r8, lsr sp
   12374:	andeq	r5, r1, r0, asr #26
   12378:	andeq	r7, r2, r0, lsr #2
   1237c:	andeq	r7, r2, r8, asr #2
   12380:	andeq	r7, r2, r4, lsr #2
   12384:	andeq	r7, r2, r0, lsr r1
   12388:	andeq	r5, r1, r0, lsl #26
   1238c:	push	{r4, r5, r6, lr}
   12390:	mov	r2, #48	; 0x30
   12394:	mov	r4, r1
   12398:	mov	r1, #0
   1239c:	mov	r5, r0
   123a0:	bl	10d84 <memset@plt>
   123a4:	cmp	r4, #10
   123a8:	beq	123b8 <__snprintf_chk@plt+0x1598>
   123ac:	str	r4, [r5]
   123b0:	mov	r0, r5
   123b4:	pop	{r4, r5, r6, pc}
   123b8:	bl	10e14 <abort@plt>
   123bc:	push	{r4, r5, r6, lr}
   123c0:	mov	r4, r0
   123c4:	mov	r5, r1
   123c8:	bl	14f9c <__snprintf_chk@plt+0x417c>
   123cc:	ldrb	r3, [r0]
   123d0:	bic	r3, r3, #32
   123d4:	cmp	r3, #85	; 0x55
   123d8:	bne	12438 <__snprintf_chk@plt+0x1618>
   123dc:	ldrb	r3, [r0, #1]
   123e0:	bic	r3, r3, #32
   123e4:	cmp	r3, #84	; 0x54
   123e8:	bne	12474 <__snprintf_chk@plt+0x1654>
   123ec:	ldrb	r3, [r0, #2]
   123f0:	bic	r3, r3, #32
   123f4:	cmp	r3, #70	; 0x46
   123f8:	bne	12474 <__snprintf_chk@plt+0x1654>
   123fc:	ldrb	r3, [r0, #3]
   12400:	cmp	r3, #45	; 0x2d
   12404:	bne	12474 <__snprintf_chk@plt+0x1654>
   12408:	ldrb	r3, [r0, #4]
   1240c:	cmp	r3, #56	; 0x38
   12410:	bne	12474 <__snprintf_chk@plt+0x1654>
   12414:	ldrb	r3, [r0, #5]
   12418:	cmp	r3, #0
   1241c:	bne	12474 <__snprintf_chk@plt+0x1654>
   12420:	ldrb	r2, [r4]
   12424:	ldr	r3, [pc, #152]	; 124c4 <__snprintf_chk@plt+0x16a4>
   12428:	ldr	r0, [pc, #152]	; 124c8 <__snprintf_chk@plt+0x16a8>
   1242c:	cmp	r2, #96	; 0x60
   12430:	movne	r0, r3
   12434:	pop	{r4, r5, r6, pc}
   12438:	cmp	r3, #71	; 0x47
   1243c:	bne	12474 <__snprintf_chk@plt+0x1654>
   12440:	ldrb	r3, [r0, #1]
   12444:	bic	r3, r3, #32
   12448:	cmp	r3, #66	; 0x42
   1244c:	bne	12474 <__snprintf_chk@plt+0x1654>
   12450:	ldrb	r3, [r0, #2]
   12454:	cmp	r3, #49	; 0x31
   12458:	bne	12474 <__snprintf_chk@plt+0x1654>
   1245c:	ldrb	r3, [r0, #3]
   12460:	cmp	r3, #56	; 0x38
   12464:	bne	12474 <__snprintf_chk@plt+0x1654>
   12468:	ldrb	r3, [r0, #4]
   1246c:	cmp	r3, #48	; 0x30
   12470:	beq	12488 <__snprintf_chk@plt+0x1668>
   12474:	ldr	r3, [pc, #80]	; 124cc <__snprintf_chk@plt+0x16ac>
   12478:	cmp	r5, #9
   1247c:	ldr	r0, [pc, #76]	; 124d0 <__snprintf_chk@plt+0x16b0>
   12480:	movne	r0, r3
   12484:	pop	{r4, r5, r6, pc}
   12488:	ldrb	r3, [r0, #5]
   1248c:	cmp	r3, #51	; 0x33
   12490:	bne	12474 <__snprintf_chk@plt+0x1654>
   12494:	ldrb	r3, [r0, #6]
   12498:	cmp	r3, #48	; 0x30
   1249c:	bne	12474 <__snprintf_chk@plt+0x1654>
   124a0:	ldrb	r3, [r0, #7]
   124a4:	cmp	r3, #0
   124a8:	bne	12474 <__snprintf_chk@plt+0x1654>
   124ac:	ldrb	r2, [r4]
   124b0:	ldr	r3, [pc, #28]	; 124d4 <__snprintf_chk@plt+0x16b4>
   124b4:	ldr	r0, [pc, #28]	; 124d8 <__snprintf_chk@plt+0x16b8>
   124b8:	cmp	r2, #96	; 0x60
   124bc:	movne	r0, r3
   124c0:	pop	{r4, r5, r6, pc}
   124c4:	muleq	r1, ip, sp
   124c8:	muleq	r1, r8, sp
   124cc:	andeq	r5, r1, ip, lsr #27
   124d0:	andeq	r5, r1, r8, lsr #27
   124d4:	andeq	r5, r1, r4, lsr #27
   124d8:	andeq	r5, r1, r0, lsr #27
   124dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   124e0:	sub	sp, sp, #116	; 0x74
   124e4:	mov	sl, r0
   124e8:	str	r3, [sp, #24]
   124ec:	mov	r3, #1
   124f0:	mov	r8, r1
   124f4:	str	r2, [sp, #56]	; 0x38
   124f8:	str	r3, [sp, #36]	; 0x24
   124fc:	bl	10cb8 <__ctype_get_mb_cur_max@plt>
   12500:	ldr	r3, [sp, #156]	; 0x9c
   12504:	mov	fp, r8
   12508:	mov	r2, #0
   1250c:	lsr	r3, r3, #1
   12510:	and	r3, r3, #1
   12514:	str	r2, [sp, #68]	; 0x44
   12518:	str	r3, [sp, #28]
   1251c:	str	r2, [sp, #40]	; 0x28
   12520:	str	r2, [sp, #44]	; 0x2c
   12524:	str	r2, [sp, #52]	; 0x34
   12528:	str	r2, [sp, #64]	; 0x40
   1252c:	str	r2, [sp, #72]	; 0x48
   12530:	str	sl, [sp, #32]
   12534:	str	r0, [sp, #76]	; 0x4c
   12538:	ldr	r3, [sp, #152]	; 0x98
   1253c:	cmp	r3, #10
   12540:	ldrls	pc, [pc, r3, lsl #2]
   12544:	b	13704 <__snprintf_chk@plt+0x28e4>
   12548:	andeq	r2, r1, r4, ror r5
   1254c:	andeq	r2, r1, ip, asr r8
   12550:	andeq	r2, r1, r0, lsl #17
   12554:	andeq	r2, r1, r4, lsr #17
   12558:	ldrdeq	r2, [r1], -r0
   1255c:	andeq	r2, r1, r4, lsr #19
   12560:	andeq	r2, r1, ip, ror r9
   12564:			; <UNDEFINED> instruction: 0x000128b8
   12568:	ldrdeq	r2, [r1], -r0
   1256c:	ldrdeq	r2, [r1], -r0
   12570:	ldrdeq	r2, [r1], -r0
   12574:	mov	r3, #0
   12578:	mov	r7, r3
   1257c:	str	r3, [sp, #28]
   12580:	ldr	r3, [sp, #44]	; 0x2c
   12584:	mov	sl, #0
   12588:	eor	r3, r3, #1
   1258c:	str	r3, [sp, #60]	; 0x3c
   12590:	ldr	r3, [sp, #24]
   12594:	cmn	r3, #1
   12598:	beq	12afc <__snprintf_chk@plt+0x1cdc>
   1259c:	ldr	r3, [sp, #24]
   125a0:	subs	r5, r3, sl
   125a4:	movne	r5, #1
   125a8:	cmp	r5, #0
   125ac:	beq	12b14 <__snprintf_chk@plt+0x1cf4>
   125b0:	ldr	r3, [sp, #152]	; 0x98
   125b4:	ldr	r8, [sp, #44]	; 0x2c
   125b8:	cmp	r3, #2
   125bc:	moveq	r8, #0
   125c0:	andne	r8, r8, #1
   125c4:	ldr	r3, [sp, #52]	; 0x34
   125c8:	adds	r9, r3, #0
   125cc:	movne	r9, #1
   125d0:	ands	r6, r9, r8
   125d4:	beq	12f7c <__snprintf_chk@plt+0x215c>
   125d8:	ldr	r2, [sp, #52]	; 0x34
   125dc:	ldr	r1, [sp, #24]
   125e0:	cmp	r2, #1
   125e4:	mov	r3, r2
   125e8:	movls	r3, #0
   125ec:	movhi	r3, #1
   125f0:	cmn	r1, #1
   125f4:	movne	r3, #0
   125f8:	cmp	r3, #0
   125fc:	add	r4, sl, r2
   12600:	beq	12610 <__snprintf_chk@plt+0x17f0>
   12604:	ldr	r0, [sp, #56]	; 0x38
   12608:	bl	10d54 <strlen@plt>
   1260c:	str	r0, [sp, #24]
   12610:	ldr	r3, [sp, #24]
   12614:	cmp	r3, r4
   12618:	ldr	r3, [sp, #56]	; 0x38
   1261c:	add	r3, r3, sl
   12620:	str	r3, [sp, #48]	; 0x30
   12624:	bcc	12f88 <__snprintf_chk@plt+0x2168>
   12628:	mov	r0, r3
   1262c:	ldr	r2, [sp, #52]	; 0x34
   12630:	ldr	r1, [sp, #64]	; 0x40
   12634:	bl	10c58 <memcmp@plt>
   12638:	cmp	r0, #0
   1263c:	bne	12f88 <__snprintf_chk@plt+0x2168>
   12640:	ldr	r3, [sp, #28]
   12644:	cmp	r3, #0
   12648:	bne	13804 <__snprintf_chk@plt+0x29e4>
   1264c:	ldr	r3, [sp, #48]	; 0x30
   12650:	ldrb	r4, [r3]
   12654:	cmp	r4, #126	; 0x7e
   12658:	ldrls	pc, [pc, r4, lsl #2]
   1265c:	b	12f1c <__snprintf_chk@plt+0x20fc>
   12660:	andeq	r2, r1, r0, asr #26
   12664:	andeq	r2, r1, ip, lsl pc
   12668:	andeq	r2, r1, ip, lsl pc
   1266c:	andeq	r2, r1, ip, lsl pc
   12670:	andeq	r2, r1, ip, lsl pc
   12674:	andeq	r2, r1, ip, lsl pc
   12678:	andeq	r2, r1, ip, lsl pc
   1267c:	andeq	r2, r1, r4, lsr #26
   12680:	andeq	r2, r1, r8, lsl #26
   12684:	andeq	r2, r1, r4, lsl #30
   12688:	andeq	r2, r1, r8, ror #24
   1268c:	andeq	r2, r1, ip, asr #24
   12690:	andeq	r2, r1, r0, ror #29
   12694:			; <UNDEFINED> instruction: 0x00012ebc
   12698:	andeq	r2, r1, ip, lsl pc
   1269c:	andeq	r2, r1, ip, lsl pc
   126a0:	andeq	r2, r1, ip, lsl pc
   126a4:	andeq	r2, r1, ip, lsl pc
   126a8:	andeq	r2, r1, ip, lsl pc
   126ac:	andeq	r2, r1, ip, lsl pc
   126b0:	andeq	r2, r1, ip, lsl pc
   126b4:	andeq	r2, r1, ip, lsl pc
   126b8:	andeq	r2, r1, ip, lsl pc
   126bc:	andeq	r2, r1, ip, lsl pc
   126c0:	andeq	r2, r1, ip, lsl pc
   126c4:	andeq	r2, r1, ip, lsl pc
   126c8:	andeq	r2, r1, ip, lsl pc
   126cc:	andeq	r2, r1, ip, lsl pc
   126d0:	andeq	r2, r1, ip, lsl pc
   126d4:	andeq	r2, r1, ip, lsl pc
   126d8:	andeq	r2, r1, ip, lsl pc
   126dc:	andeq	r2, r1, ip, lsl pc
   126e0:	strdeq	r2, [r1], -ip
   126e4:	andeq	r2, r1, r0, lsr lr
   126e8:	andeq	r2, r1, r0, lsr lr
   126ec:	andeq	r2, r1, r0, asr #20
   126f0:	andeq	r2, r1, r0, lsr lr
   126f4:	andeq	r2, r1, r8, asr #29
   126f8:	andeq	r2, r1, r0, lsr lr
   126fc:	muleq	r1, ip, lr
   12700:	andeq	r2, r1, r0, lsr lr
   12704:	andeq	r2, r1, r0, lsr lr
   12708:	andeq	r2, r1, r0, lsr lr
   1270c:	andeq	r2, r1, r8, asr #29
   12710:	andeq	r2, r1, r8, asr #29
   12714:	andeq	r2, r1, r8, asr #29
   12718:	andeq	r2, r1, r8, asr #29
   1271c:	andeq	r2, r1, r8, asr #29
   12720:	andeq	r2, r1, r8, asr #29
   12724:	andeq	r2, r1, r8, asr #29
   12728:	andeq	r2, r1, r8, asr #29
   1272c:	andeq	r2, r1, r8, asr #29
   12730:	andeq	r2, r1, r8, asr #29
   12734:	andeq	r2, r1, r8, asr #29
   12738:	andeq	r2, r1, r8, asr #29
   1273c:	andeq	r2, r1, r8, asr #29
   12740:	andeq	r2, r1, r8, asr #29
   12744:	andeq	r2, r1, r8, asr #29
   12748:	andeq	r2, r1, r8, asr #29
   1274c:	andeq	r2, r1, r0, lsr lr
   12750:	andeq	r2, r1, r0, lsr lr
   12754:	andeq	r2, r1, r0, lsr lr
   12758:	andeq	r2, r1, r0, lsr lr
   1275c:	andeq	r2, r1, ip, ror #28
   12760:	andeq	r2, r1, ip, lsl pc
   12764:	andeq	r2, r1, r8, asr #29
   12768:	andeq	r2, r1, r8, asr #29
   1276c:	andeq	r2, r1, r8, asr #29
   12770:	andeq	r2, r1, r8, asr #29
   12774:	andeq	r2, r1, r8, asr #29
   12778:	andeq	r2, r1, r8, asr #29
   1277c:	andeq	r2, r1, r8, asr #29
   12780:	andeq	r2, r1, r8, asr #29
   12784:	andeq	r2, r1, r8, asr #29
   12788:	andeq	r2, r1, r8, asr #29
   1278c:	andeq	r2, r1, r8, asr #29
   12790:	andeq	r2, r1, r8, asr #29
   12794:	andeq	r2, r1, r8, asr #29
   12798:	andeq	r2, r1, r8, asr #29
   1279c:	andeq	r2, r1, r8, asr #29
   127a0:	andeq	r2, r1, r8, asr #29
   127a4:	andeq	r2, r1, r8, asr #29
   127a8:	andeq	r2, r1, r8, asr #29
   127ac:	andeq	r2, r1, r8, asr #29
   127b0:	andeq	r2, r1, r8, asr #29
   127b4:	andeq	r2, r1, r8, asr #29
   127b8:	andeq	r2, r1, r8, asr #29
   127bc:	andeq	r2, r1, r8, asr #29
   127c0:	andeq	r2, r1, r8, asr #29
   127c4:	andeq	r2, r1, r8, asr #29
   127c8:	andeq	r2, r1, r8, asr #29
   127cc:	andeq	r2, r1, r0, lsr lr
   127d0:	andeq	r2, r1, ip, lsl #23
   127d4:	andeq	r2, r1, r8, asr #29
   127d8:	andeq	r2, r1, r0, lsr lr
   127dc:	andeq	r2, r1, r8, asr #29
   127e0:	andeq	r2, r1, r0, lsr lr
   127e4:	andeq	r2, r1, r8, asr #29
   127e8:	andeq	r2, r1, r8, asr #29
   127ec:	andeq	r2, r1, r8, asr #29
   127f0:	andeq	r2, r1, r8, asr #29
   127f4:	andeq	r2, r1, r8, asr #29
   127f8:	andeq	r2, r1, r8, asr #29
   127fc:	andeq	r2, r1, r8, asr #29
   12800:	andeq	r2, r1, r8, asr #29
   12804:	andeq	r2, r1, r8, asr #29
   12808:	andeq	r2, r1, r8, asr #29
   1280c:	andeq	r2, r1, r8, asr #29
   12810:	andeq	r2, r1, r8, asr #29
   12814:	andeq	r2, r1, r8, asr #29
   12818:	andeq	r2, r1, r8, asr #29
   1281c:	andeq	r2, r1, r8, asr #29
   12820:	andeq	r2, r1, r8, asr #29
   12824:	andeq	r2, r1, r8, asr #29
   12828:	andeq	r2, r1, r8, asr #29
   1282c:	andeq	r2, r1, r8, asr #29
   12830:	andeq	r2, r1, r8, asr #29
   12834:	andeq	r2, r1, r8, asr #29
   12838:	andeq	r2, r1, r8, asr #29
   1283c:	andeq	r2, r1, r8, asr #29
   12840:	andeq	r2, r1, r8, asr #29
   12844:	andeq	r2, r1, r8, asr #29
   12848:	andeq	r2, r1, r8, asr #29
   1284c:	andeq	r2, r1, r0, lsr #20
   12850:	andeq	r2, r1, r0, lsr lr
   12854:	andeq	r2, r1, r0, lsr #20
   12858:	andeq	r2, r1, r0, asr #20
   1285c:	mov	r3, #1
   12860:	str	r3, [sp, #28]
   12864:	str	r3, [sp, #52]	; 0x34
   12868:	ldr	r3, [pc, #4000]	; 13810 <__snprintf_chk@plt+0x29f0>
   1286c:	mov	r7, #0
   12870:	str	r3, [sp, #64]	; 0x40
   12874:	mov	r3, #2
   12878:	str	r3, [sp, #152]	; 0x98
   1287c:	b	12580 <__snprintf_chk@plt+0x1760>
   12880:	ldr	r3, [sp, #28]
   12884:	cmp	r3, #0
   12888:	beq	129e4 <__snprintf_chk@plt+0x1bc4>
   1288c:	mov	r3, #1
   12890:	str	r3, [sp, #52]	; 0x34
   12894:	ldr	r3, [pc, #3956]	; 13810 <__snprintf_chk@plt+0x29f0>
   12898:	mov	r7, #0
   1289c:	str	r3, [sp, #64]	; 0x40
   128a0:	b	12580 <__snprintf_chk@plt+0x1760>
   128a4:	mov	r3, #1
   128a8:	str	r3, [sp, #44]	; 0x2c
   128ac:	str	r3, [sp, #52]	; 0x34
   128b0:	str	r3, [sp, #28]
   128b4:	b	12868 <__snprintf_chk@plt+0x1a48>
   128b8:	mov	r3, #0
   128bc:	str	r3, [sp, #28]
   128c0:	mov	r3, #1
   128c4:	str	r3, [sp, #44]	; 0x2c
   128c8:	mov	r7, #0
   128cc:	b	12580 <__snprintf_chk@plt+0x1760>
   128d0:	ldr	r3, [sp, #152]	; 0x98
   128d4:	cmp	r3, #10
   128d8:	beq	1291c <__snprintf_chk@plt+0x1afc>
   128dc:	mov	r2, #5
   128e0:	ldr	r1, [pc, #3884]	; 13814 <__snprintf_chk@plt+0x29f4>
   128e4:	mov	r0, #0
   128e8:	bl	10c70 <dcgettext@plt>
   128ec:	ldr	r2, [pc, #3872]	; 13814 <__snprintf_chk@plt+0x29f4>
   128f0:	cmp	r0, r2
   128f4:	str	r0, [sp, #164]	; 0xa4
   128f8:	beq	13900 <__snprintf_chk@plt+0x2ae0>
   128fc:	mov	r2, #5
   12900:	ldr	r1, [pc, #3848]	; 13810 <__snprintf_chk@plt+0x29f0>
   12904:	mov	r0, #0
   12908:	bl	10c70 <dcgettext@plt>
   1290c:	ldr	r2, [pc, #3836]	; 13810 <__snprintf_chk@plt+0x29f0>
   12910:	cmp	r0, r2
   12914:	str	r0, [sp, #168]	; 0xa8
   12918:	beq	138f0 <__snprintf_chk@plt+0x2ad0>
   1291c:	ldr	r7, [sp, #28]
   12920:	cmp	r7, #0
   12924:	movne	r7, #0
   12928:	bne	1295c <__snprintf_chk@plt+0x1b3c>
   1292c:	ldr	r3, [sp, #164]	; 0xa4
   12930:	ldrb	r3, [r3]
   12934:	cmp	r3, #0
   12938:	beq	13910 <__snprintf_chk@plt+0x2af0>
   1293c:	ldr	r2, [sp, #164]	; 0xa4
   12940:	ldr	r1, [sp, #32]
   12944:	cmp	fp, r7
   12948:	strbhi	r3, [r1, r7]
   1294c:	ldrb	r3, [r2, #1]!
   12950:	add	r7, r7, #1
   12954:	cmp	r3, #0
   12958:	bne	12944 <__snprintf_chk@plt+0x1b24>
   1295c:	ldr	r0, [sp, #168]	; 0xa8
   12960:	bl	10d54 <strlen@plt>
   12964:	ldr	r3, [sp, #168]	; 0xa8
   12968:	str	r3, [sp, #64]	; 0x40
   1296c:	mov	r3, #1
   12970:	str	r3, [sp, #44]	; 0x2c
   12974:	str	r0, [sp, #52]	; 0x34
   12978:	b	12580 <__snprintf_chk@plt+0x1760>
   1297c:	mov	r3, #1
   12980:	str	r3, [sp, #44]	; 0x2c
   12984:	str	r3, [sp, #52]	; 0x34
   12988:	str	r3, [sp, #28]
   1298c:	ldr	r3, [pc, #3716]	; 13818 <__snprintf_chk@plt+0x29f8>
   12990:	mov	r7, #0
   12994:	str	r3, [sp, #64]	; 0x40
   12998:	mov	r3, #5
   1299c:	str	r3, [sp, #152]	; 0x98
   129a0:	b	12580 <__snprintf_chk@plt+0x1760>
   129a4:	ldr	r3, [sp, #28]
   129a8:	cmp	r3, #0
   129ac:	beq	136ac <__snprintf_chk@plt+0x288c>
   129b0:	ldr	r3, [sp, #28]
   129b4:	mov	r7, #0
   129b8:	str	r3, [sp, #44]	; 0x2c
   129bc:	mov	r3, #1
   129c0:	str	r3, [sp, #52]	; 0x34
   129c4:	ldr	r3, [pc, #3660]	; 13818 <__snprintf_chk@plt+0x29f8>
   129c8:	str	r3, [sp, #64]	; 0x40
   129cc:	b	12580 <__snprintf_chk@plt+0x1760>
   129d0:	ldr	r3, [sp, #28]
   129d4:	cmp	r3, #0
   129d8:	mov	r3, #1
   129dc:	streq	r3, [sp, #44]	; 0x2c
   129e0:	bne	12864 <__snprintf_chk@plt+0x1a44>
   129e4:	cmp	fp, #0
   129e8:	beq	136dc <__snprintf_chk@plt+0x28bc>
   129ec:	ldr	r3, [sp, #32]
   129f0:	mov	r2, #39	; 0x27
   129f4:	mov	r7, #1
   129f8:	strb	r2, [r3]
   129fc:	mov	r3, #0
   12a00:	str	r3, [sp, #28]
   12a04:	mov	r3, #1
   12a08:	str	r3, [sp, #52]	; 0x34
   12a0c:	ldr	r3, [pc, #3580]	; 13810 <__snprintf_chk@plt+0x29f0>
   12a10:	str	r3, [sp, #64]	; 0x40
   12a14:	mov	r3, #2
   12a18:	str	r3, [sp, #152]	; 0x98
   12a1c:	b	12580 <__snprintf_chk@plt+0x1760>
   12a20:	ldr	r3, [sp, #24]
   12a24:	cmn	r3, #1
   12a28:	beq	13640 <__snprintf_chk@plt+0x2820>
   12a2c:	ldr	r3, [sp, #24]
   12a30:	subs	r3, r3, #1
   12a34:	movne	r3, #1
   12a38:	cmp	r3, #0
   12a3c:	bne	12a48 <__snprintf_chk@plt+0x1c28>
   12a40:	cmp	sl, #0
   12a44:	beq	12e34 <__snprintf_chk@plt+0x2014>
   12a48:	ldr	r3, [sp, #152]	; 0x98
   12a4c:	mov	r5, #0
   12a50:	sub	r2, r3, #2
   12a54:	mov	r8, r5
   12a58:	clz	r2, r2
   12a5c:	lsr	r2, r2, #5
   12a60:	ldr	r3, [sp, #60]	; 0x3c
   12a64:	ldr	r1, [sp, #28]
   12a68:	orr	r3, r2, r3
   12a6c:	eor	r3, r3, #1
   12a70:	orr	r3, r1, r3
   12a74:	tst	r3, #255	; 0xff
   12a78:	bne	131a4 <__snprintf_chk@plt+0x2384>
   12a7c:	cmp	r6, #0
   12a80:	bne	12bd0 <__snprintf_chk@plt+0x1db0>
   12a84:	ldr	r3, [sp, #40]	; 0x28
   12a88:	eor	r8, r8, #1
   12a8c:	and	r8, r8, r3
   12a90:	add	sl, sl, #1
   12a94:	uxtb	r6, r8
   12a98:	cmp	r6, #0
   12a9c:	beq	12ad0 <__snprintf_chk@plt+0x1cb0>
   12aa0:	cmp	fp, r7
   12aa4:	movhi	r2, #39	; 0x27
   12aa8:	ldrhi	r3, [sp, #32]
   12aac:	strbhi	r2, [r3, r7]
   12ab0:	add	r3, r7, #1
   12ab4:	cmp	fp, r3
   12ab8:	movhi	r1, #39	; 0x27
   12abc:	ldrhi	r2, [sp, #32]
   12ac0:	add	r7, r7, #2
   12ac4:	strbhi	r1, [r2, r3]
   12ac8:	mov	r3, #0
   12acc:	str	r3, [sp, #40]	; 0x28
   12ad0:	cmp	r7, fp
   12ad4:	ldrcc	r3, [sp, #32]
   12ad8:	strbcc	r4, [r3, r7]
   12adc:	ldr	r3, [sp, #36]	; 0x24
   12ae0:	cmp	r5, #0
   12ae4:	moveq	r3, #0
   12ae8:	str	r3, [sp, #36]	; 0x24
   12aec:	ldr	r3, [sp, #24]
   12af0:	add	r7, r7, #1
   12af4:	cmn	r3, #1
   12af8:	bne	1259c <__snprintf_chk@plt+0x177c>
   12afc:	ldr	r3, [sp, #56]	; 0x38
   12b00:	ldrb	r5, [r3, sl]
   12b04:	adds	r5, r5, #0
   12b08:	movne	r5, #1
   12b0c:	cmp	r5, #0
   12b10:	bne	125b0 <__snprintf_chk@plt+0x1790>
   12b14:	ldr	r3, [sp, #152]	; 0x98
   12b18:	ldr	r1, [sp, #28]
   12b1c:	sub	r3, r3, #2
   12b20:	clz	r3, r3
   12b24:	lsr	r3, r3, #5
   12b28:	and	r9, r1, r3
   12b2c:	cmp	r7, #0
   12b30:	movne	r2, #0
   12b34:	andeq	r2, r9, #1
   12b38:	cmp	r2, #0
   12b3c:	bne	13518 <__snprintf_chk@plt+0x26f8>
   12b40:	eor	r2, r1, #1
   12b44:	ands	r3, r3, r2
   12b48:	beq	139d4 <__snprintf_chk@plt+0x2bb4>
   12b4c:	ldr	r2, [sp, #68]	; 0x44
   12b50:	cmp	r2, #0
   12b54:	beq	139c0 <__snprintf_chk@plt+0x2ba0>
   12b58:	ldr	r3, [sp, #36]	; 0x24
   12b5c:	cmp	r3, #0
   12b60:	bne	13978 <__snprintf_chk@plt+0x2b58>
   12b64:	ldr	r2, [sp, #72]	; 0x48
   12b68:	clz	r3, fp
   12b6c:	cmp	r2, #0
   12b70:	lsr	r3, r3, #5
   12b74:	moveq	r3, #0
   12b78:	cmp	r3, #0
   12b7c:	beq	13918 <__snprintf_chk@plt+0x2af8>
   12b80:	str	r3, [sp, #68]	; 0x44
   12b84:	ldr	fp, [sp, #72]	; 0x48
   12b88:	b	12538 <__snprintf_chk@plt+0x1718>
   12b8c:	ldr	r3, [sp, #152]	; 0x98
   12b90:	cmp	r3, #2
   12b94:	beq	131e8 <__snprintf_chk@plt+0x23c8>
   12b98:	ldr	r3, [sp, #44]	; 0x2c
   12b9c:	ldr	r2, [sp, #28]
   12ba0:	and	r2, r3, r2
   12ba4:	ands	r2, r9, r2
   12ba8:	bne	131f4 <__snprintf_chk@plt+0x23d4>
   12bac:	mov	r4, #92	; 0x5c
   12bb0:	mov	r3, r4
   12bb4:	ldr	r1, [sp, #44]	; 0x2c
   12bb8:	cmp	r1, #0
   12bbc:	moveq	r5, #0
   12bc0:	moveq	r8, r1
   12bc4:	beq	12a60 <__snprintf_chk@plt+0x1c40>
   12bc8:	mov	r4, r3
   12bcc:	mov	r5, #0
   12bd0:	ldr	r3, [sp, #28]
   12bd4:	cmp	r3, #0
   12bd8:	bne	131dc <__snprintf_chk@plt+0x23bc>
   12bdc:	ldr	r3, [sp, #40]	; 0x28
   12be0:	eor	r9, r3, #1
   12be4:	and	r9, r9, r2
   12be8:	ands	r9, r9, #255	; 0xff
   12bec:	beq	12c30 <__snprintf_chk@plt+0x1e10>
   12bf0:	cmp	fp, r7
   12bf4:	movhi	r2, #39	; 0x27
   12bf8:	ldrhi	r3, [sp, #32]
   12bfc:	str	r9, [sp, #40]	; 0x28
   12c00:	strbhi	r2, [r3, r7]
   12c04:	add	r3, r7, #1
   12c08:	cmp	fp, r3
   12c0c:	movhi	r1, #36	; 0x24
   12c10:	ldrhi	r2, [sp, #32]
   12c14:	strbhi	r1, [r2, r3]
   12c18:	add	r3, r7, #2
   12c1c:	cmp	fp, r3
   12c20:	add	r7, r7, #3
   12c24:	ldrhi	r2, [sp, #32]
   12c28:	movhi	r1, #39	; 0x27
   12c2c:	strbhi	r1, [r2, r3]
   12c30:	cmp	fp, r7
   12c34:	movhi	r2, #92	; 0x5c
   12c38:	ldrhi	r3, [sp, #32]
   12c3c:	add	sl, sl, #1
   12c40:	strbhi	r2, [r3, r7]
   12c44:	add	r7, r7, #1
   12c48:	b	12ad0 <__snprintf_chk@plt+0x1cb0>
   12c4c:	ldr	r3, [sp, #152]	; 0x98
   12c50:	mov	r4, #11
   12c54:	sub	r2, r3, #2
   12c58:	mov	r3, #118	; 0x76
   12c5c:	clz	r2, r2
   12c60:	lsr	r2, r2, #5
   12c64:	b	12bb4 <__snprintf_chk@plt+0x1d94>
   12c68:	mov	r4, #10
   12c6c:	mov	r3, #110	; 0x6e
   12c70:	ldr	r2, [sp, #152]	; 0x98
   12c74:	ldr	r1, [sp, #28]
   12c78:	sub	r2, r2, #2
   12c7c:	clz	r2, r2
   12c80:	lsr	r2, r2, #5
   12c84:	ands	r1, r1, r2
   12c88:	beq	12bb4 <__snprintf_chk@plt+0x1d94>
   12c8c:	ldr	sl, [sp, #32]
   12c90:	mov	r8, fp
   12c94:	mov	r2, r1
   12c98:	mov	r3, #2
   12c9c:	str	r3, [sp, #152]	; 0x98
   12ca0:	ldr	r9, [sp, #44]	; 0x2c
   12ca4:	ldr	r3, [sp, #152]	; 0x98
   12ca8:	and	r9, r9, r2
   12cac:	tst	r9, #255	; 0xff
   12cb0:	movne	r3, #4
   12cb4:	str	r3, [sp, #152]	; 0x98
   12cb8:	ldr	r3, [sp, #156]	; 0x9c
   12cbc:	mov	ip, #0
   12cc0:	bic	r3, r3, #2
   12cc4:	str	r3, [sp, #4]
   12cc8:	ldr	r3, [sp, #168]	; 0xa8
   12ccc:	ldr	r2, [sp, #56]	; 0x38
   12cd0:	str	r3, [sp, #16]
   12cd4:	ldr	r3, [sp, #164]	; 0xa4
   12cd8:	mov	r1, r8
   12cdc:	str	r3, [sp, #12]
   12ce0:	ldr	r3, [sp, #152]	; 0x98
   12ce4:	mov	r0, sl
   12ce8:	str	r3, [sp]
   12cec:	str	ip, [sp, #8]
   12cf0:	ldr	r3, [sp, #24]
   12cf4:	bl	124dc <__snprintf_chk@plt+0x16bc>
   12cf8:	mov	fp, r0
   12cfc:	mov	r0, fp
   12d00:	add	sp, sp, #116	; 0x74
   12d04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d08:	ldr	r3, [sp, #152]	; 0x98
   12d0c:	mov	r4, #8
   12d10:	sub	r2, r3, #2
   12d14:	mov	r3, #98	; 0x62
   12d18:	clz	r2, r2
   12d1c:	lsr	r2, r2, #5
   12d20:	b	12bb4 <__snprintf_chk@plt+0x1d94>
   12d24:	ldr	r3, [sp, #152]	; 0x98
   12d28:	mov	r4, #7
   12d2c:	sub	r2, r3, #2
   12d30:	mov	r3, #97	; 0x61
   12d34:	clz	r2, r2
   12d38:	lsr	r2, r2, #5
   12d3c:	b	12bb4 <__snprintf_chk@plt+0x1d94>
   12d40:	ldr	r3, [sp, #44]	; 0x2c
   12d44:	cmp	r3, #0
   12d48:	beq	1352c <__snprintf_chk@plt+0x270c>
   12d4c:	ldr	r3, [sp, #28]
   12d50:	cmp	r3, #0
   12d54:	bne	13804 <__snprintf_chk@plt+0x29e4>
   12d58:	ldr	r3, [sp, #152]	; 0x98
   12d5c:	sub	r2, r3, #2
   12d60:	ldr	r3, [sp, #40]	; 0x28
   12d64:	clz	r2, r2
   12d68:	eor	r3, r3, #1
   12d6c:	lsr	r2, r2, #5
   12d70:	ands	r3, r2, r3
   12d74:	moveq	r1, r7
   12d78:	beq	12dbc <__snprintf_chk@plt+0x1f9c>
   12d7c:	cmp	fp, r7
   12d80:	movhi	r0, #39	; 0x27
   12d84:	ldrhi	r1, [sp, #32]
   12d88:	str	r3, [sp, #40]	; 0x28
   12d8c:	strbhi	r0, [r1, r7]
   12d90:	add	r1, r7, #1
   12d94:	cmp	fp, r1
   12d98:	movhi	ip, #36	; 0x24
   12d9c:	ldrhi	r0, [sp, #32]
   12da0:	strbhi	ip, [r0, r1]
   12da4:	add	r1, r7, #2
   12da8:	cmp	fp, r1
   12dac:	movhi	ip, #39	; 0x27
   12db0:	ldrhi	r0, [sp, #32]
   12db4:	strbhi	ip, [r0, r1]
   12db8:	add	r1, r7, #3
   12dbc:	cmp	fp, r1
   12dc0:	movhi	r0, #92	; 0x5c
   12dc4:	ldrhi	r3, [sp, #32]
   12dc8:	add	r7, r1, #1
   12dcc:	strbhi	r0, [r3, r1]
   12dd0:	cmp	r8, #0
   12dd4:	beq	13718 <__snprintf_chk@plt+0x28f8>
   12dd8:	ldr	r0, [sp, #24]
   12ddc:	add	r3, sl, #1
   12de0:	cmp	r3, r0
   12de4:	bcs	13654 <__snprintf_chk@plt+0x2834>
   12de8:	ldr	r0, [sp, #56]	; 0x38
   12dec:	ldrb	r3, [r0, r3]
   12df0:	sub	r3, r3, #48	; 0x30
   12df4:	cmp	r3, #9
   12df8:	bhi	13654 <__snprintf_chk@plt+0x2834>
   12dfc:	cmp	fp, r7
   12e00:	movhi	r3, #48	; 0x30
   12e04:	ldrhi	r0, [sp, #32]
   12e08:	ldr	r5, [sp, #28]
   12e0c:	mov	r4, #48	; 0x30
   12e10:	strbhi	r3, [r0, r7]
   12e14:	add	r3, r1, #2
   12e18:	cmp	fp, r3
   12e1c:	movhi	r0, #48	; 0x30
   12e20:	ldrhi	ip, [sp, #32]
   12e24:	add	r7, r1, #3
   12e28:	strbhi	r0, [ip, r3]
   12e2c:	b	12a60 <__snprintf_chk@plt+0x1c40>
   12e30:	mov	r5, #0
   12e34:	ldr	r3, [sp, #152]	; 0x98
   12e38:	sub	r2, r3, #2
   12e3c:	ldr	r3, [sp, #28]
   12e40:	clz	r2, r2
   12e44:	lsr	r2, r2, #5
   12e48:	ands	r8, r3, r2
   12e4c:	beq	12a60 <__snprintf_chk@plt+0x1c40>
   12e50:	mov	r3, r8
   12e54:	mov	r2, r3
   12e58:	mov	r3, #2
   12e5c:	ldr	sl, [sp, #32]
   12e60:	mov	r8, fp
   12e64:	str	r3, [sp, #152]	; 0x98
   12e68:	b	12ca0 <__snprintf_chk@plt+0x1e80>
   12e6c:	ldr	r3, [sp, #152]	; 0x98
   12e70:	cmp	r3, #2
   12e74:	beq	13598 <__snprintf_chk@plt+0x2778>
   12e78:	cmp	r3, #5
   12e7c:	beq	13558 <__snprintf_chk@plt+0x2738>
   12e80:	mov	r5, #0
   12e84:	sub	r2, r3, #2
   12e88:	mov	r8, r5
   12e8c:	clz	r2, r2
   12e90:	mov	r4, #63	; 0x3f
   12e94:	lsr	r2, r2, #5
   12e98:	b	12a60 <__snprintf_chk@plt+0x1c40>
   12e9c:	ldr	r3, [sp, #152]	; 0x98
   12ea0:	cmp	r3, #2
   12ea4:	beq	135b8 <__snprintf_chk@plt+0x2798>
   12ea8:	mov	r2, #0
   12eac:	str	r5, [sp, #68]	; 0x44
   12eb0:	mov	r8, r2
   12eb4:	mov	r4, #39	; 0x27
   12eb8:	b	12a60 <__snprintf_chk@plt+0x1c40>
   12ebc:	mov	r4, #13
   12ec0:	mov	r3, #114	; 0x72
   12ec4:	b	12c70 <__snprintf_chk@plt+0x1e50>
   12ec8:	ldr	r3, [sp, #152]	; 0x98
   12ecc:	mov	r8, #0
   12ed0:	sub	r2, r3, #2
   12ed4:	clz	r2, r2
   12ed8:	lsr	r2, r2, #5
   12edc:	b	12a60 <__snprintf_chk@plt+0x1c40>
   12ee0:	ldr	r3, [sp, #152]	; 0x98
   12ee4:	mov	r4, #12
   12ee8:	sub	r2, r3, #2
   12eec:	mov	r3, #102	; 0x66
   12ef0:	clz	r2, r2
   12ef4:	lsr	r2, r2, #5
   12ef8:	b	12bb4 <__snprintf_chk@plt+0x1d94>
   12efc:	mov	r5, r6
   12f00:	b	12e34 <__snprintf_chk@plt+0x2014>
   12f04:	ldr	r3, [sp, #152]	; 0x98
   12f08:	sub	r2, r3, #2
   12f0c:	mov	r3, #116	; 0x74
   12f10:	clz	r2, r2
   12f14:	lsr	r2, r2, #5
   12f18:	b	12bb4 <__snprintf_chk@plt+0x1d94>
   12f1c:	ldr	r8, [sp, #76]	; 0x4c
   12f20:	cmp	r8, #1
   12f24:	bne	133d4 <__snprintf_chk@plt+0x25b4>
   12f28:	bl	10d3c <__ctype_b_loc@plt>
   12f2c:	sxth	r3, r4
   12f30:	mov	ip, r8
   12f34:	lsl	r3, r3, #1
   12f38:	ldr	r2, [r0]
   12f3c:	ldrh	r3, [r2, r3]
   12f40:	and	r3, r3, #16384	; 0x4000
   12f44:	cmp	r3, #0
   12f48:	movne	r5, #1
   12f4c:	moveq	r5, #0
   12f50:	moveq	r3, #1
   12f54:	movne	r3, #0
   12f58:	ldr	r2, [sp, #44]	; 0x2c
   12f5c:	and	r3, r3, r2
   12f60:	ands	r8, r3, #255	; 0xff
   12f64:	bne	13268 <__snprintf_chk@plt+0x2448>
   12f68:	ldr	r3, [sp, #152]	; 0x98
   12f6c:	sub	r2, r3, #2
   12f70:	clz	r2, r2
   12f74:	lsr	r2, r2, #5
   12f78:	b	12a60 <__snprintf_chk@plt+0x1c40>
   12f7c:	ldr	r3, [sp, #56]	; 0x38
   12f80:	add	r3, r3, sl
   12f84:	str	r3, [sp, #48]	; 0x30
   12f88:	ldr	r3, [sp, #48]	; 0x30
   12f8c:	mov	r6, #0
   12f90:	ldrb	r4, [r3]
   12f94:	cmp	r4, #126	; 0x7e
   12f98:	ldrls	pc, [pc, r4, lsl #2]
   12f9c:	b	12f1c <__snprintf_chk@plt+0x20fc>
   12fa0:	andeq	r2, r1, r0, asr #26
   12fa4:	andeq	r2, r1, ip, lsl pc
   12fa8:	andeq	r2, r1, ip, lsl pc
   12fac:	andeq	r2, r1, ip, lsl pc
   12fb0:	andeq	r2, r1, ip, lsl pc
   12fb4:	andeq	r2, r1, ip, lsl pc
   12fb8:	andeq	r2, r1, ip, lsl pc
   12fbc:	andeq	r2, r1, r4, lsr #26
   12fc0:	andeq	r2, r1, r8, lsl #26
   12fc4:	muleq	r1, ip, r1
   12fc8:	andeq	r2, r1, r8, ror #24
   12fcc:	andeq	r2, r1, ip, asr #24
   12fd0:	andeq	r2, r1, r0, ror #29
   12fd4:			; <UNDEFINED> instruction: 0x00012ebc
   12fd8:	andeq	r2, r1, ip, lsl pc
   12fdc:	andeq	r2, r1, ip, lsl pc
   12fe0:	andeq	r2, r1, ip, lsl pc
   12fe4:	andeq	r2, r1, ip, lsl pc
   12fe8:	andeq	r2, r1, ip, lsl pc
   12fec:	andeq	r2, r1, ip, lsl pc
   12ff0:	andeq	r2, r1, ip, lsl pc
   12ff4:	andeq	r2, r1, ip, lsl pc
   12ff8:	andeq	r2, r1, ip, lsl pc
   12ffc:	andeq	r2, r1, ip, lsl pc
   13000:	andeq	r2, r1, ip, lsl pc
   13004:	andeq	r2, r1, ip, lsl pc
   13008:	andeq	r2, r1, ip, lsl pc
   1300c:	andeq	r2, r1, ip, lsl pc
   13010:	andeq	r2, r1, ip, lsl pc
   13014:	andeq	r2, r1, ip, lsl pc
   13018:	andeq	r2, r1, ip, lsl pc
   1301c:	andeq	r2, r1, ip, lsl pc
   13020:	andeq	r2, r1, r4, lsr lr
   13024:	andeq	r2, r1, r0, lsr lr
   13028:	andeq	r2, r1, r0, lsr lr
   1302c:	andeq	r2, r1, r0, asr #20
   13030:	andeq	r2, r1, r0, lsr lr
   13034:	andeq	r2, r1, r8, asr #29
   13038:	andeq	r2, r1, r0, lsr lr
   1303c:	muleq	r1, ip, lr
   13040:	andeq	r2, r1, r0, lsr lr
   13044:	andeq	r2, r1, r0, lsr lr
   13048:	andeq	r2, r1, r0, lsr lr
   1304c:	andeq	r2, r1, r8, asr #29
   13050:	andeq	r2, r1, r8, asr #29
   13054:	andeq	r2, r1, r8, asr #29
   13058:	andeq	r2, r1, r8, asr #29
   1305c:	andeq	r2, r1, r8, asr #29
   13060:	andeq	r2, r1, r8, asr #29
   13064:	andeq	r2, r1, r8, asr #29
   13068:	andeq	r2, r1, r8, asr #29
   1306c:	andeq	r2, r1, r8, asr #29
   13070:	andeq	r2, r1, r8, asr #29
   13074:	andeq	r2, r1, r8, asr #29
   13078:	andeq	r2, r1, r8, asr #29
   1307c:	andeq	r2, r1, r8, asr #29
   13080:	andeq	r2, r1, r8, asr #29
   13084:	andeq	r2, r1, r8, asr #29
   13088:	andeq	r2, r1, r8, asr #29
   1308c:	andeq	r2, r1, r0, lsr lr
   13090:	andeq	r2, r1, r0, lsr lr
   13094:	andeq	r2, r1, r0, lsr lr
   13098:	andeq	r2, r1, r0, lsr lr
   1309c:	andeq	r2, r1, ip, ror #28
   130a0:	andeq	r2, r1, ip, lsl pc
   130a4:	andeq	r2, r1, r8, asr #29
   130a8:	andeq	r2, r1, r8, asr #29
   130ac:	andeq	r2, r1, r8, asr #29
   130b0:	andeq	r2, r1, r8, asr #29
   130b4:	andeq	r2, r1, r8, asr #29
   130b8:	andeq	r2, r1, r8, asr #29
   130bc:	andeq	r2, r1, r8, asr #29
   130c0:	andeq	r2, r1, r8, asr #29
   130c4:	andeq	r2, r1, r8, asr #29
   130c8:	andeq	r2, r1, r8, asr #29
   130cc:	andeq	r2, r1, r8, asr #29
   130d0:	andeq	r2, r1, r8, asr #29
   130d4:	andeq	r2, r1, r8, asr #29
   130d8:	andeq	r2, r1, r8, asr #29
   130dc:	andeq	r2, r1, r8, asr #29
   130e0:	andeq	r2, r1, r8, asr #29
   130e4:	andeq	r2, r1, r8, asr #29
   130e8:	andeq	r2, r1, r8, asr #29
   130ec:	andeq	r2, r1, r8, asr #29
   130f0:	andeq	r2, r1, r8, asr #29
   130f4:	andeq	r2, r1, r8, asr #29
   130f8:	andeq	r2, r1, r8, asr #29
   130fc:	andeq	r2, r1, r8, asr #29
   13100:	andeq	r2, r1, r8, asr #29
   13104:	andeq	r2, r1, r8, asr #29
   13108:	andeq	r2, r1, r8, asr #29
   1310c:	andeq	r2, r1, r0, lsr lr
   13110:	andeq	r2, r1, ip, lsl #23
   13114:	andeq	r2, r1, r8, asr #29
   13118:	andeq	r2, r1, r0, lsr lr
   1311c:	andeq	r2, r1, r8, asr #29
   13120:	andeq	r2, r1, r0, lsr lr
   13124:	andeq	r2, r1, r8, asr #29
   13128:	andeq	r2, r1, r8, asr #29
   1312c:	andeq	r2, r1, r8, asr #29
   13130:	andeq	r2, r1, r8, asr #29
   13134:	andeq	r2, r1, r8, asr #29
   13138:	andeq	r2, r1, r8, asr #29
   1313c:	andeq	r2, r1, r8, asr #29
   13140:	andeq	r2, r1, r8, asr #29
   13144:	andeq	r2, r1, r8, asr #29
   13148:	andeq	r2, r1, r8, asr #29
   1314c:	andeq	r2, r1, r8, asr #29
   13150:	andeq	r2, r1, r8, asr #29
   13154:	andeq	r2, r1, r8, asr #29
   13158:	andeq	r2, r1, r8, asr #29
   1315c:	andeq	r2, r1, r8, asr #29
   13160:	andeq	r2, r1, r8, asr #29
   13164:	andeq	r2, r1, r8, asr #29
   13168:	andeq	r2, r1, r8, asr #29
   1316c:	andeq	r2, r1, r8, asr #29
   13170:	andeq	r2, r1, r8, asr #29
   13174:	andeq	r2, r1, r8, asr #29
   13178:	andeq	r2, r1, r8, asr #29
   1317c:	andeq	r2, r1, r8, asr #29
   13180:	andeq	r2, r1, r8, asr #29
   13184:	andeq	r2, r1, r8, asr #29
   13188:	andeq	r2, r1, r8, asr #29
   1318c:	andeq	r2, r1, r0, lsr #20
   13190:	andeq	r2, r1, r0, lsr lr
   13194:	andeq	r2, r1, r0, lsr #20
   13198:	andeq	r2, r1, r0, asr #20
   1319c:	mov	r3, #116	; 0x74
   131a0:	b	12c70 <__snprintf_chk@plt+0x1e50>
   131a4:	ldr	r3, [sp, #160]	; 0xa0
   131a8:	cmp	r3, #0
   131ac:	beq	12a7c <__snprintf_chk@plt+0x1c5c>
   131b0:	lsr	r3, r4, #5
   131b4:	ldr	r0, [sp, #160]	; 0xa0
   131b8:	uxtb	r3, r3
   131bc:	and	r1, r4, #31
   131c0:	ldr	r0, [r0, r3, lsl #2]
   131c4:	lsr	r3, r0, r1
   131c8:	tst	r3, #1
   131cc:	beq	12a7c <__snprintf_chk@plt+0x1c5c>
   131d0:	ldr	r3, [sp, #28]
   131d4:	cmp	r3, #0
   131d8:	beq	12bdc <__snprintf_chk@plt+0x1dbc>
   131dc:	ldr	sl, [sp, #32]
   131e0:	mov	r8, fp
   131e4:	b	12ca0 <__snprintf_chk@plt+0x1e80>
   131e8:	ldr	r3, [sp, #28]
   131ec:	cmp	r3, #0
   131f0:	bne	13744 <__snprintf_chk@plt+0x2924>
   131f4:	add	sl, sl, #1
   131f8:	ldr	r6, [sp, #40]	; 0x28
   131fc:	mov	r5, #0
   13200:	mov	r4, #92	; 0x5c
   13204:	b	12a98 <__snprintf_chk@plt+0x1c78>
   13208:	cmp	r9, r8
   1320c:	bne	1347c <__snprintf_chk@plt+0x265c>
   13210:	ldr	r0, [sp, #100]	; 0x64
   13214:	bl	10c94 <iswprint@plt>
   13218:	add	r5, r5, r4
   1321c:	cmp	r0, #0
   13220:	add	r0, sp, #104	; 0x68
   13224:	moveq	r6, #0
   13228:	bl	10c40 <mbsinit@plt>
   1322c:	cmp	r0, #0
   13230:	beq	13410 <__snprintf_chk@plt+0x25f0>
   13234:	mov	r2, r6
   13238:	mov	ip, r5
   1323c:	eor	r5, r2, #1
   13240:	ldr	r4, [sp, #80]	; 0x50
   13244:	ldr	r6, [sp, #84]	; 0x54
   13248:	ldr	r7, [sp, #88]	; 0x58
   1324c:	uxtb	r5, r5
   13250:	cmp	ip, #1
   13254:	bls	13754 <__snprintf_chk@plt+0x2934>
   13258:	ldr	r3, [sp, #44]	; 0x2c
   1325c:	and	r8, r3, r5
   13260:	mov	r5, r2
   13264:	uxtb	r8, r8
   13268:	add	r2, sl, ip
   1326c:	ldr	r0, [sp, #48]	; 0x30
   13270:	mov	r1, #0
   13274:	str	r5, [sp, #48]	; 0x30
   13278:	ldr	r9, [sp, #28]
   1327c:	ldr	ip, [sp, #40]	; 0x28
   13280:	ldr	r3, [sp, #32]
   13284:	ldr	r5, [sp, #152]	; 0x98
   13288:	b	13344 <__snprintf_chk@plt+0x2524>
   1328c:	cmp	r9, #0
   13290:	bne	13668 <__snprintf_chk@plt+0x2848>
   13294:	eor	r1, ip, #1
   13298:	cmp	r5, #2
   1329c:	movne	r1, #0
   132a0:	andeq	r1, r1, #1
   132a4:	cmp	r1, #0
   132a8:	beq	132e0 <__snprintf_chk@plt+0x24c0>
   132ac:	cmp	fp, r7
   132b0:	movhi	ip, #39	; 0x27
   132b4:	strbhi	ip, [r3, r7]
   132b8:	add	ip, r7, #1
   132bc:	cmp	fp, ip
   132c0:	movhi	lr, #36	; 0x24
   132c4:	strbhi	lr, [r3, ip]
   132c8:	add	ip, r7, #2
   132cc:	cmp	fp, ip
   132d0:	movhi	lr, #39	; 0x27
   132d4:	strbhi	lr, [r3, ip]
   132d8:	add	r7, r7, #3
   132dc:	mov	ip, r1
   132e0:	cmp	fp, r7
   132e4:	movhi	r1, #92	; 0x5c
   132e8:	strbhi	r1, [r3, r7]
   132ec:	add	r1, r7, #1
   132f0:	cmp	fp, r1
   132f4:	lsrhi	lr, r4, #6
   132f8:	addhi	lr, lr, #48	; 0x30
   132fc:	strbhi	lr, [r3, r1]
   13300:	add	lr, r7, #2
   13304:	cmp	fp, lr
   13308:	lsrhi	r1, r4, #3
   1330c:	andhi	r1, r1, #7
   13310:	addhi	r1, r1, #48	; 0x30
   13314:	add	sl, sl, #1
   13318:	strbhi	r1, [r3, lr]
   1331c:	and	r4, r4, #7
   13320:	cmp	r2, sl
   13324:	add	r4, r4, #48	; 0x30
   13328:	add	r7, r7, #3
   1332c:	bls	1368c <__snprintf_chk@plt+0x286c>
   13330:	mov	r1, r8
   13334:	cmp	fp, r7
   13338:	strbhi	r4, [r3, r7]
   1333c:	ldrb	r4, [r0, #1]!
   13340:	add	r7, r7, #1
   13344:	cmp	r8, #0
   13348:	bne	1328c <__snprintf_chk@plt+0x246c>
   1334c:	cmp	r6, #0
   13350:	bne	133a0 <__snprintf_chk@plt+0x2580>
   13354:	eor	r6, r1, #1
   13358:	and	r6, r6, ip
   1335c:	add	sl, sl, #1
   13360:	cmp	r2, sl
   13364:	uxtb	r6, r6
   13368:	bls	133c8 <__snprintf_chk@plt+0x25a8>
   1336c:	cmp	r6, #0
   13370:	beq	13334 <__snprintf_chk@plt+0x2514>
   13374:	cmp	fp, r7
   13378:	movhi	ip, #39	; 0x27
   1337c:	strbhi	ip, [r3, r7]
   13380:	add	ip, r7, #1
   13384:	cmp	fp, ip
   13388:	movhi	lr, #39	; 0x27
   1338c:	strbhi	lr, [r3, ip]
   13390:	add	r7, r7, #2
   13394:	mov	r6, r8
   13398:	mov	ip, r8
   1339c:	b	13334 <__snprintf_chk@plt+0x2514>
   133a0:	cmp	fp, r7
   133a4:	eor	r6, r1, #1
   133a8:	movhi	lr, #92	; 0x5c
   133ac:	and	r6, r6, ip
   133b0:	add	sl, sl, #1
   133b4:	strbhi	lr, [r3, r7]
   133b8:	cmp	r2, sl
   133bc:	add	r7, r7, #1
   133c0:	uxtb	r6, r6
   133c4:	bhi	1336c <__snprintf_chk@plt+0x254c>
   133c8:	str	ip, [sp, #40]	; 0x28
   133cc:	ldr	r5, [sp, #48]	; 0x30
   133d0:	b	12a98 <__snprintf_chk@plt+0x1c78>
   133d4:	ldr	r3, [sp, #24]
   133d8:	cmn	r3, #1
   133dc:	mov	r3, #0
   133e0:	str	r3, [sp, #104]	; 0x68
   133e4:	str	r3, [sp, #108]	; 0x6c
   133e8:	beq	13708 <__snprintf_chk@plt+0x28e8>
   133ec:	mov	r2, r5
   133f0:	mov	r3, #0
   133f4:	str	r7, [sp, #88]	; 0x58
   133f8:	ldr	r7, [sp, #152]	; 0x98
   133fc:	str	r5, [sp, #92]	; 0x5c
   13400:	str	r6, [sp, #84]	; 0x54
   13404:	mov	r5, r3
   13408:	mov	r6, r2
   1340c:	str	r4, [sp, #80]	; 0x50
   13410:	ldr	r3, [sp, #56]	; 0x38
   13414:	add	r9, sl, r5
   13418:	add	r8, r3, r9
   1341c:	ldr	r3, [sp, #24]
   13420:	mov	r1, r8
   13424:	sub	r2, r3, r9
   13428:	add	r0, sp, #100	; 0x64
   1342c:	add	r3, sp, #104	; 0x68
   13430:	bl	14fd0 <__snprintf_chk@plt+0x41b0>
   13434:	subs	r4, r0, #0
   13438:	beq	137e0 <__snprintf_chk@plt+0x29c0>
   1343c:	cmn	r4, #1
   13440:	beq	137c0 <__snprintf_chk@plt+0x29a0>
   13444:	cmn	r4, #2
   13448:	beq	13760 <__snprintf_chk@plt+0x2940>
   1344c:	ldr	r2, [sp, #28]
   13450:	cmp	r7, #2
   13454:	movne	r2, #0
   13458:	andeq	r2, r2, #1
   1345c:	cmp	r2, #0
   13460:	beq	13210 <__snprintf_chk@plt+0x23f0>
   13464:	cmp	r4, #1
   13468:	beq	13210 <__snprintf_chk@plt+0x23f0>
   1346c:	sub	r3, r4, #1
   13470:	add	r9, r3, r9
   13474:	ldr	r3, [sp, #56]	; 0x38
   13478:	add	r9, r3, r9
   1347c:	ldrb	r3, [r8, #1]!
   13480:	sub	r3, r3, #91	; 0x5b
   13484:	cmp	r3, #33	; 0x21
   13488:	ldrls	pc, [pc, r3, lsl #2]
   1348c:	b	13208 <__snprintf_chk@plt+0x23e8>
   13490:	andeq	r3, r1, r8, lsl r5
   13494:	andeq	r3, r1, r8, lsl r5
   13498:	andeq	r3, r1, r8, lsl #4
   1349c:	andeq	r3, r1, r8, lsl r5
   134a0:	andeq	r3, r1, r8, lsl #4
   134a4:	andeq	r3, r1, r8, lsl r5
   134a8:	andeq	r3, r1, r8, lsl #4
   134ac:	andeq	r3, r1, r8, lsl #4
   134b0:	andeq	r3, r1, r8, lsl #4
   134b4:	andeq	r3, r1, r8, lsl #4
   134b8:	andeq	r3, r1, r8, lsl #4
   134bc:	andeq	r3, r1, r8, lsl #4
   134c0:	andeq	r3, r1, r8, lsl #4
   134c4:	andeq	r3, r1, r8, lsl #4
   134c8:	andeq	r3, r1, r8, lsl #4
   134cc:	andeq	r3, r1, r8, lsl #4
   134d0:	andeq	r3, r1, r8, lsl #4
   134d4:	andeq	r3, r1, r8, lsl #4
   134d8:	andeq	r3, r1, r8, lsl #4
   134dc:	andeq	r3, r1, r8, lsl #4
   134e0:	andeq	r3, r1, r8, lsl #4
   134e4:	andeq	r3, r1, r8, lsl #4
   134e8:	andeq	r3, r1, r8, lsl #4
   134ec:	andeq	r3, r1, r8, lsl #4
   134f0:	andeq	r3, r1, r8, lsl #4
   134f4:	andeq	r3, r1, r8, lsl #4
   134f8:	andeq	r3, r1, r8, lsl #4
   134fc:	andeq	r3, r1, r8, lsl #4
   13500:	andeq	r3, r1, r8, lsl #4
   13504:	andeq	r3, r1, r8, lsl #4
   13508:	andeq	r3, r1, r8, lsl #4
   1350c:	andeq	r3, r1, r8, lsl #4
   13510:	andeq	r3, r1, r8, lsl #4
   13514:	andeq	r3, r1, r8, lsl r5
   13518:	mov	r3, #2
   1351c:	ldr	sl, [sp, #32]
   13520:	mov	r8, fp
   13524:	str	r3, [sp, #152]	; 0x98
   13528:	b	12ca0 <__snprintf_chk@plt+0x1e80>
   1352c:	ldr	r3, [sp, #156]	; 0x9c
   13530:	tst	r3, #1
   13534:	bne	13660 <__snprintf_chk@plt+0x2840>
   13538:	ldr	r3, [sp, #152]	; 0x98
   1353c:	ldr	r4, [sp, #44]	; 0x2c
   13540:	sub	r2, r3, #2
   13544:	mov	r5, #0
   13548:	clz	r2, r2
   1354c:	mov	r8, r4
   13550:	lsr	r2, r2, #5
   13554:	b	12a60 <__snprintf_chk@plt+0x1c40>
   13558:	ldr	r3, [sp, #156]	; 0x9c
   1355c:	ands	r9, r3, #4
   13560:	beq	13698 <__snprintf_chk@plt+0x2878>
   13564:	ldr	r2, [sp, #24]
   13568:	add	r3, sl, #2
   1356c:	cmp	r3, r2
   13570:	bcs	13584 <__snprintf_chk@plt+0x2764>
   13574:	ldr	r2, [sp, #48]	; 0x30
   13578:	ldrb	r4, [r2, #1]
   1357c:	cmp	r4, #63	; 0x3f
   13580:	beq	13820 <__snprintf_chk@plt+0x2a00>
   13584:	mov	r2, #0
   13588:	mov	r8, r2
   1358c:	mov	r5, r2
   13590:	mov	r4, #63	; 0x3f
   13594:	b	12a60 <__snprintf_chk@plt+0x1c40>
   13598:	ldr	r3, [sp, #28]
   1359c:	cmp	r3, #0
   135a0:	bne	138c4 <__snprintf_chk@plt+0x2aa4>
   135a4:	mov	r2, r5
   135a8:	mov	r8, r3
   135ac:	mov	r5, #0
   135b0:	mov	r4, #63	; 0x3f
   135b4:	b	12a60 <__snprintf_chk@plt+0x1c40>
   135b8:	ldr	r3, [sp, #28]
   135bc:	cmp	r3, #0
   135c0:	bne	138c4 <__snprintf_chk@plt+0x2aa4>
   135c4:	ldr	r2, [sp, #72]	; 0x48
   135c8:	adds	r3, fp, #0
   135cc:	movne	r3, #1
   135d0:	cmp	r2, #0
   135d4:	movne	r3, #0
   135d8:	cmp	r3, #0
   135dc:	strne	fp, [sp, #72]	; 0x48
   135e0:	movne	fp, #0
   135e4:	bne	13620 <__snprintf_chk@plt+0x2800>
   135e8:	cmp	fp, r7
   135ec:	movhi	r2, #39	; 0x27
   135f0:	ldrhi	r3, [sp, #32]
   135f4:	strbhi	r2, [r3, r7]
   135f8:	add	r3, r7, #1
   135fc:	cmp	fp, r3
   13600:	movhi	r1, #92	; 0x5c
   13604:	ldrhi	r2, [sp, #32]
   13608:	strbhi	r1, [r2, r3]
   1360c:	add	r3, r7, #2
   13610:	cmp	fp, r3
   13614:	movhi	r1, #39	; 0x27
   13618:	ldrhi	r2, [sp, #32]
   1361c:	strbhi	r1, [r2, r3]
   13620:	ldr	r3, [sp, #28]
   13624:	add	r7, r7, #3
   13628:	mov	r2, r5
   1362c:	mov	r8, r3
   13630:	str	r5, [sp, #68]	; 0x44
   13634:	str	r3, [sp, #40]	; 0x28
   13638:	mov	r4, #39	; 0x27
   1363c:	b	12a60 <__snprintf_chk@plt+0x1c40>
   13640:	ldr	r3, [sp, #56]	; 0x38
   13644:	ldrb	r3, [r3, #1]
   13648:	adds	r3, r3, #0
   1364c:	movne	r3, #1
   13650:	b	12a38 <__snprintf_chk@plt+0x1c18>
   13654:	ldr	r5, [sp, #28]
   13658:	mov	r4, #48	; 0x30
   1365c:	b	12a60 <__snprintf_chk@plt+0x1c40>
   13660:	add	sl, sl, #1
   13664:	b	12590 <__snprintf_chk@plt+0x1770>
   13668:	mov	sl, r3
   1366c:	ldr	r3, [sp, #28]
   13670:	mov	r8, fp
   13674:	str	r3, [sp, #44]	; 0x2c
   13678:	ldr	r3, [sp, #152]	; 0x98
   1367c:	sub	r2, r3, #2
   13680:	clz	r2, r2
   13684:	lsr	r2, r2, #5
   13688:	b	12ca0 <__snprintf_chk@plt+0x1e80>
   1368c:	str	ip, [sp, #40]	; 0x28
   13690:	ldr	r5, [sp, #48]	; 0x30
   13694:	b	12ad0 <__snprintf_chk@plt+0x1cb0>
   13698:	mov	r2, r9
   1369c:	mov	r8, r9
   136a0:	mov	r5, #0
   136a4:	mov	r4, #63	; 0x3f
   136a8:	b	12a60 <__snprintf_chk@plt+0x1c40>
   136ac:	cmp	fp, #0
   136b0:	beq	13728 <__snprintf_chk@plt+0x2908>
   136b4:	ldr	r1, [sp, #32]
   136b8:	mov	r3, #34	; 0x22
   136bc:	mov	r2, #1
   136c0:	strb	r3, [r1]
   136c4:	ldr	r3, [pc, #332]	; 13818 <__snprintf_chk@plt+0x29f8>
   136c8:	str	r2, [sp, #52]	; 0x34
   136cc:	mov	r7, r2
   136d0:	str	r2, [sp, #44]	; 0x2c
   136d4:	str	r3, [sp, #64]	; 0x40
   136d8:	b	12580 <__snprintf_chk@plt+0x1760>
   136dc:	ldr	r3, [pc, #300]	; 13810 <__snprintf_chk@plt+0x29f0>
   136e0:	str	r3, [sp, #64]	; 0x40
   136e4:	mov	r3, #0
   136e8:	str	r3, [sp, #28]
   136ec:	mov	r3, #1
   136f0:	str	r3, [sp, #52]	; 0x34
   136f4:	mov	r7, r3
   136f8:	mov	r3, #2
   136fc:	str	r3, [sp, #152]	; 0x98
   13700:	b	12580 <__snprintf_chk@plt+0x1760>
   13704:	bl	10e14 <abort@plt>
   13708:	ldr	r0, [sp, #56]	; 0x38
   1370c:	bl	10d54 <strlen@plt>
   13710:	str	r0, [sp, #24]
   13714:	b	133ec <__snprintf_chk@plt+0x25cc>
   13718:	mov	r5, r8
   1371c:	mov	r4, #48	; 0x30
   13720:	ldr	r8, [sp, #44]	; 0x2c
   13724:	b	12a60 <__snprintf_chk@plt+0x1c40>
   13728:	mov	r3, #1
   1372c:	str	r3, [sp, #52]	; 0x34
   13730:	mov	r7, r3
   13734:	str	r3, [sp, #44]	; 0x2c
   13738:	ldr	r3, [pc, #216]	; 13818 <__snprintf_chk@plt+0x29f8>
   1373c:	str	r3, [sp, #64]	; 0x40
   13740:	b	12580 <__snprintf_chk@plt+0x1760>
   13744:	ldr	sl, [sp, #32]
   13748:	mov	r8, fp
   1374c:	mov	r2, r3
   13750:	b	12ca0 <__snprintf_chk@plt+0x1e80>
   13754:	mov	r3, r5
   13758:	mov	r5, r2
   1375c:	b	12f58 <__snprintf_chk@plt+0x2138>
   13760:	ldr	r1, [sp, #24]
   13764:	mov	r2, r5
   13768:	cmp	r1, r9
   1376c:	mov	ip, r5
   13770:	ldr	r4, [sp, #80]	; 0x50
   13774:	ldr	r5, [sp, #92]	; 0x5c
   13778:	ldr	r6, [sp, #84]	; 0x54
   1377c:	ldr	r7, [sp, #88]	; 0x58
   13780:	bls	137b4 <__snprintf_chk@plt+0x2994>
   13784:	ldrb	r3, [r8]
   13788:	cmp	r3, #0
   1378c:	bne	137a0 <__snprintf_chk@plt+0x2980>
   13790:	b	137b8 <__snprintf_chk@plt+0x2998>
   13794:	ldrb	r3, [r8, #1]!
   13798:	cmp	r3, #0
   1379c:	beq	138b8 <__snprintf_chk@plt+0x2a98>
   137a0:	add	r2, r2, #1
   137a4:	add	r3, sl, r2
   137a8:	cmp	r1, r3
   137ac:	bhi	13794 <__snprintf_chk@plt+0x2974>
   137b0:	mov	ip, r2
   137b4:	mov	r3, #0
   137b8:	mov	r2, r3
   137bc:	b	13250 <__snprintf_chk@plt+0x2430>
   137c0:	mov	r3, #0
   137c4:	mov	ip, r5
   137c8:	ldr	r4, [sp, #80]	; 0x50
   137cc:	ldr	r5, [sp, #92]	; 0x5c
   137d0:	ldr	r6, [sp, #84]	; 0x54
   137d4:	ldr	r7, [sp, #88]	; 0x58
   137d8:	mov	r2, r3
   137dc:	b	13250 <__snprintf_chk@plt+0x2430>
   137e0:	mov	r3, r6
   137e4:	mov	ip, r5
   137e8:	eor	r5, r3, #1
   137ec:	mov	r2, r6
   137f0:	ldr	r4, [sp, #80]	; 0x50
   137f4:	ldr	r6, [sp, #84]	; 0x54
   137f8:	ldr	r7, [sp, #88]	; 0x58
   137fc:	uxtb	r5, r5
   13800:	b	13250 <__snprintf_chk@plt+0x2430>
   13804:	ldr	sl, [sp, #32]
   13808:	mov	r8, fp
   1380c:	b	13674 <__snprintf_chk@plt+0x2854>
   13810:	andeq	r5, r1, ip, lsr #27
   13814:			; <UNDEFINED> instruction: 0x00015db0
   13818:	andeq	r5, r1, r8, lsr #27
   1381c:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   13820:	ldr	r2, [sp, #56]	; 0x38
   13824:	ldrb	r1, [r2, r3]
   13828:	sub	r2, r1, #33	; 0x21
   1382c:	uxtb	r2, r2
   13830:	cmp	r2, #29
   13834:	bhi	138d4 <__snprintf_chk@plt+0x2ab4>
   13838:	ldr	r0, [pc, #-36]	; 1381c <__snprintf_chk@plt+0x29fc>
   1383c:	mov	ip, #1
   13840:	ands	r2, r0, ip, lsl r2
   13844:	beq	138e4 <__snprintf_chk@plt+0x2ac4>
   13848:	ldr	r2, [sp, #28]
   1384c:	cmp	r2, #0
   13850:	bne	139e4 <__snprintf_chk@plt+0x2bc4>
   13854:	cmp	fp, r7
   13858:	ldr	r8, [sp, #28]
   1385c:	ldrhi	r2, [sp, #32]
   13860:	mov	sl, r3
   13864:	mov	r5, r8
   13868:	strbhi	r4, [r2, r7]
   1386c:	add	r2, r7, #1
   13870:	cmp	fp, r2
   13874:	movhi	r0, #34	; 0x22
   13878:	ldrhi	ip, [sp, #32]
   1387c:	mov	r4, r1
   13880:	strbhi	r0, [ip, r2]
   13884:	add	r2, r7, #2
   13888:	cmp	fp, r2
   1388c:	movhi	r0, #34	; 0x22
   13890:	ldrhi	ip, [sp, #32]
   13894:	strbhi	r0, [ip, r2]
   13898:	add	r2, r7, #3
   1389c:	cmp	fp, r2
   138a0:	movhi	r0, #63	; 0x3f
   138a4:	ldrhi	ip, [sp, #32]
   138a8:	add	r7, r7, #4
   138ac:	strbhi	r0, [ip, r2]
   138b0:	mov	r2, r8
   138b4:	b	12a60 <__snprintf_chk@plt+0x1c40>
   138b8:	mov	ip, r2
   138bc:	mov	r2, r3
   138c0:	b	13250 <__snprintf_chk@plt+0x2430>
   138c4:	ldr	sl, [sp, #32]
   138c8:	mov	r8, fp
   138cc:	ldr	r2, [sp, #28]
   138d0:	b	12ca0 <__snprintf_chk@plt+0x1e80>
   138d4:	mov	r2, #0
   138d8:	mov	r8, r2
   138dc:	mov	r5, r2
   138e0:	b	12a60 <__snprintf_chk@plt+0x1c40>
   138e4:	mov	r8, r2
   138e8:	mov	r5, #0
   138ec:	b	12a60 <__snprintf_chk@plt+0x1c40>
   138f0:	ldr	r1, [sp, #152]	; 0x98
   138f4:	bl	123bc <__snprintf_chk@plt+0x159c>
   138f8:	str	r0, [sp, #168]	; 0xa8
   138fc:	b	1291c <__snprintf_chk@plt+0x1afc>
   13900:	ldr	r1, [sp, #152]	; 0x98
   13904:	bl	123bc <__snprintf_chk@plt+0x159c>
   13908:	str	r0, [sp, #164]	; 0xa4
   1390c:	b	128fc <__snprintf_chk@plt+0x1adc>
   13910:	ldr	r7, [sp, #28]
   13914:	b	1295c <__snprintf_chk@plt+0x1b3c>
   13918:	ldr	sl, [sp, #32]
   1391c:	ldr	r2, [sp, #68]	; 0x44
   13920:	mov	r8, fp
   13924:	mov	fp, r7
   13928:	ldr	r3, [sp, #64]	; 0x40
   1392c:	cmp	r3, #0
   13930:	moveq	r2, #0
   13934:	andne	r2, r2, #1
   13938:	cmp	r2, #0
   1393c:	beq	13968 <__snprintf_chk@plt+0x2b48>
   13940:	mov	r2, r3
   13944:	ldrb	r3, [r3]
   13948:	cmp	r3, #0
   1394c:	beq	13968 <__snprintf_chk@plt+0x2b48>
   13950:	cmp	r8, fp
   13954:	strbhi	r3, [sl, fp]
   13958:	ldrb	r3, [r2, #1]!
   1395c:	add	fp, fp, #1
   13960:	cmp	r3, #0
   13964:	bne	13950 <__snprintf_chk@plt+0x2b30>
   13968:	cmp	r8, fp
   1396c:	movhi	r3, #0
   13970:	strbhi	r3, [sl, fp]
   13974:	b	12cfc <__snprintf_chk@plt+0x1edc>
   13978:	ldr	r3, [sp, #168]	; 0xa8
   1397c:	ldr	sl, [sp, #32]
   13980:	str	r3, [sp, #16]
   13984:	ldr	r3, [sp, #164]	; 0xa4
   13988:	mov	ip, #5
   1398c:	str	r3, [sp, #12]
   13990:	ldr	r3, [sp, #160]	; 0xa0
   13994:	ldr	r2, [sp, #56]	; 0x38
   13998:	str	r3, [sp, #8]
   1399c:	ldr	r3, [sp, #156]	; 0x9c
   139a0:	ldr	r1, [sp, #72]	; 0x48
   139a4:	str	r3, [sp, #4]
   139a8:	mov	r0, sl
   139ac:	ldr	r3, [sp, #24]
   139b0:	str	ip, [sp]
   139b4:	bl	124dc <__snprintf_chk@plt+0x16bc>
   139b8:	mov	fp, r0
   139bc:	b	12cfc <__snprintf_chk@plt+0x1edc>
   139c0:	mov	r8, fp
   139c4:	ldr	sl, [sp, #32]
   139c8:	mov	fp, r7
   139cc:	mov	r2, r3
   139d0:	b	13928 <__snprintf_chk@plt+0x2b08>
   139d4:	mov	r8, fp
   139d8:	ldr	sl, [sp, #32]
   139dc:	mov	fp, r7
   139e0:	b	13928 <__snprintf_chk@plt+0x2b08>
   139e4:	ldr	sl, [sp, #32]
   139e8:	mov	r8, fp
   139ec:	b	12cb8 <__snprintf_chk@plt+0x1e98>
   139f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   139f4:	sub	sp, sp, #52	; 0x34
   139f8:	mov	r4, r0
   139fc:	mov	r5, r3
   13a00:	mov	sl, r1
   13a04:	mov	fp, r2
   13a08:	bl	10d60 <__errno_location@plt>
   13a0c:	ldr	r7, [pc, #412]	; 13bb0 <__snprintf_chk@plt+0x2d90>
   13a10:	cmn	r4, #-2147483647	; 0x80000001
   13a14:	ldr	r6, [r7]
   13a18:	mov	r8, r0
   13a1c:	movne	r0, #0
   13a20:	moveq	r0, #1
   13a24:	ldr	r3, [r8]
   13a28:	orrs	r0, r0, r4, lsr #31
   13a2c:	str	r3, [sp, #24]
   13a30:	bne	13bac <__snprintf_chk@plt+0x2d8c>
   13a34:	ldr	r2, [r7, #4]
   13a38:	cmp	r4, r2
   13a3c:	blt	13a9c <__snprintf_chk@plt+0x2c7c>
   13a40:	add	r9, r7, #8
   13a44:	cmp	r6, r9
   13a48:	str	r2, [sp, #44]	; 0x2c
   13a4c:	beq	13b7c <__snprintf_chk@plt+0x2d5c>
   13a50:	mov	r3, #8
   13a54:	sub	r2, r4, r2
   13a58:	mov	r0, r6
   13a5c:	str	r3, [sp]
   13a60:	add	r2, r2, #1
   13a64:	mvn	r3, #-2147483648	; 0x80000000
   13a68:	add	r1, sp, #44	; 0x2c
   13a6c:	bl	1485c <__snprintf_chk@plt+0x3a3c>
   13a70:	mov	r6, r0
   13a74:	str	r0, [r7]
   13a78:	ldr	r0, [r7, #4]
   13a7c:	ldr	r2, [sp, #44]	; 0x2c
   13a80:	mov	r1, #0
   13a84:	sub	r2, r2, r0
   13a88:	add	r0, r6, r0, lsl #3
   13a8c:	lsl	r2, r2, #3
   13a90:	bl	10d84 <memset@plt>
   13a94:	ldr	r3, [sp, #44]	; 0x2c
   13a98:	str	r3, [r7, #4]
   13a9c:	add	r3, r6, r4, lsl #3
   13aa0:	ldr	r1, [r5, #4]
   13aa4:	ldr	r7, [r3, #4]
   13aa8:	ldr	r9, [r6, r4, lsl #3]
   13aac:	ldr	r2, [r5, #40]	; 0x28
   13ab0:	ldr	ip, [r5, #44]	; 0x2c
   13ab4:	add	r0, r5, #8
   13ab8:	str	r3, [sp, #28]
   13abc:	ldr	r3, [r5]
   13ac0:	orr	r1, r1, #1
   13ac4:	mov	lr, r0
   13ac8:	str	r1, [sp, #32]
   13acc:	str	r0, [sp, #36]	; 0x24
   13ad0:	str	r1, [sp, #4]
   13ad4:	str	r2, [sp, #12]
   13ad8:	str	r3, [sp]
   13adc:	mov	r0, r7
   13ae0:	mov	r1, r9
   13ae4:	str	ip, [sp, #16]
   13ae8:	str	lr, [sp, #8]
   13aec:	mov	r3, fp
   13af0:	mov	r2, sl
   13af4:	bl	124dc <__snprintf_chk@plt+0x16bc>
   13af8:	cmp	r9, r0
   13afc:	bhi	13b68 <__snprintf_chk@plt+0x2d48>
   13b00:	ldr	r3, [pc, #172]	; 13bb4 <__snprintf_chk@plt+0x2d94>
   13b04:	add	r9, r0, #1
   13b08:	cmp	r7, r3
   13b0c:	str	r9, [r6, r4, lsl #3]
   13b10:	beq	13b1c <__snprintf_chk@plt+0x2cfc>
   13b14:	mov	r0, r7
   13b18:	bl	14ea4 <__snprintf_chk@plt+0x4084>
   13b1c:	mov	r0, r9
   13b20:	bl	146f8 <__snprintf_chk@plt+0x38d8>
   13b24:	ldr	lr, [sp, #28]
   13b28:	ldr	ip, [r5, #44]	; 0x2c
   13b2c:	ldr	r4, [r5, #40]	; 0x28
   13b30:	mov	r3, fp
   13b34:	mov	r2, sl
   13b38:	mov	r1, r9
   13b3c:	str	r0, [lr, #4]
   13b40:	ldr	lr, [r5]
   13b44:	ldr	r5, [sp, #36]	; 0x24
   13b48:	str	ip, [sp, #16]
   13b4c:	str	r5, [sp, #8]
   13b50:	ldr	r5, [sp, #32]
   13b54:	str	r4, [sp, #12]
   13b58:	str	r5, [sp, #4]
   13b5c:	str	lr, [sp]
   13b60:	mov	r7, r0
   13b64:	bl	124dc <__snprintf_chk@plt+0x16bc>
   13b68:	ldr	r3, [sp, #24]
   13b6c:	mov	r0, r7
   13b70:	str	r3, [r8]
   13b74:	add	sp, sp, #52	; 0x34
   13b78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b7c:	mov	r3, #8
   13b80:	sub	r2, r4, r2
   13b84:	str	r3, [sp]
   13b88:	add	r1, sp, #44	; 0x2c
   13b8c:	add	r2, r2, #1
   13b90:	mvn	r3, #-2147483648	; 0x80000000
   13b94:	bl	1485c <__snprintf_chk@plt+0x3a3c>
   13b98:	mov	r6, r0
   13b9c:	ldm	r9, {r0, r1}
   13ba0:	str	r6, [r7]
   13ba4:	stm	r6, {r0, r1}
   13ba8:	b	13a78 <__snprintf_chk@plt+0x2c58>
   13bac:	bl	10e14 <abort@plt>
   13bb0:	andeq	r7, r2, r0, ror #1
   13bb4:	andeq	r7, r2, ip, asr #2
   13bb8:	push	{r4, r5, r6, lr}
   13bbc:	mov	r5, r0
   13bc0:	bl	10d60 <__errno_location@plt>
   13bc4:	cmp	r5, #0
   13bc8:	mov	r1, #48	; 0x30
   13bcc:	mov	r4, r0
   13bd0:	ldr	r0, [pc, #16]	; 13be8 <__snprintf_chk@plt+0x2dc8>
   13bd4:	ldr	r6, [r4]
   13bd8:	movne	r0, r5
   13bdc:	bl	14b58 <__snprintf_chk@plt+0x3d38>
   13be0:	str	r6, [r4]
   13be4:	pop	{r4, r5, r6, pc}
   13be8:	andeq	r7, r2, ip, asr #4
   13bec:	ldr	r3, [pc, #12]	; 13c00 <__snprintf_chk@plt+0x2de0>
   13bf0:	cmp	r0, #0
   13bf4:	moveq	r0, r3
   13bf8:	ldr	r0, [r0]
   13bfc:	bx	lr
   13c00:	andeq	r7, r2, ip, asr #4
   13c04:	ldr	r3, [pc, #12]	; 13c18 <__snprintf_chk@plt+0x2df8>
   13c08:	cmp	r0, #0
   13c0c:	moveq	r0, r3
   13c10:	str	r1, [r0]
   13c14:	bx	lr
   13c18:	andeq	r7, r2, ip, asr #4
   13c1c:	ldr	r3, [pc, #52]	; 13c58 <__snprintf_chk@plt+0x2e38>
   13c20:	cmp	r0, #0
   13c24:	moveq	r0, r3
   13c28:	add	r3, r0, #8
   13c2c:	push	{lr}		; (str lr, [sp, #-4]!)
   13c30:	lsr	lr, r1, #5
   13c34:	and	r1, r1, #31
   13c38:	ldr	ip, [r3, lr, lsl #2]
   13c3c:	lsr	r0, ip, r1
   13c40:	eor	r2, r2, r0
   13c44:	and	r2, r2, #1
   13c48:	and	r0, r0, #1
   13c4c:	eor	r1, ip, r2, lsl r1
   13c50:	str	r1, [r3, lr, lsl #2]
   13c54:	pop	{pc}		; (ldr pc, [sp], #4)
   13c58:	andeq	r7, r2, ip, asr #4
   13c5c:	ldr	r3, [pc, #16]	; 13c74 <__snprintf_chk@plt+0x2e54>
   13c60:	cmp	r0, #0
   13c64:	movne	r3, r0
   13c68:	ldr	r0, [r3, #4]
   13c6c:	str	r1, [r3, #4]
   13c70:	bx	lr
   13c74:	andeq	r7, r2, ip, asr #4
   13c78:	ldr	r3, [pc, #44]	; 13cac <__snprintf_chk@plt+0x2e8c>
   13c7c:	cmp	r0, #0
   13c80:	moveq	r0, r3
   13c84:	mov	ip, #10
   13c88:	cmp	r2, #0
   13c8c:	cmpne	r1, #0
   13c90:	str	ip, [r0]
   13c94:	beq	13ca4 <__snprintf_chk@plt+0x2e84>
   13c98:	str	r1, [r0, #40]	; 0x28
   13c9c:	str	r2, [r0, #44]	; 0x2c
   13ca0:	bx	lr
   13ca4:	push	{r4, lr}
   13ca8:	bl	10e14 <abort@plt>
   13cac:	andeq	r7, r2, ip, asr #4
   13cb0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13cb4:	sub	sp, sp, #24
   13cb8:	ldr	ip, [pc, #108]	; 13d2c <__snprintf_chk@plt+0x2f0c>
   13cbc:	ldr	r4, [sp, #56]	; 0x38
   13cc0:	mov	r9, r2
   13cc4:	cmp	r4, #0
   13cc8:	moveq	r4, ip
   13ccc:	mov	sl, r3
   13cd0:	mov	r7, r0
   13cd4:	mov	r8, r1
   13cd8:	bl	10d60 <__errno_location@plt>
   13cdc:	ldr	r3, [r4, #44]	; 0x2c
   13ce0:	mov	r1, r8
   13ce4:	ldr	r6, [r0]
   13ce8:	str	r3, [sp, #16]
   13cec:	ldr	r2, [r4, #40]	; 0x28
   13cf0:	add	r3, r4, #8
   13cf4:	str	r3, [sp, #8]
   13cf8:	str	r2, [sp, #12]
   13cfc:	ldr	r2, [r4, #4]
   13d00:	mov	r5, r0
   13d04:	str	r2, [sp, #4]
   13d08:	ldr	ip, [r4]
   13d0c:	mov	r3, sl
   13d10:	mov	r2, r9
   13d14:	mov	r0, r7
   13d18:	str	ip, [sp]
   13d1c:	bl	124dc <__snprintf_chk@plt+0x16bc>
   13d20:	str	r6, [r5]
   13d24:	add	sp, sp, #24
   13d28:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13d2c:	andeq	r7, r2, ip, asr #4
   13d30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13d34:	cmp	r3, #0
   13d38:	sub	sp, sp, #44	; 0x2c
   13d3c:	ldr	r4, [pc, #192]	; 13e04 <__snprintf_chk@plt+0x2fe4>
   13d40:	mov	r6, r2
   13d44:	movne	r4, r3
   13d48:	mov	r9, r1
   13d4c:	mov	r8, r0
   13d50:	bl	10d60 <__errno_location@plt>
   13d54:	ldr	r3, [r4, #44]	; 0x2c
   13d58:	ldr	r5, [r4, #4]
   13d5c:	add	sl, r4, #8
   13d60:	cmp	r6, #0
   13d64:	orreq	r5, r5, #1
   13d68:	mov	r1, #0
   13d6c:	ldr	r2, [r0]
   13d70:	str	r3, [sp, #16]
   13d74:	ldr	r3, [r4, #40]	; 0x28
   13d78:	stmib	sp, {r5, sl}
   13d7c:	str	r3, [sp, #12]
   13d80:	ldr	r3, [r4]
   13d84:	mov	r7, r0
   13d88:	str	r2, [sp, #28]
   13d8c:	str	r3, [sp]
   13d90:	mov	r2, r8
   13d94:	mov	r3, r9
   13d98:	mov	r0, r1
   13d9c:	bl	124dc <__snprintf_chk@plt+0x16bc>
   13da0:	add	r1, r0, #1
   13da4:	mov	fp, r0
   13da8:	mov	r0, r1
   13dac:	str	r1, [sp, #36]	; 0x24
   13db0:	bl	146f8 <__snprintf_chk@plt+0x38d8>
   13db4:	ldr	r3, [r4, #44]	; 0x2c
   13db8:	mov	r2, r8
   13dbc:	str	r3, [sp, #16]
   13dc0:	ldr	r3, [r4, #40]	; 0x28
   13dc4:	str	r5, [sp, #4]
   13dc8:	str	r3, [sp, #12]
   13dcc:	str	sl, [sp, #8]
   13dd0:	ldr	ip, [r4]
   13dd4:	ldr	r1, [sp, #36]	; 0x24
   13dd8:	mov	r3, r9
   13ddc:	str	ip, [sp]
   13de0:	str	r0, [sp, #32]
   13de4:	bl	124dc <__snprintf_chk@plt+0x16bc>
   13de8:	ldr	r2, [sp, #28]
   13dec:	cmp	r6, #0
   13df0:	str	r2, [r7]
   13df4:	ldr	r0, [sp, #32]
   13df8:	strne	fp, [r6]
   13dfc:	add	sp, sp, #44	; 0x2c
   13e00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e04:	andeq	r7, r2, ip, asr #4
   13e08:	mov	r3, r2
   13e0c:	mov	r2, #0
   13e10:	b	13d30 <__snprintf_chk@plt+0x2f10>
   13e14:	push	{r4, r5, r6, r7, r8, lr}
   13e18:	ldr	r6, [pc, #116]	; 13e94 <__snprintf_chk@plt+0x3074>
   13e1c:	ldr	r3, [r6, #4]
   13e20:	ldr	r7, [r6]
   13e24:	cmp	r3, #1
   13e28:	movgt	r5, r7
   13e2c:	movgt	r4, #1
   13e30:	ble	13e50 <__snprintf_chk@plt+0x3030>
   13e34:	ldr	r0, [r5, #12]
   13e38:	bl	14ea4 <__snprintf_chk@plt+0x4084>
   13e3c:	ldr	r3, [r6, #4]
   13e40:	add	r4, r4, #1
   13e44:	cmp	r3, r4
   13e48:	add	r5, r5, #8
   13e4c:	bgt	13e34 <__snprintf_chk@plt+0x3014>
   13e50:	ldr	r0, [r7, #4]
   13e54:	ldr	r4, [pc, #60]	; 13e98 <__snprintf_chk@plt+0x3078>
   13e58:	cmp	r0, r4
   13e5c:	beq	13e70 <__snprintf_chk@plt+0x3050>
   13e60:	bl	14ea4 <__snprintf_chk@plt+0x4084>
   13e64:	mov	r3, #256	; 0x100
   13e68:	str	r4, [r6, #12]
   13e6c:	str	r3, [r6, #8]
   13e70:	ldr	r4, [pc, #36]	; 13e9c <__snprintf_chk@plt+0x307c>
   13e74:	cmp	r7, r4
   13e78:	beq	13e88 <__snprintf_chk@plt+0x3068>
   13e7c:	mov	r0, r7
   13e80:	bl	14ea4 <__snprintf_chk@plt+0x4084>
   13e84:	str	r4, [r6]
   13e88:	mov	r3, #1
   13e8c:	str	r3, [r6, #4]
   13e90:	pop	{r4, r5, r6, r7, r8, pc}
   13e94:	andeq	r7, r2, r0, ror #1
   13e98:	andeq	r7, r2, ip, asr #2
   13e9c:	andeq	r7, r2, r8, ror #1
   13ea0:	ldr	r3, [pc, #4]	; 13eac <__snprintf_chk@plt+0x308c>
   13ea4:	mvn	r2, #0
   13ea8:	b	139f0 <__snprintf_chk@plt+0x2bd0>
   13eac:	andeq	r7, r2, ip, asr #4
   13eb0:	ldr	r3, [pc]	; 13eb8 <__snprintf_chk@plt+0x3098>
   13eb4:	b	139f0 <__snprintf_chk@plt+0x2bd0>
   13eb8:	andeq	r7, r2, ip, asr #4
   13ebc:	mov	r1, r0
   13ec0:	ldr	r3, [pc, #8]	; 13ed0 <__snprintf_chk@plt+0x30b0>
   13ec4:	mvn	r2, #0
   13ec8:	mov	r0, #0
   13ecc:	b	139f0 <__snprintf_chk@plt+0x2bd0>
   13ed0:	andeq	r7, r2, ip, asr #4
   13ed4:	mov	r2, r1
   13ed8:	ldr	r3, [pc, #8]	; 13ee8 <__snprintf_chk@plt+0x30c8>
   13edc:	mov	r1, r0
   13ee0:	mov	r0, #0
   13ee4:	b	139f0 <__snprintf_chk@plt+0x2bd0>
   13ee8:	andeq	r7, r2, ip, asr #4
   13eec:	push	{r4, r5, lr}
   13ef0:	sub	sp, sp, #52	; 0x34
   13ef4:	mov	r5, r2
   13ef8:	mov	r4, r0
   13efc:	mov	r0, sp
   13f00:	bl	1238c <__snprintf_chk@plt+0x156c>
   13f04:	mov	r3, sp
   13f08:	mov	r1, r5
   13f0c:	mov	r0, r4
   13f10:	mvn	r2, #0
   13f14:	bl	139f0 <__snprintf_chk@plt+0x2bd0>
   13f18:	add	sp, sp, #52	; 0x34
   13f1c:	pop	{r4, r5, pc}
   13f20:	push	{r4, r5, r6, lr}
   13f24:	sub	sp, sp, #48	; 0x30
   13f28:	mov	r5, r2
   13f2c:	mov	r6, r3
   13f30:	mov	r4, r0
   13f34:	mov	r0, sp
   13f38:	bl	1238c <__snprintf_chk@plt+0x156c>
   13f3c:	mov	r3, sp
   13f40:	mov	r2, r6
   13f44:	mov	r1, r5
   13f48:	mov	r0, r4
   13f4c:	bl	139f0 <__snprintf_chk@plt+0x2bd0>
   13f50:	add	sp, sp, #48	; 0x30
   13f54:	pop	{r4, r5, r6, pc}
   13f58:	mov	r2, r1
   13f5c:	mov	r1, r0
   13f60:	mov	r0, #0
   13f64:	b	13eec <__snprintf_chk@plt+0x30cc>
   13f68:	mov	r3, r2
   13f6c:	mov	r2, r1
   13f70:	mov	r1, r0
   13f74:	mov	r0, #0
   13f78:	b	13f20 <__snprintf_chk@plt+0x3100>
   13f7c:	push	{r4, r5, r6, r7, r8, lr}
   13f80:	mov	r7, r0
   13f84:	ldr	lr, [pc, #100]	; 13ff0 <__snprintf_chk@plt+0x31d0>
   13f88:	mov	r8, r1
   13f8c:	mov	r4, r2
   13f90:	ldm	lr!, {r0, r1, r2, r3}
   13f94:	sub	sp, sp, #48	; 0x30
   13f98:	mov	ip, sp
   13f9c:	lsr	r5, r4, #5
   13fa0:	stmia	ip!, {r0, r1, r2, r3}
   13fa4:	add	r6, sp, #8
   13fa8:	ldm	lr!, {r0, r1, r2, r3}
   13fac:	and	r4, r4, #31
   13fb0:	stmia	ip!, {r0, r1, r2, r3}
   13fb4:	ldm	lr, {r0, r1, r2, r3}
   13fb8:	stm	ip, {r0, r1, r2, r3}
   13fbc:	mov	r2, r8
   13fc0:	ldr	lr, [r6, r5, lsl #2]
   13fc4:	mov	r1, r7
   13fc8:	mov	r3, sp
   13fcc:	lsr	ip, lr, r4
   13fd0:	eor	ip, ip, #1
   13fd4:	and	ip, ip, #1
   13fd8:	mov	r0, #0
   13fdc:	eor	r4, lr, ip, lsl r4
   13fe0:	str	r4, [r6, r5, lsl #2]
   13fe4:	bl	139f0 <__snprintf_chk@plt+0x2bd0>
   13fe8:	add	sp, sp, #48	; 0x30
   13fec:	pop	{r4, r5, r6, r7, r8, pc}
   13ff0:	andeq	r7, r2, ip, asr #4
   13ff4:	mov	r2, r1
   13ff8:	mvn	r1, #0
   13ffc:	b	13f7c <__snprintf_chk@plt+0x315c>
   14000:	mov	r2, #58	; 0x3a
   14004:	mvn	r1, #0
   14008:	b	13f7c <__snprintf_chk@plt+0x315c>
   1400c:	mov	r2, #58	; 0x3a
   14010:	b	13f7c <__snprintf_chk@plt+0x315c>
   14014:	push	{r4, r5, r6, r7, lr}
   14018:	sub	sp, sp, #100	; 0x64
   1401c:	mov	r6, r0
   14020:	mov	r0, sp
   14024:	mov	r7, r2
   14028:	bl	1238c <__snprintf_chk@plt+0x156c>
   1402c:	mov	ip, sp
   14030:	add	lr, sp, #48	; 0x30
   14034:	ldm	ip!, {r0, r1, r2, r3}
   14038:	stmia	lr!, {r0, r1, r2, r3}
   1403c:	ldm	ip!, {r0, r1, r2, r3}
   14040:	ldr	r5, [sp, #60]	; 0x3c
   14044:	stmia	lr!, {r0, r1, r2, r3}
   14048:	mvn	r4, r5
   1404c:	ldm	ip, {r0, r1, r2, r3}
   14050:	and	ip, r4, #67108864	; 0x4000000
   14054:	eor	ip, ip, r5
   14058:	str	ip, [sp, #60]	; 0x3c
   1405c:	stm	lr, {r0, r1, r2, r3}
   14060:	mov	r1, r7
   14064:	mov	r0, r6
   14068:	add	r3, sp, #48	; 0x30
   1406c:	mvn	r2, #0
   14070:	bl	139f0 <__snprintf_chk@plt+0x2bd0>
   14074:	add	sp, sp, #100	; 0x64
   14078:	pop	{r4, r5, r6, r7, pc}
   1407c:	push	{r4, r5, r6, r7, r8, lr}
   14080:	mov	r5, r1
   14084:	ldr	lr, [pc, #100]	; 140f0 <__snprintf_chk@plt+0x32d0>
   14088:	mov	r4, r2
   1408c:	mov	r7, r0
   14090:	mov	r8, r3
   14094:	ldm	lr!, {r0, r1, r2, r3}
   14098:	sub	sp, sp, #48	; 0x30
   1409c:	mov	ip, sp
   140a0:	mov	r6, #10
   140a4:	stmia	ip!, {r0, r1, r2, r3}
   140a8:	cmp	r4, #0
   140ac:	cmpne	r5, #0
   140b0:	ldm	lr!, {r0, r1, r2, r3}
   140b4:	str	r6, [sp]
   140b8:	stmia	ip!, {r0, r1, r2, r3}
   140bc:	ldm	lr, {r0, r1, r2, r3}
   140c0:	stm	ip, {r0, r1, r2, r3}
   140c4:	beq	140ec <__snprintf_chk@plt+0x32cc>
   140c8:	mov	r3, sp
   140cc:	mov	r1, r8
   140d0:	mov	r0, r7
   140d4:	ldr	r2, [sp, #72]	; 0x48
   140d8:	str	r5, [sp, #40]	; 0x28
   140dc:	str	r4, [sp, #44]	; 0x2c
   140e0:	bl	139f0 <__snprintf_chk@plt+0x2bd0>
   140e4:	add	sp, sp, #48	; 0x30
   140e8:	pop	{r4, r5, r6, r7, r8, pc}
   140ec:	bl	10e14 <abort@plt>
   140f0:	andeq	r7, r2, ip, asr #4
   140f4:	push	{lr}		; (str lr, [sp, #-4]!)
   140f8:	sub	sp, sp, #12
   140fc:	mvn	ip, #0
   14100:	str	ip, [sp]
   14104:	bl	1407c <__snprintf_chk@plt+0x325c>
   14108:	add	sp, sp, #12
   1410c:	pop	{pc}		; (ldr pc, [sp], #4)
   14110:	push	{lr}		; (str lr, [sp, #-4]!)
   14114:	sub	sp, sp, #12
   14118:	mvn	ip, #0
   1411c:	mov	r3, r2
   14120:	str	ip, [sp]
   14124:	mov	r2, r1
   14128:	mov	r1, r0
   1412c:	mov	r0, #0
   14130:	bl	1407c <__snprintf_chk@plt+0x325c>
   14134:	add	sp, sp, #12
   14138:	pop	{pc}		; (ldr pc, [sp], #4)
   1413c:	push	{lr}		; (str lr, [sp, #-4]!)
   14140:	sub	sp, sp, #12
   14144:	str	r3, [sp]
   14148:	mov	r3, r2
   1414c:	mov	r2, r1
   14150:	mov	r1, r0
   14154:	mov	r0, #0
   14158:	bl	1407c <__snprintf_chk@plt+0x325c>
   1415c:	add	sp, sp, #12
   14160:	pop	{pc}		; (ldr pc, [sp], #4)
   14164:	ldr	r3, [pc]	; 1416c <__snprintf_chk@plt+0x334c>
   14168:	b	139f0 <__snprintf_chk@plt+0x2bd0>
   1416c:	strdeq	r7, [r2], -r0
   14170:	mov	r2, r1
   14174:	ldr	r3, [pc, #8]	; 14184 <__snprintf_chk@plt+0x3364>
   14178:	mov	r1, r0
   1417c:	mov	r0, #0
   14180:	b	139f0 <__snprintf_chk@plt+0x2bd0>
   14184:	strdeq	r7, [r2], -r0
   14188:	ldr	r3, [pc, #4]	; 14194 <__snprintf_chk@plt+0x3374>
   1418c:	mvn	r2, #0
   14190:	b	139f0 <__snprintf_chk@plt+0x2bd0>
   14194:	strdeq	r7, [r2], -r0
   14198:	mov	r1, r0
   1419c:	ldr	r3, [pc, #8]	; 141ac <__snprintf_chk@plt+0x338c>
   141a0:	mvn	r2, #0
   141a4:	mov	r0, #0
   141a8:	b	139f0 <__snprintf_chk@plt+0x2bd0>
   141ac:	strdeq	r7, [r2], -r0
   141b0:	push	{r4, r5, r6, lr}
   141b4:	sub	sp, sp, #32
   141b8:	cmp	r1, #0
   141bc:	mov	r4, r0
   141c0:	ldr	r5, [sp, #48]	; 0x30
   141c4:	ldr	r6, [sp, #52]	; 0x34
   141c8:	beq	144e0 <__snprintf_chk@plt+0x36c0>
   141cc:	stm	sp, {r2, r3}
   141d0:	mov	r3, r1
   141d4:	ldr	r2, [pc, #808]	; 14504 <__snprintf_chk@plt+0x36e4>
   141d8:	mov	r1, #1
   141dc:	bl	10db4 <__fprintf_chk@plt>
   141e0:	mov	r2, #5
   141e4:	ldr	r1, [pc, #796]	; 14508 <__snprintf_chk@plt+0x36e8>
   141e8:	mov	r0, #0
   141ec:	bl	10c70 <dcgettext@plt>
   141f0:	ldr	r3, [pc, #788]	; 1450c <__snprintf_chk@plt+0x36ec>
   141f4:	ldr	r2, [pc, #788]	; 14510 <__snprintf_chk@plt+0x36f0>
   141f8:	str	r3, [sp]
   141fc:	mov	r1, #1
   14200:	mov	r3, r0
   14204:	mov	r0, r4
   14208:	bl	10db4 <__fprintf_chk@plt>
   1420c:	mov	r1, r4
   14210:	mov	r0, #10
   14214:	bl	10c64 <fputc_unlocked@plt>
   14218:	mov	r2, #5
   1421c:	ldr	r1, [pc, #752]	; 14514 <__snprintf_chk@plt+0x36f4>
   14220:	mov	r0, #0
   14224:	bl	10c70 <dcgettext@plt>
   14228:	mov	r1, #1
   1422c:	ldr	r3, [pc, #740]	; 14518 <__snprintf_chk@plt+0x36f8>
   14230:	mov	r2, r0
   14234:	mov	r0, r4
   14238:	bl	10db4 <__fprintf_chk@plt>
   1423c:	mov	r1, r4
   14240:	mov	r0, #10
   14244:	bl	10c64 <fputc_unlocked@plt>
   14248:	cmp	r6, #9
   1424c:	ldrls	pc, [pc, r6, lsl #2]
   14250:	b	144f8 <__snprintf_chk@plt+0x36d8>
   14254:	ldrdeq	r4, [r1], -r8
   14258:	andeq	r4, r1, r0, ror #5
   1425c:	andeq	r4, r1, ip, lsl #6
   14260:	andeq	r4, r1, r0, asr #6
   14264:	andeq	r4, r1, ip, ror r3
   14268:			; <UNDEFINED> instruction: 0x000143b8
   1426c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14270:	andeq	r4, r1, r8, lsr r4
   14274:	andeq	r4, r1, r8, lsl #9
   14278:	andeq	r4, r1, ip, ror r2
   1427c:	ldr	r1, [pc, #664]	; 1451c <__snprintf_chk@plt+0x36fc>
   14280:	mov	r2, #5
   14284:	mov	r0, #0
   14288:	bl	10c70 <dcgettext@plt>
   1428c:	ldr	ip, [r5, #32]
   14290:	ldr	r1, [r5, #28]
   14294:	ldr	r2, [r5, #24]
   14298:	ldr	r3, [r5]
   1429c:	ldr	r6, [r5, #20]
   142a0:	str	ip, [sp, #28]
   142a4:	ldr	lr, [r5, #16]
   142a8:	str	r1, [sp, #24]
   142ac:	ldr	ip, [r5, #12]
   142b0:	str	r2, [sp, #20]
   142b4:	ldr	r1, [r5, #8]
   142b8:	ldr	r2, [r5, #4]
   142bc:	str	r6, [sp, #16]
   142c0:	stmib	sp, {r1, ip, lr}
   142c4:	mov	r1, #1
   142c8:	str	r2, [sp]
   142cc:	mov	r2, r0
   142d0:	mov	r0, r4
   142d4:	bl	10db4 <__fprintf_chk@plt>
   142d8:	add	sp, sp, #32
   142dc:	pop	{r4, r5, r6, pc}
   142e0:	mov	r2, #5
   142e4:	ldr	r1, [pc, #564]	; 14520 <__snprintf_chk@plt+0x3700>
   142e8:	mov	r0, #0
   142ec:	bl	10c70 <dcgettext@plt>
   142f0:	ldr	r3, [r5]
   142f4:	mov	r1, #1
   142f8:	mov	r2, r0
   142fc:	mov	r0, r4
   14300:	add	sp, sp, #32
   14304:	pop	{r4, r5, r6, lr}
   14308:	b	10db4 <__fprintf_chk@plt>
   1430c:	mov	r2, #5
   14310:	ldr	r1, [pc, #524]	; 14524 <__snprintf_chk@plt+0x3704>
   14314:	mov	r0, #0
   14318:	bl	10c70 <dcgettext@plt>
   1431c:	ldr	r2, [r5, #4]
   14320:	ldr	r3, [r5]
   14324:	mov	r1, #1
   14328:	str	r2, [sp, #48]	; 0x30
   1432c:	mov	r2, r0
   14330:	mov	r0, r4
   14334:	add	sp, sp, #32
   14338:	pop	{r4, r5, r6, lr}
   1433c:	b	10db4 <__fprintf_chk@plt>
   14340:	mov	r2, #5
   14344:	ldr	r1, [pc, #476]	; 14528 <__snprintf_chk@plt+0x3708>
   14348:	mov	r0, #0
   1434c:	bl	10c70 <dcgettext@plt>
   14350:	ldr	r1, [r5, #8]
   14354:	ldr	r2, [r5, #4]
   14358:	ldr	r3, [r5]
   1435c:	str	r1, [sp, #52]	; 0x34
   14360:	str	r2, [sp, #48]	; 0x30
   14364:	mov	r1, #1
   14368:	mov	r2, r0
   1436c:	mov	r0, r4
   14370:	add	sp, sp, #32
   14374:	pop	{r4, r5, r6, lr}
   14378:	b	10db4 <__fprintf_chk@plt>
   1437c:	mov	r2, #5
   14380:	ldr	r1, [pc, #420]	; 1452c <__snprintf_chk@plt+0x370c>
   14384:	mov	r0, #0
   14388:	bl	10c70 <dcgettext@plt>
   1438c:	ldr	r1, [r5, #8]
   14390:	ldr	ip, [r5, #12]
   14394:	ldr	r2, [r5, #4]
   14398:	ldr	r3, [r5]
   1439c:	stmib	sp, {r1, ip}
   143a0:	str	r2, [sp]
   143a4:	mov	r1, #1
   143a8:	mov	r2, r0
   143ac:	mov	r0, r4
   143b0:	bl	10db4 <__fprintf_chk@plt>
   143b4:	b	142d8 <__snprintf_chk@plt+0x34b8>
   143b8:	mov	r2, #5
   143bc:	ldr	r1, [pc, #364]	; 14530 <__snprintf_chk@plt+0x3710>
   143c0:	mov	r0, #0
   143c4:	bl	10c70 <dcgettext@plt>
   143c8:	add	r1, r5, #8
   143cc:	ldr	r2, [r5, #4]
   143d0:	ldm	r1, {r1, ip, lr}
   143d4:	ldr	r3, [r5]
   143d8:	str	r2, [sp]
   143dc:	stmib	sp, {r1, ip, lr}
   143e0:	mov	r1, #1
   143e4:	mov	r2, r0
   143e8:	mov	r0, r4
   143ec:	bl	10db4 <__fprintf_chk@plt>
   143f0:	b	142d8 <__snprintf_chk@plt+0x34b8>
   143f4:	mov	r2, #5
   143f8:	ldr	r1, [pc, #308]	; 14534 <__snprintf_chk@plt+0x3714>
   143fc:	mov	r0, #0
   14400:	bl	10c70 <dcgettext@plt>
   14404:	add	r1, r5, #8
   14408:	ldr	r2, [r5, #4]
   1440c:	ldm	r1, {r1, ip, lr}
   14410:	ldr	r6, [r5, #20]
   14414:	ldr	r3, [r5]
   14418:	stmib	sp, {r1, ip, lr}
   1441c:	mov	r1, #1
   14420:	str	r2, [sp]
   14424:	str	r6, [sp, #16]
   14428:	mov	r2, r0
   1442c:	mov	r0, r4
   14430:	bl	10db4 <__fprintf_chk@plt>
   14434:	b	142d8 <__snprintf_chk@plt+0x34b8>
   14438:	mov	r2, #5
   1443c:	ldr	r1, [pc, #244]	; 14538 <__snprintf_chk@plt+0x3718>
   14440:	mov	r0, #0
   14444:	bl	10c70 <dcgettext@plt>
   14448:	ldr	r2, [r5, #24]
   1444c:	ldr	r3, [r5]
   14450:	ldr	r6, [r5, #20]
   14454:	ldr	lr, [r5, #16]
   14458:	ldr	ip, [r5, #12]
   1445c:	str	r2, [sp, #20]
   14460:	ldr	r1, [r5, #8]
   14464:	ldr	r2, [r5, #4]
   14468:	str	r6, [sp, #16]
   1446c:	stmib	sp, {r1, ip, lr}
   14470:	mov	r1, #1
   14474:	str	r2, [sp]
   14478:	mov	r2, r0
   1447c:	mov	r0, r4
   14480:	bl	10db4 <__fprintf_chk@plt>
   14484:	b	142d8 <__snprintf_chk@plt+0x34b8>
   14488:	mov	r2, #5
   1448c:	ldr	r1, [pc, #168]	; 1453c <__snprintf_chk@plt+0x371c>
   14490:	mov	r0, #0
   14494:	bl	10c70 <dcgettext@plt>
   14498:	ldr	r1, [r5, #28]
   1449c:	ldr	r2, [r5, #24]
   144a0:	ldr	r3, [r5]
   144a4:	ldr	r6, [r5, #20]
   144a8:	ldr	lr, [r5, #16]
   144ac:	str	r1, [sp, #24]
   144b0:	ldr	ip, [r5, #12]
   144b4:	str	r2, [sp, #20]
   144b8:	ldr	r1, [r5, #8]
   144bc:	ldr	r2, [r5, #4]
   144c0:	str	r6, [sp, #16]
   144c4:	stmib	sp, {r1, ip, lr}
   144c8:	mov	r1, #1
   144cc:	str	r2, [sp]
   144d0:	mov	r2, r0
   144d4:	mov	r0, r4
   144d8:	bl	10db4 <__fprintf_chk@plt>
   144dc:	b	142d8 <__snprintf_chk@plt+0x34b8>
   144e0:	str	r3, [sp]
   144e4:	mov	r1, #1
   144e8:	mov	r3, r2
   144ec:	ldr	r2, [pc, #76]	; 14540 <__snprintf_chk@plt+0x3720>
   144f0:	bl	10db4 <__fprintf_chk@plt>
   144f4:	b	141e0 <__snprintf_chk@plt+0x33c0>
   144f8:	mov	r2, #5
   144fc:	ldr	r1, [pc, #64]	; 14544 <__snprintf_chk@plt+0x3724>
   14500:	b	14284 <__snprintf_chk@plt+0x3464>
   14504:	andeq	r5, r1, ip, lsl lr
   14508:	andeq	r5, r1, r0, lsr lr
   1450c:	andeq	r0, r0, r6, ror #15
   14510:	andeq	r6, r1, r8, lsl #2
   14514:	andeq	r5, r1, r4, lsr lr
   14518:	andeq	r5, r1, r0, ror #29
   1451c:	andeq	r6, r1, r0, lsl r0
   14520:	andeq	r5, r1, r4, lsl #30
   14524:	andeq	r5, r1, r4, lsl pc
   14528:	andeq	r5, r1, ip, lsr #30
   1452c:	andeq	r5, r1, r8, asr #30
   14530:	andeq	r5, r1, r8, ror #30
   14534:	andeq	r5, r1, ip, lsl #31
   14538:			; <UNDEFINED> instruction: 0x00015fb4
   1453c:	andeq	r5, r1, r0, ror #31
   14540:	andeq	r5, r1, r8, lsr #28
   14544:	andeq	r6, r1, r4, asr #32
   14548:	push	{r4, r5, lr}
   1454c:	sub	sp, sp, #12
   14550:	ldr	r5, [sp, #24]
   14554:	ldr	ip, [r5]
   14558:	cmp	ip, #0
   1455c:	beq	14578 <__snprintf_chk@plt+0x3758>
   14560:	mov	lr, r5
   14564:	mov	ip, #0
   14568:	ldr	r4, [lr, #4]!
   1456c:	add	ip, ip, #1
   14570:	cmp	r4, #0
   14574:	bne	14568 <__snprintf_chk@plt+0x3748>
   14578:	stm	sp, {r5, ip}
   1457c:	bl	141b0 <__snprintf_chk@plt+0x3390>
   14580:	add	sp, sp, #12
   14584:	pop	{r4, r5, pc}
   14588:	push	{r4, r5, lr}
   1458c:	sub	sp, sp, #52	; 0x34
   14590:	add	r5, sp, #4
   14594:	ldr	r4, [sp, #64]	; 0x40
   14598:	mov	ip, #0
   1459c:	sub	r4, r4, #4
   145a0:	ldr	lr, [r4, #4]!
   145a4:	cmp	lr, #0
   145a8:	str	lr, [r5, #4]!
   145ac:	beq	145bc <__snprintf_chk@plt+0x379c>
   145b0:	add	ip, ip, #1
   145b4:	cmp	ip, #10
   145b8:	bne	145a0 <__snprintf_chk@plt+0x3780>
   145bc:	add	lr, sp, #8
   145c0:	str	ip, [sp, #4]
   145c4:	str	lr, [sp]
   145c8:	bl	141b0 <__snprintf_chk@plt+0x3390>
   145cc:	add	sp, sp, #52	; 0x34
   145d0:	pop	{r4, r5, pc}
   145d4:	push	{r3}		; (str r3, [sp, #-4]!)
   145d8:	push	{r4, lr}
   145dc:	sub	sp, sp, #60	; 0x3c
   145e0:	add	lr, sp, #56	; 0x38
   145e4:	add	r3, sp, #72	; 0x48
   145e8:	str	r3, [lr, #-44]!	; 0xffffffd4
   145ec:	add	r4, sp, #68	; 0x44
   145f0:	mov	r3, #0
   145f4:	ldr	ip, [r4, #4]!
   145f8:	cmp	ip, #0
   145fc:	str	ip, [lr, #4]!
   14600:	beq	14610 <__snprintf_chk@plt+0x37f0>
   14604:	add	r3, r3, #1
   14608:	cmp	r3, #10
   1460c:	bne	145f4 <__snprintf_chk@plt+0x37d4>
   14610:	add	ip, sp, #16
   14614:	str	r3, [sp, #4]
   14618:	str	ip, [sp]
   1461c:	ldr	r3, [sp, #68]	; 0x44
   14620:	bl	141b0 <__snprintf_chk@plt+0x3390>
   14624:	add	sp, sp, #60	; 0x3c
   14628:	pop	{r4, lr}
   1462c:	add	sp, sp, #4
   14630:	bx	lr
   14634:	ldr	r3, [pc, #116]	; 146b0 <__snprintf_chk@plt+0x3890>
   14638:	push	{r4, lr}
   1463c:	mov	r0, #10
   14640:	ldr	r1, [r3]
   14644:	bl	10c64 <fputc_unlocked@plt>
   14648:	mov	r2, #5
   1464c:	ldr	r1, [pc, #96]	; 146b4 <__snprintf_chk@plt+0x3894>
   14650:	mov	r0, #0
   14654:	bl	10c70 <dcgettext@plt>
   14658:	ldr	r2, [pc, #88]	; 146b8 <__snprintf_chk@plt+0x3898>
   1465c:	mov	r1, r0
   14660:	mov	r0, #1
   14664:	bl	10d90 <__printf_chk@plt>
   14668:	mov	r2, #5
   1466c:	ldr	r1, [pc, #72]	; 146bc <__snprintf_chk@plt+0x389c>
   14670:	mov	r0, #0
   14674:	bl	10c70 <dcgettext@plt>
   14678:	ldr	r3, [pc, #64]	; 146c0 <__snprintf_chk@plt+0x38a0>
   1467c:	ldr	r2, [pc, #64]	; 146c4 <__snprintf_chk@plt+0x38a4>
   14680:	mov	r1, r0
   14684:	mov	r0, #1
   14688:	bl	10d90 <__printf_chk@plt>
   1468c:	mov	r2, #5
   14690:	ldr	r1, [pc, #48]	; 146c8 <__snprintf_chk@plt+0x38a8>
   14694:	mov	r0, #0
   14698:	bl	10c70 <dcgettext@plt>
   1469c:	ldr	r2, [pc, #40]	; 146cc <__snprintf_chk@plt+0x38ac>
   146a0:	pop	{r4, lr}
   146a4:	mov	r1, r0
   146a8:	mov	r0, #1
   146ac:	b	10d90 <__printf_chk@plt>
   146b0:	andeq	r7, r2, r4, lsr r1
   146b4:	andeq	r6, r1, r0, lsl #1
   146b8:	muleq	r1, r4, r0
   146bc:	andeq	r6, r1, ip, lsr #1
   146c0:	andeq	r5, r1, ip, lsl #15
   146c4:			; <UNDEFINED> instruction: 0x000157b4
   146c8:	andeq	r6, r1, r0, asr #1
   146cc:	andeq	r6, r1, r8, ror #1
   146d0:	push	{r4, lr}
   146d4:	bl	14ca0 <__snprintf_chk@plt+0x3e80>
   146d8:	cmp	r0, #0
   146dc:	popne	{r4, pc}
   146e0:	bl	14c18 <__snprintf_chk@plt+0x3df8>
   146e4:	push	{r4, lr}
   146e8:	bl	14ca0 <__snprintf_chk@plt+0x3e80>
   146ec:	cmp	r0, #0
   146f0:	popne	{r4, pc}
   146f4:	bl	14c18 <__snprintf_chk@plt+0x3df8>
   146f8:	push	{r4, lr}
   146fc:	bl	14ca0 <__snprintf_chk@plt+0x3e80>
   14700:	cmp	r0, #0
   14704:	popne	{r4, pc}
   14708:	bl	14c18 <__snprintf_chk@plt+0x3df8>
   1470c:	push	{r4, r5, r6, lr}
   14710:	mov	r5, r0
   14714:	mov	r4, r1
   14718:	bl	14ccc <__snprintf_chk@plt+0x3eac>
   1471c:	cmp	r0, #0
   14720:	popne	{r4, r5, r6, pc}
   14724:	adds	r4, r4, #0
   14728:	movne	r4, #1
   1472c:	cmp	r5, #0
   14730:	orreq	r4, r4, #1
   14734:	cmp	r4, #0
   14738:	popeq	{r4, r5, r6, pc}
   1473c:	bl	14c18 <__snprintf_chk@plt+0x3df8>
   14740:	push	{r4, lr}
   14744:	cmp	r1, #0
   14748:	orreq	r1, r1, #1
   1474c:	bl	14ccc <__snprintf_chk@plt+0x3eac>
   14750:	cmp	r0, #0
   14754:	popne	{r4, pc}
   14758:	bl	14c18 <__snprintf_chk@plt+0x3df8>
   1475c:	push	{r4, r5, r6, lr}
   14760:	mov	r6, r0
   14764:	mov	r5, r1
   14768:	mov	r4, r2
   1476c:	bl	15024 <__snprintf_chk@plt+0x4204>
   14770:	cmp	r0, #0
   14774:	popne	{r4, r5, r6, pc}
   14778:	cmp	r6, #0
   1477c:	beq	1478c <__snprintf_chk@plt+0x396c>
   14780:	cmp	r5, #0
   14784:	cmpne	r4, #0
   14788:	popeq	{r4, r5, r6, pc}
   1478c:	bl	14c18 <__snprintf_chk@plt+0x3df8>
   14790:	b	1475c <__snprintf_chk@plt+0x393c>
   14794:	cmp	r2, #0
   14798:	cmpne	r1, #0
   1479c:	moveq	r2, #1
   147a0:	moveq	r1, r2
   147a4:	push	{r4, lr}
   147a8:	bl	15024 <__snprintf_chk@plt+0x4204>
   147ac:	cmp	r0, #0
   147b0:	popne	{r4, pc}
   147b4:	bl	14c18 <__snprintf_chk@plt+0x3df8>
   147b8:	mov	r2, r1
   147bc:	mov	r1, r0
   147c0:	mov	r0, #0
   147c4:	b	1475c <__snprintf_chk@plt+0x393c>
   147c8:	mov	r2, r1
   147cc:	mov	r1, r0
   147d0:	mov	r0, #0
   147d4:	b	14794 <__snprintf_chk@plt+0x3974>
   147d8:	push	{r4, r5, r6, lr}
   147dc:	subs	r6, r0, #0
   147e0:	sub	sp, sp, #8
   147e4:	mov	r5, r1
   147e8:	ldr	r4, [r1]
   147ec:	beq	14828 <__snprintf_chk@plt+0x3a08>
   147f0:	lsr	r1, r4, #1
   147f4:	add	r3, r1, #1
   147f8:	mvn	r3, r3
   147fc:	cmp	r4, r3
   14800:	bhi	14824 <__snprintf_chk@plt+0x3a04>
   14804:	add	r4, r4, #1
   14808:	add	r4, r4, r1
   1480c:	mov	r0, r6
   14810:	mov	r1, r4
   14814:	bl	1475c <__snprintf_chk@plt+0x393c>
   14818:	str	r4, [r5]
   1481c:	add	sp, sp, #8
   14820:	pop	{r4, r5, r6, pc}
   14824:	bl	14c18 <__snprintf_chk@plt+0x3df8>
   14828:	cmp	r4, #0
   1482c:	bne	1480c <__snprintf_chk@plt+0x39ec>
   14830:	mov	r1, r2
   14834:	mov	r0, #64	; 0x40
   14838:	str	r2, [sp, #4]
   1483c:	bl	15164 <__snprintf_chk@plt+0x4344>
   14840:	ldr	r2, [sp, #4]
   14844:	cmp	r0, #0
   14848:	movne	r4, r0
   1484c:	addeq	r4, r0, #1
   14850:	b	1480c <__snprintf_chk@plt+0x39ec>
   14854:	mov	r2, #1
   14858:	b	147d8 <__snprintf_chk@plt+0x39b8>
   1485c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14860:	sub	sp, sp, #12
   14864:	ldr	r6, [r1]
   14868:	mov	sl, r1
   1486c:	mov	r9, r0
   14870:	asrs	r4, r6, #1
   14874:	mov	r5, r2
   14878:	mov	fp, r3
   1487c:	ldr	r7, [sp, #48]	; 0x30
   14880:	bmi	149ec <__snprintf_chk@plt+0x3bcc>
   14884:	mvn	r3, #-2147483648	; 0x80000000
   14888:	sub	r3, r3, r4
   1488c:	cmp	r6, r3
   14890:	movle	r3, #0
   14894:	movgt	r3, #1
   14898:	mvn	r8, fp
   1489c:	cmp	r3, #0
   148a0:	addeq	r4, r4, r6
   148a4:	mvnne	r4, #-2147483648	; 0x80000000
   148a8:	lsr	r8, r8, #31
   148ac:	cmp	fp, r4
   148b0:	movge	r3, #0
   148b4:	andlt	r3, r8, #1
   148b8:	cmp	r3, #0
   148bc:	beq	149a4 <__snprintf_chk@plt+0x3b84>
   148c0:	cmp	r7, #0
   148c4:	blt	14a74 <__snprintf_chk@plt+0x3c54>
   148c8:	bne	14a6c <__snprintf_chk@plt+0x3c4c>
   148cc:	mov	r2, #64	; 0x40
   148d0:	mov	r1, r7
   148d4:	mov	r0, r2
   148d8:	str	r2, [sp, #4]
   148dc:	bl	15370 <__snprintf_chk@plt+0x4550>
   148e0:	ldr	r2, [sp, #4]
   148e4:	mov	r1, r7
   148e8:	mov	r4, r0
   148ec:	mov	r0, r2
   148f0:	bl	15590 <__snprintf_chk@plt+0x4770>
   148f4:	ldr	r2, [sp, #4]
   148f8:	sub	r1, r2, r1
   148fc:	cmp	r9, #0
   14900:	sub	r3, r4, r6
   14904:	streq	r9, [sl]
   14908:	cmp	r3, r5
   1490c:	bge	14990 <__snprintf_chk@plt+0x3b70>
   14910:	cmp	r5, #0
   14914:	blt	14a00 <__snprintf_chk@plt+0x3be0>
   14918:	cmp	r6, #0
   1491c:	blt	1493c <__snprintf_chk@plt+0x3b1c>
   14920:	mvn	r3, #-2147483648	; 0x80000000
   14924:	sub	r3, r3, r5
   14928:	cmp	r6, r3
   1492c:	movle	r3, #0
   14930:	movgt	r3, #1
   14934:	cmp	r3, #0
   14938:	bne	14afc <__snprintf_chk@plt+0x3cdc>
   1493c:	add	r5, r6, r5
   14940:	cmp	fp, r5
   14944:	movge	r8, #0
   14948:	andlt	r8, r8, #1
   1494c:	cmp	r8, #0
   14950:	mov	r4, r5
   14954:	bne	14afc <__snprintf_chk@plt+0x3cdc>
   14958:	cmp	r7, #0
   1495c:	blt	14a14 <__snprintf_chk@plt+0x3bf4>
   14960:	beq	1498c <__snprintf_chk@plt+0x3b6c>
   14964:	cmp	r5, #0
   14968:	blt	14abc <__snprintf_chk@plt+0x3c9c>
   1496c:	mov	r1, r7
   14970:	mvn	r0, #-2147483648	; 0x80000000
   14974:	bl	15370 <__snprintf_chk@plt+0x4550>
   14978:	cmp	r5, r0
   1497c:	movle	r0, #0
   14980:	movgt	r0, #1
   14984:	cmp	r0, #0
   14988:	bne	14afc <__snprintf_chk@plt+0x3cdc>
   1498c:	mul	r1, r5, r7
   14990:	mov	r0, r9
   14994:	bl	1470c <__snprintf_chk@plt+0x38ec>
   14998:	str	r4, [sl]
   1499c:	add	sp, sp, #12
   149a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   149a4:	cmp	r7, #0
   149a8:	blt	14a40 <__snprintf_chk@plt+0x3c20>
   149ac:	beq	148cc <__snprintf_chk@plt+0x3aac>
   149b0:	cmp	r4, #0
   149b4:	blt	14a7c <__snprintf_chk@plt+0x3c5c>
   149b8:	mov	r1, r7
   149bc:	mvn	r0, #-2147483648	; 0x80000000
   149c0:	bl	15370 <__snprintf_chk@plt+0x4550>
   149c4:	cmp	r0, r4
   149c8:	movge	r0, #0
   149cc:	movlt	r0, #1
   149d0:	cmp	r0, #0
   149d4:	mvnne	r2, #-2147483648	; 0x80000000
   149d8:	bne	148d0 <__snprintf_chk@plt+0x3ab0>
   149dc:	mul	r1, r7, r4
   149e0:	cmp	r1, #63	; 0x3f
   149e4:	bgt	148fc <__snprintf_chk@plt+0x3adc>
   149e8:	b	148cc <__snprintf_chk@plt+0x3aac>
   149ec:	rsb	r3, r4, #-2147483648	; 0x80000000
   149f0:	cmp	r6, r3
   149f4:	movge	r3, #0
   149f8:	movlt	r3, #1
   149fc:	b	14898 <__snprintf_chk@plt+0x3a78>
   14a00:	rsb	r3, r5, #-2147483648	; 0x80000000
   14a04:	cmp	r6, r3
   14a08:	movge	r3, #0
   14a0c:	movlt	r3, #1
   14a10:	b	14934 <__snprintf_chk@plt+0x3b14>
   14a14:	cmp	r5, #0
   14a18:	blt	14aa0 <__snprintf_chk@plt+0x3c80>
   14a1c:	cmn	r7, #1
   14a20:	beq	1498c <__snprintf_chk@plt+0x3b6c>
   14a24:	mov	r1, r7
   14a28:	mov	r0, #-2147483648	; 0x80000000
   14a2c:	bl	15370 <__snprintf_chk@plt+0x4550>
   14a30:	cmp	r5, r0
   14a34:	movle	r0, #0
   14a38:	movgt	r0, #1
   14a3c:	b	14984 <__snprintf_chk@plt+0x3b64>
   14a40:	cmp	r4, #0
   14a44:	blt	14ae0 <__snprintf_chk@plt+0x3cc0>
   14a48:	cmn	r7, #1
   14a4c:	beq	149dc <__snprintf_chk@plt+0x3bbc>
   14a50:	mov	r1, r7
   14a54:	mov	r0, #-2147483648	; 0x80000000
   14a58:	bl	15370 <__snprintf_chk@plt+0x4550>
   14a5c:	cmp	r0, r4
   14a60:	movge	r0, #0
   14a64:	movlt	r0, #1
   14a68:	b	149d0 <__snprintf_chk@plt+0x3bb0>
   14a6c:	mov	r4, fp
   14a70:	b	149b8 <__snprintf_chk@plt+0x3b98>
   14a74:	mov	r4, fp
   14a78:	b	14a48 <__snprintf_chk@plt+0x3c28>
   14a7c:	cmn	r4, #1
   14a80:	beq	149dc <__snprintf_chk@plt+0x3bbc>
   14a84:	mov	r1, r4
   14a88:	mov	r0, #-2147483648	; 0x80000000
   14a8c:	bl	15370 <__snprintf_chk@plt+0x4550>
   14a90:	cmp	r7, r0
   14a94:	movle	r0, #0
   14a98:	movgt	r0, #1
   14a9c:	b	149d0 <__snprintf_chk@plt+0x3bb0>
   14aa0:	mov	r1, r7
   14aa4:	mvn	r0, #-2147483648	; 0x80000000
   14aa8:	bl	15370 <__snprintf_chk@plt+0x4550>
   14aac:	cmp	r5, r0
   14ab0:	movge	r0, #0
   14ab4:	movlt	r0, #1
   14ab8:	b	14984 <__snprintf_chk@plt+0x3b64>
   14abc:	cmn	r5, #1
   14ac0:	beq	1498c <__snprintf_chk@plt+0x3b6c>
   14ac4:	mov	r1, r5
   14ac8:	mov	r0, #-2147483648	; 0x80000000
   14acc:	bl	15370 <__snprintf_chk@plt+0x4550>
   14ad0:	cmp	r7, r0
   14ad4:	movle	r0, #0
   14ad8:	movgt	r0, #1
   14adc:	b	14984 <__snprintf_chk@plt+0x3b64>
   14ae0:	mov	r1, r7
   14ae4:	mvn	r0, #-2147483648	; 0x80000000
   14ae8:	bl	15370 <__snprintf_chk@plt+0x4550>
   14aec:	cmp	r0, r4
   14af0:	movle	r0, #0
   14af4:	movgt	r0, #1
   14af8:	b	149d0 <__snprintf_chk@plt+0x3bb0>
   14afc:	bl	14c18 <__snprintf_chk@plt+0x3df8>
   14b00:	push	{r4, lr}
   14b04:	mov	r1, #1
   14b08:	bl	14c58 <__snprintf_chk@plt+0x3e38>
   14b0c:	cmp	r0, #0
   14b10:	popne	{r4, pc}
   14b14:	bl	14c18 <__snprintf_chk@plt+0x3df8>
   14b18:	push	{r4, lr}
   14b1c:	mov	r1, #1
   14b20:	bl	14c58 <__snprintf_chk@plt+0x3e38>
   14b24:	cmp	r0, #0
   14b28:	popne	{r4, pc}
   14b2c:	bl	14c18 <__snprintf_chk@plt+0x3df8>
   14b30:	push	{r4, lr}
   14b34:	bl	14c58 <__snprintf_chk@plt+0x3e38>
   14b38:	cmp	r0, #0
   14b3c:	popne	{r4, pc}
   14b40:	bl	14c18 <__snprintf_chk@plt+0x3df8>
   14b44:	push	{r4, lr}
   14b48:	bl	14c58 <__snprintf_chk@plt+0x3e38>
   14b4c:	cmp	r0, #0
   14b50:	popne	{r4, pc}
   14b54:	bl	14c18 <__snprintf_chk@plt+0x3df8>
   14b58:	push	{r4, r5, r6, lr}
   14b5c:	mov	r6, r0
   14b60:	mov	r0, r1
   14b64:	mov	r4, r1
   14b68:	bl	14ca0 <__snprintf_chk@plt+0x3e80>
   14b6c:	subs	r5, r0, #0
   14b70:	beq	14b88 <__snprintf_chk@plt+0x3d68>
   14b74:	mov	r2, r4
   14b78:	mov	r1, r6
   14b7c:	bl	10c34 <memcpy@plt>
   14b80:	mov	r0, r5
   14b84:	pop	{r4, r5, r6, pc}
   14b88:	bl	14c18 <__snprintf_chk@plt+0x3df8>
   14b8c:	push	{r4, r5, r6, lr}
   14b90:	mov	r6, r0
   14b94:	mov	r0, r1
   14b98:	mov	r4, r1
   14b9c:	bl	14ca0 <__snprintf_chk@plt+0x3e80>
   14ba0:	subs	r5, r0, #0
   14ba4:	beq	14bbc <__snprintf_chk@plt+0x3d9c>
   14ba8:	mov	r2, r4
   14bac:	mov	r1, r6
   14bb0:	bl	10c34 <memcpy@plt>
   14bb4:	mov	r0, r5
   14bb8:	pop	{r4, r5, r6, pc}
   14bbc:	bl	14c18 <__snprintf_chk@plt+0x3df8>
   14bc0:	push	{r4, r5, r6, lr}
   14bc4:	mov	r6, r0
   14bc8:	add	r0, r1, #1
   14bcc:	mov	r4, r1
   14bd0:	bl	14ca0 <__snprintf_chk@plt+0x3e80>
   14bd4:	subs	r5, r0, #0
   14bd8:	beq	14bf8 <__snprintf_chk@plt+0x3dd8>
   14bdc:	mov	r3, #0
   14be0:	mov	r1, r6
   14be4:	strb	r3, [r5, r4]
   14be8:	mov	r2, r4
   14bec:	bl	10c34 <memcpy@plt>
   14bf0:	mov	r0, r5
   14bf4:	pop	{r4, r5, r6, pc}
   14bf8:	bl	14c18 <__snprintf_chk@plt+0x3df8>
   14bfc:	push	{r4, lr}
   14c00:	mov	r4, r0
   14c04:	bl	10d54 <strlen@plt>
   14c08:	add	r1, r0, #1
   14c0c:	mov	r0, r4
   14c10:	pop	{r4, lr}
   14c14:	b	14b58 <__snprintf_chk@plt+0x3d38>
   14c18:	ldr	r3, [pc, #44]	; 14c4c <__snprintf_chk@plt+0x3e2c>
   14c1c:	push	{r4, lr}
   14c20:	mov	r2, #5
   14c24:	ldr	r1, [pc, #36]	; 14c50 <__snprintf_chk@plt+0x3e30>
   14c28:	mov	r0, #0
   14c2c:	ldr	r4, [r3]
   14c30:	bl	10c70 <dcgettext@plt>
   14c34:	ldr	r2, [pc, #24]	; 14c54 <__snprintf_chk@plt+0x3e34>
   14c38:	mov	r1, #0
   14c3c:	mov	r3, r0
   14c40:	mov	r0, r4
   14c44:	bl	10cdc <error@plt>
   14c48:	bl	10e14 <abort@plt>
   14c4c:	ldrdeq	r7, [r2], -ip
   14c50:	andeq	r6, r1, r8, lsr r1
   14c54:			; <UNDEFINED> instruction: 0x00015cb8
   14c58:	cmp	r1, #0
   14c5c:	cmpne	r0, #0
   14c60:	moveq	r1, #1
   14c64:	moveq	r0, r1
   14c68:	umull	r2, r3, r0, r1
   14c6c:	adds	r3, r3, #0
   14c70:	movne	r3, #1
   14c74:	cmp	r2, #0
   14c78:	blt	14c88 <__snprintf_chk@plt+0x3e68>
   14c7c:	cmp	r3, #0
   14c80:	bne	14c88 <__snprintf_chk@plt+0x3e68>
   14c84:	b	10be0 <calloc@plt>
   14c88:	push	{r4, lr}
   14c8c:	bl	10d60 <__errno_location@plt>
   14c90:	mov	r3, #12
   14c94:	str	r3, [r0]
   14c98:	mov	r0, #0
   14c9c:	pop	{r4, pc}
   14ca0:	cmp	r0, #0
   14ca4:	moveq	r0, #1
   14ca8:	cmp	r0, #0
   14cac:	blt	14cb4 <__snprintf_chk@plt+0x3e94>
   14cb0:	b	10d00 <malloc@plt>
   14cb4:	push	{r4, lr}
   14cb8:	bl	10d60 <__errno_location@plt>
   14cbc:	mov	r3, #12
   14cc0:	str	r3, [r0]
   14cc4:	mov	r0, #0
   14cc8:	pop	{r4, pc}
   14ccc:	cmp	r0, #0
   14cd0:	beq	14cf4 <__snprintf_chk@plt+0x3ed4>
   14cd4:	cmp	r1, #0
   14cd8:	push	{lr}		; (str lr, [sp, #-4]!)
   14cdc:	sub	sp, sp, #12
   14ce0:	beq	14cfc <__snprintf_chk@plt+0x3edc>
   14ce4:	blt	14d14 <__snprintf_chk@plt+0x3ef4>
   14ce8:	add	sp, sp, #12
   14cec:	pop	{lr}		; (ldr lr, [sp], #4)
   14cf0:	b	10c7c <realloc@plt>
   14cf4:	mov	r0, r1
   14cf8:	b	14ca0 <__snprintf_chk@plt+0x3e80>
   14cfc:	str	r1, [sp, #4]
   14d00:	bl	14ea4 <__snprintf_chk@plt+0x4084>
   14d04:	ldr	r3, [sp, #4]
   14d08:	mov	r0, r3
   14d0c:	add	sp, sp, #12
   14d10:	pop	{pc}		; (ldr pc, [sp], #4)
   14d14:	bl	10d60 <__errno_location@plt>
   14d18:	mov	r2, #12
   14d1c:	mov	r3, #0
   14d20:	str	r2, [r0]
   14d24:	b	14d08 <__snprintf_chk@plt+0x3ee8>
   14d28:	push	{r4, r5, r6, lr}
   14d2c:	mov	r4, r0
   14d30:	bl	10cc4 <__fpending@plt>
   14d34:	ldr	r5, [r4]
   14d38:	and	r5, r5, #32
   14d3c:	mov	r6, r0
   14d40:	mov	r0, r4
   14d44:	bl	14da4 <__snprintf_chk@plt+0x3f84>
   14d48:	cmp	r5, #0
   14d4c:	mov	r4, r0
   14d50:	bne	14d70 <__snprintf_chk@plt+0x3f50>
   14d54:	cmp	r0, #0
   14d58:	beq	14d68 <__snprintf_chk@plt+0x3f48>
   14d5c:	cmp	r6, #0
   14d60:	beq	14d8c <__snprintf_chk@plt+0x3f6c>
   14d64:	mvn	r4, #0
   14d68:	mov	r0, r4
   14d6c:	pop	{r4, r5, r6, pc}
   14d70:	cmp	r0, #0
   14d74:	bne	14d64 <__snprintf_chk@plt+0x3f44>
   14d78:	bl	10d60 <__errno_location@plt>
   14d7c:	str	r4, [r0]
   14d80:	mvn	r4, #0
   14d84:	mov	r0, r4
   14d88:	pop	{r4, r5, r6, pc}
   14d8c:	bl	10d60 <__errno_location@plt>
   14d90:	ldr	r4, [r0]
   14d94:	subs	r4, r4, #9
   14d98:	mvnne	r4, #0
   14d9c:	mov	r0, r4
   14da0:	pop	{r4, r5, r6, pc}
   14da4:	push	{r4, r5, lr}
   14da8:	sub	sp, sp, #12
   14dac:	mov	r4, r0
   14db0:	bl	10da8 <fileno@plt>
   14db4:	cmp	r0, #0
   14db8:	mov	r0, r4
   14dbc:	blt	14e38 <__snprintf_chk@plt+0x4018>
   14dc0:	bl	10d18 <__freading@plt>
   14dc4:	cmp	r0, #0
   14dc8:	bne	14e04 <__snprintf_chk@plt+0x3fe4>
   14dcc:	mov	r0, r4
   14dd0:	bl	14e44 <__snprintf_chk@plt+0x4024>
   14dd4:	cmp	r0, #0
   14dd8:	beq	14e34 <__snprintf_chk@plt+0x4014>
   14ddc:	bl	10d60 <__errno_location@plt>
   14de0:	mov	r5, r0
   14de4:	mov	r0, r4
   14de8:	ldr	r4, [r5]
   14dec:	bl	10dc0 <fclose@plt>
   14df0:	cmp	r4, #0
   14df4:	mvnne	r0, #0
   14df8:	strne	r4, [r5]
   14dfc:	add	sp, sp, #12
   14e00:	pop	{r4, r5, pc}
   14e04:	mov	r0, r4
   14e08:	bl	10da8 <fileno@plt>
   14e0c:	mov	r3, #1
   14e10:	str	r3, [sp]
   14e14:	mov	r2, #0
   14e18:	mov	r3, #0
   14e1c:	bl	10cac <lseek64@plt>
   14e20:	mvn	r3, #0
   14e24:	mvn	r2, #0
   14e28:	cmp	r1, r3
   14e2c:	cmpeq	r0, r2
   14e30:	bne	14dcc <__snprintf_chk@plt+0x3fac>
   14e34:	mov	r0, r4
   14e38:	add	sp, sp, #12
   14e3c:	pop	{r4, r5, lr}
   14e40:	b	10dc0 <fclose@plt>
   14e44:	push	{r4, lr}
   14e48:	subs	r4, r0, #0
   14e4c:	sub	sp, sp, #8
   14e50:	beq	14e6c <__snprintf_chk@plt+0x404c>
   14e54:	bl	10d18 <__freading@plt>
   14e58:	cmp	r0, #0
   14e5c:	beq	14e6c <__snprintf_chk@plt+0x404c>
   14e60:	ldr	r3, [r4]
   14e64:	tst	r3, #256	; 0x100
   14e68:	bne	14e7c <__snprintf_chk@plt+0x405c>
   14e6c:	mov	r0, r4
   14e70:	add	sp, sp, #8
   14e74:	pop	{r4, lr}
   14e78:	b	10c10 <fflush@plt>
   14e7c:	mov	r3, #1
   14e80:	str	r3, [sp]
   14e84:	mov	r2, #0
   14e88:	mov	r3, #0
   14e8c:	mov	r0, r4
   14e90:	bl	14efc <__snprintf_chk@plt+0x40dc>
   14e94:	mov	r0, r4
   14e98:	add	sp, sp, #8
   14e9c:	pop	{r4, lr}
   14ea0:	b	10c10 <fflush@plt>
   14ea4:	push	{r4, r5, lr}
   14ea8:	sub	sp, sp, #12
   14eac:	mov	r5, r0
   14eb0:	bl	10d60 <__errno_location@plt>
   14eb4:	mov	r2, #0
   14eb8:	mov	r4, r0
   14ebc:	ldr	r3, [r0]
   14ec0:	str	r2, [r4]
   14ec4:	mov	r0, r5
   14ec8:	str	r3, [sp]
   14ecc:	str	r3, [sp, #4]
   14ed0:	bl	10c1c <free@plt>
   14ed4:	ldr	r3, [r4]
   14ed8:	add	r2, sp, #8
   14edc:	cmp	r3, #0
   14ee0:	moveq	r3, #4
   14ee4:	movne	r3, #0
   14ee8:	add	r3, r2, r3
   14eec:	ldr	r3, [r3, #-8]
   14ef0:	str	r3, [r4]
   14ef4:	add	sp, sp, #12
   14ef8:	pop	{r4, r5, pc}
   14efc:	push	{r4, r5, r6, r7, r8, lr}
   14f00:	sub	sp, sp, #8
   14f04:	ldmib	r0, {ip, lr}
   14f08:	mov	r4, r0
   14f0c:	ldr	r5, [sp, #32]
   14f10:	cmp	lr, ip
   14f14:	beq	14f2c <__snprintf_chk@plt+0x410c>
   14f18:	str	r5, [sp, #32]
   14f1c:	mov	r0, r4
   14f20:	add	sp, sp, #8
   14f24:	pop	{r4, r5, r6, r7, r8, lr}
   14f28:	b	10dcc <fseeko64@plt>
   14f2c:	ldr	lr, [r0, #20]
   14f30:	ldr	ip, [r0, #16]
   14f34:	cmp	lr, ip
   14f38:	bne	14f18 <__snprintf_chk@plt+0x40f8>
   14f3c:	ldr	r8, [r0, #36]	; 0x24
   14f40:	cmp	r8, #0
   14f44:	bne	14f18 <__snprintf_chk@plt+0x40f8>
   14f48:	mov	r6, r2
   14f4c:	mov	r7, r3
   14f50:	bl	10da8 <fileno@plt>
   14f54:	mov	r2, r6
   14f58:	mov	r3, r7
   14f5c:	str	r5, [sp]
   14f60:	bl	10cac <lseek64@plt>
   14f64:	mvn	r3, #0
   14f68:	mvn	r2, #0
   14f6c:	cmp	r1, r3
   14f70:	cmpeq	r0, r2
   14f74:	beq	14f94 <__snprintf_chk@plt+0x4174>
   14f78:	ldr	r3, [r4]
   14f7c:	strd	r0, [r4, #80]	; 0x50
   14f80:	mov	r0, r8
   14f84:	bic	r3, r3, #16
   14f88:	str	r3, [r4]
   14f8c:	add	sp, sp, #8
   14f90:	pop	{r4, r5, r6, r7, r8, pc}
   14f94:	mvn	r0, #0
   14f98:	b	14f8c <__snprintf_chk@plt+0x416c>
   14f9c:	push	{r4, lr}
   14fa0:	mov	r0, #14
   14fa4:	bl	10df0 <nl_langinfo@plt>
   14fa8:	cmp	r0, #0
   14fac:	beq	14fc4 <__snprintf_chk@plt+0x41a4>
   14fb0:	ldrb	r2, [r0]
   14fb4:	ldr	r3, [pc, #16]	; 14fcc <__snprintf_chk@plt+0x41ac>
   14fb8:	cmp	r2, #0
   14fbc:	moveq	r0, r3
   14fc0:	pop	{r4, pc}
   14fc4:	ldr	r0, [pc]	; 14fcc <__snprintf_chk@plt+0x41ac>
   14fc8:	pop	{r4, pc}
   14fcc:	andeq	r6, r1, ip, asr #2
   14fd0:	push	{r4, r5, r6, r7, lr}
   14fd4:	subs	r6, r0, #0
   14fd8:	sub	sp, sp, #12
   14fdc:	addeq	r6, sp, #4
   14fe0:	mov	r0, r6
   14fe4:	mov	r5, r2
   14fe8:	mov	r7, r1
   14fec:	bl	10cd0 <mbrtowc@plt>
   14ff0:	cmp	r5, #0
   14ff4:	cmnne	r0, #3
   14ff8:	mov	r4, r0
   14ffc:	bls	15018 <__snprintf_chk@plt+0x41f8>
   15000:	mov	r0, #0
   15004:	bl	15070 <__snprintf_chk@plt+0x4250>
   15008:	cmp	r0, #0
   1500c:	moveq	r4, #1
   15010:	ldrbeq	r3, [r7]
   15014:	streq	r3, [r6]
   15018:	mov	r0, r4
   1501c:	add	sp, sp, #12
   15020:	pop	{r4, r5, r6, r7, pc}
   15024:	push	{r4, r5, r6, lr}
   15028:	subs	r4, r2, #0
   1502c:	mov	r6, r0
   15030:	mov	r5, r1
   15034:	beq	15060 <__snprintf_chk@plt+0x4240>
   15038:	mov	r1, r4
   1503c:	mvn	r0, #0
   15040:	bl	15164 <__snprintf_chk@plt+0x4344>
   15044:	cmp	r0, r5
   15048:	bcs	15060 <__snprintf_chk@plt+0x4240>
   1504c:	bl	10d60 <__errno_location@plt>
   15050:	mov	r3, #12
   15054:	str	r3, [r0]
   15058:	mov	r0, #0
   1505c:	pop	{r4, r5, r6, pc}
   15060:	mul	r1, r5, r4
   15064:	mov	r0, r6
   15068:	pop	{r4, r5, r6, lr}
   1506c:	b	14ccc <__snprintf_chk@plt+0x3eac>
   15070:	push	{lr}		; (str lr, [sp, #-4]!)
   15074:	sub	sp, sp, #268	; 0x10c
   15078:	add	r1, sp, #4
   1507c:	ldr	r2, [pc, #60]	; 150c0 <__snprintf_chk@plt+0x42a0>
   15080:	bl	150cc <__snprintf_chk@plt+0x42ac>
   15084:	cmp	r0, #0
   15088:	movne	r0, #0
   1508c:	bne	150b8 <__snprintf_chk@plt+0x4298>
   15090:	ldr	r1, [pc, #44]	; 150c4 <__snprintf_chk@plt+0x42a4>
   15094:	add	r0, sp, #4
   15098:	bl	10c04 <strcmp@plt>
   1509c:	cmp	r0, #0
   150a0:	beq	150b8 <__snprintf_chk@plt+0x4298>
   150a4:	add	r0, sp, #4
   150a8:	ldr	r1, [pc, #24]	; 150c8 <__snprintf_chk@plt+0x42a8>
   150ac:	bl	10c04 <strcmp@plt>
   150b0:	adds	r0, r0, #0
   150b4:	movne	r0, #1
   150b8:	add	sp, sp, #268	; 0x10c
   150bc:	pop	{pc}		; (ldr pc, [sp], #4)
   150c0:	andeq	r0, r0, r1, lsl #2
   150c4:	andeq	r6, r1, r4, asr r1
   150c8:	andeq	r6, r1, r8, asr r1
   150cc:	push	{r4, r5, r6, lr}
   150d0:	mov	r5, r1
   150d4:	mov	r1, #0
   150d8:	mov	r4, r2
   150dc:	bl	10dd8 <setlocale@plt>
   150e0:	subs	r6, r0, #0
   150e4:	beq	15140 <__snprintf_chk@plt+0x4320>
   150e8:	bl	10d54 <strlen@plt>
   150ec:	cmp	r4, r0
   150f0:	bhi	15128 <__snprintf_chk@plt+0x4308>
   150f4:	cmp	r4, #0
   150f8:	bne	15104 <__snprintf_chk@plt+0x42e4>
   150fc:	mov	r0, #34	; 0x22
   15100:	pop	{r4, r5, r6, pc}
   15104:	sub	r4, r4, #1
   15108:	mov	r1, r6
   1510c:	mov	r2, r4
   15110:	mov	r0, r5
   15114:	bl	10c34 <memcpy@plt>
   15118:	mov	r3, #0
   1511c:	strb	r3, [r5, r4]
   15120:	mov	r0, #34	; 0x22
   15124:	pop	{r4, r5, r6, pc}
   15128:	add	r2, r0, #1
   1512c:	mov	r1, r6
   15130:	mov	r0, r5
   15134:	bl	10c34 <memcpy@plt>
   15138:	mov	r0, #0
   1513c:	pop	{r4, r5, r6, pc}
   15140:	cmp	r4, #0
   15144:	beq	15154 <__snprintf_chk@plt+0x4334>
   15148:	strb	r6, [r5]
   1514c:	mov	r0, #22
   15150:	pop	{r4, r5, r6, pc}
   15154:	mov	r0, #22
   15158:	pop	{r4, r5, r6, pc}
   1515c:	mov	r1, #0
   15160:	b	10dd8 <setlocale@plt>
   15164:	subs	r2, r1, #1
   15168:	bxeq	lr
   1516c:	bcc	15344 <__snprintf_chk@plt+0x4524>
   15170:	cmp	r0, r1
   15174:	bls	15328 <__snprintf_chk@plt+0x4508>
   15178:	tst	r1, r2
   1517c:	beq	15334 <__snprintf_chk@plt+0x4514>
   15180:	clz	r3, r0
   15184:	clz	r2, r1
   15188:	sub	r3, r2, r3
   1518c:	rsbs	r3, r3, #31
   15190:	addne	r3, r3, r3, lsl #1
   15194:	mov	r2, #0
   15198:	addne	pc, pc, r3, lsl #2
   1519c:	nop			; (mov r0, r0)
   151a0:	cmp	r0, r1, lsl #31
   151a4:	adc	r2, r2, r2
   151a8:	subcs	r0, r0, r1, lsl #31
   151ac:	cmp	r0, r1, lsl #30
   151b0:	adc	r2, r2, r2
   151b4:	subcs	r0, r0, r1, lsl #30
   151b8:	cmp	r0, r1, lsl #29
   151bc:	adc	r2, r2, r2
   151c0:	subcs	r0, r0, r1, lsl #29
   151c4:	cmp	r0, r1, lsl #28
   151c8:	adc	r2, r2, r2
   151cc:	subcs	r0, r0, r1, lsl #28
   151d0:	cmp	r0, r1, lsl #27
   151d4:	adc	r2, r2, r2
   151d8:	subcs	r0, r0, r1, lsl #27
   151dc:	cmp	r0, r1, lsl #26
   151e0:	adc	r2, r2, r2
   151e4:	subcs	r0, r0, r1, lsl #26
   151e8:	cmp	r0, r1, lsl #25
   151ec:	adc	r2, r2, r2
   151f0:	subcs	r0, r0, r1, lsl #25
   151f4:	cmp	r0, r1, lsl #24
   151f8:	adc	r2, r2, r2
   151fc:	subcs	r0, r0, r1, lsl #24
   15200:	cmp	r0, r1, lsl #23
   15204:	adc	r2, r2, r2
   15208:	subcs	r0, r0, r1, lsl #23
   1520c:	cmp	r0, r1, lsl #22
   15210:	adc	r2, r2, r2
   15214:	subcs	r0, r0, r1, lsl #22
   15218:	cmp	r0, r1, lsl #21
   1521c:	adc	r2, r2, r2
   15220:	subcs	r0, r0, r1, lsl #21
   15224:	cmp	r0, r1, lsl #20
   15228:	adc	r2, r2, r2
   1522c:	subcs	r0, r0, r1, lsl #20
   15230:	cmp	r0, r1, lsl #19
   15234:	adc	r2, r2, r2
   15238:	subcs	r0, r0, r1, lsl #19
   1523c:	cmp	r0, r1, lsl #18
   15240:	adc	r2, r2, r2
   15244:	subcs	r0, r0, r1, lsl #18
   15248:	cmp	r0, r1, lsl #17
   1524c:	adc	r2, r2, r2
   15250:	subcs	r0, r0, r1, lsl #17
   15254:	cmp	r0, r1, lsl #16
   15258:	adc	r2, r2, r2
   1525c:	subcs	r0, r0, r1, lsl #16
   15260:	cmp	r0, r1, lsl #15
   15264:	adc	r2, r2, r2
   15268:	subcs	r0, r0, r1, lsl #15
   1526c:	cmp	r0, r1, lsl #14
   15270:	adc	r2, r2, r2
   15274:	subcs	r0, r0, r1, lsl #14
   15278:	cmp	r0, r1, lsl #13
   1527c:	adc	r2, r2, r2
   15280:	subcs	r0, r0, r1, lsl #13
   15284:	cmp	r0, r1, lsl #12
   15288:	adc	r2, r2, r2
   1528c:	subcs	r0, r0, r1, lsl #12
   15290:	cmp	r0, r1, lsl #11
   15294:	adc	r2, r2, r2
   15298:	subcs	r0, r0, r1, lsl #11
   1529c:	cmp	r0, r1, lsl #10
   152a0:	adc	r2, r2, r2
   152a4:	subcs	r0, r0, r1, lsl #10
   152a8:	cmp	r0, r1, lsl #9
   152ac:	adc	r2, r2, r2
   152b0:	subcs	r0, r0, r1, lsl #9
   152b4:	cmp	r0, r1, lsl #8
   152b8:	adc	r2, r2, r2
   152bc:	subcs	r0, r0, r1, lsl #8
   152c0:	cmp	r0, r1, lsl #7
   152c4:	adc	r2, r2, r2
   152c8:	subcs	r0, r0, r1, lsl #7
   152cc:	cmp	r0, r1, lsl #6
   152d0:	adc	r2, r2, r2
   152d4:	subcs	r0, r0, r1, lsl #6
   152d8:	cmp	r0, r1, lsl #5
   152dc:	adc	r2, r2, r2
   152e0:	subcs	r0, r0, r1, lsl #5
   152e4:	cmp	r0, r1, lsl #4
   152e8:	adc	r2, r2, r2
   152ec:	subcs	r0, r0, r1, lsl #4
   152f0:	cmp	r0, r1, lsl #3
   152f4:	adc	r2, r2, r2
   152f8:	subcs	r0, r0, r1, lsl #3
   152fc:	cmp	r0, r1, lsl #2
   15300:	adc	r2, r2, r2
   15304:	subcs	r0, r0, r1, lsl #2
   15308:	cmp	r0, r1, lsl #1
   1530c:	adc	r2, r2, r2
   15310:	subcs	r0, r0, r1, lsl #1
   15314:	cmp	r0, r1
   15318:	adc	r2, r2, r2
   1531c:	subcs	r0, r0, r1
   15320:	mov	r0, r2
   15324:	bx	lr
   15328:	moveq	r0, #1
   1532c:	movne	r0, #0
   15330:	bx	lr
   15334:	clz	r2, r1
   15338:	rsb	r2, r2, #31
   1533c:	lsr	r0, r0, r2
   15340:	bx	lr
   15344:	cmp	r0, #0
   15348:	mvnne	r0, #0
   1534c:	b	155b0 <__snprintf_chk@plt+0x4790>
   15350:	cmp	r1, #0
   15354:	beq	15344 <__snprintf_chk@plt+0x4524>
   15358:	push	{r0, r1, lr}
   1535c:	bl	15164 <__snprintf_chk@plt+0x4344>
   15360:	pop	{r1, r2, lr}
   15364:	mul	r3, r2, r0
   15368:	sub	r1, r1, r3
   1536c:	bx	lr
   15370:	cmp	r1, #0
   15374:	beq	15580 <__snprintf_chk@plt+0x4760>
   15378:	eor	ip, r0, r1
   1537c:	rsbmi	r1, r1, #0
   15380:	subs	r2, r1, #1
   15384:	beq	1554c <__snprintf_chk@plt+0x472c>
   15388:	movs	r3, r0
   1538c:	rsbmi	r3, r0, #0
   15390:	cmp	r3, r1
   15394:	bls	15558 <__snprintf_chk@plt+0x4738>
   15398:	tst	r1, r2
   1539c:	beq	15568 <__snprintf_chk@plt+0x4748>
   153a0:	clz	r2, r3
   153a4:	clz	r0, r1
   153a8:	sub	r2, r0, r2
   153ac:	rsbs	r2, r2, #31
   153b0:	addne	r2, r2, r2, lsl #1
   153b4:	mov	r0, #0
   153b8:	addne	pc, pc, r2, lsl #2
   153bc:	nop			; (mov r0, r0)
   153c0:	cmp	r3, r1, lsl #31
   153c4:	adc	r0, r0, r0
   153c8:	subcs	r3, r3, r1, lsl #31
   153cc:	cmp	r3, r1, lsl #30
   153d0:	adc	r0, r0, r0
   153d4:	subcs	r3, r3, r1, lsl #30
   153d8:	cmp	r3, r1, lsl #29
   153dc:	adc	r0, r0, r0
   153e0:	subcs	r3, r3, r1, lsl #29
   153e4:	cmp	r3, r1, lsl #28
   153e8:	adc	r0, r0, r0
   153ec:	subcs	r3, r3, r1, lsl #28
   153f0:	cmp	r3, r1, lsl #27
   153f4:	adc	r0, r0, r0
   153f8:	subcs	r3, r3, r1, lsl #27
   153fc:	cmp	r3, r1, lsl #26
   15400:	adc	r0, r0, r0
   15404:	subcs	r3, r3, r1, lsl #26
   15408:	cmp	r3, r1, lsl #25
   1540c:	adc	r0, r0, r0
   15410:	subcs	r3, r3, r1, lsl #25
   15414:	cmp	r3, r1, lsl #24
   15418:	adc	r0, r0, r0
   1541c:	subcs	r3, r3, r1, lsl #24
   15420:	cmp	r3, r1, lsl #23
   15424:	adc	r0, r0, r0
   15428:	subcs	r3, r3, r1, lsl #23
   1542c:	cmp	r3, r1, lsl #22
   15430:	adc	r0, r0, r0
   15434:	subcs	r3, r3, r1, lsl #22
   15438:	cmp	r3, r1, lsl #21
   1543c:	adc	r0, r0, r0
   15440:	subcs	r3, r3, r1, lsl #21
   15444:	cmp	r3, r1, lsl #20
   15448:	adc	r0, r0, r0
   1544c:	subcs	r3, r3, r1, lsl #20
   15450:	cmp	r3, r1, lsl #19
   15454:	adc	r0, r0, r0
   15458:	subcs	r3, r3, r1, lsl #19
   1545c:	cmp	r3, r1, lsl #18
   15460:	adc	r0, r0, r0
   15464:	subcs	r3, r3, r1, lsl #18
   15468:	cmp	r3, r1, lsl #17
   1546c:	adc	r0, r0, r0
   15470:	subcs	r3, r3, r1, lsl #17
   15474:	cmp	r3, r1, lsl #16
   15478:	adc	r0, r0, r0
   1547c:	subcs	r3, r3, r1, lsl #16
   15480:	cmp	r3, r1, lsl #15
   15484:	adc	r0, r0, r0
   15488:	subcs	r3, r3, r1, lsl #15
   1548c:	cmp	r3, r1, lsl #14
   15490:	adc	r0, r0, r0
   15494:	subcs	r3, r3, r1, lsl #14
   15498:	cmp	r3, r1, lsl #13
   1549c:	adc	r0, r0, r0
   154a0:	subcs	r3, r3, r1, lsl #13
   154a4:	cmp	r3, r1, lsl #12
   154a8:	adc	r0, r0, r0
   154ac:	subcs	r3, r3, r1, lsl #12
   154b0:	cmp	r3, r1, lsl #11
   154b4:	adc	r0, r0, r0
   154b8:	subcs	r3, r3, r1, lsl #11
   154bc:	cmp	r3, r1, lsl #10
   154c0:	adc	r0, r0, r0
   154c4:	subcs	r3, r3, r1, lsl #10
   154c8:	cmp	r3, r1, lsl #9
   154cc:	adc	r0, r0, r0
   154d0:	subcs	r3, r3, r1, lsl #9
   154d4:	cmp	r3, r1, lsl #8
   154d8:	adc	r0, r0, r0
   154dc:	subcs	r3, r3, r1, lsl #8
   154e0:	cmp	r3, r1, lsl #7
   154e4:	adc	r0, r0, r0
   154e8:	subcs	r3, r3, r1, lsl #7
   154ec:	cmp	r3, r1, lsl #6
   154f0:	adc	r0, r0, r0
   154f4:	subcs	r3, r3, r1, lsl #6
   154f8:	cmp	r3, r1, lsl #5
   154fc:	adc	r0, r0, r0
   15500:	subcs	r3, r3, r1, lsl #5
   15504:	cmp	r3, r1, lsl #4
   15508:	adc	r0, r0, r0
   1550c:	subcs	r3, r3, r1, lsl #4
   15510:	cmp	r3, r1, lsl #3
   15514:	adc	r0, r0, r0
   15518:	subcs	r3, r3, r1, lsl #3
   1551c:	cmp	r3, r1, lsl #2
   15520:	adc	r0, r0, r0
   15524:	subcs	r3, r3, r1, lsl #2
   15528:	cmp	r3, r1, lsl #1
   1552c:	adc	r0, r0, r0
   15530:	subcs	r3, r3, r1, lsl #1
   15534:	cmp	r3, r1
   15538:	adc	r0, r0, r0
   1553c:	subcs	r3, r3, r1
   15540:	cmp	ip, #0
   15544:	rsbmi	r0, r0, #0
   15548:	bx	lr
   1554c:	teq	ip, r0
   15550:	rsbmi	r0, r0, #0
   15554:	bx	lr
   15558:	movcc	r0, #0
   1555c:	asreq	r0, ip, #31
   15560:	orreq	r0, r0, #1
   15564:	bx	lr
   15568:	clz	r2, r1
   1556c:	rsb	r2, r2, #31
   15570:	cmp	ip, #0
   15574:	lsr	r0, r3, r2
   15578:	rsbmi	r0, r0, #0
   1557c:	bx	lr
   15580:	cmp	r0, #0
   15584:	mvngt	r0, #-2147483648	; 0x80000000
   15588:	movlt	r0, #-2147483648	; 0x80000000
   1558c:	b	155b0 <__snprintf_chk@plt+0x4790>
   15590:	cmp	r1, #0
   15594:	beq	15580 <__snprintf_chk@plt+0x4760>
   15598:	push	{r0, r1, lr}
   1559c:	bl	15378 <__snprintf_chk@plt+0x4558>
   155a0:	pop	{r1, r2, lr}
   155a4:	mul	r3, r2, r0
   155a8:	sub	r1, r1, r3
   155ac:	bx	lr
   155b0:	push	{r1, lr}
   155b4:	mov	r0, #8
   155b8:	bl	10bf8 <raise@plt>
   155bc:	pop	{r1, pc}
   155c0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   155c4:	mov	r7, r0
   155c8:	ldr	r6, [pc, #72]	; 15618 <__snprintf_chk@plt+0x47f8>
   155cc:	ldr	r5, [pc, #72]	; 1561c <__snprintf_chk@plt+0x47fc>
   155d0:	add	r6, pc, r6
   155d4:	add	r5, pc, r5
   155d8:	sub	r6, r6, r5
   155dc:	mov	r8, r1
   155e0:	mov	r9, r2
   155e4:	bl	10bc0 <calloc@plt-0x20>
   155e8:	asrs	r6, r6, #2
   155ec:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   155f0:	mov	r4, #0
   155f4:	add	r4, r4, #1
   155f8:	ldr	r3, [r5], #4
   155fc:	mov	r2, r9
   15600:	mov	r1, r8
   15604:	mov	r0, r7
   15608:	blx	r3
   1560c:	cmp	r6, r4
   15610:	bne	155f4 <__snprintf_chk@plt+0x47d4>
   15614:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15618:	andeq	r1, r1, r8, lsr r9
   1561c:	andeq	r1, r1, r0, lsr r9
   15620:	bx	lr
   15624:	ldr	r3, [pc, #12]	; 15638 <__snprintf_chk@plt+0x4818>
   15628:	mov	r1, #0
   1562c:	add	r3, pc, r3
   15630:	ldr	r2, [r3]
   15634:	b	10d78 <__cxa_atexit@plt>
   15638:	andeq	r1, r1, r4, lsr #21

Disassembly of section .fini:

0001563c <.fini>:
   1563c:	push	{r3, lr}
   15640:	pop	{r3, pc}
