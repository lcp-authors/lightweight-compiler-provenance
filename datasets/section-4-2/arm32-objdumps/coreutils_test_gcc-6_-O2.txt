
../repos/coreutils/src/test:     file format elf32-littlearm


Disassembly of section .init:

00010bb8 <.init>:
   10bb8:	push	{r3, lr}
   10bbc:	bl	10f38 <__lxstat64@plt+0x114>
   10bc0:	pop	{r3, pc}

Disassembly of section .plt:

00010bc4 <calloc@plt-0x14>:
   10bc4:	push	{lr}		; (str lr, [sp, #-4]!)
   10bc8:	ldr	lr, [pc, #4]	; 10bd4 <calloc@plt-0x4>
   10bcc:	add	lr, pc, lr
   10bd0:	ldr	pc, [lr, #8]!
   10bd4:	andeq	r7, r1, ip, lsr #8

00010bd8 <calloc@plt>:
   10bd8:	add	ip, pc, #0, 12
   10bdc:	add	ip, ip, #94208	; 0x17000
   10be0:	ldr	pc, [ip, #1068]!	; 0x42c

00010be4 <fputs_unlocked@plt>:
   10be4:	add	ip, pc, #0, 12
   10be8:	add	ip, ip, #94208	; 0x17000
   10bec:	ldr	pc, [ip, #1060]!	; 0x424

00010bf0 <raise@plt>:
   10bf0:	add	ip, pc, #0, 12
   10bf4:	add	ip, ip, #94208	; 0x17000
   10bf8:	ldr	pc, [ip, #1052]!	; 0x41c

00010bfc <strcmp@plt>:
   10bfc:	add	ip, pc, #0, 12
   10c00:	add	ip, ip, #94208	; 0x17000
   10c04:	ldr	pc, [ip, #1044]!	; 0x414

00010c08 <strtol@plt>:
   10c08:	add	ip, pc, #0, 12
   10c0c:	add	ip, ip, #94208	; 0x17000
   10c10:	ldr	pc, [ip, #1036]!	; 0x40c

00010c14 <fflush@plt>:
   10c14:	add	ip, pc, #0, 12
   10c18:	add	ip, ip, #94208	; 0x17000
   10c1c:	ldr	pc, [ip, #1028]!	; 0x404

00010c20 <free@plt>:
   10c20:	add	ip, pc, #0, 12
   10c24:	add	ip, ip, #94208	; 0x17000
   10c28:	ldr	pc, [ip, #1020]!	; 0x3fc

00010c2c <_exit@plt>:
   10c2c:	add	ip, pc, #0, 12
   10c30:	add	ip, ip, #94208	; 0x17000
   10c34:	ldr	pc, [ip, #1012]!	; 0x3f4

00010c38 <memcpy@plt>:
   10c38:	add	ip, pc, #0, 12
   10c3c:	add	ip, ip, #94208	; 0x17000
   10c40:	ldr	pc, [ip, #1004]!	; 0x3ec

00010c44 <mbsinit@plt>:
   10c44:	add	ip, pc, #0, 12
   10c48:	add	ip, ip, #94208	; 0x17000
   10c4c:	ldr	pc, [ip, #996]!	; 0x3e4

00010c50 <memcmp@plt>:
   10c50:	add	ip, pc, #0, 12
   10c54:	add	ip, ip, #94208	; 0x17000
   10c58:	ldr	pc, [ip, #988]!	; 0x3dc

00010c5c <dcgettext@plt>:
   10c5c:	add	ip, pc, #0, 12
   10c60:	add	ip, ip, #94208	; 0x17000
   10c64:	ldr	pc, [ip, #980]!	; 0x3d4

00010c68 <realloc@plt>:
   10c68:	add	ip, pc, #0, 12
   10c6c:	add	ip, ip, #94208	; 0x17000
   10c70:	ldr	pc, [ip, #972]!	; 0x3cc

00010c74 <textdomain@plt>:
   10c74:	add	ip, pc, #0, 12
   10c78:	add	ip, ip, #94208	; 0x17000
   10c7c:	ldr	pc, [ip, #964]!	; 0x3c4

00010c80 <geteuid@plt>:
   10c80:	add	ip, pc, #0, 12
   10c84:	add	ip, ip, #94208	; 0x17000
   10c88:	ldr	pc, [ip, #956]!	; 0x3bc

00010c8c <iswprint@plt>:
   10c8c:	add	ip, pc, #0, 12
   10c90:	add	ip, ip, #94208	; 0x17000
   10c94:	ldr	pc, [ip, #948]!	; 0x3b4

00010c98 <getegid@plt>:
   10c98:	add	ip, pc, #0, 12
   10c9c:	add	ip, ip, #94208	; 0x17000
   10ca0:	ldr	pc, [ip, #940]!	; 0x3ac

00010ca4 <fwrite@plt>:
   10ca4:	add	ip, pc, #0, 12
   10ca8:	add	ip, ip, #94208	; 0x17000
   10cac:	ldr	pc, [ip, #932]!	; 0x3a4

00010cb0 <lseek64@plt>:
   10cb0:	add	ip, pc, #0, 12
   10cb4:	add	ip, ip, #94208	; 0x17000
   10cb8:	ldr	pc, [ip, #924]!	; 0x39c

00010cbc <__ctype_get_mb_cur_max@plt>:
   10cbc:	add	ip, pc, #0, 12
   10cc0:	add	ip, ip, #94208	; 0x17000
   10cc4:	ldr	pc, [ip, #916]!	; 0x394

00010cc8 <__fpending@plt>:
   10cc8:	add	ip, pc, #0, 12
   10ccc:	add	ip, ip, #94208	; 0x17000
   10cd0:	ldr	pc, [ip, #908]!	; 0x38c

00010cd4 <mbrtowc@plt>:
   10cd4:	add	ip, pc, #0, 12
   10cd8:	add	ip, ip, #94208	; 0x17000
   10cdc:	ldr	pc, [ip, #900]!	; 0x384

00010ce0 <error@plt>:
   10ce0:	add	ip, pc, #0, 12
   10ce4:	add	ip, ip, #94208	; 0x17000
   10ce8:	ldr	pc, [ip, #892]!	; 0x37c

00010cec <malloc@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #94208	; 0x17000
   10cf4:	ldr	pc, [ip, #884]!	; 0x374

00010cf8 <error_at_line@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #94208	; 0x17000
   10d00:	ldr	pc, [ip, #876]!	; 0x36c

00010d04 <__libc_start_main@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #94208	; 0x17000
   10d0c:	ldr	pc, [ip, #868]!	; 0x364

00010d10 <__freading@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #94208	; 0x17000
   10d18:	ldr	pc, [ip, #860]!	; 0x35c

00010d1c <__gmon_start__@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #94208	; 0x17000
   10d24:	ldr	pc, [ip, #852]!	; 0x354

00010d28 <__ctype_b_loc@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #94208	; 0x17000
   10d30:	ldr	pc, [ip, #844]!	; 0x34c

00010d34 <exit@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #94208	; 0x17000
   10d3c:	ldr	pc, [ip, #836]!	; 0x344

00010d40 <strlen@plt>:
   10d40:	add	ip, pc, #0, 12
   10d44:	add	ip, ip, #94208	; 0x17000
   10d48:	ldr	pc, [ip, #828]!	; 0x33c

00010d4c <__errno_location@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #94208	; 0x17000
   10d54:	ldr	pc, [ip, #820]!	; 0x334

00010d58 <__cxa_atexit@plt>:
   10d58:	add	ip, pc, #0, 12
   10d5c:	add	ip, ip, #94208	; 0x17000
   10d60:	ldr	pc, [ip, #812]!	; 0x32c

00010d64 <__vasprintf_chk@plt>:
   10d64:	add	ip, pc, #0, 12
   10d68:	add	ip, ip, #94208	; 0x17000
   10d6c:	ldr	pc, [ip, #804]!	; 0x324

00010d70 <memset@plt>:
   10d70:	add	ip, pc, #0, 12
   10d74:	add	ip, ip, #94208	; 0x17000
   10d78:	ldr	pc, [ip, #796]!	; 0x31c

00010d7c <__printf_chk@plt>:
   10d7c:	add	ip, pc, #0, 12
   10d80:	add	ip, ip, #94208	; 0x17000
   10d84:	ldr	pc, [ip, #788]!	; 0x314

00010d88 <fileno@plt>:
   10d88:	add	ip, pc, #0, 12
   10d8c:	add	ip, ip, #94208	; 0x17000
   10d90:	ldr	pc, [ip, #780]!	; 0x30c

00010d94 <__fprintf_chk@plt>:
   10d94:	add	ip, pc, #0, 12
   10d98:	add	ip, ip, #94208	; 0x17000
   10d9c:	ldr	pc, [ip, #772]!	; 0x304

00010da0 <fclose@plt>:
   10da0:	add	ip, pc, #0, 12
   10da4:	add	ip, ip, #94208	; 0x17000
   10da8:	ldr	pc, [ip, #764]!	; 0x2fc

00010dac <fseeko64@plt>:
   10dac:	add	ip, pc, #0, 12
   10db0:	add	ip, ip, #94208	; 0x17000
   10db4:	ldr	pc, [ip, #756]!	; 0x2f4

00010db8 <setlocale@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #94208	; 0x17000
   10dc0:	ldr	pc, [ip, #748]!	; 0x2ec

00010dc4 <strrchr@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #94208	; 0x17000
   10dcc:	ldr	pc, [ip, #740]!	; 0x2e4

00010dd0 <nl_langinfo@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #94208	; 0x17000
   10dd8:	ldr	pc, [ip, #732]!	; 0x2dc

00010ddc <euidaccess@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #94208	; 0x17000
   10de4:	ldr	pc, [ip, #724]!	; 0x2d4

00010de8 <bindtextdomain@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #94208	; 0x17000
   10df0:	ldr	pc, [ip, #716]!	; 0x2cc

00010df4 <__xstat64@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #94208	; 0x17000
   10dfc:	ldr	pc, [ip, #708]!	; 0x2c4

00010e00 <isatty@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #94208	; 0x17000
   10e08:	ldr	pc, [ip, #700]!	; 0x2bc

00010e0c <strncmp@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #94208	; 0x17000
   10e14:	ldr	pc, [ip, #692]!	; 0x2b4

00010e18 <abort@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #94208	; 0x17000
   10e20:	ldr	pc, [ip, #684]!	; 0x2ac

00010e24 <__lxstat64@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #94208	; 0x17000
   10e2c:	ldr	pc, [ip, #676]!	; 0x2a4

Disassembly of section .text:

00010e30 <.text>:
   10e30:	push	{r4, r5, r6, lr}
   10e34:	mov	r5, r0
   10e38:	ldr	r0, [r1]
   10e3c:	mov	r6, r1
   10e40:	bl	12988 <__lxstat64@plt+0x1b64>
   10e44:	ldr	r1, [pc, #148]	; 10ee0 <__lxstat64@plt+0xbc>
   10e48:	mov	r0, #6
   10e4c:	bl	10db8 <setlocale@plt>
   10e50:	ldr	r1, [pc, #140]	; 10ee4 <__lxstat64@plt+0xc0>
   10e54:	ldr	r0, [pc, #140]	; 10ee8 <__lxstat64@plt+0xc4>
   10e58:	bl	10de8 <bindtextdomain@plt>
   10e5c:	ldr	r0, [pc, #132]	; 10ee8 <__lxstat64@plt+0xc4>
   10e60:	bl	10c74 <textdomain@plt>
   10e64:	ldr	r3, [pc, #128]	; 10eec <__lxstat64@plt+0xc8>
   10e68:	ldr	r4, [pc, #128]	; 10ef0 <__lxstat64@plt+0xcc>
   10e6c:	mov	r2, #2
   10e70:	ldr	r0, [pc, #124]	; 10ef4 <__lxstat64@plt+0xd0>
   10e74:	str	r2, [r3]
   10e78:	bl	15dac <__lxstat64@plt+0x4f88>
   10e7c:	cmp	r5, #1
   10e80:	mov	r0, #1
   10e84:	str	r6, [r4]
   10e88:	str	r5, [r4, #4]
   10e8c:	str	r0, [r4, #8]
   10e90:	pople	{r4, r5, r6, pc}
   10e94:	sub	r0, r5, #1
   10e98:	bl	11e30 <__lxstat64@plt+0x100c>
   10e9c:	ldmib	r4, {r3, r5}
   10ea0:	cmp	r5, r3
   10ea4:	bne	10eb4 <__lxstat64@plt+0x90>
   10ea8:	eor	r0, r0, #1
   10eac:	uxtb	r0, r0
   10eb0:	pop	{r4, r5, r6, pc}
   10eb4:	ldr	r1, [pc, #60]	; 10ef8 <__lxstat64@plt+0xd4>
   10eb8:	mov	r2, #5
   10ebc:	mov	r0, #0
   10ec0:	bl	10c5c <dcgettext@plt>
   10ec4:	ldr	r3, [r4]
   10ec8:	mov	r6, r0
   10ecc:	ldr	r0, [r3, r5, lsl #2]
   10ed0:	bl	14848 <__lxstat64@plt+0x3a24>
   10ed4:	mov	r1, r0
   10ed8:	mov	r0, r6
   10edc:	bl	11154 <__lxstat64@plt+0x330>
   10ee0:	strdeq	r5, [r1], -r8
   10ee4:	strdeq	r6, [r1], -r8
   10ee8:	andeq	r6, r1, r0, asr ip
   10eec:	andeq	r8, r2, r0, ror #1
   10ef0:	andeq	r8, r2, ip, lsr r1
   10ef4:	andeq	r2, r1, ip, lsr r8
   10ef8:	andeq	r6, r1, r0, lsl sp
   10efc:	mov	fp, #0
   10f00:	mov	lr, #0
   10f04:	pop	{r1}		; (ldr r1, [sp], #4)
   10f08:	mov	r2, sp
   10f0c:	push	{r2}		; (str r2, [sp, #-4]!)
   10f10:	push	{r0}		; (str r0, [sp, #-4]!)
   10f14:	ldr	ip, [pc, #16]	; 10f2c <__lxstat64@plt+0x108>
   10f18:	push	{ip}		; (str ip, [sp, #-4]!)
   10f1c:	ldr	r0, [pc, #12]	; 10f30 <__lxstat64@plt+0x10c>
   10f20:	ldr	r3, [pc, #12]	; 10f34 <__lxstat64@plt+0x110>
   10f24:	bl	10d04 <__libc_start_main@plt>
   10f28:	bl	10e18 <abort@plt>
   10f2c:	andeq	r5, r1, r8, lsr #27
   10f30:	andeq	r0, r1, r0, lsr lr
   10f34:	andeq	r5, r1, r8, asr #26
   10f38:	ldr	r3, [pc, #20]	; 10f54 <__lxstat64@plt+0x130>
   10f3c:	ldr	r2, [pc, #20]	; 10f58 <__lxstat64@plt+0x134>
   10f40:	add	r3, pc, r3
   10f44:	ldr	r2, [r3, r2]
   10f48:	cmp	r2, #0
   10f4c:	bxeq	lr
   10f50:	b	10d1c <__gmon_start__@plt>
   10f54:	strheq	r7, [r1], -r8
   10f58:	ldrdeq	r0, [r0], -r4
   10f5c:	ldr	r3, [pc, #28]	; 10f80 <__lxstat64@plt+0x15c>
   10f60:	ldr	r0, [pc, #28]	; 10f84 <__lxstat64@plt+0x160>
   10f64:	sub	r3, r3, r0
   10f68:	cmp	r3, #6
   10f6c:	bxls	lr
   10f70:	ldr	r3, [pc, #16]	; 10f88 <__lxstat64@plt+0x164>
   10f74:	cmp	r3, #0
   10f78:	bxeq	lr
   10f7c:	bx	r3
   10f80:	andeq	r8, r2, r7, lsr #2
   10f84:	andeq	r8, r2, r4, lsr #2
   10f88:	andeq	r0, r0, r0
   10f8c:	ldr	r1, [pc, #36]	; 10fb8 <__lxstat64@plt+0x194>
   10f90:	ldr	r0, [pc, #36]	; 10fbc <__lxstat64@plt+0x198>
   10f94:	sub	r1, r1, r0
   10f98:	asr	r1, r1, #2
   10f9c:	add	r1, r1, r1, lsr #31
   10fa0:	asrs	r1, r1, #1
   10fa4:	bxeq	lr
   10fa8:	ldr	r3, [pc, #16]	; 10fc0 <__lxstat64@plt+0x19c>
   10fac:	cmp	r3, #0
   10fb0:	bxeq	lr
   10fb4:	bx	r3
   10fb8:	andeq	r8, r2, r4, lsr #2
   10fbc:	andeq	r8, r2, r4, lsr #2
   10fc0:	andeq	r0, r0, r0
   10fc4:	push	{r4, lr}
   10fc8:	ldr	r4, [pc, #24]	; 10fe8 <__lxstat64@plt+0x1c4>
   10fcc:	ldrb	r3, [r4]
   10fd0:	cmp	r3, #0
   10fd4:	popne	{r4, pc}
   10fd8:	bl	10f5c <__lxstat64@plt+0x138>
   10fdc:	mov	r3, #1
   10fe0:	strb	r3, [r4]
   10fe4:	pop	{r4, pc}
   10fe8:	andeq	r8, r2, r8, lsr r1
   10fec:	ldr	r0, [pc, #40]	; 1101c <__lxstat64@plt+0x1f8>
   10ff0:	ldr	r3, [r0]
   10ff4:	cmp	r3, #0
   10ff8:	bne	11000 <__lxstat64@plt+0x1dc>
   10ffc:	b	10f8c <__lxstat64@plt+0x168>
   11000:	ldr	r3, [pc, #24]	; 11020 <__lxstat64@plt+0x1fc>
   11004:	cmp	r3, #0
   11008:	beq	10ffc <__lxstat64@plt+0x1d8>
   1100c:	push	{r4, lr}
   11010:	blx	r3
   11014:	pop	{r4, lr}
   11018:	b	10f8c <__lxstat64@plt+0x168>
   1101c:	andeq	r7, r2, r4, lsl pc
   11020:	andeq	r0, r0, r0
   11024:	push	{r4, lr}
   11028:	mov	r4, r0
   1102c:	ldr	r1, [pc, #240]	; 11124 <__lxstat64@plt+0x300>
   11030:	bl	10bfc <strcmp@plt>
   11034:	cmp	r0, #0
   11038:	beq	1111c <__lxstat64@plt+0x2f8>
   1103c:	ldr	r1, [pc, #228]	; 11128 <__lxstat64@plt+0x304>
   11040:	mov	r0, r4
   11044:	bl	10bfc <strcmp@plt>
   11048:	cmp	r0, #0
   1104c:	beq	1111c <__lxstat64@plt+0x2f8>
   11050:	ldr	r1, [pc, #212]	; 1112c <__lxstat64@plt+0x308>
   11054:	mov	r0, r4
   11058:	bl	10bfc <strcmp@plt>
   1105c:	cmp	r0, #0
   11060:	beq	1111c <__lxstat64@plt+0x2f8>
   11064:	ldr	r1, [pc, #196]	; 11130 <__lxstat64@plt+0x30c>
   11068:	mov	r0, r4
   1106c:	bl	10bfc <strcmp@plt>
   11070:	cmp	r0, #0
   11074:	beq	1111c <__lxstat64@plt+0x2f8>
   11078:	ldr	r1, [pc, #180]	; 11134 <__lxstat64@plt+0x310>
   1107c:	mov	r0, r4
   11080:	bl	10bfc <strcmp@plt>
   11084:	cmp	r0, #0
   11088:	beq	1111c <__lxstat64@plt+0x2f8>
   1108c:	ldr	r1, [pc, #164]	; 11138 <__lxstat64@plt+0x314>
   11090:	mov	r0, r4
   11094:	bl	10bfc <strcmp@plt>
   11098:	cmp	r0, #0
   1109c:	beq	1111c <__lxstat64@plt+0x2f8>
   110a0:	ldr	r1, [pc, #148]	; 1113c <__lxstat64@plt+0x318>
   110a4:	mov	r0, r4
   110a8:	bl	10bfc <strcmp@plt>
   110ac:	cmp	r0, #0
   110b0:	beq	1111c <__lxstat64@plt+0x2f8>
   110b4:	ldr	r1, [pc, #132]	; 11140 <__lxstat64@plt+0x31c>
   110b8:	mov	r0, r4
   110bc:	bl	10bfc <strcmp@plt>
   110c0:	cmp	r0, #0
   110c4:	beq	1111c <__lxstat64@plt+0x2f8>
   110c8:	ldr	r1, [pc, #116]	; 11144 <__lxstat64@plt+0x320>
   110cc:	mov	r0, r4
   110d0:	bl	10bfc <strcmp@plt>
   110d4:	cmp	r0, #0
   110d8:	beq	1111c <__lxstat64@plt+0x2f8>
   110dc:	ldr	r1, [pc, #100]	; 11148 <__lxstat64@plt+0x324>
   110e0:	mov	r0, r4
   110e4:	bl	10bfc <strcmp@plt>
   110e8:	cmp	r0, #0
   110ec:	beq	1111c <__lxstat64@plt+0x2f8>
   110f0:	ldr	r1, [pc, #84]	; 1114c <__lxstat64@plt+0x328>
   110f4:	mov	r0, r4
   110f8:	bl	10bfc <strcmp@plt>
   110fc:	cmp	r0, #0
   11100:	beq	1111c <__lxstat64@plt+0x2f8>
   11104:	mov	r0, r4
   11108:	ldr	r1, [pc, #64]	; 11150 <__lxstat64@plt+0x32c>
   1110c:	bl	10bfc <strcmp@plt>
   11110:	clz	r0, r0
   11114:	lsr	r0, r0, #5
   11118:	pop	{r4, pc}
   1111c:	mov	r0, #1
   11120:	pop	{r4, pc}
   11124:	andeq	r5, r1, r8, lsl #28
   11128:	andeq	r5, r1, ip, lsl #28
   1112c:	andeq	r5, r1, r0, lsl lr
   11130:	andeq	r5, r1, r4, lsl lr
   11134:	andeq	r5, r1, r8, lsl lr
   11138:	andeq	r5, r1, ip, lsl lr
   1113c:	andeq	r5, r1, r0, lsr #28
   11140:	andeq	r5, r1, r4, lsr #28
   11144:	andeq	r5, r1, r8, lsr #28
   11148:	andeq	r5, r1, ip, lsr #28
   1114c:	andeq	r5, r1, r0, lsr lr
   11150:	andeq	r5, r1, r4, lsr lr
   11154:	push	{r0, r1, r2, r3}
   11158:	mov	r1, #0
   1115c:	push	{lr}		; (str lr, [sp, #-4]!)
   11160:	sub	sp, sp, #12
   11164:	add	ip, sp, #20
   11168:	mov	r0, r1
   1116c:	mov	r3, ip
   11170:	ldr	r2, [sp, #16]
   11174:	str	ip, [sp, #4]
   11178:	bl	14b68 <__lxstat64@plt+0x3d44>
   1117c:	mov	r0, #2
   11180:	bl	10d34 <exit@plt>
   11184:	push	{r4, r5, r6, lr}
   11188:	mov	r4, r0
   1118c:	bl	10d28 <__ctype_b_loc@plt>
   11190:	mov	r3, r4
   11194:	ldr	ip, [r0]
   11198:	ldrb	r2, [r3]
   1119c:	mov	r0, r3
   111a0:	add	r3, r3, #1
   111a4:	lsl	r1, r2, #1
   111a8:	ldrh	r1, [ip, r1]
   111ac:	tst	r1, #1
   111b0:	bne	11198 <__lxstat64@plt+0x374>
   111b4:	cmp	r2, #43	; 0x2b
   111b8:	moveq	r0, r3
   111bc:	beq	111cc <__lxstat64@plt+0x3a8>
   111c0:	cmp	r2, #45	; 0x2d
   111c4:	movne	r3, r0
   111c8:	addeq	r3, r0, #1
   111cc:	ldrb	r1, [r3]
   111d0:	add	r2, r3, #1
   111d4:	sub	r1, r1, #48	; 0x30
   111d8:	cmp	r1, #9
   111dc:	bhi	1122c <__lxstat64@plt+0x408>
   111e0:	ldrb	r3, [r3, #1]
   111e4:	sub	r1, r3, #48	; 0x30
   111e8:	cmp	r1, #9
   111ec:	bhi	11214 <__lxstat64@plt+0x3f0>
   111f0:	ldrb	r3, [r2, #1]!
   111f4:	sub	r1, r3, #48	; 0x30
   111f8:	cmp	r1, #9
   111fc:	bls	111f0 <__lxstat64@plt+0x3cc>
   11200:	lsl	r1, r3, #1
   11204:	ldrh	r1, [ip, r1]
   11208:	tst	r1, #1
   1120c:	beq	11224 <__lxstat64@plt+0x400>
   11210:	ldrb	r3, [r2, #1]!
   11214:	lsl	r1, r3, #1
   11218:	ldrh	r1, [ip, r1]
   1121c:	tst	r1, #1
   11220:	bne	11210 <__lxstat64@plt+0x3ec>
   11224:	cmp	r3, #0
   11228:	popeq	{r4, r5, r6, pc}
   1122c:	ldr	r1, [pc, #32]	; 11254 <__lxstat64@plt+0x430>
   11230:	mov	r2, #5
   11234:	mov	r0, #0
   11238:	bl	10c5c <dcgettext@plt>
   1123c:	mov	r5, r0
   11240:	mov	r0, r4
   11244:	bl	14848 <__lxstat64@plt+0x3a24>
   11248:	mov	r1, r0
   1124c:	mov	r0, r5
   11250:	bl	11154 <__lxstat64@plt+0x330>
   11254:	andeq	r5, r1, r8, lsr lr
   11258:	push	{r4, lr}
   1125c:	mov	r2, #5
   11260:	ldr	r1, [pc, #40]	; 11290 <__lxstat64@plt+0x46c>
   11264:	mov	r0, #0
   11268:	bl	10c5c <dcgettext@plt>
   1126c:	ldr	r2, [pc, #32]	; 11294 <__lxstat64@plt+0x470>
   11270:	ldm	r2, {r2, r3}
   11274:	sub	r3, r3, #-1073741823	; 0xc0000001
   11278:	mov	r4, r0
   1127c:	ldr	r0, [r2, r3, lsl #2]
   11280:	bl	14848 <__lxstat64@plt+0x3a24>
   11284:	mov	r1, r0
   11288:	mov	r0, r4
   1128c:	bl	11154 <__lxstat64@plt+0x330>
   11290:	andeq	r5, r1, ip, asr #28
   11294:	andeq	r8, r2, ip, lsr r1
   11298:	ldr	r3, [pc, #36]	; 112c4 <__lxstat64@plt+0x4a0>
   1129c:	ldmib	r3, {r0, r2}
   112a0:	add	r1, r2, #1
   112a4:	cmp	r1, r0
   112a8:	str	r1, [r3, #8]
   112ac:	bge	112bc <__lxstat64@plt+0x498>
   112b0:	add	r2, r2, #2
   112b4:	str	r2, [r3, #8]
   112b8:	bx	lr
   112bc:	push	{r4, lr}
   112c0:	bl	11258 <__lxstat64@plt+0x434>
   112c4:	andeq	r8, r2, ip, lsr r1
   112c8:	push	{r4, r5, r6, r7, r8, r9, lr}
   112cc:	subs	r7, r0, #0
   112d0:	ldr	r5, [pc, #1196]	; 11784 <__lxstat64@plt+0x960>
   112d4:	sub	sp, sp, #212	; 0xd4
   112d8:	ldr	r4, [r5, #8]
   112dc:	ldr	r3, [r5, #4]
   112e0:	addne	r4, r4, #1
   112e4:	strne	r4, [r5, #8]
   112e8:	sub	r3, r3, #2
   112ec:	add	r4, r4, #1
   112f0:	cmp	r4, r3
   112f4:	ldr	r6, [r5]
   112f8:	bge	1137c <__lxstat64@plt+0x558>
   112fc:	add	r3, r4, #1
   11300:	ldr	r1, [pc, #1152]	; 11788 <__lxstat64@plt+0x964>
   11304:	ldr	r0, [r6, r3, lsl #2]
   11308:	bl	10bfc <strcmp@plt>
   1130c:	cmp	r0, #0
   11310:	streq	r4, [r5, #8]
   11314:	moveq	r8, #1
   11318:	bne	1137c <__lxstat64@plt+0x558>
   1131c:	ldr	r0, [r6, r4, lsl #2]
   11320:	lsl	r4, r4, #2
   11324:	add	r9, r6, r4
   11328:	ldrb	r3, [r0]
   1132c:	cmp	r3, #45	; 0x2d
   11330:	beq	11384 <__lxstat64@plt+0x560>
   11334:	cmp	r3, #61	; 0x3d
   11338:	beq	11490 <__lxstat64@plt+0x66c>
   1133c:	ldr	r1, [pc, #1096]	; 1178c <__lxstat64@plt+0x968>
   11340:	bl	10bfc <strcmp@plt>
   11344:	cmp	r0, #0
   11348:	bne	11750 <__lxstat64@plt+0x92c>
   1134c:	ldr	r4, [r5, #8]
   11350:	add	r3, r6, r4, lsl #2
   11354:	ldr	r0, [r6, r4, lsl #2]
   11358:	ldr	r1, [r3, #8]
   1135c:	bl	10bfc <strcmp@plt>
   11360:	add	r4, r4, #3
   11364:	str	r4, [r5, #8]
   11368:	adds	r7, r0, #0
   1136c:	movne	r7, #1
   11370:	mov	r0, r7
   11374:	add	sp, sp, #212	; 0xd4
   11378:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1137c:	mov	r8, #0
   11380:	b	1131c <__lxstat64@plt+0x4f8>
   11384:	ldrb	r3, [r0, #1]
   11388:	cmp	r3, #103	; 0x67
   1138c:	cmpne	r3, #108	; 0x6c
   11390:	bne	11444 <__lxstat64@plt+0x620>
   11394:	ldrb	r2, [r0, #2]
   11398:	cmp	r2, #116	; 0x74
   1139c:	cmpne	r2, #101	; 0x65
   113a0:	bne	11444 <__lxstat64@plt+0x620>
   113a4:	ldrb	r1, [r0, #3]
   113a8:	cmp	r1, #0
   113ac:	bne	116d0 <__lxstat64@plt+0x8ac>
   113b0:	cmp	r7, #0
   113b4:	ldr	r0, [r9, #-4]
   113b8:	bne	116ec <__lxstat64@plt+0x8c8>
   113bc:	bl	11184 <__lxstat64@plt+0x360>
   113c0:	mov	r6, r0
   113c4:	ldr	r3, [r5]
   113c8:	cmp	r8, #0
   113cc:	add	r3, r3, r4
   113d0:	beq	1171c <__lxstat64@plt+0x8f8>
   113d4:	ldr	r0, [r3, #8]
   113d8:	bl	10d40 <strlen@plt>
   113dc:	mov	r1, #0
   113e0:	add	r2, sp, #104	; 0x68
   113e4:	bl	12920 <__lxstat64@plt+0x1afc>
   113e8:	mov	r1, r0
   113ec:	mov	r0, r6
   113f0:	bl	14860 <__lxstat64@plt+0x3a3c>
   113f4:	ldr	r2, [r5]
   113f8:	ldr	r3, [r5, #8]
   113fc:	ldr	r2, [r2, r4]
   11400:	add	r3, r3, #3
   11404:	str	r3, [r5, #8]
   11408:	ldrb	r3, [r2, #1]
   1140c:	ldrb	r7, [r2, #2]
   11410:	cmp	r3, #108	; 0x6c
   11414:	sub	r7, r7, #101	; 0x65
   11418:	clz	r7, r7
   1141c:	lsr	r7, r7, #5
   11420:	beq	1172c <__lxstat64@plt+0x908>
   11424:	cmp	r3, #103	; 0x67
   11428:	beq	1173c <__lxstat64@plt+0x918>
   1142c:	adds	r0, r0, #0
   11430:	movne	r0, #1
   11434:	sub	r7, r0, r7
   11438:	clz	r7, r7
   1143c:	lsr	r7, r7, #5
   11440:	b	11370 <__lxstat64@plt+0x54c>
   11444:	cmp	r3, #101	; 0x65
   11448:	beq	114d8 <__lxstat64@plt+0x6b4>
   1144c:	cmp	r3, #110	; 0x6e
   11450:	beq	11614 <__lxstat64@plt+0x7f0>
   11454:	cmp	r3, #111	; 0x6f
   11458:	beq	1156c <__lxstat64@plt+0x748>
   1145c:	cmp	r3, #101	; 0x65
   11460:	ldrbeq	r3, [r0, #2]
   11464:	beq	114e4 <__lxstat64@plt+0x6c0>
   11468:	ldr	r1, [pc, #800]	; 11790 <__lxstat64@plt+0x96c>
   1146c:	mov	r2, #5
   11470:	mov	r0, #0
   11474:	bl	10c5c <dcgettext@plt>
   11478:	mov	r4, r0
   1147c:	ldr	r0, [r9]
   11480:	bl	14848 <__lxstat64@plt+0x3a24>
   11484:	mov	r1, r0
   11488:	mov	r0, r4
   1148c:	bl	11154 <__lxstat64@plt+0x330>
   11490:	ldrb	r3, [r0, #1]
   11494:	cmp	r3, #0
   11498:	beq	114b0 <__lxstat64@plt+0x68c>
   1149c:	cmp	r3, #61	; 0x3d
   114a0:	bne	1133c <__lxstat64@plt+0x518>
   114a4:	ldrb	r3, [r0, #2]
   114a8:	cmp	r3, #0
   114ac:	bne	1133c <__lxstat64@plt+0x518>
   114b0:	ldr	r4, [r5, #8]
   114b4:	add	r3, r6, r4, lsl #2
   114b8:	ldr	r0, [r6, r4, lsl #2]
   114bc:	ldr	r1, [r3, #8]
   114c0:	bl	10bfc <strcmp@plt>
   114c4:	add	r4, r4, #3
   114c8:	str	r4, [r5, #8]
   114cc:	clz	r7, r0
   114d0:	lsr	r7, r7, #5
   114d4:	b	11370 <__lxstat64@plt+0x54c>
   114d8:	ldrb	r3, [r0, #2]
   114dc:	cmp	r3, #113	; 0x71
   114e0:	beq	11704 <__lxstat64@plt+0x8e0>
   114e4:	cmp	r3, #102	; 0x66
   114e8:	bne	11468 <__lxstat64@plt+0x644>
   114ec:	ldrb	r0, [r0, #3]
   114f0:	cmp	r0, #0
   114f4:	bne	11468 <__lxstat64@plt+0x644>
   114f8:	ldr	r3, [r5, #8]
   114fc:	orrs	r7, r8, r7
   11500:	add	r3, r3, #3
   11504:	str	r3, [r5, #8]
   11508:	bne	11754 <__lxstat64@plt+0x930>
   1150c:	mov	r2, sp
   11510:	ldr	r1, [r9, #-4]
   11514:	mov	r0, #3
   11518:	bl	10df4 <__xstat64@plt>
   1151c:	cmp	r0, #0
   11520:	bne	11370 <__lxstat64@plt+0x54c>
   11524:	ldr	r1, [r9, #4]
   11528:	add	r2, sp, #104	; 0x68
   1152c:	mov	r0, #3
   11530:	bl	10df4 <__xstat64@plt>
   11534:	cmp	r0, #0
   11538:	bne	11370 <__lxstat64@plt+0x54c>
   1153c:	ldrd	r0, [sp]
   11540:	ldrd	r2, [sp, #104]	; 0x68
   11544:	cmp	r1, r3
   11548:	cmpeq	r0, r2
   1154c:	bne	11370 <__lxstat64@plt+0x54c>
   11550:	ldrd	r0, [sp, #96]	; 0x60
   11554:	ldrd	r2, [sp, #200]	; 0xc8
   11558:	cmp	r1, r3
   1155c:	cmpeq	r0, r2
   11560:	moveq	r7, #1
   11564:	movne	r7, #0
   11568:	b	11370 <__lxstat64@plt+0x54c>
   1156c:	ldrb	r3, [r0, #2]
   11570:	cmp	r3, #116	; 0x74
   11574:	bne	11468 <__lxstat64@plt+0x644>
   11578:	ldrb	r0, [r0, #3]
   1157c:	cmp	r0, #0
   11580:	bne	11468 <__lxstat64@plt+0x644>
   11584:	ldr	r3, [r5, #8]
   11588:	orrs	r7, r8, r7
   1158c:	add	r3, r3, #3
   11590:	str	r3, [r5, #8]
   11594:	bne	11774 <__lxstat64@plt+0x950>
   11598:	add	r2, sp, #104	; 0x68
   1159c:	ldr	r1, [r9, #-4]
   115a0:	mov	r0, #3
   115a4:	bl	10df4 <__xstat64@plt>
   115a8:	add	r2, sp, #104	; 0x68
   115ac:	ldr	r1, [r9, #4]
   115b0:	cmp	r0, #0
   115b4:	mov	r0, #3
   115b8:	bne	116dc <__lxstat64@plt+0x8b8>
   115bc:	ldr	r5, [sp, #184]	; 0xb8
   115c0:	ldr	r4, [sp, #188]	; 0xbc
   115c4:	bl	10df4 <__xstat64@plt>
   115c8:	cmp	r0, #0
   115cc:	bne	11370 <__lxstat64@plt+0x54c>
   115d0:	ldr	r7, [sp, #184]	; 0xb8
   115d4:	ldr	r2, [sp, #188]	; 0xbc
   115d8:	cmp	r5, r7
   115dc:	movge	r3, #0
   115e0:	movlt	r3, #1
   115e4:	cmp	r5, r7
   115e8:	rsble	r3, r3, #0
   115ec:	rsbgt	r3, r3, #1
   115f0:	cmp	r4, r2
   115f4:	movge	r7, #0
   115f8:	movlt	r7, #1
   115fc:	cmp	r4, r2
   11600:	rsble	r7, r7, #0
   11604:	rsbgt	r7, r7, #1
   11608:	add	r7, r7, r3, lsl #1
   1160c:	lsr	r7, r7, #31
   11610:	b	11370 <__lxstat64@plt+0x54c>
   11614:	ldrb	r2, [r0, #2]
   11618:	cmp	r2, #101	; 0x65
   1161c:	beq	11704 <__lxstat64@plt+0x8e0>
   11620:	cmp	r2, #116	; 0x74
   11624:	bne	11468 <__lxstat64@plt+0x644>
   11628:	ldrb	r0, [r0, #3]
   1162c:	cmp	r0, #0
   11630:	bne	11468 <__lxstat64@plt+0x644>
   11634:	ldr	r3, [r5, #8]
   11638:	orrs	r7, r8, r7
   1163c:	add	r3, r3, #3
   11640:	str	r3, [r5, #8]
   11644:	bne	11764 <__lxstat64@plt+0x940>
   11648:	add	r2, sp, #104	; 0x68
   1164c:	ldr	r1, [r9, #-4]
   11650:	mov	r0, #3
   11654:	bl	10df4 <__xstat64@plt>
   11658:	add	r2, sp, #104	; 0x68
   1165c:	ldr	r1, [r9, #4]
   11660:	cmp	r0, #0
   11664:	mov	r0, #3
   11668:	bne	11714 <__lxstat64@plt+0x8f0>
   1166c:	ldr	r7, [sp, #184]	; 0xb8
   11670:	ldr	r4, [sp, #188]	; 0xbc
   11674:	bl	10df4 <__xstat64@plt>
   11678:	cmp	r0, #0
   1167c:	movne	r7, #1
   11680:	bne	11370 <__lxstat64@plt+0x54c>
   11684:	ldr	r1, [sp, #184]	; 0xb8
   11688:	ldr	r2, [sp, #188]	; 0xbc
   1168c:	cmp	r7, r1
   11690:	movge	r3, #0
   11694:	movlt	r3, #1
   11698:	cmp	r7, r1
   1169c:	rsble	r3, r3, #0
   116a0:	rsbgt	r3, r3, #1
   116a4:	cmp	r4, r2
   116a8:	movge	r7, #0
   116ac:	movlt	r7, #1
   116b0:	cmp	r4, r2
   116b4:	rsble	r7, r7, #0
   116b8:	rsbgt	r7, r7, #1
   116bc:	add	r7, r7, r3, lsl #1
   116c0:	cmp	r7, #0
   116c4:	movle	r7, #0
   116c8:	movgt	r7, #1
   116cc:	b	11370 <__lxstat64@plt+0x54c>
   116d0:	cmp	r3, #110	; 0x6e
   116d4:	bne	11454 <__lxstat64@plt+0x630>
   116d8:	b	11620 <__lxstat64@plt+0x7fc>
   116dc:	bl	10df4 <__xstat64@plt>
   116e0:	cmp	r0, #0
   116e4:	moveq	r7, #1
   116e8:	b	11370 <__lxstat64@plt+0x54c>
   116ec:	bl	10d40 <strlen@plt>
   116f0:	mov	r2, sp
   116f4:	mov	r1, #0
   116f8:	bl	12920 <__lxstat64@plt+0x1afc>
   116fc:	mov	r6, r0
   11700:	b	113c4 <__lxstat64@plt+0x5a0>
   11704:	ldrb	r3, [r0, #3]
   11708:	cmp	r3, #0
   1170c:	beq	113b0 <__lxstat64@plt+0x58c>
   11710:	b	11468 <__lxstat64@plt+0x644>
   11714:	bl	10df4 <__xstat64@plt>
   11718:	b	11370 <__lxstat64@plt+0x54c>
   1171c:	ldr	r0, [r3, #4]
   11720:	bl	11184 <__lxstat64@plt+0x360>
   11724:	mov	r1, r0
   11728:	b	113ec <__lxstat64@plt+0x5c8>
   1172c:	cmp	r0, r7
   11730:	movge	r7, #0
   11734:	movlt	r7, #1
   11738:	b	11370 <__lxstat64@plt+0x54c>
   1173c:	rsb	r7, r7, #0
   11740:	cmp	r0, r7
   11744:	movle	r7, #0
   11748:	movgt	r7, #1
   1174c:	b	11370 <__lxstat64@plt+0x54c>
   11750:	bl	10e18 <abort@plt>
   11754:	mov	r2, #5
   11758:	ldr	r1, [pc, #52]	; 11794 <__lxstat64@plt+0x970>
   1175c:	bl	10c5c <dcgettext@plt>
   11760:	bl	11154 <__lxstat64@plt+0x330>
   11764:	mov	r2, #5
   11768:	ldr	r1, [pc, #40]	; 11798 <__lxstat64@plt+0x974>
   1176c:	bl	10c5c <dcgettext@plt>
   11770:	bl	11154 <__lxstat64@plt+0x330>
   11774:	mov	r2, #5
   11778:	ldr	r1, [pc, #28]	; 1179c <__lxstat64@plt+0x978>
   1177c:	bl	10c5c <dcgettext@plt>
   11780:	bl	11154 <__lxstat64@plt+0x330>
   11784:	andeq	r8, r2, ip, lsr r1
   11788:	muleq	r1, r4, lr
   1178c:	andeq	r5, r1, ip, lsl #28
   11790:			; <UNDEFINED> instruction: 0x00015eb0
   11794:	andeq	r5, r1, r0, lsl #29
   11798:	andeq	r5, r1, r8, ror #28
   1179c:	muleq	r1, r8, lr
   117a0:	push	{r4, r5, r6, lr}
   117a4:	sub	sp, sp, #104	; 0x68
   117a8:	ldr	r4, [pc, #1524]	; 11da4 <__lxstat64@plt+0xf80>
   117ac:	ldr	r5, [r4]
   117b0:	ldr	r6, [r4, #8]
   117b4:	ldr	r3, [r5, r6, lsl #2]
   117b8:	ldrb	r3, [r3, #1]
   117bc:	sub	r3, r3, #71	; 0x47
   117c0:	cmp	r3, #51	; 0x33
   117c4:	ldrls	pc, [pc, r3, lsl #2]
   117c8:	b	11d30 <__lxstat64@plt+0xf0c>
   117cc:	andeq	r1, r1, r0, ror #25
   117d0:	andeq	r1, r1, r0, lsr sp
   117d4:	andeq	r1, r1, r0, lsr sp
   117d8:	andeq	r1, r1, r0, lsr sp
   117dc:	andeq	r1, r1, r0, lsr sp
   117e0:	andeq	r1, r1, r4, lsr #25
   117e4:	andeq	r1, r1, r0, lsr sp
   117e8:	andeq	r1, r1, ip, lsr #24
   117ec:	strdeq	r1, [r1], -r8
   117f0:	andeq	r1, r1, r0, lsr sp
   117f4:	andeq	r1, r1, r0, lsr sp
   117f8:	andeq	r1, r1, r0, lsr sp
   117fc:			; <UNDEFINED> instruction: 0x00011bbc
   11800:	andeq	r1, r1, r0, lsr sp
   11804:	andeq	r1, r1, r0, lsr sp
   11808:	andeq	r1, r1, r0, lsr sp
   1180c:	andeq	r1, r1, r0, lsr sp
   11810:	andeq	r1, r1, r0, lsr sp
   11814:	andeq	r1, r1, r0, lsr sp
   11818:	andeq	r1, r1, r0, lsr sp
   1181c:	andeq	r1, r1, r0, lsr sp
   11820:	andeq	r1, r1, r0, lsr sp
   11824:	andeq	r1, r1, r0, lsr sp
   11828:	andeq	r1, r1, r0, lsr sp
   1182c:	andeq	r1, r1, r0, lsr sp
   11830:	andeq	r1, r1, r0, lsr sp
   11834:	andeq	r1, r1, r0, lsr sp
   11838:	andeq	r1, r1, r0, lsl #23
   1183c:	andeq	r1, r1, r4, asr #22
   11840:	andeq	r1, r1, r8, lsl #22
   11844:	andeq	r1, r1, r0, ror #21
   11848:	andeq	r1, r1, r4, lsr #21
   1184c:	andeq	r1, r1, r0, ror sl
   11850:	andeq	r1, r1, r4, lsr #25
   11854:	andeq	r1, r1, r0, lsr sp
   11858:	andeq	r1, r1, r0, lsr sp
   1185c:	andeq	r1, r1, ip, lsr sl
   11860:	andeq	r1, r1, r0, lsr sp
   11864:	andeq	r1, r1, r0, lsr sp
   11868:	andeq	r1, r1, ip, lsl sl
   1186c:	andeq	r1, r1, r0, lsr sp
   11870:	andeq	r1, r1, r0, ror #19
   11874:	andeq	r1, r1, r0, lsr sp
   11878:	ldrdeq	r1, [r1], -r0
   1187c:	muleq	r1, r4, r9
   11880:	andeq	r1, r1, r4, lsr r9
   11884:	andeq	r1, r1, r0, lsl #18
   11888:	andeq	r1, r1, r0, lsr sp
   1188c:	strdeq	r1, [r1], -r0
   11890:	andeq	r1, r1, r4, asr #17
   11894:	andeq	r1, r1, r0, lsr sp
   11898:	muleq	r1, ip, r8
   1189c:	bl	11298 <__lxstat64@plt+0x474>
   118a0:	ldr	r3, [r4, #8]
   118a4:	sub	r3, r3, #-1073741823	; 0xc0000001
   118a8:	ldr	r3, [r5, r3, lsl #2]
   118ac:	ldrb	r3, [r3]
   118b0:	clz	r3, r3
   118b4:	lsr	r3, r3, #5
   118b8:	mov	r0, r3
   118bc:	add	sp, sp, #104	; 0x68
   118c0:	pop	{r4, r5, r6, pc}
   118c4:	bl	11298 <__lxstat64@plt+0x474>
   118c8:	ldr	r3, [r4, #8]
   118cc:	mov	r1, #1
   118d0:	sub	r3, r3, #-1073741823	; 0xc0000001
   118d4:	ldr	r0, [r5, r3, lsl #2]
   118d8:	bl	10ddc <euidaccess@plt>
   118dc:	clz	r3, r0
   118e0:	lsr	r3, r3, #5
   118e4:	mov	r0, r3
   118e8:	add	sp, sp, #104	; 0x68
   118ec:	pop	{r4, r5, r6, pc}
   118f0:	bl	11298 <__lxstat64@plt+0x474>
   118f4:	ldr	r3, [r4, #8]
   118f8:	mov	r1, #2
   118fc:	b	118d0 <__lxstat64@plt+0xaac>
   11900:	bl	11298 <__lxstat64@plt+0x474>
   11904:	ldr	r3, [r4, #8]
   11908:	mov	r2, sp
   1190c:	sub	r3, r3, #-1073741823	; 0xc0000001
   11910:	mov	r0, #3
   11914:	ldr	r1, [r5, r3, lsl #2]
   11918:	bl	10df4 <__xstat64@plt>
   1191c:	cmp	r0, #0
   11920:	bne	11c1c <__lxstat64@plt+0xdf8>
   11924:	ldr	r3, [sp, #16]
   11928:	lsr	r3, r3, #11
   1192c:	and	r3, r3, #1
   11930:	b	118b8 <__lxstat64@plt+0xa94>
   11934:	bl	11298 <__lxstat64@plt+0x474>
   11938:	ldr	r3, [r4, #8]
   1193c:	sub	r3, r3, #-1073741823	; 0xc0000001
   11940:	ldr	r0, [r5, r3, lsl #2]
   11944:	bl	11184 <__lxstat64@plt+0x360>
   11948:	mov	r5, r0
   1194c:	bl	10d4c <__errno_location@plt>
   11950:	mov	r1, #0
   11954:	mov	r2, #10
   11958:	mov	r4, r0
   1195c:	mov	r0, r5
   11960:	str	r1, [r4]
   11964:	bl	10c08 <strtol@plt>
   11968:	ldr	r3, [r4]
   1196c:	subs	r3, r3, #34	; 0x22
   11970:	movne	r3, #1
   11974:	cmp	r0, #0
   11978:	movlt	r3, #0
   1197c:	cmp	r3, #0
   11980:	beq	118b8 <__lxstat64@plt+0xa94>
   11984:	bl	10e00 <isatty@plt>
   11988:	adds	r3, r0, #0
   1198c:	movne	r3, #1
   11990:	b	118b8 <__lxstat64@plt+0xa94>
   11994:	bl	11298 <__lxstat64@plt+0x474>
   11998:	ldr	r3, [r4, #8]
   1199c:	mov	r2, sp
   119a0:	sub	r3, r3, #-1073741823	; 0xc0000001
   119a4:	mov	r0, #3
   119a8:	ldr	r1, [r5, r3, lsl #2]
   119ac:	bl	10df4 <__xstat64@plt>
   119b0:	cmp	r0, #0
   119b4:	bne	11c1c <__lxstat64@plt+0xdf8>
   119b8:	ldrd	r2, [sp, #48]	; 0x30
   119bc:	cmp	r2, #1
   119c0:	sbcs	r3, r3, #0
   119c4:	movge	r3, #1
   119c8:	movlt	r3, #0
   119cc:	b	118b8 <__lxstat64@plt+0xa94>
   119d0:	bl	11298 <__lxstat64@plt+0x474>
   119d4:	ldr	r3, [r4, #8]
   119d8:	mov	r1, #4
   119dc:	b	118d0 <__lxstat64@plt+0xaac>
   119e0:	bl	11298 <__lxstat64@plt+0x474>
   119e4:	ldr	r3, [r4, #8]
   119e8:	mov	r2, sp
   119ec:	sub	r3, r3, #-1073741823	; 0xc0000001
   119f0:	mov	r0, #3
   119f4:	ldr	r1, [r5, r3, lsl #2]
   119f8:	bl	10df4 <__xstat64@plt>
   119fc:	cmp	r0, #0
   11a00:	bne	11c1c <__lxstat64@plt+0xdf8>
   11a04:	ldr	r3, [sp, #16]
   11a08:	and	r3, r3, #61440	; 0xf000
   11a0c:	sub	r3, r3, #4096	; 0x1000
   11a10:	clz	r3, r3
   11a14:	lsr	r3, r3, #5
   11a18:	b	118b8 <__lxstat64@plt+0xa94>
   11a1c:	bl	11298 <__lxstat64@plt+0x474>
   11a20:	ldr	r3, [r4, #8]
   11a24:	sub	r3, r3, #-1073741823	; 0xc0000001
   11a28:	ldr	r3, [r5, r3, lsl #2]
   11a2c:	ldrb	r3, [r3]
   11a30:	adds	r3, r3, #0
   11a34:	movne	r3, #1
   11a38:	b	118b8 <__lxstat64@plt+0xa94>
   11a3c:	bl	11298 <__lxstat64@plt+0x474>
   11a40:	ldr	r3, [r4, #8]
   11a44:	mov	r2, sp
   11a48:	sub	r3, r3, #-1073741823	; 0xc0000001
   11a4c:	mov	r0, #3
   11a50:	ldr	r1, [r5, r3, lsl #2]
   11a54:	bl	10df4 <__xstat64@plt>
   11a58:	cmp	r0, #0
   11a5c:	bne	11c1c <__lxstat64@plt+0xdf8>
   11a60:	ldr	r3, [sp, #16]
   11a64:	lsr	r3, r3, #9
   11a68:	and	r3, r3, #1
   11a6c:	b	118b8 <__lxstat64@plt+0xa94>
   11a70:	bl	11298 <__lxstat64@plt+0x474>
   11a74:	ldr	r3, [r4, #8]
   11a78:	mov	r2, sp
   11a7c:	sub	r3, r3, #-1073741823	; 0xc0000001
   11a80:	mov	r0, #3
   11a84:	ldr	r1, [r5, r3, lsl #2]
   11a88:	bl	10df4 <__xstat64@plt>
   11a8c:	cmp	r0, #0
   11a90:	bne	11c1c <__lxstat64@plt+0xdf8>
   11a94:	ldr	r3, [sp, #16]
   11a98:	lsr	r3, r3, #10
   11a9c:	and	r3, r3, #1
   11aa0:	b	118b8 <__lxstat64@plt+0xa94>
   11aa4:	bl	11298 <__lxstat64@plt+0x474>
   11aa8:	ldr	r3, [r4, #8]
   11aac:	mov	r2, sp
   11ab0:	sub	r3, r3, #-1073741823	; 0xc0000001
   11ab4:	mov	r0, #3
   11ab8:	ldr	r1, [r5, r3, lsl #2]
   11abc:	bl	10df4 <__xstat64@plt>
   11ac0:	cmp	r0, #0
   11ac4:	bne	11c1c <__lxstat64@plt+0xdf8>
   11ac8:	ldr	r3, [sp, #16]
   11acc:	and	r3, r3, #61440	; 0xf000
   11ad0:	sub	r3, r3, #32768	; 0x8000
   11ad4:	clz	r3, r3
   11ad8:	lsr	r3, r3, #5
   11adc:	b	118b8 <__lxstat64@plt+0xa94>
   11ae0:	bl	11298 <__lxstat64@plt+0x474>
   11ae4:	ldr	r3, [r4, #8]
   11ae8:	mov	r2, sp
   11aec:	sub	r3, r3, #-1073741823	; 0xc0000001
   11af0:	mov	r0, #3
   11af4:	ldr	r1, [r5, r3, lsl #2]
   11af8:	bl	10df4 <__xstat64@plt>
   11afc:	clz	r3, r0
   11b00:	lsr	r3, r3, #5
   11b04:	b	118b8 <__lxstat64@plt+0xa94>
   11b08:	bl	11298 <__lxstat64@plt+0x474>
   11b0c:	ldr	r3, [r4, #8]
   11b10:	mov	r2, sp
   11b14:	sub	r3, r3, #-1073741823	; 0xc0000001
   11b18:	mov	r0, #3
   11b1c:	ldr	r1, [r5, r3, lsl #2]
   11b20:	bl	10df4 <__xstat64@plt>
   11b24:	cmp	r0, #0
   11b28:	bne	11c1c <__lxstat64@plt+0xdf8>
   11b2c:	ldr	r3, [sp, #16]
   11b30:	and	r3, r3, #61440	; 0xf000
   11b34:	sub	r3, r3, #16384	; 0x4000
   11b38:	clz	r3, r3
   11b3c:	lsr	r3, r3, #5
   11b40:	b	118b8 <__lxstat64@plt+0xa94>
   11b44:	bl	11298 <__lxstat64@plt+0x474>
   11b48:	ldr	r3, [r4, #8]
   11b4c:	mov	r2, sp
   11b50:	sub	r3, r3, #-1073741823	; 0xc0000001
   11b54:	mov	r0, #3
   11b58:	ldr	r1, [r5, r3, lsl #2]
   11b5c:	bl	10df4 <__xstat64@plt>
   11b60:	cmp	r0, #0
   11b64:	bne	11c1c <__lxstat64@plt+0xdf8>
   11b68:	ldr	r3, [sp, #16]
   11b6c:	and	r3, r3, #61440	; 0xf000
   11b70:	sub	r3, r3, #8192	; 0x2000
   11b74:	clz	r3, r3
   11b78:	lsr	r3, r3, #5
   11b7c:	b	118b8 <__lxstat64@plt+0xa94>
   11b80:	bl	11298 <__lxstat64@plt+0x474>
   11b84:	ldr	r3, [r4, #8]
   11b88:	mov	r2, sp
   11b8c:	sub	r3, r3, #-1073741823	; 0xc0000001
   11b90:	mov	r0, #3
   11b94:	ldr	r1, [r5, r3, lsl #2]
   11b98:	bl	10df4 <__xstat64@plt>
   11b9c:	cmp	r0, #0
   11ba0:	bne	11c1c <__lxstat64@plt+0xdf8>
   11ba4:	ldr	r3, [sp, #16]
   11ba8:	and	r3, r3, #61440	; 0xf000
   11bac:	sub	r3, r3, #24576	; 0x6000
   11bb0:	clz	r3, r3
   11bb4:	lsr	r3, r3, #5
   11bb8:	b	118b8 <__lxstat64@plt+0xa94>
   11bbc:	bl	11298 <__lxstat64@plt+0x474>
   11bc0:	ldr	r3, [r4, #8]
   11bc4:	mov	r2, sp
   11bc8:	sub	r3, r3, #-1073741823	; 0xc0000001
   11bcc:	mov	r0, #3
   11bd0:	ldr	r1, [r5, r3, lsl #2]
   11bd4:	bl	10df4 <__xstat64@plt>
   11bd8:	cmp	r0, #0
   11bdc:	bne	11c1c <__lxstat64@plt+0xdf8>
   11be0:	ldr	r3, [sp, #16]
   11be4:	and	r3, r3, #61440	; 0xf000
   11be8:	sub	r3, r3, #49152	; 0xc000
   11bec:	clz	r3, r3
   11bf0:	lsr	r3, r3, #5
   11bf4:	b	118b8 <__lxstat64@plt+0xa94>
   11bf8:	bl	11298 <__lxstat64@plt+0x474>
   11bfc:	ldr	r3, [r4, #8]
   11c00:	mov	r2, sp
   11c04:	sub	r3, r3, #-1073741823	; 0xc0000001
   11c08:	mov	r0, #3
   11c0c:	ldr	r1, [r5, r3, lsl #2]
   11c10:	bl	10df4 <__xstat64@plt>
   11c14:	subs	r4, r0, #0
   11c18:	beq	11d58 <__lxstat64@plt+0xf34>
   11c1c:	mov	r3, #0
   11c20:	mov	r0, r3
   11c24:	add	sp, sp, #104	; 0x68
   11c28:	pop	{r4, r5, r6, pc}
   11c2c:	bl	11298 <__lxstat64@plt+0x474>
   11c30:	ldr	r3, [r4, #8]
   11c34:	mov	r2, sp
   11c38:	sub	r3, r3, #-1073741823	; 0xc0000001
   11c3c:	mov	r0, #3
   11c40:	ldr	r1, [r5, r3, lsl #2]
   11c44:	bl	10df4 <__xstat64@plt>
   11c48:	cmp	r0, #0
   11c4c:	bne	11c1c <__lxstat64@plt+0xdf8>
   11c50:	ldr	r3, [sp, #80]	; 0x50
   11c54:	ldr	ip, [sp, #72]	; 0x48
   11c58:	ldr	r0, [sp, #76]	; 0x4c
   11c5c:	cmp	ip, r3
   11c60:	ldr	r1, [sp, #84]	; 0x54
   11c64:	movle	r2, #0
   11c68:	movgt	r2, #1
   11c6c:	cmp	ip, r3
   11c70:	rsbge	r2, r2, #0
   11c74:	rsblt	r2, r2, #1
   11c78:	cmp	r0, r1
   11c7c:	movle	r3, #0
   11c80:	movgt	r3, #1
   11c84:	cmp	r0, r1
   11c88:	rsbge	r3, r3, #0
   11c8c:	rsblt	r3, r3, #1
   11c90:	add	r3, r3, r2, lsl #1
   11c94:	cmp	r3, #0
   11c98:	movle	r3, #0
   11c9c:	movgt	r3, #1
   11ca0:	b	118b8 <__lxstat64@plt+0xa94>
   11ca4:	bl	11298 <__lxstat64@plt+0x474>
   11ca8:	ldr	r3, [r4, #8]
   11cac:	mov	r2, sp
   11cb0:	sub	r3, r3, #-1073741823	; 0xc0000001
   11cb4:	mov	r0, #3
   11cb8:	ldr	r1, [r5, r3, lsl #2]
   11cbc:	bl	10e24 <__lxstat64@plt>
   11cc0:	cmp	r0, #0
   11cc4:	bne	11c1c <__lxstat64@plt+0xdf8>
   11cc8:	ldr	r3, [sp, #16]
   11ccc:	and	r3, r3, #61440	; 0xf000
   11cd0:	sub	r3, r3, #40960	; 0xa000
   11cd4:	clz	r3, r3
   11cd8:	lsr	r3, r3, #5
   11cdc:	b	118b8 <__lxstat64@plt+0xa94>
   11ce0:	bl	11298 <__lxstat64@plt+0x474>
   11ce4:	ldr	r3, [r4, #8]
   11ce8:	mov	r2, sp
   11cec:	sub	r3, r3, #-1073741823	; 0xc0000001
   11cf0:	mov	r0, #3
   11cf4:	ldr	r1, [r5, r3, lsl #2]
   11cf8:	bl	10df4 <__xstat64@plt>
   11cfc:	subs	r4, r0, #0
   11d00:	bne	11c1c <__lxstat64@plt+0xdf8>
   11d04:	bl	10d4c <__errno_location@plt>
   11d08:	str	r4, [r0]
   11d0c:	mov	r5, r0
   11d10:	bl	10c98 <getegid@plt>
   11d14:	cmn	r0, #1
   11d18:	beq	11d84 <__lxstat64@plt+0xf60>
   11d1c:	ldr	r3, [sp, #28]
   11d20:	sub	r3, r3, r0
   11d24:	clz	r3, r3
   11d28:	lsr	r3, r3, #5
   11d2c:	b	118b8 <__lxstat64@plt+0xa94>
   11d30:	ldr	r1, [pc, #112]	; 11da8 <__lxstat64@plt+0xf84>
   11d34:	mov	r2, #5
   11d38:	mov	r0, #0
   11d3c:	bl	10c5c <dcgettext@plt>
   11d40:	mov	r4, r0
   11d44:	ldr	r0, [r5, r6, lsl #2]
   11d48:	bl	14848 <__lxstat64@plt+0x3a24>
   11d4c:	mov	r1, r0
   11d50:	mov	r0, r4
   11d54:	bl	11154 <__lxstat64@plt+0x330>
   11d58:	bl	10d4c <__errno_location@plt>
   11d5c:	str	r4, [r0]
   11d60:	mov	r5, r0
   11d64:	bl	10c80 <geteuid@plt>
   11d68:	cmn	r0, #1
   11d6c:	beq	11d94 <__lxstat64@plt+0xf70>
   11d70:	ldr	r3, [sp, #24]
   11d74:	sub	r3, r3, r0
   11d78:	clz	r3, r3
   11d7c:	lsr	r3, r3, #5
   11d80:	b	118b8 <__lxstat64@plt+0xa94>
   11d84:	ldr	r3, [r5]
   11d88:	cmp	r3, #0
   11d8c:	bne	11c1c <__lxstat64@plt+0xdf8>
   11d90:	b	11d1c <__lxstat64@plt+0xef8>
   11d94:	ldr	r3, [r5]
   11d98:	cmp	r3, #0
   11d9c:	bne	11c1c <__lxstat64@plt+0xdf8>
   11da0:	b	11d70 <__lxstat64@plt+0xf4c>
   11da4:	andeq	r8, r2, ip, lsr r1
   11da8:	andeq	r5, r1, ip, asr #29
   11dac:	push	{r4, r5, r6, r7, r8, lr}
   11db0:	ldr	r6, [pc, #112]	; 11e28 <__lxstat64@plt+0x1004>
   11db4:	ldr	r1, [pc, #112]	; 11e2c <__lxstat64@plt+0x1008>
   11db8:	ldr	r7, [r6]
   11dbc:	ldr	r4, [r6, #8]
   11dc0:	ldr	r5, [r7, r4, lsl #2]
   11dc4:	mov	r0, r5
   11dc8:	bl	10bfc <strcmp@plt>
   11dcc:	cmp	r0, #0
   11dd0:	beq	11e00 <__lxstat64@plt+0xfdc>
   11dd4:	ldrb	r3, [r5]
   11dd8:	cmp	r3, #45	; 0x2d
   11ddc:	bne	11e24 <__lxstat64@plt+0x1000>
   11de0:	ldrb	r3, [r5, #1]
   11de4:	cmp	r3, #0
   11de8:	beq	11e24 <__lxstat64@plt+0x1000>
   11dec:	ldrb	r3, [r5, #2]
   11df0:	cmp	r3, #0
   11df4:	bne	11e24 <__lxstat64@plt+0x1000>
   11df8:	pop	{r4, r5, r6, r7, r8, lr}
   11dfc:	b	117a0 <__lxstat64@plt+0x97c>
   11e00:	lsl	r8, r4, #2
   11e04:	add	r7, r7, r8
   11e08:	add	r4, r4, #2
   11e0c:	ldr	r3, [r7, #4]
   11e10:	str	r4, [r6, #8]
   11e14:	ldrb	r0, [r3]
   11e18:	clz	r0, r0
   11e1c:	lsr	r0, r0, #5
   11e20:	pop	{r4, r5, r6, r7, r8, pc}
   11e24:	bl	11258 <__lxstat64@plt+0x434>
   11e28:	andeq	r8, r2, ip, lsr r1
   11e2c:	andeq	r5, r1, r8, ror #29
   11e30:	sub	r3, r0, #1
   11e34:	push	{r4, r5, r6, r7, r8, lr}
   11e38:	cmp	r3, #3
   11e3c:	ldrls	pc, [pc, r3, lsl #2]
   11e40:	b	11ed8 <__lxstat64@plt+0x10b4>
   11e44:			; <UNDEFINED> instruction: 0x00011eb0
   11e48:	andeq	r1, r1, r8, lsr #29
   11e4c:	andeq	r1, r1, r0, lsr #29
   11e50:	andeq	r1, r1, r4, asr lr
   11e54:	ldr	r5, [pc, #240]	; 11f4c <__lxstat64@plt+0x1128>
   11e58:	ldr	r1, [pc, #240]	; 11f50 <__lxstat64@plt+0x112c>
   11e5c:	ldr	r4, [r5, #8]
   11e60:	ldr	r6, [r5]
   11e64:	lsl	r8, r4, #2
   11e68:	ldr	r7, [r6, r4, lsl #2]
   11e6c:	mov	r0, r7
   11e70:	bl	10bfc <strcmp@plt>
   11e74:	cmp	r0, #0
   11e78:	bne	11efc <__lxstat64@plt+0x10d8>
   11e7c:	ldr	r3, [r5, #4]
   11e80:	add	r4, r4, #1
   11e84:	cmp	r4, r3
   11e88:	str	r4, [r5, #8]
   11e8c:	bge	11f48 <__lxstat64@plt+0x1124>
   11e90:	bl	122a0 <__lxstat64@plt+0x147c>
   11e94:	eor	r0, r0, #1
   11e98:	uxtb	r0, r0
   11e9c:	pop	{r4, r5, r6, r7, r8, pc}
   11ea0:	pop	{r4, r5, r6, r7, r8, lr}
   11ea4:	b	122a0 <__lxstat64@plt+0x147c>
   11ea8:	pop	{r4, r5, r6, r7, r8, lr}
   11eac:	b	11dac <__lxstat64@plt+0xf88>
   11eb0:	ldr	r3, [pc, #148]	; 11f4c <__lxstat64@plt+0x1128>
   11eb4:	ldr	r2, [r3, #8]
   11eb8:	ldr	r1, [r3]
   11ebc:	add	r0, r2, #1
   11ec0:	str	r0, [r3, #8]
   11ec4:	ldr	r3, [r1, r2, lsl #2]
   11ec8:	ldrb	r0, [r3]
   11ecc:	adds	r0, r0, #0
   11ed0:	movne	r0, #1
   11ed4:	pop	{r4, r5, r6, r7, r8, pc}
   11ed8:	cmp	r0, #0
   11edc:	ble	11f44 <__lxstat64@plt+0x1120>
   11ee0:	ldr	r5, [pc, #100]	; 11f4c <__lxstat64@plt+0x1128>
   11ee4:	ldr	r4, [r5, #8]
   11ee8:	ldr	r3, [r5, #4]
   11eec:	cmp	r3, r4
   11ef0:	ble	11f48 <__lxstat64@plt+0x1124>
   11ef4:	pop	{r4, r5, r6, r7, r8, lr}
   11ef8:	b	11f5c <__lxstat64@plt+0x1138>
   11efc:	mov	r0, r7
   11f00:	ldr	r1, [pc, #76]	; 11f54 <__lxstat64@plt+0x1130>
   11f04:	bl	10bfc <strcmp@plt>
   11f08:	cmp	r0, #0
   11f0c:	bne	11ee8 <__lxstat64@plt+0x10c4>
   11f10:	add	r6, r6, r8
   11f14:	ldr	r1, [pc, #60]	; 11f58 <__lxstat64@plt+0x1134>
   11f18:	ldr	r0, [r6, #12]
   11f1c:	bl	10bfc <strcmp@plt>
   11f20:	cmp	r0, #0
   11f24:	bne	11ee8 <__lxstat64@plt+0x10c4>
   11f28:	add	r4, r4, #1
   11f2c:	str	r4, [r5, #8]
   11f30:	bl	11dac <__lxstat64@plt+0xf88>
   11f34:	ldr	r3, [r5, #8]
   11f38:	add	r3, r3, #1
   11f3c:	str	r3, [r5, #8]
   11f40:	pop	{r4, r5, r6, r7, r8, pc}
   11f44:	bl	10e18 <abort@plt>
   11f48:	bl	11258 <__lxstat64@plt+0x434>
   11f4c:	andeq	r8, r2, ip, lsr r1
   11f50:	andeq	r5, r1, r8, ror #29
   11f54:	andeq	r5, r1, ip, ror #29
   11f58:	strdeq	r5, [r1], -r0
   11f5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11f60:	mov	r8, #1
   11f64:	ldr	r9, [pc, #792]	; 12284 <__lxstat64@plt+0x1460>
   11f68:	sub	sp, sp, #12
   11f6c:	mov	r3, #0
   11f70:	ldr	r4, [r9, #8]
   11f74:	ldr	r7, [r9, #4]
   11f78:	str	r3, [sp, #4]
   11f7c:	cmp	r4, r7
   11f80:	str	r8, [sp]
   11f84:	bge	120b4 <__lxstat64@plt+0x1290>
   11f88:	ldr	fp, [r9]
   11f8c:	add	r3, fp, r4, lsl #2
   11f90:	ldr	r5, [fp, r4, lsl #2]
   11f94:	ldrb	r6, [r5]
   11f98:	cmp	r6, #33	; 0x21
   11f9c:	bne	12244 <__lxstat64@plt+0x1420>
   11fa0:	ldrb	r2, [r5, #1]
   11fa4:	cmp	r2, #0
   11fa8:	bne	1224c <__lxstat64@plt+0x1428>
   11fac:	add	r4, r4, #1
   11fb0:	cmp	r4, r7
   11fb4:	str	r4, [r9, #8]
   11fb8:	bge	120b4 <__lxstat64@plt+0x1290>
   11fbc:	mov	r0, #0
   11fc0:	mov	sl, r8
   11fc4:	b	11fe8 <__lxstat64@plt+0x11c4>
   11fc8:	ldrb	r2, [r5, #1]
   11fcc:	cmp	r2, #0
   11fd0:	bne	120e8 <__lxstat64@plt+0x12c4>
   11fd4:	add	r4, r4, #1
   11fd8:	cmp	r4, r7
   11fdc:	beq	12254 <__lxstat64@plt+0x1430>
   11fe0:	eor	sl, sl, #1
   11fe4:	mov	r0, r8
   11fe8:	ldr	r5, [r3, #4]!
   11fec:	ldrb	r1, [r5]
   11ff0:	cmp	r1, #33	; 0x21
   11ff4:	beq	11fc8 <__lxstat64@plt+0x11a4>
   11ff8:	mov	r6, r1
   11ffc:	cmp	r0, #0
   12000:	strne	r4, [r9, #8]
   12004:	cmp	r6, #40	; 0x28
   12008:	beq	120f4 <__lxstat64@plt+0x12d0>
   1200c:	sub	r7, r7, r4
   12010:	cmp	r7, #3
   12014:	ble	120b8 <__lxstat64@plt+0x1294>
   12018:	ldr	r1, [pc, #616]	; 12288 <__lxstat64@plt+0x1464>
   1201c:	mov	r0, r5
   12020:	bl	10bfc <strcmp@plt>
   12024:	cmp	r0, #0
   12028:	bne	12040 <__lxstat64@plt+0x121c>
   1202c:	add	r3, r4, #2
   12030:	ldr	r0, [fp, r3, lsl #2]
   12034:	bl	11024 <__lxstat64@plt+0x200>
   12038:	cmp	r0, #0
   1203c:	bne	12234 <__lxstat64@plt+0x1410>
   12040:	add	r3, r4, #1
   12044:	ldr	r0, [fp, r3, lsl #2]
   12048:	bl	11024 <__lxstat64@plt+0x200>
   1204c:	cmp	r0, #0
   12050:	bne	121dc <__lxstat64@plt+0x13b8>
   12054:	cmp	r6, #45	; 0x2d
   12058:	beq	120c4 <__lxstat64@plt+0x12a0>
   1205c:	adds	r0, r6, #0
   12060:	movne	r0, #1
   12064:	add	r4, r4, #1
   12068:	str	r4, [r9, #8]
   1206c:	ldr	r3, [sp]
   12070:	ldr	r7, [r9, #4]
   12074:	eor	r2, r0, sl
   12078:	and	r3, r3, r2
   1207c:	cmp	r7, r4
   12080:	str	r3, [sp]
   12084:	ble	1221c <__lxstat64@plt+0x13f8>
   12088:	ldr	r3, [r9]
   1208c:	ldr	r1, [pc, #504]	; 1228c <__lxstat64@plt+0x1468>
   12090:	ldr	r5, [r3, r4, lsl #2]
   12094:	mov	r0, r5
   12098:	bl	10bfc <strcmp@plt>
   1209c:	cmp	r0, #0
   120a0:	bne	121ec <__lxstat64@plt+0x13c8>
   120a4:	add	r4, r4, #1
   120a8:	cmp	r4, r7
   120ac:	str	r4, [r9, #8]
   120b0:	blt	11f88 <__lxstat64@plt+0x1164>
   120b4:	bl	11258 <__lxstat64@plt+0x434>
   120b8:	beq	12040 <__lxstat64@plt+0x121c>
   120bc:	cmp	r6, #45	; 0x2d
   120c0:	bne	1205c <__lxstat64@plt+0x1238>
   120c4:	ldrb	r3, [r5, #1]
   120c8:	cmp	r3, #0
   120cc:	beq	1205c <__lxstat64@plt+0x1238>
   120d0:	ldrb	r3, [r5, #2]
   120d4:	cmp	r3, #0
   120d8:	bne	1205c <__lxstat64@plt+0x1238>
   120dc:	bl	117a0 <__lxstat64@plt+0x97c>
   120e0:	ldr	r4, [r9, #8]
   120e4:	b	1206c <__lxstat64@plt+0x1248>
   120e8:	cmp	r0, #0
   120ec:	strne	r4, [r9, #8]
   120f0:	b	1200c <__lxstat64@plt+0x11e8>
   120f4:	ldrb	r3, [r5, #1]
   120f8:	cmp	r3, #0
   120fc:	bne	1200c <__lxstat64@plt+0x11e8>
   12100:	add	r5, r4, #1
   12104:	cmp	r5, r7
   12108:	str	r5, [r9, #8]
   1210c:	bge	120b4 <__lxstat64@plt+0x1290>
   12110:	add	r3, r4, #2
   12114:	cmp	r3, r7
   12118:	movge	r4, #1
   1211c:	bge	12158 <__lxstat64@plt+0x1334>
   12120:	sub	r6, r7, #1
   12124:	sub	r6, r6, r4
   12128:	add	fp, fp, r5, lsl #2
   1212c:	mov	r4, #1
   12130:	ldr	r1, [pc, #344]	; 12290 <__lxstat64@plt+0x146c>
   12134:	ldr	r0, [fp, #4]!
   12138:	bl	10bfc <strcmp@plt>
   1213c:	cmp	r0, #0
   12140:	beq	12158 <__lxstat64@plt+0x1334>
   12144:	cmp	r4, #4
   12148:	beq	121d4 <__lxstat64@plt+0x13b0>
   1214c:	add	r4, r4, #1
   12150:	cmp	r6, r4
   12154:	bne	12130 <__lxstat64@plt+0x130c>
   12158:	mov	r0, r4
   1215c:	bl	11e30 <__lxstat64@plt+0x100c>
   12160:	ldr	r4, [r9, #8]
   12164:	ldr	r3, [r9]
   12168:	ldr	r3, [r3, r4, lsl #2]
   1216c:	cmp	r3, #0
   12170:	beq	1225c <__lxstat64@plt+0x1438>
   12174:	ldrb	r1, [r3]
   12178:	cmp	r1, #41	; 0x29
   1217c:	bne	1218c <__lxstat64@plt+0x1368>
   12180:	ldrb	r3, [r3, #1]
   12184:	cmp	r3, #0
   12188:	beq	12064 <__lxstat64@plt+0x1240>
   1218c:	mov	r2, #5
   12190:	ldr	r1, [pc, #252]	; 12294 <__lxstat64@plt+0x1470>
   12194:	mov	r0, #0
   12198:	bl	10c5c <dcgettext@plt>
   1219c:	ldr	r1, [pc, #236]	; 12290 <__lxstat64@plt+0x146c>
   121a0:	mov	r4, r0
   121a4:	mov	r0, #0
   121a8:	bl	14838 <__lxstat64@plt+0x3a14>
   121ac:	ldr	r2, [r9, #8]
   121b0:	ldr	r3, [r9]
   121b4:	ldr	r1, [r3, r2, lsl #2]
   121b8:	mov	r5, r0
   121bc:	mov	r0, #1
   121c0:	bl	14838 <__lxstat64@plt+0x3a14>
   121c4:	mov	r1, r5
   121c8:	mov	r2, r0
   121cc:	mov	r0, r4
   121d0:	bl	11154 <__lxstat64@plt+0x330>
   121d4:	sub	r4, r7, r5
   121d8:	b	12158 <__lxstat64@plt+0x1334>
   121dc:	mov	r0, #0
   121e0:	bl	112c8 <__lxstat64@plt+0x4a4>
   121e4:	ldr	r4, [r9, #8]
   121e8:	b	1206c <__lxstat64@plt+0x1248>
   121ec:	mov	r0, r5
   121f0:	ldr	r1, [pc, #160]	; 12298 <__lxstat64@plt+0x1474>
   121f4:	bl	10bfc <strcmp@plt>
   121f8:	ldr	sl, [sp]
   121fc:	ldr	r3, [sp, #4]
   12200:	orr	r3, r3, sl
   12204:	str	r3, [sp, #4]
   12208:	cmp	r0, #0
   1220c:	bne	12228 <__lxstat64@plt+0x1404>
   12210:	add	r4, r4, #1
   12214:	str	r4, [r9, #8]
   12218:	b	11f7c <__lxstat64@plt+0x1158>
   1221c:	ldm	sp, {r3, sl}
   12220:	orr	r3, r3, sl
   12224:	str	r3, [sp, #4]
   12228:	ldr	r0, [sp, #4]
   1222c:	add	sp, sp, #12
   12230:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12234:	mov	r0, r8
   12238:	bl	112c8 <__lxstat64@plt+0x4a4>
   1223c:	ldr	r4, [r9, #8]
   12240:	b	1206c <__lxstat64@plt+0x1248>
   12244:	mov	sl, #0
   12248:	b	12004 <__lxstat64@plt+0x11e0>
   1224c:	mov	sl, #0
   12250:	b	1200c <__lxstat64@plt+0x11e8>
   12254:	str	r4, [r9, #8]
   12258:	bl	11258 <__lxstat64@plt+0x434>
   1225c:	ldr	r1, [pc, #56]	; 1229c <__lxstat64@plt+0x1478>
   12260:	mov	r0, r3
   12264:	mov	r2, #5
   12268:	bl	10c5c <dcgettext@plt>
   1226c:	mov	r4, r0
   12270:	ldr	r0, [pc, #24]	; 12290 <__lxstat64@plt+0x146c>
   12274:	bl	14848 <__lxstat64@plt+0x3a24>
   12278:	mov	r1, r0
   1227c:	mov	r0, r4
   12280:	bl	11154 <__lxstat64@plt+0x330>
   12284:	andeq	r8, r2, ip, lsr r1
   12288:	muleq	r1, r4, lr
   1228c:	andeq	r5, r1, r8, lsl pc
   12290:	strdeq	r5, [r1], -r0
   12294:	andeq	r5, r1, r0, lsl #30
   12298:	andeq	r5, r1, ip, lsl pc
   1229c:	strdeq	r5, [r1], -r4
   122a0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   122a4:	ldr	r4, [pc, #268]	; 123b8 <__lxstat64@plt+0x1594>
   122a8:	ldr	r8, [r4, #8]
   122ac:	ldr	r6, [r4]
   122b0:	add	r5, r8, #1
   122b4:	ldr	r7, [r6, r5, lsl #2]
   122b8:	add	r9, r6, r5, lsl #2
   122bc:	mov	r0, r7
   122c0:	bl	11024 <__lxstat64@plt+0x200>
   122c4:	cmp	r0, #0
   122c8:	bne	12354 <__lxstat64@plt+0x1530>
   122cc:	ldr	sl, [r9, #-4]
   122d0:	ldr	r1, [pc, #228]	; 123bc <__lxstat64@plt+0x1598>
   122d4:	mov	r0, sl
   122d8:	bl	10bfc <strcmp@plt>
   122dc:	cmp	r0, #0
   122e0:	bne	12304 <__lxstat64@plt+0x14e0>
   122e4:	ldr	r3, [r4, #4]
   122e8:	str	r5, [r4, #8]
   122ec:	cmp	r5, r3
   122f0:	bge	1238c <__lxstat64@plt+0x1568>
   122f4:	bl	11dac <__lxstat64@plt+0xf88>
   122f8:	eor	r0, r0, #1
   122fc:	uxtb	r0, r0
   12300:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12304:	mov	r0, sl
   12308:	ldr	r1, [pc, #176]	; 123c0 <__lxstat64@plt+0x159c>
   1230c:	bl	10bfc <strcmp@plt>
   12310:	cmp	r0, #0
   12314:	beq	12360 <__lxstat64@plt+0x153c>
   12318:	ldr	r1, [pc, #164]	; 123c4 <__lxstat64@plt+0x15a0>
   1231c:	mov	r0, r7
   12320:	bl	10bfc <strcmp@plt>
   12324:	cmp	r0, #0
   12328:	beq	12340 <__lxstat64@plt+0x151c>
   1232c:	mov	r0, r7
   12330:	ldr	r1, [pc, #144]	; 123c8 <__lxstat64@plt+0x15a4>
   12334:	bl	10bfc <strcmp@plt>
   12338:	cmp	r0, #0
   1233c:	bne	12390 <__lxstat64@plt+0x156c>
   12340:	ldr	r3, [r4, #4]
   12344:	cmp	r8, r3
   12348:	bge	1238c <__lxstat64@plt+0x1568>
   1234c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   12350:	b	11f5c <__lxstat64@plt+0x1138>
   12354:	mov	r0, #0
   12358:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1235c:	b	112c8 <__lxstat64@plt+0x4a4>
   12360:	ldr	r0, [r9, #4]
   12364:	ldr	r1, [pc, #96]	; 123cc <__lxstat64@plt+0x15a8>
   12368:	bl	10bfc <strcmp@plt>
   1236c:	cmp	r0, #0
   12370:	bne	12318 <__lxstat64@plt+0x14f4>
   12374:	ldrb	r0, [r7]
   12378:	add	r8, r8, #3
   1237c:	str	r8, [r4, #8]
   12380:	adds	r0, r0, #0
   12384:	movne	r0, #1
   12388:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1238c:	bl	11258 <__lxstat64@plt+0x434>
   12390:	ldr	r1, [pc, #56]	; 123d0 <__lxstat64@plt+0x15ac>
   12394:	mov	r2, #5
   12398:	mov	r0, #0
   1239c:	bl	10c5c <dcgettext@plt>
   123a0:	mov	r4, r0
   123a4:	ldr	r0, [r6, r5, lsl #2]
   123a8:	bl	14848 <__lxstat64@plt+0x3a24>
   123ac:	mov	r1, r0
   123b0:	mov	r0, r4
   123b4:	bl	11154 <__lxstat64@plt+0x330>
   123b8:	andeq	r8, r2, ip, lsr r1
   123bc:	andeq	r5, r1, r8, ror #29
   123c0:	andeq	r5, r1, ip, ror #29
   123c4:	andeq	r5, r1, r8, lsl pc
   123c8:	andeq	r5, r1, ip, lsl pc
   123cc:	strdeq	r5, [r1], -r0
   123d0:	andeq	r5, r1, r0, lsr #30
   123d4:	subs	r5, r0, #0
   123d8:	push	{r7, lr}
   123dc:	sub	sp, sp, #56	; 0x38
   123e0:	beq	1241c <__lxstat64@plt+0x15f8>
   123e4:	ldr	r3, [pc, #940]	; 12798 <__lxstat64@plt+0x1974>
   123e8:	mov	r2, #5
   123ec:	ldr	r1, [pc, #936]	; 1279c <__lxstat64@plt+0x1978>
   123f0:	mov	r0, #0
   123f4:	ldr	r4, [r3]
   123f8:	bl	10c5c <dcgettext@plt>
   123fc:	ldr	r3, [pc, #924]	; 127a0 <__lxstat64@plt+0x197c>
   12400:	mov	r1, #1
   12404:	ldr	r3, [r3]
   12408:	mov	r2, r0
   1240c:	mov	r0, r4
   12410:	bl	10d94 <__fprintf_chk@plt>
   12414:	mov	r0, r5
   12418:	bl	10d34 <exit@plt>
   1241c:	ldr	r6, [pc, #896]	; 127a4 <__lxstat64@plt+0x1980>
   12420:	mov	r2, #5
   12424:	ldr	r1, [pc, #892]	; 127a8 <__lxstat64@plt+0x1984>
   12428:	bl	10c5c <dcgettext@plt>
   1242c:	ldr	r1, [r6]
   12430:	bl	10be4 <fputs_unlocked@plt>
   12434:	mov	r2, #5
   12438:	ldr	r1, [pc, #876]	; 127ac <__lxstat64@plt+0x1988>
   1243c:	mov	r0, r5
   12440:	bl	10c5c <dcgettext@plt>
   12444:	ldr	r1, [r6]
   12448:	bl	10be4 <fputs_unlocked@plt>
   1244c:	mov	r2, #5
   12450:	ldr	r1, [pc, #856]	; 127b0 <__lxstat64@plt+0x198c>
   12454:	mov	r0, r5
   12458:	bl	10c5c <dcgettext@plt>
   1245c:	ldr	r1, [r6]
   12460:	bl	10be4 <fputs_unlocked@plt>
   12464:	mov	r2, #5
   12468:	ldr	r1, [pc, #836]	; 127b4 <__lxstat64@plt+0x1990>
   1246c:	mov	r0, r5
   12470:	bl	10c5c <dcgettext@plt>
   12474:	ldr	r1, [r6]
   12478:	bl	10be4 <fputs_unlocked@plt>
   1247c:	mov	r2, #5
   12480:	ldr	r1, [pc, #816]	; 127b8 <__lxstat64@plt+0x1994>
   12484:	mov	r0, r5
   12488:	bl	10c5c <dcgettext@plt>
   1248c:	ldr	r1, [r6]
   12490:	bl	10be4 <fputs_unlocked@plt>
   12494:	mov	r2, #5
   12498:	ldr	r1, [pc, #796]	; 127bc <__lxstat64@plt+0x1998>
   1249c:	mov	r0, r5
   124a0:	bl	10c5c <dcgettext@plt>
   124a4:	ldr	r1, [r6]
   124a8:	bl	10be4 <fputs_unlocked@plt>
   124ac:	mov	r2, #5
   124b0:	ldr	r1, [pc, #776]	; 127c0 <__lxstat64@plt+0x199c>
   124b4:	mov	r0, r5
   124b8:	bl	10c5c <dcgettext@plt>
   124bc:	ldr	r1, [r6]
   124c0:	bl	10be4 <fputs_unlocked@plt>
   124c4:	mov	r2, #5
   124c8:	ldr	r1, [pc, #756]	; 127c4 <__lxstat64@plt+0x19a0>
   124cc:	mov	r0, r5
   124d0:	bl	10c5c <dcgettext@plt>
   124d4:	ldr	r1, [r6]
   124d8:	bl	10be4 <fputs_unlocked@plt>
   124dc:	mov	r2, #5
   124e0:	ldr	r1, [pc, #736]	; 127c8 <__lxstat64@plt+0x19a4>
   124e4:	mov	r0, r5
   124e8:	bl	10c5c <dcgettext@plt>
   124ec:	ldr	r1, [r6]
   124f0:	bl	10be4 <fputs_unlocked@plt>
   124f4:	mov	r2, #5
   124f8:	ldr	r1, [pc, #716]	; 127cc <__lxstat64@plt+0x19a8>
   124fc:	mov	r0, r5
   12500:	bl	10c5c <dcgettext@plt>
   12504:	ldr	r1, [r6]
   12508:	bl	10be4 <fputs_unlocked@plt>
   1250c:	mov	r2, #5
   12510:	ldr	r1, [pc, #696]	; 127d0 <__lxstat64@plt+0x19ac>
   12514:	mov	r0, r5
   12518:	bl	10c5c <dcgettext@plt>
   1251c:	ldr	r1, [r6]
   12520:	bl	10be4 <fputs_unlocked@plt>
   12524:	mov	r2, #5
   12528:	ldr	r1, [pc, #676]	; 127d4 <__lxstat64@plt+0x19b0>
   1252c:	mov	r0, r5
   12530:	bl	10c5c <dcgettext@plt>
   12534:	ldr	r1, [r6]
   12538:	bl	10be4 <fputs_unlocked@plt>
   1253c:	mov	r2, #5
   12540:	ldr	r1, [pc, #656]	; 127d8 <__lxstat64@plt+0x19b4>
   12544:	mov	r0, r5
   12548:	bl	10c5c <dcgettext@plt>
   1254c:	ldr	r1, [r6]
   12550:	bl	10be4 <fputs_unlocked@plt>
   12554:	mov	r2, #5
   12558:	ldr	r1, [pc, #636]	; 127dc <__lxstat64@plt+0x19b8>
   1255c:	mov	r0, r5
   12560:	bl	10c5c <dcgettext@plt>
   12564:	ldr	r1, [r6]
   12568:	bl	10be4 <fputs_unlocked@plt>
   1256c:	mov	r2, #5
   12570:	ldr	r1, [pc, #616]	; 127e0 <__lxstat64@plt+0x19bc>
   12574:	mov	r0, r5
   12578:	bl	10c5c <dcgettext@plt>
   1257c:	ldr	r1, [r6]
   12580:	bl	10be4 <fputs_unlocked@plt>
   12584:	mov	r2, #5
   12588:	ldr	r1, [pc, #596]	; 127e4 <__lxstat64@plt+0x19c0>
   1258c:	mov	r0, r5
   12590:	bl	10c5c <dcgettext@plt>
   12594:	ldr	r1, [r6]
   12598:	bl	10be4 <fputs_unlocked@plt>
   1259c:	mov	r2, #5
   125a0:	ldr	r1, [pc, #576]	; 127e8 <__lxstat64@plt+0x19c4>
   125a4:	mov	r0, r5
   125a8:	bl	10c5c <dcgettext@plt>
   125ac:	mov	r2, #5
   125b0:	ldr	r1, [pc, #564]	; 127ec <__lxstat64@plt+0x19c8>
   125b4:	mov	r4, r0
   125b8:	mov	r0, r5
   125bc:	bl	10c5c <dcgettext@plt>
   125c0:	mov	r1, r4
   125c4:	ldr	r4, [pc, #548]	; 127f0 <__lxstat64@plt+0x19cc>
   125c8:	mov	r2, r0
   125cc:	mov	r0, #1
   125d0:	bl	10d7c <__printf_chk@plt>
   125d4:	ldm	r4!, {r0, r1, r2, r3}
   125d8:	mov	lr, sp
   125dc:	stmia	lr!, {r0, r1, r2, r3}
   125e0:	ldm	r4!, {r0, r1, r2, r3}
   125e4:	ldr	ip, [sp]
   125e8:	stmia	lr!, {r0, r1, r2, r3}
   125ec:	cmp	ip, #0
   125f0:	ldm	r4!, {r0, r1, r2, r3}
   125f4:	stmia	lr!, {r0, r1, r2, r3}
   125f8:	ldm	r4, {r0, r1}
   125fc:	moveq	r4, sp
   12600:	stm	lr, {r0, r1}
   12604:	beq	12634 <__lxstat64@plt+0x1810>
   12608:	ldr	r7, [pc, #484]	; 127f4 <__lxstat64@plt+0x19d0>
   1260c:	mov	r4, sp
   12610:	b	12620 <__lxstat64@plt+0x17fc>
   12614:	ldr	ip, [r4, #8]!
   12618:	cmp	ip, #0
   1261c:	beq	12634 <__lxstat64@plt+0x1810>
   12620:	mov	r1, ip
   12624:	mov	r0, r7
   12628:	bl	10bfc <strcmp@plt>
   1262c:	cmp	r0, #0
   12630:	bne	12614 <__lxstat64@plt+0x17f0>
   12634:	ldr	r4, [r4, #4]
   12638:	mov	r2, #5
   1263c:	cmp	r4, #0
   12640:	ldr	r1, [pc, #432]	; 127f8 <__lxstat64@plt+0x19d4>
   12644:	beq	126ec <__lxstat64@plt+0x18c8>
   12648:	mov	r0, #0
   1264c:	bl	10c5c <dcgettext@plt>
   12650:	ldr	r3, [pc, #420]	; 127fc <__lxstat64@plt+0x19d8>
   12654:	ldr	r2, [pc, #420]	; 12800 <__lxstat64@plt+0x19dc>
   12658:	mov	r1, r0
   1265c:	mov	r0, #1
   12660:	bl	10d7c <__printf_chk@plt>
   12664:	mov	r1, #0
   12668:	mov	r0, #5
   1266c:	bl	10db8 <setlocale@plt>
   12670:	cmp	r0, #0
   12674:	ldreq	r7, [pc, #376]	; 127f4 <__lxstat64@plt+0x19d0>
   12678:	beq	12694 <__lxstat64@plt+0x1870>
   1267c:	mov	r2, #3
   12680:	ldr	r1, [pc, #380]	; 12804 <__lxstat64@plt+0x19e0>
   12684:	bl	10e0c <strncmp@plt>
   12688:	ldr	r7, [pc, #356]	; 127f4 <__lxstat64@plt+0x19d0>
   1268c:	cmp	r0, #0
   12690:	bne	1277c <__lxstat64@plt+0x1958>
   12694:	mov	r2, #5
   12698:	ldr	r1, [pc, #360]	; 12808 <__lxstat64@plt+0x19e4>
   1269c:	mov	r0, #0
   126a0:	bl	10c5c <dcgettext@plt>
   126a4:	ldr	r3, [pc, #328]	; 127f4 <__lxstat64@plt+0x19d0>
   126a8:	ldr	r2, [pc, #332]	; 127fc <__lxstat64@plt+0x19d8>
   126ac:	mov	r1, r0
   126b0:	mov	r0, #1
   126b4:	bl	10d7c <__printf_chk@plt>
   126b8:	mov	r2, #5
   126bc:	ldr	r1, [pc, #328]	; 1280c <__lxstat64@plt+0x19e8>
   126c0:	mov	r0, #0
   126c4:	bl	10c5c <dcgettext@plt>
   126c8:	ldr	r2, [pc, #320]	; 12810 <__lxstat64@plt+0x19ec>
   126cc:	cmp	r4, r7
   126d0:	ldr	r3, [pc, #316]	; 12814 <__lxstat64@plt+0x19f0>
   126d4:	movne	r3, r2
   126d8:	mov	r1, r0
   126dc:	mov	r2, r4
   126e0:	mov	r0, #1
   126e4:	bl	10d7c <__printf_chk@plt>
   126e8:	b	12414 <__lxstat64@plt+0x15f0>
   126ec:	mov	r0, r4
   126f0:	bl	10c5c <dcgettext@plt>
   126f4:	ldr	r3, [pc, #256]	; 127fc <__lxstat64@plt+0x19d8>
   126f8:	ldr	r2, [pc, #256]	; 12800 <__lxstat64@plt+0x19dc>
   126fc:	mov	r1, r0
   12700:	mov	r0, #1
   12704:	bl	10d7c <__printf_chk@plt>
   12708:	mov	r1, r4
   1270c:	mov	r0, #5
   12710:	bl	10db8 <setlocale@plt>
   12714:	cmp	r0, #0
   12718:	beq	12730 <__lxstat64@plt+0x190c>
   1271c:	mov	r2, #3
   12720:	ldr	r1, [pc, #220]	; 12804 <__lxstat64@plt+0x19e0>
   12724:	bl	10e0c <strncmp@plt>
   12728:	cmp	r0, #0
   1272c:	bne	12774 <__lxstat64@plt+0x1950>
   12730:	mov	r2, #5
   12734:	ldr	r1, [pc, #204]	; 12808 <__lxstat64@plt+0x19e4>
   12738:	mov	r0, #0
   1273c:	bl	10c5c <dcgettext@plt>
   12740:	ldr	r3, [pc, #172]	; 127f4 <__lxstat64@plt+0x19d0>
   12744:	ldr	r2, [pc, #176]	; 127fc <__lxstat64@plt+0x19d8>
   12748:	mov	r4, r3
   1274c:	mov	r1, r0
   12750:	mov	r0, #1
   12754:	bl	10d7c <__printf_chk@plt>
   12758:	ldr	r1, [pc, #172]	; 1280c <__lxstat64@plt+0x19e8>
   1275c:	mov	r2, #5
   12760:	mov	r0, #0
   12764:	bl	10c5c <dcgettext@plt>
   12768:	ldr	r3, [pc, #164]	; 12814 <__lxstat64@plt+0x19f0>
   1276c:	mov	r1, r0
   12770:	b	126dc <__lxstat64@plt+0x18b8>
   12774:	ldr	r7, [pc, #120]	; 127f4 <__lxstat64@plt+0x19d0>
   12778:	mov	r4, r7
   1277c:	mov	r2, #5
   12780:	ldr	r1, [pc, #144]	; 12818 <__lxstat64@plt+0x19f4>
   12784:	mov	r0, #0
   12788:	bl	10c5c <dcgettext@plt>
   1278c:	ldr	r1, [r6]
   12790:	bl	10be4 <fputs_unlocked@plt>
   12794:	b	12694 <__lxstat64@plt+0x1870>
   12798:	andeq	r8, r2, r0, lsr r1
   1279c:	andeq	r5, r1, r8, asr #30
   127a0:	andeq	r8, r2, r0, asr r1
   127a4:	andeq	r8, r2, r4, lsr r1
   127a8:	andeq	r5, r1, r0, ror pc
   127ac:	andeq	r5, r1, r8, asr #31
   127b0:	strdeq	r5, [r1], -ip
   127b4:	andeq	r6, r1, ip, lsr #32
   127b8:	andeq	r6, r1, r4, rrx
   127bc:	ldrdeq	r6, [r1], -ip
   127c0:	ldrdeq	r6, [r1], -r8
   127c4:	ldrdeq	r6, [r1], -r4
   127c8:	andeq	r6, r1, ip, asr #8
   127cc:	andeq	r6, r1, ip, lsl #10
   127d0:			; <UNDEFINED> instruction: 0x000165b8
   127d4:	andeq	r6, r1, ip, asr #13
   127d8:	andeq	r6, r1, r4, lsr r8
   127dc:	andeq	r6, r1, r4, asr r9
   127e0:	andeq	r6, r1, r8, lsr sl
   127e4:			; <UNDEFINED> instruction: 0x00016ab4
   127e8:	andeq	r6, r1, ip, lsr fp
   127ec:	strdeq	r6, [r1], -ip
   127f0:	ldrdeq	r5, [r1], -r0
   127f4:	andeq	r5, r1, r0, asr #30
   127f8:	andeq	r6, r1, ip, lsl #24
   127fc:	andeq	r6, r1, r4, lsr #24
   12800:	andeq	r6, r1, ip, asr #24
   12804:	andeq	r6, r1, ip, asr ip
   12808:	andeq	r6, r1, r8, lsr #25
   1280c:	andeq	r6, r1, r4, asr #25
   12810:	strdeq	r5, [r1], -r8
   12814:	andeq	r6, r1, r8, lsr #26
   12818:	andeq	r6, r1, r0, ror #24
   1281c:	ldr	r3, [pc, #4]	; 12828 <__lxstat64@plt+0x1a04>
   12820:	str	r0, [r3]
   12824:	bx	lr
   12828:	andeq	r8, r2, r8, asr #2
   1282c:	ldr	r3, [pc, #4]	; 12838 <__lxstat64@plt+0x1a14>
   12830:	strb	r0, [r3, #4]
   12834:	bx	lr
   12838:	andeq	r8, r2, r8, asr #2
   1283c:	ldr	r3, [pc, #192]	; 12904 <__lxstat64@plt+0x1ae0>
   12840:	push	{r4, r5, r6, lr}
   12844:	sub	sp, sp, #8
   12848:	ldr	r0, [r3]
   1284c:	bl	1534c <__lxstat64@plt+0x4528>
   12850:	cmp	r0, #0
   12854:	beq	12878 <__lxstat64@plt+0x1a54>
   12858:	ldr	r4, [pc, #168]	; 12908 <__lxstat64@plt+0x1ae4>
   1285c:	ldrb	r3, [r4, #4]
   12860:	cmp	r3, #0
   12864:	beq	12894 <__lxstat64@plt+0x1a70>
   12868:	bl	10d4c <__errno_location@plt>
   1286c:	ldr	r3, [r0]
   12870:	cmp	r3, #32
   12874:	bne	12894 <__lxstat64@plt+0x1a70>
   12878:	ldr	r3, [pc, #140]	; 1290c <__lxstat64@plt+0x1ae8>
   1287c:	ldr	r0, [r3]
   12880:	bl	1534c <__lxstat64@plt+0x4528>
   12884:	cmp	r0, #0
   12888:	bne	128dc <__lxstat64@plt+0x1ab8>
   1288c:	add	sp, sp, #8
   12890:	pop	{r4, r5, r6, pc}
   12894:	mov	r2, #5
   12898:	ldr	r1, [pc, #112]	; 12910 <__lxstat64@plt+0x1aec>
   1289c:	mov	r0, #0
   128a0:	bl	10c5c <dcgettext@plt>
   128a4:	ldr	r4, [r4]
   128a8:	cmp	r4, #0
   128ac:	mov	r5, r0
   128b0:	beq	128e8 <__lxstat64@plt+0x1ac4>
   128b4:	bl	10d4c <__errno_location@plt>
   128b8:	ldr	r6, [r0]
   128bc:	mov	r0, r4
   128c0:	bl	146b0 <__lxstat64@plt+0x388c>
   128c4:	mov	r1, r6
   128c8:	str	r5, [sp]
   128cc:	ldr	r2, [pc, #64]	; 12914 <__lxstat64@plt+0x1af0>
   128d0:	mov	r3, r0
   128d4:	mov	r0, #0
   128d8:	bl	10ce0 <error@plt>
   128dc:	ldr	r3, [pc, #52]	; 12918 <__lxstat64@plt+0x1af4>
   128e0:	ldr	r0, [r3]
   128e4:	bl	10c2c <_exit@plt>
   128e8:	bl	10d4c <__errno_location@plt>
   128ec:	mov	r3, r5
   128f0:	ldr	r2, [pc, #36]	; 1291c <__lxstat64@plt+0x1af8>
   128f4:	ldr	r1, [r0]
   128f8:	mov	r0, r4
   128fc:	bl	10ce0 <error@plt>
   12900:	b	128dc <__lxstat64@plt+0x1ab8>
   12904:	andeq	r8, r2, r4, lsr r1
   12908:	andeq	r8, r2, r8, asr #2
   1290c:	andeq	r8, r2, r0, lsr r1
   12910:	andeq	r6, r1, ip, lsl #27
   12914:	muleq	r1, r8, sp
   12918:	andeq	r8, r2, r0, ror #1
   1291c:	muleq	r1, ip, sp
   12920:	push	{r4, r5, r6, r8, r9, lr}
   12924:	mov	r4, r0
   12928:	mov	r5, r1
   1292c:	add	r6, r2, #20
   12930:	mov	r8, #10
   12934:	mov	r9, #0
   12938:	mov	r3, #0
   1293c:	strb	r3, [r2, #20]
   12940:	mov	r0, r4
   12944:	mov	r1, r5
   12948:	mov	r2, r8
   1294c:	mov	r3, r9
   12950:	bl	15bd4 <__lxstat64@plt+0x4db0>
   12954:	mov	r0, r4
   12958:	mov	r1, r5
   1295c:	mov	r3, r9
   12960:	add	r2, r2, #48	; 0x30
   12964:	strb	r2, [r6, #-1]!
   12968:	mov	r2, r8
   1296c:	bl	15bd4 <__lxstat64@plt+0x4db0>
   12970:	mov	r4, r0
   12974:	mov	r5, r1
   12978:	orrs	r3, r4, r5
   1297c:	bne	12940 <__lxstat64@plt+0x1b1c>
   12980:	mov	r0, r6
   12984:	pop	{r4, r5, r6, r8, r9, pc}
   12988:	push	{r4, r5, r6, lr}
   1298c:	subs	r4, r0, #0
   12990:	beq	12a04 <__lxstat64@plt+0x1be0>
   12994:	mov	r1, #47	; 0x2f
   12998:	bl	10dc4 <strrchr@plt>
   1299c:	subs	r5, r0, #0
   129a0:	beq	129f0 <__lxstat64@plt+0x1bcc>
   129a4:	add	r6, r5, #1
   129a8:	sub	r3, r6, r4
   129ac:	cmp	r3, #6
   129b0:	ble	129f0 <__lxstat64@plt+0x1bcc>
   129b4:	mov	r2, #7
   129b8:	ldr	r1, [pc, #96]	; 12a20 <__lxstat64@plt+0x1bfc>
   129bc:	sub	r0, r5, #6
   129c0:	bl	10e0c <strncmp@plt>
   129c4:	cmp	r0, #0
   129c8:	bne	129f0 <__lxstat64@plt+0x1bcc>
   129cc:	mov	r2, #3
   129d0:	ldr	r1, [pc, #76]	; 12a24 <__lxstat64@plt+0x1c00>
   129d4:	mov	r0, r6
   129d8:	bl	10e0c <strncmp@plt>
   129dc:	cmp	r0, #0
   129e0:	movne	r4, r6
   129e4:	ldreq	r3, [pc, #60]	; 12a28 <__lxstat64@plt+0x1c04>
   129e8:	addeq	r4, r5, #4
   129ec:	streq	r4, [r3]
   129f0:	ldr	r2, [pc, #52]	; 12a2c <__lxstat64@plt+0x1c08>
   129f4:	ldr	r3, [pc, #52]	; 12a30 <__lxstat64@plt+0x1c0c>
   129f8:	str	r4, [r2]
   129fc:	str	r4, [r3]
   12a00:	pop	{r4, r5, r6, pc}
   12a04:	ldr	r3, [pc, #40]	; 12a34 <__lxstat64@plt+0x1c10>
   12a08:	mov	r2, #55	; 0x37
   12a0c:	mov	r1, #1
   12a10:	ldr	r3, [r3]
   12a14:	ldr	r0, [pc, #28]	; 12a38 <__lxstat64@plt+0x1c14>
   12a18:	bl	10ca4 <fwrite@plt>
   12a1c:	bl	10e18 <abort@plt>
   12a20:	ldrdeq	r6, [r1], -r8
   12a24:	andeq	r6, r1, r0, ror #27
   12a28:	andeq	r8, r2, r8, lsr #2
   12a2c:	andeq	r8, r2, r0, asr r1
   12a30:	andeq	r8, r2, ip, lsr #2
   12a34:	andeq	r8, r2, r0, lsr r1
   12a38:	andeq	r6, r1, r0, lsr #27
   12a3c:	push	{r4, r5, r6, lr}
   12a40:	mov	r2, #48	; 0x30
   12a44:	mov	r4, r1
   12a48:	mov	r1, #0
   12a4c:	mov	r5, r0
   12a50:	bl	10d70 <memset@plt>
   12a54:	cmp	r4, #10
   12a58:	beq	12a68 <__lxstat64@plt+0x1c44>
   12a5c:	str	r4, [r5]
   12a60:	mov	r0, r5
   12a64:	pop	{r4, r5, r6, pc}
   12a68:	bl	10e18 <abort@plt>
   12a6c:	push	{r4, r5, r6, lr}
   12a70:	mov	r4, r0
   12a74:	mov	r5, r1
   12a78:	bl	155c0 <__lxstat64@plt+0x479c>
   12a7c:	ldrb	r3, [r0]
   12a80:	bic	r3, r3, #32
   12a84:	cmp	r3, #85	; 0x55
   12a88:	bne	12ae8 <__lxstat64@plt+0x1cc4>
   12a8c:	ldrb	r3, [r0, #1]
   12a90:	bic	r3, r3, #32
   12a94:	cmp	r3, #84	; 0x54
   12a98:	bne	12b24 <__lxstat64@plt+0x1d00>
   12a9c:	ldrb	r3, [r0, #2]
   12aa0:	bic	r3, r3, #32
   12aa4:	cmp	r3, #70	; 0x46
   12aa8:	bne	12b24 <__lxstat64@plt+0x1d00>
   12aac:	ldrb	r3, [r0, #3]
   12ab0:	cmp	r3, #45	; 0x2d
   12ab4:	bne	12b24 <__lxstat64@plt+0x1d00>
   12ab8:	ldrb	r3, [r0, #4]
   12abc:	cmp	r3, #56	; 0x38
   12ac0:	bne	12b24 <__lxstat64@plt+0x1d00>
   12ac4:	ldrb	r3, [r0, #5]
   12ac8:	cmp	r3, #0
   12acc:	bne	12b24 <__lxstat64@plt+0x1d00>
   12ad0:	ldrb	r2, [r4]
   12ad4:	ldr	r3, [pc, #152]	; 12b74 <__lxstat64@plt+0x1d50>
   12ad8:	ldr	r0, [pc, #152]	; 12b78 <__lxstat64@plt+0x1d54>
   12adc:	cmp	r2, #96	; 0x60
   12ae0:	movne	r0, r3
   12ae4:	pop	{r4, r5, r6, pc}
   12ae8:	cmp	r3, #71	; 0x47
   12aec:	bne	12b24 <__lxstat64@plt+0x1d00>
   12af0:	ldrb	r3, [r0, #1]
   12af4:	bic	r3, r3, #32
   12af8:	cmp	r3, #66	; 0x42
   12afc:	bne	12b24 <__lxstat64@plt+0x1d00>
   12b00:	ldrb	r3, [r0, #2]
   12b04:	cmp	r3, #49	; 0x31
   12b08:	bne	12b24 <__lxstat64@plt+0x1d00>
   12b0c:	ldrb	r3, [r0, #3]
   12b10:	cmp	r3, #56	; 0x38
   12b14:	bne	12b24 <__lxstat64@plt+0x1d00>
   12b18:	ldrb	r3, [r0, #4]
   12b1c:	cmp	r3, #48	; 0x30
   12b20:	beq	12b38 <__lxstat64@plt+0x1d14>
   12b24:	ldr	r3, [pc, #80]	; 12b7c <__lxstat64@plt+0x1d58>
   12b28:	cmp	r5, #9
   12b2c:	ldr	r0, [pc, #76]	; 12b80 <__lxstat64@plt+0x1d5c>
   12b30:	movne	r0, r3
   12b34:	pop	{r4, r5, r6, pc}
   12b38:	ldrb	r3, [r0, #5]
   12b3c:	cmp	r3, #51	; 0x33
   12b40:	bne	12b24 <__lxstat64@plt+0x1d00>
   12b44:	ldrb	r3, [r0, #6]
   12b48:	cmp	r3, #48	; 0x30
   12b4c:	bne	12b24 <__lxstat64@plt+0x1d00>
   12b50:	ldrb	r3, [r0, #7]
   12b54:	cmp	r3, #0
   12b58:	bne	12b24 <__lxstat64@plt+0x1d00>
   12b5c:	ldrb	r2, [r4]
   12b60:	ldr	r3, [pc, #28]	; 12b84 <__lxstat64@plt+0x1d60>
   12b64:	ldr	r0, [pc, #28]	; 12b88 <__lxstat64@plt+0x1d64>
   12b68:	cmp	r2, #96	; 0x60
   12b6c:	movne	r0, r3
   12b70:	pop	{r4, r5, r6, pc}
   12b74:	andeq	r6, r1, ip, lsr lr
   12b78:	andeq	r6, r1, r8, lsr lr
   12b7c:	andeq	r6, r1, ip, asr #28
   12b80:	andeq	r6, r1, r8, asr #28
   12b84:	andeq	r6, r1, r4, asr #28
   12b88:	andeq	r6, r1, r0, asr #28
   12b8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b90:	sub	sp, sp, #116	; 0x74
   12b94:	mov	sl, r0
   12b98:	str	r3, [sp, #24]
   12b9c:	mov	r3, #1
   12ba0:	mov	r8, r1
   12ba4:	str	r2, [sp, #56]	; 0x38
   12ba8:	str	r3, [sp, #36]	; 0x24
   12bac:	bl	10cbc <__ctype_get_mb_cur_max@plt>
   12bb0:	ldr	r3, [sp, #156]	; 0x9c
   12bb4:	mov	fp, r8
   12bb8:	mov	r2, #0
   12bbc:	lsr	r3, r3, #1
   12bc0:	and	r3, r3, #1
   12bc4:	str	r2, [sp, #68]	; 0x44
   12bc8:	str	r3, [sp, #28]
   12bcc:	str	r2, [sp, #40]	; 0x28
   12bd0:	str	r2, [sp, #44]	; 0x2c
   12bd4:	str	r2, [sp, #52]	; 0x34
   12bd8:	str	r2, [sp, #64]	; 0x40
   12bdc:	str	r2, [sp, #72]	; 0x48
   12be0:	str	sl, [sp, #32]
   12be4:	str	r0, [sp, #76]	; 0x4c
   12be8:	ldr	r3, [sp, #152]	; 0x98
   12bec:	cmp	r3, #10
   12bf0:	ldrls	pc, [pc, r3, lsl #2]
   12bf4:	b	13db4 <__lxstat64@plt+0x2f90>
   12bf8:	andeq	r2, r1, r4, lsr #24
   12bfc:	andeq	r2, r1, ip, lsl #30
   12c00:	andeq	r2, r1, r0, lsr pc
   12c04:	andeq	r2, r1, r4, asr pc
   12c08:	andeq	r3, r1, r0, lsl #1
   12c0c:	andeq	r3, r1, r4, asr r0
   12c10:	andeq	r3, r1, ip, lsr #32
   12c14:	andeq	r2, r1, r8, ror #30
   12c18:	andeq	r2, r1, r0, lsl #31
   12c1c:	andeq	r2, r1, r0, lsl #31
   12c20:	andeq	r2, r1, r0, lsl #31
   12c24:	mov	r3, #0
   12c28:	mov	r7, r3
   12c2c:	str	r3, [sp, #28]
   12c30:	ldr	r3, [sp, #44]	; 0x2c
   12c34:	mov	sl, #0
   12c38:	eor	r3, r3, #1
   12c3c:	str	r3, [sp, #60]	; 0x3c
   12c40:	ldr	r3, [sp, #24]
   12c44:	cmn	r3, #1
   12c48:	beq	131ac <__lxstat64@plt+0x2388>
   12c4c:	ldr	r3, [sp, #24]
   12c50:	subs	r5, r3, sl
   12c54:	movne	r5, #1
   12c58:	cmp	r5, #0
   12c5c:	beq	131c4 <__lxstat64@plt+0x23a0>
   12c60:	ldr	r3, [sp, #152]	; 0x98
   12c64:	ldr	r8, [sp, #44]	; 0x2c
   12c68:	cmp	r3, #2
   12c6c:	moveq	r8, #0
   12c70:	andne	r8, r8, #1
   12c74:	ldr	r3, [sp, #52]	; 0x34
   12c78:	adds	r9, r3, #0
   12c7c:	movne	r9, #1
   12c80:	ands	r6, r9, r8
   12c84:	beq	1362c <__lxstat64@plt+0x2808>
   12c88:	ldr	r2, [sp, #52]	; 0x34
   12c8c:	ldr	r1, [sp, #24]
   12c90:	cmp	r2, #1
   12c94:	mov	r3, r2
   12c98:	movls	r3, #0
   12c9c:	movhi	r3, #1
   12ca0:	cmn	r1, #1
   12ca4:	movne	r3, #0
   12ca8:	cmp	r3, #0
   12cac:	add	r4, sl, r2
   12cb0:	beq	12cc0 <__lxstat64@plt+0x1e9c>
   12cb4:	ldr	r0, [sp, #56]	; 0x38
   12cb8:	bl	10d40 <strlen@plt>
   12cbc:	str	r0, [sp, #24]
   12cc0:	ldr	r3, [sp, #24]
   12cc4:	cmp	r3, r4
   12cc8:	ldr	r3, [sp, #56]	; 0x38
   12ccc:	add	r3, r3, sl
   12cd0:	str	r3, [sp, #48]	; 0x30
   12cd4:	bcc	13638 <__lxstat64@plt+0x2814>
   12cd8:	mov	r0, r3
   12cdc:	ldr	r2, [sp, #52]	; 0x34
   12ce0:	ldr	r1, [sp, #64]	; 0x40
   12ce4:	bl	10c50 <memcmp@plt>
   12ce8:	cmp	r0, #0
   12cec:	bne	13638 <__lxstat64@plt+0x2814>
   12cf0:	ldr	r3, [sp, #28]
   12cf4:	cmp	r3, #0
   12cf8:	bne	13eb4 <__lxstat64@plt+0x3090>
   12cfc:	ldr	r3, [sp, #48]	; 0x30
   12d00:	ldrb	r4, [r3]
   12d04:	cmp	r4, #126	; 0x7e
   12d08:	ldrls	pc, [pc, r4, lsl #2]
   12d0c:	b	135cc <__lxstat64@plt+0x27a8>
   12d10:	strdeq	r3, [r1], -r0
   12d14:	andeq	r3, r1, ip, asr #11
   12d18:	andeq	r3, r1, ip, asr #11
   12d1c:	andeq	r3, r1, ip, asr #11
   12d20:	andeq	r3, r1, ip, asr #11
   12d24:	andeq	r3, r1, ip, asr #11
   12d28:	andeq	r3, r1, ip, asr #11
   12d2c:	ldrdeq	r3, [r1], -r4
   12d30:			; <UNDEFINED> instruction: 0x000133b8
   12d34:			; <UNDEFINED> instruction: 0x000135b4
   12d38:	andeq	r3, r1, r8, lsl r3
   12d3c:	strdeq	r3, [r1], -ip
   12d40:	muleq	r1, r0, r5
   12d44:	andeq	r3, r1, ip, ror #10
   12d48:	andeq	r3, r1, ip, asr #11
   12d4c:	andeq	r3, r1, ip, asr #11
   12d50:	andeq	r3, r1, ip, asr #11
   12d54:	andeq	r3, r1, ip, asr #11
   12d58:	andeq	r3, r1, ip, asr #11
   12d5c:	andeq	r3, r1, ip, asr #11
   12d60:	andeq	r3, r1, ip, asr #11
   12d64:	andeq	r3, r1, ip, asr #11
   12d68:	andeq	r3, r1, ip, asr #11
   12d6c:	andeq	r3, r1, ip, asr #11
   12d70:	andeq	r3, r1, ip, asr #11
   12d74:	andeq	r3, r1, ip, asr #11
   12d78:	andeq	r3, r1, ip, asr #11
   12d7c:	andeq	r3, r1, ip, asr #11
   12d80:	andeq	r3, r1, ip, asr #11
   12d84:	andeq	r3, r1, ip, asr #11
   12d88:	andeq	r3, r1, ip, asr #11
   12d8c:	andeq	r3, r1, ip, asr #11
   12d90:	andeq	r3, r1, ip, lsr #11
   12d94:	andeq	r3, r1, r0, ror #9
   12d98:	andeq	r3, r1, r0, ror #9
   12d9c:	strdeq	r3, [r1], -r0
   12da0:	andeq	r3, r1, r0, ror #9
   12da4:	andeq	r3, r1, r8, ror r5
   12da8:	andeq	r3, r1, r0, ror #9
   12dac:	andeq	r3, r1, ip, asr #10
   12db0:	andeq	r3, r1, r0, ror #9
   12db4:	andeq	r3, r1, r0, ror #9
   12db8:	andeq	r3, r1, r0, ror #9
   12dbc:	andeq	r3, r1, r8, ror r5
   12dc0:	andeq	r3, r1, r8, ror r5
   12dc4:	andeq	r3, r1, r8, ror r5
   12dc8:	andeq	r3, r1, r8, ror r5
   12dcc:	andeq	r3, r1, r8, ror r5
   12dd0:	andeq	r3, r1, r8, ror r5
   12dd4:	andeq	r3, r1, r8, ror r5
   12dd8:	andeq	r3, r1, r8, ror r5
   12ddc:	andeq	r3, r1, r8, ror r5
   12de0:	andeq	r3, r1, r8, ror r5
   12de4:	andeq	r3, r1, r8, ror r5
   12de8:	andeq	r3, r1, r8, ror r5
   12dec:	andeq	r3, r1, r8, ror r5
   12df0:	andeq	r3, r1, r8, ror r5
   12df4:	andeq	r3, r1, r8, ror r5
   12df8:	andeq	r3, r1, r8, ror r5
   12dfc:	andeq	r3, r1, r0, ror #9
   12e00:	andeq	r3, r1, r0, ror #9
   12e04:	andeq	r3, r1, r0, ror #9
   12e08:	andeq	r3, r1, r0, ror #9
   12e0c:	andeq	r3, r1, ip, lsl r5
   12e10:	andeq	r3, r1, ip, asr #11
   12e14:	andeq	r3, r1, r8, ror r5
   12e18:	andeq	r3, r1, r8, ror r5
   12e1c:	andeq	r3, r1, r8, ror r5
   12e20:	andeq	r3, r1, r8, ror r5
   12e24:	andeq	r3, r1, r8, ror r5
   12e28:	andeq	r3, r1, r8, ror r5
   12e2c:	andeq	r3, r1, r8, ror r5
   12e30:	andeq	r3, r1, r8, ror r5
   12e34:	andeq	r3, r1, r8, ror r5
   12e38:	andeq	r3, r1, r8, ror r5
   12e3c:	andeq	r3, r1, r8, ror r5
   12e40:	andeq	r3, r1, r8, ror r5
   12e44:	andeq	r3, r1, r8, ror r5
   12e48:	andeq	r3, r1, r8, ror r5
   12e4c:	andeq	r3, r1, r8, ror r5
   12e50:	andeq	r3, r1, r8, ror r5
   12e54:	andeq	r3, r1, r8, ror r5
   12e58:	andeq	r3, r1, r8, ror r5
   12e5c:	andeq	r3, r1, r8, ror r5
   12e60:	andeq	r3, r1, r8, ror r5
   12e64:	andeq	r3, r1, r8, ror r5
   12e68:	andeq	r3, r1, r8, ror r5
   12e6c:	andeq	r3, r1, r8, ror r5
   12e70:	andeq	r3, r1, r8, ror r5
   12e74:	andeq	r3, r1, r8, ror r5
   12e78:	andeq	r3, r1, r8, ror r5
   12e7c:	andeq	r3, r1, r0, ror #9
   12e80:	andeq	r3, r1, ip, lsr r2
   12e84:	andeq	r3, r1, r8, ror r5
   12e88:	andeq	r3, r1, r0, ror #9
   12e8c:	andeq	r3, r1, r8, ror r5
   12e90:	andeq	r3, r1, r0, ror #9
   12e94:	andeq	r3, r1, r8, ror r5
   12e98:	andeq	r3, r1, r8, ror r5
   12e9c:	andeq	r3, r1, r8, ror r5
   12ea0:	andeq	r3, r1, r8, ror r5
   12ea4:	andeq	r3, r1, r8, ror r5
   12ea8:	andeq	r3, r1, r8, ror r5
   12eac:	andeq	r3, r1, r8, ror r5
   12eb0:	andeq	r3, r1, r8, ror r5
   12eb4:	andeq	r3, r1, r8, ror r5
   12eb8:	andeq	r3, r1, r8, ror r5
   12ebc:	andeq	r3, r1, r8, ror r5
   12ec0:	andeq	r3, r1, r8, ror r5
   12ec4:	andeq	r3, r1, r8, ror r5
   12ec8:	andeq	r3, r1, r8, ror r5
   12ecc:	andeq	r3, r1, r8, ror r5
   12ed0:	andeq	r3, r1, r8, ror r5
   12ed4:	andeq	r3, r1, r8, ror r5
   12ed8:	andeq	r3, r1, r8, ror r5
   12edc:	andeq	r3, r1, r8, ror r5
   12ee0:	andeq	r3, r1, r8, ror r5
   12ee4:	andeq	r3, r1, r8, ror r5
   12ee8:	andeq	r3, r1, r8, ror r5
   12eec:	andeq	r3, r1, r8, ror r5
   12ef0:	andeq	r3, r1, r8, ror r5
   12ef4:	andeq	r3, r1, r8, ror r5
   12ef8:	andeq	r3, r1, r8, ror r5
   12efc:	ldrdeq	r3, [r1], -r0
   12f00:	andeq	r3, r1, r0, ror #9
   12f04:	ldrdeq	r3, [r1], -r0
   12f08:	strdeq	r3, [r1], -r0
   12f0c:	mov	r3, #1
   12f10:	str	r3, [sp, #28]
   12f14:	str	r3, [sp, #52]	; 0x34
   12f18:	ldr	r3, [pc, #4000]	; 13ec0 <__lxstat64@plt+0x309c>
   12f1c:	mov	r7, #0
   12f20:	str	r3, [sp, #64]	; 0x40
   12f24:	mov	r3, #2
   12f28:	str	r3, [sp, #152]	; 0x98
   12f2c:	b	12c30 <__lxstat64@plt+0x1e0c>
   12f30:	ldr	r3, [sp, #28]
   12f34:	cmp	r3, #0
   12f38:	beq	13094 <__lxstat64@plt+0x2270>
   12f3c:	mov	r3, #1
   12f40:	str	r3, [sp, #52]	; 0x34
   12f44:	ldr	r3, [pc, #3956]	; 13ec0 <__lxstat64@plt+0x309c>
   12f48:	mov	r7, #0
   12f4c:	str	r3, [sp, #64]	; 0x40
   12f50:	b	12c30 <__lxstat64@plt+0x1e0c>
   12f54:	mov	r3, #1
   12f58:	str	r3, [sp, #44]	; 0x2c
   12f5c:	str	r3, [sp, #52]	; 0x34
   12f60:	str	r3, [sp, #28]
   12f64:	b	12f18 <__lxstat64@plt+0x20f4>
   12f68:	mov	r3, #0
   12f6c:	str	r3, [sp, #28]
   12f70:	mov	r3, #1
   12f74:	str	r3, [sp, #44]	; 0x2c
   12f78:	mov	r7, #0
   12f7c:	b	12c30 <__lxstat64@plt+0x1e0c>
   12f80:	ldr	r3, [sp, #152]	; 0x98
   12f84:	cmp	r3, #10
   12f88:	beq	12fcc <__lxstat64@plt+0x21a8>
   12f8c:	mov	r2, #5
   12f90:	ldr	r1, [pc, #3884]	; 13ec4 <__lxstat64@plt+0x30a0>
   12f94:	mov	r0, #0
   12f98:	bl	10c5c <dcgettext@plt>
   12f9c:	ldr	r2, [pc, #3872]	; 13ec4 <__lxstat64@plt+0x30a0>
   12fa0:	cmp	r0, r2
   12fa4:	str	r0, [sp, #164]	; 0xa4
   12fa8:	beq	13fb0 <__lxstat64@plt+0x318c>
   12fac:	mov	r2, #5
   12fb0:	ldr	r1, [pc, #3848]	; 13ec0 <__lxstat64@plt+0x309c>
   12fb4:	mov	r0, #0
   12fb8:	bl	10c5c <dcgettext@plt>
   12fbc:	ldr	r2, [pc, #3836]	; 13ec0 <__lxstat64@plt+0x309c>
   12fc0:	cmp	r0, r2
   12fc4:	str	r0, [sp, #168]	; 0xa8
   12fc8:	beq	13fa0 <__lxstat64@plt+0x317c>
   12fcc:	ldr	r7, [sp, #28]
   12fd0:	cmp	r7, #0
   12fd4:	movne	r7, #0
   12fd8:	bne	1300c <__lxstat64@plt+0x21e8>
   12fdc:	ldr	r3, [sp, #164]	; 0xa4
   12fe0:	ldrb	r3, [r3]
   12fe4:	cmp	r3, #0
   12fe8:	beq	13fc0 <__lxstat64@plt+0x319c>
   12fec:	ldr	r2, [sp, #164]	; 0xa4
   12ff0:	ldr	r1, [sp, #32]
   12ff4:	cmp	fp, r7
   12ff8:	strbhi	r3, [r1, r7]
   12ffc:	ldrb	r3, [r2, #1]!
   13000:	add	r7, r7, #1
   13004:	cmp	r3, #0
   13008:	bne	12ff4 <__lxstat64@plt+0x21d0>
   1300c:	ldr	r0, [sp, #168]	; 0xa8
   13010:	bl	10d40 <strlen@plt>
   13014:	ldr	r3, [sp, #168]	; 0xa8
   13018:	str	r3, [sp, #64]	; 0x40
   1301c:	mov	r3, #1
   13020:	str	r3, [sp, #44]	; 0x2c
   13024:	str	r0, [sp, #52]	; 0x34
   13028:	b	12c30 <__lxstat64@plt+0x1e0c>
   1302c:	mov	r3, #1
   13030:	str	r3, [sp, #44]	; 0x2c
   13034:	str	r3, [sp, #52]	; 0x34
   13038:	str	r3, [sp, #28]
   1303c:	ldr	r3, [pc, #3716]	; 13ec8 <__lxstat64@plt+0x30a4>
   13040:	mov	r7, #0
   13044:	str	r3, [sp, #64]	; 0x40
   13048:	mov	r3, #5
   1304c:	str	r3, [sp, #152]	; 0x98
   13050:	b	12c30 <__lxstat64@plt+0x1e0c>
   13054:	ldr	r3, [sp, #28]
   13058:	cmp	r3, #0
   1305c:	beq	13d5c <__lxstat64@plt+0x2f38>
   13060:	ldr	r3, [sp, #28]
   13064:	mov	r7, #0
   13068:	str	r3, [sp, #44]	; 0x2c
   1306c:	mov	r3, #1
   13070:	str	r3, [sp, #52]	; 0x34
   13074:	ldr	r3, [pc, #3660]	; 13ec8 <__lxstat64@plt+0x30a4>
   13078:	str	r3, [sp, #64]	; 0x40
   1307c:	b	12c30 <__lxstat64@plt+0x1e0c>
   13080:	ldr	r3, [sp, #28]
   13084:	cmp	r3, #0
   13088:	mov	r3, #1
   1308c:	streq	r3, [sp, #44]	; 0x2c
   13090:	bne	12f14 <__lxstat64@plt+0x20f0>
   13094:	cmp	fp, #0
   13098:	beq	13d8c <__lxstat64@plt+0x2f68>
   1309c:	ldr	r3, [sp, #32]
   130a0:	mov	r2, #39	; 0x27
   130a4:	mov	r7, #1
   130a8:	strb	r2, [r3]
   130ac:	mov	r3, #0
   130b0:	str	r3, [sp, #28]
   130b4:	mov	r3, #1
   130b8:	str	r3, [sp, #52]	; 0x34
   130bc:	ldr	r3, [pc, #3580]	; 13ec0 <__lxstat64@plt+0x309c>
   130c0:	str	r3, [sp, #64]	; 0x40
   130c4:	mov	r3, #2
   130c8:	str	r3, [sp, #152]	; 0x98
   130cc:	b	12c30 <__lxstat64@plt+0x1e0c>
   130d0:	ldr	r3, [sp, #24]
   130d4:	cmn	r3, #1
   130d8:	beq	13cf0 <__lxstat64@plt+0x2ecc>
   130dc:	ldr	r3, [sp, #24]
   130e0:	subs	r3, r3, #1
   130e4:	movne	r3, #1
   130e8:	cmp	r3, #0
   130ec:	bne	130f8 <__lxstat64@plt+0x22d4>
   130f0:	cmp	sl, #0
   130f4:	beq	134e4 <__lxstat64@plt+0x26c0>
   130f8:	ldr	r3, [sp, #152]	; 0x98
   130fc:	mov	r5, #0
   13100:	sub	r2, r3, #2
   13104:	mov	r8, r5
   13108:	clz	r2, r2
   1310c:	lsr	r2, r2, #5
   13110:	ldr	r3, [sp, #60]	; 0x3c
   13114:	ldr	r1, [sp, #28]
   13118:	orr	r3, r2, r3
   1311c:	eor	r3, r3, #1
   13120:	orr	r3, r1, r3
   13124:	tst	r3, #255	; 0xff
   13128:	bne	13854 <__lxstat64@plt+0x2a30>
   1312c:	cmp	r6, #0
   13130:	bne	13280 <__lxstat64@plt+0x245c>
   13134:	ldr	r3, [sp, #40]	; 0x28
   13138:	eor	r8, r8, #1
   1313c:	and	r8, r8, r3
   13140:	add	sl, sl, #1
   13144:	uxtb	r6, r8
   13148:	cmp	r6, #0
   1314c:	beq	13180 <__lxstat64@plt+0x235c>
   13150:	cmp	fp, r7
   13154:	movhi	r2, #39	; 0x27
   13158:	ldrhi	r3, [sp, #32]
   1315c:	strbhi	r2, [r3, r7]
   13160:	add	r3, r7, #1
   13164:	cmp	fp, r3
   13168:	movhi	r1, #39	; 0x27
   1316c:	ldrhi	r2, [sp, #32]
   13170:	add	r7, r7, #2
   13174:	strbhi	r1, [r2, r3]
   13178:	mov	r3, #0
   1317c:	str	r3, [sp, #40]	; 0x28
   13180:	cmp	r7, fp
   13184:	ldrcc	r3, [sp, #32]
   13188:	strbcc	r4, [r3, r7]
   1318c:	ldr	r3, [sp, #36]	; 0x24
   13190:	cmp	r5, #0
   13194:	moveq	r3, #0
   13198:	str	r3, [sp, #36]	; 0x24
   1319c:	ldr	r3, [sp, #24]
   131a0:	add	r7, r7, #1
   131a4:	cmn	r3, #1
   131a8:	bne	12c4c <__lxstat64@plt+0x1e28>
   131ac:	ldr	r3, [sp, #56]	; 0x38
   131b0:	ldrb	r5, [r3, sl]
   131b4:	adds	r5, r5, #0
   131b8:	movne	r5, #1
   131bc:	cmp	r5, #0
   131c0:	bne	12c60 <__lxstat64@plt+0x1e3c>
   131c4:	ldr	r3, [sp, #152]	; 0x98
   131c8:	ldr	r1, [sp, #28]
   131cc:	sub	r3, r3, #2
   131d0:	clz	r3, r3
   131d4:	lsr	r3, r3, #5
   131d8:	and	r9, r1, r3
   131dc:	cmp	r7, #0
   131e0:	movne	r2, #0
   131e4:	andeq	r2, r9, #1
   131e8:	cmp	r2, #0
   131ec:	bne	13bc8 <__lxstat64@plt+0x2da4>
   131f0:	eor	r2, r1, #1
   131f4:	ands	r3, r3, r2
   131f8:	beq	14084 <__lxstat64@plt+0x3260>
   131fc:	ldr	r2, [sp, #68]	; 0x44
   13200:	cmp	r2, #0
   13204:	beq	14070 <__lxstat64@plt+0x324c>
   13208:	ldr	r3, [sp, #36]	; 0x24
   1320c:	cmp	r3, #0
   13210:	bne	14028 <__lxstat64@plt+0x3204>
   13214:	ldr	r2, [sp, #72]	; 0x48
   13218:	clz	r3, fp
   1321c:	cmp	r2, #0
   13220:	lsr	r3, r3, #5
   13224:	moveq	r3, #0
   13228:	cmp	r3, #0
   1322c:	beq	13fc8 <__lxstat64@plt+0x31a4>
   13230:	str	r3, [sp, #68]	; 0x44
   13234:	ldr	fp, [sp, #72]	; 0x48
   13238:	b	12be8 <__lxstat64@plt+0x1dc4>
   1323c:	ldr	r3, [sp, #152]	; 0x98
   13240:	cmp	r3, #2
   13244:	beq	13898 <__lxstat64@plt+0x2a74>
   13248:	ldr	r3, [sp, #44]	; 0x2c
   1324c:	ldr	r2, [sp, #28]
   13250:	and	r2, r3, r2
   13254:	ands	r2, r9, r2
   13258:	bne	138a4 <__lxstat64@plt+0x2a80>
   1325c:	mov	r4, #92	; 0x5c
   13260:	mov	r3, r4
   13264:	ldr	r1, [sp, #44]	; 0x2c
   13268:	cmp	r1, #0
   1326c:	moveq	r5, #0
   13270:	moveq	r8, r1
   13274:	beq	13110 <__lxstat64@plt+0x22ec>
   13278:	mov	r4, r3
   1327c:	mov	r5, #0
   13280:	ldr	r3, [sp, #28]
   13284:	cmp	r3, #0
   13288:	bne	1388c <__lxstat64@plt+0x2a68>
   1328c:	ldr	r3, [sp, #40]	; 0x28
   13290:	eor	r9, r3, #1
   13294:	and	r9, r9, r2
   13298:	ands	r9, r9, #255	; 0xff
   1329c:	beq	132e0 <__lxstat64@plt+0x24bc>
   132a0:	cmp	fp, r7
   132a4:	movhi	r2, #39	; 0x27
   132a8:	ldrhi	r3, [sp, #32]
   132ac:	str	r9, [sp, #40]	; 0x28
   132b0:	strbhi	r2, [r3, r7]
   132b4:	add	r3, r7, #1
   132b8:	cmp	fp, r3
   132bc:	movhi	r1, #36	; 0x24
   132c0:	ldrhi	r2, [sp, #32]
   132c4:	strbhi	r1, [r2, r3]
   132c8:	add	r3, r7, #2
   132cc:	cmp	fp, r3
   132d0:	add	r7, r7, #3
   132d4:	ldrhi	r2, [sp, #32]
   132d8:	movhi	r1, #39	; 0x27
   132dc:	strbhi	r1, [r2, r3]
   132e0:	cmp	fp, r7
   132e4:	movhi	r2, #92	; 0x5c
   132e8:	ldrhi	r3, [sp, #32]
   132ec:	add	sl, sl, #1
   132f0:	strbhi	r2, [r3, r7]
   132f4:	add	r7, r7, #1
   132f8:	b	13180 <__lxstat64@plt+0x235c>
   132fc:	ldr	r3, [sp, #152]	; 0x98
   13300:	mov	r4, #11
   13304:	sub	r2, r3, #2
   13308:	mov	r3, #118	; 0x76
   1330c:	clz	r2, r2
   13310:	lsr	r2, r2, #5
   13314:	b	13264 <__lxstat64@plt+0x2440>
   13318:	mov	r4, #10
   1331c:	mov	r3, #110	; 0x6e
   13320:	ldr	r2, [sp, #152]	; 0x98
   13324:	ldr	r1, [sp, #28]
   13328:	sub	r2, r2, #2
   1332c:	clz	r2, r2
   13330:	lsr	r2, r2, #5
   13334:	ands	r1, r1, r2
   13338:	beq	13264 <__lxstat64@plt+0x2440>
   1333c:	ldr	sl, [sp, #32]
   13340:	mov	r8, fp
   13344:	mov	r2, r1
   13348:	mov	r3, #2
   1334c:	str	r3, [sp, #152]	; 0x98
   13350:	ldr	r9, [sp, #44]	; 0x2c
   13354:	ldr	r3, [sp, #152]	; 0x98
   13358:	and	r9, r9, r2
   1335c:	tst	r9, #255	; 0xff
   13360:	movne	r3, #4
   13364:	str	r3, [sp, #152]	; 0x98
   13368:	ldr	r3, [sp, #156]	; 0x9c
   1336c:	mov	ip, #0
   13370:	bic	r3, r3, #2
   13374:	str	r3, [sp, #4]
   13378:	ldr	r3, [sp, #168]	; 0xa8
   1337c:	ldr	r2, [sp, #56]	; 0x38
   13380:	str	r3, [sp, #16]
   13384:	ldr	r3, [sp, #164]	; 0xa4
   13388:	mov	r1, r8
   1338c:	str	r3, [sp, #12]
   13390:	ldr	r3, [sp, #152]	; 0x98
   13394:	mov	r0, sl
   13398:	str	r3, [sp]
   1339c:	str	ip, [sp, #8]
   133a0:	ldr	r3, [sp, #24]
   133a4:	bl	12b8c <__lxstat64@plt+0x1d68>
   133a8:	mov	fp, r0
   133ac:	mov	r0, fp
   133b0:	add	sp, sp, #116	; 0x74
   133b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   133b8:	ldr	r3, [sp, #152]	; 0x98
   133bc:	mov	r4, #8
   133c0:	sub	r2, r3, #2
   133c4:	mov	r3, #98	; 0x62
   133c8:	clz	r2, r2
   133cc:	lsr	r2, r2, #5
   133d0:	b	13264 <__lxstat64@plt+0x2440>
   133d4:	ldr	r3, [sp, #152]	; 0x98
   133d8:	mov	r4, #7
   133dc:	sub	r2, r3, #2
   133e0:	mov	r3, #97	; 0x61
   133e4:	clz	r2, r2
   133e8:	lsr	r2, r2, #5
   133ec:	b	13264 <__lxstat64@plt+0x2440>
   133f0:	ldr	r3, [sp, #44]	; 0x2c
   133f4:	cmp	r3, #0
   133f8:	beq	13bdc <__lxstat64@plt+0x2db8>
   133fc:	ldr	r3, [sp, #28]
   13400:	cmp	r3, #0
   13404:	bne	13eb4 <__lxstat64@plt+0x3090>
   13408:	ldr	r3, [sp, #152]	; 0x98
   1340c:	sub	r2, r3, #2
   13410:	ldr	r3, [sp, #40]	; 0x28
   13414:	clz	r2, r2
   13418:	eor	r3, r3, #1
   1341c:	lsr	r2, r2, #5
   13420:	ands	r3, r2, r3
   13424:	moveq	r1, r7
   13428:	beq	1346c <__lxstat64@plt+0x2648>
   1342c:	cmp	fp, r7
   13430:	movhi	r0, #39	; 0x27
   13434:	ldrhi	r1, [sp, #32]
   13438:	str	r3, [sp, #40]	; 0x28
   1343c:	strbhi	r0, [r1, r7]
   13440:	add	r1, r7, #1
   13444:	cmp	fp, r1
   13448:	movhi	ip, #36	; 0x24
   1344c:	ldrhi	r0, [sp, #32]
   13450:	strbhi	ip, [r0, r1]
   13454:	add	r1, r7, #2
   13458:	cmp	fp, r1
   1345c:	movhi	ip, #39	; 0x27
   13460:	ldrhi	r0, [sp, #32]
   13464:	strbhi	ip, [r0, r1]
   13468:	add	r1, r7, #3
   1346c:	cmp	fp, r1
   13470:	movhi	r0, #92	; 0x5c
   13474:	ldrhi	r3, [sp, #32]
   13478:	add	r7, r1, #1
   1347c:	strbhi	r0, [r3, r1]
   13480:	cmp	r8, #0
   13484:	beq	13dc8 <__lxstat64@plt+0x2fa4>
   13488:	ldr	r0, [sp, #24]
   1348c:	add	r3, sl, #1
   13490:	cmp	r3, r0
   13494:	bcs	13d04 <__lxstat64@plt+0x2ee0>
   13498:	ldr	r0, [sp, #56]	; 0x38
   1349c:	ldrb	r3, [r0, r3]
   134a0:	sub	r3, r3, #48	; 0x30
   134a4:	cmp	r3, #9
   134a8:	bhi	13d04 <__lxstat64@plt+0x2ee0>
   134ac:	cmp	fp, r7
   134b0:	movhi	r3, #48	; 0x30
   134b4:	ldrhi	r0, [sp, #32]
   134b8:	ldr	r5, [sp, #28]
   134bc:	mov	r4, #48	; 0x30
   134c0:	strbhi	r3, [r0, r7]
   134c4:	add	r3, r1, #2
   134c8:	cmp	fp, r3
   134cc:	movhi	r0, #48	; 0x30
   134d0:	ldrhi	ip, [sp, #32]
   134d4:	add	r7, r1, #3
   134d8:	strbhi	r0, [ip, r3]
   134dc:	b	13110 <__lxstat64@plt+0x22ec>
   134e0:	mov	r5, #0
   134e4:	ldr	r3, [sp, #152]	; 0x98
   134e8:	sub	r2, r3, #2
   134ec:	ldr	r3, [sp, #28]
   134f0:	clz	r2, r2
   134f4:	lsr	r2, r2, #5
   134f8:	ands	r8, r3, r2
   134fc:	beq	13110 <__lxstat64@plt+0x22ec>
   13500:	mov	r3, r8
   13504:	mov	r2, r3
   13508:	mov	r3, #2
   1350c:	ldr	sl, [sp, #32]
   13510:	mov	r8, fp
   13514:	str	r3, [sp, #152]	; 0x98
   13518:	b	13350 <__lxstat64@plt+0x252c>
   1351c:	ldr	r3, [sp, #152]	; 0x98
   13520:	cmp	r3, #2
   13524:	beq	13c48 <__lxstat64@plt+0x2e24>
   13528:	cmp	r3, #5
   1352c:	beq	13c08 <__lxstat64@plt+0x2de4>
   13530:	mov	r5, #0
   13534:	sub	r2, r3, #2
   13538:	mov	r8, r5
   1353c:	clz	r2, r2
   13540:	mov	r4, #63	; 0x3f
   13544:	lsr	r2, r2, #5
   13548:	b	13110 <__lxstat64@plt+0x22ec>
   1354c:	ldr	r3, [sp, #152]	; 0x98
   13550:	cmp	r3, #2
   13554:	beq	13c68 <__lxstat64@plt+0x2e44>
   13558:	mov	r2, #0
   1355c:	str	r5, [sp, #68]	; 0x44
   13560:	mov	r8, r2
   13564:	mov	r4, #39	; 0x27
   13568:	b	13110 <__lxstat64@plt+0x22ec>
   1356c:	mov	r4, #13
   13570:	mov	r3, #114	; 0x72
   13574:	b	13320 <__lxstat64@plt+0x24fc>
   13578:	ldr	r3, [sp, #152]	; 0x98
   1357c:	mov	r8, #0
   13580:	sub	r2, r3, #2
   13584:	clz	r2, r2
   13588:	lsr	r2, r2, #5
   1358c:	b	13110 <__lxstat64@plt+0x22ec>
   13590:	ldr	r3, [sp, #152]	; 0x98
   13594:	mov	r4, #12
   13598:	sub	r2, r3, #2
   1359c:	mov	r3, #102	; 0x66
   135a0:	clz	r2, r2
   135a4:	lsr	r2, r2, #5
   135a8:	b	13264 <__lxstat64@plt+0x2440>
   135ac:	mov	r5, r6
   135b0:	b	134e4 <__lxstat64@plt+0x26c0>
   135b4:	ldr	r3, [sp, #152]	; 0x98
   135b8:	sub	r2, r3, #2
   135bc:	mov	r3, #116	; 0x74
   135c0:	clz	r2, r2
   135c4:	lsr	r2, r2, #5
   135c8:	b	13264 <__lxstat64@plt+0x2440>
   135cc:	ldr	r8, [sp, #76]	; 0x4c
   135d0:	cmp	r8, #1
   135d4:	bne	13a84 <__lxstat64@plt+0x2c60>
   135d8:	bl	10d28 <__ctype_b_loc@plt>
   135dc:	sxth	r3, r4
   135e0:	mov	ip, r8
   135e4:	lsl	r3, r3, #1
   135e8:	ldr	r2, [r0]
   135ec:	ldrh	r3, [r2, r3]
   135f0:	and	r3, r3, #16384	; 0x4000
   135f4:	cmp	r3, #0
   135f8:	movne	r5, #1
   135fc:	moveq	r5, #0
   13600:	moveq	r3, #1
   13604:	movne	r3, #0
   13608:	ldr	r2, [sp, #44]	; 0x2c
   1360c:	and	r3, r3, r2
   13610:	ands	r8, r3, #255	; 0xff
   13614:	bne	13918 <__lxstat64@plt+0x2af4>
   13618:	ldr	r3, [sp, #152]	; 0x98
   1361c:	sub	r2, r3, #2
   13620:	clz	r2, r2
   13624:	lsr	r2, r2, #5
   13628:	b	13110 <__lxstat64@plt+0x22ec>
   1362c:	ldr	r3, [sp, #56]	; 0x38
   13630:	add	r3, r3, sl
   13634:	str	r3, [sp, #48]	; 0x30
   13638:	ldr	r3, [sp, #48]	; 0x30
   1363c:	mov	r6, #0
   13640:	ldrb	r4, [r3]
   13644:	cmp	r4, #126	; 0x7e
   13648:	ldrls	pc, [pc, r4, lsl #2]
   1364c:	b	135cc <__lxstat64@plt+0x27a8>
   13650:	strdeq	r3, [r1], -r0
   13654:	andeq	r3, r1, ip, asr #11
   13658:	andeq	r3, r1, ip, asr #11
   1365c:	andeq	r3, r1, ip, asr #11
   13660:	andeq	r3, r1, ip, asr #11
   13664:	andeq	r3, r1, ip, asr #11
   13668:	andeq	r3, r1, ip, asr #11
   1366c:	ldrdeq	r3, [r1], -r4
   13670:			; <UNDEFINED> instruction: 0x000133b8
   13674:	andeq	r3, r1, ip, asr #16
   13678:	andeq	r3, r1, r8, lsl r3
   1367c:	strdeq	r3, [r1], -ip
   13680:	muleq	r1, r0, r5
   13684:	andeq	r3, r1, ip, ror #10
   13688:	andeq	r3, r1, ip, asr #11
   1368c:	andeq	r3, r1, ip, asr #11
   13690:	andeq	r3, r1, ip, asr #11
   13694:	andeq	r3, r1, ip, asr #11
   13698:	andeq	r3, r1, ip, asr #11
   1369c:	andeq	r3, r1, ip, asr #11
   136a0:	andeq	r3, r1, ip, asr #11
   136a4:	andeq	r3, r1, ip, asr #11
   136a8:	andeq	r3, r1, ip, asr #11
   136ac:	andeq	r3, r1, ip, asr #11
   136b0:	andeq	r3, r1, ip, asr #11
   136b4:	andeq	r3, r1, ip, asr #11
   136b8:	andeq	r3, r1, ip, asr #11
   136bc:	andeq	r3, r1, ip, asr #11
   136c0:	andeq	r3, r1, ip, asr #11
   136c4:	andeq	r3, r1, ip, asr #11
   136c8:	andeq	r3, r1, ip, asr #11
   136cc:	andeq	r3, r1, ip, asr #11
   136d0:	andeq	r3, r1, r4, ror #9
   136d4:	andeq	r3, r1, r0, ror #9
   136d8:	andeq	r3, r1, r0, ror #9
   136dc:	strdeq	r3, [r1], -r0
   136e0:	andeq	r3, r1, r0, ror #9
   136e4:	andeq	r3, r1, r8, ror r5
   136e8:	andeq	r3, r1, r0, ror #9
   136ec:	andeq	r3, r1, ip, asr #10
   136f0:	andeq	r3, r1, r0, ror #9
   136f4:	andeq	r3, r1, r0, ror #9
   136f8:	andeq	r3, r1, r0, ror #9
   136fc:	andeq	r3, r1, r8, ror r5
   13700:	andeq	r3, r1, r8, ror r5
   13704:	andeq	r3, r1, r8, ror r5
   13708:	andeq	r3, r1, r8, ror r5
   1370c:	andeq	r3, r1, r8, ror r5
   13710:	andeq	r3, r1, r8, ror r5
   13714:	andeq	r3, r1, r8, ror r5
   13718:	andeq	r3, r1, r8, ror r5
   1371c:	andeq	r3, r1, r8, ror r5
   13720:	andeq	r3, r1, r8, ror r5
   13724:	andeq	r3, r1, r8, ror r5
   13728:	andeq	r3, r1, r8, ror r5
   1372c:	andeq	r3, r1, r8, ror r5
   13730:	andeq	r3, r1, r8, ror r5
   13734:	andeq	r3, r1, r8, ror r5
   13738:	andeq	r3, r1, r8, ror r5
   1373c:	andeq	r3, r1, r0, ror #9
   13740:	andeq	r3, r1, r0, ror #9
   13744:	andeq	r3, r1, r0, ror #9
   13748:	andeq	r3, r1, r0, ror #9
   1374c:	andeq	r3, r1, ip, lsl r5
   13750:	andeq	r3, r1, ip, asr #11
   13754:	andeq	r3, r1, r8, ror r5
   13758:	andeq	r3, r1, r8, ror r5
   1375c:	andeq	r3, r1, r8, ror r5
   13760:	andeq	r3, r1, r8, ror r5
   13764:	andeq	r3, r1, r8, ror r5
   13768:	andeq	r3, r1, r8, ror r5
   1376c:	andeq	r3, r1, r8, ror r5
   13770:	andeq	r3, r1, r8, ror r5
   13774:	andeq	r3, r1, r8, ror r5
   13778:	andeq	r3, r1, r8, ror r5
   1377c:	andeq	r3, r1, r8, ror r5
   13780:	andeq	r3, r1, r8, ror r5
   13784:	andeq	r3, r1, r8, ror r5
   13788:	andeq	r3, r1, r8, ror r5
   1378c:	andeq	r3, r1, r8, ror r5
   13790:	andeq	r3, r1, r8, ror r5
   13794:	andeq	r3, r1, r8, ror r5
   13798:	andeq	r3, r1, r8, ror r5
   1379c:	andeq	r3, r1, r8, ror r5
   137a0:	andeq	r3, r1, r8, ror r5
   137a4:	andeq	r3, r1, r8, ror r5
   137a8:	andeq	r3, r1, r8, ror r5
   137ac:	andeq	r3, r1, r8, ror r5
   137b0:	andeq	r3, r1, r8, ror r5
   137b4:	andeq	r3, r1, r8, ror r5
   137b8:	andeq	r3, r1, r8, ror r5
   137bc:	andeq	r3, r1, r0, ror #9
   137c0:	andeq	r3, r1, ip, lsr r2
   137c4:	andeq	r3, r1, r8, ror r5
   137c8:	andeq	r3, r1, r0, ror #9
   137cc:	andeq	r3, r1, r8, ror r5
   137d0:	andeq	r3, r1, r0, ror #9
   137d4:	andeq	r3, r1, r8, ror r5
   137d8:	andeq	r3, r1, r8, ror r5
   137dc:	andeq	r3, r1, r8, ror r5
   137e0:	andeq	r3, r1, r8, ror r5
   137e4:	andeq	r3, r1, r8, ror r5
   137e8:	andeq	r3, r1, r8, ror r5
   137ec:	andeq	r3, r1, r8, ror r5
   137f0:	andeq	r3, r1, r8, ror r5
   137f4:	andeq	r3, r1, r8, ror r5
   137f8:	andeq	r3, r1, r8, ror r5
   137fc:	andeq	r3, r1, r8, ror r5
   13800:	andeq	r3, r1, r8, ror r5
   13804:	andeq	r3, r1, r8, ror r5
   13808:	andeq	r3, r1, r8, ror r5
   1380c:	andeq	r3, r1, r8, ror r5
   13810:	andeq	r3, r1, r8, ror r5
   13814:	andeq	r3, r1, r8, ror r5
   13818:	andeq	r3, r1, r8, ror r5
   1381c:	andeq	r3, r1, r8, ror r5
   13820:	andeq	r3, r1, r8, ror r5
   13824:	andeq	r3, r1, r8, ror r5
   13828:	andeq	r3, r1, r8, ror r5
   1382c:	andeq	r3, r1, r8, ror r5
   13830:	andeq	r3, r1, r8, ror r5
   13834:	andeq	r3, r1, r8, ror r5
   13838:	andeq	r3, r1, r8, ror r5
   1383c:	ldrdeq	r3, [r1], -r0
   13840:	andeq	r3, r1, r0, ror #9
   13844:	ldrdeq	r3, [r1], -r0
   13848:	strdeq	r3, [r1], -r0
   1384c:	mov	r3, #116	; 0x74
   13850:	b	13320 <__lxstat64@plt+0x24fc>
   13854:	ldr	r3, [sp, #160]	; 0xa0
   13858:	cmp	r3, #0
   1385c:	beq	1312c <__lxstat64@plt+0x2308>
   13860:	lsr	r3, r4, #5
   13864:	ldr	r0, [sp, #160]	; 0xa0
   13868:	uxtb	r3, r3
   1386c:	and	r1, r4, #31
   13870:	ldr	r0, [r0, r3, lsl #2]
   13874:	lsr	r3, r0, r1
   13878:	tst	r3, #1
   1387c:	beq	1312c <__lxstat64@plt+0x2308>
   13880:	ldr	r3, [sp, #28]
   13884:	cmp	r3, #0
   13888:	beq	1328c <__lxstat64@plt+0x2468>
   1388c:	ldr	sl, [sp, #32]
   13890:	mov	r8, fp
   13894:	b	13350 <__lxstat64@plt+0x252c>
   13898:	ldr	r3, [sp, #28]
   1389c:	cmp	r3, #0
   138a0:	bne	13df4 <__lxstat64@plt+0x2fd0>
   138a4:	add	sl, sl, #1
   138a8:	ldr	r6, [sp, #40]	; 0x28
   138ac:	mov	r5, #0
   138b0:	mov	r4, #92	; 0x5c
   138b4:	b	13148 <__lxstat64@plt+0x2324>
   138b8:	cmp	r9, r8
   138bc:	bne	13b2c <__lxstat64@plt+0x2d08>
   138c0:	ldr	r0, [sp, #100]	; 0x64
   138c4:	bl	10c8c <iswprint@plt>
   138c8:	add	r5, r5, r4
   138cc:	cmp	r0, #0
   138d0:	add	r0, sp, #104	; 0x68
   138d4:	moveq	r6, #0
   138d8:	bl	10c44 <mbsinit@plt>
   138dc:	cmp	r0, #0
   138e0:	beq	13ac0 <__lxstat64@plt+0x2c9c>
   138e4:	mov	r2, r6
   138e8:	mov	ip, r5
   138ec:	eor	r5, r2, #1
   138f0:	ldr	r4, [sp, #80]	; 0x50
   138f4:	ldr	r6, [sp, #84]	; 0x54
   138f8:	ldr	r7, [sp, #88]	; 0x58
   138fc:	uxtb	r5, r5
   13900:	cmp	ip, #1
   13904:	bls	13e04 <__lxstat64@plt+0x2fe0>
   13908:	ldr	r3, [sp, #44]	; 0x2c
   1390c:	and	r8, r3, r5
   13910:	mov	r5, r2
   13914:	uxtb	r8, r8
   13918:	add	r2, sl, ip
   1391c:	ldr	r0, [sp, #48]	; 0x30
   13920:	mov	r1, #0
   13924:	str	r5, [sp, #48]	; 0x30
   13928:	ldr	r9, [sp, #28]
   1392c:	ldr	ip, [sp, #40]	; 0x28
   13930:	ldr	r3, [sp, #32]
   13934:	ldr	r5, [sp, #152]	; 0x98
   13938:	b	139f4 <__lxstat64@plt+0x2bd0>
   1393c:	cmp	r9, #0
   13940:	bne	13d18 <__lxstat64@plt+0x2ef4>
   13944:	eor	r1, ip, #1
   13948:	cmp	r5, #2
   1394c:	movne	r1, #0
   13950:	andeq	r1, r1, #1
   13954:	cmp	r1, #0
   13958:	beq	13990 <__lxstat64@plt+0x2b6c>
   1395c:	cmp	fp, r7
   13960:	movhi	ip, #39	; 0x27
   13964:	strbhi	ip, [r3, r7]
   13968:	add	ip, r7, #1
   1396c:	cmp	fp, ip
   13970:	movhi	lr, #36	; 0x24
   13974:	strbhi	lr, [r3, ip]
   13978:	add	ip, r7, #2
   1397c:	cmp	fp, ip
   13980:	movhi	lr, #39	; 0x27
   13984:	strbhi	lr, [r3, ip]
   13988:	add	r7, r7, #3
   1398c:	mov	ip, r1
   13990:	cmp	fp, r7
   13994:	movhi	r1, #92	; 0x5c
   13998:	strbhi	r1, [r3, r7]
   1399c:	add	r1, r7, #1
   139a0:	cmp	fp, r1
   139a4:	lsrhi	lr, r4, #6
   139a8:	addhi	lr, lr, #48	; 0x30
   139ac:	strbhi	lr, [r3, r1]
   139b0:	add	lr, r7, #2
   139b4:	cmp	fp, lr
   139b8:	lsrhi	r1, r4, #3
   139bc:	andhi	r1, r1, #7
   139c0:	addhi	r1, r1, #48	; 0x30
   139c4:	add	sl, sl, #1
   139c8:	strbhi	r1, [r3, lr]
   139cc:	and	r4, r4, #7
   139d0:	cmp	r2, sl
   139d4:	add	r4, r4, #48	; 0x30
   139d8:	add	r7, r7, #3
   139dc:	bls	13d3c <__lxstat64@plt+0x2f18>
   139e0:	mov	r1, r8
   139e4:	cmp	fp, r7
   139e8:	strbhi	r4, [r3, r7]
   139ec:	ldrb	r4, [r0, #1]!
   139f0:	add	r7, r7, #1
   139f4:	cmp	r8, #0
   139f8:	bne	1393c <__lxstat64@plt+0x2b18>
   139fc:	cmp	r6, #0
   13a00:	bne	13a50 <__lxstat64@plt+0x2c2c>
   13a04:	eor	r6, r1, #1
   13a08:	and	r6, r6, ip
   13a0c:	add	sl, sl, #1
   13a10:	cmp	r2, sl
   13a14:	uxtb	r6, r6
   13a18:	bls	13a78 <__lxstat64@plt+0x2c54>
   13a1c:	cmp	r6, #0
   13a20:	beq	139e4 <__lxstat64@plt+0x2bc0>
   13a24:	cmp	fp, r7
   13a28:	movhi	ip, #39	; 0x27
   13a2c:	strbhi	ip, [r3, r7]
   13a30:	add	ip, r7, #1
   13a34:	cmp	fp, ip
   13a38:	movhi	lr, #39	; 0x27
   13a3c:	strbhi	lr, [r3, ip]
   13a40:	add	r7, r7, #2
   13a44:	mov	r6, r8
   13a48:	mov	ip, r8
   13a4c:	b	139e4 <__lxstat64@plt+0x2bc0>
   13a50:	cmp	fp, r7
   13a54:	eor	r6, r1, #1
   13a58:	movhi	lr, #92	; 0x5c
   13a5c:	and	r6, r6, ip
   13a60:	add	sl, sl, #1
   13a64:	strbhi	lr, [r3, r7]
   13a68:	cmp	r2, sl
   13a6c:	add	r7, r7, #1
   13a70:	uxtb	r6, r6
   13a74:	bhi	13a1c <__lxstat64@plt+0x2bf8>
   13a78:	str	ip, [sp, #40]	; 0x28
   13a7c:	ldr	r5, [sp, #48]	; 0x30
   13a80:	b	13148 <__lxstat64@plt+0x2324>
   13a84:	ldr	r3, [sp, #24]
   13a88:	cmn	r3, #1
   13a8c:	mov	r3, #0
   13a90:	str	r3, [sp, #104]	; 0x68
   13a94:	str	r3, [sp, #108]	; 0x6c
   13a98:	beq	13db8 <__lxstat64@plt+0x2f94>
   13a9c:	mov	r2, r5
   13aa0:	mov	r3, #0
   13aa4:	str	r7, [sp, #88]	; 0x58
   13aa8:	ldr	r7, [sp, #152]	; 0x98
   13aac:	str	r5, [sp, #92]	; 0x5c
   13ab0:	str	r6, [sp, #84]	; 0x54
   13ab4:	mov	r5, r3
   13ab8:	mov	r6, r2
   13abc:	str	r4, [sp, #80]	; 0x50
   13ac0:	ldr	r3, [sp, #56]	; 0x38
   13ac4:	add	r9, sl, r5
   13ac8:	add	r8, r3, r9
   13acc:	ldr	r3, [sp, #24]
   13ad0:	mov	r1, r8
   13ad4:	sub	r2, r3, r9
   13ad8:	add	r0, sp, #100	; 0x64
   13adc:	add	r3, sp, #104	; 0x68
   13ae0:	bl	155f4 <__lxstat64@plt+0x47d0>
   13ae4:	subs	r4, r0, #0
   13ae8:	beq	13e90 <__lxstat64@plt+0x306c>
   13aec:	cmn	r4, #1
   13af0:	beq	13e70 <__lxstat64@plt+0x304c>
   13af4:	cmn	r4, #2
   13af8:	beq	13e10 <__lxstat64@plt+0x2fec>
   13afc:	ldr	r2, [sp, #28]
   13b00:	cmp	r7, #2
   13b04:	movne	r2, #0
   13b08:	andeq	r2, r2, #1
   13b0c:	cmp	r2, #0
   13b10:	beq	138c0 <__lxstat64@plt+0x2a9c>
   13b14:	cmp	r4, #1
   13b18:	beq	138c0 <__lxstat64@plt+0x2a9c>
   13b1c:	sub	r3, r4, #1
   13b20:	add	r9, r3, r9
   13b24:	ldr	r3, [sp, #56]	; 0x38
   13b28:	add	r9, r3, r9
   13b2c:	ldrb	r3, [r8, #1]!
   13b30:	sub	r3, r3, #91	; 0x5b
   13b34:	cmp	r3, #33	; 0x21
   13b38:	ldrls	pc, [pc, r3, lsl #2]
   13b3c:	b	138b8 <__lxstat64@plt+0x2a94>
   13b40:	andeq	r3, r1, r8, asr #23
   13b44:	andeq	r3, r1, r8, asr #23
   13b48:			; <UNDEFINED> instruction: 0x000138b8
   13b4c:	andeq	r3, r1, r8, asr #23
   13b50:			; <UNDEFINED> instruction: 0x000138b8
   13b54:	andeq	r3, r1, r8, asr #23
   13b58:			; <UNDEFINED> instruction: 0x000138b8
   13b5c:			; <UNDEFINED> instruction: 0x000138b8
   13b60:			; <UNDEFINED> instruction: 0x000138b8
   13b64:			; <UNDEFINED> instruction: 0x000138b8
   13b68:			; <UNDEFINED> instruction: 0x000138b8
   13b6c:			; <UNDEFINED> instruction: 0x000138b8
   13b70:			; <UNDEFINED> instruction: 0x000138b8
   13b74:			; <UNDEFINED> instruction: 0x000138b8
   13b78:			; <UNDEFINED> instruction: 0x000138b8
   13b7c:			; <UNDEFINED> instruction: 0x000138b8
   13b80:			; <UNDEFINED> instruction: 0x000138b8
   13b84:			; <UNDEFINED> instruction: 0x000138b8
   13b88:			; <UNDEFINED> instruction: 0x000138b8
   13b8c:			; <UNDEFINED> instruction: 0x000138b8
   13b90:			; <UNDEFINED> instruction: 0x000138b8
   13b94:			; <UNDEFINED> instruction: 0x000138b8
   13b98:			; <UNDEFINED> instruction: 0x000138b8
   13b9c:			; <UNDEFINED> instruction: 0x000138b8
   13ba0:			; <UNDEFINED> instruction: 0x000138b8
   13ba4:			; <UNDEFINED> instruction: 0x000138b8
   13ba8:			; <UNDEFINED> instruction: 0x000138b8
   13bac:			; <UNDEFINED> instruction: 0x000138b8
   13bb0:			; <UNDEFINED> instruction: 0x000138b8
   13bb4:			; <UNDEFINED> instruction: 0x000138b8
   13bb8:			; <UNDEFINED> instruction: 0x000138b8
   13bbc:			; <UNDEFINED> instruction: 0x000138b8
   13bc0:			; <UNDEFINED> instruction: 0x000138b8
   13bc4:	andeq	r3, r1, r8, asr #23
   13bc8:	mov	r3, #2
   13bcc:	ldr	sl, [sp, #32]
   13bd0:	mov	r8, fp
   13bd4:	str	r3, [sp, #152]	; 0x98
   13bd8:	b	13350 <__lxstat64@plt+0x252c>
   13bdc:	ldr	r3, [sp, #156]	; 0x9c
   13be0:	tst	r3, #1
   13be4:	bne	13d10 <__lxstat64@plt+0x2eec>
   13be8:	ldr	r3, [sp, #152]	; 0x98
   13bec:	ldr	r4, [sp, #44]	; 0x2c
   13bf0:	sub	r2, r3, #2
   13bf4:	mov	r5, #0
   13bf8:	clz	r2, r2
   13bfc:	mov	r8, r4
   13c00:	lsr	r2, r2, #5
   13c04:	b	13110 <__lxstat64@plt+0x22ec>
   13c08:	ldr	r3, [sp, #156]	; 0x9c
   13c0c:	ands	r9, r3, #4
   13c10:	beq	13d48 <__lxstat64@plt+0x2f24>
   13c14:	ldr	r2, [sp, #24]
   13c18:	add	r3, sl, #2
   13c1c:	cmp	r3, r2
   13c20:	bcs	13c34 <__lxstat64@plt+0x2e10>
   13c24:	ldr	r2, [sp, #48]	; 0x30
   13c28:	ldrb	r4, [r2, #1]
   13c2c:	cmp	r4, #63	; 0x3f
   13c30:	beq	13ed0 <__lxstat64@plt+0x30ac>
   13c34:	mov	r2, #0
   13c38:	mov	r8, r2
   13c3c:	mov	r5, r2
   13c40:	mov	r4, #63	; 0x3f
   13c44:	b	13110 <__lxstat64@plt+0x22ec>
   13c48:	ldr	r3, [sp, #28]
   13c4c:	cmp	r3, #0
   13c50:	bne	13f74 <__lxstat64@plt+0x3150>
   13c54:	mov	r2, r5
   13c58:	mov	r8, r3
   13c5c:	mov	r5, #0
   13c60:	mov	r4, #63	; 0x3f
   13c64:	b	13110 <__lxstat64@plt+0x22ec>
   13c68:	ldr	r3, [sp, #28]
   13c6c:	cmp	r3, #0
   13c70:	bne	13f74 <__lxstat64@plt+0x3150>
   13c74:	ldr	r2, [sp, #72]	; 0x48
   13c78:	adds	r3, fp, #0
   13c7c:	movne	r3, #1
   13c80:	cmp	r2, #0
   13c84:	movne	r3, #0
   13c88:	cmp	r3, #0
   13c8c:	strne	fp, [sp, #72]	; 0x48
   13c90:	movne	fp, #0
   13c94:	bne	13cd0 <__lxstat64@plt+0x2eac>
   13c98:	cmp	fp, r7
   13c9c:	movhi	r2, #39	; 0x27
   13ca0:	ldrhi	r3, [sp, #32]
   13ca4:	strbhi	r2, [r3, r7]
   13ca8:	add	r3, r7, #1
   13cac:	cmp	fp, r3
   13cb0:	movhi	r1, #92	; 0x5c
   13cb4:	ldrhi	r2, [sp, #32]
   13cb8:	strbhi	r1, [r2, r3]
   13cbc:	add	r3, r7, #2
   13cc0:	cmp	fp, r3
   13cc4:	movhi	r1, #39	; 0x27
   13cc8:	ldrhi	r2, [sp, #32]
   13ccc:	strbhi	r1, [r2, r3]
   13cd0:	ldr	r3, [sp, #28]
   13cd4:	add	r7, r7, #3
   13cd8:	mov	r2, r5
   13cdc:	mov	r8, r3
   13ce0:	str	r5, [sp, #68]	; 0x44
   13ce4:	str	r3, [sp, #40]	; 0x28
   13ce8:	mov	r4, #39	; 0x27
   13cec:	b	13110 <__lxstat64@plt+0x22ec>
   13cf0:	ldr	r3, [sp, #56]	; 0x38
   13cf4:	ldrb	r3, [r3, #1]
   13cf8:	adds	r3, r3, #0
   13cfc:	movne	r3, #1
   13d00:	b	130e8 <__lxstat64@plt+0x22c4>
   13d04:	ldr	r5, [sp, #28]
   13d08:	mov	r4, #48	; 0x30
   13d0c:	b	13110 <__lxstat64@plt+0x22ec>
   13d10:	add	sl, sl, #1
   13d14:	b	12c40 <__lxstat64@plt+0x1e1c>
   13d18:	mov	sl, r3
   13d1c:	ldr	r3, [sp, #28]
   13d20:	mov	r8, fp
   13d24:	str	r3, [sp, #44]	; 0x2c
   13d28:	ldr	r3, [sp, #152]	; 0x98
   13d2c:	sub	r2, r3, #2
   13d30:	clz	r2, r2
   13d34:	lsr	r2, r2, #5
   13d38:	b	13350 <__lxstat64@plt+0x252c>
   13d3c:	str	ip, [sp, #40]	; 0x28
   13d40:	ldr	r5, [sp, #48]	; 0x30
   13d44:	b	13180 <__lxstat64@plt+0x235c>
   13d48:	mov	r2, r9
   13d4c:	mov	r8, r9
   13d50:	mov	r5, #0
   13d54:	mov	r4, #63	; 0x3f
   13d58:	b	13110 <__lxstat64@plt+0x22ec>
   13d5c:	cmp	fp, #0
   13d60:	beq	13dd8 <__lxstat64@plt+0x2fb4>
   13d64:	ldr	r1, [sp, #32]
   13d68:	mov	r3, #34	; 0x22
   13d6c:	mov	r2, #1
   13d70:	strb	r3, [r1]
   13d74:	ldr	r3, [pc, #332]	; 13ec8 <__lxstat64@plt+0x30a4>
   13d78:	str	r2, [sp, #52]	; 0x34
   13d7c:	mov	r7, r2
   13d80:	str	r2, [sp, #44]	; 0x2c
   13d84:	str	r3, [sp, #64]	; 0x40
   13d88:	b	12c30 <__lxstat64@plt+0x1e0c>
   13d8c:	ldr	r3, [pc, #300]	; 13ec0 <__lxstat64@plt+0x309c>
   13d90:	str	r3, [sp, #64]	; 0x40
   13d94:	mov	r3, #0
   13d98:	str	r3, [sp, #28]
   13d9c:	mov	r3, #1
   13da0:	str	r3, [sp, #52]	; 0x34
   13da4:	mov	r7, r3
   13da8:	mov	r3, #2
   13dac:	str	r3, [sp, #152]	; 0x98
   13db0:	b	12c30 <__lxstat64@plt+0x1e0c>
   13db4:	bl	10e18 <abort@plt>
   13db8:	ldr	r0, [sp, #56]	; 0x38
   13dbc:	bl	10d40 <strlen@plt>
   13dc0:	str	r0, [sp, #24]
   13dc4:	b	13a9c <__lxstat64@plt+0x2c78>
   13dc8:	mov	r5, r8
   13dcc:	mov	r4, #48	; 0x30
   13dd0:	ldr	r8, [sp, #44]	; 0x2c
   13dd4:	b	13110 <__lxstat64@plt+0x22ec>
   13dd8:	mov	r3, #1
   13ddc:	str	r3, [sp, #52]	; 0x34
   13de0:	mov	r7, r3
   13de4:	str	r3, [sp, #44]	; 0x2c
   13de8:	ldr	r3, [pc, #216]	; 13ec8 <__lxstat64@plt+0x30a4>
   13dec:	str	r3, [sp, #64]	; 0x40
   13df0:	b	12c30 <__lxstat64@plt+0x1e0c>
   13df4:	ldr	sl, [sp, #32]
   13df8:	mov	r8, fp
   13dfc:	mov	r2, r3
   13e00:	b	13350 <__lxstat64@plt+0x252c>
   13e04:	mov	r3, r5
   13e08:	mov	r5, r2
   13e0c:	b	13608 <__lxstat64@plt+0x27e4>
   13e10:	ldr	r1, [sp, #24]
   13e14:	mov	r2, r5
   13e18:	cmp	r1, r9
   13e1c:	mov	ip, r5
   13e20:	ldr	r4, [sp, #80]	; 0x50
   13e24:	ldr	r5, [sp, #92]	; 0x5c
   13e28:	ldr	r6, [sp, #84]	; 0x54
   13e2c:	ldr	r7, [sp, #88]	; 0x58
   13e30:	bls	13e64 <__lxstat64@plt+0x3040>
   13e34:	ldrb	r3, [r8]
   13e38:	cmp	r3, #0
   13e3c:	bne	13e50 <__lxstat64@plt+0x302c>
   13e40:	b	13e68 <__lxstat64@plt+0x3044>
   13e44:	ldrb	r3, [r8, #1]!
   13e48:	cmp	r3, #0
   13e4c:	beq	13f68 <__lxstat64@plt+0x3144>
   13e50:	add	r2, r2, #1
   13e54:	add	r3, sl, r2
   13e58:	cmp	r1, r3
   13e5c:	bhi	13e44 <__lxstat64@plt+0x3020>
   13e60:	mov	ip, r2
   13e64:	mov	r3, #0
   13e68:	mov	r2, r3
   13e6c:	b	13900 <__lxstat64@plt+0x2adc>
   13e70:	mov	r3, #0
   13e74:	mov	ip, r5
   13e78:	ldr	r4, [sp, #80]	; 0x50
   13e7c:	ldr	r5, [sp, #92]	; 0x5c
   13e80:	ldr	r6, [sp, #84]	; 0x54
   13e84:	ldr	r7, [sp, #88]	; 0x58
   13e88:	mov	r2, r3
   13e8c:	b	13900 <__lxstat64@plt+0x2adc>
   13e90:	mov	r3, r6
   13e94:	mov	ip, r5
   13e98:	eor	r5, r3, #1
   13e9c:	mov	r2, r6
   13ea0:	ldr	r4, [sp, #80]	; 0x50
   13ea4:	ldr	r6, [sp, #84]	; 0x54
   13ea8:	ldr	r7, [sp, #88]	; 0x58
   13eac:	uxtb	r5, r5
   13eb0:	b	13900 <__lxstat64@plt+0x2adc>
   13eb4:	ldr	sl, [sp, #32]
   13eb8:	mov	r8, fp
   13ebc:	b	13d24 <__lxstat64@plt+0x2f00>
   13ec0:	andeq	r6, r1, ip, asr #28
   13ec4:	andeq	r6, r1, r0, asr lr
   13ec8:	andeq	r6, r1, r8, asr #28
   13ecc:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   13ed0:	ldr	r2, [sp, #56]	; 0x38
   13ed4:	ldrb	r1, [r2, r3]
   13ed8:	sub	r2, r1, #33	; 0x21
   13edc:	uxtb	r2, r2
   13ee0:	cmp	r2, #29
   13ee4:	bhi	13f84 <__lxstat64@plt+0x3160>
   13ee8:	ldr	r0, [pc, #-36]	; 13ecc <__lxstat64@plt+0x30a8>
   13eec:	mov	ip, #1
   13ef0:	ands	r2, r0, ip, lsl r2
   13ef4:	beq	13f94 <__lxstat64@plt+0x3170>
   13ef8:	ldr	r2, [sp, #28]
   13efc:	cmp	r2, #0
   13f00:	bne	14094 <__lxstat64@plt+0x3270>
   13f04:	cmp	fp, r7
   13f08:	ldr	r8, [sp, #28]
   13f0c:	ldrhi	r2, [sp, #32]
   13f10:	mov	sl, r3
   13f14:	mov	r5, r8
   13f18:	strbhi	r4, [r2, r7]
   13f1c:	add	r2, r7, #1
   13f20:	cmp	fp, r2
   13f24:	movhi	r0, #34	; 0x22
   13f28:	ldrhi	ip, [sp, #32]
   13f2c:	mov	r4, r1
   13f30:	strbhi	r0, [ip, r2]
   13f34:	add	r2, r7, #2
   13f38:	cmp	fp, r2
   13f3c:	movhi	r0, #34	; 0x22
   13f40:	ldrhi	ip, [sp, #32]
   13f44:	strbhi	r0, [ip, r2]
   13f48:	add	r2, r7, #3
   13f4c:	cmp	fp, r2
   13f50:	movhi	r0, #63	; 0x3f
   13f54:	ldrhi	ip, [sp, #32]
   13f58:	add	r7, r7, #4
   13f5c:	strbhi	r0, [ip, r2]
   13f60:	mov	r2, r8
   13f64:	b	13110 <__lxstat64@plt+0x22ec>
   13f68:	mov	ip, r2
   13f6c:	mov	r2, r3
   13f70:	b	13900 <__lxstat64@plt+0x2adc>
   13f74:	ldr	sl, [sp, #32]
   13f78:	mov	r8, fp
   13f7c:	ldr	r2, [sp, #28]
   13f80:	b	13350 <__lxstat64@plt+0x252c>
   13f84:	mov	r2, #0
   13f88:	mov	r8, r2
   13f8c:	mov	r5, r2
   13f90:	b	13110 <__lxstat64@plt+0x22ec>
   13f94:	mov	r8, r2
   13f98:	mov	r5, #0
   13f9c:	b	13110 <__lxstat64@plt+0x22ec>
   13fa0:	ldr	r1, [sp, #152]	; 0x98
   13fa4:	bl	12a6c <__lxstat64@plt+0x1c48>
   13fa8:	str	r0, [sp, #168]	; 0xa8
   13fac:	b	12fcc <__lxstat64@plt+0x21a8>
   13fb0:	ldr	r1, [sp, #152]	; 0x98
   13fb4:	bl	12a6c <__lxstat64@plt+0x1c48>
   13fb8:	str	r0, [sp, #164]	; 0xa4
   13fbc:	b	12fac <__lxstat64@plt+0x2188>
   13fc0:	ldr	r7, [sp, #28]
   13fc4:	b	1300c <__lxstat64@plt+0x21e8>
   13fc8:	ldr	sl, [sp, #32]
   13fcc:	ldr	r2, [sp, #68]	; 0x44
   13fd0:	mov	r8, fp
   13fd4:	mov	fp, r7
   13fd8:	ldr	r3, [sp, #64]	; 0x40
   13fdc:	cmp	r3, #0
   13fe0:	moveq	r2, #0
   13fe4:	andne	r2, r2, #1
   13fe8:	cmp	r2, #0
   13fec:	beq	14018 <__lxstat64@plt+0x31f4>
   13ff0:	mov	r2, r3
   13ff4:	ldrb	r3, [r3]
   13ff8:	cmp	r3, #0
   13ffc:	beq	14018 <__lxstat64@plt+0x31f4>
   14000:	cmp	r8, fp
   14004:	strbhi	r3, [sl, fp]
   14008:	ldrb	r3, [r2, #1]!
   1400c:	add	fp, fp, #1
   14010:	cmp	r3, #0
   14014:	bne	14000 <__lxstat64@plt+0x31dc>
   14018:	cmp	r8, fp
   1401c:	movhi	r3, #0
   14020:	strbhi	r3, [sl, fp]
   14024:	b	133ac <__lxstat64@plt+0x2588>
   14028:	ldr	r3, [sp, #168]	; 0xa8
   1402c:	ldr	sl, [sp, #32]
   14030:	str	r3, [sp, #16]
   14034:	ldr	r3, [sp, #164]	; 0xa4
   14038:	mov	ip, #5
   1403c:	str	r3, [sp, #12]
   14040:	ldr	r3, [sp, #160]	; 0xa0
   14044:	ldr	r2, [sp, #56]	; 0x38
   14048:	str	r3, [sp, #8]
   1404c:	ldr	r3, [sp, #156]	; 0x9c
   14050:	ldr	r1, [sp, #72]	; 0x48
   14054:	str	r3, [sp, #4]
   14058:	mov	r0, sl
   1405c:	ldr	r3, [sp, #24]
   14060:	str	ip, [sp]
   14064:	bl	12b8c <__lxstat64@plt+0x1d68>
   14068:	mov	fp, r0
   1406c:	b	133ac <__lxstat64@plt+0x2588>
   14070:	mov	r8, fp
   14074:	ldr	sl, [sp, #32]
   14078:	mov	fp, r7
   1407c:	mov	r2, r3
   14080:	b	13fd8 <__lxstat64@plt+0x31b4>
   14084:	mov	r8, fp
   14088:	ldr	sl, [sp, #32]
   1408c:	mov	fp, r7
   14090:	b	13fd8 <__lxstat64@plt+0x31b4>
   14094:	ldr	sl, [sp, #32]
   14098:	mov	r8, fp
   1409c:	b	13368 <__lxstat64@plt+0x2544>
   140a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   140a4:	sub	sp, sp, #52	; 0x34
   140a8:	mov	r4, r0
   140ac:	mov	r5, r3
   140b0:	mov	sl, r1
   140b4:	mov	fp, r2
   140b8:	bl	10d4c <__errno_location@plt>
   140bc:	ldr	r7, [pc, #412]	; 14260 <__lxstat64@plt+0x343c>
   140c0:	cmn	r4, #-2147483647	; 0x80000001
   140c4:	ldr	r6, [r7]
   140c8:	mov	r8, r0
   140cc:	movne	r0, #0
   140d0:	moveq	r0, #1
   140d4:	ldr	r3, [r8]
   140d8:	orrs	r0, r0, r4, lsr #31
   140dc:	str	r3, [sp, #24]
   140e0:	bne	1425c <__lxstat64@plt+0x3438>
   140e4:	ldr	r2, [r7, #4]
   140e8:	cmp	r4, r2
   140ec:	blt	1414c <__lxstat64@plt+0x3328>
   140f0:	add	r9, r7, #8
   140f4:	cmp	r6, r9
   140f8:	str	r2, [sp, #44]	; 0x2c
   140fc:	beq	1422c <__lxstat64@plt+0x3408>
   14100:	mov	r3, #8
   14104:	sub	r2, r4, r2
   14108:	mov	r0, r6
   1410c:	str	r3, [sp]
   14110:	add	r2, r2, #1
   14114:	mvn	r3, #-2147483648	; 0x80000000
   14118:	add	r1, sp, #44	; 0x2c
   1411c:	bl	14d18 <__lxstat64@plt+0x3ef4>
   14120:	mov	r6, r0
   14124:	str	r0, [r7]
   14128:	ldr	r0, [r7, #4]
   1412c:	ldr	r2, [sp, #44]	; 0x2c
   14130:	mov	r1, #0
   14134:	sub	r2, r2, r0
   14138:	add	r0, r6, r0, lsl #3
   1413c:	lsl	r2, r2, #3
   14140:	bl	10d70 <memset@plt>
   14144:	ldr	r3, [sp, #44]	; 0x2c
   14148:	str	r3, [r7, #4]
   1414c:	add	r3, r6, r4, lsl #3
   14150:	ldr	r1, [r5, #4]
   14154:	ldr	r7, [r3, #4]
   14158:	ldr	r9, [r6, r4, lsl #3]
   1415c:	ldr	r2, [r5, #40]	; 0x28
   14160:	ldr	ip, [r5, #44]	; 0x2c
   14164:	add	r0, r5, #8
   14168:	str	r3, [sp, #28]
   1416c:	ldr	r3, [r5]
   14170:	orr	r1, r1, #1
   14174:	mov	lr, r0
   14178:	str	r1, [sp, #32]
   1417c:	str	r0, [sp, #36]	; 0x24
   14180:	str	r1, [sp, #4]
   14184:	str	r2, [sp, #12]
   14188:	str	r3, [sp]
   1418c:	mov	r0, r7
   14190:	mov	r1, r9
   14194:	str	ip, [sp, #16]
   14198:	str	lr, [sp, #8]
   1419c:	mov	r3, fp
   141a0:	mov	r2, sl
   141a4:	bl	12b8c <__lxstat64@plt+0x1d68>
   141a8:	cmp	r9, r0
   141ac:	bhi	14218 <__lxstat64@plt+0x33f4>
   141b0:	ldr	r3, [pc, #172]	; 14264 <__lxstat64@plt+0x3440>
   141b4:	add	r9, r0, #1
   141b8:	cmp	r7, r3
   141bc:	str	r9, [r6, r4, lsl #3]
   141c0:	beq	141cc <__lxstat64@plt+0x33a8>
   141c4:	mov	r0, r7
   141c8:	bl	154c8 <__lxstat64@plt+0x46a4>
   141cc:	mov	r0, r9
   141d0:	bl	14bb4 <__lxstat64@plt+0x3d90>
   141d4:	ldr	lr, [sp, #28]
   141d8:	ldr	ip, [r5, #44]	; 0x2c
   141dc:	ldr	r4, [r5, #40]	; 0x28
   141e0:	mov	r3, fp
   141e4:	mov	r2, sl
   141e8:	mov	r1, r9
   141ec:	str	r0, [lr, #4]
   141f0:	ldr	lr, [r5]
   141f4:	ldr	r5, [sp, #36]	; 0x24
   141f8:	str	ip, [sp, #16]
   141fc:	str	r5, [sp, #8]
   14200:	ldr	r5, [sp, #32]
   14204:	str	r4, [sp, #12]
   14208:	str	r5, [sp, #4]
   1420c:	str	lr, [sp]
   14210:	mov	r7, r0
   14214:	bl	12b8c <__lxstat64@plt+0x1d68>
   14218:	ldr	r3, [sp, #24]
   1421c:	mov	r0, r7
   14220:	str	r3, [r8]
   14224:	add	sp, sp, #52	; 0x34
   14228:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1422c:	mov	r3, #8
   14230:	sub	r2, r4, r2
   14234:	str	r3, [sp]
   14238:	add	r1, sp, #44	; 0x2c
   1423c:	add	r2, r2, #1
   14240:	mvn	r3, #-2147483648	; 0x80000000
   14244:	bl	14d18 <__lxstat64@plt+0x3ef4>
   14248:	mov	r6, r0
   1424c:	ldm	r9, {r0, r1}
   14250:	str	r6, [r7]
   14254:	stm	r6, {r0, r1}
   14258:	b	14128 <__lxstat64@plt+0x3304>
   1425c:	bl	10e18 <abort@plt>
   14260:	andeq	r8, r2, r4, ror #1
   14264:	andeq	r8, r2, r4, asr r1
   14268:	push	{r4, r5, r6, lr}
   1426c:	mov	r5, r0
   14270:	bl	10d4c <__errno_location@plt>
   14274:	cmp	r5, #0
   14278:	mov	r1, #48	; 0x30
   1427c:	mov	r4, r0
   14280:	ldr	r0, [pc, #16]	; 14298 <__lxstat64@plt+0x3474>
   14284:	ldr	r6, [r4]
   14288:	movne	r0, r5
   1428c:	bl	15014 <__lxstat64@plt+0x41f0>
   14290:	str	r6, [r4]
   14294:	pop	{r4, r5, r6, pc}
   14298:	andeq	r8, r2, r4, asr r2
   1429c:	ldr	r3, [pc, #12]	; 142b0 <__lxstat64@plt+0x348c>
   142a0:	cmp	r0, #0
   142a4:	moveq	r0, r3
   142a8:	ldr	r0, [r0]
   142ac:	bx	lr
   142b0:	andeq	r8, r2, r4, asr r2
   142b4:	ldr	r3, [pc, #12]	; 142c8 <__lxstat64@plt+0x34a4>
   142b8:	cmp	r0, #0
   142bc:	moveq	r0, r3
   142c0:	str	r1, [r0]
   142c4:	bx	lr
   142c8:	andeq	r8, r2, r4, asr r2
   142cc:	ldr	r3, [pc, #52]	; 14308 <__lxstat64@plt+0x34e4>
   142d0:	cmp	r0, #0
   142d4:	moveq	r0, r3
   142d8:	add	r3, r0, #8
   142dc:	push	{lr}		; (str lr, [sp, #-4]!)
   142e0:	lsr	lr, r1, #5
   142e4:	and	r1, r1, #31
   142e8:	ldr	ip, [r3, lr, lsl #2]
   142ec:	lsr	r0, ip, r1
   142f0:	eor	r2, r2, r0
   142f4:	and	r2, r2, #1
   142f8:	and	r0, r0, #1
   142fc:	eor	r1, ip, r2, lsl r1
   14300:	str	r1, [r3, lr, lsl #2]
   14304:	pop	{pc}		; (ldr pc, [sp], #4)
   14308:	andeq	r8, r2, r4, asr r2
   1430c:	ldr	r3, [pc, #16]	; 14324 <__lxstat64@plt+0x3500>
   14310:	cmp	r0, #0
   14314:	movne	r3, r0
   14318:	ldr	r0, [r3, #4]
   1431c:	str	r1, [r3, #4]
   14320:	bx	lr
   14324:	andeq	r8, r2, r4, asr r2
   14328:	ldr	r3, [pc, #44]	; 1435c <__lxstat64@plt+0x3538>
   1432c:	cmp	r0, #0
   14330:	moveq	r0, r3
   14334:	mov	ip, #10
   14338:	cmp	r2, #0
   1433c:	cmpne	r1, #0
   14340:	str	ip, [r0]
   14344:	beq	14354 <__lxstat64@plt+0x3530>
   14348:	str	r1, [r0, #40]	; 0x28
   1434c:	str	r2, [r0, #44]	; 0x2c
   14350:	bx	lr
   14354:	push	{r4, lr}
   14358:	bl	10e18 <abort@plt>
   1435c:	andeq	r8, r2, r4, asr r2
   14360:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14364:	sub	sp, sp, #24
   14368:	ldr	ip, [pc, #108]	; 143dc <__lxstat64@plt+0x35b8>
   1436c:	ldr	r4, [sp, #56]	; 0x38
   14370:	mov	r9, r2
   14374:	cmp	r4, #0
   14378:	moveq	r4, ip
   1437c:	mov	sl, r3
   14380:	mov	r7, r0
   14384:	mov	r8, r1
   14388:	bl	10d4c <__errno_location@plt>
   1438c:	ldr	r3, [r4, #44]	; 0x2c
   14390:	mov	r1, r8
   14394:	ldr	r6, [r0]
   14398:	str	r3, [sp, #16]
   1439c:	ldr	r2, [r4, #40]	; 0x28
   143a0:	add	r3, r4, #8
   143a4:	str	r3, [sp, #8]
   143a8:	str	r2, [sp, #12]
   143ac:	ldr	r2, [r4, #4]
   143b0:	mov	r5, r0
   143b4:	str	r2, [sp, #4]
   143b8:	ldr	ip, [r4]
   143bc:	mov	r3, sl
   143c0:	mov	r2, r9
   143c4:	mov	r0, r7
   143c8:	str	ip, [sp]
   143cc:	bl	12b8c <__lxstat64@plt+0x1d68>
   143d0:	str	r6, [r5]
   143d4:	add	sp, sp, #24
   143d8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   143dc:	andeq	r8, r2, r4, asr r2
   143e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   143e4:	cmp	r3, #0
   143e8:	sub	sp, sp, #44	; 0x2c
   143ec:	ldr	r4, [pc, #192]	; 144b4 <__lxstat64@plt+0x3690>
   143f0:	mov	r6, r2
   143f4:	movne	r4, r3
   143f8:	mov	r9, r1
   143fc:	mov	r8, r0
   14400:	bl	10d4c <__errno_location@plt>
   14404:	ldr	r3, [r4, #44]	; 0x2c
   14408:	ldr	r5, [r4, #4]
   1440c:	add	sl, r4, #8
   14410:	cmp	r6, #0
   14414:	orreq	r5, r5, #1
   14418:	mov	r1, #0
   1441c:	ldr	r2, [r0]
   14420:	str	r3, [sp, #16]
   14424:	ldr	r3, [r4, #40]	; 0x28
   14428:	stmib	sp, {r5, sl}
   1442c:	str	r3, [sp, #12]
   14430:	ldr	r3, [r4]
   14434:	mov	r7, r0
   14438:	str	r2, [sp, #28]
   1443c:	str	r3, [sp]
   14440:	mov	r2, r8
   14444:	mov	r3, r9
   14448:	mov	r0, r1
   1444c:	bl	12b8c <__lxstat64@plt+0x1d68>
   14450:	add	r1, r0, #1
   14454:	mov	fp, r0
   14458:	mov	r0, r1
   1445c:	str	r1, [sp, #36]	; 0x24
   14460:	bl	14bb4 <__lxstat64@plt+0x3d90>
   14464:	ldr	r3, [r4, #44]	; 0x2c
   14468:	mov	r2, r8
   1446c:	str	r3, [sp, #16]
   14470:	ldr	r3, [r4, #40]	; 0x28
   14474:	str	r5, [sp, #4]
   14478:	str	r3, [sp, #12]
   1447c:	str	sl, [sp, #8]
   14480:	ldr	ip, [r4]
   14484:	ldr	r1, [sp, #36]	; 0x24
   14488:	mov	r3, r9
   1448c:	str	ip, [sp]
   14490:	str	r0, [sp, #32]
   14494:	bl	12b8c <__lxstat64@plt+0x1d68>
   14498:	ldr	r2, [sp, #28]
   1449c:	cmp	r6, #0
   144a0:	str	r2, [r7]
   144a4:	ldr	r0, [sp, #32]
   144a8:	strne	fp, [r6]
   144ac:	add	sp, sp, #44	; 0x2c
   144b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   144b4:	andeq	r8, r2, r4, asr r2
   144b8:	mov	r3, r2
   144bc:	mov	r2, #0
   144c0:	b	143e0 <__lxstat64@plt+0x35bc>
   144c4:	push	{r4, r5, r6, r7, r8, lr}
   144c8:	ldr	r6, [pc, #116]	; 14544 <__lxstat64@plt+0x3720>
   144cc:	ldr	r3, [r6, #4]
   144d0:	ldr	r7, [r6]
   144d4:	cmp	r3, #1
   144d8:	movgt	r5, r7
   144dc:	movgt	r4, #1
   144e0:	ble	14500 <__lxstat64@plt+0x36dc>
   144e4:	ldr	r0, [r5, #12]
   144e8:	bl	154c8 <__lxstat64@plt+0x46a4>
   144ec:	ldr	r3, [r6, #4]
   144f0:	add	r4, r4, #1
   144f4:	cmp	r3, r4
   144f8:	add	r5, r5, #8
   144fc:	bgt	144e4 <__lxstat64@plt+0x36c0>
   14500:	ldr	r0, [r7, #4]
   14504:	ldr	r4, [pc, #60]	; 14548 <__lxstat64@plt+0x3724>
   14508:	cmp	r0, r4
   1450c:	beq	14520 <__lxstat64@plt+0x36fc>
   14510:	bl	154c8 <__lxstat64@plt+0x46a4>
   14514:	mov	r3, #256	; 0x100
   14518:	str	r4, [r6, #12]
   1451c:	str	r3, [r6, #8]
   14520:	ldr	r4, [pc, #36]	; 1454c <__lxstat64@plt+0x3728>
   14524:	cmp	r7, r4
   14528:	beq	14538 <__lxstat64@plt+0x3714>
   1452c:	mov	r0, r7
   14530:	bl	154c8 <__lxstat64@plt+0x46a4>
   14534:	str	r4, [r6]
   14538:	mov	r3, #1
   1453c:	str	r3, [r6, #4]
   14540:	pop	{r4, r5, r6, r7, r8, pc}
   14544:	andeq	r8, r2, r4, ror #1
   14548:	andeq	r8, r2, r4, asr r1
   1454c:	andeq	r8, r2, ip, ror #1
   14550:	ldr	r3, [pc, #4]	; 1455c <__lxstat64@plt+0x3738>
   14554:	mvn	r2, #0
   14558:	b	140a0 <__lxstat64@plt+0x327c>
   1455c:	andeq	r8, r2, r4, asr r2
   14560:	ldr	r3, [pc]	; 14568 <__lxstat64@plt+0x3744>
   14564:	b	140a0 <__lxstat64@plt+0x327c>
   14568:	andeq	r8, r2, r4, asr r2
   1456c:	mov	r1, r0
   14570:	ldr	r3, [pc, #8]	; 14580 <__lxstat64@plt+0x375c>
   14574:	mvn	r2, #0
   14578:	mov	r0, #0
   1457c:	b	140a0 <__lxstat64@plt+0x327c>
   14580:	andeq	r8, r2, r4, asr r2
   14584:	mov	r2, r1
   14588:	ldr	r3, [pc, #8]	; 14598 <__lxstat64@plt+0x3774>
   1458c:	mov	r1, r0
   14590:	mov	r0, #0
   14594:	b	140a0 <__lxstat64@plt+0x327c>
   14598:	andeq	r8, r2, r4, asr r2
   1459c:	push	{r4, r5, lr}
   145a0:	sub	sp, sp, #52	; 0x34
   145a4:	mov	r5, r2
   145a8:	mov	r4, r0
   145ac:	mov	r0, sp
   145b0:	bl	12a3c <__lxstat64@plt+0x1c18>
   145b4:	mov	r3, sp
   145b8:	mov	r1, r5
   145bc:	mov	r0, r4
   145c0:	mvn	r2, #0
   145c4:	bl	140a0 <__lxstat64@plt+0x327c>
   145c8:	add	sp, sp, #52	; 0x34
   145cc:	pop	{r4, r5, pc}
   145d0:	push	{r4, r5, r6, lr}
   145d4:	sub	sp, sp, #48	; 0x30
   145d8:	mov	r5, r2
   145dc:	mov	r6, r3
   145e0:	mov	r4, r0
   145e4:	mov	r0, sp
   145e8:	bl	12a3c <__lxstat64@plt+0x1c18>
   145ec:	mov	r3, sp
   145f0:	mov	r2, r6
   145f4:	mov	r1, r5
   145f8:	mov	r0, r4
   145fc:	bl	140a0 <__lxstat64@plt+0x327c>
   14600:	add	sp, sp, #48	; 0x30
   14604:	pop	{r4, r5, r6, pc}
   14608:	mov	r2, r1
   1460c:	mov	r1, r0
   14610:	mov	r0, #0
   14614:	b	1459c <__lxstat64@plt+0x3778>
   14618:	mov	r3, r2
   1461c:	mov	r2, r1
   14620:	mov	r1, r0
   14624:	mov	r0, #0
   14628:	b	145d0 <__lxstat64@plt+0x37ac>
   1462c:	push	{r4, r5, r6, r7, r8, lr}
   14630:	mov	r7, r0
   14634:	ldr	lr, [pc, #100]	; 146a0 <__lxstat64@plt+0x387c>
   14638:	mov	r8, r1
   1463c:	mov	r4, r2
   14640:	ldm	lr!, {r0, r1, r2, r3}
   14644:	sub	sp, sp, #48	; 0x30
   14648:	mov	ip, sp
   1464c:	lsr	r5, r4, #5
   14650:	stmia	ip!, {r0, r1, r2, r3}
   14654:	add	r6, sp, #8
   14658:	ldm	lr!, {r0, r1, r2, r3}
   1465c:	and	r4, r4, #31
   14660:	stmia	ip!, {r0, r1, r2, r3}
   14664:	ldm	lr, {r0, r1, r2, r3}
   14668:	stm	ip, {r0, r1, r2, r3}
   1466c:	mov	r2, r8
   14670:	ldr	lr, [r6, r5, lsl #2]
   14674:	mov	r1, r7
   14678:	mov	r3, sp
   1467c:	lsr	ip, lr, r4
   14680:	eor	ip, ip, #1
   14684:	and	ip, ip, #1
   14688:	mov	r0, #0
   1468c:	eor	r4, lr, ip, lsl r4
   14690:	str	r4, [r6, r5, lsl #2]
   14694:	bl	140a0 <__lxstat64@plt+0x327c>
   14698:	add	sp, sp, #48	; 0x30
   1469c:	pop	{r4, r5, r6, r7, r8, pc}
   146a0:	andeq	r8, r2, r4, asr r2
   146a4:	mov	r2, r1
   146a8:	mvn	r1, #0
   146ac:	b	1462c <__lxstat64@plt+0x3808>
   146b0:	mov	r2, #58	; 0x3a
   146b4:	mvn	r1, #0
   146b8:	b	1462c <__lxstat64@plt+0x3808>
   146bc:	mov	r2, #58	; 0x3a
   146c0:	b	1462c <__lxstat64@plt+0x3808>
   146c4:	push	{r4, r5, r6, r7, lr}
   146c8:	sub	sp, sp, #100	; 0x64
   146cc:	mov	r6, r0
   146d0:	mov	r0, sp
   146d4:	mov	r7, r2
   146d8:	bl	12a3c <__lxstat64@plt+0x1c18>
   146dc:	mov	ip, sp
   146e0:	add	lr, sp, #48	; 0x30
   146e4:	ldm	ip!, {r0, r1, r2, r3}
   146e8:	stmia	lr!, {r0, r1, r2, r3}
   146ec:	ldm	ip!, {r0, r1, r2, r3}
   146f0:	ldr	r5, [sp, #60]	; 0x3c
   146f4:	stmia	lr!, {r0, r1, r2, r3}
   146f8:	mvn	r4, r5
   146fc:	ldm	ip, {r0, r1, r2, r3}
   14700:	and	ip, r4, #67108864	; 0x4000000
   14704:	eor	ip, ip, r5
   14708:	str	ip, [sp, #60]	; 0x3c
   1470c:	stm	lr, {r0, r1, r2, r3}
   14710:	mov	r1, r7
   14714:	mov	r0, r6
   14718:	add	r3, sp, #48	; 0x30
   1471c:	mvn	r2, #0
   14720:	bl	140a0 <__lxstat64@plt+0x327c>
   14724:	add	sp, sp, #100	; 0x64
   14728:	pop	{r4, r5, r6, r7, pc}
   1472c:	push	{r4, r5, r6, r7, r8, lr}
   14730:	mov	r5, r1
   14734:	ldr	lr, [pc, #100]	; 147a0 <__lxstat64@plt+0x397c>
   14738:	mov	r4, r2
   1473c:	mov	r7, r0
   14740:	mov	r8, r3
   14744:	ldm	lr!, {r0, r1, r2, r3}
   14748:	sub	sp, sp, #48	; 0x30
   1474c:	mov	ip, sp
   14750:	mov	r6, #10
   14754:	stmia	ip!, {r0, r1, r2, r3}
   14758:	cmp	r4, #0
   1475c:	cmpne	r5, #0
   14760:	ldm	lr!, {r0, r1, r2, r3}
   14764:	str	r6, [sp]
   14768:	stmia	ip!, {r0, r1, r2, r3}
   1476c:	ldm	lr, {r0, r1, r2, r3}
   14770:	stm	ip, {r0, r1, r2, r3}
   14774:	beq	1479c <__lxstat64@plt+0x3978>
   14778:	mov	r3, sp
   1477c:	mov	r1, r8
   14780:	mov	r0, r7
   14784:	ldr	r2, [sp, #72]	; 0x48
   14788:	str	r5, [sp, #40]	; 0x28
   1478c:	str	r4, [sp, #44]	; 0x2c
   14790:	bl	140a0 <__lxstat64@plt+0x327c>
   14794:	add	sp, sp, #48	; 0x30
   14798:	pop	{r4, r5, r6, r7, r8, pc}
   1479c:	bl	10e18 <abort@plt>
   147a0:	andeq	r8, r2, r4, asr r2
   147a4:	push	{lr}		; (str lr, [sp, #-4]!)
   147a8:	sub	sp, sp, #12
   147ac:	mvn	ip, #0
   147b0:	str	ip, [sp]
   147b4:	bl	1472c <__lxstat64@plt+0x3908>
   147b8:	add	sp, sp, #12
   147bc:	pop	{pc}		; (ldr pc, [sp], #4)
   147c0:	push	{lr}		; (str lr, [sp, #-4]!)
   147c4:	sub	sp, sp, #12
   147c8:	mvn	ip, #0
   147cc:	mov	r3, r2
   147d0:	str	ip, [sp]
   147d4:	mov	r2, r1
   147d8:	mov	r1, r0
   147dc:	mov	r0, #0
   147e0:	bl	1472c <__lxstat64@plt+0x3908>
   147e4:	add	sp, sp, #12
   147e8:	pop	{pc}		; (ldr pc, [sp], #4)
   147ec:	push	{lr}		; (str lr, [sp, #-4]!)
   147f0:	sub	sp, sp, #12
   147f4:	str	r3, [sp]
   147f8:	mov	r3, r2
   147fc:	mov	r2, r1
   14800:	mov	r1, r0
   14804:	mov	r0, #0
   14808:	bl	1472c <__lxstat64@plt+0x3908>
   1480c:	add	sp, sp, #12
   14810:	pop	{pc}		; (ldr pc, [sp], #4)
   14814:	ldr	r3, [pc]	; 1481c <__lxstat64@plt+0x39f8>
   14818:	b	140a0 <__lxstat64@plt+0x327c>
   1481c:	strdeq	r8, [r2], -r4
   14820:	mov	r2, r1
   14824:	ldr	r3, [pc, #8]	; 14834 <__lxstat64@plt+0x3a10>
   14828:	mov	r1, r0
   1482c:	mov	r0, #0
   14830:	b	140a0 <__lxstat64@plt+0x327c>
   14834:	strdeq	r8, [r2], -r4
   14838:	ldr	r3, [pc, #4]	; 14844 <__lxstat64@plt+0x3a20>
   1483c:	mvn	r2, #0
   14840:	b	140a0 <__lxstat64@plt+0x327c>
   14844:	strdeq	r8, [r2], -r4
   14848:	mov	r1, r0
   1484c:	ldr	r3, [pc, #8]	; 1485c <__lxstat64@plt+0x3a38>
   14850:	mvn	r2, #0
   14854:	mov	r0, #0
   14858:	b	140a0 <__lxstat64@plt+0x327c>
   1485c:	strdeq	r8, [r2], -r4
   14860:	push	{r4, r5, lr}
   14864:	mov	r2, r0
   14868:	ldrb	r3, [r0]
   1486c:	ldrb	r0, [r1]
   14870:	cmp	r3, #45	; 0x2d
   14874:	beq	148d4 <__lxstat64@plt+0x3ab0>
   14878:	cmp	r0, #45	; 0x2d
   1487c:	beq	14910 <__lxstat64@plt+0x3aec>
   14880:	cmp	r3, #48	; 0x30
   14884:	beq	149d8 <__lxstat64@plt+0x3bb4>
   14888:	cmp	r0, #48	; 0x30
   1488c:	beq	149d0 <__lxstat64@plt+0x3bac>
   14890:	cmp	r3, r0
   14894:	subne	r5, r0, #48	; 0x30
   14898:	subne	r0, r3, r0
   1489c:	subne	r3, r3, #48	; 0x30
   148a0:	bne	149f4 <__lxstat64@plt+0x3bd0>
   148a4:	sub	r3, r3, #48	; 0x30
   148a8:	cmp	r3, #9
   148ac:	bhi	148cc <__lxstat64@plt+0x3aa8>
   148b0:	ldrb	r3, [r2, #1]!
   148b4:	ldrb	r0, [r1, #1]!
   148b8:	sub	ip, r3, #48	; 0x30
   148bc:	cmp	r3, r0
   148c0:	bne	149e8 <__lxstat64@plt+0x3bc4>
   148c4:	cmp	ip, #9
   148c8:	bls	148b0 <__lxstat64@plt+0x3a8c>
   148cc:	mov	r0, #0
   148d0:	pop	{r4, r5, pc}
   148d4:	ldrb	ip, [r2, #1]!
   148d8:	cmp	ip, #48	; 0x30
   148dc:	beq	148d4 <__lxstat64@plt+0x3ab0>
   148e0:	cmp	r0, #45	; 0x2d
   148e4:	beq	14944 <__lxstat64@plt+0x3b20>
   148e8:	sub	ip, ip, #48	; 0x30
   148ec:	cmp	ip, #9
   148f0:	bls	149c8 <__lxstat64@plt+0x3ba4>
   148f4:	cmp	r0, #48	; 0x30
   148f8:	beq	149e0 <__lxstat64@plt+0x3bbc>
   148fc:	sub	r0, r0, #48	; 0x30
   14900:	cmp	r0, #9
   14904:	movhi	r0, #0
   14908:	mvnls	r0, #0
   1490c:	pop	{r4, r5, pc}
   14910:	ldrb	r0, [r1, #1]!
   14914:	cmp	r0, #48	; 0x30
   14918:	beq	14910 <__lxstat64@plt+0x3aec>
   1491c:	sub	r0, r0, #48	; 0x30
   14920:	cmp	r0, #9
   14924:	bls	14a48 <__lxstat64@plt+0x3c24>
   14928:	cmp	r3, #48	; 0x30
   1492c:	beq	14a50 <__lxstat64@plt+0x3c2c>
   14930:	sub	r3, r3, #48	; 0x30
   14934:	cmp	r3, #9
   14938:	movhi	r0, #0
   1493c:	movls	r0, #1
   14940:	pop	{r4, r5, pc}
   14944:	ldrb	r5, [r1, #1]!
   14948:	cmp	r5, #48	; 0x30
   1494c:	bne	14964 <__lxstat64@plt+0x3b40>
   14950:	b	14944 <__lxstat64@plt+0x3b20>
   14954:	cmp	r3, #9
   14958:	bhi	14a64 <__lxstat64@plt+0x3c40>
   1495c:	ldrb	ip, [r2, #1]!
   14960:	ldrb	r5, [r1, #1]!
   14964:	cmp	ip, r5
   14968:	sub	r3, ip, #48	; 0x30
   1496c:	beq	14954 <__lxstat64@plt+0x3b30>
   14970:	cmp	r3, #9
   14974:	bhi	14a64 <__lxstat64@plt+0x3c40>
   14978:	mov	lr, r2
   1497c:	add	lr, lr, #1
   14980:	ldrb	r4, [lr]
   14984:	sub	r0, lr, r2
   14988:	sub	r4, r4, #48	; 0x30
   1498c:	cmp	r4, #9
   14990:	bls	1497c <__lxstat64@plt+0x3b58>
   14994:	sub	r3, r5, #48	; 0x30
   14998:	cmp	r3, #9
   1499c:	bhi	14a84 <__lxstat64@plt+0x3c60>
   149a0:	mov	r2, r1
   149a4:	add	r2, r2, #1
   149a8:	ldrb	lr, [r2]
   149ac:	sub	r3, r2, r1
   149b0:	sub	lr, lr, #48	; 0x30
   149b4:	cmp	lr, #9
   149b8:	bls	149a4 <__lxstat64@plt+0x3b80>
   149bc:	cmp	r3, r0
   149c0:	beq	14a78 <__lxstat64@plt+0x3c54>
   149c4:	bhi	14a48 <__lxstat64@plt+0x3c24>
   149c8:	mvn	r0, #0
   149cc:	pop	{r4, r5, pc}
   149d0:	ldrb	r0, [r1, #1]!
   149d4:	b	14888 <__lxstat64@plt+0x3a64>
   149d8:	ldrb	r3, [r2, #1]!
   149dc:	b	14880 <__lxstat64@plt+0x3a5c>
   149e0:	ldrb	r0, [r1, #1]!
   149e4:	b	148f4 <__lxstat64@plt+0x3ad0>
   149e8:	sub	r5, r0, #48	; 0x30
   149ec:	sub	r0, r3, r0
   149f0:	mov	r3, ip
   149f4:	cmp	r3, #9
   149f8:	bhi	14a9c <__lxstat64@plt+0x3c78>
   149fc:	mov	ip, r2
   14a00:	add	ip, ip, #1
   14a04:	ldrb	lr, [ip]
   14a08:	sub	r4, ip, r2
   14a0c:	sub	lr, lr, #48	; 0x30
   14a10:	cmp	lr, #9
   14a14:	bls	14a00 <__lxstat64@plt+0x3bdc>
   14a18:	cmp	r5, #9
   14a1c:	bhi	14a90 <__lxstat64@plt+0x3c6c>
   14a20:	mov	r2, r1
   14a24:	add	r2, r2, #1
   14a28:	ldrb	ip, [r2]
   14a2c:	sub	lr, r2, r1
   14a30:	sub	ip, ip, #48	; 0x30
   14a34:	cmp	ip, #9
   14a38:	bls	14a24 <__lxstat64@plt+0x3c00>
   14a3c:	cmp	lr, r4
   14a40:	beq	14a58 <__lxstat64@plt+0x3c34>
   14a44:	bhi	149c8 <__lxstat64@plt+0x3ba4>
   14a48:	mov	r0, #1
   14a4c:	pop	{r4, r5, pc}
   14a50:	ldrb	r3, [r2, #1]!
   14a54:	b	14928 <__lxstat64@plt+0x3b04>
   14a58:	cmp	r4, #0
   14a5c:	moveq	r0, #0
   14a60:	pop	{r4, r5, pc}
   14a64:	sub	r3, r5, #48	; 0x30
   14a68:	cmp	r3, #9
   14a6c:	mov	r0, #0
   14a70:	bls	149a0 <__lxstat64@plt+0x3b7c>
   14a74:	pop	{r4, r5, pc}
   14a78:	cmp	r0, #0
   14a7c:	subne	r0, r5, ip
   14a80:	pop	{r4, r5, pc}
   14a84:	adds	r0, r0, #0
   14a88:	mvnne	r0, #0
   14a8c:	pop	{r4, r5, pc}
   14a90:	adds	r0, r4, #0
   14a94:	movne	r0, #1
   14a98:	pop	{r4, r5, pc}
   14a9c:	cmp	r5, #9
   14aa0:	movls	r4, #0
   14aa4:	bls	14a20 <__lxstat64@plt+0x3bfc>
   14aa8:	b	148cc <__lxstat64@plt+0x3aa8>
   14aac:	push	{r4, r5, r6, r7, r8, lr}
   14ab0:	sub	sp, sp, #8
   14ab4:	mov	r6, r0
   14ab8:	mov	r7, r1
   14abc:	ldr	r0, [sp, #32]
   14ac0:	ldr	r1, [sp, #36]	; 0x24
   14ac4:	mov	r5, r2
   14ac8:	mov	r8, r3
   14acc:	bl	151d8 <__lxstat64@plt+0x43b4>
   14ad0:	subs	r4, r0, #0
   14ad4:	beq	14b34 <__lxstat64@plt+0x3d10>
   14ad8:	cmp	r5, #0
   14adc:	beq	14b10 <__lxstat64@plt+0x3cec>
   14ae0:	ldr	ip, [pc, #120]	; 14b60 <__lxstat64@plt+0x3d3c>
   14ae4:	mov	r0, r6
   14ae8:	str	r4, [sp, #4]
   14aec:	mov	r3, r8
   14af0:	mov	r2, r5
   14af4:	mov	r1, r7
   14af8:	str	ip, [sp]
   14afc:	bl	10cf8 <error_at_line@plt>
   14b00:	mov	r0, r4
   14b04:	add	sp, sp, #8
   14b08:	pop	{r4, r5, r6, r7, r8, lr}
   14b0c:	b	154c8 <__lxstat64@plt+0x46a4>
   14b10:	mov	r0, r6
   14b14:	mov	r1, r7
   14b18:	mov	r3, r4
   14b1c:	ldr	r2, [pc, #60]	; 14b60 <__lxstat64@plt+0x3d3c>
   14b20:	bl	10ce0 <error@plt>
   14b24:	mov	r0, r4
   14b28:	add	sp, sp, #8
   14b2c:	pop	{r4, r5, r6, r7, r8, lr}
   14b30:	b	154c8 <__lxstat64@plt+0x46a4>
   14b34:	bl	10d4c <__errno_location@plt>
   14b38:	mov	r2, #5
   14b3c:	ldr	r1, [pc, #32]	; 14b64 <__lxstat64@plt+0x3d40>
   14b40:	ldr	r5, [r0]
   14b44:	mov	r0, r4
   14b48:	bl	10c5c <dcgettext@plt>
   14b4c:	mov	r1, r5
   14b50:	mov	r2, r0
   14b54:	mov	r0, r4
   14b58:	bl	10ce0 <error@plt>
   14b5c:	bl	10e18 <abort@plt>
   14b60:	muleq	r1, ip, sp
   14b64:			; <UNDEFINED> instruction: 0x00016ebc
   14b68:	push	{lr}		; (str lr, [sp, #-4]!)
   14b6c:	sub	sp, sp, #12
   14b70:	str	r3, [sp, #4]
   14b74:	mov	r3, #0
   14b78:	str	r2, [sp]
   14b7c:	mov	r2, r3
   14b80:	bl	14aac <__lxstat64@plt+0x3c88>
   14b84:	add	sp, sp, #12
   14b88:	pop	{pc}		; (ldr pc, [sp], #4)
   14b8c:	push	{r4, lr}
   14b90:	bl	152c4 <__lxstat64@plt+0x44a0>
   14b94:	cmp	r0, #0
   14b98:	popne	{r4, pc}
   14b9c:	bl	150d4 <__lxstat64@plt+0x42b0>
   14ba0:	push	{r4, lr}
   14ba4:	bl	152c4 <__lxstat64@plt+0x44a0>
   14ba8:	cmp	r0, #0
   14bac:	popne	{r4, pc}
   14bb0:	bl	150d4 <__lxstat64@plt+0x42b0>
   14bb4:	push	{r4, lr}
   14bb8:	bl	152c4 <__lxstat64@plt+0x44a0>
   14bbc:	cmp	r0, #0
   14bc0:	popne	{r4, pc}
   14bc4:	bl	150d4 <__lxstat64@plt+0x42b0>
   14bc8:	push	{r4, r5, r6, lr}
   14bcc:	mov	r5, r0
   14bd0:	mov	r4, r1
   14bd4:	bl	152f0 <__lxstat64@plt+0x44cc>
   14bd8:	cmp	r0, #0
   14bdc:	popne	{r4, r5, r6, pc}
   14be0:	adds	r4, r4, #0
   14be4:	movne	r4, #1
   14be8:	cmp	r5, #0
   14bec:	orreq	r4, r4, #1
   14bf0:	cmp	r4, #0
   14bf4:	popeq	{r4, r5, r6, pc}
   14bf8:	bl	150d4 <__lxstat64@plt+0x42b0>
   14bfc:	push	{r4, lr}
   14c00:	cmp	r1, #0
   14c04:	orreq	r1, r1, #1
   14c08:	bl	152f0 <__lxstat64@plt+0x44cc>
   14c0c:	cmp	r0, #0
   14c10:	popne	{r4, pc}
   14c14:	bl	150d4 <__lxstat64@plt+0x42b0>
   14c18:	push	{r4, r5, r6, lr}
   14c1c:	mov	r6, r0
   14c20:	mov	r5, r1
   14c24:	mov	r4, r2
   14c28:	bl	15648 <__lxstat64@plt+0x4824>
   14c2c:	cmp	r0, #0
   14c30:	popne	{r4, r5, r6, pc}
   14c34:	cmp	r6, #0
   14c38:	beq	14c48 <__lxstat64@plt+0x3e24>
   14c3c:	cmp	r5, #0
   14c40:	cmpne	r4, #0
   14c44:	popeq	{r4, r5, r6, pc}
   14c48:	bl	150d4 <__lxstat64@plt+0x42b0>
   14c4c:	b	14c18 <__lxstat64@plt+0x3df4>
   14c50:	cmp	r2, #0
   14c54:	cmpne	r1, #0
   14c58:	moveq	r2, #1
   14c5c:	moveq	r1, r2
   14c60:	push	{r4, lr}
   14c64:	bl	15648 <__lxstat64@plt+0x4824>
   14c68:	cmp	r0, #0
   14c6c:	popne	{r4, pc}
   14c70:	bl	150d4 <__lxstat64@plt+0x42b0>
   14c74:	mov	r2, r1
   14c78:	mov	r1, r0
   14c7c:	mov	r0, #0
   14c80:	b	14c18 <__lxstat64@plt+0x3df4>
   14c84:	mov	r2, r1
   14c88:	mov	r1, r0
   14c8c:	mov	r0, #0
   14c90:	b	14c50 <__lxstat64@plt+0x3e2c>
   14c94:	push	{r4, r5, r6, lr}
   14c98:	subs	r6, r0, #0
   14c9c:	sub	sp, sp, #8
   14ca0:	mov	r5, r1
   14ca4:	ldr	r4, [r1]
   14ca8:	beq	14ce4 <__lxstat64@plt+0x3ec0>
   14cac:	lsr	r1, r4, #1
   14cb0:	add	r3, r1, #1
   14cb4:	mvn	r3, r3
   14cb8:	cmp	r4, r3
   14cbc:	bhi	14ce0 <__lxstat64@plt+0x3ebc>
   14cc0:	add	r4, r4, #1
   14cc4:	add	r4, r4, r1
   14cc8:	mov	r0, r6
   14ccc:	mov	r1, r4
   14cd0:	bl	14c18 <__lxstat64@plt+0x3df4>
   14cd4:	str	r4, [r5]
   14cd8:	add	sp, sp, #8
   14cdc:	pop	{r4, r5, r6, pc}
   14ce0:	bl	150d4 <__lxstat64@plt+0x42b0>
   14ce4:	cmp	r4, #0
   14ce8:	bne	14cc8 <__lxstat64@plt+0x3ea4>
   14cec:	mov	r1, r2
   14cf0:	mov	r0, #64	; 0x40
   14cf4:	str	r2, [sp, #4]
   14cf8:	bl	15788 <__lxstat64@plt+0x4964>
   14cfc:	ldr	r2, [sp, #4]
   14d00:	cmp	r0, #0
   14d04:	movne	r4, r0
   14d08:	addeq	r4, r0, #1
   14d0c:	b	14cc8 <__lxstat64@plt+0x3ea4>
   14d10:	mov	r2, #1
   14d14:	b	14c94 <__lxstat64@plt+0x3e70>
   14d18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14d1c:	sub	sp, sp, #12
   14d20:	ldr	r6, [r1]
   14d24:	mov	sl, r1
   14d28:	mov	r9, r0
   14d2c:	asrs	r4, r6, #1
   14d30:	mov	r5, r2
   14d34:	mov	fp, r3
   14d38:	ldr	r7, [sp, #48]	; 0x30
   14d3c:	bmi	14ea8 <__lxstat64@plt+0x4084>
   14d40:	mvn	r3, #-2147483648	; 0x80000000
   14d44:	sub	r3, r3, r4
   14d48:	cmp	r6, r3
   14d4c:	movle	r3, #0
   14d50:	movgt	r3, #1
   14d54:	mvn	r8, fp
   14d58:	cmp	r3, #0
   14d5c:	addeq	r4, r4, r6
   14d60:	mvnne	r4, #-2147483648	; 0x80000000
   14d64:	lsr	r8, r8, #31
   14d68:	cmp	fp, r4
   14d6c:	movge	r3, #0
   14d70:	andlt	r3, r8, #1
   14d74:	cmp	r3, #0
   14d78:	beq	14e60 <__lxstat64@plt+0x403c>
   14d7c:	cmp	r7, #0
   14d80:	blt	14f30 <__lxstat64@plt+0x410c>
   14d84:	bne	14f28 <__lxstat64@plt+0x4104>
   14d88:	mov	r2, #64	; 0x40
   14d8c:	mov	r1, r7
   14d90:	mov	r0, r2
   14d94:	str	r2, [sp, #4]
   14d98:	bl	15994 <__lxstat64@plt+0x4b70>
   14d9c:	ldr	r2, [sp, #4]
   14da0:	mov	r1, r7
   14da4:	mov	r4, r0
   14da8:	mov	r0, r2
   14dac:	bl	15bb4 <__lxstat64@plt+0x4d90>
   14db0:	ldr	r2, [sp, #4]
   14db4:	sub	r1, r2, r1
   14db8:	cmp	r9, #0
   14dbc:	sub	r3, r4, r6
   14dc0:	streq	r9, [sl]
   14dc4:	cmp	r3, r5
   14dc8:	bge	14e4c <__lxstat64@plt+0x4028>
   14dcc:	cmp	r5, #0
   14dd0:	blt	14ebc <__lxstat64@plt+0x4098>
   14dd4:	cmp	r6, #0
   14dd8:	blt	14df8 <__lxstat64@plt+0x3fd4>
   14ddc:	mvn	r3, #-2147483648	; 0x80000000
   14de0:	sub	r3, r3, r5
   14de4:	cmp	r6, r3
   14de8:	movle	r3, #0
   14dec:	movgt	r3, #1
   14df0:	cmp	r3, #0
   14df4:	bne	14fb8 <__lxstat64@plt+0x4194>
   14df8:	add	r5, r6, r5
   14dfc:	cmp	fp, r5
   14e00:	movge	r8, #0
   14e04:	andlt	r8, r8, #1
   14e08:	cmp	r8, #0
   14e0c:	mov	r4, r5
   14e10:	bne	14fb8 <__lxstat64@plt+0x4194>
   14e14:	cmp	r7, #0
   14e18:	blt	14ed0 <__lxstat64@plt+0x40ac>
   14e1c:	beq	14e48 <__lxstat64@plt+0x4024>
   14e20:	cmp	r5, #0
   14e24:	blt	14f78 <__lxstat64@plt+0x4154>
   14e28:	mov	r1, r7
   14e2c:	mvn	r0, #-2147483648	; 0x80000000
   14e30:	bl	15994 <__lxstat64@plt+0x4b70>
   14e34:	cmp	r5, r0
   14e38:	movle	r0, #0
   14e3c:	movgt	r0, #1
   14e40:	cmp	r0, #0
   14e44:	bne	14fb8 <__lxstat64@plt+0x4194>
   14e48:	mul	r1, r5, r7
   14e4c:	mov	r0, r9
   14e50:	bl	14bc8 <__lxstat64@plt+0x3da4>
   14e54:	str	r4, [sl]
   14e58:	add	sp, sp, #12
   14e5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e60:	cmp	r7, #0
   14e64:	blt	14efc <__lxstat64@plt+0x40d8>
   14e68:	beq	14d88 <__lxstat64@plt+0x3f64>
   14e6c:	cmp	r4, #0
   14e70:	blt	14f38 <__lxstat64@plt+0x4114>
   14e74:	mov	r1, r7
   14e78:	mvn	r0, #-2147483648	; 0x80000000
   14e7c:	bl	15994 <__lxstat64@plt+0x4b70>
   14e80:	cmp	r0, r4
   14e84:	movge	r0, #0
   14e88:	movlt	r0, #1
   14e8c:	cmp	r0, #0
   14e90:	mvnne	r2, #-2147483648	; 0x80000000
   14e94:	bne	14d8c <__lxstat64@plt+0x3f68>
   14e98:	mul	r1, r7, r4
   14e9c:	cmp	r1, #63	; 0x3f
   14ea0:	bgt	14db8 <__lxstat64@plt+0x3f94>
   14ea4:	b	14d88 <__lxstat64@plt+0x3f64>
   14ea8:	rsb	r3, r4, #-2147483648	; 0x80000000
   14eac:	cmp	r6, r3
   14eb0:	movge	r3, #0
   14eb4:	movlt	r3, #1
   14eb8:	b	14d54 <__lxstat64@plt+0x3f30>
   14ebc:	rsb	r3, r5, #-2147483648	; 0x80000000
   14ec0:	cmp	r6, r3
   14ec4:	movge	r3, #0
   14ec8:	movlt	r3, #1
   14ecc:	b	14df0 <__lxstat64@plt+0x3fcc>
   14ed0:	cmp	r5, #0
   14ed4:	blt	14f5c <__lxstat64@plt+0x4138>
   14ed8:	cmn	r7, #1
   14edc:	beq	14e48 <__lxstat64@plt+0x4024>
   14ee0:	mov	r1, r7
   14ee4:	mov	r0, #-2147483648	; 0x80000000
   14ee8:	bl	15994 <__lxstat64@plt+0x4b70>
   14eec:	cmp	r5, r0
   14ef0:	movle	r0, #0
   14ef4:	movgt	r0, #1
   14ef8:	b	14e40 <__lxstat64@plt+0x401c>
   14efc:	cmp	r4, #0
   14f00:	blt	14f9c <__lxstat64@plt+0x4178>
   14f04:	cmn	r7, #1
   14f08:	beq	14e98 <__lxstat64@plt+0x4074>
   14f0c:	mov	r1, r7
   14f10:	mov	r0, #-2147483648	; 0x80000000
   14f14:	bl	15994 <__lxstat64@plt+0x4b70>
   14f18:	cmp	r0, r4
   14f1c:	movge	r0, #0
   14f20:	movlt	r0, #1
   14f24:	b	14e8c <__lxstat64@plt+0x4068>
   14f28:	mov	r4, fp
   14f2c:	b	14e74 <__lxstat64@plt+0x4050>
   14f30:	mov	r4, fp
   14f34:	b	14f04 <__lxstat64@plt+0x40e0>
   14f38:	cmn	r4, #1
   14f3c:	beq	14e98 <__lxstat64@plt+0x4074>
   14f40:	mov	r1, r4
   14f44:	mov	r0, #-2147483648	; 0x80000000
   14f48:	bl	15994 <__lxstat64@plt+0x4b70>
   14f4c:	cmp	r7, r0
   14f50:	movle	r0, #0
   14f54:	movgt	r0, #1
   14f58:	b	14e8c <__lxstat64@plt+0x4068>
   14f5c:	mov	r1, r7
   14f60:	mvn	r0, #-2147483648	; 0x80000000
   14f64:	bl	15994 <__lxstat64@plt+0x4b70>
   14f68:	cmp	r5, r0
   14f6c:	movge	r0, #0
   14f70:	movlt	r0, #1
   14f74:	b	14e40 <__lxstat64@plt+0x401c>
   14f78:	cmn	r5, #1
   14f7c:	beq	14e48 <__lxstat64@plt+0x4024>
   14f80:	mov	r1, r5
   14f84:	mov	r0, #-2147483648	; 0x80000000
   14f88:	bl	15994 <__lxstat64@plt+0x4b70>
   14f8c:	cmp	r7, r0
   14f90:	movle	r0, #0
   14f94:	movgt	r0, #1
   14f98:	b	14e40 <__lxstat64@plt+0x401c>
   14f9c:	mov	r1, r7
   14fa0:	mvn	r0, #-2147483648	; 0x80000000
   14fa4:	bl	15994 <__lxstat64@plt+0x4b70>
   14fa8:	cmp	r0, r4
   14fac:	movle	r0, #0
   14fb0:	movgt	r0, #1
   14fb4:	b	14e8c <__lxstat64@plt+0x4068>
   14fb8:	bl	150d4 <__lxstat64@plt+0x42b0>
   14fbc:	push	{r4, lr}
   14fc0:	mov	r1, #1
   14fc4:	bl	1527c <__lxstat64@plt+0x4458>
   14fc8:	cmp	r0, #0
   14fcc:	popne	{r4, pc}
   14fd0:	bl	150d4 <__lxstat64@plt+0x42b0>
   14fd4:	push	{r4, lr}
   14fd8:	mov	r1, #1
   14fdc:	bl	1527c <__lxstat64@plt+0x4458>
   14fe0:	cmp	r0, #0
   14fe4:	popne	{r4, pc}
   14fe8:	bl	150d4 <__lxstat64@plt+0x42b0>
   14fec:	push	{r4, lr}
   14ff0:	bl	1527c <__lxstat64@plt+0x4458>
   14ff4:	cmp	r0, #0
   14ff8:	popne	{r4, pc}
   14ffc:	bl	150d4 <__lxstat64@plt+0x42b0>
   15000:	push	{r4, lr}
   15004:	bl	1527c <__lxstat64@plt+0x4458>
   15008:	cmp	r0, #0
   1500c:	popne	{r4, pc}
   15010:	bl	150d4 <__lxstat64@plt+0x42b0>
   15014:	push	{r4, r5, r6, lr}
   15018:	mov	r6, r0
   1501c:	mov	r0, r1
   15020:	mov	r4, r1
   15024:	bl	152c4 <__lxstat64@plt+0x44a0>
   15028:	subs	r5, r0, #0
   1502c:	beq	15044 <__lxstat64@plt+0x4220>
   15030:	mov	r2, r4
   15034:	mov	r1, r6
   15038:	bl	10c38 <memcpy@plt>
   1503c:	mov	r0, r5
   15040:	pop	{r4, r5, r6, pc}
   15044:	bl	150d4 <__lxstat64@plt+0x42b0>
   15048:	push	{r4, r5, r6, lr}
   1504c:	mov	r6, r0
   15050:	mov	r0, r1
   15054:	mov	r4, r1
   15058:	bl	152c4 <__lxstat64@plt+0x44a0>
   1505c:	subs	r5, r0, #0
   15060:	beq	15078 <__lxstat64@plt+0x4254>
   15064:	mov	r2, r4
   15068:	mov	r1, r6
   1506c:	bl	10c38 <memcpy@plt>
   15070:	mov	r0, r5
   15074:	pop	{r4, r5, r6, pc}
   15078:	bl	150d4 <__lxstat64@plt+0x42b0>
   1507c:	push	{r4, r5, r6, lr}
   15080:	mov	r6, r0
   15084:	add	r0, r1, #1
   15088:	mov	r4, r1
   1508c:	bl	152c4 <__lxstat64@plt+0x44a0>
   15090:	subs	r5, r0, #0
   15094:	beq	150b4 <__lxstat64@plt+0x4290>
   15098:	mov	r3, #0
   1509c:	mov	r1, r6
   150a0:	strb	r3, [r5, r4]
   150a4:	mov	r2, r4
   150a8:	bl	10c38 <memcpy@plt>
   150ac:	mov	r0, r5
   150b0:	pop	{r4, r5, r6, pc}
   150b4:	bl	150d4 <__lxstat64@plt+0x42b0>
   150b8:	push	{r4, lr}
   150bc:	mov	r4, r0
   150c0:	bl	10d40 <strlen@plt>
   150c4:	add	r1, r0, #1
   150c8:	mov	r0, r4
   150cc:	pop	{r4, lr}
   150d0:	b	15014 <__lxstat64@plt+0x41f0>
   150d4:	ldr	r3, [pc, #44]	; 15108 <__lxstat64@plt+0x42e4>
   150d8:	push	{r4, lr}
   150dc:	mov	r2, #5
   150e0:	ldr	r1, [pc, #36]	; 1510c <__lxstat64@plt+0x42e8>
   150e4:	mov	r0, #0
   150e8:	ldr	r4, [r3]
   150ec:	bl	10c5c <dcgettext@plt>
   150f0:	ldr	r2, [pc, #24]	; 15110 <__lxstat64@plt+0x42ec>
   150f4:	mov	r1, #0
   150f8:	mov	r3, r0
   150fc:	mov	r0, r4
   15100:	bl	10ce0 <error@plt>
   15104:	bl	10e18 <abort@plt>
   15108:	andeq	r8, r2, r0, ror #1
   1510c:	ldrdeq	r6, [r1], -ip
   15110:	muleq	r1, ip, sp
   15114:	push	{r4, r5, r6, r7, r8, r9, lr}
   15118:	sub	sp, sp, #12
   1511c:	subs	r7, r0, #0
   15120:	str	r1, [sp, #4]
   15124:	beq	151c4 <__lxstat64@plt+0x43a0>
   15128:	mov	r9, r1
   1512c:	mov	r5, r1
   15130:	mov	r6, r7
   15134:	mov	r4, #0
   15138:	add	r5, r5, #4
   1513c:	str	r5, [sp, #4]
   15140:	ldr	r0, [r5, #-4]
   15144:	bl	10d40 <strlen@plt>
   15148:	adds	r4, r0, r4
   1514c:	mvncs	r4, #0
   15150:	subs	r6, r6, #1
   15154:	bne	15138 <__lxstat64@plt+0x4314>
   15158:	cmp	r4, #0
   1515c:	blt	151b4 <__lxstat64@plt+0x4390>
   15160:	add	r0, r4, #1
   15164:	bl	14b8c <__lxstat64@plt+0x3d68>
   15168:	sub	r9, r9, #4
   1516c:	mov	r6, r0
   15170:	mov	r4, r0
   15174:	ldr	r8, [r9, #4]!
   15178:	mov	r0, r8
   1517c:	bl	10d40 <strlen@plt>
   15180:	mov	r1, r8
   15184:	mov	r5, r0
   15188:	mov	r2, r0
   1518c:	mov	r0, r4
   15190:	bl	10c38 <memcpy@plt>
   15194:	subs	r7, r7, #1
   15198:	add	r4, r4, r5
   1519c:	bne	15174 <__lxstat64@plt+0x4350>
   151a0:	mov	r3, #0
   151a4:	strb	r3, [r4]
   151a8:	mov	r0, r6
   151ac:	add	sp, sp, #12
   151b0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   151b4:	bl	10d4c <__errno_location@plt>
   151b8:	mov	r3, #75	; 0x4b
   151bc:	str	r3, [r0]
   151c0:	b	151a8 <__lxstat64@plt+0x4384>
   151c4:	mov	r0, #1
   151c8:	bl	14b8c <__lxstat64@plt+0x3d68>
   151cc:	mov	r4, r0
   151d0:	mov	r6, r0
   151d4:	b	151a0 <__lxstat64@plt+0x437c>
   151d8:	push	{r4, lr}
   151dc:	sub	sp, sp, #8
   151e0:	ldrb	r4, [r0]
   151e4:	cmp	r4, #0
   151e8:	beq	15234 <__lxstat64@plt+0x4410>
   151ec:	cmp	r4, #37	; 0x25
   151f0:	bne	15244 <__lxstat64@plt+0x4420>
   151f4:	ldrb	r3, [r0, #1]
   151f8:	cmp	r3, #115	; 0x73
   151fc:	bne	15244 <__lxstat64@plt+0x4420>
   15200:	mov	ip, r0
   15204:	mov	r4, #0
   15208:	b	15224 <__lxstat64@plt+0x4400>
   1520c:	cmp	lr, #37	; 0x25
   15210:	bne	15244 <__lxstat64@plt+0x4420>
   15214:	add	ip, ip, #2
   15218:	ldrb	lr, [ip, #1]
   1521c:	cmp	lr, #115	; 0x73
   15220:	bne	15244 <__lxstat64@plt+0x4420>
   15224:	ldrb	lr, [ip, #2]
   15228:	add	r4, r4, #1
   1522c:	cmp	lr, #0
   15230:	bne	1520c <__lxstat64@plt+0x43e8>
   15234:	mov	r0, r4
   15238:	bl	15114 <__lxstat64@plt+0x42f0>
   1523c:	add	sp, sp, #8
   15240:	pop	{r4, pc}
   15244:	mov	r3, r1
   15248:	mov	r2, r0
   1524c:	mov	r1, #1
   15250:	add	r0, sp, #4
   15254:	bl	10d64 <__vasprintf_chk@plt>
   15258:	cmp	r0, #0
   1525c:	ldrge	r0, [sp, #4]
   15260:	bge	1523c <__lxstat64@plt+0x4418>
   15264:	bl	10d4c <__errno_location@plt>
   15268:	ldr	r3, [r0]
   1526c:	cmp	r3, #12
   15270:	movne	r0, #0
   15274:	bne	1523c <__lxstat64@plt+0x4418>
   15278:	bl	150d4 <__lxstat64@plt+0x42b0>
   1527c:	cmp	r1, #0
   15280:	cmpne	r0, #0
   15284:	moveq	r1, #1
   15288:	moveq	r0, r1
   1528c:	umull	r2, r3, r0, r1
   15290:	adds	r3, r3, #0
   15294:	movne	r3, #1
   15298:	cmp	r2, #0
   1529c:	blt	152ac <__lxstat64@plt+0x4488>
   152a0:	cmp	r3, #0
   152a4:	bne	152ac <__lxstat64@plt+0x4488>
   152a8:	b	10bd8 <calloc@plt>
   152ac:	push	{r4, lr}
   152b0:	bl	10d4c <__errno_location@plt>
   152b4:	mov	r3, #12
   152b8:	str	r3, [r0]
   152bc:	mov	r0, #0
   152c0:	pop	{r4, pc}
   152c4:	cmp	r0, #0
   152c8:	moveq	r0, #1
   152cc:	cmp	r0, #0
   152d0:	blt	152d8 <__lxstat64@plt+0x44b4>
   152d4:	b	10cec <malloc@plt>
   152d8:	push	{r4, lr}
   152dc:	bl	10d4c <__errno_location@plt>
   152e0:	mov	r3, #12
   152e4:	str	r3, [r0]
   152e8:	mov	r0, #0
   152ec:	pop	{r4, pc}
   152f0:	cmp	r0, #0
   152f4:	beq	15318 <__lxstat64@plt+0x44f4>
   152f8:	cmp	r1, #0
   152fc:	push	{lr}		; (str lr, [sp, #-4]!)
   15300:	sub	sp, sp, #12
   15304:	beq	15320 <__lxstat64@plt+0x44fc>
   15308:	blt	15338 <__lxstat64@plt+0x4514>
   1530c:	add	sp, sp, #12
   15310:	pop	{lr}		; (ldr lr, [sp], #4)
   15314:	b	10c68 <realloc@plt>
   15318:	mov	r0, r1
   1531c:	b	152c4 <__lxstat64@plt+0x44a0>
   15320:	str	r1, [sp, #4]
   15324:	bl	154c8 <__lxstat64@plt+0x46a4>
   15328:	ldr	r3, [sp, #4]
   1532c:	mov	r0, r3
   15330:	add	sp, sp, #12
   15334:	pop	{pc}		; (ldr pc, [sp], #4)
   15338:	bl	10d4c <__errno_location@plt>
   1533c:	mov	r2, #12
   15340:	mov	r3, #0
   15344:	str	r2, [r0]
   15348:	b	1532c <__lxstat64@plt+0x4508>
   1534c:	push	{r4, r5, r6, lr}
   15350:	mov	r4, r0
   15354:	bl	10cc8 <__fpending@plt>
   15358:	ldr	r5, [r4]
   1535c:	and	r5, r5, #32
   15360:	mov	r6, r0
   15364:	mov	r0, r4
   15368:	bl	153c8 <__lxstat64@plt+0x45a4>
   1536c:	cmp	r5, #0
   15370:	mov	r4, r0
   15374:	bne	15394 <__lxstat64@plt+0x4570>
   15378:	cmp	r0, #0
   1537c:	beq	1538c <__lxstat64@plt+0x4568>
   15380:	cmp	r6, #0
   15384:	beq	153b0 <__lxstat64@plt+0x458c>
   15388:	mvn	r4, #0
   1538c:	mov	r0, r4
   15390:	pop	{r4, r5, r6, pc}
   15394:	cmp	r0, #0
   15398:	bne	15388 <__lxstat64@plt+0x4564>
   1539c:	bl	10d4c <__errno_location@plt>
   153a0:	str	r4, [r0]
   153a4:	mvn	r4, #0
   153a8:	mov	r0, r4
   153ac:	pop	{r4, r5, r6, pc}
   153b0:	bl	10d4c <__errno_location@plt>
   153b4:	ldr	r4, [r0]
   153b8:	subs	r4, r4, #9
   153bc:	mvnne	r4, #0
   153c0:	mov	r0, r4
   153c4:	pop	{r4, r5, r6, pc}
   153c8:	push	{r4, r5, lr}
   153cc:	sub	sp, sp, #12
   153d0:	mov	r4, r0
   153d4:	bl	10d88 <fileno@plt>
   153d8:	cmp	r0, #0
   153dc:	mov	r0, r4
   153e0:	blt	1545c <__lxstat64@plt+0x4638>
   153e4:	bl	10d10 <__freading@plt>
   153e8:	cmp	r0, #0
   153ec:	bne	15428 <__lxstat64@plt+0x4604>
   153f0:	mov	r0, r4
   153f4:	bl	15468 <__lxstat64@plt+0x4644>
   153f8:	cmp	r0, #0
   153fc:	beq	15458 <__lxstat64@plt+0x4634>
   15400:	bl	10d4c <__errno_location@plt>
   15404:	mov	r5, r0
   15408:	mov	r0, r4
   1540c:	ldr	r4, [r5]
   15410:	bl	10da0 <fclose@plt>
   15414:	cmp	r4, #0
   15418:	mvnne	r0, #0
   1541c:	strne	r4, [r5]
   15420:	add	sp, sp, #12
   15424:	pop	{r4, r5, pc}
   15428:	mov	r0, r4
   1542c:	bl	10d88 <fileno@plt>
   15430:	mov	r3, #1
   15434:	str	r3, [sp]
   15438:	mov	r2, #0
   1543c:	mov	r3, #0
   15440:	bl	10cb0 <lseek64@plt>
   15444:	mvn	r3, #0
   15448:	mvn	r2, #0
   1544c:	cmp	r1, r3
   15450:	cmpeq	r0, r2
   15454:	bne	153f0 <__lxstat64@plt+0x45cc>
   15458:	mov	r0, r4
   1545c:	add	sp, sp, #12
   15460:	pop	{r4, r5, lr}
   15464:	b	10da0 <fclose@plt>
   15468:	push	{r4, lr}
   1546c:	subs	r4, r0, #0
   15470:	sub	sp, sp, #8
   15474:	beq	15490 <__lxstat64@plt+0x466c>
   15478:	bl	10d10 <__freading@plt>
   1547c:	cmp	r0, #0
   15480:	beq	15490 <__lxstat64@plt+0x466c>
   15484:	ldr	r3, [r4]
   15488:	tst	r3, #256	; 0x100
   1548c:	bne	154a0 <__lxstat64@plt+0x467c>
   15490:	mov	r0, r4
   15494:	add	sp, sp, #8
   15498:	pop	{r4, lr}
   1549c:	b	10c14 <fflush@plt>
   154a0:	mov	r3, #1
   154a4:	str	r3, [sp]
   154a8:	mov	r2, #0
   154ac:	mov	r3, #0
   154b0:	mov	r0, r4
   154b4:	bl	15520 <__lxstat64@plt+0x46fc>
   154b8:	mov	r0, r4
   154bc:	add	sp, sp, #8
   154c0:	pop	{r4, lr}
   154c4:	b	10c14 <fflush@plt>
   154c8:	push	{r4, r5, lr}
   154cc:	sub	sp, sp, #12
   154d0:	mov	r5, r0
   154d4:	bl	10d4c <__errno_location@plt>
   154d8:	mov	r2, #0
   154dc:	mov	r4, r0
   154e0:	ldr	r3, [r0]
   154e4:	str	r2, [r4]
   154e8:	mov	r0, r5
   154ec:	str	r3, [sp]
   154f0:	str	r3, [sp, #4]
   154f4:	bl	10c20 <free@plt>
   154f8:	ldr	r3, [r4]
   154fc:	add	r2, sp, #8
   15500:	cmp	r3, #0
   15504:	moveq	r3, #4
   15508:	movne	r3, #0
   1550c:	add	r3, r2, r3
   15510:	ldr	r3, [r3, #-8]
   15514:	str	r3, [r4]
   15518:	add	sp, sp, #12
   1551c:	pop	{r4, r5, pc}
   15520:	push	{r4, r5, r6, r7, r8, lr}
   15524:	sub	sp, sp, #8
   15528:	ldmib	r0, {ip, lr}
   1552c:	mov	r4, r0
   15530:	ldr	r5, [sp, #32]
   15534:	cmp	lr, ip
   15538:	beq	15550 <__lxstat64@plt+0x472c>
   1553c:	str	r5, [sp, #32]
   15540:	mov	r0, r4
   15544:	add	sp, sp, #8
   15548:	pop	{r4, r5, r6, r7, r8, lr}
   1554c:	b	10dac <fseeko64@plt>
   15550:	ldr	lr, [r0, #20]
   15554:	ldr	ip, [r0, #16]
   15558:	cmp	lr, ip
   1555c:	bne	1553c <__lxstat64@plt+0x4718>
   15560:	ldr	r8, [r0, #36]	; 0x24
   15564:	cmp	r8, #0
   15568:	bne	1553c <__lxstat64@plt+0x4718>
   1556c:	mov	r6, r2
   15570:	mov	r7, r3
   15574:	bl	10d88 <fileno@plt>
   15578:	mov	r2, r6
   1557c:	mov	r3, r7
   15580:	str	r5, [sp]
   15584:	bl	10cb0 <lseek64@plt>
   15588:	mvn	r3, #0
   1558c:	mvn	r2, #0
   15590:	cmp	r1, r3
   15594:	cmpeq	r0, r2
   15598:	beq	155b8 <__lxstat64@plt+0x4794>
   1559c:	ldr	r3, [r4]
   155a0:	strd	r0, [r4, #80]	; 0x50
   155a4:	mov	r0, r8
   155a8:	bic	r3, r3, #16
   155ac:	str	r3, [r4]
   155b0:	add	sp, sp, #8
   155b4:	pop	{r4, r5, r6, r7, r8, pc}
   155b8:	mvn	r0, #0
   155bc:	b	155b0 <__lxstat64@plt+0x478c>
   155c0:	push	{r4, lr}
   155c4:	mov	r0, #14
   155c8:	bl	10dd0 <nl_langinfo@plt>
   155cc:	cmp	r0, #0
   155d0:	beq	155e8 <__lxstat64@plt+0x47c4>
   155d4:	ldrb	r2, [r0]
   155d8:	ldr	r3, [pc, #16]	; 155f0 <__lxstat64@plt+0x47cc>
   155dc:	cmp	r2, #0
   155e0:	moveq	r0, r3
   155e4:	pop	{r4, pc}
   155e8:	ldr	r0, [pc]	; 155f0 <__lxstat64@plt+0x47cc>
   155ec:	pop	{r4, pc}
   155f0:	strdeq	r6, [r1], -r0
   155f4:	push	{r4, r5, r6, r7, lr}
   155f8:	subs	r6, r0, #0
   155fc:	sub	sp, sp, #12
   15600:	addeq	r6, sp, #4
   15604:	mov	r0, r6
   15608:	mov	r5, r2
   1560c:	mov	r7, r1
   15610:	bl	10cd4 <mbrtowc@plt>
   15614:	cmp	r5, #0
   15618:	cmnne	r0, #3
   1561c:	mov	r4, r0
   15620:	bls	1563c <__lxstat64@plt+0x4818>
   15624:	mov	r0, #0
   15628:	bl	15694 <__lxstat64@plt+0x4870>
   1562c:	cmp	r0, #0
   15630:	moveq	r4, #1
   15634:	ldrbeq	r3, [r7]
   15638:	streq	r3, [r6]
   1563c:	mov	r0, r4
   15640:	add	sp, sp, #12
   15644:	pop	{r4, r5, r6, r7, pc}
   15648:	push	{r4, r5, r6, lr}
   1564c:	subs	r4, r2, #0
   15650:	mov	r6, r0
   15654:	mov	r5, r1
   15658:	beq	15684 <__lxstat64@plt+0x4860>
   1565c:	mov	r1, r4
   15660:	mvn	r0, #0
   15664:	bl	15788 <__lxstat64@plt+0x4964>
   15668:	cmp	r0, r5
   1566c:	bcs	15684 <__lxstat64@plt+0x4860>
   15670:	bl	10d4c <__errno_location@plt>
   15674:	mov	r3, #12
   15678:	str	r3, [r0]
   1567c:	mov	r0, #0
   15680:	pop	{r4, r5, r6, pc}
   15684:	mul	r1, r5, r4
   15688:	mov	r0, r6
   1568c:	pop	{r4, r5, r6, lr}
   15690:	b	152f0 <__lxstat64@plt+0x44cc>
   15694:	push	{lr}		; (str lr, [sp, #-4]!)
   15698:	sub	sp, sp, #268	; 0x10c
   1569c:	add	r1, sp, #4
   156a0:	ldr	r2, [pc, #60]	; 156e4 <__lxstat64@plt+0x48c0>
   156a4:	bl	156f0 <__lxstat64@plt+0x48cc>
   156a8:	cmp	r0, #0
   156ac:	movne	r0, #0
   156b0:	bne	156dc <__lxstat64@plt+0x48b8>
   156b4:	ldr	r1, [pc, #44]	; 156e8 <__lxstat64@plt+0x48c4>
   156b8:	add	r0, sp, #4
   156bc:	bl	10bfc <strcmp@plt>
   156c0:	cmp	r0, #0
   156c4:	beq	156dc <__lxstat64@plt+0x48b8>
   156c8:	add	r0, sp, #4
   156cc:	ldr	r1, [pc, #24]	; 156ec <__lxstat64@plt+0x48c8>
   156d0:	bl	10bfc <strcmp@plt>
   156d4:	adds	r0, r0, #0
   156d8:	movne	r0, #1
   156dc:	add	sp, sp, #268	; 0x10c
   156e0:	pop	{pc}		; (ldr pc, [sp], #4)
   156e4:	andeq	r0, r0, r1, lsl #2
   156e8:	strdeq	r6, [r1], -r8
   156ec:	strdeq	r6, [r1], -ip
   156f0:	push	{r4, r5, r6, lr}
   156f4:	mov	r5, r1
   156f8:	mov	r1, #0
   156fc:	mov	r4, r2
   15700:	bl	10db8 <setlocale@plt>
   15704:	subs	r6, r0, #0
   15708:	beq	15764 <__lxstat64@plt+0x4940>
   1570c:	bl	10d40 <strlen@plt>
   15710:	cmp	r4, r0
   15714:	bhi	1574c <__lxstat64@plt+0x4928>
   15718:	cmp	r4, #0
   1571c:	bne	15728 <__lxstat64@plt+0x4904>
   15720:	mov	r0, #34	; 0x22
   15724:	pop	{r4, r5, r6, pc}
   15728:	sub	r4, r4, #1
   1572c:	mov	r1, r6
   15730:	mov	r2, r4
   15734:	mov	r0, r5
   15738:	bl	10c38 <memcpy@plt>
   1573c:	mov	r3, #0
   15740:	strb	r3, [r5, r4]
   15744:	mov	r0, #34	; 0x22
   15748:	pop	{r4, r5, r6, pc}
   1574c:	add	r2, r0, #1
   15750:	mov	r1, r6
   15754:	mov	r0, r5
   15758:	bl	10c38 <memcpy@plt>
   1575c:	mov	r0, #0
   15760:	pop	{r4, r5, r6, pc}
   15764:	cmp	r4, #0
   15768:	beq	15778 <__lxstat64@plt+0x4954>
   1576c:	strb	r6, [r5]
   15770:	mov	r0, #22
   15774:	pop	{r4, r5, r6, pc}
   15778:	mov	r0, #22
   1577c:	pop	{r4, r5, r6, pc}
   15780:	mov	r1, #0
   15784:	b	10db8 <setlocale@plt>
   15788:	subs	r2, r1, #1
   1578c:	bxeq	lr
   15790:	bcc	15968 <__lxstat64@plt+0x4b44>
   15794:	cmp	r0, r1
   15798:	bls	1594c <__lxstat64@plt+0x4b28>
   1579c:	tst	r1, r2
   157a0:	beq	15958 <__lxstat64@plt+0x4b34>
   157a4:	clz	r3, r0
   157a8:	clz	r2, r1
   157ac:	sub	r3, r2, r3
   157b0:	rsbs	r3, r3, #31
   157b4:	addne	r3, r3, r3, lsl #1
   157b8:	mov	r2, #0
   157bc:	addne	pc, pc, r3, lsl #2
   157c0:	nop			; (mov r0, r0)
   157c4:	cmp	r0, r1, lsl #31
   157c8:	adc	r2, r2, r2
   157cc:	subcs	r0, r0, r1, lsl #31
   157d0:	cmp	r0, r1, lsl #30
   157d4:	adc	r2, r2, r2
   157d8:	subcs	r0, r0, r1, lsl #30
   157dc:	cmp	r0, r1, lsl #29
   157e0:	adc	r2, r2, r2
   157e4:	subcs	r0, r0, r1, lsl #29
   157e8:	cmp	r0, r1, lsl #28
   157ec:	adc	r2, r2, r2
   157f0:	subcs	r0, r0, r1, lsl #28
   157f4:	cmp	r0, r1, lsl #27
   157f8:	adc	r2, r2, r2
   157fc:	subcs	r0, r0, r1, lsl #27
   15800:	cmp	r0, r1, lsl #26
   15804:	adc	r2, r2, r2
   15808:	subcs	r0, r0, r1, lsl #26
   1580c:	cmp	r0, r1, lsl #25
   15810:	adc	r2, r2, r2
   15814:	subcs	r0, r0, r1, lsl #25
   15818:	cmp	r0, r1, lsl #24
   1581c:	adc	r2, r2, r2
   15820:	subcs	r0, r0, r1, lsl #24
   15824:	cmp	r0, r1, lsl #23
   15828:	adc	r2, r2, r2
   1582c:	subcs	r0, r0, r1, lsl #23
   15830:	cmp	r0, r1, lsl #22
   15834:	adc	r2, r2, r2
   15838:	subcs	r0, r0, r1, lsl #22
   1583c:	cmp	r0, r1, lsl #21
   15840:	adc	r2, r2, r2
   15844:	subcs	r0, r0, r1, lsl #21
   15848:	cmp	r0, r1, lsl #20
   1584c:	adc	r2, r2, r2
   15850:	subcs	r0, r0, r1, lsl #20
   15854:	cmp	r0, r1, lsl #19
   15858:	adc	r2, r2, r2
   1585c:	subcs	r0, r0, r1, lsl #19
   15860:	cmp	r0, r1, lsl #18
   15864:	adc	r2, r2, r2
   15868:	subcs	r0, r0, r1, lsl #18
   1586c:	cmp	r0, r1, lsl #17
   15870:	adc	r2, r2, r2
   15874:	subcs	r0, r0, r1, lsl #17
   15878:	cmp	r0, r1, lsl #16
   1587c:	adc	r2, r2, r2
   15880:	subcs	r0, r0, r1, lsl #16
   15884:	cmp	r0, r1, lsl #15
   15888:	adc	r2, r2, r2
   1588c:	subcs	r0, r0, r1, lsl #15
   15890:	cmp	r0, r1, lsl #14
   15894:	adc	r2, r2, r2
   15898:	subcs	r0, r0, r1, lsl #14
   1589c:	cmp	r0, r1, lsl #13
   158a0:	adc	r2, r2, r2
   158a4:	subcs	r0, r0, r1, lsl #13
   158a8:	cmp	r0, r1, lsl #12
   158ac:	adc	r2, r2, r2
   158b0:	subcs	r0, r0, r1, lsl #12
   158b4:	cmp	r0, r1, lsl #11
   158b8:	adc	r2, r2, r2
   158bc:	subcs	r0, r0, r1, lsl #11
   158c0:	cmp	r0, r1, lsl #10
   158c4:	adc	r2, r2, r2
   158c8:	subcs	r0, r0, r1, lsl #10
   158cc:	cmp	r0, r1, lsl #9
   158d0:	adc	r2, r2, r2
   158d4:	subcs	r0, r0, r1, lsl #9
   158d8:	cmp	r0, r1, lsl #8
   158dc:	adc	r2, r2, r2
   158e0:	subcs	r0, r0, r1, lsl #8
   158e4:	cmp	r0, r1, lsl #7
   158e8:	adc	r2, r2, r2
   158ec:	subcs	r0, r0, r1, lsl #7
   158f0:	cmp	r0, r1, lsl #6
   158f4:	adc	r2, r2, r2
   158f8:	subcs	r0, r0, r1, lsl #6
   158fc:	cmp	r0, r1, lsl #5
   15900:	adc	r2, r2, r2
   15904:	subcs	r0, r0, r1, lsl #5
   15908:	cmp	r0, r1, lsl #4
   1590c:	adc	r2, r2, r2
   15910:	subcs	r0, r0, r1, lsl #4
   15914:	cmp	r0, r1, lsl #3
   15918:	adc	r2, r2, r2
   1591c:	subcs	r0, r0, r1, lsl #3
   15920:	cmp	r0, r1, lsl #2
   15924:	adc	r2, r2, r2
   15928:	subcs	r0, r0, r1, lsl #2
   1592c:	cmp	r0, r1, lsl #1
   15930:	adc	r2, r2, r2
   15934:	subcs	r0, r0, r1, lsl #1
   15938:	cmp	r0, r1
   1593c:	adc	r2, r2, r2
   15940:	subcs	r0, r0, r1
   15944:	mov	r0, r2
   15948:	bx	lr
   1594c:	moveq	r0, #1
   15950:	movne	r0, #0
   15954:	bx	lr
   15958:	clz	r2, r1
   1595c:	rsb	r2, r2, #31
   15960:	lsr	r0, r0, r2
   15964:	bx	lr
   15968:	cmp	r0, #0
   1596c:	mvnne	r0, #0
   15970:	b	15c10 <__lxstat64@plt+0x4dec>
   15974:	cmp	r1, #0
   15978:	beq	15968 <__lxstat64@plt+0x4b44>
   1597c:	push	{r0, r1, lr}
   15980:	bl	15788 <__lxstat64@plt+0x4964>
   15984:	pop	{r1, r2, lr}
   15988:	mul	r3, r2, r0
   1598c:	sub	r1, r1, r3
   15990:	bx	lr
   15994:	cmp	r1, #0
   15998:	beq	15ba4 <__lxstat64@plt+0x4d80>
   1599c:	eor	ip, r0, r1
   159a0:	rsbmi	r1, r1, #0
   159a4:	subs	r2, r1, #1
   159a8:	beq	15b70 <__lxstat64@plt+0x4d4c>
   159ac:	movs	r3, r0
   159b0:	rsbmi	r3, r0, #0
   159b4:	cmp	r3, r1
   159b8:	bls	15b7c <__lxstat64@plt+0x4d58>
   159bc:	tst	r1, r2
   159c0:	beq	15b8c <__lxstat64@plt+0x4d68>
   159c4:	clz	r2, r3
   159c8:	clz	r0, r1
   159cc:	sub	r2, r0, r2
   159d0:	rsbs	r2, r2, #31
   159d4:	addne	r2, r2, r2, lsl #1
   159d8:	mov	r0, #0
   159dc:	addne	pc, pc, r2, lsl #2
   159e0:	nop			; (mov r0, r0)
   159e4:	cmp	r3, r1, lsl #31
   159e8:	adc	r0, r0, r0
   159ec:	subcs	r3, r3, r1, lsl #31
   159f0:	cmp	r3, r1, lsl #30
   159f4:	adc	r0, r0, r0
   159f8:	subcs	r3, r3, r1, lsl #30
   159fc:	cmp	r3, r1, lsl #29
   15a00:	adc	r0, r0, r0
   15a04:	subcs	r3, r3, r1, lsl #29
   15a08:	cmp	r3, r1, lsl #28
   15a0c:	adc	r0, r0, r0
   15a10:	subcs	r3, r3, r1, lsl #28
   15a14:	cmp	r3, r1, lsl #27
   15a18:	adc	r0, r0, r0
   15a1c:	subcs	r3, r3, r1, lsl #27
   15a20:	cmp	r3, r1, lsl #26
   15a24:	adc	r0, r0, r0
   15a28:	subcs	r3, r3, r1, lsl #26
   15a2c:	cmp	r3, r1, lsl #25
   15a30:	adc	r0, r0, r0
   15a34:	subcs	r3, r3, r1, lsl #25
   15a38:	cmp	r3, r1, lsl #24
   15a3c:	adc	r0, r0, r0
   15a40:	subcs	r3, r3, r1, lsl #24
   15a44:	cmp	r3, r1, lsl #23
   15a48:	adc	r0, r0, r0
   15a4c:	subcs	r3, r3, r1, lsl #23
   15a50:	cmp	r3, r1, lsl #22
   15a54:	adc	r0, r0, r0
   15a58:	subcs	r3, r3, r1, lsl #22
   15a5c:	cmp	r3, r1, lsl #21
   15a60:	adc	r0, r0, r0
   15a64:	subcs	r3, r3, r1, lsl #21
   15a68:	cmp	r3, r1, lsl #20
   15a6c:	adc	r0, r0, r0
   15a70:	subcs	r3, r3, r1, lsl #20
   15a74:	cmp	r3, r1, lsl #19
   15a78:	adc	r0, r0, r0
   15a7c:	subcs	r3, r3, r1, lsl #19
   15a80:	cmp	r3, r1, lsl #18
   15a84:	adc	r0, r0, r0
   15a88:	subcs	r3, r3, r1, lsl #18
   15a8c:	cmp	r3, r1, lsl #17
   15a90:	adc	r0, r0, r0
   15a94:	subcs	r3, r3, r1, lsl #17
   15a98:	cmp	r3, r1, lsl #16
   15a9c:	adc	r0, r0, r0
   15aa0:	subcs	r3, r3, r1, lsl #16
   15aa4:	cmp	r3, r1, lsl #15
   15aa8:	adc	r0, r0, r0
   15aac:	subcs	r3, r3, r1, lsl #15
   15ab0:	cmp	r3, r1, lsl #14
   15ab4:	adc	r0, r0, r0
   15ab8:	subcs	r3, r3, r1, lsl #14
   15abc:	cmp	r3, r1, lsl #13
   15ac0:	adc	r0, r0, r0
   15ac4:	subcs	r3, r3, r1, lsl #13
   15ac8:	cmp	r3, r1, lsl #12
   15acc:	adc	r0, r0, r0
   15ad0:	subcs	r3, r3, r1, lsl #12
   15ad4:	cmp	r3, r1, lsl #11
   15ad8:	adc	r0, r0, r0
   15adc:	subcs	r3, r3, r1, lsl #11
   15ae0:	cmp	r3, r1, lsl #10
   15ae4:	adc	r0, r0, r0
   15ae8:	subcs	r3, r3, r1, lsl #10
   15aec:	cmp	r3, r1, lsl #9
   15af0:	adc	r0, r0, r0
   15af4:	subcs	r3, r3, r1, lsl #9
   15af8:	cmp	r3, r1, lsl #8
   15afc:	adc	r0, r0, r0
   15b00:	subcs	r3, r3, r1, lsl #8
   15b04:	cmp	r3, r1, lsl #7
   15b08:	adc	r0, r0, r0
   15b0c:	subcs	r3, r3, r1, lsl #7
   15b10:	cmp	r3, r1, lsl #6
   15b14:	adc	r0, r0, r0
   15b18:	subcs	r3, r3, r1, lsl #6
   15b1c:	cmp	r3, r1, lsl #5
   15b20:	adc	r0, r0, r0
   15b24:	subcs	r3, r3, r1, lsl #5
   15b28:	cmp	r3, r1, lsl #4
   15b2c:	adc	r0, r0, r0
   15b30:	subcs	r3, r3, r1, lsl #4
   15b34:	cmp	r3, r1, lsl #3
   15b38:	adc	r0, r0, r0
   15b3c:	subcs	r3, r3, r1, lsl #3
   15b40:	cmp	r3, r1, lsl #2
   15b44:	adc	r0, r0, r0
   15b48:	subcs	r3, r3, r1, lsl #2
   15b4c:	cmp	r3, r1, lsl #1
   15b50:	adc	r0, r0, r0
   15b54:	subcs	r3, r3, r1, lsl #1
   15b58:	cmp	r3, r1
   15b5c:	adc	r0, r0, r0
   15b60:	subcs	r3, r3, r1
   15b64:	cmp	ip, #0
   15b68:	rsbmi	r0, r0, #0
   15b6c:	bx	lr
   15b70:	teq	ip, r0
   15b74:	rsbmi	r0, r0, #0
   15b78:	bx	lr
   15b7c:	movcc	r0, #0
   15b80:	asreq	r0, ip, #31
   15b84:	orreq	r0, r0, #1
   15b88:	bx	lr
   15b8c:	clz	r2, r1
   15b90:	rsb	r2, r2, #31
   15b94:	cmp	ip, #0
   15b98:	lsr	r0, r3, r2
   15b9c:	rsbmi	r0, r0, #0
   15ba0:	bx	lr
   15ba4:	cmp	r0, #0
   15ba8:	mvngt	r0, #-2147483648	; 0x80000000
   15bac:	movlt	r0, #-2147483648	; 0x80000000
   15bb0:	b	15c10 <__lxstat64@plt+0x4dec>
   15bb4:	cmp	r1, #0
   15bb8:	beq	15ba4 <__lxstat64@plt+0x4d80>
   15bbc:	push	{r0, r1, lr}
   15bc0:	bl	1599c <__lxstat64@plt+0x4b78>
   15bc4:	pop	{r1, r2, lr}
   15bc8:	mul	r3, r2, r0
   15bcc:	sub	r1, r1, r3
   15bd0:	bx	lr
   15bd4:	cmp	r3, #0
   15bd8:	cmpeq	r2, #0
   15bdc:	bne	15bf4 <__lxstat64@plt+0x4dd0>
   15be0:	cmp	r1, #0
   15be4:	cmpeq	r0, #0
   15be8:	mvnne	r1, #0
   15bec:	mvnne	r0, #0
   15bf0:	b	15c10 <__lxstat64@plt+0x4dec>
   15bf4:	sub	sp, sp, #8
   15bf8:	push	{sp, lr}
   15bfc:	bl	15c20 <__lxstat64@plt+0x4dfc>
   15c00:	ldr	lr, [sp, #4]
   15c04:	add	sp, sp, #8
   15c08:	pop	{r2, r3}
   15c0c:	bx	lr
   15c10:	push	{r1, lr}
   15c14:	mov	r0, #8
   15c18:	bl	10bf0 <raise@plt>
   15c1c:	pop	{r1, pc}
   15c20:	cmp	r1, r3
   15c24:	push	{r4, r5, r6, r7, r8, r9, lr}
   15c28:	cmpeq	r0, r2
   15c2c:	mov	r4, r0
   15c30:	mov	r5, r1
   15c34:	ldr	r9, [sp, #28]
   15c38:	movcc	r0, #0
   15c3c:	movcc	r1, #0
   15c40:	bcc	15d38 <__lxstat64@plt+0x4f14>
   15c44:	cmp	r3, #0
   15c48:	clzeq	ip, r2
   15c4c:	clzne	ip, r3
   15c50:	addeq	ip, ip, #32
   15c54:	cmp	r5, #0
   15c58:	clzeq	r1, r4
   15c5c:	addeq	r1, r1, #32
   15c60:	clzne	r1, r5
   15c64:	sub	ip, ip, r1
   15c68:	sub	lr, ip, #32
   15c6c:	lsl	r7, r3, ip
   15c70:	rsb	r8, ip, #32
   15c74:	orr	r7, r7, r2, lsl lr
   15c78:	orr	r7, r7, r2, lsr r8
   15c7c:	lsl	r6, r2, ip
   15c80:	cmp	r5, r7
   15c84:	cmpeq	r4, r6
   15c88:	movcc	r0, #0
   15c8c:	movcc	r1, #0
   15c90:	bcc	15cac <__lxstat64@plt+0x4e88>
   15c94:	mov	r3, #1
   15c98:	subs	r4, r4, r6
   15c9c:	lsl	r1, r3, lr
   15ca0:	lsl	r0, r3, ip
   15ca4:	orr	r1, r1, r3, lsr r8
   15ca8:	sbc	r5, r5, r7
   15cac:	cmp	ip, #0
   15cb0:	beq	15d38 <__lxstat64@plt+0x4f14>
   15cb4:	lsrs	r3, r7, #1
   15cb8:	rrx	r2, r6
   15cbc:	mov	r6, ip
   15cc0:	b	15ce4 <__lxstat64@plt+0x4ec0>
   15cc4:	subs	r4, r4, r2
   15cc8:	sbc	r5, r5, r3
   15ccc:	adds	r4, r4, r4
   15cd0:	adc	r5, r5, r5
   15cd4:	adds	r4, r4, #1
   15cd8:	adc	r5, r5, #0
   15cdc:	subs	r6, r6, #1
   15ce0:	beq	15d00 <__lxstat64@plt+0x4edc>
   15ce4:	cmp	r5, r3
   15ce8:	cmpeq	r4, r2
   15cec:	bcs	15cc4 <__lxstat64@plt+0x4ea0>
   15cf0:	adds	r4, r4, r4
   15cf4:	adc	r5, r5, r5
   15cf8:	subs	r6, r6, #1
   15cfc:	bne	15ce4 <__lxstat64@plt+0x4ec0>
   15d00:	lsr	r6, r4, ip
   15d04:	lsr	r7, r5, ip
   15d08:	orr	r6, r6, r5, lsl r8
   15d0c:	adds	r2, r0, r4
   15d10:	orr	r6, r6, r5, lsr lr
   15d14:	adc	r3, r1, r5
   15d18:	lsl	r1, r7, ip
   15d1c:	orr	r1, r1, r6, lsl lr
   15d20:	lsl	r0, r6, ip
   15d24:	orr	r1, r1, r6, lsr r8
   15d28:	subs	r0, r2, r0
   15d2c:	mov	r4, r6
   15d30:	mov	r5, r7
   15d34:	sbc	r1, r3, r1
   15d38:	cmp	r9, #0
   15d3c:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   15d40:	strd	r4, [r9]
   15d44:	pop	{r4, r5, r6, r7, r8, r9, pc}
   15d48:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15d4c:	mov	r7, r0
   15d50:	ldr	r6, [pc, #72]	; 15da0 <__lxstat64@plt+0x4f7c>
   15d54:	ldr	r5, [pc, #72]	; 15da4 <__lxstat64@plt+0x4f80>
   15d58:	add	r6, pc, r6
   15d5c:	add	r5, pc, r5
   15d60:	sub	r6, r6, r5
   15d64:	mov	r8, r1
   15d68:	mov	r9, r2
   15d6c:	bl	10bb8 <calloc@plt-0x20>
   15d70:	asrs	r6, r6, #2
   15d74:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15d78:	mov	r4, #0
   15d7c:	add	r4, r4, #1
   15d80:	ldr	r3, [r5], #4
   15d84:	mov	r2, r9
   15d88:	mov	r1, r8
   15d8c:	mov	r0, r7
   15d90:	blx	r3
   15d94:	cmp	r6, r4
   15d98:	bne	15d7c <__lxstat64@plt+0x4f58>
   15d9c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15da0:			; <UNDEFINED> instruction: 0x000121b0
   15da4:	andeq	r2, r1, r8, lsr #3
   15da8:	bx	lr
   15dac:	ldr	r3, [pc, #12]	; 15dc0 <__lxstat64@plt+0x4f9c>
   15db0:	mov	r1, #0
   15db4:	add	r3, pc, r3
   15db8:	ldr	r2, [r3]
   15dbc:	b	10d58 <__cxa_atexit@plt>
   15dc0:	andeq	r2, r1, r0, lsr #6

Disassembly of section .fini:

00015dc4 <.fini>:
   15dc4:	push	{r3, lr}
   15dc8:	pop	{r3, pc}
