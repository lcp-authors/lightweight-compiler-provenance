
../repos/prog2/2.2:     file format elf32-littlearm


Disassembly of section .init:

000106ac <.init>:
   106ac:	push	{r3, lr}
   106b0:	bl	10930 <_start@@Base+0x3c>
   106b4:	pop	{r3, pc}

Disassembly of section .plt:

000106b8 <printf@plt-0x14>:
   106b8:	push	{lr}		; (str lr, [sp, #-4]!)
   106bc:	ldr	lr, [pc, #4]	; 106c8 <printf@plt-0x4>
   106c0:	add	lr, pc, lr
   106c4:	ldr	pc, [lr, #8]!
   106c8:	andeq	r0, r1, r8, lsr r9

000106cc <printf@plt>:
   106cc:	add	ip, pc, #0, 12
   106d0:	add	ip, ip, #16, 20	; 0x10000
   106d4:	ldr	pc, [ip, #2360]!	; 0x938

000106d8 <free@plt>:
   106d8:	add	ip, pc, #0, 12
   106dc:	add	ip, ip, #16, 20	; 0x10000
   106e0:	ldr	pc, [ip, #2352]!	; 0x930

000106e4 <fgets@plt>:
   106e4:	add	ip, pc, #0, 12
   106e8:	add	ip, ip, #16, 20	; 0x10000
   106ec:	ldr	pc, [ip, #2344]!	; 0x928

000106f0 <memcpy@plt>:
   106f0:	add	ip, pc, #0, 12
   106f4:	add	ip, ip, #16, 20	; 0x10000
   106f8:	ldr	pc, [ip, #2336]!	; 0x920

000106fc <realloc@plt>:
   106fc:	add	ip, pc, #0, 12
   10700:	add	ip, ip, #16, 20	; 0x10000
   10704:	ldr	pc, [ip, #2328]!	; 0x918

00010708 <puts@plt>:
   10708:	add	ip, pc, #0, 12
   1070c:	add	ip, ip, #16, 20	; 0x10000
   10710:	ldr	pc, [ip, #2320]!	; 0x910

00010714 <malloc@plt>:
   10714:	add	ip, pc, #0, 12
   10718:	add	ip, ip, #16, 20	; 0x10000
   1071c:	ldr	pc, [ip, #2312]!	; 0x908

00010720 <__libc_start_main@plt>:
   10720:	add	ip, pc, #0, 12
   10724:	add	ip, ip, #16, 20	; 0x10000
   10728:	ldr	pc, [ip, #2304]!	; 0x900

0001072c <__gmon_start__@plt>:
   1072c:	add	ip, pc, #0, 12
   10730:	add	ip, ip, #16, 20	; 0x10000
   10734:	ldr	pc, [ip, #2296]!	; 0x8f8

00010738 <strlen@plt>:
   10738:	add	ip, pc, #0, 12
   1073c:	add	ip, ip, #16, 20	; 0x10000
   10740:	ldr	pc, [ip, #2288]!	; 0x8f0

00010744 <__isoc99_scanf@plt>:
   10744:	add	ip, pc, #0, 12
   10748:	add	ip, ip, #16, 20	; 0x10000
   1074c:	ldr	pc, [ip, #2280]!	; 0x8e8

00010750 <abort@plt>:
   10750:	add	ip, pc, #0, 12
   10754:	add	ip, ip, #16, 20	; 0x10000
   10758:	ldr	pc, [ip, #2272]!	; 0x8e0

0001075c <getc@plt>:
   1075c:	add	ip, pc, #0, 12
   10760:	add	ip, ip, #16, 20	; 0x10000
   10764:	ldr	pc, [ip, #2264]!	; 0x8d8

Disassembly of section .text:

00010768 <main@@Base>:
   10768:	mov	r0, #12
   1076c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10770:	movw	r5, #4176	; 0x1050
   10774:	movt	r5, #2
   10778:	strd	r6, [sp, #8]
   1077c:	movw	r6, #2660	; 0xa64
   10780:	movt	r6, #1
   10784:	strd	r8, [sp, #16]
   10788:	movw	r8, #2644	; 0xa54
   1078c:	movt	r8, #1
   10790:	strd	sl, [sp, #24]
   10794:	mov	r9, #0
   10798:	str	lr, [sp, #32]
   1079c:	sub	sp, sp, #100	; 0x64
   107a0:	movw	sl, #2652	; 0xa5c
   107a4:	movt	sl, #1
   107a8:	bl	10714 <malloc@plt>
   107ac:	sub	r1, r0, #4
   107b0:	mov	r2, #0
   107b4:	str	r9, [r0, #8]
   107b8:	mov	r3, #0
   107bc:	mov	r7, r0
   107c0:	str	r1, [sp, #4]
   107c4:	strd	r2, [r0]
   107c8:	ldr	r4, [sp, #4]
   107cc:	mov	fp, #0
   107d0:	add	fp, fp, #1
   107d4:	mov	r0, r8
   107d8:	mov	r1, fp
   107dc:	bl	106cc <printf@plt>
   107e0:	ldr	r2, [r4, #4]!
   107e4:	subs	r0, r2, #0
   107e8:	moveq	r0, sl
   107ec:	bl	10708 <puts@plt>
   107f0:	cmp	fp, #3
   107f4:	bne	107d0 <main@@Base+0x68>
   107f8:	movw	r4, #2696	; 0xa88
   107fc:	movt	r4, #1
   10800:	mov	r1, #3
   10804:	mov	r0, r6
   10808:	bl	106cc <printf@plt>
   1080c:	add	r1, sp, #12
   10810:	mov	r0, r4
   10814:	bl	10744 <__isoc99_scanf@plt>
   10818:	ldr	r0, [r5]
   1081c:	bl	1075c <getc@plt>
   10820:	ldr	r3, [sp, #12]
   10824:	cmp	r3, #3
   10828:	bhi	10800 <main@@Base+0x98>
   1082c:	cmp	r3, #0
   10830:	beq	108ac <main@@Base+0x144>
   10834:	movw	r0, #2700	; 0xa8c
   10838:	movt	r0, #1
   1083c:	bl	106cc <printf@plt>
   10840:	mov	r1, #80	; 0x50
   10844:	add	r0, sp, #16
   10848:	ldr	r2, [r5]
   1084c:	bl	106e4 <fgets@plt>
   10850:	add	r0, sp, #16
   10854:	bl	10738 <strlen@plt>
   10858:	ldr	r4, [sp, #12]
   1085c:	add	r3, sp, #96	; 0x60
   10860:	mov	r2, #0
   10864:	add	r3, r3, r0
   10868:	add	r0, sp, #16
   1086c:	strb	r2, [r3, #-81]	; 0xffffffaf
   10870:	bl	10738 <strlen@plt>
   10874:	add	r9, r0, #1
   10878:	sub	r4, r4, #-1073741823	; 0xc0000001
   1087c:	mov	r1, r9
   10880:	ldr	r0, [r7, r4, lsl #2]
   10884:	bl	106fc <realloc@plt>
   10888:	ldr	r3, [sp, #12]
   1088c:	mov	r2, r9
   10890:	add	r1, sp, #16
   10894:	str	r0, [r7, r4, lsl #2]
   10898:	sub	r3, r3, #-1073741823	; 0xc0000001
   1089c:	ldr	r0, [r7, r3, lsl #2]
   108a0:	bl	106f0 <memcpy@plt>
   108a4:	ldr	r9, [r7]
   108a8:	b	107c8 <main@@Base+0x60>
   108ac:	mov	r0, r9
   108b0:	str	r3, [sp, #4]
   108b4:	bl	106d8 <free@plt>
   108b8:	ldr	r0, [r7, #4]
   108bc:	bl	106d8 <free@plt>
   108c0:	ldr	r0, [r7, #8]
   108c4:	bl	106d8 <free@plt>
   108c8:	mov	r0, r7
   108cc:	bl	106d8 <free@plt>
   108d0:	ldr	r3, [sp, #4]
   108d4:	mov	r0, r3
   108d8:	add	sp, sp, #100	; 0x64
   108dc:	ldrd	r4, [sp]
   108e0:	ldrd	r6, [sp, #8]
   108e4:	ldrd	r8, [sp, #16]
   108e8:	ldrd	sl, [sp, #24]
   108ec:	add	sp, sp, #32
   108f0:	pop	{pc}		; (ldr pc, [sp], #4)

000108f4 <_start@@Base>:
   108f4:	mov	fp, #0
   108f8:	mov	lr, #0
   108fc:	pop	{r1}		; (ldr r1, [sp], #4)
   10900:	mov	r2, sp
   10904:	push	{r2}		; (str r2, [sp, #-4]!)
   10908:	push	{r0}		; (str r0, [sp, #-4]!)
   1090c:	ldr	ip, [pc, #16]	; 10924 <_start@@Base+0x30>
   10910:	push	{ip}		; (str ip, [sp, #-4]!)
   10914:	ldr	r0, [pc, #12]	; 10928 <_start@@Base+0x34>
   10918:	ldr	r3, [pc, #12]	; 1092c <_start@@Base+0x38>
   1091c:	bl	10720 <__libc_start_main@plt>
   10920:	bl	10750 <abort@plt>
   10924:	andeq	r0, r1, r4, asr #20
   10928:	andeq	r0, r1, r8, ror #14
   1092c:	andeq	r0, r1, r4, ror #19
   10930:	ldr	r3, [pc, #20]	; 1094c <_start@@Base+0x58>
   10934:	ldr	r2, [pc, #20]	; 10950 <_start@@Base+0x5c>
   10938:	add	r3, pc, r3
   1093c:	ldr	r2, [r3, r2]
   10940:	cmp	r2, #0
   10944:	bxeq	lr
   10948:	b	1072c <__gmon_start__@plt>
   1094c:	andeq	r0, r1, r0, asr #13
   10950:	andeq	r0, r0, r0, asr #32
   10954:	ldr	r0, [pc, #24]	; 10974 <_start@@Base+0x80>
   10958:	ldr	r3, [pc, #24]	; 10978 <_start@@Base+0x84>
   1095c:	cmp	r3, r0
   10960:	bxeq	lr
   10964:	ldr	r3, [pc, #16]	; 1097c <_start@@Base+0x88>
   10968:	cmp	r3, #0
   1096c:	bxeq	lr
   10970:	bx	r3
   10974:	andeq	r1, r2, ip, asr #32
   10978:	andeq	r1, r2, ip, asr #32
   1097c:	andeq	r0, r0, r0
   10980:	ldr	r0, [pc, #36]	; 109ac <_start@@Base+0xb8>
   10984:	ldr	r1, [pc, #36]	; 109b0 <_start@@Base+0xbc>
   10988:	sub	r1, r1, r0
   1098c:	asr	r1, r1, #2
   10990:	add	r1, r1, r1, lsr #31
   10994:	asrs	r1, r1, #1
   10998:	bxeq	lr
   1099c:	ldr	r3, [pc, #16]	; 109b4 <_start@@Base+0xc0>
   109a0:	cmp	r3, #0
   109a4:	bxeq	lr
   109a8:	bx	r3
   109ac:	andeq	r1, r2, ip, asr #32
   109b0:	andeq	r1, r2, ip, asr #32
   109b4:	andeq	r0, r0, r0
   109b8:	push	{r4, lr}
   109bc:	ldr	r4, [pc, #24]	; 109dc <_start@@Base+0xe8>
   109c0:	ldrb	r3, [r4]
   109c4:	cmp	r3, #0
   109c8:	popne	{r4, pc}
   109cc:	bl	10954 <_start@@Base+0x60>
   109d0:	mov	r3, #1
   109d4:	strb	r3, [r4]
   109d8:	pop	{r4, pc}
   109dc:	andeq	r1, r2, r4, asr r0
   109e0:	b	10980 <_start@@Base+0x8c>

000109e4 <__libc_csu_init@@Base>:
   109e4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   109e8:	mov	r7, r0
   109ec:	ldr	r6, [pc, #72]	; 10a3c <__libc_csu_init@@Base+0x58>
   109f0:	ldr	r5, [pc, #72]	; 10a40 <__libc_csu_init@@Base+0x5c>
   109f4:	add	r6, pc, r6
   109f8:	add	r5, pc, r5
   109fc:	sub	r6, r6, r5
   10a00:	mov	r8, r1
   10a04:	mov	r9, r2
   10a08:	bl	106ac <printf@plt-0x20>
   10a0c:	asrs	r6, r6, #2
   10a10:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10a14:	mov	r4, #0
   10a18:	add	r4, r4, #1
   10a1c:	ldr	r3, [r5], #4
   10a20:	mov	r2, r9
   10a24:	mov	r1, r8
   10a28:	mov	r0, r7
   10a2c:	blx	r3
   10a30:	cmp	r6, r4
   10a34:	bne	10a18 <__libc_csu_init@@Base+0x34>
   10a38:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10a3c:	andeq	r0, r1, r8, lsl r5
   10a40:	andeq	r0, r1, r0, lsl r5

00010a44 <__libc_csu_fini@@Base>:
   10a44:	bx	lr

Disassembly of section .fini:

00010a48 <.fini>:
   10a48:	push	{r3, lr}
   10a4c:	pop	{r3, pc}
