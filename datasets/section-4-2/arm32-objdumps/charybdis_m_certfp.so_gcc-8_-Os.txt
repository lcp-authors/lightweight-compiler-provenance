
../repos/charybdis/modules/.libs/m_certfp.so:     file format elf32-littlearm


Disassembly of section .init:

0000043c <_init>:
 43c:	push	{r3, lr}
 440:	bl	4b0 <call_weak_fn>
 444:	pop	{r3, pc}

Disassembly of section .plt:

00000448 <.plt>:
 448:	push	{lr}		; (str lr, [sp, #-4]!)
 44c:	ldr	lr, [pc, #4]	; 458 <.plt+0x10>
 450:	add	lr, pc, lr
 454:	ldr	pc, [lr, #8]!
 458:	.word	0x00010ba8

0000045c <__cxa_finalize@plt>:
 45c:	add	ip, pc, #0, 12
 460:	add	ip, ip, #16, 20	; 0x10000
 464:	ldr	pc, [ip, #2984]!	; 0xba8

00000468 <free@plt>:
 468:	add	ip, pc, #0, 12
 46c:	add	ip, ip, #16, 20	; 0x10000
 470:	ldr	pc, [ip, #2976]!	; 0xba0

00000474 <rb_outofmemory@plt>:
 474:	add	ip, pc, #0, 12
 478:	add	ip, ip, #16, 20	; 0x10000
 47c:	ldr	pc, [ip, #2968]!	; 0xb98

00000480 <strcpy@plt>:
 480:	add	ip, pc, #0, 12
 484:	add	ip, ip, #16, 20	; 0x10000
 488:	ldr	pc, [ip, #2960]!	; 0xb90

0000048c <malloc@plt>:
 48c:	add	ip, pc, #0, 12
 490:	add	ip, ip, #16, 20	; 0x10000
 494:	ldr	pc, [ip, #2952]!	; 0xb88

00000498 <__gmon_start__@plt>:
 498:	add	ip, pc, #0, 12
 49c:	add	ip, ip, #16, 20	; 0x10000
 4a0:	ldr	pc, [ip, #2944]!	; 0xb80

000004a4 <strlen@plt>:
 4a4:	add	ip, pc, #0, 12
 4a8:	add	ip, ip, #16, 20	; 0x10000
 4ac:	ldr	pc, [ip, #2936]!	; 0xb78

Disassembly of section .text:

000004b0 <call_weak_fn>:
 4b0:	ldr	r3, [pc, #20]	; 4cc <call_weak_fn+0x1c>
 4b4:	ldr	r2, [pc, #20]	; 4d0 <call_weak_fn+0x20>
 4b8:	add	r3, pc, r3
 4bc:	ldr	r2, [r3, r2]
 4c0:	cmp	r2, #0
 4c4:	bxeq	lr
 4c8:	b	498 <__gmon_start__@plt>
 4cc:	.word	0x00010b40
 4d0:	.word	0x00000030

000004d4 <deregister_tm_clones>:
 4d4:	ldr	r0, [pc, #44]	; 508 <deregister_tm_clones+0x34>
 4d8:	ldr	r3, [pc, #44]	; 50c <deregister_tm_clones+0x38>
 4dc:	add	r0, pc, r0
 4e0:	add	r3, pc, r3
 4e4:	cmp	r3, r0
 4e8:	ldr	r3, [pc, #32]	; 510 <deregister_tm_clones+0x3c>
 4ec:	add	r3, pc, r3
 4f0:	bxeq	lr
 4f4:	ldr	r2, [pc, #24]	; 514 <deregister_tm_clones+0x40>
 4f8:	ldr	r3, [r3, r2]
 4fc:	cmp	r3, #0
 500:	bxeq	lr
 504:	bx	r3
 508:	.word	0x00010bcc
 50c:	.word	0x00010bc8
 510:	.word	0x00010b0c
 514:	.word	0x0000002c

00000518 <register_tm_clones>:
 518:	ldr	r0, [pc, #56]	; 558 <register_tm_clones+0x40>
 51c:	ldr	r3, [pc, #56]	; 55c <register_tm_clones+0x44>
 520:	add	r0, pc, r0
 524:	add	r3, pc, r3
 528:	sub	r1, r3, r0
 52c:	ldr	r3, [pc, #44]	; 560 <register_tm_clones+0x48>
 530:	asr	r1, r1, #2
 534:	add	r3, pc, r3
 538:	add	r1, r1, r1, lsr #31
 53c:	asrs	r1, r1, #1
 540:	bxeq	lr
 544:	ldr	r2, [pc, #24]	; 564 <register_tm_clones+0x4c>
 548:	ldr	r3, [r3, r2]
 54c:	cmp	r3, #0
 550:	bxeq	lr
 554:	bx	r3
 558:	.word	0x00010b88
 55c:	.word	0x00010b84
 560:	.word	0x00010ac4
 564:	.word	0x00000034

00000568 <__do_global_dtors_aux>:
 568:	ldr	r3, [pc, #76]	; 5bc <__do_global_dtors_aux+0x54>
 56c:	ldr	r2, [pc, #76]	; 5c0 <__do_global_dtors_aux+0x58>
 570:	add	r3, pc, r3
 574:	add	r2, pc, r2
 578:	ldrb	r3, [r3]
 57c:	cmp	r3, #0
 580:	bxne	lr
 584:	ldr	r3, [pc, #56]	; 5c4 <__do_global_dtors_aux+0x5c>
 588:	push	{r4, lr}
 58c:	ldr	r3, [r2, r3]
 590:	cmp	r3, #0
 594:	beq	5a4 <__do_global_dtors_aux+0x3c>
 598:	ldr	r3, [pc, #40]	; 5c8 <__do_global_dtors_aux+0x60>
 59c:	ldr	r0, [pc, r3]
 5a0:	bl	45c <__cxa_finalize@plt>
 5a4:	bl	4d4 <deregister_tm_clones>
 5a8:	ldr	r3, [pc, #28]	; 5cc <__do_global_dtors_aux+0x64>
 5ac:	mov	r2, #1
 5b0:	add	r3, pc, r3
 5b4:	strb	r2, [r3]
 5b8:	pop	{r4, pc}
 5bc:	.word	0x00010b38
 5c0:	.word	0x00010a84
 5c4:	.word	0x00000028
 5c8:	.word	0x00010a94
 5cc:	.word	0x00010af8

000005d0 <frame_dummy>:
 5d0:	b	518 <register_tm_clones>

000005d4 <me_certfp>:
 5d4:	ldrh	r3, [r2, #80]	; 0x50
 5d8:	cmp	r3, #64	; 0x40
 5dc:	bxne	lr
 5e0:	ldr	r3, [r2, #24]
 5e4:	cmp	r3, #0
 5e8:	bxeq	lr
 5ec:	push	{r4, r5, r6, lr}
 5f0:	mov	r4, r2
 5f4:	ldr	r0, [r2, #444]	; 0x1bc
 5f8:	cmp	r0, #0
 5fc:	beq	604 <me_certfp+0x30>
 600:	bl	468 <free@plt>
 604:	mov	r3, #0
 608:	str	r3, [r4, #444]	; 0x1bc
 60c:	ldr	r3, [sp, #16]
 610:	ldr	r5, [r3, #4]
 614:	cmp	r5, #0
 618:	popeq	{r4, r5, r6, pc}
 61c:	ldrb	r3, [r5]
 620:	cmp	r3, #0
 624:	popeq	{r4, r5, r6, pc}
 628:	mov	r0, r5
 62c:	bl	4a4 <strlen@plt>
 630:	add	r0, r0, #1
 634:	bl	48c <malloc@plt>
 638:	subs	r6, r0, #0
 63c:	bne	644 <me_certfp+0x70>
 640:	bl	474 <rb_outofmemory@plt>
 644:	mov	r1, r5
 648:	bl	480 <strcpy@plt>
 64c:	str	r6, [r4, #444]	; 0x1bc
 650:	pop	{r4, r5, r6, pc}

Disassembly of section .fini:

00000654 <_fini>:
 654:	push	{r3, lr}
 658:	pop	{r3, pc}
