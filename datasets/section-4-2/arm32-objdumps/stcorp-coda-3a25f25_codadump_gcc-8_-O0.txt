
../repos/stcorp-coda-3a25f25/codadump:     file format elf32-littlearm


Disassembly of section .init:

00012180 <.init>:
   12180:	push	{r3, lr}
   12184:	bl	1268c <_start@@Base+0x3c>
   12188:	pop	{r3, pc}

Disassembly of section .plt:

0001218c <coda_cursor_get_byte_size@plt-0x14>:
   1218c:	push	{lr}		; (str lr, [sp, #-4]!)
   12190:	ldr	lr, [pc, #4]	; 1219c <coda_cursor_get_byte_size@plt-0x4>
   12194:	add	lr, pc, lr
   12198:	ldr	pc, [lr, #8]!
   1219c:	andeq	lr, r1, r4, ror #28

000121a0 <coda_cursor_get_byte_size@plt>:
   121a0:	add	ip, pc, #0, 12
   121a4:	add	ip, ip, #122880	; 0x1e000
   121a8:	ldr	pc, [ip, #3684]!	; 0xe64

000121ac <coda_type_get_special_type_name@plt>:
   121ac:	add	ip, pc, #0, 12
   121b0:	add	ip, ip, #122880	; 0x1e000
   121b4:	ldr	pc, [ip, #3676]!	; 0xe5c

000121b8 <coda_set_option_use_fast_size_expressions@plt>:
   121b8:	add	ip, pc, #0, 12
   121bc:	add	ip, ip, #122880	; 0x1e000
   121c0:	ldr	pc, [ip, #3668]!	; 0xe54

000121c4 <raise@plt>:
   121c4:	add	ip, pc, #0, 12
   121c8:	add	ip, ip, #122880	; 0x1e000
   121cc:	ldr	pc, [ip, #3660]!	; 0xe4c

000121d0 <coda_get_option_bypass_special_types@plt>:
   121d0:	add	ip, pc, #0, 12
   121d4:	add	ip, ip, #122880	; 0x1e000
   121d8:	ldr	pc, [ip, #3652]!	; 0xe44

000121dc <coda_set_option_perform_boundary_checks@plt>:
   121dc:	add	ip, pc, #0, 12
   121e0:	add	ip, ip, #122880	; 0x1e000
   121e4:	ldr	pc, [ip, #3644]!	; 0xe3c

000121e8 <strcmp@plt>:
   121e8:	add	ip, pc, #0, 12
   121ec:	add	ip, ip, #122880	; 0x1e000
   121f0:	ldr	pc, [ip, #3636]!	; 0xe34

000121f4 <coda_type_get_record_field_hidden_status@plt>:
   121f4:	add	ip, pc, #0, 12
   121f8:	add	ip, ip, #122880	; 0x1e000
   121fc:	ldr	pc, [ip, #3628]!	; 0xe2c

00012200 <printf@plt>:
   12200:	add	ip, pc, #0, 12
   12204:	add	ip, ip, #122880	; 0x1e000
   12208:	ldr	pc, [ip, #3620]!	; 0xe24

0001220c <coda_cursor_get_record_field_available_status@plt>:
   1220c:	add	ip, pc, #0, 12
   12210:	add	ip, ip, #122880	; 0x1e000
   12214:	ldr	pc, [ip, #3612]!	; 0xe1c

00012218 <fopen@plt>:
   12218:	add	ip, pc, #0, 12
   1221c:	add	ip, ip, #122880	; 0x1e000
   12220:	ldr	pc, [ip, #3604]!	; 0xe14

00012224 <coda_set_error@plt>:
   12224:	add	ip, pc, #0, 12
   12228:	add	ip, ip, #122880	; 0x1e000
   1222c:	ldr	pc, [ip, #3596]!	; 0xe0c

00012230 <coda_open@plt>:
   12230:	add	ip, pc, #0, 12
   12234:	add	ip, ip, #122880	; 0x1e000
   12238:	ldr	pc, [ip, #3588]!	; 0xe04

0001223c <fflush@plt>:
   1223c:	add	ip, pc, #0, 12
   12240:	add	ip, ip, #122880	; 0x1e000
   12244:	ldr	pc, [ip, #3580]!	; 0xdfc

00012248 <coda_time_double_to_string@plt>:
   12248:	add	ip, pc, #0, 12
   1224c:	add	ip, ip, #122880	; 0x1e000
   12250:	ldr	pc, [ip, #3572]!	; 0xdf4

00012254 <coda_cursor_get_num_elements@plt>:
   12254:	add	ip, pc, #0, 12
   12258:	add	ip, ip, #122880	; 0x1e000
   1225c:	ldr	pc, [ip, #3564]!	; 0xdec

00012260 <coda_str64u@plt>:
   12260:	add	ip, pc, #0, 12
   12264:	add	ip, ip, #122880	; 0x1e000
   12268:	ldr	pc, [ip, #3556]!	; 0xde4

0001226c <free@plt>:
   1226c:	add	ip, pc, #0, 12
   12270:	add	ip, ip, #122880	; 0x1e000
   12274:	ldr	pc, [ip, #3548]!	; 0xddc

00012278 <coda_set_option_use_mmap@plt>:
   12278:	add	ip, pc, #0, 12
   1227c:	add	ip, ip, #122880	; 0x1e000
   12280:	ldr	pc, [ip, #3540]!	; 0xdd4

00012284 <coda_set_definition_path_conditional@plt>:
   12284:	add	ip, pc, #0, 12
   12288:	add	ip, ip, #122880	; 0x1e000
   1228c:	ldr	pc, [ip, #3532]!	; 0xdcc

00012290 <coda_cursor_read_uint32@plt>:
   12290:	add	ip, pc, #0, 12
   12294:	add	ip, ip, #122880	; 0x1e000
   12298:	ldr	pc, [ip, #3524]!	; 0xdc4

0001229c <coda_set_option_bypass_special_types@plt>:
   1229c:	add	ip, pc, #0, 12
   122a0:	add	ip, ip, #122880	; 0x1e000
   122a4:	ldr	pc, [ip, #3516]!	; 0xdbc

000122a8 <coda_type_get_record_field_type@plt>:
   122a8:	add	ip, pc, #0, 12
   122ac:	add	ip, ip, #122880	; 0x1e000
   122b0:	ldr	pc, [ip, #3508]!	; 0xdb4

000122b4 <coda_cursor_get_type@plt>:
   122b4:	add	ip, pc, #0, 12
   122b8:	add	ip, ip, #122880	; 0x1e000
   122bc:	ldr	pc, [ip, #3500]!	; 0xdac

000122c0 <memcpy@plt>:
   122c0:	add	ip, pc, #0, 12
   122c4:	add	ip, ip, #122880	; 0x1e000
   122c8:	ldr	pc, [ip, #3492]!	; 0xda4

000122cc <coda_isInf@plt>:
   122cc:	add	ip, pc, #0, 12
   122d0:	add	ip, ip, #122880	; 0x1e000
   122d4:	ldr	pc, [ip, #3484]!	; 0xd9c

000122d8 <coda_type_get_bit_size@plt>:
   122d8:	add	ip, pc, #0, 12
   122dc:	add	ip, ip, #122880	; 0x1e000
   122e0:	ldr	pc, [ip, #3476]!	; 0xd94

000122e4 <coda_type_get_record_field_available_status@plt>:
   122e4:	add	ip, pc, #0, 12
   122e8:	add	ip, ip, #122880	; 0x1e000
   122ec:	ldr	pc, [ip, #3468]!	; 0xd8c

000122f0 <coda_cursor_has_attributes@plt>:
   122f0:	add	ip, pc, #0, 12
   122f4:	add	ip, ip, #122880	; 0x1e000
   122f8:	ldr	pc, [ip, #3460]!	; 0xd84

000122fc <coda_cursor_get_type_class@plt>:
   122fc:	add	ip, pc, #0, 12
   12300:	add	ip, ip, #122880	; 0x1e000
   12304:	ldr	pc, [ip, #3452]!	; 0xd7c

00012308 <coda_set_definition_path@plt>:
   12308:	add	ip, pc, #0, 12
   1230c:	add	ip, ip, #122880	; 0x1e000
   12310:	ldr	pc, [ip, #3444]!	; 0xd74

00012314 <coda_get_product_format@plt>:
   12314:	add	ip, pc, #0, 12
   12318:	add	ip, ip, #122880	; 0x1e000
   1231c:	ldr	pc, [ip, #3436]!	; 0xd6c

00012320 <coda_type_get_unit@plt>:
   12320:	add	ip, pc, #0, 12
   12324:	add	ip, ip, #122880	; 0x1e000
   12328:	ldr	pc, [ip, #3428]!	; 0xd64

0001232c <coda_type_get_description@plt>:
   1232c:	add	ip, pc, #0, 12
   12330:	add	ip, ip, #122880	; 0x1e000
   12334:	ldr	pc, [ip, #3420]!	; 0xd5c

00012338 <coda_cursor_get_special_type@plt>:
   12338:	add	ip, pc, #0, 12
   1233c:	add	ip, ip, #122880	; 0x1e000
   12340:	ldr	pc, [ip, #3412]!	; 0xd54

00012344 <coda_cursor_goto_first_array_element@plt>:
   12344:	add	ip, pc, #0, 12
   12348:	add	ip, ip, #122880	; 0x1e000
   1234c:	ldr	pc, [ip, #3404]!	; 0xd4c

00012350 <fwrite@plt>:
   12350:	add	ip, pc, #0, 12
   12354:	add	ip, ip, #122880	; 0x1e000
   12358:	ldr	pc, [ip, #3396]!	; 0xd44

0001235c <coda_cursor_set_product@plt>:
   1235c:	add	ip, pc, #0, 12
   12360:	add	ip, ip, #122880	; 0x1e000
   12364:	ldr	pc, [ip, #3388]!	; 0xd3c

00012368 <coda_cursor_goto_first_record_field@plt>:
   12368:	add	ip, pc, #0, 12
   1236c:	add	ip, ip, #122880	; 0x1e000
   12370:	ldr	pc, [ip, #3380]!	; 0xd34

00012374 <coda_cursor_goto_record_field_by_index@plt>:
   12374:	add	ip, pc, #0, 12
   12378:	add	ip, ip, #122880	; 0x1e000
   1237c:	ldr	pc, [ip, #3372]!	; 0xd2c

00012380 <coda_done@plt>:
   12380:	add	ip, pc, #0, 12
   12384:	add	ip, ip, #122880	; 0x1e000
   12388:	ldr	pc, [ip, #3364]!	; 0xd24

0001238c <puts@plt>:
   1238c:	add	ip, pc, #0, 12
   12390:	add	ip, ip, #122880	; 0x1e000
   12394:	ldr	pc, [ip, #3356]!	; 0xd1c

00012398 <coda_cursor_get_read_type@plt>:
   12398:	add	ip, pc, #0, 12
   1239c:	add	ip, ip, #122880	; 0x1e000
   123a0:	ldr	pc, [ip, #3348]!	; 0xd14

000123a4 <malloc@plt>:
   123a4:	add	ip, pc, #0, 12
   123a8:	add	ip, ip, #122880	; 0x1e000
   123ac:	ldr	pc, [ip, #3340]!	; 0xd0c

000123b0 <__libc_start_main@plt>:
   123b0:	add	ip, pc, #0, 12
   123b4:	add	ip, ip, #122880	; 0x1e000
   123b8:	ldr	pc, [ip, #3332]!	; 0xd04

000123bc <__gmon_start__@plt>:
   123bc:	add	ip, pc, #0, 12
   123c0:	add	ip, ip, #122880	; 0x1e000
   123c4:	ldr	pc, [ip, #3324]!	; 0xcfc

000123c8 <coda_cursor_read_string@plt>:
   123c8:	add	ip, pc, #0, 12
   123cc:	add	ip, ip, #122880	; 0x1e000
   123d0:	ldr	pc, [ip, #3316]!	; 0xcf4

000123d4 <coda_cursor_goto_parent@plt>:
   123d4:	add	ip, pc, #0, 12
   123d8:	add	ip, ip, #122880	; 0x1e000
   123dc:	ldr	pc, [ip, #3308]!	; 0xcec

000123e0 <coda_type_get_num_record_fields@plt>:
   123e0:	add	ip, pc, #0, 12
   123e4:	add	ip, ip, #122880	; 0x1e000
   123e8:	ldr	pc, [ip, #3300]!	; 0xce4

000123ec <exit@plt>:
   123ec:	add	ip, pc, #0, 12
   123f0:	add	ip, ip, #122880	; 0x1e000
   123f4:	ldr	pc, [ip, #3292]!	; 0xcdc

000123f8 <coda_type_get_read_type@plt>:
   123f8:	add	ip, pc, #0, 12
   123fc:	add	ip, ip, #122880	; 0x1e000
   12400:	ldr	pc, [ip, #3284]!	; 0xcd4

00012404 <coda_cursor_get_string_length@plt>:
   12404:	add	ip, pc, #0, 12
   12408:	add	ip, ip, #122880	; 0x1e000
   1240c:	ldr	pc, [ip, #3276]!	; 0xccc

00012410 <coda_cursor_read_uint64@plt>:
   12410:	add	ip, pc, #0, 12
   12414:	add	ip, ip, #122880	; 0x1e000
   12418:	ldr	pc, [ip, #3268]!	; 0xcc4

0001241c <coda_cursor_read_double@plt>:
   1241c:	add	ip, pc, #0, 12
   12420:	add	ip, ip, #122880	; 0x1e000
   12424:	ldr	pc, [ip, #3260]!	; 0xcbc

00012428 <coda_isNaN@plt>:
   12428:	add	ip, pc, #0, 12
   1242c:	add	ip, ip, #122880	; 0x1e000
   12430:	ldr	pc, [ip, #3252]!	; 0xcb4

00012434 <fprintf@plt>:
   12434:	add	ip, pc, #0, 12
   12438:	add	ip, ip, #122880	; 0x1e000
   1243c:	ldr	pc, [ip, #3244]!	; 0xcac

00012440 <coda_cursor_goto_next_array_element@plt>:
   12440:	add	ip, pc, #0, 12
   12444:	add	ip, ip, #122880	; 0x1e000
   12448:	ldr	pc, [ip, #3236]!	; 0xca4

0001244c <coda_open_as@plt>:
   1244c:	add	ip, pc, #0, 12
   12450:	add	ip, ip, #122880	; 0x1e000
   12454:	ldr	pc, [ip, #3228]!	; 0xc9c

00012458 <coda_init@plt>:
   12458:	add	ip, pc, #0, 12
   1245c:	add	ip, ip, #122880	; 0x1e000
   12460:	ldr	pc, [ip, #3220]!	; 0xc94

00012464 <coda_set_option_perform_conversions@plt>:
   12464:	add	ip, pc, #0, 12
   12468:	add	ip, ip, #122880	; 0x1e000
   1246c:	ldr	pc, [ip, #3212]!	; 0xc8c

00012470 <coda_cursor_goto_attributes@plt>:
   12470:	add	ip, pc, #0, 12
   12474:	add	ip, ip, #122880	; 0x1e000
   12478:	ldr	pc, [ip, #3204]!	; 0xc84

0001247c <coda_cursor_read_char@plt>:
   1247c:	add	ip, pc, #0, 12
   12480:	add	ip, ip, #122880	; 0x1e000
   12484:	ldr	pc, [ip, #3196]!	; 0xc7c

00012488 <memset@plt>:
   12488:	add	ip, pc, #0, 12
   1248c:	add	ip, ip, #122880	; 0x1e000
   12490:	ldr	pc, [ip, #3188]!	; 0xc74

00012494 <putchar@plt>:
   12494:	add	ip, pc, #0, 12
   12498:	add	ip, ip, #122880	; 0x1e000
   1249c:	ldr	pc, [ip, #3180]!	; 0xc6c

000124a0 <strncpy@plt>:
   124a0:	add	ip, pc, #0, 12
   124a4:	add	ip, ip, #122880	; 0x1e000
   124a8:	ldr	pc, [ip, #3172]!	; 0xc64

000124ac <coda_type_get_special_type@plt>:
   124ac:	add	ip, pc, #0, 12
   124b0:	add	ip, ip, #122880	; 0x1e000
   124b4:	ldr	pc, [ip, #3164]!	; 0xc5c

000124b8 <coda_type_get_record_union_status@plt>:
   124b8:	add	ip, pc, #0, 12
   124bc:	add	ip, ip, #122880	; 0x1e000
   124c0:	ldr	pc, [ip, #3156]!	; 0xc54

000124c4 <coda_cursor_read_complex_double_split@plt>:
   124c4:	add	ip, pc, #0, 12
   124c8:	add	ip, ip, #122880	; 0x1e000
   124cc:	ldr	pc, [ip, #3148]!	; 0xc4c

000124d0 <coda_type_get_array_base_type@plt>:
   124d0:	add	ip, pc, #0, 12
   124d4:	add	ip, ip, #122880	; 0x1e000
   124d8:	ldr	pc, [ip, #3140]!	; 0xc44

000124dc <fclose@plt>:
   124dc:	add	ip, pc, #0, 12
   124e0:	add	ip, ip, #122880	; 0x1e000
   124e4:	ldr	pc, [ip, #3132]!	; 0xc3c

000124e8 <coda_type_get_string_length@plt>:
   124e8:	add	ip, pc, #0, 12
   124ec:	add	ip, ip, #122880	; 0x1e000
   124f0:	ldr	pc, [ip, #3124]!	; 0xc34

000124f4 <coda_type_get_native_type_name@plt>:
   124f4:	add	ip, pc, #0, 12
   124f8:	add	ip, ip, #122880	; 0x1e000
   124fc:	ldr	pc, [ip, #3116]!	; 0xc2c

00012500 <coda_cursor_get_array_dim@plt>:
   12500:	add	ip, pc, #0, 12
   12504:	add	ip, ip, #122880	; 0x1e000
   12508:	ldr	pc, [ip, #3108]!	; 0xc24

0001250c <coda_cursor_has_ascii_content@plt>:
   1250c:	add	ip, pc, #0, 12
   12510:	add	ip, ip, #122880	; 0x1e000
   12514:	ldr	pc, [ip, #3100]!	; 0xc1c

00012518 <coda_close@plt>:
   12518:	add	ip, pc, #0, 12
   1251c:	add	ip, ip, #122880	; 0x1e000
   12520:	ldr	pc, [ip, #3092]!	; 0xc14

00012524 <coda_cursor_read_int64@plt>:
   12524:	add	ip, pc, #0, 12
   12528:	add	ip, ip, #122880	; 0x1e000
   1252c:	ldr	pc, [ip, #3084]!	; 0xc0c

00012530 <vfprintf@plt>:
   12530:	add	ip, pc, #0, 12
   12534:	add	ip, ip, #122880	; 0x1e000
   12538:	ldr	pc, [ip, #3076]!	; 0xc04

0001253c <coda_cursor_goto@plt>:
   1253c:	add	ip, pc, #0, 12
   12540:	add	ip, ip, #122880	; 0x1e000
   12544:	ldr	pc, [ip, #3068]!	; 0xbfc

00012548 <coda_type_get_record_field_index_from_name@plt>:
   12548:	add	ip, pc, #0, 12
   1254c:	add	ip, ip, #122880	; 0x1e000
   12550:	ldr	pc, [ip, #3060]!	; 0xbf4

00012554 <coda_cursor_read_complex_double_pair@plt>:
   12554:	add	ip, pc, #0, 12
   12558:	add	ip, ip, #122880	; 0x1e000
   1255c:	ldr	pc, [ip, #3052]!	; 0xbec

00012560 <coda_cursor_goto_next_record_field@plt>:
   12560:	add	ip, pc, #0, 12
   12564:	add	ip, ip, #122880	; 0x1e000
   12568:	ldr	pc, [ip, #3044]!	; 0xbe4

0001256c <fputc@plt>:
   1256c:	add	ip, pc, #0, 12
   12570:	add	ip, ip, #122880	; 0x1e000
   12574:	ldr	pc, [ip, #3036]!	; 0xbdc

00012578 <coda_type_get_array_dim@plt>:
   12578:	add	ip, pc, #0, 12
   1257c:	add	ip, ip, #122880	; 0x1e000
   12580:	ldr	pc, [ip, #3028]!	; 0xbd4

00012584 <coda_cursor_get_bit_size@plt>:
   12584:	add	ip, pc, #0, 12
   12588:	add	ip, ip, #122880	; 0x1e000
   1258c:	ldr	pc, [ip, #3020]!	; 0xbcc

00012590 <atoi@plt>:
   12590:	add	ip, pc, #0, 12
   12594:	add	ip, ip, #122880	; 0x1e000
   12598:	ldr	pc, [ip, #3012]!	; 0xbc4

0001259c <coda_errno_to_string@plt>:
   1259c:	add	ip, pc, #0, 12
   125a0:	add	ip, ip, #122880	; 0x1e000
   125a4:	ldr	pc, [ip, #3004]!	; 0xbbc

000125a8 <coda_cursor_use_base_type_of_special_type@plt>:
   125a8:	add	ip, pc, #0, 12
   125ac:	add	ip, ip, #122880	; 0x1e000
   125b0:	ldr	pc, [ip, #2996]!	; 0xbb4

000125b4 <coda_cursor_get_available_union_field_index@plt>:
   125b4:	add	ip, pc, #0, 12
   125b8:	add	ip, ip, #122880	; 0x1e000
   125bc:	ldr	pc, [ip, #2988]!	; 0xbac

000125c0 <coda_cursor_read_int32@plt>:
   125c0:	add	ip, pc, #0, 12
   125c4:	add	ip, ip, #122880	; 0x1e000
   125c8:	ldr	pc, [ip, #2980]!	; 0xba4

000125cc <coda_cursor_get_file_bit_offset@plt>:
   125cc:	add	ip, pc, #0, 12
   125d0:	add	ip, ip, #122880	; 0x1e000
   125d4:	ldr	pc, [ip, #2972]!	; 0xb9c

000125d8 <coda_get_libcoda_version@plt>:
   125d8:	add	ip, pc, #0, 12
   125dc:	add	ip, ip, #122880	; 0x1e000
   125e0:	ldr	pc, [ip, #2964]!	; 0xb94

000125e4 <coda_get_errno@plt>:
   125e4:	add	ip, pc, #0, 12
   125e8:	add	ip, ip, #122880	; 0x1e000
   125ec:	ldr	pc, [ip, #2956]!	; 0xb8c

000125f0 <coda_type_get_special_base_type@plt>:
   125f0:	add	ip, pc, #0, 12
   125f4:	add	ip, ip, #122880	; 0x1e000
   125f8:	ldr	pc, [ip, #2948]!	; 0xb84

000125fc <coda_type_get_record_field_name@plt>:
   125fc:	add	ip, pc, #0, 12
   12600:	add	ip, ip, #122880	; 0x1e000
   12604:	ldr	pc, [ip, #2940]!	; 0xb7c

00012608 <fputs@plt>:
   12608:	add	ip, pc, #0, 12
   1260c:	add	ip, ip, #122880	; 0x1e000
   12610:	ldr	pc, [ip, #2932]!	; 0xb74

00012614 <abort@plt>:
   12614:	add	ip, pc, #0, 12
   12618:	add	ip, ip, #122880	; 0x1e000
   1261c:	ldr	pc, [ip, #2924]!	; 0xb6c

00012620 <coda_cursor_read_bits@plt>:
   12620:	add	ip, pc, #0, 12
   12624:	add	ip, ip, #122880	; 0x1e000
   12628:	ldr	pc, [ip, #2916]!	; 0xb64

0001262c <coda_str64@plt>:
   1262c:	add	ip, pc, #0, 12
   12630:	add	ip, ip, #122880	; 0x1e000
   12634:	ldr	pc, [ip, #2908]!	; 0xb5c

00012638 <__assert_fail@plt>:
   12638:	add	ip, pc, #0, 12
   1263c:	add	ip, ip, #122880	; 0x1e000
   12640:	ldr	pc, [ip, #2900]!	; 0xb54

00012644 <coda_type_get_class@plt>:
   12644:	add	ip, pc, #0, 12
   12648:	add	ip, ip, #122880	; 0x1e000
   1264c:	ldr	pc, [ip, #2892]!	; 0xb4c

Disassembly of section .text:

00012650 <_start@@Base>:
   12650:	mov	fp, #0
   12654:	mov	lr, #0
   12658:	pop	{r1}		; (ldr r1, [sp], #4)
   1265c:	mov	r2, sp
   12660:	push	{r2}		; (str r2, [sp, #-4]!)
   12664:	push	{r0}		; (str r0, [sp, #-4]!)
   12668:	ldr	ip, [pc, #16]	; 12680 <_start@@Base+0x30>
   1266c:	push	{ip}		; (str ip, [sp, #-4]!)
   12670:	ldr	r0, [pc, #12]	; 12684 <_start@@Base+0x34>
   12674:	ldr	r3, [pc, #12]	; 12688 <_start@@Base+0x38>
   12678:	bl	123b0 <__libc_start_main@plt>
   1267c:	bl	12614 <abort@plt>
   12680:	muleq	r1, r4, r8
   12684:	andeq	lr, r1, ip, asr r1
   12688:	andeq	lr, r1, r4, lsr r8
   1268c:	ldr	r3, [pc, #20]	; 126a8 <_start@@Base+0x58>
   12690:	ldr	r2, [pc, #20]	; 126ac <_start@@Base+0x5c>
   12694:	add	r3, pc, r3
   12698:	ldr	r2, [r3, r2]
   1269c:	cmp	r2, #0
   126a0:	bxeq	lr
   126a4:	b	123bc <__gmon_start__@plt>
   126a8:	andeq	lr, r1, r4, ror #18
   126ac:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   126b0:	ldr	r0, [pc, #24]	; 126d0 <_start@@Base+0x80>
   126b4:	ldr	r3, [pc, #24]	; 126d4 <_start@@Base+0x84>
   126b8:	cmp	r3, r0
   126bc:	bxeq	lr
   126c0:	ldr	r3, [pc, #16]	; 126d8 <_start@@Base+0x88>
   126c4:	cmp	r3, #0
   126c8:	bxeq	lr
   126cc:	bx	r3
   126d0:	andeq	r1, r3, r4, lsl #4
   126d4:	andeq	r1, r3, r4, lsl #4
   126d8:	andeq	r0, r0, r0
   126dc:	ldr	r0, [pc, #36]	; 12708 <_start@@Base+0xb8>
   126e0:	ldr	r1, [pc, #36]	; 1270c <_start@@Base+0xbc>
   126e4:	sub	r1, r1, r0
   126e8:	asr	r1, r1, #2
   126ec:	add	r1, r1, r1, lsr #31
   126f0:	asrs	r1, r1, #1
   126f4:	bxeq	lr
   126f8:	ldr	r3, [pc, #16]	; 12710 <_start@@Base+0xc0>
   126fc:	cmp	r3, #0
   12700:	bxeq	lr
   12704:	bx	r3
   12708:	andeq	r1, r3, r4, lsl #4
   1270c:	andeq	r1, r3, r4, lsl #4
   12710:	andeq	r0, r0, r0
   12714:	push	{r4, lr}
   12718:	ldr	r4, [pc, #24]	; 12738 <_start@@Base+0xe8>
   1271c:	ldrb	r3, [r4]
   12720:	cmp	r3, #0
   12724:	popne	{r4, pc}
   12728:	bl	126b0 <_start@@Base+0x60>
   1272c:	mov	r3, #1
   12730:	strb	r3, [r4]
   12734:	pop	{r4, pc}
   12738:	andeq	r1, r3, r8, lsl #4
   1273c:	b	126dc <_start@@Base+0x8c>
   12740:	str	r4, [sp, #-12]!
   12744:	str	fp, [sp, #4]
   12748:	str	lr, [sp, #8]
   1274c:	add	fp, sp, #8
   12750:	sub	sp, sp, #28
   12754:	str	r0, [fp, #-32]	; 0xffffffe0
   12758:	ldr	r4, [pc, #304]	; 12890 <_start@@Base+0x240>
   1275c:	add	r4, pc, r4
   12760:	mov	r3, #0
   12764:	str	r3, [fp, #-16]
   12768:	mov	r3, #0
   1276c:	str	r3, [fp, #-20]	; 0xffffffec
   12770:	b	12860 <_start@@Base+0x210>
   12774:	ldr	r3, [pc, #280]	; 12894 <_start@@Base+0x244>
   12778:	ldr	r3, [r4, r3]
   1277c:	ldr	r2, [fp, #-20]	; 0xffffffec
   12780:	add	r2, r2, #2
   12784:	ldr	r3, [r3, r2, lsl #2]
   12788:	sub	r2, fp, #28
   1278c:	mov	r1, r2
   12790:	mov	r0, r3
   12794:	bl	12644 <coda_type_get_class@plt>
   12798:	mov	r3, r0
   1279c:	cmp	r3, #0
   127a0:	beq	127a8 <_start@@Base+0x158>
   127a4:	bl	1bdc8 <handle_coda_error@@Base>
   127a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   127ac:	cmp	r3, #1
   127b0:	bne	12854 <_start@@Base+0x204>
   127b4:	mov	r3, #0
   127b8:	str	r3, [fp, #-24]	; 0xffffffe8
   127bc:	b	12814 <_start@@Base+0x1c4>
   127c0:	ldr	r3, [pc, #204]	; 12894 <_start@@Base+0x244>
   127c4:	ldr	r1, [r4, r3]
   127c8:	ldr	r2, [fp, #-16]
   127cc:	mov	r3, r2
   127d0:	lsl	r3, r3, #2
   127d4:	add	r3, r3, r2
   127d8:	lsl	r3, r3, #2
   127dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   127e0:	add	r3, r3, r2
   127e4:	add	r3, r3, #212	; 0xd4
   127e8:	ldr	r2, [r1, r3, lsl #2]
   127ec:	ldr	r3, [pc, #164]	; 12898 <_start@@Base+0x248>
   127f0:	ldr	r3, [r4, r3]
   127f4:	ldr	r3, [r3]
   127f8:	ldr	r1, [pc, #156]	; 1289c <_start@@Base+0x24c>
   127fc:	add	r1, pc, r1
   12800:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12804:	bl	12434 <fprintf@plt>
   12808:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1280c:	add	r3, r3, #1
   12810:	str	r3, [fp, #-24]	; 0xffffffe8
   12814:	ldr	r3, [pc, #120]	; 12894 <_start@@Base+0x244>
   12818:	ldr	r1, [r4, r3]
   1281c:	ldr	r2, [fp, #-16]
   12820:	mov	r3, r2
   12824:	lsl	r3, r3, #2
   12828:	add	r3, r3, r2
   1282c:	lsl	r3, r3, #4
   12830:	add	r3, r1, r3
   12834:	add	r3, r3, #804	; 0x324
   12838:	ldr	r3, [r3]
   1283c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12840:	cmp	r2, r3
   12844:	blt	127c0 <_start@@Base+0x170>
   12848:	ldr	r3, [fp, #-16]
   1284c:	add	r3, r3, #1
   12850:	str	r3, [fp, #-16]
   12854:	ldr	r3, [fp, #-20]	; 0xffffffec
   12858:	add	r3, r3, #1
   1285c:	str	r3, [fp, #-20]	; 0xffffffec
   12860:	ldr	r3, [pc, #44]	; 12894 <_start@@Base+0x244>
   12864:	ldr	r3, [r4, r3]
   12868:	ldr	r3, [r3, #136]	; 0x88
   1286c:	ldr	r2, [fp, #-20]	; 0xffffffec
   12870:	cmp	r2, r3
   12874:	blt	12774 <_start@@Base+0x124>
   12878:	nop	{0}
   1287c:	sub	sp, fp, #8
   12880:	ldr	r4, [sp]
   12884:	ldr	fp, [sp, #4]
   12888:	add	sp, sp, #8
   1288c:	pop	{pc}		; (ldr pc, [sp], #4)
   12890:	muleq	r1, ip, r8
   12894:			; <UNDEFINED> instruction: 0x000001b4
   12898:	andeq	r0, r0, r0, asr #3
   1289c:	andeq	ip, r0, r0, lsr #1
   128a0:	str	r4, [sp, #-28]!	; 0xffffffe4
   128a4:	strd	r6, [sp, #4]
   128a8:	strd	r8, [sp, #12]
   128ac:	str	fp, [sp, #20]
   128b0:	str	lr, [sp, #24]
   128b4:	add	fp, sp, #24
   128b8:	sub	sp, sp, #228	; 0xe4
   128bc:	str	r0, [fp, #-224]	; 0xffffff20
   128c0:	str	r1, [fp, #-228]	; 0xffffff1c
   128c4:	ldr	r4, [pc, #2368]	; 1320c <_start@@Base+0xbbc>
   128c8:	add	r4, pc, r4
   128cc:	ldr	r3, [pc, #2364]	; 13210 <_start@@Base+0xbc0>
   128d0:	ldr	r3, [r4, r3]
   128d4:	ldr	r3, [r3]
   128d8:	cmp	r3, #0
   128dc:	beq	128e8 <_start@@Base+0x298>
   128e0:	ldr	r0, [fp, #-224]	; 0xffffff20
   128e4:	bl	12740 <_start@@Base+0xf0>
   128e8:	ldr	r3, [pc, #2340]	; 13214 <_start@@Base+0xbc4>
   128ec:	ldr	r3, [r4, r3]
   128f0:	ldr	r2, [fp, #-228]	; 0xffffff1c
   128f4:	add	r2, r2, #2
   128f8:	ldr	r3, [r3, r2, lsl #2]
   128fc:	sub	r2, fp, #56	; 0x38
   12900:	mov	r1, r2
   12904:	mov	r0, r3
   12908:	bl	12644 <coda_type_get_class@plt>
   1290c:	mov	r3, r0
   12910:	cmp	r3, #0
   12914:	beq	1291c <_start@@Base+0x2cc>
   12918:	bl	1bdc8 <handle_coda_error@@Base>
   1291c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12920:	cmp	r3, #6
   12924:	addls	pc, pc, r3, lsl #2
   12928:	b	131e0 <_start@@Base+0xb90>
   1292c:	b	131b4 <_start@@Base+0xb64>
   12930:	b	131b4 <_start@@Base+0xb64>
   12934:	b	12948 <_start@@Base+0x2f8>
   12938:	b	12948 <_start@@Base+0x2f8>
   1293c:	b	12948 <_start@@Base+0x2f8>
   12940:	b	12948 <_start@@Base+0x2f8>
   12944:	b	12fb4 <_start@@Base+0x964>
   12948:	ldr	r3, [pc, #2244]	; 13214 <_start@@Base+0xbc4>
   1294c:	ldr	r3, [r4, r3]
   12950:	ldr	r2, [fp, #-228]	; 0xffffff1c
   12954:	add	r2, r2, #2
   12958:	ldr	r3, [r3, r2, lsl #2]
   1295c:	sub	r2, fp, #60	; 0x3c
   12960:	mov	r1, r2
   12964:	mov	r0, r3
   12968:	bl	123f8 <coda_type_get_read_type@plt>
   1296c:	mov	r3, r0
   12970:	cmp	r3, #0
   12974:	beq	1297c <_start@@Base+0x32c>
   12978:	bl	1bdc8 <handle_coda_error@@Base>
   1297c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12980:	add	r3, r3, #1
   12984:	cmp	r3, #13
   12988:	addls	pc, pc, r3, lsl #2
   1298c:	b	131d4 <_start@@Base+0xb84>
   12990:	b	12f90 <_start@@Base+0x940>
   12994:	b	12e04 <_start@@Base+0x7b4>
   12998:	b	12e4c <_start@@Base+0x7fc>
   1299c:	b	12e04 <_start@@Base+0x7b4>
   129a0:	b	12e4c <_start@@Base+0x7fc>
   129a4:	b	12e04 <_start@@Base+0x7b4>
   129a8:	b	12e4c <_start@@Base+0x7fc>
   129ac:	b	12e94 <_start@@Base+0x844>
   129b0:	b	12ee0 <_start@@Base+0x890>
   129b4:	b	12f2c <_start@@Base+0x8dc>
   129b8:	b	12f2c <_start@@Base+0x8dc>
   129bc:	b	129c8 <_start@@Base+0x378>
   129c0:	b	12a38 <_start@@Base+0x3e8>
   129c4:	b	12b28 <_start@@Base+0x4d8>
   129c8:	sub	r3, fp, #61	; 0x3d
   129cc:	mov	r1, r3
   129d0:	ldr	r3, [pc, #2108]	; 13214 <_start@@Base+0xbc4>
   129d4:	ldr	r3, [r4, r3]
   129d8:	add	r0, r3, #144	; 0x90
   129dc:	bl	1247c <coda_cursor_read_char@plt>
   129e0:	mov	r3, r0
   129e4:	cmp	r3, #0
   129e8:	beq	129f0 <_start@@Base+0x3a0>
   129ec:	bl	1bdc8 <handle_coda_error@@Base>
   129f0:	ldr	r3, [pc, #2080]	; 13218 <_start@@Base+0xbc8>
   129f4:	ldr	r3, [r4, r3]
   129f8:	ldr	r3, [r3]
   129fc:	cmp	r3, #0
   12a00:	beq	12a24 <_start@@Base+0x3d4>
   12a04:	ldrb	r3, [fp, #-61]	; 0xffffffc3
   12a08:	mov	r2, r3
   12a0c:	ldr	r3, [pc, #2056]	; 1321c <_start@@Base+0xbcc>
   12a10:	add	r3, pc, r3
   12a14:	mov	r1, r3
   12a18:	ldr	r0, [fp, #-224]	; 0xffffff20
   12a1c:	bl	12434 <fprintf@plt>
   12a20:	b	12fb0 <_start@@Base+0x960>
   12a24:	ldrb	r3, [fp, #-61]	; 0xffffffc3
   12a28:	ldr	r1, [fp, #-224]	; 0xffffff20
   12a2c:	mov	r0, r3
   12a30:	bl	1256c <fputc@plt>
   12a34:	b	12fb0 <_start@@Base+0x960>
   12a38:	sub	r3, fp, #68	; 0x44
   12a3c:	mov	r1, r3
   12a40:	ldr	r3, [pc, #1996]	; 13214 <_start@@Base+0xbc4>
   12a44:	ldr	r3, [r4, r3]
   12a48:	add	r0, r3, #144	; 0x90
   12a4c:	bl	12404 <coda_cursor_get_string_length@plt>
   12a50:	mov	r3, r0
   12a54:	cmp	r3, #0
   12a58:	beq	12a60 <_start@@Base+0x410>
   12a5c:	bl	1bdc8 <handle_coda_error@@Base>
   12a60:	ldr	r3, [fp, #-68]	; 0xffffffbc
   12a64:	add	r3, r3, #1
   12a68:	mov	r0, r3
   12a6c:	bl	123a4 <malloc@plt>
   12a70:	mov	r3, r0
   12a74:	str	r3, [fp, #-36]	; 0xffffffdc
   12a78:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12a7c:	cmp	r3, #0
   12a80:	bne	12ab0 <_start@@Base+0x460>
   12a84:	ldr	r3, [fp, #-68]	; 0xffffffbc
   12a88:	add	r2, r3, #1
   12a8c:	mov	r3, #126	; 0x7e
   12a90:	str	r3, [sp]
   12a94:	ldr	r3, [pc, #1924]	; 13220 <_start@@Base+0xbd0>
   12a98:	add	r3, pc, r3
   12a9c:	ldr	r1, [pc, #1920]	; 13224 <_start@@Base+0xbd4>
   12aa0:	add	r1, pc, r1
   12aa4:	mvn	r0, #0
   12aa8:	bl	12224 <coda_set_error@plt>
   12aac:	bl	1bdc8 <handle_coda_error@@Base>
   12ab0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   12ab4:	add	r3, r3, #1
   12ab8:	mov	r2, r3
   12abc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12ac0:	ldr	r3, [pc, #1868]	; 13214 <_start@@Base+0xbc4>
   12ac4:	ldr	r3, [r4, r3]
   12ac8:	add	r0, r3, #144	; 0x90
   12acc:	bl	123c8 <coda_cursor_read_string@plt>
   12ad0:	mov	r3, r0
   12ad4:	cmp	r3, #0
   12ad8:	beq	12ae0 <_start@@Base+0x490>
   12adc:	bl	1bdc8 <handle_coda_error@@Base>
   12ae0:	ldr	r3, [pc, #1840]	; 13218 <_start@@Base+0xbc8>
   12ae4:	ldr	r3, [r4, r3]
   12ae8:	ldr	r3, [r3]
   12aec:	cmp	r3, #0
   12af0:	beq	12b10 <_start@@Base+0x4c0>
   12af4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   12af8:	ldr	r3, [pc, #1832]	; 13228 <_start@@Base+0xbd8>
   12afc:	add	r3, pc, r3
   12b00:	mov	r1, r3
   12b04:	ldr	r0, [fp, #-224]	; 0xffffff20
   12b08:	bl	12434 <fprintf@plt>
   12b0c:	b	12b1c <_start@@Base+0x4cc>
   12b10:	ldr	r1, [fp, #-224]	; 0xffffff20
   12b14:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12b18:	bl	12608 <fputs@plt>
   12b1c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12b20:	bl	1226c <free@plt>
   12b24:	b	12fb0 <_start@@Base+0x960>
   12b28:	sub	r3, fp, #76	; 0x4c
   12b2c:	mov	r1, r3
   12b30:	ldr	r3, [pc, #1756]	; 13214 <_start@@Base+0xbc4>
   12b34:	ldr	r3, [r4, r3]
   12b38:	add	r0, r3, #144	; 0x90
   12b3c:	bl	12584 <coda_cursor_get_bit_size@plt>
   12b40:	mov	r3, r0
   12b44:	cmp	r3, #0
   12b48:	beq	12b50 <_start@@Base+0x500>
   12b4c:	bl	1bdc8 <handle_coda_error@@Base>
   12b50:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   12b54:	mov	r2, #0
   12b58:	mov	r3, #0
   12b5c:	lsr	r2, r0, #3
   12b60:	orr	r2, r2, r1, lsl #29
   12b64:	asr	r3, r1, #3
   12b68:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   12b6c:	strd	r0, [fp, #-236]	; 0xffffff14
   12b70:	mov	r0, #7
   12b74:	mov	r1, #0
   12b78:	mov	ip, r0
   12b7c:	ldr	lr, [fp, #-236]	; 0xffffff14
   12b80:	and	r8, lr, ip
   12b84:	ldr	r0, [fp, #-232]	; 0xffffff18
   12b88:	and	r0, r0, r1
   12b8c:	mov	r9, r0
   12b90:	orrs	r1, r8, r9
   12b94:	beq	12ba4 <_start@@Base+0x554>
   12b98:	mov	r0, #1
   12b9c:	mov	r1, #0
   12ba0:	b	12bac <_start@@Base+0x55c>
   12ba4:	mov	r0, #0
   12ba8:	mov	r1, #0
   12bac:	adds	r6, r0, r2
   12bb0:	adc	r7, r1, r3
   12bb4:	strd	r6, [fp, #-44]	; 0xffffffd4
   12bb8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12bbc:	mov	r0, r3
   12bc0:	bl	123a4 <malloc@plt>
   12bc4:	mov	r3, r0
   12bc8:	str	r3, [fp, #-48]	; 0xffffffd0
   12bcc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12bd0:	cmp	r3, #0
   12bd4:	bne	12c00 <_start@@Base+0x5b0>
   12bd8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   12bdc:	mov	r3, #163	; 0xa3
   12be0:	str	r3, [sp]
   12be4:	ldr	r3, [pc, #1600]	; 1322c <_start@@Base+0xbdc>
   12be8:	add	r3, pc, r3
   12bec:	ldr	r1, [pc, #1596]	; 13230 <_start@@Base+0xbe0>
   12bf0:	add	r1, pc, r1
   12bf4:	mvn	r0, #0
   12bf8:	bl	12224 <coda_set_error@plt>
   12bfc:	bl	1bdc8 <handle_coda_error@@Base>
   12c00:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   12c04:	strd	r2, [sp]
   12c08:	mov	r2, #0
   12c0c:	mov	r3, #0
   12c10:	ldr	r1, [fp, #-48]	; 0xffffffd0
   12c14:	ldr	r0, [pc, #1528]	; 13214 <_start@@Base+0xbc4>
   12c18:	ldr	r0, [r4, r0]
   12c1c:	add	r0, r0, #144	; 0x90
   12c20:	bl	12620 <coda_cursor_read_bits@plt>
   12c24:	mov	r3, r0
   12c28:	cmp	r3, #0
   12c2c:	beq	12c34 <_start@@Base+0x5e4>
   12c30:	bl	1bdc8 <handle_coda_error@@Base>
   12c34:	mov	r3, #0
   12c38:	str	r3, [fp, #-32]	; 0xffffffe0
   12c3c:	b	12ddc <_start@@Base+0x78c>
   12c40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12c44:	ldr	r2, [fp, #-48]	; 0xffffffd0
   12c48:	add	r3, r2, r3
   12c4c:	ldrb	r3, [r3]
   12c50:	strb	r3, [fp, #-49]	; 0xffffffcf
   12c54:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   12c58:	cmp	r3, #10
   12c5c:	beq	12cfc <_start@@Base+0x6ac>
   12c60:	cmp	r3, #10
   12c64:	bgt	12c84 <_start@@Base+0x634>
   12c68:	cmp	r3, #8
   12c6c:	beq	12cc4 <_start@@Base+0x674>
   12c70:	cmp	r3, #8
   12c74:	bgt	12ce0 <_start@@Base+0x690>
   12c78:	cmp	r3, #7
   12c7c:	beq	12ca8 <_start@@Base+0x658>
   12c80:	b	12d88 <_start@@Base+0x738>
   12c84:	cmp	r3, #12
   12c88:	beq	12d34 <_start@@Base+0x6e4>
   12c8c:	cmp	r3, #12
   12c90:	blt	12d18 <_start@@Base+0x6c8>
   12c94:	cmp	r3, #13
   12c98:	beq	12d50 <_start@@Base+0x700>
   12c9c:	cmp	r3, #92	; 0x5c
   12ca0:	beq	12d6c <_start@@Base+0x71c>
   12ca4:	b	12d88 <_start@@Base+0x738>
   12ca8:	ldr	r3, [fp, #-224]	; 0xffffff20
   12cac:	mov	r2, #2
   12cb0:	mov	r1, #1
   12cb4:	ldr	r0, [pc, #1400]	; 13234 <_start@@Base+0xbe4>
   12cb8:	add	r0, pc, r0
   12cbc:	bl	12350 <fwrite@plt>
   12cc0:	b	12dd0 <_start@@Base+0x780>
   12cc4:	ldr	r3, [fp, #-224]	; 0xffffff20
   12cc8:	mov	r2, #2
   12ccc:	mov	r1, #1
   12cd0:	ldr	r0, [pc, #1376]	; 13238 <_start@@Base+0xbe8>
   12cd4:	add	r0, pc, r0
   12cd8:	bl	12350 <fwrite@plt>
   12cdc:	b	12dd0 <_start@@Base+0x780>
   12ce0:	ldr	r3, [fp, #-224]	; 0xffffff20
   12ce4:	mov	r2, #2
   12ce8:	mov	r1, #1
   12cec:	ldr	r0, [pc, #1352]	; 1323c <_start@@Base+0xbec>
   12cf0:	add	r0, pc, r0
   12cf4:	bl	12350 <fwrite@plt>
   12cf8:	b	12dd0 <_start@@Base+0x780>
   12cfc:	ldr	r3, [fp, #-224]	; 0xffffff20
   12d00:	mov	r2, #2
   12d04:	mov	r1, #1
   12d08:	ldr	r0, [pc, #1328]	; 13240 <_start@@Base+0xbf0>
   12d0c:	add	r0, pc, r0
   12d10:	bl	12350 <fwrite@plt>
   12d14:	b	12dd0 <_start@@Base+0x780>
   12d18:	ldr	r3, [fp, #-224]	; 0xffffff20
   12d1c:	mov	r2, #2
   12d20:	mov	r1, #1
   12d24:	ldr	r0, [pc, #1304]	; 13244 <_start@@Base+0xbf4>
   12d28:	add	r0, pc, r0
   12d2c:	bl	12350 <fwrite@plt>
   12d30:	b	12dd0 <_start@@Base+0x780>
   12d34:	ldr	r3, [fp, #-224]	; 0xffffff20
   12d38:	mov	r2, #2
   12d3c:	mov	r1, #1
   12d40:	ldr	r0, [pc, #1280]	; 13248 <_start@@Base+0xbf8>
   12d44:	add	r0, pc, r0
   12d48:	bl	12350 <fwrite@plt>
   12d4c:	b	12dd0 <_start@@Base+0x780>
   12d50:	ldr	r3, [fp, #-224]	; 0xffffff20
   12d54:	mov	r2, #2
   12d58:	mov	r1, #1
   12d5c:	ldr	r0, [pc, #1256]	; 1324c <_start@@Base+0xbfc>
   12d60:	add	r0, pc, r0
   12d64:	bl	12350 <fwrite@plt>
   12d68:	b	12dd0 <_start@@Base+0x780>
   12d6c:	ldr	r3, [fp, #-224]	; 0xffffff20
   12d70:	mov	r2, #2
   12d74:	mov	r1, #1
   12d78:	ldr	r0, [pc, #1232]	; 13250 <_start@@Base+0xc00>
   12d7c:	add	r0, pc, r0
   12d80:	bl	12350 <fwrite@plt>
   12d84:	b	12dd0 <_start@@Base+0x780>
   12d88:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   12d8c:	cmp	r3, #31
   12d90:	bls	12db4 <_start@@Base+0x764>
   12d94:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   12d98:	cmp	r3, #126	; 0x7e
   12d9c:	bhi	12db4 <_start@@Base+0x764>
   12da0:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   12da4:	ldr	r1, [fp, #-224]	; 0xffffff20
   12da8:	mov	r0, r3
   12dac:	bl	1256c <fputc@plt>
   12db0:	b	12dd0 <_start@@Base+0x780>
   12db4:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   12db8:	mov	r2, r3
   12dbc:	ldr	r3, [pc, #1168]	; 13254 <_start@@Base+0xc04>
   12dc0:	add	r3, pc, r3
   12dc4:	mov	r1, r3
   12dc8:	ldr	r0, [fp, #-224]	; 0xffffff20
   12dcc:	bl	12434 <fprintf@plt>
   12dd0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12dd4:	add	r3, r3, #1
   12dd8:	str	r3, [fp, #-32]	; 0xffffffe0
   12ddc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12de0:	mov	r0, r3
   12de4:	asr	r1, r0, #31
   12de8:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   12dec:	cmp	r0, r2
   12df0:	sbcs	r3, r1, r3
   12df4:	blt	12c40 <_start@@Base+0x5f0>
   12df8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12dfc:	bl	1226c <free@plt>
   12e00:	b	12fb0 <_start@@Base+0x960>
   12e04:	sub	r3, fp, #80	; 0x50
   12e08:	mov	r1, r3
   12e0c:	ldr	r3, [pc, #1024]	; 13214 <_start@@Base+0xbc4>
   12e10:	ldr	r3, [r4, r3]
   12e14:	add	r0, r3, #144	; 0x90
   12e18:	bl	125c0 <coda_cursor_read_int32@plt>
   12e1c:	mov	r3, r0
   12e20:	cmp	r3, #0
   12e24:	beq	12e2c <_start@@Base+0x7dc>
   12e28:	bl	1bdc8 <handle_coda_error@@Base>
   12e2c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12e30:	mov	r2, r3
   12e34:	ldr	r3, [pc, #1052]	; 13258 <_start@@Base+0xc08>
   12e38:	add	r3, pc, r3
   12e3c:	mov	r1, r3
   12e40:	ldr	r0, [fp, #-224]	; 0xffffff20
   12e44:	bl	12434 <fprintf@plt>
   12e48:	b	12fb0 <_start@@Base+0x960>
   12e4c:	sub	r3, fp, #84	; 0x54
   12e50:	mov	r1, r3
   12e54:	ldr	r3, [pc, #952]	; 13214 <_start@@Base+0xbc4>
   12e58:	ldr	r3, [r4, r3]
   12e5c:	add	r0, r3, #144	; 0x90
   12e60:	bl	12290 <coda_cursor_read_uint32@plt>
   12e64:	mov	r3, r0
   12e68:	cmp	r3, #0
   12e6c:	beq	12e74 <_start@@Base+0x824>
   12e70:	bl	1bdc8 <handle_coda_error@@Base>
   12e74:	ldr	r3, [fp, #-84]	; 0xffffffac
   12e78:	mov	r2, r3
   12e7c:	ldr	r3, [pc, #984]	; 1325c <_start@@Base+0xc0c>
   12e80:	add	r3, pc, r3
   12e84:	mov	r1, r3
   12e88:	ldr	r0, [fp, #-224]	; 0xffffff20
   12e8c:	bl	12434 <fprintf@plt>
   12e90:	b	12fb0 <_start@@Base+0x960>
   12e94:	sub	r3, fp, #92	; 0x5c
   12e98:	mov	r1, r3
   12e9c:	ldr	r3, [pc, #880]	; 13214 <_start@@Base+0xbc4>
   12ea0:	ldr	r3, [r4, r3]
   12ea4:	add	r0, r3, #144	; 0x90
   12ea8:	bl	12524 <coda_cursor_read_int64@plt>
   12eac:	mov	r3, r0
   12eb0:	cmp	r3, #0
   12eb4:	beq	12ebc <_start@@Base+0x86c>
   12eb8:	bl	1bdc8 <handle_coda_error@@Base>
   12ebc:	ldrd	r0, [fp, #-92]	; 0xffffffa4
   12ec0:	sub	r3, fp, #116	; 0x74
   12ec4:	mov	r2, r3
   12ec8:	bl	1262c <coda_str64@plt>
   12ecc:	sub	r3, fp, #116	; 0x74
   12ed0:	ldr	r1, [fp, #-224]	; 0xffffff20
   12ed4:	mov	r0, r3
   12ed8:	bl	12608 <fputs@plt>
   12edc:	b	12fb0 <_start@@Base+0x960>
   12ee0:	sub	r3, fp, #124	; 0x7c
   12ee4:	mov	r1, r3
   12ee8:	ldr	r3, [pc, #804]	; 13214 <_start@@Base+0xbc4>
   12eec:	ldr	r3, [r4, r3]
   12ef0:	add	r0, r3, #144	; 0x90
   12ef4:	bl	12410 <coda_cursor_read_uint64@plt>
   12ef8:	mov	r3, r0
   12efc:	cmp	r3, #0
   12f00:	beq	12f08 <_start@@Base+0x8b8>
   12f04:	bl	1bdc8 <handle_coda_error@@Base>
   12f08:	ldrd	r0, [fp, #-124]	; 0xffffff84
   12f0c:	sub	r3, fp, #148	; 0x94
   12f10:	mov	r2, r3
   12f14:	bl	12260 <coda_str64u@plt>
   12f18:	sub	r3, fp, #148	; 0x94
   12f1c:	ldr	r1, [fp, #-224]	; 0xffffff20
   12f20:	mov	r0, r3
   12f24:	bl	12608 <fputs@plt>
   12f28:	b	12fb0 <_start@@Base+0x960>
   12f2c:	sub	r3, fp, #156	; 0x9c
   12f30:	mov	r1, r3
   12f34:	ldr	r3, [pc, #728]	; 13214 <_start@@Base+0xbc4>
   12f38:	ldr	r3, [r4, r3]
   12f3c:	add	r0, r3, #144	; 0x90
   12f40:	bl	1241c <coda_cursor_read_double@plt>
   12f44:	mov	r3, r0
   12f48:	cmp	r3, #0
   12f4c:	beq	12f54 <_start@@Base+0x904>
   12f50:	bl	1bdc8 <handle_coda_error@@Base>
   12f54:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12f58:	cmp	r3, #8
   12f5c:	bne	12f78 <_start@@Base+0x928>
   12f60:	ldrd	r2, [fp, #-156]	; 0xffffff64
   12f64:	ldr	r1, [pc, #756]	; 13260 <_start@@Base+0xc10>
   12f68:	add	r1, pc, r1
   12f6c:	ldr	r0, [fp, #-224]	; 0xffffff20
   12f70:	bl	12434 <fprintf@plt>
   12f74:	b	12fb0 <_start@@Base+0x960>
   12f78:	ldrd	r2, [fp, #-156]	; 0xffffff64
   12f7c:	ldr	r1, [pc, #736]	; 13264 <_start@@Base+0xc14>
   12f80:	add	r1, pc, r1
   12f84:	ldr	r0, [fp, #-224]	; 0xffffff20
   12f88:	bl	12434 <fprintf@plt>
   12f8c:	b	12fb0 <_start@@Base+0x960>
   12f90:	ldr	r3, [pc, #720]	; 13268 <_start@@Base+0xc18>
   12f94:	add	r3, pc, r3
   12f98:	movw	r2, #294	; 0x126
   12f9c:	ldr	r1, [pc, #712]	; 1326c <_start@@Base+0xc1c>
   12fa0:	add	r1, pc, r1
   12fa4:	ldr	r0, [pc, #708]	; 13270 <_start@@Base+0xc20>
   12fa8:	add	r0, pc, r0
   12fac:	bl	12638 <__assert_fail@plt>
   12fb0:	b	131d4 <_start@@Base+0xb84>
   12fb4:	ldr	r3, [pc, #600]	; 13214 <_start@@Base+0xbc4>
   12fb8:	ldr	r3, [r4, r3]
   12fbc:	ldr	r2, [fp, #-228]	; 0xffffff1c
   12fc0:	add	r2, r2, #2
   12fc4:	ldr	r3, [r3, r2, lsl #2]
   12fc8:	sub	r2, fp, #160	; 0xa0
   12fcc:	mov	r1, r2
   12fd0:	mov	r0, r3
   12fd4:	bl	124ac <coda_type_get_special_type@plt>
   12fd8:	mov	r3, r0
   12fdc:	cmp	r3, #0
   12fe0:	beq	12fe8 <_start@@Base+0x998>
   12fe4:	bl	1bdc8 <handle_coda_error@@Base>
   12fe8:	ldr	r3, [fp, #-160]	; 0xffffff60
   12fec:	cmp	r3, #3
   12ff0:	addls	pc, pc, r3, lsl #2
   12ff4:	b	131dc <_start@@Base+0xb8c>
   12ff8:	b	131ac <_start@@Base+0xb5c>
   12ffc:	b	13008 <_start@@Base+0x9b8>
   13000:	b	13008 <_start@@Base+0x9b8>
   13004:	b	1314c <_start@@Base+0xafc>
   13008:	sub	r3, fp, #172	; 0xac
   1300c:	mov	r1, r3
   13010:	ldr	r3, [pc, #508]	; 13214 <_start@@Base+0xbc4>
   13014:	ldr	r3, [r4, r3]
   13018:	add	r0, r3, #144	; 0x90
   1301c:	bl	1241c <coda_cursor_read_double@plt>
   13020:	mov	r3, r0
   13024:	cmp	r3, #0
   13028:	beq	13030 <_start@@Base+0x9e0>
   1302c:	bl	1bdc8 <handle_coda_error@@Base>
   13030:	ldr	r3, [fp, #-160]	; 0xffffff60
   13034:	cmp	r3, #2
   13038:	bne	13130 <_start@@Base+0xae0>
   1303c:	ldr	r3, [pc, #560]	; 13274 <_start@@Base+0xc24>
   13040:	ldr	r3, [r4, r3]
   13044:	ldr	r3, [r3]
   13048:	cmp	r3, #0
   1304c:	beq	13130 <_start@@Base+0xae0>
   13050:	vldr	d7, [fp, #-172]	; 0xffffff54
   13054:	vmov.f64	d0, d7
   13058:	bl	12428 <coda_isNaN@plt>
   1305c:	mov	r3, r0
   13060:	cmp	r3, #0
   13064:	bne	13080 <_start@@Base+0xa30>
   13068:	vldr	d7, [fp, #-172]	; 0xffffff54
   1306c:	vmov.f64	d0, d7
   13070:	bl	122cc <coda_isInf@plt>
   13074:	mov	r3, r0
   13078:	cmp	r3, #0
   1307c:	beq	130b8 <_start@@Base+0xa68>
   13080:	ldr	r2, [pc, #496]	; 13278 <_start@@Base+0xc28>
   13084:	add	r2, pc, r2
   13088:	sub	r3, fp, #200	; 0xc8
   1308c:	ldrd	r0, [r2]
   13090:	strd	r0, [r3]
   13094:	ldrd	r0, [r2, #8]
   13098:	strd	r0, [r3, #8]
   1309c:	ldrd	r0, [r2, #16]
   130a0:	strd	r0, [r3, #16]
   130a4:	ldrh	r1, [r2, #24]
   130a8:	strh	r1, [r3, #24]
   130ac:	ldrb	r2, [r2, #26]
   130b0:	strb	r2, [r3, #26]
   130b4:	b	130e8 <_start@@Base+0xa98>
   130b8:	vldr	d7, [fp, #-172]	; 0xffffff54
   130bc:	sub	r3, fp, #200	; 0xc8
   130c0:	mov	r1, r3
   130c4:	ldr	r3, [pc, #432]	; 1327c <_start@@Base+0xc2c>
   130c8:	add	r3, pc, r3
   130cc:	mov	r0, r3
   130d0:	vmov.f64	d0, d7
   130d4:	bl	12248 <coda_time_double_to_string@plt>
   130d8:	mov	r3, r0
   130dc:	cmp	r3, #0
   130e0:	beq	130e8 <_start@@Base+0xa98>
   130e4:	bl	1bdc8 <handle_coda_error@@Base>
   130e8:	ldr	r3, [pc, #296]	; 13218 <_start@@Base+0xbc8>
   130ec:	ldr	r3, [r4, r3]
   130f0:	ldr	r3, [r3]
   130f4:	cmp	r3, #0
   130f8:	beq	1311c <_start@@Base+0xacc>
   130fc:	sub	r3, fp, #200	; 0xc8
   13100:	mov	r2, r3
   13104:	ldr	r3, [pc, #372]	; 13280 <_start@@Base+0xc30>
   13108:	add	r3, pc, r3
   1310c:	mov	r1, r3
   13110:	ldr	r0, [fp, #-224]	; 0xffffff20
   13114:	bl	12434 <fprintf@plt>
   13118:	b	13148 <_start@@Base+0xaf8>
   1311c:	sub	r3, fp, #200	; 0xc8
   13120:	ldr	r1, [fp, #-224]	; 0xffffff20
   13124:	mov	r0, r3
   13128:	bl	12608 <fputs@plt>
   1312c:	b	13148 <_start@@Base+0xaf8>
   13130:	ldrd	r2, [fp, #-172]	; 0xffffff54
   13134:	ldr	r1, [pc, #328]	; 13284 <_start@@Base+0xc34>
   13138:	add	r1, pc, r1
   1313c:	ldr	r0, [fp, #-224]	; 0xffffff20
   13140:	bl	12434 <fprintf@plt>
   13144:	b	131b0 <_start@@Base+0xb60>
   13148:	b	131b0 <_start@@Base+0xb60>
   1314c:	sub	r3, fp, #220	; 0xdc
   13150:	mov	r1, r3
   13154:	ldr	r3, [pc, #184]	; 13214 <_start@@Base+0xbc4>
   13158:	ldr	r3, [r4, r3]
   1315c:	add	r0, r3, #144	; 0x90
   13160:	bl	12554 <coda_cursor_read_complex_double_pair@plt>
   13164:	mov	r3, r0
   13168:	cmp	r3, #0
   1316c:	beq	13174 <_start@@Base+0xb24>
   13170:	bl	1bdc8 <handle_coda_error@@Base>
   13174:	ldrd	r0, [fp, #-220]	; 0xffffff24
   13178:	ldr	r3, [pc, #264]	; 13288 <_start@@Base+0xc38>
   1317c:	ldr	r3, [r4, r3]
   13180:	ldr	ip, [r3]
   13184:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   13188:	strd	r2, [sp, #8]
   1318c:	str	ip, [sp]
   13190:	mov	r2, r0
   13194:	mov	r3, r1
   13198:	ldr	r1, [pc, #236]	; 1328c <_start@@Base+0xc3c>
   1319c:	add	r1, pc, r1
   131a0:	ldr	r0, [fp, #-224]	; 0xffffff20
   131a4:	bl	12434 <fprintf@plt>
   131a8:	b	131b0 <_start@@Base+0xb60>
   131ac:	nop	{0}
   131b0:	b	131dc <_start@@Base+0xb8c>
   131b4:	ldr	r3, [pc, #212]	; 13290 <_start@@Base+0xc40>
   131b8:	add	r3, pc, r3
   131bc:	mov	r2, #368	; 0x170
   131c0:	ldr	r1, [pc, #204]	; 13294 <_start@@Base+0xc44>
   131c4:	add	r1, pc, r1
   131c8:	ldr	r0, [pc, #200]	; 13298 <_start@@Base+0xc48>
   131cc:	add	r0, pc, r0
   131d0:	bl	12638 <__assert_fail@plt>
   131d4:	nop	{0}
   131d8:	b	131e0 <_start@@Base+0xb90>
   131dc:	nop	{0}
   131e0:	ldr	r1, [fp, #-224]	; 0xffffff20
   131e4:	mov	r0, #10
   131e8:	bl	1256c <fputc@plt>
   131ec:	nop	{0}
   131f0:	sub	sp, fp, #24
   131f4:	ldr	r4, [sp]
   131f8:	ldrd	r6, [sp, #4]
   131fc:	ldrd	r8, [sp, #12]
   13200:	ldr	fp, [sp, #20]
   13204:	add	sp, sp, #24
   13208:	pop	{pc}		; (ldr pc, [sp], #4)
   1320c:	andeq	lr, r1, r0, lsr r7
   13210:	andeq	r0, r0, ip, asr #3
   13214:			; <UNDEFINED> instruction: 0x000001b4
   13218:	andeq	r0, r0, ip, ror #3
   1321c:	muleq	r0, r4, lr
   13220:	andeq	fp, r0, r4, lsl lr
   13224:	andeq	fp, r0, r0, ror lr
   13228:	andeq	fp, r0, ip, asr #28
   1322c:	andeq	fp, r0, r4, asr #25
   13230:	andeq	fp, r0, r0, lsr #26
   13234:	muleq	r0, r8, ip
   13238:	andeq	fp, r0, r0, lsl #25
   1323c:	andeq	fp, r0, r8, ror #24
   13240:	andeq	fp, r0, r0, asr ip
   13244:	andeq	fp, r0, r8, lsr ip
   13248:	andeq	fp, r0, r0, lsr #24
   1324c:	andeq	fp, r0, r8, lsl #24
   13250:	strdeq	fp, [r0], -r0
   13254:			; <UNDEFINED> instruction: 0x0000bbb0
   13258:	andeq	fp, r0, r0, asr #22
   1325c:	strdeq	fp, [r0], -ip
   13260:	andeq	fp, r0, r8, lsl sl
   13264:	andeq	fp, r0, r8, lsl #20
   13268:	andeq	fp, r0, r0, asr #20
   1326c:	andeq	fp, r0, ip, lsl #18
   13270:	andeq	fp, r0, r8, ror #19
   13274:	andeq	r0, r0, r8, lsr #3
   13278:	andeq	fp, r0, r0, lsl r9
   1327c:	andeq	fp, r0, r8, ror #17
   13280:	andeq	fp, r0, r0, asr #16
   13284:	andeq	fp, r0, r0, asr r8
   13288:	andeq	r0, r0, r0, asr #3
   1328c:	andeq	fp, r0, r0, lsr r8
   13290:	andeq	fp, r0, ip, lsl r8
   13294:	andeq	fp, r0, r8, ror #13
   13298:	andeq	fp, r0, r4, asr #15
   1329c:	str	r4, [sp, #-12]!
   132a0:	str	fp, [sp, #4]
   132a4:	str	lr, [sp, #8]
   132a8:	add	fp, sp, #8
   132ac:	sub	sp, sp, #84	; 0x54
   132b0:	str	r0, [fp, #-80]	; 0xffffffb0
   132b4:	str	r1, [fp, #-84]	; 0xffffffac
   132b8:	str	r2, [fp, #-88]	; 0xffffffa8
   132bc:	str	r3, [fp, #-92]	; 0xffffffa4
   132c0:	ldr	r4, [pc, #1284]	; 137cc <_start@@Base+0x117c>
   132c4:	add	r4, pc, r4
   132c8:	ldr	r3, [pc, #1280]	; 137d0 <_start@@Base+0x1180>
   132cc:	ldr	r3, [r4, r3]
   132d0:	ldr	r2, [fp, #-84]	; 0xffffffac
   132d4:	add	r2, r2, #2
   132d8:	ldr	r3, [r3, r2, lsl #2]
   132dc:	sub	r2, fp, #40	; 0x28
   132e0:	mov	r1, r2
   132e4:	mov	r0, r3
   132e8:	bl	12644 <coda_type_get_class@plt>
   132ec:	mov	r3, r0
   132f0:	cmp	r3, #0
   132f4:	beq	132fc <_start@@Base+0xcac>
   132f8:	bl	1bdc8 <handle_coda_error@@Base>
   132fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13300:	cmp	r3, #0
   13304:	beq	136e0 <_start@@Base+0x1090>
   13308:	cmp	r3, #1
   1330c:	bne	137a0 <_start@@Base+0x1150>
   13310:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13314:	mov	r3, r2
   13318:	lsl	r3, r3, #2
   1331c:	add	r3, r3, r2
   13320:	lsl	r3, r3, #4
   13324:	add	r3, r3, #800	; 0x320
   13328:	ldr	r2, [pc, #1184]	; 137d0 <_start@@Base+0x1180>
   1332c:	ldr	r2, [r4, r2]
   13330:	add	r3, r3, r2
   13334:	str	r3, [fp, #-28]	; 0xffffffe4
   13338:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1333c:	ldr	r3, [r3]
   13340:	str	r3, [fp, #-32]	; 0xffffffe0
   13344:	ldr	r3, [fp, #-88]	; 0xffffffa8
   13348:	cmp	r3, #0
   1334c:	bne	1335c <_start@@Base+0xd0c>
   13350:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13354:	mov	r2, #0
   13358:	str	r2, [r3, #44]	; 0x2c
   1335c:	ldr	r3, [pc, #1136]	; 137d4 <_start@@Base+0x1184>
   13360:	ldr	r3, [r4, r3]
   13364:	ldr	r2, [r3, #104]	; 0x68
   13368:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1336c:	ldr	r1, [r3, #4]
   13370:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13374:	add	r3, r1, r3
   13378:	cmp	r2, r3
   1337c:	movge	r3, #1
   13380:	movlt	r3, #0
   13384:	uxtb	r3, r3
   13388:	str	r3, [fp, #-36]	; 0xffffffdc
   1338c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13390:	cmp	r3, #0
   13394:	beq	133f4 <_start@@Base+0xda4>
   13398:	ldr	r3, [pc, #1072]	; 137d0 <_start@@Base+0x1180>
   1339c:	ldr	r3, [r4, r3]
   133a0:	ldr	r3, [r3, #3360]	; 0xd20
   133a4:	sub	r3, r3, #1
   133a8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   133ac:	cmp	r2, r3
   133b0:	bge	133f4 <_start@@Base+0xda4>
   133b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   133b8:	ldr	r3, [r3, #44]	; 0x2c
   133bc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   133c0:	ldr	r1, [r2, #40]	; 0x28
   133c4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   133c8:	add	r2, r2, #1
   133cc:	mul	r1, r1, r3
   133d0:	ldr	r3, [pc, #1016]	; 137d0 <_start@@Base+0x1180>
   133d4:	ldr	r0, [r4, r3]
   133d8:	mov	r3, r2
   133dc:	lsl	r3, r3, #2
   133e0:	add	r3, r3, r2
   133e4:	lsl	r3, r3, #4
   133e8:	add	r3, r0, r3
   133ec:	add	r3, r3, #844	; 0x34c
   133f0:	str	r1, [r3]
   133f4:	mov	r3, #1
   133f8:	str	r3, [fp, #-16]
   133fc:	mov	r3, #0
   13400:	str	r3, [fp, #-20]	; 0xffffffec
   13404:	b	134f0 <_start@@Base+0xea0>
   13408:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1340c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13410:	add	r2, r2, r3
   13414:	ldr	r3, [pc, #952]	; 137d4 <_start@@Base+0x1184>
   13418:	ldr	r3, [r4, r3]
   1341c:	add	r2, r2, #18
   13420:	ldr	r3, [r3, r2, lsl #2]
   13424:	cmp	r3, #0
   13428:	beq	1347c <_start@@Base+0xe2c>
   1342c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13430:	ldr	r3, [fp, #-20]	; 0xffffffec
   13434:	add	r3, r2, r3
   13438:	ldr	r2, [pc, #916]	; 137d4 <_start@@Base+0x1184>
   1343c:	ldr	r2, [r4, r2]
   13440:	add	r3, r3, #26
   13444:	lsl	r3, r3, #2
   13448:	add	r3, r2, r3
   1344c:	ldr	r2, [r3, #4]
   13450:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13454:	ldr	r3, [r3, #44]	; 0x2c
   13458:	lsl	r3, r3, #2
   1345c:	add	r3, r2, r3
   13460:	ldr	r2, [r3]
   13464:	ldr	r3, [fp, #-20]	; 0xffffffec
   13468:	lsl	r3, r3, #2
   1346c:	sub	r1, fp, #12
   13470:	add	r3, r1, r3
   13474:	str	r2, [r3, #-64]	; 0xffffffc0
   13478:	b	134b0 <_start@@Base+0xe60>
   1347c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13480:	ldr	r3, [fp, #-20]	; 0xffffffec
   13484:	add	r3, r2, r3
   13488:	ldr	r2, [pc, #836]	; 137d4 <_start@@Base+0x1184>
   1348c:	ldr	r2, [r4, r2]
   13490:	lsl	r3, r3, #2
   13494:	add	r3, r2, r3
   13498:	ldr	r2, [r3, #4]
   1349c:	ldr	r3, [fp, #-20]	; 0xffffffec
   134a0:	lsl	r3, r3, #2
   134a4:	sub	r1, fp, #12
   134a8:	add	r3, r1, r3
   134ac:	str	r2, [r3, #-64]	; 0xffffffc0
   134b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   134b4:	lsl	r3, r3, #2
   134b8:	sub	r2, fp, #12
   134bc:	add	r3, r2, r3
   134c0:	ldr	r2, [r3, #-64]	; 0xffffffc0
   134c4:	ldr	r3, [fp, #-16]
   134c8:	mul	r3, r2, r3
   134cc:	str	r3, [fp, #-16]
   134d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   134d4:	ldr	r2, [fp, #-20]	; 0xffffffec
   134d8:	add	r2, r2, #12
   134dc:	mov	r1, #0
   134e0:	str	r1, [r3, r2, lsl #2]
   134e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   134e8:	add	r3, r3, #1
   134ec:	str	r3, [fp, #-20]	; 0xffffffec
   134f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   134f4:	ldr	r3, [r3, #4]
   134f8:	ldr	r2, [fp, #-20]	; 0xffffffec
   134fc:	cmp	r2, r3
   13500:	blt	13408 <_start@@Base+0xdb8>
   13504:	ldr	r3, [fp, #-16]
   13508:	cmp	r3, #0
   1350c:	beq	137b8 <_start@@Base+0x1168>
   13510:	ldr	r3, [pc, #696]	; 137d0 <_start@@Base+0x1180>
   13514:	ldr	r3, [r4, r3]
   13518:	add	r0, r3, #144	; 0x90
   1351c:	bl	12344 <coda_cursor_goto_first_array_element@plt>
   13520:	mov	r3, r0
   13524:	cmp	r3, #0
   13528:	beq	13530 <_start@@Base+0xee0>
   1352c:	bl	1bdc8 <handle_coda_error@@Base>
   13530:	mov	r3, #0
   13534:	str	r3, [fp, #-20]	; 0xffffffec
   13538:	b	136bc <_start@@Base+0x106c>
   1353c:	ldr	r3, [fp, #-84]	; 0xffffffac
   13540:	add	r1, r3, #1
   13544:	ldr	r3, [fp, #-88]	; 0xffffffa8
   13548:	add	r2, r3, #1
   1354c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13550:	ldr	r0, [fp, #-80]	; 0xffffffb0
   13554:	bl	1329c <_start@@Base+0xc4c>
   13558:	ldr	r3, [fp, #-16]
   1355c:	sub	r3, r3, #1
   13560:	ldr	r2, [fp, #-20]	; 0xffffffec
   13564:	cmp	r2, r3
   13568:	bge	136b0 <_start@@Base+0x1060>
   1356c:	ldr	r3, [pc, #604]	; 137d0 <_start@@Base+0x1180>
   13570:	ldr	r3, [r4, r3]
   13574:	add	r0, r3, #144	; 0x90
   13578:	bl	12440 <coda_cursor_goto_next_array_element@plt>
   1357c:	mov	r3, r0
   13580:	cmp	r3, #0
   13584:	beq	1358c <_start@@Base+0xf3c>
   13588:	bl	1bdc8 <handle_coda_error@@Base>
   1358c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13590:	cmp	r3, #0
   13594:	beq	13608 <_start@@Base+0xfb8>
   13598:	ldr	r3, [pc, #560]	; 137d0 <_start@@Base+0x1180>
   1359c:	ldr	r3, [r4, r3]
   135a0:	ldr	r3, [r3, #3360]	; 0xd20
   135a4:	sub	r3, r3, #1
   135a8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   135ac:	cmp	r2, r3
   135b0:	bge	13608 <_start@@Base+0xfb8>
   135b4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   135b8:	add	r2, r3, #1
   135bc:	ldr	r3, [pc, #524]	; 137d0 <_start@@Base+0x1180>
   135c0:	ldr	r1, [r4, r3]
   135c4:	mov	r3, r2
   135c8:	lsl	r3, r3, #2
   135cc:	add	r3, r3, r2
   135d0:	lsl	r3, r3, #4
   135d4:	add	r3, r1, r3
   135d8:	add	r3, r3, #844	; 0x34c
   135dc:	ldr	r3, [r3]
   135e0:	add	r1, r3, #1
   135e4:	ldr	r3, [pc, #484]	; 137d0 <_start@@Base+0x1180>
   135e8:	ldr	r0, [r4, r3]
   135ec:	mov	r3, r2
   135f0:	lsl	r3, r3, #2
   135f4:	add	r3, r3, r2
   135f8:	lsl	r3, r3, #4
   135fc:	add	r3, r0, r3
   13600:	add	r3, r3, #844	; 0x34c
   13604:	str	r1, [r3]
   13608:	ldr	r3, [pc, #456]	; 137d8 <_start@@Base+0x1188>
   1360c:	ldr	r3, [r4, r3]
   13610:	ldr	r3, [r3]
   13614:	cmp	r3, #0
   13618:	beq	136b0 <_start@@Base+0x1060>
   1361c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13620:	ldr	r3, [r3, #4]
   13624:	sub	r3, r3, #1
   13628:	str	r3, [fp, #-24]	; 0xffffffe8
   1362c:	b	1369c <_start@@Base+0x104c>
   13630:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13634:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13638:	add	r2, r2, #12
   1363c:	ldr	r3, [r3, r2, lsl #2]
   13640:	add	r1, r3, #1
   13644:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13648:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1364c:	add	r2, r2, #12
   13650:	str	r1, [r3, r2, lsl #2]
   13654:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13658:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1365c:	add	r2, r2, #12
   13660:	ldr	r2, [r3, r2, lsl #2]
   13664:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13668:	lsl	r3, r3, #2
   1366c:	sub	r1, fp, #12
   13670:	add	r3, r1, r3
   13674:	ldr	r3, [r3, #-64]	; 0xffffffc0
   13678:	cmp	r2, r3
   1367c:	bne	136ac <_start@@Base+0x105c>
   13680:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13684:	sub	r2, r3, #1
   13688:	str	r2, [fp, #-24]	; 0xffffffe8
   1368c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13690:	add	r3, r3, #12
   13694:	mov	r1, #0
   13698:	str	r1, [r2, r3, lsl #2]
   1369c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   136a0:	cmp	r3, #0
   136a4:	bge	13630 <_start@@Base+0xfe0>
   136a8:	b	136b0 <_start@@Base+0x1060>
   136ac:	nop	{0}
   136b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   136b4:	add	r3, r3, #1
   136b8:	str	r3, [fp, #-20]	; 0xffffffec
   136bc:	ldr	r2, [fp, #-20]	; 0xffffffec
   136c0:	ldr	r3, [fp, #-16]
   136c4:	cmp	r2, r3
   136c8:	blt	1353c <_start@@Base+0xeec>
   136cc:	ldr	r3, [pc, #252]	; 137d0 <_start@@Base+0x1180>
   136d0:	ldr	r3, [r4, r3]
   136d4:	add	r0, r3, #144	; 0x90
   136d8:	bl	123d4 <coda_cursor_goto_parent@plt>
   136dc:	b	137b8 <_start@@Base+0x1168>
   136e0:	ldr	r3, [pc, #232]	; 137d0 <_start@@Base+0x1180>
   136e4:	ldr	r2, [r4, r3]
   136e8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   136ec:	add	r3, r3, #872	; 0x368
   136f0:	lsl	r3, r3, #2
   136f4:	add	r3, r2, r3
   136f8:	ldr	r3, [r3, #4]
   136fc:	sub	r2, fp, #44	; 0x2c
   13700:	mov	r1, r3
   13704:	ldr	r3, [pc, #196]	; 137d0 <_start@@Base+0x1180>
   13708:	ldr	r3, [r4, r3]
   1370c:	add	r0, r3, #144	; 0x90
   13710:	bl	1220c <coda_cursor_get_record_field_available_status@plt>
   13714:	mov	r3, r0
   13718:	cmp	r3, #0
   1371c:	beq	13724 <_start@@Base+0x10d4>
   13720:	bl	1bdc8 <handle_coda_error@@Base>
   13724:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13728:	cmp	r3, #0
   1372c:	beq	137b4 <_start@@Base+0x1164>
   13730:	ldr	r3, [pc, #152]	; 137d0 <_start@@Base+0x1180>
   13734:	ldr	r2, [r4, r3]
   13738:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1373c:	add	r3, r3, #872	; 0x368
   13740:	lsl	r3, r3, #2
   13744:	add	r3, r2, r3
   13748:	ldr	r3, [r3, #4]
   1374c:	mov	r1, r3
   13750:	ldr	r3, [pc, #120]	; 137d0 <_start@@Base+0x1180>
   13754:	ldr	r3, [r4, r3]
   13758:	add	r0, r3, #144	; 0x90
   1375c:	bl	12374 <coda_cursor_goto_record_field_by_index@plt>
   13760:	mov	r3, r0
   13764:	cmp	r3, #0
   13768:	beq	13770 <_start@@Base+0x1120>
   1376c:	bl	1bdc8 <handle_coda_error@@Base>
   13770:	ldr	r3, [fp, #-84]	; 0xffffffac
   13774:	add	r1, r3, #1
   13778:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1377c:	add	r3, r3, #1
   13780:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13784:	ldr	r0, [fp, #-80]	; 0xffffffb0
   13788:	bl	1329c <_start@@Base+0xc4c>
   1378c:	ldr	r3, [pc, #60]	; 137d0 <_start@@Base+0x1180>
   13790:	ldr	r3, [r4, r3]
   13794:	add	r0, r3, #144	; 0x90
   13798:	bl	123d4 <coda_cursor_goto_parent@plt>
   1379c:	b	137b4 <_start@@Base+0x1164>
   137a0:	ldr	r1, [fp, #-84]	; 0xffffffac
   137a4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   137a8:	bl	128a0 <_start@@Base+0x250>
   137ac:	nop	{0}
   137b0:	b	137b8 <_start@@Base+0x1168>
   137b4:	nop	{0}
   137b8:	sub	sp, fp, #8
   137bc:	ldr	r4, [sp]
   137c0:	ldr	fp, [sp, #4]
   137c4:	add	sp, sp, #8
   137c8:	pop	{pc}		; (ldr pc, [sp], #4)
   137cc:	andeq	sp, r1, r4, lsr sp
   137d0:			; <UNDEFINED> instruction: 0x000001b4
   137d4:	andeq	r0, r0, r4, ror #3
   137d8:	andeq	r0, r0, ip, asr #3

000137dc <export_data_element_to_ascii@@Base>:
   137dc:	strd	r4, [sp, #-16]!
   137e0:	str	fp, [sp, #8]
   137e4:	str	lr, [sp, #12]
   137e8:	add	fp, sp, #12
   137ec:	ldr	r4, [pc, #260]	; 138f8 <export_data_element_to_ascii@@Base+0x11c>
   137f0:	add	r4, pc, r4
   137f4:	ldr	r3, [pc, #256]	; 138fc <export_data_element_to_ascii@@Base+0x120>
   137f8:	add	r3, pc, r3
   137fc:	ldr	r3, [r3]
   13800:	cmp	r3, #0
   13804:	beq	1381c <export_data_element_to_ascii@@Base+0x40>
   13808:	ldr	r3, [pc, #240]	; 13900 <export_data_element_to_ascii@@Base+0x124>
   1380c:	add	r3, pc, r3
   13810:	mov	r2, #0
   13814:	str	r2, [r3]
   13818:	b	13834 <export_data_element_to_ascii@@Base+0x58>
   1381c:	ldr	r3, [pc, #224]	; 13904 <export_data_element_to_ascii@@Base+0x128>
   13820:	ldr	r3, [r4, r3]
   13824:	ldr	r3, [r3]
   13828:	mov	r1, r3
   1382c:	mov	r0, #10
   13830:	bl	1256c <fputc@plt>
   13834:	ldr	r3, [pc, #204]	; 13908 <export_data_element_to_ascii@@Base+0x12c>
   13838:	ldr	r3, [r4, r3]
   1383c:	ldr	r3, [r3]
   13840:	cmp	r3, #0
   13844:	beq	1387c <export_data_element_to_ascii@@Base+0xa0>
   13848:	ldr	r3, [pc, #180]	; 13904 <export_data_element_to_ascii@@Base+0x128>
   1384c:	ldr	r3, [r4, r3]
   13850:	ldr	r3, [r3]
   13854:	mov	r2, #0
   13858:	mov	r1, #2
   1385c:	mov	r0, r3
   13860:	bl	18f78 <print_full_field_name@@Base>
   13864:	ldr	r3, [pc, #152]	; 13904 <export_data_element_to_ascii@@Base+0x128>
   13868:	ldr	r3, [r4, r3]
   1386c:	ldr	r3, [r3]
   13870:	mov	r1, r3
   13874:	mov	r0, #10
   13878:	bl	1256c <fputc@plt>
   1387c:	ldr	r3, [pc, #136]	; 1390c <export_data_element_to_ascii@@Base+0x130>
   13880:	ldr	r3, [r4, r3]
   13884:	ldr	r3, [r3]
   13888:	cmp	r3, #0
   1388c:	ble	138c0 <export_data_element_to_ascii@@Base+0xe4>
   13890:	ldr	r3, [pc, #116]	; 1390c <export_data_element_to_ascii@@Base+0x130>
   13894:	ldr	r3, [r4, r3]
   13898:	ldr	r3, [r3]
   1389c:	sub	r3, r3, #1
   138a0:	ldr	r2, [pc, #100]	; 1390c <export_data_element_to_ascii@@Base+0x130>
   138a4:	ldr	r2, [r4, r2]
   138a8:	add	r3, r3, #38	; 0x26
   138ac:	lsl	r3, r3, #3
   138b0:	add	r3, r2, r3
   138b4:	ldrd	r2, [r3]
   138b8:	orrs	r3, r2, r3
   138bc:	beq	138e0 <export_data_element_to_ascii@@Base+0x104>
   138c0:	ldr	r3, [pc, #60]	; 13904 <export_data_element_to_ascii@@Base+0x128>
   138c4:	ldr	r3, [r4, r3]
   138c8:	ldr	r0, [r3]
   138cc:	mov	r3, #0
   138d0:	mov	r2, #0
   138d4:	mov	r1, #0
   138d8:	bl	1329c <_start@@Base+0xc4c>
   138dc:	b	138e4 <export_data_element_to_ascii@@Base+0x108>
   138e0:	nop	{0}
   138e4:	sub	sp, fp, #12
   138e8:	ldrd	r4, [sp]
   138ec:	ldr	fp, [sp, #8]
   138f0:	add	sp, sp, #12
   138f4:	pop	{pc}		; (ldr pc, [sp], #4)
   138f8:	andeq	sp, r1, r8, lsl #16
   138fc:	strdeq	sp, [r1], -r8
   13900:	andeq	sp, r1, r4, ror #19
   13904:			; <UNDEFINED> instruction: 0x000001bc
   13908:	andeq	r0, r0, r8, ror #3
   1390c:	andeq	r0, r0, r4, ror #3
   13910:	str	r4, [sp, #-12]!
   13914:	str	fp, [sp, #4]
   13918:	str	lr, [sp, #8]
   1391c:	add	fp, sp, #8
   13920:	sub	sp, sp, #12
   13924:	ldr	r4, [pc, #152]	; 139c4 <export_data_element_to_ascii@@Base+0x1e8>
   13928:	add	r4, pc, r4
   1392c:	ldr	r3, [pc, #148]	; 139c8 <export_data_element_to_ascii@@Base+0x1ec>
   13930:	add	r3, pc, r3
   13934:	ldr	r3, [r3]
   13938:	cmp	r3, #0
   1393c:	bge	13960 <export_data_element_to_ascii@@Base+0x184>
   13940:	ldr	r3, [pc, #132]	; 139cc <export_data_element_to_ascii@@Base+0x1f0>
   13944:	add	r3, pc, r3
   13948:	mov	r2, #44	; 0x2c
   1394c:	ldr	r1, [pc, #124]	; 139d0 <export_data_element_to_ascii@@Base+0x1f4>
   13950:	add	r1, pc, r1
   13954:	ldr	r0, [pc, #120]	; 139d4 <export_data_element_to_ascii@@Base+0x1f8>
   13958:	add	r0, pc, r0
   1395c:	bl	12638 <__assert_fail@plt>
   13960:	ldr	r3, [pc, #112]	; 139d8 <export_data_element_to_ascii@@Base+0x1fc>
   13964:	add	r3, pc, r3
   13968:	ldr	r3, [r3]
   1396c:	str	r3, [fp, #-16]
   13970:	b	139a0 <export_data_element_to_ascii@@Base+0x1c4>
   13974:	ldr	r3, [pc, #96]	; 139dc <export_data_element_to_ascii@@Base+0x200>
   13978:	ldr	r3, [r4, r3]
   1397c:	ldr	r3, [r3]
   13980:	mov	r2, #2
   13984:	mov	r1, #1
   13988:	ldr	r0, [pc, #80]	; 139e0 <export_data_element_to_ascii@@Base+0x204>
   1398c:	add	r0, pc, r0
   13990:	bl	12350 <fwrite@plt>
   13994:	ldr	r3, [fp, #-16]
   13998:	sub	r3, r3, #1
   1399c:	str	r3, [fp, #-16]
   139a0:	ldr	r3, [fp, #-16]
   139a4:	cmp	r3, #0
   139a8:	bgt	13974 <export_data_element_to_ascii@@Base+0x198>
   139ac:	nop	{0}
   139b0:	sub	sp, fp, #8
   139b4:	ldr	r4, [sp]
   139b8:	ldr	fp, [sp, #4]
   139bc:	add	sp, sp, #8
   139c0:	pop	{pc}		; (ldr pc, [sp], #4)
   139c4:	ldrdeq	sp, [r1], -r0
   139c8:	ldrdeq	sp, [r1], -r4
   139cc:	andeq	fp, r0, r4, ror r2
   139d0:	muleq	r0, r8, r0
   139d4:	strdeq	fp, [r0], -r4
   139d8:	andeq	sp, r1, r0, lsr #17
   139dc:			; <UNDEFINED> instruction: 0x000001bc
   139e0:	andeq	fp, r0, ip, asr #1
   139e4:	push	{r0, r1, r2, r3}
   139e8:	str	fp, [sp, #-8]!
   139ec:	str	lr, [sp, #4]
   139f0:	add	fp, sp, #4
   139f4:	sub	sp, sp, #8
   139f8:	ldr	r2, [pc, #72]	; 13a48 <export_data_element_to_ascii@@Base+0x26c>
   139fc:	add	r2, pc, r2
   13a00:	add	r3, fp, #8
   13a04:	str	r3, [fp, #-12]
   13a08:	ldr	r3, [pc, #60]	; 13a4c <export_data_element_to_ascii@@Base+0x270>
   13a0c:	ldr	r3, [r2, r3]
   13a10:	ldr	r3, [r3]
   13a14:	ldr	r2, [fp, #-12]
   13a18:	ldr	r1, [fp, #4]
   13a1c:	mov	r0, r3
   13a20:	bl	12530 <vfprintf@plt>
   13a24:	str	r0, [fp, #-8]
   13a28:	ldr	r3, [fp, #-8]
   13a2c:	mov	r0, r3
   13a30:	sub	sp, fp, #4
   13a34:	ldr	fp, [sp]
   13a38:	ldr	lr, [sp, #4]
   13a3c:	add	sp, sp, #8
   13a40:	add	sp, sp, #16
   13a44:	bx	lr
   13a48:	strdeq	sp, [r1], -ip
   13a4c:			; <UNDEFINED> instruction: 0x000001bc
   13a50:	push	{r0, r1, r2, r3}
   13a54:	str	r4, [sp, #-12]!
   13a58:	str	fp, [sp, #4]
   13a5c:	str	lr, [sp, #8]
   13a60:	add	fp, sp, #8
   13a64:	sub	sp, sp, #12
   13a68:	ldr	r4, [pc, #80]	; 13ac0 <export_data_element_to_ascii@@Base+0x2e4>
   13a6c:	add	r4, pc, r4
   13a70:	bl	13910 <export_data_element_to_ascii@@Base+0x134>
   13a74:	add	r3, fp, #8
   13a78:	str	r3, [fp, #-20]	; 0xffffffec
   13a7c:	ldr	r3, [pc, #64]	; 13ac4 <export_data_element_to_ascii@@Base+0x2e8>
   13a80:	ldr	r3, [r4, r3]
   13a84:	ldr	r3, [r3]
   13a88:	ldr	r2, [fp, #-20]	; 0xffffffec
   13a8c:	ldr	r1, [fp, #4]
   13a90:	mov	r0, r3
   13a94:	bl	12530 <vfprintf@plt>
   13a98:	str	r0, [fp, #-16]
   13a9c:	ldr	r3, [fp, #-16]
   13aa0:	mov	r0, r3
   13aa4:	sub	sp, fp, #8
   13aa8:	ldr	r4, [sp]
   13aac:	ldr	fp, [sp, #4]
   13ab0:	ldr	lr, [sp, #8]
   13ab4:	add	sp, sp, #12
   13ab8:	add	sp, sp, #16
   13abc:	bx	lr
   13ac0:	andeq	sp, r1, ip, lsl #11
   13ac4:			; <UNDEFINED> instruction: 0x000001bc
   13ac8:	str	fp, [sp, #-8]!
   13acc:	str	lr, [sp, #4]
   13ad0:	add	fp, sp, #4
   13ad4:	sub	sp, sp, #16
   13ad8:	str	r0, [fp, #-16]
   13adc:	str	r1, [fp, #-20]	; 0xffffffec
   13ae0:	mov	r3, #0
   13ae4:	str	r3, [fp, #-8]
   13ae8:	b	13c4c <export_data_element_to_ascii@@Base+0x470>
   13aec:	ldr	r3, [fp, #-8]
   13af0:	ldr	r2, [fp, #-16]
   13af4:	add	r3, r2, r3
   13af8:	ldrb	r3, [r3]
   13afc:	strb	r3, [fp, #-9]
   13b00:	ldrb	r3, [fp, #-9]
   13b04:	cmp	r3, #10
   13b08:	beq	13b90 <export_data_element_to_ascii@@Base+0x3b4>
   13b0c:	cmp	r3, #10
   13b10:	bgt	13b30 <export_data_element_to_ascii@@Base+0x354>
   13b14:	cmp	r3, #8
   13b18:	beq	13b68 <export_data_element_to_ascii@@Base+0x38c>
   13b1c:	cmp	r3, #8
   13b20:	bgt	13b7c <export_data_element_to_ascii@@Base+0x3a0>
   13b24:	cmp	r3, #7
   13b28:	beq	13b54 <export_data_element_to_ascii@@Base+0x378>
   13b2c:	b	13bf4 <export_data_element_to_ascii@@Base+0x418>
   13b30:	cmp	r3, #12
   13b34:	beq	13bb8 <export_data_element_to_ascii@@Base+0x3dc>
   13b38:	cmp	r3, #12
   13b3c:	blt	13ba4 <export_data_element_to_ascii@@Base+0x3c8>
   13b40:	cmp	r3, #13
   13b44:	beq	13bcc <export_data_element_to_ascii@@Base+0x3f0>
   13b48:	cmp	r3, #92	; 0x5c
   13b4c:	beq	13be0 <export_data_element_to_ascii@@Base+0x404>
   13b50:	b	13bf4 <export_data_element_to_ascii@@Base+0x418>
   13b54:	ldr	r3, [pc, #276]	; 13c70 <export_data_element_to_ascii@@Base+0x494>
   13b58:	add	r3, pc, r3
   13b5c:	mov	r0, r3
   13b60:	bl	139e4 <export_data_element_to_ascii@@Base+0x208>
   13b64:	b	13c40 <export_data_element_to_ascii@@Base+0x464>
   13b68:	ldr	r3, [pc, #260]	; 13c74 <export_data_element_to_ascii@@Base+0x498>
   13b6c:	add	r3, pc, r3
   13b70:	mov	r0, r3
   13b74:	bl	139e4 <export_data_element_to_ascii@@Base+0x208>
   13b78:	b	13c40 <export_data_element_to_ascii@@Base+0x464>
   13b7c:	ldr	r3, [pc, #244]	; 13c78 <export_data_element_to_ascii@@Base+0x49c>
   13b80:	add	r3, pc, r3
   13b84:	mov	r0, r3
   13b88:	bl	139e4 <export_data_element_to_ascii@@Base+0x208>
   13b8c:	b	13c40 <export_data_element_to_ascii@@Base+0x464>
   13b90:	ldr	r3, [pc, #228]	; 13c7c <export_data_element_to_ascii@@Base+0x4a0>
   13b94:	add	r3, pc, r3
   13b98:	mov	r0, r3
   13b9c:	bl	139e4 <export_data_element_to_ascii@@Base+0x208>
   13ba0:	b	13c40 <export_data_element_to_ascii@@Base+0x464>
   13ba4:	ldr	r3, [pc, #212]	; 13c80 <export_data_element_to_ascii@@Base+0x4a4>
   13ba8:	add	r3, pc, r3
   13bac:	mov	r0, r3
   13bb0:	bl	139e4 <export_data_element_to_ascii@@Base+0x208>
   13bb4:	b	13c40 <export_data_element_to_ascii@@Base+0x464>
   13bb8:	ldr	r3, [pc, #196]	; 13c84 <export_data_element_to_ascii@@Base+0x4a8>
   13bbc:	add	r3, pc, r3
   13bc0:	mov	r0, r3
   13bc4:	bl	139e4 <export_data_element_to_ascii@@Base+0x208>
   13bc8:	b	13c40 <export_data_element_to_ascii@@Base+0x464>
   13bcc:	ldr	r3, [pc, #180]	; 13c88 <export_data_element_to_ascii@@Base+0x4ac>
   13bd0:	add	r3, pc, r3
   13bd4:	mov	r0, r3
   13bd8:	bl	139e4 <export_data_element_to_ascii@@Base+0x208>
   13bdc:	b	13c40 <export_data_element_to_ascii@@Base+0x464>
   13be0:	ldr	r3, [pc, #164]	; 13c8c <export_data_element_to_ascii@@Base+0x4b0>
   13be4:	add	r3, pc, r3
   13be8:	mov	r0, r3
   13bec:	bl	139e4 <export_data_element_to_ascii@@Base+0x208>
   13bf0:	b	13c40 <export_data_element_to_ascii@@Base+0x464>
   13bf4:	ldrb	r3, [fp, #-9]
   13bf8:	cmp	r3, #31
   13bfc:	bls	13c28 <export_data_element_to_ascii@@Base+0x44c>
   13c00:	ldrb	r3, [fp, #-9]
   13c04:	cmp	r3, #126	; 0x7e
   13c08:	bhi	13c28 <export_data_element_to_ascii@@Base+0x44c>
   13c0c:	ldrb	r3, [fp, #-9]
   13c10:	mov	r1, r3
   13c14:	ldr	r3, [pc, #116]	; 13c90 <export_data_element_to_ascii@@Base+0x4b4>
   13c18:	add	r3, pc, r3
   13c1c:	mov	r0, r3
   13c20:	bl	139e4 <export_data_element_to_ascii@@Base+0x208>
   13c24:	b	13c40 <export_data_element_to_ascii@@Base+0x464>
   13c28:	ldrb	r3, [fp, #-9]
   13c2c:	mov	r1, r3
   13c30:	ldr	r3, [pc, #92]	; 13c94 <export_data_element_to_ascii@@Base+0x4b8>
   13c34:	add	r3, pc, r3
   13c38:	mov	r0, r3
   13c3c:	bl	139e4 <export_data_element_to_ascii@@Base+0x208>
   13c40:	ldr	r3, [fp, #-8]
   13c44:	add	r3, r3, #1
   13c48:	str	r3, [fp, #-8]
   13c4c:	ldr	r2, [fp, #-8]
   13c50:	ldr	r3, [fp, #-20]	; 0xffffffec
   13c54:	cmp	r2, r3
   13c58:	blt	13aec <export_data_element_to_ascii@@Base+0x310>
   13c5c:	nop	{0}
   13c60:	sub	sp, fp, #4
   13c64:	ldr	fp, [sp]
   13c68:	add	sp, sp, #4
   13c6c:	pop	{pc}		; (ldr pc, [sp], #4)
   13c70:	andeq	sl, r0, r4, lsl #30
   13c74:	strdeq	sl, [r0], -r4
   13c78:	andeq	sl, r0, r4, ror #29
   13c7c:	ldrdeq	sl, [r0], -r4
   13c80:	andeq	sl, r0, r4, asr #29
   13c84:			; <UNDEFINED> instruction: 0x0000aeb4
   13c88:	andeq	sl, r0, r4, lsr #29
   13c8c:	muleq	r0, r4, lr
   13c90:	andeq	sl, r0, r4, ror #28
   13c94:	andeq	sl, r0, ip, asr #28
   13c98:	strd	r4, [sp, #-32]!	; 0xffffffe0
   13c9c:	strd	r6, [sp, #8]
   13ca0:	strd	r8, [sp, #16]
   13ca4:	str	fp, [sp, #24]
   13ca8:	str	lr, [sp, #28]
   13cac:	add	fp, sp, #28
   13cb0:	sub	sp, sp, #968	; 0x3c8
   13cb4:	str	r0, [fp, #-952]	; 0xfffffc48
   13cb8:	str	r1, [fp, #-956]	; 0xfffffc44
   13cbc:	ldr	r4, [pc, #4052]	; 14c98 <export_data_element_to_ascii@@Base+0x14bc>
   13cc0:	add	r4, pc, r4
   13cc4:	sub	r3, fp, #64	; 0x40
   13cc8:	mov	r1, r3
   13ccc:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13cd0:	bl	122f0 <coda_cursor_has_attributes@plt>
   13cd4:	mov	r3, r0
   13cd8:	cmp	r3, #0
   13cdc:	beq	13ce4 <export_data_element_to_ascii@@Base+0x508>
   13ce0:	bl	1bdc8 <handle_coda_error@@Base>
   13ce4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   13ce8:	cmp	r3, #0
   13cec:	beq	13d64 <export_data_element_to_ascii@@Base+0x588>
   13cf0:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13cf4:	bl	12470 <coda_cursor_goto_attributes@plt>
   13cf8:	mov	r3, r0
   13cfc:	cmp	r3, #0
   13d00:	beq	13d08 <export_data_element_to_ascii@@Base+0x52c>
   13d04:	bl	1bdc8 <handle_coda_error@@Base>
   13d08:	ldr	r3, [pc, #3980]	; 14c9c <export_data_element_to_ascii@@Base+0x14c0>
   13d0c:	add	r3, pc, r3
   13d10:	mov	r0, r3
   13d14:	bl	13a50 <export_data_element_to_ascii@@Base+0x274>
   13d18:	ldr	r3, [pc, #3968]	; 14ca0 <export_data_element_to_ascii@@Base+0x14c4>
   13d1c:	add	r3, pc, r3
   13d20:	ldr	r3, [r3]
   13d24:	add	r2, r3, #1
   13d28:	ldr	r3, [pc, #3956]	; 14ca4 <export_data_element_to_ascii@@Base+0x14c8>
   13d2c:	add	r3, pc, r3
   13d30:	str	r2, [r3]
   13d34:	ldr	r1, [fp, #-956]	; 0xfffffc44
   13d38:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13d3c:	bl	13c98 <export_data_element_to_ascii@@Base+0x4bc>
   13d40:	ldr	r3, [pc, #3936]	; 14ca8 <export_data_element_to_ascii@@Base+0x14cc>
   13d44:	add	r3, pc, r3
   13d48:	ldr	r3, [r3]
   13d4c:	sub	r2, r3, #1
   13d50:	ldr	r3, [pc, #3924]	; 14cac <export_data_element_to_ascii@@Base+0x14d0>
   13d54:	add	r3, pc, r3
   13d58:	str	r2, [r3]
   13d5c:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13d60:	bl	123d4 <coda_cursor_goto_parent@plt>
   13d64:	sub	r3, fp, #60	; 0x3c
   13d68:	mov	r1, r3
   13d6c:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13d70:	bl	122fc <coda_cursor_get_type_class@plt>
   13d74:	mov	r3, r0
   13d78:	cmp	r3, #0
   13d7c:	beq	13d84 <export_data_element_to_ascii@@Base+0x5a8>
   13d80:	bl	1bdc8 <handle_coda_error@@Base>
   13d84:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13d88:	cmp	r3, #6
   13d8c:	addls	pc, pc, r3, lsl #2
   13d90:	b	14e1c <export_data_element_to_ascii@@Base+0x1640>
   13d94:	b	13db0 <export_data_element_to_ascii@@Base+0x5d4>
   13d98:	b	14238 <export_data_element_to_ascii@@Base+0xa5c>
   13d9c:	b	145f0 <export_data_element_to_ascii@@Base+0xe14>
   13da0:	b	145f0 <export_data_element_to_ascii@@Base+0xe14>
   13da4:	b	145f0 <export_data_element_to_ascii@@Base+0xe14>
   13da8:	b	145f0 <export_data_element_to_ascii@@Base+0xe14>
   13dac:	b	14acc <export_data_element_to_ascii@@Base+0x12f0>
   13db0:	sub	r3, fp, #68	; 0x44
   13db4:	mov	r1, r3
   13db8:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13dbc:	bl	12254 <coda_cursor_get_num_elements@plt>
   13dc0:	mov	r3, r0
   13dc4:	cmp	r3, #0
   13dc8:	beq	13dd0 <export_data_element_to_ascii@@Base+0x5f4>
   13dcc:	bl	1bdc8 <handle_coda_error@@Base>
   13dd0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   13dd4:	cmp	r3, #0
   13dd8:	ble	14e00 <export_data_element_to_ascii@@Base+0x1624>
   13ddc:	sub	r3, fp, #72	; 0x48
   13de0:	mov	r1, r3
   13de4:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13de8:	bl	122b4 <coda_cursor_get_type@plt>
   13dec:	mov	r3, r0
   13df0:	cmp	r3, #0
   13df4:	beq	13dfc <export_data_element_to_ascii@@Base+0x620>
   13df8:	bl	1bdc8 <handle_coda_error@@Base>
   13dfc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   13e00:	sub	r2, fp, #76	; 0x4c
   13e04:	mov	r1, r2
   13e08:	mov	r0, r3
   13e0c:	bl	124b8 <coda_type_get_record_union_status@plt>
   13e10:	mov	r3, r0
   13e14:	cmp	r3, #0
   13e18:	beq	13e20 <export_data_element_to_ascii@@Base+0x644>
   13e1c:	bl	1bdc8 <handle_coda_error@@Base>
   13e20:	ldr	r3, [fp, #-76]	; 0xffffffb4
   13e24:	cmp	r3, #0
   13e28:	beq	1401c <export_data_element_to_ascii@@Base+0x840>
   13e2c:	sub	r3, fp, #80	; 0x50
   13e30:	mov	r1, r3
   13e34:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13e38:	bl	125b4 <coda_cursor_get_available_union_field_index@plt>
   13e3c:	mov	r3, r0
   13e40:	cmp	r3, #0
   13e44:	beq	13e4c <export_data_element_to_ascii@@Base+0x670>
   13e48:	bl	1bdc8 <handle_coda_error@@Base>
   13e4c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   13e50:	ldr	r1, [fp, #-80]	; 0xffffffb0
   13e54:	sub	r2, fp, #84	; 0x54
   13e58:	mov	r0, r3
   13e5c:	bl	125fc <coda_type_get_record_field_name@plt>
   13e60:	mov	r3, r0
   13e64:	cmp	r3, #0
   13e68:	beq	13e70 <export_data_element_to_ascii@@Base+0x694>
   13e6c:	bl	1bdc8 <handle_coda_error@@Base>
   13e70:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13e74:	mov	r1, r3
   13e78:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13e7c:	bl	12374 <coda_cursor_goto_record_field_by_index@plt>
   13e80:	mov	r3, r0
   13e84:	cmp	r3, #0
   13e88:	beq	13e90 <export_data_element_to_ascii@@Base+0x6b4>
   13e8c:	bl	1bdc8 <handle_coda_error@@Base>
   13e90:	ldr	r3, [fp, #-84]	; 0xffffffac
   13e94:	mov	r1, r3
   13e98:	ldr	r3, [pc, #3600]	; 14cb0 <export_data_element_to_ascii@@Base+0x14d4>
   13e9c:	add	r3, pc, r3
   13ea0:	mov	r0, r3
   13ea4:	bl	13a50 <export_data_element_to_ascii@@Base+0x274>
   13ea8:	ldr	r3, [pc, #3588]	; 14cb4 <export_data_element_to_ascii@@Base+0x14d8>
   13eac:	add	r3, pc, r3
   13eb0:	ldr	r3, [r3]
   13eb4:	cmp	r3, #0
   13eb8:	beq	13f74 <export_data_element_to_ascii@@Base+0x798>
   13ebc:	sub	r3, fp, #92	; 0x5c
   13ec0:	mov	r1, r3
   13ec4:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13ec8:	bl	125cc <coda_cursor_get_file_bit_offset@plt>
   13ecc:	mov	r3, r0
   13ed0:	cmp	r3, #0
   13ed4:	beq	13edc <export_data_element_to_ascii@@Base+0x700>
   13ed8:	bl	1bdc8 <handle_coda_error@@Base>
   13edc:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   13ee0:	cmp	r2, #0
   13ee4:	sbcs	r3, r3, #0
   13ee8:	blt	13f74 <export_data_element_to_ascii@@Base+0x798>
   13eec:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   13ef0:	mov	r0, #0
   13ef4:	mov	r1, #0
   13ef8:	lsr	r0, r2, #3
   13efc:	orr	r0, r0, r3, lsl #29
   13f00:	asr	r1, r3, #3
   13f04:	sub	r3, fp, #116	; 0x74
   13f08:	mov	r2, r3
   13f0c:	bl	1262c <coda_str64@plt>
   13f10:	sub	r3, fp, #116	; 0x74
   13f14:	mov	r1, r3
   13f18:	ldr	r3, [pc, #3480]	; 14cb8 <export_data_element_to_ascii@@Base+0x14dc>
   13f1c:	add	r3, pc, r3
   13f20:	mov	r0, r3
   13f24:	bl	139e4 <export_data_element_to_ascii@@Base+0x208>
   13f28:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   13f2c:	mov	r0, #7
   13f30:	mov	r1, #0
   13f34:	and	ip, r2, r0
   13f38:	str	ip, [fp, #-964]	; 0xfffffc3c
   13f3c:	and	r3, r3, r1
   13f40:	str	r3, [fp, #-960]	; 0xfffffc40
   13f44:	sub	r3, fp, #964	; 0x3c4
   13f48:	ldrd	r2, [r3]
   13f4c:	orrs	r3, r2, r3
   13f50:	beq	13f74 <export_data_element_to_ascii@@Base+0x798>
   13f54:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   13f58:	mov	r3, r2
   13f5c:	and	r3, r3, #7
   13f60:	mov	r1, r3
   13f64:	ldr	r3, [pc, #3408]	; 14cbc <export_data_element_to_ascii@@Base+0x14e0>
   13f68:	add	r3, pc, r3
   13f6c:	mov	r0, r3
   13f70:	bl	139e4 <export_data_element_to_ascii@@Base+0x208>
   13f74:	ldr	r3, [pc, #3396]	; 14cc0 <export_data_element_to_ascii@@Base+0x14e4>
   13f78:	add	r3, pc, r3
   13f7c:	mov	r0, r3
   13f80:	bl	139e4 <export_data_element_to_ascii@@Base+0x208>
   13f84:	ldr	r3, [pc, #3384]	; 14cc4 <export_data_element_to_ascii@@Base+0x14e8>
   13f88:	add	r3, pc, r3
   13f8c:	ldr	r3, [r3]
   13f90:	add	r2, r3, #1
   13f94:	ldr	r3, [pc, #3372]	; 14cc8 <export_data_element_to_ascii@@Base+0x14ec>
   13f98:	add	r3, pc, r3
   13f9c:	str	r2, [r3]
   13fa0:	ldr	r3, [pc, #3364]	; 14ccc <export_data_element_to_ascii@@Base+0x14f0>
   13fa4:	ldr	r3, [r4, r3]
   13fa8:	ldr	r3, [r3]
   13fac:	cmp	r3, #0
   13fb0:	blt	13fcc <export_data_element_to_ascii@@Base+0x7f0>
   13fb4:	ldr	r3, [pc, #3344]	; 14ccc <export_data_element_to_ascii@@Base+0x14f0>
   13fb8:	ldr	r3, [r4, r3]
   13fbc:	ldr	r3, [r3]
   13fc0:	ldr	r2, [fp, #-956]	; 0xfffffc44
   13fc4:	cmp	r2, r3
   13fc8:	bge	13fe4 <export_data_element_to_ascii@@Base+0x808>
   13fcc:	ldr	r3, [fp, #-956]	; 0xfffffc44
   13fd0:	add	r3, r3, #1
   13fd4:	mov	r1, r3
   13fd8:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13fdc:	bl	13c98 <export_data_element_to_ascii@@Base+0x4bc>
   13fe0:	b	13ff4 <export_data_element_to_ascii@@Base+0x818>
   13fe4:	ldr	r3, [pc, #3300]	; 14cd0 <export_data_element_to_ascii@@Base+0x14f4>
   13fe8:	add	r3, pc, r3
   13fec:	mov	r0, r3
   13ff0:	bl	13a50 <export_data_element_to_ascii@@Base+0x274>
   13ff4:	ldr	r3, [pc, #3288]	; 14cd4 <export_data_element_to_ascii@@Base+0x14f8>
   13ff8:	add	r3, pc, r3
   13ffc:	ldr	r3, [r3]
   14000:	sub	r2, r3, #1
   14004:	ldr	r3, [pc, #3276]	; 14cd8 <export_data_element_to_ascii@@Base+0x14fc>
   14008:	add	r3, pc, r3
   1400c:	str	r2, [r3]
   14010:	ldr	r0, [fp, #-952]	; 0xfffffc48
   14014:	bl	123d4 <coda_cursor_goto_parent@plt>
   14018:	b	14e00 <export_data_element_to_ascii@@Base+0x1624>
   1401c:	ldr	r0, [fp, #-952]	; 0xfffffc48
   14020:	bl	12368 <coda_cursor_goto_first_record_field@plt>
   14024:	mov	r3, r0
   14028:	cmp	r3, #0
   1402c:	beq	14034 <export_data_element_to_ascii@@Base+0x858>
   14030:	bl	1bdc8 <handle_coda_error@@Base>
   14034:	mov	r3, #0
   14038:	str	r3, [fp, #-80]	; 0xffffffb0
   1403c:	b	1421c <export_data_element_to_ascii@@Base+0xa40>
   14040:	ldr	r3, [fp, #-72]	; 0xffffffb8
   14044:	ldr	r1, [fp, #-80]	; 0xffffffb0
   14048:	sub	r2, fp, #120	; 0x78
   1404c:	mov	r0, r3
   14050:	bl	125fc <coda_type_get_record_field_name@plt>
   14054:	mov	r3, r0
   14058:	cmp	r3, #0
   1405c:	beq	14064 <export_data_element_to_ascii@@Base+0x888>
   14060:	bl	1bdc8 <handle_coda_error@@Base>
   14064:	ldr	r3, [fp, #-120]	; 0xffffff88
   14068:	mov	r1, r3
   1406c:	ldr	r3, [pc, #3176]	; 14cdc <export_data_element_to_ascii@@Base+0x1500>
   14070:	add	r3, pc, r3
   14074:	mov	r0, r3
   14078:	bl	13a50 <export_data_element_to_ascii@@Base+0x274>
   1407c:	ldr	r3, [pc, #3164]	; 14ce0 <export_data_element_to_ascii@@Base+0x1504>
   14080:	add	r3, pc, r3
   14084:	ldr	r3, [r3]
   14088:	cmp	r3, #0
   1408c:	beq	14148 <export_data_element_to_ascii@@Base+0x96c>
   14090:	sub	r3, fp, #132	; 0x84
   14094:	mov	r1, r3
   14098:	ldr	r0, [fp, #-952]	; 0xfffffc48
   1409c:	bl	125cc <coda_cursor_get_file_bit_offset@plt>
   140a0:	mov	r3, r0
   140a4:	cmp	r3, #0
   140a8:	beq	140b0 <export_data_element_to_ascii@@Base+0x8d4>
   140ac:	bl	1bdc8 <handle_coda_error@@Base>
   140b0:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   140b4:	cmp	r2, #0
   140b8:	sbcs	r3, r3, #0
   140bc:	blt	14148 <export_data_element_to_ascii@@Base+0x96c>
   140c0:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   140c4:	mov	r0, #0
   140c8:	mov	r1, #0
   140cc:	lsr	r0, r2, #3
   140d0:	orr	r0, r0, r3, lsl #29
   140d4:	asr	r1, r3, #3
   140d8:	sub	r3, fp, #156	; 0x9c
   140dc:	mov	r2, r3
   140e0:	bl	1262c <coda_str64@plt>
   140e4:	sub	r3, fp, #156	; 0x9c
   140e8:	mov	r1, r3
   140ec:	ldr	r3, [pc, #3056]	; 14ce4 <export_data_element_to_ascii@@Base+0x1508>
   140f0:	add	r3, pc, r3
   140f4:	mov	r0, r3
   140f8:	bl	139e4 <export_data_element_to_ascii@@Base+0x208>
   140fc:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   14100:	mov	r0, #7
   14104:	mov	r1, #0
   14108:	and	ip, r2, r0
   1410c:	str	ip, [fp, #-972]	; 0xfffffc34
   14110:	and	r3, r3, r1
   14114:	str	r3, [fp, #-968]	; 0xfffffc38
   14118:	sub	r3, fp, #972	; 0x3cc
   1411c:	ldrd	r2, [r3]
   14120:	orrs	r3, r2, r3
   14124:	beq	14148 <export_data_element_to_ascii@@Base+0x96c>
   14128:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   1412c:	mov	r3, r2
   14130:	and	r3, r3, #7
   14134:	mov	r1, r3
   14138:	ldr	r3, [pc, #2984]	; 14ce8 <export_data_element_to_ascii@@Base+0x150c>
   1413c:	add	r3, pc, r3
   14140:	mov	r0, r3
   14144:	bl	139e4 <export_data_element_to_ascii@@Base+0x208>
   14148:	ldr	r3, [pc, #2972]	; 14cec <export_data_element_to_ascii@@Base+0x1510>
   1414c:	add	r3, pc, r3
   14150:	mov	r0, r3
   14154:	bl	139e4 <export_data_element_to_ascii@@Base+0x208>
   14158:	ldr	r3, [pc, #2960]	; 14cf0 <export_data_element_to_ascii@@Base+0x1514>
   1415c:	add	r3, pc, r3
   14160:	ldr	r3, [r3]
   14164:	add	r2, r3, #1
   14168:	ldr	r3, [pc, #2948]	; 14cf4 <export_data_element_to_ascii@@Base+0x1518>
   1416c:	add	r3, pc, r3
   14170:	str	r2, [r3]
   14174:	ldr	r3, [pc, #2896]	; 14ccc <export_data_element_to_ascii@@Base+0x14f0>
   14178:	ldr	r3, [r4, r3]
   1417c:	ldr	r3, [r3]
   14180:	cmp	r3, #0
   14184:	blt	141a0 <export_data_element_to_ascii@@Base+0x9c4>
   14188:	ldr	r3, [pc, #2876]	; 14ccc <export_data_element_to_ascii@@Base+0x14f0>
   1418c:	ldr	r3, [r4, r3]
   14190:	ldr	r3, [r3]
   14194:	ldr	r2, [fp, #-956]	; 0xfffffc44
   14198:	cmp	r2, r3
   1419c:	bge	141b8 <export_data_element_to_ascii@@Base+0x9dc>
   141a0:	ldr	r3, [fp, #-956]	; 0xfffffc44
   141a4:	add	r3, r3, #1
   141a8:	mov	r1, r3
   141ac:	ldr	r0, [fp, #-952]	; 0xfffffc48
   141b0:	bl	13c98 <export_data_element_to_ascii@@Base+0x4bc>
   141b4:	b	141c8 <export_data_element_to_ascii@@Base+0x9ec>
   141b8:	ldr	r3, [pc, #2872]	; 14cf8 <export_data_element_to_ascii@@Base+0x151c>
   141bc:	add	r3, pc, r3
   141c0:	mov	r0, r3
   141c4:	bl	13a50 <export_data_element_to_ascii@@Base+0x274>
   141c8:	ldr	r3, [pc, #2860]	; 14cfc <export_data_element_to_ascii@@Base+0x1520>
   141cc:	add	r3, pc, r3
   141d0:	ldr	r3, [r3]
   141d4:	sub	r2, r3, #1
   141d8:	ldr	r3, [pc, #2848]	; 14d00 <export_data_element_to_ascii@@Base+0x1524>
   141dc:	add	r3, pc, r3
   141e0:	str	r2, [r3]
   141e4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   141e8:	sub	r2, r3, #1
   141ec:	ldr	r3, [fp, #-80]	; 0xffffffb0
   141f0:	cmp	r2, r3
   141f4:	ble	14210 <export_data_element_to_ascii@@Base+0xa34>
   141f8:	ldr	r0, [fp, #-952]	; 0xfffffc48
   141fc:	bl	12560 <coda_cursor_goto_next_record_field@plt>
   14200:	mov	r3, r0
   14204:	cmp	r3, #0
   14208:	beq	14210 <export_data_element_to_ascii@@Base+0xa34>
   1420c:	bl	1bdc8 <handle_coda_error@@Base>
   14210:	ldr	r3, [fp, #-80]	; 0xffffffb0
   14214:	add	r3, r3, #1
   14218:	str	r3, [fp, #-80]	; 0xffffffb0
   1421c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   14220:	ldr	r3, [fp, #-68]	; 0xffffffbc
   14224:	cmp	r2, r3
   14228:	blt	14040 <export_data_element_to_ascii@@Base+0x864>
   1422c:	ldr	r0, [fp, #-952]	; 0xfffffc48
   14230:	bl	123d4 <coda_cursor_goto_parent@plt>
   14234:	b	14e00 <export_data_element_to_ascii@@Base+0x1624>
   14238:	sub	r2, fp, #948	; 0x3b4
   1423c:	sub	r3, fp, #160	; 0xa0
   14240:	mov	r1, r3
   14244:	ldr	r0, [fp, #-952]	; 0xfffffc48
   14248:	bl	12500 <coda_cursor_get_array_dim@plt>
   1424c:	mov	r3, r0
   14250:	cmp	r3, #0
   14254:	beq	1425c <export_data_element_to_ascii@@Base+0xa80>
   14258:	bl	1bdc8 <handle_coda_error@@Base>
   1425c:	ldr	r3, [fp, #-160]	; 0xffffff60
   14260:	cmp	r3, #0
   14264:	blt	14e08 <export_data_element_to_ascii@@Base+0x162c>
   14268:	mov	r3, #1
   1426c:	str	r3, [fp, #-32]	; 0xffffffe0
   14270:	mov	r3, #0
   14274:	str	r3, [fp, #-36]	; 0xffffffdc
   14278:	b	142c0 <export_data_element_to_ascii@@Base+0xae4>
   1427c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14280:	lsl	r3, r3, #2
   14284:	sub	r2, fp, #28
   14288:	add	r3, r2, r3
   1428c:	ldr	r2, [r3, #-920]	; 0xfffffc68
   14290:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14294:	mul	r3, r2, r3
   14298:	str	r3, [fp, #-32]	; 0xffffffe0
   1429c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   142a0:	lsl	r3, r3, #2
   142a4:	sub	r2, fp, #28
   142a8:	add	r3, r2, r3
   142ac:	mov	r2, #0
   142b0:	str	r2, [r3, #-888]	; 0xfffffc88
   142b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   142b8:	add	r3, r3, #1
   142bc:	str	r3, [fp, #-36]	; 0xffffffdc
   142c0:	ldr	r3, [fp, #-160]	; 0xffffff60
   142c4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   142c8:	cmp	r2, r3
   142cc:	blt	1427c <export_data_element_to_ascii@@Base+0xaa0>
   142d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   142d4:	cmp	r3, #0
   142d8:	ble	14e08 <export_data_element_to_ascii@@Base+0x162c>
   142dc:	ldr	r0, [fp, #-952]	; 0xfffffc48
   142e0:	bl	12344 <coda_cursor_goto_first_array_element@plt>
   142e4:	mov	r3, r0
   142e8:	cmp	r3, #0
   142ec:	beq	142f4 <export_data_element_to_ascii@@Base+0xb18>
   142f0:	bl	1bdc8 <handle_coda_error@@Base>
   142f4:	mov	r3, #0
   142f8:	str	r3, [fp, #-36]	; 0xffffffdc
   142fc:	b	145d4 <export_data_element_to_ascii@@Base+0xdf8>
   14300:	ldr	r3, [pc, #2556]	; 14d04 <export_data_element_to_ascii@@Base+0x1528>
   14304:	add	r3, pc, r3
   14308:	mov	r0, r3
   1430c:	bl	13a50 <export_data_element_to_ascii@@Base+0x274>
   14310:	mov	r3, #0
   14314:	str	r3, [fp, #-40]	; 0xffffffd8
   14318:	b	14374 <export_data_element_to_ascii@@Base+0xb98>
   1431c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14320:	lsl	r3, r3, #2
   14324:	sub	r2, fp, #28
   14328:	add	r3, r2, r3
   1432c:	ldr	r3, [r3, #-888]	; 0xfffffc88
   14330:	mov	r1, r3
   14334:	ldr	r3, [pc, #2508]	; 14d08 <export_data_element_to_ascii@@Base+0x152c>
   14338:	add	r3, pc, r3
   1433c:	mov	r0, r3
   14340:	bl	139e4 <export_data_element_to_ascii@@Base+0x208>
   14344:	ldr	r3, [fp, #-160]	; 0xffffff60
   14348:	sub	r3, r3, #1
   1434c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14350:	cmp	r2, r3
   14354:	bge	14368 <export_data_element_to_ascii@@Base+0xb8c>
   14358:	ldr	r3, [pc, #2476]	; 14d0c <export_data_element_to_ascii@@Base+0x1530>
   1435c:	add	r3, pc, r3
   14360:	mov	r0, r3
   14364:	bl	139e4 <export_data_element_to_ascii@@Base+0x208>
   14368:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1436c:	add	r3, r3, #1
   14370:	str	r3, [fp, #-40]	; 0xffffffd8
   14374:	ldr	r3, [fp, #-160]	; 0xffffff60
   14378:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1437c:	cmp	r2, r3
   14380:	blt	1431c <export_data_element_to_ascii@@Base+0xb40>
   14384:	ldr	r3, [pc, #2436]	; 14d10 <export_data_element_to_ascii@@Base+0x1534>
   14388:	add	r3, pc, r3
   1438c:	mov	r0, r3
   14390:	bl	139e4 <export_data_element_to_ascii@@Base+0x208>
   14394:	ldr	r3, [pc, #2424]	; 14d14 <export_data_element_to_ascii@@Base+0x1538>
   14398:	add	r3, pc, r3
   1439c:	ldr	r3, [r3]
   143a0:	cmp	r3, #0
   143a4:	beq	14460 <export_data_element_to_ascii@@Base+0xc84>
   143a8:	sub	r3, fp, #172	; 0xac
   143ac:	mov	r1, r3
   143b0:	ldr	r0, [fp, #-952]	; 0xfffffc48
   143b4:	bl	125cc <coda_cursor_get_file_bit_offset@plt>
   143b8:	mov	r3, r0
   143bc:	cmp	r3, #0
   143c0:	beq	143c8 <export_data_element_to_ascii@@Base+0xbec>
   143c4:	bl	1bdc8 <handle_coda_error@@Base>
   143c8:	ldrd	r2, [fp, #-172]	; 0xffffff54
   143cc:	cmp	r2, #0
   143d0:	sbcs	r3, r3, #0
   143d4:	blt	14460 <export_data_element_to_ascii@@Base+0xc84>
   143d8:	ldrd	r2, [fp, #-172]	; 0xffffff54
   143dc:	mov	r0, #0
   143e0:	mov	r1, #0
   143e4:	lsr	r0, r2, #3
   143e8:	orr	r0, r0, r3, lsl #29
   143ec:	asr	r1, r3, #3
   143f0:	sub	r3, fp, #196	; 0xc4
   143f4:	mov	r2, r3
   143f8:	bl	1262c <coda_str64@plt>
   143fc:	sub	r3, fp, #196	; 0xc4
   14400:	mov	r1, r3
   14404:	ldr	r3, [pc, #2316]	; 14d18 <export_data_element_to_ascii@@Base+0x153c>
   14408:	add	r3, pc, r3
   1440c:	mov	r0, r3
   14410:	bl	139e4 <export_data_element_to_ascii@@Base+0x208>
   14414:	ldrd	r2, [fp, #-172]	; 0xffffff54
   14418:	mov	r0, #7
   1441c:	mov	r1, #0
   14420:	and	ip, r2, r0
   14424:	str	ip, [fp, #-980]	; 0xfffffc2c
   14428:	and	r3, r3, r1
   1442c:	str	r3, [fp, #-976]	; 0xfffffc30
   14430:	sub	r3, fp, #980	; 0x3d4
   14434:	ldrd	r2, [r3]
   14438:	orrs	r3, r2, r3
   1443c:	beq	14460 <export_data_element_to_ascii@@Base+0xc84>
   14440:	ldrd	r2, [fp, #-172]	; 0xffffff54
   14444:	mov	r3, r2
   14448:	and	r3, r3, #7
   1444c:	mov	r1, r3
   14450:	ldr	r3, [pc, #2244]	; 14d1c <export_data_element_to_ascii@@Base+0x1540>
   14454:	add	r3, pc, r3
   14458:	mov	r0, r3
   1445c:	bl	139e4 <export_data_element_to_ascii@@Base+0x208>
   14460:	ldr	r3, [pc, #2232]	; 14d20 <export_data_element_to_ascii@@Base+0x1544>
   14464:	add	r3, pc, r3
   14468:	mov	r0, r3
   1446c:	bl	139e4 <export_data_element_to_ascii@@Base+0x208>
   14470:	ldr	r3, [pc, #2220]	; 14d24 <export_data_element_to_ascii@@Base+0x1548>
   14474:	add	r3, pc, r3
   14478:	ldr	r3, [r3]
   1447c:	add	r2, r3, #1
   14480:	ldr	r3, [pc, #2208]	; 14d28 <export_data_element_to_ascii@@Base+0x154c>
   14484:	add	r3, pc, r3
   14488:	str	r2, [r3]
   1448c:	ldr	r3, [pc, #2104]	; 14ccc <export_data_element_to_ascii@@Base+0x14f0>
   14490:	ldr	r3, [r4, r3]
   14494:	ldr	r3, [r3]
   14498:	cmp	r3, #0
   1449c:	blt	144b8 <export_data_element_to_ascii@@Base+0xcdc>
   144a0:	ldr	r3, [pc, #2084]	; 14ccc <export_data_element_to_ascii@@Base+0x14f0>
   144a4:	ldr	r3, [r4, r3]
   144a8:	ldr	r3, [r3]
   144ac:	ldr	r2, [fp, #-956]	; 0xfffffc44
   144b0:	cmp	r2, r3
   144b4:	bge	144d0 <export_data_element_to_ascii@@Base+0xcf4>
   144b8:	ldr	r3, [fp, #-956]	; 0xfffffc44
   144bc:	add	r3, r3, #1
   144c0:	mov	r1, r3
   144c4:	ldr	r0, [fp, #-952]	; 0xfffffc48
   144c8:	bl	13c98 <export_data_element_to_ascii@@Base+0x4bc>
   144cc:	b	144e0 <export_data_element_to_ascii@@Base+0xd04>
   144d0:	ldr	r3, [pc, #2132]	; 14d2c <export_data_element_to_ascii@@Base+0x1550>
   144d4:	add	r3, pc, r3
   144d8:	mov	r0, r3
   144dc:	bl	13a50 <export_data_element_to_ascii@@Base+0x274>
   144e0:	ldr	r3, [pc, #2120]	; 14d30 <export_data_element_to_ascii@@Base+0x1554>
   144e4:	add	r3, pc, r3
   144e8:	ldr	r3, [r3]
   144ec:	sub	r2, r3, #1
   144f0:	ldr	r3, [pc, #2108]	; 14d34 <export_data_element_to_ascii@@Base+0x1558>
   144f4:	add	r3, pc, r3
   144f8:	str	r2, [r3]
   144fc:	ldr	r3, [fp, #-160]	; 0xffffff60
   14500:	sub	r3, r3, #1
   14504:	str	r3, [fp, #-40]	; 0xffffffd8
   14508:	b	14588 <export_data_element_to_ascii@@Base+0xdac>
   1450c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14510:	lsl	r3, r3, #2
   14514:	sub	r2, fp, #28
   14518:	add	r3, r2, r3
   1451c:	ldr	r3, [r3, #-888]	; 0xfffffc88
   14520:	add	r2, r3, #1
   14524:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14528:	lsl	r3, r3, #2
   1452c:	sub	r1, fp, #28
   14530:	add	r3, r1, r3
   14534:	str	r2, [r3, #-888]	; 0xfffffc88
   14538:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1453c:	lsl	r3, r3, #2
   14540:	sub	r2, fp, #28
   14544:	add	r3, r2, r3
   14548:	ldr	r2, [r3, #-888]	; 0xfffffc88
   1454c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14550:	lsl	r3, r3, #2
   14554:	sub	r1, fp, #28
   14558:	add	r3, r1, r3
   1455c:	ldr	r3, [r3, #-920]	; 0xfffffc68
   14560:	cmp	r2, r3
   14564:	bne	14598 <export_data_element_to_ascii@@Base+0xdbc>
   14568:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1456c:	sub	r2, r3, #1
   14570:	str	r2, [fp, #-40]	; 0xffffffd8
   14574:	lsl	r3, r3, #2
   14578:	sub	r2, fp, #28
   1457c:	add	r3, r2, r3
   14580:	mov	r2, #0
   14584:	str	r2, [r3, #-888]	; 0xfffffc88
   14588:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1458c:	cmp	r3, #0
   14590:	bge	1450c <export_data_element_to_ascii@@Base+0xd30>
   14594:	b	1459c <export_data_element_to_ascii@@Base+0xdc0>
   14598:	nop	{0}
   1459c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   145a0:	sub	r3, r3, #1
   145a4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   145a8:	cmp	r2, r3
   145ac:	bge	145c8 <export_data_element_to_ascii@@Base+0xdec>
   145b0:	ldr	r0, [fp, #-952]	; 0xfffffc48
   145b4:	bl	12440 <coda_cursor_goto_next_array_element@plt>
   145b8:	mov	r3, r0
   145bc:	cmp	r3, #0
   145c0:	beq	145c8 <export_data_element_to_ascii@@Base+0xdec>
   145c4:	bl	1bdc8 <handle_coda_error@@Base>
   145c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   145cc:	add	r3, r3, #1
   145d0:	str	r3, [fp, #-36]	; 0xffffffdc
   145d4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   145d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   145dc:	cmp	r2, r3
   145e0:	blt	14300 <export_data_element_to_ascii@@Base+0xb24>
   145e4:	ldr	r0, [fp, #-952]	; 0xfffffc48
   145e8:	bl	123d4 <coda_cursor_goto_parent@plt>
   145ec:	b	14e08 <export_data_element_to_ascii@@Base+0x162c>
   145f0:	sub	r3, fp, #204	; 0xcc
   145f4:	mov	r1, r3
   145f8:	ldr	r0, [fp, #-952]	; 0xfffffc48
   145fc:	bl	1250c <coda_cursor_has_ascii_content@plt>
   14600:	mov	r3, r0
   14604:	cmp	r3, #0
   14608:	beq	14610 <export_data_element_to_ascii@@Base+0xe34>
   1460c:	bl	1bdc8 <handle_coda_error@@Base>
   14610:	ldr	r3, [fp, #-204]	; 0xffffff34
   14614:	cmp	r3, #0
   14618:	beq	146f4 <export_data_element_to_ascii@@Base+0xf18>
   1461c:	sub	r3, fp, #208	; 0xd0
   14620:	mov	r1, r3
   14624:	ldr	r0, [fp, #-952]	; 0xfffffc48
   14628:	bl	12404 <coda_cursor_get_string_length@plt>
   1462c:	mov	r3, r0
   14630:	cmp	r3, #0
   14634:	beq	1463c <export_data_element_to_ascii@@Base+0xe60>
   14638:	bl	1bdc8 <handle_coda_error@@Base>
   1463c:	ldr	r3, [fp, #-208]	; 0xffffff30
   14640:	add	r3, r3, #1
   14644:	mov	r0, r3
   14648:	bl	123a4 <malloc@plt>
   1464c:	mov	r3, r0
   14650:	str	r3, [fp, #-44]	; 0xffffffd4
   14654:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14658:	cmp	r3, #0
   1465c:	bne	1468c <export_data_element_to_ascii@@Base+0xeb0>
   14660:	ldr	r3, [fp, #-208]	; 0xffffff30
   14664:	add	r2, r3, #1
   14668:	movw	r3, #410	; 0x19a
   1466c:	str	r3, [sp]
   14670:	ldr	r3, [pc, #1728]	; 14d38 <export_data_element_to_ascii@@Base+0x155c>
   14674:	add	r3, pc, r3
   14678:	ldr	r1, [pc, #1724]	; 14d3c <export_data_element_to_ascii@@Base+0x1560>
   1467c:	add	r1, pc, r1
   14680:	mvn	r0, #0
   14684:	bl	12224 <coda_set_error@plt>
   14688:	bl	1bdc8 <handle_coda_error@@Base>
   1468c:	ldr	r3, [fp, #-208]	; 0xffffff30
   14690:	add	r3, r3, #1
   14694:	mov	r2, r3
   14698:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1469c:	ldr	r0, [fp, #-952]	; 0xfffffc48
   146a0:	bl	123c8 <coda_cursor_read_string@plt>
   146a4:	mov	r3, r0
   146a8:	cmp	r3, #0
   146ac:	beq	146b4 <export_data_element_to_ascii@@Base+0xed8>
   146b0:	bl	1bdc8 <handle_coda_error@@Base>
   146b4:	ldr	r3, [pc, #1668]	; 14d40 <export_data_element_to_ascii@@Base+0x1564>
   146b8:	add	r3, pc, r3
   146bc:	mov	r0, r3
   146c0:	bl	13a50 <export_data_element_to_ascii@@Base+0x274>
   146c4:	ldr	r3, [fp, #-208]	; 0xffffff30
   146c8:	mov	r1, r3
   146cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   146d0:	bl	13ac8 <export_data_element_to_ascii@@Base+0x2ec>
   146d4:	ldr	r3, [fp, #-208]	; 0xffffff30
   146d8:	mov	r1, r3
   146dc:	ldr	r3, [pc, #1632]	; 14d44 <export_data_element_to_ascii@@Base+0x1568>
   146e0:	add	r3, pc, r3
   146e4:	mov	r0, r3
   146e8:	bl	139e4 <export_data_element_to_ascii@@Base+0x208>
   146ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   146f0:	bl	1226c <free@plt>
   146f4:	sub	r3, fp, #200	; 0xc8
   146f8:	mov	r1, r3
   146fc:	ldr	r0, [fp, #-952]	; 0xfffffc48
   14700:	bl	12398 <coda_cursor_get_read_type@plt>
   14704:	mov	r3, r0
   14708:	cmp	r3, #0
   1470c:	beq	14714 <export_data_element_to_ascii@@Base+0xf38>
   14710:	bl	1bdc8 <handle_coda_error@@Base>
   14714:	ldr	r3, [fp, #-200]	; 0xffffff38
   14718:	add	r3, r3, #1
   1471c:	cmp	r3, #13
   14720:	addls	pc, pc, r3, lsl #2
   14724:	b	14e10 <export_data_element_to_ascii@@Base+0x1634>
   14728:	b	14a98 <export_data_element_to_ascii@@Base+0x12bc>
   1472c:	b	1491c <export_data_element_to_ascii@@Base+0x1140>
   14730:	b	14958 <export_data_element_to_ascii@@Base+0x117c>
   14734:	b	1491c <export_data_element_to_ascii@@Base+0x1140>
   14738:	b	14958 <export_data_element_to_ascii@@Base+0x117c>
   1473c:	b	1491c <export_data_element_to_ascii@@Base+0x1140>
   14740:	b	14958 <export_data_element_to_ascii@@Base+0x117c>
   14744:	b	14994 <export_data_element_to_ascii@@Base+0x11b8>
   14748:	b	149e4 <export_data_element_to_ascii@@Base+0x1208>
   1474c:	b	14a34 <export_data_element_to_ascii@@Base+0x1258>
   14750:	b	14a34 <export_data_element_to_ascii@@Base+0x1258>
   14754:	b	14a98 <export_data_element_to_ascii@@Base+0x12bc>
   14758:	b	14a98 <export_data_element_to_ascii@@Base+0x12bc>
   1475c:	b	14760 <export_data_element_to_ascii@@Base+0xf84>
   14760:	sub	r3, fp, #220	; 0xdc
   14764:	mov	r1, r3
   14768:	ldr	r0, [fp, #-952]	; 0xfffffc48
   1476c:	bl	12584 <coda_cursor_get_bit_size@plt>
   14770:	mov	r3, r0
   14774:	cmp	r3, #0
   14778:	beq	14780 <export_data_element_to_ascii@@Base+0xfa4>
   1477c:	bl	1bdc8 <handle_coda_error@@Base>
   14780:	ldrd	r0, [fp, #-220]	; 0xffffff24
   14784:	mov	r2, #0
   14788:	mov	r3, #0
   1478c:	lsr	r2, r0, #3
   14790:	orr	r2, r2, r1, lsl #29
   14794:	asr	r3, r1, #3
   14798:	ldrd	r0, [fp, #-220]	; 0xffffff24
   1479c:	mov	r4, #7
   147a0:	mov	r5, #0
   147a4:	and	ip, r0, r4
   147a8:	str	ip, [fp, #-988]	; 0xfffffc24
   147ac:	and	r1, r1, r5
   147b0:	str	r1, [fp, #-984]	; 0xfffffc28
   147b4:	sub	r1, fp, #988	; 0x3dc
   147b8:	ldrd	r0, [r1]
   147bc:	orrs	r1, r0, r1
   147c0:	beq	147d0 <export_data_element_to_ascii@@Base+0xff4>
   147c4:	mov	r0, #1
   147c8:	mov	r1, #0
   147cc:	b	147d8 <export_data_element_to_ascii@@Base+0xffc>
   147d0:	mov	r0, #0
   147d4:	mov	r1, #0
   147d8:	adds	r8, r0, r2
   147dc:	adc	r9, r1, r3
   147e0:	strd	r8, [fp, #-52]	; 0xffffffcc
   147e4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   147e8:	mov	r0, r3
   147ec:	bl	123a4 <malloc@plt>
   147f0:	mov	r3, r0
   147f4:	str	r3, [fp, #-56]	; 0xffffffc8
   147f8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   147fc:	cmp	r3, #0
   14800:	bne	1482c <export_data_element_to_ascii@@Base+0x1050>
   14804:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14808:	movw	r3, #447	; 0x1bf
   1480c:	str	r3, [sp]
   14810:	ldr	r3, [pc, #1328]	; 14d48 <export_data_element_to_ascii@@Base+0x156c>
   14814:	add	r3, pc, r3
   14818:	ldr	r1, [pc, #1324]	; 14d4c <export_data_element_to_ascii@@Base+0x1570>
   1481c:	add	r1, pc, r1
   14820:	mvn	r0, #0
   14824:	bl	12224 <coda_set_error@plt>
   14828:	bl	1bdc8 <handle_coda_error@@Base>
   1482c:	ldrd	r2, [fp, #-220]	; 0xffffff24
   14830:	strd	r2, [sp]
   14834:	mov	r2, #0
   14838:	mov	r3, #0
   1483c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   14840:	ldr	r0, [fp, #-952]	; 0xfffffc48
   14844:	bl	12620 <coda_cursor_read_bits@plt>
   14848:	mov	r3, r0
   1484c:	cmp	r3, #0
   14850:	beq	14858 <export_data_element_to_ascii@@Base+0x107c>
   14854:	bl	1bdc8 <handle_coda_error@@Base>
   14858:	ldr	r3, [pc, #1264]	; 14d50 <export_data_element_to_ascii@@Base+0x1574>
   1485c:	add	r3, pc, r3
   14860:	mov	r0, r3
   14864:	bl	13a50 <export_data_element_to_ascii@@Base+0x274>
   14868:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1486c:	mov	r1, r3
   14870:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14874:	bl	13ac8 <export_data_element_to_ascii@@Base+0x2ec>
   14878:	ldr	r3, [pc, #1236]	; 14d54 <export_data_element_to_ascii@@Base+0x1578>
   1487c:	add	r3, pc, r3
   14880:	mov	r0, r3
   14884:	bl	139e4 <export_data_element_to_ascii@@Base+0x208>
   14888:	ldrd	r2, [fp, #-220]	; 0xffffff24
   1488c:	mov	r0, #0
   14890:	mov	r1, #0
   14894:	lsr	r0, r2, #3
   14898:	orr	r0, r0, r3, lsl #29
   1489c:	asr	r1, r3, #3
   148a0:	sub	r3, fp, #244	; 0xf4
   148a4:	mov	r2, r3
   148a8:	bl	1262c <coda_str64@plt>
   148ac:	sub	r3, fp, #244	; 0xf4
   148b0:	mov	r1, r3
   148b4:	ldr	r3, [pc, #1180]	; 14d58 <export_data_element_to_ascii@@Base+0x157c>
   148b8:	add	r3, pc, r3
   148bc:	mov	r0, r3
   148c0:	bl	139e4 <export_data_element_to_ascii@@Base+0x208>
   148c4:	ldrd	r2, [fp, #-220]	; 0xffffff24
   148c8:	mov	r0, #7
   148cc:	mov	r1, #0
   148d0:	and	r6, r2, r0
   148d4:	and	r7, r3, r1
   148d8:	orrs	r3, r6, r7
   148dc:	beq	14900 <export_data_element_to_ascii@@Base+0x1124>
   148e0:	ldrd	r2, [fp, #-220]	; 0xffffff24
   148e4:	mov	r3, r2
   148e8:	and	r3, r3, #7
   148ec:	mov	r1, r3
   148f0:	ldr	r3, [pc, #1124]	; 14d5c <export_data_element_to_ascii@@Base+0x1580>
   148f4:	add	r3, pc, r3
   148f8:	mov	r0, r3
   148fc:	bl	139e4 <export_data_element_to_ascii@@Base+0x208>
   14900:	ldr	r3, [pc, #1112]	; 14d60 <export_data_element_to_ascii@@Base+0x1584>
   14904:	add	r3, pc, r3
   14908:	mov	r0, r3
   1490c:	bl	139e4 <export_data_element_to_ascii@@Base+0x208>
   14910:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14914:	bl	1226c <free@plt>
   14918:	b	14ac8 <export_data_element_to_ascii@@Base+0x12ec>
   1491c:	sub	r3, fp, #248	; 0xf8
   14920:	mov	r1, r3
   14924:	ldr	r0, [fp, #-952]	; 0xfffffc48
   14928:	bl	125c0 <coda_cursor_read_int32@plt>
   1492c:	mov	r3, r0
   14930:	cmp	r3, #0
   14934:	beq	1493c <export_data_element_to_ascii@@Base+0x1160>
   14938:	bl	1bdc8 <handle_coda_error@@Base>
   1493c:	ldr	r3, [fp, #-248]	; 0xffffff08
   14940:	mov	r1, r3
   14944:	ldr	r3, [pc, #1048]	; 14d64 <export_data_element_to_ascii@@Base+0x1588>
   14948:	add	r3, pc, r3
   1494c:	mov	r0, r3
   14950:	bl	13a50 <export_data_element_to_ascii@@Base+0x274>
   14954:	b	14ac8 <export_data_element_to_ascii@@Base+0x12ec>
   14958:	sub	r3, fp, #252	; 0xfc
   1495c:	mov	r1, r3
   14960:	ldr	r0, [fp, #-952]	; 0xfffffc48
   14964:	bl	12290 <coda_cursor_read_uint32@plt>
   14968:	mov	r3, r0
   1496c:	cmp	r3, #0
   14970:	beq	14978 <export_data_element_to_ascii@@Base+0x119c>
   14974:	bl	1bdc8 <handle_coda_error@@Base>
   14978:	ldr	r3, [fp, #-252]	; 0xffffff04
   1497c:	mov	r1, r3
   14980:	ldr	r3, [pc, #992]	; 14d68 <export_data_element_to_ascii@@Base+0x158c>
   14984:	add	r3, pc, r3
   14988:	mov	r0, r3
   1498c:	bl	13a50 <export_data_element_to_ascii@@Base+0x274>
   14990:	b	14ac8 <export_data_element_to_ascii@@Base+0x12ec>
   14994:	sub	r3, fp, #260	; 0x104
   14998:	mov	r1, r3
   1499c:	ldr	r0, [fp, #-952]	; 0xfffffc48
   149a0:	bl	12524 <coda_cursor_read_int64@plt>
   149a4:	mov	r3, r0
   149a8:	cmp	r3, #0
   149ac:	beq	149b4 <export_data_element_to_ascii@@Base+0x11d8>
   149b0:	bl	1bdc8 <handle_coda_error@@Base>
   149b4:	sub	r3, fp, #260	; 0x104
   149b8:	ldrd	r0, [r3]
   149bc:	sub	r3, fp, #284	; 0x11c
   149c0:	mov	r2, r3
   149c4:	bl	1262c <coda_str64@plt>
   149c8:	sub	r3, fp, #284	; 0x11c
   149cc:	mov	r1, r3
   149d0:	ldr	r3, [pc, #916]	; 14d6c <export_data_element_to_ascii@@Base+0x1590>
   149d4:	add	r3, pc, r3
   149d8:	mov	r0, r3
   149dc:	bl	13a50 <export_data_element_to_ascii@@Base+0x274>
   149e0:	b	14ac8 <export_data_element_to_ascii@@Base+0x12ec>
   149e4:	sub	r3, fp, #292	; 0x124
   149e8:	mov	r1, r3
   149ec:	ldr	r0, [fp, #-952]	; 0xfffffc48
   149f0:	bl	12410 <coda_cursor_read_uint64@plt>
   149f4:	mov	r3, r0
   149f8:	cmp	r3, #0
   149fc:	beq	14a04 <export_data_element_to_ascii@@Base+0x1228>
   14a00:	bl	1bdc8 <handle_coda_error@@Base>
   14a04:	sub	r3, fp, #284	; 0x11c
   14a08:	ldrd	r0, [r3, #-8]
   14a0c:	sub	r3, fp, #316	; 0x13c
   14a10:	mov	r2, r3
   14a14:	bl	12260 <coda_str64u@plt>
   14a18:	sub	r3, fp, #316	; 0x13c
   14a1c:	mov	r1, r3
   14a20:	ldr	r3, [pc, #840]	; 14d70 <export_data_element_to_ascii@@Base+0x1594>
   14a24:	add	r3, pc, r3
   14a28:	mov	r0, r3
   14a2c:	bl	13a50 <export_data_element_to_ascii@@Base+0x274>
   14a30:	b	14ac8 <export_data_element_to_ascii@@Base+0x12ec>
   14a34:	sub	r3, fp, #324	; 0x144
   14a38:	mov	r1, r3
   14a3c:	ldr	r0, [fp, #-952]	; 0xfffffc48
   14a40:	bl	1241c <coda_cursor_read_double@plt>
   14a44:	mov	r3, r0
   14a48:	cmp	r3, #0
   14a4c:	beq	14a54 <export_data_element_to_ascii@@Base+0x1278>
   14a50:	bl	1bdc8 <handle_coda_error@@Base>
   14a54:	ldr	r3, [fp, #-200]	; 0xffffff38
   14a58:	cmp	r3, #8
   14a5c:	bne	14a7c <export_data_element_to_ascii@@Base+0x12a0>
   14a60:	sub	r3, fp, #324	; 0x144
   14a64:	ldrd	r2, [r3]
   14a68:	ldr	r1, [pc, #772]	; 14d74 <export_data_element_to_ascii@@Base+0x1598>
   14a6c:	add	r1, pc, r1
   14a70:	mov	r0, r1
   14a74:	bl	13a50 <export_data_element_to_ascii@@Base+0x274>
   14a78:	b	14ac8 <export_data_element_to_ascii@@Base+0x12ec>
   14a7c:	sub	r3, fp, #324	; 0x144
   14a80:	ldrd	r2, [r3]
   14a84:	ldr	r1, [pc, #748]	; 14d78 <export_data_element_to_ascii@@Base+0x159c>
   14a88:	add	r1, pc, r1
   14a8c:	mov	r0, r1
   14a90:	bl	13a50 <export_data_element_to_ascii@@Base+0x274>
   14a94:	b	14ac8 <export_data_element_to_ascii@@Base+0x12ec>
   14a98:	ldr	r3, [fp, #-204]	; 0xffffff34
   14a9c:	cmp	r3, #0
   14aa0:	bne	14ac4 <export_data_element_to_ascii@@Base+0x12e8>
   14aa4:	ldr	r3, [pc, #720]	; 14d7c <export_data_element_to_ascii@@Base+0x15a0>
   14aa8:	add	r3, pc, r3
   14aac:	mov	r2, #548	; 0x224
   14ab0:	ldr	r1, [pc, #712]	; 14d80 <export_data_element_to_ascii@@Base+0x15a4>
   14ab4:	add	r1, pc, r1
   14ab8:	ldr	r0, [pc, #708]	; 14d84 <export_data_element_to_ascii@@Base+0x15a8>
   14abc:	add	r0, pc, r0
   14ac0:	bl	12638 <__assert_fail@plt>
   14ac4:	nop	{0}
   14ac8:	b	14e10 <export_data_element_to_ascii@@Base+0x1634>
   14acc:	sub	r3, fp, #328	; 0x148
   14ad0:	mov	r1, r3
   14ad4:	ldr	r0, [fp, #-952]	; 0xfffffc48
   14ad8:	bl	12338 <coda_cursor_get_special_type@plt>
   14adc:	mov	r3, r0
   14ae0:	cmp	r3, #0
   14ae4:	beq	14aec <export_data_element_to_ascii@@Base+0x1310>
   14ae8:	bl	1bdc8 <handle_coda_error@@Base>
   14aec:	ldr	r3, [fp, #-328]	; 0xfffffeb8
   14af0:	cmp	r3, #0
   14af4:	beq	14b3c <export_data_element_to_ascii@@Base+0x1360>
   14af8:	ldr	r2, [fp, #-952]	; 0xfffffc48
   14afc:	sub	r3, fp, #916	; 0x394
   14b00:	mov	r1, r2
   14b04:	mov	r2, #520	; 0x208
   14b08:	mov	r0, r3
   14b0c:	bl	122c0 <memcpy@plt>
   14b10:	sub	r3, fp, #916	; 0x394
   14b14:	mov	r0, r3
   14b18:	bl	125a8 <coda_cursor_use_base_type_of_special_type@plt>
   14b1c:	mov	r3, r0
   14b20:	cmp	r3, #0
   14b24:	beq	14b2c <export_data_element_to_ascii@@Base+0x1350>
   14b28:	bl	1bdc8 <handle_coda_error@@Base>
   14b2c:	sub	r3, fp, #916	; 0x394
   14b30:	ldr	r1, [fp, #-956]	; 0xfffffc44
   14b34:	mov	r0, r3
   14b38:	bl	13c98 <export_data_element_to_ascii@@Base+0x4bc>
   14b3c:	ldr	r3, [fp, #-328]	; 0xfffffeb8
   14b40:	mov	r0, r3
   14b44:	bl	121ac <coda_type_get_special_type_name@plt>
   14b48:	mov	r3, r0
   14b4c:	mov	r1, r3
   14b50:	ldr	r3, [pc, #560]	; 14d88 <export_data_element_to_ascii@@Base+0x15ac>
   14b54:	add	r3, pc, r3
   14b58:	mov	r0, r3
   14b5c:	bl	13a50 <export_data_element_to_ascii@@Base+0x274>
   14b60:	ldr	r3, [fp, #-328]	; 0xfffffeb8
   14b64:	cmp	r3, #3
   14b68:	addls	pc, pc, r3, lsl #2
   14b6c:	b	14e18 <export_data_element_to_ascii@@Base+0x163c>
   14b70:	b	14b80 <export_data_element_to_ascii@@Base+0x13a4>
   14b74:	b	14b94 <export_data_element_to_ascii@@Base+0x13b8>
   14b78:	b	14bd0 <export_data_element_to_ascii@@Base+0x13f4>
   14b7c:	b	14da8 <export_data_element_to_ascii@@Base+0x15cc>
   14b80:	ldr	r3, [pc, #516]	; 14d8c <export_data_element_to_ascii@@Base+0x15b0>
   14b84:	add	r3, pc, r3
   14b88:	mov	r0, r3
   14b8c:	bl	139e4 <export_data_element_to_ascii@@Base+0x208>
   14b90:	b	14dfc <export_data_element_to_ascii@@Base+0x1620>
   14b94:	sub	r3, fp, #340	; 0x154
   14b98:	mov	r1, r3
   14b9c:	ldr	r0, [fp, #-952]	; 0xfffffc48
   14ba0:	bl	1241c <coda_cursor_read_double@plt>
   14ba4:	mov	r3, r0
   14ba8:	cmp	r3, #0
   14bac:	beq	14bb4 <export_data_element_to_ascii@@Base+0x13d8>
   14bb0:	bl	1bdc8 <handle_coda_error@@Base>
   14bb4:	sub	r3, fp, #340	; 0x154
   14bb8:	ldrd	r2, [r3]
   14bbc:	ldr	r1, [pc, #460]	; 14d90 <export_data_element_to_ascii@@Base+0x15b4>
   14bc0:	add	r1, pc, r1
   14bc4:	mov	r0, r1
   14bc8:	bl	139e4 <export_data_element_to_ascii@@Base+0x208>
   14bcc:	b	14dfc <export_data_element_to_ascii@@Base+0x1620>
   14bd0:	sub	r3, fp, #348	; 0x15c
   14bd4:	mov	r1, r3
   14bd8:	ldr	r0, [fp, #-952]	; 0xfffffc48
   14bdc:	bl	1241c <coda_cursor_read_double@plt>
   14be0:	mov	r3, r0
   14be4:	cmp	r3, #0
   14be8:	beq	14bf0 <export_data_element_to_ascii@@Base+0x1414>
   14bec:	bl	1bdc8 <handle_coda_error@@Base>
   14bf0:	vldr	d7, [fp, #-348]	; 0xfffffea4
   14bf4:	vmov.f64	d0, d7
   14bf8:	bl	12428 <coda_isNaN@plt>
   14bfc:	mov	r3, r0
   14c00:	cmp	r3, #0
   14c04:	bne	14c20 <export_data_element_to_ascii@@Base+0x1444>
   14c08:	vldr	d7, [fp, #-348]	; 0xfffffea4
   14c0c:	vmov.f64	d0, d7
   14c10:	bl	122cc <coda_isInf@plt>
   14c14:	mov	r3, r0
   14c18:	cmp	r3, #0
   14c1c:	beq	14c3c <export_data_element_to_ascii@@Base+0x1460>
   14c20:	sub	r3, fp, #348	; 0x15c
   14c24:	ldrd	r2, [r3]
   14c28:	ldr	r1, [pc, #356]	; 14d94 <export_data_element_to_ascii@@Base+0x15b8>
   14c2c:	add	r1, pc, r1
   14c30:	mov	r0, r1
   14c34:	bl	139e4 <export_data_element_to_ascii@@Base+0x208>
   14c38:	b	14dfc <export_data_element_to_ascii@@Base+0x1620>
   14c3c:	vldr	d7, [fp, #-348]	; 0xfffffea4
   14c40:	sub	r3, fp, #376	; 0x178
   14c44:	mov	r1, r3
   14c48:	ldr	r3, [pc, #328]	; 14d98 <export_data_element_to_ascii@@Base+0x15bc>
   14c4c:	add	r3, pc, r3
   14c50:	mov	r0, r3
   14c54:	vmov.f64	d0, d7
   14c58:	bl	12248 <coda_time_double_to_string@plt>
   14c5c:	mov	r3, r0
   14c60:	cmp	r3, #0
   14c64:	beq	14c7c <export_data_element_to_ascii@@Base+0x14a0>
   14c68:	ldr	r3, [pc, #300]	; 14d9c <export_data_element_to_ascii@@Base+0x15c0>
   14c6c:	add	r3, pc, r3
   14c70:	mov	r0, r3
   14c74:	bl	139e4 <export_data_element_to_ascii@@Base+0x208>
   14c78:	b	14dfc <export_data_element_to_ascii@@Base+0x1620>
   14c7c:	sub	r3, fp, #376	; 0x178
   14c80:	mov	r1, r3
   14c84:	ldr	r3, [pc, #276]	; 14da0 <export_data_element_to_ascii@@Base+0x15c4>
   14c88:	add	r3, pc, r3
   14c8c:	mov	r0, r3
   14c90:	bl	139e4 <export_data_element_to_ascii@@Base+0x208>
   14c94:	b	14dfc <export_data_element_to_ascii@@Base+0x1620>
   14c98:	andeq	sp, r1, r8, lsr r3
   14c9c:	andeq	sl, r0, ip, ror sp
   14ca0:	andeq	sp, r1, r8, ror #9
   14ca4:	ldrdeq	sp, [r1], -r8
   14ca8:	andeq	sp, r1, r0, asr #9
   14cac:			; <UNDEFINED> instruction: 0x0001d4b0
   14cb0:	strdeq	sl, [r0], -ip
   14cb4:	andeq	sp, r1, r8, asr #6
   14cb8:	andeq	sl, r0, r4, lsl #23
   14cbc:	andeq	sl, r0, ip, lsr fp
   14cc0:	andeq	sl, r0, r0, lsr fp
   14cc4:	andeq	sp, r1, ip, ror r2
   14cc8:	andeq	sp, r1, ip, ror #4
   14ccc:	andeq	r0, r0, r0, ror #3
   14cd0:	andeq	sl, r0, r4, asr #21
   14cd4:	andeq	sp, r1, ip, lsl #4
   14cd8:	strdeq	sp, [r1], -ip
   14cdc:	andeq	sl, r0, r8, lsr #20
   14ce0:	andeq	sp, r1, r4, ror r1
   14ce4:			; <UNDEFINED> instruction: 0x0000a9b0
   14ce8:	andeq	sl, r0, r8, ror #18
   14cec:	andeq	sl, r0, ip, asr r9
   14cf0:	andeq	sp, r1, r8, lsr #1
   14cf4:	muleq	r1, r8, r0
   14cf8:	strdeq	sl, [r0], -r0
   14cfc:	andeq	sp, r1, r8, lsr r0
   14d00:	andeq	sp, r1, r8, lsr #32
   14d04:			; <UNDEFINED> instruction: 0x0000a7b0
   14d08:	andeq	sl, r0, r0, lsl #15
   14d0c:	andeq	sl, r0, r0, ror #14
   14d10:	andeq	sl, r0, r8, lsr r7
   14d14:	andeq	ip, r1, ip, asr lr
   14d18:	muleq	r0, r8, r6
   14d1c:	andeq	sl, r0, r0, asr r6
   14d20:	andeq	sl, r0, r4, asr #12
   14d24:	muleq	r1, r0, sp
   14d28:	andeq	ip, r1, r0, lsl #27
   14d2c:	ldrdeq	sl, [r0], -r8
   14d30:	andeq	ip, r1, r0, lsr #26
   14d34:	andeq	ip, r1, r0, lsl sp
   14d38:	andeq	sl, r0, r4, ror r3
   14d3c:	andeq	sl, r0, r8, asr #8
   14d40:	andeq	sl, r0, r4, asr #8
   14d44:	andeq	sl, r0, r0, lsr #8
   14d48:	ldrdeq	sl, [r0], -r4
   14d4c:	andeq	sl, r0, r8, lsr #5
   14d50:	andeq	sl, r0, r0, lsr #5
   14d54:	muleq	r0, r4, r2
   14d58:	andeq	sl, r0, r4, ror #4
   14d5c:			; <UNDEFINED> instruction: 0x0000a1b0
   14d60:	andeq	sl, r0, ip, lsl r2
   14d64:	ldrdeq	sl, [r0], -ip
   14d68:	andeq	sl, r0, r8, lsr #3
   14d6c:	andeq	sl, r0, r0, ror #2
   14d70:	andeq	sl, r0, r0, lsl r1
   14d74:	andeq	sl, r0, ip, asr #1
   14d78:	strheq	sl, [r0], -r8
   14d7c:	andeq	sl, r0, r8, lsl r1
   14d80:	andeq	r9, r0, r4, lsr pc
   14d84:	andeq	sl, r0, ip, lsl #1
   14d88:	andeq	sl, r0, r8
   14d8c:	andeq	r9, r0, r4, lsr #30
   14d90:	andeq	r9, r0, r0, lsl #31
   14d94:	andeq	r9, r0, r8, lsr pc
   14d98:	andeq	r9, r0, r0, lsr #30
   14d9c:	andeq	r9, r0, ip, lsl pc
   14da0:	andeq	r9, r0, ip, lsl pc
   14da4:	andeq	r9, r0, r0, asr #27
   14da8:	sub	r2, fp, #396	; 0x18c
   14dac:	sub	r3, fp, #388	; 0x184
   14db0:	mov	r1, r3
   14db4:	ldr	r0, [fp, #-952]	; 0xfffffc48
   14db8:	bl	124c4 <coda_cursor_read_complex_double_split@plt>
   14dbc:	mov	r3, r0
   14dc0:	cmp	r3, #0
   14dc4:	beq	14dcc <export_data_element_to_ascii@@Base+0x15f0>
   14dc8:	bl	1bdc8 <handle_coda_error@@Base>
   14dcc:	sub	r1, fp, #388	; 0x184
   14dd0:	ldrd	r0, [r1]
   14dd4:	sub	r3, fp, #396	; 0x18c
   14dd8:	ldrd	r2, [r3]
   14ddc:	strd	r2, [sp]
   14de0:	mov	r2, r0
   14de4:	mov	r3, r1
   14de8:	ldr	r1, [pc, #-76]	; 14da4 <export_data_element_to_ascii@@Base+0x15c8>
   14dec:	add	r1, pc, r1
   14df0:	mov	r0, r1
   14df4:	bl	139e4 <export_data_element_to_ascii@@Base+0x208>
   14df8:	nop	{0}
   14dfc:	b	14e18 <export_data_element_to_ascii@@Base+0x163c>
   14e00:	nop	{0}
   14e04:	b	14e1c <export_data_element_to_ascii@@Base+0x1640>
   14e08:	nop	{0}
   14e0c:	b	14e1c <export_data_element_to_ascii@@Base+0x1640>
   14e10:	nop	{0}
   14e14:	b	14e1c <export_data_element_to_ascii@@Base+0x1640>
   14e18:	nop	{0}
   14e1c:	nop	{0}
   14e20:	sub	sp, fp, #28
   14e24:	ldrd	r4, [sp]
   14e28:	ldrd	r6, [sp, #8]
   14e2c:	ldrd	r8, [sp, #16]
   14e30:	ldr	fp, [sp, #24]
   14e34:	add	sp, sp, #28
   14e38:	pop	{pc}		; (ldr pc, [sp], #4)

00014e3c <print_debug_data@@Base>:
   14e3c:	str	r4, [sp, #-12]!
   14e40:	str	fp, [sp, #4]
   14e44:	str	lr, [sp, #8]
   14e48:	add	fp, sp, #8
   14e4c:	sub	sp, sp, #564	; 0x234
   14e50:	str	r0, [fp, #-552]	; 0xfffffdd8
   14e54:	str	r1, [fp, #-556]	; 0xfffffdd4
   14e58:	str	r2, [fp, #-560]	; 0xfffffdd0
   14e5c:	ldr	r4, [pc, #500]	; 15058 <print_debug_data@@Base+0x21c>
   14e60:	add	r4, pc, r4
   14e64:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   14e68:	cmp	r3, #0
   14e6c:	bne	14e94 <print_debug_data@@Base+0x58>
   14e70:	ldr	r3, [pc, #484]	; 1505c <print_debug_data@@Base+0x220>
   14e74:	ldr	r3, [r4, r3]
   14e78:	ldr	r3, [r3]
   14e7c:	sub	r2, fp, #20
   14e80:	mov	r1, r2
   14e84:	mov	r0, r3
   14e88:	bl	12230 <coda_open@plt>
   14e8c:	str	r0, [fp, #-16]
   14e90:	b	14ebc <print_debug_data@@Base+0x80>
   14e94:	ldr	r3, [pc, #448]	; 1505c <print_debug_data@@Base+0x220>
   14e98:	ldr	r3, [r4, r3]
   14e9c:	ldr	r0, [r3]
   14ea0:	sub	r3, fp, #20
   14ea4:	str	r3, [sp]
   14ea8:	ldr	r3, [fp, #-560]	; 0xfffffdd0
   14eac:	ldr	r2, [fp, #-556]	; 0xfffffdd4
   14eb0:	ldr	r1, [fp, #-552]	; 0xfffffdd8
   14eb4:	bl	1244c <coda_open_as@plt>
   14eb8:	str	r0, [fp, #-16]
   14ebc:	ldr	r3, [fp, #-16]
   14ec0:	cmp	r3, #0
   14ec4:	beq	14f44 <print_debug_data@@Base+0x108>
   14ec8:	bl	125e4 <coda_get_errno@plt>
   14ecc:	mov	r3, r0
   14ed0:	ldr	r3, [r3]
   14ed4:	cmn	r3, #21
   14ed8:	bne	14f44 <print_debug_data@@Base+0x108>
   14edc:	mov	r0, #0
   14ee0:	bl	12278 <coda_set_option_use_mmap@plt>
   14ee4:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   14ee8:	cmp	r3, #0
   14eec:	bne	14f14 <print_debug_data@@Base+0xd8>
   14ef0:	ldr	r3, [pc, #356]	; 1505c <print_debug_data@@Base+0x220>
   14ef4:	ldr	r3, [r4, r3]
   14ef8:	ldr	r3, [r3]
   14efc:	sub	r2, fp, #20
   14f00:	mov	r1, r2
   14f04:	mov	r0, r3
   14f08:	bl	12230 <coda_open@plt>
   14f0c:	str	r0, [fp, #-16]
   14f10:	b	14f3c <print_debug_data@@Base+0x100>
   14f14:	ldr	r3, [pc, #320]	; 1505c <print_debug_data@@Base+0x220>
   14f18:	ldr	r3, [r4, r3]
   14f1c:	ldr	r0, [r3]
   14f20:	sub	r3, fp, #20
   14f24:	str	r3, [sp]
   14f28:	ldr	r3, [fp, #-560]	; 0xfffffdd0
   14f2c:	ldr	r2, [fp, #-556]	; 0xfffffdd4
   14f30:	ldr	r1, [fp, #-552]	; 0xfffffdd8
   14f34:	bl	1244c <coda_open_as@plt>
   14f38:	str	r0, [fp, #-16]
   14f3c:	mov	r0, #1
   14f40:	bl	12278 <coda_set_option_use_mmap@plt>
   14f44:	ldr	r3, [fp, #-16]
   14f48:	cmp	r3, #0
   14f4c:	beq	14f54 <print_debug_data@@Base+0x118>
   14f50:	bl	1bdc8 <handle_coda_error@@Base>
   14f54:	ldr	r3, [fp, #-20]	; 0xffffffec
   14f58:	sub	r2, fp, #544	; 0x220
   14f5c:	mov	r1, r2
   14f60:	mov	r0, r3
   14f64:	bl	12314 <coda_get_product_format@plt>
   14f68:	mov	r3, r0
   14f6c:	cmp	r3, #0
   14f70:	beq	14f78 <print_debug_data@@Base+0x13c>
   14f74:	bl	1bdc8 <handle_coda_error@@Base>
   14f78:	ldr	r3, [fp, #-544]	; 0xfffffde0
   14f7c:	cmp	r3, #0
   14f80:	beq	14f9c <print_debug_data@@Base+0x160>
   14f84:	ldr	r3, [fp, #-544]	; 0xfffffde0
   14f88:	cmp	r3, #1
   14f8c:	beq	14f9c <print_debug_data@@Base+0x160>
   14f90:	ldr	r3, [fp, #-544]	; 0xfffffde0
   14f94:	cmp	r3, #2
   14f98:	bne	14fa4 <print_debug_data@@Base+0x168>
   14f9c:	mov	r2, #1
   14fa0:	b	14fa8 <print_debug_data@@Base+0x16c>
   14fa4:	mov	r2, #0
   14fa8:	ldr	r3, [pc, #176]	; 15060 <print_debug_data@@Base+0x224>
   14fac:	add	r3, pc, r3
   14fb0:	str	r2, [r3]
   14fb4:	ldr	r2, [fp, #-20]	; 0xffffffec
   14fb8:	sub	r3, fp, #540	; 0x21c
   14fbc:	mov	r1, r2
   14fc0:	mov	r0, r3
   14fc4:	bl	1235c <coda_cursor_set_product@plt>
   14fc8:	mov	r3, r0
   14fcc:	cmp	r3, #0
   14fd0:	beq	14fd8 <print_debug_data@@Base+0x19c>
   14fd4:	bl	1bdc8 <handle_coda_error@@Base>
   14fd8:	ldr	r3, [pc, #132]	; 15064 <print_debug_data@@Base+0x228>
   14fdc:	ldr	r3, [r4, r3]
   14fe0:	ldr	r3, [r3]
   14fe4:	cmp	r3, #0
   14fe8:	beq	1501c <print_debug_data@@Base+0x1e0>
   14fec:	ldr	r3, [pc, #112]	; 15064 <print_debug_data@@Base+0x228>
   14ff0:	ldr	r3, [r4, r3]
   14ff4:	ldr	r2, [r3]
   14ff8:	sub	r3, fp, #540	; 0x21c
   14ffc:	mov	r1, r2
   15000:	mov	r0, r3
   15004:	bl	1253c <coda_cursor_goto@plt>
   15008:	str	r0, [fp, #-16]
   1500c:	ldr	r3, [fp, #-16]
   15010:	cmp	r3, #0
   15014:	beq	1501c <print_debug_data@@Base+0x1e0>
   15018:	bl	1bdc8 <handle_coda_error@@Base>
   1501c:	mov	r0, #0
   15020:	bl	121dc <coda_set_option_perform_boundary_checks@plt>
   15024:	sub	r3, fp, #540	; 0x21c
   15028:	mov	r1, #0
   1502c:	mov	r0, r3
   15030:	bl	13c98 <export_data_element_to_ascii@@Base+0x4bc>
   15034:	ldr	r3, [fp, #-20]	; 0xffffffec
   15038:	mov	r0, r3
   1503c:	bl	12518 <coda_close@plt>
   15040:	nop	{0}
   15044:	sub	sp, fp, #8
   15048:	ldr	r4, [sp]
   1504c:	ldr	fp, [sp, #4]
   15050:	add	sp, sp, #8
   15054:	pop	{pc}		; (ldr pc, [sp], #4)
   15058:	muleq	r1, r8, r1
   1505c:			; <UNDEFINED> instruction: 0x000001b4
   15060:	andeq	ip, r1, r8, asr #4
   15064:	ldrdeq	r0, [r0], -r8

00015068 <dim_info_init@@Base>:
   15068:	push	{fp}		; (str fp, [sp, #-4]!)
   1506c:	add	fp, sp, #0
   15070:	ldr	r3, [pc, #64]	; 150b8 <dim_info_init@@Base+0x50>
   15074:	add	r3, pc, r3
   15078:	ldr	r2, [pc, #60]	; 150bc <dim_info_init@@Base+0x54>
   1507c:	ldr	r2, [r3, r2]
   15080:	mov	r1, #0
   15084:	str	r1, [r2]
   15088:	ldr	r2, [pc, #44]	; 150bc <dim_info_init@@Base+0x54>
   1508c:	ldr	r2, [r3, r2]
   15090:	mov	r1, #0
   15094:	str	r1, [r2, #68]	; 0x44
   15098:	ldr	r2, [pc, #28]	; 150bc <dim_info_init@@Base+0x54>
   1509c:	ldr	r3, [r3, r2]
   150a0:	mvn	r2, #0
   150a4:	str	r2, [r3, #104]	; 0x68
   150a8:	nop	{0}
   150ac:	add	sp, fp, #0
   150b0:	pop	{fp}		; (ldr fp, [sp], #4)
   150b4:	bx	lr
   150b8:	andeq	fp, r1, r4, lsl #31
   150bc:	andeq	r0, r0, r4, ror #3

000150c0 <dim_info_done@@Base>:
   150c0:	push	{fp}		; (str fp, [sp, #-4]!)
   150c4:	add	fp, sp, #0
   150c8:	nop	{0}
   150cc:	add	sp, fp, #0
   150d0:	pop	{fp}		; (ldr fp, [sp], #4)
   150d4:	bx	lr

000150d8 <print_all_distinct_dims@@Base>:
   150d8:	str	r4, [sp, #-12]!
   150dc:	str	fp, [sp, #4]
   150e0:	str	lr, [sp, #8]
   150e4:	add	fp, sp, #8
   150e8:	sub	sp, sp, #28
   150ec:	str	r0, [fp, #-24]	; 0xffffffe8
   150f0:	ldr	r4, [pc, #960]	; 154b8 <print_all_distinct_dims@@Base+0x3e0>
   150f4:	add	r4, pc, r4
   150f8:	ldr	r3, [pc, #956]	; 154bc <print_all_distinct_dims@@Base+0x3e4>
   150fc:	ldr	r3, [r4, r3]
   15100:	ldr	r3, [r3]
   15104:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15108:	cmp	r2, r3
   1510c:	blt	15130 <print_all_distinct_dims@@Base+0x58>
   15110:	ldr	r3, [pc, #936]	; 154c0 <print_all_distinct_dims@@Base+0x3e8>
   15114:	add	r3, pc, r3
   15118:	mov	r2, #50	; 0x32
   1511c:	ldr	r1, [pc, #928]	; 154c4 <print_all_distinct_dims@@Base+0x3ec>
   15120:	add	r1, pc, r1
   15124:	ldr	r0, [pc, #924]	; 154c8 <print_all_distinct_dims@@Base+0x3f0>
   15128:	add	r0, pc, r0
   1512c:	bl	12638 <__assert_fail@plt>
   15130:	ldr	r3, [pc, #900]	; 154bc <print_all_distinct_dims@@Base+0x3e4>
   15134:	ldr	r3, [r4, r3]
   15138:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1513c:	add	r2, r2, #18
   15140:	ldr	r3, [r3, r2, lsl #2]
   15144:	cmp	r3, #0
   15148:	beq	154a0 <print_all_distinct_dims@@Base+0x3c8>
   1514c:	ldr	r3, [pc, #872]	; 154bc <print_all_distinct_dims@@Base+0x3e4>
   15150:	ldr	r2, [r4, r3]
   15154:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15158:	lsl	r3, r3, #2
   1515c:	add	r3, r2, r3
   15160:	ldr	r3, [r3, #4]
   15164:	add	r3, r3, #1
   15168:	lsl	r3, r3, #2
   1516c:	mov	r0, r3
   15170:	bl	123a4 <malloc@plt>
   15174:	mov	r3, r0
   15178:	str	r3, [fp, #-20]	; 0xffffffec
   1517c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15180:	cmp	r3, #0
   15184:	bne	151cc <print_all_distinct_dims@@Base+0xf4>
   15188:	ldr	r3, [pc, #812]	; 154bc <print_all_distinct_dims@@Base+0x3e4>
   1518c:	ldr	r2, [r4, r3]
   15190:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15194:	lsl	r3, r3, #2
   15198:	add	r3, r2, r3
   1519c:	ldr	r3, [r3, #4]
   151a0:	add	r3, r3, #1
   151a4:	lsl	r2, r3, #2
   151a8:	mov	r3, #61	; 0x3d
   151ac:	str	r3, [sp]
   151b0:	ldr	r3, [pc, #788]	; 154cc <print_all_distinct_dims@@Base+0x3f4>
   151b4:	add	r3, pc, r3
   151b8:	ldr	r1, [pc, #784]	; 154d0 <print_all_distinct_dims@@Base+0x3f8>
   151bc:	add	r1, pc, r1
   151c0:	mvn	r0, #0
   151c4:	bl	12224 <coda_set_error@plt>
   151c8:	bl	1bdc8 <handle_coda_error@@Base>
   151cc:	ldr	r3, [pc, #744]	; 154bc <print_all_distinct_dims@@Base+0x3e4>
   151d0:	ldr	r2, [r4, r3]
   151d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   151d8:	lsl	r3, r3, #2
   151dc:	add	r3, r2, r3
   151e0:	ldr	r3, [r3, #4]
   151e4:	add	r3, r3, #1
   151e8:	lsl	r3, r3, #2
   151ec:	mov	r2, r3
   151f0:	mov	r1, #0
   151f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   151f8:	bl	12488 <memset@plt>
   151fc:	mov	r3, #0
   15200:	str	r3, [fp, #-16]
   15204:	b	1528c <print_all_distinct_dims@@Base+0x1b4>
   15208:	ldr	r3, [pc, #684]	; 154bc <print_all_distinct_dims@@Base+0x3e4>
   1520c:	ldr	r2, [r4, r3]
   15210:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15214:	add	r3, r3, #26
   15218:	lsl	r3, r3, #2
   1521c:	add	r3, r2, r3
   15220:	ldr	r2, [r3, #4]
   15224:	ldr	r3, [fp, #-16]
   15228:	lsl	r3, r3, #2
   1522c:	add	r3, r2, r3
   15230:	ldr	r3, [r3]
   15234:	cmp	r3, #0
   15238:	blt	15280 <print_all_distinct_dims@@Base+0x1a8>
   1523c:	ldr	r3, [pc, #632]	; 154bc <print_all_distinct_dims@@Base+0x3e4>
   15240:	ldr	r2, [r4, r3]
   15244:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15248:	add	r3, r3, #26
   1524c:	lsl	r3, r3, #2
   15250:	add	r3, r2, r3
   15254:	ldr	r2, [r3, #4]
   15258:	ldr	r3, [fp, #-16]
   1525c:	lsl	r3, r3, #2
   15260:	add	r3, r2, r3
   15264:	ldr	r3, [r3]
   15268:	lsl	r3, r3, #2
   1526c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15270:	add	r3, r2, r3
   15274:	ldr	r2, [r3]
   15278:	add	r2, r2, #1
   1527c:	str	r2, [r3]
   15280:	ldr	r3, [fp, #-16]
   15284:	add	r3, r3, #1
   15288:	str	r3, [fp, #-16]
   1528c:	ldr	r3, [fp, #-16]
   15290:	mov	r0, r3
   15294:	asr	r1, r0, #31
   15298:	ldr	r3, [pc, #540]	; 154bc <print_all_distinct_dims@@Base+0x3e4>
   1529c:	ldr	r2, [r4, r3]
   152a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   152a4:	add	r3, r3, #34	; 0x22
   152a8:	lsl	r3, r3, #2
   152ac:	add	r3, r2, r3
   152b0:	ldr	r3, [r3, #4]
   152b4:	sub	r3, r3, #1
   152b8:	ldr	r2, [pc, #508]	; 154bc <print_all_distinct_dims@@Base+0x3e4>
   152bc:	ldr	r2, [r4, r2]
   152c0:	add	r3, r3, #30
   152c4:	lsl	r3, r3, #3
   152c8:	add	r3, r2, r3
   152cc:	ldrd	r2, [r3]
   152d0:	cmp	r0, r2
   152d4:	sbcs	r3, r1, r3
   152d8:	blt	15208 <print_all_distinct_dims@@Base+0x130>
   152dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   152e0:	add	r3, r3, #1
   152e4:	mov	r1, r3
   152e8:	ldr	r3, [pc, #484]	; 154d4 <print_all_distinct_dims@@Base+0x3fc>
   152ec:	add	r3, pc, r3
   152f0:	mov	r0, r3
   152f4:	bl	12200 <printf@plt>
   152f8:	ldr	r3, [pc, #444]	; 154bc <print_all_distinct_dims@@Base+0x3e4>
   152fc:	ldr	r2, [r4, r3]
   15300:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15304:	add	r3, r3, #8
   15308:	lsl	r3, r3, #2
   1530c:	add	r3, r2, r3
   15310:	ldr	r3, [r3, #4]
   15314:	str	r3, [fp, #-16]
   15318:	b	15358 <print_all_distinct_dims@@Base+0x280>
   1531c:	ldr	r3, [fp, #-16]
   15320:	lsl	r3, r3, #2
   15324:	ldr	r2, [fp, #-20]	; 0xffffffec
   15328:	add	r3, r2, r3
   1532c:	ldr	r3, [r3]
   15330:	cmp	r3, #0
   15334:	ble	1534c <print_all_distinct_dims@@Base+0x274>
   15338:	ldr	r1, [fp, #-16]
   1533c:	ldr	r3, [pc, #404]	; 154d8 <print_all_distinct_dims@@Base+0x400>
   15340:	add	r3, pc, r3
   15344:	mov	r0, r3
   15348:	bl	12200 <printf@plt>
   1534c:	ldr	r3, [fp, #-16]
   15350:	add	r3, r3, #1
   15354:	str	r3, [fp, #-16]
   15358:	ldr	r3, [pc, #348]	; 154bc <print_all_distinct_dims@@Base+0x3e4>
   1535c:	ldr	r2, [r4, r3]
   15360:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15364:	lsl	r3, r3, #2
   15368:	add	r3, r2, r3
   1536c:	ldr	r3, [r3, #4]
   15370:	ldr	r2, [fp, #-16]
   15374:	cmp	r2, r3
   15378:	blt	1531c <print_all_distinct_dims@@Base+0x244>
   1537c:	ldr	r3, [pc, #312]	; 154bc <print_all_distinct_dims@@Base+0x3e4>
   15380:	ldr	r2, [r4, r3]
   15384:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15388:	lsl	r3, r3, #2
   1538c:	add	r3, r2, r3
   15390:	ldr	r3, [r3, #4]
   15394:	mov	r1, r3
   15398:	ldr	r3, [pc, #316]	; 154dc <print_all_distinct_dims@@Base+0x404>
   1539c:	add	r3, pc, r3
   153a0:	mov	r0, r3
   153a4:	bl	12200 <printf@plt>
   153a8:	ldr	r3, [pc, #304]	; 154e0 <print_all_distinct_dims@@Base+0x408>
   153ac:	add	r3, pc, r3
   153b0:	mov	r0, r3
   153b4:	bl	12200 <printf@plt>
   153b8:	ldr	r3, [pc, #252]	; 154bc <print_all_distinct_dims@@Base+0x3e4>
   153bc:	ldr	r2, [r4, r3]
   153c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   153c4:	add	r3, r3, #8
   153c8:	lsl	r3, r3, #2
   153cc:	add	r3, r2, r3
   153d0:	ldr	r3, [r3, #4]
   153d4:	str	r3, [fp, #-16]
   153d8:	b	1542c <print_all_distinct_dims@@Base+0x354>
   153dc:	ldr	r3, [fp, #-16]
   153e0:	lsl	r3, r3, #2
   153e4:	ldr	r2, [fp, #-20]	; 0xffffffec
   153e8:	add	r3, r2, r3
   153ec:	ldr	r3, [r3]
   153f0:	cmp	r3, #0
   153f4:	ble	15420 <print_all_distinct_dims@@Base+0x348>
   153f8:	ldr	r3, [fp, #-16]
   153fc:	lsl	r3, r3, #2
   15400:	ldr	r2, [fp, #-20]	; 0xffffffec
   15404:	add	r3, r2, r3
   15408:	ldr	r3, [r3]
   1540c:	mov	r1, r3
   15410:	ldr	r3, [pc, #204]	; 154e4 <print_all_distinct_dims@@Base+0x40c>
   15414:	add	r3, pc, r3
   15418:	mov	r0, r3
   1541c:	bl	12200 <printf@plt>
   15420:	ldr	r3, [fp, #-16]
   15424:	add	r3, r3, #1
   15428:	str	r3, [fp, #-16]
   1542c:	ldr	r3, [pc, #136]	; 154bc <print_all_distinct_dims@@Base+0x3e4>
   15430:	ldr	r2, [r4, r3]
   15434:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15438:	lsl	r3, r3, #2
   1543c:	add	r3, r2, r3
   15440:	ldr	r3, [r3, #4]
   15444:	ldr	r2, [fp, #-16]
   15448:	cmp	r2, r3
   1544c:	blt	153dc <print_all_distinct_dims@@Base+0x304>
   15450:	ldr	r3, [pc, #100]	; 154bc <print_all_distinct_dims@@Base+0x3e4>
   15454:	ldr	r2, [r4, r3]
   15458:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1545c:	lsl	r3, r3, #2
   15460:	add	r3, r2, r3
   15464:	ldr	r3, [r3, #4]
   15468:	lsl	r3, r3, #2
   1546c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15470:	add	r3, r2, r3
   15474:	ldr	r3, [r3]
   15478:	mov	r1, r3
   1547c:	ldr	r3, [pc, #100]	; 154e8 <print_all_distinct_dims@@Base+0x410>
   15480:	add	r3, pc, r3
   15484:	mov	r0, r3
   15488:	bl	12200 <printf@plt>
   1548c:	mov	r0, #10
   15490:	bl	12494 <putchar@plt>
   15494:	ldr	r0, [fp, #-20]	; 0xffffffec
   15498:	bl	1226c <free@plt>
   1549c:	b	154a4 <print_all_distinct_dims@@Base+0x3cc>
   154a0:	nop	{0}
   154a4:	sub	sp, fp, #8
   154a8:	ldr	r4, [sp]
   154ac:	ldr	fp, [sp, #4]
   154b0:	add	sp, sp, #8
   154b4:	pop	{pc}		; (ldr pc, [sp], #4)
   154b8:	andeq	fp, r1, r4, lsl #30
   154bc:	andeq	r0, r0, r4, ror #3
   154c0:	andeq	r9, r0, ip, asr ip
   154c4:	andeq	r9, r0, ip, lsr #21
   154c8:	andeq	r9, r0, r4, lsl #22
   154cc:	andeq	r9, r0, r8, lsl sl
   154d0:	andeq	r9, r0, ip, lsl #21
   154d4:	muleq	r0, r4, r9
   154d8:	andeq	r9, r0, ip, asr #18
   154dc:	strdeq	r9, [r0], -r4
   154e0:	andeq	r9, r0, r8, ror #17
   154e4:	andeq	r9, r0, r8, ror r8
   154e8:	andeq	r9, r0, r0, lsl r8
   154ec:	str	r4, [sp, #-12]!
   154f0:	str	fp, [sp, #4]
   154f4:	str	lr, [sp, #8]
   154f8:	add	fp, sp, #8
   154fc:	sub	sp, sp, #124	; 0x7c
   15500:	str	r0, [fp, #-120]	; 0xffffff88
   15504:	str	r1, [fp, #-124]	; 0xffffff84
   15508:	str	r2, [fp, #-128]	; 0xffffff80
   1550c:	ldr	r4, [pc, #2448]	; 15ea4 <print_all_distinct_dims@@Base+0xdcc>
   15510:	add	r4, pc, r4
   15514:	sub	r3, fp, #60	; 0x3c
   15518:	mov	r1, r3
   1551c:	ldr	r3, [pc, #2436]	; 15ea8 <print_all_distinct_dims@@Base+0xdd0>
   15520:	ldr	r3, [r4, r3]
   15524:	add	r0, r3, #144	; 0x90
   15528:	bl	122fc <coda_cursor_get_type_class@plt>
   1552c:	mov	r3, r0
   15530:	cmp	r3, #0
   15534:	beq	1553c <print_all_distinct_dims@@Base+0x464>
   15538:	bl	1bdc8 <handle_coda_error@@Base>
   1553c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15540:	cmp	r3, #5
   15544:	addls	pc, pc, r3, lsl #2
   15548:	b	15e60 <print_all_distinct_dims@@Base+0xd88>
   1554c:	b	15a44 <print_all_distinct_dims@@Base+0x96c>
   15550:	b	15564 <print_all_distinct_dims@@Base+0x48c>
   15554:	b	15e60 <print_all_distinct_dims@@Base+0xd88>
   15558:	b	15e60 <print_all_distinct_dims@@Base+0xd88>
   1555c:	b	15c38 <print_all_distinct_dims@@Base+0xb60>
   15560:	b	15c38 <print_all_distinct_dims@@Base+0xb60>
   15564:	ldr	r2, [fp, #-124]	; 0xffffff84
   15568:	mov	r3, r2
   1556c:	lsl	r3, r3, #2
   15570:	add	r3, r3, r2
   15574:	lsl	r3, r3, #4
   15578:	add	r3, r3, #800	; 0x320
   1557c:	ldr	r2, [pc, #2340]	; 15ea8 <print_all_distinct_dims@@Base+0xdd0>
   15580:	ldr	r2, [r4, r2]
   15584:	add	r3, r3, r2
   15588:	str	r3, [fp, #-36]	; 0xffffffdc
   1558c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15590:	ldr	r3, [r3]
   15594:	str	r3, [fp, #-40]	; 0xffffffd8
   15598:	ldr	r3, [pc, #2312]	; 15ea8 <print_all_distinct_dims@@Base+0xdd0>
   1559c:	ldr	r3, [r4, r3]
   155a0:	ldr	r3, [r3, #3360]	; 0xd20
   155a4:	ldr	r2, [fp, #-124]	; 0xffffff84
   155a8:	cmp	r2, r3
   155ac:	bne	15824 <print_all_distinct_dims@@Base+0x74c>
   155b0:	sub	r2, fp, #112	; 0x70
   155b4:	sub	r3, fp, #64	; 0x40
   155b8:	mov	r1, r3
   155bc:	ldr	r3, [pc, #2276]	; 15ea8 <print_all_distinct_dims@@Base+0xdd0>
   155c0:	ldr	r3, [r4, r3]
   155c4:	add	r0, r3, #144	; 0x90
   155c8:	bl	12500 <coda_cursor_get_array_dim@plt>
   155cc:	mov	r3, r0
   155d0:	cmp	r3, #0
   155d4:	beq	155dc <print_all_distinct_dims@@Base+0x504>
   155d8:	bl	1bdc8 <handle_coda_error@@Base>
   155dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   155e0:	ldr	r2, [r3, #4]
   155e4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   155e8:	cmp	r2, r3
   155ec:	beq	15610 <print_all_distinct_dims@@Base+0x538>
   155f0:	ldr	r3, [pc, #2228]	; 15eac <print_all_distinct_dims@@Base+0xdd4>
   155f4:	add	r3, pc, r3
   155f8:	mov	r2, #125	; 0x7d
   155fc:	ldr	r1, [pc, #2220]	; 15eb0 <print_all_distinct_dims@@Base+0xdd8>
   15600:	add	r1, pc, r1
   15604:	ldr	r0, [pc, #2216]	; 15eb4 <print_all_distinct_dims@@Base+0xddc>
   15608:	add	r0, pc, r0
   1560c:	bl	12638 <__assert_fail@plt>
   15610:	mov	r3, #0
   15614:	str	r3, [fp, #-16]
   15618:	b	1580c <print_all_distinct_dims@@Base+0x734>
   1561c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15620:	ldr	r2, [fp, #-16]
   15624:	add	r2, r2, #2
   15628:	ldr	r3, [r3, r2, lsl #2]
   1562c:	cmn	r3, #1
   15630:	bne	15800 <print_all_distinct_dims@@Base+0x728>
   15634:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15638:	ldr	r3, [fp, #-16]
   1563c:	add	r3, r2, r3
   15640:	ldr	r2, [pc, #2160]	; 15eb8 <print_all_distinct_dims@@Base+0xde0>
   15644:	ldr	r2, [r4, r2]
   15648:	add	r3, r3, #26
   1564c:	lsl	r3, r3, #2
   15650:	add	r3, r2, r3
   15654:	ldr	r2, [r3, #4]
   15658:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1565c:	ldr	r3, [r3, #44]	; 0x2c
   15660:	lsl	r3, r3, #2
   15664:	add	r2, r2, r3
   15668:	ldr	r3, [fp, #-16]
   1566c:	lsl	r3, r3, #2
   15670:	sub	r1, fp, #12
   15674:	add	r3, r1, r3
   15678:	ldr	r3, [r3, #-100]	; 0xffffff9c
   1567c:	str	r3, [r2]
   15680:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15684:	ldr	r3, [fp, #-16]
   15688:	add	r3, r2, r3
   1568c:	ldr	r2, [pc, #2084]	; 15eb8 <print_all_distinct_dims@@Base+0xde0>
   15690:	ldr	r2, [r4, r2]
   15694:	lsl	r3, r3, #2
   15698:	add	r3, r2, r3
   1569c:	ldr	r3, [r3, #4]
   156a0:	cmn	r3, #1
   156a4:	bne	15718 <print_all_distinct_dims@@Base+0x640>
   156a8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   156ac:	ldr	r3, [fp, #-16]
   156b0:	add	r0, r2, r3
   156b4:	ldr	r3, [fp, #-16]
   156b8:	lsl	r3, r3, #2
   156bc:	sub	r2, fp, #12
   156c0:	add	r3, r2, r3
   156c4:	ldr	r2, [r3, #-100]	; 0xffffff9c
   156c8:	ldr	r3, [pc, #2024]	; 15eb8 <print_all_distinct_dims@@Base+0xde0>
   156cc:	ldr	r1, [r4, r3]
   156d0:	lsl	r3, r0, #2
   156d4:	add	r3, r1, r3
   156d8:	str	r2, [r3, #4]
   156dc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   156e0:	ldr	r3, [fp, #-16]
   156e4:	add	r0, r2, r3
   156e8:	ldr	r3, [fp, #-16]
   156ec:	lsl	r3, r3, #2
   156f0:	sub	r2, fp, #12
   156f4:	add	r3, r2, r3
   156f8:	ldr	r2, [r3, #-100]	; 0xffffff9c
   156fc:	ldr	r3, [pc, #1972]	; 15eb8 <print_all_distinct_dims@@Base+0xde0>
   15700:	ldr	r1, [r4, r3]
   15704:	add	r3, r0, #8
   15708:	lsl	r3, r3, #2
   1570c:	add	r3, r1, r3
   15710:	str	r2, [r3, #4]
   15714:	b	15800 <print_all_distinct_dims@@Base+0x728>
   15718:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1571c:	ldr	r3, [fp, #-16]
   15720:	add	r3, r2, r3
   15724:	ldr	r2, [pc, #1932]	; 15eb8 <print_all_distinct_dims@@Base+0xde0>
   15728:	ldr	r2, [r4, r2]
   1572c:	lsl	r3, r3, #2
   15730:	add	r3, r2, r3
   15734:	ldr	r2, [r3, #4]
   15738:	ldr	r3, [fp, #-16]
   1573c:	lsl	r3, r3, #2
   15740:	sub	r1, fp, #12
   15744:	add	r3, r1, r3
   15748:	ldr	r3, [r3, #-100]	; 0xffffff9c
   1574c:	cmp	r2, r3
   15750:	bge	15788 <print_all_distinct_dims@@Base+0x6b0>
   15754:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15758:	ldr	r3, [fp, #-16]
   1575c:	add	r0, r2, r3
   15760:	ldr	r3, [fp, #-16]
   15764:	lsl	r3, r3, #2
   15768:	sub	r2, fp, #12
   1576c:	add	r3, r2, r3
   15770:	ldr	r2, [r3, #-100]	; 0xffffff9c
   15774:	ldr	r3, [pc, #1852]	; 15eb8 <print_all_distinct_dims@@Base+0xde0>
   15778:	ldr	r1, [r4, r3]
   1577c:	lsl	r3, r0, #2
   15780:	add	r3, r1, r3
   15784:	str	r2, [r3, #4]
   15788:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1578c:	ldr	r3, [fp, #-16]
   15790:	add	r3, r2, r3
   15794:	ldr	r2, [pc, #1820]	; 15eb8 <print_all_distinct_dims@@Base+0xde0>
   15798:	ldr	r2, [r4, r2]
   1579c:	add	r3, r3, #8
   157a0:	lsl	r3, r3, #2
   157a4:	add	r3, r2, r3
   157a8:	ldr	r2, [r3, #4]
   157ac:	ldr	r3, [fp, #-16]
   157b0:	lsl	r3, r3, #2
   157b4:	sub	r1, fp, #12
   157b8:	add	r3, r1, r3
   157bc:	ldr	r3, [r3, #-100]	; 0xffffff9c
   157c0:	cmp	r2, r3
   157c4:	ble	15800 <print_all_distinct_dims@@Base+0x728>
   157c8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   157cc:	ldr	r3, [fp, #-16]
   157d0:	add	r0, r2, r3
   157d4:	ldr	r3, [fp, #-16]
   157d8:	lsl	r3, r3, #2
   157dc:	sub	r2, fp, #12
   157e0:	add	r3, r2, r3
   157e4:	ldr	r2, [r3, #-100]	; 0xffffff9c
   157e8:	ldr	r3, [pc, #1736]	; 15eb8 <print_all_distinct_dims@@Base+0xde0>
   157ec:	ldr	r1, [r4, r3]
   157f0:	add	r3, r0, #8
   157f4:	lsl	r3, r3, #2
   157f8:	add	r3, r1, r3
   157fc:	str	r2, [r3, #4]
   15800:	ldr	r3, [fp, #-16]
   15804:	add	r3, r3, #1
   15808:	str	r3, [fp, #-16]
   1580c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15810:	ldr	r3, [r3, #4]
   15814:	ldr	r2, [fp, #-16]
   15818:	cmp	r2, r3
   1581c:	blt	1561c <print_all_distinct_dims@@Base+0x544>
   15820:	b	15e80 <print_all_distinct_dims@@Base+0xda8>
   15824:	ldr	r3, [fp, #-124]	; 0xffffff84
   15828:	cmp	r3, #0
   1582c:	bne	1583c <print_all_distinct_dims@@Base+0x764>
   15830:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15834:	mov	r2, #0
   15838:	str	r2, [r3, #44]	; 0x2c
   1583c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15840:	ldr	r3, [r3, #44]	; 0x2c
   15844:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15848:	ldr	r1, [r2, #40]	; 0x28
   1584c:	ldr	r2, [fp, #-124]	; 0xffffff84
   15850:	add	r2, r2, #1
   15854:	mul	r1, r1, r3
   15858:	ldr	r3, [pc, #1608]	; 15ea8 <print_all_distinct_dims@@Base+0xdd0>
   1585c:	ldr	r0, [r4, r3]
   15860:	mov	r3, r2
   15864:	lsl	r3, r3, #2
   15868:	add	r3, r3, r2
   1586c:	lsl	r3, r3, #4
   15870:	add	r3, r0, r3
   15874:	add	r3, r3, #844	; 0x34c
   15878:	str	r1, [r3]
   1587c:	mov	r3, #1
   15880:	str	r3, [fp, #-20]	; 0xffffffec
   15884:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15888:	str	r3, [fp, #-24]	; 0xffffffe8
   1588c:	b	1591c <print_all_distinct_dims@@Base+0x844>
   15890:	ldr	r3, [pc, #1568]	; 15eb8 <print_all_distinct_dims@@Base+0xde0>
   15894:	ldr	r3, [r4, r3]
   15898:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1589c:	add	r2, r2, #18
   158a0:	ldr	r3, [r3, r2, lsl #2]
   158a4:	cmp	r3, #0
   158a8:	beq	158ec <print_all_distinct_dims@@Base+0x814>
   158ac:	ldr	r3, [pc, #1540]	; 15eb8 <print_all_distinct_dims@@Base+0xde0>
   158b0:	ldr	r2, [r4, r3]
   158b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   158b8:	add	r3, r3, #26
   158bc:	lsl	r3, r3, #2
   158c0:	add	r3, r2, r3
   158c4:	ldr	r2, [r3, #4]
   158c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   158cc:	ldr	r3, [r3, #44]	; 0x2c
   158d0:	lsl	r3, r3, #2
   158d4:	add	r3, r2, r3
   158d8:	ldr	r2, [r3]
   158dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   158e0:	mul	r3, r2, r3
   158e4:	str	r3, [fp, #-20]	; 0xffffffec
   158e8:	b	15910 <print_all_distinct_dims@@Base+0x838>
   158ec:	ldr	r3, [pc, #1476]	; 15eb8 <print_all_distinct_dims@@Base+0xde0>
   158f0:	ldr	r2, [r4, r3]
   158f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   158f8:	lsl	r3, r3, #2
   158fc:	add	r3, r2, r3
   15900:	ldr	r2, [r3, #4]
   15904:	ldr	r3, [fp, #-20]	; 0xffffffec
   15908:	mul	r3, r2, r3
   1590c:	str	r3, [fp, #-20]	; 0xffffffec
   15910:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15914:	add	r3, r3, #1
   15918:	str	r3, [fp, #-24]	; 0xffffffe8
   1591c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15920:	ldr	r2, [r3, #4]
   15924:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15928:	add	r3, r2, r3
   1592c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15930:	cmp	r2, r3
   15934:	blt	15890 <print_all_distinct_dims@@Base+0x7b8>
   15938:	ldr	r3, [fp, #-20]	; 0xffffffec
   1593c:	cmp	r3, #0
   15940:	ble	15e80 <print_all_distinct_dims@@Base+0xda8>
   15944:	ldr	r3, [pc, #1372]	; 15ea8 <print_all_distinct_dims@@Base+0xdd0>
   15948:	ldr	r3, [r4, r3]
   1594c:	add	r0, r3, #144	; 0x90
   15950:	bl	12344 <coda_cursor_goto_first_array_element@plt>
   15954:	mov	r3, r0
   15958:	cmp	r3, #0
   1595c:	beq	15964 <print_all_distinct_dims@@Base+0x88c>
   15960:	bl	1bdc8 <handle_coda_error@@Base>
   15964:	mov	r3, #0
   15968:	str	r3, [fp, #-28]	; 0xffffffe4
   1596c:	b	15a20 <print_all_distinct_dims@@Base+0x948>
   15970:	ldr	r3, [fp, #-120]	; 0xffffff88
   15974:	add	r0, r3, #1
   15978:	ldr	r3, [fp, #-124]	; 0xffffff84
   1597c:	add	r3, r3, #1
   15980:	ldr	r2, [fp, #-128]	; 0xffffff80
   15984:	mov	r1, r3
   15988:	bl	154ec <print_all_distinct_dims@@Base+0x414>
   1598c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15990:	sub	r3, r3, #1
   15994:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15998:	cmp	r2, r3
   1599c:	bge	15a14 <print_all_distinct_dims@@Base+0x93c>
   159a0:	ldr	r3, [pc, #1280]	; 15ea8 <print_all_distinct_dims@@Base+0xdd0>
   159a4:	ldr	r3, [r4, r3]
   159a8:	add	r0, r3, #144	; 0x90
   159ac:	bl	12440 <coda_cursor_goto_next_array_element@plt>
   159b0:	mov	r3, r0
   159b4:	cmp	r3, #0
   159b8:	beq	159c0 <print_all_distinct_dims@@Base+0x8e8>
   159bc:	bl	1bdc8 <handle_coda_error@@Base>
   159c0:	ldr	r3, [fp, #-124]	; 0xffffff84
   159c4:	add	r2, r3, #1
   159c8:	ldr	r3, [pc, #1240]	; 15ea8 <print_all_distinct_dims@@Base+0xdd0>
   159cc:	ldr	r1, [r4, r3]
   159d0:	mov	r3, r2
   159d4:	lsl	r3, r3, #2
   159d8:	add	r3, r3, r2
   159dc:	lsl	r3, r3, #4
   159e0:	add	r3, r1, r3
   159e4:	add	r3, r3, #844	; 0x34c
   159e8:	ldr	r3, [r3]
   159ec:	add	r1, r3, #1
   159f0:	ldr	r3, [pc, #1200]	; 15ea8 <print_all_distinct_dims@@Base+0xdd0>
   159f4:	ldr	r0, [r4, r3]
   159f8:	mov	r3, r2
   159fc:	lsl	r3, r3, #2
   15a00:	add	r3, r3, r2
   15a04:	lsl	r3, r3, #4
   15a08:	add	r3, r0, r3
   15a0c:	add	r3, r3, #844	; 0x34c
   15a10:	str	r1, [r3]
   15a14:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15a18:	add	r3, r3, #1
   15a1c:	str	r3, [fp, #-28]	; 0xffffffe4
   15a20:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15a24:	ldr	r3, [fp, #-20]	; 0xffffffec
   15a28:	cmp	r2, r3
   15a2c:	blt	15970 <print_all_distinct_dims@@Base+0x898>
   15a30:	ldr	r3, [pc, #1136]	; 15ea8 <print_all_distinct_dims@@Base+0xdd0>
   15a34:	ldr	r3, [r4, r3]
   15a38:	add	r0, r3, #144	; 0x90
   15a3c:	bl	123d4 <coda_cursor_goto_parent@plt>
   15a40:	b	15e80 <print_all_distinct_dims@@Base+0xda8>
   15a44:	ldr	r3, [pc, #1116]	; 15ea8 <print_all_distinct_dims@@Base+0xdd0>
   15a48:	ldr	r2, [r4, r3]
   15a4c:	ldr	r3, [fp, #-128]	; 0xffffff80
   15a50:	add	r3, r3, #872	; 0x368
   15a54:	lsl	r3, r3, #2
   15a58:	add	r3, r2, r3
   15a5c:	ldr	r3, [r3, #4]
   15a60:	sub	r2, fp, #68	; 0x44
   15a64:	mov	r1, r3
   15a68:	ldr	r3, [pc, #1080]	; 15ea8 <print_all_distinct_dims@@Base+0xdd0>
   15a6c:	ldr	r3, [r4, r3]
   15a70:	add	r0, r3, #144	; 0x90
   15a74:	bl	1220c <coda_cursor_get_record_field_available_status@plt>
   15a78:	mov	r3, r0
   15a7c:	cmp	r3, #0
   15a80:	beq	15a88 <print_all_distinct_dims@@Base+0x9b0>
   15a84:	bl	1bdc8 <handle_coda_error@@Base>
   15a88:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15a8c:	cmp	r3, #0
   15a90:	beq	15b04 <print_all_distinct_dims@@Base+0xa2c>
   15a94:	ldr	r3, [pc, #1036]	; 15ea8 <print_all_distinct_dims@@Base+0xdd0>
   15a98:	ldr	r2, [r4, r3]
   15a9c:	ldr	r3, [fp, #-128]	; 0xffffff80
   15aa0:	add	r3, r3, #872	; 0x368
   15aa4:	lsl	r3, r3, #2
   15aa8:	add	r3, r2, r3
   15aac:	ldr	r3, [r3, #4]
   15ab0:	mov	r1, r3
   15ab4:	ldr	r3, [pc, #1004]	; 15ea8 <print_all_distinct_dims@@Base+0xdd0>
   15ab8:	ldr	r3, [r4, r3]
   15abc:	add	r0, r3, #144	; 0x90
   15ac0:	bl	12374 <coda_cursor_goto_record_field_by_index@plt>
   15ac4:	mov	r3, r0
   15ac8:	cmp	r3, #0
   15acc:	beq	15ad4 <print_all_distinct_dims@@Base+0x9fc>
   15ad0:	bl	1bdc8 <handle_coda_error@@Base>
   15ad4:	ldr	r3, [fp, #-120]	; 0xffffff88
   15ad8:	add	r0, r3, #1
   15adc:	ldr	r3, [fp, #-128]	; 0xffffff80
   15ae0:	add	r3, r3, #1
   15ae4:	mov	r2, r3
   15ae8:	ldr	r1, [fp, #-124]	; 0xffffff84
   15aec:	bl	154ec <print_all_distinct_dims@@Base+0x414>
   15af0:	ldr	r3, [pc, #944]	; 15ea8 <print_all_distinct_dims@@Base+0xdd0>
   15af4:	ldr	r3, [r4, r3]
   15af8:	add	r0, r3, #144	; 0x90
   15afc:	bl	123d4 <coda_cursor_goto_parent@plt>
   15b00:	b	15e8c <print_all_distinct_dims@@Base+0xdb4>
   15b04:	ldr	r3, [pc, #924]	; 15ea8 <print_all_distinct_dims@@Base+0xdd0>
   15b08:	ldr	r3, [r4, r3]
   15b0c:	ldr	r2, [r3, #3360]	; 0xd20
   15b10:	mov	r3, r2
   15b14:	lsl	r3, r3, #2
   15b18:	add	r3, r3, r2
   15b1c:	lsl	r3, r3, #4
   15b20:	add	r3, r3, #800	; 0x320
   15b24:	ldr	r2, [pc, #892]	; 15ea8 <print_all_distinct_dims@@Base+0xdd0>
   15b28:	ldr	r2, [r4, r2]
   15b2c:	add	r3, r3, r2
   15b30:	str	r3, [fp, #-44]	; 0xffffffd4
   15b34:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15b38:	ldr	r3, [r3]
   15b3c:	str	r3, [fp, #-48]	; 0xffffffd0
   15b40:	mov	r3, #0
   15b44:	str	r3, [fp, #-32]	; 0xffffffe0
   15b48:	b	15c20 <print_all_distinct_dims@@Base+0xb48>
   15b4c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15b50:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15b54:	add	r2, r2, #2
   15b58:	ldr	r3, [r3, r2, lsl #2]
   15b5c:	cmn	r3, #1
   15b60:	bne	15c14 <print_all_distinct_dims@@Base+0xb3c>
   15b64:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15b68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15b6c:	add	r3, r2, r3
   15b70:	ldr	r2, [pc, #832]	; 15eb8 <print_all_distinct_dims@@Base+0xde0>
   15b74:	ldr	r2, [r4, r2]
   15b78:	add	r3, r3, #26
   15b7c:	lsl	r3, r3, #2
   15b80:	add	r3, r2, r3
   15b84:	ldr	r2, [r3, #4]
   15b88:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15b8c:	ldr	r3, [r3, #44]	; 0x2c
   15b90:	lsl	r3, r3, #2
   15b94:	add	r3, r2, r3
   15b98:	mov	r2, #0
   15b9c:	str	r2, [r3]
   15ba0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15ba4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15ba8:	add	r3, r2, r3
   15bac:	ldr	r2, [pc, #772]	; 15eb8 <print_all_distinct_dims@@Base+0xde0>
   15bb0:	ldr	r2, [r4, r2]
   15bb4:	lsl	r3, r3, #2
   15bb8:	add	r3, r2, r3
   15bbc:	ldr	r3, [r3, #4]
   15bc0:	cmn	r3, #1
   15bc4:	bne	15bec <print_all_distinct_dims@@Base+0xb14>
   15bc8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15bcc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15bd0:	add	r3, r2, r3
   15bd4:	ldr	r2, [pc, #732]	; 15eb8 <print_all_distinct_dims@@Base+0xde0>
   15bd8:	ldr	r2, [r4, r2]
   15bdc:	lsl	r3, r3, #2
   15be0:	add	r3, r2, r3
   15be4:	mov	r2, #0
   15be8:	str	r2, [r3, #4]
   15bec:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15bf0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15bf4:	add	r3, r2, r3
   15bf8:	ldr	r2, [pc, #696]	; 15eb8 <print_all_distinct_dims@@Base+0xde0>
   15bfc:	ldr	r2, [r4, r2]
   15c00:	add	r3, r3, #8
   15c04:	lsl	r3, r3, #2
   15c08:	add	r3, r2, r3
   15c0c:	mov	r2, #0
   15c10:	str	r2, [r3, #4]
   15c14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15c18:	add	r3, r3, #1
   15c1c:	str	r3, [fp, #-32]	; 0xffffffe0
   15c20:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15c24:	ldr	r3, [r3, #4]
   15c28:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15c2c:	cmp	r2, r3
   15c30:	blt	15b4c <print_all_distinct_dims@@Base+0xa74>
   15c34:	b	15e8c <print_all_distinct_dims@@Base+0xdb4>
   15c38:	ldr	r3, [pc, #616]	; 15ea8 <print_all_distinct_dims@@Base+0xdd0>
   15c3c:	ldr	r3, [r4, r3]
   15c40:	ldr	r3, [r3, #3360]	; 0xd20
   15c44:	ldr	r2, [fp, #-124]	; 0xffffff84
   15c48:	cmp	r2, r3
   15c4c:	beq	15c70 <print_all_distinct_dims@@Base+0xb98>
   15c50:	ldr	r3, [pc, #612]	; 15ebc <print_all_distinct_dims@@Base+0xde4>
   15c54:	add	r3, pc, r3
   15c58:	mov	r2, #252	; 0xfc
   15c5c:	ldr	r1, [pc, #604]	; 15ec0 <print_all_distinct_dims@@Base+0xde8>
   15c60:	add	r1, pc, r1
   15c64:	ldr	r0, [pc, #600]	; 15ec4 <print_all_distinct_dims@@Base+0xdec>
   15c68:	add	r0, pc, r0
   15c6c:	bl	12638 <__assert_fail@plt>
   15c70:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15c74:	cmp	r3, #4
   15c78:	bne	15cb8 <print_all_distinct_dims@@Base+0xbe0>
   15c7c:	sub	r3, fp, #80	; 0x50
   15c80:	mov	r1, r3
   15c84:	ldr	r3, [pc, #540]	; 15ea8 <print_all_distinct_dims@@Base+0xdd0>
   15c88:	ldr	r3, [r4, r3]
   15c8c:	add	r0, r3, #144	; 0x90
   15c90:	bl	12404 <coda_cursor_get_string_length@plt>
   15c94:	mov	r3, r0
   15c98:	cmp	r3, #0
   15c9c:	beq	15ca4 <print_all_distinct_dims@@Base+0xbcc>
   15ca0:	bl	1bdc8 <handle_coda_error@@Base>
   15ca4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15ca8:	mov	r2, r3
   15cac:	asr	r3, r2, #31
   15cb0:	strd	r2, [fp, #-76]	; 0xffffffb4
   15cb4:	b	15ce0 <print_all_distinct_dims@@Base+0xc08>
   15cb8:	sub	r3, fp, #76	; 0x4c
   15cbc:	mov	r1, r3
   15cc0:	ldr	r3, [pc, #480]	; 15ea8 <print_all_distinct_dims@@Base+0xdd0>
   15cc4:	ldr	r3, [r4, r3]
   15cc8:	add	r0, r3, #144	; 0x90
   15ccc:	bl	121a0 <coda_cursor_get_byte_size@plt>
   15cd0:	mov	r3, r0
   15cd4:	cmp	r3, #0
   15cd8:	beq	15ce0 <print_all_distinct_dims@@Base+0xc08>
   15cdc:	bl	1bdc8 <handle_coda_error@@Base>
   15ce0:	ldr	r2, [fp, #-124]	; 0xffffff84
   15ce4:	mov	r3, r2
   15ce8:	lsl	r3, r3, #2
   15cec:	add	r3, r3, r2
   15cf0:	lsl	r3, r3, #4
   15cf4:	add	r3, r3, #800	; 0x320
   15cf8:	ldr	r2, [pc, #424]	; 15ea8 <print_all_distinct_dims@@Base+0xdd0>
   15cfc:	ldr	r2, [r4, r2]
   15d00:	add	r3, r3, r2
   15d04:	str	r3, [fp, #-52]	; 0xffffffcc
   15d08:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15d0c:	ldr	r3, [r3]
   15d10:	str	r3, [fp, #-56]	; 0xffffffc8
   15d14:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   15d18:	ldr	r3, [pc, #408]	; 15eb8 <print_all_distinct_dims@@Base+0xde0>
   15d1c:	ldr	r2, [r4, r3]
   15d20:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15d24:	add	r3, r3, #26
   15d28:	lsl	r3, r3, #2
   15d2c:	add	r3, r2, r3
   15d30:	ldr	r2, [r3, #4]
   15d34:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15d38:	ldr	r3, [r3, #44]	; 0x2c
   15d3c:	lsl	r3, r3, #2
   15d40:	add	r3, r2, r3
   15d44:	mov	r2, r0
   15d48:	str	r2, [r3]
   15d4c:	ldr	r3, [pc, #356]	; 15eb8 <print_all_distinct_dims@@Base+0xde0>
   15d50:	ldr	r2, [r4, r3]
   15d54:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15d58:	lsl	r3, r3, #2
   15d5c:	add	r3, r2, r3
   15d60:	ldr	r3, [r3, #4]
   15d64:	cmn	r3, #1
   15d68:	bne	15db4 <print_all_distinct_dims@@Base+0xcdc>
   15d6c:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   15d70:	mov	r1, r2
   15d74:	ldr	r3, [pc, #316]	; 15eb8 <print_all_distinct_dims@@Base+0xde0>
   15d78:	ldr	r2, [r4, r3]
   15d7c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15d80:	lsl	r3, r3, #2
   15d84:	add	r3, r2, r3
   15d88:	str	r1, [r3, #4]
   15d8c:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   15d90:	mov	r1, r2
   15d94:	ldr	r3, [pc, #284]	; 15eb8 <print_all_distinct_dims@@Base+0xde0>
   15d98:	ldr	r2, [r4, r3]
   15d9c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15da0:	add	r3, r3, #8
   15da4:	lsl	r3, r3, #2
   15da8:	add	r3, r2, r3
   15dac:	str	r1, [r3, #4]
   15db0:	b	15e88 <print_all_distinct_dims@@Base+0xdb0>
   15db4:	ldr	r3, [pc, #252]	; 15eb8 <print_all_distinct_dims@@Base+0xde0>
   15db8:	ldr	r2, [r4, r3]
   15dbc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15dc0:	lsl	r3, r3, #2
   15dc4:	add	r3, r2, r3
   15dc8:	ldr	r3, [r3, #4]
   15dcc:	mov	r0, r3
   15dd0:	asr	r1, r0, #31
   15dd4:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   15dd8:	cmp	r0, r2
   15ddc:	sbcs	r3, r1, r3
   15de0:	bge	15e04 <print_all_distinct_dims@@Base+0xd2c>
   15de4:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   15de8:	mov	r1, r2
   15dec:	ldr	r3, [pc, #196]	; 15eb8 <print_all_distinct_dims@@Base+0xde0>
   15df0:	ldr	r2, [r4, r3]
   15df4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15df8:	lsl	r3, r3, #2
   15dfc:	add	r3, r2, r3
   15e00:	str	r1, [r3, #4]
   15e04:	ldr	r3, [pc, #172]	; 15eb8 <print_all_distinct_dims@@Base+0xde0>
   15e08:	ldr	r2, [r4, r3]
   15e0c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15e10:	add	r3, r3, #8
   15e14:	lsl	r3, r3, #2
   15e18:	add	r3, r2, r3
   15e1c:	ldr	r3, [r3, #4]
   15e20:	mov	r2, r3
   15e24:	asr	r3, r2, #31
   15e28:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   15e2c:	cmp	r0, r2
   15e30:	sbcs	r3, r1, r3
   15e34:	bge	15e88 <print_all_distinct_dims@@Base+0xdb0>
   15e38:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   15e3c:	mov	r1, r2
   15e40:	ldr	r3, [pc, #112]	; 15eb8 <print_all_distinct_dims@@Base+0xde0>
   15e44:	ldr	r2, [r4, r3]
   15e48:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15e4c:	add	r3, r3, #8
   15e50:	lsl	r3, r3, #2
   15e54:	add	r3, r2, r3
   15e58:	str	r1, [r3, #4]
   15e5c:	b	15e88 <print_all_distinct_dims@@Base+0xdb0>
   15e60:	ldr	r3, [pc, #96]	; 15ec8 <print_all_distinct_dims@@Base+0xdf0>
   15e64:	add	r3, pc, r3
   15e68:	movw	r2, #294	; 0x126
   15e6c:	ldr	r1, [pc, #88]	; 15ecc <print_all_distinct_dims@@Base+0xdf4>
   15e70:	add	r1, pc, r1
   15e74:	ldr	r0, [pc, #84]	; 15ed0 <print_all_distinct_dims@@Base+0xdf8>
   15e78:	add	r0, pc, r0
   15e7c:	bl	12638 <__assert_fail@plt>
   15e80:	nop	{0}
   15e84:	b	15e8c <print_all_distinct_dims@@Base+0xdb4>
   15e88:	nop	{0}
   15e8c:	nop	{0}
   15e90:	sub	sp, fp, #8
   15e94:	ldr	r4, [sp]
   15e98:	ldr	fp, [sp, #4]
   15e9c:	add	sp, sp, #8
   15ea0:	pop	{pc}		; (ldr pc, [sp], #4)
   15ea4:	andeq	fp, r1, r8, ror #21
   15ea8:			; <UNDEFINED> instruction: 0x000001b4
   15eac:	muleq	r0, r4, r7
   15eb0:	andeq	r9, r0, ip, asr #11
   15eb4:	muleq	r0, r4, r6
   15eb8:	andeq	r0, r0, r4, ror #3
   15ebc:	andeq	r9, r0, r4, lsr r1
   15ec0:	andeq	r8, r0, ip, ror #30
   15ec4:	andeq	r9, r0, r8, asr r0
   15ec8:	andeq	r8, r0, r4, lsr #30
   15ecc:	andeq	r8, r0, ip, asr sp
   15ed0:	andeq	r8, r0, r0, ror lr

00015ed4 <dim_enter_array@@Base>:
   15ed4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   15ed8:	strd	r6, [sp, #8]
   15edc:	strd	r8, [sp, #16]
   15ee0:	str	fp, [sp, #24]
   15ee4:	str	lr, [sp, #28]
   15ee8:	add	fp, sp, #28
   15eec:	sub	sp, sp, #112	; 0x70
   15ef0:	ldr	r4, [pc, #3916]	; 16e44 <dim_enter_array@@Base+0xf70>
   15ef4:	add	r4, pc, r4
   15ef8:	ldr	r3, [pc, #3912]	; 16e48 <dim_enter_array@@Base+0xf74>
   15efc:	ldr	r3, [r4, r3]
   15f00:	ldr	r2, [r3, #3360]	; 0xd20
   15f04:	mov	r3, r2
   15f08:	lsl	r3, r3, #2
   15f0c:	add	r3, r3, r2
   15f10:	lsl	r3, r3, #4
   15f14:	add	r3, r3, #800	; 0x320
   15f18:	ldr	r2, [pc, #3880]	; 16e48 <dim_enter_array@@Base+0xf74>
   15f1c:	ldr	r2, [r4, r2]
   15f20:	add	r3, r3, r2
   15f24:	str	r3, [fp, #-72]	; 0xffffffb8
   15f28:	ldr	r3, [pc, #3864]	; 16e48 <dim_enter_array@@Base+0xf74>
   15f2c:	ldr	r3, [r4, r3]
   15f30:	ldr	r2, [r3, #136]	; 0x88
   15f34:	ldr	r3, [pc, #3852]	; 16e48 <dim_enter_array@@Base+0xf74>
   15f38:	ldr	r3, [r4, r3]
   15f3c:	add	r2, r2, #2
   15f40:	ldr	r3, [r3, r2, lsl #2]
   15f44:	sub	r2, fp, #80	; 0x50
   15f48:	mov	r1, r2
   15f4c:	mov	r0, r3
   15f50:	bl	12644 <coda_type_get_class@plt>
   15f54:	mov	r3, r0
   15f58:	cmp	r3, #0
   15f5c:	beq	15f64 <dim_enter_array@@Base+0x90>
   15f60:	bl	1bdc8 <handle_coda_error@@Base>
   15f64:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15f68:	sub	r3, r3, #1
   15f6c:	cmp	r3, #5
   15f70:	addls	pc, pc, r3, lsl #2
   15f74:	b	161c8 <dim_enter_array@@Base+0x2f4>
   15f78:	b	15f90 <dim_enter_array@@Base+0xbc>
   15f7c:	b	161c8 <dim_enter_array@@Base+0x2f4>
   15f80:	b	161c8 <dim_enter_array@@Base+0x2f4>
   15f84:	b	160b0 <dim_enter_array@@Base+0x1dc>
   15f88:	b	16108 <dim_enter_array@@Base+0x234>
   15f8c:	b	16028 <dim_enter_array@@Base+0x154>
   15f90:	ldr	r3, [pc, #3760]	; 16e48 <dim_enter_array@@Base+0xf74>
   15f94:	ldr	r3, [r4, r3]
   15f98:	ldr	r2, [r3, #136]	; 0x88
   15f9c:	ldr	r3, [pc, #3748]	; 16e48 <dim_enter_array@@Base+0xf74>
   15fa0:	ldr	r3, [r4, r3]
   15fa4:	add	r2, r2, #2
   15fa8:	ldr	r3, [r3, r2, lsl #2]
   15fac:	sub	r2, fp, #132	; 0x84
   15fb0:	sub	r1, fp, #84	; 0x54
   15fb4:	mov	r0, r3
   15fb8:	bl	12578 <coda_type_get_array_dim@plt>
   15fbc:	mov	r3, r0
   15fc0:	cmp	r3, #0
   15fc4:	beq	15fcc <dim_enter_array@@Base+0xf8>
   15fc8:	bl	1bdc8 <handle_coda_error@@Base>
   15fcc:	ldr	r2, [fp, #-84]	; 0xffffffac
   15fd0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15fd4:	str	r2, [r3, #4]
   15fd8:	mov	r3, #0
   15fdc:	str	r3, [fp, #-56]	; 0xffffffc8
   15fe0:	b	16014 <dim_enter_array@@Base+0x140>
   15fe4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15fe8:	lsl	r3, r3, #2
   15fec:	sub	r2, fp, #28
   15ff0:	add	r3, r2, r3
   15ff4:	ldr	r1, [r3, #-104]	; 0xffffff98
   15ff8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15ffc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16000:	add	r2, r2, #2
   16004:	str	r1, [r3, r2, lsl #2]
   16008:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1600c:	add	r3, r3, #1
   16010:	str	r3, [fp, #-56]	; 0xffffffc8
   16014:	ldr	r3, [fp, #-84]	; 0xffffffac
   16018:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1601c:	cmp	r2, r3
   16020:	blt	15fe4 <dim_enter_array@@Base+0x110>
   16024:	b	161e8 <dim_enter_array@@Base+0x314>
   16028:	ldr	r3, [pc, #3608]	; 16e48 <dim_enter_array@@Base+0xf74>
   1602c:	ldr	r3, [r4, r3]
   16030:	ldr	r2, [r3, #136]	; 0x88
   16034:	ldr	r3, [pc, #3596]	; 16e48 <dim_enter_array@@Base+0xf74>
   16038:	ldr	r3, [r4, r3]
   1603c:	add	r2, r2, #2
   16040:	ldr	r3, [r3, r2, lsl #2]
   16044:	sub	r2, fp, #88	; 0x58
   16048:	mov	r1, r2
   1604c:	mov	r0, r3
   16050:	bl	124ac <coda_type_get_special_type@plt>
   16054:	mov	r3, r0
   16058:	cmp	r3, #0
   1605c:	beq	16064 <dim_enter_array@@Base+0x190>
   16060:	bl	1bdc8 <handle_coda_error@@Base>
   16064:	ldr	r3, [fp, #-88]	; 0xffffffa8
   16068:	cmp	r3, #3
   1606c:	bne	16090 <dim_enter_array@@Base+0x1bc>
   16070:	ldr	r3, [fp, #-72]	; 0xffffffb8
   16074:	mov	r2, #1
   16078:	str	r2, [r3, #4]
   1607c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   16080:	mov	r2, #2
   16084:	str	r2, [r3, #8]
   16088:	nop	{0}
   1608c:	b	161e8 <dim_enter_array@@Base+0x314>
   16090:	ldr	r3, [pc, #3508]	; 16e4c <dim_enter_array@@Base+0xf78>
   16094:	add	r3, pc, r3
   16098:	movw	r2, #349	; 0x15d
   1609c:	ldr	r1, [pc, #3500]	; 16e50 <dim_enter_array@@Base+0xf7c>
   160a0:	add	r1, pc, r1
   160a4:	ldr	r0, [pc, #3496]	; 16e54 <dim_enter_array@@Base+0xf80>
   160a8:	add	r0, pc, r0
   160ac:	bl	12638 <__assert_fail@plt>
   160b0:	ldr	r3, [pc, #3472]	; 16e48 <dim_enter_array@@Base+0xf74>
   160b4:	ldr	r3, [r4, r3]
   160b8:	ldr	r2, [r3, #136]	; 0x88
   160bc:	ldr	r3, [pc, #3460]	; 16e48 <dim_enter_array@@Base+0xf74>
   160c0:	ldr	r3, [r4, r3]
   160c4:	add	r2, r2, #2
   160c8:	ldr	r3, [r3, r2, lsl #2]
   160cc:	sub	r2, fp, #92	; 0x5c
   160d0:	mov	r1, r2
   160d4:	mov	r0, r3
   160d8:	bl	124e8 <coda_type_get_string_length@plt>
   160dc:	mov	r3, r0
   160e0:	cmp	r3, #0
   160e4:	beq	160ec <dim_enter_array@@Base+0x218>
   160e8:	bl	1bdc8 <handle_coda_error@@Base>
   160ec:	ldr	r3, [fp, #-72]	; 0xffffffb8
   160f0:	mov	r2, #1
   160f4:	str	r2, [r3, #4]
   160f8:	ldr	r2, [fp, #-92]	; 0xffffffa4
   160fc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   16100:	str	r2, [r3, #8]
   16104:	b	161e8 <dim_enter_array@@Base+0x314>
   16108:	ldr	r3, [pc, #3384]	; 16e48 <dim_enter_array@@Base+0xf74>
   1610c:	ldr	r3, [r4, r3]
   16110:	ldr	r2, [r3, #136]	; 0x88
   16114:	ldr	r3, [pc, #3372]	; 16e48 <dim_enter_array@@Base+0xf74>
   16118:	ldr	r3, [r4, r3]
   1611c:	add	r2, r2, #2
   16120:	ldr	r3, [r3, r2, lsl #2]
   16124:	sub	r2, fp, #100	; 0x64
   16128:	mov	r1, r2
   1612c:	mov	r0, r3
   16130:	bl	122d8 <coda_type_get_bit_size@plt>
   16134:	mov	r3, r0
   16138:	cmp	r3, #0
   1613c:	beq	16144 <dim_enter_array@@Base+0x270>
   16140:	bl	1bdc8 <handle_coda_error@@Base>
   16144:	ldr	r3, [fp, #-72]	; 0xffffffb8
   16148:	mov	r2, #1
   1614c:	str	r2, [r3, #4]
   16150:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   16154:	cmp	r2, #0
   16158:	sbcs	r3, r3, #0
   1615c:	blt	161b8 <dim_enter_array@@Base+0x2e4>
   16160:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   16164:	mov	r2, #0
   16168:	mov	r3, #0
   1616c:	lsr	r2, r0, #3
   16170:	orr	r2, r2, r1, lsl #29
   16174:	asr	r3, r1, #3
   16178:	mov	ip, r2
   1617c:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   16180:	mov	r0, #7
   16184:	mov	r1, #0
   16188:	and	r8, r2, r0
   1618c:	and	r9, r3, r1
   16190:	orrs	r3, r8, r9
   16194:	beq	161a0 <dim_enter_array@@Base+0x2cc>
   16198:	mov	r3, #1
   1619c:	b	161a4 <dim_enter_array@@Base+0x2d0>
   161a0:	mov	r3, #0
   161a4:	add	r3, r3, ip
   161a8:	mov	r2, r3
   161ac:	ldr	r3, [fp, #-72]	; 0xffffffb8
   161b0:	str	r2, [r3, #8]
   161b4:	b	161e8 <dim_enter_array@@Base+0x314>
   161b8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   161bc:	mvn	r2, #0
   161c0:	str	r2, [r3, #8]
   161c4:	b	161e8 <dim_enter_array@@Base+0x314>
   161c8:	ldr	r3, [pc, #3208]	; 16e58 <dim_enter_array@@Base+0xf84>
   161cc:	add	r3, pc, r3
   161d0:	movw	r2, #386	; 0x182
   161d4:	ldr	r1, [pc, #3200]	; 16e5c <dim_enter_array@@Base+0xf88>
   161d8:	add	r1, pc, r1
   161dc:	ldr	r0, [pc, #3196]	; 16e60 <dim_enter_array@@Base+0xf8c>
   161e0:	add	r0, pc, r0
   161e4:	bl	12638 <__assert_fail@plt>
   161e8:	ldr	r3, [pc, #3188]	; 16e64 <dim_enter_array@@Base+0xf90>
   161ec:	ldr	r3, [r4, r3]
   161f0:	ldr	r3, [r3]
   161f4:	cmp	r3, #0
   161f8:	bne	16224 <dim_enter_array@@Base+0x350>
   161fc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   16200:	mvn	r2, #0
   16204:	str	r2, [r3]
   16208:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1620c:	mov	r2, #0
   16210:	str	r2, [r3, #40]	; 0x28
   16214:	ldr	r3, [fp, #-72]	; 0xffffffb8
   16218:	mov	r2, #0
   1621c:	str	r2, [r3, #44]	; 0x2c
   16220:	b	16e28 <dim_enter_array@@Base+0xf54>
   16224:	ldr	r3, [pc, #3132]	; 16e68 <dim_enter_array@@Base+0xf94>
   16228:	ldr	r3, [r4, r3]
   1622c:	ldr	r3, [r3]
   16230:	str	r3, [fp, #-76]	; 0xffffffb4
   16234:	ldr	r3, [fp, #-72]	; 0xffffffb8
   16238:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1623c:	str	r2, [r3]
   16240:	ldr	r3, [pc, #3104]	; 16e68 <dim_enter_array@@Base+0xf94>
   16244:	ldr	r3, [r4, r3]
   16248:	ldr	r2, [r3]
   1624c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   16250:	ldr	r3, [r3, #4]
   16254:	add	r3, r2, r3
   16258:	cmp	r3, #8
   1625c:	ble	16280 <dim_enter_array@@Base+0x3ac>
   16260:	ldr	r3, [pc, #3076]	; 16e6c <dim_enter_array@@Base+0xf98>
   16264:	add	r3, pc, r3
   16268:	movw	r2, #402	; 0x192
   1626c:	ldr	r1, [pc, #3068]	; 16e70 <dim_enter_array@@Base+0xf9c>
   16270:	add	r1, pc, r1
   16274:	ldr	r0, [pc, #3064]	; 16e74 <dim_enter_array@@Base+0xfa0>
   16278:	add	r0, pc, r0
   1627c:	bl	12638 <__assert_fail@plt>
   16280:	ldr	r3, [pc, #3040]	; 16e68 <dim_enter_array@@Base+0xf94>
   16284:	ldr	r3, [r4, r3]
   16288:	ldr	r2, [r3]
   1628c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   16290:	ldr	r3, [r3, #4]
   16294:	add	r2, r2, r3
   16298:	ldr	r3, [pc, #3016]	; 16e68 <dim_enter_array@@Base+0xf94>
   1629c:	ldr	r3, [r4, r3]
   162a0:	str	r2, [r3]
   162a4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   162a8:	cmp	r3, #0
   162ac:	ble	162fc <dim_enter_array@@Base+0x428>
   162b0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   162b4:	sub	r3, r3, #1
   162b8:	ldr	r2, [pc, #2984]	; 16e68 <dim_enter_array@@Base+0xf94>
   162bc:	ldr	r2, [r4, r2]
   162c0:	add	r3, r3, #30
   162c4:	lsl	r3, r3, #3
   162c8:	add	r3, r2, r3
   162cc:	ldrd	r2, [r3]
   162d0:	strd	r2, [fp, #-36]	; 0xffffffdc
   162d4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   162d8:	sub	r3, r3, #1
   162dc:	ldr	r2, [pc, #2948]	; 16e68 <dim_enter_array@@Base+0xf94>
   162e0:	ldr	r2, [r4, r2]
   162e4:	add	r3, r3, #38	; 0x26
   162e8:	lsl	r3, r3, #3
   162ec:	add	r3, r2, r3
   162f0:	ldrd	r2, [r3]
   162f4:	strd	r2, [fp, #-44]	; 0xffffffd4
   162f8:	b	16314 <dim_enter_array@@Base+0x440>
   162fc:	mov	r2, #1
   16300:	mov	r3, #0
   16304:	strd	r2, [fp, #-36]	; 0xffffffdc
   16308:	mov	r2, #1
   1630c:	mov	r3, #0
   16310:	strd	r2, [fp, #-44]	; 0xffffffd4
   16314:	mov	r3, #0
   16318:	str	r3, [fp, #-48]	; 0xffffffd0
   1631c:	mov	r3, #0
   16320:	str	r3, [fp, #-52]	; 0xffffffcc
   16324:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   16328:	cmp	r2, #1
   1632c:	sbcs	r3, r3, #0
   16330:	blt	163d4 <dim_enter_array@@Base+0x500>
   16334:	mov	r3, #0
   16338:	str	r3, [fp, #-56]	; 0xffffffc8
   1633c:	b	163bc <dim_enter_array@@Base+0x4e8>
   16340:	ldr	r2, [fp, #-76]	; 0xffffffb4
   16344:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16348:	add	r3, r2, r3
   1634c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   16350:	ldr	r1, [fp, #-56]	; 0xffffffc8
   16354:	add	r1, r1, #2
   16358:	ldr	r2, [r2, r1, lsl #2]
   1635c:	ldr	r1, [pc, #2820]	; 16e68 <dim_enter_array@@Base+0xf94>
   16360:	ldr	r1, [r4, r1]
   16364:	lsl	r3, r3, #2
   16368:	add	r3, r1, r3
   1636c:	str	r2, [r3, #4]
   16370:	ldr	r2, [fp, #-76]	; 0xffffffb4
   16374:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16378:	add	r2, r2, r3
   1637c:	ldr	r3, [pc, #2788]	; 16e68 <dim_enter_array@@Base+0xf94>
   16380:	ldr	r3, [r4, r3]
   16384:	add	r2, r2, #18
   16388:	mov	r1, #0
   1638c:	str	r1, [r3, r2, lsl #2]
   16390:	ldr	r3, [fp, #-72]	; 0xffffffb8
   16394:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16398:	add	r2, r2, #2
   1639c:	ldr	r3, [r3, r2, lsl #2]
   163a0:	cmn	r3, #1
   163a4:	bne	163b0 <dim_enter_array@@Base+0x4dc>
   163a8:	mov	r3, #1
   163ac:	str	r3, [fp, #-48]	; 0xffffffd0
   163b0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   163b4:	add	r3, r3, #1
   163b8:	str	r3, [fp, #-56]	; 0xffffffc8
   163bc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   163c0:	ldr	r3, [r3, #4]
   163c4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   163c8:	cmp	r2, r3
   163cc:	blt	16340 <dim_enter_array@@Base+0x46c>
   163d0:	b	16444 <dim_enter_array@@Base+0x570>
   163d4:	mov	r3, #0
   163d8:	str	r3, [fp, #-56]	; 0xffffffc8
   163dc:	b	16430 <dim_enter_array@@Base+0x55c>
   163e0:	ldr	r2, [fp, #-76]	; 0xffffffb4
   163e4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   163e8:	add	r3, r2, r3
   163ec:	ldr	r2, [pc, #2676]	; 16e68 <dim_enter_array@@Base+0xf94>
   163f0:	ldr	r2, [r4, r2]
   163f4:	lsl	r3, r3, #2
   163f8:	add	r3, r2, r3
   163fc:	mov	r2, #0
   16400:	str	r2, [r3, #4]
   16404:	ldr	r2, [fp, #-76]	; 0xffffffb4
   16408:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1640c:	add	r2, r2, r3
   16410:	ldr	r3, [pc, #2640]	; 16e68 <dim_enter_array@@Base+0xf94>
   16414:	ldr	r3, [r4, r3]
   16418:	add	r2, r2, #18
   1641c:	mov	r1, #0
   16420:	str	r1, [r3, r2, lsl #2]
   16424:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16428:	add	r3, r3, #1
   1642c:	str	r3, [fp, #-56]	; 0xffffffc8
   16430:	ldr	r3, [fp, #-72]	; 0xffffffb8
   16434:	ldr	r3, [r3, #4]
   16438:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1643c:	cmp	r2, r3
   16440:	blt	163e0 <dim_enter_array@@Base+0x50c>
   16444:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16448:	cmp	r3, #0
   1644c:	beq	16784 <dim_enter_array@@Base+0x8b0>
   16450:	mov	r3, #0
   16454:	str	r3, [fp, #-56]	; 0xffffffc8
   16458:	b	165fc <dim_enter_array@@Base+0x728>
   1645c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   16460:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16464:	add	r2, r2, #2
   16468:	ldr	r3, [r3, r2, lsl #2]
   1646c:	cmn	r3, #1
   16470:	bne	165a0 <dim_enter_array@@Base+0x6cc>
   16474:	ldr	r2, [fp, #-76]	; 0xffffffb4
   16478:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1647c:	add	r3, r2, r3
   16480:	ldr	r2, [pc, #2528]	; 16e68 <dim_enter_array@@Base+0xf94>
   16484:	ldr	r2, [r4, r2]
   16488:	add	r3, r3, #34	; 0x22
   1648c:	lsl	r3, r3, #2
   16490:	add	r3, r2, r3
   16494:	ldr	r2, [fp, #-76]	; 0xffffffb4
   16498:	str	r2, [r3, #4]
   1649c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   164a0:	lsl	r1, r3, #2
   164a4:	ldr	r2, [fp, #-76]	; 0xffffffb4
   164a8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   164ac:	add	r5, r2, r3
   164b0:	mov	r0, r1
   164b4:	bl	123a4 <malloc@plt>
   164b8:	mov	r3, r0
   164bc:	mov	r1, r3
   164c0:	ldr	r3, [pc, #2464]	; 16e68 <dim_enter_array@@Base+0xf94>
   164c4:	ldr	r2, [r4, r3]
   164c8:	add	r3, r5, #26
   164cc:	lsl	r3, r3, #2
   164d0:	add	r3, r2, r3
   164d4:	str	r1, [r3, #4]
   164d8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   164dc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   164e0:	add	r3, r2, r3
   164e4:	ldr	r2, [pc, #2428]	; 16e68 <dim_enter_array@@Base+0xf94>
   164e8:	ldr	r2, [r4, r2]
   164ec:	add	r3, r3, #26
   164f0:	lsl	r3, r3, #2
   164f4:	add	r3, r2, r3
   164f8:	ldr	r3, [r3, #4]
   164fc:	cmp	r3, #0
   16500:	bne	16530 <dim_enter_array@@Base+0x65c>
   16504:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16508:	lsl	r2, r3, #2
   1650c:	mov	r3, #456	; 0x1c8
   16510:	str	r3, [sp]
   16514:	ldr	r3, [pc, #2396]	; 16e78 <dim_enter_array@@Base+0xfa4>
   16518:	add	r3, pc, r3
   1651c:	ldr	r1, [pc, #2392]	; 16e7c <dim_enter_array@@Base+0xfa8>
   16520:	add	r1, pc, r1
   16524:	mvn	r0, #0
   16528:	bl	12224 <coda_set_error@plt>
   1652c:	bl	1bdc8 <handle_coda_error@@Base>
   16530:	mov	r3, #0
   16534:	str	r3, [fp, #-60]	; 0xffffffc4
   16538:	b	16580 <dim_enter_array@@Base+0x6ac>
   1653c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   16540:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16544:	add	r3, r2, r3
   16548:	ldr	r2, [pc, #2328]	; 16e68 <dim_enter_array@@Base+0xf94>
   1654c:	ldr	r2, [r4, r2]
   16550:	add	r3, r3, #26
   16554:	lsl	r3, r3, #2
   16558:	add	r3, r2, r3
   1655c:	ldr	r2, [r3, #4]
   16560:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16564:	lsl	r3, r3, #2
   16568:	add	r3, r2, r3
   1656c:	mvn	r2, #0
   16570:	str	r2, [r3]
   16574:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16578:	add	r3, r3, #1
   1657c:	str	r3, [fp, #-60]	; 0xffffffc4
   16580:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16584:	mov	r0, r3
   16588:	asr	r1, r0, #31
   1658c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   16590:	cmp	r0, r2
   16594:	sbcs	r3, r1, r3
   16598:	blt	1653c <dim_enter_array@@Base+0x668>
   1659c:	b	165f0 <dim_enter_array@@Base+0x71c>
   165a0:	ldr	r2, [fp, #-76]	; 0xffffffb4
   165a4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   165a8:	add	r3, r2, r3
   165ac:	ldr	r2, [pc, #2228]	; 16e68 <dim_enter_array@@Base+0xf94>
   165b0:	ldr	r2, [r4, r2]
   165b4:	add	r3, r3, #34	; 0x22
   165b8:	lsl	r3, r3, #2
   165bc:	add	r3, r2, r3
   165c0:	mov	r2, #0
   165c4:	str	r2, [r3, #4]
   165c8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   165cc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   165d0:	add	r3, r2, r3
   165d4:	ldr	r2, [pc, #2188]	; 16e68 <dim_enter_array@@Base+0xf94>
   165d8:	ldr	r2, [r4, r2]
   165dc:	add	r3, r3, #26
   165e0:	lsl	r3, r3, #2
   165e4:	add	r3, r2, r3
   165e8:	mov	r2, #0
   165ec:	str	r2, [r3, #4]
   165f0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   165f4:	add	r3, r3, #1
   165f8:	str	r3, [fp, #-56]	; 0xffffffc8
   165fc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   16600:	ldr	r3, [r3, #4]
   16604:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16608:	cmp	r2, r3
   1660c:	blt	1645c <dim_enter_array@@Base+0x588>
   16610:	ldr	r3, [fp, #-72]	; 0xffffffb8
   16614:	mov	r2, #0
   16618:	str	r2, [r3, #44]	; 0x2c
   1661c:	mov	r2, #0
   16620:	mov	r1, #0
   16624:	mov	r0, #0
   16628:	bl	154ec <print_all_distinct_dims@@Base+0x414>
   1662c:	mov	r3, #0
   16630:	str	r3, [fp, #-56]	; 0xffffffc8
   16634:	b	16770 <dim_enter_array@@Base+0x89c>
   16638:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1663c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16640:	add	r2, r2, #2
   16644:	ldr	r3, [r3, r2, lsl #2]
   16648:	cmn	r3, #1
   1664c:	bne	16764 <dim_enter_array@@Base+0x890>
   16650:	ldr	r2, [fp, #-76]	; 0xffffffb4
   16654:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16658:	add	r3, r2, r3
   1665c:	ldr	r2, [pc, #2052]	; 16e68 <dim_enter_array@@Base+0xf94>
   16660:	ldr	r2, [r4, r2]
   16664:	lsl	r3, r3, #2
   16668:	add	r3, r2, r3
   1666c:	ldr	r2, [r3, #4]
   16670:	ldr	r1, [fp, #-76]	; 0xffffffb4
   16674:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16678:	add	r3, r1, r3
   1667c:	ldr	r1, [pc, #2020]	; 16e68 <dim_enter_array@@Base+0xf94>
   16680:	ldr	r1, [r4, r1]
   16684:	add	r3, r3, #8
   16688:	lsl	r3, r3, #2
   1668c:	add	r3, r1, r3
   16690:	ldr	r3, [r3, #4]
   16694:	cmp	r2, r3
   16698:	beq	166c8 <dim_enter_array@@Base+0x7f4>
   1669c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   166a0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   166a4:	add	r2, r2, r3
   166a8:	ldr	r3, [pc, #1976]	; 16e68 <dim_enter_array@@Base+0xf94>
   166ac:	ldr	r3, [r4, r3]
   166b0:	add	r2, r2, #18
   166b4:	mov	r1, #1
   166b8:	str	r1, [r3, r2, lsl #2]
   166bc:	mov	r3, #1
   166c0:	str	r3, [fp, #-52]	; 0xffffffcc
   166c4:	b	16764 <dim_enter_array@@Base+0x890>
   166c8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   166cc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   166d0:	add	r2, r2, r3
   166d4:	ldr	r3, [pc, #1932]	; 16e68 <dim_enter_array@@Base+0xf94>
   166d8:	ldr	r3, [r4, r3]
   166dc:	add	r2, r2, #18
   166e0:	mov	r1, #0
   166e4:	str	r1, [r3, r2, lsl #2]
   166e8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   166ec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   166f0:	add	r3, r2, r3
   166f4:	ldr	r2, [pc, #1900]	; 16e68 <dim_enter_array@@Base+0xf94>
   166f8:	ldr	r2, [r4, r2]
   166fc:	add	r3, r3, #26
   16700:	lsl	r3, r3, #2
   16704:	add	r3, r2, r3
   16708:	ldr	r3, [r3, #4]
   1670c:	mov	r0, r3
   16710:	bl	1226c <free@plt>
   16714:	ldr	r2, [fp, #-76]	; 0xffffffb4
   16718:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1671c:	add	r3, r2, r3
   16720:	ldr	r2, [pc, #1856]	; 16e68 <dim_enter_array@@Base+0xf94>
   16724:	ldr	r2, [r4, r2]
   16728:	add	r3, r3, #26
   1672c:	lsl	r3, r3, #2
   16730:	add	r3, r2, r3
   16734:	mov	r2, #0
   16738:	str	r2, [r3, #4]
   1673c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   16740:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16744:	add	r3, r2, r3
   16748:	ldr	r2, [pc, #1816]	; 16e68 <dim_enter_array@@Base+0xf94>
   1674c:	ldr	r2, [r4, r2]
   16750:	add	r3, r3, #34	; 0x22
   16754:	lsl	r3, r3, #2
   16758:	add	r3, r2, r3
   1675c:	mov	r2, #0
   16760:	str	r2, [r3, #4]
   16764:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16768:	add	r3, r3, #1
   1676c:	str	r3, [fp, #-56]	; 0xffffffc8
   16770:	ldr	r3, [fp, #-72]	; 0xffffffb8
   16774:	ldr	r3, [r3, #4]
   16778:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1677c:	cmp	r2, r3
   16780:	blt	16638 <dim_enter_array@@Base+0x764>
   16784:	ldr	r3, [pc, #1756]	; 16e68 <dim_enter_array@@Base+0xf94>
   16788:	ldr	r3, [r4, r3]
   1678c:	mov	r2, #0
   16790:	str	r2, [r3, #68]	; 0x44
   16794:	ldr	r3, [pc, #1740]	; 16e68 <dim_enter_array@@Base+0xf94>
   16798:	ldr	r3, [r4, r3]
   1679c:	mvn	r2, #0
   167a0:	str	r2, [r3, #104]	; 0x68
   167a4:	mov	r3, #0
   167a8:	str	r3, [fp, #-56]	; 0xffffffc8
   167ac:	b	167f8 <dim_enter_array@@Base+0x924>
   167b0:	ldr	r3, [pc, #1712]	; 16e68 <dim_enter_array@@Base+0xf94>
   167b4:	ldr	r3, [r4, r3]
   167b8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   167bc:	add	r2, r2, #18
   167c0:	ldr	r3, [r3, r2, lsl #2]
   167c4:	cmp	r3, #0
   167c8:	beq	167ec <dim_enter_array@@Base+0x918>
   167cc:	ldr	r3, [pc, #1684]	; 16e68 <dim_enter_array@@Base+0xf94>
   167d0:	ldr	r3, [r4, r3]
   167d4:	mov	r2, #1
   167d8:	str	r2, [r3, #68]	; 0x44
   167dc:	ldr	r3, [pc, #1668]	; 16e68 <dim_enter_array@@Base+0xf94>
   167e0:	ldr	r3, [r4, r3]
   167e4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   167e8:	str	r2, [r3, #104]	; 0x68
   167ec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   167f0:	add	r3, r3, #1
   167f4:	str	r3, [fp, #-56]	; 0xffffffc8
   167f8:	ldr	r3, [pc, #1640]	; 16e68 <dim_enter_array@@Base+0xf94>
   167fc:	ldr	r3, [r4, r3]
   16800:	ldr	r3, [r3]
   16804:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16808:	cmp	r2, r3
   1680c:	blt	167b0 <dim_enter_array@@Base+0x8dc>
   16810:	ldr	r3, [fp, #-72]	; 0xffffffb8
   16814:	mov	r2, #1
   16818:	str	r2, [r3, #40]	; 0x28
   1681c:	mov	r3, #0
   16820:	str	r3, [fp, #-56]	; 0xffffffc8
   16824:	b	16964 <dim_enter_array@@Base+0xa90>
   16828:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1682c:	ldr	r2, [r3, #40]	; 0x28
   16830:	ldr	r1, [fp, #-76]	; 0xffffffb4
   16834:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16838:	add	r3, r1, r3
   1683c:	ldr	r1, [pc, #1572]	; 16e68 <dim_enter_array@@Base+0xf94>
   16840:	ldr	r1, [r4, r1]
   16844:	lsl	r3, r3, #2
   16848:	add	r3, r1, r3
   1684c:	ldr	r3, [r3, #4]
   16850:	mul	r2, r3, r2
   16854:	ldr	r3, [fp, #-72]	; 0xffffffb8
   16858:	str	r2, [r3, #40]	; 0x28
   1685c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16860:	cmp	r3, #0
   16864:	bne	168cc <dim_enter_array@@Base+0x9f8>
   16868:	ldr	r3, [pc, #1528]	; 16e68 <dim_enter_array@@Base+0xf94>
   1686c:	ldr	r2, [r4, r3]
   16870:	ldr	r3, [fp, #-76]	; 0xffffffb4
   16874:	lsl	r3, r3, #2
   16878:	add	r3, r2, r3
   1687c:	ldr	r3, [r3, #4]
   16880:	mov	r2, r3
   16884:	asr	r3, r2, #31
   16888:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1688c:	mul	r0, r3, r1
   16890:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16894:	mul	r1, r2, r1
   16898:	add	r1, r0, r1
   1689c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   168a0:	umull	r2, r3, r0, r2
   168a4:	add	r1, r1, r3
   168a8:	mov	r3, r1
   168ac:	ldr	r1, [pc, #1460]	; 16e68 <dim_enter_array@@Base+0xf94>
   168b0:	ldr	r0, [r4, r1]
   168b4:	ldr	r1, [fp, #-76]	; 0xffffffb4
   168b8:	add	r1, r1, #30
   168bc:	lsl	r1, r1, #3
   168c0:	add	r1, r0, r1
   168c4:	strd	r2, [r1]
   168c8:	b	16958 <dim_enter_array@@Base+0xa84>
   168cc:	ldr	r2, [fp, #-76]	; 0xffffffb4
   168d0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   168d4:	add	r3, r2, r3
   168d8:	sub	r3, r3, #1
   168dc:	ldr	r2, [pc, #1412]	; 16e68 <dim_enter_array@@Base+0xf94>
   168e0:	ldr	r2, [r4, r2]
   168e4:	add	r3, r3, #30
   168e8:	lsl	r3, r3, #3
   168ec:	add	r3, r2, r3
   168f0:	ldrd	r0, [r3]
   168f4:	ldr	r2, [fp, #-76]	; 0xffffffb4
   168f8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   168fc:	add	r3, r2, r3
   16900:	ldr	r2, [pc, #1376]	; 16e68 <dim_enter_array@@Base+0xf94>
   16904:	ldr	r2, [r4, r2]
   16908:	lsl	r3, r3, #2
   1690c:	add	r3, r2, r3
   16910:	ldr	r3, [r3, #4]
   16914:	mov	r2, r3
   16918:	asr	r3, r2, #31
   1691c:	ldr	lr, [fp, #-76]	; 0xffffffb4
   16920:	ldr	ip, [fp, #-56]	; 0xffffffc8
   16924:	add	ip, lr, ip
   16928:	mul	r5, r2, r1
   1692c:	mul	lr, r0, r3
   16930:	add	lr, r5, lr
   16934:	umull	r2, r3, r0, r2
   16938:	add	r1, lr, r3
   1693c:	mov	r3, r1
   16940:	ldr	r1, [pc, #1312]	; 16e68 <dim_enter_array@@Base+0xf94>
   16944:	ldr	r0, [r4, r1]
   16948:	add	r1, ip, #30
   1694c:	lsl	r1, r1, #3
   16950:	add	r1, r0, r1
   16954:	strd	r2, [r1]
   16958:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1695c:	add	r3, r3, #1
   16960:	str	r3, [fp, #-56]	; 0xffffffc8
   16964:	ldr	r3, [fp, #-72]	; 0xffffffb8
   16968:	ldr	r3, [r3, #4]
   1696c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16970:	cmp	r2, r3
   16974:	blt	16828 <dim_enter_array@@Base+0x954>
   16978:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1697c:	cmp	r3, #0
   16980:	beq	16b38 <dim_enter_array@@Base+0xc64>
   16984:	mov	r3, #0
   16988:	str	r3, [fp, #-56]	; 0xffffffc8
   1698c:	b	169c8 <dim_enter_array@@Base+0xaf4>
   16990:	ldr	r2, [fp, #-76]	; 0xffffffb4
   16994:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16998:	add	r3, r2, r3
   1699c:	ldr	r2, [pc, #1220]	; 16e68 <dim_enter_array@@Base+0xf94>
   169a0:	ldr	r2, [r4, r2]
   169a4:	add	r3, r3, #38	; 0x26
   169a8:	lsl	r3, r3, #3
   169ac:	add	r1, r2, r3
   169b0:	mov	r2, #0
   169b4:	mov	r3, #0
   169b8:	strd	r2, [r1]
   169bc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   169c0:	add	r3, r3, #1
   169c4:	str	r3, [fp, #-56]	; 0xffffffc8
   169c8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   169cc:	ldr	r3, [r3, #4]
   169d0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   169d4:	cmp	r2, r3
   169d8:	blt	16990 <dim_enter_array@@Base+0xabc>
   169dc:	mov	r3, #0
   169e0:	str	r3, [fp, #-64]	; 0xffffffc0
   169e4:	b	16b18 <dim_enter_array@@Base+0xc44>
   169e8:	mov	r3, #1
   169ec:	str	r3, [fp, #-68]	; 0xffffffbc
   169f0:	mov	r3, #0
   169f4:	str	r3, [fp, #-56]	; 0xffffffc8
   169f8:	b	16af8 <dim_enter_array@@Base+0xc24>
   169fc:	ldr	r2, [fp, #-76]	; 0xffffffb4
   16a00:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16a04:	add	r2, r2, r3
   16a08:	ldr	r3, [pc, #1112]	; 16e68 <dim_enter_array@@Base+0xf94>
   16a0c:	ldr	r3, [r4, r3]
   16a10:	add	r2, r2, #18
   16a14:	ldr	r3, [r3, r2, lsl #2]
   16a18:	cmp	r3, #0
   16a1c:	beq	16a64 <dim_enter_array@@Base+0xb90>
   16a20:	ldr	r2, [fp, #-76]	; 0xffffffb4
   16a24:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16a28:	add	r3, r2, r3
   16a2c:	ldr	r2, [pc, #1076]	; 16e68 <dim_enter_array@@Base+0xf94>
   16a30:	ldr	r2, [r4, r2]
   16a34:	add	r3, r3, #26
   16a38:	lsl	r3, r3, #2
   16a3c:	add	r3, r2, r3
   16a40:	ldr	r2, [r3, #4]
   16a44:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16a48:	lsl	r3, r3, #2
   16a4c:	add	r3, r2, r3
   16a50:	ldr	r2, [r3]
   16a54:	ldr	r3, [fp, #-68]	; 0xffffffbc
   16a58:	mul	r3, r2, r3
   16a5c:	str	r3, [fp, #-68]	; 0xffffffbc
   16a60:	b	16a90 <dim_enter_array@@Base+0xbbc>
   16a64:	ldr	r2, [fp, #-76]	; 0xffffffb4
   16a68:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16a6c:	add	r3, r2, r3
   16a70:	ldr	r2, [pc, #1008]	; 16e68 <dim_enter_array@@Base+0xf94>
   16a74:	ldr	r2, [r4, r2]
   16a78:	lsl	r3, r3, #2
   16a7c:	add	r3, r2, r3
   16a80:	ldr	r2, [r3, #4]
   16a84:	ldr	r3, [fp, #-68]	; 0xffffffbc
   16a88:	mul	r3, r2, r3
   16a8c:	str	r3, [fp, #-68]	; 0xffffffbc
   16a90:	ldr	r2, [fp, #-76]	; 0xffffffb4
   16a94:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16a98:	add	r3, r2, r3
   16a9c:	ldr	r2, [pc, #964]	; 16e68 <dim_enter_array@@Base+0xf94>
   16aa0:	ldr	r2, [r4, r2]
   16aa4:	add	r3, r3, #38	; 0x26
   16aa8:	lsl	r3, r3, #3
   16aac:	add	r3, r2, r3
   16ab0:	ldrd	r0, [r3]
   16ab4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   16ab8:	mov	r2, r3
   16abc:	asr	r3, r2, #31
   16ac0:	ldr	lr, [fp, #-76]	; 0xffffffb4
   16ac4:	ldr	ip, [fp, #-56]	; 0xffffffc8
   16ac8:	add	ip, lr, ip
   16acc:	adds	r6, r0, r2
   16ad0:	adc	r7, r1, r3
   16ad4:	ldr	r3, [pc, #908]	; 16e68 <dim_enter_array@@Base+0xf94>
   16ad8:	ldr	r2, [r4, r3]
   16adc:	add	r3, ip, #38	; 0x26
   16ae0:	lsl	r3, r3, #3
   16ae4:	add	r3, r2, r3
   16ae8:	strd	r6, [r3]
   16aec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16af0:	add	r3, r3, #1
   16af4:	str	r3, [fp, #-56]	; 0xffffffc8
   16af8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   16afc:	ldr	r3, [r3, #4]
   16b00:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16b04:	cmp	r2, r3
   16b08:	blt	169fc <dim_enter_array@@Base+0xb28>
   16b0c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16b10:	add	r3, r3, #1
   16b14:	str	r3, [fp, #-64]	; 0xffffffc0
   16b18:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16b1c:	mov	r0, r3
   16b20:	asr	r1, r0, #31
   16b24:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   16b28:	cmp	r0, r2
   16b2c:	sbcs	r3, r1, r3
   16b30:	blt	169e8 <dim_enter_array@@Base+0xb14>
   16b34:	b	16c50 <dim_enter_array@@Base+0xd7c>
   16b38:	ldr	r3, [pc, #808]	; 16e68 <dim_enter_array@@Base+0xf94>
   16b3c:	ldr	r2, [r4, r3]
   16b40:	ldr	r3, [fp, #-76]	; 0xffffffb4
   16b44:	lsl	r3, r3, #2
   16b48:	add	r3, r2, r3
   16b4c:	ldr	r3, [r3, #4]
   16b50:	mov	r2, r3
   16b54:	asr	r3, r2, #31
   16b58:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16b5c:	mul	r0, r3, r1
   16b60:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16b64:	mul	r1, r2, r1
   16b68:	add	r1, r0, r1
   16b6c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16b70:	umull	r2, r3, r0, r2
   16b74:	add	r1, r1, r3
   16b78:	mov	r3, r1
   16b7c:	ldr	r1, [pc, #740]	; 16e68 <dim_enter_array@@Base+0xf94>
   16b80:	ldr	r0, [r4, r1]
   16b84:	ldr	r1, [fp, #-76]	; 0xffffffb4
   16b88:	add	r1, r1, #38	; 0x26
   16b8c:	lsl	r1, r1, #3
   16b90:	add	r1, r0, r1
   16b94:	strd	r2, [r1]
   16b98:	mov	r3, #1
   16b9c:	str	r3, [fp, #-56]	; 0xffffffc8
   16ba0:	b	16c3c <dim_enter_array@@Base+0xd68>
   16ba4:	ldr	r2, [fp, #-76]	; 0xffffffb4
   16ba8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16bac:	add	r3, r2, r3
   16bb0:	sub	r3, r3, #1
   16bb4:	ldr	r2, [pc, #684]	; 16e68 <dim_enter_array@@Base+0xf94>
   16bb8:	ldr	r2, [r4, r2]
   16bbc:	add	r3, r3, #38	; 0x26
   16bc0:	lsl	r3, r3, #3
   16bc4:	add	r3, r2, r3
   16bc8:	ldrd	r0, [r3]
   16bcc:	ldr	r2, [fp, #-76]	; 0xffffffb4
   16bd0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16bd4:	add	r3, r2, r3
   16bd8:	ldr	r2, [pc, #648]	; 16e68 <dim_enter_array@@Base+0xf94>
   16bdc:	ldr	r2, [r4, r2]
   16be0:	lsl	r3, r3, #2
   16be4:	add	r3, r2, r3
   16be8:	ldr	r3, [r3, #4]
   16bec:	mov	r2, r3
   16bf0:	asr	r3, r2, #31
   16bf4:	ldr	lr, [fp, #-76]	; 0xffffffb4
   16bf8:	ldr	ip, [fp, #-56]	; 0xffffffc8
   16bfc:	add	ip, lr, ip
   16c00:	mul	r5, r2, r1
   16c04:	mul	lr, r0, r3
   16c08:	add	lr, r5, lr
   16c0c:	umull	r2, r3, r0, r2
   16c10:	add	r1, lr, r3
   16c14:	mov	r3, r1
   16c18:	ldr	r1, [pc, #584]	; 16e68 <dim_enter_array@@Base+0xf94>
   16c1c:	ldr	r0, [r4, r1]
   16c20:	add	r1, ip, #38	; 0x26
   16c24:	lsl	r1, r1, #3
   16c28:	add	r1, r0, r1
   16c2c:	strd	r2, [r1]
   16c30:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16c34:	add	r3, r3, #1
   16c38:	str	r3, [fp, #-56]	; 0xffffffc8
   16c3c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   16c40:	ldr	r3, [r3, #4]
   16c44:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16c48:	cmp	r2, r3
   16c4c:	blt	16ba4 <dim_enter_array@@Base+0xcd0>
   16c50:	ldr	r3, [fp, #-72]	; 0xffffffb8
   16c54:	ldr	r2, [r3, #4]
   16c58:	ldr	r3, [fp, #-76]	; 0xffffffb4
   16c5c:	add	r3, r2, r3
   16c60:	sub	r3, r3, #1
   16c64:	ldr	r2, [pc, #508]	; 16e68 <dim_enter_array@@Base+0xf94>
   16c68:	ldr	r2, [r4, r2]
   16c6c:	add	r3, r3, #38	; 0x26
   16c70:	lsl	r3, r3, #3
   16c74:	add	r3, r2, r3
   16c78:	ldrd	r2, [r3]
   16c7c:	cmp	r2, #1
   16c80:	sbcs	r3, r3, #0
   16c84:	blt	16e28 <dim_enter_array@@Base+0xf54>
   16c88:	ldr	r3, [pc, #472]	; 16e68 <dim_enter_array@@Base+0xf94>
   16c8c:	ldr	r3, [r4, r3]
   16c90:	ldr	r3, [r3]
   16c94:	sub	r3, r3, #1
   16c98:	ldr	r2, [pc, #456]	; 16e68 <dim_enter_array@@Base+0xf94>
   16c9c:	ldr	r2, [r4, r2]
   16ca0:	lsl	r3, r3, #2
   16ca4:	add	r3, r2, r3
   16ca8:	ldr	r3, [r3, #4]
   16cac:	ldr	r2, [pc, #436]	; 16e68 <dim_enter_array@@Base+0xf94>
   16cb0:	ldr	r2, [r4, r2]
   16cb4:	ldr	r2, [r2]
   16cb8:	sub	r1, r2, #1
   16cbc:	mov	r2, r3
   16cc0:	asr	r3, r2, #31
   16cc4:	ldr	r0, [pc, #412]	; 16e68 <dim_enter_array@@Base+0xf94>
   16cc8:	ldr	r0, [r4, r0]
   16ccc:	add	r1, r1, #22
   16cd0:	lsl	r1, r1, #3
   16cd4:	add	r1, r0, r1
   16cd8:	strd	r2, [r1]
   16cdc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   16ce0:	ldr	r3, [r3, #4]
   16ce4:	sub	r3, r3, #2
   16ce8:	str	r3, [fp, #-56]	; 0xffffffc8
   16cec:	b	16d88 <dim_enter_array@@Base+0xeb4>
   16cf0:	ldr	r2, [fp, #-76]	; 0xffffffb4
   16cf4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16cf8:	add	r3, r2, r3
   16cfc:	ldr	r2, [pc, #356]	; 16e68 <dim_enter_array@@Base+0xf94>
   16d00:	ldr	r2, [r4, r2]
   16d04:	lsl	r3, r3, #2
   16d08:	add	r3, r2, r3
   16d0c:	ldr	r3, [r3, #4]
   16d10:	mov	r0, r3
   16d14:	asr	r1, r0, #31
   16d18:	ldr	r2, [fp, #-76]	; 0xffffffb4
   16d1c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16d20:	add	r3, r2, r3
   16d24:	add	r3, r3, #1
   16d28:	ldr	r2, [pc, #312]	; 16e68 <dim_enter_array@@Base+0xf94>
   16d2c:	ldr	r2, [r4, r2]
   16d30:	add	r3, r3, #22
   16d34:	lsl	r3, r3, #3
   16d38:	add	r3, r2, r3
   16d3c:	ldrd	r2, [r3]
   16d40:	ldr	lr, [fp, #-76]	; 0xffffffb4
   16d44:	ldr	ip, [fp, #-56]	; 0xffffffc8
   16d48:	add	ip, lr, ip
   16d4c:	mul	r5, r2, r1
   16d50:	mul	lr, r0, r3
   16d54:	add	lr, r5, lr
   16d58:	umull	r2, r3, r0, r2
   16d5c:	add	r1, lr, r3
   16d60:	mov	r3, r1
   16d64:	ldr	r1, [pc, #252]	; 16e68 <dim_enter_array@@Base+0xf94>
   16d68:	ldr	r0, [r4, r1]
   16d6c:	add	r1, ip, #22
   16d70:	lsl	r1, r1, #3
   16d74:	add	r1, r0, r1
   16d78:	strd	r2, [r1]
   16d7c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16d80:	sub	r3, r3, #1
   16d84:	str	r3, [fp, #-56]	; 0xffffffc8
   16d88:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16d8c:	cmp	r3, #0
   16d90:	bge	16cf0 <dim_enter_array@@Base+0xe1c>
   16d94:	ldr	r3, [fp, #-76]	; 0xffffffb4
   16d98:	sub	r3, r3, #1
   16d9c:	str	r3, [fp, #-56]	; 0xffffffc8
   16da0:	b	16e1c <dim_enter_array@@Base+0xf48>
   16da4:	ldr	r3, [pc, #188]	; 16e68 <dim_enter_array@@Base+0xf94>
   16da8:	ldr	r2, [r4, r3]
   16dac:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16db0:	add	r3, r3, #22
   16db4:	lsl	r3, r3, #3
   16db8:	add	r3, r2, r3
   16dbc:	ldrd	r0, [r3]
   16dc0:	ldr	r3, [pc, #160]	; 16e68 <dim_enter_array@@Base+0xf94>
   16dc4:	ldr	r2, [r4, r3]
   16dc8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   16dcc:	add	r3, r3, #22
   16dd0:	lsl	r3, r3, #3
   16dd4:	add	r3, r2, r3
   16dd8:	ldrd	r2, [r3]
   16ddc:	mul	lr, r2, r1
   16de0:	mul	ip, r0, r3
   16de4:	add	ip, lr, ip
   16de8:	umull	r2, r3, r0, r2
   16dec:	add	r1, ip, r3
   16df0:	mov	r3, r1
   16df4:	ldr	r1, [pc, #108]	; 16e68 <dim_enter_array@@Base+0xf94>
   16df8:	ldr	r0, [r4, r1]
   16dfc:	ldr	r1, [fp, #-56]	; 0xffffffc8
   16e00:	add	r1, r1, #22
   16e04:	lsl	r1, r1, #3
   16e08:	add	r1, r0, r1
   16e0c:	strd	r2, [r1]
   16e10:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16e14:	sub	r3, r3, #1
   16e18:	str	r3, [fp, #-56]	; 0xffffffc8
   16e1c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16e20:	cmp	r3, #0
   16e24:	bge	16da4 <dim_enter_array@@Base+0xed0>
   16e28:	sub	sp, fp, #28
   16e2c:	ldrd	r4, [sp]
   16e30:	ldrd	r6, [sp, #8]
   16e34:	ldrd	r8, [sp, #16]
   16e38:	ldr	fp, [sp, #24]
   16e3c:	add	sp, sp, #28
   16e40:	pop	{pc}		; (ldr pc, [sp], #4)
   16e44:	andeq	fp, r1, r4, lsl #2
   16e48:			; <UNDEFINED> instruction: 0x000001b4
   16e4c:	andeq	r8, r0, ip, lsl #26
   16e50:	andeq	r8, r0, ip, lsr #22
   16e54:	andeq	r8, r0, r0, asr #24
   16e58:	ldrdeq	r8, [r0], -r4
   16e5c:	strdeq	r8, [r0], -r4
   16e60:	andeq	r8, r0, r8, lsl #22
   16e64:			; <UNDEFINED> instruction: 0x000001b0
   16e68:	andeq	r0, r0, r4, ror #3
   16e6c:	andeq	r8, r0, ip, lsr fp
   16e70:	andeq	r8, r0, ip, asr r9
   16e74:	andeq	r8, r0, r4, ror sl
   16e78:			; <UNDEFINED> instruction: 0x000086b4
   16e7c:	andeq	r8, r0, r8, lsr #14

00016e80 <dim_leave_array@@Base>:
   16e80:	str	r4, [sp, #-12]!
   16e84:	str	fp, [sp, #4]
   16e88:	str	lr, [sp, #8]
   16e8c:	add	fp, sp, #8
   16e90:	sub	sp, sp, #20
   16e94:	ldr	r4, [pc, #628]	; 17110 <dim_leave_array@@Base+0x290>
   16e98:	add	r4, pc, r4
   16e9c:	ldr	r3, [pc, #624]	; 17114 <dim_leave_array@@Base+0x294>
   16ea0:	ldr	r3, [r4, r3]
   16ea4:	ldr	r3, [r3, #3360]	; 0xd20
   16ea8:	cmp	r3, #0
   16eac:	bge	16ed0 <dim_leave_array@@Base+0x50>
   16eb0:	ldr	r3, [pc, #608]	; 17118 <dim_leave_array@@Base+0x298>
   16eb4:	add	r3, pc, r3
   16eb8:	movw	r2, #579	; 0x243
   16ebc:	ldr	r1, [pc, #600]	; 1711c <dim_leave_array@@Base+0x29c>
   16ec0:	add	r1, pc, r1
   16ec4:	ldr	r0, [pc, #596]	; 17120 <dim_leave_array@@Base+0x2a0>
   16ec8:	add	r0, pc, r0
   16ecc:	bl	12638 <__assert_fail@plt>
   16ed0:	ldr	r3, [pc, #572]	; 17114 <dim_leave_array@@Base+0x294>
   16ed4:	ldr	r3, [r4, r3]
   16ed8:	ldr	r2, [r3, #3360]	; 0xd20
   16edc:	mov	r3, r2
   16ee0:	lsl	r3, r3, #2
   16ee4:	add	r3, r3, r2
   16ee8:	lsl	r3, r3, #4
   16eec:	add	r3, r3, #800	; 0x320
   16ef0:	ldr	r2, [pc, #540]	; 17114 <dim_leave_array@@Base+0x294>
   16ef4:	ldr	r2, [r4, r2]
   16ef8:	add	r3, r3, r2
   16efc:	str	r3, [fp, #-20]	; 0xffffffec
   16f00:	ldr	r3, [fp, #-20]	; 0xffffffec
   16f04:	ldr	r3, [r3]
   16f08:	str	r3, [fp, #-24]	; 0xffffffe8
   16f0c:	ldr	r3, [pc, #528]	; 17124 <dim_leave_array@@Base+0x2a4>
   16f10:	ldr	r3, [r4, r3]
   16f14:	ldr	r2, [r3]
   16f18:	ldr	r3, [fp, #-20]	; 0xffffffec
   16f1c:	ldr	r3, [r3, #4]
   16f20:	sub	r2, r2, r3
   16f24:	ldr	r3, [pc, #504]	; 17124 <dim_leave_array@@Base+0x2a4>
   16f28:	ldr	r3, [r4, r3]
   16f2c:	str	r2, [r3]
   16f30:	mov	r3, #0
   16f34:	str	r3, [fp, #-16]
   16f38:	b	16f98 <dim_leave_array@@Base+0x118>
   16f3c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16f40:	ldr	r3, [fp, #-16]
   16f44:	add	r2, r2, r3
   16f48:	ldr	r3, [pc, #468]	; 17124 <dim_leave_array@@Base+0x2a4>
   16f4c:	ldr	r3, [r4, r3]
   16f50:	add	r2, r2, #18
   16f54:	ldr	r3, [r3, r2, lsl #2]
   16f58:	cmp	r3, #0
   16f5c:	beq	16f8c <dim_leave_array@@Base+0x10c>
   16f60:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16f64:	ldr	r3, [fp, #-16]
   16f68:	add	r3, r2, r3
   16f6c:	ldr	r2, [pc, #432]	; 17124 <dim_leave_array@@Base+0x2a4>
   16f70:	ldr	r2, [r4, r2]
   16f74:	add	r3, r3, #26
   16f78:	lsl	r3, r3, #2
   16f7c:	add	r3, r2, r3
   16f80:	ldr	r3, [r3, #4]
   16f84:	mov	r0, r3
   16f88:	bl	1226c <free@plt>
   16f8c:	ldr	r3, [fp, #-16]
   16f90:	add	r3, r3, #1
   16f94:	str	r3, [fp, #-16]
   16f98:	ldr	r3, [fp, #-20]	; 0xffffffec
   16f9c:	ldr	r3, [r3, #4]
   16fa0:	ldr	r2, [fp, #-16]
   16fa4:	cmp	r2, r3
   16fa8:	blt	16f3c <dim_leave_array@@Base+0xbc>
   16fac:	ldr	r3, [pc, #368]	; 17124 <dim_leave_array@@Base+0x2a4>
   16fb0:	ldr	r3, [r4, r3]
   16fb4:	mov	r2, #0
   16fb8:	str	r2, [r3, #68]	; 0x44
   16fbc:	ldr	r3, [pc, #352]	; 17124 <dim_leave_array@@Base+0x2a4>
   16fc0:	ldr	r3, [r4, r3]
   16fc4:	mvn	r2, #0
   16fc8:	str	r2, [r3, #104]	; 0x68
   16fcc:	mov	r3, #0
   16fd0:	str	r3, [fp, #-16]
   16fd4:	b	17020 <dim_leave_array@@Base+0x1a0>
   16fd8:	ldr	r3, [pc, #324]	; 17124 <dim_leave_array@@Base+0x2a4>
   16fdc:	ldr	r3, [r4, r3]
   16fe0:	ldr	r2, [fp, #-16]
   16fe4:	add	r2, r2, #18
   16fe8:	ldr	r3, [r3, r2, lsl #2]
   16fec:	cmp	r3, #0
   16ff0:	beq	17014 <dim_leave_array@@Base+0x194>
   16ff4:	ldr	r3, [pc, #296]	; 17124 <dim_leave_array@@Base+0x2a4>
   16ff8:	ldr	r3, [r4, r3]
   16ffc:	mov	r2, #1
   17000:	str	r2, [r3, #68]	; 0x44
   17004:	ldr	r3, [pc, #280]	; 17124 <dim_leave_array@@Base+0x2a4>
   17008:	ldr	r3, [r4, r3]
   1700c:	ldr	r2, [fp, #-16]
   17010:	str	r2, [r3, #104]	; 0x68
   17014:	ldr	r3, [fp, #-16]
   17018:	add	r3, r3, #1
   1701c:	str	r3, [fp, #-16]
   17020:	ldr	r3, [pc, #252]	; 17124 <dim_leave_array@@Base+0x2a4>
   17024:	ldr	r3, [r4, r3]
   17028:	ldr	r3, [r3]
   1702c:	ldr	r2, [fp, #-16]
   17030:	cmp	r2, r3
   17034:	blt	16fd8 <dim_leave_array@@Base+0x158>
   17038:	ldr	r3, [fp, #-20]	; 0xffffffec
   1703c:	ldr	r2, [r3, #4]
   17040:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17044:	add	r3, r2, r3
   17048:	sub	r3, r3, #1
   1704c:	ldr	r2, [pc, #208]	; 17124 <dim_leave_array@@Base+0x2a4>
   17050:	ldr	r2, [r4, r2]
   17054:	add	r3, r3, #38	; 0x26
   17058:	lsl	r3, r3, #3
   1705c:	add	r3, r2, r3
   17060:	ldrd	r2, [r3]
   17064:	cmp	r2, #1
   17068:	sbcs	r3, r3, #0
   1706c:	blt	170f8 <dim_leave_array@@Base+0x278>
   17070:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17074:	sub	r3, r3, #1
   17078:	str	r3, [fp, #-16]
   1707c:	b	170ec <dim_leave_array@@Base+0x26c>
   17080:	ldr	r3, [pc, #156]	; 17124 <dim_leave_array@@Base+0x2a4>
   17084:	ldr	r2, [r4, r3]
   17088:	ldr	r3, [fp, #-16]
   1708c:	add	r3, r3, #22
   17090:	lsl	r3, r3, #3
   17094:	add	r3, r2, r3
   17098:	ldrd	r0, [r3]
   1709c:	ldr	r3, [pc, #128]	; 17124 <dim_leave_array@@Base+0x2a4>
   170a0:	ldr	r2, [r4, r3]
   170a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   170a8:	add	r3, r3, #22
   170ac:	lsl	r3, r3, #3
   170b0:	add	r3, r2, r3
   170b4:	ldrd	r2, [r3]
   170b8:	bl	1e628 <main@@Base+0x4cc>
   170bc:	mov	r2, r0
   170c0:	mov	r3, r1
   170c4:	ldr	r1, [pc, #88]	; 17124 <dim_leave_array@@Base+0x2a4>
   170c8:	ldr	r0, [r4, r1]
   170cc:	ldr	r1, [fp, #-16]
   170d0:	add	r1, r1, #22
   170d4:	lsl	r1, r1, #3
   170d8:	add	r1, r0, r1
   170dc:	strd	r2, [r1]
   170e0:	ldr	r3, [fp, #-16]
   170e4:	sub	r3, r3, #1
   170e8:	str	r3, [fp, #-16]
   170ec:	ldr	r3, [fp, #-16]
   170f0:	cmp	r3, #0
   170f4:	bge	17080 <dim_leave_array@@Base+0x200>
   170f8:	nop	{0}
   170fc:	sub	sp, fp, #8
   17100:	ldr	r4, [sp]
   17104:	ldr	fp, [sp, #4]
   17108:	add	sp, sp, #8
   1710c:	pop	{pc}		; (ldr pc, [sp], #4)
   17110:	andeq	sl, r1, r0, ror #2
   17114:			; <UNDEFINED> instruction: 0x000001b4
   17118:	strdeq	r7, [r0], -ip
   1711c:	andeq	r7, r0, ip, lsl #26
   17120:	andeq	r7, r0, r0, ror #28
   17124:	andeq	r0, r0, r4, ror #3
   17128:	str	r4, [sp, #-12]!
   1712c:	str	fp, [sp, #4]
   17130:	str	lr, [sp, #8]
   17134:	add	fp, sp, #8
   17138:	sub	sp, sp, #52	; 0x34
   1713c:	str	r0, [fp, #-48]	; 0xffffffd0
   17140:	str	r1, [fp, #-52]	; 0xffffffcc
   17144:	str	r2, [fp, #-56]	; 0xffffffc8
   17148:	ldr	r4, [pc, #1096]	; 17598 <dim_leave_array@@Base+0x718>
   1714c:	add	r4, pc, r4
   17150:	sub	r3, fp, #36	; 0x24
   17154:	mov	r1, r3
   17158:	ldr	r3, [pc, #1084]	; 1759c <dim_leave_array@@Base+0x71c>
   1715c:	ldr	r3, [r4, r3]
   17160:	add	r0, r3, #144	; 0x90
   17164:	bl	122fc <coda_cursor_get_type_class@plt>
   17168:	mov	r3, r0
   1716c:	cmp	r3, #0
   17170:	beq	17178 <dim_leave_array@@Base+0x2f8>
   17174:	bl	1bdc8 <handle_coda_error@@Base>
   17178:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1717c:	cmp	r3, #0
   17180:	beq	1745c <dim_leave_array@@Base+0x5dc>
   17184:	cmp	r3, #1
   17188:	bne	17558 <dim_leave_array@@Base+0x6d8>
   1718c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17190:	mov	r3, r2
   17194:	lsl	r3, r3, #2
   17198:	add	r3, r3, r2
   1719c:	lsl	r3, r3, #4
   171a0:	add	r3, r3, #800	; 0x320
   171a4:	ldr	r2, [pc, #1008]	; 1759c <dim_leave_array@@Base+0x71c>
   171a8:	ldr	r2, [r4, r2]
   171ac:	add	r3, r3, r2
   171b0:	str	r3, [fp, #-28]	; 0xffffffe4
   171b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   171b8:	ldr	r3, [r3]
   171bc:	str	r3, [fp, #-32]	; 0xffffffe0
   171c0:	ldr	r3, [pc, #980]	; 1759c <dim_leave_array@@Base+0x71c>
   171c4:	ldr	r3, [r4, r3]
   171c8:	ldr	r3, [r3, #3360]	; 0xd20
   171cc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   171d0:	cmp	r2, r3
   171d4:	blt	171f8 <dim_leave_array@@Base+0x378>
   171d8:	ldr	r3, [pc, #960]	; 175a0 <dim_leave_array@@Base+0x720>
   171dc:	add	r3, pc, r3
   171e0:	movw	r2, #638	; 0x27e
   171e4:	ldr	r1, [pc, #952]	; 175a4 <dim_leave_array@@Base+0x724>
   171e8:	add	r1, pc, r1
   171ec:	ldr	r0, [pc, #948]	; 175a8 <dim_leave_array@@Base+0x728>
   171f0:	add	r0, pc, r0
   171f4:	bl	12638 <__assert_fail@plt>
   171f8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   171fc:	cmp	r3, #0
   17200:	bne	17210 <dim_leave_array@@Base+0x390>
   17204:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17208:	mov	r2, #0
   1720c:	str	r2, [r3, #44]	; 0x2c
   17210:	ldr	r3, [pc, #900]	; 1759c <dim_leave_array@@Base+0x71c>
   17214:	ldr	r3, [r4, r3]
   17218:	ldr	r3, [r3, #3360]	; 0xd20
   1721c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17220:	cmp	r2, r3
   17224:	bge	17268 <dim_leave_array@@Base+0x3e8>
   17228:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1722c:	ldr	r3, [r3, #44]	; 0x2c
   17230:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17234:	ldr	r1, [r2, #40]	; 0x28
   17238:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1723c:	add	r2, r2, #1
   17240:	mul	r1, r1, r3
   17244:	ldr	r3, [pc, #848]	; 1759c <dim_leave_array@@Base+0x71c>
   17248:	ldr	r0, [r4, r3]
   1724c:	mov	r3, r2
   17250:	lsl	r3, r3, #2
   17254:	add	r3, r3, r2
   17258:	lsl	r3, r3, #4
   1725c:	add	r3, r0, r3
   17260:	add	r3, r3, #844	; 0x34c
   17264:	str	r1, [r3]
   17268:	mov	r3, #1
   1726c:	str	r3, [fp, #-16]
   17270:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17274:	str	r3, [fp, #-20]	; 0xffffffec
   17278:	b	17308 <dim_leave_array@@Base+0x488>
   1727c:	ldr	r3, [pc, #808]	; 175ac <dim_leave_array@@Base+0x72c>
   17280:	ldr	r3, [r4, r3]
   17284:	ldr	r2, [fp, #-20]	; 0xffffffec
   17288:	add	r2, r2, #18
   1728c:	ldr	r3, [r3, r2, lsl #2]
   17290:	cmp	r3, #0
   17294:	beq	172d8 <dim_leave_array@@Base+0x458>
   17298:	ldr	r3, [pc, #780]	; 175ac <dim_leave_array@@Base+0x72c>
   1729c:	ldr	r2, [r4, r3]
   172a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   172a4:	add	r3, r3, #26
   172a8:	lsl	r3, r3, #2
   172ac:	add	r3, r2, r3
   172b0:	ldr	r2, [r3, #4]
   172b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   172b8:	ldr	r3, [r3, #44]	; 0x2c
   172bc:	lsl	r3, r3, #2
   172c0:	add	r3, r2, r3
   172c4:	ldr	r2, [r3]
   172c8:	ldr	r3, [fp, #-16]
   172cc:	mul	r3, r2, r3
   172d0:	str	r3, [fp, #-16]
   172d4:	b	172fc <dim_leave_array@@Base+0x47c>
   172d8:	ldr	r3, [pc, #716]	; 175ac <dim_leave_array@@Base+0x72c>
   172dc:	ldr	r2, [r4, r3]
   172e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   172e4:	lsl	r3, r3, #2
   172e8:	add	r3, r2, r3
   172ec:	ldr	r2, [r3, #4]
   172f0:	ldr	r3, [fp, #-16]
   172f4:	mul	r3, r2, r3
   172f8:	str	r3, [fp, #-16]
   172fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   17300:	add	r3, r3, #1
   17304:	str	r3, [fp, #-20]	; 0xffffffec
   17308:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1730c:	ldr	r2, [r3, #4]
   17310:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17314:	add	r3, r2, r3
   17318:	ldr	r2, [fp, #-20]	; 0xffffffec
   1731c:	cmp	r2, r3
   17320:	blt	1727c <dim_leave_array@@Base+0x3fc>
   17324:	ldr	r3, [fp, #-16]
   17328:	cmp	r3, #0
   1732c:	ble	17454 <dim_leave_array@@Base+0x5d4>
   17330:	ldr	r3, [pc, #612]	; 1759c <dim_leave_array@@Base+0x71c>
   17334:	ldr	r3, [r4, r3]
   17338:	add	r0, r3, #144	; 0x90
   1733c:	bl	12344 <coda_cursor_goto_first_array_element@plt>
   17340:	mov	r3, r0
   17344:	cmp	r3, #0
   17348:	beq	17350 <dim_leave_array@@Base+0x4d0>
   1734c:	bl	1bdc8 <handle_coda_error@@Base>
   17350:	mov	r3, #0
   17354:	str	r3, [fp, #-24]	; 0xffffffe8
   17358:	b	17430 <dim_leave_array@@Base+0x5b0>
   1735c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17360:	add	r0, r3, #1
   17364:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17368:	add	r3, r3, #1
   1736c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17370:	mov	r1, r3
   17374:	bl	17128 <dim_leave_array@@Base+0x2a8>
   17378:	mov	r3, r0
   1737c:	cmp	r3, #0
   17380:	beq	1739c <dim_leave_array@@Base+0x51c>
   17384:	ldr	r3, [pc, #528]	; 1759c <dim_leave_array@@Base+0x71c>
   17388:	ldr	r3, [r4, r3]
   1738c:	add	r0, r3, #144	; 0x90
   17390:	bl	123d4 <coda_cursor_goto_parent@plt>
   17394:	mov	r3, #1
   17398:	b	17580 <dim_leave_array@@Base+0x700>
   1739c:	ldr	r3, [fp, #-16]
   173a0:	sub	r3, r3, #1
   173a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   173a8:	cmp	r2, r3
   173ac:	bge	17424 <dim_leave_array@@Base+0x5a4>
   173b0:	ldr	r3, [pc, #484]	; 1759c <dim_leave_array@@Base+0x71c>
   173b4:	ldr	r3, [r4, r3]
   173b8:	add	r0, r3, #144	; 0x90
   173bc:	bl	12440 <coda_cursor_goto_next_array_element@plt>
   173c0:	mov	r3, r0
   173c4:	cmp	r3, #0
   173c8:	beq	173d0 <dim_leave_array@@Base+0x550>
   173cc:	bl	1bdc8 <handle_coda_error@@Base>
   173d0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   173d4:	add	r2, r3, #1
   173d8:	ldr	r3, [pc, #444]	; 1759c <dim_leave_array@@Base+0x71c>
   173dc:	ldr	r1, [r4, r3]
   173e0:	mov	r3, r2
   173e4:	lsl	r3, r3, #2
   173e8:	add	r3, r3, r2
   173ec:	lsl	r3, r3, #4
   173f0:	add	r3, r1, r3
   173f4:	add	r3, r3, #844	; 0x34c
   173f8:	ldr	r3, [r3]
   173fc:	add	r1, r3, #1
   17400:	ldr	r3, [pc, #404]	; 1759c <dim_leave_array@@Base+0x71c>
   17404:	ldr	r0, [r4, r3]
   17408:	mov	r3, r2
   1740c:	lsl	r3, r3, #2
   17410:	add	r3, r3, r2
   17414:	lsl	r3, r3, #4
   17418:	add	r3, r0, r3
   1741c:	add	r3, r3, #844	; 0x34c
   17420:	str	r1, [r3]
   17424:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17428:	add	r3, r3, #1
   1742c:	str	r3, [fp, #-24]	; 0xffffffe8
   17430:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17434:	ldr	r3, [fp, #-16]
   17438:	cmp	r2, r3
   1743c:	blt	1735c <dim_leave_array@@Base+0x4dc>
   17440:	ldr	r3, [pc, #340]	; 1759c <dim_leave_array@@Base+0x71c>
   17444:	ldr	r3, [r4, r3]
   17448:	add	r0, r3, #144	; 0x90
   1744c:	bl	123d4 <coda_cursor_goto_parent@plt>
   17450:	b	1757c <dim_leave_array@@Base+0x6fc>
   17454:	nop	{0}
   17458:	b	1757c <dim_leave_array@@Base+0x6fc>
   1745c:	ldr	r3, [pc, #312]	; 1759c <dim_leave_array@@Base+0x71c>
   17460:	ldr	r2, [r4, r3]
   17464:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17468:	add	r3, r3, #872	; 0x368
   1746c:	lsl	r3, r3, #2
   17470:	add	r3, r2, r3
   17474:	ldr	r3, [r3, #4]
   17478:	sub	r2, fp, #40	; 0x28
   1747c:	mov	r1, r3
   17480:	ldr	r3, [pc, #276]	; 1759c <dim_leave_array@@Base+0x71c>
   17484:	ldr	r3, [r4, r3]
   17488:	add	r0, r3, #144	; 0x90
   1748c:	bl	1220c <coda_cursor_get_record_field_available_status@plt>
   17490:	mov	r3, r0
   17494:	cmp	r3, #0
   17498:	beq	174a0 <dim_leave_array@@Base+0x620>
   1749c:	bl	1bdc8 <handle_coda_error@@Base>
   174a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   174a4:	cmp	r3, #0
   174a8:	beq	17578 <dim_leave_array@@Base+0x6f8>
   174ac:	ldr	r3, [pc, #232]	; 1759c <dim_leave_array@@Base+0x71c>
   174b0:	ldr	r3, [r4, r3]
   174b4:	ldr	r3, [r3, #3748]	; 0xea4
   174b8:	sub	r3, r3, #1
   174bc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   174c0:	cmp	r2, r3
   174c4:	bne	174d0 <dim_leave_array@@Base+0x650>
   174c8:	mov	r3, #1
   174cc:	b	17580 <dim_leave_array@@Base+0x700>
   174d0:	ldr	r3, [pc, #196]	; 1759c <dim_leave_array@@Base+0x71c>
   174d4:	ldr	r2, [r4, r3]
   174d8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   174dc:	add	r3, r3, #872	; 0x368
   174e0:	lsl	r3, r3, #2
   174e4:	add	r3, r2, r3
   174e8:	ldr	r3, [r3, #4]
   174ec:	mov	r1, r3
   174f0:	ldr	r3, [pc, #164]	; 1759c <dim_leave_array@@Base+0x71c>
   174f4:	ldr	r3, [r4, r3]
   174f8:	add	r0, r3, #144	; 0x90
   174fc:	bl	12374 <coda_cursor_goto_record_field_by_index@plt>
   17500:	mov	r3, r0
   17504:	cmp	r3, #0
   17508:	beq	17510 <dim_leave_array@@Base+0x690>
   1750c:	bl	1bdc8 <handle_coda_error@@Base>
   17510:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17514:	add	r0, r3, #1
   17518:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1751c:	add	r3, r3, #1
   17520:	mov	r2, r3
   17524:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17528:	bl	17128 <dim_leave_array@@Base+0x2a8>
   1752c:	mov	r3, r0
   17530:	str	r3, [fp, #-40]	; 0xffffffd8
   17534:	ldr	r3, [pc, #96]	; 1759c <dim_leave_array@@Base+0x71c>
   17538:	ldr	r3, [r4, r3]
   1753c:	add	r0, r3, #144	; 0x90
   17540:	bl	123d4 <coda_cursor_goto_parent@plt>
   17544:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17548:	cmp	r3, #0
   1754c:	beq	17578 <dim_leave_array@@Base+0x6f8>
   17550:	mov	r3, #1
   17554:	b	17580 <dim_leave_array@@Base+0x700>
   17558:	ldr	r3, [pc, #80]	; 175b0 <dim_leave_array@@Base+0x730>
   1755c:	add	r3, pc, r3
   17560:	movw	r2, #729	; 0x2d9
   17564:	ldr	r1, [pc, #72]	; 175b4 <dim_leave_array@@Base+0x734>
   17568:	add	r1, pc, r1
   1756c:	ldr	r0, [pc, #68]	; 175b8 <dim_leave_array@@Base+0x738>
   17570:	add	r0, pc, r0
   17574:	bl	12638 <__assert_fail@plt>
   17578:	nop	{0}
   1757c:	mov	r3, #0
   17580:	mov	r0, r3
   17584:	sub	sp, fp, #8
   17588:	ldr	r4, [sp]
   1758c:	ldr	fp, [sp, #4]
   17590:	add	sp, sp, #8
   17594:	pop	{pc}		; (ldr pc, [sp], #4)
   17598:	andeq	r9, r1, ip, lsr #29
   1759c:			; <UNDEFINED> instruction: 0x000001b4
   175a0:	andeq	r7, r0, r4, ror #23
   175a4:	andeq	r7, r0, r4, ror #19
   175a8:	andeq	r7, r0, r8, asr fp
   175ac:	andeq	r0, r0, r4, ror #3
   175b0:	andeq	r7, r0, r4, ror #16
   175b4:	andeq	r7, r0, r4, ror #12
   175b8:	andeq	r7, r0, r8, ror r7

000175bc <dim_record_field_available@@Base>:
   175bc:	str	fp, [sp, #-8]!
   175c0:	str	lr, [sp, #4]
   175c4:	add	fp, sp, #4
   175c8:	mov	r2, #0
   175cc:	mov	r1, #0
   175d0:	mov	r0, #0
   175d4:	bl	17128 <dim_leave_array@@Base+0x2a8>
   175d8:	mov	r3, r0
   175dc:	mov	r0, r3
   175e0:	sub	sp, fp, #4
   175e4:	ldr	fp, [sp]
   175e8:	add	sp, sp, #4
   175ec:	pop	{pc}		; (ldr pc, [sp], #4)
   175f0:	str	r4, [sp, #-12]!
   175f4:	str	fp, [sp, #4]
   175f8:	str	lr, [sp, #8]
   175fc:	add	fp, sp, #8
   17600:	sub	sp, sp, #36	; 0x24
   17604:	str	r0, [fp, #-24]	; 0xffffffe8
   17608:	str	r1, [fp, #-28]	; 0xffffffe4
   1760c:	str	r2, [fp, #-32]	; 0xffffffe0
   17610:	mov	r3, #0
   17614:	str	r3, [fp, #-16]
   17618:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1761c:	cmp	r3, #0
   17620:	bne	17644 <dim_record_field_available@@Base+0x88>
   17624:	ldr	r3, [pc, #928]	; 179cc <dim_record_field_available@@Base+0x410>
   17628:	add	r3, pc, r3
   1762c:	mov	r2, #44	; 0x2c
   17630:	ldr	r1, [pc, #920]	; 179d0 <dim_record_field_available@@Base+0x414>
   17634:	add	r1, pc, r1
   17638:	ldr	r0, [pc, #916]	; 179d4 <dim_record_field_available@@Base+0x418>
   1763c:	add	r0, pc, r0
   17640:	bl	12638 <__assert_fail@plt>
   17644:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17648:	cmp	r3, #0
   1764c:	bne	17670 <dim_record_field_available@@Base+0xb4>
   17650:	ldr	r3, [pc, #896]	; 179d8 <dim_record_field_available@@Base+0x41c>
   17654:	add	r3, pc, r3
   17658:	mov	r2, #45	; 0x2d
   1765c:	ldr	r1, [pc, #888]	; 179dc <dim_record_field_available@@Base+0x420>
   17660:	add	r1, pc, r1
   17664:	ldr	r0, [pc, #884]	; 179e0 <dim_record_field_available@@Base+0x424>
   17668:	add	r0, pc, r0
   1766c:	bl	12638 <__assert_fail@plt>
   17670:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17674:	cmp	r3, #0
   17678:	bne	176a8 <dim_record_field_available@@Base+0xec>
   1767c:	ldr	r3, [pc, #864]	; 179e4 <dim_record_field_available@@Base+0x428>
   17680:	add	r3, pc, r3
   17684:	mov	r2, #46	; 0x2e
   17688:	ldr	r1, [pc, #856]	; 179e8 <dim_record_field_available@@Base+0x42c>
   1768c:	add	r1, pc, r1
   17690:	ldr	r0, [pc, #852]	; 179ec <dim_record_field_available@@Base+0x430>
   17694:	add	r0, pc, r0
   17698:	bl	12638 <__assert_fail@plt>
   1769c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   176a0:	add	r3, r3, #1
   176a4:	str	r3, [fp, #-24]	; 0xffffffe8
   176a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   176ac:	ldrb	r3, [r3]
   176b0:	cmp	r3, #32
   176b4:	beq	1769c <dim_record_field_available@@Base+0xe0>
   176b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   176bc:	ldrb	r3, [r3]
   176c0:	cmp	r3, #9
   176c4:	beq	1769c <dim_record_field_available@@Base+0xe0>
   176c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   176cc:	ldrb	r3, [r3]
   176d0:	cmp	r3, #10
   176d4:	beq	1769c <dim_record_field_available@@Base+0xe0>
   176d8:	b	176e8 <dim_record_field_available@@Base+0x12c>
   176dc:	ldr	r3, [fp, #-16]
   176e0:	add	r3, r3, #1
   176e4:	str	r3, [fp, #-16]
   176e8:	ldr	r3, [fp, #-16]
   176ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   176f0:	add	r3, r2, r3
   176f4:	ldrb	r3, [r3]
   176f8:	cmp	r3, #0
   176fc:	beq	17748 <dim_record_field_available@@Base+0x18c>
   17700:	ldr	r3, [fp, #-16]
   17704:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17708:	add	r3, r2, r3
   1770c:	ldrb	r3, [r3]
   17710:	cmp	r3, #46	; 0x2e
   17714:	beq	17748 <dim_record_field_available@@Base+0x18c>
   17718:	ldr	r3, [fp, #-16]
   1771c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17720:	add	r3, r2, r3
   17724:	ldrb	r3, [r3]
   17728:	cmp	r3, #59	; 0x3b
   1772c:	beq	17748 <dim_record_field_available@@Base+0x18c>
   17730:	ldr	r3, [fp, #-16]
   17734:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17738:	add	r3, r2, r3
   1773c:	ldrb	r3, [r3]
   17740:	cmp	r3, #44	; 0x2c
   17744:	bne	176dc <dim_record_field_available@@Base+0x120>
   17748:	ldr	r3, [fp, #-16]
   1774c:	cmp	r3, #0
   17750:	ble	179a8 <dim_record_field_available@@Base+0x3ec>
   17754:	ldr	r3, [fp, #-16]
   17758:	str	r3, [fp, #-20]	; 0xffffffec
   1775c:	mov	r0, #12
   17760:	bl	123a4 <malloc@plt>
   17764:	mov	r3, r0
   17768:	mov	r2, r3
   1776c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17770:	str	r2, [r3]
   17774:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17778:	ldr	r3, [r3]
   1777c:	cmp	r3, #0
   17780:	bne	177ac <dim_record_field_available@@Base+0x1f0>
   17784:	mov	r3, #69	; 0x45
   17788:	str	r3, [sp]
   1778c:	ldr	r3, [pc, #604]	; 179f0 <dim_record_field_available@@Base+0x434>
   17790:	add	r3, pc, r3
   17794:	mov	r2, #12
   17798:	ldr	r1, [pc, #596]	; 179f4 <dim_record_field_available@@Base+0x438>
   1779c:	add	r1, pc, r1
   177a0:	mvn	r0, #0
   177a4:	bl	12224 <coda_set_error@plt>
   177a8:	bl	1bdc8 <handle_coda_error@@Base>
   177ac:	ldr	r3, [fp, #-16]
   177b0:	add	r3, r3, #1
   177b4:	mov	r2, r3
   177b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   177bc:	ldr	r4, [r3]
   177c0:	mov	r0, r2
   177c4:	bl	123a4 <malloc@plt>
   177c8:	mov	r3, r0
   177cc:	str	r3, [r4]
   177d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   177d4:	ldr	r3, [r3]
   177d8:	ldr	r3, [r3]
   177dc:	cmp	r3, #0
   177e0:	bne	17810 <dim_record_field_available@@Base+0x254>
   177e4:	ldr	r3, [fp, #-16]
   177e8:	add	r2, r3, #1
   177ec:	mov	r3, #76	; 0x4c
   177f0:	str	r3, [sp]
   177f4:	ldr	r3, [pc, #508]	; 179f8 <dim_record_field_available@@Base+0x43c>
   177f8:	add	r3, pc, r3
   177fc:	ldr	r1, [pc, #504]	; 179fc <dim_record_field_available@@Base+0x440>
   17800:	add	r1, pc, r1
   17804:	mvn	r0, #0
   17808:	bl	12224 <coda_set_error@plt>
   1780c:	bl	1bdc8 <handle_coda_error@@Base>
   17810:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17814:	ldr	r3, [r3]
   17818:	ldr	r3, [r3]
   1781c:	ldr	r2, [fp, #-16]
   17820:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17824:	mov	r0, r3
   17828:	bl	124a0 <strncpy@plt>
   1782c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17830:	ldr	r3, [r3]
   17834:	mov	r2, #0
   17838:	str	r2, [r3, #4]
   1783c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17840:	ldr	r3, [r3]
   17844:	mov	r2, #0
   17848:	str	r2, [r3, #8]
   1784c:	b	1785c <dim_record_field_available@@Base+0x2a0>
   17850:	ldr	r3, [fp, #-16]
   17854:	sub	r3, r3, #1
   17858:	str	r3, [fp, #-16]
   1785c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17860:	ldr	r3, [r3]
   17864:	ldr	r2, [r3]
   17868:	ldr	r3, [fp, #-16]
   1786c:	sub	r3, r3, #1
   17870:	add	r3, r2, r3
   17874:	ldrb	r3, [r3]
   17878:	cmp	r3, #32
   1787c:	beq	17850 <dim_record_field_available@@Base+0x294>
   17880:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17884:	ldr	r3, [r3]
   17888:	ldr	r2, [r3]
   1788c:	ldr	r3, [fp, #-16]
   17890:	sub	r3, r3, #1
   17894:	add	r3, r2, r3
   17898:	ldrb	r3, [r3]
   1789c:	cmp	r3, #9
   178a0:	beq	17850 <dim_record_field_available@@Base+0x294>
   178a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   178a8:	ldr	r3, [r3]
   178ac:	ldr	r2, [r3]
   178b0:	ldr	r3, [fp, #-16]
   178b4:	sub	r3, r3, #1
   178b8:	add	r3, r2, r3
   178bc:	ldrb	r3, [r3]
   178c0:	cmp	r3, #10
   178c4:	beq	17850 <dim_record_field_available@@Base+0x294>
   178c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   178cc:	ldr	r3, [r3]
   178d0:	ldr	r2, [r3]
   178d4:	ldr	r3, [fp, #-16]
   178d8:	add	r3, r2, r3
   178dc:	mov	r2, #0
   178e0:	strb	r2, [r3]
   178e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   178e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   178ec:	add	r3, r2, r3
   178f0:	ldrb	r3, [r3]
   178f4:	cmp	r3, #46	; 0x2e
   178f8:	bne	17944 <dim_record_field_available@@Base+0x388>
   178fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   17900:	add	r3, r3, #1
   17904:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17908:	add	r0, r2, r3
   1790c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17910:	ldr	r3, [r3]
   17914:	add	r3, r3, #4
   17918:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1791c:	mov	r1, r3
   17920:	bl	175f0 <dim_record_field_available@@Base+0x34>
   17924:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17928:	ldr	r3, [r3]
   1792c:	ldr	r3, [r3, #4]
   17930:	cmp	r3, #0
   17934:	bne	179b4 <dim_record_field_available@@Base+0x3f8>
   17938:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1793c:	bl	17c64 <codadump_filter_remove@@Base>
   17940:	b	179b4 <dim_record_field_available@@Base+0x3f8>
   17944:	ldr	r3, [fp, #-20]	; 0xffffffec
   17948:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1794c:	add	r3, r2, r3
   17950:	ldrb	r3, [r3]
   17954:	cmp	r3, #59	; 0x3b
   17958:	beq	17974 <dim_record_field_available@@Base+0x3b8>
   1795c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17960:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17964:	add	r3, r2, r3
   17968:	ldrb	r3, [r3]
   1796c:	cmp	r3, #44	; 0x2c
   17970:	bne	17990 <dim_record_field_available@@Base+0x3d4>
   17974:	ldr	r3, [fp, #-20]	; 0xffffffec
   17978:	add	r3, r3, #1
   1797c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17980:	add	r2, r2, r3
   17984:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17988:	str	r2, [r3]
   1798c:	b	179b4 <dim_record_field_available@@Base+0x3f8>
   17990:	ldr	r3, [fp, #-20]	; 0xffffffec
   17994:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17998:	add	r2, r2, r3
   1799c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   179a0:	str	r2, [r3]
   179a4:	b	179b4 <dim_record_field_available@@Base+0x3f8>
   179a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   179ac:	mov	r2, #0
   179b0:	str	r2, [r3]
   179b4:	nop	{0}
   179b8:	sub	sp, fp, #8
   179bc:	ldr	r4, [sp]
   179c0:	ldr	fp, [sp, #4]
   179c4:	add	sp, sp, #8
   179c8:	pop	{pc}		; (ldr pc, [sp], #4)
   179cc:	andeq	r7, r0, r0, asr #17
   179d0:			; <UNDEFINED> instruction: 0x000077b0
   179d4:	andeq	r7, r0, ip, lsl #16
   179d8:	muleq	r0, r4, r8
   179dc:	andeq	r7, r0, r4, lsl #15
   179e0:	strdeq	r7, [r0], -r4
   179e4:	andeq	r7, r0, r8, ror #16
   179e8:	andeq	r7, r0, r8, asr r7
   179ec:	ldrdeq	r7, [r0], -r8
   179f0:	andeq	r7, r0, r4, asr r6
   179f4:	andeq	r7, r0, r0, ror #13
   179f8:	andeq	r7, r0, ip, ror #11
   179fc:			; <UNDEFINED> instruction: 0x000076b4
   17a00:	str	fp, [sp, #-8]!
   17a04:	str	lr, [sp, #4]
   17a08:	add	fp, sp, #4
   17a0c:	sub	sp, sp, #8
   17a10:	str	r0, [fp, #-8]
   17a14:	str	r1, [fp, #-12]
   17a18:	ldr	r3, [fp, #-8]
   17a1c:	cmp	r3, #0
   17a20:	bne	17a44 <dim_record_field_available@@Base+0x488>
   17a24:	ldr	r3, [pc, #324]	; 17b70 <dim_record_field_available@@Base+0x5b4>
   17a28:	add	r3, pc, r3
   17a2c:	mov	r2, #117	; 0x75
   17a30:	ldr	r1, [pc, #316]	; 17b74 <dim_record_field_available@@Base+0x5b8>
   17a34:	add	r1, pc, r1
   17a38:	ldr	r0, [pc, #312]	; 17b78 <dim_record_field_available@@Base+0x5bc>
   17a3c:	add	r0, pc, r0
   17a40:	bl	12638 <__assert_fail@plt>
   17a44:	ldr	r3, [fp, #-12]
   17a48:	cmp	r3, #0
   17a4c:	beq	17b5c <dim_record_field_available@@Base+0x5a0>
   17a50:	ldr	r3, [fp, #-8]
   17a54:	ldr	r3, [r3]
   17a58:	cmp	r3, #0
   17a5c:	bne	17a70 <dim_record_field_available@@Base+0x4b4>
   17a60:	ldr	r2, [fp, #-12]
   17a64:	ldr	r3, [fp, #-8]
   17a68:	str	r2, [r3]
   17a6c:	b	17b60 <dim_record_field_available@@Base+0x5a4>
   17a70:	ldr	r3, [fp, #-8]
   17a74:	ldr	r3, [r3]
   17a78:	ldr	r2, [r3]
   17a7c:	ldr	r3, [fp, #-12]
   17a80:	ldr	r3, [r3]
   17a84:	mov	r1, r3
   17a88:	mov	r0, r2
   17a8c:	bl	121e8 <strcmp@plt>
   17a90:	mov	r3, r0
   17a94:	cmp	r3, #0
   17a98:	bne	17b14 <dim_record_field_available@@Base+0x558>
   17a9c:	ldr	r3, [fp, #-8]
   17aa0:	ldr	r3, [r3]
   17aa4:	ldr	r3, [r3, #4]
   17aa8:	cmp	r3, #0
   17aac:	beq	17b04 <dim_record_field_available@@Base+0x548>
   17ab0:	ldr	r3, [fp, #-12]
   17ab4:	ldr	r3, [r3, #4]
   17ab8:	cmp	r3, #0
   17abc:	beq	17af0 <dim_record_field_available@@Base+0x534>
   17ac0:	ldr	r3, [fp, #-8]
   17ac4:	ldr	r3, [r3]
   17ac8:	add	r2, r3, #4
   17acc:	ldr	r3, [fp, #-12]
   17ad0:	ldr	r3, [r3, #4]
   17ad4:	mov	r1, r3
   17ad8:	mov	r0, r2
   17adc:	bl	17a00 <dim_record_field_available@@Base+0x444>
   17ae0:	ldr	r3, [fp, #-12]
   17ae4:	mov	r2, #0
   17ae8:	str	r2, [r3, #4]
   17aec:	b	17b04 <dim_record_field_available@@Base+0x548>
   17af0:	ldr	r3, [fp, #-8]
   17af4:	ldr	r3, [r3]
   17af8:	add	r3, r3, #4
   17afc:	mov	r0, r3
   17b00:	bl	17c64 <codadump_filter_remove@@Base>
   17b04:	sub	r3, fp, #12
   17b08:	mov	r0, r3
   17b0c:	bl	17c64 <codadump_filter_remove@@Base>
   17b10:	b	17b60 <dim_record_field_available@@Base+0x5a4>
   17b14:	ldr	r3, [fp, #-8]
   17b18:	ldr	r3, [r3]
   17b1c:	ldr	r3, [r3, #8]
   17b20:	cmp	r3, #0
   17b24:	beq	17b48 <dim_record_field_available@@Base+0x58c>
   17b28:	ldr	r3, [fp, #-8]
   17b2c:	ldr	r3, [r3]
   17b30:	add	r3, r3, #8
   17b34:	ldr	r2, [fp, #-12]
   17b38:	mov	r1, r2
   17b3c:	mov	r0, r3
   17b40:	bl	17a00 <dim_record_field_available@@Base+0x444>
   17b44:	b	17b60 <dim_record_field_available@@Base+0x5a4>
   17b48:	ldr	r3, [fp, #-8]
   17b4c:	ldr	r3, [r3]
   17b50:	ldr	r2, [fp, #-12]
   17b54:	str	r2, [r3, #8]
   17b58:	b	17b60 <dim_record_field_available@@Base+0x5a4>
   17b5c:	nop	{0}
   17b60:	sub	sp, fp, #4
   17b64:	ldr	fp, [sp]
   17b68:	add	sp, sp, #4
   17b6c:	pop	{pc}		; (ldr pc, [sp], #4)
   17b70:	ldrdeq	r7, [r0], -r0
   17b74:			; <UNDEFINED> instruction: 0x000073b0
   17b78:	andeq	r7, r0, r0, lsr #8
   17b7c:	str	fp, [sp, #-8]!
   17b80:	str	lr, [sp, #4]
   17b84:	add	fp, sp, #4
   17b88:	sub	sp, sp, #16
   17b8c:	str	r0, [fp, #-16]
   17b90:	str	r1, [fp, #-20]	; 0xffffffec
   17b94:	mov	r3, #0
   17b98:	str	r3, [fp, #-8]
   17b9c:	ldr	r3, [fp, #-16]
   17ba0:	str	r3, [fp, #-12]
   17ba4:	ldr	r3, [fp, #-16]
   17ba8:	cmp	r3, #0
   17bac:	beq	17c0c <dim_record_field_available@@Base+0x650>
   17bb0:	b	17bf8 <dim_record_field_available@@Base+0x63c>
   17bb4:	ldr	r3, [fp, #-12]
   17bb8:	sub	r2, fp, #12
   17bbc:	sub	r1, fp, #8
   17bc0:	mov	r0, r3
   17bc4:	bl	175f0 <dim_record_field_available@@Base+0x34>
   17bc8:	ldr	r3, [fp, #-8]
   17bcc:	cmp	r3, #0
   17bd0:	bne	17be0 <dim_record_field_available@@Base+0x624>
   17bd4:	ldr	r0, [fp, #-20]	; 0xffffffec
   17bd8:	bl	17c64 <codadump_filter_remove@@Base>
   17bdc:	b	17c10 <dim_record_field_available@@Base+0x654>
   17be0:	ldr	r3, [fp, #-8]
   17be4:	mov	r1, r3
   17be8:	ldr	r0, [fp, #-20]	; 0xffffffec
   17bec:	bl	17a00 <dim_record_field_available@@Base+0x444>
   17bf0:	mov	r3, #0
   17bf4:	str	r3, [fp, #-8]
   17bf8:	ldr	r3, [fp, #-12]
   17bfc:	ldrb	r3, [r3]
   17c00:	cmp	r3, #0
   17c04:	bne	17bb4 <dim_record_field_available@@Base+0x5f8>
   17c08:	b	17c10 <dim_record_field_available@@Base+0x654>
   17c0c:	nop	{0}
   17c10:	sub	sp, fp, #4
   17c14:	ldr	fp, [sp]
   17c18:	add	sp, sp, #4
   17c1c:	pop	{pc}		; (ldr pc, [sp], #4)

00017c20 <codadump_filter_create@@Base>:
   17c20:	str	fp, [sp, #-8]!
   17c24:	str	lr, [sp, #4]
   17c28:	add	fp, sp, #4
   17c2c:	sub	sp, sp, #16
   17c30:	str	r0, [fp, #-16]
   17c34:	mov	r3, #0
   17c38:	str	r3, [fp, #-8]
   17c3c:	sub	r3, fp, #8
   17c40:	mov	r1, r3
   17c44:	ldr	r0, [fp, #-16]
   17c48:	bl	17b7c <dim_record_field_available@@Base+0x5c0>
   17c4c:	ldr	r3, [fp, #-8]
   17c50:	mov	r0, r3
   17c54:	sub	sp, fp, #4
   17c58:	ldr	fp, [sp]
   17c5c:	add	sp, sp, #4
   17c60:	pop	{pc}		; (ldr pc, [sp], #4)

00017c64 <codadump_filter_remove@@Base>:
   17c64:	str	fp, [sp, #-8]!
   17c68:	str	lr, [sp, #4]
   17c6c:	add	fp, sp, #4
   17c70:	sub	sp, sp, #8
   17c74:	str	r0, [fp, #-8]
   17c78:	ldr	r3, [fp, #-8]
   17c7c:	cmp	r3, #0
   17c80:	bne	17ca4 <codadump_filter_remove@@Base+0x40>
   17c84:	ldr	r3, [pc, #224]	; 17d6c <codadump_filter_remove@@Base+0x108>
   17c88:	add	r3, pc, r3
   17c8c:	mov	r2, #192	; 0xc0
   17c90:	ldr	r1, [pc, #216]	; 17d70 <codadump_filter_remove@@Base+0x10c>
   17c94:	add	r1, pc, r1
   17c98:	ldr	r0, [pc, #212]	; 17d74 <codadump_filter_remove@@Base+0x110>
   17c9c:	add	r0, pc, r0
   17ca0:	bl	12638 <__assert_fail@plt>
   17ca4:	ldr	r3, [fp, #-8]
   17ca8:	ldr	r3, [r3]
   17cac:	cmp	r3, #0
   17cb0:	beq	17d58 <codadump_filter_remove@@Base+0xf4>
   17cb4:	ldr	r3, [fp, #-8]
   17cb8:	ldr	r3, [r3]
   17cbc:	ldr	r3, [r3, #8]
   17cc0:	cmp	r3, #0
   17cc4:	beq	17cdc <codadump_filter_remove@@Base+0x78>
   17cc8:	ldr	r3, [fp, #-8]
   17ccc:	ldr	r3, [r3]
   17cd0:	add	r3, r3, #8
   17cd4:	mov	r0, r3
   17cd8:	bl	17c64 <codadump_filter_remove@@Base>
   17cdc:	ldr	r3, [fp, #-8]
   17ce0:	ldr	r3, [r3]
   17ce4:	ldr	r3, [r3, #4]
   17ce8:	cmp	r3, #0
   17cec:	beq	17d04 <codadump_filter_remove@@Base+0xa0>
   17cf0:	ldr	r3, [fp, #-8]
   17cf4:	ldr	r3, [r3]
   17cf8:	add	r3, r3, #4
   17cfc:	mov	r0, r3
   17d00:	bl	17c64 <codadump_filter_remove@@Base>
   17d04:	ldr	r3, [fp, #-8]
   17d08:	ldr	r3, [r3]
   17d0c:	ldr	r3, [r3]
   17d10:	cmp	r3, #0
   17d14:	beq	17d3c <codadump_filter_remove@@Base+0xd8>
   17d18:	ldr	r3, [fp, #-8]
   17d1c:	ldr	r3, [r3]
   17d20:	ldr	r3, [r3]
   17d24:	mov	r0, r3
   17d28:	bl	1226c <free@plt>
   17d2c:	ldr	r3, [fp, #-8]
   17d30:	ldr	r3, [r3]
   17d34:	mov	r2, #0
   17d38:	str	r2, [r3]
   17d3c:	ldr	r3, [fp, #-8]
   17d40:	ldr	r3, [r3]
   17d44:	mov	r0, r3
   17d48:	bl	1226c <free@plt>
   17d4c:	ldr	r3, [fp, #-8]
   17d50:	mov	r2, #0
   17d54:	str	r2, [r3]
   17d58:	nop	{0}
   17d5c:	sub	sp, fp, #4
   17d60:	ldr	fp, [sp]
   17d64:	add	sp, sp, #4
   17d68:	pop	{pc}		; (ldr pc, [sp], #4)
   17d6c:	andeq	r7, r0, ip, ror r2
   17d70:	andeq	r7, r0, r0, asr r1
   17d74:	andeq	r7, r0, r0, asr #3

00017d78 <codadump_filter_get_fieldname@@Base>:
   17d78:	str	fp, [sp, #-8]!
   17d7c:	str	lr, [sp, #4]
   17d80:	add	fp, sp, #4
   17d84:	sub	sp, sp, #8
   17d88:	str	r0, [fp, #-8]
   17d8c:	ldr	r3, [fp, #-8]
   17d90:	cmp	r3, #0
   17d94:	bne	17db8 <codadump_filter_get_fieldname@@Base+0x40>
   17d98:	ldr	r3, [pc, #52]	; 17dd4 <codadump_filter_get_fieldname@@Base+0x5c>
   17d9c:	add	r3, pc, r3
   17da0:	mov	r2, #216	; 0xd8
   17da4:	ldr	r1, [pc, #44]	; 17dd8 <codadump_filter_get_fieldname@@Base+0x60>
   17da8:	add	r1, pc, r1
   17dac:	ldr	r0, [pc, #40]	; 17ddc <codadump_filter_get_fieldname@@Base+0x64>
   17db0:	add	r0, pc, r0
   17db4:	bl	12638 <__assert_fail@plt>
   17db8:	ldr	r3, [fp, #-8]
   17dbc:	ldr	r3, [r3]
   17dc0:	mov	r0, r3
   17dc4:	sub	sp, fp, #4
   17dc8:	ldr	fp, [sp]
   17dcc:	add	sp, sp, #4
   17dd0:	pop	{pc}		; (ldr pc, [sp], #4)
   17dd4:	andeq	r7, r0, r0, lsl #3
   17dd8:	andeq	r7, r0, ip, lsr r0
   17ddc:	andeq	r7, r0, ip, lsr #1

00017de0 <codadump_filter_get_subfilter@@Base>:
   17de0:	str	fp, [sp, #-8]!
   17de4:	str	lr, [sp, #4]
   17de8:	add	fp, sp, #4
   17dec:	sub	sp, sp, #8
   17df0:	str	r0, [fp, #-8]
   17df4:	ldr	r3, [fp, #-8]
   17df8:	cmp	r3, #0
   17dfc:	bne	17e20 <codadump_filter_get_subfilter@@Base+0x40>
   17e00:	ldr	r3, [pc, #52]	; 17e3c <codadump_filter_get_subfilter@@Base+0x5c>
   17e04:	add	r3, pc, r3
   17e08:	mov	r2, #223	; 0xdf
   17e0c:	ldr	r1, [pc, #44]	; 17e40 <codadump_filter_get_subfilter@@Base+0x60>
   17e10:	add	r1, pc, r1
   17e14:	ldr	r0, [pc, #40]	; 17e44 <codadump_filter_get_subfilter@@Base+0x64>
   17e18:	add	r0, pc, r0
   17e1c:	bl	12638 <__assert_fail@plt>
   17e20:	ldr	r3, [fp, #-8]
   17e24:	ldr	r3, [r3, #4]
   17e28:	mov	r0, r3
   17e2c:	sub	sp, fp, #4
   17e30:	ldr	fp, [sp]
   17e34:	add	sp, sp, #4
   17e38:	pop	{pc}		; (ldr pc, [sp], #4)
   17e3c:	andeq	r7, r0, r8, lsr r1
   17e40:	ldrdeq	r6, [r0], -r4
   17e44:	andeq	r7, r0, r4, asr #32

00017e48 <codadump_filter_get_next_filter@@Base>:
   17e48:	str	fp, [sp, #-8]!
   17e4c:	str	lr, [sp, #4]
   17e50:	add	fp, sp, #4
   17e54:	sub	sp, sp, #8
   17e58:	str	r0, [fp, #-8]
   17e5c:	ldr	r3, [fp, #-8]
   17e60:	cmp	r3, #0
   17e64:	bne	17e88 <codadump_filter_get_next_filter@@Base+0x40>
   17e68:	ldr	r3, [pc, #52]	; 17ea4 <codadump_filter_get_next_filter@@Base+0x5c>
   17e6c:	add	r3, pc, r3
   17e70:	mov	r2, #230	; 0xe6
   17e74:	ldr	r1, [pc, #44]	; 17ea8 <codadump_filter_get_next_filter@@Base+0x60>
   17e78:	add	r1, pc, r1
   17e7c:	ldr	r0, [pc, #40]	; 17eac <codadump_filter_get_next_filter@@Base+0x64>
   17e80:	add	r0, pc, r0
   17e84:	bl	12638 <__assert_fail@plt>
   17e88:	ldr	r3, [fp, #-8]
   17e8c:	ldr	r3, [r3, #8]
   17e90:	mov	r0, r3
   17e94:	sub	sp, fp, #4
   17e98:	ldr	fp, [sp]
   17e9c:	add	sp, sp, #4
   17ea0:	pop	{pc}		; (ldr pc, [sp], #4)
   17ea4:	strdeq	r7, [r0], -r0
   17ea8:	andeq	r6, r0, ip, ror #30
   17eac:	ldrdeq	r6, [r0], -ip
   17eb0:	push	{r0, r1, r2, r3}
   17eb4:	str	fp, [sp, #-8]!
   17eb8:	str	lr, [sp, #4]
   17ebc:	add	fp, sp, #4
   17ec0:	sub	sp, sp, #8
   17ec4:	ldr	r2, [pc, #72]	; 17f14 <codadump_filter_get_next_filter@@Base+0xcc>
   17ec8:	add	r2, pc, r2
   17ecc:	add	r3, fp, #8
   17ed0:	str	r3, [fp, #-12]
   17ed4:	ldr	r3, [pc, #60]	; 17f18 <codadump_filter_get_next_filter@@Base+0xd0>
   17ed8:	ldr	r3, [r2, r3]
   17edc:	ldr	r3, [r3]
   17ee0:	ldr	r2, [fp, #-12]
   17ee4:	ldr	r1, [fp, #4]
   17ee8:	mov	r0, r3
   17eec:	bl	12530 <vfprintf@plt>
   17ef0:	str	r0, [fp, #-8]
   17ef4:	ldr	r3, [fp, #-8]
   17ef8:	mov	r0, r3
   17efc:	sub	sp, fp, #4
   17f00:	ldr	fp, [sp]
   17f04:	ldr	lr, [sp, #4]
   17f08:	add	sp, sp, #8
   17f0c:	add	sp, sp, #16
   17f10:	bx	lr
   17f14:	andeq	r9, r1, r0, lsr r1
   17f18:			; <UNDEFINED> instruction: 0x000001bc
   17f1c:	str	fp, [sp, #-8]!
   17f20:	str	lr, [sp, #4]
   17f24:	add	fp, sp, #4
   17f28:	sub	sp, sp, #16
   17f2c:	str	r0, [fp, #-16]
   17f30:	str	r1, [fp, #-20]	; 0xffffffec
   17f34:	mov	r3, #0
   17f38:	str	r3, [fp, #-8]
   17f3c:	b	18084 <codadump_filter_get_next_filter@@Base+0x23c>
   17f40:	ldr	r3, [fp, #-8]
   17f44:	ldr	r2, [fp, #-16]
   17f48:	add	r3, r2, r3
   17f4c:	ldrb	r3, [r3]
   17f50:	strb	r3, [fp, #-9]
   17f54:	ldrb	r3, [fp, #-9]
   17f58:	cmp	r3, #12
   17f5c:	beq	17fb4 <codadump_filter_get_next_filter@@Base+0x16c>
   17f60:	cmp	r3, #12
   17f64:	bgt	17f84 <codadump_filter_get_next_filter@@Base+0x13c>
   17f68:	cmp	r3, #9
   17f6c:	beq	17ff0 <codadump_filter_get_next_filter@@Base+0x1a8>
   17f70:	cmp	r3, #10
   17f74:	beq	17fc8 <codadump_filter_get_next_filter@@Base+0x180>
   17f78:	cmp	r3, #8
   17f7c:	beq	17fa0 <codadump_filter_get_next_filter@@Base+0x158>
   17f80:	b	1802c <codadump_filter_get_next_filter@@Base+0x1e4>
   17f84:	cmp	r3, #34	; 0x22
   17f88:	beq	18004 <codadump_filter_get_next_filter@@Base+0x1bc>
   17f8c:	cmp	r3, #92	; 0x5c
   17f90:	beq	18018 <codadump_filter_get_next_filter@@Base+0x1d0>
   17f94:	cmp	r3, #13
   17f98:	beq	17fdc <codadump_filter_get_next_filter@@Base+0x194>
   17f9c:	b	1802c <codadump_filter_get_next_filter@@Base+0x1e4>
   17fa0:	ldr	r3, [pc, #256]	; 180a8 <codadump_filter_get_next_filter@@Base+0x260>
   17fa4:	add	r3, pc, r3
   17fa8:	mov	r0, r3
   17fac:	bl	17eb0 <codadump_filter_get_next_filter@@Base+0x68>
   17fb0:	b	18078 <codadump_filter_get_next_filter@@Base+0x230>
   17fb4:	ldr	r3, [pc, #240]	; 180ac <codadump_filter_get_next_filter@@Base+0x264>
   17fb8:	add	r3, pc, r3
   17fbc:	mov	r0, r3
   17fc0:	bl	17eb0 <codadump_filter_get_next_filter@@Base+0x68>
   17fc4:	b	18078 <codadump_filter_get_next_filter@@Base+0x230>
   17fc8:	ldr	r3, [pc, #224]	; 180b0 <codadump_filter_get_next_filter@@Base+0x268>
   17fcc:	add	r3, pc, r3
   17fd0:	mov	r0, r3
   17fd4:	bl	17eb0 <codadump_filter_get_next_filter@@Base+0x68>
   17fd8:	b	18078 <codadump_filter_get_next_filter@@Base+0x230>
   17fdc:	ldr	r3, [pc, #208]	; 180b4 <codadump_filter_get_next_filter@@Base+0x26c>
   17fe0:	add	r3, pc, r3
   17fe4:	mov	r0, r3
   17fe8:	bl	17eb0 <codadump_filter_get_next_filter@@Base+0x68>
   17fec:	b	18078 <codadump_filter_get_next_filter@@Base+0x230>
   17ff0:	ldr	r3, [pc, #192]	; 180b8 <codadump_filter_get_next_filter@@Base+0x270>
   17ff4:	add	r3, pc, r3
   17ff8:	mov	r0, r3
   17ffc:	bl	17eb0 <codadump_filter_get_next_filter@@Base+0x68>
   18000:	b	18078 <codadump_filter_get_next_filter@@Base+0x230>
   18004:	ldr	r3, [pc, #176]	; 180bc <codadump_filter_get_next_filter@@Base+0x274>
   18008:	add	r3, pc, r3
   1800c:	mov	r0, r3
   18010:	bl	17eb0 <codadump_filter_get_next_filter@@Base+0x68>
   18014:	b	18078 <codadump_filter_get_next_filter@@Base+0x230>
   18018:	ldr	r3, [pc, #160]	; 180c0 <codadump_filter_get_next_filter@@Base+0x278>
   1801c:	add	r3, pc, r3
   18020:	mov	r0, r3
   18024:	bl	17eb0 <codadump_filter_get_next_filter@@Base+0x68>
   18028:	b	18078 <codadump_filter_get_next_filter@@Base+0x230>
   1802c:	ldrb	r3, [fp, #-9]
   18030:	cmp	r3, #31
   18034:	bls	18060 <codadump_filter_get_next_filter@@Base+0x218>
   18038:	ldrb	r3, [fp, #-9]
   1803c:	cmp	r3, #126	; 0x7e
   18040:	bhi	18060 <codadump_filter_get_next_filter@@Base+0x218>
   18044:	ldrb	r3, [fp, #-9]
   18048:	mov	r1, r3
   1804c:	ldr	r3, [pc, #112]	; 180c4 <codadump_filter_get_next_filter@@Base+0x27c>
   18050:	add	r3, pc, r3
   18054:	mov	r0, r3
   18058:	bl	17eb0 <codadump_filter_get_next_filter@@Base+0x68>
   1805c:	b	18078 <codadump_filter_get_next_filter@@Base+0x230>
   18060:	ldrb	r3, [fp, #-9]
   18064:	mov	r1, r3
   18068:	ldr	r3, [pc, #88]	; 180c8 <codadump_filter_get_next_filter@@Base+0x280>
   1806c:	add	r3, pc, r3
   18070:	mov	r0, r3
   18074:	bl	17eb0 <codadump_filter_get_next_filter@@Base+0x68>
   18078:	ldr	r3, [fp, #-8]
   1807c:	add	r3, r3, #1
   18080:	str	r3, [fp, #-8]
   18084:	ldr	r2, [fp, #-8]
   18088:	ldr	r3, [fp, #-20]	; 0xffffffec
   1808c:	cmp	r2, r3
   18090:	blt	17f40 <codadump_filter_get_next_filter@@Base+0xf8>
   18094:	nop	{0}
   18098:	sub	sp, fp, #4
   1809c:	ldr	fp, [sp]
   180a0:	add	sp, sp, #4
   180a4:	pop	{pc}		; (ldr pc, [sp], #4)
   180a8:	ldrdeq	r6, [r0], -r8
   180ac:	andeq	r6, r0, r8, asr #31
   180b0:			; <UNDEFINED> instruction: 0x00006fb8
   180b4:	andeq	r6, r0, r8, lsr #31
   180b8:	muleq	r0, r8, pc	; <UNPREDICTABLE>
   180bc:	andeq	r6, r0, r8, lsl #31
   180c0:	andeq	r6, r0, r8, ror pc
   180c4:	andeq	r6, r0, r8, asr #30
   180c8:	andeq	r6, r0, r0, lsr pc
   180cc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   180d0:	strd	r6, [sp, #8]
   180d4:	strd	r8, [sp, #16]
   180d8:	str	fp, [sp, #24]
   180dc:	str	lr, [sp, #28]
   180e0:	add	fp, sp, #28
   180e4:	sub	sp, sp, #288	; 0x120
   180e8:	str	r0, [fp, #-304]	; 0xfffffed0
   180ec:	mov	r3, #0
   180f0:	str	r3, [fp, #-64]	; 0xffffffc0
   180f4:	ldr	r3, [pc, #2692]	; 18b80 <codadump_filter_get_next_filter@@Base+0xd38>
   180f8:	add	r3, pc, r3
   180fc:	ldr	r3, [r3]
   18100:	cmp	r3, #0
   18104:	beq	1817c <codadump_filter_get_next_filter@@Base+0x334>
   18108:	sub	r3, fp, #64	; 0x40
   1810c:	mov	r1, r3
   18110:	ldr	r0, [fp, #-304]	; 0xfffffed0
   18114:	bl	122f0 <coda_cursor_has_attributes@plt>
   18118:	mov	r3, r0
   1811c:	cmp	r3, #0
   18120:	beq	18128 <codadump_filter_get_next_filter@@Base+0x2e0>
   18124:	bl	1bdc8 <handle_coda_error@@Base>
   18128:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1812c:	cmp	r3, #0
   18130:	beq	1817c <codadump_filter_get_next_filter@@Base+0x334>
   18134:	ldr	r3, [pc, #2632]	; 18b84 <codadump_filter_get_next_filter@@Base+0xd3c>
   18138:	add	r3, pc, r3
   1813c:	mov	r0, r3
   18140:	bl	17eb0 <codadump_filter_get_next_filter@@Base+0x68>
   18144:	ldr	r0, [fp, #-304]	; 0xfffffed0
   18148:	bl	12470 <coda_cursor_goto_attributes@plt>
   1814c:	mov	r3, r0
   18150:	cmp	r3, #0
   18154:	beq	1815c <codadump_filter_get_next_filter@@Base+0x314>
   18158:	bl	1bdc8 <handle_coda_error@@Base>
   1815c:	ldr	r0, [fp, #-304]	; 0xfffffed0
   18160:	bl	180cc <codadump_filter_get_next_filter@@Base+0x284>
   18164:	ldr	r0, [fp, #-304]	; 0xfffffed0
   18168:	bl	123d4 <coda_cursor_goto_parent@plt>
   1816c:	ldr	r3, [pc, #2580]	; 18b88 <codadump_filter_get_next_filter@@Base+0xd40>
   18170:	add	r3, pc, r3
   18174:	mov	r0, r3
   18178:	bl	17eb0 <codadump_filter_get_next_filter@@Base+0x68>
   1817c:	sub	r3, fp, #60	; 0x3c
   18180:	mov	r1, r3
   18184:	ldr	r0, [fp, #-304]	; 0xfffffed0
   18188:	bl	122fc <coda_cursor_get_type_class@plt>
   1818c:	mov	r3, r0
   18190:	cmp	r3, #0
   18194:	beq	1819c <codadump_filter_get_next_filter@@Base+0x354>
   18198:	bl	1bdc8 <handle_coda_error@@Base>
   1819c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   181a0:	cmp	r3, #6
   181a4:	addls	pc, pc, r3, lsl #2
   181a8:	b	18b44 <codadump_filter_get_next_filter@@Base+0xcfc>
   181ac:	b	181c8 <codadump_filter_get_next_filter@@Base+0x380>
   181b0:	b	18410 <codadump_filter_get_next_filter@@Base+0x5c8>
   181b4:	b	1854c <codadump_filter_get_next_filter@@Base+0x704>
   181b8:	b	1854c <codadump_filter_get_next_filter@@Base+0x704>
   181bc:	b	1854c <codadump_filter_get_next_filter@@Base+0x704>
   181c0:	b	1854c <codadump_filter_get_next_filter@@Base+0x704>
   181c4:	b	18990 <codadump_filter_get_next_filter@@Base+0xb48>
   181c8:	ldr	r3, [pc, #2492]	; 18b8c <codadump_filter_get_next_filter@@Base+0xd44>
   181cc:	add	r3, pc, r3
   181d0:	mov	r0, r3
   181d4:	bl	17eb0 <codadump_filter_get_next_filter@@Base+0x68>
   181d8:	sub	r3, fp, #68	; 0x44
   181dc:	mov	r1, r3
   181e0:	ldr	r0, [fp, #-304]	; 0xfffffed0
   181e4:	bl	12254 <coda_cursor_get_num_elements@plt>
   181e8:	mov	r3, r0
   181ec:	cmp	r3, #0
   181f0:	beq	181f8 <codadump_filter_get_next_filter@@Base+0x3b0>
   181f4:	bl	1bdc8 <handle_coda_error@@Base>
   181f8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   181fc:	cmp	r3, #0
   18200:	ble	183fc <codadump_filter_get_next_filter@@Base+0x5b4>
   18204:	sub	r3, fp, #72	; 0x48
   18208:	mov	r1, r3
   1820c:	ldr	r0, [fp, #-304]	; 0xfffffed0
   18210:	bl	122b4 <coda_cursor_get_type@plt>
   18214:	mov	r3, r0
   18218:	cmp	r3, #0
   1821c:	beq	18224 <codadump_filter_get_next_filter@@Base+0x3dc>
   18220:	bl	1bdc8 <handle_coda_error@@Base>
   18224:	ldr	r3, [fp, #-72]	; 0xffffffb8
   18228:	sub	r2, fp, #76	; 0x4c
   1822c:	mov	r1, r2
   18230:	mov	r0, r3
   18234:	bl	124b8 <coda_type_get_record_union_status@plt>
   18238:	mov	r3, r0
   1823c:	cmp	r3, #0
   18240:	beq	18248 <codadump_filter_get_next_filter@@Base+0x400>
   18244:	bl	1bdc8 <handle_coda_error@@Base>
   18248:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1824c:	cmp	r3, #0
   18250:	beq	182e4 <codadump_filter_get_next_filter@@Base+0x49c>
   18254:	sub	r3, fp, #80	; 0x50
   18258:	mov	r1, r3
   1825c:	ldr	r0, [fp, #-304]	; 0xfffffed0
   18260:	bl	125b4 <coda_cursor_get_available_union_field_index@plt>
   18264:	mov	r3, r0
   18268:	cmp	r3, #0
   1826c:	beq	18274 <codadump_filter_get_next_filter@@Base+0x42c>
   18270:	bl	1bdc8 <handle_coda_error@@Base>
   18274:	ldr	r3, [fp, #-72]	; 0xffffffb8
   18278:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1827c:	sub	r2, fp, #84	; 0x54
   18280:	mov	r0, r3
   18284:	bl	125fc <coda_type_get_record_field_name@plt>
   18288:	mov	r3, r0
   1828c:	cmp	r3, #0
   18290:	beq	18298 <codadump_filter_get_next_filter@@Base+0x450>
   18294:	bl	1bdc8 <handle_coda_error@@Base>
   18298:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1829c:	mov	r1, r3
   182a0:	ldr	r0, [fp, #-304]	; 0xfffffed0
   182a4:	bl	12374 <coda_cursor_goto_record_field_by_index@plt>
   182a8:	mov	r3, r0
   182ac:	cmp	r3, #0
   182b0:	beq	182b8 <codadump_filter_get_next_filter@@Base+0x470>
   182b4:	bl	1bdc8 <handle_coda_error@@Base>
   182b8:	ldr	r3, [fp, #-84]	; 0xffffffac
   182bc:	mov	r1, r3
   182c0:	ldr	r3, [pc, #2248]	; 18b90 <codadump_filter_get_next_filter@@Base+0xd48>
   182c4:	add	r3, pc, r3
   182c8:	mov	r0, r3
   182cc:	bl	17eb0 <codadump_filter_get_next_filter@@Base+0x68>
   182d0:	ldr	r0, [fp, #-304]	; 0xfffffed0
   182d4:	bl	180cc <codadump_filter_get_next_filter@@Base+0x284>
   182d8:	ldr	r0, [fp, #-304]	; 0xfffffed0
   182dc:	bl	123d4 <coda_cursor_goto_parent@plt>
   182e0:	b	183fc <codadump_filter_get_next_filter@@Base+0x5b4>
   182e4:	mov	r3, #1
   182e8:	str	r3, [fp, #-32]	; 0xffffffe0
   182ec:	ldr	r0, [fp, #-304]	; 0xfffffed0
   182f0:	bl	12368 <coda_cursor_goto_first_record_field@plt>
   182f4:	mov	r3, r0
   182f8:	cmp	r3, #0
   182fc:	beq	18304 <codadump_filter_get_next_filter@@Base+0x4bc>
   18300:	bl	1bdc8 <handle_coda_error@@Base>
   18304:	mov	r3, #0
   18308:	str	r3, [fp, #-80]	; 0xffffffb0
   1830c:	b	183e4 <codadump_filter_get_next_filter@@Base+0x59c>
   18310:	ldr	r3, [fp, #-72]	; 0xffffffb8
   18314:	ldr	r1, [fp, #-80]	; 0xffffffb0
   18318:	sub	r2, fp, #92	; 0x5c
   1831c:	mov	r0, r3
   18320:	bl	121f4 <coda_type_get_record_field_hidden_status@plt>
   18324:	mov	r3, r0
   18328:	cmp	r3, #0
   1832c:	beq	18334 <codadump_filter_get_next_filter@@Base+0x4ec>
   18330:	bl	1bdc8 <handle_coda_error@@Base>
   18334:	ldr	r3, [fp, #-92]	; 0xffffffa4
   18338:	cmp	r3, #0
   1833c:	bne	183ac <codadump_filter_get_next_filter@@Base+0x564>
   18340:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18344:	cmp	r3, #0
   18348:	bne	18360 <codadump_filter_get_next_filter@@Base+0x518>
   1834c:	ldr	r3, [pc, #2112]	; 18b94 <codadump_filter_get_next_filter@@Base+0xd4c>
   18350:	add	r3, pc, r3
   18354:	mov	r0, r3
   18358:	bl	17eb0 <codadump_filter_get_next_filter@@Base+0x68>
   1835c:	b	18368 <codadump_filter_get_next_filter@@Base+0x520>
   18360:	mov	r3, #0
   18364:	str	r3, [fp, #-32]	; 0xffffffe0
   18368:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1836c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   18370:	sub	r2, fp, #88	; 0x58
   18374:	mov	r0, r3
   18378:	bl	125fc <coda_type_get_record_field_name@plt>
   1837c:	mov	r3, r0
   18380:	cmp	r3, #0
   18384:	beq	1838c <codadump_filter_get_next_filter@@Base+0x544>
   18388:	bl	1bdc8 <handle_coda_error@@Base>
   1838c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   18390:	mov	r1, r3
   18394:	ldr	r3, [pc, #2044]	; 18b98 <codadump_filter_get_next_filter@@Base+0xd50>
   18398:	add	r3, pc, r3
   1839c:	mov	r0, r3
   183a0:	bl	17eb0 <codadump_filter_get_next_filter@@Base+0x68>
   183a4:	ldr	r0, [fp, #-304]	; 0xfffffed0
   183a8:	bl	180cc <codadump_filter_get_next_filter@@Base+0x284>
   183ac:	ldr	r3, [fp, #-68]	; 0xffffffbc
   183b0:	sub	r2, r3, #1
   183b4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   183b8:	cmp	r2, r3
   183bc:	ble	183d8 <codadump_filter_get_next_filter@@Base+0x590>
   183c0:	ldr	r0, [fp, #-304]	; 0xfffffed0
   183c4:	bl	12560 <coda_cursor_goto_next_record_field@plt>
   183c8:	mov	r3, r0
   183cc:	cmp	r3, #0
   183d0:	beq	183d8 <codadump_filter_get_next_filter@@Base+0x590>
   183d4:	bl	1bdc8 <handle_coda_error@@Base>
   183d8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   183dc:	add	r3, r3, #1
   183e0:	str	r3, [fp, #-80]	; 0xffffffb0
   183e4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   183e8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   183ec:	cmp	r2, r3
   183f0:	blt	18310 <codadump_filter_get_next_filter@@Base+0x4c8>
   183f4:	ldr	r0, [fp, #-304]	; 0xfffffed0
   183f8:	bl	123d4 <coda_cursor_goto_parent@plt>
   183fc:	ldr	r3, [pc, #1944]	; 18b9c <codadump_filter_get_next_filter@@Base+0xd54>
   18400:	add	r3, pc, r3
   18404:	mov	r0, r3
   18408:	bl	17eb0 <codadump_filter_get_next_filter@@Base+0x68>
   1840c:	b	18b44 <codadump_filter_get_next_filter@@Base+0xcfc>
   18410:	ldr	r3, [pc, #1928]	; 18ba0 <codadump_filter_get_next_filter@@Base+0xd58>
   18414:	add	r3, pc, r3
   18418:	mov	r0, r3
   1841c:	bl	17eb0 <codadump_filter_get_next_filter@@Base+0x68>
   18420:	sub	r2, fp, #300	; 0x12c
   18424:	sub	r3, fp, #96	; 0x60
   18428:	mov	r1, r3
   1842c:	ldr	r0, [fp, #-304]	; 0xfffffed0
   18430:	bl	12500 <coda_cursor_get_array_dim@plt>
   18434:	mov	r3, r0
   18438:	cmp	r3, #0
   1843c:	beq	18444 <codadump_filter_get_next_filter@@Base+0x5fc>
   18440:	bl	1bdc8 <handle_coda_error@@Base>
   18444:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18448:	cmp	r3, #0
   1844c:	blt	18538 <codadump_filter_get_next_filter@@Base+0x6f0>
   18450:	mov	r3, #1
   18454:	str	r3, [fp, #-36]	; 0xffffffdc
   18458:	mov	r3, #0
   1845c:	str	r3, [fp, #-40]	; 0xffffffd8
   18460:	b	18490 <codadump_filter_get_next_filter@@Base+0x648>
   18464:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18468:	lsl	r3, r3, #2
   1846c:	sub	r2, fp, #28
   18470:	add	r3, r2, r3
   18474:	ldr	r2, [r3, #-272]	; 0xfffffef0
   18478:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1847c:	mul	r3, r2, r3
   18480:	str	r3, [fp, #-36]	; 0xffffffdc
   18484:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18488:	add	r3, r3, #1
   1848c:	str	r3, [fp, #-40]	; 0xffffffd8
   18490:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18494:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18498:	cmp	r2, r3
   1849c:	blt	18464 <codadump_filter_get_next_filter@@Base+0x61c>
   184a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   184a4:	cmp	r3, #0
   184a8:	ble	18538 <codadump_filter_get_next_filter@@Base+0x6f0>
   184ac:	ldr	r0, [fp, #-304]	; 0xfffffed0
   184b0:	bl	12344 <coda_cursor_goto_first_array_element@plt>
   184b4:	mov	r3, r0
   184b8:	cmp	r3, #0
   184bc:	beq	184c4 <codadump_filter_get_next_filter@@Base+0x67c>
   184c0:	bl	1bdc8 <handle_coda_error@@Base>
   184c4:	mov	r3, #0
   184c8:	str	r3, [fp, #-40]	; 0xffffffd8
   184cc:	b	18520 <codadump_filter_get_next_filter@@Base+0x6d8>
   184d0:	ldr	r0, [fp, #-304]	; 0xfffffed0
   184d4:	bl	180cc <codadump_filter_get_next_filter@@Base+0x284>
   184d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   184dc:	sub	r3, r3, #1
   184e0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   184e4:	cmp	r2, r3
   184e8:	bge	18514 <codadump_filter_get_next_filter@@Base+0x6cc>
   184ec:	ldr	r3, [pc, #1712]	; 18ba4 <codadump_filter_get_next_filter@@Base+0xd5c>
   184f0:	add	r3, pc, r3
   184f4:	mov	r0, r3
   184f8:	bl	17eb0 <codadump_filter_get_next_filter@@Base+0x68>
   184fc:	ldr	r0, [fp, #-304]	; 0xfffffed0
   18500:	bl	12440 <coda_cursor_goto_next_array_element@plt>
   18504:	mov	r3, r0
   18508:	cmp	r3, #0
   1850c:	beq	18514 <codadump_filter_get_next_filter@@Base+0x6cc>
   18510:	bl	1bdc8 <handle_coda_error@@Base>
   18514:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18518:	add	r3, r3, #1
   1851c:	str	r3, [fp, #-40]	; 0xffffffd8
   18520:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18524:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18528:	cmp	r2, r3
   1852c:	blt	184d0 <codadump_filter_get_next_filter@@Base+0x688>
   18530:	ldr	r0, [fp, #-304]	; 0xfffffed0
   18534:	bl	123d4 <coda_cursor_goto_parent@plt>
   18538:	ldr	r3, [pc, #1640]	; 18ba8 <codadump_filter_get_next_filter@@Base+0xd60>
   1853c:	add	r3, pc, r3
   18540:	mov	r0, r3
   18544:	bl	17eb0 <codadump_filter_get_next_filter@@Base+0x68>
   18548:	b	18b44 <codadump_filter_get_next_filter@@Base+0xcfc>
   1854c:	sub	r3, fp, #100	; 0x64
   18550:	mov	r1, r3
   18554:	ldr	r0, [fp, #-304]	; 0xfffffed0
   18558:	bl	12398 <coda_cursor_get_read_type@plt>
   1855c:	mov	r3, r0
   18560:	cmp	r3, #0
   18564:	beq	1856c <codadump_filter_get_next_filter@@Base+0x724>
   18568:	bl	1bdc8 <handle_coda_error@@Base>
   1856c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18570:	add	r3, r3, #1
   18574:	cmp	r3, #13
   18578:	addls	pc, pc, r3, lsl #2
   1857c:	b	18b38 <codadump_filter_get_next_filter@@Base+0xcf0>
   18580:	b	18978 <codadump_filter_get_next_filter@@Base+0xb30>
   18584:	b	1880c <codadump_filter_get_next_filter@@Base+0x9c4>
   18588:	b	18848 <codadump_filter_get_next_filter@@Base+0xa00>
   1858c:	b	1880c <codadump_filter_get_next_filter@@Base+0x9c4>
   18590:	b	18848 <codadump_filter_get_next_filter@@Base+0xa00>
   18594:	b	1880c <codadump_filter_get_next_filter@@Base+0x9c4>
   18598:	b	18848 <codadump_filter_get_next_filter@@Base+0xa00>
   1859c:	b	18884 <codadump_filter_get_next_filter@@Base+0xa3c>
   185a0:	b	188d0 <codadump_filter_get_next_filter@@Base+0xa88>
   185a4:	b	1891c <codadump_filter_get_next_filter@@Base+0xad4>
   185a8:	b	1891c <codadump_filter_get_next_filter@@Base+0xad4>
   185ac:	b	185b8 <codadump_filter_get_next_filter@@Base+0x770>
   185b0:	b	1860c <codadump_filter_get_next_filter@@Base+0x7c4>
   185b4:	b	186e8 <codadump_filter_get_next_filter@@Base+0x8a0>
   185b8:	sub	r3, fp, #101	; 0x65
   185bc:	mov	r1, r3
   185c0:	ldr	r0, [fp, #-304]	; 0xfffffed0
   185c4:	bl	1247c <coda_cursor_read_char@plt>
   185c8:	mov	r3, r0
   185cc:	cmp	r3, #0
   185d0:	beq	185d8 <codadump_filter_get_next_filter@@Base+0x790>
   185d4:	bl	1bdc8 <handle_coda_error@@Base>
   185d8:	ldr	r3, [pc, #1484]	; 18bac <codadump_filter_get_next_filter@@Base+0xd64>
   185dc:	add	r3, pc, r3
   185e0:	mov	r0, r3
   185e4:	bl	17eb0 <codadump_filter_get_next_filter@@Base+0x68>
   185e8:	sub	r3, fp, #101	; 0x65
   185ec:	mov	r1, #1
   185f0:	mov	r0, r3
   185f4:	bl	17f1c <codadump_filter_get_next_filter@@Base+0xd4>
   185f8:	ldr	r3, [pc, #1456]	; 18bb0 <codadump_filter_get_next_filter@@Base+0xd68>
   185fc:	add	r3, pc, r3
   18600:	mov	r0, r3
   18604:	bl	17eb0 <codadump_filter_get_next_filter@@Base+0x68>
   18608:	b	1898c <codadump_filter_get_next_filter@@Base+0xb44>
   1860c:	sub	r3, fp, #108	; 0x6c
   18610:	mov	r1, r3
   18614:	ldr	r0, [fp, #-304]	; 0xfffffed0
   18618:	bl	12404 <coda_cursor_get_string_length@plt>
   1861c:	mov	r3, r0
   18620:	cmp	r3, #0
   18624:	beq	1862c <codadump_filter_get_next_filter@@Base+0x7e4>
   18628:	bl	1bdc8 <handle_coda_error@@Base>
   1862c:	ldr	r3, [fp, #-108]	; 0xffffff94
   18630:	add	r3, r3, #1
   18634:	mov	r0, r3
   18638:	bl	123a4 <malloc@plt>
   1863c:	mov	r3, r0
   18640:	str	r3, [fp, #-44]	; 0xffffffd4
   18644:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18648:	cmp	r3, #0
   1864c:	bne	1867c <codadump_filter_get_next_filter@@Base+0x834>
   18650:	ldr	r3, [fp, #-108]	; 0xffffff94
   18654:	add	r2, r3, #1
   18658:	movw	r3, #303	; 0x12f
   1865c:	str	r3, [sp]
   18660:	ldr	r3, [pc, #1356]	; 18bb4 <codadump_filter_get_next_filter@@Base+0xd6c>
   18664:	add	r3, pc, r3
   18668:	ldr	r1, [pc, #1352]	; 18bb8 <codadump_filter_get_next_filter@@Base+0xd70>
   1866c:	add	r1, pc, r1
   18670:	mvn	r0, #0
   18674:	bl	12224 <coda_set_error@plt>
   18678:	bl	1bdc8 <handle_coda_error@@Base>
   1867c:	ldr	r3, [fp, #-108]	; 0xffffff94
   18680:	add	r3, r3, #1
   18684:	mov	r2, r3
   18688:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1868c:	ldr	r0, [fp, #-304]	; 0xfffffed0
   18690:	bl	123c8 <coda_cursor_read_string@plt>
   18694:	mov	r3, r0
   18698:	cmp	r3, #0
   1869c:	beq	186a4 <codadump_filter_get_next_filter@@Base+0x85c>
   186a0:	bl	1bdc8 <handle_coda_error@@Base>
   186a4:	ldr	r3, [pc, #1296]	; 18bbc <codadump_filter_get_next_filter@@Base+0xd74>
   186a8:	add	r3, pc, r3
   186ac:	mov	r0, r3
   186b0:	bl	17eb0 <codadump_filter_get_next_filter@@Base+0x68>
   186b4:	ldr	r3, [fp, #-108]	; 0xffffff94
   186b8:	mov	r1, r3
   186bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   186c0:	bl	17f1c <codadump_filter_get_next_filter@@Base+0xd4>
   186c4:	ldr	r3, [fp, #-108]	; 0xffffff94
   186c8:	mov	r1, r3
   186cc:	ldr	r3, [pc, #1260]	; 18bc0 <codadump_filter_get_next_filter@@Base+0xd78>
   186d0:	add	r3, pc, r3
   186d4:	mov	r0, r3
   186d8:	bl	17eb0 <codadump_filter_get_next_filter@@Base+0x68>
   186dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   186e0:	bl	1226c <free@plt>
   186e4:	b	1898c <codadump_filter_get_next_filter@@Base+0xb44>
   186e8:	sub	r3, fp, #116	; 0x74
   186ec:	mov	r1, r3
   186f0:	ldr	r0, [fp, #-304]	; 0xfffffed0
   186f4:	bl	12584 <coda_cursor_get_bit_size@plt>
   186f8:	mov	r3, r0
   186fc:	cmp	r3, #0
   18700:	beq	18708 <codadump_filter_get_next_filter@@Base+0x8c0>
   18704:	bl	1bdc8 <handle_coda_error@@Base>
   18708:	ldrd	r0, [fp, #-116]	; 0xffffff8c
   1870c:	mov	r2, #0
   18710:	mov	r3, #0
   18714:	lsr	r2, r0, #3
   18718:	orr	r2, r2, r1, lsl #29
   1871c:	asr	r3, r1, #3
   18720:	ldrd	r0, [fp, #-116]	; 0xffffff8c
   18724:	mov	r8, #7
   18728:	mov	r9, #0
   1872c:	and	r6, r0, r8
   18730:	and	r7, r1, r9
   18734:	orrs	r1, r6, r7
   18738:	beq	18748 <codadump_filter_get_next_filter@@Base+0x900>
   1873c:	mov	r0, #1
   18740:	mov	r1, #0
   18744:	b	18750 <codadump_filter_get_next_filter@@Base+0x908>
   18748:	mov	r0, #0
   1874c:	mov	r1, #0
   18750:	adds	r4, r0, r2
   18754:	adc	r5, r1, r3
   18758:	strd	r4, [fp, #-52]	; 0xffffffcc
   1875c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18760:	mov	r0, r3
   18764:	bl	123a4 <malloc@plt>
   18768:	mov	r3, r0
   1876c:	str	r3, [fp, #-56]	; 0xffffffc8
   18770:	ldr	r3, [fp, #-56]	; 0xffffffc8
   18774:	cmp	r3, #0
   18778:	bne	187a4 <codadump_filter_get_next_filter@@Base+0x95c>
   1877c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   18780:	movw	r3, #334	; 0x14e
   18784:	str	r3, [sp]
   18788:	ldr	r3, [pc, #1076]	; 18bc4 <codadump_filter_get_next_filter@@Base+0xd7c>
   1878c:	add	r3, pc, r3
   18790:	ldr	r1, [pc, #1072]	; 18bc8 <codadump_filter_get_next_filter@@Base+0xd80>
   18794:	add	r1, pc, r1
   18798:	mvn	r0, #0
   1879c:	bl	12224 <coda_set_error@plt>
   187a0:	bl	1bdc8 <handle_coda_error@@Base>
   187a4:	ldrd	r2, [fp, #-116]	; 0xffffff8c
   187a8:	strd	r2, [sp]
   187ac:	mov	r2, #0
   187b0:	mov	r3, #0
   187b4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   187b8:	ldr	r0, [fp, #-304]	; 0xfffffed0
   187bc:	bl	12620 <coda_cursor_read_bits@plt>
   187c0:	mov	r3, r0
   187c4:	cmp	r3, #0
   187c8:	beq	187d0 <codadump_filter_get_next_filter@@Base+0x988>
   187cc:	bl	1bdc8 <handle_coda_error@@Base>
   187d0:	ldr	r3, [pc, #1012]	; 18bcc <codadump_filter_get_next_filter@@Base+0xd84>
   187d4:	add	r3, pc, r3
   187d8:	mov	r0, r3
   187dc:	bl	17eb0 <codadump_filter_get_next_filter@@Base+0x68>
   187e0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   187e4:	mov	r1, r3
   187e8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   187ec:	bl	17f1c <codadump_filter_get_next_filter@@Base+0xd4>
   187f0:	ldr	r3, [pc, #984]	; 18bd0 <codadump_filter_get_next_filter@@Base+0xd88>
   187f4:	add	r3, pc, r3
   187f8:	mov	r0, r3
   187fc:	bl	17eb0 <codadump_filter_get_next_filter@@Base+0x68>
   18800:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18804:	bl	1226c <free@plt>
   18808:	b	1898c <codadump_filter_get_next_filter@@Base+0xb44>
   1880c:	sub	r3, fp, #120	; 0x78
   18810:	mov	r1, r3
   18814:	ldr	r0, [fp, #-304]	; 0xfffffed0
   18818:	bl	125c0 <coda_cursor_read_int32@plt>
   1881c:	mov	r3, r0
   18820:	cmp	r3, #0
   18824:	beq	1882c <codadump_filter_get_next_filter@@Base+0x9e4>
   18828:	bl	1bdc8 <handle_coda_error@@Base>
   1882c:	ldr	r3, [fp, #-120]	; 0xffffff88
   18830:	mov	r1, r3
   18834:	ldr	r3, [pc, #920]	; 18bd4 <codadump_filter_get_next_filter@@Base+0xd8c>
   18838:	add	r3, pc, r3
   1883c:	mov	r0, r3
   18840:	bl	17eb0 <codadump_filter_get_next_filter@@Base+0x68>
   18844:	b	1898c <codadump_filter_get_next_filter@@Base+0xb44>
   18848:	sub	r3, fp, #124	; 0x7c
   1884c:	mov	r1, r3
   18850:	ldr	r0, [fp, #-304]	; 0xfffffed0
   18854:	bl	12290 <coda_cursor_read_uint32@plt>
   18858:	mov	r3, r0
   1885c:	cmp	r3, #0
   18860:	beq	18868 <codadump_filter_get_next_filter@@Base+0xa20>
   18864:	bl	1bdc8 <handle_coda_error@@Base>
   18868:	ldr	r3, [fp, #-124]	; 0xffffff84
   1886c:	mov	r1, r3
   18870:	ldr	r3, [pc, #864]	; 18bd8 <codadump_filter_get_next_filter@@Base+0xd90>
   18874:	add	r3, pc, r3
   18878:	mov	r0, r3
   1887c:	bl	17eb0 <codadump_filter_get_next_filter@@Base+0x68>
   18880:	b	1898c <codadump_filter_get_next_filter@@Base+0xb44>
   18884:	sub	r3, fp, #132	; 0x84
   18888:	mov	r1, r3
   1888c:	ldr	r0, [fp, #-304]	; 0xfffffed0
   18890:	bl	12524 <coda_cursor_read_int64@plt>
   18894:	mov	r3, r0
   18898:	cmp	r3, #0
   1889c:	beq	188a4 <codadump_filter_get_next_filter@@Base+0xa5c>
   188a0:	bl	1bdc8 <handle_coda_error@@Base>
   188a4:	ldrd	r0, [fp, #-132]	; 0xffffff7c
   188a8:	sub	r3, fp, #156	; 0x9c
   188ac:	mov	r2, r3
   188b0:	bl	1262c <coda_str64@plt>
   188b4:	sub	r3, fp, #156	; 0x9c
   188b8:	mov	r1, r3
   188bc:	ldr	r3, [pc, #792]	; 18bdc <codadump_filter_get_next_filter@@Base+0xd94>
   188c0:	add	r3, pc, r3
   188c4:	mov	r0, r3
   188c8:	bl	17eb0 <codadump_filter_get_next_filter@@Base+0x68>
   188cc:	b	1898c <codadump_filter_get_next_filter@@Base+0xb44>
   188d0:	sub	r3, fp, #164	; 0xa4
   188d4:	mov	r1, r3
   188d8:	ldr	r0, [fp, #-304]	; 0xfffffed0
   188dc:	bl	12410 <coda_cursor_read_uint64@plt>
   188e0:	mov	r3, r0
   188e4:	cmp	r3, #0
   188e8:	beq	188f0 <codadump_filter_get_next_filter@@Base+0xaa8>
   188ec:	bl	1bdc8 <handle_coda_error@@Base>
   188f0:	ldrd	r0, [fp, #-164]	; 0xffffff5c
   188f4:	sub	r3, fp, #188	; 0xbc
   188f8:	mov	r2, r3
   188fc:	bl	12260 <coda_str64u@plt>
   18900:	sub	r3, fp, #188	; 0xbc
   18904:	mov	r1, r3
   18908:	ldr	r3, [pc, #720]	; 18be0 <codadump_filter_get_next_filter@@Base+0xd98>
   1890c:	add	r3, pc, r3
   18910:	mov	r0, r3
   18914:	bl	17eb0 <codadump_filter_get_next_filter@@Base+0x68>
   18918:	b	1898c <codadump_filter_get_next_filter@@Base+0xb44>
   1891c:	sub	r3, fp, #196	; 0xc4
   18920:	mov	r1, r3
   18924:	ldr	r0, [fp, #-304]	; 0xfffffed0
   18928:	bl	1241c <coda_cursor_read_double@plt>
   1892c:	mov	r3, r0
   18930:	cmp	r3, #0
   18934:	beq	1893c <codadump_filter_get_next_filter@@Base+0xaf4>
   18938:	bl	1bdc8 <handle_coda_error@@Base>
   1893c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18940:	cmp	r3, #8
   18944:	bne	18960 <codadump_filter_get_next_filter@@Base+0xb18>
   18948:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   1894c:	ldr	r1, [pc, #656]	; 18be4 <codadump_filter_get_next_filter@@Base+0xd9c>
   18950:	add	r1, pc, r1
   18954:	mov	r0, r1
   18958:	bl	17eb0 <codadump_filter_get_next_filter@@Base+0x68>
   1895c:	b	1898c <codadump_filter_get_next_filter@@Base+0xb44>
   18960:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   18964:	ldr	r1, [pc, #636]	; 18be8 <codadump_filter_get_next_filter@@Base+0xda0>
   18968:	add	r1, pc, r1
   1896c:	mov	r0, r1
   18970:	bl	17eb0 <codadump_filter_get_next_filter@@Base+0x68>
   18974:	b	1898c <codadump_filter_get_next_filter@@Base+0xb44>
   18978:	ldr	r3, [pc, #620]	; 18bec <codadump_filter_get_next_filter@@Base+0xda4>
   1897c:	add	r3, pc, r3
   18980:	mov	r0, r3
   18984:	bl	17eb0 <codadump_filter_get_next_filter@@Base+0x68>
   18988:	nop	{0}
   1898c:	b	18b38 <codadump_filter_get_next_filter@@Base+0xcf0>
   18990:	sub	r3, fp, #200	; 0xc8
   18994:	mov	r1, r3
   18998:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1899c:	bl	12338 <coda_cursor_get_special_type@plt>
   189a0:	mov	r3, r0
   189a4:	cmp	r3, #0
   189a8:	beq	189b0 <codadump_filter_get_next_filter@@Base+0xb68>
   189ac:	bl	1bdc8 <handle_coda_error@@Base>
   189b0:	ldr	r3, [fp, #-200]	; 0xffffff38
   189b4:	cmp	r3, #3
   189b8:	addls	pc, pc, r3, lsl #2
   189bc:	b	18b40 <codadump_filter_get_next_filter@@Base+0xcf8>
   189c0:	b	189d0 <codadump_filter_get_next_filter@@Base+0xb88>
   189c4:	b	189e4 <codadump_filter_get_next_filter@@Base+0xb9c>
   189c8:	b	18a1c <codadump_filter_get_next_filter@@Base+0xbd4>
   189cc:	b	18ae0 <codadump_filter_get_next_filter@@Base+0xc98>
   189d0:	ldr	r3, [pc, #536]	; 18bf0 <codadump_filter_get_next_filter@@Base+0xda8>
   189d4:	add	r3, pc, r3
   189d8:	mov	r0, r3
   189dc:	bl	17eb0 <codadump_filter_get_next_filter@@Base+0x68>
   189e0:	b	18b34 <codadump_filter_get_next_filter@@Base+0xcec>
   189e4:	sub	r3, fp, #212	; 0xd4
   189e8:	mov	r1, r3
   189ec:	ldr	r0, [fp, #-304]	; 0xfffffed0
   189f0:	bl	1241c <coda_cursor_read_double@plt>
   189f4:	mov	r3, r0
   189f8:	cmp	r3, #0
   189fc:	beq	18a04 <codadump_filter_get_next_filter@@Base+0xbbc>
   18a00:	bl	1bdc8 <handle_coda_error@@Base>
   18a04:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   18a08:	ldr	r1, [pc, #484]	; 18bf4 <codadump_filter_get_next_filter@@Base+0xdac>
   18a0c:	add	r1, pc, r1
   18a10:	mov	r0, r1
   18a14:	bl	17eb0 <codadump_filter_get_next_filter@@Base+0x68>
   18a18:	b	18b34 <codadump_filter_get_next_filter@@Base+0xcec>
   18a1c:	sub	r3, fp, #220	; 0xdc
   18a20:	mov	r1, r3
   18a24:	ldr	r0, [fp, #-304]	; 0xfffffed0
   18a28:	bl	1241c <coda_cursor_read_double@plt>
   18a2c:	mov	r3, r0
   18a30:	cmp	r3, #0
   18a34:	beq	18a3c <codadump_filter_get_next_filter@@Base+0xbf4>
   18a38:	bl	1bdc8 <handle_coda_error@@Base>
   18a3c:	vldr	d7, [fp, #-220]	; 0xffffff24
   18a40:	vmov.f64	d0, d7
   18a44:	bl	12428 <coda_isNaN@plt>
   18a48:	mov	r3, r0
   18a4c:	cmp	r3, #0
   18a50:	bne	18a6c <codadump_filter_get_next_filter@@Base+0xc24>
   18a54:	vldr	d7, [fp, #-220]	; 0xffffff24
   18a58:	vmov.f64	d0, d7
   18a5c:	bl	122cc <coda_isInf@plt>
   18a60:	mov	r3, r0
   18a64:	cmp	r3, #0
   18a68:	beq	18a84 <codadump_filter_get_next_filter@@Base+0xc3c>
   18a6c:	ldrd	r2, [fp, #-220]	; 0xffffff24
   18a70:	ldr	r1, [pc, #384]	; 18bf8 <codadump_filter_get_next_filter@@Base+0xdb0>
   18a74:	add	r1, pc, r1
   18a78:	mov	r0, r1
   18a7c:	bl	17eb0 <codadump_filter_get_next_filter@@Base+0x68>
   18a80:	b	18b34 <codadump_filter_get_next_filter@@Base+0xcec>
   18a84:	vldr	d7, [fp, #-220]	; 0xffffff24
   18a88:	sub	r3, fp, #248	; 0xf8
   18a8c:	mov	r1, r3
   18a90:	ldr	r3, [pc, #356]	; 18bfc <codadump_filter_get_next_filter@@Base+0xdb4>
   18a94:	add	r3, pc, r3
   18a98:	mov	r0, r3
   18a9c:	vmov.f64	d0, d7
   18aa0:	bl	12248 <coda_time_double_to_string@plt>
   18aa4:	mov	r3, r0
   18aa8:	cmp	r3, #0
   18aac:	beq	18ac4 <codadump_filter_get_next_filter@@Base+0xc7c>
   18ab0:	ldr	r3, [pc, #328]	; 18c00 <codadump_filter_get_next_filter@@Base+0xdb8>
   18ab4:	add	r3, pc, r3
   18ab8:	mov	r0, r3
   18abc:	bl	17eb0 <codadump_filter_get_next_filter@@Base+0x68>
   18ac0:	b	18b34 <codadump_filter_get_next_filter@@Base+0xcec>
   18ac4:	sub	r3, fp, #248	; 0xf8
   18ac8:	mov	r1, r3
   18acc:	ldr	r3, [pc, #304]	; 18c04 <codadump_filter_get_next_filter@@Base+0xdbc>
   18ad0:	add	r3, pc, r3
   18ad4:	mov	r0, r3
   18ad8:	bl	17eb0 <codadump_filter_get_next_filter@@Base+0x68>
   18adc:	b	18b34 <codadump_filter_get_next_filter@@Base+0xcec>
   18ae0:	sub	r2, fp, #268	; 0x10c
   18ae4:	sub	r3, fp, #260	; 0x104
   18ae8:	mov	r1, r3
   18aec:	ldr	r0, [fp, #-304]	; 0xfffffed0
   18af0:	bl	124c4 <coda_cursor_read_complex_double_split@plt>
   18af4:	mov	r3, r0
   18af8:	cmp	r3, #0
   18afc:	beq	18b04 <codadump_filter_get_next_filter@@Base+0xcbc>
   18b00:	bl	1bdc8 <handle_coda_error@@Base>
   18b04:	sub	r1, fp, #260	; 0x104
   18b08:	ldrd	r0, [r1]
   18b0c:	sub	r3, fp, #268	; 0x10c
   18b10:	ldrd	r2, [r3]
   18b14:	strd	r2, [sp]
   18b18:	mov	r2, r0
   18b1c:	mov	r3, r1
   18b20:	ldr	r1, [pc, #224]	; 18c08 <codadump_filter_get_next_filter@@Base+0xdc0>
   18b24:	add	r1, pc, r1
   18b28:	mov	r0, r1
   18b2c:	bl	17eb0 <codadump_filter_get_next_filter@@Base+0x68>
   18b30:	nop	{0}
   18b34:	b	18b40 <codadump_filter_get_next_filter@@Base+0xcf8>
   18b38:	nop	{0}
   18b3c:	b	18b44 <codadump_filter_get_next_filter@@Base+0xcfc>
   18b40:	nop	{0}
   18b44:	ldr	r3, [fp, #-64]	; 0xffffffc0
   18b48:	cmp	r3, #0
   18b4c:	beq	18b60 <codadump_filter_get_next_filter@@Base+0xd18>
   18b50:	ldr	r3, [pc, #180]	; 18c0c <codadump_filter_get_next_filter@@Base+0xdc4>
   18b54:	add	r3, pc, r3
   18b58:	mov	r0, r3
   18b5c:	bl	17eb0 <codadump_filter_get_next_filter@@Base+0x68>
   18b60:	nop	{0}
   18b64:	sub	sp, fp, #28
   18b68:	ldrd	r4, [sp]
   18b6c:	ldrd	r6, [sp, #8]
   18b70:	ldrd	r8, [sp, #16]
   18b74:	ldr	fp, [sp, #24]
   18b78:	add	sp, sp, #28
   18b7c:	pop	{pc}		; (ldr pc, [sp], #4)
   18b80:	andeq	r9, r1, r0, lsl r1
   18b84:	andeq	r6, r0, ip, ror #28
   18b88:	andeq	r6, r0, r0, asr #28
   18b8c:	strdeq	r6, [r0], -r0
   18b90:	strdeq	r6, [r0], -ip
   18b94:	andeq	r6, r0, r8, ror ip
   18b98:	andeq	r6, r0, r8, lsr #24
   18b9c:	andeq	r6, r0, ip, asr #23
   18ba0:			; <UNDEFINED> instruction: 0x00006bbc
   18ba4:	ldrdeq	r6, [r0], -r8
   18ba8:	muleq	r0, r8, sl
   18bac:	strdeq	r6, [r0], -ip
   18bb0:	ldrdeq	r6, [r0], -ip
   18bb4:	andeq	r6, r0, r8, ror r9
   18bb8:	ldrdeq	r6, [r0], -r4
   18bbc:	andeq	r6, r0, r0, lsr r9
   18bc0:	andeq	r6, r0, r8, lsl #18
   18bc4:	andeq	r6, r0, r0, asr r8
   18bc8:	andeq	r6, r0, ip, lsr #17
   18bcc:	andeq	r6, r0, r4, lsl #16
   18bd0:	andeq	r6, r0, r4, ror #15
   18bd4:	andeq	r6, r0, r0, asr #16
   18bd8:	andeq	r6, r0, r8, lsl #16
   18bdc:	andeq	r6, r0, r0, asr #15
   18be0:	andeq	r6, r0, r4, ror r7
   18be4:	andeq	r6, r0, r4, lsr r7
   18be8:	andeq	r6, r0, r4, lsr #14
   18bec:	andeq	r6, r0, r8, lsl r7
   18bf0:	andeq	r6, r0, r0, asr #13
   18bf4:	andeq	r6, r0, r0, lsl #13
   18bf8:	andeq	r6, r0, r8, lsl r6
   18bfc:	andeq	r6, r0, r8, lsl #12
   18c00:	andeq	r6, r0, r8, lsl #12
   18c04:	andeq	r6, r0, r8, lsl #12
   18c08:			; <UNDEFINED> instruction: 0x000065bc
   18c0c:	andeq	r6, r0, r8, ror r4

00018c10 <print_json_data@@Base>:
   18c10:	str	r4, [sp, #-12]!
   18c14:	str	fp, [sp, #4]
   18c18:	str	lr, [sp, #8]
   18c1c:	add	fp, sp, #8
   18c20:	sub	sp, sp, #540	; 0x21c
   18c24:	str	r0, [fp, #-544]	; 0xfffffde0
   18c28:	ldr	r4, [pc, #320]	; 18d70 <print_json_data@@Base+0x160>
   18c2c:	add	r4, pc, r4
   18c30:	ldr	r3, [pc, #316]	; 18d74 <print_json_data@@Base+0x164>
   18c34:	add	r3, pc, r3
   18c38:	ldr	r2, [fp, #-544]	; 0xfffffde0
   18c3c:	str	r2, [r3]
   18c40:	ldr	r3, [pc, #304]	; 18d78 <print_json_data@@Base+0x168>
   18c44:	ldr	r3, [r4, r3]
   18c48:	ldr	r3, [r3]
   18c4c:	sub	r2, fp, #20
   18c50:	mov	r1, r2
   18c54:	mov	r0, r3
   18c58:	bl	12230 <coda_open@plt>
   18c5c:	str	r0, [fp, #-16]
   18c60:	ldr	r3, [fp, #-16]
   18c64:	cmp	r3, #0
   18c68:	beq	18cb0 <print_json_data@@Base+0xa0>
   18c6c:	bl	125e4 <coda_get_errno@plt>
   18c70:	mov	r3, r0
   18c74:	ldr	r3, [r3]
   18c78:	cmn	r3, #21
   18c7c:	bne	18cb0 <print_json_data@@Base+0xa0>
   18c80:	mov	r0, #0
   18c84:	bl	12278 <coda_set_option_use_mmap@plt>
   18c88:	ldr	r3, [pc, #232]	; 18d78 <print_json_data@@Base+0x168>
   18c8c:	ldr	r3, [r4, r3]
   18c90:	ldr	r3, [r3]
   18c94:	sub	r2, fp, #20
   18c98:	mov	r1, r2
   18c9c:	mov	r0, r3
   18ca0:	bl	12230 <coda_open@plt>
   18ca4:	str	r0, [fp, #-16]
   18ca8:	mov	r0, #1
   18cac:	bl	12278 <coda_set_option_use_mmap@plt>
   18cb0:	ldr	r3, [fp, #-16]
   18cb4:	cmp	r3, #0
   18cb8:	beq	18cc0 <print_json_data@@Base+0xb0>
   18cbc:	bl	1bdc8 <handle_coda_error@@Base>
   18cc0:	ldr	r2, [fp, #-20]	; 0xffffffec
   18cc4:	sub	r3, fp, #540	; 0x21c
   18cc8:	mov	r1, r2
   18ccc:	mov	r0, r3
   18cd0:	bl	1235c <coda_cursor_set_product@plt>
   18cd4:	mov	r3, r0
   18cd8:	cmp	r3, #0
   18cdc:	beq	18ce4 <print_json_data@@Base+0xd4>
   18ce0:	bl	1bdc8 <handle_coda_error@@Base>
   18ce4:	ldr	r3, [pc, #144]	; 18d7c <print_json_data@@Base+0x16c>
   18ce8:	ldr	r3, [r4, r3]
   18cec:	ldr	r3, [r3]
   18cf0:	cmp	r3, #0
   18cf4:	beq	18d28 <print_json_data@@Base+0x118>
   18cf8:	ldr	r3, [pc, #124]	; 18d7c <print_json_data@@Base+0x16c>
   18cfc:	ldr	r3, [r4, r3]
   18d00:	ldr	r2, [r3]
   18d04:	sub	r3, fp, #540	; 0x21c
   18d08:	mov	r1, r2
   18d0c:	mov	r0, r3
   18d10:	bl	1253c <coda_cursor_goto@plt>
   18d14:	str	r0, [fp, #-16]
   18d18:	ldr	r3, [fp, #-16]
   18d1c:	cmp	r3, #0
   18d20:	beq	18d28 <print_json_data@@Base+0x118>
   18d24:	bl	1bdc8 <handle_coda_error@@Base>
   18d28:	mov	r0, #0
   18d2c:	bl	121dc <coda_set_option_perform_boundary_checks@plt>
   18d30:	sub	r3, fp, #540	; 0x21c
   18d34:	mov	r0, r3
   18d38:	bl	180cc <codadump_filter_get_next_filter@@Base+0x284>
   18d3c:	ldr	r3, [pc, #60]	; 18d80 <print_json_data@@Base+0x170>
   18d40:	add	r3, pc, r3
   18d44:	mov	r0, r3
   18d48:	bl	17eb0 <codadump_filter_get_next_filter@@Base+0x68>
   18d4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18d50:	mov	r0, r3
   18d54:	bl	12518 <coda_close@plt>
   18d58:	nop	{0}
   18d5c:	sub	sp, fp, #8
   18d60:	ldr	r4, [sp]
   18d64:	ldr	fp, [sp, #4]
   18d68:	add	sp, sp, #8
   18d6c:	pop	{pc}		; (ldr pc, [sp], #4)
   18d70:	andeq	r8, r1, ip, asr #7
   18d74:	ldrdeq	r8, [r1], -r4
   18d78:			; <UNDEFINED> instruction: 0x000001b4
   18d7c:	ldrdeq	r0, [r0], -r8
   18d80:	andeq	r6, r0, ip, lsr #7
   18d84:	str	r4, [sp, #-12]!
   18d88:	str	fp, [sp, #4]
   18d8c:	str	lr, [sp, #8]
   18d90:	add	fp, sp, #8
   18d94:	sub	sp, sp, #20
   18d98:	str	r0, [fp, #-24]	; 0xffffffe8
   18d9c:	str	r1, [fp, #-28]	; 0xffffffe4
   18da0:	ldr	r4, [pc, #436]	; 18f5c <print_json_data@@Base+0x34c>
   18da4:	add	r4, pc, r4
   18da8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   18dac:	mov	r3, r2
   18db0:	lsl	r3, r3, #2
   18db4:	add	r3, r3, r2
   18db8:	lsl	r3, r3, #4
   18dbc:	add	r3, r3, #800	; 0x320
   18dc0:	ldr	r2, [pc, #408]	; 18f60 <print_json_data@@Base+0x350>
   18dc4:	ldr	r2, [r4, r2]
   18dc8:	add	r3, r3, r2
   18dcc:	str	r3, [fp, #-20]	; 0xffffffec
   18dd0:	mov	r3, #0
   18dd4:	str	r3, [fp, #-16]
   18dd8:	b	18f30 <print_json_data@@Base+0x320>
   18ddc:	ldr	r3, [fp, #-16]
   18de0:	cmp	r3, #0
   18de4:	ble	18df4 <print_json_data@@Base+0x1e4>
   18de8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18dec:	mov	r0, #44	; 0x2c
   18df0:	bl	1256c <fputc@plt>
   18df4:	ldr	r3, [pc, #360]	; 18f64 <print_json_data@@Base+0x354>
   18df8:	ldr	r3, [r4, r3]
   18dfc:	ldr	r3, [r3]
   18e00:	cmp	r3, #0
   18e04:	beq	18ed4 <print_json_data@@Base+0x2c4>
   18e08:	ldr	r3, [fp, #-20]	; 0xffffffec
   18e0c:	ldr	r2, [r3]
   18e10:	ldr	r3, [fp, #-16]
   18e14:	add	r2, r2, r3
   18e18:	ldr	r3, [pc, #328]	; 18f68 <print_json_data@@Base+0x358>
   18e1c:	ldr	r3, [r4, r3]
   18e20:	add	r2, r2, #18
   18e24:	ldr	r3, [r3, r2, lsl #2]
   18e28:	cmp	r3, #0
   18e2c:	beq	18e94 <print_json_data@@Base+0x284>
   18e30:	ldr	r3, [fp, #-20]	; 0xffffffec
   18e34:	ldr	r2, [r3]
   18e38:	ldr	r3, [fp, #-16]
   18e3c:	add	r3, r2, r3
   18e40:	ldr	r2, [pc, #288]	; 18f68 <print_json_data@@Base+0x358>
   18e44:	ldr	r2, [r4, r2]
   18e48:	add	r3, r3, #8
   18e4c:	lsl	r3, r3, #2
   18e50:	add	r3, r2, r3
   18e54:	ldr	r1, [r3, #4]
   18e58:	ldr	r3, [fp, #-20]	; 0xffffffec
   18e5c:	ldr	r2, [r3]
   18e60:	ldr	r3, [fp, #-16]
   18e64:	add	r3, r2, r3
   18e68:	ldr	r2, [pc, #248]	; 18f68 <print_json_data@@Base+0x358>
   18e6c:	ldr	r2, [r4, r2]
   18e70:	lsl	r3, r3, #2
   18e74:	add	r3, r2, r3
   18e78:	ldr	r3, [r3, #4]
   18e7c:	mov	r2, r1
   18e80:	ldr	r1, [pc, #228]	; 18f6c <print_json_data@@Base+0x35c>
   18e84:	add	r1, pc, r1
   18e88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e8c:	bl	12434 <fprintf@plt>
   18e90:	b	18f24 <print_json_data@@Base+0x314>
   18e94:	ldr	r3, [fp, #-20]	; 0xffffffec
   18e98:	ldr	r2, [r3]
   18e9c:	ldr	r3, [fp, #-16]
   18ea0:	add	r3, r2, r3
   18ea4:	ldr	r2, [pc, #188]	; 18f68 <print_json_data@@Base+0x358>
   18ea8:	ldr	r2, [r4, r2]
   18eac:	lsl	r3, r3, #2
   18eb0:	add	r3, r2, r3
   18eb4:	ldr	r3, [r3, #4]
   18eb8:	mov	r2, r3
   18ebc:	ldr	r3, [pc, #172]	; 18f70 <print_json_data@@Base+0x360>
   18ec0:	add	r3, pc, r3
   18ec4:	mov	r1, r3
   18ec8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ecc:	bl	12434 <fprintf@plt>
   18ed0:	b	18f24 <print_json_data@@Base+0x314>
   18ed4:	ldr	r3, [fp, #-20]	; 0xffffffec
   18ed8:	ldr	r2, [fp, #-16]
   18edc:	add	r2, r2, #2
   18ee0:	ldr	r3, [r3, r2, lsl #2]
   18ee4:	cmn	r3, #1
   18ee8:	bne	18efc <print_json_data@@Base+0x2ec>
   18eec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18ef0:	mov	r0, #63	; 0x3f
   18ef4:	bl	1256c <fputc@plt>
   18ef8:	b	18f24 <print_json_data@@Base+0x314>
   18efc:	ldr	r3, [fp, #-20]	; 0xffffffec
   18f00:	ldr	r2, [fp, #-16]
   18f04:	add	r2, r2, #2
   18f08:	ldr	r3, [r3, r2, lsl #2]
   18f0c:	mov	r2, r3
   18f10:	ldr	r3, [pc, #92]	; 18f74 <print_json_data@@Base+0x364>
   18f14:	add	r3, pc, r3
   18f18:	mov	r1, r3
   18f1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f20:	bl	12434 <fprintf@plt>
   18f24:	ldr	r3, [fp, #-16]
   18f28:	add	r3, r3, #1
   18f2c:	str	r3, [fp, #-16]
   18f30:	ldr	r3, [fp, #-20]	; 0xffffffec
   18f34:	ldr	r3, [r3, #4]
   18f38:	ldr	r2, [fp, #-16]
   18f3c:	cmp	r2, r3
   18f40:	blt	18ddc <print_json_data@@Base+0x1cc>
   18f44:	nop	{0}
   18f48:	sub	sp, fp, #8
   18f4c:	ldr	r4, [sp]
   18f50:	ldr	fp, [sp, #4]
   18f54:	add	sp, sp, #8
   18f58:	pop	{pc}		; (ldr pc, [sp], #4)
   18f5c:	andeq	r8, r1, r4, asr r2
   18f60:			; <UNDEFINED> instruction: 0x000001b4
   18f64:			; <UNDEFINED> instruction: 0x000001b0
   18f68:	andeq	r0, r0, r4, ror #3
   18f6c:	andeq	r6, r0, ip, ror #4
   18f70:	andeq	r6, r0, r8, lsr r2
   18f74:	andeq	r6, r0, r4, ror #3

00018f78 <print_full_field_name@@Base>:
   18f78:	str	r4, [sp, #-12]!
   18f7c:	str	fp, [sp, #4]
   18f80:	str	lr, [sp, #8]
   18f84:	add	fp, sp, #8
   18f88:	sub	sp, sp, #44	; 0x2c
   18f8c:	str	r0, [fp, #-40]	; 0xffffffd8
   18f90:	str	r1, [fp, #-44]	; 0xffffffd4
   18f94:	str	r2, [fp, #-48]	; 0xffffffd0
   18f98:	ldr	r4, [pc, #1020]	; 1939c <print_full_field_name@@Base+0x424>
   18f9c:	add	r4, pc, r4
   18fa0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18fa4:	cmp	r3, #1
   18fa8:	bne	19144 <print_full_field_name@@Base+0x1cc>
   18fac:	mov	r3, #0
   18fb0:	str	r3, [fp, #-20]	; 0xffffffec
   18fb4:	mov	r3, #0
   18fb8:	str	r3, [fp, #-24]	; 0xffffffe8
   18fbc:	mov	r3, #0
   18fc0:	str	r3, [fp, #-16]
   18fc4:	b	190e0 <print_full_field_name@@Base+0x168>
   18fc8:	ldr	r3, [pc, #976]	; 193a0 <print_full_field_name@@Base+0x428>
   18fcc:	ldr	r3, [r4, r3]
   18fd0:	ldr	r2, [fp, #-16]
   18fd4:	add	r2, r2, #2
   18fd8:	ldr	r3, [r3, r2, lsl #2]
   18fdc:	sub	r2, fp, #32
   18fe0:	mov	r1, r2
   18fe4:	mov	r0, r3
   18fe8:	bl	12644 <coda_type_get_class@plt>
   18fec:	mov	r3, r0
   18ff0:	cmp	r3, #0
   18ff4:	beq	18ffc <print_full_field_name@@Base+0x84>
   18ff8:	bl	1bdc8 <handle_coda_error@@Base>
   18ffc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19000:	cmp	r3, #0
   19004:	beq	19014 <print_full_field_name@@Base+0x9c>
   19008:	cmp	r3, #1
   1900c:	beq	19058 <print_full_field_name@@Base+0xe0>
   19010:	b	190d4 <print_full_field_name@@Base+0x15c>
   19014:	ldr	r3, [pc, #900]	; 193a0 <print_full_field_name@@Base+0x428>
   19018:	ldr	r2, [r4, r3]
   1901c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19020:	add	r3, r3, #904	; 0x388
   19024:	lsl	r3, r3, #2
   19028:	add	r3, r2, r3
   1902c:	ldr	r3, [r3, #4]
   19030:	mov	r2, r3
   19034:	ldr	r3, [pc, #872]	; 193a4 <print_full_field_name@@Base+0x42c>
   19038:	add	r3, pc, r3
   1903c:	mov	r1, r3
   19040:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19044:	bl	12434 <fprintf@plt>
   19048:	ldr	r3, [fp, #-20]	; 0xffffffec
   1904c:	add	r3, r3, #1
   19050:	str	r3, [fp, #-20]	; 0xffffffec
   19054:	b	190d4 <print_full_field_name@@Base+0x15c>
   19058:	ldr	r3, [fp, #-16]
   1905c:	cmp	r3, #0
   19060:	bne	19070 <print_full_field_name@@Base+0xf8>
   19064:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19068:	mov	r0, #47	; 0x2f
   1906c:	bl	1256c <fputc@plt>
   19070:	ldr	r3, [pc, #808]	; 193a0 <print_full_field_name@@Base+0x428>
   19074:	ldr	r1, [r4, r3]
   19078:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1907c:	mov	r3, r2
   19080:	lsl	r3, r3, #2
   19084:	add	r3, r3, r2
   19088:	lsl	r3, r3, #4
   1908c:	add	r3, r1, r3
   19090:	add	r3, r3, #804	; 0x324
   19094:	ldr	r3, [r3]
   19098:	cmp	r3, #0
   1909c:	ble	190c4 <print_full_field_name@@Base+0x14c>
   190a0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   190a4:	mov	r0, #91	; 0x5b
   190a8:	bl	1256c <fputc@plt>
   190ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   190b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   190b4:	bl	18d84 <print_json_data@@Base+0x174>
   190b8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   190bc:	mov	r0, #93	; 0x5d
   190c0:	bl	1256c <fputc@plt>
   190c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   190c8:	add	r3, r3, #1
   190cc:	str	r3, [fp, #-24]	; 0xffffffe8
   190d0:	nop	{0}
   190d4:	ldr	r3, [fp, #-16]
   190d8:	add	r3, r3, #1
   190dc:	str	r3, [fp, #-16]
   190e0:	ldr	r3, [pc, #696]	; 193a0 <print_full_field_name@@Base+0x428>
   190e4:	ldr	r3, [r4, r3]
   190e8:	ldr	r3, [r3, #136]	; 0x88
   190ec:	ldr	r2, [fp, #-16]
   190f0:	cmp	r2, r3
   190f4:	blt	18fc8 <print_full_field_name@@Base+0x50>
   190f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   190fc:	cmp	r3, #0
   19100:	beq	19384 <print_full_field_name@@Base+0x40c>
   19104:	ldr	r3, [pc, #660]	; 193a0 <print_full_field_name@@Base+0x428>
   19108:	ldr	r3, [r4, r3]
   1910c:	ldr	r3, [r3, #3360]	; 0xd20
   19110:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19114:	cmp	r2, r3
   19118:	bge	19384 <print_full_field_name@@Base+0x40c>
   1911c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19120:	mov	r0, #91	; 0x5b
   19124:	bl	1256c <fputc@plt>
   19128:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1912c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19130:	bl	18d84 <print_json_data@@Base+0x174>
   19134:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19138:	mov	r0, #93	; 0x5d
   1913c:	bl	1256c <fputc@plt>
   19140:	b	19384 <print_full_field_name@@Base+0x40c>
   19144:	mov	r3, #0
   19148:	str	r3, [fp, #-16]
   1914c:	b	1919c <print_full_field_name@@Base+0x224>
   19150:	ldr	r3, [fp, #-16]
   19154:	cmp	r3, #0
   19158:	ble	19168 <print_full_field_name@@Base+0x1f0>
   1915c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19160:	mov	r0, #46	; 0x2e
   19164:	bl	1256c <fputc@plt>
   19168:	ldr	r3, [pc, #560]	; 193a0 <print_full_field_name@@Base+0x428>
   1916c:	ldr	r2, [r4, r3]
   19170:	ldr	r3, [fp, #-16]
   19174:	add	r3, r3, #904	; 0x388
   19178:	lsl	r3, r3, #2
   1917c:	add	r3, r2, r3
   19180:	ldr	r3, [r3, #4]
   19184:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19188:	mov	r0, r3
   1918c:	bl	12608 <fputs@plt>
   19190:	ldr	r3, [fp, #-16]
   19194:	add	r3, r3, #1
   19198:	str	r3, [fp, #-16]
   1919c:	ldr	r3, [pc, #508]	; 193a0 <print_full_field_name@@Base+0x428>
   191a0:	ldr	r3, [r4, r3]
   191a4:	ldr	r3, [r3, #3748]	; 0xea4
   191a8:	ldr	r2, [fp, #-16]
   191ac:	cmp	r2, r3
   191b0:	blt	19150 <print_full_field_name@@Base+0x1d8>
   191b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   191b8:	cmp	r3, #2
   191bc:	bne	19384 <print_full_field_name@@Base+0x40c>
   191c0:	mov	r3, #0
   191c4:	str	r3, [fp, #-28]	; 0xffffffe4
   191c8:	mov	r3, #0
   191cc:	str	r3, [fp, #-16]
   191d0:	b	192c0 <print_full_field_name@@Base+0x348>
   191d4:	ldr	r3, [pc, #452]	; 193a0 <print_full_field_name@@Base+0x428>
   191d8:	ldr	r3, [r4, r3]
   191dc:	ldr	r2, [fp, #-16]
   191e0:	add	r2, r2, #2
   191e4:	ldr	r3, [r3, r2, lsl #2]
   191e8:	sub	r2, fp, #36	; 0x24
   191ec:	mov	r1, r2
   191f0:	mov	r0, r3
   191f4:	bl	12644 <coda_type_get_class@plt>
   191f8:	mov	r3, r0
   191fc:	cmp	r3, #0
   19200:	beq	19208 <print_full_field_name@@Base+0x290>
   19204:	bl	1bdc8 <handle_coda_error@@Base>
   19208:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1920c:	cmp	r3, #1
   19210:	bne	192b4 <print_full_field_name@@Base+0x33c>
   19214:	ldr	r3, [pc, #388]	; 193a0 <print_full_field_name@@Base+0x428>
   19218:	ldr	r1, [r4, r3]
   1921c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   19220:	mov	r3, r2
   19224:	lsl	r3, r3, #2
   19228:	add	r3, r3, r2
   1922c:	lsl	r3, r3, #4
   19230:	add	r3, r1, r3
   19234:	add	r3, r3, #804	; 0x324
   19238:	ldr	r3, [r3]
   1923c:	cmp	r3, #0
   19240:	ble	192b4 <print_full_field_name@@Base+0x33c>
   19244:	ldr	r3, [pc, #340]	; 193a0 <print_full_field_name@@Base+0x428>
   19248:	ldr	r1, [r4, r3]
   1924c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   19250:	mov	r3, r2
   19254:	lsl	r3, r3, #2
   19258:	add	r3, r3, r2
   1925c:	lsl	r3, r3, #4
   19260:	add	r3, r1, r3
   19264:	add	r3, r3, #800	; 0x320
   19268:	ldr	r3, [r3]
   1926c:	cmp	r3, #0
   19270:	bne	19290 <print_full_field_name@@Base+0x318>
   19274:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19278:	mov	r2, #2
   1927c:	mov	r1, #1
   19280:	ldr	r0, [pc, #288]	; 193a8 <print_full_field_name@@Base+0x430>
   19284:	add	r0, pc, r0
   19288:	bl	12350 <fwrite@plt>
   1928c:	b	1929c <print_full_field_name@@Base+0x324>
   19290:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19294:	mov	r0, #44	; 0x2c
   19298:	bl	1256c <fputc@plt>
   1929c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   192a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   192a4:	bl	18d84 <print_json_data@@Base+0x174>
   192a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   192ac:	add	r3, r3, #1
   192b0:	str	r3, [fp, #-28]	; 0xffffffe4
   192b4:	ldr	r3, [fp, #-16]
   192b8:	add	r3, r3, #1
   192bc:	str	r3, [fp, #-16]
   192c0:	ldr	r3, [pc, #216]	; 193a0 <print_full_field_name@@Base+0x428>
   192c4:	ldr	r3, [r4, r3]
   192c8:	ldr	r3, [r3, #136]	; 0x88
   192cc:	ldr	r2, [fp, #-16]
   192d0:	cmp	r2, r3
   192d4:	blt	191d4 <print_full_field_name@@Base+0x25c>
   192d8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   192dc:	cmp	r3, #0
   192e0:	beq	1936c <print_full_field_name@@Base+0x3f4>
   192e4:	ldr	r3, [pc, #180]	; 193a0 <print_full_field_name@@Base+0x428>
   192e8:	ldr	r3, [r4, r3]
   192ec:	ldr	r3, [r3, #3360]	; 0xd20
   192f0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   192f4:	cmp	r2, r3
   192f8:	bge	1936c <print_full_field_name@@Base+0x3f4>
   192fc:	ldr	r3, [pc, #156]	; 193a0 <print_full_field_name@@Base+0x428>
   19300:	ldr	r1, [r4, r3]
   19304:	ldr	r2, [fp, #-28]	; 0xffffffe4
   19308:	mov	r3, r2
   1930c:	lsl	r3, r3, #2
   19310:	add	r3, r3, r2
   19314:	lsl	r3, r3, #4
   19318:	add	r3, r1, r3
   1931c:	add	r3, r3, #800	; 0x320
   19320:	ldr	r3, [r3]
   19324:	cmp	r3, #0
   19328:	bne	19348 <print_full_field_name@@Base+0x3d0>
   1932c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19330:	mov	r2, #2
   19334:	mov	r1, #1
   19338:	ldr	r0, [pc, #108]	; 193ac <print_full_field_name@@Base+0x434>
   1933c:	add	r0, pc, r0
   19340:	bl	12350 <fwrite@plt>
   19344:	b	19354 <print_full_field_name@@Base+0x3dc>
   19348:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1934c:	mov	r0, #44	; 0x2c
   19350:	bl	1256c <fputc@plt>
   19354:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19358:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1935c:	bl	18d84 <print_json_data@@Base+0x174>
   19360:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19364:	add	r3, r3, #1
   19368:	str	r3, [fp, #-28]	; 0xffffffe4
   1936c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19370:	cmp	r3, #0
   19374:	ble	19384 <print_full_field_name@@Base+0x40c>
   19378:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1937c:	mov	r0, #93	; 0x5d
   19380:	bl	1256c <fputc@plt>
   19384:	nop	{0}
   19388:	sub	sp, fp, #8
   1938c:	ldr	r4, [sp]
   19390:	ldr	fp, [sp, #4]
   19394:	add	sp, sp, #8
   19398:	pop	{pc}		; (ldr pc, [sp], #4)
   1939c:	andeq	r8, r1, ip, asr r0
   193a0:			; <UNDEFINED> instruction: 0x000001b4
   193a4:	andeq	r6, r0, r4, asr #1
   193a8:	andeq	r5, r0, ip, ror lr
   193ac:	andeq	r5, r0, r4, asr #27

000193b0 <traverse_info_init@@Base>:
   193b0:	push	{fp}		; (str fp, [sp, #-4]!)
   193b4:	add	fp, sp, #0
   193b8:	ldr	r3, [pc, #80]	; 19410 <traverse_info_init@@Base+0x60>
   193bc:	add	r3, pc, r3
   193c0:	ldr	r2, [pc, #76]	; 19414 <traverse_info_init@@Base+0x64>
   193c4:	ldr	r2, [r3, r2]
   193c8:	mov	r1, #0
   193cc:	str	r1, [r2, #4]
   193d0:	ldr	r2, [pc, #60]	; 19414 <traverse_info_init@@Base+0x64>
   193d4:	ldr	r2, [r3, r2]
   193d8:	mov	r1, #0
   193dc:	str	r1, [r2, #136]	; 0x88
   193e0:	ldr	r2, [pc, #44]	; 19414 <traverse_info_init@@Base+0x64>
   193e4:	ldr	r2, [r3, r2]
   193e8:	mov	r1, #0
   193ec:	str	r1, [r2, #3360]	; 0xd20
   193f0:	ldr	r2, [pc, #28]	; 19414 <traverse_info_init@@Base+0x64>
   193f4:	ldr	r3, [r3, r2]
   193f8:	mov	r2, #0
   193fc:	str	r2, [r3, #3748]	; 0xea4
   19400:	nop	{0}
   19404:	add	sp, fp, #0
   19408:	pop	{fp}		; (ldr fp, [sp], #4)
   1940c:	bx	lr
   19410:	andeq	r7, r1, ip, lsr ip
   19414:			; <UNDEFINED> instruction: 0x000001b4

00019418 <traverse_info_done@@Base>:
   19418:	strd	r4, [sp, #-16]!
   1941c:	str	fp, [sp, #8]
   19420:	str	lr, [sp, #12]
   19424:	add	fp, sp, #12
   19428:	ldr	r4, [pc, #100]	; 19494 <traverse_info_done@@Base+0x7c>
   1942c:	add	r4, pc, r4
   19430:	ldr	r3, [pc, #96]	; 19498 <traverse_info_done@@Base+0x80>
   19434:	ldr	r3, [r4, r3]
   19438:	ldr	r3, [r3, #4]
   1943c:	cmp	r3, #0
   19440:	beq	19458 <traverse_info_done@@Base+0x40>
   19444:	ldr	r3, [pc, #76]	; 19498 <traverse_info_done@@Base+0x80>
   19448:	ldr	r3, [r4, r3]
   1944c:	ldr	r3, [r3, #4]
   19450:	mov	r0, r3
   19454:	bl	12518 <coda_close@plt>
   19458:	ldr	r3, [pc, #56]	; 19498 <traverse_info_done@@Base+0x80>
   1945c:	ldr	r3, [r4, r3]
   19460:	ldr	r3, [r3, #664]	; 0x298
   19464:	cmp	r3, #0
   19468:	beq	1947c <traverse_info_done@@Base+0x64>
   1946c:	ldr	r3, [pc, #36]	; 19498 <traverse_info_done@@Base+0x80>
   19470:	ldr	r3, [r4, r3]
   19474:	add	r0, r3, #664	; 0x298
   19478:	bl	17c64 <codadump_filter_remove@@Base>
   1947c:	nop	{0}
   19480:	sub	sp, fp, #12
   19484:	ldrd	r4, [sp]
   19488:	ldr	fp, [sp, #8]
   1948c:	add	sp, sp, #12
   19490:	pop	{pc}		; (ldr pc, [sp], #4)
   19494:	andeq	r7, r1, ip, asr #23
   19498:			; <UNDEFINED> instruction: 0x000001b4
   1949c:	str	r4, [sp, #-12]!
   194a0:	str	fp, [sp, #4]
   194a4:	str	lr, [sp, #8]
   194a8:	add	fp, sp, #8
   194ac:	sub	sp, sp, #28
   194b0:	ldr	r4, [pc, #868]	; 1981c <traverse_info_done@@Base+0x404>
   194b4:	add	r4, pc, r4
   194b8:	ldr	r3, [pc, #864]	; 19820 <traverse_info_done@@Base+0x408>
   194bc:	ldr	r3, [r4, r3]
   194c0:	ldr	r3, [r3]
   194c4:	cmp	r3, #0
   194c8:	bne	197ec <traverse_info_done@@Base+0x3d4>
   194cc:	ldr	r3, [pc, #848]	; 19824 <traverse_info_done@@Base+0x40c>
   194d0:	ldr	r3, [r4, r3]
   194d4:	ldr	r3, [r3]
   194d8:	mov	r2, #0
   194dc:	mov	r1, #1
   194e0:	mov	r0, r3
   194e4:	bl	18f78 <print_full_field_name@@Base>
   194e8:	ldr	r3, [pc, #824]	; 19828 <traverse_info_done@@Base+0x410>
   194ec:	ldr	r3, [r4, r3]
   194f0:	ldr	r3, [r3]
   194f4:	cmp	r3, #0
   194f8:	beq	1968c <traverse_info_done@@Base+0x274>
   194fc:	ldr	r3, [pc, #808]	; 1982c <traverse_info_done@@Base+0x414>
   19500:	ldr	r3, [r4, r3]
   19504:	ldr	r2, [r3, #136]	; 0x88
   19508:	ldr	r3, [pc, #796]	; 1982c <traverse_info_done@@Base+0x414>
   1950c:	ldr	r3, [r4, r3]
   19510:	add	r2, r2, #2
   19514:	ldr	r3, [r3, r2, lsl #2]
   19518:	sub	r2, fp, #20
   1951c:	mov	r1, r2
   19520:	mov	r0, r3
   19524:	bl	12644 <coda_type_get_class@plt>
   19528:	mov	r3, r0
   1952c:	cmp	r3, #0
   19530:	beq	19538 <traverse_info_done@@Base+0x120>
   19534:	bl	1bdc8 <handle_coda_error@@Base>
   19538:	ldr	r3, [fp, #-20]	; 0xffffffec
   1953c:	cmp	r3, #6
   19540:	bne	195a8 <traverse_info_done@@Base+0x190>
   19544:	ldr	r3, [pc, #736]	; 1982c <traverse_info_done@@Base+0x414>
   19548:	ldr	r3, [r4, r3]
   1954c:	ldr	r2, [r3, #136]	; 0x88
   19550:	ldr	r3, [pc, #724]	; 1982c <traverse_info_done@@Base+0x414>
   19554:	ldr	r3, [r4, r3]
   19558:	add	r2, r2, #2
   1955c:	ldr	r3, [r3, r2, lsl #2]
   19560:	sub	r2, fp, #24
   19564:	mov	r1, r2
   19568:	mov	r0, r3
   1956c:	bl	124ac <coda_type_get_special_type@plt>
   19570:	mov	r3, r0
   19574:	cmp	r3, #0
   19578:	beq	19580 <traverse_info_done@@Base+0x168>
   1957c:	bl	1bdc8 <handle_coda_error@@Base>
   19580:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19584:	mov	r0, r3
   19588:	bl	121ac <coda_type_get_special_type_name@plt>
   1958c:	mov	r3, r0
   19590:	mov	r1, r3
   19594:	ldr	r3, [pc, #660]	; 19830 <traverse_info_done@@Base+0x418>
   19598:	add	r3, pc, r3
   1959c:	mov	r0, r3
   195a0:	bl	12200 <printf@plt>
   195a4:	b	1968c <traverse_info_done@@Base+0x274>
   195a8:	ldr	r3, [pc, #636]	; 1982c <traverse_info_done@@Base+0x414>
   195ac:	ldr	r3, [r4, r3]
   195b0:	ldr	r2, [r3, #136]	; 0x88
   195b4:	ldr	r3, [pc, #624]	; 1982c <traverse_info_done@@Base+0x414>
   195b8:	ldr	r3, [r4, r3]
   195bc:	add	r2, r2, #2
   195c0:	ldr	r3, [r3, r2, lsl #2]
   195c4:	sub	r2, fp, #28
   195c8:	mov	r1, r2
   195cc:	mov	r0, r3
   195d0:	bl	123f8 <coda_type_get_read_type@plt>
   195d4:	mov	r3, r0
   195d8:	cmp	r3, #0
   195dc:	beq	195e4 <traverse_info_done@@Base+0x1cc>
   195e0:	bl	1bdc8 <handle_coda_error@@Base>
   195e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   195e8:	mov	r0, r3
   195ec:	bl	124f4 <coda_type_get_native_type_name@plt>
   195f0:	mov	r3, r0
   195f4:	mov	r1, r3
   195f8:	ldr	r3, [pc, #564]	; 19834 <traverse_info_done@@Base+0x41c>
   195fc:	add	r3, pc, r3
   19600:	mov	r0, r3
   19604:	bl	12200 <printf@plt>
   19608:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1960c:	cmp	r3, #11
   19610:	beq	19620 <traverse_info_done@@Base+0x208>
   19614:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19618:	cmp	r3, #12
   1961c:	bne	1968c <traverse_info_done@@Base+0x274>
   19620:	mov	r0, #40	; 0x28
   19624:	bl	12494 <putchar@plt>
   19628:	ldr	r3, [pc, #508]	; 1982c <traverse_info_done@@Base+0x414>
   1962c:	ldr	r3, [r4, r3]
   19630:	ldr	r3, [r3, #3360]	; 0xd20
   19634:	cmp	r3, #0
   19638:	bgt	1965c <traverse_info_done@@Base+0x244>
   1963c:	ldr	r3, [pc, #500]	; 19838 <traverse_info_done@@Base+0x420>
   19640:	add	r3, pc, r3
   19644:	mov	r2, #238	; 0xee
   19648:	ldr	r1, [pc, #492]	; 1983c <traverse_info_done@@Base+0x424>
   1964c:	add	r1, pc, r1
   19650:	ldr	r0, [pc, #488]	; 19840 <traverse_info_done@@Base+0x428>
   19654:	add	r0, pc, r0
   19658:	bl	12638 <__assert_fail@plt>
   1965c:	ldr	r3, [pc, #448]	; 19824 <traverse_info_done@@Base+0x40c>
   19660:	ldr	r3, [r4, r3]
   19664:	ldr	r2, [r3]
   19668:	ldr	r3, [pc, #444]	; 1982c <traverse_info_done@@Base+0x414>
   1966c:	ldr	r3, [r4, r3]
   19670:	ldr	r3, [r3, #3360]	; 0xd20
   19674:	sub	r3, r3, #1
   19678:	mov	r1, r3
   1967c:	mov	r0, r2
   19680:	bl	18d84 <print_json_data@@Base+0x174>
   19684:	mov	r0, #41	; 0x29
   19688:	bl	12494 <putchar@plt>
   1968c:	ldr	r3, [pc, #432]	; 19844 <traverse_info_done@@Base+0x42c>
   19690:	ldr	r3, [r4, r3]
   19694:	ldr	r3, [r3]
   19698:	cmp	r3, #0
   1969c:	beq	19710 <traverse_info_done@@Base+0x2f8>
   196a0:	ldr	r3, [pc, #388]	; 1982c <traverse_info_done@@Base+0x414>
   196a4:	ldr	r3, [r4, r3]
   196a8:	ldr	r2, [r3, #136]	; 0x88
   196ac:	ldr	r3, [pc, #376]	; 1982c <traverse_info_done@@Base+0x414>
   196b0:	ldr	r3, [r4, r3]
   196b4:	add	r2, r2, #2
   196b8:	ldr	r3, [r3, r2, lsl #2]
   196bc:	sub	r2, fp, #32
   196c0:	mov	r1, r2
   196c4:	mov	r0, r3
   196c8:	bl	12320 <coda_type_get_unit@plt>
   196cc:	mov	r3, r0
   196d0:	cmp	r3, #0
   196d4:	beq	196dc <traverse_info_done@@Base+0x2c4>
   196d8:	bl	1bdc8 <handle_coda_error@@Base>
   196dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   196e0:	cmp	r3, #0
   196e4:	beq	19710 <traverse_info_done@@Base+0x2f8>
   196e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   196ec:	ldrb	r3, [r3]
   196f0:	cmp	r3, #0
   196f4:	beq	19710 <traverse_info_done@@Base+0x2f8>
   196f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   196fc:	mov	r1, r3
   19700:	ldr	r3, [pc, #320]	; 19848 <traverse_info_done@@Base+0x430>
   19704:	add	r3, pc, r3
   19708:	mov	r0, r3
   1970c:	bl	12200 <printf@plt>
   19710:	ldr	r3, [pc, #308]	; 1984c <traverse_info_done@@Base+0x434>
   19714:	ldr	r3, [r4, r3]
   19718:	ldr	r3, [r3]
   1971c:	cmp	r3, #0
   19720:	beq	19794 <traverse_info_done@@Base+0x37c>
   19724:	ldr	r3, [pc, #256]	; 1982c <traverse_info_done@@Base+0x414>
   19728:	ldr	r3, [r4, r3]
   1972c:	ldr	r2, [r3, #136]	; 0x88
   19730:	ldr	r3, [pc, #244]	; 1982c <traverse_info_done@@Base+0x414>
   19734:	ldr	r3, [r4, r3]
   19738:	add	r2, r2, #2
   1973c:	ldr	r3, [r3, r2, lsl #2]
   19740:	sub	r2, fp, #36	; 0x24
   19744:	mov	r1, r2
   19748:	mov	r0, r3
   1974c:	bl	1232c <coda_type_get_description@plt>
   19750:	mov	r3, r0
   19754:	cmp	r3, #0
   19758:	beq	19760 <traverse_info_done@@Base+0x348>
   1975c:	bl	1bdc8 <handle_coda_error@@Base>
   19760:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19764:	cmp	r3, #0
   19768:	beq	19794 <traverse_info_done@@Base+0x37c>
   1976c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19770:	ldrb	r3, [r3]
   19774:	cmp	r3, #0
   19778:	beq	19794 <traverse_info_done@@Base+0x37c>
   1977c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19780:	mov	r1, r3
   19784:	ldr	r3, [pc, #196]	; 19850 <traverse_info_done@@Base+0x438>
   19788:	add	r3, pc, r3
   1978c:	mov	r0, r3
   19790:	bl	12200 <printf@plt>
   19794:	mov	r0, #10
   19798:	bl	12494 <putchar@plt>
   1979c:	ldr	r3, [pc, #176]	; 19854 <traverse_info_done@@Base+0x43c>
   197a0:	ldr	r3, [r4, r3]
   197a4:	ldr	r3, [r3]
   197a8:	cmp	r3, #0
   197ac:	beq	19804 <traverse_info_done@@Base+0x3ec>
   197b0:	mov	r3, #0
   197b4:	str	r3, [fp, #-16]
   197b8:	b	197d0 <traverse_info_done@@Base+0x3b8>
   197bc:	ldr	r0, [fp, #-16]
   197c0:	bl	150d8 <print_all_distinct_dims@@Base>
   197c4:	ldr	r3, [fp, #-16]
   197c8:	add	r3, r3, #1
   197cc:	str	r3, [fp, #-16]
   197d0:	ldr	r3, [pc, #128]	; 19858 <traverse_info_done@@Base+0x440>
   197d4:	ldr	r3, [r4, r3]
   197d8:	ldr	r3, [r3]
   197dc:	ldr	r2, [fp, #-16]
   197e0:	cmp	r2, r3
   197e4:	blt	197bc <traverse_info_done@@Base+0x3a4>
   197e8:	b	19804 <traverse_info_done@@Base+0x3ec>
   197ec:	ldr	r3, [pc, #44]	; 19820 <traverse_info_done@@Base+0x408>
   197f0:	ldr	r3, [r4, r3]
   197f4:	ldr	r3, [r3]
   197f8:	cmp	r3, #1
   197fc:	bne	19804 <traverse_info_done@@Base+0x3ec>
   19800:	bl	137dc <export_data_element_to_ascii@@Base>
   19804:	nop	{0}
   19808:	sub	sp, fp, #8
   1980c:	ldr	r4, [sp]
   19810:	ldr	fp, [sp, #4]
   19814:	add	sp, sp, #8
   19818:	pop	{pc}		; (ldr pc, [sp], #4)
   1981c:	andeq	r7, r1, r4, asr #22
   19820:	ldrdeq	r0, [r0], -r4
   19824:	ldrdeq	r0, [r0], -ip
   19828:	andeq	r0, r0, r4, asr #3
   1982c:			; <UNDEFINED> instruction: 0x000001b4
   19830:	andeq	r5, r0, ip, ror #22
   19834:	andeq	r5, r0, r8, lsl #22
   19838:	andeq	r5, r0, r4, lsr #23
   1983c:			; <UNDEFINED> instruction: 0x00005abc
   19840:	andeq	r5, r0, ip, lsl fp
   19844:	andeq	r0, r0, ip, lsr #3
   19848:	andeq	r5, r0, ip, lsl #21
   1984c:	andeq	r0, r0, r8, asr #3
   19850:	andeq	r5, r0, r0, lsl sl
   19854:	andeq	r0, r0, r0, lsr #3
   19858:	andeq	r0, r0, r4, ror #3
   1985c:	str	r4, [sp, #-12]!
   19860:	str	fp, [sp, #4]
   19864:	str	lr, [sp, #8]
   19868:	add	fp, sp, #8
   1986c:	sub	sp, sp, #20
   19870:	str	r0, [fp, #-24]	; 0xffffffe8
   19874:	str	r1, [fp, #-28]	; 0xffffffe4
   19878:	ldr	r4, [pc, #520]	; 19a88 <traverse_info_done@@Base+0x670>
   1987c:	add	r4, pc, r4
   19880:	ldr	r3, [pc, #516]	; 19a8c <traverse_info_done@@Base+0x674>
   19884:	ldr	r3, [r4, r3]
   19888:	ldr	r3, [r3, #3748]	; 0xea4
   1988c:	sub	r3, r3, #1
   19890:	ldr	r2, [pc, #500]	; 19a8c <traverse_info_done@@Base+0x674>
   19894:	ldr	r2, [r4, r2]
   19898:	add	r3, r3, #872	; 0x368
   1989c:	lsl	r3, r3, #2
   198a0:	add	r3, r2, r3
   198a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   198a8:	str	r2, [r3, #4]
   198ac:	ldr	r3, [pc, #472]	; 19a8c <traverse_info_done@@Base+0x674>
   198b0:	ldr	r3, [r4, r3]
   198b4:	ldr	r3, [r3, #136]	; 0x88
   198b8:	sub	r2, r3, #1
   198bc:	ldr	r3, [pc, #456]	; 19a8c <traverse_info_done@@Base+0x674>
   198c0:	ldr	r3, [r4, r3]
   198c4:	add	r2, r2, #2
   198c8:	ldr	r3, [r3, r2, lsl #2]
   198cc:	sub	r2, fp, #16
   198d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   198d4:	mov	r0, r3
   198d8:	bl	121f4 <coda_type_get_record_field_hidden_status@plt>
   198dc:	mov	r3, r0
   198e0:	cmp	r3, #0
   198e4:	beq	198ec <traverse_info_done@@Base+0x4d4>
   198e8:	bl	1bdc8 <handle_coda_error@@Base>
   198ec:	ldr	r3, [fp, #-16]
   198f0:	cmp	r3, #0
   198f4:	beq	19904 <traverse_info_done@@Base+0x4ec>
   198f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   198fc:	cmp	r3, #0
   19900:	beq	19a68 <traverse_info_done@@Base+0x650>
   19904:	ldr	r3, [pc, #388]	; 19a90 <traverse_info_done@@Base+0x678>
   19908:	ldr	r3, [r4, r3]
   1990c:	ldr	r3, [r3]
   19910:	cmp	r3, #0
   19914:	beq	199a0 <traverse_info_done@@Base+0x588>
   19918:	ldr	r3, [pc, #364]	; 19a8c <traverse_info_done@@Base+0x674>
   1991c:	ldr	r3, [r4, r3]
   19920:	ldr	r3, [r3, #136]	; 0x88
   19924:	sub	r2, r3, #1
   19928:	ldr	r3, [pc, #348]	; 19a8c <traverse_info_done@@Base+0x674>
   1992c:	ldr	r3, [r4, r3]
   19930:	add	r2, r2, #2
   19934:	ldr	r3, [r3, r2, lsl #2]
   19938:	sub	r2, fp, #20
   1993c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19940:	mov	r0, r3
   19944:	bl	122e4 <coda_type_get_record_field_available_status@plt>
   19948:	mov	r3, r0
   1994c:	cmp	r3, #0
   19950:	beq	19958 <traverse_info_done@@Base+0x540>
   19954:	bl	1bdc8 <handle_coda_error@@Base>
   19958:	ldr	r3, [fp, #-20]	; 0xffffffec
   1995c:	cmn	r3, #1
   19960:	bne	19974 <traverse_info_done@@Base+0x55c>
   19964:	bl	175bc <dim_record_field_available@@Base>
   19968:	mov	r3, r0
   1996c:	cmp	r3, #0
   19970:	beq	19a70 <traverse_info_done@@Base+0x658>
   19974:	ldr	r3, [pc, #272]	; 19a8c <traverse_info_done@@Base+0x674>
   19978:	ldr	r3, [r4, r3]
   1997c:	ldr	r3, [r3, #136]	; 0x88
   19980:	sub	r3, r3, #1
   19984:	ldr	r2, [fp, #-20]	; 0xffffffec
   19988:	ldr	r1, [pc, #252]	; 19a8c <traverse_info_done@@Base+0x674>
   1998c:	ldr	r1, [r4, r1]
   19990:	add	r3, r3, #840	; 0x348
   19994:	lsl	r3, r3, #2
   19998:	add	r3, r1, r3
   1999c:	str	r2, [r3, #4]
   199a0:	ldr	r3, [pc, #228]	; 19a8c <traverse_info_done@@Base+0x674>
   199a4:	ldr	r3, [r4, r3]
   199a8:	ldr	r3, [r3, #136]	; 0x88
   199ac:	sub	r2, r3, #1
   199b0:	ldr	r3, [pc, #212]	; 19a8c <traverse_info_done@@Base+0x674>
   199b4:	ldr	r3, [r4, r3]
   199b8:	add	r2, r2, #2
   199bc:	ldr	r0, [r3, r2, lsl #2]
   199c0:	ldr	r3, [pc, #196]	; 19a8c <traverse_info_done@@Base+0x674>
   199c4:	ldr	r3, [r4, r3]
   199c8:	ldr	r3, [r3, #3748]	; 0xea4
   199cc:	sub	r3, r3, #1
   199d0:	add	r3, r3, #904	; 0x388
   199d4:	lsl	r3, r3, #2
   199d8:	ldr	r2, [pc, #172]	; 19a8c <traverse_info_done@@Base+0x674>
   199dc:	ldr	r2, [r4, r2]
   199e0:	add	r3, r3, r2
   199e4:	add	r3, r3, #4
   199e8:	mov	r2, r3
   199ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   199f0:	bl	125fc <coda_type_get_record_field_name@plt>
   199f4:	mov	r3, r0
   199f8:	cmp	r3, #0
   199fc:	beq	19a04 <traverse_info_done@@Base+0x5ec>
   19a00:	bl	1bdc8 <handle_coda_error@@Base>
   19a04:	ldr	r3, [pc, #128]	; 19a8c <traverse_info_done@@Base+0x674>
   19a08:	ldr	r3, [r4, r3]
   19a0c:	ldr	r3, [r3, #136]	; 0x88
   19a10:	sub	r2, r3, #1
   19a14:	ldr	r3, [pc, #112]	; 19a8c <traverse_info_done@@Base+0x674>
   19a18:	ldr	r3, [r4, r3]
   19a1c:	add	r2, r2, #2
   19a20:	ldr	r0, [r3, r2, lsl #2]
   19a24:	ldr	r3, [pc, #96]	; 19a8c <traverse_info_done@@Base+0x674>
   19a28:	ldr	r3, [r4, r3]
   19a2c:	ldr	r3, [r3, #136]	; 0x88
   19a30:	add	r3, r3, #2
   19a34:	lsl	r3, r3, #2
   19a38:	ldr	r2, [pc, #76]	; 19a8c <traverse_info_done@@Base+0x674>
   19a3c:	ldr	r2, [r4, r2]
   19a40:	add	r3, r3, r2
   19a44:	mov	r2, r3
   19a48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19a4c:	bl	122a8 <coda_type_get_record_field_type@plt>
   19a50:	mov	r3, r0
   19a54:	cmp	r3, #0
   19a58:	beq	19a60 <traverse_info_done@@Base+0x648>
   19a5c:	bl	1bdc8 <handle_coda_error@@Base>
   19a60:	bl	19a94 <traverse_info_done@@Base+0x67c>
   19a64:	b	19a74 <traverse_info_done@@Base+0x65c>
   19a68:	nop	{0}
   19a6c:	b	19a74 <traverse_info_done@@Base+0x65c>
   19a70:	nop	{0}
   19a74:	sub	sp, fp, #8
   19a78:	ldr	r4, [sp]
   19a7c:	ldr	fp, [sp, #4]
   19a80:	add	sp, sp, #8
   19a84:	pop	{pc}		; (ldr pc, [sp], #4)
   19a88:	andeq	r7, r1, ip, ror r7
   19a8c:			; <UNDEFINED> instruction: 0x000001b4
   19a90:			; <UNDEFINED> instruction: 0x000001b0
   19a94:	strd	r4, [sp, #-16]!
   19a98:	str	fp, [sp, #8]
   19a9c:	str	lr, [sp, #12]
   19aa0:	add	fp, sp, #12
   19aa4:	sub	sp, sp, #32
   19aa8:	ldr	r4, [pc, #1644]	; 1a11c <traverse_info_done@@Base+0xd04>
   19aac:	add	r4, pc, r4
   19ab0:	ldr	r3, [pc, #1640]	; 1a120 <traverse_info_done@@Base+0xd08>
   19ab4:	ldr	r3, [r4, r3]
   19ab8:	ldr	r2, [r3, #136]	; 0x88
   19abc:	ldr	r3, [pc, #1628]	; 1a120 <traverse_info_done@@Base+0xd08>
   19ac0:	ldr	r3, [r4, r3]
   19ac4:	add	r2, r2, #2
   19ac8:	ldr	r3, [r3, r2, lsl #2]
   19acc:	sub	r2, fp, #24
   19ad0:	mov	r1, r2
   19ad4:	mov	r0, r3
   19ad8:	bl	12644 <coda_type_get_class@plt>
   19adc:	mov	r3, r0
   19ae0:	cmp	r3, #0
   19ae4:	beq	19aec <traverse_info_done@@Base+0x6d4>
   19ae8:	bl	1bdc8 <handle_coda_error@@Base>
   19aec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19af0:	cmp	r3, #6
   19af4:	addls	pc, pc, r3, lsl #2
   19af8:	b	1a108 <traverse_info_done@@Base+0xcf0>
   19afc:	b	19b18 <traverse_info_done@@Base+0x700>
   19b00:	b	19e48 <traverse_info_done@@Base+0xa30>
   19b04:	b	19f34 <traverse_info_done@@Base+0xb1c>
   19b08:	b	19f34 <traverse_info_done@@Base+0xb1c>
   19b0c:	b	19f34 <traverse_info_done@@Base+0xb1c>
   19b10:	b	19f34 <traverse_info_done@@Base+0xb1c>
   19b14:	b	19fd4 <traverse_info_done@@Base+0xbbc>
   19b18:	ldr	r3, [pc, #1536]	; 1a120 <traverse_info_done@@Base+0xd08>
   19b1c:	ldr	r3, [r4, r3]
   19b20:	ldr	r3, [r3, #136]	; 0x88
   19b24:	cmp	r3, #30
   19b28:	bgt	1a0f4 <traverse_info_done@@Base+0xcdc>
   19b2c:	ldr	r3, [pc, #1516]	; 1a120 <traverse_info_done@@Base+0xd08>
   19b30:	ldr	r3, [r4, r3]
   19b34:	ldr	r3, [r3, #3748]	; 0xea4
   19b38:	add	r2, r3, #1
   19b3c:	ldr	r3, [pc, #1500]	; 1a120 <traverse_info_done@@Base+0xd08>
   19b40:	ldr	r3, [r4, r3]
   19b44:	str	r2, [r3, #3748]	; 0xea4
   19b48:	ldr	r3, [pc, #1488]	; 1a120 <traverse_info_done@@Base+0xd08>
   19b4c:	ldr	r3, [r4, r3]
   19b50:	ldr	r2, [r3, #136]	; 0x88
   19b54:	ldr	r3, [pc, #1476]	; 1a120 <traverse_info_done@@Base+0xd08>
   19b58:	ldr	r3, [r4, r3]
   19b5c:	add	r2, r2, #2
   19b60:	ldr	r3, [r3, r2, lsl #2]
   19b64:	sub	r2, fp, #28
   19b68:	mov	r1, r2
   19b6c:	mov	r0, r3
   19b70:	bl	123e0 <coda_type_get_num_record_fields@plt>
   19b74:	mov	r3, r0
   19b78:	cmp	r3, #0
   19b7c:	beq	19b84 <traverse_info_done@@Base+0x76c>
   19b80:	bl	1bdc8 <handle_coda_error@@Base>
   19b84:	ldr	r3, [pc, #1428]	; 1a120 <traverse_info_done@@Base+0xd08>
   19b88:	ldr	r3, [r4, r3]
   19b8c:	ldr	r3, [r3, #136]	; 0x88
   19b90:	add	r2, r3, #1
   19b94:	ldr	r3, [pc, #1412]	; 1a120 <traverse_info_done@@Base+0xd08>
   19b98:	ldr	r3, [r4, r3]
   19b9c:	str	r2, [r3, #136]	; 0x88
   19ba0:	ldr	r3, [pc, #1400]	; 1a120 <traverse_info_done@@Base+0xd08>
   19ba4:	ldr	r3, [r4, r3]
   19ba8:	ldr	r2, [r3, #796]	; 0x31c
   19bac:	ldr	r3, [pc, #1388]	; 1a120 <traverse_info_done@@Base+0xd08>
   19bb0:	ldr	r3, [r4, r3]
   19bb4:	add	r2, r2, #166	; 0xa6
   19bb8:	ldr	r3, [r3, r2, lsl #2]
   19bbc:	cmp	r3, #0
   19bc0:	beq	19dd4 <traverse_info_done@@Base+0x9bc>
   19bc4:	ldr	r3, [pc, #1364]	; 1a120 <traverse_info_done@@Base+0xd08>
   19bc8:	ldr	r3, [r4, r3]
   19bcc:	ldr	r2, [r3, #796]	; 0x31c
   19bd0:	ldr	r3, [pc, #1352]	; 1a120 <traverse_info_done@@Base+0xd08>
   19bd4:	ldr	r3, [r4, r3]
   19bd8:	add	r2, r2, #166	; 0xa6
   19bdc:	ldr	r3, [r3, r2, lsl #2]
   19be0:	str	r3, [fp, #-16]
   19be4:	b	19d8c <traverse_info_done@@Base+0x974>
   19be8:	ldr	r3, [pc, #1328]	; 1a120 <traverse_info_done@@Base+0xd08>
   19bec:	ldr	r3, [r4, r3]
   19bf0:	ldr	r2, [r3, #796]	; 0x31c
   19bf4:	ldr	r3, [pc, #1316]	; 1a120 <traverse_info_done@@Base+0xd08>
   19bf8:	ldr	r3, [r4, r3]
   19bfc:	add	r2, r2, #166	; 0xa6
   19c00:	ldr	r3, [r3, r2, lsl #2]
   19c04:	mov	r0, r3
   19c08:	bl	17d78 <codadump_filter_get_fieldname@@Base>
   19c0c:	str	r0, [fp, #-20]	; 0xffffffec
   19c10:	ldr	r3, [fp, #-20]	; 0xffffffec
   19c14:	cmp	r3, #0
   19c18:	bne	19c3c <traverse_info_done@@Base+0x824>
   19c1c:	ldr	r3, [pc, #1280]	; 1a124 <traverse_info_done@@Base+0xd0c>
   19c20:	add	r3, pc, r3
   19c24:	movw	r2, #393	; 0x189
   19c28:	ldr	r1, [pc, #1272]	; 1a128 <traverse_info_done@@Base+0xd10>
   19c2c:	add	r1, pc, r1
   19c30:	ldr	r0, [pc, #1268]	; 1a12c <traverse_info_done@@Base+0xd14>
   19c34:	add	r0, pc, r0
   19c38:	bl	12638 <__assert_fail@plt>
   19c3c:	ldr	r3, [pc, #1244]	; 1a120 <traverse_info_done@@Base+0xd08>
   19c40:	ldr	r3, [r4, r3]
   19c44:	ldr	r3, [r3, #136]	; 0x88
   19c48:	sub	r2, r3, #1
   19c4c:	ldr	r3, [pc, #1228]	; 1a120 <traverse_info_done@@Base+0xd08>
   19c50:	ldr	r3, [r4, r3]
   19c54:	add	r2, r2, #2
   19c58:	ldr	r3, [r3, r2, lsl #2]
   19c5c:	sub	r2, fp, #32
   19c60:	ldr	r1, [fp, #-20]	; 0xffffffec
   19c64:	mov	r0, r3
   19c68:	bl	12548 <coda_type_get_record_field_index_from_name@plt>
   19c6c:	mov	r3, r0
   19c70:	cmp	r3, #0
   19c74:	beq	19cb8 <traverse_info_done@@Base+0x8a0>
   19c78:	bl	125e4 <coda_get_errno@plt>
   19c7c:	mov	r3, r0
   19c80:	ldr	r3, [r3]
   19c84:	cmn	r3, #102	; 0x66
   19c88:	bne	19cb4 <traverse_info_done@@Base+0x89c>
   19c8c:	ldr	r3, [pc, #1180]	; 1a130 <traverse_info_done@@Base+0xd18>
   19c90:	ldr	r3, [r4, r3]
   19c94:	ldr	r3, [r3]
   19c98:	ldr	r2, [fp, #-20]	; 0xffffffec
   19c9c:	ldr	r1, [pc, #1168]	; 1a134 <traverse_info_done@@Base+0xd1c>
   19ca0:	add	r1, pc, r1
   19ca4:	mov	r0, r3
   19ca8:	bl	12434 <fprintf@plt>
   19cac:	mov	r0, #1
   19cb0:	bl	123ec <exit@plt>
   19cb4:	bl	1bdc8 <handle_coda_error@@Base>
   19cb8:	ldr	r3, [pc, #1120]	; 1a120 <traverse_info_done@@Base+0xd08>
   19cbc:	ldr	r3, [r4, r3]
   19cc0:	ldr	r2, [r3, #796]	; 0x31c
   19cc4:	ldr	r3, [pc, #1108]	; 1a120 <traverse_info_done@@Base+0xd08>
   19cc8:	ldr	r3, [r4, r3]
   19ccc:	add	r2, r2, #166	; 0xa6
   19cd0:	ldr	r2, [r3, r2, lsl #2]
   19cd4:	ldr	r3, [pc, #1092]	; 1a120 <traverse_info_done@@Base+0xd08>
   19cd8:	ldr	r3, [r4, r3]
   19cdc:	ldr	r3, [r3, #796]	; 0x31c
   19ce0:	add	r5, r3, #1
   19ce4:	mov	r0, r2
   19ce8:	bl	17de0 <codadump_filter_get_subfilter@@Base>
   19cec:	mov	r1, r0
   19cf0:	ldr	r3, [pc, #1064]	; 1a120 <traverse_info_done@@Base+0xd08>
   19cf4:	ldr	r3, [r4, r3]
   19cf8:	add	r2, r5, #166	; 0xa6
   19cfc:	str	r1, [r3, r2, lsl #2]
   19d00:	ldr	r3, [pc, #1048]	; 1a120 <traverse_info_done@@Base+0xd08>
   19d04:	ldr	r3, [r4, r3]
   19d08:	ldr	r3, [r3, #796]	; 0x31c
   19d0c:	add	r2, r3, #1
   19d10:	ldr	r3, [pc, #1032]	; 1a120 <traverse_info_done@@Base+0xd08>
   19d14:	ldr	r3, [r4, r3]
   19d18:	str	r2, [r3, #796]	; 0x31c
   19d1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19d20:	mov	r1, #1
   19d24:	mov	r0, r3
   19d28:	bl	1985c <traverse_info_done@@Base+0x444>
   19d2c:	ldr	r3, [pc, #1004]	; 1a120 <traverse_info_done@@Base+0xd08>
   19d30:	ldr	r3, [r4, r3]
   19d34:	ldr	r3, [r3, #796]	; 0x31c
   19d38:	sub	r2, r3, #1
   19d3c:	ldr	r3, [pc, #988]	; 1a120 <traverse_info_done@@Base+0xd08>
   19d40:	ldr	r3, [r4, r3]
   19d44:	str	r2, [r3, #796]	; 0x31c
   19d48:	ldr	r3, [pc, #976]	; 1a120 <traverse_info_done@@Base+0xd08>
   19d4c:	ldr	r3, [r4, r3]
   19d50:	ldr	r2, [r3, #796]	; 0x31c
   19d54:	ldr	r3, [pc, #964]	; 1a120 <traverse_info_done@@Base+0xd08>
   19d58:	ldr	r3, [r4, r3]
   19d5c:	add	r2, r2, #166	; 0xa6
   19d60:	ldr	r2, [r3, r2, lsl #2]
   19d64:	ldr	r3, [pc, #948]	; 1a120 <traverse_info_done@@Base+0xd08>
   19d68:	ldr	r3, [r4, r3]
   19d6c:	ldr	r5, [r3, #796]	; 0x31c
   19d70:	mov	r0, r2
   19d74:	bl	17e48 <codadump_filter_get_next_filter@@Base>
   19d78:	mov	r1, r0
   19d7c:	ldr	r3, [pc, #924]	; 1a120 <traverse_info_done@@Base+0xd08>
   19d80:	ldr	r3, [r4, r3]
   19d84:	add	r2, r5, #166	; 0xa6
   19d88:	str	r1, [r3, r2, lsl #2]
   19d8c:	ldr	r3, [pc, #908]	; 1a120 <traverse_info_done@@Base+0xd08>
   19d90:	ldr	r3, [r4, r3]
   19d94:	ldr	r2, [r3, #796]	; 0x31c
   19d98:	ldr	r3, [pc, #896]	; 1a120 <traverse_info_done@@Base+0xd08>
   19d9c:	ldr	r3, [r4, r3]
   19da0:	add	r2, r2, #166	; 0xa6
   19da4:	ldr	r3, [r3, r2, lsl #2]
   19da8:	cmp	r3, #0
   19dac:	bne	19be8 <traverse_info_done@@Base+0x7d0>
   19db0:	ldr	r3, [pc, #872]	; 1a120 <traverse_info_done@@Base+0xd08>
   19db4:	ldr	r3, [r4, r3]
   19db8:	ldr	r2, [r3, #796]	; 0x31c
   19dbc:	ldr	r3, [pc, #860]	; 1a120 <traverse_info_done@@Base+0xd08>
   19dc0:	ldr	r3, [r4, r3]
   19dc4:	add	r2, r2, #166	; 0xa6
   19dc8:	ldr	r1, [fp, #-16]
   19dcc:	str	r1, [r3, r2, lsl #2]
   19dd0:	b	19e0c <traverse_info_done@@Base+0x9f4>
   19dd4:	mov	r3, #0
   19dd8:	str	r3, [fp, #-32]	; 0xffffffe0
   19ddc:	b	19dfc <traverse_info_done@@Base+0x9e4>
   19de0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19de4:	mov	r1, #0
   19de8:	mov	r0, r3
   19dec:	bl	1985c <traverse_info_done@@Base+0x444>
   19df0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19df4:	add	r3, r3, #1
   19df8:	str	r3, [fp, #-32]	; 0xffffffe0
   19dfc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19e00:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19e04:	cmp	r2, r3
   19e08:	blt	19de0 <traverse_info_done@@Base+0x9c8>
   19e0c:	ldr	r3, [pc, #780]	; 1a120 <traverse_info_done@@Base+0xd08>
   19e10:	ldr	r3, [r4, r3]
   19e14:	ldr	r3, [r3, #136]	; 0x88
   19e18:	sub	r2, r3, #1
   19e1c:	ldr	r3, [pc, #764]	; 1a120 <traverse_info_done@@Base+0xd08>
   19e20:	ldr	r3, [r4, r3]
   19e24:	str	r2, [r3, #136]	; 0x88
   19e28:	ldr	r3, [pc, #752]	; 1a120 <traverse_info_done@@Base+0xd08>
   19e2c:	ldr	r3, [r4, r3]
   19e30:	ldr	r3, [r3, #3748]	; 0xea4
   19e34:	sub	r2, r3, #1
   19e38:	ldr	r3, [pc, #736]	; 1a120 <traverse_info_done@@Base+0xd08>
   19e3c:	ldr	r3, [r4, r3]
   19e40:	str	r2, [r3, #3748]	; 0xea4
   19e44:	b	1a108 <traverse_info_done@@Base+0xcf0>
   19e48:	ldr	r3, [pc, #720]	; 1a120 <traverse_info_done@@Base+0xd08>
   19e4c:	ldr	r3, [r4, r3]
   19e50:	ldr	r3, [r3, #136]	; 0x88
   19e54:	cmp	r3, #30
   19e58:	bgt	1a0fc <traverse_info_done@@Base+0xce4>
   19e5c:	bl	15ed4 <dim_enter_array@@Base>
   19e60:	ldr	r3, [pc, #696]	; 1a120 <traverse_info_done@@Base+0xd08>
   19e64:	ldr	r3, [r4, r3]
   19e68:	ldr	r3, [r3, #3360]	; 0xd20
   19e6c:	add	r2, r3, #1
   19e70:	ldr	r3, [pc, #680]	; 1a120 <traverse_info_done@@Base+0xd08>
   19e74:	ldr	r3, [r4, r3]
   19e78:	str	r2, [r3, #3360]	; 0xd20
   19e7c:	ldr	r3, [pc, #668]	; 1a120 <traverse_info_done@@Base+0xd08>
   19e80:	ldr	r3, [r4, r3]
   19e84:	ldr	r3, [r3, #136]	; 0x88
   19e88:	add	r2, r3, #1
   19e8c:	ldr	r3, [pc, #652]	; 1a120 <traverse_info_done@@Base+0xd08>
   19e90:	ldr	r3, [r4, r3]
   19e94:	str	r2, [r3, #136]	; 0x88
   19e98:	ldr	r3, [pc, #640]	; 1a120 <traverse_info_done@@Base+0xd08>
   19e9c:	ldr	r3, [r4, r3]
   19ea0:	ldr	r3, [r3, #136]	; 0x88
   19ea4:	sub	r2, r3, #1
   19ea8:	ldr	r3, [pc, #624]	; 1a120 <traverse_info_done@@Base+0xd08>
   19eac:	ldr	r3, [r4, r3]
   19eb0:	add	r2, r2, #2
   19eb4:	ldr	r0, [r3, r2, lsl #2]
   19eb8:	ldr	r3, [pc, #608]	; 1a120 <traverse_info_done@@Base+0xd08>
   19ebc:	ldr	r3, [r4, r3]
   19ec0:	ldr	r3, [r3, #136]	; 0x88
   19ec4:	add	r3, r3, #2
   19ec8:	lsl	r3, r3, #2
   19ecc:	ldr	r2, [pc, #588]	; 1a120 <traverse_info_done@@Base+0xd08>
   19ed0:	ldr	r2, [r4, r2]
   19ed4:	add	r3, r3, r2
   19ed8:	mov	r1, r3
   19edc:	bl	124d0 <coda_type_get_array_base_type@plt>
   19ee0:	mov	r3, r0
   19ee4:	cmp	r3, #0
   19ee8:	beq	19ef0 <traverse_info_done@@Base+0xad8>
   19eec:	bl	1bdc8 <handle_coda_error@@Base>
   19ef0:	bl	19a94 <traverse_info_done@@Base+0x67c>
   19ef4:	ldr	r3, [pc, #548]	; 1a120 <traverse_info_done@@Base+0xd08>
   19ef8:	ldr	r3, [r4, r3]
   19efc:	ldr	r3, [r3, #136]	; 0x88
   19f00:	sub	r2, r3, #1
   19f04:	ldr	r3, [pc, #532]	; 1a120 <traverse_info_done@@Base+0xd08>
   19f08:	ldr	r3, [r4, r3]
   19f0c:	str	r2, [r3, #136]	; 0x88
   19f10:	ldr	r3, [pc, #520]	; 1a120 <traverse_info_done@@Base+0xd08>
   19f14:	ldr	r3, [r4, r3]
   19f18:	ldr	r3, [r3, #3360]	; 0xd20
   19f1c:	sub	r2, r3, #1
   19f20:	ldr	r3, [pc, #504]	; 1a120 <traverse_info_done@@Base+0xd08>
   19f24:	ldr	r3, [r4, r3]
   19f28:	str	r2, [r3, #3360]	; 0xd20
   19f2c:	bl	16e80 <dim_leave_array@@Base>
   19f30:	b	1a108 <traverse_info_done@@Base+0xcf0>
   19f34:	ldr	r3, [pc, #484]	; 1a120 <traverse_info_done@@Base+0xd08>
   19f38:	ldr	r3, [r4, r3]
   19f3c:	ldr	r2, [r3, #136]	; 0x88
   19f40:	ldr	r3, [pc, #472]	; 1a120 <traverse_info_done@@Base+0xd08>
   19f44:	ldr	r3, [r4, r3]
   19f48:	add	r2, r2, #2
   19f4c:	ldr	r3, [r3, r2, lsl #2]
   19f50:	sub	r2, fp, #36	; 0x24
   19f54:	mov	r1, r2
   19f58:	mov	r0, r3
   19f5c:	bl	123f8 <coda_type_get_read_type@plt>
   19f60:	mov	r3, r0
   19f64:	cmp	r3, #0
   19f68:	beq	19f70 <traverse_info_done@@Base+0xb58>
   19f6c:	bl	1bdc8 <handle_coda_error@@Base>
   19f70:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19f74:	sub	r3, r3, #11
   19f78:	cmp	r3, #1
   19f7c:	bhi	19fc8 <traverse_info_done@@Base+0xbb0>
   19f80:	bl	15ed4 <dim_enter_array@@Base>
   19f84:	ldr	r3, [pc, #404]	; 1a120 <traverse_info_done@@Base+0xd08>
   19f88:	ldr	r3, [r4, r3]
   19f8c:	ldr	r3, [r3, #3360]	; 0xd20
   19f90:	add	r2, r3, #1
   19f94:	ldr	r3, [pc, #388]	; 1a120 <traverse_info_done@@Base+0xd08>
   19f98:	ldr	r3, [r4, r3]
   19f9c:	str	r2, [r3, #3360]	; 0xd20
   19fa0:	bl	1949c <traverse_info_done@@Base+0x84>
   19fa4:	ldr	r3, [pc, #372]	; 1a120 <traverse_info_done@@Base+0xd08>
   19fa8:	ldr	r3, [r4, r3]
   19fac:	ldr	r3, [r3, #3360]	; 0xd20
   19fb0:	sub	r2, r3, #1
   19fb4:	ldr	r3, [pc, #356]	; 1a120 <traverse_info_done@@Base+0xd08>
   19fb8:	ldr	r3, [r4, r3]
   19fbc:	str	r2, [r3, #3360]	; 0xd20
   19fc0:	bl	16e80 <dim_leave_array@@Base>
   19fc4:	b	19fd0 <traverse_info_done@@Base+0xbb8>
   19fc8:	bl	1949c <traverse_info_done@@Base+0x84>
   19fcc:	nop	{0}
   19fd0:	b	1a108 <traverse_info_done@@Base+0xcf0>
   19fd4:	bl	121d0 <coda_get_option_bypass_special_types@plt>
   19fd8:	mov	r3, r0
   19fdc:	cmp	r3, #0
   19fe0:	beq	1a040 <traverse_info_done@@Base+0xc28>
   19fe4:	ldr	r3, [pc, #308]	; 1a120 <traverse_info_done@@Base+0xd08>
   19fe8:	ldr	r3, [r4, r3]
   19fec:	ldr	r2, [r3, #136]	; 0x88
   19ff0:	ldr	r3, [pc, #296]	; 1a120 <traverse_info_done@@Base+0xd08>
   19ff4:	ldr	r3, [r4, r3]
   19ff8:	add	r2, r2, #2
   19ffc:	ldr	r0, [r3, r2, lsl #2]
   1a000:	ldr	r3, [pc, #280]	; 1a120 <traverse_info_done@@Base+0xd08>
   1a004:	ldr	r3, [r4, r3]
   1a008:	ldr	r3, [r3, #136]	; 0x88
   1a00c:	add	r3, r3, #2
   1a010:	lsl	r3, r3, #2
   1a014:	ldr	r2, [pc, #260]	; 1a120 <traverse_info_done@@Base+0xd08>
   1a018:	ldr	r2, [r4, r2]
   1a01c:	add	r3, r3, r2
   1a020:	mov	r1, r3
   1a024:	bl	125f0 <coda_type_get_special_base_type@plt>
   1a028:	mov	r3, r0
   1a02c:	cmp	r3, #0
   1a030:	beq	1a038 <traverse_info_done@@Base+0xc20>
   1a034:	bl	1bdc8 <handle_coda_error@@Base>
   1a038:	bl	19a94 <traverse_info_done@@Base+0x67c>
   1a03c:	b	1a108 <traverse_info_done@@Base+0xcf0>
   1a040:	ldr	r3, [pc, #216]	; 1a120 <traverse_info_done@@Base+0xd08>
   1a044:	ldr	r3, [r4, r3]
   1a048:	ldr	r2, [r3, #136]	; 0x88
   1a04c:	ldr	r3, [pc, #204]	; 1a120 <traverse_info_done@@Base+0xd08>
   1a050:	ldr	r3, [r4, r3]
   1a054:	add	r2, r2, #2
   1a058:	ldr	r3, [r3, r2, lsl #2]
   1a05c:	sub	r2, fp, #40	; 0x28
   1a060:	mov	r1, r2
   1a064:	mov	r0, r3
   1a068:	bl	124ac <coda_type_get_special_type@plt>
   1a06c:	mov	r3, r0
   1a070:	cmp	r3, #0
   1a074:	beq	1a07c <traverse_info_done@@Base+0xc64>
   1a078:	bl	1bdc8 <handle_coda_error@@Base>
   1a07c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a080:	cmp	r3, #3
   1a084:	addls	pc, pc, r3, lsl #2
   1a088:	b	1a104 <traverse_info_done@@Base+0xcec>
   1a08c:	b	1a104 <traverse_info_done@@Base+0xcec>
   1a090:	b	1a09c <traverse_info_done@@Base+0xc84>
   1a094:	b	1a09c <traverse_info_done@@Base+0xc84>
   1a098:	b	1a0a4 <traverse_info_done@@Base+0xc8c>
   1a09c:	bl	1949c <traverse_info_done@@Base+0x84>
   1a0a0:	b	1a0ec <traverse_info_done@@Base+0xcd4>
   1a0a4:	bl	15ed4 <dim_enter_array@@Base>
   1a0a8:	ldr	r3, [pc, #112]	; 1a120 <traverse_info_done@@Base+0xd08>
   1a0ac:	ldr	r3, [r4, r3]
   1a0b0:	ldr	r3, [r3, #3360]	; 0xd20
   1a0b4:	add	r2, r3, #1
   1a0b8:	ldr	r3, [pc, #96]	; 1a120 <traverse_info_done@@Base+0xd08>
   1a0bc:	ldr	r3, [r4, r3]
   1a0c0:	str	r2, [r3, #3360]	; 0xd20
   1a0c4:	bl	1949c <traverse_info_done@@Base+0x84>
   1a0c8:	ldr	r3, [pc, #80]	; 1a120 <traverse_info_done@@Base+0xd08>
   1a0cc:	ldr	r3, [r4, r3]
   1a0d0:	ldr	r3, [r3, #3360]	; 0xd20
   1a0d4:	sub	r2, r3, #1
   1a0d8:	ldr	r3, [pc, #64]	; 1a120 <traverse_info_done@@Base+0xd08>
   1a0dc:	ldr	r3, [r4, r3]
   1a0e0:	str	r2, [r3, #3360]	; 0xd20
   1a0e4:	bl	16e80 <dim_leave_array@@Base>
   1a0e8:	nop	{0}
   1a0ec:	nop	{0}
   1a0f0:	b	1a104 <traverse_info_done@@Base+0xcec>
   1a0f4:	nop	{0}
   1a0f8:	b	1a108 <traverse_info_done@@Base+0xcf0>
   1a0fc:	nop	{0}
   1a100:	b	1a108 <traverse_info_done@@Base+0xcf0>
   1a104:	nop	{0}
   1a108:	sub	sp, fp, #12
   1a10c:	ldrd	r4, [sp]
   1a110:	ldr	fp, [sp, #8]
   1a114:	add	sp, sp, #12
   1a118:	pop	{pc}		; (ldr pc, [sp], #4)
   1a11c:	andeq	r7, r1, ip, asr #10
   1a120:			; <UNDEFINED> instruction: 0x000001b4
   1a124:	ldrdeq	r5, [r0], -r8
   1a128:	ldrdeq	r5, [r0], -ip
   1a12c:	andeq	r5, r0, ip, ror #10
   1a130:			; <UNDEFINED> instruction: 0x000001b8
   1a134:	andeq	r5, r0, r0, lsl r5

0001a138 <traverse_product@@Base>:
   1a138:	str	r4, [sp, #-12]!
   1a13c:	str	fp, [sp, #4]
   1a140:	str	lr, [sp, #8]
   1a144:	add	fp, sp, #8
   1a148:	sub	sp, sp, #12
   1a14c:	ldr	r4, [pc, #316]	; 1a290 <traverse_product@@Base+0x158>
   1a150:	add	r4, pc, r4
   1a154:	ldr	r3, [pc, #312]	; 1a294 <traverse_product@@Base+0x15c>
   1a158:	ldr	r3, [r4, r3]
   1a15c:	ldr	r2, [r3]
   1a160:	ldr	r3, [pc, #300]	; 1a294 <traverse_product@@Base+0x15c>
   1a164:	ldr	r3, [r4, r3]
   1a168:	add	r1, r3, #4
   1a16c:	mov	r0, r2
   1a170:	bl	12230 <coda_open@plt>
   1a174:	str	r0, [fp, #-16]
   1a178:	ldr	r3, [fp, #-16]
   1a17c:	cmp	r3, #0
   1a180:	beq	1a1cc <traverse_product@@Base+0x94>
   1a184:	bl	125e4 <coda_get_errno@plt>
   1a188:	mov	r3, r0
   1a18c:	ldr	r3, [r3]
   1a190:	cmn	r3, #21
   1a194:	bne	1a1cc <traverse_product@@Base+0x94>
   1a198:	mov	r0, #0
   1a19c:	bl	12278 <coda_set_option_use_mmap@plt>
   1a1a0:	ldr	r3, [pc, #236]	; 1a294 <traverse_product@@Base+0x15c>
   1a1a4:	ldr	r3, [r4, r3]
   1a1a8:	ldr	r2, [r3]
   1a1ac:	ldr	r3, [pc, #224]	; 1a294 <traverse_product@@Base+0x15c>
   1a1b0:	ldr	r3, [r4, r3]
   1a1b4:	add	r1, r3, #4
   1a1b8:	mov	r0, r2
   1a1bc:	bl	12230 <coda_open@plt>
   1a1c0:	str	r0, [fp, #-16]
   1a1c4:	mov	r0, #1
   1a1c8:	bl	12278 <coda_set_option_use_mmap@plt>
   1a1cc:	ldr	r3, [fp, #-16]
   1a1d0:	cmp	r3, #0
   1a1d4:	beq	1a1dc <traverse_product@@Base+0xa4>
   1a1d8:	bl	1bdc8 <handle_coda_error@@Base>
   1a1dc:	ldr	r3, [pc, #176]	; 1a294 <traverse_product@@Base+0x15c>
   1a1e0:	ldr	r3, [r4, r3]
   1a1e4:	ldr	r3, [r3, #4]
   1a1e8:	mov	r1, r3
   1a1ec:	ldr	r3, [pc, #160]	; 1a294 <traverse_product@@Base+0x15c>
   1a1f0:	ldr	r3, [r4, r3]
   1a1f4:	add	r0, r3, #144	; 0x90
   1a1f8:	bl	1235c <coda_cursor_set_product@plt>
   1a1fc:	mov	r3, r0
   1a200:	cmp	r3, #0
   1a204:	beq	1a20c <traverse_product@@Base+0xd4>
   1a208:	bl	1bdc8 <handle_coda_error@@Base>
   1a20c:	ldr	r3, [pc, #128]	; 1a294 <traverse_product@@Base+0x15c>
   1a210:	ldr	r3, [r4, r3]
   1a214:	ldr	r3, [r3, #136]	; 0x88
   1a218:	add	r3, r3, #2
   1a21c:	lsl	r3, r3, #2
   1a220:	ldr	r2, [pc, #108]	; 1a294 <traverse_product@@Base+0x15c>
   1a224:	ldr	r2, [r4, r2]
   1a228:	add	r3, r3, r2
   1a22c:	mov	r1, r3
   1a230:	ldr	r3, [pc, #92]	; 1a294 <traverse_product@@Base+0x15c>
   1a234:	ldr	r3, [r4, r3]
   1a238:	add	r0, r3, #144	; 0x90
   1a23c:	bl	122b4 <coda_cursor_get_type@plt>
   1a240:	mov	r3, r0
   1a244:	cmp	r3, #0
   1a248:	beq	1a250 <traverse_product@@Base+0x118>
   1a24c:	bl	1bdc8 <handle_coda_error@@Base>
   1a250:	bl	19a94 <traverse_info_done@@Base+0x67c>
   1a254:	ldr	r3, [pc, #56]	; 1a294 <traverse_product@@Base+0x15c>
   1a258:	ldr	r3, [r4, r3]
   1a25c:	ldr	r3, [r3, #4]
   1a260:	mov	r0, r3
   1a264:	bl	12518 <coda_close@plt>
   1a268:	ldr	r3, [pc, #36]	; 1a294 <traverse_product@@Base+0x15c>
   1a26c:	ldr	r3, [r4, r3]
   1a270:	mov	r2, #0
   1a274:	str	r2, [r3, #4]
   1a278:	nop	{0}
   1a27c:	sub	sp, fp, #8
   1a280:	ldr	r4, [sp]
   1a284:	ldr	fp, [sp, #4]
   1a288:	add	sp, sp, #8
   1a28c:	pop	{pc}		; (ldr pc, [sp], #4)
   1a290:	andeq	r6, r1, r8, lsr #29
   1a294:			; <UNDEFINED> instruction: 0x000001b4
   1a298:	str	r4, [sp, #-12]!
   1a29c:	str	fp, [sp, #4]
   1a2a0:	str	lr, [sp, #8]
   1a2a4:	add	fp, sp, #8
   1a2a8:	sub	sp, sp, #12
   1a2ac:	ldr	r4, [pc, #152]	; 1a34c <traverse_product@@Base+0x214>
   1a2b0:	add	r4, pc, r4
   1a2b4:	ldr	r3, [pc, #148]	; 1a350 <traverse_product@@Base+0x218>
   1a2b8:	add	r3, pc, r3
   1a2bc:	ldr	r3, [r3]
   1a2c0:	cmp	r3, #0
   1a2c4:	bge	1a2e8 <traverse_product@@Base+0x1b0>
   1a2c8:	ldr	r3, [pc, #132]	; 1a354 <traverse_product@@Base+0x21c>
   1a2cc:	add	r3, pc, r3
   1a2d0:	mov	r2, #44	; 0x2c
   1a2d4:	ldr	r1, [pc, #124]	; 1a358 <traverse_product@@Base+0x220>
   1a2d8:	add	r1, pc, r1
   1a2dc:	ldr	r0, [pc, #120]	; 1a35c <traverse_product@@Base+0x224>
   1a2e0:	add	r0, pc, r0
   1a2e4:	bl	12638 <__assert_fail@plt>
   1a2e8:	ldr	r3, [pc, #112]	; 1a360 <traverse_product@@Base+0x228>
   1a2ec:	add	r3, pc, r3
   1a2f0:	ldr	r3, [r3]
   1a2f4:	str	r3, [fp, #-16]
   1a2f8:	b	1a328 <traverse_product@@Base+0x1f0>
   1a2fc:	ldr	r3, [pc, #96]	; 1a364 <traverse_product@@Base+0x22c>
   1a300:	ldr	r3, [r4, r3]
   1a304:	ldr	r3, [r3]
   1a308:	mov	r2, #2
   1a30c:	mov	r1, #1
   1a310:	ldr	r0, [pc, #80]	; 1a368 <traverse_product@@Base+0x230>
   1a314:	add	r0, pc, r0
   1a318:	bl	12350 <fwrite@plt>
   1a31c:	ldr	r3, [fp, #-16]
   1a320:	sub	r3, r3, #1
   1a324:	str	r3, [fp, #-16]
   1a328:	ldr	r3, [fp, #-16]
   1a32c:	cmp	r3, #0
   1a330:	bgt	1a2fc <traverse_product@@Base+0x1c4>
   1a334:	nop	{0}
   1a338:	sub	sp, fp, #8
   1a33c:	ldr	r4, [sp]
   1a340:	ldr	fp, [sp, #4]
   1a344:	add	sp, sp, #8
   1a348:	pop	{pc}		; (ldr pc, [sp], #4)
   1a34c:	andeq	r6, r1, r8, asr #26
   1a350:	andeq	r6, r1, r4, asr pc
   1a354:	strheq	r5, [r0], -r4
   1a358:	andeq	r4, r0, r0, lsr pc
   1a35c:	andeq	r4, r0, ip, lsl #31
   1a360:	andeq	r6, r1, r0, lsr #30
   1a364:			; <UNDEFINED> instruction: 0x000001bc
   1a368:	andeq	r4, r0, r4, ror #30
   1a36c:	push	{r0, r1, r2, r3}
   1a370:	str	fp, [sp, #-8]!
   1a374:	str	lr, [sp, #4]
   1a378:	add	fp, sp, #4
   1a37c:	sub	sp, sp, #8
   1a380:	ldr	r2, [pc, #72]	; 1a3d0 <traverse_product@@Base+0x298>
   1a384:	add	r2, pc, r2
   1a388:	add	r3, fp, #8
   1a38c:	str	r3, [fp, #-12]
   1a390:	ldr	r3, [pc, #60]	; 1a3d4 <traverse_product@@Base+0x29c>
   1a394:	ldr	r3, [r2, r3]
   1a398:	ldr	r3, [r3]
   1a39c:	ldr	r2, [fp, #-12]
   1a3a0:	ldr	r1, [fp, #4]
   1a3a4:	mov	r0, r3
   1a3a8:	bl	12530 <vfprintf@plt>
   1a3ac:	str	r0, [fp, #-8]
   1a3b0:	ldr	r3, [fp, #-8]
   1a3b4:	mov	r0, r3
   1a3b8:	sub	sp, fp, #4
   1a3bc:	ldr	fp, [sp]
   1a3c0:	ldr	lr, [sp, #4]
   1a3c4:	add	sp, sp, #8
   1a3c8:	add	sp, sp, #16
   1a3cc:	bx	lr
   1a3d0:	andeq	r6, r1, r4, ror ip
   1a3d4:			; <UNDEFINED> instruction: 0x000001bc
   1a3d8:	push	{r0, r1, r2, r3}
   1a3dc:	str	r4, [sp, #-12]!
   1a3e0:	str	fp, [sp, #4]
   1a3e4:	str	lr, [sp, #8]
   1a3e8:	add	fp, sp, #8
   1a3ec:	sub	sp, sp, #12
   1a3f0:	ldr	r4, [pc, #80]	; 1a448 <traverse_product@@Base+0x310>
   1a3f4:	add	r4, pc, r4
   1a3f8:	bl	1a298 <traverse_product@@Base+0x160>
   1a3fc:	add	r3, fp, #8
   1a400:	str	r3, [fp, #-20]	; 0xffffffec
   1a404:	ldr	r3, [pc, #64]	; 1a44c <traverse_product@@Base+0x314>
   1a408:	ldr	r3, [r4, r3]
   1a40c:	ldr	r3, [r3]
   1a410:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a414:	ldr	r1, [fp, #4]
   1a418:	mov	r0, r3
   1a41c:	bl	12530 <vfprintf@plt>
   1a420:	str	r0, [fp, #-16]
   1a424:	ldr	r3, [fp, #-16]
   1a428:	mov	r0, r3
   1a42c:	sub	sp, fp, #8
   1a430:	ldr	r4, [sp]
   1a434:	ldr	fp, [sp, #4]
   1a438:	ldr	lr, [sp, #8]
   1a43c:	add	sp, sp, #12
   1a440:	add	sp, sp, #16
   1a444:	bx	lr
   1a448:	andeq	r6, r1, r4, lsl #24
   1a44c:			; <UNDEFINED> instruction: 0x000001bc
   1a450:	str	fp, [sp, #-8]!
   1a454:	str	lr, [sp, #4]
   1a458:	add	fp, sp, #4
   1a45c:	sub	sp, sp, #16
   1a460:	str	r0, [fp, #-16]
   1a464:	str	r1, [fp, #-20]	; 0xffffffec
   1a468:	mov	r3, #0
   1a46c:	str	r3, [fp, #-8]
   1a470:	b	1a5b8 <traverse_product@@Base+0x480>
   1a474:	ldr	r3, [fp, #-8]
   1a478:	ldr	r2, [fp, #-16]
   1a47c:	add	r3, r2, r3
   1a480:	ldrb	r3, [r3]
   1a484:	strb	r3, [fp, #-9]
   1a488:	ldrb	r3, [fp, #-9]
   1a48c:	cmp	r3, #12
   1a490:	beq	1a4e8 <traverse_product@@Base+0x3b0>
   1a494:	cmp	r3, #12
   1a498:	bgt	1a4b8 <traverse_product@@Base+0x380>
   1a49c:	cmp	r3, #9
   1a4a0:	beq	1a524 <traverse_product@@Base+0x3ec>
   1a4a4:	cmp	r3, #10
   1a4a8:	beq	1a4fc <traverse_product@@Base+0x3c4>
   1a4ac:	cmp	r3, #8
   1a4b0:	beq	1a4d4 <traverse_product@@Base+0x39c>
   1a4b4:	b	1a560 <traverse_product@@Base+0x428>
   1a4b8:	cmp	r3, #34	; 0x22
   1a4bc:	beq	1a538 <traverse_product@@Base+0x400>
   1a4c0:	cmp	r3, #92	; 0x5c
   1a4c4:	beq	1a54c <traverse_product@@Base+0x414>
   1a4c8:	cmp	r3, #13
   1a4cc:	beq	1a510 <traverse_product@@Base+0x3d8>
   1a4d0:	b	1a560 <traverse_product@@Base+0x428>
   1a4d4:	ldr	r3, [pc, #256]	; 1a5dc <traverse_product@@Base+0x4a4>
   1a4d8:	add	r3, pc, r3
   1a4dc:	mov	r0, r3
   1a4e0:	bl	1a36c <traverse_product@@Base+0x234>
   1a4e4:	b	1a5ac <traverse_product@@Base+0x474>
   1a4e8:	ldr	r3, [pc, #240]	; 1a5e0 <traverse_product@@Base+0x4a8>
   1a4ec:	add	r3, pc, r3
   1a4f0:	mov	r0, r3
   1a4f4:	bl	1a36c <traverse_product@@Base+0x234>
   1a4f8:	b	1a5ac <traverse_product@@Base+0x474>
   1a4fc:	ldr	r3, [pc, #224]	; 1a5e4 <traverse_product@@Base+0x4ac>
   1a500:	add	r3, pc, r3
   1a504:	mov	r0, r3
   1a508:	bl	1a36c <traverse_product@@Base+0x234>
   1a50c:	b	1a5ac <traverse_product@@Base+0x474>
   1a510:	ldr	r3, [pc, #208]	; 1a5e8 <traverse_product@@Base+0x4b0>
   1a514:	add	r3, pc, r3
   1a518:	mov	r0, r3
   1a51c:	bl	1a36c <traverse_product@@Base+0x234>
   1a520:	b	1a5ac <traverse_product@@Base+0x474>
   1a524:	ldr	r3, [pc, #192]	; 1a5ec <traverse_product@@Base+0x4b4>
   1a528:	add	r3, pc, r3
   1a52c:	mov	r0, r3
   1a530:	bl	1a36c <traverse_product@@Base+0x234>
   1a534:	b	1a5ac <traverse_product@@Base+0x474>
   1a538:	ldr	r3, [pc, #176]	; 1a5f0 <traverse_product@@Base+0x4b8>
   1a53c:	add	r3, pc, r3
   1a540:	mov	r0, r3
   1a544:	bl	1a36c <traverse_product@@Base+0x234>
   1a548:	b	1a5ac <traverse_product@@Base+0x474>
   1a54c:	ldr	r3, [pc, #160]	; 1a5f4 <traverse_product@@Base+0x4bc>
   1a550:	add	r3, pc, r3
   1a554:	mov	r0, r3
   1a558:	bl	1a36c <traverse_product@@Base+0x234>
   1a55c:	b	1a5ac <traverse_product@@Base+0x474>
   1a560:	ldrb	r3, [fp, #-9]
   1a564:	cmp	r3, #31
   1a568:	bls	1a594 <traverse_product@@Base+0x45c>
   1a56c:	ldrb	r3, [fp, #-9]
   1a570:	cmp	r3, #126	; 0x7e
   1a574:	bhi	1a594 <traverse_product@@Base+0x45c>
   1a578:	ldrb	r3, [fp, #-9]
   1a57c:	mov	r1, r3
   1a580:	ldr	r3, [pc, #112]	; 1a5f8 <traverse_product@@Base+0x4c0>
   1a584:	add	r3, pc, r3
   1a588:	mov	r0, r3
   1a58c:	bl	1a36c <traverse_product@@Base+0x234>
   1a590:	b	1a5ac <traverse_product@@Base+0x474>
   1a594:	ldrb	r3, [fp, #-9]
   1a598:	mov	r1, r3
   1a59c:	ldr	r3, [pc, #88]	; 1a5fc <traverse_product@@Base+0x4c4>
   1a5a0:	add	r3, pc, r3
   1a5a4:	mov	r0, r3
   1a5a8:	bl	1a36c <traverse_product@@Base+0x234>
   1a5ac:	ldr	r3, [fp, #-8]
   1a5b0:	add	r3, r3, #1
   1a5b4:	str	r3, [fp, #-8]
   1a5b8:	ldr	r2, [fp, #-8]
   1a5bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a5c0:	cmp	r2, r3
   1a5c4:	blt	1a474 <traverse_product@@Base+0x33c>
   1a5c8:	nop	{0}
   1a5cc:	sub	sp, fp, #4
   1a5d0:	ldr	fp, [sp]
   1a5d4:	add	sp, sp, #4
   1a5d8:	pop	{pc}		; (ldr pc, [sp], #4)
   1a5dc:	andeq	r4, r0, r4, lsr #27
   1a5e0:	muleq	r0, r4, sp
   1a5e4:	andeq	r4, r0, r4, lsl #27
   1a5e8:	andeq	r4, r0, r4, ror sp
   1a5ec:	andeq	r4, r0, r4, ror #26
   1a5f0:	andeq	r4, r0, r4, asr sp
   1a5f4:	andeq	r4, r0, r4, asr #26
   1a5f8:	andeq	r4, r0, r4, lsl sp
   1a5fc:	strdeq	r4, [r0], -ip
   1a600:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1a604:	strd	r6, [sp, #8]
   1a608:	strd	r8, [sp, #16]
   1a60c:	str	fp, [sp, #24]
   1a610:	str	lr, [sp, #28]
   1a614:	add	fp, sp, #28
   1a618:	sub	sp, sp, #288	; 0x120
   1a61c:	str	r0, [fp, #-304]	; 0xfffffed0
   1a620:	str	r1, [fp, #-308]	; 0xfffffecc
   1a624:	mov	r3, #0
   1a628:	str	r3, [fp, #-64]	; 0xffffffc0
   1a62c:	ldr	r3, [pc, #3068]	; 1b230 <traverse_product@@Base+0x10f8>
   1a630:	add	r3, pc, r3
   1a634:	ldr	r3, [r3]
   1a638:	cmp	r3, #0
   1a63c:	beq	1a72c <traverse_product@@Base+0x5f4>
   1a640:	sub	r3, fp, #64	; 0x40
   1a644:	mov	r1, r3
   1a648:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1a64c:	bl	122f0 <coda_cursor_has_attributes@plt>
   1a650:	mov	r3, r0
   1a654:	cmp	r3, #0
   1a658:	beq	1a660 <traverse_product@@Base+0x528>
   1a65c:	bl	1bdc8 <handle_coda_error@@Base>
   1a660:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1a664:	cmp	r3, #0
   1a668:	beq	1a72c <traverse_product@@Base+0x5f4>
   1a66c:	ldr	r3, [fp, #-308]	; 0xfffffecc
   1a670:	cmp	r3, #0
   1a674:	beq	1a68c <traverse_product@@Base+0x554>
   1a678:	ldr	r3, [pc, #2996]	; 1b234 <traverse_product@@Base+0x10fc>
   1a67c:	add	r3, pc, r3
   1a680:	mov	r0, r3
   1a684:	bl	1a36c <traverse_product@@Base+0x234>
   1a688:	bl	1a298 <traverse_product@@Base+0x160>
   1a68c:	ldr	r3, [pc, #2980]	; 1b238 <traverse_product@@Base+0x1100>
   1a690:	add	r3, pc, r3
   1a694:	mov	r0, r3
   1a698:	bl	1a36c <traverse_product@@Base+0x234>
   1a69c:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1a6a0:	bl	12470 <coda_cursor_goto_attributes@plt>
   1a6a4:	mov	r3, r0
   1a6a8:	cmp	r3, #0
   1a6ac:	beq	1a6b4 <traverse_product@@Base+0x57c>
   1a6b0:	bl	1bdc8 <handle_coda_error@@Base>
   1a6b4:	ldr	r3, [pc, #2944]	; 1b23c <traverse_product@@Base+0x1104>
   1a6b8:	add	r3, pc, r3
   1a6bc:	ldr	r3, [r3]
   1a6c0:	add	r2, r3, #1
   1a6c4:	ldr	r3, [pc, #2932]	; 1b240 <traverse_product@@Base+0x1108>
   1a6c8:	add	r3, pc, r3
   1a6cc:	str	r2, [r3]
   1a6d0:	mov	r1, #1
   1a6d4:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1a6d8:	bl	1a600 <traverse_product@@Base+0x4c8>
   1a6dc:	ldr	r3, [pc, #2912]	; 1b244 <traverse_product@@Base+0x110c>
   1a6e0:	add	r3, pc, r3
   1a6e4:	ldr	r3, [r3]
   1a6e8:	sub	r2, r3, #1
   1a6ec:	ldr	r3, [pc, #2900]	; 1b248 <traverse_product@@Base+0x1110>
   1a6f0:	add	r3, pc, r3
   1a6f4:	str	r2, [r3]
   1a6f8:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1a6fc:	bl	123d4 <coda_cursor_goto_parent@plt>
   1a700:	ldr	r3, [pc, #2884]	; 1b24c <traverse_product@@Base+0x1114>
   1a704:	add	r3, pc, r3
   1a708:	mov	r0, r3
   1a70c:	bl	1a3d8 <traverse_product@@Base+0x2a0>
   1a710:	ldr	r3, [pc, #2872]	; 1b250 <traverse_product@@Base+0x1118>
   1a714:	add	r3, pc, r3
   1a718:	ldr	r3, [r3]
   1a71c:	add	r2, r3, #1
   1a720:	ldr	r3, [pc, #2860]	; 1b254 <traverse_product@@Base+0x111c>
   1a724:	add	r3, pc, r3
   1a728:	str	r2, [r3]
   1a72c:	sub	r3, fp, #60	; 0x3c
   1a730:	mov	r1, r3
   1a734:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1a738:	bl	122fc <coda_cursor_get_type_class@plt>
   1a73c:	mov	r3, r0
   1a740:	cmp	r3, #0
   1a744:	beq	1a74c <traverse_product@@Base+0x614>
   1a748:	bl	1bdc8 <handle_coda_error@@Base>
   1a74c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a750:	cmp	r3, #6
   1a754:	addls	pc, pc, r3, lsl #2
   1a758:	b	1b1e8 <traverse_product@@Base+0x10b0>
   1a75c:	b	1a778 <traverse_product@@Base+0x640>
   1a760:	b	1aa60 <traverse_product@@Base+0x928>
   1a764:	b	1abf0 <traverse_product@@Base+0xab8>
   1a768:	b	1abf0 <traverse_product@@Base+0xab8>
   1a76c:	b	1abf0 <traverse_product@@Base+0xab8>
   1a770:	b	1abf0 <traverse_product@@Base+0xab8>
   1a774:	b	1b034 <traverse_product@@Base+0xefc>
   1a778:	sub	r3, fp, #68	; 0x44
   1a77c:	mov	r1, r3
   1a780:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1a784:	bl	12254 <coda_cursor_get_num_elements@plt>
   1a788:	mov	r3, r0
   1a78c:	cmp	r3, #0
   1a790:	beq	1a798 <traverse_product@@Base+0x660>
   1a794:	bl	1bdc8 <handle_coda_error@@Base>
   1a798:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1a79c:	cmp	r3, #0
   1a7a0:	ble	1aa4c <traverse_product@@Base+0x914>
   1a7a4:	ldr	r3, [fp, #-308]	; 0xfffffecc
   1a7a8:	cmp	r3, #0
   1a7ac:	beq	1a7c0 <traverse_product@@Base+0x688>
   1a7b0:	ldr	r3, [pc, #2720]	; 1b258 <traverse_product@@Base+0x1120>
   1a7b4:	add	r3, pc, r3
   1a7b8:	mov	r0, r3
   1a7bc:	bl	1a36c <traverse_product@@Base+0x234>
   1a7c0:	sub	r3, fp, #72	; 0x48
   1a7c4:	mov	r1, r3
   1a7c8:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1a7cc:	bl	122b4 <coda_cursor_get_type@plt>
   1a7d0:	mov	r3, r0
   1a7d4:	cmp	r3, #0
   1a7d8:	beq	1a7e0 <traverse_product@@Base+0x6a8>
   1a7dc:	bl	1bdc8 <handle_coda_error@@Base>
   1a7e0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1a7e4:	sub	r2, fp, #76	; 0x4c
   1a7e8:	mov	r1, r2
   1a7ec:	mov	r0, r3
   1a7f0:	bl	124b8 <coda_type_get_record_union_status@plt>
   1a7f4:	mov	r3, r0
   1a7f8:	cmp	r3, #0
   1a7fc:	beq	1a804 <traverse_product@@Base+0x6cc>
   1a800:	bl	1bdc8 <handle_coda_error@@Base>
   1a804:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1a808:	cmp	r3, #0
   1a80c:	beq	1a8ec <traverse_product@@Base+0x7b4>
   1a810:	sub	r3, fp, #80	; 0x50
   1a814:	mov	r1, r3
   1a818:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1a81c:	bl	125b4 <coda_cursor_get_available_union_field_index@plt>
   1a820:	mov	r3, r0
   1a824:	cmp	r3, #0
   1a828:	beq	1a830 <traverse_product@@Base+0x6f8>
   1a82c:	bl	1bdc8 <handle_coda_error@@Base>
   1a830:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1a834:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1a838:	sub	r2, fp, #84	; 0x54
   1a83c:	mov	r0, r3
   1a840:	bl	125fc <coda_type_get_record_field_name@plt>
   1a844:	mov	r3, r0
   1a848:	cmp	r3, #0
   1a84c:	beq	1a854 <traverse_product@@Base+0x71c>
   1a850:	bl	1bdc8 <handle_coda_error@@Base>
   1a854:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1a858:	mov	r1, r3
   1a85c:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1a860:	bl	12374 <coda_cursor_goto_record_field_by_index@plt>
   1a864:	mov	r3, r0
   1a868:	cmp	r3, #0
   1a86c:	beq	1a874 <traverse_product@@Base+0x73c>
   1a870:	bl	1bdc8 <handle_coda_error@@Base>
   1a874:	ldr	r3, [fp, #-308]	; 0xfffffecc
   1a878:	cmp	r3, #0
   1a87c:	beq	1a884 <traverse_product@@Base+0x74c>
   1a880:	bl	1a298 <traverse_product@@Base+0x160>
   1a884:	ldr	r3, [fp, #-84]	; 0xffffffac
   1a888:	mov	r1, r3
   1a88c:	ldr	r3, [pc, #2504]	; 1b25c <traverse_product@@Base+0x1124>
   1a890:	add	r3, pc, r3
   1a894:	mov	r0, r3
   1a898:	bl	1a36c <traverse_product@@Base+0x234>
   1a89c:	ldr	r3, [pc, #2492]	; 1b260 <traverse_product@@Base+0x1128>
   1a8a0:	add	r3, pc, r3
   1a8a4:	ldr	r3, [r3]
   1a8a8:	add	r2, r3, #1
   1a8ac:	ldr	r3, [pc, #2480]	; 1b264 <traverse_product@@Base+0x112c>
   1a8b0:	add	r3, pc, r3
   1a8b4:	str	r2, [r3]
   1a8b8:	mov	r1, #1
   1a8bc:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1a8c0:	bl	1a600 <traverse_product@@Base+0x4c8>
   1a8c4:	ldr	r3, [pc, #2460]	; 1b268 <traverse_product@@Base+0x1130>
   1a8c8:	add	r3, pc, r3
   1a8cc:	ldr	r3, [r3]
   1a8d0:	sub	r2, r3, #1
   1a8d4:	ldr	r3, [pc, #2448]	; 1b26c <traverse_product@@Base+0x1134>
   1a8d8:	add	r3, pc, r3
   1a8dc:	str	r2, [r3]
   1a8e0:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1a8e4:	bl	123d4 <coda_cursor_goto_parent@plt>
   1a8e8:	b	1b1e8 <traverse_product@@Base+0x10b0>
   1a8ec:	mov	r3, #1
   1a8f0:	str	r3, [fp, #-32]	; 0xffffffe0
   1a8f4:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1a8f8:	bl	12368 <coda_cursor_goto_first_record_field@plt>
   1a8fc:	mov	r3, r0
   1a900:	cmp	r3, #0
   1a904:	beq	1a90c <traverse_product@@Base+0x7d4>
   1a908:	bl	1bdc8 <handle_coda_error@@Base>
   1a90c:	mov	r3, #0
   1a910:	str	r3, [fp, #-80]	; 0xffffffb0
   1a914:	b	1aa30 <traverse_product@@Base+0x8f8>
   1a918:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1a91c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1a920:	sub	r2, fp, #92	; 0x5c
   1a924:	mov	r0, r3
   1a928:	bl	121f4 <coda_type_get_record_field_hidden_status@plt>
   1a92c:	mov	r3, r0
   1a930:	cmp	r3, #0
   1a934:	beq	1a93c <traverse_product@@Base+0x804>
   1a938:	bl	1bdc8 <handle_coda_error@@Base>
   1a93c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a940:	cmp	r3, #0
   1a944:	bne	1a9f8 <traverse_product@@Base+0x8c0>
   1a948:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1a94c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1a950:	sub	r2, fp, #88	; 0x58
   1a954:	mov	r0, r3
   1a958:	bl	125fc <coda_type_get_record_field_name@plt>
   1a95c:	mov	r3, r0
   1a960:	cmp	r3, #0
   1a964:	beq	1a96c <traverse_product@@Base+0x834>
   1a968:	bl	1bdc8 <handle_coda_error@@Base>
   1a96c:	ldr	r3, [fp, #-308]	; 0xfffffecc
   1a970:	cmp	r3, #0
   1a974:	bne	1a984 <traverse_product@@Base+0x84c>
   1a978:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a97c:	cmp	r3, #0
   1a980:	bne	1a988 <traverse_product@@Base+0x850>
   1a984:	bl	1a298 <traverse_product@@Base+0x160>
   1a988:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a98c:	cmp	r3, #0
   1a990:	beq	1a99c <traverse_product@@Base+0x864>
   1a994:	mov	r3, #0
   1a998:	str	r3, [fp, #-32]	; 0xffffffe0
   1a99c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1a9a0:	mov	r1, r3
   1a9a4:	ldr	r3, [pc, #2244]	; 1b270 <traverse_product@@Base+0x1138>
   1a9a8:	add	r3, pc, r3
   1a9ac:	mov	r0, r3
   1a9b0:	bl	1a36c <traverse_product@@Base+0x234>
   1a9b4:	ldr	r3, [pc, #2232]	; 1b274 <traverse_product@@Base+0x113c>
   1a9b8:	add	r3, pc, r3
   1a9bc:	ldr	r3, [r3]
   1a9c0:	add	r2, r3, #1
   1a9c4:	ldr	r3, [pc, #2220]	; 1b278 <traverse_product@@Base+0x1140>
   1a9c8:	add	r3, pc, r3
   1a9cc:	str	r2, [r3]
   1a9d0:	mov	r1, #1
   1a9d4:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1a9d8:	bl	1a600 <traverse_product@@Base+0x4c8>
   1a9dc:	ldr	r3, [pc, #2200]	; 1b27c <traverse_product@@Base+0x1144>
   1a9e0:	add	r3, pc, r3
   1a9e4:	ldr	r3, [r3]
   1a9e8:	sub	r2, r3, #1
   1a9ec:	ldr	r3, [pc, #2188]	; 1b280 <traverse_product@@Base+0x1148>
   1a9f0:	add	r3, pc, r3
   1a9f4:	str	r2, [r3]
   1a9f8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1a9fc:	sub	r2, r3, #1
   1aa00:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1aa04:	cmp	r2, r3
   1aa08:	ble	1aa24 <traverse_product@@Base+0x8ec>
   1aa0c:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1aa10:	bl	12560 <coda_cursor_goto_next_record_field@plt>
   1aa14:	mov	r3, r0
   1aa18:	cmp	r3, #0
   1aa1c:	beq	1aa24 <traverse_product@@Base+0x8ec>
   1aa20:	bl	1bdc8 <handle_coda_error@@Base>
   1aa24:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1aa28:	add	r3, r3, #1
   1aa2c:	str	r3, [fp, #-80]	; 0xffffffb0
   1aa30:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1aa34:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1aa38:	cmp	r2, r3
   1aa3c:	blt	1a918 <traverse_product@@Base+0x7e0>
   1aa40:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1aa44:	bl	123d4 <coda_cursor_goto_parent@plt>
   1aa48:	b	1b1e8 <traverse_product@@Base+0x10b0>
   1aa4c:	ldr	r3, [pc, #2096]	; 1b284 <traverse_product@@Base+0x114c>
   1aa50:	add	r3, pc, r3
   1aa54:	mov	r0, r3
   1aa58:	bl	1a36c <traverse_product@@Base+0x234>
   1aa5c:	b	1b1e8 <traverse_product@@Base+0x10b0>
   1aa60:	sub	r2, fp, #300	; 0x12c
   1aa64:	sub	r3, fp, #96	; 0x60
   1aa68:	mov	r1, r3
   1aa6c:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1aa70:	bl	12500 <coda_cursor_get_array_dim@plt>
   1aa74:	mov	r3, r0
   1aa78:	cmp	r3, #0
   1aa7c:	beq	1aa84 <traverse_product@@Base+0x94c>
   1aa80:	bl	1bdc8 <handle_coda_error@@Base>
   1aa84:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1aa88:	cmp	r3, #0
   1aa8c:	blt	1abdc <traverse_product@@Base+0xaa4>
   1aa90:	mov	r3, #1
   1aa94:	str	r3, [fp, #-36]	; 0xffffffdc
   1aa98:	mov	r3, #0
   1aa9c:	str	r3, [fp, #-40]	; 0xffffffd8
   1aaa0:	b	1aad0 <traverse_product@@Base+0x998>
   1aaa4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1aaa8:	lsl	r3, r3, #2
   1aaac:	sub	r2, fp, #28
   1aab0:	add	r3, r2, r3
   1aab4:	ldr	r2, [r3, #-272]	; 0xfffffef0
   1aab8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1aabc:	mul	r3, r2, r3
   1aac0:	str	r3, [fp, #-36]	; 0xffffffdc
   1aac4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1aac8:	add	r3, r3, #1
   1aacc:	str	r3, [fp, #-40]	; 0xffffffd8
   1aad0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1aad4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1aad8:	cmp	r2, r3
   1aadc:	blt	1aaa4 <traverse_product@@Base+0x96c>
   1aae0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1aae4:	cmp	r3, #0
   1aae8:	ble	1abc8 <traverse_product@@Base+0xa90>
   1aaec:	ldr	r3, [pc, #1940]	; 1b288 <traverse_product@@Base+0x1150>
   1aaf0:	add	r3, pc, r3
   1aaf4:	mov	r0, r3
   1aaf8:	bl	1a36c <traverse_product@@Base+0x234>
   1aafc:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1ab00:	bl	12344 <coda_cursor_goto_first_array_element@plt>
   1ab04:	mov	r3, r0
   1ab08:	cmp	r3, #0
   1ab0c:	beq	1ab14 <traverse_product@@Base+0x9dc>
   1ab10:	bl	1bdc8 <handle_coda_error@@Base>
   1ab14:	mov	r3, #0
   1ab18:	str	r3, [fp, #-40]	; 0xffffffd8
   1ab1c:	b	1abac <traverse_product@@Base+0xa74>
   1ab20:	ldr	r3, [pc, #1892]	; 1b28c <traverse_product@@Base+0x1154>
   1ab24:	add	r3, pc, r3
   1ab28:	mov	r0, r3
   1ab2c:	bl	1a3d8 <traverse_product@@Base+0x2a0>
   1ab30:	ldr	r3, [pc, #1880]	; 1b290 <traverse_product@@Base+0x1158>
   1ab34:	add	r3, pc, r3
   1ab38:	ldr	r3, [r3]
   1ab3c:	add	r2, r3, #1
   1ab40:	ldr	r3, [pc, #1868]	; 1b294 <traverse_product@@Base+0x115c>
   1ab44:	add	r3, pc, r3
   1ab48:	str	r2, [r3]
   1ab4c:	mov	r1, #0
   1ab50:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1ab54:	bl	1a600 <traverse_product@@Base+0x4c8>
   1ab58:	ldr	r3, [pc, #1848]	; 1b298 <traverse_product@@Base+0x1160>
   1ab5c:	add	r3, pc, r3
   1ab60:	ldr	r3, [r3]
   1ab64:	sub	r2, r3, #1
   1ab68:	ldr	r3, [pc, #1836]	; 1b29c <traverse_product@@Base+0x1164>
   1ab6c:	add	r3, pc, r3
   1ab70:	str	r2, [r3]
   1ab74:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ab78:	sub	r3, r3, #1
   1ab7c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ab80:	cmp	r2, r3
   1ab84:	bge	1aba0 <traverse_product@@Base+0xa68>
   1ab88:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1ab8c:	bl	12440 <coda_cursor_goto_next_array_element@plt>
   1ab90:	mov	r3, r0
   1ab94:	cmp	r3, #0
   1ab98:	beq	1aba0 <traverse_product@@Base+0xa68>
   1ab9c:	bl	1bdc8 <handle_coda_error@@Base>
   1aba0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1aba4:	add	r3, r3, #1
   1aba8:	str	r3, [fp, #-40]	; 0xffffffd8
   1abac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1abb0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1abb4:	cmp	r2, r3
   1abb8:	blt	1ab20 <traverse_product@@Base+0x9e8>
   1abbc:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1abc0:	bl	123d4 <coda_cursor_goto_parent@plt>
   1abc4:	b	1b1e8 <traverse_product@@Base+0x10b0>
   1abc8:	ldr	r3, [pc, #1744]	; 1b2a0 <traverse_product@@Base+0x1168>
   1abcc:	add	r3, pc, r3
   1abd0:	mov	r0, r3
   1abd4:	bl	1a36c <traverse_product@@Base+0x234>
   1abd8:	b	1b1e8 <traverse_product@@Base+0x10b0>
   1abdc:	ldr	r3, [pc, #1728]	; 1b2a4 <traverse_product@@Base+0x116c>
   1abe0:	add	r3, pc, r3
   1abe4:	mov	r0, r3
   1abe8:	bl	1a36c <traverse_product@@Base+0x234>
   1abec:	b	1b1e8 <traverse_product@@Base+0x10b0>
   1abf0:	sub	r3, fp, #100	; 0x64
   1abf4:	mov	r1, r3
   1abf8:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1abfc:	bl	12398 <coda_cursor_get_read_type@plt>
   1ac00:	mov	r3, r0
   1ac04:	cmp	r3, #0
   1ac08:	beq	1ac10 <traverse_product@@Base+0xad8>
   1ac0c:	bl	1bdc8 <handle_coda_error@@Base>
   1ac10:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1ac14:	add	r3, r3, #1
   1ac18:	cmp	r3, #13
   1ac1c:	addls	pc, pc, r3, lsl #2
   1ac20:	b	1b1dc <traverse_product@@Base+0x10a4>
   1ac24:	b	1b01c <traverse_product@@Base+0xee4>
   1ac28:	b	1aeb0 <traverse_product@@Base+0xd78>
   1ac2c:	b	1aeec <traverse_product@@Base+0xdb4>
   1ac30:	b	1aeb0 <traverse_product@@Base+0xd78>
   1ac34:	b	1aeec <traverse_product@@Base+0xdb4>
   1ac38:	b	1aeb0 <traverse_product@@Base+0xd78>
   1ac3c:	b	1aeec <traverse_product@@Base+0xdb4>
   1ac40:	b	1af28 <traverse_product@@Base+0xdf0>
   1ac44:	b	1af74 <traverse_product@@Base+0xe3c>
   1ac48:	b	1afc0 <traverse_product@@Base+0xe88>
   1ac4c:	b	1afc0 <traverse_product@@Base+0xe88>
   1ac50:	b	1ac5c <traverse_product@@Base+0xb24>
   1ac54:	b	1acb0 <traverse_product@@Base+0xb78>
   1ac58:	b	1ad8c <traverse_product@@Base+0xc54>
   1ac5c:	sub	r3, fp, #101	; 0x65
   1ac60:	mov	r1, r3
   1ac64:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1ac68:	bl	1247c <coda_cursor_read_char@plt>
   1ac6c:	mov	r3, r0
   1ac70:	cmp	r3, #0
   1ac74:	beq	1ac7c <traverse_product@@Base+0xb44>
   1ac78:	bl	1bdc8 <handle_coda_error@@Base>
   1ac7c:	ldr	r3, [pc, #1572]	; 1b2a8 <traverse_product@@Base+0x1170>
   1ac80:	add	r3, pc, r3
   1ac84:	mov	r0, r3
   1ac88:	bl	1a36c <traverse_product@@Base+0x234>
   1ac8c:	sub	r3, fp, #101	; 0x65
   1ac90:	mov	r1, #1
   1ac94:	mov	r0, r3
   1ac98:	bl	1a450 <traverse_product@@Base+0x318>
   1ac9c:	ldr	r3, [pc, #1544]	; 1b2ac <traverse_product@@Base+0x1174>
   1aca0:	add	r3, pc, r3
   1aca4:	mov	r0, r3
   1aca8:	bl	1a36c <traverse_product@@Base+0x234>
   1acac:	b	1b030 <traverse_product@@Base+0xef8>
   1acb0:	sub	r3, fp, #108	; 0x6c
   1acb4:	mov	r1, r3
   1acb8:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1acbc:	bl	12404 <coda_cursor_get_string_length@plt>
   1acc0:	mov	r3, r0
   1acc4:	cmp	r3, #0
   1acc8:	beq	1acd0 <traverse_product@@Base+0xb98>
   1accc:	bl	1bdc8 <handle_coda_error@@Base>
   1acd0:	ldr	r3, [fp, #-108]	; 0xffffff94
   1acd4:	add	r3, r3, #1
   1acd8:	mov	r0, r3
   1acdc:	bl	123a4 <malloc@plt>
   1ace0:	mov	r3, r0
   1ace4:	str	r3, [fp, #-44]	; 0xffffffd4
   1ace8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1acec:	cmp	r3, #0
   1acf0:	bne	1ad20 <traverse_product@@Base+0xbe8>
   1acf4:	ldr	r3, [fp, #-108]	; 0xffffff94
   1acf8:	add	r2, r3, #1
   1acfc:	movw	r3, #361	; 0x169
   1ad00:	str	r3, [sp]
   1ad04:	ldr	r3, [pc, #1444]	; 1b2b0 <traverse_product@@Base+0x1178>
   1ad08:	add	r3, pc, r3
   1ad0c:	ldr	r1, [pc, #1440]	; 1b2b4 <traverse_product@@Base+0x117c>
   1ad10:	add	r1, pc, r1
   1ad14:	mvn	r0, #0
   1ad18:	bl	12224 <coda_set_error@plt>
   1ad1c:	bl	1bdc8 <handle_coda_error@@Base>
   1ad20:	ldr	r3, [fp, #-108]	; 0xffffff94
   1ad24:	add	r3, r3, #1
   1ad28:	mov	r2, r3
   1ad2c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ad30:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1ad34:	bl	123c8 <coda_cursor_read_string@plt>
   1ad38:	mov	r3, r0
   1ad3c:	cmp	r3, #0
   1ad40:	beq	1ad48 <traverse_product@@Base+0xc10>
   1ad44:	bl	1bdc8 <handle_coda_error@@Base>
   1ad48:	ldr	r3, [pc, #1384]	; 1b2b8 <traverse_product@@Base+0x1180>
   1ad4c:	add	r3, pc, r3
   1ad50:	mov	r0, r3
   1ad54:	bl	1a36c <traverse_product@@Base+0x234>
   1ad58:	ldr	r3, [fp, #-108]	; 0xffffff94
   1ad5c:	mov	r1, r3
   1ad60:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ad64:	bl	1a450 <traverse_product@@Base+0x318>
   1ad68:	ldr	r3, [fp, #-108]	; 0xffffff94
   1ad6c:	mov	r1, r3
   1ad70:	ldr	r3, [pc, #1348]	; 1b2bc <traverse_product@@Base+0x1184>
   1ad74:	add	r3, pc, r3
   1ad78:	mov	r0, r3
   1ad7c:	bl	1a36c <traverse_product@@Base+0x234>
   1ad80:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ad84:	bl	1226c <free@plt>
   1ad88:	b	1b030 <traverse_product@@Base+0xef8>
   1ad8c:	sub	r3, fp, #116	; 0x74
   1ad90:	mov	r1, r3
   1ad94:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1ad98:	bl	12584 <coda_cursor_get_bit_size@plt>
   1ad9c:	mov	r3, r0
   1ada0:	cmp	r3, #0
   1ada4:	beq	1adac <traverse_product@@Base+0xc74>
   1ada8:	bl	1bdc8 <handle_coda_error@@Base>
   1adac:	ldrd	r0, [fp, #-116]	; 0xffffff8c
   1adb0:	mov	r2, #0
   1adb4:	mov	r3, #0
   1adb8:	lsr	r2, r0, #3
   1adbc:	orr	r2, r2, r1, lsl #29
   1adc0:	asr	r3, r1, #3
   1adc4:	ldrd	r0, [fp, #-116]	; 0xffffff8c
   1adc8:	mov	r8, #7
   1adcc:	mov	r9, #0
   1add0:	and	r6, r0, r8
   1add4:	and	r7, r1, r9
   1add8:	orrs	r1, r6, r7
   1addc:	beq	1adec <traverse_product@@Base+0xcb4>
   1ade0:	mov	r0, #1
   1ade4:	mov	r1, #0
   1ade8:	b	1adf4 <traverse_product@@Base+0xcbc>
   1adec:	mov	r0, #0
   1adf0:	mov	r1, #0
   1adf4:	adds	r4, r0, r2
   1adf8:	adc	r5, r1, r3
   1adfc:	strd	r4, [fp, #-52]	; 0xffffffcc
   1ae00:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1ae04:	mov	r0, r3
   1ae08:	bl	123a4 <malloc@plt>
   1ae0c:	mov	r3, r0
   1ae10:	str	r3, [fp, #-56]	; 0xffffffc8
   1ae14:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ae18:	cmp	r3, #0
   1ae1c:	bne	1ae48 <traverse_product@@Base+0xd10>
   1ae20:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1ae24:	mov	r3, #392	; 0x188
   1ae28:	str	r3, [sp]
   1ae2c:	ldr	r3, [pc, #1164]	; 1b2c0 <traverse_product@@Base+0x1188>
   1ae30:	add	r3, pc, r3
   1ae34:	ldr	r1, [pc, #1160]	; 1b2c4 <traverse_product@@Base+0x118c>
   1ae38:	add	r1, pc, r1
   1ae3c:	mvn	r0, #0
   1ae40:	bl	12224 <coda_set_error@plt>
   1ae44:	bl	1bdc8 <handle_coda_error@@Base>
   1ae48:	ldrd	r2, [fp, #-116]	; 0xffffff8c
   1ae4c:	strd	r2, [sp]
   1ae50:	mov	r2, #0
   1ae54:	mov	r3, #0
   1ae58:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1ae5c:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1ae60:	bl	12620 <coda_cursor_read_bits@plt>
   1ae64:	mov	r3, r0
   1ae68:	cmp	r3, #0
   1ae6c:	beq	1ae74 <traverse_product@@Base+0xd3c>
   1ae70:	bl	1bdc8 <handle_coda_error@@Base>
   1ae74:	ldr	r3, [pc, #1100]	; 1b2c8 <traverse_product@@Base+0x1190>
   1ae78:	add	r3, pc, r3
   1ae7c:	mov	r0, r3
   1ae80:	bl	1a36c <traverse_product@@Base+0x234>
   1ae84:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1ae88:	mov	r1, r3
   1ae8c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ae90:	bl	1a450 <traverse_product@@Base+0x318>
   1ae94:	ldr	r3, [pc, #1072]	; 1b2cc <traverse_product@@Base+0x1194>
   1ae98:	add	r3, pc, r3
   1ae9c:	mov	r0, r3
   1aea0:	bl	1a36c <traverse_product@@Base+0x234>
   1aea4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1aea8:	bl	1226c <free@plt>
   1aeac:	b	1b030 <traverse_product@@Base+0xef8>
   1aeb0:	sub	r3, fp, #120	; 0x78
   1aeb4:	mov	r1, r3
   1aeb8:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1aebc:	bl	125c0 <coda_cursor_read_int32@plt>
   1aec0:	mov	r3, r0
   1aec4:	cmp	r3, #0
   1aec8:	beq	1aed0 <traverse_product@@Base+0xd98>
   1aecc:	bl	1bdc8 <handle_coda_error@@Base>
   1aed0:	ldr	r3, [fp, #-120]	; 0xffffff88
   1aed4:	mov	r1, r3
   1aed8:	ldr	r3, [pc, #1008]	; 1b2d0 <traverse_product@@Base+0x1198>
   1aedc:	add	r3, pc, r3
   1aee0:	mov	r0, r3
   1aee4:	bl	1a36c <traverse_product@@Base+0x234>
   1aee8:	b	1b030 <traverse_product@@Base+0xef8>
   1aeec:	sub	r3, fp, #124	; 0x7c
   1aef0:	mov	r1, r3
   1aef4:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1aef8:	bl	12290 <coda_cursor_read_uint32@plt>
   1aefc:	mov	r3, r0
   1af00:	cmp	r3, #0
   1af04:	beq	1af0c <traverse_product@@Base+0xdd4>
   1af08:	bl	1bdc8 <handle_coda_error@@Base>
   1af0c:	ldr	r3, [fp, #-124]	; 0xffffff84
   1af10:	mov	r1, r3
   1af14:	ldr	r3, [pc, #952]	; 1b2d4 <traverse_product@@Base+0x119c>
   1af18:	add	r3, pc, r3
   1af1c:	mov	r0, r3
   1af20:	bl	1a36c <traverse_product@@Base+0x234>
   1af24:	b	1b030 <traverse_product@@Base+0xef8>
   1af28:	sub	r3, fp, #132	; 0x84
   1af2c:	mov	r1, r3
   1af30:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1af34:	bl	12524 <coda_cursor_read_int64@plt>
   1af38:	mov	r3, r0
   1af3c:	cmp	r3, #0
   1af40:	beq	1af48 <traverse_product@@Base+0xe10>
   1af44:	bl	1bdc8 <handle_coda_error@@Base>
   1af48:	ldrd	r0, [fp, #-132]	; 0xffffff7c
   1af4c:	sub	r3, fp, #156	; 0x9c
   1af50:	mov	r2, r3
   1af54:	bl	1262c <coda_str64@plt>
   1af58:	sub	r3, fp, #156	; 0x9c
   1af5c:	mov	r1, r3
   1af60:	ldr	r3, [pc, #880]	; 1b2d8 <traverse_product@@Base+0x11a0>
   1af64:	add	r3, pc, r3
   1af68:	mov	r0, r3
   1af6c:	bl	1a36c <traverse_product@@Base+0x234>
   1af70:	b	1b030 <traverse_product@@Base+0xef8>
   1af74:	sub	r3, fp, #164	; 0xa4
   1af78:	mov	r1, r3
   1af7c:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1af80:	bl	12410 <coda_cursor_read_uint64@plt>
   1af84:	mov	r3, r0
   1af88:	cmp	r3, #0
   1af8c:	beq	1af94 <traverse_product@@Base+0xe5c>
   1af90:	bl	1bdc8 <handle_coda_error@@Base>
   1af94:	ldrd	r0, [fp, #-164]	; 0xffffff5c
   1af98:	sub	r3, fp, #188	; 0xbc
   1af9c:	mov	r2, r3
   1afa0:	bl	12260 <coda_str64u@plt>
   1afa4:	sub	r3, fp, #188	; 0xbc
   1afa8:	mov	r1, r3
   1afac:	ldr	r3, [pc, #808]	; 1b2dc <traverse_product@@Base+0x11a4>
   1afb0:	add	r3, pc, r3
   1afb4:	mov	r0, r3
   1afb8:	bl	1a36c <traverse_product@@Base+0x234>
   1afbc:	b	1b030 <traverse_product@@Base+0xef8>
   1afc0:	sub	r3, fp, #196	; 0xc4
   1afc4:	mov	r1, r3
   1afc8:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1afcc:	bl	1241c <coda_cursor_read_double@plt>
   1afd0:	mov	r3, r0
   1afd4:	cmp	r3, #0
   1afd8:	beq	1afe0 <traverse_product@@Base+0xea8>
   1afdc:	bl	1bdc8 <handle_coda_error@@Base>
   1afe0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1afe4:	cmp	r3, #8
   1afe8:	bne	1b004 <traverse_product@@Base+0xecc>
   1afec:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   1aff0:	ldr	r1, [pc, #744]	; 1b2e0 <traverse_product@@Base+0x11a8>
   1aff4:	add	r1, pc, r1
   1aff8:	mov	r0, r1
   1affc:	bl	1a36c <traverse_product@@Base+0x234>
   1b000:	b	1b030 <traverse_product@@Base+0xef8>
   1b004:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   1b008:	ldr	r1, [pc, #724]	; 1b2e4 <traverse_product@@Base+0x11ac>
   1b00c:	add	r1, pc, r1
   1b010:	mov	r0, r1
   1b014:	bl	1a36c <traverse_product@@Base+0x234>
   1b018:	b	1b030 <traverse_product@@Base+0xef8>
   1b01c:	ldr	r3, [pc, #708]	; 1b2e8 <traverse_product@@Base+0x11b0>
   1b020:	add	r3, pc, r3
   1b024:	mov	r0, r3
   1b028:	bl	1a36c <traverse_product@@Base+0x234>
   1b02c:	nop	{0}
   1b030:	b	1b1dc <traverse_product@@Base+0x10a4>
   1b034:	sub	r3, fp, #200	; 0xc8
   1b038:	mov	r1, r3
   1b03c:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1b040:	bl	12338 <coda_cursor_get_special_type@plt>
   1b044:	mov	r3, r0
   1b048:	cmp	r3, #0
   1b04c:	beq	1b054 <traverse_product@@Base+0xf1c>
   1b050:	bl	1bdc8 <handle_coda_error@@Base>
   1b054:	ldr	r3, [fp, #-200]	; 0xffffff38
   1b058:	cmp	r3, #3
   1b05c:	addls	pc, pc, r3, lsl #2
   1b060:	b	1b1e4 <traverse_product@@Base+0x10ac>
   1b064:	b	1b074 <traverse_product@@Base+0xf3c>
   1b068:	b	1b088 <traverse_product@@Base+0xf50>
   1b06c:	b	1b0c0 <traverse_product@@Base+0xf88>
   1b070:	b	1b184 <traverse_product@@Base+0x104c>
   1b074:	ldr	r3, [pc, #624]	; 1b2ec <traverse_product@@Base+0x11b4>
   1b078:	add	r3, pc, r3
   1b07c:	mov	r0, r3
   1b080:	bl	1a36c <traverse_product@@Base+0x234>
   1b084:	b	1b1d8 <traverse_product@@Base+0x10a0>
   1b088:	sub	r3, fp, #212	; 0xd4
   1b08c:	mov	r1, r3
   1b090:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1b094:	bl	1241c <coda_cursor_read_double@plt>
   1b098:	mov	r3, r0
   1b09c:	cmp	r3, #0
   1b0a0:	beq	1b0a8 <traverse_product@@Base+0xf70>
   1b0a4:	bl	1bdc8 <handle_coda_error@@Base>
   1b0a8:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   1b0ac:	ldr	r1, [pc, #572]	; 1b2f0 <traverse_product@@Base+0x11b8>
   1b0b0:	add	r1, pc, r1
   1b0b4:	mov	r0, r1
   1b0b8:	bl	1a36c <traverse_product@@Base+0x234>
   1b0bc:	b	1b1d8 <traverse_product@@Base+0x10a0>
   1b0c0:	sub	r3, fp, #220	; 0xdc
   1b0c4:	mov	r1, r3
   1b0c8:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1b0cc:	bl	1241c <coda_cursor_read_double@plt>
   1b0d0:	mov	r3, r0
   1b0d4:	cmp	r3, #0
   1b0d8:	beq	1b0e0 <traverse_product@@Base+0xfa8>
   1b0dc:	bl	1bdc8 <handle_coda_error@@Base>
   1b0e0:	vldr	d7, [fp, #-220]	; 0xffffff24
   1b0e4:	vmov.f64	d0, d7
   1b0e8:	bl	12428 <coda_isNaN@plt>
   1b0ec:	mov	r3, r0
   1b0f0:	cmp	r3, #0
   1b0f4:	bne	1b110 <traverse_product@@Base+0xfd8>
   1b0f8:	vldr	d7, [fp, #-220]	; 0xffffff24
   1b0fc:	vmov.f64	d0, d7
   1b100:	bl	122cc <coda_isInf@plt>
   1b104:	mov	r3, r0
   1b108:	cmp	r3, #0
   1b10c:	beq	1b128 <traverse_product@@Base+0xff0>
   1b110:	ldrd	r2, [fp, #-220]	; 0xffffff24
   1b114:	ldr	r1, [pc, #472]	; 1b2f4 <traverse_product@@Base+0x11bc>
   1b118:	add	r1, pc, r1
   1b11c:	mov	r0, r1
   1b120:	bl	1a36c <traverse_product@@Base+0x234>
   1b124:	b	1b1d8 <traverse_product@@Base+0x10a0>
   1b128:	vldr	d7, [fp, #-220]	; 0xffffff24
   1b12c:	sub	r3, fp, #248	; 0xf8
   1b130:	mov	r1, r3
   1b134:	ldr	r3, [pc, #444]	; 1b2f8 <traverse_product@@Base+0x11c0>
   1b138:	add	r3, pc, r3
   1b13c:	mov	r0, r3
   1b140:	vmov.f64	d0, d7
   1b144:	bl	12248 <coda_time_double_to_string@plt>
   1b148:	mov	r3, r0
   1b14c:	cmp	r3, #0
   1b150:	beq	1b168 <traverse_product@@Base+0x1030>
   1b154:	ldr	r3, [pc, #416]	; 1b2fc <traverse_product@@Base+0x11c4>
   1b158:	add	r3, pc, r3
   1b15c:	mov	r0, r3
   1b160:	bl	1a36c <traverse_product@@Base+0x234>
   1b164:	b	1b1d8 <traverse_product@@Base+0x10a0>
   1b168:	sub	r3, fp, #248	; 0xf8
   1b16c:	mov	r1, r3
   1b170:	ldr	r3, [pc, #392]	; 1b300 <traverse_product@@Base+0x11c8>
   1b174:	add	r3, pc, r3
   1b178:	mov	r0, r3
   1b17c:	bl	1a36c <traverse_product@@Base+0x234>
   1b180:	b	1b1d8 <traverse_product@@Base+0x10a0>
   1b184:	sub	r2, fp, #268	; 0x10c
   1b188:	sub	r3, fp, #260	; 0x104
   1b18c:	mov	r1, r3
   1b190:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1b194:	bl	124c4 <coda_cursor_read_complex_double_split@plt>
   1b198:	mov	r3, r0
   1b19c:	cmp	r3, #0
   1b1a0:	beq	1b1a8 <traverse_product@@Base+0x1070>
   1b1a4:	bl	1bdc8 <handle_coda_error@@Base>
   1b1a8:	sub	r1, fp, #260	; 0x104
   1b1ac:	ldrd	r0, [r1]
   1b1b0:	sub	r3, fp, #268	; 0x10c
   1b1b4:	ldrd	r2, [r3]
   1b1b8:	strd	r2, [sp]
   1b1bc:	mov	r2, r0
   1b1c0:	mov	r3, r1
   1b1c4:	ldr	r1, [pc, #312]	; 1b304 <traverse_product@@Base+0x11cc>
   1b1c8:	add	r1, pc, r1
   1b1cc:	mov	r0, r1
   1b1d0:	bl	1a36c <traverse_product@@Base+0x234>
   1b1d4:	nop	{0}
   1b1d8:	b	1b1e4 <traverse_product@@Base+0x10ac>
   1b1dc:	nop	{0}
   1b1e0:	b	1b1e8 <traverse_product@@Base+0x10b0>
   1b1e4:	nop	{0}
   1b1e8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1b1ec:	cmp	r3, #0
   1b1f0:	beq	1b210 <traverse_product@@Base+0x10d8>
   1b1f4:	ldr	r3, [pc, #268]	; 1b308 <traverse_product@@Base+0x11d0>
   1b1f8:	add	r3, pc, r3
   1b1fc:	ldr	r3, [r3]
   1b200:	sub	r2, r3, #1
   1b204:	ldr	r3, [pc, #256]	; 1b30c <traverse_product@@Base+0x11d4>
   1b208:	add	r3, pc, r3
   1b20c:	str	r2, [r3]
   1b210:	nop	{0}
   1b214:	sub	sp, fp, #28
   1b218:	ldrd	r4, [sp]
   1b21c:	ldrd	r6, [sp, #8]
   1b220:	ldrd	r8, [sp, #16]
   1b224:	ldr	fp, [sp, #24]
   1b228:	add	sp, sp, #28
   1b22c:	pop	{pc}		; (ldr pc, [sp], #4)
   1b230:	andeq	r6, r1, r0, ror #23
   1b234:	andeq	r4, r0, r8, lsr #24
   1b238:	andeq	r4, r0, r8, lsl ip
   1b23c:	andeq	r6, r1, r4, asr fp
   1b240:	andeq	r6, r1, r4, asr #22
   1b244:	andeq	r6, r1, ip, lsr #22
   1b248:	andeq	r6, r1, ip, lsl fp
   1b24c:	andeq	r4, r0, ip, lsr #23
   1b250:	strdeq	r6, [r1], -r8
   1b254:	andeq	r6, r1, r8, ror #21
   1b258:	strdeq	r4, [r0], -r0
   1b25c:	andeq	r4, r0, r8, lsr #20
   1b260:	andeq	r6, r1, ip, ror #18
   1b264:	andeq	r6, r1, ip, asr r9
   1b268:	andeq	r6, r1, r4, asr #18
   1b26c:	andeq	r6, r1, r4, lsr r9
   1b270:	andeq	r4, r0, r0, lsl r9
   1b274:	andeq	r6, r1, r4, asr r8
   1b278:	andeq	r6, r1, r4, asr #16
   1b27c:	andeq	r6, r1, ip, lsr #16
   1b280:	andeq	r6, r1, ip, lsl r8
   1b284:	andeq	r4, r0, r0, ror r8
   1b288:			; <UNDEFINED> instruction: 0x000047b4
   1b28c:	andeq	r4, r0, r0, lsr #15
   1b290:	ldrdeq	r6, [r1], -r8
   1b294:	andeq	r6, r1, r8, asr #13
   1b298:			; <UNDEFINED> instruction: 0x000166b0
   1b29c:	andeq	r6, r1, r0, lsr #13
   1b2a0:	strdeq	r4, [r0], -ip
   1b2a4:	andeq	r4, r0, r8, ror #13
   1b2a8:	andeq	r4, r0, ip, asr #12
   1b2ac:	andeq	r4, r0, r0, lsr r6
   1b2b0:	andeq	r4, r0, r0, lsl #10
   1b2b4:	andeq	r4, r0, r4, asr #11
   1b2b8:	andeq	r4, r0, r0, lsl #11
   1b2bc:	andeq	r4, r0, ip, asr r5
   1b2c0:	ldrdeq	r4, [r0], -r8
   1b2c4:	muleq	r0, ip, r4
   1b2c8:	andeq	r4, r0, r4, asr r4
   1b2cc:	andeq	r4, r0, r8, lsr r4
   1b2d0:	andeq	r4, r0, r0, lsr r4
   1b2d4:	strdeq	r4, [r0], -ip
   1b2d8:			; <UNDEFINED> instruction: 0x000043b8
   1b2dc:	andeq	r4, r0, ip, ror #6
   1b2e0:	andeq	r4, r0, ip, lsr #6
   1b2e4:	andeq	r4, r0, ip, lsl r3
   1b2e8:	andeq	r4, r0, r0, lsl r3
   1b2ec:			; <UNDEFINED> instruction: 0x000042b8
   1b2f0:	andeq	r4, r0, r8, ror r2
   1b2f4:	andeq	r4, r0, r0, lsl r2
   1b2f8:	andeq	r4, r0, r0, lsl #4
   1b2fc:	andeq	r4, r0, r0, lsl #4
   1b300:	andeq	r4, r0, r8, lsr #3
   1b304:	andeq	r4, r0, ip, lsr #3
   1b308:	andeq	r6, r1, r4, lsl r0
   1b30c:	andeq	r6, r1, r4

0001b310 <print_yaml_data@@Base>:
   1b310:	str	r4, [sp, #-12]!
   1b314:	str	fp, [sp, #4]
   1b318:	str	lr, [sp, #8]
   1b31c:	add	fp, sp, #8
   1b320:	sub	sp, sp, #540	; 0x21c
   1b324:	str	r0, [fp, #-544]	; 0xfffffde0
   1b328:	ldr	r4, [pc, #308]	; 1b464 <print_yaml_data@@Base+0x154>
   1b32c:	add	r4, pc, r4
   1b330:	ldr	r3, [pc, #304]	; 1b468 <print_yaml_data@@Base+0x158>
   1b334:	add	r3, pc, r3
   1b338:	ldr	r2, [fp, #-544]	; 0xfffffde0
   1b33c:	str	r2, [r3]
   1b340:	ldr	r3, [pc, #292]	; 1b46c <print_yaml_data@@Base+0x15c>
   1b344:	ldr	r3, [r4, r3]
   1b348:	ldr	r3, [r3]
   1b34c:	sub	r2, fp, #20
   1b350:	mov	r1, r2
   1b354:	mov	r0, r3
   1b358:	bl	12230 <coda_open@plt>
   1b35c:	str	r0, [fp, #-16]
   1b360:	ldr	r3, [fp, #-16]
   1b364:	cmp	r3, #0
   1b368:	beq	1b3b0 <print_yaml_data@@Base+0xa0>
   1b36c:	bl	125e4 <coda_get_errno@plt>
   1b370:	mov	r3, r0
   1b374:	ldr	r3, [r3]
   1b378:	cmn	r3, #21
   1b37c:	bne	1b3b0 <print_yaml_data@@Base+0xa0>
   1b380:	mov	r0, #0
   1b384:	bl	12278 <coda_set_option_use_mmap@plt>
   1b388:	ldr	r3, [pc, #220]	; 1b46c <print_yaml_data@@Base+0x15c>
   1b38c:	ldr	r3, [r4, r3]
   1b390:	ldr	r3, [r3]
   1b394:	sub	r2, fp, #20
   1b398:	mov	r1, r2
   1b39c:	mov	r0, r3
   1b3a0:	bl	12230 <coda_open@plt>
   1b3a4:	str	r0, [fp, #-16]
   1b3a8:	mov	r0, #1
   1b3ac:	bl	12278 <coda_set_option_use_mmap@plt>
   1b3b0:	ldr	r3, [fp, #-16]
   1b3b4:	cmp	r3, #0
   1b3b8:	beq	1b3c0 <print_yaml_data@@Base+0xb0>
   1b3bc:	bl	1bdc8 <handle_coda_error@@Base>
   1b3c0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b3c4:	sub	r3, fp, #540	; 0x21c
   1b3c8:	mov	r1, r2
   1b3cc:	mov	r0, r3
   1b3d0:	bl	1235c <coda_cursor_set_product@plt>
   1b3d4:	mov	r3, r0
   1b3d8:	cmp	r3, #0
   1b3dc:	beq	1b3e4 <print_yaml_data@@Base+0xd4>
   1b3e0:	bl	1bdc8 <handle_coda_error@@Base>
   1b3e4:	ldr	r3, [pc, #132]	; 1b470 <print_yaml_data@@Base+0x160>
   1b3e8:	ldr	r3, [r4, r3]
   1b3ec:	ldr	r3, [r3]
   1b3f0:	cmp	r3, #0
   1b3f4:	beq	1b428 <print_yaml_data@@Base+0x118>
   1b3f8:	ldr	r3, [pc, #112]	; 1b470 <print_yaml_data@@Base+0x160>
   1b3fc:	ldr	r3, [r4, r3]
   1b400:	ldr	r2, [r3]
   1b404:	sub	r3, fp, #540	; 0x21c
   1b408:	mov	r1, r2
   1b40c:	mov	r0, r3
   1b410:	bl	1253c <coda_cursor_goto@plt>
   1b414:	str	r0, [fp, #-16]
   1b418:	ldr	r3, [fp, #-16]
   1b41c:	cmp	r3, #0
   1b420:	beq	1b428 <print_yaml_data@@Base+0x118>
   1b424:	bl	1bdc8 <handle_coda_error@@Base>
   1b428:	mov	r0, #0
   1b42c:	bl	121dc <coda_set_option_perform_boundary_checks@plt>
   1b430:	sub	r3, fp, #540	; 0x21c
   1b434:	mov	r1, #0
   1b438:	mov	r0, r3
   1b43c:	bl	1a600 <traverse_product@@Base+0x4c8>
   1b440:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b444:	mov	r0, r3
   1b448:	bl	12518 <coda_close@plt>
   1b44c:	nop	{0}
   1b450:	sub	sp, fp, #8
   1b454:	ldr	r4, [sp]
   1b458:	ldr	fp, [sp, #4]
   1b45c:	add	sp, sp, #8
   1b460:	pop	{pc}		; (ldr pc, [sp], #4)
   1b464:	andeq	r5, r1, ip, asr #25
   1b468:	ldrdeq	r5, [r1], -ip
   1b46c:			; <UNDEFINED> instruction: 0x000001b4
   1b470:	ldrdeq	r0, [r0], -r8
   1b474:	str	fp, [sp, #-8]!
   1b478:	str	lr, [sp, #4]
   1b47c:	add	fp, sp, #4
   1b480:	bl	125d8 <coda_get_libcoda_version@plt>
   1b484:	mov	r3, r0
   1b488:	mov	r1, r3
   1b48c:	ldr	r3, [pc, #52]	; 1b4c8 <print_yaml_data@@Base+0x1b8>
   1b490:	add	r3, pc, r3
   1b494:	mov	r0, r3
   1b498:	bl	12200 <printf@plt>
   1b49c:	ldr	r3, [pc, #40]	; 1b4cc <print_yaml_data@@Base+0x1bc>
   1b4a0:	add	r3, pc, r3
   1b4a4:	mov	r0, r3
   1b4a8:	bl	1238c <puts@plt>
   1b4ac:	mov	r0, #10
   1b4b0:	bl	12494 <putchar@plt>
   1b4b4:	nop	{0}
   1b4b8:	sub	sp, fp, #4
   1b4bc:	ldr	fp, [sp]
   1b4c0:	add	sp, sp, #4
   1b4c4:	pop	{pc}		; (ldr pc, [sp], #4)
   1b4c8:	strdeq	r3, [r0], -r8
   1b4cc:	andeq	r3, r0, r0, lsl #30
   1b4d0:	str	fp, [sp, #-8]!
   1b4d4:	str	lr, [sp, #4]
   1b4d8:	add	fp, sp, #4
   1b4dc:	ldr	r3, [pc, #1836]	; 1bc10 <print_yaml_data@@Base+0x900>
   1b4e0:	add	r3, pc, r3
   1b4e4:	mov	r0, r3
   1b4e8:	bl	1238c <puts@plt>
   1b4ec:	ldr	r3, [pc, #1824]	; 1bc14 <print_yaml_data@@Base+0x904>
   1b4f0:	add	r3, pc, r3
   1b4f4:	mov	r0, r3
   1b4f8:	bl	1238c <puts@plt>
   1b4fc:	ldr	r3, [pc, #1812]	; 1bc18 <print_yaml_data@@Base+0x908>
   1b500:	add	r3, pc, r3
   1b504:	mov	r0, r3
   1b508:	bl	1238c <puts@plt>
   1b50c:	ldr	r3, [pc, #1800]	; 1bc1c <print_yaml_data@@Base+0x90c>
   1b510:	add	r3, pc, r3
   1b514:	mov	r0, r3
   1b518:	bl	1238c <puts@plt>
   1b51c:	ldr	r3, [pc, #1788]	; 1bc20 <print_yaml_data@@Base+0x910>
   1b520:	add	r3, pc, r3
   1b524:	mov	r0, r3
   1b528:	bl	1238c <puts@plt>
   1b52c:	ldr	r3, [pc, #1776]	; 1bc24 <print_yaml_data@@Base+0x914>
   1b530:	add	r3, pc, r3
   1b534:	mov	r0, r3
   1b538:	bl	1238c <puts@plt>
   1b53c:	ldr	r3, [pc, #1764]	; 1bc28 <print_yaml_data@@Base+0x918>
   1b540:	add	r3, pc, r3
   1b544:	mov	r0, r3
   1b548:	bl	1238c <puts@plt>
   1b54c:	ldr	r3, [pc, #1752]	; 1bc2c <print_yaml_data@@Base+0x91c>
   1b550:	add	r3, pc, r3
   1b554:	mov	r0, r3
   1b558:	bl	1238c <puts@plt>
   1b55c:	ldr	r3, [pc, #1740]	; 1bc30 <print_yaml_data@@Base+0x920>
   1b560:	add	r3, pc, r3
   1b564:	mov	r0, r3
   1b568:	bl	1238c <puts@plt>
   1b56c:	ldr	r3, [pc, #1728]	; 1bc34 <print_yaml_data@@Base+0x924>
   1b570:	add	r3, pc, r3
   1b574:	mov	r0, r3
   1b578:	bl	1238c <puts@plt>
   1b57c:	ldr	r3, [pc, #1716]	; 1bc38 <print_yaml_data@@Base+0x928>
   1b580:	add	r3, pc, r3
   1b584:	mov	r0, r3
   1b588:	bl	1238c <puts@plt>
   1b58c:	ldr	r3, [pc, #1704]	; 1bc3c <print_yaml_data@@Base+0x92c>
   1b590:	add	r3, pc, r3
   1b594:	mov	r0, r3
   1b598:	bl	1238c <puts@plt>
   1b59c:	ldr	r3, [pc, #1692]	; 1bc40 <print_yaml_data@@Base+0x930>
   1b5a0:	add	r3, pc, r3
   1b5a4:	mov	r0, r3
   1b5a8:	bl	1238c <puts@plt>
   1b5ac:	ldr	r3, [pc, #1680]	; 1bc44 <print_yaml_data@@Base+0x934>
   1b5b0:	add	r3, pc, r3
   1b5b4:	mov	r0, r3
   1b5b8:	bl	1238c <puts@plt>
   1b5bc:	ldr	r3, [pc, #1668]	; 1bc48 <print_yaml_data@@Base+0x938>
   1b5c0:	add	r3, pc, r3
   1b5c4:	mov	r0, r3
   1b5c8:	bl	1238c <puts@plt>
   1b5cc:	ldr	r3, [pc, #1656]	; 1bc4c <print_yaml_data@@Base+0x93c>
   1b5d0:	add	r3, pc, r3
   1b5d4:	mov	r0, r3
   1b5d8:	bl	1238c <puts@plt>
   1b5dc:	ldr	r3, [pc, #1644]	; 1bc50 <print_yaml_data@@Base+0x940>
   1b5e0:	add	r3, pc, r3
   1b5e4:	mov	r0, r3
   1b5e8:	bl	1238c <puts@plt>
   1b5ec:	ldr	r3, [pc, #1632]	; 1bc54 <print_yaml_data@@Base+0x944>
   1b5f0:	add	r3, pc, r3
   1b5f4:	mov	r0, r3
   1b5f8:	bl	1238c <puts@plt>
   1b5fc:	ldr	r3, [pc, #1620]	; 1bc58 <print_yaml_data@@Base+0x948>
   1b600:	add	r3, pc, r3
   1b604:	mov	r0, r3
   1b608:	bl	1238c <puts@plt>
   1b60c:	ldr	r3, [pc, #1608]	; 1bc5c <print_yaml_data@@Base+0x94c>
   1b610:	add	r3, pc, r3
   1b614:	mov	r0, r3
   1b618:	bl	1238c <puts@plt>
   1b61c:	ldr	r3, [pc, #1596]	; 1bc60 <print_yaml_data@@Base+0x950>
   1b620:	add	r3, pc, r3
   1b624:	mov	r0, r3
   1b628:	bl	1238c <puts@plt>
   1b62c:	ldr	r3, [pc, #1584]	; 1bc64 <print_yaml_data@@Base+0x954>
   1b630:	add	r3, pc, r3
   1b634:	mov	r0, r3
   1b638:	bl	1238c <puts@plt>
   1b63c:	ldr	r3, [pc, #1572]	; 1bc68 <print_yaml_data@@Base+0x958>
   1b640:	add	r3, pc, r3
   1b644:	mov	r0, r3
   1b648:	bl	1238c <puts@plt>
   1b64c:	mov	r0, #10
   1b650:	bl	12494 <putchar@plt>
   1b654:	ldr	r3, [pc, #1552]	; 1bc6c <print_yaml_data@@Base+0x95c>
   1b658:	add	r3, pc, r3
   1b65c:	mov	r0, r3
   1b660:	bl	1238c <puts@plt>
   1b664:	ldr	r3, [pc, #1540]	; 1bc70 <print_yaml_data@@Base+0x960>
   1b668:	add	r3, pc, r3
   1b66c:	mov	r0, r3
   1b670:	bl	1238c <puts@plt>
   1b674:	ldr	r3, [pc, #1528]	; 1bc74 <print_yaml_data@@Base+0x964>
   1b678:	add	r3, pc, r3
   1b67c:	mov	r0, r3
   1b680:	bl	1238c <puts@plt>
   1b684:	ldr	r3, [pc, #1516]	; 1bc78 <print_yaml_data@@Base+0x968>
   1b688:	add	r3, pc, r3
   1b68c:	mov	r0, r3
   1b690:	bl	1238c <puts@plt>
   1b694:	ldr	r3, [pc, #1504]	; 1bc7c <print_yaml_data@@Base+0x96c>
   1b698:	add	r3, pc, r3
   1b69c:	mov	r0, r3
   1b6a0:	bl	1238c <puts@plt>
   1b6a4:	ldr	r3, [pc, #1492]	; 1bc80 <print_yaml_data@@Base+0x970>
   1b6a8:	add	r3, pc, r3
   1b6ac:	mov	r0, r3
   1b6b0:	bl	1238c <puts@plt>
   1b6b4:	ldr	r3, [pc, #1480]	; 1bc84 <print_yaml_data@@Base+0x974>
   1b6b8:	add	r3, pc, r3
   1b6bc:	mov	r0, r3
   1b6c0:	bl	1238c <puts@plt>
   1b6c4:	ldr	r3, [pc, #1468]	; 1bc88 <print_yaml_data@@Base+0x978>
   1b6c8:	add	r3, pc, r3
   1b6cc:	mov	r0, r3
   1b6d0:	bl	1238c <puts@plt>
   1b6d4:	ldr	r3, [pc, #1456]	; 1bc8c <print_yaml_data@@Base+0x97c>
   1b6d8:	add	r3, pc, r3
   1b6dc:	mov	r0, r3
   1b6e0:	bl	1238c <puts@plt>
   1b6e4:	ldr	r3, [pc, #1444]	; 1bc90 <print_yaml_data@@Base+0x980>
   1b6e8:	add	r3, pc, r3
   1b6ec:	mov	r0, r3
   1b6f0:	bl	1238c <puts@plt>
   1b6f4:	ldr	r3, [pc, #1432]	; 1bc94 <print_yaml_data@@Base+0x984>
   1b6f8:	add	r3, pc, r3
   1b6fc:	mov	r0, r3
   1b700:	bl	1238c <puts@plt>
   1b704:	ldr	r3, [pc, #1420]	; 1bc98 <print_yaml_data@@Base+0x988>
   1b708:	add	r3, pc, r3
   1b70c:	mov	r0, r3
   1b710:	bl	1238c <puts@plt>
   1b714:	ldr	r3, [pc, #1408]	; 1bc9c <print_yaml_data@@Base+0x98c>
   1b718:	add	r3, pc, r3
   1b71c:	mov	r0, r3
   1b720:	bl	1238c <puts@plt>
   1b724:	ldr	r3, [pc, #1396]	; 1bca0 <print_yaml_data@@Base+0x990>
   1b728:	add	r3, pc, r3
   1b72c:	mov	r0, r3
   1b730:	bl	1238c <puts@plt>
   1b734:	ldr	r3, [pc, #1384]	; 1bca4 <print_yaml_data@@Base+0x994>
   1b738:	add	r3, pc, r3
   1b73c:	mov	r0, r3
   1b740:	bl	1238c <puts@plt>
   1b744:	ldr	r3, [pc, #1372]	; 1bca8 <print_yaml_data@@Base+0x998>
   1b748:	add	r3, pc, r3
   1b74c:	mov	r0, r3
   1b750:	bl	1238c <puts@plt>
   1b754:	ldr	r3, [pc, #1360]	; 1bcac <print_yaml_data@@Base+0x99c>
   1b758:	add	r3, pc, r3
   1b75c:	mov	r0, r3
   1b760:	bl	1238c <puts@plt>
   1b764:	ldr	r3, [pc, #1348]	; 1bcb0 <print_yaml_data@@Base+0x9a0>
   1b768:	add	r3, pc, r3
   1b76c:	mov	r0, r3
   1b770:	bl	1238c <puts@plt>
   1b774:	ldr	r3, [pc, #1336]	; 1bcb4 <print_yaml_data@@Base+0x9a4>
   1b778:	add	r3, pc, r3
   1b77c:	mov	r0, r3
   1b780:	bl	1238c <puts@plt>
   1b784:	ldr	r3, [pc, #1324]	; 1bcb8 <print_yaml_data@@Base+0x9a8>
   1b788:	add	r3, pc, r3
   1b78c:	mov	r0, r3
   1b790:	bl	1238c <puts@plt>
   1b794:	ldr	r3, [pc, #1312]	; 1bcbc <print_yaml_data@@Base+0x9ac>
   1b798:	add	r3, pc, r3
   1b79c:	mov	r0, r3
   1b7a0:	bl	1238c <puts@plt>
   1b7a4:	ldr	r3, [pc, #1300]	; 1bcc0 <print_yaml_data@@Base+0x9b0>
   1b7a8:	add	r3, pc, r3
   1b7ac:	mov	r0, r3
   1b7b0:	bl	1238c <puts@plt>
   1b7b4:	ldr	r3, [pc, #1288]	; 1bcc4 <print_yaml_data@@Base+0x9b4>
   1b7b8:	add	r3, pc, r3
   1b7bc:	mov	r0, r3
   1b7c0:	bl	1238c <puts@plt>
   1b7c4:	mov	r0, #10
   1b7c8:	bl	12494 <putchar@plt>
   1b7cc:	ldr	r3, [pc, #1268]	; 1bcc8 <print_yaml_data@@Base+0x9b8>
   1b7d0:	add	r3, pc, r3
   1b7d4:	mov	r0, r3
   1b7d8:	bl	1238c <puts@plt>
   1b7dc:	ldr	r3, [pc, #1256]	; 1bccc <print_yaml_data@@Base+0x9bc>
   1b7e0:	add	r3, pc, r3
   1b7e4:	mov	r0, r3
   1b7e8:	bl	1238c <puts@plt>
   1b7ec:	ldr	r3, [pc, #1244]	; 1bcd0 <print_yaml_data@@Base+0x9c0>
   1b7f0:	add	r3, pc, r3
   1b7f4:	mov	r0, r3
   1b7f8:	bl	1238c <puts@plt>
   1b7fc:	ldr	r3, [pc, #1232]	; 1bcd4 <print_yaml_data@@Base+0x9c4>
   1b800:	add	r3, pc, r3
   1b804:	mov	r0, r3
   1b808:	bl	1238c <puts@plt>
   1b80c:	ldr	r3, [pc, #1220]	; 1bcd8 <print_yaml_data@@Base+0x9c8>
   1b810:	add	r3, pc, r3
   1b814:	mov	r0, r3
   1b818:	bl	1238c <puts@plt>
   1b81c:	ldr	r3, [pc, #1208]	; 1bcdc <print_yaml_data@@Base+0x9cc>
   1b820:	add	r3, pc, r3
   1b824:	mov	r0, r3
   1b828:	bl	1238c <puts@plt>
   1b82c:	ldr	r3, [pc, #1196]	; 1bce0 <print_yaml_data@@Base+0x9d0>
   1b830:	add	r3, pc, r3
   1b834:	mov	r0, r3
   1b838:	bl	1238c <puts@plt>
   1b83c:	ldr	r3, [pc, #1184]	; 1bce4 <print_yaml_data@@Base+0x9d4>
   1b840:	add	r3, pc, r3
   1b844:	mov	r0, r3
   1b848:	bl	1238c <puts@plt>
   1b84c:	ldr	r3, [pc, #1172]	; 1bce8 <print_yaml_data@@Base+0x9d8>
   1b850:	add	r3, pc, r3
   1b854:	mov	r0, r3
   1b858:	bl	1238c <puts@plt>
   1b85c:	ldr	r3, [pc, #1160]	; 1bcec <print_yaml_data@@Base+0x9dc>
   1b860:	add	r3, pc, r3
   1b864:	mov	r0, r3
   1b868:	bl	1238c <puts@plt>
   1b86c:	ldr	r3, [pc, #1148]	; 1bcf0 <print_yaml_data@@Base+0x9e0>
   1b870:	add	r3, pc, r3
   1b874:	mov	r0, r3
   1b878:	bl	1238c <puts@plt>
   1b87c:	ldr	r3, [pc, #1136]	; 1bcf4 <print_yaml_data@@Base+0x9e4>
   1b880:	add	r3, pc, r3
   1b884:	mov	r0, r3
   1b888:	bl	1238c <puts@plt>
   1b88c:	ldr	r3, [pc, #1124]	; 1bcf8 <print_yaml_data@@Base+0x9e8>
   1b890:	add	r3, pc, r3
   1b894:	mov	r0, r3
   1b898:	bl	1238c <puts@plt>
   1b89c:	ldr	r3, [pc, #1112]	; 1bcfc <print_yaml_data@@Base+0x9ec>
   1b8a0:	add	r3, pc, r3
   1b8a4:	mov	r0, r3
   1b8a8:	bl	1238c <puts@plt>
   1b8ac:	ldr	r3, [pc, #1100]	; 1bd00 <print_yaml_data@@Base+0x9f0>
   1b8b0:	add	r3, pc, r3
   1b8b4:	mov	r0, r3
   1b8b8:	bl	1238c <puts@plt>
   1b8bc:	ldr	r3, [pc, #1088]	; 1bd04 <print_yaml_data@@Base+0x9f4>
   1b8c0:	add	r3, pc, r3
   1b8c4:	mov	r0, r3
   1b8c8:	bl	1238c <puts@plt>
   1b8cc:	ldr	r3, [pc, #1076]	; 1bd08 <print_yaml_data@@Base+0x9f8>
   1b8d0:	add	r3, pc, r3
   1b8d4:	mov	r0, r3
   1b8d8:	bl	1238c <puts@plt>
   1b8dc:	mov	r0, #10
   1b8e0:	bl	12494 <putchar@plt>
   1b8e4:	ldr	r3, [pc, #1056]	; 1bd0c <print_yaml_data@@Base+0x9fc>
   1b8e8:	add	r3, pc, r3
   1b8ec:	mov	r0, r3
   1b8f0:	bl	1238c <puts@plt>
   1b8f4:	ldr	r3, [pc, #1044]	; 1bd10 <print_yaml_data@@Base+0xa00>
   1b8f8:	add	r3, pc, r3
   1b8fc:	mov	r0, r3
   1b900:	bl	1238c <puts@plt>
   1b904:	ldr	r3, [pc, #1032]	; 1bd14 <print_yaml_data@@Base+0xa04>
   1b908:	add	r3, pc, r3
   1b90c:	mov	r0, r3
   1b910:	bl	1238c <puts@plt>
   1b914:	ldr	r3, [pc, #1020]	; 1bd18 <print_yaml_data@@Base+0xa08>
   1b918:	add	r3, pc, r3
   1b91c:	mov	r0, r3
   1b920:	bl	1238c <puts@plt>
   1b924:	ldr	r3, [pc, #1008]	; 1bd1c <print_yaml_data@@Base+0xa0c>
   1b928:	add	r3, pc, r3
   1b92c:	mov	r0, r3
   1b930:	bl	1238c <puts@plt>
   1b934:	ldr	r3, [pc, #996]	; 1bd20 <print_yaml_data@@Base+0xa10>
   1b938:	add	r3, pc, r3
   1b93c:	mov	r0, r3
   1b940:	bl	1238c <puts@plt>
   1b944:	ldr	r3, [pc, #984]	; 1bd24 <print_yaml_data@@Base+0xa14>
   1b948:	add	r3, pc, r3
   1b94c:	mov	r0, r3
   1b950:	bl	1238c <puts@plt>
   1b954:	ldr	r3, [pc, #972]	; 1bd28 <print_yaml_data@@Base+0xa18>
   1b958:	add	r3, pc, r3
   1b95c:	mov	r0, r3
   1b960:	bl	1238c <puts@plt>
   1b964:	ldr	r3, [pc, #960]	; 1bd2c <print_yaml_data@@Base+0xa1c>
   1b968:	add	r3, pc, r3
   1b96c:	mov	r0, r3
   1b970:	bl	1238c <puts@plt>
   1b974:	ldr	r3, [pc, #948]	; 1bd30 <print_yaml_data@@Base+0xa20>
   1b978:	add	r3, pc, r3
   1b97c:	mov	r0, r3
   1b980:	bl	1238c <puts@plt>
   1b984:	ldr	r3, [pc, #936]	; 1bd34 <print_yaml_data@@Base+0xa24>
   1b988:	add	r3, pc, r3
   1b98c:	mov	r0, r3
   1b990:	bl	1238c <puts@plt>
   1b994:	ldr	r3, [pc, #924]	; 1bd38 <print_yaml_data@@Base+0xa28>
   1b998:	add	r3, pc, r3
   1b99c:	mov	r0, r3
   1b9a0:	bl	1238c <puts@plt>
   1b9a4:	ldr	r3, [pc, #912]	; 1bd3c <print_yaml_data@@Base+0xa2c>
   1b9a8:	add	r3, pc, r3
   1b9ac:	mov	r0, r3
   1b9b0:	bl	1238c <puts@plt>
   1b9b4:	ldr	r3, [pc, #900]	; 1bd40 <print_yaml_data@@Base+0xa30>
   1b9b8:	add	r3, pc, r3
   1b9bc:	mov	r0, r3
   1b9c0:	bl	1238c <puts@plt>
   1b9c4:	ldr	r3, [pc, #888]	; 1bd44 <print_yaml_data@@Base+0xa34>
   1b9c8:	add	r3, pc, r3
   1b9cc:	mov	r0, r3
   1b9d0:	bl	1238c <puts@plt>
   1b9d4:	ldr	r3, [pc, #876]	; 1bd48 <print_yaml_data@@Base+0xa38>
   1b9d8:	add	r3, pc, r3
   1b9dc:	mov	r0, r3
   1b9e0:	bl	1238c <puts@plt>
   1b9e4:	ldr	r3, [pc, #864]	; 1bd4c <print_yaml_data@@Base+0xa3c>
   1b9e8:	add	r3, pc, r3
   1b9ec:	mov	r0, r3
   1b9f0:	bl	1238c <puts@plt>
   1b9f4:	ldr	r3, [pc, #852]	; 1bd50 <print_yaml_data@@Base+0xa40>
   1b9f8:	add	r3, pc, r3
   1b9fc:	mov	r0, r3
   1ba00:	bl	1238c <puts@plt>
   1ba04:	mov	r0, #10
   1ba08:	bl	12494 <putchar@plt>
   1ba0c:	ldr	r3, [pc, #832]	; 1bd54 <print_yaml_data@@Base+0xa44>
   1ba10:	add	r3, pc, r3
   1ba14:	mov	r0, r3
   1ba18:	bl	1238c <puts@plt>
   1ba1c:	ldr	r3, [pc, #820]	; 1bd58 <print_yaml_data@@Base+0xa48>
   1ba20:	add	r3, pc, r3
   1ba24:	mov	r0, r3
   1ba28:	bl	1238c <puts@plt>
   1ba2c:	ldr	r3, [pc, #808]	; 1bd5c <print_yaml_data@@Base+0xa4c>
   1ba30:	add	r3, pc, r3
   1ba34:	mov	r0, r3
   1ba38:	bl	1238c <puts@plt>
   1ba3c:	ldr	r3, [pc, #796]	; 1bd60 <print_yaml_data@@Base+0xa50>
   1ba40:	add	r3, pc, r3
   1ba44:	mov	r0, r3
   1ba48:	bl	1238c <puts@plt>
   1ba4c:	ldr	r3, [pc, #784]	; 1bd64 <print_yaml_data@@Base+0xa54>
   1ba50:	add	r3, pc, r3
   1ba54:	mov	r0, r3
   1ba58:	bl	1238c <puts@plt>
   1ba5c:	ldr	r3, [pc, #772]	; 1bd68 <print_yaml_data@@Base+0xa58>
   1ba60:	add	r3, pc, r3
   1ba64:	mov	r0, r3
   1ba68:	bl	1238c <puts@plt>
   1ba6c:	ldr	r3, [pc, #760]	; 1bd6c <print_yaml_data@@Base+0xa5c>
   1ba70:	add	r3, pc, r3
   1ba74:	mov	r0, r3
   1ba78:	bl	1238c <puts@plt>
   1ba7c:	ldr	r3, [pc, #748]	; 1bd70 <print_yaml_data@@Base+0xa60>
   1ba80:	add	r3, pc, r3
   1ba84:	mov	r0, r3
   1ba88:	bl	1238c <puts@plt>
   1ba8c:	ldr	r3, [pc, #736]	; 1bd74 <print_yaml_data@@Base+0xa64>
   1ba90:	add	r3, pc, r3
   1ba94:	mov	r0, r3
   1ba98:	bl	1238c <puts@plt>
   1ba9c:	ldr	r3, [pc, #724]	; 1bd78 <print_yaml_data@@Base+0xa68>
   1baa0:	add	r3, pc, r3
   1baa4:	mov	r0, r3
   1baa8:	bl	1238c <puts@plt>
   1baac:	ldr	r3, [pc, #712]	; 1bd7c <print_yaml_data@@Base+0xa6c>
   1bab0:	add	r3, pc, r3
   1bab4:	mov	r0, r3
   1bab8:	bl	1238c <puts@plt>
   1babc:	ldr	r3, [pc, #700]	; 1bd80 <print_yaml_data@@Base+0xa70>
   1bac0:	add	r3, pc, r3
   1bac4:	mov	r0, r3
   1bac8:	bl	1238c <puts@plt>
   1bacc:	ldr	r3, [pc, #688]	; 1bd84 <print_yaml_data@@Base+0xa74>
   1bad0:	add	r3, pc, r3
   1bad4:	mov	r0, r3
   1bad8:	bl	1238c <puts@plt>
   1badc:	ldr	r3, [pc, #676]	; 1bd88 <print_yaml_data@@Base+0xa78>
   1bae0:	add	r3, pc, r3
   1bae4:	mov	r0, r3
   1bae8:	bl	1238c <puts@plt>
   1baec:	ldr	r3, [pc, #664]	; 1bd8c <print_yaml_data@@Base+0xa7c>
   1baf0:	add	r3, pc, r3
   1baf4:	mov	r0, r3
   1baf8:	bl	1238c <puts@plt>
   1bafc:	ldr	r3, [pc, #652]	; 1bd90 <print_yaml_data@@Base+0xa80>
   1bb00:	add	r3, pc, r3
   1bb04:	mov	r0, r3
   1bb08:	bl	1238c <puts@plt>
   1bb0c:	ldr	r3, [pc, #640]	; 1bd94 <print_yaml_data@@Base+0xa84>
   1bb10:	add	r3, pc, r3
   1bb14:	mov	r0, r3
   1bb18:	bl	1238c <puts@plt>
   1bb1c:	ldr	r3, [pc, #628]	; 1bd98 <print_yaml_data@@Base+0xa88>
   1bb20:	add	r3, pc, r3
   1bb24:	mov	r0, r3
   1bb28:	bl	1238c <puts@plt>
   1bb2c:	mov	r0, #10
   1bb30:	bl	12494 <putchar@plt>
   1bb34:	ldr	r3, [pc, #608]	; 1bd9c <print_yaml_data@@Base+0xa8c>
   1bb38:	add	r3, pc, r3
   1bb3c:	mov	r0, r3
   1bb40:	bl	1238c <puts@plt>
   1bb44:	ldr	r3, [pc, #596]	; 1bda0 <print_yaml_data@@Base+0xa90>
   1bb48:	add	r3, pc, r3
   1bb4c:	mov	r0, r3
   1bb50:	bl	1238c <puts@plt>
   1bb54:	mov	r0, #10
   1bb58:	bl	12494 <putchar@plt>
   1bb5c:	ldr	r3, [pc, #576]	; 1bda4 <print_yaml_data@@Base+0xa94>
   1bb60:	add	r3, pc, r3
   1bb64:	mov	r0, r3
   1bb68:	bl	1238c <puts@plt>
   1bb6c:	ldr	r3, [pc, #564]	; 1bda8 <print_yaml_data@@Base+0xa98>
   1bb70:	add	r3, pc, r3
   1bb74:	mov	r0, r3
   1bb78:	bl	1238c <puts@plt>
   1bb7c:	mov	r0, #10
   1bb80:	bl	12494 <putchar@plt>
   1bb84:	ldr	r3, [pc, #544]	; 1bdac <print_yaml_data@@Base+0xa9c>
   1bb88:	add	r3, pc, r3
   1bb8c:	mov	r0, r3
   1bb90:	bl	1238c <puts@plt>
   1bb94:	ldr	r3, [pc, #532]	; 1bdb0 <print_yaml_data@@Base+0xaa0>
   1bb98:	add	r3, pc, r3
   1bb9c:	mov	r0, r3
   1bba0:	bl	1238c <puts@plt>
   1bba4:	ldr	r3, [pc, #520]	; 1bdb4 <print_yaml_data@@Base+0xaa4>
   1bba8:	add	r3, pc, r3
   1bbac:	mov	r0, r3
   1bbb0:	bl	1238c <puts@plt>
   1bbb4:	ldr	r3, [pc, #508]	; 1bdb8 <print_yaml_data@@Base+0xaa8>
   1bbb8:	add	r3, pc, r3
   1bbbc:	mov	r0, r3
   1bbc0:	bl	1238c <puts@plt>
   1bbc4:	ldr	r3, [pc, #496]	; 1bdbc <print_yaml_data@@Base+0xaac>
   1bbc8:	add	r3, pc, r3
   1bbcc:	mov	r0, r3
   1bbd0:	bl	1238c <puts@plt>
   1bbd4:	ldr	r3, [pc, #484]	; 1bdc0 <print_yaml_data@@Base+0xab0>
   1bbd8:	add	r3, pc, r3
   1bbdc:	mov	r0, r3
   1bbe0:	bl	1238c <puts@plt>
   1bbe4:	ldr	r3, [pc, #472]	; 1bdc4 <print_yaml_data@@Base+0xab4>
   1bbe8:	add	r3, pc, r3
   1bbec:	mov	r0, r3
   1bbf0:	bl	1238c <puts@plt>
   1bbf4:	mov	r0, #10
   1bbf8:	bl	12494 <putchar@plt>
   1bbfc:	nop	{0}
   1bc00:	sub	sp, fp, #4
   1bc04:	ldr	fp, [sp]
   1bc08:	add	sp, sp, #4
   1bc0c:	pop	{pc}		; (ldr pc, [sp], #4)
   1bc10:	strdeq	r3, [r0], -r0
   1bc14:	andeq	r3, r0, r8, ror #29
   1bc18:	andeq	r3, r0, r0, lsr #30
   1bc1c:	andeq	r3, r0, ip, lsr pc
   1bc20:	andeq	r3, r0, r4, asr #30
   1bc24:	andeq	r3, r0, r0, asr pc
   1bc28:	andeq	r3, r0, r8, ror pc
   1bc2c:	muleq	r0, r0, pc	; <UNPREDICTABLE>
   1bc30:			; <UNDEFINED> instruction: 0x00003fbc
   1bc34:	ldrdeq	r3, [r0], -ip
   1bc38:	andeq	r4, r0, r4, lsl r0
   1bc3c:	andeq	r4, r0, ip, lsl r0
   1bc40:	andeq	r4, r0, r8, lsr r0
   1bc44:	andeq	r4, r0, r0, asr #32
   1bc48:	andeq	r4, r0, ip, asr r0
   1bc4c:	andeq	r4, r0, r8, rrx
   1bc50:	andeq	r4, r0, ip, lsl #1
   1bc54:	muleq	r0, r8, r0
   1bc58:	ldrdeq	r4, [r0], -r0
   1bc5c:	andeq	r4, r0, ip, ror #1
   1bc60:	strdeq	r4, [r0], -ip
   1bc64:	andeq	r4, r0, ip, lsr r1
   1bc68:	andeq	r4, r0, ip, ror r1
   1bc6c:	andeq	r4, r0, r4, lsl #3
   1bc70:			; <UNDEFINED> instruction: 0x000041bc
   1bc74:	ldrdeq	r3, [r0], -r4
   1bc78:	andeq	r3, r0, r0, lsr lr
   1bc7c:	andeq	r3, r0, r8, asr #28
   1bc80:	andeq	r3, r0, r4, ror lr
   1bc84:	muleq	r0, r4, lr
   1bc88:	muleq	r0, r8, r1
   1bc8c:	andeq	r4, r0, r0, lsr #3
   1bc90:	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   1bc94:	ldrdeq	r4, [r0], -ip
   1bc98:	andeq	r4, r0, r8, lsl r2
   1bc9c:	andeq	r4, r0, ip, lsr #4
   1bca0:	andeq	r4, r0, r0, asr r2
   1bca4:	andeq	r4, r0, r0, ror #4
   1bca8:	muleq	r0, ip, r2
   1bcac:	andeq	r4, r0, r4, asr #5
   1bcb0:	andeq	r4, r0, r0, lsl #6
   1bcb4:	andeq	r4, r0, r4, lsl r3
   1bcb8:	andeq	r3, r0, r4, ror pc
   1bcbc:	andeq	r3, r0, r4, lsl #31
   1bcc0:	andeq	r3, r0, r4, asr #31
   1bcc4:	andeq	r4, r0, r4
   1bcc8:	andeq	r4, r0, ip, lsl #6
   1bccc:	andeq	r4, r0, r4, asr #6
   1bcd0:	andeq	r4, r0, r0, ror r3
   1bcd4:	andeq	r4, r0, r8, ror r3
   1bcd8:	andeq	r4, r0, r8, lsl #7
   1bcdc:	andeq	r4, r0, r0, asr #7
   1bce0:	andeq	r3, r0, r8, lsl #25
   1bce4:	andeq	r3, r0, r0, lsr #25
   1bce8:	ldrdeq	r4, [r0], -r0
   1bcec:	andeq	r4, r0, r4, ror #1
   1bcf0:			; <UNDEFINED> instruction: 0x000043bc
   1bcf4:	andeq	r4, r0, ip, asr #7
   1bcf8:	andeq	r4, r0, r4, lsl #8
   1bcfc:	andeq	r3, r0, ip, asr lr
   1bd00:	andeq	r3, r0, ip, ror #28
   1bd04:	andeq	r3, r0, ip, lsr #29
   1bd08:	andeq	r3, r0, ip, ror #29
   1bd0c:	strdeq	r4, [r0], -ip
   1bd10:	andeq	r4, r0, r4, lsr r4
   1bd14:	andeq	r4, r0, r0, ror #8
   1bd18:	andeq	r4, r0, r0, ror #4
   1bd1c:	andeq	r4, r0, r0, ror r2
   1bd20:	andeq	r4, r0, r8, asr #8
   1bd24:	andeq	r4, r0, r4, lsl #9
   1bd28:	andeq	r3, r0, r0, ror #22
   1bd2c:	andeq	r3, r0, r8, ror fp
   1bd30:	andeq	r3, r0, r8, lsr #31
   1bd34:			; <UNDEFINED> instruction: 0x00003fbc
   1bd38:	muleq	r0, r4, r2
   1bd3c:	andeq	r4, r0, r4, lsr #5
   1bd40:	ldrdeq	r4, [r0], -ip
   1bd44:	andeq	r3, r0, r4, lsr sp
   1bd48:	andeq	r3, r0, r4, asr #26
   1bd4c:	andeq	r3, r0, r4, lsl #27
   1bd50:	andeq	r3, r0, r4, asr #27
   1bd54:	ldrdeq	r4, [r0], -ip
   1bd58:	andeq	r4, r0, r4, lsl r4
   1bd5c:	andeq	r4, r0, r0, asr r4
   1bd60:	andeq	r4, r0, ip, lsl #9
   1bd64:	andeq	r4, r0, ip, lsr #9
   1bd68:			; <UNDEFINED> instruction: 0x000044b4
   1bd6c:	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   1bd70:	andeq	r3, r0, r0, lsr #29
   1bd74:			; <UNDEFINED> instruction: 0x00003eb4
   1bd78:	andeq	r4, r0, ip, lsl #3
   1bd7c:	muleq	r0, ip, r1
   1bd80:	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   1bd84:	andeq	r4, r0, ip, lsr #9
   1bd88:			; <UNDEFINED> instruction: 0x000044bc
   1bd8c:	strdeq	r4, [r0], -ip
   1bd90:	andeq	r4, r0, r8, lsr r5
   1bd94:	andeq	r4, r0, r8, ror #10
   1bd98:	andeq	r4, r0, r8, lsr #11
   1bd9c:	andeq	r4, r0, r8, asr #11
   1bda0:	ldrdeq	r4, [r0], -r0
   1bda4:	ldrdeq	r4, [r0], -r8
   1bda8:	andeq	r4, r0, r4, ror #11
   1bdac:	andeq	r4, r0, r0, lsl #12
   1bdb0:	andeq	r4, r0, r0, asr #12
   1bdb4:	andeq	r4, r0, ip, ror r6
   1bdb8:	muleq	r0, r8, r6
   1bdbc:	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   1bdc0:	andeq	r4, r0, ip, lsl #14
   1bdc4:	andeq	r4, r0, ip, lsr r7

0001bdc8 <handle_coda_error@@Base>:
   1bdc8:	strd	r4, [sp, #-16]!
   1bdcc:	str	fp, [sp, #8]
   1bdd0:	str	lr, [sp, #12]
   1bdd4:	add	fp, sp, #12
   1bdd8:	ldr	r4, [pc, #88]	; 1be38 <handle_coda_error@@Base+0x70>
   1bddc:	add	r4, pc, r4
   1bde0:	ldr	r3, [pc, #84]	; 1be3c <handle_coda_error@@Base+0x74>
   1bde4:	ldr	r3, [r4, r3]
   1bde8:	ldr	r5, [r3]
   1bdec:	bl	125e4 <coda_get_errno@plt>
   1bdf0:	mov	r3, r0
   1bdf4:	ldr	r3, [r3]
   1bdf8:	mov	r0, r3
   1bdfc:	bl	1259c <coda_errno_to_string@plt>
   1be00:	mov	r3, r0
   1be04:	mov	r2, r3
   1be08:	ldr	r3, [pc, #48]	; 1be40 <handle_coda_error@@Base+0x78>
   1be0c:	add	r3, pc, r3
   1be10:	mov	r1, r3
   1be14:	mov	r0, r5
   1be18:	bl	12434 <fprintf@plt>
   1be1c:	ldr	r3, [pc, #24]	; 1be3c <handle_coda_error@@Base+0x74>
   1be20:	ldr	r3, [r4, r3]
   1be24:	ldr	r3, [r3]
   1be28:	mov	r0, r3
   1be2c:	bl	1223c <fflush@plt>
   1be30:	mov	r0, #1
   1be34:	bl	123ec <exit@plt>
   1be38:	andeq	r5, r1, ip, lsl r2
   1be3c:			; <UNDEFINED> instruction: 0x000001b8
   1be40:	andeq	r4, r0, r8, asr r5
   1be44:	str	r4, [sp, #-12]!
   1be48:	str	fp, [sp, #4]
   1be4c:	str	lr, [sp, #8]
   1be50:	add	fp, sp, #8
   1be54:	sub	sp, sp, #28
   1be58:	str	r0, [fp, #-32]	; 0xffffffe0
   1be5c:	str	r1, [fp, #-36]	; 0xffffffdc
   1be60:	ldr	r4, [pc, #1580]	; 1c494 <handle_coda_error@@Base+0x6cc>
   1be64:	add	r4, pc, r4
   1be68:	ldr	r3, [pc, #1576]	; 1c498 <handle_coda_error@@Base+0x6d0>
   1be6c:	ldr	r3, [r4, r3]
   1be70:	mov	r2, #0
   1be74:	str	r2, [r3]
   1be78:	ldr	r3, [pc, #1560]	; 1c498 <handle_coda_error@@Base+0x6d0>
   1be7c:	ldr	r3, [r4, r3]
   1be80:	mov	r2, #0
   1be84:	str	r2, [r3, #664]	; 0x298
   1be88:	ldr	r3, [pc, #1548]	; 1c49c <handle_coda_error@@Base+0x6d4>
   1be8c:	ldr	r3, [r4, r3]
   1be90:	mov	r2, #1
   1be94:	str	r2, [r3]
   1be98:	ldr	r3, [pc, #1536]	; 1c4a0 <handle_coda_error@@Base+0x6d8>
   1be9c:	ldr	r3, [r4, r3]
   1bea0:	mov	r2, #0
   1bea4:	str	r2, [r3]
   1bea8:	mov	r3, #1
   1beac:	str	r3, [fp, #-16]
   1beb0:	mov	r3, #1
   1beb4:	str	r3, [fp, #-20]	; 0xffffffec
   1beb8:	ldr	r3, [pc, #1508]	; 1c4a4 <handle_coda_error@@Base+0x6dc>
   1bebc:	ldr	r3, [r4, r3]
   1bec0:	mov	r2, #0
   1bec4:	str	r2, [r3]
   1bec8:	ldr	r3, [pc, #1496]	; 1c4a8 <handle_coda_error@@Base+0x6e0>
   1becc:	ldr	r3, [r4, r3]
   1bed0:	mov	r2, #0
   1bed4:	str	r2, [r3]
   1bed8:	ldr	r3, [pc, #1484]	; 1c4ac <handle_coda_error@@Base+0x6e4>
   1bedc:	ldr	r3, [r4, r3]
   1bee0:	mov	r2, #0
   1bee4:	str	r2, [r3]
   1bee8:	ldr	r3, [pc, #1472]	; 1c4b0 <handle_coda_error@@Base+0x6e8>
   1beec:	ldr	r3, [r4, r3]
   1bef0:	mov	r2, #0
   1bef4:	str	r2, [r3]
   1bef8:	mov	r3, #0
   1befc:	str	r3, [fp, #-24]	; 0xffffffe8
   1bf00:	b	1c37c <handle_coda_error@@Base+0x5b4>
   1bf04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bf08:	lsl	r3, r3, #2
   1bf0c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1bf10:	add	r3, r2, r3
   1bf14:	ldr	r3, [r3]
   1bf18:	ldr	r2, [pc, #1428]	; 1c4b4 <handle_coda_error@@Base+0x6ec>
   1bf1c:	add	r2, pc, r2
   1bf20:	mov	r1, r2
   1bf24:	mov	r0, r3
   1bf28:	bl	121e8 <strcmp@plt>
   1bf2c:	mov	r3, r0
   1bf30:	cmp	r3, #0
   1bf34:	beq	1bf6c <handle_coda_error@@Base+0x1a4>
   1bf38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bf3c:	lsl	r3, r3, #2
   1bf40:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1bf44:	add	r3, r2, r3
   1bf48:	ldr	r3, [r3]
   1bf4c:	ldr	r2, [pc, #1380]	; 1c4b8 <handle_coda_error@@Base+0x6f0>
   1bf50:	add	r2, pc, r2
   1bf54:	mov	r1, r2
   1bf58:	mov	r0, r3
   1bf5c:	bl	121e8 <strcmp@plt>
   1bf60:	mov	r3, r0
   1bf64:	cmp	r3, #0
   1bf68:	bne	1bf80 <handle_coda_error@@Base+0x1b8>
   1bf6c:	ldr	r3, [pc, #1324]	; 1c4a0 <handle_coda_error@@Base+0x6d8>
   1bf70:	ldr	r3, [r4, r3]
   1bf74:	mov	r2, #1
   1bf78:	str	r2, [r3]
   1bf7c:	b	1c370 <handle_coda_error@@Base+0x5a8>
   1bf80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bf84:	lsl	r3, r3, #2
   1bf88:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1bf8c:	add	r3, r2, r3
   1bf90:	ldr	r3, [r3]
   1bf94:	ldr	r2, [pc, #1312]	; 1c4bc <handle_coda_error@@Base+0x6f4>
   1bf98:	add	r2, pc, r2
   1bf9c:	mov	r1, r2
   1bfa0:	mov	r0, r3
   1bfa4:	bl	121e8 <strcmp@plt>
   1bfa8:	mov	r3, r0
   1bfac:	cmp	r3, #0
   1bfb0:	beq	1bfe8 <handle_coda_error@@Base+0x220>
   1bfb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bfb8:	lsl	r3, r3, #2
   1bfbc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1bfc0:	add	r3, r2, r3
   1bfc4:	ldr	r3, [r3]
   1bfc8:	ldr	r2, [pc, #1264]	; 1c4c0 <handle_coda_error@@Base+0x6f8>
   1bfcc:	add	r2, pc, r2
   1bfd0:	mov	r1, r2
   1bfd4:	mov	r0, r3
   1bfd8:	bl	121e8 <strcmp@plt>
   1bfdc:	mov	r3, r0
   1bfe0:	cmp	r3, #0
   1bfe4:	bne	1bff4 <handle_coda_error@@Base+0x22c>
   1bfe8:	mov	r3, #0
   1bfec:	str	r3, [fp, #-20]	; 0xffffffec
   1bff0:	b	1c370 <handle_coda_error@@Base+0x5a8>
   1bff4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bff8:	lsl	r3, r3, #2
   1bffc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c000:	add	r3, r2, r3
   1c004:	ldr	r3, [r3]
   1c008:	ldr	r2, [pc, #1204]	; 1c4c4 <handle_coda_error@@Base+0x6fc>
   1c00c:	add	r2, pc, r2
   1c010:	mov	r1, r2
   1c014:	mov	r0, r3
   1c018:	bl	121e8 <strcmp@plt>
   1c01c:	mov	r3, r0
   1c020:	cmp	r3, #0
   1c024:	beq	1c05c <handle_coda_error@@Base+0x294>
   1c028:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c02c:	lsl	r3, r3, #2
   1c030:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c034:	add	r3, r2, r3
   1c038:	ldr	r3, [r3]
   1c03c:	ldr	r2, [pc, #1156]	; 1c4c8 <handle_coda_error@@Base+0x700>
   1c040:	add	r2, pc, r2
   1c044:	mov	r1, r2
   1c048:	mov	r0, r3
   1c04c:	bl	121e8 <strcmp@plt>
   1c050:	mov	r3, r0
   1c054:	cmp	r3, #0
   1c058:	bne	1c114 <handle_coda_error@@Base+0x34c>
   1c05c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c060:	add	r3, r3, #1
   1c064:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c068:	cmp	r2, r3
   1c06c:	ble	1c114 <handle_coda_error@@Base+0x34c>
   1c070:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c074:	add	r3, r3, #1
   1c078:	lsl	r3, r3, #2
   1c07c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c080:	add	r3, r2, r3
   1c084:	ldr	r3, [r3]
   1c088:	ldrb	r3, [r3]
   1c08c:	cmp	r3, #45	; 0x2d
   1c090:	beq	1c114 <handle_coda_error@@Base+0x34c>
   1c094:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c098:	add	r3, r3, #1
   1c09c:	lsl	r3, r3, #2
   1c0a0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c0a4:	add	r3, r2, r3
   1c0a8:	ldr	r3, [r3]
   1c0ac:	mov	r0, r3
   1c0b0:	bl	17c20 <codadump_filter_create@@Base>
   1c0b4:	mov	r2, r0
   1c0b8:	ldr	r3, [pc, #984]	; 1c498 <handle_coda_error@@Base+0x6d0>
   1c0bc:	ldr	r3, [r4, r3]
   1c0c0:	str	r2, [r3, #664]	; 0x298
   1c0c4:	ldr	r3, [pc, #972]	; 1c498 <handle_coda_error@@Base+0x6d0>
   1c0c8:	ldr	r3, [r4, r3]
   1c0cc:	ldr	r3, [r3, #664]	; 0x298
   1c0d0:	cmp	r3, #0
   1c0d4:	bne	1c104 <handle_coda_error@@Base+0x33c>
   1c0d8:	ldr	r3, [pc, #1004]	; 1c4cc <handle_coda_error@@Base+0x704>
   1c0dc:	ldr	r3, [r4, r3]
   1c0e0:	ldr	r3, [r3]
   1c0e4:	mov	r2, #40	; 0x28
   1c0e8:	mov	r1, #1
   1c0ec:	ldr	r0, [pc, #988]	; 1c4d0 <handle_coda_error@@Base+0x708>
   1c0f0:	add	r0, pc, r0
   1c0f4:	bl	12350 <fwrite@plt>
   1c0f8:	bl	1b4d0 <print_yaml_data@@Base+0x1c0>
   1c0fc:	mov	r0, #1
   1c100:	bl	123ec <exit@plt>
   1c104:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c108:	add	r3, r3, #1
   1c10c:	str	r3, [fp, #-24]	; 0xffffffe8
   1c110:	b	1c370 <handle_coda_error@@Base+0x5a8>
   1c114:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c118:	lsl	r3, r3, #2
   1c11c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c120:	add	r3, r2, r3
   1c124:	ldr	r3, [r3]
   1c128:	ldr	r2, [pc, #932]	; 1c4d4 <handle_coda_error@@Base+0x70c>
   1c12c:	add	r2, pc, r2
   1c130:	mov	r1, r2
   1c134:	mov	r0, r3
   1c138:	bl	121e8 <strcmp@plt>
   1c13c:	mov	r3, r0
   1c140:	cmp	r3, #0
   1c144:	beq	1c17c <handle_coda_error@@Base+0x3b4>
   1c148:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c14c:	lsl	r3, r3, #2
   1c150:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c154:	add	r3, r2, r3
   1c158:	ldr	r3, [r3]
   1c15c:	ldr	r2, [pc, #884]	; 1c4d8 <handle_coda_error@@Base+0x710>
   1c160:	add	r2, pc, r2
   1c164:	mov	r1, r2
   1c168:	mov	r0, r3
   1c16c:	bl	121e8 <strcmp@plt>
   1c170:	mov	r3, r0
   1c174:	cmp	r3, #0
   1c178:	bne	1c190 <handle_coda_error@@Base+0x3c8>
   1c17c:	ldr	r3, [pc, #804]	; 1c4a8 <handle_coda_error@@Base+0x6e0>
   1c180:	ldr	r3, [r4, r3]
   1c184:	mov	r2, #1
   1c188:	str	r2, [r3]
   1c18c:	b	1c370 <handle_coda_error@@Base+0x5a8>
   1c190:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c194:	lsl	r3, r3, #2
   1c198:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c19c:	add	r3, r2, r3
   1c1a0:	ldr	r3, [r3]
   1c1a4:	ldr	r2, [pc, #816]	; 1c4dc <handle_coda_error@@Base+0x714>
   1c1a8:	add	r2, pc, r2
   1c1ac:	mov	r1, r2
   1c1b0:	mov	r0, r3
   1c1b4:	bl	121e8 <strcmp@plt>
   1c1b8:	mov	r3, r0
   1c1bc:	cmp	r3, #0
   1c1c0:	beq	1c1f8 <handle_coda_error@@Base+0x430>
   1c1c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c1c8:	lsl	r3, r3, #2
   1c1cc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c1d0:	add	r3, r2, r3
   1c1d4:	ldr	r3, [r3]
   1c1d8:	ldr	r2, [pc, #768]	; 1c4e0 <handle_coda_error@@Base+0x718>
   1c1dc:	add	r2, pc, r2
   1c1e0:	mov	r1, r2
   1c1e4:	mov	r0, r3
   1c1e8:	bl	121e8 <strcmp@plt>
   1c1ec:	mov	r3, r0
   1c1f0:	cmp	r3, #0
   1c1f4:	bne	1c20c <handle_coda_error@@Base+0x444>
   1c1f8:	ldr	r3, [pc, #684]	; 1c4ac <handle_coda_error@@Base+0x6e4>
   1c1fc:	ldr	r3, [r4, r3]
   1c200:	mov	r2, #1
   1c204:	str	r2, [r3]
   1c208:	b	1c370 <handle_coda_error@@Base+0x5a8>
   1c20c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c210:	lsl	r3, r3, #2
   1c214:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c218:	add	r3, r2, r3
   1c21c:	ldr	r3, [r3]
   1c220:	ldr	r2, [pc, #700]	; 1c4e4 <handle_coda_error@@Base+0x71c>
   1c224:	add	r2, pc, r2
   1c228:	mov	r1, r2
   1c22c:	mov	r0, r3
   1c230:	bl	121e8 <strcmp@plt>
   1c234:	mov	r3, r0
   1c238:	cmp	r3, #0
   1c23c:	bne	1c254 <handle_coda_error@@Base+0x48c>
   1c240:	ldr	r3, [pc, #616]	; 1c4b0 <handle_coda_error@@Base+0x6e8>
   1c244:	ldr	r3, [r4, r3]
   1c248:	mov	r2, #1
   1c24c:	str	r2, [r3]
   1c250:	b	1c370 <handle_coda_error@@Base+0x5a8>
   1c254:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c258:	lsl	r3, r3, #2
   1c25c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c260:	add	r3, r2, r3
   1c264:	ldr	r3, [r3]
   1c268:	ldr	r2, [pc, #632]	; 1c4e8 <handle_coda_error@@Base+0x720>
   1c26c:	add	r2, pc, r2
   1c270:	mov	r1, r2
   1c274:	mov	r0, r3
   1c278:	bl	121e8 <strcmp@plt>
   1c27c:	mov	r3, r0
   1c280:	cmp	r3, #0
   1c284:	bne	1c2ac <handle_coda_error@@Base+0x4e4>
   1c288:	ldr	r3, [pc, #528]	; 1c4a0 <handle_coda_error@@Base+0x6d8>
   1c28c:	ldr	r3, [r4, r3]
   1c290:	mov	r2, #1
   1c294:	str	r2, [r3]
   1c298:	ldr	r3, [pc, #516]	; 1c4a4 <handle_coda_error@@Base+0x6dc>
   1c29c:	ldr	r3, [r4, r3]
   1c2a0:	mov	r2, #1
   1c2a4:	str	r2, [r3]
   1c2a8:	b	1c370 <handle_coda_error@@Base+0x5a8>
   1c2ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c2b0:	lsl	r3, r3, #2
   1c2b4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c2b8:	add	r3, r2, r3
   1c2bc:	ldr	r3, [r3]
   1c2c0:	ldr	r2, [pc, #548]	; 1c4ec <handle_coda_error@@Base+0x724>
   1c2c4:	add	r2, pc, r2
   1c2c8:	mov	r1, r2
   1c2cc:	mov	r0, r3
   1c2d0:	bl	121e8 <strcmp@plt>
   1c2d4:	mov	r3, r0
   1c2d8:	cmp	r3, #0
   1c2dc:	bne	1c2ec <handle_coda_error@@Base+0x524>
   1c2e0:	mov	r3, #0
   1c2e4:	str	r3, [fp, #-16]
   1c2e8:	b	1c370 <handle_coda_error@@Base+0x5a8>
   1c2ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c2f0:	sub	r3, r3, #1
   1c2f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c2f8:	cmp	r2, r3
   1c2fc:	bne	1c344 <handle_coda_error@@Base+0x57c>
   1c300:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c304:	lsl	r3, r3, #2
   1c308:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c30c:	add	r3, r2, r3
   1c310:	ldr	r3, [r3]
   1c314:	ldrb	r3, [r3]
   1c318:	cmp	r3, #45	; 0x2d
   1c31c:	beq	1c344 <handle_coda_error@@Base+0x57c>
   1c320:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c324:	lsl	r3, r3, #2
   1c328:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c32c:	add	r3, r2, r3
   1c330:	ldr	r2, [r3]
   1c334:	ldr	r3, [pc, #348]	; 1c498 <handle_coda_error@@Base+0x6d0>
   1c338:	ldr	r3, [r4, r3]
   1c33c:	str	r2, [r3]
   1c340:	b	1c370 <handle_coda_error@@Base+0x5a8>
   1c344:	ldr	r3, [pc, #384]	; 1c4cc <handle_coda_error@@Base+0x704>
   1c348:	ldr	r3, [r4, r3]
   1c34c:	ldr	r3, [r3]
   1c350:	mov	r2, #25
   1c354:	mov	r1, #1
   1c358:	ldr	r0, [pc, #400]	; 1c4f0 <handle_coda_error@@Base+0x728>
   1c35c:	add	r0, pc, r0
   1c360:	bl	12350 <fwrite@plt>
   1c364:	bl	1b4d0 <print_yaml_data@@Base+0x1c0>
   1c368:	mov	r0, #1
   1c36c:	bl	123ec <exit@plt>
   1c370:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c374:	add	r3, r3, #1
   1c378:	str	r3, [fp, #-24]	; 0xffffffe8
   1c37c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c380:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c384:	cmp	r2, r3
   1c388:	blt	1bf04 <handle_coda_error@@Base+0x13c>
   1c38c:	ldr	r3, [pc, #260]	; 1c498 <handle_coda_error@@Base+0x6d0>
   1c390:	ldr	r3, [r4, r3]
   1c394:	ldr	r3, [r3]
   1c398:	cmp	r3, #0
   1c39c:	beq	1c3b8 <handle_coda_error@@Base+0x5f0>
   1c3a0:	ldr	r3, [pc, #240]	; 1c498 <handle_coda_error@@Base+0x6d0>
   1c3a4:	ldr	r3, [r4, r3]
   1c3a8:	ldr	r3, [r3]
   1c3ac:	ldrb	r3, [r3]
   1c3b0:	cmp	r3, #0
   1c3b4:	bne	1c3e4 <handle_coda_error@@Base+0x61c>
   1c3b8:	ldr	r3, [pc, #268]	; 1c4cc <handle_coda_error@@Base+0x704>
   1c3bc:	ldr	r3, [r4, r3]
   1c3c0:	ldr	r3, [r3]
   1c3c4:	mov	r2, #25
   1c3c8:	mov	r1, #1
   1c3cc:	ldr	r0, [pc, #288]	; 1c4f4 <handle_coda_error@@Base+0x72c>
   1c3d0:	add	r0, pc, r0
   1c3d4:	bl	12350 <fwrite@plt>
   1c3d8:	bl	1b4d0 <print_yaml_data@@Base+0x1c0>
   1c3dc:	mov	r0, #1
   1c3e0:	bl	123ec <exit@plt>
   1c3e4:	bl	12458 <coda_init@plt>
   1c3e8:	mov	r3, r0
   1c3ec:	cmp	r3, #0
   1c3f0:	beq	1c438 <handle_coda_error@@Base+0x670>
   1c3f4:	ldr	r3, [pc, #208]	; 1c4cc <handle_coda_error@@Base+0x704>
   1c3f8:	ldr	r3, [r4, r3]
   1c3fc:	ldr	r4, [r3]
   1c400:	bl	125e4 <coda_get_errno@plt>
   1c404:	mov	r3, r0
   1c408:	ldr	r3, [r3]
   1c40c:	mov	r0, r3
   1c410:	bl	1259c <coda_errno_to_string@plt>
   1c414:	mov	r3, r0
   1c418:	mov	r2, r3
   1c41c:	ldr	r3, [pc, #212]	; 1c4f8 <handle_coda_error@@Base+0x730>
   1c420:	add	r3, pc, r3
   1c424:	mov	r1, r3
   1c428:	mov	r0, r4
   1c42c:	bl	12434 <fprintf@plt>
   1c430:	mov	r0, #1
   1c434:	bl	123ec <exit@plt>
   1c438:	ldr	r3, [fp, #-16]
   1c43c:	cmp	r3, #0
   1c440:	moveq	r3, #1
   1c444:	movne	r3, #0
   1c448:	uxtb	r3, r3
   1c44c:	mov	r0, r3
   1c450:	bl	1229c <coda_set_option_bypass_special_types@plt>
   1c454:	mov	r0, #0
   1c458:	bl	121dc <coda_set_option_perform_boundary_checks@plt>
   1c45c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c460:	bl	12464 <coda_set_option_perform_conversions@plt>
   1c464:	bl	193b0 <traverse_info_init@@Base>
   1c468:	bl	15068 <dim_info_init@@Base>
   1c46c:	bl	1a138 <traverse_product@@Base>
   1c470:	bl	150c0 <dim_info_done@@Base>
   1c474:	bl	19418 <traverse_info_done@@Base>
   1c478:	bl	12380 <coda_done@plt>
   1c47c:	nop	{0}
   1c480:	sub	sp, fp, #8
   1c484:	ldr	r4, [sp]
   1c488:	ldr	fp, [sp, #4]
   1c48c:	add	sp, sp, #8
   1c490:	pop	{pc}		; (ldr pc, [sp], #4)
   1c494:	muleq	r1, r4, r1
   1c498:			; <UNDEFINED> instruction: 0x000001b4
   1c49c:	muleq	r0, ip, r1
   1c4a0:			; <UNDEFINED> instruction: 0x000001b0
   1c4a4:	andeq	r0, r0, r0, lsr #3
   1c4a8:	andeq	r0, r0, r4, asr #3
   1c4ac:	andeq	r0, r0, ip, lsr #3
   1c4b0:	andeq	r0, r0, r8, asr #3
   1c4b4:	andeq	r4, r0, r4, asr r4
   1c4b8:	andeq	r4, r0, r4, lsr #8
   1c4bc:	andeq	r4, r0, r8, ror #7
   1c4c0:			; <UNDEFINED> instruction: 0x000043b8
   1c4c4:	muleq	r0, r0, r3
   1c4c8:	andeq	r4, r0, r0, ror #6
   1c4cc:			; <UNDEFINED> instruction: 0x000001b8
   1c4d0:			; <UNDEFINED> instruction: 0x000042bc
   1c4d4:	andeq	r4, r0, ip, lsr #5
   1c4d8:	andeq	r4, r0, ip, ror r2
   1c4dc:	andeq	r4, r0, ip, lsr r2
   1c4e0:	andeq	r4, r0, ip, lsl #4
   1c4e4:	andeq	r4, r0, ip, asr #3
   1c4e8:	muleq	r0, r4, r1
   1c4ec:	andeq	r4, r0, ip, asr #2
   1c4f0:	andeq	r4, r0, r8, asr #1
   1c4f4:	andeq	r4, r0, r4, asr r0
   1c4f8:	andeq	r3, r0, r4, asr #30
   1c4fc:	str	r4, [sp, #-12]!
   1c500:	str	fp, [sp, #4]
   1c504:	str	lr, [sp, #8]
   1c508:	add	fp, sp, #8
   1c50c:	sub	sp, sp, #28
   1c510:	str	r0, [fp, #-32]	; 0xffffffe0
   1c514:	str	r1, [fp, #-36]	; 0xffffffdc
   1c518:	ldr	r4, [pc, #2208]	; 1cdc0 <handle_coda_error@@Base+0xff8>
   1c51c:	add	r4, pc, r4
   1c520:	ldr	r3, [pc, #2204]	; 1cdc4 <handle_coda_error@@Base+0xffc>
   1c524:	ldr	r3, [r4, r3]
   1c528:	mov	r2, #0
   1c52c:	str	r2, [r3]
   1c530:	ldr	r3, [pc, #2188]	; 1cdc4 <handle_coda_error@@Base+0xffc>
   1c534:	ldr	r3, [r4, r3]
   1c538:	mov	r2, #0
   1c53c:	str	r2, [r3, #664]	; 0x298
   1c540:	ldr	r3, [pc, #2176]	; 1cdc8 <handle_coda_error@@Base+0x1000>
   1c544:	ldr	r3, [r4, r3]
   1c548:	mov	r2, #0
   1c54c:	str	r2, [r3]
   1c550:	ldr	r3, [pc, #2164]	; 1cdcc <handle_coda_error@@Base+0x1004>
   1c554:	ldr	r3, [r4, r3]
   1c558:	ldr	r2, [pc, #2160]	; 1cdd0 <handle_coda_error@@Base+0x1008>
   1c55c:	add	r2, pc, r2
   1c560:	str	r2, [r3]
   1c564:	ldr	r3, [pc, #2152]	; 1cdd4 <handle_coda_error@@Base+0x100c>
   1c568:	ldr	r3, [r4, r3]
   1c56c:	ldr	r2, [r3]
   1c570:	ldr	r3, [pc, #2144]	; 1cdd8 <handle_coda_error@@Base+0x1010>
   1c574:	ldr	r3, [r4, r3]
   1c578:	str	r2, [r3]
   1c57c:	ldr	r3, [pc, #2136]	; 1cddc <handle_coda_error@@Base+0x1014>
   1c580:	ldr	r3, [r4, r3]
   1c584:	mov	r2, #1
   1c588:	str	r2, [r3]
   1c58c:	ldr	r3, [pc, #2124]	; 1cde0 <handle_coda_error@@Base+0x1018>
   1c590:	ldr	r3, [r4, r3]
   1c594:	mov	r2, #1
   1c598:	str	r2, [r3]
   1c59c:	mov	r3, #1
   1c5a0:	str	r3, [fp, #-16]
   1c5a4:	mov	r3, #1
   1c5a8:	str	r3, [fp, #-20]	; 0xffffffec
   1c5ac:	ldr	r3, [pc, #2096]	; 1cde4 <handle_coda_error@@Base+0x101c>
   1c5b0:	ldr	r3, [r4, r3]
   1c5b4:	mov	r2, #0
   1c5b8:	str	r2, [r3]
   1c5bc:	ldr	r3, [pc, #2084]	; 1cde8 <handle_coda_error@@Base+0x1020>
   1c5c0:	ldr	r3, [r4, r3]
   1c5c4:	mov	r2, #0
   1c5c8:	str	r2, [r3]
   1c5cc:	ldr	r3, [pc, #2072]	; 1cdec <handle_coda_error@@Base+0x1024>
   1c5d0:	ldr	r3, [r4, r3]
   1c5d4:	mov	r2, #0
   1c5d8:	str	r2, [r3]
   1c5dc:	ldr	r3, [pc, #2060]	; 1cdf0 <handle_coda_error@@Base+0x1028>
   1c5e0:	ldr	r3, [r4, r3]
   1c5e4:	mov	r2, #0
   1c5e8:	str	r2, [r3]
   1c5ec:	mov	r3, #0
   1c5f0:	str	r3, [fp, #-24]	; 0xffffffe8
   1c5f4:	b	1cbf4 <handle_coda_error@@Base+0xe2c>
   1c5f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c5fc:	lsl	r3, r3, #2
   1c600:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c604:	add	r3, r2, r3
   1c608:	ldr	r3, [r3]
   1c60c:	ldr	r2, [pc, #2016]	; 1cdf4 <handle_coda_error@@Base+0x102c>
   1c610:	add	r2, pc, r2
   1c614:	mov	r1, r2
   1c618:	mov	r0, r3
   1c61c:	bl	121e8 <strcmp@plt>
   1c620:	mov	r3, r0
   1c624:	cmp	r3, #0
   1c628:	beq	1c660 <handle_coda_error@@Base+0x898>
   1c62c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c630:	lsl	r3, r3, #2
   1c634:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c638:	add	r3, r2, r3
   1c63c:	ldr	r3, [r3]
   1c640:	ldr	r2, [pc, #1968]	; 1cdf8 <handle_coda_error@@Base+0x1030>
   1c644:	add	r2, pc, r2
   1c648:	mov	r1, r2
   1c64c:	mov	r0, r3
   1c650:	bl	121e8 <strcmp@plt>
   1c654:	mov	r3, r0
   1c658:	cmp	r3, #0
   1c65c:	bne	1c66c <handle_coda_error@@Base+0x8a4>
   1c660:	mov	r3, #0
   1c664:	str	r3, [fp, #-20]	; 0xffffffec
   1c668:	b	1cbe8 <handle_coda_error@@Base+0xe20>
   1c66c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c670:	lsl	r3, r3, #2
   1c674:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c678:	add	r3, r2, r3
   1c67c:	ldr	r3, [r3]
   1c680:	ldr	r2, [pc, #1908]	; 1cdfc <handle_coda_error@@Base+0x1034>
   1c684:	add	r2, pc, r2
   1c688:	mov	r1, r2
   1c68c:	mov	r0, r3
   1c690:	bl	121e8 <strcmp@plt>
   1c694:	mov	r3, r0
   1c698:	cmp	r3, #0
   1c69c:	beq	1c6d4 <handle_coda_error@@Base+0x90c>
   1c6a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c6a4:	lsl	r3, r3, #2
   1c6a8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c6ac:	add	r3, r2, r3
   1c6b0:	ldr	r3, [r3]
   1c6b4:	ldr	r2, [pc, #1860]	; 1ce00 <handle_coda_error@@Base+0x1038>
   1c6b8:	add	r2, pc, r2
   1c6bc:	mov	r1, r2
   1c6c0:	mov	r0, r3
   1c6c4:	bl	121e8 <strcmp@plt>
   1c6c8:	mov	r3, r0
   1c6cc:	cmp	r3, #0
   1c6d0:	bne	1c78c <handle_coda_error@@Base+0x9c4>
   1c6d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c6d8:	add	r3, r3, #1
   1c6dc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c6e0:	cmp	r2, r3
   1c6e4:	ble	1c78c <handle_coda_error@@Base+0x9c4>
   1c6e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c6ec:	add	r3, r3, #1
   1c6f0:	lsl	r3, r3, #2
   1c6f4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c6f8:	add	r3, r2, r3
   1c6fc:	ldr	r3, [r3]
   1c700:	ldrb	r3, [r3]
   1c704:	cmp	r3, #45	; 0x2d
   1c708:	beq	1c78c <handle_coda_error@@Base+0x9c4>
   1c70c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c710:	add	r3, r3, #1
   1c714:	lsl	r3, r3, #2
   1c718:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c71c:	add	r3, r2, r3
   1c720:	ldr	r3, [r3]
   1c724:	mov	r0, r3
   1c728:	bl	17c20 <codadump_filter_create@@Base>
   1c72c:	mov	r2, r0
   1c730:	ldr	r3, [pc, #1676]	; 1cdc4 <handle_coda_error@@Base+0xffc>
   1c734:	ldr	r3, [r4, r3]
   1c738:	str	r2, [r3, #664]	; 0x298
   1c73c:	ldr	r3, [pc, #1664]	; 1cdc4 <handle_coda_error@@Base+0xffc>
   1c740:	ldr	r3, [r4, r3]
   1c744:	ldr	r3, [r3, #664]	; 0x298
   1c748:	cmp	r3, #0
   1c74c:	bne	1c77c <handle_coda_error@@Base+0x9b4>
   1c750:	ldr	r3, [pc, #1708]	; 1ce04 <handle_coda_error@@Base+0x103c>
   1c754:	ldr	r3, [r4, r3]
   1c758:	ldr	r3, [r3]
   1c75c:	mov	r2, #40	; 0x28
   1c760:	mov	r1, #1
   1c764:	ldr	r0, [pc, #1692]	; 1ce08 <handle_coda_error@@Base+0x1040>
   1c768:	add	r0, pc, r0
   1c76c:	bl	12350 <fwrite@plt>
   1c770:	bl	1b4d0 <print_yaml_data@@Base+0x1c0>
   1c774:	mov	r0, #1
   1c778:	bl	123ec <exit@plt>
   1c77c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c780:	add	r3, r3, #1
   1c784:	str	r3, [fp, #-24]	; 0xffffffe8
   1c788:	b	1cbe8 <handle_coda_error@@Base+0xe20>
   1c78c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c790:	lsl	r3, r3, #2
   1c794:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c798:	add	r3, r2, r3
   1c79c:	ldr	r3, [r3]
   1c7a0:	ldr	r2, [pc, #1636]	; 1ce0c <handle_coda_error@@Base+0x1044>
   1c7a4:	add	r2, pc, r2
   1c7a8:	mov	r1, r2
   1c7ac:	mov	r0, r3
   1c7b0:	bl	121e8 <strcmp@plt>
   1c7b4:	mov	r3, r0
   1c7b8:	cmp	r3, #0
   1c7bc:	beq	1c7f4 <handle_coda_error@@Base+0xa2c>
   1c7c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c7c4:	lsl	r3, r3, #2
   1c7c8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c7cc:	add	r3, r2, r3
   1c7d0:	ldr	r3, [r3]
   1c7d4:	ldr	r2, [pc, #1588]	; 1ce10 <handle_coda_error@@Base+0x1048>
   1c7d8:	add	r2, pc, r2
   1c7dc:	mov	r1, r2
   1c7e0:	mov	r0, r3
   1c7e4:	bl	121e8 <strcmp@plt>
   1c7e8:	mov	r3, r0
   1c7ec:	cmp	r3, #0
   1c7f0:	bne	1c808 <handle_coda_error@@Base+0xa40>
   1c7f4:	ldr	r3, [pc, #1512]	; 1cde4 <handle_coda_error@@Base+0x101c>
   1c7f8:	ldr	r3, [r4, r3]
   1c7fc:	mov	r2, #1
   1c800:	str	r2, [r3]
   1c804:	b	1cbe8 <handle_coda_error@@Base+0xe20>
   1c808:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c80c:	lsl	r3, r3, #2
   1c810:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c814:	add	r3, r2, r3
   1c818:	ldr	r3, [r3]
   1c81c:	ldr	r2, [pc, #1520]	; 1ce14 <handle_coda_error@@Base+0x104c>
   1c820:	add	r2, pc, r2
   1c824:	mov	r1, r2
   1c828:	mov	r0, r3
   1c82c:	bl	121e8 <strcmp@plt>
   1c830:	mov	r3, r0
   1c834:	cmp	r3, #0
   1c838:	beq	1c870 <handle_coda_error@@Base+0xaa8>
   1c83c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c840:	lsl	r3, r3, #2
   1c844:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c848:	add	r3, r2, r3
   1c84c:	ldr	r3, [r3]
   1c850:	ldr	r2, [pc, #1472]	; 1ce18 <handle_coda_error@@Base+0x1050>
   1c854:	add	r2, pc, r2
   1c858:	mov	r1, r2
   1c85c:	mov	r0, r3
   1c860:	bl	121e8 <strcmp@plt>
   1c864:	mov	r3, r0
   1c868:	cmp	r3, #0
   1c86c:	bne	1c884 <handle_coda_error@@Base+0xabc>
   1c870:	ldr	r3, [pc, #1392]	; 1cde8 <handle_coda_error@@Base+0x1020>
   1c874:	ldr	r3, [r4, r3]
   1c878:	mov	r2, #1
   1c87c:	str	r2, [r3]
   1c880:	b	1cbe8 <handle_coda_error@@Base+0xe20>
   1c884:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c888:	lsl	r3, r3, #2
   1c88c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c890:	add	r3, r2, r3
   1c894:	ldr	r3, [r3]
   1c898:	ldr	r2, [pc, #1404]	; 1ce1c <handle_coda_error@@Base+0x1054>
   1c89c:	add	r2, pc, r2
   1c8a0:	mov	r1, r2
   1c8a4:	mov	r0, r3
   1c8a8:	bl	121e8 <strcmp@plt>
   1c8ac:	mov	r3, r0
   1c8b0:	cmp	r3, #0
   1c8b4:	beq	1c8ec <handle_coda_error@@Base+0xb24>
   1c8b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c8bc:	lsl	r3, r3, #2
   1c8c0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c8c4:	add	r3, r2, r3
   1c8c8:	ldr	r3, [r3]
   1c8cc:	ldr	r2, [pc, #1356]	; 1ce20 <handle_coda_error@@Base+0x1058>
   1c8d0:	add	r2, pc, r2
   1c8d4:	mov	r1, r2
   1c8d8:	mov	r0, r3
   1c8dc:	bl	121e8 <strcmp@plt>
   1c8e0:	mov	r3, r0
   1c8e4:	cmp	r3, #0
   1c8e8:	bne	1c958 <handle_coda_error@@Base+0xb90>
   1c8ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c8f0:	add	r3, r3, #1
   1c8f4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c8f8:	cmp	r2, r3
   1c8fc:	ble	1c958 <handle_coda_error@@Base+0xb90>
   1c900:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c904:	add	r3, r3, #1
   1c908:	lsl	r3, r3, #2
   1c90c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c910:	add	r3, r2, r3
   1c914:	ldr	r3, [r3]
   1c918:	ldrb	r3, [r3]
   1c91c:	cmp	r3, #45	; 0x2d
   1c920:	beq	1c958 <handle_coda_error@@Base+0xb90>
   1c924:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c928:	add	r3, r3, #1
   1c92c:	lsl	r3, r3, #2
   1c930:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c934:	add	r3, r2, r3
   1c938:	ldr	r2, [r3]
   1c93c:	ldr	r3, [pc, #1156]	; 1cdc8 <handle_coda_error@@Base+0x1000>
   1c940:	ldr	r3, [r4, r3]
   1c944:	str	r2, [r3]
   1c948:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c94c:	add	r3, r3, #1
   1c950:	str	r3, [fp, #-24]	; 0xffffffe8
   1c954:	b	1cbe8 <handle_coda_error@@Base+0xe20>
   1c958:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c95c:	lsl	r3, r3, #2
   1c960:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c964:	add	r3, r2, r3
   1c968:	ldr	r3, [r3]
   1c96c:	ldr	r2, [pc, #1200]	; 1ce24 <handle_coda_error@@Base+0x105c>
   1c970:	add	r2, pc, r2
   1c974:	mov	r1, r2
   1c978:	mov	r0, r3
   1c97c:	bl	121e8 <strcmp@plt>
   1c980:	mov	r3, r0
   1c984:	cmp	r3, #0
   1c988:	beq	1c9c0 <handle_coda_error@@Base+0xbf8>
   1c98c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c990:	lsl	r3, r3, #2
   1c994:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c998:	add	r3, r2, r3
   1c99c:	ldr	r3, [r3]
   1c9a0:	ldr	r2, [pc, #1152]	; 1ce28 <handle_coda_error@@Base+0x1060>
   1c9a4:	add	r2, pc, r2
   1c9a8:	mov	r1, r2
   1c9ac:	mov	r0, r3
   1c9b0:	bl	121e8 <strcmp@plt>
   1c9b4:	mov	r3, r0
   1c9b8:	cmp	r3, #0
   1c9bc:	bne	1c9d4 <handle_coda_error@@Base+0xc0c>
   1c9c0:	ldr	r3, [pc, #1060]	; 1cdec <handle_coda_error@@Base+0x1024>
   1c9c4:	ldr	r3, [r4, r3]
   1c9c8:	mov	r2, #1
   1c9cc:	str	r2, [r3]
   1c9d0:	b	1cbe8 <handle_coda_error@@Base+0xe20>
   1c9d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c9d8:	lsl	r3, r3, #2
   1c9dc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c9e0:	add	r3, r2, r3
   1c9e4:	ldr	r3, [r3]
   1c9e8:	ldr	r2, [pc, #1084]	; 1ce2c <handle_coda_error@@Base+0x1064>
   1c9ec:	add	r2, pc, r2
   1c9f0:	mov	r1, r2
   1c9f4:	mov	r0, r3
   1c9f8:	bl	121e8 <strcmp@plt>
   1c9fc:	mov	r3, r0
   1ca00:	cmp	r3, #0
   1ca04:	beq	1ca3c <handle_coda_error@@Base+0xc74>
   1ca08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ca0c:	lsl	r3, r3, #2
   1ca10:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ca14:	add	r3, r2, r3
   1ca18:	ldr	r3, [r3]
   1ca1c:	ldr	r2, [pc, #1036]	; 1ce30 <handle_coda_error@@Base+0x1068>
   1ca20:	add	r2, pc, r2
   1ca24:	mov	r1, r2
   1ca28:	mov	r0, r3
   1ca2c:	bl	121e8 <strcmp@plt>
   1ca30:	mov	r3, r0
   1ca34:	cmp	r3, #0
   1ca38:	bne	1caa8 <handle_coda_error@@Base+0xce0>
   1ca3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ca40:	add	r3, r3, #1
   1ca44:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ca48:	cmp	r2, r3
   1ca4c:	ble	1caa8 <handle_coda_error@@Base+0xce0>
   1ca50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ca54:	add	r3, r3, #1
   1ca58:	lsl	r3, r3, #2
   1ca5c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ca60:	add	r3, r2, r3
   1ca64:	ldr	r3, [r3]
   1ca68:	ldrb	r3, [r3]
   1ca6c:	cmp	r3, #45	; 0x2d
   1ca70:	beq	1caa8 <handle_coda_error@@Base+0xce0>
   1ca74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ca78:	add	r3, r3, #1
   1ca7c:	lsl	r3, r3, #2
   1ca80:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ca84:	add	r3, r2, r3
   1ca88:	ldr	r2, [r3]
   1ca8c:	ldr	r3, [pc, #824]	; 1cdcc <handle_coda_error@@Base+0x1004>
   1ca90:	ldr	r3, [r4, r3]
   1ca94:	str	r2, [r3]
   1ca98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ca9c:	add	r3, r3, #1
   1caa0:	str	r3, [fp, #-24]	; 0xffffffe8
   1caa4:	b	1cbe8 <handle_coda_error@@Base+0xe20>
   1caa8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1caac:	lsl	r3, r3, #2
   1cab0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1cab4:	add	r3, r2, r3
   1cab8:	ldr	r3, [r3]
   1cabc:	ldr	r2, [pc, #880]	; 1ce34 <handle_coda_error@@Base+0x106c>
   1cac0:	add	r2, pc, r2
   1cac4:	mov	r1, r2
   1cac8:	mov	r0, r3
   1cacc:	bl	121e8 <strcmp@plt>
   1cad0:	mov	r3, r0
   1cad4:	cmp	r3, #0
   1cad8:	beq	1cb10 <handle_coda_error@@Base+0xd48>
   1cadc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cae0:	lsl	r3, r3, #2
   1cae4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1cae8:	add	r3, r2, r3
   1caec:	ldr	r3, [r3]
   1caf0:	ldr	r2, [pc, #832]	; 1ce38 <handle_coda_error@@Base+0x1070>
   1caf4:	add	r2, pc, r2
   1caf8:	mov	r1, r2
   1cafc:	mov	r0, r3
   1cb00:	bl	121e8 <strcmp@plt>
   1cb04:	mov	r3, r0
   1cb08:	cmp	r3, #0
   1cb0c:	bne	1cb24 <handle_coda_error@@Base+0xd5c>
   1cb10:	ldr	r3, [pc, #728]	; 1cdf0 <handle_coda_error@@Base+0x1028>
   1cb14:	ldr	r3, [r4, r3]
   1cb18:	mov	r2, #1
   1cb1c:	str	r2, [r3]
   1cb20:	b	1cbe8 <handle_coda_error@@Base+0xe20>
   1cb24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cb28:	lsl	r3, r3, #2
   1cb2c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1cb30:	add	r3, r2, r3
   1cb34:	ldr	r3, [r3]
   1cb38:	ldr	r2, [pc, #764]	; 1ce3c <handle_coda_error@@Base+0x1074>
   1cb3c:	add	r2, pc, r2
   1cb40:	mov	r1, r2
   1cb44:	mov	r0, r3
   1cb48:	bl	121e8 <strcmp@plt>
   1cb4c:	mov	r3, r0
   1cb50:	cmp	r3, #0
   1cb54:	bne	1cb64 <handle_coda_error@@Base+0xd9c>
   1cb58:	mov	r3, #0
   1cb5c:	str	r3, [fp, #-16]
   1cb60:	b	1cbe8 <handle_coda_error@@Base+0xe20>
   1cb64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cb68:	sub	r3, r3, #1
   1cb6c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1cb70:	cmp	r2, r3
   1cb74:	bne	1cbbc <handle_coda_error@@Base+0xdf4>
   1cb78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cb7c:	lsl	r3, r3, #2
   1cb80:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1cb84:	add	r3, r2, r3
   1cb88:	ldr	r3, [r3]
   1cb8c:	ldrb	r3, [r3]
   1cb90:	cmp	r3, #45	; 0x2d
   1cb94:	beq	1cbbc <handle_coda_error@@Base+0xdf4>
   1cb98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cb9c:	lsl	r3, r3, #2
   1cba0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1cba4:	add	r3, r2, r3
   1cba8:	ldr	r2, [r3]
   1cbac:	ldr	r3, [pc, #528]	; 1cdc4 <handle_coda_error@@Base+0xffc>
   1cbb0:	ldr	r3, [r4, r3]
   1cbb4:	str	r2, [r3]
   1cbb8:	b	1cbe8 <handle_coda_error@@Base+0xe20>
   1cbbc:	ldr	r3, [pc, #576]	; 1ce04 <handle_coda_error@@Base+0x103c>
   1cbc0:	ldr	r3, [r4, r3]
   1cbc4:	ldr	r3, [r3]
   1cbc8:	mov	r2, #25
   1cbcc:	mov	r1, #1
   1cbd0:	ldr	r0, [pc, #616]	; 1ce40 <handle_coda_error@@Base+0x1078>
   1cbd4:	add	r0, pc, r0
   1cbd8:	bl	12350 <fwrite@plt>
   1cbdc:	bl	1b4d0 <print_yaml_data@@Base+0x1c0>
   1cbe0:	mov	r0, #1
   1cbe4:	bl	123ec <exit@plt>
   1cbe8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cbec:	add	r3, r3, #1
   1cbf0:	str	r3, [fp, #-24]	; 0xffffffe8
   1cbf4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1cbf8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cbfc:	cmp	r2, r3
   1cc00:	blt	1c5f8 <handle_coda_error@@Base+0x830>
   1cc04:	ldr	r3, [pc, #440]	; 1cdc4 <handle_coda_error@@Base+0xffc>
   1cc08:	ldr	r3, [r4, r3]
   1cc0c:	ldr	r3, [r3]
   1cc10:	cmp	r3, #0
   1cc14:	beq	1cc30 <handle_coda_error@@Base+0xe68>
   1cc18:	ldr	r3, [pc, #420]	; 1cdc4 <handle_coda_error@@Base+0xffc>
   1cc1c:	ldr	r3, [r4, r3]
   1cc20:	ldr	r3, [r3]
   1cc24:	ldrb	r3, [r3]
   1cc28:	cmp	r3, #0
   1cc2c:	bne	1cc5c <handle_coda_error@@Base+0xe94>
   1cc30:	ldr	r3, [pc, #460]	; 1ce04 <handle_coda_error@@Base+0x103c>
   1cc34:	ldr	r3, [r4, r3]
   1cc38:	ldr	r3, [r3]
   1cc3c:	mov	r2, #25
   1cc40:	mov	r1, #1
   1cc44:	ldr	r0, [pc, #504]	; 1ce44 <handle_coda_error@@Base+0x107c>
   1cc48:	add	r0, pc, r0
   1cc4c:	bl	12350 <fwrite@plt>
   1cc50:	bl	1b4d0 <print_yaml_data@@Base+0x1c0>
   1cc54:	mov	r0, #1
   1cc58:	bl	123ec <exit@plt>
   1cc5c:	bl	12458 <coda_init@plt>
   1cc60:	mov	r3, r0
   1cc64:	cmp	r3, #0
   1cc68:	beq	1ccb0 <handle_coda_error@@Base+0xee8>
   1cc6c:	ldr	r3, [pc, #400]	; 1ce04 <handle_coda_error@@Base+0x103c>
   1cc70:	ldr	r3, [r4, r3]
   1cc74:	ldr	r4, [r3]
   1cc78:	bl	125e4 <coda_get_errno@plt>
   1cc7c:	mov	r3, r0
   1cc80:	ldr	r3, [r3]
   1cc84:	mov	r0, r3
   1cc88:	bl	1259c <coda_errno_to_string@plt>
   1cc8c:	mov	r3, r0
   1cc90:	mov	r2, r3
   1cc94:	ldr	r3, [pc, #428]	; 1ce48 <handle_coda_error@@Base+0x1080>
   1cc98:	add	r3, pc, r3
   1cc9c:	mov	r1, r3
   1cca0:	mov	r0, r4
   1cca4:	bl	12434 <fprintf@plt>
   1cca8:	mov	r0, #1
   1ccac:	bl	123ec <exit@plt>
   1ccb0:	ldr	r3, [fp, #-16]
   1ccb4:	cmp	r3, #0
   1ccb8:	moveq	r3, #1
   1ccbc:	movne	r3, #0
   1ccc0:	uxtb	r3, r3
   1ccc4:	mov	r0, r3
   1ccc8:	bl	1229c <coda_set_option_bypass_special_types@plt>
   1cccc:	mov	r0, #0
   1ccd0:	bl	121dc <coda_set_option_perform_boundary_checks@plt>
   1ccd4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ccd8:	bl	12464 <coda_set_option_perform_conversions@plt>
   1ccdc:	bl	193b0 <traverse_info_init@@Base>
   1cce0:	bl	15068 <dim_info_init@@Base>
   1cce4:	ldr	r3, [pc, #220]	; 1cdc8 <handle_coda_error@@Base+0x1000>
   1cce8:	ldr	r3, [r4, r3]
   1ccec:	ldr	r3, [r3]
   1ccf0:	cmp	r3, #0
   1ccf4:	beq	1cd70 <handle_coda_error@@Base+0xfa8>
   1ccf8:	ldr	r3, [pc, #200]	; 1cdc8 <handle_coda_error@@Base+0x1000>
   1ccfc:	ldr	r3, [r4, r3]
   1cd00:	ldr	r3, [r3]
   1cd04:	ldr	r2, [pc, #320]	; 1ce4c <handle_coda_error@@Base+0x1084>
   1cd08:	add	r2, pc, r2
   1cd0c:	mov	r1, r2
   1cd10:	mov	r0, r3
   1cd14:	bl	12218 <fopen@plt>
   1cd18:	mov	r2, r0
   1cd1c:	ldr	r3, [pc, #180]	; 1cdd8 <handle_coda_error@@Base+0x1010>
   1cd20:	ldr	r3, [r4, r3]
   1cd24:	str	r2, [r3]
   1cd28:	ldr	r3, [pc, #168]	; 1cdd8 <handle_coda_error@@Base+0x1010>
   1cd2c:	ldr	r3, [r4, r3]
   1cd30:	ldr	r3, [r3]
   1cd34:	cmp	r3, #0
   1cd38:	bne	1cd70 <handle_coda_error@@Base+0xfa8>
   1cd3c:	ldr	r3, [pc, #192]	; 1ce04 <handle_coda_error@@Base+0x103c>
   1cd40:	ldr	r3, [r4, r3]
   1cd44:	ldr	r0, [r3]
   1cd48:	ldr	r3, [pc, #120]	; 1cdc8 <handle_coda_error@@Base+0x1000>
   1cd4c:	ldr	r3, [r4, r3]
   1cd50:	ldr	r3, [r3]
   1cd54:	mov	r2, r3
   1cd58:	ldr	r3, [pc, #240]	; 1ce50 <handle_coda_error@@Base+0x1088>
   1cd5c:	add	r3, pc, r3
   1cd60:	mov	r1, r3
   1cd64:	bl	12434 <fprintf@plt>
   1cd68:	mov	r0, #1
   1cd6c:	bl	123ec <exit@plt>
   1cd70:	bl	1a138 <traverse_product@@Base>
   1cd74:	ldr	r3, [pc, #76]	; 1cdc8 <handle_coda_error@@Base+0x1000>
   1cd78:	ldr	r3, [r4, r3]
   1cd7c:	ldr	r3, [r3]
   1cd80:	cmp	r3, #0
   1cd84:	beq	1cd9c <handle_coda_error@@Base+0xfd4>
   1cd88:	ldr	r3, [pc, #72]	; 1cdd8 <handle_coda_error@@Base+0x1010>
   1cd8c:	ldr	r3, [r4, r3]
   1cd90:	ldr	r3, [r3]
   1cd94:	mov	r0, r3
   1cd98:	bl	124dc <fclose@plt>
   1cd9c:	bl	150c0 <dim_info_done@@Base>
   1cda0:	bl	19418 <traverse_info_done@@Base>
   1cda4:	bl	12380 <coda_done@plt>
   1cda8:	nop	{0}
   1cdac:	sub	sp, fp, #8
   1cdb0:	ldr	r4, [sp]
   1cdb4:	ldr	fp, [sp, #4]
   1cdb8:	add	sp, sp, #8
   1cdbc:	pop	{pc}		; (ldr pc, [sp], #4)
   1cdc0:	ldrdeq	r4, [r1], -ip
   1cdc4:			; <UNDEFINED> instruction: 0x000001b4
   1cdc8:	andeq	r0, r0, r4, lsr #3
   1cdcc:	andeq	r0, r0, r0, asr #3
   1cdd0:	andeq	r3, r0, r4, ror #29
   1cdd4:	ldrdeq	r0, [r0], -ip
   1cdd8:			; <UNDEFINED> instruction: 0x000001bc
   1cddc:	muleq	r0, ip, r1
   1cde0:			; <UNDEFINED> instruction: 0x000001b0
   1cde4:	andeq	r0, r0, ip, asr #3
   1cde8:	andeq	r0, r0, r8, ror #3
   1cdec:	andeq	r0, r0, ip, ror #3
   1cdf0:	andeq	r0, r0, r8, lsr #3
   1cdf4:	andeq	r3, r0, r0, ror sp
   1cdf8:	andeq	r3, r0, r0, asr #26
   1cdfc:	andeq	r3, r0, r8, lsl sp
   1ce00:	andeq	r3, r0, r8, ror #25
   1ce04:			; <UNDEFINED> instruction: 0x000001b8
   1ce08:	andeq	r3, r0, r4, asr #24
   1ce0c:	andeq	r3, r0, r0, lsr #25
   1ce10:	andeq	r3, r0, r0, ror ip
   1ce14:	andeq	r3, r0, r0, lsr ip
   1ce18:	andeq	r3, r0, r0, lsl #24
   1ce1c:	andeq	r3, r0, r0, asr #23
   1ce20:	muleq	r0, r0, fp
   1ce24:	strdeq	r3, [r0], -ip
   1ce28:	andeq	r3, r0, ip, asr #21
   1ce2c:	muleq	r0, r4, sl
   1ce30:	andeq	r3, r0, r4, ror #20
   1ce34:	andeq	r3, r0, r8, lsl r9
   1ce38:	andeq	r3, r0, r4, lsr #19
   1ce3c:	ldrdeq	r3, [r0], -r4
   1ce40:	andeq	r3, r0, r0, asr r8
   1ce44:	ldrdeq	r3, [r0], -ip
   1ce48:	andeq	r3, r0, ip, asr #13
   1ce4c:	andeq	r3, r0, r4, lsr #15
   1ce50:	andeq	r3, r0, r4, asr r7
   1ce54:	str	r4, [sp, #-12]!
   1ce58:	str	fp, [sp, #4]
   1ce5c:	str	lr, [sp, #8]
   1ce60:	add	fp, sp, #8
   1ce64:	sub	sp, sp, #28
   1ce68:	str	r0, [fp, #-32]	; 0xffffffe0
   1ce6c:	str	r1, [fp, #-36]	; 0xffffffdc
   1ce70:	ldr	r4, [pc, #1412]	; 1d3fc <handle_coda_error@@Base+0x1634>
   1ce74:	add	r4, pc, r4
   1ce78:	ldr	r3, [pc, #1408]	; 1d400 <handle_coda_error@@Base+0x1638>
   1ce7c:	ldr	r3, [r4, r3]
   1ce80:	mov	r2, #0
   1ce84:	str	r2, [r3]
   1ce88:	ldr	r3, [pc, #1396]	; 1d404 <handle_coda_error@@Base+0x163c>
   1ce8c:	ldr	r3, [r4, r3]
   1ce90:	mov	r2, #0
   1ce94:	str	r2, [r3]
   1ce98:	ldr	r3, [pc, #1384]	; 1d408 <handle_coda_error@@Base+0x1640>
   1ce9c:	ldr	r3, [r4, r3]
   1cea0:	mov	r2, #0
   1cea4:	str	r2, [r3]
   1cea8:	ldr	r3, [pc, #1372]	; 1d40c <handle_coda_error@@Base+0x1644>
   1ceac:	ldr	r3, [r4, r3]
   1ceb0:	ldr	r2, [r3]
   1ceb4:	ldr	r3, [pc, #1364]	; 1d410 <handle_coda_error@@Base+0x1648>
   1ceb8:	ldr	r3, [r4, r3]
   1cebc:	str	r2, [r3]
   1cec0:	mov	r3, #1
   1cec4:	str	r3, [fp, #-16]
   1cec8:	mov	r3, #1
   1cecc:	str	r3, [fp, #-20]	; 0xffffffec
   1ced0:	mov	r3, #0
   1ced4:	str	r3, [fp, #-24]	; 0xffffffe8
   1ced8:	mov	r3, #0
   1cedc:	str	r3, [fp, #-28]	; 0xffffffe4
   1cee0:	b	1d244 <handle_coda_error@@Base+0x147c>
   1cee4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cee8:	lsl	r3, r3, #2
   1ceec:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1cef0:	add	r3, r2, r3
   1cef4:	ldr	r3, [r3]
   1cef8:	ldr	r2, [pc, #1300]	; 1d414 <handle_coda_error@@Base+0x164c>
   1cefc:	add	r2, pc, r2
   1cf00:	mov	r1, r2
   1cf04:	mov	r0, r3
   1cf08:	bl	121e8 <strcmp@plt>
   1cf0c:	mov	r3, r0
   1cf10:	cmp	r3, #0
   1cf14:	beq	1cf4c <handle_coda_error@@Base+0x1184>
   1cf18:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cf1c:	lsl	r3, r3, #2
   1cf20:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1cf24:	add	r3, r2, r3
   1cf28:	ldr	r3, [r3]
   1cf2c:	ldr	r2, [pc, #1252]	; 1d418 <handle_coda_error@@Base+0x1650>
   1cf30:	add	r2, pc, r2
   1cf34:	mov	r1, r2
   1cf38:	mov	r0, r3
   1cf3c:	bl	121e8 <strcmp@plt>
   1cf40:	mov	r3, r0
   1cf44:	cmp	r3, #0
   1cf48:	bne	1cf58 <handle_coda_error@@Base+0x1190>
   1cf4c:	mov	r3, #1
   1cf50:	str	r3, [fp, #-24]	; 0xffffffe8
   1cf54:	b	1d238 <handle_coda_error@@Base+0x1470>
   1cf58:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cf5c:	lsl	r3, r3, #2
   1cf60:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1cf64:	add	r3, r2, r3
   1cf68:	ldr	r3, [r3]
   1cf6c:	ldr	r2, [pc, #1192]	; 1d41c <handle_coda_error@@Base+0x1654>
   1cf70:	add	r2, pc, r2
   1cf74:	mov	r1, r2
   1cf78:	mov	r0, r3
   1cf7c:	bl	121e8 <strcmp@plt>
   1cf80:	mov	r3, r0
   1cf84:	cmp	r3, #0
   1cf88:	beq	1cfc0 <handle_coda_error@@Base+0x11f8>
   1cf8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cf90:	lsl	r3, r3, #2
   1cf94:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1cf98:	add	r3, r2, r3
   1cf9c:	ldr	r3, [r3]
   1cfa0:	ldr	r2, [pc, #1144]	; 1d420 <handle_coda_error@@Base+0x1658>
   1cfa4:	add	r2, pc, r2
   1cfa8:	mov	r1, r2
   1cfac:	mov	r0, r3
   1cfb0:	bl	121e8 <strcmp@plt>
   1cfb4:	mov	r3, r0
   1cfb8:	cmp	r3, #0
   1cfbc:	bne	1cfcc <handle_coda_error@@Base+0x1204>
   1cfc0:	mov	r3, #0
   1cfc4:	str	r3, [fp, #-20]	; 0xffffffec
   1cfc8:	b	1d238 <handle_coda_error@@Base+0x1470>
   1cfcc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cfd0:	lsl	r3, r3, #2
   1cfd4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1cfd8:	add	r3, r2, r3
   1cfdc:	ldr	r3, [r3]
   1cfe0:	ldr	r2, [pc, #1084]	; 1d424 <handle_coda_error@@Base+0x165c>
   1cfe4:	add	r2, pc, r2
   1cfe8:	mov	r1, r2
   1cfec:	mov	r0, r3
   1cff0:	bl	121e8 <strcmp@plt>
   1cff4:	mov	r3, r0
   1cff8:	cmp	r3, #0
   1cffc:	beq	1d034 <handle_coda_error@@Base+0x126c>
   1d000:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d004:	lsl	r3, r3, #2
   1d008:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d00c:	add	r3, r2, r3
   1d010:	ldr	r3, [r3]
   1d014:	ldr	r2, [pc, #1036]	; 1d428 <handle_coda_error@@Base+0x1660>
   1d018:	add	r2, pc, r2
   1d01c:	mov	r1, r2
   1d020:	mov	r0, r3
   1d024:	bl	121e8 <strcmp@plt>
   1d028:	mov	r3, r0
   1d02c:	cmp	r3, #0
   1d030:	bne	1d0a0 <handle_coda_error@@Base+0x12d8>
   1d034:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d038:	add	r3, r3, #1
   1d03c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1d040:	cmp	r2, r3
   1d044:	ble	1d0a0 <handle_coda_error@@Base+0x12d8>
   1d048:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d04c:	add	r3, r3, #1
   1d050:	lsl	r3, r3, #2
   1d054:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d058:	add	r3, r2, r3
   1d05c:	ldr	r3, [r3]
   1d060:	ldrb	r3, [r3]
   1d064:	cmp	r3, #45	; 0x2d
   1d068:	beq	1d0a0 <handle_coda_error@@Base+0x12d8>
   1d06c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d070:	add	r3, r3, #1
   1d074:	lsl	r3, r3, #2
   1d078:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d07c:	add	r3, r2, r3
   1d080:	ldr	r2, [r3]
   1d084:	ldr	r3, [pc, #888]	; 1d404 <handle_coda_error@@Base+0x163c>
   1d088:	ldr	r3, [r4, r3]
   1d08c:	str	r2, [r3]
   1d090:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d094:	add	r3, r3, #1
   1d098:	str	r3, [fp, #-28]	; 0xffffffe4
   1d09c:	b	1d238 <handle_coda_error@@Base+0x1470>
   1d0a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d0a4:	lsl	r3, r3, #2
   1d0a8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d0ac:	add	r3, r2, r3
   1d0b0:	ldr	r3, [r3]
   1d0b4:	ldr	r2, [pc, #880]	; 1d42c <handle_coda_error@@Base+0x1664>
   1d0b8:	add	r2, pc, r2
   1d0bc:	mov	r1, r2
   1d0c0:	mov	r0, r3
   1d0c4:	bl	121e8 <strcmp@plt>
   1d0c8:	mov	r3, r0
   1d0cc:	cmp	r3, #0
   1d0d0:	beq	1d108 <handle_coda_error@@Base+0x1340>
   1d0d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d0d8:	lsl	r3, r3, #2
   1d0dc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d0e0:	add	r3, r2, r3
   1d0e4:	ldr	r3, [r3]
   1d0e8:	ldr	r2, [pc, #832]	; 1d430 <handle_coda_error@@Base+0x1668>
   1d0ec:	add	r2, pc, r2
   1d0f0:	mov	r1, r2
   1d0f4:	mov	r0, r3
   1d0f8:	bl	121e8 <strcmp@plt>
   1d0fc:	mov	r3, r0
   1d100:	cmp	r3, #0
   1d104:	bne	1d174 <handle_coda_error@@Base+0x13ac>
   1d108:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d10c:	add	r3, r3, #1
   1d110:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1d114:	cmp	r2, r3
   1d118:	ble	1d174 <handle_coda_error@@Base+0x13ac>
   1d11c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d120:	add	r3, r3, #1
   1d124:	lsl	r3, r3, #2
   1d128:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d12c:	add	r3, r2, r3
   1d130:	ldr	r3, [r3]
   1d134:	ldrb	r3, [r3]
   1d138:	cmp	r3, #45	; 0x2d
   1d13c:	beq	1d174 <handle_coda_error@@Base+0x13ac>
   1d140:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d144:	add	r3, r3, #1
   1d148:	lsl	r3, r3, #2
   1d14c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d150:	add	r3, r2, r3
   1d154:	ldr	r2, [r3]
   1d158:	ldr	r3, [pc, #680]	; 1d408 <handle_coda_error@@Base+0x1640>
   1d15c:	ldr	r3, [r4, r3]
   1d160:	str	r2, [r3]
   1d164:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d168:	add	r3, r3, #1
   1d16c:	str	r3, [fp, #-28]	; 0xffffffe4
   1d170:	b	1d238 <handle_coda_error@@Base+0x1470>
   1d174:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d178:	lsl	r3, r3, #2
   1d17c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d180:	add	r3, r2, r3
   1d184:	ldr	r3, [r3]
   1d188:	ldr	r2, [pc, #676]	; 1d434 <handle_coda_error@@Base+0x166c>
   1d18c:	add	r2, pc, r2
   1d190:	mov	r1, r2
   1d194:	mov	r0, r3
   1d198:	bl	121e8 <strcmp@plt>
   1d19c:	mov	r3, r0
   1d1a0:	cmp	r3, #0
   1d1a4:	bne	1d1b4 <handle_coda_error@@Base+0x13ec>
   1d1a8:	mov	r3, #0
   1d1ac:	str	r3, [fp, #-16]
   1d1b0:	b	1d238 <handle_coda_error@@Base+0x1470>
   1d1b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d1b8:	sub	r3, r3, #1
   1d1bc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1d1c0:	cmp	r2, r3
   1d1c4:	bne	1d20c <handle_coda_error@@Base+0x1444>
   1d1c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d1cc:	lsl	r3, r3, #2
   1d1d0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d1d4:	add	r3, r2, r3
   1d1d8:	ldr	r3, [r3]
   1d1dc:	ldrb	r3, [r3]
   1d1e0:	cmp	r3, #45	; 0x2d
   1d1e4:	beq	1d20c <handle_coda_error@@Base+0x1444>
   1d1e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d1ec:	lsl	r3, r3, #2
   1d1f0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d1f4:	add	r3, r2, r3
   1d1f8:	ldr	r2, [r3]
   1d1fc:	ldr	r3, [pc, #508]	; 1d400 <handle_coda_error@@Base+0x1638>
   1d200:	ldr	r3, [r4, r3]
   1d204:	str	r2, [r3]
   1d208:	b	1d238 <handle_coda_error@@Base+0x1470>
   1d20c:	ldr	r3, [pc, #548]	; 1d438 <handle_coda_error@@Base+0x1670>
   1d210:	ldr	r3, [r4, r3]
   1d214:	ldr	r3, [r3]
   1d218:	mov	r2, #25
   1d21c:	mov	r1, #1
   1d220:	ldr	r0, [pc, #532]	; 1d43c <handle_coda_error@@Base+0x1674>
   1d224:	add	r0, pc, r0
   1d228:	bl	12350 <fwrite@plt>
   1d22c:	bl	1b4d0 <print_yaml_data@@Base+0x1c0>
   1d230:	mov	r0, #1
   1d234:	bl	123ec <exit@plt>
   1d238:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d23c:	add	r3, r3, #1
   1d240:	str	r3, [fp, #-28]	; 0xffffffe4
   1d244:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1d248:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d24c:	cmp	r2, r3
   1d250:	blt	1cee4 <handle_coda_error@@Base+0x111c>
   1d254:	ldr	r3, [pc, #420]	; 1d400 <handle_coda_error@@Base+0x1638>
   1d258:	ldr	r3, [r4, r3]
   1d25c:	ldr	r3, [r3]
   1d260:	cmp	r3, #0
   1d264:	beq	1d280 <handle_coda_error@@Base+0x14b8>
   1d268:	ldr	r3, [pc, #400]	; 1d400 <handle_coda_error@@Base+0x1638>
   1d26c:	ldr	r3, [r4, r3]
   1d270:	ldr	r3, [r3]
   1d274:	ldrb	r3, [r3]
   1d278:	cmp	r3, #0
   1d27c:	bne	1d2ac <handle_coda_error@@Base+0x14e4>
   1d280:	ldr	r3, [pc, #432]	; 1d438 <handle_coda_error@@Base+0x1670>
   1d284:	ldr	r3, [r4, r3]
   1d288:	ldr	r3, [r3]
   1d28c:	mov	r2, #25
   1d290:	mov	r1, #1
   1d294:	ldr	r0, [pc, #420]	; 1d440 <handle_coda_error@@Base+0x1678>
   1d298:	add	r0, pc, r0
   1d29c:	bl	12350 <fwrite@plt>
   1d2a0:	bl	1b4d0 <print_yaml_data@@Base+0x1c0>
   1d2a4:	mov	r0, #1
   1d2a8:	bl	123ec <exit@plt>
   1d2ac:	bl	12458 <coda_init@plt>
   1d2b0:	mov	r3, r0
   1d2b4:	cmp	r3, #0
   1d2b8:	beq	1d300 <handle_coda_error@@Base+0x1538>
   1d2bc:	ldr	r3, [pc, #372]	; 1d438 <handle_coda_error@@Base+0x1670>
   1d2c0:	ldr	r3, [r4, r3]
   1d2c4:	ldr	r4, [r3]
   1d2c8:	bl	125e4 <coda_get_errno@plt>
   1d2cc:	mov	r3, r0
   1d2d0:	ldr	r3, [r3]
   1d2d4:	mov	r0, r3
   1d2d8:	bl	1259c <coda_errno_to_string@plt>
   1d2dc:	mov	r3, r0
   1d2e0:	mov	r2, r3
   1d2e4:	ldr	r3, [pc, #344]	; 1d444 <handle_coda_error@@Base+0x167c>
   1d2e8:	add	r3, pc, r3
   1d2ec:	mov	r1, r3
   1d2f0:	mov	r0, r4
   1d2f4:	bl	12434 <fprintf@plt>
   1d2f8:	mov	r0, #1
   1d2fc:	bl	123ec <exit@plt>
   1d300:	ldr	r3, [fp, #-16]
   1d304:	cmp	r3, #0
   1d308:	moveq	r3, #1
   1d30c:	movne	r3, #0
   1d310:	uxtb	r3, r3
   1d314:	mov	r0, r3
   1d318:	bl	1229c <coda_set_option_bypass_special_types@plt>
   1d31c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d320:	bl	12464 <coda_set_option_perform_conversions@plt>
   1d324:	ldr	r3, [pc, #216]	; 1d404 <handle_coda_error@@Base+0x163c>
   1d328:	ldr	r3, [r4, r3]
   1d32c:	ldr	r3, [r3]
   1d330:	cmp	r3, #0
   1d334:	beq	1d3b0 <handle_coda_error@@Base+0x15e8>
   1d338:	ldr	r3, [pc, #196]	; 1d404 <handle_coda_error@@Base+0x163c>
   1d33c:	ldr	r3, [r4, r3]
   1d340:	ldr	r3, [r3]
   1d344:	ldr	r2, [pc, #252]	; 1d448 <handle_coda_error@@Base+0x1680>
   1d348:	add	r2, pc, r2
   1d34c:	mov	r1, r2
   1d350:	mov	r0, r3
   1d354:	bl	12218 <fopen@plt>
   1d358:	mov	r2, r0
   1d35c:	ldr	r3, [pc, #172]	; 1d410 <handle_coda_error@@Base+0x1648>
   1d360:	ldr	r3, [r4, r3]
   1d364:	str	r2, [r3]
   1d368:	ldr	r3, [pc, #160]	; 1d410 <handle_coda_error@@Base+0x1648>
   1d36c:	ldr	r3, [r4, r3]
   1d370:	ldr	r3, [r3]
   1d374:	cmp	r3, #0
   1d378:	bne	1d3b0 <handle_coda_error@@Base+0x15e8>
   1d37c:	ldr	r3, [pc, #180]	; 1d438 <handle_coda_error@@Base+0x1670>
   1d380:	ldr	r3, [r4, r3]
   1d384:	ldr	r0, [r3]
   1d388:	ldr	r3, [pc, #116]	; 1d404 <handle_coda_error@@Base+0x163c>
   1d38c:	ldr	r3, [r4, r3]
   1d390:	ldr	r3, [r3]
   1d394:	mov	r2, r3
   1d398:	ldr	r3, [pc, #172]	; 1d44c <handle_coda_error@@Base+0x1684>
   1d39c:	add	r3, pc, r3
   1d3a0:	mov	r1, r3
   1d3a4:	bl	12434 <fprintf@plt>
   1d3a8:	mov	r0, #1
   1d3ac:	bl	123ec <exit@plt>
   1d3b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d3b4:	bl	18c10 <print_json_data@@Base>
   1d3b8:	ldr	r3, [pc, #68]	; 1d404 <handle_coda_error@@Base+0x163c>
   1d3bc:	ldr	r3, [r4, r3]
   1d3c0:	ldr	r3, [r3]
   1d3c4:	cmp	r3, #0
   1d3c8:	beq	1d3e0 <handle_coda_error@@Base+0x1618>
   1d3cc:	ldr	r3, [pc, #60]	; 1d410 <handle_coda_error@@Base+0x1648>
   1d3d0:	ldr	r3, [r4, r3]
   1d3d4:	ldr	r3, [r3]
   1d3d8:	mov	r0, r3
   1d3dc:	bl	124dc <fclose@plt>
   1d3e0:	bl	12380 <coda_done@plt>
   1d3e4:	nop	{0}
   1d3e8:	sub	sp, fp, #8
   1d3ec:	ldr	r4, [sp]
   1d3f0:	ldr	fp, [sp, #4]
   1d3f4:	add	sp, sp, #8
   1d3f8:	pop	{pc}		; (ldr pc, [sp], #4)
   1d3fc:	andeq	r4, r1, r4, lsl #3
   1d400:			; <UNDEFINED> instruction: 0x000001b4
   1d404:	andeq	r0, r0, r4, lsr #3
   1d408:	ldrdeq	r0, [r0], -r8
   1d40c:	ldrdeq	r0, [r0], -ip
   1d410:			; <UNDEFINED> instruction: 0x000001bc
   1d414:	andeq	r3, r0, r0, ror #11
   1d418:			; <UNDEFINED> instruction: 0x000035b0
   1d41c:	andeq	r3, r0, r0, lsl r4
   1d420:	andeq	r3, r0, r0, ror #7
   1d424:	andeq	r3, r0, r8, ror r4
   1d428:	andeq	r3, r0, r8, asr #8
   1d42c:	andeq	r3, r0, r8, lsr r4
   1d430:	andeq	r3, r0, r8, lsl #8
   1d434:	andeq	r3, r0, r4, lsl #5
   1d438:			; <UNDEFINED> instruction: 0x000001b8
   1d43c:	andeq	r3, r0, r0, lsl #4
   1d440:	andeq	r3, r0, ip, lsl #3
   1d444:	andeq	r3, r0, ip, ror r0
   1d448:	andeq	r3, r0, r4, ror #2
   1d44c:	andeq	r3, r0, r4, lsl r1
   1d450:	str	r4, [sp, #-12]!
   1d454:	str	fp, [sp, #4]
   1d458:	str	lr, [sp, #8]
   1d45c:	add	fp, sp, #8
   1d460:	sub	sp, sp, #28
   1d464:	str	r0, [fp, #-32]	; 0xffffffe0
   1d468:	str	r1, [fp, #-36]	; 0xffffffdc
   1d46c:	ldr	r4, [pc, #1412]	; 1d9f8 <handle_coda_error@@Base+0x1c30>
   1d470:	add	r4, pc, r4
   1d474:	ldr	r3, [pc, #1408]	; 1d9fc <handle_coda_error@@Base+0x1c34>
   1d478:	ldr	r3, [r4, r3]
   1d47c:	mov	r2, #0
   1d480:	str	r2, [r3]
   1d484:	ldr	r3, [pc, #1396]	; 1da00 <handle_coda_error@@Base+0x1c38>
   1d488:	ldr	r3, [r4, r3]
   1d48c:	mov	r2, #0
   1d490:	str	r2, [r3]
   1d494:	ldr	r3, [pc, #1384]	; 1da04 <handle_coda_error@@Base+0x1c3c>
   1d498:	ldr	r3, [r4, r3]
   1d49c:	mov	r2, #0
   1d4a0:	str	r2, [r3]
   1d4a4:	ldr	r3, [pc, #1372]	; 1da08 <handle_coda_error@@Base+0x1c40>
   1d4a8:	ldr	r3, [r4, r3]
   1d4ac:	ldr	r2, [r3]
   1d4b0:	ldr	r3, [pc, #1364]	; 1da0c <handle_coda_error@@Base+0x1c44>
   1d4b4:	ldr	r3, [r4, r3]
   1d4b8:	str	r2, [r3]
   1d4bc:	mov	r3, #1
   1d4c0:	str	r3, [fp, #-16]
   1d4c4:	mov	r3, #1
   1d4c8:	str	r3, [fp, #-20]	; 0xffffffec
   1d4cc:	mov	r3, #0
   1d4d0:	str	r3, [fp, #-24]	; 0xffffffe8
   1d4d4:	mov	r3, #0
   1d4d8:	str	r3, [fp, #-28]	; 0xffffffe4
   1d4dc:	b	1d840 <handle_coda_error@@Base+0x1a78>
   1d4e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d4e4:	lsl	r3, r3, #2
   1d4e8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d4ec:	add	r3, r2, r3
   1d4f0:	ldr	r3, [r3]
   1d4f4:	ldr	r2, [pc, #1300]	; 1da10 <handle_coda_error@@Base+0x1c48>
   1d4f8:	add	r2, pc, r2
   1d4fc:	mov	r1, r2
   1d500:	mov	r0, r3
   1d504:	bl	121e8 <strcmp@plt>
   1d508:	mov	r3, r0
   1d50c:	cmp	r3, #0
   1d510:	beq	1d548 <handle_coda_error@@Base+0x1780>
   1d514:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d518:	lsl	r3, r3, #2
   1d51c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d520:	add	r3, r2, r3
   1d524:	ldr	r3, [r3]
   1d528:	ldr	r2, [pc, #1252]	; 1da14 <handle_coda_error@@Base+0x1c4c>
   1d52c:	add	r2, pc, r2
   1d530:	mov	r1, r2
   1d534:	mov	r0, r3
   1d538:	bl	121e8 <strcmp@plt>
   1d53c:	mov	r3, r0
   1d540:	cmp	r3, #0
   1d544:	bne	1d554 <handle_coda_error@@Base+0x178c>
   1d548:	mov	r3, #1
   1d54c:	str	r3, [fp, #-24]	; 0xffffffe8
   1d550:	b	1d834 <handle_coda_error@@Base+0x1a6c>
   1d554:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d558:	lsl	r3, r3, #2
   1d55c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d560:	add	r3, r2, r3
   1d564:	ldr	r3, [r3]
   1d568:	ldr	r2, [pc, #1192]	; 1da18 <handle_coda_error@@Base+0x1c50>
   1d56c:	add	r2, pc, r2
   1d570:	mov	r1, r2
   1d574:	mov	r0, r3
   1d578:	bl	121e8 <strcmp@plt>
   1d57c:	mov	r3, r0
   1d580:	cmp	r3, #0
   1d584:	beq	1d5bc <handle_coda_error@@Base+0x17f4>
   1d588:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d58c:	lsl	r3, r3, #2
   1d590:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d594:	add	r3, r2, r3
   1d598:	ldr	r3, [r3]
   1d59c:	ldr	r2, [pc, #1144]	; 1da1c <handle_coda_error@@Base+0x1c54>
   1d5a0:	add	r2, pc, r2
   1d5a4:	mov	r1, r2
   1d5a8:	mov	r0, r3
   1d5ac:	bl	121e8 <strcmp@plt>
   1d5b0:	mov	r3, r0
   1d5b4:	cmp	r3, #0
   1d5b8:	bne	1d5c8 <handle_coda_error@@Base+0x1800>
   1d5bc:	mov	r3, #0
   1d5c0:	str	r3, [fp, #-20]	; 0xffffffec
   1d5c4:	b	1d834 <handle_coda_error@@Base+0x1a6c>
   1d5c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d5cc:	lsl	r3, r3, #2
   1d5d0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d5d4:	add	r3, r2, r3
   1d5d8:	ldr	r3, [r3]
   1d5dc:	ldr	r2, [pc, #1084]	; 1da20 <handle_coda_error@@Base+0x1c58>
   1d5e0:	add	r2, pc, r2
   1d5e4:	mov	r1, r2
   1d5e8:	mov	r0, r3
   1d5ec:	bl	121e8 <strcmp@plt>
   1d5f0:	mov	r3, r0
   1d5f4:	cmp	r3, #0
   1d5f8:	beq	1d630 <handle_coda_error@@Base+0x1868>
   1d5fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d600:	lsl	r3, r3, #2
   1d604:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d608:	add	r3, r2, r3
   1d60c:	ldr	r3, [r3]
   1d610:	ldr	r2, [pc, #1036]	; 1da24 <handle_coda_error@@Base+0x1c5c>
   1d614:	add	r2, pc, r2
   1d618:	mov	r1, r2
   1d61c:	mov	r0, r3
   1d620:	bl	121e8 <strcmp@plt>
   1d624:	mov	r3, r0
   1d628:	cmp	r3, #0
   1d62c:	bne	1d69c <handle_coda_error@@Base+0x18d4>
   1d630:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d634:	add	r3, r3, #1
   1d638:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1d63c:	cmp	r2, r3
   1d640:	ble	1d69c <handle_coda_error@@Base+0x18d4>
   1d644:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d648:	add	r3, r3, #1
   1d64c:	lsl	r3, r3, #2
   1d650:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d654:	add	r3, r2, r3
   1d658:	ldr	r3, [r3]
   1d65c:	ldrb	r3, [r3]
   1d660:	cmp	r3, #45	; 0x2d
   1d664:	beq	1d69c <handle_coda_error@@Base+0x18d4>
   1d668:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d66c:	add	r3, r3, #1
   1d670:	lsl	r3, r3, #2
   1d674:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d678:	add	r3, r2, r3
   1d67c:	ldr	r2, [r3]
   1d680:	ldr	r3, [pc, #888]	; 1da00 <handle_coda_error@@Base+0x1c38>
   1d684:	ldr	r3, [r4, r3]
   1d688:	str	r2, [r3]
   1d68c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d690:	add	r3, r3, #1
   1d694:	str	r3, [fp, #-28]	; 0xffffffe4
   1d698:	b	1d834 <handle_coda_error@@Base+0x1a6c>
   1d69c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d6a0:	lsl	r3, r3, #2
   1d6a4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d6a8:	add	r3, r2, r3
   1d6ac:	ldr	r3, [r3]
   1d6b0:	ldr	r2, [pc, #880]	; 1da28 <handle_coda_error@@Base+0x1c60>
   1d6b4:	add	r2, pc, r2
   1d6b8:	mov	r1, r2
   1d6bc:	mov	r0, r3
   1d6c0:	bl	121e8 <strcmp@plt>
   1d6c4:	mov	r3, r0
   1d6c8:	cmp	r3, #0
   1d6cc:	beq	1d704 <handle_coda_error@@Base+0x193c>
   1d6d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d6d4:	lsl	r3, r3, #2
   1d6d8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d6dc:	add	r3, r2, r3
   1d6e0:	ldr	r3, [r3]
   1d6e4:	ldr	r2, [pc, #832]	; 1da2c <handle_coda_error@@Base+0x1c64>
   1d6e8:	add	r2, pc, r2
   1d6ec:	mov	r1, r2
   1d6f0:	mov	r0, r3
   1d6f4:	bl	121e8 <strcmp@plt>
   1d6f8:	mov	r3, r0
   1d6fc:	cmp	r3, #0
   1d700:	bne	1d770 <handle_coda_error@@Base+0x19a8>
   1d704:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d708:	add	r3, r3, #1
   1d70c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1d710:	cmp	r2, r3
   1d714:	ble	1d770 <handle_coda_error@@Base+0x19a8>
   1d718:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d71c:	add	r3, r3, #1
   1d720:	lsl	r3, r3, #2
   1d724:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d728:	add	r3, r2, r3
   1d72c:	ldr	r3, [r3]
   1d730:	ldrb	r3, [r3]
   1d734:	cmp	r3, #45	; 0x2d
   1d738:	beq	1d770 <handle_coda_error@@Base+0x19a8>
   1d73c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d740:	add	r3, r3, #1
   1d744:	lsl	r3, r3, #2
   1d748:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d74c:	add	r3, r2, r3
   1d750:	ldr	r2, [r3]
   1d754:	ldr	r3, [pc, #680]	; 1da04 <handle_coda_error@@Base+0x1c3c>
   1d758:	ldr	r3, [r4, r3]
   1d75c:	str	r2, [r3]
   1d760:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d764:	add	r3, r3, #1
   1d768:	str	r3, [fp, #-28]	; 0xffffffe4
   1d76c:	b	1d834 <handle_coda_error@@Base+0x1a6c>
   1d770:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d774:	lsl	r3, r3, #2
   1d778:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d77c:	add	r3, r2, r3
   1d780:	ldr	r3, [r3]
   1d784:	ldr	r2, [pc, #676]	; 1da30 <handle_coda_error@@Base+0x1c68>
   1d788:	add	r2, pc, r2
   1d78c:	mov	r1, r2
   1d790:	mov	r0, r3
   1d794:	bl	121e8 <strcmp@plt>
   1d798:	mov	r3, r0
   1d79c:	cmp	r3, #0
   1d7a0:	bne	1d7b0 <handle_coda_error@@Base+0x19e8>
   1d7a4:	mov	r3, #0
   1d7a8:	str	r3, [fp, #-16]
   1d7ac:	b	1d834 <handle_coda_error@@Base+0x1a6c>
   1d7b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d7b4:	sub	r3, r3, #1
   1d7b8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1d7bc:	cmp	r2, r3
   1d7c0:	bne	1d808 <handle_coda_error@@Base+0x1a40>
   1d7c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d7c8:	lsl	r3, r3, #2
   1d7cc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d7d0:	add	r3, r2, r3
   1d7d4:	ldr	r3, [r3]
   1d7d8:	ldrb	r3, [r3]
   1d7dc:	cmp	r3, #45	; 0x2d
   1d7e0:	beq	1d808 <handle_coda_error@@Base+0x1a40>
   1d7e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d7e8:	lsl	r3, r3, #2
   1d7ec:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d7f0:	add	r3, r2, r3
   1d7f4:	ldr	r2, [r3]
   1d7f8:	ldr	r3, [pc, #508]	; 1d9fc <handle_coda_error@@Base+0x1c34>
   1d7fc:	ldr	r3, [r4, r3]
   1d800:	str	r2, [r3]
   1d804:	b	1d834 <handle_coda_error@@Base+0x1a6c>
   1d808:	ldr	r3, [pc, #548]	; 1da34 <handle_coda_error@@Base+0x1c6c>
   1d80c:	ldr	r3, [r4, r3]
   1d810:	ldr	r3, [r3]
   1d814:	mov	r2, #25
   1d818:	mov	r1, #1
   1d81c:	ldr	r0, [pc, #532]	; 1da38 <handle_coda_error@@Base+0x1c70>
   1d820:	add	r0, pc, r0
   1d824:	bl	12350 <fwrite@plt>
   1d828:	bl	1b4d0 <print_yaml_data@@Base+0x1c0>
   1d82c:	mov	r0, #1
   1d830:	bl	123ec <exit@plt>
   1d834:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d838:	add	r3, r3, #1
   1d83c:	str	r3, [fp, #-28]	; 0xffffffe4
   1d840:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1d844:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d848:	cmp	r2, r3
   1d84c:	blt	1d4e0 <handle_coda_error@@Base+0x1718>
   1d850:	ldr	r3, [pc, #420]	; 1d9fc <handle_coda_error@@Base+0x1c34>
   1d854:	ldr	r3, [r4, r3]
   1d858:	ldr	r3, [r3]
   1d85c:	cmp	r3, #0
   1d860:	beq	1d87c <handle_coda_error@@Base+0x1ab4>
   1d864:	ldr	r3, [pc, #400]	; 1d9fc <handle_coda_error@@Base+0x1c34>
   1d868:	ldr	r3, [r4, r3]
   1d86c:	ldr	r3, [r3]
   1d870:	ldrb	r3, [r3]
   1d874:	cmp	r3, #0
   1d878:	bne	1d8a8 <handle_coda_error@@Base+0x1ae0>
   1d87c:	ldr	r3, [pc, #432]	; 1da34 <handle_coda_error@@Base+0x1c6c>
   1d880:	ldr	r3, [r4, r3]
   1d884:	ldr	r3, [r3]
   1d888:	mov	r2, #25
   1d88c:	mov	r1, #1
   1d890:	ldr	r0, [pc, #420]	; 1da3c <handle_coda_error@@Base+0x1c74>
   1d894:	add	r0, pc, r0
   1d898:	bl	12350 <fwrite@plt>
   1d89c:	bl	1b4d0 <print_yaml_data@@Base+0x1c0>
   1d8a0:	mov	r0, #1
   1d8a4:	bl	123ec <exit@plt>
   1d8a8:	bl	12458 <coda_init@plt>
   1d8ac:	mov	r3, r0
   1d8b0:	cmp	r3, #0
   1d8b4:	beq	1d8fc <handle_coda_error@@Base+0x1b34>
   1d8b8:	ldr	r3, [pc, #372]	; 1da34 <handle_coda_error@@Base+0x1c6c>
   1d8bc:	ldr	r3, [r4, r3]
   1d8c0:	ldr	r4, [r3]
   1d8c4:	bl	125e4 <coda_get_errno@plt>
   1d8c8:	mov	r3, r0
   1d8cc:	ldr	r3, [r3]
   1d8d0:	mov	r0, r3
   1d8d4:	bl	1259c <coda_errno_to_string@plt>
   1d8d8:	mov	r3, r0
   1d8dc:	mov	r2, r3
   1d8e0:	ldr	r3, [pc, #344]	; 1da40 <handle_coda_error@@Base+0x1c78>
   1d8e4:	add	r3, pc, r3
   1d8e8:	mov	r1, r3
   1d8ec:	mov	r0, r4
   1d8f0:	bl	12434 <fprintf@plt>
   1d8f4:	mov	r0, #1
   1d8f8:	bl	123ec <exit@plt>
   1d8fc:	ldr	r3, [fp, #-16]
   1d900:	cmp	r3, #0
   1d904:	moveq	r3, #1
   1d908:	movne	r3, #0
   1d90c:	uxtb	r3, r3
   1d910:	mov	r0, r3
   1d914:	bl	1229c <coda_set_option_bypass_special_types@plt>
   1d918:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d91c:	bl	12464 <coda_set_option_perform_conversions@plt>
   1d920:	ldr	r3, [pc, #216]	; 1da00 <handle_coda_error@@Base+0x1c38>
   1d924:	ldr	r3, [r4, r3]
   1d928:	ldr	r3, [r3]
   1d92c:	cmp	r3, #0
   1d930:	beq	1d9ac <handle_coda_error@@Base+0x1be4>
   1d934:	ldr	r3, [pc, #196]	; 1da00 <handle_coda_error@@Base+0x1c38>
   1d938:	ldr	r3, [r4, r3]
   1d93c:	ldr	r3, [r3]
   1d940:	ldr	r2, [pc, #252]	; 1da44 <handle_coda_error@@Base+0x1c7c>
   1d944:	add	r2, pc, r2
   1d948:	mov	r1, r2
   1d94c:	mov	r0, r3
   1d950:	bl	12218 <fopen@plt>
   1d954:	mov	r2, r0
   1d958:	ldr	r3, [pc, #172]	; 1da0c <handle_coda_error@@Base+0x1c44>
   1d95c:	ldr	r3, [r4, r3]
   1d960:	str	r2, [r3]
   1d964:	ldr	r3, [pc, #160]	; 1da0c <handle_coda_error@@Base+0x1c44>
   1d968:	ldr	r3, [r4, r3]
   1d96c:	ldr	r3, [r3]
   1d970:	cmp	r3, #0
   1d974:	bne	1d9ac <handle_coda_error@@Base+0x1be4>
   1d978:	ldr	r3, [pc, #180]	; 1da34 <handle_coda_error@@Base+0x1c6c>
   1d97c:	ldr	r3, [r4, r3]
   1d980:	ldr	r0, [r3]
   1d984:	ldr	r3, [pc, #116]	; 1da00 <handle_coda_error@@Base+0x1c38>
   1d988:	ldr	r3, [r4, r3]
   1d98c:	ldr	r3, [r3]
   1d990:	mov	r2, r3
   1d994:	ldr	r3, [pc, #172]	; 1da48 <handle_coda_error@@Base+0x1c80>
   1d998:	add	r3, pc, r3
   1d99c:	mov	r1, r3
   1d9a0:	bl	12434 <fprintf@plt>
   1d9a4:	mov	r0, #1
   1d9a8:	bl	123ec <exit@plt>
   1d9ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d9b0:	bl	1b310 <print_yaml_data@@Base>
   1d9b4:	ldr	r3, [pc, #68]	; 1da00 <handle_coda_error@@Base+0x1c38>
   1d9b8:	ldr	r3, [r4, r3]
   1d9bc:	ldr	r3, [r3]
   1d9c0:	cmp	r3, #0
   1d9c4:	beq	1d9dc <handle_coda_error@@Base+0x1c14>
   1d9c8:	ldr	r3, [pc, #60]	; 1da0c <handle_coda_error@@Base+0x1c44>
   1d9cc:	ldr	r3, [r4, r3]
   1d9d0:	ldr	r3, [r3]
   1d9d4:	mov	r0, r3
   1d9d8:	bl	124dc <fclose@plt>
   1d9dc:	bl	12380 <coda_done@plt>
   1d9e0:	nop	{0}
   1d9e4:	sub	sp, fp, #8
   1d9e8:	ldr	r4, [sp]
   1d9ec:	ldr	fp, [sp, #4]
   1d9f0:	add	sp, sp, #8
   1d9f4:	pop	{pc}		; (ldr pc, [sp], #4)
   1d9f8:	andeq	r3, r1, r8, lsl #23
   1d9fc:			; <UNDEFINED> instruction: 0x000001b4
   1da00:	andeq	r0, r0, r4, lsr #3
   1da04:	ldrdeq	r0, [r0], -r8
   1da08:	ldrdeq	r0, [r0], -ip
   1da0c:			; <UNDEFINED> instruction: 0x000001bc
   1da10:	andeq	r2, r0, r4, ror #31
   1da14:			; <UNDEFINED> instruction: 0x00002fb4
   1da18:	andeq	r2, r0, r4, lsl lr
   1da1c:	andeq	r2, r0, r4, ror #27
   1da20:	andeq	r2, r0, ip, ror lr
   1da24:	andeq	r2, r0, ip, asr #28
   1da28:	andeq	r2, r0, ip, lsr lr
   1da2c:	andeq	r2, r0, ip, lsl #28
   1da30:	andeq	r2, r0, r8, lsl #25
   1da34:			; <UNDEFINED> instruction: 0x000001b8
   1da38:	andeq	r2, r0, r4, lsl #24
   1da3c:	muleq	r0, r0, fp
   1da40:	andeq	r2, r0, r0, lsl #21
   1da44:	andeq	r2, r0, r8, ror #22
   1da48:	andeq	r2, r0, r8, lsl fp
   1da4c:	str	r4, [sp, #-12]!
   1da50:	str	fp, [sp, #4]
   1da54:	str	lr, [sp, #8]
   1da58:	add	fp, sp, #8
   1da5c:	sub	sp, sp, #36	; 0x24
   1da60:	str	r0, [fp, #-40]	; 0xffffffd8
   1da64:	str	r1, [fp, #-44]	; 0xffffffd4
   1da68:	ldr	r4, [pc, #1688]	; 1e108 <handle_coda_error@@Base+0x2340>
   1da6c:	add	r4, pc, r4
   1da70:	mov	r3, #0
   1da74:	str	r3, [fp, #-16]
   1da78:	mov	r3, #0
   1da7c:	str	r3, [fp, #-20]	; 0xffffffec
   1da80:	mov	r3, #0
   1da84:	str	r3, [fp, #-24]	; 0xffffffe8
   1da88:	ldr	r3, [pc, #1660]	; 1e10c <handle_coda_error@@Base+0x2344>
   1da8c:	ldr	r3, [r4, r3]
   1da90:	mov	r2, #0
   1da94:	str	r2, [r3]
   1da98:	ldr	r3, [pc, #1648]	; 1e110 <handle_coda_error@@Base+0x2348>
   1da9c:	ldr	r3, [r4, r3]
   1daa0:	mov	r2, #0
   1daa4:	str	r2, [r3]
   1daa8:	ldr	r3, [pc, #1636]	; 1e114 <handle_coda_error@@Base+0x234c>
   1daac:	ldr	r3, [r4, r3]
   1dab0:	mov	r2, #0
   1dab4:	str	r2, [r3]
   1dab8:	ldr	r3, [pc, #1624]	; 1e118 <handle_coda_error@@Base+0x2350>
   1dabc:	ldr	r3, [r4, r3]
   1dac0:	ldr	r2, [r3]
   1dac4:	ldr	r3, [pc, #1616]	; 1e11c <handle_coda_error@@Base+0x2354>
   1dac8:	ldr	r3, [r4, r3]
   1dacc:	str	r2, [r3]
   1dad0:	mov	r3, #1
   1dad4:	str	r3, [fp, #-28]	; 0xffffffe4
   1dad8:	mov	r3, #0
   1dadc:	str	r3, [fp, #-32]	; 0xffffffe0
   1dae0:	b	1df5c <handle_coda_error@@Base+0x2194>
   1dae4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dae8:	lsl	r3, r3, #2
   1daec:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1daf0:	add	r3, r2, r3
   1daf4:	ldr	r3, [r3]
   1daf8:	ldr	r2, [pc, #1568]	; 1e120 <handle_coda_error@@Base+0x2358>
   1dafc:	add	r2, pc, r2
   1db00:	mov	r1, r2
   1db04:	mov	r0, r3
   1db08:	bl	121e8 <strcmp@plt>
   1db0c:	mov	r3, r0
   1db10:	cmp	r3, #0
   1db14:	beq	1db4c <handle_coda_error@@Base+0x1d84>
   1db18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1db1c:	lsl	r3, r3, #2
   1db20:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1db24:	add	r3, r2, r3
   1db28:	ldr	r3, [r3]
   1db2c:	ldr	r2, [pc, #1520]	; 1e124 <handle_coda_error@@Base+0x235c>
   1db30:	add	r2, pc, r2
   1db34:	mov	r1, r2
   1db38:	mov	r0, r3
   1db3c:	bl	121e8 <strcmp@plt>
   1db40:	mov	r3, r0
   1db44:	cmp	r3, #0
   1db48:	bne	1db58 <handle_coda_error@@Base+0x1d90>
   1db4c:	mov	r3, #0
   1db50:	str	r3, [fp, #-28]	; 0xffffffe4
   1db54:	b	1df50 <handle_coda_error@@Base+0x2188>
   1db58:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1db5c:	lsl	r3, r3, #2
   1db60:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1db64:	add	r3, r2, r3
   1db68:	ldr	r3, [r3]
   1db6c:	ldr	r2, [pc, #1460]	; 1e128 <handle_coda_error@@Base+0x2360>
   1db70:	add	r2, pc, r2
   1db74:	mov	r1, r2
   1db78:	mov	r0, r3
   1db7c:	bl	121e8 <strcmp@plt>
   1db80:	mov	r3, r0
   1db84:	cmp	r3, #0
   1db88:	beq	1dbc0 <handle_coda_error@@Base+0x1df8>
   1db8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1db90:	lsl	r3, r3, #2
   1db94:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1db98:	add	r3, r2, r3
   1db9c:	ldr	r3, [r3]
   1dba0:	ldr	r2, [pc, #1412]	; 1e12c <handle_coda_error@@Base+0x2364>
   1dba4:	add	r2, pc, r2
   1dba8:	mov	r1, r2
   1dbac:	mov	r0, r3
   1dbb0:	bl	121e8 <strcmp@plt>
   1dbb4:	mov	r3, r0
   1dbb8:	cmp	r3, #0
   1dbbc:	bne	1dc2c <handle_coda_error@@Base+0x1e64>
   1dbc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dbc4:	add	r3, r3, #1
   1dbc8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1dbcc:	cmp	r2, r3
   1dbd0:	ble	1dc2c <handle_coda_error@@Base+0x1e64>
   1dbd4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dbd8:	add	r3, r3, #1
   1dbdc:	lsl	r3, r3, #2
   1dbe0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1dbe4:	add	r3, r2, r3
   1dbe8:	ldr	r3, [r3]
   1dbec:	ldrb	r3, [r3]
   1dbf0:	cmp	r3, #45	; 0x2d
   1dbf4:	beq	1dc2c <handle_coda_error@@Base+0x1e64>
   1dbf8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dbfc:	add	r3, r3, #1
   1dc00:	lsl	r3, r3, #2
   1dc04:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1dc08:	add	r3, r2, r3
   1dc0c:	ldr	r2, [r3]
   1dc10:	ldr	r3, [pc, #1272]	; 1e110 <handle_coda_error@@Base+0x2348>
   1dc14:	ldr	r3, [r4, r3]
   1dc18:	str	r2, [r3]
   1dc1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dc20:	add	r3, r3, #1
   1dc24:	str	r3, [fp, #-32]	; 0xffffffe0
   1dc28:	b	1df50 <handle_coda_error@@Base+0x2188>
   1dc2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dc30:	lsl	r3, r3, #2
   1dc34:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1dc38:	add	r3, r2, r3
   1dc3c:	ldr	r3, [r3]
   1dc40:	ldr	r2, [pc, #1256]	; 1e130 <handle_coda_error@@Base+0x2368>
   1dc44:	add	r2, pc, r2
   1dc48:	mov	r1, r2
   1dc4c:	mov	r0, r3
   1dc50:	bl	121e8 <strcmp@plt>
   1dc54:	mov	r3, r0
   1dc58:	cmp	r3, #0
   1dc5c:	beq	1dc94 <handle_coda_error@@Base+0x1ecc>
   1dc60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dc64:	lsl	r3, r3, #2
   1dc68:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1dc6c:	add	r3, r2, r3
   1dc70:	ldr	r3, [r3]
   1dc74:	ldr	r2, [pc, #1208]	; 1e134 <handle_coda_error@@Base+0x236c>
   1dc78:	add	r2, pc, r2
   1dc7c:	mov	r1, r2
   1dc80:	mov	r0, r3
   1dc84:	bl	121e8 <strcmp@plt>
   1dc88:	mov	r3, r0
   1dc8c:	cmp	r3, #0
   1dc90:	bne	1dd00 <handle_coda_error@@Base+0x1f38>
   1dc94:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dc98:	add	r3, r3, #1
   1dc9c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1dca0:	cmp	r2, r3
   1dca4:	ble	1dd00 <handle_coda_error@@Base+0x1f38>
   1dca8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dcac:	add	r3, r3, #1
   1dcb0:	lsl	r3, r3, #2
   1dcb4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1dcb8:	add	r3, r2, r3
   1dcbc:	ldr	r3, [r3]
   1dcc0:	ldrb	r3, [r3]
   1dcc4:	cmp	r3, #45	; 0x2d
   1dcc8:	beq	1dd00 <handle_coda_error@@Base+0x1f38>
   1dccc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dcd0:	add	r3, r3, #1
   1dcd4:	lsl	r3, r3, #2
   1dcd8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1dcdc:	add	r3, r2, r3
   1dce0:	ldr	r2, [r3]
   1dce4:	ldr	r3, [pc, #1064]	; 1e114 <handle_coda_error@@Base+0x234c>
   1dce8:	ldr	r3, [r4, r3]
   1dcec:	str	r2, [r3]
   1dcf0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dcf4:	add	r3, r3, #1
   1dcf8:	str	r3, [fp, #-32]	; 0xffffffe0
   1dcfc:	b	1df50 <handle_coda_error@@Base+0x2188>
   1dd00:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dd04:	lsl	r3, r3, #2
   1dd08:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1dd0c:	add	r3, r2, r3
   1dd10:	ldr	r3, [r3]
   1dd14:	ldr	r2, [pc, #1052]	; 1e138 <handle_coda_error@@Base+0x2370>
   1dd18:	add	r2, pc, r2
   1dd1c:	mov	r1, r2
   1dd20:	mov	r0, r3
   1dd24:	bl	121e8 <strcmp@plt>
   1dd28:	mov	r3, r0
   1dd2c:	cmp	r3, #0
   1dd30:	bne	1ddac <handle_coda_error@@Base+0x1fe4>
   1dd34:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dd38:	add	r3, r3, #1
   1dd3c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1dd40:	cmp	r2, r3
   1dd44:	ble	1ddac <handle_coda_error@@Base+0x1fe4>
   1dd48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dd4c:	add	r3, r3, #1
   1dd50:	lsl	r3, r3, #2
   1dd54:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1dd58:	add	r3, r2, r3
   1dd5c:	ldr	r3, [r3]
   1dd60:	ldrb	r3, [r3]
   1dd64:	cmp	r3, #45	; 0x2d
   1dd68:	beq	1ddac <handle_coda_error@@Base+0x1fe4>
   1dd6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dd70:	add	r3, r3, #1
   1dd74:	lsl	r3, r3, #2
   1dd78:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1dd7c:	add	r3, r2, r3
   1dd80:	ldr	r3, [r3]
   1dd84:	mov	r0, r3
   1dd88:	bl	12590 <atoi@plt>
   1dd8c:	mov	r2, r0
   1dd90:	ldr	r3, [pc, #932]	; 1e13c <handle_coda_error@@Base+0x2374>
   1dd94:	ldr	r3, [r4, r3]
   1dd98:	str	r2, [r3]
   1dd9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dda0:	add	r3, r3, #1
   1dda4:	str	r3, [fp, #-32]	; 0xffffffe0
   1dda8:	b	1df50 <handle_coda_error@@Base+0x2188>
   1ddac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ddb0:	lsl	r3, r3, #2
   1ddb4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1ddb8:	add	r3, r2, r3
   1ddbc:	ldr	r3, [r3]
   1ddc0:	ldr	r2, [pc, #888]	; 1e140 <handle_coda_error@@Base+0x2378>
   1ddc4:	add	r2, pc, r2
   1ddc8:	mov	r1, r2
   1ddcc:	mov	r0, r3
   1ddd0:	bl	121e8 <strcmp@plt>
   1ddd4:	mov	r3, r0
   1ddd8:	cmp	r3, #0
   1dddc:	bne	1decc <handle_coda_error@@Base+0x2104>
   1dde0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dde4:	add	r3, r3, #3
   1dde8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ddec:	cmp	r2, r3
   1ddf0:	ble	1decc <handle_coda_error@@Base+0x2104>
   1ddf4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ddf8:	add	r3, r3, #1
   1ddfc:	lsl	r3, r3, #2
   1de00:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1de04:	add	r3, r2, r3
   1de08:	ldr	r3, [r3]
   1de0c:	ldrb	r3, [r3]
   1de10:	cmp	r3, #45	; 0x2d
   1de14:	beq	1decc <handle_coda_error@@Base+0x2104>
   1de18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1de1c:	add	r3, r3, #2
   1de20:	lsl	r3, r3, #2
   1de24:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1de28:	add	r3, r2, r3
   1de2c:	ldr	r3, [r3]
   1de30:	ldrb	r3, [r3]
   1de34:	cmp	r3, #45	; 0x2d
   1de38:	beq	1decc <handle_coda_error@@Base+0x2104>
   1de3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1de40:	add	r3, r3, #3
   1de44:	lsl	r3, r3, #2
   1de48:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1de4c:	add	r3, r2, r3
   1de50:	ldr	r3, [r3]
   1de54:	ldrb	r3, [r3]
   1de58:	cmp	r3, #45	; 0x2d
   1de5c:	beq	1decc <handle_coda_error@@Base+0x2104>
   1de60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1de64:	add	r3, r3, #1
   1de68:	lsl	r3, r3, #2
   1de6c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1de70:	add	r3, r2, r3
   1de74:	ldr	r3, [r3]
   1de78:	str	r3, [fp, #-16]
   1de7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1de80:	add	r3, r3, #2
   1de84:	lsl	r3, r3, #2
   1de88:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1de8c:	add	r3, r2, r3
   1de90:	ldr	r3, [r3]
   1de94:	str	r3, [fp, #-20]	; 0xffffffec
   1de98:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1de9c:	add	r3, r3, #3
   1dea0:	lsl	r3, r3, #2
   1dea4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1dea8:	add	r3, r2, r3
   1deac:	ldr	r3, [r3]
   1deb0:	mov	r0, r3
   1deb4:	bl	12590 <atoi@plt>
   1deb8:	str	r0, [fp, #-24]	; 0xffffffe8
   1debc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dec0:	add	r3, r3, #3
   1dec4:	str	r3, [fp, #-32]	; 0xffffffe0
   1dec8:	b	1df50 <handle_coda_error@@Base+0x2188>
   1decc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ded0:	sub	r3, r3, #1
   1ded4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ded8:	cmp	r2, r3
   1dedc:	bne	1df24 <handle_coda_error@@Base+0x215c>
   1dee0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dee4:	lsl	r3, r3, #2
   1dee8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1deec:	add	r3, r2, r3
   1def0:	ldr	r3, [r3]
   1def4:	ldrb	r3, [r3]
   1def8:	cmp	r3, #45	; 0x2d
   1defc:	beq	1df24 <handle_coda_error@@Base+0x215c>
   1df00:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1df04:	lsl	r3, r3, #2
   1df08:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1df0c:	add	r3, r2, r3
   1df10:	ldr	r2, [r3]
   1df14:	ldr	r3, [pc, #496]	; 1e10c <handle_coda_error@@Base+0x2344>
   1df18:	ldr	r3, [r4, r3]
   1df1c:	str	r2, [r3]
   1df20:	b	1df50 <handle_coda_error@@Base+0x2188>
   1df24:	ldr	r3, [pc, #536]	; 1e144 <handle_coda_error@@Base+0x237c>
   1df28:	ldr	r3, [r4, r3]
   1df2c:	ldr	r3, [r3]
   1df30:	mov	r2, #25
   1df34:	mov	r1, #1
   1df38:	ldr	r0, [pc, #520]	; 1e148 <handle_coda_error@@Base+0x2380>
   1df3c:	add	r0, pc, r0
   1df40:	bl	12350 <fwrite@plt>
   1df44:	bl	1b4d0 <print_yaml_data@@Base+0x1c0>
   1df48:	mov	r0, #1
   1df4c:	bl	123ec <exit@plt>
   1df50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1df54:	add	r3, r3, #1
   1df58:	str	r3, [fp, #-32]	; 0xffffffe0
   1df5c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1df60:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1df64:	cmp	r2, r3
   1df68:	blt	1dae4 <handle_coda_error@@Base+0x1d1c>
   1df6c:	ldr	r3, [pc, #408]	; 1e10c <handle_coda_error@@Base+0x2344>
   1df70:	ldr	r3, [r4, r3]
   1df74:	ldr	r3, [r3]
   1df78:	cmp	r3, #0
   1df7c:	beq	1df98 <handle_coda_error@@Base+0x21d0>
   1df80:	ldr	r3, [pc, #388]	; 1e10c <handle_coda_error@@Base+0x2344>
   1df84:	ldr	r3, [r4, r3]
   1df88:	ldr	r3, [r3]
   1df8c:	ldrb	r3, [r3]
   1df90:	cmp	r3, #0
   1df94:	bne	1dfc4 <handle_coda_error@@Base+0x21fc>
   1df98:	ldr	r3, [pc, #420]	; 1e144 <handle_coda_error@@Base+0x237c>
   1df9c:	ldr	r3, [r4, r3]
   1dfa0:	ldr	r3, [r3]
   1dfa4:	mov	r2, #25
   1dfa8:	mov	r1, #1
   1dfac:	ldr	r0, [pc, #408]	; 1e14c <handle_coda_error@@Base+0x2384>
   1dfb0:	add	r0, pc, r0
   1dfb4:	bl	12350 <fwrite@plt>
   1dfb8:	bl	1b4d0 <print_yaml_data@@Base+0x1c0>
   1dfbc:	mov	r0, #1
   1dfc0:	bl	123ec <exit@plt>
   1dfc4:	bl	12458 <coda_init@plt>
   1dfc8:	mov	r3, r0
   1dfcc:	cmp	r3, #0
   1dfd0:	beq	1e018 <handle_coda_error@@Base+0x2250>
   1dfd4:	ldr	r3, [pc, #360]	; 1e144 <handle_coda_error@@Base+0x237c>
   1dfd8:	ldr	r3, [r4, r3]
   1dfdc:	ldr	r4, [r3]
   1dfe0:	bl	125e4 <coda_get_errno@plt>
   1dfe4:	mov	r3, r0
   1dfe8:	ldr	r3, [r3]
   1dfec:	mov	r0, r3
   1dff0:	bl	1259c <coda_errno_to_string@plt>
   1dff4:	mov	r3, r0
   1dff8:	mov	r2, r3
   1dffc:	ldr	r3, [pc, #332]	; 1e150 <handle_coda_error@@Base+0x2388>
   1e000:	add	r3, pc, r3
   1e004:	mov	r1, r3
   1e008:	mov	r0, r4
   1e00c:	bl	12434 <fprintf@plt>
   1e010:	mov	r0, #1
   1e014:	bl	123ec <exit@plt>
   1e018:	mov	r0, #0
   1e01c:	bl	12464 <coda_set_option_perform_conversions@plt>
   1e020:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e024:	bl	121b8 <coda_set_option_use_fast_size_expressions@plt>
   1e028:	ldr	r3, [pc, #224]	; 1e110 <handle_coda_error@@Base+0x2348>
   1e02c:	ldr	r3, [r4, r3]
   1e030:	ldr	r3, [r3]
   1e034:	cmp	r3, #0
   1e038:	beq	1e0b4 <handle_coda_error@@Base+0x22ec>
   1e03c:	ldr	r3, [pc, #204]	; 1e110 <handle_coda_error@@Base+0x2348>
   1e040:	ldr	r3, [r4, r3]
   1e044:	ldr	r3, [r3]
   1e048:	ldr	r2, [pc, #260]	; 1e154 <handle_coda_error@@Base+0x238c>
   1e04c:	add	r2, pc, r2
   1e050:	mov	r1, r2
   1e054:	mov	r0, r3
   1e058:	bl	12218 <fopen@plt>
   1e05c:	mov	r2, r0
   1e060:	ldr	r3, [pc, #180]	; 1e11c <handle_coda_error@@Base+0x2354>
   1e064:	ldr	r3, [r4, r3]
   1e068:	str	r2, [r3]
   1e06c:	ldr	r3, [pc, #168]	; 1e11c <handle_coda_error@@Base+0x2354>
   1e070:	ldr	r3, [r4, r3]
   1e074:	ldr	r3, [r3]
   1e078:	cmp	r3, #0
   1e07c:	bne	1e0b4 <handle_coda_error@@Base+0x22ec>
   1e080:	ldr	r3, [pc, #188]	; 1e144 <handle_coda_error@@Base+0x237c>
   1e084:	ldr	r3, [r4, r3]
   1e088:	ldr	r0, [r3]
   1e08c:	ldr	r3, [pc, #124]	; 1e110 <handle_coda_error@@Base+0x2348>
   1e090:	ldr	r3, [r4, r3]
   1e094:	ldr	r3, [r3]
   1e098:	mov	r2, r3
   1e09c:	ldr	r3, [pc, #180]	; 1e158 <handle_coda_error@@Base+0x2390>
   1e0a0:	add	r3, pc, r3
   1e0a4:	mov	r1, r3
   1e0a8:	bl	12434 <fprintf@plt>
   1e0ac:	mov	r0, #1
   1e0b0:	bl	123ec <exit@plt>
   1e0b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e0b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e0bc:	ldr	r0, [fp, #-16]
   1e0c0:	bl	14e3c <print_debug_data@@Base>
   1e0c4:	ldr	r3, [pc, #68]	; 1e110 <handle_coda_error@@Base+0x2348>
   1e0c8:	ldr	r3, [r4, r3]
   1e0cc:	ldr	r3, [r3]
   1e0d0:	cmp	r3, #0
   1e0d4:	beq	1e0ec <handle_coda_error@@Base+0x2324>
   1e0d8:	ldr	r3, [pc, #60]	; 1e11c <handle_coda_error@@Base+0x2354>
   1e0dc:	ldr	r3, [r4, r3]
   1e0e0:	ldr	r3, [r3]
   1e0e4:	mov	r0, r3
   1e0e8:	bl	124dc <fclose@plt>
   1e0ec:	bl	12380 <coda_done@plt>
   1e0f0:	nop	{0}
   1e0f4:	sub	sp, fp, #8
   1e0f8:	ldr	r4, [sp]
   1e0fc:	ldr	fp, [sp, #4]
   1e100:	add	sp, sp, #8
   1e104:	pop	{pc}		; (ldr pc, [sp], #4)
   1e108:	andeq	r3, r1, ip, lsl #11
   1e10c:			; <UNDEFINED> instruction: 0x000001b4
   1e110:	andeq	r0, r0, r4, lsr #3
   1e114:	ldrdeq	r0, [r0], -r8
   1e118:	ldrdeq	r0, [r0], -ip
   1e11c:			; <UNDEFINED> instruction: 0x000001bc
   1e120:	andeq	r2, r0, r4, lsl #17
   1e124:	andeq	r2, r0, ip, asr #19
   1e128:	andeq	r2, r0, ip, ror #17
   1e12c:			; <UNDEFINED> instruction: 0x000028bc
   1e130:	andeq	r2, r0, ip, lsr #17
   1e134:	andeq	r2, r0, ip, ror r8
   1e138:	andeq	r2, r0, r4, lsl #16
   1e13c:	andeq	r0, r0, r0, ror #3
   1e140:	andeq	r2, r0, r4, ror #14
   1e144:			; <UNDEFINED> instruction: 0x000001b8
   1e148:	andeq	r2, r0, r8, ror #9
   1e14c:	andeq	r2, r0, r4, ror r4
   1e150:	andeq	r2, r0, r4, ror #6
   1e154:	andeq	r2, r0, r0, ror #8
   1e158:	andeq	r2, r0, r0, lsl r4

0001e15c <main@@Base>:
   1e15c:	str	r4, [sp, #-12]!
   1e160:	str	fp, [sp, #4]
   1e164:	str	lr, [sp, #8]
   1e168:	add	fp, sp, #8
   1e16c:	sub	sp, sp, #20
   1e170:	str	r0, [fp, #-24]	; 0xffffffe8
   1e174:	str	r1, [fp, #-28]	; 0xffffffe4
   1e178:	ldr	r4, [pc, #1128]	; 1e5e8 <main@@Base+0x48c>
   1e17c:	add	r4, pc, r4
   1e180:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e184:	cmp	r3, #1
   1e188:	beq	1e1e4 <main@@Base+0x88>
   1e18c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e190:	add	r3, r3, #4
   1e194:	ldr	r3, [r3]
   1e198:	ldr	r2, [pc, #1100]	; 1e5ec <main@@Base+0x490>
   1e19c:	add	r2, pc, r2
   1e1a0:	mov	r1, r2
   1e1a4:	mov	r0, r3
   1e1a8:	bl	121e8 <strcmp@plt>
   1e1ac:	mov	r3, r0
   1e1b0:	cmp	r3, #0
   1e1b4:	beq	1e1e4 <main@@Base+0x88>
   1e1b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e1bc:	add	r3, r3, #4
   1e1c0:	ldr	r3, [r3]
   1e1c4:	ldr	r2, [pc, #1060]	; 1e5f0 <main@@Base+0x494>
   1e1c8:	add	r2, pc, r2
   1e1cc:	mov	r1, r2
   1e1d0:	mov	r0, r3
   1e1d4:	bl	121e8 <strcmp@plt>
   1e1d8:	mov	r3, r0
   1e1dc:	cmp	r3, #0
   1e1e0:	bne	1e1f0 <main@@Base+0x94>
   1e1e4:	bl	1b4d0 <print_yaml_data@@Base+0x1c0>
   1e1e8:	mov	r0, #0
   1e1ec:	bl	123ec <exit@plt>
   1e1f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e1f4:	add	r3, r3, #4
   1e1f8:	ldr	r3, [r3]
   1e1fc:	ldr	r2, [pc, #1008]	; 1e5f4 <main@@Base+0x498>
   1e200:	add	r2, pc, r2
   1e204:	mov	r1, r2
   1e208:	mov	r0, r3
   1e20c:	bl	121e8 <strcmp@plt>
   1e210:	mov	r3, r0
   1e214:	cmp	r3, #0
   1e218:	beq	1e248 <main@@Base+0xec>
   1e21c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e220:	add	r3, r3, #4
   1e224:	ldr	r3, [r3]
   1e228:	ldr	r2, [pc, #968]	; 1e5f8 <main@@Base+0x49c>
   1e22c:	add	r2, pc, r2
   1e230:	mov	r1, r2
   1e234:	mov	r0, r3
   1e238:	bl	121e8 <strcmp@plt>
   1e23c:	mov	r3, r0
   1e240:	cmp	r3, #0
   1e244:	bne	1e254 <main@@Base+0xf8>
   1e248:	bl	1b474 <print_yaml_data@@Base+0x164>
   1e24c:	mov	r0, #0
   1e250:	bl	123ec <exit@plt>
   1e254:	mov	r3, #1
   1e258:	str	r3, [fp, #-16]
   1e25c:	ldr	r3, [fp, #-16]
   1e260:	add	r3, r3, #1
   1e264:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e268:	cmp	r2, r3
   1e26c:	ble	1e2d4 <main@@Base+0x178>
   1e270:	ldr	r3, [fp, #-16]
   1e274:	lsl	r3, r3, #2
   1e278:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e27c:	add	r3, r2, r3
   1e280:	ldr	r3, [r3]
   1e284:	ldr	r2, [pc, #880]	; 1e5fc <main@@Base+0x4a0>
   1e288:	add	r2, pc, r2
   1e28c:	mov	r1, r2
   1e290:	mov	r0, r3
   1e294:	bl	121e8 <strcmp@plt>
   1e298:	mov	r3, r0
   1e29c:	cmp	r3, #0
   1e2a0:	bne	1e2d4 <main@@Base+0x178>
   1e2a4:	ldr	r3, [fp, #-16]
   1e2a8:	add	r3, r3, #1
   1e2ac:	lsl	r3, r3, #2
   1e2b0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e2b4:	add	r3, r2, r3
   1e2b8:	ldr	r3, [r3]
   1e2bc:	mov	r0, r3
   1e2c0:	bl	12308 <coda_set_definition_path@plt>
   1e2c4:	ldr	r3, [fp, #-16]
   1e2c8:	add	r3, r3, #2
   1e2cc:	str	r3, [fp, #-16]
   1e2d0:	b	1e348 <main@@Base+0x1ec>
   1e2d4:	ldr	r3, [pc, #804]	; 1e600 <main@@Base+0x4a4>
   1e2d8:	add	r3, pc, r3
   1e2dc:	str	r3, [fp, #-20]	; 0xffffffec
   1e2e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e2e4:	ldr	r3, [r3]
   1e2e8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e2ec:	mov	r1, #0
   1e2f0:	mov	r0, r3
   1e2f4:	bl	12284 <coda_set_definition_path_conditional@plt>
   1e2f8:	mov	r3, r0
   1e2fc:	cmp	r3, #0
   1e300:	beq	1e348 <main@@Base+0x1ec>
   1e304:	ldr	r3, [pc, #760]	; 1e604 <main@@Base+0x4a8>
   1e308:	ldr	r3, [r4, r3]
   1e30c:	ldr	r4, [r3]
   1e310:	bl	125e4 <coda_get_errno@plt>
   1e314:	mov	r3, r0
   1e318:	ldr	r3, [r3]
   1e31c:	mov	r0, r3
   1e320:	bl	1259c <coda_errno_to_string@plt>
   1e324:	mov	r3, r0
   1e328:	mov	r2, r3
   1e32c:	ldr	r3, [pc, #724]	; 1e608 <main@@Base+0x4ac>
   1e330:	add	r3, pc, r3
   1e334:	mov	r1, r3
   1e338:	mov	r0, r4
   1e33c:	bl	12434 <fprintf@plt>
   1e340:	mov	r0, #1
   1e344:	bl	123ec <exit@plt>
   1e348:	ldr	r3, [fp, #-16]
   1e34c:	lsl	r3, r3, #2
   1e350:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e354:	add	r3, r2, r3
   1e358:	ldr	r3, [r3]
   1e35c:	ldr	r2, [pc, #680]	; 1e60c <main@@Base+0x4b0>
   1e360:	add	r2, pc, r2
   1e364:	mov	r1, r2
   1e368:	mov	r0, r3
   1e36c:	bl	121e8 <strcmp@plt>
   1e370:	mov	r3, r0
   1e374:	cmp	r3, #0
   1e378:	bne	1e3c0 <main@@Base+0x264>
   1e37c:	ldr	r3, [pc, #652]	; 1e610 <main@@Base+0x4b4>
   1e380:	ldr	r3, [r4, r3]
   1e384:	mov	r2, #0
   1e388:	str	r2, [r3]
   1e38c:	ldr	r3, [fp, #-16]
   1e390:	add	r3, r3, #1
   1e394:	str	r3, [fp, #-16]
   1e398:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e39c:	ldr	r3, [fp, #-16]
   1e3a0:	sub	r0, r2, r3
   1e3a4:	ldr	r3, [fp, #-16]
   1e3a8:	lsl	r3, r3, #2
   1e3ac:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e3b0:	add	r3, r2, r3
   1e3b4:	mov	r1, r3
   1e3b8:	bl	1be44 <handle_coda_error@@Base+0x7c>
   1e3bc:	b	1e5cc <main@@Base+0x470>
   1e3c0:	ldr	r3, [fp, #-16]
   1e3c4:	lsl	r3, r3, #2
   1e3c8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e3cc:	add	r3, r2, r3
   1e3d0:	ldr	r3, [r3]
   1e3d4:	ldr	r2, [pc, #568]	; 1e614 <main@@Base+0x4b8>
   1e3d8:	add	r2, pc, r2
   1e3dc:	mov	r1, r2
   1e3e0:	mov	r0, r3
   1e3e4:	bl	121e8 <strcmp@plt>
   1e3e8:	mov	r3, r0
   1e3ec:	cmp	r3, #0
   1e3f0:	bne	1e438 <main@@Base+0x2dc>
   1e3f4:	ldr	r3, [pc, #532]	; 1e610 <main@@Base+0x4b4>
   1e3f8:	ldr	r3, [r4, r3]
   1e3fc:	mov	r2, #1
   1e400:	str	r2, [r3]
   1e404:	ldr	r3, [fp, #-16]
   1e408:	add	r3, r3, #1
   1e40c:	str	r3, [fp, #-16]
   1e410:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e414:	ldr	r3, [fp, #-16]
   1e418:	sub	r0, r2, r3
   1e41c:	ldr	r3, [fp, #-16]
   1e420:	lsl	r3, r3, #2
   1e424:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e428:	add	r3, r2, r3
   1e42c:	mov	r1, r3
   1e430:	bl	1c4fc <handle_coda_error@@Base+0x734>
   1e434:	b	1e5cc <main@@Base+0x470>
   1e438:	ldr	r3, [fp, #-16]
   1e43c:	lsl	r3, r3, #2
   1e440:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e444:	add	r3, r2, r3
   1e448:	ldr	r3, [r3]
   1e44c:	ldr	r2, [pc, #452]	; 1e618 <main@@Base+0x4bc>
   1e450:	add	r2, pc, r2
   1e454:	mov	r1, r2
   1e458:	mov	r0, r3
   1e45c:	bl	121e8 <strcmp@plt>
   1e460:	mov	r3, r0
   1e464:	cmp	r3, #0
   1e468:	bne	1e4b0 <main@@Base+0x354>
   1e46c:	ldr	r3, [pc, #412]	; 1e610 <main@@Base+0x4b4>
   1e470:	ldr	r3, [r4, r3]
   1e474:	mov	r2, #3
   1e478:	str	r2, [r3]
   1e47c:	ldr	r3, [fp, #-16]
   1e480:	add	r3, r3, #1
   1e484:	str	r3, [fp, #-16]
   1e488:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e48c:	ldr	r3, [fp, #-16]
   1e490:	sub	r0, r2, r3
   1e494:	ldr	r3, [fp, #-16]
   1e498:	lsl	r3, r3, #2
   1e49c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e4a0:	add	r3, r2, r3
   1e4a4:	mov	r1, r3
   1e4a8:	bl	1ce54 <handle_coda_error@@Base+0x108c>
   1e4ac:	b	1e5cc <main@@Base+0x470>
   1e4b0:	ldr	r3, [fp, #-16]
   1e4b4:	lsl	r3, r3, #2
   1e4b8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e4bc:	add	r3, r2, r3
   1e4c0:	ldr	r3, [r3]
   1e4c4:	ldr	r2, [pc, #336]	; 1e61c <main@@Base+0x4c0>
   1e4c8:	add	r2, pc, r2
   1e4cc:	mov	r1, r2
   1e4d0:	mov	r0, r3
   1e4d4:	bl	121e8 <strcmp@plt>
   1e4d8:	mov	r3, r0
   1e4dc:	cmp	r3, #0
   1e4e0:	bne	1e528 <main@@Base+0x3cc>
   1e4e4:	ldr	r3, [pc, #292]	; 1e610 <main@@Base+0x4b4>
   1e4e8:	ldr	r3, [r4, r3]
   1e4ec:	mov	r2, #4
   1e4f0:	str	r2, [r3]
   1e4f4:	ldr	r3, [fp, #-16]
   1e4f8:	add	r3, r3, #1
   1e4fc:	str	r3, [fp, #-16]
   1e500:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e504:	ldr	r3, [fp, #-16]
   1e508:	sub	r0, r2, r3
   1e50c:	ldr	r3, [fp, #-16]
   1e510:	lsl	r3, r3, #2
   1e514:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e518:	add	r3, r2, r3
   1e51c:	mov	r1, r3
   1e520:	bl	1d450 <handle_coda_error@@Base+0x1688>
   1e524:	b	1e5cc <main@@Base+0x470>
   1e528:	ldr	r3, [fp, #-16]
   1e52c:	lsl	r3, r3, #2
   1e530:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e534:	add	r3, r2, r3
   1e538:	ldr	r3, [r3]
   1e53c:	ldr	r2, [pc, #220]	; 1e620 <main@@Base+0x4c4>
   1e540:	add	r2, pc, r2
   1e544:	mov	r1, r2
   1e548:	mov	r0, r3
   1e54c:	bl	121e8 <strcmp@plt>
   1e550:	mov	r3, r0
   1e554:	cmp	r3, #0
   1e558:	bne	1e5a0 <main@@Base+0x444>
   1e55c:	ldr	r3, [pc, #172]	; 1e610 <main@@Base+0x4b4>
   1e560:	ldr	r3, [r4, r3]
   1e564:	mov	r2, #5
   1e568:	str	r2, [r3]
   1e56c:	ldr	r3, [fp, #-16]
   1e570:	add	r3, r3, #1
   1e574:	str	r3, [fp, #-16]
   1e578:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e57c:	ldr	r3, [fp, #-16]
   1e580:	sub	r0, r2, r3
   1e584:	ldr	r3, [fp, #-16]
   1e588:	lsl	r3, r3, #2
   1e58c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e590:	add	r3, r2, r3
   1e594:	mov	r1, r3
   1e598:	bl	1da4c <handle_coda_error@@Base+0x1c84>
   1e59c:	b	1e5cc <main@@Base+0x470>
   1e5a0:	ldr	r3, [pc, #92]	; 1e604 <main@@Base+0x4a8>
   1e5a4:	ldr	r3, [r4, r3]
   1e5a8:	ldr	r3, [r3]
   1e5ac:	mov	r2, #25
   1e5b0:	mov	r1, #1
   1e5b4:	ldr	r0, [pc, #104]	; 1e624 <main@@Base+0x4c8>
   1e5b8:	add	r0, pc, r0
   1e5bc:	bl	12350 <fwrite@plt>
   1e5c0:	bl	1b4d0 <print_yaml_data@@Base+0x1c0>
   1e5c4:	mov	r0, #1
   1e5c8:	bl	123ec <exit@plt>
   1e5cc:	mov	r3, #0
   1e5d0:	mov	r0, r3
   1e5d4:	sub	sp, fp, #8
   1e5d8:	ldr	r4, [sp]
   1e5dc:	ldr	fp, [sp, #4]
   1e5e0:	add	sp, sp, #8
   1e5e4:	pop	{pc}		; (ldr pc, [sp], #4)
   1e5e8:	andeq	r2, r1, ip, ror lr
   1e5ec:	muleq	r0, r8, r3
   1e5f0:	andeq	r2, r0, r0, ror r3
   1e5f4:	andeq	r2, r0, r0, asr #6
   1e5f8:	andeq	r2, r0, r8, lsl r3
   1e5fc:	andeq	r2, r0, r8, asr #5
   1e600:	andeq	r2, r0, ip, ror r2
   1e604:			; <UNDEFINED> instruction: 0x000001b8
   1e608:	andeq	r2, r0, r4, lsr r0
   1e60c:	andeq	r2, r0, r0, lsl r2
   1e610:	ldrdeq	r0, [r0], -r4
   1e614:	andeq	r2, r0, r0, lsr #3
   1e618:	andeq	r2, r0, r0, lsr r1
   1e61c:	andeq	r2, r0, r0, asr #1
   1e620:	andeq	r2, r0, r0, asr r0
   1e624:	andeq	r1, r0, ip, ror #28
   1e628:	cmp	r3, #0
   1e62c:	cmpeq	r2, #0
   1e630:	bne	1e654 <main@@Base+0x4f8>
   1e634:	cmp	r1, #0
   1e638:	movlt	r1, #-2147483648	; 0x80000000
   1e63c:	movlt	r0, #0
   1e640:	blt	1e650 <main@@Base+0x4f4>
   1e644:	cmpeq	r0, #0
   1e648:	mvnne	r1, #-2147483648	; 0x80000000
   1e64c:	mvnne	r0, #0
   1e650:	b	1e6fc <main@@Base+0x5a0>
   1e654:	sub	sp, sp, #8
   1e658:	push	{sp, lr}
   1e65c:	cmp	r1, #0
   1e660:	blt	1e680 <main@@Base+0x524>
   1e664:	cmp	r3, #0
   1e668:	blt	1e6b4 <main@@Base+0x558>
   1e66c:	bl	1e70c <main@@Base+0x5b0>
   1e670:	ldr	lr, [sp, #4]
   1e674:	add	sp, sp, #8
   1e678:	pop	{r2, r3}
   1e67c:	bx	lr
   1e680:	rsbs	r0, r0, #0
   1e684:	sbc	r1, r1, r1, lsl #1
   1e688:	cmp	r3, #0
   1e68c:	blt	1e6d8 <main@@Base+0x57c>
   1e690:	bl	1e70c <main@@Base+0x5b0>
   1e694:	ldr	lr, [sp, #4]
   1e698:	add	sp, sp, #8
   1e69c:	pop	{r2, r3}
   1e6a0:	rsbs	r0, r0, #0
   1e6a4:	sbc	r1, r1, r1, lsl #1
   1e6a8:	rsbs	r2, r2, #0
   1e6ac:	sbc	r3, r3, r3, lsl #1
   1e6b0:	bx	lr
   1e6b4:	rsbs	r2, r2, #0
   1e6b8:	sbc	r3, r3, r3, lsl #1
   1e6bc:	bl	1e70c <main@@Base+0x5b0>
   1e6c0:	ldr	lr, [sp, #4]
   1e6c4:	add	sp, sp, #8
   1e6c8:	pop	{r2, r3}
   1e6cc:	rsbs	r0, r0, #0
   1e6d0:	sbc	r1, r1, r1, lsl #1
   1e6d4:	bx	lr
   1e6d8:	rsbs	r2, r2, #0
   1e6dc:	sbc	r3, r3, r3, lsl #1
   1e6e0:	bl	1e70c <main@@Base+0x5b0>
   1e6e4:	ldr	lr, [sp, #4]
   1e6e8:	add	sp, sp, #8
   1e6ec:	pop	{r2, r3}
   1e6f0:	rsbs	r2, r2, #0
   1e6f4:	sbc	r3, r3, r3, lsl #1
   1e6f8:	bx	lr
   1e6fc:	push	{r1, lr}
   1e700:	mov	r0, #8
   1e704:	bl	121c4 <raise@plt>
   1e708:	pop	{r1, pc}
   1e70c:	cmp	r1, r3
   1e710:	cmpeq	r0, r2
   1e714:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e718:	mov	r4, r0
   1e71c:	movcc	r0, #0
   1e720:	mov	r5, r1
   1e724:	ldr	lr, [sp, #36]	; 0x24
   1e728:	movcc	r1, r0
   1e72c:	bcc	1e828 <main@@Base+0x6cc>
   1e730:	cmp	r3, #0
   1e734:	clzeq	ip, r2
   1e738:	clzne	ip, r3
   1e73c:	addeq	ip, ip, #32
   1e740:	cmp	r5, #0
   1e744:	clzeq	r1, r4
   1e748:	addeq	r1, r1, #32
   1e74c:	clzne	r1, r5
   1e750:	sub	ip, ip, r1
   1e754:	sub	sl, ip, #32
   1e758:	lsl	r9, r3, ip
   1e75c:	rsb	fp, ip, #32
   1e760:	orr	r9, r9, r2, lsl sl
   1e764:	orr	r9, r9, r2, lsr fp
   1e768:	lsl	r8, r2, ip
   1e76c:	cmp	r5, r9
   1e770:	cmpeq	r4, r8
   1e774:	movcc	r0, #0
   1e778:	movcc	r1, r0
   1e77c:	bcc	1e798 <main@@Base+0x63c>
   1e780:	mov	r0, #1
   1e784:	subs	r4, r4, r8
   1e788:	lsl	r1, r0, sl
   1e78c:	orr	r1, r1, r0, lsr fp
   1e790:	lsl	r0, r0, ip
   1e794:	sbc	r5, r5, r9
   1e798:	cmp	ip, #0
   1e79c:	beq	1e828 <main@@Base+0x6cc>
   1e7a0:	lsr	r6, r8, #1
   1e7a4:	orr	r6, r6, r9, lsl #31
   1e7a8:	lsr	r7, r9, #1
   1e7ac:	mov	r2, ip
   1e7b0:	b	1e7d4 <main@@Base+0x678>
   1e7b4:	subs	r3, r4, r6
   1e7b8:	sbc	r8, r5, r7
   1e7bc:	adds	r3, r3, r3
   1e7c0:	adc	r8, r8, r8
   1e7c4:	adds	r4, r3, #1
   1e7c8:	adc	r5, r8, #0
   1e7cc:	subs	r2, r2, #1
   1e7d0:	beq	1e7f0 <main@@Base+0x694>
   1e7d4:	cmp	r5, r7
   1e7d8:	cmpeq	r4, r6
   1e7dc:	bcs	1e7b4 <main@@Base+0x658>
   1e7e0:	adds	r4, r4, r4
   1e7e4:	adc	r5, r5, r5
   1e7e8:	subs	r2, r2, #1
   1e7ec:	bne	1e7d4 <main@@Base+0x678>
   1e7f0:	lsr	r3, r4, ip
   1e7f4:	orr	r3, r3, r5, lsl fp
   1e7f8:	lsr	r2, r5, ip
   1e7fc:	orr	r3, r3, r5, lsr sl
   1e800:	adds	r0, r0, r4
   1e804:	mov	r4, r3
   1e808:	lsl	r3, r2, ip
   1e80c:	orr	r3, r3, r4, lsl sl
   1e810:	lsl	ip, r4, ip
   1e814:	orr	r3, r3, r4, lsr fp
   1e818:	adc	r1, r1, r5
   1e81c:	subs	r0, r0, ip
   1e820:	mov	r5, r2
   1e824:	sbc	r1, r1, r3
   1e828:	cmp	lr, #0
   1e82c:	strdne	r4, [lr]
   1e830:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001e834 <__libc_csu_init@@Base>:
   1e834:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1e838:	mov	r7, r0
   1e83c:	ldr	r6, [pc, #72]	; 1e88c <__libc_csu_init@@Base+0x58>
   1e840:	ldr	r5, [pc, #72]	; 1e890 <__libc_csu_init@@Base+0x5c>
   1e844:	add	r6, pc, r6
   1e848:	add	r5, pc, r5
   1e84c:	sub	r6, r6, r5
   1e850:	mov	r8, r1
   1e854:	mov	r9, r2
   1e858:	bl	12180 <coda_cursor_get_byte_size@plt-0x20>
   1e85c:	asrs	r6, r6, #2
   1e860:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e864:	mov	r4, #0
   1e868:	add	r4, r4, #1
   1e86c:	ldr	r3, [r5], #4
   1e870:	mov	r2, r9
   1e874:	mov	r1, r8
   1e878:	mov	r0, r7
   1e87c:	blx	r3
   1e880:	cmp	r6, r4
   1e884:	bne	1e868 <__libc_csu_init@@Base+0x34>
   1e888:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e88c:			; <UNDEFINED> instruction: 0x000126b0
   1e890:	andeq	r2, r1, r8, lsr #13

0001e894 <__libc_csu_fini@@Base>:
   1e894:	bx	lr

Disassembly of section .fini:

0001e898 <.fini>:
   1e898:	push	{r3, lr}
   1e89c:	pop	{r3, pc}
