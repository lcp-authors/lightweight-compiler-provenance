
../repos/daq-2.0.7/os-daq-modules/.libs/daq_dump.so:     file format elf32-littlearm


Disassembly of section .init:

00000550 <_init>:
 550:	push	{r3, lr}
 554:	bl	630 <call_weak_fn>
 558:	pop	{r3, pc}

Disassembly of section .plt:

0000055c <.plt>:
 55c:	push	{lr}		; (str lr, [sp, #-4]!)
 560:	ldr	lr, [pc, #4]	; 56c <.plt+0x10>
 564:	add	lr, pc, lr
 568:	ldr	pc, [lr, #8]!
 56c:	.word	0x00011a94

00000570 <calloc@plt>:
 570:	add	ip, pc, #0, 12
 574:	add	ip, ip, #69632	; 0x11000
 578:	ldr	pc, [ip, #2708]!	; 0xa94

0000057c <strcmp@plt>:
 57c:	add	ip, pc, #0, 12
 580:	add	ip, ip, #69632	; 0x11000
 584:	ldr	pc, [ip, #2700]!	; 0xa8c

00000588 <__cxa_finalize@plt>:
 588:	add	ip, pc, #0, 12
 58c:	add	ip, ip, #69632	; 0x11000
 590:	ldr	pc, [ip, #2692]!	; 0xa84

00000594 <free@plt>:
 594:	add	ip, pc, #0, 12
 598:	add	ip, ip, #69632	; 0x11000
 59c:	ldr	pc, [ip, #2684]!	; 0xa7c

000005a0 <ferror@plt>:
 5a0:	add	ip, pc, #0, 12
 5a4:	add	ip, ip, #69632	; 0x11000
 5a8:	ldr	pc, [ip, #2676]!	; 0xa74

000005ac <strdup@plt>:
 5ac:	add	ip, pc, #0, 12
 5b0:	add	ip, ip, #69632	; 0x11000
 5b4:	ldr	pc, [ip, #2668]!	; 0xa6c

000005b8 <pcap_close@plt>:
 5b8:	add	ip, pc, #0, 12
 5bc:	add	ip, ip, #69632	; 0x11000
 5c0:	ldr	pc, [ip, #2660]!	; 0xa64

000005c4 <strcasecmp@plt>:
 5c4:	add	ip, pc, #0, 12
 5c8:	add	ip, ip, #69632	; 0x11000
 5cc:	ldr	pc, [ip, #2652]!	; 0xa5c

000005d0 <pcap_open_dead@plt>:
 5d0:	add	ip, pc, #0, 12
 5d4:	add	ip, ip, #69632	; 0x11000
 5d8:	ldr	pc, [ip, #2644]!	; 0xa54

000005dc <pcap_dump@plt>:
 5dc:	add	ip, pc, #0, 12
 5e0:	add	ip, ip, #69632	; 0x11000
 5e4:	ldr	pc, [ip, #2636]!	; 0xa4c

000005e8 <__gmon_start__@plt>:
 5e8:	add	ip, pc, #0, 12
 5ec:	add	ip, ip, #69632	; 0x11000
 5f0:	ldr	pc, [ip, #2628]!	; 0xa44

000005f4 <snprintf@plt>:
 5f4:	add	ip, pc, #0, 12
 5f8:	add	ip, ip, #69632	; 0x11000
 5fc:	ldr	pc, [ip, #2620]!	; 0xa3c

00000600 <pcap_dump_file@plt>:
 600:	add	ip, pc, #0, 12
 604:	add	ip, ip, #69632	; 0x11000
 608:	ldr	pc, [ip, #2612]!	; 0xa34

0000060c <memset@plt>:
 60c:	add	ip, pc, #0, 12
 610:	add	ip, ip, #69632	; 0x11000
 614:	ldr	pc, [ip, #2604]!	; 0xa2c

00000618 <pcap_dump_close@plt>:
 618:	add	ip, pc, #0, 12
 61c:	add	ip, ip, #69632	; 0x11000
 620:	ldr	pc, [ip, #2596]!	; 0xa24

00000624 <pcap_dump_open@plt>:
 624:	add	ip, pc, #0, 12
 628:	add	ip, ip, #69632	; 0x11000
 62c:	ldr	pc, [ip, #2588]!	; 0xa1c

Disassembly of section .text:

00000630 <call_weak_fn>:
 630:	ldr	r3, [pc, #20]	; 64c <call_weak_fn+0x1c>
 634:	ldr	r2, [pc, #20]	; 650 <call_weak_fn+0x20>
 638:	add	r3, pc, r3
 63c:	ldr	r2, [r3, r2]
 640:	cmp	r2, #0
 644:	bxeq	lr
 648:	b	5e8 <__gmon_start__@plt>
 64c:	.word	0x000119c0
 650:	.word	0x00000054

00000654 <deregister_tm_clones>:
 654:	ldr	r0, [pc, #44]	; 688 <deregister_tm_clones+0x34>
 658:	ldr	r3, [pc, #44]	; 68c <deregister_tm_clones+0x38>
 65c:	add	r0, pc, r0
 660:	add	r3, pc, r3
 664:	cmp	r3, r0
 668:	ldr	r3, [pc, #32]	; 690 <deregister_tm_clones+0x3c>
 66c:	add	r3, pc, r3
 670:	bxeq	lr
 674:	ldr	r2, [pc, #24]	; 694 <deregister_tm_clones+0x40>
 678:	ldr	r3, [r3, r2]
 67c:	cmp	r3, #0
 680:	bxeq	lr
 684:	bx	r3
 688:	.word	0x00011a64
 68c:	.word	0x00011a60
 690:	.word	0x0001198c
 694:	.word	0x00000050

00000698 <register_tm_clones>:
 698:	ldr	r0, [pc, #56]	; 6d8 <register_tm_clones+0x40>
 69c:	ldr	r3, [pc, #56]	; 6dc <register_tm_clones+0x44>
 6a0:	add	r0, pc, r0
 6a4:	add	r3, pc, r3
 6a8:	sub	r1, r3, r0
 6ac:	ldr	r3, [pc, #44]	; 6e0 <register_tm_clones+0x48>
 6b0:	asr	r1, r1, #2
 6b4:	add	r3, pc, r3
 6b8:	add	r1, r1, r1, lsr #31
 6bc:	asrs	r1, r1, #1
 6c0:	bxeq	lr
 6c4:	ldr	r2, [pc, #24]	; 6e4 <register_tm_clones+0x4c>
 6c8:	ldr	r3, [r3, r2]
 6cc:	cmp	r3, #0
 6d0:	bxeq	lr
 6d4:	bx	r3
 6d8:	.word	0x00011a20
 6dc:	.word	0x00011a1c
 6e0:	.word	0x00011944
 6e4:	.word	0x00000058

000006e8 <__do_global_dtors_aux>:
 6e8:	ldr	r3, [pc, #76]	; 73c <__do_global_dtors_aux+0x54>
 6ec:	ldr	r2, [pc, #76]	; 740 <__do_global_dtors_aux+0x58>
 6f0:	add	r3, pc, r3
 6f4:	add	r2, pc, r2
 6f8:	ldrb	r3, [r3]
 6fc:	cmp	r3, #0
 700:	bxne	lr
 704:	ldr	r3, [pc, #56]	; 744 <__do_global_dtors_aux+0x5c>
 708:	push	{r4, lr}
 70c:	ldr	r3, [r2, r3]
 710:	cmp	r3, #0
 714:	beq	724 <__do_global_dtors_aux+0x3c>
 718:	ldr	r3, [pc, #40]	; 748 <__do_global_dtors_aux+0x60>
 71c:	ldr	r0, [pc, r3]
 720:	bl	588 <__cxa_finalize@plt>
 724:	bl	654 <deregister_tm_clones>
 728:	ldr	r3, [pc, #28]	; 74c <__do_global_dtors_aux+0x64>
 72c:	mov	r2, #1
 730:	add	r3, pc, r3
 734:	strb	r2, [r3]
 738:	pop	{r4, pc}
 73c:	.word	0x000119d0
 740:	.word	0x00011904
 744:	.word	0x0000004c
 748:	.word	0x00011938
 74c:	.word	0x00011990

00000750 <frame_dummy>:
 750:	b	698 <register_tm_clones>

00000754 <dump_daq_acquire>:
 754:	push	{lr}		; (str lr, [sp, #-4]!)
 758:	ldr	ip, [r0]
 75c:	ldr	lr, [sp, #4]
 760:	str	r0, [sp, #4]
 764:	str	r2, [r0, #16]
 768:	ldr	r2, [pc, #24]	; 788 <dump_daq_acquire+0x34>
 76c:	str	lr, [r0, #20]
 770:	ldr	lr, [ip, #28]
 774:	add	r2, pc, r2
 778:	ldr	r0, [r0, #4]
 77c:	mov	ip, lr
 780:	pop	{lr}		; (ldr lr, [sp], #4)
 784:	bx	ip
 788:	.word	0x000001bc

0000078c <dump_daq_set_filter>:
 78c:	ldr	r3, [r0]
 790:	ldr	r0, [r0, #4]
 794:	ldr	r3, [r3, #20]
 798:	bx	r3

0000079c <dump_daq_breakloop>:
 79c:	ldr	r3, [r0]
 7a0:	ldr	r0, [r0, #4]
 7a4:	ldr	r3, [r3, #36]	; 0x24
 7a8:	bx	r3

000007ac <dump_daq_check_status>:
 7ac:	ldr	r3, [r0]
 7b0:	ldr	r0, [r0, #4]
 7b4:	ldr	r3, [r3, #48]	; 0x30
 7b8:	bx	r3

000007bc <dump_daq_get_stats>:
 7bc:	strd	r4, [sp, #-16]!
 7c0:	mov	r4, r0
 7c4:	mov	r5, r1
 7c8:	str	r6, [sp, #8]
 7cc:	str	lr, [sp, #12]
 7d0:	ldr	r3, [r0]
 7d4:	ldr	r0, [r0, #4]
 7d8:	ldr	r3, [r3, #52]	; 0x34
 7dc:	blx	r3
 7e0:	ldrd	r2, [r4, #64]	; 0x40
 7e4:	strd	r2, [r5, #40]	; 0x28
 7e8:	ldrd	r2, [r4, #72]	; 0x48
 7ec:	strd	r2, [r5, #48]	; 0x30
 7f0:	ldrd	r2, [r4, #80]	; 0x50
 7f4:	strd	r2, [r5, #56]	; 0x38
 7f8:	ldrd	r2, [r4, #88]	; 0x58
 7fc:	strd	r2, [r5, #64]	; 0x40
 800:	ldrd	r2, [r4, #96]	; 0x60
 804:	strd	r2, [r5, #72]	; 0x48
 808:	ldrd	r2, [r4, #104]	; 0x68
 80c:	strd	r2, [r5, #80]	; 0x50
 810:	ldrd	r2, [r4, #112]	; 0x70
 814:	strd	r2, [r5, #88]	; 0x58
 818:	ldrd	r2, [r4, #56]	; 0x38
 81c:	strd	r2, [r5, #32]
 820:	ldrd	r4, [sp]
 824:	ldr	r6, [sp, #8]
 828:	add	sp, sp, #12
 82c:	pop	{pc}		; (ldr pc, [sp], #4)

00000830 <dump_daq_get_snaplen>:
 830:	ldr	r3, [r0]
 834:	ldr	r0, [r0, #4]
 838:	ldr	r3, [r3, #60]	; 0x3c
 83c:	bx	r3

00000840 <dump_daq_get_capabilities>:
 840:	str	r4, [sp, #-8]!
 844:	str	lr, [sp, #4]
 848:	ldr	r3, [r0]
 84c:	ldr	r0, [r0, #4]
 850:	ldr	r3, [r3, #64]	; 0x40
 854:	blx	r3
 858:	ldr	r4, [sp]
 85c:	add	sp, sp, #4
 860:	orr	r0, r0, #7
 864:	pop	{pc}		; (ldr pc, [sp], #4)

00000868 <dump_daq_get_datalink_type>:
 868:	ldr	r3, [r0]
 86c:	ldr	r0, [r0, #4]
 870:	ldr	r3, [r3, #68]	; 0x44
 874:	bx	r3

00000878 <dump_daq_get_errbuf>:
 878:	ldr	r3, [r0]
 87c:	ldr	r0, [r0, #4]
 880:	ldr	r3, [r3, #72]	; 0x48
 884:	bx	r3

00000888 <dump_daq_set_errbuf>:
 888:	ldr	r3, [r0]
 88c:	cmp	r1, #0
 890:	ldr	r0, [r0, #4]
 894:	ldr	r3, [r3, #76]	; 0x4c
 898:	beq	8a0 <dump_daq_set_errbuf+0x18>
 89c:	bx	r3
 8a0:	ldr	r1, [pc, #4]	; 8ac <dump_daq_set_errbuf+0x24>
 8a4:	add	r1, pc, r1
 8a8:	bx	r3
 8ac:	.word	0x00000670

000008b0 <dump_daq_get_device_index>:
 8b0:	ldr	r3, [r0]
 8b4:	ldr	r0, [r0, #4]
 8b8:	ldr	r3, [r3, #80]	; 0x50
 8bc:	bx	r3

000008c0 <dump_daq_reset_stats>:
 8c0:	str	r4, [sp, #-8]!
 8c4:	mov	r4, r0
 8c8:	str	lr, [sp, #4]
 8cc:	ldr	r3, [r4], #24
 8d0:	ldr	r0, [r0, #4]
 8d4:	ldr	r3, [r3, #56]	; 0x38
 8d8:	blx	r3
 8dc:	mov	r0, r4
 8e0:	mov	r2, #96	; 0x60
 8e4:	ldr	r4, [sp]
 8e8:	mov	r1, #0
 8ec:	ldr	lr, [sp, #4]
 8f0:	add	sp, sp, #8
 8f4:	b	60c <memset@plt>

000008f8 <dump_daq_shutdown>:
 8f8:	str	r4, [sp, #-8]!
 8fc:	mov	r4, r0
 900:	str	lr, [sp, #4]
 904:	ldr	r3, [r0]
 908:	ldr	r0, [r0, #4]
 90c:	ldr	r3, [r3, #44]	; 0x2c
 910:	blx	r3
 914:	ldr	r0, [r4, #12]
 918:	cmp	r0, #0
 91c:	beq	924 <dump_daq_shutdown+0x2c>
 920:	bl	594 <free@plt>
 924:	mov	r0, r4
 928:	ldr	r4, [sp]
 92c:	ldr	lr, [sp, #4]
 930:	add	sp, sp, #8
 934:	b	594 <free@plt>

00000938 <daq_dump_capture>:
 938:	strd	r4, [sp, #-24]!	; 0xffffffe8
 93c:	mov	r4, r0
 940:	strd	r6, [sp, #8]
 944:	mov	r6, r1
 948:	mov	r7, r2
 94c:	str	r8, [sp, #16]
 950:	str	lr, [sp, #20]
 954:	ldr	r3, [r0, #16]
 958:	ldr	r0, [r0, #20]
 95c:	blx	r3
 960:	cmp	r0, #6
 964:	bhi	9c4 <daq_dump_capture+0x8c>
 968:	mov	r5, r0
 96c:	ldr	r0, [pc, #112]	; 9e4 <daq_dump_capture+0xac>
 970:	add	r2, r4, r5, lsl #3
 974:	ldr	r3, [r2, #64]	; 0x40
 978:	add	r0, pc, r0
 97c:	ldr	r1, [r2, #68]	; 0x44
 980:	ldr	r0, [r0, r5, lsl #2]
 984:	adds	r3, r3, #1
 988:	adc	r1, r1, #0
 98c:	str	r3, [r2, #64]	; 0x40
 990:	cmp	r0, #0
 994:	str	r1, [r2, #68]	; 0x44
 998:	beq	9ac <daq_dump_capture+0x74>
 99c:	mov	r2, r7
 9a0:	mov	r1, r6
 9a4:	ldr	r0, [r4, #8]
 9a8:	bl	5dc <pcap_dump@plt>
 9ac:	mov	r0, r5
 9b0:	ldrd	r4, [sp]
 9b4:	ldrd	r6, [sp, #8]
 9b8:	ldr	r8, [sp, #16]
 9bc:	add	sp, sp, #20
 9c0:	pop	{pc}		; (ldr pc, [sp], #4)
 9c4:	ldr	r3, [r4, #72]	; 0x48
 9c8:	mov	r5, #1
 9cc:	ldr	r2, [r4, #76]	; 0x4c
 9d0:	adds	r3, r3, r5
 9d4:	adc	r2, r2, #0
 9d8:	str	r3, [r4, #72]	; 0x48
 9dc:	str	r2, [r4, #76]	; 0x4c
 9e0:	b	9ac <daq_dump_capture+0x74>
 9e4:	.word	0x000004d0

000009e8 <dump_daq_start>:
 9e8:	strd	r4, [sp, #-24]!	; 0xffffffe8
 9ec:	mov	r4, r0
 9f0:	strd	r6, [sp, #8]
 9f4:	str	r8, [sp, #16]
 9f8:	str	lr, [sp, #20]
 9fc:	ldr	r5, [r0, #12]
 a00:	cmp	r5, #0
 a04:	beq	a90 <dump_daq_start+0xa8>
 a08:	ldr	r3, [r4]
 a0c:	ldr	r0, [r4, #4]
 a10:	ldr	r3, [r3, #24]
 a14:	blx	r3
 a18:	subs	r6, r0, #0
 a1c:	bne	a78 <dump_daq_start+0x90>
 a20:	ldr	r3, [r4]
 a24:	ldr	r0, [r4, #4]
 a28:	ldr	r3, [r3, #68]	; 0x44
 a2c:	blx	r3
 a30:	ldr	r3, [r4]
 a34:	mov	r7, r0
 a38:	ldr	r0, [r4, #4]
 a3c:	ldr	r3, [r3, #60]	; 0x3c
 a40:	blx	r3
 a44:	mov	r1, r0
 a48:	mov	r0, r7
 a4c:	bl	5d0 <pcap_open_dead@plt>
 a50:	subs	r7, r0, #0
 a54:	streq	r7, [r4, #8]
 a58:	beq	a9c <dump_daq_start+0xb4>
 a5c:	mov	r1, r5
 a60:	bl	624 <pcap_dump_open@plt>
 a64:	cmp	r0, #0
 a68:	str	r0, [r4, #8]
 a6c:	beq	a9c <dump_daq_start+0xb4>
 a70:	mov	r0, r7
 a74:	bl	5b8 <pcap_close@plt>
 a78:	mov	r0, r6
 a7c:	ldrd	r4, [sp]
 a80:	ldrd	r6, [sp, #8]
 a84:	ldr	r8, [sp, #16]
 a88:	add	sp, sp, #20
 a8c:	pop	{pc}		; (ldr pc, [sp], #4)
 a90:	ldr	r5, [pc, #52]	; acc <dump_daq_start+0xe4>
 a94:	add	r5, pc, r5
 a98:	b	a08 <dump_daq_start+0x20>
 a9c:	ldr	r3, [r4]
 aa0:	mvn	r6, #0
 aa4:	ldr	r0, [r4, #4]
 aa8:	ldr	r3, [r3, #40]	; 0x28
 aac:	blx	r3
 ab0:	ldr	r1, [pc, #24]	; ad0 <dump_daq_start+0xe8>
 ab4:	ldr	r3, [r4]
 ab8:	ldr	r0, [r4, #4]
 abc:	add	r1, pc, r1
 ac0:	ldr	r3, [r3, #76]	; 0x4c
 ac4:	blx	r3
 ac8:	b	a78 <dump_daq_start+0x90>
 acc:	.word	0x000003e4
 ad0:	.word	0x000003cc

00000ad4 <dump_daq_stop>:
 ad4:	strd	r4, [sp, #-16]!
 ad8:	mov	r4, r0
 adc:	str	r6, [sp, #8]
 ae0:	str	lr, [sp, #12]
 ae4:	ldr	r3, [r0]
 ae8:	ldr	r0, [r0, #4]
 aec:	ldr	r3, [r3, #40]	; 0x28
 af0:	blx	r3
 af4:	subs	r5, r0, #0
 af8:	bne	b10 <dump_daq_stop+0x3c>
 afc:	ldr	r0, [r4, #8]
 b00:	cmp	r0, #0
 b04:	beq	b10 <dump_daq_stop+0x3c>
 b08:	bl	618 <pcap_dump_close@plt>
 b0c:	str	r5, [r4, #8]
 b10:	mov	r0, r5
 b14:	ldrd	r4, [sp]
 b18:	ldr	r6, [sp, #8]
 b1c:	add	sp, sp, #12
 b20:	pop	{pc}		; (ldr pc, [sp], #4)

00000b24 <dump_daq_inject>:
 b24:	strd	r4, [sp, #-24]!	; 0xffffffe8
 b28:	mov	ip, r1
 b2c:	strd	r6, [sp, #8]
 b30:	str	r8, [sp, #16]
 b34:	mov	r8, r0
 b38:	str	lr, [sp, #20]
 b3c:	sub	sp, sp, #56	; 0x38
 b40:	ldrd	r4, [r1]
 b44:	add	lr, sp, #4
 b48:	ldrd	r6, [r1, #16]
 b4c:	mov	r1, lr
 b50:	ldr	r0, [r0, #8]
 b54:	strd	r4, [sp, #4]
 b58:	ldrd	r4, [ip, #24]
 b5c:	str	r3, [sp, #12]
 b60:	str	r3, [sp, #16]
 b64:	strd	r6, [sp, #20]
 b68:	ldrd	r6, [ip, #32]
 b6c:	strd	r4, [sp, #28]
 b70:	ldrd	r4, [ip, #40]	; 0x28
 b74:	ldr	r3, [ip, #48]	; 0x30
 b78:	strd	r6, [sp, #36]	; 0x24
 b7c:	strd	r4, [sp, #44]	; 0x2c
 b80:	str	r3, [sp, #52]	; 0x34
 b84:	bl	5dc <pcap_dump@plt>
 b88:	ldr	r0, [r8, #8]
 b8c:	bl	600 <pcap_dump_file@plt>
 b90:	bl	5a0 <ferror@plt>
 b94:	cmp	r0, #0
 b98:	bne	bcc <dump_daq_inject+0xa8>
 b9c:	ldr	r3, [r8, #56]	; 0x38
 ba0:	ldr	r2, [r8, #60]	; 0x3c
 ba4:	adds	r3, r3, #1
 ba8:	adc	r2, r2, #0
 bac:	str	r3, [r8, #56]	; 0x38
 bb0:	str	r2, [r8, #60]	; 0x3c
 bb4:	add	sp, sp, #56	; 0x38
 bb8:	ldrd	r4, [sp]
 bbc:	ldrd	r6, [sp, #8]
 bc0:	ldr	r8, [sp, #16]
 bc4:	add	sp, sp, #20
 bc8:	pop	{pc}		; (ldr pc, [sp], #4)
 bcc:	ldr	r1, [pc, #24]	; bec <dump_daq_inject+0xc8>
 bd0:	ldr	r3, [r8]
 bd4:	ldr	r0, [r8, #4]
 bd8:	add	r1, pc, r1
 bdc:	ldr	r3, [r3, #76]	; 0x4c
 be0:	blx	r3
 be4:	mvn	r0, #0
 be8:	b	bb4 <dump_daq_inject+0x90>
 bec:	.word	0x000002c8

00000bf0 <dump_daq_initialize>:
 bf0:	strd	r4, [sp, #-36]!	; 0xffffffdc
 bf4:	mov	r4, r0
 bf8:	mov	r0, #1
 bfc:	strd	r6, [sp, #8]
 c00:	strd	r8, [sp, #16]
 c04:	mov	r9, r2
 c08:	strd	sl, [sp, #24]
 c0c:	mov	sl, r3
 c10:	str	lr, [sp, #32]
 c14:	sub	sp, sp, #52	; 0x34
 c18:	add	r6, sp, #20
 c1c:	str	r1, [sp, #12]
 c20:	mov	r1, #120	; 0x78
 c24:	bl	570 <calloc@plt>
 c28:	ldrd	r2, [r4, #8]
 c2c:	subs	r7, r0, #0
 c30:	ldrd	r0, [r4]
 c34:	ldr	r5, [r4, #24]
 c38:	strd	r2, [r6, #8]
 c3c:	ldrd	r2, [r4, #16]
 c40:	strd	r0, [sp, #20]
 c44:	strd	r2, [r6, #16]
 c48:	str	r5, [r6, #24]
 c4c:	beq	df8 <dump_daq_initialize+0x208>
 c50:	cmp	r5, #0
 c54:	beq	dc8 <dump_daq_initialize+0x1d8>
 c58:	ldr	r3, [r5, #12]
 c5c:	tst	r3, #1
 c60:	beq	dc8 <dump_daq_initialize+0x1d8>
 c64:	ldr	r4, [sp, #40]	; 0x28
 c68:	cmp	r4, #0
 c6c:	beq	d48 <dump_daq_initialize+0x158>
 c70:	ldr	r3, [pc, #424]	; e20 <dump_daq_initialize+0x230>
 c74:	mov	r8, #0
 c78:	add	r3, pc, r3
 c7c:	str	r3, [sp, #4]
 c80:	ldr	r3, [pc, #412]	; e24 <dump_daq_initialize+0x234>
 c84:	add	r3, pc, r3
 c88:	str	r3, [sp, #8]
 c8c:	b	ca0 <dump_daq_initialize+0xb0>
 c90:	ldr	r8, [r4, #4]
 c94:	ldr	r4, [r4, #8]
 c98:	cmp	r4, #0
 c9c:	beq	ce4 <dump_daq_initialize+0xf4>
 ca0:	ldr	fp, [r4]
 ca4:	ldr	r1, [sp, #4]
 ca8:	mov	r0, fp
 cac:	bl	57c <strcmp@plt>
 cb0:	cmp	r0, #0
 cb4:	mov	r0, fp
 cb8:	ldr	r1, [sp, #8]
 cbc:	beq	c90 <dump_daq_initialize+0xa0>
 cc0:	bl	57c <strcmp@plt>
 cc4:	cmp	r0, #0
 cc8:	bne	c94 <dump_daq_initialize+0xa4>
 ccc:	ldr	r0, [r4, #4]
 cd0:	bl	5ac <strdup@plt>
 cd4:	str	r0, [r7, #12]
 cd8:	ldr	r4, [r4, #8]
 cdc:	cmp	r4, #0
 ce0:	bne	ca0 <dump_daq_initialize+0xb0>
 ce4:	cmp	r8, #0
 ce8:	beq	d48 <dump_daq_initialize+0x158>
 cec:	ldr	r1, [pc, #308]	; e28 <dump_daq_initialize+0x238>
 cf0:	mov	r0, r8
 cf4:	add	r1, pc, r1
 cf8:	bl	5c4 <strcasecmp@plt>
 cfc:	cmp	r0, #0
 d00:	moveq	r3, #2
 d04:	streq	r3, [sp, #32]
 d08:	beq	d48 <dump_daq_initialize+0x158>
 d0c:	ldr	r1, [pc, #280]	; e2c <dump_daq_initialize+0x23c>
 d10:	mov	r0, r8
 d14:	add	r1, pc, r1
 d18:	bl	5c4 <strcasecmp@plt>
 d1c:	cmp	r0, #0
 d20:	streq	r4, [sp, #32]
 d24:	beq	d48 <dump_daq_initialize+0x158>
 d28:	ldr	r1, [pc, #256]	; e30 <dump_daq_initialize+0x240>
 d2c:	mov	r0, r8
 d30:	add	r1, pc, r1
 d34:	bl	5c4 <strcasecmp@plt>
 d38:	cmp	r0, #0
 d3c:	moveq	r3, #1
 d40:	streq	r3, [sp, #32]
 d44:	bne	d94 <dump_daq_initialize+0x1a4>
 d48:	mov	r3, sl
 d4c:	mov	r2, r9
 d50:	ldr	r4, [r5, #16]
 d54:	mov	r0, r6
 d58:	add	r1, r7, #4
 d5c:	blx	r4
 d60:	subs	r4, r0, #0
 d64:	bne	dbc <dump_daq_initialize+0x1cc>
 d68:	ldr	r3, [sp, #12]
 d6c:	str	r5, [r7]
 d70:	str	r7, [r3]
 d74:	mov	r0, r4
 d78:	add	sp, sp, #52	; 0x34
 d7c:	ldrd	r4, [sp]
 d80:	ldrd	r6, [sp, #8]
 d84:	ldrd	r8, [sp, #16]
 d88:	ldrd	sl, [sp, #24]
 d8c:	add	sp, sp, #32
 d90:	pop	{pc}		; (ldr pc, [sp], #4)
 d94:	ldr	r2, [pc, #152]	; e34 <dump_daq_initialize+0x244>
 d98:	mov	r3, r8
 d9c:	mov	r1, sl
 da0:	mov	r0, r9
 da4:	mvn	r4, #0
 da8:	add	r2, pc, r2
 dac:	bl	5f4 <snprintf@plt>
 db0:	mov	r0, r7
 db4:	bl	594 <free@plt>
 db8:	b	d74 <dump_daq_initialize+0x184>
 dbc:	mov	r0, r7
 dc0:	bl	594 <free@plt>
 dc4:	b	d74 <dump_daq_initialize+0x184>
 dc8:	ldr	r3, [pc, #104]	; e38 <dump_daq_initialize+0x248>
 dcc:	mov	r1, sl
 dd0:	mov	r0, r9
 dd4:	mvn	r4, #0
 dd8:	ldr	r2, [pc, #92]	; e3c <dump_daq_initialize+0x24c>
 ddc:	add	r3, pc, r3
 de0:	add	r3, r3, #28
 de4:	add	r2, pc, r2
 de8:	bl	5f4 <snprintf@plt>
 dec:	mov	r0, r7
 df0:	bl	594 <free@plt>
 df4:	b	d74 <dump_daq_initialize+0x184>
 df8:	ldr	r3, [pc, #64]	; e40 <dump_daq_initialize+0x250>
 dfc:	mov	r1, sl
 e00:	mov	r0, r9
 e04:	mvn	r4, #1
 e08:	ldr	r2, [pc, #52]	; e44 <dump_daq_initialize+0x254>
 e0c:	add	r3, pc, r3
 e10:	add	r3, r3, #28
 e14:	add	r2, pc, r2
 e18:	bl	5f4 <snprintf@plt>
 e1c:	b	d74 <dump_daq_initialize+0x184>
 e20:	.word	0x000002a0
 e24:	.word	0x00000214
 e28:	.word	0x00000230
 e2c:	.word	0x0000021c
 e30:	.word	0x00000208
 e34:	.word	0x00000198
 e38:	.word	0x0000006c
 e3c:	.word	0x00000110
 e40:	.word	0x0000003c
 e44:	.word	0x000000ac

Disassembly of section .fini:

00000e48 <_fini>:
 e48:	push	{r3, lr}
 e4c:	pop	{r3, pc}
