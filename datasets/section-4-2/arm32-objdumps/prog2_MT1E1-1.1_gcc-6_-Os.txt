
../repos/prog2/MT1E1-1.1:     file format elf32-littlearm


Disassembly of section .init:

00010b14 <.init>:
   10b14:	push	{r3, lr}
   10b18:	bl	10da0 <_start@@Base+0x3c>
   10b1c:	pop	{r3, pc}

Disassembly of section .plt:

00010b20 <calloc@plt-0x14>:
   10b20:	push	{lr}		; (str lr, [sp, #-4]!)
   10b24:	ldr	lr, [pc, #4]	; 10b30 <calloc@plt-0x4>
   10b28:	add	lr, pc, lr
   10b2c:	ldr	pc, [lr, #8]!
   10b30:	ldrdeq	r1, [r1], -r0

00010b34 <calloc@plt>:
   10b34:	add	ip, pc, #0, 12
   10b38:	add	ip, ip, #69632	; 0x11000
   10b3c:	ldr	pc, [ip, #1232]!	; 0x4d0

00010b40 <strcmp@plt>:
   10b40:	add	ip, pc, #0, 12
   10b44:	add	ip, ip, #69632	; 0x11000
   10b48:	ldr	pc, [ip, #1224]!	; 0x4c8

00010b4c <printf@plt>:
   10b4c:	add	ip, pc, #0, 12
   10b50:	add	ip, ip, #69632	; 0x11000
   10b54:	ldr	pc, [ip, #1216]!	; 0x4c0

00010b58 <fopen@plt>:
   10b58:	add	ip, pc, #0, 12
   10b5c:	add	ip, ip, #69632	; 0x11000
   10b60:	ldr	pc, [ip, #1208]!	; 0x4b8

00010b64 <free@plt>:
   10b64:	add	ip, pc, #0, 12
   10b68:	add	ip, ip, #69632	; 0x11000
   10b6c:	ldr	pc, [ip, #1200]!	; 0x4b0

00010b70 <fgets@plt>:
   10b70:	add	ip, pc, #0, 12
   10b74:	add	ip, ip, #69632	; 0x11000
   10b78:	ldr	pc, [ip, #1192]!	; 0x4a8

00010b7c <realloc@plt>:
   10b7c:	add	ip, pc, #0, 12
   10b80:	add	ip, ip, #69632	; 0x11000
   10b84:	ldr	pc, [ip, #1184]!	; 0x4a0

00010b88 <strcpy@plt>:
   10b88:	add	ip, pc, #0, 12
   10b8c:	add	ip, ip, #69632	; 0x11000
   10b90:	ldr	pc, [ip, #1176]!	; 0x498

00010b94 <puts@plt>:
   10b94:	add	ip, pc, #0, 12
   10b98:	add	ip, ip, #69632	; 0x11000
   10b9c:	ldr	pc, [ip, #1168]!	; 0x490

00010ba0 <malloc@plt>:
   10ba0:	add	ip, pc, #0, 12
   10ba4:	add	ip, ip, #69632	; 0x11000
   10ba8:	ldr	pc, [ip, #1160]!	; 0x488

00010bac <__libc_start_main@plt>:
   10bac:	add	ip, pc, #0, 12
   10bb0:	add	ip, ip, #69632	; 0x11000
   10bb4:	ldr	pc, [ip, #1152]!	; 0x480

00010bb8 <__gmon_start__@plt>:
   10bb8:	add	ip, pc, #0, 12
   10bbc:	add	ip, ip, #69632	; 0x11000
   10bc0:	ldr	pc, [ip, #1144]!	; 0x478

00010bc4 <feof@plt>:
   10bc4:	add	ip, pc, #0, 12
   10bc8:	add	ip, ip, #69632	; 0x11000
   10bcc:	ldr	pc, [ip, #1136]!	; 0x470

00010bd0 <strlen@plt>:
   10bd0:	add	ip, pc, #0, 12
   10bd4:	add	ip, ip, #69632	; 0x11000
   10bd8:	ldr	pc, [ip, #1128]!	; 0x468

00010bdc <strchr@plt>:
   10bdc:	add	ip, pc, #0, 12
   10be0:	add	ip, ip, #69632	; 0x11000
   10be4:	ldr	pc, [ip, #1120]!	; 0x460

00010be8 <fclose@plt>:
   10be8:	add	ip, pc, #0, 12
   10bec:	add	ip, ip, #69632	; 0x11000
   10bf0:	ldr	pc, [ip, #1112]!	; 0x458

00010bf4 <atoi@plt>:
   10bf4:	add	ip, pc, #0, 12
   10bf8:	add	ip, ip, #69632	; 0x11000
   10bfc:	ldr	pc, [ip, #1104]!	; 0x450

00010c00 <abort@plt>:
   10c00:	add	ip, pc, #0, 12
   10c04:	add	ip, ip, #69632	; 0x11000
   10c08:	ldr	pc, [ip, #1096]!	; 0x448

Disassembly of section .text:

00010c0c <main@@Base>:
   10c0c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10c10:	ldr	r1, [pc, #292]	; 10d3c <main@@Base+0x130>
   10c14:	ldr	r0, [pc, #292]	; 10d40 <main@@Base+0x134>
   10c18:	bl	10b58 <fopen@plt>
   10c1c:	ldr	r1, [pc, #280]	; 10d3c <main@@Base+0x130>
   10c20:	mov	r8, r0
   10c24:	ldr	r0, [pc, #280]	; 10d44 <main@@Base+0x138>
   10c28:	bl	10b58 <fopen@plt>
   10c2c:	ldr	r1, [pc, #264]	; 10d3c <main@@Base+0x130>
   10c30:	mov	r7, r0
   10c34:	ldr	r0, [pc, #268]	; 10d48 <main@@Base+0x13c>
   10c38:	bl	10b58 <fopen@plt>
   10c3c:	mov	r6, r0
   10c40:	mov	r0, r8
   10c44:	bl	11010 <lerAtores@@Base>
   10c48:	mov	r4, r0
   10c4c:	mov	r0, r7
   10c50:	bl	11088 <lerFilmes@@Base>
   10c54:	mov	r5, r0
   10c58:	mov	r0, r6
   10c5c:	bl	11088 <lerFilmes@@Base>
   10c60:	mov	r9, r0
   10c64:	mov	r0, r4
   10c68:	bl	11200 <vetor_tamanho@@Base>
   10c6c:	mov	r1, r0
   10c70:	ldr	r0, [pc, #212]	; 10d4c <main@@Base+0x140>
   10c74:	bl	10b4c <printf@plt>
   10c78:	mov	r0, r4
   10c7c:	bl	10e8c <retira_duplicados@@Base>
   10c80:	mov	r0, r4
   10c84:	bl	11200 <vetor_tamanho@@Base>
   10c88:	mov	r1, r0
   10c8c:	ldr	r0, [pc, #188]	; 10d50 <main@@Base+0x144>
   10c90:	bl	10b4c <printf@plt>
   10c94:	mov	r1, r9
   10c98:	mov	r0, r5
   10c9c:	bl	10f14 <interseta@@Base>
   10ca0:	subs	fp, r0, #0
   10ca4:	beq	10d24 <main@@Base+0x118>
   10ca8:	bl	11200 <vetor_tamanho@@Base>
   10cac:	mov	r1, r0
   10cb0:	ldr	r0, [pc, #156]	; 10d54 <main@@Base+0x148>
   10cb4:	bl	10b4c <printf@plt>
   10cb8:	mov	r1, #2000	; 0x7d0
   10cbc:	mov	r0, r5
   10cc0:	bl	10fb0 <anteriores@@Base>
   10cc4:	subs	sl, r0, #0
   10cc8:	beq	10d30 <main@@Base+0x124>
   10ccc:	bl	11200 <vetor_tamanho@@Base>
   10cd0:	mov	r1, r0
   10cd4:	ldr	r0, [pc, #124]	; 10d58 <main@@Base+0x14c>
   10cd8:	bl	10b4c <printf@plt>
   10cdc:	mov	r0, r4
   10ce0:	bl	11124 <vetor_apaga@@Base>
   10ce4:	mov	r0, fp
   10ce8:	bl	11124 <vetor_apaga@@Base>
   10cec:	mov	r0, sl
   10cf0:	bl	11124 <vetor_apaga@@Base>
   10cf4:	mov	r0, r5
   10cf8:	bl	114d8 <lista_apaga@@Base>
   10cfc:	mov	r0, r9
   10d00:	bl	114d8 <lista_apaga@@Base>
   10d04:	mov	r0, r8
   10d08:	bl	10be8 <fclose@plt>
   10d0c:	mov	r0, r7
   10d10:	bl	10be8 <fclose@plt>
   10d14:	mov	r0, r6
   10d18:	bl	10be8 <fclose@plt>
   10d1c:	mov	r0, #0
   10d20:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10d24:	ldr	r0, [pc, #48]	; 10d5c <main@@Base+0x150>
   10d28:	bl	10b94 <puts@plt>
   10d2c:	b	10cb8 <main@@Base+0xac>
   10d30:	ldr	r0, [pc, #40]	; 10d60 <main@@Base+0x154>
   10d34:	bl	10b94 <puts@plt>
   10d38:	b	10cdc <main@@Base+0xd0>
   10d3c:	andeq	r1, r1, r0, asr #16
   10d40:	andeq	r1, r1, r2, asr #16
   10d44:	andeq	r1, r1, lr, asr #16
   10d48:	andeq	r1, r1, r9, asr r8
   10d4c:	andeq	r1, r1, r5, ror #16
   10d50:	andeq	r1, r1, r8, ror r8
   10d54:	muleq	r1, r4, r8
   10d58:	andeq	r1, r1, sl, asr #17
   10d5c:			; <UNDEFINED> instruction: 0x000118b3
   10d60:	andeq	r1, r1, fp, ror #17

00010d64 <_start@@Base>:
   10d64:	mov	fp, #0
   10d68:	mov	lr, #0
   10d6c:	pop	{r1}		; (ldr r1, [sp], #4)
   10d70:	mov	r2, sp
   10d74:	push	{r2}		; (str r2, [sp, #-4]!)
   10d78:	push	{r0}		; (str r0, [sp, #-4]!)
   10d7c:	ldr	ip, [pc, #16]	; 10d94 <_start@@Base+0x30>
   10d80:	push	{ip}		; (str ip, [sp, #-4]!)
   10d84:	ldr	r0, [pc, #12]	; 10d98 <_start@@Base+0x34>
   10d88:	ldr	r3, [pc, #12]	; 10d9c <_start@@Base+0x38>
   10d8c:	bl	10bac <__libc_start_main@plt>
   10d90:	bl	10c00 <abort@plt>
   10d94:	andeq	r1, r1, r0, lsr r8
   10d98:	andeq	r0, r1, ip, lsl #24
   10d9c:	ldrdeq	r1, [r1], -r0
   10da0:	ldr	r3, [pc, #20]	; 10dbc <_start@@Base+0x58>
   10da4:	ldr	r2, [pc, #20]	; 10dc0 <_start@@Base+0x5c>
   10da8:	add	r3, pc, r3
   10dac:	ldr	r2, [r3, r2]
   10db0:	cmp	r2, #0
   10db4:	bxeq	lr
   10db8:	b	10bb8 <__gmon_start__@plt>
   10dbc:	andeq	r1, r1, r0, asr r2
   10dc0:	andeq	r0, r0, r4, asr r0
   10dc4:	ldr	r3, [pc, #28]	; 10de8 <_start@@Base+0x84>
   10dc8:	ldr	r0, [pc, #28]	; 10dec <_start@@Base+0x88>
   10dcc:	sub	r3, r3, r0
   10dd0:	cmp	r3, #6
   10dd4:	bxls	lr
   10dd8:	ldr	r3, [pc, #16]	; 10df0 <_start@@Base+0x8c>
   10ddc:	cmp	r3, #0
   10de0:	bxeq	lr
   10de4:	bx	r3
   10de8:	andeq	r2, r2, r3, rrx
   10dec:	andeq	r2, r2, r0, rrx
   10df0:	andeq	r0, r0, r0
   10df4:	ldr	r1, [pc, #36]	; 10e20 <_start@@Base+0xbc>
   10df8:	ldr	r0, [pc, #36]	; 10e24 <_start@@Base+0xc0>
   10dfc:	sub	r1, r1, r0
   10e00:	asr	r1, r1, #2
   10e04:	add	r1, r1, r1, lsr #31
   10e08:	asrs	r1, r1, #1
   10e0c:	bxeq	lr
   10e10:	ldr	r3, [pc, #16]	; 10e28 <_start@@Base+0xc4>
   10e14:	cmp	r3, #0
   10e18:	bxeq	lr
   10e1c:	bx	r3
   10e20:	andeq	r2, r2, r0, rrx
   10e24:	andeq	r2, r2, r0, rrx
   10e28:	andeq	r0, r0, r0
   10e2c:	push	{r4, lr}
   10e30:	ldr	r4, [pc, #24]	; 10e50 <_start@@Base+0xec>
   10e34:	ldrb	r3, [r4]
   10e38:	cmp	r3, #0
   10e3c:	popne	{r4, pc}
   10e40:	bl	10dc4 <_start@@Base+0x60>
   10e44:	mov	r3, #1
   10e48:	strb	r3, [r4]
   10e4c:	pop	{r4, pc}
   10e50:	andeq	r2, r2, r0, rrx
   10e54:	ldr	r0, [pc, #40]	; 10e84 <_start@@Base+0x120>
   10e58:	ldr	r3, [r0]
   10e5c:	cmp	r3, #0
   10e60:	bne	10e68 <_start@@Base+0x104>
   10e64:	b	10df4 <_start@@Base+0x90>
   10e68:	ldr	r3, [pc, #24]	; 10e88 <_start@@Base+0x124>
   10e6c:	cmp	r3, #0
   10e70:	beq	10e64 <_start@@Base+0x100>
   10e74:	push	{r4, lr}
   10e78:	blx	r3
   10e7c:	pop	{r4, lr}
   10e80:	b	10df4 <_start@@Base+0x90>
   10e84:	andeq	r1, r2, r4, lsl pc
   10e88:	andeq	r0, r0, r0

00010e8c <retira_duplicados@@Base>:
   10e8c:	push	{r4, r5, r6, r7, r8, lr}
   10e90:	mov	r5, r0
   10e94:	mov	r6, #0
   10e98:	mov	r0, r5
   10e9c:	bl	11200 <vetor_tamanho@@Base>
   10ea0:	sub	r0, r0, #1
   10ea4:	cmp	r6, r0
   10ea8:	blt	10eb0 <retira_duplicados@@Base+0x24>
   10eac:	pop	{r4, r5, r6, r7, r8, pc}
   10eb0:	add	r7, r6, #1
   10eb4:	mov	r4, r7
   10eb8:	mov	r0, r5
   10ebc:	bl	11200 <vetor_tamanho@@Base>
   10ec0:	cmp	r4, r0
   10ec4:	movge	r6, r7
   10ec8:	bge	10e98 <retira_duplicados@@Base+0xc>
   10ecc:	mov	r1, r6
   10ed0:	mov	r0, r5
   10ed4:	bl	11210 <vetor_elemento@@Base>
   10ed8:	mov	r1, r4
   10edc:	mov	r8, r0
   10ee0:	mov	r0, r5
   10ee4:	bl	11210 <vetor_elemento@@Base>
   10ee8:	mov	r1, r0
   10eec:	mov	r0, r8
   10ef0:	bl	10b40 <strcmp@plt>
   10ef4:	cmp	r0, #0
   10ef8:	bne	10f0c <retira_duplicados@@Base+0x80>
   10efc:	mov	r1, r4
   10f00:	mov	r0, r5
   10f04:	bl	1131c <vetor_remove@@Base>
   10f08:	sub	r4, r4, #1
   10f0c:	add	r4, r4, #1
   10f10:	b	10eb8 <retira_duplicados@@Base+0x2c>

00010f14 <interseta@@Base>:
   10f14:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f18:	mov	r8, r0
   10f1c:	mov	r9, r1
   10f20:	bl	11100 <vetor_novo@@Base>
   10f24:	mov	r5, #0
   10f28:	ldr	r4, [r8]
   10f2c:	mov	r6, r5
   10f30:	mov	sl, r5
   10f34:	mov	r7, r0
   10f38:	ldr	r3, [r8, #8]
   10f3c:	cmp	r6, r3
   10f40:	cmpge	r4, #0
   10f44:	bne	10f50 <interseta@@Base+0x3c>
   10f48:	mov	r0, r7
   10f4c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10f50:	mov	r2, sl
   10f54:	ldr	r1, [r4]
   10f58:	mov	r0, r9
   10f5c:	bl	11644 <lista_pesquisa@@Base>
   10f60:	cmp	r0, #0
   10f64:	beq	10fa4 <interseta@@Base+0x90>
   10f68:	ldr	fp, [r4]
   10f6c:	mov	r2, sl
   10f70:	mov	r1, fp
   10f74:	mov	r0, r9
   10f78:	bl	11644 <lista_pesquisa@@Base>
   10f7c:	ldr	r1, [r0]
   10f80:	mov	r0, fp
   10f84:	bl	10b40 <strcmp@plt>
   10f88:	cmp	r0, #0
   10f8c:	bne	10fa4 <interseta@@Base+0x90>
   10f90:	mov	r2, r5
   10f94:	ldr	r1, [r4]
   10f98:	mov	r0, r7
   10f9c:	bl	11244 <vetor_insere@@Base>
   10fa0:	add	r5, r5, #1
   10fa4:	ldr	r4, [r4, #4]
   10fa8:	add	r6, r6, #1
   10fac:	b	10f38 <interseta@@Base+0x24>

00010fb0 <anteriores@@Base>:
   10fb0:	push	{r4, r5, r6, r7, r8, lr}
   10fb4:	mov	r4, r0
   10fb8:	mov	r7, r1
   10fbc:	bl	11100 <vetor_novo@@Base>
   10fc0:	ldr	r4, [r4]
   10fc4:	mov	r5, r0
   10fc8:	cmp	r4, #0
   10fcc:	bne	10fd8 <anteriores@@Base+0x28>
   10fd0:	mov	r0, r5
   10fd4:	pop	{r4, r5, r6, r7, r8, pc}
   10fd8:	ldr	r6, [r4]
   10fdc:	mov	r0, r6
   10fe0:	bl	10bd0 <strlen@plt>
   10fe4:	sub	r0, r0, #5
   10fe8:	add	r0, r6, r0
   10fec:	bl	10bf4 <atoi@plt>
   10ff0:	cmp	r0, r7
   10ff4:	bge	11008 <anteriores@@Base+0x58>
   10ff8:	ldr	r2, [r5]
   10ffc:	mov	r1, r6
   11000:	mov	r0, r5
   11004:	bl	11244 <vetor_insere@@Base>
   11008:	ldr	r4, [r4, #4]
   1100c:	b	10fc8 <anteriores@@Base+0x18>

00011010 <lerAtores@@Base>:
   11010:	push	{r4, r5, r6, r7, r8, lr}
   11014:	subs	r4, r0, #0
   11018:	sub	sp, sp, #256	; 0x100
   1101c:	beq	11044 <lerAtores@@Base+0x34>
   11020:	bl	11100 <vetor_novo@@Base>
   11024:	mov	r5, r4
   11028:	mov	r7, #255	; 0xff
   1102c:	mov	r8, #10
   11030:	mov	r4, r0
   11034:	mov	r0, r5
   11038:	bl	10bc4 <feof@plt>
   1103c:	subs	r6, r0, #0
   11040:	beq	11050 <lerAtores@@Base+0x40>
   11044:	mov	r0, r4
   11048:	add	sp, sp, #256	; 0x100
   1104c:	pop	{r4, r5, r6, r7, r8, pc}
   11050:	mov	r2, r5
   11054:	mov	r1, r7
   11058:	mov	r0, sp
   1105c:	bl	10b70 <fgets@plt>
   11060:	mov	r1, r8
   11064:	mov	r0, sp
   11068:	bl	10bdc <strchr@plt>
   1106c:	mov	r1, sp
   11070:	cmp	r0, #0
   11074:	strbne	r6, [r0]
   11078:	mov	r0, r4
   1107c:	ldr	r2, [r4]
   11080:	bl	11244 <vetor_insere@@Base>
   11084:	b	11034 <lerAtores@@Base+0x24>

00011088 <lerFilmes@@Base>:
   11088:	push	{r4, r5, r6, r7, r8, lr}
   1108c:	subs	r4, r0, #0
   11090:	sub	sp, sp, #256	; 0x100
   11094:	beq	110bc <lerFilmes@@Base+0x34>
   11098:	bl	114b4 <lista_nova@@Base>
   1109c:	mov	r5, r4
   110a0:	mov	r7, #255	; 0xff
   110a4:	mov	r8, #10
   110a8:	mov	r4, r0
   110ac:	mov	r0, r5
   110b0:	bl	10bc4 <feof@plt>
   110b4:	subs	r6, r0, #0
   110b8:	beq	110c8 <lerFilmes@@Base+0x40>
   110bc:	mov	r0, r4
   110c0:	add	sp, sp, #256	; 0x100
   110c4:	pop	{r4, r5, r6, r7, r8, pc}
   110c8:	mov	r2, r5
   110cc:	mov	r1, r7
   110d0:	mov	r0, sp
   110d4:	bl	10b70 <fgets@plt>
   110d8:	mov	r1, r8
   110dc:	mov	r0, sp
   110e0:	bl	10bdc <strchr@plt>
   110e4:	mov	r2, #0
   110e8:	mov	r1, sp
   110ec:	cmp	r0, #0
   110f0:	strbne	r6, [r0]
   110f4:	mov	r0, r4
   110f8:	bl	11540 <lista_insere@@Base>
   110fc:	b	110ac <lerFilmes@@Base+0x24>

00011100 <vetor_novo@@Base>:
   11100:	push	{r4, lr}
   11104:	mov	r0, #12
   11108:	bl	10ba0 <malloc@plt>
   1110c:	cmp	r0, #0
   11110:	movne	r3, #0
   11114:	strne	r3, [r0]
   11118:	strne	r3, [r0, #4]
   1111c:	strne	r3, [r0, #8]
   11120:	pop	{r4, pc}

00011124 <vetor_apaga@@Base>:
   11124:	push	{r4, r5, r6, lr}
   11128:	subs	r4, r0, #0
   1112c:	movne	r5, #0
   11130:	bne	11148 <vetor_apaga@@Base+0x24>
   11134:	pop	{r4, r5, r6, pc}
   11138:	ldr	r3, [r4, #8]
   1113c:	ldr	r0, [r3, r5, lsl #2]
   11140:	bl	10b64 <free@plt>
   11144:	add	r5, r5, #1
   11148:	ldr	r3, [r4]
   1114c:	cmp	r5, r3
   11150:	blt	11138 <vetor_apaga@@Base+0x14>
   11154:	ldr	r0, [r4, #8]
   11158:	bl	10b64 <free@plt>
   1115c:	mov	r0, r4
   11160:	pop	{r4, r5, r6, lr}
   11164:	b	10b64 <free@plt>

00011168 <vetor_atribui@@Base>:
   11168:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1116c:	mov	r5, r0
   11170:	clz	r0, r0
   11174:	lsr	r0, r0, #5
   11178:	orrs	r3, r0, r1, lsr #31
   1117c:	beq	1118c <vetor_atribui@@Base+0x24>
   11180:	mvn	r4, #0
   11184:	mov	r0, r4
   11188:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1118c:	ldr	r3, [r5]
   11190:	mov	r4, r1
   11194:	cmp	r1, r3
   11198:	bge	11180 <vetor_atribui@@Base+0x18>
   1119c:	mov	r0, r2
   111a0:	mov	r9, r2
   111a4:	bl	10bd0 <strlen@plt>
   111a8:	ldr	r6, [r5, #8]
   111ac:	lsl	sl, r4, #2
   111b0:	ldr	r7, [r6, r4, lsl #2]
   111b4:	mov	r8, r0
   111b8:	mov	r0, r7
   111bc:	bl	10bd0 <strlen@plt>
   111c0:	cmp	r8, r0
   111c4:	bhi	111dc <vetor_atribui@@Base+0x74>
   111c8:	ldr	r3, [r5, #8]
   111cc:	mov	r1, r9
   111d0:	ldr	r0, [r3, sl]
   111d4:	bl	10b88 <strcpy@plt>
   111d8:	b	11184 <vetor_atribui@@Base+0x1c>
   111dc:	add	r1, r8, #1
   111e0:	mov	r0, r7
   111e4:	bl	10b7c <realloc@plt>
   111e8:	ldr	r3, [r5, #8]
   111ec:	str	r0, [r6, r4, lsl #2]
   111f0:	ldr	r3, [r3, r4, lsl #2]
   111f4:	cmp	r3, #0
   111f8:	bne	111c8 <vetor_atribui@@Base+0x60>
   111fc:	b	11180 <vetor_atribui@@Base+0x18>

00011200 <vetor_tamanho@@Base>:
   11200:	cmp	r0, #0
   11204:	ldrne	r0, [r0]
   11208:	mvneq	r0, #0
   1120c:	bx	lr

00011210 <vetor_elemento@@Base>:
   11210:	lsr	r3, r1, #31
   11214:	cmp	r0, #0
   11218:	orreq	r3, r3, #1
   1121c:	cmp	r3, #0
   11220:	bne	1123c <vetor_elemento@@Base+0x2c>
   11224:	ldr	r2, [r0]
   11228:	cmp	r1, r2
   1122c:	bge	1123c <vetor_elemento@@Base+0x2c>
   11230:	ldr	r3, [r0, #8]
   11234:	ldr	r0, [r3, r1, lsl #2]
   11238:	bx	lr
   1123c:	mov	r0, #0
   11240:	bx	lr

00011244 <vetor_insere@@Base>:
   11244:	push	{r4, r5, r6, r7, r8, lr}
   11248:	mov	r4, r0
   1124c:	clz	r0, r0
   11250:	lsr	r0, r0, #5
   11254:	orrs	r3, r0, r2, lsr #31
   11258:	beq	11268 <vetor_insere@@Base+0x24>
   1125c:	mvn	r5, #0
   11260:	mov	r0, r5
   11264:	pop	{r4, r5, r6, r7, r8, pc}
   11268:	ldr	r3, [r4]
   1126c:	mov	r5, r2
   11270:	cmp	r2, r3
   11274:	bgt	1125c <vetor_insere@@Base+0x18>
   11278:	ldr	r2, [r4, #4]
   1127c:	mov	r8, r1
   11280:	cmp	r3, r2
   11284:	beq	112d8 <vetor_insere@@Base+0x94>
   11288:	ldr	r6, [r4]
   1128c:	sub	r3, r6, #1
   11290:	lsl	r2, r6, #2
   11294:	cmp	r3, r5
   11298:	sub	r1, r2, #4
   1129c:	ldr	r7, [r4, #8]
   112a0:	bge	11308 <vetor_insere@@Base+0xc4>
   112a4:	mov	r0, r8
   112a8:	bl	10bd0 <strlen@plt>
   112ac:	mov	r1, #1
   112b0:	add	r0, r0, r1
   112b4:	bl	10b34 <calloc@plt>
   112b8:	cmp	r0, #0
   112bc:	str	r0, [r7, r5, lsl #2]
   112c0:	beq	1125c <vetor_insere@@Base+0x18>
   112c4:	mov	r1, r8
   112c8:	add	r6, r6, #1
   112cc:	bl	10b88 <strcpy@plt>
   112d0:	str	r6, [r4]
   112d4:	b	11260 <vetor_insere@@Base+0x1c>
   112d8:	cmp	r3, #0
   112dc:	moveq	r3, #1
   112e0:	lslne	r3, r3, #1
   112e4:	str	r3, [r4, #4]
   112e8:	ldr	r1, [r4, #4]
   112ec:	ldr	r0, [r4, #8]
   112f0:	lsl	r1, r1, #2
   112f4:	bl	10b7c <realloc@plt>
   112f8:	cmp	r0, #0
   112fc:	str	r0, [r4, #8]
   11300:	bne	11288 <vetor_insere@@Base+0x44>
   11304:	b	1125c <vetor_insere@@Base+0x18>
   11308:	ldr	r0, [r7, r1]
   1130c:	sub	r3, r3, #1
   11310:	str	r0, [r7, r2]
   11314:	mov	r2, r1
   11318:	b	11294 <vetor_insere@@Base+0x50>

0001131c <vetor_remove@@Base>:
   1131c:	push	{r4, r5, r6, lr}
   11320:	mov	r5, r0
   11324:	clz	r0, r0
   11328:	lsr	r0, r0, #5
   1132c:	orrs	r3, r0, r1, lsr #31
   11330:	bne	11394 <vetor_remove@@Base+0x78>
   11334:	ldr	r3, [r5]
   11338:	cmp	r1, r3
   1133c:	bge	11394 <vetor_remove@@Base+0x78>
   11340:	ldr	r3, [r5, #8]
   11344:	mov	r4, r1
   11348:	lsl	r6, r1, #2
   1134c:	ldr	r0, [r3, r1, lsl #2]
   11350:	bl	10b64 <free@plt>
   11354:	add	r4, r4, #1
   11358:	mov	r3, r6
   1135c:	ldr	r2, [r5]
   11360:	add	r1, r3, #4
   11364:	cmp	r4, r2
   11368:	blt	1137c <vetor_remove@@Base+0x60>
   1136c:	sub	r2, r2, #1
   11370:	str	r2, [r5]
   11374:	mov	r0, #0
   11378:	pop	{r4, r5, r6, pc}
   1137c:	ldr	r2, [r5, #8]
   11380:	add	r4, r4, #1
   11384:	ldr	r0, [r2, r1]
   11388:	str	r0, [r2, r3]
   1138c:	mov	r3, r1
   11390:	b	1135c <vetor_remove@@Base+0x40>
   11394:	mvn	r0, #0
   11398:	pop	{r4, r5, r6, pc}

0001139c <vetor_pesquisa@@Base>:
   1139c:	push	{r4, r5, r6, r7, r8, lr}
   113a0:	subs	r5, r0, #0
   113a4:	movne	r6, r1
   113a8:	ldrne	r7, [r5]
   113ac:	movne	r4, #0
   113b0:	bne	113dc <vetor_pesquisa@@Base+0x40>
   113b4:	mvn	r4, #0
   113b8:	mov	r0, r4
   113bc:	pop	{r4, r5, r6, r7, r8, pc}
   113c0:	ldr	r3, [r5, #8]
   113c4:	mov	r1, r6
   113c8:	ldr	r0, [r3, r4, lsl #2]
   113cc:	bl	10b40 <strcmp@plt>
   113d0:	cmp	r0, #0
   113d4:	beq	113b8 <vetor_pesquisa@@Base+0x1c>
   113d8:	add	r4, r4, #1
   113dc:	cmp	r4, r7
   113e0:	blt	113c0 <vetor_pesquisa@@Base+0x24>
   113e4:	b	113b4 <vetor_pesquisa@@Base+0x18>

000113e8 <vetor_ordena@@Base>:
   113e8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   113ec:	subs	r5, r0, #0
   113f0:	movne	r4, #1
   113f4:	bne	1143c <vetor_ordena@@Base+0x54>
   113f8:	mvn	r0, #0
   113fc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11400:	ldr	r8, [r5, #8]
   11404:	mov	r6, r4
   11408:	add	r7, r8, r4, lsl #2
   1140c:	ldr	r9, [r8, r4, lsl #2]
   11410:	ldr	r1, [r7, #-4]
   11414:	mov	r0, r9
   11418:	bl	10b40 <strcmp@plt>
   1141c:	cmp	r0, #0
   11420:	bge	11434 <vetor_ordena@@Base+0x4c>
   11424:	ldr	r3, [r7, #-4]!
   11428:	subs	r6, r6, #1
   1142c:	str	r3, [r7, #4]
   11430:	bne	11410 <vetor_ordena@@Base+0x28>
   11434:	add	r4, r4, #1
   11438:	str	r9, [r8, r6, lsl #2]
   1143c:	ldr	r3, [r5]
   11440:	cmp	r4, r3
   11444:	blt	11400 <vetor_ordena@@Base+0x18>
   11448:	mov	r0, #0
   1144c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00011450 <novo_str@@Base>:
   11450:	push	{r4, r5, r6, r7, r8, lr}
   11454:	mov	r7, r0
   11458:	mov	r0, #12
   1145c:	bl	10ba0 <malloc@plt>
   11460:	subs	r4, r0, #0
   11464:	beq	11498 <novo_str@@Base+0x48>
   11468:	mov	r0, r7
   1146c:	bl	10bd0 <strlen@plt>
   11470:	mov	r6, #0
   11474:	add	r0, r0, #1
   11478:	bl	10ba0 <malloc@plt>
   1147c:	cmp	r0, #0
   11480:	mov	r5, r0
   11484:	str	r0, [r4]
   11488:	bne	114a0 <novo_str@@Base+0x50>
   1148c:	mov	r0, r4
   11490:	bl	10b64 <free@plt>
   11494:	mov	r4, r5
   11498:	mov	r0, r4
   1149c:	pop	{r4, r5, r6, r7, r8, pc}
   114a0:	mov	r1, r7
   114a4:	bl	10b88 <strcpy@plt>
   114a8:	str	r6, [r4, #4]
   114ac:	str	r6, [r4, #8]
   114b0:	b	11498 <novo_str@@Base+0x48>

000114b4 <lista_nova@@Base>:
   114b4:	push	{r4, lr}
   114b8:	mov	r0, #12
   114bc:	bl	10ba0 <malloc@plt>
   114c0:	cmp	r0, #0
   114c4:	movne	r3, #0
   114c8:	strne	r3, [r0]
   114cc:	strne	r3, [r0, #4]
   114d0:	strne	r3, [r0, #8]
   114d4:	pop	{r4, pc}

000114d8 <lista_apaga@@Base>:
   114d8:	push	{r4, r5, r6, lr}
   114dc:	subs	r5, r0, #0
   114e0:	bne	11500 <lista_apaga@@Base+0x28>
   114e4:	pop	{r4, r5, r6, pc}
   114e8:	ldr	r3, [r4, #4]
   114ec:	ldr	r0, [r4]
   114f0:	str	r3, [r5]
   114f4:	bl	10b64 <free@plt>
   114f8:	mov	r0, r4
   114fc:	bl	10b64 <free@plt>
   11500:	ldr	r4, [r5]
   11504:	cmp	r4, #0
   11508:	bne	114e8 <lista_apaga@@Base+0x10>
   1150c:	mov	r0, r5
   11510:	pop	{r4, r5, r6, lr}
   11514:	b	10b64 <free@plt>

00011518 <lista_tamanho@@Base>:
   11518:	cmp	r0, #0
   1151c:	ldrne	r0, [r0, #8]
   11520:	mvneq	r0, #0
   11524:	bx	lr

00011528 <lista_inicio@@Base>:
   11528:	cmp	r0, #0
   1152c:	ldrne	r0, [r0]
   11530:	bx	lr

00011534 <lista_fim@@Base>:
   11534:	cmp	r0, #0
   11538:	ldrne	r0, [r0, #4]
   1153c:	bx	lr

00011540 <lista_insere@@Base>:
   11540:	cmp	r1, #0
   11544:	cmpne	r0, #0
   11548:	bne	1155c <lista_insere@@Base+0x1c>
   1154c:	mov	r0, #0
   11550:	bx	lr
   11554:	mov	r0, #0
   11558:	pop	{r4, r5, r6, pc}
   1155c:	push	{r4, r5, r6, lr}
   11560:	mov	r4, r0
   11564:	mov	r0, r1
   11568:	mov	r5, r2
   1156c:	bl	11450 <novo_str@@Base>
   11570:	cmp	r0, #0
   11574:	beq	11554 <lista_insere@@Base+0x14>
   11578:	ldr	r3, [r4, #8]
   1157c:	cmp	r5, #0
   11580:	add	r3, r3, #1
   11584:	str	r3, [r4, #8]
   11588:	ldr	r3, [r4]
   1158c:	bne	115b0 <lista_insere@@Base+0x70>
   11590:	cmp	r3, #0
   11594:	streq	r0, [r4, #4]
   11598:	beq	115c0 <lista_insere@@Base+0x80>
   1159c:	ldr	r3, [r4, #4]
   115a0:	str	r3, [r0, #8]
   115a4:	str	r0, [r3, #4]
   115a8:	str	r0, [r4, #4]
   115ac:	pop	{r4, r5, r6, pc}
   115b0:	cmp	r5, r3
   115b4:	bne	115c8 <lista_insere@@Base+0x88>
   115b8:	str	r5, [r0, #4]
   115bc:	str	r0, [r5, #8]
   115c0:	str	r0, [r4]
   115c4:	pop	{r4, r5, r6, pc}
   115c8:	ldr	r3, [r5, #8]
   115cc:	str	r5, [r0, #4]
   115d0:	str	r3, [r0, #8]
   115d4:	ldr	r3, [r5, #8]
   115d8:	str	r0, [r3, #4]
   115dc:	str	r0, [r5, #8]
   115e0:	pop	{r4, r5, r6, pc}

000115e4 <lista_remove@@Base>:
   115e4:	cmp	r1, #0
   115e8:	cmpne	r0, #0
   115ec:	push	{r4, r5, r6, lr}
   115f0:	moveq	r5, #0
   115f4:	beq	1163c <lista_remove@@Base+0x58>
   115f8:	ldr	r3, [r0, #8]
   115fc:	ldr	r2, [r1, #4]
   11600:	sub	r3, r3, #1
   11604:	str	r3, [r0, #8]
   11608:	ldr	r3, [r1, #8]
   1160c:	mov	r4, r1
   11610:	cmp	r3, #0
   11614:	strne	r2, [r3, #4]
   11618:	ldr	r5, [r1, #4]
   1161c:	streq	r2, [r0]
   11620:	cmp	r5, #0
   11624:	streq	r3, [r0, #4]
   11628:	strne	r3, [r5, #8]
   1162c:	ldr	r0, [r1]
   11630:	bl	10b64 <free@plt>
   11634:	mov	r0, r4
   11638:	bl	10b64 <free@plt>
   1163c:	mov	r0, r5
   11640:	pop	{r4, r5, r6, pc}

00011644 <lista_pesquisa@@Base>:
   11644:	cmp	r1, #0
   11648:	cmpne	r0, #0
   1164c:	push	{r4, r5, r6, lr}
   11650:	moveq	r4, #1
   11654:	movne	r4, #0
   11658:	moveq	r4, #0
   1165c:	beq	116c0 <lista_pesquisa@@Base+0x7c>
   11660:	cmp	r2, #1
   11664:	bhi	116c0 <lista_pesquisa@@Base+0x7c>
   11668:	cmp	r2, #0
   1166c:	mov	r5, r1
   11670:	ldreq	r4, [r0]
   11674:	beq	116b8 <lista_pesquisa@@Base+0x74>
   11678:	ldr	r4, [r0, #4]
   1167c:	cmp	r4, #0
   11680:	beq	116c0 <lista_pesquisa@@Base+0x7c>
   11684:	mov	r1, r5
   11688:	ldr	r0, [r4]
   1168c:	bl	10b40 <strcmp@plt>
   11690:	cmp	r0, #0
   11694:	beq	116c0 <lista_pesquisa@@Base+0x7c>
   11698:	ldr	r4, [r4, #8]
   1169c:	b	1167c <lista_pesquisa@@Base+0x38>
   116a0:	mov	r1, r5
   116a4:	ldr	r0, [r4]
   116a8:	bl	10b40 <strcmp@plt>
   116ac:	cmp	r0, #0
   116b0:	beq	116c0 <lista_pesquisa@@Base+0x7c>
   116b4:	ldr	r4, [r4, #4]
   116b8:	cmp	r4, #0
   116bc:	bne	116a0 <lista_pesquisa@@Base+0x5c>
   116c0:	mov	r0, r4
   116c4:	pop	{r4, r5, r6, pc}

000116c8 <lista_ordena@@Base>:
   116c8:	cmp	r0, #0
   116cc:	beq	11730 <lista_ordena@@Base+0x68>
   116d0:	push	{r4, r5, r6, r7, r8, lr}
   116d4:	ldr	r5, [r0]
   116d8:	ldr	r4, [r5, #4]
   116dc:	cmp	r4, #0
   116e0:	bne	116ec <lista_ordena@@Base+0x24>
   116e4:	mov	r0, r4
   116e8:	pop	{r4, r5, r6, r7, r8, pc}
   116ec:	mov	r6, r5
   116f0:	mov	r7, r4
   116f4:	ldr	r1, [r6]
   116f8:	ldr	r0, [r7]
   116fc:	bl	10b40 <strcmp@plt>
   11700:	cmp	r0, #0
   11704:	movlt	r6, r7
   11708:	ldr	r7, [r7, #4]
   1170c:	cmp	r7, #0
   11710:	bne	116f4 <lista_ordena@@Base+0x2c>
   11714:	cmp	r5, r6
   11718:	ldrne	r3, [r5]
   1171c:	ldrne	r2, [r6]
   11720:	strne	r2, [r5]
   11724:	strne	r3, [r6]
   11728:	mov	r5, r4
   1172c:	b	116d8 <lista_ordena@@Base+0x10>
   11730:	mvn	r0, #0
   11734:	bx	lr

00011738 <lista_inverte@@Base>:
   11738:	subs	r3, r0, #0
   1173c:	beq	117c0 <lista_inverte@@Base+0x88>
   11740:	ldr	r1, [r3, #8]
   11744:	cmp	r1, #1
   11748:	ble	117c8 <lista_inverte@@Base+0x90>
   1174c:	ldr	r2, [r3]
   11750:	mov	ip, #0
   11754:	sub	r0, r1, #2
   11758:	ldr	r2, [r2, #4]
   1175c:	push	{r4, lr}
   11760:	cmp	ip, r0
   11764:	ldr	r1, [r3]
   11768:	blt	11794 <lista_inverte@@Base+0x5c>
   1176c:	ldr	r2, [r3, #4]
   11770:	mov	r0, #0
   11774:	ldr	ip, [r2, #8]
   11778:	str	ip, [r3, #4]
   1177c:	str	r0, [ip, #4]
   11780:	str	r0, [r2, #8]
   11784:	str	r1, [r2, #4]
   11788:	str	r2, [r1, #8]
   1178c:	str	r2, [r3]
   11790:	pop	{r4, pc}
   11794:	ldr	r4, [r2, #8]
   11798:	ldr	lr, [r2, #4]
   1179c:	add	ip, ip, #1
   117a0:	str	lr, [r4, #4]
   117a4:	ldr	lr, [r2, #4]
   117a8:	str	r4, [lr, #8]
   117ac:	str	r1, [r2, #4]
   117b0:	str	r2, [r1, #8]
   117b4:	str	r2, [r3]
   117b8:	mov	r2, lr
   117bc:	b	11760 <lista_inverte@@Base+0x28>
   117c0:	mvn	r0, #0
   117c4:	bx	lr
   117c8:	mov	r0, #0
   117cc:	bx	lr

000117d0 <__libc_csu_init@@Base>:
   117d0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   117d4:	mov	r7, r0
   117d8:	ldr	r6, [pc, #72]	; 11828 <__libc_csu_init@@Base+0x58>
   117dc:	ldr	r5, [pc, #72]	; 1182c <__libc_csu_init@@Base+0x5c>
   117e0:	add	r6, pc, r6
   117e4:	add	r5, pc, r5
   117e8:	sub	r6, r6, r5
   117ec:	mov	r8, r1
   117f0:	mov	r9, r2
   117f4:	bl	10b14 <calloc@plt-0x20>
   117f8:	asrs	r6, r6, #2
   117fc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11800:	mov	r4, #0
   11804:	add	r4, r4, #1
   11808:	ldr	r3, [r5], #4
   1180c:	mov	r2, r9
   11810:	mov	r1, r8
   11814:	mov	r0, r7
   11818:	blx	r3
   1181c:	cmp	r6, r4
   11820:	bne	11804 <__libc_csu_init@@Base+0x34>
   11824:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11828:	andeq	r0, r1, r8, lsr #14
   1182c:	andeq	r0, r1, r0, lsr #14

00011830 <__libc_csu_fini@@Base>:
   11830:	bx	lr

Disassembly of section .fini:

00011834 <.fini>:
   11834:	push	{r3, lr}
   11838:	pop	{r3, pc}
