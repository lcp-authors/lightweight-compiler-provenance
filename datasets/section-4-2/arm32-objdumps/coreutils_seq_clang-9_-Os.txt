
../repos/coreutils/src/seq:     file format elf32-littlearm


Disassembly of section .init:

00010ef4 <.init>:
   10ef4:	push	{r3, lr}
   10ef8:	bl	1120c <__mempcpy_chk@plt+0x4c>
   10efc:	pop	{r3, pc}

Disassembly of section .plt:

00010f00 <calloc@plt-0x14>:
   10f00:	push	{lr}		; (str lr, [sp, #-4]!)
   10f04:	ldr	lr, [pc, #4]	; 10f10 <calloc@plt-0x4>
   10f08:	add	lr, pc, lr
   10f0c:	ldr	pc, [lr, #8]!
   10f10:	strdeq	r6, [r1], -r0

00010f14 <calloc@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #90112	; 0x16000
   10f1c:	ldr	pc, [ip, #240]!	; 0xf0

00010f20 <fputs_unlocked@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #90112	; 0x16000
   10f28:	ldr	pc, [ip, #232]!	; 0xe8

00010f2c <uselocale@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #90112	; 0x16000
   10f34:	ldr	pc, [ip, #224]!	; 0xe0

00010f38 <strcmp@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #90112	; 0x16000
   10f40:	ldr	pc, [ip, #216]!	; 0xd8

00010f44 <strtol@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #90112	; 0x16000
   10f4c:	ldr	pc, [ip, #208]!	; 0xd0

00010f50 <strcspn@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #90112	; 0x16000
   10f58:	ldr	pc, [ip, #200]!	; 0xc8

00010f5c <fflush@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #90112	; 0x16000
   10f64:	ldr	pc, [ip, #192]!	; 0xc0

00010f68 <memmove@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #90112	; 0x16000
   10f70:	ldr	pc, [ip, #184]!	; 0xb8

00010f74 <free@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #90112	; 0x16000
   10f7c:	ldr	pc, [ip, #176]!	; 0xb0

00010f80 <_exit@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #90112	; 0x16000
   10f88:	ldr	pc, [ip, #168]!	; 0xa8

00010f8c <memcpy@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #90112	; 0x16000
   10f94:	ldr	pc, [ip, #160]!	; 0xa0

00010f98 <mbsinit@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #90112	; 0x16000
   10fa0:	ldr	pc, [ip, #152]!	; 0x98

00010fa4 <strtold@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #90112	; 0x16000
   10fac:	ldr	pc, [ip, #144]!	; 0x90

00010fb0 <fwrite_unlocked@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #90112	; 0x16000
   10fb8:	ldr	pc, [ip, #136]!	; 0x88

00010fbc <memcmp@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #90112	; 0x16000
   10fc4:	ldr	pc, [ip, #128]!	; 0x80

00010fc8 <dcgettext@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #90112	; 0x16000
   10fd0:	ldr	pc, [ip, #120]!	; 0x78

00010fd4 <realloc@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #90112	; 0x16000
   10fdc:	ldr	pc, [ip, #112]!	; 0x70

00010fe0 <textdomain@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #90112	; 0x16000
   10fe8:	ldr	pc, [ip, #104]!	; 0x68

00010fec <iswprint@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #90112	; 0x16000
   10ff4:	ldr	pc, [ip, #96]!	; 0x60

00010ff8 <lseek64@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #90112	; 0x16000
   11000:	ldr	pc, [ip, #88]!	; 0x58

00011004 <__ctype_get_mb_cur_max@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #90112	; 0x16000
   1100c:	ldr	pc, [ip, #80]!	; 0x50

00011010 <strcpy@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #90112	; 0x16000
   11018:	ldr	pc, [ip, #72]!	; 0x48

0001101c <__fpending@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #90112	; 0x16000
   11024:	ldr	pc, [ip, #64]!	; 0x40

00011028 <ferror_unlocked@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #90112	; 0x16000
   11030:	ldr	pc, [ip, #56]!	; 0x38

00011034 <mbrtowc@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #90112	; 0x16000
   1103c:	ldr	pc, [ip, #48]!	; 0x30

00011040 <error@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #90112	; 0x16000
   11048:	ldr	pc, [ip, #40]!	; 0x28

0001104c <__asprintf_chk@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #90112	; 0x16000
   11054:	ldr	pc, [ip, #32]!

00011058 <malloc@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #90112	; 0x16000
   11060:	ldr	pc, [ip, #24]!

00011064 <__libc_start_main@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #90112	; 0x16000
   1106c:	ldr	pc, [ip, #16]!

00011070 <__freading@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #90112	; 0x16000
   11078:	ldr	pc, [ip, #8]!

0001107c <__gmon_start__@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #90112	; 0x16000
   11084:	ldr	pc, [ip, #0]!

00011088 <getopt_long@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #86016	; 0x15000
   11090:	ldr	pc, [ip, #4088]!	; 0xff8

00011094 <__ctype_b_loc@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #86016	; 0x15000
   1109c:	ldr	pc, [ip, #4080]!	; 0xff0

000110a0 <exit@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #86016	; 0x15000
   110a8:	ldr	pc, [ip, #4072]!	; 0xfe8

000110ac <bcmp@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #86016	; 0x15000
   110b4:	ldr	pc, [ip, #4064]!	; 0xfe0

000110b8 <strlen@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #86016	; 0x15000
   110c0:	ldr	pc, [ip, #4056]!	; 0xfd8

000110c4 <strchr@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #86016	; 0x15000
   110cc:	ldr	pc, [ip, #4048]!	; 0xfd0

000110d0 <__errno_location@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #86016	; 0x15000
   110d8:	ldr	pc, [ip, #4040]!	; 0xfc8

000110dc <__sprintf_chk@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #86016	; 0x15000
   110e4:	ldr	pc, [ip, #4032]!	; 0xfc0

000110e8 <__cxa_atexit@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #86016	; 0x15000
   110f0:	ldr	pc, [ip, #4024]!	; 0xfb8

000110f4 <memset@plt>:
   110f4:	add	ip, pc, #0, 12
   110f8:	add	ip, ip, #86016	; 0x15000
   110fc:	ldr	pc, [ip, #4016]!	; 0xfb0

00011100 <__printf_chk@plt>:
   11100:	add	ip, pc, #0, 12
   11104:	add	ip, ip, #86016	; 0x15000
   11108:	ldr	pc, [ip, #4008]!	; 0xfa8

0001110c <fileno@plt>:
   1110c:	add	ip, pc, #0, 12
   11110:	add	ip, ip, #86016	; 0x15000
   11114:	ldr	pc, [ip, #4000]!	; 0xfa0

00011118 <__fprintf_chk@plt>:
   11118:	add	ip, pc, #0, 12
   1111c:	add	ip, ip, #86016	; 0x15000
   11120:	ldr	pc, [ip, #3992]!	; 0xf98

00011124 <memchr@plt>:
   11124:	add	ip, pc, #0, 12
   11128:	add	ip, ip, #86016	; 0x15000
   1112c:	ldr	pc, [ip, #3984]!	; 0xf90

00011130 <fclose@plt>:
   11130:	add	ip, pc, #0, 12
   11134:	add	ip, ip, #86016	; 0x15000
   11138:	ldr	pc, [ip, #3976]!	; 0xf88

0001113c <fseeko64@plt>:
   1113c:	add	ip, pc, #0, 12
   11140:	add	ip, ip, #86016	; 0x15000
   11144:	ldr	pc, [ip, #3968]!	; 0xf80

00011148 <setlocale@plt>:
   11148:	add	ip, pc, #0, 12
   1114c:	add	ip, ip, #86016	; 0x15000
   11150:	ldr	pc, [ip, #3960]!	; 0xf78

00011154 <strrchr@plt>:
   11154:	add	ip, pc, #0, 12
   11158:	add	ip, ip, #86016	; 0x15000
   1115c:	ldr	pc, [ip, #3952]!	; 0xf70

00011160 <nl_langinfo@plt>:
   11160:	add	ip, pc, #0, 12
   11164:	add	ip, ip, #86016	; 0x15000
   11168:	ldr	pc, [ip, #3944]!	; 0xf68

0001116c <newlocale@plt>:
   1116c:	add	ip, pc, #0, 12
   11170:	add	ip, ip, #86016	; 0x15000
   11174:	ldr	pc, [ip, #3936]!	; 0xf60

00011178 <clearerr_unlocked@plt>:
   11178:	add	ip, pc, #0, 12
   1117c:	add	ip, ip, #86016	; 0x15000
   11180:	ldr	pc, [ip, #3928]!	; 0xf58

00011184 <bindtextdomain@plt>:
   11184:	add	ip, pc, #0, 12
   11188:	add	ip, ip, #86016	; 0x15000
   1118c:	ldr	pc, [ip, #3920]!	; 0xf50

00011190 <fputs@plt>:
   11190:	add	ip, pc, #0, 12
   11194:	add	ip, ip, #86016	; 0x15000
   11198:	ldr	pc, [ip, #3912]!	; 0xf48

0001119c <strncmp@plt>:
   1119c:	add	ip, pc, #0, 12
   111a0:	add	ip, ip, #86016	; 0x15000
   111a4:	ldr	pc, [ip, #3904]!	; 0xf40

000111a8 <abort@plt>:
   111a8:	add	ip, pc, #0, 12
   111ac:	add	ip, ip, #86016	; 0x15000
   111b0:	ldr	pc, [ip, #3896]!	; 0xf38

000111b4 <strspn@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #86016	; 0x15000
   111bc:	ldr	pc, [ip, #3888]!	; 0xf30

000111c0 <__mempcpy_chk@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #86016	; 0x15000
   111c8:	ldr	pc, [ip, #3880]!	; 0xf28

Disassembly of section .text:

000111d0 <.text>:
   111d0:	mov	fp, #0
   111d4:	mov	lr, #0
   111d8:	pop	{r1}		; (ldr r1, [sp], #4)
   111dc:	mov	r2, sp
   111e0:	push	{r2}		; (str r2, [sp, #-4]!)
   111e4:	push	{r0}		; (str r0, [sp, #-4]!)
   111e8:	ldr	ip, [pc, #16]	; 11200 <__mempcpy_chk@plt+0x40>
   111ec:	push	{ip}		; (str ip, [sp, #-4]!)
   111f0:	ldr	r0, [pc, #12]	; 11204 <__mempcpy_chk@plt+0x44>
   111f4:	ldr	r3, [pc, #12]	; 11208 <__mempcpy_chk@plt+0x48>
   111f8:	bl	11064 <__libc_start_main@plt>
   111fc:	bl	111a8 <abort@plt>
   11200:	muleq	r1, r8, r5
   11204:	andeq	r1, r1, r0, ror #10
   11208:	andeq	r5, r1, r8, lsr r5
   1120c:	ldr	r3, [pc, #20]	; 11228 <__mempcpy_chk@plt+0x68>
   11210:	ldr	r2, [pc, #20]	; 1122c <__mempcpy_chk@plt+0x6c>
   11214:	add	r3, pc, r3
   11218:	ldr	r2, [r3, r2]
   1121c:	cmp	r2, #0
   11220:	bxeq	lr
   11224:	b	1107c <__gmon_start__@plt>
   11228:	andeq	r5, r1, r4, ror #27
   1122c:	strdeq	r0, [r0], -r4
   11230:	ldr	r0, [pc, #24]	; 11250 <__mempcpy_chk@plt+0x90>
   11234:	ldr	r3, [pc, #24]	; 11254 <__mempcpy_chk@plt+0x94>
   11238:	cmp	r3, r0
   1123c:	bxeq	lr
   11240:	ldr	r3, [pc, #16]	; 11258 <__mempcpy_chk@plt+0x98>
   11244:	cmp	r3, #0
   11248:	bxeq	lr
   1124c:	bx	r3
   11250:	andeq	r7, r2, r8, asr #2
   11254:	andeq	r7, r2, r8, asr #2
   11258:	andeq	r0, r0, r0
   1125c:	ldr	r0, [pc, #36]	; 11288 <__mempcpy_chk@plt+0xc8>
   11260:	ldr	r1, [pc, #36]	; 1128c <__mempcpy_chk@plt+0xcc>
   11264:	sub	r1, r1, r0
   11268:	asr	r1, r1, #2
   1126c:	add	r1, r1, r1, lsr #31
   11270:	asrs	r1, r1, #1
   11274:	bxeq	lr
   11278:	ldr	r3, [pc, #16]	; 11290 <__mempcpy_chk@plt+0xd0>
   1127c:	cmp	r3, #0
   11280:	bxeq	lr
   11284:	bx	r3
   11288:	andeq	r7, r2, r8, asr #2
   1128c:	andeq	r7, r2, r8, asr #2
   11290:	andeq	r0, r0, r0
   11294:	push	{r4, lr}
   11298:	ldr	r4, [pc, #24]	; 112b8 <__mempcpy_chk@plt+0xf8>
   1129c:	ldrb	r3, [r4]
   112a0:	cmp	r3, #0
   112a4:	popne	{r4, pc}
   112a8:	bl	11230 <__mempcpy_chk@plt+0x70>
   112ac:	mov	r3, #1
   112b0:	strb	r3, [r4]
   112b4:	pop	{r4, pc}
   112b8:	andeq	r7, r2, r4, ror #2
   112bc:	b	1125c <__mempcpy_chk@plt+0x9c>
   112c0:	push	{fp, lr}
   112c4:	mov	fp, sp
   112c8:	sub	sp, sp, #64	; 0x40
   112cc:	mov	r8, r0
   112d0:	cmp	r0, #0
   112d4:	bne	1151c <__mempcpy_chk@plt+0x35c>
   112d8:	movw	r1, #21995	; 0x55eb
   112dc:	mov	r0, #0
   112e0:	mov	r2, #5
   112e4:	movt	r1, #1
   112e8:	bl	10fc8 <dcgettext@plt>
   112ec:	mov	r1, r0
   112f0:	movw	r0, #29076	; 0x7194
   112f4:	movt	r0, #2
   112f8:	ldr	r2, [r0]
   112fc:	mov	r0, #1
   11300:	mov	r3, r2
   11304:	str	r2, [sp]
   11308:	bl	11100 <__printf_chk@plt>
   1130c:	movw	r1, #22099	; 0x5653
   11310:	mov	r0, #0
   11314:	mov	r2, #5
   11318:	movt	r1, #1
   1131c:	bl	10fc8 <dcgettext@plt>
   11320:	movw	r9, #29020	; 0x715c
   11324:	movt	r9, #2
   11328:	ldr	r1, [r9]
   1132c:	bl	10f20 <fputs_unlocked@plt>
   11330:	movw	r1, #23400	; 0x5b68
   11334:	mov	r0, #0
   11338:	mov	r2, #5
   1133c:	movt	r1, #1
   11340:	bl	10fc8 <dcgettext@plt>
   11344:	ldr	r1, [r9]
   11348:	bl	10f20 <fputs_unlocked@plt>
   1134c:	movw	r1, #22157	; 0x568d
   11350:	mov	r0, #0
   11354:	mov	r2, #5
   11358:	movt	r1, #1
   1135c:	bl	10fc8 <dcgettext@plt>
   11360:	ldr	r1, [r9]
   11364:	bl	10f20 <fputs_unlocked@plt>
   11368:	movw	r1, #22369	; 0x5761
   1136c:	mov	r0, #0
   11370:	mov	r2, #5
   11374:	movt	r1, #1
   11378:	bl	10fc8 <dcgettext@plt>
   1137c:	ldr	r1, [r9]
   11380:	bl	10f20 <fputs_unlocked@plt>
   11384:	movw	r1, #22414	; 0x578e
   11388:	mov	r0, #0
   1138c:	mov	r2, #5
   11390:	movt	r1, #1
   11394:	bl	10fc8 <dcgettext@plt>
   11398:	ldr	r1, [r9]
   1139c:	bl	10f20 <fputs_unlocked@plt>
   113a0:	movw	r1, #22468	; 0x57c4
   113a4:	mov	r0, #0
   113a8:	mov	r2, #5
   113ac:	movt	r1, #1
   113b0:	bl	10fc8 <dcgettext@plt>
   113b4:	ldr	r1, [r9]
   113b8:	bl	10f20 <fputs_unlocked@plt>
   113bc:	movw	r1, #22981	; 0x59c5
   113c0:	mov	r0, #0
   113c4:	mov	r2, #5
   113c8:	movt	r1, #1
   113cc:	bl	10fc8 <dcgettext@plt>
   113d0:	ldr	r1, [r9]
   113d4:	bl	10f20 <fputs_unlocked@plt>
   113d8:	movw	r0, #24216	; 0x5e98
   113dc:	add	r6, sp, #8
   113e0:	movt	r0, #1
   113e4:	mov	r1, r6
   113e8:	ldm	r0!, {r2, r3, r4, r5}
   113ec:	stmia	r1!, {r2, r3, r4, r5}
   113f0:	ldm	r0!, {r2, r3, r4, r5, r7}
   113f4:	stmia	r1!, {r2, r3, r4, r5, r7}
   113f8:	ldm	r0, {r2, r3, r4, r5, r7}
   113fc:	stm	r1, {r2, r3, r4, r5, r7}
   11400:	movw	r1, #23475	; 0x5bb3
   11404:	movw	r5, #23189	; 0x5a95
   11408:	movt	r1, #1
   1140c:	movt	r5, #1
   11410:	mov	r0, r5
   11414:	bl	10f38 <strcmp@plt>
   11418:	cmp	r0, #0
   1141c:	ldrne	r1, [r6, #8]!
   11420:	cmpne	r1, #0
   11424:	bne	11410 <__mempcpy_chk@plt+0x250>
   11428:	movw	r1, #23570	; 0x5c12
   1142c:	ldr	r6, [r6, #4]
   11430:	mov	r0, #0
   11434:	mov	r2, #5
   11438:	movt	r1, #1
   1143c:	bl	10fc8 <dcgettext@plt>
   11440:	movw	r2, #23224	; 0x5ab8
   11444:	movw	r3, #23593	; 0x5c29
   11448:	mov	r1, r0
   1144c:	mov	r0, #1
   11450:	movt	r2, #1
   11454:	movt	r3, #1
   11458:	bl	11100 <__printf_chk@plt>
   1145c:	cmp	r6, #0
   11460:	mov	r0, #5
   11464:	mov	r1, #0
   11468:	moveq	r6, r5
   1146c:	bl	11148 <setlocale@plt>
   11470:	cmp	r0, #0
   11474:	beq	114ac <__mempcpy_chk@plt+0x2ec>
   11478:	movw	r1, #23633	; 0x5c51
   1147c:	mov	r2, #3
   11480:	movt	r1, #1
   11484:	bl	1119c <strncmp@plt>
   11488:	cmp	r0, #0
   1148c:	beq	114ac <__mempcpy_chk@plt+0x2ec>
   11490:	movw	r1, #23637	; 0x5c55
   11494:	mov	r0, #0
   11498:	mov	r2, #5
   1149c:	movt	r1, #1
   114a0:	bl	10fc8 <dcgettext@plt>
   114a4:	ldr	r1, [r9]
   114a8:	bl	10f20 <fputs_unlocked@plt>
   114ac:	movw	r1, #23708	; 0x5c9c
   114b0:	mov	r0, #0
   114b4:	mov	r2, #5
   114b8:	movt	r1, #1
   114bc:	bl	10fc8 <dcgettext@plt>
   114c0:	movw	r2, #23593	; 0x5c29
   114c4:	mov	r1, r0
   114c8:	mov	r0, #1
   114cc:	mov	r3, r5
   114d0:	movt	r2, #1
   114d4:	bl	11100 <__printf_chk@plt>
   114d8:	movw	r1, #23735	; 0x5cb7
   114dc:	mov	r0, #0
   114e0:	mov	r2, #5
   114e4:	movt	r1, #1
   114e8:	bl	10fc8 <dcgettext@plt>
   114ec:	mov	r1, r0
   114f0:	movw	r0, #23503	; 0x5bcf
   114f4:	movw	r3, #23785	; 0x5ce9
   114f8:	cmp	r6, r5
   114fc:	mov	r2, r6
   11500:	movt	r0, #1
   11504:	movt	r3, #1
   11508:	moveq	r3, r0
   1150c:	mov	r0, #1
   11510:	bl	11100 <__printf_chk@plt>
   11514:	mov	r0, r8
   11518:	bl	110a0 <exit@plt>
   1151c:	movw	r0, #29016	; 0x7158
   11520:	movw	r1, #21956	; 0x55c4
   11524:	mov	r2, #5
   11528:	movt	r0, #2
   1152c:	movt	r1, #1
   11530:	ldr	r5, [r0]
   11534:	mov	r0, #0
   11538:	bl	10fc8 <dcgettext@plt>
   1153c:	mov	r2, r0
   11540:	movw	r0, #29076	; 0x7194
   11544:	mov	r1, #1
   11548:	movt	r0, #2
   1154c:	ldr	r3, [r0]
   11550:	mov	r0, r5
   11554:	bl	11118 <__fprintf_chk@plt>
   11558:	b	11514 <__mempcpy_chk@plt+0x354>
   1155c:	nop	{0}
   11560:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11564:	add	fp, sp, #28
   11568:	sub	sp, sp, #4
   1156c:	vpush	{d8-d14}
   11570:	sub	sp, sp, #72	; 0x48
   11574:	mov	r9, r0
   11578:	movw	r0, #24096	; 0x5e20
   1157c:	str	r1, [sp, #28]
   11580:	movt	r0, #1
   11584:	vld1.64	{d16-d17}, [r0]
   11588:	add	r0, sp, #48	; 0x30
   1158c:	vst1.64	{d16-d17}, [r0]
   11590:	ldr	r0, [r1]
   11594:	bl	12a84 <__mempcpy_chk@plt+0x18c4>
   11598:	movw	r1, #23785	; 0x5ce9
   1159c:	mov	r0, #6
   115a0:	movt	r1, #1
   115a4:	bl	11148 <setlocale@plt>
   115a8:	movw	r1, #29032	; 0x7168
   115ac:	cmp	r0, #0
   115b0:	movw	r4, #23228	; 0x5abc
   115b4:	movt	r1, #2
   115b8:	movwne	r0, #1
   115bc:	movt	r4, #1
   115c0:	strb	r0, [r1]
   115c4:	movw	r1, #23193	; 0x5a99
   115c8:	mov	r0, r4
   115cc:	movt	r1, #1
   115d0:	bl	11184 <bindtextdomain@plt>
   115d4:	mov	r0, r4
   115d8:	bl	10fe0 <textdomain@plt>
   115dc:	movw	r0, #10612	; 0x2974
   115e0:	movt	r0, #1
   115e4:	bl	1559c <__mempcpy_chk@plt+0x43dc>
   115e8:	movw	r0, #29033	; 0x7169
   115ec:	mov	r7, #0
   115f0:	movw	r1, #29036	; 0x716c
   115f4:	movt	r0, #2
   115f8:	movt	r1, #2
   115fc:	strb	r7, [r0]
   11600:	movw	r0, #24112	; 0x5e30
   11604:	movt	r0, #1
   11608:	str	r0, [r1]
   1160c:	movw	r0, #29008	; 0x7150
   11610:	movt	r0, #2
   11614:	ldr	r0, [r0]
   11618:	cmp	r0, r9
   1161c:	bge	116fc <__mempcpy_chk@plt+0x53c>
   11620:	movw	r4, #23217	; 0x5ab1
   11624:	movw	r6, #24116	; 0x5e34
   11628:	movw	r5, #29024	; 0x7160
   1162c:	mov	r8, #0
   11630:	mov	sl, #1
   11634:	mov	r7, #0
   11638:	movt	r4, #1
   1163c:	movt	r6, #1
   11640:	movt	r5, #2
   11644:	ldr	r1, [sp, #28]
   11648:	ldr	r1, [r1, r0, lsl #2]
   1164c:	ldrb	r2, [r1]
   11650:	cmp	r2, #45	; 0x2d
   11654:	bne	11670 <__mempcpy_chk@plt+0x4b0>
   11658:	ldrb	r1, [r1, #1]
   1165c:	cmp	r1, #46	; 0x2e
   11660:	beq	116fc <__mempcpy_chk@plt+0x53c>
   11664:	sub	r1, r1, #48	; 0x30
   11668:	cmp	r1, #10
   1166c:	bcc	116fc <__mempcpy_chk@plt+0x53c>
   11670:	ldr	r1, [sp, #28]
   11674:	mov	r0, r9
   11678:	mov	r2, r4
   1167c:	mov	r3, r6
   11680:	str	r8, [sp]
   11684:	bl	11088 <getopt_long@plt>
   11688:	cmp	r0, #101	; 0x65
   1168c:	ble	116e8 <__mempcpy_chk@plt+0x528>
   11690:	cmp	r0, #102	; 0x66
   11694:	beq	116b4 <__mempcpy_chk@plt+0x4f4>
   11698:	cmp	r0, #115	; 0x73
   1169c:	bne	116bc <__mempcpy_chk@plt+0x4fc>
   116a0:	ldr	r0, [r5]
   116a4:	movw	r1, #29036	; 0x716c
   116a8:	movt	r1, #2
   116ac:	str	r0, [r1]
   116b0:	b	116d0 <__mempcpy_chk@plt+0x510>
   116b4:	ldr	r7, [r5]
   116b8:	b	116d0 <__mempcpy_chk@plt+0x510>
   116bc:	cmp	r0, #119	; 0x77
   116c0:	bne	12188 <__mempcpy_chk@plt+0xfc8>
   116c4:	movw	r0, #29033	; 0x7169
   116c8:	movt	r0, #2
   116cc:	strb	sl, [r0]
   116d0:	movw	r0, #29008	; 0x7150
   116d4:	movt	r0, #2
   116d8:	ldr	r0, [r0]
   116dc:	cmp	r0, r9
   116e0:	blt	11644 <__mempcpy_chk@plt+0x484>
   116e4:	b	116fc <__mempcpy_chk@plt+0x53c>
   116e8:	cmn	r0, #1
   116ec:	bne	1204c <__mempcpy_chk@plt+0xe8c>
   116f0:	movw	r0, #29008	; 0x7150
   116f4:	movt	r0, #2
   116f8:	ldr	r0, [r0]
   116fc:	subs	r1, r9, r0
   11700:	beq	120ac <__mempcpy_chk@plt+0xeec>
   11704:	movw	r5, #29008	; 0x7150
   11708:	cmp	r1, #4
   1170c:	movt	r5, #2
   11710:	bcs	120b8 <__mempcpy_chk@plt+0xef8>
   11714:	cmp	r7, #0
   11718:	str	r1, [sp, #24]
   1171c:	str	r9, [sp, #20]
   11720:	beq	11898 <__mempcpy_chk@plt+0x6d8>
   11724:	mov	sl, #0
   11728:	mov	r0, #0
   1172c:	ldrb	r1, [r7, r0]
   11730:	cmp	r1, #37	; 0x25
   11734:	bne	1174c <__mempcpy_chk@plt+0x58c>
   11738:	add	r4, r0, #1
   1173c:	ldrb	r2, [r7, r4]
   11740:	cmp	r2, #37	; 0x25
   11744:	beq	11754 <__mempcpy_chk@plt+0x594>
   11748:	b	1176c <__mempcpy_chk@plt+0x5ac>
   1174c:	cmp	r1, #0
   11750:	beq	1200c <__mempcpy_chk@plt+0xe4c>
   11754:	cmp	r1, #37	; 0x25
   11758:	mov	r1, #1
   1175c:	add	sl, sl, #1
   11760:	movweq	r1, #2
   11764:	add	r0, r1, r0
   11768:	b	1172c <__mempcpy_chk@plt+0x56c>
   1176c:	movw	r1, #23858	; 0x5d32
   11770:	add	r0, r7, r4
   11774:	movt	r1, #1
   11778:	bl	111b4 <strspn@plt>
   1177c:	movw	r1, #23865	; 0x5d39
   11780:	add	r4, r0, r4
   11784:	movt	r1, #1
   11788:	add	r0, r7, r4
   1178c:	bl	111b4 <strspn@plt>
   11790:	add	r6, r4, r0
   11794:	ldrb	r0, [r7, r6]
   11798:	cmp	r0, #46	; 0x2e
   1179c:	bne	117bc <__mempcpy_chk@plt+0x5fc>
   117a0:	movw	r1, #23865	; 0x5d39
   117a4:	add	r4, r6, #1
   117a8:	movt	r1, #1
   117ac:	add	r0, r7, r4
   117b0:	bl	111b4 <strspn@plt>
   117b4:	add	r6, r0, r4
   117b8:	ldrb	r0, [r7, r6]
   117bc:	sub	r0, r0, #76	; 0x4c
   117c0:	clz	r0, r0
   117c4:	lsr	r4, r0, #5
   117c8:	add	r5, r6, r4
   117cc:	ldrb	r1, [r7, r5]
   117d0:	cmp	r1, #0
   117d4:	beq	120e4 <__mempcpy_chk@plt+0xf24>
   117d8:	movw	r0, #23897	; 0x5d59
   117dc:	mov	r2, #9
   117e0:	movt	r0, #1
   117e4:	bl	11124 <memchr@plt>
   117e8:	cmp	r0, #0
   117ec:	beq	120f0 <__mempcpy_chk@plt+0xf30>
   117f0:	add	r3, r7, r6
   117f4:	add	r0, r5, #1
   117f8:	mov	r8, #0
   117fc:	ldrb	r1, [r7, r0]
   11800:	cmp	r1, #37	; 0x25
   11804:	bne	1181c <__mempcpy_chk@plt+0x65c>
   11808:	add	r2, r0, r7
   1180c:	ldrb	r2, [r2, #1]
   11810:	cmp	r2, #37	; 0x25
   11814:	beq	11824 <__mempcpy_chk@plt+0x664>
   11818:	b	12018 <__mempcpy_chk@plt+0xe58>
   1181c:	cmp	r1, #0
   11820:	beq	1183c <__mempcpy_chk@plt+0x67c>
   11824:	cmp	r1, #37	; 0x25
   11828:	mov	r1, #1
   1182c:	add	r8, r8, #1
   11830:	movweq	r1, #2
   11834:	add	r0, r1, r0
   11838:	b	117fc <__mempcpy_chk@plt+0x63c>
   1183c:	add	r0, r0, #2
   11840:	mov	r5, r3
   11844:	bl	14a7c <__mempcpy_chk@plt+0x38bc>
   11848:	mov	r1, r7
   1184c:	mov	r2, r6
   11850:	mov	r9, r0
   11854:	bl	10f8c <memcpy@plt>
   11858:	mov	r0, #76	; 0x4c
   1185c:	mov	r1, r9
   11860:	strb	r0, [r1, r6]!
   11864:	add	r0, r1, #1
   11868:	add	r1, r5, r4
   1186c:	bl	11010 <strcpy@plt>
   11870:	movw	r0, #29033	; 0x7169
   11874:	movt	r0, #2
   11878:	ldrb	r0, [r0]
   1187c:	cmp	r0, #1
   11880:	beq	12120 <__mempcpy_chk@plt+0xf60>
   11884:	ldr	r1, [sp, #24]
   11888:	movw	r5, #29008	; 0x7150
   1188c:	mov	r0, #1
   11890:	movt	r5, #2
   11894:	b	118a8 <__mempcpy_chk@plt+0x6e8>
   11898:	mov	r0, #0
   1189c:	mov	r9, #0
   118a0:	mov	sl, #0
   118a4:	mov	r8, #0
   118a8:	str	r0, [sp, #12]
   118ac:	cmp	r1, #3
   118b0:	bne	11920 <__mempcpy_chk@plt+0x760>
   118b4:	ldr	r0, [r5]
   118b8:	ldr	r1, [sp, #28]
   118bc:	add	r0, r1, r0, lsl #2
   118c0:	ldr	r6, [r0, #4]
   118c4:	mov	r0, r6
   118c8:	bl	12198 <__mempcpy_chk@plt+0xfd8>
   118cc:	mov	r7, #0
   118d0:	cmp	r0, #0
   118d4:	beq	11924 <__mempcpy_chk@plt+0x764>
   118d8:	movw	r3, #10448	; 0x28d0
   118dc:	add	r2, sp, #48	; 0x30
   118e0:	mov	r0, r6
   118e4:	mov	r1, #0
   118e8:	mov	r7, #0
   118ec:	movt	r3, #1
   118f0:	bl	14eec <__mempcpy_chk@plt+0x3d2c>
   118f4:	cmp	r0, #0
   118f8:	beq	11924 <__mempcpy_chk@plt+0x764>
   118fc:	vldr	d16, [sp, #48]	; 0x30
   11900:	vcmpe.f64	d16, #0.0
   11904:	vmrs	APSR_nzcv, fpscr
   11908:	ble	11924 <__mempcpy_chk@plt+0x764>
   1190c:	vldr	d17, [pc, #484]	; 11af8 <__mempcpy_chk@plt+0x938>
   11910:	vcmpe.f64	d16, d17
   11914:	vmrs	APSR_nzcv, fpscr
   11918:	movls	r7, #1
   1191c:	b	11924 <__mempcpy_chk@plt+0x764>
   11920:	mov	r7, #1
   11924:	ldr	r4, [r5]
   11928:	ldr	r0, [sp, #28]
   1192c:	ldr	r6, [r0, r4, lsl #2]
   11930:	mov	r0, r6
   11934:	bl	12198 <__mempcpy_chk@plt+0xfd8>
   11938:	cmp	r0, #0
   1193c:	beq	11a1c <__mempcpy_chk@plt+0x85c>
   11940:	ldr	r0, [sp, #24]
   11944:	cmp	r0, #1
   11948:	bne	119d8 <__mempcpy_chk@plt+0x818>
   1194c:	movw	r0, #29033	; 0x7169
   11950:	ldr	r1, [sp, #12]
   11954:	movt	r0, #2
   11958:	ldrb	r0, [r0]
   1195c:	orr	r0, r1, r0
   11960:	tst	r0, #1
   11964:	bne	11a14 <__mempcpy_chk@plt+0x854>
   11968:	movw	r0, #29036	; 0x716c
   1196c:	movt	r0, #2
   11970:	ldr	r0, [r0]
   11974:	bl	110b8 <strlen@plt>
   11978:	cmp	r0, #1
   1197c:	bne	11a14 <__mempcpy_chk@plt+0x854>
   11980:	ldr	r1, [sp, #24]
   11984:	vldr	d16, [sp, #48]	; 0x30
   11988:	movw	r0, #23355	; 0x5b3b
   1198c:	ldr	r5, [sp, #28]
   11990:	movt	r0, #1
   11994:	cmp	r1, #1
   11998:	moveq	r6, r0
   1199c:	add	r0, r1, r4
   119a0:	add	r4, r5, r0, lsl #2
   119a4:	vmov	r0, r1, d16
   119a8:	bl	154f8 <__mempcpy_chk@plt+0x4338>
   119ac:	mov	r3, r1
   119b0:	ldr	r1, [r4, #-4]
   119b4:	mov	r2, r0
   119b8:	mov	r0, r6
   119bc:	bl	121e4 <__mempcpy_chk@plt+0x1024>
   119c0:	movw	r0, #29008	; 0x7150
   119c4:	movt	r0, #2
   119c8:	ldr	r4, [r0]
   119cc:	ldr	r6, [r5, r4, lsl #2]
   119d0:	mov	r5, r0
   119d4:	b	11a1c <__mempcpy_chk@plt+0x85c>
   119d8:	ldr	r0, [sp, #28]
   119dc:	add	r5, r0, r4, lsl #2
   119e0:	ldr	r0, [r5, #4]
   119e4:	bl	12198 <__mempcpy_chk@plt+0xfd8>
   119e8:	cmp	r0, #0
   119ec:	beq	11a14 <__mempcpy_chk@plt+0x854>
   119f0:	ldr	r0, [sp, #24]
   119f4:	cmp	r0, #3
   119f8:	bcc	1194c <__mempcpy_chk@plt+0x78c>
   119fc:	cmp	r7, #0
   11a00:	beq	11a14 <__mempcpy_chk@plt+0x854>
   11a04:	ldr	r0, [r5, #8]
   11a08:	bl	12198 <__mempcpy_chk@plt+0xfd8>
   11a0c:	cmp	r0, #0
   11a10:	bne	1194c <__mempcpy_chk@plt+0x78c>
   11a14:	movw	r5, #29008	; 0x7150
   11a18:	movt	r5, #2
   11a1c:	add	r0, r4, #1
   11a20:	mov	r1, r6
   11a24:	str	r0, [r5]
   11a28:	add	r0, sp, #32
   11a2c:	bl	12560 <__mempcpy_chk@plt+0x13a0>
   11a30:	ldr	r0, [r5]
   11a34:	ldr	r4, [sp, #20]
   11a38:	ldr	r7, [sp, #32]
   11a3c:	ldr	r6, [sp, #36]	; 0x24
   11a40:	ldr	r2, [sp, #40]	; 0x28
   11a44:	ldr	ip, [sp, #44]	; 0x2c
   11a48:	str	r9, [sp, #16]
   11a4c:	cmp	r0, r4
   11a50:	bge	11b00 <__mempcpy_chk@plt+0x940>
   11a54:	add	r1, r0, #1
   11a58:	str	r2, [sp, #8]
   11a5c:	str	ip, [sp, #24]
   11a60:	str	r1, [r5]
   11a64:	ldr	r1, [sp, #28]
   11a68:	ldr	r1, [r1, r0, lsl #2]
   11a6c:	add	r0, sp, #32
   11a70:	bl	12560 <__mempcpy_chk@plt+0x13a0>
   11a74:	ldr	r0, [r5]
   11a78:	ldr	lr, [sp, #32]
   11a7c:	ldr	r2, [sp, #36]	; 0x24
   11a80:	ldr	r1, [sp, #40]	; 0x28
   11a84:	ldr	ip, [sp, #44]	; 0x2c
   11a88:	cmp	r0, r4
   11a8c:	bge	11ad8 <__mempcpy_chk@plt+0x918>
   11a90:	vmov	d16, lr, r2
   11a94:	str	r1, [sp, #56]	; 0x38
   11a98:	str	lr, [sp, #48]	; 0x30
   11a9c:	str	ip, [sp, #60]	; 0x3c
   11aa0:	str	r2, [sp, #52]	; 0x34
   11aa4:	vcmp.f64	d16, #0.0
   11aa8:	vmrs	APSR_nzcv, fpscr
   11aac:	beq	12148 <__mempcpy_chk@plt+0xf88>
   11ab0:	add	r1, r0, #1
   11ab4:	str	r1, [r5]
   11ab8:	ldr	r1, [sp, #28]
   11abc:	ldr	r1, [r1, r0, lsl #2]
   11ac0:	add	r0, sp, #32
   11ac4:	bl	12560 <__mempcpy_chk@plt+0x13a0>
   11ac8:	ldr	lr, [sp, #32]
   11acc:	ldr	r2, [sp, #36]	; 0x24
   11ad0:	ldr	r1, [sp, #40]	; 0x28
   11ad4:	ldr	ip, [sp, #44]	; 0x2c
   11ad8:	ldr	r3, [sp, #24]
   11adc:	ldr	r4, [sp, #8]
   11ae0:	mov	r5, r7
   11ae4:	mov	r9, r6
   11ae8:	cmp	r3, #0
   11aec:	beq	11b20 <__mempcpy_chk@plt+0x960>
   11af0:	b	11b38 <__mempcpy_chk@plt+0x978>
   11af4:	nop	{0}
   11af8:	andeq	r0, r0, r0
   11afc:	rsbmi	r0, r9, r0
   11b00:	movw	r9, #0
   11b04:	mov	r1, r2
   11b08:	mov	r5, #0
   11b0c:	mov	r4, #1
   11b10:	mov	r3, #0
   11b14:	mov	lr, r7
   11b18:	mov	r2, r6
   11b1c:	movt	r9, #16368	; 0x3ff0
   11b20:	cmp	ip, #0
   11b24:	ldreq	r0, [sp, #60]	; 0x3c
   11b28:	cmpeq	r0, #0
   11b2c:	beq	11d70 <__mempcpy_chk@plt+0xbb0>
   11b30:	mov	r7, r5
   11b34:	mov	r6, r9
   11b38:	str	sl, [sp, #28]
   11b3c:	ldr	sl, [sp, #16]
   11b40:	cmp	sl, #0
   11b44:	bne	11b68 <__mempcpy_chk@plt+0x9a8>
   11b48:	ldr	r0, [sp, #60]	; 0x3c
   11b4c:	movw	sl, #24090	; 0x5e1a
   11b50:	movt	sl, #1
   11b54:	cmp	r3, r0
   11b58:	movgt	r0, r3
   11b5c:	cmn	ip, #-2147483647	; 0x80000001
   11b60:	cmnne	r0, #-2147483647	; 0x80000001
   11b64:	bne	11e60 <__mempcpy_chk@plt+0xca0>
   11b68:	vmov	d9, lr, r2
   11b6c:	vmov	d10, r7, r6
   11b70:	vldr	d8, [sp, #48]	; 0x30
   11b74:	mov	r1, #0
   11b78:	mov	r0, #0
   11b7c:	vcmpe.f64	d10, d9
   11b80:	vmrs	APSR_nzcv, fpscr
   11b84:	vcmpe.f64	d9, d10
   11b88:	movwmi	r1, #1
   11b8c:	vmrs	APSR_nzcv, fpscr
   11b90:	vcmpe.f64	d8, #0.0
   11b94:	movwmi	r0, #1
   11b98:	vmrs	APSR_nzcv, fpscr
   11b9c:	movmi	r0, r1
   11ba0:	cmp	r0, #0
   11ba4:	bne	11f44 <__mempcpy_chk@plt+0xd84>
   11ba8:	mov	r0, #1
   11bac:	mov	r1, sl
   11bb0:	mov	r2, r7
   11bb4:	mov	r3, r6
   11bb8:	bl	11100 <__printf_chk@plt>
   11bbc:	cmp	r0, #0
   11bc0:	bmi	11d6c <__mempcpy_chk@plt+0xbac>
   11bc4:	vmov.f64	d11, #112	; 0x3f800000  1.0
   11bc8:	movw	r6, #29020	; 0x715c
   11bcc:	vorr	d14, d10, d10
   11bd0:	mov	r7, #0
   11bd4:	mov	r4, #0
   11bd8:	movt	r6, #2
   11bdc:	vmov.f64	d12, d11
   11be0:	tst	r4, #1
   11be4:	bne	11f2c <__mempcpy_chk@plt+0xd6c>
   11be8:	vmov.f64	d13, d10
   11bec:	mov	r0, #0
   11bf0:	mov	r4, #0
   11bf4:	vmla.f64	d13, d8, d12
   11bf8:	vcmpe.f64	d13, d9
   11bfc:	vmrs	APSR_nzcv, fpscr
   11c00:	vcmpe.f64	d8, #0.0
   11c04:	movwmi	r0, #1
   11c08:	movwgt	r4, #1
   11c0c:	vmrs	APSR_nzcv, fpscr
   11c10:	movmi	r4, r0
   11c14:	cmp	r4, #1
   11c18:	bne	11d30 <__mempcpy_chk@plt+0xb70>
   11c1c:	movw	r0, #29032	; 0x7168
   11c20:	movt	r0, #2
   11c24:	ldrb	r0, [r0]
   11c28:	cmp	r0, #0
   11c2c:	beq	11c40 <__mempcpy_chk@plt+0xa80>
   11c30:	movw	r1, #24094	; 0x5e1e
   11c34:	mov	r0, #1
   11c38:	movt	r1, #1
   11c3c:	bl	11148 <setlocale@plt>
   11c40:	add	r0, sp, #68	; 0x44
   11c44:	mov	r1, #1
   11c48:	mov	r2, sl
   11c4c:	vstr	d13, [sp]
   11c50:	bl	1104c <__asprintf_chk@plt>
   11c54:	mov	r9, r0
   11c58:	movw	r0, #29032	; 0x7168
   11c5c:	movt	r0, #2
   11c60:	ldrb	r0, [r0]
   11c64:	cmp	r0, #0
   11c68:	beq	11c7c <__mempcpy_chk@plt+0xabc>
   11c6c:	movw	r1, #23785	; 0x5ce9
   11c70:	mov	r0, #1
   11c74:	movt	r1, #1
   11c78:	bl	11148 <setlocale@plt>
   11c7c:	cmn	r9, #1
   11c80:	ble	11e5c <__mempcpy_chk@plt+0xc9c>
   11c84:	ldr	r1, [sp, #68]	; 0x44
   11c88:	sub	r0, r9, r8
   11c8c:	movw	r3, #10448	; 0x28d0
   11c90:	add	r2, sp, #32
   11c94:	movt	r3, #1
   11c98:	strb	r7, [r1, r0]
   11c9c:	ldr	r1, [sp, #28]
   11ca0:	ldr	r0, [sp, #68]	; 0x44
   11ca4:	add	r0, r0, r1
   11ca8:	mov	r1, #0
   11cac:	bl	14eec <__mempcpy_chk@plt+0x3d2c>
   11cb0:	cmp	r0, #0
   11cb4:	beq	11f24 <__mempcpy_chk@plt+0xd64>
   11cb8:	vldr	d16, [sp, #32]
   11cbc:	vcmp.f64	d16, d9
   11cc0:	vmrs	APSR_nzcv, fpscr
   11cc4:	bne	11f24 <__mempcpy_chk@plt+0xd64>
   11cc8:	add	r0, sp, #64	; 0x40
   11ccc:	mov	r1, #1
   11cd0:	mov	r2, sl
   11cd4:	str	r7, [sp, #64]	; 0x40
   11cd8:	vstr	d14, [sp]
   11cdc:	mov	r5, #0
   11ce0:	mov	r7, sl
   11ce4:	bl	1104c <__asprintf_chk@plt>
   11ce8:	cmn	r0, #1
   11cec:	ble	11e5c <__mempcpy_chk@plt+0xc9c>
   11cf0:	ldr	r1, [sp, #64]	; 0x40
   11cf4:	sub	r0, r0, r8
   11cf8:	strb	r5, [r1, r0]
   11cfc:	ldr	r5, [sp, #64]	; 0x40
   11d00:	ldr	r1, [sp, #68]	; 0x44
   11d04:	mov	r0, r5
   11d08:	bl	10f38 <strcmp@plt>
   11d0c:	mov	r9, r0
   11d10:	mov	r0, r5
   11d14:	bl	12a5c <__mempcpy_chk@plt+0x189c>
   11d18:	ldr	r0, [sp, #68]	; 0x44
   11d1c:	bl	12a5c <__mempcpy_chk@plt+0x189c>
   11d20:	cmp	r9, #0
   11d24:	beq	11f2c <__mempcpy_chk@plt+0xd6c>
   11d28:	mov	sl, r7
   11d2c:	mov	r7, #0
   11d30:	movw	r0, #29036	; 0x716c
   11d34:	ldr	r1, [r6]
   11d38:	movt	r0, #2
   11d3c:	ldr	r0, [r0]
   11d40:	bl	10f20 <fputs_unlocked@plt>
   11d44:	cmn	r0, #1
   11d48:	beq	11d6c <__mempcpy_chk@plt+0xbac>
   11d4c:	vmov	r2, r3, d13
   11d50:	mov	r0, #1
   11d54:	mov	r1, sl
   11d58:	bl	11100 <__printf_chk@plt>
   11d5c:	vadd.f64	d12, d12, d11
   11d60:	vorr	d14, d13, d13
   11d64:	cmp	r0, #0
   11d68:	bpl	11be0 <__mempcpy_chk@plt+0xa20>
   11d6c:	bl	1288c <__mempcpy_chk@plt+0x16cc>
   11d70:	vmov	d9, r5, r9
   11d74:	vcmpe.f64	d9, #0.0
   11d78:	vmrs	APSR_nzcv, fpscr
   11d7c:	blt	11b30 <__mempcpy_chk@plt+0x970>
   11d80:	vmov.i32	d16, #0	; 0x00000000
   11d84:	vmul.f64	d16, d9, d16
   11d88:	vcmp.f64	d16, #0.0
   11d8c:	vmrs	APSR_nzcv, fpscr
   11d90:	bne	11b30 <__mempcpy_chk@plt+0x970>
   11d94:	vmov	d8, lr, r2
   11d98:	vcmpe.f64	d8, #0.0
   11d9c:	vmrs	APSR_nzcv, fpscr
   11da0:	blt	11b30 <__mempcpy_chk@plt+0x970>
   11da4:	vldr	d16, [sp, #48]	; 0x30
   11da8:	vcmpe.f64	d16, #0.0
   11dac:	vmrs	APSR_nzcv, fpscr
   11db0:	ble	11b30 <__mempcpy_chk@plt+0x970>
   11db4:	vldr	d17, [pc, #980]	; 12190 <__mempcpy_chk@plt+0xfd0>
   11db8:	vcmpe.f64	d16, d17
   11dbc:	vmrs	APSR_nzcv, fpscr
   11dc0:	bhi	11b30 <__mempcpy_chk@plt+0x970>
   11dc4:	movw	r0, #29033	; 0x7169
   11dc8:	ldr	r6, [sp, #12]
   11dcc:	movt	r0, #2
   11dd0:	ldrb	r0, [r0]
   11dd4:	orr	r0, r6, r0
   11dd8:	tst	r0, #1
   11ddc:	bne	11b30 <__mempcpy_chk@plt+0x970>
   11de0:	add	r0, sp, #20
   11de4:	str	r1, [sp, #8]
   11de8:	str	ip, [sp, #12]
   11dec:	stm	r0, {r2, r3, lr}
   11df0:	movw	r0, #29036	; 0x716c
   11df4:	movt	r0, #2
   11df8:	ldr	r0, [r0]
   11dfc:	bl	110b8 <strlen@plt>
   11e00:	cmp	r0, #1
   11e04:	bne	11ff0 <__mempcpy_chk@plt+0xe30>
   11e08:	movw	r2, #23390	; 0x5b5e
   11e0c:	add	r0, sp, #32
   11e10:	mov	r1, #1
   11e14:	vstr	d9, [sp]
   11e18:	movt	r2, #1
   11e1c:	bl	1104c <__asprintf_chk@plt>
   11e20:	cmn	r0, #1
   11e24:	ble	11e5c <__mempcpy_chk@plt+0xc9c>
   11e28:	vmov.i32	d16, #0	; 0x00000000
   11e2c:	vmul.f64	d16, d8, d16
   11e30:	vcmp.f64	d16, #0.0
   11e34:	vmrs	APSR_nzcv, fpscr
   11e38:	bne	11f8c <__mempcpy_chk@plt+0xdcc>
   11e3c:	movw	r2, #23390	; 0x5b5e
   11e40:	add	r0, sp, #68	; 0x44
   11e44:	mov	r1, #1
   11e48:	vstr	d8, [sp]
   11e4c:	movt	r2, #1
   11e50:	bl	1104c <__asprintf_chk@plt>
   11e54:	cmn	r0, #1
   11e58:	bgt	11f9c <__mempcpy_chk@plt+0xddc>
   11e5c:	bl	14ea8 <__mempcpy_chk@plt+0x3ce8>
   11e60:	mov	r5, r1
   11e64:	movw	r1, #29033	; 0x7169
   11e68:	mov	r9, r2
   11e6c:	movt	r1, #2
   11e70:	ldrb	r1, [r1]
   11e74:	cmp	r1, #1
   11e78:	bne	11f58 <__mempcpy_chk@plt+0xd98>
   11e7c:	sub	r1, r4, r3
   11e80:	clz	r3, r3
   11e84:	cmp	r0, #0
   11e88:	mov	r2, r0
   11e8c:	clz	r4, r0
   11e90:	movw	sl, #24090	; 0x5e1a
   11e94:	movwne	r2, #1
   11e98:	lsr	r3, r3, #5
   11e9c:	add	r1, r1, r0
   11ea0:	cmp	ip, #0
   11ea4:	lsr	r4, r4, #5
   11ea8:	movt	sl, #1
   11eac:	and	r3, r3, r2
   11eb0:	add	r3, r1, r3
   11eb4:	sub	r1, r5, ip
   11eb8:	clz	r5, ip
   11ebc:	movwne	ip, #1
   11ec0:	lsr	r5, r5, #5
   11ec4:	add	r1, r1, r0
   11ec8:	and	r4, ip, r4
   11ecc:	sub	r1, r1, r4
   11ed0:	and	r2, r5, r2
   11ed4:	add	r1, r1, r2
   11ed8:	mov	r2, r9
   11edc:	cmp	r3, r1
   11ee0:	movhi	r1, r3
   11ee4:	cmp	r1, #0
   11ee8:	bmi	11b68 <__mempcpy_chk@plt+0x9a8>
   11eec:	movw	sl, #29040	; 0x7170
   11ef0:	movw	r3, #24071	; 0x5e07
   11ef4:	str	r1, [sp]
   11ef8:	str	r0, [sp, #4]
   11efc:	mov	r1, #1
   11f00:	mov	r2, #28
   11f04:	mov	r4, lr
   11f08:	movt	sl, #2
   11f0c:	movt	r3, #1
   11f10:	mov	r0, sl
   11f14:	bl	110dc <__sprintf_chk@plt>
   11f18:	mov	r2, r9
   11f1c:	mov	lr, r4
   11f20:	b	11b68 <__mempcpy_chk@plt+0x9a8>
   11f24:	ldr	r0, [sp, #68]	; 0x44
   11f28:	bl	12a5c <__mempcpy_chk@plt+0x189c>
   11f2c:	ldr	r1, [r6]
   11f30:	movw	r0, #24112	; 0x5e30
   11f34:	movt	r0, #1
   11f38:	bl	10f20 <fputs_unlocked@plt>
   11f3c:	cmn	r0, #1
   11f40:	beq	11d6c <__mempcpy_chk@plt+0xbac>
   11f44:	mov	r0, #0
   11f48:	sub	sp, fp, #88	; 0x58
   11f4c:	vpop	{d8-d14}
   11f50:	add	sp, sp, #4
   11f54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f58:	movw	sl, #29040	; 0x7170
   11f5c:	movw	r3, #24082	; 0x5e12
   11f60:	str	r0, [sp]
   11f64:	mov	r1, #1
   11f68:	mov	r2, #28
   11f6c:	mov	r4, lr
   11f70:	movt	sl, #2
   11f74:	movt	r3, #1
   11f78:	mov	r0, sl
   11f7c:	bl	110dc <__sprintf_chk@plt>
   11f80:	mov	lr, r4
   11f84:	mov	r2, r9
   11f88:	b	11b68 <__mempcpy_chk@plt+0x9a8>
   11f8c:	movw	r0, #23396	; 0x5b64
   11f90:	movt	r0, #1
   11f94:	bl	14e70 <__mempcpy_chk@plt+0x3cb0>
   11f98:	str	r0, [sp, #68]	; 0x44
   11f9c:	ldr	r7, [sp, #32]
   11fa0:	ldrb	r0, [r7]
   11fa4:	cmp	r0, #45	; 0x2d
   11fa8:	beq	11fe0 <__mempcpy_chk@plt+0xe20>
   11fac:	ldr	r6, [sp, #68]	; 0x44
   11fb0:	ldrb	r0, [r6]
   11fb4:	cmp	r0, #45	; 0x2d
   11fb8:	beq	11fe0 <__mempcpy_chk@plt+0xe20>
   11fbc:	vldr	d16, [sp, #48]	; 0x30
   11fc0:	vmov	r0, r1, d16
   11fc4:	bl	154f8 <__mempcpy_chk@plt+0x4338>
   11fc8:	mov	r2, r0
   11fcc:	mov	r3, r1
   11fd0:	mov	r0, r7
   11fd4:	mov	r1, r6
   11fd8:	bl	121e4 <__mempcpy_chk@plt+0x1024>
   11fdc:	ldr	r7, [sp, #32]
   11fe0:	mov	r0, r7
   11fe4:	bl	12a5c <__mempcpy_chk@plt+0x189c>
   11fe8:	ldr	r0, [sp, #68]	; 0x44
   11fec:	bl	12a5c <__mempcpy_chk@plt+0x189c>
   11ff0:	add	lr, sp, #20
   11ff4:	ldr	ip, [sp, #12]
   11ff8:	ldr	r1, [sp, #8]
   11ffc:	mov	r7, r5
   12000:	mov	r6, r9
   12004:	ldm	lr, {r2, r3, lr}
   12008:	b	11b38 <__mempcpy_chk@plt+0x978>
   1200c:	movw	r1, #23828	; 0x5d14
   12010:	movt	r1, #1
   12014:	b	12020 <__mempcpy_chk@plt+0xe60>
   12018:	movw	r1, #23943	; 0x5d87
   1201c:	movt	r1, #1
   12020:	mov	r0, #0
   12024:	mov	r2, #5
   12028:	bl	10fc8 <dcgettext@plt>
   1202c:	mov	r4, r0
   12030:	mov	r0, r7
   12034:	bl	14470 <__mempcpy_chk@plt+0x32b0>
   12038:	mov	r3, r0
   1203c:	mov	r0, #1
   12040:	mov	r1, #0
   12044:	mov	r2, r4
   12048:	bl	11040 <error@plt>
   1204c:	cmn	r0, #3
   12050:	bne	1209c <__mempcpy_chk@plt+0xedc>
   12054:	movw	r0, #28928	; 0x7100
   12058:	movw	r2, #23238	; 0x5ac6
   1205c:	mov	r1, #0
   12060:	movt	r0, #2
   12064:	movt	r2, #1
   12068:	str	r1, [sp, #4]
   1206c:	movw	r1, #23189	; 0x5a95
   12070:	movt	r1, #1
   12074:	ldr	r3, [r0]
   12078:	movw	r0, #29020	; 0x715c
   1207c:	str	r2, [sp]
   12080:	movw	r2, #23224	; 0x5ab8
   12084:	movt	r0, #2
   12088:	movt	r2, #1
   1208c:	ldr	r0, [r0]
   12090:	bl	14974 <__mempcpy_chk@plt+0x37b4>
   12094:	mov	r0, #0
   12098:	bl	110a0 <exit@plt>
   1209c:	cmn	r0, #2
   120a0:	bne	12188 <__mempcpy_chk@plt+0xfc8>
   120a4:	mov	r0, #0
   120a8:	bl	112c0 <__mempcpy_chk@plt+0x100>
   120ac:	movw	r1, #23253	; 0x5ad5
   120b0:	movt	r1, #1
   120b4:	b	12128 <__mempcpy_chk@plt+0xf68>
   120b8:	movw	r1, #23269	; 0x5ae5
   120bc:	mov	r0, #0
   120c0:	mov	r2, #5
   120c4:	movt	r1, #1
   120c8:	bl	10fc8 <dcgettext@plt>
   120cc:	mov	r4, r0
   120d0:	ldr	r0, [r5]
   120d4:	ldr	r1, [sp, #28]
   120d8:	add	r0, r1, r0, lsl #2
   120dc:	ldr	r0, [r0, #12]
   120e0:	b	12170 <__mempcpy_chk@plt+0xfb0>
   120e4:	movw	r1, #23876	; 0x5d44
   120e8:	movt	r1, #1
   120ec:	b	12020 <__mempcpy_chk@plt+0xe60>
   120f0:	movw	r1, #23906	; 0x5d62
   120f4:	mov	r0, #0
   120f8:	mov	r2, #5
   120fc:	movt	r1, #1
   12100:	bl	10fc8 <dcgettext@plt>
   12104:	mov	r4, r0
   12108:	mov	r0, r7
   1210c:	bl	14470 <__mempcpy_chk@plt+0x32b0>
   12110:	mov	r3, r0
   12114:	ldrb	r0, [r7, r5]
   12118:	str	r0, [sp]
   1211c:	b	1203c <__mempcpy_chk@plt+0xe7c>
   12120:	movw	r1, #23286	; 0x5af6
   12124:	movt	r1, #1
   12128:	mov	r0, #0
   1212c:	mov	r2, #5
   12130:	bl	10fc8 <dcgettext@plt>
   12134:	mov	r2, r0
   12138:	mov	r0, #0
   1213c:	mov	r1, #0
   12140:	bl	11040 <error@plt>
   12144:	b	12188 <__mempcpy_chk@plt+0xfc8>
   12148:	movw	r1, #23357	; 0x5b3d
   1214c:	mov	r0, #0
   12150:	mov	r2, #5
   12154:	movt	r1, #1
   12158:	bl	10fc8 <dcgettext@plt>
   1215c:	mov	r4, r0
   12160:	ldr	r0, [r5]
   12164:	ldr	r1, [sp, #28]
   12168:	add	r0, r1, r0, lsl #2
   1216c:	ldr	r0, [r0, #-4]
   12170:	bl	14470 <__mempcpy_chk@plt+0x32b0>
   12174:	mov	r3, r0
   12178:	mov	r0, #0
   1217c:	mov	r1, #0
   12180:	mov	r2, r4
   12184:	bl	11040 <error@plt>
   12188:	mov	r0, #1
   1218c:	bl	112c0 <__mempcpy_chk@plt+0x100>
   12190:	andeq	r0, r0, r0
   12194:	rsbmi	r0, r9, r0
   12198:	push	{r4, r5, fp, lr}
   1219c:	add	fp, sp, #8
   121a0:	mov	r4, r0
   121a4:	ldrb	r0, [r0]
   121a8:	sub	r1, r0, #48	; 0x30
   121ac:	mov	r0, #0
   121b0:	cmp	r1, #9
   121b4:	pophi	{r4, r5, fp, pc}
   121b8:	mov	r0, r4
   121bc:	bl	110b8 <strlen@plt>
   121c0:	movw	r1, #23865	; 0x5d39
   121c4:	mov	r5, r0
   121c8:	mov	r0, r4
   121cc:	movt	r1, #1
   121d0:	bl	111b4 <strspn@plt>
   121d4:	sub	r0, r5, r0
   121d8:	clz	r0, r0
   121dc:	lsr	r0, r0, #5
   121e0:	pop	{r4, r5, fp, pc}
   121e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   121e8:	add	fp, sp, #28
   121ec:	sub	sp, sp, #44	; 0x2c
   121f0:	mov	sl, r1
   121f4:	movw	r1, #23396	; 0x5b64
   121f8:	mov	r6, r0
   121fc:	str	r3, [sp, #28]
   12200:	str	r2, [sp, #24]
   12204:	movt	r1, #1
   12208:	mov	r0, sl
   1220c:	bl	10f38 <strcmp@plt>
   12210:	str	r0, [sp, #20]
   12214:	mov	r0, #0
   12218:	ldrb	r1, [r6]
   1221c:	cmp	r1, #48	; 0x30
   12220:	bne	12230 <__mempcpy_chk@plt+0x1070>
   12224:	sub	r0, r0, #1
   12228:	add	r6, r6, #1
   1222c:	b	12218 <__mempcpy_chk@plt+0x1058>
   12230:	cmp	r1, #0
   12234:	bne	12240 <__mempcpy_chk@plt+0x1080>
   12238:	cmp	r0, #0
   1223c:	subne	r6, r6, #1
   12240:	mov	r0, #0
   12244:	ldrb	r1, [sl]
   12248:	cmp	r1, #48	; 0x30
   1224c:	bne	1225c <__mempcpy_chk@plt+0x109c>
   12250:	sub	r0, r0, #1
   12254:	add	sl, sl, #1
   12258:	b	12244 <__mempcpy_chk@plt+0x1084>
   1225c:	cmp	r1, #0
   12260:	bne	1226c <__mempcpy_chk@plt+0x10ac>
   12264:	cmp	r0, #0
   12268:	subne	sl, sl, #1
   1226c:	mov	r0, r6
   12270:	bl	110b8 <strlen@plt>
   12274:	mov	r7, r0
   12278:	mov	r0, #0
   1227c:	str	r0, [sp]
   12280:	ldr	r0, [sp, #20]
   12284:	cmp	r0, #0
   12288:	mov	r0, #0
   1228c:	beq	12298 <__mempcpy_chk@plt+0x10d8>
   12290:	mov	r0, sl
   12294:	bl	110b8 <strlen@plt>
   12298:	add	r4, r7, #1
   1229c:	mov	r5, r0
   122a0:	str	r0, [sp, #36]	; 0x24
   122a4:	cmp	r4, r0
   122a8:	movhi	r5, r4
   122ac:	cmp	r5, #31
   122b0:	movls	r5, #31
   122b4:	add	r8, r5, #1
   122b8:	mov	r0, r8
   122bc:	bl	14a7c <__mempcpy_chk@plt+0x38bc>
   122c0:	str	r0, [sp, #16]
   122c4:	add	r0, r0, r5
   122c8:	mov	r1, r6
   122cc:	mov	r2, r4
   122d0:	mov	r4, r8
   122d4:	ldr	r6, [sp, #36]	; 0x24
   122d8:	sub	r9, r0, r7
   122dc:	mov	r0, r9
   122e0:	bl	10f8c <memcpy@plt>
   122e4:	ldr	r0, [sp, #20]
   122e8:	cmp	r0, #0
   122ec:	beq	1233c <__mempcpy_chk@plt+0x117c>
   122f0:	mov	r0, r4
   122f4:	bl	14a7c <__mempcpy_chk@plt+0x38bc>
   122f8:	mov	r8, r0
   122fc:	add	r0, r0, r5
   12300:	add	r2, r6, #1
   12304:	mov	r1, sl
   12308:	sub	r0, r0, r6
   1230c:	str	r0, [sp]
   12310:	bl	10f8c <memcpy@plt>
   12314:	cmp	r7, r6
   12318:	bcc	1233c <__mempcpy_chk@plt+0x117c>
   1231c:	cmp	r6, r7
   12320:	bcc	12548 <__mempcpy_chk@plt+0x1388>
   12324:	ldr	r1, [sp]
   12328:	mov	r0, r9
   1232c:	mov	r2, r7
   12330:	bl	10fbc <memcmp@plt>
   12334:	cmp	r0, #0
   12338:	bgt	12548 <__mempcpy_chk@plt+0x1388>
   1233c:	lsl	r0, r4, #1
   12340:	mov	r1, r4
   12344:	mov	r4, #8192	; 0x2000
   12348:	str	r5, [fp, #-32]	; 0xffffffe0
   1234c:	cmp	r0, #8192	; 0x2000
   12350:	lslhi	r4, r1, #1
   12354:	mov	r0, r4
   12358:	bl	14a7c <__mempcpy_chk@plt+0x38bc>
   1235c:	add	r1, r0, r4
   12360:	str	r4, [sp, #4]
   12364:	mov	r2, r7
   12368:	mvn	r3, #0
   1236c:	str	r1, [sp, #32]
   12370:	mov	r1, r9
   12374:	str	r0, [sp, #12]
   12378:	bl	111c0 <__mempcpy_chk@plt>
   1237c:	mov	sl, r0
   12380:	ldr	r0, [sp, #28]
   12384:	ldr	r1, [sp, #24]
   12388:	mov	r5, #48	; 0x30
   1238c:	mov	r8, #49	; 0x31
   12390:	orr	r0, r1, r0
   12394:	str	r0, [sp, #8]
   12398:	ldr	r0, [sp, #8]
   1239c:	ldr	r1, [sp, #28]
   123a0:	cmp	r0, #0
   123a4:	ldr	r0, [sp, #24]
   123a8:	beq	123f0 <__mempcpy_chk@plt+0x1230>
   123ac:	sub	r2, r9, #1
   123b0:	add	r3, r2, r7
   123b4:	ldrb	r4, [r3]
   123b8:	add	r6, r4, #1
   123bc:	cmp	r4, #57	; 0x39
   123c0:	strb	r6, [r3]
   123c4:	bcc	123e0 <__mempcpy_chk@plt+0x1220>
   123c8:	strb	r5, [r3], #-1
   123cc:	cmp	r3, r9
   123d0:	bcs	123b4 <__mempcpy_chk@plt+0x11f4>
   123d4:	add	r7, r7, #1
   123d8:	mov	r9, r2
   123dc:	strb	r8, [r2]
   123e0:	subs	r0, r0, #1
   123e4:	sbc	r1, r1, #0
   123e8:	orrs	r2, r0, r1
   123ec:	bne	123ac <__mempcpy_chk@plt+0x11ec>
   123f0:	ldr	r0, [sp, #20]
   123f4:	cmp	r0, #0
   123f8:	beq	1242c <__mempcpy_chk@plt+0x126c>
   123fc:	ldr	r0, [sp, #36]	; 0x24
   12400:	cmp	r7, r0
   12404:	bcc	1242c <__mempcpy_chk@plt+0x126c>
   12408:	ldr	r0, [sp, #36]	; 0x24
   1240c:	cmp	r0, r7
   12410:	bcc	12510 <__mempcpy_chk@plt+0x1350>
   12414:	ldr	r1, [sp]
   12418:	mov	r0, r9
   1241c:	mov	r2, r7
   12420:	bl	10fbc <memcmp@plt>
   12424:	cmp	r0, #0
   12428:	bgt	12510 <__mempcpy_chk@plt+0x1350>
   1242c:	movw	r0, #29036	; 0x716c
   12430:	ldr	r6, [fp, #-32]	; 0xffffffe0
   12434:	movt	r0, #2
   12438:	ldr	r0, [r0]
   1243c:	cmp	r7, r6
   12440:	ldrb	r0, [r0]
   12444:	strb	r0, [sl], #1
   12448:	bne	124b4 <__mempcpy_chk@plt+0x12f4>
   1244c:	mov	r0, #1
   12450:	orr	r4, r0, r6, lsl #1
   12454:	ldr	r0, [sp, #16]
   12458:	mov	r1, r4
   1245c:	bl	14ac4 <__mempcpy_chk@plt+0x3904>
   12460:	add	r9, r0, r6
   12464:	mov	r1, r0
   12468:	add	r2, r6, #1
   1246c:	mov	r0, r9
   12470:	str	r1, [sp, #16]
   12474:	bl	10f68 <memmove@plt>
   12478:	lsl	r6, r6, #1
   1247c:	str	r6, [fp, #-32]	; 0xffffffe0
   12480:	ldr	r0, [sp, #4]
   12484:	cmp	r0, r4, lsl #1
   12488:	bcs	124b4 <__mempcpy_chk@plt+0x12f4>
   1248c:	ldr	r0, [sp, #12]
   12490:	lsl	r6, r4, #1
   12494:	mov	r1, r6
   12498:	sub	r4, sl, r0
   1249c:	bl	14ac4 <__mempcpy_chk@plt+0x3904>
   124a0:	add	sl, r0, r4
   124a4:	str	r6, [sp, #4]
   124a8:	str	r0, [sp, #12]
   124ac:	add	r0, r0, r6
   124b0:	str	r0, [sp, #32]
   124b4:	mov	r0, sl
   124b8:	mov	r1, r9
   124bc:	mov	r2, r7
   124c0:	mvn	r3, #0
   124c4:	bl	111c0 <__mempcpy_chk@plt>
   124c8:	ldr	r1, [sp, #32]
   124cc:	mov	sl, r0
   124d0:	mvn	r0, r7
   124d4:	add	r0, r1, r0
   124d8:	cmp	r0, sl
   124dc:	bcs	12398 <__mempcpy_chk@plt+0x11d8>
   124e0:	movw	r0, #29020	; 0x715c
   124e4:	ldr	r4, [sp, #12]
   124e8:	mov	r2, #1
   124ec:	movt	r0, #2
   124f0:	ldr	r3, [r0]
   124f4:	sub	r1, sl, r4
   124f8:	mov	r0, r4
   124fc:	bl	10fb0 <fwrite_unlocked@plt>
   12500:	cmp	r0, #1
   12504:	mov	sl, r4
   12508:	beq	12398 <__mempcpy_chk@plt+0x11d8>
   1250c:	b	12544 <__mempcpy_chk@plt+0x1384>
   12510:	ldr	r0, [sp, #12]
   12514:	movw	r2, #29020	; 0x715c
   12518:	mov	r1, #10
   1251c:	movt	r2, #2
   12520:	strb	r1, [sl], -r0
   12524:	ldr	r3, [r2]
   12528:	mov	r2, #1
   1252c:	add	r1, sl, #1
   12530:	bl	10fb0 <fwrite_unlocked@plt>
   12534:	cmp	r0, #1
   12538:	bne	12544 <__mempcpy_chk@plt+0x1384>
   1253c:	mov	r0, #0
   12540:	bl	110a0 <exit@plt>
   12544:	bl	1288c <__mempcpy_chk@plt+0x16cc>
   12548:	ldr	r0, [sp, #16]
   1254c:	bl	12a5c <__mempcpy_chk@plt+0x189c>
   12550:	mov	r0, r8
   12554:	sub	sp, fp, #28
   12558:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1255c:	b	12a5c <__mempcpy_chk@plt+0x189c>
   12560:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12564:	add	fp, sp, #28
   12568:	sub	sp, sp, #4
   1256c:	vpush	{d8}
   12570:	sub	sp, sp, #16
   12574:	movw	r3, #10448	; 0x28d0
   12578:	mov	r4, r0
   1257c:	mov	r5, r1
   12580:	mov	r0, r1
   12584:	mov	r1, #0
   12588:	movt	r3, #1
   1258c:	mov	r2, r4
   12590:	bl	14eec <__mempcpy_chk@plt+0x3d2c>
   12594:	cmp	r0, #0
   12598:	beq	12800 <__mempcpy_chk@plt+0x1640>
   1259c:	vldr	d8, [r4]
   125a0:	vcmpe.f64	d8, d8
   125a4:	vmrs	APSR_nzcv, fpscr
   125a8:	bvs	12834 <__mempcpy_chk@plt+0x1674>
   125ac:	sub	r5, r5, #1
   125b0:	bl	11094 <__ctype_b_loc@plt>
   125b4:	ldr	r0, [r0]
   125b8:	ldrb	r2, [r5, #1]!
   125bc:	add	r1, r0, r2, lsl #1
   125c0:	cmp	r2, #43	; 0x2b
   125c4:	ldrh	r1, [r1]
   125c8:	and	r1, r1, #8192	; 0x2000
   125cc:	beq	125b8 <__mempcpy_chk@plt+0x13f8>
   125d0:	cmp	r1, #0
   125d4:	bne	125b8 <__mempcpy_chk@plt+0x13f8>
   125d8:	mvn	r1, #-2147483648	; 0x80000000
   125dc:	mov	r0, #0
   125e0:	strd	r0, [r4, #8]
   125e4:	mov	r0, r5
   125e8:	mov	r1, #46	; 0x2e
   125ec:	bl	110c4 <strchr@plt>
   125f0:	mov	r9, r0
   125f4:	cmp	r0, #0
   125f8:	bne	12614 <__mempcpy_chk@plt+0x1454>
   125fc:	mov	r0, r5
   12600:	mov	r1, #112	; 0x70
   12604:	bl	110c4 <strchr@plt>
   12608:	cmp	r0, #0
   1260c:	moveq	r0, #0
   12610:	streq	r0, [r4, #12]
   12614:	movw	r1, #24065	; 0x5e01
   12618:	mov	r0, r5
   1261c:	movt	r1, #1
   12620:	bl	10f50 <strcspn@plt>
   12624:	vmov.i32	d16, #0	; 0x00000000
   12628:	vmul.f64	d16, d8, d16
   1262c:	vcmp.f64	d16, #0.0
   12630:	vmrs	APSR_nzcv, fpscr
   12634:	ldrbeq	r0, [r5, r0]
   12638:	cmpeq	r0, #0
   1263c:	bne	127f0 <__mempcpy_chk@plt+0x1630>
   12640:	mov	r0, r5
   12644:	bl	110b8 <strlen@plt>
   12648:	cmp	r9, #0
   1264c:	str	r0, [r4, #8]
   12650:	beq	1269c <__mempcpy_chk@plt+0x14dc>
   12654:	movw	r1, #24068	; 0x5e04
   12658:	mov	r6, r0
   1265c:	add	r0, r9, #1
   12660:	movt	r1, #1
   12664:	bl	10f50 <strcspn@plt>
   12668:	mov	r8, r0
   1266c:	cmp	r0, #0
   12670:	bmi	1267c <__mempcpy_chk@plt+0x14bc>
   12674:	str	r8, [r4, #12]
   12678:	beq	126ac <__mempcpy_chk@plt+0x14ec>
   1267c:	cmp	r9, r5
   12680:	beq	126a4 <__mempcpy_chk@plt+0x14e4>
   12684:	ldrb	r0, [r9, #-1]
   12688:	sub	r1, r0, #48	; 0x30
   1268c:	mov	r0, #0
   12690:	cmp	r1, #9
   12694:	movwhi	r0, #1
   12698:	b	126b0 <__mempcpy_chk@plt+0x14f0>
   1269c:	mov	r8, #0
   126a0:	b	126b8 <__mempcpy_chk@plt+0x14f8>
   126a4:	mov	r0, #1
   126a8:	b	126b0 <__mempcpy_chk@plt+0x14f0>
   126ac:	mvn	r0, #0
   126b0:	add	r0, r0, r6
   126b4:	str	r0, [r4, #8]
   126b8:	mov	r0, r5
   126bc:	mov	r1, #101	; 0x65
   126c0:	bl	110c4 <strchr@plt>
   126c4:	mov	r6, r0
   126c8:	cmp	r0, #0
   126cc:	bne	126e8 <__mempcpy_chk@plt+0x1528>
   126d0:	mov	r0, r5
   126d4:	mov	r1, #69	; 0x45
   126d8:	bl	110c4 <strchr@plt>
   126dc:	mov	r6, r0
   126e0:	cmp	r0, #0
   126e4:	beq	127f0 <__mempcpy_chk@plt+0x1630>
   126e8:	add	r7, r6, #1
   126ec:	mov	r1, #0
   126f0:	mov	r2, #10
   126f4:	mov	r0, r7
   126f8:	bl	10f44 <strtol@plt>
   126fc:	mov	sl, #-2147483647	; 0x80000001
   12700:	cmp	r0, #-2147483646	; 0x80000002
   12704:	str	r8, [sp, #8]
   12708:	blt	12744 <__mempcpy_chk@plt+0x1584>
   1270c:	mov	r0, r7
   12710:	mov	r1, #0
   12714:	mov	r2, #10
   12718:	bl	10f44 <strtol@plt>
   1271c:	mov	sl, r0
   12720:	cmp	r0, #0
   12724:	bmi	12754 <__mempcpy_chk@plt+0x1594>
   12728:	ldr	r1, [r4, #12]
   1272c:	mov	r0, sl
   12730:	cmp	r1, sl
   12734:	movlt	r0, r1
   12738:	mov	r1, #0
   1273c:	str	r1, [sp, #12]
   12740:	b	12760 <__mempcpy_chk@plt+0x15a0>
   12744:	mov	r0, #1
   12748:	str	r0, [sp, #12]
   1274c:	mov	r0, #-2147483647	; 0x80000001
   12750:	b	12760 <__mempcpy_chk@plt+0x15a0>
   12754:	mov	r0, #1
   12758:	str	r0, [sp, #12]
   1275c:	mov	r0, sl
   12760:	ldr	r1, [r4, #12]
   12764:	sub	r8, r6, r5
   12768:	sub	r7, r1, r0
   1276c:	mov	r0, r5
   12770:	str	r7, [r4, #12]
   12774:	bl	110b8 <strlen@plt>
   12778:	ldr	r1, [r4, #8]
   1277c:	sub	r0, r8, r0
   12780:	add	r0, r0, r1
   12784:	ldr	r1, [sp, #12]
   12788:	str	r0, [r4, #8]
   1278c:	cmp	r1, #0
   12790:	beq	127b4 <__mempcpy_chk@plt+0x15f4>
   12794:	cmp	r9, #0
   12798:	addne	r1, r9, #1
   1279c:	cmpne	r6, r1
   127a0:	bne	127ac <__mempcpy_chk@plt+0x15ec>
   127a4:	add	r0, r0, #1
   127a8:	str	r0, [r4, #8]
   127ac:	rsb	r1, sl, #0
   127b0:	b	127e8 <__mempcpy_chk@plt+0x1628>
   127b4:	cmp	r9, #0
   127b8:	beq	127d8 <__mempcpy_chk@plt+0x1618>
   127bc:	ldr	r1, [sp, #8]
   127c0:	cmp	r1, #0
   127c4:	beq	127dc <__mempcpy_chk@plt+0x161c>
   127c8:	cmp	r7, #0
   127cc:	subeq	r0, r0, #1
   127d0:	streq	r0, [r4, #8]
   127d4:	b	127dc <__mempcpy_chk@plt+0x161c>
   127d8:	ldr	r1, [sp, #8]
   127dc:	cmp	r1, sl
   127e0:	movcs	r1, sl
   127e4:	sub	r1, sl, r1
   127e8:	add	r0, r0, r1
   127ec:	str	r0, [r4, #8]
   127f0:	sub	sp, fp, #40	; 0x28
   127f4:	vpop	{d8}
   127f8:	add	sp, sp, #4
   127fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12800:	movw	r1, #23992	; 0x5db8
   12804:	mov	r0, #0
   12808:	mov	r2, #5
   1280c:	movt	r1, #1
   12810:	bl	10fc8 <dcgettext@plt>
   12814:	mov	r4, r0
   12818:	mov	r0, r5
   1281c:	bl	14470 <__mempcpy_chk@plt+0x32b0>
   12820:	mov	r3, r0
   12824:	mov	r0, #0
   12828:	mov	r1, #0
   1282c:	mov	r2, r4
   12830:	b	12880 <__mempcpy_chk@plt+0x16c0>
   12834:	movw	r1, #24028	; 0x5ddc
   12838:	mov	r0, #0
   1283c:	mov	r2, #5
   12840:	movt	r1, #1
   12844:	bl	10fc8 <dcgettext@plt>
   12848:	movw	r1, #24052	; 0x5df4
   1284c:	mov	r4, r0
   12850:	mov	r0, #0
   12854:	movt	r1, #1
   12858:	bl	14460 <__mempcpy_chk@plt+0x32a0>
   1285c:	mov	r6, r0
   12860:	mov	r0, #1
   12864:	mov	r1, r5
   12868:	bl	14460 <__mempcpy_chk@plt+0x32a0>
   1286c:	str	r0, [sp]
   12870:	mov	r0, #0
   12874:	mov	r1, #0
   12878:	mov	r2, r4
   1287c:	mov	r3, r6
   12880:	bl	11040 <error@plt>
   12884:	mov	r0, #1
   12888:	bl	112c0 <__mempcpy_chk@plt+0x100>
   1288c:	push	{fp, lr}
   12890:	mov	fp, sp
   12894:	movw	r0, #29020	; 0x715c
   12898:	movt	r0, #2
   1289c:	ldr	r0, [r0]
   128a0:	bl	11178 <clearerr_unlocked@plt>
   128a4:	bl	110d0 <__errno_location@plt>
   128a8:	movw	r1, #23980	; 0x5dac
   128ac:	ldr	r4, [r0]
   128b0:	mov	r0, #0
   128b4:	mov	r2, #5
   128b8:	movt	r1, #1
   128bc:	bl	10fc8 <dcgettext@plt>
   128c0:	mov	r2, r0
   128c4:	mov	r0, #1
   128c8:	mov	r1, r4
   128cc:	bl	11040 <error@plt>
   128d0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   128d4:	add	fp, sp, #24
   128d8:	vpush	{d8}
   128dc:	sub	sp, sp, #8
   128e0:	mov	r4, r1
   128e4:	add	r1, sp, #4
   128e8:	mov	r5, r0
   128ec:	bl	10fa4 <strtold@plt>
   128f0:	ldr	r7, [sp, #4]
   128f4:	vmov.f64	d8, d0
   128f8:	ldrb	r0, [r7]
   128fc:	cmp	r0, #0
   12900:	beq	1293c <__mempcpy_chk@plt+0x177c>
   12904:	bl	110d0 <__errno_location@plt>
   12908:	ldr	r8, [r0]
   1290c:	mov	r6, r0
   12910:	mov	r1, sp
   12914:	mov	r0, r5
   12918:	bl	15058 <__mempcpy_chk@plt+0x3e98>
   1291c:	ldr	r0, [sp]
   12920:	cmp	r7, r0
   12924:	bcs	12938 <__mempcpy_chk@plt+0x1778>
   12928:	str	r0, [sp, #4]
   1292c:	mov	r7, r0
   12930:	vmov.f64	d8, d0
   12934:	b	1293c <__mempcpy_chk@plt+0x177c>
   12938:	str	r8, [r6]
   1293c:	cmp	r4, #0
   12940:	vmov.f64	d0, d8
   12944:	strne	r7, [r4]
   12948:	sub	sp, fp, #32
   1294c:	vpop	{d8}
   12950:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12954:	movw	r1, #29068	; 0x718c
   12958:	movt	r1, #2
   1295c:	str	r0, [r1]
   12960:	bx	lr
   12964:	movw	r1, #29072	; 0x7190
   12968:	movt	r1, #2
   1296c:	strb	r0, [r1]
   12970:	bx	lr
   12974:	push	{r4, r5, r6, sl, fp, lr}
   12978:	add	fp, sp, #16
   1297c:	sub	sp, sp, #8
   12980:	movw	r0, #29020	; 0x715c
   12984:	movt	r0, #2
   12988:	ldr	r0, [r0]
   1298c:	bl	15104 <__mempcpy_chk@plt+0x3f44>
   12990:	cmp	r0, #0
   12994:	beq	129bc <__mempcpy_chk@plt+0x17fc>
   12998:	movw	r0, #29072	; 0x7190
   1299c:	movt	r0, #2
   129a0:	ldrb	r0, [r0]
   129a4:	cmp	r0, #0
   129a8:	beq	129dc <__mempcpy_chk@plt+0x181c>
   129ac:	bl	110d0 <__errno_location@plt>
   129b0:	ldr	r0, [r0]
   129b4:	cmp	r0, #32
   129b8:	bne	129dc <__mempcpy_chk@plt+0x181c>
   129bc:	movw	r0, #29016	; 0x7158
   129c0:	movt	r0, #2
   129c4:	ldr	r0, [r0]
   129c8:	bl	15104 <__mempcpy_chk@plt+0x3f44>
   129cc:	cmp	r0, #0
   129d0:	subeq	sp, fp, #16
   129d4:	popeq	{r4, r5, r6, sl, fp, pc}
   129d8:	b	12a4c <__mempcpy_chk@plt+0x188c>
   129dc:	movw	r1, #23980	; 0x5dac
   129e0:	mov	r0, #0
   129e4:	mov	r2, #5
   129e8:	movt	r1, #1
   129ec:	bl	10fc8 <dcgettext@plt>
   129f0:	mov	r4, r0
   129f4:	movw	r0, #29068	; 0x718c
   129f8:	movt	r0, #2
   129fc:	ldr	r6, [r0]
   12a00:	bl	110d0 <__errno_location@plt>
   12a04:	ldr	r5, [r0]
   12a08:	cmp	r6, #0
   12a0c:	bne	12a28 <__mempcpy_chk@plt+0x1868>
   12a10:	movw	r2, #23387	; 0x5b5b
   12a14:	mov	r0, #0
   12a18:	mov	r1, r5
   12a1c:	mov	r3, r4
   12a20:	movt	r2, #1
   12a24:	b	12a48 <__mempcpy_chk@plt+0x1888>
   12a28:	mov	r0, r6
   12a2c:	bl	14230 <__mempcpy_chk@plt+0x3070>
   12a30:	movw	r2, #24287	; 0x5edf
   12a34:	mov	r3, r0
   12a38:	str	r4, [sp]
   12a3c:	mov	r0, #0
   12a40:	mov	r1, r5
   12a44:	movt	r2, #1
   12a48:	bl	11040 <error@plt>
   12a4c:	movw	r0, #28932	; 0x7104
   12a50:	movt	r0, #2
   12a54:	ldr	r0, [r0]
   12a58:	bl	10f80 <_exit@plt>
   12a5c:	push	{r4, r5, r6, sl, fp, lr}
   12a60:	add	fp, sp, #16
   12a64:	mov	r4, r0
   12a68:	bl	110d0 <__errno_location@plt>
   12a6c:	ldr	r6, [r0]
   12a70:	mov	r5, r0
   12a74:	mov	r0, r4
   12a78:	bl	10f74 <free@plt>
   12a7c:	str	r6, [r5]
   12a80:	pop	{r4, r5, r6, sl, fp, pc}
   12a84:	push	{r4, r5, fp, lr}
   12a88:	add	fp, sp, #8
   12a8c:	cmp	r0, #0
   12a90:	beq	12b24 <__mempcpy_chk@plt+0x1964>
   12a94:	mov	r1, #47	; 0x2f
   12a98:	mov	r4, r0
   12a9c:	bl	11154 <strrchr@plt>
   12aa0:	cmp	r0, #0
   12aa4:	mov	r5, r4
   12aa8:	addne	r5, r0, #1
   12aac:	sub	r0, r5, r4
   12ab0:	cmp	r0, #7
   12ab4:	blt	12b08 <__mempcpy_chk@plt+0x1948>
   12ab8:	movw	r1, #24350	; 0x5f1e
   12abc:	sub	r0, r5, #7
   12ac0:	mov	r2, #7
   12ac4:	movt	r1, #1
   12ac8:	bl	1119c <strncmp@plt>
   12acc:	cmp	r0, #0
   12ad0:	bne	12b08 <__mempcpy_chk@plt+0x1948>
   12ad4:	movw	r1, #24358	; 0x5f26
   12ad8:	mov	r0, r5
   12adc:	mov	r2, #3
   12ae0:	movt	r1, #1
   12ae4:	bl	1119c <strncmp@plt>
   12ae8:	cmp	r0, #0
   12aec:	beq	12af8 <__mempcpy_chk@plt+0x1938>
   12af0:	mov	r4, r5
   12af4:	b	12b08 <__mempcpy_chk@plt+0x1948>
   12af8:	movw	r0, #29000	; 0x7148
   12afc:	add	r4, r5, #3
   12b00:	movt	r0, #2
   12b04:	str	r4, [r0]
   12b08:	movw	r0, #29004	; 0x714c
   12b0c:	movt	r0, #2
   12b10:	str	r4, [r0]
   12b14:	movw	r0, #29076	; 0x7194
   12b18:	movt	r0, #2
   12b1c:	str	r4, [r0]
   12b20:	pop	{r4, r5, fp, pc}
   12b24:	movw	r0, #29016	; 0x7158
   12b28:	movt	r0, #2
   12b2c:	ldr	r1, [r0]
   12b30:	movw	r0, #24294	; 0x5ee6
   12b34:	movt	r0, #1
   12b38:	bl	11190 <fputs@plt>
   12b3c:	bl	111a8 <abort@plt>
   12b40:	push	{r4, r5, r6, sl, fp, lr}
   12b44:	add	fp, sp, #16
   12b48:	mov	r4, r0
   12b4c:	movw	r0, #29080	; 0x7198
   12b50:	movt	r0, #2
   12b54:	cmp	r4, #0
   12b58:	moveq	r4, r0
   12b5c:	bl	110d0 <__errno_location@plt>
   12b60:	ldr	r6, [r0]
   12b64:	mov	r5, r0
   12b68:	mov	r0, r4
   12b6c:	mov	r1, #48	; 0x30
   12b70:	bl	14dcc <__mempcpy_chk@plt+0x3c0c>
   12b74:	str	r6, [r5]
   12b78:	pop	{r4, r5, r6, sl, fp, pc}
   12b7c:	movw	r1, #29080	; 0x7198
   12b80:	cmp	r0, #0
   12b84:	movt	r1, #2
   12b88:	movne	r1, r0
   12b8c:	ldr	r0, [r1]
   12b90:	bx	lr
   12b94:	movw	r2, #29080	; 0x7198
   12b98:	cmp	r0, #0
   12b9c:	movt	r2, #2
   12ba0:	movne	r2, r0
   12ba4:	str	r1, [r2]
   12ba8:	bx	lr
   12bac:	movw	r3, #29080	; 0x7198
   12bb0:	cmp	r0, #0
   12bb4:	and	r2, r2, #1
   12bb8:	movt	r3, #2
   12bbc:	movne	r3, r0
   12bc0:	ubfx	r0, r1, #5, #3
   12bc4:	and	r1, r1, #31
   12bc8:	add	ip, r3, r0, lsl #2
   12bcc:	mov	r0, #1
   12bd0:	ldr	r3, [ip, #8]
   12bd4:	and	r0, r0, r3, lsr r1
   12bd8:	eor	r2, r0, r2
   12bdc:	eor	r1, r3, r2, lsl r1
   12be0:	str	r1, [ip, #8]
   12be4:	bx	lr
   12be8:	movw	r2, #29080	; 0x7198
   12bec:	cmp	r0, #0
   12bf0:	movt	r2, #2
   12bf4:	movne	r2, r0
   12bf8:	ldr	r0, [r2, #4]
   12bfc:	str	r1, [r2, #4]
   12c00:	bx	lr
   12c04:	push	{fp, lr}
   12c08:	mov	fp, sp
   12c0c:	movw	r3, #29080	; 0x7198
   12c10:	cmp	r0, #0
   12c14:	movt	r3, #2
   12c18:	movne	r3, r0
   12c1c:	cmp	r1, #0
   12c20:	mov	r0, #10
   12c24:	cmpne	r2, #0
   12c28:	str	r0, [r3]
   12c2c:	bne	12c34 <__mempcpy_chk@plt+0x1a74>
   12c30:	bl	111a8 <abort@plt>
   12c34:	str	r1, [r3, #40]	; 0x28
   12c38:	str	r2, [r3, #44]	; 0x2c
   12c3c:	pop	{fp, pc}
   12c40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c44:	add	fp, sp, #28
   12c48:	sub	sp, sp, #20
   12c4c:	mov	r7, r0
   12c50:	ldr	r0, [fp, #8]
   12c54:	movw	r5, #29080	; 0x7198
   12c58:	mov	r8, r3
   12c5c:	mov	r9, r2
   12c60:	mov	sl, r1
   12c64:	movt	r5, #2
   12c68:	cmp	r0, #0
   12c6c:	movne	r5, r0
   12c70:	bl	110d0 <__errno_location@plt>
   12c74:	ldr	r2, [r5, #40]	; 0x28
   12c78:	ldr	r3, [r5, #44]	; 0x2c
   12c7c:	mov	r4, r0
   12c80:	ldm	r5, {r0, r1}
   12c84:	add	r5, r5, #8
   12c88:	ldr	r6, [r4]
   12c8c:	stm	sp, {r0, r1, r5}
   12c90:	mov	r0, r7
   12c94:	mov	r1, sl
   12c98:	str	r2, [sp, #12]
   12c9c:	str	r3, [sp, #16]
   12ca0:	mov	r2, r9
   12ca4:	mov	r3, r8
   12ca8:	bl	12cb8 <__mempcpy_chk@plt+0x1af8>
   12cac:	str	r6, [r4]
   12cb0:	sub	sp, fp, #28
   12cb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12cb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12cbc:	add	fp, sp, #28
   12cc0:	sub	sp, sp, #156	; 0x9c
   12cc4:	mov	r5, r0
   12cc8:	add	r0, r2, #1
   12ccc:	mov	r6, r1
   12cd0:	mov	sl, r3
   12cd4:	str	r2, [fp, #-80]	; 0xffffffb0
   12cd8:	str	r0, [sp, #72]	; 0x48
   12cdc:	ldr	r0, [fp, #12]
   12ce0:	and	r1, r0, #1
   12ce4:	str	r1, [sp, #32]
   12ce8:	and	r1, r0, #4
   12cec:	str	r1, [sp, #28]
   12cf0:	ubfx	r9, r0, #1, #1
   12cf4:	bl	11004 <__ctype_get_mb_cur_max@plt>
   12cf8:	str	r0, [sp, #40]	; 0x28
   12cfc:	ldr	r0, [fp, #24]
   12d00:	ldr	r7, [fp, #8]
   12d04:	mov	r1, #0
   12d08:	mov	lr, #0
   12d0c:	str	r5, [fp, #-84]	; 0xffffffac
   12d10:	str	r1, [sp, #60]	; 0x3c
   12d14:	mov	r1, #1
   12d18:	str	r1, [fp, #-48]	; 0xffffffd0
   12d1c:	str	r0, [sp, #80]	; 0x50
   12d20:	ldr	r0, [fp, #20]
   12d24:	str	r0, [sp, #76]	; 0x4c
   12d28:	mov	r0, #0
   12d2c:	str	r0, [sp, #56]	; 0x38
   12d30:	mov	r0, #0
   12d34:	str	r0, [fp, #-88]	; 0xffffffa8
   12d38:	mov	r0, #0
   12d3c:	str	r0, [fp, #-72]	; 0xffffffb8
   12d40:	mov	r0, #0
   12d44:	cmp	r7, #10
   12d48:	bhi	13d24 <__mempcpy_chk@plt+0x2b64>
   12d4c:	add	r1, pc, #24
   12d50:	ldr	r4, [fp, #-80]	; 0xffffffb0
   12d54:	mov	ip, r6
   12d58:	mov	r8, #0
   12d5c:	mov	r2, #1
   12d60:	mov	r6, #0
   12d64:	mov	r3, sl
   12d68:	ldr	pc, [r1, r7, lsl #2]
   12d6c:	andeq	r2, r1, r8, asr lr
   12d70:	andeq	r2, r1, ip, lsr #29
   12d74:	andeq	r2, r1, ip, ror #28
   12d78:	andeq	r2, r1, r0, asr lr
   12d7c:	andeq	r2, r1, r0, lsr #29
   12d80:	ldrdeq	r2, [r1], -r4
   12d84:	andeq	r2, r1, ip, ror lr
   12d88:	andeq	r2, r1, r8, asr pc
   12d8c:	muleq	r1, r8, sp
   12d90:	muleq	r1, r8, sp
   12d94:	ldrdeq	r2, [r1], -r8
   12d98:	movw	r0, #24442	; 0x5f7a
   12d9c:	mov	r1, r7
   12da0:	mov	r6, r5
   12da4:	mov	r4, ip
   12da8:	mov	r5, lr
   12dac:	movt	r0, #1
   12db0:	bl	14488 <__mempcpy_chk@plt+0x32c8>
   12db4:	str	r0, [sp, #76]	; 0x4c
   12db8:	movw	r0, #23863	; 0x5d37
   12dbc:	mov	r1, r7
   12dc0:	movt	r0, #1
   12dc4:	bl	14488 <__mempcpy_chk@plt+0x32c8>
   12dc8:	mov	lr, r5
   12dcc:	mov	r5, r6
   12dd0:	mov	ip, r4
   12dd4:	str	r0, [sp, #80]	; 0x50
   12dd8:	mov	r8, #0
   12ddc:	tst	r9, #1
   12de0:	str	lr, [sp, #44]	; 0x2c
   12de4:	bne	12e1c <__mempcpy_chk@plt+0x1c5c>
   12de8:	ldr	r0, [sp, #76]	; 0x4c
   12dec:	ldrb	r0, [r0]
   12df0:	cmp	r0, #0
   12df4:	beq	12e1c <__mempcpy_chk@plt+0x1c5c>
   12df8:	ldr	r1, [sp, #76]	; 0x4c
   12dfc:	mov	r8, #0
   12e00:	add	r1, r1, #1
   12e04:	cmp	r8, ip
   12e08:	strbcc	r0, [r5, r8]
   12e0c:	ldrb	r0, [r1, r8]
   12e10:	add	r8, r8, #1
   12e14:	cmp	r0, #0
   12e18:	bne	12e04 <__mempcpy_chk@plt+0x1c44>
   12e1c:	ldr	r6, [sp, #80]	; 0x50
   12e20:	mov	r4, ip
   12e24:	mov	r0, r6
   12e28:	bl	110b8 <strlen@plt>
   12e2c:	mov	ip, r4
   12e30:	ldr	r4, [fp, #-80]	; 0xffffffb0
   12e34:	ldr	lr, [sp, #44]	; 0x2c
   12e38:	str	r6, [fp, #-88]	; 0xffffffa8
   12e3c:	str	r0, [fp, #-72]	; 0xffffffb8
   12e40:	mov	r2, #1
   12e44:	mov	r6, r9
   12e48:	mov	r3, sl
   12e4c:	b	12f58 <__mempcpy_chk@plt+0x1d98>
   12e50:	mov	r0, #1
   12e54:	b	12eac <__mempcpy_chk@plt+0x1cec>
   12e58:	mov	r7, #0
   12e5c:	mov	r8, #0
   12e60:	mov	r2, r0
   12e64:	mov	r6, #0
   12e68:	b	12f58 <__mempcpy_chk@plt+0x1d98>
   12e6c:	tst	r9, #1
   12e70:	bne	12eac <__mempcpy_chk@plt+0x1cec>
   12e74:	mov	r2, r0
   12e78:	b	12f04 <__mempcpy_chk@plt+0x1d44>
   12e7c:	mov	r0, #1
   12e80:	mov	r8, #0
   12e84:	mov	r7, #5
   12e88:	mov	r2, #1
   12e8c:	str	r0, [fp, #-72]	; 0xffffffb8
   12e90:	movw	r0, #24440	; 0x5f78
   12e94:	movt	r0, #1
   12e98:	str	r0, [fp, #-88]	; 0xffffffa8
   12e9c:	b	12ecc <__mempcpy_chk@plt+0x1d0c>
   12ea0:	mov	r2, #1
   12ea4:	tst	r9, #1
   12ea8:	beq	12f04 <__mempcpy_chk@plt+0x1d44>
   12eac:	mov	r1, #1
   12eb0:	mov	r8, #0
   12eb4:	mov	r7, #2
   12eb8:	mov	r2, r0
   12ebc:	str	r1, [fp, #-72]	; 0xffffffb8
   12ec0:	movw	r1, #23863	; 0x5d37
   12ec4:	movt	r1, #1
   12ec8:	str	r1, [fp, #-88]	; 0xffffffa8
   12ecc:	mov	r6, #1
   12ed0:	b	12f58 <__mempcpy_chk@plt+0x1d98>
   12ed4:	tst	r9, #1
   12ed8:	beq	12f28 <__mempcpy_chk@plt+0x1d68>
   12edc:	mov	r0, #1
   12ee0:	mov	r8, #0
   12ee4:	mov	r2, #1
   12ee8:	mov	r6, #1
   12eec:	mov	r7, #5
   12ef0:	str	r0, [fp, #-72]	; 0xffffffb8
   12ef4:	movw	r0, #24440	; 0x5f78
   12ef8:	movt	r0, #1
   12efc:	str	r0, [fp, #-88]	; 0xffffffa8
   12f00:	b	12f58 <__mempcpy_chk@plt+0x1d98>
   12f04:	cmp	ip, #0
   12f08:	mov	r8, #1
   12f0c:	mov	r6, #0
   12f10:	mov	r7, #2
   12f14:	movne	r0, #39	; 0x27
   12f18:	strbne	r0, [r5]
   12f1c:	movw	r0, #23863	; 0x5d37
   12f20:	movt	r0, #1
   12f24:	b	12f4c <__mempcpy_chk@plt+0x1d8c>
   12f28:	cmp	ip, #0
   12f2c:	mov	r8, #1
   12f30:	mov	r2, #1
   12f34:	mov	r7, #5
   12f38:	mov	r6, #0
   12f3c:	movne	r0, #34	; 0x22
   12f40:	strbne	r0, [r5]
   12f44:	movw	r0, #24440	; 0x5f78
   12f48:	movt	r0, #1
   12f4c:	str	r0, [fp, #-88]	; 0xffffffa8
   12f50:	mov	r0, #1
   12f54:	str	r0, [fp, #-72]	; 0xffffffb8
   12f58:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12f5c:	str	r7, [fp, #-68]	; 0xffffffbc
   12f60:	str	r6, [fp, #-76]	; 0xffffffb4
   12f64:	str	r2, [sp, #84]	; 0x54
   12f68:	cmp	r0, #0
   12f6c:	movwne	r0, #1
   12f70:	and	r1, r0, r6
   12f74:	and	r1, r2, r1
   12f78:	str	r1, [sp, #48]	; 0x30
   12f7c:	sub	r1, r7, #2
   12f80:	clz	r1, r1
   12f84:	lsr	r1, r1, #5
   12f88:	and	r1, r1, r6
   12f8c:	str	r1, [sp, #64]	; 0x40
   12f90:	subs	r1, r7, #2
   12f94:	eor	r7, r6, #1
   12f98:	movwne	r1, #1
   12f9c:	str	r7, [sp, #92]	; 0x5c
   12fa0:	orr	r7, r1, r7
   12fa4:	and	r1, r1, r2
   12fa8:	and	r0, r0, r1
   12fac:	str	r7, [sp, #68]	; 0x44
   12fb0:	mov	r7, #0
   12fb4:	str	r0, [fp, #-60]	; 0xffffffc4
   12fb8:	orr	r0, r1, r6
   12fbc:	ldr	r1, [fp, #16]
   12fc0:	eor	r0, r0, #1
   12fc4:	clz	r1, r1
   12fc8:	lsr	r1, r1, #5
   12fcc:	orr	r0, r1, r0
   12fd0:	str	r0, [fp, #-64]	; 0xffffffc0
   12fd4:	eor	r0, r2, #1
   12fd8:	str	r0, [sp, #52]	; 0x34
   12fdc:	cmn	r3, #1
   12fe0:	beq	12ff0 <__mempcpy_chk@plt+0x1e30>
   12fe4:	cmp	r7, r3
   12fe8:	bne	12ffc <__mempcpy_chk@plt+0x1e3c>
   12fec:	b	13b58 <__mempcpy_chk@plt+0x2998>
   12ff0:	ldrb	r0, [r4, r7]
   12ff4:	cmp	r0, #0
   12ff8:	beq	13b60 <__mempcpy_chk@plt+0x29a0>
   12ffc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13000:	cmp	r0, #0
   13004:	beq	1304c <__mempcpy_chk@plt+0x1e8c>
   13008:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1300c:	add	r5, r7, r0
   13010:	cmp	r0, #2
   13014:	bcc	13060 <__mempcpy_chk@plt+0x1ea0>
   13018:	mov	r0, #0
   1301c:	cmn	r3, #1
   13020:	str	r0, [fp, #-56]	; 0xffffffc8
   13024:	bne	13068 <__mempcpy_chk@plt+0x1ea8>
   13028:	mov	r0, r4
   1302c:	mov	r4, ip
   13030:	mov	r6, lr
   13034:	bl	110b8 <strlen@plt>
   13038:	mov	ip, r4
   1303c:	ldr	r4, [fp, #-80]	; 0xffffffb0
   13040:	mov	lr, r6
   13044:	mov	r3, r0
   13048:	b	13068 <__mempcpy_chk@plt+0x1ea8>
   1304c:	mov	r0, #0
   13050:	mov	sl, r3
   13054:	str	r0, [fp, #-56]	; 0xffffffc8
   13058:	mov	r0, #0
   1305c:	b	130d4 <__mempcpy_chk@plt+0x1f14>
   13060:	mov	r0, #0
   13064:	str	r0, [fp, #-56]	; 0xffffffc8
   13068:	cmp	r5, r3
   1306c:	bls	13080 <__mempcpy_chk@plt+0x1ec0>
   13070:	ldr	r5, [fp, #-84]	; 0xffffffac
   13074:	mov	r0, #0
   13078:	mov	sl, r3
   1307c:	b	130d4 <__mempcpy_chk@plt+0x1f14>
   13080:	ldr	r1, [fp, #-88]	; 0xffffffa8
   13084:	ldr	r2, [fp, #-72]	; 0xffffffb8
   13088:	add	r0, r4, r7
   1308c:	mov	r5, lr
   13090:	mov	r6, ip
   13094:	mov	sl, r3
   13098:	bl	110ac <bcmp@plt>
   1309c:	ldr	r2, [sp, #92]	; 0x5c
   130a0:	cmp	r0, #0
   130a4:	ldr	r3, [fp, #-84]	; 0xffffffac
   130a8:	mov	r1, r0
   130ac:	movwne	r1, #1
   130b0:	orr	r1, r1, r2
   130b4:	tst	r1, #1
   130b8:	beq	13be4 <__mempcpy_chk@plt+0x2a24>
   130bc:	ldr	r4, [fp, #-80]	; 0xffffffb0
   130c0:	clz	r0, r0
   130c4:	mov	lr, r5
   130c8:	mov	ip, r6
   130cc:	mov	r5, r3
   130d0:	lsr	r0, r0, #5
   130d4:	str	r0, [fp, #-52]	; 0xffffffcc
   130d8:	ldrb	r6, [r4, r7]
   130dc:	cmp	r6, #126	; 0x7e
   130e0:	bhi	13608 <__mempcpy_chk@plt+0x2448>
   130e4:	add	r3, pc, #16
   130e8:	mov	r9, #1
   130ec:	mov	r2, #110	; 0x6e
   130f0:	mov	r0, #97	; 0x61
   130f4:	mov	r1, #0
   130f8:	ldr	pc, [r3, r6, lsl #2]
   130fc:	andeq	r3, r1, ip, ror #8
   13100:	andeq	r3, r1, r8, lsl #12
   13104:	andeq	r3, r1, r8, lsl #12
   13108:	andeq	r3, r1, r8, lsl #12
   1310c:	andeq	r3, r1, r8, lsl #12
   13110:	andeq	r3, r1, r8, lsl #12
   13114:	andeq	r3, r1, r8, lsl #12
   13118:	andeq	r3, r1, r8, lsl #13
   1311c:	andeq	r3, r1, ip, asr #8
   13120:	andeq	r3, r1, r4, asr #8
   13124:	andeq	r3, r1, r8, asr r4
   13128:	andeq	r3, r1, r0, ror r5
   1312c:	andeq	r3, r1, ip, lsr r4
   13130:	andeq	r3, r1, r4, asr r4
   13134:	andeq	r3, r1, r8, lsl #12
   13138:	andeq	r3, r1, r8, lsl #12
   1313c:	andeq	r3, r1, r8, lsl #12
   13140:	andeq	r3, r1, r8, lsl #12
   13144:	andeq	r3, r1, r8, lsl #12
   13148:	andeq	r3, r1, r8, lsl #12
   1314c:	andeq	r3, r1, r8, lsl #12
   13150:	andeq	r3, r1, r8, lsl #12
   13154:	andeq	r3, r1, r8, lsl #12
   13158:	andeq	r3, r1, r8, lsl #12
   1315c:	andeq	r3, r1, r8, lsl #12
   13160:	andeq	r3, r1, r8, lsl #12
   13164:	andeq	r3, r1, r8, lsl #12
   13168:	andeq	r3, r1, r8, lsl #12
   1316c:	andeq	r3, r1, r8, lsl #12
   13170:	andeq	r3, r1, r8, lsl #12
   13174:	andeq	r3, r1, r8, lsl #12
   13178:	andeq	r3, r1, r8, lsl #12
   1317c:	andeq	r3, r1, ip, ror #7
   13180:	strdeq	r3, [r1], -r0
   13184:	strdeq	r3, [r1], -r0
   13188:	ldrdeq	r3, [r1], -r4
   1318c:	strdeq	r3, [r1], -r0
   13190:	strdeq	r3, [r1], -r8
   13194:	strdeq	r3, [r1], -r0
   13198:	andeq	r3, r1, r8, ror r5
   1319c:	strdeq	r3, [r1], -r0
   131a0:	strdeq	r3, [r1], -r0
   131a4:	strdeq	r3, [r1], -r0
   131a8:	strdeq	r3, [r1], -r8
   131ac:	strdeq	r3, [r1], -r8
   131b0:	strdeq	r3, [r1], -r8
   131b4:	strdeq	r3, [r1], -r8
   131b8:	strdeq	r3, [r1], -r8
   131bc:	strdeq	r3, [r1], -r8
   131c0:	strdeq	r3, [r1], -r8
   131c4:	strdeq	r3, [r1], -r8
   131c8:	strdeq	r3, [r1], -r8
   131cc:	strdeq	r3, [r1], -r8
   131d0:	strdeq	r3, [r1], -r8
   131d4:	strdeq	r3, [r1], -r8
   131d8:	strdeq	r3, [r1], -r8
   131dc:	strdeq	r3, [r1], -r8
   131e0:	strdeq	r3, [r1], -r8
   131e4:	strdeq	r3, [r1], -r8
   131e8:	strdeq	r3, [r1], -r0
   131ec:	strdeq	r3, [r1], -r0
   131f0:	strdeq	r3, [r1], -r0
   131f4:	strdeq	r3, [r1], -r0
   131f8:	andeq	r3, r1, r4, asr #10
   131fc:	andeq	r3, r1, r8, lsl #12
   13200:	strdeq	r3, [r1], -r8
   13204:	strdeq	r3, [r1], -r8
   13208:	strdeq	r3, [r1], -r8
   1320c:	strdeq	r3, [r1], -r8
   13210:	strdeq	r3, [r1], -r8
   13214:	strdeq	r3, [r1], -r8
   13218:	strdeq	r3, [r1], -r8
   1321c:	strdeq	r3, [r1], -r8
   13220:	strdeq	r3, [r1], -r8
   13224:	strdeq	r3, [r1], -r8
   13228:	strdeq	r3, [r1], -r8
   1322c:	strdeq	r3, [r1], -r8
   13230:	strdeq	r3, [r1], -r8
   13234:	strdeq	r3, [r1], -r8
   13238:	strdeq	r3, [r1], -r8
   1323c:	strdeq	r3, [r1], -r8
   13240:	strdeq	r3, [r1], -r8
   13244:	strdeq	r3, [r1], -r8
   13248:	strdeq	r3, [r1], -r8
   1324c:	strdeq	r3, [r1], -r8
   13250:	strdeq	r3, [r1], -r8
   13254:	strdeq	r3, [r1], -r8
   13258:	strdeq	r3, [r1], -r8
   1325c:	strdeq	r3, [r1], -r8
   13260:	strdeq	r3, [r1], -r8
   13264:	strdeq	r3, [r1], -r8
   13268:	strdeq	r3, [r1], -r0
   1326c:	andeq	r3, r1, r8, lsl r4
   13270:	strdeq	r3, [r1], -r8
   13274:	strdeq	r3, [r1], -r0
   13278:	strdeq	r3, [r1], -r8
   1327c:	strdeq	r3, [r1], -r0
   13280:	strdeq	r3, [r1], -r8
   13284:	strdeq	r3, [r1], -r8
   13288:	strdeq	r3, [r1], -r8
   1328c:	strdeq	r3, [r1], -r8
   13290:	strdeq	r3, [r1], -r8
   13294:	strdeq	r3, [r1], -r8
   13298:	strdeq	r3, [r1], -r8
   1329c:	strdeq	r3, [r1], -r8
   132a0:	strdeq	r3, [r1], -r8
   132a4:	strdeq	r3, [r1], -r8
   132a8:	strdeq	r3, [r1], -r8
   132ac:	strdeq	r3, [r1], -r8
   132b0:	strdeq	r3, [r1], -r8
   132b4:	strdeq	r3, [r1], -r8
   132b8:	strdeq	r3, [r1], -r8
   132bc:	strdeq	r3, [r1], -r8
   132c0:	strdeq	r3, [r1], -r8
   132c4:	strdeq	r3, [r1], -r8
   132c8:	strdeq	r3, [r1], -r8
   132cc:	strdeq	r3, [r1], -r8
   132d0:	strdeq	r3, [r1], -r8
   132d4:	strdeq	r3, [r1], -r8
   132d8:	strdeq	r3, [r1], -r8
   132dc:	strdeq	r3, [r1], -r8
   132e0:	strdeq	r3, [r1], -r8
   132e4:	strdeq	r3, [r1], -r8
   132e8:	andeq	r3, r1, ip, lsr #7
   132ec:	strdeq	r3, [r1], -r0
   132f0:	andeq	r3, r1, ip, lsr #7
   132f4:	ldrdeq	r3, [r1], -r4
   132f8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   132fc:	tst	r0, #1
   13300:	bne	1332c <__mempcpy_chk@plt+0x216c>
   13304:	ldr	r1, [fp, #16]
   13308:	ubfx	r0, r6, #5, #3
   1330c:	mov	r2, #1
   13310:	ldr	r0, [r1, r0, lsl #2]
   13314:	and	r1, r6, #31
   13318:	tst	r0, r2, lsl r1
   1331c:	beq	1332c <__mempcpy_chk@plt+0x216c>
   13320:	mov	r0, r6
   13324:	mov	r1, r9
   13328:	b	13340 <__mempcpy_chk@plt+0x2180>
   1332c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13330:	mov	r1, r9
   13334:	cmp	r0, #0
   13338:	mov	r0, r6
   1333c:	beq	13a8c <__mempcpy_chk@plt+0x28cc>
   13340:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13344:	tst	r2, #1
   13348:	bne	13c28 <__mempcpy_chk@plt+0x2a68>
   1334c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   13350:	subs	r2, r2, #2
   13354:	movwne	r2, #1
   13358:	orr	r2, r2, lr
   1335c:	tst	r2, #1
   13360:	bne	13398 <__mempcpy_chk@plt+0x21d8>
   13364:	cmp	r8, ip
   13368:	mov	lr, #1
   1336c:	movcc	r2, #39	; 0x27
   13370:	strbcc	r2, [r5, r8]
   13374:	add	r2, r8, #1
   13378:	cmp	r2, ip
   1337c:	movcc	r3, #36	; 0x24
   13380:	strbcc	r3, [r5, r2]
   13384:	add	r2, r8, #2
   13388:	add	r8, r8, #3
   1338c:	cmp	r2, ip
   13390:	movcc	r3, #39	; 0x27
   13394:	strbcc	r3, [r5, r2]
   13398:	cmp	r8, ip
   1339c:	movcc	r2, #92	; 0x5c
   133a0:	strbcc	r2, [r5, r8]
   133a4:	add	r8, r8, #1
   133a8:	b	13acc <__mempcpy_chk@plt+0x290c>
   133ac:	cmp	sl, #1
   133b0:	beq	133d4 <__mempcpy_chk@plt+0x2214>
   133b4:	mov	r9, #0
   133b8:	cmn	sl, #1
   133bc:	bne	133e0 <__mempcpy_chk@plt+0x2220>
   133c0:	ldrb	r0, [r4, #1]
   133c4:	cmp	r0, #0
   133c8:	beq	133d4 <__mempcpy_chk@plt+0x2214>
   133cc:	mvn	sl, #0
   133d0:	b	133e0 <__mempcpy_chk@plt+0x2220>
   133d4:	mov	r9, #0
   133d8:	cmp	r7, #0
   133dc:	beq	133ec <__mempcpy_chk@plt+0x222c>
   133e0:	mov	r0, #0
   133e4:	str	r0, [fp, #-56]	; 0xffffffc8
   133e8:	b	132f8 <__mempcpy_chk@plt+0x2138>
   133ec:	mov	r1, #1
   133f0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   133f4:	cmp	r0, #2
   133f8:	bne	13410 <__mempcpy_chk@plt+0x2250>
   133fc:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13400:	mov	r9, r1
   13404:	tst	r0, #1
   13408:	beq	132f8 <__mempcpy_chk@plt+0x2138>
   1340c:	b	13c28 <__mempcpy_chk@plt+0x2a68>
   13410:	mov	r9, r1
   13414:	b	132f8 <__mempcpy_chk@plt+0x2138>
   13418:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1341c:	cmp	r0, #2
   13420:	bne	13664 <__mempcpy_chk@plt+0x24a4>
   13424:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13428:	tst	r0, #1
   1342c:	bne	13c28 <__mempcpy_chk@plt+0x2a68>
   13430:	mov	r0, #0
   13434:	str	r0, [fp, #-56]	; 0xffffffc8
   13438:	b	1367c <__mempcpy_chk@plt+0x24bc>
   1343c:	mov	r0, #102	; 0x66
   13440:	b	13688 <__mempcpy_chk@plt+0x24c8>
   13444:	mov	r2, #116	; 0x74
   13448:	b	13458 <__mempcpy_chk@plt+0x2298>
   1344c:	mov	r0, #98	; 0x62
   13450:	b	13688 <__mempcpy_chk@plt+0x24c8>
   13454:	mov	r2, #114	; 0x72
   13458:	ldr	r0, [sp, #68]	; 0x44
   1345c:	tst	r0, #1
   13460:	mov	r0, r2
   13464:	bne	13688 <__mempcpy_chk@plt+0x24c8>
   13468:	b	13c28 <__mempcpy_chk@plt+0x2a68>
   1346c:	ldr	r0, [sp, #84]	; 0x54
   13470:	tst	r0, #1
   13474:	beq	136a8 <__mempcpy_chk@plt+0x24e8>
   13478:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1347c:	tst	r0, #1
   13480:	bne	13d14 <__mempcpy_chk@plt+0x2b54>
   13484:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13488:	mov	r2, sl
   1348c:	subs	r0, r0, #2
   13490:	movwne	r0, #1
   13494:	orr	r0, r0, lr
   13498:	tst	r0, #1
   1349c:	bne	134d4 <__mempcpy_chk@plt+0x2314>
   134a0:	cmp	r8, ip
   134a4:	mov	lr, #1
   134a8:	movcc	r0, #39	; 0x27
   134ac:	strbcc	r0, [r5, r8]
   134b0:	add	r0, r8, #1
   134b4:	cmp	r0, ip
   134b8:	movcc	r1, #36	; 0x24
   134bc:	strbcc	r1, [r5, r0]
   134c0:	add	r0, r8, #2
   134c4:	add	r8, r8, #3
   134c8:	cmp	r0, ip
   134cc:	movcc	r1, #39	; 0x27
   134d0:	strbcc	r1, [r5, r0]
   134d4:	mov	r1, #1
   134d8:	cmp	r8, ip
   134dc:	mov	r9, #0
   134e0:	mov	r6, #48	; 0x30
   134e4:	str	r1, [fp, #-56]	; 0xffffffc8
   134e8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   134ec:	movcc	r0, #92	; 0x5c
   134f0:	strbcc	r0, [r5, r8]
   134f4:	add	r0, r8, #1
   134f8:	cmp	r1, #2
   134fc:	beq	13804 <__mempcpy_chk@plt+0x2644>
   13500:	add	r1, r7, #1
   13504:	cmp	r1, r2
   13508:	bcs	13804 <__mempcpy_chk@plt+0x2644>
   1350c:	ldrb	r1, [r4, r1]
   13510:	sub	r1, r1, #48	; 0x30
   13514:	uxtb	r1, r1
   13518:	cmp	r1, #9
   1351c:	bhi	13804 <__mempcpy_chk@plt+0x2644>
   13520:	cmp	r0, ip
   13524:	movcc	r1, #48	; 0x30
   13528:	strbcc	r1, [r5, r0]
   1352c:	add	r0, r8, #2
   13530:	add	r8, r8, #3
   13534:	cmp	r0, ip
   13538:	movcc	r1, #48	; 0x30
   1353c:	strbcc	r1, [r5, r0]
   13540:	b	132f8 <__mempcpy_chk@plt+0x2138>
   13544:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13548:	mov	r6, #63	; 0x3f
   1354c:	cmp	r0, #5
   13550:	beq	1380c <__mempcpy_chk@plt+0x264c>
   13554:	mov	r1, #0
   13558:	cmp	r0, #2
   1355c:	str	r1, [fp, #-56]	; 0xffffffc8
   13560:	bne	138c0 <__mempcpy_chk@plt+0x2700>
   13564:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13568:	mov	r9, #0
   1356c:	b	13404 <__mempcpy_chk@plt+0x2244>
   13570:	mov	r0, #118	; 0x76
   13574:	b	13688 <__mempcpy_chk@plt+0x24c8>
   13578:	mov	r0, #1
   1357c:	mov	r6, #39	; 0x27
   13580:	str	r0, [sp, #60]	; 0x3c
   13584:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13588:	cmp	r0, #2
   1358c:	bne	13600 <__mempcpy_chk@plt+0x2440>
   13590:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13594:	tst	r0, #1
   13598:	bne	13c28 <__mempcpy_chk@plt+0x2a68>
   1359c:	ldr	r2, [sp, #56]	; 0x38
   135a0:	clz	r1, ip
   135a4:	mov	lr, #0
   135a8:	lsr	r1, r1, #5
   135ac:	cmp	r2, #0
   135b0:	mov	r0, r2
   135b4:	movwne	r0, #1
   135b8:	orrs	r0, r0, r1
   135bc:	moveq	r2, ip
   135c0:	moveq	ip, r0
   135c4:	cmp	r8, ip
   135c8:	str	r2, [sp, #56]	; 0x38
   135cc:	movcc	r0, #39	; 0x27
   135d0:	strbcc	r0, [r5, r8]
   135d4:	add	r0, r8, #1
   135d8:	cmp	r0, ip
   135dc:	movcc	r1, #92	; 0x5c
   135e0:	strbcc	r1, [r5, r0]
   135e4:	add	r0, r8, #2
   135e8:	add	r8, r8, #3
   135ec:	cmp	r0, ip
   135f0:	movcc	r1, #39	; 0x27
   135f4:	strbcc	r1, [r5, r0]
   135f8:	mov	r0, #0
   135fc:	str	r0, [fp, #-56]	; 0xffffffc8
   13600:	mov	r9, #1
   13604:	b	132f8 <__mempcpy_chk@plt+0x2138>
   13608:	ldr	r0, [sp, #40]	; 0x28
   1360c:	str	lr, [sp, #44]	; 0x2c
   13610:	str	ip, [sp, #88]	; 0x58
   13614:	cmp	r0, #1
   13618:	bne	136c8 <__mempcpy_chk@plt+0x2508>
   1361c:	str	sl, [sp, #36]	; 0x24
   13620:	bl	11094 <__ctype_b_loc@plt>
   13624:	ldr	r0, [r0]
   13628:	ldr	r4, [fp, #-80]	; 0xffffffb0
   1362c:	mov	r1, #1
   13630:	add	r0, r0, r6, lsl #1
   13634:	ldrb	r0, [r0, #1]
   13638:	ubfx	r9, r0, #6, #1
   1363c:	ldr	r0, [sp, #52]	; 0x34
   13640:	ldr	lr, [sp, #44]	; 0x2c
   13644:	cmp	r1, #1
   13648:	orr	r3, r9, r0
   1364c:	bhi	138c8 <__mempcpy_chk@plt+0x2708>
   13650:	tst	r3, #1
   13654:	beq	138c8 <__mempcpy_chk@plt+0x2708>
   13658:	ldr	sl, [sp, #36]	; 0x24
   1365c:	ldr	ip, [sp, #88]	; 0x58
   13660:	b	132f8 <__mempcpy_chk@plt+0x2138>
   13664:	ldr	r1, [sp, #48]	; 0x30
   13668:	mov	r0, #0
   1366c:	str	r0, [fp, #-56]	; 0xffffffc8
   13670:	mov	r0, #92	; 0x5c
   13674:	cmp	r1, #0
   13678:	beq	13688 <__mempcpy_chk@plt+0x24c8>
   1367c:	mov	r6, #92	; 0x5c
   13680:	mov	r9, #0
   13684:	b	13a8c <__mempcpy_chk@plt+0x28cc>
   13688:	mov	r1, #0
   1368c:	mov	r9, #0
   13690:	str	r1, [fp, #-56]	; 0xffffffc8
   13694:	ldr	r1, [sp, #84]	; 0x54
   13698:	tst	r1, #1
   1369c:	mov	r1, #0
   136a0:	beq	132f8 <__mempcpy_chk@plt+0x2138>
   136a4:	b	13340 <__mempcpy_chk@plt+0x2180>
   136a8:	ldr	r0, [sp, #32]
   136ac:	mov	r6, #0
   136b0:	mov	r9, #0
   136b4:	cmp	r0, #0
   136b8:	mov	r0, #0
   136bc:	str	r0, [fp, #-56]	; 0xffffffc8
   136c0:	beq	132f8 <__mempcpy_chk@plt+0x2138>
   136c4:	b	13ae4 <__mempcpy_chk@plt+0x2924>
   136c8:	mov	r0, #0
   136cc:	cmn	sl, #1
   136d0:	sub	r3, fp, #40	; 0x28
   136d4:	str	r0, [fp, #-36]	; 0xffffffdc
   136d8:	str	r0, [fp, #-40]	; 0xffffffd8
   136dc:	bne	136f4 <__mempcpy_chk@plt+0x2534>
   136e0:	mov	r0, r4
   136e4:	bl	110b8 <strlen@plt>
   136e8:	ldr	r4, [fp, #-80]	; 0xffffffb0
   136ec:	sub	r3, fp, #40	; 0x28
   136f0:	mov	sl, r0
   136f4:	ldr	r0, [sp, #72]	; 0x48
   136f8:	mov	r9, #1
   136fc:	mov	r1, #0
   13700:	str	sl, [sp, #36]	; 0x24
   13704:	add	r0, r0, r7
   13708:	str	r0, [sp, #20]
   1370c:	add	r0, r1, r7
   13710:	str	r1, [sp, #24]
   13714:	add	r1, r4, r0
   13718:	mov	r4, r0
   1371c:	sub	r2, sl, r0
   13720:	sub	r0, fp, #44	; 0x2c
   13724:	bl	15358 <__mempcpy_chk@plt+0x4198>
   13728:	cmp	r0, #0
   1372c:	beq	13b38 <__mempcpy_chk@plt+0x2978>
   13730:	cmn	r0, #1
   13734:	beq	13af0 <__mempcpy_chk@plt+0x2930>
   13738:	ldr	r2, [sp, #36]	; 0x24
   1373c:	cmn	r0, #2
   13740:	beq	13af8 <__mempcpy_chk@plt+0x2938>
   13744:	ldr	r2, [sp, #64]	; 0x40
   13748:	ldr	ip, [sp, #88]	; 0x58
   1374c:	ldr	r4, [sp, #84]	; 0x54
   13750:	ldr	lr, [fp, #-48]	; 0xffffffd0
   13754:	cmp	r0, #2
   13758:	mov	r1, #0
   1375c:	movwcc	r1, #1
   13760:	eor	r2, r2, #1
   13764:	orrs	r1, r2, r1
   13768:	bne	137b8 <__mempcpy_chk@plt+0x25f8>
   1376c:	ldr	r1, [sp, #24]
   13770:	ldr	r2, [sp, #20]
   13774:	add	r1, r2, r1
   13778:	sub	r2, r0, #1
   1377c:	ldrb	r3, [r1]
   13780:	sub	r5, r3, #94	; 0x5e
   13784:	cmp	r5, #30
   13788:	bhi	137a0 <__mempcpy_chk@plt+0x25e0>
   1378c:	mov	r4, #1
   13790:	mov	sl, #1073741829	; 0x40000005
   13794:	tst	sl, r4, lsl r5
   13798:	ldr	r4, [sp, #84]	; 0x54
   1379c:	bne	13c00 <__mempcpy_chk@plt+0x2a40>
   137a0:	sub	r3, r3, #91	; 0x5b
   137a4:	cmp	r3, #2
   137a8:	bcc	13c00 <__mempcpy_chk@plt+0x2a40>
   137ac:	add	r1, r1, #1
   137b0:	subs	r2, r2, #1
   137b4:	bne	1377c <__mempcpy_chk@plt+0x25bc>
   137b8:	ldr	r5, [sp, #24]
   137bc:	str	lr, [fp, #-48]	; 0xffffffd0
   137c0:	add	r5, r0, r5
   137c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   137c8:	bl	10fec <iswprint@plt>
   137cc:	cmp	r0, #0
   137d0:	sub	r4, fp, #40	; 0x28
   137d4:	movwne	r0, #1
   137d8:	and	r9, r9, r0
   137dc:	mov	r0, r4
   137e0:	bl	10f98 <mbsinit@plt>
   137e4:	mov	r1, r5
   137e8:	mov	r3, r4
   137ec:	ldr	sl, [sp, #36]	; 0x24
   137f0:	ldr	r5, [fp, #-84]	; 0xffffffac
   137f4:	ldr	r4, [fp, #-80]	; 0xffffffb0
   137f8:	cmp	r0, #0
   137fc:	beq	1370c <__mempcpy_chk@plt+0x254c>
   13800:	b	1363c <__mempcpy_chk@plt+0x247c>
   13804:	mov	r8, r0
   13808:	b	132f8 <__mempcpy_chk@plt+0x2138>
   1380c:	mov	r0, #0
   13810:	str	r0, [fp, #-56]	; 0xffffffc8
   13814:	ldr	r0, [sp, #28]
   13818:	cmp	r0, #0
   1381c:	beq	138c0 <__mempcpy_chk@plt+0x2700>
   13820:	add	r0, r7, #2
   13824:	mov	r1, sl
   13828:	cmp	r0, sl
   1382c:	bcs	138c0 <__mempcpy_chk@plt+0x2700>
   13830:	add	r1, r7, r4
   13834:	ldrb	r1, [r1, #1]
   13838:	cmp	r1, #63	; 0x3f
   1383c:	bne	138c0 <__mempcpy_chk@plt+0x2700>
   13840:	ldrb	r9, [r4, r0]
   13844:	sub	r2, r9, #33	; 0x21
   13848:	cmp	r2, #29
   1384c:	bhi	138c0 <__mempcpy_chk@plt+0x2700>
   13850:	mov	r1, r4
   13854:	movw	r4, #20929	; 0x51c1
   13858:	mov	r3, #1
   1385c:	movt	r4, #14336	; 0x3800
   13860:	tst	r4, r3, lsl r2
   13864:	beq	13b4c <__mempcpy_chk@plt+0x298c>
   13868:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1386c:	tst	r2, #1
   13870:	bne	13d1c <__mempcpy_chk@plt+0x2b5c>
   13874:	cmp	r8, ip
   13878:	mov	r4, r1
   1387c:	mov	r7, r0
   13880:	mov	r6, r9
   13884:	movcc	r2, #63	; 0x3f
   13888:	strbcc	r2, [r5, r8]
   1388c:	add	r2, r8, #1
   13890:	cmp	r2, ip
   13894:	movcc	r3, #34	; 0x22
   13898:	strbcc	r3, [r5, r2]
   1389c:	add	r2, r8, #2
   138a0:	cmp	r2, ip
   138a4:	movcc	r3, #34	; 0x22
   138a8:	strbcc	r3, [r5, r2]
   138ac:	add	r2, r8, #3
   138b0:	add	r8, r8, #4
   138b4:	cmp	r2, ip
   138b8:	movcc	r3, #63	; 0x3f
   138bc:	strbcc	r3, [r5, r2]
   138c0:	mov	r9, #0
   138c4:	b	132f8 <__mempcpy_chk@plt+0x2138>
   138c8:	ldr	sl, [sp, #36]	; 0x24
   138cc:	add	r0, r1, r7
   138d0:	mov	r2, #0
   138d4:	str	r3, [sp, #24]
   138d8:	str	r0, [fp, #-56]	; 0xffffffc8
   138dc:	tst	r3, #1
   138e0:	beq	1390c <__mempcpy_chk@plt+0x274c>
   138e4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   138e8:	tst	r0, #1
   138ec:	beq	139d4 <__mempcpy_chk@plt+0x2814>
   138f0:	ldr	r1, [sp, #88]	; 0x58
   138f4:	mov	r0, r3
   138f8:	cmp	r8, r1
   138fc:	movcc	r1, #92	; 0x5c
   13900:	strbcc	r1, [r5, r8]
   13904:	add	r8, r8, #1
   13908:	b	139d8 <__mempcpy_chk@plt+0x2818>
   1390c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   13910:	tst	r1, #1
   13914:	bne	13c24 <__mempcpy_chk@plt+0x2a64>
   13918:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1391c:	subs	r2, r1, #2
   13920:	movwne	r2, #1
   13924:	orr	r2, r2, lr
   13928:	tst	r2, #1
   1392c:	bne	13970 <__mempcpy_chk@plt+0x27b0>
   13930:	ldr	r1, [sp, #88]	; 0x58
   13934:	add	r2, r8, #1
   13938:	mov	lr, #1
   1393c:	cmp	r8, r1
   13940:	movcc	r1, #39	; 0x27
   13944:	strbcc	r1, [r5, r8]
   13948:	ldr	r1, [sp, #88]	; 0x58
   1394c:	cmp	r2, r1
   13950:	movcc	r1, #36	; 0x24
   13954:	strbcc	r1, [r5, r2]
   13958:	ldr	r1, [sp, #88]	; 0x58
   1395c:	add	r2, r8, #2
   13960:	add	r8, r8, #3
   13964:	cmp	r2, r1
   13968:	movcc	r1, #39	; 0x27
   1396c:	strbcc	r1, [r5, r2]
   13970:	ldr	r1, [sp, #88]	; 0x58
   13974:	add	r2, r8, #1
   13978:	mov	r0, r3
   1397c:	cmp	r8, r1
   13980:	movcc	r1, #92	; 0x5c
   13984:	strbcc	r1, [r5, r8]
   13988:	ldr	r1, [sp, #88]	; 0x58
   1398c:	cmp	r2, r1
   13990:	bcs	139a4 <__mempcpy_chk@plt+0x27e4>
   13994:	uxtb	r3, r6
   13998:	mov	r1, #48	; 0x30
   1399c:	orr	r3, r1, r3, lsr #6
   139a0:	strb	r3, [r5, r2]
   139a4:	ldr	r1, [sp, #88]	; 0x58
   139a8:	add	r2, r8, #2
   139ac:	add	r8, r8, #3
   139b0:	cmp	r2, r1
   139b4:	lsrcc	r3, r6, #3
   139b8:	movcc	r1, #6
   139bc:	bficc	r3, r1, #3, #29
   139c0:	mov	r1, #6
   139c4:	bfi	r6, r1, #3, #29
   139c8:	strbcc	r3, [r5, r2]
   139cc:	mov	r2, #1
   139d0:	b	139e0 <__mempcpy_chk@plt+0x2820>
   139d4:	mov	r0, r3
   139d8:	mov	r1, #0
   139dc:	str	r1, [fp, #-52]	; 0xffffffcc
   139e0:	mov	ip, r2
   139e4:	and	r1, r2, #1
   139e8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   139ec:	add	r3, r7, #1
   139f0:	cmp	r2, r3
   139f4:	bls	13a7c <__mempcpy_chk@plt+0x28bc>
   139f8:	cmp	r1, #0
   139fc:	mvn	r5, lr
   13a00:	movwne	r1, #1
   13a04:	orr	r5, r5, r1
   13a08:	tst	r5, #1
   13a0c:	bne	13a50 <__mempcpy_chk@plt+0x2890>
   13a10:	ldr	r1, [sp, #88]	; 0x58
   13a14:	ldr	r5, [fp, #-84]	; 0xffffffac
   13a18:	mov	r2, r4
   13a1c:	ldr	r4, [sp, #88]	; 0x58
   13a20:	ldr	r0, [sp, #24]
   13a24:	mov	lr, #0
   13a28:	cmp	r8, r1
   13a2c:	movcc	r1, #39	; 0x27
   13a30:	strbcc	r1, [r5, r8]
   13a34:	add	r1, r8, #1
   13a38:	add	r8, r8, #2
   13a3c:	cmp	r1, r4
   13a40:	movcc	r4, #39	; 0x27
   13a44:	strbcc	r4, [r5, r1]
   13a48:	mov	r4, r2
   13a4c:	b	13a54 <__mempcpy_chk@plt+0x2894>
   13a50:	ldr	r5, [fp, #-84]	; 0xffffffac
   13a54:	ldr	r1, [sp, #88]	; 0x58
   13a58:	mov	r2, ip
   13a5c:	cmp	r8, r1
   13a60:	ldr	r1, [sp, #72]	; 0x48
   13a64:	strbcc	r6, [r5, r8]
   13a68:	add	r8, r8, #1
   13a6c:	ldrb	r6, [r1, r7]
   13a70:	mov	r7, r3
   13a74:	mov	r3, r0
   13a78:	b	138dc <__mempcpy_chk@plt+0x271c>
   13a7c:	ldr	ip, [sp, #88]	; 0x58
   13a80:	cmp	r1, #0
   13a84:	movwne	r1, #1
   13a88:	str	r1, [fp, #-56]	; 0xffffffc8
   13a8c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13a90:	cmp	r0, #0
   13a94:	bne	13ac4 <__mempcpy_chk@plt+0x2904>
   13a98:	tst	lr, #1
   13a9c:	beq	13ac4 <__mempcpy_chk@plt+0x2904>
   13aa0:	cmp	r8, ip
   13aa4:	mov	lr, #0
   13aa8:	movcc	r0, #39	; 0x27
   13aac:	strbcc	r0, [r5, r8]
   13ab0:	add	r0, r8, #1
   13ab4:	add	r8, r8, #2
   13ab8:	cmp	r0, ip
   13abc:	movcc	r1, #39	; 0x27
   13ac0:	strbcc	r1, [r5, r0]
   13ac4:	mov	r1, r9
   13ac8:	mov	r0, r6
   13acc:	cmp	r8, ip
   13ad0:	strbcc	r0, [r5, r8]
   13ad4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13ad8:	add	r8, r8, #1
   13adc:	and	r0, r0, r1
   13ae0:	str	r0, [fp, #-48]	; 0xffffffd0
   13ae4:	mov	r3, sl
   13ae8:	add	r7, r7, #1
   13aec:	b	12fdc <__mempcpy_chk@plt+0x1e1c>
   13af0:	mov	r9, #0
   13af4:	b	13b38 <__mempcpy_chk@plt+0x2978>
   13af8:	mov	r9, #0
   13afc:	cmp	r2, r4
   13b00:	bls	13b38 <__mempcpy_chk@plt+0x2978>
   13b04:	ldr	r4, [fp, #-80]	; 0xffffffb0
   13b08:	ldr	r1, [sp, #24]
   13b0c:	add	r0, r4, r7
   13b10:	mov	r3, r1
   13b14:	ldrb	r1, [r0, r1]
   13b18:	cmp	r1, #0
   13b1c:	beq	13b44 <__mempcpy_chk@plt+0x2984>
   13b20:	add	r3, r3, #1
   13b24:	add	r1, r7, r3
   13b28:	cmp	r1, r2
   13b2c:	mov	r1, r3
   13b30:	bcc	13b10 <__mempcpy_chk@plt+0x2950>
   13b34:	b	1363c <__mempcpy_chk@plt+0x247c>
   13b38:	ldr	r4, [fp, #-80]	; 0xffffffb0
   13b3c:	ldr	r1, [sp, #24]
   13b40:	b	1363c <__mempcpy_chk@plt+0x247c>
   13b44:	mov	r1, r3
   13b48:	b	1363c <__mempcpy_chk@plt+0x247c>
   13b4c:	mov	r9, #0
   13b50:	mov	r4, r1
   13b54:	b	132f8 <__mempcpy_chk@plt+0x2138>
   13b58:	mov	sl, r7
   13b5c:	b	13b64 <__mempcpy_chk@plt+0x29a4>
   13b60:	mvn	sl, #0
   13b64:	ldr	r1, [fp, #-68]	; 0xffffffbc
   13b68:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13b6c:	eor	r0, r1, #2
   13b70:	orr	r0, r0, r8
   13b74:	clz	r0, r0
   13b78:	lsr	r0, r0, #5
   13b7c:	tst	r2, r0
   13b80:	bne	13c28 <__mempcpy_chk@plt+0x2a68>
   13b84:	subs	r0, r1, #2
   13b88:	movwne	r0, #1
   13b8c:	orr	r0, r2, r0
   13b90:	tst	r0, #1
   13b94:	ldreq	r0, [sp, #60]	; 0x3c
   13b98:	ldreq	r1, [fp, #-48]	; 0xffffffd0
   13b9c:	eoreq	r0, r0, #1
   13ba0:	tsteq	r0, #1
   13ba4:	bne	13cbc <__mempcpy_chk@plt+0x2afc>
   13ba8:	tst	r1, #1
   13bac:	bne	13c88 <__mempcpy_chk@plt+0x2ac8>
   13bb0:	ldr	r6, [sp, #56]	; 0x38
   13bb4:	mov	r9, #0
   13bb8:	cmp	r6, #0
   13bbc:	beq	13cb4 <__mempcpy_chk@plt+0x2af4>
   13bc0:	ldr	r0, [sp, #84]	; 0x54
   13bc4:	mov	r1, #0
   13bc8:	mov	r7, #2
   13bcc:	cmp	ip, #0
   13bd0:	str	r1, [fp, #-48]	; 0xffffffd0
   13bd4:	mov	r1, #0
   13bd8:	str	r1, [fp, #-76]	; 0xffffffb4
   13bdc:	beq	12d44 <__mempcpy_chk@plt+0x1b84>
   13be0:	b	13cbc <__mempcpy_chk@plt+0x2afc>
   13be4:	ldr	r4, [fp, #-80]	; 0xffffffb0
   13be8:	ldr	r1, [fp, #12]
   13bec:	ldr	r2, [fp, #-68]	; 0xffffffbc
   13bf0:	mov	r5, r3
   13bf4:	mov	ip, r6
   13bf8:	mov	r3, sl
   13bfc:	b	13c4c <__mempcpy_chk@plt+0x2a8c>
   13c00:	tst	r4, #1
   13c04:	ldr	r5, [fp, #-84]	; 0xffffffac
   13c08:	ldr	r4, [fp, #-80]	; 0xffffffb0
   13c0c:	ldr	r1, [fp, #12]
   13c10:	ldr	r3, [sp, #36]	; 0x24
   13c14:	mov	r0, #2
   13c18:	movwne	r0, #4
   13c1c:	mov	r2, r0
   13c20:	b	13c4c <__mempcpy_chk@plt+0x2a8c>
   13c24:	ldr	ip, [sp, #88]	; 0x58
   13c28:	ldr	r1, [sp, #84]	; 0x54
   13c2c:	mov	r0, #2
   13c30:	tst	r1, #1
   13c34:	movwne	r0, #4
   13c38:	ldr	r2, [fp, #-68]	; 0xffffffbc
   13c3c:	ldr	r1, [fp, #12]
   13c40:	mov	r3, sl
   13c44:	cmp	r2, #2
   13c48:	moveq	r2, r0
   13c4c:	mov	r0, #0
   13c50:	bic	r1, r1, #2
   13c54:	str	r2, [sp]
   13c58:	mov	r2, r4
   13c5c:	str	r0, [sp, #8]
   13c60:	ldr	r0, [sp, #76]	; 0x4c
   13c64:	str	r1, [sp, #4]
   13c68:	mov	r1, ip
   13c6c:	str	r0, [sp, #12]
   13c70:	ldr	r0, [sp, #80]	; 0x50
   13c74:	str	r0, [sp, #16]
   13c78:	mov	r0, r5
   13c7c:	bl	12cb8 <__mempcpy_chk@plt+0x1af8>
   13c80:	mov	r8, r0
   13c84:	b	13d08 <__mempcpy_chk@plt+0x2b48>
   13c88:	mov	r0, #5
   13c8c:	ldr	r1, [sp, #56]	; 0x38
   13c90:	ldr	r2, [fp, #-80]	; 0xffffffb0
   13c94:	mov	r3, sl
   13c98:	str	r0, [sp]
   13c9c:	ldr	r0, [fp, #12]
   13ca0:	str	r0, [sp, #4]
   13ca4:	ldr	r0, [fp, #16]
   13ca8:	str	r0, [sp, #8]
   13cac:	ldr	r0, [sp, #76]	; 0x4c
   13cb0:	b	13c6c <__mempcpy_chk@plt+0x2aac>
   13cb4:	mov	r0, #0
   13cb8:	str	r0, [fp, #-76]	; 0xffffffb4
   13cbc:	ldr	r1, [fp, #-88]	; 0xffffffa8
   13cc0:	cmp	r1, #0
   13cc4:	beq	13cfc <__mempcpy_chk@plt+0x2b3c>
   13cc8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13ccc:	tst	r0, #1
   13cd0:	bne	13cfc <__mempcpy_chk@plt+0x2b3c>
   13cd4:	ldrb	r0, [r1]
   13cd8:	cmp	r0, #0
   13cdc:	beq	13cfc <__mempcpy_chk@plt+0x2b3c>
   13ce0:	add	r1, r1, #1
   13ce4:	cmp	r8, ip
   13ce8:	strbcc	r0, [r5, r8]
   13cec:	add	r8, r8, #1
   13cf0:	ldrb	r0, [r1], #1
   13cf4:	cmp	r0, #0
   13cf8:	bne	13ce4 <__mempcpy_chk@plt+0x2b24>
   13cfc:	cmp	r8, ip
   13d00:	movcc	r0, #0
   13d04:	strbcc	r0, [r5, r8]
   13d08:	mov	r0, r8
   13d0c:	sub	sp, fp, #28
   13d10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d14:	mov	r0, #4
   13d18:	b	13c38 <__mempcpy_chk@plt+0x2a78>
   13d1c:	mov	r4, r1
   13d20:	b	13c28 <__mempcpy_chk@plt+0x2a68>
   13d24:	bl	111a8 <abort@plt>
   13d28:	mov	r3, r2
   13d2c:	mov	r2, #0
   13d30:	b	13d34 <__mempcpy_chk@plt+0x2b74>
   13d34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13d38:	add	fp, sp, #28
   13d3c:	sub	sp, sp, #36	; 0x24
   13d40:	movw	r8, #29080	; 0x7198
   13d44:	cmp	r3, #0
   13d48:	mov	r4, r2
   13d4c:	str	r2, [sp, #24]
   13d50:	mov	r5, r1
   13d54:	mov	r6, r0
   13d58:	str	r0, [sp, #20]
   13d5c:	movt	r8, #2
   13d60:	movne	r8, r3
   13d64:	bl	110d0 <__errno_location@plt>
   13d68:	str	r0, [sp, #28]
   13d6c:	ldr	r1, [r8, #40]	; 0x28
   13d70:	ldr	r2, [r8, #44]	; 0x2c
   13d74:	ldr	r7, [r0]
   13d78:	cmp	r4, #0
   13d7c:	add	sl, r8, #8
   13d80:	mov	r0, #0
   13d84:	ldm	r8, {r3, r9}
   13d88:	orreq	r9, r9, #1
   13d8c:	stm	sp, {r3, r9, sl}
   13d90:	str	r1, [sp, #12]
   13d94:	str	r2, [sp, #16]
   13d98:	mov	r1, #0
   13d9c:	mov	r2, r6
   13da0:	mov	r3, r5
   13da4:	str	r7, [sp, #32]
   13da8:	mov	r7, r5
   13dac:	bl	12cb8 <__mempcpy_chk@plt+0x1af8>
   13db0:	add	r4, r0, #1
   13db4:	mov	r5, r0
   13db8:	mov	r0, r4
   13dbc:	bl	14aac <__mempcpy_chk@plt+0x38ec>
   13dc0:	mov	r6, r0
   13dc4:	ldr	r0, [r8]
   13dc8:	ldr	r2, [r8, #44]	; 0x2c
   13dcc:	ldr	r1, [r8, #40]	; 0x28
   13dd0:	mov	r3, r7
   13dd4:	stm	sp, {r0, r9, sl}
   13dd8:	str	r2, [sp, #16]
   13ddc:	ldr	r2, [sp, #20]
   13de0:	str	r1, [sp, #12]
   13de4:	mov	r0, r6
   13de8:	mov	r1, r4
   13dec:	bl	12cb8 <__mempcpy_chk@plt+0x1af8>
   13df0:	ldr	r0, [sp, #24]
   13df4:	ldr	r1, [sp, #32]
   13df8:	ldr	r2, [sp, #28]
   13dfc:	cmp	r0, #0
   13e00:	str	r1, [r2]
   13e04:	strne	r5, [r0]
   13e08:	mov	r0, r6
   13e0c:	sub	sp, fp, #28
   13e10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e14:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13e18:	add	fp, sp, #24
   13e1c:	movw	r5, #28940	; 0x710c
   13e20:	movw	r8, #28936	; 0x7108
   13e24:	movt	r5, #2
   13e28:	movt	r8, #2
   13e2c:	ldr	r0, [r5]
   13e30:	ldr	r4, [r8]
   13e34:	cmp	r0, #2
   13e38:	blt	13e64 <__mempcpy_chk@plt+0x2ca4>
   13e3c:	add	r7, r4, #12
   13e40:	mov	r6, #0
   13e44:	ldr	r0, [r7, r6, lsl #3]
   13e48:	bl	12a5c <__mempcpy_chk@plt+0x189c>
   13e4c:	ldr	r1, [r5]
   13e50:	add	r2, r6, #2
   13e54:	add	r0, r6, #1
   13e58:	mov	r6, r0
   13e5c:	cmp	r2, r1
   13e60:	blt	13e44 <__mempcpy_chk@plt+0x2c84>
   13e64:	ldr	r0, [r4, #4]
   13e68:	movw	r9, #29128	; 0x71c8
   13e6c:	movw	r7, #28944	; 0x7110
   13e70:	movt	r9, #2
   13e74:	movt	r7, #2
   13e78:	cmp	r0, r9
   13e7c:	beq	13e8c <__mempcpy_chk@plt+0x2ccc>
   13e80:	bl	12a5c <__mempcpy_chk@plt+0x189c>
   13e84:	mov	r0, #256	; 0x100
   13e88:	stm	r7, {r0, r9}
   13e8c:	cmp	r4, r7
   13e90:	beq	13ea0 <__mempcpy_chk@plt+0x2ce0>
   13e94:	mov	r0, r4
   13e98:	bl	12a5c <__mempcpy_chk@plt+0x189c>
   13e9c:	str	r7, [r8]
   13ea0:	mov	r0, #1
   13ea4:	str	r0, [r5]
   13ea8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13eac:	movw	r3, #29080	; 0x7198
   13eb0:	mvn	r2, #0
   13eb4:	movt	r3, #2
   13eb8:	b	13ebc <__mempcpy_chk@plt+0x2cfc>
   13ebc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ec0:	add	fp, sp, #28
   13ec4:	sub	sp, sp, #44	; 0x2c
   13ec8:	mov	r7, r3
   13ecc:	str	r2, [sp, #36]	; 0x24
   13ed0:	str	r1, [sp, #32]
   13ed4:	mov	r5, r0
   13ed8:	bl	110d0 <__errno_location@plt>
   13edc:	cmp	r5, #0
   13ee0:	bmi	14050 <__mempcpy_chk@plt+0x2e90>
   13ee4:	cmn	r5, #-2147483647	; 0x80000001
   13ee8:	beq	14050 <__mempcpy_chk@plt+0x2e90>
   13eec:	movw	r8, #28940	; 0x710c
   13ef0:	movw	r4, #28936	; 0x7108
   13ef4:	str	r0, [sp, #28]
   13ef8:	ldr	r0, [r0]
   13efc:	movt	r8, #2
   13f00:	movt	r4, #2
   13f04:	ldr	r1, [r8]
   13f08:	ldr	r6, [r4]
   13f0c:	str	r0, [sp, #24]
   13f10:	cmp	r1, r5
   13f14:	ble	13f20 <__mempcpy_chk@plt+0x2d60>
   13f18:	mov	sl, r6
   13f1c:	b	13f8c <__mempcpy_chk@plt+0x2dcc>
   13f20:	movw	r9, #28944	; 0x7110
   13f24:	mov	r0, #8
   13f28:	str	r1, [fp, #-32]	; 0xffffffe0
   13f2c:	sub	r1, r5, r1
   13f30:	mvn	r3, #-2147483648	; 0x80000000
   13f34:	movt	r9, #2
   13f38:	str	r0, [sp]
   13f3c:	add	r2, r1, #1
   13f40:	sub	r1, fp, #32
   13f44:	subs	r0, r6, r9
   13f48:	movne	r0, r6
   13f4c:	bl	14bdc <__mempcpy_chk@plt+0x3a1c>
   13f50:	mov	sl, r0
   13f54:	cmp	r6, r9
   13f58:	str	r0, [r4]
   13f5c:	bne	13f68 <__mempcpy_chk@plt+0x2da8>
   13f60:	ldrd	r0, [r9]
   13f64:	stm	sl, {r0, r1}
   13f68:	ldr	r1, [r8]
   13f6c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13f70:	add	r0, sl, r1, lsl #3
   13f74:	sub	r1, r2, r1
   13f78:	lsl	r2, r1, #3
   13f7c:	mov	r1, #0
   13f80:	bl	110f4 <memset@plt>
   13f84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13f88:	str	r0, [r8]
   13f8c:	mov	r9, sl
   13f90:	ldm	r7, {r0, r1}
   13f94:	orr	r8, r1, #1
   13f98:	add	r1, r7, #8
   13f9c:	ldr	r2, [r7, #40]	; 0x28
   13fa0:	ldr	r3, [r7, #44]	; 0x2c
   13fa4:	ldr	r6, [r9, r5, lsl #3]!
   13fa8:	str	r1, [sp, #20]
   13fac:	ldr	r4, [r9, #4]!
   13fb0:	stm	sp, {r0, r8}
   13fb4:	add	r0, sp, #8
   13fb8:	stm	r0, {r1, r2, r3}
   13fbc:	ldr	r2, [sp, #32]
   13fc0:	ldr	r3, [sp, #36]	; 0x24
   13fc4:	mov	r1, r6
   13fc8:	mov	r0, r4
   13fcc:	bl	12cb8 <__mempcpy_chk@plt+0x1af8>
   13fd0:	cmp	r6, r0
   13fd4:	bhi	14038 <__mempcpy_chk@plt+0x2e78>
   13fd8:	add	r6, r0, #1
   13fdc:	movw	r0, #29128	; 0x71c8
   13fe0:	movt	r0, #2
   13fe4:	str	r6, [sl, r5, lsl #3]
   13fe8:	cmp	r4, r0
   13fec:	beq	13ff8 <__mempcpy_chk@plt+0x2e38>
   13ff0:	mov	r0, r4
   13ff4:	bl	12a5c <__mempcpy_chk@plt+0x189c>
   13ff8:	mov	r0, r6
   13ffc:	bl	14aac <__mempcpy_chk@plt+0x38ec>
   14000:	str	r0, [r9]
   14004:	mov	r4, r0
   14008:	add	r3, sp, #8
   1400c:	ldr	r0, [r7]
   14010:	ldr	r1, [r7, #40]	; 0x28
   14014:	ldr	r2, [r7, #44]	; 0x2c
   14018:	stm	sp, {r0, r8}
   1401c:	ldr	r0, [sp, #20]
   14020:	stm	r3, {r0, r1, r2}
   14024:	ldr	r2, [sp, #32]
   14028:	ldr	r3, [sp, #36]	; 0x24
   1402c:	mov	r0, r4
   14030:	mov	r1, r6
   14034:	bl	12cb8 <__mempcpy_chk@plt+0x1af8>
   14038:	ldr	r0, [sp, #28]
   1403c:	ldr	r1, [sp, #24]
   14040:	str	r1, [r0]
   14044:	mov	r0, r4
   14048:	sub	sp, fp, #28
   1404c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14050:	bl	111a8 <abort@plt>
   14054:	movw	r3, #29080	; 0x7198
   14058:	movt	r3, #2
   1405c:	b	13ebc <__mempcpy_chk@plt+0x2cfc>
   14060:	movw	r3, #29080	; 0x7198
   14064:	mov	r1, r0
   14068:	mov	r0, #0
   1406c:	mvn	r2, #0
   14070:	movt	r3, #2
   14074:	b	13ebc <__mempcpy_chk@plt+0x2cfc>
   14078:	movw	r3, #29080	; 0x7198
   1407c:	mov	r2, r1
   14080:	mov	r1, r0
   14084:	mov	r0, #0
   14088:	movt	r3, #2
   1408c:	b	13ebc <__mempcpy_chk@plt+0x2cfc>
   14090:	push	{fp, lr}
   14094:	mov	fp, sp
   14098:	sub	sp, sp, #48	; 0x30
   1409c:	vmov.i32	q8, #0	; 0x00000000
   140a0:	mov	ip, #32
   140a4:	mov	r3, sp
   140a8:	mov	lr, r2
   140ac:	cmp	r1, #10
   140b0:	add	r2, r3, #16
   140b4:	vst1.64	{d16-d17}, [r3], ip
   140b8:	vst1.64	{d16-d17}, [r2]
   140bc:	vst1.64	{d16-d17}, [r3]
   140c0:	beq	140e0 <__mempcpy_chk@plt+0x2f20>
   140c4:	str	r1, [sp]
   140c8:	mov	r3, sp
   140cc:	mov	r1, lr
   140d0:	mvn	r2, #0
   140d4:	bl	13ebc <__mempcpy_chk@plt+0x2cfc>
   140d8:	mov	sp, fp
   140dc:	pop	{fp, pc}
   140e0:	bl	111a8 <abort@plt>
   140e4:	push	{r4, sl, fp, lr}
   140e8:	add	fp, sp, #8
   140ec:	sub	sp, sp, #48	; 0x30
   140f0:	vmov.i32	q8, #0	; 0x00000000
   140f4:	mov	ip, r3
   140f8:	mov	r3, sp
   140fc:	mov	lr, #32
   14100:	cmp	r1, #10
   14104:	add	r4, r3, #16
   14108:	vst1.64	{d16-d17}, [r3], lr
   1410c:	vst1.64	{d16-d17}, [r4]
   14110:	vst1.64	{d16-d17}, [r3]
   14114:	beq	14134 <__mempcpy_chk@plt+0x2f74>
   14118:	str	r1, [sp]
   1411c:	mov	r1, r2
   14120:	mov	r3, sp
   14124:	mov	r2, ip
   14128:	bl	13ebc <__mempcpy_chk@plt+0x2cfc>
   1412c:	sub	sp, fp, #8
   14130:	pop	{r4, sl, fp, pc}
   14134:	bl	111a8 <abort@plt>
   14138:	mov	r2, r1
   1413c:	mov	r1, r0
   14140:	mov	r0, #0
   14144:	b	14090 <__mempcpy_chk@plt+0x2ed0>
   14148:	mov	r3, r2
   1414c:	mov	r2, r1
   14150:	mov	r1, r0
   14154:	mov	r0, #0
   14158:	b	140e4 <__mempcpy_chk@plt+0x2f24>
   1415c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14160:	add	fp, sp, #24
   14164:	sub	sp, sp, #48	; 0x30
   14168:	movw	r8, #29080	; 0x7198
   1416c:	mov	lr, r0
   14170:	mov	r3, sp
   14174:	mov	ip, r1
   14178:	movt	r8, #2
   1417c:	mov	r1, r3
   14180:	ldm	r8!, {r0, r4, r5, r6, r7, r9}
   14184:	stmia	r1!, {r0, r4, r5, r6, r7, r9}
   14188:	ldm	r8, {r0, r4, r5, r6, r7, r9}
   1418c:	stm	r1, {r0, r4, r5, r6, r7, r9}
   14190:	ubfx	r0, r2, #5, #3
   14194:	and	r2, r2, #31
   14198:	mov	r4, #1
   1419c:	add	r0, r3, r0, lsl #2
   141a0:	ldr	r1, [r0, #8]
   141a4:	bic	r4, r4, r1, lsr r2
   141a8:	eor	r1, r1, r4, lsl r2
   141ac:	mov	r2, ip
   141b0:	str	r1, [r0, #8]
   141b4:	mov	r0, #0
   141b8:	mov	r1, lr
   141bc:	bl	13ebc <__mempcpy_chk@plt+0x2cfc>
   141c0:	sub	sp, fp, #24
   141c4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   141c8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   141cc:	add	fp, sp, #24
   141d0:	sub	sp, sp, #48	; 0x30
   141d4:	movw	lr, #29080	; 0x7198
   141d8:	mov	ip, r0
   141dc:	mov	r3, sp
   141e0:	movt	lr, #2
   141e4:	mov	r2, r3
   141e8:	ldm	lr!, {r0, r4, r5, r6, r7, r8}
   141ec:	stmia	r2!, {r0, r4, r5, r6, r7, r8}
   141f0:	ldm	lr, {r0, r4, r5, r6, r7, r8}
   141f4:	stm	r2, {r0, r4, r5, r6, r7, r8}
   141f8:	ubfx	r0, r1, #5, #3
   141fc:	and	r1, r1, #31
   14200:	mov	r7, #1
   14204:	add	r0, r3, r0, lsl #2
   14208:	ldr	r2, [r0, #8]
   1420c:	bic	r7, r7, r2, lsr r1
   14210:	eor	r1, r2, r7, lsl r1
   14214:	mvn	r2, #0
   14218:	str	r1, [r0, #8]
   1421c:	mov	r0, #0
   14220:	mov	r1, ip
   14224:	bl	13ebc <__mempcpy_chk@plt+0x2cfc>
   14228:	sub	sp, fp, #24
   1422c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14230:	push	{r4, r5, r6, r7, fp, lr}
   14234:	add	fp, sp, #16
   14238:	sub	sp, sp, #48	; 0x30
   1423c:	movw	lr, #29080	; 0x7198
   14240:	mov	ip, r0
   14244:	mov	r3, sp
   14248:	movt	lr, #2
   1424c:	mov	r2, r3
   14250:	ldm	lr!, {r0, r1, r4, r5, r6, r7}
   14254:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   14258:	ldm	lr, {r0, r1, r4, r5, r6, r7}
   1425c:	stm	r2, {r0, r1, r4, r5, r6, r7}
   14260:	mov	r1, ip
   14264:	mvn	r2, #0
   14268:	ldr	r0, [sp, #12]
   1426c:	orr	r0, r0, #67108864	; 0x4000000
   14270:	str	r0, [sp, #12]
   14274:	mov	r0, #0
   14278:	bl	13ebc <__mempcpy_chk@plt+0x2cfc>
   1427c:	sub	sp, fp, #16
   14280:	pop	{r4, r5, r6, r7, fp, pc}
   14284:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14288:	add	fp, sp, #24
   1428c:	sub	sp, sp, #48	; 0x30
   14290:	movw	r8, #29080	; 0x7198
   14294:	mov	ip, r1
   14298:	mov	lr, r0
   1429c:	mov	r3, sp
   142a0:	movt	r8, #2
   142a4:	mov	r2, r3
   142a8:	ldm	r8!, {r0, r1, r4, r5, r6, r7}
   142ac:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   142b0:	ldm	r8, {r0, r1, r4, r5, r6, r7}
   142b4:	stm	r2, {r0, r1, r4, r5, r6, r7}
   142b8:	mov	r1, lr
   142bc:	mov	r2, ip
   142c0:	ldr	r0, [sp, #12]
   142c4:	orr	r0, r0, #67108864	; 0x4000000
   142c8:	str	r0, [sp, #12]
   142cc:	mov	r0, #0
   142d0:	bl	13ebc <__mempcpy_chk@plt+0x2cfc>
   142d4:	sub	sp, fp, #24
   142d8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   142dc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   142e0:	add	fp, sp, #24
   142e4:	sub	sp, sp, #96	; 0x60
   142e8:	vmov.i32	q8, #0	; 0x00000000
   142ec:	mov	lr, sp
   142f0:	mov	ip, r2
   142f4:	cmp	r1, #10
   142f8:	add	r3, lr, #16
   142fc:	mov	r2, lr
   14300:	vst1.64	{d16-d17}, [r3]
   14304:	mov	r3, #28
   14308:	vst1.64	{d16-d17}, [r2], r3
   1430c:	vst1.32	{d16-d17}, [r2]
   14310:	beq	14350 <__mempcpy_chk@plt+0x3190>
   14314:	str	r1, [sp, #48]	; 0x30
   14318:	add	r3, sp, #48	; 0x30
   1431c:	ldm	lr!, {r2, r4, r5, r6, r7}
   14320:	add	r1, r3, #4
   14324:	stmia	r1!, {r2, r4, r5, r6, r7}
   14328:	ldm	lr, {r2, r4, r5, r6, r7, r8}
   1432c:	stm	r1, {r2, r4, r5, r6, r7, r8}
   14330:	mvn	r2, #0
   14334:	ldr	r1, [sp, #60]	; 0x3c
   14338:	orr	r1, r1, #67108864	; 0x4000000
   1433c:	str	r1, [sp, #60]	; 0x3c
   14340:	mov	r1, ip
   14344:	bl	13ebc <__mempcpy_chk@plt+0x2cfc>
   14348:	sub	sp, fp, #24
   1434c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14350:	bl	111a8 <abort@plt>
   14354:	push	{fp, lr}
   14358:	mov	fp, sp
   1435c:	sub	sp, sp, #8
   14360:	mvn	ip, #0
   14364:	str	ip, [sp]
   14368:	bl	14374 <__mempcpy_chk@plt+0x31b4>
   1436c:	mov	sp, fp
   14370:	pop	{fp, pc}
   14374:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14378:	add	fp, sp, #24
   1437c:	sub	sp, sp, #48	; 0x30
   14380:	movw	ip, #29080	; 0x7198
   14384:	mov	lr, r3
   14388:	mov	r3, sp
   1438c:	cmp	r1, #0
   14390:	movt	ip, #2
   14394:	cmpne	r2, #0
   14398:	ldm	ip!, {r4, r5, r6, r7, r8, r9}
   1439c:	stmia	r3!, {r4, r5, r6, r7, r8, r9}
   143a0:	ldm	ip, {r4, r5, r6, r7, r8, r9}
   143a4:	stm	r3, {r4, r5, r6, r7, r8, r9}
   143a8:	mov	r3, #10
   143ac:	str	r3, [sp]
   143b0:	bne	143b8 <__mempcpy_chk@plt+0x31f8>
   143b4:	bl	111a8 <abort@plt>
   143b8:	ldr	ip, [fp, #8]
   143bc:	str	r2, [sp, #44]	; 0x2c
   143c0:	str	r1, [sp, #40]	; 0x28
   143c4:	mov	r3, sp
   143c8:	mov	r1, lr
   143cc:	mov	r2, ip
   143d0:	bl	13ebc <__mempcpy_chk@plt+0x2cfc>
   143d4:	sub	sp, fp, #24
   143d8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   143dc:	push	{fp, lr}
   143e0:	mov	fp, sp
   143e4:	sub	sp, sp, #8
   143e8:	mov	r3, r2
   143ec:	mov	r2, r1
   143f0:	mov	r1, r0
   143f4:	mvn	r0, #0
   143f8:	str	r0, [sp]
   143fc:	mov	r0, #0
   14400:	bl	14374 <__mempcpy_chk@plt+0x31b4>
   14404:	mov	sp, fp
   14408:	pop	{fp, pc}
   1440c:	push	{fp, lr}
   14410:	mov	fp, sp
   14414:	sub	sp, sp, #8
   14418:	mov	ip, r2
   1441c:	mov	r2, r1
   14420:	mov	r1, r0
   14424:	str	r3, [sp]
   14428:	mov	r0, #0
   1442c:	mov	r3, ip
   14430:	bl	14374 <__mempcpy_chk@plt+0x31b4>
   14434:	mov	sp, fp
   14438:	pop	{fp, pc}
   1443c:	movw	r3, #28952	; 0x7118
   14440:	movt	r3, #2
   14444:	b	13ebc <__mempcpy_chk@plt+0x2cfc>
   14448:	movw	r3, #28952	; 0x7118
   1444c:	mov	r2, r1
   14450:	mov	r1, r0
   14454:	mov	r0, #0
   14458:	movt	r3, #2
   1445c:	b	13ebc <__mempcpy_chk@plt+0x2cfc>
   14460:	movw	r3, #28952	; 0x7118
   14464:	mvn	r2, #0
   14468:	movt	r3, #2
   1446c:	b	13ebc <__mempcpy_chk@plt+0x2cfc>
   14470:	movw	r3, #28952	; 0x7118
   14474:	mov	r1, r0
   14478:	mov	r0, #0
   1447c:	mvn	r2, #0
   14480:	movt	r3, #2
   14484:	b	13ebc <__mempcpy_chk@plt+0x2cfc>
   14488:	push	{r4, r5, fp, lr}
   1448c:	add	fp, sp, #8
   14490:	mov	r5, r0
   14494:	mov	r4, r1
   14498:	mov	r0, #0
   1449c:	mov	r2, #5
   144a0:	mov	r1, r5
   144a4:	bl	10fc8 <dcgettext@plt>
   144a8:	cmp	r0, r5
   144ac:	popne	{r4, r5, fp, pc}
   144b0:	bl	15320 <__mempcpy_chk@plt+0x4160>
   144b4:	ldrb	r1, [r0]
   144b8:	and	r1, r1, #223	; 0xdf
   144bc:	cmp	r1, #71	; 0x47
   144c0:	beq	14528 <__mempcpy_chk@plt+0x3368>
   144c4:	cmp	r1, #85	; 0x55
   144c8:	bne	14580 <__mempcpy_chk@plt+0x33c0>
   144cc:	ldrb	r1, [r0, #1]
   144d0:	and	r1, r1, #223	; 0xdf
   144d4:	cmp	r1, #84	; 0x54
   144d8:	bne	14580 <__mempcpy_chk@plt+0x33c0>
   144dc:	ldrb	r1, [r0, #2]
   144e0:	and	r1, r1, #223	; 0xdf
   144e4:	cmp	r1, #70	; 0x46
   144e8:	bne	14580 <__mempcpy_chk@plt+0x33c0>
   144ec:	ldrb	r1, [r0, #3]
   144f0:	cmp	r1, #45	; 0x2d
   144f4:	bne	14580 <__mempcpy_chk@plt+0x33c0>
   144f8:	ldrb	r1, [r0, #4]
   144fc:	cmp	r1, #56	; 0x38
   14500:	bne	14580 <__mempcpy_chk@plt+0x33c0>
   14504:	ldrb	r0, [r0, #5]
   14508:	cmp	r0, #0
   1450c:	bne	14580 <__mempcpy_chk@plt+0x33c0>
   14510:	ldrb	r1, [r5]
   14514:	movw	r2, #24444	; 0x5f7c
   14518:	movw	r0, #24448	; 0x5f80
   1451c:	movt	r2, #1
   14520:	movt	r0, #1
   14524:	b	145b0 <__mempcpy_chk@plt+0x33f0>
   14528:	ldrb	r1, [r0, #1]
   1452c:	and	r1, r1, #223	; 0xdf
   14530:	cmp	r1, #66	; 0x42
   14534:	bne	14580 <__mempcpy_chk@plt+0x33c0>
   14538:	ldrb	r1, [r0, #2]
   1453c:	cmp	r1, #49	; 0x31
   14540:	bne	14580 <__mempcpy_chk@plt+0x33c0>
   14544:	ldrb	r1, [r0, #3]
   14548:	cmp	r1, #56	; 0x38
   1454c:	bne	14580 <__mempcpy_chk@plt+0x33c0>
   14550:	ldrb	r1, [r0, #4]
   14554:	cmp	r1, #48	; 0x30
   14558:	bne	14580 <__mempcpy_chk@plt+0x33c0>
   1455c:	ldrb	r1, [r0, #5]
   14560:	cmp	r1, #51	; 0x33
   14564:	bne	14580 <__mempcpy_chk@plt+0x33c0>
   14568:	ldrb	r1, [r0, #6]
   1456c:	cmp	r1, #48	; 0x30
   14570:	bne	14580 <__mempcpy_chk@plt+0x33c0>
   14574:	ldrb	r0, [r0, #7]
   14578:	cmp	r0, #0
   1457c:	beq	1459c <__mempcpy_chk@plt+0x33dc>
   14580:	movw	r1, #24440	; 0x5f78
   14584:	movw	r0, #23863	; 0x5d37
   14588:	cmp	r4, #9
   1458c:	movt	r1, #1
   14590:	movt	r0, #1
   14594:	moveq	r0, r1
   14598:	pop	{r4, r5, fp, pc}
   1459c:	ldrb	r1, [r5]
   145a0:	movw	r2, #24452	; 0x5f84
   145a4:	movw	r0, #24456	; 0x5f88
   145a8:	movt	r2, #1
   145ac:	movt	r0, #1
   145b0:	cmp	r1, #96	; 0x60
   145b4:	moveq	r0, r2
   145b8:	pop	{r4, r5, fp, pc}
   145bc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   145c0:	add	fp, sp, #24
   145c4:	sub	sp, sp, #32
   145c8:	ldr	r6, [fp, #12]
   145cc:	ldr	r7, [fp, #8]
   145d0:	mov	r4, r2
   145d4:	mov	r8, r0
   145d8:	cmp	r1, #0
   145dc:	beq	14604 <__mempcpy_chk@plt+0x3444>
   145e0:	movw	r2, #24544	; 0x5fe0
   145e4:	mov	r5, r1
   145e8:	str	r3, [sp, #4]
   145ec:	str	r4, [sp]
   145f0:	mov	r0, r8
   145f4:	mov	r1, #1
   145f8:	movt	r2, #1
   145fc:	mov	r3, r5
   14600:	b	1461c <__mempcpy_chk@plt+0x345c>
   14604:	movw	r2, #24556	; 0x5fec
   14608:	str	r3, [sp]
   1460c:	mov	r0, r8
   14610:	mov	r1, #1
   14614:	mov	r3, r4
   14618:	movt	r2, #1
   1461c:	bl	11118 <__fprintf_chk@plt>
   14620:	movw	r1, #24563	; 0x5ff3
   14624:	mov	r0, #0
   14628:	mov	r2, #5
   1462c:	movt	r1, #1
   14630:	bl	10fc8 <dcgettext@plt>
   14634:	movw	r2, #25281	; 0x62c1
   14638:	mov	r3, r0
   1463c:	movw	r0, #2022	; 0x7e6
   14640:	mov	r1, #1
   14644:	movt	r2, #1
   14648:	str	r0, [sp]
   1464c:	mov	r0, r8
   14650:	bl	11118 <__fprintf_chk@plt>
   14654:	movw	r4, #23784	; 0x5ce8
   14658:	mov	r1, r8
   1465c:	movt	r4, #1
   14660:	mov	r0, r4
   14664:	bl	10f20 <fputs_unlocked@plt>
   14668:	movw	r1, #24567	; 0x5ff7
   1466c:	mov	r0, #0
   14670:	mov	r2, #5
   14674:	movt	r1, #1
   14678:	bl	10fc8 <dcgettext@plt>
   1467c:	movw	r3, #24738	; 0x60a2
   14680:	mov	r2, r0
   14684:	mov	r0, r8
   14688:	mov	r1, #1
   1468c:	movt	r3, #1
   14690:	bl	11118 <__fprintf_chk@plt>
   14694:	mov	r0, r4
   14698:	mov	r1, r8
   1469c:	bl	10f20 <fputs_unlocked@plt>
   146a0:	cmp	r6, #9
   146a4:	bhi	14708 <__mempcpy_chk@plt+0x3548>
   146a8:	add	r0, pc, #0
   146ac:	ldr	pc, [r0, r6, lsl #2]
   146b0:	andeq	r4, r1, r0, ror #17
   146b4:	ldrdeq	r4, [r1], -r8
   146b8:	andeq	r4, r1, r4, lsl r7
   146bc:	andeq	r4, r1, ip, lsr r7
   146c0:	andeq	r4, r1, r4, ror #14
   146c4:	andeq	r4, r1, ip, lsl #15
   146c8:			; <UNDEFINED> instruction: 0x000147b4
   146cc:	andeq	r4, r1, ip, ror #15
   146d0:	andeq	r4, r1, ip, lsl #17
   146d4:	andeq	r4, r1, r4, lsr r8
   146d8:	movw	r1, #24772	; 0x60c4
   146dc:	mov	r0, #0
   146e0:	mov	r2, #5
   146e4:	movt	r1, #1
   146e8:	bl	10fc8 <dcgettext@plt>
   146ec:	ldr	r3, [r7]
   146f0:	mov	r2, r0
   146f4:	mov	r0, r8
   146f8:	mov	r1, #1
   146fc:	sub	sp, fp, #24
   14700:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   14704:	b	11118 <__fprintf_chk@plt>
   14708:	movw	r1, #25091	; 0x6203
   1470c:	movt	r1, #1
   14710:	b	1483c <__mempcpy_chk@plt+0x367c>
   14714:	movw	r1, #24788	; 0x60d4
   14718:	mov	r0, #0
   1471c:	mov	r2, #5
   14720:	movt	r1, #1
   14724:	bl	10fc8 <dcgettext@plt>
   14728:	mov	r2, r0
   1472c:	ldr	r3, [r7]
   14730:	ldr	r0, [r7, #4]
   14734:	str	r0, [sp]
   14738:	b	14828 <__mempcpy_chk@plt+0x3668>
   1473c:	movw	r1, #24811	; 0x60eb
   14740:	mov	r0, #0
   14744:	mov	r2, #5
   14748:	movt	r1, #1
   1474c:	bl	10fc8 <dcgettext@plt>
   14750:	mov	r2, r0
   14754:	ldr	r3, [r7]
   14758:	ldmib	r7, {r0, r1}
   1475c:	stm	sp, {r0, r1}
   14760:	b	14828 <__mempcpy_chk@plt+0x3668>
   14764:	movw	r1, #24839	; 0x6107
   14768:	mov	r0, #0
   1476c:	mov	r2, #5
   14770:	movt	r1, #1
   14774:	bl	10fc8 <dcgettext@plt>
   14778:	ldr	r3, [r7]
   1477c:	mov	r2, r0
   14780:	ldmib	r7, {r0, r1, r7}
   14784:	stm	sp, {r0, r1, r7}
   14788:	b	14828 <__mempcpy_chk@plt+0x3668>
   1478c:	movw	r1, #24871	; 0x6127
   14790:	mov	r0, #0
   14794:	mov	r2, #5
   14798:	movt	r1, #1
   1479c:	bl	10fc8 <dcgettext@plt>
   147a0:	ldr	r3, [r7]
   147a4:	mov	r2, r0
   147a8:	ldmib	r7, {r0, r1, r6, r7}
   147ac:	stm	sp, {r0, r1, r6, r7}
   147b0:	b	14828 <__mempcpy_chk@plt+0x3668>
   147b4:	movw	r1, #24907	; 0x614b
   147b8:	mov	r0, #0
   147bc:	mov	r2, #5
   147c0:	movt	r1, #1
   147c4:	bl	10fc8 <dcgettext@plt>
   147c8:	mov	r2, r0
   147cc:	ldr	r3, [r7]
   147d0:	ldmib	r7, {r0, r1, r6}
   147d4:	ldr	r5, [r7, #16]
   147d8:	ldr	r7, [r7, #20]
   147dc:	stm	sp, {r0, r1, r6}
   147e0:	str	r5, [sp, #12]
   147e4:	str	r7, [sp, #16]
   147e8:	b	14828 <__mempcpy_chk@plt+0x3668>
   147ec:	movw	r1, #24947	; 0x6173
   147f0:	mov	r0, #0
   147f4:	mov	r2, #5
   147f8:	movt	r1, #1
   147fc:	bl	10fc8 <dcgettext@plt>
   14800:	mov	r2, r0
   14804:	ldr	r3, [r7]
   14808:	ldmib	r7, {r0, r1, r6}
   1480c:	ldr	r5, [r7, #16]
   14810:	ldr	r4, [r7, #20]
   14814:	ldr	r7, [r7, #24]
   14818:	stm	sp, {r0, r1, r6}
   1481c:	str	r5, [sp, #12]
   14820:	str	r4, [sp, #16]
   14824:	str	r7, [sp, #20]
   14828:	mov	r0, r8
   1482c:	mov	r1, #1
   14830:	b	148dc <__mempcpy_chk@plt+0x371c>
   14834:	movw	r1, #25039	; 0x61cf
   14838:	movt	r1, #1
   1483c:	mov	r0, #0
   14840:	mov	r2, #5
   14844:	bl	10fc8 <dcgettext@plt>
   14848:	mov	ip, r0
   1484c:	ldr	r3, [r7]
   14850:	ldr	r0, [r7, #4]
   14854:	ldr	r1, [r7, #8]
   14858:	ldr	r6, [r7, #12]
   1485c:	ldr	r5, [r7, #16]
   14860:	ldr	r4, [r7, #20]
   14864:	ldr	r2, [r7, #24]
   14868:	ldr	lr, [r7, #28]
   1486c:	ldr	r7, [r7, #32]
   14870:	stm	sp, {r0, r1, r6}
   14874:	str	r5, [sp, #12]
   14878:	str	r4, [sp, #16]
   1487c:	str	r2, [sp, #20]
   14880:	str	lr, [sp, #24]
   14884:	str	r7, [sp, #28]
   14888:	b	148d0 <__mempcpy_chk@plt+0x3710>
   1488c:	movw	r1, #24991	; 0x619f
   14890:	mov	r0, #0
   14894:	mov	r2, #5
   14898:	movt	r1, #1
   1489c:	bl	10fc8 <dcgettext@plt>
   148a0:	mov	ip, r0
   148a4:	ldr	r3, [r7]
   148a8:	ldmib	r7, {r0, r1, r6}
   148ac:	ldr	r5, [r7, #16]
   148b0:	ldr	r4, [r7, #20]
   148b4:	ldr	r2, [r7, #24]
   148b8:	ldr	r7, [r7, #28]
   148bc:	stm	sp, {r0, r1, r6}
   148c0:	str	r5, [sp, #12]
   148c4:	str	r4, [sp, #16]
   148c8:	str	r2, [sp, #20]
   148cc:	str	r7, [sp, #24]
   148d0:	mov	r0, r8
   148d4:	mov	r1, #1
   148d8:	mov	r2, ip
   148dc:	bl	11118 <__fprintf_chk@plt>
   148e0:	sub	sp, fp, #24
   148e4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   148e8:	push	{r4, sl, fp, lr}
   148ec:	add	fp, sp, #8
   148f0:	sub	sp, sp, #8
   148f4:	ldr	ip, [fp, #8]
   148f8:	mov	lr, #0
   148fc:	ldr	r4, [ip, lr, lsl #2]
   14900:	add	lr, lr, #1
   14904:	cmp	r4, #0
   14908:	bne	148fc <__mempcpy_chk@plt+0x373c>
   1490c:	sub	r4, lr, #1
   14910:	str	ip, [sp]
   14914:	str	r4, [sp, #4]
   14918:	bl	145bc <__mempcpy_chk@plt+0x33fc>
   1491c:	sub	sp, fp, #8
   14920:	pop	{r4, sl, fp, pc}
   14924:	push	{r4, r5, fp, lr}
   14928:	add	fp, sp, #8
   1492c:	sub	sp, sp, #48	; 0x30
   14930:	ldr	r4, [fp, #8]
   14934:	mov	ip, #0
   14938:	add	lr, sp, #8
   1493c:	ldr	r5, [r4]
   14940:	cmp	r5, #0
   14944:	str	r5, [lr, ip, lsl #2]
   14948:	beq	14960 <__mempcpy_chk@plt+0x37a0>
   1494c:	add	ip, ip, #1
   14950:	add	r4, r4, #4
   14954:	cmp	ip, #10
   14958:	bne	1493c <__mempcpy_chk@plt+0x377c>
   1495c:	mov	ip, #10
   14960:	str	lr, [sp]
   14964:	str	ip, [sp, #4]
   14968:	bl	145bc <__mempcpy_chk@plt+0x33fc>
   1496c:	sub	sp, fp, #8
   14970:	pop	{r4, r5, fp, pc}
   14974:	push	{fp, lr}
   14978:	mov	fp, sp
   1497c:	sub	sp, sp, #8
   14980:	add	ip, fp, #8
   14984:	str	ip, [sp, #4]
   14988:	str	ip, [sp]
   1498c:	bl	14924 <__mempcpy_chk@plt+0x3764>
   14990:	mov	sp, fp
   14994:	pop	{fp, pc}
   14998:	push	{fp, lr}
   1499c:	mov	fp, sp
   149a0:	movw	r0, #29020	; 0x715c
   149a4:	movt	r0, #2
   149a8:	ldr	r1, [r0]
   149ac:	movw	r0, #23784	; 0x5ce8
   149b0:	movt	r0, #1
   149b4:	bl	10f20 <fputs_unlocked@plt>
   149b8:	movw	r1, #25151	; 0x623f
   149bc:	mov	r0, #0
   149c0:	mov	r2, #5
   149c4:	movt	r1, #1
   149c8:	bl	10fc8 <dcgettext@plt>
   149cc:	movw	r2, #25171	; 0x6253
   149d0:	mov	r1, r0
   149d4:	mov	r0, #1
   149d8:	movt	r2, #1
   149dc:	bl	11100 <__printf_chk@plt>
   149e0:	movw	r1, #25193	; 0x6269
   149e4:	mov	r0, #0
   149e8:	mov	r2, #5
   149ec:	movt	r1, #1
   149f0:	bl	10fc8 <dcgettext@plt>
   149f4:	movw	r2, #23224	; 0x5ab8
   149f8:	movw	r3, #23593	; 0x5c29
   149fc:	mov	r1, r0
   14a00:	mov	r0, #1
   14a04:	movt	r2, #1
   14a08:	movt	r3, #1
   14a0c:	bl	11100 <__printf_chk@plt>
   14a10:	movw	r1, #25213	; 0x627d
   14a14:	mov	r0, #0
   14a18:	mov	r2, #5
   14a1c:	movt	r1, #1
   14a20:	bl	10fc8 <dcgettext@plt>
   14a24:	movw	r2, #25252	; 0x62a4
   14a28:	mov	r1, r0
   14a2c:	mov	r0, #1
   14a30:	movt	r2, #1
   14a34:	pop	{fp, lr}
   14a38:	b	11100 <__printf_chk@plt>
   14a3c:	b	14a40 <__mempcpy_chk@plt+0x3880>
   14a40:	push	{r4, r5, r6, sl, fp, lr}
   14a44:	add	fp, sp, #16
   14a48:	mov	r4, r2
   14a4c:	mov	r5, r1
   14a50:	mov	r6, r0
   14a54:	bl	153bc <__mempcpy_chk@plt+0x41fc>
   14a58:	cmp	r0, #0
   14a5c:	popne	{r4, r5, r6, sl, fp, pc}
   14a60:	cmp	r6, #0
   14a64:	beq	14a78 <__mempcpy_chk@plt+0x38b8>
   14a68:	cmp	r5, #0
   14a6c:	cmpne	r4, #0
   14a70:	bne	14a78 <__mempcpy_chk@plt+0x38b8>
   14a74:	pop	{r4, r5, r6, sl, fp, pc}
   14a78:	bl	14ea8 <__mempcpy_chk@plt+0x3ce8>
   14a7c:	push	{fp, lr}
   14a80:	mov	fp, sp
   14a84:	bl	14fd8 <__mempcpy_chk@plt+0x3e18>
   14a88:	cmp	r0, #0
   14a8c:	popne	{fp, pc}
   14a90:	bl	14ea8 <__mempcpy_chk@plt+0x3ce8>
   14a94:	push	{fp, lr}
   14a98:	mov	fp, sp
   14a9c:	bl	14fd8 <__mempcpy_chk@plt+0x3e18>
   14aa0:	cmp	r0, #0
   14aa4:	popne	{fp, pc}
   14aa8:	bl	14ea8 <__mempcpy_chk@plt+0x3ce8>
   14aac:	push	{fp, lr}
   14ab0:	mov	fp, sp
   14ab4:	bl	14fd8 <__mempcpy_chk@plt+0x3e18>
   14ab8:	cmp	r0, #0
   14abc:	popne	{fp, pc}
   14ac0:	bl	14ea8 <__mempcpy_chk@plt+0x3ce8>
   14ac4:	push	{r4, r5, fp, lr}
   14ac8:	add	fp, sp, #8
   14acc:	mov	r4, r1
   14ad0:	mov	r5, r0
   14ad4:	bl	15008 <__mempcpy_chk@plt+0x3e48>
   14ad8:	cmp	r0, #0
   14adc:	popne	{r4, r5, fp, pc}
   14ae0:	cmp	r5, #0
   14ae4:	beq	14af4 <__mempcpy_chk@plt+0x3934>
   14ae8:	cmp	r4, #0
   14aec:	bne	14af4 <__mempcpy_chk@plt+0x3934>
   14af0:	pop	{r4, r5, fp, pc}
   14af4:	bl	14ea8 <__mempcpy_chk@plt+0x3ce8>
   14af8:	push	{fp, lr}
   14afc:	mov	fp, sp
   14b00:	cmp	r1, #0
   14b04:	orreq	r1, r1, #1
   14b08:	bl	15008 <__mempcpy_chk@plt+0x3e48>
   14b0c:	cmp	r0, #0
   14b10:	popne	{fp, pc}
   14b14:	bl	14ea8 <__mempcpy_chk@plt+0x3ce8>
   14b18:	push	{fp, lr}
   14b1c:	mov	fp, sp
   14b20:	clz	r3, r2
   14b24:	lsr	ip, r3, #5
   14b28:	clz	r3, r1
   14b2c:	lsr	r3, r3, #5
   14b30:	orrs	r3, r3, ip
   14b34:	movwne	r1, #1
   14b38:	movwne	r2, #1
   14b3c:	bl	153bc <__mempcpy_chk@plt+0x41fc>
   14b40:	cmp	r0, #0
   14b44:	popne	{fp, pc}
   14b48:	bl	14ea8 <__mempcpy_chk@plt+0x3ce8>
   14b4c:	push	{fp, lr}
   14b50:	mov	fp, sp
   14b54:	mov	r2, r1
   14b58:	mov	r1, r0
   14b5c:	mov	r0, #0
   14b60:	bl	153bc <__mempcpy_chk@plt+0x41fc>
   14b64:	cmp	r0, #0
   14b68:	popne	{fp, pc}
   14b6c:	bl	14ea8 <__mempcpy_chk@plt+0x3ce8>
   14b70:	mov	r2, r1
   14b74:	mov	r1, r0
   14b78:	mov	r0, #0
   14b7c:	b	14b18 <__mempcpy_chk@plt+0x3958>
   14b80:	mov	r2, #1
   14b84:	b	14b88 <__mempcpy_chk@plt+0x39c8>
   14b88:	push	{r4, r5, fp, lr}
   14b8c:	add	fp, sp, #8
   14b90:	ldr	r5, [r1]
   14b94:	mov	r4, r1
   14b98:	cmp	r0, #0
   14b9c:	beq	14bb4 <__mempcpy_chk@plt+0x39f4>
   14ba0:	mov	r1, #1
   14ba4:	add	r1, r1, r5, lsr #1
   14ba8:	adds	r5, r5, r1
   14bac:	bcc	14bcc <__mempcpy_chk@plt+0x3a0c>
   14bb0:	bl	14ea8 <__mempcpy_chk@plt+0x3ce8>
   14bb4:	cmp	r5, #0
   14bb8:	bne	14bcc <__mempcpy_chk@plt+0x3a0c>
   14bbc:	mov	r1, #64	; 0x40
   14bc0:	cmp	r2, #64	; 0x40
   14bc4:	udiv	r5, r1, r2
   14bc8:	addhi	r5, r5, #1
   14bcc:	mov	r1, r5
   14bd0:	bl	14a40 <__mempcpy_chk@plt+0x3880>
   14bd4:	str	r5, [r4]
   14bd8:	pop	{r4, r5, fp, pc}
   14bdc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14be0:	add	fp, sp, #24
   14be4:	ldr	r6, [r1]
   14be8:	mov	r8, r1
   14bec:	ldr	r4, [fp, #8]
   14bf0:	add	r1, r6, r6, asr #1
   14bf4:	cmp	r1, r6
   14bf8:	mvnvs	r1, #-2147483648	; 0x80000000
   14bfc:	cmp	r1, r3
   14c00:	mov	r5, r1
   14c04:	movgt	r5, r3
   14c08:	cmn	r3, #1
   14c0c:	movle	r5, r1
   14c10:	cmn	r4, #1
   14c14:	ble	14c34 <__mempcpy_chk@plt+0x3a74>
   14c18:	cmp	r4, #0
   14c1c:	beq	14c88 <__mempcpy_chk@plt+0x3ac8>
   14c20:	cmn	r5, #1
   14c24:	ble	14c5c <__mempcpy_chk@plt+0x3a9c>
   14c28:	mvn	r7, #-2147483648	; 0x80000000
   14c2c:	udiv	r1, r7, r4
   14c30:	b	14c50 <__mempcpy_chk@plt+0x3a90>
   14c34:	cmn	r5, #1
   14c38:	ble	14c78 <__mempcpy_chk@plt+0x3ab8>
   14c3c:	cmn	r4, #1
   14c40:	beq	14c88 <__mempcpy_chk@plt+0x3ac8>
   14c44:	mov	r1, #-2147483648	; 0x80000000
   14c48:	mvn	r7, #-2147483648	; 0x80000000
   14c4c:	sdiv	r1, r1, r4
   14c50:	cmp	r1, r5
   14c54:	bge	14c88 <__mempcpy_chk@plt+0x3ac8>
   14c58:	b	14c98 <__mempcpy_chk@plt+0x3ad8>
   14c5c:	beq	14c88 <__mempcpy_chk@plt+0x3ac8>
   14c60:	mov	r1, #-2147483648	; 0x80000000
   14c64:	mvn	r7, #-2147483648	; 0x80000000
   14c68:	sdiv	r1, r1, r5
   14c6c:	cmp	r1, r4
   14c70:	bge	14c88 <__mempcpy_chk@plt+0x3ac8>
   14c74:	b	14c98 <__mempcpy_chk@plt+0x3ad8>
   14c78:	mvn	r7, #-2147483648	; 0x80000000
   14c7c:	sdiv	r1, r7, r4
   14c80:	cmp	r5, r1
   14c84:	blt	14c98 <__mempcpy_chk@plt+0x3ad8>
   14c88:	mul	r1, r5, r4
   14c8c:	mov	r7, #64	; 0x40
   14c90:	cmp	r1, #63	; 0x3f
   14c94:	bgt	14ca0 <__mempcpy_chk@plt+0x3ae0>
   14c98:	sdiv	r5, r7, r4
   14c9c:	mul	r1, r5, r4
   14ca0:	cmp	r0, #0
   14ca4:	moveq	r7, #0
   14ca8:	streq	r7, [r8]
   14cac:	sub	r7, r5, r6
   14cb0:	cmp	r7, r2
   14cb4:	bge	14d58 <__mempcpy_chk@plt+0x3b98>
   14cb8:	add	r5, r6, r2
   14cbc:	mov	r2, #0
   14cc0:	mov	r1, #0
   14cc4:	cmp	r5, r3
   14cc8:	movwgt	r2, #1
   14ccc:	cmn	r3, #1
   14cd0:	movwgt	r1, #1
   14cd4:	cmp	r5, r6
   14cd8:	bvs	14d40 <__mempcpy_chk@plt+0x3b80>
   14cdc:	ands	r1, r1, r2
   14ce0:	bne	14d40 <__mempcpy_chk@plt+0x3b80>
   14ce4:	cmn	r4, #1
   14ce8:	ble	14d08 <__mempcpy_chk@plt+0x3b48>
   14cec:	cmp	r4, #0
   14cf0:	beq	14d54 <__mempcpy_chk@plt+0x3b94>
   14cf4:	cmn	r5, #1
   14cf8:	ble	14d2c <__mempcpy_chk@plt+0x3b6c>
   14cfc:	mvn	r1, #-2147483648	; 0x80000000
   14d00:	udiv	r1, r1, r4
   14d04:	b	14d20 <__mempcpy_chk@plt+0x3b60>
   14d08:	cmn	r5, #1
   14d0c:	ble	14d44 <__mempcpy_chk@plt+0x3b84>
   14d10:	cmn	r4, #1
   14d14:	beq	14d54 <__mempcpy_chk@plt+0x3b94>
   14d18:	mov	r1, #-2147483648	; 0x80000000
   14d1c:	sdiv	r1, r1, r4
   14d20:	cmp	r1, r5
   14d24:	bge	14d54 <__mempcpy_chk@plt+0x3b94>
   14d28:	b	14d40 <__mempcpy_chk@plt+0x3b80>
   14d2c:	beq	14d54 <__mempcpy_chk@plt+0x3b94>
   14d30:	mov	r1, #-2147483648	; 0x80000000
   14d34:	sdiv	r1, r1, r5
   14d38:	cmp	r1, r4
   14d3c:	bge	14d54 <__mempcpy_chk@plt+0x3b94>
   14d40:	bl	14ea8 <__mempcpy_chk@plt+0x3ce8>
   14d44:	mvn	r1, #-2147483648	; 0x80000000
   14d48:	sdiv	r1, r1, r4
   14d4c:	cmp	r5, r1
   14d50:	blt	14d40 <__mempcpy_chk@plt+0x3b80>
   14d54:	mul	r1, r5, r4
   14d58:	bl	14ac4 <__mempcpy_chk@plt+0x3904>
   14d5c:	str	r5, [r8]
   14d60:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14d64:	push	{fp, lr}
   14d68:	mov	fp, sp
   14d6c:	mov	r1, #1
   14d70:	bl	14f84 <__mempcpy_chk@plt+0x3dc4>
   14d74:	cmp	r0, #0
   14d78:	popne	{fp, pc}
   14d7c:	bl	14ea8 <__mempcpy_chk@plt+0x3ce8>
   14d80:	push	{fp, lr}
   14d84:	mov	fp, sp
   14d88:	bl	14f84 <__mempcpy_chk@plt+0x3dc4>
   14d8c:	cmp	r0, #0
   14d90:	popne	{fp, pc}
   14d94:	bl	14ea8 <__mempcpy_chk@plt+0x3ce8>
   14d98:	push	{fp, lr}
   14d9c:	mov	fp, sp
   14da0:	mov	r1, #1
   14da4:	bl	14f84 <__mempcpy_chk@plt+0x3dc4>
   14da8:	cmp	r0, #0
   14dac:	popne	{fp, pc}
   14db0:	bl	14ea8 <__mempcpy_chk@plt+0x3ce8>
   14db4:	push	{fp, lr}
   14db8:	mov	fp, sp
   14dbc:	bl	14f84 <__mempcpy_chk@plt+0x3dc4>
   14dc0:	cmp	r0, #0
   14dc4:	popne	{fp, pc}
   14dc8:	bl	14ea8 <__mempcpy_chk@plt+0x3ce8>
   14dcc:	push	{r4, r5, fp, lr}
   14dd0:	add	fp, sp, #8
   14dd4:	mov	r5, r0
   14dd8:	mov	r0, r1
   14ddc:	mov	r4, r1
   14de0:	bl	14fd8 <__mempcpy_chk@plt+0x3e18>
   14de4:	cmp	r0, #0
   14de8:	beq	14dfc <__mempcpy_chk@plt+0x3c3c>
   14dec:	mov	r1, r5
   14df0:	mov	r2, r4
   14df4:	pop	{r4, r5, fp, lr}
   14df8:	b	10f8c <memcpy@plt>
   14dfc:	bl	14ea8 <__mempcpy_chk@plt+0x3ce8>
   14e00:	push	{r4, r5, fp, lr}
   14e04:	add	fp, sp, #8
   14e08:	mov	r5, r0
   14e0c:	mov	r0, r1
   14e10:	mov	r4, r1
   14e14:	bl	14fd8 <__mempcpy_chk@plt+0x3e18>
   14e18:	cmp	r0, #0
   14e1c:	beq	14e30 <__mempcpy_chk@plt+0x3c70>
   14e20:	mov	r1, r5
   14e24:	mov	r2, r4
   14e28:	pop	{r4, r5, fp, lr}
   14e2c:	b	10f8c <memcpy@plt>
   14e30:	bl	14ea8 <__mempcpy_chk@plt+0x3ce8>
   14e34:	push	{r4, r5, fp, lr}
   14e38:	add	fp, sp, #8
   14e3c:	mov	r5, r0
   14e40:	add	r0, r1, #1
   14e44:	mov	r4, r1
   14e48:	bl	14fd8 <__mempcpy_chk@plt+0x3e18>
   14e4c:	cmp	r0, #0
   14e50:	beq	14e6c <__mempcpy_chk@plt+0x3cac>
   14e54:	mov	r1, #0
   14e58:	mov	r2, r4
   14e5c:	strb	r1, [r0, r4]
   14e60:	mov	r1, r5
   14e64:	pop	{r4, r5, fp, lr}
   14e68:	b	10f8c <memcpy@plt>
   14e6c:	bl	14ea8 <__mempcpy_chk@plt+0x3ce8>
   14e70:	push	{r4, r5, fp, lr}
   14e74:	add	fp, sp, #8
   14e78:	mov	r4, r0
   14e7c:	bl	110b8 <strlen@plt>
   14e80:	add	r5, r0, #1
   14e84:	mov	r0, r5
   14e88:	bl	14fd8 <__mempcpy_chk@plt+0x3e18>
   14e8c:	cmp	r0, #0
   14e90:	beq	14ea4 <__mempcpy_chk@plt+0x3ce4>
   14e94:	mov	r1, r4
   14e98:	mov	r2, r5
   14e9c:	pop	{r4, r5, fp, lr}
   14ea0:	b	10f8c <memcpy@plt>
   14ea4:	bl	14ea8 <__mempcpy_chk@plt+0x3ce8>
   14ea8:	push	{fp, lr}
   14eac:	mov	fp, sp
   14eb0:	movw	r0, #28932	; 0x7104
   14eb4:	movw	r1, #25328	; 0x62f0
   14eb8:	mov	r2, #5
   14ebc:	movt	r0, #2
   14ec0:	movt	r1, #1
   14ec4:	ldr	r4, [r0]
   14ec8:	mov	r0, #0
   14ecc:	bl	10fc8 <dcgettext@plt>
   14ed0:	movw	r2, #23387	; 0x5b5b
   14ed4:	mov	r3, r0
   14ed8:	mov	r0, r4
   14edc:	mov	r1, #0
   14ee0:	movt	r2, #1
   14ee4:	bl	11040 <error@plt>
   14ee8:	bl	111a8 <abort@plt>
   14eec:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14ef0:	add	fp, sp, #24
   14ef4:	sub	sp, sp, #8
   14ef8:	mov	r4, r3
   14efc:	mov	r8, r2
   14f00:	mov	r9, r1
   14f04:	mov	r5, r0
   14f08:	bl	110d0 <__errno_location@plt>
   14f0c:	mov	r6, #0
   14f10:	mov	r7, r0
   14f14:	add	r1, sp, #4
   14f18:	str	r6, [r0]
   14f1c:	mov	r0, r5
   14f20:	blx	r4
   14f24:	ldr	r0, [sp, #4]
   14f28:	cmp	r0, r5
   14f2c:	beq	14f6c <__mempcpy_chk@plt+0x3dac>
   14f30:	cmp	r9, #0
   14f34:	beq	14f54 <__mempcpy_chk@plt+0x3d94>
   14f38:	vcmp.f64	d0, #0.0
   14f3c:	vmrs	APSR_nzcv, fpscr
   14f40:	beq	14f68 <__mempcpy_chk@plt+0x3da8>
   14f44:	ldr	r1, [r7]
   14f48:	subs	r6, r1, #34	; 0x22
   14f4c:	movwne	r6, #1
   14f50:	b	14f6c <__mempcpy_chk@plt+0x3dac>
   14f54:	ldrb	r1, [r0]
   14f58:	mov	r6, #0
   14f5c:	cmp	r1, #0
   14f60:	bne	14f74 <__mempcpy_chk@plt+0x3db4>
   14f64:	b	14f38 <__mempcpy_chk@plt+0x3d78>
   14f68:	mov	r6, #1
   14f6c:	cmp	r9, #0
   14f70:	strne	r0, [r9]
   14f74:	vstr	d0, [r8]
   14f78:	mov	r0, r6
   14f7c:	sub	sp, fp, #24
   14f80:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14f84:	clz	r2, r1
   14f88:	clz	r3, r0
   14f8c:	lsr	r2, r2, #5
   14f90:	lsr	r3, r3, #5
   14f94:	orrs	r2, r3, r2
   14f98:	movwne	r1, #1
   14f9c:	movwne	r0, #1
   14fa0:	cmp	r1, #0
   14fa4:	beq	14fd4 <__mempcpy_chk@plt+0x3e14>
   14fa8:	mvn	r2, #-2147483648	; 0x80000000
   14fac:	udiv	r2, r2, r1
   14fb0:	cmp	r2, r0
   14fb4:	bcs	14fd4 <__mempcpy_chk@plt+0x3e14>
   14fb8:	push	{fp, lr}
   14fbc:	mov	fp, sp
   14fc0:	bl	110d0 <__errno_location@plt>
   14fc4:	mov	r1, #12
   14fc8:	str	r1, [r0]
   14fcc:	mov	r0, #0
   14fd0:	pop	{fp, pc}
   14fd4:	b	10f14 <calloc@plt>
   14fd8:	cmp	r0, #0
   14fdc:	movweq	r0, #1
   14fe0:	cmn	r0, #1
   14fe4:	ble	14fec <__mempcpy_chk@plt+0x3e2c>
   14fe8:	b	11058 <malloc@plt>
   14fec:	push	{fp, lr}
   14ff0:	mov	fp, sp
   14ff4:	bl	110d0 <__errno_location@plt>
   14ff8:	mov	r1, #12
   14ffc:	str	r1, [r0]
   15000:	mov	r0, #0
   15004:	pop	{fp, pc}
   15008:	push	{fp, lr}
   1500c:	mov	fp, sp
   15010:	cmp	r0, #0
   15014:	beq	15030 <__mempcpy_chk@plt+0x3e70>
   15018:	cmp	r1, #0
   1501c:	beq	1503c <__mempcpy_chk@plt+0x3e7c>
   15020:	cmn	r1, #1
   15024:	ble	15044 <__mempcpy_chk@plt+0x3e84>
   15028:	pop	{fp, lr}
   1502c:	b	10fd4 <realloc@plt>
   15030:	mov	r0, r1
   15034:	pop	{fp, lr}
   15038:	b	14fd8 <__mempcpy_chk@plt+0x3e18>
   1503c:	bl	12a5c <__mempcpy_chk@plt+0x189c>
   15040:	b	15050 <__mempcpy_chk@plt+0x3e90>
   15044:	bl	110d0 <__errno_location@plt>
   15048:	mov	r1, #12
   1504c:	str	r1, [r0]
   15050:	mov	r0, #0
   15054:	pop	{fp, pc}
   15058:	push	{r4, r5, r6, sl, fp, lr}
   1505c:	add	fp, sp, #16
   15060:	vpush	{d8}
   15064:	movw	r6, #29384	; 0x72c8
   15068:	mov	r5, r0
   1506c:	mov	r4, r1
   15070:	movt	r6, #2
   15074:	ldr	r0, [r6]
   15078:	cmp	r0, #0
   1507c:	bne	15098 <__mempcpy_chk@plt+0x3ed8>
   15080:	movw	r1, #24094	; 0x5e1e
   15084:	movw	r0, #8127	; 0x1fbf
   15088:	mov	r2, #0
   1508c:	movt	r1, #1
   15090:	bl	1116c <newlocale@plt>
   15094:	str	r0, [r6]
   15098:	ldr	r0, [r6]
   1509c:	cmp	r0, #0
   150a0:	beq	150e8 <__mempcpy_chk@plt+0x3f28>
   150a4:	bl	10f2c <uselocale@plt>
   150a8:	cmp	r0, #0
   150ac:	beq	150e8 <__mempcpy_chk@plt+0x3f28>
   150b0:	mov	r6, r0
   150b4:	mov	r0, r5
   150b8:	mov	r1, r4
   150bc:	bl	10fa4 <strtold@plt>
   150c0:	vorr	d8, d0, d0
   150c4:	bl	110d0 <__errno_location@plt>
   150c8:	ldr	r5, [r0]
   150cc:	mov	r4, r0
   150d0:	mov	r0, r6
   150d4:	bl	10f2c <uselocale@plt>
   150d8:	cmp	r0, #0
   150dc:	beq	15100 <__mempcpy_chk@plt+0x3f40>
   150e0:	str	r5, [r4]
   150e4:	b	150f4 <__mempcpy_chk@plt+0x3f34>
   150e8:	cmp	r4, #0
   150ec:	vmov.i32	d8, #0	; 0x00000000
   150f0:	strne	r5, [r4]
   150f4:	vorr	d0, d8, d8
   150f8:	vpop	{d8}
   150fc:	pop	{r4, r5, r6, sl, fp, pc}
   15100:	bl	111a8 <abort@plt>
   15104:	push	{r4, r5, r6, sl, fp, lr}
   15108:	add	fp, sp, #16
   1510c:	mov	r4, r0
   15110:	bl	1101c <__fpending@plt>
   15114:	mov	r5, r0
   15118:	mov	r0, r4
   1511c:	bl	11028 <ferror_unlocked@plt>
   15120:	mov	r6, r0
   15124:	mov	r0, r4
   15128:	bl	15184 <__mempcpy_chk@plt+0x3fc4>
   1512c:	cmp	r6, #0
   15130:	beq	15150 <__mempcpy_chk@plt+0x3f90>
   15134:	mvn	r4, #0
   15138:	cmp	r0, #0
   1513c:	bne	1517c <__mempcpy_chk@plt+0x3fbc>
   15140:	bl	110d0 <__errno_location@plt>
   15144:	mov	r1, #0
   15148:	str	r1, [r0]
   1514c:	b	1517c <__mempcpy_chk@plt+0x3fbc>
   15150:	cmp	r0, #0
   15154:	mov	r4, r0
   15158:	mvnne	r4, #0
   1515c:	cmp	r5, #0
   15160:	bne	1517c <__mempcpy_chk@plt+0x3fbc>
   15164:	cmp	r0, #0
   15168:	beq	1517c <__mempcpy_chk@plt+0x3fbc>
   1516c:	bl	110d0 <__errno_location@plt>
   15170:	ldr	r0, [r0]
   15174:	subs	r4, r0, #9
   15178:	mvnne	r4, #0
   1517c:	mov	r0, r4
   15180:	pop	{r4, r5, r6, sl, fp, pc}
   15184:	push	{r4, r5, r6, sl, fp, lr}
   15188:	add	fp, sp, #16
   1518c:	sub	sp, sp, #8
   15190:	mov	r4, r0
   15194:	bl	1110c <fileno@plt>
   15198:	cmn	r0, #1
   1519c:	ble	15210 <__mempcpy_chk@plt+0x4050>
   151a0:	mov	r0, r4
   151a4:	bl	11070 <__freading@plt>
   151a8:	cmp	r0, #0
   151ac:	beq	151d8 <__mempcpy_chk@plt+0x4018>
   151b0:	mov	r0, r4
   151b4:	bl	1110c <fileno@plt>
   151b8:	mov	r1, #1
   151bc:	mov	r2, #0
   151c0:	mov	r3, #0
   151c4:	str	r1, [sp]
   151c8:	bl	10ff8 <lseek64@plt>
   151cc:	and	r0, r0, r1
   151d0:	cmn	r0, #1
   151d4:	beq	15210 <__mempcpy_chk@plt+0x4050>
   151d8:	mov	r0, r4
   151dc:	bl	15220 <__mempcpy_chk@plt+0x4060>
   151e0:	cmp	r0, #0
   151e4:	beq	15210 <__mempcpy_chk@plt+0x4050>
   151e8:	bl	110d0 <__errno_location@plt>
   151ec:	ldr	r6, [r0]
   151f0:	mov	r5, r0
   151f4:	mov	r0, r4
   151f8:	bl	11130 <fclose@plt>
   151fc:	cmp	r6, #0
   15200:	strne	r6, [r5]
   15204:	mvnne	r0, #0
   15208:	sub	sp, fp, #16
   1520c:	pop	{r4, r5, r6, sl, fp, pc}
   15210:	mov	r0, r4
   15214:	sub	sp, fp, #16
   15218:	pop	{r4, r5, r6, sl, fp, lr}
   1521c:	b	11130 <fclose@plt>
   15220:	push	{r4, sl, fp, lr}
   15224:	add	fp, sp, #8
   15228:	sub	sp, sp, #8
   1522c:	mov	r4, r0
   15230:	cmp	r0, #0
   15234:	beq	1526c <__mempcpy_chk@plt+0x40ac>
   15238:	mov	r0, r4
   1523c:	bl	11070 <__freading@plt>
   15240:	cmp	r0, #0
   15244:	beq	1526c <__mempcpy_chk@plt+0x40ac>
   15248:	ldrb	r0, [r4, #1]
   1524c:	tst	r0, #1
   15250:	beq	1526c <__mempcpy_chk@plt+0x40ac>
   15254:	mov	r0, #1
   15258:	mov	r2, #0
   1525c:	mov	r3, #0
   15260:	str	r0, [sp]
   15264:	mov	r0, r4
   15268:	bl	1527c <__mempcpy_chk@plt+0x40bc>
   1526c:	mov	r0, r4
   15270:	sub	sp, fp, #8
   15274:	pop	{r4, sl, fp, lr}
   15278:	b	10f5c <fflush@plt>
   1527c:	push	{r4, r5, r6, r7, fp, lr}
   15280:	add	fp, sp, #16
   15284:	sub	sp, sp, #8
   15288:	mov	r4, r0
   1528c:	ldr	r0, [r0, #4]
   15290:	mov	r5, r3
   15294:	mov	r6, r2
   15298:	ldr	r1, [r4, #8]
   1529c:	cmp	r1, r0
   152a0:	bne	152bc <__mempcpy_chk@plt+0x40fc>
   152a4:	ldrd	r0, [r4, #16]
   152a8:	cmp	r1, r0
   152ac:	bne	152bc <__mempcpy_chk@plt+0x40fc>
   152b0:	ldr	r0, [r4, #36]	; 0x24
   152b4:	cmp	r0, #0
   152b8:	beq	152d4 <__mempcpy_chk@plt+0x4114>
   152bc:	mov	r0, r4
   152c0:	mov	r2, r6
   152c4:	mov	r3, r5
   152c8:	sub	sp, fp, #16
   152cc:	pop	{r4, r5, r6, r7, fp, lr}
   152d0:	b	1113c <fseeko64@plt>
   152d4:	ldr	r7, [fp, #8]
   152d8:	mov	r0, r4
   152dc:	bl	1110c <fileno@plt>
   152e0:	mov	r2, r6
   152e4:	mov	r3, r5
   152e8:	str	r7, [sp]
   152ec:	bl	10ff8 <lseek64@plt>
   152f0:	and	r2, r0, r1
   152f4:	cmn	r2, #1
   152f8:	beq	15314 <__mempcpy_chk@plt+0x4154>
   152fc:	strd	r0, [r4, #80]	; 0x50
   15300:	ldr	r0, [r4]
   15304:	bic	r0, r0, #16
   15308:	str	r0, [r4]
   1530c:	mov	r0, #0
   15310:	b	15318 <__mempcpy_chk@plt+0x4158>
   15314:	mvn	r0, #0
   15318:	sub	sp, fp, #16
   1531c:	pop	{r4, r5, r6, r7, fp, pc}
   15320:	push	{fp, lr}
   15324:	mov	fp, sp
   15328:	mov	r0, #14
   1532c:	bl	11160 <nl_langinfo@plt>
   15330:	movw	r1, #23785	; 0x5ce9
   15334:	cmp	r0, #0
   15338:	movt	r1, #1
   1533c:	movne	r1, r0
   15340:	movw	r0, #25345	; 0x6301
   15344:	ldrb	r2, [r1]
   15348:	movt	r0, #1
   1534c:	cmp	r2, #0
   15350:	movne	r0, r1
   15354:	pop	{fp, pc}
   15358:	push	{r4, r5, r6, r7, fp, lr}
   1535c:	add	fp, sp, #16
   15360:	sub	sp, sp, #8
   15364:	cmp	r0, #0
   15368:	add	r5, sp, #4
   1536c:	mov	r7, r2
   15370:	mov	r4, r1
   15374:	movne	r5, r0
   15378:	mov	r0, r5
   1537c:	bl	11034 <mbrtowc@plt>
   15380:	mov	r6, r0
   15384:	cmp	r7, #0
   15388:	beq	153b0 <__mempcpy_chk@plt+0x41f0>
   1538c:	cmn	r6, #2
   15390:	bcc	153b0 <__mempcpy_chk@plt+0x41f0>
   15394:	mov	r0, #0
   15398:	bl	153f8 <__mempcpy_chk@plt+0x4238>
   1539c:	cmp	r0, #0
   153a0:	bne	153b0 <__mempcpy_chk@plt+0x41f0>
   153a4:	ldrb	r0, [r4]
   153a8:	mov	r6, #1
   153ac:	str	r0, [r5]
   153b0:	mov	r0, r6
   153b4:	sub	sp, fp, #16
   153b8:	pop	{r4, r5, r6, r7, fp, pc}
   153bc:	cmp	r2, #0
   153c0:	beq	153f0 <__mempcpy_chk@plt+0x4230>
   153c4:	mvn	r3, #0
   153c8:	udiv	r3, r3, r2
   153cc:	cmp	r3, r1
   153d0:	bcs	153f0 <__mempcpy_chk@plt+0x4230>
   153d4:	push	{fp, lr}
   153d8:	mov	fp, sp
   153dc:	bl	110d0 <__errno_location@plt>
   153e0:	mov	r1, #12
   153e4:	str	r1, [r0]
   153e8:	mov	r0, #0
   153ec:	pop	{fp, pc}
   153f0:	mul	r1, r2, r1
   153f4:	b	15008 <__mempcpy_chk@plt+0x3e48>
   153f8:	push	{r4, sl, fp, lr}
   153fc:	add	fp, sp, #8
   15400:	sub	sp, sp, #264	; 0x108
   15404:	add	r1, sp, #7
   15408:	movw	r2, #257	; 0x101
   1540c:	bl	15464 <__mempcpy_chk@plt+0x42a4>
   15410:	mov	r4, #0
   15414:	cmp	r0, #0
   15418:	bne	15458 <__mempcpy_chk@plt+0x4298>
   1541c:	movw	r1, #24094	; 0x5e1e
   15420:	add	r0, sp, #7
   15424:	mov	r2, #2
   15428:	movt	r1, #1
   1542c:	bl	110ac <bcmp@plt>
   15430:	cmp	r0, #0
   15434:	beq	15458 <__mempcpy_chk@plt+0x4298>
   15438:	movw	r1, #25351	; 0x6307
   1543c:	add	r0, sp, #7
   15440:	mov	r2, #6
   15444:	movt	r1, #1
   15448:	bl	110ac <bcmp@plt>
   1544c:	cmp	r0, #0
   15450:	mov	r4, r0
   15454:	movwne	r4, #1
   15458:	mov	r0, r4
   1545c:	sub	sp, fp, #8
   15460:	pop	{r4, sl, fp, pc}
   15464:	push	{r4, r5, r6, r7, fp, lr}
   15468:	add	fp, sp, #16
   1546c:	mov	r4, r1
   15470:	mov	r1, #0
   15474:	mov	r6, r2
   15478:	bl	11148 <setlocale@plt>
   1547c:	cmp	r0, #0
   15480:	beq	154ac <__mempcpy_chk@plt+0x42ec>
   15484:	mov	r7, r0
   15488:	bl	110b8 <strlen@plt>
   1548c:	cmp	r0, r6
   15490:	bcs	154c0 <__mempcpy_chk@plt+0x4300>
   15494:	add	r2, r0, #1
   15498:	mov	r0, r4
   1549c:	mov	r1, r7
   154a0:	bl	10f8c <memcpy@plt>
   154a4:	mov	r5, #0
   154a8:	b	154e8 <__mempcpy_chk@plt+0x4328>
   154ac:	cmp	r6, #0
   154b0:	mov	r5, #22
   154b4:	movne	r0, #0
   154b8:	strbne	r0, [r4]
   154bc:	b	154e8 <__mempcpy_chk@plt+0x4328>
   154c0:	mov	r5, #34	; 0x22
   154c4:	cmp	r6, #0
   154c8:	beq	154e8 <__mempcpy_chk@plt+0x4328>
   154cc:	sub	r6, r6, #1
   154d0:	mov	r0, r4
   154d4:	mov	r1, r7
   154d8:	mov	r2, r6
   154dc:	bl	10f8c <memcpy@plt>
   154e0:	mov	r0, #0
   154e4:	strb	r0, [r4, r6]
   154e8:	mov	r0, r5
   154ec:	pop	{r4, r5, r6, r7, fp, pc}
   154f0:	mov	r1, #0
   154f4:	b	11148 <setlocale@plt>
   154f8:	vmov	d6, r0, r1
   154fc:	vldr	d7, [pc, #36]	; 15528 <__mempcpy_chk@plt+0x4368>
   15500:	vldr	d5, [pc, #40]	; 15530 <__mempcpy_chk@plt+0x4370>
   15504:	vmul.f64	d7, d6, d7
   15508:	vcvt.u32.f64	s14, d7
   1550c:	vcvt.f64.u32	d4, s14
   15510:	vmov	r1, s14
   15514:	vmls.f64	d6, d4, d5
   15518:	vcvt.u32.f64	s15, d6
   1551c:	vmov	r0, s15
   15520:	bx	lr
   15524:	nop			; (mov r0, r0)
   15528:	andeq	r0, r0, r0
   1552c:	ldclcc	0, cr0, [r0]
   15530:	andeq	r0, r0, r0
   15534:	mvnsmi	r0, r0
   15538:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1553c:	mov	r7, r0
   15540:	ldr	r6, [pc, #72]	; 15590 <__mempcpy_chk@plt+0x43d0>
   15544:	ldr	r5, [pc, #72]	; 15594 <__mempcpy_chk@plt+0x43d4>
   15548:	add	r6, pc, r6
   1554c:	add	r5, pc, r5
   15550:	sub	r6, r6, r5
   15554:	mov	r8, r1
   15558:	mov	r9, r2
   1555c:	bl	10ef4 <calloc@plt-0x20>
   15560:	asrs	r6, r6, #2
   15564:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15568:	mov	r4, #0
   1556c:	add	r4, r4, #1
   15570:	ldr	r3, [r5], #4
   15574:	mov	r2, r9
   15578:	mov	r1, r8
   1557c:	mov	r0, r7
   15580:	blx	r3
   15584:	cmp	r6, r4
   15588:	bne	1556c <__mempcpy_chk@plt+0x43ac>
   1558c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15590:			; <UNDEFINED> instruction: 0x000119bc
   15594:			; <UNDEFINED> instruction: 0x000119b4
   15598:	bx	lr
   1559c:	ldr	r3, [pc, #12]	; 155b0 <__mempcpy_chk@plt+0x43f0>
   155a0:	mov	r1, #0
   155a4:	add	r3, pc, r3
   155a8:	ldr	r2, [r3]
   155ac:	b	110e8 <__cxa_atexit@plt>
   155b0:	andeq	r1, r1, r0, asr fp

Disassembly of section .fini:

000155b4 <.fini>:
   155b4:	push	{r3, lr}
   155b8:	pop	{r3, pc}
