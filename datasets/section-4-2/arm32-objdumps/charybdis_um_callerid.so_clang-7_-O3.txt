
../repos/charybdis/modules/.libs/um_callerid.so:     file format elf32-littlearm


Disassembly of section .init:

000006cc <_init>:
 6cc:	push	{r3, lr}
 6d0:	bl	7a0 <call_weak_fn>
 6d4:	pop	{r3, pc}

Disassembly of section .plt:

000006d8 <.plt>:
 6d8:	push	{lr}		; (str lr, [sp, #-4]!)
 6dc:	ldr	lr, [pc, #4]	; 6e8 <.plt+0x10>
 6e0:	add	lr, pc, lr
 6e4:	ldr	pc, [lr, #8]!
 6e8:	.word	0x00011918

000006ec <delete_isupport@plt>:
 6ec:	add	ip, pc, #0, 12
 6f0:	add	ip, ip, #69632	; 0x11000
 6f4:	ldr	pc, [ip, #2328]!	; 0x918

000006f8 <rb_current_time@plt>:
 6f8:	add	ip, pc, #0, 12
 6fc:	add	ip, ip, #69632	; 0x11000
 700:	ldr	pc, [ip, #2320]!	; 0x910

00000704 <__cxa_finalize@plt>:
 704:	add	ip, pc, #0, 12
 708:	add	ip, ip, #69632	; 0x11000
 70c:	ldr	pc, [ip, #2312]!	; 0x908

00000710 <sendto_one@plt>:
 710:	add	ip, pc, #0, 12
 714:	add	ip, ip, #69632	; 0x11000
 718:	ldr	pc, [ip, #2304]!	; 0x900

0000071c <ierror@plt>:
 71c:	add	ip, pc, #0, 12
 720:	add	ip, ip, #69632	; 0x11000
 724:	ldr	pc, [ip, #2296]!	; 0x8f8

00000728 <find_umode_slot@plt>:
 728:	add	ip, pc, #0, 12
 72c:	add	ip, ip, #69632	; 0x11000
 730:	ldr	pc, [ip, #2288]!	; 0x8f0

00000734 <find_channel_membership@plt>:
 734:	add	ip, pc, #0, 12
 738:	add	ip, ip, #69632	; 0x11000
 73c:	ldr	pc, [ip, #2280]!	; 0x8e8

00000740 <__gmon_start__@plt>:
 740:	add	ip, pc, #0, 12
 744:	add	ip, ip, #69632	; 0x11000
 748:	ldr	pc, [ip, #2272]!	; 0x8e0

0000074c <rb_make_rb_dlink_node@plt>:
 74c:	add	ip, pc, #0, 12
 750:	add	ip, ip, #69632	; 0x11000
 754:	ldr	pc, [ip, #2264]!	; 0x8d8

00000758 <sendto_one_numeric@plt>:
 758:	add	ip, pc, #0, 12
 75c:	add	ip, ip, #69632	; 0x11000
 760:	ldr	pc, [ip, #2256]!	; 0x8d0

00000764 <snprintf@plt>:
 764:	add	ip, pc, #0, 12
 768:	add	ip, ip, #69632	; 0x11000
 76c:	ldr	pc, [ip, #2248]!	; 0x8c8

00000770 <add_isupport@plt>:
 770:	add	ip, pc, #0, 12
 774:	add	ip, ip, #69632	; 0x11000
 778:	ldr	pc, [ip, #2240]!	; 0x8c0

0000077c <privilegeset_in_set@plt>:
 77c:	add	ip, pc, #0, 12
 780:	add	ip, ip, #69632	; 0x11000
 784:	ldr	pc, [ip, #2232]!	; 0x8b8

00000788 <__assert_fail@plt>:
 788:	add	ip, pc, #0, 12
 78c:	add	ip, ip, #69632	; 0x11000
 790:	ldr	pc, [ip, #2224]!	; 0x8b0

00000794 <construct_umodebuf@plt>:
 794:	add	ip, pc, #0, 12
 798:	add	ip, ip, #69632	; 0x11000
 79c:	ldr	pc, [ip, #2216]!	; 0x8a8

Disassembly of section .text:

000007a0 <call_weak_fn>:
     7a0:	ldr	r3, [pc, #20]	; 7bc <call_weak_fn+0x1c>
     7a4:	ldr	r2, [pc, #20]	; 7c0 <call_weak_fn+0x20>
     7a8:	add	r3, pc, r3
     7ac:	ldr	r2, [r3, r2]
     7b0:	cmp	r2, #0
     7b4:	bxeq	lr
     7b8:	b	740 <__gmon_start__@plt>
     7bc:	.word	0x00011850
     7c0:	.word	0x00000058

000007c4 <deregister_tm_clones>:
     7c4:	ldr	r0, [pc, #44]	; 7f8 <deregister_tm_clones+0x34>
     7c8:	ldr	r3, [pc, #44]	; 7fc <deregister_tm_clones+0x38>
     7cc:	add	r0, pc, r0
     7d0:	add	r3, pc, r3
     7d4:	cmp	r3, r0
     7d8:	ldr	r3, [pc, #32]	; 800 <deregister_tm_clones+0x3c>
     7dc:	add	r3, pc, r3
     7e0:	bxeq	lr
     7e4:	ldr	r2, [pc, #24]	; 804 <deregister_tm_clones+0x40>
     7e8:	ldr	r3, [r3, r2]
     7ec:	cmp	r3, #0
     7f0:	bxeq	lr
     7f4:	bx	r3
     7f8:	.word	0x000118e4
     7fc:	.word	0x000118e0
     800:	.word	0x0001181c
     804:	.word	0x0000004c

00000808 <register_tm_clones>:
     808:	ldr	r0, [pc, #56]	; 848 <register_tm_clones+0x40>
     80c:	ldr	r3, [pc, #56]	; 84c <register_tm_clones+0x44>
     810:	add	r0, pc, r0
     814:	add	r3, pc, r3
     818:	sub	r1, r3, r0
     81c:	ldr	r3, [pc, #44]	; 850 <register_tm_clones+0x48>
     820:	asr	r1, r1, #2
     824:	add	r3, pc, r3
     828:	add	r1, r1, r1, lsr #31
     82c:	asrs	r1, r1, #1
     830:	bxeq	lr
     834:	ldr	r2, [pc, #24]	; 854 <register_tm_clones+0x4c>
     838:	ldr	r3, [r3, r2]
     83c:	cmp	r3, #0
     840:	bxeq	lr
     844:	bx	r3
     848:	.word	0x000118a0
     84c:	.word	0x0001189c
     850:	.word	0x000117d4
     854:	.word	0x0000005c

00000858 <__do_global_dtors_aux>:
     858:	ldr	r3, [pc, #76]	; 8ac <__do_global_dtors_aux+0x54>
     85c:	ldr	r2, [pc, #76]	; 8b0 <__do_global_dtors_aux+0x58>
     860:	add	r3, pc, r3
     864:	add	r2, pc, r2
     868:	ldrb	r3, [r3]
     86c:	cmp	r3, #0
     870:	bxne	lr
     874:	ldr	r3, [pc, #56]	; 8b4 <__do_global_dtors_aux+0x5c>
     878:	push	{r4, lr}
     87c:	ldr	r3, [r2, r3]
     880:	cmp	r3, #0
     884:	beq	894 <__do_global_dtors_aux+0x3c>
     888:	ldr	r3, [pc, #40]	; 8b8 <__do_global_dtors_aux+0x60>
     88c:	ldr	r0, [pc, r3]
     890:	bl	704 <__cxa_finalize@plt>
     894:	bl	7c4 <deregister_tm_clones>
     898:	ldr	r3, [pc, #28]	; 8bc <__do_global_dtors_aux+0x64>
     89c:	mov	r2, #1
     8a0:	add	r3, pc, r3
     8a4:	strb	r2, [r3]
     8a8:	pop	{r4, pc}
     8ac:	.word	0x00011850
     8b0:	.word	0x00011794
     8b4:	.word	0x00000048
     8b8:	.word	0x000117d4
     8bc:	.word	0x00011810

000008c0 <frame_dummy>:
     8c0:	b	808 <register_tm_clones>

000008c4 <um_callerid_modinit>:
     8c4:	push	{r4, sl, fp, lr}
     8c8:	add	fp, sp, #8
     8cc:	bl	728 <find_umode_slot@plt>
     8d0:	ldr	r4, [pc, #116]	; 94c <um_callerid_modinit+0x88>
     8d4:	cmp	r0, #0
     8d8:	ldr	r4, [pc, r4]
     8dc:	str	r0, [r4, #412]	; 0x19c
     8e0:	beq	91c <um_callerid_modinit+0x58>
     8e4:	bl	728 <find_umode_slot@plt>
     8e8:	cmp	r0, #0
     8ec:	str	r0, [r4, #284]	; 0x11c
     8f0:	beq	930 <um_callerid_modinit+0x6c>
     8f4:	bl	794 <construct_umodebuf@plt>
     8f8:	ldr	r1, [pc, #88]	; 958 <um_callerid_modinit+0x94>
     8fc:	ldr	r1, [pc, r1]
     900:	ldr	r0, [pc, #84]	; 95c <um_callerid_modinit+0x98>
     904:	ldr	r2, [pc, #84]	; 960 <um_callerid_modinit+0x9c>
     908:	add	r0, pc, r0
     90c:	add	r2, pc, r2
     910:	bl	770 <add_isupport@plt>
     914:	mov	r0, #0
     918:	pop	{r4, sl, fp, pc}
     91c:	ldr	r0, [pc, #44]	; 950 <um_callerid_modinit+0x8c>
     920:	add	r0, pc, r0
     924:	bl	71c <ierror@plt>
     928:	mvn	r0, #0
     92c:	pop	{r4, sl, fp, pc}
     930:	mov	r0, #0
     934:	str	r0, [r4, #412]	; 0x19c
     938:	ldr	r0, [pc, #20]	; 954 <um_callerid_modinit+0x90>
     93c:	add	r0, pc, r0
     940:	bl	71c <ierror@plt>
     944:	mvn	r0, #0
     948:	pop	{r4, sl, fp, pc}
     94c:	.word	0x00011774
     950:	.word	0x00000736
     954:	.word	0x00000762
     958:	.word	0x0001174c
     95c:	.word	0x000007de
     960:	.word	0x00000820

00000964 <um_callerid_moddeinit>:
     964:	push	{fp, lr}
     968:	mov	fp, sp
     96c:	ldr	r0, [pc, #32]	; 994 <um_callerid_moddeinit+0x30>
     970:	mov	r1, #0
     974:	ldr	r0, [pc, r0]
     978:	str	r1, [r0, #284]	; 0x11c
     97c:	str	r1, [r0, #412]	; 0x19c
     980:	bl	794 <construct_umodebuf@plt>
     984:	ldr	r0, [pc, #12]	; 998 <um_callerid_moddeinit+0x34>
     988:	add	r0, pc, r0
     98c:	pop	{fp, lr}
     990:	b	6ec <delete_isupport@plt>
     994:	.word	0x000116d8
     998:	.word	0x0000075e

0000099c <h_hdl_invite>:
     99c:	push	{r4, r5, r6, sl, fp, lr}
     9a0:	add	fp, sp, #16
     9a4:	sub	sp, sp, #8
     9a8:	mov	r4, r0
     9ac:	ldr	r0, [r0, #16]
     9b0:	cmp	r0, #0
     9b4:	bne	a54 <h_hdl_invite+0xb8>
     9b8:	ldr	r6, [r4]
     9bc:	ldr	r5, [r4, #12]
     9c0:	mov	r0, #1
     9c4:	mov	r1, r6
     9c8:	mov	r2, r5
     9cc:	bl	c08 <add_callerid_accept_for_source>
     9d0:	cmp	r0, #0
     9d4:	moveq	r0, #716	; 0x2cc
     9d8:	streq	r0, [r4, #16]
     9dc:	subeq	sp, fp, #16
     9e0:	popeq	{r4, r5, r6, sl, fp, pc}
     9e4:	mov	r0, r6
     9e8:	mov	r1, r5
     9ec:	bl	ea0 <allow_message>
     9f0:	cmp	r0, #0
     9f4:	bne	a54 <h_hdl_invite+0xb8>
     9f8:	ldr	r0, [r5, #56]	; 0x38
     9fc:	ldr	r1, [pc, #88]	; a5c <h_hdl_invite+0xc0>
     a00:	ldr	r1, [pc, r1]
     a04:	ldr	r1, [r1, #412]	; 0x19c
     a08:	ldr	r2, [pc, #80]	; a60 <h_hdl_invite+0xc4>
     a0c:	ldr	r3, [pc, #80]	; a64 <h_hdl_invite+0xc8>
     a10:	and	r0, r1, r0
     a14:	add	r2, pc, r2
     a18:	add	r3, pc, r3
     a1c:	cmp	r0, r1
     a20:	mov	r1, #512	; 0x200
     a24:	moveq	r3, r2
     a28:	str	r3, [sp]
     a2c:	add	r3, r5, #88	; 0x58
     a30:	ldr	r5, [pc, #48]	; a68 <h_hdl_invite+0xcc>
     a34:	ldr	r2, [pc, #48]	; a6c <h_hdl_invite+0xd0>
     a38:	add	r5, pc, r5
     a3c:	add	r2, pc, r2
     a40:	mov	r0, r5
     a44:	bl	764 <snprintf@plt>
     a48:	mov	r0, #716	; 0x2cc
     a4c:	str	r0, [r4, #16]
     a50:	str	r5, [r4, #28]
     a54:	sub	sp, fp, #16
     a58:	pop	{r4, r5, r6, sl, fp, pc}
     a5c:	.word	0x0001164c
     a60:	.word	0x00000717
     a64:	.word	0x00000716
     a68:	.word	0x00011679
     a6c:	.word	0x000006c7

00000a70 <h_hdl_privmsg_user>:
     a70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     a74:	add	fp, sp, #28
     a78:	sub	sp, sp, #20
     a7c:	mov	r4, r0
     a80:	ldr	r0, [r0, #16]
     a84:	cmp	r0, #0
     a88:	bne	adc <h_hdl_privmsg_user+0x6c>
     a8c:	ldr	r7, [r4]
     a90:	ldr	r6, [r4, #4]
     a94:	ldr	r5, [r4, #8]
     a98:	mov	r0, r7
     a9c:	mov	r1, r6
     aa0:	mov	r2, r5
     aa4:	bl	c08 <add_callerid_accept_for_source>
     aa8:	cmp	r0, #0
     aac:	beq	ad4 <h_hdl_privmsg_user+0x64>
     ab0:	mov	r0, r6
     ab4:	mov	r1, r5
     ab8:	bl	ea0 <allow_message>
     abc:	cmp	r0, #0
     ac0:	bne	adc <h_hdl_privmsg_user+0x6c>
     ac4:	ldrb	r0, [r5, #65]	; 0x41
     ac8:	tst	r0, #32
     acc:	cmpne	r7, #0
     ad0:	bne	ae4 <h_hdl_privmsg_user+0x74>
     ad4:	mov	r0, #716	; 0x2cc
     ad8:	str	r0, [r4, #16]
     adc:	sub	sp, fp, #28
     ae0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     ae4:	ldrh	r0, [r5, #80]	; 0x50
     ae8:	cmp	r0, #64	; 0x40
     aec:	bne	ad4 <h_hdl_privmsg_user+0x64>
     af0:	ldr	r0, [r5, #56]	; 0x38
     af4:	ldr	sl, [pc, #232]	; be4 <h_hdl_privmsg_user+0x174>
     af8:	add	r8, r5, #88	; 0x58
     afc:	mov	r3, r8
     b00:	ldr	sl, [pc, sl]
     b04:	ldr	r1, [sl, #412]	; 0x19c
     b08:	ldr	r2, [pc, #216]	; be8 <h_hdl_privmsg_user+0x178>
     b0c:	ldr	r7, [pc, #216]	; bec <h_hdl_privmsg_user+0x17c>
     b10:	and	r0, r1, r0
     b14:	add	r7, pc, r7
     b18:	add	r2, pc, r2
     b1c:	cmp	r0, r1
     b20:	mov	r0, r7
     b24:	mov	r1, #716	; 0x2cc
     b28:	moveq	r0, r2
     b2c:	str	r0, [sp]
     b30:	mov	r0, r6
     b34:	ldr	r2, [pc, #180]	; bf0 <h_hdl_privmsg_user+0x180>
     b38:	add	r2, pc, r2
     b3c:	bl	758 <sendto_one_numeric@plt>
     b40:	ldr	r0, [pc, #172]	; bf4 <h_hdl_privmsg_user+0x184>
     b44:	ldr	r0, [pc, r0]
     b48:	ldr	r1, [r5, #432]	; 0x1b0
     b4c:	ldr	r0, [r0, #232]	; 0xe8
     b50:	ldr	r1, [r1, #40]	; 0x28
     b54:	add	r9, r0, r1
     b58:	bl	6f8 <rb_current_time@plt>
     b5c:	cmp	r9, r0
     b60:	bge	ad4 <h_hdl_privmsg_user+0x64>
     b64:	ldr	r2, [pc, #140]	; bf8 <h_hdl_privmsg_user+0x188>
     b68:	mov	r0, r6
     b6c:	movw	r1, #717	; 0x2cd
     b70:	mov	r3, r8
     b74:	add	r2, pc, r2
     b78:	bl	758 <sendto_one_numeric@plt>
     b7c:	ldr	r0, [r5, #56]	; 0x38
     b80:	ldr	r1, [sl, #412]	; 0x19c
     b84:	add	r2, r6, #163	; 0xa3
     b88:	add	r3, r6, #152	; 0x98
     b8c:	add	r6, r6, #88	; 0x58
     b90:	and	r0, r1, r0
     b94:	cmp	r0, r1
     b98:	ldr	r0, [pc, #92]	; bfc <h_hdl_privmsg_user+0x18c>
     b9c:	str	r3, [sp, #4]
     ba0:	str	r6, [sp]
     ba4:	str	r2, [sp, #8]
     ba8:	mov	r3, r8
     bac:	add	r0, pc, r0
     bb0:	moveq	r7, r0
     bb4:	str	r7, [sp, #12]
     bb8:	ldr	r0, [pc, #64]	; c00 <h_hdl_privmsg_user+0x190>
     bbc:	ldr	r0, [pc, r0]
     bc0:	ldr	r1, [pc, #60]	; c04 <h_hdl_privmsg_user+0x194>
     bc4:	add	r2, r0, #88	; 0x58
     bc8:	add	r1, pc, r1
     bcc:	mov	r0, r5
     bd0:	bl	710 <sendto_one@plt>
     bd4:	bl	6f8 <rb_current_time@plt>
     bd8:	ldr	r1, [r5, #432]	; 0x1b0
     bdc:	str	r0, [r1, #40]	; 0x28
     be0:	b	ad4 <h_hdl_privmsg_user+0x64>
     be4:	.word	0x0001154c
     be8:	.word	0x00000613
     bec:	.word	0x0000061a
     bf0:	.word	0x000005cb
     bf4:	.word	0x00011518
     bf8:	.word	0x000006af
     bfc:	.word	0x0000057f
     c00:	.word	0x0001149c
     c04:	.word	0x00000689

00000c08 <add_callerid_accept_for_source>:
     c08:	push	{r4, r5, r6, r7, fp, lr}
     c0c:	add	fp, sp, #16
     c10:	sub	sp, sp, #8
     c14:	mov	r6, r1
     c18:	ldrb	r1, [r1, #65]	; 0x41
     c1c:	mov	r4, #1
     c20:	tst	r1, #32
     c24:	cmpne	r0, #0
     c28:	bne	c38 <add_callerid_accept_for_source+0x30>
     c2c:	mov	r0, r4
     c30:	sub	sp, fp, #16
     c34:	pop	{r4, r5, r6, r7, fp, pc}
     c38:	ldrh	r0, [r6, #80]	; 0x50
     c3c:	cmp	r0, #64	; 0x40
     c40:	bne	c2c <add_callerid_accept_for_source+0x24>
     c44:	ldr	r0, [r6, #56]	; 0x38
     c48:	ldr	r7, [pc, #544]	; e70 <add_callerid_accept_for_source+0x268>
     c4c:	mov	r5, r2
     c50:	ldr	r7, [pc, r7]
     c54:	ldr	r1, [r7, #412]	; 0x19c
     c58:	and	r2, r1, r0
     c5c:	cmp	r2, r1
     c60:	bne	c70 <add_callerid_accept_for_source+0x68>
     c64:	cmp	r5, r6
     c68:	bne	c88 <add_callerid_accept_for_source+0x80>
     c6c:	b	c2c <add_callerid_accept_for_source+0x24>
     c70:	cmp	r5, r6
     c74:	beq	c2c <add_callerid_accept_for_source+0x24>
     c78:	ldr	r1, [r7, #284]	; 0x11c
     c7c:	and	r0, r1, r0
     c80:	cmp	r0, r1
     c84:	bne	c2c <add_callerid_accept_for_source+0x24>
     c88:	cmp	r5, #0
     c8c:	beq	e30 <add_callerid_accept_for_source+0x228>
     c90:	ldr	r0, [r6, #432]	; 0x1b0
     c94:	ldr	r0, [r0, #316]	; 0x13c
     c98:	cmp	r0, #0
     c9c:	bne	cb0 <add_callerid_accept_for_source+0xa8>
     ca0:	b	cc0 <add_callerid_accept_for_source+0xb8>
     ca4:	ldr	r0, [r0, #8]
     ca8:	cmp	r0, #0
     cac:	beq	cc0 <add_callerid_accept_for_source+0xb8>
     cb0:	ldr	r1, [r0]
     cb4:	cmp	r1, r5
     cb8:	bne	ca4 <add_callerid_accept_for_source+0x9c>
     cbc:	b	c2c <add_callerid_accept_for_source+0x24>
     cc0:	ldr	r0, [r5, #24]
     cc4:	cmp	r0, #0
     cc8:	ldrne	r0, [r0, #36]	; 0x24
     ccc:	cmpne	r0, #0
     cd0:	bne	d88 <add_callerid_accept_for_source+0x180>
     cd4:	ldr	r0, [r5, #56]	; 0x38
     cd8:	tst	r0, #4096	; 0x1000
     cdc:	ldrne	r1, [r5, #24]
     ce0:	cmpne	r1, #0
     ce4:	bne	da0 <add_callerid_accept_for_source+0x198>
     ce8:	ldr	r1, [pc, #392]	; e78 <add_callerid_accept_for_source+0x270>
     cec:	ldr	r1, [pc, r1]
     cf0:	ldr	r2, [r6, #432]	; 0x1b0
     cf4:	ldr	r1, [r1, #96]	; 0x60
     cf8:	ldr	r2, [r2, #324]	; 0x144
     cfc:	cmp	r2, r1
     d00:	bcs	d3c <add_callerid_accept_for_source+0x134>
     d04:	bl	74c <rb_make_rb_dlink_node@plt>
     d08:	cmp	r0, #0
     d0c:	beq	e50 <add_callerid_accept_for_source+0x248>
     d10:	ldr	r1, [r6, #432]	; 0x1b0
     d14:	mov	r2, #0
     d18:	str	r2, [r0, #4]
     d1c:	str	r5, [r0]
     d20:	ldr	r2, [r1, #316]	; 0x13c
     d24:	cmp	r2, #0
     d28:	str	r2, [r0, #8]
     d2c:	beq	db0 <add_callerid_accept_for_source+0x1a8>
     d30:	add	r2, r2, #4
     d34:	str	r0, [r2]
     d38:	b	dc0 <add_callerid_accept_for_source+0x1b8>
     d3c:	ldr	r1, [r7, #412]	; 0x19c
     d40:	ldr	r2, [pc, #308]	; e7c <add_callerid_accept_for_source+0x274>
     d44:	ldr	r3, [pc, #308]	; e80 <add_callerid_accept_for_source+0x278>
     d48:	and	r0, r1, r0
     d4c:	add	r2, pc, r2
     d50:	add	r3, pc, r3
     d54:	cmp	r0, r1
     d58:	mov	r0, r6
     d5c:	movw	r1, #494	; 0x1ee
     d60:	moveq	r3, r2
     d64:	str	r3, [sp]
     d68:	add	r3, r5, #88	; 0x58
     d6c:	ldr	r2, [pc, #272]	; e84 <add_callerid_accept_for_source+0x27c>
     d70:	add	r2, pc, r2
     d74:	bl	758 <sendto_one_numeric@plt>
     d78:	mov	r4, #0
     d7c:	mov	r0, r4
     d80:	sub	sp, fp, #16
     d84:	pop	{r4, r5, r6, r7, fp, pc}
     d88:	ldr	r1, [pc, #228]	; e74 <add_callerid_accept_for_source+0x26c>
     d8c:	add	r1, pc, r1
     d90:	bl	77c <privilegeset_in_set@plt>
     d94:	cmp	r0, #0
     d98:	bne	c2c <add_callerid_accept_for_source+0x24>
     d9c:	b	cd4 <add_callerid_accept_for_source+0xcc>
     da0:	ldr	r1, [r1, #36]	; 0x24
     da4:	cmp	r1, #0
     da8:	bne	ce8 <add_callerid_accept_for_source+0xe0>
     dac:	b	c2c <add_callerid_accept_for_source+0x24>
     db0:	mov	r2, r1
     db4:	ldr	r3, [r2, #320]!	; 0x140
     db8:	cmp	r3, #0
     dbc:	streq	r0, [r2]
     dc0:	str	r0, [r1, #316]	; 0x13c
     dc4:	ldr	r0, [r1, #324]	; 0x144
     dc8:	add	r0, r0, #1
     dcc:	str	r0, [r1, #324]	; 0x144
     dd0:	bl	74c <rb_make_rb_dlink_node@plt>
     dd4:	cmp	r0, #0
     dd8:	beq	e50 <add_callerid_accept_for_source+0x248>
     ddc:	mov	r1, #0
     de0:	str	r1, [r0, #4]
     de4:	str	r6, [r0]
     de8:	ldr	r1, [r5, #408]	; 0x198
     dec:	cmp	r1, #0
     df0:	str	r1, [r0, #8]
     df4:	beq	e04 <add_callerid_accept_for_source+0x1fc>
     df8:	add	r1, r1, #4
     dfc:	str	r0, [r1]
     e00:	b	e14 <add_callerid_accept_for_source+0x20c>
     e04:	mov	r1, r5
     e08:	ldr	r2, [r1, #412]!	; 0x19c
     e0c:	cmp	r2, #0
     e10:	streq	r0, [r1]
     e14:	str	r0, [r5, #408]	; 0x198
     e18:	ldr	r0, [r5, #416]	; 0x1a0
     e1c:	add	r0, r0, #1
     e20:	str	r0, [r5, #416]	; 0x1a0
     e24:	mov	r0, r4
     e28:	sub	sp, fp, #16
     e2c:	pop	{r4, r5, r6, r7, fp, pc}
     e30:	ldr	r0, [pc, #80]	; e88 <add_callerid_accept_for_source+0x280>
     e34:	ldr	r1, [pc, #80]	; e8c <add_callerid_accept_for_source+0x284>
     e38:	ldr	r3, [pc, #80]	; e90 <add_callerid_accept_for_source+0x288>
     e3c:	movw	r2, #311	; 0x137
     e40:	add	r0, pc, r0
     e44:	add	r1, pc, r1
     e48:	add	r3, pc, r3
     e4c:	bl	788 <__assert_fail@plt>
     e50:	ldr	r0, [pc, #60]	; e94 <add_callerid_accept_for_source+0x28c>
     e54:	ldr	r1, [pc, #60]	; e98 <add_callerid_accept_for_source+0x290>
     e58:	ldr	r3, [pc, #60]	; e9c <add_callerid_accept_for_source+0x294>
     e5c:	mov	r2, #144	; 0x90
     e60:	add	r0, pc, r0
     e64:	add	r1, pc, r1
     e68:	add	r3, pc, r3
     e6c:	bl	788 <__assert_fail@plt>
     e70:	.word	0x000113fc
     e74:	.word	0x000003a5
     e78:	.word	0x00011370
     e7c:	.word	0x000003df
     e80:	.word	0x000003de
     e84:	.word	0x000003ce
     e88:	.word	0x00000391
     e8c:	.word	0x0000033c
     e90:	.word	0x00000354
     e94:	.word	0x000003b9
     e98:	.word	0x0000031c
     e9c:	.word	0x00000376

00000ea0 <allow_message>:
     ea0:	push	{r4, r5, r6, r7, fp, lr}
     ea4:	add	fp, sp, #16
     ea8:	mov	r4, r0
     eac:	ldrb	r0, [r1, #65]	; 0x41
     eb0:	tst	r0, #32
     eb4:	beq	f5c <allow_message+0xbc>
     eb8:	ldrh	r0, [r1, #80]	; 0x50
     ebc:	mov	r5, r1
     ec0:	cmp	r0, #64	; 0x40
     ec4:	bne	f5c <allow_message+0xbc>
     ec8:	ldr	r2, [r5, #56]	; 0x38
     ecc:	ldr	r6, [pc, #300]	; 1000 <allow_message+0x160>
     ed0:	ldr	r6, [pc, r6]
     ed4:	ldr	r0, [r6, #284]	; 0x11c
     ed8:	ldr	r3, [r6, #412]	; 0x19c
     edc:	and	r1, r0, r2
     ee0:	and	r2, r3, r2
     ee4:	cmp	r2, r3
     ee8:	cmpne	r1, r0
     eec:	bne	f5c <allow_message+0xbc>
     ef0:	cmp	r1, r0
     ef4:	bne	f50 <allow_message+0xb0>
     ef8:	ldr	r0, [r4, #24]
     efc:	ldr	r7, [r0]
     f00:	cmp	r7, #0
     f04:	bne	f18 <allow_message+0x78>
     f08:	b	f50 <allow_message+0xb0>
     f0c:	ldr	r7, [r7, #8]
     f10:	cmp	r7, #0
     f14:	beq	f50 <allow_message+0xb0>
     f18:	ldr	r0, [r5, #24]
     f1c:	cmp	r0, #0
     f20:	beq	f0c <allow_message+0x6c>
     f24:	ldr	r0, [r7]
     f28:	mov	r1, r5
     f2c:	ldr	r0, [r0, #36]	; 0x24
     f30:	bl	734 <find_channel_membership@plt>
     f34:	cmp	r0, #0
     f38:	beq	f0c <allow_message+0x6c>
     f3c:	ldr	r0, [r5, #56]	; 0x38
     f40:	ldr	r1, [r6, #412]	; 0x19c
     f44:	and	r0, r1, r0
     f48:	cmp	r0, r1
     f4c:	bne	f5c <allow_message+0xbc>
     f50:	ldrh	r0, [r4, #80]	; 0x50
     f54:	cmp	r0, #32
     f58:	bne	f64 <allow_message+0xc4>
     f5c:	mov	r0, #1
     f60:	pop	{r4, r5, r6, r7, fp, pc}
     f64:	ldr	r0, [r4, #24]
     f68:	cmp	r0, #0
     f6c:	ldrne	r0, [r0, #36]	; 0x24
     f70:	cmpne	r0, #0
     f74:	bne	f98 <allow_message+0xf8>
     f78:	ldrb	r0, [r4, #57]	; 0x39
     f7c:	tst	r0, #16
     f80:	ldrne	r0, [r4, #24]
     f84:	cmpne	r0, #0
     f88:	bne	fb0 <allow_message+0x110>
     f8c:	cmp	r4, r5
     f90:	bne	fc0 <allow_message+0x120>
     f94:	b	f5c <allow_message+0xbc>
     f98:	ldr	r1, [pc, #100]	; 1004 <allow_message+0x164>
     f9c:	add	r1, pc, r1
     fa0:	bl	77c <privilegeset_in_set@plt>
     fa4:	cmp	r0, #0
     fa8:	bne	f5c <allow_message+0xbc>
     fac:	b	f78 <allow_message+0xd8>
     fb0:	cmp	r4, r5
     fb4:	ldrne	r0, [r0, #36]	; 0x24
     fb8:	cmpne	r0, #0
     fbc:	beq	f5c <allow_message+0xbc>
     fc0:	ldr	r0, [r5, #432]	; 0x1b0
     fc4:	ldr	r1, [r0, #316]	; 0x13c
     fc8:	mov	r0, #0
     fcc:	cmp	r1, #0
     fd0:	bne	fe4 <allow_message+0x144>
     fd4:	b	ff4 <allow_message+0x154>
     fd8:	ldr	r1, [r1, #8]
     fdc:	cmp	r1, #0
     fe0:	beq	ff4 <allow_message+0x154>
     fe4:	ldr	r2, [r1]
     fe8:	cmp	r2, r4
     fec:	bne	fd8 <allow_message+0x138>
     ff0:	mov	r0, r1
     ff4:	cmp	r0, #0
     ff8:	movwne	r0, #1
     ffc:	pop	{r4, r5, r6, r7, fp, pc}
    1000:	.word	0x0001117c
    1004:	.word	0x00000195

Disassembly of section .fini:

00001008 <_fini>:
    1008:	push	{r3, lr}
    100c:	pop	{r3, pc}
