
../repos/coreutils/src/mknod:     file format elf32-littlearm


Disassembly of section .init:

000117c0 <.init>:
   117c0:	push	{r3, lr}
   117c4:	bl	11c7c <__assert_fail@plt+0x4c>
   117c8:	pop	{r3, pc}

Disassembly of section .plt:

000117cc <fstatfs64@plt-0x14>:
   117cc:	push	{lr}		; (str lr, [sp, #-4]!)
   117d0:	ldr	lr, [pc, #4]	; 117dc <fstatfs64@plt-0x4>
   117d4:	add	lr, pc, lr
   117d8:	ldr	pc, [lr, #8]!
   117dc:	andeq	sl, r1, r4, lsr #16

000117e0 <fstatfs64@plt>:
   117e0:	add	ip, pc, #0, 12
   117e4:	add	ip, ip, #106496	; 0x1a000
   117e8:	ldr	pc, [ip, #2084]!	; 0x824

000117ec <selabel_lookup@plt>:
   117ec:	add	ip, pc, #0, 12
   117f0:	add	ip, ip, #106496	; 0x1a000
   117f4:	ldr	pc, [ip, #2076]!	; 0x81c

000117f8 <calloc@plt>:
   117f8:	add	ip, pc, #0, 12
   117fc:	add	ip, ip, #106496	; 0x1a000
   11800:	ldr	pc, [ip, #2068]!	; 0x814

00011804 <fputs_unlocked@plt>:
   11804:	add	ip, pc, #0, 12
   11808:	add	ip, ip, #106496	; 0x1a000
   1180c:	ldr	pc, [ip, #2060]!	; 0x80c

00011810 <raise@plt>:
   11810:	add	ip, pc, #0, 12
   11814:	add	ip, ip, #106496	; 0x1a000
   11818:	ldr	pc, [ip, #2052]!	; 0x804

0001181c <is_selinux_enabled@plt>:
   1181c:	add	ip, pc, #0, 12
   11820:	add	ip, ip, #106496	; 0x1a000
   11824:	ldr	pc, [ip, #2044]!	; 0x7fc

00011828 <strcmp@plt>:
   11828:	add	ip, pc, #0, 12
   1182c:	add	ip, ip, #106496	; 0x1a000
   11830:	ldr	pc, [ip, #2036]!	; 0x7f4

00011834 <gnu_dev_makedev@plt>:
   11834:	add	ip, pc, #0, 12
   11838:	add	ip, ip, #106496	; 0x1a000
   1183c:	ldr	pc, [ip, #2028]!	; 0x7ec

00011840 <context_type_get@plt>:
   11840:	add	ip, pc, #0, 12
   11844:	add	ip, ip, #106496	; 0x1a000
   11848:	ldr	pc, [ip, #2020]!	; 0x7e4

0001184c <fflush@plt>:
   1184c:	add	ip, pc, #0, 12
   11850:	add	ip, ip, #106496	; 0x1a000
   11854:	ldr	pc, [ip, #2012]!	; 0x7dc

00011858 <lsetfilecon@plt>:
   11858:	add	ip, pc, #0, 12
   1185c:	add	ip, ip, #106496	; 0x1a000
   11860:	ldr	pc, [ip, #2004]!	; 0x7d4

00011864 <memmove@plt>:
   11864:	add	ip, pc, #0, 12
   11868:	add	ip, ip, #106496	; 0x1a000
   1186c:	ldr	pc, [ip, #1996]!	; 0x7cc

00011870 <free@plt>:
   11870:	add	ip, pc, #0, 12
   11874:	add	ip, ip, #106496	; 0x1a000
   11878:	ldr	pc, [ip, #1988]!	; 0x7c4

0001187c <faccessat@plt>:
   1187c:	add	ip, pc, #0, 12
   11880:	add	ip, ip, #106496	; 0x1a000
   11884:	ldr	pc, [ip, #1980]!	; 0x7bc

00011888 <_exit@plt>:
   11888:	add	ip, pc, #0, 12
   1188c:	add	ip, ip, #106496	; 0x1a000
   11890:	ldr	pc, [ip, #1972]!	; 0x7b4

00011894 <memcpy@plt>:
   11894:	add	ip, pc, #0, 12
   11898:	add	ip, ip, #106496	; 0x1a000
   1189c:	ldr	pc, [ip, #1964]!	; 0x7ac

000118a0 <mbsinit@plt>:
   118a0:	add	ip, pc, #0, 12
   118a4:	add	ip, ip, #106496	; 0x1a000
   118a8:	ldr	pc, [ip, #1956]!	; 0x7a4

000118ac <context_new@plt>:
   118ac:	add	ip, pc, #0, 12
   118b0:	add	ip, ip, #106496	; 0x1a000
   118b4:	ldr	pc, [ip, #1948]!	; 0x79c

000118b8 <dcgettext@plt>:
   118b8:	add	ip, pc, #0, 12
   118bc:	add	ip, ip, #106496	; 0x1a000
   118c0:	ldr	pc, [ip, #1940]!	; 0x794

000118c4 <context_type_set@plt>:
   118c4:	add	ip, pc, #0, 12
   118c8:	add	ip, ip, #106496	; 0x1a000
   118cc:	ldr	pc, [ip, #1932]!	; 0x78c

000118d0 <realloc@plt>:
   118d0:	add	ip, pc, #0, 12
   118d4:	add	ip, ip, #106496	; 0x1a000
   118d8:	ldr	pc, [ip, #1924]!	; 0x784

000118dc <fgetfilecon@plt>:
   118dc:	add	ip, pc, #0, 12
   118e0:	add	ip, ip, #106496	; 0x1a000
   118e4:	ldr	pc, [ip, #1916]!	; 0x77c

000118e8 <textdomain@plt>:
   118e8:	add	ip, pc, #0, 12
   118ec:	add	ip, ip, #106496	; 0x1a000
   118f0:	ldr	pc, [ip, #1908]!	; 0x774

000118f4 <rawmemchr@plt>:
   118f4:	add	ip, pc, #0, 12
   118f8:	add	ip, ip, #106496	; 0x1a000
   118fc:	ldr	pc, [ip, #1900]!	; 0x76c

00011900 <__fxstatat64@plt>:
   11900:	add	ip, pc, #0, 12
   11904:	add	ip, ip, #106496	; 0x1a000
   11908:	ldr	pc, [ip, #1892]!	; 0x764

0001190c <iswprint@plt>:
   1190c:	add	ip, pc, #0, 12
   11910:	add	ip, ip, #106496	; 0x1a000
   11914:	ldr	pc, [ip, #1884]!	; 0x75c

00011918 <__fxstat64@plt>:
   11918:	add	ip, pc, #0, 12
   1191c:	add	ip, ip, #106496	; 0x1a000
   11920:	ldr	pc, [ip, #1876]!	; 0x754

00011924 <readlink@plt>:
   11924:	add	ip, pc, #0, 12
   11928:	add	ip, ip, #106496	; 0x1a000
   1192c:	ldr	pc, [ip, #1868]!	; 0x74c

00011930 <lseek64@plt>:
   11930:	add	ip, pc, #0, 12
   11934:	add	ip, ip, #106496	; 0x1a000
   11938:	ldr	pc, [ip, #1860]!	; 0x744

0001193c <__ctype_get_mb_cur_max@plt>:
   1193c:	add	ip, pc, #0, 12
   11940:	add	ip, ip, #106496	; 0x1a000
   11944:	ldr	pc, [ip, #1852]!	; 0x73c

00011948 <getcon@plt>:
   11948:	add	ip, pc, #0, 12
   1194c:	add	ip, ip, #106496	; 0x1a000
   11950:	ldr	pc, [ip, #1844]!	; 0x734

00011954 <__fpending@plt>:
   11954:	add	ip, pc, #0, 12
   11958:	add	ip, ip, #106496	; 0x1a000
   1195c:	ldr	pc, [ip, #1836]!	; 0x72c

00011960 <ferror_unlocked@plt>:
   11960:	add	ip, pc, #0, 12
   11964:	add	ip, ip, #106496	; 0x1a000
   11968:	ldr	pc, [ip, #1828]!	; 0x724

0001196c <mbrtowc@plt>:
   1196c:	add	ip, pc, #0, 12
   11970:	add	ip, ip, #106496	; 0x1a000
   11974:	ldr	pc, [ip, #1820]!	; 0x71c

00011978 <error@plt>:
   11978:	add	ip, pc, #0, 12
   1197c:	add	ip, ip, #106496	; 0x1a000
   11980:	ldr	pc, [ip, #1812]!	; 0x714

00011984 <open64@plt>:
   11984:	add	ip, pc, #0, 12
   11988:	add	ip, ip, #106496	; 0x1a000
   1198c:	ldr	pc, [ip, #1804]!	; 0x70c

00011990 <lgetfilecon@plt>:
   11990:	add	ip, pc, #0, 12
   11994:	add	ip, ip, #106496	; 0x1a000
   11998:	ldr	pc, [ip, #1796]!	; 0x704

0001199c <malloc@plt>:
   1199c:	add	ip, pc, #0, 12
   119a0:	add	ip, ip, #106496	; 0x1a000
   119a4:	ldr	pc, [ip, #1788]!	; 0x6fc

000119a8 <__libc_start_main@plt>:
   119a8:	add	ip, pc, #0, 12
   119ac:	add	ip, ip, #106496	; 0x1a000
   119b0:	ldr	pc, [ip, #1780]!	; 0x6f4

000119b4 <__freading@plt>:
   119b4:	add	ip, pc, #0, 12
   119b8:	add	ip, ip, #106496	; 0x1a000
   119bc:	ldr	pc, [ip, #1772]!	; 0x6ec

000119c0 <__gmon_start__@plt>:
   119c0:	add	ip, pc, #0, 12
   119c4:	add	ip, ip, #106496	; 0x1a000
   119c8:	ldr	pc, [ip, #1764]!	; 0x6e4

000119cc <context_free@plt>:
   119cc:	add	ip, pc, #0, 12
   119d0:	add	ip, ip, #106496	; 0x1a000
   119d4:	ldr	pc, [ip, #1756]!	; 0x6dc

000119d8 <getopt_long@plt>:
   119d8:	add	ip, pc, #0, 12
   119dc:	add	ip, ip, #106496	; 0x1a000
   119e0:	ldr	pc, [ip, #1748]!	; 0x6d4

000119e4 <__ctype_b_loc@plt>:
   119e4:	add	ip, pc, #0, 12
   119e8:	add	ip, ip, #106496	; 0x1a000
   119ec:	ldr	pc, [ip, #1740]!	; 0x6cc

000119f0 <getcwd@plt>:
   119f0:	add	ip, pc, #0, 12
   119f4:	add	ip, ip, #106496	; 0x1a000
   119f8:	ldr	pc, [ip, #1732]!	; 0x6c4

000119fc <exit@plt>:
   119fc:	add	ip, pc, #0, 12
   11a00:	add	ip, ip, #106496	; 0x1a000
   11a04:	ldr	pc, [ip, #1724]!	; 0x6bc

00011a08 <getfilecon@plt>:
   11a08:	add	ip, pc, #0, 12
   11a0c:	add	ip, ip, #106496	; 0x1a000
   11a10:	ldr	pc, [ip, #1716]!	; 0x6b4

00011a14 <bcmp@plt>:
   11a14:	add	ip, pc, #0, 12
   11a18:	add	ip, ip, #106496	; 0x1a000
   11a1c:	ldr	pc, [ip, #1708]!	; 0x6ac

00011a20 <strlen@plt>:
   11a20:	add	ip, pc, #0, 12
   11a24:	add	ip, ip, #106496	; 0x1a000
   11a28:	ldr	pc, [ip, #1700]!	; 0x6a4

00011a2c <selabel_open@plt>:
   11a2c:	add	ip, pc, #0, 12
   11a30:	add	ip, ip, #106496	; 0x1a000
   11a34:	ldr	pc, [ip, #1692]!	; 0x69c

00011a38 <strchr@plt>:
   11a38:	add	ip, pc, #0, 12
   11a3c:	add	ip, ip, #106496	; 0x1a000
   11a40:	ldr	pc, [ip, #1684]!	; 0x694

00011a44 <openat64@plt>:
   11a44:	add	ip, pc, #0, 12
   11a48:	add	ip, ip, #106496	; 0x1a000
   11a4c:	ldr	pc, [ip, #1676]!	; 0x68c

00011a50 <setfscreatecon@plt>:
   11a50:	add	ip, pc, #0, 12
   11a54:	add	ip, ip, #106496	; 0x1a000
   11a58:	ldr	pc, [ip, #1668]!	; 0x684

00011a5c <__errno_location@plt>:
   11a5c:	add	ip, pc, #0, 12
   11a60:	add	ip, ip, #106496	; 0x1a000
   11a64:	ldr	pc, [ip, #1660]!	; 0x67c

00011a68 <__sprintf_chk@plt>:
   11a68:	add	ip, pc, #0, 12
   11a6c:	add	ip, ip, #106496	; 0x1a000
   11a70:	ldr	pc, [ip, #1652]!	; 0x674

00011a74 <__cxa_atexit@plt>:
   11a74:	add	ip, pc, #0, 12
   11a78:	add	ip, ip, #106496	; 0x1a000
   11a7c:	ldr	pc, [ip, #1644]!	; 0x66c

00011a80 <memset@plt>:
   11a80:	add	ip, pc, #0, 12
   11a84:	add	ip, ip, #106496	; 0x1a000
   11a88:	ldr	pc, [ip, #1636]!	; 0x664

00011a8c <__printf_chk@plt>:
   11a8c:	add	ip, pc, #0, 12
   11a90:	add	ip, ip, #106496	; 0x1a000
   11a94:	ldr	pc, [ip, #1628]!	; 0x65c

00011a98 <fileno@plt>:
   11a98:	add	ip, pc, #0, 12
   11a9c:	add	ip, ip, #106496	; 0x1a000
   11aa0:	ldr	pc, [ip, #1620]!	; 0x654

00011aa4 <strtoumax@plt>:
   11aa4:	add	ip, pc, #0, 12
   11aa8:	add	ip, ip, #106496	; 0x1a000
   11aac:	ldr	pc, [ip, #1612]!	; 0x64c

00011ab0 <__fprintf_chk@plt>:
   11ab0:	add	ip, pc, #0, 12
   11ab4:	add	ip, ip, #106496	; 0x1a000
   11ab8:	ldr	pc, [ip, #1604]!	; 0x644

00011abc <fclose@plt>:
   11abc:	add	ip, pc, #0, 12
   11ac0:	add	ip, ip, #106496	; 0x1a000
   11ac4:	ldr	pc, [ip, #1596]!	; 0x63c

00011ac8 <fseeko64@plt>:
   11ac8:	add	ip, pc, #0, 12
   11acc:	add	ip, ip, #106496	; 0x1a000
   11ad0:	ldr	pc, [ip, #1588]!	; 0x634

00011ad4 <fcntl64@plt>:
   11ad4:	add	ip, pc, #0, 12
   11ad8:	add	ip, ip, #106496	; 0x1a000
   11adc:	ldr	pc, [ip, #1580]!	; 0x62c

00011ae0 <setlocale@plt>:
   11ae0:	add	ip, pc, #0, 12
   11ae4:	add	ip, ip, #106496	; 0x1a000
   11ae8:	ldr	pc, [ip, #1572]!	; 0x624

00011aec <fsetfilecon@plt>:
   11aec:	add	ip, pc, #0, 12
   11af0:	add	ip, ip, #106496	; 0x1a000
   11af4:	ldr	pc, [ip, #1564]!	; 0x61c

00011af8 <strrchr@plt>:
   11af8:	add	ip, pc, #0, 12
   11afc:	add	ip, ip, #106496	; 0x1a000
   11b00:	ldr	pc, [ip, #1556]!	; 0x614

00011b04 <nl_langinfo@plt>:
   11b04:	add	ip, pc, #0, 12
   11b08:	add	ip, ip, #106496	; 0x1a000
   11b0c:	ldr	pc, [ip, #1548]!	; 0x60c

00011b10 <readdir64@plt>:
   11b10:	add	ip, pc, #0, 12
   11b14:	add	ip, ip, #106496	; 0x1a000
   11b18:	ldr	pc, [ip, #1540]!	; 0x604

00011b1c <fdopendir@plt>:
   11b1c:	add	ip, pc, #0, 12
   11b20:	add	ip, ip, #106496	; 0x1a000
   11b24:	ldr	pc, [ip, #1532]!	; 0x5fc

00011b28 <security_compute_create@plt>:
   11b28:	add	ip, pc, #0, 12
   11b2c:	add	ip, ip, #106496	; 0x1a000
   11b30:	ldr	pc, [ip, #1524]!	; 0x5f4

00011b34 <dirfd@plt>:
   11b34:	add	ip, pc, #0, 12
   11b38:	add	ip, ip, #106496	; 0x1a000
   11b3c:	ldr	pc, [ip, #1516]!	; 0x5ec

00011b40 <fchdir@plt>:
   11b40:	add	ip, pc, #0, 12
   11b44:	add	ip, ip, #106496	; 0x1a000
   11b48:	ldr	pc, [ip, #1508]!	; 0x5e4

00011b4c <qsort@plt>:
   11b4c:	add	ip, pc, #0, 12
   11b50:	add	ip, ip, #106496	; 0x1a000
   11b54:	ldr	pc, [ip, #1500]!	; 0x5dc

00011b58 <freecon@plt>:
   11b58:	add	ip, pc, #0, 12
   11b5c:	add	ip, ip, #106496	; 0x1a000
   11b60:	ldr	pc, [ip, #1492]!	; 0x5d4

00011b64 <bindtextdomain@plt>:
   11b64:	add	ip, pc, #0, 12
   11b68:	add	ip, ip, #106496	; 0x1a000
   11b6c:	ldr	pc, [ip, #1484]!	; 0x5cc

00011b70 <getfscreatecon@plt>:
   11b70:	add	ip, pc, #0, 12
   11b74:	add	ip, ip, #106496	; 0x1a000
   11b78:	ldr	pc, [ip, #1476]!	; 0x5c4

00011b7c <umask@plt>:
   11b7c:	add	ip, pc, #0, 12
   11b80:	add	ip, ip, #106496	; 0x1a000
   11b84:	ldr	pc, [ip, #1468]!	; 0x5bc

00011b88 <context_str@plt>:
   11b88:	add	ip, pc, #0, 12
   11b8c:	add	ip, ip, #106496	; 0x1a000
   11b90:	ldr	pc, [ip, #1460]!	; 0x5b4

00011b94 <chmod@plt>:
   11b94:	add	ip, pc, #0, 12
   11b98:	add	ip, ip, #106496	; 0x1a000
   11b9c:	ldr	pc, [ip, #1452]!	; 0x5ac

00011ba0 <__xstat64@plt>:
   11ba0:	add	ip, pc, #0, 12
   11ba4:	add	ip, ip, #106496	; 0x1a000
   11ba8:	ldr	pc, [ip, #1444]!	; 0x5a4

00011bac <__xmknod@plt>:
   11bac:	add	ip, pc, #0, 12
   11bb0:	add	ip, ip, #106496	; 0x1a000
   11bb4:	ldr	pc, [ip, #1436]!	; 0x59c

00011bb8 <fputs@plt>:
   11bb8:	add	ip, pc, #0, 12
   11bbc:	add	ip, ip, #106496	; 0x1a000
   11bc0:	ldr	pc, [ip, #1428]!	; 0x594

00011bc4 <strncmp@plt>:
   11bc4:	add	ip, pc, #0, 12
   11bc8:	add	ip, ip, #106496	; 0x1a000
   11bcc:	ldr	pc, [ip, #1420]!	; 0x58c

00011bd0 <abort@plt>:
   11bd0:	add	ip, pc, #0, 12
   11bd4:	add	ip, ip, #106496	; 0x1a000
   11bd8:	ldr	pc, [ip, #1412]!	; 0x584

00011bdc <close@plt>:
   11bdc:	add	ip, pc, #0, 12
   11be0:	add	ip, ip, #106496	; 0x1a000
   11be4:	ldr	pc, [ip, #1404]!	; 0x57c

00011be8 <__lxstat64@plt>:
   11be8:	add	ip, pc, #0, 12
   11bec:	add	ip, ip, #106496	; 0x1a000
   11bf0:	ldr	pc, [ip, #1396]!	; 0x574

00011bf4 <mkfifo@plt>:
   11bf4:	add	ip, pc, #0, 12
   11bf8:	add	ip, ip, #106496	; 0x1a000
   11bfc:	ldr	pc, [ip, #1388]!	; 0x56c

00011c00 <mode_to_security_class@plt>:
   11c00:	add	ip, pc, #0, 12
   11c04:	add	ip, ip, #106496	; 0x1a000
   11c08:	ldr	pc, [ip, #1380]!	; 0x564

00011c0c <closedir@plt>:
   11c0c:	add	ip, pc, #0, 12
   11c10:	add	ip, ip, #106496	; 0x1a000
   11c14:	ldr	pc, [ip, #1372]!	; 0x55c

00011c18 <strspn@plt>:
   11c18:	add	ip, pc, #0, 12
   11c1c:	add	ip, ip, #106496	; 0x1a000
   11c20:	ldr	pc, [ip, #1364]!	; 0x554

00011c24 <__mempcpy_chk@plt>:
   11c24:	add	ip, pc, #0, 12
   11c28:	add	ip, ip, #106496	; 0x1a000
   11c2c:	ldr	pc, [ip, #1356]!	; 0x54c

00011c30 <__assert_fail@plt>:
   11c30:	add	ip, pc, #0, 12
   11c34:	add	ip, ip, #106496	; 0x1a000
   11c38:	ldr	pc, [ip, #1348]!	; 0x544

Disassembly of section .text:

00011c40 <lchmod@@Base-0x4ad4>:
   11c40:	mov	fp, #0
   11c44:	mov	lr, #0
   11c48:	pop	{r1}		; (ldr r1, [sp], #4)
   11c4c:	mov	r2, sp
   11c50:	push	{r2}		; (str r2, [sp, #-4]!)
   11c54:	push	{r0}		; (str r0, [sp, #-4]!)
   11c58:	ldr	ip, [pc, #16]	; 11c70 <__assert_fail@plt+0x40>
   11c5c:	push	{ip}		; (str ip, [sp, #-4]!)
   11c60:	ldr	r0, [pc, #12]	; 11c74 <__assert_fail@plt+0x44>
   11c64:	ldr	r3, [pc, #12]	; 11c78 <__assert_fail@plt+0x48>
   11c68:	bl	119a8 <__libc_start_main@plt>
   11c6c:	bl	11bd0 <abort@plt>
   11c70:	strdeq	sl, [r1], -r4
   11c74:	andeq	r2, r1, r4
   11c78:	muleq	r1, r4, r5
   11c7c:	ldr	r3, [pc, #20]	; 11c98 <__assert_fail@plt+0x68>
   11c80:	ldr	r2, [pc, #20]	; 11c9c <__assert_fail@plt+0x6c>
   11c84:	add	r3, pc, r3
   11c88:	ldr	r2, [r3, r2]
   11c8c:	cmp	r2, #0
   11c90:	bxeq	lr
   11c94:	b	119c0 <__gmon_start__@plt>
   11c98:	andeq	sl, r1, r4, ror r3
   11c9c:	andeq	r0, r0, r0, lsl #3
   11ca0:	ldr	r0, [pc, #24]	; 11cc0 <__assert_fail@plt+0x90>
   11ca4:	ldr	r3, [pc, #24]	; 11cc4 <__assert_fail@plt+0x94>
   11ca8:	cmp	r3, r0
   11cac:	bxeq	lr
   11cb0:	ldr	r3, [pc, #16]	; 11cc8 <__assert_fail@plt+0x98>
   11cb4:	cmp	r3, #0
   11cb8:	bxeq	lr
   11cbc:	bx	r3
   11cc0:	ldrdeq	ip, [r2], -r8
   11cc4:	ldrdeq	ip, [r2], -r8
   11cc8:	andeq	r0, r0, r0
   11ccc:	ldr	r0, [pc, #36]	; 11cf8 <__assert_fail@plt+0xc8>
   11cd0:	ldr	r1, [pc, #36]	; 11cfc <__assert_fail@plt+0xcc>
   11cd4:	sub	r1, r1, r0
   11cd8:	asr	r1, r1, #2
   11cdc:	add	r1, r1, r1, lsr #31
   11ce0:	asrs	r1, r1, #1
   11ce4:	bxeq	lr
   11ce8:	ldr	r3, [pc, #16]	; 11d00 <__assert_fail@plt+0xd0>
   11cec:	cmp	r3, #0
   11cf0:	bxeq	lr
   11cf4:	bx	r3
   11cf8:	ldrdeq	ip, [r2], -r8
   11cfc:	ldrdeq	ip, [r2], -r8
   11d00:	andeq	r0, r0, r0
   11d04:	push	{r4, lr}
   11d08:	ldr	r4, [pc, #24]	; 11d28 <__assert_fail@plt+0xf8>
   11d0c:	ldrb	r3, [r4]
   11d10:	cmp	r3, #0
   11d14:	popne	{r4, pc}
   11d18:	bl	11ca0 <__assert_fail@plt+0x70>
   11d1c:	mov	r3, #1
   11d20:	strb	r3, [r4]
   11d24:	pop	{r4, pc}
   11d28:	strdeq	ip, [r2], -r4
   11d2c:	b	11ccc <__assert_fail@plt+0x9c>
   11d30:	push	{fp, lr}
   11d34:	mov	fp, sp
   11d38:	sub	sp, sp, #56	; 0x38
   11d3c:	mov	r8, r0
   11d40:	cmp	r0, #0
   11d44:	bne	11fc4 <__assert_fail@plt+0x394>
   11d48:	movw	r1, #42691	; 0xa6c3
   11d4c:	mov	r0, #0
   11d50:	mov	r2, #5
   11d54:	movt	r1, #1
   11d58:	bl	118b8 <dcgettext@plt>
   11d5c:	mov	r1, r0
   11d60:	movw	r0, #49664	; 0xc200
   11d64:	movt	r0, #2
   11d68:	ldr	r2, [r0]
   11d6c:	mov	r0, #1
   11d70:	bl	11a8c <__printf_chk@plt>
   11d74:	movw	r1, #42738	; 0xa6f2
   11d78:	mov	r0, #0
   11d7c:	mov	r2, #5
   11d80:	movt	r1, #1
   11d84:	bl	118b8 <dcgettext@plt>
   11d88:	movw	r9, #49644	; 0xc1ec
   11d8c:	movt	r9, #2
   11d90:	ldr	r1, [r9]
   11d94:	bl	11804 <fputs_unlocked@plt>
   11d98:	movw	r1, #44314	; 0xad1a
   11d9c:	mov	r0, #0
   11da0:	mov	r2, #5
   11da4:	movt	r1, #1
   11da8:	bl	118b8 <dcgettext@plt>
   11dac:	ldr	r1, [r9]
   11db0:	bl	11804 <fputs_unlocked@plt>
   11db4:	movw	r1, #42787	; 0xa723
   11db8:	mov	r0, #0
   11dbc:	mov	r2, #5
   11dc0:	movt	r1, #1
   11dc4:	bl	118b8 <dcgettext@plt>
   11dc8:	ldr	r1, [r9]
   11dcc:	bl	11804 <fputs_unlocked@plt>
   11dd0:	movw	r1, #42860	; 0xa76c
   11dd4:	mov	r0, #0
   11dd8:	mov	r2, #5
   11ddc:	movt	r1, #1
   11de0:	bl	118b8 <dcgettext@plt>
   11de4:	ldr	r1, [r9]
   11de8:	bl	11804 <fputs_unlocked@plt>
   11dec:	movw	r1, #43067	; 0xa83b
   11df0:	mov	r0, #0
   11df4:	mov	r2, #5
   11df8:	movt	r1, #1
   11dfc:	bl	118b8 <dcgettext@plt>
   11e00:	ldr	r1, [r9]
   11e04:	bl	11804 <fputs_unlocked@plt>
   11e08:	movw	r1, #43112	; 0xa868
   11e0c:	mov	r0, #0
   11e10:	mov	r2, #5
   11e14:	movt	r1, #1
   11e18:	bl	118b8 <dcgettext@plt>
   11e1c:	ldr	r1, [r9]
   11e20:	bl	11804 <fputs_unlocked@plt>
   11e24:	movw	r1, #43166	; 0xa89e
   11e28:	mov	r0, #0
   11e2c:	mov	r2, #5
   11e30:	movt	r1, #1
   11e34:	bl	118b8 <dcgettext@plt>
   11e38:	ldr	r1, [r9]
   11e3c:	bl	11804 <fputs_unlocked@plt>
   11e40:	movw	r1, #43427	; 0xa9a3
   11e44:	mov	r0, #0
   11e48:	mov	r2, #5
   11e4c:	movt	r1, #1
   11e50:	bl	118b8 <dcgettext@plt>
   11e54:	ldr	r1, [r9]
   11e58:	bl	11804 <fputs_unlocked@plt>
   11e5c:	movw	r1, #43554	; 0xaa22
   11e60:	mov	r0, #0
   11e64:	mov	r2, #5
   11e68:	movt	r1, #1
   11e6c:	bl	118b8 <dcgettext@plt>
   11e70:	movw	r5, #43745	; 0xaae1
   11e74:	mov	r1, r0
   11e78:	mov	r0, #1
   11e7c:	movt	r5, #1
   11e80:	mov	r2, r5
   11e84:	bl	11a8c <__printf_chk@plt>
   11e88:	movw	ip, #44800	; 0xaf00
   11e8c:	mov	r6, sp
   11e90:	movt	ip, #1
   11e94:	mov	r1, r6
   11e98:	ldm	ip!, {r2, r3, r4, r7}
   11e9c:	stmia	r1!, {r2, r3, r4, r7}
   11ea0:	ldm	ip!, {r0, r2, r3, r4, r7}
   11ea4:	stmia	r1!, {r0, r2, r3, r4, r7}
   11ea8:	ldm	ip, {r0, r2, r3, r4, r7}
   11eac:	stm	r1, {r0, r2, r3, r4, r7}
   11eb0:	movw	r1, #44389	; 0xad65
   11eb4:	movt	r1, #1
   11eb8:	mov	r0, r5
   11ebc:	bl	11828 <strcmp@plt>
   11ec0:	cmp	r0, #0
   11ec4:	ldrne	r1, [r6, #8]!
   11ec8:	cmpne	r1, #0
   11ecc:	bne	11eb8 <__assert_fail@plt+0x288>
   11ed0:	movw	r1, #44484	; 0xadc4
   11ed4:	ldr	r6, [r6, #4]
   11ed8:	mov	r0, #0
   11edc:	mov	r2, #5
   11ee0:	movt	r1, #1
   11ee4:	bl	118b8 <dcgettext@plt>
   11ee8:	movw	r2, #43880	; 0xab68
   11eec:	movw	r3, #44507	; 0xaddb
   11ef0:	mov	r1, r0
   11ef4:	mov	r0, #1
   11ef8:	movt	r2, #1
   11efc:	movt	r3, #1
   11f00:	bl	11a8c <__printf_chk@plt>
   11f04:	cmp	r6, #0
   11f08:	mov	r0, #5
   11f0c:	mov	r1, #0
   11f10:	moveq	r6, r5
   11f14:	bl	11ae0 <setlocale@plt>
   11f18:	cmp	r0, #0
   11f1c:	beq	11f54 <__assert_fail@plt+0x324>
   11f20:	movw	r1, #44547	; 0xae03
   11f24:	mov	r2, #3
   11f28:	movt	r1, #1
   11f2c:	bl	11bc4 <strncmp@plt>
   11f30:	cmp	r0, #0
   11f34:	beq	11f54 <__assert_fail@plt+0x324>
   11f38:	movw	r1, #44551	; 0xae07
   11f3c:	mov	r0, #0
   11f40:	mov	r2, #5
   11f44:	movt	r1, #1
   11f48:	bl	118b8 <dcgettext@plt>
   11f4c:	ldr	r1, [r9]
   11f50:	bl	11804 <fputs_unlocked@plt>
   11f54:	movw	r1, #44622	; 0xae4e
   11f58:	mov	r0, #0
   11f5c:	mov	r2, #5
   11f60:	movt	r1, #1
   11f64:	bl	118b8 <dcgettext@plt>
   11f68:	movw	r2, #44507	; 0xaddb
   11f6c:	mov	r1, r0
   11f70:	mov	r0, #1
   11f74:	mov	r3, r5
   11f78:	movt	r2, #1
   11f7c:	bl	11a8c <__printf_chk@plt>
   11f80:	movw	r1, #44649	; 0xae69
   11f84:	mov	r0, #0
   11f88:	mov	r2, #5
   11f8c:	movt	r1, #1
   11f90:	bl	118b8 <dcgettext@plt>
   11f94:	mov	r1, r0
   11f98:	movw	r0, #44417	; 0xad81
   11f9c:	movw	r3, #44699	; 0xae9b
   11fa0:	cmp	r6, r5
   11fa4:	mov	r2, r6
   11fa8:	movt	r0, #1
   11fac:	movt	r3, #1
   11fb0:	moveq	r3, r0
   11fb4:	mov	r0, #1
   11fb8:	bl	11a8c <__printf_chk@plt>
   11fbc:	mov	r0, r8
   11fc0:	bl	119fc <exit@plt>
   11fc4:	movw	r0, #49640	; 0xc1e8
   11fc8:	movw	r1, #42652	; 0xa69c
   11fcc:	mov	r2, #5
   11fd0:	movt	r0, #2
   11fd4:	movt	r1, #1
   11fd8:	ldr	r5, [r0]
   11fdc:	mov	r0, #0
   11fe0:	bl	118b8 <dcgettext@plt>
   11fe4:	mov	r2, r0
   11fe8:	movw	r0, #49664	; 0xc200
   11fec:	mov	r1, #1
   11ff0:	movt	r0, #2
   11ff4:	ldr	r3, [r0]
   11ff8:	mov	r0, r5
   11ffc:	bl	11ab0 <__fprintf_chk@plt>
   12000:	b	11fbc <__assert_fail@plt+0x38c>
   12004:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12008:	add	fp, sp, #28
   1200c:	sub	sp, sp, #44	; 0x2c
   12010:	mov	r6, r0
   12014:	ldr	r0, [r1]
   12018:	mov	sl, r1
   1201c:	bl	16d70 <lchmod@@Base+0x65c>
   12020:	movw	r1, #44699	; 0xae9b
   12024:	mov	r0, #6
   12028:	movt	r1, #1
   1202c:	bl	11ae0 <setlocale@plt>
   12030:	movw	r5, #43884	; 0xab6c
   12034:	movw	r1, #43751	; 0xaae7
   12038:	movt	r5, #1
   1203c:	movt	r1, #1
   12040:	mov	r0, r5
   12044:	bl	11b64 <bindtextdomain@plt>
   12048:	mov	r0, r5
   1204c:	bl	118e8 <textdomain@plt>
   12050:	movw	r0, #13128	; 0x3348
   12054:	movt	r0, #1
   12058:	bl	1a5f8 <lchmod@@Base+0x3ee4>
   1205c:	movw	r7, #43775	; 0xaaff
   12060:	movw	r8, #44720	; 0xaeb0
   12064:	movw	r4, #49648	; 0xc1f0
   12068:	mov	r0, #0
   1206c:	mov	r5, #0
   12070:	mov	r1, #0
   12074:	movt	r7, #1
   12078:	movt	r8, #1
   1207c:	movt	r4, #2
   12080:	str	r0, [sp, #16]
   12084:	mov	r0, #0
   12088:	str	r0, [sp, #20]
   1208c:	mov	r9, r1
   12090:	mov	r0, r6
   12094:	mov	r1, sl
   12098:	mov	r2, r7
   1209c:	mov	r3, r8
   120a0:	str	r5, [sp]
   120a4:	bl	119d8 <getopt_long@plt>
   120a8:	cmp	r0, #89	; 0x59
   120ac:	ble	12174 <__assert_fail@plt+0x544>
   120b0:	cmp	r0, #90	; 0x5a
   120b4:	bne	120f8 <__assert_fail@plt+0x4c8>
   120b8:	bl	1181c <is_selinux_enabled@plt>
   120bc:	ldr	r1, [r4]
   120c0:	cmp	r0, #1
   120c4:	bge	1210c <__assert_fail@plt+0x4dc>
   120c8:	cmp	r1, #0
   120cc:	beq	12090 <__assert_fail@plt+0x460>
   120d0:	movw	r1, #43807	; 0xab1f
   120d4:	mov	r0, #0
   120d8:	mov	r2, #5
   120dc:	movt	r1, #1
   120e0:	bl	118b8 <dcgettext@plt>
   120e4:	mov	r2, r0
   120e8:	mov	r0, #0
   120ec:	mov	r1, #0
   120f0:	bl	11978 <error@plt>
   120f4:	b	12090 <__assert_fail@plt+0x460>
   120f8:	cmp	r0, #109	; 0x6d
   120fc:	bne	12644 <__assert_fail@plt+0xa14>
   12100:	ldr	r0, [r4]
   12104:	str	r0, [sp, #20]
   12108:	b	12090 <__assert_fail@plt+0x460>
   1210c:	cmp	r1, #0
   12110:	bne	1208c <__assert_fail@plt+0x45c>
   12114:	mov	r0, #0
   12118:	mov	r1, #0
   1211c:	mov	r2, #0
   12120:	bl	11a2c <selabel_open@plt>
   12124:	cmp	r0, #0
   12128:	mov	r1, r9
   1212c:	str	r0, [sp, #16]
   12130:	bne	1208c <__assert_fail@plt+0x45c>
   12134:	bl	11a5c <__errno_location@plt>
   12138:	ldr	r0, [r0]
   1213c:	movw	r1, #43779	; 0xab03
   12140:	mov	r2, #5
   12144:	movt	r1, #1
   12148:	str	r0, [sp, #12]
   1214c:	mov	r0, #0
   12150:	str	r0, [sp, #16]
   12154:	mov	r0, #0
   12158:	bl	118b8 <dcgettext@plt>
   1215c:	ldr	r1, [sp, #12]
   12160:	mov	r2, r0
   12164:	mov	r0, #0
   12168:	bl	11978 <error@plt>
   1216c:	mov	r1, r9
   12170:	b	1208c <__assert_fail@plt+0x45c>
   12174:	cmn	r0, #1
   12178:	bne	12464 <__assert_fail@plt+0x834>
   1217c:	ldr	r0, [sp, #20]
   12180:	cmp	r0, #0
   12184:	beq	121e4 <__assert_fail@plt+0x5b4>
   12188:	bl	16830 <lchmod@@Base+0x11c>
   1218c:	cmp	r0, #0
   12190:	beq	12574 <__assert_fail@plt+0x944>
   12194:	mov	r5, r0
   12198:	mov	r0, #0
   1219c:	mov	r4, #0
   121a0:	bl	11b7c <umask@plt>
   121a4:	mov	r7, r0
   121a8:	bl	11b7c <umask@plt>
   121ac:	movw	r0, #438	; 0x1b6
   121b0:	mov	r1, #0
   121b4:	mov	r2, r7
   121b8:	mov	r3, r5
   121bc:	str	r4, [sp]
   121c0:	bl	16bd0 <lchmod@@Base+0x4bc>
   121c4:	mov	r8, r0
   121c8:	mov	r0, r5
   121cc:	bl	135bc <__assert_fail@plt+0x198c>
   121d0:	cmp	r8, #512	; 0x200
   121d4:	bcc	121e8 <__assert_fail@plt+0x5b8>
   121d8:	movw	r1, #43923	; 0xab93
   121dc:	movt	r1, #1
   121e0:	b	1257c <__assert_fail@plt+0x94c>
   121e4:	movw	r8, #438	; 0x1b6
   121e8:	movw	r4, #49632	; 0xc1e0
   121ec:	movt	r4, #2
   121f0:	ldr	r3, [r4]
   121f4:	cmp	r3, r6
   121f8:	bge	12220 <__assert_fail@plt+0x5f0>
   121fc:	add	r1, r3, #1
   12200:	mov	r5, #4
   12204:	mov	r7, #0
   12208:	cmp	r1, r6
   1220c:	bge	12228 <__assert_fail@plt+0x5f8>
   12210:	ldr	r1, [sl, r1, lsl #2]
   12214:	ldrb	r1, [r1]
   12218:	cmp	r1, #112	; 0x70
   1221c:	bne	12228 <__assert_fail@plt+0x5f8>
   12220:	mov	r5, #2
   12224:	mov	r7, #1
   12228:	sub	r1, r6, r3
   1222c:	cmp	r1, r5
   12230:	bcc	124c4 <__assert_fail@plt+0x894>
   12234:	cmp	r5, r1
   12238:	bcc	12508 <__assert_fail@plt+0x8d8>
   1223c:	cmp	r9, #0
   12240:	beq	12258 <__assert_fail@plt+0x628>
   12244:	mov	r0, r9
   12248:	bl	11a50 <setfscreatecon@plt>
   1224c:	cmp	r0, #0
   12250:	bmi	12598 <__assert_fail@plt+0x968>
   12254:	ldr	r3, [r4]
   12258:	add	r1, sl, r3, lsl #2
   1225c:	ldr	r2, [r1, #4]
   12260:	ldrb	r2, [r2]
   12264:	cmp	r2, #111	; 0x6f
   12268:	bgt	122c8 <__assert_fail@plt+0x698>
   1226c:	movw	r6, #44699	; 0xae9b
   12270:	mov	r5, #24576	; 0x6000
   12274:	cmp	r2, #98	; 0x62
   12278:	movt	r6, #1
   1227c:	beq	12310 <__assert_fail@plt+0x6e0>
   12280:	cmp	r2, #99	; 0x63
   12284:	beq	1230c <__assert_fail@plt+0x6dc>
   12288:	movw	r1, #44262	; 0xace6
   1228c:	mov	r0, #0
   12290:	mov	r2, #5
   12294:	movt	r1, #1
   12298:	bl	118b8 <dcgettext@plt>
   1229c:	mov	r5, r0
   122a0:	ldr	r0, [r4]
   122a4:	add	r0, sl, r0, lsl #2
   122a8:	ldr	r0, [r0, #4]
   122ac:	bl	1875c <lchmod@@Base+0x2048>
   122b0:	mov	r3, r0
   122b4:	mov	r0, #0
   122b8:	mov	r1, #0
   122bc:	mov	r2, r5
   122c0:	bl	11978 <error@plt>
   122c4:	b	12644 <__assert_fail@plt+0xa14>
   122c8:	movw	r6, #44699	; 0xae9b
   122cc:	cmp	r2, #112	; 0x70
   122d0:	movt	r6, #1
   122d4:	bne	12304 <__assert_fail@plt+0x6d4>
   122d8:	ldr	r0, [sp, #16]
   122dc:	cmp	r0, #0
   122e0:	beq	122f4 <__assert_fail@plt+0x6c4>
   122e4:	ldr	r1, [sl, r3, lsl #2]
   122e8:	mov	r2, #4096	; 0x1000
   122ec:	bl	126f0 <__assert_fail@plt+0xac0>
   122f0:	ldr	r3, [r4]
   122f4:	ldr	r0, [sl, r3, lsl #2]
   122f8:	mov	r1, r8
   122fc:	bl	11bf4 <mkfifo@plt>
   12300:	b	1242c <__assert_fail@plt+0x7fc>
   12304:	cmp	r2, #117	; 0x75
   12308:	bne	12288 <__assert_fail@plt+0x658>
   1230c:	mov	r5, #8192	; 0x2000
   12310:	ldr	r4, [r1, #8]
   12314:	ldr	r7, [r1, #12]
   12318:	add	r3, sp, #32
   1231c:	mov	r1, #0
   12320:	mov	r2, #0
   12324:	str	r6, [sp]
   12328:	mov	r0, r4
   1232c:	bl	194d4 <lchmod@@Base+0x2dc0>
   12330:	cmp	r0, #0
   12334:	ldreq	r0, [sp, #36]	; 0x24
   12338:	cmpeq	r0, #0
   1233c:	beq	12374 <__assert_fail@plt+0x744>
   12340:	movw	r1, #44179	; 0xac93
   12344:	mov	r0, #0
   12348:	mov	r2, #5
   1234c:	movt	r1, #1
   12350:	bl	118b8 <dcgettext@plt>
   12354:	mov	r5, r0
   12358:	mov	r0, r4
   1235c:	bl	1875c <lchmod@@Base+0x2048>
   12360:	mov	r3, r0
   12364:	mov	r0, #1
   12368:	mov	r1, #0
   1236c:	mov	r2, r5
   12370:	bl	11978 <error@plt>
   12374:	add	r3, sp, #24
   12378:	mov	r0, r7
   1237c:	mov	r1, #0
   12380:	mov	r2, #0
   12384:	str	r6, [sp]
   12388:	bl	194d4 <lchmod@@Base+0x2dc0>
   1238c:	cmp	r0, #0
   12390:	ldreq	r0, [sp, #28]
   12394:	cmpeq	r0, #0
   12398:	beq	123d0 <__assert_fail@plt+0x7a0>
   1239c:	movw	r1, #44210	; 0xacb2
   123a0:	mov	r0, #0
   123a4:	mov	r2, #5
   123a8:	movt	r1, #1
   123ac:	bl	118b8 <dcgettext@plt>
   123b0:	mov	r4, r0
   123b4:	mov	r0, r7
   123b8:	bl	1875c <lchmod@@Base+0x2048>
   123bc:	mov	r3, r0
   123c0:	mov	r0, #1
   123c4:	mov	r1, #0
   123c8:	mov	r2, r4
   123cc:	bl	11978 <error@plt>
   123d0:	ldr	r1, [sp, #24]
   123d4:	ldr	r0, [sp, #32]
   123d8:	bl	11834 <gnu_dev_makedev@plt>
   123dc:	mov	r6, r0
   123e0:	and	r0, r0, r1
   123e4:	cmn	r0, #1
   123e8:	beq	126c4 <__assert_fail@plt+0xa94>
   123ec:	ldr	r0, [sp, #16]
   123f0:	movw	r4, #49632	; 0xc1e0
   123f4:	mov	r9, r1
   123f8:	movt	r4, #2
   123fc:	cmp	r0, #0
   12400:	beq	12414 <__assert_fail@plt+0x7e4>
   12404:	ldr	r1, [r4]
   12408:	mov	r2, r5
   1240c:	ldr	r1, [sl, r1, lsl #2]
   12410:	bl	126f0 <__assert_fail@plt+0xac0>
   12414:	ldr	r0, [r4]
   12418:	orr	r1, r5, r8
   1241c:	mov	r2, r6
   12420:	mov	r3, r9
   12424:	ldr	r0, [sl, r0, lsl #2]
   12428:	bl	1a668 <lchmod@@Base+0x3f54>
   1242c:	cmp	r0, #0
   12430:	bne	1264c <__assert_fail@plt+0xa1c>
   12434:	ldr	r0, [sp, #20]
   12438:	cmp	r0, #0
   1243c:	beq	12458 <__assert_fail@plt+0x828>
   12440:	ldr	r0, [r4]
   12444:	mov	r1, r8
   12448:	ldr	r0, [sl, r0, lsl #2]
   1244c:	bl	16714 <lchmod@@Base>
   12450:	cmp	r0, #0
   12454:	bne	12680 <__assert_fail@plt+0xa50>
   12458:	mov	r0, #0
   1245c:	sub	sp, fp, #28
   12460:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12464:	cmn	r0, #3
   12468:	bne	124b4 <__assert_fail@plt+0x884>
   1246c:	movw	r0, #49552	; 0xc190
   12470:	movw	r2, #43894	; 0xab76
   12474:	mov	r1, #0
   12478:	movt	r0, #2
   1247c:	movt	r2, #1
   12480:	str	r1, [sp, #4]
   12484:	movw	r1, #43745	; 0xaae1
   12488:	movt	r1, #1
   1248c:	ldr	r3, [r0]
   12490:	movw	r0, #49644	; 0xc1ec
   12494:	str	r2, [sp]
   12498:	movw	r2, #43880	; 0xab68
   1249c:	movt	r0, #2
   124a0:	movt	r2, #1
   124a4:	ldr	r0, [r0]
   124a8:	bl	18ee0 <lchmod@@Base+0x27cc>
   124ac:	mov	r0, #0
   124b0:	bl	119fc <exit@plt>
   124b4:	cmn	r0, #2
   124b8:	bne	12644 <__assert_fail@plt+0xa14>
   124bc:	mov	r0, #0
   124c0:	bl	11d30 <__assert_fail@plt+0x100>
   124c4:	cmp	r3, r6
   124c8:	bge	125d0 <__assert_fail@plt+0x9a0>
   124cc:	movw	r1, #43983	; 0xabcf
   124d0:	mov	r0, #0
   124d4:	mov	r2, #5
   124d8:	movt	r1, #1
   124dc:	bl	118b8 <dcgettext@plt>
   124e0:	mov	r5, r0
   124e4:	add	r0, sl, r6, lsl #2
   124e8:	ldr	r0, [r0, #-4]
   124ec:	bl	1875c <lchmod@@Base+0x2048>
   124f0:	mov	r3, r0
   124f4:	mov	r0, #0
   124f8:	mov	r1, #0
   124fc:	mov	r2, r5
   12500:	bl	11978 <error@plt>
   12504:	b	125f4 <__assert_fail@plt+0x9c4>
   12508:	movw	r1, #44062	; 0xac1e
   1250c:	mov	r0, #0
   12510:	mov	r2, #5
   12514:	movt	r1, #1
   12518:	bl	118b8 <dcgettext@plt>
   1251c:	mov	r8, r0
   12520:	ldr	r0, [r4]
   12524:	mov	r9, r4
   12528:	add	r0, r0, r5
   1252c:	ldr	r0, [sl, r0, lsl #2]
   12530:	bl	1875c <lchmod@@Base+0x2048>
   12534:	mov	r3, r0
   12538:	mov	r0, #0
   1253c:	mov	r1, #0
   12540:	mov	r2, r8
   12544:	bl	11978 <error@plt>
   12548:	cmp	r7, #0
   1254c:	beq	12644 <__assert_fail@plt+0xa14>
   12550:	ldr	r0, [r9]
   12554:	sub	r0, r6, r0
   12558:	cmp	r0, #4
   1255c:	bne	12644 <__assert_fail@plt+0xa14>
   12560:	movw	r0, #49640	; 0xc1e8
   12564:	movw	r1, #44079	; 0xac2f
   12568:	movt	r0, #2
   1256c:	movt	r1, #1
   12570:	b	1261c <__assert_fail@plt+0x9ec>
   12574:	movw	r1, #43910	; 0xab86
   12578:	movt	r1, #1
   1257c:	mov	r0, #0
   12580:	mov	r2, #5
   12584:	bl	118b8 <dcgettext@plt>
   12588:	mov	r2, r0
   1258c:	mov	r0, #1
   12590:	mov	r1, #0
   12594:	bl	11978 <error@plt>
   12598:	bl	11a5c <__errno_location@plt>
   1259c:	movw	r1, #44129	; 0xac61
   125a0:	ldr	r4, [r0]
   125a4:	mov	r0, #0
   125a8:	mov	r2, #5
   125ac:	movt	r1, #1
   125b0:	bl	118b8 <dcgettext@plt>
   125b4:	mov	r5, r0
   125b8:	mov	r0, r9
   125bc:	bl	1875c <lchmod@@Base+0x2048>
   125c0:	mov	r3, r0
   125c4:	mov	r0, #1
   125c8:	mov	r1, r4
   125cc:	b	1236c <__assert_fail@plt+0x73c>
   125d0:	movw	r1, #43967	; 0xabbf
   125d4:	mov	r0, #0
   125d8:	mov	r2, #5
   125dc:	movt	r1, #1
   125e0:	bl	118b8 <dcgettext@plt>
   125e4:	mov	r2, r0
   125e8:	mov	r0, #0
   125ec:	mov	r1, #0
   125f0:	bl	11978 <error@plt>
   125f4:	cmp	r7, #0
   125f8:	bne	12644 <__assert_fail@plt+0xa14>
   125fc:	ldr	r0, [r4]
   12600:	sub	r0, r6, r0
   12604:	cmp	r0, #2
   12608:	bne	12644 <__assert_fail@plt+0xa14>
   1260c:	movw	r0, #49640	; 0xc1e8
   12610:	movw	r1, #44008	; 0xabe8
   12614:	movt	r0, #2
   12618:	movt	r1, #1
   1261c:	ldr	r4, [r0]
   12620:	mov	r0, #0
   12624:	mov	r2, #5
   12628:	bl	118b8 <dcgettext@plt>
   1262c:	movw	r2, #45362	; 0xb132
   12630:	mov	r3, r0
   12634:	mov	r0, r4
   12638:	mov	r1, #1
   1263c:	movt	r2, #1
   12640:	bl	11ab0 <__fprintf_chk@plt>
   12644:	mov	r0, #1
   12648:	bl	11d30 <__assert_fail@plt+0x100>
   1264c:	bl	11a5c <__errno_location@plt>
   12650:	ldr	r1, [r4]
   12654:	ldr	r4, [r0]
   12658:	mov	r0, #0
   1265c:	ldr	r2, [sl, r1, lsl #2]
   12660:	mov	r1, #3
   12664:	bl	185c8 <lchmod@@Base+0x1eb4>
   12668:	movw	r2, #44887	; 0xaf57
   1266c:	mov	r3, r0
   12670:	mov	r0, #1
   12674:	mov	r1, r4
   12678:	movt	r2, #1
   1267c:	bl	11978 <error@plt>
   12680:	bl	11a5c <__errno_location@plt>
   12684:	movw	r1, #44285	; 0xacfd
   12688:	ldr	r5, [r0]
   1268c:	mov	r0, #0
   12690:	mov	r2, #5
   12694:	movt	r1, #1
   12698:	bl	118b8 <dcgettext@plt>
   1269c:	mov	r6, r0
   126a0:	ldr	r0, [r4]
   126a4:	ldr	r1, [sl, r0, lsl #2]
   126a8:	mov	r0, #4
   126ac:	bl	18424 <lchmod@@Base+0x1d10>
   126b0:	mov	r3, r0
   126b4:	mov	r0, #1
   126b8:	mov	r1, r5
   126bc:	mov	r2, r6
   126c0:	bl	11978 <error@plt>
   126c4:	movw	r1, #44241	; 0xacd1
   126c8:	mov	r0, #0
   126cc:	mov	r2, #5
   126d0:	movt	r1, #1
   126d4:	bl	118b8 <dcgettext@plt>
   126d8:	mov	r2, r0
   126dc:	mov	r0, #1
   126e0:	mov	r1, #0
   126e4:	mov	r3, r4
   126e8:	str	r7, [sp]
   126ec:	bl	11978 <error@plt>
   126f0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   126f4:	add	fp, sp, #24
   126f8:	sub	sp, sp, #16
   126fc:	mov	r4, #0
   12700:	mov	r7, r0
   12704:	mov	r5, r2
   12708:	mov	r6, r1
   1270c:	str	r4, [sp, #4]
   12710:	str	r4, [sp]
   12714:	ldrb	r0, [r1]
   12718:	cmp	r0, #47	; 0x2f
   1271c:	beq	1273c <__assert_fail@plt+0xb0c>
   12720:	mov	r0, r6
   12724:	mov	r1, #2
   12728:	bl	12c4c <__assert_fail@plt+0x101c>
   1272c:	mov	r4, r0
   12730:	cmp	r0, #0
   12734:	mov	r6, r0
   12738:	beq	1288c <__assert_fail@plt+0xc5c>
   1273c:	add	r1, sp, #4
   12740:	mov	r0, r7
   12744:	mov	r2, r6
   12748:	mov	r3, r5
   1274c:	bl	117ec <selabel_lookup@plt>
   12750:	cmn	r0, #1
   12754:	ble	12864 <__assert_fail@plt+0xc34>
   12758:	mov	r0, #0
   1275c:	str	r0, [sp, #12]
   12760:	str	r0, [sp, #8]
   12764:	mov	r0, r6
   12768:	bl	13430 <__assert_fail@plt+0x1800>
   1276c:	mov	r6, r0
   12770:	add	r0, sp, #12
   12774:	bl	11948 <getcon@plt>
   12778:	mov	r9, #1
   1277c:	cmp	r0, #0
   12780:	bmi	127c0 <__assert_fail@plt+0xb90>
   12784:	add	r1, sp, #8
   12788:	mov	r0, r6
   1278c:	bl	18a1c <lchmod@@Base+0x2308>
   12790:	cmp	r0, #0
   12794:	bmi	127c0 <__assert_fail@plt+0xb90>
   12798:	mov	r0, r5
   1279c:	bl	11c00 <mode_to_security_class@plt>
   127a0:	cmp	r0, #0
   127a4:	beq	127c0 <__assert_fail@plt+0xb90>
   127a8:	mov	r2, r0
   127ac:	ldr	r1, [sp, #8]
   127b0:	ldr	r0, [sp, #12]
   127b4:	mov	r3, sp
   127b8:	bl	11b28 <security_compute_create@plt>
   127bc:	lsr	r9, r0, #31
   127c0:	bl	11a5c <__errno_location@plt>
   127c4:	ldr	r7, [r0]
   127c8:	mov	r5, r0
   127cc:	mov	r0, r6
   127d0:	bl	135bc <__assert_fail@plt+0x198c>
   127d4:	ldr	r0, [sp, #12]
   127d8:	bl	11b58 <freecon@plt>
   127dc:	ldr	r0, [sp, #8]
   127e0:	bl	11b58 <freecon@plt>
   127e4:	mvn	r8, #0
   127e8:	cmp	r9, #0
   127ec:	str	r7, [r5]
   127f0:	bne	1285c <__assert_fail@plt+0xc2c>
   127f4:	ldr	r0, [sp, #4]
   127f8:	bl	118ac <context_new@plt>
   127fc:	cmp	r0, #0
   12800:	beq	1285c <__assert_fail@plt+0xc2c>
   12804:	mov	r6, r0
   12808:	ldr	r0, [sp]
   1280c:	bl	118ac <context_new@plt>
   12810:	cmp	r0, #0
   12814:	beq	128a8 <__assert_fail@plt+0xc78>
   12818:	mov	r9, r0
   1281c:	mov	r0, r6
   12820:	bl	11840 <context_type_get@plt>
   12824:	cmp	r0, #0
   12828:	beq	128ac <__assert_fail@plt+0xc7c>
   1282c:	mov	r1, r0
   12830:	mov	r0, r9
   12834:	bl	118c4 <context_type_set@plt>
   12838:	cmp	r0, #0
   1283c:	bne	128ac <__assert_fail@plt+0xc7c>
   12840:	mov	r0, r9
   12844:	bl	11b88 <context_str@plt>
   12848:	cmp	r0, #0
   1284c:	beq	128ac <__assert_fail@plt+0xc7c>
   12850:	bl	11a50 <setfscreatecon@plt>
   12854:	mov	r8, r0
   12858:	b	128ac <__assert_fail@plt+0xc7c>
   1285c:	mov	r9, #0
   12860:	b	12884 <__assert_fail@plt+0xc54>
   12864:	bl	11a5c <__errno_location@plt>
   12868:	mov	r5, r0
   1286c:	ldr	r0, [r0]
   12870:	mvn	r8, #0
   12874:	mov	r9, #0
   12878:	cmp	r0, #2
   1287c:	moveq	r0, #61	; 0x3d
   12880:	streq	r0, [r5]
   12884:	mov	r6, #0
   12888:	b	128ac <__assert_fail@plt+0xc7c>
   1288c:	mov	r9, #0
   12890:	mvn	r8, #0
   12894:	bl	11a5c <__errno_location@plt>
   12898:	mov	r5, r0
   1289c:	mov	r6, #0
   128a0:	mov	r4, #0
   128a4:	b	128ac <__assert_fail@plt+0xc7c>
   128a8:	mov	r9, #0
   128ac:	ldr	r7, [r5]
   128b0:	mov	r0, r6
   128b4:	bl	119cc <context_free@plt>
   128b8:	mov	r0, r9
   128bc:	bl	119cc <context_free@plt>
   128c0:	ldr	r0, [sp, #4]
   128c4:	bl	11b58 <freecon@plt>
   128c8:	ldr	r0, [sp]
   128cc:	bl	11b58 <freecon@plt>
   128d0:	mov	r0, r4
   128d4:	bl	135bc <__assert_fail@plt+0x198c>
   128d8:	str	r7, [r5]
   128dc:	mov	r0, r8
   128e0:	sub	sp, fp, #24
   128e4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   128e8:	push	{r4, r5, r6, r7, fp, lr}
   128ec:	add	fp, sp, #16
   128f0:	sub	sp, sp, #8
   128f4:	mov	r5, r0
   128f8:	ldrb	r0, [r1]
   128fc:	mov	r6, r2
   12900:	mov	r4, #0
   12904:	cmp	r0, #47	; 0x2f
   12908:	beq	12928 <__assert_fail@plt+0xcf8>
   1290c:	mov	r0, r1
   12910:	mov	r1, #2
   12914:	bl	12c4c <__assert_fail@plt+0x101c>
   12918:	mov	r4, r0
   1291c:	cmp	r0, #0
   12920:	mov	r1, r0
   12924:	beq	129f4 <__assert_fail@plt+0xdc4>
   12928:	cmp	r6, #0
   1292c:	beq	129c0 <__assert_fail@plt+0xd90>
   12930:	mov	r7, #0
   12934:	stm	sp, {r1, r7}
   12938:	mov	r0, sp
   1293c:	mov	r1, #16
   12940:	mov	r2, #0
   12944:	bl	19458 <lchmod@@Base+0x2d44>
   12948:	mov	r6, r0
   1294c:	bl	13eb4 <__assert_fail@plt+0x2284>
   12950:	cmp	r0, #0
   12954:	beq	12988 <__assert_fail@plt+0xd58>
   12958:	mov	r7, #0
   1295c:	ldr	r1, [r6, #24]
   12960:	mov	r0, r5
   12964:	bl	12a00 <__assert_fail@plt+0xdd0>
   12968:	cmn	r0, #1
   1296c:	bgt	12978 <__assert_fail@plt+0xd48>
   12970:	bl	11a5c <__errno_location@plt>
   12974:	ldr	r7, [r0]
   12978:	mov	r0, r6
   1297c:	bl	13eb4 <__assert_fail@plt+0x2284>
   12980:	cmp	r0, #0
   12984:	bne	1295c <__assert_fail@plt+0xd2c>
   12988:	bl	11a5c <__errno_location@plt>
   1298c:	mov	r5, r0
   12990:	ldr	r0, [r0]
   12994:	cmp	r0, #0
   12998:	movne	r7, r0
   1299c:	mov	r0, r6
   129a0:	bl	13d2c <__assert_fail@plt+0x20fc>
   129a4:	cmp	r0, #0
   129a8:	mov	r0, r4
   129ac:	ldrne	r7, [r5]
   129b0:	bl	135bc <__assert_fail@plt+0x198c>
   129b4:	clz	r0, r7
   129b8:	lsr	r0, r0, #5
   129bc:	b	129f8 <__assert_fail@plt+0xdc8>
   129c0:	mov	r0, r5
   129c4:	bl	12a00 <__assert_fail@plt+0xdd0>
   129c8:	mov	r5, r0
   129cc:	bl	11a5c <__errno_location@plt>
   129d0:	ldr	r7, [r0]
   129d4:	mov	r6, r0
   129d8:	mov	r0, r4
   129dc:	bl	135bc <__assert_fail@plt+0x198c>
   129e0:	mvn	r0, #0
   129e4:	str	r7, [r6]
   129e8:	subs	r0, r5, r0
   129ec:	movwne	r0, #1
   129f0:	b	129f8 <__assert_fail@plt+0xdc8>
   129f4:	mov	r0, #0
   129f8:	sub	sp, fp, #16
   129fc:	pop	{r4, r5, r6, r7, fp, pc}
   12a00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a04:	add	fp, sp, #28
   12a08:	sub	sp, sp, #116	; 0x74
   12a0c:	mov	r6, r0
   12a10:	mov	r0, #0
   12a14:	mov	r7, r1
   12a18:	cmp	r6, #0
   12a1c:	str	r0, [sp, #4]
   12a20:	str	r0, [sp]
   12a24:	beq	12a74 <__assert_fail@plt+0xe44>
   12a28:	mov	r0, r7
   12a2c:	mov	r1, #32768	; 0x8000
   12a30:	bl	11984 <open64@plt>
   12a34:	mov	sl, r0
   12a38:	cmn	r0, #1
   12a3c:	beq	12ab0 <__assert_fail@plt+0xe80>
   12a40:	add	r1, sp, #8
   12a44:	mov	r0, sl
   12a48:	bl	1a620 <lchmod@@Base+0x3f0c>
   12a4c:	mov	r5, #1
   12a50:	cmn	r0, #1
   12a54:	bgt	12ae4 <__assert_fail@plt+0xeb4>
   12a58:	bl	11a5c <__errno_location@plt>
   12a5c:	ldr	r5, [r0]
   12a60:	mov	r4, r0
   12a64:	mov	r8, #0
   12a68:	mvn	r9, #0
   12a6c:	mov	r6, #0
   12a70:	b	12bf4 <__assert_fail@plt+0xfc4>
   12a74:	mov	r0, sp
   12a78:	bl	11b70 <getfscreatecon@plt>
   12a7c:	mvn	r9, #0
   12a80:	cmp	r0, #0
   12a84:	bmi	12c30 <__assert_fail@plt+0x1000>
   12a88:	ldr	r1, [sp]
   12a8c:	cmp	r1, #0
   12a90:	beq	12b50 <__assert_fail@plt+0xf20>
   12a94:	mov	r0, r7
   12a98:	bl	11858 <lsetfilecon@plt>
   12a9c:	mov	r9, r0
   12aa0:	bl	11a5c <__errno_location@plt>
   12aa4:	ldr	r5, [r0]
   12aa8:	mov	r4, r0
   12aac:	b	12c24 <__assert_fail@plt+0xff4>
   12ab0:	bl	11a5c <__errno_location@plt>
   12ab4:	ldr	r5, [r0]
   12ab8:	mov	r4, r0
   12abc:	mov	r8, #0
   12ac0:	mvn	r9, #0
   12ac4:	cmp	r5, #40	; 0x28
   12ac8:	bne	12c08 <__assert_fail@plt+0xfd8>
   12acc:	add	r1, sp, #8
   12ad0:	mov	r0, r7
   12ad4:	bl	1a630 <lchmod@@Base+0x3f1c>
   12ad8:	mov	r5, #0
   12adc:	cmn	r0, #1
   12ae0:	ble	12c00 <__assert_fail@plt+0xfd0>
   12ae4:	ldr	r3, [sp, #24]
   12ae8:	add	r1, sp, #4
   12aec:	mov	r0, r6
   12af0:	mov	r2, r7
   12af4:	bl	117ec <selabel_lookup@plt>
   12af8:	cmn	r0, #1
   12afc:	ble	12b30 <__assert_fail@plt+0xf00>
   12b00:	ldr	r0, [sp, #4]
   12b04:	bl	118ac <context_new@plt>
   12b08:	mvn	r9, #0
   12b0c:	cmp	r0, #0
   12b10:	beq	12b60 <__assert_fail@plt+0xf30>
   12b14:	mov	r8, r0
   12b18:	mov	r1, sp
   12b1c:	cmp	r5, #0
   12b20:	beq	12b6c <__assert_fail@plt+0xf3c>
   12b24:	mov	r0, sl
   12b28:	bl	18ac4 <lchmod@@Base+0x23b0>
   12b2c:	b	12b74 <__assert_fail@plt+0xf44>
   12b30:	bl	11a5c <__errno_location@plt>
   12b34:	ldr	r1, [r0]
   12b38:	mvn	r9, #0
   12b3c:	mov	r6, #0
   12b40:	cmp	r1, #2
   12b44:	moveq	r1, #61	; 0x3d
   12b48:	streq	r1, [r0]
   12b4c:	b	12b64 <__assert_fail@plt+0xf34>
   12b50:	bl	11a5c <__errno_location@plt>
   12b54:	mov	r1, #61	; 0x3d
   12b58:	str	r1, [r0]
   12b5c:	b	12c30 <__assert_fail@plt+0x1000>
   12b60:	mov	r6, #0
   12b64:	mov	r8, #0
   12b68:	b	12be0 <__assert_fail@plt+0xfb0>
   12b6c:	mov	r0, r7
   12b70:	bl	18aa8 <lchmod@@Base+0x2394>
   12b74:	cmp	r0, #0
   12b78:	bmi	12bdc <__assert_fail@plt+0xfac>
   12b7c:	ldr	r0, [sp]
   12b80:	bl	118ac <context_new@plt>
   12b84:	cmp	r0, #0
   12b88:	beq	12bdc <__assert_fail@plt+0xfac>
   12b8c:	mov	r6, r0
   12b90:	mov	r0, r8
   12b94:	bl	11840 <context_type_get@plt>
   12b98:	cmp	r0, #0
   12b9c:	beq	12be0 <__assert_fail@plt+0xfb0>
   12ba0:	mov	r1, r0
   12ba4:	mov	r0, r6
   12ba8:	bl	118c4 <context_type_set@plt>
   12bac:	cmp	r0, #0
   12bb0:	bne	12be0 <__assert_fail@plt+0xfb0>
   12bb4:	mov	r0, r6
   12bb8:	bl	11b88 <context_str@plt>
   12bbc:	cmp	r0, #0
   12bc0:	beq	12be0 <__assert_fail@plt+0xfb0>
   12bc4:	mov	r1, r0
   12bc8:	cmp	r5, #0
   12bcc:	beq	12c3c <__assert_fail@plt+0x100c>
   12bd0:	mov	r0, sl
   12bd4:	bl	11aec <fsetfilecon@plt>
   12bd8:	b	12c44 <__assert_fail@plt+0x1014>
   12bdc:	mov	r6, #0
   12be0:	bl	11a5c <__errno_location@plt>
   12be4:	ldr	r5, [r0]
   12be8:	mov	r4, r0
   12bec:	cmn	sl, #1
   12bf0:	beq	12c0c <__assert_fail@plt+0xfdc>
   12bf4:	mov	r0, sl
   12bf8:	bl	11bdc <close@plt>
   12bfc:	b	12c0c <__assert_fail@plt+0xfdc>
   12c00:	ldr	r5, [r4]
   12c04:	mov	r8, #0
   12c08:	mov	r6, #0
   12c0c:	mov	r0, r8
   12c10:	bl	119cc <context_free@plt>
   12c14:	mov	r0, r6
   12c18:	bl	119cc <context_free@plt>
   12c1c:	ldr	r0, [sp, #4]
   12c20:	bl	11b58 <freecon@plt>
   12c24:	ldr	r0, [sp]
   12c28:	bl	11b58 <freecon@plt>
   12c2c:	str	r5, [r4]
   12c30:	mov	r0, r9
   12c34:	sub	sp, fp, #28
   12c38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c3c:	mov	r0, r7
   12c40:	bl	11858 <lsetfilecon@plt>
   12c44:	mov	r9, r0
   12c48:	b	12be0 <__assert_fail@plt+0xfb0>
   12c4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c50:	add	fp, sp, #28
   12c54:	sub	sp, sp, #180	; 0xb4
   12c58:	sub	sp, sp, #3072	; 0xc00
   12c5c:	and	r7, r1, #3
   12c60:	mov	r8, r0
   12c64:	sub	r0, r7, #1
   12c68:	tst	r7, r0
   12c6c:	bne	12cf8 <__assert_fail@plt+0x10c8>
   12c70:	cmp	r8, #0
   12c74:	beq	12cf8 <__assert_fail@plt+0x10c8>
   12c78:	ldrb	r0, [r8]
   12c7c:	cmp	r0, #0
   12c80:	beq	12d14 <__assert_fail@plt+0x10e4>
   12c84:	mov	r4, r1
   12c88:	mov	r1, #1024	; 0x400
   12c8c:	sub	lr, fp, #1024	; 0x400
   12c90:	cmp	r0, #47	; 0x2f
   12c94:	str	r1, [fp, #-1060]	; 0xfffffbdc
   12c98:	str	r1, [sp, #52]	; 0x34
   12c9c:	str	r1, [sp, #1188]	; 0x4a4
   12ca0:	add	r1, sp, #1184	; 0x4a0
   12ca4:	sub	r2, lr, #40	; 0x28
   12ca8:	add	r1, r1, #8
   12cac:	add	r2, r2, #8
   12cb0:	str	r1, [sp, #16]
   12cb4:	str	r1, [sp, #1184]	; 0x4a0
   12cb8:	add	r1, sp, #48	; 0x30
   12cbc:	str	r2, [sp, #12]
   12cc0:	str	r2, [fp, #-1064]	; 0xfffffbd8
   12cc4:	add	r5, r1, #8
   12cc8:	mov	r0, r5
   12ccc:	str	r5, [sp, #48]	; 0x30
   12cd0:	str	r5, [sp, #8]
   12cd4:	bne	12d20 <__assert_fail@plt+0x10f0>
   12cd8:	mov	r1, r8
   12cdc:	mov	r2, #0
   12ce0:	mov	r3, #1024	; 0x400
   12ce4:	bl	11c24 <__mempcpy_chk@plt>
   12ce8:	mov	r6, r0
   12cec:	mov	r0, #47	; 0x2f
   12cf0:	strb	r0, [r6], #1
   12cf4:	b	12d40 <__assert_fail@plt+0x1110>
   12cf8:	bl	11a5c <__errno_location@plt>
   12cfc:	mov	r1, #22
   12d00:	mov	r4, #0
   12d04:	str	r1, [r0]
   12d08:	mov	r0, r4
   12d0c:	sub	sp, fp, #28
   12d10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d14:	bl	11a5c <__errno_location@plt>
   12d18:	mov	r1, #2
   12d1c:	b	12d00 <__assert_fail@plt+0x10d0>
   12d20:	mov	r1, #1024	; 0x400
   12d24:	bl	119f0 <getcwd@plt>
   12d28:	cmp	r0, #0
   12d2c:	beq	1324c <__assert_fail@plt+0x161c>
   12d30:	mov	r0, r5
   12d34:	mov	r1, #0
   12d38:	bl	118f4 <rawmemchr@plt>
   12d3c:	mov	r6, r0
   12d40:	ldrb	r0, [r8]
   12d44:	cmp	r0, #0
   12d48:	beq	13210 <__assert_fail@plt+0x15e0>
   12d4c:	and	r1, r4, #4
   12d50:	add	r9, sp, #48	; 0x30
   12d54:	str	r7, [sp, #32]
   12d58:	str	r1, [sp, #40]	; 0x28
   12d5c:	mov	r1, #0
   12d60:	str	r1, [sp, #24]
   12d64:	mov	r1, #0
   12d68:	str	r1, [sp, #36]	; 0x24
   12d6c:	mov	r1, #0
   12d70:	str	r1, [sp, #20]
   12d74:	uxtb	r1, r0
   12d78:	cmp	r1, #47	; 0x2f
   12d7c:	bne	12d8c <__assert_fail@plt+0x115c>
   12d80:	ldrb	r0, [r8, #1]!
   12d84:	cmp	r0, #47	; 0x2f
   12d88:	beq	12d80 <__assert_fail@plt+0x1150>
   12d8c:	mov	r1, r0
   12d90:	mov	sl, r8
   12d94:	b	12d9c <__assert_fail@plt+0x116c>
   12d98:	ldrb	r1, [sl, #1]!
   12d9c:	uxtb	r1, r1
   12da0:	cmp	r1, #0
   12da4:	cmpne	r1, #47	; 0x2f
   12da8:	bne	12d98 <__assert_fail@plt+0x1168>
   12dac:	sub	r2, sl, r8
   12db0:	cmp	r2, #1
   12db4:	beq	12dcc <__assert_fail@plt+0x119c>
   12db8:	cmp	r2, #2
   12dbc:	beq	12ddc <__assert_fail@plt+0x11ac>
   12dc0:	cmp	r2, #0
   12dc4:	bne	12e24 <__assert_fail@plt+0x11f4>
   12dc8:	b	13218 <__assert_fail@plt+0x15e8>
   12dcc:	uxtb	r0, r0
   12dd0:	cmp	r0, #46	; 0x2e
   12dd4:	bne	12e24 <__assert_fail@plt+0x11f4>
   12dd8:	b	12f18 <__assert_fail@plt+0x12e8>
   12ddc:	uxtb	r0, r0
   12de0:	cmp	r0, #46	; 0x2e
   12de4:	bne	12e24 <__assert_fail@plt+0x11f4>
   12de8:	ldrb	r0, [r8, #1]
   12dec:	cmp	r0, #46	; 0x2e
   12df0:	bne	12e24 <__assert_fail@plt+0x11f4>
   12df4:	add	r0, r5, #1
   12df8:	cmp	r6, r0
   12dfc:	bls	12f18 <__assert_fail@plt+0x12e8>
   12e00:	sub	r0, r6, #1
   12e04:	mov	r6, r0
   12e08:	cmp	r0, r5
   12e0c:	bls	12f18 <__assert_fail@plt+0x12e8>
   12e10:	mov	r0, r6
   12e14:	ldrb	r1, [r0, #-1]!
   12e18:	cmp	r1, #47	; 0x2f
   12e1c:	bne	12e04 <__assert_fail@plt+0x11d4>
   12e20:	b	12f18 <__assert_fail@plt+0x12e8>
   12e24:	ldrb	r0, [r6, #-1]
   12e28:	add	r4, r2, #2
   12e2c:	str	r2, [sp, #44]	; 0x2c
   12e30:	cmp	r0, #47	; 0x2f
   12e34:	movne	r0, #47	; 0x2f
   12e38:	strbne	r0, [r6], #1
   12e3c:	ldr	r0, [sp, #52]	; 0x34
   12e40:	add	r0, r5, r0
   12e44:	sub	r0, r0, r6
   12e48:	cmp	r0, r4
   12e4c:	bcs	12e84 <__assert_fail@plt+0x1254>
   12e50:	mov	r0, r9
   12e54:	bl	18978 <lchmod@@Base+0x2264>
   12e58:	cmp	r0, #0
   12e5c:	beq	13310 <__assert_fail@plt+0x16e0>
   12e60:	sub	r0, r6, r5
   12e64:	ldr	r5, [sp, #48]	; 0x30
   12e68:	ldr	r1, [sp, #52]	; 0x34
   12e6c:	add	r6, r5, r0
   12e70:	add	r0, r5, r1
   12e74:	sub	r0, r0, r6
   12e78:	cmp	r0, r4
   12e7c:	bcc	12e50 <__assert_fail@plt+0x1220>
   12e80:	ldr	r2, [sp, #44]	; 0x2c
   12e84:	mov	r0, r6
   12e88:	mov	r1, r8
   12e8c:	mvn	r3, #0
   12e90:	bl	11c24 <__mempcpy_chk@plt>
   12e94:	mov	r6, r0
   12e98:	mov	r0, #0
   12e9c:	strb	r0, [r6]
   12ea0:	ldr	r0, [sp, #40]	; 0x28
   12ea4:	cmp	r0, #0
   12ea8:	bne	12f0c <__assert_fail@plt+0x12dc>
   12eac:	ldr	r0, [sp, #1188]	; 0x4a4
   12eb0:	ldr	r7, [sp, #1184]	; 0x4a0
   12eb4:	sub	r9, r0, #1
   12eb8:	mov	r0, r5
   12ebc:	mov	r1, r7
   12ec0:	mov	r2, r9
   12ec4:	bl	11924 <readlink@plt>
   12ec8:	cmp	r0, r9
   12ecc:	blt	12ee4 <__assert_fail@plt+0x12b4>
   12ed0:	add	r0, sp, #1184	; 0x4a0
   12ed4:	bl	1890c <lchmod@@Base+0x21f8>
   12ed8:	cmp	r0, #0
   12edc:	bne	12eac <__assert_fail@plt+0x127c>
   12ee0:	b	13310 <__assert_fail@plt+0x16e0>
   12ee4:	mov	r4, r0
   12ee8:	cmp	r0, #0
   12eec:	add	r9, sp, #48	; 0x30
   12ef0:	bmi	12f0c <__assert_fail@plt+0x12dc>
   12ef4:	ldr	r0, [sp, #24]
   12ef8:	cmp	r0, #19
   12efc:	bgt	12f90 <__assert_fail@plt+0x1360>
   12f00:	add	r0, r0, #1
   12f04:	str	r0, [sp, #24]
   12f08:	b	130f8 <__assert_fail@plt+0x14c8>
   12f0c:	ldr	r7, [sp, #32]
   12f10:	cmp	r7, #2
   12f14:	bne	12f2c <__assert_fail@plt+0x12fc>
   12f18:	mov	r8, sl
   12f1c:	ldrb	r0, [r8]
   12f20:	cmp	r0, #0
   12f24:	bne	12d74 <__assert_fail@plt+0x1144>
   12f28:	b	13218 <__assert_fail@plt+0x15e8>
   12f2c:	ldrb	r0, [sl]
   12f30:	cmp	r0, #47	; 0x2f
   12f34:	bne	13060 <__assert_fail@plt+0x1430>
   12f38:	mov	r2, sl
   12f3c:	mov	r1, r2
   12f40:	ldrb	r3, [r2, #1]!
   12f44:	cmp	r3, #47	; 0x2f
   12f48:	beq	12f3c <__assert_fail@plt+0x130c>
   12f4c:	cmp	r3, #46	; 0x2e
   12f50:	bne	13058 <__assert_fail@plt+0x1428>
   12f54:	add	r2, r1, #2
   12f58:	ldrb	r3, [r2]
   12f5c:	cmp	r3, #47	; 0x2f
   12f60:	beq	12f3c <__assert_fail@plt+0x130c>
   12f64:	cmp	r3, #0
   12f68:	beq	12f84 <__assert_fail@plt+0x1354>
   12f6c:	cmp	r3, #46	; 0x2e
   12f70:	bne	13060 <__assert_fail@plt+0x1430>
   12f74:	ldrb	r1, [r1, #3]
   12f78:	cmp	r1, #47	; 0x2f
   12f7c:	cmpne	r1, #0
   12f80:	bne	13060 <__assert_fail@plt+0x1430>
   12f84:	mov	r0, #47	; 0x2f
   12f88:	strh	r0, [r6]
   12f8c:	b	13074 <__assert_fail@plt+0x1444>
   12f90:	ldrb	r0, [r8]
   12f94:	add	lr, sp, #1024	; 0x400
   12f98:	add	r2, lr, #56	; 0x38
   12f9c:	cmp	r0, #0
   12fa0:	beq	130f8 <__assert_fail@plt+0x14c8>
   12fa4:	ldr	r9, [sp, #44]	; 0x2c
   12fa8:	mov	r0, #0
   12fac:	movw	r1, #44891	; 0xaf5b
   12fb0:	movt	r1, #1
   12fb4:	strb	r0, [r6, -r9]
   12fb8:	ldrb	r0, [r5]
   12fbc:	cmp	r0, #0
   12fc0:	mov	r0, r5
   12fc4:	moveq	r0, r1
   12fc8:	mov	r1, r2
   12fcc:	bl	1a610 <lchmod@@Base+0x3efc>
   12fd0:	cmp	r0, #0
   12fd4:	bne	13320 <__assert_fail@plt+0x16f0>
   12fd8:	rsb	r0, r9, #0
   12fdc:	ldr	r9, [sp, #20]
   12fe0:	ldrb	r1, [r8]
   12fe4:	cmp	r9, #0
   12fe8:	strb	r1, [r6, r0]
   12fec:	bne	13024 <__assert_fail@plt+0x13f4>
   12ff0:	movw	r0, #26148	; 0x6624
   12ff4:	movw	r2, #25988	; 0x6584
   12ff8:	movw	r3, #26044	; 0x65bc
   12ffc:	mov	r1, #0
   13000:	movt	r0, #1
   13004:	movt	r2, #1
   13008:	movt	r3, #1
   1300c:	str	r0, [sp]
   13010:	mov	r0, #7
   13014:	bl	15ab4 <__assert_fail@plt+0x3e84>
   13018:	mov	r9, r0
   1301c:	cmp	r0, #0
   13020:	beq	13310 <__assert_fail@plt+0x16e0>
   13024:	add	lr, sp, #1024	; 0x400
   13028:	mov	r0, r9
   1302c:	mov	r1, r8
   13030:	add	r2, lr, #56	; 0x38
   13034:	bl	1356c <__assert_fail@plt+0x193c>
   13038:	cmp	r0, #0
   1303c:	str	r9, [sp, #20]
   13040:	beq	130e4 <__assert_fail@plt+0x14b4>
   13044:	ldr	r7, [sp, #32]
   13048:	cmp	r7, #2
   1304c:	bne	13314 <__assert_fail@plt+0x16e4>
   13050:	mov	r8, sl
   13054:	b	131cc <__assert_fail@plt+0x159c>
   13058:	cmp	r3, #0
   1305c:	beq	12f84 <__assert_fail@plt+0x1354>
   13060:	ldr	r1, [sp, #40]	; 0x28
   13064:	cmp	r1, #0
   13068:	beq	13094 <__assert_fail@plt+0x1464>
   1306c:	cmp	r0, #0
   13070:	bne	12f18 <__assert_fail@plt+0x12e8>
   13074:	mvn	r0, #99	; 0x63
   13078:	mov	r1, r5
   1307c:	mov	r2, #0
   13080:	mov	r3, #512	; 0x200
   13084:	bl	1187c <faccessat@plt>
   13088:	cmp	r0, #0
   1308c:	bne	130a4 <__assert_fail@plt+0x1474>
   13090:	b	12f18 <__assert_fail@plt+0x12e8>
   13094:	bl	11a5c <__errno_location@plt>
   13098:	ldr	r0, [r0]
   1309c:	cmp	r0, #22
   130a0:	beq	12f18 <__assert_fail@plt+0x12e8>
   130a4:	mov	r4, #1
   130a8:	cmp	r7, #1
   130ac:	bne	13238 <__assert_fail@plt+0x1608>
   130b0:	bl	11a5c <__errno_location@plt>
   130b4:	ldr	r0, [r0]
   130b8:	cmp	r0, #2
   130bc:	bne	13238 <__assert_fail@plt+0x1608>
   130c0:	movw	r1, #46089	; 0xb409
   130c4:	mov	r0, sl
   130c8:	movt	r1, #1
   130cc:	bl	11c18 <strspn@plt>
   130d0:	ldrb	r0, [sl, r0]
   130d4:	mov	r8, sl
   130d8:	cmp	r0, #0
   130dc:	beq	12f1c <__assert_fail@plt+0x12ec>
   130e0:	b	13238 <__assert_fail@plt+0x1608>
   130e4:	add	lr, sp, #1024	; 0x400
   130e8:	mov	r0, r9
   130ec:	mov	r1, r8
   130f0:	add	r2, lr, #56	; 0x38
   130f4:	bl	134f0 <__assert_fail@plt+0x18c0>
   130f8:	mov	r0, #0
   130fc:	strb	r0, [r7, r4]
   13100:	ldr	r0, [sp, #36]	; 0x24
   13104:	ldr	r8, [fp, #-1064]	; 0xfffffbd8
   13108:	tst	r0, #1
   1310c:	ldr	r0, [sp, #28]
   13110:	subne	r0, sl, r8
   13114:	str	r0, [sp, #28]
   13118:	mov	r0, sl
   1311c:	bl	11a20 <strlen@plt>
   13120:	mvn	r1, r4
   13124:	cmp	r0, r1
   13128:	bhi	13310 <__assert_fail@plt+0x16e0>
   1312c:	str	r0, [sp, #44]	; 0x2c
   13130:	add	r9, r0, r4
   13134:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   13138:	cmp	r0, r9
   1313c:	bhi	13164 <__assert_fail@plt+0x1534>
   13140:	sub	lr, fp, #1024	; 0x400
   13144:	sub	r0, lr, #40	; 0x28
   13148:	bl	18978 <lchmod@@Base+0x2264>
   1314c:	cmp	r0, #0
   13150:	beq	13310 <__assert_fail@plt+0x16e0>
   13154:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   13158:	cmp	r0, r9
   1315c:	bls	13140 <__assert_fail@plt+0x1510>
   13160:	ldr	r8, [fp, #-1064]	; 0xfffffbd8
   13164:	ldr	r0, [sp, #36]	; 0x24
   13168:	ldr	r1, [sp, #44]	; 0x2c
   1316c:	tst	r0, #1
   13170:	ldr	r0, [sp, #28]
   13174:	add	r2, r1, #1
   13178:	addne	sl, r8, r0
   1317c:	add	r0, r8, r4
   13180:	mov	r1, sl
   13184:	bl	11864 <memmove@plt>
   13188:	mov	r0, r8
   1318c:	mov	r1, r7
   13190:	mov	r2, r4
   13194:	bl	11894 <memcpy@plt>
   13198:	ldrb	r0, [r7]
   1319c:	cmp	r0, #47	; 0x2f
   131a0:	bne	131d4 <__assert_fail@plt+0x15a4>
   131a4:	mov	r0, r5
   131a8:	mov	r1, r7
   131ac:	mov	r2, #0
   131b0:	mvn	r3, #0
   131b4:	bl	11c24 <__mempcpy_chk@plt>
   131b8:	mov	r6, r0
   131bc:	mov	r0, #47	; 0x2f
   131c0:	strb	r0, [r6], #1
   131c4:	mov	r0, #1
   131c8:	str	r0, [sp, #36]	; 0x24
   131cc:	add	r9, sp, #48	; 0x30
   131d0:	b	12f1c <__assert_fail@plt+0x12ec>
   131d4:	add	r0, r5, #1
   131d8:	mov	r1, #1
   131dc:	add	r9, sp, #48	; 0x30
   131e0:	cmp	r6, r0
   131e4:	str	r1, [sp, #36]	; 0x24
   131e8:	bls	12f1c <__assert_fail@plt+0x12ec>
   131ec:	sub	r0, r6, #1
   131f0:	mov	r6, r0
   131f4:	cmp	r0, r5
   131f8:	bls	12f1c <__assert_fail@plt+0x12ec>
   131fc:	mov	r0, r6
   13200:	ldrb	r1, [r0, #-1]!
   13204:	cmp	r1, #47	; 0x2f
   13208:	bne	131f0 <__assert_fail@plt+0x15c0>
   1320c:	b	12f1c <__assert_fail@plt+0x12ec>
   13210:	mov	r0, #0
   13214:	str	r0, [sp, #20]
   13218:	add	r0, r5, #1
   1321c:	cmp	r6, r0
   13220:	bls	13234 <__assert_fail@plt+0x1604>
   13224:	mov	r0, r6
   13228:	ldrb	r1, [r0, #-1]!
   1322c:	cmp	r1, #47	; 0x2f
   13230:	moveq	r6, r0
   13234:	mov	r4, #0
   13238:	ldr	r0, [sp, #20]
   1323c:	cmp	r0, #0
   13240:	beq	132a4 <__assert_fail@plt+0x1674>
   13244:	bl	15de0 <__assert_fail@plt+0x41b0>
   13248:	b	132a4 <__assert_fail@plt+0x1674>
   1324c:	bl	11a5c <__errno_location@plt>
   13250:	ldr	r5, [sp, #8]
   13254:	mov	r6, r0
   13258:	add	r9, sp, #48	; 0x30
   1325c:	ldr	r0, [r6]
   13260:	cmp	r0, #34	; 0x22
   13264:	bne	13294 <__assert_fail@plt+0x1664>
   13268:	mov	r0, r9
   1326c:	bl	1890c <lchmod@@Base+0x21f8>
   13270:	cmp	r0, #0
   13274:	beq	13310 <__assert_fail@plt+0x16e0>
   13278:	ldr	r5, [sp, #48]	; 0x30
   1327c:	ldr	r1, [sp, #52]	; 0x34
   13280:	mov	r0, r5
   13284:	bl	119f0 <getcwd@plt>
   13288:	cmp	r0, #0
   1328c:	beq	1325c <__assert_fail@plt+0x162c>
   13290:	b	12d30 <__assert_fail@plt+0x1100>
   13294:	cmp	r0, #12
   13298:	beq	13310 <__assert_fail@plt+0x16e0>
   1329c:	mov	r4, #1
   132a0:	mov	r6, r5
   132a4:	ldr	r1, [sp, #12]
   132a8:	ldr	r0, [fp, #-1064]	; 0xfffffbd8
   132ac:	ldr	r7, [sp, #16]
   132b0:	cmp	r0, r1
   132b4:	beq	132bc <__assert_fail@plt+0x168c>
   132b8:	bl	135bc <__assert_fail@plt+0x198c>
   132bc:	ldr	r0, [sp, #1184]	; 0x4a0
   132c0:	cmp	r0, r7
   132c4:	beq	132cc <__assert_fail@plt+0x169c>
   132c8:	bl	135bc <__assert_fail@plt+0x198c>
   132cc:	cmp	r4, #0
   132d0:	beq	132f0 <__assert_fail@plt+0x16c0>
   132d4:	ldr	r0, [sp, #48]	; 0x30
   132d8:	ldr	r1, [sp, #8]
   132dc:	mov	r4, #0
   132e0:	cmp	r0, r1
   132e4:	beq	12d08 <__assert_fail@plt+0x10d8>
   132e8:	bl	135bc <__assert_fail@plt+0x198c>
   132ec:	b	12d08 <__assert_fail@plt+0x10d8>
   132f0:	mov	r0, #0
   132f4:	strb	r0, [r6], -r5
   132f8:	add	r0, sp, #48	; 0x30
   132fc:	add	r1, r6, #1
   13300:	bl	188a8 <lchmod@@Base+0x2194>
   13304:	mov	r4, r0
   13308:	cmp	r0, #0
   1330c:	bne	12d08 <__assert_fail@plt+0x10d8>
   13310:	bl	19414 <lchmod@@Base+0x2d00>
   13314:	bl	11a5c <__errno_location@plt>
   13318:	mov	r1, #40	; 0x28
   1331c:	str	r1, [r0]
   13320:	mov	r4, #1
   13324:	b	13238 <__assert_fail@plt+0x1608>
   13328:	movw	r1, #49656	; 0xc1f8
   1332c:	movt	r1, #2
   13330:	str	r0, [r1]
   13334:	bx	lr
   13338:	movw	r1, #49660	; 0xc1fc
   1333c:	movt	r1, #2
   13340:	strb	r0, [r1]
   13344:	bx	lr
   13348:	push	{r4, r5, r6, sl, fp, lr}
   1334c:	add	fp, sp, #16
   13350:	sub	sp, sp, #8
   13354:	movw	r0, #49644	; 0xc1ec
   13358:	movt	r0, #2
   1335c:	ldr	r0, [r0]
   13360:	bl	19ce4 <lchmod@@Base+0x35d0>
   13364:	cmp	r0, #0
   13368:	beq	13390 <__assert_fail@plt+0x1760>
   1336c:	movw	r0, #49660	; 0xc1fc
   13370:	movt	r0, #2
   13374:	ldrb	r0, [r0]
   13378:	cmp	r0, #0
   1337c:	beq	133b0 <__assert_fail@plt+0x1780>
   13380:	bl	11a5c <__errno_location@plt>
   13384:	ldr	r0, [r0]
   13388:	cmp	r0, #32
   1338c:	bne	133b0 <__assert_fail@plt+0x1780>
   13390:	movw	r0, #49640	; 0xc1e8
   13394:	movt	r0, #2
   13398:	ldr	r0, [r0]
   1339c:	bl	19ce4 <lchmod@@Base+0x35d0>
   133a0:	cmp	r0, #0
   133a4:	subeq	sp, fp, #16
   133a8:	popeq	{r4, r5, r6, sl, fp, pc}
   133ac:	b	13420 <__assert_fail@plt+0x17f0>
   133b0:	movw	r1, #44871	; 0xaf47
   133b4:	mov	r0, #0
   133b8:	mov	r2, #5
   133bc:	movt	r1, #1
   133c0:	bl	118b8 <dcgettext@plt>
   133c4:	mov	r4, r0
   133c8:	movw	r0, #49656	; 0xc1f8
   133cc:	movt	r0, #2
   133d0:	ldr	r6, [r0]
   133d4:	bl	11a5c <__errno_location@plt>
   133d8:	ldr	r5, [r0]
   133dc:	cmp	r6, #0
   133e0:	bne	133fc <__assert_fail@plt+0x17cc>
   133e4:	movw	r2, #44887	; 0xaf57
   133e8:	mov	r0, #0
   133ec:	mov	r1, r5
   133f0:	mov	r3, r4
   133f4:	movt	r2, #1
   133f8:	b	1341c <__assert_fail@plt+0x17ec>
   133fc:	mov	r0, r6
   13400:	bl	1851c <lchmod@@Base+0x1e08>
   13404:	movw	r2, #44883	; 0xaf53
   13408:	mov	r3, r0
   1340c:	str	r4, [sp]
   13410:	mov	r0, #0
   13414:	mov	r1, r5
   13418:	movt	r2, #1
   1341c:	bl	11978 <error@plt>
   13420:	movw	r0, #49556	; 0xc194
   13424:	movt	r0, #2
   13428:	ldr	r0, [r0]
   1342c:	bl	11888 <_exit@plt>
   13430:	push	{fp, lr}
   13434:	mov	fp, sp
   13438:	bl	13490 <__assert_fail@plt+0x1860>
   1343c:	cmp	r0, #0
   13440:	popne	{fp, pc}
   13444:	bl	19414 <lchmod@@Base+0x2d00>
   13448:	push	{r4, r5, r6, sl, fp, lr}
   1344c:	add	fp, sp, #16
   13450:	mov	r5, r0
   13454:	mov	r4, r0
   13458:	ldrb	r6, [r5], #-1
   1345c:	bl	19c64 <lchmod@@Base+0x3550>
   13460:	sub	r2, r0, r4
   13464:	sub	r0, r6, #47	; 0x2f
   13468:	clz	r0, r0
   1346c:	lsr	r1, r0, #5
   13470:	mov	r0, r2
   13474:	cmp	r2, r1
   13478:	bls	1348c <__assert_fail@plt+0x185c>
   1347c:	ldrb	r3, [r5, r0]
   13480:	sub	r2, r0, #1
   13484:	cmp	r3, #47	; 0x2f
   13488:	beq	13470 <__assert_fail@plt+0x1840>
   1348c:	pop	{r4, r5, r6, sl, fp, pc}
   13490:	push	{r4, r5, r6, sl, fp, lr}
   13494:	add	fp, sp, #16
   13498:	mov	r6, r0
   1349c:	bl	13448 <__assert_fail@plt+0x1818>
   134a0:	cmp	r0, #0
   134a4:	mov	r4, r0
   134a8:	addeq	r0, r0, #1
   134ac:	add	r0, r0, #1
   134b0:	bl	19be4 <lchmod@@Base+0x34d0>
   134b4:	mov	r5, r0
   134b8:	cmp	r0, #0
   134bc:	beq	134e8 <__assert_fail@plt+0x18b8>
   134c0:	mov	r0, r5
   134c4:	mov	r1, r6
   134c8:	mov	r2, r4
   134cc:	bl	11894 <memcpy@plt>
   134d0:	cmp	r4, #0
   134d4:	moveq	r0, #46	; 0x2e
   134d8:	moveq	r4, #1
   134dc:	strbeq	r0, [r5]
   134e0:	mov	r0, #0
   134e4:	strb	r0, [r5, r4]
   134e8:	mov	r0, r5
   134ec:	pop	{r4, r5, r6, sl, fp, pc}
   134f0:	push	{r4, r5, r6, r7, fp, lr}
   134f4:	add	fp, sp, #16
   134f8:	cmp	r0, #0
   134fc:	beq	13564 <__assert_fail@plt+0x1934>
   13500:	mov	r5, r0
   13504:	mov	r0, #24
   13508:	mov	r6, r2
   1350c:	mov	r7, r1
   13510:	bl	18fe8 <lchmod@@Base+0x28d4>
   13514:	mov	r4, r0
   13518:	mov	r0, r7
   1351c:	bl	193dc <lchmod@@Base+0x2cc8>
   13520:	str	r0, [r4]
   13524:	ldrd	r0, [r6, #96]	; 0x60
   13528:	str	r0, [r4, #8]
   1352c:	str	r1, [r4, #12]
   13530:	ldrd	r0, [r6]
   13534:	str	r1, [r4, #20]
   13538:	str	r0, [r4, #16]
   1353c:	mov	r0, r5
   13540:	mov	r1, r4
   13544:	bl	16430 <__assert_fail@plt+0x4800>
   13548:	cmp	r0, #0
   1354c:	beq	13568 <__assert_fail@plt+0x1938>
   13550:	cmp	r0, r4
   13554:	beq	13564 <__assert_fail@plt+0x1934>
   13558:	mov	r0, r4
   1355c:	pop	{r4, r5, r6, r7, fp, lr}
   13560:	b	16624 <__assert_fail@plt+0x49f4>
   13564:	pop	{r4, r5, r6, r7, fp, pc}
   13568:	bl	19414 <lchmod@@Base+0x2d00>
   1356c:	cmp	r0, #0
   13570:	moveq	r0, #0
   13574:	bxeq	lr
   13578:	push	{r4, r5, fp, lr}
   1357c:	add	fp, sp, #8
   13580:	sub	sp, sp, #24
   13584:	str	r1, [sp]
   13588:	mov	ip, sp
   1358c:	mov	r1, sp
   13590:	ldrd	r4, [r2, #96]	; 0x60
   13594:	add	r3, ip, #8
   13598:	add	ip, ip, #16
   1359c:	strd	r4, [r3]
   135a0:	ldrd	r2, [r2]
   135a4:	strd	r2, [ip]
   135a8:	bl	15800 <__assert_fail@plt+0x3bd0>
   135ac:	cmp	r0, #0
   135b0:	movwne	r0, #1
   135b4:	sub	sp, fp, #8
   135b8:	pop	{r4, r5, fp, pc}
   135bc:	push	{r4, r5, r6, sl, fp, lr}
   135c0:	add	fp, sp, #16
   135c4:	mov	r4, r0
   135c8:	bl	11a5c <__errno_location@plt>
   135cc:	ldr	r6, [r0]
   135d0:	mov	r5, r0
   135d4:	mov	r0, r4
   135d8:	bl	11870 <free@plt>
   135dc:	str	r6, [r5]
   135e0:	pop	{r4, r5, r6, sl, fp, pc}
   135e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   135e8:	add	fp, sp, #28
   135ec:	sub	sp, sp, #12
   135f0:	cmp	r1, #4096	; 0x1000
   135f4:	bcs	13610 <__assert_fail@plt+0x19e0>
   135f8:	mov	r6, r0
   135fc:	and	r0, r1, #516	; 0x204
   13600:	mov	r5, r1
   13604:	cmp	r0, #516	; 0x204
   13608:	tstne	r5, #18
   1360c:	bne	1362c <__assert_fail@plt+0x19fc>
   13610:	bl	11a5c <__errno_location@plt>
   13614:	mov	r1, #22
   13618:	str	r1, [r0]
   1361c:	mov	r8, #0
   13620:	mov	r0, r8
   13624:	sub	sp, fp, #28
   13628:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1362c:	mov	r0, #1
   13630:	mov	r1, #96	; 0x60
   13634:	mov	r9, r2
   13638:	bl	19b90 <lchmod@@Base+0x347c>
   1363c:	cmp	r0, #0
   13640:	beq	1361c <__assert_fail@plt+0x19ec>
   13644:	mov	r8, r0
   13648:	mvn	r0, #99	; 0x63
   1364c:	tst	r5, #2
   13650:	mov	r1, r5
   13654:	str	r0, [r8, #32]
   13658:	bic	r0, r5, #516	; 0x204
   1365c:	str	r9, [r8, #44]	; 0x2c
   13660:	orrne	r1, r0, #4
   13664:	str	r1, [r8, #48]	; 0x30
   13668:	ldr	r0, [r6]
   1366c:	cmp	r0, #0
   13670:	beq	136a4 <__assert_fail@plt+0x1a74>
   13674:	add	r4, r6, #4
   13678:	mov	r7, #0
   1367c:	bl	11a20 <strlen@plt>
   13680:	cmp	r0, r7
   13684:	movhi	r7, r0
   13688:	ldr	r0, [r4], #4
   1368c:	cmp	r0, #0
   13690:	bne	1367c <__assert_fail@plt+0x1a4c>
   13694:	add	r1, r7, #1
   13698:	cmp	r1, #4096	; 0x1000
   1369c:	movls	r1, #4096	; 0x1000
   136a0:	b	136a8 <__assert_fail@plt+0x1a78>
   136a4:	mov	r1, #4096	; 0x1000
   136a8:	mov	r0, r8
   136ac:	bl	1390c <__assert_fail@plt+0x1cdc>
   136b0:	cmp	r0, #0
   136b4:	beq	13900 <__assert_fail@plt+0x1cd0>
   136b8:	ldr	r0, [r6]
   136bc:	cmp	r0, #0
   136c0:	beq	136f0 <__assert_fail@plt+0x1ac0>
   136c4:	movw	r1, #44699	; 0xae9b
   136c8:	mov	r0, r8
   136cc:	mov	r2, #0
   136d0:	movt	r1, #1
   136d4:	bl	13980 <__assert_fail@plt+0x1d50>
   136d8:	cmp	r0, #0
   136dc:	beq	138f8 <__assert_fail@plt+0x1cc8>
   136e0:	mov	r4, r0
   136e4:	mvn	r0, #0
   136e8:	str	r0, [r4, #48]	; 0x30
   136ec:	b	136f4 <__assert_fail@plt+0x1ac4>
   136f0:	mov	r4, #0
   136f4:	cmp	r9, #0
   136f8:	beq	13708 <__assert_fail@plt+0x1ad8>
   136fc:	ldrb	r0, [r8, #49]	; 0x31
   13700:	ubfx	r0, r0, #2, #1
   13704:	b	1370c <__assert_fail@plt+0x1adc>
   13708:	mov	r0, #1
   1370c:	ldr	r7, [r6]
   13710:	cmp	r7, #0
   13714:	beq	13834 <__assert_fail@plt+0x1c04>
   13718:	eor	r0, r0, #1
   1371c:	and	r1, r5, #2048	; 0x800
   13720:	mov	sl, #0
   13724:	mov	r5, #0
   13728:	str	r0, [sp, #4]
   1372c:	mov	r0, #0
   13730:	str	r1, [sp, #8]
   13734:	str	r0, [sp]
   13738:	mov	r0, r7
   1373c:	bl	11a20 <strlen@plt>
   13740:	mov	r2, r0
   13744:	ldr	r0, [sp, #8]
   13748:	cmp	r0, #0
   1374c:	bne	13784 <__assert_fail@plt+0x1b54>
   13750:	cmp	r2, #3
   13754:	bcc	13784 <__assert_fail@plt+0x1b54>
   13758:	add	r0, r2, r7
   1375c:	ldrb	r0, [r0, #-1]
   13760:	cmp	r0, #47	; 0x2f
   13764:	bne	13784 <__assert_fail@plt+0x1b54>
   13768:	sub	r0, r7, #2
   1376c:	ldrb	r1, [r0, r2]
   13770:	cmp	r1, #47	; 0x2f
   13774:	bne	13784 <__assert_fail@plt+0x1b54>
   13778:	sub	r2, r2, #1
   1377c:	cmp	r2, #1
   13780:	bhi	1376c <__assert_fail@plt+0x1b3c>
   13784:	mov	r0, r8
   13788:	mov	r1, r7
   1378c:	bl	13980 <__assert_fail@plt+0x1d50>
   13790:	cmp	r0, #0
   13794:	beq	138e8 <__assert_fail@plt+0x1cb8>
   13798:	mov	r1, #0
   1379c:	ldr	r2, [sp, #4]
   137a0:	str	r4, [r0, #4]
   137a4:	mov	r7, r0
   137a8:	str	r1, [r0, #48]	; 0x30
   137ac:	add	r0, r0, #168	; 0xa8
   137b0:	str	r0, [r7, #24]
   137b4:	clz	r0, sl
   137b8:	lsr	r0, r0, #5
   137bc:	orrs	r0, r2, r0
   137c0:	bne	137d4 <__assert_fail@plt+0x1ba4>
   137c4:	mov	r0, #2
   137c8:	strd	r0, [r7, #112]	; 0x70
   137cc:	mov	r0, #11
   137d0:	b	137e8 <__assert_fail@plt+0x1bb8>
   137d4:	mov	r0, r8
   137d8:	mov	r1, r7
   137dc:	mov	r2, #0
   137e0:	bl	13a00 <__assert_fail@plt+0x1dd0>
   137e4:	mov	r1, #0
   137e8:	cmp	r9, #0
   137ec:	strh	r0, [r7, #56]	; 0x38
   137f0:	beq	13800 <__assert_fail@plt+0x1bd0>
   137f4:	str	sl, [r7, #8]
   137f8:	mov	sl, r7
   137fc:	b	13818 <__assert_fail@plt+0x1be8>
   13800:	cmp	sl, #0
   13804:	str	r1, [r7, #8]
   13808:	beq	1382c <__assert_fail@plt+0x1bfc>
   1380c:	ldr	r0, [sp]
   13810:	str	r7, [sp]
   13814:	str	r7, [r0, #8]
   13818:	ldr	r7, [r6, #4]!
   1381c:	add	r5, r5, #1
   13820:	cmp	r7, #0
   13824:	bne	13738 <__assert_fail@plt+0x1b08>
   13828:	b	1383c <__assert_fail@plt+0x1c0c>
   1382c:	str	r7, [sp]
   13830:	b	137f8 <__assert_fail@plt+0x1bc8>
   13834:	mov	sl, #0
   13838:	b	13860 <__assert_fail@plt+0x1c30>
   1383c:	cmp	r9, #0
   13840:	beq	13860 <__assert_fail@plt+0x1c30>
   13844:	cmp	r5, #2
   13848:	bcc	13860 <__assert_fail@plt+0x1c30>
   1384c:	mov	r0, r8
   13850:	mov	r1, sl
   13854:	mov	r2, r5
   13858:	bl	13b3c <__assert_fail@plt+0x1f0c>
   1385c:	mov	sl, r0
   13860:	movw	r1, #44699	; 0xae9b
   13864:	mov	r0, r8
   13868:	mov	r2, #0
   1386c:	movt	r1, #1
   13870:	bl	13980 <__assert_fail@plt+0x1d50>
   13874:	cmp	r0, #0
   13878:	str	r0, [r8]
   1387c:	beq	138e8 <__assert_fail@plt+0x1cb8>
   13880:	mov	r1, #9
   13884:	strh	r1, [r0, #56]	; 0x38
   13888:	mov	r1, #1
   1388c:	str	sl, [r0, #8]
   13890:	str	r1, [r0, #48]	; 0x30
   13894:	mov	r0, r8
   13898:	bl	13c30 <__assert_fail@plt+0x2000>
   1389c:	cmp	r0, #0
   138a0:	beq	138e8 <__assert_fail@plt+0x1cb8>
   138a4:	ldrh	r0, [r8, #48]	; 0x30
   138a8:	tst	r0, #516	; 0x204
   138ac:	bne	138d8 <__assert_fail@plt+0x1ca8>
   138b0:	movw	r1, #44891	; 0xaf5b
   138b4:	mov	r0, r8
   138b8:	movt	r1, #1
   138bc:	bl	13cbc <__assert_fail@plt+0x208c>
   138c0:	cmn	r0, #1
   138c4:	str	r0, [r8, #28]
   138c8:	bgt	138d8 <__assert_fail@plt+0x1ca8>
   138cc:	ldr	r0, [r8, #48]	; 0x30
   138d0:	orr	r0, r0, #4
   138d4:	str	r0, [r8, #48]	; 0x30
   138d8:	add	r0, r8, #60	; 0x3c
   138dc:	mvn	r1, #0
   138e0:	bl	16644 <__assert_fail@plt+0x4a14>
   138e4:	b	13620 <__assert_fail@plt+0x19f0>
   138e8:	mov	r0, sl
   138ec:	bl	13cec <__assert_fail@plt+0x20bc>
   138f0:	mov	r0, r4
   138f4:	bl	135bc <__assert_fail@plt+0x198c>
   138f8:	ldr	r0, [r8, #24]
   138fc:	bl	135bc <__assert_fail@plt+0x198c>
   13900:	mov	r0, r8
   13904:	bl	135bc <__assert_fail@plt+0x198c>
   13908:	b	1361c <__assert_fail@plt+0x19ec>
   1390c:	push	{r4, r5, fp, lr}
   13910:	add	fp, sp, #8
   13914:	mov	r4, r0
   13918:	ldr	r0, [r0, #36]	; 0x24
   1391c:	add	r1, r1, #256	; 0x100
   13920:	adds	r1, r1, r0
   13924:	bcc	13948 <__assert_fail@plt+0x1d18>
   13928:	ldr	r0, [r4, #24]
   1392c:	bl	135bc <__assert_fail@plt+0x198c>
   13930:	mov	r5, #0
   13934:	str	r5, [r4, #24]
   13938:	bl	11a5c <__errno_location@plt>
   1393c:	mov	r1, #36	; 0x24
   13940:	str	r1, [r0]
   13944:	b	13978 <__assert_fail@plt+0x1d48>
   13948:	str	r1, [r4, #36]	; 0x24
   1394c:	ldr	r0, [r4, #24]
   13950:	bl	19c14 <lchmod@@Base+0x3500>
   13954:	cmp	r0, #0
   13958:	beq	13968 <__assert_fail@plt+0x1d38>
   1395c:	mov	r5, #1
   13960:	str	r0, [r4, #24]
   13964:	b	13978 <__assert_fail@plt+0x1d48>
   13968:	ldr	r0, [r4, #24]
   1396c:	bl	135bc <__assert_fail@plt+0x198c>
   13970:	mov	r5, #0
   13974:	str	r5, [r4, #24]
   13978:	mov	r0, r5
   1397c:	pop	{r4, r5, fp, pc}
   13980:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13984:	add	fp, sp, #24
   13988:	mov	r5, r0
   1398c:	add	r0, r2, #176	; 0xb0
   13990:	mov	r6, r2
   13994:	mov	r8, r1
   13998:	bic	r0, r0, #7
   1399c:	bl	19be4 <lchmod@@Base+0x34d0>
   139a0:	cmp	r0, #0
   139a4:	beq	139f4 <__assert_fail@plt+0x1dc4>
   139a8:	add	r7, r0, #168	; 0xa8
   139ac:	mov	r4, r0
   139b0:	mov	r1, r8
   139b4:	mov	r2, r6
   139b8:	mov	r0, r7
   139bc:	bl	11894 <memcpy@plt>
   139c0:	mov	r0, #0
   139c4:	mov	r2, #196608	; 0x30000
   139c8:	strb	r0, [r7, r6]
   139cc:	str	r6, [r4, #52]	; 0x34
   139d0:	str	r5, [r4, #44]	; 0x2c
   139d4:	ldr	r1, [r5, #24]
   139d8:	str	r0, [r4, #12]
   139dc:	str	r0, [r4, #16]
   139e0:	str	r0, [r4, #20]
   139e4:	str	r2, [r4, #58]	; 0x3a
   139e8:	str	r1, [r4, #28]
   139ec:	str	r0, [r4, #32]
   139f0:	b	139f8 <__assert_fail@plt+0x1dc8>
   139f4:	mov	r4, #0
   139f8:	mov	r0, r4
   139fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13a00:	push	{r4, r5, r6, sl, fp, lr}
   13a04:	add	fp, sp, #16
   13a08:	mov	r4, r1
   13a0c:	ldr	r1, [r0, #48]	; 0x30
   13a10:	ldr	r3, [r4, #48]	; 0x30
   13a14:	add	r5, r4, #64	; 0x40
   13a18:	cmp	r3, #0
   13a1c:	andeq	r3, r1, #1
   13a20:	orreq	r2, r3, r2
   13a24:	cmp	r2, #0
   13a28:	andseq	r1, r1, #2
   13a2c:	beq	13a7c <__assert_fail@plt+0x1e4c>
   13a30:	ldr	r0, [r4, #24]
   13a34:	mov	r1, r5
   13a38:	bl	1a610 <lchmod@@Base+0x3efc>
   13a3c:	cmp	r0, #0
   13a40:	beq	13ac0 <__assert_fail@plt+0x1e90>
   13a44:	bl	11a5c <__errno_location@plt>
   13a48:	mov	r6, r0
   13a4c:	ldr	r0, [r0]
   13a50:	cmp	r0, #2
   13a54:	bne	13aa4 <__assert_fail@plt+0x1e74>
   13a58:	ldr	r0, [r4, #24]
   13a5c:	mov	r1, r5
   13a60:	bl	1a630 <lchmod@@Base+0x3f1c>
   13a64:	cmp	r0, #0
   13a68:	bne	13aa0 <__assert_fail@plt+0x1e70>
   13a6c:	mov	r0, #0
   13a70:	str	r0, [r6]
   13a74:	mov	r0, #13
   13a78:	pop	{r4, r5, r6, sl, fp, pc}
   13a7c:	ldr	r1, [r4, #24]
   13a80:	ldr	r0, [r0, #32]
   13a84:	mov	r2, r5
   13a88:	mov	r3, #256	; 0x100
   13a8c:	bl	1a640 <lchmod@@Base+0x3f2c>
   13a90:	cmp	r0, #0
   13a94:	beq	13ac0 <__assert_fail@plt+0x1e90>
   13a98:	bl	11a5c <__errno_location@plt>
   13a9c:	mov	r6, r0
   13aa0:	ldr	r0, [r6]
   13aa4:	str	r0, [r4, #32]
   13aa8:	mov	r0, r5
   13aac:	mov	r1, #0
   13ab0:	mov	r2, #104	; 0x68
   13ab4:	bl	11a80 <memset@plt>
   13ab8:	mov	r0, #10
   13abc:	pop	{r4, r5, r6, sl, fp, pc}
   13ac0:	ldr	r0, [r4, #80]	; 0x50
   13ac4:	and	r0, r0, #61440	; 0xf000
   13ac8:	cmp	r0, #40960	; 0xa000
   13acc:	beq	13b24 <__assert_fail@plt+0x1ef4>
   13ad0:	cmp	r0, #32768	; 0x8000
   13ad4:	beq	13b2c <__assert_fail@plt+0x1efc>
   13ad8:	cmp	r0, #16384	; 0x4000
   13adc:	bne	13b34 <__assert_fail@plt+0x1f04>
   13ae0:	ldrb	r1, [r4, #168]	; 0xa8
   13ae4:	mov	r0, #1
   13ae8:	cmp	r1, #46	; 0x2e
   13aec:	bne	13b38 <__assert_fail@plt+0x1f08>
   13af0:	ldrb	r1, [r4, #169]	; 0xa9
   13af4:	cmp	r1, #0
   13af8:	beq	13b10 <__assert_fail@plt+0x1ee0>
   13afc:	cmp	r1, #46	; 0x2e
   13b00:	bne	13b38 <__assert_fail@plt+0x1f08>
   13b04:	ldrb	r1, [r4, #170]	; 0xaa
   13b08:	cmp	r1, #0
   13b0c:	popne	{r4, r5, r6, sl, fp, pc}
   13b10:	ldr	r1, [r4, #48]	; 0x30
   13b14:	mov	r0, #5
   13b18:	cmp	r1, #0
   13b1c:	movweq	r0, #1
   13b20:	pop	{r4, r5, r6, sl, fp, pc}
   13b24:	mov	r0, #12
   13b28:	pop	{r4, r5, r6, sl, fp, pc}
   13b2c:	mov	r0, #8
   13b30:	pop	{r4, r5, r6, sl, fp, pc}
   13b34:	mov	r0, #3
   13b38:	pop	{r4, r5, r6, sl, fp, pc}
   13b3c:	push	{r4, r5, r6, r7, fp, lr}
   13b40:	add	fp, sp, #16
   13b44:	mov	r6, r0
   13b48:	ldr	r7, [r0, #44]	; 0x2c
   13b4c:	ldr	r0, [r0, #40]	; 0x28
   13b50:	mov	r5, r2
   13b54:	mov	r4, r1
   13b58:	cmp	r0, r2
   13b5c:	bcs	13b8c <__assert_fail@plt+0x1f5c>
   13b60:	add	r1, r5, #40	; 0x28
   13b64:	cmn	r1, #-1073741823	; 0xc0000001
   13b68:	str	r1, [r6, #40]	; 0x28
   13b6c:	bhi	13c00 <__assert_fail@plt+0x1fd0>
   13b70:	ldr	r0, [r6, #8]
   13b74:	lsl	r1, r1, #2
   13b78:	bl	19c14 <lchmod@@Base+0x3500>
   13b7c:	cmp	r0, #0
   13b80:	beq	13c00 <__assert_fail@plt+0x1fd0>
   13b84:	str	r0, [r6, #8]
   13b88:	b	13b90 <__assert_fail@plt+0x1f60>
   13b8c:	ldr	r0, [r6, #8]
   13b90:	cmp	r4, #0
   13b94:	beq	13bac <__assert_fail@plt+0x1f7c>
   13b98:	str	r4, [r0], #4
   13b9c:	ldr	r4, [r4, #8]
   13ba0:	cmp	r4, #0
   13ba4:	bne	13b98 <__assert_fail@plt+0x1f68>
   13ba8:	ldr	r0, [r6, #8]
   13bac:	mov	r1, r5
   13bb0:	mov	r2, #4
   13bb4:	mov	r3, r7
   13bb8:	bl	11b4c <qsort@plt>
   13bbc:	ldr	r0, [r6, #8]
   13bc0:	cmp	r5, #1
   13bc4:	ldr	r4, [r0]
   13bc8:	mov	r1, r4
   13bcc:	beq	13c20 <__assert_fail@plt+0x1ff0>
   13bd0:	ldr	r1, [r0, #4]!
   13bd4:	str	r1, [r4, #8]
   13bd8:	subs	r1, r5, #2
   13bdc:	beq	13c18 <__assert_fail@plt+0x1fe8>
   13be0:	mov	r2, r0
   13be4:	ldr	r3, [r2, #4]!
   13be8:	ldr	r0, [r0]
   13bec:	subs	r1, r1, #1
   13bf0:	str	r3, [r0, #8]
   13bf4:	mov	r0, r2
   13bf8:	bne	13be4 <__assert_fail@plt+0x1fb4>
   13bfc:	b	13c1c <__assert_fail@plt+0x1fec>
   13c00:	ldr	r0, [r6, #8]
   13c04:	bl	135bc <__assert_fail@plt+0x198c>
   13c08:	mov	r0, #0
   13c0c:	str	r0, [r6, #40]	; 0x28
   13c10:	str	r0, [r6, #8]
   13c14:	b	13c28 <__assert_fail@plt+0x1ff8>
   13c18:	mov	r2, r0
   13c1c:	ldr	r1, [r2]
   13c20:	mov	r0, #0
   13c24:	str	r0, [r1, #8]
   13c28:	mov	r0, r4
   13c2c:	pop	{r4, r5, r6, r7, fp, pc}
   13c30:	push	{r4, r5, fp, lr}
   13c34:	add	fp, sp, #8
   13c38:	sub	sp, sp, #8
   13c3c:	mov	r4, r0
   13c40:	ldrh	r0, [r0, #48]	; 0x30
   13c44:	movw	r1, #258	; 0x102
   13c48:	tst	r0, r1
   13c4c:	beq	13c8c <__assert_fail@plt+0x205c>
   13c50:	movw	r0, #13756	; 0x35bc
   13c54:	movw	r2, #21540	; 0x5424
   13c58:	movw	r3, #21572	; 0x5444
   13c5c:	mov	r1, #0
   13c60:	mov	r5, #0
   13c64:	movt	r0, #1
   13c68:	movt	r2, #1
   13c6c:	movt	r3, #1
   13c70:	str	r0, [sp]
   13c74:	mov	r0, #31
   13c78:	bl	15ab4 <__assert_fail@plt+0x3e84>
   13c7c:	cmp	r0, #0
   13c80:	str	r0, [r4, #56]	; 0x38
   13c84:	movne	r5, #1
   13c88:	b	13cb0 <__assert_fail@plt+0x2080>
   13c8c:	mov	r0, #32
   13c90:	bl	19be4 <lchmod@@Base+0x34d0>
   13c94:	cmp	r0, #0
   13c98:	str	r0, [r4, #56]	; 0x38
   13c9c:	beq	13cac <__assert_fail@plt+0x207c>
   13ca0:	bl	19d64 <lchmod@@Base+0x3650>
   13ca4:	mov	r5, #1
   13ca8:	b	13cb0 <__assert_fail@plt+0x2080>
   13cac:	mov	r5, #0
   13cb0:	mov	r0, r5
   13cb4:	sub	sp, fp, #8
   13cb8:	pop	{r4, r5, fp, pc}
   13cbc:	ldr	r3, [r0, #48]	; 0x30
   13cc0:	mov	r2, #32768	; 0x8000
   13cc4:	and	r2, r2, r3, lsl #11
   13cc8:	tst	r3, #512	; 0x200
   13ccc:	orr	r2, r2, #18688	; 0x4900
   13cd0:	orr	r2, r2, #524288	; 0x80000
   13cd4:	bne	13ce4 <__assert_fail@plt+0x20b4>
   13cd8:	mov	r0, r1
   13cdc:	mov	r1, r2
   13ce0:	b	1a0c4 <lchmod@@Base+0x39b0>
   13ce4:	ldr	r0, [r0, #32]
   13ce8:	b	16cd8 <lchmod@@Base+0x5c4>
   13cec:	push	{r4, r6, r7, sl, fp, lr}
   13cf0:	add	fp, sp, #16
   13cf4:	cmp	r0, #0
   13cf8:	beq	13d28 <__assert_fail@plt+0x20f8>
   13cfc:	mov	r4, r0
   13d00:	ldrd	r6, [r4, #8]
   13d04:	cmp	r7, #0
   13d08:	beq	13d14 <__assert_fail@plt+0x20e4>
   13d0c:	mov	r0, r7
   13d10:	bl	11c0c <closedir@plt>
   13d14:	mov	r0, r4
   13d18:	bl	135bc <__assert_fail@plt+0x198c>
   13d1c:	cmp	r6, #0
   13d20:	mov	r4, r6
   13d24:	bne	13d00 <__assert_fail@plt+0x20d0>
   13d28:	pop	{r4, r6, r7, sl, fp, pc}
   13d2c:	push	{r4, r5, fp, lr}
   13d30:	add	fp, sp, #8
   13d34:	mov	r4, r0
   13d38:	ldr	r0, [r0]
   13d3c:	cmp	r0, #0
   13d40:	beq	13d80 <__assert_fail@plt+0x2150>
   13d44:	ldr	r1, [r0, #48]	; 0x30
   13d48:	cmp	r1, #0
   13d4c:	bmi	13d74 <__assert_fail@plt+0x2144>
   13d50:	ldr	r5, [r0, #8]
   13d54:	cmp	r5, #0
   13d58:	ldreq	r5, [r0, #4]
   13d5c:	bl	135bc <__assert_fail@plt+0x198c>
   13d60:	ldr	r0, [r5, #48]	; 0x30
   13d64:	cmn	r0, #1
   13d68:	mov	r0, r5
   13d6c:	bgt	13d50 <__assert_fail@plt+0x2120>
   13d70:	b	13d78 <__assert_fail@plt+0x2148>
   13d74:	mov	r5, r0
   13d78:	mov	r0, r5
   13d7c:	bl	135bc <__assert_fail@plt+0x198c>
   13d80:	ldr	r0, [r4, #4]
   13d84:	cmp	r0, #0
   13d88:	blne	13cec <__assert_fail@plt+0x20bc>
   13d8c:	ldr	r0, [r4, #8]
   13d90:	bl	135bc <__assert_fail@plt+0x198c>
   13d94:	ldr	r0, [r4, #24]
   13d98:	bl	135bc <__assert_fail@plt+0x198c>
   13d9c:	ldr	r0, [r4, #48]	; 0x30
   13da0:	tst	r0, #512	; 0x200
   13da4:	bne	13dd0 <__assert_fail@plt+0x21a0>
   13da8:	mov	r5, #0
   13dac:	tst	r0, #4
   13db0:	bne	13e0c <__assert_fail@plt+0x21dc>
   13db4:	ldr	r0, [r4, #28]
   13db8:	bl	11b40 <fchdir@plt>
   13dbc:	cmp	r0, #0
   13dc0:	beq	13de8 <__assert_fail@plt+0x21b8>
   13dc4:	bl	11a5c <__errno_location@plt>
   13dc8:	ldr	r5, [r0]
   13dcc:	b	13dec <__assert_fail@plt+0x21bc>
   13dd0:	ldr	r0, [r4, #32]
   13dd4:	mov	r5, #0
   13dd8:	cmp	r0, #0
   13ddc:	bmi	13e0c <__assert_fail@plt+0x21dc>
   13de0:	bl	11bdc <close@plt>
   13de4:	b	13dfc <__assert_fail@plt+0x21cc>
   13de8:	mov	r5, #0
   13dec:	ldr	r0, [r4, #28]
   13df0:	bl	11bdc <close@plt>
   13df4:	cmp	r5, #0
   13df8:	bne	13e0c <__assert_fail@plt+0x21dc>
   13dfc:	cmp	r0, #0
   13e00:	beq	13e0c <__assert_fail@plt+0x21dc>
   13e04:	bl	11a5c <__errno_location@plt>
   13e08:	ldr	r5, [r0]
   13e0c:	add	r0, r4, #60	; 0x3c
   13e10:	bl	13e54 <__assert_fail@plt+0x2224>
   13e14:	ldr	r0, [r4, #52]	; 0x34
   13e18:	cmp	r0, #0
   13e1c:	beq	13e24 <__assert_fail@plt+0x21f4>
   13e20:	bl	15de0 <__assert_fail@plt+0x41b0>
   13e24:	mov	r0, r4
   13e28:	bl	13e8c <__assert_fail@plt+0x225c>
   13e2c:	mov	r0, r4
   13e30:	bl	135bc <__assert_fail@plt+0x198c>
   13e34:	cmp	r5, #0
   13e38:	beq	13e4c <__assert_fail@plt+0x221c>
   13e3c:	bl	11a5c <__errno_location@plt>
   13e40:	str	r5, [r0]
   13e44:	mvn	r0, #0
   13e48:	pop	{r4, r5, fp, pc}
   13e4c:	mov	r0, #0
   13e50:	pop	{r4, r5, fp, pc}
   13e54:	push	{r4, sl, fp, lr}
   13e58:	add	fp, sp, #8
   13e5c:	mov	r4, r0
   13e60:	bl	16668 <__assert_fail@plt+0x4a38>
   13e64:	cmp	r0, #0
   13e68:	bne	13e88 <__assert_fail@plt+0x2258>
   13e6c:	mov	r0, r4
   13e70:	bl	166bc <__assert_fail@plt+0x4a8c>
   13e74:	cmp	r0, #0
   13e78:	bmi	13e80 <__assert_fail@plt+0x2250>
   13e7c:	bl	11bdc <close@plt>
   13e80:	mov	r0, r4
   13e84:	b	13e60 <__assert_fail@plt+0x2230>
   13e88:	pop	{r4, sl, fp, pc}
   13e8c:	ldrh	r1, [r0, #48]	; 0x30
   13e90:	movw	r2, #258	; 0x102
   13e94:	tst	r1, r2
   13e98:	beq	13eac <__assert_fail@plt+0x227c>
   13e9c:	ldr	r0, [r0, #56]	; 0x38
   13ea0:	cmp	r0, #0
   13ea4:	bxeq	lr
   13ea8:	b	15de0 <__assert_fail@plt+0x41b0>
   13eac:	ldr	r0, [r0, #56]	; 0x38
   13eb0:	b	135bc <__assert_fail@plt+0x198c>
   13eb4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13eb8:	add	fp, sp, #24
   13ebc:	ldr	r6, [r0]
   13ec0:	mov	r5, #0
   13ec4:	cmp	r6, #0
   13ec8:	beq	144b8 <__assert_fail@plt+0x2888>
   13ecc:	ldr	r1, [r0, #48]	; 0x30
   13ed0:	mov	r4, r0
   13ed4:	tst	r1, #8192	; 0x2000
   13ed8:	bne	144b8 <__assert_fail@plt+0x2888>
   13edc:	ldrh	r0, [r6, #60]	; 0x3c
   13ee0:	mov	r2, #3
   13ee4:	strh	r2, [r6, #60]	; 0x3c
   13ee8:	cmp	r0, #1
   13eec:	beq	13f5c <__assert_fail@plt+0x232c>
   13ef0:	cmp	r0, #2
   13ef4:	bne	13f74 <__assert_fail@plt+0x2344>
   13ef8:	ldrh	r2, [r6, #56]	; 0x38
   13efc:	bic	r3, r2, #1
   13f00:	cmp	r3, #12
   13f04:	bne	13f78 <__assert_fail@plt+0x2348>
   13f08:	mov	r0, r4
   13f0c:	mov	r1, r6
   13f10:	mov	r2, #1
   13f14:	bl	13a00 <__assert_fail@plt+0x1dd0>
   13f18:	cmp	r0, #1
   13f1c:	strh	r0, [r6, #56]	; 0x38
   13f20:	bne	1430c <__assert_fail@plt+0x26dc>
   13f24:	ldrb	r0, [r4, #48]	; 0x30
   13f28:	tst	r0, #4
   13f2c:	bne	1430c <__assert_fail@plt+0x26dc>
   13f30:	movw	r1, #44891	; 0xaf5b
   13f34:	mov	r0, r4
   13f38:	movt	r1, #1
   13f3c:	bl	13cbc <__assert_fail@plt+0x208c>
   13f40:	cmn	r0, #1
   13f44:	str	r0, [r6, #36]	; 0x24
   13f48:	ble	142f8 <__assert_fail@plt+0x26c8>
   13f4c:	ldrh	r0, [r6, #58]	; 0x3a
   13f50:	orr	r0, r0, #2
   13f54:	strh	r0, [r6, #58]	; 0x3a
   13f58:	b	1430c <__assert_fail@plt+0x26dc>
   13f5c:	mov	r0, r4
   13f60:	mov	r1, r6
   13f64:	mov	r2, #0
   13f68:	bl	13a00 <__assert_fail@plt+0x1dd0>
   13f6c:	strh	r0, [r6, #56]	; 0x38
   13f70:	b	13fc8 <__assert_fail@plt+0x2398>
   13f74:	ldrh	r2, [r6, #56]	; 0x38
   13f78:	cmp	r2, #1
   13f7c:	bne	13fd0 <__assert_fail@plt+0x23a0>
   13f80:	cmp	r0, #4
   13f84:	bne	14060 <__assert_fail@plt+0x2430>
   13f88:	ldrb	r0, [r6, #58]	; 0x3a
   13f8c:	tst	r0, #2
   13f90:	beq	13f9c <__assert_fail@plt+0x236c>
   13f94:	ldr	r0, [r6, #36]	; 0x24
   13f98:	bl	11bdc <close@plt>
   13f9c:	ldr	r0, [r4, #4]
   13fa0:	cmp	r0, #0
   13fa4:	beq	13fb4 <__assert_fail@plt+0x2384>
   13fa8:	bl	13cec <__assert_fail@plt+0x20bc>
   13fac:	mov	r0, #0
   13fb0:	str	r0, [r4, #4]
   13fb4:	mov	r0, #6
   13fb8:	strh	r0, [r6, #56]	; 0x38
   13fbc:	mov	r0, r4
   13fc0:	mov	r1, r6
   13fc4:	bl	144c4 <__assert_fail@plt+0x2894>
   13fc8:	mov	r5, r6
   13fcc:	b	144b8 <__assert_fail@plt+0x2888>
   13fd0:	ldr	r5, [r6, #8]
   13fd4:	cmp	r5, #0
   13fd8:	beq	140f8 <__assert_fail@plt+0x24c8>
   13fdc:	mov	r0, r6
   13fe0:	str	r5, [r4]
   13fe4:	bl	135bc <__assert_fail@plt+0x198c>
   13fe8:	ldr	r0, [r5, #48]	; 0x30
   13fec:	cmp	r0, #0
   13ff0:	beq	14144 <__assert_fail@plt+0x2514>
   13ff4:	ldrh	r0, [r5, #60]	; 0x3c
   13ff8:	mov	r6, r5
   13ffc:	cmp	r0, #4
   14000:	beq	13fd0 <__assert_fail@plt+0x23a0>
   14004:	cmp	r0, #2
   14008:	bne	143a0 <__assert_fail@plt+0x2770>
   1400c:	mov	r0, r4
   14010:	mov	r1, r5
   14014:	mov	r2, #1
   14018:	bl	13a00 <__assert_fail@plt+0x1dd0>
   1401c:	cmp	r0, #1
   14020:	strh	r0, [r5, #56]	; 0x38
   14024:	bne	14398 <__assert_fail@plt+0x2768>
   14028:	ldrb	r0, [r4, #48]	; 0x30
   1402c:	tst	r0, #4
   14030:	bne	14398 <__assert_fail@plt+0x2768>
   14034:	movw	r1, #44891	; 0xaf5b
   14038:	mov	r0, r4
   1403c:	movt	r1, #1
   14040:	bl	13cbc <__assert_fail@plt+0x208c>
   14044:	cmn	r0, #1
   14048:	str	r0, [r5, #36]	; 0x24
   1404c:	ble	14384 <__assert_fail@plt+0x2754>
   14050:	ldrh	r0, [r5, #58]	; 0x3a
   14054:	orr	r0, r0, #2
   14058:	strh	r0, [r5, #58]	; 0x3a
   1405c:	b	14398 <__assert_fail@plt+0x2768>
   14060:	tst	r1, #64	; 0x40
   14064:	beq	14088 <__assert_fail@plt+0x2458>
   14068:	ldr	r0, [r4, #16]
   1406c:	ldr	r2, [r6, #64]	; 0x40
   14070:	ldr	r3, [r4, #20]
   14074:	ldr	r5, [r6, #68]	; 0x44
   14078:	eor	r3, r5, r3
   1407c:	eor	r0, r2, r0
   14080:	orrs	r0, r0, r3
   14084:	bne	13f88 <__assert_fail@plt+0x2358>
   14088:	ldr	r0, [r4, #4]
   1408c:	cmp	r0, #0
   14090:	beq	14204 <__assert_fail@plt+0x25d4>
   14094:	tst	r1, #4096	; 0x1000
   14098:	bne	141f0 <__assert_fail@plt+0x25c0>
   1409c:	ldr	r3, [r6, #24]
   140a0:	mov	r0, r4
   140a4:	mov	r1, r6
   140a8:	mvn	r2, #0
   140ac:	bl	1459c <__assert_fail@plt+0x296c>
   140b0:	cmp	r0, #0
   140b4:	beq	1421c <__assert_fail@plt+0x25ec>
   140b8:	bl	11a5c <__errno_location@plt>
   140bc:	ldr	r0, [r0]
   140c0:	str	r0, [r6, #32]
   140c4:	ldrh	r0, [r6, #58]	; 0x3a
   140c8:	orr	r0, r0, #1
   140cc:	strh	r0, [r6, #58]	; 0x3a
   140d0:	ldr	r0, [r4, #4]
   140d4:	cmp	r0, #0
   140d8:	beq	1421c <__assert_fail@plt+0x25ec>
   140dc:	ldmib	r0, {r1, r2}
   140e0:	cmp	r2, #0
   140e4:	ldr	r1, [r1, #24]
   140e8:	str	r1, [r0, #24]
   140ec:	mov	r0, r2
   140f0:	bne	140dc <__assert_fail@plt+0x24ac>
   140f4:	b	1421c <__assert_fail@plt+0x25ec>
   140f8:	ldr	r5, [r6, #4]
   140fc:	ldr	r0, [r5, #12]
   14100:	cmp	r0, #0
   14104:	beq	1426c <__assert_fail@plt+0x263c>
   14108:	str	r5, [r4]
   1410c:	ldr	r1, [r5, #40]	; 0x28
   14110:	ldr	r0, [r4, #24]
   14114:	mov	r5, #0
   14118:	strb	r5, [r0, r1]
   1411c:	mov	r0, r4
   14120:	mov	r1, #3
   14124:	bl	1477c <__assert_fail@plt+0x2b4c>
   14128:	cmp	r0, #0
   1412c:	beq	1425c <__assert_fail@plt+0x262c>
   14130:	mov	r7, r0
   14134:	mov	r0, r6
   14138:	bl	135bc <__assert_fail@plt+0x198c>
   1413c:	mov	r5, r7
   14140:	b	143a0 <__assert_fail@plt+0x2770>
   14144:	mov	r0, r4
   14148:	bl	1510c <__assert_fail@plt+0x34dc>
   1414c:	cmp	r0, #0
   14150:	beq	14168 <__assert_fail@plt+0x2538>
   14154:	ldr	r0, [r4, #48]	; 0x30
   14158:	mov	r5, #0
   1415c:	orr	r0, r0, #8192	; 0x2000
   14160:	str	r0, [r4, #48]	; 0x30
   14164:	b	144b8 <__assert_fail@plt+0x2888>
   14168:	mov	r0, r4
   1416c:	bl	13e8c <__assert_fail@plt+0x225c>
   14170:	ldr	r1, [r5, #52]	; 0x34
   14174:	add	r6, r5, #168	; 0xa8
   14178:	str	r1, [r5, #40]	; 0x28
   1417c:	add	r2, r1, #1
   14180:	mov	r1, r6
   14184:	ldr	r0, [r4, #24]
   14188:	bl	11864 <memmove@plt>
   1418c:	mov	r0, r6
   14190:	mov	r1, #47	; 0x2f
   14194:	bl	11af8 <strrchr@plt>
   14198:	cmp	r0, #0
   1419c:	beq	141d8 <__assert_fail@plt+0x25a8>
   141a0:	cmp	r0, r6
   141a4:	bne	141b4 <__assert_fail@plt+0x2584>
   141a8:	ldrb	r1, [r5, #169]	; 0xa9
   141ac:	cmp	r1, #0
   141b0:	beq	141d8 <__assert_fail@plt+0x25a8>
   141b4:	add	r7, r0, #1
   141b8:	mov	r0, r7
   141bc:	bl	11a20 <strlen@plt>
   141c0:	mov	r8, r0
   141c4:	add	r2, r0, #1
   141c8:	mov	r0, r6
   141cc:	mov	r1, r7
   141d0:	bl	11864 <memmove@plt>
   141d4:	str	r8, [r5, #52]	; 0x34
   141d8:	ldr	r0, [r4, #24]
   141dc:	str	r0, [r5, #24]
   141e0:	str	r0, [r5, #28]
   141e4:	mov	r0, r4
   141e8:	bl	13c30 <__assert_fail@plt+0x2000>
   141ec:	b	143dc <__assert_fail@plt+0x27ac>
   141f0:	bic	r1, r1, #4096	; 0x1000
   141f4:	str	r1, [r4, #48]	; 0x30
   141f8:	bl	13cec <__assert_fail@plt+0x20bc>
   141fc:	mov	r0, #0
   14200:	str	r0, [r4, #4]
   14204:	mov	r0, r4
   14208:	mov	r1, #3
   1420c:	bl	1477c <__assert_fail@plt+0x2b4c>
   14210:	cmp	r0, #0
   14214:	str	r0, [r4, #4]
   14218:	beq	1422c <__assert_fail@plt+0x25fc>
   1421c:	ldr	r5, [r4, #4]
   14220:	mov	r0, #0
   14224:	str	r0, [r4, #4]
   14228:	b	143a0 <__assert_fail@plt+0x2770>
   1422c:	ldrb	r0, [r4, #49]	; 0x31
   14230:	mov	r5, #0
   14234:	tst	r0, #32
   14238:	bne	144b8 <__assert_fail@plt+0x2888>
   1423c:	ldr	r0, [r6, #32]
   14240:	cmp	r0, #0
   14244:	beq	13fbc <__assert_fail@plt+0x238c>
   14248:	ldrh	r0, [r6, #56]	; 0x38
   1424c:	cmp	r0, #4
   14250:	beq	13fbc <__assert_fail@plt+0x238c>
   14254:	mov	r0, #7
   14258:	b	13fb8 <__assert_fail@plt+0x2388>
   1425c:	ldrb	r0, [r4, #49]	; 0x31
   14260:	tst	r0, #32
   14264:	bne	144b8 <__assert_fail@plt+0x2888>
   14268:	ldr	r5, [r6, #4]
   1426c:	mov	r0, r6
   14270:	str	r5, [r4]
   14274:	bl	135bc <__assert_fail@plt+0x198c>
   14278:	ldr	r0, [r5, #48]	; 0x30
   1427c:	cmn	r0, #1
   14280:	beq	142dc <__assert_fail@plt+0x26ac>
   14284:	ldrh	r0, [r5, #56]	; 0x38
   14288:	cmp	r0, #11
   1428c:	beq	144c0 <__assert_fail@plt+0x2890>
   14290:	ldr	r0, [r5, #40]	; 0x28
   14294:	ldr	r1, [r4, #24]
   14298:	mov	r2, #0
   1429c:	strb	r2, [r1, r0]
   142a0:	ldr	r0, [r5, #48]	; 0x30
   142a4:	cmp	r0, #0
   142a8:	beq	14314 <__assert_fail@plt+0x26e4>
   142ac:	ldrh	r0, [r5, #58]	; 0x3a
   142b0:	tst	r0, #2
   142b4:	bne	14340 <__assert_fail@plt+0x2710>
   142b8:	tst	r0, #1
   142bc:	bne	1447c <__assert_fail@plt+0x284c>
   142c0:	ldr	r1, [r5, #4]
   142c4:	movw	r3, #44890	; 0xaf5a
   142c8:	mov	r0, r4
   142cc:	mvn	r2, #0
   142d0:	movt	r3, #1
   142d4:	bl	1459c <__assert_fail@plt+0x296c>
   142d8:	b	1431c <__assert_fail@plt+0x26ec>
   142dc:	mov	r0, r5
   142e0:	bl	135bc <__assert_fail@plt+0x198c>
   142e4:	bl	11a5c <__errno_location@plt>
   142e8:	mov	r5, #0
   142ec:	str	r5, [r0]
   142f0:	str	r5, [r4]
   142f4:	b	144b8 <__assert_fail@plt+0x2888>
   142f8:	bl	11a5c <__errno_location@plt>
   142fc:	ldr	r0, [r0]
   14300:	mov	r1, #7
   14304:	strh	r1, [r6, #56]	; 0x38
   14308:	str	r0, [r6, #32]
   1430c:	mov	r5, r6
   14310:	b	143dc <__assert_fail@plt+0x27ac>
   14314:	mov	r0, r4
   14318:	bl	1510c <__assert_fail@plt+0x34dc>
   1431c:	cmp	r0, #0
   14320:	beq	1447c <__assert_fail@plt+0x284c>
   14324:	bl	11a5c <__errno_location@plt>
   14328:	ldr	r0, [r0]
   1432c:	str	r0, [r5, #32]
   14330:	ldr	r0, [r4, #48]	; 0x30
   14334:	orr	r0, r0, #8192	; 0x2000
   14338:	str	r0, [r4, #48]	; 0x30
   1433c:	b	1447c <__assert_fail@plt+0x284c>
   14340:	ldr	r0, [r4, #48]	; 0x30
   14344:	tst	r0, #4
   14348:	bne	14474 <__assert_fail@plt+0x2844>
   1434c:	ldr	r1, [r5, #36]	; 0x24
   14350:	tst	r0, #512	; 0x200
   14354:	bne	14468 <__assert_fail@plt+0x2838>
   14358:	mov	r0, r1
   1435c:	bl	11b40 <fchdir@plt>
   14360:	cmp	r0, #0
   14364:	beq	14474 <__assert_fail@plt+0x2844>
   14368:	bl	11a5c <__errno_location@plt>
   1436c:	ldr	r0, [r0]
   14370:	str	r0, [r5, #32]
   14374:	ldr	r0, [r4, #48]	; 0x30
   14378:	orr	r0, r0, #8192	; 0x2000
   1437c:	str	r0, [r4, #48]	; 0x30
   14380:	b	14474 <__assert_fail@plt+0x2844>
   14384:	bl	11a5c <__errno_location@plt>
   14388:	ldr	r0, [r0]
   1438c:	mov	r1, #7
   14390:	strh	r1, [r5, #56]	; 0x38
   14394:	str	r0, [r5, #32]
   14398:	mov	r0, #3
   1439c:	strh	r0, [r5, #60]	; 0x3c
   143a0:	ldr	r0, [r5, #4]
   143a4:	ldr	r1, [r0, #28]
   143a8:	ldr	r0, [r0, #40]	; 0x28
   143ac:	sub	r2, r0, #1
   143b0:	ldrb	r1, [r1, r2]
   143b4:	cmp	r1, #47	; 0x2f
   143b8:	ldr	r1, [r4, #24]
   143bc:	moveq	r0, r2
   143c0:	mov	r2, #47	; 0x2f
   143c4:	strb	r2, [r1, r0]!
   143c8:	ldr	r2, [r5, #52]	; 0x34
   143cc:	add	r0, r1, #1
   143d0:	add	r1, r5, #168	; 0xa8
   143d4:	add	r2, r2, #1
   143d8:	bl	11864 <memmove@plt>
   143dc:	str	r5, [r4]
   143e0:	ldrh	r0, [r5, #56]	; 0x38
   143e4:	cmp	r0, #11
   143e8:	bne	14420 <__assert_fail@plt+0x27f0>
   143ec:	add	r0, r5, #112	; 0x70
   143f0:	ldrd	r0, [r0]
   143f4:	eor	r2, r0, #1
   143f8:	orrs	r2, r2, r1
   143fc:	beq	144b8 <__assert_fail@plt+0x2888>
   14400:	eor	r0, r0, #2
   14404:	orrs	r0, r0, r1
   14408:	bne	144c0 <__assert_fail@plt+0x2890>
   1440c:	mov	r0, r4
   14410:	mov	r1, r5
   14414:	mov	r2, #0
   14418:	bl	13a00 <__assert_fail@plt+0x1dd0>
   1441c:	strh	r0, [r5, #56]	; 0x38
   14420:	cmp	r0, #1
   14424:	bne	144b8 <__assert_fail@plt+0x2888>
   14428:	ldr	r0, [r5, #48]	; 0x30
   1442c:	cmp	r0, #0
   14430:	bne	14440 <__assert_fail@plt+0x2810>
   14434:	add	r0, r5, #64	; 0x40
   14438:	ldrd	r0, [r0]
   1443c:	strd	r0, [r4, #16]
   14440:	mov	r0, r4
   14444:	mov	r1, r5
   14448:	bl	15168 <__assert_fail@plt+0x3538>
   1444c:	cmp	r0, #0
   14450:	bne	144b8 <__assert_fail@plt+0x2888>
   14454:	bl	11a5c <__errno_location@plt>
   14458:	mov	r1, #12
   1445c:	mov	r5, #0
   14460:	str	r1, [r0]
   14464:	b	144b8 <__assert_fail@plt+0x2888>
   14468:	mov	r0, r4
   1446c:	mov	r2, #1
   14470:	bl	15224 <__assert_fail@plt+0x35f4>
   14474:	ldr	r0, [r5, #36]	; 0x24
   14478:	bl	11bdc <close@plt>
   1447c:	ldrh	r0, [r5, #56]	; 0x38
   14480:	cmp	r0, #2
   14484:	beq	144ac <__assert_fail@plt+0x287c>
   14488:	ldr	r0, [r5, #32]
   1448c:	mov	r1, #7
   14490:	cmp	r0, #0
   14494:	movweq	r1, #6
   14498:	strh	r1, [r5, #56]	; 0x38
   1449c:	bne	144ac <__assert_fail@plt+0x287c>
   144a0:	mov	r0, r4
   144a4:	mov	r1, r5
   144a8:	bl	144c4 <__assert_fail@plt+0x2894>
   144ac:	ldrb	r0, [r4, #49]	; 0x31
   144b0:	tst	r0, #32
   144b4:	movne	r5, #0
   144b8:	mov	r0, r5
   144bc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   144c0:	bl	11bd0 <abort@plt>
   144c4:	push	{r4, r5, r7, sl, fp, lr}
   144c8:	add	fp, sp, #16
   144cc:	sub	sp, sp, #24
   144d0:	ldrh	r2, [r0, #48]	; 0x30
   144d4:	movw	r3, #258	; 0x102
   144d8:	add	lr, r1, #64	; 0x40
   144dc:	add	r4, r1, #160	; 0xa0
   144e0:	tst	r2, r3
   144e4:	beq	1451c <__assert_fail@plt+0x28ec>
   144e8:	ldrd	r2, [lr]
   144ec:	mov	r1, sp
   144f0:	stm	sp, {r2, r3}
   144f4:	ldrd	r2, [r4]
   144f8:	str	r3, [sp, #12]
   144fc:	str	r2, [sp, #8]
   14500:	ldr	r0, [r0, #56]	; 0x38
   14504:	bl	16470 <__assert_fail@plt+0x4840>
   14508:	cmp	r0, #0
   1450c:	beq	14598 <__assert_fail@plt+0x2968>
   14510:	bl	135bc <__assert_fail@plt+0x198c>
   14514:	sub	sp, fp, #16
   14518:	pop	{r4, r5, r7, sl, fp, pc}
   1451c:	ldr	r1, [r1, #4]
   14520:	cmp	r1, #0
   14524:	beq	14514 <__assert_fail@plt+0x28e4>
   14528:	ldr	r2, [r1, #48]	; 0x30
   1452c:	cmp	r2, #0
   14530:	bmi	14514 <__assert_fail@plt+0x28e4>
   14534:	ldr	ip, [r0, #56]	; 0x38
   14538:	ldrd	r2, [ip, #16]
   1453c:	orrs	r2, r2, r3
   14540:	beq	14598 <__assert_fail@plt+0x2968>
   14544:	ldrd	r2, [r4]
   14548:	ldrd	r4, [ip]
   1454c:	eor	r3, r5, r3
   14550:	eor	r2, r4, r2
   14554:	orrs	r2, r2, r3
   14558:	bne	14514 <__assert_fail@plt+0x28e4>
   1455c:	add	r3, ip, #8
   14560:	ldm	lr, {r2, r5}
   14564:	ldm	r3, {r4, r7}
   14568:	eor	r7, r7, r5
   1456c:	eor	r2, r4, r2
   14570:	orrs	r2, r2, r7
   14574:	bne	14514 <__assert_fail@plt+0x28e4>
   14578:	add	r2, r1, #64	; 0x40
   1457c:	add	r1, r1, #160	; 0xa0
   14580:	ldm	r2, {r2, r5}
   14584:	stm	r3, {r2, r5}
   14588:	ldr	r0, [r0, #56]	; 0x38
   1458c:	ldrd	r2, [r1]
   14590:	strd	r2, [r0]
   14594:	b	14514 <__assert_fail@plt+0x28e4>
   14598:	bl	11bd0 <abort@plt>
   1459c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   145a0:	add	fp, sp, #28
   145a4:	sub	sp, sp, #108	; 0x6c
   145a8:	mov	r7, r3
   145ac:	mov	r4, r2
   145b0:	mov	r8, r1
   145b4:	mov	sl, r0
   145b8:	cmp	r3, #0
   145bc:	beq	145e0 <__assert_fail@plt+0x29b0>
   145c0:	movw	r1, #44890	; 0xaf5a
   145c4:	mov	r0, r7
   145c8:	movt	r1, #1
   145cc:	bl	11828 <strcmp@plt>
   145d0:	cmp	r0, #0
   145d4:	mov	r6, r0
   145d8:	movwne	r6, #1
   145dc:	b	145e4 <__assert_fail@plt+0x29b4>
   145e0:	mov	r6, #1
   145e4:	ldr	r0, [sl, #48]	; 0x30
   145e8:	tst	r0, #4
   145ec:	bne	14644 <__assert_fail@plt+0x2a14>
   145f0:	cmn	r4, #1
   145f4:	mov	r1, #0
   145f8:	mov	r9, #0
   145fc:	movwgt	r1, #1
   14600:	orrs	r1, r1, r6
   14604:	bne	14664 <__assert_fail@plt+0x2a34>
   14608:	ands	r0, r0, #512	; 0x200
   1460c:	beq	14664 <__assert_fail@plt+0x2a34>
   14610:	add	r4, sl, #60	; 0x3c
   14614:	mov	r0, r4
   14618:	bl	16668 <__assert_fail@plt+0x4a38>
   1461c:	cmp	r0, #0
   14620:	bne	1466c <__assert_fail@plt+0x2a3c>
   14624:	mov	r0, r4
   14628:	bl	166bc <__assert_fail@plt+0x4a8c>
   1462c:	cmn	r0, #1
   14630:	ble	1466c <__assert_fail@plt+0x2a3c>
   14634:	mov	r4, r0
   14638:	mov	r9, #0
   1463c:	mov	r7, #0
   14640:	b	14688 <__assert_fail@plt+0x2a58>
   14644:	mov	r5, #0
   14648:	cmp	r4, #0
   1464c:	bmi	14770 <__assert_fail@plt+0x2b40>
   14650:	ands	r0, r0, #512	; 0x200
   14654:	beq	14770 <__assert_fail@plt+0x2b40>
   14658:	mov	r0, r4
   1465c:	bl	11bdc <close@plt>
   14660:	b	14770 <__assert_fail@plt+0x2b40>
   14664:	cmn	r4, #1
   14668:	bgt	14688 <__assert_fail@plt+0x2a58>
   1466c:	mov	r0, sl
   14670:	mov	r1, r7
   14674:	bl	13cbc <__assert_fail@plt+0x208c>
   14678:	cmp	r0, #0
   1467c:	bmi	14720 <__assert_fail@plt+0x2af0>
   14680:	mov	r4, r0
   14684:	mov	r9, #1
   14688:	ldr	r5, [sl, #48]	; 0x30
   1468c:	tst	r5, #2
   14690:	bne	146b4 <__assert_fail@plt+0x2a84>
   14694:	cmp	r7, #0
   14698:	beq	14708 <__assert_fail@plt+0x2ad8>
   1469c:	movw	r1, #44890	; 0xaf5a
   146a0:	mov	r0, r7
   146a4:	movt	r1, #1
   146a8:	bl	11828 <strcmp@plt>
   146ac:	cmp	r0, #0
   146b0:	bne	14708 <__assert_fail@plt+0x2ad8>
   146b4:	mov	r1, sp
   146b8:	mov	r0, r4
   146bc:	bl	1a620 <lchmod@@Base+0x3f0c>
   146c0:	cmp	r0, #0
   146c4:	bne	1474c <__assert_fail@plt+0x2b1c>
   146c8:	add	r0, r8, #64	; 0x40
   146cc:	ldm	sp, {r2, r3}
   146d0:	ldrd	r0, [r0]
   146d4:	eor	r1, r1, r3
   146d8:	eor	r0, r0, r2
   146dc:	orrs	r0, r0, r1
   146e0:	bne	14740 <__assert_fail@plt+0x2b10>
   146e4:	add	r0, r8, #160	; 0xa0
   146e8:	ldr	r2, [sp, #96]	; 0x60
   146ec:	ldr	r3, [sp, #100]	; 0x64
   146f0:	ldrd	r0, [r0]
   146f4:	eor	r1, r1, r3
   146f8:	eor	r0, r0, r2
   146fc:	orrs	r0, r0, r1
   14700:	bne	14740 <__assert_fail@plt+0x2b10>
   14704:	ldr	r5, [sl, #48]	; 0x30
   14708:	tst	r5, #512	; 0x200
   1470c:	bne	14728 <__assert_fail@plt+0x2af8>
   14710:	mov	r0, r4
   14714:	bl	11b40 <fchdir@plt>
   14718:	mov	r5, r0
   1471c:	b	14750 <__assert_fail@plt+0x2b20>
   14720:	mvn	r5, #0
   14724:	b	14770 <__assert_fail@plt+0x2b40>
   14728:	mov	r0, sl
   1472c:	mov	r1, r4
   14730:	mov	r2, r6
   14734:	bl	15224 <__assert_fail@plt+0x35f4>
   14738:	mov	r5, #0
   1473c:	b	14770 <__assert_fail@plt+0x2b40>
   14740:	bl	11a5c <__errno_location@plt>
   14744:	mov	r1, #2
   14748:	str	r1, [r0]
   1474c:	mvn	r5, #0
   14750:	cmp	r9, #0
   14754:	beq	14770 <__assert_fail@plt+0x2b40>
   14758:	bl	11a5c <__errno_location@plt>
   1475c:	ldr	r7, [r0]
   14760:	mov	r6, r0
   14764:	mov	r0, r4
   14768:	bl	11bdc <close@plt>
   1476c:	str	r7, [r6]
   14770:	mov	r0, r5
   14774:	sub	sp, fp, #28
   14778:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1477c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14780:	add	fp, sp, #28
   14784:	sub	sp, sp, #68	; 0x44
   14788:	ldr	sl, [r0]
   1478c:	mov	r4, r1
   14790:	str	r0, [fp, #-36]	; 0xffffffdc
   14794:	ldr	r9, [sl, #12]
   14798:	cmp	r9, #0
   1479c:	beq	147e0 <__assert_fail@plt+0x2bb0>
   147a0:	mov	r0, r9
   147a4:	bl	11b34 <dirfd@plt>
   147a8:	cmn	r0, #1
   147ac:	str	r0, [fp, #-32]	; 0xffffffe0
   147b0:	ble	14818 <__assert_fail@plt+0x2be8>
   147b4:	ldr	r7, [fp, #-36]	; 0xffffffdc
   147b8:	mov	ip, #0
   147bc:	mov	r1, r7
   147c0:	ldr	r0, [r1, #44]!	; 0x2c
   147c4:	str	r1, [sp, #24]
   147c8:	mvn	r1, #0
   147cc:	cmp	r0, #0
   147d0:	movweq	r1, #34464	; 0x86a0
   147d4:	movteq	r1, #1
   147d8:	str	r1, [sp, #32]
   147dc:	b	14a80 <__assert_fail@plt+0x2e50>
   147e0:	ldr	r3, [r0, #48]	; 0x30
   147e4:	mov	r2, r0
   147e8:	mvn	r0, #99	; 0x63
   147ec:	and	r1, r3, #516	; 0x204
   147f0:	cmp	r1, #512	; 0x200
   147f4:	ldr	r1, [sl, #24]
   147f8:	ldreq	r0, [r2, #32]
   147fc:	mov	r2, #0
   14800:	tst	r3, #16
   14804:	beq	14838 <__assert_fail@plt+0x2c08>
   14808:	tst	r3, #1
   1480c:	bne	1482c <__assert_fail@plt+0x2bfc>
   14810:	mov	r2, #32768	; 0x8000
   14814:	b	14838 <__assert_fail@plt+0x2c08>
   14818:	ldr	r0, [sl, #12]
   1481c:	bl	11c0c <closedir@plt>
   14820:	mov	r5, #0
   14824:	str	r5, [sl, #12]
   14828:	b	14878 <__assert_fail@plt+0x2c48>
   1482c:	ldr	r3, [sl, #48]	; 0x30
   14830:	cmp	r3, #0
   14834:	movne	r2, #32768	; 0x8000
   14838:	sub	r3, fp, #32
   1483c:	bl	16d10 <lchmod@@Base+0x5fc>
   14840:	cmp	r0, #0
   14844:	str	r0, [sl, #12]
   14848:	beq	14874 <__assert_fail@plt+0x2c44>
   1484c:	ldrh	r0, [sl, #56]	; 0x38
   14850:	cmp	r0, #11
   14854:	bne	14898 <__assert_fail@plt+0x2c68>
   14858:	ldr	r7, [fp, #-36]	; 0xffffffdc
   1485c:	mov	r1, sl
   14860:	mov	r2, #0
   14864:	mov	r0, r7
   14868:	bl	13a00 <__assert_fail@plt+0x1dd0>
   1486c:	strh	r0, [sl, #56]	; 0x38
   14870:	b	148e0 <__assert_fail@plt+0x2cb0>
   14874:	mov	r5, #0
   14878:	cmp	r4, #3
   1487c:	bne	15100 <__assert_fail@plt+0x34d0>
   14880:	mov	r0, #4
   14884:	strh	r0, [sl, #56]	; 0x38
   14888:	bl	11a5c <__errno_location@plt>
   1488c:	ldr	r0, [r0]
   14890:	str	r0, [sl, #32]
   14894:	b	15100 <__assert_fail@plt+0x34d0>
   14898:	ldr	r7, [fp, #-36]	; 0xffffffdc
   1489c:	ldrb	r0, [r7, #49]	; 0x31
   148a0:	tst	r0, #1
   148a4:	beq	148e0 <__assert_fail@plt+0x2cb0>
   148a8:	mov	r0, r7
   148ac:	mov	r1, sl
   148b0:	bl	144c4 <__assert_fail@plt+0x2894>
   148b4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   148b8:	mov	r1, sl
   148bc:	mov	r2, #0
   148c0:	mov	r5, #0
   148c4:	bl	13a00 <__assert_fail@plt+0x1dd0>
   148c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   148cc:	mov	r1, sl
   148d0:	bl	15168 <__assert_fail@plt+0x3538>
   148d4:	ldr	r7, [fp, #-36]	; 0xffffffdc
   148d8:	cmp	r0, #0
   148dc:	beq	14984 <__assert_fail@plt+0x2d54>
   148e0:	mov	r1, r7
   148e4:	ldr	r0, [r1, #44]!	; 0x2c
   148e8:	str	r1, [sp, #24]
   148ec:	mvn	r1, #0
   148f0:	cmp	r0, #0
   148f4:	movweq	r1, #34464	; 0x86a0
   148f8:	movteq	r1, #1
   148fc:	cmp	r4, #2
   14900:	str	r1, [sp, #32]
   14904:	bne	14924 <__assert_fail@plt+0x2cf4>
   14908:	mov	ip, #1
   1490c:	cmp	r4, #3
   14910:	bne	14a80 <__assert_fail@plt+0x2e50>
   14914:	sub	r0, r4, #3
   14918:	mov	r8, r4
   1491c:	mov	r5, #0
   14920:	b	149b8 <__assert_fail@plt+0x2d88>
   14924:	ldr	r0, [r7, #48]	; 0x30
   14928:	and	r0, r0, #56	; 0x38
   1492c:	cmp	r0, #24
   14930:	bne	149ac <__assert_fail@plt+0x2d7c>
   14934:	ldr	r0, [sl, #84]	; 0x54
   14938:	cmp	r0, #2
   1493c:	bne	149ac <__assert_fail@plt+0x2d7c>
   14940:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14944:	mov	r0, sl
   14948:	bl	154c4 <__assert_fail@plt+0x3894>
   1494c:	movw	r1, #26984	; 0x6968
   14950:	cmp	r0, r1
   14954:	ble	14994 <__assert_fail@plt+0x2d64>
   14958:	movw	r1, #26985	; 0x6969
   1495c:	ldr	r7, [fp, #-36]	; 0xffffffdc
   14960:	cmp	r0, r1
   14964:	movwne	r1, #16719	; 0x414f
   14968:	movtne	r1, #21318	; 0x5346
   1496c:	cmpne	r0, r1
   14970:	beq	149ac <__assert_fail@plt+0x2d7c>
   14974:	movw	r1, #40864	; 0x9fa0
   14978:	cmp	r0, r1
   1497c:	beq	149ac <__assert_fail@plt+0x2d7c>
   14980:	b	14908 <__assert_fail@plt+0x2cd8>
   14984:	bl	11a5c <__errno_location@plt>
   14988:	mov	r1, #12
   1498c:	str	r1, [r0]
   14990:	b	15100 <__assert_fail@plt+0x34d0>
   14994:	movw	r1, #19778	; 0x4d42
   14998:	ldr	r7, [fp, #-36]	; 0xffffffdc
   1499c:	movt	r1, #65363	; 0xff53
   149a0:	cmp	r0, r1
   149a4:	cmpne	r0, #0
   149a8:	bne	14908 <__assert_fail@plt+0x2cd8>
   149ac:	sub	r0, r4, #3
   149b0:	mov	r8, r4
   149b4:	mov	r5, #1
   149b8:	clz	r0, r0
   149bc:	lsr	r4, r0, #5
   149c0:	ldrb	r0, [r7, #49]	; 0x31
   149c4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   149c8:	tst	r0, #2
   149cc:	beq	149ec <__assert_fail@plt+0x2dbc>
   149d0:	mov	r0, r2
   149d4:	movw	r1, #1030	; 0x406
   149d8:	mov	r2, #3
   149dc:	bl	19eec <lchmod@@Base+0x37d8>
   149e0:	ldr	r7, [fp, #-36]	; 0xffffffdc
   149e4:	mov	r2, r0
   149e8:	str	r0, [fp, #-32]	; 0xffffffe0
   149ec:	cmp	r2, #0
   149f0:	bmi	14a10 <__assert_fail@plt+0x2de0>
   149f4:	mov	r0, r7
   149f8:	mov	r1, sl
   149fc:	mov	r3, #0
   14a00:	bl	1459c <__assert_fail@plt+0x296c>
   14a04:	ldr	r7, [fp, #-36]	; 0xffffffdc
   14a08:	cmp	r0, #0
   14a0c:	beq	14a78 <__assert_fail@plt+0x2e48>
   14a10:	and	r0, r4, r5
   14a14:	cmp	r0, #1
   14a18:	bne	14a28 <__assert_fail@plt+0x2df8>
   14a1c:	bl	11a5c <__errno_location@plt>
   14a20:	ldr	r0, [r0]
   14a24:	str	r0, [sl, #32]
   14a28:	ldrh	r0, [sl, #58]	; 0x3a
   14a2c:	orr	r0, r0, #1
   14a30:	strh	r0, [sl, #58]	; 0x3a
   14a34:	ldr	r0, [sl, #12]
   14a38:	bl	11c0c <closedir@plt>
   14a3c:	ldr	r7, [fp, #-36]	; 0xffffffdc
   14a40:	mov	r4, #0
   14a44:	str	r4, [sl, #12]
   14a48:	ldrb	r0, [r7, #49]	; 0x31
   14a4c:	tst	r0, #2
   14a50:	beq	14a68 <__assert_fail@plt+0x2e38>
   14a54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14a58:	cmp	r0, #0
   14a5c:	bmi	14a68 <__assert_fail@plt+0x2e38>
   14a60:	bl	11bdc <close@plt>
   14a64:	ldr	r7, [fp, #-36]	; 0xffffffdc
   14a68:	str	r4, [sl, #12]
   14a6c:	mov	ip, #1
   14a70:	mov	r4, r8
   14a74:	b	14a80 <__assert_fail@plt+0x2e50>
   14a78:	mov	r4, r8
   14a7c:	mov	ip, #0
   14a80:	ldr	r0, [sl, #40]	; 0x28
   14a84:	ldr	r1, [sl, #28]
   14a88:	mov	r5, #0
   14a8c:	str	r4, [sp, #12]
   14a90:	sub	r2, r0, #1
   14a94:	ldrb	r1, [r1, r2]
   14a98:	cmp	r1, #47	; 0x2f
   14a9c:	ldrb	r1, [r7, #48]	; 0x30
   14aa0:	moveq	r0, r2
   14aa4:	tst	r1, #4
   14aa8:	mov	r1, #0
   14aac:	str	r1, [sp, #40]	; 0x28
   14ab0:	beq	14ac8 <__assert_fail@plt+0x2e98>
   14ab4:	ldr	r1, [r7, #24]
   14ab8:	mov	r2, #47	; 0x2f
   14abc:	strb	r2, [r1, r0]!
   14ac0:	add	r1, r1, #1
   14ac4:	str	r1, [sp, #40]	; 0x28
   14ac8:	ldr	r4, [sl, #12]
   14acc:	add	r1, r0, #1
   14ad0:	str	r1, [sp, #48]	; 0x30
   14ad4:	cmp	r4, #0
   14ad8:	beq	14e1c <__assert_fail@plt+0x31ec>
   14adc:	ldr	r0, [sl, #48]	; 0x30
   14ae0:	str	ip, [sp, #4]
   14ae4:	str	r9, [sp, #8]
   14ae8:	add	r0, r0, #1
   14aec:	str	r0, [sp, #28]
   14af0:	ldr	r0, [r7, #36]	; 0x24
   14af4:	sub	r0, r0, r1
   14af8:	str	r0, [fp, #-44]	; 0xffffffd4
   14afc:	bl	11a5c <__errno_location@plt>
   14b00:	str	r0, [sp, #36]	; 0x24
   14b04:	mov	r0, #0
   14b08:	mov	r1, #0
   14b0c:	mov	r5, #0
   14b10:	mov	r8, #0
   14b14:	mov	r9, #0
   14b18:	str	r0, [sp, #20]
   14b1c:	mov	r0, #0
   14b20:	str	r0, [sp, #16]
   14b24:	ldr	r0, [sp, #36]	; 0x24
   14b28:	str	r5, [fp, #-40]	; 0xffffffd8
   14b2c:	mov	r5, sl
   14b30:	str	r1, [r0]
   14b34:	mov	r0, r4
   14b38:	bl	11b10 <readdir64@plt>
   14b3c:	cmp	r0, #0
   14b40:	beq	14e78 <__assert_fail@plt+0x3248>
   14b44:	ldr	r7, [fp, #-36]	; 0xffffffdc
   14b48:	mov	sl, r0
   14b4c:	ldrb	r0, [r7, #48]	; 0x30
   14b50:	tst	r0, #32
   14b54:	bne	14b84 <__assert_fail@plt+0x2f54>
   14b58:	ldrb	r0, [sl, #19]
   14b5c:	cmp	r0, #46	; 0x2e
   14b60:	bne	14b84 <__assert_fail@plt+0x2f54>
   14b64:	ldrb	r0, [sl, #20]
   14b68:	cmp	r0, #0
   14b6c:	beq	14dc0 <__assert_fail@plt+0x3190>
   14b70:	cmp	r0, #46	; 0x2e
   14b74:	bne	14b84 <__assert_fail@plt+0x2f54>
   14b78:	ldrb	r0, [sl, #21]
   14b7c:	cmp	r0, #0
   14b80:	beq	14dc0 <__assert_fail@plt+0x3190>
   14b84:	add	r6, sl, #19
   14b88:	str	r9, [sp, #44]	; 0x2c
   14b8c:	mov	r0, r6
   14b90:	bl	11a20 <strlen@plt>
   14b94:	mov	r4, r0
   14b98:	mov	r0, r7
   14b9c:	mov	r1, r6
   14ba0:	mov	r2, r4
   14ba4:	bl	13980 <__assert_fail@plt+0x1d50>
   14ba8:	mov	r9, r0
   14bac:	cmp	r0, #0
   14bb0:	beq	14e30 <__assert_fail@plt+0x3200>
   14bb4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14bb8:	cmp	r4, r0
   14bbc:	bcs	14bd0 <__assert_fail@plt+0x2fa0>
   14bc0:	ldr	r2, [sp, #48]	; 0x30
   14bc4:	ldr	r7, [fp, #-36]	; 0xffffffdc
   14bc8:	add	r4, r4, r2
   14bcc:	b	14c30 <__assert_fail@plt+0x3000>
   14bd0:	ldr	r7, [fp, #-36]	; 0xffffffdc
   14bd4:	ldr	r0, [sp, #48]	; 0x30
   14bd8:	ldr	r6, [r7, #24]
   14bdc:	add	r4, r4, r0
   14be0:	mov	r0, r7
   14be4:	add	r1, r4, #1
   14be8:	bl	1390c <__assert_fail@plt+0x1cdc>
   14bec:	cmp	r0, #0
   14bf0:	beq	14e30 <__assert_fail@plt+0x3200>
   14bf4:	ldr	r0, [r7, #24]
   14bf8:	cmp	r6, r0
   14bfc:	beq	14c24 <__assert_fail@plt+0x2ff4>
   14c00:	ldrb	r1, [r7, #48]	; 0x30
   14c04:	ldr	r2, [sp, #48]	; 0x30
   14c08:	tst	r1, #4
   14c0c:	ldr	r1, [sp, #40]	; 0x28
   14c10:	addne	r1, r0, r2
   14c14:	mov	r0, #1
   14c18:	str	r1, [sp, #40]	; 0x28
   14c1c:	str	r0, [sp, #16]
   14c20:	b	14c28 <__assert_fail@plt+0x2ff8>
   14c24:	ldr	r2, [sp, #48]	; 0x30
   14c28:	ldr	r0, [r7, #36]	; 0x24
   14c2c:	sub	r0, r0, r2
   14c30:	cmp	r4, r2
   14c34:	bcc	14ed4 <__assert_fail@plt+0x32a4>
   14c38:	ldr	r1, [sp, #28]
   14c3c:	str	r0, [fp, #-44]	; 0xffffffd4
   14c40:	add	r0, r9, #160	; 0xa0
   14c44:	str	r1, [r9, #48]	; 0x30
   14c48:	ldr	r1, [r7]
   14c4c:	str	r4, [r9, #40]	; 0x28
   14c50:	str	r1, [r9, #4]
   14c54:	ldrd	r2, [sl]
   14c58:	strd	r2, [r0]
   14c5c:	ldrb	r0, [r7, #48]	; 0x30
   14c60:	tst	r0, #4
   14c64:	bne	14c74 <__assert_fail@plt+0x3044>
   14c68:	add	r0, r9, #168	; 0xa8
   14c6c:	str	r0, [r9, #24]
   14c70:	b	14c94 <__assert_fail@plt+0x3064>
   14c74:	ldr	r0, [r9, #28]
   14c78:	ldr	r2, [r9, #52]	; 0x34
   14c7c:	add	r1, r9, #168	; 0xa8
   14c80:	str	r0, [r9, #24]
   14c84:	ldr	r0, [sp, #40]	; 0x28
   14c88:	add	r2, r2, #1
   14c8c:	bl	11864 <memmove@plt>
   14c90:	ldr	r7, [fp, #-36]	; 0xffffffdc
   14c94:	ldr	r0, [r7, #44]	; 0x2c
   14c98:	ldr	r2, [r7, #48]	; 0x30
   14c9c:	cmp	r0, #0
   14ca0:	beq	14cd4 <__assert_fail@plt+0x30a4>
   14ca4:	ands	r0, r2, #1024	; 0x400
   14ca8:	bne	14cd4 <__assert_fail@plt+0x30a4>
   14cac:	mov	r0, r7
   14cb0:	mov	r1, r9
   14cb4:	mov	r2, #0
   14cb8:	bl	13a00 <__assert_fail@plt+0x1dd0>
   14cbc:	mov	sl, r5
   14cc0:	ldr	r7, [fp, #-36]	; 0xffffffdc
   14cc4:	ldr	r5, [fp, #-40]	; 0xffffffd8
   14cc8:	mov	r1, #0
   14ccc:	strh	r0, [r9, #56]	; 0x38
   14cd0:	b	14d54 <__assert_fail@plt+0x3124>
   14cd4:	ldrb	r3, [sl, #18]
   14cd8:	mov	r0, #0
   14cdc:	tst	r2, #8
   14ce0:	mov	r1, #0
   14ce4:	beq	14d08 <__assert_fail@plt+0x30d8>
   14ce8:	orr	r1, r3, #4
   14cec:	cmp	r1, #4
   14cf0:	mov	r1, #0
   14cf4:	beq	14d08 <__assert_fail@plt+0x30d8>
   14cf8:	eor	r1, r3, #10
   14cfc:	and	r2, r2, #16
   14d00:	orrs	r1, r2, r1
   14d04:	movwne	r1, #1
   14d08:	mov	r6, #11
   14d0c:	mov	sl, r5
   14d10:	sub	r3, r3, #1
   14d14:	ldr	r5, [fp, #-40]	; 0xffffffd8
   14d18:	add	r2, r9, #112	; 0x70
   14d1c:	strh	r6, [r9, #56]	; 0x38
   14d20:	uxtb	r6, r3
   14d24:	cmp	r6, #11
   14d28:	bhi	14d3c <__assert_fail@plt+0x310c>
   14d2c:	sxtb	r0, r3
   14d30:	movw	r3, #44896	; 0xaf60
   14d34:	movt	r3, #1
   14d38:	ldr	r0, [r3, r0, lsl #2]
   14d3c:	cmp	r1, #0
   14d40:	str	r0, [r9, #80]	; 0x50
   14d44:	mov	r0, #2
   14d48:	mov	r1, #0
   14d4c:	movwne	r0, #1
   14d50:	strd	r0, [r2]
   14d54:	cmp	r5, #0
   14d58:	str	r1, [r9, #8]
   14d5c:	mov	r4, r9
   14d60:	ldrne	r0, [sp, #44]	; 0x2c
   14d64:	movne	r4, r5
   14d68:	strne	r9, [r0, #8]
   14d6c:	movw	r0, #10000	; 0x2710
   14d70:	cmp	r8, r0
   14d74:	bne	14dec <__assert_fail@plt+0x31bc>
   14d78:	ldr	r0, [sp, #24]
   14d7c:	ldr	r0, [r0]
   14d80:	cmp	r0, #0
   14d84:	bne	14dec <__assert_fail@plt+0x31bc>
   14d88:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14d8c:	mov	r0, sl
   14d90:	bl	154c4 <__assert_fail@plt+0x3894>
   14d94:	mov	r1, #0
   14d98:	str	r1, [sp, #20]
   14d9c:	movw	r1, #19778	; 0x4d42
   14da0:	movt	r1, #65363	; 0xff53
   14da4:	cmp	r0, r1
   14da8:	movwne	r1, #26985	; 0x6969
   14dac:	cmpne	r0, r1
   14db0:	bne	14dd0 <__assert_fail@plt+0x31a0>
   14db4:	ldr	r7, [fp, #-36]	; 0xffffffdc
   14db8:	mov	r1, #0
   14dbc:	b	14dec <__assert_fail@plt+0x31bc>
   14dc0:	mov	sl, r5
   14dc4:	ldr	r5, [fp, #-40]	; 0xffffffd8
   14dc8:	mov	r1, #0
   14dcc:	b	14e00 <__assert_fail@plt+0x31d0>
   14dd0:	movw	r1, #6548	; 0x1994
   14dd4:	ldr	r7, [fp, #-36]	; 0xffffffdc
   14dd8:	movt	r1, #258	; 0x102
   14ddc:	cmp	r0, r1
   14de0:	mov	r1, #0
   14de4:	movne	r0, #1
   14de8:	strne	r0, [sp, #20]
   14dec:	ldr	r0, [sp, #32]
   14df0:	add	r8, r8, #1
   14df4:	cmp	r0, r8
   14df8:	bls	14f1c <__assert_fail@plt+0x32ec>
   14dfc:	mov	r5, r4
   14e00:	ldr	r4, [sl, #12]
   14e04:	cmp	r4, #0
   14e08:	bne	14b24 <__assert_fail@plt+0x2ef4>
   14e0c:	ldr	r0, [sp, #16]
   14e10:	ldr	r4, [sp, #12]
   14e14:	ldr	r9, [sp, #8]
   14e18:	b	14ec8 <__assert_fail@plt+0x3298>
   14e1c:	ldr	r4, [sp, #12]
   14e20:	mov	r8, #0
   14e24:	mov	r0, #0
   14e28:	str	r0, [sp, #20]
   14e2c:	b	14fc4 <__assert_fail@plt+0x3394>
   14e30:	ldr	r6, [sp, #36]	; 0x24
   14e34:	mov	r0, r9
   14e38:	ldr	r4, [r6]
   14e3c:	bl	135bc <__assert_fail@plt+0x198c>
   14e40:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14e44:	bl	13cec <__assert_fail@plt+0x20bc>
   14e48:	ldr	r0, [r5, #12]
   14e4c:	mov	r8, r5
   14e50:	bl	11c0c <closedir@plt>
   14e54:	mov	r0, #7
   14e58:	strh	r0, [r5, #56]	; 0x38
   14e5c:	mov	r5, #0
   14e60:	str	r5, [r8, #12]
   14e64:	ldr	r0, [r7, #48]	; 0x30
   14e68:	orr	r0, r0, #8192	; 0x2000
   14e6c:	str	r0, [r7, #48]	; 0x30
   14e70:	str	r4, [r6]
   14e74:	b	15100 <__assert_fail@plt+0x34d0>
   14e78:	ldr	r0, [sp, #36]	; 0x24
   14e7c:	ldr	r9, [sp, #8]
   14e80:	mov	sl, r5
   14e84:	ldr	r0, [r0]
   14e88:	cmp	r0, #0
   14e8c:	beq	14ea4 <__assert_fail@plt+0x3274>
   14e90:	str	r0, [sl, #32]
   14e94:	orrs	r0, r9, r8
   14e98:	mov	r0, #4
   14e9c:	movwne	r0, #7
   14ea0:	strh	r0, [sl, #56]	; 0x38
   14ea4:	ldr	r0, [sl, #12]
   14ea8:	ldr	r4, [sp, #12]
   14eac:	ldr	r5, [fp, #-40]	; 0xffffffd8
   14eb0:	cmp	r0, #0
   14eb4:	beq	14ec4 <__assert_fail@plt+0x3294>
   14eb8:	bl	11c0c <closedir@plt>
   14ebc:	mov	r0, #0
   14ec0:	str	r0, [sl, #12]
   14ec4:	ldr	r0, [sp, #16]
   14ec8:	tst	r0, #1
   14ecc:	ldr	r7, [fp, #-36]	; 0xffffffdc
   14ed0:	b	14f30 <__assert_fail@plt+0x3300>
   14ed4:	mov	r0, r9
   14ed8:	bl	135bc <__assert_fail@plt+0x198c>
   14edc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14ee0:	bl	13cec <__assert_fail@plt+0x20bc>
   14ee4:	ldr	r0, [r5, #12]
   14ee8:	mov	r8, r5
   14eec:	bl	11c0c <closedir@plt>
   14ef0:	mov	r0, #7
   14ef4:	ldr	r1, [sp, #36]	; 0x24
   14ef8:	strh	r0, [r5, #56]	; 0x38
   14efc:	mov	r5, #0
   14f00:	str	r5, [r8, #12]
   14f04:	ldr	r0, [r7, #48]	; 0x30
   14f08:	orr	r0, r0, #8192	; 0x2000
   14f0c:	str	r0, [r7, #48]	; 0x30
   14f10:	mov	r0, #36	; 0x24
   14f14:	str	r0, [r1]
   14f18:	b	15100 <__assert_fail@plt+0x34d0>
   14f1c:	ldr	r0, [sp, #16]
   14f20:	mov	r5, r4
   14f24:	ldr	r4, [sp, #12]
   14f28:	ldr	r9, [sp, #8]
   14f2c:	tst	r0, #1
   14f30:	ldr	ip, [sp, #4]
   14f34:	beq	14fc4 <__assert_fail@plt+0x3394>
   14f38:	ldr	r1, [r7, #4]
   14f3c:	ldr	r0, [r7, #24]
   14f40:	cmp	r1, #0
   14f44:	beq	14f74 <__assert_fail@plt+0x3344>
   14f48:	ldr	r2, [r1, #24]
   14f4c:	add	r3, r1, #168	; 0xa8
   14f50:	cmp	r2, r3
   14f54:	beq	14f68 <__assert_fail@plt+0x3338>
   14f58:	ldr	r3, [r1, #28]
   14f5c:	sub	r2, r2, r3
   14f60:	add	r2, r0, r2
   14f64:	str	r2, [r1, #24]
   14f68:	str	r0, [r1, #28]
   14f6c:	ldr	r1, [r1, #8]
   14f70:	b	14f40 <__assert_fail@plt+0x3310>
   14f74:	ldr	r1, [r5, #48]	; 0x30
   14f78:	cmp	r1, #0
   14f7c:	bmi	14fc4 <__assert_fail@plt+0x3394>
   14f80:	mov	r1, r5
   14f84:	ldr	r2, [r1, #24]
   14f88:	add	r3, r1, #168	; 0xa8
   14f8c:	cmp	r2, r3
   14f90:	beq	14fa4 <__assert_fail@plt+0x3374>
   14f94:	ldr	r3, [r1, #28]
   14f98:	sub	r2, r2, r3
   14f9c:	add	r2, r0, r2
   14fa0:	str	r2, [r1, #24]
   14fa4:	str	r0, [r1, #28]
   14fa8:	ldr	r2, [r1, #8]
   14fac:	cmp	r2, #0
   14fb0:	ldreq	r2, [r1, #4]
   14fb4:	ldr	r1, [r2, #48]	; 0x30
   14fb8:	cmn	r1, #1
   14fbc:	mov	r1, r2
   14fc0:	bgt	14f84 <__assert_fail@plt+0x3354>
   14fc4:	ldrb	r0, [r7, #48]	; 0x30
   14fc8:	tst	r0, #4
   14fcc:	beq	14ff8 <__assert_fail@plt+0x33c8>
   14fd0:	ldr	r2, [sp, #40]	; 0x28
   14fd4:	ldr	r0, [r7, #36]	; 0x24
   14fd8:	ldr	r3, [sp, #48]	; 0x30
   14fdc:	cmp	r3, r0
   14fe0:	sub	r1, r2, #1
   14fe4:	mov	r0, #0
   14fe8:	moveq	r2, r1
   14fec:	cmp	r8, #0
   14ff0:	moveq	r2, r1
   14ff4:	strb	r0, [r2]
   14ff8:	cmp	r9, #0
   14ffc:	movwne	r9, #1
   15000:	orrs	r0, r9, ip
   15004:	beq	15030 <__assert_fail@plt+0x3400>
   15008:	cmp	r8, #0
   1500c:	bne	15064 <__assert_fail@plt+0x3434>
   15010:	cmp	r4, #3
   15014:	bne	150f4 <__assert_fail@plt+0x34c4>
   15018:	ldrh	r0, [sl, #56]	; 0x38
   1501c:	cmp	r0, #4
   15020:	cmpne	r0, #7
   15024:	movne	r0, #6
   15028:	strhne	r0, [sl, #56]	; 0x38
   1502c:	b	150f4 <__assert_fail@plt+0x34c4>
   15030:	cmp	r4, #1
   15034:	cmpne	r8, #0
   15038:	bne	15064 <__assert_fail@plt+0x3434>
   1503c:	ldr	r0, [sl, #48]	; 0x30
   15040:	cmp	r0, #0
   15044:	beq	150cc <__assert_fail@plt+0x349c>
   15048:	ldr	r1, [sl, #4]
   1504c:	movw	r3, #44890	; 0xaf5a
   15050:	mov	r0, r7
   15054:	mvn	r2, #0
   15058:	movt	r3, #1
   1505c:	bl	1459c <__assert_fail@plt+0x296c>
   15060:	b	150d4 <__assert_fail@plt+0x34a4>
   15064:	ldr	r0, [sp, #20]
   15068:	tst	r0, #1
   1506c:	beq	1509c <__assert_fail@plt+0x346c>
   15070:	movw	r0, #21644	; 0x548c
   15074:	mov	r1, r5
   15078:	mov	r2, r8
   1507c:	movt	r0, #1
   15080:	str	r0, [r7, #44]	; 0x2c
   15084:	mov	r0, r7
   15088:	bl	13b3c <__assert_fail@plt+0x1f0c>
   1508c:	mov	r5, r0
   15090:	mov	r0, #0
   15094:	str	r0, [r7, #44]	; 0x2c
   15098:	b	15100 <__assert_fail@plt+0x34d0>
   1509c:	cmp	r8, #2
   150a0:	bcc	15100 <__assert_fail@plt+0x34d0>
   150a4:	ldr	r0, [sp, #24]
   150a8:	ldr	r0, [r0]
   150ac:	cmp	r0, #0
   150b0:	beq	15100 <__assert_fail@plt+0x34d0>
   150b4:	mov	r0, r7
   150b8:	mov	r1, r5
   150bc:	mov	r2, r8
   150c0:	bl	13b3c <__assert_fail@plt+0x1f0c>
   150c4:	mov	r5, r0
   150c8:	b	15100 <__assert_fail@plt+0x34d0>
   150cc:	mov	r0, r7
   150d0:	bl	1510c <__assert_fail@plt+0x34dc>
   150d4:	ldr	r7, [fp, #-36]	; 0xffffffdc
   150d8:	cmp	r0, #0
   150dc:	beq	15008 <__assert_fail@plt+0x33d8>
   150e0:	mov	r0, #7
   150e4:	strh	r0, [sl, #56]	; 0x38
   150e8:	ldr	r0, [r7, #48]	; 0x30
   150ec:	orr	r0, r0, #8192	; 0x2000
   150f0:	str	r0, [r7, #48]	; 0x30
   150f4:	mov	r0, r5
   150f8:	bl	13cec <__assert_fail@plt+0x20bc>
   150fc:	mov	r5, #0
   15100:	mov	r0, r5
   15104:	sub	sp, fp, #28
   15108:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1510c:	push	{r4, r5, fp, lr}
   15110:	add	fp, sp, #8
   15114:	mov	r4, r0
   15118:	ldr	r0, [r0, #48]	; 0x30
   1511c:	mov	r5, #0
   15120:	tst	r0, #4
   15124:	bne	15158 <__assert_fail@plt+0x3528>
   15128:	tst	r0, #512	; 0x200
   1512c:	bne	15148 <__assert_fail@plt+0x3518>
   15130:	ldr	r0, [r4, #28]
   15134:	bl	11b40 <fchdir@plt>
   15138:	cmp	r0, #0
   1513c:	mov	r5, r0
   15140:	movwne	r5, #1
   15144:	b	15158 <__assert_fail@plt+0x3528>
   15148:	mov	r0, r4
   1514c:	mvn	r1, #99	; 0x63
   15150:	mov	r2, #1
   15154:	bl	15224 <__assert_fail@plt+0x35f4>
   15158:	add	r0, r4, #60	; 0x3c
   1515c:	bl	13e54 <__assert_fail@plt+0x2224>
   15160:	mov	r0, r5
   15164:	pop	{r4, r5, fp, pc}
   15168:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1516c:	add	fp, sp, #24
   15170:	mov	r6, r0
   15174:	ldrh	r0, [r0, #48]	; 0x30
   15178:	mov	r4, r1
   1517c:	add	r5, r1, #64	; 0x40
   15180:	movw	r1, #258	; 0x102
   15184:	tst	r0, r1
   15188:	beq	151fc <__assert_fail@plt+0x35cc>
   1518c:	mov	r0, #24
   15190:	bl	19be4 <lchmod@@Base+0x34d0>
   15194:	mov	r8, #0
   15198:	cmp	r0, #0
   1519c:	beq	1521c <__assert_fail@plt+0x35ec>
   151a0:	ldrd	r2, [r5]
   151a4:	mov	r7, r0
   151a8:	add	r0, r4, #160	; 0xa0
   151ac:	stm	r7, {r2, r3}
   151b0:	add	r2, r7, #8
   151b4:	ldrd	r0, [r0]
   151b8:	stm	r2, {r0, r1, r4}
   151bc:	mov	r1, r7
   151c0:	ldr	r0, [r6, #56]	; 0x38
   151c4:	bl	16430 <__assert_fail@plt+0x4800>
   151c8:	cmp	r0, r7
   151cc:	beq	151f4 <__assert_fail@plt+0x35c4>
   151d0:	mov	r5, r0
   151d4:	mov	r0, r7
   151d8:	bl	135bc <__assert_fail@plt+0x198c>
   151dc:	cmp	r5, #0
   151e0:	beq	1521c <__assert_fail@plt+0x35ec>
   151e4:	ldr	r0, [r5, #16]
   151e8:	mov	r1, #2
   151ec:	strh	r1, [r4, #56]	; 0x38
   151f0:	str	r0, [r4]
   151f4:	mov	r8, #1
   151f8:	b	1521c <__assert_fail@plt+0x35ec>
   151fc:	ldr	r0, [r6, #56]	; 0x38
   15200:	mov	r1, r5
   15204:	bl	19d80 <lchmod@@Base+0x366c>
   15208:	cmp	r0, #0
   1520c:	mov	r8, #1
   15210:	movne	r0, #2
   15214:	strhne	r0, [r4, #56]	; 0x38
   15218:	strne	r4, [r4]
   1521c:	mov	r0, r8
   15220:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15224:	push	{r4, r5, fp, lr}
   15228:	add	fp, sp, #8
   1522c:	mov	r4, r1
   15230:	ldr	r1, [r0, #32]
   15234:	mov	r5, r0
   15238:	cmp	r1, r4
   1523c:	bne	15248 <__assert_fail@plt+0x3618>
   15240:	cmn	r1, #100	; 0x64
   15244:	bne	15288 <__assert_fail@plt+0x3658>
   15248:	cmp	r2, #0
   1524c:	beq	15264 <__assert_fail@plt+0x3634>
   15250:	add	r0, r5, #60	; 0x3c
   15254:	bl	16670 <__assert_fail@plt+0x4a40>
   15258:	cmp	r0, #0
   1525c:	bpl	1527c <__assert_fail@plt+0x364c>
   15260:	b	15280 <__assert_fail@plt+0x3650>
   15264:	cmp	r1, #0
   15268:	bmi	15280 <__assert_fail@plt+0x3650>
   1526c:	ldr	r0, [r5, #48]	; 0x30
   15270:	ands	r0, r0, #4
   15274:	bne	15280 <__assert_fail@plt+0x3650>
   15278:	mov	r0, r1
   1527c:	bl	11bdc <close@plt>
   15280:	str	r4, [r5, #32]
   15284:	pop	{r4, r5, fp, pc}
   15288:	bl	11bd0 <abort@plt>
   1528c:	push	{fp, lr}
   15290:	mov	fp, sp
   15294:	cmp	r2, #5
   15298:	bcc	152b0 <__assert_fail@plt+0x3680>
   1529c:	bl	11a5c <__errno_location@plt>
   152a0:	mov	r1, #22
   152a4:	str	r1, [r0]
   152a8:	mov	r0, #1
   152ac:	pop	{fp, pc}
   152b0:	mov	r0, #0
   152b4:	strh	r2, [r1, #60]	; 0x3c
   152b8:	pop	{fp, pc}
   152bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   152c0:	add	fp, sp, #28
   152c4:	sub	sp, sp, #4
   152c8:	mov	r5, r0
   152cc:	mvn	r0, #4096	; 0x1000
   152d0:	tst	r1, r0
   152d4:	beq	152ec <__assert_fail@plt+0x36bc>
   152d8:	bl	11a5c <__errno_location@plt>
   152dc:	mov	r1, #22
   152e0:	mov	r4, #0
   152e4:	str	r1, [r0]
   152e8:	b	153e8 <__assert_fail@plt+0x37b8>
   152ec:	ldr	r6, [r5]
   152f0:	mov	r7, r1
   152f4:	bl	11a5c <__errno_location@plt>
   152f8:	mov	r4, #0
   152fc:	mov	sl, r0
   15300:	str	r4, [r0]
   15304:	ldrb	r0, [r5, #49]	; 0x31
   15308:	tst	r0, #32
   1530c:	bne	153e8 <__assert_fail@plt+0x37b8>
   15310:	ldrh	r0, [r6, #56]	; 0x38
   15314:	cmp	r0, #1
   15318:	beq	15328 <__assert_fail@plt+0x36f8>
   1531c:	cmp	r0, #9
   15320:	ldreq	r4, [r6, #8]
   15324:	b	153e8 <__assert_fail@plt+0x37b8>
   15328:	ldr	r0, [r5, #4]
   1532c:	cmp	r0, #0
   15330:	blne	13cec <__assert_fail@plt+0x20bc>
   15334:	mov	r9, #1
   15338:	cmp	r7, #4096	; 0x1000
   1533c:	bne	15350 <__assert_fail@plt+0x3720>
   15340:	ldr	r0, [r5, #48]	; 0x30
   15344:	mov	r9, #2
   15348:	orr	r0, r0, #4096	; 0x1000
   1534c:	str	r0, [r5, #48]	; 0x30
   15350:	ldr	r0, [r6, #48]	; 0x30
   15354:	cmp	r0, #0
   15358:	bne	153d4 <__assert_fail@plt+0x37a4>
   1535c:	ldr	r0, [r6, #24]
   15360:	ldrb	r0, [r0]
   15364:	cmp	r0, #47	; 0x2f
   15368:	beq	153d4 <__assert_fail@plt+0x37a4>
   1536c:	ldrb	r0, [r5, #48]	; 0x30
   15370:	tst	r0, #4
   15374:	bne	153d4 <__assert_fail@plt+0x37a4>
   15378:	movw	r1, #44891	; 0xaf5b
   1537c:	mov	r0, r5
   15380:	movt	r1, #1
   15384:	bl	13cbc <__assert_fail@plt+0x208c>
   15388:	cmn	r0, #1
   1538c:	ble	153f4 <__assert_fail@plt+0x37c4>
   15390:	mov	r8, r0
   15394:	mov	r0, r5
   15398:	mov	r1, r9
   1539c:	bl	1477c <__assert_fail@plt+0x2b4c>
   153a0:	str	r0, [r5, #4]
   153a4:	ldrb	r0, [r5, #49]	; 0x31
   153a8:	tst	r0, #2
   153ac:	bne	15400 <__assert_fail@plt+0x37d0>
   153b0:	mov	r0, r8
   153b4:	bl	11b40 <fchdir@plt>
   153b8:	cmp	r0, #0
   153bc:	beq	15414 <__assert_fail@plt+0x37e4>
   153c0:	ldr	r5, [sl]
   153c4:	mov	r0, r8
   153c8:	bl	11bdc <close@plt>
   153cc:	str	r5, [sl]
   153d0:	b	153e8 <__assert_fail@plt+0x37b8>
   153d4:	mov	r0, r5
   153d8:	mov	r1, r9
   153dc:	bl	1477c <__assert_fail@plt+0x2b4c>
   153e0:	mov	r4, r0
   153e4:	str	r0, [r5, #4]
   153e8:	mov	r0, r4
   153ec:	sub	sp, fp, #28
   153f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   153f4:	mov	r4, #0
   153f8:	str	r4, [r5, #4]
   153fc:	b	153e8 <__assert_fail@plt+0x37b8>
   15400:	mov	r0, r5
   15404:	mov	r1, r8
   15408:	mov	r2, #1
   1540c:	bl	15224 <__assert_fail@plt+0x35f4>
   15410:	b	1541c <__assert_fail@plt+0x37ec>
   15414:	mov	r0, r8
   15418:	bl	11bdc <close@plt>
   1541c:	ldr	r4, [r5, #4]
   15420:	b	153e8 <__assert_fail@plt+0x37b8>
   15424:	push	{fp, lr}
   15428:	mov	fp, sp
   1542c:	mov	r2, r1
   15430:	ldrd	r0, [r0, #8]
   15434:	mov	r3, #0
   15438:	bl	1a420 <lchmod@@Base+0x3d0c>
   1543c:	mov	r0, r2
   15440:	pop	{fp, pc}
   15444:	push	{r4, r5, fp, lr}
   15448:	add	fp, sp, #8
   1544c:	ldrd	r2, [r1, #8]
   15450:	ldrd	r4, [r0, #8]
   15454:	eor	r3, r5, r3
   15458:	eor	r2, r4, r2
   1545c:	orrs	r2, r2, r3
   15460:	mov	r2, #0
   15464:	bne	15484 <__assert_fail@plt+0x3854>
   15468:	ldrd	r2, [r1]
   1546c:	ldrd	r0, [r0]
   15470:	eor	r1, r1, r3
   15474:	eor	r0, r0, r2
   15478:	orr	r0, r0, r1
   1547c:	clz	r0, r0
   15480:	lsr	r2, r0, #5
   15484:	mov	r0, r2
   15488:	pop	{r4, r5, fp, pc}
   1548c:	push	{r4, r5, fp, lr}
   15490:	add	fp, sp, #8
   15494:	ldr	r0, [r0]
   15498:	ldrd	r2, [r0, #160]	; 0xa0
   1549c:	ldr	r0, [r1]
   154a0:	ldrd	r4, [r0, #160]	; 0xa0
   154a4:	mov	r0, #0
   154a8:	subs	r1, r4, r2
   154ac:	sbcs	r1, r5, r3
   154b0:	movwcc	r0, #1
   154b4:	subs	r1, r2, r4
   154b8:	sbcs	r1, r3, r5
   154bc:	subcc	r0, r0, #1
   154c0:	pop	{r4, r5, fp, pc}
   154c4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   154c8:	add	fp, sp, #24
   154cc:	sub	sp, sp, #96	; 0x60
   154d0:	ldr	r7, [r0, #44]	; 0x2c
   154d4:	mov	r4, r0
   154d8:	mov	r5, #0
   154dc:	ldrb	r0, [r7, #49]	; 0x31
   154e0:	tst	r0, #2
   154e4:	beq	155d8 <__assert_fail@plt+0x39a8>
   154e8:	ldr	r6, [r7, #52]	; 0x34
   154ec:	mov	r9, r1
   154f0:	cmp	r6, #0
   154f4:	bne	15534 <__assert_fail@plt+0x3904>
   154f8:	movw	r0, #13756	; 0x35bc
   154fc:	movw	r2, #21988	; 0x55e4
   15500:	movw	r3, #22020	; 0x5604
   15504:	mov	r1, #0
   15508:	mov	r8, #0
   1550c:	movt	r0, #1
   15510:	movt	r2, #1
   15514:	movt	r3, #1
   15518:	str	r0, [sp]
   1551c:	mov	r0, #13
   15520:	bl	15ab4 <__assert_fail@plt+0x3e84>
   15524:	mov	r6, r0
   15528:	cmp	r0, #0
   1552c:	str	r0, [r7, #52]	; 0x34
   15530:	beq	15564 <__assert_fail@plt+0x3934>
   15534:	ldrd	r0, [r4, #64]	; 0x40
   15538:	str	r1, [sp, #12]
   1553c:	str	r0, [sp, #8]
   15540:	add	r1, sp, #8
   15544:	mov	r0, r6
   15548:	bl	15800 <__assert_fail@plt+0x3bd0>
   1554c:	cmp	r0, #0
   15550:	beq	1555c <__assert_fail@plt+0x392c>
   15554:	ldr	r5, [r0, #8]
   15558:	b	155d8 <__assert_fail@plt+0x39a8>
   1555c:	mov	r8, #1
   15560:	b	15568 <__assert_fail@plt+0x3938>
   15564:	mov	r6, #0
   15568:	cmp	r9, #0
   1556c:	bmi	155d8 <__assert_fail@plt+0x39a8>
   15570:	add	r1, sp, #8
   15574:	mov	r0, r9
   15578:	bl	117e0 <fstatfs64@plt>
   1557c:	cmp	r0, #0
   15580:	bne	155d8 <__assert_fail@plt+0x39a8>
   15584:	cmp	r8, #0
   15588:	beq	155d4 <__assert_fail@plt+0x39a4>
   1558c:	mov	r0, #16
   15590:	bl	19be4 <lchmod@@Base+0x34d0>
   15594:	cmp	r0, #0
   15598:	beq	155d4 <__assert_fail@plt+0x39a4>
   1559c:	mov	r5, r0
   155a0:	ldrd	r0, [r4, #64]	; 0x40
   155a4:	ldr	r2, [sp, #8]
   155a8:	stm	r5, {r0, r1, r2}
   155ac:	mov	r0, r6
   155b0:	mov	r1, r5
   155b4:	bl	16430 <__assert_fail@plt+0x4800>
   155b8:	cmp	r0, #0
   155bc:	beq	155cc <__assert_fail@plt+0x399c>
   155c0:	cmp	r0, r5
   155c4:	beq	155d4 <__assert_fail@plt+0x39a4>
   155c8:	bl	11bd0 <abort@plt>
   155cc:	mov	r0, r5
   155d0:	bl	135bc <__assert_fail@plt+0x198c>
   155d4:	ldr	r5, [sp, #8]
   155d8:	mov	r0, r5
   155dc:	sub	sp, fp, #24
   155e0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   155e4:	push	{fp, lr}
   155e8:	mov	fp, sp
   155ec:	mov	r2, r1
   155f0:	ldrd	r0, [r0]
   155f4:	mov	r3, #0
   155f8:	bl	1a420 <lchmod@@Base+0x3d0c>
   155fc:	mov	r0, r2
   15600:	pop	{fp, pc}
   15604:	ldrd	r2, [r1]
   15608:	ldrd	r0, [r0]
   1560c:	eor	r1, r1, r3
   15610:	eor	r0, r0, r2
   15614:	orr	r0, r0, r1
   15618:	clz	r0, r0
   1561c:	lsr	r0, r0, #5
   15620:	bx	lr
   15624:	andeq	r0, r0, r0
   15628:	ldr	r0, [r0, #8]
   1562c:	bx	lr
   15630:	ldr	r0, [r0, #12]
   15634:	bx	lr
   15638:	ldr	r0, [r0, #16]
   1563c:	bx	lr
   15640:	ldm	r0, {r2, ip}
   15644:	mov	r0, #0
   15648:	cmp	r2, ip
   1564c:	bxcs	lr
   15650:	mov	r0, #0
   15654:	ldr	r1, [r2]
   15658:	cmp	r1, #0
   1565c:	beq	15680 <__assert_fail@plt+0x3a50>
   15660:	mov	r3, #0
   15664:	mov	r1, r2
   15668:	ldr	r1, [r1, #4]
   1566c:	add	r3, r3, #1
   15670:	cmp	r1, #0
   15674:	bne	15668 <__assert_fail@plt+0x3a38>
   15678:	cmp	r3, r0
   1567c:	movhi	r0, r3
   15680:	add	r2, r2, #8
   15684:	cmp	r2, ip
   15688:	bcc	15654 <__assert_fail@plt+0x3a24>
   1568c:	bx	lr
   15690:	push	{fp, lr}
   15694:	mov	fp, sp
   15698:	ldm	r0, {r3, ip}
   1569c:	mov	lr, #0
   156a0:	mov	r1, #0
   156a4:	cmp	r3, ip
   156a8:	bcs	156e4 <__assert_fail@plt+0x3ab4>
   156ac:	mov	r1, #0
   156b0:	mov	lr, #0
   156b4:	ldr	r2, [r3]
   156b8:	cmp	r2, #0
   156bc:	beq	156d8 <__assert_fail@plt+0x3aa8>
   156c0:	mov	r2, r3
   156c4:	ldr	r2, [r2, #4]
   156c8:	add	r1, r1, #1
   156cc:	cmp	r2, #0
   156d0:	bne	156c4 <__assert_fail@plt+0x3a94>
   156d4:	add	lr, lr, #1
   156d8:	add	r3, r3, #8
   156dc:	cmp	r3, ip
   156e0:	bcc	156b4 <__assert_fail@plt+0x3a84>
   156e4:	ldr	r2, [r0, #12]
   156e8:	cmp	lr, r2
   156ec:	bne	15704 <__assert_fail@plt+0x3ad4>
   156f0:	ldr	r2, [r0, #16]
   156f4:	mov	r0, #1
   156f8:	cmp	r1, r2
   156fc:	movne	r0, #0
   15700:	pop	{fp, pc}
   15704:	mov	r0, #0
   15708:	pop	{fp, pc}
   1570c:	nop	{0}
   15710:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15714:	add	fp, sp, #24
   15718:	sub	sp, sp, #8
   1571c:	ldr	r6, [r0]
   15720:	ldmib	r0, {r2, r7, r8}
   15724:	ldr	r3, [r0, #16]
   15728:	mov	r4, r1
   1572c:	mov	r5, #0
   15730:	cmp	r6, r2
   15734:	bcs	15774 <__assert_fail@plt+0x3b44>
   15738:	mov	r5, #0
   1573c:	ldr	r0, [r6]
   15740:	cmp	r0, #0
   15744:	beq	15768 <__assert_fail@plt+0x3b38>
   15748:	mov	r0, #0
   1574c:	mov	r1, r6
   15750:	ldr	r1, [r1, #4]
   15754:	add	r0, r0, #1
   15758:	cmp	r1, #0
   1575c:	bne	15750 <__assert_fail@plt+0x3b20>
   15760:	cmp	r0, r5
   15764:	movhi	r5, r0
   15768:	add	r6, r6, #8
   1576c:	cmp	r6, r2
   15770:	bcc	1573c <__assert_fail@plt+0x3b0c>
   15774:	movw	r2, #44944	; 0xaf90
   15778:	mov	r0, r4
   1577c:	mov	r1, #1
   15780:	movt	r2, #1
   15784:	bl	11ab0 <__fprintf_chk@plt>
   15788:	movw	r2, #44968	; 0xafa8
   1578c:	mov	r0, r4
   15790:	mov	r1, #1
   15794:	mov	r3, r7
   15798:	movt	r2, #1
   1579c:	bl	11ab0 <__fprintf_chk@plt>
   157a0:	vmov	s0, r8
   157a4:	vldr	d16, [pc, #76]	; 157f8 <__assert_fail@plt+0x3bc8>
   157a8:	movw	r2, #44992	; 0xafc0
   157ac:	mov	r0, r4
   157b0:	mov	r1, #1
   157b4:	mov	r3, r8
   157b8:	movt	r2, #1
   157bc:	vcvt.f64.u32	d17, s0
   157c0:	vmov	s0, r7
   157c4:	vcvt.f64.u32	d18, s0
   157c8:	vmul.f64	d16, d17, d16
   157cc:	vdiv.f64	d16, d16, d18
   157d0:	vstr	d16, [sp]
   157d4:	bl	11ab0 <__fprintf_chk@plt>
   157d8:	movw	r2, #45025	; 0xafe1
   157dc:	mov	r0, r4
   157e0:	mov	r1, #1
   157e4:	mov	r3, r5
   157e8:	movt	r2, #1
   157ec:	sub	sp, fp, #24
   157f0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   157f4:	b	11ab0 <__fprintf_chk@plt>
   157f8:	andeq	r0, r0, r0
   157fc:	subsmi	r0, r9, r0
   15800:	push	{r4, r5, r6, r7, fp, lr}
   15804:	add	fp, sp, #16
   15808:	mov	r4, r1
   1580c:	ldr	r1, [r0, #8]
   15810:	ldr	r2, [r0, #24]
   15814:	mov	r5, r0
   15818:	mov	r0, r4
   1581c:	blx	r2
   15820:	ldr	r1, [r5, #8]
   15824:	cmp	r0, r1
   15828:	bcs	15888 <__assert_fail@plt+0x3c58>
   1582c:	ldr	r7, [r5]
   15830:	mov	r6, #0
   15834:	ldr	r1, [r7, r0, lsl #3]!
   15838:	cmp	r1, #0
   1583c:	cmpne	r7, #0
   15840:	bne	15870 <__assert_fail@plt+0x3c40>
   15844:	mov	r0, r6
   15848:	pop	{r4, r5, r6, r7, fp, pc}
   1584c:	ldr	r2, [r5, #28]
   15850:	mov	r0, r4
   15854:	blx	r2
   15858:	cmp	r0, #0
   1585c:	bne	15880 <__assert_fail@plt+0x3c50>
   15860:	ldr	r7, [r7, #4]
   15864:	cmp	r7, #0
   15868:	beq	15844 <__assert_fail@plt+0x3c14>
   1586c:	ldr	r1, [r7]
   15870:	cmp	r1, r4
   15874:	bne	1584c <__assert_fail@plt+0x3c1c>
   15878:	mov	r6, r4
   1587c:	b	15844 <__assert_fail@plt+0x3c14>
   15880:	ldr	r6, [r7]
   15884:	b	15844 <__assert_fail@plt+0x3c14>
   15888:	bl	11bd0 <abort@plt>
   1588c:	push	{fp, lr}
   15890:	mov	fp, sp
   15894:	ldr	r1, [r0, #16]
   15898:	cmp	r1, #0
   1589c:	beq	158bc <__assert_fail@plt+0x3c8c>
   158a0:	ldm	r0, {r1, r2}
   158a4:	cmp	r1, r2
   158a8:	bcs	158c4 <__assert_fail@plt+0x3c94>
   158ac:	ldr	r0, [r1], #8
   158b0:	cmp	r0, #0
   158b4:	beq	158a4 <__assert_fail@plt+0x3c74>
   158b8:	pop	{fp, pc}
   158bc:	mov	r0, #0
   158c0:	pop	{fp, pc}
   158c4:	bl	11bd0 <abort@plt>
   158c8:	push	{r4, r5, fp, lr}
   158cc:	add	fp, sp, #8
   158d0:	mov	r5, r1
   158d4:	ldr	r1, [r0, #8]
   158d8:	ldr	r2, [r0, #24]
   158dc:	mov	r4, r0
   158e0:	mov	r0, r5
   158e4:	blx	r2
   158e8:	ldr	r1, [r4, #8]
   158ec:	cmp	r0, r1
   158f0:	bcs	15954 <__assert_fail@plt+0x3d24>
   158f4:	ldr	r1, [r4]
   158f8:	add	r2, r1, r0, lsl #3
   158fc:	ldr	r3, [r2]
   15900:	ldr	r2, [r2, #4]
   15904:	cmp	r3, r5
   15908:	beq	15918 <__assert_fail@plt+0x3ce8>
   1590c:	cmp	r2, #0
   15910:	bne	158fc <__assert_fail@plt+0x3ccc>
   15914:	b	15928 <__assert_fail@plt+0x3cf8>
   15918:	cmp	r2, #0
   1591c:	beq	15928 <__assert_fail@plt+0x3cf8>
   15920:	ldr	r0, [r2]
   15924:	pop	{r4, r5, fp, pc}
   15928:	ldr	r2, [r4, #4]
   1592c:	add	r0, r1, r0, lsl #3
   15930:	add	r1, r0, #8
   15934:	cmp	r1, r2
   15938:	bcs	1594c <__assert_fail@plt+0x3d1c>
   1593c:	ldr	r0, [r1], #8
   15940:	cmp	r0, #0
   15944:	beq	15934 <__assert_fail@plt+0x3d04>
   15948:	pop	{r4, r5, fp, pc}
   1594c:	mov	r0, #0
   15950:	pop	{r4, r5, fp, pc}
   15954:	bl	11bd0 <abort@plt>
   15958:	push	{r4, r5, fp, lr}
   1595c:	add	fp, sp, #8
   15960:	ldm	r0, {r5, lr}
   15964:	mov	ip, r0
   15968:	mov	r0, #0
   1596c:	cmp	r5, lr
   15970:	popcs	{r4, r5, fp, pc}
   15974:	mov	r0, #0
   15978:	ldr	r3, [r5]
   1597c:	cmp	r3, #0
   15980:	cmpne	r5, #0
   15984:	bne	15998 <__assert_fail@plt+0x3d68>
   15988:	add	r5, r5, #8
   1598c:	cmp	r5, lr
   15990:	bcc	15978 <__assert_fail@plt+0x3d48>
   15994:	b	159c4 <__assert_fail@plt+0x3d94>
   15998:	mov	r3, r5
   1599c:	cmp	r0, r2
   159a0:	bcs	159c4 <__assert_fail@plt+0x3d94>
   159a4:	ldr	r4, [r3]
   159a8:	str	r4, [r1, r0, lsl #2]
   159ac:	add	r0, r0, #1
   159b0:	ldr	r3, [r3, #4]
   159b4:	cmp	r3, #0
   159b8:	bne	1599c <__assert_fail@plt+0x3d6c>
   159bc:	ldr	lr, [ip, #4]
   159c0:	b	15988 <__assert_fail@plt+0x3d58>
   159c4:	pop	{r4, r5, fp, pc}
   159c8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   159cc:	add	fp, sp, #24
   159d0:	mov	r5, r1
   159d4:	ldr	r4, [r0]
   159d8:	ldr	r1, [r0, #4]
   159dc:	mov	r6, #0
   159e0:	cmp	r4, r1
   159e4:	bcs	15a58 <__assert_fail@plt+0x3e28>
   159e8:	mov	r9, r2
   159ec:	mov	r8, r0
   159f0:	mov	r6, #0
   159f4:	ldr	r0, [r4]
   159f8:	cmp	r0, #0
   159fc:	cmpne	r4, #0
   15a00:	bne	15a14 <__assert_fail@plt+0x3de4>
   15a04:	add	r4, r4, #8
   15a08:	cmp	r4, r1
   15a0c:	bcc	159f4 <__assert_fail@plt+0x3dc4>
   15a10:	b	15a58 <__assert_fail@plt+0x3e28>
   15a14:	mov	r1, r9
   15a18:	blx	r5
   15a1c:	cmp	r0, #0
   15a20:	beq	15a58 <__assert_fail@plt+0x3e28>
   15a24:	mov	r7, r4
   15a28:	ldr	r7, [r7, #4]
   15a2c:	add	r6, r6, #1
   15a30:	cmp	r7, #0
   15a34:	beq	15a50 <__assert_fail@plt+0x3e20>
   15a38:	ldr	r0, [r7]
   15a3c:	mov	r1, r9
   15a40:	blx	r5
   15a44:	cmp	r0, #0
   15a48:	bne	15a28 <__assert_fail@plt+0x3df8>
   15a4c:	b	15a58 <__assert_fail@plt+0x3e28>
   15a50:	ldr	r1, [r8, #4]
   15a54:	b	15a04 <__assert_fail@plt+0x3dd4>
   15a58:	mov	r0, r6
   15a5c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15a60:	ldrb	r2, [r0]
   15a64:	cmp	r2, #0
   15a68:	moveq	r0, #0
   15a6c:	bxeq	lr
   15a70:	add	r3, r0, #1
   15a74:	mov	r0, #0
   15a78:	rsb	r0, r0, r0, lsl #5
   15a7c:	uxtab	r0, r0, r2
   15a80:	udiv	r2, r0, r1
   15a84:	mls	r0, r2, r1, r0
   15a88:	ldrb	r2, [r3], #1
   15a8c:	cmp	r2, #0
   15a90:	bne	15a78 <__assert_fail@plt+0x3e48>
   15a94:	bx	lr
   15a98:	movw	r1, #45056	; 0xb000
   15a9c:	movt	r1, #1
   15aa0:	vld1.32	{d16-d17}, [r1]!
   15aa4:	ldr	r1, [r1]
   15aa8:	vst1.32	{d16-d17}, [r0]!
   15aac:	str	r1, [r0]
   15ab0:	bx	lr
   15ab4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15ab8:	add	fp, sp, #28
   15abc:	sub	sp, sp, #4
   15ac0:	movw	sl, #23464	; 0x5ba8
   15ac4:	cmp	r3, #0
   15ac8:	movw	r5, #23444	; 0x5b94
   15acc:	mov	r8, r0
   15ad0:	mov	r0, #40	; 0x28
   15ad4:	mov	r7, r1
   15ad8:	movt	sl, #1
   15adc:	movne	sl, r3
   15ae0:	cmp	r2, #0
   15ae4:	movt	r5, #1
   15ae8:	movne	r5, r2
   15aec:	bl	19be4 <lchmod@@Base+0x34d0>
   15af0:	mov	r9, #0
   15af4:	cmp	r0, #0
   15af8:	beq	15b88 <__assert_fail@plt+0x3f58>
   15afc:	movw	r6, #45056	; 0xb000
   15b00:	cmp	r7, #0
   15b04:	mov	r4, r0
   15b08:	movt	r6, #1
   15b0c:	movne	r6, r7
   15b10:	str	r6, [r0, #20]
   15b14:	bl	15bb8 <__assert_fail@plt+0x3f88>
   15b18:	cmp	r0, #0
   15b1c:	beq	15b80 <__assert_fail@plt+0x3f50>
   15b20:	mov	r0, r8
   15b24:	mov	r1, r6
   15b28:	bl	15c64 <__assert_fail@plt+0x4034>
   15b2c:	cmp	r0, #0
   15b30:	str	r0, [r4, #8]
   15b34:	beq	15b80 <__assert_fail@plt+0x3f50>
   15b38:	mov	r1, #8
   15b3c:	bl	19b90 <lchmod@@Base+0x347c>
   15b40:	cmp	r0, #0
   15b44:	str	r0, [r4]
   15b48:	beq	15b80 <__assert_fail@plt+0x3f50>
   15b4c:	ldr	r1, [fp, #8]
   15b50:	mov	r2, #0
   15b54:	str	r5, [r4, #24]
   15b58:	str	sl, [r4, #28]
   15b5c:	mov	r9, r4
   15b60:	str	r1, [r4, #32]
   15b64:	str	r2, [r4, #36]	; 0x24
   15b68:	str	r2, [r4, #12]
   15b6c:	str	r2, [r4, #16]
   15b70:	ldr	r1, [r4, #8]
   15b74:	add	r0, r0, r1, lsl #3
   15b78:	str	r0, [r4, #4]
   15b7c:	b	15b88 <__assert_fail@plt+0x3f58>
   15b80:	mov	r0, r4
   15b84:	bl	135bc <__assert_fail@plt+0x198c>
   15b88:	mov	r0, r9
   15b8c:	sub	sp, fp, #28
   15b90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15b94:	ror	r2, r0, #3
   15b98:	udiv	r2, r2, r1
   15b9c:	mul	r1, r2, r1
   15ba0:	rsb	r0, r1, r0, ror #3
   15ba4:	bx	lr
   15ba8:	sub	r0, r0, r1
   15bac:	clz	r0, r0
   15bb0:	lsr	r0, r0, #5
   15bb4:	bx	lr
   15bb8:	ldr	r3, [r0, #20]
   15bbc:	movw	r2, #45056	; 0xb000
   15bc0:	mov	r1, r0
   15bc4:	mov	r0, #1
   15bc8:	movt	r2, #1
   15bcc:	cmp	r3, r2
   15bd0:	beq	15c54 <__assert_fail@plt+0x4024>
   15bd4:	vldr	s2, [pc, #124]	; 15c58 <__assert_fail@plt+0x4028>
   15bd8:	vldr	s0, [r3, #8]
   15bdc:	vcmpe.f32	s0, s2
   15be0:	vmrs	APSR_nzcv, fpscr
   15be4:	ble	15c4c <__assert_fail@plt+0x401c>
   15be8:	vldr	s4, [pc, #108]	; 15c5c <__assert_fail@plt+0x402c>
   15bec:	vcmpe.f32	s0, s4
   15bf0:	vmrs	APSR_nzcv, fpscr
   15bf4:	bpl	15c4c <__assert_fail@plt+0x401c>
   15bf8:	vldr	s4, [pc, #96]	; 15c60 <__assert_fail@plt+0x4030>
   15bfc:	vldr	s6, [r3, #12]
   15c00:	vcmpe.f32	s6, s4
   15c04:	vmrs	APSR_nzcv, fpscr
   15c08:	ble	15c4c <__assert_fail@plt+0x401c>
   15c0c:	vldr	s4, [r3]
   15c10:	vcmpe.f32	s4, #0.0
   15c14:	vmrs	APSR_nzcv, fpscr
   15c18:	blt	15c4c <__assert_fail@plt+0x401c>
   15c1c:	vadd.f32	s2, s4, s2
   15c20:	vcmpe.f32	s2, s0
   15c24:	vmrs	APSR_nzcv, fpscr
   15c28:	bpl	15c4c <__assert_fail@plt+0x401c>
   15c2c:	vldr	s0, [r3, #4]
   15c30:	vmov.f32	s4, #112	; 0x3f800000  1.0
   15c34:	vcmpe.f32	s0, s4
   15c38:	vmrs	APSR_nzcv, fpscr
   15c3c:	bhi	15c4c <__assert_fail@plt+0x401c>
   15c40:	vcmpe.f32	s2, s0
   15c44:	vmrs	APSR_nzcv, fpscr
   15c48:	bxmi	lr
   15c4c:	mov	r0, #0
   15c50:	str	r2, [r1, #20]
   15c54:	bx	lr
   15c58:	stclcc	12, cr12, [ip, #820]	; 0x334
   15c5c:	svccc	0x00666666
   15c60:	svccc	0x008ccccd
   15c64:	ldrb	r2, [r1, #16]
   15c68:	cmp	r2, #0
   15c6c:	bne	15c9c <__assert_fail@plt+0x406c>
   15c70:	vmov	s2, r0
   15c74:	vldr	s0, [r1, #8]
   15c78:	vldr	s4, [pc, #156]	; 15d1c <__assert_fail@plt+0x40ec>
   15c7c:	mov	r0, #0
   15c80:	vcvt.f32.u32	s2, s2
   15c84:	vdiv.f32	s2, s2, s0
   15c88:	vcmpe.f32	s2, s4
   15c8c:	vcvt.u32.f32	s0, s2
   15c90:	vmrs	APSR_nzcv, fpscr
   15c94:	bxge	lr
   15c98:	vmov	r0, s0
   15c9c:	cmp	r0, #10
   15ca0:	movls	r0, #10
   15ca4:	orr	r0, r0, #1
   15ca8:	cmn	r0, #1
   15cac:	beq	15d08 <__assert_fail@plt+0x40d8>
   15cb0:	mov	r1, #3
   15cb4:	cmp	r0, #10
   15cb8:	bcc	15cf0 <__assert_fail@plt+0x40c0>
   15cbc:	mov	r1, #3
   15cc0:	mov	ip, #9
   15cc4:	mov	r2, #12
   15cc8:	udiv	r3, r0, r1
   15ccc:	mls	r3, r3, r1, r0
   15cd0:	cmp	r3, #0
   15cd4:	beq	15cf0 <__assert_fail@plt+0x40c0>
   15cd8:	add	r3, ip, r2
   15cdc:	add	r2, r2, #8
   15ce0:	add	r1, r1, #2
   15ce4:	add	ip, r3, #4
   15ce8:	cmp	ip, r0
   15cec:	bcc	15cc8 <__assert_fail@plt+0x4098>
   15cf0:	udiv	r2, r0, r1
   15cf4:	mls	r1, r2, r1, r0
   15cf8:	cmp	r1, #0
   15cfc:	bne	15d10 <__assert_fail@plt+0x40e0>
   15d00:	add	r0, r0, #2
   15d04:	b	15ca8 <__assert_fail@plt+0x4078>
   15d08:	mov	r0, #0
   15d0c:	bx	lr
   15d10:	cmp	r0, #536870912	; 0x20000000
   15d14:	movcs	r0, #0
   15d18:	bx	lr
   15d1c:	svcmi	0x00800000
   15d20:	push	{r4, r5, r6, r7, fp, lr}
   15d24:	add	fp, sp, #16
   15d28:	mov	r4, r0
   15d2c:	ldr	r5, [r0]
   15d30:	ldr	r0, [r0, #4]
   15d34:	cmp	r5, r0
   15d38:	bcs	15dd0 <__assert_fail@plt+0x41a0>
   15d3c:	mov	r6, #0
   15d40:	ldr	r1, [r5]
   15d44:	cmp	r1, #0
   15d48:	beq	15dc4 <__assert_fail@plt+0x4194>
   15d4c:	ldr	r1, [r4, #32]
   15d50:	ldr	r7, [r5, #4]
   15d54:	cmp	r1, #0
   15d58:	mov	r0, r1
   15d5c:	movwne	r0, #1
   15d60:	cmp	r7, #0
   15d64:	beq	15da8 <__assert_fail@plt+0x4178>
   15d68:	tst	r0, #1
   15d6c:	beq	15d7c <__assert_fail@plt+0x414c>
   15d70:	ldr	r0, [r7]
   15d74:	blx	r1
   15d78:	ldr	r1, [r4, #32]
   15d7c:	str	r6, [r7]
   15d80:	cmp	r1, #0
   15d84:	ldr	r2, [r7, #4]
   15d88:	ldr	r0, [r4, #36]	; 0x24
   15d8c:	str	r0, [r7, #4]
   15d90:	mov	r0, r1
   15d94:	str	r7, [r4, #36]	; 0x24
   15d98:	movwne	r0, #1
   15d9c:	cmp	r2, #0
   15da0:	mov	r7, r2
   15da4:	bne	15d68 <__assert_fail@plt+0x4138>
   15da8:	cmp	r0, #0
   15dac:	beq	15db8 <__assert_fail@plt+0x4188>
   15db0:	ldr	r0, [r5]
   15db4:	blx	r1
   15db8:	str	r6, [r5]
   15dbc:	str	r6, [r5, #4]
   15dc0:	ldr	r0, [r4, #4]
   15dc4:	add	r5, r5, #8
   15dc8:	cmp	r5, r0
   15dcc:	bcc	15d40 <__assert_fail@plt+0x4110>
   15dd0:	mov	r0, #0
   15dd4:	str	r0, [r4, #12]
   15dd8:	str	r0, [r4, #16]
   15ddc:	pop	{r4, r5, r6, r7, fp, pc}
   15de0:	push	{r4, r5, r6, sl, fp, lr}
   15de4:	add	fp, sp, #16
   15de8:	mov	r4, r0
   15dec:	ldr	r0, [r0, #32]
   15df0:	cmp	r0, #0
   15df4:	beq	15e58 <__assert_fail@plt+0x4228>
   15df8:	ldr	r0, [r4, #16]
   15dfc:	cmp	r0, #0
   15e00:	beq	15e58 <__assert_fail@plt+0x4228>
   15e04:	ldr	r5, [r4]
   15e08:	ldr	r1, [r4, #4]
   15e0c:	cmp	r5, r1
   15e10:	bcs	15e58 <__assert_fail@plt+0x4228>
   15e14:	ldr	r0, [r5]
   15e18:	cmp	r0, #0
   15e1c:	cmpne	r5, #0
   15e20:	beq	15e50 <__assert_fail@plt+0x4220>
   15e24:	ldr	r1, [r4, #32]
   15e28:	blx	r1
   15e2c:	ldr	r6, [r5, #4]
   15e30:	cmp	r6, #0
   15e34:	beq	15e4c <__assert_fail@plt+0x421c>
   15e38:	ldr	r1, [r4, #32]
   15e3c:	ldr	r0, [r6]
   15e40:	blx	r1
   15e44:	ldr	r6, [r6, #4]
   15e48:	b	15e30 <__assert_fail@plt+0x4200>
   15e4c:	ldr	r1, [r4, #4]
   15e50:	add	r5, r5, #8
   15e54:	b	15e0c <__assert_fail@plt+0x41dc>
   15e58:	ldr	r5, [r4]
   15e5c:	ldr	r1, [r4, #4]
   15e60:	cmp	r5, r1
   15e64:	bcs	15e94 <__assert_fail@plt+0x4264>
   15e68:	ldr	r0, [r5, #4]
   15e6c:	cmp	r0, #0
   15e70:	beq	15e8c <__assert_fail@plt+0x425c>
   15e74:	ldr	r6, [r0, #4]
   15e78:	bl	135bc <__assert_fail@plt+0x198c>
   15e7c:	cmp	r6, #0
   15e80:	mov	r0, r6
   15e84:	bne	15e74 <__assert_fail@plt+0x4244>
   15e88:	ldr	r1, [r4, #4]
   15e8c:	add	r5, r5, #8
   15e90:	b	15e60 <__assert_fail@plt+0x4230>
   15e94:	ldr	r0, [r4, #36]	; 0x24
   15e98:	cmp	r0, #0
   15e9c:	beq	15eb4 <__assert_fail@plt+0x4284>
   15ea0:	ldr	r5, [r0, #4]
   15ea4:	bl	135bc <__assert_fail@plt+0x198c>
   15ea8:	cmp	r5, #0
   15eac:	mov	r0, r5
   15eb0:	bne	15ea0 <__assert_fail@plt+0x4270>
   15eb4:	ldr	r0, [r4]
   15eb8:	bl	135bc <__assert_fail@plt+0x198c>
   15ebc:	mov	r0, r4
   15ec0:	pop	{r4, r5, r6, sl, fp, lr}
   15ec4:	b	135bc <__assert_fail@plt+0x198c>
   15ec8:	push	{r4, r5, r6, r7, fp, lr}
   15ecc:	add	fp, sp, #16
   15ed0:	sub	sp, sp, #40	; 0x28
   15ed4:	mov	r7, r0
   15ed8:	mov	r2, r1
   15edc:	mov	r4, r0
   15ee0:	ldr	r1, [r7, #20]!
   15ee4:	mov	r0, r2
   15ee8:	bl	15c64 <__assert_fail@plt+0x4034>
   15eec:	mov	r5, #0
   15ef0:	cmp	r0, #0
   15ef4:	beq	15f88 <__assert_fail@plt+0x4358>
   15ef8:	mov	r6, r0
   15efc:	ldr	r0, [r4, #8]
   15f00:	cmp	r6, r0
   15f04:	beq	15f84 <__assert_fail@plt+0x4354>
   15f08:	mov	r0, r6
   15f0c:	mov	r1, #8
   15f10:	bl	19b90 <lchmod@@Base+0x347c>
   15f14:	cmp	r0, #0
   15f18:	str	r0, [sp]
   15f1c:	beq	15f88 <__assert_fail@plt+0x4358>
   15f20:	add	r0, r0, r6, lsl #3
   15f24:	mov	r1, #0
   15f28:	mov	r5, sp
   15f2c:	mov	r2, #0
   15f30:	str	r1, [sp, #16]
   15f34:	str	r1, [sp, #12]
   15f38:	str	r6, [sp, #8]
   15f3c:	mov	r1, r4
   15f40:	str	r0, [sp, #4]
   15f44:	add	r0, r5, #20
   15f48:	vld1.32	{d16-d17}, [r7]
   15f4c:	vst1.32	{d16-d17}, [r0]
   15f50:	ldr	r0, [r4, #36]	; 0x24
   15f54:	str	r0, [sp, #36]	; 0x24
   15f58:	mov	r0, r5
   15f5c:	bl	15fe0 <__assert_fail@plt+0x43b0>
   15f60:	cmp	r0, #0
   15f64:	beq	15f94 <__assert_fail@plt+0x4364>
   15f68:	ldr	r0, [r4]
   15f6c:	bl	135bc <__assert_fail@plt+0x198c>
   15f70:	mov	r0, #36	; 0x24
   15f74:	vld1.32	{d16-d17}, [r5], r0
   15f78:	vst1.32	{d16-d17}, [r4], r0
   15f7c:	ldr	r0, [r5]
   15f80:	str	r0, [r4]
   15f84:	mov	r5, #1
   15f88:	mov	r0, r5
   15f8c:	sub	sp, fp, #16
   15f90:	pop	{r4, r5, r6, r7, fp, pc}
   15f94:	ldr	r0, [sp, #36]	; 0x24
   15f98:	mov	r1, sp
   15f9c:	mov	r2, #1
   15fa0:	str	r0, [r4, #36]	; 0x24
   15fa4:	mov	r0, r4
   15fa8:	bl	15fe0 <__assert_fail@plt+0x43b0>
   15fac:	cmp	r0, #0
   15fb0:	beq	15fdc <__assert_fail@plt+0x43ac>
   15fb4:	mov	r1, sp
   15fb8:	mov	r0, r4
   15fbc:	mov	r2, #0
   15fc0:	mov	r5, #0
   15fc4:	bl	15fe0 <__assert_fail@plt+0x43b0>
   15fc8:	cmp	r0, #0
   15fcc:	beq	15fdc <__assert_fail@plt+0x43ac>
   15fd0:	ldr	r0, [sp]
   15fd4:	bl	135bc <__assert_fail@plt+0x198c>
   15fd8:	b	15f88 <__assert_fail@plt+0x4358>
   15fdc:	bl	11bd0 <abort@plt>
   15fe0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15fe4:	add	fp, sp, #28
   15fe8:	sub	sp, sp, #12
   15fec:	ldr	sl, [r1]
   15ff0:	str	r1, [sp, #8]
   15ff4:	ldr	r1, [r1, #4]
   15ff8:	mov	r7, r0
   15ffc:	mov	r0, #1
   16000:	str	r2, [sp, #4]
   16004:	cmp	sl, r1
   16008:	bcs	1615c <__assert_fail@plt+0x452c>
   1600c:	add	r8, r7, #36	; 0x24
   16010:	mov	r9, #0
   16014:	ldr	r4, [sl]
   16018:	cmp	r4, #0
   1601c:	beq	16144 <__assert_fail@plt+0x4514>
   16020:	ldr	r5, [sl, #4]
   16024:	cmp	r5, #0
   16028:	beq	160a0 <__assert_fail@plt+0x4470>
   1602c:	ldr	r1, [r7, #8]
   16030:	ldr	r4, [r5]
   16034:	ldr	r2, [r7, #24]
   16038:	mov	r0, r4
   1603c:	blx	r2
   16040:	ldr	r1, [r7, #8]
   16044:	cmp	r0, r1
   16048:	bcs	1616c <__assert_fail@plt+0x453c>
   1604c:	ldr	r3, [r7]
   16050:	ldr	r2, [r5, #4]
   16054:	ldr	r6, [r3, r0, lsl #3]
   16058:	cmp	r6, #0
   1605c:	beq	1606c <__assert_fail@plt+0x443c>
   16060:	add	r0, r3, r0, lsl #3
   16064:	add	r0, r0, #4
   16068:	b	16084 <__assert_fail@plt+0x4454>
   1606c:	str	r4, [r3, r0, lsl #3]
   16070:	ldr	r0, [r7, #12]
   16074:	add	r0, r0, #1
   16078:	str	r0, [r7, #12]
   1607c:	mov	r0, r8
   16080:	str	r9, [r5]
   16084:	ldr	r3, [r0]
   16088:	cmp	r2, #0
   1608c:	str	r3, [r5, #4]
   16090:	str	r5, [r0]
   16094:	mov	r5, r2
   16098:	bne	16030 <__assert_fail@plt+0x4400>
   1609c:	ldr	r4, [sl]
   160a0:	ldr	r0, [sp, #4]
   160a4:	str	r9, [sl, #4]
   160a8:	cmp	r0, #0
   160ac:	bne	16144 <__assert_fail@plt+0x4514>
   160b0:	ldr	r1, [r7, #8]
   160b4:	ldr	r2, [r7, #24]
   160b8:	mov	r0, r4
   160bc:	blx	r2
   160c0:	mov	r5, r0
   160c4:	ldr	r0, [r7, #8]
   160c8:	cmp	r5, r0
   160cc:	bcs	1616c <__assert_fail@plt+0x453c>
   160d0:	ldr	r6, [r7]
   160d4:	ldr	r0, [r6, r5, lsl #3]
   160d8:	cmp	r0, #0
   160dc:	beq	160f8 <__assert_fail@plt+0x44c8>
   160e0:	ldr	r0, [r8]
   160e4:	cmp	r0, #0
   160e8:	beq	1610c <__assert_fail@plt+0x44dc>
   160ec:	ldr	r1, [r0, #4]
   160f0:	str	r1, [r8]
   160f4:	b	1611c <__assert_fail@plt+0x44ec>
   160f8:	str	r4, [r6, r5, lsl #3]
   160fc:	ldr	r0, [r7, #12]
   16100:	add	r0, r0, #1
   16104:	str	r0, [r7, #12]
   16108:	b	16130 <__assert_fail@plt+0x4500>
   1610c:	mov	r0, #8
   16110:	bl	19be4 <lchmod@@Base+0x34d0>
   16114:	cmp	r0, #0
   16118:	beq	16164 <__assert_fail@plt+0x4534>
   1611c:	add	r1, r6, r5, lsl #3
   16120:	str	r4, [r0]
   16124:	ldr	r2, [r1, #4]
   16128:	str	r2, [r0, #4]
   1612c:	str	r0, [r1, #4]
   16130:	ldr	r1, [sp, #8]
   16134:	str	r9, [sl]
   16138:	ldr	r0, [r1, #12]
   1613c:	sub	r0, r0, #1
   16140:	str	r0, [r1, #12]
   16144:	ldr	r0, [sp, #8]
   16148:	add	sl, sl, #8
   1614c:	ldr	r0, [r0, #4]
   16150:	cmp	sl, r0
   16154:	bcc	16014 <__assert_fail@plt+0x43e4>
   16158:	mov	r0, #1
   1615c:	sub	sp, fp, #28
   16160:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16164:	mov	r0, #0
   16168:	b	1615c <__assert_fail@plt+0x452c>
   1616c:	bl	11bd0 <abort@plt>
   16170:	push	{r4, r5, r6, r7, fp, lr}
   16174:	add	fp, sp, #16
   16178:	sub	sp, sp, #8
   1617c:	cmp	r1, #0
   16180:	beq	162f8 <__assert_fail@plt+0x46c8>
   16184:	mov	r7, r2
   16188:	add	r2, sp, #4
   1618c:	mov	r3, #0
   16190:	mov	r5, r1
   16194:	mov	r4, r0
   16198:	mov	r6, #0
   1619c:	bl	16300 <__assert_fail@plt+0x46d0>
   161a0:	cmp	r0, #0
   161a4:	beq	161b4 <__assert_fail@plt+0x4584>
   161a8:	cmp	r7, #0
   161ac:	strne	r0, [r7]
   161b0:	b	162e4 <__assert_fail@plt+0x46b4>
   161b4:	vldr	s0, [r4, #8]
   161b8:	ldr	r0, [r4, #20]
   161bc:	vldr	s2, [r4, #12]
   161c0:	vldr	s4, [r0, #8]
   161c4:	vcvt.f32.u32	s0, s0
   161c8:	vcvt.f32.u32	s2, s2
   161cc:	vmul.f32	s0, s4, s0
   161d0:	vcmpe.f32	s0, s2
   161d4:	vmrs	APSR_nzcv, fpscr
   161d8:	bpl	1626c <__assert_fail@plt+0x463c>
   161dc:	mov	r0, r4
   161e0:	bl	15bb8 <__assert_fail@plt+0x3f88>
   161e4:	vldr	s0, [r4, #8]
   161e8:	ldr	r0, [r4, #20]
   161ec:	vldr	s4, [r4, #12]
   161f0:	vcvt.f32.u32	s2, s0
   161f4:	vldr	s0, [r0, #8]
   161f8:	vcvt.f32.u32	s4, s4
   161fc:	vmul.f32	s6, s0, s2
   16200:	vcmpe.f32	s6, s4
   16204:	vmrs	APSR_nzcv, fpscr
   16208:	bpl	1626c <__assert_fail@plt+0x463c>
   1620c:	vldr	s4, [r0, #12]
   16210:	ldrb	r0, [r0, #16]
   16214:	mvn	r6, #0
   16218:	cmp	r0, #0
   1621c:	vmul.f32	s2, s4, s2
   16220:	vldr	s4, [pc, #212]	; 162fc <__assert_fail@plt+0x46cc>
   16224:	vmul.f32	s0, s0, s2
   16228:	vseleq.f32	s0, s0, s2
   1622c:	vcmpe.f32	s0, s4
   16230:	vmrs	APSR_nzcv, fpscr
   16234:	bge	162e4 <__assert_fail@plt+0x46b4>
   16238:	vcvt.u32.f32	s0, s0
   1623c:	mov	r0, r4
   16240:	vmov	r1, s0
   16244:	bl	15ec8 <__assert_fail@plt+0x4298>
   16248:	cmp	r0, #0
   1624c:	beq	162e4 <__assert_fail@plt+0x46b4>
   16250:	add	r2, sp, #4
   16254:	mov	r0, r4
   16258:	mov	r1, r5
   1625c:	mov	r3, #0
   16260:	bl	16300 <__assert_fail@plt+0x46d0>
   16264:	cmp	r0, #0
   16268:	bne	162f8 <__assert_fail@plt+0x46c8>
   1626c:	ldr	r6, [sp, #4]
   16270:	ldr	r0, [r6]
   16274:	cmp	r0, #0
   16278:	beq	16294 <__assert_fail@plt+0x4664>
   1627c:	ldr	r0, [r4, #36]	; 0x24
   16280:	cmp	r0, #0
   16284:	beq	162b4 <__assert_fail@plt+0x4684>
   16288:	ldr	r1, [r0, #4]
   1628c:	str	r1, [r4, #36]	; 0x24
   16290:	b	162c4 <__assert_fail@plt+0x4694>
   16294:	str	r5, [r6]
   16298:	ldr	r0, [r4, #12]
   1629c:	ldr	r1, [r4, #16]
   162a0:	add	r0, r0, #1
   162a4:	add	r1, r1, #1
   162a8:	str	r0, [r4, #12]
   162ac:	str	r1, [r4, #16]
   162b0:	b	162e0 <__assert_fail@plt+0x46b0>
   162b4:	mov	r0, #8
   162b8:	bl	19be4 <lchmod@@Base+0x34d0>
   162bc:	cmp	r0, #0
   162c0:	beq	162f0 <__assert_fail@plt+0x46c0>
   162c4:	str	r5, [r0]
   162c8:	ldr	r1, [r6, #4]
   162cc:	str	r1, [r0, #4]
   162d0:	str	r0, [r6, #4]
   162d4:	ldr	r0, [r4, #16]
   162d8:	add	r0, r0, #1
   162dc:	str	r0, [r4, #16]
   162e0:	mov	r6, #1
   162e4:	mov	r0, r6
   162e8:	sub	sp, fp, #16
   162ec:	pop	{r4, r5, r6, r7, fp, pc}
   162f0:	mvn	r6, #0
   162f4:	b	162e4 <__assert_fail@plt+0x46b4>
   162f8:	bl	11bd0 <abort@plt>
   162fc:	svcmi	0x00800000
   16300:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16304:	add	fp, sp, #24
   16308:	mov	r7, r2
   1630c:	mov	r4, r1
   16310:	ldr	r1, [r0, #8]
   16314:	ldr	r2, [r0, #24]
   16318:	mov	r5, r0
   1631c:	mov	r8, r3
   16320:	mov	r0, r4
   16324:	blx	r2
   16328:	ldr	r1, [r5, #8]
   1632c:	cmp	r0, r1
   16330:	bcs	1642c <__assert_fail@plt+0x47fc>
   16334:	ldr	r1, [r5]
   16338:	add	r6, r1, r0, lsl #3
   1633c:	str	r6, [r7]
   16340:	ldr	r1, [r1, r0, lsl #3]
   16344:	cmp	r1, #0
   16348:	beq	163e0 <__assert_fail@plt+0x47b0>
   1634c:	cmp	r1, r4
   16350:	beq	1636c <__assert_fail@plt+0x473c>
   16354:	ldr	r2, [r5, #28]
   16358:	mov	r0, r4
   1635c:	blx	r2
   16360:	cmp	r0, #0
   16364:	beq	163a0 <__assert_fail@plt+0x4770>
   16368:	ldr	r4, [r6]
   1636c:	cmp	r8, #0
   16370:	beq	163e4 <__assert_fail@plt+0x47b4>
   16374:	ldr	r0, [r6, #4]
   16378:	cmp	r0, #0
   1637c:	beq	163ec <__assert_fail@plt+0x47bc>
   16380:	ldm	r0, {r1, r2}
   16384:	stm	r6, {r1, r2}
   16388:	mov	r1, #0
   1638c:	str	r1, [r0]
   16390:	ldr	r1, [r5, #36]	; 0x24
   16394:	str	r1, [r0, #4]
   16398:	str	r0, [r5, #36]	; 0x24
   1639c:	b	163e4 <__assert_fail@plt+0x47b4>
   163a0:	ldr	r0, [r6, #4]!
   163a4:	cmp	r0, #0
   163a8:	beq	163e0 <__assert_fail@plt+0x47b0>
   163ac:	ldr	r1, [r0]
   163b0:	cmp	r1, r4
   163b4:	beq	163f8 <__assert_fail@plt+0x47c8>
   163b8:	ldr	r2, [r5, #28]
   163bc:	mov	r0, r4
   163c0:	blx	r2
   163c4:	ldr	r1, [r6]
   163c8:	cmp	r0, #0
   163cc:	bne	16400 <__assert_fail@plt+0x47d0>
   163d0:	ldr	r0, [r1, #4]!
   163d4:	mov	r6, r1
   163d8:	cmp	r0, #0
   163dc:	bne	163ac <__assert_fail@plt+0x477c>
   163e0:	mov	r4, #0
   163e4:	mov	r0, r4
   163e8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   163ec:	mov	r0, #0
   163f0:	str	r0, [r6]
   163f4:	b	163e4 <__assert_fail@plt+0x47b4>
   163f8:	mov	r1, r0
   163fc:	b	16404 <__assert_fail@plt+0x47d4>
   16400:	ldr	r4, [r1]
   16404:	cmp	r8, #0
   16408:	beq	163e4 <__assert_fail@plt+0x47b4>
   1640c:	ldr	r0, [r1, #4]
   16410:	str	r0, [r6]
   16414:	mov	r0, #0
   16418:	str	r0, [r1]
   1641c:	ldr	r0, [r5, #36]	; 0x24
   16420:	str	r0, [r1, #4]
   16424:	str	r1, [r5, #36]	; 0x24
   16428:	b	163e4 <__assert_fail@plt+0x47b4>
   1642c:	bl	11bd0 <abort@plt>
   16430:	push	{r4, sl, fp, lr}
   16434:	add	fp, sp, #8
   16438:	sub	sp, sp, #8
   1643c:	add	r2, sp, #4
   16440:	mov	r4, r1
   16444:	bl	16170 <__assert_fail@plt+0x4540>
   16448:	cmn	r0, #1
   1644c:	beq	16460 <__assert_fail@plt+0x4830>
   16450:	ldr	r1, [sp, #4]
   16454:	cmp	r0, #0
   16458:	moveq	r4, r1
   1645c:	b	16464 <__assert_fail@plt+0x4834>
   16460:	mov	r4, #0
   16464:	mov	r0, r4
   16468:	sub	sp, fp, #8
   1646c:	pop	{r4, sl, fp, pc}
   16470:	push	{r4, r5, r6, sl, fp, lr}
   16474:	add	fp, sp, #16
   16478:	sub	sp, sp, #8
   1647c:	add	r2, sp, #4
   16480:	mov	r3, #1
   16484:	mov	r4, r0
   16488:	bl	16300 <__assert_fail@plt+0x46d0>
   1648c:	mov	r5, r0
   16490:	cmp	r0, #0
   16494:	beq	16574 <__assert_fail@plt+0x4944>
   16498:	ldr	r0, [r4, #16]
   1649c:	sub	r0, r0, #1
   164a0:	str	r0, [r4, #16]
   164a4:	ldr	r0, [sp, #4]
   164a8:	ldr	r0, [r0]
   164ac:	cmp	r0, #0
   164b0:	bne	16574 <__assert_fail@plt+0x4944>
   164b4:	ldr	r0, [r4, #12]
   164b8:	vldr	s0, [r4, #8]
   164bc:	sub	r0, r0, #1
   164c0:	str	r0, [r4, #12]
   164c4:	vmov	s4, r0
   164c8:	ldr	r1, [r4, #20]
   164cc:	vldr	s2, [r1]
   164d0:	vcvt.f32.u32	s0, s0
   164d4:	vcvt.f32.u32	s4, s4
   164d8:	vmul.f32	s0, s2, s0
   164dc:	vcmpe.f32	s0, s4
   164e0:	vmrs	APSR_nzcv, fpscr
   164e4:	ble	16574 <__assert_fail@plt+0x4944>
   164e8:	mov	r0, r4
   164ec:	bl	15bb8 <__assert_fail@plt+0x3f88>
   164f0:	vldr	s0, [r4, #8]
   164f4:	ldr	r0, [r4, #20]
   164f8:	vldr	s2, [r4, #12]
   164fc:	vcvt.f32.u32	s0, s0
   16500:	vldr	s4, [r0]
   16504:	vcvt.f32.u32	s2, s2
   16508:	vmul.f32	s4, s4, s0
   1650c:	vcmpe.f32	s4, s2
   16510:	vmrs	APSR_nzcv, fpscr
   16514:	ble	16574 <__assert_fail@plt+0x4944>
   16518:	vldr	s2, [r0, #4]
   1651c:	ldrb	r1, [r0, #16]
   16520:	cmp	r1, #0
   16524:	vmul.f32	s0, s2, s0
   16528:	bne	16534 <__assert_fail@plt+0x4904>
   1652c:	vldr	s2, [r0, #8]
   16530:	vmul.f32	s0, s0, s2
   16534:	vcvt.u32.f32	s0, s0
   16538:	mov	r0, r4
   1653c:	vmov	r1, s0
   16540:	bl	15ec8 <__assert_fail@plt+0x4298>
   16544:	cmp	r0, #0
   16548:	bne	16574 <__assert_fail@plt+0x4944>
   1654c:	ldr	r0, [r4, #36]	; 0x24
   16550:	cmp	r0, #0
   16554:	beq	1656c <__assert_fail@plt+0x493c>
   16558:	ldr	r6, [r0, #4]
   1655c:	bl	135bc <__assert_fail@plt+0x198c>
   16560:	cmp	r6, #0
   16564:	mov	r0, r6
   16568:	bne	16558 <__assert_fail@plt+0x4928>
   1656c:	mov	r0, #0
   16570:	str	r0, [r4, #36]	; 0x24
   16574:	mov	r0, r5
   16578:	sub	sp, fp, #16
   1657c:	pop	{r4, r5, r6, sl, fp, pc}
   16580:	b	16470 <__assert_fail@plt+0x4840>
   16584:	push	{r4, r5, fp, lr}
   16588:	add	fp, sp, #8
   1658c:	mov	r5, r0
   16590:	ldr	r0, [r0]
   16594:	mov	r4, r1
   16598:	bl	1a200 <lchmod@@Base+0x3aec>
   1659c:	ldrd	r2, [r5, #8]
   165a0:	eor	r0, r2, r0
   165a4:	mov	r1, r3
   165a8:	mov	r2, r4
   165ac:	mov	r3, #0
   165b0:	bl	1a420 <lchmod@@Base+0x3d0c>
   165b4:	mov	r0, r2
   165b8:	pop	{r4, r5, fp, pc}
   165bc:	push	{r4, r5, fp, lr}
   165c0:	add	fp, sp, #8
   165c4:	mov	lr, r1
   165c8:	mov	r2, r0
   165cc:	ldr	r3, [r2, #8]!
   165d0:	ldr	ip, [lr, #8]!
   165d4:	ldr	r4, [r2, #4]
   165d8:	eor	ip, r3, ip
   165dc:	ldr	r3, [lr, #4]
   165e0:	eor	r3, r4, r3
   165e4:	orrs	r3, ip, r3
   165e8:	mov	ip, #0
   165ec:	bne	1661c <__assert_fail@plt+0x49ec>
   165f0:	ldrd	r4, [lr, #8]
   165f4:	ldrd	r2, [r2, #8]
   165f8:	eor	r3, r3, r5
   165fc:	eor	r2, r2, r4
   16600:	orrs	r2, r2, r3
   16604:	bne	1661c <__assert_fail@plt+0x49ec>
   16608:	ldr	r1, [r1]
   1660c:	ldr	r0, [r0]
   16610:	bl	11828 <strcmp@plt>
   16614:	clz	r0, r0
   16618:	lsr	ip, r0, #5
   1661c:	mov	r0, ip
   16620:	pop	{r4, r5, fp, pc}
   16624:	push	{r4, sl, fp, lr}
   16628:	add	fp, sp, #8
   1662c:	mov	r4, r0
   16630:	ldr	r0, [r0]
   16634:	bl	135bc <__assert_fail@plt+0x198c>
   16638:	mov	r0, r4
   1663c:	pop	{r4, sl, fp, lr}
   16640:	b	135bc <__assert_fail@plt+0x198c>
   16644:	vdup.32	q8, r1
   16648:	mov	r2, #0
   1664c:	str	r2, [r0, #20]
   16650:	str	r2, [r0, #24]
   16654:	mov	r2, #1
   16658:	strb	r2, [r0, #28]
   1665c:	vst1.32	{d16-d17}, [r0]!
   16660:	str	r1, [r0]
   16664:	bx	lr
   16668:	ldrb	r0, [r0, #28]
   1666c:	bx	lr
   16670:	push	{fp, lr}
   16674:	mov	fp, sp
   16678:	ldrb	r3, [r0, #28]
   1667c:	ldr	r2, [r0, #20]
   16680:	eor	lr, r3, #1
   16684:	add	r2, r2, lr
   16688:	and	r3, r2, #3
   1668c:	ldr	ip, [r0, r3, lsl #2]
   16690:	str	r1, [r0, r3, lsl #2]
   16694:	str	r3, [r0, #20]
   16698:	ldr	r1, [r0, #24]
   1669c:	cmp	r3, r1
   166a0:	addeq	r1, r2, lr
   166a4:	andeq	r1, r1, #3
   166a8:	streq	r1, [r0, #24]
   166ac:	mov	r1, #0
   166b0:	strb	r1, [r0, #28]
   166b4:	mov	r0, ip
   166b8:	pop	{fp, pc}
   166bc:	push	{fp, lr}
   166c0:	mov	fp, sp
   166c4:	ldrb	r1, [r0, #28]
   166c8:	cmp	r1, #0
   166cc:	bne	16710 <__assert_fail@plt+0x4ae0>
   166d0:	ldr	r3, [r0, #20]
   166d4:	ldr	r2, [r0, #16]
   166d8:	ldr	r1, [r0, r3, lsl #2]
   166dc:	str	r2, [r0, r3, lsl #2]
   166e0:	ldr	r2, [r0, #20]
   166e4:	ldr	r3, [r0, #24]
   166e8:	cmp	r2, r3
   166ec:	bne	166fc <__assert_fail@plt+0x4acc>
   166f0:	mov	r2, #1
   166f4:	strb	r2, [r0, #28]
   166f8:	b	16708 <__assert_fail@plt+0x4ad8>
   166fc:	sub	r2, r2, #1
   16700:	and	r2, r2, #3
   16704:	str	r2, [r0, #20]
   16708:	mov	r0, r1
   1670c:	pop	{fp, pc}
   16710:	bl	11bd0 <abort@plt>

00016714 <lchmod@@Base>:
   16714:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16718:	add	fp, sp, #24
   1671c:	sub	sp, sp, #136	; 0x88
   16720:	mov	r4, r1
   16724:	mov	r1, #2654208	; 0x288000
   16728:	mov	r5, r0
   1672c:	bl	11984 <open64@plt>
   16730:	mov	r6, r0
   16734:	cmp	r0, #0
   16738:	bmi	1677c <lchmod@@Base+0x68>
   1673c:	movw	r1, #44699	; 0xae9b
   16740:	add	r2, sp, #32
   16744:	mov	r0, r6
   16748:	mov	r3, #4096	; 0x1000
   1674c:	movt	r1, #1
   16750:	bl	1a640 <lchmod@@Base+0x3f2c>
   16754:	cmp	r0, #0
   16758:	beq	16784 <lchmod@@Base+0x70>
   1675c:	bl	11a5c <__errno_location@plt>
   16760:	ldr	r5, [r0]
   16764:	mov	r4, r0
   16768:	mov	r0, r6
   1676c:	bl	11bdc <close@plt>
   16770:	str	r5, [r4]
   16774:	mvn	r7, #0
   16778:	b	16824 <lchmod@@Base+0x110>
   1677c:	mov	r7, r6
   16780:	b	16824 <lchmod@@Base+0x110>
   16784:	ldr	r0, [sp, #48]	; 0x30
   16788:	and	r0, r0, #61440	; 0xf000
   1678c:	cmp	r0, #40960	; 0xa000
   16790:	bne	167b0 <lchmod@@Base+0x9c>
   16794:	mov	r0, r6
   16798:	bl	11bdc <close@plt>
   1679c:	bl	11a5c <__errno_location@plt>
   167a0:	mov	r1, #95	; 0x5f
   167a4:	mvn	r7, #0
   167a8:	str	r1, [r0]
   167ac:	b	16824 <lchmod@@Base+0x110>
   167b0:	movw	r3, #45076	; 0xb014
   167b4:	add	r7, sp, #6
   167b8:	mov	r1, #1
   167bc:	mov	r2, #26
   167c0:	str	r6, [sp]
   167c4:	movt	r3, #1
   167c8:	mov	r0, r7
   167cc:	bl	11a68 <__sprintf_chk@plt>
   167d0:	mov	r0, r7
   167d4:	mov	r1, r4
   167d8:	bl	11b94 <chmod@plt>
   167dc:	mov	r7, r0
   167e0:	bl	11a5c <__errno_location@plt>
   167e4:	ldr	r9, [r0]
   167e8:	mov	r8, r0
   167ec:	mov	r0, r6
   167f0:	bl	11bdc <close@plt>
   167f4:	cmp	r7, #0
   167f8:	beq	16818 <lchmod@@Base+0x104>
   167fc:	cmp	r9, #2
   16800:	bne	16820 <lchmod@@Base+0x10c>
   16804:	mov	r0, r5
   16808:	mov	r1, r4
   1680c:	bl	11b94 <chmod@plt>
   16810:	mov	r7, r0
   16814:	b	16824 <lchmod@@Base+0x110>
   16818:	mov	r7, #0
   1681c:	b	16824 <lchmod@@Base+0x110>
   16820:	str	r9, [r8]
   16824:	mov	r0, r7
   16828:	sub	sp, fp, #24
   1682c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16830:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16834:	add	fp, sp, #28
   16838:	sub	sp, sp, #4
   1683c:	ldrb	r1, [r0]
   16840:	mov	r4, r0
   16844:	and	r0, r1, #248	; 0xf8
   16848:	cmp	r0, #48	; 0x30
   1684c:	bne	168d0 <lchmod@@Base+0x1bc>
   16850:	mov	r0, #0
   16854:	mov	r5, #0
   16858:	mov	r2, r4
   1685c:	lsl	r3, r5, #3
   16860:	uxtab	r1, r3, r1
   16864:	sub	r5, r1, #48	; 0x30
   16868:	cmp	r0, r5, lsr #12
   1686c:	bne	16b64 <lchmod@@Base+0x450>
   16870:	ldrb	r1, [r2, #1]
   16874:	add	r6, r2, #1
   16878:	and	r2, r1, #248	; 0xf8
   1687c:	cmp	r2, #48	; 0x30
   16880:	mov	r2, r6
   16884:	beq	1685c <lchmod@@Base+0x148>
   16888:	cmp	r1, #0
   1688c:	bne	16b64 <lchmod@@Base+0x450>
   16890:	mov	r0, #32
   16894:	bl	18fe8 <lchmod@@Base+0x28d4>
   16898:	mov	r1, #0
   1689c:	movw	r2, #317	; 0x13d
   168a0:	and	r3, r5, #3072	; 0xc00
   168a4:	movw	r7, #1023	; 0x3ff
   168a8:	strb	r1, [r0, #17]
   168ac:	strh	r2, [r0]
   168b0:	sub	r2, r6, r4
   168b4:	movw	r1, #4095	; 0xfff
   168b8:	cmp	r2, #5
   168bc:	str	r1, [r0, #4]
   168c0:	str	r5, [r0, #8]
   168c4:	orrlt	r1, r3, r7
   168c8:	str	r1, [r0, #12]
   168cc:	b	16b64 <lchmod@@Base+0x450>
   168d0:	movw	r5, #5
   168d4:	mov	r2, #1
   168d8:	mvn	r3, #42	; 0x2a
   168dc:	mov	r7, #1
   168e0:	mov	r0, #1
   168e4:	movt	r5, #4
   168e8:	uxtab	r6, r3, r1
   168ec:	uxtb	r1, r1
   168f0:	cmp	r6, #18
   168f4:	bhi	16904 <lchmod@@Base+0x1f0>
   168f8:	tst	r5, r2, lsl r6
   168fc:	mov	r6, #1
   16900:	bne	16910 <lchmod@@Base+0x1fc>
   16904:	cmp	r1, #0
   16908:	beq	16920 <lchmod@@Base+0x20c>
   1690c:	mov	r6, #0
   16910:	ldrb	r1, [r4, r7]
   16914:	add	r0, r6, r0
   16918:	add	r7, r7, #1
   1691c:	b	168e8 <lchmod@@Base+0x1d4>
   16920:	mov	r1, #16
   16924:	bl	190b8 <lchmod@@Base+0x29a4>
   16928:	mov	sl, #0
   1692c:	mov	ip, #1
   16930:	mvn	lr, #113	; 0x71
   16934:	mov	r9, #0
   16938:	mov	r2, #0
   1693c:	ldrb	r6, [r4]
   16940:	cmp	r6, #110	; 0x6e
   16944:	bgt	16960 <lchmod@@Base+0x24c>
   16948:	cmp	r6, #97	; 0x61
   1694c:	beq	16978 <lchmod@@Base+0x264>
   16950:	cmp	r6, #103	; 0x67
   16954:	bne	16990 <lchmod@@Base+0x27c>
   16958:	movw	r3, #1080	; 0x438
   1695c:	b	16984 <lchmod@@Base+0x270>
   16960:	cmp	r6, #111	; 0x6f
   16964:	beq	16980 <lchmod@@Base+0x26c>
   16968:	mov	r3, #2496	; 0x9c0
   1696c:	cmp	r6, #117	; 0x75
   16970:	beq	16984 <lchmod@@Base+0x270>
   16974:	b	16b5c <lchmod@@Base+0x448>
   16978:	movw	r3, #4095	; 0xfff
   1697c:	b	16984 <lchmod@@Base+0x270>
   16980:	movw	r3, #519	; 0x207
   16984:	orr	r2, r2, r3
   16988:	add	r4, r4, #1
   1698c:	b	1693c <lchmod@@Base+0x228>
   16990:	sub	r1, r6, #43	; 0x2b
   16994:	cmp	r1, #18
   16998:	bhi	16b5c <lchmod@@Base+0x448>
   1699c:	tst	r5, ip, lsl r1
   169a0:	beq	16b5c <lchmod@@Base+0x448>
   169a4:	ldrb	r3, [r4, #1]
   169a8:	add	r4, r4, #2
   169ac:	sub	r1, r3, #48	; 0x30
   169b0:	cmp	r1, #8
   169b4:	bcs	16a0c <lchmod@@Base+0x2f8>
   169b8:	mov	r7, #0
   169bc:	lsl	r1, r7, #3
   169c0:	uxtab	r1, r1, r3
   169c4:	sub	r7, r1, #48	; 0x30
   169c8:	cmp	sl, r7, lsr #12
   169cc:	bne	16b5c <lchmod@@Base+0x448>
   169d0:	ldrb	r3, [r4], #1
   169d4:	and	r1, r3, #248	; 0xf8
   169d8:	cmp	r1, #48	; 0x30
   169dc:	beq	169bc <lchmod@@Base+0x2a8>
   169e0:	cmp	r2, #0
   169e4:	bne	16b5c <lchmod@@Base+0x448>
   169e8:	sub	r4, r4, #1
   169ec:	mov	r8, #1
   169f0:	movw	r2, #4095	; 0xfff
   169f4:	cmp	r3, #0
   169f8:	beq	16a34 <lchmod@@Base+0x320>
   169fc:	cmp	r3, #44	; 0x2c
   16a00:	movw	r3, #4095	; 0xfff
   16a04:	beq	16adc <lchmod@@Base+0x3c8>
   16a08:	b	16b5c <lchmod@@Base+0x448>
   16a0c:	cmp	r3, #103	; 0x67
   16a10:	beq	16a3c <lchmod@@Base+0x328>
   16a14:	cmp	r3, #111	; 0x6f
   16a18:	beq	16a4c <lchmod@@Base+0x338>
   16a1c:	cmp	r3, #117	; 0x75
   16a20:	bne	16a5c <lchmod@@Base+0x348>
   16a24:	mov	r8, #3
   16a28:	mov	r3, #0
   16a2c:	mov	r7, #448	; 0x1c0
   16a30:	b	16adc <lchmod@@Base+0x3c8>
   16a34:	movw	r3, #4095	; 0xfff
   16a38:	b	16adc <lchmod@@Base+0x3c8>
   16a3c:	mov	r8, #3
   16a40:	mov	r3, #0
   16a44:	mov	r7, #56	; 0x38
   16a48:	b	16adc <lchmod@@Base+0x3c8>
   16a4c:	mov	r8, #3
   16a50:	mov	r3, #0
   16a54:	mov	r7, #7
   16a58:	b	16adc <lchmod@@Base+0x3c8>
   16a5c:	mov	r8, #1
   16a60:	mov	r7, #0
   16a64:	uxtab	r1, lr, r3
   16a68:	cmp	r1, #6
   16a6c:	bhi	16a9c <lchmod@@Base+0x388>
   16a70:	add	r3, pc, #0
   16a74:	ldr	pc, [r3, r1, lsl #2]
   16a78:	muleq	r1, r4, sl
   16a7c:			; <UNDEFINED> instruction: 0x00016ab0
   16a80:			; <UNDEFINED> instruction: 0x00016ab8
   16a84:	ldrdeq	r6, [r1], -r4
   16a88:	ldrdeq	r6, [r1], -r4
   16a8c:	andeq	r6, r1, r0, asr #21
   16a90:	andeq	r6, r1, r8, asr #21
   16a94:	orr	r7, r7, #292	; 0x124
   16a98:	b	16acc <lchmod@@Base+0x3b8>
   16a9c:	uxtb	r1, r3
   16aa0:	cmp	r1, #88	; 0x58
   16aa4:	bne	16ad4 <lchmod@@Base+0x3c0>
   16aa8:	mov	r8, #2
   16aac:	b	16acc <lchmod@@Base+0x3b8>
   16ab0:	orr	r7, r7, #3072	; 0xc00
   16ab4:	b	16acc <lchmod@@Base+0x3b8>
   16ab8:	orr	r7, r7, #512	; 0x200
   16abc:	b	16acc <lchmod@@Base+0x3b8>
   16ac0:	orr	r7, r7, #146	; 0x92
   16ac4:	b	16acc <lchmod@@Base+0x3b8>
   16ac8:	orr	r7, r7, #73	; 0x49
   16acc:	ldrb	r3, [r4], #1
   16ad0:	b	16a64 <lchmod@@Base+0x350>
   16ad4:	sub	r4, r4, #1
   16ad8:	mov	r3, #0
   16adc:	mov	r1, r0
   16ae0:	cmp	r3, #0
   16ae4:	strb	r6, [r1, r9, lsl #4]!
   16ae8:	stmib	r1, {r2, r7}
   16aec:	strb	r8, [r1, #1]
   16af0:	bne	16b00 <lchmod@@Base+0x3ec>
   16af4:	cmp	r2, #0
   16af8:	andne	r7, r7, r2
   16afc:	mov	r3, r7
   16b00:	add	r1, r0, r9, lsl #4
   16b04:	add	r7, r9, #1
   16b08:	str	r3, [r1, #12]
   16b0c:	ldrb	r6, [r4]
   16b10:	cmp	r6, #44	; 0x2c
   16b14:	ble	16b34 <lchmod@@Base+0x420>
   16b18:	cmp	r6, #45	; 0x2d
   16b1c:	mov	r9, r7
   16b20:	beq	169a4 <lchmod@@Base+0x290>
   16b24:	cmp	r6, #61	; 0x3d
   16b28:	mov	r9, r7
   16b2c:	beq	169a4 <lchmod@@Base+0x290>
   16b30:	b	16b5c <lchmod@@Base+0x448>
   16b34:	cmp	r6, #43	; 0x2b
   16b38:	mov	r9, r7
   16b3c:	beq	169a4 <lchmod@@Base+0x290>
   16b40:	cmp	r6, #0
   16b44:	beq	16b6c <lchmod@@Base+0x458>
   16b48:	cmp	r6, #44	; 0x2c
   16b4c:	bne	16b5c <lchmod@@Base+0x448>
   16b50:	add	r4, r4, #1
   16b54:	mov	r9, r7
   16b58:	b	16938 <lchmod@@Base+0x224>
   16b5c:	bl	135bc <__assert_fail@plt+0x198c>
   16b60:	mov	r0, #0
   16b64:	sub	sp, fp, #28
   16b68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16b6c:	add	r1, r0, r7, lsl #4
   16b70:	mov	r2, #0
   16b74:	strb	r2, [r1, #1]
   16b78:	b	16b64 <lchmod@@Base+0x450>
   16b7c:	push	{r4, sl, fp, lr}
   16b80:	add	fp, sp, #8
   16b84:	sub	sp, sp, #104	; 0x68
   16b88:	mov	r1, sp
   16b8c:	bl	1a610 <lchmod@@Base+0x3efc>
   16b90:	mov	r1, r0
   16b94:	mov	r0, #0
   16b98:	cmp	r1, #0
   16b9c:	bne	16bc8 <lchmod@@Base+0x4b4>
   16ba0:	ldr	r4, [sp, #16]
   16ba4:	mov	r0, #32
   16ba8:	bl	18fe8 <lchmod@@Base+0x28d4>
   16bac:	mov	r1, #0
   16bb0:	strb	r1, [r0, #17]
   16bb4:	movw	r1, #4095	; 0xfff
   16bb8:	stmib	r0, {r1, r4}
   16bbc:	str	r1, [r0, #12]
   16bc0:	movw	r1, #317	; 0x13d
   16bc4:	strh	r1, [r0]
   16bc8:	sub	sp, fp, #8
   16bcc:	pop	{r4, sl, fp, pc}
   16bd0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16bd4:	add	fp, sp, #24
   16bd8:	ldrb	r4, [r3, #1]
   16bdc:	ldr	ip, [fp, #8]
   16be0:	bfc	r0, #12, #20
   16be4:	cmp	r4, #0
   16be8:	beq	16cc8 <lchmod@@Base+0x5b4>
   16bec:	cmp	r1, #0
   16bf0:	mov	lr, r1
   16bf4:	add	r3, r3, #8
   16bf8:	mov	r9, #0
   16bfc:	movw	r8, #4095	; 0xfff
   16c00:	movwne	lr, #3072	; 0xc00
   16c04:	mov	r5, r3
   16c08:	ldr	r7, [r3, #-4]
   16c0c:	ldr	r3, [r3]
   16c10:	uxtb	r4, r4
   16c14:	ldr	r6, [r5, #4]
   16c18:	cmp	r4, #2
   16c1c:	bic	r6, lr, r6
   16c20:	beq	16c4c <lchmod@@Base+0x538>
   16c24:	cmp	r4, #3
   16c28:	bne	16c58 <lchmod@@Base+0x544>
   16c2c:	and	r4, r3, r0
   16c30:	tst	r4, #146	; 0x92
   16c34:	mov	r3, r4
   16c38:	orrne	r3, r3, #146	; 0x92
   16c3c:	tst	r4, #292	; 0x124
   16c40:	orrne	r3, r3, #292	; 0x124
   16c44:	tst	r4, #73	; 0x49
   16c48:	b	16c54 <lchmod@@Base+0x540>
   16c4c:	and	r4, r0, #73	; 0x49
   16c50:	orrs	r4, r4, r1
   16c54:	orrne	r3, r3, #73	; 0x49
   16c58:	cmp	r7, #0
   16c5c:	mov	r4, r7
   16c60:	mvneq	r4, r2
   16c64:	bic	r4, r4, r6
   16c68:	and	r3, r4, r3
   16c6c:	ldrb	r4, [r5, #-8]
   16c70:	cmp	r4, #43	; 0x2b
   16c74:	beq	16ca4 <lchmod@@Base+0x590>
   16c78:	cmp	r4, #45	; 0x2d
   16c7c:	beq	16cac <lchmod@@Base+0x598>
   16c80:	cmp	r4, #61	; 0x3d
   16c84:	bne	16cb4 <lchmod@@Base+0x5a0>
   16c88:	mvn	r4, r7
   16c8c:	cmp	r7, #0
   16c90:	orrne	r6, r6, r4
   16c94:	and	r0, r6, r0
   16c98:	orr	r0, r3, r0
   16c9c:	bic	r3, r8, r6
   16ca0:	b	16cb0 <lchmod@@Base+0x59c>
   16ca4:	orr	r0, r3, r0
   16ca8:	b	16cb0 <lchmod@@Base+0x59c>
   16cac:	bic	r0, r0, r3
   16cb0:	orr	r9, r3, r9
   16cb4:	ldrb	r4, [r5, #9]
   16cb8:	add	r3, r5, #16
   16cbc:	cmp	r4, #0
   16cc0:	bne	16c04 <lchmod@@Base+0x4f0>
   16cc4:	b	16ccc <lchmod@@Base+0x5b8>
   16cc8:	mov	r9, #0
   16ccc:	cmp	ip, #0
   16cd0:	strne	r9, [ip]
   16cd4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16cd8:	sub	sp, sp, #4
   16cdc:	push	{fp, lr}
   16ce0:	mov	fp, sp
   16ce4:	sub	sp, sp, #4
   16ce8:	str	r3, [fp, #8]
   16cec:	tst	r2, #64	; 0x40
   16cf0:	mov	r3, #0
   16cf4:	ldrne	r3, [fp, #8]
   16cf8:	bl	11a44 <openat64@plt>
   16cfc:	bl	18ae0 <lchmod@@Base+0x23cc>
   16d00:	mov	sp, fp
   16d04:	pop	{fp, lr}
   16d08:	add	sp, sp, #4
   16d0c:	bx	lr
   16d10:	push	{r4, r5, r6, sl, fp, lr}
   16d14:	add	fp, sp, #16
   16d18:	orr	r2, r2, #18688	; 0x4900
   16d1c:	mov	r4, r3
   16d20:	orr	r2, r2, #524288	; 0x80000
   16d24:	bl	16cd8 <lchmod@@Base+0x5c4>
   16d28:	mov	r5, r0
   16d2c:	mov	r0, #0
   16d30:	cmp	r5, #0
   16d34:	bmi	16d6c <lchmod@@Base+0x658>
   16d38:	mov	r0, r5
   16d3c:	bl	11b1c <fdopendir@plt>
   16d40:	cmp	r0, #0
   16d44:	beq	16d50 <lchmod@@Base+0x63c>
   16d48:	str	r5, [r4]
   16d4c:	pop	{r4, r5, r6, sl, fp, pc}
   16d50:	bl	11a5c <__errno_location@plt>
   16d54:	ldr	r6, [r0]
   16d58:	mov	r4, r0
   16d5c:	mov	r0, r5
   16d60:	bl	11bdc <close@plt>
   16d64:	mov	r0, #0
   16d68:	str	r6, [r4]
   16d6c:	pop	{r4, r5, r6, sl, fp, pc}
   16d70:	push	{r4, r5, fp, lr}
   16d74:	add	fp, sp, #8
   16d78:	cmp	r0, #0
   16d7c:	beq	16e10 <lchmod@@Base+0x6fc>
   16d80:	mov	r1, #47	; 0x2f
   16d84:	mov	r4, r0
   16d88:	bl	11af8 <strrchr@plt>
   16d8c:	cmp	r0, #0
   16d90:	mov	r5, r4
   16d94:	addne	r5, r0, #1
   16d98:	sub	r0, r5, r4
   16d9c:	cmp	r0, #7
   16da0:	blt	16df4 <lchmod@@Base+0x6e0>
   16da4:	movw	r1, #45149	; 0xb05d
   16da8:	sub	r0, r5, #7
   16dac:	mov	r2, #7
   16db0:	movt	r1, #1
   16db4:	bl	11bc4 <strncmp@plt>
   16db8:	cmp	r0, #0
   16dbc:	bne	16df4 <lchmod@@Base+0x6e0>
   16dc0:	movw	r1, #45157	; 0xb065
   16dc4:	mov	r0, r5
   16dc8:	mov	r2, #3
   16dcc:	movt	r1, #1
   16dd0:	bl	11bc4 <strncmp@plt>
   16dd4:	cmp	r0, #0
   16dd8:	beq	16de4 <lchmod@@Base+0x6d0>
   16ddc:	mov	r4, r5
   16de0:	b	16df4 <lchmod@@Base+0x6e0>
   16de4:	movw	r0, #49624	; 0xc1d8
   16de8:	add	r4, r5, #3
   16dec:	movt	r0, #2
   16df0:	str	r4, [r0]
   16df4:	movw	r0, #49628	; 0xc1dc
   16df8:	movt	r0, #2
   16dfc:	str	r4, [r0]
   16e00:	movw	r0, #49664	; 0xc200
   16e04:	movt	r0, #2
   16e08:	str	r4, [r0]
   16e0c:	pop	{r4, r5, fp, pc}
   16e10:	movw	r0, #49640	; 0xc1e8
   16e14:	movt	r0, #2
   16e18:	ldr	r1, [r0]
   16e1c:	movw	r0, #45093	; 0xb025
   16e20:	movt	r0, #1
   16e24:	bl	11bb8 <fputs@plt>
   16e28:	bl	11bd0 <abort@plt>
   16e2c:	push	{r4, r5, r6, sl, fp, lr}
   16e30:	add	fp, sp, #16
   16e34:	mov	r4, r0
   16e38:	movw	r0, #49672	; 0xc208
   16e3c:	movt	r0, #2
   16e40:	cmp	r4, #0
   16e44:	moveq	r4, r0
   16e48:	bl	11a5c <__errno_location@plt>
   16e4c:	ldr	r6, [r0]
   16e50:	mov	r5, r0
   16e54:	mov	r0, r4
   16e58:	mov	r1, #48	; 0x30
   16e5c:	bl	19338 <lchmod@@Base+0x2c24>
   16e60:	str	r6, [r5]
   16e64:	pop	{r4, r5, r6, sl, fp, pc}
   16e68:	movw	r1, #49672	; 0xc208
   16e6c:	cmp	r0, #0
   16e70:	movt	r1, #2
   16e74:	movne	r1, r0
   16e78:	ldr	r0, [r1]
   16e7c:	bx	lr
   16e80:	movw	r2, #49672	; 0xc208
   16e84:	cmp	r0, #0
   16e88:	movt	r2, #2
   16e8c:	movne	r2, r0
   16e90:	str	r1, [r2]
   16e94:	bx	lr
   16e98:	movw	r3, #49672	; 0xc208
   16e9c:	cmp	r0, #0
   16ea0:	and	r2, r2, #1
   16ea4:	movt	r3, #2
   16ea8:	movne	r3, r0
   16eac:	ubfx	r0, r1, #5, #3
   16eb0:	and	r1, r1, #31
   16eb4:	add	ip, r3, r0, lsl #2
   16eb8:	mov	r0, #1
   16ebc:	ldr	r3, [ip, #8]
   16ec0:	and	r0, r0, r3, lsr r1
   16ec4:	eor	r2, r0, r2
   16ec8:	eor	r1, r3, r2, lsl r1
   16ecc:	str	r1, [ip, #8]
   16ed0:	bx	lr
   16ed4:	movw	r2, #49672	; 0xc208
   16ed8:	cmp	r0, #0
   16edc:	movt	r2, #2
   16ee0:	movne	r2, r0
   16ee4:	ldr	r0, [r2, #4]
   16ee8:	str	r1, [r2, #4]
   16eec:	bx	lr
   16ef0:	push	{fp, lr}
   16ef4:	mov	fp, sp
   16ef8:	movw	r3, #49672	; 0xc208
   16efc:	cmp	r0, #0
   16f00:	movt	r3, #2
   16f04:	movne	r3, r0
   16f08:	cmp	r1, #0
   16f0c:	mov	r0, #10
   16f10:	cmpne	r2, #0
   16f14:	str	r0, [r3]
   16f18:	bne	16f20 <lchmod@@Base+0x80c>
   16f1c:	bl	11bd0 <abort@plt>
   16f20:	str	r1, [r3, #40]	; 0x28
   16f24:	str	r2, [r3, #44]	; 0x2c
   16f28:	pop	{fp, pc}
   16f2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16f30:	add	fp, sp, #28
   16f34:	sub	sp, sp, #20
   16f38:	mov	r7, r0
   16f3c:	ldr	r0, [fp, #8]
   16f40:	movw	r5, #49672	; 0xc208
   16f44:	mov	r8, r3
   16f48:	mov	r9, r2
   16f4c:	mov	sl, r1
   16f50:	movt	r5, #2
   16f54:	cmp	r0, #0
   16f58:	movne	r5, r0
   16f5c:	bl	11a5c <__errno_location@plt>
   16f60:	ldr	r2, [r5, #40]	; 0x28
   16f64:	ldr	r3, [r5, #44]	; 0x2c
   16f68:	mov	r4, r0
   16f6c:	ldm	r5, {r0, r1}
   16f70:	add	r5, r5, #8
   16f74:	ldr	r6, [r4]
   16f78:	stm	sp, {r0, r1, r5}
   16f7c:	mov	r0, r7
   16f80:	mov	r1, sl
   16f84:	str	r2, [sp, #12]
   16f88:	str	r3, [sp, #16]
   16f8c:	mov	r2, r9
   16f90:	mov	r3, r8
   16f94:	bl	16fa4 <lchmod@@Base+0x890>
   16f98:	str	r6, [r4]
   16f9c:	sub	sp, fp, #28
   16fa0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16fa4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16fa8:	add	fp, sp, #28
   16fac:	sub	sp, sp, #156	; 0x9c
   16fb0:	mov	r5, r0
   16fb4:	add	r0, r2, #1
   16fb8:	mov	r6, r1
   16fbc:	mov	sl, r3
   16fc0:	str	r2, [fp, #-80]	; 0xffffffb0
   16fc4:	str	r0, [sp, #72]	; 0x48
   16fc8:	ldr	r0, [fp, #12]
   16fcc:	and	r1, r0, #1
   16fd0:	str	r1, [sp, #32]
   16fd4:	and	r1, r0, #4
   16fd8:	str	r1, [sp, #28]
   16fdc:	ubfx	r9, r0, #1, #1
   16fe0:	bl	1193c <__ctype_get_mb_cur_max@plt>
   16fe4:	str	r0, [sp, #40]	; 0x28
   16fe8:	ldr	r0, [fp, #24]
   16fec:	ldr	r7, [fp, #8]
   16ff0:	mov	r1, #0
   16ff4:	mov	lr, #0
   16ff8:	str	r5, [fp, #-84]	; 0xffffffac
   16ffc:	str	r1, [sp, #60]	; 0x3c
   17000:	mov	r1, #1
   17004:	str	r1, [fp, #-48]	; 0xffffffd0
   17008:	str	r0, [sp, #80]	; 0x50
   1700c:	ldr	r0, [fp, #20]
   17010:	str	r0, [sp, #76]	; 0x4c
   17014:	mov	r0, #0
   17018:	str	r0, [sp, #56]	; 0x38
   1701c:	mov	r0, #0
   17020:	str	r0, [fp, #-88]	; 0xffffffa8
   17024:	mov	r0, #0
   17028:	str	r0, [fp, #-72]	; 0xffffffb8
   1702c:	mov	r0, #0
   17030:	cmp	r7, #10
   17034:	bhi	18010 <lchmod@@Base+0x18fc>
   17038:	add	r1, pc, #24
   1703c:	ldr	r4, [fp, #-80]	; 0xffffffb0
   17040:	mov	ip, r6
   17044:	mov	r8, #0
   17048:	mov	r2, #1
   1704c:	mov	r6, #0
   17050:	mov	r3, sl
   17054:	ldr	pc, [r1, r7, lsl #2]
   17058:	andeq	r7, r1, r4, asr #2
   1705c:	muleq	r1, r8, r1
   17060:	andeq	r7, r1, r8, asr r1
   17064:	andeq	r7, r1, ip, lsr r1
   17068:	andeq	r7, r1, ip, lsl #3
   1706c:	andeq	r7, r1, r0, asr #3
   17070:	andeq	r7, r1, r8, ror #2
   17074:	andeq	r7, r1, r4, asr #4
   17078:	andeq	r7, r1, r4, lsl #1
   1707c:	andeq	r7, r1, r4, lsl #1
   17080:	andeq	r7, r1, r4, asr #1
   17084:	movw	r0, #45239	; 0xb0b7
   17088:	mov	r1, r7
   1708c:	mov	r6, r5
   17090:	mov	r4, ip
   17094:	mov	r5, lr
   17098:	movt	r0, #1
   1709c:	bl	18774 <lchmod@@Base+0x2060>
   170a0:	str	r0, [sp, #76]	; 0x4c
   170a4:	movw	r0, #45241	; 0xb0b9
   170a8:	mov	r1, r7
   170ac:	movt	r0, #1
   170b0:	bl	18774 <lchmod@@Base+0x2060>
   170b4:	mov	lr, r5
   170b8:	mov	r5, r6
   170bc:	mov	ip, r4
   170c0:	str	r0, [sp, #80]	; 0x50
   170c4:	mov	r8, #0
   170c8:	tst	r9, #1
   170cc:	str	lr, [sp, #44]	; 0x2c
   170d0:	bne	17108 <lchmod@@Base+0x9f4>
   170d4:	ldr	r0, [sp, #76]	; 0x4c
   170d8:	ldrb	r0, [r0]
   170dc:	cmp	r0, #0
   170e0:	beq	17108 <lchmod@@Base+0x9f4>
   170e4:	ldr	r1, [sp, #76]	; 0x4c
   170e8:	mov	r8, #0
   170ec:	add	r1, r1, #1
   170f0:	cmp	r8, ip
   170f4:	strbcc	r0, [r5, r8]
   170f8:	ldrb	r0, [r1, r8]
   170fc:	add	r8, r8, #1
   17100:	cmp	r0, #0
   17104:	bne	170f0 <lchmod@@Base+0x9dc>
   17108:	ldr	r6, [sp, #80]	; 0x50
   1710c:	mov	r4, ip
   17110:	mov	r0, r6
   17114:	bl	11a20 <strlen@plt>
   17118:	mov	ip, r4
   1711c:	ldr	r4, [fp, #-80]	; 0xffffffb0
   17120:	ldr	lr, [sp, #44]	; 0x2c
   17124:	str	r6, [fp, #-88]	; 0xffffffa8
   17128:	str	r0, [fp, #-72]	; 0xffffffb8
   1712c:	mov	r2, #1
   17130:	mov	r6, r9
   17134:	mov	r3, sl
   17138:	b	17244 <lchmod@@Base+0xb30>
   1713c:	mov	r0, #1
   17140:	b	17198 <lchmod@@Base+0xa84>
   17144:	mov	r7, #0
   17148:	mov	r8, #0
   1714c:	mov	r2, r0
   17150:	mov	r6, #0
   17154:	b	17244 <lchmod@@Base+0xb30>
   17158:	tst	r9, #1
   1715c:	bne	17198 <lchmod@@Base+0xa84>
   17160:	mov	r2, r0
   17164:	b	171f0 <lchmod@@Base+0xadc>
   17168:	mov	r0, #1
   1716c:	mov	r8, #0
   17170:	mov	r7, #5
   17174:	mov	r2, #1
   17178:	str	r0, [fp, #-72]	; 0xffffffb8
   1717c:	movw	r0, #45237	; 0xb0b5
   17180:	movt	r0, #1
   17184:	str	r0, [fp, #-88]	; 0xffffffa8
   17188:	b	171b8 <lchmod@@Base+0xaa4>
   1718c:	mov	r2, #1
   17190:	tst	r9, #1
   17194:	beq	171f0 <lchmod@@Base+0xadc>
   17198:	mov	r1, #1
   1719c:	mov	r8, #0
   171a0:	mov	r7, #2
   171a4:	mov	r2, r0
   171a8:	str	r1, [fp, #-72]	; 0xffffffb8
   171ac:	movw	r1, #45241	; 0xb0b9
   171b0:	movt	r1, #1
   171b4:	str	r1, [fp, #-88]	; 0xffffffa8
   171b8:	mov	r6, #1
   171bc:	b	17244 <lchmod@@Base+0xb30>
   171c0:	tst	r9, #1
   171c4:	beq	17214 <lchmod@@Base+0xb00>
   171c8:	mov	r0, #1
   171cc:	mov	r8, #0
   171d0:	mov	r2, #1
   171d4:	mov	r6, #1
   171d8:	mov	r7, #5
   171dc:	str	r0, [fp, #-72]	; 0xffffffb8
   171e0:	movw	r0, #45237	; 0xb0b5
   171e4:	movt	r0, #1
   171e8:	str	r0, [fp, #-88]	; 0xffffffa8
   171ec:	b	17244 <lchmod@@Base+0xb30>
   171f0:	cmp	ip, #0
   171f4:	mov	r8, #1
   171f8:	mov	r6, #0
   171fc:	mov	r7, #2
   17200:	movne	r0, #39	; 0x27
   17204:	strbne	r0, [r5]
   17208:	movw	r0, #45241	; 0xb0b9
   1720c:	movt	r0, #1
   17210:	b	17238 <lchmod@@Base+0xb24>
   17214:	cmp	ip, #0
   17218:	mov	r8, #1
   1721c:	mov	r2, #1
   17220:	mov	r7, #5
   17224:	mov	r6, #0
   17228:	movne	r0, #34	; 0x22
   1722c:	strbne	r0, [r5]
   17230:	movw	r0, #45237	; 0xb0b5
   17234:	movt	r0, #1
   17238:	str	r0, [fp, #-88]	; 0xffffffa8
   1723c:	mov	r0, #1
   17240:	str	r0, [fp, #-72]	; 0xffffffb8
   17244:	ldr	r0, [fp, #-72]	; 0xffffffb8
   17248:	str	r7, [fp, #-68]	; 0xffffffbc
   1724c:	str	r6, [fp, #-76]	; 0xffffffb4
   17250:	str	r2, [sp, #84]	; 0x54
   17254:	cmp	r0, #0
   17258:	movwne	r0, #1
   1725c:	and	r1, r0, r6
   17260:	and	r1, r2, r1
   17264:	str	r1, [sp, #48]	; 0x30
   17268:	sub	r1, r7, #2
   1726c:	clz	r1, r1
   17270:	lsr	r1, r1, #5
   17274:	and	r1, r1, r6
   17278:	str	r1, [sp, #64]	; 0x40
   1727c:	subs	r1, r7, #2
   17280:	eor	r7, r6, #1
   17284:	movwne	r1, #1
   17288:	str	r7, [sp, #92]	; 0x5c
   1728c:	orr	r7, r1, r7
   17290:	and	r1, r1, r2
   17294:	and	r0, r0, r1
   17298:	str	r7, [sp, #68]	; 0x44
   1729c:	mov	r7, #0
   172a0:	str	r0, [fp, #-60]	; 0xffffffc4
   172a4:	orr	r0, r1, r6
   172a8:	ldr	r1, [fp, #16]
   172ac:	eor	r0, r0, #1
   172b0:	clz	r1, r1
   172b4:	lsr	r1, r1, #5
   172b8:	orr	r0, r1, r0
   172bc:	str	r0, [fp, #-64]	; 0xffffffc0
   172c0:	eor	r0, r2, #1
   172c4:	str	r0, [sp, #52]	; 0x34
   172c8:	cmn	r3, #1
   172cc:	beq	172dc <lchmod@@Base+0xbc8>
   172d0:	cmp	r7, r3
   172d4:	bne	172e8 <lchmod@@Base+0xbd4>
   172d8:	b	17e44 <lchmod@@Base+0x1730>
   172dc:	ldrb	r0, [r4, r7]
   172e0:	cmp	r0, #0
   172e4:	beq	17e4c <lchmod@@Base+0x1738>
   172e8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   172ec:	cmp	r0, #0
   172f0:	beq	17338 <lchmod@@Base+0xc24>
   172f4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   172f8:	add	r5, r7, r0
   172fc:	cmp	r0, #2
   17300:	bcc	1734c <lchmod@@Base+0xc38>
   17304:	mov	r0, #0
   17308:	cmn	r3, #1
   1730c:	str	r0, [fp, #-56]	; 0xffffffc8
   17310:	bne	17354 <lchmod@@Base+0xc40>
   17314:	mov	r0, r4
   17318:	mov	r4, ip
   1731c:	mov	r6, lr
   17320:	bl	11a20 <strlen@plt>
   17324:	mov	ip, r4
   17328:	ldr	r4, [fp, #-80]	; 0xffffffb0
   1732c:	mov	lr, r6
   17330:	mov	r3, r0
   17334:	b	17354 <lchmod@@Base+0xc40>
   17338:	mov	r0, #0
   1733c:	mov	sl, r3
   17340:	str	r0, [fp, #-56]	; 0xffffffc8
   17344:	mov	r0, #0
   17348:	b	173c0 <lchmod@@Base+0xcac>
   1734c:	mov	r0, #0
   17350:	str	r0, [fp, #-56]	; 0xffffffc8
   17354:	cmp	r5, r3
   17358:	bls	1736c <lchmod@@Base+0xc58>
   1735c:	ldr	r5, [fp, #-84]	; 0xffffffac
   17360:	mov	r0, #0
   17364:	mov	sl, r3
   17368:	b	173c0 <lchmod@@Base+0xcac>
   1736c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   17370:	ldr	r2, [fp, #-72]	; 0xffffffb8
   17374:	add	r0, r4, r7
   17378:	mov	r5, lr
   1737c:	mov	r6, ip
   17380:	mov	sl, r3
   17384:	bl	11a14 <bcmp@plt>
   17388:	ldr	r2, [sp, #92]	; 0x5c
   1738c:	cmp	r0, #0
   17390:	ldr	r3, [fp, #-84]	; 0xffffffac
   17394:	mov	r1, r0
   17398:	movwne	r1, #1
   1739c:	orr	r1, r1, r2
   173a0:	tst	r1, #1
   173a4:	beq	17ed0 <lchmod@@Base+0x17bc>
   173a8:	ldr	r4, [fp, #-80]	; 0xffffffb0
   173ac:	clz	r0, r0
   173b0:	mov	lr, r5
   173b4:	mov	ip, r6
   173b8:	mov	r5, r3
   173bc:	lsr	r0, r0, #5
   173c0:	str	r0, [fp, #-52]	; 0xffffffcc
   173c4:	ldrb	r6, [r4, r7]
   173c8:	cmp	r6, #126	; 0x7e
   173cc:	bhi	178f4 <lchmod@@Base+0x11e0>
   173d0:	add	r3, pc, #16
   173d4:	mov	r9, #1
   173d8:	mov	r2, #110	; 0x6e
   173dc:	mov	r0, #97	; 0x61
   173e0:	mov	r1, #0
   173e4:	ldr	pc, [r3, r6, lsl #2]
   173e8:	andeq	r7, r1, r8, asr r7
   173ec:	strdeq	r7, [r1], -r4
   173f0:	strdeq	r7, [r1], -r4
   173f4:	strdeq	r7, [r1], -r4
   173f8:	strdeq	r7, [r1], -r4
   173fc:	strdeq	r7, [r1], -r4
   17400:	strdeq	r7, [r1], -r4
   17404:	andeq	r7, r1, r4, ror r9
   17408:	andeq	r7, r1, r8, lsr r7
   1740c:	andeq	r7, r1, r0, lsr r7
   17410:	andeq	r7, r1, r4, asr #14
   17414:	andeq	r7, r1, ip, asr r8
   17418:	andeq	r7, r1, r8, lsr #14
   1741c:	andeq	r7, r1, r0, asr #14
   17420:	strdeq	r7, [r1], -r4
   17424:	strdeq	r7, [r1], -r4
   17428:	strdeq	r7, [r1], -r4
   1742c:	strdeq	r7, [r1], -r4
   17430:	strdeq	r7, [r1], -r4
   17434:	strdeq	r7, [r1], -r4
   17438:	strdeq	r7, [r1], -r4
   1743c:	strdeq	r7, [r1], -r4
   17440:	strdeq	r7, [r1], -r4
   17444:	strdeq	r7, [r1], -r4
   17448:	strdeq	r7, [r1], -r4
   1744c:	strdeq	r7, [r1], -r4
   17450:	strdeq	r7, [r1], -r4
   17454:	strdeq	r7, [r1], -r4
   17458:	strdeq	r7, [r1], -r4
   1745c:	strdeq	r7, [r1], -r4
   17460:	strdeq	r7, [r1], -r4
   17464:	strdeq	r7, [r1], -r4
   17468:	ldrdeq	r7, [r1], -r8
   1746c:	ldrdeq	r7, [r1], -ip
   17470:	ldrdeq	r7, [r1], -ip
   17474:	andeq	r7, r1, r0, asr #13
   17478:	ldrdeq	r7, [r1], -ip
   1747c:	andeq	r7, r1, r4, ror #11
   17480:	ldrdeq	r7, [r1], -ip
   17484:	andeq	r7, r1, r4, ror #16
   17488:	ldrdeq	r7, [r1], -ip
   1748c:	ldrdeq	r7, [r1], -ip
   17490:	ldrdeq	r7, [r1], -ip
   17494:	andeq	r7, r1, r4, ror #11
   17498:	andeq	r7, r1, r4, ror #11
   1749c:	andeq	r7, r1, r4, ror #11
   174a0:	andeq	r7, r1, r4, ror #11
   174a4:	andeq	r7, r1, r4, ror #11
   174a8:	andeq	r7, r1, r4, ror #11
   174ac:	andeq	r7, r1, r4, ror #11
   174b0:	andeq	r7, r1, r4, ror #11
   174b4:	andeq	r7, r1, r4, ror #11
   174b8:	andeq	r7, r1, r4, ror #11
   174bc:	andeq	r7, r1, r4, ror #11
   174c0:	andeq	r7, r1, r4, ror #11
   174c4:	andeq	r7, r1, r4, ror #11
   174c8:	andeq	r7, r1, r4, ror #11
   174cc:	andeq	r7, r1, r4, ror #11
   174d0:	andeq	r7, r1, r4, ror #11
   174d4:	ldrdeq	r7, [r1], -ip
   174d8:	ldrdeq	r7, [r1], -ip
   174dc:	ldrdeq	r7, [r1], -ip
   174e0:	ldrdeq	r7, [r1], -ip
   174e4:	andeq	r7, r1, r0, lsr r8
   174e8:	strdeq	r7, [r1], -r4
   174ec:	andeq	r7, r1, r4, ror #11
   174f0:	andeq	r7, r1, r4, ror #11
   174f4:	andeq	r7, r1, r4, ror #11
   174f8:	andeq	r7, r1, r4, ror #11
   174fc:	andeq	r7, r1, r4, ror #11
   17500:	andeq	r7, r1, r4, ror #11
   17504:	andeq	r7, r1, r4, ror #11
   17508:	andeq	r7, r1, r4, ror #11
   1750c:	andeq	r7, r1, r4, ror #11
   17510:	andeq	r7, r1, r4, ror #11
   17514:	andeq	r7, r1, r4, ror #11
   17518:	andeq	r7, r1, r4, ror #11
   1751c:	andeq	r7, r1, r4, ror #11
   17520:	andeq	r7, r1, r4, ror #11
   17524:	andeq	r7, r1, r4, ror #11
   17528:	andeq	r7, r1, r4, ror #11
   1752c:	andeq	r7, r1, r4, ror #11
   17530:	andeq	r7, r1, r4, ror #11
   17534:	andeq	r7, r1, r4, ror #11
   17538:	andeq	r7, r1, r4, ror #11
   1753c:	andeq	r7, r1, r4, ror #11
   17540:	andeq	r7, r1, r4, ror #11
   17544:	andeq	r7, r1, r4, ror #11
   17548:	andeq	r7, r1, r4, ror #11
   1754c:	andeq	r7, r1, r4, ror #11
   17550:	andeq	r7, r1, r4, ror #11
   17554:	ldrdeq	r7, [r1], -ip
   17558:	andeq	r7, r1, r4, lsl #14
   1755c:	andeq	r7, r1, r4, ror #11
   17560:	ldrdeq	r7, [r1], -ip
   17564:	andeq	r7, r1, r4, ror #11
   17568:	ldrdeq	r7, [r1], -ip
   1756c:	andeq	r7, r1, r4, ror #11
   17570:	andeq	r7, r1, r4, ror #11
   17574:	andeq	r7, r1, r4, ror #11
   17578:	andeq	r7, r1, r4, ror #11
   1757c:	andeq	r7, r1, r4, ror #11
   17580:	andeq	r7, r1, r4, ror #11
   17584:	andeq	r7, r1, r4, ror #11
   17588:	andeq	r7, r1, r4, ror #11
   1758c:	andeq	r7, r1, r4, ror #11
   17590:	andeq	r7, r1, r4, ror #11
   17594:	andeq	r7, r1, r4, ror #11
   17598:	andeq	r7, r1, r4, ror #11
   1759c:	andeq	r7, r1, r4, ror #11
   175a0:	andeq	r7, r1, r4, ror #11
   175a4:	andeq	r7, r1, r4, ror #11
   175a8:	andeq	r7, r1, r4, ror #11
   175ac:	andeq	r7, r1, r4, ror #11
   175b0:	andeq	r7, r1, r4, ror #11
   175b4:	andeq	r7, r1, r4, ror #11
   175b8:	andeq	r7, r1, r4, ror #11
   175bc:	andeq	r7, r1, r4, ror #11
   175c0:	andeq	r7, r1, r4, ror #11
   175c4:	andeq	r7, r1, r4, ror #11
   175c8:	andeq	r7, r1, r4, ror #11
   175cc:	andeq	r7, r1, r4, ror #11
   175d0:	andeq	r7, r1, r4, ror #11
   175d4:	muleq	r1, r8, r6
   175d8:	ldrdeq	r7, [r1], -ip
   175dc:	muleq	r1, r8, r6
   175e0:	andeq	r7, r1, r0, asr #13
   175e4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   175e8:	tst	r0, #1
   175ec:	bne	17618 <lchmod@@Base+0xf04>
   175f0:	ldr	r1, [fp, #16]
   175f4:	ubfx	r0, r6, #5, #3
   175f8:	mov	r2, #1
   175fc:	ldr	r0, [r1, r0, lsl #2]
   17600:	and	r1, r6, #31
   17604:	tst	r0, r2, lsl r1
   17608:	beq	17618 <lchmod@@Base+0xf04>
   1760c:	mov	r0, r6
   17610:	mov	r1, r9
   17614:	b	1762c <lchmod@@Base+0xf18>
   17618:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1761c:	mov	r1, r9
   17620:	cmp	r0, #0
   17624:	mov	r0, r6
   17628:	beq	17d78 <lchmod@@Base+0x1664>
   1762c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   17630:	tst	r2, #1
   17634:	bne	17f14 <lchmod@@Base+0x1800>
   17638:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1763c:	subs	r2, r2, #2
   17640:	movwne	r2, #1
   17644:	orr	r2, r2, lr
   17648:	tst	r2, #1
   1764c:	bne	17684 <lchmod@@Base+0xf70>
   17650:	cmp	r8, ip
   17654:	mov	lr, #1
   17658:	movcc	r2, #39	; 0x27
   1765c:	strbcc	r2, [r5, r8]
   17660:	add	r2, r8, #1
   17664:	cmp	r2, ip
   17668:	movcc	r3, #36	; 0x24
   1766c:	strbcc	r3, [r5, r2]
   17670:	add	r2, r8, #2
   17674:	add	r8, r8, #3
   17678:	cmp	r2, ip
   1767c:	movcc	r3, #39	; 0x27
   17680:	strbcc	r3, [r5, r2]
   17684:	cmp	r8, ip
   17688:	movcc	r2, #92	; 0x5c
   1768c:	strbcc	r2, [r5, r8]
   17690:	add	r8, r8, #1
   17694:	b	17db8 <lchmod@@Base+0x16a4>
   17698:	cmp	sl, #1
   1769c:	beq	176c0 <lchmod@@Base+0xfac>
   176a0:	mov	r9, #0
   176a4:	cmn	sl, #1
   176a8:	bne	176cc <lchmod@@Base+0xfb8>
   176ac:	ldrb	r0, [r4, #1]
   176b0:	cmp	r0, #0
   176b4:	beq	176c0 <lchmod@@Base+0xfac>
   176b8:	mvn	sl, #0
   176bc:	b	176cc <lchmod@@Base+0xfb8>
   176c0:	mov	r9, #0
   176c4:	cmp	r7, #0
   176c8:	beq	176d8 <lchmod@@Base+0xfc4>
   176cc:	mov	r0, #0
   176d0:	str	r0, [fp, #-56]	; 0xffffffc8
   176d4:	b	175e4 <lchmod@@Base+0xed0>
   176d8:	mov	r1, #1
   176dc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   176e0:	cmp	r0, #2
   176e4:	bne	176fc <lchmod@@Base+0xfe8>
   176e8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   176ec:	mov	r9, r1
   176f0:	tst	r0, #1
   176f4:	beq	175e4 <lchmod@@Base+0xed0>
   176f8:	b	17f14 <lchmod@@Base+0x1800>
   176fc:	mov	r9, r1
   17700:	b	175e4 <lchmod@@Base+0xed0>
   17704:	ldr	r0, [fp, #-68]	; 0xffffffbc
   17708:	cmp	r0, #2
   1770c:	bne	17950 <lchmod@@Base+0x123c>
   17710:	ldr	r0, [fp, #-76]	; 0xffffffb4
   17714:	tst	r0, #1
   17718:	bne	17f14 <lchmod@@Base+0x1800>
   1771c:	mov	r0, #0
   17720:	str	r0, [fp, #-56]	; 0xffffffc8
   17724:	b	17968 <lchmod@@Base+0x1254>
   17728:	mov	r0, #102	; 0x66
   1772c:	b	17974 <lchmod@@Base+0x1260>
   17730:	mov	r2, #116	; 0x74
   17734:	b	17744 <lchmod@@Base+0x1030>
   17738:	mov	r0, #98	; 0x62
   1773c:	b	17974 <lchmod@@Base+0x1260>
   17740:	mov	r2, #114	; 0x72
   17744:	ldr	r0, [sp, #68]	; 0x44
   17748:	tst	r0, #1
   1774c:	mov	r0, r2
   17750:	bne	17974 <lchmod@@Base+0x1260>
   17754:	b	17f14 <lchmod@@Base+0x1800>
   17758:	ldr	r0, [sp, #84]	; 0x54
   1775c:	tst	r0, #1
   17760:	beq	17994 <lchmod@@Base+0x1280>
   17764:	ldr	r0, [fp, #-76]	; 0xffffffb4
   17768:	tst	r0, #1
   1776c:	bne	18000 <lchmod@@Base+0x18ec>
   17770:	ldr	r0, [fp, #-68]	; 0xffffffbc
   17774:	mov	r2, sl
   17778:	subs	r0, r0, #2
   1777c:	movwne	r0, #1
   17780:	orr	r0, r0, lr
   17784:	tst	r0, #1
   17788:	bne	177c0 <lchmod@@Base+0x10ac>
   1778c:	cmp	r8, ip
   17790:	mov	lr, #1
   17794:	movcc	r0, #39	; 0x27
   17798:	strbcc	r0, [r5, r8]
   1779c:	add	r0, r8, #1
   177a0:	cmp	r0, ip
   177a4:	movcc	r1, #36	; 0x24
   177a8:	strbcc	r1, [r5, r0]
   177ac:	add	r0, r8, #2
   177b0:	add	r8, r8, #3
   177b4:	cmp	r0, ip
   177b8:	movcc	r1, #39	; 0x27
   177bc:	strbcc	r1, [r5, r0]
   177c0:	mov	r1, #1
   177c4:	cmp	r8, ip
   177c8:	mov	r9, #0
   177cc:	mov	r6, #48	; 0x30
   177d0:	str	r1, [fp, #-56]	; 0xffffffc8
   177d4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   177d8:	movcc	r0, #92	; 0x5c
   177dc:	strbcc	r0, [r5, r8]
   177e0:	add	r0, r8, #1
   177e4:	cmp	r1, #2
   177e8:	beq	17af0 <lchmod@@Base+0x13dc>
   177ec:	add	r1, r7, #1
   177f0:	cmp	r1, r2
   177f4:	bcs	17af0 <lchmod@@Base+0x13dc>
   177f8:	ldrb	r1, [r4, r1]
   177fc:	sub	r1, r1, #48	; 0x30
   17800:	uxtb	r1, r1
   17804:	cmp	r1, #9
   17808:	bhi	17af0 <lchmod@@Base+0x13dc>
   1780c:	cmp	r0, ip
   17810:	movcc	r1, #48	; 0x30
   17814:	strbcc	r1, [r5, r0]
   17818:	add	r0, r8, #2
   1781c:	add	r8, r8, #3
   17820:	cmp	r0, ip
   17824:	movcc	r1, #48	; 0x30
   17828:	strbcc	r1, [r5, r0]
   1782c:	b	175e4 <lchmod@@Base+0xed0>
   17830:	ldr	r0, [fp, #-68]	; 0xffffffbc
   17834:	mov	r6, #63	; 0x3f
   17838:	cmp	r0, #5
   1783c:	beq	17af8 <lchmod@@Base+0x13e4>
   17840:	mov	r1, #0
   17844:	cmp	r0, #2
   17848:	str	r1, [fp, #-56]	; 0xffffffc8
   1784c:	bne	17bac <lchmod@@Base+0x1498>
   17850:	ldr	r0, [fp, #-76]	; 0xffffffb4
   17854:	mov	r9, #0
   17858:	b	176f0 <lchmod@@Base+0xfdc>
   1785c:	mov	r0, #118	; 0x76
   17860:	b	17974 <lchmod@@Base+0x1260>
   17864:	mov	r0, #1
   17868:	mov	r6, #39	; 0x27
   1786c:	str	r0, [sp, #60]	; 0x3c
   17870:	ldr	r0, [fp, #-68]	; 0xffffffbc
   17874:	cmp	r0, #2
   17878:	bne	178ec <lchmod@@Base+0x11d8>
   1787c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   17880:	tst	r0, #1
   17884:	bne	17f14 <lchmod@@Base+0x1800>
   17888:	ldr	r2, [sp, #56]	; 0x38
   1788c:	clz	r1, ip
   17890:	mov	lr, #0
   17894:	lsr	r1, r1, #5
   17898:	cmp	r2, #0
   1789c:	mov	r0, r2
   178a0:	movwne	r0, #1
   178a4:	orrs	r0, r0, r1
   178a8:	moveq	r2, ip
   178ac:	moveq	ip, r0
   178b0:	cmp	r8, ip
   178b4:	str	r2, [sp, #56]	; 0x38
   178b8:	movcc	r0, #39	; 0x27
   178bc:	strbcc	r0, [r5, r8]
   178c0:	add	r0, r8, #1
   178c4:	cmp	r0, ip
   178c8:	movcc	r1, #92	; 0x5c
   178cc:	strbcc	r1, [r5, r0]
   178d0:	add	r0, r8, #2
   178d4:	add	r8, r8, #3
   178d8:	cmp	r0, ip
   178dc:	movcc	r1, #39	; 0x27
   178e0:	strbcc	r1, [r5, r0]
   178e4:	mov	r0, #0
   178e8:	str	r0, [fp, #-56]	; 0xffffffc8
   178ec:	mov	r9, #1
   178f0:	b	175e4 <lchmod@@Base+0xed0>
   178f4:	ldr	r0, [sp, #40]	; 0x28
   178f8:	str	lr, [sp, #44]	; 0x2c
   178fc:	str	ip, [sp, #88]	; 0x58
   17900:	cmp	r0, #1
   17904:	bne	179b4 <lchmod@@Base+0x12a0>
   17908:	str	sl, [sp, #36]	; 0x24
   1790c:	bl	119e4 <__ctype_b_loc@plt>
   17910:	ldr	r0, [r0]
   17914:	ldr	r4, [fp, #-80]	; 0xffffffb0
   17918:	mov	r1, #1
   1791c:	add	r0, r0, r6, lsl #1
   17920:	ldrb	r0, [r0, #1]
   17924:	ubfx	r9, r0, #6, #1
   17928:	ldr	r0, [sp, #52]	; 0x34
   1792c:	ldr	lr, [sp, #44]	; 0x2c
   17930:	cmp	r1, #1
   17934:	orr	r3, r9, r0
   17938:	bhi	17bb4 <lchmod@@Base+0x14a0>
   1793c:	tst	r3, #1
   17940:	beq	17bb4 <lchmod@@Base+0x14a0>
   17944:	ldr	sl, [sp, #36]	; 0x24
   17948:	ldr	ip, [sp, #88]	; 0x58
   1794c:	b	175e4 <lchmod@@Base+0xed0>
   17950:	ldr	r1, [sp, #48]	; 0x30
   17954:	mov	r0, #0
   17958:	str	r0, [fp, #-56]	; 0xffffffc8
   1795c:	mov	r0, #92	; 0x5c
   17960:	cmp	r1, #0
   17964:	beq	17974 <lchmod@@Base+0x1260>
   17968:	mov	r6, #92	; 0x5c
   1796c:	mov	r9, #0
   17970:	b	17d78 <lchmod@@Base+0x1664>
   17974:	mov	r1, #0
   17978:	mov	r9, #0
   1797c:	str	r1, [fp, #-56]	; 0xffffffc8
   17980:	ldr	r1, [sp, #84]	; 0x54
   17984:	tst	r1, #1
   17988:	mov	r1, #0
   1798c:	beq	175e4 <lchmod@@Base+0xed0>
   17990:	b	1762c <lchmod@@Base+0xf18>
   17994:	ldr	r0, [sp, #32]
   17998:	mov	r6, #0
   1799c:	mov	r9, #0
   179a0:	cmp	r0, #0
   179a4:	mov	r0, #0
   179a8:	str	r0, [fp, #-56]	; 0xffffffc8
   179ac:	beq	175e4 <lchmod@@Base+0xed0>
   179b0:	b	17dd0 <lchmod@@Base+0x16bc>
   179b4:	mov	r0, #0
   179b8:	cmn	sl, #1
   179bc:	sub	r3, fp, #40	; 0x28
   179c0:	str	r0, [fp, #-36]	; 0xffffffdc
   179c4:	str	r0, [fp, #-40]	; 0xffffffd8
   179c8:	bne	179e0 <lchmod@@Base+0x12cc>
   179cc:	mov	r0, r4
   179d0:	bl	11a20 <strlen@plt>
   179d4:	ldr	r4, [fp, #-80]	; 0xffffffb0
   179d8:	sub	r3, fp, #40	; 0x28
   179dc:	mov	sl, r0
   179e0:	ldr	r0, [sp, #72]	; 0x48
   179e4:	mov	r9, #1
   179e8:	mov	r1, #0
   179ec:	str	sl, [sp, #36]	; 0x24
   179f0:	add	r0, r0, r7
   179f4:	str	r0, [sp, #20]
   179f8:	add	r0, r1, r7
   179fc:	str	r1, [sp, #24]
   17a00:	add	r1, r4, r0
   17a04:	mov	r4, r0
   17a08:	sub	r2, sl, r0
   17a0c:	sub	r0, fp, #44	; 0x2c
   17a10:	bl	1a274 <lchmod@@Base+0x3b60>
   17a14:	cmp	r0, #0
   17a18:	beq	17e24 <lchmod@@Base+0x1710>
   17a1c:	cmn	r0, #1
   17a20:	beq	17ddc <lchmod@@Base+0x16c8>
   17a24:	ldr	r2, [sp, #36]	; 0x24
   17a28:	cmn	r0, #2
   17a2c:	beq	17de4 <lchmod@@Base+0x16d0>
   17a30:	ldr	r2, [sp, #64]	; 0x40
   17a34:	ldr	ip, [sp, #88]	; 0x58
   17a38:	ldr	r4, [sp, #84]	; 0x54
   17a3c:	ldr	lr, [fp, #-48]	; 0xffffffd0
   17a40:	cmp	r0, #2
   17a44:	mov	r1, #0
   17a48:	movwcc	r1, #1
   17a4c:	eor	r2, r2, #1
   17a50:	orrs	r1, r2, r1
   17a54:	bne	17aa4 <lchmod@@Base+0x1390>
   17a58:	ldr	r1, [sp, #24]
   17a5c:	ldr	r2, [sp, #20]
   17a60:	add	r1, r2, r1
   17a64:	sub	r2, r0, #1
   17a68:	ldrb	r3, [r1]
   17a6c:	sub	r5, r3, #94	; 0x5e
   17a70:	cmp	r5, #30
   17a74:	bhi	17a8c <lchmod@@Base+0x1378>
   17a78:	mov	r4, #1
   17a7c:	mov	sl, #1073741829	; 0x40000005
   17a80:	tst	sl, r4, lsl r5
   17a84:	ldr	r4, [sp, #84]	; 0x54
   17a88:	bne	17eec <lchmod@@Base+0x17d8>
   17a8c:	sub	r3, r3, #91	; 0x5b
   17a90:	cmp	r3, #2
   17a94:	bcc	17eec <lchmod@@Base+0x17d8>
   17a98:	add	r1, r1, #1
   17a9c:	subs	r2, r2, #1
   17aa0:	bne	17a68 <lchmod@@Base+0x1354>
   17aa4:	ldr	r5, [sp, #24]
   17aa8:	str	lr, [fp, #-48]	; 0xffffffd0
   17aac:	add	r5, r0, r5
   17ab0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17ab4:	bl	1190c <iswprint@plt>
   17ab8:	cmp	r0, #0
   17abc:	sub	r4, fp, #40	; 0x28
   17ac0:	movwne	r0, #1
   17ac4:	and	r9, r9, r0
   17ac8:	mov	r0, r4
   17acc:	bl	118a0 <mbsinit@plt>
   17ad0:	mov	r1, r5
   17ad4:	mov	r3, r4
   17ad8:	ldr	sl, [sp, #36]	; 0x24
   17adc:	ldr	r5, [fp, #-84]	; 0xffffffac
   17ae0:	ldr	r4, [fp, #-80]	; 0xffffffb0
   17ae4:	cmp	r0, #0
   17ae8:	beq	179f8 <lchmod@@Base+0x12e4>
   17aec:	b	17928 <lchmod@@Base+0x1214>
   17af0:	mov	r8, r0
   17af4:	b	175e4 <lchmod@@Base+0xed0>
   17af8:	mov	r0, #0
   17afc:	str	r0, [fp, #-56]	; 0xffffffc8
   17b00:	ldr	r0, [sp, #28]
   17b04:	cmp	r0, #0
   17b08:	beq	17bac <lchmod@@Base+0x1498>
   17b0c:	add	r0, r7, #2
   17b10:	mov	r1, sl
   17b14:	cmp	r0, sl
   17b18:	bcs	17bac <lchmod@@Base+0x1498>
   17b1c:	add	r1, r7, r4
   17b20:	ldrb	r1, [r1, #1]
   17b24:	cmp	r1, #63	; 0x3f
   17b28:	bne	17bac <lchmod@@Base+0x1498>
   17b2c:	ldrb	r9, [r4, r0]
   17b30:	sub	r2, r9, #33	; 0x21
   17b34:	cmp	r2, #29
   17b38:	bhi	17bac <lchmod@@Base+0x1498>
   17b3c:	mov	r1, r4
   17b40:	movw	r4, #20929	; 0x51c1
   17b44:	mov	r3, #1
   17b48:	movt	r4, #14336	; 0x3800
   17b4c:	tst	r4, r3, lsl r2
   17b50:	beq	17e38 <lchmod@@Base+0x1724>
   17b54:	ldr	r2, [fp, #-76]	; 0xffffffb4
   17b58:	tst	r2, #1
   17b5c:	bne	18008 <lchmod@@Base+0x18f4>
   17b60:	cmp	r8, ip
   17b64:	mov	r4, r1
   17b68:	mov	r7, r0
   17b6c:	mov	r6, r9
   17b70:	movcc	r2, #63	; 0x3f
   17b74:	strbcc	r2, [r5, r8]
   17b78:	add	r2, r8, #1
   17b7c:	cmp	r2, ip
   17b80:	movcc	r3, #34	; 0x22
   17b84:	strbcc	r3, [r5, r2]
   17b88:	add	r2, r8, #2
   17b8c:	cmp	r2, ip
   17b90:	movcc	r3, #34	; 0x22
   17b94:	strbcc	r3, [r5, r2]
   17b98:	add	r2, r8, #3
   17b9c:	add	r8, r8, #4
   17ba0:	cmp	r2, ip
   17ba4:	movcc	r3, #63	; 0x3f
   17ba8:	strbcc	r3, [r5, r2]
   17bac:	mov	r9, #0
   17bb0:	b	175e4 <lchmod@@Base+0xed0>
   17bb4:	ldr	sl, [sp, #36]	; 0x24
   17bb8:	add	r0, r1, r7
   17bbc:	mov	r2, #0
   17bc0:	str	r3, [sp, #24]
   17bc4:	str	r0, [fp, #-56]	; 0xffffffc8
   17bc8:	tst	r3, #1
   17bcc:	beq	17bf8 <lchmod@@Base+0x14e4>
   17bd0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17bd4:	tst	r0, #1
   17bd8:	beq	17cc0 <lchmod@@Base+0x15ac>
   17bdc:	ldr	r1, [sp, #88]	; 0x58
   17be0:	mov	r0, r3
   17be4:	cmp	r8, r1
   17be8:	movcc	r1, #92	; 0x5c
   17bec:	strbcc	r1, [r5, r8]
   17bf0:	add	r8, r8, #1
   17bf4:	b	17cc4 <lchmod@@Base+0x15b0>
   17bf8:	ldr	r1, [fp, #-76]	; 0xffffffb4
   17bfc:	tst	r1, #1
   17c00:	bne	17f10 <lchmod@@Base+0x17fc>
   17c04:	ldr	r1, [fp, #-68]	; 0xffffffbc
   17c08:	subs	r2, r1, #2
   17c0c:	movwne	r2, #1
   17c10:	orr	r2, r2, lr
   17c14:	tst	r2, #1
   17c18:	bne	17c5c <lchmod@@Base+0x1548>
   17c1c:	ldr	r1, [sp, #88]	; 0x58
   17c20:	add	r2, r8, #1
   17c24:	mov	lr, #1
   17c28:	cmp	r8, r1
   17c2c:	movcc	r1, #39	; 0x27
   17c30:	strbcc	r1, [r5, r8]
   17c34:	ldr	r1, [sp, #88]	; 0x58
   17c38:	cmp	r2, r1
   17c3c:	movcc	r1, #36	; 0x24
   17c40:	strbcc	r1, [r5, r2]
   17c44:	ldr	r1, [sp, #88]	; 0x58
   17c48:	add	r2, r8, #2
   17c4c:	add	r8, r8, #3
   17c50:	cmp	r2, r1
   17c54:	movcc	r1, #39	; 0x27
   17c58:	strbcc	r1, [r5, r2]
   17c5c:	ldr	r1, [sp, #88]	; 0x58
   17c60:	add	r2, r8, #1
   17c64:	mov	r0, r3
   17c68:	cmp	r8, r1
   17c6c:	movcc	r1, #92	; 0x5c
   17c70:	strbcc	r1, [r5, r8]
   17c74:	ldr	r1, [sp, #88]	; 0x58
   17c78:	cmp	r2, r1
   17c7c:	bcs	17c90 <lchmod@@Base+0x157c>
   17c80:	uxtb	r3, r6
   17c84:	mov	r1, #48	; 0x30
   17c88:	orr	r3, r1, r3, lsr #6
   17c8c:	strb	r3, [r5, r2]
   17c90:	ldr	r1, [sp, #88]	; 0x58
   17c94:	add	r2, r8, #2
   17c98:	add	r8, r8, #3
   17c9c:	cmp	r2, r1
   17ca0:	lsrcc	r3, r6, #3
   17ca4:	movcc	r1, #6
   17ca8:	bficc	r3, r1, #3, #29
   17cac:	mov	r1, #6
   17cb0:	bfi	r6, r1, #3, #29
   17cb4:	strbcc	r3, [r5, r2]
   17cb8:	mov	r2, #1
   17cbc:	b	17ccc <lchmod@@Base+0x15b8>
   17cc0:	mov	r0, r3
   17cc4:	mov	r1, #0
   17cc8:	str	r1, [fp, #-52]	; 0xffffffcc
   17ccc:	mov	ip, r2
   17cd0:	and	r1, r2, #1
   17cd4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17cd8:	add	r3, r7, #1
   17cdc:	cmp	r2, r3
   17ce0:	bls	17d68 <lchmod@@Base+0x1654>
   17ce4:	cmp	r1, #0
   17ce8:	mvn	r5, lr
   17cec:	movwne	r1, #1
   17cf0:	orr	r5, r5, r1
   17cf4:	tst	r5, #1
   17cf8:	bne	17d3c <lchmod@@Base+0x1628>
   17cfc:	ldr	r1, [sp, #88]	; 0x58
   17d00:	ldr	r5, [fp, #-84]	; 0xffffffac
   17d04:	mov	r2, r4
   17d08:	ldr	r4, [sp, #88]	; 0x58
   17d0c:	ldr	r0, [sp, #24]
   17d10:	mov	lr, #0
   17d14:	cmp	r8, r1
   17d18:	movcc	r1, #39	; 0x27
   17d1c:	strbcc	r1, [r5, r8]
   17d20:	add	r1, r8, #1
   17d24:	add	r8, r8, #2
   17d28:	cmp	r1, r4
   17d2c:	movcc	r4, #39	; 0x27
   17d30:	strbcc	r4, [r5, r1]
   17d34:	mov	r4, r2
   17d38:	b	17d40 <lchmod@@Base+0x162c>
   17d3c:	ldr	r5, [fp, #-84]	; 0xffffffac
   17d40:	ldr	r1, [sp, #88]	; 0x58
   17d44:	mov	r2, ip
   17d48:	cmp	r8, r1
   17d4c:	ldr	r1, [sp, #72]	; 0x48
   17d50:	strbcc	r6, [r5, r8]
   17d54:	add	r8, r8, #1
   17d58:	ldrb	r6, [r1, r7]
   17d5c:	mov	r7, r3
   17d60:	mov	r3, r0
   17d64:	b	17bc8 <lchmod@@Base+0x14b4>
   17d68:	ldr	ip, [sp, #88]	; 0x58
   17d6c:	cmp	r1, #0
   17d70:	movwne	r1, #1
   17d74:	str	r1, [fp, #-56]	; 0xffffffc8
   17d78:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17d7c:	cmp	r0, #0
   17d80:	bne	17db0 <lchmod@@Base+0x169c>
   17d84:	tst	lr, #1
   17d88:	beq	17db0 <lchmod@@Base+0x169c>
   17d8c:	cmp	r8, ip
   17d90:	mov	lr, #0
   17d94:	movcc	r0, #39	; 0x27
   17d98:	strbcc	r0, [r5, r8]
   17d9c:	add	r0, r8, #1
   17da0:	add	r8, r8, #2
   17da4:	cmp	r0, ip
   17da8:	movcc	r1, #39	; 0x27
   17dac:	strbcc	r1, [r5, r0]
   17db0:	mov	r1, r9
   17db4:	mov	r0, r6
   17db8:	cmp	r8, ip
   17dbc:	strbcc	r0, [r5, r8]
   17dc0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17dc4:	add	r8, r8, #1
   17dc8:	and	r0, r0, r1
   17dcc:	str	r0, [fp, #-48]	; 0xffffffd0
   17dd0:	mov	r3, sl
   17dd4:	add	r7, r7, #1
   17dd8:	b	172c8 <lchmod@@Base+0xbb4>
   17ddc:	mov	r9, #0
   17de0:	b	17e24 <lchmod@@Base+0x1710>
   17de4:	mov	r9, #0
   17de8:	cmp	r2, r4
   17dec:	bls	17e24 <lchmod@@Base+0x1710>
   17df0:	ldr	r4, [fp, #-80]	; 0xffffffb0
   17df4:	ldr	r1, [sp, #24]
   17df8:	add	r0, r4, r7
   17dfc:	mov	r3, r1
   17e00:	ldrb	r1, [r0, r1]
   17e04:	cmp	r1, #0
   17e08:	beq	17e30 <lchmod@@Base+0x171c>
   17e0c:	add	r3, r3, #1
   17e10:	add	r1, r7, r3
   17e14:	cmp	r1, r2
   17e18:	mov	r1, r3
   17e1c:	bcc	17dfc <lchmod@@Base+0x16e8>
   17e20:	b	17928 <lchmod@@Base+0x1214>
   17e24:	ldr	r4, [fp, #-80]	; 0xffffffb0
   17e28:	ldr	r1, [sp, #24]
   17e2c:	b	17928 <lchmod@@Base+0x1214>
   17e30:	mov	r1, r3
   17e34:	b	17928 <lchmod@@Base+0x1214>
   17e38:	mov	r9, #0
   17e3c:	mov	r4, r1
   17e40:	b	175e4 <lchmod@@Base+0xed0>
   17e44:	mov	sl, r7
   17e48:	b	17e50 <lchmod@@Base+0x173c>
   17e4c:	mvn	sl, #0
   17e50:	ldr	r1, [fp, #-68]	; 0xffffffbc
   17e54:	ldr	r2, [fp, #-76]	; 0xffffffb4
   17e58:	eor	r0, r1, #2
   17e5c:	orr	r0, r0, r8
   17e60:	clz	r0, r0
   17e64:	lsr	r0, r0, #5
   17e68:	tst	r2, r0
   17e6c:	bne	17f14 <lchmod@@Base+0x1800>
   17e70:	subs	r0, r1, #2
   17e74:	movwne	r0, #1
   17e78:	orr	r0, r2, r0
   17e7c:	tst	r0, #1
   17e80:	ldreq	r0, [sp, #60]	; 0x3c
   17e84:	ldreq	r1, [fp, #-48]	; 0xffffffd0
   17e88:	eoreq	r0, r0, #1
   17e8c:	tsteq	r0, #1
   17e90:	bne	17fa8 <lchmod@@Base+0x1894>
   17e94:	tst	r1, #1
   17e98:	bne	17f74 <lchmod@@Base+0x1860>
   17e9c:	ldr	r6, [sp, #56]	; 0x38
   17ea0:	mov	r9, #0
   17ea4:	cmp	r6, #0
   17ea8:	beq	17fa0 <lchmod@@Base+0x188c>
   17eac:	ldr	r0, [sp, #84]	; 0x54
   17eb0:	mov	r1, #0
   17eb4:	mov	r7, #2
   17eb8:	cmp	ip, #0
   17ebc:	str	r1, [fp, #-48]	; 0xffffffd0
   17ec0:	mov	r1, #0
   17ec4:	str	r1, [fp, #-76]	; 0xffffffb4
   17ec8:	beq	17030 <lchmod@@Base+0x91c>
   17ecc:	b	17fa8 <lchmod@@Base+0x1894>
   17ed0:	ldr	r4, [fp, #-80]	; 0xffffffb0
   17ed4:	ldr	r1, [fp, #12]
   17ed8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   17edc:	mov	r5, r3
   17ee0:	mov	ip, r6
   17ee4:	mov	r3, sl
   17ee8:	b	17f38 <lchmod@@Base+0x1824>
   17eec:	tst	r4, #1
   17ef0:	ldr	r5, [fp, #-84]	; 0xffffffac
   17ef4:	ldr	r4, [fp, #-80]	; 0xffffffb0
   17ef8:	ldr	r1, [fp, #12]
   17efc:	ldr	r3, [sp, #36]	; 0x24
   17f00:	mov	r0, #2
   17f04:	movwne	r0, #4
   17f08:	mov	r2, r0
   17f0c:	b	17f38 <lchmod@@Base+0x1824>
   17f10:	ldr	ip, [sp, #88]	; 0x58
   17f14:	ldr	r1, [sp, #84]	; 0x54
   17f18:	mov	r0, #2
   17f1c:	tst	r1, #1
   17f20:	movwne	r0, #4
   17f24:	ldr	r2, [fp, #-68]	; 0xffffffbc
   17f28:	ldr	r1, [fp, #12]
   17f2c:	mov	r3, sl
   17f30:	cmp	r2, #2
   17f34:	moveq	r2, r0
   17f38:	mov	r0, #0
   17f3c:	bic	r1, r1, #2
   17f40:	str	r2, [sp]
   17f44:	mov	r2, r4
   17f48:	str	r0, [sp, #8]
   17f4c:	ldr	r0, [sp, #76]	; 0x4c
   17f50:	str	r1, [sp, #4]
   17f54:	mov	r1, ip
   17f58:	str	r0, [sp, #12]
   17f5c:	ldr	r0, [sp, #80]	; 0x50
   17f60:	str	r0, [sp, #16]
   17f64:	mov	r0, r5
   17f68:	bl	16fa4 <lchmod@@Base+0x890>
   17f6c:	mov	r8, r0
   17f70:	b	17ff4 <lchmod@@Base+0x18e0>
   17f74:	mov	r0, #5
   17f78:	ldr	r1, [sp, #56]	; 0x38
   17f7c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   17f80:	mov	r3, sl
   17f84:	str	r0, [sp]
   17f88:	ldr	r0, [fp, #12]
   17f8c:	str	r0, [sp, #4]
   17f90:	ldr	r0, [fp, #16]
   17f94:	str	r0, [sp, #8]
   17f98:	ldr	r0, [sp, #76]	; 0x4c
   17f9c:	b	17f58 <lchmod@@Base+0x1844>
   17fa0:	mov	r0, #0
   17fa4:	str	r0, [fp, #-76]	; 0xffffffb4
   17fa8:	ldr	r1, [fp, #-88]	; 0xffffffa8
   17fac:	cmp	r1, #0
   17fb0:	beq	17fe8 <lchmod@@Base+0x18d4>
   17fb4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   17fb8:	tst	r0, #1
   17fbc:	bne	17fe8 <lchmod@@Base+0x18d4>
   17fc0:	ldrb	r0, [r1]
   17fc4:	cmp	r0, #0
   17fc8:	beq	17fe8 <lchmod@@Base+0x18d4>
   17fcc:	add	r1, r1, #1
   17fd0:	cmp	r8, ip
   17fd4:	strbcc	r0, [r5, r8]
   17fd8:	add	r8, r8, #1
   17fdc:	ldrb	r0, [r1], #1
   17fe0:	cmp	r0, #0
   17fe4:	bne	17fd0 <lchmod@@Base+0x18bc>
   17fe8:	cmp	r8, ip
   17fec:	movcc	r0, #0
   17ff0:	strbcc	r0, [r5, r8]
   17ff4:	mov	r0, r8
   17ff8:	sub	sp, fp, #28
   17ffc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18000:	mov	r0, #4
   18004:	b	17f24 <lchmod@@Base+0x1810>
   18008:	mov	r4, r1
   1800c:	b	17f14 <lchmod@@Base+0x1800>
   18010:	bl	11bd0 <abort@plt>
   18014:	mov	r3, r2
   18018:	mov	r2, #0
   1801c:	b	18020 <lchmod@@Base+0x190c>
   18020:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18024:	add	fp, sp, #28
   18028:	sub	sp, sp, #36	; 0x24
   1802c:	movw	r8, #49672	; 0xc208
   18030:	cmp	r3, #0
   18034:	mov	r4, r2
   18038:	str	r2, [sp, #24]
   1803c:	mov	r5, r1
   18040:	mov	r6, r0
   18044:	str	r0, [sp, #20]
   18048:	movt	r8, #2
   1804c:	movne	r8, r3
   18050:	bl	11a5c <__errno_location@plt>
   18054:	str	r0, [sp, #28]
   18058:	ldr	r1, [r8, #40]	; 0x28
   1805c:	ldr	r2, [r8, #44]	; 0x2c
   18060:	ldr	r7, [r0]
   18064:	cmp	r4, #0
   18068:	add	sl, r8, #8
   1806c:	mov	r0, #0
   18070:	ldm	r8, {r3, r9}
   18074:	orreq	r9, r9, #1
   18078:	stm	sp, {r3, r9, sl}
   1807c:	str	r1, [sp, #12]
   18080:	str	r2, [sp, #16]
   18084:	mov	r1, #0
   18088:	mov	r2, r6
   1808c:	mov	r3, r5
   18090:	str	r7, [sp, #32]
   18094:	mov	r7, r5
   18098:	bl	16fa4 <lchmod@@Base+0x890>
   1809c:	add	r4, r0, #1
   180a0:	mov	r5, r0
   180a4:	mov	r0, r4
   180a8:	bl	19018 <lchmod@@Base+0x2904>
   180ac:	mov	r6, r0
   180b0:	ldr	r0, [r8]
   180b4:	ldr	r2, [r8, #44]	; 0x2c
   180b8:	ldr	r1, [r8, #40]	; 0x28
   180bc:	mov	r3, r7
   180c0:	stm	sp, {r0, r9, sl}
   180c4:	str	r2, [sp, #16]
   180c8:	ldr	r2, [sp, #20]
   180cc:	str	r1, [sp, #12]
   180d0:	mov	r0, r6
   180d4:	mov	r1, r4
   180d8:	bl	16fa4 <lchmod@@Base+0x890>
   180dc:	ldr	r0, [sp, #24]
   180e0:	ldr	r1, [sp, #32]
   180e4:	ldr	r2, [sp, #28]
   180e8:	cmp	r0, #0
   180ec:	str	r1, [r2]
   180f0:	strne	r5, [r0]
   180f4:	mov	r0, r6
   180f8:	sub	sp, fp, #28
   180fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18100:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   18104:	add	fp, sp, #24
   18108:	movw	r5, #49564	; 0xc19c
   1810c:	movw	r8, #49560	; 0xc198
   18110:	movt	r5, #2
   18114:	movt	r8, #2
   18118:	ldr	r0, [r5]
   1811c:	ldr	r4, [r8]
   18120:	cmp	r0, #2
   18124:	blt	18150 <lchmod@@Base+0x1a3c>
   18128:	add	r7, r4, #12
   1812c:	mov	r6, #0
   18130:	ldr	r0, [r7, r6, lsl #3]
   18134:	bl	135bc <__assert_fail@plt+0x198c>
   18138:	ldr	r1, [r5]
   1813c:	add	r2, r6, #2
   18140:	add	r0, r6, #1
   18144:	mov	r6, r0
   18148:	cmp	r2, r1
   1814c:	blt	18130 <lchmod@@Base+0x1a1c>
   18150:	ldr	r0, [r4, #4]
   18154:	movw	r9, #49720	; 0xc238
   18158:	movw	r7, #49568	; 0xc1a0
   1815c:	movt	r9, #2
   18160:	movt	r7, #2
   18164:	cmp	r0, r9
   18168:	beq	18178 <lchmod@@Base+0x1a64>
   1816c:	bl	135bc <__assert_fail@plt+0x198c>
   18170:	mov	r0, #256	; 0x100
   18174:	stm	r7, {r0, r9}
   18178:	cmp	r4, r7
   1817c:	beq	1818c <lchmod@@Base+0x1a78>
   18180:	mov	r0, r4
   18184:	bl	135bc <__assert_fail@plt+0x198c>
   18188:	str	r7, [r8]
   1818c:	mov	r0, #1
   18190:	str	r0, [r5]
   18194:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   18198:	movw	r3, #49672	; 0xc208
   1819c:	mvn	r2, #0
   181a0:	movt	r3, #2
   181a4:	b	181a8 <lchmod@@Base+0x1a94>
   181a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   181ac:	add	fp, sp, #28
   181b0:	sub	sp, sp, #44	; 0x2c
   181b4:	mov	r7, r3
   181b8:	str	r2, [sp, #36]	; 0x24
   181bc:	str	r1, [sp, #32]
   181c0:	mov	r5, r0
   181c4:	bl	11a5c <__errno_location@plt>
   181c8:	cmp	r5, #0
   181cc:	bmi	1833c <lchmod@@Base+0x1c28>
   181d0:	cmn	r5, #-2147483647	; 0x80000001
   181d4:	beq	1833c <lchmod@@Base+0x1c28>
   181d8:	movw	r8, #49564	; 0xc19c
   181dc:	movw	r4, #49560	; 0xc198
   181e0:	str	r0, [sp, #28]
   181e4:	ldr	r0, [r0]
   181e8:	movt	r8, #2
   181ec:	movt	r4, #2
   181f0:	ldr	r1, [r8]
   181f4:	ldr	r6, [r4]
   181f8:	str	r0, [sp, #24]
   181fc:	cmp	r1, r5
   18200:	ble	1820c <lchmod@@Base+0x1af8>
   18204:	mov	sl, r6
   18208:	b	18278 <lchmod@@Base+0x1b64>
   1820c:	movw	r9, #49568	; 0xc1a0
   18210:	mov	r0, #8
   18214:	str	r1, [fp, #-32]	; 0xffffffe0
   18218:	sub	r1, r5, r1
   1821c:	mvn	r3, #-2147483648	; 0x80000000
   18220:	movt	r9, #2
   18224:	str	r0, [sp]
   18228:	add	r2, r1, #1
   1822c:	sub	r1, fp, #32
   18230:	subs	r0, r6, r9
   18234:	movne	r0, r6
   18238:	bl	19148 <lchmod@@Base+0x2a34>
   1823c:	mov	sl, r0
   18240:	cmp	r6, r9
   18244:	str	r0, [r4]
   18248:	bne	18254 <lchmod@@Base+0x1b40>
   1824c:	ldrd	r0, [r9]
   18250:	stm	sl, {r0, r1}
   18254:	ldr	r1, [r8]
   18258:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1825c:	add	r0, sl, r1, lsl #3
   18260:	sub	r1, r2, r1
   18264:	lsl	r2, r1, #3
   18268:	mov	r1, #0
   1826c:	bl	11a80 <memset@plt>
   18270:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18274:	str	r0, [r8]
   18278:	mov	r9, sl
   1827c:	ldm	r7, {r0, r1}
   18280:	orr	r8, r1, #1
   18284:	add	r1, r7, #8
   18288:	ldr	r2, [r7, #40]	; 0x28
   1828c:	ldr	r3, [r7, #44]	; 0x2c
   18290:	ldr	r6, [r9, r5, lsl #3]!
   18294:	str	r1, [sp, #20]
   18298:	ldr	r4, [r9, #4]!
   1829c:	stm	sp, {r0, r8}
   182a0:	add	r0, sp, #8
   182a4:	stm	r0, {r1, r2, r3}
   182a8:	ldr	r2, [sp, #32]
   182ac:	ldr	r3, [sp, #36]	; 0x24
   182b0:	mov	r1, r6
   182b4:	mov	r0, r4
   182b8:	bl	16fa4 <lchmod@@Base+0x890>
   182bc:	cmp	r6, r0
   182c0:	bhi	18324 <lchmod@@Base+0x1c10>
   182c4:	add	r6, r0, #1
   182c8:	movw	r0, #49720	; 0xc238
   182cc:	movt	r0, #2
   182d0:	str	r6, [sl, r5, lsl #3]
   182d4:	cmp	r4, r0
   182d8:	beq	182e4 <lchmod@@Base+0x1bd0>
   182dc:	mov	r0, r4
   182e0:	bl	135bc <__assert_fail@plt+0x198c>
   182e4:	mov	r0, r6
   182e8:	bl	19018 <lchmod@@Base+0x2904>
   182ec:	str	r0, [r9]
   182f0:	mov	r4, r0
   182f4:	add	r3, sp, #8
   182f8:	ldr	r0, [r7]
   182fc:	ldr	r1, [r7, #40]	; 0x28
   18300:	ldr	r2, [r7, #44]	; 0x2c
   18304:	stm	sp, {r0, r8}
   18308:	ldr	r0, [sp, #20]
   1830c:	stm	r3, {r0, r1, r2}
   18310:	ldr	r2, [sp, #32]
   18314:	ldr	r3, [sp, #36]	; 0x24
   18318:	mov	r0, r4
   1831c:	mov	r1, r6
   18320:	bl	16fa4 <lchmod@@Base+0x890>
   18324:	ldr	r0, [sp, #28]
   18328:	ldr	r1, [sp, #24]
   1832c:	str	r1, [r0]
   18330:	mov	r0, r4
   18334:	sub	sp, fp, #28
   18338:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1833c:	bl	11bd0 <abort@plt>
   18340:	movw	r3, #49672	; 0xc208
   18344:	movt	r3, #2
   18348:	b	181a8 <lchmod@@Base+0x1a94>
   1834c:	movw	r3, #49672	; 0xc208
   18350:	mov	r1, r0
   18354:	mov	r0, #0
   18358:	mvn	r2, #0
   1835c:	movt	r3, #2
   18360:	b	181a8 <lchmod@@Base+0x1a94>
   18364:	movw	r3, #49672	; 0xc208
   18368:	mov	r2, r1
   1836c:	mov	r1, r0
   18370:	mov	r0, #0
   18374:	movt	r3, #2
   18378:	b	181a8 <lchmod@@Base+0x1a94>
   1837c:	push	{fp, lr}
   18380:	mov	fp, sp
   18384:	sub	sp, sp, #48	; 0x30
   18388:	vmov.i32	q8, #0	; 0x00000000
   1838c:	mov	ip, #32
   18390:	mov	r3, sp
   18394:	mov	lr, r2
   18398:	cmp	r1, #10
   1839c:	add	r2, r3, #16
   183a0:	vst1.64	{d16-d17}, [r3], ip
   183a4:	vst1.64	{d16-d17}, [r2]
   183a8:	vst1.64	{d16-d17}, [r3]
   183ac:	beq	183cc <lchmod@@Base+0x1cb8>
   183b0:	str	r1, [sp]
   183b4:	mov	r3, sp
   183b8:	mov	r1, lr
   183bc:	mvn	r2, #0
   183c0:	bl	181a8 <lchmod@@Base+0x1a94>
   183c4:	mov	sp, fp
   183c8:	pop	{fp, pc}
   183cc:	bl	11bd0 <abort@plt>
   183d0:	push	{r4, sl, fp, lr}
   183d4:	add	fp, sp, #8
   183d8:	sub	sp, sp, #48	; 0x30
   183dc:	vmov.i32	q8, #0	; 0x00000000
   183e0:	mov	ip, r3
   183e4:	mov	r3, sp
   183e8:	mov	lr, #32
   183ec:	cmp	r1, #10
   183f0:	add	r4, r3, #16
   183f4:	vst1.64	{d16-d17}, [r3], lr
   183f8:	vst1.64	{d16-d17}, [r4]
   183fc:	vst1.64	{d16-d17}, [r3]
   18400:	beq	18420 <lchmod@@Base+0x1d0c>
   18404:	str	r1, [sp]
   18408:	mov	r1, r2
   1840c:	mov	r3, sp
   18410:	mov	r2, ip
   18414:	bl	181a8 <lchmod@@Base+0x1a94>
   18418:	sub	sp, fp, #8
   1841c:	pop	{r4, sl, fp, pc}
   18420:	bl	11bd0 <abort@plt>
   18424:	mov	r2, r1
   18428:	mov	r1, r0
   1842c:	mov	r0, #0
   18430:	b	1837c <lchmod@@Base+0x1c68>
   18434:	mov	r3, r2
   18438:	mov	r2, r1
   1843c:	mov	r1, r0
   18440:	mov	r0, #0
   18444:	b	183d0 <lchmod@@Base+0x1cbc>
   18448:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1844c:	add	fp, sp, #24
   18450:	sub	sp, sp, #48	; 0x30
   18454:	movw	r8, #49672	; 0xc208
   18458:	mov	lr, r0
   1845c:	mov	r3, sp
   18460:	mov	ip, r1
   18464:	movt	r8, #2
   18468:	mov	r1, r3
   1846c:	ldm	r8!, {r0, r4, r5, r6, r7, r9}
   18470:	stmia	r1!, {r0, r4, r5, r6, r7, r9}
   18474:	ldm	r8, {r0, r4, r5, r6, r7, r9}
   18478:	stm	r1, {r0, r4, r5, r6, r7, r9}
   1847c:	ubfx	r0, r2, #5, #3
   18480:	and	r2, r2, #31
   18484:	mov	r4, #1
   18488:	add	r0, r3, r0, lsl #2
   1848c:	ldr	r1, [r0, #8]
   18490:	bic	r4, r4, r1, lsr r2
   18494:	eor	r1, r1, r4, lsl r2
   18498:	mov	r2, ip
   1849c:	str	r1, [r0, #8]
   184a0:	mov	r0, #0
   184a4:	mov	r1, lr
   184a8:	bl	181a8 <lchmod@@Base+0x1a94>
   184ac:	sub	sp, fp, #24
   184b0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   184b4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   184b8:	add	fp, sp, #24
   184bc:	sub	sp, sp, #48	; 0x30
   184c0:	movw	lr, #49672	; 0xc208
   184c4:	mov	ip, r0
   184c8:	mov	r3, sp
   184cc:	movt	lr, #2
   184d0:	mov	r2, r3
   184d4:	ldm	lr!, {r0, r4, r5, r6, r7, r8}
   184d8:	stmia	r2!, {r0, r4, r5, r6, r7, r8}
   184dc:	ldm	lr, {r0, r4, r5, r6, r7, r8}
   184e0:	stm	r2, {r0, r4, r5, r6, r7, r8}
   184e4:	ubfx	r0, r1, #5, #3
   184e8:	and	r1, r1, #31
   184ec:	mov	r7, #1
   184f0:	add	r0, r3, r0, lsl #2
   184f4:	ldr	r2, [r0, #8]
   184f8:	bic	r7, r7, r2, lsr r1
   184fc:	eor	r1, r2, r7, lsl r1
   18500:	mvn	r2, #0
   18504:	str	r1, [r0, #8]
   18508:	mov	r0, #0
   1850c:	mov	r1, ip
   18510:	bl	181a8 <lchmod@@Base+0x1a94>
   18514:	sub	sp, fp, #24
   18518:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1851c:	push	{r4, r5, r6, r7, fp, lr}
   18520:	add	fp, sp, #16
   18524:	sub	sp, sp, #48	; 0x30
   18528:	movw	lr, #49672	; 0xc208
   1852c:	mov	ip, r0
   18530:	mov	r3, sp
   18534:	movt	lr, #2
   18538:	mov	r2, r3
   1853c:	ldm	lr!, {r0, r1, r4, r5, r6, r7}
   18540:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   18544:	ldm	lr, {r0, r1, r4, r5, r6, r7}
   18548:	stm	r2, {r0, r1, r4, r5, r6, r7}
   1854c:	mov	r1, ip
   18550:	mvn	r2, #0
   18554:	ldr	r0, [sp, #12]
   18558:	orr	r0, r0, #67108864	; 0x4000000
   1855c:	str	r0, [sp, #12]
   18560:	mov	r0, #0
   18564:	bl	181a8 <lchmod@@Base+0x1a94>
   18568:	sub	sp, fp, #16
   1856c:	pop	{r4, r5, r6, r7, fp, pc}
   18570:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   18574:	add	fp, sp, #24
   18578:	sub	sp, sp, #48	; 0x30
   1857c:	movw	r8, #49672	; 0xc208
   18580:	mov	ip, r1
   18584:	mov	lr, r0
   18588:	mov	r3, sp
   1858c:	movt	r8, #2
   18590:	mov	r2, r3
   18594:	ldm	r8!, {r0, r1, r4, r5, r6, r7}
   18598:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   1859c:	ldm	r8, {r0, r1, r4, r5, r6, r7}
   185a0:	stm	r2, {r0, r1, r4, r5, r6, r7}
   185a4:	mov	r1, lr
   185a8:	mov	r2, ip
   185ac:	ldr	r0, [sp, #12]
   185b0:	orr	r0, r0, #67108864	; 0x4000000
   185b4:	str	r0, [sp, #12]
   185b8:	mov	r0, #0
   185bc:	bl	181a8 <lchmod@@Base+0x1a94>
   185c0:	sub	sp, fp, #24
   185c4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   185c8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   185cc:	add	fp, sp, #24
   185d0:	sub	sp, sp, #96	; 0x60
   185d4:	vmov.i32	q8, #0	; 0x00000000
   185d8:	mov	lr, sp
   185dc:	mov	ip, r2
   185e0:	cmp	r1, #10
   185e4:	add	r3, lr, #16
   185e8:	mov	r2, lr
   185ec:	vst1.64	{d16-d17}, [r3]
   185f0:	mov	r3, #28
   185f4:	vst1.64	{d16-d17}, [r2], r3
   185f8:	vst1.32	{d16-d17}, [r2]
   185fc:	beq	1863c <lchmod@@Base+0x1f28>
   18600:	str	r1, [sp, #48]	; 0x30
   18604:	add	r3, sp, #48	; 0x30
   18608:	ldm	lr!, {r2, r4, r5, r6, r7}
   1860c:	add	r1, r3, #4
   18610:	stmia	r1!, {r2, r4, r5, r6, r7}
   18614:	ldm	lr, {r2, r4, r5, r6, r7, r8}
   18618:	stm	r1, {r2, r4, r5, r6, r7, r8}
   1861c:	mvn	r2, #0
   18620:	ldr	r1, [sp, #60]	; 0x3c
   18624:	orr	r1, r1, #67108864	; 0x4000000
   18628:	str	r1, [sp, #60]	; 0x3c
   1862c:	mov	r1, ip
   18630:	bl	181a8 <lchmod@@Base+0x1a94>
   18634:	sub	sp, fp, #24
   18638:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1863c:	bl	11bd0 <abort@plt>
   18640:	push	{fp, lr}
   18644:	mov	fp, sp
   18648:	sub	sp, sp, #8
   1864c:	mvn	ip, #0
   18650:	str	ip, [sp]
   18654:	bl	18660 <lchmod@@Base+0x1f4c>
   18658:	mov	sp, fp
   1865c:	pop	{fp, pc}
   18660:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   18664:	add	fp, sp, #24
   18668:	sub	sp, sp, #48	; 0x30
   1866c:	movw	ip, #49672	; 0xc208
   18670:	mov	lr, r3
   18674:	mov	r3, sp
   18678:	cmp	r1, #0
   1867c:	movt	ip, #2
   18680:	cmpne	r2, #0
   18684:	ldm	ip!, {r4, r5, r6, r7, r8, r9}
   18688:	stmia	r3!, {r4, r5, r6, r7, r8, r9}
   1868c:	ldm	ip, {r4, r5, r6, r7, r8, r9}
   18690:	stm	r3, {r4, r5, r6, r7, r8, r9}
   18694:	mov	r3, #10
   18698:	str	r3, [sp]
   1869c:	bne	186a4 <lchmod@@Base+0x1f90>
   186a0:	bl	11bd0 <abort@plt>
   186a4:	ldr	ip, [fp, #8]
   186a8:	str	r2, [sp, #44]	; 0x2c
   186ac:	str	r1, [sp, #40]	; 0x28
   186b0:	mov	r3, sp
   186b4:	mov	r1, lr
   186b8:	mov	r2, ip
   186bc:	bl	181a8 <lchmod@@Base+0x1a94>
   186c0:	sub	sp, fp, #24
   186c4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   186c8:	push	{fp, lr}
   186cc:	mov	fp, sp
   186d0:	sub	sp, sp, #8
   186d4:	mov	r3, r2
   186d8:	mov	r2, r1
   186dc:	mov	r1, r0
   186e0:	mvn	r0, #0
   186e4:	str	r0, [sp]
   186e8:	mov	r0, #0
   186ec:	bl	18660 <lchmod@@Base+0x1f4c>
   186f0:	mov	sp, fp
   186f4:	pop	{fp, pc}
   186f8:	push	{fp, lr}
   186fc:	mov	fp, sp
   18700:	sub	sp, sp, #8
   18704:	mov	ip, r2
   18708:	mov	r2, r1
   1870c:	mov	r1, r0
   18710:	str	r3, [sp]
   18714:	mov	r0, #0
   18718:	mov	r3, ip
   1871c:	bl	18660 <lchmod@@Base+0x1f4c>
   18720:	mov	sp, fp
   18724:	pop	{fp, pc}
   18728:	movw	r3, #49576	; 0xc1a8
   1872c:	movt	r3, #2
   18730:	b	181a8 <lchmod@@Base+0x1a94>
   18734:	movw	r3, #49576	; 0xc1a8
   18738:	mov	r2, r1
   1873c:	mov	r1, r0
   18740:	mov	r0, #0
   18744:	movt	r3, #2
   18748:	b	181a8 <lchmod@@Base+0x1a94>
   1874c:	movw	r3, #49576	; 0xc1a8
   18750:	mvn	r2, #0
   18754:	movt	r3, #2
   18758:	b	181a8 <lchmod@@Base+0x1a94>
   1875c:	movw	r3, #49576	; 0xc1a8
   18760:	mov	r1, r0
   18764:	mov	r0, #0
   18768:	mvn	r2, #0
   1876c:	movt	r3, #2
   18770:	b	181a8 <lchmod@@Base+0x1a94>
   18774:	push	{r4, r5, fp, lr}
   18778:	add	fp, sp, #8
   1877c:	mov	r5, r0
   18780:	mov	r4, r1
   18784:	mov	r0, #0
   18788:	mov	r2, #5
   1878c:	mov	r1, r5
   18790:	bl	118b8 <dcgettext@plt>
   18794:	cmp	r0, r5
   18798:	popne	{r4, r5, fp, pc}
   1879c:	bl	1a23c <lchmod@@Base+0x3b28>
   187a0:	ldrb	r1, [r0]
   187a4:	and	r1, r1, #223	; 0xdf
   187a8:	cmp	r1, #71	; 0x47
   187ac:	beq	18814 <lchmod@@Base+0x2100>
   187b0:	cmp	r1, #85	; 0x55
   187b4:	bne	1886c <lchmod@@Base+0x2158>
   187b8:	ldrb	r1, [r0, #1]
   187bc:	and	r1, r1, #223	; 0xdf
   187c0:	cmp	r1, #84	; 0x54
   187c4:	bne	1886c <lchmod@@Base+0x2158>
   187c8:	ldrb	r1, [r0, #2]
   187cc:	and	r1, r1, #223	; 0xdf
   187d0:	cmp	r1, #70	; 0x46
   187d4:	bne	1886c <lchmod@@Base+0x2158>
   187d8:	ldrb	r1, [r0, #3]
   187dc:	cmp	r1, #45	; 0x2d
   187e0:	bne	1886c <lchmod@@Base+0x2158>
   187e4:	ldrb	r1, [r0, #4]
   187e8:	cmp	r1, #56	; 0x38
   187ec:	bne	1886c <lchmod@@Base+0x2158>
   187f0:	ldrb	r0, [r0, #5]
   187f4:	cmp	r0, #0
   187f8:	bne	1886c <lchmod@@Base+0x2158>
   187fc:	ldrb	r1, [r5]
   18800:	movw	r2, #45243	; 0xb0bb
   18804:	movw	r0, #45247	; 0xb0bf
   18808:	movt	r2, #1
   1880c:	movt	r0, #1
   18810:	b	1889c <lchmod@@Base+0x2188>
   18814:	ldrb	r1, [r0, #1]
   18818:	and	r1, r1, #223	; 0xdf
   1881c:	cmp	r1, #66	; 0x42
   18820:	bne	1886c <lchmod@@Base+0x2158>
   18824:	ldrb	r1, [r0, #2]
   18828:	cmp	r1, #49	; 0x31
   1882c:	bne	1886c <lchmod@@Base+0x2158>
   18830:	ldrb	r1, [r0, #3]
   18834:	cmp	r1, #56	; 0x38
   18838:	bne	1886c <lchmod@@Base+0x2158>
   1883c:	ldrb	r1, [r0, #4]
   18840:	cmp	r1, #48	; 0x30
   18844:	bne	1886c <lchmod@@Base+0x2158>
   18848:	ldrb	r1, [r0, #5]
   1884c:	cmp	r1, #51	; 0x33
   18850:	bne	1886c <lchmod@@Base+0x2158>
   18854:	ldrb	r1, [r0, #6]
   18858:	cmp	r1, #48	; 0x30
   1885c:	bne	1886c <lchmod@@Base+0x2158>
   18860:	ldrb	r0, [r0, #7]
   18864:	cmp	r0, #0
   18868:	beq	18888 <lchmod@@Base+0x2174>
   1886c:	movw	r1, #45237	; 0xb0b5
   18870:	movw	r0, #45241	; 0xb0b9
   18874:	cmp	r4, #9
   18878:	movt	r1, #1
   1887c:	movt	r0, #1
   18880:	moveq	r0, r1
   18884:	pop	{r4, r5, fp, pc}
   18888:	ldrb	r1, [r5]
   1888c:	movw	r2, #45251	; 0xb0c3
   18890:	movw	r0, #45255	; 0xb0c7
   18894:	movt	r2, #1
   18898:	movt	r0, #1
   1889c:	cmp	r1, #96	; 0x60
   188a0:	moveq	r0, r2
   188a4:	pop	{r4, r5, fp, pc}
   188a8:	push	{r4, r5, r6, sl, fp, lr}
   188ac:	add	fp, sp, #16
   188b0:	ldr	r4, [r0], #8
   188b4:	mov	r5, r1
   188b8:	cmp	r4, r0
   188bc:	beq	188dc <lchmod@@Base+0x21c8>
   188c0:	mov	r0, r4
   188c4:	mov	r1, r5
   188c8:	bl	19c14 <lchmod@@Base+0x3500>
   188cc:	cmp	r0, #0
   188d0:	mov	r6, r0
   188d4:	moveq	r6, r4
   188d8:	b	18904 <lchmod@@Base+0x21f0>
   188dc:	mov	r0, r5
   188e0:	bl	19be4 <lchmod@@Base+0x34d0>
   188e4:	cmp	r0, #0
   188e8:	beq	18900 <lchmod@@Base+0x21ec>
   188ec:	mov	r1, r4
   188f0:	mov	r2, r5
   188f4:	mov	r6, r0
   188f8:	bl	11894 <memcpy@plt>
   188fc:	b	18904 <lchmod@@Base+0x21f0>
   18900:	mov	r6, #0
   18904:	mov	r0, r6
   18908:	pop	{r4, r5, r6, sl, fp, pc}
   1890c:	push	{r4, r5, r6, sl, fp, lr}
   18910:	add	fp, sp, #16
   18914:	mov	r4, r0
   18918:	add	r6, r0, #8
   1891c:	ldrd	r0, [r0]
   18920:	lsl	r5, r1, #1
   18924:	cmp	r0, r6
   18928:	beq	18934 <lchmod@@Base+0x2220>
   1892c:	bl	135bc <__assert_fail@plt+0x198c>
   18930:	ldr	r1, [r4, #4]
   18934:	cmp	r5, r1
   18938:	bcc	1895c <lchmod@@Base+0x2248>
   1893c:	mov	r0, r5
   18940:	bl	19be4 <lchmod@@Base+0x34d0>
   18944:	cmp	r0, #0
   18948:	beq	18968 <lchmod@@Base+0x2254>
   1894c:	str	r0, [r4]
   18950:	mov	r0, #1
   18954:	str	r5, [r4, #4]
   18958:	pop	{r4, r5, r6, sl, fp, pc}
   1895c:	bl	11a5c <__errno_location@plt>
   18960:	mov	r1, #12
   18964:	str	r1, [r0]
   18968:	str	r6, [r4]
   1896c:	mov	r0, #0
   18970:	mov	r5, #1024	; 0x400
   18974:	b	18954 <lchmod@@Base+0x2240>
   18978:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1897c:	add	fp, sp, #24
   18980:	ldrd	r8, [r0]
   18984:	add	r7, r0, #8
   18988:	mov	r4, r0
   1898c:	lsl	r5, r9, #1
   18990:	cmp	r8, r7
   18994:	beq	189c0 <lchmod@@Base+0x22ac>
   18998:	cmp	r5, r9
   1899c:	bcc	189f8 <lchmod@@Base+0x22e4>
   189a0:	mov	r0, r8
   189a4:	mov	r1, r5
   189a8:	bl	19c14 <lchmod@@Base+0x3500>
   189ac:	mov	r6, r0
   189b0:	cmp	r0, #0
   189b4:	bne	189e0 <lchmod@@Base+0x22cc>
   189b8:	ldr	r8, [r4]
   189bc:	b	18a04 <lchmod@@Base+0x22f0>
   189c0:	mov	r0, r5
   189c4:	bl	19be4 <lchmod@@Base+0x34d0>
   189c8:	cmp	r0, #0
   189cc:	beq	189f0 <lchmod@@Base+0x22dc>
   189d0:	ldr	r2, [r4, #4]
   189d4:	mov	r1, r8
   189d8:	mov	r6, r0
   189dc:	bl	11894 <memcpy@plt>
   189e0:	mov	r0, #1
   189e4:	str	r6, [r4]
   189e8:	str	r5, [r4, #4]
   189ec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   189f0:	mov	r0, #0
   189f4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   189f8:	bl	11a5c <__errno_location@plt>
   189fc:	mov	r1, #12
   18a00:	str	r1, [r0]
   18a04:	mov	r0, r8
   18a08:	bl	135bc <__assert_fail@plt+0x198c>
   18a0c:	str	r7, [r4]
   18a10:	mov	r0, #0
   18a14:	mov	r5, #1024	; 0x400
   18a18:	b	189e8 <lchmod@@Base+0x22d4>
   18a1c:	push	{r4, sl, fp, lr}
   18a20:	add	fp, sp, #8
   18a24:	mov	r4, r1
   18a28:	bl	11a08 <getfilecon@plt>
   18a2c:	mov	r1, r4
   18a30:	pop	{r4, sl, fp, lr}
   18a34:	b	18a38 <lchmod@@Base+0x2324>
   18a38:	push	{r4, r5, fp, lr}
   18a3c:	add	fp, sp, #8
   18a40:	cmp	r0, #10
   18a44:	beq	18a5c <lchmod@@Base+0x2348>
   18a48:	cmp	r0, #0
   18a4c:	bne	18aa4 <lchmod@@Base+0x2390>
   18a50:	bl	11a5c <__errno_location@plt>
   18a54:	mov	r1, #95	; 0x5f
   18a58:	b	18a9c <lchmod@@Base+0x2388>
   18a5c:	ldr	r5, [r1]
   18a60:	mov	r4, r1
   18a64:	movw	r1, #45344	; 0xb120
   18a68:	movt	r1, #1
   18a6c:	mov	r0, r5
   18a70:	bl	11828 <strcmp@plt>
   18a74:	mov	r1, r0
   18a78:	mov	r0, #10
   18a7c:	cmp	r1, #0
   18a80:	popne	{r4, r5, fp, pc}
   18a84:	mov	r0, r5
   18a88:	bl	11b58 <freecon@plt>
   18a8c:	mov	r0, #0
   18a90:	str	r0, [r4]
   18a94:	bl	11a5c <__errno_location@plt>
   18a98:	mov	r1, #61	; 0x3d
   18a9c:	str	r1, [r0]
   18aa0:	mvn	r0, #0
   18aa4:	pop	{r4, r5, fp, pc}
   18aa8:	push	{r4, sl, fp, lr}
   18aac:	add	fp, sp, #8
   18ab0:	mov	r4, r1
   18ab4:	bl	11990 <lgetfilecon@plt>
   18ab8:	mov	r1, r4
   18abc:	pop	{r4, sl, fp, lr}
   18ac0:	b	18a38 <lchmod@@Base+0x2324>
   18ac4:	push	{r4, sl, fp, lr}
   18ac8:	add	fp, sp, #8
   18acc:	mov	r4, r1
   18ad0:	bl	118dc <fgetfilecon@plt>
   18ad4:	mov	r1, r4
   18ad8:	pop	{r4, sl, fp, lr}
   18adc:	b	18a38 <lchmod@@Base+0x2324>
   18ae0:	push	{r4, r5, r6, r7, fp, lr}
   18ae4:	add	fp, sp, #16
   18ae8:	mov	r4, r0
   18aec:	cmp	r0, #2
   18af0:	bhi	18b20 <lchmod@@Base+0x240c>
   18af4:	mov	r0, r4
   18af8:	bl	1a314 <lchmod@@Base+0x3c00>
   18afc:	mov	r5, r0
   18b00:	bl	11a5c <__errno_location@plt>
   18b04:	ldr	r7, [r0]
   18b08:	mov	r6, r0
   18b0c:	mov	r0, r4
   18b10:	bl	11bdc <close@plt>
   18b14:	mov	r0, r5
   18b18:	str	r7, [r6]
   18b1c:	pop	{r4, r5, r6, r7, fp, pc}
   18b20:	mov	r0, r4
   18b24:	pop	{r4, r5, r6, r7, fp, pc}
   18b28:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   18b2c:	add	fp, sp, #24
   18b30:	sub	sp, sp, #32
   18b34:	ldr	r6, [fp, #12]
   18b38:	ldr	r7, [fp, #8]
   18b3c:	mov	r4, r2
   18b40:	mov	r8, r0
   18b44:	cmp	r1, #0
   18b48:	beq	18b70 <lchmod@@Base+0x245c>
   18b4c:	movw	r2, #45354	; 0xb12a
   18b50:	mov	r5, r1
   18b54:	str	r3, [sp, #4]
   18b58:	str	r4, [sp]
   18b5c:	mov	r0, r8
   18b60:	mov	r1, #1
   18b64:	movt	r2, #1
   18b68:	mov	r3, r5
   18b6c:	b	18b88 <lchmod@@Base+0x2474>
   18b70:	movw	r2, #45366	; 0xb136
   18b74:	str	r3, [sp]
   18b78:	mov	r0, r8
   18b7c:	mov	r1, #1
   18b80:	mov	r3, r4
   18b84:	movt	r2, #1
   18b88:	bl	11ab0 <__fprintf_chk@plt>
   18b8c:	movw	r1, #45373	; 0xb13d
   18b90:	mov	r0, #0
   18b94:	mov	r2, #5
   18b98:	movt	r1, #1
   18b9c:	bl	118b8 <dcgettext@plt>
   18ba0:	movw	r2, #46091	; 0xb40b
   18ba4:	mov	r3, r0
   18ba8:	movw	r0, #2022	; 0x7e6
   18bac:	mov	r1, #1
   18bb0:	movt	r2, #1
   18bb4:	str	r0, [sp]
   18bb8:	mov	r0, r8
   18bbc:	bl	11ab0 <__fprintf_chk@plt>
   18bc0:	movw	r4, #44698	; 0xae9a
   18bc4:	mov	r1, r8
   18bc8:	movt	r4, #1
   18bcc:	mov	r0, r4
   18bd0:	bl	11804 <fputs_unlocked@plt>
   18bd4:	movw	r1, #45377	; 0xb141
   18bd8:	mov	r0, #0
   18bdc:	mov	r2, #5
   18be0:	movt	r1, #1
   18be4:	bl	118b8 <dcgettext@plt>
   18be8:	movw	r3, #45548	; 0xb1ec
   18bec:	mov	r2, r0
   18bf0:	mov	r0, r8
   18bf4:	mov	r1, #1
   18bf8:	movt	r3, #1
   18bfc:	bl	11ab0 <__fprintf_chk@plt>
   18c00:	mov	r0, r4
   18c04:	mov	r1, r8
   18c08:	bl	11804 <fputs_unlocked@plt>
   18c0c:	cmp	r6, #9
   18c10:	bhi	18c74 <lchmod@@Base+0x2560>
   18c14:	add	r0, pc, #0
   18c18:	ldr	pc, [r0, r6, lsl #2]
   18c1c:	andeq	r8, r1, ip, asr #28
   18c20:	andeq	r8, r1, r4, asr #24
   18c24:	andeq	r8, r1, r0, lsl #25
   18c28:	andeq	r8, r1, r8, lsr #25
   18c2c:	ldrdeq	r8, [r1], -r0
   18c30:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   18c34:	andeq	r8, r1, r0, lsr #26
   18c38:	andeq	r8, r1, r8, asr sp
   18c3c:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   18c40:	andeq	r8, r1, r0, lsr #27
   18c44:	movw	r1, #45582	; 0xb20e
   18c48:	mov	r0, #0
   18c4c:	mov	r2, #5
   18c50:	movt	r1, #1
   18c54:	bl	118b8 <dcgettext@plt>
   18c58:	ldr	r3, [r7]
   18c5c:	mov	r2, r0
   18c60:	mov	r0, r8
   18c64:	mov	r1, #1
   18c68:	sub	sp, fp, #24
   18c6c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   18c70:	b	11ab0 <__fprintf_chk@plt>
   18c74:	movw	r1, #45901	; 0xb34d
   18c78:	movt	r1, #1
   18c7c:	b	18da8 <lchmod@@Base+0x2694>
   18c80:	movw	r1, #45598	; 0xb21e
   18c84:	mov	r0, #0
   18c88:	mov	r2, #5
   18c8c:	movt	r1, #1
   18c90:	bl	118b8 <dcgettext@plt>
   18c94:	mov	r2, r0
   18c98:	ldr	r3, [r7]
   18c9c:	ldr	r0, [r7, #4]
   18ca0:	str	r0, [sp]
   18ca4:	b	18d94 <lchmod@@Base+0x2680>
   18ca8:	movw	r1, #45621	; 0xb235
   18cac:	mov	r0, #0
   18cb0:	mov	r2, #5
   18cb4:	movt	r1, #1
   18cb8:	bl	118b8 <dcgettext@plt>
   18cbc:	mov	r2, r0
   18cc0:	ldr	r3, [r7]
   18cc4:	ldmib	r7, {r0, r1}
   18cc8:	stm	sp, {r0, r1}
   18ccc:	b	18d94 <lchmod@@Base+0x2680>
   18cd0:	movw	r1, #45649	; 0xb251
   18cd4:	mov	r0, #0
   18cd8:	mov	r2, #5
   18cdc:	movt	r1, #1
   18ce0:	bl	118b8 <dcgettext@plt>
   18ce4:	ldr	r3, [r7]
   18ce8:	mov	r2, r0
   18cec:	ldmib	r7, {r0, r1, r7}
   18cf0:	stm	sp, {r0, r1, r7}
   18cf4:	b	18d94 <lchmod@@Base+0x2680>
   18cf8:	movw	r1, #45681	; 0xb271
   18cfc:	mov	r0, #0
   18d00:	mov	r2, #5
   18d04:	movt	r1, #1
   18d08:	bl	118b8 <dcgettext@plt>
   18d0c:	ldr	r3, [r7]
   18d10:	mov	r2, r0
   18d14:	ldmib	r7, {r0, r1, r6, r7}
   18d18:	stm	sp, {r0, r1, r6, r7}
   18d1c:	b	18d94 <lchmod@@Base+0x2680>
   18d20:	movw	r1, #45717	; 0xb295
   18d24:	mov	r0, #0
   18d28:	mov	r2, #5
   18d2c:	movt	r1, #1
   18d30:	bl	118b8 <dcgettext@plt>
   18d34:	mov	r2, r0
   18d38:	ldr	r3, [r7]
   18d3c:	ldmib	r7, {r0, r1, r6}
   18d40:	ldr	r5, [r7, #16]
   18d44:	ldr	r7, [r7, #20]
   18d48:	stm	sp, {r0, r1, r6}
   18d4c:	str	r5, [sp, #12]
   18d50:	str	r7, [sp, #16]
   18d54:	b	18d94 <lchmod@@Base+0x2680>
   18d58:	movw	r1, #45757	; 0xb2bd
   18d5c:	mov	r0, #0
   18d60:	mov	r2, #5
   18d64:	movt	r1, #1
   18d68:	bl	118b8 <dcgettext@plt>
   18d6c:	mov	r2, r0
   18d70:	ldr	r3, [r7]
   18d74:	ldmib	r7, {r0, r1, r6}
   18d78:	ldr	r5, [r7, #16]
   18d7c:	ldr	r4, [r7, #20]
   18d80:	ldr	r7, [r7, #24]
   18d84:	stm	sp, {r0, r1, r6}
   18d88:	str	r5, [sp, #12]
   18d8c:	str	r4, [sp, #16]
   18d90:	str	r7, [sp, #20]
   18d94:	mov	r0, r8
   18d98:	mov	r1, #1
   18d9c:	b	18e48 <lchmod@@Base+0x2734>
   18da0:	movw	r1, #45849	; 0xb319
   18da4:	movt	r1, #1
   18da8:	mov	r0, #0
   18dac:	mov	r2, #5
   18db0:	bl	118b8 <dcgettext@plt>
   18db4:	mov	ip, r0
   18db8:	ldr	r3, [r7]
   18dbc:	ldr	r0, [r7, #4]
   18dc0:	ldr	r1, [r7, #8]
   18dc4:	ldr	r6, [r7, #12]
   18dc8:	ldr	r5, [r7, #16]
   18dcc:	ldr	r4, [r7, #20]
   18dd0:	ldr	r2, [r7, #24]
   18dd4:	ldr	lr, [r7, #28]
   18dd8:	ldr	r7, [r7, #32]
   18ddc:	stm	sp, {r0, r1, r6}
   18de0:	str	r5, [sp, #12]
   18de4:	str	r4, [sp, #16]
   18de8:	str	r2, [sp, #20]
   18dec:	str	lr, [sp, #24]
   18df0:	str	r7, [sp, #28]
   18df4:	b	18e3c <lchmod@@Base+0x2728>
   18df8:	movw	r1, #45801	; 0xb2e9
   18dfc:	mov	r0, #0
   18e00:	mov	r2, #5
   18e04:	movt	r1, #1
   18e08:	bl	118b8 <dcgettext@plt>
   18e0c:	mov	ip, r0
   18e10:	ldr	r3, [r7]
   18e14:	ldmib	r7, {r0, r1, r6}
   18e18:	ldr	r5, [r7, #16]
   18e1c:	ldr	r4, [r7, #20]
   18e20:	ldr	r2, [r7, #24]
   18e24:	ldr	r7, [r7, #28]
   18e28:	stm	sp, {r0, r1, r6}
   18e2c:	str	r5, [sp, #12]
   18e30:	str	r4, [sp, #16]
   18e34:	str	r2, [sp, #20]
   18e38:	str	r7, [sp, #24]
   18e3c:	mov	r0, r8
   18e40:	mov	r1, #1
   18e44:	mov	r2, ip
   18e48:	bl	11ab0 <__fprintf_chk@plt>
   18e4c:	sub	sp, fp, #24
   18e50:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18e54:	push	{r4, sl, fp, lr}
   18e58:	add	fp, sp, #8
   18e5c:	sub	sp, sp, #8
   18e60:	ldr	ip, [fp, #8]
   18e64:	mov	lr, #0
   18e68:	ldr	r4, [ip, lr, lsl #2]
   18e6c:	add	lr, lr, #1
   18e70:	cmp	r4, #0
   18e74:	bne	18e68 <lchmod@@Base+0x2754>
   18e78:	sub	r4, lr, #1
   18e7c:	str	ip, [sp]
   18e80:	str	r4, [sp, #4]
   18e84:	bl	18b28 <lchmod@@Base+0x2414>
   18e88:	sub	sp, fp, #8
   18e8c:	pop	{r4, sl, fp, pc}
   18e90:	push	{r4, r5, fp, lr}
   18e94:	add	fp, sp, #8
   18e98:	sub	sp, sp, #48	; 0x30
   18e9c:	ldr	r4, [fp, #8]
   18ea0:	mov	ip, #0
   18ea4:	add	lr, sp, #8
   18ea8:	ldr	r5, [r4]
   18eac:	cmp	r5, #0
   18eb0:	str	r5, [lr, ip, lsl #2]
   18eb4:	beq	18ecc <lchmod@@Base+0x27b8>
   18eb8:	add	ip, ip, #1
   18ebc:	add	r4, r4, #4
   18ec0:	cmp	ip, #10
   18ec4:	bne	18ea8 <lchmod@@Base+0x2794>
   18ec8:	mov	ip, #10
   18ecc:	str	lr, [sp]
   18ed0:	str	ip, [sp, #4]
   18ed4:	bl	18b28 <lchmod@@Base+0x2414>
   18ed8:	sub	sp, fp, #8
   18edc:	pop	{r4, r5, fp, pc}
   18ee0:	push	{fp, lr}
   18ee4:	mov	fp, sp
   18ee8:	sub	sp, sp, #8
   18eec:	add	ip, fp, #8
   18ef0:	str	ip, [sp, #4]
   18ef4:	str	ip, [sp]
   18ef8:	bl	18e90 <lchmod@@Base+0x277c>
   18efc:	mov	sp, fp
   18f00:	pop	{fp, pc}
   18f04:	push	{fp, lr}
   18f08:	mov	fp, sp
   18f0c:	movw	r0, #49644	; 0xc1ec
   18f10:	movt	r0, #2
   18f14:	ldr	r1, [r0]
   18f18:	movw	r0, #44698	; 0xae9a
   18f1c:	movt	r0, #1
   18f20:	bl	11804 <fputs_unlocked@plt>
   18f24:	movw	r1, #45961	; 0xb389
   18f28:	mov	r0, #0
   18f2c:	mov	r2, #5
   18f30:	movt	r1, #1
   18f34:	bl	118b8 <dcgettext@plt>
   18f38:	movw	r2, #45981	; 0xb39d
   18f3c:	mov	r1, r0
   18f40:	mov	r0, #1
   18f44:	movt	r2, #1
   18f48:	bl	11a8c <__printf_chk@plt>
   18f4c:	movw	r1, #46003	; 0xb3b3
   18f50:	mov	r0, #0
   18f54:	mov	r2, #5
   18f58:	movt	r1, #1
   18f5c:	bl	118b8 <dcgettext@plt>
   18f60:	movw	r2, #43880	; 0xab68
   18f64:	movw	r3, #44507	; 0xaddb
   18f68:	mov	r1, r0
   18f6c:	mov	r0, #1
   18f70:	movt	r2, #1
   18f74:	movt	r3, #1
   18f78:	bl	11a8c <__printf_chk@plt>
   18f7c:	movw	r1, #46023	; 0xb3c7
   18f80:	mov	r0, #0
   18f84:	mov	r2, #5
   18f88:	movt	r1, #1
   18f8c:	bl	118b8 <dcgettext@plt>
   18f90:	movw	r2, #46062	; 0xb3ee
   18f94:	mov	r1, r0
   18f98:	mov	r0, #1
   18f9c:	movt	r2, #1
   18fa0:	pop	{fp, lr}
   18fa4:	b	11a8c <__printf_chk@plt>
   18fa8:	b	18fac <lchmod@@Base+0x2898>
   18fac:	push	{r4, r5, r6, sl, fp, lr}
   18fb0:	add	fp, sp, #16
   18fb4:	mov	r4, r2
   18fb8:	mov	r5, r1
   18fbc:	mov	r6, r0
   18fc0:	bl	1a2d8 <lchmod@@Base+0x3bc4>
   18fc4:	cmp	r0, #0
   18fc8:	popne	{r4, r5, r6, sl, fp, pc}
   18fcc:	cmp	r6, #0
   18fd0:	beq	18fe4 <lchmod@@Base+0x28d0>
   18fd4:	cmp	r5, #0
   18fd8:	cmpne	r4, #0
   18fdc:	bne	18fe4 <lchmod@@Base+0x28d0>
   18fe0:	pop	{r4, r5, r6, sl, fp, pc}
   18fe4:	bl	19414 <lchmod@@Base+0x2d00>
   18fe8:	push	{fp, lr}
   18fec:	mov	fp, sp
   18ff0:	bl	19be4 <lchmod@@Base+0x34d0>
   18ff4:	cmp	r0, #0
   18ff8:	popne	{fp, pc}
   18ffc:	bl	19414 <lchmod@@Base+0x2d00>
   19000:	push	{fp, lr}
   19004:	mov	fp, sp
   19008:	bl	19be4 <lchmod@@Base+0x34d0>
   1900c:	cmp	r0, #0
   19010:	popne	{fp, pc}
   19014:	bl	19414 <lchmod@@Base+0x2d00>
   19018:	push	{fp, lr}
   1901c:	mov	fp, sp
   19020:	bl	19be4 <lchmod@@Base+0x34d0>
   19024:	cmp	r0, #0
   19028:	popne	{fp, pc}
   1902c:	bl	19414 <lchmod@@Base+0x2d00>
   19030:	push	{r4, r5, fp, lr}
   19034:	add	fp, sp, #8
   19038:	mov	r4, r1
   1903c:	mov	r5, r0
   19040:	bl	19c14 <lchmod@@Base+0x3500>
   19044:	cmp	r0, #0
   19048:	popne	{r4, r5, fp, pc}
   1904c:	cmp	r5, #0
   19050:	beq	19060 <lchmod@@Base+0x294c>
   19054:	cmp	r4, #0
   19058:	bne	19060 <lchmod@@Base+0x294c>
   1905c:	pop	{r4, r5, fp, pc}
   19060:	bl	19414 <lchmod@@Base+0x2d00>
   19064:	push	{fp, lr}
   19068:	mov	fp, sp
   1906c:	cmp	r1, #0
   19070:	orreq	r1, r1, #1
   19074:	bl	19c14 <lchmod@@Base+0x3500>
   19078:	cmp	r0, #0
   1907c:	popne	{fp, pc}
   19080:	bl	19414 <lchmod@@Base+0x2d00>
   19084:	push	{fp, lr}
   19088:	mov	fp, sp
   1908c:	clz	r3, r2
   19090:	lsr	ip, r3, #5
   19094:	clz	r3, r1
   19098:	lsr	r3, r3, #5
   1909c:	orrs	r3, r3, ip
   190a0:	movwne	r1, #1
   190a4:	movwne	r2, #1
   190a8:	bl	1a2d8 <lchmod@@Base+0x3bc4>
   190ac:	cmp	r0, #0
   190b0:	popne	{fp, pc}
   190b4:	bl	19414 <lchmod@@Base+0x2d00>
   190b8:	push	{fp, lr}
   190bc:	mov	fp, sp
   190c0:	mov	r2, r1
   190c4:	mov	r1, r0
   190c8:	mov	r0, #0
   190cc:	bl	1a2d8 <lchmod@@Base+0x3bc4>
   190d0:	cmp	r0, #0
   190d4:	popne	{fp, pc}
   190d8:	bl	19414 <lchmod@@Base+0x2d00>
   190dc:	mov	r2, r1
   190e0:	mov	r1, r0
   190e4:	mov	r0, #0
   190e8:	b	19084 <lchmod@@Base+0x2970>
   190ec:	mov	r2, #1
   190f0:	b	190f4 <lchmod@@Base+0x29e0>
   190f4:	push	{r4, r5, fp, lr}
   190f8:	add	fp, sp, #8
   190fc:	ldr	r5, [r1]
   19100:	mov	r4, r1
   19104:	cmp	r0, #0
   19108:	beq	19120 <lchmod@@Base+0x2a0c>
   1910c:	mov	r1, #1
   19110:	add	r1, r1, r5, lsr #1
   19114:	adds	r5, r5, r1
   19118:	bcc	19138 <lchmod@@Base+0x2a24>
   1911c:	bl	19414 <lchmod@@Base+0x2d00>
   19120:	cmp	r5, #0
   19124:	bne	19138 <lchmod@@Base+0x2a24>
   19128:	mov	r1, #64	; 0x40
   1912c:	cmp	r2, #64	; 0x40
   19130:	udiv	r5, r1, r2
   19134:	addhi	r5, r5, #1
   19138:	mov	r1, r5
   1913c:	bl	18fac <lchmod@@Base+0x2898>
   19140:	str	r5, [r4]
   19144:	pop	{r4, r5, fp, pc}
   19148:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1914c:	add	fp, sp, #24
   19150:	ldr	r6, [r1]
   19154:	mov	r8, r1
   19158:	ldr	r4, [fp, #8]
   1915c:	add	r1, r6, r6, asr #1
   19160:	cmp	r1, r6
   19164:	mvnvs	r1, #-2147483648	; 0x80000000
   19168:	cmp	r1, r3
   1916c:	mov	r5, r1
   19170:	movgt	r5, r3
   19174:	cmn	r3, #1
   19178:	movle	r5, r1
   1917c:	cmn	r4, #1
   19180:	ble	191a0 <lchmod@@Base+0x2a8c>
   19184:	cmp	r4, #0
   19188:	beq	191f4 <lchmod@@Base+0x2ae0>
   1918c:	cmn	r5, #1
   19190:	ble	191c8 <lchmod@@Base+0x2ab4>
   19194:	mvn	r7, #-2147483648	; 0x80000000
   19198:	udiv	r1, r7, r4
   1919c:	b	191bc <lchmod@@Base+0x2aa8>
   191a0:	cmn	r5, #1
   191a4:	ble	191e4 <lchmod@@Base+0x2ad0>
   191a8:	cmn	r4, #1
   191ac:	beq	191f4 <lchmod@@Base+0x2ae0>
   191b0:	mov	r1, #-2147483648	; 0x80000000
   191b4:	mvn	r7, #-2147483648	; 0x80000000
   191b8:	sdiv	r1, r1, r4
   191bc:	cmp	r1, r5
   191c0:	bge	191f4 <lchmod@@Base+0x2ae0>
   191c4:	b	19204 <lchmod@@Base+0x2af0>
   191c8:	beq	191f4 <lchmod@@Base+0x2ae0>
   191cc:	mov	r1, #-2147483648	; 0x80000000
   191d0:	mvn	r7, #-2147483648	; 0x80000000
   191d4:	sdiv	r1, r1, r5
   191d8:	cmp	r1, r4
   191dc:	bge	191f4 <lchmod@@Base+0x2ae0>
   191e0:	b	19204 <lchmod@@Base+0x2af0>
   191e4:	mvn	r7, #-2147483648	; 0x80000000
   191e8:	sdiv	r1, r7, r4
   191ec:	cmp	r5, r1
   191f0:	blt	19204 <lchmod@@Base+0x2af0>
   191f4:	mul	r1, r5, r4
   191f8:	mov	r7, #64	; 0x40
   191fc:	cmp	r1, #63	; 0x3f
   19200:	bgt	1920c <lchmod@@Base+0x2af8>
   19204:	sdiv	r5, r7, r4
   19208:	mul	r1, r5, r4
   1920c:	cmp	r0, #0
   19210:	moveq	r7, #0
   19214:	streq	r7, [r8]
   19218:	sub	r7, r5, r6
   1921c:	cmp	r7, r2
   19220:	bge	192c4 <lchmod@@Base+0x2bb0>
   19224:	add	r5, r6, r2
   19228:	mov	r2, #0
   1922c:	mov	r1, #0
   19230:	cmp	r5, r3
   19234:	movwgt	r2, #1
   19238:	cmn	r3, #1
   1923c:	movwgt	r1, #1
   19240:	cmp	r5, r6
   19244:	bvs	192ac <lchmod@@Base+0x2b98>
   19248:	ands	r1, r1, r2
   1924c:	bne	192ac <lchmod@@Base+0x2b98>
   19250:	cmn	r4, #1
   19254:	ble	19274 <lchmod@@Base+0x2b60>
   19258:	cmp	r4, #0
   1925c:	beq	192c0 <lchmod@@Base+0x2bac>
   19260:	cmn	r5, #1
   19264:	ble	19298 <lchmod@@Base+0x2b84>
   19268:	mvn	r1, #-2147483648	; 0x80000000
   1926c:	udiv	r1, r1, r4
   19270:	b	1928c <lchmod@@Base+0x2b78>
   19274:	cmn	r5, #1
   19278:	ble	192b0 <lchmod@@Base+0x2b9c>
   1927c:	cmn	r4, #1
   19280:	beq	192c0 <lchmod@@Base+0x2bac>
   19284:	mov	r1, #-2147483648	; 0x80000000
   19288:	sdiv	r1, r1, r4
   1928c:	cmp	r1, r5
   19290:	bge	192c0 <lchmod@@Base+0x2bac>
   19294:	b	192ac <lchmod@@Base+0x2b98>
   19298:	beq	192c0 <lchmod@@Base+0x2bac>
   1929c:	mov	r1, #-2147483648	; 0x80000000
   192a0:	sdiv	r1, r1, r5
   192a4:	cmp	r1, r4
   192a8:	bge	192c0 <lchmod@@Base+0x2bac>
   192ac:	bl	19414 <lchmod@@Base+0x2d00>
   192b0:	mvn	r1, #-2147483648	; 0x80000000
   192b4:	sdiv	r1, r1, r4
   192b8:	cmp	r5, r1
   192bc:	blt	192ac <lchmod@@Base+0x2b98>
   192c0:	mul	r1, r5, r4
   192c4:	bl	19030 <lchmod@@Base+0x291c>
   192c8:	str	r5, [r8]
   192cc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   192d0:	push	{fp, lr}
   192d4:	mov	fp, sp
   192d8:	mov	r1, #1
   192dc:	bl	19b90 <lchmod@@Base+0x347c>
   192e0:	cmp	r0, #0
   192e4:	popne	{fp, pc}
   192e8:	bl	19414 <lchmod@@Base+0x2d00>
   192ec:	push	{fp, lr}
   192f0:	mov	fp, sp
   192f4:	bl	19b90 <lchmod@@Base+0x347c>
   192f8:	cmp	r0, #0
   192fc:	popne	{fp, pc}
   19300:	bl	19414 <lchmod@@Base+0x2d00>
   19304:	push	{fp, lr}
   19308:	mov	fp, sp
   1930c:	mov	r1, #1
   19310:	bl	19b90 <lchmod@@Base+0x347c>
   19314:	cmp	r0, #0
   19318:	popne	{fp, pc}
   1931c:	bl	19414 <lchmod@@Base+0x2d00>
   19320:	push	{fp, lr}
   19324:	mov	fp, sp
   19328:	bl	19b90 <lchmod@@Base+0x347c>
   1932c:	cmp	r0, #0
   19330:	popne	{fp, pc}
   19334:	bl	19414 <lchmod@@Base+0x2d00>
   19338:	push	{r4, r5, fp, lr}
   1933c:	add	fp, sp, #8
   19340:	mov	r5, r0
   19344:	mov	r0, r1
   19348:	mov	r4, r1
   1934c:	bl	19be4 <lchmod@@Base+0x34d0>
   19350:	cmp	r0, #0
   19354:	beq	19368 <lchmod@@Base+0x2c54>
   19358:	mov	r1, r5
   1935c:	mov	r2, r4
   19360:	pop	{r4, r5, fp, lr}
   19364:	b	11894 <memcpy@plt>
   19368:	bl	19414 <lchmod@@Base+0x2d00>
   1936c:	push	{r4, r5, fp, lr}
   19370:	add	fp, sp, #8
   19374:	mov	r5, r0
   19378:	mov	r0, r1
   1937c:	mov	r4, r1
   19380:	bl	19be4 <lchmod@@Base+0x34d0>
   19384:	cmp	r0, #0
   19388:	beq	1939c <lchmod@@Base+0x2c88>
   1938c:	mov	r1, r5
   19390:	mov	r2, r4
   19394:	pop	{r4, r5, fp, lr}
   19398:	b	11894 <memcpy@plt>
   1939c:	bl	19414 <lchmod@@Base+0x2d00>
   193a0:	push	{r4, r5, fp, lr}
   193a4:	add	fp, sp, #8
   193a8:	mov	r5, r0
   193ac:	add	r0, r1, #1
   193b0:	mov	r4, r1
   193b4:	bl	19be4 <lchmod@@Base+0x34d0>
   193b8:	cmp	r0, #0
   193bc:	beq	193d8 <lchmod@@Base+0x2cc4>
   193c0:	mov	r1, #0
   193c4:	mov	r2, r4
   193c8:	strb	r1, [r0, r4]
   193cc:	mov	r1, r5
   193d0:	pop	{r4, r5, fp, lr}
   193d4:	b	11894 <memcpy@plt>
   193d8:	bl	19414 <lchmod@@Base+0x2d00>
   193dc:	push	{r4, r5, fp, lr}
   193e0:	add	fp, sp, #8
   193e4:	mov	r4, r0
   193e8:	bl	11a20 <strlen@plt>
   193ec:	add	r5, r0, #1
   193f0:	mov	r0, r5
   193f4:	bl	19be4 <lchmod@@Base+0x34d0>
   193f8:	cmp	r0, #0
   193fc:	beq	19410 <lchmod@@Base+0x2cfc>
   19400:	mov	r1, r4
   19404:	mov	r2, r5
   19408:	pop	{r4, r5, fp, lr}
   1940c:	b	11894 <memcpy@plt>
   19410:	bl	19414 <lchmod@@Base+0x2d00>
   19414:	push	{fp, lr}
   19418:	mov	fp, sp
   1941c:	movw	r0, #49556	; 0xc194
   19420:	movw	r1, #46138	; 0xb43a
   19424:	mov	r2, #5
   19428:	movt	r0, #2
   1942c:	movt	r1, #1
   19430:	ldr	r4, [r0]
   19434:	mov	r0, #0
   19438:	bl	118b8 <dcgettext@plt>
   1943c:	movw	r2, #44887	; 0xaf57
   19440:	mov	r3, r0
   19444:	mov	r0, r4
   19448:	mov	r1, #0
   1944c:	movt	r2, #1
   19450:	bl	11978 <error@plt>
   19454:	bl	11bd0 <abort@plt>
   19458:	push	{fp, lr}
   1945c:	mov	fp, sp
   19460:	orr	r1, r1, #512	; 0x200
   19464:	bl	135e4 <__assert_fail@plt+0x19b4>
   19468:	cmp	r0, #0
   1946c:	popne	{fp, pc}
   19470:	bl	11a5c <__errno_location@plt>
   19474:	ldr	r0, [r0]
   19478:	cmp	r0, #22
   1947c:	bne	194a0 <lchmod@@Base+0x2d8c>
   19480:	movw	r0, #46155	; 0xb44b
   19484:	movw	r1, #46171	; 0xb45b
   19488:	movw	r3, #46182	; 0xb466
   1948c:	mov	r2, #41	; 0x29
   19490:	movt	r0, #1
   19494:	movt	r1, #1
   19498:	movt	r3, #1
   1949c:	bl	11c30 <__assert_fail@plt>
   194a0:	bl	19414 <lchmod@@Base+0x2d00>
   194a4:	ldr	r0, [r0, #48]	; 0x30
   194a8:	and	r0, r0, #17
   194ac:	cmp	r0, #16
   194b0:	moveq	r0, #1
   194b4:	bxeq	lr
   194b8:	cmp	r0, #17
   194bc:	movne	r0, #0
   194c0:	bxne	lr
   194c4:	ldr	r0, [r1, #48]	; 0x30
   194c8:	cmp	r0, #0
   194cc:	movwne	r0, #1
   194d0:	bx	lr
   194d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   194d8:	add	fp, sp, #28
   194dc:	sub	sp, sp, #20
   194e0:	cmp	r2, #37	; 0x25
   194e4:	bcs	19b70 <lchmod@@Base+0x345c>
   194e8:	mov	r8, r3
   194ec:	mov	r5, r2
   194f0:	mov	r6, r1
   194f4:	mov	r4, r0
   194f8:	bl	11a5c <__errno_location@plt>
   194fc:	mov	r7, r0
   19500:	mov	r0, #0
   19504:	str	r0, [r7]
   19508:	bl	119e4 <__ctype_b_loc@plt>
   1950c:	ldr	r1, [r0]
   19510:	mov	r2, r4
   19514:	ldrb	r0, [r2], #1
   19518:	add	r3, r1, r0, lsl #1
   1951c:	ldrb	r3, [r3, #1]
   19520:	tst	r3, #32
   19524:	bne	19514 <lchmod@@Base+0x2e00>
   19528:	cmp	r6, #0
   1952c:	add	sl, sp, #16
   19530:	movne	sl, r6
   19534:	mov	r6, #4
   19538:	cmp	r0, #45	; 0x2d
   1953c:	beq	19b64 <lchmod@@Base+0x3450>
   19540:	mov	r0, r4
   19544:	mov	r1, sl
   19548:	mov	r2, r5
   1954c:	str	r8, [sp, #12]
   19550:	bl	11aa4 <strtoumax@plt>
   19554:	ldr	r5, [sl]
   19558:	cmp	r5, r4
   1955c:	beq	19584 <lchmod@@Base+0x2e70>
   19560:	mov	r8, r0
   19564:	ldr	r0, [r7]
   19568:	mov	r9, r1
   1956c:	cmp	r0, #0
   19570:	beq	195b8 <lchmod@@Base+0x2ea4>
   19574:	cmp	r0, #34	; 0x22
   19578:	bne	19b64 <lchmod@@Base+0x3450>
   1957c:	mov	r6, #1
   19580:	b	195bc <lchmod@@Base+0x2ea8>
   19584:	ldr	r0, [fp, #8]
   19588:	cmp	r0, #0
   1958c:	beq	19b64 <lchmod@@Base+0x3450>
   19590:	ldrb	r1, [r4]
   19594:	cmp	r1, #0
   19598:	beq	19b64 <lchmod@@Base+0x3450>
   1959c:	bl	11a38 <strchr@plt>
   195a0:	cmp	r0, #0
   195a4:	beq	19b64 <lchmod@@Base+0x3450>
   195a8:	mov	r6, #0
   195ac:	mov	r8, #1
   195b0:	mov	r9, #0
   195b4:	b	195c8 <lchmod@@Base+0x2eb4>
   195b8:	mov	r6, r0
   195bc:	ldr	r0, [fp, #8]
   195c0:	cmp	r0, #0
   195c4:	beq	19b5c <lchmod@@Base+0x3448>
   195c8:	ldrb	r7, [r5]
   195cc:	cmp	r7, #0
   195d0:	beq	19b5c <lchmod@@Base+0x3448>
   195d4:	ldr	r0, [fp, #8]
   195d8:	mov	r1, r7
   195dc:	bl	11a38 <strchr@plt>
   195e0:	cmp	r0, #0
   195e4:	beq	196ec <lchmod@@Base+0x2fd8>
   195e8:	sub	r0, r7, #69	; 0x45
   195ec:	mov	r1, #1
   195f0:	mov	r3, #0
   195f4:	mov	r4, #1024	; 0x400
   195f8:	cmp	r0, #21
   195fc:	str	r1, [sp, #8]
   19600:	bhi	19618 <lchmod@@Base+0x2f04>
   19604:	movw	r2, #35141	; 0x8945
   19608:	mov	r1, #1
   1960c:	movt	r2, #48	; 0x30
   19610:	tst	r2, r1, lsl r0
   19614:	bne	19634 <lchmod@@Base+0x2f20>
   19618:	sub	r0, r7, #103	; 0x67
   1961c:	cmp	r0, #13
   19620:	bhi	19668 <lchmod@@Base+0x2f54>
   19624:	mov	r1, #1
   19628:	movw	r2, #8273	; 0x2051
   1962c:	tst	r2, r1, lsl r0
   19630:	beq	19668 <lchmod@@Base+0x2f54>
   19634:	ldr	r0, [fp, #8]
   19638:	mov	r1, #48	; 0x30
   1963c:	bl	11a38 <strchr@plt>
   19640:	cmp	r0, #0
   19644:	beq	19664 <lchmod@@Base+0x2f50>
   19648:	ldrb	r0, [r5, #1]
   1964c:	cmp	r0, #66	; 0x42
   19650:	cmpne	r0, #68	; 0x44
   19654:	bne	1977c <lchmod@@Base+0x3068>
   19658:	mov	r4, #1000	; 0x3e8
   1965c:	mov	r0, #2
   19660:	str	r0, [sp, #8]
   19664:	mov	r3, #0
   19668:	cmp	r7, #89	; 0x59
   1966c:	stm	sp, {r5, r6}
   19670:	bgt	196f8 <lchmod@@Base+0x2fe4>
   19674:	sub	r0, r7, #66	; 0x42
   19678:	cmp	r0, #14
   1967c:	bhi	197a0 <lchmod@@Base+0x308c>
   19680:	add	r1, pc, #0
   19684:	ldr	pc, [r1, r0, lsl #2]
   19688:	andeq	r9, r1, r4, asr #13
   1968c:	andeq	r9, r1, r0, asr sl
   19690:	andeq	r9, r1, r0, asr sl
   19694:	andeq	r9, r1, r4, ror #20
   19698:	andeq	r9, r1, r0, asr sl
   1969c:	andeq	r9, r1, r4, asr r8
   196a0:	andeq	r9, r1, r0, asr sl
   196a4:	andeq	r9, r1, r0, asr sl
   196a8:	andeq	r9, r1, r0, asr sl
   196ac:	andeq	r9, r1, r0, asr #17
   196b0:	andeq	r9, r1, r0, asr sl
   196b4:	andeq	r9, r1, r4, lsl #18
   196b8:	andeq	r9, r1, r0, asr sl
   196bc:	andeq	r9, r1, r0, asr sl
   196c0:	ldrdeq	r9, [r1], -r0
   196c4:	mov	r1, #0
   196c8:	lsl	r3, r9, #10
   196cc:	lsl	r0, r8, #10
   196d0:	lsr	r2, r9, #22
   196d4:	cmp	r1, r9, lsr #22
   196d8:	orr	r3, r3, r8, lsr #22
   196dc:	mvnne	r0, #0
   196e0:	movwne	r2, #1
   196e4:	cmp	r1, r9, lsr #22
   196e8:	b	1976c <lchmod@@Base+0x3058>
   196ec:	ldr	r0, [sp, #12]
   196f0:	orr	r6, r6, #2
   196f4:	b	19b60 <lchmod@@Base+0x344c>
   196f8:	cmp	r7, #115	; 0x73
   196fc:	bgt	1981c <lchmod@@Base+0x3108>
   19700:	sub	r0, r7, #98	; 0x62
   19704:	cmp	r0, #11
   19708:	bhi	199dc <lchmod@@Base+0x32c8>
   1970c:	add	r1, pc, #4
   19710:	mov	r2, #0
   19714:	ldr	pc, [r1, r0, lsl #2]
   19718:	andeq	r9, r1, r8, asr #14
   1971c:	andeq	r9, r1, r8, lsr fp
   19720:	andeq	r9, r1, r0, asr sl
   19724:	andeq	r9, r1, r0, asr sl
   19728:	andeq	r9, r1, r0, asr sl
   1972c:	andeq	r9, r1, r4, asr r8
   19730:	andeq	r9, r1, r0, asr sl
   19734:	andeq	r9, r1, r0, asr sl
   19738:	andeq	r9, r1, r0, asr sl
   1973c:	andeq	r9, r1, r0, asr #17
   19740:	andeq	r9, r1, r0, asr sl
   19744:	andeq	r9, r1, r4, lsl #18
   19748:	mov	r1, #0
   1974c:	lsl	r3, r9, #9
   19750:	lsl	r0, r8, #9
   19754:	lsr	r2, r9, #23
   19758:	cmp	r1, r9, lsr #23
   1975c:	orr	r3, r3, r8, lsr #23
   19760:	mvnne	r0, #0
   19764:	movwne	r2, #1
   19768:	cmp	r1, r9, lsr #23
   1976c:	mvnne	r3, #0
   19770:	mov	r8, r0
   19774:	mov	r9, r3
   19778:	b	19b38 <lchmod@@Base+0x3424>
   1977c:	cmp	r0, #105	; 0x69
   19780:	mov	r3, #0
   19784:	bne	19668 <lchmod@@Base+0x2f54>
   19788:	ldrb	r0, [r5, #2]
   1978c:	mov	r1, #1
   19790:	cmp	r0, #66	; 0x42
   19794:	movweq	r1, #3
   19798:	str	r1, [sp, #8]
   1979c:	b	19668 <lchmod@@Base+0x2f54>
   197a0:	cmp	r7, #84	; 0x54
   197a4:	beq	19970 <lchmod@@Base+0x325c>
   197a8:	cmp	r7, #89	; 0x59
   197ac:	bne	19a50 <lchmod@@Base+0x333c>
   197b0:	mvn	r0, #0
   197b4:	mvn	r1, #0
   197b8:	mov	r2, r4
   197bc:	mov	r5, r3
   197c0:	bl	1a420 <lchmod@@Base+0x3d0c>
   197c4:	mov	ip, r5
   197c8:	mvn	lr, #0
   197cc:	mov	r2, #0
   197d0:	mvn	r3, #7
   197d4:	mov	r5, r8
   197d8:	mov	r7, r9
   197dc:	umull	r8, r6, r5, r4
   197e0:	mvn	r9, #0
   197e4:	mla	r6, r5, ip, r6
   197e8:	subs	r5, r0, r5
   197ec:	sbcs	r5, r1, r7
   197f0:	mov	r5, #0
   197f4:	movwcc	r5, #1
   197f8:	cmp	r5, #0
   197fc:	mlaeq	r9, r7, r4, r6
   19800:	movne	r8, lr
   19804:	orrne	r2, r2, #1
   19808:	adds	r3, r3, #1
   1980c:	mov	r5, r8
   19810:	mov	r7, r9
   19814:	bcc	197dc <lchmod@@Base+0x30c8>
   19818:	b	19b38 <lchmod@@Base+0x3424>
   1981c:	cmp	r7, #116	; 0x74
   19820:	beq	19970 <lchmod@@Base+0x325c>
   19824:	cmp	r7, #119	; 0x77
   19828:	bne	19a50 <lchmod@@Base+0x333c>
   1982c:	lsl	r1, r9, #1
   19830:	cmp	r9, #0
   19834:	lsl	r0, r8, #1
   19838:	lsr	r2, r9, #31
   1983c:	orr	r1, r1, r8, lsr #31
   19840:	mvnmi	r0, #0
   19844:	mvnmi	r1, #0
   19848:	mov	r8, r0
   1984c:	mov	r9, r1
   19850:	b	19b38 <lchmod@@Base+0x3424>
   19854:	mvn	r0, #0
   19858:	mvn	r1, #0
   1985c:	mov	r2, r4
   19860:	mov	r5, r3
   19864:	bl	1a420 <lchmod@@Base+0x3d0c>
   19868:	mov	ip, r5
   1986c:	mvn	lr, #0
   19870:	mov	r2, #0
   19874:	mvn	r3, #2
   19878:	mov	r6, r8
   1987c:	mov	r5, r9
   19880:	umull	r8, r7, r6, r4
   19884:	mvn	r9, #0
   19888:	mla	r7, r6, ip, r7
   1988c:	subs	r6, r0, r6
   19890:	sbcs	r6, r1, r5
   19894:	mov	r6, #0
   19898:	movwcc	r6, #1
   1989c:	cmp	r6, #0
   198a0:	mlaeq	r9, r5, r4, r7
   198a4:	movne	r8, lr
   198a8:	orrne	r2, r2, #1
   198ac:	adds	r3, r3, #1
   198b0:	mov	r6, r8
   198b4:	mov	r5, r9
   198b8:	bcc	19880 <lchmod@@Base+0x316c>
   198bc:	b	19b38 <lchmod@@Base+0x3424>
   198c0:	mvn	r0, #0
   198c4:	mvn	r1, #0
   198c8:	mov	r2, r4
   198cc:	mov	r5, r3
   198d0:	bl	1a420 <lchmod@@Base+0x3d0c>
   198d4:	subs	r0, r0, r8
   198d8:	mov	r2, #0
   198dc:	sbcs	r0, r1, r9
   198e0:	umull	r0, r1, r8, r4
   198e4:	movwcc	r2, #1
   198e8:	cmp	r2, #0
   198ec:	mla	r1, r8, r5, r1
   198f0:	mvnne	r0, #0
   198f4:	mla	r9, r9, r4, r1
   198f8:	mvnne	r9, #0
   198fc:	mov	r8, r0
   19900:	b	19b38 <lchmod@@Base+0x3424>
   19904:	mvn	r0, #0
   19908:	mvn	r1, #0
   1990c:	mov	r2, r4
   19910:	mov	r5, r3
   19914:	bl	1a420 <lchmod@@Base+0x3d0c>
   19918:	mov	ip, r5
   1991c:	mvn	lr, #0
   19920:	mov	r2, #0
   19924:	mvn	r3, #1
   19928:	mov	r6, r8
   1992c:	mov	r5, r9
   19930:	umull	r8, r7, r6, r4
   19934:	mvn	r9, #0
   19938:	mla	r7, r6, ip, r7
   1993c:	subs	r6, r0, r6
   19940:	sbcs	r6, r1, r5
   19944:	mov	r6, #0
   19948:	movwcc	r6, #1
   1994c:	cmp	r6, #0
   19950:	mlaeq	r9, r5, r4, r7
   19954:	movne	r8, lr
   19958:	orrne	r2, r2, #1
   1995c:	adds	r3, r3, #1
   19960:	mov	r6, r8
   19964:	mov	r5, r9
   19968:	bcc	19930 <lchmod@@Base+0x321c>
   1996c:	b	19b38 <lchmod@@Base+0x3424>
   19970:	mvn	r0, #0
   19974:	mvn	r1, #0
   19978:	mov	r2, r4
   1997c:	mov	r5, r3
   19980:	bl	1a420 <lchmod@@Base+0x3d0c>
   19984:	mov	ip, r5
   19988:	mvn	lr, #0
   1998c:	mov	r2, #0
   19990:	mvn	r3, #3
   19994:	mov	r6, r8
   19998:	mov	r5, r9
   1999c:	umull	r8, r7, r6, r4
   199a0:	mvn	r9, #0
   199a4:	mla	r7, r6, ip, r7
   199a8:	subs	r6, r0, r6
   199ac:	sbcs	r6, r1, r5
   199b0:	mov	r6, #0
   199b4:	movwcc	r6, #1
   199b8:	cmp	r6, #0
   199bc:	mlaeq	r9, r5, r4, r7
   199c0:	movne	r8, lr
   199c4:	orrne	r2, r2, #1
   199c8:	adds	r3, r3, #1
   199cc:	mov	r6, r8
   199d0:	mov	r5, r9
   199d4:	bcc	1999c <lchmod@@Base+0x3288>
   199d8:	b	19b38 <lchmod@@Base+0x3424>
   199dc:	cmp	r7, #90	; 0x5a
   199e0:	bne	19a50 <lchmod@@Base+0x333c>
   199e4:	mvn	r0, #0
   199e8:	mvn	r1, #0
   199ec:	mov	r2, r4
   199f0:	mov	r5, r3
   199f4:	bl	1a420 <lchmod@@Base+0x3d0c>
   199f8:	mov	ip, r5
   199fc:	mvn	lr, #0
   19a00:	mov	r2, #0
   19a04:	mvn	r3, #6
   19a08:	mov	r5, r8
   19a0c:	mov	r7, r9
   19a10:	umull	r8, r6, r5, r4
   19a14:	mvn	r9, #0
   19a18:	mla	r6, r5, ip, r6
   19a1c:	subs	r5, r0, r5
   19a20:	sbcs	r5, r1, r7
   19a24:	mov	r5, #0
   19a28:	movwcc	r5, #1
   19a2c:	cmp	r5, #0
   19a30:	mlaeq	r9, r7, r4, r6
   19a34:	movne	r8, lr
   19a38:	orrne	r2, r2, #1
   19a3c:	adds	r3, r3, #1
   19a40:	mov	r5, r8
   19a44:	mov	r7, r9
   19a48:	bcc	19a10 <lchmod@@Base+0x32fc>
   19a4c:	b	19b38 <lchmod@@Base+0x3424>
   19a50:	ldr	r0, [sp, #12]
   19a54:	strd	r8, [r0]
   19a58:	ldr	r6, [sp, #4]
   19a5c:	orr	r6, r6, #2
   19a60:	b	19b64 <lchmod@@Base+0x3450>
   19a64:	mvn	r0, #0
   19a68:	mvn	r1, #0
   19a6c:	mov	r2, r4
   19a70:	mov	r5, r3
   19a74:	bl	1a420 <lchmod@@Base+0x3d0c>
   19a78:	mov	ip, r5
   19a7c:	mvn	lr, #0
   19a80:	mov	r2, #0
   19a84:	mvn	r3, #5
   19a88:	mov	r5, r8
   19a8c:	mov	r7, r9
   19a90:	umull	r8, r6, r5, r4
   19a94:	mvn	r9, #0
   19a98:	mla	r6, r5, ip, r6
   19a9c:	subs	r5, r0, r5
   19aa0:	sbcs	r5, r1, r7
   19aa4:	mov	r5, #0
   19aa8:	movwcc	r5, #1
   19aac:	cmp	r5, #0
   19ab0:	mlaeq	r9, r7, r4, r6
   19ab4:	movne	r8, lr
   19ab8:	orrne	r2, r2, #1
   19abc:	adds	r3, r3, #1
   19ac0:	mov	r5, r8
   19ac4:	mov	r7, r9
   19ac8:	bcc	19a90 <lchmod@@Base+0x337c>
   19acc:	b	19b38 <lchmod@@Base+0x3424>
   19ad0:	mvn	r0, #0
   19ad4:	mvn	r1, #0
   19ad8:	mov	r2, r4
   19adc:	mov	r5, r3
   19ae0:	bl	1a420 <lchmod@@Base+0x3d0c>
   19ae4:	mov	ip, r5
   19ae8:	mvn	lr, #0
   19aec:	mov	r2, #0
   19af0:	mvn	r3, #4
   19af4:	mov	r5, r8
   19af8:	mov	r7, r9
   19afc:	umull	r8, r6, r5, r4
   19b00:	mvn	r9, #0
   19b04:	mla	r6, r5, ip, r6
   19b08:	subs	r5, r0, r5
   19b0c:	sbcs	r5, r1, r7
   19b10:	mov	r5, #0
   19b14:	movwcc	r5, #1
   19b18:	cmp	r5, #0
   19b1c:	mlaeq	r9, r7, r4, r6
   19b20:	movne	r8, lr
   19b24:	orrne	r2, r2, #1
   19b28:	adds	r3, r3, #1
   19b2c:	mov	r5, r8
   19b30:	mov	r7, r9
   19b34:	bcc	19afc <lchmod@@Base+0x33e8>
   19b38:	ldr	r1, [sp]
   19b3c:	ldr	r3, [sp, #8]
   19b40:	ldr	r6, [sp, #4]
   19b44:	add	r0, r1, r3
   19b48:	orr	r6, r2, r6
   19b4c:	str	r0, [sl]
   19b50:	ldrb	r0, [r1, r3]
   19b54:	cmp	r0, #0
   19b58:	orrne	r6, r6, #2
   19b5c:	ldr	r0, [sp, #12]
   19b60:	strd	r8, [r0]
   19b64:	mov	r0, r6
   19b68:	sub	sp, fp, #28
   19b6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19b70:	movw	r0, #46260	; 0xb4b4
   19b74:	movw	r1, #46298	; 0xb4da
   19b78:	movw	r3, #46314	; 0xb4ea
   19b7c:	mov	r2, #85	; 0x55
   19b80:	movt	r0, #1
   19b84:	movt	r1, #1
   19b88:	movt	r3, #1
   19b8c:	bl	11c30 <__assert_fail@plt>
   19b90:	clz	r2, r1
   19b94:	clz	r3, r0
   19b98:	lsr	r2, r2, #5
   19b9c:	lsr	r3, r3, #5
   19ba0:	orrs	r2, r3, r2
   19ba4:	movwne	r1, #1
   19ba8:	movwne	r0, #1
   19bac:	cmp	r1, #0
   19bb0:	beq	19be0 <lchmod@@Base+0x34cc>
   19bb4:	mvn	r2, #-2147483648	; 0x80000000
   19bb8:	udiv	r2, r2, r1
   19bbc:	cmp	r2, r0
   19bc0:	bcs	19be0 <lchmod@@Base+0x34cc>
   19bc4:	push	{fp, lr}
   19bc8:	mov	fp, sp
   19bcc:	bl	11a5c <__errno_location@plt>
   19bd0:	mov	r1, #12
   19bd4:	str	r1, [r0]
   19bd8:	mov	r0, #0
   19bdc:	pop	{fp, pc}
   19be0:	b	117f8 <calloc@plt>
   19be4:	cmp	r0, #0
   19be8:	movweq	r0, #1
   19bec:	cmn	r0, #1
   19bf0:	ble	19bf8 <lchmod@@Base+0x34e4>
   19bf4:	b	1199c <malloc@plt>
   19bf8:	push	{fp, lr}
   19bfc:	mov	fp, sp
   19c00:	bl	11a5c <__errno_location@plt>
   19c04:	mov	r1, #12
   19c08:	str	r1, [r0]
   19c0c:	mov	r0, #0
   19c10:	pop	{fp, pc}
   19c14:	push	{fp, lr}
   19c18:	mov	fp, sp
   19c1c:	cmp	r0, #0
   19c20:	beq	19c3c <lchmod@@Base+0x3528>
   19c24:	cmp	r1, #0
   19c28:	beq	19c48 <lchmod@@Base+0x3534>
   19c2c:	cmn	r1, #1
   19c30:	ble	19c50 <lchmod@@Base+0x353c>
   19c34:	pop	{fp, lr}
   19c38:	b	118d0 <realloc@plt>
   19c3c:	mov	r0, r1
   19c40:	pop	{fp, lr}
   19c44:	b	19be4 <lchmod@@Base+0x34d0>
   19c48:	bl	135bc <__assert_fail@plt+0x198c>
   19c4c:	b	19c5c <lchmod@@Base+0x3548>
   19c50:	bl	11a5c <__errno_location@plt>
   19c54:	mov	r1, #12
   19c58:	str	r1, [r0]
   19c5c:	mov	r0, #0
   19c60:	pop	{fp, pc}
   19c64:	sub	r0, r0, #1
   19c68:	ldrb	r3, [r0, #1]!
   19c6c:	cmp	r3, #47	; 0x2f
   19c70:	beq	19c68 <lchmod@@Base+0x3554>
   19c74:	mov	r2, #0
   19c78:	mov	r1, r0
   19c7c:	uxtb	r3, r3
   19c80:	cmp	r3, #47	; 0x2f
   19c84:	beq	19ca0 <lchmod@@Base+0x358c>
   19c88:	cmp	r3, #0
   19c8c:	bxeq	lr
   19c90:	tst	r2, #1
   19c94:	mov	r2, #0
   19c98:	movne	r0, r1
   19c9c:	b	19ca4 <lchmod@@Base+0x3590>
   19ca0:	mov	r2, #1
   19ca4:	ldrb	r3, [r1, #1]!
   19ca8:	b	19c7c <lchmod@@Base+0x3568>
   19cac:	push	{r4, sl, fp, lr}
   19cb0:	add	fp, sp, #8
   19cb4:	mov	r4, r0
   19cb8:	bl	11a20 <strlen@plt>
   19cbc:	mov	r1, r0
   19cc0:	sub	r2, r4, #1
   19cc4:	mov	r0, r1
   19cc8:	cmp	r1, #2
   19ccc:	bcc	19ce0 <lchmod@@Base+0x35cc>
   19cd0:	ldrb	r3, [r2, r0]
   19cd4:	sub	r1, r0, #1
   19cd8:	cmp	r3, #47	; 0x2f
   19cdc:	beq	19cc4 <lchmod@@Base+0x35b0>
   19ce0:	pop	{r4, sl, fp, pc}
   19ce4:	push	{r4, r5, r6, sl, fp, lr}
   19ce8:	add	fp, sp, #16
   19cec:	mov	r4, r0
   19cf0:	bl	11954 <__fpending@plt>
   19cf4:	mov	r5, r0
   19cf8:	mov	r0, r4
   19cfc:	bl	11960 <ferror_unlocked@plt>
   19d00:	mov	r6, r0
   19d04:	mov	r0, r4
   19d08:	bl	19e50 <lchmod@@Base+0x373c>
   19d0c:	cmp	r6, #0
   19d10:	beq	19d30 <lchmod@@Base+0x361c>
   19d14:	mvn	r4, #0
   19d18:	cmp	r0, #0
   19d1c:	bne	19d5c <lchmod@@Base+0x3648>
   19d20:	bl	11a5c <__errno_location@plt>
   19d24:	mov	r1, #0
   19d28:	str	r1, [r0]
   19d2c:	b	19d5c <lchmod@@Base+0x3648>
   19d30:	cmp	r0, #0
   19d34:	mov	r4, r0
   19d38:	mvnne	r4, #0
   19d3c:	cmp	r5, #0
   19d40:	bne	19d5c <lchmod@@Base+0x3648>
   19d44:	cmp	r0, #0
   19d48:	beq	19d5c <lchmod@@Base+0x3648>
   19d4c:	bl	11a5c <__errno_location@plt>
   19d50:	ldr	r0, [r0]
   19d54:	subs	r4, r0, #9
   19d58:	mvnne	r4, #0
   19d5c:	mov	r0, r4
   19d60:	pop	{r4, r5, r6, sl, fp, pc}
   19d64:	movw	r2, #62998	; 0xf616
   19d68:	mov	r1, #0
   19d6c:	movt	r2, #149	; 0x95
   19d70:	str	r1, [r0, #16]
   19d74:	str	r1, [r0, #20]
   19d78:	str	r2, [r0, #24]
   19d7c:	bx	lr
   19d80:	push	{r4, r5, r6, r7, r9, sl, fp, lr}
   19d84:	add	fp, sp, #24
   19d88:	ldr	r2, [r0, #24]
   19d8c:	movw	r3, #62998	; 0xf616
   19d90:	movt	r3, #149	; 0x95
   19d94:	cmp	r2, r3
   19d98:	bne	19e30 <lchmod@@Base+0x371c>
   19d9c:	add	r3, r0, #16
   19da0:	add	ip, r0, #8
   19da4:	ldrd	r4, [r3]
   19da8:	orrs	r2, r4, r5
   19dac:	beq	19de8 <lchmod@@Base+0x36d4>
   19db0:	ldr	r6, [r1, #96]	; 0x60
   19db4:	ldr	r9, [r1, #100]	; 0x64
   19db8:	ldm	r0, {r2, r7}
   19dbc:	eor	r7, r9, r7
   19dc0:	eor	r2, r6, r2
   19dc4:	orrs	r2, r2, r7
   19dc8:	bne	19de8 <lchmod@@Base+0x36d4>
   19dcc:	ldm	ip, {r2, r7}
   19dd0:	ldm	r1, {r6, r9}
   19dd4:	eor	r7, r9, r7
   19dd8:	eor	r2, r6, r2
   19ddc:	orrs	r2, r2, r7
   19de0:	mov	r2, #1
   19de4:	beq	19e28 <lchmod@@Base+0x3714>
   19de8:	adds	r6, r4, #1
   19dec:	adc	r7, r5, #0
   19df0:	and	r2, r6, r4
   19df4:	strd	r6, [r3]
   19df8:	and	r3, r7, r5
   19dfc:	orrs	r2, r2, r3
   19e00:	mov	r2, #0
   19e04:	bne	19e28 <lchmod@@Base+0x3714>
   19e08:	orrs	r3, r6, r7
   19e0c:	beq	19e24 <lchmod@@Base+0x3710>
   19e10:	ldrd	r4, [r1]
   19e14:	strd	r4, [ip]
   19e18:	ldrd	r4, [r1, #96]	; 0x60
   19e1c:	strd	r4, [r0]
   19e20:	b	19e28 <lchmod@@Base+0x3714>
   19e24:	mov	r2, #1
   19e28:	mov	r0, r2
   19e2c:	pop	{r4, r5, r6, r7, r9, sl, fp, pc}
   19e30:	movw	r0, #46393	; 0xb539
   19e34:	movw	r1, #46417	; 0xb551
   19e38:	movw	r3, #46435	; 0xb563
   19e3c:	mov	r2, #60	; 0x3c
   19e40:	movt	r0, #1
   19e44:	movt	r1, #1
   19e48:	movt	r3, #1
   19e4c:	bl	11c30 <__assert_fail@plt>
   19e50:	push	{r4, r5, r6, sl, fp, lr}
   19e54:	add	fp, sp, #16
   19e58:	sub	sp, sp, #8
   19e5c:	mov	r4, r0
   19e60:	bl	11a98 <fileno@plt>
   19e64:	cmn	r0, #1
   19e68:	ble	19edc <lchmod@@Base+0x37c8>
   19e6c:	mov	r0, r4
   19e70:	bl	119b4 <__freading@plt>
   19e74:	cmp	r0, #0
   19e78:	beq	19ea4 <lchmod@@Base+0x3790>
   19e7c:	mov	r0, r4
   19e80:	bl	11a98 <fileno@plt>
   19e84:	mov	r1, #1
   19e88:	mov	r2, #0
   19e8c:	mov	r3, #0
   19e90:	str	r1, [sp]
   19e94:	bl	11930 <lseek64@plt>
   19e98:	and	r0, r0, r1
   19e9c:	cmn	r0, #1
   19ea0:	beq	19edc <lchmod@@Base+0x37c8>
   19ea4:	mov	r0, r4
   19ea8:	bl	1a100 <lchmod@@Base+0x39ec>
   19eac:	cmp	r0, #0
   19eb0:	beq	19edc <lchmod@@Base+0x37c8>
   19eb4:	bl	11a5c <__errno_location@plt>
   19eb8:	ldr	r6, [r0]
   19ebc:	mov	r5, r0
   19ec0:	mov	r0, r4
   19ec4:	bl	11abc <fclose@plt>
   19ec8:	cmp	r6, #0
   19ecc:	strne	r6, [r5]
   19ed0:	mvnne	r0, #0
   19ed4:	sub	sp, fp, #16
   19ed8:	pop	{r4, r5, r6, sl, fp, pc}
   19edc:	mov	r0, r4
   19ee0:	sub	sp, fp, #16
   19ee4:	pop	{r4, r5, r6, sl, fp, lr}
   19ee8:	b	11abc <fclose@plt>
   19eec:	sub	sp, sp, #8
   19ef0:	push	{r4, r5, r6, r7, fp, lr}
   19ef4:	add	fp, sp, #16
   19ef8:	sub	sp, sp, #8
   19efc:	mov	r5, r0
   19f00:	add	r0, fp, #8
   19f04:	cmp	r1, #11
   19f08:	str	r2, [fp, #8]
   19f0c:	str	r3, [fp, #12]
   19f10:	str	r0, [sp, #4]
   19f14:	bhi	19f50 <lchmod@@Base+0x383c>
   19f18:	mov	r0, #1
   19f1c:	movw	r2, #1300	; 0x514
   19f20:	tst	r2, r0, lsl r1
   19f24:	bne	1a008 <lchmod@@Base+0x38f4>
   19f28:	movw	r2, #2570	; 0xa0a
   19f2c:	tst	r2, r0, lsl r1
   19f30:	bne	19f78 <lchmod@@Base+0x3864>
   19f34:	cmp	r1, #0
   19f38:	bne	19f50 <lchmod@@Base+0x383c>
   19f3c:	ldr	r0, [sp, #4]
   19f40:	add	r1, r0, #4
   19f44:	str	r1, [sp, #4]
   19f48:	mov	r1, #0
   19f4c:	b	1a014 <lchmod@@Base+0x3900>
   19f50:	sub	r0, r1, #1024	; 0x400
   19f54:	cmp	r0, #10
   19f58:	bhi	1a008 <lchmod@@Base+0x38f4>
   19f5c:	mov	r2, #1
   19f60:	movw	r3, #645	; 0x285
   19f64:	tst	r3, r2, lsl r0
   19f68:	bne	1a008 <lchmod@@Base+0x38f4>
   19f6c:	movw	r3, #1282	; 0x502
   19f70:	tst	r3, r2, lsl r0
   19f74:	beq	19f84 <lchmod@@Base+0x3870>
   19f78:	mov	r0, r5
   19f7c:	bl	11ad4 <fcntl64@plt>
   19f80:	b	1a020 <lchmod@@Base+0x390c>
   19f84:	cmp	r0, #6
   19f88:	bne	1a008 <lchmod@@Base+0x38f4>
   19f8c:	ldr	r0, [sp, #4]
   19f90:	movw	r7, #49976	; 0xc338
   19f94:	movt	r7, #2
   19f98:	add	r1, r0, #4
   19f9c:	str	r1, [sp, #4]
   19fa0:	ldr	r6, [r0]
   19fa4:	ldr	r0, [r7]
   19fa8:	cmp	r0, #0
   19fac:	bmi	1a044 <lchmod@@Base+0x3930>
   19fb0:	mov	r0, r5
   19fb4:	movw	r1, #1030	; 0x406
   19fb8:	mov	r2, r6
   19fbc:	bl	11ad4 <fcntl64@plt>
   19fc0:	mov	r4, r0
   19fc4:	cmn	r0, #1
   19fc8:	bgt	1a038 <lchmod@@Base+0x3924>
   19fcc:	bl	11a5c <__errno_location@plt>
   19fd0:	ldr	r0, [r0]
   19fd4:	cmp	r0, #22
   19fd8:	bne	1a038 <lchmod@@Base+0x3924>
   19fdc:	mov	r0, r5
   19fe0:	mov	r1, #0
   19fe4:	mov	r2, r6
   19fe8:	bl	11ad4 <fcntl64@plt>
   19fec:	mov	r4, r0
   19ff0:	cmp	r0, #0
   19ff4:	bmi	1a024 <lchmod@@Base+0x3910>
   19ff8:	mvn	r0, #0
   19ffc:	str	r0, [r7]
   1a000:	mov	r0, #1
   1a004:	b	1a068 <lchmod@@Base+0x3954>
   1a008:	ldr	r0, [sp, #4]
   1a00c:	add	r2, r0, #4
   1a010:	str	r2, [sp, #4]
   1a014:	ldr	r2, [r0]
   1a018:	mov	r0, r5
   1a01c:	bl	11ad4 <fcntl64@plt>
   1a020:	mov	r4, r0
   1a024:	mov	r0, r4
   1a028:	sub	sp, fp, #16
   1a02c:	pop	{r4, r5, r6, r7, fp, lr}
   1a030:	add	sp, sp, #8
   1a034:	bx	lr
   1a038:	mov	r0, #1
   1a03c:	str	r0, [r7]
   1a040:	b	1a024 <lchmod@@Base+0x3910>
   1a044:	mov	r0, r5
   1a048:	mov	r1, #0
   1a04c:	mov	r2, r6
   1a050:	bl	11ad4 <fcntl64@plt>
   1a054:	mov	r4, r0
   1a058:	ldr	r0, [r7]
   1a05c:	add	r0, r0, #1
   1a060:	clz	r0, r0
   1a064:	lsr	r0, r0, #5
   1a068:	cmp	r0, #0
   1a06c:	beq	1a024 <lchmod@@Base+0x3910>
   1a070:	cmp	r4, #0
   1a074:	bmi	1a024 <lchmod@@Base+0x3910>
   1a078:	mov	r0, r4
   1a07c:	mov	r1, #1
   1a080:	bl	11ad4 <fcntl64@plt>
   1a084:	cmp	r0, #0
   1a088:	bmi	1a0a4 <lchmod@@Base+0x3990>
   1a08c:	orr	r2, r0, #1
   1a090:	mov	r0, r4
   1a094:	mov	r1, #2
   1a098:	bl	11ad4 <fcntl64@plt>
   1a09c:	cmn	r0, #1
   1a0a0:	bne	1a024 <lchmod@@Base+0x3910>
   1a0a4:	bl	11a5c <__errno_location@plt>
   1a0a8:	ldr	r6, [r0]
   1a0ac:	mov	r5, r0
   1a0b0:	mov	r0, r4
   1a0b4:	bl	11bdc <close@plt>
   1a0b8:	str	r6, [r5]
   1a0bc:	mvn	r4, #0
   1a0c0:	b	1a024 <lchmod@@Base+0x3910>
   1a0c4:	sub	sp, sp, #8
   1a0c8:	push	{fp, lr}
   1a0cc:	mov	fp, sp
   1a0d0:	sub	sp, sp, #8
   1a0d4:	str	r2, [fp, #8]
   1a0d8:	str	r3, [fp, #12]
   1a0dc:	tst	r1, #64	; 0x40
   1a0e0:	mov	r2, #0
   1a0e4:	ldrne	r2, [fp, #8]
   1a0e8:	bl	11984 <open64@plt>
   1a0ec:	bl	18ae0 <lchmod@@Base+0x23cc>
   1a0f0:	mov	sp, fp
   1a0f4:	pop	{fp, lr}
   1a0f8:	add	sp, sp, #8
   1a0fc:	bx	lr
   1a100:	push	{r4, sl, fp, lr}
   1a104:	add	fp, sp, #8
   1a108:	sub	sp, sp, #8
   1a10c:	mov	r4, r0
   1a110:	cmp	r0, #0
   1a114:	beq	1a14c <lchmod@@Base+0x3a38>
   1a118:	mov	r0, r4
   1a11c:	bl	119b4 <__freading@plt>
   1a120:	cmp	r0, #0
   1a124:	beq	1a14c <lchmod@@Base+0x3a38>
   1a128:	ldrb	r0, [r4, #1]
   1a12c:	tst	r0, #1
   1a130:	beq	1a14c <lchmod@@Base+0x3a38>
   1a134:	mov	r0, #1
   1a138:	mov	r2, #0
   1a13c:	mov	r3, #0
   1a140:	str	r0, [sp]
   1a144:	mov	r0, r4
   1a148:	bl	1a15c <lchmod@@Base+0x3a48>
   1a14c:	mov	r0, r4
   1a150:	sub	sp, fp, #8
   1a154:	pop	{r4, sl, fp, lr}
   1a158:	b	1184c <fflush@plt>
   1a15c:	push	{r4, r5, r6, r7, fp, lr}
   1a160:	add	fp, sp, #16
   1a164:	sub	sp, sp, #8
   1a168:	mov	r4, r0
   1a16c:	ldr	r0, [r0, #4]
   1a170:	mov	r5, r3
   1a174:	mov	r6, r2
   1a178:	ldr	r1, [r4, #8]
   1a17c:	cmp	r1, r0
   1a180:	bne	1a19c <lchmod@@Base+0x3a88>
   1a184:	ldrd	r0, [r4, #16]
   1a188:	cmp	r1, r0
   1a18c:	bne	1a19c <lchmod@@Base+0x3a88>
   1a190:	ldr	r0, [r4, #36]	; 0x24
   1a194:	cmp	r0, #0
   1a198:	beq	1a1b4 <lchmod@@Base+0x3aa0>
   1a19c:	mov	r0, r4
   1a1a0:	mov	r2, r6
   1a1a4:	mov	r3, r5
   1a1a8:	sub	sp, fp, #16
   1a1ac:	pop	{r4, r5, r6, r7, fp, lr}
   1a1b0:	b	11ac8 <fseeko64@plt>
   1a1b4:	ldr	r7, [fp, #8]
   1a1b8:	mov	r0, r4
   1a1bc:	bl	11a98 <fileno@plt>
   1a1c0:	mov	r2, r6
   1a1c4:	mov	r3, r5
   1a1c8:	str	r7, [sp]
   1a1cc:	bl	11930 <lseek64@plt>
   1a1d0:	and	r2, r0, r1
   1a1d4:	cmn	r2, #1
   1a1d8:	beq	1a1f4 <lchmod@@Base+0x3ae0>
   1a1dc:	strd	r0, [r4, #80]	; 0x50
   1a1e0:	ldr	r0, [r4]
   1a1e4:	bic	r0, r0, #16
   1a1e8:	str	r0, [r4]
   1a1ec:	mov	r0, #0
   1a1f0:	b	1a1f8 <lchmod@@Base+0x3ae4>
   1a1f4:	mvn	r0, #0
   1a1f8:	sub	sp, fp, #16
   1a1fc:	pop	{r4, r5, r6, r7, fp, pc}
   1a200:	ldrb	r2, [r0]
   1a204:	cmp	r2, #0
   1a208:	beq	1a22c <lchmod@@Base+0x3b18>
   1a20c:	add	r3, r0, #1
   1a210:	mov	r0, #0
   1a214:	ror	r0, r0, #23
   1a218:	uxtab	r0, r0, r2
   1a21c:	ldrb	r2, [r3], #1
   1a220:	cmp	r2, #0
   1a224:	bne	1a214 <lchmod@@Base+0x3b00>
   1a228:	b	1a230 <lchmod@@Base+0x3b1c>
   1a22c:	mov	r0, #0
   1a230:	udiv	r2, r0, r1
   1a234:	mls	r0, r2, r1, r0
   1a238:	bx	lr
   1a23c:	push	{fp, lr}
   1a240:	mov	fp, sp
   1a244:	mov	r0, #14
   1a248:	bl	11b04 <nl_langinfo@plt>
   1a24c:	movw	r1, #44699	; 0xae9b
   1a250:	cmp	r0, #0
   1a254:	movt	r1, #1
   1a258:	movne	r1, r0
   1a25c:	movw	r0, #46502	; 0xb5a6
   1a260:	ldrb	r2, [r1]
   1a264:	movt	r0, #1
   1a268:	cmp	r2, #0
   1a26c:	movne	r0, r1
   1a270:	pop	{fp, pc}
   1a274:	push	{r4, r5, r6, r7, fp, lr}
   1a278:	add	fp, sp, #16
   1a27c:	sub	sp, sp, #8
   1a280:	cmp	r0, #0
   1a284:	add	r5, sp, #4
   1a288:	mov	r7, r2
   1a28c:	mov	r4, r1
   1a290:	movne	r5, r0
   1a294:	mov	r0, r5
   1a298:	bl	1196c <mbrtowc@plt>
   1a29c:	mov	r6, r0
   1a2a0:	cmp	r7, #0
   1a2a4:	beq	1a2cc <lchmod@@Base+0x3bb8>
   1a2a8:	cmn	r6, #2
   1a2ac:	bcc	1a2cc <lchmod@@Base+0x3bb8>
   1a2b0:	mov	r0, #0
   1a2b4:	bl	1a320 <lchmod@@Base+0x3c0c>
   1a2b8:	cmp	r0, #0
   1a2bc:	bne	1a2cc <lchmod@@Base+0x3bb8>
   1a2c0:	ldrb	r0, [r4]
   1a2c4:	mov	r6, #1
   1a2c8:	str	r0, [r5]
   1a2cc:	mov	r0, r6
   1a2d0:	sub	sp, fp, #16
   1a2d4:	pop	{r4, r5, r6, r7, fp, pc}
   1a2d8:	cmp	r2, #0
   1a2dc:	beq	1a30c <lchmod@@Base+0x3bf8>
   1a2e0:	mvn	r3, #0
   1a2e4:	udiv	r3, r3, r2
   1a2e8:	cmp	r3, r1
   1a2ec:	bcs	1a30c <lchmod@@Base+0x3bf8>
   1a2f0:	push	{fp, lr}
   1a2f4:	mov	fp, sp
   1a2f8:	bl	11a5c <__errno_location@plt>
   1a2fc:	mov	r1, #12
   1a300:	str	r1, [r0]
   1a304:	mov	r0, #0
   1a308:	pop	{fp, pc}
   1a30c:	mul	r1, r2, r1
   1a310:	b	19c14 <lchmod@@Base+0x3500>
   1a314:	mov	r1, #0
   1a318:	mov	r2, #3
   1a31c:	b	19eec <lchmod@@Base+0x37d8>
   1a320:	push	{r4, sl, fp, lr}
   1a324:	add	fp, sp, #8
   1a328:	sub	sp, sp, #264	; 0x108
   1a32c:	add	r1, sp, #7
   1a330:	movw	r2, #257	; 0x101
   1a334:	bl	1a38c <lchmod@@Base+0x3c78>
   1a338:	mov	r4, #0
   1a33c:	cmp	r0, #0
   1a340:	bne	1a380 <lchmod@@Base+0x3c6c>
   1a344:	movw	r1, #46508	; 0xb5ac
   1a348:	add	r0, sp, #7
   1a34c:	mov	r2, #2
   1a350:	movt	r1, #1
   1a354:	bl	11a14 <bcmp@plt>
   1a358:	cmp	r0, #0
   1a35c:	beq	1a380 <lchmod@@Base+0x3c6c>
   1a360:	movw	r1, #46510	; 0xb5ae
   1a364:	add	r0, sp, #7
   1a368:	mov	r2, #6
   1a36c:	movt	r1, #1
   1a370:	bl	11a14 <bcmp@plt>
   1a374:	cmp	r0, #0
   1a378:	mov	r4, r0
   1a37c:	movwne	r4, #1
   1a380:	mov	r0, r4
   1a384:	sub	sp, fp, #8
   1a388:	pop	{r4, sl, fp, pc}
   1a38c:	push	{r4, r5, r6, r7, fp, lr}
   1a390:	add	fp, sp, #16
   1a394:	mov	r4, r1
   1a398:	mov	r1, #0
   1a39c:	mov	r6, r2
   1a3a0:	bl	11ae0 <setlocale@plt>
   1a3a4:	cmp	r0, #0
   1a3a8:	beq	1a3d4 <lchmod@@Base+0x3cc0>
   1a3ac:	mov	r7, r0
   1a3b0:	bl	11a20 <strlen@plt>
   1a3b4:	cmp	r0, r6
   1a3b8:	bcs	1a3e8 <lchmod@@Base+0x3cd4>
   1a3bc:	add	r2, r0, #1
   1a3c0:	mov	r0, r4
   1a3c4:	mov	r1, r7
   1a3c8:	bl	11894 <memcpy@plt>
   1a3cc:	mov	r5, #0
   1a3d0:	b	1a410 <lchmod@@Base+0x3cfc>
   1a3d4:	cmp	r6, #0
   1a3d8:	mov	r5, #22
   1a3dc:	movne	r0, #0
   1a3e0:	strbne	r0, [r4]
   1a3e4:	b	1a410 <lchmod@@Base+0x3cfc>
   1a3e8:	mov	r5, #34	; 0x22
   1a3ec:	cmp	r6, #0
   1a3f0:	beq	1a410 <lchmod@@Base+0x3cfc>
   1a3f4:	sub	r6, r6, #1
   1a3f8:	mov	r0, r4
   1a3fc:	mov	r1, r7
   1a400:	mov	r2, r6
   1a404:	bl	11894 <memcpy@plt>
   1a408:	mov	r0, #0
   1a40c:	strb	r0, [r4, r6]
   1a410:	mov	r0, r5
   1a414:	pop	{r4, r5, r6, r7, fp, pc}
   1a418:	mov	r1, #0
   1a41c:	b	11ae0 <setlocale@plt>
   1a420:	cmp	r3, #0
   1a424:	cmpeq	r2, #0
   1a428:	bne	1a440 <lchmod@@Base+0x3d2c>
   1a42c:	cmp	r1, #0
   1a430:	cmpeq	r0, #0
   1a434:	mvnne	r1, #0
   1a438:	mvnne	r0, #0
   1a43c:	b	1a45c <lchmod@@Base+0x3d48>
   1a440:	sub	sp, sp, #8
   1a444:	push	{sp, lr}
   1a448:	bl	1a46c <lchmod@@Base+0x3d58>
   1a44c:	ldr	lr, [sp, #4]
   1a450:	add	sp, sp, #8
   1a454:	pop	{r2, r3}
   1a458:	bx	lr
   1a45c:	push	{r1, lr}
   1a460:	mov	r0, #8
   1a464:	bl	11810 <raise@plt>
   1a468:	pop	{r1, pc}
   1a46c:	cmp	r1, r3
   1a470:	cmpeq	r0, r2
   1a474:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a478:	mov	r4, r0
   1a47c:	movcc	r0, #0
   1a480:	mov	r5, r1
   1a484:	ldr	lr, [sp, #36]	; 0x24
   1a488:	movcc	r1, r0
   1a48c:	bcc	1a588 <lchmod@@Base+0x3e74>
   1a490:	cmp	r3, #0
   1a494:	clzeq	ip, r2
   1a498:	clzne	ip, r3
   1a49c:	addeq	ip, ip, #32
   1a4a0:	cmp	r5, #0
   1a4a4:	clzeq	r1, r4
   1a4a8:	addeq	r1, r1, #32
   1a4ac:	clzne	r1, r5
   1a4b0:	sub	ip, ip, r1
   1a4b4:	sub	sl, ip, #32
   1a4b8:	lsl	r9, r3, ip
   1a4bc:	rsb	fp, ip, #32
   1a4c0:	orr	r9, r9, r2, lsl sl
   1a4c4:	orr	r9, r9, r2, lsr fp
   1a4c8:	lsl	r8, r2, ip
   1a4cc:	cmp	r5, r9
   1a4d0:	cmpeq	r4, r8
   1a4d4:	movcc	r0, #0
   1a4d8:	movcc	r1, r0
   1a4dc:	bcc	1a4f8 <lchmod@@Base+0x3de4>
   1a4e0:	mov	r0, #1
   1a4e4:	subs	r4, r4, r8
   1a4e8:	lsl	r1, r0, sl
   1a4ec:	orr	r1, r1, r0, lsr fp
   1a4f0:	lsl	r0, r0, ip
   1a4f4:	sbc	r5, r5, r9
   1a4f8:	cmp	ip, #0
   1a4fc:	beq	1a588 <lchmod@@Base+0x3e74>
   1a500:	lsr	r6, r8, #1
   1a504:	orr	r6, r6, r9, lsl #31
   1a508:	lsr	r7, r9, #1
   1a50c:	mov	r2, ip
   1a510:	b	1a534 <lchmod@@Base+0x3e20>
   1a514:	subs	r3, r4, r6
   1a518:	sbc	r8, r5, r7
   1a51c:	adds	r3, r3, r3
   1a520:	adc	r8, r8, r8
   1a524:	adds	r4, r3, #1
   1a528:	adc	r5, r8, #0
   1a52c:	subs	r2, r2, #1
   1a530:	beq	1a550 <lchmod@@Base+0x3e3c>
   1a534:	cmp	r5, r7
   1a538:	cmpeq	r4, r6
   1a53c:	bcs	1a514 <lchmod@@Base+0x3e00>
   1a540:	adds	r4, r4, r4
   1a544:	adc	r5, r5, r5
   1a548:	subs	r2, r2, #1
   1a54c:	bne	1a534 <lchmod@@Base+0x3e20>
   1a550:	lsr	r3, r4, ip
   1a554:	orr	r3, r3, r5, lsl fp
   1a558:	lsr	r2, r5, ip
   1a55c:	orr	r3, r3, r5, lsr sl
   1a560:	adds	r0, r0, r4
   1a564:	mov	r4, r3
   1a568:	lsl	r3, r2, ip
   1a56c:	orr	r3, r3, r4, lsl sl
   1a570:	lsl	ip, r4, ip
   1a574:	orr	r3, r3, r4, lsr fp
   1a578:	adc	r1, r1, r5
   1a57c:	subs	r0, r0, ip
   1a580:	mov	r5, r2
   1a584:	sbc	r1, r1, r3
   1a588:	cmp	lr, #0
   1a58c:	strdne	r4, [lr]
   1a590:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a594:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a598:	mov	r7, r0
   1a59c:	ldr	r6, [pc, #72]	; 1a5ec <lchmod@@Base+0x3ed8>
   1a5a0:	ldr	r5, [pc, #72]	; 1a5f0 <lchmod@@Base+0x3edc>
   1a5a4:	add	r6, pc, r6
   1a5a8:	add	r5, pc, r5
   1a5ac:	sub	r6, r6, r5
   1a5b0:	mov	r8, r1
   1a5b4:	mov	r9, r2
   1a5b8:	bl	117c0 <fstatfs64@plt-0x20>
   1a5bc:	asrs	r6, r6, #2
   1a5c0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a5c4:	mov	r4, #0
   1a5c8:	add	r4, r4, #1
   1a5cc:	ldr	r3, [r5], #4
   1a5d0:	mov	r2, r9
   1a5d4:	mov	r1, r8
   1a5d8:	mov	r0, r7
   1a5dc:	blx	r3
   1a5e0:	cmp	r6, r4
   1a5e4:	bne	1a5c8 <lchmod@@Base+0x3eb4>
   1a5e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a5ec:	andeq	r1, r1, r8, asr r9
   1a5f0:	andeq	r1, r1, r0, asr r9
   1a5f4:	bx	lr
   1a5f8:	ldr	r3, [pc, #12]	; 1a60c <lchmod@@Base+0x3ef8>
   1a5fc:	mov	r1, #0
   1a600:	add	r3, pc, r3
   1a604:	ldr	r2, [r3]
   1a608:	b	11a74 <__cxa_atexit@plt>
   1a60c:	andeq	r1, r1, r4, lsl #23
   1a610:	mov	r2, r1
   1a614:	mov	r1, r0
   1a618:	mov	r0, #3
   1a61c:	b	11ba0 <__xstat64@plt>
   1a620:	mov	r2, r1
   1a624:	mov	r1, r0
   1a628:	mov	r0, #3
   1a62c:	b	11918 <__fxstat64@plt>
   1a630:	mov	r2, r1
   1a634:	mov	r1, r0
   1a638:	mov	r0, #3
   1a63c:	b	11be8 <__lxstat64@plt>
   1a640:	push	{lr}		; (str lr, [sp, #-4]!)
   1a644:	sub	sp, sp, #12
   1a648:	str	r3, [sp]
   1a64c:	mov	r3, r2
   1a650:	mov	r2, r1
   1a654:	mov	r1, r0
   1a658:	mov	r0, #3
   1a65c:	bl	11900 <__fxstatat64@plt>
   1a660:	add	sp, sp, #12
   1a664:	pop	{pc}		; (ldr pc, [sp], #4)
   1a668:	push	{lr}		; (str lr, [sp, #-4]!)
   1a66c:	sub	sp, sp, #12
   1a670:	strd	r2, [sp]
   1a674:	mov	r2, r1
   1a678:	mov	r3, sp
   1a67c:	mov	r1, r0
   1a680:	mov	r0, #1
   1a684:	bl	11bac <__xmknod@plt>
   1a688:	add	sp, sp, #12
   1a68c:	pop	{pc}		; (ldr pc, [sp], #4)

Disassembly of section .fini:

0001a690 <.fini>:
   1a690:	push	{r3, lr}
   1a694:	pop	{r3, pc}
