
../repos/coreutils/src/basename:     file format elf32-littlearm


Disassembly of section .init:

00010c4c <.init>:
   10c4c:	push	{r3, lr}
   10c50:	bl	10eac <putchar_unlocked@plt+0x48>
   10c54:	pop	{r3, pc}

Disassembly of section .plt:

00010c58 <calloc@plt-0x14>:
   10c58:	push	{lr}		; (str lr, [sp, #-4]!)
   10c5c:	ldr	lr, [pc, #4]	; 10c68 <calloc@plt-0x4>
   10c60:	add	lr, pc, lr
   10c64:	ldr	pc, [lr, #8]!
   10c68:	muleq	r1, r8, r3

00010c6c <calloc@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #86016	; 0x15000
   10c74:	ldr	pc, [ip, #920]!	; 0x398

00010c78 <fputs_unlocked@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #86016	; 0x15000
   10c80:	ldr	pc, [ip, #912]!	; 0x390

00010c84 <strcmp@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #86016	; 0x15000
   10c8c:	ldr	pc, [ip, #904]!	; 0x388

00010c90 <fflush@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #86016	; 0x15000
   10c98:	ldr	pc, [ip, #896]!	; 0x380

00010c9c <free@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #86016	; 0x15000
   10ca4:	ldr	pc, [ip, #888]!	; 0x378

00010ca8 <_exit@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #86016	; 0x15000
   10cb0:	ldr	pc, [ip, #880]!	; 0x370

00010cb4 <memcpy@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #86016	; 0x15000
   10cbc:	ldr	pc, [ip, #872]!	; 0x368

00010cc0 <mbsinit@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #86016	; 0x15000
   10cc8:	ldr	pc, [ip, #864]!	; 0x360

00010ccc <dcgettext@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #86016	; 0x15000
   10cd4:	ldr	pc, [ip, #856]!	; 0x358

00010cd8 <realloc@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #86016	; 0x15000
   10ce0:	ldr	pc, [ip, #848]!	; 0x350

00010ce4 <textdomain@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #86016	; 0x15000
   10cec:	ldr	pc, [ip, #840]!	; 0x348

00010cf0 <iswprint@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #86016	; 0x15000
   10cf8:	ldr	pc, [ip, #832]!	; 0x340

00010cfc <fwrite@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #86016	; 0x15000
   10d04:	ldr	pc, [ip, #824]!	; 0x338

00010d08 <lseek64@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #86016	; 0x15000
   10d10:	ldr	pc, [ip, #816]!	; 0x330

00010d14 <__ctype_get_mb_cur_max@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #86016	; 0x15000
   10d1c:	ldr	pc, [ip, #808]!	; 0x328

00010d20 <__fpending@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #86016	; 0x15000
   10d28:	ldr	pc, [ip, #800]!	; 0x320

00010d2c <ferror_unlocked@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #86016	; 0x15000
   10d34:	ldr	pc, [ip, #792]!	; 0x318

00010d38 <mbrtowc@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #86016	; 0x15000
   10d40:	ldr	pc, [ip, #784]!	; 0x310

00010d44 <error@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #86016	; 0x15000
   10d4c:	ldr	pc, [ip, #776]!	; 0x308

00010d50 <malloc@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #86016	; 0x15000
   10d58:	ldr	pc, [ip, #768]!	; 0x300

00010d5c <__libc_start_main@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #86016	; 0x15000
   10d64:	ldr	pc, [ip, #760]!	; 0x2f8

00010d68 <__freading@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #86016	; 0x15000
   10d70:	ldr	pc, [ip, #752]!	; 0x2f0

00010d74 <__gmon_start__@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #86016	; 0x15000
   10d7c:	ldr	pc, [ip, #744]!	; 0x2e8

00010d80 <getopt_long@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #86016	; 0x15000
   10d88:	ldr	pc, [ip, #736]!	; 0x2e0

00010d8c <__ctype_b_loc@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #86016	; 0x15000
   10d94:	ldr	pc, [ip, #728]!	; 0x2d8

00010d98 <exit@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #86016	; 0x15000
   10da0:	ldr	pc, [ip, #720]!	; 0x2d0

00010da4 <bcmp@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #86016	; 0x15000
   10dac:	ldr	pc, [ip, #712]!	; 0x2c8

00010db0 <strlen@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #86016	; 0x15000
   10db8:	ldr	pc, [ip, #704]!	; 0x2c0

00010dbc <__errno_location@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #86016	; 0x15000
   10dc4:	ldr	pc, [ip, #696]!	; 0x2b8

00010dc8 <__cxa_atexit@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #86016	; 0x15000
   10dd0:	ldr	pc, [ip, #688]!	; 0x2b0

00010dd4 <memset@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #86016	; 0x15000
   10ddc:	ldr	pc, [ip, #680]!	; 0x2a8

00010de0 <__printf_chk@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #86016	; 0x15000
   10de8:	ldr	pc, [ip, #672]!	; 0x2a0

00010dec <fileno@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #86016	; 0x15000
   10df4:	ldr	pc, [ip, #664]!	; 0x298

00010df8 <__fprintf_chk@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #86016	; 0x15000
   10e00:	ldr	pc, [ip, #656]!	; 0x290

00010e04 <fclose@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #86016	; 0x15000
   10e0c:	ldr	pc, [ip, #648]!	; 0x288

00010e10 <fseeko64@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #86016	; 0x15000
   10e18:	ldr	pc, [ip, #640]!	; 0x280

00010e1c <setlocale@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #86016	; 0x15000
   10e24:	ldr	pc, [ip, #632]!	; 0x278

00010e28 <strrchr@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #86016	; 0x15000
   10e30:	ldr	pc, [ip, #624]!	; 0x270

00010e34 <nl_langinfo@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #86016	; 0x15000
   10e3c:	ldr	pc, [ip, #616]!	; 0x268

00010e40 <bindtextdomain@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #86016	; 0x15000
   10e48:	ldr	pc, [ip, #608]!	; 0x260

00010e4c <strncmp@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #86016	; 0x15000
   10e54:	ldr	pc, [ip, #600]!	; 0x258

00010e58 <abort@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #86016	; 0x15000
   10e60:	ldr	pc, [ip, #592]!	; 0x250

00010e64 <putchar_unlocked@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #86016	; 0x15000
   10e6c:	ldr	pc, [ip, #584]!	; 0x248

Disassembly of section .text:

00010e70 <.text>:
   10e70:	mov	fp, #0
   10e74:	mov	lr, #0
   10e78:	pop	{r1}		; (ldr r1, [sp], #4)
   10e7c:	mov	r2, sp
   10e80:	push	{r2}		; (str r2, [sp, #-4]!)
   10e84:	push	{r0}		; (str r0, [sp, #-4]!)
   10e88:	ldr	ip, [pc, #16]	; 10ea0 <putchar_unlocked@plt+0x3c>
   10e8c:	push	{ip}		; (str ip, [sp, #-4]!)
   10e90:	ldr	r0, [pc, #12]	; 10ea4 <putchar_unlocked@plt+0x40>
   10e94:	ldr	r3, [pc, #12]	; 10ea8 <putchar_unlocked@plt+0x44>
   10e98:	bl	10d5c <__libc_start_main@plt>
   10e9c:	bl	10e58 <abort@plt>
   10ea0:	andeq	r4, r1, r8, asr #10
   10ea4:	andeq	r1, r1, ip, asr r2
   10ea8:	andeq	r4, r1, r8, ror #9
   10eac:	ldr	r3, [pc, #20]	; 10ec8 <putchar_unlocked@plt+0x64>
   10eb0:	ldr	r2, [pc, #20]	; 10ecc <putchar_unlocked@plt+0x68>
   10eb4:	add	r3, pc, r3
   10eb8:	ldr	r2, [r3, r2]
   10ebc:	cmp	r2, #0
   10ec0:	bxeq	lr
   10ec4:	b	10d74 <__gmon_start__@plt>
   10ec8:	andeq	r5, r1, r4, asr #2
   10ecc:	strheq	r0, [r0], -r8
   10ed0:	ldr	r0, [pc, #24]	; 10ef0 <putchar_unlocked@plt+0x8c>
   10ed4:	ldr	r3, [pc, #24]	; 10ef4 <putchar_unlocked@plt+0x90>
   10ed8:	cmp	r3, r0
   10edc:	bxeq	lr
   10ee0:	ldr	r3, [pc, #16]	; 10ef8 <putchar_unlocked@plt+0x94>
   10ee4:	cmp	r3, #0
   10ee8:	bxeq	lr
   10eec:	bx	r3
   10ef0:	andeq	r6, r2, r0, lsl r1
   10ef4:	andeq	r6, r2, r0, lsl r1
   10ef8:	andeq	r0, r0, r0
   10efc:	ldr	r0, [pc, #36]	; 10f28 <putchar_unlocked@plt+0xc4>
   10f00:	ldr	r1, [pc, #36]	; 10f2c <putchar_unlocked@plt+0xc8>
   10f04:	sub	r1, r1, r0
   10f08:	asr	r1, r1, #2
   10f0c:	add	r1, r1, r1, lsr #31
   10f10:	asrs	r1, r1, #1
   10f14:	bxeq	lr
   10f18:	ldr	r3, [pc, #16]	; 10f30 <putchar_unlocked@plt+0xcc>
   10f1c:	cmp	r3, #0
   10f20:	bxeq	lr
   10f24:	bx	r3
   10f28:	andeq	r6, r2, r0, lsl r1
   10f2c:	andeq	r6, r2, r0, lsl r1
   10f30:	andeq	r0, r0, r0
   10f34:	push	{r4, lr}
   10f38:	ldr	r4, [pc, #24]	; 10f58 <putchar_unlocked@plt+0xf4>
   10f3c:	ldrb	r3, [r4]
   10f40:	cmp	r3, #0
   10f44:	popne	{r4, pc}
   10f48:	bl	10ed0 <putchar_unlocked@plt+0x6c>
   10f4c:	mov	r3, #1
   10f50:	strb	r3, [r4]
   10f54:	pop	{r4, pc}
   10f58:	andeq	r6, r2, ip, lsr #2
   10f5c:	b	10efc <putchar_unlocked@plt+0x98>
   10f60:	push	{fp, lr}
   10f64:	mov	fp, sp
   10f68:	sub	sp, sp, #8
   10f6c:	mov	r4, r0
   10f70:	cmp	r0, #0
   10f74:	bne	11060 <putchar_unlocked@plt+0x1fc>
   10f78:	movw	r1, #17819	; 0x459b
   10f7c:	movt	r1, #1
   10f80:	mov	r0, #0
   10f84:	mov	r2, #5
   10f88:	bl	10ccc <dcgettext@plt>
   10f8c:	mov	r1, r0
   10f90:	movw	r5, #24888	; 0x6138
   10f94:	movt	r5, #2
   10f98:	ldr	r2, [r5]
   10f9c:	mov	r0, #1
   10fa0:	mov	r3, r2
   10fa4:	bl	10de0 <__printf_chk@plt>
   10fa8:	movw	r1, #17872	; 0x45d0
   10fac:	movt	r1, #1
   10fb0:	mov	r0, #0
   10fb4:	mov	r2, #5
   10fb8:	bl	10ccc <dcgettext@plt>
   10fbc:	movw	r6, #24868	; 0x6124
   10fc0:	movt	r6, #2
   10fc4:	ldr	r1, [r6]
   10fc8:	bl	10c78 <fputs_unlocked@plt>
   10fcc:	bl	110a4 <putchar_unlocked@plt+0x240>
   10fd0:	movw	r1, #17976	; 0x4638
   10fd4:	movt	r1, #1
   10fd8:	mov	r0, #0
   10fdc:	mov	r2, #5
   10fe0:	bl	10ccc <dcgettext@plt>
   10fe4:	ldr	r1, [r6]
   10fe8:	bl	10c78 <fputs_unlocked@plt>
   10fec:	movw	r1, #18178	; 0x4702
   10ff0:	movt	r1, #1
   10ff4:	mov	r0, #0
   10ff8:	mov	r2, #5
   10ffc:	bl	10ccc <dcgettext@plt>
   11000:	ldr	r1, [r6]
   11004:	bl	10c78 <fputs_unlocked@plt>
   11008:	movw	r1, #18223	; 0x472f
   1100c:	movt	r1, #1
   11010:	mov	r0, #0
   11014:	mov	r2, #5
   11018:	bl	10ccc <dcgettext@plt>
   1101c:	ldr	r1, [r6]
   11020:	bl	10c78 <fputs_unlocked@plt>
   11024:	movw	r1, #18277	; 0x4765
   11028:	movt	r1, #1
   1102c:	mov	r0, #0
   11030:	mov	r2, #5
   11034:	bl	10ccc <dcgettext@plt>
   11038:	mov	r1, r0
   1103c:	ldr	r2, [r5]
   11040:	str	r2, [sp]
   11044:	str	r2, [sp, #4]
   11048:	mov	r0, #1
   1104c:	mov	r3, r2
   11050:	bl	10de0 <__printf_chk@plt>
   11054:	bl	110d4 <putchar_unlocked@plt+0x270>
   11058:	mov	r0, r4
   1105c:	bl	10d98 <exit@plt>
   11060:	movw	r0, #24864	; 0x6120
   11064:	movt	r0, #2
   11068:	ldr	r5, [r0]
   1106c:	movw	r1, #17780	; 0x4574
   11070:	movt	r1, #1
   11074:	mov	r0, #0
   11078:	mov	r2, #5
   1107c:	bl	10ccc <dcgettext@plt>
   11080:	mov	r2, r0
   11084:	movw	r0, #24888	; 0x6138
   11088:	movt	r0, #2
   1108c:	ldr	r3, [r0]
   11090:	mov	r0, r5
   11094:	mov	r1, #1
   11098:	bl	10df8 <__fprintf_chk@plt>
   1109c:	mov	r0, r4
   110a0:	bl	10d98 <exit@plt>
   110a4:	push	{fp, lr}
   110a8:	mov	fp, sp
   110ac:	movw	r1, #18564	; 0x4884
   110b0:	movt	r1, #1
   110b4:	mov	r0, #0
   110b8:	mov	r2, #5
   110bc:	bl	10ccc <dcgettext@plt>
   110c0:	movw	r1, #24868	; 0x6124
   110c4:	movt	r1, #2
   110c8:	ldr	r1, [r1]
   110cc:	pop	{fp, lr}
   110d0:	b	10c78 <fputs_unlocked@plt>
   110d4:	push	{r4, r5, r6, sl, fp, lr}
   110d8:	add	fp, sp, #16
   110dc:	sub	sp, sp, #56	; 0x38
   110e0:	movw	r0, #19080	; 0x4a88
   110e4:	movt	r0, #1
   110e8:	add	r1, r0, #32
   110ec:	mov	r2, #48	; 0x30
   110f0:	vld1.64	{d16-d17}, [r1]
   110f4:	mov	r6, sp
   110f8:	add	r1, r6, #32
   110fc:	add	r3, r0, #16
   11100:	vld1.64	{d18-d19}, [r0], r2
   11104:	vld1.64	{d20-d21}, [r3]
   11108:	vldr	d22, [r0]
   1110c:	vst1.64	{d16-d17}, [r1]
   11110:	add	r0, r6, #16
   11114:	vst1.64	{d20-d21}, [r0]
   11118:	mov	r0, r6
   1111c:	vst1.64	{d18-d19}, [r0], r2
   11120:	vstr	d22, [r0]
   11124:	ldr	r1, [sp]
   11128:	cmp	r1, #0
   1112c:	movw	r4, #18462	; 0x481e
   11130:	movt	r4, #1
   11134:	beq	1115c <putchar_unlocked@plt+0x2f8>
   11138:	mov	r6, sp
   1113c:	movw	r5, #18462	; 0x481e
   11140:	movt	r5, #1
   11144:	mov	r0, r5
   11148:	bl	10c84 <strcmp@plt>
   1114c:	cmp	r0, #0
   11150:	ldrne	r1, [r6, #8]!
   11154:	cmpne	r1, #0
   11158:	bne	11144 <putchar_unlocked@plt+0x2e0>
   1115c:	ldr	r5, [r6, #4]
   11160:	movw	r1, #18734	; 0x492e
   11164:	movt	r1, #1
   11168:	mov	r0, #0
   1116c:	mov	r2, #5
   11170:	bl	10ccc <dcgettext@plt>
   11174:	mov	r1, r0
   11178:	movw	r2, #18501	; 0x4845
   1117c:	movt	r2, #1
   11180:	movw	r3, #18757	; 0x4945
   11184:	movt	r3, #1
   11188:	mov	r0, #1
   1118c:	bl	10de0 <__printf_chk@plt>
   11190:	cmp	r5, #0
   11194:	moveq	r5, r4
   11198:	mov	r0, #5
   1119c:	mov	r1, #0
   111a0:	bl	10e1c <setlocale@plt>
   111a4:	cmp	r0, #0
   111a8:	beq	111e8 <putchar_unlocked@plt+0x384>
   111ac:	movw	r1, #18797	; 0x496d
   111b0:	movt	r1, #1
   111b4:	mov	r2, #3
   111b8:	bl	10e4c <strncmp@plt>
   111bc:	cmp	r0, #0
   111c0:	beq	111e8 <putchar_unlocked@plt+0x384>
   111c4:	movw	r1, #18801	; 0x4971
   111c8:	movt	r1, #1
   111cc:	mov	r0, #0
   111d0:	mov	r2, #5
   111d4:	bl	10ccc <dcgettext@plt>
   111d8:	movw	r1, #24868	; 0x6124
   111dc:	movt	r1, #2
   111e0:	ldr	r1, [r1]
   111e4:	bl	10c78 <fputs_unlocked@plt>
   111e8:	movw	r1, #18872	; 0x49b8
   111ec:	movt	r1, #1
   111f0:	mov	r0, #0
   111f4:	mov	r2, #5
   111f8:	bl	10ccc <dcgettext@plt>
   111fc:	mov	r1, r0
   11200:	movw	r2, #18757	; 0x4945
   11204:	movt	r2, #1
   11208:	mov	r0, #1
   1120c:	mov	r3, r4
   11210:	bl	10de0 <__printf_chk@plt>
   11214:	movw	r0, #18667	; 0x48eb
   11218:	movt	r0, #1
   1121c:	movw	r6, #18461	; 0x481d
   11220:	movt	r6, #1
   11224:	cmp	r5, r4
   11228:	moveq	r6, r0
   1122c:	movw	r1, #18899	; 0x49d3
   11230:	movt	r1, #1
   11234:	mov	r0, #0
   11238:	mov	r2, #5
   1123c:	bl	10ccc <dcgettext@plt>
   11240:	mov	r1, r0
   11244:	mov	r0, #1
   11248:	mov	r2, r5
   1124c:	mov	r3, r6
   11250:	sub	sp, fp, #16
   11254:	pop	{r4, r5, r6, sl, fp, lr}
   11258:	b	10de0 <__printf_chk@plt>
   1125c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11260:	add	fp, sp, #28
   11264:	sub	sp, sp, #12
   11268:	mov	r8, r1
   1126c:	mov	r5, r0
   11270:	ldr	r0, [r1]
   11274:	bl	1175c <putchar_unlocked@plt+0x8f8>
   11278:	movw	r1, #18461	; 0x481d
   1127c:	movt	r1, #1
   11280:	mov	r0, #6
   11284:	bl	10e1c <setlocale@plt>
   11288:	movw	r6, #18505	; 0x4849
   1128c:	movt	r6, #1
   11290:	movw	r1, #18471	; 0x4827
   11294:	movt	r1, #1
   11298:	mov	r0, r6
   1129c:	bl	10e40 <bindtextdomain@plt>
   112a0:	mov	r0, r6
   112a4:	bl	10ce4 <textdomain@plt>
   112a8:	movw	r0, #5524	; 0x1594
   112ac:	movt	r0, #1
   112b0:	bl	1454c <putchar_unlocked@plt+0x36e8>
   112b4:	mov	r2, #0
   112b8:	movw	r4, #18495	; 0x483f
   112bc:	movt	r4, #1
   112c0:	movw	r9, #18984	; 0x4a28
   112c4:	movt	r9, #1
   112c8:	mov	r6, #0
   112cc:	mov	sl, #0
   112d0:	mov	r1, #0
   112d4:	mov	r7, r1
   112d8:	str	r2, [sp]
   112dc:	mov	r0, r5
   112e0:	mov	r1, r8
   112e4:	mov	r2, r4
   112e8:	mov	r3, r9
   112ec:	bl	10d80 <getopt_long@plt>
   112f0:	cmp	r0, #96	; 0x60
   112f4:	ble	11340 <putchar_unlocked@plt+0x4dc>
   112f8:	cmp	r0, #97	; 0x61
   112fc:	beq	11330 <putchar_unlocked@plt+0x4cc>
   11300:	mov	r1, #1
   11304:	cmp	r0, #122	; 0x7a
   11308:	mov	r2, #0
   1130c:	beq	112d4 <putchar_unlocked@plt+0x470>
   11310:	cmp	r0, #115	; 0x73
   11314:	bne	11440 <putchar_unlocked@plt+0x5dc>
   11318:	movw	r0, #24872	; 0x6128
   1131c:	movt	r0, #2
   11320:	ldr	r6, [r0]
   11324:	mov	sl, #1
   11328:	mov	r1, r7
   1132c:	b	112d4 <putchar_unlocked@plt+0x470>
   11330:	mov	sl, #1
   11334:	mov	r1, r7
   11338:	mov	r2, #0
   1133c:	b	112d4 <putchar_unlocked@plt+0x470>
   11340:	cmn	r0, #1
   11344:	bne	113e0 <putchar_unlocked@plt+0x57c>
   11348:	movw	r4, #24856	; 0x6118
   1134c:	movt	r4, #2
   11350:	ldr	r2, [r4]
   11354:	cmp	r2, r5
   11358:	bge	11448 <putchar_unlocked@plt+0x5e4>
   1135c:	add	r3, r2, #2
   11360:	cmp	r3, r5
   11364:	bge	11374 <putchar_unlocked@plt+0x510>
   11368:	eor	r0, sl, #1
   1136c:	tst	r0, #1
   11370:	bne	11474 <putchar_unlocked@plt+0x610>
   11374:	tst	sl, #1
   11378:	beq	113b4 <putchar_unlocked@plt+0x550>
   1137c:	ldr	r0, [r4]
   11380:	cmp	r0, r5
   11384:	bge	113d4 <putchar_unlocked@plt+0x570>
   11388:	and	r7, r7, #1
   1138c:	ldr	r0, [r8, r0, lsl #2]
   11390:	mov	r1, r6
   11394:	mov	r2, r7
   11398:	bl	114b8 <putchar_unlocked@plt+0x654>
   1139c:	ldr	r0, [r4]
   113a0:	add	r0, r0, #1
   113a4:	str	r0, [r4]
   113a8:	cmp	r0, r5
   113ac:	blt	1138c <putchar_unlocked@plt+0x528>
   113b0:	b	113d4 <putchar_unlocked@plt+0x570>
   113b4:	ldr	r0, [r8, r2, lsl #2]
   113b8:	mov	r1, #0
   113bc:	cmp	r3, r5
   113c0:	bne	113cc <putchar_unlocked@plt+0x568>
   113c4:	add	r1, r8, r2, lsl #2
   113c8:	ldr	r1, [r1, #4]
   113cc:	and	r2, r7, #1
   113d0:	bl	114b8 <putchar_unlocked@plt+0x654>
   113d4:	mov	r0, #0
   113d8:	sub	sp, fp, #28
   113dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   113e0:	cmn	r0, #3
   113e4:	bne	11430 <putchar_unlocked@plt+0x5cc>
   113e8:	movw	r0, #24776	; 0x60c8
   113ec:	movt	r0, #2
   113f0:	ldr	r3, [r0]
   113f4:	movw	r0, #24868	; 0x6124
   113f8:	movt	r0, #2
   113fc:	ldr	r0, [r0]
   11400:	mov	r1, #0
   11404:	movw	r2, #18515	; 0x4853
   11408:	movt	r2, #1
   1140c:	str	r2, [sp]
   11410:	str	r1, [sp, #4]
   11414:	movw	r1, #18462	; 0x481e
   11418:	movt	r1, #1
   1141c:	movw	r2, #18501	; 0x4845
   11420:	movt	r2, #1
   11424:	bl	13728 <putchar_unlocked@plt+0x28c4>
   11428:	mov	r0, #0
   1142c:	bl	10d98 <exit@plt>
   11430:	cmn	r0, #2
   11434:	bne	11440 <putchar_unlocked@plt+0x5dc>
   11438:	mov	r0, #0
   1143c:	bl	10f60 <putchar_unlocked@plt+0xfc>
   11440:	mov	r0, #1
   11444:	bl	10f60 <putchar_unlocked@plt+0xfc>
   11448:	movw	r1, #18531	; 0x4863
   1144c:	movt	r1, #1
   11450:	mov	r0, #0
   11454:	mov	r2, #5
   11458:	bl	10ccc <dcgettext@plt>
   1145c:	mov	r2, r0
   11460:	mov	r0, #0
   11464:	mov	r1, #0
   11468:	bl	10d44 <error@plt>
   1146c:	mov	r0, #1
   11470:	bl	10f60 <putchar_unlocked@plt+0xfc>
   11474:	movw	r1, #18547	; 0x4873
   11478:	movt	r1, #1
   1147c:	mov	r0, #0
   11480:	mov	r2, #5
   11484:	bl	10ccc <dcgettext@plt>
   11488:	mov	r5, r0
   1148c:	ldr	r0, [r4]
   11490:	add	r0, r8, r0, lsl #2
   11494:	ldr	r0, [r0, #8]
   11498:	bl	12f50 <putchar_unlocked@plt+0x20ec>
   1149c:	mov	r3, r0
   114a0:	mov	r0, #0
   114a4:	mov	r1, #0
   114a8:	mov	r2, r5
   114ac:	bl	10d44 <error@plt>
   114b0:	mov	r0, #1
   114b4:	bl	10f60 <putchar_unlocked@plt+0xfc>
   114b8:	push	{r4, r5, r6, sl, fp, lr}
   114bc:	add	fp, sp, #16
   114c0:	mov	r5, r2
   114c4:	mov	r6, r1
   114c8:	bl	1167c <putchar_unlocked@plt+0x818>
   114cc:	mov	r4, r0
   114d0:	bl	116f0 <putchar_unlocked@plt+0x88c>
   114d4:	cmp	r6, #0
   114d8:	beq	114f0 <putchar_unlocked@plt+0x68c>
   114dc:	ldrb	r0, [r4]
   114e0:	cmp	r0, #47	; 0x2f
   114e4:	movne	r0, r4
   114e8:	movne	r1, r6
   114ec:	blne	11520 <putchar_unlocked@plt+0x6bc>
   114f0:	movw	r0, #24868	; 0x6124
   114f4:	movt	r0, #2
   114f8:	ldr	r1, [r0]
   114fc:	mov	r0, r4
   11500:	bl	10c78 <fputs_unlocked@plt>
   11504:	mov	r0, #10
   11508:	cmp	r5, #0
   1150c:	movwne	r0, #0
   11510:	bl	10e64 <putchar_unlocked@plt>
   11514:	mov	r0, r4
   11518:	pop	{r4, r5, r6, sl, fp, lr}
   1151c:	b	11734 <putchar_unlocked@plt+0x8d0>
   11520:	push	{r4, r5, r6, sl, fp, lr}
   11524:	add	fp, sp, #16
   11528:	mov	r5, r1
   1152c:	mov	r4, r0
   11530:	bl	10db0 <strlen@plt>
   11534:	add	r6, r4, r0
   11538:	mov	r0, r5
   1153c:	bl	10db0 <strlen@plt>
   11540:	add	r0, r5, r0
   11544:	cmp	r6, r4
   11548:	cmphi	r0, r5
   1154c:	bls	11564 <putchar_unlocked@plt+0x700>
   11550:	ldrb	r1, [r0, #-1]!
   11554:	ldrb	r2, [r6, #-1]!
   11558:	cmp	r2, r1
   1155c:	beq	11544 <putchar_unlocked@plt+0x6e0>
   11560:	b	11570 <putchar_unlocked@plt+0x70c>
   11564:	cmp	r6, r4
   11568:	movhi	r0, #0
   1156c:	strbhi	r0, [r6]
   11570:	pop	{r4, r5, r6, sl, fp, pc}
   11574:	movw	r1, #24880	; 0x6130
   11578:	movt	r1, #2
   1157c:	str	r0, [r1]
   11580:	bx	lr
   11584:	movw	r1, #24884	; 0x6134
   11588:	movt	r1, #2
   1158c:	strb	r0, [r1]
   11590:	bx	lr
   11594:	push	{r4, r5, r6, sl, fp, lr}
   11598:	add	fp, sp, #16
   1159c:	sub	sp, sp, #8
   115a0:	movw	r0, #24868	; 0x6124
   115a4:	movt	r0, #2
   115a8:	ldr	r0, [r0]
   115ac:	bl	1407c <putchar_unlocked@plt+0x3218>
   115b0:	cmp	r0, #0
   115b4:	beq	115dc <putchar_unlocked@plt+0x778>
   115b8:	movw	r0, #24884	; 0x6134
   115bc:	movt	r0, #2
   115c0:	ldrb	r0, [r0]
   115c4:	cmp	r0, #0
   115c8:	beq	115fc <putchar_unlocked@plt+0x798>
   115cc:	bl	10dbc <__errno_location@plt>
   115d0:	ldr	r0, [r0]
   115d4:	cmp	r0, #32
   115d8:	bne	115fc <putchar_unlocked@plt+0x798>
   115dc:	movw	r0, #24864	; 0x6120
   115e0:	movt	r0, #2
   115e4:	ldr	r0, [r0]
   115e8:	bl	1407c <putchar_unlocked@plt+0x3218>
   115ec:	cmp	r0, #0
   115f0:	subeq	sp, fp, #16
   115f4:	popeq	{r4, r5, r6, sl, fp, pc}
   115f8:	b	1166c <putchar_unlocked@plt+0x808>
   115fc:	movw	r1, #19151	; 0x4acf
   11600:	movt	r1, #1
   11604:	mov	r0, #0
   11608:	mov	r2, #5
   1160c:	bl	10ccc <dcgettext@plt>
   11610:	mov	r4, r0
   11614:	movw	r0, #24880	; 0x6130
   11618:	movt	r0, #2
   1161c:	ldr	r6, [r0]
   11620:	bl	10dbc <__errno_location@plt>
   11624:	ldr	r5, [r0]
   11628:	cmp	r6, #0
   1162c:	bne	11648 <putchar_unlocked@plt+0x7e4>
   11630:	movw	r2, #19167	; 0x4adf
   11634:	movt	r2, #1
   11638:	mov	r0, #0
   1163c:	mov	r1, r5
   11640:	mov	r3, r4
   11644:	b	11668 <putchar_unlocked@plt+0x804>
   11648:	mov	r0, r6
   1164c:	bl	12e00 <putchar_unlocked@plt+0x1f9c>
   11650:	mov	r3, r0
   11654:	str	r4, [sp]
   11658:	movw	r2, #19163	; 0x4adb
   1165c:	movt	r2, #1
   11660:	mov	r0, #0
   11664:	mov	r1, r5
   11668:	bl	10d44 <error@plt>
   1166c:	movw	r0, #24780	; 0x60cc
   11670:	movt	r0, #2
   11674:	ldr	r0, [r0]
   11678:	bl	10ca8 <_exit@plt>
   1167c:	push	{r4, r5, r6, sl, fp, lr}
   11680:	add	fp, sp, #16
   11684:	mov	r6, r0
   11688:	bl	13cd4 <putchar_unlocked@plt+0x2e70>
   1168c:	mov	r4, r0
   11690:	ldrb	r0, [r0]
   11694:	cmp	r0, #0
   11698:	beq	116b8 <putchar_unlocked@plt+0x854>
   1169c:	mov	r0, r4
   116a0:	bl	13d20 <putchar_unlocked@plt+0x2ebc>
   116a4:	mov	r5, r0
   116a8:	ldrb	r0, [r4, r0]
   116ac:	cmp	r0, #47	; 0x2f
   116b0:	addeq	r5, r5, #1
   116b4:	b	116c8 <putchar_unlocked@plt+0x864>
   116b8:	mov	r0, r6
   116bc:	bl	13d20 <putchar_unlocked@plt+0x2ebc>
   116c0:	mov	r5, r0
   116c4:	mov	r4, r6
   116c8:	add	r0, r5, #1
   116cc:	bl	13858 <putchar_unlocked@plt+0x29f4>
   116d0:	mov	r6, r0
   116d4:	mov	r1, r4
   116d8:	mov	r2, r5
   116dc:	bl	10cb4 <memcpy@plt>
   116e0:	mov	r0, #0
   116e4:	strb	r0, [r6, r5]
   116e8:	mov	r0, r6
   116ec:	pop	{r4, r5, r6, sl, fp, pc}
   116f0:	push	{r4, r5, fp, lr}
   116f4:	add	fp, sp, #8
   116f8:	mov	r4, r0
   116fc:	bl	13cd4 <putchar_unlocked@plt+0x2e70>
   11700:	mov	r5, r0
   11704:	ldrb	r0, [r0]
   11708:	cmp	r0, #0
   1170c:	moveq	r5, r4
   11710:	mov	r0, r5
   11714:	bl	13d20 <putchar_unlocked@plt+0x2ebc>
   11718:	ldrb	r1, [r5, r0]
   1171c:	mov	r2, #0
   11720:	strb	r2, [r5, r0]
   11724:	cmp	r1, #0
   11728:	movwne	r1, #1
   1172c:	mov	r0, r1
   11730:	pop	{r4, r5, fp, pc}
   11734:	push	{r4, r5, r6, sl, fp, lr}
   11738:	add	fp, sp, #16
   1173c:	mov	r4, r0
   11740:	bl	10dbc <__errno_location@plt>
   11744:	mov	r5, r0
   11748:	ldr	r6, [r0]
   1174c:	mov	r0, r4
   11750:	bl	10c9c <free@plt>
   11754:	str	r6, [r5]
   11758:	pop	{r4, r5, r6, sl, fp, pc}
   1175c:	push	{r4, r5, fp, lr}
   11760:	add	fp, sp, #8
   11764:	cmp	r0, #0
   11768:	beq	117fc <putchar_unlocked@plt+0x998>
   1176c:	mov	r4, r0
   11770:	mov	r1, #47	; 0x2f
   11774:	bl	10e28 <strrchr@plt>
   11778:	cmp	r0, #0
   1177c:	mov	r5, r4
   11780:	addne	r5, r0, #1
   11784:	sub	r0, r5, r4
   11788:	cmp	r0, #7
   1178c:	blt	117e0 <putchar_unlocked@plt+0x97c>
   11790:	sub	r0, r5, #7
   11794:	movw	r1, #19226	; 0x4b1a
   11798:	movt	r1, #1
   1179c:	mov	r2, #7
   117a0:	bl	10e4c <strncmp@plt>
   117a4:	cmp	r0, #0
   117a8:	bne	117e0 <putchar_unlocked@plt+0x97c>
   117ac:	movw	r1, #19234	; 0x4b22
   117b0:	movt	r1, #1
   117b4:	mov	r0, r5
   117b8:	mov	r2, #3
   117bc:	bl	10e4c <strncmp@plt>
   117c0:	cmp	r0, #0
   117c4:	beq	117d0 <putchar_unlocked@plt+0x96c>
   117c8:	mov	r4, r5
   117cc:	b	117e0 <putchar_unlocked@plt+0x97c>
   117d0:	add	r4, r5, #3
   117d4:	movw	r0, #24848	; 0x6110
   117d8:	movt	r0, #2
   117dc:	str	r4, [r0]
   117e0:	movw	r0, #24852	; 0x6114
   117e4:	movt	r0, #2
   117e8:	str	r4, [r0]
   117ec:	movw	r0, #24888	; 0x6138
   117f0:	movt	r0, #2
   117f4:	str	r4, [r0]
   117f8:	pop	{r4, r5, fp, pc}
   117fc:	movw	r0, #24864	; 0x6120
   11800:	movt	r0, #2
   11804:	ldr	r3, [r0]
   11808:	movw	r0, #19170	; 0x4ae2
   1180c:	movt	r0, #1
   11810:	mov	r1, #55	; 0x37
   11814:	mov	r2, #1
   11818:	bl	10cfc <fwrite@plt>
   1181c:	bl	10e58 <abort@plt>
   11820:	push	{r4, r5, r6, sl, fp, lr}
   11824:	add	fp, sp, #16
   11828:	mov	r4, r0
   1182c:	movw	r0, #24896	; 0x6140
   11830:	movt	r0, #2
   11834:	cmp	r4, #0
   11838:	moveq	r4, r0
   1183c:	bl	10dbc <__errno_location@plt>
   11840:	mov	r5, r0
   11844:	ldr	r6, [r0]
   11848:	mov	r0, r4
   1184c:	mov	r1, #48	; 0x30
   11850:	bl	13b18 <putchar_unlocked@plt+0x2cb4>
   11854:	str	r6, [r5]
   11858:	pop	{r4, r5, r6, sl, fp, pc}
   1185c:	movw	r1, #24896	; 0x6140
   11860:	movt	r1, #2
   11864:	cmp	r0, #0
   11868:	movne	r1, r0
   1186c:	ldr	r0, [r1]
   11870:	bx	lr
   11874:	movw	r2, #24896	; 0x6140
   11878:	movt	r2, #2
   1187c:	cmp	r0, #0
   11880:	movne	r2, r0
   11884:	str	r1, [r2]
   11888:	bx	lr
   1188c:	movw	r3, #24896	; 0x6140
   11890:	movt	r3, #2
   11894:	cmp	r0, #0
   11898:	movne	r3, r0
   1189c:	ubfx	r0, r1, #5, #3
   118a0:	add	ip, r3, r0, lsl #2
   118a4:	ldr	r3, [ip, #8]
   118a8:	and	r1, r1, #31
   118ac:	mov	r0, #1
   118b0:	and	r0, r0, r3, lsr r1
   118b4:	and	r2, r2, #1
   118b8:	eor	r2, r0, r2
   118bc:	eor	r1, r3, r2, lsl r1
   118c0:	str	r1, [ip, #8]
   118c4:	bx	lr
   118c8:	movw	r2, #24896	; 0x6140
   118cc:	movt	r2, #2
   118d0:	cmp	r0, #0
   118d4:	movne	r2, r0
   118d8:	ldr	r0, [r2, #4]
   118dc:	str	r1, [r2, #4]
   118e0:	bx	lr
   118e4:	push	{fp, lr}
   118e8:	mov	fp, sp
   118ec:	movw	r3, #24896	; 0x6140
   118f0:	movt	r3, #2
   118f4:	cmp	r0, #0
   118f8:	movne	r3, r0
   118fc:	mov	r0, #10
   11900:	str	r0, [r3]
   11904:	cmp	r1, #0
   11908:	cmpne	r2, #0
   1190c:	bne	11914 <putchar_unlocked@plt+0xab0>
   11910:	bl	10e58 <abort@plt>
   11914:	str	r1, [r3, #40]	; 0x28
   11918:	str	r2, [r3, #44]	; 0x2c
   1191c:	pop	{fp, pc}
   11920:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11924:	add	fp, sp, #28
   11928:	sub	sp, sp, #20
   1192c:	mov	r8, r3
   11930:	mov	r9, r2
   11934:	mov	sl, r1
   11938:	mov	r7, r0
   1193c:	ldr	r0, [fp, #8]
   11940:	movw	r5, #24896	; 0x6140
   11944:	movt	r5, #2
   11948:	cmp	r0, #0
   1194c:	movne	r5, r0
   11950:	bl	10dbc <__errno_location@plt>
   11954:	mov	r4, r0
   11958:	ldm	r5, {r0, r1}
   1195c:	ldr	r2, [r5, #40]	; 0x28
   11960:	ldr	r3, [r5, #44]	; 0x2c
   11964:	ldr	r6, [r4]
   11968:	add	r5, r5, #8
   1196c:	stm	sp, {r0, r1, r5}
   11970:	str	r2, [sp, #12]
   11974:	str	r3, [sp, #16]
   11978:	mov	r0, r7
   1197c:	mov	r1, sl
   11980:	mov	r2, r9
   11984:	mov	r3, r8
   11988:	bl	11998 <putchar_unlocked@plt+0xb34>
   1198c:	str	r6, [r4]
   11990:	sub	sp, fp, #28
   11994:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11998:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1199c:	add	fp, sp, #28
   119a0:	sub	sp, sp, #156	; 0x9c
   119a4:	mov	r9, r3
   119a8:	mov	r7, r1
   119ac:	mov	r6, r0
   119b0:	str	r2, [fp, #-80]	; 0xffffffb0
   119b4:	add	r0, r2, #1
   119b8:	str	r0, [sp, #76]	; 0x4c
   119bc:	ldr	r0, [fp, #12]
   119c0:	and	r1, r0, #1
   119c4:	str	r1, [sp, #40]	; 0x28
   119c8:	and	r1, r0, #4
   119cc:	str	r1, [sp, #36]	; 0x24
   119d0:	ubfx	r4, r0, #1, #1
   119d4:	bl	10d14 <__ctype_get_mb_cur_max@plt>
   119d8:	str	r0, [sp, #44]	; 0x2c
   119dc:	ldr	r0, [fp, #24]
   119e0:	str	r0, [sp, #88]	; 0x58
   119e4:	ldr	r0, [fp, #20]
   119e8:	str	r0, [sp, #80]	; 0x50
   119ec:	ldr	r1, [fp, #8]
   119f0:	mov	r0, #0
   119f4:	str	r0, [sp, #84]	; 0x54
   119f8:	mov	r0, #0
   119fc:	str	r0, [fp, #-84]	; 0xffffffac
   11a00:	mov	r0, #0
   11a04:	str	r0, [fp, #-72]	; 0xffffffb8
   11a08:	mov	r0, #0
   11a0c:	mov	r2, #0
   11a10:	str	r2, [fp, #-56]	; 0xffffffc8
   11a14:	mov	r2, #0
   11a18:	str	r2, [sp, #64]	; 0x40
   11a1c:	mov	r2, #1
   11a20:	str	r2, [fp, #-48]	; 0xffffffd0
   11a24:	cmp	r1, #10
   11a28:	bhi	12954 <putchar_unlocked@plt+0x1af0>
   11a2c:	mov	sl, r7
   11a30:	mov	r7, r1
   11a34:	add	r1, pc, #24
   11a38:	mov	r8, #0
   11a3c:	mov	r2, #1
   11a40:	mov	r3, #0
   11a44:	ldr	ip, [fp, #-80]	; 0xffffffb0
   11a48:	mov	lr, r9
   11a4c:	mov	r5, r6
   11a50:	ldr	pc, [r1, r7, lsl #2]
   11a54:	andeq	r1, r1, r8, lsr #22
   11a58:	andeq	r1, r1, r8, ror #22
   11a5c:	andeq	r1, r1, r8, lsr fp
   11a60:	andeq	r1, r1, r0, lsr #22
   11a64:	andeq	r1, r1, ip, asr fp
   11a68:			; <UNDEFINED> instruction: 0x00011bbc
   11a6c:	andeq	r1, r1, r8, asr #22
   11a70:	andeq	r1, r1, r8, lsl ip
   11a74:	andeq	r1, r1, r0, lsl #21
   11a78:	andeq	r1, r1, r0, lsl #21
   11a7c:	andeq	r1, r1, ip, lsr #21
   11a80:	movw	r0, #19318	; 0x4b76
   11a84:	movt	r0, #1
   11a88:	mov	r1, r7
   11a8c:	bl	12f5c <putchar_unlocked@plt+0x20f8>
   11a90:	str	r0, [sp, #80]	; 0x50
   11a94:	movw	r0, #19320	; 0x4b78
   11a98:	movt	r0, #1
   11a9c:	mov	r1, r7
   11aa0:	bl	12f5c <putchar_unlocked@plt+0x20f8>
   11aa4:	mov	r5, r6
   11aa8:	str	r0, [sp, #88]	; 0x58
   11aac:	mov	r8, #0
   11ab0:	tst	r4, #1
   11ab4:	str	r7, [fp, #-64]	; 0xffffffc0
   11ab8:	bne	11af0 <putchar_unlocked@plt+0xc8c>
   11abc:	ldr	r0, [sp, #80]	; 0x50
   11ac0:	ldrb	r0, [r0]
   11ac4:	cmp	r0, #0
   11ac8:	beq	11af0 <putchar_unlocked@plt+0xc8c>
   11acc:	ldr	r1, [sp, #80]	; 0x50
   11ad0:	add	r1, r1, #1
   11ad4:	mov	r8, #0
   11ad8:	cmp	r8, sl
   11adc:	strbcc	r0, [r5, r8]
   11ae0:	ldrb	r0, [r1, r8]
   11ae4:	add	r8, r8, #1
   11ae8:	cmp	r0, #0
   11aec:	bne	11ad8 <putchar_unlocked@plt+0xc74>
   11af0:	ldr	r7, [sp, #88]	; 0x58
   11af4:	mov	r0, r7
   11af8:	bl	10db0 <strlen@plt>
   11afc:	mov	r5, r6
   11b00:	str	r0, [fp, #-72]	; 0xffffffb8
   11b04:	str	r7, [fp, #-84]	; 0xffffffac
   11b08:	mov	r2, #1
   11b0c:	mov	r3, r4
   11b10:	ldr	ip, [fp, #-80]	; 0xffffffb0
   11b14:	mov	lr, r9
   11b18:	ldr	r7, [fp, #-64]	; 0xffffffc0
   11b1c:	b	11c18 <putchar_unlocked@plt+0xdb4>
   11b20:	mov	r0, #1
   11b24:	b	11b68 <putchar_unlocked@plt+0xd04>
   11b28:	mov	r7, #0
   11b2c:	mov	r8, #0
   11b30:	mov	r2, r0
   11b34:	b	11c14 <putchar_unlocked@plt+0xdb0>
   11b38:	tst	r4, #1
   11b3c:	bne	11b68 <putchar_unlocked@plt+0xd04>
   11b40:	mov	r2, r0
   11b44:	b	11b90 <putchar_unlocked@plt+0xd2c>
   11b48:	mov	r0, #1
   11b4c:	str	r0, [fp, #-72]	; 0xffffffb8
   11b50:	mov	r8, #0
   11b54:	mov	r7, #5
   11b58:	b	11bd4 <putchar_unlocked@plt+0xd70>
   11b5c:	mov	r2, #1
   11b60:	tst	r4, #1
   11b64:	beq	11b90 <putchar_unlocked@plt+0xd2c>
   11b68:	mov	r1, #1
   11b6c:	str	r1, [fp, #-72]	; 0xffffffb8
   11b70:	mov	r8, #0
   11b74:	mov	r7, #2
   11b78:	movw	r1, #19320	; 0x4b78
   11b7c:	movt	r1, #1
   11b80:	str	r1, [fp, #-84]	; 0xffffffac
   11b84:	mov	r2, r0
   11b88:	mov	r3, #1
   11b8c:	b	11c18 <putchar_unlocked@plt+0xdb4>
   11b90:	mov	r8, #1
   11b94:	mov	r7, #2
   11b98:	cmp	sl, #0
   11b9c:	movne	r0, #39	; 0x27
   11ba0:	strbne	r0, [r5]
   11ba4:	movw	r0, #19320	; 0x4b78
   11ba8:	movt	r0, #1
   11bac:	str	r0, [fp, #-84]	; 0xffffffac
   11bb0:	mov	r0, #1
   11bb4:	str	r0, [fp, #-72]	; 0xffffffb8
   11bb8:	b	11c14 <putchar_unlocked@plt+0xdb0>
   11bbc:	mov	r7, #5
   11bc0:	tst	r4, #1
   11bc4:	beq	11bec <putchar_unlocked@plt+0xd88>
   11bc8:	mov	r0, #1
   11bcc:	str	r0, [fp, #-72]	; 0xffffffb8
   11bd0:	mov	r8, #0
   11bd4:	movw	r0, #19316	; 0x4b74
   11bd8:	movt	r0, #1
   11bdc:	str	r0, [fp, #-84]	; 0xffffffac
   11be0:	mov	r2, #1
   11be4:	mov	r3, #1
   11be8:	b	11c18 <putchar_unlocked@plt+0xdb4>
   11bec:	cmp	sl, #0
   11bf0:	movne	r0, #34	; 0x22
   11bf4:	strbne	r0, [r5]
   11bf8:	mov	r8, #1
   11bfc:	movw	r0, #19316	; 0x4b74
   11c00:	movt	r0, #1
   11c04:	str	r0, [fp, #-84]	; 0xffffffac
   11c08:	mov	r0, #1
   11c0c:	str	r0, [fp, #-72]	; 0xffffffb8
   11c10:	mov	r2, #1
   11c14:	mov	r3, #0
   11c18:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11c1c:	cmp	r0, #0
   11c20:	movwne	r0, #1
   11c24:	and	r1, r0, r3
   11c28:	and	r1, r2, r1
   11c2c:	str	r1, [sp, #56]	; 0x38
   11c30:	sub	r1, r7, #2
   11c34:	clz	r1, r1
   11c38:	lsr	r1, r1, #5
   11c3c:	and	r1, r1, r3
   11c40:	str	r1, [sp, #68]	; 0x44
   11c44:	str	r7, [fp, #-64]	; 0xffffffc0
   11c48:	subs	r1, r7, #2
   11c4c:	movwne	r1, #1
   11c50:	eor	r4, r3, #1
   11c54:	str	r4, [fp, #-88]	; 0xffffffa8
   11c58:	orr	r4, r1, r4
   11c5c:	str	r4, [sp, #72]	; 0x48
   11c60:	and	r1, r1, r2
   11c64:	and	r0, r0, r1
   11c68:	str	r0, [fp, #-60]	; 0xffffffc4
   11c6c:	str	r3, [fp, #-76]	; 0xffffffb4
   11c70:	orr	r0, r1, r3
   11c74:	eor	r0, r0, #1
   11c78:	ldr	r1, [fp, #16]
   11c7c:	clz	r1, r1
   11c80:	lsr	r1, r1, #5
   11c84:	orr	r0, r1, r0
   11c88:	str	r0, [fp, #-68]	; 0xffffffbc
   11c8c:	str	r2, [sp, #92]	; 0x5c
   11c90:	eor	r0, r2, #1
   11c94:	str	r0, [sp, #60]	; 0x3c
   11c98:	mov	r7, #0
   11c9c:	cmn	lr, #1
   11ca0:	beq	11cb0 <putchar_unlocked@plt+0xe4c>
   11ca4:	cmp	r7, lr
   11ca8:	bne	11cbc <putchar_unlocked@plt+0xe58>
   11cac:	b	127c8 <putchar_unlocked@plt+0x1964>
   11cb0:	ldrb	r0, [ip, r7]
   11cb4:	cmp	r0, #0
   11cb8:	beq	127c8 <putchar_unlocked@plt+0x1964>
   11cbc:	mov	r9, #0
   11cc0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11cc4:	cmp	r0, #0
   11cc8:	beq	11cfc <putchar_unlocked@plt+0xe98>
   11ccc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11cd0:	add	r4, r7, r0
   11cd4:	cmp	r0, #2
   11cd8:	bcc	11cf4 <putchar_unlocked@plt+0xe90>
   11cdc:	cmn	lr, #1
   11ce0:	bne	11cf4 <putchar_unlocked@plt+0xe90>
   11ce4:	mov	r0, ip
   11ce8:	bl	10db0 <strlen@plt>
   11cec:	ldr	ip, [fp, #-80]	; 0xffffffb0
   11cf0:	mov	lr, r0
   11cf4:	cmp	r4, lr
   11cf8:	bls	11d08 <putchar_unlocked@plt+0xea4>
   11cfc:	mov	r0, #0
   11d00:	str	r0, [fp, #-52]	; 0xffffffcc
   11d04:	b	11d4c <putchar_unlocked@plt+0xee8>
   11d08:	mov	r4, lr
   11d0c:	add	r0, ip, r7
   11d10:	ldr	r1, [fp, #-84]	; 0xffffffac
   11d14:	ldr	r2, [fp, #-72]	; 0xffffffb8
   11d18:	bl	10da4 <bcmp@plt>
   11d1c:	cmp	r0, #0
   11d20:	mov	r1, r0
   11d24:	movwne	r1, #1
   11d28:	ldr	r2, [fp, #-88]	; 0xffffffa8
   11d2c:	orr	r1, r1, r2
   11d30:	tst	r1, #1
   11d34:	beq	1289c <putchar_unlocked@plt+0x1a38>
   11d38:	clz	r0, r0
   11d3c:	lsr	r0, r0, #5
   11d40:	str	r0, [fp, #-52]	; 0xffffffcc
   11d44:	ldr	ip, [fp, #-80]	; 0xffffffb0
   11d48:	mov	lr, r4
   11d4c:	ldrb	r4, [ip, r7]
   11d50:	cmp	r4, #126	; 0x7e
   11d54:	bhi	12284 <putchar_unlocked@plt+0x1420>
   11d58:	mov	r6, #1
   11d5c:	mov	r2, #110	; 0x6e
   11d60:	mov	r0, #97	; 0x61
   11d64:	add	r3, pc, #4
   11d68:	mov	r1, #0
   11d6c:	ldr	pc, [r3, r4, lsl #2]
   11d70:	andeq	r2, r1, r4, ror #1
   11d74:	andeq	r2, r1, r4, lsl #5
   11d78:	andeq	r2, r1, r4, lsl #5
   11d7c:	andeq	r2, r1, r4, lsl #5
   11d80:	andeq	r2, r1, r4, lsl #5
   11d84:	andeq	r2, r1, r4, lsl #5
   11d88:	andeq	r2, r1, r4, lsl #5
   11d8c:	andeq	r2, r1, r8, asr r3
   11d90:	andeq	r2, r1, r4, asr #1
   11d94:	strheq	r2, [r1], -ip
   11d98:	ldrdeq	r2, [r1], -r0
   11d9c:	andeq	r2, r1, ip, ror #3
   11da0:	strheq	r2, [r1], -r4
   11da4:	andeq	r2, r1, ip, asr #1
   11da8:	andeq	r2, r1, r4, lsl #5
   11dac:	andeq	r2, r1, r4, lsl #5
   11db0:	andeq	r2, r1, r4, lsl #5
   11db4:	andeq	r2, r1, r4, lsl #5
   11db8:	andeq	r2, r1, r4, lsl #5
   11dbc:	andeq	r2, r1, r4, lsl #5
   11dc0:	andeq	r2, r1, r4, lsl #5
   11dc4:	andeq	r2, r1, r4, lsl #5
   11dc8:	andeq	r2, r1, r4, lsl #5
   11dcc:	andeq	r2, r1, r4, lsl #5
   11dd0:	andeq	r2, r1, r4, lsl #5
   11dd4:	andeq	r2, r1, r4, lsl #5
   11dd8:	andeq	r2, r1, r4, lsl #5
   11ddc:	andeq	r2, r1, r4, lsl #5
   11de0:	andeq	r2, r1, r4, lsl #5
   11de4:	andeq	r2, r1, r4, lsl #5
   11de8:	andeq	r2, r1, r4, lsl #5
   11dec:	andeq	r2, r1, r4, lsl #5
   11df0:	andeq	r2, r1, r8, rrx
   11df4:	andeq	r2, r1, ip, rrx
   11df8:	andeq	r2, r1, ip, rrx
   11dfc:	andeq	r2, r1, r4, asr r0
   11e00:	andeq	r2, r1, ip, rrx
   11e04:	andeq	r1, r1, ip, ror #30
   11e08:	andeq	r2, r1, ip, rrx
   11e0c:	strdeq	r2, [r1], -r4
   11e10:	andeq	r2, r1, ip, rrx
   11e14:	andeq	r2, r1, ip, rrx
   11e18:	andeq	r2, r1, ip, rrx
   11e1c:	andeq	r1, r1, ip, ror #30
   11e20:	andeq	r1, r1, ip, ror #30
   11e24:	andeq	r1, r1, ip, ror #30
   11e28:	andeq	r1, r1, ip, ror #30
   11e2c:	andeq	r1, r1, ip, ror #30
   11e30:	andeq	r1, r1, ip, ror #30
   11e34:	andeq	r1, r1, ip, ror #30
   11e38:	andeq	r1, r1, ip, ror #30
   11e3c:	andeq	r1, r1, ip, ror #30
   11e40:	andeq	r1, r1, ip, ror #30
   11e44:	andeq	r1, r1, ip, ror #30
   11e48:	andeq	r1, r1, ip, ror #30
   11e4c:	andeq	r1, r1, ip, ror #30
   11e50:	andeq	r1, r1, ip, ror #30
   11e54:	andeq	r1, r1, ip, ror #30
   11e58:	andeq	r1, r1, ip, ror #30
   11e5c:	andeq	r2, r1, ip, rrx
   11e60:	andeq	r2, r1, ip, rrx
   11e64:	andeq	r2, r1, ip, rrx
   11e68:	andeq	r2, r1, ip, rrx
   11e6c:			; <UNDEFINED> instruction: 0x000121bc
   11e70:	andeq	r2, r1, r4, lsl #5
   11e74:	andeq	r1, r1, ip, ror #30
   11e78:	andeq	r1, r1, ip, ror #30
   11e7c:	andeq	r1, r1, ip, ror #30
   11e80:	andeq	r1, r1, ip, ror #30
   11e84:	andeq	r1, r1, ip, ror #30
   11e88:	andeq	r1, r1, ip, ror #30
   11e8c:	andeq	r1, r1, ip, ror #30
   11e90:	andeq	r1, r1, ip, ror #30
   11e94:	andeq	r1, r1, ip, ror #30
   11e98:	andeq	r1, r1, ip, ror #30
   11e9c:	andeq	r1, r1, ip, ror #30
   11ea0:	andeq	r1, r1, ip, ror #30
   11ea4:	andeq	r1, r1, ip, ror #30
   11ea8:	andeq	r1, r1, ip, ror #30
   11eac:	andeq	r1, r1, ip, ror #30
   11eb0:	andeq	r1, r1, ip, ror #30
   11eb4:	andeq	r1, r1, ip, ror #30
   11eb8:	andeq	r1, r1, ip, ror #30
   11ebc:	andeq	r1, r1, ip, ror #30
   11ec0:	andeq	r1, r1, ip, ror #30
   11ec4:	andeq	r1, r1, ip, ror #30
   11ec8:	andeq	r1, r1, ip, ror #30
   11ecc:	andeq	r1, r1, ip, ror #30
   11ed0:	andeq	r1, r1, ip, ror #30
   11ed4:	andeq	r1, r1, ip, ror #30
   11ed8:	andeq	r1, r1, ip, ror #30
   11edc:	andeq	r2, r1, ip, rrx
   11ee0:	muleq	r1, r4, r0
   11ee4:	andeq	r1, r1, ip, ror #30
   11ee8:	andeq	r2, r1, ip, rrx
   11eec:	andeq	r1, r1, ip, ror #30
   11ef0:	andeq	r2, r1, ip, rrx
   11ef4:	andeq	r1, r1, ip, ror #30
   11ef8:	andeq	r1, r1, ip, ror #30
   11efc:	andeq	r1, r1, ip, ror #30
   11f00:	andeq	r1, r1, ip, ror #30
   11f04:	andeq	r1, r1, ip, ror #30
   11f08:	andeq	r1, r1, ip, ror #30
   11f0c:	andeq	r1, r1, ip, ror #30
   11f10:	andeq	r1, r1, ip, ror #30
   11f14:	andeq	r1, r1, ip, ror #30
   11f18:	andeq	r1, r1, ip, ror #30
   11f1c:	andeq	r1, r1, ip, ror #30
   11f20:	andeq	r1, r1, ip, ror #30
   11f24:	andeq	r1, r1, ip, ror #30
   11f28:	andeq	r1, r1, ip, ror #30
   11f2c:	andeq	r1, r1, ip, ror #30
   11f30:	andeq	r1, r1, ip, ror #30
   11f34:	andeq	r1, r1, ip, ror #30
   11f38:	andeq	r1, r1, ip, ror #30
   11f3c:	andeq	r1, r1, ip, ror #30
   11f40:	andeq	r1, r1, ip, ror #30
   11f44:	andeq	r1, r1, ip, ror #30
   11f48:	andeq	r1, r1, ip, ror #30
   11f4c:	andeq	r1, r1, ip, ror #30
   11f50:	andeq	r1, r1, ip, ror #30
   11f54:	andeq	r1, r1, ip, ror #30
   11f58:	andeq	r1, r1, ip, ror #30
   11f5c:	andeq	r2, r1, r8, lsr #32
   11f60:	andeq	r2, r1, ip, rrx
   11f64:	andeq	r2, r1, r8, lsr #32
   11f68:	andeq	r2, r1, r4, asr r0
   11f6c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   11f70:	tst	r0, #1
   11f74:	bne	11fa0 <putchar_unlocked@plt+0x113c>
   11f78:	ubfx	r0, r4, #5, #3
   11f7c:	ldr	r1, [fp, #16]
   11f80:	ldr	r0, [r1, r0, lsl #2]
   11f84:	and	r1, r4, #31
   11f88:	mov	r2, #1
   11f8c:	tst	r0, r2, lsl r1
   11f90:	beq	11fa0 <putchar_unlocked@plt+0x113c>
   11f94:	mov	r0, r4
   11f98:	mov	r1, r6
   11f9c:	b	11fb4 <putchar_unlocked@plt+0x1150>
   11fa0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11fa4:	cmp	r0, #0
   11fa8:	mov	r0, r4
   11fac:	mov	r1, r6
   11fb0:	beq	122ec <putchar_unlocked@plt+0x1488>
   11fb4:	ldr	r2, [fp, #-76]	; 0xffffffb4
   11fb8:	tst	r2, #1
   11fbc:	bne	128b0 <putchar_unlocked@plt+0x1a4c>
   11fc0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   11fc4:	subs	r2, r2, #2
   11fc8:	movwne	r2, #1
   11fcc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   11fd0:	orr	r2, r2, r3
   11fd4:	tst	r2, #1
   11fd8:	bne	12014 <putchar_unlocked@plt+0x11b0>
   11fdc:	cmp	r8, sl
   11fe0:	movcc	r2, #39	; 0x27
   11fe4:	strbcc	r2, [r5, r8]
   11fe8:	add	r2, r8, #1
   11fec:	cmp	r2, sl
   11ff0:	movcc	r3, #36	; 0x24
   11ff4:	strbcc	r3, [r5, r2]
   11ff8:	add	r2, r8, #2
   11ffc:	cmp	r2, sl
   12000:	movcc	r3, #39	; 0x27
   12004:	strbcc	r3, [r5, r2]
   12008:	add	r8, r8, #3
   1200c:	mov	r2, #1
   12010:	str	r2, [fp, #-56]	; 0xffffffc8
   12014:	cmp	r8, sl
   12018:	movcc	r2, #92	; 0x5c
   1201c:	strbcc	r2, [r5, r8]
   12020:	add	r8, r8, #1
   12024:	b	12330 <putchar_unlocked@plt+0x14cc>
   12028:	cmp	lr, #1
   1202c:	beq	12054 <putchar_unlocked@plt+0x11f0>
   12030:	mov	r6, #0
   12034:	cmn	lr, #1
   12038:	bne	12060 <putchar_unlocked@plt+0x11fc>
   1203c:	ldrb	r0, [ip, #1]
   12040:	cmp	r0, #0
   12044:	beq	12054 <putchar_unlocked@plt+0x11f0>
   12048:	mvn	lr, #0
   1204c:	mov	r9, #0
   12050:	b	11f6c <putchar_unlocked@plt+0x1108>
   12054:	mov	r6, #0
   12058:	cmp	r7, #0
   1205c:	beq	12068 <putchar_unlocked@plt+0x1204>
   12060:	mov	r9, #0
   12064:	b	11f6c <putchar_unlocked@plt+0x1108>
   12068:	mov	r1, #1
   1206c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12070:	cmp	r0, #2
   12074:	bne	1208c <putchar_unlocked@plt+0x1228>
   12078:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1207c:	tst	r0, #1
   12080:	mov	r6, r1
   12084:	beq	11f6c <putchar_unlocked@plt+0x1108>
   12088:	b	128b0 <putchar_unlocked@plt+0x1a4c>
   1208c:	mov	r6, r1
   12090:	b	11f6c <putchar_unlocked@plt+0x1108>
   12094:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12098:	cmp	r0, #2
   1209c:	bne	122d0 <putchar_unlocked@plt+0x146c>
   120a0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   120a4:	tst	r0, #1
   120a8:	bne	128b0 <putchar_unlocked@plt+0x1a4c>
   120ac:	mov	r9, #0
   120b0:	b	122e4 <putchar_unlocked@plt+0x1480>
   120b4:	mov	r0, #102	; 0x66
   120b8:	b	12358 <putchar_unlocked@plt+0x14f4>
   120bc:	mov	r2, #116	; 0x74
   120c0:	b	120d0 <putchar_unlocked@plt+0x126c>
   120c4:	mov	r0, #98	; 0x62
   120c8:	b	12358 <putchar_unlocked@plt+0x14f4>
   120cc:	mov	r2, #114	; 0x72
   120d0:	ldr	r0, [sp, #72]	; 0x48
   120d4:	tst	r0, #1
   120d8:	mov	r0, r2
   120dc:	bne	12358 <putchar_unlocked@plt+0x14f4>
   120e0:	b	128b0 <putchar_unlocked@plt+0x1a4c>
   120e4:	ldr	r0, [sp, #92]	; 0x5c
   120e8:	tst	r0, #1
   120ec:	beq	12374 <putchar_unlocked@plt+0x1510>
   120f0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   120f4:	tst	r0, #1
   120f8:	bne	128b0 <putchar_unlocked@plt+0x1a4c>
   120fc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12100:	subs	r0, r0, #2
   12104:	movwne	r0, #1
   12108:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1210c:	orr	r0, r0, r1
   12110:	tst	r0, #1
   12114:	bne	12150 <putchar_unlocked@plt+0x12ec>
   12118:	cmp	r8, sl
   1211c:	movcc	r0, #39	; 0x27
   12120:	strbcc	r0, [r5, r8]
   12124:	add	r0, r8, #1
   12128:	cmp	r0, sl
   1212c:	movcc	r1, #36	; 0x24
   12130:	strbcc	r1, [r5, r0]
   12134:	add	r0, r8, #2
   12138:	cmp	r0, sl
   1213c:	movcc	r1, #39	; 0x27
   12140:	strbcc	r1, [r5, r0]
   12144:	add	r8, r8, #3
   12148:	mov	r0, #1
   1214c:	str	r0, [fp, #-56]	; 0xffffffc8
   12150:	cmp	r8, sl
   12154:	movcc	r0, #92	; 0x5c
   12158:	strbcc	r0, [r5, r8]
   1215c:	add	r0, r8, #1
   12160:	mov	r6, #0
   12164:	mov	r9, #1
   12168:	mov	r4, #48	; 0x30
   1216c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   12170:	cmp	r1, #2
   12174:	beq	12538 <putchar_unlocked@plt+0x16d4>
   12178:	add	r1, r7, #1
   1217c:	cmp	r1, lr
   12180:	bcs	12538 <putchar_unlocked@plt+0x16d4>
   12184:	ldrb	r1, [ip, r1]
   12188:	sub	r1, r1, #48	; 0x30
   1218c:	uxtb	r1, r1
   12190:	cmp	r1, #9
   12194:	bhi	12538 <putchar_unlocked@plt+0x16d4>
   12198:	cmp	r0, sl
   1219c:	movcc	r1, #48	; 0x30
   121a0:	strbcc	r1, [r5, r0]
   121a4:	add	r0, r8, #2
   121a8:	cmp	r0, sl
   121ac:	movcc	r1, #48	; 0x30
   121b0:	strbcc	r1, [r5, r0]
   121b4:	add	r8, r8, #3
   121b8:	b	11f6c <putchar_unlocked@plt+0x1108>
   121bc:	mov	r9, #0
   121c0:	mov	r4, #63	; 0x3f
   121c4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   121c8:	cmp	r0, #5
   121cc:	beq	12540 <putchar_unlocked@plt+0x16dc>
   121d0:	cmp	r0, #2
   121d4:	bne	125e8 <putchar_unlocked@plt+0x1784>
   121d8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   121dc:	tst	r0, #1
   121e0:	mov	r6, #0
   121e4:	beq	11f6c <putchar_unlocked@plt+0x1108>
   121e8:	b	128b0 <putchar_unlocked@plt+0x1a4c>
   121ec:	mov	r0, #118	; 0x76
   121f0:	b	12358 <putchar_unlocked@plt+0x14f4>
   121f4:	mov	r4, #39	; 0x27
   121f8:	mov	r0, #1
   121fc:	str	r0, [sp, #64]	; 0x40
   12200:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12204:	cmp	r0, #2
   12208:	bne	12390 <putchar_unlocked@plt+0x152c>
   1220c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12210:	tst	r0, #1
   12214:	bne	128b0 <putchar_unlocked@plt+0x1a4c>
   12218:	ldr	r2, [sp, #84]	; 0x54
   1221c:	cmp	r2, #0
   12220:	mov	r0, r2
   12224:	movwne	r0, #1
   12228:	clz	r1, sl
   1222c:	lsr	r1, r1, #5
   12230:	orrs	r0, r0, r1
   12234:	moveq	r2, sl
   12238:	str	r2, [sp, #84]	; 0x54
   1223c:	moveq	sl, r0
   12240:	cmp	r8, sl
   12244:	movcc	r0, #39	; 0x27
   12248:	strbcc	r0, [r5, r8]
   1224c:	add	r0, r8, #1
   12250:	cmp	r0, sl
   12254:	movcc	r1, #92	; 0x5c
   12258:	strbcc	r1, [r5, r0]
   1225c:	add	r0, r8, #2
   12260:	cmp	r0, sl
   12264:	movcc	r1, #39	; 0x27
   12268:	strbcc	r1, [r5, r0]
   1226c:	add	r8, r8, #3
   12270:	mov	r0, #0
   12274:	str	r0, [fp, #-56]	; 0xffffffc8
   12278:	mov	r9, #0
   1227c:	mov	r6, #1
   12280:	b	11f6c <putchar_unlocked@plt+0x1108>
   12284:	ldr	r0, [sp, #44]	; 0x2c
   12288:	cmp	r0, #1
   1228c:	bne	12398 <putchar_unlocked@plt+0x1534>
   12290:	str	lr, [sp, #32]
   12294:	bl	10d8c <__ctype_b_loc@plt>
   12298:	ldr	ip, [fp, #-80]	; 0xffffffb0
   1229c:	ldr	r0, [r0]
   122a0:	add	r0, r0, r4, lsl #1
   122a4:	ldrb	r0, [r0, #1]
   122a8:	ubfx	r6, r0, #6, #1
   122ac:	mov	r2, #1
   122b0:	ldr	r0, [sp, #60]	; 0x3c
   122b4:	orr	r1, r6, r0
   122b8:	cmp	r2, #1
   122bc:	bhi	125f0 <putchar_unlocked@plt+0x178c>
   122c0:	tst	r1, #1
   122c4:	beq	125f0 <putchar_unlocked@plt+0x178c>
   122c8:	ldr	lr, [sp, #32]
   122cc:	b	11f6c <putchar_unlocked@plt+0x1108>
   122d0:	mov	r9, #0
   122d4:	mov	r0, #92	; 0x5c
   122d8:	ldr	r1, [sp, #56]	; 0x38
   122dc:	cmp	r1, #0
   122e0:	beq	12358 <putchar_unlocked@plt+0x14f4>
   122e4:	mov	r4, #92	; 0x5c
   122e8:	mov	r6, #0
   122ec:	cmp	r9, #0
   122f0:	bne	12328 <putchar_unlocked@plt+0x14c4>
   122f4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   122f8:	tst	r0, #1
   122fc:	beq	12328 <putchar_unlocked@plt+0x14c4>
   12300:	cmp	r8, sl
   12304:	movcc	r0, #39	; 0x27
   12308:	strbcc	r0, [r5, r8]
   1230c:	add	r0, r8, #1
   12310:	cmp	r0, sl
   12314:	movcc	r1, #39	; 0x27
   12318:	strbcc	r1, [r5, r0]
   1231c:	add	r8, r8, #2
   12320:	mov	r0, #0
   12324:	str	r0, [fp, #-56]	; 0xffffffc8
   12328:	mov	r1, r6
   1232c:	mov	r0, r4
   12330:	cmp	r8, sl
   12334:	strbcc	r0, [r5, r8]
   12338:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1233c:	and	r0, r0, r1
   12340:	str	r0, [fp, #-48]	; 0xffffffd0
   12344:	add	r8, r8, #1
   12348:	add	r7, r7, #1
   1234c:	cmn	lr, #1
   12350:	bne	11ca4 <putchar_unlocked@plt+0xe40>
   12354:	b	11cb0 <putchar_unlocked@plt+0xe4c>
   12358:	mov	r9, #0
   1235c:	ldr	r1, [sp, #92]	; 0x5c
   12360:	tst	r1, #1
   12364:	mov	r6, #0
   12368:	mov	r1, #0
   1236c:	beq	11f6c <putchar_unlocked@plt+0x1108>
   12370:	b	11fb4 <putchar_unlocked@plt+0x1150>
   12374:	mov	r4, #0
   12378:	ldr	r0, [sp, #40]	; 0x28
   1237c:	cmp	r0, #0
   12380:	mov	r9, #0
   12384:	mov	r6, #0
   12388:	beq	11f6c <putchar_unlocked@plt+0x1108>
   1238c:	b	12348 <putchar_unlocked@plt+0x14e4>
   12390:	mov	r6, #1
   12394:	b	11f6c <putchar_unlocked@plt+0x1108>
   12398:	mov	r0, #0
   1239c:	str	r0, [fp, #-36]	; 0xffffffdc
   123a0:	str	r0, [fp, #-40]	; 0xffffffd8
   123a4:	cmn	lr, #1
   123a8:	bne	123bc <putchar_unlocked@plt+0x1558>
   123ac:	mov	r0, ip
   123b0:	bl	10db0 <strlen@plt>
   123b4:	ldr	ip, [fp, #-80]	; 0xffffffb0
   123b8:	mov	lr, r0
   123bc:	ldr	r0, [sp, #76]	; 0x4c
   123c0:	add	r0, r0, r7
   123c4:	str	r0, [sp, #24]
   123c8:	mov	r6, #1
   123cc:	mov	r2, #0
   123d0:	sub	r0, fp, #40	; 0x28
   123d4:	mov	r3, r0
   123d8:	str	r5, [sp, #28]
   123dc:	str	lr, [sp, #32]
   123e0:	b	12424 <putchar_unlocked@plt+0x15c0>
   123e4:	ldr	r5, [sp, #52]	; 0x34
   123e8:	add	r5, r0, r5
   123ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   123f0:	bl	10cf0 <iswprint@plt>
   123f4:	cmp	r0, #0
   123f8:	movwne	r0, #1
   123fc:	and	r6, r6, r0
   12400:	sub	r0, fp, #40	; 0x28
   12404:	bl	10cc0 <mbsinit@plt>
   12408:	sub	r3, fp, #40	; 0x28
   1240c:	mov	r2, r5
   12410:	ldr	lr, [sp, #32]
   12414:	cmp	r0, #0
   12418:	ldr	r5, [sp, #28]
   1241c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12420:	bne	122b0 <putchar_unlocked@plt+0x144c>
   12424:	str	r2, [sp, #52]	; 0x34
   12428:	add	r0, r2, r7
   1242c:	add	r1, ip, r0
   12430:	str	r0, [sp, #48]	; 0x30
   12434:	sub	r2, lr, r0
   12438:	sub	r0, fp, #44	; 0x2c
   1243c:	bl	14338 <putchar_unlocked@plt+0x34d4>
   12440:	cmp	r0, #0
   12444:	beq	127bc <putchar_unlocked@plt+0x1958>
   12448:	cmn	r0, #1
   1244c:	beq	12778 <putchar_unlocked@plt+0x1914>
   12450:	cmn	r0, #2
   12454:	ldr	lr, [sp, #32]
   12458:	beq	12780 <putchar_unlocked@plt+0x191c>
   1245c:	cmp	r0, #2
   12460:	mov	r1, #0
   12464:	movwcc	r1, #1
   12468:	ldr	r2, [sp, #68]	; 0x44
   1246c:	eor	r2, r2, #1
   12470:	orrs	r1, r2, r1
   12474:	bne	123e4 <putchar_unlocked@plt+0x1580>
   12478:	ldr	r1, [sp, #52]	; 0x34
   1247c:	ldr	r2, [sp, #24]
   12480:	add	r1, r2, r1
   12484:	sub	r2, r0, #1
   12488:	b	12498 <putchar_unlocked@plt+0x1634>
   1248c:	add	r1, r1, #1
   12490:	subs	r2, r2, #1
   12494:	beq	123e4 <putchar_unlocked@plt+0x1580>
   12498:	ldrb	r3, [r1]
   1249c:	sub	r3, r3, #91	; 0x5b
   124a0:	cmp	r3, #33	; 0x21
   124a4:	bhi	1248c <putchar_unlocked@plt+0x1628>
   124a8:	add	r5, pc, #0
   124ac:	ldr	pc, [r5, r3, lsl #2]
   124b0:	andeq	r2, r1, r8, lsr #17
   124b4:	andeq	r2, r1, r8, lsr #17
   124b8:	andeq	r2, r1, ip, lsl #9
   124bc:	andeq	r2, r1, r8, lsr #17
   124c0:	andeq	r2, r1, ip, lsl #9
   124c4:	andeq	r2, r1, r8, lsr #17
   124c8:	andeq	r2, r1, ip, lsl #9
   124cc:	andeq	r2, r1, ip, lsl #9
   124d0:	andeq	r2, r1, ip, lsl #9
   124d4:	andeq	r2, r1, ip, lsl #9
   124d8:	andeq	r2, r1, ip, lsl #9
   124dc:	andeq	r2, r1, ip, lsl #9
   124e0:	andeq	r2, r1, ip, lsl #9
   124e4:	andeq	r2, r1, ip, lsl #9
   124e8:	andeq	r2, r1, ip, lsl #9
   124ec:	andeq	r2, r1, ip, lsl #9
   124f0:	andeq	r2, r1, ip, lsl #9
   124f4:	andeq	r2, r1, ip, lsl #9
   124f8:	andeq	r2, r1, ip, lsl #9
   124fc:	andeq	r2, r1, ip, lsl #9
   12500:	andeq	r2, r1, ip, lsl #9
   12504:	andeq	r2, r1, ip, lsl #9
   12508:	andeq	r2, r1, ip, lsl #9
   1250c:	andeq	r2, r1, ip, lsl #9
   12510:	andeq	r2, r1, ip, lsl #9
   12514:	andeq	r2, r1, ip, lsl #9
   12518:	andeq	r2, r1, ip, lsl #9
   1251c:	andeq	r2, r1, ip, lsl #9
   12520:	andeq	r2, r1, ip, lsl #9
   12524:	andeq	r2, r1, ip, lsl #9
   12528:	andeq	r2, r1, ip, lsl #9
   1252c:	andeq	r2, r1, ip, lsl #9
   12530:	andeq	r2, r1, ip, lsl #9
   12534:	andeq	r2, r1, r8, lsr #17
   12538:	mov	r8, r0
   1253c:	b	11f6c <putchar_unlocked@plt+0x1108>
   12540:	ldr	r0, [sp, #36]	; 0x24
   12544:	cmp	r0, #0
   12548:	beq	125e8 <putchar_unlocked@plt+0x1784>
   1254c:	add	r0, r7, #2
   12550:	cmp	r0, lr
   12554:	bcs	125e8 <putchar_unlocked@plt+0x1784>
   12558:	add	r1, r7, ip
   1255c:	ldrb	r1, [r1, #1]
   12560:	cmp	r1, #63	; 0x3f
   12564:	bne	125e8 <putchar_unlocked@plt+0x1784>
   12568:	ldrb	r1, [ip, r0]
   1256c:	sub	r2, r1, #33	; 0x21
   12570:	cmp	r2, #29
   12574:	bhi	125e8 <putchar_unlocked@plt+0x1784>
   12578:	mov	r3, #1
   1257c:	movw	r6, #20929	; 0x51c1
   12580:	movt	r6, #14336	; 0x3800
   12584:	tst	r6, r3, lsl r2
   12588:	beq	125e8 <putchar_unlocked@plt+0x1784>
   1258c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12590:	tst	r2, #1
   12594:	bne	128b0 <putchar_unlocked@plt+0x1a4c>
   12598:	cmp	r8, sl
   1259c:	movcc	r2, #63	; 0x3f
   125a0:	strbcc	r2, [r5, r8]
   125a4:	add	r2, r8, #1
   125a8:	cmp	r2, sl
   125ac:	movcc	r3, #34	; 0x22
   125b0:	strbcc	r3, [r5, r2]
   125b4:	add	r2, r8, #2
   125b8:	cmp	r2, sl
   125bc:	movcc	r3, #34	; 0x22
   125c0:	strbcc	r3, [r5, r2]
   125c4:	add	r2, r8, #3
   125c8:	cmp	r2, sl
   125cc:	movcc	r3, #63	; 0x3f
   125d0:	strbcc	r3, [r5, r2]
   125d4:	add	r8, r8, #4
   125d8:	mov	r7, r0
   125dc:	mov	r4, r1
   125e0:	mov	r6, #0
   125e4:	b	11f6c <putchar_unlocked@plt+0x1108>
   125e8:	mov	r6, #0
   125ec:	b	11f6c <putchar_unlocked@plt+0x1108>
   125f0:	add	r0, r2, r7
   125f4:	str	r0, [sp, #52]	; 0x34
   125f8:	mov	r2, #0
   125fc:	ldr	lr, [sp, #32]
   12600:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12604:	str	r1, [sp, #48]	; 0x30
   12608:	tst	r1, #1
   1260c:	bne	126e8 <putchar_unlocked@plt+0x1884>
   12610:	ldr	r1, [fp, #-76]	; 0xffffffb4
   12614:	tst	r1, #1
   12618:	bne	128b0 <putchar_unlocked@plt+0x1a4c>
   1261c:	mov	r3, r0
   12620:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12624:	subs	r1, r0, #2
   12628:	movwne	r1, #1
   1262c:	orr	r1, r1, r3
   12630:	tst	r1, #1
   12634:	bne	1266c <putchar_unlocked@plt+0x1808>
   12638:	cmp	r8, sl
   1263c:	movcc	r0, #39	; 0x27
   12640:	strbcc	r0, [r5, r8]
   12644:	add	r2, r8, #1
   12648:	cmp	r2, sl
   1264c:	movcc	r0, #36	; 0x24
   12650:	strbcc	r0, [r5, r2]
   12654:	add	r2, r8, #2
   12658:	cmp	r2, sl
   1265c:	movcc	r0, #39	; 0x27
   12660:	strbcc	r0, [r5, r2]
   12664:	add	r8, r8, #3
   12668:	mov	r3, #1
   1266c:	cmp	r8, sl
   12670:	movcc	r1, #92	; 0x5c
   12674:	strbcc	r1, [r5, r8]
   12678:	add	r2, r8, #1
   1267c:	cmp	r2, sl
   12680:	bcs	12694 <putchar_unlocked@plt+0x1830>
   12684:	uxtb	r1, r4
   12688:	mov	r0, #48	; 0x30
   1268c:	orr	r1, r0, r1, lsr #6
   12690:	strb	r1, [r5, r2]
   12694:	add	r2, r8, #2
   12698:	cmp	r2, sl
   1269c:	lsrcc	r1, r4, #3
   126a0:	movcc	r0, #6
   126a4:	bficc	r1, r0, #3, #29
   126a8:	strbcc	r1, [r5, r2]
   126ac:	mov	r0, #6
   126b0:	bfi	r4, r0, #3, #29
   126b4:	add	r8, r8, #3
   126b8:	mov	r2, #1
   126bc:	mov	r0, r3
   126c0:	b	1270c <putchar_unlocked@plt+0x18a8>
   126c4:	cmp	r8, sl
   126c8:	strbcc	r4, [r5, r8]
   126cc:	ldr	r1, [sp, #76]	; 0x4c
   126d0:	ldrb	r4, [r1, r7]
   126d4:	add	r8, r8, #1
   126d8:	mov	r7, r3
   126dc:	ldr	r1, [sp, #48]	; 0x30
   126e0:	tst	r1, #1
   126e4:	beq	12610 <putchar_unlocked@plt+0x17ac>
   126e8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   126ec:	tst	r1, #1
   126f0:	beq	12704 <putchar_unlocked@plt+0x18a0>
   126f4:	cmp	r8, sl
   126f8:	movcc	r1, #92	; 0x5c
   126fc:	strbcc	r1, [r5, r8]
   12700:	add	r8, r8, #1
   12704:	mov	r1, #0
   12708:	str	r1, [fp, #-52]	; 0xffffffcc
   1270c:	and	r9, r2, #1
   12710:	add	r3, r7, #1
   12714:	ldr	r1, [sp, #52]	; 0x34
   12718:	cmp	r1, r3
   1271c:	bls	12760 <putchar_unlocked@plt+0x18fc>
   12720:	cmp	r9, #0
   12724:	movwne	r9, #1
   12728:	mvn	r1, r0
   1272c:	orr	r1, r1, r9
   12730:	tst	r1, #1
   12734:	bne	126c4 <putchar_unlocked@plt+0x1860>
   12738:	cmp	r8, sl
   1273c:	movcc	r1, #39	; 0x27
   12740:	strbcc	r1, [r5, r8]
   12744:	add	r1, r8, #1
   12748:	cmp	r1, sl
   1274c:	movcc	r0, #39	; 0x27
   12750:	strbcc	r0, [r5, r1]
   12754:	add	r8, r8, #2
   12758:	mov	r0, #0
   1275c:	b	126c4 <putchar_unlocked@plt+0x1860>
   12760:	str	r0, [fp, #-56]	; 0xffffffc8
   12764:	cmp	r9, #0
   12768:	movwne	r9, #1
   1276c:	cmp	r9, #0
   12770:	beq	122f4 <putchar_unlocked@plt+0x1490>
   12774:	b	12328 <putchar_unlocked@plt+0x14c4>
   12778:	mov	r6, #0
   1277c:	b	127bc <putchar_unlocked@plt+0x1958>
   12780:	mov	r6, #0
   12784:	ldr	r0, [sp, #48]	; 0x30
   12788:	cmp	r0, lr
   1278c:	bcs	127bc <putchar_unlocked@plt+0x1958>
   12790:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12794:	add	r0, ip, r7
   12798:	ldr	r2, [sp, #52]	; 0x34
   1279c:	ldrb	r1, [r0, r2]
   127a0:	cmp	r1, #0
   127a4:	beq	122b0 <putchar_unlocked@plt+0x144c>
   127a8:	add	r2, r2, #1
   127ac:	add	r1, r7, r2
   127b0:	cmp	r1, lr
   127b4:	bcc	1279c <putchar_unlocked@plt+0x1938>
   127b8:	b	122b0 <putchar_unlocked@plt+0x144c>
   127bc:	ldr	ip, [fp, #-80]	; 0xffffffb0
   127c0:	ldr	r2, [sp, #52]	; 0x34
   127c4:	b	122b0 <putchar_unlocked@plt+0x144c>
   127c8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   127cc:	eor	r0, r1, #2
   127d0:	orr	r0, r0, r8
   127d4:	clz	r0, r0
   127d8:	lsr	r0, r0, #5
   127dc:	ldr	r3, [fp, #-76]	; 0xffffffb4
   127e0:	tst	r3, r0
   127e4:	bne	128b0 <putchar_unlocked@plt+0x1a4c>
   127e8:	mov	r6, r5
   127ec:	subs	r0, r1, #2
   127f0:	movwne	r0, #1
   127f4:	orr	r0, r3, r0
   127f8:	tst	r0, #1
   127fc:	ldr	r2, [sp, #92]	; 0x5c
   12800:	ldreq	r0, [sp, #64]	; 0x40
   12804:	eoreq	r0, r0, #1
   12808:	tsteq	r0, #1
   1280c:	bne	1284c <putchar_unlocked@plt+0x19e8>
   12810:	mov	r9, lr
   12814:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12818:	tst	r0, #1
   1281c:	bne	12918 <putchar_unlocked@plt+0x1ab4>
   12820:	ldr	r0, [sp, #84]	; 0x54
   12824:	cmp	r0, #0
   12828:	beq	1284c <putchar_unlocked@plt+0x19e8>
   1282c:	mov	r0, #0
   12830:	str	r0, [fp, #-48]	; 0xffffffd0
   12834:	mov	r1, #2
   12838:	cmp	sl, #0
   1283c:	mov	r0, r2
   12840:	mov	r4, r3
   12844:	ldr	r7, [sp, #84]	; 0x54
   12848:	beq	11a24 <putchar_unlocked@plt+0xbc0>
   1284c:	ldr	r1, [fp, #-84]	; 0xffffffac
   12850:	clz	r0, r1
   12854:	lsr	r0, r0, #5
   12858:	orr	r0, r0, r3
   1285c:	tst	r0, #1
   12860:	bne	1288c <putchar_unlocked@plt+0x1a28>
   12864:	ldrb	r0, [r1]
   12868:	cmp	r0, #0
   1286c:	beq	1288c <putchar_unlocked@plt+0x1a28>
   12870:	add	r1, r1, #1
   12874:	cmp	r8, sl
   12878:	strbcc	r0, [r6, r8]
   1287c:	add	r8, r8, #1
   12880:	ldrb	r0, [r1], #1
   12884:	cmp	r0, #0
   12888:	bne	12874 <putchar_unlocked@plt+0x1a10>
   1288c:	cmp	r8, sl
   12890:	movcc	r0, #0
   12894:	strbcc	r0, [r6, r8]
   12898:	b	1290c <putchar_unlocked@plt+0x1aa8>
   1289c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   128a0:	mov	lr, r4
   128a4:	b	128b0 <putchar_unlocked@plt+0x1a4c>
   128a8:	ldr	r5, [sp, #28]
   128ac:	ldr	ip, [fp, #-80]	; 0xffffffb0
   128b0:	mov	r0, #0
   128b4:	ldr	r1, [fp, #12]
   128b8:	bic	r1, r1, #2
   128bc:	mov	r2, #2
   128c0:	ldr	r3, [sp, #92]	; 0x5c
   128c4:	tst	r3, #1
   128c8:	movwne	r2, #4
   128cc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   128d0:	cmp	r3, #2
   128d4:	movne	r2, r3
   128d8:	str	r2, [sp]
   128dc:	str	r1, [sp, #4]
   128e0:	str	r0, [sp, #8]
   128e4:	ldr	r0, [sp, #80]	; 0x50
   128e8:	str	r0, [sp, #12]
   128ec:	ldr	r0, [sp, #88]	; 0x58
   128f0:	str	r0, [sp, #16]
   128f4:	mov	r0, r5
   128f8:	mov	r1, sl
   128fc:	mov	r2, ip
   12900:	mov	r3, lr
   12904:	bl	11998 <putchar_unlocked@plt+0xb34>
   12908:	mov	r8, r0
   1290c:	mov	r0, r8
   12910:	sub	sp, fp, #28
   12914:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12918:	mov	r0, #5
   1291c:	str	r0, [sp]
   12920:	ldr	r0, [fp, #12]
   12924:	str	r0, [sp, #4]
   12928:	ldr	r0, [fp, #16]
   1292c:	str	r0, [sp, #8]
   12930:	ldr	r0, [sp, #80]	; 0x50
   12934:	str	r0, [sp, #12]
   12938:	ldr	r0, [sp, #88]	; 0x58
   1293c:	str	r0, [sp, #16]
   12940:	mov	r0, r6
   12944:	ldr	r1, [sp, #84]	; 0x54
   12948:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1294c:	mov	r3, r9
   12950:	b	12904 <putchar_unlocked@plt+0x1aa0>
   12954:	bl	10e58 <abort@plt>
   12958:	mov	r3, r2
   1295c:	mov	r2, #0
   12960:	b	12964 <putchar_unlocked@plt+0x1b00>
   12964:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12968:	add	fp, sp, #28
   1296c:	sub	sp, sp, #36	; 0x24
   12970:	mov	r4, r2
   12974:	str	r2, [sp, #24]
   12978:	mov	r5, r1
   1297c:	mov	r6, r0
   12980:	str	r0, [sp, #20]
   12984:	movw	r8, #24896	; 0x6140
   12988:	movt	r8, #2
   1298c:	cmp	r3, #0
   12990:	movne	r8, r3
   12994:	bl	10dbc <__errno_location@plt>
   12998:	str	r0, [sp, #28]
   1299c:	ldm	r8, {r3, r9}
   129a0:	ldr	r1, [r8, #40]	; 0x28
   129a4:	ldr	r2, [r8, #44]	; 0x2c
   129a8:	ldr	r7, [r0]
   129ac:	str	r7, [sp, #32]
   129b0:	add	sl, r8, #8
   129b4:	cmp	r4, #0
   129b8:	orreq	r9, r9, #1
   129bc:	stm	sp, {r3, r9, sl}
   129c0:	str	r1, [sp, #12]
   129c4:	str	r2, [sp, #16]
   129c8:	mov	r0, #0
   129cc:	mov	r1, #0
   129d0:	mov	r2, r6
   129d4:	mov	r3, r5
   129d8:	mov	r7, r5
   129dc:	bl	11998 <putchar_unlocked@plt+0xb34>
   129e0:	mov	r5, r0
   129e4:	add	r4, r0, #1
   129e8:	mov	r0, r4
   129ec:	bl	1386c <putchar_unlocked@plt+0x2a08>
   129f0:	mov	r6, r0
   129f4:	ldr	r0, [r8]
   129f8:	ldr	r1, [r8, #40]	; 0x28
   129fc:	ldr	r2, [r8, #44]	; 0x2c
   12a00:	stm	sp, {r0, r9, sl}
   12a04:	str	r1, [sp, #12]
   12a08:	str	r2, [sp, #16]
   12a0c:	mov	r0, r6
   12a10:	mov	r1, r4
   12a14:	ldr	r2, [sp, #20]
   12a18:	mov	r3, r7
   12a1c:	bl	11998 <putchar_unlocked@plt+0xb34>
   12a20:	ldr	r0, [sp, #24]
   12a24:	ldr	r1, [sp, #32]
   12a28:	ldr	r2, [sp, #28]
   12a2c:	str	r1, [r2]
   12a30:	cmp	r0, #0
   12a34:	strne	r5, [r0]
   12a38:	mov	r0, r6
   12a3c:	sub	sp, fp, #28
   12a40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a44:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12a48:	add	fp, sp, #24
   12a4c:	movw	r8, #24784	; 0x60d0
   12a50:	movt	r8, #2
   12a54:	ldr	r4, [r8]
   12a58:	movw	r5, #24788	; 0x60d4
   12a5c:	movt	r5, #2
   12a60:	ldr	r0, [r5]
   12a64:	cmp	r0, #2
   12a68:	blt	12a94 <putchar_unlocked@plt+0x1c30>
   12a6c:	add	r7, r4, #12
   12a70:	mov	r6, #0
   12a74:	ldr	r0, [r7, r6, lsl #3]
   12a78:	bl	11734 <putchar_unlocked@plt+0x8d0>
   12a7c:	add	r0, r6, #1
   12a80:	ldr	r1, [r5]
   12a84:	add	r2, r6, #2
   12a88:	cmp	r2, r1
   12a8c:	mov	r6, r0
   12a90:	blt	12a74 <putchar_unlocked@plt+0x1c10>
   12a94:	ldr	r0, [r4, #4]
   12a98:	movw	r9, #24944	; 0x6170
   12a9c:	movt	r9, #2
   12aa0:	cmp	r0, r9
   12aa4:	movw	r7, #24792	; 0x60d8
   12aa8:	movt	r7, #2
   12aac:	beq	12abc <putchar_unlocked@plt+0x1c58>
   12ab0:	bl	11734 <putchar_unlocked@plt+0x8d0>
   12ab4:	mov	r0, #256	; 0x100
   12ab8:	stm	r7, {r0, r9}
   12abc:	cmp	r4, r7
   12ac0:	beq	12ad0 <putchar_unlocked@plt+0x1c6c>
   12ac4:	mov	r0, r4
   12ac8:	bl	11734 <putchar_unlocked@plt+0x8d0>
   12acc:	str	r7, [r8]
   12ad0:	mov	r0, #1
   12ad4:	str	r0, [r5]
   12ad8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12adc:	movw	r3, #24896	; 0x6140
   12ae0:	movt	r3, #2
   12ae4:	mvn	r2, #0
   12ae8:	b	12aec <putchar_unlocked@plt+0x1c88>
   12aec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12af0:	add	fp, sp, #28
   12af4:	sub	sp, sp, #44	; 0x2c
   12af8:	mov	r7, r3
   12afc:	str	r2, [sp, #36]	; 0x24
   12b00:	str	r1, [sp, #32]
   12b04:	mov	r5, r0
   12b08:	bl	10dbc <__errno_location@plt>
   12b0c:	cmp	r5, #0
   12b10:	bmi	12c80 <putchar_unlocked@plt+0x1e1c>
   12b14:	cmn	r5, #-2147483647	; 0x80000001
   12b18:	beq	12c80 <putchar_unlocked@plt+0x1e1c>
   12b1c:	movw	r4, #24784	; 0x60d0
   12b20:	movt	r4, #2
   12b24:	ldr	r6, [r4]
   12b28:	str	r0, [sp, #28]
   12b2c:	ldr	r0, [r0]
   12b30:	str	r0, [sp, #24]
   12b34:	movw	r8, #24788	; 0x60d4
   12b38:	movt	r8, #2
   12b3c:	ldr	r1, [r8]
   12b40:	cmp	r1, r5
   12b44:	ble	12b50 <putchar_unlocked@plt+0x1cec>
   12b48:	mov	sl, r6
   12b4c:	b	12bbc <putchar_unlocked@plt+0x1d58>
   12b50:	str	r1, [fp, #-32]	; 0xffffffe0
   12b54:	mov	r0, #8
   12b58:	str	r0, [sp]
   12b5c:	movw	r9, #24792	; 0x60d8
   12b60:	movt	r9, #2
   12b64:	subs	r0, r6, r9
   12b68:	movne	r0, r6
   12b6c:	sub	r1, r5, r1
   12b70:	add	r2, r1, #1
   12b74:	sub	r1, fp, #32
   12b78:	mvn	r3, #-2147483648	; 0x80000000
   12b7c:	bl	13948 <putchar_unlocked@plt+0x2ae4>
   12b80:	mov	sl, r0
   12b84:	str	r0, [r4]
   12b88:	cmp	r6, r9
   12b8c:	bne	12b98 <putchar_unlocked@plt+0x1d34>
   12b90:	ldrd	r0, [r9]
   12b94:	stm	sl, {r0, r1}
   12b98:	ldr	r1, [r8]
   12b9c:	add	r0, sl, r1, lsl #3
   12ba0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12ba4:	sub	r1, r2, r1
   12ba8:	lsl	r2, r1, #3
   12bac:	mov	r1, #0
   12bb0:	bl	10dd4 <memset@plt>
   12bb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12bb8:	str	r0, [r8]
   12bbc:	mov	r9, sl
   12bc0:	ldr	r6, [r9, r5, lsl #3]!
   12bc4:	ldr	r4, [r9, #4]!
   12bc8:	ldm	r7, {r0, r1}
   12bcc:	ldr	r2, [r7, #40]	; 0x28
   12bd0:	ldr	r3, [r7, #44]	; 0x2c
   12bd4:	orr	r8, r1, #1
   12bd8:	add	r1, r7, #8
   12bdc:	stm	sp, {r0, r8}
   12be0:	str	r1, [sp, #20]
   12be4:	add	r0, sp, #8
   12be8:	stm	r0, {r1, r2, r3}
   12bec:	mov	r0, r4
   12bf0:	mov	r1, r6
   12bf4:	ldr	r2, [sp, #32]
   12bf8:	ldr	r3, [sp, #36]	; 0x24
   12bfc:	bl	11998 <putchar_unlocked@plt+0xb34>
   12c00:	cmp	r6, r0
   12c04:	bhi	12c68 <putchar_unlocked@plt+0x1e04>
   12c08:	add	r6, r0, #1
   12c0c:	str	r6, [sl, r5, lsl #3]
   12c10:	movw	r0, #24944	; 0x6170
   12c14:	movt	r0, #2
   12c18:	cmp	r4, r0
   12c1c:	beq	12c28 <putchar_unlocked@plt+0x1dc4>
   12c20:	mov	r0, r4
   12c24:	bl	11734 <putchar_unlocked@plt+0x8d0>
   12c28:	mov	r0, r6
   12c2c:	bl	1386c <putchar_unlocked@plt+0x2a08>
   12c30:	mov	r4, r0
   12c34:	str	r0, [r9]
   12c38:	ldr	r0, [r7]
   12c3c:	ldr	r1, [r7, #40]	; 0x28
   12c40:	ldr	r2, [r7, #44]	; 0x2c
   12c44:	stm	sp, {r0, r8}
   12c48:	ldr	r0, [sp, #20]
   12c4c:	add	r3, sp, #8
   12c50:	stm	r3, {r0, r1, r2}
   12c54:	mov	r0, r4
   12c58:	mov	r1, r6
   12c5c:	ldr	r2, [sp, #32]
   12c60:	ldr	r3, [sp, #36]	; 0x24
   12c64:	bl	11998 <putchar_unlocked@plt+0xb34>
   12c68:	ldr	r0, [sp, #28]
   12c6c:	ldr	r1, [sp, #24]
   12c70:	str	r1, [r0]
   12c74:	mov	r0, r4
   12c78:	sub	sp, fp, #28
   12c7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c80:	bl	10e58 <abort@plt>
   12c84:	movw	r3, #24896	; 0x6140
   12c88:	movt	r3, #2
   12c8c:	b	12aec <putchar_unlocked@plt+0x1c88>
   12c90:	mov	r1, r0
   12c94:	mov	r0, #0
   12c98:	b	12adc <putchar_unlocked@plt+0x1c78>
   12c9c:	mov	r2, r1
   12ca0:	mov	r1, r0
   12ca4:	mov	r0, #0
   12ca8:	b	12c84 <putchar_unlocked@plt+0x1e20>
   12cac:	push	{r4, r5, r6, sl, fp, lr}
   12cb0:	add	fp, sp, #16
   12cb4:	sub	sp, sp, #48	; 0x30
   12cb8:	mov	r4, r2
   12cbc:	mov	r5, r0
   12cc0:	mov	r6, sp
   12cc4:	mov	r0, r6
   12cc8:	bl	12ce8 <putchar_unlocked@plt+0x1e84>
   12ccc:	mov	r0, r5
   12cd0:	mov	r1, r4
   12cd4:	mvn	r2, #0
   12cd8:	mov	r3, r6
   12cdc:	bl	12aec <putchar_unlocked@plt+0x1c88>
   12ce0:	sub	sp, fp, #16
   12ce4:	pop	{r4, r5, r6, sl, fp, pc}
   12ce8:	push	{fp, lr}
   12cec:	mov	fp, sp
   12cf0:	vmov.i32	q8, #0	; 0x00000000
   12cf4:	mov	r2, #32
   12cf8:	mov	r3, r0
   12cfc:	vst1.32	{d16-d17}, [r3], r2
   12d00:	vst1.32	{d16-d17}, [r3]
   12d04:	add	r2, r0, #16
   12d08:	vst1.32	{d16-d17}, [r2]
   12d0c:	cmp	r1, #10
   12d10:	strne	r1, [r0]
   12d14:	popne	{fp, pc}
   12d18:	bl	10e58 <abort@plt>
   12d1c:	push	{r4, r5, r6, r7, fp, lr}
   12d20:	add	fp, sp, #16
   12d24:	sub	sp, sp, #48	; 0x30
   12d28:	mov	r4, r3
   12d2c:	mov	r5, r2
   12d30:	mov	r6, r0
   12d34:	mov	r7, sp
   12d38:	mov	r0, r7
   12d3c:	bl	12ce8 <putchar_unlocked@plt+0x1e84>
   12d40:	mov	r0, r6
   12d44:	mov	r1, r5
   12d48:	mov	r2, r4
   12d4c:	mov	r3, r7
   12d50:	bl	12aec <putchar_unlocked@plt+0x1c88>
   12d54:	sub	sp, fp, #16
   12d58:	pop	{r4, r5, r6, r7, fp, pc}
   12d5c:	mov	r2, r1
   12d60:	mov	r1, r0
   12d64:	mov	r0, #0
   12d68:	b	12cac <putchar_unlocked@plt+0x1e48>
   12d6c:	mov	r3, r2
   12d70:	mov	r2, r1
   12d74:	mov	r1, r0
   12d78:	mov	r0, #0
   12d7c:	b	12d1c <putchar_unlocked@plt+0x1eb8>
   12d80:	push	{r4, r5, r6, sl, fp, lr}
   12d84:	add	fp, sp, #16
   12d88:	sub	sp, sp, #48	; 0x30
   12d8c:	mov	r4, r1
   12d90:	mov	r5, r0
   12d94:	movw	r0, #24896	; 0x6140
   12d98:	movt	r0, #2
   12d9c:	add	r1, r0, #16
   12da0:	mov	r3, #32
   12da4:	vld1.64	{d16-d17}, [r0], r3
   12da8:	vld1.64	{d18-d19}, [r1]
   12dac:	mov	r6, sp
   12db0:	add	r1, r6, #16
   12db4:	vld1.64	{d20-d21}, [r0]
   12db8:	vst1.64	{d18-d19}, [r1]
   12dbc:	mov	r0, r6
   12dc0:	vst1.64	{d16-d17}, [r0], r3
   12dc4:	vst1.64	{d20-d21}, [r0]
   12dc8:	mov	r0, r6
   12dcc:	mov	r1, r2
   12dd0:	mov	r2, #1
   12dd4:	bl	1188c <putchar_unlocked@plt+0xa28>
   12dd8:	mov	r0, #0
   12ddc:	mov	r1, r5
   12de0:	mov	r2, r4
   12de4:	mov	r3, r6
   12de8:	bl	12aec <putchar_unlocked@plt+0x1c88>
   12dec:	sub	sp, fp, #16
   12df0:	pop	{r4, r5, r6, sl, fp, pc}
   12df4:	mov	r2, r1
   12df8:	mvn	r1, #0
   12dfc:	b	12d80 <putchar_unlocked@plt+0x1f1c>
   12e00:	mov	r1, #58	; 0x3a
   12e04:	b	12df4 <putchar_unlocked@plt+0x1f90>
   12e08:	mov	r2, #58	; 0x3a
   12e0c:	b	12d80 <putchar_unlocked@plt+0x1f1c>
   12e10:	push	{r4, r5, r6, sl, fp, lr}
   12e14:	add	fp, sp, #16
   12e18:	sub	sp, sp, #48	; 0x30
   12e1c:	mov	r4, r2
   12e20:	mov	r5, r0
   12e24:	mov	r6, sp
   12e28:	mov	r0, r6
   12e2c:	bl	12ce8 <putchar_unlocked@plt+0x1e84>
   12e30:	mov	r0, r6
   12e34:	mov	r1, #58	; 0x3a
   12e38:	mov	r2, #1
   12e3c:	bl	1188c <putchar_unlocked@plt+0xa28>
   12e40:	mov	r0, r5
   12e44:	mov	r1, r4
   12e48:	mvn	r2, #0
   12e4c:	mov	r3, r6
   12e50:	bl	12aec <putchar_unlocked@plt+0x1c88>
   12e54:	sub	sp, fp, #16
   12e58:	pop	{r4, r5, r6, sl, fp, pc}
   12e5c:	push	{fp, lr}
   12e60:	mov	fp, sp
   12e64:	sub	sp, sp, #8
   12e68:	mvn	ip, #0
   12e6c:	str	ip, [sp]
   12e70:	bl	12e7c <putchar_unlocked@plt+0x2018>
   12e74:	mov	sp, fp
   12e78:	pop	{fp, pc}
   12e7c:	push	{r4, r5, r6, r7, fp, lr}
   12e80:	add	fp, sp, #16
   12e84:	sub	sp, sp, #48	; 0x30
   12e88:	mov	r7, r3
   12e8c:	mov	r5, r0
   12e90:	movw	r0, #24896	; 0x6140
   12e94:	movt	r0, #2
   12e98:	add	r3, r0, #16
   12e9c:	mov	r4, #32
   12ea0:	vld1.64	{d16-d17}, [r0], r4
   12ea4:	vld1.64	{d18-d19}, [r3]
   12ea8:	mov	r6, sp
   12eac:	add	r3, r6, #16
   12eb0:	vld1.64	{d20-d21}, [r0]
   12eb4:	vst1.64	{d18-d19}, [r3]
   12eb8:	mov	r0, r6
   12ebc:	vst1.64	{d16-d17}, [r0], r4
   12ec0:	vst1.64	{d20-d21}, [r0]
   12ec4:	mov	r0, r6
   12ec8:	bl	118e4 <putchar_unlocked@plt+0xa80>
   12ecc:	ldr	r2, [fp, #8]
   12ed0:	mov	r0, r5
   12ed4:	mov	r1, r7
   12ed8:	mov	r3, r6
   12edc:	bl	12aec <putchar_unlocked@plt+0x1c88>
   12ee0:	sub	sp, fp, #16
   12ee4:	pop	{r4, r5, r6, r7, fp, pc}
   12ee8:	mov	r3, r2
   12eec:	mov	r2, r1
   12ef0:	mov	r1, r0
   12ef4:	mov	r0, #0
   12ef8:	b	12e5c <putchar_unlocked@plt+0x1ff8>
   12efc:	push	{fp, lr}
   12f00:	mov	fp, sp
   12f04:	sub	sp, sp, #8
   12f08:	mov	ip, r2
   12f0c:	mov	r2, r1
   12f10:	mov	r1, r0
   12f14:	str	r3, [sp]
   12f18:	mov	r0, #0
   12f1c:	mov	r3, ip
   12f20:	bl	12e7c <putchar_unlocked@plt+0x2018>
   12f24:	mov	sp, fp
   12f28:	pop	{fp, pc}
   12f2c:	movw	r3, #24800	; 0x60e0
   12f30:	movt	r3, #2
   12f34:	b	12aec <putchar_unlocked@plt+0x1c88>
   12f38:	mov	r2, r1
   12f3c:	mov	r1, r0
   12f40:	mov	r0, #0
   12f44:	b	12f2c <putchar_unlocked@plt+0x20c8>
   12f48:	mvn	r2, #0
   12f4c:	b	12f2c <putchar_unlocked@plt+0x20c8>
   12f50:	mov	r1, r0
   12f54:	mov	r0, #0
   12f58:	b	12f48 <putchar_unlocked@plt+0x20e4>
   12f5c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12f60:	add	fp, sp, #24
   12f64:	sub	sp, sp, #16
   12f68:	mov	r4, r1
   12f6c:	mov	r5, r0
   12f70:	mov	r7, #0
   12f74:	mov	r0, #0
   12f78:	mov	r1, r5
   12f7c:	mov	r2, #5
   12f80:	bl	10ccc <dcgettext@plt>
   12f84:	cmp	r0, r5
   12f88:	beq	12f94 <putchar_unlocked@plt+0x2130>
   12f8c:	sub	sp, fp, #24
   12f90:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12f94:	bl	14300 <putchar_unlocked@plt+0x349c>
   12f98:	mov	r6, r0
   12f9c:	mov	r8, #56	; 0x38
   12fa0:	mov	r0, #45	; 0x2d
   12fa4:	stm	sp, {r0, r8}
   12fa8:	str	r7, [sp, #8]
   12fac:	str	r7, [sp, #12]
   12fb0:	mov	r0, r6
   12fb4:	mov	r1, #85	; 0x55
   12fb8:	mov	r2, #84	; 0x54
   12fbc:	mov	r3, #70	; 0x46
   12fc0:	bl	13058 <putchar_unlocked@plt+0x21f4>
   12fc4:	cmp	r0, #0
   12fc8:	beq	12fe4 <putchar_unlocked@plt+0x2180>
   12fcc:	ldrb	r1, [r5]
   12fd0:	movw	r2, #19322	; 0x4b7a
   12fd4:	movt	r2, #1
   12fd8:	movw	r0, #19326	; 0x4b7e
   12fdc:	movt	r0, #1
   12fe0:	b	13028 <putchar_unlocked@plt+0x21c4>
   12fe4:	mov	r0, #48	; 0x30
   12fe8:	mov	r1, #51	; 0x33
   12fec:	str	r8, [sp]
   12ff0:	stmib	sp, {r0, r1}
   12ff4:	str	r0, [sp, #12]
   12ff8:	mov	r0, r6
   12ffc:	mov	r1, #71	; 0x47
   13000:	mov	r2, #66	; 0x42
   13004:	mov	r3, #49	; 0x31
   13008:	bl	13058 <putchar_unlocked@plt+0x21f4>
   1300c:	cmp	r0, #0
   13010:	beq	13038 <putchar_unlocked@plt+0x21d4>
   13014:	ldrb	r1, [r5]
   13018:	movw	r2, #19330	; 0x4b82
   1301c:	movt	r2, #1
   13020:	movw	r0, #19334	; 0x4b86
   13024:	movt	r0, #1
   13028:	cmp	r1, #96	; 0x60
   1302c:	moveq	r0, r2
   13030:	sub	sp, fp, #24
   13034:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13038:	movw	r1, #19316	; 0x4b74
   1303c:	movt	r1, #1
   13040:	movw	r0, #19320	; 0x4b78
   13044:	movt	r0, #1
   13048:	cmp	r4, #9
   1304c:	moveq	r0, r1
   13050:	sub	sp, fp, #24
   13054:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13058:	push	{r4, r5, r6, r7, fp, lr}
   1305c:	add	fp, sp, #16
   13060:	sub	sp, sp, #16
   13064:	mov	r4, r3
   13068:	mov	r5, r2
   1306c:	mov	r7, r1
   13070:	mov	r6, r0
   13074:	mov	r0, r1
   13078:	bl	1400c <putchar_unlocked@plt+0x31a8>
   1307c:	ldrb	r1, [r6]
   13080:	cmp	r0, #0
   13084:	andne	r1, r1, #223	; 0xdf
   13088:	mov	r0, #0
   1308c:	cmp	r1, r7
   13090:	bne	130c8 <putchar_unlocked@plt+0x2264>
   13094:	cmp	r7, #0
   13098:	beq	130d0 <putchar_unlocked@plt+0x226c>
   1309c:	ldr	r0, [fp, #20]
   130a0:	ldr	r1, [fp, #16]
   130a4:	ldr	r2, [fp, #12]
   130a8:	ldr	r3, [fp, #8]
   130ac:	str	r2, [sp]
   130b0:	str	r1, [sp, #4]
   130b4:	str	r0, [sp, #8]
   130b8:	mov	r0, r6
   130bc:	mov	r1, r5
   130c0:	mov	r2, r4
   130c4:	bl	130dc <putchar_unlocked@plt+0x2278>
   130c8:	sub	sp, fp, #16
   130cc:	pop	{r4, r5, r6, r7, fp, pc}
   130d0:	mov	r0, #1
   130d4:	sub	sp, fp, #16
   130d8:	pop	{r4, r5, r6, r7, fp, pc}
   130dc:	push	{r4, r5, r6, r7, fp, lr}
   130e0:	add	fp, sp, #16
   130e4:	sub	sp, sp, #8
   130e8:	mov	r4, r3
   130ec:	mov	r5, r2
   130f0:	mov	r7, r1
   130f4:	mov	r6, r0
   130f8:	mov	r0, r1
   130fc:	bl	1400c <putchar_unlocked@plt+0x31a8>
   13100:	ldrb	r1, [r6, #1]
   13104:	cmp	r0, #0
   13108:	andne	r1, r1, #223	; 0xdf
   1310c:	mov	r0, #0
   13110:	cmp	r1, r7
   13114:	bne	13144 <putchar_unlocked@plt+0x22e0>
   13118:	cmp	r7, #0
   1311c:	beq	1314c <putchar_unlocked@plt+0x22e8>
   13120:	ldr	r0, [fp, #16]
   13124:	ldr	r1, [fp, #12]
   13128:	ldr	r3, [fp, #8]
   1312c:	str	r1, [sp]
   13130:	str	r0, [sp, #4]
   13134:	mov	r0, r6
   13138:	mov	r1, r5
   1313c:	mov	r2, r4
   13140:	bl	13158 <putchar_unlocked@plt+0x22f4>
   13144:	sub	sp, fp, #16
   13148:	pop	{r4, r5, r6, r7, fp, pc}
   1314c:	mov	r0, #1
   13150:	sub	sp, fp, #16
   13154:	pop	{r4, r5, r6, r7, fp, pc}
   13158:	push	{r4, r5, r6, r7, fp, lr}
   1315c:	add	fp, sp, #16
   13160:	sub	sp, sp, #8
   13164:	mov	r4, r3
   13168:	mov	r5, r2
   1316c:	mov	r7, r1
   13170:	mov	r6, r0
   13174:	mov	r0, r1
   13178:	bl	1400c <putchar_unlocked@plt+0x31a8>
   1317c:	ldrb	r1, [r6, #2]
   13180:	cmp	r0, #0
   13184:	andne	r1, r1, #223	; 0xdf
   13188:	mov	r0, #0
   1318c:	cmp	r1, r7
   13190:	bne	131b8 <putchar_unlocked@plt+0x2354>
   13194:	cmp	r7, #0
   13198:	beq	131c0 <putchar_unlocked@plt+0x235c>
   1319c:	ldr	r0, [fp, #12]
   131a0:	ldr	r3, [fp, #8]
   131a4:	str	r0, [sp]
   131a8:	mov	r0, r6
   131ac:	mov	r1, r5
   131b0:	mov	r2, r4
   131b4:	bl	131cc <putchar_unlocked@plt+0x2368>
   131b8:	sub	sp, fp, #16
   131bc:	pop	{r4, r5, r6, r7, fp, pc}
   131c0:	mov	r0, #1
   131c4:	sub	sp, fp, #16
   131c8:	pop	{r4, r5, r6, r7, fp, pc}
   131cc:	push	{r4, r5, r6, r7, fp, lr}
   131d0:	add	fp, sp, #16
   131d4:	mov	r4, r3
   131d8:	mov	r5, r2
   131dc:	mov	r7, r1
   131e0:	mov	r6, r0
   131e4:	mov	r0, r1
   131e8:	bl	1400c <putchar_unlocked@plt+0x31a8>
   131ec:	ldrb	r1, [r6, #3]
   131f0:	ldr	r3, [fp, #8]
   131f4:	cmp	r0, #0
   131f8:	andne	r1, r1, #223	; 0xdf
   131fc:	mov	r0, #0
   13200:	cmp	r1, r7
   13204:	bne	13228 <putchar_unlocked@plt+0x23c4>
   13208:	cmp	r7, #0
   1320c:	beq	13224 <putchar_unlocked@plt+0x23c0>
   13210:	mov	r0, r6
   13214:	mov	r1, r5
   13218:	mov	r2, r4
   1321c:	pop	{r4, r5, r6, r7, fp, lr}
   13220:	b	1322c <putchar_unlocked@plt+0x23c8>
   13224:	mov	r0, #1
   13228:	pop	{r4, r5, r6, r7, fp, pc}
   1322c:	push	{r4, r5, r6, r7, fp, lr}
   13230:	add	fp, sp, #16
   13234:	mov	r4, r3
   13238:	mov	r5, r2
   1323c:	mov	r7, r1
   13240:	mov	r6, r0
   13244:	mov	r0, r1
   13248:	bl	1400c <putchar_unlocked@plt+0x31a8>
   1324c:	ldrb	r1, [r6, #4]
   13250:	cmp	r0, #0
   13254:	andne	r1, r1, #223	; 0xdf
   13258:	mov	r0, #0
   1325c:	cmp	r1, r7
   13260:	bne	13284 <putchar_unlocked@plt+0x2420>
   13264:	cmp	r7, #0
   13268:	beq	13280 <putchar_unlocked@plt+0x241c>
   1326c:	mov	r0, r6
   13270:	mov	r1, r5
   13274:	mov	r2, r4
   13278:	pop	{r4, r5, r6, r7, fp, lr}
   1327c:	b	13288 <putchar_unlocked@plt+0x2424>
   13280:	mov	r0, #1
   13284:	pop	{r4, r5, r6, r7, fp, pc}
   13288:	push	{r4, r5, r6, sl, fp, lr}
   1328c:	add	fp, sp, #16
   13290:	mov	r4, r2
   13294:	mov	r6, r1
   13298:	mov	r5, r0
   1329c:	mov	r0, r1
   132a0:	bl	1400c <putchar_unlocked@plt+0x31a8>
   132a4:	ldrb	r1, [r5, #5]
   132a8:	cmp	r0, #0
   132ac:	andne	r1, r1, #223	; 0xdf
   132b0:	mov	r0, #0
   132b4:	cmp	r1, r6
   132b8:	bne	132d8 <putchar_unlocked@plt+0x2474>
   132bc:	cmp	r6, #0
   132c0:	beq	132d4 <putchar_unlocked@plt+0x2470>
   132c4:	mov	r0, r5
   132c8:	mov	r1, r4
   132cc:	pop	{r4, r5, r6, sl, fp, lr}
   132d0:	b	132dc <putchar_unlocked@plt+0x2478>
   132d4:	mov	r0, #1
   132d8:	pop	{r4, r5, r6, sl, fp, pc}
   132dc:	push	{r4, r5, fp, lr}
   132e0:	add	fp, sp, #8
   132e4:	mov	r5, r1
   132e8:	mov	r4, r0
   132ec:	mov	r0, r1
   132f0:	bl	1400c <putchar_unlocked@plt+0x31a8>
   132f4:	ldrb	r1, [r4, #6]
   132f8:	cmp	r0, #0
   132fc:	andne	r1, r1, #223	; 0xdf
   13300:	mov	r0, #0
   13304:	cmp	r1, r5
   13308:	popne	{r4, r5, fp, pc}
   1330c:	cmp	r5, #0
   13310:	beq	13320 <putchar_unlocked@plt+0x24bc>
   13314:	mov	r0, r4
   13318:	pop	{r4, r5, fp, lr}
   1331c:	b	13328 <putchar_unlocked@plt+0x24c4>
   13320:	mov	r0, #1
   13324:	pop	{r4, r5, fp, pc}
   13328:	push	{r4, sl, fp, lr}
   1332c:	add	fp, sp, #8
   13330:	mov	r4, r0
   13334:	mov	r0, #0
   13338:	bl	1400c <putchar_unlocked@plt+0x31a8>
   1333c:	ldrb	r1, [r4, #7]
   13340:	cmp	r0, #0
   13344:	beq	13358 <putchar_unlocked@plt+0x24f4>
   13348:	tst	r1, #223	; 0xdf
   1334c:	bne	13360 <putchar_unlocked@plt+0x24fc>
   13350:	mov	r0, #1
   13354:	pop	{r4, sl, fp, pc}
   13358:	cmp	r1, #0
   1335c:	beq	13350 <putchar_unlocked@plt+0x24ec>
   13360:	mov	r0, #0
   13364:	pop	{r4, sl, fp, pc}
   13368:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1336c:	add	fp, sp, #24
   13370:	sub	sp, sp, #32
   13374:	mov	r4, r2
   13378:	mov	r8, r0
   1337c:	ldr	r6, [fp, #12]
   13380:	ldr	r7, [fp, #8]
   13384:	cmp	r1, #0
   13388:	beq	133b0 <putchar_unlocked@plt+0x254c>
   1338c:	mov	r5, r1
   13390:	str	r4, [sp]
   13394:	str	r3, [sp, #4]
   13398:	movw	r2, #19424	; 0x4be0
   1339c:	movt	r2, #1
   133a0:	mov	r0, r8
   133a4:	mov	r1, #1
   133a8:	mov	r3, r5
   133ac:	b	133c8 <putchar_unlocked@plt+0x2564>
   133b0:	str	r3, [sp]
   133b4:	movw	r2, #19436	; 0x4bec
   133b8:	movt	r2, #1
   133bc:	mov	r0, r8
   133c0:	mov	r1, #1
   133c4:	mov	r3, r4
   133c8:	bl	10df8 <__fprintf_chk@plt>
   133cc:	movw	r1, #19443	; 0x4bf3
   133d0:	movt	r1, #1
   133d4:	mov	r0, #0
   133d8:	mov	r2, #5
   133dc:	bl	10ccc <dcgettext@plt>
   133e0:	mov	r3, r0
   133e4:	movw	r0, #2022	; 0x7e6
   133e8:	str	r0, [sp]
   133ec:	movw	r2, #20161	; 0x4ec1
   133f0:	movt	r2, #1
   133f4:	mov	r0, r8
   133f8:	mov	r1, #1
   133fc:	bl	10df8 <__fprintf_chk@plt>
   13400:	movw	r4, #18460	; 0x481c
   13404:	movt	r4, #1
   13408:	mov	r0, r4
   1340c:	mov	r1, r8
   13410:	bl	10c78 <fputs_unlocked@plt>
   13414:	movw	r1, #19447	; 0x4bf7
   13418:	movt	r1, #1
   1341c:	mov	r0, #0
   13420:	mov	r2, #5
   13424:	bl	10ccc <dcgettext@plt>
   13428:	mov	r2, r0
   1342c:	movw	r3, #19618	; 0x4ca2
   13430:	movt	r3, #1
   13434:	mov	r0, r8
   13438:	mov	r1, #1
   1343c:	bl	10df8 <__fprintf_chk@plt>
   13440:	mov	r0, r4
   13444:	mov	r1, r8
   13448:	bl	10c78 <fputs_unlocked@plt>
   1344c:	cmp	r6, #9
   13450:	bhi	1348c <putchar_unlocked@plt+0x2628>
   13454:	add	r0, pc, #0
   13458:	ldr	pc, [r0, r6, lsl #2]
   1345c:	andeq	r3, r1, r4, lsl #9
   13460:	muleq	r1, r8, r4
   13464:	andeq	r3, r1, r8, asr #9
   13468:	strdeq	r3, [r1], -r0
   1346c:	andeq	r3, r1, r8, lsl r5
   13470:	andeq	r3, r1, r0, asr #10
   13474:	andeq	r3, r1, r8, ror #10
   13478:	andeq	r3, r1, r0, lsr #11
   1347c:	andeq	r3, r1, r0, asr #12
   13480:	andeq	r3, r1, r8, ror #11
   13484:	sub	sp, fp, #24
   13488:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1348c:	movw	r1, #19971	; 0x4e03
   13490:	movt	r1, #1
   13494:	b	135f0 <putchar_unlocked@plt+0x278c>
   13498:	movw	r1, #19652	; 0x4cc4
   1349c:	movt	r1, #1
   134a0:	mov	r0, #0
   134a4:	mov	r2, #5
   134a8:	bl	10ccc <dcgettext@plt>
   134ac:	mov	r2, r0
   134b0:	ldr	r3, [r7]
   134b4:	mov	r0, r8
   134b8:	mov	r1, #1
   134bc:	sub	sp, fp, #24
   134c0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   134c4:	b	10df8 <__fprintf_chk@plt>
   134c8:	movw	r1, #19668	; 0x4cd4
   134cc:	movt	r1, #1
   134d0:	mov	r0, #0
   134d4:	mov	r2, #5
   134d8:	bl	10ccc <dcgettext@plt>
   134dc:	mov	r2, r0
   134e0:	ldr	r3, [r7]
   134e4:	ldr	r0, [r7, #4]
   134e8:	str	r0, [sp]
   134ec:	b	135dc <putchar_unlocked@plt+0x2778>
   134f0:	movw	r1, #19691	; 0x4ceb
   134f4:	movt	r1, #1
   134f8:	mov	r0, #0
   134fc:	mov	r2, #5
   13500:	bl	10ccc <dcgettext@plt>
   13504:	mov	r2, r0
   13508:	ldr	r3, [r7]
   1350c:	ldmib	r7, {r0, r1}
   13510:	stm	sp, {r0, r1}
   13514:	b	135dc <putchar_unlocked@plt+0x2778>
   13518:	movw	r1, #19719	; 0x4d07
   1351c:	movt	r1, #1
   13520:	mov	r0, #0
   13524:	mov	r2, #5
   13528:	bl	10ccc <dcgettext@plt>
   1352c:	mov	r2, r0
   13530:	ldr	r3, [r7]
   13534:	ldmib	r7, {r0, r1, r7}
   13538:	stm	sp, {r0, r1, r7}
   1353c:	b	135dc <putchar_unlocked@plt+0x2778>
   13540:	movw	r1, #19751	; 0x4d27
   13544:	movt	r1, #1
   13548:	mov	r0, #0
   1354c:	mov	r2, #5
   13550:	bl	10ccc <dcgettext@plt>
   13554:	mov	r2, r0
   13558:	ldr	r3, [r7]
   1355c:	ldmib	r7, {r0, r1, r6, r7}
   13560:	stm	sp, {r0, r1, r6, r7}
   13564:	b	135dc <putchar_unlocked@plt+0x2778>
   13568:	movw	r1, #19787	; 0x4d4b
   1356c:	movt	r1, #1
   13570:	mov	r0, #0
   13574:	mov	r2, #5
   13578:	bl	10ccc <dcgettext@plt>
   1357c:	mov	r2, r0
   13580:	ldr	r3, [r7]
   13584:	ldmib	r7, {r0, r1, r6}
   13588:	ldr	r5, [r7, #16]
   1358c:	ldr	r7, [r7, #20]
   13590:	stm	sp, {r0, r1, r6}
   13594:	str	r5, [sp, #12]
   13598:	str	r7, [sp, #16]
   1359c:	b	135dc <putchar_unlocked@plt+0x2778>
   135a0:	movw	r1, #19827	; 0x4d73
   135a4:	movt	r1, #1
   135a8:	mov	r0, #0
   135ac:	mov	r2, #5
   135b0:	bl	10ccc <dcgettext@plt>
   135b4:	mov	r2, r0
   135b8:	ldr	r3, [r7]
   135bc:	ldmib	r7, {r0, r1, r6}
   135c0:	ldr	r5, [r7, #16]
   135c4:	ldr	r4, [r7, #20]
   135c8:	ldr	r7, [r7, #24]
   135cc:	stm	sp, {r0, r1, r6}
   135d0:	str	r5, [sp, #12]
   135d4:	str	r4, [sp, #16]
   135d8:	str	r7, [sp, #20]
   135dc:	mov	r0, r8
   135e0:	mov	r1, #1
   135e4:	b	13690 <putchar_unlocked@plt+0x282c>
   135e8:	movw	r1, #19919	; 0x4dcf
   135ec:	movt	r1, #1
   135f0:	mov	r0, #0
   135f4:	mov	r2, #5
   135f8:	bl	10ccc <dcgettext@plt>
   135fc:	mov	ip, r0
   13600:	ldr	r3, [r7]
   13604:	ldr	r0, [r7, #4]
   13608:	ldr	r1, [r7, #8]
   1360c:	ldr	r6, [r7, #12]
   13610:	ldr	r5, [r7, #16]
   13614:	ldr	r4, [r7, #20]
   13618:	ldr	r2, [r7, #24]
   1361c:	ldr	lr, [r7, #28]
   13620:	ldr	r7, [r7, #32]
   13624:	stm	sp, {r0, r1, r6}
   13628:	str	r5, [sp, #12]
   1362c:	str	r4, [sp, #16]
   13630:	str	r2, [sp, #20]
   13634:	str	lr, [sp, #24]
   13638:	str	r7, [sp, #28]
   1363c:	b	13684 <putchar_unlocked@plt+0x2820>
   13640:	movw	r1, #19871	; 0x4d9f
   13644:	movt	r1, #1
   13648:	mov	r0, #0
   1364c:	mov	r2, #5
   13650:	bl	10ccc <dcgettext@plt>
   13654:	mov	ip, r0
   13658:	ldr	r3, [r7]
   1365c:	ldmib	r7, {r0, r1, r6}
   13660:	ldr	r5, [r7, #16]
   13664:	ldr	r4, [r7, #20]
   13668:	ldr	r2, [r7, #24]
   1366c:	ldr	r7, [r7, #28]
   13670:	stm	sp, {r0, r1, r6}
   13674:	str	r5, [sp, #12]
   13678:	str	r4, [sp, #16]
   1367c:	str	r2, [sp, #20]
   13680:	str	r7, [sp, #24]
   13684:	mov	r0, r8
   13688:	mov	r1, #1
   1368c:	mov	r2, ip
   13690:	bl	10df8 <__fprintf_chk@plt>
   13694:	sub	sp, fp, #24
   13698:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1369c:	push	{r4, sl, fp, lr}
   136a0:	add	fp, sp, #8
   136a4:	sub	sp, sp, #8
   136a8:	mov	lr, #0
   136ac:	ldr	ip, [fp, #8]
   136b0:	ldr	r4, [ip, lr, lsl #2]
   136b4:	add	lr, lr, #1
   136b8:	cmp	r4, #0
   136bc:	bne	136b0 <putchar_unlocked@plt+0x284c>
   136c0:	sub	r4, lr, #1
   136c4:	str	ip, [sp]
   136c8:	str	r4, [sp, #4]
   136cc:	bl	13368 <putchar_unlocked@plt+0x2504>
   136d0:	sub	sp, fp, #8
   136d4:	pop	{r4, sl, fp, pc}
   136d8:	push	{r4, r5, fp, lr}
   136dc:	add	fp, sp, #8
   136e0:	sub	sp, sp, #48	; 0x30
   136e4:	mov	ip, #0
   136e8:	ldr	r4, [fp, #8]
   136ec:	add	lr, sp, #8
   136f0:	ldr	r5, [r4]
   136f4:	str	r5, [lr, ip, lsl #2]
   136f8:	cmp	r5, #0
   136fc:	beq	13714 <putchar_unlocked@plt+0x28b0>
   13700:	add	ip, ip, #1
   13704:	add	r4, r4, #4
   13708:	cmp	ip, #10
   1370c:	bne	136f0 <putchar_unlocked@plt+0x288c>
   13710:	mov	ip, #10
   13714:	str	lr, [sp]
   13718:	str	ip, [sp, #4]
   1371c:	bl	13368 <putchar_unlocked@plt+0x2504>
   13720:	sub	sp, fp, #8
   13724:	pop	{r4, r5, fp, pc}
   13728:	push	{fp, lr}
   1372c:	mov	fp, sp
   13730:	sub	sp, sp, #8
   13734:	add	ip, fp, #8
   13738:	str	ip, [sp, #4]
   1373c:	str	ip, [sp]
   13740:	bl	136d8 <putchar_unlocked@plt+0x2874>
   13744:	mov	sp, fp
   13748:	pop	{fp, pc}
   1374c:	push	{fp, lr}
   13750:	mov	fp, sp
   13754:	movw	r0, #24868	; 0x6124
   13758:	movt	r0, #2
   1375c:	ldr	r1, [r0]
   13760:	movw	r0, #18460	; 0x481c
   13764:	movt	r0, #1
   13768:	bl	10c78 <fputs_unlocked@plt>
   1376c:	movw	r1, #20031	; 0x4e3f
   13770:	movt	r1, #1
   13774:	mov	r0, #0
   13778:	mov	r2, #5
   1377c:	bl	10ccc <dcgettext@plt>
   13780:	mov	r1, r0
   13784:	movw	r2, #20051	; 0x4e53
   13788:	movt	r2, #1
   1378c:	mov	r0, #1
   13790:	bl	10de0 <__printf_chk@plt>
   13794:	movw	r1, #20073	; 0x4e69
   13798:	movt	r1, #1
   1379c:	mov	r0, #0
   137a0:	mov	r2, #5
   137a4:	bl	10ccc <dcgettext@plt>
   137a8:	mov	r1, r0
   137ac:	movw	r2, #18501	; 0x4845
   137b0:	movt	r2, #1
   137b4:	movw	r3, #18757	; 0x4945
   137b8:	movt	r3, #1
   137bc:	mov	r0, #1
   137c0:	bl	10de0 <__printf_chk@plt>
   137c4:	movw	r1, #20093	; 0x4e7d
   137c8:	movt	r1, #1
   137cc:	mov	r0, #0
   137d0:	mov	r2, #5
   137d4:	bl	10ccc <dcgettext@plt>
   137d8:	mov	r1, r0
   137dc:	movw	r2, #20132	; 0x4ea4
   137e0:	movt	r2, #1
   137e4:	mov	r0, #1
   137e8:	pop	{fp, lr}
   137ec:	b	10de0 <__printf_chk@plt>
   137f0:	b	137f4 <putchar_unlocked@plt+0x2990>
   137f4:	push	{r4, r5, r6, sl, fp, lr}
   137f8:	add	fp, sp, #16
   137fc:	mov	r4, r2
   13800:	mov	r5, r1
   13804:	mov	r6, r0
   13808:	bl	1439c <putchar_unlocked@plt+0x3538>
   1380c:	cmp	r0, #0
   13810:	popne	{r4, r5, r6, sl, fp, pc}
   13814:	cmp	r6, #0
   13818:	beq	1382c <putchar_unlocked@plt+0x29c8>
   1381c:	cmp	r5, #0
   13820:	cmpne	r4, #0
   13824:	bne	1382c <putchar_unlocked@plt+0x29c8>
   13828:	pop	{r4, r5, r6, sl, fp, pc}
   1382c:	bl	13bb8 <putchar_unlocked@plt+0x2d54>
   13830:	push	{fp, lr}
   13834:	mov	fp, sp
   13838:	bl	13c50 <putchar_unlocked@plt+0x2dec>
   1383c:	pop	{fp, lr}
   13840:	b	13844 <putchar_unlocked@plt+0x29e0>
   13844:	cmp	r0, #0
   13848:	bxne	lr
   1384c:	push	{fp, lr}
   13850:	mov	fp, sp
   13854:	bl	13bb8 <putchar_unlocked@plt+0x2d54>
   13858:	push	{fp, lr}
   1385c:	mov	fp, sp
   13860:	bl	142cc <putchar_unlocked@plt+0x3468>
   13864:	pop	{fp, lr}
   13868:	b	13844 <putchar_unlocked@plt+0x29e0>
   1386c:	b	13830 <putchar_unlocked@plt+0x29cc>
   13870:	push	{r4, r5, fp, lr}
   13874:	add	fp, sp, #8
   13878:	mov	r4, r1
   1387c:	mov	r5, r0
   13880:	bl	13c80 <putchar_unlocked@plt+0x2e1c>
   13884:	cmp	r0, #0
   13888:	popne	{r4, r5, fp, pc}
   1388c:	cmp	r5, #0
   13890:	beq	138a0 <putchar_unlocked@plt+0x2a3c>
   13894:	cmp	r4, #0
   13898:	bne	138a0 <putchar_unlocked@plt+0x2a3c>
   1389c:	pop	{r4, r5, fp, pc}
   138a0:	bl	13bb8 <putchar_unlocked@plt+0x2d54>
   138a4:	push	{fp, lr}
   138a8:	mov	fp, sp
   138ac:	bl	142d0 <putchar_unlocked@plt+0x346c>
   138b0:	pop	{fp, lr}
   138b4:	b	13844 <putchar_unlocked@plt+0x29e0>
   138b8:	push	{fp, lr}
   138bc:	mov	fp, sp
   138c0:	bl	142e0 <putchar_unlocked@plt+0x347c>
   138c4:	pop	{fp, lr}
   138c8:	b	13844 <putchar_unlocked@plt+0x29e0>
   138cc:	mov	r2, r1
   138d0:	mov	r1, r0
   138d4:	mov	r0, #0
   138d8:	b	137f4 <putchar_unlocked@plt+0x2990>
   138dc:	mov	r2, r1
   138e0:	mov	r1, r0
   138e4:	mov	r0, #0
   138e8:	b	138b8 <putchar_unlocked@plt+0x2a54>
   138ec:	mov	r2, #1
   138f0:	b	138f4 <putchar_unlocked@plt+0x2a90>
   138f4:	push	{r4, r5, fp, lr}
   138f8:	add	fp, sp, #8
   138fc:	mov	r4, r1
   13900:	ldr	r5, [r1]
   13904:	cmp	r0, #0
   13908:	beq	13920 <putchar_unlocked@plt+0x2abc>
   1390c:	mov	r1, #1
   13910:	add	r1, r1, r5, lsr #1
   13914:	adds	r5, r5, r1
   13918:	bcc	13938 <putchar_unlocked@plt+0x2ad4>
   1391c:	bl	13bb8 <putchar_unlocked@plt+0x2d54>
   13920:	cmp	r5, #0
   13924:	bne	13938 <putchar_unlocked@plt+0x2ad4>
   13928:	mov	r1, #64	; 0x40
   1392c:	udiv	r5, r1, r2
   13930:	cmp	r2, #64	; 0x40
   13934:	addhi	r5, r5, #1
   13938:	mov	r1, r5
   1393c:	bl	137f4 <putchar_unlocked@plt+0x2990>
   13940:	str	r5, [r4]
   13944:	pop	{r4, r5, fp, pc}
   13948:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1394c:	add	fp, sp, #24
   13950:	mov	r8, r1
   13954:	ldr	r6, [r1]
   13958:	add	r1, r6, r6, asr #1
   1395c:	cmp	r1, r6
   13960:	mvnvs	r1, #-2147483648	; 0x80000000
   13964:	cmp	r1, r3
   13968:	mov	r5, r1
   1396c:	movgt	r5, r3
   13970:	cmn	r3, #1
   13974:	movle	r5, r1
   13978:	ldr	r4, [fp, #8]
   1397c:	cmn	r4, #1
   13980:	ble	139a8 <putchar_unlocked@plt+0x2b44>
   13984:	cmp	r4, #0
   13988:	beq	139fc <putchar_unlocked@plt+0x2b98>
   1398c:	cmn	r5, #1
   13990:	ble	139d0 <putchar_unlocked@plt+0x2b6c>
   13994:	mvn	r7, #-2147483648	; 0x80000000
   13998:	udiv	r1, r7, r4
   1399c:	cmp	r1, r5
   139a0:	bge	139fc <putchar_unlocked@plt+0x2b98>
   139a4:	b	13a0c <putchar_unlocked@plt+0x2ba8>
   139a8:	cmn	r5, #1
   139ac:	ble	139ec <putchar_unlocked@plt+0x2b88>
   139b0:	cmn	r4, #1
   139b4:	beq	139fc <putchar_unlocked@plt+0x2b98>
   139b8:	mov	r1, #-2147483648	; 0x80000000
   139bc:	sdiv	r1, r1, r4
   139c0:	mvn	r7, #-2147483648	; 0x80000000
   139c4:	cmp	r1, r5
   139c8:	bge	139fc <putchar_unlocked@plt+0x2b98>
   139cc:	b	13a0c <putchar_unlocked@plt+0x2ba8>
   139d0:	beq	139fc <putchar_unlocked@plt+0x2b98>
   139d4:	mov	r1, #-2147483648	; 0x80000000
   139d8:	sdiv	r1, r1, r5
   139dc:	mvn	r7, #-2147483648	; 0x80000000
   139e0:	cmp	r1, r4
   139e4:	bge	139fc <putchar_unlocked@plt+0x2b98>
   139e8:	b	13a0c <putchar_unlocked@plt+0x2ba8>
   139ec:	mvn	r7, #-2147483648	; 0x80000000
   139f0:	sdiv	r1, r7, r4
   139f4:	cmp	r5, r1
   139f8:	blt	13a0c <putchar_unlocked@plt+0x2ba8>
   139fc:	mul	r1, r5, r4
   13a00:	mov	r7, #64	; 0x40
   13a04:	cmp	r1, #63	; 0x3f
   13a08:	bgt	13a14 <putchar_unlocked@plt+0x2bb0>
   13a0c:	sdiv	r5, r7, r4
   13a10:	mul	r1, r5, r4
   13a14:	cmp	r0, #0
   13a18:	moveq	r7, #0
   13a1c:	streq	r7, [r8]
   13a20:	sub	r7, r5, r6
   13a24:	cmp	r7, r2
   13a28:	bge	13ad4 <putchar_unlocked@plt+0x2c70>
   13a2c:	add	r5, r6, r2
   13a30:	mov	r1, #0
   13a34:	cmp	r5, r3
   13a38:	mov	r2, #0
   13a3c:	movwgt	r2, #1
   13a40:	cmn	r3, #1
   13a44:	movwgt	r1, #1
   13a48:	cmp	r5, r6
   13a4c:	bvs	13abc <putchar_unlocked@plt+0x2c58>
   13a50:	ands	r1, r1, r2
   13a54:	bne	13abc <putchar_unlocked@plt+0x2c58>
   13a58:	cmn	r4, #1
   13a5c:	ble	13a84 <putchar_unlocked@plt+0x2c20>
   13a60:	cmp	r4, #0
   13a64:	beq	13ad0 <putchar_unlocked@plt+0x2c6c>
   13a68:	cmn	r5, #1
   13a6c:	ble	13aa8 <putchar_unlocked@plt+0x2c44>
   13a70:	mvn	r1, #-2147483648	; 0x80000000
   13a74:	udiv	r1, r1, r4
   13a78:	cmp	r1, r5
   13a7c:	bge	13ad0 <putchar_unlocked@plt+0x2c6c>
   13a80:	b	13abc <putchar_unlocked@plt+0x2c58>
   13a84:	cmn	r5, #1
   13a88:	ble	13ac0 <putchar_unlocked@plt+0x2c5c>
   13a8c:	cmn	r4, #1
   13a90:	beq	13ad0 <putchar_unlocked@plt+0x2c6c>
   13a94:	mov	r1, #-2147483648	; 0x80000000
   13a98:	sdiv	r1, r1, r4
   13a9c:	cmp	r1, r5
   13aa0:	bge	13ad0 <putchar_unlocked@plt+0x2c6c>
   13aa4:	b	13abc <putchar_unlocked@plt+0x2c58>
   13aa8:	beq	13ad0 <putchar_unlocked@plt+0x2c6c>
   13aac:	mov	r1, #-2147483648	; 0x80000000
   13ab0:	sdiv	r1, r1, r5
   13ab4:	cmp	r1, r4
   13ab8:	bge	13ad0 <putchar_unlocked@plt+0x2c6c>
   13abc:	bl	13bb8 <putchar_unlocked@plt+0x2d54>
   13ac0:	mvn	r1, #-2147483648	; 0x80000000
   13ac4:	sdiv	r1, r1, r4
   13ac8:	cmp	r5, r1
   13acc:	blt	13abc <putchar_unlocked@plt+0x2c58>
   13ad0:	mul	r1, r5, r4
   13ad4:	bl	13870 <putchar_unlocked@plt+0x2a0c>
   13ad8:	str	r5, [r8]
   13adc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13ae0:	mov	r1, #1
   13ae4:	b	13ae8 <putchar_unlocked@plt+0x2c84>
   13ae8:	push	{fp, lr}
   13aec:	mov	fp, sp
   13af0:	bl	13bfc <putchar_unlocked@plt+0x2d98>
   13af4:	pop	{fp, lr}
   13af8:	b	13844 <putchar_unlocked@plt+0x29e0>
   13afc:	mov	r1, #1
   13b00:	b	13b04 <putchar_unlocked@plt+0x2ca0>
   13b04:	push	{fp, lr}
   13b08:	mov	fp, sp
   13b0c:	bl	142dc <putchar_unlocked@plt+0x3478>
   13b10:	pop	{fp, lr}
   13b14:	b	13844 <putchar_unlocked@plt+0x29e0>
   13b18:	push	{r4, r5, fp, lr}
   13b1c:	add	fp, sp, #8
   13b20:	mov	r4, r1
   13b24:	mov	r5, r0
   13b28:	mov	r0, r1
   13b2c:	bl	13830 <putchar_unlocked@plt+0x29cc>
   13b30:	mov	r1, r5
   13b34:	mov	r2, r4
   13b38:	pop	{r4, r5, fp, lr}
   13b3c:	b	10cb4 <memcpy@plt>
   13b40:	push	{r4, r5, fp, lr}
   13b44:	add	fp, sp, #8
   13b48:	mov	r4, r1
   13b4c:	mov	r5, r0
   13b50:	mov	r0, r1
   13b54:	bl	13858 <putchar_unlocked@plt+0x29f4>
   13b58:	mov	r1, r5
   13b5c:	mov	r2, r4
   13b60:	pop	{r4, r5, fp, lr}
   13b64:	b	10cb4 <memcpy@plt>
   13b68:	push	{r4, r5, fp, lr}
   13b6c:	add	fp, sp, #8
   13b70:	mov	r4, r1
   13b74:	mov	r5, r0
   13b78:	add	r0, r1, #1
   13b7c:	bl	13858 <putchar_unlocked@plt+0x29f4>
   13b80:	mov	r1, #0
   13b84:	strb	r1, [r0, r4]
   13b88:	mov	r1, r5
   13b8c:	mov	r2, r4
   13b90:	pop	{r4, r5, fp, lr}
   13b94:	b	10cb4 <memcpy@plt>
   13b98:	push	{r4, sl, fp, lr}
   13b9c:	add	fp, sp, #8
   13ba0:	mov	r4, r0
   13ba4:	bl	10db0 <strlen@plt>
   13ba8:	add	r1, r0, #1
   13bac:	mov	r0, r4
   13bb0:	pop	{r4, sl, fp, lr}
   13bb4:	b	13b18 <putchar_unlocked@plt+0x2cb4>
   13bb8:	push	{fp, lr}
   13bbc:	mov	fp, sp
   13bc0:	movw	r0, #24780	; 0x60cc
   13bc4:	movt	r0, #2
   13bc8:	ldr	r4, [r0]
   13bcc:	movw	r1, #20208	; 0x4ef0
   13bd0:	movt	r1, #1
   13bd4:	mov	r0, #0
   13bd8:	mov	r2, #5
   13bdc:	bl	10ccc <dcgettext@plt>
   13be0:	mov	r3, r0
   13be4:	movw	r2, #19167	; 0x4adf
   13be8:	movt	r2, #1
   13bec:	mov	r0, r4
   13bf0:	mov	r1, #0
   13bf4:	bl	10d44 <error@plt>
   13bf8:	bl	10e58 <abort@plt>
   13bfc:	clz	r2, r1
   13c00:	lsr	r2, r2, #5
   13c04:	clz	r3, r0
   13c08:	lsr	r3, r3, #5
   13c0c:	orrs	r2, r3, r2
   13c10:	movwne	r1, #1
   13c14:	movwne	r0, #1
   13c18:	cmp	r1, #0
   13c1c:	beq	13c4c <putchar_unlocked@plt+0x2de8>
   13c20:	mvn	r2, #-2147483648	; 0x80000000
   13c24:	udiv	r2, r2, r1
   13c28:	cmp	r2, r0
   13c2c:	bcs	13c4c <putchar_unlocked@plt+0x2de8>
   13c30:	push	{fp, lr}
   13c34:	mov	fp, sp
   13c38:	bl	10dbc <__errno_location@plt>
   13c3c:	mov	r1, #12
   13c40:	str	r1, [r0]
   13c44:	mov	r0, #0
   13c48:	pop	{fp, pc}
   13c4c:	b	10c6c <calloc@plt>
   13c50:	cmp	r0, #0
   13c54:	movweq	r0, #1
   13c58:	cmn	r0, #1
   13c5c:	ble	13c64 <putchar_unlocked@plt+0x2e00>
   13c60:	b	10d50 <malloc@plt>
   13c64:	push	{fp, lr}
   13c68:	mov	fp, sp
   13c6c:	bl	10dbc <__errno_location@plt>
   13c70:	mov	r1, #12
   13c74:	str	r1, [r0]
   13c78:	mov	r0, #0
   13c7c:	pop	{fp, pc}
   13c80:	push	{fp, lr}
   13c84:	mov	fp, sp
   13c88:	cmp	r0, #0
   13c8c:	beq	13ca8 <putchar_unlocked@plt+0x2e44>
   13c90:	cmp	r1, #0
   13c94:	beq	13cb4 <putchar_unlocked@plt+0x2e50>
   13c98:	cmn	r1, #1
   13c9c:	ble	13cc0 <putchar_unlocked@plt+0x2e5c>
   13ca0:	pop	{fp, lr}
   13ca4:	b	10cd8 <realloc@plt>
   13ca8:	mov	r0, r1
   13cac:	pop	{fp, lr}
   13cb0:	b	13c50 <putchar_unlocked@plt+0x2dec>
   13cb4:	bl	11734 <putchar_unlocked@plt+0x8d0>
   13cb8:	mov	r0, #0
   13cbc:	pop	{fp, pc}
   13cc0:	bl	10dbc <__errno_location@plt>
   13cc4:	mov	r1, #12
   13cc8:	str	r1, [r0]
   13ccc:	mov	r0, #0
   13cd0:	pop	{fp, pc}
   13cd4:	sub	r0, r0, #1
   13cd8:	ldrb	r3, [r0, #1]!
   13cdc:	cmp	r3, #47	; 0x2f
   13ce0:	beq	13cd8 <putchar_unlocked@plt+0x2e74>
   13ce4:	mov	r2, #0
   13ce8:	mov	r1, r0
   13cec:	b	13cf8 <putchar_unlocked@plt+0x2e94>
   13cf0:	mov	r2, #1
   13cf4:	ldrb	r3, [r1, #1]!
   13cf8:	uxtb	r3, r3
   13cfc:	cmp	r3, #47	; 0x2f
   13d00:	beq	13cf0 <putchar_unlocked@plt+0x2e8c>
   13d04:	cmp	r3, #0
   13d08:	bxeq	lr
   13d0c:	tst	r2, #1
   13d10:	movne	r0, r1
   13d14:	mov	r2, #0
   13d18:	ldrb	r3, [r1, #1]!
   13d1c:	b	13cf8 <putchar_unlocked@plt+0x2e94>
   13d20:	push	{r4, sl, fp, lr}
   13d24:	add	fp, sp, #8
   13d28:	mov	r4, r0
   13d2c:	bl	10db0 <strlen@plt>
   13d30:	mov	r1, r0
   13d34:	sub	r2, r4, #1
   13d38:	mov	r0, r1
   13d3c:	cmp	r1, #2
   13d40:	bcc	13d54 <putchar_unlocked@plt+0x2ef0>
   13d44:	ldrb	r3, [r2, r0]
   13d48:	sub	r1, r0, #1
   13d4c:	cmp	r3, #47	; 0x2f
   13d50:	beq	13d38 <putchar_unlocked@plt+0x2ed4>
   13d54:	pop	{r4, sl, fp, pc}
   13d58:	mov	r1, r0
   13d5c:	sub	r2, r0, #65	; 0x41
   13d60:	mov	r0, #1
   13d64:	cmp	r2, #26
   13d68:	subcs	r2, r1, #97	; 0x61
   13d6c:	cmpcs	r2, #26
   13d70:	bcs	13d78 <putchar_unlocked@plt+0x2f14>
   13d74:	bx	lr
   13d78:	sub	r1, r1, #48	; 0x30
   13d7c:	cmp	r1, #10
   13d80:	movcs	r0, #0
   13d84:	bx	lr
   13d88:	mov	r1, r0
   13d8c:	sub	r2, r0, #65	; 0x41
   13d90:	mov	r0, #1
   13d94:	cmp	r2, #26
   13d98:	subcs	r1, r1, #97	; 0x61
   13d9c:	cmpcs	r1, #26
   13da0:	movcs	r0, #0
   13da4:	bx	lr
   13da8:	mov	r1, #0
   13dac:	cmp	r0, #128	; 0x80
   13db0:	movwcc	r1, #1
   13db4:	mov	r0, r1
   13db8:	bx	lr
   13dbc:	sub	r1, r0, #9
   13dc0:	clz	r1, r1
   13dc4:	lsr	r1, r1, #5
   13dc8:	sub	r0, r0, #32
   13dcc:	clz	r0, r0
   13dd0:	lsr	r0, r0, #5
   13dd4:	orr	r0, r0, r1
   13dd8:	bx	lr
   13ddc:	mov	r1, r0
   13de0:	mov	r0, #1
   13de4:	cmp	r1, #32
   13de8:	bxcc	lr
   13dec:	cmp	r1, #127	; 0x7f
   13df0:	movne	r0, #0
   13df4:	bx	lr
   13df8:	sub	r1, r0, #48	; 0x30
   13dfc:	mov	r0, #0
   13e00:	cmp	r1, #10
   13e04:	movwcc	r0, #1
   13e08:	bx	lr
   13e0c:	sub	r1, r0, #33	; 0x21
   13e10:	mov	r0, #0
   13e14:	cmp	r1, #94	; 0x5e
   13e18:	movwcc	r0, #1
   13e1c:	bx	lr
   13e20:	sub	r1, r0, #97	; 0x61
   13e24:	mov	r0, #0
   13e28:	cmp	r1, #26
   13e2c:	movwcc	r0, #1
   13e30:	bx	lr
   13e34:	sub	r1, r0, #32
   13e38:	mov	r0, #0
   13e3c:	cmp	r1, #95	; 0x5f
   13e40:	movwcc	r0, #1
   13e44:	bx	lr
   13e48:	sub	r1, r0, #33	; 0x21
   13e4c:	cmp	r1, #93	; 0x5d
   13e50:	bhi	13fdc <putchar_unlocked@plt+0x3178>
   13e54:	mov	r0, #1
   13e58:	add	r2, pc, #0
   13e5c:	ldr	pc, [r2, r1, lsl #2]
   13e60:	ldrdeq	r3, [r1], -r8
   13e64:	ldrdeq	r3, [r1], -r8
   13e68:	ldrdeq	r3, [r1], -r8
   13e6c:	ldrdeq	r3, [r1], -r8
   13e70:	ldrdeq	r3, [r1], -r8
   13e74:	ldrdeq	r3, [r1], -r8
   13e78:	ldrdeq	r3, [r1], -r8
   13e7c:	ldrdeq	r3, [r1], -r8
   13e80:	ldrdeq	r3, [r1], -r8
   13e84:	ldrdeq	r3, [r1], -r8
   13e88:	ldrdeq	r3, [r1], -r8
   13e8c:	ldrdeq	r3, [r1], -r8
   13e90:	ldrdeq	r3, [r1], -r8
   13e94:	ldrdeq	r3, [r1], -r8
   13e98:	ldrdeq	r3, [r1], -r8
   13e9c:	ldrdeq	r3, [r1], -ip
   13ea0:	ldrdeq	r3, [r1], -ip
   13ea4:	ldrdeq	r3, [r1], -ip
   13ea8:	ldrdeq	r3, [r1], -ip
   13eac:	ldrdeq	r3, [r1], -ip
   13eb0:	ldrdeq	r3, [r1], -ip
   13eb4:	ldrdeq	r3, [r1], -ip
   13eb8:	ldrdeq	r3, [r1], -ip
   13ebc:	ldrdeq	r3, [r1], -ip
   13ec0:	ldrdeq	r3, [r1], -ip
   13ec4:	ldrdeq	r3, [r1], -r8
   13ec8:	ldrdeq	r3, [r1], -r8
   13ecc:	ldrdeq	r3, [r1], -r8
   13ed0:	ldrdeq	r3, [r1], -r8
   13ed4:	ldrdeq	r3, [r1], -r8
   13ed8:	ldrdeq	r3, [r1], -r8
   13edc:	ldrdeq	r3, [r1], -r8
   13ee0:	ldrdeq	r3, [r1], -ip
   13ee4:	ldrdeq	r3, [r1], -ip
   13ee8:	ldrdeq	r3, [r1], -ip
   13eec:	ldrdeq	r3, [r1], -ip
   13ef0:	ldrdeq	r3, [r1], -ip
   13ef4:	ldrdeq	r3, [r1], -ip
   13ef8:	ldrdeq	r3, [r1], -ip
   13efc:	ldrdeq	r3, [r1], -ip
   13f00:	ldrdeq	r3, [r1], -ip
   13f04:	ldrdeq	r3, [r1], -ip
   13f08:	ldrdeq	r3, [r1], -ip
   13f0c:	ldrdeq	r3, [r1], -ip
   13f10:	ldrdeq	r3, [r1], -ip
   13f14:	ldrdeq	r3, [r1], -ip
   13f18:	ldrdeq	r3, [r1], -ip
   13f1c:	ldrdeq	r3, [r1], -ip
   13f20:	ldrdeq	r3, [r1], -ip
   13f24:	ldrdeq	r3, [r1], -ip
   13f28:	ldrdeq	r3, [r1], -ip
   13f2c:	ldrdeq	r3, [r1], -ip
   13f30:	ldrdeq	r3, [r1], -ip
   13f34:	ldrdeq	r3, [r1], -ip
   13f38:	ldrdeq	r3, [r1], -ip
   13f3c:	ldrdeq	r3, [r1], -ip
   13f40:	ldrdeq	r3, [r1], -ip
   13f44:	ldrdeq	r3, [r1], -ip
   13f48:	ldrdeq	r3, [r1], -r8
   13f4c:	ldrdeq	r3, [r1], -r8
   13f50:	ldrdeq	r3, [r1], -r8
   13f54:	ldrdeq	r3, [r1], -r8
   13f58:	ldrdeq	r3, [r1], -r8
   13f5c:	ldrdeq	r3, [r1], -r8
   13f60:	ldrdeq	r3, [r1], -ip
   13f64:	ldrdeq	r3, [r1], -ip
   13f68:	ldrdeq	r3, [r1], -ip
   13f6c:	ldrdeq	r3, [r1], -ip
   13f70:	ldrdeq	r3, [r1], -ip
   13f74:	ldrdeq	r3, [r1], -ip
   13f78:	ldrdeq	r3, [r1], -ip
   13f7c:	ldrdeq	r3, [r1], -ip
   13f80:	ldrdeq	r3, [r1], -ip
   13f84:	ldrdeq	r3, [r1], -ip
   13f88:	ldrdeq	r3, [r1], -ip
   13f8c:	ldrdeq	r3, [r1], -ip
   13f90:	ldrdeq	r3, [r1], -ip
   13f94:	ldrdeq	r3, [r1], -ip
   13f98:	ldrdeq	r3, [r1], -ip
   13f9c:	ldrdeq	r3, [r1], -ip
   13fa0:	ldrdeq	r3, [r1], -ip
   13fa4:	ldrdeq	r3, [r1], -ip
   13fa8:	ldrdeq	r3, [r1], -ip
   13fac:	ldrdeq	r3, [r1], -ip
   13fb0:	ldrdeq	r3, [r1], -ip
   13fb4:	ldrdeq	r3, [r1], -ip
   13fb8:	ldrdeq	r3, [r1], -ip
   13fbc:	ldrdeq	r3, [r1], -ip
   13fc0:	ldrdeq	r3, [r1], -ip
   13fc4:	ldrdeq	r3, [r1], -ip
   13fc8:	ldrdeq	r3, [r1], -r8
   13fcc:	ldrdeq	r3, [r1], -r8
   13fd0:	ldrdeq	r3, [r1], -r8
   13fd4:	ldrdeq	r3, [r1], -r8
   13fd8:	bx	lr
   13fdc:	mov	r0, #0
   13fe0:	bx	lr
   13fe4:	sub	r0, r0, #9
   13fe8:	cmp	r0, #23
   13fec:	movhi	r0, #0
   13ff0:	bxhi	lr
   13ff4:	bic	r0, r0, #-16777216	; 0xff000000
   13ff8:	movw	r1, #31
   13ffc:	movt	r1, #128	; 0x80
   14000:	mov	r2, #1
   14004:	and	r0, r2, r1, lsr r0
   14008:	bx	lr
   1400c:	sub	r1, r0, #65	; 0x41
   14010:	mov	r0, #0
   14014:	cmp	r1, #26
   14018:	movwcc	r0, #1
   1401c:	bx	lr
   14020:	mov	r1, r0
   14024:	sub	r2, r0, #48	; 0x30
   14028:	mov	r0, #1
   1402c:	cmp	r2, #22
   14030:	bhi	14048 <putchar_unlocked@plt+0x31e4>
   14034:	mov	ip, #1
   14038:	movw	r3, #1023	; 0x3ff
   1403c:	movt	r3, #126	; 0x7e
   14040:	tst	r3, ip, lsl r2
   14044:	bxne	lr
   14048:	sub	r1, r1, #97	; 0x61
   1404c:	cmp	r1, #6
   14050:	movcs	r0, #0
   14054:	bxcs	lr
   14058:	bx	lr
   1405c:	sub	r1, r0, #65	; 0x41
   14060:	cmp	r1, #26
   14064:	addcc	r0, r0, #32
   14068:	bx	lr
   1406c:	sub	r1, r0, #97	; 0x61
   14070:	cmp	r1, #26
   14074:	subcc	r0, r0, #32
   14078:	bx	lr
   1407c:	push	{r4, r5, r6, sl, fp, lr}
   14080:	add	fp, sp, #16
   14084:	mov	r4, r0
   14088:	bl	10d20 <__fpending@plt>
   1408c:	mov	r5, r0
   14090:	mov	r0, r4
   14094:	bl	10d2c <ferror_unlocked@plt>
   14098:	mov	r6, r0
   1409c:	mov	r0, r4
   140a0:	bl	14100 <putchar_unlocked@plt+0x329c>
   140a4:	cmp	r6, #0
   140a8:	beq	140cc <putchar_unlocked@plt+0x3268>
   140ac:	mvn	r4, #0
   140b0:	cmp	r0, #0
   140b4:	bne	140f8 <putchar_unlocked@plt+0x3294>
   140b8:	bl	10dbc <__errno_location@plt>
   140bc:	mov	r1, #0
   140c0:	str	r1, [r0]
   140c4:	mov	r0, r4
   140c8:	pop	{r4, r5, r6, sl, fp, pc}
   140cc:	cmp	r0, #0
   140d0:	mov	r4, r0
   140d4:	mvnne	r4, #0
   140d8:	cmp	r5, #0
   140dc:	bne	140f8 <putchar_unlocked@plt+0x3294>
   140e0:	cmp	r0, #0
   140e4:	beq	140f8 <putchar_unlocked@plt+0x3294>
   140e8:	bl	10dbc <__errno_location@plt>
   140ec:	ldr	r0, [r0]
   140f0:	subs	r4, r0, #9
   140f4:	mvnne	r4, #0
   140f8:	mov	r0, r4
   140fc:	pop	{r4, r5, r6, sl, fp, pc}
   14100:	push	{r4, r5, fp, lr}
   14104:	add	fp, sp, #8
   14108:	sub	sp, sp, #8
   1410c:	mov	r4, r0
   14110:	bl	10dec <fileno@plt>
   14114:	cmn	r0, #1
   14118:	ble	14190 <putchar_unlocked@plt+0x332c>
   1411c:	mov	r0, r4
   14120:	bl	10d68 <__freading@plt>
   14124:	cmp	r0, #0
   14128:	beq	14154 <putchar_unlocked@plt+0x32f0>
   1412c:	mov	r0, r4
   14130:	bl	10dec <fileno@plt>
   14134:	mov	r1, #1
   14138:	str	r1, [sp]
   1413c:	mov	r2, #0
   14140:	mov	r3, #0
   14144:	bl	10d08 <lseek64@plt>
   14148:	and	r0, r0, r1
   1414c:	cmn	r0, #1
   14150:	beq	14190 <putchar_unlocked@plt+0x332c>
   14154:	mov	r0, r4
   14158:	bl	141a0 <putchar_unlocked@plt+0x333c>
   1415c:	cmp	r0, #0
   14160:	beq	14190 <putchar_unlocked@plt+0x332c>
   14164:	bl	10dbc <__errno_location@plt>
   14168:	ldr	r5, [r0]
   1416c:	mov	r0, r4
   14170:	bl	10e04 <fclose@plt>
   14174:	cmp	r5, #0
   14178:	beq	14188 <putchar_unlocked@plt+0x3324>
   1417c:	bl	10dbc <__errno_location@plt>
   14180:	str	r5, [r0]
   14184:	mvn	r0, #0
   14188:	sub	sp, fp, #8
   1418c:	pop	{r4, r5, fp, pc}
   14190:	mov	r0, r4
   14194:	sub	sp, fp, #8
   14198:	pop	{r4, r5, fp, lr}
   1419c:	b	10e04 <fclose@plt>
   141a0:	push	{r4, sl, fp, lr}
   141a4:	add	fp, sp, #8
   141a8:	mov	r4, r0
   141ac:	cmp	r0, #0
   141b0:	beq	141c8 <putchar_unlocked@plt+0x3364>
   141b4:	mov	r0, r4
   141b8:	bl	10d68 <__freading@plt>
   141bc:	cmp	r0, #0
   141c0:	movne	r0, r4
   141c4:	blne	141d4 <putchar_unlocked@plt+0x3370>
   141c8:	mov	r0, r4
   141cc:	pop	{r4, sl, fp, lr}
   141d0:	b	10c90 <fflush@plt>
   141d4:	push	{fp, lr}
   141d8:	mov	fp, sp
   141dc:	sub	sp, sp, #8
   141e0:	ldrb	r1, [r0, #1]
   141e4:	tst	r1, #1
   141e8:	beq	14200 <putchar_unlocked@plt+0x339c>
   141ec:	mov	r1, #1
   141f0:	str	r1, [sp]
   141f4:	mov	r2, #0
   141f8:	mov	r3, #0
   141fc:	bl	14208 <putchar_unlocked@plt+0x33a4>
   14200:	mov	sp, fp
   14204:	pop	{fp, pc}
   14208:	push	{r4, r5, r6, r7, fp, lr}
   1420c:	add	fp, sp, #16
   14210:	sub	sp, sp, #8
   14214:	mov	r5, r3
   14218:	mov	r6, r2
   1421c:	mov	r4, r0
   14220:	ldr	r0, [r0, #4]
   14224:	ldr	r1, [r4, #8]
   14228:	cmp	r1, r0
   1422c:	bne	14248 <putchar_unlocked@plt+0x33e4>
   14230:	ldrd	r0, [r4, #16]
   14234:	cmp	r1, r0
   14238:	bne	14248 <putchar_unlocked@plt+0x33e4>
   1423c:	ldr	r0, [r4, #36]	; 0x24
   14240:	cmp	r0, #0
   14244:	beq	14260 <putchar_unlocked@plt+0x33fc>
   14248:	mov	r0, r4
   1424c:	mov	r2, r6
   14250:	mov	r3, r5
   14254:	sub	sp, fp, #16
   14258:	pop	{r4, r5, r6, r7, fp, lr}
   1425c:	b	10e10 <fseeko64@plt>
   14260:	ldr	r7, [fp, #8]
   14264:	mov	r0, r4
   14268:	bl	10dec <fileno@plt>
   1426c:	str	r7, [sp]
   14270:	mov	r2, r6
   14274:	mov	r3, r5
   14278:	bl	10d08 <lseek64@plt>
   1427c:	and	r2, r0, r1
   14280:	cmn	r2, #1
   14284:	beq	142a4 <putchar_unlocked@plt+0x3440>
   14288:	strd	r0, [r4, #80]	; 0x50
   1428c:	ldr	r0, [r4]
   14290:	bic	r0, r0, #16
   14294:	str	r0, [r4]
   14298:	mov	r0, #0
   1429c:	sub	sp, fp, #16
   142a0:	pop	{r4, r5, r6, r7, fp, pc}
   142a4:	mvn	r0, #0
   142a8:	sub	sp, fp, #16
   142ac:	pop	{r4, r5, r6, r7, fp, pc}
   142b0:	push	{fp, lr}
   142b4:	mov	fp, sp
   142b8:	bl	10dbc <__errno_location@plt>
   142bc:	mov	r1, #12
   142c0:	str	r1, [r0]
   142c4:	mov	r0, #0
   142c8:	pop	{fp, pc}
   142cc:	b	13c50 <putchar_unlocked@plt+0x2dec>
   142d0:	cmp	r1, #0
   142d4:	orreq	r1, r1, #1
   142d8:	b	13c80 <putchar_unlocked@plt+0x2e1c>
   142dc:	b	13bfc <putchar_unlocked@plt+0x2d98>
   142e0:	clz	r3, r2
   142e4:	lsr	ip, r3, #5
   142e8:	clz	r3, r1
   142ec:	lsr	r3, r3, #5
   142f0:	orrs	r3, r3, ip
   142f4:	movwne	r1, #1
   142f8:	movwne	r2, #1
   142fc:	b	1439c <putchar_unlocked@plt+0x3538>
   14300:	push	{fp, lr}
   14304:	mov	fp, sp
   14308:	mov	r0, #14
   1430c:	bl	10e34 <nl_langinfo@plt>
   14310:	movw	r1, #18461	; 0x481d
   14314:	movt	r1, #1
   14318:	cmp	r0, #0
   1431c:	movne	r1, r0
   14320:	ldrb	r2, [r1]
   14324:	movw	r0, #20225	; 0x4f01
   14328:	movt	r0, #1
   1432c:	cmp	r2, #0
   14330:	movne	r0, r1
   14334:	pop	{fp, pc}
   14338:	push	{r4, r5, r6, r7, fp, lr}
   1433c:	add	fp, sp, #16
   14340:	sub	sp, sp, #8
   14344:	mov	r7, r2
   14348:	mov	r4, r1
   1434c:	add	r5, sp, #4
   14350:	cmp	r0, #0
   14354:	movne	r5, r0
   14358:	mov	r0, r5
   1435c:	bl	10d38 <mbrtowc@plt>
   14360:	mov	r6, r0
   14364:	cmp	r7, #0
   14368:	beq	14390 <putchar_unlocked@plt+0x352c>
   1436c:	cmn	r6, #2
   14370:	bcc	14390 <putchar_unlocked@plt+0x352c>
   14374:	mov	r0, #0
   14378:	bl	143d8 <putchar_unlocked@plt+0x3574>
   1437c:	cmp	r0, #0
   14380:	bne	14390 <putchar_unlocked@plt+0x352c>
   14384:	ldrb	r0, [r4]
   14388:	str	r0, [r5]
   1438c:	mov	r6, #1
   14390:	mov	r0, r6
   14394:	sub	sp, fp, #16
   14398:	pop	{r4, r5, r6, r7, fp, pc}
   1439c:	cmp	r2, #0
   143a0:	beq	143d0 <putchar_unlocked@plt+0x356c>
   143a4:	mvn	r3, #0
   143a8:	udiv	r3, r3, r2
   143ac:	cmp	r3, r1
   143b0:	bcs	143d0 <putchar_unlocked@plt+0x356c>
   143b4:	push	{fp, lr}
   143b8:	mov	fp, sp
   143bc:	bl	10dbc <__errno_location@plt>
   143c0:	mov	r1, #12
   143c4:	str	r1, [r0]
   143c8:	mov	r0, #0
   143cc:	pop	{fp, pc}
   143d0:	mul	r1, r2, r1
   143d4:	b	13c80 <putchar_unlocked@plt+0x2e1c>
   143d8:	push	{r4, sl, fp, lr}
   143dc:	add	fp, sp, #8
   143e0:	sub	sp, sp, #264	; 0x108
   143e4:	add	r1, sp, #7
   143e8:	movw	r2, #257	; 0x101
   143ec:	bl	14444 <putchar_unlocked@plt+0x35e0>
   143f0:	mov	r4, #0
   143f4:	cmp	r0, #0
   143f8:	bne	14438 <putchar_unlocked@plt+0x35d4>
   143fc:	add	r0, sp, #7
   14400:	movw	r1, #20231	; 0x4f07
   14404:	movt	r1, #1
   14408:	mov	r2, #2
   1440c:	bl	10da4 <bcmp@plt>
   14410:	cmp	r0, #0
   14414:	beq	14438 <putchar_unlocked@plt+0x35d4>
   14418:	add	r0, sp, #7
   1441c:	movw	r1, #20233	; 0x4f09
   14420:	movt	r1, #1
   14424:	mov	r2, #6
   14428:	bl	10da4 <bcmp@plt>
   1442c:	mov	r4, r0
   14430:	cmp	r0, #0
   14434:	movwne	r4, #1
   14438:	mov	r0, r4
   1443c:	sub	sp, fp, #8
   14440:	pop	{r4, sl, fp, pc}
   14444:	b	14448 <putchar_unlocked@plt+0x35e4>
   14448:	push	{r4, r5, r6, r7, fp, lr}
   1444c:	add	fp, sp, #16
   14450:	mov	r6, r2
   14454:	mov	r4, r1
   14458:	bl	144e0 <putchar_unlocked@plt+0x367c>
   1445c:	cmp	r0, #0
   14460:	beq	14490 <putchar_unlocked@plt+0x362c>
   14464:	mov	r7, r0
   14468:	bl	10db0 <strlen@plt>
   1446c:	cmp	r0, r6
   14470:	bcs	144ac <putchar_unlocked@plt+0x3648>
   14474:	add	r2, r0, #1
   14478:	mov	r0, r4
   1447c:	mov	r1, r7
   14480:	bl	10cb4 <memcpy@plt>
   14484:	mov	r5, #0
   14488:	mov	r0, r5
   1448c:	pop	{r4, r5, r6, r7, fp, pc}
   14490:	mov	r5, #22
   14494:	cmp	r6, #0
   14498:	beq	144d4 <putchar_unlocked@plt+0x3670>
   1449c:	mov	r0, #0
   144a0:	strb	r0, [r4]
   144a4:	mov	r0, r5
   144a8:	pop	{r4, r5, r6, r7, fp, pc}
   144ac:	mov	r5, #34	; 0x22
   144b0:	cmp	r6, #0
   144b4:	beq	144d4 <putchar_unlocked@plt+0x3670>
   144b8:	sub	r6, r6, #1
   144bc:	mov	r0, r4
   144c0:	mov	r1, r7
   144c4:	mov	r2, r6
   144c8:	bl	10cb4 <memcpy@plt>
   144cc:	mov	r0, #0
   144d0:	strb	r0, [r4, r6]
   144d4:	mov	r0, r5
   144d8:	pop	{r4, r5, r6, r7, fp, pc}
   144dc:	b	144e0 <putchar_unlocked@plt+0x367c>
   144e0:	mov	r1, #0
   144e4:	b	10e1c <setlocale@plt>
   144e8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   144ec:	mov	r7, r0
   144f0:	ldr	r6, [pc, #72]	; 14540 <putchar_unlocked@plt+0x36dc>
   144f4:	ldr	r5, [pc, #72]	; 14544 <putchar_unlocked@plt+0x36e0>
   144f8:	add	r6, pc, r6
   144fc:	add	r5, pc, r5
   14500:	sub	r6, r6, r5
   14504:	mov	r8, r1
   14508:	mov	r9, r2
   1450c:	bl	10c4c <calloc@plt-0x20>
   14510:	asrs	r6, r6, #2
   14514:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14518:	mov	r4, #0
   1451c:	add	r4, r4, #1
   14520:	ldr	r3, [r5], #4
   14524:	mov	r2, r9
   14528:	mov	r1, r8
   1452c:	mov	r0, r7
   14530:	blx	r3
   14534:	cmp	r6, r4
   14538:	bne	1451c <putchar_unlocked@plt+0x36b8>
   1453c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14540:	andeq	r1, r1, ip, lsl #20
   14544:	andeq	r1, r1, r4, lsl #20
   14548:	bx	lr
   1454c:	ldr	r3, [pc, #12]	; 14560 <putchar_unlocked@plt+0x36fc>
   14550:	mov	r1, #0
   14554:	add	r3, pc, r3
   14558:	ldr	r2, [r3]
   1455c:	b	10dc8 <__cxa_atexit@plt>
   14560:	andeq	r1, r1, r8, ror #22

Disassembly of section .fini:

00014564 <.fini>:
   14564:	push	{r3, lr}
   14568:	pop	{r3, pc}
