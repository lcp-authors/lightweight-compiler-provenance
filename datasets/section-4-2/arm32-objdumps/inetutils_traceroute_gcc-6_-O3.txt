
../repos/inetutils/src/traceroute:     file format elf32-littlearm


Disassembly of section .init:

00010fc0 <.init>:
   10fc0:	push	{r3, lr}
   10fc4:	bl	115f0 <__assert_fail@plt+0x328>
   10fc8:	pop	{r3, pc}

Disassembly of section .plt:

00010fcc <calloc@plt-0x14>:
   10fcc:	push	{lr}		; (str lr, [sp, #-4]!)
   10fd0:	ldr	lr, [pc, #4]	; 10fdc <calloc@plt-0x4>
   10fd4:	add	lr, pc, lr
   10fd8:	ldr	pc, [lr, #8]!
   10fdc:	andeq	sp, r1, r4, lsr #32

00010fe0 <calloc@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #118784	; 0x1d000
   10fe8:	ldr	pc, [ip, #36]!	; 0x24

00010fec <fputs_unlocked@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #118784	; 0x1d000
   10ff4:	ldr	pc, [ip, #28]!

00010ff8 <raise@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #118784	; 0x1d000
   11000:	ldr	pc, [ip, #20]!

00011004 <strcmp@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #118784	; 0x1d000
   1100c:	ldr	pc, [ip, #12]!

00011010 <strtol@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #118784	; 0x1d000
   11018:	ldr	pc, [ip, #4]!

0001101c <setsockopt@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #28, 20	; 0x1c000
   11024:	ldr	pc, [ip, #4092]!	; 0xffc

00011028 <printf@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #28, 20	; 0x1c000
   11030:	ldr	pc, [ip, #4084]!	; 0xff4

00011034 <getprotobyname@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #28, 20	; 0x1c000
   1103c:	ldr	pc, [ip, #4076]!	; 0xfec

00011040 <fflush@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #28, 20	; 0x1c000
   11048:	ldr	pc, [ip, #4068]!	; 0xfe4

0001104c <memmove@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #28, 20	; 0x1c000
   11054:	ldr	pc, [ip, #4060]!	; 0xfdc

00011058 <strchrnul@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #28, 20	; 0x1c000
   11060:	ldr	pc, [ip, #4052]!	; 0xfd4

00011064 <free@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #28, 20	; 0x1c000
   1106c:	ldr	pc, [ip, #4044]!	; 0xfcc

00011070 <gai_strerror@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #28, 20	; 0x1c000
   11078:	ldr	pc, [ip, #4036]!	; 0xfc4

0001107c <strndup@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #28, 20	; 0x1c000
   11084:	ldr	pc, [ip, #4028]!	; 0xfbc

00011088 <memcpy@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #28, 20	; 0x1c000
   11090:	ldr	pc, [ip, #4020]!	; 0xfb4

00011094 <fwrite_unlocked@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #28, 20	; 0x1c000
   1109c:	ldr	pc, [ip, #4012]!	; 0xfac

000110a0 <inet_ntoa@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #28, 20	; 0x1c000
   110a8:	ldr	pc, [ip, #4004]!	; 0xfa4

000110ac <select@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #28, 20	; 0x1c000
   110b4:	ldr	pc, [ip, #3996]!	; 0xf9c

000110b8 <sleep@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #28, 20	; 0x1c000
   110c0:	ldr	pc, [ip, #3988]!	; 0xf94

000110c4 <gethostbyaddr@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #28, 20	; 0x1c000
   110cc:	ldr	pc, [ip, #3980]!	; 0xf8c

000110d0 <recvfrom@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #28, 20	; 0x1c000
   110d8:	ldr	pc, [ip, #3972]!	; 0xf84

000110dc <realloc@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #28, 20	; 0x1c000
   110e4:	ldr	pc, [ip, #3964]!	; 0xf7c

000110e8 <strcasecmp@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #28, 20	; 0x1c000
   110f0:	ldr	pc, [ip, #3956]!	; 0xf74

000110f4 <funlockfile@plt>:
   110f4:	add	ip, pc, #0, 12
   110f8:	add	ip, ip, #28, 20	; 0x1c000
   110fc:	ldr	pc, [ip, #3948]!	; 0xf6c

00011100 <fwrite@plt>:
   11100:	add	ip, pc, #0, 12
   11104:	add	ip, ip, #28, 20	; 0x1c000
   11108:	ldr	pc, [ip, #3940]!	; 0xf64

0001110c <strcat@plt>:
   1110c:	add	ip, pc, #0, 12
   11110:	add	ip, ip, #28, 20	; 0x1c000
   11114:	ldr	pc, [ip, #3932]!	; 0xf5c

00011118 <gettimeofday@plt>:
   11118:	add	ip, pc, #0, 12
   1111c:	add	ip, ip, #28, 20	; 0x1c000
   11120:	ldr	pc, [ip, #3924]!	; 0xf54

00011124 <error@plt>:
   11124:	add	ip, pc, #0, 12
   11128:	add	ip, ip, #28, 20	; 0x1c000
   1112c:	ldr	pc, [ip, #3916]!	; 0xf4c

00011130 <getenv@plt>:
   11130:	add	ip, pc, #0, 12
   11134:	add	ip, ip, #28, 20	; 0x1c000
   11138:	ldr	pc, [ip, #3908]!	; 0xf44

0001113c <malloc@plt>:
   1113c:	add	ip, pc, #0, 12
   11140:	add	ip, ip, #28, 20	; 0x1c000
   11144:	ldr	pc, [ip, #3900]!	; 0xf3c

00011148 <__libc_start_main@plt>:
   11148:	add	ip, pc, #0, 12
   1114c:	add	ip, ip, #28, 20	; 0x1c000
   11150:	ldr	pc, [ip, #3892]!	; 0xf34

00011154 <strerror@plt>:
   11154:	add	ip, pc, #0, 12
   11158:	add	ip, ip, #28, 20	; 0x1c000
   1115c:	ldr	pc, [ip, #3884]!	; 0xf2c

00011160 <__ctype_tolower_loc@plt>:
   11160:	add	ip, pc, #0, 12
   11164:	add	ip, ip, #28, 20	; 0x1c000
   11168:	ldr	pc, [ip, #3876]!	; 0xf24

0001116c <__gmon_start__@plt>:
   1116c:	add	ip, pc, #0, 12
   11170:	add	ip, ip, #28, 20	; 0x1c000
   11174:	ldr	pc, [ip, #3868]!	; 0xf1c

00011178 <mempcpy@plt>:
   11178:	add	ip, pc, #0, 12
   1117c:	add	ip, ip, #28, 20	; 0x1c000
   11180:	ldr	pc, [ip, #3860]!	; 0xf14

00011184 <__ctype_b_loc@plt>:
   11184:	add	ip, pc, #0, 12
   11188:	add	ip, ip, #28, 20	; 0x1c000
   1118c:	ldr	pc, [ip, #3852]!	; 0xf0c

00011190 <getpid@plt>:
   11190:	add	ip, pc, #0, 12
   11194:	add	ip, ip, #28, 20	; 0x1c000
   11198:	ldr	pc, [ip, #3844]!	; 0xf04

0001119c <exit@plt>:
   1119c:	add	ip, pc, #0, 12
   111a0:	add	ip, ip, #28, 20	; 0x1c000
   111a4:	ldr	pc, [ip, #3836]!	; 0xefc

000111a8 <strlen@plt>:
   111a8:	add	ip, pc, #0, 12
   111ac:	add	ip, ip, #28, 20	; 0x1c000
   111b0:	ldr	pc, [ip, #3828]!	; 0xef4

000111b4 <strchr@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #28, 20	; 0x1c000
   111bc:	ldr	pc, [ip, #3820]!	; 0xeec

000111c0 <fprintf@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #28, 20	; 0x1c000
   111c8:	ldr	pc, [ip, #3812]!	; 0xee4

000111cc <__errno_location@plt>:
   111cc:	add	ip, pc, #0, 12
   111d0:	add	ip, ip, #28, 20	; 0x1c000
   111d4:	ldr	pc, [ip, #3804]!	; 0xedc

000111d8 <strerror_r@plt>:
   111d8:	add	ip, pc, #0, 12
   111dc:	add	ip, ip, #28, 20	; 0x1c000
   111e0:	ldr	pc, [ip, #3796]!	; 0xed4

000111e4 <memset@plt>:
   111e4:	add	ip, pc, #0, 12
   111e8:	add	ip, ip, #28, 20	; 0x1c000
   111ec:	ldr	pc, [ip, #3788]!	; 0xecc

000111f0 <putchar@plt>:
   111f0:	add	ip, pc, #0, 12
   111f4:	add	ip, ip, #28, 20	; 0x1c000
   111f8:	ldr	pc, [ip, #3780]!	; 0xec4

000111fc <memchr@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #28, 20	; 0x1c000
   11204:	ldr	pc, [ip, #3772]!	; 0xebc

00011208 <sendto@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #28, 20	; 0x1c000
   11210:	ldr	pc, [ip, #3764]!	; 0xeb4

00011214 <__overflow@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #28, 20	; 0x1c000
   1121c:	ldr	pc, [ip, #3756]!	; 0xeac

00011220 <setlocale@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #28, 20	; 0x1c000
   11228:	ldr	pc, [ip, #3748]!	; 0xea4

0001122c <getnameinfo@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #28, 20	; 0x1c000
   11234:	ldr	pc, [ip, #3740]!	; 0xe9c

00011238 <strrchr@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #28, 20	; 0x1c000
   11240:	ldr	pc, [ip, #3732]!	; 0xe94

00011244 <vfprintf@plt>:
   11244:	add	ip, pc, #0, 12
   11248:	add	ip, ip, #28, 20	; 0x1c000
   1124c:	ldr	pc, [ip, #3724]!	; 0xe8c

00011250 <fputc@plt>:
   11250:	add	ip, pc, #0, 12
   11254:	add	ip, ip, #28, 20	; 0x1c000
   11258:	ldr	pc, [ip, #3716]!	; 0xe84

0001125c <flockfile@plt>:
   1125c:	add	ip, pc, #0, 12
   11260:	add	ip, ip, #28, 20	; 0x1c000
   11264:	ldr	pc, [ip, #3708]!	; 0xe7c

00011268 <vsnprintf@plt>:
   11268:	add	ip, pc, #0, 12
   1126c:	add	ip, ip, #28, 20	; 0x1c000
   11270:	ldr	pc, [ip, #3700]!	; 0xe74

00011274 <qsort@plt>:
   11274:	add	ip, pc, #0, 12
   11278:	add	ip, ip, #28, 20	; 0x1c000
   1127c:	ldr	pc, [ip, #3692]!	; 0xe6c

00011280 <strpbrk@plt>:
   11280:	add	ip, pc, #0, 12
   11284:	add	ip, ip, #28, 20	; 0x1c000
   11288:	ldr	pc, [ip, #3684]!	; 0xe64

0001128c <freeaddrinfo@plt>:
   1128c:	add	ip, pc, #0, 12
   11290:	add	ip, ip, #28, 20	; 0x1c000
   11294:	ldr	pc, [ip, #3676]!	; 0xe5c

00011298 <getaddrinfo@plt>:
   11298:	add	ip, pc, #0, 12
   1129c:	add	ip, ip, #28, 20	; 0x1c000
   112a0:	ldr	pc, [ip, #3668]!	; 0xe54

000112a4 <socket@plt>:
   112a4:	add	ip, pc, #0, 12
   112a8:	add	ip, ip, #28, 20	; 0x1c000
   112ac:	ldr	pc, [ip, #3660]!	; 0xe4c

000112b0 <strncmp@plt>:
   112b0:	add	ip, pc, #0, 12
   112b4:	add	ip, ip, #28, 20	; 0x1c000
   112b8:	ldr	pc, [ip, #3652]!	; 0xe44

000112bc <abort@plt>:
   112bc:	add	ip, pc, #0, 12
   112c0:	add	ip, ip, #28, 20	; 0x1c000
   112c4:	ldr	pc, [ip, #3644]!	; 0xe3c

000112c8 <__assert_fail@plt>:
   112c8:	add	ip, pc, #0, 12
   112cc:	add	ip, ip, #28, 20	; 0x1c000
   112d0:	ldr	pc, [ip, #3636]!	; 0xe34

Disassembly of section .text:

000112d8 <argp_failure@@Base-0x41e0>:
   112d8:	push	{r4, lr}
   112dc:	mov	r2, #768	; 0x300
   112e0:	ldr	r3, [pc, #8]	; 112f0 <__assert_fail@plt+0x28>
   112e4:	ldr	r1, [pc, #8]	; 112f4 <__assert_fail@plt+0x2c>
   112e8:	ldr	r0, [pc, #8]	; 112f8 <__assert_fail@plt+0x30>
   112ec:	bl	112c8 <__assert_fail@plt>
   112f0:	andeq	ip, r1, r0, ror #10
   112f4:	andeq	ip, r1, r4, lsl #14
   112f8:	andeq	ip, r1, r4, lsl r7
   112fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11300:	mov	r5, r0
   11304:	sub	sp, sp, #116	; 0x74
   11308:	ldr	r0, [r1]
   1130c:	mov	r4, r1
   11310:	bl	18a8c <argp_parse@@Base+0x1084>
   11314:	ldr	r1, [pc, #604]	; 11578 <__assert_fail@plt+0x2b0>
   11318:	mov	r0, #6
   1131c:	bl	11220 <setlocale@plt>
   11320:	bl	11190 <getpid@plt>
   11324:	ldr	r2, [pc, #592]	; 1157c <__assert_fail@plt+0x2b4>
   11328:	ldr	r3, [pc, #592]	; 11580 <__assert_fail@plt+0x2b8>
   1132c:	ldr	ip, [pc, #592]	; 11584 <__assert_fail@plt+0x2bc>
   11330:	ldr	r1, [pc, #592]	; 11588 <__assert_fail@plt+0x2c0>
   11334:	str	ip, [r2]
   11338:	ldr	r6, [pc, #588]	; 1158c <__assert_fail@plt+0x2c4>
   1133c:	uxth	r2, r0
   11340:	ldr	r0, [pc, #584]	; 11590 <__assert_fail@plt+0x2c8>
   11344:	str	r2, [r3]
   11348:	bl	188b0 <argp_parse@@Base+0xea8>
   1134c:	mov	r3, #0
   11350:	str	r3, [sp, #4]
   11354:	str	r3, [sp]
   11358:	mov	r2, r4
   1135c:	mov	r1, r5
   11360:	ldr	r0, [pc, #556]	; 11594 <__assert_fail@plt+0x2cc>
   11364:	bl	17a08 <argp_parse@@Base>
   11368:	ldr	r3, [r6, #16]
   1136c:	cmp	r3, #0
   11370:	beq	11540 <__assert_fail@plt+0x278>
   11374:	ldrb	r3, [r3]
   11378:	cmp	r3, #0
   1137c:	beq	11540 <__assert_fail@plt+0x278>
   11380:	mov	r2, #32
   11384:	mov	r1, #0
   11388:	add	r0, sp, #20
   1138c:	bl	111e4 <memset@plt>
   11390:	ldr	r8, [r6, #16]
   11394:	mov	lr, #2
   11398:	mov	ip, #194	; 0xc2
   1139c:	add	r2, sp, #20
   113a0:	mov	r0, r8
   113a4:	add	r3, sp, #16
   113a8:	mov	r1, #0
   113ac:	str	lr, [sp, #24]
   113b0:	str	ip, [sp, #20]
   113b4:	bl	11298 <getaddrinfo@plt>
   113b8:	cmp	r0, #0
   113bc:	bne	11564 <__assert_fail@plt+0x29c>
   113c0:	ldr	r4, [sp, #16]
   113c4:	ldr	r7, [pc, #460]	; 11598 <__assert_fail@plt+0x2d0>
   113c8:	ldr	r5, [pc, #460]	; 1159c <__assert_fail@plt+0x2d4>
   113cc:	ldr	r2, [r4, #16]
   113d0:	ldr	r1, [r4, #20]
   113d4:	mov	r0, r7
   113d8:	bl	11088 <memcpy@plt>
   113dc:	ldr	ip, [r5, #8]
   113e0:	ldr	r1, [r4, #16]
   113e4:	ldr	r0, [r4, #20]
   113e8:	mov	r3, #0
   113ec:	mov	r4, #1
   113f0:	rev16	ip, ip
   113f4:	stmib	sp, {r3, r4}
   113f8:	str	r3, [sp]
   113fc:	ldr	r2, [pc, #412]	; 115a0 <__assert_fail@plt+0x2d8>
   11400:	strh	ip, [r7, #2]
   11404:	mov	r3, #46	; 0x2e
   11408:	bl	1122c <getnameinfo@plt>
   1140c:	ldr	r1, [sp, #16]
   11410:	ldr	r3, [r5, #4]
   11414:	ldr	r2, [pc, #388]	; 115a0 <__assert_fail@plt+0x2d8>
   11418:	ldr	r1, [r1, #24]
   1141c:	ldr	r0, [pc, #384]	; 115a4 <__assert_fail@plt+0x2dc>
   11420:	cmp	r1, #0
   11424:	moveq	r1, r8
   11428:	bl	11028 <printf@plt>
   1142c:	mov	r0, r8
   11430:	bl	18984 <argp_parse@@Base+0xf7c>
   11434:	ldr	r0, [sp, #16]
   11438:	bl	1128c <freeaddrinfo@plt>
   1143c:	mov	r0, r7
   11440:	bl	12660 <__assert_fail@plt+0x1398>
   11444:	ldr	r3, [r7, #12]
   11448:	ldr	ip, [r6, #4]
   1144c:	str	r3, [sp]
   11450:	add	r0, sp, #52	; 0x34
   11454:	ldm	r7, {r1, r2, r3}
   11458:	str	ip, [sp, #4]
   1145c:	bl	11b00 <__assert_fail@plt+0x838>
   11460:	ldr	r3, [pc, #320]	; 115a8 <__assert_fail@plt+0x2e0>
   11464:	ldr	r7, [r6, #24]
   11468:	mvn	r2, #0
   1146c:	cmp	r7, #0
   11470:	str	r2, [r3]
   11474:	bne	11554 <__assert_fail@plt+0x28c>
   11478:	ldr	r2, [r5, #4]
   1147c:	cmp	r2, #0
   11480:	ble	1155c <__assert_fail@plt+0x294>
   11484:	ldr	fp, [pc, #288]	; 115ac <__assert_fail@plt+0x2e4>
   11488:	mov	sl, r4
   1148c:	mov	r9, #4
   11490:	mov	r8, #2
   11494:	b	114d8 <__assert_fail@plt+0x210>
   11498:	ldr	r3, [sp, #60]	; 0x3c
   1149c:	cmp	r3, #0
   114a0:	bne	114bc <__assert_fail@plt+0x1f4>
   114a4:	ldrh	r3, [sp, #70]	; 0x46
   114a8:	rev16	r3, r3
   114ac:	uxth	r3, r3
   114b0:	add	r3, r3, #1
   114b4:	rev16	r3, r3
   114b8:	strh	r3, [sp, #70]	; 0x46
   114bc:	ldr	r3, [r6, #24]
   114c0:	add	r4, r4, #1
   114c4:	cmp	r3, #0
   114c8:	bne	11554 <__assert_fail@plt+0x28c>
   114cc:	ldr	r2, [r5, #4]
   114d0:	cmp	r2, r4
   114d4:	blt	1155c <__assert_fail@plt+0x294>
   114d8:	ldr	r3, [r5, #12]
   114dc:	mov	r1, r4
   114e0:	add	r0, sp, #52	; 0x34
   114e4:	bl	12244 <__assert_fail@plt+0xf7c>
   114e8:	ldr	r0, [sp, #60]	; 0x3c
   114ec:	ldr	ip, [sp, #100]	; 0x64
   114f0:	ldr	r3, [sp, #52]	; 0x34
   114f4:	ldr	r2, [sp, #56]	; 0x38
   114f8:	cmp	r0, #0
   114fc:	moveq	r0, r2
   11500:	movne	r0, r3
   11504:	add	ip, ip, #1
   11508:	str	r9, [sp]
   1150c:	add	r3, sp, #100	; 0x64
   11510:	mov	r2, r8
   11514:	mov	r1, r7
   11518:	str	ip, [sp, #100]	; 0x64
   1151c:	bl	1101c <setsockopt@plt>
   11520:	cmp	r0, #0
   11524:	bge	11498 <__assert_fail@plt+0x1d0>
   11528:	bl	111cc <__errno_location@plt>
   1152c:	mov	r2, fp
   11530:	ldr	r1, [r0]
   11534:	mov	r0, sl
   11538:	bl	11124 <error@plt>
   1153c:	b	11498 <__assert_fail@plt+0x1d0>
   11540:	ldr	r2, [pc, #104]	; 115b0 <__assert_fail@plt+0x2e8>
   11544:	mov	r1, #0
   11548:	mov	r0, #1
   1154c:	bl	11124 <error@plt>
   11550:	b	11380 <__assert_fail@plt+0xb8>
   11554:	mov	r0, #0
   11558:	bl	1119c <exit@plt>
   1155c:	mov	r0, #1
   11560:	bl	1119c <exit@plt>
   11564:	ldr	r2, [pc, #68]	; 115b0 <__assert_fail@plt+0x2e8>
   11568:	mov	r1, #0
   1156c:	mov	r0, #1
   11570:	bl	11124 <error@plt>
   11574:	b	113c0 <__assert_fail@plt+0xf8>
   11578:	andeq	sp, r1, r0, ror r5
   1157c:	andeq	lr, r2, r0, ror r3
   11580:	andeq	lr, r2, r8, lsr r3
   11584:	andeq	ip, r1, r0, lsr #16
   11588:	andeq	lr, r2, ip, lsr #2
   1158c:	andeq	lr, r2, ip, lsr #5
   11590:	andeq	ip, r1, r8, lsr r8
   11594:	andeq	lr, r2, r4, lsr r1
   11598:	andeq	lr, r2, r0, lsl #6
   1159c:	andeq	lr, r2, r4, lsl r1
   115a0:	andeq	lr, r2, r0, asr #6
   115a4:	andeq	ip, r1, r4, asr r8
   115a8:	andeq	lr, r2, ip, lsr r3
   115ac:	andeq	ip, r1, r0, lsr #14
   115b0:	andeq	ip, r1, r4, asr #16
   115b4:	mov	fp, #0
   115b8:	mov	lr, #0
   115bc:	pop	{r1}		; (ldr r1, [sp], #4)
   115c0:	mov	r2, sp
   115c4:	push	{r2}		; (str r2, [sp, #-4]!)
   115c8:	push	{r0}		; (str r0, [sp, #-4]!)
   115cc:	ldr	ip, [pc, #16]	; 115e4 <__assert_fail@plt+0x31c>
   115d0:	push	{ip}		; (str ip, [sp, #-4]!)
   115d4:	ldr	r0, [pc, #12]	; 115e8 <__assert_fail@plt+0x320>
   115d8:	ldr	r3, [pc, #12]	; 115ec <__assert_fail@plt+0x324>
   115dc:	bl	11148 <__libc_start_main@plt>
   115e0:	bl	112bc <abort@plt>
   115e4:	andeq	ip, r1, r0, asr r5
   115e8:	strdeq	r1, [r1], -ip
   115ec:	strdeq	ip, [r1], -r0
   115f0:	ldr	r3, [pc, #20]	; 1160c <__assert_fail@plt+0x344>
   115f4:	ldr	r2, [pc, #20]	; 11610 <__assert_fail@plt+0x348>
   115f8:	add	r3, pc, r3
   115fc:	ldr	r2, [r3, r2]
   11600:	cmp	r2, #0
   11604:	bxeq	lr
   11608:	b	1116c <__gmon_start__@plt>
   1160c:	andeq	ip, r1, r0, lsl #20
   11610:	andeq	r0, r0, r8, lsl #2
   11614:	ldr	r3, [pc, #28]	; 11638 <__assert_fail@plt+0x370>
   11618:	ldr	r0, [pc, #28]	; 1163c <__assert_fail@plt+0x374>
   1161c:	sub	r3, r3, r0
   11620:	cmp	r3, #6
   11624:	bxls	lr
   11628:	ldr	r3, [pc, #16]	; 11640 <__assert_fail@plt+0x378>
   1162c:	cmp	r3, #0
   11630:	bxeq	lr
   11634:	bx	r3
   11638:	muleq	r2, r7, r2
   1163c:	muleq	r2, r4, r2
   11640:	andeq	r0, r0, r0
   11644:	ldr	r1, [pc, #36]	; 11670 <__assert_fail@plt+0x3a8>
   11648:	ldr	r0, [pc, #36]	; 11674 <__assert_fail@plt+0x3ac>
   1164c:	sub	r1, r1, r0
   11650:	asr	r1, r1, #2
   11654:	add	r1, r1, r1, lsr #31
   11658:	asrs	r1, r1, #1
   1165c:	bxeq	lr
   11660:	ldr	r3, [pc, #16]	; 11678 <__assert_fail@plt+0x3b0>
   11664:	cmp	r3, #0
   11668:	bxeq	lr
   1166c:	bx	r3
   11670:	muleq	r2, r4, r2
   11674:	muleq	r2, r4, r2
   11678:	andeq	r0, r0, r0
   1167c:	push	{r4, lr}
   11680:	ldr	r4, [pc, #24]	; 116a0 <__assert_fail@plt+0x3d8>
   11684:	ldrb	r3, [r4]
   11688:	cmp	r3, #0
   1168c:	popne	{r4, pc}
   11690:	bl	11614 <__assert_fail@plt+0x34c>
   11694:	mov	r3, #1
   11698:	strb	r3, [r4]
   1169c:	pop	{r4, pc}
   116a0:	andeq	lr, r2, r8, lsr #5
   116a4:	ldr	r0, [pc, #40]	; 116d4 <__assert_fail@plt+0x40c>
   116a8:	ldr	r3, [r0]
   116ac:	cmp	r3, #0
   116b0:	bne	116b8 <__assert_fail@plt+0x3f0>
   116b4:	b	11644 <__assert_fail@plt+0x37c>
   116b8:	ldr	r3, [pc, #24]	; 116d8 <__assert_fail@plt+0x410>
   116bc:	cmp	r3, #0
   116c0:	beq	116b4 <__assert_fail@plt+0x3ec>
   116c4:	push	{r4, lr}
   116c8:	blx	r3
   116cc:	pop	{r4, lr}
   116d0:	b	11644 <__assert_fail@plt+0x37c>
   116d4:	andeq	sp, r2, ip, lsl #30
	...
   116e0:	cmp	r0, #109	; 0x6d
   116e4:	push	{r4, r5, r6, r7, r8, lr}
   116e8:	mov	r5, r1
   116ec:	sub	sp, sp, #8
   116f0:	beq	118e4 <__assert_fail@plt+0x61c>
   116f4:	mov	r4, r0
   116f8:	mov	r6, r2
   116fc:	ble	11730 <__assert_fail@plt+0x468>
   11700:	cmp	r0, #116	; 0x74
   11704:	beq	117d8 <__assert_fail@plt+0x510>
   11708:	ble	11888 <__assert_fail@plt+0x5c0>
   1170c:	cmp	r0, #256	; 0x100
   11710:	beq	11820 <__assert_fail@plt+0x558>
   11714:	ldr	r3, [pc, #892]	; 11a98 <__assert_fail@plt+0x7d0>
   11718:	cmp	r0, r3
   1171c:	beq	1198c <__assert_fail@plt+0x6c4>
   11720:	cmp	r0, #119	; 0x77
   11724:	beq	119c8 <__assert_fail@plt+0x700>
   11728:	mov	r4, #7
   1172c:	b	117cc <__assert_fail@plt+0x504>
   11730:	cmp	r0, #77	; 0x4d
   11734:	beq	11a10 <__assert_fail@plt+0x748>
   11738:	ble	117ac <__assert_fail@plt+0x4e4>
   1173c:	cmp	r0, #102	; 0x66
   11740:	beq	11834 <__assert_fail@plt+0x56c>
   11744:	cmp	r0, #103	; 0x67
   11748:	bne	11728 <__assert_fail@plt+0x460>
   1174c:	ldr	r6, [pc, #840]	; 11a9c <__assert_fail@plt+0x7d4>
   11750:	ldr	r7, [r6]
   11754:	cmp	r7, #0
   11758:	beq	11a84 <__assert_fail@plt+0x7bc>
   1175c:	mov	r0, r7
   11760:	bl	111a8 <strlen@plt>
   11764:	mov	r4, #0
   11768:	mov	r8, r0
   1176c:	mov	r0, r5
   11770:	bl	111a8 <strlen@plt>
   11774:	add	r1, r8, r0
   11778:	add	r1, r1, #3
   1177c:	mov	r0, r7
   11780:	bl	198e8 <argp_parse@@Base+0x1ee0>
   11784:	mov	r3, #44	; 0x2c
   11788:	mov	r1, r5
   1178c:	str	r0, [r6]
   11790:	strb	r3, [r0, r8]
   11794:	ldr	r0, [r6]
   11798:	add	r0, r0, r8
   1179c:	strb	r4, [r0, #1]
   117a0:	ldr	r0, [r6]
   117a4:	bl	1110c <strcat@plt>
   117a8:	b	117cc <__assert_fail@plt+0x504>
   117ac:	cmp	r0, #0
   117b0:	beq	119ac <__assert_fail@plt+0x6e4>
   117b4:	cmp	r0, #73	; 0x49
   117b8:	bne	11728 <__assert_fail@plt+0x460>
   117bc:	ldr	r3, [pc, #728]	; 11a9c <__assert_fail@plt+0x7d4>
   117c0:	mov	r4, #0
   117c4:	mov	r2, #1
   117c8:	str	r2, [r3, #4]
   117cc:	mov	r0, r4
   117d0:	add	sp, sp, #8
   117d4:	pop	{r4, r5, r6, r7, r8, pc}
   117d8:	mov	r2, #0
   117dc:	add	r1, sp, #4
   117e0:	mov	r0, r5
   117e4:	bl	11010 <strtol@plt>
   117e8:	ldr	r2, [pc, #688]	; 11aa0 <__assert_fail@plt+0x7d8>
   117ec:	ldr	r3, [sp, #4]
   117f0:	str	r0, [r2, #16]
   117f4:	ldrb	r3, [r3]
   117f8:	cmp	r0, #255	; 0xff
   117fc:	cmpls	r3, #0
   11800:	beq	11878 <__assert_fail@plt+0x5b0>
   11804:	mov	r3, r5
   11808:	ldr	r2, [pc, #660]	; 11aa4 <__assert_fail@plt+0x7dc>
   1180c:	mov	r1, #0
   11810:	mov	r0, #1
   11814:	bl	11124 <error@plt>
   11818:	mov	r4, #0
   1181c:	b	117cc <__assert_fail@plt+0x504>
   11820:	ldr	r3, [pc, #628]	; 11a9c <__assert_fail@plt+0x7d4>
   11824:	mov	r2, #1
   11828:	mov	r4, #0
   1182c:	str	r2, [r3, #8]
   11830:	b	117cc <__assert_fail@plt+0x504>
   11834:	mov	r2, #0
   11838:	add	r1, sp, #4
   1183c:	mov	r0, r5
   11840:	bl	11010 <strtol@plt>
   11844:	ldr	r1, [pc, #596]	; 11aa0 <__assert_fail@plt+0x7d8>
   11848:	ldr	r2, [sp, #4]
   1184c:	str	r0, [r1]
   11850:	ldrb	r2, [r2]
   11854:	sub	r3, r0, #1
   11858:	cmp	r3, #254	; 0xfe
   1185c:	cmpls	r2, #0
   11860:	beq	11878 <__assert_fail@plt+0x5b0>
   11864:	mov	r3, r5
   11868:	ldr	r2, [pc, #568]	; 11aa8 <__assert_fail@plt+0x7e0>
   1186c:	mov	r1, #0
   11870:	mov	r0, #1
   11874:	bl	11124 <error@plt>
   11878:	mov	r4, #0
   1187c:	mov	r0, r4
   11880:	add	sp, sp, #8
   11884:	pop	{r4, r5, r6, r7, r8, pc}
   11888:	cmp	r0, #112	; 0x70
   1188c:	beq	11930 <__assert_fail@plt+0x668>
   11890:	cmp	r0, #113	; 0x71
   11894:	bne	11728 <__assert_fail@plt+0x460>
   11898:	mov	r2, #10
   1189c:	add	r1, sp, #4
   118a0:	mov	r0, r5
   118a4:	bl	11010 <strtol@plt>
   118a8:	ldr	r3, [sp, #4]
   118ac:	ldr	r4, [pc, #492]	; 11aa0 <__assert_fail@plt+0x7d8>
   118b0:	ldrb	r2, [r3]
   118b4:	cmp	r2, #0
   118b8:	str	r0, [r4, #12]
   118bc:	bne	11a58 <__assert_fail@plt+0x790>
   118c0:	sub	r0, r0, #1
   118c4:	cmp	r0, #9
   118c8:	bls	11878 <__assert_fail@plt+0x5b0>
   118cc:	ldr	r2, [pc, #472]	; 11aac <__assert_fail@plt+0x7e4>
   118d0:	mov	r1, #0
   118d4:	mov	r0, #1
   118d8:	bl	11124 <error@plt>
   118dc:	mov	r4, #0
   118e0:	b	117cc <__assert_fail@plt+0x504>
   118e4:	mov	r2, #0
   118e8:	add	r1, sp, #4
   118ec:	mov	r0, r5
   118f0:	bl	11010 <strtol@plt>
   118f4:	ldr	r1, [pc, #420]	; 11aa0 <__assert_fail@plt+0x7d8>
   118f8:	ldr	r2, [sp, #4]
   118fc:	str	r0, [r1, #4]
   11900:	ldrb	r2, [r2]
   11904:	sub	r3, r0, #1
   11908:	cmp	r3, #254	; 0xfe
   1190c:	cmpls	r2, #0
   11910:	beq	11878 <__assert_fail@plt+0x5b0>
   11914:	mov	r3, r5
   11918:	ldr	r2, [pc, #400]	; 11ab0 <__assert_fail@plt+0x7e8>
   1191c:	mov	r1, #0
   11920:	mov	r0, #1
   11924:	bl	11124 <error@plt>
   11928:	mov	r4, #0
   1192c:	b	117cc <__assert_fail@plt+0x504>
   11930:	mov	r2, #0
   11934:	add	r1, sp, #4
   11938:	mov	r0, r5
   1193c:	bl	11010 <strtol@plt>
   11940:	ldr	r1, [pc, #344]	; 11aa0 <__assert_fail@plt+0x7d8>
   11944:	ldr	r2, [sp, #4]
   11948:	sub	r3, r0, #1
   1194c:	str	r0, [r1, #8]
   11950:	ldrb	r2, [r2]
   11954:	cmp	r3, #65536	; 0x10000
   11958:	movcc	r3, #0
   1195c:	movcs	r3, #1
   11960:	cmp	r2, #0
   11964:	orrne	r3, r3, #1
   11968:	cmp	r3, #0
   1196c:	beq	11878 <__assert_fail@plt+0x5b0>
   11970:	mov	r3, r5
   11974:	ldr	r2, [pc, #312]	; 11ab4 <__assert_fail@plt+0x7ec>
   11978:	mov	r1, #0
   1197c:	mov	r0, #1
   11980:	bl	11124 <error@plt>
   11984:	mov	r4, #0
   11988:	b	117cc <__assert_fail@plt+0x504>
   1198c:	ldr	r3, [pc, #264]	; 11a9c <__assert_fail@plt+0x7d4>
   11990:	ldrb	r4, [r3, #12]
   11994:	cmp	r4, #0
   11998:	bne	11878 <__assert_fail@plt+0x5b0>
   1199c:	mov	r0, r2
   119a0:	ldr	r1, [pc, #272]	; 11ab8 <__assert_fail@plt+0x7f0>
   119a4:	bl	16cf4 <argp_error@@Base>
   119a8:	b	117cc <__assert_fail@plt+0x504>
   119ac:	ldr	r6, [pc, #232]	; 11a9c <__assert_fail@plt+0x7d4>
   119b0:	mov	r3, #1
   119b4:	mov	r0, r1
   119b8:	strb	r3, [r6, #12]
   119bc:	bl	19ebc <argp_parse@@Base+0x24b4>
   119c0:	str	r0, [r6, #16]
   119c4:	b	117cc <__assert_fail@plt+0x504>
   119c8:	mov	r2, #0
   119cc:	add	r1, sp, #4
   119d0:	mov	r0, r5
   119d4:	bl	11010 <strtol@plt>
   119d8:	ldr	r2, [pc, #192]	; 11aa0 <__assert_fail@plt+0x7d8>
   119dc:	ldr	r3, [sp, #4]
   119e0:	str	r0, [r2, #20]
   119e4:	ldrb	r3, [r3]
   119e8:	cmp	r0, #60	; 0x3c
   119ec:	cmpls	r3, #0
   119f0:	beq	11878 <__assert_fail@plt+0x5b0>
   119f4:	mov	r3, r5
   119f8:	ldr	r2, [pc, #188]	; 11abc <__assert_fail@plt+0x7f4>
   119fc:	mov	r1, #0
   11a00:	mov	r0, #1
   11a04:	bl	11124 <error@plt>
   11a08:	mov	r4, #0
   11a0c:	b	117cc <__assert_fail@plt+0x504>
   11a10:	ldr	r1, [pc, #168]	; 11ac0 <__assert_fail@plt+0x7f8>
   11a14:	mov	r0, r5
   11a18:	bl	11004 <strcmp@plt>
   11a1c:	subs	r4, r0, #0
   11a20:	beq	11a48 <__assert_fail@plt+0x780>
   11a24:	mov	r0, r5
   11a28:	ldr	r1, [pc, #148]	; 11ac4 <__assert_fail@plt+0x7fc>
   11a2c:	bl	11004 <strcmp@plt>
   11a30:	cmp	r0, #0
   11a34:	bne	11a70 <__assert_fail@plt+0x7a8>
   11a38:	ldr	r3, [pc, #92]	; 11a9c <__assert_fail@plt+0x7d4>
   11a3c:	mov	r4, r0
   11a40:	str	r0, [r3, #4]
   11a44:	b	117cc <__assert_fail@plt+0x504>
   11a48:	ldr	r3, [pc, #76]	; 11a9c <__assert_fail@plt+0x7d4>
   11a4c:	mov	r2, #1
   11a50:	str	r2, [r3, #4]
   11a54:	b	117cc <__assert_fail@plt+0x504>
   11a58:	mov	r0, r6
   11a5c:	mov	r2, r5
   11a60:	ldr	r1, [pc, #96]	; 11ac8 <__assert_fail@plt+0x800>
   11a64:	bl	16cf4 <argp_error@@Base>
   11a68:	ldr	r0, [r4, #12]
   11a6c:	b	118c0 <__assert_fail@plt+0x5f8>
   11a70:	mov	r0, r6
   11a74:	ldr	r1, [pc, #80]	; 11acc <__assert_fail@plt+0x804>
   11a78:	bl	16cf4 <argp_error@@Base>
   11a7c:	mov	r4, #0
   11a80:	b	117cc <__assert_fail@plt+0x504>
   11a84:	mov	r0, r1
   11a88:	bl	19ebc <argp_parse@@Base+0x24b4>
   11a8c:	mov	r4, r7
   11a90:	str	r0, [r6]
   11a94:	b	117cc <__assert_fail@plt+0x504>
   11a98:	tsteq	r0, r4
   11a9c:	andeq	lr, r2, ip, lsr #5
   11aa0:	andeq	lr, r2, r4, lsl r1
   11aa4:	muleq	r1, r8, r6
   11aa8:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   11aac:	andeq	ip, r1, ip, ror #12
   11ab0:	andeq	ip, r1, r8, lsl r6
   11ab4:	andeq	ip, r1, r0, lsr r6
   11ab8:	andeq	ip, r1, ip, ror #13
   11abc:	andeq	ip, r1, ip, asr #13
   11ac0:			; <UNDEFINED> instruction: 0x0001c6b0
   11ac4:			; <UNDEFINED> instruction: 0x0001c6b8
   11ac8:	andeq	ip, r1, ip, asr #12
   11acc:			; <UNDEFINED> instruction: 0x0001c6bc
   11ad0:	push	{r4, lr}
   11ad4:	mov	r2, #2
   11ad8:	mov	r1, #4
   11adc:	mov	r4, r0
   11ae0:	bl	110c4 <gethostbyaddr@plt>
   11ae4:	cmp	r0, #0
   11ae8:	beq	11af4 <__assert_fail@plt+0x82c>
   11aec:	ldr	r0, [r0]
   11af0:	pop	{r4, pc}
   11af4:	ldr	r0, [r4]
   11af8:	pop	{r4, lr}
   11afc:	b	110a0 <inet_ntoa@plt>
   11b00:	sub	sp, sp, #16
   11b04:	push	{r4, r5, r6, r7, r8, lr}
   11b08:	sub	sp, sp, #8
   11b0c:	add	ip, sp, #36	; 0x24
   11b10:	subs	r4, r0, #0
   11b14:	stm	ip, {r1, r2, r3}
   11b18:	ldr	lr, [sp, #52]	; 0x34
   11b1c:	beq	11d88 <__assert_fail@plt+0xac0>
   11b20:	ldr	r5, [pc, #628]	; 11d9c <__assert_fail@plt+0xad4>
   11b24:	ldm	ip, {r0, r1, r2, r3}
   11b28:	add	ip, r4, #16
   11b2c:	ldr	r7, [r5]
   11b30:	mov	r6, #0
   11b34:	cmp	lr, #0
   11b38:	str	lr, [r4, #8]
   11b3c:	add	r8, r4, #48	; 0x30
   11b40:	stm	ip, {r0, r1, r2, r3}
   11b44:	str	r7, [r4, #48]	; 0x30
   11b48:	str	r6, [r4, #12]
   11b4c:	beq	11bac <__assert_fail@plt+0x8e4>
   11b50:	cmp	lr, #1
   11b54:	bls	11bf4 <__assert_fail@plt+0x92c>
   11b58:	ldr	r6, [r4]
   11b5c:	ldr	r3, [r5, #16]
   11b60:	cmp	r3, #0
   11b64:	blt	11b8c <__assert_fail@plt+0x8c4>
   11b68:	mov	r3, #4
   11b6c:	str	r3, [sp]
   11b70:	mov	r2, #1
   11b74:	ldr	r3, [pc, #548]	; 11da0 <__assert_fail@plt+0xad8>
   11b78:	mov	r1, #0
   11b7c:	mov	r0, r6
   11b80:	bl	1101c <setsockopt@plt>
   11b84:	cmp	r0, #0
   11b88:	blt	11c94 <__assert_fail@plt+0x9cc>
   11b8c:	ldr	r3, [pc, #528]	; 11da4 <__assert_fail@plt+0xadc>
   11b90:	ldr	r3, [r3, #20]
   11b94:	cmp	r3, #0
   11b98:	bne	11c54 <__assert_fail@plt+0x98c>
   11b9c:	add	sp, sp, #8
   11ba0:	pop	{r4, r5, r6, r7, r8, lr}
   11ba4:	add	sp, sp, #16
   11ba8:	bx	lr
   11bac:	mov	r1, #2
   11bb0:	mov	r2, lr
   11bb4:	mov	r0, r1
   11bb8:	bl	112a4 <socket@plt>
   11bbc:	cmp	r0, r6
   11bc0:	str	r0, [r4, #4]
   11bc4:	blt	11cc0 <__assert_fail@plt+0x9f8>
   11bc8:	mov	r3, #4
   11bcc:	str	r3, [sp]
   11bd0:	mov	r2, #2
   11bd4:	mov	r3, r8
   11bd8:	mov	r1, #0
   11bdc:	bl	1101c <setsockopt@plt>
   11be0:	cmp	r0, #0
   11be4:	blt	11cdc <__assert_fail@plt+0xa14>
   11be8:	ldr	r3, [r4, #8]
   11bec:	cmp	r3, #1
   11bf0:	bhi	11b58 <__assert_fail@plt+0x890>
   11bf4:	ldr	r0, [pc, #428]	; 11da8 <__assert_fail@plt+0xae0>
   11bf8:	bl	11034 <getprotobyname@plt>
   11bfc:	subs	r6, r0, #0
   11c00:	beq	11cac <__assert_fail@plt+0x9e4>
   11c04:	ldr	r2, [r6, #8]
   11c08:	mov	r1, #3
   11c0c:	mov	r0, #2
   11c10:	bl	112a4 <socket@plt>
   11c14:	cmp	r0, #0
   11c18:	str	r0, [r4]
   11c1c:	blt	11cf4 <__assert_fail@plt+0xa2c>
   11c20:	mov	r2, #4
   11c24:	str	r2, [sp]
   11c28:	mov	r3, r8
   11c2c:	mov	r2, #2
   11c30:	mov	r1, #0
   11c34:	bl	1101c <setsockopt@plt>
   11c38:	cmp	r0, #0
   11c3c:	blt	11d20 <__assert_fail@plt+0xa58>
   11c40:	ldr	r3, [r4, #8]
   11c44:	cmp	r3, #0
   11c48:	ldr	r6, [r4, #4]
   11c4c:	beq	11b5c <__assert_fail@plt+0x894>
   11c50:	b	11b58 <__assert_fail@plt+0x890>
   11c54:	str	r3, [sp]
   11c58:	mov	r0, r6
   11c5c:	ldr	r3, [pc, #328]	; 11dac <__assert_fail@plt+0xae4>
   11c60:	mov	r2, #4
   11c64:	mov	r1, #0
   11c68:	bl	1101c <setsockopt@plt>
   11c6c:	cmp	r0, #0
   11c70:	bge	11b9c <__assert_fail@plt+0x8d4>
   11c74:	bl	111cc <__errno_location@plt>
   11c78:	ldr	r2, [pc, #304]	; 11db0 <__assert_fail@plt+0xae8>
   11c7c:	ldr	r1, [r0]
   11c80:	mov	r0, #0
   11c84:	add	sp, sp, #8
   11c88:	pop	{r4, r5, r6, r7, r8, lr}
   11c8c:	add	sp, sp, #16
   11c90:	b	11124 <error@plt>
   11c94:	bl	111cc <__errno_location@plt>
   11c98:	ldr	r2, [pc, #276]	; 11db4 <__assert_fail@plt+0xaec>
   11c9c:	ldr	r1, [r0]
   11ca0:	mov	r0, #0
   11ca4:	bl	11124 <error@plt>
   11ca8:	b	11b8c <__assert_fail@plt+0x8c4>
   11cac:	mov	r1, r6
   11cb0:	ldr	r2, [pc, #256]	; 11db8 <__assert_fail@plt+0xaf0>
   11cb4:	mov	r0, #1
   11cb8:	bl	11124 <error@plt>
   11cbc:	b	11c40 <__assert_fail@plt+0x978>
   11cc0:	bl	111cc <__errno_location@plt>
   11cc4:	ldr	r2, [pc, #240]	; 11dbc <__assert_fail@plt+0xaf4>
   11cc8:	ldr	r1, [r0]
   11ccc:	mov	r0, #1
   11cd0:	bl	11124 <error@plt>
   11cd4:	ldr	r0, [r4, #4]
   11cd8:	b	11bc8 <__assert_fail@plt+0x900>
   11cdc:	bl	111cc <__errno_location@plt>
   11ce0:	ldr	r2, [pc, #216]	; 11dc0 <__assert_fail@plt+0xaf8>
   11ce4:	ldr	r1, [r0]
   11ce8:	mov	r0, #1
   11cec:	bl	11124 <error@plt>
   11cf0:	b	11be8 <__assert_fail@plt+0x920>
   11cf4:	bl	111cc <__errno_location@plt>
   11cf8:	ldr	r1, [r0]
   11cfc:	mov	r7, r0
   11d00:	cmp	r1, #13
   11d04:	cmpne	r1, #1
   11d08:	beq	11d3c <__assert_fail@plt+0xa74>
   11d0c:	mov	r0, #1
   11d10:	ldr	r2, [pc, #164]	; 11dbc <__assert_fail@plt+0xaf4>
   11d14:	bl	11124 <error@plt>
   11d18:	ldr	r0, [r4]
   11d1c:	b	11c20 <__assert_fail@plt+0x958>
   11d20:	bl	111cc <__errno_location@plt>
   11d24:	ldr	r2, [pc, #148]	; 11dc0 <__assert_fail@plt+0xaf8>
   11d28:	ldr	r1, [r0]
   11d2c:	mov	r0, #1
   11d30:	bl	11124 <error@plt>
   11d34:	ldr	r3, [r4, #8]
   11d38:	b	11c44 <__assert_fail@plt+0x97c>
   11d3c:	mov	r3, #0
   11d40:	mov	r1, #2
   11d44:	str	r3, [r0]
   11d48:	mov	r0, r1
   11d4c:	ldr	r2, [r6, #8]
   11d50:	bl	112a4 <socket@plt>
   11d54:	ldr	r3, [r4, #12]
   11d58:	add	r3, r3, #1
   11d5c:	str	r3, [r4, #12]
   11d60:	str	r0, [r4]
   11d64:	ldr	r3, [r7]
   11d68:	cmp	r3, #93	; 0x5d
   11d6c:	moveq	r3, #1
   11d70:	streq	r3, [r7]
   11d74:	ldreq	r0, [r4]
   11d78:	cmp	r0, #0
   11d7c:	bge	11c20 <__assert_fail@plt+0x958>
   11d80:	ldr	r1, [r7]
   11d84:	b	11d0c <__assert_fail@plt+0xa44>
   11d88:	ldr	r3, [pc, #52]	; 11dc4 <__assert_fail@plt+0xafc>
   11d8c:	ldr	r2, [pc, #52]	; 11dc8 <__assert_fail@plt+0xb00>
   11d90:	ldr	r1, [pc, #52]	; 11dcc <__assert_fail@plt+0xb04>
   11d94:	ldr	r0, [pc, #52]	; 11dd0 <__assert_fail@plt+0xb08>
   11d98:	bl	112c8 <__assert_fail@plt>
   11d9c:	andeq	lr, r2, r4, lsl r1
   11da0:	andeq	lr, r2, r4, lsr #2
   11da4:	andeq	lr, r2, ip, lsr #5
   11da8:			; <UNDEFINED> instruction: 0x0001c6b0
   11dac:	andeq	lr, r2, r0, lsl r3
   11db0:	andeq	ip, r1, r4, ror #14
   11db4:	andeq	ip, r1, r0, asr r7
   11db8:	andeq	ip, r1, ip, lsr #14
   11dbc:	andeq	ip, r1, r8, lsl r7
   11dc0:	andeq	ip, r1, r0, lsr #14
   11dc4:	andeq	ip, r1, r0, ror r5
   11dc8:	ldrdeq	r0, [r0], -fp
   11dcc:	andeq	ip, r1, r4, lsl #14
   11dd0:	andeq	ip, r1, r4, lsl r7
   11dd4:	cmp	r0, #0
   11dd8:	beq	11df0 <__assert_fail@plt+0xb28>
   11ddc:	ldr	r3, [pc, #36]	; 11e08 <__assert_fail@plt+0xb40>
   11de0:	cmp	r1, #1024	; 0x400
   11de4:	movcc	r1, r3
   11de8:	strh	r1, [r0, #18]
   11dec:	bx	lr
   11df0:	push	{r4, lr}
   11df4:	ldr	r3, [pc, #16]	; 11e0c <__assert_fail@plt+0xb44>
   11df8:	ldr	r2, [pc, #16]	; 11e10 <__assert_fail@plt+0xb48>
   11dfc:	ldr	r1, [pc, #16]	; 11e14 <__assert_fail@plt+0xb4c>
   11e00:	ldr	r0, [pc, #16]	; 11e18 <__assert_fail@plt+0xb50>
   11e04:	bl	112c8 <__assert_fail@plt>
   11e08:	muleq	r0, sl, r2
   11e0c:	andeq	ip, r1, ip, ror r5
   11e10:	andeq	r0, r0, sl, lsr #4
   11e14:	andeq	ip, r1, r4, lsl #14
   11e18:	andeq	ip, r1, r4, lsl r7
   11e1c:	push	{r4, r5, r6, lr}
   11e20:	subs	r4, r0, #0
   11e24:	sub	sp, sp, #160	; 0xa0
   11e28:	beq	1203c <__assert_fail@plt+0xd74>
   11e2c:	mov	r3, r4
   11e30:	mov	r5, r2
   11e34:	ldr	r0, [r3], #32
   11e38:	add	r2, sp, #20
   11e3c:	str	r3, [sp]
   11e40:	str	r2, [sp, #4]
   11e44:	mov	ip, #16
   11e48:	mov	r6, r1
   11e4c:	mov	r3, #0
   11e50:	add	r1, sp, #24
   11e54:	mov	r2, #136	; 0x88
   11e58:	str	ip, [sp, #20]
   11e5c:	bl	110d0 <recvfrom@plt>
   11e60:	cmp	r0, #0
   11e64:	blt	12000 <__assert_fail@plt+0xd38>
   11e68:	add	r3, sp, #16
   11e6c:	add	r2, sp, #12
   11e70:	add	r0, sp, #24
   11e74:	mov	r1, #136	; 0x88
   11e78:	bl	12834 <__assert_fail@plt+0x156c>
   11e7c:	ldr	r3, [sp, #16]
   11e80:	ldr	r0, [r4, #8]
   11e84:	ldrb	r2, [r3]
   11e88:	cmp	r0, #0
   11e8c:	str	r2, [r6]
   11e90:	ldrb	r2, [r3, #1]
   11e94:	str	r2, [r5]
   11e98:	beq	11f44 <__assert_fail@plt+0xc7c>
   11e9c:	cmp	r0, #1
   11ea0:	bne	11f38 <__assert_fail@plt+0xc70>
   11ea4:	ldrb	r2, [r3]
   11ea8:	and	r1, r2, #247	; 0xf7
   11eac:	cmp	r2, #0
   11eb0:	cmpne	r1, #3
   11eb4:	movne	ip, #1
   11eb8:	moveq	ip, #0
   11ebc:	bne	12028 <__assert_fail@plt+0xd60>
   11ec0:	cmp	r2, #0
   11ec4:	bne	11f98 <__assert_fail@plt+0xcd0>
   11ec8:	ldrh	r2, [r3, #6]
   11ecc:	ldr	r1, [pc, #380]	; 12050 <__assert_fail@plt+0xd88>
   11ed0:	rev16	r2, r2
   11ed4:	ldr	r1, [r1]
   11ed8:	uxth	r2, r2
   11edc:	cmp	r2, r1
   11ee0:	bne	12028 <__assert_fail@plt+0xd60>
   11ee4:	ldrh	r3, [r3, #4]
   11ee8:	ldr	r2, [pc, #356]	; 12054 <__assert_fail@plt+0xd8c>
   11eec:	rev16	r3, r3
   11ef0:	ldr	r2, [r2]
   11ef4:	uxth	r3, r3
   11ef8:	cmp	r3, r2
   11efc:	beq	11f0c <__assert_fail@plt+0xc44>
   11f00:	ldr	r3, [r4, #12]
   11f04:	cmp	r3, #0
   11f08:	beq	12028 <__assert_fail@plt+0xd60>
   11f0c:	ldr	r2, [sp, #12]
   11f10:	ldr	r3, [pc, #320]	; 12058 <__assert_fail@plt+0xd90>
   11f14:	ldr	r0, [r2, #12]
   11f18:	ldr	r3, [r3, #4]
   11f1c:	cmp	r0, r3
   11f20:	movne	r0, ip
   11f24:	orreq	r0, ip, #1
   11f28:	ands	r0, r0, #255	; 0xff
   11f2c:	beq	11f3c <__assert_fail@plt+0xc74>
   11f30:	mov	r0, ip
   11f34:	b	11fec <__assert_fail@plt+0xd24>
   11f38:	mov	r0, #0
   11f3c:	add	sp, sp, #160	; 0xa0
   11f40:	pop	{r4, r5, r6, pc}
   11f44:	ldrb	r1, [r3]
   11f48:	and	r2, r1, #247	; 0xf7
   11f4c:	cmp	r2, #3
   11f50:	bne	12028 <__assert_fail@plt+0xd60>
   11f54:	ldrb	r2, [r3, #8]
   11f58:	ldrh	ip, [r4, #18]
   11f5c:	and	r2, r2, #15
   11f60:	add	r2, r3, r2, lsl #2
   11f64:	ldrh	r2, [r2, #10]
   11f68:	cmp	r2, ip
   11f6c:	bne	12028 <__assert_fail@plt+0xd60>
   11f70:	cmp	r1, #3
   11f74:	bne	11f3c <__assert_fail@plt+0xc74>
   11f78:	ldr	r2, [pc, #220]	; 1205c <__assert_fail@plt+0xd94>
   11f7c:	mov	r1, #1
   11f80:	str	r1, [r2, #24]
   11f84:	ldrb	r0, [r3, #1]
   11f88:	subs	r0, r0, #3
   11f8c:	movne	r0, #1
   11f90:	add	sp, sp, #160	; 0xa0
   11f94:	pop	{r4, r5, r6, pc}
   11f98:	cmp	r1, #3
   11f9c:	sub	r0, r2, #3
   11fa0:	clz	r0, r0
   11fa4:	lsr	r0, r0, #5
   11fa8:	bne	12034 <__assert_fail@plt+0xd6c>
   11fac:	ldrb	r1, [r3, #8]
   11fb0:	add	r3, r3, #8
   11fb4:	ldr	lr, [pc, #152]	; 12054 <__assert_fail@plt+0xd8c>
   11fb8:	and	r1, r1, #15
   11fbc:	add	r3, r3, r1, lsl #2
   11fc0:	ldr	r4, [lr]
   11fc4:	ldrh	r1, [r3, #4]
   11fc8:	ldrh	lr, [r3, #6]
   11fcc:	rev16	r3, r1
   11fd0:	rev16	r1, lr
   11fd4:	uxth	r3, r3
   11fd8:	cmp	r3, r4
   11fdc:	uxth	r1, r1
   11fe0:	bne	12028 <__assert_fail@plt+0xd60>
   11fe4:	cmp	r2, #11
   11fe8:	beq	12018 <__assert_fail@plt+0xd50>
   11fec:	ldr	r3, [pc, #104]	; 1205c <__assert_fail@plt+0xd94>
   11ff0:	mov	r2, #1
   11ff4:	str	r2, [r3, #24]
   11ff8:	add	sp, sp, #160	; 0xa0
   11ffc:	pop	{r4, r5, r6, pc}
   12000:	bl	111cc <__errno_location@plt>
   12004:	ldr	r2, [pc, #84]	; 12060 <__assert_fail@plt+0xd98>
   12008:	ldr	r1, [r0]
   1200c:	mov	r0, #1
   12010:	bl	11124 <error@plt>
   12014:	b	11e68 <__assert_fail@plt+0xba0>
   12018:	ldr	r3, [pc, #48]	; 12050 <__assert_fail@plt+0xd88>
   1201c:	ldr	r3, [r3]
   12020:	cmp	r1, r3
   12024:	beq	11f0c <__assert_fail@plt+0xc44>
   12028:	mvn	r0, #0
   1202c:	add	sp, sp, #160	; 0xa0
   12030:	pop	{r4, r5, r6, pc}
   12034:	mov	ip, r0
   12038:	b	11f0c <__assert_fail@plt+0xc44>
   1203c:	ldr	r3, [pc, #32]	; 12064 <__assert_fail@plt+0xd9c>
   12040:	ldr	r2, [pc, #32]	; 12068 <__assert_fail@plt+0xda0>
   12044:	ldr	r1, [pc, #32]	; 1206c <__assert_fail@plt+0xda4>
   12048:	ldr	r0, [pc, #32]	; 12070 <__assert_fail@plt+0xda8>
   1204c:	bl	112c8 <__assert_fail@plt>
   12050:	andeq	lr, r2, ip, lsr r3
   12054:	andeq	lr, r2, r8, lsr r3
   12058:	andeq	lr, r2, r0, lsl #6
   1205c:	andeq	lr, r2, ip, lsr #5
   12060:	andeq	ip, r1, ip, ror r7
   12064:	andeq	ip, r1, r8, lsl #11
   12068:	andeq	r0, r0, r3, asr #4
   1206c:	andeq	ip, r1, r4, lsl #14
   12070:	andeq	ip, r1, r4, lsl r7
   12074:	push	{r4, r5, lr}
   12078:	subs	r4, r0, #0
   1207c:	sub	sp, sp, #44	; 0x2c
   12080:	beq	12208 <__assert_fail@plt+0xf40>
   12084:	ldr	r3, [r4, #8]
   12088:	cmp	r3, #0
   1208c:	beq	12150 <__assert_fail@plt+0xe88>
   12090:	cmp	r3, #1
   12094:	bne	121b8 <__assert_fail@plt+0xef0>
   12098:	add	r2, sp, #11
   1209c:	mov	r3, #0
   120a0:	strb	r3, [r2, #1]!
   120a4:	add	r3, r3, #1
   120a8:	cmp	r3, #28
   120ac:	bne	120a0 <__assert_fail@plt+0xdd8>
   120b0:	ldr	r3, [r4, #12]
   120b4:	ldr	lr, [pc, #352]	; 1221c <__assert_fail@plt+0xf54>
   120b8:	cmp	r3, #0
   120bc:	add	r0, sp, #12
   120c0:	ldrne	r3, [pc, #344]	; 12220 <__assert_fail@plt+0xf58>
   120c4:	ldr	ip, [lr]
   120c8:	mov	r1, #28
   120cc:	ldrne	r3, [r3, #4]
   120d0:	add	ip, ip, #1
   120d4:	strne	r3, [sp, #24]
   120d8:	ldr	r3, [pc, #324]	; 12224 <__assert_fail@plt+0xf5c>
   120dc:	str	ip, [lr]
   120e0:	ldr	r2, [r3]
   120e4:	mov	r3, ip
   120e8:	bl	12890 <__assert_fail@plt+0x15c8>
   120ec:	subs	r5, r0, #0
   120f0:	mvnne	r5, #0
   120f4:	bne	121bc <__assert_fail@plt+0xef4>
   120f8:	mov	r3, r4
   120fc:	mov	r2, #16
   12100:	ldr	r0, [r3], #16
   12104:	add	r1, sp, #12
   12108:	str	r3, [sp]
   1210c:	str	r2, [sp, #4]
   12110:	mov	r3, r5
   12114:	mov	r2, #28
   12118:	bl	11208 <sendto@plt>
   1211c:	cmp	r0, #0
   12120:	blt	121e8 <__assert_fail@plt+0xf20>
   12124:	add	r0, r4, #52	; 0x34
   12128:	mov	r1, #0
   1212c:	bl	11118 <gettimeofday@plt>
   12130:	cmp	r0, #0
   12134:	bge	121bc <__assert_fail@plt+0xef4>
   12138:	bl	111cc <__errno_location@plt>
   1213c:	ldr	r2, [pc, #228]	; 12228 <__assert_fail@plt+0xf60>
   12140:	ldr	r1, [r0]
   12144:	mov	r0, #1
   12148:	bl	11124 <error@plt>
   1214c:	b	121bc <__assert_fail@plt+0xef4>
   12150:	ldr	r2, [pc, #212]	; 1222c <__assert_fail@plt+0xf64>
   12154:	ldr	lr, [r4, #4]
   12158:	add	r5, r4, #16
   1215c:	ldm	r2, {r0, r1, r2}
   12160:	add	ip, sp, #12
   12164:	str	r5, [sp]
   12168:	mov	r5, #16
   1216c:	stmia	ip!, {r0, r1}
   12170:	str	r5, [sp, #4]
   12174:	mov	r0, lr
   12178:	strb	r2, [ip]
   1217c:	add	r1, sp, #12
   12180:	mov	r2, #9
   12184:	bl	11208 <sendto@plt>
   12188:	cmp	r0, #0
   1218c:	blt	121c8 <__assert_fail@plt+0xf00>
   12190:	add	r0, r4, #52	; 0x34
   12194:	mov	r1, #0
   12198:	bl	11118 <gettimeofday@plt>
   1219c:	cmp	r0, #0
   121a0:	bge	121b8 <__assert_fail@plt+0xef0>
   121a4:	bl	111cc <__errno_location@plt>
   121a8:	ldr	r2, [pc, #120]	; 12228 <__assert_fail@plt+0xf60>
   121ac:	ldr	r1, [r0]
   121b0:	mov	r0, #1
   121b4:	bl	11124 <error@plt>
   121b8:	mov	r5, #0
   121bc:	mov	r0, r5
   121c0:	add	sp, sp, #44	; 0x2c
   121c4:	pop	{r4, r5, pc}
   121c8:	bl	111cc <__errno_location@plt>
   121cc:	ldr	r1, [r0]
   121d0:	cmp	r1, #104	; 0x68
   121d4:	beq	12190 <__assert_fail@plt+0xec8>
   121d8:	ldr	r2, [pc, #80]	; 12230 <__assert_fail@plt+0xf68>
   121dc:	mov	r0, #1
   121e0:	bl	11124 <error@plt>
   121e4:	b	12190 <__assert_fail@plt+0xec8>
   121e8:	bl	111cc <__errno_location@plt>
   121ec:	ldr	r1, [r0]
   121f0:	cmp	r1, #104	; 0x68
   121f4:	beq	12124 <__assert_fail@plt+0xe5c>
   121f8:	ldr	r2, [pc, #48]	; 12230 <__assert_fail@plt+0xf68>
   121fc:	mov	r0, #1
   12200:	bl	11124 <error@plt>
   12204:	b	12124 <__assert_fail@plt+0xe5c>
   12208:	ldr	r3, [pc, #36]	; 12234 <__assert_fail@plt+0xf6c>
   1220c:	ldr	r2, [pc, #36]	; 12238 <__assert_fail@plt+0xf70>
   12210:	ldr	r1, [pc, #36]	; 1223c <__assert_fail@plt+0xf74>
   12214:	ldr	r0, [pc, #36]	; 12240 <__assert_fail@plt+0xf78>
   12218:	bl	112c8 <__assert_fail@plt>
   1221c:	andeq	lr, r2, ip, lsr r3
   12220:	andeq	lr, r2, r0, lsl #6
   12224:	andeq	lr, r2, r8, lsr r3
   12228:	muleq	r1, r0, r7
   1222c:	andeq	ip, r1, r0, lsr #15
   12230:	andeq	ip, r1, r8, lsl #15
   12234:	muleq	r1, r4, r5
   12238:	andeq	r0, r0, r5, lsr #5
   1223c:	andeq	ip, r1, r4, lsl #14
   12240:	andeq	ip, r1, r4, lsl r7
   12244:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12248:	vpush	{d8}
   1224c:	mov	r4, r3
   12250:	mov	r7, r0
   12254:	ldr	r0, [pc, #748]	; 12548 <__assert_fail@plt+0x1280>
   12258:	sub	sp, sp, #180	; 0xb4
   1225c:	str	r3, [sp, #16]
   12260:	bl	11028 <printf@plt>
   12264:	cmp	r4, #0
   12268:	ble	124bc <__assert_fail@plt+0x11f4>
   1226c:	mov	r3, #0
   12270:	mov	r8, r3
   12274:	str	r3, [sp, #20]
   12278:	mov	fp, r3
   1227c:	mov	r9, r3
   12280:	bl	111cc <__errno_location@plt>
   12284:	vldr	d8, [pc, #692]	; 12540 <__assert_fail@plt+0x1278>
   12288:	mov	sl, r0
   1228c:	b	1233c <__assert_fail@plt+0x1074>
   12290:	mov	r3, #0
   12294:	add	r2, sp, #40	; 0x28
   12298:	str	r8, [sl]
   1229c:	mov	r0, r5
   122a0:	str	r2, [sp]
   122a4:	add	r1, sp, #48	; 0x30
   122a8:	mov	r2, r3
   122ac:	bl	110ac <select@plt>
   122b0:	ldr	r3, [sl]
   122b4:	mov	r1, #0
   122b8:	str	r3, [sp, #12]
   122bc:	mov	fp, r0
   122c0:	add	r0, sp, #32
   122c4:	bl	11118 <gettimeofday@plt>
   122c8:	ldr	r5, [sp, #36]	; 0x24
   122cc:	ldr	r3, [r7, #56]	; 0x38
   122d0:	ldr	r1, [sp, #32]
   122d4:	sub	r5, r5, r3
   122d8:	cmp	r5, #0
   122dc:	ldr	r3, [r7, #52]	; 0x34
   122e0:	str	r5, [sp, #36]	; 0x24
   122e4:	addlt	r5, r5, #999424	; 0xf4000
   122e8:	sub	r3, r1, r3
   122ec:	addlt	r5, r5, #576	; 0x240
   122f0:	sublt	r3, r3, #1
   122f4:	strlt	r5, [sp, #36]	; 0x24
   122f8:	cmp	fp, #0
   122fc:	str	r3, [sp, #32]
   12300:	blt	123c4 <__assert_fail@plt+0x10fc>
   12304:	beq	123e4 <__assert_fail@plt+0x111c>
   12308:	add	r2, sp, #176	; 0xb0
   1230c:	add	r4, r2, r4
   12310:	ldr	r2, [r4, #-128]	; 0xffffff80
   12314:	tst	r6, r2
   12318:	bne	123fc <__assert_fail@plt+0x1134>
   1231c:	ldr	r3, [pc, #552]	; 1254c <__assert_fail@plt+0x1284>
   12320:	mov	fp, r8
   12324:	ldr	r0, [r3]
   12328:	bl	11040 <fflush@plt>
   1232c:	ldr	r3, [sp, #16]
   12330:	add	r9, r9, #1
   12334:	cmp	r3, r9
   12338:	ble	124bc <__assert_fail@plt+0x11f4>
   1233c:	cmp	r7, #0
   12340:	beq	124ac <__assert_fail@plt+0x11e4>
   12344:	ldr	r5, [r7]
   12348:	mov	r6, #1
   1234c:	cmp	r5, #0
   12350:	asr	r3, r5, #31
   12354:	add	r4, r5, #31
   12358:	lsr	r2, r3, #27
   1235c:	add	r3, r5, r2
   12360:	and	r3, r3, #31
   12364:	sub	r3, r3, r2
   12368:	movge	r4, r5
   1236c:	lsl	r6, r6, r3
   12370:	asr	r4, r4, #5
   12374:	add	r5, r5, #1
   12378:	mov	r2, #128	; 0x80
   1237c:	mov	r1, r8
   12380:	add	r0, sp, #48	; 0x30
   12384:	bl	111e4 <memset@plt>
   12388:	lsl	r4, r4, #2
   1238c:	add	r3, sp, #176	; 0xb0
   12390:	add	r2, r3, r4
   12394:	ldr	r3, [pc, #436]	; 12550 <__assert_fail@plt+0x1288>
   12398:	cmp	fp, #0
   1239c:	str	r8, [sp, #44]	; 0x2c
   123a0:	ldr	r1, [r3, #20]
   123a4:	ldr	r3, [r2, #-128]	; 0xffffff80
   123a8:	str	r1, [sp, #40]	; 0x28
   123ac:	orr	r3, r3, r6
   123b0:	str	r3, [r2, #-128]	; 0xffffff80
   123b4:	bne	12290 <__assert_fail@plt+0xfc8>
   123b8:	mov	r0, r7
   123bc:	bl	12074 <__assert_fail@plt+0xdac>
   123c0:	b	12290 <__assert_fail@plt+0xfc8>
   123c4:	ldr	r3, [sp, #12]
   123c8:	cmp	r3, #4
   123cc:	beq	1231c <__assert_fail@plt+0x1054>
   123d0:	ldr	r2, [pc, #380]	; 12554 <__assert_fail@plt+0x128c>
   123d4:	ldr	r1, [sl]
   123d8:	mov	r0, #1
   123dc:	bl	11124 <error@plt>
   123e0:	b	1231c <__assert_fail@plt+0x1054>
   123e4:	ldr	r0, [pc, #364]	; 12558 <__assert_fail@plt+0x1290>
   123e8:	bl	11028 <printf@plt>
   123ec:	ldr	r3, [pc, #344]	; 1254c <__assert_fail@plt+0x1284>
   123f0:	ldr	r0, [r3]
   123f4:	bl	11040 <fflush@plt>
   123f8:	b	1231c <__assert_fail@plt+0x1054>
   123fc:	add	r2, sp, #28
   12400:	add	r1, sp, #24
   12404:	mov	r0, r7
   12408:	str	r3, [sp, #12]
   1240c:	bl	11e1c <__assert_fail@plt+0xb54>
   12410:	ldr	r3, [sp, #12]
   12414:	subs	r4, r0, #0
   12418:	sublt	r9, r9, #1
   1241c:	movlt	fp, #1
   12420:	blt	1232c <__assert_fail@plt+0x1064>
   12424:	cmp	r9, #0
   12428:	beq	1243c <__assert_fail@plt+0x1174>
   1242c:	ldr	r2, [r7, #36]	; 0x24
   12430:	ldr	r1, [sp, #20]
   12434:	cmp	r2, r1
   12438:	beq	12468 <__assert_fail@plt+0x11a0>
   1243c:	ldr	r0, [r7, #36]	; 0x24
   12440:	str	r3, [sp, #12]
   12444:	bl	110a0 <inet_ntoa@plt>
   12448:	mov	r1, r0
   1244c:	ldr	r0, [pc, #264]	; 1255c <__assert_fail@plt+0x1294>
   12450:	bl	11028 <printf@plt>
   12454:	ldr	r2, [pc, #260]	; 12560 <__assert_fail@plt+0x1298>
   12458:	ldr	r3, [sp, #12]
   1245c:	ldr	r2, [r2, #8]
   12460:	cmp	r2, #0
   12464:	bne	124d0 <__assert_fail@plt+0x1208>
   12468:	vmov	s15, r5
   1246c:	vmov	s13, r3
   12470:	ldr	r0, [pc, #236]	; 12564 <__assert_fail@plt+0x129c>
   12474:	vcvt.f64.s32	d7, s15
   12478:	vcvt.f64.s32	d6, s13
   1247c:	vdiv.f64	d5, d7, d8
   12480:	vmla.f64	d5, d6, d8
   12484:	vmov	r2, r3, d5
   12488:	bl	11028 <printf@plt>
   1248c:	cmp	r4, #0
   12490:	beq	124a0 <__assert_fail@plt+0x11d8>
   12494:	ldr	r3, [sp, #24]
   12498:	cmp	r3, #3
   1249c:	beq	12504 <__assert_fail@plt+0x123c>
   124a0:	ldr	r3, [r7, #36]	; 0x24
   124a4:	str	r3, [sp, #20]
   124a8:	b	1231c <__assert_fail@plt+0x1054>
   124ac:	mov	r5, r8
   124b0:	mov	r6, r7
   124b4:	mov	r4, r7
   124b8:	b	12378 <__assert_fail@plt+0x10b0>
   124bc:	mov	r0, #10
   124c0:	bl	111f0 <putchar@plt>
   124c4:	add	sp, sp, #180	; 0xb4
   124c8:	vpop	{d8}
   124cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   124d0:	mov	r2, #2
   124d4:	mov	r1, #4
   124d8:	add	r0, r7, #36	; 0x24
   124dc:	bl	110c4 <gethostbyaddr@plt>
   124e0:	ldr	r3, [sp, #12]
   124e4:	cmp	r0, #0
   124e8:	beq	12524 <__assert_fail@plt+0x125c>
   124ec:	ldr	r1, [r0]
   124f0:	ldr	r0, [pc, #112]	; 12568 <__assert_fail@plt+0x12a0>
   124f4:	str	r3, [sp, #12]
   124f8:	bl	11028 <printf@plt>
   124fc:	ldr	r3, [sp, #12]
   12500:	b	12468 <__assert_fail@plt+0x11a0>
   12504:	ldr	r3, [sp, #28]
   12508:	ldr	r2, [pc, #92]	; 1256c <__assert_fail@plt+0x12a4>
   1250c:	and	r3, r3, #15
   12510:	add	r3, r2, r3
   12514:	ldr	r0, [pc, #84]	; 12570 <__assert_fail@plt+0x12a8>
   12518:	ldrb	r1, [r3, #64]	; 0x40
   1251c:	bl	11028 <printf@plt>
   12520:	b	124a0 <__assert_fail@plt+0x11d8>
   12524:	ldr	r0, [r7, #36]	; 0x24
   12528:	str	r3, [sp, #12]
   1252c:	bl	110a0 <inet_ntoa@plt>
   12530:	ldr	r3, [sp, #12]
   12534:	mov	r1, r0
   12538:	b	124f0 <__assert_fail@plt+0x1228>
   1253c:	nop			; (mov r0, r0)
   12540:	andeq	r0, r0, r0
   12544:	addmi	r4, pc, r0
   12548:	andeq	ip, r1, ip, lsr #15
   1254c:	andeq	lr, r2, r4, lsr #5
   12550:	andeq	lr, r2, r4, lsl r1
   12554:			; <UNDEFINED> instruction: 0x0001c7b4
   12558:	andeq	ip, r1, r4, asr #15
   1255c:	andeq	ip, r1, r8, asr #15
   12560:	andeq	lr, r2, ip, lsr #5
   12564:	ldrdeq	ip, [r1], -r8
   12568:	ldrdeq	ip, [r1], -r0
   1256c:	andeq	ip, r1, r0, ror #10
   12570:	andeq	ip, r1, r4, ror #15
   12574:	cmp	r0, #0
   12578:	ldrne	r0, [r0, #4]
   1257c:	mvneq	r0, #0
   12580:	bx	lr
   12584:	cmp	r0, #0
   12588:	ldrne	r0, [r0]
   1258c:	mvneq	r0, #0
   12590:	bx	lr
   12594:	subs	r3, r0, #0
   12598:	push	{lr}		; (str lr, [sp, #-4]!)
   1259c:	sub	sp, sp, #12
   125a0:	beq	12604 <__assert_fail@plt+0x133c>
   125a4:	ldmib	r3, {r0, lr}
   125a8:	ldr	r2, [r3, #48]	; 0x30
   125ac:	ldr	ip, [r3]
   125b0:	cmp	lr, #0
   125b4:	add	r2, r2, #1
   125b8:	mov	r1, #4
   125bc:	str	r2, [r3, #48]	; 0x30
   125c0:	movne	r0, ip
   125c4:	str	r1, [sp]
   125c8:	add	r3, r3, #48	; 0x30
   125cc:	mov	r2, #2
   125d0:	mov	r1, #0
   125d4:	bl	1101c <setsockopt@plt>
   125d8:	cmp	r0, #0
   125dc:	blt	125e8 <__assert_fail@plt+0x1320>
   125e0:	add	sp, sp, #12
   125e4:	pop	{pc}		; (ldr pc, [sp], #4)
   125e8:	bl	111cc <__errno_location@plt>
   125ec:	ldr	r2, [pc, #20]	; 12608 <__assert_fail@plt+0x1340>
   125f0:	ldr	r1, [r0]
   125f4:	mov	r0, #1
   125f8:	add	sp, sp, #12
   125fc:	pop	{lr}		; (ldr lr, [sp], #4)
   12600:	b	11124 <error@plt>
   12604:	bl	112d8 <__assert_fail@plt+0x10>
   12608:	andeq	ip, r1, r0, lsr #14
   1260c:	cmp	r0, #0
   12610:	beq	1263c <__assert_fail@plt+0x1374>
   12614:	ldr	r3, [r0, #8]
   12618:	cmp	r3, #0
   1261c:	bne	12638 <__assert_fail@plt+0x1370>
   12620:	ldrh	r3, [r0, #18]
   12624:	rev16	r3, r3
   12628:	uxth	r3, r3
   1262c:	add	r3, r3, #1
   12630:	rev16	r3, r3
   12634:	strh	r3, [r0, #18]
   12638:	bx	lr
   1263c:	push	{r4, lr}
   12640:	mov	r2, #780	; 0x30c
   12644:	ldr	r3, [pc, #8]	; 12654 <__assert_fail@plt+0x138c>
   12648:	ldr	r1, [pc, #8]	; 12658 <__assert_fail@plt+0x1390>
   1264c:	ldr	r0, [pc, #8]	; 1265c <__assert_fail@plt+0x1394>
   12650:	bl	112c8 <__assert_fail@plt>
   12654:			; <UNDEFINED> instruction: 0x0001c5b4
   12658:	andeq	ip, r1, r4, lsl #14
   1265c:	andeq	ip, r1, r4, lsl r7
   12660:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12664:	sub	sp, sp, #60	; 0x3c
   12668:	ldr	r9, [pc, #356]	; 127d4 <__assert_fail@plt+0x150c>
   1266c:	ldr	r6, [r9]
   12670:	cmp	r6, #0
   12674:	beq	12684 <__assert_fail@plt+0x13bc>
   12678:	ldrb	r3, [r6]
   1267c:	cmp	r3, #0
   12680:	bne	1268c <__assert_fail@plt+0x13c4>
   12684:	add	sp, sp, #60	; 0x3c
   12688:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1268c:	ldr	r4, [pc, #324]	; 127d8 <__assert_fail@plt+0x1510>
   12690:	str	r0, [sp, #12]
   12694:	mov	r2, #32
   12698:	mov	r1, #0
   1269c:	add	r0, sp, #24
   126a0:	bl	111e4 <memset@plt>
   126a4:	mov	r3, #2
   126a8:	mov	r2, #40	; 0x28
   126ac:	mov	r1, #0
   126b0:	mov	r0, r4
   126b4:	str	r3, [sp, #28]
   126b8:	str	r3, [sp, #32]
   126bc:	bl	111e4 <memset@plt>
   126c0:	mvn	r1, #124	; 0x7c
   126c4:	mov	r2, #4
   126c8:	mov	r3, #3
   126cc:	strb	r1, [r4]
   126d0:	strb	r2, [r4, #2]
   126d4:	strb	r3, [r4, #1]
   126d8:	ldr	r8, [pc, #252]	; 127dc <__assert_fail@plt+0x1514>
   126dc:	mov	r7, #0
   126e0:	b	12718 <__assert_fail@plt+0x1450>
   126e4:	ldr	r3, [sp, #20]
   126e8:	ldrb	r2, [r4, #1]
   126ec:	mov	r0, r3
   126f0:	ldr	r3, [r3, #20]
   126f4:	ldr	r3, [r3, #4]
   126f8:	str	r3, [r4, r2]
   126fc:	bl	1128c <freeaddrinfo@plt>
   12700:	ldrb	r3, [r4, #1]
   12704:	subs	r6, r5, #0
   12708:	add	r3, r3, #4
   1270c:	uxtb	r3, r3
   12710:	strb	r3, [r4, #1]
   12714:	beq	127a8 <__assert_fail@plt+0x14e0>
   12718:	ldrb	r2, [r6]
   1271c:	mov	r1, r8
   12720:	mov	r0, r6
   12724:	cmp	r2, #0
   12728:	beq	127a8 <__assert_fail@plt+0x14e0>
   1272c:	ldrb	r3, [r4, #2]
   12730:	cmp	r3, #35	; 0x23
   12734:	bhi	12794 <__assert_fail@plt+0x14cc>
   12738:	bl	11280 <strpbrk@plt>
   1273c:	add	r3, sp, #20
   12740:	add	r2, sp, #24
   12744:	mov	r1, r7
   12748:	cmp	r0, #0
   1274c:	addne	r5, r0, #1
   12750:	strbne	r7, [r0]
   12754:	mov	r0, r6
   12758:	moveq	r5, r7
   1275c:	bl	11298 <getaddrinfo@plt>
   12760:	subs	sl, r0, #0
   12764:	beq	126e4 <__assert_fail@plt+0x141c>
   12768:	bl	111cc <__errno_location@plt>
   1276c:	ldr	fp, [r0]
   12770:	mov	r0, sl
   12774:	bl	11070 <gai_strerror@plt>
   12778:	mov	r1, fp
   1277c:	mov	r3, r6
   12780:	ldr	r2, [pc, #88]	; 127e0 <__assert_fail@plt+0x1518>
   12784:	str	r0, [sp]
   12788:	mov	r0, #1
   1278c:	bl	11124 <error@plt>
   12790:	b	126e4 <__assert_fail@plt+0x141c>
   12794:	ldr	r2, [pc, #72]	; 127e4 <__assert_fail@plt+0x151c>
   12798:	mov	r1, #0
   1279c:	mov	r0, #1
   127a0:	bl	11124 <error@plt>
   127a4:	ldrb	r3, [r4, #1]
   127a8:	ldr	r2, [sp, #12]
   127ac:	ldr	r2, [r2, #4]
   127b0:	str	r2, [r4, r3]
   127b4:	ldrb	r3, [r4, #1]
   127b8:	add	r3, r3, #4
   127bc:	uxtb	r3, r3
   127c0:	add	r2, r3, #1
   127c4:	strb	r3, [r4, #1]
   127c8:	str	r2, [r9, #20]
   127cc:	add	sp, sp, #60	; 0x3c
   127d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   127d4:	andeq	lr, r2, ip, lsr #5
   127d8:	andeq	lr, r2, r0, lsl r3
   127dc:	andeq	ip, r1, ip, ror #15
   127e0:	strdeq	ip, [r1], -r4
   127e4:	andeq	ip, r1, r4, lsl #16
   127e8:	cmp	r1, #7
   127ec:	push	{r4, r5, r6, lr}
   127f0:	bls	1282c <__assert_fail@plt+0x1564>
   127f4:	ldrh	ip, [sp, #16]
   127f8:	rev16	r3, r3
   127fc:	mov	r5, #0
   12800:	rev16	ip, ip
   12804:	strh	r3, [r0, #4]
   12808:	strb	r2, [r0]
   1280c:	strb	r5, [r0, #1]
   12810:	strh	r5, [r0, #2]
   12814:	strh	ip, [r0, #6]
   12818:	mov	r4, r0
   1281c:	bl	12938 <__assert_fail@plt+0x1670>
   12820:	strh	r0, [r4, #2]
   12824:	mov	r0, r5
   12828:	pop	{r4, r5, r6, pc}
   1282c:	mvn	r5, #0
   12830:	b	12824 <__assert_fail@plt+0x155c>
   12834:	ldrb	ip, [r0]
   12838:	push	{r4, r5, r6, lr}
   1283c:	and	ip, ip, #15
   12840:	lsl	ip, ip, #2
   12844:	add	lr, ip, #8
   12848:	cmp	lr, r1
   1284c:	bhi	12888 <__assert_fail@plt+0x15c0>
   12850:	add	r4, r0, ip
   12854:	mov	lr, #0
   12858:	ldrh	r5, [r4, #2]
   1285c:	sub	r1, r1, ip
   12860:	str	r0, [r2]
   12864:	str	r4, [r3]
   12868:	mov	r0, r4
   1286c:	strh	lr, [r4, #2]
   12870:	bl	12938 <__assert_fail@plt+0x1670>
   12874:	mov	r3, r0
   12878:	subs	r0, r5, r0
   1287c:	movne	r0, #1
   12880:	strh	r3, [r4, #2]
   12884:	pop	{r4, r5, r6, pc}
   12888:	mvn	r0, #0
   1288c:	pop	{r4, r5, r6, pc}
   12890:	cmp	r1, #7
   12894:	push	{r4, r5, r6, lr}
   12898:	bls	128d4 <__assert_fail@plt+0x160c>
   1289c:	rev16	r3, r3
   128a0:	rev16	r2, r2
   128a4:	mov	ip, #8
   128a8:	mov	r5, #0
   128ac:	strh	r3, [r0, #6]
   128b0:	strh	r2, [r0, #4]
   128b4:	strb	ip, [r0]
   128b8:	strb	r5, [r0, #1]
   128bc:	strh	r5, [r0, #2]
   128c0:	mov	r4, r0
   128c4:	bl	12938 <__assert_fail@plt+0x1670>
   128c8:	strh	r0, [r4, #2]
   128cc:	mov	r0, r5
   128d0:	pop	{r4, r5, r6, pc}
   128d4:	mvn	r5, #0
   128d8:	b	128cc <__assert_fail@plt+0x1604>
   128dc:	ldrb	ip, [r0]
   128e0:	push	{r4, r5, r6, lr}
   128e4:	and	ip, ip, #15
   128e8:	lsl	ip, ip, #2
   128ec:	add	lr, ip, #8
   128f0:	cmp	r1, lr
   128f4:	bcc	12930 <__assert_fail@plt+0x1668>
   128f8:	add	r4, r0, ip
   128fc:	mov	lr, #0
   12900:	ldrh	r5, [r4, #2]
   12904:	sub	r1, r1, ip
   12908:	str	r0, [r2]
   1290c:	str	r4, [r3]
   12910:	mov	r0, r4
   12914:	strh	lr, [r4, #2]
   12918:	bl	12938 <__assert_fail@plt+0x1670>
   1291c:	mov	r3, r0
   12920:	subs	r0, r5, r0
   12924:	movne	r0, #1
   12928:	strh	r3, [r4, #2]
   1292c:	pop	{r4, r5, r6, pc}
   12930:	mvn	r0, #0
   12934:	pop	{r4, r5, r6, pc}
   12938:	push	{lr}		; (str lr, [sp, #-4]!)
   1293c:	sub	sp, sp, #12
   12940:	mov	r2, #0
   12944:	cmp	r1, #1
   12948:	strh	r2, [sp, #6]
   1294c:	ble	12980 <__assert_fail@plt+0x16b8>
   12950:	mov	ip, r0
   12954:	mov	r3, r1
   12958:	ldrh	lr, [ip], #2
   1295c:	sub	r3, r3, #2
   12960:	cmp	r3, #1
   12964:	add	r2, r2, lr
   12968:	bgt	12958 <__assert_fail@plt+0x1690>
   1296c:	sub	r1, r1, #2
   12970:	bic	r3, r1, #1
   12974:	add	r3, r3, #2
   12978:	add	r0, r0, r3
   1297c:	and	r1, r1, #1
   12980:	cmp	r1, #1
   12984:	ldrbeq	r3, [r0]
   12988:	strbeq	r3, [sp, #6]
   1298c:	ldrheq	r3, [sp, #6]
   12990:	addeq	r2, r2, r3
   12994:	uxth	r0, r2
   12998:	add	r2, r0, r2, asr #16
   1299c:	add	r2, r2, r2, asr #16
   129a0:	mvn	r0, r2
   129a4:	uxth	r0, r0
   129a8:	add	sp, sp, #12
   129ac:	pop	{pc}		; (ldr pc, [sp], #4)
   129b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   129b4:	mov	r7, r3
   129b8:	ldr	sl, [r0, #12]
   129bc:	sub	sp, sp, #36	; 0x24
   129c0:	ldr	r3, [r0, #16]
   129c4:	cmp	sl, #0
   129c8:	mov	fp, r0
   129cc:	mov	r6, r2
   129d0:	str	r3, [sp, #16]
   129d4:	mov	r9, r1
   129d8:	ldr	r8, [sp, #72]	; 0x48
   129dc:	ldr	r5, [sp, #76]	; 0x4c
   129e0:	beq	12db0 <__assert_fail@plt+0x1ae8>
   129e4:	mov	r1, #11
   129e8:	mov	r0, sl
   129ec:	bl	111b4 <strchr@plt>
   129f0:	cmp	r6, #0
   129f4:	bne	12ccc <__assert_fail@plt+0x1a04>
   129f8:	cmp	r0, #0
   129fc:	ldr	r3, [fp, #20]
   12a00:	beq	12f08 <__assert_fail@plt+0x1c40>
   12a04:	cmp	r3, #0
   12a08:	sub	r4, r0, sl
   12a0c:	beq	12ea0 <__assert_fail@plt+0x1bd8>
   12a10:	cmp	r4, #0
   12a14:	beq	12e40 <__assert_fail@plt+0x1b78>
   12a18:	mov	r0, sl
   12a1c:	mov	r1, r4
   12a20:	bl	1107c <strndup@plt>
   12a24:	mov	r3, #1
   12a28:	str	r3, [sp, #24]
   12a2c:	mov	sl, r0
   12a30:	adds	r3, r0, #0
   12a34:	movne	r3, #1
   12a38:	str	r3, [sp, #20]
   12a3c:	mov	r1, r9
   12a40:	mov	r0, fp
   12a44:	bl	18828 <argp_parse@@Base+0xe20>
   12a48:	ldr	r3, [fp, #20]
   12a4c:	str	r0, [sp, #12]
   12a50:	ldr	r0, [pc, #1272]	; 12f50 <__assert_fail@plt+0x1c88>
   12a54:	ldr	r2, [sp, #12]
   12a58:	mov	r1, sl
   12a5c:	blx	r3
   12a60:	subs	r3, r0, #0
   12a64:	beq	12df0 <__assert_fail@plt+0x1b28>
   12a68:	cmp	r7, #0
   12a6c:	beq	12a90 <__assert_fail@plt+0x17c8>
   12a70:	ldr	r2, [r5, #28]
   12a74:	ldr	r1, [r5, #32]
   12a78:	cmp	r2, r1
   12a7c:	bcs	12df8 <__assert_fail@plt+0x1b30>
   12a80:	add	r0, r2, #1
   12a84:	mov	r1, #10
   12a88:	str	r0, [r5, #28]
   12a8c:	strb	r1, [r2]
   12a90:	ldr	r2, [sp, #24]
   12a94:	cmp	sl, r3
   12a98:	movne	r2, #0
   12a9c:	andeq	r2, r2, #1
   12aa0:	cmp	r2, #0
   12aa4:	beq	12d10 <__assert_fail@plt+0x1a48>
   12aa8:	ldr	r0, [r5, #28]
   12aac:	ldr	r1, [r5, #32]
   12ab0:	add	r2, r0, r4
   12ab4:	cmp	r1, r2
   12ab8:	bcs	12d70 <__assert_fail@plt+0x1aa8>
   12abc:	mov	r1, r4
   12ac0:	mov	r0, r5
   12ac4:	str	r3, [sp, #24]
   12ac8:	bl	1a618 <argp_parse@@Base+0x2c10>
   12acc:	ldr	r3, [sp, #24]
   12ad0:	cmp	r0, #0
   12ad4:	bne	12d6c <__assert_fail@plt+0x1aa4>
   12ad8:	ldr	r4, [r5, #28]
   12adc:	ldr	r1, [r5, #24]
   12ae0:	ldr	r2, [r5, #16]
   12ae4:	sub	r4, r4, r1
   12ae8:	cmp	r4, r2
   12aec:	bhi	12d94 <__assert_fail@plt+0x1acc>
   12af0:	ldr	r2, [r5, #20]
   12af4:	ldr	r1, [r5, #4]
   12af8:	bic	r2, r2, r2, asr #31
   12afc:	cmp	r1, r2
   12b00:	bcs	12b24 <__assert_fail@plt+0x185c>
   12b04:	ldr	r2, [r5, #28]
   12b08:	ldr	r1, [r5, #32]
   12b0c:	cmp	r2, r1
   12b10:	bcs	12e1c <__assert_fail@plt+0x1b54>
   12b14:	add	r0, r2, #1
   12b18:	mov	r1, #10
   12b1c:	str	r0, [r5, #28]
   12b20:	strb	r1, [r2]
   12b24:	cmp	sl, r3
   12b28:	moveq	r4, #1
   12b2c:	beq	12b3c <__assert_fail@plt+0x1874>
   12b30:	mov	r0, r3
   12b34:	bl	18984 <argp_parse@@Base+0xf7c>
   12b38:	mov	r4, #1
   12b3c:	ldr	r3, [sp, #20]
   12b40:	cmp	r3, #0
   12b44:	beq	12b5c <__assert_fail@plt+0x1894>
   12b48:	ldr	r3, [fp, #20]
   12b4c:	cmp	r3, #0
   12b50:	beq	12c40 <__assert_fail@plt+0x1978>
   12b54:	mov	r0, sl
   12b58:	bl	18984 <argp_parse@@Base+0xf7c>
   12b5c:	cmp	r6, #0
   12b60:	beq	12c40 <__assert_fail@plt+0x1978>
   12b64:	ldr	r3, [fp, #20]
   12b68:	cmp	r3, #0
   12b6c:	beq	12c40 <__assert_fail@plt+0x1978>
   12b70:	ldr	r2, [sp, #12]
   12b74:	mov	r1, #0
   12b78:	ldr	r0, [pc, #980]	; 12f54 <__assert_fail@plt+0x1c8c>
   12b7c:	blx	r3
   12b80:	subs	sl, r0, #0
   12b84:	beq	12c40 <__assert_fail@plt+0x1978>
   12b88:	orrs	r3, r7, r4
   12b8c:	beq	12bb0 <__assert_fail@plt+0x18e8>
   12b90:	ldr	r3, [r5, #28]
   12b94:	ldr	r2, [r5, #32]
   12b98:	cmp	r3, r2
   12b9c:	bcs	12ed8 <__assert_fail@plt+0x1c10>
   12ba0:	add	r1, r3, #1
   12ba4:	mov	r2, #10
   12ba8:	str	r1, [r5, #28]
   12bac:	strb	r2, [r3]
   12bb0:	mov	r0, sl
   12bb4:	bl	111a8 <strlen@plt>
   12bb8:	subs	r4, r0, #0
   12bbc:	beq	12be8 <__assert_fail@plt+0x1920>
   12bc0:	ldr	r0, [r5, #28]
   12bc4:	ldr	r2, [r5, #32]
   12bc8:	add	r3, r0, r4
   12bcc:	cmp	r2, r3
   12bd0:	bcs	12e50 <__assert_fail@plt+0x1b88>
   12bd4:	mov	r1, r4
   12bd8:	mov	r0, r5
   12bdc:	bl	1a618 <argp_parse@@Base+0x2c10>
   12be0:	cmp	r0, #0
   12be4:	bne	12e4c <__assert_fail@plt+0x1b84>
   12be8:	mov	r0, sl
   12bec:	bl	18984 <argp_parse@@Base+0xf7c>
   12bf0:	ldr	r3, [r5, #28]
   12bf4:	ldr	r1, [r5, #24]
   12bf8:	ldr	r2, [r5, #16]
   12bfc:	sub	r3, r3, r1
   12c00:	cmp	r3, r2
   12c04:	bhi	12e6c <__assert_fail@plt+0x1ba4>
   12c08:	ldr	r3, [r5, #20]
   12c0c:	ldr	r2, [r5, #4]
   12c10:	bic	r3, r3, r3, asr #31
   12c14:	cmp	r2, r3
   12c18:	bcs	12da8 <__assert_fail@plt+0x1ae0>
   12c1c:	ldr	r3, [r5, #28]
   12c20:	ldr	r2, [r5, #32]
   12c24:	cmp	r3, r2
   12c28:	bcs	12ebc <__assert_fail@plt+0x1bf4>
   12c2c:	mov	r4, #1
   12c30:	add	r2, r3, r4
   12c34:	str	r2, [r5, #28]
   12c38:	mov	r2, #10
   12c3c:	strb	r2, [r3]
   12c40:	ldr	fp, [sp, #16]
   12c44:	cmp	fp, #0
   12c48:	beq	12cc0 <__assert_fail@plt+0x19f8>
   12c4c:	ldr	r3, [fp]
   12c50:	cmp	r3, #0
   12c54:	beq	12cc0 <__assert_fail@plt+0x19f8>
   12c58:	eor	r2, r4, #1
   12c5c:	and	r2, r2, #1
   12c60:	clz	sl, r8
   12c64:	lsr	sl, sl, #5
   12c68:	orrs	r2, sl, r2
   12c6c:	bne	12c88 <__assert_fail@plt+0x19c0>
   12c70:	b	12ef4 <__assert_fail@plt+0x1c2c>
   12c74:	cmp	r4, #0
   12c78:	movne	r2, sl
   12c7c:	orreq	r2, sl, #1
   12c80:	cmp	r2, #0
   12c84:	beq	12cc0 <__assert_fail@plt+0x19f8>
   12c88:	orrs	r2, r7, r4
   12c8c:	mov	r0, r3
   12c90:	str	r5, [sp, #4]
   12c94:	movne	r3, #1
   12c98:	moveq	r3, #0
   12c9c:	str	r8, [sp]
   12ca0:	mov	r2, r6
   12ca4:	mov	r1, r9
   12ca8:	bl	129b0 <__assert_fail@plt+0x16e8>
   12cac:	ldr	r3, [fp, #16]
   12cb0:	add	fp, fp, #16
   12cb4:	cmp	r3, #0
   12cb8:	orr	r4, r4, r0
   12cbc:	bne	12c74 <__assert_fail@plt+0x19ac>
   12cc0:	mov	r0, r4
   12cc4:	add	sp, sp, #36	; 0x24
   12cc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ccc:	cmp	r0, #0
   12cd0:	addne	sl, r0, #1
   12cd4:	beq	12e98 <__assert_fail@plt+0x1bd0>
   12cd8:	ldr	r3, [fp, #20]
   12cdc:	cmp	r3, #0
   12ce0:	beq	12e78 <__assert_fail@plt+0x1bb0>
   12ce4:	mov	r3, #0
   12ce8:	mov	r1, r9
   12cec:	mov	r0, fp
   12cf0:	mov	r4, r3
   12cf4:	str	r3, [sp, #20]
   12cf8:	bl	18828 <argp_parse@@Base+0xe20>
   12cfc:	str	r4, [sp, #24]
   12d00:	ldr	r3, [fp, #20]
   12d04:	str	r0, [sp, #12]
   12d08:	ldr	r0, [pc, #584]	; 12f58 <__assert_fail@plt+0x1c90>
   12d0c:	b	12a54 <__assert_fail@plt+0x178c>
   12d10:	mov	r0, r3
   12d14:	str	r3, [sp, #24]
   12d18:	bl	111a8 <strlen@plt>
   12d1c:	ldr	r3, [sp, #24]
   12d20:	subs	r4, r0, #0
   12d24:	beq	12ad8 <__assert_fail@plt+0x1810>
   12d28:	ldr	r0, [r5, #28]
   12d2c:	ldr	r1, [r5, #32]
   12d30:	add	r2, r0, r4
   12d34:	cmp	r1, r2
   12d38:	bcs	12d5c <__assert_fail@plt+0x1a94>
   12d3c:	mov	r1, r4
   12d40:	mov	r0, r5
   12d44:	str	r3, [sp, #24]
   12d48:	bl	1a618 <argp_parse@@Base+0x2c10>
   12d4c:	ldr	r3, [sp, #24]
   12d50:	cmp	r0, #0
   12d54:	beq	12ad8 <__assert_fail@plt+0x1810>
   12d58:	ldr	r0, [r5, #28]
   12d5c:	mov	r2, r4
   12d60:	mov	r1, r3
   12d64:	str	r3, [sp, #24]
   12d68:	b	12d7c <__assert_fail@plt+0x1ab4>
   12d6c:	ldr	r0, [r5, #28]
   12d70:	mov	r2, r4
   12d74:	mov	r1, sl
   12d78:	str	r3, [sp, #24]
   12d7c:	bl	11088 <memcpy@plt>
   12d80:	ldr	r2, [r5, #28]
   12d84:	ldr	r3, [sp, #24]
   12d88:	add	r4, r2, r4
   12d8c:	str	r4, [r5, #28]
   12d90:	b	12adc <__assert_fail@plt+0x1814>
   12d94:	mov	r0, r5
   12d98:	str	r3, [sp, #24]
   12d9c:	bl	1a06c <argp_parse@@Base+0x2664>
   12da0:	ldr	r3, [sp, #24]
   12da4:	b	12af0 <__assert_fail@plt+0x1828>
   12da8:	mov	r4, #1
   12dac:	b	12c40 <__assert_fail@plt+0x1978>
   12db0:	ldr	r4, [r0, #20]
   12db4:	cmp	r4, #0
   12db8:	beq	12f00 <__assert_fail@plt+0x1c38>
   12dbc:	bl	18828 <argp_parse@@Base+0xe20>
   12dc0:	cmp	r6, #0
   12dc4:	ldr	r3, [fp, #20]
   12dc8:	strne	sl, [sp, #20]
   12dcc:	strne	sl, [sp, #24]
   12dd0:	movne	r4, sl
   12dd4:	streq	r6, [sp, #20]
   12dd8:	streq	r6, [sp, #24]
   12ddc:	moveq	r4, r6
   12de0:	str	r0, [sp, #12]
   12de4:	ldrne	r0, [pc, #364]	; 12f58 <__assert_fail@plt+0x1c90>
   12de8:	ldreq	r0, [pc, #352]	; 12f50 <__assert_fail@plt+0x1c88>
   12dec:	b	12a54 <__assert_fail@plt+0x178c>
   12df0:	mov	r4, r3
   12df4:	b	12b3c <__assert_fail@plt+0x1874>
   12df8:	mov	r1, #1
   12dfc:	mov	r0, r5
   12e00:	str	r3, [sp, #28]
   12e04:	bl	1a618 <argp_parse@@Base+0x2c10>
   12e08:	ldr	r3, [sp, #28]
   12e0c:	cmp	r0, #0
   12e10:	beq	12a90 <__assert_fail@plt+0x17c8>
   12e14:	ldr	r2, [r5, #28]
   12e18:	b	12a80 <__assert_fail@plt+0x17b8>
   12e1c:	mov	r1, #1
   12e20:	mov	r0, r5
   12e24:	str	r3, [sp, #24]
   12e28:	bl	1a618 <argp_parse@@Base+0x2c10>
   12e2c:	ldr	r3, [sp, #24]
   12e30:	cmp	r0, #0
   12e34:	beq	12b24 <__assert_fail@plt+0x185c>
   12e38:	ldr	r2, [r5, #28]
   12e3c:	b	12b14 <__assert_fail@plt+0x184c>
   12e40:	str	r4, [sp, #20]
   12e44:	str	r4, [sp, #24]
   12e48:	b	12a3c <__assert_fail@plt+0x1774>
   12e4c:	ldr	r0, [r5, #28]
   12e50:	mov	r2, r4
   12e54:	mov	r1, sl
   12e58:	bl	11088 <memcpy@plt>
   12e5c:	ldr	r3, [r5, #28]
   12e60:	add	r4, r3, r4
   12e64:	str	r4, [r5, #28]
   12e68:	b	12be8 <__assert_fail@plt+0x1920>
   12e6c:	mov	r0, r5
   12e70:	bl	1a06c <argp_parse@@Base+0x2664>
   12e74:	b	12c08 <__assert_fail@plt+0x1940>
   12e78:	cmp	sl, #0
   12e7c:	beq	12efc <__assert_fail@plt+0x1c34>
   12e80:	str	r3, [sp, #20]
   12e84:	str	r3, [sp, #24]
   12e88:	mov	r4, r3
   12e8c:	str	r3, [sp, #12]
   12e90:	mov	r3, sl
   12e94:	b	12a68 <__assert_fail@plt+0x17a0>
   12e98:	mov	sl, r0
   12e9c:	b	12cd8 <__assert_fail@plt+0x1a10>
   12ea0:	adds	r3, r4, #0
   12ea4:	movne	r3, #1
   12ea8:	str	r3, [sp, #24]
   12eac:	str	r3, [sp, #20]
   12eb0:	str	r6, [sp, #12]
   12eb4:	mov	r3, sl
   12eb8:	b	12a68 <__assert_fail@plt+0x17a0>
   12ebc:	mov	r1, #1
   12ec0:	mov	r0, r5
   12ec4:	bl	1a618 <argp_parse@@Base+0x2c10>
   12ec8:	cmp	r0, #0
   12ecc:	beq	12da8 <__assert_fail@plt+0x1ae0>
   12ed0:	ldr	r3, [r5, #28]
   12ed4:	b	12c2c <__assert_fail@plt+0x1964>
   12ed8:	mov	r1, #1
   12edc:	mov	r0, r5
   12ee0:	bl	1a618 <argp_parse@@Base+0x2c10>
   12ee4:	cmp	r0, #0
   12ee8:	beq	12bb0 <__assert_fail@plt+0x18e8>
   12eec:	ldr	r3, [r5, #28]
   12ef0:	b	12ba0 <__assert_fail@plt+0x18d8>
   12ef4:	mov	r4, #1
   12ef8:	b	12cc0 <__assert_fail@plt+0x19f8>
   12efc:	mov	r4, sl
   12f00:	str	r4, [sp, #12]
   12f04:	b	12b5c <__assert_fail@plt+0x1894>
   12f08:	cmp	r3, #0
   12f0c:	beq	12f38 <__assert_fail@plt+0x1c70>
   12f10:	mov	r1, r9
   12f14:	mov	r0, fp
   12f18:	bl	18828 <argp_parse@@Base+0xe20>
   12f1c:	mov	r4, r6
   12f20:	ldr	r3, [fp, #20]
   12f24:	str	r6, [sp, #20]
   12f28:	str	r6, [sp, #24]
   12f2c:	str	r0, [sp, #12]
   12f30:	ldr	r0, [pc, #24]	; 12f50 <__assert_fail@plt+0x1c88>
   12f34:	b	12a54 <__assert_fail@plt+0x178c>
   12f38:	mov	r3, sl
   12f3c:	str	r6, [sp, #20]
   12f40:	str	r6, [sp, #24]
   12f44:	mov	r4, r6
   12f48:	str	r6, [sp, #12]
   12f4c:	b	12a68 <__assert_fail@plt+0x17a0>
   12f50:	andeq	r0, r0, #1
   12f54:	andeq	r0, r0, #4
   12f58:	andeq	r0, r0, #2
   12f5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f60:	sub	sp, sp, #52	; 0x34
   12f64:	mov	r3, r0
   12f68:	str	r0, [sp, #20]
   12f6c:	mov	r0, #16
   12f70:	ldr	r6, [r3, #16]
   12f74:	ldr	r4, [r3]
   12f78:	str	r1, [sp, #28]
   12f7c:	bl	19f68 <argp_parse@@Base+0x2560>
   12f80:	subs	r3, r0, #0
   12f84:	str	r3, [sp, #16]
   12f88:	beq	13578 <__assert_fail@plt+0x22b0>
   12f8c:	mov	r2, r3
   12f90:	cmp	r4, #0
   12f94:	mov	r3, #0
   12f98:	str	r3, [r2, #4]
   12f9c:	str	r3, [r2, #12]
   12fa0:	beq	131b4 <__assert_fail@plt+0x1eec>
   12fa4:	ldr	fp, [r4, #12]
   12fa8:	ands	fp, fp, #4
   12fac:	bne	1358c <__assert_fail@plt+0x22c4>
   12fb0:	add	r5, r4, #24
   12fb4:	mov	r7, r4
   12fb8:	mov	r9, fp
   12fbc:	mov	sl, fp
   12fc0:	mov	r4, r2
   12fc4:	b	13008 <__assert_fail@plt+0x1d40>
   12fc8:	ldr	r3, [r5, #-12]
   12fcc:	tst	r3, #4
   12fd0:	addeq	r9, r9, #1
   12fd4:	streq	r9, [r4, #4]
   12fd8:	tst	r3, #8
   12fdc:	bne	13004 <__assert_fail@plt+0x1d3c>
   12fe0:	sub	r3, r8, #1
   12fe4:	cmp	r3, #254	; 0xfe
   12fe8:	bhi	13004 <__assert_fail@plt+0x1d3c>
   12fec:	bl	11184 <__ctype_b_loc@plt>
   12ff0:	lsl	r8, r8, #1
   12ff4:	ldr	r3, [r0]
   12ff8:	ldrh	r3, [r3, r8]
   12ffc:	tst	r3, #16384	; 0x4000
   13000:	addne	sl, sl, #1
   13004:	add	r5, r5, #24
   13008:	ldr	r8, [r5, #-20]	; 0xffffffec
   1300c:	cmp	r8, #0
   13010:	bne	12fc8 <__assert_fail@plt+0x1d00>
   13014:	ldr	r3, [r5, #-24]	; 0xffffffe8
   13018:	cmp	r3, #0
   1301c:	bne	12fc8 <__assert_fail@plt+0x1d00>
   13020:	ldr	r3, [r5, #-8]
   13024:	cmp	r3, #0
   13028:	bne	12fc8 <__assert_fail@plt+0x1d00>
   1302c:	ldr	r3, [r5, #-4]
   13030:	cmp	r3, #0
   13034:	bne	12fc8 <__assert_fail@plt+0x1d00>
   13038:	rsb	r9, r9, r9, lsl #3
   1303c:	mov	r4, r7
   13040:	lsl	r0, r9, #2
   13044:	mov	r7, r3
   13048:	bl	19f68 <argp_parse@@Base+0x2560>
   1304c:	ldr	r5, [sp, #16]
   13050:	str	r0, [r5]
   13054:	add	r0, sl, #1
   13058:	bl	19f68 <argp_parse@@Base+0x2560>
   1305c:	ldr	r8, [r5]
   13060:	mov	r3, r5
   13064:	cmp	r0, #0
   13068:	cmpne	r8, #0
   1306c:	mov	sl, r0
   13070:	str	r0, [r3, #8]
   13074:	beq	13634 <__assert_fail@plt+0x236c>
   13078:	ldr	r2, [sp, #16]
   1307c:	ldr	r3, [pc, #1476]	; 13648 <__assert_fail@plt+0x2380>
   13080:	ldr	r2, [r2, #4]
   13084:	cmp	r2, r3
   13088:	bhi	13620 <__assert_fail@plt+0x2358>
   1308c:	add	r8, r8, #28
   13090:	mov	r9, sl
   13094:	mov	r2, fp
   13098:	ldr	r3, [r4, #4]
   1309c:	mov	fp, sl
   130a0:	mov	sl, r8
   130a4:	ldr	r8, [sp, #28]
   130a8:	str	r6, [sp, #4]
   130ac:	cmp	r3, #0
   130b0:	bne	130c0 <__assert_fail@plt+0x1df8>
   130b4:	ldr	r0, [r4]
   130b8:	cmp	r0, #0
   130bc:	beq	135d8 <__assert_fail@plt+0x2310>
   130c0:	str	r7, [sl, #-24]	; 0xffffffe8
   130c4:	ldr	r5, [r4, #20]
   130c8:	str	r4, [sl, #-28]	; 0xffffffe4
   130cc:	cmp	r5, #0
   130d0:	str	fp, [sl, #-20]	; 0xffffffec
   130d4:	bne	130ec <__assert_fail@plt+0x1e24>
   130d8:	ldr	r0, [r4]
   130dc:	cmp	r0, #0
   130e0:	cmpeq	r3, #0
   130e4:	movne	r5, r2
   130e8:	beq	135fc <__assert_fail@plt+0x2334>
   130ec:	ldr	r2, [sp, #20]
   130f0:	mov	r3, r7
   130f4:	str	r5, [sl, #-16]
   130f8:	str	r8, [sl, #-12]
   130fc:	str	r2, [sl, #-8]
   13100:	add	r3, r3, #1
   13104:	str	r3, [sl, #-24]	; 0xffffffe8
   13108:	ldr	r3, [r4, #12]
   1310c:	tst	r3, #8
   13110:	bne	1317c <__assert_fail@plt+0x1eb4>
   13114:	ldr	r6, [r4, #4]
   13118:	sub	r2, r6, #1
   1311c:	cmp	r2, #254	; 0xfe
   13120:	bhi	1317c <__assert_fail@plt+0x1eb4>
   13124:	bl	11184 <__ctype_b_loc@plt>
   13128:	lsl	r2, r6, #1
   1312c:	ldr	r0, [r0]
   13130:	ldrh	r2, [r0, r2]
   13134:	tst	r2, #16384	; 0x4000
   13138:	beq	1317c <__assert_fail@plt+0x1eb4>
   1313c:	cmp	r9, fp
   13140:	uxtb	r0, r6
   13144:	bcs	13174 <__assert_fail@plt+0x1eac>
   13148:	ldrb	r3, [r9]
   1314c:	cmp	r3, r0
   13150:	movne	r3, r9
   13154:	subne	ip, fp, #1
   13158:	bne	1316c <__assert_fail@plt+0x1ea4>
   1315c:	b	1317c <__assert_fail@plt+0x1eb4>
   13160:	ldrb	r2, [r3, #1]!
   13164:	cmp	r2, r0
   13168:	beq	1317c <__assert_fail@plt+0x1eb4>
   1316c:	cmp	ip, r3
   13170:	bne	13160 <__assert_fail@plt+0x1e98>
   13174:	strb	r0, [fp]
   13178:	add	fp, fp, #1
   1317c:	add	r4, r4, #24
   13180:	ldr	r3, [r4, #4]
   13184:	cmp	r3, #0
   13188:	bne	13198 <__assert_fail@plt+0x1ed0>
   1318c:	ldr	r2, [r4]
   13190:	cmp	r2, #0
   13194:	beq	135b4 <__assert_fail@plt+0x22ec>
   13198:	ldr	r2, [r4, #12]
   1319c:	tst	r2, #4
   131a0:	beq	135cc <__assert_fail@plt+0x2304>
   131a4:	ldr	r3, [sl, #-24]	; 0xffffffe8
   131a8:	b	13100 <__assert_fail@plt+0x1e38>
   131ac:	ldr	r6, [sp, #4]
   131b0:	strb	r3, [fp]
   131b4:	cmp	r6, #0
   131b8:	beq	132f4 <__assert_fail@plt+0x202c>
   131bc:	ldr	r0, [r6]
   131c0:	cmp	r0, #0
   131c4:	beq	132f4 <__assert_fail@plt+0x202c>
   131c8:	add	r3, r6, #16
   131cc:	str	r3, [sp, #8]
   131d0:	ldr	r3, [sp, #16]
   131d4:	add	r3, r3, #12
   131d8:	str	r3, [sp, #44]	; 0x2c
   131dc:	ldr	r3, [sp, #8]
   131e0:	ldr	r5, [r3, #-4]
   131e4:	ldr	r6, [r3, #-8]
   131e8:	cmp	r5, #0
   131ec:	bne	131f8 <__assert_fail@plt+0x1f30>
   131f0:	cmp	r6, #0
   131f4:	beq	1354c <__assert_fail@plt+0x2284>
   131f8:	ldr	r3, [sp, #20]
   131fc:	mov	r0, #28
   13200:	ldr	r2, [r3, #16]
   13204:	ldr	r3, [sp, #8]
   13208:	sub	r3, r3, #16
   1320c:	sub	r3, r3, r2
   13210:	asr	r4, r3, #4
   13214:	bl	19f68 <argp_parse@@Base+0x2560>
   13218:	subs	r1, r0, #0
   1321c:	beq	13260 <__assert_fail@plt+0x1f98>
   13220:	ldr	r3, [sp, #28]
   13224:	ldr	r0, [sp, #16]
   13228:	cmp	r3, #0
   1322c:	ldr	r2, [sp, #20]
   13230:	str	r3, [r1, #12]
   13234:	ldrne	r3, [r3, #20]
   13238:	str	r2, [r1, #16]
   1323c:	ldr	r2, [r0, #12]
   13240:	addne	r3, r3, #1
   13244:	moveq	r3, #0
   13248:	str	r5, [r1, #8]
   1324c:	str	r6, [r1]
   13250:	str	r4, [r1, #4]
   13254:	str	r3, [r1, #20]
   13258:	str	r2, [r1, #24]
   1325c:	str	r1, [r0, #12]
   13260:	ldr	r3, [sp, #8]
   13264:	ldr	r0, [r3, #-16]
   13268:	bl	12f5c <__assert_fail@plt+0x1c94>
   1326c:	ldr	r3, [sp, #16]
   13270:	ldr	r2, [r3, #12]
   13274:	cmp	r2, #0
   13278:	mov	sl, r0
   1327c:	bne	13288 <__assert_fail@plt+0x1fc0>
   13280:	b	13554 <__assert_fail@plt+0x228c>
   13284:	mov	r2, r3
   13288:	ldr	r3, [r2, #24]
   1328c:	cmp	r3, #0
   13290:	bne	13284 <__assert_fail@plt+0x1fbc>
   13294:	add	r2, r2, #24
   13298:	ldr	r3, [sl, #4]
   1329c:	ldr	r1, [sl, #12]
   132a0:	cmp	r3, #0
   132a4:	str	r1, [r2]
   132a8:	mov	r2, #0
   132ac:	str	r2, [sl, #12]
   132b0:	beq	132d8 <__assert_fail@plt+0x2010>
   132b4:	ldr	ip, [sp, #16]
   132b8:	ldr	r2, [ip, #4]
   132bc:	cmp	r2, #0
   132c0:	bne	13300 <__assert_fail@plt+0x2038>
   132c4:	ldr	r0, [sl]
   132c8:	ldr	r1, [sl, #8]
   132cc:	stm	ip, {r0, r3}
   132d0:	str	r1, [ip, #8]
   132d4:	str	r2, [sl, #4]
   132d8:	mov	r0, sl
   132dc:	bl	18984 <argp_parse@@Base+0xf7c>
   132e0:	ldr	r3, [sp, #8]
   132e4:	ldr	r0, [r3], #16
   132e8:	cmp	r0, #0
   132ec:	str	r3, [sp, #8]
   132f0:	bne	131e0 <__assert_fail@plt+0x1f18>
   132f4:	ldr	r0, [sp, #16]
   132f8:	add	sp, sp, #52	; 0x34
   132fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13300:	add	r3, r3, r2
   13304:	str	r3, [sp, #32]
   13308:	rsb	r0, r3, r3, lsl #3
   1330c:	lsl	r0, r0, #2
   13310:	bl	19f68 <argp_parse@@Base+0x2560>
   13314:	ldr	r3, [sp, #16]
   13318:	mov	r4, r0
   1331c:	str	r0, [sp, #24]
   13320:	ldr	r0, [r3, #8]
   13324:	bl	111a8 <strlen@plt>
   13328:	mov	r5, r0
   1332c:	ldr	r0, [sl, #8]
   13330:	bl	111a8 <strlen@plt>
   13334:	add	r0, r5, r0
   13338:	add	r0, r0, #1
   1333c:	bl	19f68 <argp_parse@@Base+0x2560>
   13340:	cmp	r4, #0
   13344:	cmpne	r0, #0
   13348:	mov	r7, r0
   1334c:	beq	13564 <__assert_fail@plt+0x229c>
   13350:	ldr	r3, [sp, #32]
   13354:	ldr	r2, [pc, #748]	; 13648 <__assert_fail@plt+0x2380>
   13358:	cmp	r3, r2
   1335c:	bhi	135a0 <__assert_fail@plt+0x22d8>
   13360:	ldr	r6, [sp, #16]
   13364:	ldr	r8, [sp, #24]
   13368:	ldm	r6, {r3, r4}
   1336c:	mov	r0, r8
   13370:	rsb	r9, r4, r4, lsl #3
   13374:	mov	r1, r3
   13378:	lsl	r9, r9, #2
   1337c:	mov	r2, r9
   13380:	str	r3, [sp, #36]	; 0x24
   13384:	bl	11178 <mempcpy@plt>
   13388:	ldr	r3, [sl, #4]
   1338c:	ldr	r1, [sl]
   13390:	str	r3, [sp, #4]
   13394:	rsb	r2, r3, r3, lsl #3
   13398:	lsl	r2, r2, #2
   1339c:	bl	11088 <memcpy@plt>
   133a0:	ldr	r6, [r6, #8]
   133a4:	mov	r2, r5
   133a8:	mov	r1, r6
   133ac:	mov	r0, r7
   133b0:	bl	11088 <memcpy@plt>
   133b4:	cmp	r4, #0
   133b8:	beq	1355c <__assert_fail@plt+0x2294>
   133bc:	mov	r2, r8
   133c0:	ldr	r3, [r2, #8]
   133c4:	subs	r4, r4, #1
   133c8:	sub	r3, r3, r6
   133cc:	add	r3, r7, r3
   133d0:	str	r3, [r2, #8]
   133d4:	add	r2, r2, #28
   133d8:	bne	133c0 <__assert_fail@plt+0x20f8>
   133dc:	ldr	r3, [sp, #24]
   133e0:	add	r1, r3, r9
   133e4:	ldr	r3, [sp, #4]
   133e8:	ldr	r9, [sl, #8]
   133ec:	cmp	r3, #0
   133f0:	add	r3, r7, r5
   133f4:	str	r3, [sp, #12]
   133f8:	beq	134e4 <__assert_fail@plt+0x221c>
   133fc:	add	fp, r1, #28
   13400:	sub	r8, r3, #1
   13404:	str	sl, [sp, #40]	; 0x28
   13408:	mov	r6, r3
   1340c:	mov	sl, r9
   13410:	mov	r9, fp
   13414:	mov	fp, r8
   13418:	ldr	r5, [r9, #-24]	; 0xffffffe8
   1341c:	str	r6, [r9, #-20]	; 0xffffffec
   13420:	cmp	r5, #0
   13424:	ldr	r4, [r9, #-28]	; 0xffffffe4
   13428:	bne	1343c <__assert_fail@plt+0x2174>
   1342c:	b	134c8 <__assert_fail@plt+0x2200>
   13430:	subs	r5, r5, #1
   13434:	add	r4, r4, #24
   13438:	beq	134c8 <__assert_fail@plt+0x2200>
   1343c:	ldr	r3, [r4, #12]
   13440:	tst	r3, #8
   13444:	bne	13430 <__assert_fail@plt+0x2168>
   13448:	ldr	r8, [r4, #4]
   1344c:	sub	r3, r8, #1
   13450:	cmp	r3, #254	; 0xfe
   13454:	bhi	13430 <__assert_fail@plt+0x2168>
   13458:	bl	11184 <__ctype_b_loc@plt>
   1345c:	lsl	r3, r8, #1
   13460:	ldr	r2, [r0]
   13464:	ldrh	r3, [r2, r3]
   13468:	tst	r3, #16384	; 0x4000
   1346c:	beq	13430 <__assert_fail@plt+0x2168>
   13470:	ldrb	r1, [sl]
   13474:	cmp	r1, r8
   13478:	bne	13430 <__assert_fail@plt+0x2168>
   1347c:	ldr	r3, [sp, #12]
   13480:	cmp	r7, r3
   13484:	bcs	134b0 <__assert_fail@plt+0x21e8>
   13488:	ldrb	r3, [r7]
   1348c:	cmp	r3, r1
   13490:	movne	r3, r7
   13494:	bne	134a8 <__assert_fail@plt+0x21e0>
   13498:	b	134b8 <__assert_fail@plt+0x21f0>
   1349c:	ldrb	r2, [r3, #1]!
   134a0:	cmp	r2, r1
   134a4:	beq	134b8 <__assert_fail@plt+0x21f0>
   134a8:	cmp	fp, r3
   134ac:	bne	1349c <__assert_fail@plt+0x21d4>
   134b0:	strb	r1, [r6]
   134b4:	add	r6, r6, #1
   134b8:	subs	r5, r5, #1
   134bc:	add	sl, sl, #1
   134c0:	add	r4, r4, #24
   134c4:	bne	1343c <__assert_fail@plt+0x2174>
   134c8:	ldr	r3, [sp, #4]
   134cc:	add	r9, r9, #28
   134d0:	subs	r3, r3, #1
   134d4:	str	r3, [sp, #4]
   134d8:	bne	13418 <__assert_fail@plt+0x2150>
   134dc:	ldr	sl, [sp, #40]	; 0x28
   134e0:	mov	r3, r6
   134e4:	mov	r2, #0
   134e8:	strb	r2, [r3]
   134ec:	ldr	r0, [sp, #36]	; 0x24
   134f0:	bl	18984 <argp_parse@@Base+0xf7c>
   134f4:	ldr	r4, [sp, #16]
   134f8:	ldr	r0, [r4, #8]
   134fc:	bl	18984 <argp_parse@@Base+0xf7c>
   13500:	ldr	r2, [sp, #24]
   13504:	ldr	r0, [sl, #12]
   13508:	str	r2, [r4]
   1350c:	ldr	r2, [sp, #32]
   13510:	cmp	r0, #0
   13514:	stmib	r4, {r2, r7}
   13518:	beq	1352c <__assert_fail@plt+0x2264>
   1351c:	ldr	r4, [r0, #24]
   13520:	bl	18984 <argp_parse@@Base+0xf7c>
   13524:	subs	r0, r4, #0
   13528:	bne	1351c <__assert_fail@plt+0x2254>
   1352c:	ldr	r3, [sl, #4]
   13530:	cmp	r3, #0
   13534:	beq	132d8 <__assert_fail@plt+0x2010>
   13538:	ldr	r0, [sl]
   1353c:	bl	18984 <argp_parse@@Base+0xf7c>
   13540:	ldr	r0, [sl, #8]
   13544:	bl	18984 <argp_parse@@Base+0xf7c>
   13548:	b	132d8 <__assert_fail@plt+0x2010>
   1354c:	ldr	r1, [sp, #28]
   13550:	b	13268 <__assert_fail@plt+0x1fa0>
   13554:	ldr	r2, [sp, #44]	; 0x2c
   13558:	b	13298 <__assert_fail@plt+0x1fd0>
   1355c:	ldr	r1, [sp, #24]
   13560:	b	133e4 <__assert_fail@plt+0x211c>
   13564:	ldr	r3, [pc, #224]	; 1364c <__assert_fail@plt+0x2384>
   13568:	ldr	r2, [pc, #224]	; 13650 <__assert_fail@plt+0x2388>
   1356c:	ldr	r1, [pc, #224]	; 13654 <__assert_fail@plt+0x238c>
   13570:	ldr	r0, [pc, #224]	; 13658 <__assert_fail@plt+0x2390>
   13574:	bl	112c8 <__assert_fail@plt>
   13578:	ldr	r3, [pc, #220]	; 1365c <__assert_fail@plt+0x2394>
   1357c:	ldr	r2, [pc, #220]	; 13660 <__assert_fail@plt+0x2398>
   13580:	ldr	r1, [pc, #204]	; 13654 <__assert_fail@plt+0x238c>
   13584:	ldr	r0, [pc, #216]	; 13664 <__assert_fail@plt+0x239c>
   13588:	bl	112c8 <__assert_fail@plt>
   1358c:	ldr	r3, [pc, #200]	; 1365c <__assert_fail@plt+0x2394>
   13590:	mov	r2, #460	; 0x1cc
   13594:	ldr	r1, [pc, #184]	; 13654 <__assert_fail@plt+0x238c>
   13598:	ldr	r0, [pc, #200]	; 13668 <__assert_fail@plt+0x23a0>
   1359c:	bl	112c8 <__assert_fail@plt>
   135a0:	ldr	r3, [pc, #164]	; 1364c <__assert_fail@plt+0x2384>
   135a4:	mov	r2, #972	; 0x3cc
   135a8:	ldr	r1, [pc, #164]	; 13654 <__assert_fail@plt+0x238c>
   135ac:	ldr	r0, [pc, #184]	; 1366c <__assert_fail@plt+0x23a4>
   135b0:	bl	112c8 <__assert_fail@plt>
   135b4:	ldr	r2, [r4, #16]
   135b8:	cmp	r2, #0
   135bc:	bne	13198 <__assert_fail@plt+0x1ed0>
   135c0:	ldr	r2, [r4, #20]
   135c4:	cmp	r2, #0
   135c8:	bne	13198 <__assert_fail@plt+0x1ed0>
   135cc:	add	sl, sl, #28
   135d0:	mov	r2, r5
   135d4:	b	130ac <__assert_fail@plt+0x1de4>
   135d8:	ldr	r0, [r4, #16]
   135dc:	cmp	r0, #0
   135e0:	beq	13604 <__assert_fail@plt+0x233c>
   135e4:	str	r3, [sl, #-24]	; 0xffffffe8
   135e8:	ldr	r5, [r4, #20]
   135ec:	str	r4, [sl, #-28]	; 0xffffffe4
   135f0:	cmp	r5, #0
   135f4:	str	fp, [sl, #-20]	; 0xffffffec
   135f8:	bne	130ec <__assert_fail@plt+0x1e24>
   135fc:	add	r5, r2, #1
   13600:	b	130ec <__assert_fail@plt+0x1e24>
   13604:	ldr	r5, [r4, #20]
   13608:	cmp	r5, #0
   1360c:	beq	131ac <__assert_fail@plt+0x1ee4>
   13610:	str	r4, [sl, #-28]	; 0xffffffe4
   13614:	str	r3, [sl, #-24]	; 0xffffffe8
   13618:	str	fp, [sl, #-20]	; 0xffffffec
   1361c:	b	130ec <__assert_fail@plt+0x1e24>
   13620:	ldr	r3, [pc, #52]	; 1365c <__assert_fail@plt+0x2394>
   13624:	mov	r2, #476	; 0x1dc
   13628:	ldr	r1, [pc, #36]	; 13654 <__assert_fail@plt+0x238c>
   1362c:	ldr	r0, [pc, #60]	; 13670 <__assert_fail@plt+0x23a8>
   13630:	bl	112c8 <__assert_fail@plt>
   13634:	ldr	r3, [pc, #32]	; 1365c <__assert_fail@plt+0x2394>
   13638:	ldr	r2, [pc, #52]	; 13674 <__assert_fail@plt+0x23ac>
   1363c:	ldr	r1, [pc, #16]	; 13654 <__assert_fail@plt+0x238c>
   13640:	ldr	r0, [pc, #48]	; 13678 <__assert_fail@plt+0x23b0>
   13644:	bl	112c8 <__assert_fail@plt>
   13648:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   1364c:	andeq	ip, r1, r8, lsr #21
   13650:	andeq	r0, r0, sl, asr #7
   13654:	andeq	ip, r1, r4, asr #22
   13658:	andeq	ip, r1, r4, asr #23
   1365c:	muleq	r1, ip, sl
   13660:	andeq	r0, r0, r2, asr #3
   13664:	andeq	ip, r1, r0, asr fp
   13668:	andeq	ip, r1, r4, asr fp
   1366c:	andeq	ip, r1, r0, ror #23
   13670:	andeq	ip, r1, r8, lsl #23
   13674:	ldrdeq	r0, [r0], -sl
   13678:	andeq	ip, r1, r4, ror #22
   1367c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13680:	mov	r7, r2
   13684:	sub	sp, sp, #28
   13688:	mov	r4, r3
   1368c:	ldr	r3, [r7]
   13690:	ldr	r2, [r0, #20]
   13694:	str	r3, [sp, #20]
   13698:	ldr	r3, [r0, #16]
   1369c:	cmp	r2, #0
   136a0:	str	r3, [sp, #12]
   136a4:	ldr	r3, [r0, #8]
   136a8:	mov	r8, r1
   136ac:	mov	r9, r3
   136b0:	str	r3, [sp, #16]
   136b4:	ldr	r5, [sp, #64]	; 0x40
   136b8:	beq	13910 <__assert_fail@plt+0x2648>
   136bc:	mov	r6, r0
   136c0:	bl	18828 <argp_parse@@Base+0xe20>
   136c4:	ldr	r3, [r6, #20]
   136c8:	mov	r1, r9
   136cc:	mov	r2, r0
   136d0:	ldr	r0, [pc, #640]	; 13958 <__assert_fail@plt+0x2690>
   136d4:	blx	r3
   136d8:	mov	r3, r0
   136dc:	str	r0, [sp, #8]
   136e0:	cmp	r3, #0
   136e4:	beq	138b0 <__assert_fail@plt+0x25e8>
   136e8:	mov	r1, #10
   136ec:	mov	r0, r3
   136f0:	bl	11058 <strchrnul@plt>
   136f4:	ldrb	sl, [r0]
   136f8:	mov	r6, r0
   136fc:	cmp	sl, #0
   13700:	bne	13848 <__assert_fail@plt+0x2580>
   13704:	ldr	fp, [sp, #8]
   13708:	ldr	r3, [r5, #28]
   1370c:	ldr	r1, [r5, #24]
   13710:	ldr	r0, [r5, #16]
   13714:	sub	r1, r3, r1
   13718:	cmp	r1, r0
   1371c:	add	r9, r6, #1
   13720:	mov	r1, r3
   13724:	sub	r9, r9, fp
   13728:	bhi	138e0 <__assert_fail@plt+0x2618>
   1372c:	ldr	r0, [r5, #20]
   13730:	ldr	ip, [r5, #8]
   13734:	cmp	r0, #0
   13738:	addge	r9, r9, r0
   1373c:	cmp	r9, ip
   13740:	bcc	13890 <__assert_fail@plt+0x25c8>
   13744:	ldr	r1, [r5, #32]
   13748:	cmp	r1, r3
   1374c:	bls	13918 <__assert_fail@plt+0x2650>
   13750:	add	r0, r3, #1
   13754:	mov	r1, #10
   13758:	str	r0, [r5, #28]
   1375c:	strb	r1, [r3]
   13760:	ldr	r0, [r5, #28]
   13764:	sub	r9, r6, fp
   13768:	ldr	r1, [r5, #32]
   1376c:	add	r3, r0, r9
   13770:	cmp	r1, r3
   13774:	bcs	13790 <__assert_fail@plt+0x24c8>
   13778:	mov	r1, r9
   1377c:	mov	r0, r5
   13780:	bl	1a618 <argp_parse@@Base+0x2c10>
   13784:	cmp	r0, #0
   13788:	beq	137a8 <__assert_fail@plt+0x24e0>
   1378c:	ldr	r0, [r5, #28]
   13790:	mov	r2, r9
   13794:	mov	r1, fp
   13798:	bl	11088 <memcpy@plt>
   1379c:	ldr	r3, [r5, #28]
   137a0:	add	r9, r3, r9
   137a4:	str	r9, [r5, #28]
   137a8:	ldr	r3, [sp, #16]
   137ac:	ldr	r2, [sp, #8]
   137b0:	cmp	r3, r2
   137b4:	beq	137c0 <__assert_fail@plt+0x24f8>
   137b8:	mov	r0, r2
   137bc:	bl	18984 <argp_parse@@Base+0xf7c>
   137c0:	ldr	r3, [sp, #12]
   137c4:	cmp	r3, #0
   137c8:	beq	1380c <__assert_fail@plt+0x2544>
   137cc:	ldr	r2, [r3]
   137d0:	cmp	r2, #0
   137d4:	beq	1380c <__assert_fail@plt+0x2544>
   137d8:	ldr	r9, [sp, #12]
   137dc:	mov	r3, r4
   137e0:	mov	r0, r2
   137e4:	str	r5, [sp]
   137e8:	mov	r2, r7
   137ec:	mov	r1, r8
   137f0:	bl	1367c <__assert_fail@plt+0x23b4>
   137f4:	ldr	r2, [r9, #16]!
   137f8:	cmp	r2, #0
   137fc:	clz	r3, r0
   13800:	lsr	r3, r3, #5
   13804:	bne	137e0 <__assert_fail@plt+0x2518>
   13808:	mov	r4, r3
   1380c:	cmp	r4, #0
   13810:	moveq	sl, #0
   13814:	andne	sl, sl, #1
   13818:	cmp	sl, #0
   1381c:	beq	138d0 <__assert_fail@plt+0x2608>
   13820:	ldrb	r0, [r6]
   13824:	cmp	r0, #0
   13828:	bne	138f4 <__assert_fail@plt+0x262c>
   1382c:	ldr	r3, [sp, #20]
   13830:	ldrb	r4, [r3]
   13834:	cmp	r4, #0
   13838:	moveq	r0, r4
   1383c:	strbne	r0, [r3]
   13840:	add	sp, sp, #28
   13844:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13848:	ldr	r3, [sp, #20]
   1384c:	ldrb	r9, [r3]
   13850:	cmp	r9, #0
   13854:	beq	13950 <__assert_fail@plt+0x2688>
   13858:	mov	sl, #0
   1385c:	add	fp, r0, #1
   13860:	add	sl, sl, #1
   13864:	mov	r0, fp
   13868:	mov	r1, #10
   1386c:	bl	11058 <strchrnul@plt>
   13870:	cmp	sl, r9
   13874:	bne	1385c <__assert_fail@plt+0x2594>
   13878:	mov	r6, r0
   1387c:	ldr	r3, [r7]
   13880:	mov	sl, #1
   13884:	add	r3, r3, sl
   13888:	str	r3, [r7]
   1388c:	b	13708 <__assert_fail@plt+0x2440>
   13890:	ldr	r0, [r5, #32]
   13894:	cmp	r0, r3
   13898:	bls	13934 <__assert_fail@plt+0x266c>
   1389c:	add	r0, r1, #1
   138a0:	mov	r3, #32
   138a4:	str	r0, [r5, #28]
   138a8:	strb	r3, [r1]
   138ac:	b	13760 <__assert_fail@plt+0x2498>
   138b0:	ldr	r3, [sp, #12]
   138b4:	cmp	r3, #0
   138b8:	beq	138d0 <__assert_fail@plt+0x2608>
   138bc:	ldr	r2, [r3]
   138c0:	cmp	r2, #0
   138c4:	ldrne	r6, [sp, #8]
   138c8:	movne	sl, r6
   138cc:	bne	137d8 <__assert_fail@plt+0x2510>
   138d0:	clz	r0, r4
   138d4:	lsr	r0, r0, #5
   138d8:	add	sp, sp, #28
   138dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   138e0:	mov	r0, r5
   138e4:	bl	1a06c <argp_parse@@Base+0x2664>
   138e8:	ldr	r3, [r5, #28]
   138ec:	mov	r1, r3
   138f0:	b	1372c <__assert_fail@plt+0x2464>
   138f4:	ldr	r2, [sp, #20]
   138f8:	mov	r0, #1
   138fc:	ldrb	r3, [r2]
   13900:	add	r3, r3, r0
   13904:	strb	r3, [r2]
   13908:	add	sp, sp, #28
   1390c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13910:	str	r3, [sp, #8]
   13914:	b	136e0 <__assert_fail@plt+0x2418>
   13918:	mov	r1, #1
   1391c:	mov	r0, r5
   13920:	bl	1a618 <argp_parse@@Base+0x2c10>
   13924:	cmp	r0, #0
   13928:	beq	13760 <__assert_fail@plt+0x2498>
   1392c:	ldr	r3, [r5, #28]
   13930:	b	13750 <__assert_fail@plt+0x2488>
   13934:	mov	r1, #1
   13938:	mov	r0, r5
   1393c:	bl	1a618 <argp_parse@@Base+0x2c10>
   13940:	cmp	r0, #0
   13944:	beq	13760 <__assert_fail@plt+0x2498>
   13948:	ldr	r1, [r5, #28]
   1394c:	b	1389c <__assert_fail@plt+0x25d4>
   13950:	ldr	fp, [sp, #8]
   13954:	b	1387c <__assert_fail@plt+0x25b4>
   13958:	andeq	r0, r0, #6
   1395c:	subs	r3, r0, #0
   13960:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13964:	moveq	r0, r3
   13968:	sub	sp, sp, #52	; 0x34
   1396c:	mov	r4, r1
   13970:	beq	13984 <__assert_fail@plt+0x26bc>
   13974:	mov	r1, #10
   13978:	bl	111b4 <strchr@plt>
   1397c:	adds	r0, r0, #0
   13980:	movne	r0, #1
   13984:	cmp	r4, #0
   13988:	str	r0, [sp, #20]
   1398c:	beq	13c9c <__assert_fail@plt+0x29d4>
   13990:	ldr	r3, [r4]
   13994:	cmp	r3, #0
   13998:	beq	13c9c <__assert_fail@plt+0x29d4>
   1399c:	mov	r9, #0
   139a0:	mov	r8, #10
   139a4:	str	r4, [sp, #24]
   139a8:	ldr	r0, [r3, #8]
   139ac:	ldr	r4, [r3, #16]
   139b0:	cmp	r0, #0
   139b4:	moveq	r0, r9
   139b8:	beq	139cc <__assert_fail@plt+0x2704>
   139bc:	mov	r1, r8
   139c0:	bl	111b4 <strchr@plt>
   139c4:	adds	r0, r0, #0
   139c8:	movne	r0, #1
   139cc:	cmp	r4, #0
   139d0:	str	r0, [sp]
   139d4:	beq	13c78 <__assert_fail@plt+0x29b0>
   139d8:	ldr	r3, [r4]
   139dc:	cmp	r3, #0
   139e0:	beq	13c78 <__assert_fail@plt+0x29b0>
   139e4:	str	r4, [sp, #28]
   139e8:	ldr	r0, [r3, #8]
   139ec:	ldr	r4, [r3, #16]
   139f0:	cmp	r0, #0
   139f4:	moveq	r0, r9
   139f8:	beq	13a0c <__assert_fail@plt+0x2744>
   139fc:	mov	r1, r8
   13a00:	bl	111b4 <strchr@plt>
   13a04:	adds	r0, r0, #0
   13a08:	movne	r0, #1
   13a0c:	cmp	r4, #0
   13a10:	str	r0, [sp, #4]
   13a14:	beq	13c58 <__assert_fail@plt+0x2990>
   13a18:	ldr	r3, [r4]
   13a1c:	cmp	r3, #0
   13a20:	beq	13c58 <__assert_fail@plt+0x2990>
   13a24:	str	r4, [sp, #32]
   13a28:	ldr	r0, [r3, #8]
   13a2c:	ldr	r4, [r3, #16]
   13a30:	cmp	r0, #0
   13a34:	moveq	r0, r9
   13a38:	beq	13a4c <__assert_fail@plt+0x2784>
   13a3c:	mov	r1, r8
   13a40:	bl	111b4 <strchr@plt>
   13a44:	adds	r0, r0, #0
   13a48:	movne	r0, #1
   13a4c:	cmp	r4, #0
   13a50:	str	r0, [sp, #8]
   13a54:	beq	13c38 <__assert_fail@plt+0x2970>
   13a58:	ldr	r3, [r4]
   13a5c:	cmp	r3, #0
   13a60:	beq	13c38 <__assert_fail@plt+0x2970>
   13a64:	str	r4, [sp, #36]	; 0x24
   13a68:	ldr	r0, [r3, #8]
   13a6c:	ldr	r4, [r3, #16]
   13a70:	cmp	r0, #0
   13a74:	moveq	r0, r9
   13a78:	beq	13a8c <__assert_fail@plt+0x27c4>
   13a7c:	mov	r1, r8
   13a80:	bl	111b4 <strchr@plt>
   13a84:	adds	r0, r0, #0
   13a88:	movne	r0, #1
   13a8c:	cmp	r4, #0
   13a90:	str	r0, [sp, #12]
   13a94:	beq	13c14 <__assert_fail@plt+0x294c>
   13a98:	ldr	r3, [r4]
   13a9c:	cmp	r3, #0
   13aa0:	beq	13c14 <__assert_fail@plt+0x294c>
   13aa4:	str	r4, [sp, #40]	; 0x28
   13aa8:	ldr	r0, [r3, #8]
   13aac:	ldr	fp, [r3, #16]
   13ab0:	cmp	r0, #0
   13ab4:	moveq	r0, r9
   13ab8:	beq	13acc <__assert_fail@plt+0x2804>
   13abc:	mov	r1, r8
   13ac0:	bl	111b4 <strchr@plt>
   13ac4:	adds	r0, r0, #0
   13ac8:	movne	r0, #1
   13acc:	cmp	fp, #0
   13ad0:	str	r0, [sp, #16]
   13ad4:	beq	13bf0 <__assert_fail@plt+0x2928>
   13ad8:	ldr	r3, [fp]
   13adc:	cmp	r3, #0
   13ae0:	beq	13bf0 <__assert_fail@plt+0x2928>
   13ae4:	str	fp, [sp, #44]	; 0x2c
   13ae8:	ldr	r0, [r3, #8]
   13aec:	ldr	r7, [r3, #16]
   13af0:	cmp	r0, #0
   13af4:	moveq	r0, r9
   13af8:	beq	13b0c <__assert_fail@plt+0x2844>
   13afc:	mov	r1, r8
   13b00:	bl	111b4 <strchr@plt>
   13b04:	adds	r0, r0, #0
   13b08:	movne	r0, #1
   13b0c:	cmp	r7, #0
   13b10:	mov	r6, r0
   13b14:	beq	13bd0 <__assert_fail@plt+0x2908>
   13b18:	ldr	r3, [r7]
   13b1c:	cmp	r3, #0
   13b20:	beq	13bd0 <__assert_fail@plt+0x2908>
   13b24:	ldr	r0, [r3, #8]
   13b28:	ldr	r5, [r3, #16]
   13b2c:	cmp	r0, #0
   13b30:	moveq	sl, r9
   13b34:	beq	13b48 <__assert_fail@plt+0x2880>
   13b38:	mov	r1, r8
   13b3c:	bl	111b4 <strchr@plt>
   13b40:	adds	sl, r0, #0
   13b44:	movne	sl, #1
   13b48:	cmp	r5, #0
   13b4c:	beq	13bc0 <__assert_fail@plt+0x28f8>
   13b50:	ldr	r3, [r5]
   13b54:	cmp	r3, #0
   13b58:	beq	13bc0 <__assert_fail@plt+0x28f8>
   13b5c:	ldr	r0, [r3, #8]
   13b60:	ldr	r4, [r3, #16]
   13b64:	cmp	r0, #0
   13b68:	moveq	fp, r9
   13b6c:	beq	13b80 <__assert_fail@plt+0x28b8>
   13b70:	mov	r1, r8
   13b74:	bl	111b4 <strchr@plt>
   13b78:	adds	fp, r0, #0
   13b7c:	movne	fp, #1
   13b80:	cmp	r4, #0
   13b84:	beq	13bb0 <__assert_fail@plt+0x28e8>
   13b88:	ldr	r3, [r4]
   13b8c:	cmp	r3, #0
   13b90:	beq	13bb0 <__assert_fail@plt+0x28e8>
   13b94:	ldr	r1, [r3, #16]
   13b98:	ldr	r0, [r3, #8]
   13b9c:	bl	1395c <__assert_fail@plt+0x2694>
   13ba0:	ldr	r3, [r4, #16]!
   13ba4:	cmp	r3, #0
   13ba8:	add	fp, fp, r0
   13bac:	bne	13b94 <__assert_fail@plt+0x28cc>
   13bb0:	ldr	r3, [r5, #16]!
   13bb4:	add	sl, sl, fp
   13bb8:	cmp	r3, #0
   13bbc:	bne	13b5c <__assert_fail@plt+0x2894>
   13bc0:	ldr	r3, [r7, #16]!
   13bc4:	add	r6, r6, sl
   13bc8:	cmp	r3, #0
   13bcc:	bne	13b24 <__assert_fail@plt+0x285c>
   13bd0:	ldr	r2, [sp, #44]	; 0x2c
   13bd4:	ldr	r3, [r2, #16]!
   13bd8:	str	r2, [sp, #44]	; 0x2c
   13bdc:	ldr	r2, [sp, #16]
   13be0:	cmp	r3, #0
   13be4:	add	r2, r2, r6
   13be8:	str	r2, [sp, #16]
   13bec:	bne	13ae8 <__assert_fail@plt+0x2820>
   13bf0:	ldr	r2, [sp, #40]	; 0x28
   13bf4:	ldr	r1, [sp, #16]
   13bf8:	ldr	r3, [r2, #16]!
   13bfc:	str	r2, [sp, #40]	; 0x28
   13c00:	ldr	r2, [sp, #12]
   13c04:	cmp	r3, #0
   13c08:	add	r2, r2, r1
   13c0c:	str	r2, [sp, #12]
   13c10:	bne	13aa8 <__assert_fail@plt+0x27e0>
   13c14:	ldr	r2, [sp, #36]	; 0x24
   13c18:	ldr	r1, [sp, #12]
   13c1c:	ldr	r3, [r2, #16]!
   13c20:	str	r2, [sp, #36]	; 0x24
   13c24:	ldr	r2, [sp, #8]
   13c28:	cmp	r3, #0
   13c2c:	add	r2, r2, r1
   13c30:	str	r2, [sp, #8]
   13c34:	bne	13a68 <__assert_fail@plt+0x27a0>
   13c38:	ldr	r2, [sp, #32]
   13c3c:	ldr	r3, [r2, #16]!
   13c40:	str	r2, [sp, #32]
   13c44:	ldmib	sp, {r1, r2}
   13c48:	cmp	r3, #0
   13c4c:	add	r2, r2, r1
   13c50:	str	r2, [sp, #4]
   13c54:	bne	13a28 <__assert_fail@plt+0x2760>
   13c58:	ldr	r2, [sp, #28]
   13c5c:	ldr	r3, [r2, #16]!
   13c60:	str	r2, [sp, #28]
   13c64:	ldm	sp, {r1, r2}
   13c68:	cmp	r3, #0
   13c6c:	add	r2, r2, r1
   13c70:	str	r2, [sp]
   13c74:	bne	139e8 <__assert_fail@plt+0x2720>
   13c78:	ldr	r2, [sp, #24]
   13c7c:	ldr	r1, [sp]
   13c80:	ldr	r3, [r2, #16]!
   13c84:	str	r2, [sp, #24]
   13c88:	ldr	r2, [sp, #20]
   13c8c:	cmp	r3, #0
   13c90:	add	r2, r2, r1
   13c94:	str	r2, [sp, #20]
   13c98:	bne	139a8 <__assert_fail@plt+0x26e0>
   13c9c:	ldr	r0, [sp, #20]
   13ca0:	add	sp, sp, #52	; 0x34
   13ca4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ca8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13cac:	add	fp, sp, #32
   13cb0:	sub	sp, sp, #36	; 0x24
   13cb4:	ldr	r3, [r0, #4]
   13cb8:	cmp	r3, #0
   13cbc:	str	r3, [fp, #-40]	; 0xffffffd8
   13cc0:	bne	13ccc <__assert_fail@plt+0x2a04>
   13cc4:	sub	sp, fp, #32
   13cc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ccc:	mov	r4, r0
   13cd0:	str	r0, [fp, #-60]	; 0xffffffc4
   13cd4:	ldr	r0, [r0, #8]
   13cd8:	str	r1, [fp, #-44]	; 0xffffffd4
   13cdc:	bl	111a8 <strlen@plt>
   13ce0:	ldr	r3, [r4]
   13ce4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13ce8:	add	r3, r3, #28
   13cec:	mov	r9, r3
   13cf0:	str	r3, [fp, #-64]	; 0xffffffc0
   13cf4:	mov	sl, r9
   13cf8:	str	r2, [fp, #-48]	; 0xffffffd0
   13cfc:	add	r3, r0, #15
   13d00:	bic	r3, r3, #7
   13d04:	sub	sp, sp, r3
   13d08:	str	sp, [fp, #-56]	; 0xffffffc8
   13d0c:	str	sp, [fp, #-52]	; 0xffffffcc
   13d10:	ldr	r5, [sl, #-24]	; 0xffffffe8
   13d14:	ldr	r4, [sl, #-28]	; 0xffffffe4
   13d18:	cmp	r5, #0
   13d1c:	ldr	r9, [sl, #-20]	; 0xffffffec
   13d20:	beq	13d98 <__assert_fail@plt+0x2ad0>
   13d24:	mov	r8, r4
   13d28:	b	13d38 <__assert_fail@plt+0x2a70>
   13d2c:	subs	r5, r5, #1
   13d30:	add	r4, r4, #24
   13d34:	beq	13d98 <__assert_fail@plt+0x2ad0>
   13d38:	ldr	r6, [r4, #12]
   13d3c:	tst	r6, #8
   13d40:	bne	13d2c <__assert_fail@plt+0x2a64>
   13d44:	ldr	r7, [r4, #4]
   13d48:	sub	r3, r7, #1
   13d4c:	cmp	r3, #254	; 0xfe
   13d50:	bhi	13d2c <__assert_fail@plt+0x2a64>
   13d54:	bl	11184 <__ctype_b_loc@plt>
   13d58:	lsl	r3, r7, #1
   13d5c:	ldr	r2, [r0]
   13d60:	ldrh	r3, [r2, r3]
   13d64:	tst	r3, #16384	; 0x4000
   13d68:	beq	13d2c <__assert_fail@plt+0x2a64>
   13d6c:	ldrb	r3, [r9]
   13d70:	cmp	r7, r3
   13d74:	bne	13d2c <__assert_fail@plt+0x2a64>
   13d78:	tst	r6, #4
   13d7c:	moveq	r8, r4
   13d80:	tst	r6, #2
   13d84:	beq	13f0c <__assert_fail@plt+0x2c44>
   13d88:	subs	r5, r5, #1
   13d8c:	add	r9, r9, #1
   13d90:	add	r4, r4, #24
   13d94:	bne	13d38 <__assert_fail@plt+0x2a70>
   13d98:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13d9c:	add	sl, sl, #28
   13da0:	subs	r3, r3, #1
   13da4:	str	r3, [fp, #-48]	; 0xffffffd0
   13da8:	bne	13d10 <__assert_fail@plt+0x2a48>
   13dac:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13db0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   13db4:	cmp	r3, r2
   13db8:	bcc	140c0 <__assert_fail@plt+0x2df8>
   13dbc:	ldr	r7, [fp, #-64]	; 0xffffffc0
   13dc0:	ldr	r5, [r7, #-24]	; 0xffffffe8
   13dc4:	ldr	r4, [r7, #-28]	; 0xffffffe4
   13dc8:	cmp	r5, #0
   13dcc:	ldr	r6, [r7, #-20]	; 0xffffffec
   13dd0:	movne	r8, r4
   13dd4:	bne	13de8 <__assert_fail@plt+0x2b20>
   13dd8:	b	13e48 <__assert_fail@plt+0x2b80>
   13ddc:	subs	r5, r5, #1
   13de0:	add	r4, r4, #24
   13de4:	beq	13e48 <__assert_fail@plt+0x2b80>
   13de8:	ldr	r9, [r4, #12]
   13dec:	tst	r9, #8
   13df0:	bne	13ddc <__assert_fail@plt+0x2b14>
   13df4:	ldr	sl, [r4, #4]
   13df8:	sub	r3, sl, #1
   13dfc:	cmp	r3, #254	; 0xfe
   13e00:	bhi	13ddc <__assert_fail@plt+0x2b14>
   13e04:	bl	11184 <__ctype_b_loc@plt>
   13e08:	lsl	r3, sl, #1
   13e0c:	ldr	r1, [r0]
   13e10:	ldrh	r3, [r1, r3]
   13e14:	tst	r3, #16384	; 0x4000
   13e18:	beq	13ddc <__assert_fail@plt+0x2b14>
   13e1c:	ldrb	r3, [r6]
   13e20:	cmp	sl, r3
   13e24:	bne	13ddc <__assert_fail@plt+0x2b14>
   13e28:	tst	r9, #4
   13e2c:	moveq	r8, r4
   13e30:	tst	r9, #2
   13e34:	beq	13f44 <__assert_fail@plt+0x2c7c>
   13e38:	subs	r5, r5, #1
   13e3c:	add	r6, r6, #1
   13e40:	add	r4, r4, #24
   13e44:	bne	13de8 <__assert_fail@plt+0x2b20>
   13e48:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13e4c:	add	r7, r7, #28
   13e50:	subs	r3, r3, #1
   13e54:	str	r3, [fp, #-40]	; 0xffffffd8
   13e58:	bne	13dc0 <__assert_fail@plt+0x2af8>
   13e5c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13e60:	ldm	r3, {r7, r8}
   13e64:	cmp	r8, #0
   13e68:	beq	13cc4 <__assert_fail@plt+0x29fc>
   13e6c:	ldr	sl, [pc, #652]	; 14100 <__assert_fail@plt+0x2e38>
   13e70:	ldr	r9, [pc, #652]	; 14104 <__assert_fail@plt+0x2e3c>
   13e74:	add	r7, r7, #28
   13e78:	ldr	r5, [r7, #-24]	; 0xffffffe8
   13e7c:	ldr	r4, [r7, #-28]	; 0xffffffe4
   13e80:	cmp	r5, #0
   13e84:	movne	r6, r4
   13e88:	bne	13e9c <__assert_fail@plt+0x2bd4>
   13e8c:	b	13ef8 <__assert_fail@plt+0x2c30>
   13e90:	subs	r5, r5, #1
   13e94:	add	r4, r4, #24
   13e98:	beq	13ef8 <__assert_fail@plt+0x2c30>
   13e9c:	ldr	r2, [r4]
   13ea0:	cmp	r2, #0
   13ea4:	beq	13e90 <__assert_fail@plt+0x2bc8>
   13ea8:	ldr	r1, [r4, #12]
   13eac:	tst	r1, #4
   13eb0:	moveq	r6, r4
   13eb4:	tst	r1, #2
   13eb8:	bne	13e90 <__assert_fail@plt+0x2bc8>
   13ebc:	ldr	r3, [r4, #8]
   13ec0:	ldr	r0, [r6, #12]
   13ec4:	cmp	r3, #0
   13ec8:	orr	r1, r1, r0
   13ecc:	beq	13ff0 <__assert_fail@plt+0x2d28>
   13ed0:	tst	r1, #16
   13ed4:	bne	13e90 <__assert_fail@plt+0x2bc8>
   13ed8:	tst	r1, #1
   13edc:	movne	r1, r9
   13ee0:	moveq	r1, sl
   13ee4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13ee8:	bl	1a718 <argp_parse@@Base+0x2d10>
   13eec:	subs	r5, r5, #1
   13ef0:	add	r4, r4, #24
   13ef4:	bne	13e9c <__assert_fail@plt+0x2bd4>
   13ef8:	subs	r8, r8, #1
   13efc:	add	r7, r7, #28
   13f00:	bne	13e78 <__assert_fail@plt+0x2bb0>
   13f04:	sub	sp, fp, #32
   13f08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13f0c:	ldr	r3, [r4, #8]
   13f10:	cmp	r3, #0
   13f14:	bne	13d88 <__assert_fail@plt+0x2ac0>
   13f18:	ldr	r3, [r8, #8]
   13f1c:	cmp	r3, #0
   13f20:	bne	13d88 <__assert_fail@plt+0x2ac0>
   13f24:	ldr	r3, [r8, #12]
   13f28:	orr	r6, r6, r3
   13f2c:	tst	r6, #16
   13f30:	ldreq	r3, [fp, #-52]	; 0xffffffcc
   13f34:	strbeq	r7, [r3]
   13f38:	addeq	r3, r3, #1
   13f3c:	streq	r3, [fp, #-52]	; 0xffffffcc
   13f40:	b	13d88 <__assert_fail@plt+0x2ac0>
   13f44:	ldr	r3, [r4, #8]
   13f48:	ldr	r1, [r8, #12]
   13f4c:	cmp	r3, #0
   13f50:	orr	r9, r9, r1
   13f54:	beq	1404c <__assert_fail@plt+0x2d84>
   13f58:	tst	r9, #16
   13f5c:	bne	13e38 <__assert_fail@plt+0x2b70>
   13f60:	tst	r9, #1
   13f64:	bne	14014 <__assert_fail@plt+0x2d4c>
   13f68:	mov	r0, r3
   13f6c:	str	r3, [fp, #-48]	; 0xffffffd0
   13f70:	bl	111a8 <strlen@plt>
   13f74:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13f78:	ldr	r1, [r3, #28]
   13f7c:	ldr	r2, [r3, #24]
   13f80:	sub	r2, r1, r2
   13f84:	mov	r9, r0
   13f88:	ldr	r0, [r3, #16]
   13f8c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13f90:	cmp	r2, r0
   13f94:	bhi	140a8 <__assert_fail@plt+0x2de0>
   13f98:	ldr	ip, [fp, #-44]	; 0xffffffd4
   13f9c:	ldr	r2, [ip, #20]
   13fa0:	ldr	r0, [ip, #8]
   13fa4:	bic	r2, r2, r2, asr #31
   13fa8:	add	r2, r2, #6
   13fac:	add	r2, r2, r9
   13fb0:	cmp	r2, r0
   13fb4:	bcc	14028 <__assert_fail@plt+0x2d60>
   13fb8:	ldr	r2, [ip, #32]
   13fbc:	mov	r0, ip
   13fc0:	cmp	r2, r1
   13fc4:	bls	1405c <__assert_fail@plt+0x2d94>
   13fc8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13fcc:	add	r2, r1, #1
   13fd0:	str	r2, [r0, #28]
   13fd4:	mov	r2, #10
   13fd8:	strb	r2, [r1]
   13fdc:	ldr	r2, [r4, #4]
   13fe0:	ldr	r1, [pc, #288]	; 14108 <__assert_fail@plt+0x2e40>
   13fe4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13fe8:	bl	1a718 <argp_parse@@Base+0x2d10>
   13fec:	b	13e38 <__assert_fail@plt+0x2b70>
   13ff0:	tst	r1, #16
   13ff4:	bne	13e90 <__assert_fail@plt+0x2bc8>
   13ff8:	ldr	r3, [r6, #8]
   13ffc:	cmp	r3, #0
   14000:	bne	13ed8 <__assert_fail@plt+0x2c10>
   14004:	ldr	r1, [pc, #256]	; 1410c <__assert_fail@plt+0x2e44>
   14008:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1400c:	bl	1a718 <argp_parse@@Base+0x2d10>
   14010:	b	13e90 <__assert_fail@plt+0x2bc8>
   14014:	mov	r2, sl
   14018:	ldr	r1, [pc, #240]	; 14110 <__assert_fail@plt+0x2e48>
   1401c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14020:	bl	1a718 <argp_parse@@Base+0x2d10>
   14024:	b	13e38 <__assert_fail@plt+0x2b70>
   14028:	ldr	r2, [ip, #32]
   1402c:	cmp	r2, r1
   14030:	bls	14080 <__assert_fail@plt+0x2db8>
   14034:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14038:	add	r2, r1, #1
   1403c:	str	r2, [r0, #28]
   14040:	mov	r2, #32
   14044:	strb	r2, [r1]
   14048:	b	13fdc <__assert_fail@plt+0x2d14>
   1404c:	ldr	r3, [r8, #8]
   14050:	cmp	r3, #0
   14054:	beq	13e38 <__assert_fail@plt+0x2b70>
   14058:	b	13f58 <__assert_fail@plt+0x2c90>
   1405c:	mov	r1, #1
   14060:	str	r3, [fp, #-48]	; 0xffffffd0
   14064:	mov	r9, ip
   14068:	bl	1a618 <argp_parse@@Base+0x2c10>
   1406c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14070:	cmp	r0, #0
   14074:	beq	13fdc <__assert_fail@plt+0x2d14>
   14078:	ldr	r1, [r9, #28]
   1407c:	b	13fc8 <__assert_fail@plt+0x2d00>
   14080:	ldr	r9, [fp, #-44]	; 0xffffffd4
   14084:	mov	r1, #1
   14088:	mov	r0, r9
   1408c:	str	r3, [fp, #-48]	; 0xffffffd0
   14090:	bl	1a618 <argp_parse@@Base+0x2c10>
   14094:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14098:	cmp	r0, #0
   1409c:	beq	13fdc <__assert_fail@plt+0x2d14>
   140a0:	ldr	r1, [r9, #28]
   140a4:	b	14034 <__assert_fail@plt+0x2d6c>
   140a8:	ldr	sl, [fp, #-44]	; 0xffffffd4
   140ac:	mov	r0, sl
   140b0:	bl	1a06c <argp_parse@@Base+0x2664>
   140b4:	ldr	r1, [sl, #28]
   140b8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   140bc:	b	13f98 <__assert_fail@plt+0x2cd0>
   140c0:	mov	r2, r3
   140c4:	ldrb	ip, [fp, #-48]	; 0xffffffd0
   140c8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   140cc:	ldr	r1, [pc, #64]	; 14114 <__assert_fail@plt+0x2e4c>
   140d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   140d4:	strb	ip, [r3]
   140d8:	bl	1a718 <argp_parse@@Base+0x2d10>
   140dc:	ldr	r2, [fp, #-60]	; 0xffffffc4
   140e0:	ldr	r3, [r2, #4]
   140e4:	cmp	r3, #0
   140e8:	str	r3, [fp, #-40]	; 0xffffffd8
   140ec:	beq	13cc4 <__assert_fail@plt+0x29fc>
   140f0:	ldr	r3, [r2]
   140f4:	add	r3, r3, #28
   140f8:	str	r3, [fp, #-64]	; 0xffffffc0
   140fc:	b	13dbc <__assert_fail@plt+0x2af4>
   14100:	andeq	ip, r1, r4, asr #24
   14104:	andeq	ip, r1, r4, lsr ip
   14108:	andeq	ip, r1, r8, lsr #24
   1410c:	andeq	ip, r1, r0, asr ip
   14110:	andeq	ip, r1, ip, lsl ip
   14114:	andeq	ip, r1, r4, lsl ip
   14118:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1411c:	subs	r4, r1, #0
   14120:	sub	sp, sp, #12
   14124:	mov	r8, r0
   14128:	mov	r7, r2
   1412c:	beq	14300 <__assert_fail@plt+0x3038>
   14130:	ldr	r3, [r4, #20]
   14134:	cmp	r3, #0
   14138:	beq	14300 <__assert_fail@plt+0x3038>
   1413c:	ldr	r1, [r2, #16]
   14140:	mov	r0, r4
   14144:	bl	18828 <argp_parse@@Base+0xe20>
   14148:	ldr	r3, [r4, #20]
   1414c:	mov	r1, r8
   14150:	mov	r2, r0
   14154:	ldr	r0, [pc, #628]	; 143d0 <__assert_fail@plt+0x3108>
   14158:	blx	r3
   1415c:	mov	r6, r0
   14160:	cmp	r6, #0
   14164:	beq	142cc <__assert_fail@plt+0x3004>
   14168:	ldrb	r3, [r6]
   1416c:	cmp	r3, #0
   14170:	beq	142c0 <__assert_fail@plt+0x2ff8>
   14174:	ldr	r3, [r7, #8]
   14178:	ldr	r3, [r3]
   1417c:	cmp	r3, #0
   14180:	beq	141a8 <__assert_fail@plt+0x2ee0>
   14184:	ldr	r4, [r7, #4]
   14188:	ldr	r3, [r4, #28]
   1418c:	ldr	r2, [r4, #32]
   14190:	cmp	r3, r2
   14194:	bcs	143b4 <__assert_fail@plt+0x30ec>
   14198:	add	r1, r3, #1
   1419c:	mov	r2, #10
   141a0:	str	r1, [r4, #28]
   141a4:	strb	r2, [r3]
   141a8:	ldr	r4, [r7, #4]
   141ac:	ldr	sl, [pc, #544]	; 143d4 <__assert_fail@plt+0x310c>
   141b0:	ldr	r3, [r4, #28]
   141b4:	ldr	r1, [r4, #24]
   141b8:	ldr	r2, [r4, #16]
   141bc:	sub	r3, r3, r1
   141c0:	cmp	r3, r2
   141c4:	ldr	r5, [sl, #24]
   141c8:	bhi	1438c <__assert_fail@plt+0x30c4>
   141cc:	ldr	r3, [r4, #20]
   141d0:	mov	fp, #32
   141d4:	cmp	r3, #0
   141d8:	subge	r5, r5, r3
   141dc:	mov	r9, #1
   141e0:	cmp	r5, #0
   141e4:	sub	r5, r5, #1
   141e8:	ble	14214 <__assert_fail@plt+0x2f4c>
   141ec:	ldr	r3, [r4, #28]
   141f0:	ldr	r2, [r4, #32]
   141f4:	cmp	r3, r2
   141f8:	bcs	142e4 <__assert_fail@plt+0x301c>
   141fc:	add	r2, r3, #1
   14200:	cmp	r5, #0
   14204:	str	r2, [r4, #28]
   14208:	sub	r5, r5, #1
   1420c:	strb	fp, [r3]
   14210:	bgt	141ec <__assert_fail@plt+0x2f24>
   14214:	ldr	r4, [r7, #4]
   14218:	ldr	r9, [sl, #24]
   1421c:	ldr	r5, [r4, #28]
   14220:	ldr	r3, [r4, #24]
   14224:	ldr	r2, [r4, #16]
   14228:	sub	r3, r5, r3
   1422c:	cmp	r3, r2
   14230:	strls	r9, [r4, #4]
   14234:	movls	fp, r4
   14238:	bhi	14340 <__assert_fail@plt+0x3078>
   1423c:	str	r9, [fp, #12]
   14240:	mov	r0, r6
   14244:	bl	111a8 <strlen@plt>
   14248:	subs	r9, r0, #0
   1424c:	beq	14284 <__assert_fail@plt+0x2fbc>
   14250:	ldr	r2, [r4, #32]
   14254:	add	r3, r5, r9
   14258:	cmp	r2, r3
   1425c:	bcc	14310 <__assert_fail@plt+0x3048>
   14260:	mov	r2, r9
   14264:	mov	r0, r5
   14268:	mov	r1, r6
   1426c:	bl	11088 <memcpy@plt>
   14270:	ldr	r3, [r4, #28]
   14274:	add	r9, r3, r9
   14278:	str	r9, [r4, #28]
   1427c:	ldr	r4, [r7, #4]
   14280:	ldr	r5, [r4, #28]
   14284:	ldr	r3, [r4, #24]
   14288:	ldr	r2, [r4, #16]
   1428c:	sub	r3, r5, r3
   14290:	cmp	r3, r2
   14294:	movls	r9, r4
   14298:	bhi	1432c <__assert_fail@plt+0x3064>
   1429c:	ldr	r2, [r9, #32]
   142a0:	mov	r3, #0
   142a4:	cmp	r2, r5
   142a8:	str	r3, [r4, #4]
   142ac:	bls	14398 <__assert_fail@plt+0x30d0>
   142b0:	add	r2, r5, #1
   142b4:	mov	r3, #10
   142b8:	str	r2, [r9, #28]
   142bc:	strb	r3, [r5]
   142c0:	ldr	r3, [r7, #8]
   142c4:	mov	r2, #1
   142c8:	str	r2, [r3, #4]
   142cc:	cmp	r8, r6
   142d0:	beq	14308 <__assert_fail@plt+0x3040>
   142d4:	mov	r0, r6
   142d8:	add	sp, sp, #12
   142dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   142e0:	b	18984 <argp_parse@@Base+0xf7c>
   142e4:	mov	r1, r9
   142e8:	mov	r0, r4
   142ec:	bl	1a618 <argp_parse@@Base+0x2c10>
   142f0:	cmp	r0, #0
   142f4:	beq	141e0 <__assert_fail@plt+0x2f18>
   142f8:	ldr	r3, [r4, #28]
   142fc:	b	141fc <__assert_fail@plt+0x2f34>
   14300:	mov	r6, r8
   14304:	b	14160 <__assert_fail@plt+0x2e98>
   14308:	add	sp, sp, #12
   1430c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14310:	mov	r1, r9
   14314:	mov	r0, r4
   14318:	bl	1a618 <argp_parse@@Base+0x2c10>
   1431c:	cmp	r0, #0
   14320:	beq	1427c <__assert_fail@plt+0x2fb4>
   14324:	ldr	r5, [r4, #28]
   14328:	b	14260 <__assert_fail@plt+0x2f98>
   1432c:	mov	r0, r4
   14330:	bl	1a06c <argp_parse@@Base+0x2664>
   14334:	ldr	r9, [r7, #4]
   14338:	ldr	r5, [r9, #28]
   1433c:	b	1429c <__assert_fail@plt+0x2fd4>
   14340:	mov	r0, r4
   14344:	str	r9, [sp, #4]
   14348:	bl	1a06c <argp_parse@@Base+0x2664>
   1434c:	ldr	fp, [r7, #4]
   14350:	ldr	r3, [sp, #4]
   14354:	ldr	r9, [sl, #24]
   14358:	ldr	r5, [fp, #28]
   1435c:	ldr	r2, [fp, #24]
   14360:	ldr	r1, [fp, #16]
   14364:	sub	r2, r5, r2
   14368:	cmp	r2, r1
   1436c:	str	r3, [r4, #4]
   14370:	movls	r4, fp
   14374:	bls	1423c <__assert_fail@plt+0x2f74>
   14378:	mov	r0, fp
   1437c:	bl	1a06c <argp_parse@@Base+0x2664>
   14380:	ldr	r4, [r7, #4]
   14384:	ldr	r5, [r4, #28]
   14388:	b	1423c <__assert_fail@plt+0x2f74>
   1438c:	mov	r0, r4
   14390:	bl	1a06c <argp_parse@@Base+0x2664>
   14394:	b	141cc <__assert_fail@plt+0x2f04>
   14398:	mov	r1, #1
   1439c:	mov	r0, r9
   143a0:	bl	1a618 <argp_parse@@Base+0x2c10>
   143a4:	cmp	r0, #0
   143a8:	beq	142c0 <__assert_fail@plt+0x2ff8>
   143ac:	ldr	r5, [r9, #28]
   143b0:	b	142b0 <__assert_fail@plt+0x2fe8>
   143b4:	mov	r1, #1
   143b8:	mov	r0, r4
   143bc:	bl	1a618 <argp_parse@@Base+0x2c10>
   143c0:	cmp	r0, #0
   143c4:	beq	141a8 <__assert_fail@plt+0x2ee0>
   143c8:	ldr	r3, [r4, #28]
   143cc:	b	14198 <__assert_fail@plt+0x2ed0>
   143d0:	andeq	r0, r0, #3
   143d4:	andeq	lr, r2, r8, asr r2
   143d8:	ldr	r3, [r1, #12]
   143dc:	push	{r4, r5, r6, r7, r8, lr}
   143e0:	cmp	r3, #0
   143e4:	mov	r6, r1
   143e8:	mov	r5, r0
   143ec:	beq	144d4 <__assert_fail@plt+0x320c>
   143f0:	ldr	r3, [r1, #8]
   143f4:	ldr	r2, [r1]
   143f8:	ldr	r7, [r3]
   143fc:	ldr	r3, [r3, #4]
   14400:	ldr	r4, [r2, #16]
   14404:	cmp	r3, #0
   14408:	cmpne	r7, #0
   1440c:	beq	14444 <__assert_fail@plt+0x317c>
   14410:	ldr	r2, [r2, #12]
   14414:	ldr	r3, [r7, #12]
   14418:	cmp	r2, r3
   1441c:	beq	14444 <__assert_fail@plt+0x317c>
   14420:	ldr	r8, [r1, #4]
   14424:	ldr	r3, [r8, #28]
   14428:	ldr	r2, [r8, #32]
   1442c:	cmp	r3, r2
   14430:	bcs	1460c <__assert_fail@plt+0x3344>
   14434:	add	r1, r3, #1
   14438:	mov	r2, #10
   1443c:	str	r1, [r8, #28]
   14440:	strb	r2, [r3]
   14444:	cmp	r4, #0
   14448:	beq	14588 <__assert_fail@plt+0x32c0>
   1444c:	ldr	r0, [r4]
   14450:	cmp	r0, #0
   14454:	beq	14588 <__assert_fail@plt+0x32c0>
   14458:	ldrb	r3, [r0]
   1445c:	cmp	r3, #0
   14460:	beq	14588 <__assert_fail@plt+0x32c0>
   14464:	cmp	r7, #0
   14468:	beq	14498 <__assert_fail@plt+0x31d0>
   1446c:	ldr	r3, [r7, #16]
   14470:	cmp	r4, r3
   14474:	beq	14588 <__assert_fail@plt+0x32c0>
   14478:	cmp	r3, #0
   1447c:	beq	14498 <__assert_fail@plt+0x31d0>
   14480:	ldr	r3, [r3, #12]
   14484:	cmp	r3, #0
   14488:	cmpne	r4, r3
   1448c:	bne	14480 <__assert_fail@plt+0x31b8>
   14490:	cmp	r4, r3
   14494:	beq	14588 <__assert_fail@plt+0x32c0>
   14498:	ldr	r3, [r6, #4]
   1449c:	ldr	r1, [r4, #16]
   144a0:	mov	r2, r6
   144a4:	ldr	r7, [r3, #12]
   144a8:	bl	14118 <__assert_fail@plt+0x2e50>
   144ac:	ldr	r8, [r6, #4]
   144b0:	ldr	r3, [r8, #28]
   144b4:	ldr	r1, [r8, #24]
   144b8:	ldr	r2, [r8, #16]
   144bc:	sub	r3, r3, r1
   144c0:	cmp	r3, r2
   144c4:	movls	r4, r8
   144c8:	bhi	145ec <__assert_fail@plt+0x3324>
   144cc:	str	r7, [r8, #12]
   144d0:	b	1459c <__assert_fail@plt+0x32d4>
   144d4:	ldr	r7, [r1, #4]
   144d8:	ldr	r3, [r7, #28]
   144dc:	ldr	r1, [r7, #32]
   144e0:	add	r2, r3, #2
   144e4:	cmp	r1, r2
   144e8:	bcc	1456c <__assert_fail@plt+0x32a4>
   144ec:	ldr	r2, [pc, #308]	; 14628 <__assert_fail@plt+0x3360>
   144f0:	ldrh	r2, [r2]
   144f4:	strh	r2, [r3]
   144f8:	ldr	r4, [r6, #4]
   144fc:	ldr	r3, [r7, #28]
   14500:	add	r3, r3, #2
   14504:	str	r3, [r7, #28]
   14508:	ldr	r1, [r4, #24]
   1450c:	ldr	r3, [r4, #28]
   14510:	ldr	r2, [r4, #16]
   14514:	sub	r3, r3, r1
   14518:	cmp	r3, r2
   1451c:	bhi	145ac <__assert_fail@plt+0x32e4>
   14520:	ldr	r3, [r4, #20]
   14524:	mov	r6, #32
   14528:	cmp	r3, #0
   1452c:	subge	r5, r5, r3
   14530:	mov	r7, #1
   14534:	cmp	r5, #0
   14538:	sub	r5, r5, #1
   1453c:	ble	14568 <__assert_fail@plt+0x32a0>
   14540:	ldr	r3, [r4, #28]
   14544:	ldr	r2, [r4, #32]
   14548:	cmp	r3, r2
   1454c:	bcs	145b8 <__assert_fail@plt+0x32f0>
   14550:	add	r2, r3, #1
   14554:	cmp	r5, #0
   14558:	str	r2, [r4, #28]
   1455c:	sub	r5, r5, #1
   14560:	strb	r6, [r3]
   14564:	bgt	14540 <__assert_fail@plt+0x3278>
   14568:	pop	{r4, r5, r6, r7, r8, pc}
   1456c:	mov	r1, #2
   14570:	mov	r0, r7
   14574:	bl	1a618 <argp_parse@@Base+0x2c10>
   14578:	cmp	r0, #0
   1457c:	beq	145d4 <__assert_fail@plt+0x330c>
   14580:	ldr	r3, [r7, #28]
   14584:	b	144ec <__assert_fail@plt+0x3224>
   14588:	ldr	r4, [r6, #4]
   1458c:	ldr	r3, [r4, #28]
   14590:	ldr	r1, [r4, #24]
   14594:	ldr	r2, [r4, #16]
   14598:	sub	r3, r3, r1
   1459c:	mov	r1, #0
   145a0:	cmp	r3, r2
   145a4:	str	r1, [r6, #12]
   145a8:	bls	14520 <__assert_fail@plt+0x3258>
   145ac:	mov	r0, r4
   145b0:	bl	1a06c <argp_parse@@Base+0x2664>
   145b4:	b	14520 <__assert_fail@plt+0x3258>
   145b8:	mov	r1, r7
   145bc:	mov	r0, r4
   145c0:	bl	1a618 <argp_parse@@Base+0x2c10>
   145c4:	cmp	r0, #0
   145c8:	beq	14534 <__assert_fail@plt+0x326c>
   145cc:	ldr	r3, [r4, #28]
   145d0:	b	14550 <__assert_fail@plt+0x3288>
   145d4:	ldr	r4, [r6, #4]
   145d8:	ldr	r3, [r4, #28]
   145dc:	ldr	r1, [r4, #24]
   145e0:	ldr	r2, [r4, #16]
   145e4:	sub	r3, r3, r1
   145e8:	b	14518 <__assert_fail@plt+0x3250>
   145ec:	mov	r0, r8
   145f0:	bl	1a06c <argp_parse@@Base+0x2664>
   145f4:	ldr	r4, [r6, #4]
   145f8:	ldr	r3, [r4, #28]
   145fc:	ldr	r1, [r4, #24]
   14600:	ldr	r2, [r4, #16]
   14604:	sub	r3, r3, r1
   14608:	b	144cc <__assert_fail@plt+0x3204>
   1460c:	mov	r1, #1
   14610:	mov	r0, r8
   14614:	bl	1a618 <argp_parse@@Base+0x2c10>
   14618:	cmp	r0, #0
   1461c:	beq	14444 <__assert_fail@plt+0x317c>
   14620:	ldr	r3, [r8, #28]
   14624:	b	14434 <__assert_fail@plt+0x316c>
   14628:	andeq	ip, r1, r8, asr ip
   1462c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14630:	sub	sp, sp, #28
   14634:	ldr	r6, [r0, #12]
   14638:	ldr	r7, [r1, #12]
   1463c:	cmp	r6, r7
   14640:	beq	148b8 <__assert_fail@plt+0x35f0>
   14644:	ldr	r8, [r6, #12]
   14648:	ldr	r9, [r7, #12]
   1464c:	mov	r5, r1
   14650:	cmp	r8, r9
   14654:	mov	r4, r0
   14658:	beq	14880 <__assert_fail@plt+0x35b8>
   1465c:	ldr	sl, [r8, #12]
   14660:	ldr	fp, [r9, #12]
   14664:	cmp	sl, fp
   14668:	beq	14920 <__assert_fail@plt+0x3658>
   1466c:	ldr	r3, [sl, #12]
   14670:	ldr	r2, [fp, #12]
   14674:	cmp	r3, r2
   14678:	beq	14954 <__assert_fail@plt+0x368c>
   1467c:	ldr	r1, [r3, #12]
   14680:	ldr	r0, [r2, #12]
   14684:	str	r1, [sp]
   14688:	cmp	r1, r0
   1468c:	str	r0, [sp, #4]
   14690:	beq	148ec <__assert_fail@plt+0x3624>
   14694:	ldr	r1, [r1, #12]
   14698:	ldr	r0, [r0, #12]
   1469c:	str	r1, [sp, #8]
   146a0:	cmp	r1, r0
   146a4:	str	r0, [sp, #12]
   146a8:	beq	14988 <__assert_fail@plt+0x36c0>
   146ac:	ldr	r0, [r1, #12]
   146b0:	ldr	r1, [sp, #12]
   146b4:	ldr	r1, [r1, #12]
   146b8:	cmp	r0, r1
   146bc:	beq	149c8 <__assert_fail@plt+0x3700>
   146c0:	str	r2, [sp, #20]
   146c4:	str	r3, [sp, #16]
   146c8:	bl	1462c <__assert_fail@plt+0x3364>
   146cc:	cmp	r0, #0
   146d0:	bne	14878 <__assert_fail@plt+0x35b0>
   146d4:	ldr	r3, [sp, #12]
   146d8:	ldr	r2, [sp, #20]
   146dc:	ldr	r1, [r3, #8]
   146e0:	ldr	r3, [sp, #8]
   146e4:	mvn	ip, r1
   146e8:	ldr	r0, [r3, #8]
   146ec:	lsr	ip, ip, #31
   146f0:	ldr	r3, [sp, #16]
   146f4:	cmp	ip, r0, lsr #31
   146f8:	subne	r0, r0, r1
   146fc:	subeq	r0, r1, r0
   14700:	cmp	r0, #0
   14704:	bne	14878 <__assert_fail@plt+0x35b0>
   14708:	ldr	r1, [sp, #12]
   1470c:	ldr	r0, [sp, #8]
   14710:	ldr	r1, [r1, #4]
   14714:	ldr	r0, [r0, #4]
   14718:	sub	r0, r1, r0
   1471c:	cmp	r0, #0
   14720:	bne	14878 <__assert_fail@plt+0x35b0>
   14724:	ldr	r1, [sp, #4]
   14728:	ldr	r0, [sp]
   1472c:	ldr	r1, [r1, #8]
   14730:	ldr	r0, [r0, #8]
   14734:	mvn	ip, r1
   14738:	lsr	ip, ip, #31
   1473c:	cmp	ip, r0, lsr #31
   14740:	subne	r0, r0, r1
   14744:	subeq	r0, r1, r0
   14748:	cmp	r0, #0
   1474c:	bne	14878 <__assert_fail@plt+0x35b0>
   14750:	ldr	r1, [sp, #4]
   14754:	ldr	r0, [sp]
   14758:	ldr	r1, [r1, #4]
   1475c:	ldr	r0, [r0, #4]
   14760:	sub	r0, r1, r0
   14764:	cmp	r0, #0
   14768:	bne	14878 <__assert_fail@plt+0x35b0>
   1476c:	ldr	r1, [r2, #8]
   14770:	ldr	r0, [r3, #8]
   14774:	mvn	ip, r1
   14778:	lsr	ip, ip, #31
   1477c:	cmp	ip, r0, lsr #31
   14780:	subne	r0, r0, r1
   14784:	subeq	r0, r1, r0
   14788:	cmp	r0, #0
   1478c:	bne	14878 <__assert_fail@plt+0x35b0>
   14790:	ldr	r2, [r2, #4]
   14794:	ldr	r0, [r3, #4]
   14798:	sub	r0, r2, r0
   1479c:	cmp	r0, #0
   147a0:	bne	14878 <__assert_fail@plt+0x35b0>
   147a4:	ldr	r3, [fp, #8]
   147a8:	ldr	r0, [sl, #8]
   147ac:	mvn	r2, r3
   147b0:	lsr	r2, r2, #31
   147b4:	cmp	r2, r0, lsr #31
   147b8:	subne	r0, r0, r3
   147bc:	subeq	r0, r3, r0
   147c0:	cmp	r0, #0
   147c4:	bne	14878 <__assert_fail@plt+0x35b0>
   147c8:	ldr	r3, [fp, #4]
   147cc:	ldr	r0, [sl, #4]
   147d0:	sub	r0, r3, r0
   147d4:	cmp	r0, #0
   147d8:	bne	14878 <__assert_fail@plt+0x35b0>
   147dc:	ldr	r3, [r9, #8]
   147e0:	ldr	r0, [r8, #8]
   147e4:	mvn	r2, r3
   147e8:	lsr	r2, r2, #31
   147ec:	cmp	r2, r0, lsr #31
   147f0:	subne	r0, r0, r3
   147f4:	subeq	r0, r3, r0
   147f8:	cmp	r0, #0
   147fc:	bne	14878 <__assert_fail@plt+0x35b0>
   14800:	ldr	r3, [r9, #4]
   14804:	ldr	r0, [r8, #4]
   14808:	sub	r0, r3, r0
   1480c:	cmp	r0, #0
   14810:	bne	14878 <__assert_fail@plt+0x35b0>
   14814:	ldr	r3, [r7, #8]
   14818:	ldr	r0, [r6, #8]
   1481c:	mvn	r2, r3
   14820:	lsr	r2, r2, #31
   14824:	cmp	r2, r0, lsr #31
   14828:	subne	r0, r0, r3
   1482c:	subeq	r0, r3, r0
   14830:	cmp	r0, #0
   14834:	bne	14878 <__assert_fail@plt+0x35b0>
   14838:	ldr	r3, [r7, #4]
   1483c:	ldr	r0, [r6, #4]
   14840:	sub	r0, r3, r0
   14844:	cmp	r0, #0
   14848:	bne	14878 <__assert_fail@plt+0x35b0>
   1484c:	ldr	r3, [r5, #8]
   14850:	ldr	r0, [r4, #8]
   14854:	mvn	r2, r3
   14858:	lsr	r2, r2, #31
   1485c:	cmp	r2, r0, lsr #31
   14860:	subne	r0, r0, r3
   14864:	subeq	r0, r3, r0
   14868:	cmp	r0, #0
   1486c:	ldreq	r3, [r5, #4]
   14870:	ldreq	r0, [r4, #4]
   14874:	subeq	r0, r3, r0
   14878:	add	sp, sp, #28
   1487c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14880:	ldr	r3, [r7, #8]
   14884:	ldr	r0, [r6, #8]
   14888:	mvn	r2, r3
   1488c:	ldr	r1, [r7, #4]
   14890:	lsr	r2, r2, #31
   14894:	cmp	r2, r0, lsr #31
   14898:	subne	r0, r0, r3
   1489c:	subeq	r0, r3, r0
   148a0:	ldr	r2, [r6, #4]
   148a4:	cmp	r0, #0
   148a8:	subeq	r0, r1, r2
   148ac:	beq	14844 <__assert_fail@plt+0x357c>
   148b0:	add	sp, sp, #28
   148b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   148b8:	ldr	r2, [r1, #8]
   148bc:	ldr	r3, [r0, #8]
   148c0:	mvn	ip, r2
   148c4:	ldr	lr, [r1, #4]
   148c8:	lsr	ip, ip, #31
   148cc:	cmp	ip, r3, lsr #31
   148d0:	ldr	r1, [r0, #4]
   148d4:	subne	r0, r3, r2
   148d8:	subeq	r0, r2, r3
   148dc:	cmp	r0, #0
   148e0:	subeq	r0, lr, r1
   148e4:	add	sp, sp, #28
   148e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   148ec:	ldr	r1, [r2, #8]
   148f0:	ldr	r0, [r3, #8]
   148f4:	mvn	ip, r1
   148f8:	ldr	r2, [r2, #4]
   148fc:	lsr	ip, ip, #31
   14900:	cmp	ip, r0, lsr #31
   14904:	subne	r0, r0, r1
   14908:	subeq	r0, r1, r0
   1490c:	ldr	r3, [r3, #4]
   14910:	cmp	r0, #0
   14914:	subeq	r0, r2, r3
   14918:	beq	1479c <__assert_fail@plt+0x34d4>
   1491c:	b	14878 <__assert_fail@plt+0x35b0>
   14920:	ldr	r3, [r9, #8]
   14924:	ldr	r0, [r8, #8]
   14928:	mvn	r2, r3
   1492c:	ldr	r1, [r9, #4]
   14930:	lsr	r2, r2, #31
   14934:	cmp	r2, r0, lsr #31
   14938:	subne	r0, r0, r3
   1493c:	subeq	r0, r3, r0
   14940:	ldr	r2, [r8, #4]
   14944:	cmp	r0, #0
   14948:	subeq	r0, r1, r2
   1494c:	beq	1480c <__assert_fail@plt+0x3544>
   14950:	b	14878 <__assert_fail@plt+0x35b0>
   14954:	ldr	r3, [fp, #8]
   14958:	ldr	r0, [sl, #8]
   1495c:	mvn	r2, r3
   14960:	ldr	r1, [fp, #4]
   14964:	lsr	r2, r2, #31
   14968:	cmp	r2, r0, lsr #31
   1496c:	subne	r0, r0, r3
   14970:	subeq	r0, r3, r0
   14974:	ldr	r2, [sl, #4]
   14978:	cmp	r0, #0
   1497c:	subeq	r0, r1, r2
   14980:	beq	147d4 <__assert_fail@plt+0x350c>
   14984:	b	14878 <__assert_fail@plt+0x35b0>
   14988:	ldr	ip, [sp, #4]
   1498c:	ldr	r1, [sp]
   14990:	ldr	lr, [ip, #8]
   14994:	ldr	r0, [r1, #8]
   14998:	mvn	r1, lr
   1499c:	ldr	ip, [ip, #4]
   149a0:	lsr	r1, r1, #31
   149a4:	cmp	r1, r0, lsr #31
   149a8:	ldr	r1, [sp]
   149ac:	subne	r0, r0, lr
   149b0:	subeq	r0, lr, r0
   149b4:	ldr	r1, [r1, #4]
   149b8:	cmp	r0, #0
   149bc:	subeq	r0, ip, r1
   149c0:	beq	14764 <__assert_fail@plt+0x349c>
   149c4:	b	14878 <__assert_fail@plt+0x35b0>
   149c8:	ldr	ip, [sp, #12]
   149cc:	ldr	r1, [sp, #8]
   149d0:	ldr	lr, [ip, #8]
   149d4:	ldr	r0, [r1, #8]
   149d8:	mvn	r1, lr
   149dc:	ldr	ip, [ip, #4]
   149e0:	lsr	r1, r1, #31
   149e4:	cmp	r1, r0, lsr #31
   149e8:	ldr	r1, [sp, #8]
   149ec:	subne	r0, r0, lr
   149f0:	subeq	r0, lr, r0
   149f4:	ldr	r1, [r1, #4]
   149f8:	cmp	r0, #0
   149fc:	subeq	r0, ip, r1
   14a00:	beq	1471c <__assert_fail@plt+0x3454>
   14a04:	b	14878 <__assert_fail@plt+0x35b0>
   14a08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14a0c:	mov	r6, r1
   14a10:	ldr	r4, [r0, #16]
   14a14:	sub	sp, sp, #28
   14a18:	cmp	r4, #0
   14a1c:	movne	r2, r4
   14a20:	bne	14a2c <__assert_fail@plt+0x3764>
   14a24:	b	15054 <__assert_fail@plt+0x3d8c>
   14a28:	mov	r2, r3
   14a2c:	ldr	r3, [r2, #12]
   14a30:	cmp	r3, #0
   14a34:	bne	14a28 <__assert_fail@plt+0x3760>
   14a38:	ldr	r5, [r6, #16]
   14a3c:	ldr	ip, [r2, #8]
   14a40:	cmp	r5, #0
   14a44:	movne	r2, r5
   14a48:	bne	14a54 <__assert_fail@plt+0x378c>
   14a4c:	b	15068 <__assert_fail@plt+0x3da0>
   14a50:	mov	r2, r3
   14a54:	ldr	r3, [r2, #12]
   14a58:	cmp	r3, #0
   14a5c:	bne	14a50 <__assert_fail@plt+0x3788>
   14a60:	ldr	r3, [r2, #8]
   14a64:	mvn	r2, r3
   14a68:	lsr	r2, r2, #31
   14a6c:	cmp	r2, ip, lsr #31
   14a70:	subne	r1, ip, r3
   14a74:	subeq	r1, r3, ip
   14a78:	cmp	r1, #0
   14a7c:	bne	14bf8 <__assert_fail@plt+0x3930>
   14a80:	adds	r1, r5, #0
   14a84:	movne	r1, #1
   14a88:	cmp	r4, #0
   14a8c:	rsbeq	r1, r1, #0
   14a90:	rsbne	r1, r1, #1
   14a94:	cmp	r1, #0
   14a98:	bne	14bf8 <__assert_fail@plt+0x3930>
   14a9c:	cmp	r4, #0
   14aa0:	mov	fp, r0
   14aa4:	beq	14df0 <__assert_fail@plt+0x3b28>
   14aa8:	ldr	r1, [r4, #20]
   14aac:	ldr	r2, [r5, #20]
   14ab0:	cmp	r1, r2
   14ab4:	bgt	14c04 <__assert_fail@plt+0x393c>
   14ab8:	bge	14d9c <__assert_fail@plt+0x3ad4>
   14abc:	ldr	r5, [r5, #12]
   14ac0:	ldr	r3, [r5, #20]
   14ac4:	cmp	r1, r3
   14ac8:	blt	14abc <__assert_fail@plt+0x37f4>
   14acc:	ldr	r6, [r4, #12]
   14ad0:	ldr	r7, [r5, #12]
   14ad4:	cmp	r6, r7
   14ad8:	beq	152d8 <__assert_fail@plt+0x4010>
   14adc:	ldr	r8, [r6, #12]
   14ae0:	ldr	r9, [r7, #12]
   14ae4:	cmp	r8, r9
   14ae8:	beq	15210 <__assert_fail@plt+0x3f48>
   14aec:	ldr	sl, [r8, #12]
   14af0:	ldr	fp, [r9, #12]
   14af4:	cmp	sl, fp
   14af8:	beq	15340 <__assert_fail@plt+0x4078>
   14afc:	ldr	r0, [sl, #12]
   14b00:	ldr	r1, [fp, #12]
   14b04:	cmp	r0, r1
   14b08:	beq	153ec <__assert_fail@plt+0x4124>
   14b0c:	bl	1462c <__assert_fail@plt+0x3364>
   14b10:	subs	r1, r0, #0
   14b14:	bne	14bf8 <__assert_fail@plt+0x3930>
   14b18:	ldr	r1, [fp, #8]
   14b1c:	ldr	r3, [sl, #8]
   14b20:	mvn	r2, r1
   14b24:	lsr	r2, r2, #31
   14b28:	cmp	r2, r3, lsr #31
   14b2c:	subne	r1, r3, r1
   14b30:	subeq	r1, r1, r3
   14b34:	cmp	r1, #0
   14b38:	bne	14bf8 <__assert_fail@plt+0x3930>
   14b3c:	ldr	r1, [fp, #4]
   14b40:	ldr	r3, [sl, #4]
   14b44:	sub	r1, r1, r3
   14b48:	cmp	r1, #0
   14b4c:	bne	14bf8 <__assert_fail@plt+0x3930>
   14b50:	ldr	r1, [r9, #8]
   14b54:	ldr	r3, [r8, #8]
   14b58:	mvn	r2, r1
   14b5c:	lsr	r2, r2, #31
   14b60:	cmp	r2, r3, lsr #31
   14b64:	subne	r1, r3, r1
   14b68:	subeq	r1, r1, r3
   14b6c:	cmp	r1, #0
   14b70:	bne	14bf8 <__assert_fail@plt+0x3930>
   14b74:	ldr	r1, [r9, #4]
   14b78:	ldr	r3, [r8, #4]
   14b7c:	sub	r1, r1, r3
   14b80:	cmp	r1, #0
   14b84:	bne	14bf8 <__assert_fail@plt+0x3930>
   14b88:	ldr	r1, [r7, #8]
   14b8c:	ldr	r3, [r6, #8]
   14b90:	mvn	r2, r1
   14b94:	lsr	r2, r2, #31
   14b98:	cmp	r2, r3, lsr #31
   14b9c:	subne	r1, r3, r1
   14ba0:	subeq	r1, r1, r3
   14ba4:	cmp	r1, #0
   14ba8:	bne	14bf8 <__assert_fail@plt+0x3930>
   14bac:	ldr	r1, [r7, #4]
   14bb0:	ldr	r3, [r6, #4]
   14bb4:	sub	r1, r1, r3
   14bb8:	cmp	r1, #0
   14bbc:	bne	14bf8 <__assert_fail@plt+0x3930>
   14bc0:	ldr	r1, [r5, #8]
   14bc4:	ldr	r3, [r4, #8]
   14bc8:	mvn	r2, r1
   14bcc:	lsr	r2, r2, #31
   14bd0:	cmp	r2, r3, lsr #31
   14bd4:	subne	r1, r3, r1
   14bd8:	subeq	r1, r1, r3
   14bdc:	cmp	r1, #0
   14be0:	bne	14bf8 <__assert_fail@plt+0x3930>
   14be4:	ldr	r1, [r5, #4]
   14be8:	ldr	r3, [r4, #4]
   14bec:	sub	r1, r1, r3
   14bf0:	cmp	r1, #0
   14bf4:	mvneq	r1, #0
   14bf8:	mov	r0, r1
   14bfc:	add	sp, sp, #28
   14c00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14c04:	ldr	r4, [r4, #12]
   14c08:	ldr	r3, [r4, #20]
   14c0c:	cmp	r2, r3
   14c10:	blt	14c04 <__assert_fail@plt+0x393c>
   14c14:	ldr	r6, [r4, #12]
   14c18:	ldr	r7, [r5, #12]
   14c1c:	cmp	r6, r7
   14c20:	beq	15278 <__assert_fail@plt+0x3fb0>
   14c24:	ldr	r8, [r6, #12]
   14c28:	ldr	r9, [r7, #12]
   14c2c:	cmp	r8, r9
   14c30:	beq	1530c <__assert_fail@plt+0x4044>
   14c34:	ldr	sl, [r8, #12]
   14c38:	ldr	fp, [r9, #12]
   14c3c:	cmp	sl, fp
   14c40:	beq	15244 <__assert_fail@plt+0x3f7c>
   14c44:	ldr	r3, [sl, #12]
   14c48:	ldr	r2, [fp, #12]
   14c4c:	cmp	r3, r2
   14c50:	beq	15374 <__assert_fail@plt+0x40ac>
   14c54:	ldr	r0, [r3, #12]
   14c58:	ldr	r1, [r2, #12]
   14c5c:	cmp	r0, r1
   14c60:	beq	15420 <__assert_fail@plt+0x4158>
   14c64:	str	r2, [sp, #8]
   14c68:	str	r3, [sp, #4]
   14c6c:	bl	1462c <__assert_fail@plt+0x3364>
   14c70:	subs	r1, r0, #0
   14c74:	bne	14bf8 <__assert_fail@plt+0x3930>
   14c78:	ldr	r2, [sp, #8]
   14c7c:	ldr	r3, [sp, #4]
   14c80:	ldr	r0, [r2, #8]
   14c84:	ldr	r1, [r3, #8]
   14c88:	mvn	ip, r0
   14c8c:	lsr	ip, ip, #31
   14c90:	cmp	ip, r1, lsr #31
   14c94:	subne	r1, r1, r0
   14c98:	subeq	r1, r0, r1
   14c9c:	cmp	r1, #0
   14ca0:	bne	14bf8 <__assert_fail@plt+0x3930>
   14ca4:	ldr	r1, [r2, #4]
   14ca8:	ldr	r3, [r3, #4]
   14cac:	sub	r1, r1, r3
   14cb0:	cmp	r1, #0
   14cb4:	bne	14bf8 <__assert_fail@plt+0x3930>
   14cb8:	ldr	r1, [fp, #8]
   14cbc:	ldr	r3, [sl, #8]
   14cc0:	mvn	r2, r1
   14cc4:	lsr	r2, r2, #31
   14cc8:	cmp	r2, r3, lsr #31
   14ccc:	subne	r1, r3, r1
   14cd0:	subeq	r1, r1, r3
   14cd4:	cmp	r1, #0
   14cd8:	bne	14bf8 <__assert_fail@plt+0x3930>
   14cdc:	ldr	r1, [fp, #4]
   14ce0:	ldr	r3, [sl, #4]
   14ce4:	sub	r1, r1, r3
   14ce8:	cmp	r1, #0
   14cec:	bne	14bf8 <__assert_fail@plt+0x3930>
   14cf0:	ldr	r1, [r9, #8]
   14cf4:	ldr	r3, [r8, #8]
   14cf8:	mvn	r2, r1
   14cfc:	lsr	r2, r2, #31
   14d00:	cmp	r2, r3, lsr #31
   14d04:	subne	r1, r3, r1
   14d08:	subeq	r1, r1, r3
   14d0c:	cmp	r1, #0
   14d10:	bne	14bf8 <__assert_fail@plt+0x3930>
   14d14:	ldr	r1, [r9, #4]
   14d18:	ldr	r3, [r8, #4]
   14d1c:	sub	r1, r1, r3
   14d20:	cmp	r1, #0
   14d24:	bne	14bf8 <__assert_fail@plt+0x3930>
   14d28:	ldr	r1, [r7, #8]
   14d2c:	ldr	r3, [r6, #8]
   14d30:	mvn	r2, r1
   14d34:	lsr	r2, r2, #31
   14d38:	cmp	r2, r3, lsr #31
   14d3c:	subne	r1, r3, r1
   14d40:	subeq	r1, r1, r3
   14d44:	cmp	r1, #0
   14d48:	bne	14bf8 <__assert_fail@plt+0x3930>
   14d4c:	ldr	r1, [r7, #4]
   14d50:	ldr	r3, [r6, #4]
   14d54:	sub	r1, r1, r3
   14d58:	cmp	r1, #0
   14d5c:	bne	14bf8 <__assert_fail@plt+0x3930>
   14d60:	ldr	r1, [r5, #8]
   14d64:	ldr	r3, [r4, #8]
   14d68:	mvn	r2, r1
   14d6c:	lsr	r2, r2, #31
   14d70:	cmp	r2, r3, lsr #31
   14d74:	subne	r1, r3, r1
   14d78:	subeq	r1, r1, r3
   14d7c:	cmp	r1, #0
   14d80:	bne	14bf8 <__assert_fail@plt+0x3930>
   14d84:	ldr	r1, [r5, #4]
   14d88:	ldr	r3, [r4, #4]
   14d8c:	sub	r1, r1, r3
   14d90:	cmp	r1, #0
   14d94:	moveq	r1, #1
   14d98:	b	14bf8 <__assert_fail@plt+0x3930>
   14d9c:	ldr	r0, [r4, #12]
   14da0:	ldr	r1, [r5, #12]
   14da4:	cmp	r0, r1
   14da8:	beq	153a8 <__assert_fail@plt+0x40e0>
   14dac:	bl	1462c <__assert_fail@plt+0x3364>
   14db0:	subs	r1, r0, #0
   14db4:	bne	14bf8 <__assert_fail@plt+0x3930>
   14db8:	ldr	r1, [r5, #8]
   14dbc:	ldr	r3, [r4, #8]
   14dc0:	mvn	r2, r1
   14dc4:	lsr	r2, r2, #31
   14dc8:	cmp	r2, r3, lsr #31
   14dcc:	subne	r1, r3, r1
   14dd0:	subeq	r1, r1, r3
   14dd4:	cmp	r1, #0
   14dd8:	bne	14bf8 <__assert_fail@plt+0x3930>
   14ddc:	ldr	r1, [r5, #4]
   14de0:	ldr	r3, [r4, #4]
   14de4:	sub	r1, r1, r3
   14de8:	cmp	r1, #0
   14dec:	bne	14bf8 <__assert_fail@plt+0x3930>
   14df0:	ldr	r1, [r6, #12]
   14df4:	ldr	r3, [fp, #12]
   14df8:	mvn	r2, r1
   14dfc:	lsr	r2, r2, #31
   14e00:	cmp	r2, r3, lsr #31
   14e04:	subne	r1, r3, r1
   14e08:	subeq	r1, r1, r3
   14e0c:	cmp	r1, #0
   14e10:	bne	14bf8 <__assert_fail@plt+0x3930>
   14e14:	ldm	fp, {r8, r9}
   14e18:	cmp	r9, #0
   14e1c:	beq	15454 <__assert_fail@plt+0x418c>
   14e20:	add	r3, r8, #24
   14e24:	mov	r2, r9
   14e28:	ldr	r4, [r3, #-24]	; 0xffffffe8
   14e2c:	cmp	r4, #0
   14e30:	beq	14e40 <__assert_fail@plt+0x3b78>
   14e34:	ldr	r0, [r3, #-12]
   14e38:	tst	r0, #2
   14e3c:	beq	14e50 <__assert_fail@plt+0x3b88>
   14e40:	subs	r2, r2, #1
   14e44:	add	r3, r3, #24
   14e48:	bne	14e28 <__assert_fail@plt+0x3b60>
   14e4c:	mov	r4, r2
   14e50:	ldm	r6, {r7, sl}
   14e54:	cmp	sl, #0
   14e58:	beq	1545c <__assert_fail@plt+0x4194>
   14e5c:	add	r3, r7, #24
   14e60:	mov	r2, sl
   14e64:	ldr	r5, [r3, #-24]	; 0xffffffe8
   14e68:	cmp	r5, #0
   14e6c:	beq	14e7c <__assert_fail@plt+0x3bb4>
   14e70:	ldr	r0, [r3, #-12]
   14e74:	tst	r0, #2
   14e78:	beq	14e8c <__assert_fail@plt+0x3bc4>
   14e7c:	subs	r2, r2, #1
   14e80:	add	r3, r3, #24
   14e84:	bne	14e64 <__assert_fail@plt+0x3b9c>
   14e88:	mov	r5, r2
   14e8c:	ldr	r3, [r8, #12]
   14e90:	tst	r3, #8
   14e94:	beq	14f00 <__assert_fail@plt+0x3c38>
   14e98:	cmp	r4, #0
   14e9c:	beq	14f00 <__assert_fail@plt+0x3c38>
   14ea0:	str	r1, [sp, #4]
   14ea4:	bl	11184 <__ctype_b_loc@plt>
   14ea8:	ldr	r1, [sp, #4]
   14eac:	mov	ip, r4
   14eb0:	ldr	r0, [r0]
   14eb4:	ldrb	r2, [ip]
   14eb8:	mov	r4, ip
   14ebc:	add	ip, ip, #1
   14ec0:	lsl	r3, r2, #1
   14ec4:	ldrh	r3, [r0, r3]
   14ec8:	tst	r3, #8192	; 0x2000
   14ecc:	bne	14eb4 <__assert_fail@plt+0x3bec>
   14ed0:	cmp	r2, #0
   14ed4:	bne	14ef0 <__assert_fail@plt+0x3c28>
   14ed8:	b	151fc <__assert_fail@plt+0x3f34>
   14edc:	ldrb	r3, [r4, #1]!
   14ee0:	cmp	r3, #0
   14ee4:	lsl	r3, r3, #1
   14ee8:	beq	14ef8 <__assert_fail@plt+0x3c30>
   14eec:	ldrh	r3, [r0, r3]
   14ef0:	tst	r3, #8
   14ef4:	beq	14edc <__assert_fail@plt+0x3c14>
   14ef8:	cmp	r2, #45	; 0x2d
   14efc:	bne	151fc <__assert_fail@plt+0x3f34>
   14f00:	ldr	r3, [r7, #12]
   14f04:	tst	r3, #8
   14f08:	beq	14f94 <__assert_fail@plt+0x3ccc>
   14f0c:	cmp	r5, #0
   14f10:	movne	r2, r1
   14f14:	beq	14f94 <__assert_fail@plt+0x3ccc>
   14f18:	str	r1, [sp, #8]
   14f1c:	str	r2, [sp, #4]
   14f20:	bl	11184 <__ctype_b_loc@plt>
   14f24:	ldr	r2, [sp, #4]
   14f28:	ldr	r1, [sp, #8]
   14f2c:	mov	r3, r5
   14f30:	ldr	ip, [r0]
   14f34:	ldrb	r0, [r3]
   14f38:	mov	r5, r3
   14f3c:	add	r3, r3, #1
   14f40:	lsl	lr, r0, #1
   14f44:	ldrh	lr, [ip, lr]
   14f48:	tst	lr, #8192	; 0x2000
   14f4c:	bne	14f34 <__assert_fail@plt+0x3c6c>
   14f50:	cmp	r0, #0
   14f54:	beq	14f80 <__assert_fail@plt+0x3cb8>
   14f58:	tst	lr, #8
   14f5c:	beq	14f70 <__assert_fail@plt+0x3ca8>
   14f60:	b	14f80 <__assert_fail@plt+0x3cb8>
   14f64:	ldrh	r3, [ip, r3]
   14f68:	tst	r3, #8
   14f6c:	bne	14f80 <__assert_fail@plt+0x3cb8>
   14f70:	ldrb	r3, [r5, #1]!
   14f74:	cmp	r3, #0
   14f78:	lsl	r3, r3, #1
   14f7c:	bne	14f64 <__assert_fail@plt+0x3c9c>
   14f80:	cmp	r0, #45	; 0x2d
   14f84:	subne	r2, r2, #1
   14f88:	cmp	r2, #0
   14f8c:	movne	r1, r2
   14f90:	bne	14bf8 <__assert_fail@plt+0x3930>
   14f94:	ldr	r3, [fp, #8]
   14f98:	cmp	r9, #0
   14f9c:	mov	r2, r3
   14fa0:	beq	15464 <__assert_fail@plt+0x419c>
   14fa4:	str	r7, [sp, #16]
   14fa8:	str	r6, [sp, #20]
   14fac:	mov	r3, #1
   14fb0:	str	r4, [sp, #8]
   14fb4:	str	r5, [sp, #12]
   14fb8:	mov	r7, r1
   14fbc:	mov	r6, r2
   14fc0:	b	14fdc <__assert_fail@plt+0x3d14>
   14fc4:	subs	r9, r9, #1
   14fc8:	moveq	ip, #0
   14fcc:	andne	ip, ip, #1
   14fd0:	cmp	ip, #0
   14fd4:	add	r8, r8, #24
   14fd8:	beq	15070 <__assert_fail@plt+0x3da8>
   14fdc:	ldr	r4, [r8, #12]
   14fe0:	mov	ip, r3
   14fe4:	ands	fp, r4, #8
   14fe8:	movne	fp, r7
   14fec:	bne	14fc4 <__assert_fail@plt+0x3cfc>
   14ff0:	ldr	r5, [r8, #4]
   14ff4:	sub	r0, r5, #1
   14ff8:	cmp	r0, #254	; 0xfe
   14ffc:	bhi	14fc4 <__assert_fail@plt+0x3cfc>
   15000:	str	r3, [sp, #4]
   15004:	bl	11184 <__ctype_b_loc@plt>
   15008:	lsl	lr, r5, #1
   1500c:	ldr	r3, [sp, #4]
   15010:	mov	ip, r3
   15014:	ldr	r0, [r0]
   15018:	ldrh	r0, [r0, lr]
   1501c:	tst	r0, #16384	; 0x4000
   15020:	beq	14fc4 <__assert_fail@plt+0x3cfc>
   15024:	ldrb	r0, [r6]
   15028:	mov	ip, r3
   1502c:	cmp	r5, r0
   15030:	bne	14fc4 <__assert_fail@plt+0x3cfc>
   15034:	and	r4, r4, #10
   15038:	cmp	r4, #0
   1503c:	moveq	fp, r5
   15040:	movne	fp, #0
   15044:	add	r6, r6, #1
   15048:	movne	ip, #1
   1504c:	moveq	ip, #0
   15050:	b	14fc4 <__assert_fail@plt+0x3cfc>
   15054:	ldr	r5, [r6, #16]
   15058:	ldr	ip, [r0, #12]
   1505c:	cmp	r5, #0
   15060:	movne	r2, r5
   15064:	bne	14a54 <__assert_fail@plt+0x378c>
   15068:	ldr	r3, [r6, #12]
   1506c:	b	14a64 <__assert_fail@plt+0x379c>
   15070:	mov	r3, fp
   15074:	ldr	r6, [sp, #20]
   15078:	uxtb	r3, r3
   1507c:	cmp	sl, #0
   15080:	str	fp, [sp, #4]
   15084:	mov	r1, r7
   15088:	ldr	r4, [sp, #8]
   1508c:	ldr	r7, [sp, #16]
   15090:	ldr	r5, [sp, #12]
   15094:	ldr	fp, [r6, #8]
   15098:	str	r3, [sp, #16]
   1509c:	beq	152ac <__assert_fail@plt+0x3fe4>
   150a0:	str	r4, [sp, #8]
   150a4:	mov	r8, #1
   150a8:	str	r5, [sp, #12]
   150ac:	mov	r4, r1
   150b0:	b	150cc <__assert_fail@plt+0x3e04>
   150b4:	subs	sl, sl, #1
   150b8:	moveq	r3, #0
   150bc:	andne	r3, r3, #1
   150c0:	cmp	r3, #0
   150c4:	add	r7, r7, #24
   150c8:	beq	15138 <__assert_fail@plt+0x3e70>
   150cc:	ldr	r6, [r7, #12]
   150d0:	mov	r3, r8
   150d4:	ands	r9, r6, #8
   150d8:	movne	r9, r4
   150dc:	bne	150b4 <__assert_fail@plt+0x3dec>
   150e0:	ldr	r5, [r7, #4]
   150e4:	sub	r0, r5, #1
   150e8:	cmp	r0, #254	; 0xfe
   150ec:	bhi	150b4 <__assert_fail@plt+0x3dec>
   150f0:	bl	11184 <__ctype_b_loc@plt>
   150f4:	lsl	ip, r5, #1
   150f8:	mov	r3, r8
   150fc:	ldr	r0, [r0]
   15100:	ldrh	r0, [r0, ip]
   15104:	tst	r0, #16384	; 0x4000
   15108:	beq	150b4 <__assert_fail@plt+0x3dec>
   1510c:	ldrb	r0, [fp]
   15110:	mov	r3, r8
   15114:	cmp	r5, r0
   15118:	bne	150b4 <__assert_fail@plt+0x3dec>
   1511c:	and	r6, r6, #2
   15120:	cmp	r6, #0
   15124:	moveq	r9, r5
   15128:	add	fp, fp, #1
   1512c:	movne	r3, #1
   15130:	moveq	r3, #0
   15134:	b	150b4 <__assert_fail@plt+0x3dec>
   15138:	mov	r1, r4
   1513c:	ldmib	sp, {r3, r4}
   15140:	ldr	r5, [sp, #12]
   15144:	uxtb	r6, r9
   15148:	cmp	r3, #0
   1514c:	beq	151e8 <__assert_fail@plt+0x3f20>
   15150:	ldr	r3, [sp, #16]
   15154:	mov	r7, r3
   15158:	lsl	r8, r3, #2
   1515c:	cmp	r9, #0
   15160:	beq	152c4 <__assert_fail@plt+0x3ffc>
   15164:	lsl	sl, r6, #2
   15168:	bl	11160 <__ctype_tolower_loc@plt>
   1516c:	ldr	r3, [r0]
   15170:	ldr	r1, [r3, r8]
   15174:	ldr	r3, [r3, sl]
   15178:	subs	r1, r1, r3
   1517c:	bne	14bf8 <__assert_fail@plt+0x3930>
   15180:	subs	r1, r6, r7
   15184:	bne	14bf8 <__assert_fail@plt+0x3930>
   15188:	adds	r1, r9, #0
   1518c:	ldr	r3, [sp, #4]
   15190:	movne	r1, #1
   15194:	cmp	r3, #0
   15198:	rsbeq	r1, r1, #0
   1519c:	rsbne	r1, r1, #1
   151a0:	cmp	r1, #0
   151a4:	bne	14bf8 <__assert_fail@plt+0x3930>
   151a8:	cmp	r3, #0
   151ac:	bne	14bf8 <__assert_fail@plt+0x3930>
   151b0:	adds	r1, r5, #0
   151b4:	movne	r1, #1
   151b8:	cmp	r4, #0
   151bc:	rsbeq	r1, r1, #0
   151c0:	rsbne	r1, r1, #1
   151c4:	cmp	r1, #0
   151c8:	bne	14bf8 <__assert_fail@plt+0x3930>
   151cc:	cmp	r4, #0
   151d0:	beq	14bf8 <__assert_fail@plt+0x3930>
   151d4:	mov	r1, r5
   151d8:	mov	r0, r4
   151dc:	add	sp, sp, #28
   151e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   151e4:	b	110e8 <strcasecmp@plt>
   151e8:	cmp	r4, #0
   151ec:	beq	15490 <__assert_fail@plt+0x41c8>
   151f0:	ldrb	r7, [r4]
   151f4:	lsl	r8, r7, #2
   151f8:	b	1515c <__assert_fail@plt+0x3e94>
   151fc:	ldr	r3, [r7, #12]
   15200:	tst	r3, #8
   15204:	bne	153dc <__assert_fail@plt+0x4114>
   15208:	mov	r1, #1
   1520c:	b	14bf8 <__assert_fail@plt+0x3930>
   15210:	ldr	r1, [r7, #8]
   15214:	ldr	r3, [r6, #8]
   15218:	mvn	r2, r1
   1521c:	ldr	r0, [r7, #4]
   15220:	lsr	r2, r2, #31
   15224:	cmp	r2, r3, lsr #31
   15228:	subne	r1, r3, r1
   1522c:	subeq	r1, r1, r3
   15230:	ldr	r2, [r6, #4]
   15234:	cmp	r1, #0
   15238:	subeq	r1, r0, r2
   1523c:	beq	14bb8 <__assert_fail@plt+0x38f0>
   15240:	b	14bf8 <__assert_fail@plt+0x3930>
   15244:	ldr	r1, [r9, #8]
   15248:	ldr	r3, [r8, #8]
   1524c:	mvn	r2, r1
   15250:	ldr	r0, [r9, #4]
   15254:	lsr	r2, r2, #31
   15258:	cmp	r2, r3, lsr #31
   1525c:	subne	r1, r3, r1
   15260:	subeq	r1, r1, r3
   15264:	ldr	r2, [r8, #4]
   15268:	cmp	r1, #0
   1526c:	subeq	r1, r0, r2
   15270:	beq	14d20 <__assert_fail@plt+0x3a58>
   15274:	b	14bf8 <__assert_fail@plt+0x3930>
   15278:	ldr	r1, [r5, #8]
   1527c:	ldr	r3, [r4, #8]
   15280:	mvn	r2, r1
   15284:	ldr	r0, [r5, #4]
   15288:	lsr	r2, r2, #31
   1528c:	cmp	r2, r3, lsr #31
   15290:	subne	r1, r3, r1
   15294:	subeq	r1, r1, r3
   15298:	ldr	r2, [r4, #4]
   1529c:	cmp	r1, #0
   152a0:	subeq	r1, r0, r2
   152a4:	beq	14d90 <__assert_fail@plt+0x3ac8>
   152a8:	b	14bf8 <__assert_fail@plt+0x3930>
   152ac:	ldr	r3, [sp, #4]
   152b0:	cmp	r3, #0
   152b4:	beq	1549c <__assert_fail@plt+0x41d4>
   152b8:	ldr	r3, [sp, #16]
   152bc:	mov	r7, r3
   152c0:	lsl	r8, r3, #2
   152c4:	cmp	r5, #0
   152c8:	beq	15480 <__assert_fail@plt+0x41b8>
   152cc:	ldrb	r6, [r5]
   152d0:	mov	r9, r1
   152d4:	b	15164 <__assert_fail@plt+0x3e9c>
   152d8:	ldr	r1, [r5, #8]
   152dc:	ldr	r3, [r4, #8]
   152e0:	mvn	r2, r1
   152e4:	ldr	r0, [r5, #4]
   152e8:	lsr	r2, r2, #31
   152ec:	cmp	r2, r3, lsr #31
   152f0:	subne	r1, r3, r1
   152f4:	subeq	r1, r1, r3
   152f8:	ldr	r2, [r4, #4]
   152fc:	cmp	r1, #0
   15300:	subeq	r1, r0, r2
   15304:	beq	14bf0 <__assert_fail@plt+0x3928>
   15308:	b	14bf8 <__assert_fail@plt+0x3930>
   1530c:	ldr	r1, [r7, #8]
   15310:	ldr	r3, [r6, #8]
   15314:	mvn	r2, r1
   15318:	ldr	r0, [r7, #4]
   1531c:	lsr	r2, r2, #31
   15320:	cmp	r2, r3, lsr #31
   15324:	subne	r1, r3, r1
   15328:	subeq	r1, r1, r3
   1532c:	ldr	r2, [r6, #4]
   15330:	cmp	r1, #0
   15334:	subeq	r1, r0, r2
   15338:	beq	14d58 <__assert_fail@plt+0x3a90>
   1533c:	b	14bf8 <__assert_fail@plt+0x3930>
   15340:	ldr	r1, [r9, #8]
   15344:	ldr	r3, [r8, #8]
   15348:	mvn	r2, r1
   1534c:	ldr	r0, [r9, #4]
   15350:	lsr	r2, r2, #31
   15354:	cmp	r2, r3, lsr #31
   15358:	subne	r1, r3, r1
   1535c:	subeq	r1, r1, r3
   15360:	ldr	r2, [r8, #4]
   15364:	cmp	r1, #0
   15368:	subeq	r1, r0, r2
   1536c:	beq	14b80 <__assert_fail@plt+0x38b8>
   15370:	b	14bf8 <__assert_fail@plt+0x3930>
   15374:	ldr	r1, [fp, #8]
   15378:	ldr	r3, [sl, #8]
   1537c:	mvn	r2, r1
   15380:	ldr	r0, [fp, #4]
   15384:	lsr	r2, r2, #31
   15388:	cmp	r2, r3, lsr #31
   1538c:	subne	r1, r3, r1
   15390:	subeq	r1, r1, r3
   15394:	ldr	r2, [sl, #4]
   15398:	cmp	r1, #0
   1539c:	subeq	r1, r0, r2
   153a0:	beq	14ce8 <__assert_fail@plt+0x3a20>
   153a4:	b	14bf8 <__assert_fail@plt+0x3930>
   153a8:	ldr	r1, [r5, #8]
   153ac:	ldr	r3, [r4, #8]
   153b0:	mvn	r2, r1
   153b4:	ldr	r0, [r5, #4]
   153b8:	lsr	r2, r2, #31
   153bc:	cmp	r2, r3, lsr #31
   153c0:	subne	r1, r3, r1
   153c4:	subeq	r1, r1, r3
   153c8:	ldr	r2, [r4, #4]
   153cc:	cmp	r1, #0
   153d0:	subeq	r1, r0, r2
   153d4:	beq	14de8 <__assert_fail@plt+0x3b20>
   153d8:	b	14bf8 <__assert_fail@plt+0x3930>
   153dc:	cmp	r5, #0
   153e0:	beq	15208 <__assert_fail@plt+0x3f40>
   153e4:	mov	r2, #1
   153e8:	b	14f18 <__assert_fail@plt+0x3c50>
   153ec:	ldr	r1, [fp, #8]
   153f0:	ldr	r3, [sl, #8]
   153f4:	mvn	r2, r1
   153f8:	ldr	r0, [fp, #4]
   153fc:	lsr	r2, r2, #31
   15400:	cmp	r2, r3, lsr #31
   15404:	subne	r1, r3, r1
   15408:	subeq	r1, r1, r3
   1540c:	ldr	r2, [sl, #4]
   15410:	cmp	r1, #0
   15414:	subeq	r1, r0, r2
   15418:	beq	14b48 <__assert_fail@plt+0x3880>
   1541c:	b	14bf8 <__assert_fail@plt+0x3930>
   15420:	ldr	r0, [r2, #8]
   15424:	ldr	r1, [r3, #8]
   15428:	mvn	ip, r0
   1542c:	ldr	r2, [r2, #4]
   15430:	lsr	ip, ip, #31
   15434:	cmp	ip, r1, lsr #31
   15438:	subne	r1, r1, r0
   1543c:	subeq	r1, r0, r1
   15440:	ldr	r3, [r3, #4]
   15444:	cmp	r1, #0
   15448:	subeq	r1, r2, r3
   1544c:	beq	14cb0 <__assert_fail@plt+0x39e8>
   15450:	b	14bf8 <__assert_fail@plt+0x3930>
   15454:	mov	r4, r1
   15458:	b	14e50 <__assert_fail@plt+0x3b88>
   1545c:	mov	r5, sl
   15460:	b	14e8c <__assert_fail@plt+0x3bc4>
   15464:	cmp	sl, #0
   15468:	ldr	fp, [r6, #8]
   1546c:	streq	r1, [sp, #4]
   15470:	beq	1549c <__assert_fail@plt+0x41d4>
   15474:	str	r9, [sp, #16]
   15478:	str	r1, [sp, #4]
   1547c:	b	150a0 <__assert_fail@plt+0x3dd8>
   15480:	mov	r9, r1
   15484:	mov	sl, r5
   15488:	mov	r6, r5
   1548c:	b	15168 <__assert_fail@plt+0x3ea0>
   15490:	mov	r8, r4
   15494:	mov	r7, r4
   15498:	b	1515c <__assert_fail@plt+0x3e94>
   1549c:	cmp	r4, #0
   154a0:	moveq	r8, r4
   154a4:	moveq	r7, r4
   154a8:	beq	152c4 <__assert_fail@plt+0x3ffc>
   154ac:	mov	r9, r1
   154b0:	mov	r6, #0
   154b4:	b	151f0 <__assert_fail@plt+0x3f28>

000154b8 <argp_failure@@Base>:
   154b8:	push	{r3}		; (str r3, [sp, #-4]!)
   154bc:	push	{r4, r5, r6, r7, lr}
   154c0:	subs	r5, r0, #0
   154c4:	sub	sp, sp, #200	; 0xc8
   154c8:	mov	r7, r1
   154cc:	mov	r6, r2
   154d0:	beq	15620 <argp_failure@@Base+0x168>
   154d4:	ldr	r3, [r5, #16]
   154d8:	tst	r3, #2
   154dc:	bne	15610 <argp_failure@@Base+0x158>
   154e0:	ldr	r4, [r5, #44]	; 0x2c
   154e4:	cmp	r4, #0
   154e8:	beq	15610 <argp_failure@@Base+0x158>
   154ec:	mov	r0, r4
   154f0:	bl	1125c <flockfile@plt>
   154f4:	ldr	r0, [r5, #40]	; 0x28
   154f8:	mov	r1, r4
   154fc:	bl	10fec <fputs_unlocked@plt>
   15500:	ldr	r3, [sp, #220]	; 0xdc
   15504:	cmp	r3, #0
   15508:	beq	15564 <argp_failure@@Base+0xac>
   1550c:	ldr	r3, [r4, #20]
   15510:	ldr	r1, [r4, #24]
   15514:	add	r2, sp, #224	; 0xe0
   15518:	cmp	r3, r1
   1551c:	str	r2, [sp]
   15520:	addcc	r1, r3, #1
   15524:	movcc	r2, #58	; 0x3a
   15528:	strcc	r1, [r4, #20]
   1552c:	strbcc	r2, [r3]
   15530:	bcs	1566c <argp_failure@@Base+0x1b4>
   15534:	ldr	r3, [r4, #20]
   15538:	ldr	r2, [r4, #24]
   1553c:	cmp	r3, r2
   15540:	addcc	r1, r3, #1
   15544:	movcc	r2, #32
   15548:	strcc	r1, [r4, #20]
   1554c:	strbcc	r2, [r3]
   15550:	bcs	1565c <argp_failure@@Base+0x1a4>
   15554:	ldr	r2, [sp]
   15558:	ldr	r1, [sp, #220]	; 0xdc
   1555c:	mov	r0, r4
   15560:	bl	11244 <vfprintf@plt>
   15564:	cmp	r6, #0
   15568:	beq	155cc <argp_failure@@Base+0x114>
   1556c:	ldr	r3, [r4, #20]
   15570:	ldr	r2, [r4, #24]
   15574:	cmp	r3, r2
   15578:	addcc	r1, r3, #1
   1557c:	movcc	r2, #58	; 0x3a
   15580:	strcc	r1, [r4, #20]
   15584:	strbcc	r2, [r3]
   15588:	bcs	1568c <argp_failure@@Base+0x1d4>
   1558c:	ldr	r3, [r4, #20]
   15590:	ldr	r2, [r4, #24]
   15594:	cmp	r3, r2
   15598:	addcc	r1, r3, #1
   1559c:	movcc	r2, #32
   155a0:	strcc	r1, [r4, #20]
   155a4:	strbcc	r2, [r3]
   155a8:	bcs	1567c <argp_failure@@Base+0x1c4>
   155ac:	mov	r2, #200	; 0xc8
   155b0:	mov	r1, sp
   155b4:	mov	r0, r6
   155b8:	bl	111d8 <strerror_r@plt>
   155bc:	cmp	r0, #0
   155c0:	beq	1569c <argp_failure@@Base+0x1e4>
   155c4:	mov	r1, r4
   155c8:	bl	10fec <fputs_unlocked@plt>
   155cc:	ldr	r3, [r4, #20]
   155d0:	ldr	r2, [r4, #24]
   155d4:	cmp	r3, r2
   155d8:	addcc	r1, r3, #1
   155dc:	movcc	r2, #10
   155e0:	strcc	r1, [r4, #20]
   155e4:	strbcc	r2, [r3]
   155e8:	bcs	15644 <argp_failure@@Base+0x18c>
   155ec:	mov	r0, r4
   155f0:	bl	110f4 <funlockfile@plt>
   155f4:	cmp	r7, #0
   155f8:	beq	15610 <argp_failure@@Base+0x158>
   155fc:	cmp	r5, #0
   15600:	beq	15654 <argp_failure@@Base+0x19c>
   15604:	ldr	r3, [r5, #16]
   15608:	tst	r3, #32
   1560c:	beq	15654 <argp_failure@@Base+0x19c>
   15610:	add	sp, sp, #200	; 0xc8
   15614:	pop	{r4, r5, r6, r7, lr}
   15618:	add	sp, sp, #4
   1561c:	bx	lr
   15620:	ldr	r3, [pc, #140]	; 156b4 <argp_failure@@Base+0x1fc>
   15624:	ldr	r4, [r3]
   15628:	cmp	r4, #0
   1562c:	beq	15610 <argp_failure@@Base+0x158>
   15630:	mov	r0, r4
   15634:	bl	1125c <flockfile@plt>
   15638:	ldr	r3, [pc, #120]	; 156b8 <argp_failure@@Base+0x200>
   1563c:	ldr	r0, [r3]
   15640:	b	154f8 <argp_failure@@Base+0x40>
   15644:	mov	r1, #10
   15648:	mov	r0, r4
   1564c:	bl	11214 <__overflow@plt>
   15650:	b	155ec <argp_failure@@Base+0x134>
   15654:	mov	r0, r7
   15658:	bl	1119c <exit@plt>
   1565c:	mov	r1, #32
   15660:	mov	r0, r4
   15664:	bl	11214 <__overflow@plt>
   15668:	b	15554 <argp_failure@@Base+0x9c>
   1566c:	mov	r1, #58	; 0x3a
   15670:	mov	r0, r4
   15674:	bl	11214 <__overflow@plt>
   15678:	b	15534 <argp_failure@@Base+0x7c>
   1567c:	mov	r1, #32
   15680:	mov	r0, r4
   15684:	bl	11214 <__overflow@plt>
   15688:	b	155ac <argp_failure@@Base+0xf4>
   1568c:	mov	r1, #58	; 0x3a
   15690:	mov	r0, r4
   15694:	bl	11214 <__overflow@plt>
   15698:	b	1558c <argp_failure@@Base+0xd4>
   1569c:	mov	r0, r6
   156a0:	bl	11154 <strerror@plt>
   156a4:	ldr	r3, [pc, #16]	; 156bc <argp_failure@@Base+0x204>
   156a8:	cmp	r0, #0
   156ac:	moveq	r0, r3
   156b0:	b	155c4 <argp_failure@@Base+0x10c>
   156b4:	andeq	lr, r2, r0, lsr #5
   156b8:	muleq	r2, r8, r2
   156bc:	andeq	ip, r1, ip, asr ip
   156c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   156c4:	add	fp, sp, #32
   156c8:	cmp	r2, #0
   156cc:	sub	sp, sp, #116	; 0x74
   156d0:	str	r2, [fp, #-136]	; 0xffffff78
   156d4:	str	r0, [fp, #-116]	; 0xffffff8c
   156d8:	str	r1, [fp, #-104]	; 0xffffff98
   156dc:	str	r3, [fp, #-100]	; 0xffffff9c
   156e0:	beq	15804 <argp_failure@@Base+0x34c>
   156e4:	ldr	r3, [pc, #4076]	; 166d8 <argp_failure@@Base+0x1220>
   156e8:	mov	r0, r2
   156ec:	mov	r4, r3
   156f0:	str	r3, [fp, #-96]	; 0xffffffa0
   156f4:	bl	1125c <flockfile@plt>
   156f8:	ldr	sl, [r4, #36]	; 0x24
   156fc:	cmp	sl, #0
   15700:	beq	15c18 <argp_failure@@Base+0x760>
   15704:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15708:	mov	r3, #0
   1570c:	mov	r1, r3
   15710:	ldr	r2, [r2, #32]
   15714:	ldr	r0, [fp, #-136]	; 0xffffff78
   15718:	bl	19ff0 <argp_parse@@Base+0x25e8>
   1571c:	subs	sl, r0, #0
   15720:	beq	16a34 <argp_failure@@Base+0x157c>
   15724:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15728:	ands	r3, r3, #11
   1572c:	streq	r3, [fp, #-108]	; 0xffffff94
   15730:	bne	16044 <argp_failure@@Base+0xb8c>
   15734:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15738:	ands	r4, r3, #3
   1573c:	bne	1616c <argp_failure@@Base+0xcb4>
   15740:	tst	r3, #16
   15744:	bne	16144 <argp_failure@@Base+0xc8c>
   15748:	tst	r3, #4
   1574c:	bne	16024 <argp_failure@@Base+0xb6c>
   15750:	tst	r3, #8
   15754:	bne	1580c <argp_failure@@Base+0x354>
   15758:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1575c:	tst	r3, #32
   15760:	bne	15bd4 <argp_failure@@Base+0x71c>
   15764:	tst	r3, #64	; 0x40
   15768:	beq	157b4 <argp_failure@@Base+0x2fc>
   1576c:	ldr	r5, [pc, #3944]	; 166dc <argp_failure@@Base+0x1224>
   15770:	ldr	r2, [r5]
   15774:	cmp	r2, #0
   15778:	beq	157b4 <argp_failure@@Base+0x2fc>
   1577c:	cmp	r4, #0
   15780:	beq	157a8 <argp_failure@@Base+0x2f0>
   15784:	ldr	r3, [sl, #28]
   15788:	ldr	r2, [sl, #32]
   1578c:	cmp	r3, r2
   15790:	bcs	16a04 <argp_failure@@Base+0x154c>
   15794:	add	r1, r3, #1
   15798:	mov	r2, #10
   1579c:	str	r1, [sl, #28]
   157a0:	strb	r2, [r3]
   157a4:	ldr	r2, [r5]
   157a8:	ldr	r1, [pc, #3888]	; 166e0 <argp_failure@@Base+0x1228>
   157ac:	mov	r0, sl
   157b0:	bl	1a718 <argp_parse@@Base+0x2d10>
   157b4:	ldr	r0, [fp, #-136]	; 0xffffff78
   157b8:	bl	110f4 <funlockfile@plt>
   157bc:	ldr	r3, [fp, #-108]	; 0xffffff94
   157c0:	cmp	r3, #0
   157c4:	beq	157fc <argp_failure@@Base+0x344>
   157c8:	ldr	r0, [r3, #12]
   157cc:	cmp	r0, #0
   157d0:	beq	157e8 <argp_failure@@Base+0x330>
   157d4:	ldr	r4, [r0, #24]
   157d8:	bl	18984 <argp_parse@@Base+0xf7c>
   157dc:	subs	r0, r4, #0
   157e0:	bne	157d4 <argp_failure@@Base+0x31c>
   157e4:	ldr	r3, [fp, #-108]	; 0xffffff94
   157e8:	ldr	r3, [r3, #4]
   157ec:	cmp	r3, #0
   157f0:	bne	15c00 <argp_failure@@Base+0x748>
   157f4:	ldr	r0, [fp, #-108]	; 0xffffff94
   157f8:	bl	18984 <argp_parse@@Base+0xf7c>
   157fc:	mov	r0, sl
   15800:	bl	1a5d8 <argp_parse@@Base+0x2bd0>
   15804:	sub	sp, fp, #32
   15808:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1580c:	ldr	r3, [fp, #-108]	; 0xffffff94
   15810:	ldr	r3, [r3, #4]
   15814:	cmp	r3, #0
   15818:	str	r3, [fp, #-112]	; 0xffffff90
   1581c:	beq	15758 <argp_failure@@Base+0x2a0>
   15820:	cmp	r4, #0
   15824:	beq	16914 <argp_failure@@Base+0x145c>
   15828:	ldr	r3, [sl, #28]
   1582c:	ldr	r2, [sl, #32]
   15830:	cmp	r3, r2
   15834:	bcs	16b80 <argp_failure@@Base+0x16c8>
   15838:	add	r1, r3, #1
   1583c:	mov	r2, #10
   15840:	str	r1, [sl, #28]
   15844:	strb	r2, [r3]
   15848:	ldr	r3, [fp, #-108]	; 0xffffff94
   1584c:	ldr	r2, [fp, #-108]	; 0xffffff94
   15850:	ldr	r3, [r3, #4]
   15854:	ldr	r8, [r2]
   15858:	str	r3, [fp, #-112]	; 0xffffff90
   1585c:	cmp	r3, #0
   15860:	mov	r3, #0
   15864:	str	r3, [fp, #-88]	; 0xffffffa8
   15868:	str	r3, [fp, #-84]	; 0xffffffac
   1586c:	str	r3, [fp, #-80]	; 0xffffffb0
   15870:	beq	15bc4 <argp_failure@@Base+0x70c>
   15874:	ldr	ip, [sl, #28]
   15878:	ldr	r3, [sl, #24]
   1587c:	ldr	lr, [sl, #16]
   15880:	sub	ip, ip, r3
   15884:	cmp	ip, lr
   15888:	ldr	r6, [r8]
   1588c:	ldr	r9, [r8, #8]
   15890:	bhi	16774 <argp_failure@@Base+0x12bc>
   15894:	ldr	r3, [sl, #4]
   15898:	ldr	r0, [r6, #12]
   1589c:	str	r3, [fp, #-120]	; 0xffffff88
   158a0:	ldr	r3, [sl, #12]
   158a4:	mov	r7, #0
   158a8:	str	r3, [fp, #-124]	; 0xffffff84
   158ac:	sub	r3, fp, #88	; 0x58
   158b0:	str	r7, [sl, #4]
   158b4:	str	r3, [fp, #-68]	; 0xffffffbc
   158b8:	ldr	r3, [fp, #-104]	; 0xffffff98
   158bc:	ands	r0, r0, #8
   158c0:	mov	r2, #1
   158c4:	str	r2, [fp, #-64]	; 0xffffffc0
   158c8:	str	r8, [fp, #-76]	; 0xffffffb4
   158cc:	str	sl, [fp, #-72]	; 0xffffffb8
   158d0:	str	r3, [fp, #-60]	; 0xffffffc4
   158d4:	strne	r7, [fp, #-132]	; 0xffffff7c
   158d8:	bne	15914 <argp_failure@@Base+0x45c>
   158dc:	ldr	r1, [r8, #4]
   158e0:	cmp	r1, r7
   158e4:	beq	15910 <argp_failure@@Base+0x458>
   158e8:	add	r2, r6, #24
   158ec:	ldr	r3, [r2, #-24]	; 0xffffffe8
   158f0:	cmp	r3, #0
   158f4:	beq	15904 <argp_failure@@Base+0x44c>
   158f8:	ldr	r3, [r2, #-12]
   158fc:	tst	r3, #2
   15900:	beq	167b8 <argp_failure@@Base+0x1300>
   15904:	subs	r1, r1, #1
   15908:	add	r2, r2, #24
   1590c:	bne	158ec <argp_failure@@Base+0x434>
   15910:	str	r0, [fp, #-132]	; 0xffffff7c
   15914:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15918:	cmp	ip, lr
   1591c:	ldr	r4, [r3, #8]
   15920:	bhi	16760 <argp_failure@@Base+0x12a8>
   15924:	str	r4, [sl, #12]
   15928:	ldr	r5, [r8, #4]
   1592c:	cmp	r5, #0
   15930:	beq	159b4 <argp_failure@@Base+0x4fc>
   15934:	str	r8, [fp, #-128]	; 0xffffff80
   15938:	mov	r4, r6
   1593c:	mov	r8, r9
   15940:	b	15950 <argp_failure@@Base+0x498>
   15944:	subs	r5, r5, #1
   15948:	add	r4, r4, #24
   1594c:	beq	159a8 <argp_failure@@Base+0x4f0>
   15950:	ldr	r7, [r4, #12]
   15954:	tst	r7, #8
   15958:	bne	15944 <argp_failure@@Base+0x48c>
   1595c:	ldr	r9, [r4, #4]
   15960:	sub	r2, r9, #1
   15964:	cmp	r2, #254	; 0xfe
   15968:	bhi	15944 <argp_failure@@Base+0x48c>
   1596c:	bl	11184 <__ctype_b_loc@plt>
   15970:	lsl	r2, r9, #1
   15974:	ldr	r1, [r0]
   15978:	ldrh	r2, [r1, r2]
   1597c:	tst	r2, #16384	; 0x4000
   15980:	beq	15944 <argp_failure@@Base+0x48c>
   15984:	ldrb	r2, [r8]
   15988:	cmp	r9, r2
   1598c:	bne	15944 <argp_failure@@Base+0x48c>
   15990:	tst	r7, #2
   15994:	beq	164d8 <argp_failure@@Base+0x1020>
   15998:	subs	r5, r5, #1
   1599c:	add	r8, r8, #1
   159a0:	add	r4, r4, #24
   159a4:	bne	15950 <argp_failure@@Base+0x498>
   159a8:	ldr	r0, [r6, #12]
   159ac:	ldr	r8, [fp, #-128]	; 0xffffff80
   159b0:	and	r0, r0, #8
   159b4:	ldr	r3, [sl, #28]
   159b8:	ldr	r1, [sl, #24]
   159bc:	cmp	r0, #0
   159c0:	ldr	r2, [sl, #16]
   159c4:	sub	r3, r3, r1
   159c8:	beq	16444 <argp_failure@@Base+0xf8c>
   159cc:	cmp	r3, r2
   159d0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   159d4:	ldr	r4, [r3, #16]
   159d8:	bhi	167d0 <argp_failure@@Base+0x1318>
   159dc:	str	r4, [sl, #12]
   159e0:	ldr	r5, [r8, #4]
   159e4:	cmp	r5, #0
   159e8:	addne	r4, r6, #24
   159ec:	bne	15a00 <argp_failure@@Base+0x548>
   159f0:	b	15a90 <argp_failure@@Base+0x5d8>
   159f4:	subs	r5, r5, #1
   159f8:	add	r4, r4, #24
   159fc:	beq	15a90 <argp_failure@@Base+0x5d8>
   15a00:	ldr	r3, [r4, #-24]	; 0xffffffe8
   15a04:	cmp	r3, #0
   15a08:	beq	159f4 <argp_failure@@Base+0x53c>
   15a0c:	ldr	r3, [r4, #-12]
   15a10:	tst	r3, #2
   15a14:	bne	159f4 <argp_failure@@Base+0x53c>
   15a18:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15a1c:	sub	r1, fp, #76	; 0x4c
   15a20:	ldr	r0, [r3, #16]
   15a24:	bl	143d8 <__assert_fail@plt+0x3110>
   15a28:	ldr	r9, [r4, #-24]	; 0xffffffe8
   15a2c:	mov	r0, r9
   15a30:	bl	111a8 <strlen@plt>
   15a34:	subs	r7, r0, #0
   15a38:	beq	159f4 <argp_failure@@Base+0x53c>
   15a3c:	ldr	r2, [sl, #28]
   15a40:	ldr	lr, [sl, #32]
   15a44:	add	ip, r2, r7
   15a48:	cmp	lr, ip
   15a4c:	mov	r1, r7
   15a50:	mov	r0, sl
   15a54:	bcs	15a68 <argp_failure@@Base+0x5b0>
   15a58:	bl	1a618 <argp_parse@@Base+0x2c10>
   15a5c:	cmp	r0, #0
   15a60:	beq	159f4 <argp_failure@@Base+0x53c>
   15a64:	ldr	r2, [sl, #28]
   15a68:	mov	r0, r2
   15a6c:	mov	r1, r9
   15a70:	mov	r2, r7
   15a74:	bl	11088 <memcpy@plt>
   15a78:	ldr	r2, [sl, #28]
   15a7c:	subs	r5, r5, #1
   15a80:	add	r3, r2, r7
   15a84:	str	r3, [sl, #28]
   15a88:	add	r4, r4, #24
   15a8c:	bne	15a00 <argp_failure@@Base+0x548>
   15a90:	ldr	r3, [sl, #28]
   15a94:	ldr	r1, [sl, #24]
   15a98:	ldr	r2, [sl, #16]
   15a9c:	sub	r3, r3, r1
   15aa0:	cmp	r3, r2
   15aa4:	bhi	16698 <argp_failure@@Base+0x11e0>
   15aa8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   15aac:	mov	r3, #0
   15ab0:	cmp	r2, r3
   15ab4:	str	r3, [sl, #4]
   15ab8:	beq	16558 <argp_failure@@Base+0x10a0>
   15abc:	ldr	r3, [r6, #12]
   15ac0:	tst	r3, #8
   15ac4:	bne	15af0 <argp_failure@@Base+0x638>
   15ac8:	ldr	r4, [r6, #4]
   15acc:	sub	r3, r4, #1
   15ad0:	cmp	r3, #254	; 0xfe
   15ad4:	bhi	15af0 <argp_failure@@Base+0x638>
   15ad8:	bl	11184 <__ctype_b_loc@plt>
   15adc:	lsl	r4, r4, #1
   15ae0:	ldr	r3, [r0]
   15ae4:	ldrh	r3, [r3, r4]
   15ae8:	tst	r3, #16384	; 0x4000
   15aec:	bne	15afc <argp_failure@@Base+0x644>
   15af0:	ldr	r3, [r6]
   15af4:	cmp	r3, #0
   15af8:	beq	16a20 <argp_failure@@Base+0x1568>
   15afc:	ldr	r3, [sl, #28]
   15b00:	ldr	r1, [sl, #24]
   15b04:	ldr	r2, [sl, #16]
   15b08:	sub	r3, r3, r1
   15b0c:	cmp	r3, r2
   15b10:	bhi	166a4 <argp_failure@@Base+0x11ec>
   15b14:	ldr	r3, [fp, #-120]	; 0xffffff88
   15b18:	str	r3, [sl, #4]
   15b1c:	ldr	r3, [fp, #-112]	; 0xffffff90
   15b20:	add	r8, r8, #28
   15b24:	subs	r3, r3, #1
   15b28:	str	r3, [fp, #-112]	; 0xffffff90
   15b2c:	ldr	r3, [fp, #-124]	; 0xffffff84
   15b30:	str	r3, [sl, #12]
   15b34:	bne	15874 <argp_failure@@Base+0x3bc>
   15b38:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15b3c:	cmp	r3, #0
   15b40:	beq	15bc4 <argp_failure@@Base+0x70c>
   15b44:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15b48:	ldr	r3, [r3, #4]
   15b4c:	cmp	r3, #0
   15b50:	beq	15bc4 <argp_failure@@Base+0x70c>
   15b54:	ldr	r1, [fp, #-104]	; 0xffffff98
   15b58:	cmp	r1, #0
   15b5c:	beq	16be4 <argp_failure@@Base+0x172c>
   15b60:	ldr	r4, [r1]
   15b64:	cmp	r4, #0
   15b68:	beq	16c14 <argp_failure@@Base+0x175c>
   15b6c:	ldr	r3, [r4, #20]
   15b70:	cmp	r3, #0
   15b74:	beq	16ae4 <argp_failure@@Base+0x162c>
   15b78:	mov	r0, r4
   15b7c:	bl	18828 <argp_parse@@Base+0xe20>
   15b80:	ldr	r9, [pc, #3028]	; 1675c <argp_failure@@Base+0x12a4>
   15b84:	ldr	r3, [r4, #20]
   15b88:	mov	r1, r9
   15b8c:	mov	r2, r0
   15b90:	ldr	r0, [pc, #2892]	; 166e4 <argp_failure@@Base+0x122c>
   15b94:	blx	r3
   15b98:	subs	r4, r0, #0
   15b9c:	beq	15bc4 <argp_failure@@Base+0x70c>
   15ba0:	ldrb	r3, [r4]
   15ba4:	subs	r9, r4, r9
   15ba8:	movne	r9, #1
   15bac:	cmp	r3, #0
   15bb0:	bne	16aec <argp_failure@@Base+0x1634>
   15bb4:	cmp	r9, #0
   15bb8:	beq	15bc4 <argp_failure@@Base+0x70c>
   15bbc:	mov	r0, r4
   15bc0:	bl	18984 <argp_parse@@Base+0xf7c>
   15bc4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15bc8:	mov	r4, #1
   15bcc:	tst	r3, #32
   15bd0:	beq	15764 <argp_failure@@Base+0x2ac>
   15bd4:	mov	r3, #0
   15bd8:	str	r3, [sp]
   15bdc:	str	sl, [sp, #4]
   15be0:	mov	r3, r4
   15be4:	ldr	r1, [fp, #-104]	; 0xffffff98
   15be8:	ldr	r0, [fp, #-116]	; 0xffffff8c
   15bec:	mov	r2, #1
   15bf0:	bl	129b0 <__assert_fail@plt+0x16e8>
   15bf4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15bf8:	orr	r4, r4, r0
   15bfc:	b	15764 <argp_failure@@Base+0x2ac>
   15c00:	ldr	r4, [fp, #-108]	; 0xffffff94
   15c04:	ldr	r0, [r4]
   15c08:	bl	18984 <argp_parse@@Base+0xf7c>
   15c0c:	ldr	r0, [r4, #8]
   15c10:	bl	18984 <argp_parse@@Base+0xf7c>
   15c14:	b	157f4 <argp_failure@@Base+0x33c>
   15c18:	ldr	r0, [pc, #2760]	; 166e8 <argp_failure@@Base+0x1230>
   15c1c:	bl	11130 <getenv@plt>
   15c20:	ldr	lr, [fp, #-96]	; 0xffffffa0
   15c24:	sub	r3, fp, #76	; 0x4c
   15c28:	mov	ip, r3
   15c2c:	str	r3, [fp, #-112]	; 0xffffff90
   15c30:	mov	r5, r0
   15c34:	ldm	lr!, {r0, r1, r2, r3}
   15c38:	cmp	r5, #0
   15c3c:	stmia	ip!, {r0, r1, r2, r3}
   15c40:	ldm	lr!, {r0, r1, r2, r3}
   15c44:	stmia	ip!, {r0, r1, r2, r3}
   15c48:	ldm	lr, {r0, r1}
   15c4c:	stm	ip, {r0, r1}
   15c50:	beq	15704 <argp_failure@@Base+0x24c>
   15c54:	ldrb	r8, [r5]
   15c58:	ldr	r9, [pc, #2700]	; 166ec <argp_failure@@Base+0x1234>
   15c5c:	str	sl, [fp, #-120]	; 0xffffff88
   15c60:	cmp	r8, #0
   15c64:	beq	15e18 <argp_failure@@Base+0x960>
   15c68:	bl	11184 <__ctype_b_loc@plt>
   15c6c:	mov	r7, r0
   15c70:	ldr	r0, [r0]
   15c74:	b	15c7c <argp_failure@@Base+0x7c4>
   15c78:	ldrb	r8, [r5, #1]!
   15c7c:	lsl	r3, r8, #1
   15c80:	ldrh	r1, [r0, r3]
   15c84:	tst	r1, #8192	; 0x2000
   15c88:	bne	15c78 <argp_failure@@Base+0x7c0>
   15c8c:	ands	r2, r1, #1024	; 0x400
   15c90:	beq	15e10 <argp_failure@@Base+0x958>
   15c94:	cmp	r8, #95	; 0x5f
   15c98:	cmpne	r8, #45	; 0x2d
   15c9c:	lsl	r3, r1, #28
   15ca0:	moveq	r6, #1
   15ca4:	movne	r6, #0
   15ca8:	orrs	r6, r6, r3, lsr #31
   15cac:	beq	168b4 <argp_failure@@Base+0x13fc>
   15cb0:	mov	r4, r5
   15cb4:	ldrb	r3, [r4, #1]!
   15cb8:	cmp	r3, #95	; 0x5f
   15cbc:	cmpne	r3, #45	; 0x2d
   15cc0:	lsl	r1, r3, #1
   15cc4:	moveq	r2, #1
   15cc8:	ldrh	r1, [r0, r1]
   15ccc:	movne	r2, #0
   15cd0:	lsl	ip, r1, #28
   15cd4:	orrs	r2, r2, ip, lsr #31
   15cd8:	bne	15cb4 <argp_failure@@Base+0x7fc>
   15cdc:	tst	r1, #8192	; 0x2000
   15ce0:	sub	r6, r4, r5
   15ce4:	beq	15cfc <argp_failure@@Base+0x844>
   15ce8:	ldrb	r3, [r4, #1]!
   15cec:	lsl	r2, r3, #1
   15cf0:	ldrh	r1, [r0, r2]
   15cf4:	tst	r1, #8192	; 0x2000
   15cf8:	bne	15ce8 <argp_failure@@Base+0x830>
   15cfc:	cmp	r3, #44	; 0x2c
   15d00:	cmpne	r3, #0
   15d04:	beq	15e9c <argp_failure@@Base+0x9e4>
   15d08:	cmp	r3, #61	; 0x3d
   15d0c:	beq	16414 <argp_failure@@Base+0xf5c>
   15d10:	tst	r1, #2048	; 0x800
   15d14:	bne	16384 <argp_failure@@Base+0xecc>
   15d18:	ldr	r3, [fp, #-120]	; 0xffffff88
   15d1c:	mov	sl, r3
   15d20:	str	r3, [fp, #-108]	; 0xffffff94
   15d24:	mov	r0, r9
   15d28:	bl	111a8 <strlen@plt>
   15d2c:	cmp	r6, r0
   15d30:	beq	15ebc <argp_failure@@Base+0xa04>
   15d34:	ldr	r0, [pc, #2484]	; 166f0 <argp_failure@@Base+0x1238>
   15d38:	bl	111a8 <strlen@plt>
   15d3c:	cmp	r6, r0
   15d40:	mov	r7, r0
   15d44:	beq	15f50 <argp_failure@@Base+0xa98>
   15d48:	ldr	r0, [pc, #2556]	; 1674c <argp_failure@@Base+0x1294>
   15d4c:	bl	111a8 <strlen@plt>
   15d50:	cmp	r6, r0
   15d54:	mov	r7, r0
   15d58:	beq	15f04 <argp_failure@@Base+0xa4c>
   15d5c:	ldr	r0, [pc, #2532]	; 16748 <argp_failure@@Base+0x1290>
   15d60:	bl	111a8 <strlen@plt>
   15d64:	cmp	r6, r0
   15d68:	mov	r7, r0
   15d6c:	beq	15f70 <argp_failure@@Base+0xab8>
   15d70:	ldr	r0, [pc, #2500]	; 1673c <argp_failure@@Base+0x1284>
   15d74:	bl	111a8 <strlen@plt>
   15d78:	cmp	r6, r0
   15d7c:	mov	r7, r0
   15d80:	beq	15f90 <argp_failure@@Base+0xad8>
   15d84:	ldr	r8, [pc, #2504]	; 16754 <argp_failure@@Base+0x129c>
   15d88:	mov	r0, r8
   15d8c:	bl	111a8 <strlen@plt>
   15d90:	cmp	r6, r0
   15d94:	mov	r7, r0
   15d98:	beq	15fb0 <argp_failure@@Base+0xaf8>
   15d9c:	ldr	r8, [pc, #2476]	; 16750 <argp_failure@@Base+0x1298>
   15da0:	mov	r0, r8
   15da4:	bl	111a8 <strlen@plt>
   15da8:	cmp	r6, r0
   15dac:	mov	r7, r0
   15db0:	beq	15fcc <argp_failure@@Base+0xb14>
   15db4:	ldr	r8, [pc, #2460]	; 16758 <argp_failure@@Base+0x12a0>
   15db8:	mov	r0, r8
   15dbc:	bl	111a8 <strlen@plt>
   15dc0:	cmp	r6, r0
   15dc4:	mov	r7, r0
   15dc8:	beq	15fe8 <argp_failure@@Base+0xb30>
   15dcc:	ldr	r8, [pc, #2336]	; 166f4 <argp_failure@@Base+0x123c>
   15dd0:	mov	r0, r8
   15dd4:	bl	111a8 <strlen@plt>
   15dd8:	cmp	r0, r6
   15ddc:	beq	16004 <argp_failure@@Base+0xb4c>
   15de0:	mov	r2, #0
   15de4:	str	r5, [sp, #4]
   15de8:	str	r6, [sp]
   15dec:	mov	r1, r2
   15df0:	ldr	r3, [pc, #2304]	; 166f8 <argp_failure@@Base+0x1240>
   15df4:	ldr	r0, [fp, #-104]	; 0xffffff98
   15df8:	bl	154b8 <argp_failure@@Base>
   15dfc:	ldrb	r8, [r4]
   15e00:	cmp	r8, #44	; 0x2c
   15e04:	beq	15ef8 <argp_failure@@Base+0xa40>
   15e08:	mov	r5, r4
   15e0c:	b	15c60 <argp_failure@@Base+0x7a8>
   15e10:	cmp	r8, #0
   15e14:	bne	169c0 <argp_failure@@Base+0x1508>
   15e18:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15e1c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   15e20:	cmp	r3, r2
   15e24:	ble	16ba4 <argp_failure@@Base+0x16ec>
   15e28:	ldr	r2, [fp, #-64]	; 0xffffffc0
   15e2c:	cmp	r3, r2
   15e30:	ble	169fc <argp_failure@@Base+0x1544>
   15e34:	ldr	r2, [fp, #-60]	; 0xffffffc4
   15e38:	cmp	r3, r2
   15e3c:	ble	169d8 <argp_failure@@Base+0x1520>
   15e40:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15e44:	cmp	r3, r2
   15e48:	ble	16bdc <argp_failure@@Base+0x1724>
   15e4c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15e50:	cmp	r3, r2
   15e54:	ble	16bd4 <argp_failure@@Base+0x171c>
   15e58:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15e5c:	cmp	r3, r2
   15e60:	ble	16bf0 <argp_failure@@Base+0x1738>
   15e64:	ldr	lr, [fp, #-112]	; 0xffffff90
   15e68:	ldr	r3, [pc, #2152]	; 166d8 <argp_failure@@Base+0x1220>
   15e6c:	mov	r4, #1
   15e70:	mov	r5, r3
   15e74:	str	r3, [fp, #-96]	; 0xffffffa0
   15e78:	ldm	lr!, {r0, r1, r2, r3}
   15e7c:	mov	ip, r5
   15e80:	stmia	ip!, {r0, r1, r2, r3}
   15e84:	ldm	lr!, {r0, r1, r2, r3}
   15e88:	stmia	ip!, {r0, r1, r2, r3}
   15e8c:	ldm	lr, {r0, r1}
   15e90:	stm	ip, {r0, r1}
   15e94:	str	r4, [r5, #36]	; 0x24
   15e98:	b	15704 <argp_failure@@Base+0x24c>
   15e9c:	cmp	r8, #110	; 0x6e
   15ea0:	beq	163e4 <argp_failure@@Base+0xf2c>
   15ea4:	mov	sl, #1
   15ea8:	mov	r0, r9
   15eac:	str	sl, [fp, #-108]	; 0xffffff94
   15eb0:	bl	111a8 <strlen@plt>
   15eb4:	cmp	r6, r0
   15eb8:	bne	15d34 <argp_failure@@Base+0x87c>
   15ebc:	mov	r2, r6
   15ec0:	mov	r1, r9
   15ec4:	mov	r0, r5
   15ec8:	bl	112b0 <strncmp@plt>
   15ecc:	cmp	r0, #0
   15ed0:	bne	15d34 <argp_failure@@Base+0x87c>
   15ed4:	mov	r8, r9
   15ed8:	ldrb	r3, [r8, #15]
   15edc:	ldrb	r8, [r4]
   15ee0:	sub	r2, fp, #36	; 0x24
   15ee4:	add	r3, r2, r3
   15ee8:	ldr	r2, [fp, #-108]	; 0xffffff94
   15eec:	cmp	r8, #44	; 0x2c
   15ef0:	str	r2, [r3, #-40]	; 0xffffffd8
   15ef4:	bne	15e08 <argp_failure@@Base+0x950>
   15ef8:	ldrb	r8, [r4, #1]
   15efc:	add	r4, r4, #1
   15f00:	b	15e08 <argp_failure@@Base+0x950>
   15f04:	mov	r2, r0
   15f08:	ldr	r1, [pc, #2108]	; 1674c <argp_failure@@Base+0x1294>
   15f0c:	mov	r0, r5
   15f10:	bl	112b0 <strncmp@plt>
   15f14:	cmp	r0, #0
   15f18:	bne	15d5c <argp_failure@@Base+0x8a4>
   15f1c:	ldr	r8, [pc, #2088]	; 1674c <argp_failure@@Base+0x1294>
   15f20:	cmp	sl, #0
   15f24:	beq	15ed8 <argp_failure@@Base+0xa20>
   15f28:	ldrb	r2, [r8, #14]
   15f2c:	cmp	r2, #0
   15f30:	bne	15ed8 <argp_failure@@Base+0xa20>
   15f34:	str	r5, [sp, #4]
   15f38:	str	r7, [sp]
   15f3c:	ldr	r3, [pc, #1976]	; 166fc <argp_failure@@Base+0x1244>
   15f40:	mov	r1, r2
   15f44:	ldr	r0, [fp, #-104]	; 0xffffff98
   15f48:	bl	154b8 <argp_failure@@Base>
   15f4c:	b	15dfc <argp_failure@@Base+0x944>
   15f50:	mov	r2, r0
   15f54:	ldr	r1, [pc, #1940]	; 166f0 <argp_failure@@Base+0x1238>
   15f58:	mov	r0, r5
   15f5c:	bl	112b0 <strncmp@plt>
   15f60:	cmp	r0, #0
   15f64:	bne	15d48 <argp_failure@@Base+0x890>
   15f68:	ldr	r8, [pc, #1920]	; 166f0 <argp_failure@@Base+0x1238>
   15f6c:	b	15f20 <argp_failure@@Base+0xa68>
   15f70:	mov	r2, r0
   15f74:	ldr	r1, [pc, #1996]	; 16748 <argp_failure@@Base+0x1290>
   15f78:	mov	r0, r5
   15f7c:	bl	112b0 <strncmp@plt>
   15f80:	cmp	r0, #0
   15f84:	bne	15d70 <argp_failure@@Base+0x8b8>
   15f88:	ldr	r8, [pc, #1976]	; 16748 <argp_failure@@Base+0x1290>
   15f8c:	b	15f20 <argp_failure@@Base+0xa68>
   15f90:	mov	r2, r0
   15f94:	ldr	r1, [pc, #1952]	; 1673c <argp_failure@@Base+0x1284>
   15f98:	mov	r0, r5
   15f9c:	bl	112b0 <strncmp@plt>
   15fa0:	cmp	r0, #0
   15fa4:	bne	15d84 <argp_failure@@Base+0x8cc>
   15fa8:	ldr	r8, [pc, #1932]	; 1673c <argp_failure@@Base+0x1284>
   15fac:	b	15f20 <argp_failure@@Base+0xa68>
   15fb0:	mov	r2, r0
   15fb4:	mov	r1, r8
   15fb8:	mov	r0, r5
   15fbc:	bl	112b0 <strncmp@plt>
   15fc0:	cmp	r0, #0
   15fc4:	bne	15d9c <argp_failure@@Base+0x8e4>
   15fc8:	b	15f20 <argp_failure@@Base+0xa68>
   15fcc:	mov	r2, r0
   15fd0:	mov	r1, r8
   15fd4:	mov	r0, r5
   15fd8:	bl	112b0 <strncmp@plt>
   15fdc:	cmp	r0, #0
   15fe0:	bne	15db4 <argp_failure@@Base+0x8fc>
   15fe4:	b	15f20 <argp_failure@@Base+0xa68>
   15fe8:	mov	r2, r0
   15fec:	mov	r1, r8
   15ff0:	mov	r0, r5
   15ff4:	bl	112b0 <strncmp@plt>
   15ff8:	cmp	r0, #0
   15ffc:	bne	15dcc <argp_failure@@Base+0x914>
   16000:	b	15f20 <argp_failure@@Base+0xa68>
   16004:	mov	r2, r6
   16008:	mov	r1, r8
   1600c:	mov	r0, r5
   16010:	bl	112b0 <strncmp@plt>
   16014:	cmp	r0, #0
   16018:	moveq	r7, r6
   1601c:	bne	15de0 <argp_failure@@Base+0x928>
   16020:	b	15f20 <argp_failure@@Base+0xa68>
   16024:	ldr	r3, [fp, #4]
   16028:	ldr	r1, [pc, #1744]	; 16700 <argp_failure@@Base+0x1248>
   1602c:	mov	r2, r3
   16030:	mov	r0, sl
   16034:	bl	1a718 <argp_parse@@Base+0x2d10>
   16038:	mov	r4, #1
   1603c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16040:	b	15750 <argp_failure@@Base+0x298>
   16044:	mov	r1, #0
   16048:	ldr	r0, [fp, #-116]	; 0xffffff8c
   1604c:	bl	12f5c <__assert_fail@plt+0x1c94>
   16050:	ldr	r2, [r0, #4]
   16054:	ldr	r3, [r0]
   16058:	cmp	r2, #0
   1605c:	str	r0, [fp, #-108]	; 0xffffff94
   16060:	str	r2, [fp, #-120]	; 0xffffff88
   16064:	str	r3, [fp, #-112]	; 0xffffff90
   16068:	sub	r6, r2, #1
   1606c:	beq	15734 <argp_failure@@Base+0x27c>
   16070:	ldr	r5, [pc, #1676]	; 16704 <argp_failure@@Base+0x124c>
   16074:	mov	r8, r6
   16078:	mov	r7, r3
   1607c:	ldm	r7, {r4, r9}
   16080:	cmp	r9, #0
   16084:	sub	r9, r9, #1
   16088:	beq	160c8 <argp_failure@@Base+0xc10>
   1608c:	add	r4, r4, #24
   16090:	ldr	r3, [r4, #-24]	; 0xffffffe8
   16094:	mov	r1, r5
   16098:	subs	r0, r3, #0
   1609c:	sub	r9, r9, #1
   160a0:	beq	160bc <argp_failure@@Base+0xc04>
   160a4:	ldr	r3, [r4, #-12]
   160a8:	tst	r3, #2
   160ac:	bne	160bc <argp_failure@@Base+0xc04>
   160b0:	bl	11004 <strcmp@plt>
   160b4:	cmp	r0, #0
   160b8:	beq	1685c <argp_failure@@Base+0x13a4>
   160bc:	cmn	r9, #1
   160c0:	add	r4, r4, #24
   160c4:	bne	16090 <argp_failure@@Base+0xbd8>
   160c8:	sub	r8, r8, #1
   160cc:	cmn	r8, #1
   160d0:	add	r7, r7, #28
   160d4:	bne	1607c <argp_failure@@Base+0xbc4>
   160d8:	ldr	r7, [fp, #-112]	; 0xffffff90
   160dc:	ldr	r9, [pc, #1572]	; 16708 <argp_failure@@Base+0x1250>
   160e0:	ldm	r7, {r4, r5}
   160e4:	cmp	r5, #0
   160e8:	sub	r5, r5, #1
   160ec:	beq	1612c <argp_failure@@Base+0xc74>
   160f0:	add	r4, r4, #24
   160f4:	ldr	r3, [r4, #-24]	; 0xffffffe8
   160f8:	mov	r1, r9
   160fc:	subs	r0, r3, #0
   16100:	sub	r5, r5, #1
   16104:	beq	16120 <argp_failure@@Base+0xc68>
   16108:	ldr	r3, [r4, #-12]
   1610c:	tst	r3, #2
   16110:	bne	16120 <argp_failure@@Base+0xc68>
   16114:	bl	11004 <strcmp@plt>
   16118:	cmp	r0, #0
   1611c:	beq	16814 <argp_failure@@Base+0x135c>
   16120:	cmn	r5, #1
   16124:	add	r4, r4, #24
   16128:	bne	160f4 <argp_failure@@Base+0xc3c>
   1612c:	cmp	r6, #0
   16130:	add	r7, r7, #28
   16134:	sub	r6, r6, #1
   16138:	bne	160e0 <argp_failure@@Base+0xc28>
   1613c:	ldr	r1, [fp, #-120]	; 0xffffff88
   16140:	b	1682c <argp_failure@@Base+0x1374>
   16144:	mov	r2, #1
   16148:	mov	r3, #0
   1614c:	stm	sp, {r2, sl}
   16150:	ldr	r1, [fp, #-104]	; 0xffffff98
   16154:	mov	r2, r3
   16158:	ldr	r0, [fp, #-116]	; 0xffffff8c
   1615c:	bl	129b0 <__assert_fail@plt+0x16e8>
   16160:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16164:	orr	r4, r4, r0
   16168:	b	15748 <argp_failure@@Base+0x290>
   1616c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   16170:	mov	r4, #1
   16174:	ldr	r8, [pc, #1424]	; 1670c <argp_failure@@Base+0x1254>
   16178:	ldr	r1, [r3, #16]
   1617c:	ldr	r0, [r3, #8]
   16180:	bl	1395c <__assert_fail@plt+0x2694>
   16184:	mov	r1, #0
   16188:	mov	r6, r4
   1618c:	add	r3, r0, #14
   16190:	bic	r3, r3, #7
   16194:	sub	sp, sp, r3
   16198:	add	r7, sp, #8
   1619c:	mov	r2, r0
   161a0:	mov	r0, r7
   161a4:	bl	111e4 <memset@plt>
   161a8:	sub	r3, fp, #76	; 0x4c
   161ac:	str	r3, [fp, #-112]	; 0xffffff90
   161b0:	str	r7, [fp, #-120]	; 0xffffff88
   161b4:	ldr	r5, [fp, #-96]	; 0xffffffa0
   161b8:	b	162d8 <argp_failure@@Base+0xe20>
   161bc:	cmp	r4, #0
   161c0:	ldr	r3, [fp, #-120]	; 0xffffff88
   161c4:	ldr	r7, [sl, #12]
   161c8:	ldrne	r2, [pc, #1344]	; 16710 <argp_failure@@Base+0x1258>
   161cc:	str	r9, [sl, #12]
   161d0:	ldreq	r2, [pc, #1340]	; 16714 <argp_failure@@Base+0x125c>
   161d4:	str	r3, [fp, #-76]	; 0xffffffb4
   161d8:	mov	r1, r8
   161dc:	ldr	r3, [fp, #4]
   161e0:	mov	r0, sl
   161e4:	bl	1a718 <argp_parse@@Base+0x2d10>
   161e8:	ldr	r3, [sl, #28]
   161ec:	ldr	r1, [sl, #24]
   161f0:	ldr	r2, [sl, #16]
   161f4:	sub	r3, r3, r1
   161f8:	cmp	r3, r2
   161fc:	ldr	r9, [r5, #28]
   16200:	bhi	16350 <argp_failure@@Base+0xe98>
   16204:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16208:	ldr	r4, [sl, #4]
   1620c:	tst	r3, #2
   16210:	str	r9, [sl, #4]
   16214:	beq	1635c <argp_failure@@Base+0xea4>
   16218:	ldr	r3, [fp, #-108]	; 0xffffff94
   1621c:	ldr	r3, [r3, #4]
   16220:	cmp	r3, #0
   16224:	beq	16274 <argp_failure@@Base+0xdbc>
   16228:	ldr	ip, [sl, #28]
   1622c:	ldr	r2, [sl, #32]
   16230:	add	r3, ip, #12
   16234:	cmp	r2, r3
   16238:	bcs	16254 <argp_failure@@Base+0xd9c>
   1623c:	mov	r1, #12
   16240:	mov	r0, sl
   16244:	bl	1a618 <argp_parse@@Base+0x2c10>
   16248:	cmp	r0, #0
   1624c:	beq	16274 <argp_failure@@Base+0xdbc>
   16250:	ldr	ip, [sl, #28]
   16254:	ldr	r3, [pc, #1212]	; 16718 <argp_failure@@Base+0x1260>
   16258:	ldm	r3!, {r0, r1, r2}
   1625c:	str	r0, [ip]
   16260:	str	r1, [ip, #4]
   16264:	str	r2, [ip, #8]
   16268:	ldr	r3, [sl, #28]
   1626c:	add	r3, r3, #12
   16270:	str	r3, [sl, #28]
   16274:	mov	r3, r6
   16278:	ldr	r1, [fp, #-104]	; 0xffffff98
   1627c:	str	sl, [sp]
   16280:	ldr	r2, [fp, #-112]	; 0xffffff90
   16284:	ldr	r0, [fp, #-116]	; 0xffffff8c
   16288:	bl	1367c <__assert_fail@plt+0x23b4>
   1628c:	ldr	r3, [sl, #28]
   16290:	ldr	r1, [sl, #24]
   16294:	sub	r1, r3, r1
   16298:	mov	r9, r0
   1629c:	ldr	r0, [sl, #16]
   162a0:	cmp	r1, r0
   162a4:	strls	r7, [sl, #12]
   162a8:	bhi	1631c <argp_failure@@Base+0xe64>
   162ac:	ldr	r1, [sl, #32]
   162b0:	str	r4, [sl, #4]
   162b4:	cmp	r1, r3
   162b8:	bls	16300 <argp_failure@@Base+0xe48>
   162bc:	add	r1, r3, #1
   162c0:	mov	r2, #10
   162c4:	str	r1, [sl, #28]
   162c8:	strb	r2, [r3]
   162cc:	cmp	r9, #0
   162d0:	mov	r4, #0
   162d4:	beq	16378 <argp_failure@@Base+0xec0>
   162d8:	ldr	r3, [sl, #28]
   162dc:	ldr	r1, [sl, #24]
   162e0:	ldr	r2, [sl, #16]
   162e4:	sub	r3, r3, r1
   162e8:	cmp	r3, r2
   162ec:	ldr	r9, [r5, #28]
   162f0:	bls	161bc <argp_failure@@Base+0xd04>
   162f4:	mov	r0, sl
   162f8:	bl	1a06c <argp_parse@@Base+0x2664>
   162fc:	b	161bc <argp_failure@@Base+0xd04>
   16300:	mov	r1, r6
   16304:	mov	r0, sl
   16308:	bl	1a618 <argp_parse@@Base+0x2c10>
   1630c:	cmp	r0, #0
   16310:	beq	162cc <argp_failure@@Base+0xe14>
   16314:	ldr	r3, [sl, #28]
   16318:	b	162bc <argp_failure@@Base+0xe04>
   1631c:	mov	r0, sl
   16320:	bl	1a06c <argp_parse@@Base+0x2664>
   16324:	ldr	r3, [sl, #28]
   16328:	ldr	r1, [sl, #24]
   1632c:	ldr	r0, [sl, #16]
   16330:	sub	r1, r3, r1
   16334:	cmp	r1, r0
   16338:	str	r7, [sl, #12]
   1633c:	bls	162ac <argp_failure@@Base+0xdf4>
   16340:	mov	r0, sl
   16344:	bl	1a06c <argp_parse@@Base+0x2664>
   16348:	ldr	r3, [sl, #28]
   1634c:	b	162ac <argp_failure@@Base+0xdf4>
   16350:	mov	r0, sl
   16354:	bl	1a06c <argp_parse@@Base+0x2664>
   16358:	b	16204 <argp_failure@@Base+0xd4c>
   1635c:	mov	r1, sl
   16360:	ldr	r0, [fp, #-108]	; 0xffffff94
   16364:	bl	13ca8 <__assert_fail@plt+0x29e0>
   16368:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1636c:	orr	r3, r3, #2
   16370:	str	r3, [fp, #-100]	; 0xffffff9c
   16374:	b	16274 <argp_failure@@Base+0xdbc>
   16378:	mov	r4, #1
   1637c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16380:	b	15740 <argp_failure@@Base+0x288>
   16384:	mov	r2, #10
   16388:	mov	r1, #0
   1638c:	mov	r0, r4
   16390:	bl	11010 <strtol@plt>
   16394:	ldrb	r3, [r4]
   16398:	ldr	r2, [r7]
   1639c:	lsl	r3, r3, #1
   163a0:	ldrh	r3, [r2, r3]
   163a4:	tst	r3, #2048	; 0x800
   163a8:	str	r0, [fp, #-108]	; 0xffffff94
   163ac:	beq	163d4 <argp_failure@@Base+0xf1c>
   163b0:	ldrb	r3, [r4, #1]!
   163b4:	lsl	r3, r3, #1
   163b8:	ldrh	r3, [r2, r3]
   163bc:	tst	r3, #2048	; 0x800
   163c0:	bne	163b0 <argp_failure@@Base+0xef8>
   163c4:	b	163d4 <argp_failure@@Base+0xf1c>
   163c8:	ldrb	r3, [r4, #1]!
   163cc:	lsl	r3, r3, #1
   163d0:	ldrh	r3, [r2, r3]
   163d4:	tst	r3, #8192	; 0x2000
   163d8:	bne	163c8 <argp_failure@@Base+0xf10>
   163dc:	ldr	sl, [fp, #-120]	; 0xffffff88
   163e0:	b	15d24 <argp_failure@@Base+0x86c>
   163e4:	ldrb	r3, [r5, #1]
   163e8:	cmp	r3, #111	; 0x6f
   163ec:	bne	15ea4 <argp_failure@@Base+0x9ec>
   163f0:	ldrb	r3, [r5, #2]
   163f4:	cmp	r3, #45	; 0x2d
   163f8:	bne	15ea4 <argp_failure@@Base+0x9ec>
   163fc:	ldr	r3, [fp, #-120]	; 0xffffff88
   16400:	add	r5, r5, #3
   16404:	sub	r6, r6, #3
   16408:	str	r3, [fp, #-108]	; 0xffffff94
   1640c:	mov	sl, #1
   16410:	b	15d24 <argp_failure@@Base+0x86c>
   16414:	ldrb	r3, [r4, #1]
   16418:	add	r4, r4, #1
   1641c:	lsl	r3, r3, #1
   16420:	ldrh	r1, [r0, r3]
   16424:	tst	r1, #8192	; 0x2000
   16428:	beq	15d10 <argp_failure@@Base+0x858>
   1642c:	ldrb	r3, [r4, #1]!
   16430:	lsl	r3, r3, #1
   16434:	ldrh	r1, [r0, r3]
   16438:	tst	r1, #8192	; 0x2000
   1643c:	bne	1642c <argp_failure@@Base+0xf74>
   16440:	b	15d10 <argp_failure@@Base+0x858>
   16444:	cmp	r3, r2
   16448:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1644c:	ldr	r4, [r3, #12]
   16450:	bhi	167c4 <argp_failure@@Base+0x130c>
   16454:	str	r4, [sl, #12]
   16458:	ldr	r5, [r8, #4]
   1645c:	cmp	r5, #0
   16460:	beq	15a90 <argp_failure@@Base+0x5d8>
   16464:	add	r4, r6, #24
   16468:	ldr	r7, [fp, #-96]	; 0xffffffa0
   1646c:	b	1647c <argp_failure@@Base+0xfc4>
   16470:	subs	r5, r5, #1
   16474:	add	r4, r4, #24
   16478:	beq	15a90 <argp_failure@@Base+0x5d8>
   1647c:	ldr	r3, [r4, #-24]	; 0xffffffe8
   16480:	cmp	r3, #0
   16484:	beq	16470 <argp_failure@@Base+0xfb8>
   16488:	ldr	r3, [r4, #-12]
   1648c:	tst	r3, #2
   16490:	bne	16470 <argp_failure@@Base+0xfb8>
   16494:	sub	r1, fp, #76	; 0x4c
   16498:	ldr	r0, [r7, #12]
   1649c:	bl	143d8 <__assert_fail@plt+0x3110>
   164a0:	ldr	r2, [r4, #-24]	; 0xffffffe8
   164a4:	ldr	r1, [pc, #624]	; 1671c <argp_failure@@Base+0x1264>
   164a8:	mov	r0, sl
   164ac:	bl	1a718 <argp_parse@@Base+0x2d10>
   164b0:	ldr	r3, [r6, #8]
   164b4:	ldr	r1, [pc, #612]	; 16720 <argp_failure@@Base+0x1268>
   164b8:	subs	r2, r3, #0
   164bc:	mov	r0, sl
   164c0:	beq	16470 <argp_failure@@Base+0xfb8>
   164c4:	ldr	ip, [r6, #12]
   164c8:	tst	ip, #1
   164cc:	ldrne	r1, [pc, #592]	; 16724 <argp_failure@@Base+0x126c>
   164d0:	bl	1a718 <argp_parse@@Base+0x2d10>
   164d4:	b	16470 <argp_failure@@Base+0xfb8>
   164d8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   164dc:	sub	r1, fp, #76	; 0x4c
   164e0:	ldr	r0, [r3, #8]
   164e4:	bl	143d8 <__assert_fail@plt+0x3110>
   164e8:	ldr	r2, [sl, #28]
   164ec:	ldr	r1, [sl, #32]
   164f0:	cmp	r2, r1
   164f4:	bcs	167f8 <argp_failure@@Base+0x1340>
   164f8:	add	r1, r2, #1
   164fc:	mov	r3, #45	; 0x2d
   16500:	str	r1, [sl, #28]
   16504:	strb	r3, [r2]
   16508:	ldr	r2, [sl, #28]
   1650c:	ldr	r1, [sl, #32]
   16510:	ldrb	r7, [r8]
   16514:	cmp	r2, r1
   16518:	bcs	167dc <argp_failure@@Base+0x1324>
   1651c:	add	r1, r2, #1
   16520:	str	r1, [sl, #28]
   16524:	strb	r7, [r2]
   16528:	ldr	r3, [fp, #-132]	; 0xffffff7c
   1652c:	cmp	r3, #0
   16530:	beq	16790 <argp_failure@@Base+0x12d8>
   16534:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16538:	ldr	r2, [r3]
   1653c:	cmp	r2, #0
   16540:	bne	16790 <argp_failure@@Base+0x12d8>
   16544:	ldr	r2, [r6, #8]
   16548:	cmp	r2, #0
   1654c:	movne	r3, #1
   16550:	strne	r3, [fp, #-80]	; 0xffffffb0
   16554:	b	15998 <argp_failure@@Base+0x4e0>
   16558:	ldr	r5, [r8, #20]
   1655c:	ldr	r9, [r6, #16]
   16560:	cmp	r5, #0
   16564:	beq	16880 <argp_failure@@Base+0x13c8>
   16568:	ldr	r3, [r5, #20]
   1656c:	cmp	r3, #0
   16570:	beq	16880 <argp_failure@@Base+0x13c8>
   16574:	ldr	r1, [fp, #-104]	; 0xffffff98
   16578:	mov	r0, r5
   1657c:	ldr	r4, [r6, #4]
   16580:	bl	18828 <argp_parse@@Base+0xe20>
   16584:	ldr	r3, [r5, #20]
   16588:	mov	r1, r9
   1658c:	mov	r2, r0
   16590:	mov	r0, r4
   16594:	blx	r3
   16598:	mov	r4, r0
   1659c:	cmp	r4, #0
   165a0:	beq	16654 <argp_failure@@Base+0x119c>
   165a4:	ldrb	r3, [r4]
   165a8:	cmp	r3, #0
   165ac:	beq	16644 <argp_failure@@Base+0x118c>
   165b0:	ldr	r3, [sl, #28]
   165b4:	ldr	r2, [sl, #24]
   165b8:	ldr	r1, [sl, #16]
   165bc:	sub	r2, r3, r2
   165c0:	cmp	r2, r1
   165c4:	bhi	1694c <argp_failure@@Base+0x1494>
   165c8:	ldr	r6, [sl, #20]
   165cc:	ldr	r2, [fp, #-96]	; 0xffffffa0
   165d0:	bic	r6, r6, r6, asr #31
   165d4:	ldr	r5, [r2, #20]
   165d8:	mov	r7, r5
   165dc:	str	r5, [sl, #4]
   165e0:	add	r2, r5, #3
   165e4:	cmp	r2, r6
   165e8:	str	r7, [sl, #12]
   165ec:	bcs	168c0 <argp_failure@@Base+0x1408>
   165f0:	ldr	r2, [sl, #32]
   165f4:	cmp	r2, r3
   165f8:	bls	16ac8 <argp_failure@@Base+0x1610>
   165fc:	add	r1, r3, #1
   16600:	mov	r2, #10
   16604:	str	r1, [sl, #28]
   16608:	strb	r2, [r3]
   1660c:	mov	r0, r4
   16610:	bl	111a8 <strlen@plt>
   16614:	subs	r5, r0, #0
   16618:	beq	16644 <argp_failure@@Base+0x118c>
   1661c:	ldr	r0, [sl, #28]
   16620:	ldr	r2, [sl, #32]
   16624:	add	r3, r0, r5
   16628:	cmp	r2, r3
   1662c:	bcs	16930 <argp_failure@@Base+0x1478>
   16630:	mov	r1, r5
   16634:	mov	r0, sl
   16638:	bl	1a618 <argp_parse@@Base+0x2c10>
   1663c:	cmp	r0, #0
   16640:	bne	1692c <argp_failure@@Base+0x1474>
   16644:	cmp	r9, r4
   16648:	beq	16654 <argp_failure@@Base+0x119c>
   1664c:	mov	r0, r4
   16650:	bl	18984 <argp_parse@@Base+0xf7c>
   16654:	ldr	r3, [sl, #28]
   16658:	ldr	r2, [sl, #24]
   1665c:	ldr	r1, [sl, #16]
   16660:	sub	r2, r3, r2
   16664:	cmp	r2, r1
   16668:	bhi	168a4 <argp_failure@@Base+0x13ec>
   1666c:	ldr	r1, [sl, #32]
   16670:	mov	r2, #0
   16674:	cmp	r1, r3
   16678:	str	r2, [sl, #4]
   1667c:	bls	16888 <argp_failure@@Base+0x13d0>
   16680:	add	r1, r3, #1
   16684:	mov	r2, #10
   16688:	str	r1, [sl, #28]
   1668c:	strb	r2, [r3]
   16690:	str	r8, [fp, #-88]	; 0xffffffa8
   16694:	b	15afc <argp_failure@@Base+0x644>
   16698:	mov	r0, sl
   1669c:	bl	1a06c <argp_parse@@Base+0x2664>
   166a0:	b	15aa8 <argp_failure@@Base+0x5f0>
   166a4:	mov	r0, sl
   166a8:	bl	1a06c <argp_parse@@Base+0x2664>
   166ac:	ldr	r2, [fp, #-120]	; 0xffffff88
   166b0:	ldr	r3, [sl, #28]
   166b4:	ldr	r1, [sl, #24]
   166b8:	str	r2, [sl, #4]
   166bc:	ldr	r2, [sl, #16]
   166c0:	sub	r3, r3, r1
   166c4:	cmp	r3, r2
   166c8:	bls	15b1c <argp_failure@@Base+0x664>
   166cc:	mov	r0, sl
   166d0:	bl	1a06c <argp_parse@@Base+0x2664>
   166d4:	b	15b1c <argp_failure@@Base+0x664>
   166d8:	andeq	lr, r2, r8, asr r2
   166dc:	andeq	lr, r2, r0, ror r3
   166e0:	andeq	ip, r1, ip, lsr lr
   166e4:	andeq	r0, r0, #5
   166e8:	andeq	ip, r1, r8, ror #25
   166ec:			; <UNDEFINED> instruction: 0x0001cab4
   166f0:	andeq	ip, r1, r4, asr #21
   166f4:	andeq	ip, r1, r4, lsr fp
   166f8:	andeq	ip, r1, r8, lsr #26
   166fc:	strdeq	ip, [r1], -r8
   16700:	andeq	ip, r1, r4, ror #27
   16704:	andeq	ip, r1, ip, lsr #27
   16708:			; <UNDEFINED> instruction: 0x0001cdb4
   1670c:	andeq	ip, r1, r4, asr #27
   16710:			; <UNDEFINED> instruction: 0x0001cdbc
   16714:	andeq	ip, r1, ip, asr #27
   16718:	ldrdeq	ip, [r1], -r4
   1671c:	andeq	ip, r1, r4, lsr #28
   16720:	andeq	ip, r1, r4, lsr lr
   16724:	andeq	ip, r1, ip, lsr #28
   16728:	andeq	ip, r1, ip, lsl lr
   1672c:	andeq	ip, r1, r0, lsl #16
   16730:	andeq	r4, r1, r8, lsl #20
   16734:	andeq	ip, r1, r8, lsr lr
   16738:	andeq	ip, r1, r0, asr sp
   1673c:	strdeq	ip, [r1], -r4
   16740:	andeq	ip, r1, r4, lsr #27
   16744:	andeq	ip, r1, r0, ror sp
   16748:	andeq	ip, r1, r4, ror #21
   1674c:	ldrdeq	ip, [r1], -r4
   16750:	andeq	ip, r1, r4, lsl fp
   16754:	andeq	ip, r1, r4, lsl #22
   16758:	andeq	ip, r1, r4, lsr #22
   1675c:	andeq	ip, r1, r4, ror ip
   16760:	mov	r0, sl
   16764:	bl	1a06c <argp_parse@@Base+0x2664>
   16768:	ldr	r0, [r6, #12]
   1676c:	and	r0, r0, #8
   16770:	b	15924 <argp_failure@@Base+0x46c>
   16774:	mov	r0, sl
   16778:	bl	1a06c <argp_parse@@Base+0x2664>
   1677c:	ldr	ip, [sl, #28]
   16780:	ldr	r2, [sl, #24]
   16784:	ldr	lr, [sl, #16]
   16788:	sub	ip, ip, r2
   1678c:	b	15894 <argp_failure@@Base+0x3dc>
   16790:	ldr	r2, [r6, #8]
   16794:	cmp	r2, #0
   16798:	beq	15998 <argp_failure@@Base+0x4e0>
   1679c:	ldr	r1, [r6, #12]
   167a0:	mov	r0, sl
   167a4:	tst	r1, #1
   167a8:	ldrne	r1, [pc, #-136]	; 16728 <argp_failure@@Base+0x1270>
   167ac:	ldreq	r1, [pc, #-136]	; 1672c <argp_failure@@Base+0x1274>
   167b0:	bl	1a718 <argp_parse@@Base+0x2d10>
   167b4:	b	15998 <argp_failure@@Base+0x4e0>
   167b8:	mov	r3, #1
   167bc:	str	r3, [fp, #-132]	; 0xffffff7c
   167c0:	b	15914 <argp_failure@@Base+0x45c>
   167c4:	mov	r0, sl
   167c8:	bl	1a06c <argp_parse@@Base+0x2664>
   167cc:	b	16454 <argp_failure@@Base+0xf9c>
   167d0:	mov	r0, sl
   167d4:	bl	1a06c <argp_parse@@Base+0x2664>
   167d8:	b	159dc <argp_failure@@Base+0x524>
   167dc:	mov	r1, #1
   167e0:	mov	r0, sl
   167e4:	bl	1a618 <argp_parse@@Base+0x2c10>
   167e8:	cmp	r0, #0
   167ec:	beq	16528 <argp_failure@@Base+0x1070>
   167f0:	ldr	r2, [sl, #28]
   167f4:	b	1651c <argp_failure@@Base+0x1064>
   167f8:	mov	r1, #1
   167fc:	mov	r0, sl
   16800:	bl	1a618 <argp_parse@@Base+0x2c10>
   16804:	cmp	r0, #0
   16808:	beq	16508 <argp_failure@@Base+0x1050>
   1680c:	ldr	r2, [sl, #28]
   16810:	b	164f8 <argp_failure@@Base+0x1040>
   16814:	mvn	r3, #0
   16818:	str	r3, [r7, #12]
   1681c:	ldr	r3, [fp, #-108]	; 0xffffff94
   16820:	ldr	r1, [r3, #4]
   16824:	cmp	r1, #0
   16828:	beq	15734 <argp_failure@@Base+0x27c>
   1682c:	ldr	r2, [fp, #-112]	; 0xffffff90
   16830:	mov	r3, #0
   16834:	str	r3, [r2, #24]
   16838:	add	r3, r3, #1
   1683c:	cmp	r3, r1
   16840:	add	r2, r2, #28
   16844:	bcc	16834 <argp_failure@@Base+0x137c>
   16848:	ldr	r0, [fp, #-112]	; 0xffffff90
   1684c:	ldr	r3, [pc, #-292]	; 16730 <argp_failure@@Base+0x1278>
   16850:	mov	r2, #28
   16854:	bl	11274 <qsort@plt>
   16858:	b	15734 <argp_failure@@Base+0x27c>
   1685c:	mvn	r3, #0
   16860:	str	r3, [r7, #12]
   16864:	ldr	r3, [fp, #-108]	; 0xffffff94
   16868:	ldr	r3, [r3, #4]
   1686c:	cmp	r3, #0
   16870:	str	r3, [fp, #-120]	; 0xffffff88
   16874:	sub	r6, r3, #1
   16878:	bne	160d8 <argp_failure@@Base+0xc20>
   1687c:	b	15734 <argp_failure@@Base+0x27c>
   16880:	mov	r4, r9
   16884:	b	1659c <argp_failure@@Base+0x10e4>
   16888:	mov	r1, #1
   1688c:	mov	r0, sl
   16890:	bl	1a618 <argp_parse@@Base+0x2c10>
   16894:	cmp	r0, #0
   16898:	beq	16690 <argp_failure@@Base+0x11d8>
   1689c:	ldr	r3, [sl, #28]
   168a0:	b	16680 <argp_failure@@Base+0x11c8>
   168a4:	mov	r0, sl
   168a8:	bl	1a06c <argp_parse@@Base+0x2664>
   168ac:	ldr	r3, [sl, #28]
   168b0:	b	1666c <argp_failure@@Base+0x11b4>
   168b4:	mov	r3, r8
   168b8:	mov	r4, r5
   168bc:	b	15cfc <argp_failure@@Base+0x844>
   168c0:	cmp	r5, r6
   168c4:	bhi	16a40 <argp_failure@@Base+0x1588>
   168c8:	ldr	r1, [sl, #32]
   168cc:	add	r2, r3, #3
   168d0:	cmp	r1, r2
   168d4:	bcs	168f0 <argp_failure@@Base+0x1438>
   168d8:	mov	r1, #3
   168dc:	mov	r0, sl
   168e0:	bl	1a618 <argp_parse@@Base+0x2c10>
   168e4:	cmp	r0, #0
   168e8:	beq	1660c <argp_failure@@Base+0x1154>
   168ec:	ldr	r3, [sl, #28]
   168f0:	ldr	r2, [pc, #-452]	; 16734 <argp_failure@@Base+0x127c>
   168f4:	ldrh	r1, [r2]
   168f8:	ldrb	r2, [r2, #2]
   168fc:	strh	r1, [r3]
   16900:	strb	r2, [r3, #2]
   16904:	ldr	r3, [sl, #28]
   16908:	add	r3, r3, #3
   1690c:	str	r3, [sl, #28]
   16910:	b	1660c <argp_failure@@Base+0x1154>
   16914:	ldr	r3, [fp, #-108]	; 0xffffff94
   16918:	ldr	r8, [r3]
   1691c:	str	r4, [fp, #-88]	; 0xffffffa8
   16920:	str	r4, [fp, #-84]	; 0xffffffac
   16924:	str	r4, [fp, #-80]	; 0xffffffb0
   16928:	b	15874 <argp_failure@@Base+0x3bc>
   1692c:	ldr	r0, [sl, #28]
   16930:	mov	r2, r5
   16934:	mov	r1, r4
   16938:	bl	11088 <memcpy@plt>
   1693c:	ldr	r3, [sl, #28]
   16940:	add	r5, r3, r5
   16944:	str	r5, [sl, #28]
   16948:	b	16644 <argp_failure@@Base+0x118c>
   1694c:	mov	r0, sl
   16950:	bl	1a06c <argp_parse@@Base+0x2664>
   16954:	ldr	r3, [sl, #28]
   16958:	ldr	r2, [sl, #24]
   1695c:	ldr	r1, [sl, #16]
   16960:	ldr	r6, [sl, #20]
   16964:	ldr	r7, [fp, #-96]	; 0xffffffa0
   16968:	sub	r2, r3, r2
   1696c:	cmp	r2, r1
   16970:	bic	r6, r6, r6, asr #31
   16974:	ldr	r5, [r7, #20]
   16978:	bls	165d8 <argp_failure@@Base+0x1120>
   1697c:	mov	r0, sl
   16980:	bl	1a06c <argp_parse@@Base+0x2664>
   16984:	ldr	r3, [sl, #28]
   16988:	ldr	r2, [sl, #24]
   1698c:	ldr	r1, [sl, #16]
   16990:	sub	r2, r3, r2
   16994:	str	r5, [sl, #4]
   16998:	mov	r5, r7
   1699c:	ldr	r7, [r7, #20]
   169a0:	cmp	r2, r1
   169a4:	movls	r5, r7
   169a8:	bls	165e0 <argp_failure@@Base+0x1128>
   169ac:	mov	r0, sl
   169b0:	bl	1a06c <argp_parse@@Base+0x2664>
   169b4:	ldr	r5, [r5, #20]
   169b8:	ldr	r3, [sl, #28]
   169bc:	b	165e0 <argp_failure@@Base+0x1128>
   169c0:	str	r5, [sp]
   169c4:	ldr	r3, [pc, #-660]	; 16738 <argp_failure@@Base+0x1280>
   169c8:	mov	r1, r2
   169cc:	ldr	r0, [fp, #-104]	; 0xffffff98
   169d0:	bl	154b8 <argp_failure@@Base>
   169d4:	b	15e18 <argp_failure@@Base+0x960>
   169d8:	ldr	r3, [pc, #-676]	; 1673c <argp_failure@@Base+0x1284>
   169dc:	ldr	r1, [pc, #-676]	; 16740 <argp_failure@@Base+0x1288>
   169e0:	mov	r2, #0
   169e4:	ldr	r0, [fp, #-104]	; 0xffffff98
   169e8:	stm	sp, {r1, r3}
   169ec:	mov	r1, r2
   169f0:	ldr	r3, [pc, #-692]	; 16744 <argp_failure@@Base+0x128c>
   169f4:	bl	154b8 <argp_failure@@Base>
   169f8:	b	15704 <argp_failure@@Base+0x24c>
   169fc:	ldr	r3, [pc, #-700]	; 16748 <argp_failure@@Base+0x1290>
   16a00:	b	169dc <argp_failure@@Base+0x1524>
   16a04:	mov	r1, #1
   16a08:	mov	r0, sl
   16a0c:	bl	1a618 <argp_parse@@Base+0x2c10>
   16a10:	cmp	r0, #0
   16a14:	beq	157a4 <argp_failure@@Base+0x2ec>
   16a18:	ldr	r3, [sl, #28]
   16a1c:	b	15794 <argp_failure@@Base+0x2dc>
   16a20:	ldr	r0, [r6, #16]
   16a24:	sub	r2, fp, #76	; 0x4c
   16a28:	ldr	r1, [r8, #20]
   16a2c:	bl	14118 <__assert_fail@plt+0x2e50>
   16a30:	b	16690 <argp_failure@@Base+0x11d8>
   16a34:	ldr	r0, [fp, #-136]	; 0xffffff78
   16a38:	bl	110f4 <funlockfile@plt>
   16a3c:	b	15804 <argp_failure@@Base+0x34c>
   16a40:	ldr	r2, [sl, #24]
   16a44:	ldr	r1, [sl, #16]
   16a48:	sub	r3, r3, r2
   16a4c:	cmp	r3, r1
   16a50:	bhi	16bc8 <argp_failure@@Base+0x1710>
   16a54:	ldr	r3, [sl, #20]
   16a58:	mov	r6, #32
   16a5c:	cmp	r3, #0
   16a60:	subge	r5, r5, r3
   16a64:	mov	r7, #1
   16a68:	cmp	r5, #0
   16a6c:	sub	r5, r5, #1
   16a70:	ble	1660c <argp_failure@@Base+0x1154>
   16a74:	ldr	r3, [sl, #28]
   16a78:	ldr	r2, [sl, #32]
   16a7c:	cmp	r3, r2
   16a80:	bcs	16aac <argp_failure@@Base+0x15f4>
   16a84:	add	r2, r3, #1
   16a88:	cmp	r5, #0
   16a8c:	str	r2, [sl, #28]
   16a90:	sub	r5, r5, #1
   16a94:	strb	r6, [r3]
   16a98:	ble	1660c <argp_failure@@Base+0x1154>
   16a9c:	ldr	r3, [sl, #28]
   16aa0:	ldr	r2, [sl, #32]
   16aa4:	cmp	r3, r2
   16aa8:	bcc	16a84 <argp_failure@@Base+0x15cc>
   16aac:	mov	r1, r7
   16ab0:	mov	r0, sl
   16ab4:	bl	1a618 <argp_parse@@Base+0x2c10>
   16ab8:	cmp	r0, #0
   16abc:	beq	16a68 <argp_failure@@Base+0x15b0>
   16ac0:	ldr	r3, [sl, #28]
   16ac4:	b	16a84 <argp_failure@@Base+0x15cc>
   16ac8:	mov	r1, #1
   16acc:	mov	r0, sl
   16ad0:	bl	1a618 <argp_parse@@Base+0x2c10>
   16ad4:	cmp	r0, #0
   16ad8:	beq	1660c <argp_failure@@Base+0x1154>
   16adc:	ldr	r3, [sl, #28]
   16ae0:	b	165fc <argp_failure@@Base+0x1144>
   16ae4:	ldr	r4, [pc, #-912]	; 1675c <argp_failure@@Base+0x12a4>
   16ae8:	ldr	r9, [fp, #-112]	; 0xffffff90
   16aec:	ldr	r3, [sl, #28]
   16af0:	ldr	r2, [sl, #32]
   16af4:	cmp	r3, r2
   16af8:	bcs	16bac <argp_failure@@Base+0x16f4>
   16afc:	add	r1, r3, #1
   16b00:	mov	r2, #10
   16b04:	str	r1, [sl, #28]
   16b08:	strb	r2, [r3]
   16b0c:	mov	r0, r4
   16b10:	bl	111a8 <strlen@plt>
   16b14:	subs	r6, r0, #0
   16b18:	beq	16b9c <argp_failure@@Base+0x16e4>
   16b1c:	ldr	r0, [sl, #28]
   16b20:	ldr	r2, [sl, #32]
   16b24:	add	r3, r0, r6
   16b28:	cmp	r2, r3
   16b2c:	bcs	16b48 <argp_failure@@Base+0x1690>
   16b30:	mov	r1, r6
   16b34:	mov	r0, sl
   16b38:	bl	1a618 <argp_parse@@Base+0x2c10>
   16b3c:	cmp	r0, #0
   16b40:	beq	16b9c <argp_failure@@Base+0x16e4>
   16b44:	ldr	r0, [sl, #28]
   16b48:	mov	r2, r6
   16b4c:	mov	r1, r4
   16b50:	bl	11088 <memcpy@plt>
   16b54:	ldr	r3, [sl, #28]
   16b58:	add	r3, r3, r6
   16b5c:	str	r3, [sl, #28]
   16b60:	ldr	r2, [sl, #32]
   16b64:	cmp	r2, r3
   16b68:	bls	16bf8 <argp_failure@@Base+0x1740>
   16b6c:	add	r1, r3, #1
   16b70:	mov	r2, #10
   16b74:	str	r1, [sl, #28]
   16b78:	strb	r2, [r3]
   16b7c:	b	15bb4 <argp_failure@@Base+0x6fc>
   16b80:	mov	r1, #1
   16b84:	mov	r0, sl
   16b88:	bl	1a618 <argp_parse@@Base+0x2c10>
   16b8c:	cmp	r0, #0
   16b90:	beq	15848 <argp_failure@@Base+0x390>
   16b94:	ldr	r3, [sl, #28]
   16b98:	b	15838 <argp_failure@@Base+0x380>
   16b9c:	ldr	r3, [sl, #28]
   16ba0:	b	16b60 <argp_failure@@Base+0x16a8>
   16ba4:	ldr	r3, [pc, #-1120]	; 1674c <argp_failure@@Base+0x1294>
   16ba8:	b	169dc <argp_failure@@Base+0x1524>
   16bac:	mov	r1, #1
   16bb0:	mov	r0, sl
   16bb4:	bl	1a618 <argp_parse@@Base+0x2c10>
   16bb8:	cmp	r0, #0
   16bbc:	beq	16b0c <argp_failure@@Base+0x1654>
   16bc0:	ldr	r3, [sl, #28]
   16bc4:	b	16afc <argp_failure@@Base+0x1644>
   16bc8:	mov	r0, sl
   16bcc:	bl	1a06c <argp_parse@@Base+0x2664>
   16bd0:	b	16a54 <argp_failure@@Base+0x159c>
   16bd4:	ldr	r3, [pc, #-1164]	; 16750 <argp_failure@@Base+0x1298>
   16bd8:	b	169dc <argp_failure@@Base+0x1524>
   16bdc:	ldr	r3, [pc, #-1168]	; 16754 <argp_failure@@Base+0x129c>
   16be0:	b	169dc <argp_failure@@Base+0x1524>
   16be4:	mov	r9, r1
   16be8:	ldr	r4, [pc, #-1172]	; 1675c <argp_failure@@Base+0x12a4>
   16bec:	b	16aec <argp_failure@@Base+0x1634>
   16bf0:	ldr	r3, [pc, #-1184]	; 16758 <argp_failure@@Base+0x12a0>
   16bf4:	b	169dc <argp_failure@@Base+0x1524>
   16bf8:	mov	r1, #1
   16bfc:	mov	r0, sl
   16c00:	bl	1a618 <argp_parse@@Base+0x2c10>
   16c04:	cmp	r0, #0
   16c08:	beq	15bb4 <argp_failure@@Base+0x6fc>
   16c0c:	ldr	r3, [sl, #28]
   16c10:	b	16b6c <argp_failure@@Base+0x16b4>
   16c14:	ldr	r9, [fp, #-112]	; 0xffffff90
   16c18:	ldr	r4, [pc, #-1220]	; 1675c <argp_failure@@Base+0x12a4>
   16c1c:	b	16aec <argp_failure@@Base+0x1634>

00016c20 <argp_help@@Base>:
   16c20:	push	{lr}		; (str lr, [sp, #-4]!)
   16c24:	sub	sp, sp, #12
   16c28:	str	r3, [sp]
   16c2c:	mov	r3, r2
   16c30:	mov	r2, r1
   16c34:	mov	r1, #0
   16c38:	bl	156c0 <argp_failure@@Base+0x208>
   16c3c:	add	sp, sp, #12
   16c40:	pop	{pc}		; (ldr pc, [sp], #4)

00016c44 <argp_state_help@@Base>:
   16c44:	push	{r4, r5, lr}
   16c48:	subs	r4, r0, #0
   16c4c:	sub	sp, sp, #12
   16c50:	mov	r5, r2
   16c54:	beq	16cb4 <argp_state_help@@Base+0x70>
   16c58:	ldr	r3, [r4, #16]
   16c5c:	tst	r3, #2
   16c60:	bne	16cac <argp_state_help@@Base+0x68>
   16c64:	cmp	r1, #0
   16c68:	beq	16cac <argp_state_help@@Base+0x68>
   16c6c:	tst	r3, #64	; 0x40
   16c70:	ldr	r3, [r4, #40]	; 0x28
   16c74:	orrne	r5, r5, #128	; 0x80
   16c78:	ldr	r0, [r4]
   16c7c:	mov	r2, r1
   16c80:	str	r3, [sp]
   16c84:	mov	r1, r4
   16c88:	mov	r3, r5
   16c8c:	bl	156c0 <argp_failure@@Base+0x208>
   16c90:	ldr	r3, [r4, #16]
   16c94:	tst	r3, #32
   16c98:	bne	16cac <argp_state_help@@Base+0x68>
   16c9c:	ands	r0, r5, #256	; 0x100
   16ca0:	bne	16ce0 <argp_state_help@@Base+0x9c>
   16ca4:	tst	r5, #512	; 0x200
   16ca8:	bne	16cdc <argp_state_help@@Base+0x98>
   16cac:	add	sp, sp, #12
   16cb0:	pop	{r4, r5, pc}
   16cb4:	cmp	r1, #0
   16cb8:	beq	16cac <argp_state_help@@Base+0x68>
   16cbc:	ldr	r3, [pc, #40]	; 16cec <argp_state_help@@Base+0xa8>
   16cc0:	mov	r2, r1
   16cc4:	mov	r1, r4
   16cc8:	ldr	ip, [r3]
   16ccc:	mov	r3, r5
   16cd0:	str	ip, [sp]
   16cd4:	bl	156c0 <argp_failure@@Base+0x208>
   16cd8:	b	16c9c <argp_state_help@@Base+0x58>
   16cdc:	bl	1119c <exit@plt>
   16ce0:	ldr	r3, [pc, #8]	; 16cf0 <argp_state_help@@Base+0xac>
   16ce4:	ldr	r0, [r3]
   16ce8:	bl	1119c <exit@plt>
   16cec:	muleq	r2, r8, r2
   16cf0:	andeq	lr, r2, r0, lsl #5

00016cf4 <argp_error@@Base>:
   16cf4:	push	{r1, r2, r3}
   16cf8:	push	{r4, r5, lr}
   16cfc:	subs	r5, r0, #0
   16d00:	sub	sp, sp, #16
   16d04:	beq	16e14 <argp_error@@Base+0x120>
   16d08:	ldr	r3, [r5, #16]
   16d0c:	tst	r3, #2
   16d10:	bne	16e04 <argp_error@@Base+0x110>
   16d14:	ldr	r4, [r5, #44]	; 0x2c
   16d18:	cmp	r4, #0
   16d1c:	beq	16e04 <argp_error@@Base+0x110>
   16d20:	mov	r0, r4
   16d24:	bl	1125c <flockfile@plt>
   16d28:	ldr	r0, [r5, #40]	; 0x28
   16d2c:	add	r3, sp, #32
   16d30:	str	r3, [sp, #12]
   16d34:	mov	r1, r4
   16d38:	bl	10fec <fputs_unlocked@plt>
   16d3c:	ldr	r3, [r4, #20]
   16d40:	ldr	r2, [r4, #24]
   16d44:	cmp	r3, r2
   16d48:	addcc	r1, r3, #1
   16d4c:	movcc	r2, #58	; 0x3a
   16d50:	strcc	r1, [r4, #20]
   16d54:	strbcc	r2, [r3]
   16d58:	bcs	16e40 <argp_error@@Base+0x14c>
   16d5c:	ldr	r3, [r4, #20]
   16d60:	ldr	r2, [r4, #24]
   16d64:	cmp	r3, r2
   16d68:	addcc	r1, r3, #1
   16d6c:	movcc	r2, #32
   16d70:	strcc	r1, [r4, #20]
   16d74:	strbcc	r2, [r3]
   16d78:	bcs	16e60 <argp_error@@Base+0x16c>
   16d7c:	ldr	r1, [sp, #28]
   16d80:	ldr	r2, [sp, #12]
   16d84:	mov	r0, r4
   16d88:	bl	11244 <vfprintf@plt>
   16d8c:	ldr	r3, [r4, #20]
   16d90:	ldr	r2, [r4, #24]
   16d94:	cmp	r3, r2
   16d98:	addcc	r1, r3, #1
   16d9c:	movcc	r2, #10
   16da0:	strcc	r1, [r4, #20]
   16da4:	strbcc	r2, [r3]
   16da8:	bcs	16e50 <argp_error@@Base+0x15c>
   16dac:	cmp	r5, #0
   16db0:	beq	16e70 <argp_error@@Base+0x17c>
   16db4:	ldr	r3, [r5, #16]
   16db8:	tst	r3, #2
   16dbc:	bne	16dfc <argp_error@@Base+0x108>
   16dc0:	ldr	r2, [r5, #40]	; 0x28
   16dc4:	tst	r3, #64	; 0x40
   16dc8:	moveq	r3, #260	; 0x104
   16dcc:	movne	r3, #388	; 0x184
   16dd0:	ldr	r0, [r5]
   16dd4:	mov	r1, r5
   16dd8:	str	r2, [sp]
   16ddc:	mov	r2, r4
   16de0:	bl	156c0 <argp_failure@@Base+0x208>
   16de4:	ldr	r3, [r5, #16]
   16de8:	tst	r3, #32
   16dec:	bne	16dfc <argp_error@@Base+0x108>
   16df0:	ldr	r3, [pc, #156]	; 16e94 <argp_error@@Base+0x1a0>
   16df4:	ldr	r0, [r3]
   16df8:	bl	1119c <exit@plt>
   16dfc:	mov	r0, r4
   16e00:	bl	110f4 <funlockfile@plt>
   16e04:	add	sp, sp, #16
   16e08:	pop	{r4, r5, lr}
   16e0c:	add	sp, sp, #12
   16e10:	bx	lr
   16e14:	ldr	r3, [pc, #124]	; 16e98 <argp_error@@Base+0x1a4>
   16e18:	ldr	r4, [r3]
   16e1c:	cmp	r4, #0
   16e20:	beq	16e04 <argp_error@@Base+0x110>
   16e24:	mov	r0, r4
   16e28:	bl	1125c <flockfile@plt>
   16e2c:	ldr	r2, [pc, #104]	; 16e9c <argp_error@@Base+0x1a8>
   16e30:	add	r3, sp, #32
   16e34:	str	r3, [sp, #12]
   16e38:	ldr	r0, [r2]
   16e3c:	b	16d34 <argp_error@@Base+0x40>
   16e40:	mov	r1, #58	; 0x3a
   16e44:	mov	r0, r4
   16e48:	bl	11214 <__overflow@plt>
   16e4c:	b	16d5c <argp_error@@Base+0x68>
   16e50:	mov	r1, #10
   16e54:	mov	r0, r4
   16e58:	bl	11214 <__overflow@plt>
   16e5c:	b	16dac <argp_error@@Base+0xb8>
   16e60:	mov	r1, #32
   16e64:	mov	r0, r4
   16e68:	bl	11214 <__overflow@plt>
   16e6c:	b	16d7c <argp_error@@Base+0x88>
   16e70:	ldr	r1, [pc, #36]	; 16e9c <argp_error@@Base+0x1a8>
   16e74:	mov	r2, r4
   16e78:	mov	r3, #260	; 0x104
   16e7c:	ldr	r0, [r1]
   16e80:	mov	r1, r5
   16e84:	str	r0, [sp]
   16e88:	mov	r0, r5
   16e8c:	bl	156c0 <argp_failure@@Base+0x208>
   16e90:	b	16df0 <argp_error@@Base+0xfc>
   16e94:	andeq	lr, r2, r0, lsl #5
   16e98:	andeq	lr, r2, r0, lsr #5
   16e9c:	muleq	r2, r8, r2
   16ea0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16ea4:	sub	sp, sp, #36	; 0x24
   16ea8:	ldr	sl, [r0]
   16eac:	str	r0, [sp, #12]
   16eb0:	cmp	sl, #0
   16eb4:	str	r1, [sp, #16]
   16eb8:	str	r2, [sp, #20]
   16ebc:	mov	r9, r3
   16ec0:	ldr	r8, [r0, #16]
   16ec4:	ldr	r7, [sp, #72]	; 0x48
   16ec8:	beq	17094 <argp_error@@Base+0x3a0>
   16ecc:	add	fp, sl, #24
   16ed0:	str	r8, [sp, #28]
   16ed4:	str	r3, [sp, #24]
   16ed8:	ldr	r4, [fp, #-20]	; 0xffffffec
   16edc:	sub	r1, fp, #24
   16ee0:	cmp	r4, #0
   16ee4:	bne	16ef4 <argp_error@@Base+0x200>
   16ee8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16eec:	cmp	r3, #0
   16ef0:	beq	17068 <argp_error@@Base+0x374>
   16ef4:	ldr	r3, [fp, #-12]
   16ef8:	tst	r3, #4
   16efc:	moveq	sl, r1
   16f00:	moveq	r5, r3
   16f04:	ldrne	r5, [sl, #12]
   16f08:	ands	r5, r5, #8
   16f0c:	bne	17050 <argp_error@@Base+0x35c>
   16f10:	tst	r3, #8
   16f14:	bne	16f90 <argp_error@@Base+0x29c>
   16f18:	sub	r3, r4, #1
   16f1c:	cmp	r3, #254	; 0xfe
   16f20:	bhi	16f90 <argp_error@@Base+0x29c>
   16f24:	bl	11184 <__ctype_b_loc@plt>
   16f28:	lsl	r3, r4, #1
   16f2c:	ldr	r1, [r0]
   16f30:	ldrh	r3, [r1, r3]
   16f34:	tst	r3, #16384	; 0x4000
   16f38:	beq	16f90 <argp_error@@Base+0x29c>
   16f3c:	ldr	r3, [r7, #4]
   16f40:	add	r1, r3, #1
   16f44:	str	r1, [r7, #4]
   16f48:	strb	r4, [r3]
   16f4c:	ldr	r3, [sl, #8]
   16f50:	cmp	r3, #0
   16f54:	beq	16f84 <argp_error@@Base+0x290>
   16f58:	ldr	r3, [r7, #4]
   16f5c:	mov	r2, #58	; 0x3a
   16f60:	add	r1, r3, #1
   16f64:	str	r1, [r7, #4]
   16f68:	strb	r2, [r3]
   16f6c:	ldr	r3, [sl, #12]
   16f70:	tst	r3, #1
   16f74:	ldrne	r3, [r7, #4]
   16f78:	addne	r1, r3, #1
   16f7c:	strne	r1, [r7, #4]
   16f80:	strbne	r2, [r3]
   16f84:	ldr	r3, [r7, #4]
   16f88:	mov	r2, #0
   16f8c:	strb	r2, [r3]
   16f90:	ldr	r4, [fp, #-24]	; 0xffffffe8
   16f94:	cmp	r4, #0
   16f98:	beq	17050 <argp_error@@Base+0x35c>
   16f9c:	ldr	r8, [r7]
   16fa0:	ldr	r6, [r8, #8]
   16fa4:	ldr	r0, [r6]
   16fa8:	cmp	r0, #0
   16fac:	beq	16fd0 <argp_error@@Base+0x2dc>
   16fb0:	mov	r9, r6
   16fb4:	mov	r1, r4
   16fb8:	bl	11004 <strcmp@plt>
   16fbc:	cmp	r0, #0
   16fc0:	beq	17058 <argp_error@@Base+0x364>
   16fc4:	ldr	r0, [r9, #16]!
   16fc8:	cmp	r0, #0
   16fcc:	bne	16fb4 <argp_error@@Base+0x2c0>
   16fd0:	ldr	r3, [sl, #8]
   16fd4:	ldr	r1, [r7, #8]
   16fd8:	cmp	r3, #0
   16fdc:	str	r4, [r1]
   16fe0:	beq	16ff4 <argp_error@@Base+0x300>
   16fe4:	ldr	r3, [sl, #12]
   16fe8:	tst	r3, #1
   16fec:	moveq	r5, #1
   16ff0:	movne	r5, #2
   16ff4:	str	r5, [r1, #4]
   16ff8:	ldr	ip, [fp, #-20]	; 0xffffffec
   16ffc:	mov	r3, #0
   17000:	cmp	ip, r3
   17004:	str	r3, [r1, #8]
   17008:	ldr	r2, [sp, #24]
   1700c:	ldr	r3, [r8, #48]	; 0x30
   17010:	ldreq	ip, [sl, #4]
   17014:	sub	r3, r2, r3
   17018:	bic	ip, ip, #-16777216	; 0xff000000
   1701c:	asr	r3, r3, #2
   17020:	add	lr, r1, #16
   17024:	rsb	r0, r3, r3, lsl #3
   17028:	add	r0, r0, r0, lsl #6
   1702c:	add	r0, r3, r0, lsl #3
   17030:	rsb	r0, r0, r0, lsl #15
   17034:	add	r3, r3, r0, lsl #3
   17038:	add	r3, r3, #1
   1703c:	add	r3, ip, r3, lsl #24
   17040:	str	r3, [r1, #12]
   17044:	mov	r3, #0
   17048:	str	lr, [r7, #8]
   1704c:	str	r3, [r1, #16]
   17050:	add	fp, fp, #24
   17054:	b	16ed8 <argp_error@@Base+0x1e4>
   17058:	sub	r6, r9, r6
   1705c:	cmn	r6, #15
   17060:	bge	17050 <argp_error@@Base+0x35c>
   17064:	b	16fd0 <argp_error@@Base+0x2dc>
   17068:	ldr	r3, [fp, #-8]
   1706c:	cmp	r3, #0
   17070:	bne	16ef4 <argp_error@@Base+0x200>
   17074:	ldr	r3, [fp, #-4]
   17078:	cmp	r3, #0
   1707c:	bne	16ef4 <argp_error@@Base+0x200>
   17080:	ldr	r3, [sp, #12]
   17084:	ldr	r8, [sp, #28]
   17088:	ldr	r9, [sp, #24]
   1708c:	ldr	r3, [r3, #4]
   17090:	b	170a8 <argp_error@@Base+0x3b4>
   17094:	ldr	r3, [r0, #4]
   17098:	cmp	r3, #0
   1709c:	moveq	r0, r9
   170a0:	moveq	r9, r3
   170a4:	beq	17118 <argp_error@@Base+0x424>
   170a8:	ldr	r2, [r7, #4]
   170ac:	ldr	r1, [sp, #12]
   170b0:	str	r3, [r9]
   170b4:	cmp	r8, #0
   170b8:	stmib	r9, {r1, r2}
   170bc:	ldr	r2, [sp, #16]
   170c0:	mov	r3, #0
   170c4:	str	r2, [r9, #16]
   170c8:	ldr	r2, [sp, #20]
   170cc:	str	r3, [r9, #12]
   170d0:	str	r2, [r9, #20]
   170d4:	str	r3, [r9, #24]
   170d8:	str	r3, [r9, #32]
   170dc:	str	r3, [r9, #28]
   170e0:	beq	17114 <argp_error@@Base+0x420>
   170e4:	ldr	r2, [r8]
   170e8:	cmp	r2, r3
   170ec:	beq	17160 <argp_error@@Base+0x46c>
   170f0:	add	r3, r3, #1
   170f4:	ldr	r2, [r8, r3, lsl #4]
   170f8:	cmp	r2, #0
   170fc:	bne	170f0 <argp_error@@Base+0x3fc>
   17100:	lsl	r3, r3, #2
   17104:	ldr	r2, [r7, #12]
   17108:	add	r3, r2, r3
   1710c:	str	r2, [r9, #28]
   17110:	str	r3, [r7, #12]
   17114:	add	r0, r9, #36	; 0x24
   17118:	cmp	r8, #0
   1711c:	beq	17158 <argp_error@@Base+0x464>
   17120:	ldr	r1, [r8]
   17124:	cmp	r1, #0
   17128:	beq	17158 <argp_error@@Base+0x464>
   1712c:	mov	r2, #0
   17130:	add	r4, r2, #1
   17134:	mov	r3, r0
   17138:	str	r7, [sp]
   1713c:	mov	r0, r1
   17140:	mov	r1, r9
   17144:	bl	16ea0 <argp_error@@Base+0x1ac>
   17148:	ldr	r1, [r8, r4, lsl #4]
   1714c:	mov	r2, r4
   17150:	cmp	r1, #0
   17154:	bne	17130 <argp_error@@Base+0x43c>
   17158:	add	sp, sp, #36	; 0x24
   1715c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17160:	mov	r3, r2
   17164:	b	17104 <argp_error@@Base+0x410>
   17168:	cmp	r0, #86	; 0x56
   1716c:	beq	17178 <argp_error@@Base+0x484>
   17170:	mov	r0, #7
   17174:	bx	lr
   17178:	ldr	r3, [pc, #104]	; 171e8 <argp_error@@Base+0x4f4>
   1717c:	push	{r4, lr}
   17180:	mov	r4, r2
   17184:	ldr	r3, [r3]
   17188:	cmp	r3, #0
   1718c:	beq	171b0 <argp_error@@Base+0x4bc>
   17190:	mov	r1, r2
   17194:	ldr	r0, [r2, #48]	; 0x30
   17198:	blx	r3
   1719c:	ldr	r0, [r4, #16]
   171a0:	ands	r0, r0, #32
   171a4:	beq	171e4 <argp_error@@Base+0x4f0>
   171a8:	mov	r0, #0
   171ac:	pop	{r4, pc}
   171b0:	ldr	r3, [pc, #52]	; 171ec <argp_error@@Base+0x4f8>
   171b4:	ldr	r2, [r3]
   171b8:	cmp	r2, #0
   171bc:	beq	171d0 <argp_error@@Base+0x4dc>
   171c0:	ldr	r1, [pc, #40]	; 171f0 <argp_error@@Base+0x4fc>
   171c4:	ldr	r0, [r4, #48]	; 0x30
   171c8:	bl	111c0 <fprintf@plt>
   171cc:	b	1719c <argp_error@@Base+0x4a8>
   171d0:	ldr	r2, [pc, #28]	; 171f4 <argp_error@@Base+0x500>
   171d4:	ldr	r1, [pc, #28]	; 171f8 <argp_error@@Base+0x504>
   171d8:	mov	r0, r4
   171dc:	bl	16cf4 <argp_error@@Base>
   171e0:	b	1719c <argp_error@@Base+0x4a8>
   171e4:	bl	1119c <exit@plt>
   171e8:	andeq	lr, r2, ip, asr #5
   171ec:	andeq	lr, r2, r4, ror r3
   171f0:	strdeq	sp, [r1], -r8
   171f4:	andeq	ip, r1, r8, ror #30
   171f8:	andeq	ip, r1, ip, lsl #31
   171fc:	cmn	r0, #3
   17200:	push	{r4, r5, lr}
   17204:	mov	r4, r2
   17208:	sub	sp, sp, #12
   1720c:	beq	172f0 <argp_error@@Base+0x5fc>
   17210:	ble	17280 <argp_error@@Base+0x58c>
   17214:	cmn	r0, #2
   17218:	beq	17240 <argp_error@@Base+0x54c>
   1721c:	cmp	r0, #63	; 0x3f
   17220:	bne	172e4 <argp_error@@Base+0x5f0>
   17224:	mov	r0, r4
   17228:	ldr	r2, [pc, #236]	; 1731c <argp_error@@Base+0x628>
   1722c:	ldr	r1, [r4, #48]	; 0x30
   17230:	bl	16c44 <argp_state_help@@Base>
   17234:	mov	r0, #0
   17238:	add	sp, sp, #12
   1723c:	pop	{r4, r5, pc}
   17240:	ldr	r3, [pc, #216]	; 17320 <argp_error@@Base+0x62c>
   17244:	mov	r0, r1
   17248:	str	r1, [sp, #4]
   1724c:	str	r1, [r3]
   17250:	bl	188d8 <argp_parse@@Base+0xed0>
   17254:	ldr	r3, [r4, #16]
   17258:	ldr	r2, [pc, #196]	; 17324 <argp_error@@Base+0x630>
   1725c:	and	r3, r3, #3
   17260:	cmp	r3, #1
   17264:	ldr	r1, [sp, #4]
   17268:	str	r0, [r4, #40]	; 0x28
   1726c:	str	r0, [r2]
   17270:	beq	1730c <argp_error@@Base+0x618>
   17274:	mov	r0, #0
   17278:	add	sp, sp, #12
   1727c:	pop	{r4, r5, pc}
   17280:	cmn	r0, #4
   17284:	bne	172e4 <argp_error@@Base+0x5f0>
   17288:	cmp	r1, #0
   1728c:	ldr	r0, [pc, #148]	; 17328 <argp_error@@Base+0x634>
   17290:	mov	r2, #10
   17294:	movne	r0, r1
   17298:	mov	r1, #0
   1729c:	bl	11010 <strtol@plt>
   172a0:	ldr	r4, [pc, #132]	; 1732c <argp_error@@Base+0x638>
   172a4:	str	r0, [r4]
   172a8:	ldr	r3, [r4]
   172ac:	cmp	r3, #0
   172b0:	sub	r3, r3, #1
   172b4:	str	r3, [r4]
   172b8:	ble	17274 <argp_error@@Base+0x580>
   172bc:	mov	r5, #1
   172c0:	mov	r0, r5
   172c4:	bl	110b8 <sleep@plt>
   172c8:	ldr	r3, [r4]
   172cc:	cmp	r3, #0
   172d0:	sub	r3, r3, #1
   172d4:	str	r3, [r4]
   172d8:	bgt	172c0 <argp_error@@Base+0x5cc>
   172dc:	mov	r0, #0
   172e0:	b	17278 <argp_error@@Base+0x584>
   172e4:	mov	r0, #7
   172e8:	add	sp, sp, #12
   172ec:	pop	{r4, r5, pc}
   172f0:	mov	r0, r4
   172f4:	ldr	r2, [pc, #52]	; 17330 <argp_error@@Base+0x63c>
   172f8:	ldr	r1, [r4, #48]	; 0x30
   172fc:	bl	16c44 <argp_state_help@@Base>
   17300:	mov	r0, #0
   17304:	add	sp, sp, #12
   17308:	pop	{r4, r5, pc}
   1730c:	ldr	r3, [r4, #8]
   17310:	mov	r0, #0
   17314:	str	r1, [r3]
   17318:	b	17238 <argp_error@@Base+0x544>
   1731c:	andeq	r0, r0, sl, ror r2
   17320:	muleq	r2, ip, r2
   17324:	muleq	r2, r8, r2
   17328:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   1732c:	andeq	lr, r2, r8, asr #5
   17330:	andeq	r0, r0, r1, lsl #4
   17334:	ldr	r3, [r0]
   17338:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1733c:	cmp	r3, #0
   17340:	sub	sp, sp, #12
   17344:	ldr	lr, [r0, #16]
   17348:	beq	17380 <argp_error@@Base+0x68c>
   1734c:	ldr	r0, [r1, #8]
   17350:	mov	r2, #0
   17354:	add	r0, r0, #1
   17358:	str	r0, [r1, #8]
   1735c:	add	r3, r3, #24
   17360:	ldr	r0, [r3, #-20]	; 0xffffffec
   17364:	cmp	r0, #0
   17368:	bne	17378 <argp_error@@Base+0x684>
   1736c:	ldr	r0, [r3, #-24]	; 0xffffffe8
   17370:	cmp	r0, #0
   17374:	beq	17938 <argp_error@@Base+0xc44>
   17378:	add	r2, r2, #1
   1737c:	b	1735c <argp_error@@Base+0x668>
   17380:	ldr	r3, [r0, #4]
   17384:	cmp	r3, #0
   17388:	ldrne	r3, [r1, #8]
   1738c:	addne	r3, r3, #1
   17390:	strne	r3, [r1, #8]
   17394:	cmp	lr, #0
   17398:	beq	17724 <argp_error@@Base+0xa30>
   1739c:	ldr	r0, [lr]
   173a0:	cmp	r0, #0
   173a4:	beq	17724 <argp_error@@Base+0xa30>
   173a8:	mov	r6, r1
   173ac:	str	lr, [sp]
   173b0:	ldr	r2, [r0]
   173b4:	ldr	r7, [r0, #16]
   173b8:	cmp	r2, #0
   173bc:	beq	173f4 <argp_error@@Base+0x700>
   173c0:	ldr	r0, [r6, #8]
   173c4:	mov	r1, #0
   173c8:	add	r0, r0, #1
   173cc:	str	r0, [r6, #8]
   173d0:	add	r2, r2, #24
   173d4:	ldr	r0, [r2, #-20]	; 0xffffffec
   173d8:	cmp	r0, #0
   173dc:	bne	173ec <argp_error@@Base+0x6f8>
   173e0:	ldr	r0, [r2, #-24]	; 0xffffffe8
   173e4:	cmp	r0, #0
   173e8:	beq	17968 <argp_error@@Base+0xc74>
   173ec:	add	r1, r1, #1
   173f0:	b	173d0 <argp_error@@Base+0x6dc>
   173f4:	ldr	r2, [r0, #4]
   173f8:	cmp	r2, #0
   173fc:	ldrne	r2, [r6, #8]
   17400:	addne	r2, r2, #1
   17404:	strne	r2, [r6, #8]
   17408:	cmp	r7, #0
   1740c:	beq	179c8 <argp_error@@Base+0xcd4>
   17410:	ldr	r1, [r7]
   17414:	cmp	r1, #0
   17418:	beq	179c8 <argp_error@@Base+0xcd4>
   1741c:	str	r7, [sp, #4]
   17420:	ldr	r2, [r1]
   17424:	ldr	r8, [r1, #16]
   17428:	cmp	r2, #0
   1742c:	beq	17464 <argp_error@@Base+0x770>
   17430:	ldr	r0, [r6, #8]
   17434:	mov	r1, #0
   17438:	add	r0, r0, #1
   1743c:	str	r0, [r6, #8]
   17440:	add	r2, r2, #24
   17444:	ldr	r0, [r2, #-20]	; 0xffffffec
   17448:	cmp	r0, #0
   1744c:	bne	1745c <argp_error@@Base+0x768>
   17450:	ldr	r0, [r2, #-24]	; 0xffffffe8
   17454:	cmp	r0, #0
   17458:	beq	17998 <argp_error@@Base+0xca4>
   1745c:	add	r1, r1, #1
   17460:	b	17440 <argp_error@@Base+0x74c>
   17464:	ldr	r2, [r1, #4]
   17468:	cmp	r2, #0
   1746c:	ldrne	r2, [r6, #8]
   17470:	addne	r2, r2, #1
   17474:	strne	r2, [r6, #8]
   17478:	cmp	r8, #0
   1747c:	beq	179d0 <argp_error@@Base+0xcdc>
   17480:	ldr	r1, [r8]
   17484:	cmp	r1, #0
   17488:	beq	179d0 <argp_error@@Base+0xcdc>
   1748c:	ldr	r2, [r1]
   17490:	ldr	r9, [r1, #16]
   17494:	cmp	r2, #0
   17498:	beq	174d0 <argp_error@@Base+0x7dc>
   1749c:	ldr	r0, [r6, #8]
   174a0:	mov	r1, #0
   174a4:	add	r0, r0, #1
   174a8:	str	r0, [r6, #8]
   174ac:	add	r2, r2, #24
   174b0:	ldr	r0, [r2, #-20]	; 0xffffffec
   174b4:	cmp	r0, #0
   174b8:	bne	174c8 <argp_error@@Base+0x7d4>
   174bc:	ldr	r0, [r2, #-24]	; 0xffffffe8
   174c0:	cmp	r0, #0
   174c4:	beq	179d8 <argp_error@@Base+0xce4>
   174c8:	add	r1, r1, #1
   174cc:	b	174ac <argp_error@@Base+0x7b8>
   174d0:	ldr	r2, [r1, #4]
   174d4:	cmp	r2, #0
   174d8:	ldrne	r2, [r6, #8]
   174dc:	addne	r2, r2, #1
   174e0:	strne	r2, [r6, #8]
   174e4:	cmp	r9, #0
   174e8:	beq	176d4 <argp_error@@Base+0x9e0>
   174ec:	ldr	r1, [r9]
   174f0:	cmp	r1, #0
   174f4:	beq	176d4 <argp_error@@Base+0x9e0>
   174f8:	ldr	r2, [r1]
   174fc:	ldr	sl, [r1, #16]
   17500:	cmp	r2, #0
   17504:	beq	1756c <argp_error@@Base+0x878>
   17508:	ldr	r0, [r6, #8]
   1750c:	mov	r1, #0
   17510:	add	r0, r0, #1
   17514:	str	r0, [r6, #8]
   17518:	b	17520 <argp_error@@Base+0x82c>
   1751c:	add	r1, r1, #1
   17520:	add	r2, r2, #24
   17524:	ldr	r0, [r2, #-20]	; 0xffffffec
   17528:	cmp	r0, #0
   1752c:	bne	1751c <argp_error@@Base+0x828>
   17530:	ldr	r0, [r2, #-24]	; 0xffffffe8
   17534:	cmp	r0, #0
   17538:	bne	1751c <argp_error@@Base+0x828>
   1753c:	ldr	r0, [r2, #-8]
   17540:	cmp	r0, #0
   17544:	bne	1751c <argp_error@@Base+0x828>
   17548:	ldr	r0, [r2, #-4]
   1754c:	cmp	r0, #0
   17550:	bne	1751c <argp_error@@Base+0x828>
   17554:	ldm	r6, {r0, r2}
   17558:	add	ip, r1, r1, lsl #1
   1755c:	add	r0, r0, ip
   17560:	add	r1, r2, r1
   17564:	stm	r6, {r0, r1}
   17568:	b	17580 <argp_error@@Base+0x88c>
   1756c:	ldr	r2, [r1, #4]
   17570:	cmp	r2, #0
   17574:	ldrne	r2, [r6, #8]
   17578:	addne	r2, r2, #1
   1757c:	strne	r2, [r6, #8]
   17580:	cmp	sl, #0
   17584:	beq	17930 <argp_error@@Base+0xc3c>
   17588:	ldr	r1, [sl]
   1758c:	cmp	r1, #0
   17590:	beq	17930 <argp_error@@Base+0xc3c>
   17594:	ldr	r2, [r1]
   17598:	ldr	fp, [r1, #16]
   1759c:	cmp	r2, #0
   175a0:	beq	17908 <argp_error@@Base+0xc14>
   175a4:	ldr	r0, [r6, #8]
   175a8:	mov	r1, #0
   175ac:	add	r0, r0, #1
   175b0:	str	r0, [r6, #8]
   175b4:	b	175bc <argp_error@@Base+0x8c8>
   175b8:	add	r1, r1, #1
   175bc:	add	r2, r2, #24
   175c0:	ldr	r0, [r2, #-20]	; 0xffffffec
   175c4:	cmp	r0, #0
   175c8:	bne	175b8 <argp_error@@Base+0x8c4>
   175cc:	ldr	r0, [r2, #-24]	; 0xffffffe8
   175d0:	cmp	r0, #0
   175d4:	bne	175b8 <argp_error@@Base+0x8c4>
   175d8:	ldr	r0, [r2, #-8]
   175dc:	cmp	r0, #0
   175e0:	bne	175b8 <argp_error@@Base+0x8c4>
   175e4:	ldr	r0, [r2, #-4]
   175e8:	cmp	r0, #0
   175ec:	bne	175b8 <argp_error@@Base+0x8c4>
   175f0:	ldm	r6, {r0, r2}
   175f4:	add	ip, r1, r1, lsl #1
   175f8:	add	r0, r0, ip
   175fc:	add	r1, r2, r1
   17600:	stm	r6, {r0, r1}
   17604:	cmp	fp, #0
   17608:	beq	17928 <argp_error@@Base+0xc34>
   1760c:	ldr	r0, [fp]
   17610:	cmp	r0, #0
   17614:	beq	17928 <argp_error@@Base+0xc34>
   17618:	ldr	r2, [r0]
   1761c:	ldr	r5, [r0, #16]
   17620:	cmp	r2, #0
   17624:	beq	1772c <argp_error@@Base+0xa38>
   17628:	ldr	r0, [r6, #8]
   1762c:	mov	r1, #0
   17630:	add	r0, r0, #1
   17634:	str	r0, [r6, #8]
   17638:	b	17640 <argp_error@@Base+0x94c>
   1763c:	add	r1, r1, #1
   17640:	add	r2, r2, #24
   17644:	ldr	r0, [r2, #-20]	; 0xffffffec
   17648:	cmp	r0, #0
   1764c:	bne	1763c <argp_error@@Base+0x948>
   17650:	ldr	r0, [r2, #-24]	; 0xffffffe8
   17654:	cmp	r0, #0
   17658:	bne	1763c <argp_error@@Base+0x948>
   1765c:	ldr	r0, [r2, #-8]
   17660:	cmp	r0, #0
   17664:	bne	1763c <argp_error@@Base+0x948>
   17668:	ldr	r0, [r2, #-4]
   1766c:	cmp	r0, #0
   17670:	bne	1763c <argp_error@@Base+0x948>
   17674:	ldm	r6, {r0, r2}
   17678:	add	ip, r1, r1, lsl #1
   1767c:	cmp	r5, #0
   17680:	add	r0, r0, ip
   17684:	add	r1, r2, r1
   17688:	stm	r6, {r0, r1}
   1768c:	bne	17748 <argp_error@@Base+0xa54>
   17690:	ldr	r1, [r6, #12]
   17694:	ldr	r0, [fp, #16]!
   17698:	add	r2, r1, #1
   1769c:	cmp	r0, #0
   176a0:	str	r2, [r6, #12]
   176a4:	bne	17618 <argp_error@@Base+0x924>
   176a8:	ldr	r1, [sl, #16]!
   176ac:	add	r2, r2, #1
   176b0:	cmp	r1, #0
   176b4:	str	r2, [r6, #12]
   176b8:	bne	17594 <argp_error@@Base+0x8a0>
   176bc:	ldr	r1, [r9, #16]!
   176c0:	add	r2, r2, #1
   176c4:	cmp	r1, #0
   176c8:	str	r2, [r6, #12]
   176cc:	bne	174f8 <argp_error@@Base+0x804>
   176d0:	b	176d8 <argp_error@@Base+0x9e4>
   176d4:	ldr	r2, [r6, #12]
   176d8:	ldr	r1, [r8, #16]!
   176dc:	add	r2, r2, #1
   176e0:	cmp	r1, #0
   176e4:	str	r2, [r6, #12]
   176e8:	bne	1748c <argp_error@@Base+0x798>
   176ec:	ldr	r3, [sp, #4]
   176f0:	add	r2, r2, #1
   176f4:	ldr	r1, [r3, #16]!
   176f8:	str	r2, [r6, #12]
   176fc:	cmp	r1, #0
   17700:	str	r3, [sp, #4]
   17704:	bne	17420 <argp_error@@Base+0x72c>
   17708:	ldr	r3, [sp]
   1770c:	add	r2, r2, #1
   17710:	ldr	r0, [r3, #16]!
   17714:	str	r2, [r6, #12]
   17718:	cmp	r0, #0
   1771c:	str	r3, [sp]
   17720:	bne	173b0 <argp_error@@Base+0x6bc>
   17724:	add	sp, sp, #12
   17728:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1772c:	ldr	r2, [r0, #4]
   17730:	cmp	r2, #0
   17734:	ldrne	r2, [r6, #8]
   17738:	addne	r2, r2, #1
   1773c:	strne	r2, [r6, #8]
   17740:	cmp	r5, #0
   17744:	beq	17690 <argp_error@@Base+0x99c>
   17748:	ldr	r0, [r5]
   1774c:	cmp	r0, #0
   17750:	beq	17690 <argp_error@@Base+0x99c>
   17754:	ldr	r2, [r0]
   17758:	ldr	r4, [r0, #16]
   1775c:	cmp	r2, #0
   17760:	beq	178c0 <argp_error@@Base+0xbcc>
   17764:	ldr	r0, [r6, #8]
   17768:	mov	r1, #0
   1776c:	add	r0, r0, #1
   17770:	str	r0, [r6, #8]
   17774:	b	1777c <argp_error@@Base+0xa88>
   17778:	add	r1, r1, #1
   1777c:	add	r2, r2, #24
   17780:	ldr	r0, [r2, #-20]	; 0xffffffec
   17784:	cmp	r0, #0
   17788:	bne	17778 <argp_error@@Base+0xa84>
   1778c:	ldr	r0, [r2, #-24]	; 0xffffffe8
   17790:	cmp	r0, #0
   17794:	bne	17778 <argp_error@@Base+0xa84>
   17798:	ldr	r0, [r2, #-8]
   1779c:	cmp	r0, #0
   177a0:	bne	17778 <argp_error@@Base+0xa84>
   177a4:	ldr	r0, [r2, #-4]
   177a8:	cmp	r0, #0
   177ac:	bne	17778 <argp_error@@Base+0xa84>
   177b0:	ldm	r6, {r0, r2}
   177b4:	add	ip, r1, r1, lsl #1
   177b8:	add	r0, r0, ip
   177bc:	add	r1, r2, r1
   177c0:	stm	r6, {r0, r1}
   177c4:	cmp	r4, #0
   177c8:	beq	178e0 <argp_error@@Base+0xbec>
   177cc:	ldr	r0, [r4]
   177d0:	cmp	r0, #0
   177d4:	beq	178e0 <argp_error@@Base+0xbec>
   177d8:	ldr	r1, [r0]
   177dc:	ldr	r2, [r0, #16]
   177e0:	cmp	r1, #0
   177e4:	beq	178f0 <argp_error@@Base+0xbfc>
   177e8:	ldr	ip, [r6, #8]
   177ec:	mov	r0, #0
   177f0:	add	ip, ip, #1
   177f4:	str	ip, [r6, #8]
   177f8:	b	17800 <argp_error@@Base+0xb0c>
   177fc:	add	r0, r0, #1
   17800:	add	r1, r1, #24
   17804:	ldr	ip, [r1, #-20]	; 0xffffffec
   17808:	cmp	ip, #0
   1780c:	bne	177fc <argp_error@@Base+0xb08>
   17810:	ldr	ip, [r1, #-24]	; 0xffffffe8
   17814:	cmp	ip, #0
   17818:	bne	177fc <argp_error@@Base+0xb08>
   1781c:	ldr	ip, [r1, #-8]
   17820:	cmp	ip, #0
   17824:	bne	177fc <argp_error@@Base+0xb08>
   17828:	ldr	ip, [r1, #-4]
   1782c:	cmp	ip, #0
   17830:	bne	177fc <argp_error@@Base+0xb08>
   17834:	ldr	ip, [r6]
   17838:	ldr	r1, [r6, #4]
   1783c:	add	lr, r0, r0, lsl #1
   17840:	add	ip, ip, lr
   17844:	add	r0, r1, r0
   17848:	str	ip, [r6]
   1784c:	str	r0, [r6, #4]
   17850:	cmp	r2, #0
   17854:	beq	178e8 <argp_error@@Base+0xbf4>
   17858:	ldr	r0, [r2]
   1785c:	cmp	r0, #0
   17860:	beq	178e8 <argp_error@@Base+0xbf4>
   17864:	mov	r7, r2
   17868:	mov	r1, r6
   1786c:	bl	17334 <argp_error@@Base+0x640>
   17870:	ldr	r1, [r6, #12]
   17874:	ldr	r0, [r7, #16]!
   17878:	add	r1, r1, #1
   1787c:	cmp	r0, #0
   17880:	str	r1, [r6, #12]
   17884:	bne	17868 <argp_error@@Base+0xb74>
   17888:	ldr	r0, [r4, #16]!
   1788c:	add	r1, r1, #1
   17890:	cmp	r0, #0
   17894:	str	r1, [r6, #12]
   17898:	bne	177d8 <argp_error@@Base+0xae4>
   1789c:	ldr	r0, [r5, #16]!
   178a0:	add	r1, r1, #1
   178a4:	cmp	r0, #0
   178a8:	str	r1, [r6, #12]
   178ac:	beq	17694 <argp_error@@Base+0x9a0>
   178b0:	ldr	r2, [r0]
   178b4:	ldr	r4, [r0, #16]
   178b8:	cmp	r2, #0
   178bc:	bne	17764 <argp_error@@Base+0xa70>
   178c0:	ldr	r2, [r0, #4]
   178c4:	cmp	r2, #0
   178c8:	beq	177c4 <argp_error@@Base+0xad0>
   178cc:	ldr	r2, [r6, #8]
   178d0:	cmp	r4, #0
   178d4:	add	r2, r2, #1
   178d8:	str	r2, [r6, #8]
   178dc:	bne	177cc <argp_error@@Base+0xad8>
   178e0:	ldr	r1, [r6, #12]
   178e4:	b	1789c <argp_error@@Base+0xba8>
   178e8:	ldr	r1, [r6, #12]
   178ec:	b	17888 <argp_error@@Base+0xb94>
   178f0:	ldr	r1, [r0, #4]
   178f4:	cmp	r1, #0
   178f8:	ldrne	r1, [r6, #8]
   178fc:	addne	r1, r1, #1
   17900:	strne	r1, [r6, #8]
   17904:	b	17850 <argp_error@@Base+0xb5c>
   17908:	ldr	r2, [r1, #4]
   1790c:	cmp	r2, #0
   17910:	beq	17604 <argp_error@@Base+0x910>
   17914:	ldr	r2, [r6, #8]
   17918:	cmp	fp, #0
   1791c:	add	r2, r2, #1
   17920:	str	r2, [r6, #8]
   17924:	bne	1760c <argp_error@@Base+0x918>
   17928:	ldr	r2, [r6, #12]
   1792c:	b	176a8 <argp_error@@Base+0x9b4>
   17930:	ldr	r2, [r6, #12]
   17934:	b	176bc <argp_error@@Base+0x9c8>
   17938:	ldr	r0, [r3, #-8]
   1793c:	cmp	r0, #0
   17940:	bne	17378 <argp_error@@Base+0x684>
   17944:	ldr	r0, [r3, #-4]
   17948:	cmp	r0, #0
   1794c:	bne	17378 <argp_error@@Base+0x684>
   17950:	ldm	r1, {r0, r3}
   17954:	add	ip, r2, r2, lsl #1
   17958:	add	r0, r0, ip
   1795c:	add	r2, r3, r2
   17960:	stm	r1, {r0, r2}
   17964:	b	17394 <argp_error@@Base+0x6a0>
   17968:	ldr	r0, [r2, #-8]
   1796c:	cmp	r0, #0
   17970:	bne	173ec <argp_error@@Base+0x6f8>
   17974:	ldr	r0, [r2, #-4]
   17978:	cmp	r0, #0
   1797c:	bne	173ec <argp_error@@Base+0x6f8>
   17980:	ldm	r6, {r0, r2}
   17984:	add	ip, r1, r1, lsl #1
   17988:	add	r0, r0, ip
   1798c:	add	r1, r2, r1
   17990:	stm	r6, {r0, r1}
   17994:	b	17408 <argp_error@@Base+0x714>
   17998:	ldr	r0, [r2, #-8]
   1799c:	cmp	r0, #0
   179a0:	bne	1745c <argp_error@@Base+0x768>
   179a4:	ldr	r0, [r2, #-4]
   179a8:	cmp	r0, #0
   179ac:	bne	1745c <argp_error@@Base+0x768>
   179b0:	ldm	r6, {r0, r2}
   179b4:	add	ip, r1, r1, lsl #1
   179b8:	add	r0, r0, ip
   179bc:	add	r1, r2, r1
   179c0:	stm	r6, {r0, r1}
   179c4:	b	17478 <argp_error@@Base+0x784>
   179c8:	ldr	r2, [r6, #12]
   179cc:	b	17708 <argp_error@@Base+0xa14>
   179d0:	ldr	r2, [r6, #12]
   179d4:	b	176ec <argp_error@@Base+0x9f8>
   179d8:	ldr	r0, [r2, #-8]
   179dc:	cmp	r0, #0
   179e0:	bne	174c8 <argp_error@@Base+0x7d4>
   179e4:	ldr	r0, [r2, #-4]
   179e8:	cmp	r0, #0
   179ec:	bne	174c8 <argp_error@@Base+0x7d4>
   179f0:	ldm	r6, {r0, r2}
   179f4:	add	ip, r1, r1, lsl #1
   179f8:	add	r0, r0, ip
   179fc:	add	r1, r2, r1
   17a00:	stm	r6, {r0, r1}
   17a04:	b	174e4 <argp_error@@Base+0x7f0>

00017a08 <argp_parse@@Base>:
   17a08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17a0c:	add	fp, sp, #32
   17a10:	tst	r3, #1
   17a14:	sub	sp, sp, #220	; 0xdc
   17a18:	mov	r7, r3
   17a1c:	mov	r8, r0
   17a20:	str	r1, [fp, #-240]	; 0xffffff10
   17a24:	str	r2, [fp, #-236]	; 0xffffff14
   17a28:	bne	17a54 <argp_parse@@Base+0x4c>
   17a2c:	ldr	r3, [pc, #3488]	; 187d4 <argp_parse@@Base+0xdcc>
   17a30:	ldr	r4, [pc, #3488]	; 187d8 <argp_parse@@Base+0xdd0>
   17a34:	ldr	r2, [r3]
   17a38:	cmp	r2, #0
   17a3c:	ldreq	r2, [fp, #-236]	; 0xffffff14
   17a40:	ldreq	r2, [r2]
   17a44:	streq	r2, [r3]
   17a48:	ldr	r3, [r4]
   17a4c:	cmp	r3, #0
   17a50:	beq	18134 <argp_parse@@Base+0x72c>
   17a54:	ands	r3, r7, #16
   17a58:	beq	18018 <argp_parse@@Base+0x610>
   17a5c:	sub	r5, fp, #196	; 0xc4
   17a60:	mov	r0, r5
   17a64:	mov	r2, #36	; 0x24
   17a68:	mov	r1, #0
   17a6c:	bl	111e4 <memset@plt>
   17a70:	ands	r3, r7, #4
   17a74:	str	r3, [fp, #-244]	; 0xffffff0c
   17a78:	mov	r3, #0
   17a7c:	moveq	r0, #1
   17a80:	movne	r0, #0
   17a84:	cmp	r8, r3
   17a88:	str	r3, [fp, #-224]	; 0xffffff20
   17a8c:	str	r3, [fp, #-220]	; 0xffffff24
   17a90:	str	r3, [fp, #-216]	; 0xffffff28
   17a94:	str	r0, [fp, #-228]	; 0xffffff1c
   17a98:	beq	17b0c <argp_parse@@Base+0x104>
   17a9c:	ldr	r4, [r8, #16]
   17aa0:	ldr	r3, [r8]
   17aa4:	cmp	r3, #0
   17aa8:	movne	r2, #1
   17aac:	strne	r2, [fp, #-220]	; 0xffffff24
   17ab0:	movne	r2, #0
   17ab4:	bne	17ac0 <argp_parse@@Base+0xb8>
   17ab8:	b	18600 <argp_parse@@Base+0xbf8>
   17abc:	add	r2, r2, #1
   17ac0:	add	r3, r3, #24
   17ac4:	ldr	r1, [r3, #-20]	; 0xffffffec
   17ac8:	cmp	r1, #0
   17acc:	bne	17abc <argp_parse@@Base+0xb4>
   17ad0:	ldr	r1, [r3, #-24]	; 0xffffffe8
   17ad4:	cmp	r1, #0
   17ad8:	bne	17abc <argp_parse@@Base+0xb4>
   17adc:	ldr	r1, [r3, #-8]
   17ae0:	cmp	r1, #0
   17ae4:	bne	17abc <argp_parse@@Base+0xb4>
   17ae8:	ldr	r1, [r3, #-4]
   17aec:	cmp	r1, #0
   17af0:	bne	17abc <argp_parse@@Base+0xb4>
   17af4:	add	r3, r2, r2, lsl #1
   17af8:	add	r0, r3, r0
   17afc:	str	r2, [fp, #-224]	; 0xffffff20
   17b00:	str	r0, [fp, #-228]	; 0xffffff1c
   17b04:	mov	r6, #72	; 0x48
   17b08:	b	18618 <argp_parse@@Base+0xc10>
   17b0c:	mov	sl, #36	; 0x24
   17b10:	mov	r6, sl
   17b14:	mov	r4, r8
   17b18:	mov	r3, #52	; 0x34
   17b1c:	str	r3, [fp, #-232]	; 0xffffff18
   17b20:	add	r0, r3, r0
   17b24:	add	r0, r0, #1
   17b28:	bl	19f68 <argp_parse@@Base+0x2560>
   17b2c:	cmp	r0, #0
   17b30:	mov	r9, r0
   17b34:	str	r0, [fp, #-40]	; 0xffffffd8
   17b38:	moveq	r5, #12
   17b3c:	beq	17f38 <argp_parse@@Base+0x530>
   17b40:	mov	lr, r5
   17b44:	mov	r3, #1
   17b48:	str	r3, [fp, #-196]	; 0xffffff3c
   17b4c:	str	r3, [fp, #-192]	; 0xffffff40
   17b50:	ldm	lr!, {r0, r1, r2, r3}
   17b54:	sub	ip, fp, #148	; 0x94
   17b58:	add	r5, r9, sl
   17b5c:	ldr	sl, [fp, #-232]	; 0xffffff18
   17b60:	stmia	ip!, {r0, r1, r2, r3}
   17b64:	add	r6, r9, r6
   17b68:	ldm	lr!, {r0, r1, r2, r3}
   17b6c:	add	sl, r9, sl
   17b70:	str	r6, [fp, #-104]	; 0xffffff98
   17b74:	str	r5, [fp, #-152]	; 0xffffff68
   17b78:	ldr	lr, [lr]
   17b7c:	stmia	ip!, {r0, r1, r2, r3}
   17b80:	mov	r2, r4
   17b84:	mov	r0, r6
   17b88:	mov	r1, #0
   17b8c:	str	r9, [fp, #-112]	; 0xffffff90
   17b90:	str	lr, [ip]
   17b94:	str	sl, [fp, #-156]	; 0xffffff64
   17b98:	sub	r4, fp, #160	; 0xa0
   17b9c:	bl	111e4 <memset@plt>
   17ba0:	tst	r7, #8
   17ba4:	str	r5, [fp, #-204]	; 0xffffff34
   17ba8:	str	sl, [fp, #-208]	; 0xffffff30
   17bac:	str	r6, [fp, #-200]	; 0xffffff38
   17bb0:	str	r4, [fp, #-212]	; 0xffffff2c
   17bb4:	beq	180cc <argp_parse@@Base+0x6c4>
   17bb8:	ldr	r2, [fp, #-232]	; 0xffffff18
   17bbc:	add	sl, sl, #1
   17bc0:	mov	r3, #45	; 0x2d
   17bc4:	str	sl, [fp, #-208]	; 0xffffff30
   17bc8:	strb	r3, [r9, r2]
   17bcc:	mov	r2, #0
   17bd0:	strb	r2, [sl]
   17bd4:	ldr	r3, [fp, #-204]	; 0xffffff34
   17bd8:	cmp	r8, r2
   17bdc:	str	r2, [r3]
   17be0:	str	r8, [fp, #-160]	; 0xffffff60
   17be4:	beq	180fc <argp_parse@@Base+0x6f4>
   17be8:	sub	r1, fp, #212	; 0xd4
   17bec:	mov	r0, r8
   17bf0:	str	r1, [sp]
   17bf4:	ldr	r3, [fp, #-112]	; 0xffffff90
   17bf8:	mov	r1, r2
   17bfc:	bl	16ea0 <argp_error@@Base+0x1ac>
   17c00:	ldr	r8, [fp, #-160]	; 0xffffff60
   17c04:	ldr	r5, [fp, #-112]	; 0xffffff90
   17c08:	mov	r6, r0
   17c0c:	str	r0, [fp, #-108]	; 0xffffff94
   17c10:	mov	r2, #56	; 0x38
   17c14:	mov	r1, #0
   17c18:	sub	r0, fp, #96	; 0x60
   17c1c:	bl	111e4 <memset@plt>
   17c20:	ldr	r2, [pc, #2996]	; 187dc <argp_parse@@Base+0xdd4>
   17c24:	ldr	r3, [pc, #2996]	; 187e0 <argp_parse@@Base+0xdd8>
   17c28:	ldr	r0, [fp, #-240]	; 0xffffff10
   17c2c:	ldr	r1, [r2]
   17c30:	str	r0, [fp, #-92]	; 0xffffffa4
   17c34:	ldr	r2, [r3]
   17c38:	ldr	r0, [fp, #-236]	; 0xffffff14
   17c3c:	mov	r3, #1
   17c40:	cmp	r5, r6
   17c44:	str	r8, [fp, #-96]	; 0xffffffa0
   17c48:	str	r0, [fp, #-88]	; 0xffffffa8
   17c4c:	str	r7, [fp, #-80]	; 0xffffffb0
   17c50:	str	r4, [fp, #-44]	; 0xffffffd4
   17c54:	str	r1, [fp, #-52]	; 0xffffffcc
   17c58:	str	r2, [fp, #-48]	; 0xffffffd0
   17c5c:	str	r3, [fp, #-100]	; 0xffffff9c
   17c60:	bcc	17f44 <argp_parse@@Base+0x53c>
   17c64:	ldr	r3, [fp, #-80]	; 0xffffffb0
   17c68:	tst	r3, #2
   17c6c:	bne	1810c <argp_parse@@Base+0x704>
   17c70:	ldr	r3, [fp, #-88]	; 0xffffffa8
   17c74:	ldr	r4, [fp, #-92]	; 0xffffffa4
   17c78:	mov	r2, #1
   17c7c:	str	r2, [fp, #-144]	; 0xffffff70
   17c80:	ldr	r2, [fp, #-236]	; 0xffffff14
   17c84:	cmp	r2, r3
   17c88:	beq	186ac <argp_parse@@Base+0xca4>
   17c8c:	ldr	r3, [pc, #2884]	; 187d8 <argp_parse@@Base+0xdd0>
   17c90:	ldr	r3, [r3]
   17c94:	str	r3, [fp, #-56]	; 0xffffffc8
   17c98:	ldr	r2, [fp, #-100]	; 0xffffff9c
   17c9c:	ldr	r5, [fp, #-84]	; 0xffffffac
   17ca0:	ldr	sl, [pc, #2876]	; 187e4 <argp_parse@@Base+0xddc>
   17ca4:	mov	r0, r4
   17ca8:	mov	r6, #0
   17cac:	ldr	r3, [fp, #-72]	; 0xffffffb8
   17cb0:	cmp	r3, #0
   17cb4:	beq	18148 <argp_parse@@Base+0x740>
   17cb8:	cmp	r3, r5
   17cbc:	strgt	r6, [fp, #-72]	; 0xffffffb8
   17cc0:	bgt	18148 <argp_parse@@Base+0x740>
   17cc4:	cmp	r5, r0
   17cc8:	blt	184e4 <argp_parse@@Base+0xadc>
   17ccc:	cmp	r5, r0
   17cd0:	bne	184f0 <argp_parse@@Base+0xae8>
   17cd4:	ldr	r6, [fp, #-112]	; 0xffffff90
   17cd8:	ldr	ip, [fp, #-108]	; 0xffffff94
   17cdc:	cmp	r6, ip
   17ce0:	bcs	18774 <argp_parse@@Base+0xd6c>
   17ce4:	mov	r5, #0
   17ce8:	add	r6, r6, #36	; 0x24
   17cec:	mov	r8, r5
   17cf0:	ldr	r7, [pc, #2800]	; 187e8 <argp_parse@@Base+0xde0>
   17cf4:	mov	r0, r5
   17cf8:	b	17d40 <argp_parse@@Base+0x338>
   17cfc:	ldr	ip, [r6, #-4]
   17d00:	str	ip, [fp, #-60]	; 0xffffffc4
   17d04:	ldr	ip, [r6, #-12]
   17d08:	str	ip, [fp, #-68]	; 0xffffffbc
   17d0c:	ldr	ip, [r6, #-8]
   17d10:	str	r3, [fp, #-76]	; 0xffffffb4
   17d14:	str	ip, [fp, #-64]	; 0xffffffc0
   17d18:	blx	r4
   17d1c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17d20:	str	r3, [r6, #-4]
   17d24:	ldr	ip, [fp, #-108]	; 0xffffff94
   17d28:	cmp	ip, r6
   17d2c:	bls	1871c <argp_parse@@Base+0xd14>
   17d30:	cmp	r0, #7
   17d34:	cmpne	r0, #0
   17d38:	bne	186dc <argp_parse@@Base+0xcd4>
   17d3c:	add	r6, r6, #36	; 0x24
   17d40:	ldr	r3, [r6, #-24]	; 0xffffffe8
   17d44:	cmp	r3, #0
   17d48:	bne	17d28 <argp_parse@@Base+0x320>
   17d4c:	ldr	r4, [r6, #-36]	; 0xffffffdc
   17d50:	sub	r2, fp, #96	; 0x60
   17d54:	cmp	r4, #0
   17d58:	mov	r1, r8
   17d5c:	mov	r0, r7
   17d60:	bne	17cfc <argp_parse@@Base+0x2f4>
   17d64:	cmp	ip, r6
   17d68:	mov	r0, #7
   17d6c:	bhi	17d3c <argp_parse@@Base+0x334>
   17d70:	ldr	r6, [fp, #-112]	; 0xffffff90
   17d74:	sub	r4, ip, #36	; 0x24
   17d78:	cmp	r6, r4
   17d7c:	movls	r5, #7
   17d80:	bhi	17e08 <argp_parse@@Base+0x400>
   17d84:	cmp	r5, #7
   17d88:	cmpne	r5, #0
   17d8c:	bne	186f0 <argp_parse@@Base+0xce8>
   17d90:	sub	r4, r4, #36	; 0x24
   17d94:	mov	r8, #0
   17d98:	ldr	r7, [pc, #2636]	; 187ec <argp_parse@@Base+0xde4>
   17d9c:	b	17de8 <argp_parse@@Base+0x3e0>
   17da0:	ldr	ip, [r4, #68]	; 0x44
   17da4:	ldr	lr, [r4, #48]	; 0x30
   17da8:	str	ip, [fp, #-60]	; 0xffffffc4
   17dac:	ldr	ip, [r4, #60]	; 0x3c
   17db0:	str	ip, [fp, #-68]	; 0xffffffbc
   17db4:	ldr	ip, [r4, #64]	; 0x40
   17db8:	str	lr, [fp, #-76]	; 0xffffffb4
   17dbc:	str	ip, [fp, #-64]	; 0xffffffc0
   17dc0:	blx	r3
   17dc4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17dc8:	str	r3, [r4, #68]	; 0x44
   17dcc:	ldr	r6, [fp, #-112]	; 0xffffff90
   17dd0:	cmp	r6, r4
   17dd4:	bhi	1876c <argp_parse@@Base+0xd64>
   17dd8:	cmp	r0, #7
   17ddc:	cmpne	r0, #0
   17de0:	bne	18700 <argp_parse@@Base+0xcf8>
   17de4:	sub	r4, r4, #36	; 0x24
   17de8:	ldr	r3, [r4, #36]	; 0x24
   17dec:	sub	r2, fp, #96	; 0x60
   17df0:	cmp	r3, #0
   17df4:	mov	r1, r8
   17df8:	mov	r0, r7
   17dfc:	bne	17da0 <argp_parse@@Base+0x398>
   17e00:	cmp	r6, r4
   17e04:	bls	17de4 <argp_parse@@Base+0x3dc>
   17e08:	ldr	r3, [fp, #4]
   17e0c:	cmp	r3, #0
   17e10:	beq	17e2c <argp_parse@@Base+0x424>
   17e14:	mov	r5, #0
   17e18:	ldr	r2, [fp, #4]
   17e1c:	ldr	r3, [fp, #-84]	; 0xffffffac
   17e20:	str	r3, [r2]
   17e24:	cmp	r5, #0
   17e28:	bne	18710 <argp_parse@@Base+0xd08>
   17e2c:	ldr	ip, [fp, #-108]	; 0xffffff94
   17e30:	b	18508 <argp_parse@@Base+0xb00>
   17e34:	ldr	r6, [fp, #-112]	; 0xffffff90
   17e38:	mov	r5, r0
   17e3c:	ldr	ip, [fp, #-108]	; 0xffffff94
   17e40:	cmp	r6, ip
   17e44:	mov	r4, ip
   17e48:	subcs	r4, ip, #36	; 0x24
   17e4c:	bcs	17ebc <argp_parse@@Base+0x4b4>
   17e50:	ldr	r8, [pc, #2456]	; 187f0 <argp_parse@@Base+0xde8>
   17e54:	add	r6, r6, #36	; 0x24
   17e58:	mov	r9, #0
   17e5c:	ldr	r3, [r6, #-36]	; 0xffffffdc
   17e60:	sub	r2, fp, #96	; 0x60
   17e64:	cmp	r3, #0
   17e68:	mov	r1, r9
   17e6c:	mov	r0, r8
   17e70:	mov	r7, r6
   17e74:	beq	17ea8 <argp_parse@@Base+0x4a0>
   17e78:	ldr	ip, [r6, #-4]
   17e7c:	ldr	lr, [r6, #-24]	; 0xffffffe8
   17e80:	str	ip, [fp, #-60]	; 0xffffffc4
   17e84:	ldr	ip, [r6, #-12]
   17e88:	str	ip, [fp, #-68]	; 0xffffffbc
   17e8c:	ldr	ip, [r6, #-8]
   17e90:	str	lr, [fp, #-76]	; 0xffffffb4
   17e94:	str	ip, [fp, #-64]	; 0xffffffc0
   17e98:	blx	r3
   17e9c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17ea0:	str	r3, [r6, #-4]
   17ea4:	ldr	r4, [fp, #-108]	; 0xffffff94
   17ea8:	cmp	r7, r4
   17eac:	add	r6, r6, #36	; 0x24
   17eb0:	bcc	17e5c <argp_parse@@Base+0x454>
   17eb4:	ldr	r6, [fp, #-112]	; 0xffffff90
   17eb8:	sub	r4, r4, #36	; 0x24
   17ebc:	cmp	r6, r4
   17ec0:	bhi	17f28 <argp_parse@@Base+0x520>
   17ec4:	ldr	r8, [pc, #2344]	; 187f4 <argp_parse@@Base+0xdec>
   17ec8:	sub	r4, r4, #36	; 0x24
   17ecc:	mov	r9, #0
   17ed0:	ldr	r3, [r4, #36]	; 0x24
   17ed4:	sub	r2, fp, #96	; 0x60
   17ed8:	cmp	r3, #0
   17edc:	mov	r1, r9
   17ee0:	mov	r0, r8
   17ee4:	mov	r7, r4
   17ee8:	beq	17f1c <argp_parse@@Base+0x514>
   17eec:	ldr	ip, [r4, #68]	; 0x44
   17ef0:	ldr	lr, [r4, #48]	; 0x30
   17ef4:	str	ip, [fp, #-60]	; 0xffffffc4
   17ef8:	ldr	ip, [r4, #60]	; 0x3c
   17efc:	str	ip, [fp, #-68]	; 0xffffffbc
   17f00:	ldr	ip, [r4, #64]	; 0x40
   17f04:	str	lr, [fp, #-76]	; 0xffffffb4
   17f08:	str	ip, [fp, #-64]	; 0xffffffc0
   17f0c:	blx	r3
   17f10:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17f14:	str	r3, [r4, #68]	; 0x44
   17f18:	ldr	r6, [fp, #-112]	; 0xffffff90
   17f1c:	cmp	r6, r7
   17f20:	sub	r4, r4, #36	; 0x24
   17f24:	bls	17ed0 <argp_parse@@Base+0x4c8>
   17f28:	cmp	r5, #7
   17f2c:	moveq	r5, #22
   17f30:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17f34:	bl	18984 <argp_parse@@Base+0xf7c>
   17f38:	mov	r0, r5
   17f3c:	sub	sp, fp, #32
   17f40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17f44:	ldr	r3, [fp, #8]
   17f48:	add	r4, r5, #36	; 0x24
   17f4c:	str	r3, [r5, #24]
   17f50:	mov	r7, #0
   17f54:	ldr	r6, [pc, #2204]	; 187f8 <argp_parse@@Base+0xdf0>
   17f58:	b	17fb0 <argp_parse@@Base+0x5a8>
   17f5c:	ldr	r2, [r4, #-4]
   17f60:	ldr	r0, [r4, #-24]	; 0xffffffe8
   17f64:	str	r2, [fp, #-60]	; 0xffffffc4
   17f68:	ldr	r1, [r4, #-12]
   17f6c:	sub	r2, fp, #96	; 0x60
   17f70:	str	r1, [fp, #-68]	; 0xffffffbc
   17f74:	ldr	ip, [r4, #-8]
   17f78:	mov	r1, r7
   17f7c:	str	r0, [fp, #-76]	; 0xffffffb4
   17f80:	str	ip, [fp, #-64]	; 0xffffffc0
   17f84:	mov	r0, r6
   17f88:	blx	r3
   17f8c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17f90:	str	r3, [r4, #-4]
   17f94:	ldr	r3, [fp, #-108]	; 0xffffff94
   17f98:	cmp	r3, r4
   17f9c:	bls	187a8 <argp_parse@@Base+0xda0>
   17fa0:	cmp	r0, #7
   17fa4:	cmpne	r0, #0
   17fa8:	bne	180ec <argp_parse@@Base+0x6e4>
   17fac:	add	r4, r4, #36	; 0x24
   17fb0:	ldr	r3, [r4, #-20]	; 0xffffffec
   17fb4:	cmp	r3, #0
   17fb8:	ldrne	r3, [r3, #28]
   17fbc:	ldrne	r2, [r4, #-16]
   17fc0:	ldrne	r3, [r3, r2, lsl #2]
   17fc4:	strne	r3, [r4, #-12]
   17fc8:	ldr	r3, [r4, #-36]	; 0xffffffdc
   17fcc:	cmp	r3, #0
   17fd0:	bne	17f5c <argp_parse@@Base+0x554>
   17fd4:	ldr	r3, [r4, #-32]	; 0xffffffe0
   17fd8:	ldr	r3, [r3, #16]
   17fdc:	cmp	r3, #0
   17fe0:	beq	18008 <argp_parse@@Base+0x600>
   17fe4:	ldr	r3, [r3]
   17fe8:	cmp	r3, #0
   17fec:	beq	18008 <argp_parse@@Base+0x600>
   17ff0:	ldr	r3, [r4, #-8]
   17ff4:	ldr	r2, [r4, #-12]
   17ff8:	str	r2, [r3]
   17ffc:	ldr	r3, [r4, #-36]	; 0xffffffdc
   18000:	cmp	r3, #0
   18004:	bne	17f5c <argp_parse@@Base+0x554>
   18008:	ldr	r3, [fp, #-108]	; 0xffffff94
   1800c:	cmp	r3, r4
   18010:	bhi	17fac <argp_parse@@Base+0x5a4>
   18014:	b	17c64 <argp_parse@@Base+0x25c>
   18018:	sub	sp, sp, #72	; 0x48
   1801c:	add	r4, sp, #8
   18020:	sub	sp, sp, #40	; 0x28
   18024:	add	r6, sp, #8
   18028:	mov	r1, r3
   1802c:	str	r3, [r6]
   18030:	str	r3, [r6, #4]
   18034:	str	r3, [r6, #8]
   18038:	str	r3, [r6, #12]
   1803c:	str	r3, [r6, #20]
   18040:	str	r3, [r6, #24]
   18044:	mov	r2, #64	; 0x40
   18048:	mov	r0, r4
   1804c:	str	r4, [r6, #16]
   18050:	bl	111e4 <memset@plt>
   18054:	ldr	r2, [pc, #1952]	; 187fc <argp_parse@@Base+0xdf4>
   18058:	cmp	r8, #0
   1805c:	addne	r3, r4, #16
   18060:	ldr	r2, [r2]
   18064:	moveq	r3, r4
   18068:	ldr	r1, [pc, #1936]	; 18800 <argp_parse@@Base+0xdf8>
   1806c:	strne	r8, [r4]
   18070:	cmp	r2, #0
   18074:	str	r1, [r3]
   18078:	beq	186c4 <argp_parse@@Base+0xcbc>
   1807c:	ldr	r2, [pc, #1920]	; 18804 <argp_parse@@Base+0xdfc>
   18080:	add	ip, r3, #32
   18084:	str	r2, [r3, #16]
   18088:	mov	r9, #0
   1808c:	sub	r5, fp, #196	; 0xc4
   18090:	mov	r1, r9
   18094:	mov	r0, r5
   18098:	mov	r2, #36	; 0x24
   1809c:	str	r9, [ip]
   180a0:	bl	111e4 <memset@plt>
   180a4:	ands	r3, r7, #4
   180a8:	moveq	r0, #1
   180ac:	movne	r0, r9
   180b0:	str	r3, [fp, #-244]	; 0xffffff0c
   180b4:	mov	r8, r6
   180b8:	str	r9, [fp, #-224]	; 0xffffff20
   180bc:	str	r9, [fp, #-220]	; 0xffffff24
   180c0:	str	r9, [fp, #-216]	; 0xffffff28
   180c4:	str	r0, [fp, #-228]	; 0xffffff1c
   180c8:	b	17aa0 <argp_parse@@Base+0x98>
   180cc:	ldr	r3, [fp, #-244]	; 0xffffff0c
   180d0:	cmp	r3, #0
   180d4:	addne	r3, sl, #1
   180d8:	movne	r2, #43	; 0x2b
   180dc:	strbne	r2, [sl]
   180e0:	strne	r3, [fp, #-208]	; 0xffffff30
   180e4:	movne	sl, r3
   180e8:	b	17bcc <argp_parse@@Base+0x1c4>
   180ec:	mov	r5, r0
   180f0:	mov	r0, r5
   180f4:	sub	sp, fp, #32
   180f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   180fc:	ldr	r5, [fp, #-112]	; 0xffffff90
   18100:	mov	r6, r5
   18104:	str	r5, [fp, #-108]	; 0xffffff94
   18108:	b	17c10 <argp_parse@@Base+0x208>
   1810c:	tst	r3, #1
   18110:	mov	r3, #0
   18114:	str	r3, [fp, #-144]	; 0xffffff70
   18118:	ldr	r4, [fp, #-92]	; 0xffffffa4
   1811c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   18120:	subne	r3, r3, #4
   18124:	addne	r4, r4, #1
   18128:	strne	r3, [fp, #-88]	; 0xffffffa8
   1812c:	strne	r4, [fp, #-92]	; 0xffffffa4
   18130:	b	17c80 <argp_parse@@Base+0x278>
   18134:	ldr	r3, [fp, #-236]	; 0xffffff14
   18138:	ldr	r0, [r3]
   1813c:	bl	188d8 <argp_parse@@Base+0xed0>
   18140:	str	r0, [r4]
   18144:	b	17a54 <argp_parse@@Base+0x4c>
   18148:	cmp	r2, #0
   1814c:	beq	17cc4 <argp_parse@@Base+0x2bc>
   18150:	ldr	r3, [fp, #-80]	; 0xffffffb0
   18154:	str	r5, [fp, #-148]	; 0xffffff6c
   18158:	ands	ip, r3, #64	; 0x40
   1815c:	mvn	r3, #0
   18160:	str	r3, [fp, #-140]	; 0xffffff74
   18164:	ldr	r2, [fp, #-156]	; 0xffffff64
   18168:	ldr	r3, [fp, #-152]	; 0xffffff68
   1816c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   18170:	beq	18490 <argp_parse@@Base+0xa88>
   18174:	sub	ip, fp, #148	; 0x94
   18178:	stm	sp, {r6, ip}
   1817c:	bl	18a58 <argp_parse@@Base+0x1050>
   18180:	ldr	r5, [fp, #-148]	; 0xffffff6c
   18184:	str	r5, [fp, #-84]	; 0xffffffac
   18188:	mov	r7, r0
   1818c:	cmn	r7, #1
   18190:	beq	184b0 <argp_parse@@Base+0xaa8>
   18194:	cmp	r7, #63	; 0x3f
   18198:	beq	185b4 <argp_parse@@Base+0xbac>
   1819c:	cmp	r7, #1
   181a0:	beq	182f8 <argp_parse@@Base+0x8f0>
   181a4:	asrs	r8, r7, #24
   181a8:	bne	18254 <argp_parse@@Base+0x84c>
   181ac:	mov	r1, r7
   181b0:	ldr	r0, [fp, #-156]	; 0xffffff64
   181b4:	bl	111b4 <strchr@plt>
   181b8:	cmp	r0, #0
   181bc:	beq	182c4 <argp_parse@@Base+0x8bc>
   181c0:	ldr	r4, [fp, #-112]	; 0xffffff90
   181c4:	ldr	r2, [fp, #-108]	; 0xffffff94
   181c8:	cmp	r4, r2
   181cc:	bcc	181e0 <argp_parse@@Base+0x7d8>
   181d0:	b	182c4 <argp_parse@@Base+0x8bc>
   181d4:	add	r4, r4, #36	; 0x24
   181d8:	cmp	r4, r2
   181dc:	bcs	182c4 <argp_parse@@Base+0x8bc>
   181e0:	ldr	r3, [r4, #8]
   181e4:	cmp	r0, r3
   181e8:	bcs	181d4 <argp_parse@@Base+0x7cc>
   181ec:	ldr	r3, [r4]
   181f0:	cmp	r3, #0
   181f4:	beq	182c4 <argp_parse@@Base+0x8bc>
   181f8:	ldr	r2, [r4, #32]
   181fc:	ldr	r0, [r4, #28]
   18200:	ldr	ip, [r4, #24]
   18204:	str	r2, [fp, #-60]	; 0xffffffc4
   18208:	ldr	r2, [r4, #12]
   1820c:	ldr	r1, [fp, #-136]	; 0xffffff78
   18210:	str	r0, [fp, #-64]	; 0xffffffc0
   18214:	str	r2, [fp, #-76]	; 0xffffffb4
   18218:	str	ip, [fp, #-68]	; 0xffffffbc
   1821c:	sub	r2, fp, #96	; 0x60
   18220:	mov	r0, r7
   18224:	blx	r3
   18228:	mov	r8, r6
   1822c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18230:	str	r3, [r4, #32]
   18234:	cmp	r0, #7
   18238:	beq	182bc <argp_parse@@Base+0x8b4>
   1823c:	cmp	r0, #0
   18240:	bne	17e34 <argp_parse@@Base+0x42c>
   18244:	ldr	r2, [fp, #-100]	; 0xffffff9c
   18248:	ldr	r5, [fp, #-84]	; 0xffffffac
   1824c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   18250:	b	17cac <argp_parse@@Base+0x2a4>
   18254:	add	r3, r8, r8, lsl #3
   18258:	ldr	r2, [fp, #-112]	; 0xffffff90
   1825c:	lsl	r3, r3, #2
   18260:	sub	r3, r3, #36	; 0x24
   18264:	add	r4, r2, r3
   18268:	ldr	r5, [r2, r3]
   1826c:	ands	r3, r7, #8388608	; 0x800000
   18270:	movne	r3, #-16777216	; 0xff000000
   18274:	cmp	r5, #0
   18278:	beq	18448 <argp_parse@@Base+0xa40>
   1827c:	ldr	r0, [r4, #32]
   18280:	ldr	r2, [r4, #24]
   18284:	str	r0, [fp, #-60]	; 0xffffffc4
   18288:	ldr	r0, [r4, #28]
   1828c:	str	r2, [fp, #-68]	; 0xffffffbc
   18290:	ldr	r2, [r4, #12]
   18294:	str	r0, [fp, #-64]	; 0xffffffc0
   18298:	bic	r0, r7, #-16777216	; 0xff000000
   1829c:	str	r2, [fp, #-76]	; 0xffffffb4
   182a0:	orr	r0, r0, r3
   182a4:	ldr	r1, [fp, #-136]	; 0xffffff78
   182a8:	sub	r2, fp, #96	; 0x60
   182ac:	blx	r5
   182b0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   182b4:	str	r3, [r4, #32]
   182b8:	b	18234 <argp_parse@@Base+0x82c>
   182bc:	cmp	r8, #0
   182c0:	bne	18448 <argp_parse@@Base+0xa40>
   182c4:	mov	r2, r7
   182c8:	ldr	r3, [pc, #1336]	; 18808 <argp_parse@@Base+0xe00>
   182cc:	ldr	r1, [pc, #1336]	; 1880c <argp_parse@@Base+0xe04>
   182d0:	sub	r0, fp, #96	; 0x60
   182d4:	bl	16cf4 <argp_error@@Base>
   182d8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   182dc:	mov	r2, #260	; 0x104
   182e0:	sub	r0, fp, #96	; 0x60
   182e4:	bl	16c44 <argp_state_help@@Base>
   182e8:	mov	r5, #7
   182ec:	ldr	r6, [fp, #-112]	; 0xffffff90
   182f0:	ldr	ip, [fp, #-108]	; 0xffffff94
   182f4:	b	17e40 <argp_parse@@Base+0x438>
   182f8:	ldr	r7, [fp, #-136]	; 0xffffff78
   182fc:	ldr	r3, [fp, #-112]	; 0xffffff90
   18300:	ldr	ip, [fp, #-108]	; 0xffffff94
   18304:	sub	r8, r5, #1
   18308:	cmp	r3, ip
   1830c:	str	r8, [fp, #-84]	; 0xffffffac
   18310:	bcs	1843c <argp_parse@@Base+0xa34>
   18314:	mov	lr, r8
   18318:	add	r4, r3, #36	; 0x24
   1831c:	ldr	r3, [r4, #-36]	; 0xffffffdc
   18320:	add	r5, lr, #1
   18324:	cmp	r3, #0
   18328:	str	r5, [fp, #-84]	; 0xffffffac
   1832c:	sub	r2, fp, #96	; 0x60
   18330:	mov	r1, r7
   18334:	mov	r0, r6
   18338:	sub	r5, r4, #36	; 0x24
   1833c:	mov	r9, r4
   18340:	streq	lr, [fp, #-84]	; 0xffffffac
   18344:	beq	18430 <argp_parse@@Base+0xa28>
   18348:	ldr	ip, [r4, #-4]
   1834c:	ldr	lr, [r4, #-24]	; 0xffffffe8
   18350:	str	ip, [fp, #-60]	; 0xffffffc4
   18354:	ldr	ip, [r4, #-12]
   18358:	str	ip, [fp, #-68]	; 0xffffffbc
   1835c:	ldr	ip, [r4, #-8]
   18360:	str	lr, [fp, #-76]	; 0xffffffb4
   18364:	str	ip, [fp, #-64]	; 0xffffffc0
   18368:	blx	r3
   1836c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18370:	str	r3, [r4, #-4]
   18374:	cmp	r0, #7
   18378:	beq	183b4 <argp_parse@@Base+0x9ac>
   1837c:	cmp	r0, #0
   18380:	bne	17e34 <argp_parse@@Base+0x42c>
   18384:	ldr	r0, [fp, #-92]	; 0xffffffa4
   18388:	ldr	r5, [fp, #-84]	; 0xffffffac
   1838c:	cmp	r8, r5
   18390:	sublt	r8, r5, r8
   18394:	ldrlt	r3, [r4, #-24]	; 0xffffffe8
   18398:	movge	r3, #1
   1839c:	addlt	r8, r3, r8
   183a0:	strlt	r8, [r4, #-24]	; 0xffffffe8
   183a4:	ldrlt	r2, [fp, #-100]	; 0xffffff9c
   183a8:	strge	r3, [fp, #-100]	; 0xffffff9c
   183ac:	movge	r2, r3
   183b0:	b	17cac <argp_parse@@Base+0x2a4>
   183b4:	ldr	lr, [fp, #-84]	; 0xffffffac
   183b8:	ldr	r3, [r4, #-36]	; 0xffffffdc
   183bc:	sub	lr, lr, #1
   183c0:	cmp	r3, #0
   183c4:	str	lr, [fp, #-84]	; 0xffffffac
   183c8:	beq	1842c <argp_parse@@Base+0xa24>
   183cc:	add	r0, r5, #24
   183d0:	ldr	r2, [r5, #12]
   183d4:	ldm	r0, {r0, r1, ip}
   183d8:	str	r2, [fp, #-76]	; 0xffffffb4
   183dc:	sub	r2, fp, #96	; 0x60
   183e0:	str	ip, [fp, #-60]	; 0xffffffc4
   183e4:	str	r0, [fp, #-68]	; 0xffffffbc
   183e8:	str	r1, [fp, #-64]	; 0xffffffc0
   183ec:	mov	r0, sl
   183f0:	mov	r1, r6
   183f4:	blx	r3
   183f8:	ldr	ip, [fp, #-108]	; 0xffffff94
   183fc:	ldr	r2, [fp, #-60]	; 0xffffffc4
   18400:	cmp	r4, ip
   18404:	movcs	r1, #0
   18408:	movcc	r1, #1
   1840c:	mov	r3, r4
   18410:	str	r2, [r5, #32]
   18414:	cmp	r0, #7
   18418:	movne	r1, #0
   1841c:	cmp	r1, #0
   18420:	beq	18790 <argp_parse@@Base+0xd88>
   18424:	ldr	lr, [fp, #-84]	; 0xffffffac
   18428:	b	18318 <argp_parse@@Base+0x910>
   1842c:	ldr	ip, [fp, #-108]	; 0xffffff94
   18430:	cmp	r9, ip
   18434:	add	r4, r4, #36	; 0x24
   18438:	bcc	1831c <argp_parse@@Base+0x914>
   1843c:	ldr	r5, [fp, #-84]	; 0xffffffac
   18440:	ldr	r0, [fp, #-92]	; 0xffffffa4
   18444:	b	17ccc <argp_parse@@Base+0x2c4>
   18448:	ldr	r3, [fp, #-152]	; 0xffffff68
   1844c:	ldr	r2, [r3, #12]
   18450:	cmp	r7, r2
   18454:	bne	1846c <argp_parse@@Base+0xa64>
   18458:	b	185a0 <argp_parse@@Base+0xb98>
   1845c:	add	r3, r3, #16
   18460:	ldr	r2, [r3, #12]
   18464:	cmp	r7, r2
   18468:	beq	185a0 <argp_parse@@Base+0xb98>
   1846c:	ldr	r2, [r3]
   18470:	cmp	r2, #0
   18474:	bne	1845c <argp_parse@@Base+0xa54>
   18478:	ldr	r2, [pc, #912]	; 18810 <argp_parse@@Base+0xe08>
   1847c:	ldr	r3, [pc, #900]	; 18808 <argp_parse@@Base+0xe00>
   18480:	ldr	r1, [pc, #908]	; 18814 <argp_parse@@Base+0xe0c>
   18484:	sub	r0, fp, #96	; 0x60
   18488:	bl	16cf4 <argp_error@@Base>
   1848c:	b	182d8 <argp_parse@@Base+0x8d0>
   18490:	sub	lr, fp, #148	; 0x94
   18494:	stm	sp, {ip, lr}
   18498:	bl	18a04 <argp_parse@@Base+0xffc>
   1849c:	ldr	r5, [fp, #-148]	; 0xffffff6c
   184a0:	str	r5, [fp, #-84]	; 0xffffffac
   184a4:	mov	r7, r0
   184a8:	cmn	r7, #1
   184ac:	bne	18194 <argp_parse@@Base+0x78c>
   184b0:	cmp	r5, #1
   184b4:	str	r6, [fp, #-100]	; 0xffffff9c
   184b8:	ble	184d8 <argp_parse@@Base+0xad0>
   184bc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   184c0:	sub	r3, r5, #-1073741823	; 0xc0000001
   184c4:	ldr	r1, [pc, #844]	; 18818 <argp_parse@@Base+0xe10>
   184c8:	ldr	r0, [r2, r3, lsl #2]
   184cc:	bl	11004 <strcmp@plt>
   184d0:	cmp	r0, #0
   184d4:	streq	r5, [fp, #-72]	; 0xffffffb8
   184d8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   184dc:	cmp	r5, r0
   184e0:	bge	17ccc <argp_parse@@Base+0x2c4>
   184e4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   184e8:	tst	r3, #4
   184ec:	beq	185c4 <argp_parse@@Base+0xbbc>
   184f0:	ldr	r3, [fp, #4]
   184f4:	cmp	r3, #0
   184f8:	beq	1873c <argp_parse@@Base+0xd34>
   184fc:	ldr	r6, [fp, #-112]	; 0xffffff90
   18500:	ldr	ip, [fp, #-108]	; 0xffffff94
   18504:	str	r5, [r3]
   18508:	sub	r3, ip, #36	; 0x24
   1850c:	cmp	r6, r3
   18510:	bhi	185f8 <argp_parse@@Base+0xbf0>
   18514:	ldr	r7, [pc, #768]	; 1881c <argp_parse@@Base+0xe14>
   18518:	sub	r4, ip, #72	; 0x48
   1851c:	mov	r8, #0
   18520:	ldr	r3, [r4, #36]	; 0x24
   18524:	sub	r2, fp, #96	; 0x60
   18528:	cmp	r3, #0
   1852c:	mov	r1, r8
   18530:	mov	r0, r7
   18534:	beq	18590 <argp_parse@@Base+0xb88>
   18538:	ldr	ip, [r4, #68]	; 0x44
   1853c:	ldr	lr, [r4, #48]	; 0x30
   18540:	str	ip, [fp, #-60]	; 0xffffffc4
   18544:	ldr	ip, [r4, #60]	; 0x3c
   18548:	str	ip, [fp, #-68]	; 0xffffffbc
   1854c:	ldr	ip, [r4, #64]	; 0x40
   18550:	str	lr, [fp, #-76]	; 0xffffffb4
   18554:	str	ip, [fp, #-64]	; 0xffffffc0
   18558:	blx	r3
   1855c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18560:	str	r3, [r4, #68]	; 0x44
   18564:	ldr	r6, [fp, #-112]	; 0xffffff90
   18568:	cmp	r6, r4
   1856c:	bhi	185d8 <argp_parse@@Base+0xbd0>
   18570:	cmp	r0, #7
   18574:	cmpne	r0, #0
   18578:	sub	r4, r4, #36	; 0x24
   1857c:	beq	18520 <argp_parse@@Base+0xb18>
   18580:	ldr	r4, [fp, #-108]	; 0xffffff94
   18584:	mov	r5, r0
   18588:	sub	r4, r4, #36	; 0x24
   1858c:	b	17ebc <argp_parse@@Base+0x4b4>
   18590:	cmp	r6, r4
   18594:	bhi	185e4 <argp_parse@@Base+0xbdc>
   18598:	sub	r4, r4, #36	; 0x24
   1859c:	b	18520 <argp_parse@@Base+0xb18>
   185a0:	ldr	r2, [r3]
   185a4:	ldr	r3, [pc, #612]	; 18810 <argp_parse@@Base+0xe08>
   185a8:	cmp	r2, #0
   185ac:	moveq	r2, r3
   185b0:	b	1847c <argp_parse@@Base+0xa74>
   185b4:	ldr	r3, [fp, #-140]	; 0xffffff74
   185b8:	cmn	r3, #1
   185bc:	bne	182d8 <argp_parse@@Base+0x8d0>
   185c0:	b	181ac <argp_parse@@Base+0x7a4>
   185c4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   185c8:	ldr	r7, [r3, r5, lsl #2]
   185cc:	add	r5, r5, #1
   185d0:	str	r7, [fp, #-136]	; 0xffffff78
   185d4:	b	182fc <argp_parse@@Base+0x8f4>
   185d8:	cmp	r0, #7
   185dc:	mov	r5, r0
   185e0:	bne	186a0 <argp_parse@@Base+0xc98>
   185e4:	ldr	r4, [fp, #-108]	; 0xffffff94
   185e8:	sub	r4, r4, #36	; 0x24
   185ec:	cmp	r6, r4
   185f0:	movls	r5, #0
   185f4:	bls	17ec4 <argp_parse@@Base+0x4bc>
   185f8:	mov	r5, #0
   185fc:	b	17f30 <argp_parse@@Base+0x528>
   18600:	ldr	r3, [r8, #4]
   18604:	cmp	r3, #0
   18608:	moveq	r6, #36	; 0x24
   1860c:	movne	r6, #72	; 0x48
   18610:	movne	r3, #1
   18614:	strne	r3, [fp, #-220]	; 0xffffff24
   18618:	cmp	r4, #0
   1861c:	beq	1867c <argp_parse@@Base+0xc74>
   18620:	ldr	r0, [r4]
   18624:	cmp	r0, #0
   18628:	beq	1867c <argp_parse@@Base+0xc74>
   1862c:	sub	r1, fp, #228	; 0xe4
   18630:	bl	17334 <argp_error@@Base+0x640>
   18634:	ldr	r3, [fp, #-216]	; 0xffffff28
   18638:	ldr	r0, [r4, #16]!
   1863c:	add	r3, r3, #1
   18640:	cmp	r0, #0
   18644:	str	r3, [fp, #-216]	; 0xffffff28
   18648:	bne	1862c <argp_parse@@Base+0xc24>
   1864c:	ldr	r6, [fp, #-220]	; 0xffffff24
   18650:	ldr	r2, [fp, #-224]	; 0xffffff20
   18654:	add	r6, r6, #1
   18658:	lsl	r4, r3, #2
   1865c:	add	r6, r6, r6, lsl #3
   18660:	add	r3, r2, #1
   18664:	lsl	r6, r6, #2
   18668:	add	sl, r4, r6
   1866c:	add	r3, sl, r3, lsl #4
   18670:	str	r3, [fp, #-232]	; 0xffffff18
   18674:	ldr	r0, [fp, #-228]	; 0xffffff1c
   18678:	b	17b20 <argp_parse@@Base+0x118>
   1867c:	ldr	r4, [fp, #-216]	; 0xffffff28
   18680:	ldr	r3, [fp, #-224]	; 0xffffff20
   18684:	ldr	r0, [fp, #-228]	; 0xffffff1c
   18688:	lsl	r4, r4, #2
   1868c:	add	r3, r3, #1
   18690:	add	sl, r4, r6
   18694:	add	r3, sl, r3, lsl #4
   18698:	str	r3, [fp, #-232]	; 0xffffff18
   1869c:	b	17b20 <argp_parse@@Base+0x118>
   186a0:	ldr	r4, [fp, #-108]	; 0xffffff94
   186a4:	sub	r4, r4, #36	; 0x24
   186a8:	b	17ebc <argp_parse@@Base+0x4b4>
   186ac:	ldr	r0, [r2]
   186b0:	cmp	r0, #0
   186b4:	beq	17c8c <argp_parse@@Base+0x284>
   186b8:	bl	188d8 <argp_parse@@Base+0xed0>
   186bc:	str	r0, [fp, #-56]	; 0xffffffc8
   186c0:	b	17c98 <argp_parse@@Base+0x290>
   186c4:	ldr	r2, [pc, #340]	; 18820 <argp_parse@@Base+0xe18>
   186c8:	ldr	r2, [r2]
   186cc:	cmp	r2, #0
   186d0:	addeq	ip, r3, #16
   186d4:	bne	1807c <argp_parse@@Base+0x674>
   186d8:	b	18088 <argp_parse@@Base+0x680>
   186dc:	ldr	r6, [fp, #-112]	; 0xffffff90
   186e0:	sub	ip, ip, #36	; 0x24
   186e4:	cmp	r6, ip
   186e8:	mov	r5, r0
   186ec:	bls	18704 <argp_parse@@Base+0xcfc>
   186f0:	ldr	r3, [fp, #4]
   186f4:	cmp	r3, #0
   186f8:	bne	17e18 <argp_parse@@Base+0x410>
   186fc:	b	17e24 <argp_parse@@Base+0x41c>
   18700:	mov	r5, r0
   18704:	ldr	r3, [fp, #4]
   18708:	cmp	r3, #0
   1870c:	bne	17e18 <argp_parse@@Base+0x410>
   18710:	cmp	r5, #7
   18714:	bne	17e3c <argp_parse@@Base+0x434>
   18718:	b	182d8 <argp_parse@@Base+0x8d0>
   1871c:	ldr	r6, [fp, #-112]	; 0xffffff90
   18720:	sub	r4, ip, #36	; 0x24
   18724:	cmp	r4, r6
   18728:	mov	r5, r0
   1872c:	bcs	17d84 <argp_parse@@Base+0x37c>
   18730:	cmp	r5, #7
   18734:	beq	17e08 <argp_parse@@Base+0x400>
   18738:	b	186f0 <argp_parse@@Base+0xce8>
   1873c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   18740:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18744:	tst	r3, #2
   18748:	bne	182dc <argp_parse@@Base+0x8d4>
   1874c:	cmp	r1, #0
   18750:	beq	182dc <argp_parse@@Base+0x8d4>
   18754:	mov	r0, r1
   18758:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1875c:	ldr	r1, [pc, #192]	; 18824 <argp_parse@@Base+0xe1c>
   18760:	bl	111c0 <fprintf@plt>
   18764:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18768:	b	182dc <argp_parse@@Base+0x8d4>
   1876c:	mov	r5, r0
   18770:	b	18730 <argp_parse@@Base+0xd28>
   18774:	sub	r4, ip, #36	; 0x24
   18778:	cmp	r6, r4
   1877c:	bls	17d90 <argp_parse@@Base+0x388>
   18780:	ldr	r3, [fp, #4]
   18784:	cmp	r3, #0
   18788:	bne	17e14 <argp_parse@@Base+0x40c>
   1878c:	b	18508 <argp_parse@@Base+0xb00>
   18790:	cmp	r0, #0
   18794:	bne	187c0 <argp_parse@@Base+0xdb8>
   18798:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1879c:	mov	r5, r0
   187a0:	str	r0, [fp, #-84]	; 0xffffffac
   187a4:	b	1838c <argp_parse@@Base+0x984>
   187a8:	cmp	r0, #7
   187ac:	mov	r5, r0
   187b0:	beq	17c64 <argp_parse@@Base+0x25c>
   187b4:	cmp	r0, #0
   187b8:	bne	17f38 <argp_parse@@Base+0x530>
   187bc:	b	17c64 <argp_parse@@Base+0x25c>
   187c0:	cmp	r0, #7
   187c4:	mov	r5, r0
   187c8:	beq	1843c <argp_parse@@Base+0xa34>
   187cc:	ldr	r6, [fp, #-112]	; 0xffffff90
   187d0:	b	17e40 <argp_parse@@Base+0x438>
   187d4:	muleq	r2, ip, r2
   187d8:	muleq	r2, r8, r2
   187dc:	andeq	lr, r2, r0, lsr #5
   187e0:	andeq	lr, r2, r4, lsr #5
   187e4:	tsteq	r0, r6
   187e8:	tsteq	r0, r2
   187ec:	tsteq	r0, r1
   187f0:	tsteq	r0, r5
   187f4:	tsteq	r0, r7
   187f8:	tsteq	r0, r3
   187fc:	andeq	lr, r2, r4, ror r3
   18800:	andeq	ip, r1, r0, asr lr
   18804:	andeq	ip, r1, ip, ror #28
   18808:	andeq	ip, r1, r8, lsl #29
   1880c:	andeq	ip, r1, r0, lsr #31
   18810:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   18814:	andeq	ip, r1, r8, lsr #31
   18818:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   1881c:	tsteq	r0, r4
   18820:	andeq	lr, r2, ip, asr #5
   18824:			; <UNDEFINED> instruction: 0x0001cfb4
   18828:	cmp	r1, #0
   1882c:	beq	1886c <argp_parse@@Base+0xe64>
   18830:	ldr	r2, [r1, #52]	; 0x34
   18834:	ldr	r3, [r2, #48]	; 0x30
   18838:	ldr	r1, [r2, #52]	; 0x34
   1883c:	cmp	r3, r1
   18840:	bcs	1886c <argp_parse@@Base+0xe64>
   18844:	ldr	r2, [r3, #4]
   18848:	cmp	r0, r2
   1884c:	bne	18860 <argp_parse@@Base+0xe58>
   18850:	b	18874 <argp_parse@@Base+0xe6c>
   18854:	ldr	r2, [r3, #4]
   18858:	cmp	r2, r0
   1885c:	beq	18874 <argp_parse@@Base+0xe6c>
   18860:	add	r3, r3, #36	; 0x24
   18864:	cmp	r3, r1
   18868:	bcc	18854 <argp_parse@@Base+0xe4c>
   1886c:	mov	r0, #0
   18870:	bx	lr
   18874:	ldr	r0, [r3, #24]
   18878:	bx	lr
   1887c:	ldr	ip, [pc, #32]	; 188a4 <argp_parse@@Base+0xe9c>
   18880:	push	{lr}		; (str lr, [sp, #-4]!)
   18884:	sub	sp, sp, #12
   18888:	ldm	ip, {r1, ip}
   1888c:	ldr	r3, [pc, #20]	; 188a8 <argp_parse@@Base+0xea0>
   18890:	ldr	r2, [pc, #20]	; 188ac <argp_parse@@Base+0xea4>
   18894:	str	ip, [sp]
   18898:	bl	18de8 <argp_parse@@Base+0x13e0>
   1889c:	add	sp, sp, #12
   188a0:	pop	{pc}		; (ldr pc, [sp], #4)
   188a4:	ldrdeq	lr, [r2], -r0
   188a8:	andeq	sp, r1, ip, lsl #1
   188ac:	muleq	r1, ip, r0
   188b0:	ldr	r3, [pc, #20]	; 188cc <argp_parse@@Base+0xec4>
   188b4:	ldr	r2, [pc, #20]	; 188d0 <argp_parse@@Base+0xec8>
   188b8:	ldr	ip, [pc, #20]	; 188d4 <argp_parse@@Base+0xecc>
   188bc:	str	r0, [r3]
   188c0:	str	ip, [r2]
   188c4:	str	r1, [r3, #4]
   188c8:	bx	lr
   188cc:	ldrdeq	lr, [r2], -r0
   188d0:	andeq	lr, r2, ip, asr #5
   188d4:	andeq	r8, r1, ip, ror r8
   188d8:	ldrb	r3, [r0]
   188dc:	cmp	r3, #47	; 0x2f
   188e0:	bne	188f0 <argp_parse@@Base+0xee8>
   188e4:	ldrb	r3, [r0, #1]!
   188e8:	cmp	r3, #47	; 0x2f
   188ec:	beq	188e4 <argp_parse@@Base+0xedc>
   188f0:	cmp	r3, #0
   188f4:	bxeq	lr
   188f8:	mov	r2, #0
   188fc:	push	{lr}		; (str lr, [sp, #-4]!)
   18900:	mov	ip, r2
   18904:	mov	r1, r0
   18908:	mov	lr, #1
   1890c:	cmp	r3, #47	; 0x2f
   18910:	moveq	r2, lr
   18914:	beq	18924 <argp_parse@@Base+0xf1c>
   18918:	cmp	r2, #0
   1891c:	movne	r0, r1
   18920:	movne	r2, ip
   18924:	ldrb	r3, [r1, #1]!
   18928:	cmp	r3, #0
   1892c:	bne	1890c <argp_parse@@Base+0xf04>
   18930:	pop	{pc}		; (ldr pc, [sp], #4)
   18934:	push	{r4, lr}
   18938:	mov	r4, r0
   1893c:	bl	111a8 <strlen@plt>
   18940:	cmp	r0, #1
   18944:	popls	{r4, pc}
   18948:	sub	r3, r0, #1
   1894c:	add	r2, r4, r3
   18950:	ldrb	r1, [r4, r3]
   18954:	cmp	r1, #47	; 0x2f
   18958:	popne	{r4, pc}
   1895c:	cmp	r3, #1
   18960:	beq	18974 <argp_parse@@Base+0xf6c>
   18964:	ldrb	r1, [r2, #-1]!
   18968:	sub	r0, r3, #1
   1896c:	cmp	r1, #47	; 0x2f
   18970:	beq	1897c <argp_parse@@Base+0xf74>
   18974:	mov	r0, r3
   18978:	pop	{r4, pc}
   1897c:	mov	r3, r0
   18980:	b	1895c <argp_parse@@Base+0xf54>
   18984:	push	{r4, r5, lr}
   18988:	sub	sp, sp, #12
   1898c:	mov	r5, r0
   18990:	bl	111cc <__errno_location@plt>
   18994:	mov	r2, #0
   18998:	mov	r4, r0
   1899c:	ldr	r3, [r0]
   189a0:	str	r2, [r4]
   189a4:	mov	r0, r5
   189a8:	str	r3, [sp]
   189ac:	str	r3, [sp, #4]
   189b0:	bl	11064 <free@plt>
   189b4:	ldr	r3, [r4]
   189b8:	add	r2, sp, #8
   189bc:	cmp	r3, #0
   189c0:	moveq	r3, #4
   189c4:	movne	r3, #0
   189c8:	add	r3, r2, r3
   189cc:	ldr	r3, [r3, #-8]
   189d0:	str	r3, [r4]
   189d4:	add	sp, sp, #12
   189d8:	pop	{r4, r5, pc}
   189dc:	push	{lr}		; (str lr, [sp, #-4]!)
   189e0:	sub	sp, sp, #20
   189e4:	mov	ip, #0
   189e8:	ldr	lr, [sp, #24]
   189ec:	str	ip, [sp, #8]
   189f0:	str	lr, [sp]
   189f4:	str	ip, [sp, #4]
   189f8:	bl	1b5a4 <argp_parse@@Base+0x3b9c>
   189fc:	add	sp, sp, #20
   18a00:	pop	{pc}		; (ldr pc, [sp], #4)
   18a04:	push	{r4, lr}
   18a08:	sub	sp, sp, #16
   18a0c:	mov	ip, #0
   18a10:	ldr	r4, [sp, #24]
   18a14:	ldr	lr, [sp, #28]
   18a18:	str	r4, [sp]
   18a1c:	str	lr, [sp, #8]
   18a20:	str	ip, [sp, #12]
   18a24:	str	ip, [sp, #4]
   18a28:	bl	1b030 <argp_parse@@Base+0x3628>
   18a2c:	add	sp, sp, #16
   18a30:	pop	{r4, pc}
   18a34:	push	{r4, lr}
   18a38:	sub	sp, sp, #16
   18a3c:	mov	lr, #0
   18a40:	ldr	r4, [sp, #24]
   18a44:	mov	ip, #1
   18a48:	stm	sp, {r4, ip, lr}
   18a4c:	bl	1b5a4 <argp_parse@@Base+0x3b9c>
   18a50:	add	sp, sp, #16
   18a54:	pop	{r4, pc}
   18a58:	push	{r4, r5, lr}
   18a5c:	sub	sp, sp, #20
   18a60:	mov	lr, #0
   18a64:	ldr	r5, [sp, #32]
   18a68:	ldr	r4, [sp, #36]	; 0x24
   18a6c:	mov	ip, #1
   18a70:	str	r5, [sp]
   18a74:	str	r4, [sp, #8]
   18a78:	str	lr, [sp, #12]
   18a7c:	str	ip, [sp, #4]
   18a80:	bl	1b030 <argp_parse@@Base+0x3628>
   18a84:	add	sp, sp, #20
   18a88:	pop	{r4, r5, pc}
   18a8c:	push	{r4, r5, r6, lr}
   18a90:	subs	r4, r0, #0
   18a94:	beq	18b08 <argp_parse@@Base+0x1100>
   18a98:	mov	r1, #47	; 0x2f
   18a9c:	bl	11238 <strrchr@plt>
   18aa0:	subs	r5, r0, #0
   18aa4:	beq	18af4 <argp_parse@@Base+0x10ec>
   18aa8:	add	r6, r5, #1
   18aac:	sub	r3, r6, r4
   18ab0:	cmp	r3, #6
   18ab4:	ble	18af4 <argp_parse@@Base+0x10ec>
   18ab8:	mov	r2, #7
   18abc:	ldr	r1, [pc, #96]	; 18b24 <argp_parse@@Base+0x111c>
   18ac0:	sub	r0, r5, #6
   18ac4:	bl	112b0 <strncmp@plt>
   18ac8:	cmp	r0, #0
   18acc:	bne	18af4 <argp_parse@@Base+0x10ec>
   18ad0:	mov	r2, #3
   18ad4:	ldr	r1, [pc, #76]	; 18b28 <argp_parse@@Base+0x1120>
   18ad8:	mov	r0, r6
   18adc:	bl	112b0 <strncmp@plt>
   18ae0:	cmp	r0, #0
   18ae4:	movne	r4, r6
   18ae8:	ldreq	r3, [pc, #60]	; 18b2c <argp_parse@@Base+0x1124>
   18aec:	addeq	r4, r5, #4
   18af0:	streq	r4, [r3]
   18af4:	ldr	r2, [pc, #52]	; 18b30 <argp_parse@@Base+0x1128>
   18af8:	ldr	r3, [pc, #52]	; 18b34 <argp_parse@@Base+0x112c>
   18afc:	str	r4, [r2]
   18b00:	str	r4, [r3]
   18b04:	pop	{r4, r5, r6, pc}
   18b08:	ldr	r3, [pc, #40]	; 18b38 <argp_parse@@Base+0x1130>
   18b0c:	mov	r2, #55	; 0x37
   18b10:	mov	r1, #1
   18b14:	ldr	r3, [r3]
   18b18:	ldr	r0, [pc, #28]	; 18b3c <argp_parse@@Base+0x1134>
   18b1c:	bl	11100 <fwrite@plt>
   18b20:	bl	112bc <abort@plt>
   18b24:	andeq	sp, r1, r4, ror #1
   18b28:	andeq	sp, r1, ip, ror #1
   18b2c:	muleq	r2, r8, r2
   18b30:	ldrdeq	lr, [r2], -r8
   18b34:	muleq	r2, ip, r2
   18b38:	andeq	lr, r2, r0, lsr #5
   18b3c:	andeq	sp, r1, ip, lsr #1
   18b40:	push	{r4, r5, r6, r7, lr}
   18b44:	sub	sp, sp, #36	; 0x24
   18b48:	cmp	r1, #0
   18b4c:	mov	r4, r0
   18b50:	ldr	r5, [sp, #56]	; 0x38
   18b54:	ldr	r6, [sp, #60]	; 0x3c
   18b58:	beq	18d98 <argp_parse@@Base+0x1390>
   18b5c:	str	r3, [sp]
   18b60:	mov	r3, r2
   18b64:	mov	r2, r1
   18b68:	ldr	r1, [pc, #564]	; 18da4 <argp_parse@@Base+0x139c>
   18b6c:	bl	111c0 <fprintf@plt>
   18b70:	ldr	r3, [pc, #560]	; 18da8 <argp_parse@@Base+0x13a0>
   18b74:	ldr	r2, [pc, #560]	; 18dac <argp_parse@@Base+0x13a4>
   18b78:	ldr	r1, [pc, #560]	; 18db0 <argp_parse@@Base+0x13a8>
   18b7c:	mov	r0, r4
   18b80:	bl	111c0 <fprintf@plt>
   18b84:	mov	r1, r4
   18b88:	mov	r0, #10
   18b8c:	bl	11250 <fputc@plt>
   18b90:	ldr	r1, [pc, #540]	; 18db4 <argp_parse@@Base+0x13ac>
   18b94:	ldr	r2, [pc, #540]	; 18db8 <argp_parse@@Base+0x13b0>
   18b98:	mov	r0, r4
   18b9c:	bl	111c0 <fprintf@plt>
   18ba0:	mov	r1, r4
   18ba4:	mov	r0, #10
   18ba8:	bl	11250 <fputc@plt>
   18bac:	cmp	r6, #9
   18bb0:	ldrls	pc, [pc, r6, lsl #2]
   18bb4:	b	18be0 <argp_parse@@Base+0x11d8>
   18bb8:	andeq	r8, r1, r0, lsr #24
   18bbc:	andeq	r8, r1, ip, ror #24
   18bc0:	andeq	r8, r1, r4, lsl #25
   18bc4:	muleq	r1, ip, ip
   18bc8:			; <UNDEFINED> instruction: 0x00018cbc
   18bcc:	andeq	r8, r1, r4, ror #25
   18bd0:	andeq	r8, r1, r4, lsl #26
   18bd4:	andeq	r8, r1, ip, lsr #26
   18bd8:	andeq	r8, r1, ip, asr sp
   18bdc:	andeq	r8, r1, r8, lsr #24
   18be0:	ldr	ip, [r5, #32]
   18be4:	ldr	r1, [r5, #28]
   18be8:	ldm	r5, {r2, r3}
   18bec:	ldr	r7, [r5, #24]
   18bf0:	ldr	r6, [r5, #20]
   18bf4:	str	ip, [sp, #24]
   18bf8:	ldr	lr, [r5, #16]
   18bfc:	str	r1, [sp, #20]
   18c00:	ldr	r1, [r5, #8]
   18c04:	ldr	ip, [r5, #12]
   18c08:	mov	r0, r4
   18c0c:	str	r7, [sp, #16]
   18c10:	stm	sp, {r1, ip, lr}
   18c14:	str	r6, [sp, #12]
   18c18:	ldr	r1, [pc, #412]	; 18dbc <argp_parse@@Base+0x13b4>
   18c1c:	bl	111c0 <fprintf@plt>
   18c20:	add	sp, sp, #36	; 0x24
   18c24:	pop	{r4, r5, r6, r7, pc}
   18c28:	ldr	ip, [r5, #32]
   18c2c:	ldr	r1, [r5, #28]
   18c30:	ldm	r5, {r2, r3}
   18c34:	ldr	r7, [r5, #24]
   18c38:	ldr	r6, [r5, #20]
   18c3c:	str	ip, [sp, #24]
   18c40:	ldr	lr, [r5, #16]
   18c44:	str	r1, [sp, #20]
   18c48:	ldr	r1, [r5, #8]
   18c4c:	ldr	ip, [r5, #12]
   18c50:	mov	r0, r4
   18c54:	str	r7, [sp, #16]
   18c58:	stm	sp, {r1, ip, lr}
   18c5c:	str	r6, [sp, #12]
   18c60:	ldr	r1, [pc, #344]	; 18dc0 <argp_parse@@Base+0x13b8>
   18c64:	bl	111c0 <fprintf@plt>
   18c68:	b	18c20 <argp_parse@@Base+0x1218>
   18c6c:	ldr	r2, [r5]
   18c70:	mov	r0, r4
   18c74:	ldr	r1, [pc, #328]	; 18dc4 <argp_parse@@Base+0x13bc>
   18c78:	add	sp, sp, #36	; 0x24
   18c7c:	pop	{r4, r5, r6, r7, lr}
   18c80:	b	111c0 <fprintf@plt>
   18c84:	mov	r0, r4
   18c88:	ldm	r5, {r2, r3}
   18c8c:	ldr	r1, [pc, #308]	; 18dc8 <argp_parse@@Base+0x13c0>
   18c90:	add	sp, sp, #36	; 0x24
   18c94:	pop	{r4, r5, r6, r7, lr}
   18c98:	b	111c0 <fprintf@plt>
   18c9c:	ldr	r1, [r5, #8]
   18ca0:	ldm	r5, {r2, r3}
   18ca4:	mov	r0, r4
   18ca8:	str	r1, [sp, #56]	; 0x38
   18cac:	ldr	r1, [pc, #280]	; 18dcc <argp_parse@@Base+0x13c4>
   18cb0:	add	sp, sp, #36	; 0x24
   18cb4:	pop	{r4, r5, r6, r7, lr}
   18cb8:	b	111c0 <fprintf@plt>
   18cbc:	ldr	r1, [r5, #8]
   18cc0:	ldr	ip, [r5, #12]
   18cc4:	ldm	r5, {r2, r3}
   18cc8:	mov	r0, r4
   18ccc:	str	r1, [sp, #56]	; 0x38
   18cd0:	str	ip, [sp, #60]	; 0x3c
   18cd4:	ldr	r1, [pc, #244]	; 18dd0 <argp_parse@@Base+0x13c8>
   18cd8:	add	sp, sp, #36	; 0x24
   18cdc:	pop	{r4, r5, r6, r7, lr}
   18ce0:	b	111c0 <fprintf@plt>
   18ce4:	add	r1, r5, #8
   18ce8:	ldm	r5, {r2, r3}
   18cec:	ldm	r1, {r1, ip, lr}
   18cf0:	mov	r0, r4
   18cf4:	stm	sp, {r1, ip, lr}
   18cf8:	ldr	r1, [pc, #212]	; 18dd4 <argp_parse@@Base+0x13cc>
   18cfc:	bl	111c0 <fprintf@plt>
   18d00:	b	18c20 <argp_parse@@Base+0x1218>
   18d04:	add	r1, r5, #8
   18d08:	ldr	r6, [r5, #20]
   18d0c:	ldm	r1, {r1, ip, lr}
   18d10:	mov	r0, r4
   18d14:	ldm	r5, {r2, r3}
   18d18:	str	r6, [sp, #12]
   18d1c:	stm	sp, {r1, ip, lr}
   18d20:	ldr	r1, [pc, #176]	; 18dd8 <argp_parse@@Base+0x13d0>
   18d24:	bl	111c0 <fprintf@plt>
   18d28:	b	18c20 <argp_parse@@Base+0x1218>
   18d2c:	add	r1, r5, #8
   18d30:	ldr	r7, [r5, #24]
   18d34:	ldm	r1, {r1, ip, lr}
   18d38:	mov	r0, r4
   18d3c:	ldr	r6, [r5, #20]
   18d40:	ldm	r5, {r2, r3}
   18d44:	stm	sp, {r1, ip, lr}
   18d48:	str	r7, [sp, #16]
   18d4c:	str	r6, [sp, #12]
   18d50:	ldr	r1, [pc, #132]	; 18ddc <argp_parse@@Base+0x13d4>
   18d54:	bl	111c0 <fprintf@plt>
   18d58:	b	18c20 <argp_parse@@Base+0x1218>
   18d5c:	ldr	r1, [r5, #28]
   18d60:	ldm	r5, {r2, r3}
   18d64:	ldr	r7, [r5, #24]
   18d68:	ldr	r6, [r5, #20]
   18d6c:	ldr	lr, [r5, #16]
   18d70:	str	r1, [sp, #20]
   18d74:	ldr	r1, [r5, #8]
   18d78:	ldr	ip, [r5, #12]
   18d7c:	mov	r0, r4
   18d80:	str	r7, [sp, #16]
   18d84:	stm	sp, {r1, ip, lr}
   18d88:	str	r6, [sp, #12]
   18d8c:	ldr	r1, [pc, #76]	; 18de0 <argp_parse@@Base+0x13d8>
   18d90:	bl	111c0 <fprintf@plt>
   18d94:	b	18c20 <argp_parse@@Base+0x1218>
   18d98:	ldr	r1, [pc, #68]	; 18de4 <argp_parse@@Base+0x13dc>
   18d9c:	bl	111c0 <fprintf@plt>
   18da0:	b	18b70 <argp_parse@@Base+0x1168>
   18da4:	strdeq	sp, [r1], -r0
   18da8:	andeq	r0, r0, r6, ror #15
   18dac:	andeq	sp, r1, r4, lsl #2
   18db0:	andeq	sp, r1, r4, lsl #8
   18db4:	andeq	sp, r1, ip, lsr #2
   18db8:	andeq	sp, r1, r8, lsl #2
   18dbc:	andeq	sp, r1, r8, lsl r3
   18dc0:	andeq	sp, r1, r4, ror #5
   18dc4:	ldrdeq	sp, [r1], -r8
   18dc8:	andeq	sp, r1, r8, ror #3
   18dcc:	andeq	sp, r1, r0, lsl #4
   18dd0:	andeq	sp, r1, ip, lsl r2
   18dd4:	andeq	sp, r1, ip, lsr r2
   18dd8:	andeq	sp, r1, r0, ror #4
   18ddc:	andeq	sp, r1, r8, lsl #5
   18de0:			; <UNDEFINED> instruction: 0x0001d2b4
   18de4:	strdeq	sp, [r1], -ip
   18de8:	push	{r4, r5, r6, r7, lr}
   18dec:	sub	sp, sp, #36	; 0x24
   18df0:	mov	r6, r0
   18df4:	ldr	r5, [sp, #56]	; 0x38
   18df8:	ldr	r4, [r5]
   18dfc:	cmp	r4, #0
   18e00:	beq	18e1c <argp_parse@@Base+0x1414>
   18e04:	mov	r0, r5
   18e08:	mov	r4, #0
   18e0c:	ldr	ip, [r0, #4]!
   18e10:	add	r4, r4, #1
   18e14:	cmp	ip, #0
   18e18:	bne	18e0c <argp_parse@@Base+0x1404>
   18e1c:	cmp	r1, #0
   18e20:	beq	1905c <argp_parse@@Base+0x1654>
   18e24:	str	r3, [sp]
   18e28:	mov	r0, r6
   18e2c:	mov	r3, r2
   18e30:	mov	r2, r1
   18e34:	ldr	r1, [pc, #560]	; 1906c <argp_parse@@Base+0x1664>
   18e38:	bl	111c0 <fprintf@plt>
   18e3c:	ldr	r3, [pc, #556]	; 19070 <argp_parse@@Base+0x1668>
   18e40:	ldr	r2, [pc, #556]	; 19074 <argp_parse@@Base+0x166c>
   18e44:	ldr	r1, [pc, #556]	; 19078 <argp_parse@@Base+0x1670>
   18e48:	mov	r0, r6
   18e4c:	bl	111c0 <fprintf@plt>
   18e50:	mov	r1, r6
   18e54:	mov	r0, #10
   18e58:	bl	11250 <fputc@plt>
   18e5c:	ldr	r1, [pc, #536]	; 1907c <argp_parse@@Base+0x1674>
   18e60:	ldr	r2, [pc, #536]	; 19080 <argp_parse@@Base+0x1678>
   18e64:	mov	r0, r6
   18e68:	bl	111c0 <fprintf@plt>
   18e6c:	mov	r1, r6
   18e70:	mov	r0, #10
   18e74:	bl	11250 <fputc@plt>
   18e78:	cmp	r4, #9
   18e7c:	ldrls	pc, [pc, r4, lsl #2]
   18e80:	b	18eac <argp_parse@@Base+0x14a4>
   18e84:	andeq	r8, r1, ip, ror #29
   18e88:	andeq	r8, r1, r8, lsr pc
   18e8c:	andeq	r8, r1, r0, asr pc
   18e90:	andeq	r8, r1, r8, ror #30
   18e94:	andeq	r8, r1, r8, lsl #31
   18e98:	andeq	r8, r1, r8, lsr #31
   18e9c:	andeq	r8, r1, r8, asr #31
   18ea0:	strdeq	r8, [r1], -r0
   18ea4:	andeq	r9, r1, r0, lsr #32
   18ea8:	strdeq	r8, [r1], -r4
   18eac:	ldr	ip, [r5, #32]
   18eb0:	ldr	r1, [r5, #28]
   18eb4:	ldm	r5, {r2, r3}
   18eb8:	ldr	r7, [r5, #24]
   18ebc:	ldr	r4, [r5, #20]
   18ec0:	str	ip, [sp, #24]
   18ec4:	ldr	lr, [r5, #16]
   18ec8:	str	r1, [sp, #20]
   18ecc:	ldr	r1, [r5, #8]
   18ed0:	ldr	ip, [r5, #12]
   18ed4:	mov	r0, r6
   18ed8:	str	r7, [sp, #16]
   18edc:	stm	sp, {r1, ip, lr}
   18ee0:	str	r4, [sp, #12]
   18ee4:	ldr	r1, [pc, #408]	; 19084 <argp_parse@@Base+0x167c>
   18ee8:	bl	111c0 <fprintf@plt>
   18eec:	add	sp, sp, #36	; 0x24
   18ef0:	pop	{r4, r5, r6, r7, pc}
   18ef4:	ldr	ip, [r5, #32]
   18ef8:	ldr	r1, [r5, #28]
   18efc:	ldm	r5, {r2, r3}
   18f00:	ldr	r7, [r5, #24]
   18f04:	ldr	r4, [r5, #20]
   18f08:	str	ip, [sp, #24]
   18f0c:	ldr	lr, [r5, #16]
   18f10:	str	r1, [sp, #20]
   18f14:	ldr	r1, [r5, #8]
   18f18:	ldr	ip, [r5, #12]
   18f1c:	mov	r0, r6
   18f20:	str	r7, [sp, #16]
   18f24:	stm	sp, {r1, ip, lr}
   18f28:	str	r4, [sp, #12]
   18f2c:	ldr	r1, [pc, #340]	; 19088 <argp_parse@@Base+0x1680>
   18f30:	bl	111c0 <fprintf@plt>
   18f34:	b	18eec <argp_parse@@Base+0x14e4>
   18f38:	ldr	r2, [r5]
   18f3c:	mov	r0, r6
   18f40:	ldr	r1, [pc, #324]	; 1908c <argp_parse@@Base+0x1684>
   18f44:	add	sp, sp, #36	; 0x24
   18f48:	pop	{r4, r5, r6, r7, lr}
   18f4c:	b	111c0 <fprintf@plt>
   18f50:	mov	r0, r6
   18f54:	ldm	r5, {r2, r3}
   18f58:	ldr	r1, [pc, #304]	; 19090 <argp_parse@@Base+0x1688>
   18f5c:	add	sp, sp, #36	; 0x24
   18f60:	pop	{r4, r5, r6, r7, lr}
   18f64:	b	111c0 <fprintf@plt>
   18f68:	ldr	r1, [r5, #8]
   18f6c:	ldm	r5, {r2, r3}
   18f70:	mov	r0, r6
   18f74:	str	r1, [sp, #56]	; 0x38
   18f78:	ldr	r1, [pc, #276]	; 19094 <argp_parse@@Base+0x168c>
   18f7c:	add	sp, sp, #36	; 0x24
   18f80:	pop	{r4, r5, r6, r7, lr}
   18f84:	b	111c0 <fprintf@plt>
   18f88:	ldr	r1, [r5, #8]
   18f8c:	ldr	ip, [r5, #12]
   18f90:	ldm	r5, {r2, r3}
   18f94:	mov	r0, r6
   18f98:	stm	sp, {r1, ip}
   18f9c:	ldr	r1, [pc, #244]	; 19098 <argp_parse@@Base+0x1690>
   18fa0:	bl	111c0 <fprintf@plt>
   18fa4:	b	18eec <argp_parse@@Base+0x14e4>
   18fa8:	add	r1, r5, #8
   18fac:	ldm	r5, {r2, r3}
   18fb0:	ldm	r1, {r1, ip, lr}
   18fb4:	mov	r0, r6
   18fb8:	stm	sp, {r1, ip, lr}
   18fbc:	ldr	r1, [pc, #216]	; 1909c <argp_parse@@Base+0x1694>
   18fc0:	bl	111c0 <fprintf@plt>
   18fc4:	b	18eec <argp_parse@@Base+0x14e4>
   18fc8:	add	r1, r5, #8
   18fcc:	ldr	r4, [r5, #20]
   18fd0:	ldm	r1, {r1, ip, lr}
   18fd4:	mov	r0, r6
   18fd8:	ldm	r5, {r2, r3}
   18fdc:	str	r4, [sp, #12]
   18fe0:	stm	sp, {r1, ip, lr}
   18fe4:	ldr	r1, [pc, #180]	; 190a0 <argp_parse@@Base+0x1698>
   18fe8:	bl	111c0 <fprintf@plt>
   18fec:	b	18eec <argp_parse@@Base+0x14e4>
   18ff0:	add	r1, r5, #8
   18ff4:	ldr	r7, [r5, #24]
   18ff8:	ldm	r1, {r1, ip, lr}
   18ffc:	mov	r0, r6
   19000:	ldr	r4, [r5, #20]
   19004:	ldm	r5, {r2, r3}
   19008:	stm	sp, {r1, ip, lr}
   1900c:	str	r7, [sp, #16]
   19010:	str	r4, [sp, #12]
   19014:	ldr	r1, [pc, #136]	; 190a4 <argp_parse@@Base+0x169c>
   19018:	bl	111c0 <fprintf@plt>
   1901c:	b	18eec <argp_parse@@Base+0x14e4>
   19020:	ldr	r1, [r5, #28]
   19024:	ldm	r5, {r2, r3}
   19028:	ldr	r7, [r5, #24]
   1902c:	ldr	r4, [r5, #20]
   19030:	ldr	lr, [r5, #16]
   19034:	str	r1, [sp, #20]
   19038:	ldr	r1, [r5, #8]
   1903c:	ldr	ip, [r5, #12]
   19040:	mov	r0, r6
   19044:	str	r7, [sp, #16]
   19048:	stm	sp, {r1, ip, lr}
   1904c:	str	r4, [sp, #12]
   19050:	ldr	r1, [pc, #80]	; 190a8 <argp_parse@@Base+0x16a0>
   19054:	bl	111c0 <fprintf@plt>
   19058:	b	18eec <argp_parse@@Base+0x14e4>
   1905c:	ldr	r1, [pc, #72]	; 190ac <argp_parse@@Base+0x16a4>
   19060:	mov	r0, r6
   19064:	bl	111c0 <fprintf@plt>
   19068:	b	18e3c <argp_parse@@Base+0x1434>
   1906c:	strdeq	sp, [r1], -r0
   19070:	andeq	r0, r0, r6, ror #15
   19074:	andeq	sp, r1, r4, lsl #2
   19078:	andeq	sp, r1, r4, lsl #8
   1907c:	andeq	sp, r1, ip, lsr #2
   19080:	andeq	sp, r1, r8, lsl #2
   19084:	andeq	sp, r1, r8, lsl r3
   19088:	andeq	sp, r1, r4, ror #5
   1908c:	ldrdeq	sp, [r1], -r8
   19090:	andeq	sp, r1, r8, ror #3
   19094:	andeq	sp, r1, r0, lsl #4
   19098:	andeq	sp, r1, ip, lsl r2
   1909c:	andeq	sp, r1, ip, lsr r2
   190a0:	andeq	sp, r1, r0, ror #4
   190a4:	andeq	sp, r1, r8, lsl #5
   190a8:			; <UNDEFINED> instruction: 0x0001d2b4
   190ac:	strdeq	sp, [r1], -ip
   190b0:	push	{r4, r5, r6, lr}
   190b4:	sub	sp, sp, #72	; 0x48
   190b8:	mov	r5, r0
   190bc:	ldr	ip, [sp, #88]	; 0x58
   190c0:	ldr	r0, [ip]
   190c4:	cmp	r0, #0
   190c8:	str	r0, [sp, #32]
   190cc:	beq	193d4 <argp_parse@@Base+0x19cc>
   190d0:	ldr	r0, [ip, #4]
   190d4:	cmp	r0, #0
   190d8:	str	r0, [sp, #36]	; 0x24
   190dc:	beq	193dc <argp_parse@@Base+0x19d4>
   190e0:	ldr	r0, [ip, #8]
   190e4:	cmp	r0, #0
   190e8:	str	r0, [sp, #40]	; 0x28
   190ec:	beq	193e4 <argp_parse@@Base+0x19dc>
   190f0:	ldr	r0, [ip, #12]
   190f4:	cmp	r0, #0
   190f8:	str	r0, [sp, #44]	; 0x2c
   190fc:	beq	193ec <argp_parse@@Base+0x19e4>
   19100:	ldr	r0, [ip, #16]
   19104:	cmp	r0, #0
   19108:	str	r0, [sp, #48]	; 0x30
   1910c:	beq	193f4 <argp_parse@@Base+0x19ec>
   19110:	ldr	r0, [ip, #20]
   19114:	cmp	r0, #0
   19118:	str	r0, [sp, #52]	; 0x34
   1911c:	beq	193fc <argp_parse@@Base+0x19f4>
   19120:	ldr	r0, [ip, #24]
   19124:	cmp	r0, #0
   19128:	str	r0, [sp, #56]	; 0x38
   1912c:	beq	19404 <argp_parse@@Base+0x19fc>
   19130:	ldr	r0, [ip, #28]
   19134:	cmp	r0, #0
   19138:	str	r0, [sp, #60]	; 0x3c
   1913c:	beq	1940c <argp_parse@@Base+0x1a04>
   19140:	ldr	r0, [ip, #32]
   19144:	cmp	r0, #0
   19148:	str	r0, [sp, #64]	; 0x40
   1914c:	beq	19414 <argp_parse@@Base+0x1a0c>
   19150:	ldr	r0, [ip, #36]	; 0x24
   19154:	cmp	r0, #0
   19158:	movne	r4, #10
   1915c:	moveq	r4, #9
   19160:	cmp	r1, #0
   19164:	beq	193c4 <argp_parse@@Base+0x19bc>
   19168:	str	r3, [sp]
   1916c:	mov	r0, r5
   19170:	mov	r3, r2
   19174:	mov	r2, r1
   19178:	ldr	r1, [pc, #668]	; 1941c <argp_parse@@Base+0x1a14>
   1917c:	bl	111c0 <fprintf@plt>
   19180:	ldr	r3, [pc, #664]	; 19420 <argp_parse@@Base+0x1a18>
   19184:	ldr	r2, [pc, #664]	; 19424 <argp_parse@@Base+0x1a1c>
   19188:	ldr	r1, [pc, #664]	; 19428 <argp_parse@@Base+0x1a20>
   1918c:	mov	r0, r5
   19190:	bl	111c0 <fprintf@plt>
   19194:	mov	r1, r5
   19198:	mov	r0, #10
   1919c:	bl	11250 <fputc@plt>
   191a0:	ldr	r1, [pc, #644]	; 1942c <argp_parse@@Base+0x1a24>
   191a4:	ldr	r2, [pc, #644]	; 19430 <argp_parse@@Base+0x1a28>
   191a8:	mov	r0, r5
   191ac:	bl	111c0 <fprintf@plt>
   191b0:	mov	r1, r5
   191b4:	mov	r0, #10
   191b8:	bl	11250 <fputc@plt>
   191bc:	cmp	r4, #9
   191c0:	ldrls	pc, [pc, r4, lsl #2]
   191c4:	b	191f0 <argp_parse@@Base+0x17e8>
   191c8:	andeq	r9, r1, r4, lsr r2
   191cc:	andeq	r9, r1, r4, lsl #5
   191d0:	muleq	r1, ip, r2
   191d4:			; <UNDEFINED> instruction: 0x000192b8
   191d8:	ldrdeq	r9, [r1], -ip
   191dc:	andeq	r9, r1, r0, lsl #6
   191e0:	andeq	r9, r1, r4, lsr #6
   191e4:	andeq	r9, r1, r0, asr r3
   191e8:	andeq	r9, r1, r4, lsl #7
   191ec:	andeq	r9, r1, ip, lsr r2
   191f0:	ldr	ip, [sp, #64]	; 0x40
   191f4:	ldr	r1, [sp, #60]	; 0x3c
   191f8:	ldr	lr, [sp, #48]	; 0x30
   191fc:	str	ip, [sp, #24]
   19200:	str	r1, [sp, #20]
   19204:	ldr	ip, [sp, #44]	; 0x2c
   19208:	ldr	r1, [sp, #40]	; 0x28
   1920c:	ldr	r6, [sp, #56]	; 0x38
   19210:	ldr	r4, [sp, #52]	; 0x34
   19214:	stm	sp, {r1, ip, lr}
   19218:	mov	r0, r5
   1921c:	ldr	r3, [sp, #36]	; 0x24
   19220:	ldr	r2, [sp, #32]
   19224:	str	r6, [sp, #16]
   19228:	str	r4, [sp, #12]
   1922c:	ldr	r1, [pc, #512]	; 19434 <argp_parse@@Base+0x1a2c>
   19230:	bl	111c0 <fprintf@plt>
   19234:	add	sp, sp, #72	; 0x48
   19238:	pop	{r4, r5, r6, pc}
   1923c:	ldr	ip, [sp, #64]	; 0x40
   19240:	ldr	r1, [sp, #60]	; 0x3c
   19244:	ldr	lr, [sp, #48]	; 0x30
   19248:	str	ip, [sp, #24]
   1924c:	str	r1, [sp, #20]
   19250:	ldr	ip, [sp, #44]	; 0x2c
   19254:	ldr	r1, [sp, #40]	; 0x28
   19258:	ldr	r6, [sp, #56]	; 0x38
   1925c:	ldr	r4, [sp, #52]	; 0x34
   19260:	stm	sp, {r1, ip, lr}
   19264:	mov	r0, r5
   19268:	ldr	r3, [sp, #36]	; 0x24
   1926c:	ldr	r2, [sp, #32]
   19270:	str	r6, [sp, #16]
   19274:	str	r4, [sp, #12]
   19278:	ldr	r1, [pc, #440]	; 19438 <argp_parse@@Base+0x1a30>
   1927c:	bl	111c0 <fprintf@plt>
   19280:	b	19234 <argp_parse@@Base+0x182c>
   19284:	mov	r0, r5
   19288:	ldr	r2, [sp, #32]
   1928c:	ldr	r1, [pc, #424]	; 1943c <argp_parse@@Base+0x1a34>
   19290:	add	sp, sp, #72	; 0x48
   19294:	pop	{r4, r5, r6, lr}
   19298:	b	111c0 <fprintf@plt>
   1929c:	mov	r0, r5
   192a0:	ldr	r3, [sp, #36]	; 0x24
   192a4:	ldr	r2, [sp, #32]
   192a8:	ldr	r1, [pc, #400]	; 19440 <argp_parse@@Base+0x1a38>
   192ac:	add	sp, sp, #72	; 0x48
   192b0:	pop	{r4, r5, r6, lr}
   192b4:	b	111c0 <fprintf@plt>
   192b8:	ldr	r1, [sp, #40]	; 0x28
   192bc:	ldr	r3, [sp, #36]	; 0x24
   192c0:	str	r1, [sp, #88]	; 0x58
   192c4:	ldr	r2, [sp, #32]
   192c8:	mov	r0, r5
   192cc:	ldr	r1, [pc, #368]	; 19444 <argp_parse@@Base+0x1a3c>
   192d0:	add	sp, sp, #72	; 0x48
   192d4:	pop	{r4, r5, r6, lr}
   192d8:	b	111c0 <fprintf@plt>
   192dc:	ldr	r1, [sp, #40]	; 0x28
   192e0:	ldr	ip, [sp, #44]	; 0x2c
   192e4:	ldr	r3, [sp, #36]	; 0x24
   192e8:	ldr	r2, [sp, #32]
   192ec:	stm	sp, {r1, ip}
   192f0:	mov	r0, r5
   192f4:	ldr	r1, [pc, #332]	; 19448 <argp_parse@@Base+0x1a40>
   192f8:	bl	111c0 <fprintf@plt>
   192fc:	b	19234 <argp_parse@@Base+0x182c>
   19300:	add	r1, sp, #40	; 0x28
   19304:	ldr	r3, [sp, #36]	; 0x24
   19308:	ldm	r1, {r1, ip, lr}
   1930c:	mov	r0, r5
   19310:	ldr	r2, [sp, #32]
   19314:	stm	sp, {r1, ip, lr}
   19318:	ldr	r1, [pc, #300]	; 1944c <argp_parse@@Base+0x1a44>
   1931c:	bl	111c0 <fprintf@plt>
   19320:	b	19234 <argp_parse@@Base+0x182c>
   19324:	add	r1, sp, #40	; 0x28
   19328:	ldr	r4, [sp, #52]	; 0x34
   1932c:	ldm	r1, {r1, ip, lr}
   19330:	mov	r0, r5
   19334:	ldr	r3, [sp, #36]	; 0x24
   19338:	ldr	r2, [sp, #32]
   1933c:	stm	sp, {r1, ip, lr}
   19340:	str	r4, [sp, #12]
   19344:	ldr	r1, [pc, #260]	; 19450 <argp_parse@@Base+0x1a48>
   19348:	bl	111c0 <fprintf@plt>
   1934c:	b	19234 <argp_parse@@Base+0x182c>
   19350:	add	r1, sp, #40	; 0x28
   19354:	ldr	r6, [sp, #56]	; 0x38
   19358:	ldm	r1, {r1, ip, lr}
   1935c:	mov	r0, r5
   19360:	ldr	r4, [sp, #52]	; 0x34
   19364:	ldr	r3, [sp, #36]	; 0x24
   19368:	stm	sp, {r1, ip, lr}
   1936c:	ldr	r2, [sp, #32]
   19370:	str	r6, [sp, #16]
   19374:	str	r4, [sp, #12]
   19378:	ldr	r1, [pc, #212]	; 19454 <argp_parse@@Base+0x1a4c>
   1937c:	bl	111c0 <fprintf@plt>
   19380:	b	19234 <argp_parse@@Base+0x182c>
   19384:	ldr	r1, [sp, #60]	; 0x3c
   19388:	ldr	lr, [sp, #48]	; 0x30
   1938c:	ldr	ip, [sp, #44]	; 0x2c
   19390:	str	r1, [sp, #20]
   19394:	ldr	r1, [sp, #40]	; 0x28
   19398:	ldr	r6, [sp, #56]	; 0x38
   1939c:	ldr	r4, [sp, #52]	; 0x34
   193a0:	stm	sp, {r1, ip, lr}
   193a4:	mov	r0, r5
   193a8:	ldr	r3, [sp, #36]	; 0x24
   193ac:	ldr	r2, [sp, #32]
   193b0:	str	r6, [sp, #16]
   193b4:	str	r4, [sp, #12]
   193b8:	ldr	r1, [pc, #152]	; 19458 <argp_parse@@Base+0x1a50>
   193bc:	bl	111c0 <fprintf@plt>
   193c0:	b	19234 <argp_parse@@Base+0x182c>
   193c4:	ldr	r1, [pc, #144]	; 1945c <argp_parse@@Base+0x1a54>
   193c8:	mov	r0, r5
   193cc:	bl	111c0 <fprintf@plt>
   193d0:	b	19180 <argp_parse@@Base+0x1778>
   193d4:	mov	r4, r0
   193d8:	b	19160 <argp_parse@@Base+0x1758>
   193dc:	mov	r4, #1
   193e0:	b	19160 <argp_parse@@Base+0x1758>
   193e4:	mov	r4, #2
   193e8:	b	19160 <argp_parse@@Base+0x1758>
   193ec:	mov	r4, #3
   193f0:	b	19160 <argp_parse@@Base+0x1758>
   193f4:	mov	r4, #4
   193f8:	b	19160 <argp_parse@@Base+0x1758>
   193fc:	mov	r4, #5
   19400:	b	19160 <argp_parse@@Base+0x1758>
   19404:	mov	r4, #6
   19408:	b	19160 <argp_parse@@Base+0x1758>
   1940c:	mov	r4, #7
   19410:	b	19160 <argp_parse@@Base+0x1758>
   19414:	mov	r4, #8
   19418:	b	19160 <argp_parse@@Base+0x1758>
   1941c:	strdeq	sp, [r1], -r0
   19420:	andeq	r0, r0, r6, ror #15
   19424:	andeq	sp, r1, r4, lsl #2
   19428:	andeq	sp, r1, r4, lsl #8
   1942c:	andeq	sp, r1, ip, lsr #2
   19430:	andeq	sp, r1, r8, lsl #2
   19434:	andeq	sp, r1, r8, lsl r3
   19438:	andeq	sp, r1, r4, ror #5
   1943c:	ldrdeq	sp, [r1], -r8
   19440:	andeq	sp, r1, r8, ror #3
   19444:	andeq	sp, r1, r0, lsl #4
   19448:	andeq	sp, r1, ip, lsl r2
   1944c:	andeq	sp, r1, ip, lsr r2
   19450:	andeq	sp, r1, r0, ror #4
   19454:	andeq	sp, r1, r8, lsl #5
   19458:			; <UNDEFINED> instruction: 0x0001d2b4
   1945c:	strdeq	sp, [r1], -ip
   19460:	push	{r3}		; (str r3, [sp, #-4]!)
   19464:	push	{r4, r5, r6, lr}
   19468:	sub	sp, sp, #84	; 0x54
   1946c:	add	ip, sp, #104	; 0x68
   19470:	ldr	lr, [sp, #104]	; 0x68
   19474:	mov	r5, r0
   19478:	cmp	lr, #0
   1947c:	str	lr, [sp, #40]	; 0x28
   19480:	str	ip, [sp, #36]	; 0x24
   19484:	beq	1978c <argp_parse@@Base+0x1d84>
   19488:	ldr	r0, [sp, #108]	; 0x6c
   1948c:	cmp	r0, #0
   19490:	str	r0, [sp, #44]	; 0x2c
   19494:	beq	19794 <argp_parse@@Base+0x1d8c>
   19498:	ldr	r0, [sp, #112]	; 0x70
   1949c:	cmp	r0, #0
   194a0:	str	r0, [sp, #48]	; 0x30
   194a4:	beq	1979c <argp_parse@@Base+0x1d94>
   194a8:	ldr	r0, [sp, #116]	; 0x74
   194ac:	cmp	r0, #0
   194b0:	str	r0, [sp, #52]	; 0x34
   194b4:	beq	197a4 <argp_parse@@Base+0x1d9c>
   194b8:	ldr	r0, [sp, #120]	; 0x78
   194bc:	cmp	r0, #0
   194c0:	str	r0, [sp, #56]	; 0x38
   194c4:	beq	197ac <argp_parse@@Base+0x1da4>
   194c8:	ldr	r0, [sp, #124]	; 0x7c
   194cc:	cmp	r0, #0
   194d0:	str	r0, [sp, #60]	; 0x3c
   194d4:	beq	197b4 <argp_parse@@Base+0x1dac>
   194d8:	ldr	r0, [sp, #128]	; 0x80
   194dc:	cmp	r0, #0
   194e0:	str	r0, [sp, #64]	; 0x40
   194e4:	beq	197bc <argp_parse@@Base+0x1db4>
   194e8:	ldr	r0, [sp, #132]	; 0x84
   194ec:	cmp	r0, #0
   194f0:	str	r0, [sp, #68]	; 0x44
   194f4:	beq	197c4 <argp_parse@@Base+0x1dbc>
   194f8:	ldr	r3, [sp, #136]	; 0x88
   194fc:	cmp	r3, #0
   19500:	str	r3, [sp, #72]	; 0x48
   19504:	beq	197cc <argp_parse@@Base+0x1dc4>
   19508:	ldr	lr, [sp, #140]	; 0x8c
   1950c:	cmp	lr, #0
   19510:	movne	r4, #10
   19514:	moveq	r4, #9
   19518:	cmp	r1, #0
   1951c:	ldr	r3, [sp, #100]	; 0x64
   19520:	beq	1977c <argp_parse@@Base+0x1d74>
   19524:	str	r3, [sp]
   19528:	mov	r0, r5
   1952c:	mov	r3, r2
   19530:	mov	r2, r1
   19534:	ldr	r1, [pc, #664]	; 197d4 <argp_parse@@Base+0x1dcc>
   19538:	bl	111c0 <fprintf@plt>
   1953c:	ldr	r3, [pc, #660]	; 197d8 <argp_parse@@Base+0x1dd0>
   19540:	ldr	r2, [pc, #660]	; 197dc <argp_parse@@Base+0x1dd4>
   19544:	ldr	r1, [pc, #660]	; 197e0 <argp_parse@@Base+0x1dd8>
   19548:	mov	r0, r5
   1954c:	bl	111c0 <fprintf@plt>
   19550:	mov	r1, r5
   19554:	mov	r0, #10
   19558:	bl	11250 <fputc@plt>
   1955c:	ldr	r1, [pc, #640]	; 197e4 <argp_parse@@Base+0x1ddc>
   19560:	ldr	r2, [pc, #640]	; 197e8 <argp_parse@@Base+0x1de0>
   19564:	mov	r0, r5
   19568:	bl	111c0 <fprintf@plt>
   1956c:	mov	r1, r5
   19570:	mov	r0, #10
   19574:	bl	11250 <fputc@plt>
   19578:	cmp	r4, #9
   1957c:	ldrls	pc, [pc, r4, lsl #2]
   19580:	b	195ac <argp_parse@@Base+0x1ba4>
   19584:	strdeq	r9, [r1], -r0
   19588:	andeq	r9, r1, r8, asr #12
   1958c:	andeq	r9, r1, ip, asr r6
   19590:	andeq	r9, r1, r4, ror r6
   19594:	muleq	r1, r4, r6
   19598:			; <UNDEFINED> instruction: 0x000196b8
   1959c:	ldrdeq	r9, [r1], -ip
   195a0:	andeq	r9, r1, r8, lsl #14
   195a4:	andeq	r9, r1, ip, lsr r7
   195a8:	andeq	r9, r1, r0, lsl #12
   195ac:	ldr	ip, [sp, #72]	; 0x48
   195b0:	ldr	r1, [sp, #68]	; 0x44
   195b4:	ldr	lr, [sp, #56]	; 0x38
   195b8:	str	ip, [sp, #24]
   195bc:	str	r1, [sp, #20]
   195c0:	ldr	ip, [sp, #52]	; 0x34
   195c4:	ldr	r1, [sp, #48]	; 0x30
   195c8:	ldr	r6, [sp, #64]	; 0x40
   195cc:	ldr	r4, [sp, #60]	; 0x3c
   195d0:	stm	sp, {r1, ip, lr}
   195d4:	mov	r0, r5
   195d8:	ldr	r3, [sp, #44]	; 0x2c
   195dc:	ldr	r2, [sp, #40]	; 0x28
   195e0:	str	r6, [sp, #16]
   195e4:	str	r4, [sp, #12]
   195e8:	ldr	r1, [pc, #508]	; 197ec <argp_parse@@Base+0x1de4>
   195ec:	bl	111c0 <fprintf@plt>
   195f0:	add	sp, sp, #84	; 0x54
   195f4:	pop	{r4, r5, r6, lr}
   195f8:	add	sp, sp, #4
   195fc:	bx	lr
   19600:	ldr	ip, [sp, #72]	; 0x48
   19604:	ldr	r1, [sp, #68]	; 0x44
   19608:	ldr	lr, [sp, #56]	; 0x38
   1960c:	str	ip, [sp, #24]
   19610:	str	r1, [sp, #20]
   19614:	ldr	ip, [sp, #52]	; 0x34
   19618:	ldr	r1, [sp, #48]	; 0x30
   1961c:	ldr	r6, [sp, #64]	; 0x40
   19620:	ldr	r4, [sp, #60]	; 0x3c
   19624:	stm	sp, {r1, ip, lr}
   19628:	mov	r0, r5
   1962c:	ldr	r3, [sp, #44]	; 0x2c
   19630:	ldr	r2, [sp, #40]	; 0x28
   19634:	str	r6, [sp, #16]
   19638:	str	r4, [sp, #12]
   1963c:	ldr	r1, [pc, #428]	; 197f0 <argp_parse@@Base+0x1de8>
   19640:	bl	111c0 <fprintf@plt>
   19644:	b	195f0 <argp_parse@@Base+0x1be8>
   19648:	mov	r0, r5
   1964c:	ldr	r2, [sp, #40]	; 0x28
   19650:	ldr	r1, [pc, #412]	; 197f4 <argp_parse@@Base+0x1dec>
   19654:	bl	111c0 <fprintf@plt>
   19658:	b	195f0 <argp_parse@@Base+0x1be8>
   1965c:	mov	r0, r5
   19660:	ldr	r3, [sp, #44]	; 0x2c
   19664:	ldr	r2, [sp, #40]	; 0x28
   19668:	ldr	r1, [pc, #392]	; 197f8 <argp_parse@@Base+0x1df0>
   1966c:	bl	111c0 <fprintf@plt>
   19670:	b	195f0 <argp_parse@@Base+0x1be8>
   19674:	ldr	r1, [sp, #48]	; 0x30
   19678:	ldr	r3, [sp, #44]	; 0x2c
   1967c:	str	r1, [sp]
   19680:	ldr	r2, [sp, #40]	; 0x28
   19684:	mov	r0, r5
   19688:	ldr	r1, [pc, #364]	; 197fc <argp_parse@@Base+0x1df4>
   1968c:	bl	111c0 <fprintf@plt>
   19690:	b	195f0 <argp_parse@@Base+0x1be8>
   19694:	ldr	r1, [sp, #48]	; 0x30
   19698:	ldr	ip, [sp, #52]	; 0x34
   1969c:	ldr	r3, [sp, #44]	; 0x2c
   196a0:	ldr	r2, [sp, #40]	; 0x28
   196a4:	stm	sp, {r1, ip}
   196a8:	mov	r0, r5
   196ac:	ldr	r1, [pc, #332]	; 19800 <argp_parse@@Base+0x1df8>
   196b0:	bl	111c0 <fprintf@plt>
   196b4:	b	195f0 <argp_parse@@Base+0x1be8>
   196b8:	add	r1, sp, #48	; 0x30
   196bc:	ldr	r3, [sp, #44]	; 0x2c
   196c0:	ldm	r1, {r1, ip, lr}
   196c4:	mov	r0, r5
   196c8:	ldr	r2, [sp, #40]	; 0x28
   196cc:	stm	sp, {r1, ip, lr}
   196d0:	ldr	r1, [pc, #300]	; 19804 <argp_parse@@Base+0x1dfc>
   196d4:	bl	111c0 <fprintf@plt>
   196d8:	b	195f0 <argp_parse@@Base+0x1be8>
   196dc:	add	r1, sp, #48	; 0x30
   196e0:	ldr	r4, [sp, #60]	; 0x3c
   196e4:	ldm	r1, {r1, ip, lr}
   196e8:	mov	r0, r5
   196ec:	ldr	r3, [sp, #44]	; 0x2c
   196f0:	ldr	r2, [sp, #40]	; 0x28
   196f4:	stm	sp, {r1, ip, lr}
   196f8:	str	r4, [sp, #12]
   196fc:	ldr	r1, [pc, #260]	; 19808 <argp_parse@@Base+0x1e00>
   19700:	bl	111c0 <fprintf@plt>
   19704:	b	195f0 <argp_parse@@Base+0x1be8>
   19708:	add	r1, sp, #48	; 0x30
   1970c:	ldr	r6, [sp, #64]	; 0x40
   19710:	ldm	r1, {r1, ip, lr}
   19714:	mov	r0, r5
   19718:	ldr	r4, [sp, #60]	; 0x3c
   1971c:	ldr	r3, [sp, #44]	; 0x2c
   19720:	stm	sp, {r1, ip, lr}
   19724:	ldr	r2, [sp, #40]	; 0x28
   19728:	str	r6, [sp, #16]
   1972c:	str	r4, [sp, #12]
   19730:	ldr	r1, [pc, #212]	; 1980c <argp_parse@@Base+0x1e04>
   19734:	bl	111c0 <fprintf@plt>
   19738:	b	195f0 <argp_parse@@Base+0x1be8>
   1973c:	ldr	r1, [sp, #68]	; 0x44
   19740:	ldr	lr, [sp, #56]	; 0x38
   19744:	ldr	ip, [sp, #52]	; 0x34
   19748:	str	r1, [sp, #20]
   1974c:	ldr	r1, [sp, #48]	; 0x30
   19750:	ldr	r6, [sp, #64]	; 0x40
   19754:	ldr	r4, [sp, #60]	; 0x3c
   19758:	stm	sp, {r1, ip, lr}
   1975c:	mov	r0, r5
   19760:	ldr	r3, [sp, #44]	; 0x2c
   19764:	ldr	r2, [sp, #40]	; 0x28
   19768:	str	r6, [sp, #16]
   1976c:	str	r4, [sp, #12]
   19770:	ldr	r1, [pc, #152]	; 19810 <argp_parse@@Base+0x1e08>
   19774:	bl	111c0 <fprintf@plt>
   19778:	b	195f0 <argp_parse@@Base+0x1be8>
   1977c:	ldr	r1, [pc, #144]	; 19814 <argp_parse@@Base+0x1e0c>
   19780:	mov	r0, r5
   19784:	bl	111c0 <fprintf@plt>
   19788:	b	1953c <argp_parse@@Base+0x1b34>
   1978c:	mov	r4, lr
   19790:	b	19518 <argp_parse@@Base+0x1b10>
   19794:	mov	r4, #1
   19798:	b	19518 <argp_parse@@Base+0x1b10>
   1979c:	mov	r4, #2
   197a0:	b	19518 <argp_parse@@Base+0x1b10>
   197a4:	mov	r4, #3
   197a8:	b	19518 <argp_parse@@Base+0x1b10>
   197ac:	mov	r4, #4
   197b0:	b	19518 <argp_parse@@Base+0x1b10>
   197b4:	mov	r4, #5
   197b8:	b	19518 <argp_parse@@Base+0x1b10>
   197bc:	mov	r4, #6
   197c0:	b	19518 <argp_parse@@Base+0x1b10>
   197c4:	mov	r4, #7
   197c8:	b	19518 <argp_parse@@Base+0x1b10>
   197cc:	mov	r4, #8
   197d0:	b	19518 <argp_parse@@Base+0x1b10>
   197d4:	strdeq	sp, [r1], -r0
   197d8:	andeq	r0, r0, r6, ror #15
   197dc:	andeq	sp, r1, r4, lsl #2
   197e0:	andeq	sp, r1, r4, lsl #8
   197e4:	andeq	sp, r1, ip, lsr #2
   197e8:	andeq	sp, r1, r8, lsl #2
   197ec:	andeq	sp, r1, r8, lsl r3
   197f0:	andeq	sp, r1, r4, ror #5
   197f4:	ldrdeq	sp, [r1], -r8
   197f8:	andeq	sp, r1, r8, ror #3
   197fc:	andeq	sp, r1, r0, lsl #4
   19800:	andeq	sp, r1, ip, lsl r2
   19804:	andeq	sp, r1, ip, lsr r2
   19808:	andeq	sp, r1, r0, ror #4
   1980c:	andeq	sp, r1, r8, lsl #5
   19810:			; <UNDEFINED> instruction: 0x0001d2b4
   19814:	strdeq	sp, [r1], -ip
   19818:	ldr	r3, [pc, #56]	; 19858 <argp_parse@@Base+0x1e50>
   1981c:	push	{r4, lr}
   19820:	mov	r0, #10
   19824:	ldr	r1, [r3]
   19828:	bl	11250 <fputc@plt>
   1982c:	ldr	r1, [pc, #40]	; 1985c <argp_parse@@Base+0x1e54>
   19830:	ldr	r0, [pc, #40]	; 19860 <argp_parse@@Base+0x1e58>
   19834:	bl	11028 <printf@plt>
   19838:	ldr	r1, [pc, #36]	; 19864 <argp_parse@@Base+0x1e5c>
   1983c:	ldr	r2, [pc, #36]	; 19868 <argp_parse@@Base+0x1e60>
   19840:	ldr	r0, [pc, #36]	; 1986c <argp_parse@@Base+0x1e64>
   19844:	bl	11028 <printf@plt>
   19848:	ldr	r1, [pc, #32]	; 19870 <argp_parse@@Base+0x1e68>
   1984c:	ldr	r0, [pc, #32]	; 19874 <argp_parse@@Base+0x1e6c>
   19850:	pop	{r4, lr}
   19854:	b	11028 <printf@plt>
   19858:	andeq	lr, r2, r4, lsr #5
   1985c:	andeq	sp, r1, r4, asr r3
   19860:	andeq	sp, r1, ip, ror #6
   19864:	muleq	r1, ip, r0
   19868:	andeq	sp, r1, r0, lsl #7
   1986c:	andeq	sp, r1, r8, lsr #7
   19870:			; <UNDEFINED> instruction: 0x0001d3bc
   19874:	ldrdeq	sp, [r1], -ip
   19878:	push	{r4, r5, r6, lr}
   1987c:	mov	r6, r0
   19880:	mov	r5, r1
   19884:	mov	r4, r2
   19888:	bl	1c048 <argp_parse@@Base+0x4640>
   1988c:	cmp	r0, #0
   19890:	popne	{r4, r5, r6, pc}
   19894:	cmp	r6, #0
   19898:	beq	198a8 <argp_parse@@Base+0x1ea0>
   1989c:	cmp	r5, #0
   198a0:	cmpne	r4, #0
   198a4:	popeq	{r4, r5, r6, pc}
   198a8:	bl	19ef4 <argp_parse@@Base+0x24ec>
   198ac:	push	{r4, lr}
   198b0:	bl	19f68 <argp_parse@@Base+0x2560>
   198b4:	cmp	r0, #0
   198b8:	popne	{r4, pc}
   198bc:	bl	19ef4 <argp_parse@@Base+0x24ec>
   198c0:	push	{r4, lr}
   198c4:	bl	19f68 <argp_parse@@Base+0x2560>
   198c8:	cmp	r0, #0
   198cc:	popne	{r4, pc}
   198d0:	bl	19ef4 <argp_parse@@Base+0x24ec>
   198d4:	push	{r4, lr}
   198d8:	bl	19f68 <argp_parse@@Base+0x2560>
   198dc:	cmp	r0, #0
   198e0:	popne	{r4, pc}
   198e4:	bl	19ef4 <argp_parse@@Base+0x24ec>
   198e8:	push	{r4, r5, r6, lr}
   198ec:	mov	r5, r0
   198f0:	mov	r4, r1
   198f4:	bl	19f94 <argp_parse@@Base+0x258c>
   198f8:	cmp	r0, #0
   198fc:	popne	{r4, r5, r6, pc}
   19900:	adds	r4, r4, #0
   19904:	movne	r4, #1
   19908:	cmp	r5, #0
   1990c:	orreq	r4, r4, #1
   19910:	cmp	r4, #0
   19914:	popeq	{r4, r5, r6, pc}
   19918:	bl	19ef4 <argp_parse@@Base+0x24ec>
   1991c:	push	{r4, lr}
   19920:	cmp	r1, #0
   19924:	orreq	r1, r1, #1
   19928:	bl	19f94 <argp_parse@@Base+0x258c>
   1992c:	cmp	r0, #0
   19930:	popne	{r4, pc}
   19934:	bl	19ef4 <argp_parse@@Base+0x24ec>
   19938:	push	{r4, r5, r6, lr}
   1993c:	mov	r6, r0
   19940:	mov	r5, r1
   19944:	mov	r4, r2
   19948:	bl	1c048 <argp_parse@@Base+0x4640>
   1994c:	cmp	r0, #0
   19950:	popne	{r4, r5, r6, pc}
   19954:	cmp	r6, #0
   19958:	beq	19968 <argp_parse@@Base+0x1f60>
   1995c:	cmp	r5, #0
   19960:	cmpne	r4, #0
   19964:	popeq	{r4, r5, r6, pc}
   19968:	bl	19ef4 <argp_parse@@Base+0x24ec>
   1996c:	cmp	r2, #0
   19970:	cmpne	r1, #0
   19974:	moveq	r2, #1
   19978:	moveq	r1, r2
   1997c:	push	{r4, lr}
   19980:	bl	1c048 <argp_parse@@Base+0x4640>
   19984:	cmp	r0, #0
   19988:	popne	{r4, pc}
   1998c:	bl	19ef4 <argp_parse@@Base+0x24ec>
   19990:	push	{r4, lr}
   19994:	mov	r2, r1
   19998:	mov	r1, r0
   1999c:	mov	r0, #0
   199a0:	bl	1c048 <argp_parse@@Base+0x4640>
   199a4:	cmp	r0, #0
   199a8:	popne	{r4, pc}
   199ac:	bl	19ef4 <argp_parse@@Base+0x24ec>
   199b0:	cmp	r1, #0
   199b4:	cmpne	r0, #0
   199b8:	moveq	r2, #1
   199bc:	movne	r2, r1
   199c0:	moveq	r1, r2
   199c4:	movne	r1, r0
   199c8:	push	{r4, lr}
   199cc:	mov	r0, #0
   199d0:	bl	1c048 <argp_parse@@Base+0x4640>
   199d4:	cmp	r0, #0
   199d8:	popne	{r4, pc}
   199dc:	bl	19ef4 <argp_parse@@Base+0x24ec>
   199e0:	cmp	r0, #0
   199e4:	push	{r4, r5, r6, lr}
   199e8:	mov	r5, r1
   199ec:	ldr	r4, [r1]
   199f0:	beq	19a2c <argp_parse@@Base+0x2024>
   199f4:	lsr	r2, r4, #1
   199f8:	add	r3, r2, #1
   199fc:	mvn	r3, r3
   19a00:	cmp	r4, r3
   19a04:	bhi	19a48 <argp_parse@@Base+0x2040>
   19a08:	add	r4, r4, #1
   19a0c:	add	r4, r4, r2
   19a10:	mov	r1, r4
   19a14:	mov	r2, #1
   19a18:	bl	1c048 <argp_parse@@Base+0x4640>
   19a1c:	cmp	r0, #0
   19a20:	beq	19a4c <argp_parse@@Base+0x2044>
   19a24:	str	r4, [r5]
   19a28:	pop	{r4, r5, r6, pc}
   19a2c:	cmp	r4, #0
   19a30:	moveq	r4, #64	; 0x40
   19a34:	mov	r1, r4
   19a38:	mov	r2, #1
   19a3c:	bl	1c048 <argp_parse@@Base+0x4640>
   19a40:	cmp	r0, #0
   19a44:	bne	19a24 <argp_parse@@Base+0x201c>
   19a48:	bl	19ef4 <argp_parse@@Base+0x24ec>
   19a4c:	cmp	r4, #0
   19a50:	bne	19a48 <argp_parse@@Base+0x2040>
   19a54:	str	r4, [r5]
   19a58:	pop	{r4, r5, r6, pc}
   19a5c:	cmp	r0, #0
   19a60:	push	{r4, r5, r6, lr}
   19a64:	mov	r5, r1
   19a68:	ldr	r4, [r1]
   19a6c:	mov	r6, r2
   19a70:	beq	19ab4 <argp_parse@@Base+0x20ac>
   19a74:	lsr	r1, r4, #1
   19a78:	add	r3, r1, #1
   19a7c:	mvn	r3, r3
   19a80:	cmp	r4, r3
   19a84:	bhi	19aec <argp_parse@@Base+0x20e4>
   19a88:	add	r4, r4, #1
   19a8c:	add	r4, r4, r1
   19a90:	mov	r1, r4
   19a94:	bl	1c048 <argp_parse@@Base+0x4640>
   19a98:	cmp	r0, #0
   19a9c:	bne	19aac <argp_parse@@Base+0x20a4>
   19aa0:	cmp	r4, #0
   19aa4:	cmpne	r6, #0
   19aa8:	bne	19aec <argp_parse@@Base+0x20e4>
   19aac:	str	r4, [r5]
   19ab0:	pop	{r4, r5, r6, pc}
   19ab4:	cmp	r4, #0
   19ab8:	bne	19ad4 <argp_parse@@Base+0x20cc>
   19abc:	mov	r1, r2
   19ac0:	mov	r0, #64	; 0x40
   19ac4:	bl	1c094 <argp_parse@@Base+0x468c>
   19ac8:	cmp	r0, #0
   19acc:	movne	r4, r0
   19ad0:	addeq	r4, r0, #1
   19ad4:	mov	r2, r6
   19ad8:	mov	r1, r4
   19adc:	mov	r0, #0
   19ae0:	bl	1c048 <argp_parse@@Base+0x4640>
   19ae4:	cmp	r0, #0
   19ae8:	bne	19aac <argp_parse@@Base+0x20a4>
   19aec:	bl	19ef4 <argp_parse@@Base+0x24ec>
   19af0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19af4:	sub	sp, sp, #12
   19af8:	ldr	r6, [r1]
   19afc:	mov	r8, r1
   19b00:	mov	r9, r0
   19b04:	asrs	r4, r6, #1
   19b08:	mov	sl, r2
   19b0c:	mov	fp, r3
   19b10:	ldr	r7, [sp, #48]	; 0x30
   19b14:	bmi	19c90 <argp_parse@@Base+0x2288>
   19b18:	mvn	r1, #-2147483648	; 0x80000000
   19b1c:	sub	r1, r1, r4
   19b20:	cmp	r6, r1
   19b24:	movle	r1, #0
   19b28:	movgt	r1, #1
   19b2c:	mvn	r3, fp
   19b30:	cmp	r1, #0
   19b34:	addeq	r4, r4, r6
   19b38:	mvnne	r4, #-2147483648	; 0x80000000
   19b3c:	lsr	r3, r3, #31
   19b40:	cmp	fp, r4
   19b44:	movge	r2, #0
   19b48:	andlt	r2, r3, #1
   19b4c:	cmp	r2, #0
   19b50:	beq	19c40 <argp_parse@@Base+0x2238>
   19b54:	cmp	r7, #0
   19b58:	blt	19d28 <argp_parse@@Base+0x2320>
   19b5c:	bne	19d20 <argp_parse@@Base+0x2318>
   19b60:	mov	r5, #64	; 0x40
   19b64:	mov	r1, r7
   19b68:	mov	r0, r5
   19b6c:	str	r3, [sp, #4]
   19b70:	bl	1c2a0 <argp_parse@@Base+0x4898>
   19b74:	mov	r1, r7
   19b78:	mov	r4, r0
   19b7c:	mov	r0, r5
   19b80:	bl	1c4c0 <argp_parse@@Base+0x4ab8>
   19b84:	ldr	r3, [sp, #4]
   19b88:	sub	r5, r5, r1
   19b8c:	cmp	r9, #0
   19b90:	sub	r2, r4, r6
   19b94:	streq	r9, [r8]
   19b98:	cmp	r2, sl
   19b9c:	bge	19c20 <argp_parse@@Base+0x2218>
   19ba0:	cmp	sl, #0
   19ba4:	blt	19cc0 <argp_parse@@Base+0x22b8>
   19ba8:	cmp	r6, #0
   19bac:	blt	19bcc <argp_parse@@Base+0x21c4>
   19bb0:	mvn	r2, #-2147483648	; 0x80000000
   19bb4:	sub	r2, r2, sl
   19bb8:	cmp	r6, r2
   19bbc:	movle	r2, #0
   19bc0:	movgt	r2, #1
   19bc4:	cmp	r2, #0
   19bc8:	bne	19cbc <argp_parse@@Base+0x22b4>
   19bcc:	add	r6, r6, sl
   19bd0:	cmp	fp, r6
   19bd4:	movge	r3, #0
   19bd8:	andlt	r3, r3, #1
   19bdc:	cmp	r3, #0
   19be0:	mov	r4, r6
   19be4:	bne	19cbc <argp_parse@@Base+0x22b4>
   19be8:	cmp	r7, #0
   19bec:	blt	19cd4 <argp_parse@@Base+0x22cc>
   19bf0:	beq	19c1c <argp_parse@@Base+0x2214>
   19bf4:	cmp	r6, #0
   19bf8:	blt	19d78 <argp_parse@@Base+0x2370>
   19bfc:	mov	r1, r7
   19c00:	mvn	r0, #-2147483648	; 0x80000000
   19c04:	bl	1c2a0 <argp_parse@@Base+0x4898>
   19c08:	cmp	r6, r0
   19c0c:	movle	r0, #0
   19c10:	movgt	r0, #1
   19c14:	cmp	r0, #0
   19c18:	bne	19cbc <argp_parse@@Base+0x22b4>
   19c1c:	mul	r5, r6, r7
   19c20:	mov	r1, r5
   19c24:	mov	r0, r9
   19c28:	bl	19f94 <argp_parse@@Base+0x258c>
   19c2c:	cmp	r0, #0
   19c30:	beq	19ca4 <argp_parse@@Base+0x229c>
   19c34:	str	r4, [r8]
   19c38:	add	sp, sp, #12
   19c3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19c40:	cmp	r7, #0
   19c44:	blt	19d00 <argp_parse@@Base+0x22f8>
   19c48:	beq	19b60 <argp_parse@@Base+0x2158>
   19c4c:	cmp	r4, #0
   19c50:	blt	19d30 <argp_parse@@Base+0x2328>
   19c54:	mov	r1, r7
   19c58:	mvn	r0, #-2147483648	; 0x80000000
   19c5c:	str	r3, [sp, #4]
   19c60:	bl	1c2a0 <argp_parse@@Base+0x4898>
   19c64:	ldr	r3, [sp, #4]
   19c68:	cmp	r0, r4
   19c6c:	movge	r0, #0
   19c70:	movlt	r0, #1
   19c74:	cmp	r0, #0
   19c78:	mvnne	r5, #-2147483648	; 0x80000000
   19c7c:	bne	19b64 <argp_parse@@Base+0x215c>
   19c80:	mul	r5, r7, r4
   19c84:	cmp	r5, #63	; 0x3f
   19c88:	bgt	19b8c <argp_parse@@Base+0x2184>
   19c8c:	b	19b60 <argp_parse@@Base+0x2158>
   19c90:	rsb	r1, r4, #-2147483648	; 0x80000000
   19c94:	cmp	r6, r1
   19c98:	movge	r1, #0
   19c9c:	movlt	r1, #1
   19ca0:	b	19b2c <argp_parse@@Base+0x2124>
   19ca4:	adds	r5, r5, #0
   19ca8:	movne	r5, #1
   19cac:	cmp	r9, #0
   19cb0:	orreq	r5, r5, #1
   19cb4:	cmp	r5, #0
   19cb8:	beq	19c34 <argp_parse@@Base+0x222c>
   19cbc:	bl	19ef4 <argp_parse@@Base+0x24ec>
   19cc0:	rsb	r2, sl, #-2147483648	; 0x80000000
   19cc4:	cmp	r6, r2
   19cc8:	movge	r2, #0
   19ccc:	movlt	r2, #1
   19cd0:	b	19bc4 <argp_parse@@Base+0x21bc>
   19cd4:	cmp	r6, #0
   19cd8:	blt	19d5c <argp_parse@@Base+0x2354>
   19cdc:	cmn	r7, #1
   19ce0:	beq	19c1c <argp_parse@@Base+0x2214>
   19ce4:	mov	r1, r7
   19ce8:	mov	r0, #-2147483648	; 0x80000000
   19cec:	bl	1c2a0 <argp_parse@@Base+0x4898>
   19cf0:	cmp	r6, r0
   19cf4:	movle	r0, #0
   19cf8:	movgt	r0, #1
   19cfc:	b	19c14 <argp_parse@@Base+0x220c>
   19d00:	cmp	r4, #0
   19d04:	blt	19d9c <argp_parse@@Base+0x2394>
   19d08:	cmn	r7, #1
   19d0c:	beq	19c80 <argp_parse@@Base+0x2278>
   19d10:	str	r3, [sp, #4]
   19d14:	mov	r1, r7
   19d18:	mov	r0, #-2147483648	; 0x80000000
   19d1c:	b	19c60 <argp_parse@@Base+0x2258>
   19d20:	mov	r4, fp
   19d24:	b	19c54 <argp_parse@@Base+0x224c>
   19d28:	mov	r4, fp
   19d2c:	b	19d08 <argp_parse@@Base+0x2300>
   19d30:	cmn	r4, #1
   19d34:	beq	19c80 <argp_parse@@Base+0x2278>
   19d38:	mov	r1, r4
   19d3c:	mov	r0, #-2147483648	; 0x80000000
   19d40:	str	r3, [sp, #4]
   19d44:	bl	1c2a0 <argp_parse@@Base+0x4898>
   19d48:	ldr	r3, [sp, #4]
   19d4c:	cmp	r7, r0
   19d50:	movle	r0, #0
   19d54:	movgt	r0, #1
   19d58:	b	19c74 <argp_parse@@Base+0x226c>
   19d5c:	mov	r1, r7
   19d60:	mvn	r0, #-2147483648	; 0x80000000
   19d64:	bl	1c2a0 <argp_parse@@Base+0x4898>
   19d68:	cmp	r6, r0
   19d6c:	movge	r0, #0
   19d70:	movlt	r0, #1
   19d74:	b	19c14 <argp_parse@@Base+0x220c>
   19d78:	cmn	r6, #1
   19d7c:	beq	19c1c <argp_parse@@Base+0x2214>
   19d80:	mov	r1, r6
   19d84:	mov	r0, #-2147483648	; 0x80000000
   19d88:	bl	1c2a0 <argp_parse@@Base+0x4898>
   19d8c:	cmp	r7, r0
   19d90:	movle	r0, #0
   19d94:	movgt	r0, #1
   19d98:	b	19c14 <argp_parse@@Base+0x220c>
   19d9c:	mov	r1, r7
   19da0:	mvn	r0, #-2147483648	; 0x80000000
   19da4:	str	r3, [sp, #4]
   19da8:	bl	1c2a0 <argp_parse@@Base+0x4898>
   19dac:	ldr	r3, [sp, #4]
   19db0:	cmp	r0, r4
   19db4:	movle	r0, #0
   19db8:	movgt	r0, #1
   19dbc:	b	19c74 <argp_parse@@Base+0x226c>
   19dc0:	push	{r4, lr}
   19dc4:	mov	r1, #1
   19dc8:	bl	19f20 <argp_parse@@Base+0x2518>
   19dcc:	cmp	r0, #0
   19dd0:	popne	{r4, pc}
   19dd4:	bl	19ef4 <argp_parse@@Base+0x24ec>
   19dd8:	push	{r4, lr}
   19ddc:	mov	r1, #1
   19de0:	bl	19f20 <argp_parse@@Base+0x2518>
   19de4:	cmp	r0, #0
   19de8:	popne	{r4, pc}
   19dec:	bl	19ef4 <argp_parse@@Base+0x24ec>
   19df0:	push	{r4, lr}
   19df4:	bl	19f20 <argp_parse@@Base+0x2518>
   19df8:	cmp	r0, #0
   19dfc:	popne	{r4, pc}
   19e00:	bl	19ef4 <argp_parse@@Base+0x24ec>
   19e04:	push	{r4, lr}
   19e08:	bl	19f20 <argp_parse@@Base+0x2518>
   19e0c:	cmp	r0, #0
   19e10:	popne	{r4, pc}
   19e14:	bl	19ef4 <argp_parse@@Base+0x24ec>
   19e18:	push	{r4, r5, r6, lr}
   19e1c:	mov	r6, r0
   19e20:	mov	r0, r1
   19e24:	mov	r4, r1
   19e28:	bl	19f68 <argp_parse@@Base+0x2560>
   19e2c:	subs	r5, r0, #0
   19e30:	beq	19e48 <argp_parse@@Base+0x2440>
   19e34:	mov	r2, r4
   19e38:	mov	r1, r6
   19e3c:	bl	11088 <memcpy@plt>
   19e40:	mov	r0, r5
   19e44:	pop	{r4, r5, r6, pc}
   19e48:	bl	19ef4 <argp_parse@@Base+0x24ec>
   19e4c:	push	{r4, r5, r6, lr}
   19e50:	mov	r6, r0
   19e54:	mov	r0, r1
   19e58:	mov	r4, r1
   19e5c:	bl	19f68 <argp_parse@@Base+0x2560>
   19e60:	subs	r5, r0, #0
   19e64:	beq	19e7c <argp_parse@@Base+0x2474>
   19e68:	mov	r2, r4
   19e6c:	mov	r1, r6
   19e70:	bl	11088 <memcpy@plt>
   19e74:	mov	r0, r5
   19e78:	pop	{r4, r5, r6, pc}
   19e7c:	bl	19ef4 <argp_parse@@Base+0x24ec>
   19e80:	push	{r4, r5, r6, lr}
   19e84:	mov	r6, r0
   19e88:	add	r0, r1, #1
   19e8c:	mov	r4, r1
   19e90:	bl	19f68 <argp_parse@@Base+0x2560>
   19e94:	subs	r5, r0, #0
   19e98:	beq	19eb8 <argp_parse@@Base+0x24b0>
   19e9c:	mov	r3, #0
   19ea0:	mov	r1, r6
   19ea4:	strb	r3, [r5, r4]
   19ea8:	mov	r2, r4
   19eac:	bl	11088 <memcpy@plt>
   19eb0:	mov	r0, r5
   19eb4:	pop	{r4, r5, r6, pc}
   19eb8:	bl	19ef4 <argp_parse@@Base+0x24ec>
   19ebc:	push	{r4, r5, r6, lr}
   19ec0:	mov	r6, r0
   19ec4:	bl	111a8 <strlen@plt>
   19ec8:	add	r4, r0, #1
   19ecc:	mov	r0, r4
   19ed0:	bl	19f68 <argp_parse@@Base+0x2560>
   19ed4:	subs	r5, r0, #0
   19ed8:	beq	19ef0 <argp_parse@@Base+0x24e8>
   19edc:	mov	r2, r4
   19ee0:	mov	r1, r6
   19ee4:	bl	11088 <memcpy@plt>
   19ee8:	mov	r0, r5
   19eec:	pop	{r4, r5, r6, pc}
   19ef0:	bl	19ef4 <argp_parse@@Base+0x24ec>
   19ef4:	ldr	r1, [pc, #24]	; 19f14 <argp_parse@@Base+0x250c>
   19ef8:	push	{r4, lr}
   19efc:	ldr	r0, [r1]
   19f00:	ldr	r3, [pc, #16]	; 19f18 <argp_parse@@Base+0x2510>
   19f04:	ldr	r2, [pc, #16]	; 19f1c <argp_parse@@Base+0x2514>
   19f08:	mov	r1, #0
   19f0c:	bl	11124 <error@plt>
   19f10:	bl	112bc <abort@plt>
   19f14:	andeq	lr, r2, r4, lsl #5
   19f18:	andeq	sp, r1, r4, lsr r4
   19f1c:	andeq	ip, r1, ip, lsl #31
   19f20:	cmp	r1, #0
   19f24:	cmpne	r0, #0
   19f28:	moveq	r1, #1
   19f2c:	moveq	r0, r1
   19f30:	umull	r2, r3, r0, r1
   19f34:	adds	r3, r3, #0
   19f38:	movne	r3, #1
   19f3c:	cmp	r2, #0
   19f40:	blt	19f50 <argp_parse@@Base+0x2548>
   19f44:	cmp	r3, #0
   19f48:	bne	19f50 <argp_parse@@Base+0x2548>
   19f4c:	b	10fe0 <calloc@plt>
   19f50:	push	{r4, lr}
   19f54:	bl	111cc <__errno_location@plt>
   19f58:	mov	r3, #12
   19f5c:	str	r3, [r0]
   19f60:	mov	r0, #0
   19f64:	pop	{r4, pc}
   19f68:	cmp	r0, #0
   19f6c:	moveq	r0, #1
   19f70:	cmp	r0, #0
   19f74:	blt	19f7c <argp_parse@@Base+0x2574>
   19f78:	b	1113c <malloc@plt>
   19f7c:	push	{r4, lr}
   19f80:	bl	111cc <__errno_location@plt>
   19f84:	mov	r3, #12
   19f88:	str	r3, [r0]
   19f8c:	mov	r0, #0
   19f90:	pop	{r4, pc}
   19f94:	cmp	r0, #0
   19f98:	beq	19fbc <argp_parse@@Base+0x25b4>
   19f9c:	cmp	r1, #0
   19fa0:	push	{lr}		; (str lr, [sp, #-4]!)
   19fa4:	sub	sp, sp, #12
   19fa8:	beq	19fc4 <argp_parse@@Base+0x25bc>
   19fac:	blt	19fdc <argp_parse@@Base+0x25d4>
   19fb0:	add	sp, sp, #12
   19fb4:	pop	{lr}		; (ldr lr, [sp], #4)
   19fb8:	b	110dc <realloc@plt>
   19fbc:	mov	r0, r1
   19fc0:	b	19f68 <argp_parse@@Base+0x2560>
   19fc4:	str	r1, [sp, #4]
   19fc8:	bl	18984 <argp_parse@@Base+0xf7c>
   19fcc:	ldr	r3, [sp, #4]
   19fd0:	mov	r0, r3
   19fd4:	add	sp, sp, #12
   19fd8:	pop	{pc}		; (ldr pc, [sp], #4)
   19fdc:	bl	111cc <__errno_location@plt>
   19fe0:	mov	r2, #12
   19fe4:	mov	r3, #0
   19fe8:	str	r2, [r0]
   19fec:	b	19fd0 <argp_parse@@Base+0x25c8>
   19ff0:	push	{r4, r5, r6, r7, r8, lr}
   19ff4:	mov	r8, r0
   19ff8:	mov	r0, #36	; 0x24
   19ffc:	mov	r7, r1
   1a000:	mov	r6, r2
   1a004:	mov	r5, r3
   1a008:	bl	19f68 <argp_parse@@Base+0x2560>
   1a00c:	subs	r4, r0, #0
   1a010:	beq	1a054 <argp_parse@@Base+0x264c>
   1a014:	mov	r0, #0
   1a018:	str	r5, [r4, #12]
   1a01c:	str	r0, [r4, #20]
   1a020:	str	r0, [r4, #16]
   1a024:	str	r8, [r4]
   1a028:	str	r7, [r4, #4]
   1a02c:	str	r6, [r4, #8]
   1a030:	mov	r0, #200	; 0xc8
   1a034:	bl	19f68 <argp_parse@@Base+0x2560>
   1a038:	cmp	r0, #0
   1a03c:	addne	r3, r0, #200	; 0xc8
   1a040:	mov	r5, r0
   1a044:	str	r0, [r4, #24]
   1a048:	strne	r0, [r4, #28]
   1a04c:	strne	r3, [r4, #32]
   1a050:	beq	1a05c <argp_parse@@Base+0x2654>
   1a054:	mov	r0, r4
   1a058:	pop	{r4, r5, r6, r7, r8, pc}
   1a05c:	mov	r0, r4
   1a060:	bl	18984 <argp_parse@@Base+0xf7c>
   1a064:	mov	r4, r5
   1a068:	b	1a054 <argp_parse@@Base+0x264c>
   1a06c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a070:	mov	r7, r0
   1a074:	ldr	r4, [r0, #24]
   1a078:	ldr	r3, [r0, #16]
   1a07c:	ldr	r9, [r0, #28]
   1a080:	sub	sp, sp, #12
   1a084:	add	r4, r4, r3
   1a088:	mov	sl, #32
   1a08c:	cmp	r4, r9
   1a090:	bcs	1a164 <argp_parse@@Base+0x275c>
   1a094:	ldr	r8, [r7, #20]
   1a098:	cmp	r8, #0
   1a09c:	bne	1a108 <argp_parse@@Base+0x2700>
   1a0a0:	ldr	r5, [r7, #4]
   1a0a4:	cmp	r5, #0
   1a0a8:	beq	1a3d8 <argp_parse@@Base+0x29d0>
   1a0ac:	ldr	r2, [r7, #32]
   1a0b0:	add	r3, r9, r5
   1a0b4:	cmp	r2, r3
   1a0b8:	bls	1a0d0 <argp_parse@@Base+0x26c8>
   1a0bc:	b	1a500 <argp_parse@@Base+0x2af8>
   1a0c0:	cmp	r5, r8
   1a0c4:	str	r1, [r0, #20]
   1a0c8:	strb	sl, [r3]
   1a0cc:	beq	1a0fc <argp_parse@@Base+0x26f4>
   1a0d0:	ldr	r0, [r7]
   1a0d4:	add	r8, r8, #1
   1a0d8:	ldr	r3, [r0, #20]
   1a0dc:	ldr	r2, [r0, #24]
   1a0e0:	add	r1, r3, #1
   1a0e4:	cmp	r3, r2
   1a0e8:	bcc	1a0c0 <argp_parse@@Base+0x26b8>
   1a0ec:	mov	r1, sl
   1a0f0:	bl	11214 <__overflow@plt>
   1a0f4:	cmp	r5, r8
   1a0f8:	bne	1a0d0 <argp_parse@@Base+0x26c8>
   1a0fc:	ldr	r9, [r7, #28]
   1a100:	mov	r8, r5
   1a104:	str	r5, [r7, #20]
   1a108:	sub	fp, r9, r4
   1a10c:	mov	r2, fp
   1a110:	mov	r1, #10
   1a114:	mov	r0, r4
   1a118:	bl	111fc <memchr@plt>
   1a11c:	cmp	r8, #0
   1a120:	movlt	r8, #0
   1a124:	movlt	r3, r8
   1a128:	mov	r5, r0
   1a12c:	strlt	r3, [r7, #20]
   1a130:	cmp	r5, #0
   1a134:	beq	1a3f8 <argp_parse@@Base+0x29f0>
   1a138:	sub	r2, r5, r4
   1a13c:	ldr	r3, [r7, #8]
   1a140:	add	r2, r2, r8
   1a144:	cmp	r2, r3
   1a148:	bge	1a178 <argp_parse@@Base+0x2770>
   1a14c:	ldr	r9, [r7, #28]
   1a150:	add	r4, r5, #1
   1a154:	mov	r3, #0
   1a158:	cmp	r4, r9
   1a15c:	str	r3, [r7, #20]
   1a160:	bcc	1a094 <argp_parse@@Base+0x268c>
   1a164:	ldr	r3, [r7, #24]
   1a168:	sub	r9, r9, r3
   1a16c:	str	r9, [r7, #16]
   1a170:	add	sp, sp, #12
   1a174:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a178:	ldr	r2, [r7, #12]
   1a17c:	sub	r6, r3, #1
   1a180:	cmp	r2, #0
   1a184:	str	r2, [sp, #4]
   1a188:	blt	1a4b0 <argp_parse@@Base+0x2aa8>
   1a18c:	add	r6, r6, #1
   1a190:	sub	r8, r6, r8
   1a194:	adds	r8, r4, r8
   1a198:	bcs	1a430 <argp_parse@@Base+0x2a28>
   1a19c:	bl	11184 <__ctype_b_loc@plt>
   1a1a0:	mov	r3, r8
   1a1a4:	ldr	r0, [r0]
   1a1a8:	b	1a1b4 <argp_parse@@Base+0x27ac>
   1a1ac:	cmp	r3, r4
   1a1b0:	bcc	1a434 <argp_parse@@Base+0x2a2c>
   1a1b4:	mov	r1, r3
   1a1b8:	sub	r3, r3, #1
   1a1bc:	ldrb	r2, [r1]
   1a1c0:	mov	r6, r3
   1a1c4:	lsl	r2, r2, #1
   1a1c8:	ldrh	r2, [r0, r2]
   1a1cc:	tst	r2, #1
   1a1d0:	beq	1a1ac <argp_parse@@Base+0x27a4>
   1a1d4:	add	r6, r1, #1
   1a1d8:	cmp	r6, r4
   1a1dc:	bls	1a448 <argp_parse@@Base+0x2a40>
   1a1e0:	cmp	r4, r1
   1a1e4:	bhi	1a440 <argp_parse@@Base+0x2a38>
   1a1e8:	mov	r1, r3
   1a1ec:	sub	r8, r4, #1
   1a1f0:	b	1a20c <argp_parse@@Base+0x2804>
   1a1f4:	ldrb	r3, [r1]
   1a1f8:	sub	r1, r1, #1
   1a1fc:	lsl	r3, r3, #1
   1a200:	ldrh	r3, [r0, r3]
   1a204:	tst	r3, #1
   1a208:	beq	1a538 <argp_parse@@Base+0x2b30>
   1a20c:	cmp	r8, r1
   1a210:	mov	r2, r1
   1a214:	bne	1a1f4 <argp_parse@@Base+0x27ec>
   1a218:	add	r8, r8, #1
   1a21c:	add	r3, fp, #1
   1a220:	add	r3, r4, r3
   1a224:	cmp	r6, r3
   1a228:	beq	1a308 <argp_parse@@Base+0x2900>
   1a22c:	add	r5, r8, #1
   1a230:	ldr	r3, [sp, #4]
   1a234:	sub	r1, r6, r5
   1a238:	cmp	r1, r3
   1a23c:	bge	1a324 <argp_parse@@Base+0x291c>
   1a240:	cmp	r6, r9
   1a244:	bcs	1a31c <argp_parse@@Base+0x2914>
   1a248:	ldr	r3, [r7, #32]
   1a24c:	ldr	r2, [sp, #4]
   1a250:	sub	r3, r3, r9
   1a254:	add	r0, r2, #1
   1a258:	cmp	r3, r0
   1a25c:	bgt	1a568 <argp_parse@@Base+0x2b60>
   1a260:	ldr	r0, [r7, #24]
   1a264:	cmp	r8, r0
   1a268:	bls	1a27c <argp_parse@@Base+0x2874>
   1a26c:	sub	r2, r8, r0
   1a270:	ldr	r3, [r7]
   1a274:	mov	r1, #1
   1a278:	bl	11094 <fwrite_unlocked@plt>
   1a27c:	ldr	r0, [r7]
   1a280:	ldr	r2, [r0, #24]
   1a284:	ldr	r3, [r0, #20]
   1a288:	cmp	r3, r2
   1a28c:	addcc	r2, r3, #1
   1a290:	strcc	r2, [r0, #20]
   1a294:	movcc	r2, #10
   1a298:	strbcc	r2, [r3]
   1a29c:	bcs	1a5a8 <argp_parse@@Base+0x2ba0>
   1a2a0:	ldr	r5, [r7, #24]
   1a2a4:	sub	r4, r4, r5
   1a2a8:	sub	r1, r6, r5
   1a2ac:	add	fp, fp, r4
   1a2b0:	mov	r9, r1
   1a2b4:	mov	r2, r5
   1a2b8:	ldr	r3, [r7, #12]
   1a2bc:	cmp	r3, r1
   1a2c0:	bgt	1a340 <argp_parse@@Base+0x2938>
   1a2c4:	cmp	r3, #0
   1a2c8:	mov	r4, r5
   1a2cc:	ble	1a2e4 <argp_parse@@Base+0x28dc>
   1a2d0:	strb	sl, [r4], #1
   1a2d4:	ldr	r3, [r7, #12]
   1a2d8:	sub	r1, r4, r5
   1a2dc:	cmp	r1, r3
   1a2e0:	blt	1a2d0 <argp_parse@@Base+0x28c8>
   1a2e4:	cmp	r4, r6
   1a2e8:	bcc	1a3bc <argp_parse@@Base+0x29b4>
   1a2ec:	sub	r9, fp, r9
   1a2f0:	cmp	r3, #0
   1a2f4:	add	r9, r4, r9
   1a2f8:	mvneq	r3, #0
   1a2fc:	str	r9, [r7, #28]
   1a300:	str	r3, [r7, #20]
   1a304:	b	1a08c <argp_parse@@Base+0x2684>
   1a308:	ldr	r3, [r7, #32]
   1a30c:	ldr	r2, [sp, #4]
   1a310:	sub	r3, r3, r8
   1a314:	cmp	r3, r2
   1a318:	ble	1a240 <argp_parse@@Base+0x2838>
   1a31c:	add	r5, r8, #1
   1a320:	sub	r1, r6, r5
   1a324:	mov	r3, #10
   1a328:	strb	r3, [r8]
   1a32c:	ldr	r3, [r7, #12]
   1a330:	sub	r9, r6, r4
   1a334:	cmp	r3, r1
   1a338:	mov	r2, r4
   1a33c:	ble	1a2c4 <argp_parse@@Base+0x28bc>
   1a340:	add	r1, fp, #1
   1a344:	add	r1, r2, r1
   1a348:	cmp	r6, r1
   1a34c:	beq	1a554 <argp_parse@@Base+0x2b4c>
   1a350:	cmp	r3, #0
   1a354:	ble	1a3b0 <argp_parse@@Base+0x29a8>
   1a358:	mov	r4, #0
   1a35c:	mov	r8, r2
   1a360:	b	1a37c <argp_parse@@Base+0x2974>
   1a364:	str	ip, [r0, #20]
   1a368:	strb	sl, [r3]
   1a36c:	ldr	r3, [r7, #12]
   1a370:	add	r4, r4, #1
   1a374:	cmp	r3, r4
   1a378:	ble	1a3ac <argp_parse@@Base+0x29a4>
   1a37c:	ldr	r0, [r7]
   1a380:	ldr	r3, [r0, #20]
   1a384:	ldr	r1, [r0, #24]
   1a388:	add	ip, r3, #1
   1a38c:	cmp	r3, r1
   1a390:	bcc	1a364 <argp_parse@@Base+0x295c>
   1a394:	mov	r1, sl
   1a398:	bl	11214 <__overflow@plt>
   1a39c:	ldr	r3, [r7, #12]
   1a3a0:	add	r4, r4, #1
   1a3a4:	cmp	r3, r4
   1a3a8:	bgt	1a37c <argp_parse@@Base+0x2974>
   1a3ac:	mov	r2, r8
   1a3b0:	mov	r4, r5
   1a3b4:	cmp	r4, r6
   1a3b8:	bcs	1a2ec <argp_parse@@Base+0x28e4>
   1a3bc:	add	r2, r2, fp
   1a3c0:	sub	r2, r2, r6
   1a3c4:	mov	r1, r6
   1a3c8:	mov	r0, r4
   1a3cc:	bl	1104c <memmove@plt>
   1a3d0:	ldr	r3, [r7, #12]
   1a3d4:	b	1a2ec <argp_parse@@Base+0x28e4>
   1a3d8:	sub	fp, r9, r4
   1a3dc:	mov	r2, fp
   1a3e0:	mov	r1, #10
   1a3e4:	mov	r0, r4
   1a3e8:	bl	111fc <memchr@plt>
   1a3ec:	mov	r5, r0
   1a3f0:	cmp	r5, #0
   1a3f4:	bne	1a138 <argp_parse@@Base+0x2730>
   1a3f8:	ldr	r6, [r7, #8]
   1a3fc:	add	r3, fp, r8
   1a400:	cmp	r3, r6
   1a404:	bcc	1a5cc <argp_parse@@Base+0x2bc4>
   1a408:	ldr	r2, [r7, #12]
   1a40c:	sub	r6, r6, #1
   1a410:	cmp	r2, #0
   1a414:	str	r2, [sp, #4]
   1a418:	blt	1a5b8 <argp_parse@@Base+0x2bb0>
   1a41c:	add	r6, r6, #1
   1a420:	sub	r8, r6, r8
   1a424:	adds	r8, r4, r8
   1a428:	mov	r5, r9
   1a42c:	bcc	1a19c <argp_parse@@Base+0x2794>
   1a430:	mov	r6, r8
   1a434:	add	r6, r6, #1
   1a438:	cmp	r4, r6
   1a43c:	bcs	1a448 <argp_parse@@Base+0x2a40>
   1a440:	mov	r8, r6
   1a444:	b	1a21c <argp_parse@@Base+0x2814>
   1a448:	cmp	r8, r5
   1a44c:	bcs	1a484 <argp_parse@@Base+0x2a7c>
   1a450:	add	r6, r8, #1
   1a454:	b	1a478 <argp_parse@@Base+0x2a70>
   1a458:	bl	11184 <__ctype_b_loc@plt>
   1a45c:	ldrb	r3, [r6]
   1a460:	add	r6, r6, #1
   1a464:	lsl	r3, r3, #1
   1a468:	ldr	r2, [r0]
   1a46c:	ldrh	r3, [r2, r3]
   1a470:	tst	r3, #1
   1a474:	bne	1a494 <argp_parse@@Base+0x2a8c>
   1a478:	cmp	r6, r5
   1a47c:	mov	r8, r6
   1a480:	bne	1a458 <argp_parse@@Base+0x2a50>
   1a484:	cmp	r8, r5
   1a488:	beq	1a540 <argp_parse@@Base+0x2b38>
   1a48c:	bl	11184 <__ctype_b_loc@plt>
   1a490:	ldr	r2, [r0]
   1a494:	mov	r6, r8
   1a498:	ldrb	r3, [r6, #1]!
   1a49c:	lsl	r3, r3, #1
   1a4a0:	ldrh	r3, [r2, r3]
   1a4a4:	tst	r3, #1
   1a4a8:	bne	1a498 <argp_parse@@Base+0x2a90>
   1a4ac:	b	1a21c <argp_parse@@Base+0x2814>
   1a4b0:	cmp	r9, r5
   1a4b4:	str	r3, [sp, #4]
   1a4b8:	bls	1a5b4 <argp_parse@@Base+0x2bac>
   1a4bc:	sub	r0, r6, r8
   1a4c0:	sub	r2, r9, r5
   1a4c4:	add	r0, r4, r0
   1a4c8:	mov	r1, r5
   1a4cc:	bl	1104c <memmove@plt>
   1a4d0:	ldr	r2, [r7, #20]
   1a4d4:	ldr	r9, [r7, #28]
   1a4d8:	sub	r6, r6, r2
   1a4dc:	add	r6, r4, r6
   1a4e0:	mov	r3, #0
   1a4e4:	sub	r5, r6, r5
   1a4e8:	str	r3, [r7, #20]
   1a4ec:	ldr	r3, [sp, #4]
   1a4f0:	sub	r9, r9, r5
   1a4f4:	add	r4, r4, r3
   1a4f8:	str	r9, [r7, #28]
   1a4fc:	b	1a08c <argp_parse@@Base+0x2684>
   1a500:	add	r6, r4, r5
   1a504:	sub	r2, r9, r4
   1a508:	mov	r1, r4
   1a50c:	mov	r0, r6
   1a510:	bl	1104c <memmove@plt>
   1a514:	ldr	r3, [r7, #28]
   1a518:	mov	r0, r4
   1a51c:	add	r3, r3, r5
   1a520:	str	r3, [r7, #28]
   1a524:	mov	r2, r5
   1a528:	mov	r1, sl
   1a52c:	mov	r4, r6
   1a530:	bl	111e4 <memset@plt>
   1a534:	b	1a0fc <argp_parse@@Base+0x26f4>
   1a538:	add	r8, r2, #1
   1a53c:	b	1a21c <argp_parse@@Base+0x2814>
   1a540:	mov	r3, #0
   1a544:	str	r3, [r7, #20]
   1a548:	add	r4, r8, #1
   1a54c:	ldr	r9, [r7, #28]
   1a550:	b	1a08c <argp_parse@@Base+0x2684>
   1a554:	ldr	r1, [r7, #32]
   1a558:	sub	r1, r1, r6
   1a55c:	cmp	r3, r1
   1a560:	ble	1a2c4 <argp_parse@@Base+0x28bc>
   1a564:	b	1a350 <argp_parse@@Base+0x2948>
   1a568:	sub	r9, r9, r6
   1a56c:	mov	r1, r6
   1a570:	mov	r2, r9
   1a574:	add	r0, r8, r0
   1a578:	bl	1104c <memmove@plt>
   1a57c:	ldr	r1, [r7, #12]
   1a580:	mov	r3, #10
   1a584:	add	r6, r1, #1
   1a588:	add	r6, r8, r6
   1a58c:	add	r9, r6, r9
   1a590:	sub	fp, r9, r4
   1a594:	add	r5, r8, #1
   1a598:	strb	r3, [r8]
   1a59c:	sub	r9, r6, r4
   1a5a0:	mov	r2, r4
   1a5a4:	b	1a2b8 <argp_parse@@Base+0x28b0>
   1a5a8:	mov	r1, #10
   1a5ac:	bl	11214 <__overflow@plt>
   1a5b0:	b	1a2a0 <argp_parse@@Base+0x2898>
   1a5b4:	add	r3, r8, fp
   1a5b8:	sub	r6, r6, r3
   1a5bc:	add	r9, r9, r6
   1a5c0:	str	r9, [r7, #28]
   1a5c4:	str	r3, [r7, #20]
   1a5c8:	b	1a164 <argp_parse@@Base+0x275c>
   1a5cc:	str	r3, [r7, #20]
   1a5d0:	ldr	r9, [r7, #28]
   1a5d4:	b	1a164 <argp_parse@@Base+0x275c>
   1a5d8:	push	{r4, lr}
   1a5dc:	mov	r4, r0
   1a5e0:	bl	1a06c <argp_parse@@Base+0x2664>
   1a5e4:	ldr	r2, [r4, #28]
   1a5e8:	ldr	r0, [r4, #24]
   1a5ec:	cmp	r2, r0
   1a5f0:	bls	1a608 <argp_parse@@Base+0x2c00>
   1a5f4:	sub	r2, r2, r0
   1a5f8:	ldr	r3, [r4]
   1a5fc:	mov	r1, #1
   1a600:	bl	11094 <fwrite_unlocked@plt>
   1a604:	ldr	r0, [r4, #24]
   1a608:	bl	18984 <argp_parse@@Base+0xf7c>
   1a60c:	mov	r0, r4
   1a610:	pop	{r4, lr}
   1a614:	b	18984 <argp_parse@@Base+0xf7c>
   1a618:	ldr	r3, [r0, #32]
   1a61c:	ldr	r2, [r0, #28]
   1a620:	sub	r3, r3, r2
   1a624:	cmp	r3, r1
   1a628:	bcc	1a638 <argp_parse@@Base+0x2c30>
   1a62c:	mov	r3, #1
   1a630:	mov	r0, r3
   1a634:	bx	lr
   1a638:	push	{r4, r5, r6, lr}
   1a63c:	mov	r4, r0
   1a640:	mov	r5, r1
   1a644:	bl	1a06c <argp_parse@@Base+0x2664>
   1a648:	ldr	r3, [r4, #24]
   1a64c:	ldr	r2, [r4, #28]
   1a650:	mov	r0, r3
   1a654:	sub	r2, r2, r3
   1a658:	mov	r1, #1
   1a65c:	ldr	r3, [r4]
   1a660:	bl	11094 <fwrite_unlocked@plt>
   1a664:	ldr	r2, [r4, #28]
   1a668:	ldr	r3, [r4, #24]
   1a66c:	sub	r1, r2, r3
   1a670:	cmp	r0, r1
   1a674:	bne	1a6bc <argp_parse@@Base+0x2cb4>
   1a678:	ldr	r1, [r4, #32]
   1a67c:	mov	r2, #0
   1a680:	sub	r1, r1, r3
   1a684:	cmp	r5, r1
   1a688:	str	r3, [r4, #28]
   1a68c:	str	r2, [r4, #16]
   1a690:	bls	1a6b0 <argp_parse@@Base+0x2ca8>
   1a694:	adds	r5, r5, r1
   1a698:	bcc	1a6ec <argp_parse@@Base+0x2ce4>
   1a69c:	bl	111cc <__errno_location@plt>
   1a6a0:	mov	r2, #12
   1a6a4:	mov	r3, #0
   1a6a8:	str	r2, [r0]
   1a6ac:	b	1a6b4 <argp_parse@@Base+0x2cac>
   1a6b0:	mov	r3, #1
   1a6b4:	mov	r0, r3
   1a6b8:	pop	{r4, r5, r6, pc}
   1a6bc:	ldr	r1, [r4, #16]
   1a6c0:	sub	r2, r2, r0
   1a6c4:	sub	r1, r1, r0
   1a6c8:	str	r2, [r4, #28]
   1a6cc:	str	r1, [r4, #16]
   1a6d0:	sub	r2, r2, r3
   1a6d4:	add	r1, r3, r0
   1a6d8:	mov	r0, r3
   1a6dc:	bl	1104c <memmove@plt>
   1a6e0:	mov	r3, #0
   1a6e4:	mov	r0, r3
   1a6e8:	pop	{r4, r5, r6, pc}
   1a6ec:	mov	r0, r3
   1a6f0:	mov	r1, r5
   1a6f4:	bl	19f94 <argp_parse@@Base+0x258c>
   1a6f8:	cmp	r0, #0
   1a6fc:	beq	1a69c <argp_parse@@Base+0x2c94>
   1a700:	add	r5, r0, r5
   1a704:	mov	r3, #1
   1a708:	str	r5, [r4, #32]
   1a70c:	str	r0, [r4, #24]
   1a710:	str	r0, [r4, #28]
   1a714:	b	1a6b4 <argp_parse@@Base+0x2cac>
   1a718:	push	{r1, r2, r3}
   1a71c:	push	{r4, r5, r6, r7, r8, r9, lr}
   1a720:	sub	sp, sp, #8
   1a724:	mov	r5, r0
   1a728:	ldr	r7, [sp, #36]	; 0x24
   1a72c:	mov	r4, #150	; 0x96
   1a730:	mov	r8, #1
   1a734:	mov	r9, #0
   1a738:	add	r6, sp, #40	; 0x28
   1a73c:	ldr	r1, [r5, #32]
   1a740:	ldr	r0, [r5, #28]
   1a744:	sub	r3, r1, r0
   1a748:	cmp	r4, r3
   1a74c:	bhi	1a794 <argp_parse@@Base+0x2d8c>
   1a750:	sub	r4, r1, r0
   1a754:	mov	r1, r4
   1a758:	mov	r3, r6
   1a75c:	mov	r2, r7
   1a760:	str	r6, [sp, #4]
   1a764:	bl	11268 <vsnprintf@plt>
   1a768:	cmp	r4, r0
   1a76c:	bls	1a78c <argp_parse@@Base+0x2d84>
   1a770:	ldr	r3, [r5, #28]
   1a774:	add	r3, r3, r0
   1a778:	str	r3, [r5, #28]
   1a77c:	add	sp, sp, #8
   1a780:	pop	{r4, r5, r6, r7, r8, r9, lr}
   1a784:	add	sp, sp, #12
   1a788:	bx	lr
   1a78c:	add	r4, r0, #1
   1a790:	b	1a73c <argp_parse@@Base+0x2d34>
   1a794:	mov	r0, r5
   1a798:	bl	1a06c <argp_parse@@Base+0x2664>
   1a79c:	ldr	r3, [r5, #24]
   1a7a0:	ldr	r2, [r5, #28]
   1a7a4:	mov	r0, r3
   1a7a8:	sub	r2, r2, r3
   1a7ac:	mov	r1, r8
   1a7b0:	ldr	r3, [r5]
   1a7b4:	bl	11094 <fwrite_unlocked@plt>
   1a7b8:	ldr	r2, [r5, #28]
   1a7bc:	ldr	r3, [r5, #24]
   1a7c0:	sub	r1, r2, r3
   1a7c4:	cmp	r0, r1
   1a7c8:	bne	1a810 <argp_parse@@Base+0x2e08>
   1a7cc:	ldr	r1, [r5, #32]
   1a7d0:	str	r3, [r5, #28]
   1a7d4:	sub	r0, r1, r3
   1a7d8:	cmp	r4, r0
   1a7dc:	str	r9, [r5, #16]
   1a7e0:	movls	r0, r3
   1a7e4:	bls	1a750 <argp_parse@@Base+0x2d48>
   1a7e8:	adds	r4, r4, r0
   1a7ec:	bcc	1a838 <argp_parse@@Base+0x2e30>
   1a7f0:	bl	111cc <__errno_location@plt>
   1a7f4:	mov	r3, #12
   1a7f8:	str	r3, [r0]
   1a7fc:	mvn	r0, #0
   1a800:	add	sp, sp, #8
   1a804:	pop	{r4, r5, r6, r7, r8, r9, lr}
   1a808:	add	sp, sp, #12
   1a80c:	bx	lr
   1a810:	ldr	r1, [r5, #16]
   1a814:	sub	r2, r2, r0
   1a818:	sub	r1, r1, r0
   1a81c:	str	r2, [r5, #28]
   1a820:	str	r1, [r5, #16]
   1a824:	sub	r2, r2, r3
   1a828:	add	r1, r3, r0
   1a82c:	mov	r0, r3
   1a830:	bl	1104c <memmove@plt>
   1a834:	b	1a7fc <argp_parse@@Base+0x2df4>
   1a838:	mov	r1, r4
   1a83c:	mov	r0, r3
   1a840:	bl	19f94 <argp_parse@@Base+0x258c>
   1a844:	cmp	r0, #0
   1a848:	add	r1, r0, r4
   1a84c:	beq	1a7f0 <argp_parse@@Base+0x2de8>
   1a850:	str	r0, [r5, #24]
   1a854:	str	r1, [r5, #32]
   1a858:	str	r0, [r5, #28]
   1a85c:	b	1a750 <argp_parse@@Base+0x2d48>
   1a860:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a864:	ldr	r4, [r1, #32]
   1a868:	ldr	r8, [r1, #28]
   1a86c:	ldr	r7, [r1]
   1a870:	add	r6, r0, r4, lsl #2
   1a874:	mov	r2, r8
   1a878:	mov	r5, r7
   1a87c:	cmp	r5, r4
   1a880:	movle	r3, #0
   1a884:	movgt	r3, #1
   1a888:	cmp	r2, r4
   1a88c:	movge	r3, #0
   1a890:	cmp	r3, #0
   1a894:	beq	1a908 <argp_parse@@Base+0x2f00>
   1a898:	sub	r3, r5, r4
   1a89c:	sub	sl, r4, r2
   1a8a0:	cmp	r3, sl
   1a8a4:	ble	1a8d8 <argp_parse@@Base+0x2ed0>
   1a8a8:	sub	r5, r5, sl
   1a8ac:	add	sl, sl, r2
   1a8b0:	add	ip, r0, r5, lsl #2
   1a8b4:	add	sl, r0, sl, lsl #2
   1a8b8:	add	r3, r0, r2, lsl #2
   1a8bc:	ldr	r9, [ip]
   1a8c0:	ldr	lr, [r3]
   1a8c4:	str	r9, [r3], #4
   1a8c8:	cmp	r3, sl
   1a8cc:	str	lr, [ip], #4
   1a8d0:	bne	1a8bc <argp_parse@@Base+0x2eb4>
   1a8d4:	b	1a87c <argp_parse@@Base+0x2e74>
   1a8d8:	add	sl, r3, r2
   1a8dc:	add	r3, r0, r2, lsl #2
   1a8e0:	add	r9, r0, sl, lsl #2
   1a8e4:	mov	r2, r6
   1a8e8:	ldr	lr, [r2]
   1a8ec:	ldr	ip, [r3]
   1a8f0:	str	lr, [r3], #4
   1a8f4:	cmp	r9, r3
   1a8f8:	str	ip, [r2], #4
   1a8fc:	bne	1a8e8 <argp_parse@@Base+0x2ee0>
   1a900:	mov	r2, sl
   1a904:	b	1a87c <argp_parse@@Base+0x2e74>
   1a908:	sub	r4, r7, r4
   1a90c:	add	r8, r4, r8
   1a910:	str	r8, [r1, #28]
   1a914:	str	r7, [r1, #32]
   1a918:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a91c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a920:	sub	sp, sp, #52	; 0x34
   1a924:	str	r1, [sp, #24]
   1a928:	ldr	r1, [sp, #96]	; 0x60
   1a92c:	str	r0, [sp, #28]
   1a930:	str	r2, [sp, #32]
   1a934:	ldr	r8, [r1, #20]
   1a938:	str	r3, [sp, #12]
   1a93c:	mov	r7, r8
   1a940:	ldrb	r5, [r8]
   1a944:	cmp	r5, #61	; 0x3d
   1a948:	cmpne	r5, #0
   1a94c:	movne	r5, #1
   1a950:	moveq	r5, #0
   1a954:	beq	1a970 <argp_parse@@Base+0x2f68>
   1a958:	ldrb	r3, [r7, #1]!
   1a95c:	cmp	r3, #0
   1a960:	cmpne	r3, #61	; 0x3d
   1a964:	bne	1a958 <argp_parse@@Base+0x2f50>
   1a968:	ldr	r3, [sp, #12]
   1a96c:	sub	r5, r7, r8
   1a970:	ldr	sl, [r3]
   1a974:	cmp	sl, #0
   1a978:	beq	1ad50 <argp_parse@@Base+0x3348>
   1a97c:	mov	fp, r3
   1a980:	mov	r4, sl
   1a984:	mov	r6, #0
   1a988:	str	r3, [sp, #20]
   1a98c:	mov	r2, r5
   1a990:	mov	r1, r8
   1a994:	mov	r0, r4
   1a998:	bl	112b0 <strncmp@plt>
   1a99c:	mov	r9, fp
   1a9a0:	cmp	r0, #0
   1a9a4:	mov	r0, r4
   1a9a8:	bne	1a9b8 <argp_parse@@Base+0x2fb0>
   1a9ac:	bl	111a8 <strlen@plt>
   1a9b0:	cmp	r0, r5
   1a9b4:	beq	1aa78 <argp_parse@@Base+0x3070>
   1a9b8:	ldr	r4, [fp, #16]!
   1a9bc:	add	r6, r6, #1
   1a9c0:	cmp	r4, #0
   1a9c4:	bne	1a98c <argp_parse@@Base+0x2f84>
   1a9c8:	ldr	r3, [sp, #100]	; 0x64
   1a9cc:	cmp	r3, #0
   1a9d0:	ldr	r3, [sp, #92]	; 0x5c
   1a9d4:	beq	1ab1c <argp_parse@@Base+0x3114>
   1a9d8:	cmp	r3, #0
   1a9dc:	bne	1ac34 <argp_parse@@Base+0x322c>
   1a9e0:	mov	fp, r3
   1a9e4:	mov	r0, sl
   1a9e8:	ldr	r4, [sp, #12]
   1a9ec:	ldr	sl, [sp, #96]	; 0x60
   1a9f0:	mov	r9, fp
   1a9f4:	mov	r1, r8
   1a9f8:	str	r3, [sp, #16]
   1a9fc:	str	r3, [sp, #44]	; 0x2c
   1aa00:	mvn	r3, #0
   1aa04:	str	r3, [sp, #40]	; 0x28
   1aa08:	str	fp, [sp, #36]	; 0x24
   1aa0c:	mov	r2, r5
   1aa10:	bl	112b0 <strncmp@plt>
   1aa14:	cmp	r0, #0
   1aa18:	bne	1aa54 <argp_parse@@Base+0x304c>
   1aa1c:	cmp	r9, #0
   1aa20:	beq	1af88 <argp_parse@@Base+0x3580>
   1aa24:	ldr	r2, [r9, #4]
   1aa28:	ldr	r3, [r4, #4]
   1aa2c:	cmp	r2, r3
   1aa30:	beq	1afe4 <argp_parse@@Base+0x35dc>
   1aa34:	ldr	r3, [sp, #16]
   1aa38:	cmp	r3, #0
   1aa3c:	bne	1aa54 <argp_parse@@Base+0x304c>
   1aa40:	ldr	r3, [sp, #36]	; 0x24
   1aa44:	cmp	r3, #0
   1aa48:	beq	1aec0 <argp_parse@@Base+0x34b8>
   1aa4c:	mov	r2, #1
   1aa50:	strb	r2, [r3, fp]
   1aa54:	ldr	r0, [r4, #16]!
   1aa58:	add	fp, fp, #1
   1aa5c:	cmp	r0, #0
   1aa60:	beq	1ab90 <argp_parse@@Base+0x3188>
   1aa64:	ldr	r1, [sl, #20]
   1aa68:	b	1aa0c <argp_parse@@Base+0x3004>
   1aa6c:	cmp	r9, #0
   1aa70:	beq	1ad50 <argp_parse@@Base+0x3348>
   1aa74:	ldr	r6, [sp, #40]	; 0x28
   1aa78:	ldr	r3, [sp, #96]	; 0x60
   1aa7c:	ldr	r0, [sp, #96]	; 0x60
   1aa80:	mov	r1, #0
   1aa84:	ldr	r2, [r3]
   1aa88:	str	r1, [r0, #20]
   1aa8c:	add	r3, r2, #1
   1aa90:	str	r3, [r0]
   1aa94:	ldrb	r1, [r7]
   1aa98:	cmp	r1, #0
   1aa9c:	bne	1aadc <argp_parse@@Base+0x30d4>
   1aaa0:	ldr	r1, [r9, #4]
   1aaa4:	cmp	r1, #1
   1aaa8:	beq	1adc0 <argp_parse@@Base+0x33b8>
   1aaac:	ldr	r3, [sp, #88]	; 0x58
   1aab0:	ldr	r2, [r9, #8]
   1aab4:	cmp	r3, #0
   1aab8:	strne	r6, [r3]
   1aabc:	cmp	r2, #0
   1aac0:	movne	r3, #0
   1aac4:	ldreq	r3, [r9, #12]
   1aac8:	ldrne	r1, [r9, #12]
   1aacc:	strne	r1, [r2]
   1aad0:	mov	r0, r3
   1aad4:	add	sp, sp, #52	; 0x34
   1aad8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1aadc:	ldr	r3, [r9, #4]
   1aae0:	cmp	r3, #0
   1aae4:	movne	r3, r0
   1aae8:	addne	r7, r7, #1
   1aaec:	strne	r7, [r3, #12]
   1aaf0:	bne	1aaac <argp_parse@@Base+0x30a4>
   1aaf4:	ldr	r3, [sp, #100]	; 0x64
   1aaf8:	cmp	r3, #0
   1aafc:	bne	1ad18 <argp_parse@@Base+0x3310>
   1ab00:	ldr	r1, [sp, #96]	; 0x60
   1ab04:	ldr	r2, [r9, #12]
   1ab08:	mov	r3, #63	; 0x3f
   1ab0c:	str	r2, [r1, #8]
   1ab10:	mov	r0, r3
   1ab14:	add	sp, sp, #52	; 0x34
   1ab18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ab1c:	cmp	r3, #0
   1ab20:	bne	1acb0 <argp_parse@@Base+0x32a8>
   1ab24:	mov	fp, r3
   1ab28:	ldr	r4, [sp, #12]
   1ab2c:	mov	r9, fp
   1ab30:	mov	r0, sl
   1ab34:	str	r3, [sp, #16]
   1ab38:	mvn	r3, #0
   1ab3c:	str	r3, [sp, #40]	; 0x28
   1ab40:	mov	r2, r5
   1ab44:	mov	r1, r8
   1ab48:	bl	112b0 <strncmp@plt>
   1ab4c:	cmp	r0, #0
   1ab50:	bne	1ab74 <argp_parse@@Base+0x316c>
   1ab54:	cmp	r9, #0
   1ab58:	beq	1af7c <argp_parse@@Base+0x3574>
   1ab5c:	ldr	r2, [r9, #4]
   1ab60:	ldr	r3, [r4, #4]
   1ab64:	cmp	r2, r3
   1ab68:	beq	1afb8 <argp_parse@@Base+0x35b0>
   1ab6c:	mov	r3, #1
   1ab70:	str	r3, [sp, #16]
   1ab74:	ldr	r0, [r4, #16]!
   1ab78:	add	fp, fp, #1
   1ab7c:	cmp	r0, #0
   1ab80:	bne	1ab40 <argp_parse@@Base+0x3138>
   1ab84:	ldr	r3, [sp, #92]	; 0x5c
   1ab88:	str	r0, [sp, #36]	; 0x24
   1ab8c:	str	r3, [sp, #44]	; 0x2c
   1ab90:	ldr	r2, [sp, #36]	; 0x24
   1ab94:	ldr	r3, [sp, #16]
   1ab98:	cmp	r3, #0
   1ab9c:	cmpeq	r2, #0
   1aba0:	beq	1aa6c <argp_parse@@Base+0x3064>
   1aba4:	ldr	r2, [sp, #100]	; 0x64
   1aba8:	cmp	r2, #0
   1abac:	beq	1ae10 <argp_parse@@Base+0x3408>
   1abb0:	cmp	r3, #0
   1abb4:	bne	1ade8 <argp_parse@@Base+0x33e0>
   1abb8:	ldr	r5, [pc, #1108]	; 1b014 <argp_parse@@Base+0x360c>
   1abbc:	ldr	r3, [sp, #36]	; 0x24
   1abc0:	ldr	r7, [pc, #1104]	; 1b018 <argp_parse@@Base+0x3610>
   1abc4:	ldr	r0, [r5]
   1abc8:	add	r6, r3, r6
   1abcc:	mov	r4, r3
   1abd0:	bl	1125c <flockfile@plt>
   1abd4:	ldr	r3, [sp, #24]
   1abd8:	ldr	r0, [r5]
   1abdc:	ldr	r1, [pc, #1080]	; 1b01c <argp_parse@@Base+0x3614>
   1abe0:	ldr	r2, [r3]
   1abe4:	ldr	r3, [sp, #96]	; 0x60
   1abe8:	ldr	r3, [r3, #20]
   1abec:	str	r3, [sp]
   1abf0:	ldr	r3, [sp, #104]	; 0x68
   1abf4:	bl	111c0 <fprintf@plt>
   1abf8:	ldr	r8, [sp, #16]
   1abfc:	ldr	r9, [sp, #12]
   1ac00:	b	1ac10 <argp_parse@@Base+0x3208>
   1ac04:	cmp	r4, r6
   1ac08:	add	r8, r8, #1
   1ac0c:	beq	1afa0 <argp_parse@@Base+0x3598>
   1ac10:	ldrb	r3, [r4], #1
   1ac14:	cmp	r3, #0
   1ac18:	beq	1ac04 <argp_parse@@Base+0x31fc>
   1ac1c:	ldr	r3, [r9, r8, lsl #4]
   1ac20:	ldr	r2, [sp, #104]	; 0x68
   1ac24:	mov	r1, r7
   1ac28:	ldr	r0, [r5]
   1ac2c:	bl	111c0 <fprintf@plt>
   1ac30:	b	1ac04 <argp_parse@@Base+0x31fc>
   1ac34:	mov	r9, r4
   1ac38:	str	r4, [sp, #16]
   1ac3c:	str	r4, [sp, #44]	; 0x2c
   1ac40:	str	r4, [sp, #36]	; 0x24
   1ac44:	mov	r1, r8
   1ac48:	mov	r0, sl
   1ac4c:	mov	r8, r4
   1ac50:	ldr	sl, [sp, #20]
   1ac54:	ldr	r4, [sp, #96]	; 0x60
   1ac58:	mov	fp, #1
   1ac5c:	mvn	r3, #0
   1ac60:	str	r3, [sp, #40]	; 0x28
   1ac64:	mov	r2, r5
   1ac68:	bl	112b0 <strncmp@plt>
   1ac6c:	cmp	r0, #0
   1ac70:	bne	1ac98 <argp_parse@@Base+0x3290>
   1ac74:	cmp	r9, #0
   1ac78:	beq	1af94 <argp_parse@@Base+0x358c>
   1ac7c:	ldr	r3, [sp, #16]
   1ac80:	cmp	r3, #0
   1ac84:	bne	1ac98 <argp_parse@@Base+0x3290>
   1ac88:	ldr	r3, [sp, #36]	; 0x24
   1ac8c:	cmp	r3, #0
   1ac90:	beq	1af04 <argp_parse@@Base+0x34fc>
   1ac94:	strb	fp, [r3, r8]
   1ac98:	ldr	r0, [sl, #16]!
   1ac9c:	add	r8, r8, #1
   1aca0:	cmp	r0, #0
   1aca4:	beq	1ab90 <argp_parse@@Base+0x3188>
   1aca8:	ldr	r1, [r4, #20]
   1acac:	b	1ac64 <argp_parse@@Base+0x325c>
   1acb0:	ldr	r3, [sp, #100]	; 0x64
   1acb4:	mov	r0, sl
   1acb8:	mov	r4, r3
   1acbc:	ldr	sl, [sp, #20]
   1acc0:	mov	r9, r4
   1acc4:	str	r3, [sp, #16]
   1acc8:	mvn	r3, #0
   1accc:	str	r3, [sp, #40]	; 0x28
   1acd0:	mov	r2, r5
   1acd4:	mov	r1, r8
   1acd8:	bl	112b0 <strncmp@plt>
   1acdc:	cmp	r0, #0
   1ace0:	bne	1acf8 <argp_parse@@Base+0x32f0>
   1ace4:	cmp	r9, #0
   1ace8:	moveq	r9, sl
   1acec:	movne	r3, #1
   1acf0:	strne	r3, [sp, #16]
   1acf4:	streq	r4, [sp, #40]	; 0x28
   1acf8:	ldr	r0, [sl, #16]!
   1acfc:	add	r4, r4, #1
   1ad00:	cmp	r0, #0
   1ad04:	bne	1acd0 <argp_parse@@Base+0x32c8>
   1ad08:	ldr	r3, [sp, #100]	; 0x64
   1ad0c:	str	r0, [sp, #36]	; 0x24
   1ad10:	str	r3, [sp, #44]	; 0x2c
   1ad14:	b	1ab90 <argp_parse@@Base+0x3188>
   1ad18:	ldr	r3, [sp, #24]
   1ad1c:	ldr	r1, [pc, #752]	; 1b014 <argp_parse@@Base+0x360c>
   1ad20:	ldr	r2, [r3]
   1ad24:	ldr	r3, [r9]
   1ad28:	ldr	r0, [r1]
   1ad2c:	str	r3, [sp]
   1ad30:	ldr	r1, [pc, #744]	; 1b020 <argp_parse@@Base+0x3618>
   1ad34:	ldr	r3, [sp, #104]	; 0x68
   1ad38:	bl	111c0 <fprintf@plt>
   1ad3c:	ldr	r1, [sp, #96]	; 0x60
   1ad40:	ldr	r2, [r9, #12]
   1ad44:	mov	r3, #63	; 0x3f
   1ad48:	str	r2, [r1, #8]
   1ad4c:	b	1ab10 <argp_parse@@Base+0x3108>
   1ad50:	ldr	r3, [sp, #92]	; 0x5c
   1ad54:	cmp	r3, #0
   1ad58:	bne	1af3c <argp_parse@@Base+0x3534>
   1ad5c:	ldr	r3, [sp, #100]	; 0x64
   1ad60:	cmp	r3, #0
   1ad64:	beq	1ad90 <argp_parse@@Base+0x3388>
   1ad68:	ldr	r3, [sp, #24]
   1ad6c:	ldr	r1, [pc, #672]	; 1b014 <argp_parse@@Base+0x360c>
   1ad70:	ldr	r2, [r3]
   1ad74:	ldr	r3, [sp, #96]	; 0x60
   1ad78:	ldr	r0, [r1]
   1ad7c:	ldr	r1, [pc, #672]	; 1b024 <argp_parse@@Base+0x361c>
   1ad80:	ldr	r3, [r3, #20]
   1ad84:	str	r3, [sp]
   1ad88:	ldr	r3, [sp, #104]	; 0x68
   1ad8c:	bl	111c0 <fprintf@plt>
   1ad90:	ldr	r3, [sp, #96]	; 0x60
   1ad94:	ldr	r1, [sp, #96]	; 0x60
   1ad98:	mov	r2, #0
   1ad9c:	ldr	r3, [r3]
   1ada0:	str	r2, [r1, #20]
   1ada4:	add	r3, r3, #1
   1ada8:	str	r3, [r1]
   1adac:	mov	r3, #63	; 0x3f
   1adb0:	mov	r0, r3
   1adb4:	str	r2, [r1, #8]
   1adb8:	add	sp, sp, #52	; 0x34
   1adbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1adc0:	ldr	r1, [sp, #28]
   1adc4:	cmp	r3, r1
   1adc8:	bge	1ae68 <argp_parse@@Base+0x3460>
   1adcc:	ldr	r1, [sp, #24]
   1add0:	add	r2, r2, #2
   1add4:	ldr	r3, [r1, r3, lsl #2]
   1add8:	ldr	r1, [sp, #96]	; 0x60
   1addc:	str	r3, [r1, #12]
   1ade0:	str	r2, [r1]
   1ade4:	b	1aaac <argp_parse@@Base+0x30a4>
   1ade8:	ldr	r3, [sp, #24]
   1adec:	ldr	r1, [pc, #544]	; 1b014 <argp_parse@@Base+0x360c>
   1adf0:	ldr	r2, [r3]
   1adf4:	ldr	r3, [sp, #96]	; 0x60
   1adf8:	ldr	r0, [r1]
   1adfc:	ldr	r1, [pc, #548]	; 1b028 <argp_parse@@Base+0x3620>
   1ae00:	ldr	r3, [r3, #20]
   1ae04:	str	r3, [sp]
   1ae08:	ldr	r3, [sp, #104]	; 0x68
   1ae0c:	bl	111c0 <fprintf@plt>
   1ae10:	ldr	r3, [sp, #44]	; 0x2c
   1ae14:	cmp	r3, #0
   1ae18:	beq	1ae24 <argp_parse@@Base+0x341c>
   1ae1c:	ldr	r0, [sp, #36]	; 0x24
   1ae20:	bl	18984 <argp_parse@@Base+0xf7c>
   1ae24:	ldr	r3, [sp, #96]	; 0x60
   1ae28:	ldr	r4, [r3, #20]
   1ae2c:	mov	r0, r4
   1ae30:	bl	111a8 <strlen@plt>
   1ae34:	ldr	r3, [sp, #96]	; 0x60
   1ae38:	ldr	r1, [sp, #96]	; 0x60
   1ae3c:	mov	r2, #0
   1ae40:	ldr	r3, [r3]
   1ae44:	str	r2, [r1, #8]
   1ae48:	add	r3, r3, #1
   1ae4c:	str	r3, [r1]
   1ae50:	mov	r3, #63	; 0x3f
   1ae54:	add	r0, r4, r0
   1ae58:	str	r0, [r1, #20]
   1ae5c:	mov	r0, r3
   1ae60:	add	sp, sp, #52	; 0x34
   1ae64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ae68:	ldr	r3, [sp, #100]	; 0x64
   1ae6c:	cmp	r3, #0
   1ae70:	bne	1ae98 <argp_parse@@Base+0x3490>
   1ae74:	ldr	r2, [sp, #96]	; 0x60
   1ae78:	ldr	r3, [r9, #12]
   1ae7c:	str	r3, [r2, #8]
   1ae80:	ldr	r3, [sp, #32]
   1ae84:	ldrb	r3, [r3]
   1ae88:	cmp	r3, #58	; 0x3a
   1ae8c:	movne	r3, #63	; 0x3f
   1ae90:	moveq	r3, #58	; 0x3a
   1ae94:	b	1aad0 <argp_parse@@Base+0x30c8>
   1ae98:	ldr	r3, [sp, #24]
   1ae9c:	ldr	r1, [pc, #368]	; 1b014 <argp_parse@@Base+0x360c>
   1aea0:	ldr	r2, [r3]
   1aea4:	ldr	r3, [r9]
   1aea8:	ldr	r0, [r1]
   1aeac:	str	r3, [sp]
   1aeb0:	ldr	r1, [pc, #372]	; 1b02c <argp_parse@@Base+0x3624>
   1aeb4:	ldr	r3, [sp, #104]	; 0x68
   1aeb8:	bl	111c0 <fprintf@plt>
   1aebc:	b	1ae74 <argp_parse@@Base+0x346c>
   1aec0:	mov	r0, r6
   1aec4:	bl	19f68 <argp_parse@@Base+0x2560>
   1aec8:	subs	r3, r0, #0
   1aecc:	mov	r8, r3
   1aed0:	str	r3, [sp, #36]	; 0x24
   1aed4:	mov	r3, #1
   1aed8:	streq	r3, [sp, #16]
   1aedc:	beq	1aa54 <argp_parse@@Base+0x304c>
   1aee0:	mov	r2, r6
   1aee4:	mov	r1, #0
   1aee8:	str	r3, [sp, #44]	; 0x2c
   1aeec:	bl	111e4 <memset@plt>
   1aef0:	ldr	r2, [sp, #40]	; 0x28
   1aef4:	mov	r1, #1
   1aef8:	ldr	r3, [sp, #36]	; 0x24
   1aefc:	strb	r1, [r8, r2]
   1af00:	b	1aa4c <argp_parse@@Base+0x3044>
   1af04:	mov	r0, r6
   1af08:	bl	19f68 <argp_parse@@Base+0x2560>
   1af0c:	subs	r3, r0, #0
   1af10:	str	r3, [sp, #36]	; 0x24
   1af14:	beq	1b008 <argp_parse@@Base+0x3600>
   1af18:	mov	r2, r6
   1af1c:	mov	r1, #0
   1af20:	bl	111e4 <memset@plt>
   1af24:	mov	r2, #1
   1af28:	str	r2, [sp, #44]	; 0x2c
   1af2c:	ldr	r3, [sp, #36]	; 0x24
   1af30:	ldr	r2, [sp, #40]	; 0x28
   1af34:	strb	fp, [r3, r2]
   1af38:	b	1ac94 <argp_parse@@Base+0x328c>
   1af3c:	ldr	r3, [sp, #96]	; 0x60
   1af40:	ldr	r2, [sp, #24]
   1af44:	ldr	r3, [r3]
   1af48:	ldr	r3, [r2, r3, lsl #2]
   1af4c:	ldrb	r3, [r3, #1]
   1af50:	cmp	r3, #45	; 0x2d
   1af54:	beq	1ad5c <argp_parse@@Base+0x3354>
   1af58:	ldr	r3, [sp, #96]	; 0x60
   1af5c:	ldr	r0, [sp, #32]
   1af60:	ldr	r3, [r3, #20]
   1af64:	ldrb	r1, [r3]
   1af68:	bl	111b4 <strchr@plt>
   1af6c:	cmp	r0, #0
   1af70:	beq	1ad5c <argp_parse@@Base+0x3354>
   1af74:	mvn	r3, #0
   1af78:	b	1aad0 <argp_parse@@Base+0x30c8>
   1af7c:	str	fp, [sp, #40]	; 0x28
   1af80:	mov	r9, r4
   1af84:	b	1ab74 <argp_parse@@Base+0x316c>
   1af88:	str	fp, [sp, #40]	; 0x28
   1af8c:	mov	r9, r4
   1af90:	b	1aa54 <argp_parse@@Base+0x304c>
   1af94:	str	r8, [sp, #40]	; 0x28
   1af98:	mov	r9, sl
   1af9c:	b	1ac98 <argp_parse@@Base+0x3290>
   1afa0:	ldr	r1, [r5]
   1afa4:	mov	r0, #10
   1afa8:	bl	11250 <fputc@plt>
   1afac:	ldr	r0, [r5]
   1afb0:	bl	110f4 <funlockfile@plt>
   1afb4:	b	1ae10 <argp_parse@@Base+0x3408>
   1afb8:	ldr	r2, [r9, #8]
   1afbc:	ldr	r3, [r4, #8]
   1afc0:	cmp	r2, r3
   1afc4:	bne	1ab6c <argp_parse@@Base+0x3164>
   1afc8:	ldr	r2, [r9, #12]
   1afcc:	ldr	r3, [r4, #12]
   1afd0:	ldr	r1, [sp, #16]
   1afd4:	cmp	r2, r3
   1afd8:	movne	r1, #1
   1afdc:	str	r1, [sp, #16]
   1afe0:	b	1ab74 <argp_parse@@Base+0x316c>
   1afe4:	ldr	r2, [r9, #8]
   1afe8:	ldr	r3, [r4, #8]
   1afec:	cmp	r2, r3
   1aff0:	bne	1aa34 <argp_parse@@Base+0x302c>
   1aff4:	ldr	r2, [r9, #12]
   1aff8:	ldr	r3, [r4, #12]
   1affc:	cmp	r2, r3
   1b000:	bne	1aa34 <argp_parse@@Base+0x302c>
   1b004:	b	1aa54 <argp_parse@@Base+0x304c>
   1b008:	mov	r3, #1
   1b00c:	str	r3, [sp, #16]
   1b010:	b	1ac98 <argp_parse@@Base+0x3290>
   1b014:	andeq	lr, r2, r0, lsr #5
   1b018:	muleq	r1, r8, r4
   1b01c:	andeq	sp, r1, r8, ror #8
   1b020:	andeq	sp, r1, r0, asr #9
   1b024:	andeq	sp, r1, r0, lsr #9
   1b028:	andeq	sp, r1, r8, asr #8
   1b02c:	strdeq	sp, [r1], -r0
   1b030:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b034:	sub	sp, sp, #36	; 0x24
   1b038:	subs	r6, r0, #0
   1b03c:	ldr	r4, [sp, #80]	; 0x50
   1b040:	ldr	r8, [r4, #4]
   1b044:	ble	1b218 <argp_parse@@Base+0x3810>
   1b048:	mov	sl, r3
   1b04c:	ldr	r3, [r4]
   1b050:	mov	r7, r2
   1b054:	mov	r2, #0
   1b058:	cmp	r3, r2
   1b05c:	mov	r9, r1
   1b060:	str	r2, [r4, #12]
   1b064:	beq	1b2a0 <argp_parse@@Base+0x3898>
   1b068:	ldr	r2, [r4, #16]
   1b06c:	cmp	r2, #0
   1b070:	bne	1b224 <argp_parse@@Base+0x381c>
   1b074:	mov	r5, #0
   1b078:	str	r3, [r4, #32]
   1b07c:	str	r3, [r4, #28]
   1b080:	str	r5, [r4, #20]
   1b084:	ldrb	r3, [r7]
   1b088:	cmp	r3, #45	; 0x2d
   1b08c:	moveq	r3, #2
   1b090:	addeq	r7, r7, #1
   1b094:	streq	r3, [r4, #24]
   1b098:	beq	1b0c0 <argp_parse@@Base+0x36b8>
   1b09c:	cmp	r3, #43	; 0x2b
   1b0a0:	streq	r5, [r4, #24]
   1b0a4:	addeq	r7, r7, #1
   1b0a8:	beq	1b0c0 <argp_parse@@Base+0x36b8>
   1b0ac:	ldr	r3, [sp, #84]	; 0x54
   1b0b0:	cmp	r3, #0
   1b0b4:	beq	1b330 <argp_parse@@Base+0x3928>
   1b0b8:	mov	r3, #0
   1b0bc:	str	r3, [r4, #24]
   1b0c0:	mov	r3, #1
   1b0c4:	str	r3, [r4, #16]
   1b0c8:	ldrb	r3, [r7]
   1b0cc:	cmp	r3, #58	; 0x3a
   1b0d0:	moveq	r8, #0
   1b0d4:	cmp	r5, #0
   1b0d8:	beq	1b180 <argp_parse@@Base+0x3778>
   1b0dc:	ldrb	r3, [r5]
   1b0e0:	cmp	r3, #0
   1b0e4:	beq	1b180 <argp_parse@@Base+0x3778>
   1b0e8:	add	r3, r5, #1
   1b0ec:	str	r3, [r4, #20]
   1b0f0:	ldrb	fp, [r5]
   1b0f4:	mov	r0, r7
   1b0f8:	str	r3, [sp, #28]
   1b0fc:	mov	r1, fp
   1b100:	bl	111b4 <strchr@plt>
   1b104:	ldrb	r1, [r5, #1]
   1b108:	ldr	r3, [sp, #28]
   1b10c:	cmp	r1, #0
   1b110:	ldreq	r1, [r4]
   1b114:	addeq	r1, r1, #1
   1b118:	streq	r1, [r4]
   1b11c:	sub	r1, fp, #58	; 0x3a
   1b120:	mov	r2, r0
   1b124:	cmp	r2, #0
   1b128:	cmpne	r1, #1
   1b12c:	mov	r0, fp
   1b130:	bls	1b270 <argp_parse@@Base+0x3868>
   1b134:	ldrb	r1, [r2]
   1b138:	cmp	r1, #87	; 0x57
   1b13c:	ldrb	r1, [r2, #1]
   1b140:	beq	1b3bc <argp_parse@@Base+0x39b4>
   1b144:	cmp	r1, #58	; 0x3a
   1b148:	bne	1b268 <argp_parse@@Base+0x3860>
   1b14c:	ldrb	r2, [r2, #2]
   1b150:	cmp	r2, #58	; 0x3a
   1b154:	ldrb	r2, [r5, #1]
   1b158:	beq	1b4b4 <argp_parse@@Base+0x3aac>
   1b15c:	cmp	r2, #0
   1b160:	beq	1b494 <argp_parse@@Base+0x3a8c>
   1b164:	ldr	r2, [r4]
   1b168:	str	r3, [r4, #12]
   1b16c:	add	r3, r2, #1
   1b170:	str	r3, [r4]
   1b174:	mov	r3, #0
   1b178:	str	r3, [r4, #20]
   1b17c:	b	1b268 <argp_parse@@Base+0x3860>
   1b180:	ldr	fp, [r4]
   1b184:	ldr	r3, [r4, #32]
   1b188:	ldr	r2, [r4, #28]
   1b18c:	cmp	r3, fp
   1b190:	ldr	r3, [r4, #24]
   1b194:	strgt	fp, [r4, #32]
   1b198:	cmp	fp, r2
   1b19c:	movlt	r2, fp
   1b1a0:	strlt	fp, [r4, #28]
   1b1a4:	cmp	r3, #1
   1b1a8:	beq	1b2b0 <argp_parse@@Base+0x38a8>
   1b1ac:	cmp	r6, fp
   1b1b0:	beq	1b318 <argp_parse@@Base+0x3910>
   1b1b4:	ldr	r3, [pc, #972]	; 1b588 <argp_parse@@Base+0x3b80>
   1b1b8:	ldr	r5, [r9, fp, lsl #2]
   1b1bc:	mov	r1, r3
   1b1c0:	mov	r0, r5
   1b1c4:	str	r3, [sp, #28]
   1b1c8:	bl	11004 <strcmp@plt>
   1b1cc:	ldr	r3, [sp, #28]
   1b1d0:	cmp	r0, #0
   1b1d4:	bne	1b240 <argp_parse@@Base+0x3838>
   1b1d8:	ldr	r3, [r4, #28]
   1b1dc:	ldr	r2, [r4, #32]
   1b1e0:	add	fp, fp, #1
   1b1e4:	cmp	r3, r2
   1b1e8:	str	fp, [r4]
   1b1ec:	beq	1b3b0 <argp_parse@@Base+0x39a8>
   1b1f0:	cmp	fp, r2
   1b1f4:	beq	1b208 <argp_parse@@Base+0x3800>
   1b1f8:	mov	r0, r9
   1b1fc:	mov	r1, r4
   1b200:	bl	1a860 <argp_parse@@Base+0x2e58>
   1b204:	ldr	r3, [r4, #28]
   1b208:	cmp	r6, r3
   1b20c:	str	r6, [r4]
   1b210:	str	r6, [r4, #32]
   1b214:	strne	r3, [r4]
   1b218:	mvn	r0, #0
   1b21c:	add	sp, sp, #36	; 0x24
   1b220:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b224:	ldrb	r3, [r7]
   1b228:	ldr	r5, [r4, #20]
   1b22c:	sub	r2, r3, #43	; 0x2b
   1b230:	tst	r2, #253	; 0xfd
   1b234:	ldrbeq	r3, [r7, #1]
   1b238:	addeq	r7, r7, #1
   1b23c:	b	1b0cc <argp_parse@@Base+0x36c4>
   1b240:	ldrb	r2, [r5]
   1b244:	cmp	r2, #45	; 0x2d
   1b248:	beq	1b364 <argp_parse@@Base+0x395c>
   1b24c:	ldr	r3, [r4, #24]
   1b250:	cmp	r3, #0
   1b254:	beq	1b218 <argp_parse@@Base+0x3810>
   1b258:	mov	r0, #1
   1b25c:	add	fp, fp, #1
   1b260:	str	fp, [r4]
   1b264:	str	r5, [r4, #12]
   1b268:	add	sp, sp, #36	; 0x24
   1b26c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b270:	cmp	r8, #0
   1b274:	beq	1b290 <argp_parse@@Base+0x3888>
   1b278:	ldr	r1, [pc, #780]	; 1b58c <argp_parse@@Base+0x3b84>
   1b27c:	ldr	r2, [r9]
   1b280:	mov	r3, fp
   1b284:	ldr	r0, [r1]
   1b288:	ldr	r1, [pc, #768]	; 1b590 <argp_parse@@Base+0x3b88>
   1b28c:	bl	111c0 <fprintf@plt>
   1b290:	mov	r0, #63	; 0x3f
   1b294:	str	fp, [r4, #8]
   1b298:	add	sp, sp, #36	; 0x24
   1b29c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b2a0:	mov	r2, #1
   1b2a4:	mov	r3, r2
   1b2a8:	str	r2, [r4]
   1b2ac:	b	1b074 <argp_parse@@Base+0x366c>
   1b2b0:	ldr	r3, [r4, #32]
   1b2b4:	cmp	r3, r2
   1b2b8:	beq	1b430 <argp_parse@@Base+0x3a28>
   1b2bc:	cmp	fp, r3
   1b2c0:	beq	1b2d4 <argp_parse@@Base+0x38cc>
   1b2c4:	mov	r1, r4
   1b2c8:	mov	r0, r9
   1b2cc:	bl	1a860 <argp_parse@@Base+0x2e58>
   1b2d0:	ldr	r3, [r4]
   1b2d4:	cmp	r6, r3
   1b2d8:	addgt	r1, r9, r3, lsl #2
   1b2dc:	bgt	1b2f4 <argp_parse@@Base+0x38ec>
   1b2e0:	b	1b310 <argp_parse@@Base+0x3908>
   1b2e4:	add	r3, r3, #1
   1b2e8:	cmp	r6, r3
   1b2ec:	str	r3, [r4]
   1b2f0:	beq	1b350 <argp_parse@@Base+0x3948>
   1b2f4:	ldr	r2, [r1], #4
   1b2f8:	ldrb	r0, [r2]
   1b2fc:	cmp	r0, #45	; 0x2d
   1b300:	bne	1b2e4 <argp_parse@@Base+0x38dc>
   1b304:	ldrb	r2, [r2, #1]
   1b308:	cmp	r2, #0
   1b30c:	beq	1b2e4 <argp_parse@@Base+0x38dc>
   1b310:	mov	fp, r3
   1b314:	b	1b354 <argp_parse@@Base+0x394c>
   1b318:	ldr	r3, [r4, #28]
   1b31c:	ldr	r6, [r4, #32]
   1b320:	mvn	r0, #0
   1b324:	cmp	r6, r3
   1b328:	strne	r3, [r4]
   1b32c:	b	1b21c <argp_parse@@Base+0x3814>
   1b330:	ldr	r0, [pc, #604]	; 1b594 <argp_parse@@Base+0x3b8c>
   1b334:	bl	11130 <getenv@plt>
   1b338:	ldr	r5, [r4, #20]
   1b33c:	cmp	r0, #0
   1b340:	bne	1b0b8 <argp_parse@@Base+0x36b0>
   1b344:	mov	r3, #1
   1b348:	str	r3, [r4, #24]
   1b34c:	b	1b0c0 <argp_parse@@Base+0x36b8>
   1b350:	mov	fp, r6
   1b354:	cmp	r6, fp
   1b358:	str	fp, [r4, #32]
   1b35c:	bne	1b1b4 <argp_parse@@Base+0x37ac>
   1b360:	b	1b318 <argp_parse@@Base+0x3910>
   1b364:	ldrb	r1, [r5, #1]
   1b368:	cmp	r1, #0
   1b36c:	beq	1b24c <argp_parse@@Base+0x3844>
   1b370:	cmp	sl, #0
   1b374:	beq	1b3a8 <argp_parse@@Base+0x39a0>
   1b378:	cmp	r1, #45	; 0x2d
   1b37c:	beq	1b4d8 <argp_parse@@Base+0x3ad0>
   1b380:	ldr	r3, [sp, #76]	; 0x4c
   1b384:	cmp	r3, #0
   1b388:	beq	1b3a8 <argp_parse@@Base+0x39a0>
   1b38c:	ldrb	r3, [r5, #2]
   1b390:	cmp	r3, #0
   1b394:	bne	1b444 <argp_parse@@Base+0x3a3c>
   1b398:	mov	r0, r7
   1b39c:	bl	111b4 <strchr@plt>
   1b3a0:	cmp	r0, #0
   1b3a4:	beq	1b444 <argp_parse@@Base+0x3a3c>
   1b3a8:	add	r5, r5, #1
   1b3ac:	b	1b0e8 <argp_parse@@Base+0x36e0>
   1b3b0:	mov	r3, fp
   1b3b4:	str	fp, [r4, #28]
   1b3b8:	b	1b208 <argp_parse@@Base+0x3800>
   1b3bc:	adds	ip, sl, #0
   1b3c0:	movne	ip, #1
   1b3c4:	cmp	r1, #59	; 0x3b
   1b3c8:	movne	ip, #0
   1b3cc:	cmp	ip, #0
   1b3d0:	beq	1b144 <argp_parse@@Base+0x373c>
   1b3d4:	ldrb	r2, [r5, #1]
   1b3d8:	cmp	r2, #0
   1b3dc:	bne	1b3f0 <argp_parse@@Base+0x39e8>
   1b3e0:	ldr	r3, [r4]
   1b3e4:	cmp	r6, r3
   1b3e8:	ldrne	r3, [r9, r3, lsl #2]
   1b3ec:	beq	1b534 <argp_parse@@Base+0x3b2c>
   1b3f0:	str	r3, [r4, #20]
   1b3f4:	ldr	lr, [pc, #412]	; 1b598 <argp_parse@@Base+0x3b90>
   1b3f8:	ldr	r3, [sp, #72]	; 0x48
   1b3fc:	mov	ip, #0
   1b400:	str	r3, [sp]
   1b404:	str	r8, [sp, #12]
   1b408:	str	r4, [sp, #8]
   1b40c:	str	lr, [sp, #16]
   1b410:	mov	r3, sl
   1b414:	str	ip, [r4, #12]
   1b418:	mov	r2, r7
   1b41c:	mov	r1, r9
   1b420:	mov	r0, r6
   1b424:	str	ip, [sp, #4]
   1b428:	bl	1a91c <argp_parse@@Base+0x2f14>
   1b42c:	b	1b268 <argp_parse@@Base+0x3860>
   1b430:	cmp	fp, r2
   1b434:	strne	fp, [r4, #28]
   1b438:	movne	r3, fp
   1b43c:	moveq	r3, r2
   1b440:	b	1b2d4 <argp_parse@@Base+0x38cc>
   1b444:	ldr	r2, [sp, #76]	; 0x4c
   1b448:	add	r5, r5, #1
   1b44c:	str	r5, [r4, #20]
   1b450:	ldr	r3, [pc, #324]	; 1b59c <argp_parse@@Base+0x3b94>
   1b454:	str	r2, [sp, #4]
   1b458:	ldr	r2, [sp, #72]	; 0x48
   1b45c:	str	r3, [sp, #16]
   1b460:	str	r2, [sp]
   1b464:	str	r8, [sp, #12]
   1b468:	str	r4, [sp, #8]
   1b46c:	mov	r3, sl
   1b470:	mov	r2, r7
   1b474:	mov	r1, r9
   1b478:	mov	r0, r6
   1b47c:	bl	1a91c <argp_parse@@Base+0x2f14>
   1b480:	cmn	r0, #1
   1b484:	bne	1b268 <argp_parse@@Base+0x3860>
   1b488:	ldr	r3, [r4]
   1b48c:	ldr	r5, [r9, r3, lsl #2]
   1b490:	b	1b3a8 <argp_parse@@Base+0x39a0>
   1b494:	ldr	r3, [r4]
   1b498:	cmp	r6, r3
   1b49c:	beq	1b514 <argp_parse@@Base+0x3b0c>
   1b4a0:	ldr	r2, [r9, r3, lsl #2]
   1b4a4:	add	r3, r3, #1
   1b4a8:	str	r2, [r4, #12]
   1b4ac:	str	r3, [r4]
   1b4b0:	b	1b174 <argp_parse@@Base+0x376c>
   1b4b4:	cmp	r2, #0
   1b4b8:	moveq	r3, r2
   1b4bc:	ldrne	r2, [r4]
   1b4c0:	str	r3, [r4, #12]
   1b4c4:	addne	r2, r2, #1
   1b4c8:	strne	r2, [r4]
   1b4cc:	mov	r2, #0
   1b4d0:	str	r2, [r4, #20]
   1b4d4:	b	1b268 <argp_parse@@Base+0x3860>
   1b4d8:	add	r5, r5, #2
   1b4dc:	str	r5, [r4, #20]
   1b4e0:	str	r3, [sp, #16]
   1b4e4:	ldr	r3, [sp, #76]	; 0x4c
   1b4e8:	str	r8, [sp, #12]
   1b4ec:	str	r3, [sp, #4]
   1b4f0:	ldr	r3, [sp, #72]	; 0x48
   1b4f4:	str	r4, [sp, #8]
   1b4f8:	str	r3, [sp]
   1b4fc:	mov	r2, r7
   1b500:	mov	r3, sl
   1b504:	mov	r1, r9
   1b508:	mov	r0, r6
   1b50c:	bl	1a91c <argp_parse@@Base+0x2f14>
   1b510:	b	1b268 <argp_parse@@Base+0x3860>
   1b514:	cmp	r8, #0
   1b518:	bne	1b56c <argp_parse@@Base+0x3b64>
   1b51c:	str	fp, [r4, #8]
   1b520:	ldrb	r0, [r7]
   1b524:	cmp	r0, #58	; 0x3a
   1b528:	movne	r0, #63	; 0x3f
   1b52c:	moveq	r0, #58	; 0x3a
   1b530:	b	1b174 <argp_parse@@Base+0x376c>
   1b534:	cmp	r8, #0
   1b538:	beq	1b554 <argp_parse@@Base+0x3b4c>
   1b53c:	ldr	r1, [pc, #72]	; 1b58c <argp_parse@@Base+0x3b84>
   1b540:	ldr	r2, [r9]
   1b544:	mov	r3, fp
   1b548:	ldr	r0, [r1]
   1b54c:	ldr	r1, [pc, #76]	; 1b5a0 <argp_parse@@Base+0x3b98>
   1b550:	bl	111c0 <fprintf@plt>
   1b554:	str	fp, [r4, #8]
   1b558:	ldrb	r0, [r7]
   1b55c:	cmp	r0, #58	; 0x3a
   1b560:	movne	r0, #63	; 0x3f
   1b564:	moveq	r0, #58	; 0x3a
   1b568:	b	1b268 <argp_parse@@Base+0x3860>
   1b56c:	ldr	r1, [pc, #24]	; 1b58c <argp_parse@@Base+0x3b84>
   1b570:	ldr	r2, [r9]
   1b574:	mov	r3, fp
   1b578:	ldr	r0, [r1]
   1b57c:	ldr	r1, [pc, #28]	; 1b5a0 <argp_parse@@Base+0x3b98>
   1b580:	bl	111c0 <fprintf@plt>
   1b584:	b	1b51c <argp_parse@@Base+0x3b14>
   1b588:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   1b58c:	andeq	lr, r2, r0, lsr #5
   1b590:	andeq	sp, r1, ip, lsr #10
   1b594:	andeq	sp, r1, r8, lsl r5
   1b598:	andeq	sp, r1, r4, ror r5
   1b59c:	andeq	sp, r1, r8, lsr #10
   1b5a0:	andeq	sp, r1, r8, asr #10
   1b5a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b5a8:	sub	sp, sp, #44	; 0x2c
   1b5ac:	ldr	r7, [pc, #1572]	; 1bbd8 <argp_parse@@Base+0x41d0>
   1b5b0:	ldr	r4, [pc, #1572]	; 1bbdc <argp_parse@@Base+0x41d4>
   1b5b4:	subs	r6, r0, #0
   1b5b8:	ldm	r7, {r5, sl}
   1b5bc:	str	r1, [sp, #32]
   1b5c0:	str	r3, [sp, #36]	; 0x24
   1b5c4:	stm	r4, {r5, sl}
   1b5c8:	ble	1b774 <argp_parse@@Base+0x3d6c>
   1b5cc:	mov	r3, #0
   1b5d0:	cmp	r5, #0
   1b5d4:	mov	fp, r2
   1b5d8:	str	r3, [r4, #12]
   1b5dc:	beq	1b830 <argp_parse@@Base+0x3e28>
   1b5e0:	ldr	r3, [r4, #16]
   1b5e4:	cmp	r3, #0
   1b5e8:	bne	1b78c <argp_parse@@Base+0x3d84>
   1b5ec:	mov	r3, #0
   1b5f0:	str	r5, [r4, #32]
   1b5f4:	str	r5, [r4, #28]
   1b5f8:	str	r3, [r4, #20]
   1b5fc:	ldrb	r2, [fp]
   1b600:	cmp	r2, #45	; 0x2d
   1b604:	beq	1b8e0 <argp_parse@@Base+0x3ed8>
   1b608:	cmp	r2, #43	; 0x2b
   1b60c:	streq	r3, [r4, #24]
   1b610:	addeq	fp, fp, #1
   1b614:	moveq	r5, r3
   1b618:	beq	1b634 <argp_parse@@Base+0x3c2c>
   1b61c:	ldr	r2, [sp, #88]	; 0x58
   1b620:	cmp	r2, #0
   1b624:	movne	r5, r3
   1b628:	beq	1b8c0 <argp_parse@@Base+0x3eb8>
   1b62c:	mov	r3, #0
   1b630:	str	r3, [r4, #24]
   1b634:	mov	r3, #1
   1b638:	str	r3, [r4, #16]
   1b63c:	ldrb	r3, [fp]
   1b640:	cmp	r3, #58	; 0x3a
   1b644:	moveq	sl, #0
   1b648:	cmp	r5, #0
   1b64c:	beq	1b6d0 <argp_parse@@Base+0x3cc8>
   1b650:	ldrb	r3, [r5]
   1b654:	cmp	r3, #0
   1b658:	beq	1b6d0 <argp_parse@@Base+0x3cc8>
   1b65c:	add	r9, r5, #1
   1b660:	str	r9, [r4, #20]
   1b664:	ldrb	r8, [r5]
   1b668:	mov	r0, fp
   1b66c:	mov	r1, r8
   1b670:	bl	111b4 <strchr@plt>
   1b674:	ldrb	r3, [r5, #1]
   1b678:	str	r8, [sp, #28]
   1b67c:	cmp	r3, #0
   1b680:	ldreq	r3, [r4]
   1b684:	addeq	r3, r3, #1
   1b688:	streq	r3, [r4]
   1b68c:	sub	r3, r8, #58	; 0x3a
   1b690:	cmp	r0, #0
   1b694:	cmpne	r3, #1
   1b698:	bls	1b7f4 <argp_parse@@Base+0x3dec>
   1b69c:	ldrb	r3, [r0]
   1b6a0:	cmp	r3, #87	; 0x57
   1b6a4:	ldrb	r3, [r0, #1]
   1b6a8:	beq	1b968 <argp_parse@@Base+0x3f60>
   1b6ac:	cmp	r3, #58	; 0x3a
   1b6b0:	beq	1ba0c <argp_parse@@Base+0x4004>
   1b6b4:	ldr	r3, [r4, #8]
   1b6b8:	mov	r0, r8
   1b6bc:	ldr	r9, [r4, #12]
   1b6c0:	ldr	r5, [r4]
   1b6c4:	str	r3, [sp, #28]
   1b6c8:	mov	r2, r3
   1b6cc:	b	1b7dc <argp_parse@@Base+0x3dd4>
   1b6d0:	ldr	r5, [r4]
   1b6d4:	ldr	r8, [r4, #32]
   1b6d8:	ldr	r3, [r4, #28]
   1b6dc:	cmp	r8, r5
   1b6e0:	ldr	r2, [r4, #24]
   1b6e4:	movgt	r8, r5
   1b6e8:	strgt	r5, [r4, #32]
   1b6ec:	cmp	r5, r3
   1b6f0:	movlt	r3, r5
   1b6f4:	strlt	r5, [r4, #28]
   1b6f8:	cmp	r2, #1
   1b6fc:	beq	1b840 <argp_parse@@Base+0x3e38>
   1b700:	cmp	r6, r5
   1b704:	beq	1b8a8 <argp_parse@@Base+0x3ea0>
   1b708:	ldr	r3, [sp, #32]
   1b70c:	ldr	r9, [r3, r5, lsl #2]
   1b710:	ldr	r3, [pc, #1224]	; 1bbe0 <argp_parse@@Base+0x41d8>
   1b714:	mov	r0, r9
   1b718:	mov	r1, r3
   1b71c:	str	r3, [sp, #28]
   1b720:	bl	11004 <strcmp@plt>
   1b724:	ldr	r3, [sp, #28]
   1b728:	cmp	r0, #0
   1b72c:	bne	1b7a8 <argp_parse@@Base+0x3da0>
   1b730:	add	r3, r5, #1
   1b734:	ldr	r5, [r4, #28]
   1b738:	str	r3, [r4]
   1b73c:	cmp	r5, r8
   1b740:	beq	1b95c <argp_parse@@Base+0x3f54>
   1b744:	cmp	r3, r8
   1b748:	beq	1b75c <argp_parse@@Base+0x3d54>
   1b74c:	ldr	r0, [sp, #32]
   1b750:	ldr	r1, [pc, #1156]	; 1bbdc <argp_parse@@Base+0x41d4>
   1b754:	bl	1a860 <argp_parse@@Base+0x2e58>
   1b758:	ldr	r5, [r4, #28]
   1b75c:	mov	r8, r6
   1b760:	cmp	r8, r5
   1b764:	str	r6, [r4, #32]
   1b768:	str	r6, [r4]
   1b76c:	moveq	r5, r6
   1b770:	bne	1b8b8 <argp_parse@@Base+0x3eb0>
   1b774:	ldr	r3, [r4, #8]
   1b778:	ldr	r9, [r4, #12]
   1b77c:	str	r3, [sp, #28]
   1b780:	mvn	r0, #0
   1b784:	mov	r2, r3
   1b788:	b	1b7dc <argp_parse@@Base+0x3dd4>
   1b78c:	ldrb	r3, [r2]
   1b790:	ldr	r5, [r4, #20]
   1b794:	sub	r2, r3, #43	; 0x2b
   1b798:	tst	r2, #253	; 0xfd
   1b79c:	ldrbeq	r3, [fp, #1]
   1b7a0:	addeq	fp, fp, #1
   1b7a4:	b	1b640 <argp_parse@@Base+0x3c38>
   1b7a8:	ldrb	r2, [r9]
   1b7ac:	cmp	r2, #45	; 0x2d
   1b7b0:	beq	1b90c <argp_parse@@Base+0x3f04>
   1b7b4:	ldr	r3, [r4, #24]
   1b7b8:	cmp	r3, #0
   1b7bc:	beq	1b774 <argp_parse@@Base+0x3d6c>
   1b7c0:	ldr	r3, [r4, #8]
   1b7c4:	mov	r0, #1
   1b7c8:	mov	r2, r3
   1b7cc:	add	r5, r5, #1
   1b7d0:	str	r5, [r4]
   1b7d4:	str	r9, [r4, #12]
   1b7d8:	str	r3, [sp, #28]
   1b7dc:	ldr	r3, [pc, #1024]	; 1bbe4 <argp_parse@@Base+0x41dc>
   1b7e0:	str	r5, [r7]
   1b7e4:	str	r2, [r7, #8]
   1b7e8:	str	r9, [r3]
   1b7ec:	add	sp, sp, #44	; 0x2c
   1b7f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b7f4:	cmp	sl, #0
   1b7f8:	beq	1b818 <argp_parse@@Base+0x3e10>
   1b7fc:	ldr	r1, [pc, #996]	; 1bbe8 <argp_parse@@Base+0x41e0>
   1b800:	ldr	r3, [sp, #32]
   1b804:	ldr	r0, [r1]
   1b808:	ldr	r2, [r3]
   1b80c:	ldr	r1, [pc, #984]	; 1bbec <argp_parse@@Base+0x41e4>
   1b810:	mov	r3, r8
   1b814:	bl	111c0 <fprintf@plt>
   1b818:	str	r8, [r4, #8]
   1b81c:	ldr	r5, [r4]
   1b820:	ldr	r9, [r4, #12]
   1b824:	mov	r0, #63	; 0x3f
   1b828:	ldr	r2, [sp, #28]
   1b82c:	b	1b7dc <argp_parse@@Base+0x3dd4>
   1b830:	mov	r3, #1
   1b834:	mov	r5, r3
   1b838:	str	r3, [r4]
   1b83c:	b	1b5ec <argp_parse@@Base+0x3be4>
   1b840:	cmp	r8, r3
   1b844:	beq	1b9fc <argp_parse@@Base+0x3ff4>
   1b848:	cmp	r5, r8
   1b84c:	beq	1b860 <argp_parse@@Base+0x3e58>
   1b850:	ldr	r1, [pc, #900]	; 1bbdc <argp_parse@@Base+0x41d4>
   1b854:	ldr	r0, [sp, #32]
   1b858:	bl	1a860 <argp_parse@@Base+0x2e58>
   1b85c:	ldr	r8, [r4]
   1b860:	cmp	r6, r8
   1b864:	ldrgt	r3, [sp, #32]
   1b868:	addgt	r2, r3, r8, lsl #2
   1b86c:	bgt	1b884 <argp_parse@@Base+0x3e7c>
   1b870:	b	1b8a0 <argp_parse@@Base+0x3e98>
   1b874:	add	r8, r8, #1
   1b878:	cmp	r6, r8
   1b87c:	str	r8, [r4]
   1b880:	beq	1b8f4 <argp_parse@@Base+0x3eec>
   1b884:	ldr	r3, [r2], #4
   1b888:	ldrb	r1, [r3]
   1b88c:	cmp	r1, #45	; 0x2d
   1b890:	bne	1b874 <argp_parse@@Base+0x3e6c>
   1b894:	ldrb	r3, [r3, #1]
   1b898:	cmp	r3, #0
   1b89c:	beq	1b874 <argp_parse@@Base+0x3e6c>
   1b8a0:	mov	r5, r8
   1b8a4:	b	1b8f8 <argp_parse@@Base+0x3ef0>
   1b8a8:	ldr	r5, [r4, #28]
   1b8ac:	cmp	r8, r5
   1b8b0:	moveq	r5, r6
   1b8b4:	beq	1b774 <argp_parse@@Base+0x3d6c>
   1b8b8:	str	r5, [r4]
   1b8bc:	b	1b774 <argp_parse@@Base+0x3d6c>
   1b8c0:	ldr	r0, [pc, #808]	; 1bbf0 <argp_parse@@Base+0x41e8>
   1b8c4:	bl	11130 <getenv@plt>
   1b8c8:	ldr	r5, [r4, #20]
   1b8cc:	cmp	r0, #0
   1b8d0:	bne	1b62c <argp_parse@@Base+0x3c24>
   1b8d4:	mov	r3, #1
   1b8d8:	str	r3, [r4, #24]
   1b8dc:	b	1b634 <argp_parse@@Base+0x3c2c>
   1b8e0:	mov	r2, #2
   1b8e4:	add	fp, fp, #1
   1b8e8:	mov	r5, r3
   1b8ec:	str	r2, [r4, #24]
   1b8f0:	b	1b634 <argp_parse@@Base+0x3c2c>
   1b8f4:	mov	r5, r6
   1b8f8:	cmp	r6, r5
   1b8fc:	mov	r8, r5
   1b900:	str	r5, [r4, #32]
   1b904:	bne	1b708 <argp_parse@@Base+0x3d00>
   1b908:	b	1b8a8 <argp_parse@@Base+0x3ea0>
   1b90c:	ldrb	r1, [r9, #1]
   1b910:	cmp	r1, #0
   1b914:	beq	1b7b4 <argp_parse@@Base+0x3dac>
   1b918:	ldr	r2, [sp, #36]	; 0x24
   1b91c:	cmp	r2, #0
   1b920:	beq	1b954 <argp_parse@@Base+0x3f4c>
   1b924:	cmp	r1, #45	; 0x2d
   1b928:	beq	1bb08 <argp_parse@@Base+0x4100>
   1b92c:	ldr	r3, [sp, #84]	; 0x54
   1b930:	cmp	r3, #0
   1b934:	beq	1b954 <argp_parse@@Base+0x3f4c>
   1b938:	ldrb	r3, [r9, #2]
   1b93c:	cmp	r3, #0
   1b940:	bne	1ba50 <argp_parse@@Base+0x4048>
   1b944:	mov	r0, fp
   1b948:	bl	111b4 <strchr@plt>
   1b94c:	cmp	r0, #0
   1b950:	beq	1ba50 <argp_parse@@Base+0x4048>
   1b954:	add	r5, r9, #1
   1b958:	b	1b65c <argp_parse@@Base+0x3c54>
   1b95c:	mov	r5, r3
   1b960:	str	r3, [r4, #28]
   1b964:	b	1b75c <argp_parse@@Base+0x3d54>
   1b968:	ldr	r1, [sp, #36]	; 0x24
   1b96c:	sub	r2, r3, #59	; 0x3b
   1b970:	cmp	r1, #0
   1b974:	clz	r2, r2
   1b978:	lsr	r2, r2, #5
   1b97c:	moveq	r2, #0
   1b980:	cmp	r2, #0
   1b984:	beq	1b6ac <argp_parse@@Base+0x3ca4>
   1b988:	ldrb	r3, [r5, #1]
   1b98c:	cmp	r3, #0
   1b990:	bne	1b9a8 <argp_parse@@Base+0x3fa0>
   1b994:	ldr	r3, [r4]
   1b998:	cmp	r6, r3
   1b99c:	beq	1bb70 <argp_parse@@Base+0x4168>
   1b9a0:	ldr	r2, [sp, #32]
   1b9a4:	ldr	r9, [r2, r3, lsl #2]
   1b9a8:	ldr	r3, [sp, #80]	; 0x50
   1b9ac:	ldr	r1, [sp, #32]
   1b9b0:	str	r3, [sp]
   1b9b4:	ldr	r3, [sp, #36]	; 0x24
   1b9b8:	ldr	lr, [pc, #564]	; 1bbf4 <argp_parse@@Base+0x41ec>
   1b9bc:	mov	r2, fp
   1b9c0:	mov	r0, r6
   1b9c4:	mov	ip, #0
   1b9c8:	str	sl, [sp, #12]
   1b9cc:	str	r4, [sp, #8]
   1b9d0:	str	lr, [sp, #16]
   1b9d4:	str	ip, [sp, #4]
   1b9d8:	str	r9, [r4, #20]
   1b9dc:	str	ip, [r4, #12]
   1b9e0:	bl	1a91c <argp_parse@@Base+0x2f14>
   1b9e4:	ldr	r3, [r4, #8]
   1b9e8:	ldr	r5, [r4]
   1b9ec:	ldr	r9, [r4, #12]
   1b9f0:	str	r3, [sp, #28]
   1b9f4:	mov	r2, r3
   1b9f8:	b	1b7dc <argp_parse@@Base+0x3dd4>
   1b9fc:	cmp	r5, r8
   1ba00:	movne	r8, r5
   1ba04:	strne	r5, [r4, #28]
   1ba08:	b	1b860 <argp_parse@@Base+0x3e58>
   1ba0c:	ldrb	r3, [r0, #2]
   1ba10:	cmp	r3, #58	; 0x3a
   1ba14:	ldrb	r3, [r5, #1]
   1ba18:	beq	1bad0 <argp_parse@@Base+0x40c8>
   1ba1c:	cmp	r3, #0
   1ba20:	ldr	r5, [r4]
   1ba24:	beq	1baa4 <argp_parse@@Base+0x409c>
   1ba28:	ldr	r3, [r4, #8]
   1ba2c:	mov	r0, r8
   1ba30:	add	r5, r5, #1
   1ba34:	str	r9, [r4, #12]
   1ba38:	str	r5, [r4]
   1ba3c:	str	r3, [sp, #28]
   1ba40:	mov	r3, #0
   1ba44:	str	r3, [r4, #20]
   1ba48:	ldr	r2, [sp, #28]
   1ba4c:	b	1b7dc <argp_parse@@Base+0x3dd4>
   1ba50:	ldr	r2, [sp, #84]	; 0x54
   1ba54:	ldr	r3, [pc, #412]	; 1bbf8 <argp_parse@@Base+0x41f0>
   1ba58:	str	r2, [sp, #4]
   1ba5c:	ldr	r2, [sp, #80]	; 0x50
   1ba60:	str	r3, [sp, #16]
   1ba64:	str	r2, [sp]
   1ba68:	add	r9, r9, #1
   1ba6c:	str	sl, [sp, #12]
   1ba70:	str	r4, [sp, #8]
   1ba74:	ldr	r3, [sp, #36]	; 0x24
   1ba78:	mov	r2, fp
   1ba7c:	ldr	r1, [sp, #32]
   1ba80:	mov	r0, r6
   1ba84:	str	r9, [r4, #20]
   1ba88:	bl	1a91c <argp_parse@@Base+0x2f14>
   1ba8c:	cmn	r0, #1
   1ba90:	bne	1b9e4 <argp_parse@@Base+0x3fdc>
   1ba94:	ldr	r3, [r4]
   1ba98:	ldr	r2, [sp, #32]
   1ba9c:	ldr	r9, [r2, r3, lsl #2]
   1baa0:	b	1b954 <argp_parse@@Base+0x3f4c>
   1baa4:	cmp	r6, r5
   1baa8:	beq	1bb40 <argp_parse@@Base+0x4138>
   1baac:	ldr	r3, [r4, #8]
   1bab0:	mov	r0, r8
   1bab4:	str	r3, [sp, #28]
   1bab8:	ldr	r3, [sp, #32]
   1babc:	ldr	r9, [r3, r5, lsl #2]
   1bac0:	add	r5, r5, #1
   1bac4:	str	r9, [r4, #12]
   1bac8:	str	r5, [r4]
   1bacc:	b	1ba40 <argp_parse@@Base+0x4038>
   1bad0:	cmp	r3, #0
   1bad4:	moveq	r9, r3
   1bad8:	ldrne	r5, [r4]
   1badc:	mov	r3, #0
   1bae0:	str	r3, [r4, #20]
   1bae4:	ldr	r3, [r4, #8]
   1bae8:	addne	r5, r5, #1
   1baec:	ldreq	r5, [r4]
   1baf0:	strne	r5, [r4]
   1baf4:	str	r9, [r4, #12]
   1baf8:	mov	r0, r8
   1bafc:	str	r3, [sp, #28]
   1bb00:	mov	r2, r3
   1bb04:	b	1b7dc <argp_parse@@Base+0x3dd4>
   1bb08:	str	r3, [sp, #16]
   1bb0c:	ldr	r3, [sp, #84]	; 0x54
   1bb10:	add	r9, r9, #2
   1bb14:	str	r3, [sp, #4]
   1bb18:	ldr	r3, [sp, #80]	; 0x50
   1bb1c:	str	sl, [sp, #12]
   1bb20:	str	r3, [sp]
   1bb24:	str	r4, [sp, #8]
   1bb28:	mov	r3, r2
   1bb2c:	ldr	r1, [sp, #32]
   1bb30:	mov	r2, fp
   1bb34:	mov	r0, r6
   1bb38:	str	r9, [r4, #20]
   1bb3c:	b	1b9e0 <argp_parse@@Base+0x3fd8>
   1bb40:	cmp	sl, #0
   1bb44:	bne	1bbb8 <argp_parse@@Base+0x41b0>
   1bb48:	str	r8, [r4, #8]
   1bb4c:	ldrb	r8, [fp]
   1bb50:	cmp	r8, #58	; 0x3a
   1bb54:	moveq	r0, r8
   1bb58:	ldreq	r5, [r4]
   1bb5c:	ldreq	r9, [r4, #12]
   1bb60:	ldrne	r5, [r4]
   1bb64:	ldrne	r9, [r4, #12]
   1bb68:	movne	r0, #63	; 0x3f
   1bb6c:	b	1ba40 <argp_parse@@Base+0x4038>
   1bb70:	cmp	sl, #0
   1bb74:	beq	1bb94 <argp_parse@@Base+0x418c>
   1bb78:	ldr	r1, [pc, #104]	; 1bbe8 <argp_parse@@Base+0x41e0>
   1bb7c:	ldr	r3, [sp, #32]
   1bb80:	ldr	r0, [r1]
   1bb84:	ldr	r2, [r3]
   1bb88:	ldr	r1, [pc, #108]	; 1bbfc <argp_parse@@Base+0x41f4>
   1bb8c:	mov	r3, r8
   1bb90:	bl	111c0 <fprintf@plt>
   1bb94:	str	r8, [r4, #8]
   1bb98:	ldrb	r8, [fp]
   1bb9c:	ldr	r5, [r4]
   1bba0:	ldr	r9, [r4, #12]
   1bba4:	cmp	r8, #58	; 0x3a
   1bba8:	movne	r0, #63	; 0x3f
   1bbac:	moveq	r0, #58	; 0x3a
   1bbb0:	ldr	r2, [sp, #28]
   1bbb4:	b	1b7dc <argp_parse@@Base+0x3dd4>
   1bbb8:	ldr	r3, [sp, #32]
   1bbbc:	ldr	r1, [pc, #36]	; 1bbe8 <argp_parse@@Base+0x41e0>
   1bbc0:	ldr	r2, [r3]
   1bbc4:	ldr	r0, [r1]
   1bbc8:	mov	r3, r8
   1bbcc:	ldr	r1, [pc, #40]	; 1bbfc <argp_parse@@Base+0x41f4>
   1bbd0:	bl	111c0 <fprintf@plt>
   1bbd4:	b	1bb48 <argp_parse@@Base+0x4140>
   1bbd8:	andeq	lr, r2, r8, lsl #5
   1bbdc:	ldrdeq	lr, [r2], -ip
   1bbe0:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   1bbe4:	andeq	lr, r2, r8, ror r3
   1bbe8:	andeq	lr, r2, r0, lsr #5
   1bbec:	andeq	sp, r1, ip, lsr #10
   1bbf0:	andeq	sp, r1, r8, lsl r5
   1bbf4:	andeq	sp, r1, r4, ror r5
   1bbf8:	andeq	sp, r1, r8, lsr #10
   1bbfc:	andeq	sp, r1, r8, asr #10
   1bc00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bc04:	sub	sp, sp, #20
   1bc08:	ldr	r7, [pc, #1052]	; 1c02c <argp_parse@@Base+0x4624>
   1bc0c:	ldr	r4, [pc, #1052]	; 1c030 <argp_parse@@Base+0x4628>
   1bc10:	subs	r6, r0, #0
   1bc14:	ldr	r5, [r7]
   1bc18:	ldr	r3, [r7, #4]
   1bc1c:	str	r1, [sp, #4]
   1bc20:	str	r5, [r4]
   1bc24:	str	r3, [r4, #4]
   1bc28:	ble	1bf00 <argp_parse@@Base+0x44f8>
   1bc2c:	mov	sl, r2
   1bc30:	cmp	r5, #0
   1bc34:	mov	r2, #0
   1bc38:	str	r2, [r4, #12]
   1bc3c:	beq	1bce8 <argp_parse@@Base+0x42e0>
   1bc40:	ldr	r2, [r4, #16]
   1bc44:	cmp	r2, #0
   1bc48:	beq	1bcf4 <argp_parse@@Base+0x42ec>
   1bc4c:	ldrb	r2, [sl]
   1bc50:	sub	r1, r2, #43	; 0x2b
   1bc54:	tst	r1, #253	; 0xfd
   1bc58:	ldrbeq	r2, [sl, #1]
   1bc5c:	addeq	sl, sl, #1
   1bc60:	cmp	r2, #58	; 0x3a
   1bc64:	ldr	r2, [r4, #20]
   1bc68:	moveq	r3, #0
   1bc6c:	cmp	r2, #0
   1bc70:	beq	1bd48 <argp_parse@@Base+0x4340>
   1bc74:	ldrb	r1, [r2]
   1bc78:	cmp	r1, #0
   1bc7c:	beq	1bd48 <argp_parse@@Base+0x4340>
   1bc80:	add	r9, r2, #1
   1bc84:	str	r9, [r4, #20]
   1bc88:	ldrb	r8, [r2]
   1bc8c:	mov	r0, sl
   1bc90:	str	r3, [sp, #12]
   1bc94:	mov	r1, r8
   1bc98:	str	r2, [sp, #8]
   1bc9c:	bl	111b4 <strchr@plt>
   1bca0:	ldr	r2, [sp, #8]
   1bca4:	mov	fp, r8
   1bca8:	ldr	r3, [sp, #12]
   1bcac:	ldrb	r1, [r2, #1]
   1bcb0:	cmp	r1, #0
   1bcb4:	addeq	r5, r5, #1
   1bcb8:	sub	r1, r8, #58	; 0x3a
   1bcbc:	streq	r5, [r4]
   1bcc0:	cmp	r0, #0
   1bcc4:	cmpne	r1, #1
   1bcc8:	bls	1be34 <argp_parse@@Base+0x442c>
   1bccc:	ldrb	r1, [r0, #1]
   1bcd0:	cmp	r1, #58	; 0x3a
   1bcd4:	beq	1bf40 <argp_parse@@Base+0x4538>
   1bcd8:	mov	r0, r8
   1bcdc:	ldr	r9, [r4, #12]
   1bce0:	ldr	fp, [r4, #8]
   1bce4:	b	1be1c <argp_parse@@Base+0x4414>
   1bce8:	mov	r2, #1
   1bcec:	mov	r5, r2
   1bcf0:	str	r2, [r4]
   1bcf4:	mov	r2, #0
   1bcf8:	str	r5, [r4, #32]
   1bcfc:	str	r5, [r4, #28]
   1bd00:	str	r2, [r4, #20]
   1bd04:	ldrb	r1, [sl]
   1bd08:	cmp	r1, #45	; 0x2d
   1bd0c:	moveq	r1, #2
   1bd10:	addeq	sl, sl, #1
   1bd14:	streq	r1, [r4, #24]
   1bd18:	beq	1bd34 <argp_parse@@Base+0x432c>
   1bd1c:	cmp	r1, #43	; 0x2b
   1bd20:	addeq	sl, sl, #1
   1bd24:	moveq	r1, r2
   1bd28:	movne	r1, r2
   1bd2c:	streq	r2, [r4, #24]
   1bd30:	strne	r2, [r4, #24]
   1bd34:	mov	r2, #1
   1bd38:	str	r2, [r4, #16]
   1bd3c:	ldrb	r2, [sl]
   1bd40:	cmp	r2, #58	; 0x3a
   1bd44:	beq	1be6c <argp_parse@@Base+0x4464>
   1bd48:	add	r1, r4, #24
   1bd4c:	ldm	r1, {r1, r2, r8}
   1bd50:	cmp	r8, r5
   1bd54:	movgt	r8, r5
   1bd58:	strgt	r5, [r4, #32]
   1bd5c:	cmp	r5, r2
   1bd60:	movlt	r2, r5
   1bd64:	strlt	r5, [r4, #28]
   1bd68:	cmp	r1, #1
   1bd6c:	beq	1be80 <argp_parse@@Base+0x4478>
   1bd70:	cmp	r6, r5
   1bd74:	str	r3, [sp, #8]
   1bd78:	beq	1bef0 <argp_parse@@Base+0x44e8>
   1bd7c:	ldr	fp, [sp, #4]
   1bd80:	ldr	r1, [pc, #684]	; 1c034 <argp_parse@@Base+0x462c>
   1bd84:	ldr	r9, [fp, r5, lsl #2]
   1bd88:	mov	r0, r9
   1bd8c:	bl	11004 <strcmp@plt>
   1bd90:	ldr	r3, [sp, #8]
   1bd94:	cmp	r0, #0
   1bd98:	bne	1bdf0 <argp_parse@@Base+0x43e8>
   1bd9c:	add	r3, r5, #1
   1bda0:	ldr	r5, [r4, #28]
   1bda4:	str	r3, [r4]
   1bda8:	cmp	r5, r8
   1bdac:	beq	1bf34 <argp_parse@@Base+0x452c>
   1bdb0:	cmp	r3, r8
   1bdb4:	beq	1bdc8 <argp_parse@@Base+0x43c0>
   1bdb8:	mov	r0, fp
   1bdbc:	ldr	r1, [pc, #620]	; 1c030 <argp_parse@@Base+0x4628>
   1bdc0:	bl	1a860 <argp_parse@@Base+0x2e58>
   1bdc4:	ldr	r5, [r4, #28]
   1bdc8:	mov	r8, r6
   1bdcc:	cmp	r8, r5
   1bdd0:	str	r6, [r4, #32]
   1bdd4:	str	r6, [r4]
   1bdd8:	beq	1befc <argp_parse@@Base+0x44f4>
   1bddc:	str	r5, [r4]
   1bde0:	ldr	r9, [r4, #12]
   1bde4:	ldr	fp, [r4, #8]
   1bde8:	mvn	r0, #0
   1bdec:	b	1be1c <argp_parse@@Base+0x4414>
   1bdf0:	ldrb	r2, [r9]
   1bdf4:	cmp	r2, #45	; 0x2d
   1bdf8:	beq	1bf20 <argp_parse@@Base+0x4518>
   1bdfc:	ldr	r3, [r4, #24]
   1be00:	cmp	r3, #0
   1be04:	beq	1bf00 <argp_parse@@Base+0x44f8>
   1be08:	ldr	fp, [r4, #8]
   1be0c:	mov	r0, #1
   1be10:	add	r5, r5, #1
   1be14:	str	r5, [r4]
   1be18:	str	r9, [r4, #12]
   1be1c:	ldr	r3, [pc, #532]	; 1c038 <argp_parse@@Base+0x4630>
   1be20:	str	r5, [r7]
   1be24:	str	fp, [r7, #8]
   1be28:	str	r9, [r3]
   1be2c:	add	sp, sp, #20
   1be30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1be34:	cmp	r3, #0
   1be38:	beq	1be5c <argp_parse@@Base+0x4454>
   1be3c:	ldr	r3, [sp, #4]
   1be40:	ldr	r1, [pc, #500]	; 1c03c <argp_parse@@Base+0x4634>
   1be44:	ldr	r2, [r3]
   1be48:	ldr	r0, [r1]
   1be4c:	mov	r3, r8
   1be50:	ldr	r1, [pc, #488]	; 1c040 <argp_parse@@Base+0x4638>
   1be54:	bl	111c0 <fprintf@plt>
   1be58:	ldr	r5, [r4]
   1be5c:	str	r8, [r4, #8]
   1be60:	ldr	r9, [r4, #12]
   1be64:	mov	r0, #63	; 0x3f
   1be68:	b	1be1c <argp_parse@@Base+0x4414>
   1be6c:	cmp	r1, #1
   1be70:	mov	r8, r5
   1be74:	mov	r2, r5
   1be78:	mov	r3, #0
   1be7c:	bne	1bd70 <argp_parse@@Base+0x4368>
   1be80:	cmp	r2, r8
   1be84:	beq	1bf78 <argp_parse@@Base+0x4570>
   1be88:	cmp	r5, r8
   1be8c:	beq	1bea8 <argp_parse@@Base+0x44a0>
   1be90:	ldr	r1, [pc, #408]	; 1c030 <argp_parse@@Base+0x4628>
   1be94:	ldr	r0, [sp, #4]
   1be98:	str	r3, [sp, #8]
   1be9c:	bl	1a860 <argp_parse@@Base+0x2e58>
   1bea0:	ldr	r8, [r4]
   1bea4:	ldr	r3, [sp, #8]
   1bea8:	cmp	r6, r8
   1beac:	ldrgt	r2, [sp, #4]
   1beb0:	addgt	r1, r2, r8, lsl #2
   1beb4:	bgt	1becc <argp_parse@@Base+0x44c4>
   1beb8:	b	1bee8 <argp_parse@@Base+0x44e0>
   1bebc:	add	r8, r8, #1
   1bec0:	cmp	r6, r8
   1bec4:	str	r8, [r4]
   1bec8:	beq	1bf10 <argp_parse@@Base+0x4508>
   1becc:	ldr	r2, [r1], #4
   1bed0:	ldrb	r0, [r2]
   1bed4:	cmp	r0, #45	; 0x2d
   1bed8:	bne	1bebc <argp_parse@@Base+0x44b4>
   1bedc:	ldrb	r2, [r2, #1]
   1bee0:	cmp	r2, #0
   1bee4:	beq	1bebc <argp_parse@@Base+0x44b4>
   1bee8:	mov	r5, r8
   1beec:	b	1bf14 <argp_parse@@Base+0x450c>
   1bef0:	ldr	r5, [r4, #28]
   1bef4:	cmp	r8, r5
   1bef8:	bne	1bddc <argp_parse@@Base+0x43d4>
   1befc:	mov	r5, r6
   1bf00:	ldr	r9, [r4, #12]
   1bf04:	ldr	fp, [r4, #8]
   1bf08:	mvn	r0, #0
   1bf0c:	b	1be1c <argp_parse@@Base+0x4414>
   1bf10:	mov	r5, r6
   1bf14:	mov	r8, r5
   1bf18:	str	r5, [r4, #32]
   1bf1c:	b	1bd70 <argp_parse@@Base+0x4368>
   1bf20:	ldrb	r2, [r9, #1]
   1bf24:	cmp	r2, #0
   1bf28:	beq	1bdfc <argp_parse@@Base+0x43f4>
   1bf2c:	add	r2, r9, #1
   1bf30:	b	1bc80 <argp_parse@@Base+0x4278>
   1bf34:	mov	r5, r3
   1bf38:	str	r3, [r4, #28]
   1bf3c:	b	1bdc8 <argp_parse@@Base+0x43c0>
   1bf40:	ldrb	r1, [r0, #2]
   1bf44:	cmp	r1, #58	; 0x3a
   1bf48:	beq	1bfb4 <argp_parse@@Base+0x45ac>
   1bf4c:	ldrb	r2, [r2, #1]
   1bf50:	cmp	r2, #0
   1bf54:	beq	1bf88 <argp_parse@@Base+0x4580>
   1bf58:	ldr	fp, [r4, #8]
   1bf5c:	mov	r0, r8
   1bf60:	add	r5, r5, #1
   1bf64:	str	r5, [r4]
   1bf68:	str	r9, [r4, #12]
   1bf6c:	mov	r3, #0
   1bf70:	str	r3, [r4, #20]
   1bf74:	b	1be1c <argp_parse@@Base+0x4414>
   1bf78:	cmp	r5, r8
   1bf7c:	movne	r8, r5
   1bf80:	strne	r5, [r4, #28]
   1bf84:	b	1bea8 <argp_parse@@Base+0x44a0>
   1bf88:	cmp	r6, r5
   1bf8c:	beq	1bfe0 <argp_parse@@Base+0x45d8>
   1bf90:	ldr	r2, [sp, #4]
   1bf94:	add	r3, r5, #1
   1bf98:	ldr	fp, [r4, #8]
   1bf9c:	ldr	r9, [r2, r5, lsl #2]
   1bfa0:	mov	r0, r8
   1bfa4:	mov	r5, r3
   1bfa8:	str	r9, [r4, #12]
   1bfac:	str	r3, [r4]
   1bfb0:	b	1bf6c <argp_parse@@Base+0x4564>
   1bfb4:	ldrb	r3, [r2, #1]
   1bfb8:	mov	r0, r8
   1bfbc:	ldr	fp, [r4, #8]
   1bfc0:	cmp	r3, #0
   1bfc4:	moveq	r9, r3
   1bfc8:	addne	r5, r5, #1
   1bfcc:	mov	r3, #0
   1bfd0:	strne	r5, [r4]
   1bfd4:	str	r9, [r4, #12]
   1bfd8:	str	r3, [r4, #20]
   1bfdc:	b	1be1c <argp_parse@@Base+0x4414>
   1bfe0:	cmp	r3, #0
   1bfe4:	beq	1c008 <argp_parse@@Base+0x4600>
   1bfe8:	ldr	r3, [sp, #4]
   1bfec:	ldr	r1, [pc, #72]	; 1c03c <argp_parse@@Base+0x4634>
   1bff0:	ldr	r2, [r3]
   1bff4:	ldr	r0, [r1]
   1bff8:	mov	r3, r8
   1bffc:	ldr	r1, [pc, #64]	; 1c044 <argp_parse@@Base+0x463c>
   1c000:	bl	111c0 <fprintf@plt>
   1c004:	ldr	r6, [r4]
   1c008:	str	r8, [r4, #8]
   1c00c:	ldrb	r8, [sl]
   1c010:	mov	r5, r6
   1c014:	cmp	r8, #58	; 0x3a
   1c018:	moveq	r0, r8
   1c01c:	ldreq	r9, [r4, #12]
   1c020:	ldrne	r9, [r4, #12]
   1c024:	movne	r0, #63	; 0x3f
   1c028:	b	1bf6c <argp_parse@@Base+0x4564>
   1c02c:	andeq	lr, r2, r8, lsl #5
   1c030:	ldrdeq	lr, [r2], -ip
   1c034:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   1c038:	andeq	lr, r2, r8, ror r3
   1c03c:	andeq	lr, r2, r0, lsr #5
   1c040:	andeq	sp, r1, ip, lsr #10
   1c044:	andeq	sp, r1, r8, asr #10
   1c048:	push	{r4, r5, r6, lr}
   1c04c:	subs	r4, r2, #0
   1c050:	mov	r6, r0
   1c054:	mov	r5, r1
   1c058:	beq	1c084 <argp_parse@@Base+0x467c>
   1c05c:	mov	r1, r4
   1c060:	mvn	r0, #0
   1c064:	bl	1c094 <argp_parse@@Base+0x468c>
   1c068:	cmp	r0, r5
   1c06c:	bcs	1c084 <argp_parse@@Base+0x467c>
   1c070:	bl	111cc <__errno_location@plt>
   1c074:	mov	r3, #12
   1c078:	str	r3, [r0]
   1c07c:	mov	r0, #0
   1c080:	pop	{r4, r5, r6, pc}
   1c084:	mul	r1, r5, r4
   1c088:	mov	r0, r6
   1c08c:	pop	{r4, r5, r6, lr}
   1c090:	b	19f94 <argp_parse@@Base+0x258c>
   1c094:	subs	r2, r1, #1
   1c098:	bxeq	lr
   1c09c:	bcc	1c274 <argp_parse@@Base+0x486c>
   1c0a0:	cmp	r0, r1
   1c0a4:	bls	1c258 <argp_parse@@Base+0x4850>
   1c0a8:	tst	r1, r2
   1c0ac:	beq	1c264 <argp_parse@@Base+0x485c>
   1c0b0:	clz	r3, r0
   1c0b4:	clz	r2, r1
   1c0b8:	sub	r3, r2, r3
   1c0bc:	rsbs	r3, r3, #31
   1c0c0:	addne	r3, r3, r3, lsl #1
   1c0c4:	mov	r2, #0
   1c0c8:	addne	pc, pc, r3, lsl #2
   1c0cc:	nop			; (mov r0, r0)
   1c0d0:	cmp	r0, r1, lsl #31
   1c0d4:	adc	r2, r2, r2
   1c0d8:	subcs	r0, r0, r1, lsl #31
   1c0dc:	cmp	r0, r1, lsl #30
   1c0e0:	adc	r2, r2, r2
   1c0e4:	subcs	r0, r0, r1, lsl #30
   1c0e8:	cmp	r0, r1, lsl #29
   1c0ec:	adc	r2, r2, r2
   1c0f0:	subcs	r0, r0, r1, lsl #29
   1c0f4:	cmp	r0, r1, lsl #28
   1c0f8:	adc	r2, r2, r2
   1c0fc:	subcs	r0, r0, r1, lsl #28
   1c100:	cmp	r0, r1, lsl #27
   1c104:	adc	r2, r2, r2
   1c108:	subcs	r0, r0, r1, lsl #27
   1c10c:	cmp	r0, r1, lsl #26
   1c110:	adc	r2, r2, r2
   1c114:	subcs	r0, r0, r1, lsl #26
   1c118:	cmp	r0, r1, lsl #25
   1c11c:	adc	r2, r2, r2
   1c120:	subcs	r0, r0, r1, lsl #25
   1c124:	cmp	r0, r1, lsl #24
   1c128:	adc	r2, r2, r2
   1c12c:	subcs	r0, r0, r1, lsl #24
   1c130:	cmp	r0, r1, lsl #23
   1c134:	adc	r2, r2, r2
   1c138:	subcs	r0, r0, r1, lsl #23
   1c13c:	cmp	r0, r1, lsl #22
   1c140:	adc	r2, r2, r2
   1c144:	subcs	r0, r0, r1, lsl #22
   1c148:	cmp	r0, r1, lsl #21
   1c14c:	adc	r2, r2, r2
   1c150:	subcs	r0, r0, r1, lsl #21
   1c154:	cmp	r0, r1, lsl #20
   1c158:	adc	r2, r2, r2
   1c15c:	subcs	r0, r0, r1, lsl #20
   1c160:	cmp	r0, r1, lsl #19
   1c164:	adc	r2, r2, r2
   1c168:	subcs	r0, r0, r1, lsl #19
   1c16c:	cmp	r0, r1, lsl #18
   1c170:	adc	r2, r2, r2
   1c174:	subcs	r0, r0, r1, lsl #18
   1c178:	cmp	r0, r1, lsl #17
   1c17c:	adc	r2, r2, r2
   1c180:	subcs	r0, r0, r1, lsl #17
   1c184:	cmp	r0, r1, lsl #16
   1c188:	adc	r2, r2, r2
   1c18c:	subcs	r0, r0, r1, lsl #16
   1c190:	cmp	r0, r1, lsl #15
   1c194:	adc	r2, r2, r2
   1c198:	subcs	r0, r0, r1, lsl #15
   1c19c:	cmp	r0, r1, lsl #14
   1c1a0:	adc	r2, r2, r2
   1c1a4:	subcs	r0, r0, r1, lsl #14
   1c1a8:	cmp	r0, r1, lsl #13
   1c1ac:	adc	r2, r2, r2
   1c1b0:	subcs	r0, r0, r1, lsl #13
   1c1b4:	cmp	r0, r1, lsl #12
   1c1b8:	adc	r2, r2, r2
   1c1bc:	subcs	r0, r0, r1, lsl #12
   1c1c0:	cmp	r0, r1, lsl #11
   1c1c4:	adc	r2, r2, r2
   1c1c8:	subcs	r0, r0, r1, lsl #11
   1c1cc:	cmp	r0, r1, lsl #10
   1c1d0:	adc	r2, r2, r2
   1c1d4:	subcs	r0, r0, r1, lsl #10
   1c1d8:	cmp	r0, r1, lsl #9
   1c1dc:	adc	r2, r2, r2
   1c1e0:	subcs	r0, r0, r1, lsl #9
   1c1e4:	cmp	r0, r1, lsl #8
   1c1e8:	adc	r2, r2, r2
   1c1ec:	subcs	r0, r0, r1, lsl #8
   1c1f0:	cmp	r0, r1, lsl #7
   1c1f4:	adc	r2, r2, r2
   1c1f8:	subcs	r0, r0, r1, lsl #7
   1c1fc:	cmp	r0, r1, lsl #6
   1c200:	adc	r2, r2, r2
   1c204:	subcs	r0, r0, r1, lsl #6
   1c208:	cmp	r0, r1, lsl #5
   1c20c:	adc	r2, r2, r2
   1c210:	subcs	r0, r0, r1, lsl #5
   1c214:	cmp	r0, r1, lsl #4
   1c218:	adc	r2, r2, r2
   1c21c:	subcs	r0, r0, r1, lsl #4
   1c220:	cmp	r0, r1, lsl #3
   1c224:	adc	r2, r2, r2
   1c228:	subcs	r0, r0, r1, lsl #3
   1c22c:	cmp	r0, r1, lsl #2
   1c230:	adc	r2, r2, r2
   1c234:	subcs	r0, r0, r1, lsl #2
   1c238:	cmp	r0, r1, lsl #1
   1c23c:	adc	r2, r2, r2
   1c240:	subcs	r0, r0, r1, lsl #1
   1c244:	cmp	r0, r1
   1c248:	adc	r2, r2, r2
   1c24c:	subcs	r0, r0, r1
   1c250:	mov	r0, r2
   1c254:	bx	lr
   1c258:	moveq	r0, #1
   1c25c:	movne	r0, #0
   1c260:	bx	lr
   1c264:	clz	r2, r1
   1c268:	rsb	r2, r2, #31
   1c26c:	lsr	r0, r0, r2
   1c270:	bx	lr
   1c274:	cmp	r0, #0
   1c278:	mvnne	r0, #0
   1c27c:	b	1c4e0 <argp_parse@@Base+0x4ad8>
   1c280:	cmp	r1, #0
   1c284:	beq	1c274 <argp_parse@@Base+0x486c>
   1c288:	push	{r0, r1, lr}
   1c28c:	bl	1c094 <argp_parse@@Base+0x468c>
   1c290:	pop	{r1, r2, lr}
   1c294:	mul	r3, r2, r0
   1c298:	sub	r1, r1, r3
   1c29c:	bx	lr
   1c2a0:	cmp	r1, #0
   1c2a4:	beq	1c4b0 <argp_parse@@Base+0x4aa8>
   1c2a8:	eor	ip, r0, r1
   1c2ac:	rsbmi	r1, r1, #0
   1c2b0:	subs	r2, r1, #1
   1c2b4:	beq	1c47c <argp_parse@@Base+0x4a74>
   1c2b8:	movs	r3, r0
   1c2bc:	rsbmi	r3, r0, #0
   1c2c0:	cmp	r3, r1
   1c2c4:	bls	1c488 <argp_parse@@Base+0x4a80>
   1c2c8:	tst	r1, r2
   1c2cc:	beq	1c498 <argp_parse@@Base+0x4a90>
   1c2d0:	clz	r2, r3
   1c2d4:	clz	r0, r1
   1c2d8:	sub	r2, r0, r2
   1c2dc:	rsbs	r2, r2, #31
   1c2e0:	addne	r2, r2, r2, lsl #1
   1c2e4:	mov	r0, #0
   1c2e8:	addne	pc, pc, r2, lsl #2
   1c2ec:	nop			; (mov r0, r0)
   1c2f0:	cmp	r3, r1, lsl #31
   1c2f4:	adc	r0, r0, r0
   1c2f8:	subcs	r3, r3, r1, lsl #31
   1c2fc:	cmp	r3, r1, lsl #30
   1c300:	adc	r0, r0, r0
   1c304:	subcs	r3, r3, r1, lsl #30
   1c308:	cmp	r3, r1, lsl #29
   1c30c:	adc	r0, r0, r0
   1c310:	subcs	r3, r3, r1, lsl #29
   1c314:	cmp	r3, r1, lsl #28
   1c318:	adc	r0, r0, r0
   1c31c:	subcs	r3, r3, r1, lsl #28
   1c320:	cmp	r3, r1, lsl #27
   1c324:	adc	r0, r0, r0
   1c328:	subcs	r3, r3, r1, lsl #27
   1c32c:	cmp	r3, r1, lsl #26
   1c330:	adc	r0, r0, r0
   1c334:	subcs	r3, r3, r1, lsl #26
   1c338:	cmp	r3, r1, lsl #25
   1c33c:	adc	r0, r0, r0
   1c340:	subcs	r3, r3, r1, lsl #25
   1c344:	cmp	r3, r1, lsl #24
   1c348:	adc	r0, r0, r0
   1c34c:	subcs	r3, r3, r1, lsl #24
   1c350:	cmp	r3, r1, lsl #23
   1c354:	adc	r0, r0, r0
   1c358:	subcs	r3, r3, r1, lsl #23
   1c35c:	cmp	r3, r1, lsl #22
   1c360:	adc	r0, r0, r0
   1c364:	subcs	r3, r3, r1, lsl #22
   1c368:	cmp	r3, r1, lsl #21
   1c36c:	adc	r0, r0, r0
   1c370:	subcs	r3, r3, r1, lsl #21
   1c374:	cmp	r3, r1, lsl #20
   1c378:	adc	r0, r0, r0
   1c37c:	subcs	r3, r3, r1, lsl #20
   1c380:	cmp	r3, r1, lsl #19
   1c384:	adc	r0, r0, r0
   1c388:	subcs	r3, r3, r1, lsl #19
   1c38c:	cmp	r3, r1, lsl #18
   1c390:	adc	r0, r0, r0
   1c394:	subcs	r3, r3, r1, lsl #18
   1c398:	cmp	r3, r1, lsl #17
   1c39c:	adc	r0, r0, r0
   1c3a0:	subcs	r3, r3, r1, lsl #17
   1c3a4:	cmp	r3, r1, lsl #16
   1c3a8:	adc	r0, r0, r0
   1c3ac:	subcs	r3, r3, r1, lsl #16
   1c3b0:	cmp	r3, r1, lsl #15
   1c3b4:	adc	r0, r0, r0
   1c3b8:	subcs	r3, r3, r1, lsl #15
   1c3bc:	cmp	r3, r1, lsl #14
   1c3c0:	adc	r0, r0, r0
   1c3c4:	subcs	r3, r3, r1, lsl #14
   1c3c8:	cmp	r3, r1, lsl #13
   1c3cc:	adc	r0, r0, r0
   1c3d0:	subcs	r3, r3, r1, lsl #13
   1c3d4:	cmp	r3, r1, lsl #12
   1c3d8:	adc	r0, r0, r0
   1c3dc:	subcs	r3, r3, r1, lsl #12
   1c3e0:	cmp	r3, r1, lsl #11
   1c3e4:	adc	r0, r0, r0
   1c3e8:	subcs	r3, r3, r1, lsl #11
   1c3ec:	cmp	r3, r1, lsl #10
   1c3f0:	adc	r0, r0, r0
   1c3f4:	subcs	r3, r3, r1, lsl #10
   1c3f8:	cmp	r3, r1, lsl #9
   1c3fc:	adc	r0, r0, r0
   1c400:	subcs	r3, r3, r1, lsl #9
   1c404:	cmp	r3, r1, lsl #8
   1c408:	adc	r0, r0, r0
   1c40c:	subcs	r3, r3, r1, lsl #8
   1c410:	cmp	r3, r1, lsl #7
   1c414:	adc	r0, r0, r0
   1c418:	subcs	r3, r3, r1, lsl #7
   1c41c:	cmp	r3, r1, lsl #6
   1c420:	adc	r0, r0, r0
   1c424:	subcs	r3, r3, r1, lsl #6
   1c428:	cmp	r3, r1, lsl #5
   1c42c:	adc	r0, r0, r0
   1c430:	subcs	r3, r3, r1, lsl #5
   1c434:	cmp	r3, r1, lsl #4
   1c438:	adc	r0, r0, r0
   1c43c:	subcs	r3, r3, r1, lsl #4
   1c440:	cmp	r3, r1, lsl #3
   1c444:	adc	r0, r0, r0
   1c448:	subcs	r3, r3, r1, lsl #3
   1c44c:	cmp	r3, r1, lsl #2
   1c450:	adc	r0, r0, r0
   1c454:	subcs	r3, r3, r1, lsl #2
   1c458:	cmp	r3, r1, lsl #1
   1c45c:	adc	r0, r0, r0
   1c460:	subcs	r3, r3, r1, lsl #1
   1c464:	cmp	r3, r1
   1c468:	adc	r0, r0, r0
   1c46c:	subcs	r3, r3, r1
   1c470:	cmp	ip, #0
   1c474:	rsbmi	r0, r0, #0
   1c478:	bx	lr
   1c47c:	teq	ip, r0
   1c480:	rsbmi	r0, r0, #0
   1c484:	bx	lr
   1c488:	movcc	r0, #0
   1c48c:	asreq	r0, ip, #31
   1c490:	orreq	r0, r0, #1
   1c494:	bx	lr
   1c498:	clz	r2, r1
   1c49c:	rsb	r2, r2, #31
   1c4a0:	cmp	ip, #0
   1c4a4:	lsr	r0, r3, r2
   1c4a8:	rsbmi	r0, r0, #0
   1c4ac:	bx	lr
   1c4b0:	cmp	r0, #0
   1c4b4:	mvngt	r0, #-2147483648	; 0x80000000
   1c4b8:	movlt	r0, #-2147483648	; 0x80000000
   1c4bc:	b	1c4e0 <argp_parse@@Base+0x4ad8>
   1c4c0:	cmp	r1, #0
   1c4c4:	beq	1c4b0 <argp_parse@@Base+0x4aa8>
   1c4c8:	push	{r0, r1, lr}
   1c4cc:	bl	1c2a8 <argp_parse@@Base+0x48a0>
   1c4d0:	pop	{r1, r2, lr}
   1c4d4:	mul	r3, r2, r0
   1c4d8:	sub	r1, r1, r3
   1c4dc:	bx	lr
   1c4e0:	push	{r1, lr}
   1c4e4:	mov	r0, #8
   1c4e8:	bl	10ff8 <raise@plt>
   1c4ec:	pop	{r1, pc}
   1c4f0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1c4f4:	mov	r7, r0
   1c4f8:	ldr	r6, [pc, #72]	; 1c548 <argp_parse@@Base+0x4b40>
   1c4fc:	ldr	r5, [pc, #72]	; 1c54c <argp_parse@@Base+0x4b44>
   1c500:	add	r6, pc, r6
   1c504:	add	r5, pc, r5
   1c508:	sub	r6, r6, r5
   1c50c:	mov	r8, r1
   1c510:	mov	r9, r2
   1c514:	bl	10fc0 <calloc@plt-0x20>
   1c518:	asrs	r6, r6, #2
   1c51c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c520:	mov	r4, #0
   1c524:	add	r4, r4, #1
   1c528:	ldr	r3, [r5], #4
   1c52c:	mov	r2, r9
   1c530:	mov	r1, r8
   1c534:	mov	r0, r7
   1c538:	blx	r3
   1c53c:	cmp	r6, r4
   1c540:	bne	1c524 <argp_parse@@Base+0x4b1c>
   1c544:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c548:	andeq	r1, r1, r0, lsl #20
   1c54c:	strdeq	r1, [r1], -r8
   1c550:	bx	lr

Disassembly of section .fini:

0001c554 <.fini>:
   1c554:	push	{r3, lr}
   1c558:	pop	{r3, pc}
