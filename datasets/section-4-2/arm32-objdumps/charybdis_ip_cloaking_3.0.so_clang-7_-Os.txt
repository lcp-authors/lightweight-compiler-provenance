
../repos/charybdis/extensions/.libs/ip_cloaking_3.0.so:     file format elf32-littlearm


Disassembly of section .init:

000006c4 <_init>:
 6c4:	push	{r3, lr}
 6c8:	bl	7a4 <call_weak_fn>
 6cc:	pop	{r3, pc}

Disassembly of section .plt:

000006d0 <.plt>:
 6d0:	push	{lr}		; (str lr, [sp, #-4]!)
 6d4:	ldr	lr, [pc, #4]	; 6e0 <.plt+0x10>
 6d8:	add	lr, pc, lr
 6dc:	ldr	pc, [lr, #8]!
 6e0:	.word	0x00011920

000006e4 <calloc@plt>:
 6e4:	add	ip, pc, #0, 12
 6e8:	add	ip, ip, #69632	; 0x11000
 6ec:	ldr	pc, [ip, #2336]!	; 0x920

000006f0 <strcmp@plt>:
 6f0:	add	ip, pc, #0, 12
 6f4:	add	ip, ip, #69632	; 0x11000
 6f8:	ldr	pc, [ip, #2328]!	; 0x918

000006fc <__cxa_finalize@plt>:
 6fc:	add	ip, pc, #0, 12
 700:	add	ip, ip, #69632	; 0x11000
 704:	ldr	pc, [ip, #2320]!	; 0x910

00000708 <rb_outofmemory@plt>:
 708:	add	ip, pc, #0, 12
 70c:	add	ip, ip, #69632	; 0x11000
 710:	ldr	pc, [ip, #2312]!	; 0x908

00000714 <find_umode_slot@plt>:
 714:	add	ip, pc, #0, 12
 718:	add	ip, ip, #69632	; 0x11000
 71c:	ldr	pc, [ip, #2304]!	; 0x900

00000720 <sendto_server@plt>:
 720:	add	ip, pc, #0, 12
 724:	add	ip, ip, #69632	; 0x11000
 728:	ldr	pc, [ip, #2296]!	; 0x8f8

0000072c <__gmon_start__@plt>:
 72c:	add	ip, pc, #0, 12
 730:	add	ip, ip, #69632	; 0x11000
 734:	ldr	pc, [ip, #2288]!	; 0x8f0

00000738 <__ctype_b_loc@plt>:
 738:	add	ip, pc, #0, 12
 73c:	add	ip, ip, #69632	; 0x11000
 740:	ldr	pc, [ip, #2280]!	; 0x8e8

00000744 <sendto_one_numeric@plt>:
 744:	add	ip, pc, #0, 12
 748:	add	ip, ip, #69632	; 0x11000
 74c:	ldr	pc, [ip, #2272]!	; 0x8e0

00000750 <snprintf@plt>:
 750:	add	ip, pc, #0, 12
 754:	add	ip, ip, #69632	; 0x11000
 758:	ldr	pc, [ip, #2264]!	; 0x8d8

0000075c <strncpy@plt>:
 75c:	add	ip, pc, #0, 12
 760:	add	ip, ip, #69632	; 0x11000
 764:	ldr	pc, [ip, #2256]!	; 0x8d0

00000768 <strrchr@plt>:
 768:	add	ip, pc, #0, 12
 76c:	add	ip, ip, #69632	; 0x11000
 770:	ldr	pc, [ip, #2248]!	; 0x8c8

00000774 <change_nick_user_host@plt>:
 774:	add	ip, pc, #0, 12
 778:	add	ip, ip, #69632	; 0x11000
 77c:	ldr	pc, [ip, #2240]!	; 0x8c0

00000780 <rb_strlcpy@plt>:
 780:	add	ip, pc, #0, 12
 784:	add	ip, ip, #69632	; 0x11000
 788:	ldr	pc, [ip, #2232]!	; 0x8b8

0000078c <irccmp@plt>:
 78c:	add	ip, pc, #0, 12
 790:	add	ip, ip, #69632	; 0x11000
 794:	ldr	pc, [ip, #2224]!	; 0x8b0

00000798 <construct_umodebuf@plt>:
 798:	add	ip, pc, #0, 12
 79c:	add	ip, ip, #69632	; 0x11000
 7a0:	ldr	pc, [ip, #2216]!	; 0x8a8

Disassembly of section .text:

000007a4 <call_weak_fn>:
 7a4:	ldr	r3, [pc, #20]	; 7c0 <call_weak_fn+0x1c>
 7a8:	ldr	r2, [pc, #20]	; 7c4 <call_weak_fn+0x20>
 7ac:	add	r3, pc, r3
 7b0:	ldr	r2, [r3, r2]
 7b4:	cmp	r2, #0
 7b8:	bxeq	lr
 7bc:	b	72c <__gmon_start__@plt>
 7c0:	.word	0x0001184c
 7c4:	.word	0x0000005c

000007c8 <deregister_tm_clones>:
 7c8:	ldr	r0, [pc, #44]	; 7fc <deregister_tm_clones+0x34>
 7cc:	ldr	r3, [pc, #44]	; 800 <deregister_tm_clones+0x38>
 7d0:	add	r0, pc, r0
 7d4:	add	r3, pc, r3
 7d8:	cmp	r3, r0
 7dc:	ldr	r3, [pc, #32]	; 804 <deregister_tm_clones+0x3c>
 7e0:	add	r3, pc, r3
 7e4:	bxeq	lr
 7e8:	ldr	r2, [pc, #24]	; 808 <deregister_tm_clones+0x40>
 7ec:	ldr	r3, [r3, r2]
 7f0:	cmp	r3, #0
 7f4:	bxeq	lr
 7f8:	bx	r3
 7fc:	.word	0x000118e4
 800:	.word	0x000118e0
 804:	.word	0x00011818
 808:	.word	0x00000050

0000080c <register_tm_clones>:
 80c:	ldr	r0, [pc, #56]	; 84c <register_tm_clones+0x40>
 810:	ldr	r3, [pc, #56]	; 850 <register_tm_clones+0x44>
 814:	add	r0, pc, r0
 818:	add	r3, pc, r3
 81c:	sub	r1, r3, r0
 820:	ldr	r3, [pc, #44]	; 854 <register_tm_clones+0x48>
 824:	asr	r1, r1, #2
 828:	add	r3, pc, r3
 82c:	add	r1, r1, r1, lsr #31
 830:	asrs	r1, r1, #1
 834:	bxeq	lr
 838:	ldr	r2, [pc, #24]	; 858 <register_tm_clones+0x4c>
 83c:	ldr	r3, [r3, r2]
 840:	cmp	r3, #0
 844:	bxeq	lr
 848:	bx	r3
 84c:	.word	0x000118a0
 850:	.word	0x0001189c
 854:	.word	0x000117d0
 858:	.word	0x00000064

0000085c <__do_global_dtors_aux>:
 85c:	ldr	r3, [pc, #76]	; 8b0 <__do_global_dtors_aux+0x54>
 860:	ldr	r2, [pc, #76]	; 8b4 <__do_global_dtors_aux+0x58>
 864:	add	r3, pc, r3
 868:	add	r2, pc, r2
 86c:	ldrb	r3, [r3]
 870:	cmp	r3, #0
 874:	bxne	lr
 878:	ldr	r3, [pc, #56]	; 8b8 <__do_global_dtors_aux+0x5c>
 87c:	push	{r4, lr}
 880:	ldr	r3, [r2, r3]
 884:	cmp	r3, #0
 888:	beq	898 <__do_global_dtors_aux+0x3c>
 88c:	ldr	r3, [pc, #40]	; 8bc <__do_global_dtors_aux+0x60>
 890:	ldr	r0, [pc, r3]
 894:	bl	6fc <__cxa_finalize@plt>
 898:	bl	7c8 <deregister_tm_clones>
 89c:	ldr	r3, [pc, #28]	; 8c0 <__do_global_dtors_aux+0x64>
 8a0:	mov	r2, #1
 8a4:	add	r3, pc, r3
 8a8:	strb	r2, [r3]
 8ac:	pop	{r4, pc}
 8b0:	.word	0x00011850
 8b4:	.word	0x00011790
 8b8:	.word	0x0000004c
 8bc:	.word	0x000117d4
 8c0:	.word	0x00011810

000008c4 <frame_dummy>:
 8c4:	b	80c <register_tm_clones>

000008c8 <check_umode_change>:
 8c8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
 8cc:	add	fp, sp, #24
 8d0:	ldr	r4, [r0]
 8d4:	ldr	r1, [r4, #64]	; 0x40
 8d8:	tst	r1, #8192	; 0x2000
 8dc:	beq	978 <check_umode_change+0xb0>
 8e0:	ldrh	r2, [r4, #80]	; 0x50
 8e4:	cmp	r2, #64	; 0x40
 8e8:	bne	978 <check_umode_change+0xb0>
 8ec:	ldr	r0, [r0, #4]
 8f0:	ldr	r7, [r4, #56]	; 0x38
 8f4:	ldr	r2, [pc, #208]	; 9cc <check_umode_change+0x104>
 8f8:	ldr	r2, [pc, r2]
 8fc:	eor	r0, r7, r0
 900:	ldr	r6, [r2, #416]	; 0x1a0
 904:	tst	r0, r6
 908:	beq	978 <check_umode_change+0xb0>
 90c:	tst	r6, r7
 910:	beq	958 <check_umode_change+0x90>
 914:	tst	r1, #16777216	; 0x1000000
 918:	bne	94c <check_umode_change+0x84>
 91c:	ldr	r0, [r4, #432]	; 0x1b0
 920:	ldr	r5, [r0, #432]	; 0x1b0
 924:	cmp	r5, #0
 928:	beq	94c <check_umode_change+0x84>
 92c:	add	r8, r4, #163	; 0xa3
 930:	tst	r1, #131072	; 0x20000
 934:	beq	98c <check_umode_change+0xc4>
 938:	mov	r0, r8
 93c:	mov	r1, r5
 940:	bl	6f0 <strcmp@plt>
 944:	cmp	r0, #0
 948:	beq	98c <check_umode_change+0xc4>
 94c:	bic	r0, r7, r6
 950:	str	r0, [r4, #56]	; 0x38
 954:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
 958:	ldr	r0, [r4, #432]	; 0x1b0
 95c:	ldr	r1, [r0, #432]	; 0x1b0
 960:	cmp	r1, #0
 964:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
 968:	add	r0, r4, #163	; 0xa3
 96c:	bl	6f0 <strcmp@plt>
 970:	cmp	r0, #0
 974:	beq	97c <check_umode_change+0xb4>
 978:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
 97c:	add	r1, r4, #227	; 0xe3
 980:	mov	r0, r4
 984:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
 988:	b	d68 <distribute_hostchange>
 98c:	mov	r0, r8
 990:	mov	r1, r5
 994:	bl	6f0 <strcmp@plt>
 998:	cmp	r0, #0
 99c:	beq	9b0 <check_umode_change+0xe8>
 9a0:	mov	r0, r4
 9a4:	mov	r1, r5
 9a8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
 9ac:	b	d68 <distribute_hostchange>
 9b0:	ldr	r2, [pc, #24]	; 9d0 <check_umode_change+0x108>
 9b4:	mov	r0, r4
 9b8:	mov	r1, #396	; 0x18c
 9bc:	mov	r3, r8
 9c0:	add	r2, pc, r2
 9c4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
 9c8:	b	744 <sendto_one_numeric@plt>
 9cc:	.word	0x00011758
 9d0:	.word	0x0000053d

000009d4 <check_new_user>:
 9d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 9d8:	add	fp, sp, #28
 9dc:	sub	sp, sp, #84	; 0x54
 9e0:	mov	r4, r0
 9e4:	ldrb	r0, [r0, #67]	; 0x43
 9e8:	tst	r0, #1
 9ec:	bne	abc <check_new_user+0xe8>
 9f0:	mov	r0, #1
 9f4:	mov	r1, #64	; 0x40
 9f8:	bl	6e4 <calloc@plt>
 9fc:	cmp	r0, #0
 a00:	beq	d04 <check_new_user+0x330>
 a04:	ldr	r1, [r4, #432]	; 0x1b0
 a08:	add	r9, r4, #227	; 0xe3
 a0c:	add	r8, r4, #64	; 0x40
 a10:	str	r0, [r1, #432]	; 0x1b0
 a14:	movw	r0, #291	; 0x123
 a18:	add	r1, r4, r0
 a1c:	mov	r0, r9
 a20:	bl	78c <irccmp@plt>
 a24:	ldr	r2, [r4, #432]	; 0x1b0
 a28:	ldrb	r1, [r4, #227]	; 0xe3
 a2c:	movw	r5, #18604	; 0x48ac
 a30:	cmp	r0, #0
 a34:	movt	r5, #35898	; 0x8c3a
 a38:	ldr	sl, [r2, #432]	; 0x1b0
 a3c:	beq	b90 <check_new_user+0x1bc>
 a40:	cmp	r1, #0
 a44:	beq	a64 <check_new_user+0x90>
 a48:	add	r2, r4, #228	; 0xe4
 a4c:	mov	r0, #1
 a50:	uxtab	r0, r0, r1
 a54:	ldrb	r1, [r2], #1
 a58:	cmp	r1, #0
 a5c:	bne	a50 <check_new_user+0x7c>
 a60:	mul	r5, r0, r5
 a64:	str	r8, [sp, #12]
 a68:	mov	r2, #63	; 0x3f
 a6c:	ldr	r0, [pc, #676]	; d18 <check_new_user+0x344>
 a70:	str	r9, [sp, #8]
 a74:	add	r0, pc, r0
 a78:	ldrb	r6, [r0]
 a7c:	cmp	r6, #0
 a80:	moveq	r1, #1
 a84:	movwne	r6, #3376	; 0xd30
 a88:	strbeq	r1, [r0]
 a8c:	mov	r0, sl
 a90:	mov	r1, r9
 a94:	moveq	r6, #3376	; 0xd30
 a98:	bl	75c <strncpy@plt>
 a9c:	ldr	r8, [pc, #632]	; d1c <check_new_user+0x348>
 aa0:	eor	r7, r6, r5
 aa4:	movw	r5, #60495	; 0xec4f
 aa8:	mov	r6, #26
 aac:	str	sl, [sp, #4]
 ab0:	movt	r5, #20164	; 0x4ec4
 ab4:	add	r8, pc, r8
 ab8:	b	b14 <check_new_user+0x140>
 abc:	ldr	r0, [r4, #56]	; 0x38
 ac0:	ldr	r1, [pc, #576]	; d08 <check_new_user+0x334>
 ac4:	ldr	r1, [pc, r1]
 ac8:	ldr	r1, [r1, #416]	; 0x1a0
 acc:	bic	r0, r0, r1
 ad0:	str	r0, [r4, #56]	; 0x38
 ad4:	b	ce8 <check_new_user+0x314>
 ad8:	bl	738 <__ctype_b_loc@plt>
 adc:	cmp	r9, #45	; 0x2d
 ae0:	beq	b10 <check_new_user+0x13c>
 ae4:	ldr	r0, [r0]
 ae8:	add	r0, r0, r9, lsl #1
 aec:	ldrh	r0, [r0]
 af0:	ands	r0, r0, #2048	; 0x800
 af4:	bne	b10 <check_new_user+0x13c>
 af8:	mul	r0, r7, r9
 afc:	umull	r1, r2, r0, r5
 b00:	lsr	r1, r2, #3
 b04:	mls	r0, r1, r6, r0
 b08:	ldrb	r0, [r8, r0]
 b0c:	strb	r0, [sl]
 b10:	add	sl, sl, #1
 b14:	ldrb	r9, [sl]
 b18:	cmp	r9, #0
 b1c:	cmpne	r9, #46	; 0x2e
 b20:	bne	ad8 <check_new_user+0x104>
 b24:	ldr	r0, [sp, #4]
 b28:	ldr	r8, [sp, #12]
 b2c:	ldr	r9, [sp, #8]
 b30:	ldrb	r6, [r0]
 b34:	cmp	r6, #0
 b38:	beq	c74 <check_new_user+0x2a0>
 b3c:	add	r5, r0, #1
 b40:	bl	738 <__ctype_b_loc@plt>
 b44:	movw	r1, #52429	; 0xcccd
 b48:	movt	r1, #52428	; 0xcccc
 b4c:	ldr	r3, [r0]
 b50:	uxtb	r2, r6
 b54:	add	r3, r3, r2, lsl #1
 b58:	ldrb	r3, [r3, #1]
 b5c:	tst	r3, #8
 b60:	beq	b80 <check_new_user+0x1ac>
 b64:	mul	r2, r7, r2
 b68:	umull	r3, r6, r2, r1
 b6c:	lsr	r3, r6, #3
 b70:	add	r3, r3, r3, lsl #2
 b74:	sub	r2, r2, r3, lsl #1
 b78:	orr	r2, r2, #48	; 0x30
 b7c:	strb	r2, [r5, #-1]
 b80:	ldrb	r6, [r5], #1
 b84:	cmp	r6, #0
 b88:	bne	b4c <check_new_user+0x178>
 b8c:	b	c74 <check_new_user+0x2a0>
 b90:	cmp	r1, #0
 b94:	beq	bb4 <check_new_user+0x1e0>
 b98:	add	r2, r4, #228	; 0xe4
 b9c:	mov	r0, #1
 ba0:	uxtab	r0, r0, r1
 ba4:	ldrb	r1, [r2], #1
 ba8:	cmp	r1, #0
 bac:	bne	ba0 <check_new_user+0x1cc>
 bb0:	mul	r5, r0, r5
 bb4:	ldr	r0, [pc, #336]	; d0c <check_new_user+0x338>
 bb8:	add	r7, sp, #16
 bbc:	vmov.i32	q8, #0	; 0x00000000
 bc0:	mov	r2, #63	; 0x3f
 bc4:	add	r0, pc, r0
 bc8:	ldrb	r6, [r0]
 bcc:	cmp	r6, #0
 bd0:	moveq	r1, #1
 bd4:	movwne	r6, #3376	; 0xd30
 bd8:	strbeq	r1, [r0]
 bdc:	mov	r0, #48	; 0x30
 be0:	mov	r1, r7
 be4:	moveq	r6, #3376	; 0xd30
 be8:	vst1.64	{d16-d17}, [r1], r0
 bec:	add	r0, r7, #32
 bf0:	vst1.64	{d16-d17}, [r0]
 bf4:	add	r0, r7, #16
 bf8:	vst1.64	{d16-d17}, [r1]
 bfc:	mov	r1, r9
 c00:	vst1.64	{d16-d17}, [r0]
 c04:	mov	r0, r7
 c08:	bl	75c <strncpy@plt>
 c0c:	mov	r0, r7
 c10:	mov	r1, #46	; 0x2e
 c14:	eor	r5, r6, r5
 c18:	bl	768 <strrchr@plt>
 c1c:	cmp	r0, #0
 c20:	beq	c3c <check_new_user+0x268>
 c24:	mov	r1, #0
 c28:	strb	r1, [r0]
 c2c:	str	r5, [sp]
 c30:	ldr	r2, [pc, #220]	; d14 <check_new_user+0x340>
 c34:	add	r2, pc, r2
 c38:	b	c64 <check_new_user+0x290>
 c3c:	add	r0, sp, #16
 c40:	mov	r1, #58	; 0x3a
 c44:	bl	768 <strrchr@plt>
 c48:	cmp	r0, #0
 c4c:	beq	cf0 <check_new_user+0x31c>
 c50:	mov	r1, #0
 c54:	strb	r1, [r0]
 c58:	str	r5, [sp]
 c5c:	ldr	r2, [pc, #172]	; d10 <check_new_user+0x33c>
 c60:	add	r2, pc, r2
 c64:	add	r3, sp, #16
 c68:	mov	r0, sl
 c6c:	mov	r1, #63	; 0x3f
 c70:	bl	750 <snprintf@plt>
 c74:	ldrb	r0, [r8, #2]
 c78:	tst	r0, #2
 c7c:	bne	c88 <check_new_user+0x2b4>
 c80:	ldr	r0, [r4, #56]	; 0x38
 c84:	b	ca0 <check_new_user+0x2cc>
 c88:	ldr	r0, [r4, #56]	; 0x38
 c8c:	ldr	r1, [pc, #140]	; d20 <check_new_user+0x34c>
 c90:	ldr	r1, [pc, r1]
 c94:	ldr	r1, [r1, #416]	; 0x1a0
 c98:	bic	r0, r0, r1
 c9c:	str	r0, [r4, #56]	; 0x38
 ca0:	ldr	r1, [pc, #124]	; d24 <check_new_user+0x350>
 ca4:	ldr	r1, [pc, r1]
 ca8:	ldr	r1, [r1, #416]	; 0x1a0
 cac:	tst	r1, r0
 cb0:	beq	ce8 <check_new_user+0x314>
 cb4:	ldr	r0, [r4, #432]	; 0x1b0
 cb8:	add	r4, r4, #163	; 0xa3
 cbc:	mov	r2, #64	; 0x40
 cc0:	ldr	r1, [r0, #432]	; 0x1b0
 cc4:	mov	r0, r4
 cc8:	bl	780 <rb_strlcpy@plt>
 ccc:	mov	r0, r4
 cd0:	mov	r1, r9
 cd4:	bl	78c <irccmp@plt>
 cd8:	cmp	r0, #0
 cdc:	ldrne	r0, [r8]
 ce0:	orrne	r0, r0, #131072	; 0x20000
 ce4:	strne	r0, [r8]
 ce8:	sub	sp, fp, #28
 cec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 cf0:	mov	r0, sl
 cf4:	mov	r1, r9
 cf8:	mov	r2, #63	; 0x3f
 cfc:	bl	75c <strncpy@plt>
 d00:	b	c74 <check_new_user+0x2a0>
 d04:	bl	708 <rb_outofmemory@plt>
 d08:	.word	0x0001158c
 d0c:	.word	0x000114f4
 d10:	.word	0x00000308
 d14:	.word	0x0000033d
 d18:	.word	0x00011644
 d1c:	.word	0x000004c6
 d20:	.word	0x000113c0
 d24:	.word	0x000113ac

00000d28 <_modinit>:
 d28:	push	{fp, lr}
 d2c:	mov	fp, sp
 d30:	bl	714 <find_umode_slot@plt>
 d34:	ldr	r1, [pc, #16]	; d4c <_modinit+0x24>
 d38:	ldr	r1, [pc, r1]
 d3c:	str	r0, [r1, #416]	; 0x1a0
 d40:	bl	798 <construct_umodebuf@plt>
 d44:	mov	r0, #0
 d48:	pop	{fp, pc}
 d4c:	.word	0x00011318

00000d50 <_moddeinit>:
 d50:	ldr	r0, [pc, #12]	; d64 <_moddeinit+0x14>
 d54:	mov	r1, #0
 d58:	ldr	r0, [pc, r0]
 d5c:	str	r1, [r0, #416]	; 0x1a0
 d60:	b	798 <construct_umodebuf@plt>
 d64:	.word	0x000112f8

00000d68 <distribute_hostchange>:
 d68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 d6c:	add	fp, sp, #28
 d70:	sub	sp, sp, #20
 d74:	mov	r7, r0
 d78:	add	r0, r0, #227	; 0xe3
 d7c:	mov	r5, r1
 d80:	cmp	r0, r1
 d84:	str	r0, [sp, #16]
 d88:	beq	d98 <distribute_hostchange+0x30>
 d8c:	ldr	r2, [pc, #296]	; ebc <distribute_hostchange+0x154>
 d90:	add	r2, pc, r2
 d94:	b	da0 <distribute_hostchange+0x38>
 d98:	ldr	r2, [pc, #288]	; ec0 <distribute_hostchange+0x158>
 d9c:	add	r2, pc, r2
 da0:	mov	r0, r7
 da4:	mov	r1, #396	; 0x18c
 da8:	mov	r3, r5
 dac:	bl	744 <sendto_one_numeric@plt>
 db0:	mov	r4, r7
 db4:	add	r9, r7, #88	; 0x58
 db8:	ldrb	r0, [r4, #396]!	; 0x18c
 dbc:	ldr	r1, [pc, #256]	; ec4 <distribute_hostchange+0x15c>
 dc0:	ldr	r1, [pc, r1]
 dc4:	cmp	r0, #0
 dc8:	mov	r0, r4
 dcc:	moveq	r0, r9
 dd0:	ldr	r1, [r1]
 dd4:	ldr	r6, [pc, #236]	; ec8 <distribute_hostchange+0x160>
 dd8:	ldr	r6, [pc, r6]
 ddc:	ldrb	r2, [r6, #396]!	; 0x18c
 de0:	ldr	r8, [pc, #228]	; ecc <distribute_hostchange+0x164>
 de4:	ldr	r8, [pc, r8]
 de8:	cmp	r2, #0
 dec:	sub	sl, r6, #308	; 0x134
 df0:	mov	r2, r6
 df4:	moveq	r2, sl
 df8:	ldr	r3, [r8]
 dfc:	ldr	ip, [pc, #204]	; ed0 <distribute_hostchange+0x168>
 e00:	str	r2, [sp, #4]
 e04:	str	r0, [sp, #8]
 e08:	mov	r0, #0
 e0c:	str	r5, [sp, #12]
 e10:	orr	r2, r1, r3
 e14:	add	ip, pc, ip
 e18:	mov	r1, #0
 e1c:	mov	r3, #0
 e20:	str	ip, [sp]
 e24:	bl	720 <sendto_server@plt>
 e28:	ldr	r3, [r8]
 e2c:	ldr	r0, [pc, #160]	; ed4 <distribute_hostchange+0x16c>
 e30:	ldr	r0, [pc, r0]
 e34:	ldrb	r1, [r4]
 e38:	ldr	r2, [r0]
 e3c:	ldrb	r0, [r6]
 e40:	ldr	ip, [pc, #144]	; ed8 <distribute_hostchange+0x170>
 e44:	cmp	r1, #0
 e48:	mov	r1, #0
 e4c:	str	r5, [sp, #12]
 e50:	moveq	r4, r9
 e54:	str	r4, [sp, #8]
 e58:	cmp	r0, #0
 e5c:	add	ip, pc, ip
 e60:	mov	r0, #0
 e64:	moveq	r6, sl
 e68:	str	ip, [sp]
 e6c:	str	r6, [sp, #4]
 e70:	bl	720 <sendto_server@plt>
 e74:	ldr	r0, [pc, #96]	; edc <distribute_hostchange+0x174>
 e78:	mov	r1, #0
 e7c:	add	r2, r7, #152	; 0x98
 e80:	mov	r3, r5
 e84:	str	r1, [sp]
 e88:	mov	r1, r9
 e8c:	add	r0, pc, r0
 e90:	str	r0, [sp, #4]
 e94:	mov	r0, r7
 e98:	bl	774 <change_nick_user_host@plt>
 e9c:	ldr	r0, [r7, #64]	; 0x40
 ea0:	ldr	r2, [sp, #16]
 ea4:	bic	r1, r0, #131072	; 0x20000
 ea8:	cmp	r2, r5
 eac:	orrne	r1, r0, #131072	; 0x20000
 eb0:	str	r1, [r7, #64]	; 0x40
 eb4:	sub	sp, fp, #28
 eb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 ebc:	.word	0x0000016d
 ec0:	.word	0x0000017d
 ec4:	.word	0x0001128c
 ec8:	.word	0x00011288
 ecc:	.word	0x00011274
 ed0:	.word	0x00000118
 ed4:	.word	0x0001121c
 ed8:	.word	0x000000e3
 edc:	.word	0x000000ce

Disassembly of section .fini:

00000ee0 <_fini>:
 ee0:	push	{r3, lr}
 ee4:	pop	{r3, pc}
