
../repos/coreutils/src/comm:     file format elf32-littlearm


Disassembly of section .init:

00010cac <.init>:
   10cac:	push	{r3, lr}
   10cb0:	bl	117f0 <close@plt+0x8b4>
   10cb4:	pop	{r3, pc}

Disassembly of section .plt:

00010cb8 <fdopen@plt-0x14>:
   10cb8:	push	{lr}		; (str lr, [sp, #-4]!)
   10cbc:	ldr	lr, [pc, #4]	; 10cc8 <fdopen@plt-0x4>
   10cc0:	add	lr, pc, lr
   10cc4:	ldr	pc, [lr, #8]!
   10cc8:	andeq	r5, r1, r8, lsr r3

00010ccc <fdopen@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #86016	; 0x15000
   10cd4:	ldr	pc, [ip, #824]!	; 0x338

00010cd8 <calloc@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #86016	; 0x15000
   10ce0:	ldr	pc, [ip, #816]!	; 0x330

00010ce4 <fputs_unlocked@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #86016	; 0x15000
   10cec:	ldr	pc, [ip, #808]!	; 0x328

00010cf0 <raise@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #86016	; 0x15000
   10cf8:	ldr	pc, [ip, #800]!	; 0x320

00010cfc <strcmp@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #86016	; 0x15000
   10d04:	ldr	pc, [ip, #792]!	; 0x318

00010d08 <posix_fadvise64@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #86016	; 0x15000
   10d10:	ldr	pc, [ip, #784]!	; 0x310

00010d14 <fflush@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #86016	; 0x15000
   10d1c:	ldr	pc, [ip, #776]!	; 0x308

00010d20 <free@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #86016	; 0x15000
   10d28:	ldr	pc, [ip, #768]!	; 0x300

00010d2c <_exit@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #86016	; 0x15000
   10d34:	ldr	pc, [ip, #760]!	; 0x2f8

00010d38 <memcpy@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #86016	; 0x15000
   10d40:	ldr	pc, [ip, #752]!	; 0x2f0

00010d44 <mbsinit@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #86016	; 0x15000
   10d4c:	ldr	pc, [ip, #744]!	; 0x2e8

00010d50 <fwrite_unlocked@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #86016	; 0x15000
   10d58:	ldr	pc, [ip, #736]!	; 0x2e0

00010d5c <memcmp@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #86016	; 0x15000
   10d64:	ldr	pc, [ip, #728]!	; 0x2d8

00010d68 <fputc_unlocked@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #86016	; 0x15000
   10d70:	ldr	pc, [ip, #720]!	; 0x2d0

00010d74 <getc_unlocked@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #86016	; 0x15000
   10d7c:	ldr	pc, [ip, #712]!	; 0x2c8

00010d80 <dcgettext@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #86016	; 0x15000
   10d88:	ldr	pc, [ip, #704]!	; 0x2c0

00010d8c <realloc@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #86016	; 0x15000
   10d94:	ldr	pc, [ip, #696]!	; 0x2b8

00010d98 <textdomain@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #86016	; 0x15000
   10da0:	ldr	pc, [ip, #688]!	; 0x2b0

00010da4 <iswprint@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #86016	; 0x15000
   10dac:	ldr	pc, [ip, #680]!	; 0x2a8

00010db0 <lseek64@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #86016	; 0x15000
   10db8:	ldr	pc, [ip, #672]!	; 0x2a0

00010dbc <__ctype_get_mb_cur_max@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #86016	; 0x15000
   10dc4:	ldr	pc, [ip, #664]!	; 0x298

00010dc8 <__fpending@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #86016	; 0x15000
   10dd0:	ldr	pc, [ip, #656]!	; 0x290

00010dd4 <ferror_unlocked@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #86016	; 0x15000
   10ddc:	ldr	pc, [ip, #648]!	; 0x288

00010de0 <mbrtowc@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #86016	; 0x15000
   10de8:	ldr	pc, [ip, #640]!	; 0x280

00010dec <error@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #86016	; 0x15000
   10df4:	ldr	pc, [ip, #632]!	; 0x278

00010df8 <strcoll@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #86016	; 0x15000
   10e00:	ldr	pc, [ip, #624]!	; 0x270

00010e04 <malloc@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #86016	; 0x15000
   10e0c:	ldr	pc, [ip, #616]!	; 0x268

00010e10 <__libc_start_main@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #86016	; 0x15000
   10e18:	ldr	pc, [ip, #608]!	; 0x260

00010e1c <__freading@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #86016	; 0x15000
   10e24:	ldr	pc, [ip, #600]!	; 0x258

00010e28 <__gmon_start__@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #86016	; 0x15000
   10e30:	ldr	pc, [ip, #592]!	; 0x250

00010e34 <getopt_long@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #86016	; 0x15000
   10e3c:	ldr	pc, [ip, #584]!	; 0x248

00010e40 <__ctype_b_loc@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #86016	; 0x15000
   10e48:	ldr	pc, [ip, #576]!	; 0x240

00010e4c <exit@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #86016	; 0x15000
   10e54:	ldr	pc, [ip, #568]!	; 0x238

00010e58 <strlen@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #86016	; 0x15000
   10e60:	ldr	pc, [ip, #560]!	; 0x230

00010e64 <__errno_location@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #86016	; 0x15000
   10e6c:	ldr	pc, [ip, #552]!	; 0x228

00010e70 <__cxa_atexit@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #86016	; 0x15000
   10e78:	ldr	pc, [ip, #544]!	; 0x220

00010e7c <memset@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #86016	; 0x15000
   10e84:	ldr	pc, [ip, #536]!	; 0x218

00010e88 <__printf_chk@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #86016	; 0x15000
   10e90:	ldr	pc, [ip, #528]!	; 0x210

00010e94 <fileno@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #86016	; 0x15000
   10e9c:	ldr	pc, [ip, #520]!	; 0x208

00010ea0 <__fprintf_chk@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #86016	; 0x15000
   10ea8:	ldr	pc, [ip, #512]!	; 0x200

00010eac <fclose@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #86016	; 0x15000
   10eb4:	ldr	pc, [ip, #504]!	; 0x1f8

00010eb8 <fseeko64@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #86016	; 0x15000
   10ec0:	ldr	pc, [ip, #496]!	; 0x1f0

00010ec4 <fcntl64@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #86016	; 0x15000
   10ecc:	ldr	pc, [ip, #488]!	; 0x1e8

00010ed0 <setlocale@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #86016	; 0x15000
   10ed8:	ldr	pc, [ip, #480]!	; 0x1e0

00010edc <strrchr@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #86016	; 0x15000
   10ee4:	ldr	pc, [ip, #472]!	; 0x1d8

00010ee8 <nl_langinfo@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #86016	; 0x15000
   10ef0:	ldr	pc, [ip, #464]!	; 0x1d0

00010ef4 <fopen64@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #86016	; 0x15000
   10efc:	ldr	pc, [ip, #456]!	; 0x1c8

00010f00 <bindtextdomain@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #86016	; 0x15000
   10f08:	ldr	pc, [ip, #448]!	; 0x1c0

00010f0c <fputs@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #86016	; 0x15000
   10f14:	ldr	pc, [ip, #440]!	; 0x1b8

00010f18 <strncmp@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #86016	; 0x15000
   10f20:	ldr	pc, [ip, #432]!	; 0x1b0

00010f24 <abort@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #86016	; 0x15000
   10f2c:	ldr	pc, [ip, #424]!	; 0x1a8

00010f30 <feof_unlocked@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #86016	; 0x15000
   10f38:	ldr	pc, [ip, #416]!	; 0x1a0

00010f3c <close@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #86016	; 0x15000
   10f44:	ldr	pc, [ip, #408]!	; 0x198

Disassembly of section .text:

00010f48 <.text>:
   10f48:	push	{r4, lr}
   10f4c:	bl	10e64 <__errno_location@plt>
   10f50:	mov	r3, #12
   10f54:	str	r3, [r0]
   10f58:	mov	r0, #0
   10f5c:	pop	{r4, pc}
   10f60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f64:	mov	r6, r0
   10f68:	sub	sp, sp, #308	; 0x134
   10f6c:	mov	r7, r1
   10f70:	ldr	r0, [r1]
   10f74:	bl	121dc <close@plt+0x12a0>
   10f78:	ldr	r4, [pc, #1992]	; 11748 <close@plt+0x80c>
   10f7c:	mov	r0, #6
   10f80:	ldr	r1, [pc, #1988]	; 1174c <close@plt+0x810>
   10f84:	bl	10ed0 <setlocale@plt>
   10f88:	ldr	r1, [pc, #1984]	; 11750 <close@plt+0x814>
   10f8c:	ldr	r0, [pc, #1984]	; 11754 <close@plt+0x818>
   10f90:	bl	10f00 <bindtextdomain@plt>
   10f94:	ldr	r0, [pc, #1976]	; 11754 <close@plt+0x818>
   10f98:	bl	10d98 <textdomain@plt>
   10f9c:	mov	r0, #3
   10fa0:	ldr	r9, [pc, #1968]	; 11758 <close@plt+0x81c>
   10fa4:	bl	11fe0 <close@plt+0x10a4>
   10fa8:	ldr	r8, [pc, #1964]	; 1175c <close@plt+0x820>
   10fac:	strb	r0, [r4, #7]
   10fb0:	ldr	sl, [pc, #1960]	; 11760 <close@plt+0x824>
   10fb4:	ldr	r0, [pc, #1960]	; 11764 <close@plt+0x828>
   10fb8:	bl	14918 <close@plt+0x39dc>
   10fbc:	mov	r3, #1
   10fc0:	strb	r3, [r4, #8]
   10fc4:	strb	r3, [r4, #9]
   10fc8:	strb	r3, [r4, #10]
   10fcc:	mov	r3, #0
   10fd0:	str	r3, [r4]
   10fd4:	strb	r3, [r4, #4]
   10fd8:	strb	r3, [r4, #5]
   10fdc:	strb	r3, [r4, #6]
   10fe0:	strb	r3, [r4, #11]
   10fe4:	mov	r5, #0
   10fe8:	mov	r3, r9
   10fec:	mov	r2, r8
   10ff0:	mov	r1, r7
   10ff4:	mov	r0, r6
   10ff8:	str	r5, [sp]
   10ffc:	bl	10e34 <getopt_long@plt>
   11000:	cmn	r0, #1
   11004:	bne	11058 <close@plt+0x11c>
   11008:	ldr	r3, [r4, #12]
   1100c:	cmp	r3, r5
   11010:	moveq	r3, #1
   11014:	streq	r3, [r4, #12]
   11018:	ldr	r4, [pc, #1864]	; 11768 <close@plt+0x82c>
   1101c:	ldr	r3, [r4]
   11020:	sub	r2, r6, r3
   11024:	cmp	r2, #1
   11028:	bgt	111ec <close@plt+0x2b0>
   1102c:	cmp	r3, r6
   11030:	mov	r2, #5
   11034:	blt	111b8 <close@plt+0x27c>
   11038:	ldr	r1, [pc, #1836]	; 1176c <close@plt+0x830>
   1103c:	mov	r0, #0
   11040:	bl	10d80 <dcgettext@plt>
   11044:	mov	r1, #0
   11048:	mov	r2, r0
   1104c:	mov	r0, r1
   11050:	bl	10dec <error@plt>
   11054:	b	11078 <close@plt+0x13c>
   11058:	cmp	r0, #51	; 0x33
   1105c:	beq	110ec <close@plt+0x1b0>
   11060:	bgt	11098 <close@plt+0x15c>
   11064:	cmn	r0, #2
   11068:	beq	1117c <close@plt+0x240>
   1106c:	bgt	11080 <close@plt+0x144>
   11070:	cmn	r0, #3
   11074:	beq	11184 <close@plt+0x248>
   11078:	mov	r0, #1
   1107c:	b	11180 <close@plt+0x244>
   11080:	cmp	r0, #49	; 0x31
   11084:	beq	110e4 <close@plt+0x1a8>
   11088:	cmp	r0, #50	; 0x32
   1108c:	bne	11078 <close@plt+0x13c>
   11090:	strb	r5, [r4, #9]
   11094:	b	10fe4 <close@plt+0xa8>
   11098:	movw	r3, #257	; 0x101
   1109c:	cmp	r0, r3
   110a0:	beq	11100 <close@plt+0x1c4>
   110a4:	bgt	110c0 <close@plt+0x184>
   110a8:	cmp	r0, #122	; 0x7a
   110ac:	beq	110f4 <close@plt+0x1b8>
   110b0:	cmp	r0, #256	; 0x100
   110b4:	bne	11078 <close@plt+0x13c>
   110b8:	mov	r3, #1
   110bc:	b	11104 <close@plt+0x1c8>
   110c0:	movw	r3, #258	; 0x102
   110c4:	cmp	r0, r3
   110c8:	beq	1110c <close@plt+0x1d0>
   110cc:	movw	r3, #259	; 0x103
   110d0:	cmp	r0, r3
   110d4:	bne	11078 <close@plt+0x13c>
   110d8:	mov	r3, #1
   110dc:	strb	r3, [r4, #11]
   110e0:	b	10fe4 <close@plt+0xa8>
   110e4:	strb	r5, [r4, #8]
   110e8:	b	10fe4 <close@plt+0xa8>
   110ec:	strb	r5, [r4, #10]
   110f0:	b	10fe4 <close@plt+0xa8>
   110f4:	ldr	r3, [pc, #1652]	; 11770 <close@plt+0x834>
   110f8:	strb	r5, [r3]
   110fc:	b	10fe4 <close@plt+0xa8>
   11100:	mov	r3, #2
   11104:	str	r3, [r4]
   11108:	b	10fe4 <close@plt+0xa8>
   1110c:	ldr	r3, [r4, #12]
   11110:	ldr	fp, [sl]
   11114:	cmp	r3, #0
   11118:	ldr	r3, [pc, #1616]	; 11770 <close@plt+0x834>
   1111c:	beq	11158 <close@plt+0x21c>
   11120:	mov	r1, fp
   11124:	ldr	r0, [r3, #4]
   11128:	bl	10cfc <strcmp@plt>
   1112c:	cmp	r0, #0
   11130:	ldr	r3, [pc, #1592]	; 11770 <close@plt+0x834>
   11134:	beq	11158 <close@plt+0x21c>
   11138:	ldr	r1, [pc, #1588]	; 11774 <close@plt+0x838>
   1113c:	mov	r2, #5
   11140:	mov	r0, #0
   11144:	bl	10d80 <dcgettext@plt>
   11148:	mov	r2, r0
   1114c:	mov	r1, #0
   11150:	mov	r0, #1
   11154:	bl	10dec <error@plt>
   11158:	str	fp, [r3, #4]
   1115c:	ldrb	r3, [fp]
   11160:	cmp	r3, #0
   11164:	moveq	r0, #1
   11168:	beq	11174 <close@plt+0x238>
   1116c:	mov	r0, fp
   11170:	bl	10e58 <strlen@plt>
   11174:	str	r0, [r4, #12]
   11178:	b	10fe4 <close@plt+0xa8>
   1117c:	mov	r0, r5
   11180:	bl	1196c <close@plt+0xa30>
   11184:	ldr	r3, [pc, #1516]	; 11778 <close@plt+0x83c>
   11188:	ldr	r0, [pc, #1516]	; 1177c <close@plt+0x840>
   1118c:	ldr	r2, [pc, #1516]	; 11780 <close@plt+0x844>
   11190:	stmib	sp, {r3, r5}
   11194:	ldr	r3, [pc, #1512]	; 11784 <close@plt+0x848>
   11198:	ldr	r1, [pc, #1512]	; 11788 <close@plt+0x84c>
   1119c:	str	r3, [sp]
   111a0:	ldr	r3, [pc, #1508]	; 1178c <close@plt+0x850>
   111a4:	ldr	r0, [r0]
   111a8:	ldr	r3, [r3]
   111ac:	bl	13cb8 <close@plt+0x2d7c>
   111b0:	mov	r0, r5
   111b4:	bl	10e4c <exit@plt>
   111b8:	ldr	r1, [pc, #1488]	; 11790 <close@plt+0x854>
   111bc:	mov	r0, #0
   111c0:	sub	r6, r6, #-1073741823	; 0xc0000001
   111c4:	bl	10d80 <dcgettext@plt>
   111c8:	mov	r4, r0
   111cc:	ldr	r0, [r7, r6, lsl #2]
   111d0:	bl	137dc <close@plt+0x28a0>
   111d4:	mov	r3, r0
   111d8:	mov	r2, r4
   111dc:	mov	r1, #0
   111e0:	mov	r0, r1
   111e4:	bl	10dec <error@plt>
   111e8:	b	11078 <close@plt+0x13c>
   111ec:	cmp	r2, #2
   111f0:	beq	11224 <close@plt+0x2e8>
   111f4:	mov	r2, #5
   111f8:	ldr	r1, [pc, #1428]	; 11794 <close@plt+0x858>
   111fc:	mov	r0, #0
   11200:	bl	10d80 <dcgettext@plt>
   11204:	ldr	r3, [r4]
   11208:	mov	r5, r0
   1120c:	add	r3, r3, #2
   11210:	ldr	r0, [r7, r3, lsl #2]
   11214:	bl	137dc <close@plt+0x28a0>
   11218:	mov	r3, r0
   1121c:	mov	r2, r5
   11220:	b	111dc <close@plt+0x2a0>
   11224:	add	r3, r7, r3, lsl #2
   11228:	add	r8, sp, #208	; 0xd0
   1122c:	add	r6, sp, #152	; 0x98
   11230:	mov	r5, #0
   11234:	mov	r9, r3
   11238:	str	r3, [sp, #28]
   1123c:	lsl	r7, r5, #4
   11240:	add	r3, sp, #176	; 0xb0
   11244:	mov	r4, r8
   11248:	mov	fp, #0
   1124c:	add	sl, r7, r3
   11250:	mov	r0, r4
   11254:	add	fp, fp, #1
   11258:	bl	120a4 <close@plt+0x1168>
   1125c:	cmp	fp, #4
   11260:	str	r4, [sl], #4
   11264:	add	r4, r4, #12
   11268:	bne	11250 <close@plt+0x314>
   1126c:	mov	sl, r9
   11270:	ldr	r4, [r9], #4
   11274:	mov	r3, #0
   11278:	ldr	r1, [pc, #1304]	; 11798 <close@plt+0x85c>
   1127c:	str	r3, [r6]
   11280:	str	r3, [r6, #4]
   11284:	mov	r0, r4
   11288:	str	r3, [r6, #8]
   1128c:	bl	10cfc <strcmp@plt>
   11290:	cmp	r0, #0
   11294:	ldreq	r3, [pc, #1280]	; 1179c <close@plt+0x860>
   11298:	ldreq	r4, [r3]
   1129c:	beq	112b0 <close@plt+0x374>
   112a0:	mov	r0, r4
   112a4:	ldr	r1, [pc, #1268]	; 117a0 <close@plt+0x864>
   112a8:	bl	11eb4 <close@plt+0xf78>
   112ac:	mov	r4, r0
   112b0:	add	r3, sp, #72	; 0x48
   112b4:	cmp	r4, #0
   112b8:	str	r4, [r3, r5, lsl #2]
   112bc:	bne	112ec <close@plt+0x3b0>
   112c0:	bl	10e64 <__errno_location@plt>
   112c4:	ldr	r5, [r0]
   112c8:	mov	r1, #3
   112cc:	mov	r0, r4
   112d0:	ldr	r2, [sl]
   112d4:	bl	1369c <close@plt+0x2760>
   112d8:	ldr	r2, [pc, #1220]	; 117a4 <close@plt+0x868>
   112dc:	mov	r3, r0
   112e0:	mov	r1, r5
   112e4:	mov	r0, #1
   112e8:	bl	10dec <error@plt>
   112ec:	ldr	fp, [pc, #1148]	; 11770 <close@plt+0x834>
   112f0:	mov	r1, #2
   112f4:	mov	r0, r4
   112f8:	bl	11d8c <close@plt+0xe50>
   112fc:	add	r3, sp, #304	; 0x130
   11300:	mov	r1, r4
   11304:	add	r7, r3, r7
   11308:	ldr	r0, [r7, #-128]	; 0xffffff80
   1130c:	ldrb	r2, [fp]
   11310:	bl	120b8 <close@plt+0x117c>
   11314:	add	r2, sp, #64	; 0x40
   11318:	str	r0, [r2, r5, lsl #2]
   1131c:	mov	r0, r4
   11320:	bl	10dd4 <ferror_unlocked@plt>
   11324:	subs	r3, r0, #0
   11328:	str	r3, [sp, #52]	; 0x34
   1132c:	beq	11358 <close@plt+0x41c>
   11330:	bl	10e64 <__errno_location@plt>
   11334:	ldr	r4, [r0]
   11338:	ldr	r2, [sl]
   1133c:	mov	r1, #3
   11340:	mov	r0, #0
   11344:	bl	1369c <close@plt+0x2760>
   11348:	mov	r3, r0
   1134c:	ldr	r2, [pc, #1104]	; 117a4 <close@plt+0x868>
   11350:	mov	r1, r4
   11354:	b	112e4 <close@plt+0x3a8>
   11358:	cmp	r5, #1
   1135c:	add	r6, r6, #12
   11360:	add	r8, r8, #48	; 0x30
   11364:	beq	11704 <close@plt+0x7c8>
   11368:	mov	r5, #1
   1136c:	b	1123c <close@plt+0x300>
   11370:	mov	r3, #0
   11374:	cmp	r7, r3
   11378:	strh	r3, [sp, #128]	; 0x80
   1137c:	beq	1147c <close@plt+0x540>
   11380:	cmp	r6, r3
   11384:	beq	114b8 <close@plt+0x57c>
   11388:	ldrb	r3, [r4, #7]
   1138c:	ldr	sl, [r6, #4]
   11390:	ldr	r8, [r7, #4]
   11394:	cmp	r3, #0
   11398:	ldr	r1, [r6, #8]
   1139c:	ldr	r0, [r7, #8]
   113a0:	beq	1144c <close@plt+0x510>
   113a4:	mov	r2, r1
   113a8:	sub	r3, sl, #1
   113ac:	sub	r1, r8, #1
   113b0:	bl	14144 <close@plt+0x3208>
   113b4:	mov	r5, r0
   113b8:	cmp	r5, #0
   113bc:	bne	115b4 <close@plt+0x678>
   113c0:	ldr	r3, [sp, #32]
   113c4:	adds	r3, r3, #1
   113c8:	adc	r9, r9, #0
   113cc:	str	r3, [sp, #32]
   113d0:	ldrb	r3, [r4, #10]
   113d4:	cmp	r3, #0
   113d8:	beq	11438 <close@plt+0x4fc>
   113dc:	ldr	r3, [pc, #920]	; 1177c <close@plt+0x840>
   113e0:	ldr	r7, [r3]
   113e4:	ldrb	r3, [r4, #8]
   113e8:	cmp	r3, #0
   113ec:	beq	11404 <close@plt+0x4c8>
   113f0:	mov	r3, r7
   113f4:	mov	r1, #1
   113f8:	ldr	r0, [fp, #4]
   113fc:	ldr	r2, [r4, #12]
   11400:	bl	10d50 <fwrite_unlocked@plt>
   11404:	ldrb	r3, [r4, #9]
   11408:	cmp	r3, #0
   1140c:	beq	11424 <close@plt+0x4e8>
   11410:	mov	r3, r7
   11414:	mov	r1, #1
   11418:	ldr	r0, [fp, #4]
   1141c:	ldr	r2, [r4, #12]
   11420:	bl	10d50 <fwrite_unlocked@plt>
   11424:	mov	r3, r7
   11428:	mov	r1, #1
   1142c:	ldr	r2, [r6, #4]
   11430:	ldr	r0, [r6, #8]
   11434:	bl	10d50 <fwrite_unlocked@plt>
   11438:	mov	r3, #1
   1143c:	cmp	r5, #0
   11440:	strb	r3, [sp, #129]	; 0x81
   11444:	bne	11504 <close@plt+0x5c8>
   11448:	b	114fc <close@plt+0x5c0>
   1144c:	cmp	sl, r8
   11450:	movlt	r2, sl
   11454:	movge	r2, r8
   11458:	sub	r2, r2, #1
   1145c:	bl	10d5c <memcmp@plt>
   11460:	subs	r5, r0, #0
   11464:	bne	115b4 <close@plt+0x678>
   11468:	cmp	sl, r8
   1146c:	bgt	114b8 <close@plt+0x57c>
   11470:	movne	r5, #1
   11474:	moveq	r5, #0
   11478:	b	113b8 <close@plt+0x47c>
   1147c:	mov	r5, #1
   11480:	strb	r5, [r4, #4]
   11484:	ldr	r3, [sp, #44]	; 0x2c
   11488:	adds	r3, r3, #1
   1148c:	str	r3, [sp, #44]	; 0x2c
   11490:	ldr	r3, [sp, #48]	; 0x30
   11494:	adc	r3, r3, #0
   11498:	str	r3, [sp, #48]	; 0x30
   1149c:	ldrb	r3, [r4, #9]
   114a0:	cmp	r3, #0
   114a4:	beq	11438 <close@plt+0x4fc>
   114a8:	ldr	r3, [pc, #716]	; 1177c <close@plt+0x840>
   114ac:	ldr	r7, [r3]
   114b0:	ldrb	r3, [r4, #8]
   114b4:	b	11408 <close@plt+0x4cc>
   114b8:	mov	r3, #1
   114bc:	strb	r3, [r4, #4]
   114c0:	ldr	r3, [sp, #36]	; 0x24
   114c4:	adds	r3, r3, #1
   114c8:	str	r3, [sp, #36]	; 0x24
   114cc:	ldr	r3, [sp, #40]	; 0x28
   114d0:	adc	r3, r3, #0
   114d4:	str	r3, [sp, #40]	; 0x28
   114d8:	ldrb	r3, [r4, #8]
   114dc:	cmp	r3, #0
   114e0:	beq	114fc <close@plt+0x5c0>
   114e4:	ldr	r3, [pc, #656]	; 1177c <close@plt+0x840>
   114e8:	mov	r1, #1
   114ec:	ldr	r2, [r7, #4]
   114f0:	ldr	r0, [r7, #8]
   114f4:	ldr	r3, [r3]
   114f8:	bl	10d50 <fwrite_unlocked@plt>
   114fc:	mov	r3, #1
   11500:	strb	r3, [sp, #128]	; 0x80
   11504:	add	sl, sp, #128	; 0x80
   11508:	add	r7, sp, #152	; 0x98
   1150c:	mov	r6, #0
   11510:	ldrb	r3, [sl], #1
   11514:	cmp	r3, #0
   11518:	beq	11608 <close@plt+0x6cc>
   1151c:	ldm	r7, {r3, r8}
   11520:	lsl	r5, r6, #2
   11524:	add	r2, r3, #1
   11528:	str	r3, [sp, #60]	; 0x3c
   1152c:	and	r2, r2, #3
   11530:	strd	r2, [r7]
   11534:	add	r3, sp, #72	; 0x48
   11538:	add	r2, r5, r2
   1153c:	ldr	r3, [r3, r6, lsl #2]
   11540:	str	r8, [r7, #8]
   11544:	str	r3, [sp, #56]	; 0x38
   11548:	add	r3, sp, #304	; 0x130
   1154c:	add	r0, r3, r2, lsl #2
   11550:	ldrb	r2, [fp]
   11554:	ldr	r0, [r0, #-128]	; 0xffffff80
   11558:	ldr	r1, [sp, #56]	; 0x38
   1155c:	bl	120b8 <close@plt+0x117c>
   11560:	add	r3, sp, #64	; 0x40
   11564:	cmp	r0, #0
   11568:	mov	r1, r0
   1156c:	str	r0, [r3, r6, lsl #2]
   11570:	ldr	r3, [sp, #60]	; 0x3c
   11574:	beq	115d0 <close@plt+0x694>
   11578:	add	r5, r5, r3
   1157c:	add	r3, sp, #304	; 0x130
   11580:	add	r5, r3, r5, lsl #2
   11584:	add	r2, r6, #1
   11588:	ldr	r0, [r5, #-128]	; 0xffffff80
   1158c:	bl	118a4 <close@plt+0x968>
   11590:	ldr	r0, [sp, #56]	; 0x38
   11594:	bl	10dd4 <ferror_unlocked@plt>
   11598:	cmp	r0, #0
   1159c:	beq	11604 <close@plt+0x6c8>
   115a0:	bl	10e64 <__errno_location@plt>
   115a4:	ldr	r3, [sp, #28]
   115a8:	ldr	r4, [r0]
   115ac:	ldr	r2, [r3, r6, lsl #2]
   115b0:	b	1133c <close@plt+0x400>
   115b4:	mov	r3, #1
   115b8:	cmp	r5, #0
   115bc:	strb	r3, [r4, #4]
   115c0:	bgt	11484 <close@plt+0x548>
   115c4:	b	114c0 <close@plt+0x584>
   115c8:	mov	r6, #1
   115cc:	b	11510 <close@plt+0x5d4>
   115d0:	add	r2, sp, #304	; 0x130
   115d4:	add	r8, r5, r8
   115d8:	add	r8, r2, r8, lsl #2
   115dc:	ldr	r0, [r8, #-128]	; 0xffffff80
   115e0:	ldr	r2, [r0, #8]
   115e4:	cmp	r2, #0
   115e8:	beq	11590 <close@plt+0x654>
   115ec:	add	r5, r5, r3
   115f0:	add	r3, sp, #304	; 0x130
   115f4:	add	r5, r3, r5, lsl #2
   115f8:	add	r2, r6, #1
   115fc:	ldr	r1, [r5, #-128]	; 0xffffff80
   11600:	b	1158c <close@plt+0x650>
   11604:	strb	r0, [sl, #-1]
   11608:	cmp	r6, #1
   1160c:	add	r7, r7, #12
   11610:	bne	115c8 <close@plt+0x68c>
   11614:	ldr	r7, [sp, #64]	; 0x40
   11618:	ldr	r6, [sp, #68]	; 0x44
   1161c:	cmp	r7, #0
   11620:	bne	11370 <close@plt+0x434>
   11624:	cmp	r6, #0
   11628:	bne	11370 <close@plt+0x434>
   1162c:	ldr	r0, [sp, #72]	; 0x48
   11630:	bl	11dbc <close@plt+0xe80>
   11634:	cmp	r0, #0
   11638:	bne	11730 <close@plt+0x7f4>
   1163c:	ldr	r0, [sp, #76]	; 0x4c
   11640:	bl	11dbc <close@plt+0xe80>
   11644:	subs	r7, r0, #0
   11648:	bne	11728 <close@plt+0x7ec>
   1164c:	ldrb	r3, [r4, #11]
   11650:	cmp	r3, #0
   11654:	beq	116e0 <close@plt+0x7a4>
   11658:	ldr	r5, [pc, #272]	; 11770 <close@plt+0x834>
   1165c:	add	r2, sp, #80	; 0x50
   11660:	ldrd	r0, [sp, #36]	; 0x24
   11664:	bl	1203c <close@plt+0x1100>
   11668:	mov	r6, r0
   1166c:	add	r2, sp, #104	; 0x68
   11670:	ldrd	r0, [sp, #44]	; 0x2c
   11674:	ldr	r8, [r5, #4]
   11678:	bl	1203c <close@plt+0x1100>
   1167c:	mov	sl, r0
   11680:	mov	r1, r9
   11684:	ldr	r0, [sp, #32]
   11688:	add	r2, sp, #128	; 0x80
   1168c:	ldr	fp, [r5, #4]
   11690:	bl	1203c <close@plt+0x1100>
   11694:	ldr	r3, [r5, #4]
   11698:	mov	r9, r0
   1169c:	mov	r2, #5
   116a0:	mov	r0, r7
   116a4:	ldr	r1, [pc, #252]	; 117a8 <close@plt+0x86c>
   116a8:	str	r3, [sp, #28]
   116ac:	bl	10d80 <dcgettext@plt>
   116b0:	ldrb	r2, [r5]
   116b4:	strd	sl, [sp]
   116b8:	ldr	r3, [sp, #28]
   116bc:	str	r9, [sp, #8]
   116c0:	ldr	r1, [pc, #228]	; 117ac <close@plt+0x870>
   116c4:	str	r3, [sp, #12]
   116c8:	mov	r3, r8
   116cc:	str	r0, [sp, #16]
   116d0:	mov	r0, #1
   116d4:	str	r2, [sp, #20]
   116d8:	mov	r2, r6
   116dc:	bl	10e88 <__printf_chk@plt>
   116e0:	ldrb	r3, [r4, #5]
   116e4:	cmp	r3, #0
   116e8:	bne	116f8 <close@plt+0x7bc>
   116ec:	ldrb	r0, [r4, #6]
   116f0:	cmp	r0, #0
   116f4:	beq	111b4 <close@plt+0x278>
   116f8:	mov	r2, #5
   116fc:	ldr	r1, [pc, #172]	; 117b0 <close@plt+0x874>
   11700:	b	11140 <close@plt+0x204>
   11704:	mov	r3, #0
   11708:	ldr	r4, [pc, #56]	; 11748 <close@plt+0x80c>
   1170c:	mov	r9, r3
   11710:	str	r3, [sp, #32]
   11714:	str	r3, [sp, #36]	; 0x24
   11718:	str	r3, [sp, #40]	; 0x28
   1171c:	str	r3, [sp, #44]	; 0x2c
   11720:	str	r3, [sp, #48]	; 0x30
   11724:	b	11614 <close@plt+0x6d8>
   11728:	mov	r3, #1
   1172c:	str	r3, [sp, #52]	; 0x34
   11730:	bl	10e64 <__errno_location@plt>
   11734:	ldr	r3, [sp, #28]
   11738:	ldr	r2, [sp, #52]	; 0x34
   1173c:	ldr	r4, [r0]
   11740:	ldr	r2, [r3, r2, lsl #2]
   11744:	b	1133c <close@plt+0x400>
   11748:	andeq	r6, r2, r8, ror #2
   1174c:	andeq	r5, r1, pc, ror #2
   11750:	strdeq	r4, [r1], -pc	; <UNPREDICTABLE>
   11754:	andeq	r4, r1, ip, asr pc
   11758:	andeq	r4, r1, r4, ror r9
   1175c:	andeq	r5, r1, r0, rrx
   11760:	andeq	r6, r2, r0, ror #2
   11764:			; <UNDEFINED> instruction: 0x00011cb4
   11768:	andeq	r6, r2, r8, asr #2
   1176c:	andeq	r5, r1, r5, rrx
   11770:	andeq	r6, r2, ip, ror #1
   11774:	andeq	r5, r1, r7, lsl r0
   11778:	andeq	r5, r1, ip, lsr r0
   1177c:	andeq	r6, r2, ip, asr r1
   11780:	andeq	r4, r1, r8, asr pc
   11784:	andeq	r5, r1, ip, asr #32
   11788:	andeq	r4, r1, r3, lsl sl
   1178c:	strdeq	r6, [r2], -r4
   11790:	andeq	r5, r1, r5, ror r0
   11794:	andeq	r5, r1, lr, lsl #1
   11798:	ldrdeq	r5, [r1], -ip
   1179c:	andeq	r6, r2, r8, asr r1
   117a0:	andeq	r4, r1, r1, lsl sl
   117a4:	andeq	r5, r1, pc, lsl #3
   117a8:	muleq	r1, pc, r0	; <UNPREDICTABLE>
   117ac:	andeq	r5, r1, r5, lsr #1
   117b0:	strheq	r5, [r1], -r6
   117b4:	mov	fp, #0
   117b8:	mov	lr, #0
   117bc:	pop	{r1}		; (ldr r1, [sp], #4)
   117c0:	mov	r2, sp
   117c4:	push	{r2}		; (str r2, [sp, #-4]!)
   117c8:	push	{r0}		; (str r0, [sp, #-4]!)
   117cc:	ldr	ip, [pc, #16]	; 117e4 <close@plt+0x8a8>
   117d0:	push	{ip}		; (str ip, [sp, #-4]!)
   117d4:	ldr	r0, [pc, #12]	; 117e8 <close@plt+0x8ac>
   117d8:	ldr	r3, [pc, #12]	; 117ec <close@plt+0x8b0>
   117dc:	bl	10e10 <__libc_start_main@plt>
   117e0:	bl	10f24 <abort@plt>
   117e4:	andeq	r4, r1, r4, lsl r9
   117e8:	andeq	r0, r1, r0, ror #30
   117ec:			; <UNDEFINED> instruction: 0x000148b4
   117f0:	ldr	r3, [pc, #20]	; 1180c <close@plt+0x8d0>
   117f4:	ldr	r2, [pc, #20]	; 11810 <close@plt+0x8d4>
   117f8:	add	r3, pc, r3
   117fc:	ldr	r2, [r3, r2]
   11800:	cmp	r2, #0
   11804:	bxeq	lr
   11808:	b	10e28 <__gmon_start__@plt>
   1180c:	andeq	r4, r1, r0, lsl #16
   11810:	andeq	r0, r0, r0, ror #1
   11814:	ldr	r0, [pc, #24]	; 11834 <close@plt+0x8f8>
   11818:	ldr	r3, [pc, #24]	; 11838 <close@plt+0x8fc>
   1181c:	cmp	r3, r0
   11820:	bxeq	lr
   11824:	ldr	r3, [pc, #16]	; 1183c <close@plt+0x900>
   11828:	cmp	r3, #0
   1182c:	bxeq	lr
   11830:	bx	r3
   11834:	andeq	r6, r2, ip, lsr r1
   11838:	andeq	r6, r2, ip, lsr r1
   1183c:	andeq	r0, r0, r0
   11840:	ldr	r0, [pc, #36]	; 1186c <close@plt+0x930>
   11844:	ldr	r1, [pc, #36]	; 11870 <close@plt+0x934>
   11848:	sub	r1, r1, r0
   1184c:	asr	r1, r1, #2
   11850:	add	r1, r1, r1, lsr #31
   11854:	asrs	r1, r1, #1
   11858:	bxeq	lr
   1185c:	ldr	r3, [pc, #16]	; 11874 <close@plt+0x938>
   11860:	cmp	r3, #0
   11864:	bxeq	lr
   11868:	bx	r3
   1186c:	andeq	r6, r2, ip, lsr r1
   11870:	andeq	r6, r2, ip, lsr r1
   11874:	andeq	r0, r0, r0
   11878:	push	{r4, lr}
   1187c:	ldr	r4, [pc, #24]	; 1189c <close@plt+0x960>
   11880:	ldrb	r3, [r4]
   11884:	cmp	r3, #0
   11888:	popne	{r4, pc}
   1188c:	bl	11814 <close@plt+0x8d8>
   11890:	mov	r3, #1
   11894:	strb	r3, [r4]
   11898:	pop	{r4, pc}
   1189c:	andeq	r6, r2, r4, ror #2
   118a0:	b	11840 <close@plt+0x904>
   118a4:	push	{r4, r5, r6, lr}
   118a8:	ldr	r4, [pc, #180]	; 11964 <close@plt+0xa28>
   118ac:	ldr	r3, [r4]
   118b0:	cmp	r3, #2
   118b4:	popeq	{r4, r5, r6, pc}
   118b8:	cmp	r3, #1
   118bc:	beq	118cc <close@plt+0x990>
   118c0:	ldrb	r3, [r4, #4]
   118c4:	cmp	r3, #0
   118c8:	popeq	{r4, r5, r6, pc}
   118cc:	sub	r6, r2, #1
   118d0:	add	r3, r4, r6
   118d4:	ldrb	r3, [r3, #5]
   118d8:	cmp	r3, #0
   118dc:	popne	{r4, r5, r6, pc}
   118e0:	mov	r3, r0
   118e4:	mov	ip, r1
   118e8:	ldr	r3, [r3, #4]
   118ec:	mov	r5, r2
   118f0:	ldr	r2, [r1, #8]
   118f4:	ldr	r0, [r0, #8]
   118f8:	sub	r1, r3, #1
   118fc:	ldr	r3, [ip, #4]
   11900:	ldrb	ip, [r4, #7]
   11904:	sub	r3, r3, #1
   11908:	cmp	ip, #0
   1190c:	beq	1195c <close@plt+0xa20>
   11910:	bl	14144 <close@plt+0x3208>
   11914:	cmp	r0, #0
   11918:	pople	{r4, r5, r6, pc}
   1191c:	mov	r2, #5
   11920:	mov	r0, #0
   11924:	ldr	r6, [r4], r6
   11928:	ldr	r1, [pc, #56]	; 11968 <close@plt+0xa2c>
   1192c:	bl	10d80 <dcgettext@plt>
   11930:	mov	r2, r0
   11934:	mov	r3, r5
   11938:	sub	r6, r6, #1
   1193c:	mov	r1, #0
   11940:	clz	r6, r6
   11944:	lsr	r6, r6, #5
   11948:	mov	r0, r6
   1194c:	bl	10dec <error@plt>
   11950:	mov	r3, #1
   11954:	strb	r3, [r4, #5]
   11958:	pop	{r4, r5, r6, pc}
   1195c:	bl	12198 <close@plt+0x125c>
   11960:	b	11914 <close@plt+0x9d8>
   11964:	andeq	r6, r2, r8, ror #2
   11968:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1196c:	subs	r5, r0, #0
   11970:	push	{r7, lr}
   11974:	sub	sp, sp, #56	; 0x38
   11978:	ldr	r6, [pc, #676]	; 11c24 <close@plt+0xce8>
   1197c:	beq	119b4 <close@plt+0xa78>
   11980:	mov	r2, #5
   11984:	mov	r0, #0
   11988:	ldr	r3, [pc, #664]	; 11c28 <close@plt+0xcec>
   1198c:	ldr	r1, [pc, #664]	; 11c2c <close@plt+0xcf0>
   11990:	ldr	r4, [r3]
   11994:	bl	10d80 <dcgettext@plt>
   11998:	mov	r2, r0
   1199c:	mov	r1, #1
   119a0:	ldr	r3, [r6]
   119a4:	mov	r0, r4
   119a8:	bl	10ea0 <__fprintf_chk@plt>
   119ac:	mov	r0, r5
   119b0:	bl	10e4c <exit@plt>
   119b4:	ldr	r4, [pc, #628]	; 11c30 <close@plt+0xcf4>
   119b8:	mov	r2, #5
   119bc:	ldr	r1, [pc, #624]	; 11c34 <close@plt+0xcf8>
   119c0:	bl	10d80 <dcgettext@plt>
   119c4:	mov	r1, r0
   119c8:	mov	r0, #1
   119cc:	ldr	r2, [r6]
   119d0:	bl	10e88 <__printf_chk@plt>
   119d4:	mov	r2, #5
   119d8:	ldr	r1, [pc, #600]	; 11c38 <close@plt+0xcfc>
   119dc:	mov	r0, r5
   119e0:	bl	10d80 <dcgettext@plt>
   119e4:	ldr	r1, [r4]
   119e8:	bl	10ce4 <fputs_unlocked@plt>
   119ec:	mov	r2, #5
   119f0:	ldr	r1, [pc, #580]	; 11c3c <close@plt+0xd00>
   119f4:	mov	r0, r5
   119f8:	bl	10d80 <dcgettext@plt>
   119fc:	ldr	r1, [r4]
   11a00:	bl	10ce4 <fputs_unlocked@plt>
   11a04:	mov	r2, #5
   11a08:	ldr	r1, [pc, #560]	; 11c40 <close@plt+0xd04>
   11a0c:	mov	r0, r5
   11a10:	bl	10d80 <dcgettext@plt>
   11a14:	ldr	r1, [r4]
   11a18:	bl	10ce4 <fputs_unlocked@plt>
   11a1c:	mov	r2, #5
   11a20:	ldr	r1, [pc, #540]	; 11c44 <close@plt+0xd08>
   11a24:	mov	r0, r5
   11a28:	bl	10d80 <dcgettext@plt>
   11a2c:	ldr	r1, [r4]
   11a30:	bl	10ce4 <fputs_unlocked@plt>
   11a34:	mov	r2, #5
   11a38:	ldr	r1, [pc, #520]	; 11c48 <close@plt+0xd0c>
   11a3c:	mov	r0, r5
   11a40:	bl	10d80 <dcgettext@plt>
   11a44:	ldr	r1, [r4]
   11a48:	bl	10ce4 <fputs_unlocked@plt>
   11a4c:	mov	r2, #5
   11a50:	ldr	r1, [pc, #500]	; 11c4c <close@plt+0xd10>
   11a54:	mov	r0, r5
   11a58:	bl	10d80 <dcgettext@plt>
   11a5c:	ldr	r1, [r4]
   11a60:	bl	10ce4 <fputs_unlocked@plt>
   11a64:	mov	r2, #5
   11a68:	ldr	r1, [pc, #480]	; 11c50 <close@plt+0xd14>
   11a6c:	mov	r0, r5
   11a70:	bl	10d80 <dcgettext@plt>
   11a74:	ldr	r1, [r4]
   11a78:	bl	10ce4 <fputs_unlocked@plt>
   11a7c:	mov	r2, #5
   11a80:	ldr	r1, [pc, #460]	; 11c54 <close@plt+0xd18>
   11a84:	mov	r0, r5
   11a88:	bl	10d80 <dcgettext@plt>
   11a8c:	ldr	r1, [r4]
   11a90:	bl	10ce4 <fputs_unlocked@plt>
   11a94:	mov	r2, #5
   11a98:	ldr	r1, [pc, #440]	; 11c58 <close@plt+0xd1c>
   11a9c:	mov	r0, r5
   11aa0:	bl	10d80 <dcgettext@plt>
   11aa4:	ldr	r1, [r4]
   11aa8:	bl	10ce4 <fputs_unlocked@plt>
   11aac:	mov	r2, #5
   11ab0:	ldr	r1, [pc, #420]	; 11c5c <close@plt+0xd20>
   11ab4:	mov	r0, r5
   11ab8:	bl	10d80 <dcgettext@plt>
   11abc:	ldr	r1, [r4]
   11ac0:	bl	10ce4 <fputs_unlocked@plt>
   11ac4:	mov	r2, #5
   11ac8:	ldr	r1, [pc, #400]	; 11c60 <close@plt+0xd24>
   11acc:	mov	r0, r5
   11ad0:	bl	10d80 <dcgettext@plt>
   11ad4:	ldr	r1, [r4]
   11ad8:	bl	10ce4 <fputs_unlocked@plt>
   11adc:	mov	r2, #5
   11ae0:	ldr	r1, [pc, #380]	; 11c64 <close@plt+0xd28>
   11ae4:	mov	r0, r5
   11ae8:	bl	10d80 <dcgettext@plt>
   11aec:	ldr	r3, [r6]
   11af0:	mov	r1, r0
   11af4:	mov	r0, #1
   11af8:	mov	r6, sp
   11afc:	ldr	r7, [pc, #356]	; 11c68 <close@plt+0xd2c>
   11b00:	mov	r2, r3
   11b04:	bl	10e88 <__printf_chk@plt>
   11b08:	ldr	lr, [pc, #348]	; 11c6c <close@plt+0xd30>
   11b0c:	mov	ip, sp
   11b10:	ldm	lr!, {r0, r1, r2, r3}
   11b14:	stmia	ip!, {r0, r1, r2, r3}
   11b18:	ldm	lr!, {r0, r1, r2, r3}
   11b1c:	stmia	ip!, {r0, r1, r2, r3}
   11b20:	ldm	lr!, {r0, r1, r2, r3}
   11b24:	stmia	ip!, {r0, r1, r2, r3}
   11b28:	ldm	lr, {r0, r1}
   11b2c:	stm	ip, {r0, r1}
   11b30:	ldr	r1, [r6]
   11b34:	cmp	r1, #0
   11b38:	bne	11bdc <close@plt+0xca0>
   11b3c:	ldr	r6, [r6, #4]
   11b40:	mov	r2, #5
   11b44:	mov	r0, #0
   11b48:	ldr	r7, [pc, #280]	; 11c68 <close@plt+0xd2c>
   11b4c:	ldr	r1, [pc, #284]	; 11c70 <close@plt+0xd34>
   11b50:	cmp	r6, #0
   11b54:	moveq	r6, r7
   11b58:	bl	10d80 <dcgettext@plt>
   11b5c:	mov	r1, r0
   11b60:	ldr	r3, [pc, #268]	; 11c74 <close@plt+0xd38>
   11b64:	mov	r0, #1
   11b68:	ldr	r2, [pc, #264]	; 11c78 <close@plt+0xd3c>
   11b6c:	bl	10e88 <__printf_chk@plt>
   11b70:	mov	r1, #0
   11b74:	mov	r0, #5
   11b78:	bl	10ed0 <setlocale@plt>
   11b7c:	cmp	r0, #0
   11b80:	bne	11bf4 <close@plt+0xcb8>
   11b84:	mov	r2, #5
   11b88:	ldr	r1, [pc, #236]	; 11c7c <close@plt+0xd40>
   11b8c:	mov	r0, #0
   11b90:	bl	10d80 <dcgettext@plt>
   11b94:	mov	r1, r0
   11b98:	ldr	r3, [pc, #200]	; 11c68 <close@plt+0xd2c>
   11b9c:	mov	r0, #1
   11ba0:	ldr	r2, [pc, #204]	; 11c74 <close@plt+0xd38>
   11ba4:	bl	10e88 <__printf_chk@plt>
   11ba8:	mov	r2, #5
   11bac:	ldr	r1, [pc, #204]	; 11c80 <close@plt+0xd44>
   11bb0:	mov	r0, #0
   11bb4:	bl	10d80 <dcgettext@plt>
   11bb8:	ldr	r2, [pc, #196]	; 11c84 <close@plt+0xd48>
   11bbc:	cmp	r6, r7
   11bc0:	mov	r1, r0
   11bc4:	mov	r0, #1
   11bc8:	ldr	r3, [pc, #184]	; 11c88 <close@plt+0xd4c>
   11bcc:	moveq	r3, r2
   11bd0:	mov	r2, r6
   11bd4:	bl	10e88 <__printf_chk@plt>
   11bd8:	b	119ac <close@plt+0xa70>
   11bdc:	mov	r0, r7
   11be0:	bl	10cfc <strcmp@plt>
   11be4:	cmp	r0, #0
   11be8:	beq	11b3c <close@plt+0xc00>
   11bec:	add	r6, r6, #8
   11bf0:	b	11b30 <close@plt+0xbf4>
   11bf4:	mov	r2, #3
   11bf8:	ldr	r1, [pc, #140]	; 11c8c <close@plt+0xd50>
   11bfc:	bl	10f18 <strncmp@plt>
   11c00:	cmp	r0, #0
   11c04:	beq	11b84 <close@plt+0xc48>
   11c08:	mov	r2, #5
   11c0c:	ldr	r1, [pc, #124]	; 11c90 <close@plt+0xd54>
   11c10:	mov	r0, #0
   11c14:	bl	10d80 <dcgettext@plt>
   11c18:	ldr	r1, [r4]
   11c1c:	bl	10ce4 <fputs_unlocked@plt>
   11c20:	b	11b84 <close@plt+0xc48>
   11c24:	andeq	r6, r2, r0, lsl #3
   11c28:	andeq	r6, r2, r0, asr r1
   11c2c:	andeq	r4, r1, r8, lsl sl
   11c30:	andeq	r6, r2, ip, asr r1
   11c34:	andeq	r4, r1, pc, lsr sl
   11c38:	andeq	r4, r1, r2, ror #20
   11c3c:	muleq	r1, r6, sl
   11c40:	ldrdeq	r4, [r1], -r2
   11c44:	andeq	r4, r1, pc, lsl #23
   11c48:	andeq	r4, r1, r7, ror #24
   11c4c:	andeq	r4, r1, r8, lsr sp
   11c50:	andeq	r4, r1, r1, ror sp
   11c54:	muleq	r1, sp, sp
   11c58:	ldrdeq	r4, [r1], -fp
   11c5c:	andeq	r4, r1, r8, lsl #28
   11c60:	andeq	r4, r1, lr, lsr lr
   11c64:	andeq	r4, r1, sp, ror lr
   11c68:	andeq	r4, r1, r3, lsl sl
   11c6c:	andeq	r4, r1, ip, lsr r9
   11c70:	andeq	r4, r1, r9, lsl pc
   11c74:	andeq	r4, r1, r0, lsr pc
   11c78:	andeq	r4, r1, r8, asr pc
   11c7c:			; <UNDEFINED> instruction: 0x00014fb1
   11c80:	andeq	r4, r1, ip, asr #31
   11c84:	andeq	r5, r1, pc, ror #1
   11c88:	andeq	r5, r1, pc, ror #2
   11c8c:	andeq	r4, r1, r6, ror #30
   11c90:	andeq	r4, r1, sl, ror #30
   11c94:	ldr	r3, [pc, #4]	; 11ca0 <close@plt+0xd64>
   11c98:	str	r0, [r3]
   11c9c:	bx	lr
   11ca0:	andeq	r6, r2, r8, ror r1
   11ca4:	ldr	r3, [pc, #4]	; 11cb0 <close@plt+0xd74>
   11ca8:	strb	r0, [r3, #4]
   11cac:	bx	lr
   11cb0:	andeq	r6, r2, r8, ror r1
   11cb4:	ldr	r3, [pc, #176]	; 11d6c <close@plt+0xe30>
   11cb8:	push	{r0, r1, r4, r5, r6, lr}
   11cbc:	ldr	r0, [r3]
   11cc0:	bl	142a4 <close@plt+0x3368>
   11cc4:	cmp	r0, #0
   11cc8:	beq	11d50 <close@plt+0xe14>
   11ccc:	ldr	r4, [pc, #156]	; 11d70 <close@plt+0xe34>
   11cd0:	bl	10e64 <__errno_location@plt>
   11cd4:	mov	r5, r0
   11cd8:	ldrb	r6, [r4, #4]
   11cdc:	cmp	r6, #0
   11ce0:	beq	11cf0 <close@plt+0xdb4>
   11ce4:	ldr	r3, [r0]
   11ce8:	cmp	r3, #32
   11cec:	beq	11d50 <close@plt+0xe14>
   11cf0:	mov	r2, #5
   11cf4:	ldr	r1, [pc, #120]	; 11d74 <close@plt+0xe38>
   11cf8:	mov	r0, #0
   11cfc:	bl	10d80 <dcgettext@plt>
   11d00:	mov	r6, r0
   11d04:	ldr	r0, [r4]
   11d08:	cmp	r0, #0
   11d0c:	beq	11d3c <close@plt+0xe00>
   11d10:	ldr	r4, [r5]
   11d14:	bl	1368c <close@plt+0x2750>
   11d18:	mov	r3, r0
   11d1c:	ldr	r2, [pc, #84]	; 11d78 <close@plt+0xe3c>
   11d20:	mov	r0, #0
   11d24:	str	r6, [sp]
   11d28:	mov	r1, r4
   11d2c:	bl	10dec <error@plt>
   11d30:	ldr	r3, [pc, #68]	; 11d7c <close@plt+0xe40>
   11d34:	ldr	r0, [r3]
   11d38:	bl	10d2c <_exit@plt>
   11d3c:	mov	r3, r6
   11d40:	ldr	r2, [pc, #56]	; 11d80 <close@plt+0xe44>
   11d44:	ldr	r1, [r5]
   11d48:	bl	10dec <error@plt>
   11d4c:	b	11d30 <close@plt+0xdf4>
   11d50:	ldr	r3, [pc, #44]	; 11d84 <close@plt+0xe48>
   11d54:	ldr	r0, [r3]
   11d58:	bl	142a4 <close@plt+0x3368>
   11d5c:	cmp	r0, #0
   11d60:	bne	11d30 <close@plt+0xdf4>
   11d64:	add	sp, sp, #8
   11d68:	pop	{r4, r5, r6, pc}
   11d6c:	andeq	r6, r2, ip, asr r1
   11d70:	andeq	r6, r2, r8, ror r1
   11d74:	andeq	r5, r1, pc, ror r1
   11d78:	andeq	r5, r1, fp, lsl #3
   11d7c:	strdeq	r6, [r2], -r8
   11d80:	andeq	r5, r1, pc, lsl #3
   11d84:	andeq	r6, r2, r0, asr r1
   11d88:	b	10d08 <posix_fadvise64@plt>
   11d8c:	cmp	r0, #0
   11d90:	bxeq	lr
   11d94:	push	{r0, r1, r2, r3, r4, lr}
   11d98:	mov	r4, r1
   11d9c:	bl	10e94 <fileno@plt>
   11da0:	mov	r2, #0
   11da4:	mov	r3, #0
   11da8:	strd	r2, [sp]
   11dac:	str	r4, [sp, #8]
   11db0:	bl	10d08 <posix_fadvise64@plt>
   11db4:	add	sp, sp, #16
   11db8:	pop	{r4, pc}
   11dbc:	push	{r0, r1, r2, r4, r5, lr}
   11dc0:	mov	r4, r0
   11dc4:	bl	10e94 <fileno@plt>
   11dc8:	cmp	r0, #0
   11dcc:	mov	r0, r4
   11dd0:	bge	11de0 <close@plt+0xea4>
   11dd4:	add	sp, sp, #12
   11dd8:	pop	{r4, r5, lr}
   11ddc:	b	10eac <fclose@plt>
   11de0:	bl	10e1c <__freading@plt>
   11de4:	cmp	r0, #0
   11de8:	bne	11e24 <close@plt+0xee8>
   11dec:	mov	r0, r4
   11df0:	bl	11e64 <close@plt+0xf28>
   11df4:	cmp	r0, #0
   11df8:	bne	11e58 <close@plt+0xf1c>
   11dfc:	mov	r5, #0
   11e00:	mov	r0, r4
   11e04:	bl	10eac <fclose@plt>
   11e08:	cmp	r5, #0
   11e0c:	beq	11e1c <close@plt+0xee0>
   11e10:	bl	10e64 <__errno_location@plt>
   11e14:	str	r5, [r0]
   11e18:	mvn	r0, #0
   11e1c:	add	sp, sp, #12
   11e20:	pop	{r4, r5, pc}
   11e24:	mov	r0, r4
   11e28:	bl	10e94 <fileno@plt>
   11e2c:	mov	r3, #1
   11e30:	mov	r2, #0
   11e34:	str	r3, [sp]
   11e38:	mov	r3, #0
   11e3c:	bl	10db0 <lseek64@plt>
   11e40:	mvn	r3, #0
   11e44:	mvn	r2, #0
   11e48:	cmp	r1, r3
   11e4c:	cmpeq	r0, r2
   11e50:	bne	11dec <close@plt+0xeb0>
   11e54:	b	11dfc <close@plt+0xec0>
   11e58:	bl	10e64 <__errno_location@plt>
   11e5c:	ldr	r5, [r0]
   11e60:	b	11e00 <close@plt+0xec4>
   11e64:	push	{r0, r1, r4, lr}
   11e68:	subs	r4, r0, #0
   11e6c:	bne	11e80 <close@plt+0xf44>
   11e70:	mov	r0, r4
   11e74:	add	sp, sp, #8
   11e78:	pop	{r4, lr}
   11e7c:	b	10d14 <fflush@plt>
   11e80:	bl	10e1c <__freading@plt>
   11e84:	cmp	r0, #0
   11e88:	beq	11e70 <close@plt+0xf34>
   11e8c:	ldr	r3, [r4]
   11e90:	tst	r3, #256	; 0x100
   11e94:	beq	11e70 <close@plt+0xf34>
   11e98:	mov	r3, #1
   11e9c:	mov	r2, #0
   11ea0:	mov	r0, r4
   11ea4:	str	r3, [sp]
   11ea8:	mov	r3, #0
   11eac:	bl	11f48 <close@plt+0x100c>
   11eb0:	b	11e70 <close@plt+0xf34>
   11eb4:	push	{r4, r5, r6, lr}
   11eb8:	mov	r6, r1
   11ebc:	bl	10ef4 <fopen64@plt>
   11ec0:	subs	r4, r0, #0
   11ec4:	beq	11efc <close@plt+0xfc0>
   11ec8:	bl	10e94 <fileno@plt>
   11ecc:	cmp	r0, #2
   11ed0:	bhi	11efc <close@plt+0xfc0>
   11ed4:	bl	1386c <close@plt+0x2930>
   11ed8:	subs	r5, r0, #0
   11edc:	bge	11f04 <close@plt+0xfc8>
   11ee0:	bl	10e64 <__errno_location@plt>
   11ee4:	mov	r5, r0
   11ee8:	mov	r0, r4
   11eec:	ldr	r6, [r5]
   11ef0:	bl	11dbc <close@plt+0xe80>
   11ef4:	str	r6, [r5]
   11ef8:	mov	r4, #0
   11efc:	mov	r0, r4
   11f00:	pop	{r4, r5, r6, pc}
   11f04:	mov	r0, r4
   11f08:	bl	11dbc <close@plt+0xe80>
   11f0c:	cmp	r0, #0
   11f10:	beq	11f30 <close@plt+0xff4>
   11f14:	bl	10e64 <__errno_location@plt>
   11f18:	mov	r4, r0
   11f1c:	mov	r0, r5
   11f20:	ldr	r6, [r4]
   11f24:	bl	10f3c <close@plt>
   11f28:	str	r6, [r4]
   11f2c:	b	11ef8 <close@plt+0xfbc>
   11f30:	mov	r1, r6
   11f34:	mov	r0, r5
   11f38:	bl	10ccc <fdopen@plt>
   11f3c:	subs	r4, r0, #0
   11f40:	bne	11efc <close@plt+0xfc0>
   11f44:	b	11f14 <close@plt+0xfd8>
   11f48:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   11f4c:	mov	r4, r0
   11f50:	ldmib	r0, {ip, lr}
   11f54:	ldr	r8, [sp, #32]
   11f58:	cmp	lr, ip
   11f5c:	bne	11fcc <close@plt+0x1090>
   11f60:	ldr	ip, [r0, #16]
   11f64:	ldr	lr, [r0, #20]
   11f68:	cmp	lr, ip
   11f6c:	bne	11fcc <close@plt+0x1090>
   11f70:	ldr	r5, [r0, #36]	; 0x24
   11f74:	cmp	r5, #0
   11f78:	bne	11fcc <close@plt+0x1090>
   11f7c:	mov	r6, r2
   11f80:	mov	r7, r3
   11f84:	bl	10e94 <fileno@plt>
   11f88:	mov	r2, r6
   11f8c:	mov	r3, r7
   11f90:	str	r8, [sp]
   11f94:	bl	10db0 <lseek64@plt>
   11f98:	mvn	r3, #0
   11f9c:	mvn	r2, #0
   11fa0:	cmp	r1, r3
   11fa4:	cmpeq	r0, r2
   11fa8:	mvneq	r0, #0
   11fac:	beq	11fc4 <close@plt+0x1088>
   11fb0:	ldr	r3, [r4]
   11fb4:	strd	r0, [r4, #80]	; 0x50
   11fb8:	mov	r0, r5
   11fbc:	bic	r3, r3, #16
   11fc0:	str	r3, [r4]
   11fc4:	add	sp, sp, #8
   11fc8:	pop	{r4, r5, r6, r7, r8, pc}
   11fcc:	mov	r0, r4
   11fd0:	str	r8, [sp, #32]
   11fd4:	add	sp, sp, #8
   11fd8:	pop	{r4, r5, r6, r7, r8, lr}
   11fdc:	b	10eb8 <fseeko64@plt>
   11fe0:	push	{lr}		; (str lr, [sp, #-4]!)
   11fe4:	sub	sp, sp, #268	; 0x10c
   11fe8:	movw	r2, #257	; 0x101
   11fec:	add	r1, sp, #4
   11ff0:	bl	137e8 <close@plt+0x28ac>
   11ff4:	cmp	r0, #0
   11ff8:	movne	r0, #0
   11ffc:	bne	1202c <close@plt+0x10f0>
   12000:	ldr	r1, [pc, #44]	; 12034 <close@plt+0x10f8>
   12004:	add	r0, sp, #4
   12008:	bl	10cfc <strcmp@plt>
   1200c:	cmp	r0, #0
   12010:	beq	12028 <close@plt+0x10ec>
   12014:	ldr	r1, [pc, #28]	; 12038 <close@plt+0x10fc>
   12018:	add	r0, sp, #4
   1201c:	bl	10cfc <strcmp@plt>
   12020:	adds	r0, r0, #0
   12024:	movne	r0, #1
   12028:	and	r0, r0, #1
   1202c:	add	sp, sp, #268	; 0x10c
   12030:	pop	{pc}		; (ldr pc, [sp], #4)
   12034:	muleq	r1, r2, r1
   12038:	muleq	r1, r4, r1
   1203c:	push	{r4, r5, r6, lr}
   12040:	mov	r3, #0
   12044:	mov	r4, r0
   12048:	mov	r5, r1
   1204c:	add	r6, r2, #20
   12050:	strb	r3, [r2, #20]
   12054:	mov	r2, #10
   12058:	mov	r3, #0
   1205c:	mov	r0, r4
   12060:	mov	r1, r5
   12064:	bl	14740 <close@plt+0x3804>
   12068:	add	r2, r2, #48	; 0x30
   1206c:	mov	r3, #0
   12070:	mov	r0, r4
   12074:	mov	r1, r5
   12078:	strb	r2, [r6, #-1]!
   1207c:	mov	r2, #10
   12080:	bl	14740 <close@plt+0x3804>
   12084:	cmp	r5, #0
   12088:	cmpeq	r4, #9
   1208c:	bhi	12098 <close@plt+0x115c>
   12090:	mov	r0, r6
   12094:	pop	{r4, r5, r6, pc}
   12098:	mov	r4, r0
   1209c:	mov	r5, r1
   120a0:	b	12054 <close@plt+0x1118>
   120a4:	mov	r3, #0
   120a8:	str	r3, [r0]
   120ac:	str	r3, [r0, #4]
   120b0:	str	r3, [r0, #8]
   120b4:	bx	lr
   120b8:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   120bc:	mov	r5, r0
   120c0:	mov	sl, r1
   120c4:	mov	r9, r2
   120c8:	ldr	r7, [r0]
   120cc:	ldr	r6, [r0, #8]
   120d0:	mov	r0, r1
   120d4:	bl	10f30 <feof_unlocked@plt>
   120d8:	cmp	r0, #0
   120dc:	moveq	fp, #1
   120e0:	add	r7, r6, r7
   120e4:	moveq	r4, r6
   120e8:	beq	120fc <close@plt+0x11c0>
   120ec:	mov	r5, #0
   120f0:	mov	r0, r5
   120f4:	add	sp, sp, #12
   120f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   120fc:	mov	r0, sl
   12100:	bl	10d74 <getc_unlocked@plt>
   12104:	cmn	r0, #1
   12108:	mov	r8, r0
   1210c:	bne	12138 <close@plt+0x11fc>
   12110:	cmp	r6, r4
   12114:	beq	120ec <close@plt+0x11b0>
   12118:	mov	r0, sl
   1211c:	bl	10dd4 <ferror_unlocked@plt>
   12120:	cmp	r0, #0
   12124:	bne	120ec <close@plt+0x11b0>
   12128:	ldrb	r3, [r4, #-1]
   1212c:	cmp	r3, r9
   12130:	beq	1217c <close@plt+0x1240>
   12134:	mov	r8, r9
   12138:	cmp	r4, r7
   1213c:	bne	12170 <close@plt+0x1234>
   12140:	mov	r0, r6
   12144:	mvn	r3, #0
   12148:	ldr	r4, [r5]
   1214c:	mov	r2, #1
   12150:	mov	r1, r5
   12154:	str	fp, [sp]
   12158:	bl	13eb8 <close@plt+0x2f7c>
   1215c:	ldr	r7, [r5]
   12160:	mov	r6, r0
   12164:	str	r0, [r5, #8]
   12168:	add	r4, r0, r4
   1216c:	add	r7, r0, r7
   12170:	cmp	r9, r8
   12174:	strb	r8, [r4], #1
   12178:	bne	120fc <close@plt+0x11c0>
   1217c:	sub	r4, r4, r6
   12180:	str	r4, [r5, #4]
   12184:	b	120f0 <close@plt+0x11b4>
   12188:	mov	r2, #10
   1218c:	b	120b8 <close@plt+0x117c>
   12190:	ldr	r0, [r0, #8]
   12194:	b	144c4 <close@plt+0x3588>
   12198:	push	{r4, r5, r6, lr}
   1219c:	mov	r5, r1
   121a0:	mov	r1, r2
   121a4:	cmp	r5, r3
   121a8:	mov	r4, r3
   121ac:	movcc	r2, r5
   121b0:	movcs	r2, r3
   121b4:	bl	10d5c <memcmp@plt>
   121b8:	cmp	r0, #0
   121bc:	popne	{r4, r5, r6, pc}
   121c0:	cmp	r5, r4
   121c4:	movcs	r0, #0
   121c8:	movcc	r0, #1
   121cc:	cmp	r5, r4
   121d0:	rsbls	r0, r0, #0
   121d4:	rsbhi	r0, r0, #1
   121d8:	pop	{r4, r5, r6, pc}
   121dc:	push	{r4, r5, r6, lr}
   121e0:	subs	r4, r0, #0
   121e4:	bne	121fc <close@plt+0x12c0>
   121e8:	ldr	r3, [pc, #124]	; 1226c <close@plt+0x1330>
   121ec:	ldr	r0, [pc, #124]	; 12270 <close@plt+0x1334>
   121f0:	ldr	r1, [r3]
   121f4:	bl	10f0c <fputs@plt>
   121f8:	bl	10f24 <abort@plt>
   121fc:	mov	r1, #47	; 0x2f
   12200:	bl	10edc <strrchr@plt>
   12204:	subs	r6, r0, #0
   12208:	beq	12258 <close@plt+0x131c>
   1220c:	add	r5, r6, #1
   12210:	sub	r3, r5, r4
   12214:	cmp	r3, #6
   12218:	ble	12258 <close@plt+0x131c>
   1221c:	mov	r2, #7
   12220:	ldr	r1, [pc, #76]	; 12274 <close@plt+0x1338>
   12224:	sub	r0, r6, #6
   12228:	bl	10f18 <strncmp@plt>
   1222c:	cmp	r0, #0
   12230:	bne	12258 <close@plt+0x131c>
   12234:	mov	r2, #3
   12238:	ldr	r1, [pc, #56]	; 12278 <close@plt+0x133c>
   1223c:	mov	r0, r5
   12240:	bl	10f18 <strncmp@plt>
   12244:	cmp	r0, #0
   12248:	ldreq	r3, [pc, #44]	; 1227c <close@plt+0x1340>
   1224c:	addeq	r4, r6, #4
   12250:	movne	r4, r5
   12254:	streq	r4, [r3]
   12258:	ldr	r3, [pc, #32]	; 12280 <close@plt+0x1344>
   1225c:	str	r4, [r3]
   12260:	ldr	r3, [pc, #28]	; 12284 <close@plt+0x1348>
   12264:	str	r4, [r3]
   12268:	pop	{r4, r5, r6, pc}
   1226c:	andeq	r6, r2, r0, asr r1
   12270:	muleq	r1, sl, r1
   12274:	ldrdeq	r5, [r1], -r2
   12278:	ldrdeq	r5, [r1], -sl
   1227c:	andeq	r6, r2, r0, asr #2
   12280:	andeq	r6, r2, r0, lsl #3
   12284:	andeq	r6, r2, r4, asr #2
   12288:	push	{r4, lr}
   1228c:	mov	r2, #48	; 0x30
   12290:	mov	r4, r1
   12294:	mov	r1, #0
   12298:	bl	10e7c <memset@plt>
   1229c:	cmp	r4, #10
   122a0:	bne	122a8 <close@plt+0x136c>
   122a4:	bl	10f24 <abort@plt>
   122a8:	str	r4, [r0]
   122ac:	pop	{r4, pc}
   122b0:	push	{r4, r5, r6, lr}
   122b4:	mov	r2, #5
   122b8:	mov	r6, r0
   122bc:	mov	r5, r1
   122c0:	mov	r1, r0
   122c4:	mov	r0, #0
   122c8:	bl	10d80 <dcgettext@plt>
   122cc:	cmp	r6, r0
   122d0:	mov	r4, r0
   122d4:	bne	12344 <close@plt+0x1408>
   122d8:	bl	1453c <close@plt+0x3600>
   122dc:	ldrb	r3, [r0]
   122e0:	bic	r3, r3, #32
   122e4:	cmp	r3, #85	; 0x55
   122e8:	bne	1234c <close@plt+0x1410>
   122ec:	ldrb	r3, [r0, #1]
   122f0:	bic	r3, r3, #32
   122f4:	cmp	r3, #84	; 0x54
   122f8:	bne	123bc <close@plt+0x1480>
   122fc:	ldrb	r3, [r0, #2]
   12300:	bic	r3, r3, #32
   12304:	cmp	r3, #70	; 0x46
   12308:	bne	123bc <close@plt+0x1480>
   1230c:	ldrb	r3, [r0, #3]
   12310:	cmp	r3, #45	; 0x2d
   12314:	bne	123bc <close@plt+0x1480>
   12318:	ldrb	r3, [r0, #4]
   1231c:	cmp	r3, #56	; 0x38
   12320:	bne	123bc <close@plt+0x1480>
   12324:	ldrb	r3, [r0, #5]
   12328:	cmp	r3, #0
   1232c:	bne	123bc <close@plt+0x1480>
   12330:	ldrb	r2, [r4]
   12334:	ldr	r3, [pc, #144]	; 123cc <close@plt+0x1490>
   12338:	ldr	r4, [pc, #144]	; 123d0 <close@plt+0x1494>
   1233c:	cmp	r2, #96	; 0x60
   12340:	movne	r4, r3
   12344:	mov	r0, r4
   12348:	pop	{r4, r5, r6, pc}
   1234c:	cmp	r3, #71	; 0x47
   12350:	bne	123bc <close@plt+0x1480>
   12354:	ldrb	r3, [r0, #1]
   12358:	bic	r3, r3, #32
   1235c:	cmp	r3, #66	; 0x42
   12360:	bne	123bc <close@plt+0x1480>
   12364:	ldrb	r3, [r0, #2]
   12368:	cmp	r3, #49	; 0x31
   1236c:	bne	123bc <close@plt+0x1480>
   12370:	ldrb	r3, [r0, #3]
   12374:	cmp	r3, #56	; 0x38
   12378:	bne	123bc <close@plt+0x1480>
   1237c:	ldrb	r3, [r0, #4]
   12380:	cmp	r3, #48	; 0x30
   12384:	bne	123bc <close@plt+0x1480>
   12388:	ldrb	r3, [r0, #5]
   1238c:	cmp	r3, #51	; 0x33
   12390:	bne	123bc <close@plt+0x1480>
   12394:	ldrb	r3, [r0, #6]
   12398:	cmp	r3, #48	; 0x30
   1239c:	bne	123bc <close@plt+0x1480>
   123a0:	ldrb	r3, [r0, #7]
   123a4:	cmp	r3, #0
   123a8:	bne	123bc <close@plt+0x1480>
   123ac:	ldrb	r2, [r4]
   123b0:	ldr	r3, [pc, #28]	; 123d4 <close@plt+0x1498>
   123b4:	ldr	r4, [pc, #28]	; 123d8 <close@plt+0x149c>
   123b8:	b	1233c <close@plt+0x1400>
   123bc:	ldr	r4, [pc, #24]	; 123dc <close@plt+0x14a0>
   123c0:	cmp	r5, #9
   123c4:	ldr	r3, [pc, #20]	; 123e0 <close@plt+0x14a4>
   123c8:	b	12340 <close@plt+0x1404>
   123cc:	andeq	r5, r1, r6, lsr r2
   123d0:	andeq	r5, r1, r1, asr #4
   123d4:	andeq	r5, r1, sl, lsr r2
   123d8:	andeq	r5, r1, sp, lsr r2
   123dc:	andeq	r5, r1, r4, lsr r2
   123e0:	andeq	r5, r1, r5, asr #4
   123e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   123e8:	sub	sp, sp, #108	; 0x6c
   123ec:	mov	r8, r0
   123f0:	mov	r5, r1
   123f4:	mov	r6, #0
   123f8:	str	r3, [sp, #40]	; 0x28
   123fc:	str	r2, [sp, #48]	; 0x30
   12400:	ldr	sl, [sp, #144]	; 0x90
   12404:	bl	10dbc <__ctype_get_mb_cur_max@plt>
   12408:	ldr	r3, [sp, #148]	; 0x94
   1240c:	str	r6, [sp, #24]
   12410:	str	r6, [sp, #32]
   12414:	str	r6, [sp, #44]	; 0x2c
   12418:	str	r6, [sp, #52]	; 0x34
   1241c:	ubfx	r7, r3, #1, #1
   12420:	mov	r3, #1
   12424:	str	r6, [sp, #60]	; 0x3c
   12428:	str	r3, [sp, #72]	; 0x48
   1242c:	str	r0, [sp, #76]	; 0x4c
   12430:	cmp	sl, #10
   12434:	ldrls	pc, [pc, sl, lsl #2]
   12438:	b	1267c <close@plt+0x1740>
   1243c:	andeq	r2, r1, r8, ror #8
   12440:	muleq	r1, r4, r6
   12444:	andeq	r2, r1, r8, lsl r6
   12448:	andeq	r2, r1, r0, lsr r6
   1244c:	andeq	r2, r1, r0, lsl #12
   12450:	andeq	r2, r1, r8, asr r5
   12454:	andeq	r2, r1, r8, lsr r5
   12458:	andeq	r2, r1, r0, lsl #13
   1245c:	andeq	r2, r1, r8, lsl #11
   12460:	andeq	r2, r1, r8, lsl #11
   12464:	andeq	r2, r1, r8, lsl #11
   12468:	mov	r4, sl
   1246c:	mov	r7, #0
   12470:	mov	r9, r5
   12474:	mov	r3, #0
   12478:	str	r6, [sp, #68]	; 0x44
   1247c:	str	r3, [sp, #28]
   12480:	ldr	r3, [sp, #40]	; 0x28
   12484:	cmn	r3, #1
   12488:	bne	13028 <close@plt+0x20ec>
   1248c:	ldr	r2, [sp, #28]
   12490:	ldr	r3, [sp, #48]	; 0x30
   12494:	ldrb	r3, [r3, r2]
   12498:	adds	r3, r3, #0
   1249c:	movne	r3, #1
   124a0:	str	r3, [sp, #36]	; 0x24
   124a4:	ldr	r3, [sp, #36]	; 0x24
   124a8:	cmp	r3, #0
   124ac:	bne	126b8 <close@plt+0x177c>
   124b0:	sub	r3, sl, #2
   124b4:	cmp	r4, #0
   124b8:	clz	r3, r3
   124bc:	movne	r2, #0
   124c0:	lsr	r3, r3, #5
   124c4:	andeq	r2, r3, r7
   124c8:	cmp	r2, #0
   124cc:	bne	1287c <close@plt+0x1940>
   124d0:	eor	r7, r7, #1
   124d4:	ands	r3, r3, r7
   124d8:	beq	130a0 <close@plt+0x2164>
   124dc:	ldr	r2, [sp, #68]	; 0x44
   124e0:	cmp	r2, #0
   124e4:	beq	13068 <close@plt+0x212c>
   124e8:	ldr	r3, [sp, #72]	; 0x48
   124ec:	cmp	r3, #0
   124f0:	beq	1303c <close@plt+0x2100>
   124f4:	ldr	r2, [sp, #48]	; 0x30
   124f8:	ldr	r3, [sp, #160]	; 0xa0
   124fc:	ldr	r1, [sp, #60]	; 0x3c
   12500:	str	r3, [sp, #16]
   12504:	ldr	r3, [sp, #156]	; 0x9c
   12508:	str	r3, [sp, #12]
   1250c:	ldr	r3, [sp, #152]	; 0x98
   12510:	str	r3, [sp, #8]
   12514:	ldr	r3, [sp, #148]	; 0x94
   12518:	str	r3, [sp, #4]
   1251c:	mov	r3, #5
   12520:	str	r3, [sp]
   12524:	ldr	r3, [sp, #40]	; 0x28
   12528:	mov	r0, r8
   1252c:	bl	123e4 <close@plt+0x14a8>
   12530:	mov	r4, r0
   12534:	b	13094 <close@plt+0x2158>
   12538:	ldr	r3, [pc, #2948]	; 130c4 <close@plt+0x2188>
   1253c:	mov	r7, #1
   12540:	mov	r4, #0
   12544:	mov	sl, #5
   12548:	str	r7, [sp, #24]
   1254c:	str	r7, [sp, #32]
   12550:	str	r3, [sp, #44]	; 0x2c
   12554:	b	12470 <close@plt+0x1534>
   12558:	cmp	r7, #0
   1255c:	bne	126a0 <close@plt+0x1764>
   12560:	cmp	r5, #0
   12564:	mov	r4, #1
   12568:	movne	r3, #34	; 0x22
   1256c:	strbne	r3, [r8]
   12570:	mov	r3, #1
   12574:	str	r3, [sp, #24]
   12578:	str	r3, [sp, #32]
   1257c:	ldr	r3, [pc, #2880]	; 130c4 <close@plt+0x2188>
   12580:	str	r3, [sp, #44]	; 0x2c
   12584:	b	12470 <close@plt+0x1534>
   12588:	cmp	sl, #10
   1258c:	beq	125b0 <close@plt+0x1674>
   12590:	mov	r1, sl
   12594:	ldr	r0, [pc, #2860]	; 130c8 <close@plt+0x218c>
   12598:	bl	122b0 <close@plt+0x1374>
   1259c:	mov	r1, sl
   125a0:	str	r0, [sp, #156]	; 0x9c
   125a4:	ldr	r0, [pc, #2848]	; 130cc <close@plt+0x2190>
   125a8:	bl	122b0 <close@plt+0x1374>
   125ac:	str	r0, [sp, #160]	; 0xa0
   125b0:	cmp	r7, #0
   125b4:	moveq	r4, r7
   125b8:	beq	125d0 <close@plt+0x1694>
   125bc:	mov	r4, #0
   125c0:	b	125e0 <close@plt+0x16a4>
   125c4:	cmp	r5, r4
   125c8:	strbhi	r3, [r8, r4]
   125cc:	add	r4, r4, #1
   125d0:	ldr	r3, [sp, #156]	; 0x9c
   125d4:	ldrb	r3, [r3, r4]
   125d8:	cmp	r3, #0
   125dc:	bne	125c4 <close@plt+0x1688>
   125e0:	ldr	r0, [sp, #160]	; 0xa0
   125e4:	bl	10e58 <strlen@plt>
   125e8:	ldr	r3, [sp, #160]	; 0xa0
   125ec:	str	r0, [sp, #32]
   125f0:	str	r3, [sp, #44]	; 0x2c
   125f4:	mov	r3, #1
   125f8:	str	r3, [sp, #24]
   125fc:	b	12470 <close@plt+0x1534>
   12600:	mov	r3, #1
   12604:	cmp	r7, #0
   12608:	streq	r3, [sp, #24]
   1260c:	beq	12650 <close@plt+0x1714>
   12610:	str	r3, [sp, #32]
   12614:	b	1263c <close@plt+0x1700>
   12618:	cmp	r7, #0
   1261c:	beq	12650 <close@plt+0x1714>
   12620:	mov	r3, #1
   12624:	str	r3, [sp, #32]
   12628:	ldr	r3, [pc, #2716]	; 130cc <close@plt+0x2190>
   1262c:	b	126b0 <close@plt+0x1774>
   12630:	mov	r7, #1
   12634:	str	r7, [sp, #24]
   12638:	str	r7, [sp, #32]
   1263c:	ldr	r3, [pc, #2696]	; 130cc <close@plt+0x2190>
   12640:	mov	r4, #0
   12644:	str	r3, [sp, #44]	; 0x2c
   12648:	mov	sl, #2
   1264c:	b	12470 <close@plt+0x1534>
   12650:	cmp	r5, #0
   12654:	movne	r3, #39	; 0x27
   12658:	movne	r7, #0
   1265c:	strbne	r3, [r8]
   12660:	moveq	r7, r5
   12664:	mov	r3, #1
   12668:	mov	r4, #1
   1266c:	str	r3, [sp, #32]
   12670:	ldr	r3, [pc, #2644]	; 130cc <close@plt+0x2190>
   12674:	str	r3, [sp, #44]	; 0x2c
   12678:	b	12648 <close@plt+0x170c>
   1267c:	bl	10f24 <abort@plt>
   12680:	mov	r3, #1
   12684:	mov	r7, #0
   12688:	str	r3, [sp, #24]
   1268c:	mov	r4, #0
   12690:	b	12470 <close@plt+0x1534>
   12694:	mov	r7, #1
   12698:	str	sl, [sp, #32]
   1269c:	b	1263c <close@plt+0x1700>
   126a0:	mov	r3, #1
   126a4:	str	r7, [sp, #24]
   126a8:	str	r3, [sp, #32]
   126ac:	ldr	r3, [pc, #2576]	; 130c4 <close@plt+0x2188>
   126b0:	str	r3, [sp, #44]	; 0x2c
   126b4:	b	1268c <close@plt+0x1750>
   126b8:	ldr	fp, [sp, #24]
   126bc:	ldr	r3, [sp, #32]
   126c0:	cmp	sl, #2
   126c4:	moveq	fp, #0
   126c8:	andne	fp, fp, #1
   126cc:	adds	r5, r3, #0
   126d0:	movne	r5, #1
   126d4:	ands	r3, fp, r5
   126d8:	str	r3, [sp, #64]	; 0x40
   126dc:	beq	127ac <close@plt+0x1870>
   126e0:	ldr	r3, [sp, #28]
   126e4:	ldr	r2, [sp, #32]
   126e8:	cmp	r2, #1
   126ec:	add	r6, r3, r2
   126f0:	mov	r3, r2
   126f4:	ldr	r2, [sp, #40]	; 0x28
   126f8:	movls	r3, #0
   126fc:	movhi	r3, #1
   12700:	cmn	r2, #1
   12704:	movne	r3, #0
   12708:	cmp	r3, #0
   1270c:	beq	1271c <close@plt+0x17e0>
   12710:	ldr	r0, [sp, #48]	; 0x30
   12714:	bl	10e58 <strlen@plt>
   12718:	str	r0, [sp, #40]	; 0x28
   1271c:	ldr	r3, [sp, #40]	; 0x28
   12720:	cmp	r6, r3
   12724:	bhi	127a4 <close@plt+0x1868>
   12728:	ldr	r0, [sp, #28]
   1272c:	ldr	r2, [sp, #32]
   12730:	ldr	r3, [sp, #48]	; 0x30
   12734:	ldr	r1, [sp, #44]	; 0x2c
   12738:	add	r0, r3, r0
   1273c:	bl	10d5c <memcmp@plt>
   12740:	cmp	r0, #0
   12744:	bne	127a4 <close@plt+0x1868>
   12748:	cmp	r7, #0
   1274c:	beq	127ac <close@plt+0x1870>
   12750:	str	r7, [sp, #24]
   12754:	ldr	r3, [sp, #24]
   12758:	mov	r1, r9
   1275c:	ldr	r2, [sp, #48]	; 0x30
   12760:	cmp	sl, #2
   12764:	movne	r3, #0
   12768:	andeq	r3, r3, #1
   1276c:	cmp	r3, #0
   12770:	ldr	r3, [sp, #160]	; 0xa0
   12774:	movne	sl, #4
   12778:	str	sl, [sp]
   1277c:	str	r3, [sp, #16]
   12780:	ldr	r3, [sp, #156]	; 0x9c
   12784:	str	r3, [sp, #12]
   12788:	mov	r3, #0
   1278c:	str	r3, [sp, #8]
   12790:	ldr	r3, [sp, #148]	; 0x94
   12794:	bic	r3, r3, #2
   12798:	str	r3, [sp, #4]
   1279c:	ldr	r3, [sp, #40]	; 0x28
   127a0:	b	12528 <close@plt+0x15ec>
   127a4:	mov	r3, #0
   127a8:	str	r3, [sp, #64]	; 0x40
   127ac:	ldr	r2, [sp, #28]
   127b0:	ldr	r3, [sp, #48]	; 0x30
   127b4:	add	r3, r3, r2
   127b8:	str	r3, [sp, #80]	; 0x50
   127bc:	ldr	r3, [sp, #48]	; 0x30
   127c0:	ldrb	r6, [r3, r2]
   127c4:	cmp	r6, #58	; 0x3a
   127c8:	bhi	1292c <close@plt+0x19f0>
   127cc:	cmp	r6, #43	; 0x2b
   127d0:	bcs	12aec <close@plt+0x1bb0>
   127d4:	cmp	r6, #32
   127d8:	beq	12b40 <close@plt+0x1c04>
   127dc:	bhi	12884 <close@plt+0x1948>
   127e0:	cmp	r6, #9
   127e4:	beq	12ce8 <close@plt+0x1dac>
   127e8:	bhi	12848 <close@plt+0x190c>
   127ec:	cmp	r6, #7
   127f0:	beq	12cf8 <close@plt+0x1dbc>
   127f4:	bhi	12d14 <close@plt+0x1dd8>
   127f8:	cmp	r6, #0
   127fc:	beq	12b5c <close@plt+0x1c20>
   12800:	ldr	r3, [sp, #76]	; 0x4c
   12804:	cmp	r3, #1
   12808:	bne	12d60 <close@plt+0x1e24>
   1280c:	bl	10e40 <__ctype_b_loc@plt>
   12810:	ldr	r2, [r0]
   12814:	sxth	r3, r6
   12818:	lsl	r3, r3, #1
   1281c:	ldrh	r5, [r2, r3]
   12820:	ldr	r3, [sp, #76]	; 0x4c
   12824:	ubfx	r5, r5, #14, #1
   12828:	str	r3, [sp, #56]	; 0x38
   1282c:	ldr	r3, [sp, #24]
   12830:	eor	fp, r5, #1
   12834:	and	fp, fp, r3
   12838:	ands	fp, fp, #255	; 0xff
   1283c:	beq	12a1c <close@plt+0x1ae0>
   12840:	mov	r5, #0
   12844:	b	12e0c <close@plt+0x1ed0>
   12848:	cmp	r6, #11
   1284c:	beq	12d1c <close@plt+0x1de0>
   12850:	bcc	12cf0 <close@plt+0x1db4>
   12854:	cmp	r6, #12
   12858:	beq	12d24 <close@plt+0x1de8>
   1285c:	cmp	r6, #13
   12860:	moveq	r3, #114	; 0x72
   12864:	bne	12800 <close@plt+0x18c4>
   12868:	cmp	sl, #2
   1286c:	movne	r2, #0
   12870:	andeq	r2, r7, #1
   12874:	cmp	r2, #0
   12878:	beq	12cfc <close@plt+0x1dc0>
   1287c:	mov	sl, #2
   12880:	b	12754 <close@plt+0x1818>
   12884:	cmp	r6, #37	; 0x25
   12888:	beq	12aec <close@plt+0x1bb0>
   1288c:	bhi	128a0 <close@plt+0x1964>
   12890:	cmp	r6, #35	; 0x23
   12894:	beq	12b34 <close@plt+0x1bf8>
   12898:	mov	r5, #0
   1289c:	b	12b44 <close@plt+0x1c08>
   128a0:	cmp	r6, #39	; 0x27
   128a4:	bne	12898 <close@plt+0x195c>
   128a8:	cmp	sl, #2
   128ac:	ldrne	r5, [sp, #36]	; 0x24
   128b0:	movne	r3, r5
   128b4:	strne	r3, [sp, #68]	; 0x44
   128b8:	bne	12c38 <close@plt+0x1cfc>
   128bc:	cmp	r7, #0
   128c0:	bne	12754 <close@plt+0x1818>
   128c4:	ldr	r3, [sp, #60]	; 0x3c
   128c8:	cmp	r9, #0
   128cc:	clz	r3, r3
   128d0:	lsr	r3, r3, #5
   128d4:	moveq	r3, #0
   128d8:	cmp	r3, #0
   128dc:	strne	r9, [sp, #60]	; 0x3c
   128e0:	movne	r9, #0
   128e4:	bne	128f4 <close@plt+0x19b8>
   128e8:	cmp	r9, r4
   128ec:	movhi	r3, #39	; 0x27
   128f0:	strbhi	r3, [r8, r4]
   128f4:	add	r3, r4, #1
   128f8:	ldr	r5, [sp, #36]	; 0x24
   128fc:	mov	fp, #0
   12900:	cmp	r3, r9
   12904:	movcc	r2, #92	; 0x5c
   12908:	str	fp, [sp, #52]	; 0x34
   1290c:	strbcc	r2, [r8, r3]
   12910:	add	r3, r4, #2
   12914:	add	r4, r4, #3
   12918:	cmp	r3, r9
   1291c:	str	r5, [sp, #68]	; 0x44
   12920:	movcc	r2, #39	; 0x27
   12924:	strbcc	r2, [r8, r3]
   12928:	b	12a1c <close@plt+0x1ae0>
   1292c:	cmp	r6, #94	; 0x5e
   12930:	beq	12898 <close@plt+0x195c>
   12934:	bhi	12af4 <close@plt+0x1bb8>
   12938:	cmp	r6, #90	; 0x5a
   1293c:	bhi	12ae0 <close@plt+0x1ba4>
   12940:	cmp	r6, #65	; 0x41
   12944:	bcs	12aec <close@plt+0x1bb0>
   12948:	cmp	r6, #62	; 0x3e
   1294c:	bls	12898 <close@plt+0x195c>
   12950:	cmp	r6, #63	; 0x3f
   12954:	bne	12800 <close@plt+0x18c4>
   12958:	cmp	sl, #2
   1295c:	beq	12c40 <close@plt+0x1d04>
   12960:	cmp	sl, #5
   12964:	movne	fp, #0
   12968:	bne	13010 <close@plt+0x20d4>
   1296c:	ldr	r3, [sp, #148]	; 0x94
   12970:	tst	r3, #4
   12974:	beq	12c48 <close@plt+0x1d0c>
   12978:	ldr	r3, [sp, #28]
   1297c:	add	r2, r3, #2
   12980:	ldr	r3, [sp, #40]	; 0x28
   12984:	cmp	r2, r3
   12988:	bcs	12c48 <close@plt+0x1d0c>
   1298c:	ldr	r1, [sp, #28]
   12990:	ldr	r3, [sp, #48]	; 0x30
   12994:	add	r3, r3, r1
   12998:	ldrb	r1, [r3, #1]
   1299c:	cmp	r1, #63	; 0x3f
   129a0:	bne	12c48 <close@plt+0x1d0c>
   129a4:	ldr	r3, [sp, #48]	; 0x30
   129a8:	ldrb	r6, [r3, r2]
   129ac:	sub	r3, r6, #33	; 0x21
   129b0:	uxtb	r3, r3
   129b4:	cmp	r3, #29
   129b8:	bhi	13018 <close@plt+0x20dc>
   129bc:	ldr	r0, [pc, #1804]	; 130d0 <close@plt+0x2194>
   129c0:	mov	r5, #1
   129c4:	ands	r5, r0, r5, lsl r3
   129c8:	beq	13020 <close@plt+0x20e4>
   129cc:	cmp	r7, #0
   129d0:	bne	12754 <close@plt+0x1818>
   129d4:	cmp	r9, r4
   129d8:	add	r3, r4, #1
   129dc:	str	r2, [sp, #28]
   129e0:	mov	r5, #0
   129e4:	strbhi	r1, [r8, r4]
   129e8:	cmp	r9, r3
   129ec:	mov	fp, r5
   129f0:	movhi	r1, #34	; 0x22
   129f4:	strbhi	r1, [r8, r3]
   129f8:	add	r3, r4, #2
   129fc:	cmp	r9, r3
   12a00:	movhi	r1, #34	; 0x22
   12a04:	strbhi	r1, [r8, r3]
   12a08:	add	r3, r4, #3
   12a0c:	add	r4, r4, #4
   12a10:	cmp	r9, r3
   12a14:	movhi	r1, #63	; 0x3f
   12a18:	strbhi	r1, [r8, r3]
   12a1c:	ldr	r3, [sp, #24]
   12a20:	eor	r3, r3, #1
   12a24:	cmp	sl, #2
   12a28:	orreq	r3, r3, #1
   12a2c:	eor	r3, r3, #1
   12a30:	orr	r3, r7, r3
   12a34:	tst	r3, #255	; 0xff
   12a38:	beq	12a64 <close@plt+0x1b28>
   12a3c:	ldr	r3, [sp, #152]	; 0x98
   12a40:	cmp	r3, #0
   12a44:	beq	12a64 <close@plt+0x1b28>
   12a48:	ldr	r1, [sp, #152]	; 0x98
   12a4c:	ubfx	r2, r6, #5, #8
   12a50:	and	r3, r6, #31
   12a54:	ldr	r2, [r1, r2, lsl #2]
   12a58:	lsr	r3, r2, r3
   12a5c:	tst	r3, #1
   12a60:	bne	12a70 <close@plt+0x1b34>
   12a64:	ldr	r3, [sp, #64]	; 0x40
   12a68:	cmp	r3, #0
   12a6c:	beq	12c68 <close@plt+0x1d2c>
   12a70:	sub	r3, sl, #2
   12a74:	cmp	r7, #0
   12a78:	clz	r3, r3
   12a7c:	lsr	r3, r3, #5
   12a80:	bne	12754 <close@plt+0x1818>
   12a84:	ldr	r2, [sp, #52]	; 0x34
   12a88:	eor	r2, r2, #1
   12a8c:	ands	r3, r3, r2
   12a90:	beq	12ac8 <close@plt+0x1b8c>
   12a94:	cmp	r9, r4
   12a98:	str	r3, [sp, #52]	; 0x34
   12a9c:	movhi	r2, #39	; 0x27
   12aa0:	strbhi	r2, [r8, r4]
   12aa4:	add	r2, r4, #1
   12aa8:	cmp	r9, r2
   12aac:	movhi	r1, #36	; 0x24
   12ab0:	strbhi	r1, [r8, r2]
   12ab4:	add	r2, r4, #2
   12ab8:	add	r4, r4, #3
   12abc:	cmp	r9, r2
   12ac0:	movhi	r1, #39	; 0x27
   12ac4:	strbhi	r1, [r8, r2]
   12ac8:	cmp	r9, r4
   12acc:	ldr	fp, [sp, #36]	; 0x24
   12ad0:	movhi	r3, #92	; 0x5c
   12ad4:	strbhi	r3, [r8, r4]
   12ad8:	add	r4, r4, #1
   12adc:	b	12c68 <close@plt+0x1d2c>
   12ae0:	cmp	r6, #92	; 0x5c
   12ae4:	beq	12c50 <close@plt+0x1d14>
   12ae8:	bls	12898 <close@plt+0x195c>
   12aec:	ldr	r5, [sp, #36]	; 0x24
   12af0:	b	12c38 <close@plt+0x1cfc>
   12af4:	cmp	r6, #122	; 0x7a
   12af8:	bhi	12b18 <close@plt+0x1bdc>
   12afc:	cmp	r6, #97	; 0x61
   12b00:	bcs	12aec <close@plt+0x1bb0>
   12b04:	cmp	r6, #95	; 0x5f
   12b08:	beq	12aec <close@plt+0x1bb0>
   12b0c:	cmp	r6, #96	; 0x60
   12b10:	bne	12800 <close@plt+0x18c4>
   12b14:	b	12898 <close@plt+0x195c>
   12b18:	cmp	r6, #124	; 0x7c
   12b1c:	beq	12898 <close@plt+0x195c>
   12b20:	bcc	12d2c <close@plt+0x1df0>
   12b24:	cmp	r6, #125	; 0x7d
   12b28:	beq	12d2c <close@plt+0x1df0>
   12b2c:	cmp	r6, #126	; 0x7e
   12b30:	bne	12800 <close@plt+0x18c4>
   12b34:	ldr	r3, [sp, #28]
   12b38:	cmp	r3, #0
   12b3c:	bne	12c48 <close@plt+0x1d0c>
   12b40:	ldr	r5, [sp, #36]	; 0x24
   12b44:	cmp	sl, #2
   12b48:	movne	fp, #0
   12b4c:	andeq	fp, r7, #1
   12b50:	cmp	fp, #0
   12b54:	beq	12a1c <close@plt+0x1ae0>
   12b58:	b	1287c <close@plt+0x1940>
   12b5c:	ldr	r3, [sp, #24]
   12b60:	cmp	r3, #0
   12b64:	beq	12c2c <close@plt+0x1cf0>
   12b68:	sub	r2, sl, #2
   12b6c:	cmp	r7, #0
   12b70:	clz	r2, r2
   12b74:	lsr	r2, r2, #5
   12b78:	bne	12750 <close@plt+0x1814>
   12b7c:	ldr	r3, [sp, #52]	; 0x34
   12b80:	eor	r3, r3, #1
   12b84:	ands	r2, r2, r3
   12b88:	moveq	r3, r4
   12b8c:	beq	12bc4 <close@plt+0x1c88>
   12b90:	cmp	r9, r4
   12b94:	str	r2, [sp, #52]	; 0x34
   12b98:	movhi	r3, #39	; 0x27
   12b9c:	strbhi	r3, [r8, r4]
   12ba0:	add	r3, r4, #1
   12ba4:	cmp	r9, r3
   12ba8:	movhi	r1, #36	; 0x24
   12bac:	strbhi	r1, [r8, r3]
   12bb0:	add	r3, r4, #2
   12bb4:	cmp	r9, r3
   12bb8:	movhi	r1, #39	; 0x27
   12bbc:	strbhi	r1, [r8, r3]
   12bc0:	add	r3, r4, #3
   12bc4:	cmp	r9, r3
   12bc8:	add	r4, r3, #1
   12bcc:	movhi	r2, #92	; 0x5c
   12bd0:	strbhi	r2, [r8, r3]
   12bd4:	cmp	fp, #0
   12bd8:	beq	13000 <close@plt+0x20c4>
   12bdc:	ldr	r2, [sp, #28]
   12be0:	ldr	r1, [sp, #40]	; 0x28
   12be4:	add	r2, r2, #1
   12be8:	cmp	r2, r1
   12bec:	bcs	12c24 <close@plt+0x1ce8>
   12bf0:	ldr	r1, [sp, #48]	; 0x30
   12bf4:	mov	r6, #48	; 0x30
   12bf8:	ldrb	r2, [r1, r2]
   12bfc:	sub	r2, r2, #48	; 0x30
   12c00:	cmp	r2, #9
   12c04:	bhi	13010 <close@plt+0x20d4>
   12c08:	cmp	r9, r4
   12c0c:	add	r2, r3, #2
   12c10:	strbhi	r6, [r8, r4]
   12c14:	cmp	r9, r2
   12c18:	add	r4, r3, #3
   12c1c:	movhi	r1, #48	; 0x30
   12c20:	strbhi	r1, [r8, r2]
   12c24:	mov	r5, #0
   12c28:	b	13008 <close@plt+0x20cc>
   12c2c:	ldr	r3, [sp, #148]	; 0x94
   12c30:	ands	r5, r3, #1
   12c34:	bne	12cbc <close@plt+0x1d80>
   12c38:	mov	fp, #0
   12c3c:	b	12a1c <close@plt+0x1ae0>
   12c40:	cmp	r7, #0
   12c44:	bne	12754 <close@plt+0x1818>
   12c48:	mov	r5, #0
   12c4c:	b	12c38 <close@plt+0x1cfc>
   12c50:	cmp	sl, #2
   12c54:	bne	12cc8 <close@plt+0x1d8c>
   12c58:	cmp	r7, #0
   12c5c:	bne	12754 <close@plt+0x1818>
   12c60:	mov	r5, r7
   12c64:	mov	fp, r7
   12c68:	ldr	r3, [sp, #52]	; 0x34
   12c6c:	eor	fp, fp, #1
   12c70:	tst	r3, fp
   12c74:	beq	12ca0 <close@plt+0x1d64>
   12c78:	cmp	r9, r4
   12c7c:	movhi	r3, #39	; 0x27
   12c80:	strbhi	r3, [r8, r4]
   12c84:	add	r3, r4, #1
   12c88:	add	r4, r4, #2
   12c8c:	cmp	r9, r3
   12c90:	movhi	r2, #39	; 0x27
   12c94:	strbhi	r2, [r8, r3]
   12c98:	mov	r3, #0
   12c9c:	str	r3, [sp, #52]	; 0x34
   12ca0:	cmp	r9, r4
   12ca4:	ldr	r3, [sp, #72]	; 0x48
   12ca8:	strbhi	r6, [r8, r4]
   12cac:	cmp	r5, #0
   12cb0:	add	r4, r4, #1
   12cb4:	moveq	r3, #0
   12cb8:	str	r3, [sp, #72]	; 0x48
   12cbc:	ldr	r3, [sp, #28]
   12cc0:	add	r3, r3, #1
   12cc4:	b	1247c <close@plt+0x1540>
   12cc8:	ldr	r3, [sp, #24]
   12ccc:	and	r3, r3, r7
   12cd0:	tst	r5, r3
   12cd4:	moveq	r3, r6
   12cd8:	beq	12868 <close@plt+0x192c>
   12cdc:	mov	fp, #0
   12ce0:	mov	r5, fp
   12ce4:	b	12c68 <close@plt+0x1d2c>
   12ce8:	mov	r3, #116	; 0x74
   12cec:	b	12868 <close@plt+0x192c>
   12cf0:	mov	r3, #110	; 0x6e
   12cf4:	b	12868 <close@plt+0x192c>
   12cf8:	mov	r3, #97	; 0x61
   12cfc:	ldr	r2, [sp, #24]
   12d00:	cmp	r2, #0
   12d04:	beq	12c48 <close@plt+0x1d0c>
   12d08:	mov	r6, r3
   12d0c:	mov	r5, #0
   12d10:	b	12a70 <close@plt+0x1b34>
   12d14:	mov	r3, #98	; 0x62
   12d18:	b	12cfc <close@plt+0x1dc0>
   12d1c:	mov	r3, #118	; 0x76
   12d20:	b	12cfc <close@plt+0x1dc0>
   12d24:	mov	r3, #102	; 0x66
   12d28:	b	12cfc <close@plt+0x1dc0>
   12d2c:	ldr	r3, [sp, #40]	; 0x28
   12d30:	cmn	r3, #1
   12d34:	bne	12d54 <close@plt+0x1e18>
   12d38:	ldr	r3, [sp, #48]	; 0x30
   12d3c:	ldrb	r3, [r3, #1]
   12d40:	adds	r3, r3, #0
   12d44:	movne	r3, #1
   12d48:	cmp	r3, #0
   12d4c:	bne	12c48 <close@plt+0x1d0c>
   12d50:	b	12b34 <close@plt+0x1bf8>
   12d54:	ldr	r3, [sp, #40]	; 0x28
   12d58:	subs	r3, r3, #1
   12d5c:	b	12d44 <close@plt+0x1e08>
   12d60:	mov	r3, #0
   12d64:	mov	r2, #0
   12d68:	strd	r2, [sp, #96]	; 0x60
   12d6c:	ldr	r3, [sp, #40]	; 0x28
   12d70:	cmn	r3, #1
   12d74:	bne	12d84 <close@plt+0x1e48>
   12d78:	ldr	r0, [sp, #48]	; 0x30
   12d7c:	bl	10e58 <strlen@plt>
   12d80:	str	r0, [sp, #40]	; 0x28
   12d84:	ldr	r5, [sp, #36]	; 0x24
   12d88:	mov	r3, #0
   12d8c:	str	r3, [sp, #56]	; 0x38
   12d90:	ldr	r3, [sp, #28]
   12d94:	add	r0, sp, #92	; 0x5c
   12d98:	ldr	r1, [sp, #40]	; 0x28
   12d9c:	ldr	r2, [sp, #56]	; 0x38
   12da0:	add	r2, r3, r2
   12da4:	ldr	r3, [sp, #48]	; 0x30
   12da8:	add	fp, r3, r2
   12dac:	sub	r2, r1, r2
   12db0:	add	r3, sp, #96	; 0x60
   12db4:	mov	r1, fp
   12db8:	bl	14570 <close@plt+0x3634>
   12dbc:	subs	r2, r0, #0
   12dc0:	beq	12e00 <close@plt+0x1ec4>
   12dc4:	cmn	r2, #1
   12dc8:	beq	12fd4 <close@plt+0x2098>
   12dcc:	cmn	r2, #2
   12dd0:	bne	12f44 <close@plt+0x2008>
   12dd4:	ldr	r3, [sp, #28]
   12dd8:	ldr	r2, [sp, #56]	; 0x38
   12ddc:	add	r3, r3, r2
   12de0:	ldr	r2, [sp, #40]	; 0x28
   12de4:	cmp	r2, r3
   12de8:	bls	12fd4 <close@plt+0x2098>
   12dec:	ldr	r2, [sp, #56]	; 0x38
   12df0:	ldr	r3, [sp, #80]	; 0x50
   12df4:	ldrb	r5, [r3, r2]
   12df8:	cmp	r5, #0
   12dfc:	bne	12f34 <close@plt+0x1ff8>
   12e00:	ldr	r3, [sp, #56]	; 0x38
   12e04:	cmp	r3, #1
   12e08:	bls	1282c <close@plt+0x18f0>
   12e0c:	ldr	r3, [sp, #28]
   12e10:	mov	fp, #0
   12e14:	mov	ip, #92	; 0x5c
   12e18:	ldr	r2, [sp, #56]	; 0x38
   12e1c:	add	r3, r3, r2
   12e20:	ldr	r2, [sp, #24]
   12e24:	str	r3, [sp, #36]	; 0x24
   12e28:	eor	r3, r5, #1
   12e2c:	and	r3, r3, r2
   12e30:	mov	r2, #39	; 0x27
   12e34:	uxtb	r3, r3
   12e38:	cmp	r3, #0
   12e3c:	beq	12fdc <close@plt+0x20a0>
   12e40:	sub	r0, sl, #2
   12e44:	cmp	r7, #0
   12e48:	clz	r0, r0
   12e4c:	lsr	r0, r0, #5
   12e50:	bne	12750 <close@plt+0x1814>
   12e54:	ldr	r1, [sp, #52]	; 0x34
   12e58:	eor	r1, r1, #1
   12e5c:	ands	r1, r0, r1
   12e60:	beq	12e90 <close@plt+0x1f54>
   12e64:	cmp	r9, r4
   12e68:	add	r0, r4, #1
   12e6c:	str	r1, [sp, #52]	; 0x34
   12e70:	strbhi	r2, [r8, r4]
   12e74:	cmp	r9, r0
   12e78:	movhi	lr, #36	; 0x24
   12e7c:	strbhi	lr, [r8, r0]
   12e80:	add	r0, r4, #2
   12e84:	add	r4, r4, #3
   12e88:	cmp	r9, r0
   12e8c:	strbhi	r2, [r8, r0]
   12e90:	cmp	r9, r4
   12e94:	add	r0, r4, #1
   12e98:	mov	fp, r3
   12e9c:	strbhi	ip, [r8, r4]
   12ea0:	cmp	r9, r0
   12ea4:	lsrhi	r1, r6, #6
   12ea8:	addhi	r1, r1, #48	; 0x30
   12eac:	strbhi	r1, [r8, r0]
   12eb0:	add	r0, r4, #2
   12eb4:	add	r4, r4, #3
   12eb8:	cmp	r9, r0
   12ebc:	ubfxhi	r1, r6, #3, #3
   12ec0:	and	r6, r6, #7
   12ec4:	add	r6, r6, #48	; 0x30
   12ec8:	addhi	r1, r1, #48	; 0x30
   12ecc:	strbhi	r1, [r8, r0]
   12ed0:	eor	r0, fp, #1
   12ed4:	ldr	r1, [sp, #28]
   12ed8:	ldr	lr, [sp, #52]	; 0x34
   12edc:	add	r1, r1, #1
   12ee0:	and	r0, r0, lr
   12ee4:	ldr	lr, [sp, #36]	; 0x24
   12ee8:	cmp	r1, lr
   12eec:	bcs	12c68 <close@plt+0x1d2c>
   12ef0:	cmp	r0, #0
   12ef4:	beq	12f18 <close@plt+0x1fdc>
   12ef8:	cmp	r9, r4
   12efc:	add	r0, r4, #1
   12f00:	strbhi	r2, [r8, r4]
   12f04:	cmp	r9, r0
   12f08:	add	r4, r4, #2
   12f0c:	strbhi	r2, [r8, r0]
   12f10:	mov	r0, #0
   12f14:	str	r0, [sp, #52]	; 0x34
   12f18:	ldr	r0, [sp, #48]	; 0x30
   12f1c:	cmp	r9, r4
   12f20:	str	r1, [sp, #28]
   12f24:	strbhi	r6, [r8, r4]
   12f28:	add	r4, r4, #1
   12f2c:	ldrb	r6, [r0, r1]
   12f30:	b	12e38 <close@plt+0x1efc>
   12f34:	ldr	r3, [sp, #56]	; 0x38
   12f38:	add	r3, r3, #1
   12f3c:	str	r3, [sp, #56]	; 0x38
   12f40:	b	12dd4 <close@plt+0x1e98>
   12f44:	cmp	sl, #2
   12f48:	movne	r3, #0
   12f4c:	andeq	r3, r7, #1
   12f50:	cmp	r3, #0
   12f54:	movne	r1, #1
   12f58:	bne	12fb4 <close@plt+0x2078>
   12f5c:	ldr	r0, [sp, #92]	; 0x5c
   12f60:	str	r2, [sp, #84]	; 0x54
   12f64:	bl	10da4 <iswprint@plt>
   12f68:	ldr	r3, [sp, #56]	; 0x38
   12f6c:	cmp	r0, #0
   12f70:	add	r0, sp, #96	; 0x60
   12f74:	moveq	r5, #0
   12f78:	ldr	r2, [sp, #84]	; 0x54
   12f7c:	add	r3, r3, r2
   12f80:	str	r3, [sp, #56]	; 0x38
   12f84:	bl	10d44 <mbsinit@plt>
   12f88:	cmp	r0, #0
   12f8c:	beq	12d90 <close@plt+0x1e54>
   12f90:	b	12e00 <close@plt+0x1ec4>
   12f94:	ldrb	r3, [fp, #1]!
   12f98:	cmp	r3, #94	; 0x5e
   12f9c:	beq	1287c <close@plt+0x1940>
   12fa0:	bhi	12fc0 <close@plt+0x2084>
   12fa4:	sub	r3, r3, #91	; 0x5b
   12fa8:	cmp	r3, #1
   12fac:	bls	1287c <close@plt+0x1940>
   12fb0:	add	r1, r1, #1
   12fb4:	cmp	r1, r2
   12fb8:	bne	12f94 <close@plt+0x2058>
   12fbc:	b	12f5c <close@plt+0x2020>
   12fc0:	cmp	r3, #96	; 0x60
   12fc4:	beq	1287c <close@plt+0x1940>
   12fc8:	cmp	r3, #124	; 0x7c
   12fcc:	bne	12fb0 <close@plt+0x2074>
   12fd0:	b	1287c <close@plt+0x1940>
   12fd4:	mov	r5, #0
   12fd8:	b	12e00 <close@plt+0x1ec4>
   12fdc:	ldr	r1, [sp, #64]	; 0x40
   12fe0:	cmp	r1, #0
   12fe4:	beq	12ed0 <close@plt+0x1f94>
   12fe8:	cmp	r9, r4
   12fec:	mov	r1, #0
   12ff0:	strbhi	ip, [r8, r4]
   12ff4:	add	r4, r4, #1
   12ff8:	str	r1, [sp, #64]	; 0x40
   12ffc:	b	12ed0 <close@plt+0x1f94>
   13000:	mov	r5, fp
   13004:	ldr	fp, [sp, #24]
   13008:	mov	r6, #48	; 0x30
   1300c:	b	12a1c <close@plt+0x1ae0>
   13010:	mov	r5, #0
   13014:	b	12a1c <close@plt+0x1ae0>
   13018:	mov	r6, r1
   1301c:	b	12c48 <close@plt+0x1d0c>
   13020:	mov	r6, r1
   13024:	b	12c38 <close@plt+0x1cfc>
   13028:	ldr	r2, [sp, #28]
   1302c:	ldr	r3, [sp, #40]	; 0x28
   13030:	subs	r3, r3, r2
   13034:	movne	r3, #1
   13038:	b	124a0 <close@plt+0x1564>
   1303c:	ldr	r3, [sp, #60]	; 0x3c
   13040:	mov	sl, #2
   13044:	ldr	r7, [sp, #72]	; 0x48
   13048:	adds	r6, r3, #0
   1304c:	mov	r5, r3
   13050:	movne	r6, #1
   13054:	cmp	r9, #0
   13058:	movne	r6, #0
   1305c:	cmp	r6, #0
   13060:	bne	12430 <close@plt+0x14f4>
   13064:	ldr	r3, [sp, #68]	; 0x44
   13068:	ldr	r2, [sp, #44]	; 0x2c
   1306c:	cmp	r2, #0
   13070:	moveq	r3, #0
   13074:	andne	r3, r3, #1
   13078:	cmp	r3, #0
   1307c:	movne	r3, r2
   13080:	subne	r3, r3, #1
   13084:	bne	130b4 <close@plt+0x2178>
   13088:	cmp	r9, r4
   1308c:	movhi	r3, #0
   13090:	strbhi	r3, [r8, r4]
   13094:	mov	r0, r4
   13098:	add	sp, sp, #108	; 0x6c
   1309c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   130a0:	mov	r3, r7
   130a4:	b	13068 <close@plt+0x212c>
   130a8:	cmp	r9, r4
   130ac:	strbhi	r2, [r8, r4]
   130b0:	add	r4, r4, #1
   130b4:	ldrb	r2, [r3, #1]!
   130b8:	cmp	r2, #0
   130bc:	bne	130a8 <close@plt+0x216c>
   130c0:	b	13088 <close@plt+0x214c>
   130c4:	andeq	r5, r1, r4, lsr r2
   130c8:	andeq	r5, r1, r7, asr #4
   130cc:	andeq	r5, r1, r5, asr #4
   130d0:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   130d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   130d8:	sub	sp, sp, #52	; 0x34
   130dc:	mov	r6, r0
   130e0:	mov	r5, r3
   130e4:	mov	r8, r1
   130e8:	mov	r9, r2
   130ec:	bl	10e64 <__errno_location@plt>
   130f0:	ldr	r3, [r0]
   130f4:	cmn	r6, #-2147483647	; 0x80000001
   130f8:	str	r0, [sp, #24]
   130fc:	ldr	r7, [pc, #368]	; 13274 <close@plt+0x2338>
   13100:	str	r3, [sp, #32]
   13104:	movne	r3, #0
   13108:	moveq	r3, #1
   1310c:	orrs	r3, r3, r6, lsr #31
   13110:	ldr	r4, [r7]
   13114:	beq	1311c <close@plt+0x21e0>
   13118:	bl	10f24 <abort@plt>
   1311c:	ldr	r2, [r7, #4]
   13120:	cmp	r2, r6
   13124:	bgt	13194 <close@plt+0x2258>
   13128:	add	sl, r7, #8
   1312c:	mov	r3, #8
   13130:	cmp	r4, sl
   13134:	add	r1, sp, #44	; 0x2c
   13138:	str	r2, [sp, #44]	; 0x2c
   1313c:	sub	r2, r6, r2
   13140:	movne	r0, r4
   13144:	moveq	r0, #0
   13148:	add	r2, r2, #1
   1314c:	str	r3, [sp]
   13150:	mvn	r3, #-2147483648	; 0x80000000
   13154:	bl	13eb8 <close@plt+0x2f7c>
   13158:	cmp	r4, sl
   1315c:	mov	fp, r0
   13160:	str	r0, [r7]
   13164:	ldmeq	r4, {r0, r1}
   13168:	mov	r4, fp
   1316c:	ldr	r2, [sp, #44]	; 0x2c
   13170:	stmeq	fp, {r0, r1}
   13174:	mov	r1, #0
   13178:	ldr	r0, [r7, #4]
   1317c:	sub	r2, r2, r0
   13180:	add	r0, fp, r0, lsl #3
   13184:	lsl	r2, r2, #3
   13188:	bl	10e7c <memset@plt>
   1318c:	ldr	r3, [sp, #44]	; 0x2c
   13190:	str	r3, [r7, #4]
   13194:	ldr	r3, [r5, #4]
   13198:	add	sl, r4, r6, lsl #3
   1319c:	mov	r2, r8
   131a0:	ldr	fp, [r4, r6, lsl #3]
   131a4:	ldr	r7, [sl, #4]
   131a8:	orr	r3, r3, #1
   131ac:	str	r3, [sp, #28]
   131b0:	add	r3, r5, #8
   131b4:	mov	r1, fp
   131b8:	str	r3, [sp, #36]	; 0x24
   131bc:	mov	r0, r7
   131c0:	ldr	r3, [r5, #44]	; 0x2c
   131c4:	str	r3, [sp, #16]
   131c8:	ldr	r3, [r5, #40]	; 0x28
   131cc:	str	r3, [sp, #12]
   131d0:	add	r3, r5, #8
   131d4:	str	r3, [sp, #8]
   131d8:	ldr	r3, [sp, #28]
   131dc:	str	r3, [sp, #4]
   131e0:	ldr	r3, [r5]
   131e4:	str	r3, [sp]
   131e8:	mov	r3, r9
   131ec:	bl	123e4 <close@plt+0x14a8>
   131f0:	cmp	fp, r0
   131f4:	bhi	1325c <close@plt+0x2320>
   131f8:	ldr	r3, [pc, #120]	; 13278 <close@plt+0x233c>
   131fc:	add	fp, r0, #1
   13200:	str	fp, [r4, r6, lsl #3]
   13204:	cmp	r7, r3
   13208:	beq	13214 <close@plt+0x22d8>
   1320c:	mov	r0, r7
   13210:	bl	144c4 <close@plt+0x3588>
   13214:	mov	r0, fp
   13218:	bl	13da8 <close@plt+0x2e6c>
   1321c:	ldr	r3, [r5, #44]	; 0x2c
   13220:	mov	r2, r8
   13224:	mov	r1, fp
   13228:	str	r0, [sl, #4]
   1322c:	mov	r7, r0
   13230:	str	r3, [sp, #16]
   13234:	ldr	r3, [r5, #40]	; 0x28
   13238:	str	r3, [sp, #12]
   1323c:	add	r3, r5, #8
   13240:	str	r3, [sp, #8]
   13244:	ldr	r3, [sp, #28]
   13248:	str	r3, [sp, #4]
   1324c:	ldr	r3, [r5]
   13250:	str	r3, [sp]
   13254:	mov	r3, r9
   13258:	bl	123e4 <close@plt+0x14a8>
   1325c:	ldr	r3, [sp, #24]
   13260:	mov	r0, r7
   13264:	ldr	r2, [sp, #32]
   13268:	str	r2, [r3]
   1326c:	add	sp, sp, #52	; 0x34
   13270:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13274:	strdeq	r6, [r2], -ip
   13278:	andeq	r6, r2, r4, lsl #3
   1327c:	push	{r4, r5, r6, lr}
   13280:	mov	r5, r0
   13284:	bl	10e64 <__errno_location@plt>
   13288:	mov	r4, r0
   1328c:	cmp	r5, #0
   13290:	ldr	r0, [pc, #20]	; 132ac <close@plt+0x2370>
   13294:	mov	r1, #48	; 0x30
   13298:	movne	r0, r5
   1329c:	ldr	r6, [r4]
   132a0:	bl	13fa8 <close@plt+0x306c>
   132a4:	str	r6, [r4]
   132a8:	pop	{r4, r5, r6, pc}
   132ac:	andeq	r6, r2, r4, lsl #5
   132b0:	ldr	r3, [pc, #12]	; 132c4 <close@plt+0x2388>
   132b4:	cmp	r0, #0
   132b8:	moveq	r0, r3
   132bc:	ldr	r0, [r0]
   132c0:	bx	lr
   132c4:	andeq	r6, r2, r4, lsl #5
   132c8:	ldr	r3, [pc, #12]	; 132dc <close@plt+0x23a0>
   132cc:	cmp	r0, #0
   132d0:	moveq	r0, r3
   132d4:	str	r1, [r0]
   132d8:	bx	lr
   132dc:	andeq	r6, r2, r4, lsl #5
   132e0:	ldr	r3, [pc, #52]	; 1331c <close@plt+0x23e0>
   132e4:	cmp	r0, #0
   132e8:	push	{lr}		; (str lr, [sp, #-4]!)
   132ec:	lsr	lr, r1, #5
   132f0:	and	r1, r1, #31
   132f4:	moveq	r0, r3
   132f8:	add	r3, r0, #8
   132fc:	ldr	ip, [r3, lr, lsl #2]
   13300:	lsr	r0, ip, r1
   13304:	eor	r2, r2, r0
   13308:	and	r0, r0, #1
   1330c:	and	r2, r2, #1
   13310:	eor	r1, ip, r2, lsl r1
   13314:	str	r1, [r3, lr, lsl #2]
   13318:	pop	{pc}		; (ldr pc, [sp], #4)
   1331c:	andeq	r6, r2, r4, lsl #5
   13320:	ldr	r3, [pc, #16]	; 13338 <close@plt+0x23fc>
   13324:	cmp	r0, #0
   13328:	movne	r3, r0
   1332c:	ldr	r0, [r3, #4]
   13330:	str	r1, [r3, #4]
   13334:	bx	lr
   13338:	andeq	r6, r2, r4, lsl #5
   1333c:	ldr	r3, [pc, #44]	; 13370 <close@plt+0x2434>
   13340:	cmp	r0, #0
   13344:	moveq	r0, r3
   13348:	mov	r3, #10
   1334c:	cmp	r2, #0
   13350:	cmpne	r1, #0
   13354:	str	r3, [r0]
   13358:	bne	13364 <close@plt+0x2428>
   1335c:	push	{r4, lr}
   13360:	bl	10f24 <abort@plt>
   13364:	str	r1, [r0, #40]	; 0x28
   13368:	str	r2, [r0, #44]	; 0x2c
   1336c:	bx	lr
   13370:	andeq	r6, r2, r4, lsl #5
   13374:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13378:	sub	sp, sp, #24
   1337c:	mov	sl, r3
   13380:	mov	r7, r0
   13384:	mov	r8, r1
   13388:	mov	r9, r2
   1338c:	ldr	r4, [sp, #56]	; 0x38
   13390:	ldr	r3, [pc, #88]	; 133f0 <close@plt+0x24b4>
   13394:	cmp	r4, #0
   13398:	moveq	r4, r3
   1339c:	bl	10e64 <__errno_location@plt>
   133a0:	ldr	r3, [r4, #44]	; 0x2c
   133a4:	mov	r5, r0
   133a8:	mov	r2, r9
   133ac:	mov	r1, r8
   133b0:	mov	r0, r7
   133b4:	ldr	r6, [r5]
   133b8:	str	r3, [sp, #16]
   133bc:	ldr	r3, [r4, #40]	; 0x28
   133c0:	str	r3, [sp, #12]
   133c4:	add	r3, r4, #8
   133c8:	str	r3, [sp, #8]
   133cc:	ldr	r3, [r4, #4]
   133d0:	str	r3, [sp, #4]
   133d4:	ldr	r3, [r4]
   133d8:	str	r3, [sp]
   133dc:	mov	r3, sl
   133e0:	bl	123e4 <close@plt+0x14a8>
   133e4:	str	r6, [r5]
   133e8:	add	sp, sp, #24
   133ec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   133f0:	andeq	r6, r2, r4, lsl #5
   133f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   133f8:	cmp	r3, #0
   133fc:	sub	sp, sp, #44	; 0x2c
   13400:	mov	r6, r2
   13404:	mov	sl, r1
   13408:	mov	r9, r0
   1340c:	ldr	r4, [pc, #176]	; 134c4 <close@plt+0x2588>
   13410:	movne	r4, r3
   13414:	bl	10e64 <__errno_location@plt>
   13418:	ldr	r3, [r0]
   1341c:	mov	r1, #0
   13420:	mov	r2, r9
   13424:	mov	r8, r0
   13428:	mov	r0, r1
   1342c:	ldr	r5, [r4, #4]
   13430:	add	fp, r4, #8
   13434:	str	r3, [sp, #28]
   13438:	ldr	r3, [r4, #44]	; 0x2c
   1343c:	cmp	r6, #0
   13440:	orreq	r5, r5, #1
   13444:	str	r3, [sp, #16]
   13448:	ldr	r3, [r4, #40]	; 0x28
   1344c:	stmib	sp, {r5, fp}
   13450:	str	r3, [sp, #12]
   13454:	ldr	r3, [r4]
   13458:	str	r3, [sp]
   1345c:	mov	r3, sl
   13460:	bl	123e4 <close@plt+0x14a8>
   13464:	add	r1, r0, #1
   13468:	mov	r7, r0
   1346c:	mov	r0, r1
   13470:	str	r1, [sp, #36]	; 0x24
   13474:	bl	13da8 <close@plt+0x2e6c>
   13478:	ldr	r3, [r4, #44]	; 0x2c
   1347c:	mov	r2, r9
   13480:	ldr	r1, [sp, #36]	; 0x24
   13484:	str	r3, [sp, #16]
   13488:	ldr	r3, [r4, #40]	; 0x28
   1348c:	stmib	sp, {r5, fp}
   13490:	str	r0, [sp, #32]
   13494:	str	r3, [sp, #12]
   13498:	ldr	r3, [r4]
   1349c:	str	r3, [sp]
   134a0:	mov	r3, sl
   134a4:	bl	123e4 <close@plt+0x14a8>
   134a8:	ldr	r3, [sp, #28]
   134ac:	cmp	r6, #0
   134b0:	ldr	r0, [sp, #32]
   134b4:	str	r3, [r8]
   134b8:	strne	r7, [r6]
   134bc:	add	sp, sp, #44	; 0x2c
   134c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   134c4:	andeq	r6, r2, r4, lsl #5
   134c8:	mov	r3, r2
   134cc:	mov	r2, #0
   134d0:	b	133f4 <close@plt+0x24b8>
   134d4:	push	{r4, r5, r6, r7, r8, lr}
   134d8:	mov	r6, #1
   134dc:	ldr	r4, [pc, #100]	; 13548 <close@plt+0x260c>
   134e0:	ldr	r5, [r4]
   134e4:	add	r7, r5, #4
   134e8:	ldr	r3, [r4, #4]
   134ec:	cmp	r3, r6
   134f0:	bgt	13538 <close@plt+0x25fc>
   134f4:	ldr	r6, [pc, #80]	; 1354c <close@plt+0x2610>
   134f8:	ldr	r0, [r5, #4]
   134fc:	cmp	r0, r6
   13500:	beq	13514 <close@plt+0x25d8>
   13504:	bl	144c4 <close@plt+0x3588>
   13508:	mov	r3, #256	; 0x100
   1350c:	str	r3, [r4, #8]
   13510:	str	r6, [r4, #12]
   13514:	ldr	r6, [pc, #52]	; 13550 <close@plt+0x2614>
   13518:	cmp	r5, r6
   1351c:	beq	1352c <close@plt+0x25f0>
   13520:	mov	r0, r5
   13524:	bl	144c4 <close@plt+0x3588>
   13528:	str	r6, [r4]
   1352c:	mov	r3, #1
   13530:	str	r3, [r4, #4]
   13534:	pop	{r4, r5, r6, r7, r8, pc}
   13538:	ldr	r0, [r7, r6, lsl #3]
   1353c:	add	r6, r6, #1
   13540:	bl	144c4 <close@plt+0x3588>
   13544:	b	134e8 <close@plt+0x25ac>
   13548:	strdeq	r6, [r2], -ip
   1354c:	andeq	r6, r2, r4, lsl #3
   13550:	andeq	r6, r2, r4, lsl #2
   13554:	ldr	r3, [pc, #4]	; 13560 <close@plt+0x2624>
   13558:	mvn	r2, #0
   1355c:	b	130d4 <close@plt+0x2198>
   13560:	andeq	r6, r2, r4, lsl #5
   13564:	ldr	r3, [pc]	; 1356c <close@plt+0x2630>
   13568:	b	130d4 <close@plt+0x2198>
   1356c:	andeq	r6, r2, r4, lsl #5
   13570:	mov	r1, r0
   13574:	mov	r0, #0
   13578:	b	13554 <close@plt+0x2618>
   1357c:	mov	r2, r1
   13580:	mov	r1, r0
   13584:	mov	r0, #0
   13588:	b	13564 <close@plt+0x2628>
   1358c:	push	{r4, r5, lr}
   13590:	sub	sp, sp, #52	; 0x34
   13594:	mov	r5, r2
   13598:	mov	r4, r0
   1359c:	mov	r0, sp
   135a0:	bl	12288 <close@plt+0x134c>
   135a4:	mov	r3, sp
   135a8:	mvn	r2, #0
   135ac:	mov	r1, r5
   135b0:	mov	r0, r4
   135b4:	bl	130d4 <close@plt+0x2198>
   135b8:	add	sp, sp, #52	; 0x34
   135bc:	pop	{r4, r5, pc}
   135c0:	push	{r4, r5, r6, lr}
   135c4:	sub	sp, sp, #48	; 0x30
   135c8:	mov	r5, r2
   135cc:	mov	r6, r3
   135d0:	mov	r4, r0
   135d4:	mov	r0, sp
   135d8:	bl	12288 <close@plt+0x134c>
   135dc:	mov	r3, sp
   135e0:	mov	r2, r6
   135e4:	mov	r1, r5
   135e8:	mov	r0, r4
   135ec:	bl	130d4 <close@plt+0x2198>
   135f0:	add	sp, sp, #48	; 0x30
   135f4:	pop	{r4, r5, r6, pc}
   135f8:	mov	r2, r1
   135fc:	mov	r1, r0
   13600:	mov	r0, #0
   13604:	b	1358c <close@plt+0x2650>
   13608:	mov	r3, r2
   1360c:	mov	r2, r1
   13610:	mov	r1, r0
   13614:	mov	r0, #0
   13618:	b	135c0 <close@plt+0x2684>
   1361c:	push	{r4, r5, r6, lr}
   13620:	mov	r4, r0
   13624:	mov	r5, r1
   13628:	mov	r6, r2
   1362c:	sub	sp, sp, #48	; 0x30
   13630:	mov	ip, sp
   13634:	ldr	lr, [pc, #64]	; 1367c <close@plt+0x2740>
   13638:	ldm	lr!, {r0, r1, r2, r3}
   1363c:	stmia	ip!, {r0, r1, r2, r3}
   13640:	ldm	lr!, {r0, r1, r2, r3}
   13644:	stmia	ip!, {r0, r1, r2, r3}
   13648:	ldm	lr, {r0, r1, r2, r3}
   1364c:	stm	ip, {r0, r1, r2, r3}
   13650:	mov	r1, r6
   13654:	mov	r2, #1
   13658:	mov	r0, sp
   1365c:	bl	132e0 <close@plt+0x23a4>
   13660:	mov	r3, sp
   13664:	mov	r2, r5
   13668:	mov	r1, r4
   1366c:	mov	r0, #0
   13670:	bl	130d4 <close@plt+0x2198>
   13674:	add	sp, sp, #48	; 0x30
   13678:	pop	{r4, r5, r6, pc}
   1367c:	andeq	r6, r2, r4, lsl #5
   13680:	mov	r2, r1
   13684:	mvn	r1, #0
   13688:	b	1361c <close@plt+0x26e0>
   1368c:	mov	r1, #58	; 0x3a
   13690:	b	13680 <close@plt+0x2744>
   13694:	mov	r2, #58	; 0x3a
   13698:	b	1361c <close@plt+0x26e0>
   1369c:	push	{r4, r5, lr}
   136a0:	sub	sp, sp, #100	; 0x64
   136a4:	mov	r4, r0
   136a8:	mov	r0, sp
   136ac:	mov	r5, r2
   136b0:	bl	12288 <close@plt+0x134c>
   136b4:	mov	ip, sp
   136b8:	add	lr, sp, #48	; 0x30
   136bc:	ldm	ip!, {r0, r1, r2, r3}
   136c0:	stmia	lr!, {r0, r1, r2, r3}
   136c4:	ldm	ip!, {r0, r1, r2, r3}
   136c8:	stmia	lr!, {r0, r1, r2, r3}
   136cc:	ldm	ip, {r0, r1, r2, r3}
   136d0:	stm	lr, {r0, r1, r2, r3}
   136d4:	mov	r2, #1
   136d8:	mov	r1, #58	; 0x3a
   136dc:	add	r0, sp, #48	; 0x30
   136e0:	bl	132e0 <close@plt+0x23a4>
   136e4:	add	r3, sp, #48	; 0x30
   136e8:	mvn	r2, #0
   136ec:	mov	r1, r5
   136f0:	mov	r0, r4
   136f4:	bl	130d4 <close@plt+0x2198>
   136f8:	add	sp, sp, #100	; 0x64
   136fc:	pop	{r4, r5, pc}
   13700:	push	{r4, r5, r6, r7, lr}
   13704:	mov	r4, r0
   13708:	mov	r6, r1
   1370c:	mov	r7, r2
   13710:	mov	r5, r3
   13714:	sub	sp, sp, #52	; 0x34
   13718:	ldr	lr, [pc, #68]	; 13764 <close@plt+0x2828>
   1371c:	mov	ip, sp
   13720:	ldm	lr!, {r0, r1, r2, r3}
   13724:	stmia	ip!, {r0, r1, r2, r3}
   13728:	ldm	lr!, {r0, r1, r2, r3}
   1372c:	stmia	ip!, {r0, r1, r2, r3}
   13730:	ldm	lr, {r0, r1, r2, r3}
   13734:	stm	ip, {r0, r1, r2, r3}
   13738:	mov	r2, r7
   1373c:	mov	r1, r6
   13740:	mov	r0, sp
   13744:	bl	1333c <close@plt+0x2400>
   13748:	ldr	r2, [sp, #72]	; 0x48
   1374c:	mov	r3, sp
   13750:	mov	r1, r5
   13754:	mov	r0, r4
   13758:	bl	130d4 <close@plt+0x2198>
   1375c:	add	sp, sp, #52	; 0x34
   13760:	pop	{r4, r5, r6, r7, pc}
   13764:	andeq	r6, r2, r4, lsl #5
   13768:	mvn	ip, #0
   1376c:	push	{r0, r1, r2, lr}
   13770:	str	ip, [sp]
   13774:	bl	13700 <close@plt+0x27c4>
   13778:	add	sp, sp, #12
   1377c:	pop	{pc}		; (ldr pc, [sp], #4)
   13780:	mov	r3, r2
   13784:	mov	r2, r1
   13788:	mov	r1, r0
   1378c:	mov	r0, #0
   13790:	b	13768 <close@plt+0x282c>
   13794:	push	{r0, r1, r2, lr}
   13798:	str	r3, [sp]
   1379c:	mov	r3, r2
   137a0:	mov	r2, r1
   137a4:	mov	r1, r0
   137a8:	mov	r0, #0
   137ac:	bl	13700 <close@plt+0x27c4>
   137b0:	add	sp, sp, #12
   137b4:	pop	{pc}		; (ldr pc, [sp], #4)
   137b8:	ldr	r3, [pc]	; 137c0 <close@plt+0x2884>
   137bc:	b	130d4 <close@plt+0x2198>
   137c0:	andeq	r6, r2, ip, lsl #2
   137c4:	mov	r2, r1
   137c8:	mov	r1, r0
   137cc:	mov	r0, #0
   137d0:	b	137b8 <close@plt+0x287c>
   137d4:	mvn	r2, #0
   137d8:	b	137b8 <close@plt+0x287c>
   137dc:	mov	r1, r0
   137e0:	mov	r0, #0
   137e4:	b	137d4 <close@plt+0x2898>
   137e8:	push	{r4, r5, r6, lr}
   137ec:	mov	r5, r1
   137f0:	mov	r1, #0
   137f4:	mov	r4, r2
   137f8:	bl	10ed0 <setlocale@plt>
   137fc:	subs	r6, r0, #0
   13800:	bne	13814 <close@plt+0x28d8>
   13804:	cmp	r4, #0
   13808:	mov	r0, #22
   1380c:	strbne	r6, [r5]
   13810:	pop	{r4, r5, r6, pc}
   13814:	bl	10e58 <strlen@plt>
   13818:	cmp	r4, r0
   1381c:	bls	13838 <close@plt+0x28fc>
   13820:	add	r2, r0, #1
   13824:	mov	r1, r6
   13828:	mov	r0, r5
   1382c:	bl	10d38 <memcpy@plt>
   13830:	mov	r0, #0
   13834:	pop	{r4, r5, r6, pc}
   13838:	cmp	r4, #0
   1383c:	beq	1385c <close@plt+0x2920>
   13840:	sub	r4, r4, #1
   13844:	mov	r1, r6
   13848:	mov	r2, r4
   1384c:	mov	r0, r5
   13850:	bl	10d38 <memcpy@plt>
   13854:	mov	r3, #0
   13858:	strb	r3, [r5, r4]
   1385c:	mov	r0, #34	; 0x22
   13860:	pop	{r4, r5, r6, pc}
   13864:	mov	r1, #0
   13868:	b	10ed0 <setlocale@plt>
   1386c:	mov	r2, #3
   13870:	mov	r1, #0
   13874:	b	14314 <close@plt+0x33d8>
   13878:	push	{r4, r5, r6, lr}
   1387c:	cmp	r1, #0
   13880:	sub	sp, sp, #32
   13884:	mov	r5, r0
   13888:	ldr	r4, [sp, #48]	; 0x30
   1388c:	ldr	r6, [sp, #52]	; 0x34
   13890:	beq	13944 <close@plt+0x2a08>
   13894:	strd	r2, [sp]
   13898:	mov	r3, r1
   1389c:	mov	r1, #1
   138a0:	ldr	r2, [pc, #856]	; 13c00 <close@plt+0x2cc4>
   138a4:	bl	10ea0 <__fprintf_chk@plt>
   138a8:	mov	r2, #5
   138ac:	ldr	r1, [pc, #848]	; 13c04 <close@plt+0x2cc8>
   138b0:	mov	r0, #0
   138b4:	bl	10d80 <dcgettext@plt>
   138b8:	movw	r3, #2022	; 0x7e6
   138bc:	ldr	r2, [pc, #836]	; 13c08 <close@plt+0x2ccc>
   138c0:	mov	r1, #1
   138c4:	str	r3, [sp]
   138c8:	mov	r3, r0
   138cc:	mov	r0, r5
   138d0:	bl	10ea0 <__fprintf_chk@plt>
   138d4:	mov	r1, r5
   138d8:	mov	r0, #10
   138dc:	bl	10d68 <fputc_unlocked@plt>
   138e0:	mov	r2, #5
   138e4:	ldr	r1, [pc, #800]	; 13c0c <close@plt+0x2cd0>
   138e8:	mov	r0, #0
   138ec:	bl	10d80 <dcgettext@plt>
   138f0:	mov	r2, r0
   138f4:	mov	r1, #1
   138f8:	ldr	r3, [pc, #784]	; 13c10 <close@plt+0x2cd4>
   138fc:	mov	r0, r5
   13900:	bl	10ea0 <__fprintf_chk@plt>
   13904:	mov	r1, r5
   13908:	mov	r0, #10
   1390c:	bl	10d68 <fputc_unlocked@plt>
   13910:	cmp	r6, #9
   13914:	ldrls	pc, [pc, r6, lsl #2]
   13918:	b	13bf4 <close@plt+0x2cb8>
   1391c:	andeq	r3, r1, r4, lsr sl
   13920:	andeq	r3, r1, ip, asr r9
   13924:	andeq	r3, r1, r8, lsl #19
   13928:			; <UNDEFINED> instruction: 0x000139bc
   1392c:	strdeq	r3, [r1], -r8
   13930:	andeq	r3, r1, ip, lsr sl
   13934:	andeq	r3, r1, r4, lsl #21
   13938:	ldrdeq	r3, [r1], -r4
   1393c:	andeq	r3, r1, ip, lsr #22
   13940:	andeq	r3, r1, ip, lsl #23
   13944:	mov	r1, #1
   13948:	str	r3, [sp]
   1394c:	mov	r3, r2
   13950:	ldr	r2, [pc, #700]	; 13c14 <close@plt+0x2cd8>
   13954:	bl	10ea0 <__fprintf_chk@plt>
   13958:	b	138a8 <close@plt+0x296c>
   1395c:	mov	r2, #5
   13960:	ldr	r1, [pc, #688]	; 13c18 <close@plt+0x2cdc>
   13964:	mov	r0, #0
   13968:	bl	10d80 <dcgettext@plt>
   1396c:	ldr	r3, [r4]
   13970:	mov	r2, r0
   13974:	mov	r1, #1
   13978:	mov	r0, r5
   1397c:	add	sp, sp, #32
   13980:	pop	{r4, r5, r6, lr}
   13984:	b	10ea0 <__fprintf_chk@plt>
   13988:	mov	r2, #5
   1398c:	ldr	r1, [pc, #648]	; 13c1c <close@plt+0x2ce0>
   13990:	mov	r0, #0
   13994:	bl	10d80 <dcgettext@plt>
   13998:	ldr	r3, [r4, #4]
   1399c:	mov	r2, r0
   139a0:	mov	r1, #1
   139a4:	mov	r0, r5
   139a8:	str	r3, [sp, #48]	; 0x30
   139ac:	ldr	r3, [r4]
   139b0:	add	sp, sp, #32
   139b4:	pop	{r4, r5, r6, lr}
   139b8:	b	10ea0 <__fprintf_chk@plt>
   139bc:	mov	r2, #5
   139c0:	ldr	r1, [pc, #600]	; 13c20 <close@plt+0x2ce4>
   139c4:	mov	r0, #0
   139c8:	bl	10d80 <dcgettext@plt>
   139cc:	ldr	r3, [r4, #8]
   139d0:	mov	r2, r0
   139d4:	mov	r1, #1
   139d8:	mov	r0, r5
   139dc:	str	r3, [sp, #52]	; 0x34
   139e0:	ldr	r3, [r4, #4]
   139e4:	str	r3, [sp, #48]	; 0x30
   139e8:	ldr	r3, [r4]
   139ec:	add	sp, sp, #32
   139f0:	pop	{r4, r5, r6, lr}
   139f4:	b	10ea0 <__fprintf_chk@plt>
   139f8:	mov	r2, #5
   139fc:	ldr	r1, [pc, #544]	; 13c24 <close@plt+0x2ce8>
   13a00:	mov	r0, #0
   13a04:	bl	10d80 <dcgettext@plt>
   13a08:	ldr	r3, [r4, #12]
   13a0c:	mov	r2, r0
   13a10:	mov	r1, #1
   13a14:	mov	r0, r5
   13a18:	str	r3, [sp, #8]
   13a1c:	ldr	r3, [r4, #8]
   13a20:	str	r3, [sp, #4]
   13a24:	ldr	r3, [r4, #4]
   13a28:	str	r3, [sp]
   13a2c:	ldr	r3, [r4]
   13a30:	bl	10ea0 <__fprintf_chk@plt>
   13a34:	add	sp, sp, #32
   13a38:	pop	{r4, r5, r6, pc}
   13a3c:	mov	r2, #5
   13a40:	ldr	r1, [pc, #480]	; 13c28 <close@plt+0x2cec>
   13a44:	mov	r0, #0
   13a48:	bl	10d80 <dcgettext@plt>
   13a4c:	ldr	r3, [r4, #16]
   13a50:	mov	r2, r0
   13a54:	mov	r1, #1
   13a58:	mov	r0, r5
   13a5c:	str	r3, [sp, #12]
   13a60:	ldr	r3, [r4, #12]
   13a64:	str	r3, [sp, #8]
   13a68:	ldr	r3, [r4, #8]
   13a6c:	str	r3, [sp, #4]
   13a70:	ldr	r3, [r4, #4]
   13a74:	str	r3, [sp]
   13a78:	ldr	r3, [r4]
   13a7c:	bl	10ea0 <__fprintf_chk@plt>
   13a80:	b	13a34 <close@plt+0x2af8>
   13a84:	mov	r2, #5
   13a88:	ldr	r1, [pc, #412]	; 13c2c <close@plt+0x2cf0>
   13a8c:	mov	r0, #0
   13a90:	bl	10d80 <dcgettext@plt>
   13a94:	ldr	r3, [r4, #20]
   13a98:	mov	r2, r0
   13a9c:	mov	r1, #1
   13aa0:	mov	r0, r5
   13aa4:	str	r3, [sp, #16]
   13aa8:	ldr	r3, [r4, #16]
   13aac:	str	r3, [sp, #12]
   13ab0:	ldr	r3, [r4, #12]
   13ab4:	str	r3, [sp, #8]
   13ab8:	ldr	r3, [r4, #8]
   13abc:	str	r3, [sp, #4]
   13ac0:	ldr	r3, [r4, #4]
   13ac4:	str	r3, [sp]
   13ac8:	ldr	r3, [r4]
   13acc:	bl	10ea0 <__fprintf_chk@plt>
   13ad0:	b	13a34 <close@plt+0x2af8>
   13ad4:	mov	r2, #5
   13ad8:	ldr	r1, [pc, #336]	; 13c30 <close@plt+0x2cf4>
   13adc:	mov	r0, #0
   13ae0:	bl	10d80 <dcgettext@plt>
   13ae4:	ldr	r3, [r4, #24]
   13ae8:	mov	r2, r0
   13aec:	mov	r1, #1
   13af0:	mov	r0, r5
   13af4:	str	r3, [sp, #20]
   13af8:	ldr	r3, [r4, #20]
   13afc:	str	r3, [sp, #16]
   13b00:	ldr	r3, [r4, #16]
   13b04:	str	r3, [sp, #12]
   13b08:	ldr	r3, [r4, #12]
   13b0c:	str	r3, [sp, #8]
   13b10:	ldr	r3, [r4, #8]
   13b14:	str	r3, [sp, #4]
   13b18:	ldr	r3, [r4, #4]
   13b1c:	str	r3, [sp]
   13b20:	ldr	r3, [r4]
   13b24:	bl	10ea0 <__fprintf_chk@plt>
   13b28:	b	13a34 <close@plt+0x2af8>
   13b2c:	mov	r2, #5
   13b30:	ldr	r1, [pc, #252]	; 13c34 <close@plt+0x2cf8>
   13b34:	mov	r0, #0
   13b38:	bl	10d80 <dcgettext@plt>
   13b3c:	ldr	r3, [r4, #28]
   13b40:	mov	r2, r0
   13b44:	mov	r1, #1
   13b48:	mov	r0, r5
   13b4c:	str	r3, [sp, #24]
   13b50:	ldr	r3, [r4, #24]
   13b54:	str	r3, [sp, #20]
   13b58:	ldr	r3, [r4, #20]
   13b5c:	str	r3, [sp, #16]
   13b60:	ldr	r3, [r4, #16]
   13b64:	str	r3, [sp, #12]
   13b68:	ldr	r3, [r4, #12]
   13b6c:	str	r3, [sp, #8]
   13b70:	ldr	r3, [r4, #8]
   13b74:	str	r3, [sp, #4]
   13b78:	ldr	r3, [r4, #4]
   13b7c:	str	r3, [sp]
   13b80:	ldr	r3, [r4]
   13b84:	bl	10ea0 <__fprintf_chk@plt>
   13b88:	b	13a34 <close@plt+0x2af8>
   13b8c:	ldr	r1, [pc, #164]	; 13c38 <close@plt+0x2cfc>
   13b90:	mov	r2, #5
   13b94:	mov	r0, #0
   13b98:	bl	10d80 <dcgettext@plt>
   13b9c:	ldr	r3, [r4, #32]
   13ba0:	mov	r2, r0
   13ba4:	mov	r1, #1
   13ba8:	mov	r0, r5
   13bac:	str	r3, [sp, #28]
   13bb0:	ldr	r3, [r4, #28]
   13bb4:	str	r3, [sp, #24]
   13bb8:	ldr	r3, [r4, #24]
   13bbc:	str	r3, [sp, #20]
   13bc0:	ldr	r3, [r4, #20]
   13bc4:	str	r3, [sp, #16]
   13bc8:	ldr	r3, [r4, #16]
   13bcc:	str	r3, [sp, #12]
   13bd0:	ldr	r3, [r4, #12]
   13bd4:	str	r3, [sp, #8]
   13bd8:	ldr	r3, [r4, #8]
   13bdc:	str	r3, [sp, #4]
   13be0:	ldr	r3, [r4, #4]
   13be4:	str	r3, [sp]
   13be8:	ldr	r3, [r4]
   13bec:	bl	10ea0 <__fprintf_chk@plt>
   13bf0:	b	13a34 <close@plt+0x2af8>
   13bf4:	mov	r2, #5
   13bf8:	ldr	r1, [pc, #60]	; 13c3c <close@plt+0x2d00>
   13bfc:	b	13b94 <close@plt+0x2c58>
   13c00:	muleq	r1, r5, r2
   13c04:	andeq	r5, r1, r8, lsr #5
   13c08:	andeq	r5, r1, r6, ror r5
   13c0c:	andeq	r5, r1, ip, lsr #5
   13c10:	andeq	r5, r1, r7, asr r3
   13c14:	andeq	r5, r1, r1, lsr #5
   13c18:	andeq	r5, r1, r9, ror r3
   13c1c:	andeq	r5, r1, r9, lsl #7
   13c20:	andeq	r5, r1, r0, lsr #7
   13c24:			; <UNDEFINED> instruction: 0x000153bc
   13c28:	ldrdeq	r5, [r1], -ip
   13c2c:	andeq	r5, r1, r0, lsl #8
   13c30:	andeq	r5, r1, r8, lsr #8
   13c34:	andeq	r5, r1, r4, asr r4
   13c38:	andeq	r5, r1, r4, lsl #9
   13c3c:			; <UNDEFINED> instruction: 0x000154b8
   13c40:	push	{r0, r1, r4, lr}
   13c44:	mov	ip, #0
   13c48:	ldr	lr, [sp, #16]
   13c4c:	ldr	r4, [lr, ip, lsl #2]
   13c50:	cmp	r4, #0
   13c54:	bne	13c6c <close@plt+0x2d30>
   13c58:	str	lr, [sp]
   13c5c:	str	ip, [sp, #4]
   13c60:	bl	13878 <close@plt+0x293c>
   13c64:	add	sp, sp, #8
   13c68:	pop	{r4, pc}
   13c6c:	add	ip, ip, #1
   13c70:	b	13c4c <close@plt+0x2d10>
   13c74:	push	{r4, r5, r6, lr}
   13c78:	sub	sp, sp, #48	; 0x30
   13c7c:	mov	ip, #0
   13c80:	add	lr, sp, #8
   13c84:	mov	r5, lr
   13c88:	ldr	r6, [sp, #64]	; 0x40
   13c8c:	ldr	r4, [r6, ip, lsl #2]
   13c90:	cmp	r4, #0
   13c94:	str	r4, [lr], #4
   13c98:	beq	13ca8 <close@plt+0x2d6c>
   13c9c:	add	ip, ip, #1
   13ca0:	cmp	ip, #10
   13ca4:	bne	13c8c <close@plt+0x2d50>
   13ca8:	stm	sp, {r5, ip}
   13cac:	bl	13878 <close@plt+0x293c>
   13cb0:	add	sp, sp, #48	; 0x30
   13cb4:	pop	{r4, r5, r6, pc}
   13cb8:	push	{r3}		; (str r3, [sp, #-4]!)
   13cbc:	push	{r0, r1, r2, r3, lr}
   13cc0:	add	r3, sp, #24
   13cc4:	str	r3, [sp]
   13cc8:	str	r3, [sp, #12]
   13ccc:	ldr	r3, [sp, #20]
   13cd0:	bl	13c74 <close@plt+0x2d38>
   13cd4:	add	sp, sp, #16
   13cd8:	pop	{lr}		; (ldr lr, [sp], #4)
   13cdc:	add	sp, sp, #4
   13ce0:	bx	lr
   13ce4:	ldr	r3, [pc, #116]	; 13d60 <close@plt+0x2e24>
   13ce8:	mov	r0, #10
   13cec:	push	{r4, lr}
   13cf0:	ldr	r1, [r3]
   13cf4:	bl	10d68 <fputc_unlocked@plt>
   13cf8:	mov	r2, #5
   13cfc:	ldr	r1, [pc, #96]	; 13d64 <close@plt+0x2e28>
   13d00:	mov	r0, #0
   13d04:	bl	10d80 <dcgettext@plt>
   13d08:	mov	r1, r0
   13d0c:	ldr	r2, [pc, #84]	; 13d68 <close@plt+0x2e2c>
   13d10:	mov	r0, #1
   13d14:	bl	10e88 <__printf_chk@plt>
   13d18:	mov	r2, #5
   13d1c:	ldr	r1, [pc, #72]	; 13d6c <close@plt+0x2e30>
   13d20:	mov	r0, #0
   13d24:	bl	10d80 <dcgettext@plt>
   13d28:	mov	r1, r0
   13d2c:	ldr	r3, [pc, #60]	; 13d70 <close@plt+0x2e34>
   13d30:	mov	r0, #1
   13d34:	ldr	r2, [pc, #56]	; 13d74 <close@plt+0x2e38>
   13d38:	bl	10e88 <__printf_chk@plt>
   13d3c:	mov	r2, #5
   13d40:	ldr	r1, [pc, #48]	; 13d78 <close@plt+0x2e3c>
   13d44:	mov	r0, #0
   13d48:	bl	10d80 <dcgettext@plt>
   13d4c:	mov	r1, r0
   13d50:	ldr	r2, [pc, #36]	; 13d7c <close@plt+0x2e40>
   13d54:	mov	r0, #1
   13d58:	pop	{r4, lr}
   13d5c:	b	10e88 <__printf_chk@plt>
   13d60:	andeq	r6, r2, ip, asr r1
   13d64:	strdeq	r5, [r1], -r4
   13d68:	andeq	r5, r1, r8, lsl #10
   13d6c:	andeq	r5, r1, lr, lsl r5
   13d70:	andeq	r4, r1, r0, lsr pc
   13d74:	andeq	r4, r1, r8, asr pc
   13d78:	andeq	r5, r1, r2, lsr r5
   13d7c:	andeq	r5, r1, r9, asr r5
   13d80:	push	{r4, lr}
   13d84:	bl	14234 <close@plt+0x32f8>
   13d88:	cmp	r0, #0
   13d8c:	popne	{r4, pc}
   13d90:	bl	14038 <close@plt+0x30fc>
   13d94:	push	{r4, lr}
   13d98:	bl	14234 <close@plt+0x32f8>
   13d9c:	cmp	r0, #0
   13da0:	popne	{r4, pc}
   13da4:	bl	14038 <close@plt+0x30fc>
   13da8:	b	13d80 <close@plt+0x2e44>
   13dac:	push	{r4, r5, r6, lr}
   13db0:	mov	r5, r0
   13db4:	mov	r4, r1
   13db8:	bl	14260 <close@plt+0x3324>
   13dbc:	cmp	r0, #0
   13dc0:	popne	{r4, r5, r6, pc}
   13dc4:	adds	r4, r4, #0
   13dc8:	movne	r4, #1
   13dcc:	cmp	r5, #0
   13dd0:	moveq	r4, #1
   13dd4:	cmp	r4, #0
   13dd8:	popeq	{r4, r5, r6, pc}
   13ddc:	bl	14038 <close@plt+0x30fc>
   13de0:	push	{r4, lr}
   13de4:	bl	14518 <close@plt+0x35dc>
   13de8:	cmp	r0, #0
   13dec:	popne	{r4, pc}
   13df0:	bl	14038 <close@plt+0x30fc>
   13df4:	push	{r4, r5, r6, lr}
   13df8:	mov	r6, r0
   13dfc:	mov	r5, r1
   13e00:	mov	r4, r2
   13e04:	bl	14714 <close@plt+0x37d8>
   13e08:	cmp	r0, #0
   13e0c:	popne	{r4, r5, r6, pc}
   13e10:	cmp	r6, #0
   13e14:	beq	13e24 <close@plt+0x2ee8>
   13e18:	cmp	r5, #0
   13e1c:	cmpne	r4, #0
   13e20:	popeq	{r4, r5, r6, pc}
   13e24:	bl	14038 <close@plt+0x30fc>
   13e28:	b	13df4 <close@plt+0x2eb8>
   13e2c:	push	{r4, lr}
   13e30:	bl	14528 <close@plt+0x35ec>
   13e34:	cmp	r0, #0
   13e38:	popne	{r4, pc}
   13e3c:	bl	14038 <close@plt+0x30fc>
   13e40:	mov	r2, r1
   13e44:	mov	r1, r0
   13e48:	mov	r0, #0
   13e4c:	b	13df4 <close@plt+0x2eb8>
   13e50:	mov	r2, r1
   13e54:	mov	r1, r0
   13e58:	mov	r0, #0
   13e5c:	b	13e2c <close@plt+0x2ef0>
   13e60:	cmp	r0, #0
   13e64:	push	{r4, r5, r6, lr}
   13e68:	mov	r5, r1
   13e6c:	ldr	r4, [r1]
   13e70:	bne	13e9c <close@plt+0x2f60>
   13e74:	cmp	r4, #0
   13e78:	bne	13e8c <close@plt+0x2f50>
   13e7c:	mov	r4, #64	; 0x40
   13e80:	udiv	r4, r4, r2
   13e84:	cmp	r2, #64	; 0x40
   13e88:	addhi	r4, r4, #1
   13e8c:	mov	r1, r4
   13e90:	bl	13df4 <close@plt+0x2eb8>
   13e94:	str	r4, [r5]
   13e98:	pop	{r4, r5, r6, pc}
   13e9c:	lsr	r3, r4, #1
   13ea0:	add	r3, r3, #1
   13ea4:	adds	r4, r4, r3
   13ea8:	bcc	13e8c <close@plt+0x2f50>
   13eac:	bl	14038 <close@plt+0x30fc>
   13eb0:	mov	r2, #1
   13eb4:	b	13e60 <close@plt+0x2f24>
   13eb8:	ldr	ip, [r1]
   13ebc:	push	{r4, r5, r6, r7, r8, lr}
   13ec0:	mov	r5, r1
   13ec4:	mvn	r8, r3
   13ec8:	lsr	r8, r8, #31
   13ecc:	ldr	lr, [sp, #24]
   13ed0:	asr	r1, ip, #1
   13ed4:	adds	r4, ip, r1
   13ed8:	mvnvs	r4, #-2147483648	; 0x80000000
   13edc:	cmp	r3, r4
   13ee0:	movge	r1, #0
   13ee4:	andlt	r1, r8, #1
   13ee8:	cmp	r1, #0
   13eec:	movne	r4, r3
   13ef0:	smull	r6, r7, r4, lr
   13ef4:	cmp	r7, r6, asr #31
   13ef8:	bne	13f10 <close@plt+0x2fd4>
   13efc:	cmp	r6, #63	; 0x3f
   13f00:	mov	r1, r6
   13f04:	bgt	13f20 <close@plt+0x2fe4>
   13f08:	mov	r1, #64	; 0x40
   13f0c:	b	13f14 <close@plt+0x2fd8>
   13f10:	mvn	r1, #-2147483648	; 0x80000000
   13f14:	sdiv	r4, r1, lr
   13f18:	mls	r6, lr, r4, r1
   13f1c:	sub	r1, r1, r6
   13f20:	cmp	r0, #0
   13f24:	sub	r6, r4, ip
   13f28:	streq	r0, [r5]
   13f2c:	cmp	r6, r2
   13f30:	bge	13f64 <close@plt+0x3028>
   13f34:	adds	r4, ip, r2
   13f38:	bvs	13f60 <close@plt+0x3024>
   13f3c:	cmp	r4, r3
   13f40:	movle	r3, #0
   13f44:	andgt	r3, r8, #1
   13f48:	cmp	r3, #0
   13f4c:	bne	13f60 <close@plt+0x3024>
   13f50:	smull	r2, r3, r4, lr
   13f54:	cmp	r3, r2, asr #31
   13f58:	mov	r1, r2
   13f5c:	beq	13f64 <close@plt+0x3028>
   13f60:	bl	14038 <close@plt+0x30fc>
   13f64:	bl	13dac <close@plt+0x2e70>
   13f68:	str	r4, [r5]
   13f6c:	pop	{r4, r5, r6, r7, r8, pc}
   13f70:	push	{r4, lr}
   13f74:	bl	141e0 <close@plt+0x32a4>
   13f78:	cmp	r0, #0
   13f7c:	popne	{r4, pc}
   13f80:	bl	14038 <close@plt+0x30fc>
   13f84:	mov	r1, #1
   13f88:	b	13f70 <close@plt+0x3034>
   13f8c:	push	{r4, lr}
   13f90:	bl	141e0 <close@plt+0x32a4>
   13f94:	cmp	r0, #0
   13f98:	popne	{r4, pc}
   13f9c:	bl	14038 <close@plt+0x30fc>
   13fa0:	mov	r1, #1
   13fa4:	b	13f8c <close@plt+0x3050>
   13fa8:	push	{r4, r5, r6, lr}
   13fac:	mov	r4, r1
   13fb0:	mov	r5, r0
   13fb4:	mov	r0, r1
   13fb8:	bl	13d80 <close@plt+0x2e44>
   13fbc:	mov	r2, r4
   13fc0:	mov	r1, r5
   13fc4:	pop	{r4, r5, r6, lr}
   13fc8:	b	10d38 <memcpy@plt>
   13fcc:	push	{r4, r5, r6, lr}
   13fd0:	mov	r4, r1
   13fd4:	mov	r5, r0
   13fd8:	mov	r0, r1
   13fdc:	bl	13d94 <close@plt+0x2e58>
   13fe0:	mov	r2, r4
   13fe4:	mov	r1, r5
   13fe8:	pop	{r4, r5, r6, lr}
   13fec:	b	10d38 <memcpy@plt>
   13ff0:	push	{r4, r5, r6, lr}
   13ff4:	mov	r5, r0
   13ff8:	add	r0, r1, #1
   13ffc:	mov	r4, r1
   14000:	bl	13d94 <close@plt+0x2e58>
   14004:	mov	r2, #0
   14008:	mov	r1, r5
   1400c:	strb	r2, [r0, r4]
   14010:	mov	r2, r4
   14014:	pop	{r4, r5, r6, lr}
   14018:	b	10d38 <memcpy@plt>
   1401c:	push	{r4, lr}
   14020:	mov	r4, r0
   14024:	bl	10e58 <strlen@plt>
   14028:	add	r1, r0, #1
   1402c:	mov	r0, r4
   14030:	pop	{r4, lr}
   14034:	b	13fa8 <close@plt+0x306c>
   14038:	ldr	r3, [pc, #44]	; 1406c <close@plt+0x3130>
   1403c:	mov	r2, #5
   14040:	mov	r0, #0
   14044:	push	{r4, lr}
   14048:	ldr	r1, [pc, #32]	; 14070 <close@plt+0x3134>
   1404c:	ldr	r4, [r3]
   14050:	bl	10d80 <dcgettext@plt>
   14054:	mov	r3, r0
   14058:	ldr	r2, [pc, #20]	; 14074 <close@plt+0x3138>
   1405c:	mov	r1, #0
   14060:	mov	r0, r4
   14064:	bl	10dec <error@plt>
   14068:	bl	10f24 <abort@plt>
   1406c:	strdeq	r6, [r2], -r8
   14070:	andeq	r5, r1, r5, lsr #11
   14074:	andeq	r5, r1, pc, lsl #3
   14078:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1407c:	mov	r4, r0
   14080:	mov	r6, r1
   14084:	mov	r9, r2
   14088:	mov	r0, #0
   1408c:	mov	r2, #5
   14090:	mov	r7, r3
   14094:	ldr	r1, [pc, #152]	; 14134 <close@plt+0x31f8>
   14098:	ldr	r8, [sp, #32]
   1409c:	bl	10d80 <dcgettext@plt>
   140a0:	mov	r2, r0
   140a4:	mov	r1, r4
   140a8:	mov	r0, #0
   140ac:	bl	10dec <error@plt>
   140b0:	mov	r2, #5
   140b4:	ldr	r1, [pc, #124]	; 14138 <close@plt+0x31fc>
   140b8:	mov	r0, #0
   140bc:	bl	10d80 <dcgettext@plt>
   140c0:	mov	r1, #0
   140c4:	mov	r2, r0
   140c8:	mov	r0, r1
   140cc:	bl	10dec <error@plt>
   140d0:	ldr	r3, [pc, #100]	; 1413c <close@plt+0x3200>
   140d4:	mov	r2, #5
   140d8:	mov	r0, #0
   140dc:	ldr	r1, [pc, #92]	; 14140 <close@plt+0x3204>
   140e0:	ldr	r4, [r3]
   140e4:	bl	10d80 <dcgettext@plt>
   140e8:	mov	r5, r0
   140ec:	mov	r3, r9
   140f0:	mov	r2, r6
   140f4:	mov	r1, #8
   140f8:	mov	r0, #0
   140fc:	bl	135c0 <close@plt+0x2684>
   14100:	mov	r6, r0
   14104:	mov	r3, r8
   14108:	mov	r2, r7
   1410c:	mov	r1, #8
   14110:	mov	r0, #1
   14114:	bl	135c0 <close@plt+0x2684>
   14118:	mov	r3, r6
   1411c:	mov	r2, r5
   14120:	str	r0, [sp, #32]
   14124:	mov	r1, #0
   14128:	mov	r0, r4
   1412c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   14130:	b	10dec <error@plt>
   14134:			; <UNDEFINED> instruction: 0x000155b6
   14138:	andeq	r5, r1, pc, asr #11
   1413c:	strdeq	r6, [r2], -r8
   14140:	strdeq	r5, [r1], -sl
   14144:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   14148:	mov	r6, r1
   1414c:	mov	r7, r2
   14150:	mov	r8, r3
   14154:	mov	r5, r0
   14158:	bl	14644 <close@plt+0x3708>
   1415c:	mov	r4, r0
   14160:	bl	10e64 <__errno_location@plt>
   14164:	ldr	r0, [r0]
   14168:	cmp	r0, #0
   1416c:	beq	14184 <close@plt+0x3248>
   14170:	mov	r3, r7
   14174:	mov	r2, r6
   14178:	str	r8, [sp]
   1417c:	mov	r1, r5
   14180:	bl	14078 <close@plt+0x313c>
   14184:	mov	r0, r4
   14188:	add	sp, sp, #8
   1418c:	pop	{r4, r5, r6, r7, r8, pc}
   14190:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   14194:	mov	r7, r1
   14198:	mov	r8, r2
   1419c:	mov	r4, r3
   141a0:	mov	r6, r0
   141a4:	bl	146bc <close@plt+0x3780>
   141a8:	mov	r5, r0
   141ac:	bl	10e64 <__errno_location@plt>
   141b0:	ldr	r0, [r0]
   141b4:	cmp	r0, #0
   141b8:	beq	141d4 <close@plt+0x3298>
   141bc:	sub	r4, r4, #1
   141c0:	mov	r3, r8
   141c4:	sub	r2, r7, #1
   141c8:	mov	r1, r6
   141cc:	str	r4, [sp]
   141d0:	bl	14078 <close@plt+0x313c>
   141d4:	mov	r0, r5
   141d8:	add	sp, sp, #8
   141dc:	pop	{r4, r5, r6, r7, r8, pc}
   141e0:	cmp	r1, #0
   141e4:	cmpne	r0, #0
   141e8:	beq	14220 <close@plt+0x32e4>
   141ec:	push	{r4, r5, r6, lr}
   141f0:	umull	r4, r5, r0, r1
   141f4:	adds	r3, r5, #0
   141f8:	movne	r3, #1
   141fc:	cmp	r4, #0
   14200:	blt	1420c <close@plt+0x32d0>
   14204:	cmp	r3, #0
   14208:	beq	1422c <close@plt+0x32f0>
   1420c:	bl	10e64 <__errno_location@plt>
   14210:	mov	r3, #12
   14214:	str	r3, [r0]
   14218:	mov	r0, #0
   1421c:	pop	{r4, r5, r6, pc}
   14220:	mov	r1, #1
   14224:	mov	r0, r1
   14228:	b	10cd8 <calloc@plt>
   1422c:	pop	{r4, r5, r6, lr}
   14230:	b	14228 <close@plt+0x32ec>
   14234:	cmp	r0, #0
   14238:	beq	14258 <close@plt+0x331c>
   1423c:	bge	1425c <close@plt+0x3320>
   14240:	push	{r4, lr}
   14244:	bl	10e64 <__errno_location@plt>
   14248:	mov	r3, #12
   1424c:	str	r3, [r0]
   14250:	mov	r0, #0
   14254:	pop	{r4, pc}
   14258:	mov	r0, #1
   1425c:	b	10e04 <malloc@plt>
   14260:	cmp	r0, #0
   14264:	bne	14270 <close@plt+0x3334>
   14268:	mov	r0, r1
   1426c:	b	14234 <close@plt+0x32f8>
   14270:	cmp	r1, #0
   14274:	push	{r4, lr}
   14278:	bne	14288 <close@plt+0x334c>
   1427c:	bl	144c4 <close@plt+0x3588>
   14280:	mov	r0, #0
   14284:	pop	{r4, pc}
   14288:	blt	14294 <close@plt+0x3358>
   1428c:	pop	{r4, lr}
   14290:	b	10d8c <realloc@plt>
   14294:	bl	10e64 <__errno_location@plt>
   14298:	mov	r3, #12
   1429c:	str	r3, [r0]
   142a0:	b	14280 <close@plt+0x3344>
   142a4:	push	{r4, r5, r6, lr}
   142a8:	mov	r4, r0
   142ac:	bl	10dc8 <__fpending@plt>
   142b0:	mov	r5, r0
   142b4:	mov	r0, r4
   142b8:	bl	10dd4 <ferror_unlocked@plt>
   142bc:	mov	r6, r0
   142c0:	mov	r0, r4
   142c4:	bl	11dbc <close@plt+0xe80>
   142c8:	cmp	r6, #0
   142cc:	mov	r4, r0
   142d0:	bne	142fc <close@plt+0x33c0>
   142d4:	cmp	r0, #0
   142d8:	beq	142f4 <close@plt+0x33b8>
   142dc:	cmp	r5, #0
   142e0:	bne	1430c <close@plt+0x33d0>
   142e4:	bl	10e64 <__errno_location@plt>
   142e8:	ldr	r4, [r0]
   142ec:	subs	r4, r4, #9
   142f0:	mvnne	r4, #0
   142f4:	mov	r0, r4
   142f8:	pop	{r4, r5, r6, pc}
   142fc:	cmp	r0, #0
   14300:	bne	1430c <close@plt+0x33d0>
   14304:	bl	10e64 <__errno_location@plt>
   14308:	str	r4, [r0]
   1430c:	mvn	r4, #0
   14310:	b	142f4 <close@plt+0x33b8>
   14314:	push	{r1, r2, r3}
   14318:	push	{r0, r1, r2, r4, r5, r6, r7, r8, lr}
   1431c:	add	r2, sp, #40	; 0x28
   14320:	ldr	r1, [sp, #36]	; 0x24
   14324:	str	r2, [sp, #4]
   14328:	cmp	r1, #0
   1432c:	beq	1437c <close@plt+0x3440>
   14330:	movw	r3, #1030	; 0x406
   14334:	mov	r5, r0
   14338:	cmp	r1, r3
   1433c:	beq	14388 <close@plt+0x344c>
   14340:	cmp	r1, #11
   14344:	beq	1436c <close@plt+0x3430>
   14348:	bgt	1447c <close@plt+0x3540>
   1434c:	cmp	r1, #4
   14350:	beq	14494 <close@plt+0x3558>
   14354:	bgt	14474 <close@plt+0x3538>
   14358:	cmp	r1, #2
   1435c:	beq	14494 <close@plt+0x3558>
   14360:	bgt	1436c <close@plt+0x3430>
   14364:	cmp	r1, #1
   14368:	bne	14494 <close@plt+0x3558>
   1436c:	mov	r0, r5
   14370:	bl	10ec4 <fcntl64@plt>
   14374:	mov	r4, r0
   14378:	b	143d0 <close@plt+0x3494>
   1437c:	ldr	r2, [sp, #40]	; 0x28
   14380:	bl	10ec4 <fcntl64@plt>
   14384:	b	14374 <close@plt+0x3438>
   14388:	ldr	r6, [pc, #304]	; 144c0 <close@plt+0x3584>
   1438c:	add	r3, sp, #44	; 0x2c
   14390:	str	r3, [sp, #4]
   14394:	ldr	r7, [r2]
   14398:	ldr	r3, [r6]
   1439c:	mov	r8, r6
   143a0:	mov	r2, r7
   143a4:	cmp	r3, #0
   143a8:	blt	14438 <close@plt+0x34fc>
   143ac:	bl	10ec4 <fcntl64@plt>
   143b0:	subs	r4, r0, #0
   143b4:	bge	143c8 <close@plt+0x348c>
   143b8:	bl	10e64 <__errno_location@plt>
   143bc:	ldr	r3, [r0]
   143c0:	cmp	r3, #22
   143c4:	beq	143e4 <close@plt+0x34a8>
   143c8:	mov	r3, #1
   143cc:	str	r3, [r8]
   143d0:	mov	r0, r4
   143d4:	add	sp, sp, #12
   143d8:	pop	{r4, r5, r6, r7, r8, lr}
   143dc:	add	sp, sp, #12
   143e0:	bx	lr
   143e4:	mov	r2, r7
   143e8:	mov	r1, #0
   143ec:	mov	r0, r5
   143f0:	bl	10ec4 <fcntl64@plt>
   143f4:	subs	r4, r0, #0
   143f8:	mvnge	r3, #0
   143fc:	strge	r3, [r6]
   14400:	blt	143d0 <close@plt+0x3494>
   14404:	mov	r1, #1
   14408:	mov	r0, r4
   1440c:	bl	10ec4 <fcntl64@plt>
   14410:	subs	r2, r0, #0
   14414:	bge	14458 <close@plt+0x351c>
   14418:	bl	10e64 <__errno_location@plt>
   1441c:	mov	r5, r0
   14420:	mov	r0, r4
   14424:	ldr	r6, [r5]
   14428:	mvn	r4, #0
   1442c:	bl	10f3c <close@plt>
   14430:	str	r6, [r5]
   14434:	b	143d0 <close@plt+0x3494>
   14438:	mov	r1, #0
   1443c:	bl	10ec4 <fcntl64@plt>
   14440:	subs	r4, r0, #0
   14444:	blt	143d0 <close@plt+0x3494>
   14448:	ldr	r3, [r6]
   1444c:	cmn	r3, #1
   14450:	bne	143d0 <close@plt+0x3494>
   14454:	b	14404 <close@plt+0x34c8>
   14458:	orr	r2, r2, #1
   1445c:	mov	r1, #2
   14460:	mov	r0, r4
   14464:	bl	10ec4 <fcntl64@plt>
   14468:	cmn	r0, #1
   1446c:	bne	143d0 <close@plt+0x3494>
   14470:	b	14418 <close@plt+0x34dc>
   14474:	cmp	r1, #9
   14478:	b	14368 <close@plt+0x342c>
   1447c:	movw	r2, #1031	; 0x407
   14480:	cmp	r1, r2
   14484:	bgt	144a4 <close@plt+0x3568>
   14488:	cmp	r1, r3
   1448c:	movwlt	r3, #1025	; 0x401
   14490:	blt	144b8 <close@plt+0x357c>
   14494:	ldr	r3, [sp, #4]
   14498:	mov	r0, r5
   1449c:	ldr	r2, [r3]
   144a0:	b	14380 <close@plt+0x3444>
   144a4:	movw	r3, #1033	; 0x409
   144a8:	cmp	r1, r3
   144ac:	beq	14494 <close@plt+0x3558>
   144b0:	blt	1436c <close@plt+0x3430>
   144b4:	movw	r3, #1034	; 0x40a
   144b8:	cmp	r1, r3
   144bc:	b	14368 <close@plt+0x342c>
   144c0:			; <UNDEFINED> instruction: 0x000262b4
   144c4:	push	{r0, r1, r2, r4, r5, lr}
   144c8:	mov	r5, r0
   144cc:	bl	10e64 <__errno_location@plt>
   144d0:	mov	r4, r0
   144d4:	mov	r0, r5
   144d8:	ldr	r3, [r4]
   144dc:	str	r3, [sp]
   144e0:	str	r3, [sp, #4]
   144e4:	mov	r3, #0
   144e8:	str	r3, [r4]
   144ec:	bl	10d20 <free@plt>
   144f0:	ldr	r3, [r4]
   144f4:	add	r2, sp, #8
   144f8:	clz	r3, r3
   144fc:	lsr	r3, r3, #5
   14500:	add	r3, r2, r3, lsl #2
   14504:	ldr	r3, [r3, #-8]
   14508:	str	r3, [r4]
   1450c:	add	sp, sp, #12
   14510:	pop	{r4, r5, pc}
   14514:	b	14234 <close@plt+0x32f8>
   14518:	cmp	r1, #0
   1451c:	orreq	r1, r1, #1
   14520:	b	14260 <close@plt+0x3324>
   14524:	b	141e0 <close@plt+0x32a4>
   14528:	cmp	r2, #0
   1452c:	cmpne	r1, #0
   14530:	moveq	r2, #1
   14534:	moveq	r1, r2
   14538:	b	14714 <close@plt+0x37d8>
   1453c:	push	{r4, lr}
   14540:	mov	r0, #14
   14544:	bl	10ee8 <nl_langinfo@plt>
   14548:	cmp	r0, #0
   1454c:	beq	14564 <close@plt+0x3628>
   14550:	ldrb	r2, [r0]
   14554:	ldr	r3, [pc, #16]	; 1456c <close@plt+0x3630>
   14558:	cmp	r2, #0
   1455c:	moveq	r0, r3
   14560:	pop	{r4, pc}
   14564:	ldr	r0, [pc]	; 1456c <close@plt+0x3630>
   14568:	pop	{r4, pc}
   1456c:	andeq	r5, r1, pc, lsl r6
   14570:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   14574:	subs	r5, r0, #0
   14578:	mov	r7, r2
   1457c:	addeq	r5, sp, #4
   14580:	mov	r6, r1
   14584:	mov	r0, r5
   14588:	bl	10de0 <mbrtowc@plt>
   1458c:	cmp	r7, #0
   14590:	cmnne	r0, #3
   14594:	mov	r4, r0
   14598:	bls	145b4 <close@plt+0x3678>
   1459c:	mov	r0, #0
   145a0:	bl	11fe0 <close@plt+0x10a4>
   145a4:	cmp	r0, #0
   145a8:	ldrbeq	r3, [r6]
   145ac:	moveq	r4, #1
   145b0:	streq	r3, [r5]
   145b4:	mov	r0, r4
   145b8:	add	sp, sp, #12
   145bc:	pop	{r4, r5, r6, r7, pc}
   145c0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   145c4:	mov	r6, r0
   145c8:	mov	r8, r1
   145cc:	mov	r5, r2
   145d0:	mov	r4, r3
   145d4:	mov	sl, #0
   145d8:	bl	10e64 <__errno_location@plt>
   145dc:	mov	r9, r0
   145e0:	mov	r1, r5
   145e4:	mov	r0, r6
   145e8:	str	sl, [r9]
   145ec:	bl	10df8 <strcoll@plt>
   145f0:	cmp	r0, #0
   145f4:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   145f8:	mov	r0, r6
   145fc:	bl	10e58 <strlen@plt>
   14600:	add	r7, r0, #1
   14604:	mov	r0, r5
   14608:	bl	10e58 <strlen@plt>
   1460c:	add	r0, r0, #1
   14610:	subs	r8, r8, r7
   14614:	add	r6, r6, r7
   14618:	add	r5, r5, r0
   1461c:	sub	r4, r4, r0
   14620:	bne	14634 <close@plt+0x36f8>
   14624:	adds	r0, r4, #0
   14628:	movne	r0, #1
   1462c:	rsb	r0, r0, #0
   14630:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14634:	cmp	r4, #0
   14638:	bne	145e0 <close@plt+0x36a4>
   1463c:	mov	r0, #1
   14640:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14644:	cmp	r1, r3
   14648:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1464c:	mov	r7, r0
   14650:	mov	r4, r1
   14654:	mov	r6, r2
   14658:	mov	r5, r3
   1465c:	bne	14684 <close@plt+0x3748>
   14660:	mov	r2, r1
   14664:	mov	r1, r6
   14668:	bl	10d5c <memcmp@plt>
   1466c:	subs	r8, r0, #0
   14670:	bne	14684 <close@plt+0x3748>
   14674:	bl	10e64 <__errno_location@plt>
   14678:	str	r8, [r0]
   1467c:	mov	r0, r8
   14680:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14684:	ldrb	sl, [r7, r4]
   14688:	mov	r3, #0
   1468c:	mov	r2, r6
   14690:	add	r1, r4, #1
   14694:	mov	r0, r7
   14698:	ldrb	r9, [r6, r5]
   1469c:	strb	r3, [r7, r4]
   146a0:	strb	r3, [r6, r5]
   146a4:	add	r3, r5, #1
   146a8:	bl	145c0 <close@plt+0x3684>
   146ac:	mov	r8, r0
   146b0:	strb	sl, [r7, r4]
   146b4:	strb	r9, [r6, r5]
   146b8:	b	1467c <close@plt+0x3740>
   146bc:	cmp	r1, r3
   146c0:	push	{r4, r5, r6, r7, r8, lr}
   146c4:	mov	r8, r0
   146c8:	mov	r4, r1
   146cc:	mov	r6, r2
   146d0:	mov	r7, r3
   146d4:	bne	146ec <close@plt+0x37b0>
   146d8:	mov	r2, r1
   146dc:	mov	r1, r6
   146e0:	bl	10d5c <memcmp@plt>
   146e4:	subs	r5, r0, #0
   146e8:	beq	14704 <close@plt+0x37c8>
   146ec:	mov	r3, r7
   146f0:	mov	r2, r6
   146f4:	mov	r1, r4
   146f8:	mov	r0, r8
   146fc:	pop	{r4, r5, r6, r7, r8, lr}
   14700:	b	145c0 <close@plt+0x3684>
   14704:	bl	10e64 <__errno_location@plt>
   14708:	str	r5, [r0]
   1470c:	mov	r0, r5
   14710:	pop	{r4, r5, r6, r7, r8, pc}
   14714:	umull	r2, r3, r1, r2
   14718:	cmp	r3, #0
   1471c:	bne	14728 <close@plt+0x37ec>
   14720:	mov	r1, r2
   14724:	b	14260 <close@plt+0x3324>
   14728:	push	{r4, lr}
   1472c:	bl	10e64 <__errno_location@plt>
   14730:	mov	r3, #12
   14734:	str	r3, [r0]
   14738:	mov	r0, #0
   1473c:	pop	{r4, pc}
   14740:	cmp	r3, #0
   14744:	cmpeq	r2, #0
   14748:	bne	14760 <close@plt+0x3824>
   1474c:	cmp	r1, #0
   14750:	cmpeq	r0, #0
   14754:	mvnne	r1, #0
   14758:	mvnne	r0, #0
   1475c:	b	1477c <close@plt+0x3840>
   14760:	sub	sp, sp, #8
   14764:	push	{sp, lr}
   14768:	bl	1478c <close@plt+0x3850>
   1476c:	ldr	lr, [sp, #4]
   14770:	add	sp, sp, #8
   14774:	pop	{r2, r3}
   14778:	bx	lr
   1477c:	push	{r1, lr}
   14780:	mov	r0, #8
   14784:	bl	10cf0 <raise@plt>
   14788:	pop	{r1, pc}
   1478c:	cmp	r1, r3
   14790:	cmpeq	r0, r2
   14794:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14798:	mov	r4, r0
   1479c:	movcc	r0, #0
   147a0:	mov	r5, r1
   147a4:	ldr	lr, [sp, #36]	; 0x24
   147a8:	movcc	r1, r0
   147ac:	bcc	148a8 <close@plt+0x396c>
   147b0:	cmp	r3, #0
   147b4:	clzeq	ip, r2
   147b8:	clzne	ip, r3
   147bc:	addeq	ip, ip, #32
   147c0:	cmp	r5, #0
   147c4:	clzeq	r1, r4
   147c8:	addeq	r1, r1, #32
   147cc:	clzne	r1, r5
   147d0:	sub	ip, ip, r1
   147d4:	sub	sl, ip, #32
   147d8:	lsl	r9, r3, ip
   147dc:	rsb	fp, ip, #32
   147e0:	orr	r9, r9, r2, lsl sl
   147e4:	orr	r9, r9, r2, lsr fp
   147e8:	lsl	r8, r2, ip
   147ec:	cmp	r5, r9
   147f0:	cmpeq	r4, r8
   147f4:	movcc	r0, #0
   147f8:	movcc	r1, r0
   147fc:	bcc	14818 <close@plt+0x38dc>
   14800:	mov	r0, #1
   14804:	subs	r4, r4, r8
   14808:	lsl	r1, r0, sl
   1480c:	orr	r1, r1, r0, lsr fp
   14810:	lsl	r0, r0, ip
   14814:	sbc	r5, r5, r9
   14818:	cmp	ip, #0
   1481c:	beq	148a8 <close@plt+0x396c>
   14820:	lsr	r6, r8, #1
   14824:	orr	r6, r6, r9, lsl #31
   14828:	lsr	r7, r9, #1
   1482c:	mov	r2, ip
   14830:	b	14854 <close@plt+0x3918>
   14834:	subs	r3, r4, r6
   14838:	sbc	r8, r5, r7
   1483c:	adds	r3, r3, r3
   14840:	adc	r8, r8, r8
   14844:	adds	r4, r3, #1
   14848:	adc	r5, r8, #0
   1484c:	subs	r2, r2, #1
   14850:	beq	14870 <close@plt+0x3934>
   14854:	cmp	r5, r7
   14858:	cmpeq	r4, r6
   1485c:	bcs	14834 <close@plt+0x38f8>
   14860:	adds	r4, r4, r4
   14864:	adc	r5, r5, r5
   14868:	subs	r2, r2, #1
   1486c:	bne	14854 <close@plt+0x3918>
   14870:	lsr	r3, r4, ip
   14874:	orr	r3, r3, r5, lsl fp
   14878:	lsr	r2, r5, ip
   1487c:	orr	r3, r3, r5, lsr sl
   14880:	adds	r0, r0, r4
   14884:	mov	r4, r3
   14888:	lsl	r3, r2, ip
   1488c:	orr	r3, r3, r4, lsl sl
   14890:	lsl	ip, r4, ip
   14894:	orr	r3, r3, r4, lsr fp
   14898:	adc	r1, r1, r5
   1489c:	subs	r0, r0, ip
   148a0:	mov	r5, r2
   148a4:	sbc	r1, r1, r3
   148a8:	cmp	lr, #0
   148ac:	strdne	r4, [lr]
   148b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   148b4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   148b8:	mov	r7, r0
   148bc:	ldr	r6, [pc, #72]	; 1490c <close@plt+0x39d0>
   148c0:	ldr	r5, [pc, #72]	; 14910 <close@plt+0x39d4>
   148c4:	add	r6, pc, r6
   148c8:	add	r5, pc, r5
   148cc:	sub	r6, r6, r5
   148d0:	mov	r8, r1
   148d4:	mov	r9, r2
   148d8:	bl	10cac <fdopen@plt-0x20>
   148dc:	asrs	r6, r6, #2
   148e0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   148e4:	mov	r4, #0
   148e8:	add	r4, r4, #1
   148ec:	ldr	r3, [r5], #4
   148f0:	mov	r2, r9
   148f4:	mov	r1, r8
   148f8:	mov	r0, r7
   148fc:	blx	r3
   14900:	cmp	r6, r4
   14904:	bne	148e8 <close@plt+0x39ac>
   14908:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1490c:	andeq	r1, r1, r8, asr #12
   14910:	andeq	r1, r1, r0, asr #12
   14914:	bx	lr
   14918:	ldr	r3, [pc, #12]	; 1492c <close@plt+0x39f0>
   1491c:	mov	r1, #0
   14920:	add	r3, pc, r3
   14924:	ldr	r2, [r3]
   14928:	b	10e70 <__cxa_atexit@plt>
   1492c:	andeq	r1, r1, r0, asr #15

Disassembly of section .fini:

00014930 <.fini>:
   14930:	push	{r3, lr}
   14934:	pop	{r3, pc}
