
../repos/coreutils/src/make-prime-list:     file format elf32-littlearm


Disassembly of section .init:

000105bc <.init>:
   105bc:	push	{r3, lr}
   105c0:	bl	106d8 <abort@plt+0x48>
   105c4:	pop	{r3, pc}

Disassembly of section .plt:

000105c8 <raise@plt-0x14>:
   105c8:	push	{lr}		; (str lr, [sp, #-4]!)
   105cc:	ldr	lr, [pc, #4]	; 105d8 <raise@plt-0x4>
   105d0:	add	lr, pc, lr
   105d4:	ldr	pc, [lr, #8]!
   105d8:	andeq	r1, r1, r8, lsr #20

000105dc <raise@plt>:
   105dc:	add	ip, pc, #0, 12
   105e0:	add	ip, ip, #69632	; 0x11000
   105e4:	ldr	pc, [ip, #2600]!	; 0xa28

000105e8 <strtol@plt>:
   105e8:	add	ip, pc, #0, 12
   105ec:	add	ip, ip, #69632	; 0x11000
   105f0:	ldr	pc, [ip, #2592]!	; 0xa20

000105f4 <free@plt>:
   105f4:	add	ip, pc, #0, 12
   105f8:	add	ip, ip, #69632	; 0x11000
   105fc:	ldr	pc, [ip, #2584]!	; 0xa18

00010600 <ferror@plt>:
   10600:	add	ip, pc, #0, 12
   10604:	add	ip, ip, #69632	; 0x11000
   10608:	ldr	pc, [ip, #2576]!	; 0xa10

0001060c <puts@plt>:
   1060c:	add	ip, pc, #0, 12
   10610:	add	ip, ip, #69632	; 0x11000
   10614:	ldr	pc, [ip, #2568]!	; 0xa08

00010618 <malloc@plt>:
   10618:	add	ip, pc, #0, 12
   1061c:	add	ip, ip, #69632	; 0x11000
   10620:	ldr	pc, [ip, #2560]!	; 0xa00

00010624 <__libc_start_main@plt>:
   10624:	add	ip, pc, #0, 12
   10628:	add	ip, ip, #69632	; 0x11000
   1062c:	ldr	pc, [ip, #2552]!	; 0x9f8

00010630 <strerror@plt>:
   10630:	add	ip, pc, #0, 12
   10634:	add	ip, ip, #69632	; 0x11000
   10638:	ldr	pc, [ip, #2544]!	; 0x9f0

0001063c <__gmon_start__@plt>:
   1063c:	add	ip, pc, #0, 12
   10640:	add	ip, ip, #69632	; 0x11000
   10644:	ldr	pc, [ip, #2536]!	; 0x9e8

00010648 <exit@plt>:
   10648:	add	ip, pc, #0, 12
   1064c:	add	ip, ip, #69632	; 0x11000
   10650:	ldr	pc, [ip, #2528]!	; 0x9e0

00010654 <__errno_location@plt>:
   10654:	add	ip, pc, #0, 12
   10658:	add	ip, ip, #69632	; 0x11000
   1065c:	ldr	pc, [ip, #2520]!	; 0x9d8

00010660 <memset@plt>:
   10660:	add	ip, pc, #0, 12
   10664:	add	ip, ip, #69632	; 0x11000
   10668:	ldr	pc, [ip, #2512]!	; 0x9d0

0001066c <__printf_chk@plt>:
   1066c:	add	ip, pc, #0, 12
   10670:	add	ip, ip, #69632	; 0x11000
   10674:	ldr	pc, [ip, #2504]!	; 0x9c8

00010678 <__fprintf_chk@plt>:
   10678:	add	ip, pc, #0, 12
   1067c:	add	ip, ip, #69632	; 0x11000
   10680:	ldr	pc, [ip, #2496]!	; 0x9c0

00010684 <fclose@plt>:
   10684:	add	ip, pc, #0, 12
   10688:	add	ip, ip, #69632	; 0x11000
   1068c:	ldr	pc, [ip, #2488]!	; 0x9b8

00010690 <abort@plt>:
   10690:	add	ip, pc, #0, 12
   10694:	add	ip, ip, #69632	; 0x11000
   10698:	ldr	pc, [ip, #2480]!	; 0x9b0

Disassembly of section .text:

0001069c <.text>:
   1069c:	mov	fp, #0
   106a0:	mov	lr, #0
   106a4:	pop	{r1}		; (ldr r1, [sp], #4)
   106a8:	mov	r2, sp
   106ac:	push	{r2}		; (str r2, [sp, #-4]!)
   106b0:	push	{r0}		; (str r0, [sp, #-4]!)
   106b4:	ldr	ip, [pc, #16]	; 106cc <abort@plt+0x3c>
   106b8:	push	{ip}		; (str ip, [sp, #-4]!)
   106bc:	ldr	r0, [pc, #12]	; 106d0 <abort@plt+0x40>
   106c0:	ldr	r3, [pc, #12]	; 106d4 <abort@plt+0x44>
   106c4:	bl	10624 <__libc_start_main@plt>
   106c8:	bl	10690 <abort@plt>
   106cc:	andeq	r0, r1, r8, lsl #28
   106d0:	andeq	r0, r1, ip, lsl #15
   106d4:	andeq	r0, r1, r8, lsr #27
   106d8:	ldr	r3, [pc, #20]	; 106f4 <abort@plt+0x64>
   106dc:	ldr	r2, [pc, #20]	; 106f8 <abort@plt+0x68>
   106e0:	add	r3, pc, r3
   106e4:	ldr	r2, [r3, r2]
   106e8:	cmp	r2, #0
   106ec:	bxeq	lr
   106f0:	b	1063c <__gmon_start__@plt>
   106f4:	andeq	r1, r1, r8, lsl r9
   106f8:	andeq	r0, r0, ip, asr #32
   106fc:	ldr	r0, [pc, #24]	; 1071c <abort@plt+0x8c>
   10700:	ldr	r3, [pc, #24]	; 10720 <abort@plt+0x90>
   10704:	cmp	r3, r0
   10708:	bxeq	lr
   1070c:	ldr	r3, [pc, #16]	; 10724 <abort@plt+0x94>
   10710:	cmp	r3, #0
   10714:	bxeq	lr
   10718:	bx	r3
   1071c:	andeq	r2, r2, r8, asr r0
   10720:	andeq	r2, r2, r8, asr r0
   10724:	andeq	r0, r0, r0
   10728:	ldr	r0, [pc, #36]	; 10754 <abort@plt+0xc4>
   1072c:	ldr	r1, [pc, #36]	; 10758 <abort@plt+0xc8>
   10730:	sub	r1, r1, r0
   10734:	asr	r1, r1, #2
   10738:	add	r1, r1, r1, lsr #31
   1073c:	asrs	r1, r1, #1
   10740:	bxeq	lr
   10744:	ldr	r3, [pc, #16]	; 1075c <abort@plt+0xcc>
   10748:	cmp	r3, #0
   1074c:	bxeq	lr
   10750:	bx	r3
   10754:	andeq	r2, r2, r8, asr r0
   10758:	andeq	r2, r2, r8, asr r0
   1075c:	andeq	r0, r0, r0
   10760:	push	{r4, lr}
   10764:	ldr	r4, [pc, #24]	; 10784 <abort@plt+0xf4>
   10768:	ldrb	r3, [r4]
   1076c:	cmp	r3, #0
   10770:	popne	{r4, pc}
   10774:	bl	106fc <abort@plt+0x6c>
   10778:	mov	r3, #1
   1077c:	strb	r3, [r4]
   10780:	pop	{r4, pc}
   10784:	andeq	r2, r2, r0, rrx
   10788:	b	10728 <abort@plt+0x98>
   1078c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10790:	add	fp, sp, #28
   10794:	sub	sp, sp, #12
   10798:	cmp	r0, #2
   1079c:	bne	1083c <abort@plt+0x1ac>
   107a0:	ldr	r0, [r1, #4]
   107a4:	mov	r1, #0
   107a8:	mov	r2, #10
   107ac:	mov	r4, #0
   107b0:	bl	105e8 <strtol@plt>
   107b4:	cmp	r0, #3
   107b8:	blt	10860 <abort@plt+0x1d0>
   107bc:	and	r1, r0, #1
   107c0:	add	r0, r0, r1
   107c4:	sub	r5, r0, #2
   107c8:	add	r0, r5, r5, lsr #31
   107cc:	asr	r6, r0, #1
   107d0:	mov	r0, r6
   107d4:	bl	10618 <malloc@plt>
   107d8:	cmp	r0, #0
   107dc:	beq	10b2c <abort@plt+0x49c>
   107e0:	mov	r1, #1
   107e4:	mov	r2, r6
   107e8:	mov	r4, r0
   107ec:	bl	10660 <memset@plt>
   107f0:	add	r0, r6, r6, lsl #1
   107f4:	lsl	r0, r0, #3
   107f8:	bl	10618 <malloc@plt>
   107fc:	cmp	r0, #0
   10800:	beq	10b2c <abort@plt+0x49c>
   10804:	mov	r8, r0
   10808:	add	r0, r5, #1
   1080c:	mov	r5, #0
   10810:	cmp	r0, #3
   10814:	bcc	10954 <abort@plt+0x2c4>
   10818:	movw	r2, #32177	; 0x7db1
   1081c:	mov	r9, #0
   10820:	mov	r0, #3
   10824:	mov	r1, #28
   10828:	mov	r5, #0
   1082c:	mov	r3, #0
   10830:	str	r8, [sp, #8]
   10834:	movt	r2, #62777	; 0xf539
   10838:	b	10878 <abort@plt+0x1e8>
   1083c:	movw	r0, #8280	; 0x2058
   10840:	ldr	r3, [r1]
   10844:	movw	r2, #3608	; 0xe18
   10848:	mov	r1, #1
   1084c:	mov	r4, #1
   10850:	movt	r0, #2
   10854:	movt	r2, #1
   10858:	ldr	r0, [r0]
   1085c:	bl	10678 <__fprintf_chk@plt>
   10860:	mov	r0, r4
   10864:	sub	sp, fp, #28
   10868:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1086c:	sub	r3, r0, #1
   10870:	mov	r0, #3
   10874:	mov	r1, #28
   10878:	add	r7, r0, r3, lsl #1
   1087c:	add	r0, r5, r5, lsl #1
   10880:	str	r3, [sp, #4]
   10884:	str	r0, [sp]
   10888:	str	r7, [r8, r0, lsl #3]
   1088c:	and	r0, r1, r7, lsl #1
   10890:	mov	r1, #0
   10894:	lsr	r0, r2, r0
   10898:	mov	sl, r1
   1089c:	mov	r8, r0
   108a0:	umull	r0, r1, r0, r7
   108a4:	rsbs	r2, r0, #2
   108a8:	mla	r1, sl, r7, r1
   108ac:	umull	r0, r3, r2, r8
   108b0:	rsc	r1, r1, #0
   108b4:	mla	r2, r2, sl, r3
   108b8:	eor	r3, r0, r8
   108bc:	mla	r1, r1, r8, r2
   108c0:	eor	r2, r1, sl
   108c4:	orrs	r2, r3, r2
   108c8:	bne	10898 <abort@plt+0x208>
   108cc:	mvn	r0, #0
   108d0:	mvn	r1, #0
   108d4:	mov	r2, r7
   108d8:	mov	r3, #0
   108dc:	bl	10c34 <abort@plt+0x5a4>
   108e0:	ldr	r2, [sp, #8]
   108e4:	ldr	r3, [sp]
   108e8:	add	r2, r2, r3, lsl #3
   108ec:	str	r8, [r2, #8]
   108f0:	str	sl, [r2, #12]
   108f4:	str	r0, [r2, #16]
   108f8:	mul	r0, r7, r7
   108fc:	str	r1, [r2, #20]
   10900:	sub	r0, r0, #3
   10904:	cmp	r6, r0, lsr #1
   10908:	bls	10920 <abort@plt+0x290>
   1090c:	lsr	r0, r0, #1
   10910:	strb	r9, [r4, r0]
   10914:	add	r0, r0, r7
   10918:	cmp	r0, r6
   1091c:	bcc	10910 <abort@plt+0x280>
   10920:	ldr	r0, [sp, #4]
   10924:	ldr	r8, [sp, #8]
   10928:	movw	r2, #32177	; 0x7db1
   1092c:	add	r5, r5, #1
   10930:	movt	r2, #62777	; 0xf539
   10934:	add	r0, r0, #1
   10938:	cmp	r0, r6
   1093c:	bcs	10954 <abort@plt+0x2c4>
   10940:	ldrb	r1, [r4, r0]
   10944:	add	r0, r0, #1
   10948:	cmp	r1, #0
   1094c:	beq	10938 <abort@plt+0x2a8>
   10950:	b	1086c <abort@plt+0x1dc>
   10954:	movw	r0, #3708	; 0xe7c
   10958:	movt	r0, #1
   1095c:	bl	1060c <puts@plt>
   10960:	movw	r1, #3745	; 0xea1
   10964:	mov	r0, #1
   10968:	mov	r2, #64	; 0x40
   1096c:	movt	r1, #1
   10970:	bl	1066c <__printf_chk@plt>
   10974:	cmp	r5, #0
   10978:	beq	10a20 <abort@plt+0x390>
   1097c:	movw	sl, #3788	; 0xecc
   10980:	mov	r0, #2
   10984:	mov	r6, #0
   10988:	mov	r9, r8
   1098c:	mov	r7, r8
   10990:	movt	sl, #1
   10994:	add	r1, r6, #8
   10998:	cmp	r1, r5
   1099c:	bcs	109bc <abort@plt+0x32c>
   109a0:	ldr	r1, [r7]
   109a4:	ldr	r2, [r7, #192]	; 0xc0
   109a8:	mov	r8, r7
   109ac:	sub	r3, r2, r1
   109b0:	cmp	r3, #256	; 0x100
   109b4:	bcc	109cc <abort@plt+0x33c>
   109b8:	b	10b28 <abort@plt+0x498>
   109bc:	add	r1, r6, r6, lsl #1
   109c0:	mov	r3, #255	; 0xff
   109c4:	add	r8, r9, r1, lsl #3
   109c8:	ldr	r1, [r7]
   109cc:	sub	r2, r1, r0
   109d0:	movw	r1, #3772	; 0xebc
   109d4:	mov	r0, #1
   109d8:	movt	r1, #1
   109dc:	bl	1066c <__printf_chk@plt>
   109e0:	ldrd	r0, [r7, #8]
   109e4:	mov	r2, #0
   109e8:	mov	r3, #64	; 0x40
   109ec:	bl	10b50 <abort@plt+0x4c0>
   109f0:	ldr	r2, [r8]
   109f4:	mov	r0, #1
   109f8:	mov	r1, sl
   109fc:	bl	1066c <__printf_chk@plt>
   10a00:	ldr	r0, [r8]
   10a04:	add	r6, r6, #1
   10a08:	add	r7, r7, #24
   10a0c:	cmp	r6, r5
   10a10:	bcc	10994 <abort@plt+0x304>
   10a14:	add	r6, r0, #2
   10a18:	mov	r8, r9
   10a1c:	b	10a24 <abort@plt+0x394>
   10a20:	mov	r6, #4
   10a24:	movw	r1, #3813	; 0xee5
   10a28:	mov	r0, #1
   10a2c:	movt	r1, #1
   10a30:	bl	1066c <__printf_chk@plt>
   10a34:	ldr	r0, [r8]
   10a38:	mul	lr, r0, r0
   10a3c:	cmp	lr, r6
   10a40:	bhi	10aa0 <abort@plt+0x410>
   10a44:	add	ip, r8, #24
   10a48:	mov	r2, ip
   10a4c:	b	10a78 <abort@plt+0x3e8>
   10a50:	mov	r2, ip
   10a54:	b	10a78 <abort@plt+0x3e8>
   10a58:	add	r6, r6, #2
   10a5c:	cmp	lr, r6
   10a60:	bls	10a50 <abort@plt+0x3c0>
   10a64:	b	10aa0 <abort@plt+0x410>
   10a68:	ldr	r3, [r2], #24
   10a6c:	mul	r3, r3, r3
   10a70:	cmp	r3, r6
   10a74:	bhi	10aa0 <abort@plt+0x410>
   10a78:	ldr	r3, [r2, #-16]
   10a7c:	ldr	r7, [r2, #-12]
   10a80:	ldr	r5, [r2, #-8]
   10a84:	ldr	r1, [r2, #-4]
   10a88:	umull	r3, r0, r3, r6
   10a8c:	mla	r0, r7, r6, r0
   10a90:	subs	r3, r5, r3
   10a94:	sbcs	r0, r1, r0
   10a98:	bcc	10a68 <abort@plt+0x3d8>
   10a9c:	b	10a58 <abort@plt+0x3c8>
   10aa0:	movw	r1, #3842	; 0xf02
   10aa4:	mov	r0, #1
   10aa8:	mov	r2, r6
   10aac:	movt	r1, #1
   10ab0:	bl	1066c <__printf_chk@plt>
   10ab4:	mov	r0, r4
   10ab8:	bl	105f4 <free@plt>
   10abc:	mov	r0, r8
   10ac0:	bl	105f4 <free@plt>
   10ac4:	movw	r0, #8284	; 0x205c
   10ac8:	movt	r0, #2
   10acc:	ldr	r4, [r0]
   10ad0:	mov	r0, r4
   10ad4:	bl	10600 <ferror@plt>
   10ad8:	mov	r5, r0
   10adc:	mov	r0, r4
   10ae0:	bl	10684 <fclose@plt>
   10ae4:	mov	r4, #0
   10ae8:	cmn	r5, r0
   10aec:	beq	10860 <abort@plt+0x1d0>
   10af0:	movw	r0, #8280	; 0x2058
   10af4:	movt	r0, #2
   10af8:	ldr	r4, [r0]
   10afc:	bl	10654 <__errno_location@plt>
   10b00:	ldr	r0, [r0]
   10b04:	bl	10630 <strerror@plt>
   10b08:	movw	r2, #3664	; 0xe50
   10b0c:	mov	r3, r0
   10b10:	mov	r0, r4
   10b14:	mov	r1, #1
   10b18:	movt	r2, #1
   10b1c:	bl	10678 <__fprintf_chk@plt>
   10b20:	mov	r4, #1
   10b24:	b	10860 <abort@plt+0x1d0>
   10b28:	bl	10690 <abort@plt>
   10b2c:	movw	r0, #8280	; 0x2058
   10b30:	movw	r2, #3681	; 0xe61
   10b34:	mov	r1, #1
   10b38:	movt	r0, #2
   10b3c:	movt	r2, #1
   10b40:	ldr	r0, [r0]
   10b44:	bl	10678 <__fprintf_chk@plt>
   10b48:	mov	r0, #1
   10b4c:	bl	10648 <exit@plt>
   10b50:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10b54:	add	fp, sp, #24
   10b58:	bic	r4, r0, #-268435456	; 0xf0000000
   10b5c:	mov	r6, r2
   10b60:	mov	r5, r3
   10b64:	eor	r2, r4, r0
   10b68:	orrs	r2, r2, r1
   10b6c:	bne	10b98 <abort@plt+0x508>
   10b70:	cmp	r6, #0
   10b74:	beq	10c18 <abort@plt+0x588>
   10b78:	movw	r1, #3890	; 0xf32
   10b7c:	mov	r0, #1
   10b80:	movt	r1, #1
   10b84:	bl	1066c <__printf_chk@plt>
   10b88:	sub	r0, r5, #1
   10b8c:	and	r0, r0, #3
   10b90:	add	r2, r0, #1
   10b94:	b	10c1c <abort@plt+0x58c>
   10b98:	lsr	r0, r0, #28
   10b9c:	lsr	r8, r1, #28
   10ba0:	cmp	r1, #16777216	; 0x1000000
   10ba4:	orr	r7, r0, r1, lsl #4
   10ba8:	bcc	10bf0 <abort@plt+0x560>
   10bac:	movw	r1, #3786	; 0xeca
   10bb0:	mov	r0, #1
   10bb4:	movt	r1, #1
   10bb8:	bl	1066c <__printf_chk@plt>
   10bbc:	add	r2, r6, #1
   10bc0:	mov	r0, r7
   10bc4:	mov	r1, r8
   10bc8:	mov	r3, r5
   10bcc:	bl	10b50 <abort@plt+0x4c0>
   10bd0:	movw	r1, #3874	; 0xf22
   10bd4:	movw	r3, #3812	; 0xee4
   10bd8:	add	r2, r6, #3
   10bdc:	mov	r0, #1
   10be0:	movt	r1, #1
   10be4:	movt	r3, #1
   10be8:	bl	1066c <__printf_chk@plt>
   10bec:	b	10c04 <abort@plt+0x574>
   10bf0:	add	r2, r6, #1
   10bf4:	mov	r0, r7
   10bf8:	mov	r1, r8
   10bfc:	mov	r3, r5
   10c00:	bl	10b50 <abort@plt+0x4c0>
   10c04:	movw	r1, #3880	; 0xf28
   10c08:	mov	r0, #1
   10c0c:	mov	r2, #28
   10c10:	movt	r1, #1
   10c14:	bl	1066c <__printf_chk@plt>
   10c18:	mov	r2, #7
   10c1c:	movw	r1, #3903	; 0xf3f
   10c20:	mov	r0, #1
   10c24:	mov	r3, r4
   10c28:	movt	r1, #1
   10c2c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   10c30:	b	1066c <__printf_chk@plt>
   10c34:	cmp	r3, #0
   10c38:	cmpeq	r2, #0
   10c3c:	bne	10c54 <abort@plt+0x5c4>
   10c40:	cmp	r1, #0
   10c44:	cmpeq	r0, #0
   10c48:	mvnne	r1, #0
   10c4c:	mvnne	r0, #0
   10c50:	b	10c70 <abort@plt+0x5e0>
   10c54:	sub	sp, sp, #8
   10c58:	push	{sp, lr}
   10c5c:	bl	10c80 <abort@plt+0x5f0>
   10c60:	ldr	lr, [sp, #4]
   10c64:	add	sp, sp, #8
   10c68:	pop	{r2, r3}
   10c6c:	bx	lr
   10c70:	push	{r1, lr}
   10c74:	mov	r0, #8
   10c78:	bl	105dc <raise@plt>
   10c7c:	pop	{r1, pc}
   10c80:	cmp	r1, r3
   10c84:	cmpeq	r0, r2
   10c88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10c8c:	mov	r4, r0
   10c90:	movcc	r0, #0
   10c94:	mov	r5, r1
   10c98:	ldr	lr, [sp, #36]	; 0x24
   10c9c:	movcc	r1, r0
   10ca0:	bcc	10d9c <abort@plt+0x70c>
   10ca4:	cmp	r3, #0
   10ca8:	clzeq	ip, r2
   10cac:	clzne	ip, r3
   10cb0:	addeq	ip, ip, #32
   10cb4:	cmp	r5, #0
   10cb8:	clzeq	r1, r4
   10cbc:	addeq	r1, r1, #32
   10cc0:	clzne	r1, r5
   10cc4:	sub	ip, ip, r1
   10cc8:	sub	sl, ip, #32
   10ccc:	lsl	r9, r3, ip
   10cd0:	rsb	fp, ip, #32
   10cd4:	orr	r9, r9, r2, lsl sl
   10cd8:	orr	r9, r9, r2, lsr fp
   10cdc:	lsl	r8, r2, ip
   10ce0:	cmp	r5, r9
   10ce4:	cmpeq	r4, r8
   10ce8:	movcc	r0, #0
   10cec:	movcc	r1, r0
   10cf0:	bcc	10d0c <abort@plt+0x67c>
   10cf4:	mov	r0, #1
   10cf8:	subs	r4, r4, r8
   10cfc:	lsl	r1, r0, sl
   10d00:	orr	r1, r1, r0, lsr fp
   10d04:	lsl	r0, r0, ip
   10d08:	sbc	r5, r5, r9
   10d0c:	cmp	ip, #0
   10d10:	beq	10d9c <abort@plt+0x70c>
   10d14:	lsr	r6, r8, #1
   10d18:	orr	r6, r6, r9, lsl #31
   10d1c:	lsr	r7, r9, #1
   10d20:	mov	r2, ip
   10d24:	b	10d48 <abort@plt+0x6b8>
   10d28:	subs	r3, r4, r6
   10d2c:	sbc	r8, r5, r7
   10d30:	adds	r3, r3, r3
   10d34:	adc	r8, r8, r8
   10d38:	adds	r4, r3, #1
   10d3c:	adc	r5, r8, #0
   10d40:	subs	r2, r2, #1
   10d44:	beq	10d64 <abort@plt+0x6d4>
   10d48:	cmp	r5, r7
   10d4c:	cmpeq	r4, r6
   10d50:	bcs	10d28 <abort@plt+0x698>
   10d54:	adds	r4, r4, r4
   10d58:	adc	r5, r5, r5
   10d5c:	subs	r2, r2, #1
   10d60:	bne	10d48 <abort@plt+0x6b8>
   10d64:	lsr	r3, r4, ip
   10d68:	orr	r3, r3, r5, lsl fp
   10d6c:	lsr	r2, r5, ip
   10d70:	orr	r3, r3, r5, lsr sl
   10d74:	adds	r0, r0, r4
   10d78:	mov	r4, r3
   10d7c:	lsl	r3, r2, ip
   10d80:	orr	r3, r3, r4, lsl sl
   10d84:	lsl	ip, r4, ip
   10d88:	orr	r3, r3, r4, lsr fp
   10d8c:	adc	r1, r1, r5
   10d90:	subs	r0, r0, ip
   10d94:	mov	r5, r2
   10d98:	sbc	r1, r1, r3
   10d9c:	cmp	lr, #0
   10da0:	strdne	r4, [lr]
   10da4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10da8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10dac:	mov	r7, r0
   10db0:	ldr	r6, [pc, #72]	; 10e00 <abort@plt+0x770>
   10db4:	ldr	r5, [pc, #72]	; 10e04 <abort@plt+0x774>
   10db8:	add	r6, pc, r6
   10dbc:	add	r5, pc, r5
   10dc0:	sub	r6, r6, r5
   10dc4:	mov	r8, r1
   10dc8:	mov	r9, r2
   10dcc:	bl	105bc <raise@plt-0x20>
   10dd0:	asrs	r6, r6, #2
   10dd4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10dd8:	mov	r4, #0
   10ddc:	add	r4, r4, #1
   10de0:	ldr	r3, [r5], #4
   10de4:	mov	r2, r9
   10de8:	mov	r1, r8
   10dec:	mov	r0, r7
   10df0:	blx	r3
   10df4:	cmp	r6, r4
   10df8:	bne	10ddc <abort@plt+0x74c>
   10dfc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10e00:	andeq	r1, r1, ip, asr #2
   10e04:	andeq	r1, r1, r4, asr #2
   10e08:	bx	lr

Disassembly of section .fini:

00010e0c <.fini>:
   10e0c:	push	{r3, lr}
   10e10:	pop	{r3, pc}
