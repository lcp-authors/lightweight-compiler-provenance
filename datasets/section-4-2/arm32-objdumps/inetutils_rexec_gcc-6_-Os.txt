
../repos/inetutils/src/rexec:     file format elf32-littlearm


Disassembly of section .init:

00010fc0 <.init>:
   10fc0:	push	{r3, lr}
   10fc4:	bl	11cf8 <putc_unlocked@plt+0xa30>
   10fc8:	pop	{r3, pc}

Disassembly of section .plt:

00010fcc <fputs_unlocked@plt-0x14>:
   10fcc:	push	{lr}		; (str lr, [sp, #-4]!)
   10fd0:	ldr	lr, [pc, #4]	; 10fdc <fputs_unlocked@plt-0x4>
   10fd4:	add	lr, pc, lr
   10fd8:	ldr	pc, [lr, #8]!
   10fdc:	andeq	r8, r1, r4, lsr #32

00010fe0 <fputs_unlocked@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #24, 20	; 0x18000
   10fe8:	ldr	pc, [ip, #36]!	; 0x24

00010fec <strcmp@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #24, 20	; 0x18000
   10ff4:	ldr	pc, [ip, #28]!

00010ff8 <setsockopt@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #24, 20	; 0x18000
   11000:	ldr	pc, [ip, #20]!

00011004 <printf@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #24, 20	; 0x18000
   1100c:	ldr	pc, [ip, #12]!

00011010 <read@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #24, 20	; 0x18000
   11018:	ldr	pc, [ip, #4]!

0001101c <memmove@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #94208	; 0x17000
   11024:	ldr	pc, [ip, #4092]!	; 0xffc

00011028 <strchrnul@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #94208	; 0x17000
   11030:	ldr	pc, [ip, #4084]!	; 0xff4

00011034 <free@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #94208	; 0x17000
   1103c:	ldr	pc, [ip, #4076]!	; 0xfec

00011040 <gai_strerror@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #94208	; 0x17000
   11048:	ldr	pc, [ip, #4068]!	; 0xfe4

0001104c <fgets@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #94208	; 0x17000
   11054:	ldr	pc, [ip, #4060]!	; 0xfdc

00011058 <strndup@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #94208	; 0x17000
   11060:	ldr	pc, [ip, #4052]!	; 0xfd4

00011064 <memcpy@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #94208	; 0x17000
   1106c:	ldr	pc, [ip, #4044]!	; 0xfcc

00011070 <fwrite_unlocked@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #94208	; 0x17000
   11078:	ldr	pc, [ip, #4036]!	; 0xfc4

0001107c <select@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #94208	; 0x17000
   11084:	ldr	pc, [ip, #4028]!	; 0xfbc

00011088 <sleep@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #94208	; 0x17000
   11090:	ldr	pc, [ip, #4020]!	; 0xfb4

00011094 <alarm@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #94208	; 0x17000
   1109c:	ldr	pc, [ip, #4012]!	; 0xfac

000110a0 <realloc@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #94208	; 0x17000
   110a8:	ldr	pc, [ip, #4004]!	; 0xfa4

000110ac <strcasecmp@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #94208	; 0x17000
   110b4:	ldr	pc, [ip, #3996]!	; 0xf9c

000110b8 <funlockfile@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #94208	; 0x17000
   110c0:	ldr	pc, [ip, #3988]!	; 0xf94

000110c4 <accept@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #94208	; 0x17000
   110cc:	ldr	pc, [ip, #3980]!	; 0xf8c

000110d0 <tcsetattr@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #94208	; 0x17000
   110d8:	ldr	pc, [ip, #3972]!	; 0xf84

000110dc <error@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #94208	; 0x17000
   110e4:	ldr	pc, [ip, #3964]!	; 0xf7c

000110e8 <getenv@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #94208	; 0x17000
   110f0:	ldr	pc, [ip, #3956]!	; 0xf74

000110f4 <malloc@plt>:
   110f4:	add	ip, pc, #0, 12
   110f8:	add	ip, ip, #94208	; 0x17000
   110fc:	ldr	pc, [ip, #3948]!	; 0xf6c

00011100 <__libc_start_main@plt>:
   11100:	add	ip, pc, #0, 12
   11104:	add	ip, ip, #94208	; 0x17000
   11108:	ldr	pc, [ip, #3940]!	; 0xf64

0001110c <strerror@plt>:
   1110c:	add	ip, pc, #0, 12
   11110:	add	ip, ip, #94208	; 0x17000
   11114:	ldr	pc, [ip, #3932]!	; 0xf5c

00011118 <__ctype_tolower_loc@plt>:
   11118:	add	ip, pc, #0, 12
   1111c:	add	ip, ip, #94208	; 0x17000
   11120:	ldr	pc, [ip, #3924]!	; 0xf54

00011124 <__gmon_start__@plt>:
   11124:	add	ip, pc, #0, 12
   11128:	add	ip, ip, #94208	; 0x17000
   1112c:	ldr	pc, [ip, #3916]!	; 0xf4c

00011130 <mempcpy@plt>:
   11130:	add	ip, pc, #0, 12
   11134:	add	ip, ip, #94208	; 0x17000
   11138:	ldr	pc, [ip, #3908]!	; 0xf44

0001113c <__ctype_b_loc@plt>:
   1113c:	add	ip, pc, #0, 12
   11140:	add	ip, ip, #94208	; 0x17000
   11144:	ldr	pc, [ip, #3900]!	; 0xf3c

00011148 <exit@plt>:
   11148:	add	ip, pc, #0, 12
   1114c:	add	ip, ip, #94208	; 0x17000
   11150:	ldr	pc, [ip, #3892]!	; 0xf34

00011154 <strlen@plt>:
   11154:	add	ip, pc, #0, 12
   11158:	add	ip, ip, #94208	; 0x17000
   1115c:	ldr	pc, [ip, #3884]!	; 0xf2c

00011160 <strchr@plt>:
   11160:	add	ip, pc, #0, 12
   11164:	add	ip, ip, #94208	; 0x17000
   11168:	ldr	pc, [ip, #3876]!	; 0xf24

0001116c <fprintf@plt>:
   1116c:	add	ip, pc, #0, 12
   11170:	add	ip, ip, #94208	; 0x17000
   11174:	ldr	pc, [ip, #3868]!	; 0xf1c

00011178 <__errno_location@plt>:
   11178:	add	ip, pc, #0, 12
   1117c:	add	ip, ip, #94208	; 0x17000
   11180:	ldr	pc, [ip, #3860]!	; 0xf14

00011184 <snprintf@plt>:
   11184:	add	ip, pc, #0, 12
   11188:	add	ip, ip, #94208	; 0x17000
   1118c:	ldr	pc, [ip, #3852]!	; 0xf0c

00011190 <strerror_r@plt>:
   11190:	add	ip, pc, #0, 12
   11194:	add	ip, ip, #94208	; 0x17000
   11198:	ldr	pc, [ip, #3844]!	; 0xf04

0001119c <bind@plt>:
   1119c:	add	ip, pc, #0, 12
   111a0:	add	ip, ip, #94208	; 0x17000
   111a4:	ldr	pc, [ip, #3836]!	; 0xefc

000111a8 <memset@plt>:
   111a8:	add	ip, pc, #0, 12
   111ac:	add	ip, ip, #94208	; 0x17000
   111b0:	ldr	pc, [ip, #3828]!	; 0xef4

000111b4 <write@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #94208	; 0x17000
   111bc:	ldr	pc, [ip, #3820]!	; 0xeec

000111c0 <memchr@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #94208	; 0x17000
   111c8:	ldr	pc, [ip, #3812]!	; 0xee4

000111cc <shutdown@plt>:
   111cc:	add	ip, pc, #0, 12
   111d0:	add	ip, ip, #94208	; 0x17000
   111d4:	ldr	pc, [ip, #3804]!	; 0xedc

000111d8 <strrchr@plt>:
   111d8:	add	ip, pc, #0, 12
   111dc:	add	ip, ip, #94208	; 0x17000
   111e0:	ldr	pc, [ip, #3796]!	; 0xed4

000111e4 <listen@plt>:
   111e4:	add	ip, pc, #0, 12
   111e8:	add	ip, ip, #94208	; 0x17000
   111ec:	ldr	pc, [ip, #3788]!	; 0xecc

000111f0 <vfprintf@plt>:
   111f0:	add	ip, pc, #0, 12
   111f4:	add	ip, ip, #94208	; 0x17000
   111f8:	ldr	pc, [ip, #3780]!	; 0xec4

000111fc <fputc@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #94208	; 0x17000
   11204:	ldr	pc, [ip, #3772]!	; 0xebc

00011208 <getsockname@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #94208	; 0x17000
   11210:	ldr	pc, [ip, #3764]!	; 0xeb4

00011214 <flockfile@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #94208	; 0x17000
   1121c:	ldr	pc, [ip, #3756]!	; 0xeac

00011220 <vsnprintf@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #94208	; 0x17000
   11228:	ldr	pc, [ip, #3748]!	; 0xea4

0001122c <atoi@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #94208	; 0x17000
   11234:	ldr	pc, [ip, #3740]!	; 0xe9c

00011238 <qsort@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #94208	; 0x17000
   11240:	ldr	pc, [ip, #3732]!	; 0xe94

00011244 <freeaddrinfo@plt>:
   11244:	add	ip, pc, #0, 12
   11248:	add	ip, ip, #94208	; 0x17000
   1124c:	ldr	pc, [ip, #3724]!	; 0xe8c

00011250 <getaddrinfo@plt>:
   11250:	add	ip, pc, #0, 12
   11254:	add	ip, ip, #94208	; 0x17000
   11258:	ldr	pc, [ip, #3716]!	; 0xe84

0001125c <socket@plt>:
   1125c:	add	ip, pc, #0, 12
   11260:	add	ip, ip, #94208	; 0x17000
   11264:	ldr	pc, [ip, #3708]!	; 0xe7c

00011268 <isatty@plt>:
   11268:	add	ip, pc, #0, 12
   1126c:	add	ip, ip, #94208	; 0x17000
   11270:	ldr	pc, [ip, #3700]!	; 0xe74

00011274 <fputs@plt>:
   11274:	add	ip, pc, #0, 12
   11278:	add	ip, ip, #94208	; 0x17000
   1127c:	ldr	pc, [ip, #3692]!	; 0xe6c

00011280 <strncmp@plt>:
   11280:	add	ip, pc, #0, 12
   11284:	add	ip, ip, #94208	; 0x17000
   11288:	ldr	pc, [ip, #3684]!	; 0xe64

0001128c <abort@plt>:
   1128c:	add	ip, pc, #0, 12
   11290:	add	ip, ip, #94208	; 0x17000
   11294:	ldr	pc, [ip, #3676]!	; 0xe5c

00011298 <close@plt>:
   11298:	add	ip, pc, #0, 12
   1129c:	add	ip, ip, #94208	; 0x17000
   112a0:	ldr	pc, [ip, #3668]!	; 0xe54

000112a4 <connect@plt>:
   112a4:	add	ip, pc, #0, 12
   112a8:	add	ip, ip, #94208	; 0x17000
   112ac:	ldr	pc, [ip, #3660]!	; 0xe4c

000112b0 <__assert_fail@plt>:
   112b0:	add	ip, pc, #0, 12
   112b4:	add	ip, ip, #94208	; 0x17000
   112b8:	ldr	pc, [ip, #3652]!	; 0xe44

000112bc <tcgetattr@plt>:
   112bc:	add	ip, pc, #0, 12
   112c0:	add	ip, ip, #94208	; 0x17000
   112c4:	ldr	pc, [ip, #3644]!	; 0xe3c

000112c8 <putc_unlocked@plt>:
   112c8:	add	ip, pc, #0, 12
   112cc:	add	ip, ip, #94208	; 0x17000
   112d0:	ldr	pc, [ip, #3636]!	; 0xe34

Disassembly of section .text:

000112d4 <argp_parse@@Base-0x1138>:
   112d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   112d8:	sub	sp, sp, #1440	; 0x5a0
   112dc:	sub	sp, sp, #12
   112e0:	mov	r8, r0
   112e4:	ldr	r0, [r1]
   112e8:	mov	r7, r1
   112ec:	bl	12f9c <argp_parse@@Base+0xb90>
   112f0:	ldr	r3, [pc, #2372]	; 11c3c <putc_unlocked@plt+0x974>
   112f4:	ldr	r2, [pc, #2372]	; 11c40 <putc_unlocked@plt+0x978>
   112f8:	mov	r4, #0
   112fc:	ldr	r1, [pc, #2368]	; 11c44 <putc_unlocked@plt+0x97c>
   11300:	ldr	r0, [pc, #2368]	; 11c48 <putc_unlocked@plt+0x980>
   11304:	add	r5, sp, #40	; 0x28
   11308:	str	r2, [r3]
   1130c:	bl	12df4 <argp_parse@@Base+0x9e8>
   11310:	mov	r3, #512	; 0x200
   11314:	str	r3, [sp, #60]	; 0x3c
   11318:	mov	r1, r8
   1131c:	mov	r6, #1
   11320:	stm	sp, {r4, r5}
   11324:	mov	r3, #8
   11328:	mov	r2, r7
   1132c:	ldr	r0, [pc, #2328]	; 11c4c <putc_unlocked@plt+0x984>
   11330:	str	r4, [sp, #44]	; 0x2c
   11334:	str	r4, [sp, #48]	; 0x30
   11338:	str	r4, [sp, #40]	; 0x28
   1133c:	str	r4, [sp, #52]	; 0x34
   11340:	str	r4, [sp, #56]	; 0x38
   11344:	str	r4, [sp, #68]	; 0x44
   11348:	str	r6, [sp, #64]	; 0x40
   1134c:	bl	1240c <argp_parse@@Base>
   11350:	ldr	r1, [sp, #44]	; 0x2c
   11354:	cmp	r1, r4
   11358:	bne	1136c <putc_unlocked@plt+0xa4>
   1135c:	ldr	r2, [pc, #2284]	; 11c50 <putc_unlocked@plt+0x988>
   11360:	mov	r0, r1
   11364:	bl	110dc <error@plt>
   11368:	mov	r4, r6
   1136c:	ldr	r1, [sp, #48]	; 0x30
   11370:	cmp	r1, #0
   11374:	bne	11388 <putc_unlocked@plt+0xc0>
   11378:	ldr	r2, [pc, #2260]	; 11c54 <putc_unlocked@plt+0x98c>
   1137c:	mov	r0, r1
   11380:	bl	110dc <error@plt>
   11384:	add	r4, r4, #1
   11388:	ldr	r1, [sp, #40]	; 0x28
   1138c:	cmp	r1, #0
   11390:	bne	113a4 <putc_unlocked@plt+0xdc>
   11394:	ldr	r2, [pc, #2236]	; 11c58 <putc_unlocked@plt+0x990>
   11398:	mov	r0, r1
   1139c:	bl	110dc <error@plt>
   113a0:	add	r4, r4, #1
   113a4:	ldr	r1, [sp, #52]	; 0x34
   113a8:	cmp	r1, #0
   113ac:	bne	113c4 <putc_unlocked@plt+0xfc>
   113b0:	ldr	r2, [pc, #2212]	; 11c5c <putc_unlocked@plt+0x994>
   113b4:	mov	r0, r1
   113b8:	bl	110dc <error@plt>
   113bc:	mov	r0, #1
   113c0:	bl	11148 <exit@plt>
   113c4:	cmp	r4, #0
   113c8:	bne	113bc <putc_unlocked@plt+0xf4>
   113cc:	ldr	r1, [sp, #48]	; 0x30
   113d0:	ldr	r0, [pc, #2184]	; 11c60 <putc_unlocked@plt+0x998>
   113d4:	bl	10fec <strcmp@plt>
   113d8:	subs	r8, r0, #0
   113dc:	bne	11528 <putc_unlocked@plt+0x260>
   113e0:	add	r6, sp, #1440	; 0x5a0
   113e4:	add	r6, r6, #8
   113e8:	mov	r0, #15
   113ec:	strb	r4, [r6, #-1344]!	; 0xfffffac0
   113f0:	bl	11094 <alarm@plt>
   113f4:	mov	r0, r4
   113f8:	bl	11268 <isatty@plt>
   113fc:	ldr	r7, [pc, #2144]	; 11c64 <putc_unlocked@plt+0x99c>
   11400:	cmp	r0, #0
   11404:	beq	115d8 <putc_unlocked@plt+0x310>
   11408:	add	r1, sp, #296	; 0x128
   1140c:	mov	r0, r4
   11410:	bl	112bc <tcgetattr@plt>
   11414:	cmp	r0, #0
   11418:	blt	11484 <putc_unlocked@plt+0x1bc>
   1141c:	add	lr, sp, #296	; 0x128
   11420:	add	ip, sp, #424	; 0x1a8
   11424:	ldm	lr!, {r0, r1, r2, r3}
   11428:	stmia	ip!, {r0, r1, r2, r3}
   1142c:	ldm	lr!, {r0, r1, r2, r3}
   11430:	stmia	ip!, {r0, r1, r2, r3}
   11434:	ldm	lr!, {r0, r1, r2, r3}
   11438:	stmia	ip!, {r0, r1, r2, r3}
   1143c:	ldm	lr, {r0, r1, r2}
   11440:	stm	ip, {r0, r1, r2}
   11444:	add	r2, sp, #424	; 0x1a8
   11448:	ldr	r3, [sp, #436]	; 0x1b4
   1144c:	mov	r1, r4
   11450:	bic	r3, r3, #8
   11454:	orr	r3, r3, #64	; 0x40
   11458:	mov	r0, r4
   1145c:	str	r3, [sp, #436]	; 0x1b4
   11460:	bl	110d0 <tcsetattr@plt>
   11464:	cmp	r0, #0
   11468:	beq	11480 <putc_unlocked@plt+0x1b8>
   1146c:	bl	11178 <__errno_location@plt>
   11470:	ldr	r2, [pc, #2032]	; 11c68 <putc_unlocked@plt+0x9a0>
   11474:	ldr	r1, [r0]
   11478:	mov	r0, r4
   1147c:	bl	110dc <error@plt>
   11480:	mov	r8, #1
   11484:	ldr	r0, [pc, #2016]	; 11c6c <putc_unlocked@plt+0x9a4>
   11488:	bl	11004 <printf@plt>
   1148c:	ldr	r2, [r7]
   11490:	mov	r1, #64	; 0x40
   11494:	mov	r0, r6
   11498:	bl	1104c <fgets@plt>
   1149c:	cmp	r0, #0
   114a0:	strbeq	r0, [sp, #104]	; 0x68
   114a4:	cmp	r8, #0
   114a8:	beq	114d8 <putc_unlocked@plt+0x210>
   114ac:	mov	r1, #0
   114b0:	add	r2, sp, #296	; 0x128
   114b4:	mov	r0, r1
   114b8:	bl	110d0 <tcsetattr@plt>
   114bc:	cmp	r0, #0
   114c0:	bge	114d8 <putc_unlocked@plt+0x210>
   114c4:	bl	11178 <__errno_location@plt>
   114c8:	ldr	r2, [pc, #1952]	; 11c70 <putc_unlocked@plt+0x9a8>
   114cc:	ldr	r1, [r0]
   114d0:	mov	r0, #0
   114d4:	bl	110dc <error@plt>
   114d8:	mov	r0, #0
   114dc:	bl	11094 <alarm@plt>
   114e0:	mov	r0, r6
   114e4:	bl	11154 <strlen@plt>
   114e8:	subs	r1, r0, #0
   114ec:	ble	11514 <putc_unlocked@plt+0x24c>
   114f0:	add	r3, sp, #1440	; 0x5a0
   114f4:	sub	r1, r1, #1
   114f8:	add	r3, r3, #8
   114fc:	add	r3, r3, r1
   11500:	ldrb	r2, [r3, #-1344]	; 0xfffffac0
   11504:	cmp	r2, #10
   11508:	bne	115f4 <putc_unlocked@plt+0x32c>
   1150c:	mov	r2, #0
   11510:	strb	r2, [r3, #-1344]	; 0xfffffac0
   11514:	cmp	r1, #0
   11518:	bne	115f4 <putc_unlocked@plt+0x32c>
   1151c:	ldr	r2, [pc, #1872]	; 11c74 <putc_unlocked@plt+0x9ac>
   11520:	mov	r0, #1
   11524:	bl	110dc <error@plt>
   11528:	sub	r3, r5, #12
   1152c:	str	r3, [sp, #8]
   11530:	ldr	r2, [pc, #1856]	; 11c78 <putc_unlocked@plt+0x9b0>
   11534:	ldr	r3, [sp, #60]	; 0x3c
   11538:	mov	r1, #12
   1153c:	ldr	r0, [sp, #8]
   11540:	bl	11184 <snprintf@plt>
   11544:	mov	r2, #32
   11548:	mov	r1, #0
   1154c:	add	r0, sp, #72	; 0x48
   11550:	bl	111a8 <memset@plt>
   11554:	ldr	r3, [sp, #56]	; 0x38
   11558:	mov	r5, #1
   1155c:	str	r3, [sp, #76]	; 0x4c
   11560:	add	r2, sp, #72	; 0x48
   11564:	add	r3, sp, #20
   11568:	ldr	r1, [sp, #8]
   1156c:	ldr	r0, [sp, #40]	; 0x28
   11570:	str	r5, [sp, #80]	; 0x50
   11574:	bl	11250 <getaddrinfo@plt>
   11578:	subs	r7, r0, #0
   1157c:	beq	115a4 <putc_unlocked@plt+0x2dc>
   11580:	bl	11178 <__errno_location@plt>
   11584:	ldr	r6, [r0]
   11588:	mov	r0, r7
   1158c:	bl	11040 <gai_strerror@plt>
   11590:	ldr	r2, [pc, #1764]	; 11c7c <putc_unlocked@plt+0x9b4>
   11594:	mov	r1, r6
   11598:	mov	r3, r0
   1159c:	mov	r0, r5
   115a0:	bl	110dc <error@plt>
   115a4:	ldr	r6, [sp, #20]
   115a8:	cmp	r6, #0
   115ac:	bne	115fc <putc_unlocked@plt+0x334>
   115b0:	ldr	r0, [sp, #20]
   115b4:	bl	11244 <freeaddrinfo@plt>
   115b8:	bl	11178 <__errno_location@plt>
   115bc:	ldr	r3, [sp, #40]	; 0x28
   115c0:	ldr	r2, [pc, #1720]	; 11c80 <putc_unlocked@plt+0x9b8>
   115c4:	ldr	r1, [r0]
   115c8:	mov	r0, #1
   115cc:	bl	110dc <error@plt>
   115d0:	ldr	r3, [r6, #16]
   115d4:	udf	#0
   115d8:	ldr	r2, [r7]
   115dc:	mov	r1, #64	; 0x40
   115e0:	mov	r0, r6
   115e4:	bl	1104c <fgets@plt>
   115e8:	cmp	r0, #0
   115ec:	strbeq	r4, [sp, #104]	; 0x68
   115f0:	b	114d8 <putc_unlocked@plt+0x210>
   115f4:	str	r6, [sp, #48]	; 0x30
   115f8:	b	11528 <putc_unlocked@plt+0x260>
   115fc:	ldmib	r6, {r0, r1, r2}
   11600:	bl	1125c <socket@plt>
   11604:	subs	r5, r0, #0
   11608:	blt	11628 <putc_unlocked@plt+0x360>
   1160c:	ldr	r2, [r6, #16]
   11610:	ldr	r1, [r6, #20]
   11614:	bl	112a4 <connect@plt>
   11618:	cmp	r0, #0
   1161c:	bge	11630 <putc_unlocked@plt+0x368>
   11620:	mov	r0, r5
   11624:	bl	11298 <close@plt>
   11628:	ldr	r6, [r6, #28]
   1162c:	b	115a8 <putc_unlocked@plt+0x2e0>
   11630:	ldr	r9, [r6, #16]
   11634:	ldr	r1, [r6, #20]
   11638:	mov	r2, r9
   1163c:	add	r0, sp, #168	; 0xa8
   11640:	bl	11064 <memcpy@plt>
   11644:	ldr	r0, [sp, #20]
   11648:	bl	11244 <freeaddrinfo@plt>
   1164c:	ldr	r6, [sp, #64]	; 0x40
   11650:	cmp	r6, #0
   11654:	bne	1188c <putc_unlocked@plt+0x5c4>
   11658:	mov	r3, #48	; 0x30
   1165c:	mov	r2, #2
   11660:	ldr	r1, [sp, #8]
   11664:	mov	r0, r5
   11668:	strb	r6, [sp, #29]
   1166c:	strb	r3, [sp, #28]
   11670:	bl	11ea8 <putc_unlocked@plt+0xbe0>
   11674:	str	r6, [sp, #68]	; 0x44
   11678:	mvn	r6, #0
   1167c:	ldr	r7, [sp, #44]	; 0x2c
   11680:	ldr	r8, [pc, #1532]	; 11c84 <putc_unlocked@plt+0x9bc>
   11684:	mov	r0, r7
   11688:	bl	11154 <strlen@plt>
   1168c:	mov	r1, r7
   11690:	add	r2, r0, #1
   11694:	mov	r0, r5
   11698:	bl	11ea8 <putc_unlocked@plt+0xbe0>
   1169c:	ldr	r7, [sp, #48]	; 0x30
   116a0:	mov	r0, r7
   116a4:	bl	11154 <strlen@plt>
   116a8:	mov	r1, r7
   116ac:	add	r2, r0, #1
   116b0:	mov	r0, r5
   116b4:	bl	11ea8 <putc_unlocked@plt+0xbe0>
   116b8:	ldr	r7, [sp, #52]	; 0x34
   116bc:	mov	r0, r7
   116c0:	bl	11154 <strlen@plt>
   116c4:	mov	r1, r7
   116c8:	add	r2, r0, #1
   116cc:	mov	r0, r5
   116d0:	bl	11ea8 <putc_unlocked@plt+0xbe0>
   116d4:	str	r4, [sp, #8]
   116d8:	lsr	r7, r6, #31
   116dc:	ands	r7, r7, r5, lsr #31
   116e0:	bne	11c30 <putc_unlocked@plt+0x968>
   116e4:	mov	r3, r7
   116e8:	add	r2, sp, #296	; 0x128
   116ec:	mov	r1, #0
   116f0:	str	r1, [r2, r3, lsl #2]
   116f4:	add	r3, r3, #1
   116f8:	cmp	r3, #32
   116fc:	bne	116e8 <putc_unlocked@plt+0x420>
   11700:	cmn	r5, #1
   11704:	beq	1172c <putc_unlocked@plt+0x464>
   11708:	asr	r3, r5, #5
   1170c:	add	r2, sp, #1440	; 0x5a0
   11710:	add	r2, r2, #8
   11714:	add	r3, r2, r3, lsl #2
   11718:	mov	r0, #1
   1171c:	ldr	r1, [r3, #-1152]	; 0xfffffb80
   11720:	and	r2, r5, #31
   11724:	orr	r2, r1, r0, lsl r2
   11728:	str	r2, [r3, #-1152]	; 0xfffffb80
   1172c:	ldr	r3, [sp, #8]
   11730:	cmp	r3, #0
   11734:	ldreq	r3, [sp, #296]	; 0x128
   11738:	orreq	r3, r3, #1
   1173c:	streq	r3, [sp, #296]	; 0x128
   11740:	cmp	r6, #0
   11744:	blt	1176c <putc_unlocked@plt+0x4a4>
   11748:	asr	r3, r6, #5
   1174c:	add	r2, sp, #1440	; 0x5a0
   11750:	add	r2, r2, #8
   11754:	add	r3, r2, r3, lsl #2
   11758:	mov	r0, #1
   1175c:	ldr	r1, [r3, #-1152]	; 0xfffffb80
   11760:	and	r2, r6, #31
   11764:	orr	r2, r1, r0, lsl r2
   11768:	str	r2, [r3, #-1152]	; 0xfffffb80
   1176c:	ldr	r3, [sp, #8]
   11770:	cmp	r5, r6
   11774:	movlt	r0, r6
   11778:	movge	r0, r5
   1177c:	cmp	r0, r3
   11780:	movlt	r0, r3
   11784:	mov	r3, #0
   11788:	str	r3, [sp]
   1178c:	mov	r2, r3
   11790:	add	r1, sp, #296	; 0x128
   11794:	add	r0, r0, #1
   11798:	bl	1107c <select@plt>
   1179c:	cmn	r0, #1
   117a0:	bne	117b8 <putc_unlocked@plt+0x4f0>
   117a4:	bl	11178 <__errno_location@plt>
   117a8:	ldr	r2, [pc, #1240]	; 11c88 <putc_unlocked@plt+0x9c0>
   117ac:	ldr	r1, [r0]
   117b0:	mov	r0, #1
   117b4:	bl	110dc <error@plt>
   117b8:	ldr	r3, [sp, #8]
   117bc:	cmp	r3, #0
   117c0:	bne	11828 <putc_unlocked@plt+0x560>
   117c4:	ldr	r3, [sp, #296]	; 0x128
   117c8:	tst	r3, #1
   117cc:	beq	11828 <putc_unlocked@plt+0x560>
   117d0:	mov	r2, #1024	; 0x400
   117d4:	add	r1, sp, #424	; 0x1a8
   117d8:	mov	r0, #0
   117dc:	bl	11010 <read@plt>
   117e0:	subs	r9, r0, #0
   117e4:	bge	11a64 <putc_unlocked@plt+0x79c>
   117e8:	bl	11178 <__errno_location@plt>
   117ec:	ldr	r2, [pc, #1176]	; 11c8c <putc_unlocked@plt+0x9c4>
   117f0:	ldr	r1, [r0]
   117f4:	mov	r0, #1
   117f8:	bl	110dc <error@plt>
   117fc:	mov	r2, r9
   11800:	add	r1, sp, #424	; 0x1a8
   11804:	mov	r0, r5
   11808:	bl	111b4 <write@plt>
   1180c:	cmp	r0, #0
   11810:	bge	11828 <putc_unlocked@plt+0x560>
   11814:	bl	11178 <__errno_location@plt>
   11818:	ldr	r2, [pc, #1136]	; 11c90 <putc_unlocked@plt+0x9c8>
   1181c:	ldr	r1, [r0]
   11820:	mov	r0, #1
   11824:	bl	110dc <error@plt>
   11828:	cmn	r5, #1
   1182c:	beq	11ba8 <putc_unlocked@plt+0x8e0>
   11830:	asr	r2, r5, #5
   11834:	add	r3, sp, #1440	; 0x5a0
   11838:	add	r3, r3, #8
   1183c:	add	r2, r3, r2, lsl #2
   11840:	mov	sl, #1
   11844:	and	r3, r5, #31
   11848:	ldr	r2, [r2, #-1152]	; 0xfffffb80
   1184c:	ands	r3, r2, sl, lsl r3
   11850:	beq	11ba8 <putc_unlocked@plt+0x8e0>
   11854:	add	fp, sp, #424	; 0x1a8
   11858:	mov	r2, #1024	; 0x400
   1185c:	mov	r1, fp
   11860:	mov	r0, r5
   11864:	bl	11010 <read@plt>
   11868:	subs	r9, r0, #0
   1186c:	bge	11a88 <putc_unlocked@plt+0x7c0>
   11870:	bl	11178 <__errno_location@plt>
   11874:	ldr	r2, [pc, #1048]	; 11c94 <putc_unlocked@plt+0x9cc>
   11878:	ldr	r1, [r0]
   1187c:	mov	r0, sl
   11880:	bl	110dc <error@plt>
   11884:	mov	r1, r4
   11888:	b	11ad0 <putc_unlocked@plt+0x808>
   1188c:	ldrh	r8, [sp, #168]	; 0xa8
   11890:	mov	r6, #1
   11894:	mov	r2, #0
   11898:	mov	r1, r6
   1189c:	mov	r0, r8
   118a0:	str	r6, [sp, #296]	; 0x128
   118a4:	bl	1125c <socket@plt>
   118a8:	subs	r7, r0, #0
   118ac:	bge	118c4 <putc_unlocked@plt+0x5fc>
   118b0:	bl	11178 <__errno_location@plt>
   118b4:	ldr	r2, [pc, #988]	; 11c98 <putc_unlocked@plt+0x9d0>
   118b8:	ldr	r1, [r0]
   118bc:	mov	r0, r6
   118c0:	bl	110dc <error@plt>
   118c4:	mov	r3, #4
   118c8:	str	r3, [sp]
   118cc:	mov	r2, #2
   118d0:	add	r3, sp, #296	; 0x128
   118d4:	mov	r1, #1
   118d8:	mov	r0, r7
   118dc:	add	r6, sp, #424	; 0x1a8
   118e0:	bl	10ff8 <setsockopt@plt>
   118e4:	mov	r2, #128	; 0x80
   118e8:	mov	r1, #0
   118ec:	mov	r0, r6
   118f0:	bl	111a8 <memset@plt>
   118f4:	cmp	r8, #2
   118f8:	beq	11918 <putc_unlocked@plt+0x650>
   118fc:	cmp	r8, #10
   11900:	beq	11918 <putc_unlocked@plt+0x650>
   11904:	ldr	r2, [pc, #912]	; 11c9c <putc_unlocked@plt+0x9d4>
   11908:	mov	r1, #97	; 0x61
   1190c:	mov	r0, #1
   11910:	bl	110dc <error@plt>
   11914:	b	11924 <putc_unlocked@plt+0x65c>
   11918:	ldr	r3, [sp, #68]	; 0x44
   1191c:	strh	r8, [r6]
   11920:	strh	r3, [r6, #2]
   11924:	mov	r2, r9
   11928:	mov	r1, r6
   1192c:	mov	r0, r7
   11930:	bl	1119c <bind@plt>
   11934:	cmp	r0, #0
   11938:	bge	11950 <putc_unlocked@plt+0x688>
   1193c:	bl	11178 <__errno_location@plt>
   11940:	ldr	r2, [pc, #856]	; 11ca0 <putc_unlocked@plt+0x9d8>
   11944:	ldr	r1, [r0]
   11948:	mov	r0, #1
   1194c:	bl	110dc <error@plt>
   11950:	mov	r3, #128	; 0x80
   11954:	add	r2, sp, #24
   11958:	mov	r1, r6
   1195c:	mov	r0, r7
   11960:	str	r3, [sp, #24]
   11964:	bl	11208 <getsockname@plt>
   11968:	cmp	r0, #0
   1196c:	beq	11984 <putc_unlocked@plt+0x6bc>
   11970:	bl	11178 <__errno_location@plt>
   11974:	ldr	r2, [pc, #808]	; 11ca4 <putc_unlocked@plt+0x9dc>
   11978:	ldr	r1, [r0]
   1197c:	mov	r0, #1
   11980:	bl	110dc <error@plt>
   11984:	mov	r1, #1
   11988:	mov	r0, r7
   1198c:	bl	111e4 <listen@plt>
   11990:	cmp	r0, #0
   11994:	beq	119ac <putc_unlocked@plt+0x6e4>
   11998:	bl	11178 <__errno_location@plt>
   1199c:	ldr	r2, [pc, #772]	; 11ca8 <putc_unlocked@plt+0x9e0>
   119a0:	ldr	r1, [r0]
   119a4:	mov	r0, #1
   119a8:	bl	110dc <error@plt>
   119ac:	ldrh	r3, [r6]
   119b0:	cmp	r3, #2
   119b4:	beq	119d4 <putc_unlocked@plt+0x70c>
   119b8:	cmp	r3, #10
   119bc:	beq	119d4 <putc_unlocked@plt+0x70c>
   119c0:	ldr	r2, [pc, #724]	; 11c9c <putc_unlocked@plt+0x9d4>
   119c4:	mov	r1, #97	; 0x61
   119c8:	mov	r0, #1
   119cc:	bl	110dc <error@plt>
   119d0:	b	119e4 <putc_unlocked@plt+0x71c>
   119d4:	ldrh	r3, [r6, #2]
   119d8:	rev16	r3, r3
   119dc:	uxth	r3, r3
   119e0:	str	r3, [sp, #68]	; 0x44
   119e4:	ldr	r3, [sp, #68]	; 0x44
   119e8:	ldr	r2, [pc, #700]	; 11cac <putc_unlocked@plt+0x9e4>
   119ec:	mov	r1, #12
   119f0:	ldr	r0, [sp, #8]
   119f4:	bl	11184 <snprintf@plt>
   119f8:	ldr	r0, [sp, #8]
   119fc:	bl	11154 <strlen@plt>
   11a00:	ldr	r1, [sp, #8]
   11a04:	add	r2, r0, #1
   11a08:	mov	r0, r5
   11a0c:	bl	11ea8 <putc_unlocked@plt+0xbe0>
   11a10:	mov	r0, #5
   11a14:	bl	11094 <alarm@plt>
   11a18:	mov	r1, r6
   11a1c:	add	r2, sp, #24
   11a20:	mov	r0, r7
   11a24:	bl	110c4 <accept@plt>
   11a28:	subs	r6, r0, #0
   11a2c:	bge	11a44 <putc_unlocked@plt+0x77c>
   11a30:	bl	11178 <__errno_location@plt>
   11a34:	ldr	r2, [pc, #628]	; 11cb0 <putc_unlocked@plt+0x9e8>
   11a38:	ldr	r1, [r0]
   11a3c:	mov	r0, #1
   11a40:	bl	110dc <error@plt>
   11a44:	mov	r0, #0
   11a48:	bl	11094 <alarm@plt>
   11a4c:	mov	r1, #1
   11a50:	mov	r0, r6
   11a54:	bl	111cc <shutdown@plt>
   11a58:	mov	r0, r7
   11a5c:	bl	11298 <close@plt>
   11a60:	b	1167c <putc_unlocked@plt+0x3b4>
   11a64:	bne	117fc <putc_unlocked@plt+0x534>
   11a68:	mov	r1, #1
   11a6c:	mov	r0, r5
   11a70:	bl	111cc <shutdown@plt>
   11a74:	mov	r0, #0
   11a78:	bl	11298 <close@plt>
   11a7c:	mvn	r3, #0
   11a80:	str	r3, [sp, #8]
   11a84:	b	116d8 <putc_unlocked@plt+0x410>
   11a88:	bne	11a9c <putc_unlocked@plt+0x7d4>
   11a8c:	mov	r0, r5
   11a90:	bl	11298 <close@plt>
   11a94:	mvn	r5, #0
   11a98:	b	116d8 <putc_unlocked@plt+0x410>
   11a9c:	ldrgt	r3, [r8]
   11aa0:	movgt	r2, r7
   11aa4:	movgt	r1, r4
   11aa8:	ble	11884 <putc_unlocked@plt+0x5bc>
   11aac:	cmp	r9, r1
   11ab0:	movgt	ip, #1
   11ab4:	movle	ip, #0
   11ab8:	cmp	r1, #1
   11abc:	movgt	ip, #0
   11ac0:	cmp	ip, #0
   11ac4:	bne	11b8c <putc_unlocked@plt+0x8c4>
   11ac8:	cmp	r2, #0
   11acc:	strne	r3, [r8]
   11ad0:	sub	r2, r9, r1
   11ad4:	mov	r0, #1
   11ad8:	add	r1, fp, r1
   11adc:	bl	111b4 <write@plt>
   11ae0:	cmp	r0, #0
   11ae4:	bge	11afc <putc_unlocked@plt+0x834>
   11ae8:	bl	11178 <__errno_location@plt>
   11aec:	ldr	r2, [pc, #412]	; 11c90 <putc_unlocked@plt+0x9c8>
   11af0:	ldr	r1, [r0]
   11af4:	mov	r0, #1
   11af8:	bl	110dc <error@plt>
   11afc:	cmp	r6, #0
   11b00:	blt	116d8 <putc_unlocked@plt+0x410>
   11b04:	asr	r2, r6, #5
   11b08:	add	r3, sp, #1440	; 0x5a0
   11b0c:	add	r3, r3, #8
   11b10:	add	r2, r3, r2, lsl #2
   11b14:	mov	fp, #1
   11b18:	and	r3, r6, #31
   11b1c:	ldr	r2, [r2, #-1152]	; 0xfffffb80
   11b20:	ands	r3, r2, fp, lsl r3
   11b24:	beq	116d8 <putc_unlocked@plt+0x410>
   11b28:	add	sl, sp, #424	; 0x1a8
   11b2c:	mov	r2, #1024	; 0x400
   11b30:	mov	r1, sl
   11b34:	mov	r0, r6
   11b38:	bl	11010 <read@plt>
   11b3c:	subs	r3, r0, #0
   11b40:	bge	11bb0 <putc_unlocked@plt+0x8e8>
   11b44:	str	r3, [sp, #12]
   11b48:	bl	11178 <__errno_location@plt>
   11b4c:	ldr	r2, [pc, #352]	; 11cb4 <putc_unlocked@plt+0x9ec>
   11b50:	ldr	r1, [r0]
   11b54:	mov	r0, fp
   11b58:	bl	110dc <error@plt>
   11b5c:	ldr	r3, [sp, #12]
   11b60:	cmp	r3, #0
   11b64:	movgt	r2, #1
   11b68:	movle	r2, #0
   11b6c:	cmp	r9, #1
   11b70:	movgt	r2, #0
   11b74:	cmp	r2, #0
   11b78:	movne	r1, r4
   11b7c:	ldrne	r2, [r8]
   11b80:	bne	11bdc <putc_unlocked@plt+0x914>
   11b84:	mov	r1, r4
   11b88:	b	11c00 <putc_unlocked@plt+0x938>
   11b8c:	ldrb	r0, [fp, r1]
   11b90:	cmp	r0, #1
   11b94:	bhi	11ac8 <putc_unlocked@plt+0x800>
   11b98:	add	r1, r1, #1
   11b9c:	mov	r3, r0
   11ba0:	mov	r2, ip
   11ba4:	b	11aac <putc_unlocked@plt+0x7e4>
   11ba8:	mov	r9, r4
   11bac:	b	11afc <putc_unlocked@plt+0x834>
   11bb0:	bne	11b60 <putc_unlocked@plt+0x898>
   11bb4:	mov	r0, r6
   11bb8:	bl	11298 <close@plt>
   11bbc:	mvn	r6, #0
   11bc0:	b	116d8 <putc_unlocked@plt+0x410>
   11bc4:	ldrb	r0, [sl, r1]
   11bc8:	cmp	r0, #1
   11bcc:	bhi	11bf8 <putc_unlocked@plt+0x930>
   11bd0:	add	r1, r1, #1
   11bd4:	mov	r2, r0
   11bd8:	mov	r7, ip
   11bdc:	cmp	r3, r1
   11be0:	movgt	ip, #1
   11be4:	movle	ip, #0
   11be8:	cmp	r1, #1
   11bec:	movgt	ip, #0
   11bf0:	cmp	ip, #0
   11bf4:	bne	11bc4 <putc_unlocked@plt+0x8fc>
   11bf8:	cmp	r7, #0
   11bfc:	strne	r2, [r8]
   11c00:	sub	r2, r3, r1
   11c04:	mov	r0, #2
   11c08:	add	r1, sl, r1
   11c0c:	bl	111b4 <write@plt>
   11c10:	cmp	r0, #0
   11c14:	bge	116d8 <putc_unlocked@plt+0x410>
   11c18:	bl	11178 <__errno_location@plt>
   11c1c:	ldr	r2, [pc, #148]	; 11cb8 <putc_unlocked@plt+0x9f0>
   11c20:	ldr	r1, [r0]
   11c24:	mov	r0, #1
   11c28:	bl	110dc <error@plt>
   11c2c:	b	116d8 <putc_unlocked@plt+0x410>
   11c30:	ldr	r3, [pc, #76]	; 11c84 <putc_unlocked@plt+0x9bc>
   11c34:	ldr	r0, [r3]
   11c38:	b	113c0 <putc_unlocked@plt+0xf8>
   11c3c:	andeq	r9, r2, r0, asr #5
   11c40:			; <UNDEFINED> instruction: 0x000172b7
   11c44:	andeq	r9, r2, r4, lsl r1
   11c48:	andeq	r7, r1, pc, asr #5
   11c4c:	andeq	r9, r2, ip, lsl r1
   11c50:	ldrdeq	r7, [r1], -r5
   11c54:	andeq	r7, r1, r8, ror #5
   11c58:	strdeq	r7, [r1], -pc	; <UNPREDICTABLE>
   11c5c:	andeq	r7, r1, r2, lsl r3
   11c60:	strdeq	r7, [r1], -sp
   11c64:	andeq	r9, r2, r8, ror r2
   11c68:	andeq	r7, r1, r8, lsr #6
   11c6c:	andeq	r7, r1, r0, asr #6
   11c70:	andeq	r7, r1, fp, asr #6
   11c74:	andeq	r7, r1, r6, ror #6
   11c78:	andeq	r7, r1, r5, ror r3
   11c7c:	andeq	r7, r1, r8, ror r3
   11c80:	muleq	r1, r0, r4
   11c84:	andeq	r9, r2, r4, lsl #5
   11c88:	andeq	r7, r1, r7, lsl r4
   11c8c:	andeq	r7, r1, r4, lsr #8
   11c90:	andeq	r7, r1, r8, lsr r4
   11c94:	andeq	r7, r1, r6, asr #8
   11c98:	andeq	r7, r1, r8, lsl #7
   11c9c:	muleq	r1, fp, r3
   11ca0:			; <UNDEFINED> instruction: 0x000173b2
   11ca4:	andeq	r7, r1, r5, asr #7
   11ca8:	ldrdeq	r7, [r1], -pc	; <UNPREDICTABLE>
   11cac:	strdeq	r7, [r1], -r9
   11cb0:	strdeq	r7, [r1], -ip
   11cb4:	andeq	r7, r1, pc, asr r4
   11cb8:	andeq	r7, r1, r8, ror r4
   11cbc:	mov	fp, #0
   11cc0:	mov	lr, #0
   11cc4:	pop	{r1}		; (ldr r1, [sp], #4)
   11cc8:	mov	r2, sp
   11ccc:	push	{r2}		; (str r2, [sp, #-4]!)
   11cd0:	push	{r0}		; (str r0, [sp, #-4]!)
   11cd4:	ldr	ip, [pc, #16]	; 11cec <putc_unlocked@plt+0xa24>
   11cd8:	push	{ip}		; (str ip, [sp, #-4]!)
   11cdc:	ldr	r0, [pc, #12]	; 11cf0 <putc_unlocked@plt+0xa28>
   11ce0:	ldr	r3, [pc, #12]	; 11cf4 <putc_unlocked@plt+0xa2c>
   11ce4:	bl	11100 <__libc_start_main@plt>
   11ce8:	bl	1128c <abort@plt>
   11cec:	andeq	r7, r1, ip, ror r2
   11cf0:	ldrdeq	r1, [r1], -r4
   11cf4:	andeq	r7, r1, ip, lsl r2
   11cf8:	ldr	r3, [pc, #20]	; 11d14 <putc_unlocked@plt+0xa4c>
   11cfc:	ldr	r2, [pc, #20]	; 11d18 <putc_unlocked@plt+0xa50>
   11d00:	add	r3, pc, r3
   11d04:	ldr	r2, [r3, r2]
   11d08:	cmp	r2, #0
   11d0c:	bxeq	lr
   11d10:	b	11124 <__gmon_start__@plt>
   11d14:	strdeq	r7, [r1], -r8
   11d18:	andeq	r0, r0, r8, lsl #2
   11d1c:	ldr	r3, [pc, #28]	; 11d40 <putc_unlocked@plt+0xa78>
   11d20:	ldr	r0, [pc, #28]	; 11d44 <putc_unlocked@plt+0xa7c>
   11d24:	sub	r3, r3, r0
   11d28:	cmp	r3, #6
   11d2c:	bxls	lr
   11d30:	ldr	r3, [pc, #16]	; 11d48 <putc_unlocked@plt+0xa80>
   11d34:	cmp	r3, #0
   11d38:	bxeq	lr
   11d3c:	bx	r3
   11d40:	andeq	r9, r2, fp, ror #4
   11d44:	andeq	r9, r2, r8, ror #4
   11d48:	andeq	r0, r0, r0
   11d4c:	ldr	r1, [pc, #36]	; 11d78 <putc_unlocked@plt+0xab0>
   11d50:	ldr	r0, [pc, #36]	; 11d7c <putc_unlocked@plt+0xab4>
   11d54:	sub	r1, r1, r0
   11d58:	asr	r1, r1, #2
   11d5c:	add	r1, r1, r1, lsr #31
   11d60:	asrs	r1, r1, #1
   11d64:	bxeq	lr
   11d68:	ldr	r3, [pc, #16]	; 11d80 <putc_unlocked@plt+0xab8>
   11d6c:	cmp	r3, #0
   11d70:	bxeq	lr
   11d74:	bx	r3
   11d78:	andeq	r9, r2, r8, ror #4
   11d7c:	andeq	r9, r2, r8, ror #4
   11d80:	andeq	r0, r0, r0
   11d84:	push	{r4, lr}
   11d88:	ldr	r4, [pc, #24]	; 11da8 <putc_unlocked@plt+0xae0>
   11d8c:	ldrb	r3, [r4]
   11d90:	cmp	r3, #0
   11d94:	popne	{r4, pc}
   11d98:	bl	11d1c <putc_unlocked@plt+0xa54>
   11d9c:	mov	r3, #1
   11da0:	strb	r3, [r4]
   11da4:	pop	{r4, pc}
   11da8:	andeq	r9, r2, r0, lsl #5
   11dac:	ldr	r0, [pc, #40]	; 11ddc <putc_unlocked@plt+0xb14>
   11db0:	ldr	r3, [r0]
   11db4:	cmp	r3, #0
   11db8:	bne	11dc0 <putc_unlocked@plt+0xaf8>
   11dbc:	b	11d4c <putc_unlocked@plt+0xa84>
   11dc0:	ldr	r3, [pc, #24]	; 11de0 <putc_unlocked@plt+0xb18>
   11dc4:	cmp	r3, #0
   11dc8:	beq	11dbc <putc_unlocked@plt+0xaf4>
   11dcc:	push	{r4, lr}
   11dd0:	blx	r3
   11dd4:	pop	{r4, lr}
   11dd8:	b	11d4c <putc_unlocked@plt+0xa84>
   11ddc:	andeq	r8, r2, ip, lsl #30
   11de0:	andeq	r0, r0, r0
   11de4:	cmp	r0, #97	; 0x61
   11de8:	push	{r4, lr}
   11dec:	ldr	r4, [r2, #28]
   11df0:	beq	11ea0 <putc_unlocked@plt+0xbd8>
   11df4:	mov	r3, r0
   11df8:	mov	r0, r1
   11dfc:	bgt	11e40 <putc_unlocked@plt+0xb78>
   11e00:	cmp	r3, #52	; 0x34
   11e04:	beq	11e8c <putc_unlocked@plt+0xbc4>
   11e08:	bgt	11e24 <putc_unlocked@plt+0xb5c>
   11e0c:	cmp	r3, #0
   11e10:	streq	r1, [r4, #12]
   11e14:	ldreq	r3, [r2, #4]
   11e18:	streq	r3, [r2, #12]
   11e1c:	mov	r0, #0
   11e20:	pop	{r4, pc}
   11e24:	cmp	r3, #54	; 0x36
   11e28:	beq	11e98 <putc_unlocked@plt+0xbd0>
   11e2c:	cmp	r3, #80	; 0x50
   11e30:	bne	11e1c <putc_unlocked@plt+0xb54>
   11e34:	bl	1122c <atoi@plt>
   11e38:	str	r0, [r4, #20]
   11e3c:	b	11e1c <putc_unlocked@plt+0xb54>
   11e40:	cmp	r3, #110	; 0x6e
   11e44:	moveq	r3, #0
   11e48:	streq	r3, [r4, #24]
   11e4c:	beq	11e1c <putc_unlocked@plt+0xb54>
   11e50:	bgt	11e68 <putc_unlocked@plt+0xba0>
   11e54:	cmp	r3, #101	; 0x65
   11e58:	beq	11e80 <putc_unlocked@plt+0xbb8>
   11e5c:	cmp	r3, #104	; 0x68
   11e60:	streq	r1, [r4]
   11e64:	b	11e1c <putc_unlocked@plt+0xb54>
   11e68:	cmp	r3, #112	; 0x70
   11e6c:	streq	r1, [r4, #8]
   11e70:	beq	11e1c <putc_unlocked@plt+0xb54>
   11e74:	cmp	r3, #117	; 0x75
   11e78:	streq	r1, [r4, #4]
   11e7c:	b	11e1c <putc_unlocked@plt+0xb54>
   11e80:	bl	1122c <atoi@plt>
   11e84:	str	r0, [r4, #28]
   11e88:	b	11e1c <putc_unlocked@plt+0xb54>
   11e8c:	mov	r3, #2
   11e90:	str	r3, [r4, #16]
   11e94:	b	11e1c <putc_unlocked@plt+0xb54>
   11e98:	mov	r3, #10
   11e9c:	b	11e90 <putc_unlocked@plt+0xbc8>
   11ea0:	mov	r3, #0
   11ea4:	b	11e90 <putc_unlocked@plt+0xbc8>
   11ea8:	push	{r4, lr}
   11eac:	bl	111b4 <write@plt>
   11eb0:	cmp	r0, #0
   11eb4:	popge	{r4, pc}
   11eb8:	bl	11178 <__errno_location@plt>
   11ebc:	ldr	r2, [pc, #12]	; 11ed0 <putc_unlocked@plt+0xc08>
   11ec0:	pop	{r4, lr}
   11ec4:	ldr	r1, [r0]
   11ec8:	mov	r0, #1
   11ecc:	b	110dc <error@plt>
   11ed0:	andeq	r7, r1, r4, lsr #5
   11ed4:	push	{r4, r5, r6, lr}
   11ed8:	ldr	r6, [r0]
   11edc:	cmp	r6, #0
   11ee0:	beq	11f2c <putc_unlocked@plt+0xc64>
   11ee4:	mov	ip, r2
   11ee8:	ldr	r2, [r0, #32]
   11eec:	mov	r5, r1
   11ef0:	str	r2, [r1, #36]	; 0x24
   11ef4:	ldr	r2, [r0, #24]
   11ef8:	mov	r4, r0
   11efc:	str	r2, [r1, #28]
   11f00:	ldr	r2, [r0, #28]
   11f04:	str	r2, [r1, #32]
   11f08:	ldr	r2, [r0, #12]
   11f0c:	mov	r0, ip
   11f10:	str	r2, [r1, #20]
   11f14:	mov	r2, r1
   11f18:	mov	r1, r3
   11f1c:	blx	r6
   11f20:	ldr	r3, [r5, #36]	; 0x24
   11f24:	str	r3, [r4, #32]
   11f28:	pop	{r4, r5, r6, pc}
   11f2c:	mov	r0, #7
   11f30:	pop	{r4, r5, r6, pc}
   11f34:	ldr	r3, [r0]
   11f38:	push	{r4, r5, r6, lr}
   11f3c:	cmp	r3, #0
   11f40:	ldr	r4, [r0, #16]
   11f44:	bne	11f54 <putc_unlocked@plt+0xc8c>
   11f48:	ldr	r2, [r0, #4]
   11f4c:	cmp	r2, #0
   11f50:	beq	11fbc <putc_unlocked@plt+0xcf4>
   11f54:	ldr	r2, [r1, #8]
   11f58:	cmp	r3, #0
   11f5c:	add	r2, r2, #1
   11f60:	str	r2, [r1, #8]
   11f64:	beq	11fbc <putc_unlocked@plt+0xcf4>
   11f68:	mov	r2, #0
   11f6c:	add	r3, r3, #24
   11f70:	ldr	r0, [r3, #-20]	; 0xffffffec
   11f74:	cmp	r0, #0
   11f78:	bne	11ff8 <putc_unlocked@plt+0xd30>
   11f7c:	ldr	r0, [r3, #-24]	; 0xffffffe8
   11f80:	cmp	r0, #0
   11f84:	bne	11ff8 <putc_unlocked@plt+0xd30>
   11f88:	ldr	r0, [r3, #-8]
   11f8c:	cmp	r0, #0
   11f90:	bne	11ff8 <putc_unlocked@plt+0xd30>
   11f94:	ldr	r0, [r3, #-4]
   11f98:	cmp	r0, #0
   11f9c:	bne	11ff8 <putc_unlocked@plt+0xd30>
   11fa0:	ldr	r3, [r1]
   11fa4:	add	r0, r2, r2, lsl #1
   11fa8:	add	r3, r3, r0
   11fac:	str	r3, [r1]
   11fb0:	ldr	r3, [r1, #4]
   11fb4:	add	r2, r3, r2
   11fb8:	str	r2, [r1, #4]
   11fbc:	cmp	r4, #0
   11fc0:	movne	r5, r1
   11fc4:	addne	r4, r4, #16
   11fc8:	bne	11fe4 <putc_unlocked@plt+0xd1c>
   11fcc:	pop	{r4, r5, r6, pc}
   11fd0:	mov	r1, r5
   11fd4:	bl	11f34 <putc_unlocked@plt+0xc6c>
   11fd8:	ldr	r3, [r5, #12]
   11fdc:	add	r3, r3, #1
   11fe0:	str	r3, [r5, #12]
   11fe4:	add	r4, r4, #16
   11fe8:	ldr	r0, [r4, #-32]	; 0xffffffe0
   11fec:	cmp	r0, #0
   11ff0:	bne	11fd0 <putc_unlocked@plt+0xd08>
   11ff4:	pop	{r4, r5, r6, pc}
   11ff8:	add	r2, r2, #1
   11ffc:	b	11f6c <putc_unlocked@plt+0xca4>
   12000:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12004:	sub	sp, sp, #36	; 0x24
   12008:	ldr	r6, [r0]
   1200c:	mov	r9, r0
   12010:	cmp	r6, #0
   12014:	str	r1, [sp, #16]
   12018:	str	r2, [sp, #20]
   1201c:	mov	r4, r3
   12020:	ldr	r5, [sp, #72]	; 0x48
   12024:	ldr	sl, [r0, #16]
   12028:	addne	r7, r6, #24
   1202c:	movne	fp, #0
   12030:	bne	121ac <putc_unlocked@plt+0xee4>
   12034:	ldr	r6, [r0, #4]
   12038:	cmp	r6, #0
   1203c:	beq	120a0 <putc_unlocked@plt+0xdd8>
   12040:	ldr	r3, [r9, #4]
   12044:	ldr	r2, [sp, #16]
   12048:	stm	r4, {r3, r9}
   1204c:	ldr	r3, [r5, #4]
   12050:	str	r2, [r4, #16]
   12054:	str	r3, [r4, #8]
   12058:	ldr	r2, [sp, #20]
   1205c:	mov	r3, #0
   12060:	cmp	sl, r3
   12064:	str	r3, [r4, #12]
   12068:	str	r2, [r4, #20]
   1206c:	str	r3, [r4, #24]
   12070:	str	r3, [r4, #32]
   12074:	str	r3, [r4, #28]
   12078:	beq	12098 <putc_unlocked@plt+0xdd0>
   1207c:	ldr	r2, [sl, r3, lsl #4]
   12080:	cmp	r2, #0
   12084:	bne	12208 <putc_unlocked@plt+0xf40>
   12088:	ldr	r2, [r5, #12]
   1208c:	add	r3, r2, r3, lsl #2
   12090:	str	r2, [r4, #28]
   12094:	str	r3, [r5, #12]
   12098:	mov	r6, r4
   1209c:	add	r4, r4, #36	; 0x24
   120a0:	cmp	sl, #0
   120a4:	movne	r2, #0
   120a8:	bne	1222c <putc_unlocked@plt+0xf64>
   120ac:	mov	r0, r4
   120b0:	add	sp, sp, #36	; 0x24
   120b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   120b8:	tst	r2, #8
   120bc:	bne	120e4 <putc_unlocked@plt+0xe1c>
   120c0:	sub	r3, r8, #1
   120c4:	cmp	r3, #254	; 0xfe
   120c8:	bhi	120e4 <putc_unlocked@plt+0xe1c>
   120cc:	bl	1113c <__ctype_b_loc@plt>
   120d0:	lsl	r3, r8, #1
   120d4:	ldr	r2, [r0]
   120d8:	ldrh	r3, [r2, r3]
   120dc:	tst	r3, #16384	; 0x4000
   120e0:	bne	1223c <putc_unlocked@plt+0xf74>
   120e4:	ldr	r3, [r7, #-24]	; 0xffffffe8
   120e8:	cmp	r3, #0
   120ec:	beq	121a8 <putc_unlocked@plt+0xee0>
   120f0:	ldr	r2, [r5]
   120f4:	str	r2, [sp, #12]
   120f8:	ldr	r2, [r2, #8]
   120fc:	mov	r8, r2
   12100:	ldr	r0, [r8]
   12104:	cmp	r0, #0
   12108:	beq	12138 <putc_unlocked@plt+0xe70>
   1210c:	mov	r1, r3
   12110:	str	r2, [sp, #28]
   12114:	str	r3, [sp, #24]
   12118:	bl	10fec <strcmp@plt>
   1211c:	ldr	r3, [sp, #24]
   12120:	ldr	r2, [sp, #28]
   12124:	cmp	r0, #0
   12128:	bne	12200 <putc_unlocked@plt+0xf38>
   1212c:	sub	r8, r8, r2
   12130:	cmn	r8, #15
   12134:	bge	121a8 <putc_unlocked@plt+0xee0>
   12138:	ldr	r1, [r5, #8]
   1213c:	str	r3, [r1]
   12140:	ldr	r3, [r6, #8]
   12144:	cmp	r3, #0
   12148:	beq	12160 <putc_unlocked@plt+0xe98>
   1214c:	ldr	r3, [r6, #12]
   12150:	tst	r3, #1
   12154:	movne	r3, #2
   12158:	moveq	r3, #1
   1215c:	str	r3, [sp, #8]
   12160:	ldr	r2, [sp, #12]
   12164:	ldr	r3, [sp, #8]
   12168:	ldr	r0, [pc, #292]	; 12294 <putc_unlocked@plt+0xfcc>
   1216c:	ldr	r2, [r2, #48]	; 0x30
   12170:	stmib	r1, {r3, fp}
   12174:	sub	r2, r4, r2
   12178:	ldr	r3, [r7, #-20]	; 0xffffffec
   1217c:	asr	r2, r2, #2
   12180:	cmp	r3, #0
   12184:	mul	r2, r0, r2
   12188:	ldreq	r3, [r6, #4]
   1218c:	add	r2, r2, #1
   12190:	bic	r3, r3, #-16777216	; 0xff000000
   12194:	add	r3, r3, r2, lsl #24
   12198:	str	r3, [r1, #12]
   1219c:	add	r3, r1, #16
   121a0:	str	r3, [r5, #8]
   121a4:	str	fp, [r1, #16]
   121a8:	add	r7, r7, #24
   121ac:	ldr	r8, [r7, #-20]	; 0xffffffec
   121b0:	sub	r3, r7, #24
   121b4:	cmp	r8, #0
   121b8:	bne	121e0 <putc_unlocked@plt+0xf18>
   121bc:	ldr	r2, [r7, #-24]	; 0xffffffe8
   121c0:	cmp	r2, #0
   121c4:	bne	121e0 <putc_unlocked@plt+0xf18>
   121c8:	ldr	r2, [r7, #-8]
   121cc:	cmp	r2, #0
   121d0:	bne	121e0 <putc_unlocked@plt+0xf18>
   121d4:	ldr	r2, [r7, #-4]
   121d8:	cmp	r2, #0
   121dc:	beq	12040 <putc_unlocked@plt+0xd78>
   121e0:	ldr	r2, [r7, #-12]
   121e4:	tst	r2, #4
   121e8:	moveq	r6, r3
   121ec:	ldr	r3, [r6, #12]
   121f0:	ands	r3, r3, #8
   121f4:	str	r3, [sp, #8]
   121f8:	beq	120b8 <putc_unlocked@plt+0xdf0>
   121fc:	b	121a8 <putc_unlocked@plt+0xee0>
   12200:	add	r8, r8, #16
   12204:	b	12100 <putc_unlocked@plt+0xe38>
   12208:	add	r3, r3, #1
   1220c:	b	1207c <putc_unlocked@plt+0xdb4>
   12210:	mov	r3, r4
   12214:	str	r5, [sp]
   12218:	mov	r1, r6
   1221c:	add	r7, r2, #1
   12220:	bl	12000 <putc_unlocked@plt+0xd38>
   12224:	mov	r2, r7
   12228:	mov	r4, r0
   1222c:	ldr	r0, [sl, r2, lsl #4]
   12230:	cmp	r0, #0
   12234:	bne	12210 <putc_unlocked@plt+0xf48>
   12238:	b	120ac <putc_unlocked@plt+0xde4>
   1223c:	ldr	r3, [r5, #4]
   12240:	add	r2, r3, #1
   12244:	str	r2, [r5, #4]
   12248:	strb	r8, [r3]
   1224c:	ldr	r3, [r6, #8]
   12250:	cmp	r3, #0
   12254:	beq	12288 <putc_unlocked@plt+0xfc0>
   12258:	ldr	r3, [r5, #4]
   1225c:	add	r2, r3, #1
   12260:	str	r2, [r5, #4]
   12264:	mov	r2, #58	; 0x3a
   12268:	strb	r2, [r3]
   1226c:	ldr	r3, [r6, #12]
   12270:	tst	r3, #1
   12274:	ldrne	r3, [r5, #4]
   12278:	addne	r2, r3, #1
   1227c:	strne	r2, [r5, #4]
   12280:	movne	r2, #58	; 0x3a
   12284:	strbne	r2, [r3]
   12288:	ldr	r3, [r5, #4]
   1228c:	strb	fp, [r3]
   12290:	b	120e4 <putc_unlocked@plt+0xe1c>
   12294:	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^
   12298:	cmp	r0, #86	; 0x56
   1229c:	bne	12308 <putc_unlocked@plt+0x1040>
   122a0:	ldr	r3, [pc, #112]	; 12318 <putc_unlocked@plt+0x1050>
   122a4:	push	{r4, lr}
   122a8:	mov	r4, r2
   122ac:	ldr	r3, [r3]
   122b0:	cmp	r3, #0
   122b4:	beq	122d4 <putc_unlocked@plt+0x100c>
   122b8:	mov	r1, r2
   122bc:	ldr	r0, [r2, #48]	; 0x30
   122c0:	blx	r3
   122c4:	ldr	r0, [r4, #16]
   122c8:	ands	r0, r0, #32
   122cc:	bne	12310 <putc_unlocked@plt+0x1048>
   122d0:	bl	11148 <exit@plt>
   122d4:	ldr	r3, [pc, #64]	; 1231c <putc_unlocked@plt+0x1054>
   122d8:	ldr	r2, [r3]
   122dc:	cmp	r2, #0
   122e0:	beq	122f4 <putc_unlocked@plt+0x102c>
   122e4:	ldr	r1, [pc, #52]	; 12320 <putc_unlocked@plt+0x1058>
   122e8:	ldr	r0, [r4, #48]	; 0x30
   122ec:	bl	1116c <fprintf@plt>
   122f0:	b	122c4 <putc_unlocked@plt+0xffc>
   122f4:	ldr	r2, [pc, #40]	; 12324 <putc_unlocked@plt+0x105c>
   122f8:	ldr	r1, [pc, #40]	; 12328 <putc_unlocked@plt+0x1060>
   122fc:	mov	r0, r4
   12300:	bl	16028 <argp_error@@Base>
   12304:	b	122c4 <putc_unlocked@plt+0xffc>
   12308:	mov	r0, #7
   1230c:	bx	lr
   12310:	mov	r0, #0
   12314:	pop	{r4, pc}
   12318:	andeq	r9, r2, ip, lsl #5
   1231c:	andeq	r9, r2, r4, asr #5
   12320:	andeq	r7, r1, sl, lsr r8
   12324:	ldrdeq	r7, [r1], -r0
   12328:	andeq	r7, r1, r2, ror sp
   1232c:	cmn	r0, #3
   12330:	push	{r4, r5, r6, lr}
   12334:	mov	r4, r2
   12338:	beq	1237c <putc_unlocked@plt+0x10b4>
   1233c:	mov	r5, r1
   12340:	bgt	12354 <putc_unlocked@plt+0x108c>
   12344:	cmn	r0, #4
   12348:	beq	123b8 <putc_unlocked@plt+0x10f0>
   1234c:	mov	r0, #7
   12350:	pop	{r4, r5, r6, pc}
   12354:	cmn	r0, #2
   12358:	beq	12384 <putc_unlocked@plt+0x10bc>
   1235c:	cmp	r0, #63	; 0x3f
   12360:	ldreq	r2, [pc, #140]	; 123f4 <putc_unlocked@plt+0x112c>
   12364:	bne	1234c <putc_unlocked@plt+0x1084>
   12368:	ldr	r1, [r4, #48]	; 0x30
   1236c:	mov	r0, r4
   12370:	bl	15f88 <argp_state_help@@Base>
   12374:	mov	r0, #0
   12378:	pop	{r4, r5, r6, pc}
   1237c:	ldr	r2, [pc, #116]	; 123f8 <putc_unlocked@plt+0x1130>
   12380:	b	12368 <putc_unlocked@plt+0x10a0>
   12384:	ldr	r3, [pc, #112]	; 123fc <putc_unlocked@plt+0x1134>
   12388:	mov	r0, r1
   1238c:	str	r1, [r3]
   12390:	bl	12e18 <argp_parse@@Base+0xa0c>
   12394:	ldr	r3, [pc, #100]	; 12400 <putc_unlocked@plt+0x1138>
   12398:	str	r0, [r3]
   1239c:	ldr	r3, [r4, #16]
   123a0:	str	r0, [r4, #40]	; 0x28
   123a4:	and	r3, r3, #3
   123a8:	cmp	r3, #1
   123ac:	ldreq	r3, [r4, #8]
   123b0:	streq	r5, [r3]
   123b4:	b	12374 <putc_unlocked@plt+0x10ac>
   123b8:	cmp	r1, #0
   123bc:	ldr	r0, [pc, #64]	; 12404 <putc_unlocked@plt+0x113c>
   123c0:	movne	r0, r1
   123c4:	bl	1122c <atoi@plt>
   123c8:	ldr	r4, [pc, #56]	; 12408 <putc_unlocked@plt+0x1140>
   123cc:	mov	r5, #1
   123d0:	str	r0, [r4]
   123d4:	ldr	r3, [r4]
   123d8:	sub	r2, r3, #1
   123dc:	cmp	r3, #0
   123e0:	str	r2, [r4]
   123e4:	ble	12374 <putc_unlocked@plt+0x10ac>
   123e8:	mov	r0, r5
   123ec:	bl	11088 <sleep@plt>
   123f0:	b	123d4 <putc_unlocked@plt+0x110c>
   123f4:	andeq	r0, r0, sl, ror r2
   123f8:	andeq	r0, r0, r1, lsl #4
   123fc:	andeq	r9, r2, ip, ror #4
   12400:	andeq	r9, r2, r8, ror #4
   12404:	strdeq	r7, [r1], -r3
   12408:	andeq	r9, r2, r8, lsl #5

0001240c <argp_parse@@Base>:
   1240c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12410:	add	fp, sp, #32
   12414:	tst	r3, #1
   12418:	sub	sp, sp, #220	; 0xdc
   1241c:	mov	r4, r0
   12420:	mov	r8, r2
   12424:	str	r1, [fp, #-240]	; 0xffffff10
   12428:	mov	sl, r3
   1242c:	bne	12460 <argp_parse@@Base+0x54>
   12430:	ldr	r3, [pc, #2296]	; 12d30 <argp_parse@@Base+0x924>
   12434:	ldr	r5, [pc, #2296]	; 12d34 <argp_parse@@Base+0x928>
   12438:	ldr	r2, [r3]
   1243c:	cmp	r2, #0
   12440:	ldreq	r2, [r8]
   12444:	streq	r2, [r3]
   12448:	ldr	r3, [r5]
   1244c:	cmp	r3, #0
   12450:	bne	12460 <argp_parse@@Base+0x54>
   12454:	ldr	r0, [r8]
   12458:	bl	12e18 <argp_parse@@Base+0xa0c>
   1245c:	str	r0, [r5]
   12460:	ands	r7, sl, #16
   12464:	bne	124ec <argp_parse@@Base+0xe0>
   12468:	sub	sp, sp, #72	; 0x48
   1246c:	add	r5, sp, #8
   12470:	sub	sp, sp, #40	; 0x28
   12474:	add	r6, sp, #8
   12478:	mov	r2, #28
   1247c:	mov	r1, r7
   12480:	mov	r0, r6
   12484:	bl	111a8 <memset@plt>
   12488:	str	r5, [r6, #16]
   1248c:	mov	r0, r5
   12490:	mov	r2, #64	; 0x40
   12494:	mov	r1, r7
   12498:	bl	111a8 <memset@plt>
   1249c:	cmp	r4, #0
   124a0:	strne	r4, [r5]
   124a4:	ldr	r3, [pc, #2188]	; 12d38 <argp_parse@@Base+0x92c>
   124a8:	addne	r5, r5, #16
   124ac:	str	r3, [r5]
   124b0:	ldr	r3, [pc, #2180]	; 12d3c <argp_parse@@Base+0x930>
   124b4:	ldr	r3, [r3]
   124b8:	cmp	r3, #0
   124bc:	bne	124d4 <argp_parse@@Base+0xc8>
   124c0:	ldr	r3, [pc, #2168]	; 12d40 <argp_parse@@Base+0x934>
   124c4:	ldr	r3, [r3]
   124c8:	cmp	r3, #0
   124cc:	addeq	r3, r5, #16
   124d0:	beq	124e0 <argp_parse@@Base+0xd4>
   124d4:	ldr	r2, [pc, #2152]	; 12d44 <argp_parse@@Base+0x938>
   124d8:	add	r3, r5, #32
   124dc:	str	r2, [r5, #16]
   124e0:	mov	r4, r6
   124e4:	mov	r2, #0
   124e8:	str	r2, [r3]
   124ec:	mov	r2, #36	; 0x24
   124f0:	mov	r1, #0
   124f4:	sub	r0, fp, #196	; 0xc4
   124f8:	bl	111a8 <memset@plt>
   124fc:	ands	r3, sl, #4
   12500:	moveq	r3, #1
   12504:	movne	r3, #0
   12508:	str	r3, [fp, #-228]	; 0xffffff1c
   1250c:	mov	r3, #0
   12510:	cmp	r4, r3
   12514:	str	r3, [fp, #-224]	; 0xffffff20
   12518:	str	r3, [fp, #-220]	; 0xffffff24
   1251c:	str	r3, [fp, #-216]	; 0xffffff28
   12520:	beq	12530 <argp_parse@@Base+0x124>
   12524:	sub	r1, fp, #228	; 0xe4
   12528:	mov	r0, r4
   1252c:	bl	11f34 <putc_unlocked@plt+0xc6c>
   12530:	ldr	r9, [fp, #-220]	; 0xffffff24
   12534:	ldr	r5, [fp, #-216]	; 0xffffff28
   12538:	add	r3, r9, #1
   1253c:	mov	r9, #36	; 0x24
   12540:	ldr	r6, [fp, #-224]	; 0xffffff20
   12544:	mul	r9, r9, r3
   12548:	ldr	r0, [fp, #-228]	; 0xffffff1c
   1254c:	lsl	r5, r5, #2
   12550:	add	r6, r6, #1
   12554:	add	r3, r9, r5
   12558:	add	r6, r3, r6, lsl #4
   1255c:	add	r0, r0, #1
   12560:	add	r0, r0, r6
   12564:	str	r3, [fp, #-236]	; 0xffffff14
   12568:	bl	13428 <argp_parse@@Base+0x101c>
   1256c:	cmp	r0, #0
   12570:	mov	r7, r0
   12574:	str	r0, [fp, #-40]	; 0xffffffd8
   12578:	moveq	r4, #12
   1257c:	beq	126fc <argp_parse@@Base+0x2f0>
   12580:	add	r3, r0, r9
   12584:	str	r3, [fp, #-232]	; 0xffffff18
   12588:	str	r3, [fp, #-104]	; 0xffffff98
   1258c:	ldr	r3, [fp, #-236]	; 0xffffff14
   12590:	sub	lr, fp, #196	; 0xc4
   12594:	add	r3, r0, r3
   12598:	str	r3, [fp, #-236]	; 0xffffff14
   1259c:	str	r3, [fp, #-152]	; 0xffffff68
   125a0:	mov	r3, #1
   125a4:	add	r9, r0, r6
   125a8:	str	r0, [fp, #-112]	; 0xffffff90
   125ac:	str	r3, [fp, #-196]	; 0xffffff3c
   125b0:	str	r3, [fp, #-192]	; 0xffffff40
   125b4:	ldm	lr!, {r0, r1, r2, r3}
   125b8:	sub	ip, fp, #148	; 0x94
   125bc:	str	r9, [fp, #-156]	; 0xffffff64
   125c0:	stmia	ip!, {r0, r1, r2, r3}
   125c4:	ldm	lr!, {r0, r1, r2, r3}
   125c8:	stmia	ip!, {r0, r1, r2, r3}
   125cc:	mov	r2, r5
   125d0:	ldr	r3, [lr]
   125d4:	mov	r1, #0
   125d8:	ldr	r0, [fp, #-232]	; 0xffffff18
   125dc:	str	r3, [ip]
   125e0:	bl	111a8 <memset@plt>
   125e4:	ldr	r3, [fp, #-236]	; 0xffffff14
   125e8:	tst	sl, #8
   125ec:	str	r3, [fp, #-204]	; 0xffffff34
   125f0:	ldr	r3, [fp, #-232]	; 0xffffff18
   125f4:	str	r9, [fp, #-208]	; 0xffffff30
   125f8:	sub	r5, fp, #160	; 0xa0
   125fc:	addne	r9, r9, #1
   12600:	str	r3, [fp, #-200]	; 0xffffff38
   12604:	str	r5, [fp, #-212]	; 0xffffff2c
   12608:	strne	r9, [fp, #-208]	; 0xffffff30
   1260c:	movne	r3, #45	; 0x2d
   12610:	bne	1262c <argp_parse@@Base+0x220>
   12614:	ands	r3, sl, #4
   12618:	cmp	r3, #0
   1261c:	beq	12630 <argp_parse@@Base+0x224>
   12620:	mov	r3, #43	; 0x2b
   12624:	add	r9, r9, #1
   12628:	str	r9, [fp, #-208]	; 0xffffff30
   1262c:	strb	r3, [r7, r6]
   12630:	ldr	r3, [fp, #-208]	; 0xffffff30
   12634:	mov	r2, #0
   12638:	cmp	r4, r2
   1263c:	strb	r2, [r3]
   12640:	ldr	r3, [fp, #-204]	; 0xffffff34
   12644:	str	r2, [r3]
   12648:	ldreq	r3, [fp, #-112]	; 0xffffff90
   1264c:	str	r4, [fp, #-160]	; 0xffffff60
   12650:	streq	r3, [fp, #-108]	; 0xffffff94
   12654:	beq	12674 <argp_parse@@Base+0x268>
   12658:	sub	r3, fp, #212	; 0xd4
   1265c:	str	r3, [sp]
   12660:	mov	r1, r2
   12664:	ldr	r3, [fp, #-112]	; 0xffffff90
   12668:	mov	r0, r4
   1266c:	bl	12000 <putc_unlocked@plt+0xd38>
   12670:	str	r0, [fp, #-108]	; 0xffffff94
   12674:	mov	r2, #56	; 0x38
   12678:	mov	r1, #0
   1267c:	add	r0, r5, #64	; 0x40
   12680:	bl	111a8 <memset@plt>
   12684:	ldr	r3, [fp, #-160]	; 0xffffff60
   12688:	ldr	r6, [fp, #-112]	; 0xffffff90
   1268c:	str	r3, [fp, #-96]	; 0xffffffa0
   12690:	ldr	r3, [fp, #-240]	; 0xffffff10
   12694:	str	sl, [fp, #-80]	; 0xffffffb0
   12698:	str	r3, [fp, #-92]	; 0xffffffa4
   1269c:	ldr	r3, [pc, #1700]	; 12d48 <argp_parse@@Base+0x93c>
   126a0:	mov	r4, #0
   126a4:	ldr	sl, [pc, #1696]	; 12d4c <argp_parse@@Base+0x940>
   126a8:	ldr	r3, [r3]
   126ac:	add	r7, r5, #64	; 0x40
   126b0:	str	r3, [fp, #-52]	; 0xffffffcc
   126b4:	ldr	r3, [pc, #1684]	; 12d50 <argp_parse@@Base+0x944>
   126b8:	mov	r9, r4
   126bc:	str	r8, [fp, #-88]	; 0xffffffa8
   126c0:	ldr	r3, [r3]
   126c4:	str	r5, [fp, #-44]	; 0xffffffd4
   126c8:	str	r3, [fp, #-48]	; 0xffffffd0
   126cc:	mov	r3, #1
   126d0:	str	r3, [fp, #-100]	; 0xffffff9c
   126d4:	ldr	r3, [fp, #-108]	; 0xffffff94
   126d8:	cmp	r6, r3
   126dc:	ldrcc	r3, [fp, #8]
   126e0:	strcc	r3, [r6, #24]
   126e4:	ldr	r3, [fp, #-108]	; 0xffffff94
   126e8:	cmp	r6, r3
   126ec:	bcs	12770 <argp_parse@@Base+0x364>
   126f0:	cmp	r4, #7
   126f4:	cmpne	r4, #0
   126f8:	beq	12708 <argp_parse@@Base+0x2fc>
   126fc:	mov	r0, r4
   12700:	sub	sp, fp, #32
   12704:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12708:	ldr	r3, [r6, #16]
   1270c:	cmp	r3, #0
   12710:	ldrne	r3, [r3, #28]
   12714:	ldrne	r2, [r6, #20]
   12718:	ldrne	r3, [r3, r2, lsl #2]
   1271c:	strne	r3, [r6, #24]
   12720:	ldr	r3, [r6]
   12724:	cmp	r3, #0
   12728:	bne	12750 <argp_parse@@Base+0x344>
   1272c:	ldr	r3, [r6, #4]
   12730:	ldr	r3, [r3, #16]
   12734:	cmp	r3, #0
   12738:	beq	12750 <argp_parse@@Base+0x344>
   1273c:	ldr	r3, [r3]
   12740:	cmp	r3, #0
   12744:	ldrne	r3, [r6, #28]
   12748:	ldrne	r2, [r6, #24]
   1274c:	strne	r2, [r3]
   12750:	mov	r0, r6
   12754:	mov	r3, r9
   12758:	mov	r2, sl
   1275c:	mov	r1, r7
   12760:	bl	11ed4 <putc_unlocked@plt+0xc0c>
   12764:	add	r6, r6, #36	; 0x24
   12768:	mov	r4, r0
   1276c:	b	126e4 <argp_parse@@Base+0x2d8>
   12770:	cmp	r4, #7
   12774:	beq	12780 <argp_parse@@Base+0x374>
   12778:	cmp	r4, #0
   1277c:	bne	126fc <argp_parse@@Base+0x2f0>
   12780:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12784:	tst	r3, #2
   12788:	moveq	r3, #1
   1278c:	streq	r3, [fp, #-144]	; 0xffffff70
   12790:	beq	127b8 <argp_parse@@Base+0x3ac>
   12794:	tst	r3, #1
   12798:	mov	r2, #0
   1279c:	ldrne	r3, [fp, #-88]	; 0xffffffa8
   127a0:	str	r2, [fp, #-144]	; 0xffffff70
   127a4:	subne	r3, r3, #4
   127a8:	strne	r3, [fp, #-88]	; 0xffffffa8
   127ac:	ldrne	r3, [fp, #-92]	; 0xffffffa4
   127b0:	addne	r3, r3, #1
   127b4:	strne	r3, [fp, #-92]	; 0xffffffa4
   127b8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   127bc:	cmp	r8, r3
   127c0:	bne	127e4 <argp_parse@@Base+0x3d8>
   127c4:	ldr	r0, [r8]
   127c8:	cmp	r0, #0
   127cc:	beq	127e4 <argp_parse@@Base+0x3d8>
   127d0:	bl	12e18 <argp_parse@@Base+0xa0c>
   127d4:	str	r0, [fp, #-56]	; 0xffffffc8
   127d8:	add	r8, r5, #64	; 0x40
   127dc:	ldr	r9, [pc, #1392]	; 12d54 <argp_parse@@Base+0x948>
   127e0:	b	129a8 <argp_parse@@Base+0x59c>
   127e4:	ldr	r3, [pc, #1352]	; 12d34 <argp_parse@@Base+0x928>
   127e8:	ldr	r3, [r3]
   127ec:	str	r3, [fp, #-56]	; 0xffffffc8
   127f0:	b	127d8 <argp_parse@@Base+0x3cc>
   127f4:	bl	12f20 <argp_parse@@Base+0xb14>
   127f8:	b	12a14 <argp_parse@@Base+0x608>
   127fc:	cmp	r0, #63	; 0x3f
   12800:	bne	12cc4 <argp_parse@@Base+0x8b8>
   12804:	ldr	r3, [fp, #-140]	; 0xffffff74
   12808:	cmn	r3, #1
   1280c:	bne	12c68 <argp_parse@@Base+0x85c>
   12810:	asrs	r3, r6, #24
   12814:	bne	12ad0 <argp_parse@@Base+0x6c4>
   12818:	mov	r1, r6
   1281c:	ldr	r0, [fp, #-156]	; 0xffffff64
   12820:	bl	11160 <strchr@plt>
   12824:	subs	r2, r0, #0
   12828:	beq	12864 <argp_parse@@Base+0x458>
   1282c:	ldr	r0, [fp, #-112]	; 0xffffff90
   12830:	ldr	r3, [fp, #-108]	; 0xffffff94
   12834:	cmp	r0, r3
   12838:	bcs	12864 <argp_parse@@Base+0x458>
   1283c:	ldr	r1, [r0, #8]
   12840:	cmp	r2, r1
   12844:	bcs	12ac8 <argp_parse@@Base+0x6bc>
   12848:	ldr	r3, [fp, #-136]	; 0xffffff78
   1284c:	mov	r2, r6
   12850:	mov	r1, r8
   12854:	bl	11ed4 <putc_unlocked@plt+0xc0c>
   12858:	cmp	r0, #7
   1285c:	mov	r4, r0
   12860:	bne	12b5c <argp_parse@@Base+0x750>
   12864:	ldr	r3, [pc, #1260]	; 12d58 <argp_parse@@Base+0x94c>
   12868:	ldr	r1, [pc, #1260]	; 12d5c <argp_parse@@Base+0x950>
   1286c:	mov	r2, r6
   12870:	add	r0, r5, #64	; 0x40
   12874:	bl	16028 <argp_error@@Base>
   12878:	sub	r7, r6, #1
   1287c:	mov	r4, #7
   12880:	clz	r7, r7
   12884:	lsr	r7, r7, #5
   12888:	cmp	r4, #7
   1288c:	movne	r7, #0
   12890:	andeq	r7, r7, #1
   12894:	cmp	r7, #0
   12898:	beq	12bdc <argp_parse@@Base+0x7d0>
   1289c:	ldr	r3, [fp, #-84]	; 0xffffffac
   128a0:	ldr	r2, [fp, #-92]	; 0xffffffa4
   128a4:	cmp	r3, r2
   128a8:	bne	12c34 <argp_parse@@Base+0x828>
   128ac:	mov	r4, #0
   128b0:	ldr	r7, [fp, #-112]	; 0xffffff90
   128b4:	ldr	sl, [pc, #1188]	; 12d60 <argp_parse@@Base+0x954>
   128b8:	add	r8, r5, #64	; 0x40
   128bc:	mov	r9, r4
   128c0:	ldr	r6, [fp, #-108]	; 0xffffff94
   128c4:	cmp	r7, r6
   128c8:	bcc	12b68 <argp_parse@@Base+0x75c>
   128cc:	ldr	r9, [pc, #1168]	; 12d64 <argp_parse@@Base+0x958>
   128d0:	sub	r6, r6, #36	; 0x24
   128d4:	add	r7, r5, #64	; 0x40
   128d8:	mov	r8, #0
   128dc:	ldr	r3, [fp, #-112]	; 0xffffff90
   128e0:	cmp	r6, r3
   128e4:	bcc	12bc0 <argp_parse@@Base+0x7b4>
   128e8:	cmp	r4, #7
   128ec:	cmpne	r4, #0
   128f0:	beq	12ba0 <argp_parse@@Base+0x794>
   128f4:	ldr	r3, [fp, #4]
   128f8:	cmp	r3, #0
   128fc:	beq	12bdc <argp_parse@@Base+0x7d0>
   12900:	ldr	r2, [fp, #4]
   12904:	ldr	r3, [fp, #-84]	; 0xffffffac
   12908:	str	r3, [r2]
   1290c:	b	12bd4 <argp_parse@@Base+0x7c8>
   12910:	ldr	r2, [fp, #-80]	; 0xffffffb0
   12914:	tst	r2, #4
   12918:	bne	1289c <argp_parse@@Base+0x490>
   1291c:	add	r2, r3, #1
   12920:	str	r2, [fp, #-84]	; 0xffffffac
   12924:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12928:	ldr	r3, [r2, r3, lsl #2]
   1292c:	str	r3, [fp, #-136]	; 0xffffff78
   12930:	ldr	r3, [fp, #-136]	; 0xffffff78
   12934:	ldr	r7, [fp, #-84]	; 0xffffffac
   12938:	str	r3, [fp, #-232]	; 0xffffff18
   1293c:	ldr	r6, [fp, #-112]	; 0xffffff90
   12940:	mov	r3, #0
   12944:	mov	r4, #7
   12948:	mov	sl, r3
   1294c:	sub	r7, r7, #1
   12950:	str	r7, [fp, #-84]	; 0xffffffac
   12954:	ldr	r2, [fp, #-108]	; 0xffffff94
   12958:	cmp	r6, r2
   1295c:	movcs	r2, #0
   12960:	movcc	r2, #1
   12964:	cmp	r4, #7
   12968:	movne	r2, #0
   1296c:	cmp	r2, #0
   12970:	bne	12a68 <argp_parse@@Base+0x65c>
   12974:	cmp	r4, #0
   12978:	bne	12b4c <argp_parse@@Base+0x740>
   1297c:	cmp	r3, r9
   12980:	ldreq	r3, [fp, #-92]	; 0xffffffa4
   12984:	streq	r3, [fp, #-84]	; 0xffffffac
   12988:	ldr	r3, [fp, #-84]	; 0xffffffac
   1298c:	cmp	r7, r3
   12990:	sublt	r7, r3, r7
   12994:	ldrlt	r3, [r6, #-24]	; 0xffffffe8
   12998:	movge	r3, #1
   1299c:	addlt	r7, r3, r7
   129a0:	strlt	r7, [r6, #-24]	; 0xffffffe8
   129a4:	strge	r3, [fp, #-100]	; 0xffffff9c
   129a8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   129ac:	ldr	r3, [fp, #-84]	; 0xffffffac
   129b0:	cmp	r2, #0
   129b4:	beq	129c4 <argp_parse@@Base+0x5b8>
   129b8:	cmp	r2, r3
   129bc:	movgt	r2, #0
   129c0:	strgt	r2, [fp, #-72]	; 0xffffffb8
   129c4:	ldr	r2, [fp, #-100]	; 0xffffff9c
   129c8:	cmp	r2, #0
   129cc:	beq	12a54 <argp_parse@@Base+0x648>
   129d0:	ldr	r7, [fp, #-72]	; 0xffffffb8
   129d4:	cmp	r7, #0
   129d8:	bne	12a54 <argp_parse@@Base+0x648>
   129dc:	str	r3, [fp, #-148]	; 0xffffff6c
   129e0:	mvn	r3, #0
   129e4:	str	r3, [fp, #-140]	; 0xffffff74
   129e8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   129ec:	str	r7, [sp]
   129f0:	tst	r3, #64	; 0x40
   129f4:	add	r3, r5, #12
   129f8:	str	r3, [sp, #4]
   129fc:	ldr	r2, [fp, #-156]	; 0xffffff64
   12a00:	ldr	r3, [fp, #-152]	; 0xffffff68
   12a04:	ldr	r1, [fp, #-88]	; 0xffffffa8
   12a08:	ldr	r0, [fp, #-92]	; 0xffffffa4
   12a0c:	beq	127f4 <argp_parse@@Base+0x3e8>
   12a10:	bl	12f6c <argp_parse@@Base+0xb60>
   12a14:	ldr	r4, [fp, #-148]	; 0xffffff6c
   12a18:	cmn	r0, #1
   12a1c:	mov	r6, r0
   12a20:	str	r4, [fp, #-84]	; 0xffffffac
   12a24:	bne	127fc <argp_parse@@Base+0x3f0>
   12a28:	mov	r3, #0
   12a2c:	cmp	r4, #1
   12a30:	str	r3, [fp, #-100]	; 0xffffff9c
   12a34:	ble	12a54 <argp_parse@@Base+0x648>
   12a38:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12a3c:	sub	r3, r4, #-1073741823	; 0xc0000001
   12a40:	ldr	r1, [pc, #800]	; 12d68 <argp_parse@@Base+0x95c>
   12a44:	ldr	r0, [r2, r3, lsl #2]
   12a48:	bl	10fec <strcmp@plt>
   12a4c:	cmp	r0, #0
   12a50:	streq	r4, [fp, #-72]	; 0xffffffb8
   12a54:	ldr	r3, [fp, #-84]	; 0xffffffac
   12a58:	ldr	r2, [fp, #-92]	; 0xffffffa4
   12a5c:	cmp	r3, r2
   12a60:	bge	1289c <argp_parse@@Base+0x490>
   12a64:	b	12910 <argp_parse@@Base+0x504>
   12a68:	ldr	r3, [fp, #-84]	; 0xffffffac
   12a6c:	mov	r2, sl
   12a70:	add	r3, r3, #1
   12a74:	str	r3, [fp, #-84]	; 0xffffffac
   12a78:	mov	r1, r8
   12a7c:	ldr	r3, [fp, #-232]	; 0xffffff18
   12a80:	mov	r0, r6
   12a84:	bl	11ed4 <putc_unlocked@plt+0xc0c>
   12a88:	cmp	r0, #7
   12a8c:	mov	r4, r0
   12a90:	movne	r3, sl
   12a94:	bne	12ac0 <argp_parse@@Base+0x6b4>
   12a98:	ldr	r3, [fp, #-84]	; 0xffffffac
   12a9c:	mov	r2, r9
   12aa0:	sub	r3, r3, #1
   12aa4:	str	r3, [fp, #-84]	; 0xffffffac
   12aa8:	mov	r1, r8
   12aac:	mov	r3, sl
   12ab0:	mov	r0, r6
   12ab4:	bl	11ed4 <putc_unlocked@plt+0xc0c>
   12ab8:	mov	r3, r9
   12abc:	mov	r4, r0
   12ac0:	add	r6, r6, #36	; 0x24
   12ac4:	b	12954 <argp_parse@@Base+0x548>
   12ac8:	add	r0, r0, #36	; 0x24
   12acc:	b	12834 <argp_parse@@Base+0x428>
   12ad0:	mov	r0, #36	; 0x24
   12ad4:	ands	r1, r6, #8388608	; 0x800000
   12ad8:	mul	r0, r0, r3
   12adc:	ldr	ip, [fp, #-112]	; 0xffffff90
   12ae0:	movne	r1, #-16777216	; 0xff000000
   12ae4:	bic	r2, r6, #-16777216	; 0xff000000
   12ae8:	sub	r0, r0, #36	; 0x24
   12aec:	orr	r2, r2, r1
   12af0:	ldr	r3, [fp, #-136]	; 0xffffff78
   12af4:	mov	r1, r8
   12af8:	add	r0, ip, r0
   12afc:	bl	11ed4 <putc_unlocked@plt+0xc0c>
   12b00:	cmp	r0, #7
   12b04:	mov	r4, r0
   12b08:	bne	12b5c <argp_parse@@Base+0x750>
   12b0c:	ldr	r3, [fp, #-152]	; 0xffffff68
   12b10:	b	12b24 <argp_parse@@Base+0x718>
   12b14:	ldr	r2, [r3]
   12b18:	cmp	r2, #0
   12b1c:	beq	12b30 <argp_parse@@Base+0x724>
   12b20:	add	r3, r3, #16
   12b24:	ldr	r2, [r3, #12]
   12b28:	cmp	r2, r6
   12b2c:	bne	12b14 <argp_parse@@Base+0x708>
   12b30:	ldr	r2, [r3]
   12b34:	ldr	r1, [pc, #560]	; 12d6c <argp_parse@@Base+0x960>
   12b38:	cmp	r2, #0
   12b3c:	moveq	r2, r1
   12b40:	ldr	r3, [pc, #528]	; 12d58 <argp_parse@@Base+0x94c>
   12b44:	ldr	r1, [pc, #548]	; 12d70 <argp_parse@@Base+0x964>
   12b48:	b	12870 <argp_parse@@Base+0x464>
   12b4c:	cmp	r4, #7
   12b50:	bne	12be4 <argp_parse@@Base+0x7d8>
   12b54:	mov	r6, #1
   12b58:	b	12878 <argp_parse@@Base+0x46c>
   12b5c:	cmp	r4, #0
   12b60:	beq	129a8 <argp_parse@@Base+0x59c>
   12b64:	b	12888 <argp_parse@@Base+0x47c>
   12b68:	cmp	r4, #7
   12b6c:	cmpne	r4, #0
   12b70:	bne	128cc <argp_parse@@Base+0x4c0>
   12b74:	ldr	r3, [r7, #12]
   12b78:	cmp	r3, #0
   12b7c:	bne	12b98 <argp_parse@@Base+0x78c>
   12b80:	mov	r3, r9
   12b84:	mov	r2, sl
   12b88:	mov	r1, r8
   12b8c:	mov	r0, r7
   12b90:	bl	11ed4 <putc_unlocked@plt+0xc0c>
   12b94:	mov	r4, r0
   12b98:	add	r7, r7, #36	; 0x24
   12b9c:	b	128c0 <argp_parse@@Base+0x4b4>
   12ba0:	mov	r0, r6
   12ba4:	mov	r3, r8
   12ba8:	mov	r2, r9
   12bac:	mov	r1, r7
   12bb0:	bl	11ed4 <putc_unlocked@plt+0xc0c>
   12bb4:	sub	r6, r6, #36	; 0x24
   12bb8:	mov	r4, r0
   12bbc:	b	128dc <argp_parse@@Base+0x4d0>
   12bc0:	cmp	r4, #7
   12bc4:	beq	12cd0 <argp_parse@@Base+0x8c4>
   12bc8:	ldr	r3, [fp, #4]
   12bcc:	cmp	r3, #0
   12bd0:	bne	12900 <argp_parse@@Base+0x4f4>
   12bd4:	cmp	r4, #0
   12bd8:	beq	12ce0 <argp_parse@@Base+0x8d4>
   12bdc:	cmp	r4, #7
   12be0:	beq	12c68 <argp_parse@@Base+0x85c>
   12be4:	ldr	r6, [fp, #-112]	; 0xffffff90
   12be8:	ldr	r9, [pc, #388]	; 12d74 <argp_parse@@Base+0x968>
   12bec:	add	r7, r5, #64	; 0x40
   12bf0:	mov	r8, #0
   12bf4:	ldr	r3, [fp, #-108]	; 0xffffff94
   12bf8:	cmp	r6, r3
   12bfc:	bcc	12c80 <argp_parse@@Base+0x874>
   12c00:	ldr	r6, [fp, #-108]	; 0xffffff94
   12c04:	ldr	r8, [pc, #364]	; 12d78 <argp_parse@@Base+0x96c>
   12c08:	sub	r6, r6, #36	; 0x24
   12c0c:	add	r5, r5, #64	; 0x40
   12c10:	mov	r7, #0
   12c14:	ldr	r3, [fp, #-112]	; 0xffffff90
   12c18:	cmp	r6, r3
   12c1c:	bcs	12ca8 <argp_parse@@Base+0x89c>
   12c20:	cmp	r4, #7
   12c24:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12c28:	moveq	r4, #22
   12c2c:	bl	12ea8 <argp_parse@@Base+0xa9c>
   12c30:	b	126fc <argp_parse@@Base+0x2f0>
   12c34:	ldr	r2, [fp, #4]
   12c38:	cmp	r2, #0
   12c3c:	strne	r3, [r2]
   12c40:	bne	12ce0 <argp_parse@@Base+0x8d4>
   12c44:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12c48:	tst	r3, #2
   12c4c:	bne	12c68 <argp_parse@@Base+0x85c>
   12c50:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12c54:	cmp	r0, #0
   12c58:	beq	12c68 <argp_parse@@Base+0x85c>
   12c5c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12c60:	ldr	r1, [pc, #276]	; 12d7c <argp_parse@@Base+0x970>
   12c64:	bl	1116c <fprintf@plt>
   12c68:	mov	r2, #260	; 0x104
   12c6c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12c70:	add	r0, r5, #64	; 0x40
   12c74:	bl	15f88 <argp_state_help@@Base>
   12c78:	mov	r4, #7
   12c7c:	b	12be4 <argp_parse@@Base+0x7d8>
   12c80:	mov	r0, r6
   12c84:	mov	r3, r8
   12c88:	mov	r2, r9
   12c8c:	mov	r1, r7
   12c90:	bl	11ed4 <putc_unlocked@plt+0xc0c>
   12c94:	add	r6, r6, #36	; 0x24
   12c98:	b	12bf4 <argp_parse@@Base+0x7e8>
   12c9c:	cmp	r4, #7
   12ca0:	moveq	r4, #0
   12ca4:	b	12c00 <argp_parse@@Base+0x7f4>
   12ca8:	mov	r0, r6
   12cac:	mov	r3, r7
   12cb0:	mov	r2, r8
   12cb4:	mov	r1, r5
   12cb8:	bl	11ed4 <putc_unlocked@plt+0xc0c>
   12cbc:	sub	r6, r6, #36	; 0x24
   12cc0:	b	12c14 <argp_parse@@Base+0x808>
   12cc4:	cmp	r0, #1
   12cc8:	bne	12810 <argp_parse@@Base+0x404>
   12ccc:	b	12930 <argp_parse@@Base+0x524>
   12cd0:	ldr	r3, [fp, #4]
   12cd4:	cmp	r3, #0
   12cd8:	movne	r4, #0
   12cdc:	bne	12900 <argp_parse@@Base+0x4f4>
   12ce0:	ldr	r6, [fp, #-108]	; 0xffffff94
   12ce4:	mov	r4, #0
   12ce8:	ldr	r9, [pc, #144]	; 12d80 <argp_parse@@Base+0x974>
   12cec:	sub	r6, r6, #36	; 0x24
   12cf0:	add	r7, r5, #64	; 0x40
   12cf4:	mov	r8, r4
   12cf8:	ldr	r3, [fp, #-112]	; 0xffffff90
   12cfc:	cmp	r6, r3
   12d00:	bcc	12c9c <argp_parse@@Base+0x890>
   12d04:	cmp	r4, #7
   12d08:	cmpne	r4, #0
   12d0c:	bne	12c00 <argp_parse@@Base+0x7f4>
   12d10:	mov	r0, r6
   12d14:	mov	r3, r8
   12d18:	mov	r2, r9
   12d1c:	mov	r1, r7
   12d20:	bl	11ed4 <putc_unlocked@plt+0xc0c>
   12d24:	sub	r6, r6, #36	; 0x24
   12d28:	mov	r4, r0
   12d2c:	b	12cf8 <argp_parse@@Base+0x8ec>
   12d30:	andeq	r9, r2, ip, ror #4
   12d34:	andeq	r9, r2, r8, ror #4
   12d38:			; <UNDEFINED> instruction: 0x000175b8
   12d3c:	andeq	r9, r2, r4, asr #5
   12d40:	andeq	r9, r2, ip, lsl #5
   12d44:	ldrdeq	r7, [r1], -r4
   12d48:	andeq	r9, r2, r0, ror r2
   12d4c:	tsteq	r0, r3
   12d50:	andeq	r9, r2, ip, ror r2
   12d54:	tsteq	r0, r6
   12d58:	strdeq	r7, [r1], -r0
   12d5c:	strdeq	r7, [r1], -pc	; <UNPREDICTABLE>
   12d60:	tsteq	r0, r2
   12d64:	tsteq	r0, r1
   12d68:	strdeq	r7, [r1], -ip
   12d6c:	strdeq	r7, [r1], -r8
   12d70:	andeq	r7, r1, r7, lsl #14
   12d74:	tsteq	r0, r5
   12d78:	tsteq	r0, r7
   12d7c:	andeq	r7, r1, r0, lsl r7
   12d80:	tsteq	r0, r4
   12d84:	cmp	r1, #0
   12d88:	ldrne	r2, [r1, #52]	; 0x34
   12d8c:	ldrne	r3, [r2, #48]	; 0x30
   12d90:	ldrne	r2, [r2, #52]	; 0x34
   12d94:	bne	12da4 <argp_parse@@Base+0x998>
   12d98:	mov	r0, #0
   12d9c:	bx	lr
   12da0:	add	r3, r3, #36	; 0x24
   12da4:	cmp	r3, r2
   12da8:	bcs	12d98 <argp_parse@@Base+0x98c>
   12dac:	ldr	r1, [r3, #4]
   12db0:	cmp	r1, r0
   12db4:	bne	12da0 <argp_parse@@Base+0x994>
   12db8:	ldr	r0, [r3, #24]
   12dbc:	bx	lr
   12dc0:	push	{r0, r1, r2, lr}
   12dc4:	ldr	r1, [pc, #28]	; 12de8 <argp_parse@@Base+0x9dc>
   12dc8:	ldr	r2, [pc, #28]	; 12dec <argp_parse@@Base+0x9e0>
   12dcc:	ldr	r3, [r1, #4]
   12dd0:	str	r3, [sp]
   12dd4:	ldr	r3, [pc, #20]	; 12df0 <argp_parse@@Base+0x9e4>
   12dd8:	ldr	r1, [r1]
   12ddc:	bl	13324 <argp_parse@@Base+0xf18>
   12de0:	add	sp, sp, #12
   12de4:	pop	{pc}		; (ldr pc, [sp], #4)
   12de8:	muleq	r2, r0, r2
   12dec:	andeq	r7, r1, r0, ror #15
   12df0:	ldrdeq	r7, [r1], -r3
   12df4:	ldr	r3, [pc, #16]	; 12e0c <argp_parse@@Base+0xa00>
   12df8:	ldr	r2, [pc, #16]	; 12e10 <argp_parse@@Base+0xa04>
   12dfc:	str	r2, [r3]
   12e00:	ldr	r3, [pc, #12]	; 12e14 <argp_parse@@Base+0xa08>
   12e04:	stm	r3, {r0, r1}
   12e08:	bx	lr
   12e0c:	andeq	r9, r2, ip, lsl #5
   12e10:	andeq	r2, r1, r0, asr #27
   12e14:	muleq	r2, r0, r2
   12e18:	mov	r2, r0
   12e1c:	push	{r4, lr}
   12e20:	mov	r0, r2
   12e24:	ldrb	r3, [r2]
   12e28:	add	r1, r2, #1
   12e2c:	cmp	r3, #47	; 0x2f
   12e30:	beq	12e54 <argp_parse@@Base+0xa48>
   12e34:	mov	r3, #0
   12e38:	mov	lr, #1
   12e3c:	mov	r4, r3
   12e40:	mov	ip, r2
   12e44:	ldrb	r1, [r2], #1
   12e48:	cmp	r1, #0
   12e4c:	bne	12e5c <argp_parse@@Base+0xa50>
   12e50:	pop	{r4, pc}
   12e54:	mov	r2, r1
   12e58:	b	12e20 <argp_parse@@Base+0xa14>
   12e5c:	cmp	r1, #47	; 0x2f
   12e60:	moveq	r3, lr
   12e64:	beq	12e40 <argp_parse@@Base+0xa34>
   12e68:	cmp	r3, #0
   12e6c:	movne	r0, ip
   12e70:	movne	r3, r4
   12e74:	b	12e40 <argp_parse@@Base+0xa34>
   12e78:	push	{r4, lr}
   12e7c:	mov	r4, r0
   12e80:	bl	11154 <strlen@plt>
   12e84:	cmp	r0, #1
   12e88:	popls	{r4, pc}
   12e8c:	sub	r3, r0, #1
   12e90:	ldrb	r2, [r4, r3]
   12e94:	cmp	r2, #47	; 0x2f
   12e98:	beq	12ea0 <argp_parse@@Base+0xa94>
   12e9c:	pop	{r4, pc}
   12ea0:	mov	r0, r3
   12ea4:	b	12e84 <argp_parse@@Base+0xa78>
   12ea8:	push	{r0, r1, r2, r4, r5, lr}
   12eac:	mov	r5, r0
   12eb0:	bl	11178 <__errno_location@plt>
   12eb4:	ldr	r3, [r0]
   12eb8:	mov	r4, r0
   12ebc:	str	r3, [sp]
   12ec0:	str	r3, [sp, #4]
   12ec4:	mov	r3, #0
   12ec8:	str	r3, [r0]
   12ecc:	mov	r0, r5
   12ed0:	bl	11034 <free@plt>
   12ed4:	ldr	r3, [r4]
   12ed8:	add	r2, sp, #8
   12edc:	cmp	r3, #0
   12ee0:	moveq	r3, #4
   12ee4:	movne	r3, #0
   12ee8:	add	r3, r2, r3
   12eec:	ldr	r3, [r3, #-8]
   12ef0:	str	r3, [r4]
   12ef4:	add	sp, sp, #12
   12ef8:	pop	{r4, r5, pc}
   12efc:	push	{r0, r1, r2, r3, r4, lr}
   12f00:	mov	ip, #0
   12f04:	str	ip, [sp, #8]
   12f08:	str	ip, [sp, #4]
   12f0c:	ldr	ip, [sp, #24]
   12f10:	str	ip, [sp]
   12f14:	bl	16b0c <argp_error@@Base+0xae4>
   12f18:	add	sp, sp, #20
   12f1c:	pop	{pc}		; (ldr pc, [sp], #4)
   12f20:	push	{r0, r1, r2, r3, r4, lr}
   12f24:	mov	ip, #0
   12f28:	ldr	lr, [sp, #28]
   12f2c:	str	ip, [sp, #12]
   12f30:	stmib	sp, {ip, lr}
   12f34:	ldr	ip, [sp, #24]
   12f38:	str	ip, [sp]
   12f3c:	bl	16614 <argp_error@@Base+0x5ec>
   12f40:	add	sp, sp, #20
   12f44:	pop	{pc}		; (ldr pc, [sp], #4)
   12f48:	push	{r0, r1, r2, r3, r4, lr}
   12f4c:	mov	ip, #1
   12f50:	mov	lr, #0
   12f54:	stmib	sp, {ip, lr}
   12f58:	ldr	ip, [sp, #24]
   12f5c:	str	ip, [sp]
   12f60:	bl	16b0c <argp_error@@Base+0xae4>
   12f64:	add	sp, sp, #20
   12f68:	pop	{pc}		; (ldr pc, [sp], #4)
   12f6c:	push	{r0, r1, r2, r3, r4, lr}
   12f70:	mov	ip, #0
   12f74:	str	ip, [sp, #12]
   12f78:	ldr	ip, [sp, #28]
   12f7c:	str	ip, [sp, #8]
   12f80:	mov	ip, #1
   12f84:	str	ip, [sp, #4]
   12f88:	ldr	ip, [sp, #24]
   12f8c:	str	ip, [sp]
   12f90:	bl	16614 <argp_error@@Base+0x5ec>
   12f94:	add	sp, sp, #20
   12f98:	pop	{pc}		; (ldr pc, [sp], #4)
   12f9c:	push	{r4, r5, r6, lr}
   12fa0:	subs	r5, r0, #0
   12fa4:	bne	12fbc <argp_parse@@Base+0xbb0>
   12fa8:	ldr	r3, [pc, #124]	; 1302c <argp_parse@@Base+0xc20>
   12fac:	ldr	r0, [pc, #124]	; 13030 <argp_parse@@Base+0xc24>
   12fb0:	ldr	r1, [r3]
   12fb4:	bl	11274 <fputs@plt>
   12fb8:	bl	1128c <abort@plt>
   12fbc:	mov	r1, #47	; 0x2f
   12fc0:	bl	111d8 <strrchr@plt>
   12fc4:	cmp	r0, #0
   12fc8:	addne	r4, r0, #1
   12fcc:	moveq	r4, r5
   12fd0:	sub	r3, r4, r5
   12fd4:	cmp	r3, #6
   12fd8:	ble	13018 <argp_parse@@Base+0xc0c>
   12fdc:	mov	r2, #7
   12fe0:	ldr	r1, [pc, #76]	; 13034 <argp_parse@@Base+0xc28>
   12fe4:	sub	r0, r4, #7
   12fe8:	bl	11280 <strncmp@plt>
   12fec:	cmp	r0, #0
   12ff0:	bne	13018 <argp_parse@@Base+0xc0c>
   12ff4:	mov	r2, #3
   12ff8:	ldr	r1, [pc, #56]	; 13038 <argp_parse@@Base+0xc2c>
   12ffc:	mov	r0, r4
   13000:	bl	11280 <strncmp@plt>
   13004:	cmp	r0, #0
   13008:	movne	r5, r4
   1300c:	ldreq	r3, [pc, #40]	; 1303c <argp_parse@@Base+0xc30>
   13010:	addeq	r5, r4, #3
   13014:	streq	r5, [r3]
   13018:	ldr	r3, [pc, #32]	; 13040 <argp_parse@@Base+0xc34>
   1301c:	str	r5, [r3]
   13020:	ldr	r3, [pc, #28]	; 13044 <argp_parse@@Base+0xc38>
   13024:	str	r5, [r3]
   13028:	pop	{r4, r5, r6, pc}
   1302c:	andeq	r9, r2, r0, ror r2
   13030:	andeq	r7, r1, lr, ror #15
   13034:	andeq	r7, r1, r6, lsr #16
   13038:	andeq	r7, r1, lr, lsr #16
   1303c:	andeq	r9, r2, r8, ror #4
   13040:	muleq	r2, r8, r2
   13044:	andeq	r9, r2, ip, ror #4
   13048:	push	{r4, r5, r6, lr}
   1304c:	sub	sp, sp, #32
   13050:	cmp	r1, #0
   13054:	mov	r5, r0
   13058:	ldr	r4, [sp, #48]	; 0x30
   1305c:	ldr	r6, [sp, #52]	; 0x34
   13060:	beq	130e8 <argp_parse@@Base+0xcdc>
   13064:	str	r3, [sp]
   13068:	mov	r3, r2
   1306c:	mov	r2, r1
   13070:	ldr	r1, [pc, #616]	; 132e0 <argp_parse@@Base+0xed4>
   13074:	bl	1116c <fprintf@plt>
   13078:	ldr	r3, [pc, #612]	; 132e4 <argp_parse@@Base+0xed8>
   1307c:	ldr	r2, [pc, #612]	; 132e8 <argp_parse@@Base+0xedc>
   13080:	ldr	r1, [pc, #612]	; 132ec <argp_parse@@Base+0xee0>
   13084:	mov	r0, r5
   13088:	bl	1116c <fprintf@plt>
   1308c:	mov	r1, r5
   13090:	mov	r0, #10
   13094:	bl	111fc <fputc@plt>
   13098:	ldr	r1, [pc, #592]	; 132f0 <argp_parse@@Base+0xee4>
   1309c:	ldr	r2, [pc, #592]	; 132f4 <argp_parse@@Base+0xee8>
   130a0:	mov	r0, r5
   130a4:	bl	1116c <fprintf@plt>
   130a8:	mov	r1, r5
   130ac:	mov	r0, #10
   130b0:	bl	111fc <fputc@plt>
   130b4:	cmp	r6, #9
   130b8:	ldrls	pc, [pc, r6, lsl #2]
   130bc:	b	1329c <argp_parse@@Base+0xe90>
   130c0:	muleq	r1, r4, r1
   130c4:	strdeq	r3, [r1], -r4
   130c8:	andeq	r3, r1, ip, lsl #2
   130cc:	andeq	r3, r1, r4, lsr #2
   130d0:	andeq	r3, r1, r4, asr #2
   130d4:	andeq	r3, r1, ip, ror #2
   130d8:	muleq	r1, ip, r1
   130dc:	ldrdeq	r3, [r1], -r0
   130e0:	andeq	r3, r1, ip, lsl #4
   130e4:	andeq	r3, r1, r0, asr r2
   130e8:	ldr	r1, [pc, #520]	; 132f8 <argp_parse@@Base+0xeec>
   130ec:	bl	1116c <fprintf@plt>
   130f0:	b	13078 <argp_parse@@Base+0xc6c>
   130f4:	ldr	r2, [r4]
   130f8:	ldr	r1, [pc, #508]	; 132fc <argp_parse@@Base+0xef0>
   130fc:	mov	r0, r5
   13100:	add	sp, sp, #32
   13104:	pop	{r4, r5, r6, lr}
   13108:	b	1116c <fprintf@plt>
   1310c:	ldm	r4, {r2, r3}
   13110:	ldr	r1, [pc, #488]	; 13300 <argp_parse@@Base+0xef4>
   13114:	mov	r0, r5
   13118:	add	sp, sp, #32
   1311c:	pop	{r4, r5, r6, lr}
   13120:	b	1116c <fprintf@plt>
   13124:	ldr	r3, [r4, #8]
   13128:	ldr	r1, [pc, #468]	; 13304 <argp_parse@@Base+0xef8>
   1312c:	str	r3, [sp, #48]	; 0x30
   13130:	mov	r0, r5
   13134:	ldm	r4, {r2, r3}
   13138:	add	sp, sp, #32
   1313c:	pop	{r4, r5, r6, lr}
   13140:	b	1116c <fprintf@plt>
   13144:	ldr	r3, [r4, #12]
   13148:	ldr	r1, [pc, #440]	; 13308 <argp_parse@@Base+0xefc>
   1314c:	str	r3, [sp, #52]	; 0x34
   13150:	ldr	r3, [r4, #8]
   13154:	mov	r0, r5
   13158:	str	r3, [sp, #48]	; 0x30
   1315c:	ldm	r4, {r2, r3}
   13160:	add	sp, sp, #32
   13164:	pop	{r4, r5, r6, lr}
   13168:	b	1116c <fprintf@plt>
   1316c:	ldr	r3, [r4, #16]
   13170:	ldr	r1, [pc, #404]	; 1330c <argp_parse@@Base+0xf00>
   13174:	str	r3, [sp, #8]
   13178:	ldr	r3, [r4, #12]
   1317c:	mov	r0, r5
   13180:	str	r3, [sp, #4]
   13184:	ldr	r3, [r4, #8]
   13188:	str	r3, [sp]
   1318c:	ldm	r4, {r2, r3}
   13190:	bl	1116c <fprintf@plt>
   13194:	add	sp, sp, #32
   13198:	pop	{r4, r5, r6, pc}
   1319c:	ldr	r3, [r4, #20]
   131a0:	ldr	r1, [pc, #360]	; 13310 <argp_parse@@Base+0xf04>
   131a4:	str	r3, [sp, #12]
   131a8:	ldr	r3, [r4, #16]
   131ac:	mov	r0, r5
   131b0:	str	r3, [sp, #8]
   131b4:	ldr	r3, [r4, #12]
   131b8:	str	r3, [sp, #4]
   131bc:	ldr	r3, [r4, #8]
   131c0:	str	r3, [sp]
   131c4:	ldm	r4, {r2, r3}
   131c8:	bl	1116c <fprintf@plt>
   131cc:	b	13194 <argp_parse@@Base+0xd88>
   131d0:	ldr	r3, [r4, #24]
   131d4:	ldr	r1, [pc, #312]	; 13314 <argp_parse@@Base+0xf08>
   131d8:	str	r3, [sp, #16]
   131dc:	ldr	r3, [r4, #20]
   131e0:	mov	r0, r5
   131e4:	str	r3, [sp, #12]
   131e8:	ldr	r3, [r4, #16]
   131ec:	str	r3, [sp, #8]
   131f0:	ldr	r3, [r4, #12]
   131f4:	str	r3, [sp, #4]
   131f8:	ldr	r3, [r4, #8]
   131fc:	str	r3, [sp]
   13200:	ldm	r4, {r2, r3}
   13204:	bl	1116c <fprintf@plt>
   13208:	b	13194 <argp_parse@@Base+0xd88>
   1320c:	ldr	r3, [r4, #28]
   13210:	ldr	r1, [pc, #256]	; 13318 <argp_parse@@Base+0xf0c>
   13214:	str	r3, [sp, #20]
   13218:	ldr	r3, [r4, #24]
   1321c:	mov	r0, r5
   13220:	str	r3, [sp, #16]
   13224:	ldr	r3, [r4, #20]
   13228:	str	r3, [sp, #12]
   1322c:	ldr	r3, [r4, #16]
   13230:	str	r3, [sp, #8]
   13234:	ldr	r3, [r4, #12]
   13238:	str	r3, [sp, #4]
   1323c:	ldr	r3, [r4, #8]
   13240:	str	r3, [sp]
   13244:	ldm	r4, {r2, r3}
   13248:	bl	1116c <fprintf@plt>
   1324c:	b	13194 <argp_parse@@Base+0xd88>
   13250:	ldr	r3, [r4, #32]
   13254:	ldr	r1, [pc, #192]	; 1331c <argp_parse@@Base+0xf10>
   13258:	str	r3, [sp, #24]
   1325c:	ldr	r3, [r4, #28]
   13260:	str	r3, [sp, #20]
   13264:	ldr	r3, [r4, #24]
   13268:	str	r3, [sp, #16]
   1326c:	ldr	r3, [r4, #20]
   13270:	str	r3, [sp, #12]
   13274:	ldr	r3, [r4, #16]
   13278:	str	r3, [sp, #8]
   1327c:	ldr	r3, [r4, #12]
   13280:	str	r3, [sp, #4]
   13284:	ldr	r3, [r4, #8]
   13288:	str	r3, [sp]
   1328c:	ldm	r4, {r2, r3}
   13290:	mov	r0, r5
   13294:	bl	1116c <fprintf@plt>
   13298:	b	13194 <argp_parse@@Base+0xd88>
   1329c:	ldr	r3, [r4, #32]
   132a0:	ldr	r1, [pc, #120]	; 13320 <argp_parse@@Base+0xf14>
   132a4:	str	r3, [sp, #24]
   132a8:	ldr	r3, [r4, #28]
   132ac:	str	r3, [sp, #20]
   132b0:	ldr	r3, [r4, #24]
   132b4:	str	r3, [sp, #16]
   132b8:	ldr	r3, [r4, #20]
   132bc:	str	r3, [sp, #12]
   132c0:	ldr	r3, [r4, #16]
   132c4:	str	r3, [sp, #8]
   132c8:	ldr	r3, [r4, #12]
   132cc:	str	r3, [sp, #4]
   132d0:	ldr	r3, [r4, #8]
   132d4:	str	r3, [sp]
   132d8:	ldm	r4, {r2, r3}
   132dc:	b	13290 <argp_parse@@Base+0xe84>
   132e0:	andeq	r7, r1, r2, lsr r8
   132e4:	andeq	r0, r0, r6, ror #15
   132e8:	andeq	r7, r1, r5, asr #16
   132ec:	andeq	r7, r1, sl, lsr fp
   132f0:	andeq	r7, r1, fp, ror #16
   132f4:	andeq	r7, r1, r9, asr #16
   132f8:	andeq	r7, r1, lr, lsr r8
   132fc:	andeq	r7, r1, r6, lsl r9
   13300:	andeq	r7, r1, r6, lsr #18
   13304:	andeq	r7, r1, sp, lsr r9
   13308:	andeq	r7, r1, r9, asr r9
   1330c:	andeq	r7, r1, r9, ror r9
   13310:	muleq	r1, sp, r9
   13314:	andeq	r7, r1, r5, asr #19
   13318:	strdeq	r7, [r1], -r1
   1331c:	andeq	r7, r1, r1, lsr #20
   13320:	andeq	r7, r1, r5, asr sl
   13324:	push	{r0, r1, r4, lr}
   13328:	mov	ip, #0
   1332c:	ldr	lr, [sp, #16]
   13330:	ldr	r4, [lr, ip, lsl #2]
   13334:	cmp	r4, #0
   13338:	bne	13350 <argp_parse@@Base+0xf44>
   1333c:	str	ip, [sp, #4]
   13340:	str	lr, [sp]
   13344:	bl	13048 <argp_parse@@Base+0xc3c>
   13348:	add	sp, sp, #8
   1334c:	pop	{r4, pc}
   13350:	add	ip, ip, #1
   13354:	b	13330 <argp_parse@@Base+0xf24>
   13358:	push	{r4, r5, lr}
   1335c:	sub	sp, sp, #52	; 0x34
   13360:	mov	ip, #0
   13364:	ldr	r5, [sp, #64]	; 0x40
   13368:	add	lr, sp, #8
   1336c:	ldr	r4, [r5, ip, lsl #2]
   13370:	cmp	r4, #0
   13374:	str	r4, [lr, ip, lsl #2]
   13378:	beq	13388 <argp_parse@@Base+0xf7c>
   1337c:	add	ip, ip, #1
   13380:	cmp	ip, #10
   13384:	bne	1336c <argp_parse@@Base+0xf60>
   13388:	str	ip, [sp, #4]
   1338c:	str	lr, [sp]
   13390:	bl	13048 <argp_parse@@Base+0xc3c>
   13394:	add	sp, sp, #52	; 0x34
   13398:	pop	{r4, r5, pc}
   1339c:	push	{r3}		; (str r3, [sp, #-4]!)
   133a0:	push	{r0, r1, r2, r3, lr}
   133a4:	add	r3, sp, #24
   133a8:	str	r3, [sp, #12]
   133ac:	str	r3, [sp]
   133b0:	ldr	r3, [sp, #20]
   133b4:	bl	13358 <argp_parse@@Base+0xf4c>
   133b8:	add	sp, sp, #16
   133bc:	pop	{lr}		; (ldr lr, [sp], #4)
   133c0:	add	sp, sp, #4
   133c4:	bx	lr
   133c8:	ldr	r3, [pc, #56]	; 13408 <argp_parse@@Base+0xffc>
   133cc:	push	{r4, lr}
   133d0:	mov	r0, #10
   133d4:	ldr	r1, [r3]
   133d8:	bl	111fc <fputc@plt>
   133dc:	ldr	r1, [pc, #40]	; 1340c <argp_parse@@Base+0x1000>
   133e0:	ldr	r0, [pc, #40]	; 13410 <argp_parse@@Base+0x1004>
   133e4:	bl	11004 <printf@plt>
   133e8:	ldr	r1, [pc, #36]	; 13414 <argp_parse@@Base+0x1008>
   133ec:	ldr	r2, [pc, #36]	; 13418 <argp_parse@@Base+0x100c>
   133f0:	ldr	r0, [pc, #36]	; 1341c <argp_parse@@Base+0x1010>
   133f4:	bl	11004 <printf@plt>
   133f8:	ldr	r1, [pc, #32]	; 13420 <argp_parse@@Base+0x1014>
   133fc:	ldr	r0, [pc, #32]	; 13424 <argp_parse@@Base+0x1018>
   13400:	pop	{r4, lr}
   13404:	b	11004 <printf@plt>
   13408:	andeq	r9, r2, ip, ror r2
   1340c:	muleq	r1, r1, sl
   13410:	andeq	r7, r1, r7, lsr #21
   13414:	andeq	r7, r1, r0, ror #15
   13418:			; <UNDEFINED> instruction: 0x00017abb
   1341c:	andeq	r7, r1, r2, ror #21
   13420:	strdeq	r7, [r1], -r6
   13424:	andeq	r7, r1, r3, lsl fp
   13428:	cmp	r0, #0
   1342c:	mov	r3, #0
   13430:	moveq	r0, #1
   13434:	adds	r3, r3, #0
   13438:	movne	r3, #1
   1343c:	cmp	r0, #0
   13440:	blt	13450 <argp_parse@@Base+0x1044>
   13444:	cmp	r3, #0
   13448:	bne	13450 <argp_parse@@Base+0x1044>
   1344c:	b	110f4 <malloc@plt>
   13450:	push	{r4, lr}
   13454:	bl	11178 <__errno_location@plt>
   13458:	mov	r3, #12
   1345c:	str	r3, [r0]
   13460:	mov	r0, #0
   13464:	pop	{r4, pc}
   13468:	ldr	r2, [r0, #4]
   1346c:	ldr	r3, [r0]
   13470:	cmp	r2, #0
   13474:	add	r3, r3, #24
   13478:	bne	13484 <argp_parse@@Base+0x1078>
   1347c:	mov	r0, r2
   13480:	bx	lr
   13484:	ldr	r0, [r3, #-24]	; 0xffffffe8
   13488:	cmp	r0, #0
   1348c:	beq	1349c <argp_parse@@Base+0x1090>
   13490:	ldr	r1, [r3, #-12]
   13494:	tst	r1, #2
   13498:	bxeq	lr
   1349c:	sub	r2, r2, #1
   134a0:	b	13470 <argp_parse@@Base+0x1064>
   134a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   134a8:	mov	sl, r3
   134ac:	ldm	r0, {r5, r6, r7}
   134b0:	mov	r3, #0
   134b4:	sub	sp, sp, #20
   134b8:	mov	r8, r1
   134bc:	mov	r9, r2
   134c0:	mov	r4, r5
   134c4:	mov	fp, r3
   134c8:	adds	r2, r6, #0
   134cc:	movne	r2, #1
   134d0:	cmp	r3, #0
   134d4:	movne	r2, #0
   134d8:	cmp	r2, #0
   134dc:	bne	134ec <argp_parse@@Base+0x10e0>
   134e0:	mov	r0, r3
   134e4:	add	sp, sp, #20
   134e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   134ec:	ldr	r2, [r4, #12]
   134f0:	ands	r3, r2, #8
   134f4:	str	r2, [sp, #12]
   134f8:	movne	r3, fp
   134fc:	bne	1353c <argp_parse@@Base+0x1130>
   13500:	ldr	r1, [r4, #4]
   13504:	sub	r0, r1, #1
   13508:	cmp	r0, #254	; 0xfe
   1350c:	str	r1, [sp, #8]
   13510:	bhi	1353c <argp_parse@@Base+0x1130>
   13514:	str	r3, [sp, #4]
   13518:	bl	1113c <__ctype_b_loc@plt>
   1351c:	ldr	r1, [sp, #8]
   13520:	ldr	r3, [sp, #4]
   13524:	ldr	r2, [sp, #12]
   13528:	ldr	ip, [r0]
   1352c:	lsl	r0, r1, #1
   13530:	ldrh	r0, [ip, r0]
   13534:	tst	r0, #16384	; 0x4000
   13538:	bne	13548 <argp_parse@@Base+0x113c>
   1353c:	add	r4, r4, #24
   13540:	sub	r6, r6, #1
   13544:	b	134c8 <argp_parse@@Base+0x10bc>
   13548:	ldrb	r0, [r7]
   1354c:	cmp	r0, r1
   13550:	bne	1353c <argp_parse@@Base+0x1130>
   13554:	tst	r2, #4
   13558:	moveq	r5, r4
   1355c:	tst	r2, #2
   13560:	bne	1357c <argp_parse@@Base+0x1170>
   13564:	mov	r3, sl
   13568:	mov	r2, r9
   1356c:	mov	r1, r5
   13570:	mov	r0, r4
   13574:	blx	r8
   13578:	mov	r3, r0
   1357c:	add	r7, r7, #1
   13580:	b	1353c <argp_parse@@Base+0x1130>
   13584:	ldr	r3, [r0, #12]
   13588:	ands	r3, r3, #8
   1358c:	bne	135c4 <argp_parse@@Base+0x11b8>
   13590:	push	{r4, lr}
   13594:	ldr	r4, [r0, #4]
   13598:	sub	r2, r4, #1
   1359c:	cmp	r2, #254	; 0xfe
   135a0:	bhi	135bc <argp_parse@@Base+0x11b0>
   135a4:	bl	1113c <__ctype_b_loc@plt>
   135a8:	lsl	r3, r4, #1
   135ac:	ldr	r2, [r0]
   135b0:	ldrh	r3, [r2, r3]
   135b4:	ands	r3, r3, #16384	; 0x4000
   135b8:	movne	r3, r4
   135bc:	mov	r0, r3
   135c0:	pop	{r4, pc}
   135c4:	mov	r3, #0
   135c8:	mov	r0, r3
   135cc:	bx	lr
   135d0:	push	{r4, lr}
   135d4:	mov	r4, r0
   135d8:	bl	1113c <__ctype_b_loc@plt>
   135dc:	ldr	r1, [r0]
   135e0:	ldr	r3, [r4]
   135e4:	ldrb	r0, [r3]
   135e8:	lsl	r2, r0, #1
   135ec:	ldrh	r2, [r1, r2]
   135f0:	tst	r2, #8192	; 0x2000
   135f4:	bne	13624 <argp_parse@@Base+0x1218>
   135f8:	subs	r0, r0, #45	; 0x2d
   135fc:	movne	r0, #1
   13600:	ldr	r2, [r4]
   13604:	ldrb	r3, [r2]
   13608:	cmp	r3, #0
   1360c:	popeq	{r4, pc}
   13610:	lsl	r3, r3, #1
   13614:	ldrh	r3, [r1, r3]
   13618:	tst	r3, #8
   1361c:	beq	13630 <argp_parse@@Base+0x1224>
   13620:	pop	{r4, pc}
   13624:	add	r3, r3, #1
   13628:	str	r3, [r4]
   1362c:	b	135e0 <argp_parse@@Base+0x11d4>
   13630:	add	r2, r2, #1
   13634:	str	r2, [r4]
   13638:	b	13600 <argp_parse@@Base+0x11f4>
   1363c:	push	{r4, r5, r6, lr}
   13640:	mov	r4, r0
   13644:	ldr	r0, [r0, #12]
   13648:	cmp	r0, #0
   1364c:	bne	13678 <argp_parse@@Base+0x126c>
   13650:	ldr	r3, [r4, #4]
   13654:	cmp	r3, #0
   13658:	beq	1366c <argp_parse@@Base+0x1260>
   1365c:	ldr	r0, [r4]
   13660:	bl	12ea8 <argp_parse@@Base+0xa9c>
   13664:	ldr	r0, [r4, #8]
   13668:	bl	12ea8 <argp_parse@@Base+0xa9c>
   1366c:	mov	r0, r4
   13670:	pop	{r4, r5, r6, lr}
   13674:	b	12ea8 <argp_parse@@Base+0xa9c>
   13678:	ldr	r5, [r0, #24]
   1367c:	bl	12ea8 <argp_parse@@Base+0xa9c>
   13680:	mov	r0, r5
   13684:	b	13648 <argp_parse@@Base+0x123c>
   13688:	push	{r4, r5, r6, lr}
   1368c:	ldr	r5, [r0, #16]
   13690:	ldr	r0, [r0, #8]
   13694:	cmp	r0, #0
   13698:	beq	136ac <argp_parse@@Base+0x12a0>
   1369c:	mov	r1, #10
   136a0:	bl	11160 <strchr@plt>
   136a4:	adds	r0, r0, #0
   136a8:	movne	r0, #1
   136ac:	cmp	r5, #0
   136b0:	mov	r4, r0
   136b4:	addne	r5, r5, #16
   136b8:	bne	136cc <argp_parse@@Base+0x12c0>
   136bc:	mov	r0, r4
   136c0:	pop	{r4, r5, r6, pc}
   136c4:	bl	13688 <argp_parse@@Base+0x127c>
   136c8:	add	r4, r4, r0
   136cc:	add	r5, r5, #16
   136d0:	ldr	r0, [r5, #-32]	; 0xffffffe0
   136d4:	cmp	r0, #0
   136d8:	bne	136c4 <argp_parse@@Base+0x12b8>
   136dc:	b	136bc <argp_parse@@Base+0x12b0>
   136e0:	ldr	r2, [r0, #24]
   136e4:	ldr	r3, [r0, #28]
   136e8:	push	{r4, r5, r6, r7, r8, lr}
   136ec:	sub	r3, r3, r2
   136f0:	ldr	r2, [r0, #16]
   136f4:	mov	r4, r0
   136f8:	cmp	r3, r2
   136fc:	mov	r5, r1
   13700:	bls	13708 <argp_parse@@Base+0x12fc>
   13704:	bl	16c18 <argp_error@@Base+0xbf0>
   13708:	ldr	r1, [r4, #20]
   1370c:	mov	r6, #1
   13710:	cmp	r1, #0
   13714:	subge	r5, r5, r1
   13718:	mov	r7, #32
   1371c:	cmp	r5, #0
   13720:	bgt	13728 <argp_parse@@Base+0x131c>
   13724:	pop	{r4, r5, r6, r7, r8, pc}
   13728:	ldr	r2, [r4, #28]
   1372c:	ldr	r3, [r4, #32]
   13730:	cmp	r2, r3
   13734:	bcs	13750 <argp_parse@@Base+0x1344>
   13738:	ldr	r3, [r4, #28]
   1373c:	add	r2, r3, #1
   13740:	str	r2, [r4, #28]
   13744:	strb	r7, [r3]
   13748:	sub	r5, r5, #1
   1374c:	b	1371c <argp_parse@@Base+0x1310>
   13750:	mov	r1, r6
   13754:	mov	r0, r4
   13758:	bl	17068 <argp_error@@Base+0x1040>
   1375c:	cmp	r0, #0
   13760:	bne	13738 <argp_parse@@Base+0x132c>
   13764:	b	13748 <argp_parse@@Base+0x133c>
   13768:	push	{r4, r5, r6, lr}
   1376c:	subs	r4, r2, #0
   13770:	popeq	{r4, r5, r6, pc}
   13774:	ldr	r2, [r4, #20]
   13778:	cmp	r2, #0
   1377c:	popeq	{r4, r5, r6, pc}
   13780:	mov	r6, r1
   13784:	mov	r5, r0
   13788:	mov	r1, r3
   1378c:	mov	r0, r4
   13790:	bl	12d84 <argp_parse@@Base+0x978>
   13794:	ldr	r3, [r4, #20]
   13798:	mov	r1, r5
   1379c:	mov	r2, r0
   137a0:	mov	r0, r6
   137a4:	pop	{r4, r5, r6, lr}
   137a8:	bx	r3
   137ac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   137b0:	mov	r4, r2
   137b4:	ldr	r3, [r2, #16]
   137b8:	mov	r2, r1
   137bc:	ldr	r1, [pc, #440]	; 1397c <argp_parse@@Base+0x1570>
   137c0:	mov	r7, r0
   137c4:	bl	13768 <argp_parse@@Base+0x135c>
   137c8:	subs	r6, r0, #0
   137cc:	beq	13920 <argp_parse@@Base+0x1514>
   137d0:	ldrb	r3, [r6]
   137d4:	cmp	r3, #0
   137d8:	beq	13914 <argp_parse@@Base+0x1508>
   137dc:	ldr	r3, [r4, #8]
   137e0:	ldr	r3, [r3]
   137e4:	cmp	r3, #0
   137e8:	beq	13814 <argp_parse@@Base+0x1408>
   137ec:	ldr	r5, [r4, #4]
   137f0:	ldr	r2, [r5, #28]
   137f4:	ldr	r3, [r5, #32]
   137f8:	cmp	r2, r3
   137fc:	bcs	13934 <argp_parse@@Base+0x1528>
   13800:	ldr	r3, [r5, #28]
   13804:	add	r2, r3, #1
   13808:	str	r2, [r5, #28]
   1380c:	mov	r2, #10
   13810:	strb	r2, [r3]
   13814:	ldr	r8, [pc, #356]	; 13980 <argp_parse@@Base+0x1574>
   13818:	ldr	r0, [r4, #4]
   1381c:	ldr	r1, [r8, #24]
   13820:	bl	136e0 <argp_parse@@Base+0x12d4>
   13824:	ldr	r9, [r4, #4]
   13828:	ldr	sl, [r8, #24]
   1382c:	ldr	r2, [r9, #24]
   13830:	ldr	r3, [r9, #28]
   13834:	sub	r3, r3, r2
   13838:	ldr	r2, [r9, #16]
   1383c:	cmp	r3, r2
   13840:	bls	1384c <argp_parse@@Base+0x1440>
   13844:	mov	r0, r9
   13848:	bl	16c18 <argp_error@@Base+0xbf0>
   1384c:	ldr	r5, [r4, #4]
   13850:	str	sl, [r9, #4]
   13854:	ldr	r8, [r8, #24]
   13858:	ldr	r2, [r5, #24]
   1385c:	ldr	r3, [r5, #28]
   13860:	sub	r3, r3, r2
   13864:	ldr	r2, [r5, #16]
   13868:	cmp	r3, r2
   1386c:	bls	13878 <argp_parse@@Base+0x146c>
   13870:	mov	r0, r5
   13874:	bl	16c18 <argp_error@@Base+0xbf0>
   13878:	str	r8, [r5, #12]
   1387c:	mov	r0, r6
   13880:	bl	11154 <strlen@plt>
   13884:	subs	r8, r0, #0
   13888:	beq	138c0 <argp_parse@@Base+0x14b4>
   1388c:	ldr	r5, [r4, #4]
   13890:	ldr	r3, [r5, #28]
   13894:	ldr	r2, [r5, #32]
   13898:	add	r3, r3, r8
   1389c:	cmp	r2, r3
   138a0:	bcc	1394c <argp_parse@@Base+0x1540>
   138a4:	mov	r2, r8
   138a8:	mov	r1, r6
   138ac:	ldr	r0, [r5, #28]
   138b0:	bl	11064 <memcpy@plt>
   138b4:	ldr	r3, [r5, #28]
   138b8:	add	r8, r3, r8
   138bc:	str	r8, [r5, #28]
   138c0:	ldr	r5, [r4, #4]
   138c4:	ldr	r2, [r5, #24]
   138c8:	ldr	r3, [r5, #28]
   138cc:	sub	r3, r3, r2
   138d0:	ldr	r2, [r5, #16]
   138d4:	cmp	r3, r2
   138d8:	bls	138e4 <argp_parse@@Base+0x14d8>
   138dc:	mov	r0, r5
   138e0:	bl	16c18 <argp_error@@Base+0xbf0>
   138e4:	mov	r3, #0
   138e8:	str	r3, [r5, #4]
   138ec:	ldr	r5, [r4, #4]
   138f0:	ldr	r2, [r5, #28]
   138f4:	ldr	r3, [r5, #32]
   138f8:	cmp	r2, r3
   138fc:	bcs	13964 <argp_parse@@Base+0x1558>
   13900:	ldr	r3, [r5, #28]
   13904:	add	r2, r3, #1
   13908:	str	r2, [r5, #28]
   1390c:	mov	r2, #10
   13910:	strb	r2, [r3]
   13914:	ldr	r3, [r4, #8]
   13918:	mov	r2, #1
   1391c:	str	r2, [r3, #4]
   13920:	cmp	r7, r6
   13924:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13928:	mov	r0, r6
   1392c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   13930:	b	12ea8 <argp_parse@@Base+0xa9c>
   13934:	mov	r1, #1
   13938:	mov	r0, r5
   1393c:	bl	17068 <argp_error@@Base+0x1040>
   13940:	cmp	r0, #0
   13944:	bne	13800 <argp_parse@@Base+0x13f4>
   13948:	b	13814 <argp_parse@@Base+0x1408>
   1394c:	mov	r1, r8
   13950:	mov	r0, r5
   13954:	bl	17068 <argp_error@@Base+0x1040>
   13958:	cmp	r0, #0
   1395c:	bne	138a4 <argp_parse@@Base+0x1498>
   13960:	b	138c0 <argp_parse@@Base+0x14b4>
   13964:	mov	r1, #1
   13968:	mov	r0, r5
   1396c:	bl	17068 <argp_error@@Base+0x1040>
   13970:	cmp	r0, #0
   13974:	bne	13900 <argp_parse@@Base+0x14f4>
   13978:	b	13914 <argp_parse@@Base+0x1508>
   1397c:	andeq	r0, r0, #3
   13980:	andeq	r9, r2, r0, lsr r2
   13984:	ldr	r3, [r1, #12]
   13988:	push	{r4, r5, r6, r7, r8, lr}
   1398c:	cmp	r3, #0
   13990:	mov	r7, r0
   13994:	mov	r4, r1
   13998:	beq	13ab0 <argp_parse@@Base+0x16a4>
   1399c:	ldr	r2, [r1, #8]
   139a0:	ldr	r3, [r1]
   139a4:	ldr	r8, [r2]
   139a8:	ldr	r2, [r2, #4]
   139ac:	ldr	r5, [r3, #16]
   139b0:	cmp	r2, #0
   139b4:	cmpne	r8, #0
   139b8:	beq	139f4 <argp_parse@@Base+0x15e8>
   139bc:	ldr	r2, [r3, #12]
   139c0:	ldr	r3, [r8, #12]
   139c4:	cmp	r2, r3
   139c8:	beq	139f4 <argp_parse@@Base+0x15e8>
   139cc:	ldr	r6, [r1, #4]
   139d0:	ldr	r2, [r6, #28]
   139d4:	ldr	r3, [r6, #32]
   139d8:	cmp	r2, r3
   139dc:	bcs	13a90 <argp_parse@@Base+0x1684>
   139e0:	ldr	r3, [r6, #28]
   139e4:	add	r2, r3, #1
   139e8:	str	r2, [r6, #28]
   139ec:	mov	r2, #10
   139f0:	strb	r2, [r3]
   139f4:	cmp	r5, #0
   139f8:	beq	13a78 <argp_parse@@Base+0x166c>
   139fc:	ldr	r0, [r5]
   13a00:	cmp	r0, #0
   13a04:	beq	13a78 <argp_parse@@Base+0x166c>
   13a08:	ldrb	r3, [r0]
   13a0c:	cmp	r3, #0
   13a10:	beq	13a78 <argp_parse@@Base+0x166c>
   13a14:	cmp	r8, #0
   13a18:	beq	13a3c <argp_parse@@Base+0x1630>
   13a1c:	ldr	r3, [r8, #16]
   13a20:	cmp	r5, r3
   13a24:	beq	13a78 <argp_parse@@Base+0x166c>
   13a28:	cmp	r3, #0
   13a2c:	cmpne	r5, r3
   13a30:	bne	13aa8 <argp_parse@@Base+0x169c>
   13a34:	cmp	r5, r3
   13a38:	beq	13a78 <argp_parse@@Base+0x166c>
   13a3c:	ldr	r3, [r4, #4]
   13a40:	mov	r2, r4
   13a44:	ldr	r1, [r5, #16]
   13a48:	ldr	r6, [r3, #12]
   13a4c:	bl	137ac <argp_parse@@Base+0x13a0>
   13a50:	ldr	r5, [r4, #4]
   13a54:	ldr	r2, [r5, #24]
   13a58:	ldr	r3, [r5, #28]
   13a5c:	sub	r3, r3, r2
   13a60:	ldr	r2, [r5, #16]
   13a64:	cmp	r3, r2
   13a68:	bls	13a74 <argp_parse@@Base+0x1668>
   13a6c:	mov	r0, r5
   13a70:	bl	16c18 <argp_error@@Base+0xbf0>
   13a74:	str	r6, [r5, #12]
   13a78:	mov	r3, #0
   13a7c:	str	r3, [r4, #12]
   13a80:	mov	r1, r7
   13a84:	ldr	r0, [r4, #4]
   13a88:	pop	{r4, r5, r6, r7, r8, lr}
   13a8c:	b	136e0 <argp_parse@@Base+0x12d4>
   13a90:	mov	r1, #1
   13a94:	mov	r0, r6
   13a98:	bl	17068 <argp_error@@Base+0x1040>
   13a9c:	cmp	r0, #0
   13aa0:	bne	139e0 <argp_parse@@Base+0x15d4>
   13aa4:	b	139f4 <argp_parse@@Base+0x15e8>
   13aa8:	ldr	r3, [r3, #12]
   13aac:	b	13a28 <argp_parse@@Base+0x161c>
   13ab0:	ldr	r5, [r1, #4]
   13ab4:	ldr	r3, [r5, #28]
   13ab8:	ldr	r2, [r5, #32]
   13abc:	add	r3, r3, #2
   13ac0:	cmp	r2, r3
   13ac4:	bcc	13ae8 <argp_parse@@Base+0x16dc>
   13ac8:	ldr	r2, [pc, #48]	; 13b00 <argp_parse@@Base+0x16f4>
   13acc:	ldr	r3, [r5, #28]
   13ad0:	ldrh	r2, [r2]
   13ad4:	strh	r2, [r3]
   13ad8:	ldr	r3, [r5, #28]
   13adc:	add	r3, r3, #2
   13ae0:	str	r3, [r5, #28]
   13ae4:	b	13a80 <argp_parse@@Base+0x1674>
   13ae8:	mov	r1, #2
   13aec:	mov	r0, r5
   13af0:	bl	17068 <argp_error@@Base+0x1040>
   13af4:	cmp	r0, #0
   13af8:	bne	13ac8 <argp_parse@@Base+0x16bc>
   13afc:	b	13a80 <argp_parse@@Base+0x1674>
   13b00:	andeq	r7, r1, sp, lsl #24
   13b04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13b08:	sub	sp, sp, #28
   13b0c:	ldr	r7, [r0, #12]
   13b10:	str	r3, [sp, #8]
   13b14:	cmp	r7, #0
   13b18:	ldr	r3, [r0, #16]
   13b1c:	moveq	r5, r7
   13b20:	mov	r8, r0
   13b24:	str	r1, [sp, #16]
   13b28:	mov	fp, r2
   13b2c:	ldr	r4, [sp, #68]	; 0x44
   13b30:	str	r3, [sp, #12]
   13b34:	moveq	r6, r5
   13b38:	beq	13b78 <argp_parse@@Base+0x176c>
   13b3c:	mov	r1, #11
   13b40:	mov	r0, r7
   13b44:	bl	11160 <strchr@plt>
   13b48:	cmp	fp, #0
   13b4c:	moveq	r5, r7
   13b50:	beq	13b60 <argp_parse@@Base+0x1754>
   13b54:	cmp	r0, #0
   13b58:	addne	r5, r0, #1
   13b5c:	moveq	r5, r0
   13b60:	cmp	r0, #0
   13b64:	clz	r6, fp
   13b68:	lsr	r6, r6, #5
   13b6c:	moveq	r6, #0
   13b70:	cmp	r6, #0
   13b74:	subne	r6, r0, r7
   13b78:	ldr	r9, [r8, #20]
   13b7c:	cmp	r9, #0
   13b80:	moveq	sl, r5
   13b84:	beq	13bd8 <argp_parse@@Base+0x17cc>
   13b88:	cmp	r6, #0
   13b8c:	beq	13ba0 <argp_parse@@Base+0x1794>
   13b90:	mov	r0, r5
   13b94:	mov	r1, r6
   13b98:	bl	11058 <strndup@plt>
   13b9c:	mov	r5, r0
   13ba0:	ldr	r1, [sp, #16]
   13ba4:	mov	r0, r8
   13ba8:	bl	12d84 <argp_parse@@Base+0x978>
   13bac:	ldr	ip, [pc, #928]	; 13f54 <argp_parse@@Base+0x1b48>
   13bb0:	cmp	fp, #0
   13bb4:	mov	r1, r5
   13bb8:	ldr	r3, [r8, #20]
   13bbc:	mov	sl, r5
   13bc0:	mov	r2, r0
   13bc4:	mov	r9, r0
   13bc8:	ldr	r0, [pc, #904]	; 13f58 <argp_parse@@Base+0x1b4c>
   13bcc:	movne	r0, ip
   13bd0:	blx	r3
   13bd4:	mov	r5, r0
   13bd8:	cmp	r5, #0
   13bdc:	moveq	r7, r5
   13be0:	beq	13c98 <argp_parse@@Base+0x188c>
   13be4:	ldr	r3, [sp, #8]
   13be8:	cmp	r3, #0
   13bec:	beq	13c14 <argp_parse@@Base+0x1808>
   13bf0:	ldr	r2, [r4, #28]
   13bf4:	ldr	r3, [r4, #32]
   13bf8:	cmp	r2, r3
   13bfc:	bcs	13dc4 <argp_parse@@Base+0x19b8>
   13c00:	ldr	r3, [r4, #28]
   13c04:	add	r2, r3, #1
   13c08:	str	r2, [r4, #28]
   13c0c:	mov	r2, #10
   13c10:	strb	r2, [r3]
   13c14:	cmp	r6, #0
   13c18:	sub	r3, r5, sl
   13c1c:	clz	r3, r3
   13c20:	lsr	r3, r3, #5
   13c24:	moveq	r3, #0
   13c28:	cmp	r3, #0
   13c2c:	ldr	r3, [r4, #28]
   13c30:	beq	13df4 <argp_parse@@Base+0x19e8>
   13c34:	ldr	r2, [r4, #32]
   13c38:	add	r3, r3, r6
   13c3c:	cmp	r2, r3
   13c40:	bcc	13ddc <argp_parse@@Base+0x19d0>
   13c44:	mov	r2, r6
   13c48:	mov	r1, sl
   13c4c:	ldr	r0, [r4, #28]
   13c50:	bl	11064 <memcpy@plt>
   13c54:	ldr	r3, [r4, #28]
   13c58:	add	r3, r3, r6
   13c5c:	str	r3, [r4, #28]
   13c60:	ldr	r2, [r4, #24]
   13c64:	ldr	r3, [r4, #28]
   13c68:	sub	r3, r3, r2
   13c6c:	ldr	r2, [r4, #16]
   13c70:	cmp	r3, r2
   13c74:	bls	13c80 <argp_parse@@Base+0x1874>
   13c78:	mov	r0, r4
   13c7c:	bl	16c18 <argp_error@@Base+0xbf0>
   13c80:	ldr	r3, [r4, #20]
   13c84:	ldr	r2, [r4, #4]
   13c88:	bic	r3, r3, r3, asr #31
   13c8c:	cmp	r2, r3
   13c90:	bcc	13e54 <argp_parse@@Base+0x1a48>
   13c94:	mov	r7, #1
   13c98:	cmp	r5, #0
   13c9c:	cmpne	r5, sl
   13ca0:	beq	13cac <argp_parse@@Base+0x18a0>
   13ca4:	mov	r0, r5
   13ca8:	bl	12ea8 <argp_parse@@Base+0xa9c>
   13cac:	cmp	sl, #0
   13cb0:	cmpne	r6, #0
   13cb4:	beq	13ccc <argp_parse@@Base+0x18c0>
   13cb8:	ldr	r3, [r8, #20]
   13cbc:	cmp	r3, #0
   13cc0:	beq	13da8 <argp_parse@@Base+0x199c>
   13cc4:	mov	r0, sl
   13cc8:	bl	12ea8 <argp_parse@@Base+0xa9c>
   13ccc:	cmp	fp, #0
   13cd0:	beq	13da8 <argp_parse@@Base+0x199c>
   13cd4:	ldr	r3, [r8, #20]
   13cd8:	cmp	r3, #0
   13cdc:	beq	13da8 <argp_parse@@Base+0x199c>
   13ce0:	mov	r2, r9
   13ce4:	mov	r1, #0
   13ce8:	ldr	r0, [pc, #620]	; 13f5c <argp_parse@@Base+0x1b50>
   13cec:	blx	r3
   13cf0:	subs	r5, r0, #0
   13cf4:	beq	13da8 <argp_parse@@Base+0x199c>
   13cf8:	ldr	r3, [sp, #8]
   13cfc:	orrs	r3, r7, r3
   13d00:	beq	13d28 <argp_parse@@Base+0x191c>
   13d04:	ldr	r2, [r4, #28]
   13d08:	ldr	r3, [r4, #32]
   13d0c:	cmp	r2, r3
   13d10:	bcs	13e94 <argp_parse@@Base+0x1a88>
   13d14:	ldr	r3, [r4, #28]
   13d18:	add	r2, r3, #1
   13d1c:	str	r2, [r4, #28]
   13d20:	mov	r2, #10
   13d24:	strb	r2, [r3]
   13d28:	mov	r0, r5
   13d2c:	bl	11154 <strlen@plt>
   13d30:	subs	r6, r0, #0
   13d34:	beq	13d68 <argp_parse@@Base+0x195c>
   13d38:	ldr	r3, [r4, #28]
   13d3c:	ldr	r2, [r4, #32]
   13d40:	add	r3, r3, r6
   13d44:	cmp	r2, r3
   13d48:	bcc	13eac <argp_parse@@Base+0x1aa0>
   13d4c:	mov	r2, r6
   13d50:	mov	r1, r5
   13d54:	ldr	r0, [r4, #28]
   13d58:	bl	11064 <memcpy@plt>
   13d5c:	ldr	r3, [r4, #28]
   13d60:	add	r6, r3, r6
   13d64:	str	r6, [r4, #28]
   13d68:	mov	r0, r5
   13d6c:	bl	12ea8 <argp_parse@@Base+0xa9c>
   13d70:	ldr	r2, [r4, #24]
   13d74:	ldr	r3, [r4, #28]
   13d78:	sub	r3, r3, r2
   13d7c:	ldr	r2, [r4, #16]
   13d80:	cmp	r3, r2
   13d84:	bls	13d90 <argp_parse@@Base+0x1984>
   13d88:	mov	r0, r4
   13d8c:	bl	16c18 <argp_error@@Base+0xbf0>
   13d90:	ldr	r3, [r4, #20]
   13d94:	ldr	r2, [r4, #4]
   13d98:	bic	r3, r3, r3, asr #31
   13d9c:	cmp	r2, r3
   13da0:	bcc	13ec4 <argp_parse@@Base+0x1ab8>
   13da4:	mov	r7, #1
   13da8:	ldr	r3, [sp, #12]
   13dac:	cmp	r3, #0
   13db0:	addne	r5, r3, #16
   13db4:	bne	13f30 <argp_parse@@Base+0x1b24>
   13db8:	mov	r0, r7
   13dbc:	add	sp, sp, #28
   13dc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13dc4:	mov	r1, #1
   13dc8:	mov	r0, r4
   13dcc:	bl	17068 <argp_error@@Base+0x1040>
   13dd0:	cmp	r0, #0
   13dd4:	bne	13c00 <argp_parse@@Base+0x17f4>
   13dd8:	b	13c14 <argp_parse@@Base+0x1808>
   13ddc:	mov	r1, r6
   13de0:	mov	r0, r4
   13de4:	bl	17068 <argp_error@@Base+0x1040>
   13de8:	cmp	r0, #0
   13dec:	bne	13c44 <argp_parse@@Base+0x1838>
   13df0:	b	13c60 <argp_parse@@Base+0x1854>
   13df4:	mov	r0, r5
   13df8:	str	r3, [sp, #20]
   13dfc:	bl	11154 <strlen@plt>
   13e00:	subs	r7, r0, #0
   13e04:	beq	13c60 <argp_parse@@Base+0x1854>
   13e08:	ldr	r3, [sp, #20]
   13e0c:	ldr	r2, [r4, #32]
   13e10:	add	r3, r3, r7
   13e14:	cmp	r2, r3
   13e18:	bcc	13e3c <argp_parse@@Base+0x1a30>
   13e1c:	mov	r2, r7
   13e20:	mov	r1, r5
   13e24:	ldr	r0, [r4, #28]
   13e28:	bl	11064 <memcpy@plt>
   13e2c:	ldr	r3, [r4, #28]
   13e30:	add	r7, r3, r7
   13e34:	str	r7, [r4, #28]
   13e38:	b	13c60 <argp_parse@@Base+0x1854>
   13e3c:	mov	r1, r7
   13e40:	mov	r0, r4
   13e44:	bl	17068 <argp_error@@Base+0x1040>
   13e48:	cmp	r0, #0
   13e4c:	bne	13e1c <argp_parse@@Base+0x1a10>
   13e50:	b	13c60 <argp_parse@@Base+0x1854>
   13e54:	ldr	r2, [r4, #28]
   13e58:	ldr	r3, [r4, #32]
   13e5c:	cmp	r2, r3
   13e60:	bcs	13e7c <argp_parse@@Base+0x1a70>
   13e64:	ldr	r3, [r4, #28]
   13e68:	add	r2, r3, #1
   13e6c:	str	r2, [r4, #28]
   13e70:	mov	r2, #10
   13e74:	strb	r2, [r3]
   13e78:	b	13c94 <argp_parse@@Base+0x1888>
   13e7c:	mov	r1, #1
   13e80:	mov	r0, r4
   13e84:	bl	17068 <argp_error@@Base+0x1040>
   13e88:	cmp	r0, #0
   13e8c:	bne	13e64 <argp_parse@@Base+0x1a58>
   13e90:	b	13c94 <argp_parse@@Base+0x1888>
   13e94:	mov	r1, #1
   13e98:	mov	r0, r4
   13e9c:	bl	17068 <argp_error@@Base+0x1040>
   13ea0:	cmp	r0, #0
   13ea4:	bne	13d14 <argp_parse@@Base+0x1908>
   13ea8:	b	13d28 <argp_parse@@Base+0x191c>
   13eac:	mov	r1, r6
   13eb0:	mov	r0, r4
   13eb4:	bl	17068 <argp_error@@Base+0x1040>
   13eb8:	cmp	r0, #0
   13ebc:	bne	13d4c <argp_parse@@Base+0x1940>
   13ec0:	b	13d68 <argp_parse@@Base+0x195c>
   13ec4:	ldr	r2, [r4, #28]
   13ec8:	ldr	r3, [r4, #32]
   13ecc:	cmp	r2, r3
   13ed0:	bcs	13eec <argp_parse@@Base+0x1ae0>
   13ed4:	ldr	r3, [r4, #28]
   13ed8:	add	r2, r3, #1
   13edc:	str	r2, [r4, #28]
   13ee0:	mov	r2, #10
   13ee4:	strb	r2, [r3]
   13ee8:	b	13da4 <argp_parse@@Base+0x1998>
   13eec:	mov	r1, #1
   13ef0:	mov	r0, r4
   13ef4:	bl	17068 <argp_error@@Base+0x1040>
   13ef8:	cmp	r0, #0
   13efc:	bne	13ed4 <argp_parse@@Base+0x1ac8>
   13f00:	b	13da4 <argp_parse@@Base+0x1998>
   13f04:	ldr	r3, [sp, #8]
   13f08:	str	r4, [sp, #4]
   13f0c:	orrs	r3, r7, r3
   13f10:	ldr	r3, [sp, #64]	; 0x40
   13f14:	mov	r2, fp
   13f18:	str	r3, [sp]
   13f1c:	ldr	r1, [sp, #16]
   13f20:	movne	r3, #1
   13f24:	moveq	r3, #0
   13f28:	bl	13b04 <argp_parse@@Base+0x16f8>
   13f2c:	orr	r7, r7, r0
   13f30:	ldr	r0, [r5, #-16]
   13f34:	cmp	r0, #0
   13f38:	beq	13db8 <argp_parse@@Base+0x19ac>
   13f3c:	ldr	r3, [sp, #64]	; 0x40
   13f40:	add	r5, r5, #16
   13f44:	cmp	r7, #0
   13f48:	cmpne	r3, #0
   13f4c:	beq	13f04 <argp_parse@@Base+0x1af8>
   13f50:	b	13db8 <argp_parse@@Base+0x19ac>
   13f54:	andeq	r0, r0, #2
   13f58:	andeq	r0, r0, #1
   13f5c:	andeq	r0, r0, #4
   13f60:	ldr	r2, [r0, #24]
   13f64:	ldr	r3, [r0, #28]
   13f68:	push	{r4, r5, r6, lr}
   13f6c:	sub	r3, r3, r2
   13f70:	ldr	r2, [r0, #16]
   13f74:	mov	r4, r0
   13f78:	cmp	r3, r2
   13f7c:	mov	r5, r1
   13f80:	bls	13f88 <argp_parse@@Base+0x1b7c>
   13f84:	bl	16c18 <argp_error@@Base+0xbf0>
   13f88:	ldr	r1, [r4, #20]
   13f8c:	ldr	r3, [r4, #8]
   13f90:	cmp	r1, #0
   13f94:	addge	r5, r5, r1
   13f98:	cmp	r5, r3
   13f9c:	ldr	r2, [r4, #28]
   13fa0:	ldr	r3, [r4, #32]
   13fa4:	bcc	13fe0 <argp_parse@@Base+0x1bd4>
   13fa8:	cmp	r2, r3
   13fac:	bcs	13fc8 <argp_parse@@Base+0x1bbc>
   13fb0:	ldr	r3, [r4, #28]
   13fb4:	add	r2, r3, #1
   13fb8:	str	r2, [r4, #28]
   13fbc:	mov	r2, #10
   13fc0:	strb	r2, [r3]
   13fc4:	pop	{r4, r5, r6, pc}
   13fc8:	mov	r1, #1
   13fcc:	mov	r0, r4
   13fd0:	bl	17068 <argp_error@@Base+0x1040>
   13fd4:	cmp	r0, #0
   13fd8:	bne	13fb0 <argp_parse@@Base+0x1ba4>
   13fdc:	pop	{r4, r5, r6, pc}
   13fe0:	cmp	r2, r3
   13fe4:	bcs	13ffc <argp_parse@@Base+0x1bf0>
   13fe8:	ldr	r3, [r4, #28]
   13fec:	add	r2, r3, #1
   13ff0:	str	r2, [r4, #28]
   13ff4:	mov	r2, #32
   13ff8:	b	13fc0 <argp_parse@@Base+0x1bb4>
   13ffc:	mov	r1, #1
   14000:	mov	r0, r4
   14004:	bl	17068 <argp_error@@Base+0x1040>
   14008:	cmp	r0, #0
   1400c:	bne	13fe8 <argp_parse@@Base+0x1bdc>
   14010:	pop	{r4, r5, r6, pc}
   14014:	push	{r4, r5, r6, lr}
   14018:	ldr	r5, [r0, #8]
   1401c:	ldr	r2, [r0, #12]
   14020:	ldr	ip, [r1, #12]
   14024:	cmp	r5, #0
   14028:	orr	r2, r2, ip
   1402c:	bne	1403c <argp_parse@@Base+0x1c30>
   14030:	ldr	r5, [r1, #8]
   14034:	cmp	r5, #0
   14038:	beq	14068 <argp_parse@@Base+0x1c5c>
   1403c:	tst	r2, #16
   14040:	bne	14068 <argp_parse@@Base+0x1c5c>
   14044:	tst	r2, #1
   14048:	mov	r6, r3
   1404c:	mov	r4, r0
   14050:	beq	14070 <argp_parse@@Base+0x1c64>
   14054:	ldr	r2, [r0, #4]
   14058:	ldr	r1, [pc, #52]	; 14094 <argp_parse@@Base+0x1c88>
   1405c:	mov	r3, r5
   14060:	mov	r0, r6
   14064:	bl	1714c <argp_error@@Base+0x1124>
   14068:	mov	r0, #0
   1406c:	pop	{r4, r5, r6, pc}
   14070:	mov	r0, r5
   14074:	bl	11154 <strlen@plt>
   14078:	add	r1, r0, #6
   1407c:	mov	r0, r6
   14080:	bl	13f60 <argp_parse@@Base+0x1b54>
   14084:	mov	r3, r5
   14088:	ldr	r2, [r4, #4]
   1408c:	ldr	r1, [pc, #4]	; 14098 <argp_parse@@Base+0x1c8c>
   14090:	b	14060 <argp_parse@@Base+0x1c54>
   14094:	andeq	r7, r1, r0, lsl ip
   14098:	andeq	r7, r1, fp, lsl ip
   1409c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   140a0:	mov	r6, r3
   140a4:	sub	sp, sp, #36	; 0x24
   140a8:	ldr	r3, [r0, #16]
   140ac:	str	r1, [sp, #20]
   140b0:	str	r3, [sp, #12]
   140b4:	ldr	r3, [r0, #8]
   140b8:	ldr	sl, [r2]
   140bc:	str	r3, [sp, #16]
   140c0:	mov	fp, r2
   140c4:	mov	r3, r1
   140c8:	mov	r2, r0
   140cc:	ldr	r1, [pc, #404]	; 14268 <argp_parse@@Base+0x1e5c>
   140d0:	ldr	r0, [sp, #16]
   140d4:	ldr	r5, [sp, #72]	; 0x48
   140d8:	bl	13768 <argp_parse@@Base+0x135c>
   140dc:	subs	r8, r0, #0
   140e0:	moveq	r7, r8
   140e4:	moveq	r4, r8
   140e8:	beq	1417c <argp_parse@@Base+0x1d70>
   140ec:	mov	r1, #10
   140f0:	bl	11028 <strchrnul@plt>
   140f4:	ldrb	r4, [r0]
   140f8:	mov	r7, r0
   140fc:	cmp	r4, #0
   14100:	moveq	r9, r8
   14104:	beq	14130 <argp_parse@@Base+0x1d24>
   14108:	ldrb	r3, [sl]
   1410c:	mov	r9, r8
   14110:	mov	r4, #0
   14114:	mov	r2, #10
   14118:	cmp	r4, r3
   1411c:	blt	141ec <argp_parse@@Base+0x1de0>
   14120:	ldr	r3, [fp]
   14124:	mov	r4, #1
   14128:	add	r3, r3, #1
   1412c:	str	r3, [fp]
   14130:	add	r1, r7, #1
   14134:	sub	r1, r1, r9
   14138:	mov	r0, r5
   1413c:	bl	13f60 <argp_parse@@Base+0x1b54>
   14140:	ldr	r2, [r5, #28]
   14144:	sub	r3, r7, r9
   14148:	ldr	r1, [r5, #32]
   1414c:	add	r2, r2, r3
   14150:	cmp	r1, r2
   14154:	bcc	14218 <argp_parse@@Base+0x1e0c>
   14158:	mov	r2, r3
   1415c:	mov	r1, r9
   14160:	ldr	r0, [r5, #28]
   14164:	str	r3, [sp, #24]
   14168:	bl	11064 <memcpy@plt>
   1416c:	ldr	r2, [r5, #28]
   14170:	ldr	r3, [sp, #24]
   14174:	add	r3, r2, r3
   14178:	str	r3, [r5, #28]
   1417c:	ldr	r3, [sp, #16]
   14180:	cmp	r8, #0
   14184:	cmpne	r3, r8
   14188:	beq	14194 <argp_parse@@Base+0x1d88>
   1418c:	mov	r0, r8
   14190:	bl	12ea8 <argp_parse@@Base+0xa9c>
   14194:	ldr	r3, [sp, #12]
   14198:	cmp	r3, #0
   1419c:	addne	r8, r3, #16
   141a0:	bne	14254 <argp_parse@@Base+0x1e48>
   141a4:	cmp	r6, #0
   141a8:	moveq	r4, #0
   141ac:	andne	r4, r4, #1
   141b0:	cmp	r4, #0
   141b4:	beq	141dc <argp_parse@@Base+0x1dd0>
   141b8:	ldrb	r2, [r7]
   141bc:	ldrb	r3, [sl]
   141c0:	cmp	r2, #0
   141c4:	addne	r3, r3, #1
   141c8:	strbne	r3, [sl]
   141cc:	movne	r6, #0
   141d0:	bne	141dc <argp_parse@@Base+0x1dd0>
   141d4:	cmp	r3, #0
   141d8:	strbne	r2, [sl]
   141dc:	clz	r0, r6
   141e0:	lsr	r0, r0, #5
   141e4:	add	sp, sp, #36	; 0x24
   141e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   141ec:	add	r9, r7, #1
   141f0:	mov	r1, r2
   141f4:	mov	r0, r9
   141f8:	str	r3, [sp, #28]
   141fc:	str	r2, [sp, #24]
   14200:	bl	11028 <strchrnul@plt>
   14204:	add	r4, r4, #1
   14208:	ldr	r3, [sp, #28]
   1420c:	ldr	r2, [sp, #24]
   14210:	mov	r7, r0
   14214:	b	14118 <argp_parse@@Base+0x1d0c>
   14218:	mov	r1, r3
   1421c:	mov	r0, r5
   14220:	str	r3, [sp, #24]
   14224:	bl	17068 <argp_error@@Base+0x1040>
   14228:	ldr	r3, [sp, #24]
   1422c:	cmp	r0, #0
   14230:	bne	14158 <argp_parse@@Base+0x1d4c>
   14234:	b	1417c <argp_parse@@Base+0x1d70>
   14238:	mov	r3, r6
   1423c:	str	r5, [sp]
   14240:	mov	r2, fp
   14244:	ldr	r1, [sp, #20]
   14248:	bl	1409c <argp_parse@@Base+0x1c90>
   1424c:	clz	r6, r0
   14250:	lsr	r6, r6, #5
   14254:	add	r8, r8, #16
   14258:	ldr	r0, [r8, #-32]	; 0xffffffe0
   1425c:	cmp	r0, #0
   14260:	bne	14238 <argp_parse@@Base+0x1e2c>
   14264:	b	141a4 <argp_parse@@Base+0x1d98>
   14268:	andeq	r0, r0, #6
   1426c:	ldr	r2, [r0, #8]
   14270:	cmp	r2, #0
   14274:	bne	142a8 <argp_parse@@Base+0x1e9c>
   14278:	ldr	r2, [r1, #8]
   1427c:	cmp	r2, #0
   14280:	bne	142a8 <argp_parse@@Base+0x1e9c>
   14284:	ldr	r1, [r1, #12]
   14288:	ldr	r2, [r0, #12]
   1428c:	orr	r2, r2, r1
   14290:	tst	r2, #16
   14294:	ldreq	r2, [r3]
   14298:	addeq	r1, r2, #1
   1429c:	streq	r1, [r3]
   142a0:	ldreq	r3, [r0, #4]
   142a4:	strbeq	r3, [r2]
   142a8:	mov	r0, #0
   142ac:	bx	lr
   142b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   142b4:	add	fp, sp, #32
   142b8:	sub	sp, sp, #12
   142bc:	ldr	r6, [r0, #4]
   142c0:	cmp	r6, #0
   142c4:	beq	14368 <argp_parse@@Base+0x1f5c>
   142c8:	mov	r5, r0
   142cc:	ldr	r0, [r0, #8]
   142d0:	mov	r4, r1
   142d4:	bl	11154 <strlen@plt>
   142d8:	ldr	sl, [pc, #324]	; 14424 <argp_parse@@Base+0x2018>
   142dc:	ldr	r7, [r5]
   142e0:	sub	r9, fp, #36	; 0x24
   142e4:	add	r0, r0, #15
   142e8:	bic	r0, r0, #7
   142ec:	sub	sp, sp, r0
   142f0:	mov	r8, sp
   142f4:	str	sp, [r9, #-4]!
   142f8:	ldr	r2, [r7, #20]
   142fc:	mov	r0, r7
   14300:	mov	r3, r9
   14304:	ldr	r2, [r2, #24]
   14308:	mov	r1, sl
   1430c:	bl	134a4 <argp_parse@@Base+0x1098>
   14310:	subs	r6, r6, #1
   14314:	add	r7, r7, #28
   14318:	bne	142f8 <argp_parse@@Base+0x1eec>
   1431c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14320:	cmp	r8, r3
   14324:	bcs	14344 <argp_parse@@Base+0x1f38>
   14328:	add	r2, r3, #1
   1432c:	str	r2, [fp, #-40]	; 0xffffffd8
   14330:	ldr	r1, [pc, #240]	; 14428 <argp_parse@@Base+0x201c>
   14334:	strb	r6, [r3]
   14338:	mov	r2, r8
   1433c:	mov	r0, r4
   14340:	bl	1714c <argp_error@@Base+0x1124>
   14344:	ldm	r5, {r6, r7}
   14348:	ldr	r8, [pc, #220]	; 1442c <argp_parse@@Base+0x2020>
   1434c:	cmp	r7, #0
   14350:	bne	14370 <argp_parse@@Base+0x1f64>
   14354:	ldm	r5, {r5, r8}
   14358:	ldr	sl, [pc, #208]	; 14430 <argp_parse@@Base+0x2024>
   1435c:	add	r5, r5, #28
   14360:	cmp	r8, #0
   14364:	bne	14394 <argp_parse@@Base+0x1f88>
   14368:	sub	sp, fp, #32
   1436c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14370:	ldr	r2, [r6, #20]
   14374:	mov	r0, r6
   14378:	mov	r3, r4
   1437c:	ldr	r2, [r2, #24]
   14380:	mov	r1, r8
   14384:	bl	134a4 <argp_parse@@Base+0x1098>
   14388:	add	r6, r6, #28
   1438c:	sub	r7, r7, #1
   14390:	b	1434c <argp_parse@@Base+0x1f40>
   14394:	ldr	r7, [r5, #-28]	; 0xffffffe4
   14398:	ldr	r9, [r5, #-24]	; 0xffffffe8
   1439c:	mov	r6, r7
   143a0:	cmp	r9, #0
   143a4:	subeq	r8, r8, #1
   143a8:	addeq	r5, r5, #28
   143ac:	beq	14360 <argp_parse@@Base+0x1f54>
   143b0:	ldr	r2, [r6]
   143b4:	cmp	r2, #0
   143b8:	beq	14408 <argp_parse@@Base+0x1ffc>
   143bc:	ldr	r1, [r6, #12]
   143c0:	tst	r1, #4
   143c4:	moveq	r7, r6
   143c8:	tst	r1, #2
   143cc:	bne	14408 <argp_parse@@Base+0x1ffc>
   143d0:	ldr	r3, [r6, #8]
   143d4:	ldr	r0, [r7, #12]
   143d8:	cmp	r3, #0
   143dc:	orr	r1, r1, r0
   143e0:	ldreq	r3, [r7, #8]
   143e4:	tst	r1, #16
   143e8:	bne	14408 <argp_parse@@Base+0x1ffc>
   143ec:	cmp	r3, #0
   143f0:	beq	14414 <argp_parse@@Base+0x2008>
   143f4:	tst	r1, #1
   143f8:	movne	r1, sl
   143fc:	ldreq	r1, [pc, #48]	; 14434 <argp_parse@@Base+0x2028>
   14400:	mov	r0, r4
   14404:	bl	1714c <argp_error@@Base+0x1124>
   14408:	add	r6, r6, #24
   1440c:	sub	r9, r9, #1
   14410:	b	143a0 <argp_parse@@Base+0x1f94>
   14414:	ldr	r1, [pc, #28]	; 14438 <argp_parse@@Base+0x202c>
   14418:	mov	r0, r4
   1441c:	bl	1714c <argp_error@@Base+0x1124>
   14420:	b	14408 <argp_parse@@Base+0x1ffc>
   14424:	andeq	r4, r1, ip, ror #4
   14428:	andeq	r7, r1, r4, lsr #24
   1442c:	andeq	r4, r1, r4, lsl r0
   14430:	andeq	r7, r1, fp, lsr #24
   14434:	andeq	r7, r1, r8, lsr ip
   14438:	andeq	r7, r1, r3, asr #24
   1443c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14440:	mov	r8, r1
   14444:	ldm	r0, {r5, r6}
   14448:	cmp	r6, #0
   1444c:	bne	14454 <argp_parse@@Base+0x2048>
   14450:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14454:	ldm	r5, {r4, r9}
   14458:	mov	r7, #0
   1445c:	add	r4, r4, #24
   14460:	cmp	r9, r7
   14464:	subeq	r6, r6, #1
   14468:	addeq	r5, r5, #28
   1446c:	beq	14448 <argp_parse@@Base+0x203c>
   14470:	ldr	r0, [r4, #-24]	; 0xffffffe8
   14474:	cmp	r0, #0
   14478:	beq	14498 <argp_parse@@Base+0x208c>
   1447c:	ldr	r3, [r4, #-12]
   14480:	tst	r3, #2
   14484:	bne	14498 <argp_parse@@Base+0x208c>
   14488:	mov	r1, r8
   1448c:	bl	10fec <strcmp@plt>
   14490:	cmp	r0, #0
   14494:	beq	144a4 <argp_parse@@Base+0x2098>
   14498:	add	r7, r7, #1
   1449c:	add	r4, r4, #24
   144a0:	b	14460 <argp_parse@@Base+0x2054>
   144a4:	mvn	r3, #0
   144a8:	str	r3, [r5, #12]
   144ac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   144b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   144b4:	sub	sp, sp, #44	; 0x2c
   144b8:	ldr	r6, [r0, #16]
   144bc:	str	r0, [sp, #8]
   144c0:	ldr	r5, [r0]
   144c4:	mov	r0, #16
   144c8:	mov	r9, r1
   144cc:	bl	13428 <argp_parse@@Base+0x101c>
   144d0:	subs	r4, r0, #0
   144d4:	bne	144ec <argp_parse@@Base+0x20e0>
   144d8:	ldr	r3, [pc, #1444]	; 14a84 <argp_parse@@Base+0x2678>
   144dc:	ldr	r2, [pc, #1444]	; 14a88 <argp_parse@@Base+0x267c>
   144e0:	ldr	r1, [pc, #1444]	; 14a8c <argp_parse@@Base+0x2680>
   144e4:	ldr	r0, [pc, #1444]	; 14a90 <argp_parse@@Base+0x2684>
   144e8:	bl	112b0 <__assert_fail@plt>
   144ec:	mov	r3, #0
   144f0:	cmp	r5, r3
   144f4:	str	r3, [r4, #4]
   144f8:	str	r3, [r4, #12]
   144fc:	beq	14a50 <argp_parse@@Base+0x2644>
   14500:	ldr	r8, [r5, #12]
   14504:	ands	r8, r8, #4
   14508:	addeq	r7, r5, #24
   1450c:	moveq	fp, r8
   14510:	beq	148b8 <argp_parse@@Base+0x24ac>
   14514:	ldr	r3, [pc, #1384]	; 14a84 <argp_parse@@Base+0x2678>
   14518:	mov	r2, #460	; 0x1cc
   1451c:	ldr	r1, [pc, #1384]	; 14a8c <argp_parse@@Base+0x2680>
   14520:	ldr	r0, [pc, #1388]	; 14a94 <argp_parse@@Base+0x2688>
   14524:	b	144e8 <argp_parse@@Base+0x20dc>
   14528:	ldr	r2, [pc, #1384]	; 14a98 <argp_parse@@Base+0x268c>
   1452c:	ldr	r0, [r4, #4]
   14530:	cmp	r0, r2
   14534:	addls	r7, r7, #28
   14538:	movls	sl, r3
   1453c:	movls	r2, r1
   14540:	bls	14a1c <argp_parse@@Base+0x2610>
   14544:	ldr	r3, [pc, #1336]	; 14a84 <argp_parse@@Base+0x2678>
   14548:	mov	r2, #476	; 0x1dc
   1454c:	ldr	r1, [pc, #1336]	; 14a8c <argp_parse@@Base+0x2680>
   14550:	ldr	r0, [pc, #1348]	; 14a9c <argp_parse@@Base+0x2690>
   14554:	b	144e8 <argp_parse@@Base+0x20dc>
   14558:	ldrb	r0, [r0]
   1455c:	add	r1, r1, #1
   14560:	cmp	r0, r8
   14564:	beq	149e0 <argp_parse@@Base+0x25d4>
   14568:	cmp	sl, r1
   1456c:	mov	r0, r1
   14570:	bhi	14558 <argp_parse@@Base+0x214c>
   14574:	strb	r8, [sl]
   14578:	add	sl, sl, #1
   1457c:	b	149e0 <argp_parse@@Base+0x25d4>
   14580:	ldr	r8, [r6, #-4]
   14584:	ldr	r7, [r6, #-8]
   14588:	cmp	r8, #0
   1458c:	bne	1459c <argp_parse@@Base+0x2190>
   14590:	cmp	r7, #0
   14594:	moveq	r1, r9
   14598:	beq	145f8 <argp_parse@@Base+0x21ec>
   1459c:	ldr	r3, [sp, #8]
   145a0:	sub	r5, r6, #16
   145a4:	mov	r0, #28
   145a8:	ldr	r3, [r3, #16]
   145ac:	sub	r5, r5, r3
   145b0:	bl	13428 <argp_parse@@Base+0x101c>
   145b4:	asr	r5, r5, #4
   145b8:	subs	r1, r0, #0
   145bc:	beq	145f8 <argp_parse@@Base+0x21ec>
   145c0:	ldr	r3, [sp, #8]
   145c4:	cmp	r9, #0
   145c8:	str	r3, [r1, #16]
   145cc:	ldrne	r3, [r9, #20]
   145d0:	moveq	r3, #0
   145d4:	addne	r3, r3, #1
   145d8:	str	r3, [r1, #20]
   145dc:	ldr	r3, [r4, #12]
   145e0:	str	r8, [r1, #8]
   145e4:	str	r7, [r1]
   145e8:	str	r5, [r1, #4]
   145ec:	str	r9, [r1, #12]
   145f0:	str	r3, [r1, #24]
   145f4:	str	r1, [r4, #12]
   145f8:	ldr	r0, [r6, #-16]
   145fc:	bl	144b0 <argp_parse@@Base+0x20a4>
   14600:	ldr	r2, [sp, #28]
   14604:	ldr	r3, [r4, #12]
   14608:	mov	r5, r0
   1460c:	cmp	r3, #0
   14610:	bne	1466c <argp_parse@@Base+0x2260>
   14614:	ldr	r1, [r5, #12]
   14618:	str	r1, [r2]
   1461c:	ldr	r2, [r5, #4]
   14620:	str	r3, [r5, #12]
   14624:	cmp	r2, #0
   14628:	beq	14650 <argp_parse@@Base+0x2244>
   1462c:	ldr	r1, [r4, #4]
   14630:	cmp	r1, #0
   14634:	bne	14678 <argp_parse@@Base+0x226c>
   14638:	str	r2, [r4, #4]
   1463c:	ldr	r2, [r5]
   14640:	str	r2, [r4]
   14644:	ldr	r2, [r5, #8]
   14648:	str	r2, [r4, #8]
   1464c:	str	r3, [r5, #4]
   14650:	mov	r0, r5
   14654:	bl	1363c <argp_parse@@Base+0x1230>
   14658:	add	r6, r6, #16
   1465c:	ldr	r3, [r6, #-16]
   14660:	cmp	r3, #0
   14664:	bne	14580 <argp_parse@@Base+0x2174>
   14668:	b	14a64 <argp_parse@@Base+0x2658>
   1466c:	add	r2, r3, #24
   14670:	ldr	r3, [r3, #24]
   14674:	b	1460c <argp_parse@@Base+0x2200>
   14678:	add	r3, r2, r1
   1467c:	mov	r7, #28
   14680:	str	r3, [sp, #12]
   14684:	mul	r0, r7, r3
   14688:	bl	13428 <argp_parse@@Base+0x101c>
   1468c:	str	r0, [sp]
   14690:	ldr	r0, [r4, #8]
   14694:	bl	11154 <strlen@plt>
   14698:	mov	fp, r0
   1469c:	ldr	r0, [r5, #8]
   146a0:	bl	11154 <strlen@plt>
   146a4:	add	r0, fp, r0
   146a8:	add	r0, r0, #1
   146ac:	bl	13428 <argp_parse@@Base+0x101c>
   146b0:	ldr	r3, [sp]
   146b4:	cmp	r3, #0
   146b8:	cmpne	r0, #0
   146bc:	mov	r8, r0
   146c0:	ldreq	r3, [pc, #984]	; 14aa0 <argp_parse@@Base+0x2694>
   146c4:	ldreq	r2, [pc, #984]	; 14aa4 <argp_parse@@Base+0x2698>
   146c8:	ldreq	r1, [pc, #956]	; 14a8c <argp_parse@@Base+0x2680>
   146cc:	ldreq	r0, [pc, #980]	; 14aa8 <argp_parse@@Base+0x269c>
   146d0:	beq	144e8 <argp_parse@@Base+0x20dc>
   146d4:	ldr	r3, [sp, #12]
   146d8:	ldr	r2, [pc, #952]	; 14a98 <argp_parse@@Base+0x268c>
   146dc:	cmp	r3, r2
   146e0:	ldrhi	r3, [pc, #952]	; 14aa0 <argp_parse@@Base+0x2694>
   146e4:	movhi	r2, #972	; 0x3cc
   146e8:	ldrhi	r1, [pc, #924]	; 14a8c <argp_parse@@Base+0x2680>
   146ec:	ldrhi	r0, [pc, #952]	; 14aac <argp_parse@@Base+0x26a0>
   146f0:	bhi	144e8 <argp_parse@@Base+0x20dc>
   146f4:	ldr	sl, [r4, #4]
   146f8:	ldr	r3, [r4]
   146fc:	ldr	r0, [sp]
   14700:	str	r3, [sp, #16]
   14704:	mul	r3, r7, sl
   14708:	ldr	r1, [sp, #16]
   1470c:	mov	r2, r3
   14710:	str	r3, [sp, #24]
   14714:	bl	11130 <mempcpy@plt>
   14718:	ldr	r3, [r5, #4]
   1471c:	ldr	r1, [r5]
   14720:	str	r3, [sp, #4]
   14724:	mul	r2, r7, r3
   14728:	bl	11064 <memcpy@plt>
   1472c:	ldr	r3, [r4, #8]
   14730:	mov	r2, fp
   14734:	mov	r1, r3
   14738:	mov	r0, r8
   1473c:	str	r3, [sp, #20]
   14740:	bl	11064 <memcpy@plt>
   14744:	ldr	r1, [sp]
   14748:	ldr	r3, [sp, #20]
   1474c:	cmp	sl, #0
   14750:	bne	147ac <argp_parse@@Base+0x23a0>
   14754:	add	r3, r8, fp
   14758:	str	r3, [sp, #20]
   1475c:	ldr	r3, [sp, #24]
   14760:	ldr	r1, [r5, #8]
   14764:	add	r7, r3, #28
   14768:	ldr	r3, [sp]
   1476c:	ldr	sl, [sp, #20]
   14770:	add	r7, r3, r7
   14774:	ldr	r3, [sp, #4]
   14778:	cmp	r3, #0
   1477c:	bne	147c8 <argp_parse@@Base+0x23bc>
   14780:	ldrb	r3, [sp, #4]
   14784:	ldr	r0, [sp, #16]
   14788:	strb	r3, [sl]
   1478c:	bl	12ea8 <argp_parse@@Base+0xa9c>
   14790:	ldr	r0, [r4, #8]
   14794:	bl	12ea8 <argp_parse@@Base+0xa9c>
   14798:	ldr	r3, [sp]
   1479c:	str	r3, [r4]
   147a0:	ldr	r3, [sp, #12]
   147a4:	stmib	r4, {r3, r8}
   147a8:	b	14650 <argp_parse@@Base+0x2244>
   147ac:	ldr	r2, [r1, #8]
   147b0:	sub	sl, sl, #1
   147b4:	sub	r2, r2, r3
   147b8:	add	r2, r8, r2
   147bc:	str	r2, [r1, #8]
   147c0:	add	r1, r1, #28
   147c4:	b	1474c <argp_parse@@Base+0x2340>
   147c8:	ldr	r3, [r7, #-24]	; 0xffffffe8
   147cc:	ldr	fp, [r7, #-28]	; 0xffffffe4
   147d0:	str	sl, [r7, #-20]	; 0xffffffec
   147d4:	cmp	r3, #0
   147d8:	ldreq	r3, [sp, #4]
   147dc:	addeq	r7, r7, #28
   147e0:	subeq	r3, r3, #1
   147e4:	streq	r3, [sp, #4]
   147e8:	beq	14774 <argp_parse@@Base+0x2368>
   147ec:	ldr	r2, [fp, #12]
   147f0:	tst	r2, #8
   147f4:	bne	14838 <argp_parse@@Base+0x242c>
   147f8:	ldr	r2, [fp, #4]
   147fc:	sub	r0, r2, #1
   14800:	cmp	r0, #254	; 0xfe
   14804:	str	r2, [sp, #36]	; 0x24
   14808:	bhi	14838 <argp_parse@@Base+0x242c>
   1480c:	str	r3, [sp, #32]
   14810:	str	r1, [sp, #24]
   14814:	bl	1113c <__ctype_b_loc@plt>
   14818:	ldr	r2, [sp, #36]	; 0x24
   1481c:	ldr	r1, [sp, #24]
   14820:	ldr	r3, [sp, #32]
   14824:	ldr	ip, [r0]
   14828:	lsl	r0, r2, #1
   1482c:	ldrh	r0, [ip, r0]
   14830:	tst	r0, #16384	; 0x4000
   14834:	bne	14a70 <argp_parse@@Base+0x2664>
   14838:	add	fp, fp, #24
   1483c:	sub	r3, r3, #1
   14840:	b	147d4 <argp_parse@@Base+0x23c8>
   14844:	ldrb	ip, [ip]
   14848:	add	r2, r2, #1
   1484c:	cmp	ip, r0
   14850:	beq	1486c <argp_parse@@Base+0x2460>
   14854:	ldr	lr, [sp, #20]
   14858:	mov	ip, r2
   1485c:	cmp	lr, r2
   14860:	bhi	14844 <argp_parse@@Base+0x2438>
   14864:	strb	r0, [sl]
   14868:	add	sl, sl, #1
   1486c:	add	r1, r1, #1
   14870:	b	14838 <argp_parse@@Base+0x242c>
   14874:	ldr	r1, [r7, #-12]
   14878:	tst	r1, #4
   1487c:	ldreq	r2, [r4, #4]
   14880:	addeq	r2, r2, #1
   14884:	streq	r2, [r4, #4]
   14888:	tst	r1, #8
   1488c:	bne	148b4 <argp_parse@@Base+0x24a8>
   14890:	sub	r2, sl, #1
   14894:	cmp	r2, #254	; 0xfe
   14898:	bhi	148b4 <argp_parse@@Base+0x24a8>
   1489c:	bl	1113c <__ctype_b_loc@plt>
   148a0:	lsl	sl, sl, #1
   148a4:	ldr	r2, [r0]
   148a8:	ldrh	r2, [r2, sl]
   148ac:	tst	r2, #16384	; 0x4000
   148b0:	addne	fp, fp, #1
   148b4:	add	r7, r7, #24
   148b8:	ldr	sl, [r7, #-20]	; 0xffffffec
   148bc:	cmp	sl, #0
   148c0:	bne	14874 <argp_parse@@Base+0x2468>
   148c4:	ldr	r2, [r7, #-24]	; 0xffffffe8
   148c8:	cmp	r2, #0
   148cc:	bne	14874 <argp_parse@@Base+0x2468>
   148d0:	ldr	r2, [r7, #-8]
   148d4:	cmp	r2, #0
   148d8:	bne	14874 <argp_parse@@Base+0x2468>
   148dc:	ldr	r1, [r7, #-4]
   148e0:	cmp	r1, #0
   148e4:	bne	14874 <argp_parse@@Base+0x2468>
   148e8:	ldr	r2, [r4, #4]
   148ec:	mov	r0, #28
   148f0:	str	r1, [sp]
   148f4:	mul	r0, r0, r2
   148f8:	bl	13428 <argp_parse@@Base+0x101c>
   148fc:	str	r0, [r4]
   14900:	add	r0, fp, #1
   14904:	bl	13428 <argp_parse@@Base+0x101c>
   14908:	ldr	r7, [r4]
   1490c:	ldr	r1, [sp]
   14910:	cmp	r0, #0
   14914:	cmpne	r7, #0
   14918:	mov	r3, r0
   1491c:	str	r0, [r4, #8]
   14920:	bne	14528 <argp_parse@@Base+0x211c>
   14924:	ldr	r3, [pc, #344]	; 14a84 <argp_parse@@Base+0x2678>
   14928:	ldr	r2, [pc, #384]	; 14ab0 <argp_parse@@Base+0x26a4>
   1492c:	ldr	r1, [pc, #344]	; 14a8c <argp_parse@@Base+0x2680>
   14930:	ldr	r0, [pc, #380]	; 14ab4 <argp_parse@@Base+0x26a8>
   14934:	b	144e8 <argp_parse@@Base+0x20dc>
   14938:	uxtb	r8, r8
   1493c:	mov	r1, r3
   14940:	b	14568 <argp_parse@@Base+0x215c>
   14944:	ldr	r1, [r5, #12]
   14948:	tst	r1, #4
   1494c:	bne	14990 <argp_parse@@Base+0x2584>
   14950:	b	14a14 <argp_parse@@Base+0x2608>
   14954:	str	r2, [r7, #-24]	; 0xffffffe8
   14958:	ldr	fp, [r5, #20]
   1495c:	str	r5, [r7, #-28]	; 0xffffffe4
   14960:	cmp	fp, #0
   14964:	str	sl, [r7, #-20]	; 0xffffffec
   14968:	bne	14980 <argp_parse@@Base+0x2574>
   1496c:	ldr	r1, [r5]
   14970:	cmp	r1, #0
   14974:	cmpeq	r0, #0
   14978:	addeq	fp, r8, #1
   1497c:	movne	fp, r8
   14980:	ldr	r1, [sp, #8]
   14984:	str	fp, [r7, #-16]
   14988:	str	r9, [r7, #-12]
   1498c:	str	r1, [r7, #-8]
   14990:	ldr	r1, [r7, #-24]	; 0xffffffe8
   14994:	add	r1, r1, #1
   14998:	str	r1, [r7, #-24]	; 0xffffffe8
   1499c:	ldr	r1, [r5, #12]
   149a0:	tst	r1, #8
   149a4:	bne	149e0 <argp_parse@@Base+0x25d4>
   149a8:	ldr	r8, [r5, #4]
   149ac:	sub	r1, r8, #1
   149b0:	cmp	r1, #254	; 0xfe
   149b4:	bhi	149e0 <argp_parse@@Base+0x25d4>
   149b8:	str	r2, [sp, #4]
   149bc:	str	r3, [sp]
   149c0:	bl	1113c <__ctype_b_loc@plt>
   149c4:	lsl	r1, r8, #1
   149c8:	ldr	r3, [sp]
   149cc:	ldr	r2, [sp, #4]
   149d0:	ldr	r0, [r0]
   149d4:	ldrh	r1, [r0, r1]
   149d8:	tst	r1, #16384	; 0x4000
   149dc:	bne	14938 <argp_parse@@Base+0x252c>
   149e0:	add	r5, r5, #24
   149e4:	ldr	r1, [r5, #4]
   149e8:	cmp	r1, #0
   149ec:	bne	14944 <argp_parse@@Base+0x2538>
   149f0:	ldr	r1, [r5]
   149f4:	cmp	r1, #0
   149f8:	bne	14944 <argp_parse@@Base+0x2538>
   149fc:	ldr	r1, [r5, #16]
   14a00:	cmp	r1, #0
   14a04:	bne	14944 <argp_parse@@Base+0x2538>
   14a08:	ldr	r1, [r5, #20]
   14a0c:	cmp	r1, #0
   14a10:	bne	14944 <argp_parse@@Base+0x2538>
   14a14:	add	r7, r7, #28
   14a18:	mov	r8, fp
   14a1c:	ldr	r0, [r5, #4]
   14a20:	cmp	r0, #0
   14a24:	bne	14954 <argp_parse@@Base+0x2548>
   14a28:	ldr	r1, [r5]
   14a2c:	cmp	r1, #0
   14a30:	bne	14954 <argp_parse@@Base+0x2548>
   14a34:	ldr	r1, [r5, #16]
   14a38:	cmp	r1, #0
   14a3c:	bne	14954 <argp_parse@@Base+0x2548>
   14a40:	ldr	r1, [r5, #20]
   14a44:	cmp	r1, #0
   14a48:	bne	14954 <argp_parse@@Base+0x2548>
   14a4c:	strb	r1, [sl]
   14a50:	cmp	r6, #0
   14a54:	addne	r3, r4, #12
   14a58:	addne	r6, r6, #16
   14a5c:	strne	r3, [sp, #28]
   14a60:	bne	1465c <argp_parse@@Base+0x2250>
   14a64:	mov	r0, r4
   14a68:	add	sp, sp, #44	; 0x2c
   14a6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14a70:	ldrb	r0, [r1]
   14a74:	cmp	r0, r2
   14a78:	moveq	r2, r8
   14a7c:	bne	14838 <argp_parse@@Base+0x242c>
   14a80:	b	14854 <argp_parse@@Base+0x2448>
   14a84:	andeq	r7, r1, r9, ror #22
   14a88:	andeq	r0, r0, r2, asr #3
   14a8c:	andeq	r7, r1, fp, asr #24
   14a90:	andeq	r7, r1, r7, asr ip
   14a94:	andeq	r7, r1, fp, asr ip
   14a98:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   14a9c:	andeq	r7, r1, lr, lsl #25
   14aa0:	andeq	r7, r1, r2, ror fp
   14aa4:	andeq	r0, r0, sl, asr #7
   14aa8:	andeq	r7, r1, r7, asr #25
   14aac:	muleq	r1, r3, ip
   14ab0:	ldrdeq	r0, [r0], -sl
   14ab4:	andeq	r7, r1, fp, ror #24
   14ab8:	push	{r4, r5, r6, lr}
   14abc:	mov	r4, r0
   14ac0:	mov	r5, r1
   14ac4:	ldr	r0, [r0, #12]
   14ac8:	ldr	r1, [r1, #12]
   14acc:	cmp	r0, r1
   14ad0:	bne	14b08 <argp_parse@@Base+0x26fc>
   14ad4:	ldr	r0, [r5, #8]
   14ad8:	ldr	r3, [r4, #8]
   14adc:	mvn	r2, r0
   14ae0:	lsr	r2, r2, #31
   14ae4:	cmp	r2, r3, lsr #31
   14ae8:	subne	r0, r3, r0
   14aec:	subeq	r0, r0, r3
   14af0:	cmp	r0, #0
   14af4:	popne	{r4, r5, r6, pc}
   14af8:	ldr	r0, [r5, #4]
   14afc:	ldr	r3, [r4, #4]
   14b00:	sub	r0, r0, r3
   14b04:	pop	{r4, r5, r6, pc}
   14b08:	bl	14ab8 <argp_parse@@Base+0x26ac>
   14b0c:	cmp	r0, #0
   14b10:	popne	{r4, r5, r6, pc}
   14b14:	ldr	r0, [r5, #8]
   14b18:	ldr	r3, [r4, #8]
   14b1c:	mvn	r2, r0
   14b20:	lsr	r2, r2, #31
   14b24:	cmp	r2, r3, lsr #31
   14b28:	subne	r0, r3, r0
   14b2c:	subeq	r0, r0, r3
   14b30:	cmp	r0, #0
   14b34:	beq	14af8 <argp_parse@@Base+0x26ec>
   14b38:	pop	{r4, r5, r6, pc}
   14b3c:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   14b40:	mov	r6, r0
   14b44:	ldr	r0, [r0, #16]
   14b48:	mov	r5, r1
   14b4c:	cmp	r0, #0
   14b50:	movne	r3, r0
   14b54:	bne	14b64 <argp_parse@@Base+0x2758>
   14b58:	ldr	r3, [r6, #12]
   14b5c:	b	14b74 <argp_parse@@Base+0x2768>
   14b60:	mov	r3, r2
   14b64:	ldr	r2, [r3, #12]
   14b68:	cmp	r2, #0
   14b6c:	bne	14b60 <argp_parse@@Base+0x2754>
   14b70:	ldr	r3, [r3, #8]
   14b74:	ldr	r1, [r5, #16]
   14b78:	cmp	r1, #0
   14b7c:	movne	r2, r1
   14b80:	bne	14b90 <argp_parse@@Base+0x2784>
   14b84:	ldr	r4, [r5, #12]
   14b88:	b	14ba0 <argp_parse@@Base+0x2794>
   14b8c:	mov	r2, ip
   14b90:	ldr	ip, [r2, #12]
   14b94:	cmp	ip, #0
   14b98:	bne	14b8c <argp_parse@@Base+0x2780>
   14b9c:	ldr	r4, [r2, #8]
   14ba0:	mvn	r2, r4
   14ba4:	lsr	r2, r2, #31
   14ba8:	cmp	r2, r3, lsr #31
   14bac:	subne	r4, r3, r4
   14bb0:	subeq	r4, r4, r3
   14bb4:	cmp	r4, #0
   14bb8:	bne	14c10 <argp_parse@@Base+0x2804>
   14bbc:	adds	r4, r1, #0
   14bc0:	movne	r4, #1
   14bc4:	cmp	r0, #0
   14bc8:	rsbeq	r4, r4, #0
   14bcc:	rsbne	r4, r4, #1
   14bd0:	cmp	r4, #0
   14bd4:	bne	14c10 <argp_parse@@Base+0x2804>
   14bd8:	cmp	r0, #0
   14bdc:	beq	14c4c <argp_parse@@Base+0x2840>
   14be0:	ldr	r3, [r0, #20]
   14be4:	ldr	r2, [r1, #20]
   14be8:	cmp	r3, r2
   14bec:	ble	14c1c <argp_parse@@Base+0x2810>
   14bf0:	ldr	r0, [r0, #12]
   14bf4:	ldr	r3, [r0, #20]
   14bf8:	cmp	r2, r3
   14bfc:	blt	14bf0 <argp_parse@@Base+0x27e4>
   14c00:	bl	14ab8 <argp_parse@@Base+0x26ac>
   14c04:	cmp	r0, #0
   14c08:	movne	r4, r0
   14c0c:	moveq	r4, #1
   14c10:	mov	r0, r4
   14c14:	add	sp, sp, #8
   14c18:	pop	{r4, r5, r6, r7, r8, pc}
   14c1c:	bge	14c40 <argp_parse@@Base+0x2834>
   14c20:	ldr	r1, [r1, #12]
   14c24:	ldr	r2, [r1, #20]
   14c28:	cmp	r3, r2
   14c2c:	blt	14c20 <argp_parse@@Base+0x2814>
   14c30:	bl	14ab8 <argp_parse@@Base+0x26ac>
   14c34:	subs	r4, r0, #0
   14c38:	mvneq	r4, #0
   14c3c:	b	14c10 <argp_parse@@Base+0x2804>
   14c40:	bl	14ab8 <argp_parse@@Base+0x26ac>
   14c44:	subs	r4, r0, #0
   14c48:	bne	14c10 <argp_parse@@Base+0x2804>
   14c4c:	ldr	r4, [r5, #12]
   14c50:	ldr	r3, [r6, #12]
   14c54:	mvn	r2, r4
   14c58:	lsr	r2, r2, #31
   14c5c:	cmp	r2, r3, lsr #31
   14c60:	subne	r4, r3, r4
   14c64:	subeq	r4, r4, r3
   14c68:	cmp	r4, #0
   14c6c:	bne	14c10 <argp_parse@@Base+0x2804>
   14c70:	mov	r0, r6
   14c74:	bl	13468 <argp_parse@@Base+0x105c>
   14c78:	mov	r7, r0
   14c7c:	str	r0, [sp]
   14c80:	mov	r0, r5
   14c84:	bl	13468 <argp_parse@@Base+0x105c>
   14c88:	ldr	r3, [r6]
   14c8c:	adds	r7, r7, #0
   14c90:	movne	r7, #1
   14c94:	ldr	r3, [r3, #12]
   14c98:	ands	r3, r7, r3, lsr #3
   14c9c:	moveq	r7, r4
   14ca0:	str	r0, [sp, #4]
   14ca4:	beq	14cb8 <argp_parse@@Base+0x28ac>
   14ca8:	mov	r0, sp
   14cac:	bl	135d0 <argp_parse@@Base+0x11c4>
   14cb0:	adds	r7, r0, #0
   14cb4:	movne	r7, #1
   14cb8:	ldr	r3, [r5]
   14cbc:	ldr	r0, [r3, #12]
   14cc0:	ands	r0, r0, #8
   14cc4:	beq	14ce8 <argp_parse@@Base+0x28dc>
   14cc8:	ldr	r3, [sp, #4]
   14ccc:	cmp	r3, #0
   14cd0:	moveq	r0, r4
   14cd4:	beq	14ce8 <argp_parse@@Base+0x28dc>
   14cd8:	add	r0, sp, #4
   14cdc:	bl	135d0 <argp_parse@@Base+0x11c4>
   14ce0:	adds	r0, r0, #0
   14ce4:	movne	r0, #1
   14ce8:	subs	r4, r7, r0
   14cec:	bne	14c10 <argp_parse@@Base+0x2804>
   14cf0:	ldr	r2, [r6, #20]
   14cf4:	mov	r3, r4
   14cf8:	ldr	r1, [pc, #224]	; 14de0 <argp_parse@@Base+0x29d4>
   14cfc:	ldr	r2, [r2, #24]
   14d00:	mov	r0, r6
   14d04:	bl	134a4 <argp_parse@@Base+0x1098>
   14d08:	ldr	r2, [r5, #20]
   14d0c:	mov	r3, r4
   14d10:	ldr	r1, [pc, #200]	; 14de0 <argp_parse@@Base+0x29d4>
   14d14:	ldr	r2, [r2, #24]
   14d18:	uxtb	r8, r0
   14d1c:	mov	r0, r5
   14d20:	bl	134a4 <argp_parse@@Base+0x1098>
   14d24:	cmp	r8, #0
   14d28:	uxtb	r5, r0
   14d2c:	beq	14d38 <argp_parse@@Base+0x292c>
   14d30:	mov	r6, r8
   14d34:	b	14d48 <argp_parse@@Base+0x293c>
   14d38:	ldr	r3, [sp]
   14d3c:	cmp	r3, #0
   14d40:	ldrbne	r6, [r3]
   14d44:	beq	14d30 <argp_parse@@Base+0x2924>
   14d48:	cmp	r5, #0
   14d4c:	beq	14d58 <argp_parse@@Base+0x294c>
   14d50:	mov	r7, r5
   14d54:	b	14d68 <argp_parse@@Base+0x295c>
   14d58:	ldr	r3, [sp, #4]
   14d5c:	cmp	r3, #0
   14d60:	ldrbne	r7, [r3]
   14d64:	beq	14d50 <argp_parse@@Base+0x2944>
   14d68:	bl	11118 <__ctype_tolower_loc@plt>
   14d6c:	ldr	r3, [r0]
   14d70:	ldr	r4, [r3, r6, lsl #2]
   14d74:	ldr	r3, [r3, r7, lsl #2]
   14d78:	subs	r4, r4, r3
   14d7c:	bne	14c10 <argp_parse@@Base+0x2804>
   14d80:	subs	r4, r7, r6
   14d84:	bne	14c10 <argp_parse@@Base+0x2804>
   14d88:	adds	r4, r5, #0
   14d8c:	movne	r4, #1
   14d90:	cmp	r8, #0
   14d94:	rsbeq	r4, r4, #0
   14d98:	rsbne	r4, r4, #1
   14d9c:	cmp	r4, #0
   14da0:	bne	14c10 <argp_parse@@Base+0x2804>
   14da4:	cmp	r8, #0
   14da8:	bne	14c10 <argp_parse@@Base+0x2804>
   14dac:	ldm	sp, {r0, r1}
   14db0:	adds	r4, r1, #0
   14db4:	movne	r4, #1
   14db8:	cmp	r0, #0
   14dbc:	rsbeq	r4, r4, #0
   14dc0:	rsbne	r4, r4, #1
   14dc4:	cmp	r4, #0
   14dc8:	bne	14c10 <argp_parse@@Base+0x2804>
   14dcc:	cmp	r0, #0
   14dd0:	beq	14c10 <argp_parse@@Base+0x2804>
   14dd4:	bl	110ac <strcasecmp@plt>
   14dd8:	mov	r4, r0
   14ddc:	b	14c10 <argp_parse@@Base+0x2804>
   14de0:	andeq	r3, r1, r4, lsl #11

00014de4 <argp_failure@@Base>:
   14de4:	push	{r3}		; (str r3, [sp, #-4]!)
   14de8:	push	{r4, r5, r6, r7, r8, lr}
   14dec:	sub	sp, sp, #204	; 0xcc
   14df0:	subs	r5, r0, #0
   14df4:	mov	r7, r1
   14df8:	mov	r6, r2
   14dfc:	ldr	r8, [sp, #228]	; 0xe4
   14e00:	beq	14e2c <argp_failure@@Base+0x48>
   14e04:	ldr	r3, [r5, #16]
   14e08:	tst	r3, #2
   14e0c:	bne	14e1c <argp_failure@@Base+0x38>
   14e10:	ldr	r4, [r5, #44]	; 0x2c
   14e14:	cmp	r4, #0
   14e18:	bne	14e50 <argp_failure@@Base+0x6c>
   14e1c:	add	sp, sp, #204	; 0xcc
   14e20:	pop	{r4, r5, r6, r7, r8, lr}
   14e24:	add	sp, sp, #4
   14e28:	bx	lr
   14e2c:	ldr	r3, [pc, #244]	; 14f28 <argp_failure@@Base+0x144>
   14e30:	ldr	r4, [r3]
   14e34:	cmp	r4, #0
   14e38:	beq	14e1c <argp_failure@@Base+0x38>
   14e3c:	mov	r0, r4
   14e40:	bl	11214 <flockfile@plt>
   14e44:	ldr	r3, [pc, #224]	; 14f2c <argp_failure@@Base+0x148>
   14e48:	ldr	r0, [r3]
   14e4c:	b	14e5c <argp_failure@@Base+0x78>
   14e50:	mov	r0, r4
   14e54:	bl	11214 <flockfile@plt>
   14e58:	ldr	r0, [r5, #40]	; 0x28
   14e5c:	mov	r1, r4
   14e60:	bl	10fe0 <fputs_unlocked@plt>
   14e64:	cmp	r8, #0
   14e68:	beq	14e9c <argp_failure@@Base+0xb8>
   14e6c:	add	r3, sp, #232	; 0xe8
   14e70:	mov	r1, r4
   14e74:	mov	r0, #58	; 0x3a
   14e78:	str	r3, [sp]
   14e7c:	bl	112c8 <putc_unlocked@plt>
   14e80:	mov	r1, r4
   14e84:	mov	r0, #32
   14e88:	bl	112c8 <putc_unlocked@plt>
   14e8c:	ldr	r2, [sp]
   14e90:	mov	r1, r8
   14e94:	mov	r0, r4
   14e98:	bl	111f0 <vfprintf@plt>
   14e9c:	cmp	r6, #0
   14ea0:	beq	14ef0 <argp_failure@@Base+0x10c>
   14ea4:	mov	r1, r4
   14ea8:	mov	r0, #58	; 0x3a
   14eac:	bl	112c8 <putc_unlocked@plt>
   14eb0:	mov	r1, r4
   14eb4:	mov	r0, #32
   14eb8:	bl	112c8 <putc_unlocked@plt>
   14ebc:	mov	r2, #200	; 0xc8
   14ec0:	mov	r1, sp
   14ec4:	mov	r0, r6
   14ec8:	bl	11190 <strerror_r@plt>
   14ecc:	cmp	r0, #0
   14ed0:	bne	14ee8 <argp_failure@@Base+0x104>
   14ed4:	mov	r0, r6
   14ed8:	bl	1110c <strerror@plt>
   14edc:	ldr	r3, [pc, #76]	; 14f30 <argp_failure@@Base+0x14c>
   14ee0:	cmp	r0, #0
   14ee4:	moveq	r0, r3
   14ee8:	mov	r1, r4
   14eec:	bl	10fe0 <fputs_unlocked@plt>
   14ef0:	mov	r1, r4
   14ef4:	mov	r0, #10
   14ef8:	bl	112c8 <putc_unlocked@plt>
   14efc:	mov	r0, r4
   14f00:	bl	110b8 <funlockfile@plt>
   14f04:	cmp	r7, #0
   14f08:	beq	14e1c <argp_failure@@Base+0x38>
   14f0c:	cmp	r5, #0
   14f10:	beq	14f20 <argp_failure@@Base+0x13c>
   14f14:	ldr	r3, [r5, #16]
   14f18:	tst	r3, #32
   14f1c:	bne	14e1c <argp_failure@@Base+0x38>
   14f20:	mov	r0, r7
   14f24:	bl	11148 <exit@plt>
   14f28:	andeq	r9, r2, r0, ror r2
   14f2c:	andeq	r9, r2, r8, ror #4
   14f30:	andeq	r7, r1, r0, ror #25
   14f34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14f38:	add	fp, sp, #32
   14f3c:	sub	sp, sp, #116	; 0x74
   14f40:	str	r3, [fp, #-104]	; 0xffffff98
   14f44:	subs	r3, r2, #0
   14f48:	str	r0, [fp, #-108]	; 0xffffff94
   14f4c:	str	r1, [fp, #-96]	; 0xffffffa0
   14f50:	str	r3, [fp, #-112]	; 0xffffff90
   14f54:	beq	14fd0 <argp_failure@@Base+0x1ec>
   14f58:	ldr	r5, [pc, #3996]	; 15efc <argp_failure@@Base+0x1118>
   14f5c:	mov	r0, r3
   14f60:	bl	11214 <flockfile@plt>
   14f64:	ldr	r9, [r5, #36]	; 0x24
   14f68:	cmp	r9, #0
   14f6c:	bne	14fa8 <argp_failure@@Base+0x1c4>
   14f70:	ldr	r0, [pc, #3976]	; 15f00 <argp_failure@@Base+0x111c>
   14f74:	bl	110e8 <getenv@plt>
   14f78:	mov	ip, r5
   14f7c:	sub	lr, fp, #76	; 0x4c
   14f80:	mov	r4, r0
   14f84:	ldm	ip!, {r0, r1, r2, r3}
   14f88:	cmp	r4, #0
   14f8c:	movne	r5, #1
   14f90:	stmia	lr!, {r0, r1, r2, r3}
   14f94:	ldm	ip!, {r0, r1, r2, r3}
   14f98:	stmia	lr!, {r0, r1, r2, r3}
   14f9c:	ldm	ip, {r0, r1}
   14fa0:	stm	lr, {r0, r1}
   14fa4:	bne	15224 <argp_failure@@Base+0x440>
   14fa8:	ldr	r5, [pc, #3916]	; 15efc <argp_failure@@Base+0x1118>
   14fac:	mov	r3, #0
   14fb0:	mov	r1, r3
   14fb4:	ldr	r2, [r5, #32]
   14fb8:	ldr	r0, [fp, #-112]	; 0xffffff90
   14fbc:	bl	16ba0 <argp_error@@Base+0xb78>
   14fc0:	subs	r4, r0, #0
   14fc4:	bne	152b8 <argp_failure@@Base+0x4d4>
   14fc8:	ldr	r0, [fp, #-112]	; 0xffffff90
   14fcc:	bl	110b8 <funlockfile@plt>
   14fd0:	sub	sp, fp, #32
   14fd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14fd8:	mov	r3, r1
   14fdc:	mov	r1, r3
   14fe0:	str	r3, [fp, #-100]	; 0xffffff9c
   14fe4:	ldrb	r0, [r1], #1
   14fe8:	lsl	r2, r0, #1
   14fec:	ldrh	r2, [r6, r2]
   14ff0:	tst	r2, #8192	; 0x2000
   14ff4:	bne	14fd8 <argp_failure@@Base+0x1f4>
   14ff8:	ands	r2, r2, #1024	; 0x400
   14ffc:	movne	r2, r3
   15000:	bne	1507c <argp_failure@@Base+0x298>
   15004:	cmp	r0, #0
   15008:	beq	15274 <argp_failure@@Base+0x490>
   1500c:	str	r3, [sp]
   15010:	mov	r1, r2
   15014:	ldr	r3, [pc, #3816]	; 15f04 <argp_failure@@Base+0x1120>
   15018:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1501c:	bl	14de4 <argp_failure@@Base>
   15020:	ldr	ip, [fp, #-44]	; 0xffffffd4
   15024:	ldr	r3, [pc, #3804]	; 15f08 <argp_failure@@Base+0x1124>
   15028:	mov	r0, #9
   1502c:	ldrb	r2, [r3, #14]
   15030:	cmp	r2, #0
   15034:	bne	1527c <argp_failure@@Base+0x498>
   15038:	ldrb	r1, [r3, #15]
   1503c:	cmp	r1, #32
   15040:	beq	1527c <argp_failure@@Base+0x498>
   15044:	sub	lr, fp, #36	; 0x24
   15048:	add	r1, lr, r1
   1504c:	ldr	r1, [r1, #-40]	; 0xffffffd8
   15050:	cmp	r1, ip
   15054:	blt	1527c <argp_failure@@Base+0x498>
   15058:	str	r3, [sp, #4]
   1505c:	ldr	r3, [pc, #3752]	; 15f0c <argp_failure@@Base+0x1128>
   15060:	mov	r1, r2
   15064:	str	r3, [sp]
   15068:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1506c:	ldr	r3, [pc, #3740]	; 15f10 <argp_failure@@Base+0x112c>
   15070:	bl	14de4 <argp_failure@@Base>
   15074:	b	14fa8 <argp_failure@@Base+0x1c4>
   15078:	mov	r2, lr
   1507c:	mov	lr, r2
   15080:	ldrb	r1, [lr], #1
   15084:	cmp	r1, #95	; 0x5f
   15088:	cmpne	r1, #45	; 0x2d
   1508c:	lsl	ip, r1, #1
   15090:	moveq	r1, #1
   15094:	ldrh	ip, [r6, ip]
   15098:	movne	r1, #0
   1509c:	lsl	ip, ip, #28
   150a0:	orrs	r1, r1, ip, lsr #31
   150a4:	bne	15078 <argp_failure@@Base+0x294>
   150a8:	sub	r8, r2, r3
   150ac:	mov	r4, r2
   150b0:	ldrb	r1, [r2], #1
   150b4:	lsl	ip, r1, #1
   150b8:	ldrh	ip, [r6, ip]
   150bc:	tst	ip, #8192	; 0x2000
   150c0:	bne	150ac <argp_failure@@Base+0x2c8>
   150c4:	cmp	r1, #44	; 0x2c
   150c8:	cmpne	r1, #0
   150cc:	beq	15e3c <argp_failure@@Base+0x1058>
   150d0:	cmp	r1, #61	; 0x3d
   150d4:	bne	150f4 <argp_failure@@Base+0x310>
   150d8:	mov	r4, r2
   150dc:	add	r2, r2, #1
   150e0:	ldrb	r3, [r4]
   150e4:	lsl	r3, r3, #1
   150e8:	ldrh	r3, [r6, r3]
   150ec:	tst	r3, #8192	; 0x2000
   150f0:	bne	150d8 <argp_failure@@Base+0x2f4>
   150f4:	ldrb	r3, [r4]
   150f8:	lsl	r3, r3, #1
   150fc:	ldrh	r3, [r6, r3]
   15100:	tst	r3, #2048	; 0x800
   15104:	moveq	sl, r9
   15108:	moveq	r7, r9
   1510c:	beq	15188 <argp_failure@@Base+0x3a4>
   15110:	mov	r0, r4
   15114:	bl	1122c <atoi@plt>
   15118:	mov	r3, r4
   1511c:	mov	r7, r0
   15120:	ldrb	r2, [r3]
   15124:	add	r1, r3, #1
   15128:	lsl	r2, r2, #1
   1512c:	ldrh	r2, [r6, r2]
   15130:	tst	r2, #2048	; 0x800
   15134:	bne	15240 <argp_failure@@Base+0x45c>
   15138:	mov	r4, r3
   1513c:	add	r3, r3, #1
   15140:	ldrb	r2, [r4]
   15144:	lsl	r2, r2, #1
   15148:	ldrh	r2, [r6, r2]
   1514c:	tst	r2, #8192	; 0x2000
   15150:	bne	15138 <argp_failure@@Base+0x354>
   15154:	mov	sl, r9
   15158:	b	15188 <argp_failure@@Base+0x3a4>
   1515c:	ldrb	r2, [r3, #1]
   15160:	cmp	r2, #111	; 0x6f
   15164:	bne	15e44 <argp_failure@@Base+0x1060>
   15168:	ldrb	r2, [r3, #2]
   1516c:	cmp	r2, #45	; 0x2d
   15170:	bne	15e44 <argp_failure@@Base+0x1060>
   15174:	sub	r8, r8, #3
   15178:	mov	r7, r9
   1517c:	mov	sl, r5
   15180:	add	r3, r3, #3
   15184:	str	r3, [fp, #-100]	; 0xffffff9c
   15188:	ldr	r6, [pc, #3448]	; 15f08 <argp_failure@@Base+0x1124>
   1518c:	mov	r3, #9
   15190:	str	r3, [fp, #-116]	; 0xffffff8c
   15194:	mov	r0, r6
   15198:	bl	11154 <strlen@plt>
   1519c:	cmp	r0, r8
   151a0:	bne	1525c <argp_failure@@Base+0x478>
   151a4:	mov	r2, r8
   151a8:	mov	r1, r6
   151ac:	ldr	r0, [fp, #-100]	; 0xffffff9c
   151b0:	bl	11280 <strncmp@plt>
   151b4:	cmp	r0, #0
   151b8:	bne	1525c <argp_failure@@Base+0x478>
   151bc:	cmp	sl, #0
   151c0:	beq	15248 <argp_failure@@Base+0x464>
   151c4:	ldrb	r2, [r6, #14]
   151c8:	cmp	r2, #0
   151cc:	bne	15248 <argp_failure@@Base+0x464>
   151d0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   151d4:	str	r8, [sp]
   151d8:	str	r3, [sp, #4]
   151dc:	mov	r1, r2
   151e0:	ldr	r3, [pc, #3372]	; 15f14 <argp_failure@@Base+0x1130>
   151e4:	ldr	r0, [fp, #-96]	; 0xffffffa0
   151e8:	bl	14de4 <argp_failure@@Base>
   151ec:	ldr	r3, [pc, #3364]	; 15f18 <argp_failure@@Base+0x1134>
   151f0:	cmp	r6, r3
   151f4:	bne	15218 <argp_failure@@Base+0x434>
   151f8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   151fc:	mov	r2, #0
   15200:	str	r3, [sp, #4]
   15204:	str	r8, [sp]
   15208:	ldr	r3, [pc, #3340]	; 15f1c <argp_failure@@Base+0x1138>
   1520c:	mov	r1, r2
   15210:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15214:	bl	14de4 <argp_failure@@Base>
   15218:	ldrb	r3, [r4]
   1521c:	cmp	r3, #44	; 0x2c
   15220:	addeq	r4, r4, #1
   15224:	ldrb	r3, [r4]
   15228:	cmp	r3, #0
   1522c:	beq	15020 <argp_failure@@Base+0x23c>
   15230:	bl	1113c <__ctype_b_loc@plt>
   15234:	mov	r3, r4
   15238:	ldr	r6, [r0]
   1523c:	b	14fdc <argp_failure@@Base+0x1f8>
   15240:	mov	r3, r1
   15244:	b	15120 <argp_failure@@Base+0x33c>
   15248:	ldrb	r3, [r6, #15]
   1524c:	sub	r2, fp, #36	; 0x24
   15250:	add	r3, r2, r3
   15254:	str	r7, [r3, #-40]	; 0xffffffd8
   15258:	b	151ec <argp_failure@@Base+0x408>
   1525c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   15260:	add	r6, r6, #16
   15264:	subs	r3, r3, #1
   15268:	str	r3, [fp, #-116]	; 0xffffff8c
   1526c:	bne	15194 <argp_failure@@Base+0x3b0>
   15270:	b	151ec <argp_failure@@Base+0x408>
   15274:	mov	r4, r3
   15278:	b	15224 <argp_failure@@Base+0x440>
   1527c:	subs	r0, r0, #1
   15280:	add	r3, r3, #16
   15284:	bne	1502c <argp_failure@@Base+0x248>
   15288:	sub	lr, fp, #76	; 0x4c
   1528c:	ldr	r4, [pc, #3176]	; 15efc <argp_failure@@Base+0x1118>
   15290:	ldm	lr!, {r0, r1, r2, r3}
   15294:	mov	ip, r4
   15298:	stmia	ip!, {r0, r1, r2, r3}
   1529c:	ldm	lr!, {r0, r1, r2, r3}
   152a0:	stmia	ip!, {r0, r1, r2, r3}
   152a4:	mov	r3, #1
   152a8:	ldm	lr, {r0, r1}
   152ac:	stm	ip, {r0, r1}
   152b0:	str	r3, [r4, #36]	; 0x24
   152b4:	b	14fa8 <argp_failure@@Base+0x1c4>
   152b8:	ldr	r3, [fp, #-104]	; 0xffffff98
   152bc:	ands	r3, r3, #11
   152c0:	moveq	sl, r3
   152c4:	beq	15324 <argp_failure@@Base+0x540>
   152c8:	mov	r1, #0
   152cc:	ldr	r0, [fp, #-108]	; 0xffffff94
   152d0:	bl	144b0 <argp_parse@@Base+0x20a4>
   152d4:	ldr	r1, [pc, #3140]	; 15f20 <argp_failure@@Base+0x113c>
   152d8:	mov	sl, r0
   152dc:	bl	1443c <argp_parse@@Base+0x2030>
   152e0:	ldr	r1, [pc, #3132]	; 15f24 <argp_failure@@Base+0x1140>
   152e4:	mov	r0, sl
   152e8:	bl	1443c <argp_parse@@Base+0x2030>
   152ec:	ldr	r1, [sl, #4]
   152f0:	cmp	r1, #0
   152f4:	beq	15324 <argp_failure@@Base+0x540>
   152f8:	ldr	r0, [sl]
   152fc:	mov	r3, #0
   15300:	mov	r2, r0
   15304:	str	r3, [r2, #24]
   15308:	add	r3, r3, #1
   1530c:	cmp	r1, r3
   15310:	add	r2, r2, #28
   15314:	bne	15304 <argp_failure@@Base+0x520>
   15318:	ldr	r3, [pc, #3080]	; 15f28 <argp_failure@@Base+0x1144>
   1531c:	mov	r2, #28
   15320:	bl	11238 <qsort@plt>
   15324:	ldr	r3, [fp, #-104]	; 0xffffff98
   15328:	ands	r3, r3, #3
   1532c:	moveq	r5, r3
   15330:	beq	154d0 <argp_failure@@Base+0x6ec>
   15334:	ldr	r0, [fp, #-108]	; 0xffffff94
   15338:	bl	13688 <argp_parse@@Base+0x127c>
   1533c:	mov	r1, #0
   15340:	ldr	r6, [pc, #3044]	; 15f2c <argp_failure@@Base+0x1148>
   15344:	mov	r9, #1
   15348:	add	r3, r0, #14
   1534c:	bic	r3, r3, #7
   15350:	sub	sp, sp, r3
   15354:	add	r7, sp, #8
   15358:	mov	r2, r0
   1535c:	mov	r0, r7
   15360:	bl	111a8 <memset@plt>
   15364:	ldr	r2, [r4, #24]
   15368:	ldr	r3, [r4, #28]
   1536c:	ldr	r8, [r5, #28]
   15370:	sub	r3, r3, r2
   15374:	ldr	r2, [r4, #16]
   15378:	cmp	r3, r2
   1537c:	bls	15388 <argp_failure@@Base+0x5a4>
   15380:	mov	r0, r4
   15384:	bl	16c18 <argp_error@@Base+0xbf0>
   15388:	ldr	r3, [r4, #12]
   1538c:	cmp	r9, #0
   15390:	str	r8, [r4, #12]
   15394:	ldrne	r2, [pc, #2964]	; 15f30 <argp_failure@@Base+0x114c>
   15398:	ldreq	r2, [pc, #2964]	; 15f34 <argp_failure@@Base+0x1150>
   1539c:	str	r3, [fp, #-100]	; 0xffffff9c
   153a0:	ldr	r1, [pc, #2960]	; 15f38 <argp_failure@@Base+0x1154>
   153a4:	ldr	r3, [fp, #4]
   153a8:	mov	r0, r4
   153ac:	str	r7, [fp, #-76]	; 0xffffffb4
   153b0:	bl	1714c <argp_error@@Base+0x1124>
   153b4:	ldr	r2, [r4, #24]
   153b8:	ldr	r3, [r4, #28]
   153bc:	ldr	r8, [r5, #28]
   153c0:	sub	r3, r3, r2
   153c4:	ldr	r2, [r4, #16]
   153c8:	cmp	r3, r2
   153cc:	bls	153d8 <argp_failure@@Base+0x5f4>
   153d0:	mov	r0, r4
   153d4:	bl	16c18 <argp_error@@Base+0xbf0>
   153d8:	ldr	r3, [fp, #-104]	; 0xffffff98
   153dc:	ldr	r9, [r4, #4]
   153e0:	tst	r3, #2
   153e4:	str	r8, [r4, #4]
   153e8:	beq	1574c <argp_failure@@Base+0x968>
   153ec:	ldr	r3, [sl, #4]
   153f0:	cmp	r3, #0
   153f4:	beq	15434 <argp_failure@@Base+0x650>
   153f8:	ldr	r3, [r4, #28]
   153fc:	ldr	r2, [r4, #32]
   15400:	add	r3, r3, #12
   15404:	cmp	r2, r3
   15408:	bcc	15734 <argp_failure@@Base+0x950>
   1540c:	ldr	r2, [r4, #28]
   15410:	ldr	r3, [r6]
   15414:	str	r3, [r2]
   15418:	ldr	r3, [r6, #4]
   1541c:	str	r3, [r2, #4]
   15420:	ldr	r3, [r6, #8]
   15424:	str	r3, [r2, #8]
   15428:	ldr	r3, [r4, #28]
   1542c:	add	r3, r3, #12
   15430:	str	r3, [r4, #28]
   15434:	mov	r3, #1
   15438:	sub	r2, fp, #76	; 0x4c
   1543c:	str	r4, [sp]
   15440:	ldr	r1, [fp, #-96]	; 0xffffffa0
   15444:	ldr	r0, [fp, #-108]	; 0xffffff94
   15448:	bl	1409c <argp_parse@@Base+0x1c90>
   1544c:	ldr	r2, [r4, #24]
   15450:	ldr	r3, [r4, #28]
   15454:	sub	r3, r3, r2
   15458:	ldr	r2, [r4, #16]
   1545c:	cmp	r3, r2
   15460:	mov	r8, r0
   15464:	bls	15470 <argp_failure@@Base+0x68c>
   15468:	mov	r0, r4
   1546c:	bl	16c18 <argp_error@@Base+0xbf0>
   15470:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15474:	ldr	r2, [r4, #24]
   15478:	str	r3, [r4, #12]
   1547c:	ldr	r3, [r4, #28]
   15480:	sub	r3, r3, r2
   15484:	ldr	r2, [r4, #16]
   15488:	cmp	r3, r2
   1548c:	bls	15498 <argp_failure@@Base+0x6b4>
   15490:	mov	r0, r4
   15494:	bl	16c18 <argp_error@@Base+0xbf0>
   15498:	ldr	r2, [r4, #28]
   1549c:	ldr	r3, [r4, #32]
   154a0:	str	r9, [r4, #4]
   154a4:	cmp	r2, r3
   154a8:	bcs	15768 <argp_failure@@Base+0x984>
   154ac:	ldr	r3, [r4, #28]
   154b0:	add	r2, r3, #1
   154b4:	str	r2, [r4, #28]
   154b8:	mov	r2, #10
   154bc:	strb	r2, [r3]
   154c0:	mov	r9, #0
   154c4:	cmp	r8, r9
   154c8:	bne	15364 <argp_failure@@Base+0x580>
   154cc:	mov	r5, #1
   154d0:	ldr	r3, [fp, #-104]	; 0xffffff98
   154d4:	tst	r3, #16
   154d8:	beq	15500 <argp_failure@@Base+0x71c>
   154dc:	mov	r3, #1
   154e0:	str	r3, [sp]
   154e4:	mov	r3, #0
   154e8:	str	r4, [sp, #4]
   154ec:	mov	r2, r3
   154f0:	ldr	r1, [fp, #-96]	; 0xffffffa0
   154f4:	ldr	r0, [fp, #-108]	; 0xffffff94
   154f8:	bl	13b04 <argp_parse@@Base+0x16f8>
   154fc:	orr	r5, r5, r0
   15500:	ldr	r3, [fp, #-104]	; 0xffffff98
   15504:	tst	r3, #4
   15508:	beq	15524 <argp_failure@@Base+0x740>
   1550c:	ldr	r3, [fp, #4]
   15510:	ldr	r1, [pc, #2596]	; 15f3c <argp_failure@@Base+0x1158>
   15514:	mov	r2, r3
   15518:	mov	r0, r4
   1551c:	bl	1714c <argp_error@@Base+0x1124>
   15520:	mov	r5, #1
   15524:	ldr	r3, [fp, #-104]	; 0xffffff98
   15528:	tst	r3, #8
   1552c:	beq	15684 <argp_failure@@Base+0x8a0>
   15530:	ldr	r3, [sl, #4]
   15534:	cmp	r3, #0
   15538:	beq	15684 <argp_failure@@Base+0x8a0>
   1553c:	cmp	r5, #0
   15540:	beq	15568 <argp_failure@@Base+0x784>
   15544:	ldr	r2, [r4, #28]
   15548:	ldr	r3, [r4, #32]
   1554c:	cmp	r2, r3
   15550:	bcs	15780 <argp_failure@@Base+0x99c>
   15554:	ldr	r3, [r4, #28]
   15558:	add	r2, r3, #1
   1555c:	str	r2, [r4, #28]
   15560:	mov	r2, #10
   15564:	strb	r2, [r3]
   15568:	mov	r3, #0
   1556c:	str	r3, [fp, #-88]	; 0xffffffa8
   15570:	str	r3, [fp, #-84]	; 0xffffffac
   15574:	str	r3, [fp, #-80]	; 0xffffffb0
   15578:	ldr	r3, [sl]
   1557c:	str	r3, [fp, #-100]	; 0xffffff9c
   15580:	ldr	r3, [sl, #4]
   15584:	str	r3, [fp, #-116]	; 0xffffff8c
   15588:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1558c:	cmp	r3, #0
   15590:	bne	15798 <argp_failure@@Base+0x9b4>
   15594:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15598:	cmp	r3, #0
   1559c:	beq	15680 <argp_failure@@Base+0x89c>
   155a0:	ldr	r3, [pc, #2388]	; 15efc <argp_failure@@Base+0x1118>
   155a4:	ldr	r3, [r3, #4]
   155a8:	cmp	r3, #0
   155ac:	beq	15680 <argp_failure@@Base+0x89c>
   155b0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   155b4:	ldr	r1, [pc, #2436]	; 15f40 <argp_failure@@Base+0x115c>
   155b8:	cmp	r3, #0
   155bc:	ldr	r0, [pc, #2432]	; 15f44 <argp_failure@@Base+0x1160>
   155c0:	ldrne	r2, [r3]
   155c4:	ldreq	r2, [fp, #-96]	; 0xffffffa0
   155c8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   155cc:	bl	13768 <argp_parse@@Base+0x135c>
   155d0:	subs	r5, r0, #0
   155d4:	beq	15680 <argp_failure@@Base+0x89c>
   155d8:	ldrb	r3, [r5]
   155dc:	cmp	r3, #0
   155e0:	beq	1566c <argp_failure@@Base+0x888>
   155e4:	ldr	r2, [r4, #28]
   155e8:	ldr	r3, [r4, #32]
   155ec:	cmp	r2, r3
   155f0:	bcs	15ddc <argp_failure@@Base+0xff8>
   155f4:	ldr	r3, [r4, #28]
   155f8:	add	r2, r3, #1
   155fc:	str	r2, [r4, #28]
   15600:	mov	r2, #10
   15604:	strb	r2, [r3]
   15608:	mov	r0, r5
   1560c:	bl	11154 <strlen@plt>
   15610:	subs	r6, r0, #0
   15614:	beq	15648 <argp_failure@@Base+0x864>
   15618:	ldr	r3, [r4, #28]
   1561c:	ldr	r2, [r4, #32]
   15620:	add	r3, r3, r6
   15624:	cmp	r2, r3
   15628:	bcc	15df4 <argp_failure@@Base+0x1010>
   1562c:	mov	r2, r6
   15630:	mov	r1, r5
   15634:	ldr	r0, [r4, #28]
   15638:	bl	11064 <memcpy@plt>
   1563c:	ldr	r3, [r4, #28]
   15640:	add	r6, r3, r6
   15644:	str	r6, [r4, #28]
   15648:	ldr	r2, [r4, #28]
   1564c:	ldr	r3, [r4, #32]
   15650:	cmp	r2, r3
   15654:	bcs	15e0c <argp_failure@@Base+0x1028>
   15658:	ldr	r3, [r4, #28]
   1565c:	add	r2, r3, #1
   15660:	str	r2, [r4, #28]
   15664:	mov	r2, #10
   15668:	strb	r2, [r3]
   1566c:	ldr	r3, [pc, #2256]	; 15f44 <argp_failure@@Base+0x1160>
   15670:	cmp	r5, r3
   15674:	beq	15680 <argp_failure@@Base+0x89c>
   15678:	mov	r0, r5
   1567c:	bl	12ea8 <argp_parse@@Base+0xa9c>
   15680:	mov	r5, #1
   15684:	ldr	r3, [fp, #-104]	; 0xffffff98
   15688:	tst	r3, #32
   1568c:	beq	156b4 <argp_failure@@Base+0x8d0>
   15690:	mov	r3, #0
   15694:	str	r3, [sp]
   15698:	str	r4, [sp, #4]
   1569c:	mov	r3, r5
   156a0:	mov	r2, #1
   156a4:	ldr	r1, [fp, #-96]	; 0xffffffa0
   156a8:	ldr	r0, [fp, #-108]	; 0xffffff94
   156ac:	bl	13b04 <argp_parse@@Base+0x16f8>
   156b0:	orr	r5, r5, r0
   156b4:	ldr	r3, [fp, #-104]	; 0xffffff98
   156b8:	tst	r3, #64	; 0x40
   156bc:	beq	15710 <argp_failure@@Base+0x92c>
   156c0:	ldr	r3, [pc, #2176]	; 15f48 <argp_failure@@Base+0x1164>
   156c4:	mov	r6, r3
   156c8:	ldr	r2, [r3]
   156cc:	cmp	r2, #0
   156d0:	beq	15710 <argp_failure@@Base+0x92c>
   156d4:	cmp	r5, #0
   156d8:	beq	15700 <argp_failure@@Base+0x91c>
   156dc:	ldr	r2, [r4, #28]
   156e0:	ldr	r3, [r4, #32]
   156e4:	cmp	r2, r3
   156e8:	bcs	15e24 <argp_failure@@Base+0x1040>
   156ec:	ldr	r3, [r4, #28]
   156f0:	add	r2, r3, #1
   156f4:	str	r2, [r4, #28]
   156f8:	mov	r2, #10
   156fc:	strb	r2, [r3]
   15700:	ldr	r2, [r6]
   15704:	ldr	r1, [pc, #2112]	; 15f4c <argp_failure@@Base+0x1168>
   15708:	mov	r0, r4
   1570c:	bl	1714c <argp_error@@Base+0x1124>
   15710:	ldr	r0, [fp, #-112]	; 0xffffff90
   15714:	bl	110b8 <funlockfile@plt>
   15718:	cmp	sl, #0
   1571c:	beq	15728 <argp_failure@@Base+0x944>
   15720:	mov	r0, sl
   15724:	bl	1363c <argp_parse@@Base+0x1230>
   15728:	mov	r0, r4
   1572c:	bl	17028 <argp_error@@Base+0x1000>
   15730:	b	14fd0 <argp_failure@@Base+0x1ec>
   15734:	mov	r1, #12
   15738:	mov	r0, r4
   1573c:	bl	17068 <argp_error@@Base+0x1040>
   15740:	cmp	r0, #0
   15744:	bne	1540c <argp_failure@@Base+0x628>
   15748:	b	15434 <argp_failure@@Base+0x650>
   1574c:	mov	r1, r4
   15750:	mov	r0, sl
   15754:	bl	142b0 <argp_parse@@Base+0x1ea4>
   15758:	ldr	r3, [fp, #-104]	; 0xffffff98
   1575c:	orr	r3, r3, #2
   15760:	str	r3, [fp, #-104]	; 0xffffff98
   15764:	b	15434 <argp_failure@@Base+0x650>
   15768:	mov	r1, #1
   1576c:	mov	r0, r4
   15770:	bl	17068 <argp_error@@Base+0x1040>
   15774:	cmp	r0, #0
   15778:	bne	154ac <argp_failure@@Base+0x6c8>
   1577c:	b	154c0 <argp_failure@@Base+0x6dc>
   15780:	mov	r1, #1
   15784:	mov	r0, r4
   15788:	bl	17068 <argp_error@@Base+0x1040>
   1578c:	cmp	r0, #0
   15790:	bne	15554 <argp_failure@@Base+0x770>
   15794:	b	15568 <argp_failure@@Base+0x784>
   15798:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1579c:	ldr	r2, [r4, #24]
   157a0:	ldr	r5, [r3]
   157a4:	ldr	r9, [r3, #8]
   157a8:	ldr	r3, [r4, #28]
   157ac:	sub	r3, r3, r2
   157b0:	ldr	r2, [r4, #16]
   157b4:	cmp	r3, r2
   157b8:	bls	157c4 <argp_failure@@Base+0x9e0>
   157bc:	mov	r0, r4
   157c0:	bl	16c18 <argp_error@@Base+0xbf0>
   157c4:	ldr	r2, [r4, #12]
   157c8:	ldr	r3, [r4, #4]
   157cc:	str	r2, [fp, #-128]	; 0xffffff80
   157d0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   157d4:	str	r3, [fp, #-124]	; 0xffffff84
   157d8:	mov	r3, #0
   157dc:	str	r3, [r4, #4]
   157e0:	str	r2, [fp, #-76]	; 0xffffffb4
   157e4:	sub	r2, fp, #88	; 0x58
   157e8:	str	r2, [fp, #-68]	; 0xffffffbc
   157ec:	mov	r2, #1
   157f0:	str	r2, [fp, #-64]	; 0xffffffc0
   157f4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   157f8:	str	r4, [fp, #-72]	; 0xffffffb8
   157fc:	str	r2, [fp, #-60]	; 0xffffffc4
   15800:	ldr	r2, [r5, #12]
   15804:	ands	r2, r2, #8
   15808:	str	r2, [fp, #-120]	; 0xffffff88
   1580c:	ldreq	r3, [fp, #-100]	; 0xffffff9c
   15810:	ldreq	r2, [r3, #4]
   15814:	addeq	r3, r5, #24
   15818:	beq	15844 <argp_failure@@Base+0xa60>
   1581c:	str	r3, [fp, #-120]	; 0xffffff88
   15820:	b	1584c <argp_failure@@Base+0xa68>
   15824:	ldr	r1, [r3, #-24]	; 0xffffffe8
   15828:	cmp	r1, #0
   1582c:	beq	1583c <argp_failure@@Base+0xa58>
   15830:	ldr	r1, [r3, #-12]
   15834:	tst	r1, #2
   15838:	beq	159d4 <argp_failure@@Base+0xbf0>
   1583c:	sub	r2, r2, #1
   15840:	add	r3, r3, #24
   15844:	cmp	r2, #0
   15848:	bne	15824 <argp_failure@@Base+0xa40>
   1584c:	ldr	r3, [pc, #1704]	; 15efc <argp_failure@@Base+0x1118>
   15850:	ldr	r2, [r4, #24]
   15854:	ldr	r6, [r3, #8]
   15858:	ldr	r3, [r4, #28]
   1585c:	sub	r3, r3, r2
   15860:	ldr	r2, [r4, #16]
   15864:	cmp	r3, r2
   15868:	bls	15874 <argp_failure@@Base+0xa90>
   1586c:	mov	r0, r4
   15870:	bl	16c18 <argp_error@@Base+0xbf0>
   15874:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15878:	str	r6, [r4, #12]
   1587c:	ldr	r7, [pc, #1656]	; 15efc <argp_failure@@Base+0x1118>
   15880:	ldr	r8, [r3, #4]
   15884:	mov	r6, r5
   15888:	cmp	r8, #0
   1588c:	bne	159dc <argp_failure@@Base+0xbf8>
   15890:	ldr	r3, [r5, #12]
   15894:	ldr	r1, [pc, #1632]	; 15efc <argp_failure@@Base+0x1118>
   15898:	tst	r3, #8
   1589c:	ldr	r2, [r4, #24]
   158a0:	ldr	r3, [r4, #28]
   158a4:	beq	15b08 <argp_failure@@Base+0xd24>
   158a8:	sub	r3, r3, r2
   158ac:	ldr	r2, [r4, #16]
   158b0:	ldr	r6, [r1, #16]
   158b4:	cmp	r3, r2
   158b8:	bls	158c4 <argp_failure@@Base+0xae0>
   158bc:	mov	r0, r4
   158c0:	bl	16c18 <argp_error@@Base+0xbf0>
   158c4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   158c8:	str	r6, [r4, #12]
   158cc:	add	r6, r5, #24
   158d0:	ldr	r7, [r3, #4]
   158d4:	cmp	r7, #0
   158d8:	bne	15a78 <argp_failure@@Base+0xc94>
   158dc:	ldr	r2, [r4, #24]
   158e0:	ldr	r3, [r4, #28]
   158e4:	sub	r3, r3, r2
   158e8:	ldr	r2, [r4, #16]
   158ec:	cmp	r3, r2
   158f0:	bls	158fc <argp_failure@@Base+0xb18>
   158f4:	mov	r0, r4
   158f8:	bl	16c18 <argp_error@@Base+0xbf0>
   158fc:	mov	r3, #0
   15900:	str	r3, [r4, #4]
   15904:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15908:	cmp	r3, #0
   1590c:	beq	15ba8 <argp_failure@@Base+0xdc4>
   15910:	ldr	r3, [r5, #12]
   15914:	tst	r3, #8
   15918:	bne	15944 <argp_failure@@Base+0xb60>
   1591c:	ldr	r6, [r5, #4]
   15920:	sub	r3, r6, #1
   15924:	cmp	r3, #254	; 0xfe
   15928:	bhi	15944 <argp_failure@@Base+0xb60>
   1592c:	bl	1113c <__ctype_b_loc@plt>
   15930:	lsl	r6, r6, #1
   15934:	ldr	r3, [r0]
   15938:	ldrh	r3, [r3, r6]
   1593c:	tst	r3, #16384	; 0x4000
   15940:	bne	1596c <argp_failure@@Base+0xb88>
   15944:	ldr	r3, [r5]
   15948:	cmp	r3, #0
   1594c:	bne	1596c <argp_failure@@Base+0xb88>
   15950:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15954:	sub	r2, fp, #76	; 0x4c
   15958:	ldr	r0, [r5, #16]
   1595c:	ldr	r1, [r3, #20]
   15960:	bl	137ac <argp_parse@@Base+0x13a0>
   15964:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15968:	str	r3, [fp, #-88]	; 0xffffffa8
   1596c:	ldr	r2, [r4, #24]
   15970:	ldr	r3, [r4, #28]
   15974:	sub	r3, r3, r2
   15978:	ldr	r2, [r4, #16]
   1597c:	cmp	r3, r2
   15980:	bls	1598c <argp_failure@@Base+0xba8>
   15984:	mov	r0, r4
   15988:	bl	16c18 <argp_error@@Base+0xbf0>
   1598c:	ldr	r3, [fp, #-124]	; 0xffffff84
   15990:	ldr	r2, [r4, #24]
   15994:	str	r3, [r4, #4]
   15998:	ldr	r3, [r4, #28]
   1599c:	sub	r3, r3, r2
   159a0:	ldr	r2, [r4, #16]
   159a4:	cmp	r3, r2
   159a8:	bls	159b4 <argp_failure@@Base+0xbd0>
   159ac:	mov	r0, r4
   159b0:	bl	16c18 <argp_error@@Base+0xbf0>
   159b4:	ldr	r3, [fp, #-128]	; 0xffffff80
   159b8:	str	r3, [r4, #12]
   159bc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   159c0:	add	r3, r3, #28
   159c4:	str	r3, [fp, #-100]	; 0xffffff9c
   159c8:	ldr	r3, [fp, #-116]	; 0xffffff8c
   159cc:	sub	r3, r3, #1
   159d0:	b	15584 <argp_failure@@Base+0x7a0>
   159d4:	mov	r3, #1
   159d8:	b	1581c <argp_failure@@Base+0xa38>
   159dc:	ldr	r2, [r6, #12]
   159e0:	tst	r2, #8
   159e4:	str	r2, [fp, #-136]	; 0xffffff78
   159e8:	bne	15a20 <argp_failure@@Base+0xc3c>
   159ec:	ldr	r3, [r6, #4]
   159f0:	sub	r1, r3, #1
   159f4:	cmp	r1, #254	; 0xfe
   159f8:	str	r3, [fp, #-132]	; 0xffffff7c
   159fc:	bhi	15a20 <argp_failure@@Base+0xc3c>
   15a00:	bl	1113c <__ctype_b_loc@plt>
   15a04:	ldr	r3, [fp, #-132]	; 0xffffff7c
   15a08:	ldr	r2, [fp, #-136]	; 0xffffff78
   15a0c:	lsl	r1, r3, #1
   15a10:	ldr	r0, [r0]
   15a14:	ldrh	r1, [r0, r1]
   15a18:	tst	r1, #16384	; 0x4000
   15a1c:	bne	15e50 <argp_failure@@Base+0x106c>
   15a20:	add	r6, r6, #24
   15a24:	sub	r8, r8, #1
   15a28:	b	15888 <argp_failure@@Base+0xaa4>
   15a2c:	mov	r1, #1
   15a30:	mov	r0, r4
   15a34:	bl	17068 <argp_error@@Base+0x1040>
   15a38:	cmp	r0, #0
   15a3c:	bne	15e80 <argp_failure@@Base+0x109c>
   15a40:	b	15e94 <argp_failure@@Base+0x10b0>
   15a44:	mov	r1, #1
   15a48:	mov	r0, r4
   15a4c:	str	r2, [fp, #-132]	; 0xffffff7c
   15a50:	bl	17068 <argp_error@@Base+0x1040>
   15a54:	ldr	r2, [fp, #-132]	; 0xffffff7c
   15a58:	cmp	r0, #0
   15a5c:	bne	15ea8 <argp_failure@@Base+0x10c4>
   15a60:	b	15eb8 <argp_failure@@Base+0x10d4>
   15a64:	ldr	r3, [r5, #8]
   15a68:	cmp	r3, #0
   15a6c:	movne	r3, #1
   15a70:	strne	r3, [fp, #-80]	; 0xffffffb0
   15a74:	b	15ef4 <argp_failure@@Base+0x1110>
   15a78:	ldr	r3, [r6, #-24]	; 0xffffffe8
   15a7c:	cmp	r3, #0
   15a80:	beq	15ae4 <argp_failure@@Base+0xd00>
   15a84:	ldr	r3, [r6, #-12]
   15a88:	tst	r3, #2
   15a8c:	bne	15ae4 <argp_failure@@Base+0xd00>
   15a90:	ldr	r3, [pc, #1124]	; 15efc <argp_failure@@Base+0x1118>
   15a94:	sub	r1, fp, #76	; 0x4c
   15a98:	ldr	r0, [r3, #16]
   15a9c:	bl	13984 <argp_parse@@Base+0x1578>
   15aa0:	ldr	r8, [r6, #-24]	; 0xffffffe8
   15aa4:	mov	r0, r8
   15aa8:	bl	11154 <strlen@plt>
   15aac:	subs	r9, r0, #0
   15ab0:	beq	15ae4 <argp_failure@@Base+0xd00>
   15ab4:	ldr	r3, [r4, #28]
   15ab8:	ldr	r2, [r4, #32]
   15abc:	add	r3, r3, r9
   15ac0:	cmp	r2, r3
   15ac4:	bcc	15af0 <argp_failure@@Base+0xd0c>
   15ac8:	mov	r2, r9
   15acc:	mov	r1, r8
   15ad0:	ldr	r0, [r4, #28]
   15ad4:	bl	11064 <memcpy@plt>
   15ad8:	ldr	r3, [r4, #28]
   15adc:	add	r9, r3, r9
   15ae0:	str	r9, [r4, #28]
   15ae4:	sub	r7, r7, #1
   15ae8:	add	r6, r6, #24
   15aec:	b	158d4 <argp_failure@@Base+0xaf0>
   15af0:	mov	r1, r9
   15af4:	mov	r0, r4
   15af8:	bl	17068 <argp_error@@Base+0x1040>
   15afc:	cmp	r0, #0
   15b00:	bne	15ac8 <argp_failure@@Base+0xce4>
   15b04:	b	15ae4 <argp_failure@@Base+0xd00>
   15b08:	sub	r3, r3, r2
   15b0c:	ldr	r2, [r4, #16]
   15b10:	ldr	r6, [r1, #12]
   15b14:	cmp	r3, r2
   15b18:	bls	15b24 <argp_failure@@Base+0xd40>
   15b1c:	mov	r0, r4
   15b20:	bl	16c18 <argp_error@@Base+0xbf0>
   15b24:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15b28:	str	r6, [r4, #12]
   15b2c:	ldr	r7, [pc, #968]	; 15efc <argp_failure@@Base+0x1118>
   15b30:	ldr	r6, [r3, #4]
   15b34:	ldr	r8, [pc, #1044]	; 15f50 <argp_failure@@Base+0x116c>
   15b38:	add	r9, r5, #24
   15b3c:	cmp	r6, #0
   15b40:	beq	158dc <argp_failure@@Base+0xaf8>
   15b44:	ldr	r3, [r9, #-24]	; 0xffffffe8
   15b48:	cmp	r3, #0
   15b4c:	beq	15b9c <argp_failure@@Base+0xdb8>
   15b50:	ldr	r3, [r9, #-12]
   15b54:	tst	r3, #2
   15b58:	bne	15b9c <argp_failure@@Base+0xdb8>
   15b5c:	sub	r1, fp, #76	; 0x4c
   15b60:	ldr	r0, [r7, #12]
   15b64:	bl	13984 <argp_parse@@Base+0x1578>
   15b68:	ldr	r2, [r9, #-24]	; 0xffffffe8
   15b6c:	mov	r1, r8
   15b70:	mov	r0, r4
   15b74:	bl	1714c <argp_error@@Base+0x1124>
   15b78:	ldr	r2, [r5, #8]
   15b7c:	cmp	r2, #0
   15b80:	beq	15b9c <argp_failure@@Base+0xdb8>
   15b84:	ldr	r3, [r5, #12]
   15b88:	mov	r0, r4
   15b8c:	tst	r3, #1
   15b90:	ldrne	r1, [pc, #956]	; 15f54 <argp_failure@@Base+0x1170>
   15b94:	ldreq	r1, [pc, #956]	; 15f58 <argp_failure@@Base+0x1174>
   15b98:	bl	1714c <argp_error@@Base+0x1124>
   15b9c:	sub	r6, r6, #1
   15ba0:	add	r9, r9, #24
   15ba4:	b	15b3c <argp_failure@@Base+0xd58>
   15ba8:	ldr	r2, [fp, #-100]	; 0xffffff9c
   15bac:	ldr	r6, [r5, #16]
   15bb0:	ldr	r1, [r5, #4]
   15bb4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15bb8:	ldr	r2, [r2, #20]
   15bbc:	mov	r0, r6
   15bc0:	bl	13768 <argp_parse@@Base+0x135c>
   15bc4:	subs	r5, r0, #0
   15bc8:	beq	15cdc <argp_failure@@Base+0xef8>
   15bcc:	ldrb	r3, [r5]
   15bd0:	cmp	r3, #0
   15bd4:	beq	15ccc <argp_failure@@Base+0xee8>
   15bd8:	ldr	r2, [r4, #24]
   15bdc:	ldr	r3, [r4, #28]
   15be0:	sub	r3, r3, r2
   15be4:	ldr	r2, [r4, #16]
   15be8:	cmp	r3, r2
   15bec:	bls	15bf8 <argp_failure@@Base+0xe14>
   15bf0:	mov	r0, r4
   15bf4:	bl	16c18 <argp_error@@Base+0xbf0>
   15bf8:	ldr	r2, [r4, #24]
   15bfc:	ldr	r3, [r4, #28]
   15c00:	ldr	r7, [r4, #20]
   15c04:	sub	r3, r3, r2
   15c08:	ldr	r8, [pc, #748]	; 15efc <argp_failure@@Base+0x1118>
   15c0c:	ldr	r2, [r4, #16]
   15c10:	bic	r7, r7, r7, asr #31
   15c14:	cmp	r3, r2
   15c18:	ldr	r9, [r8, #20]
   15c1c:	bls	15c28 <argp_failure@@Base+0xe44>
   15c20:	mov	r0, r4
   15c24:	bl	16c18 <argp_error@@Base+0xbf0>
   15c28:	ldr	r2, [r4, #24]
   15c2c:	ldr	r3, [r4, #28]
   15c30:	str	r9, [r4, #4]
   15c34:	sub	r3, r3, r2
   15c38:	ldr	r2, [r4, #16]
   15c3c:	ldr	r8, [r8, #20]
   15c40:	cmp	r3, r2
   15c44:	bls	15c50 <argp_failure@@Base+0xe6c>
   15c48:	mov	r0, r4
   15c4c:	bl	16c18 <argp_error@@Base+0xbf0>
   15c50:	ldr	r3, [pc, #676]	; 15efc <argp_failure@@Base+0x1118>
   15c54:	str	r8, [r4, #12]
   15c58:	ldr	r1, [r3, #20]
   15c5c:	add	r3, r1, #3
   15c60:	cmp	r7, r3
   15c64:	bls	15d44 <argp_failure@@Base+0xf60>
   15c68:	ldr	r2, [r4, #28]
   15c6c:	ldr	r3, [r4, #32]
   15c70:	cmp	r2, r3
   15c74:	bcs	15d2c <argp_failure@@Base+0xf48>
   15c78:	ldr	r3, [r4, #28]
   15c7c:	add	r2, r3, #1
   15c80:	str	r2, [r4, #28]
   15c84:	mov	r2, #10
   15c88:	strb	r2, [r3]
   15c8c:	mov	r0, r5
   15c90:	bl	11154 <strlen@plt>
   15c94:	subs	r7, r0, #0
   15c98:	beq	15ccc <argp_failure@@Base+0xee8>
   15c9c:	ldr	r3, [r4, #28]
   15ca0:	ldr	r2, [r4, #32]
   15ca4:	add	r3, r3, r7
   15ca8:	cmp	r2, r3
   15cac:	bcc	15dac <argp_failure@@Base+0xfc8>
   15cb0:	mov	r2, r7
   15cb4:	mov	r1, r5
   15cb8:	ldr	r0, [r4, #28]
   15cbc:	bl	11064 <memcpy@plt>
   15cc0:	ldr	r3, [r4, #28]
   15cc4:	add	r7, r3, r7
   15cc8:	str	r7, [r4, #28]
   15ccc:	cmp	r6, r5
   15cd0:	beq	15cdc <argp_failure@@Base+0xef8>
   15cd4:	mov	r0, r5
   15cd8:	bl	12ea8 <argp_parse@@Base+0xa9c>
   15cdc:	ldr	r2, [r4, #24]
   15ce0:	ldr	r3, [r4, #28]
   15ce4:	sub	r3, r3, r2
   15ce8:	ldr	r2, [r4, #16]
   15cec:	cmp	r3, r2
   15cf0:	bls	15cfc <argp_failure@@Base+0xf18>
   15cf4:	mov	r0, r4
   15cf8:	bl	16c18 <argp_error@@Base+0xbf0>
   15cfc:	mov	r3, #0
   15d00:	str	r3, [r4, #4]
   15d04:	ldr	r2, [r4, #28]
   15d08:	ldr	r3, [r4, #32]
   15d0c:	cmp	r2, r3
   15d10:	bcs	15dc4 <argp_failure@@Base+0xfe0>
   15d14:	ldr	r3, [r4, #28]
   15d18:	add	r2, r3, #1
   15d1c:	str	r2, [r4, #28]
   15d20:	mov	r2, #10
   15d24:	strb	r2, [r3]
   15d28:	b	15964 <argp_failure@@Base+0xb80>
   15d2c:	mov	r1, #1
   15d30:	mov	r0, r4
   15d34:	bl	17068 <argp_error@@Base+0x1040>
   15d38:	cmp	r0, #0
   15d3c:	bne	15c78 <argp_failure@@Base+0xe94>
   15d40:	b	15c8c <argp_failure@@Base+0xea8>
   15d44:	cmp	r7, r1
   15d48:	bcc	15da0 <argp_failure@@Base+0xfbc>
   15d4c:	ldr	r3, [r4, #28]
   15d50:	ldr	r2, [r4, #32]
   15d54:	add	r3, r3, #3
   15d58:	cmp	r2, r3
   15d5c:	bcc	15d88 <argp_failure@@Base+0xfa4>
   15d60:	ldr	r2, [pc, #500]	; 15f5c <argp_failure@@Base+0x1178>
   15d64:	ldr	r3, [r4, #28]
   15d68:	ldrh	r1, [r2]
   15d6c:	ldrb	r2, [r2, #2]
   15d70:	strh	r1, [r3]
   15d74:	strb	r2, [r3, #2]
   15d78:	ldr	r3, [r4, #28]
   15d7c:	add	r3, r3, #3
   15d80:	str	r3, [r4, #28]
   15d84:	b	15c8c <argp_failure@@Base+0xea8>
   15d88:	mov	r1, #3
   15d8c:	mov	r0, r4
   15d90:	bl	17068 <argp_error@@Base+0x1040>
   15d94:	cmp	r0, #0
   15d98:	bne	15d60 <argp_failure@@Base+0xf7c>
   15d9c:	b	15c8c <argp_failure@@Base+0xea8>
   15da0:	mov	r0, r4
   15da4:	bl	136e0 <argp_parse@@Base+0x12d4>
   15da8:	b	15c8c <argp_failure@@Base+0xea8>
   15dac:	mov	r1, r7
   15db0:	mov	r0, r4
   15db4:	bl	17068 <argp_error@@Base+0x1040>
   15db8:	cmp	r0, #0
   15dbc:	bne	15cb0 <argp_failure@@Base+0xecc>
   15dc0:	b	15ccc <argp_failure@@Base+0xee8>
   15dc4:	mov	r1, #1
   15dc8:	mov	r0, r4
   15dcc:	bl	17068 <argp_error@@Base+0x1040>
   15dd0:	cmp	r0, #0
   15dd4:	bne	15d14 <argp_failure@@Base+0xf30>
   15dd8:	b	15964 <argp_failure@@Base+0xb80>
   15ddc:	mov	r1, #1
   15de0:	mov	r0, r4
   15de4:	bl	17068 <argp_error@@Base+0x1040>
   15de8:	cmp	r0, #0
   15dec:	bne	155f4 <argp_failure@@Base+0x810>
   15df0:	b	15608 <argp_failure@@Base+0x824>
   15df4:	mov	r1, r6
   15df8:	mov	r0, r4
   15dfc:	bl	17068 <argp_error@@Base+0x1040>
   15e00:	cmp	r0, #0
   15e04:	bne	1562c <argp_failure@@Base+0x848>
   15e08:	b	15648 <argp_failure@@Base+0x864>
   15e0c:	mov	r1, #1
   15e10:	mov	r0, r4
   15e14:	bl	17068 <argp_error@@Base+0x1040>
   15e18:	cmp	r0, #0
   15e1c:	bne	15658 <argp_failure@@Base+0x874>
   15e20:	b	1566c <argp_failure@@Base+0x888>
   15e24:	mov	r1, #1
   15e28:	mov	r0, r4
   15e2c:	bl	17068 <argp_error@@Base+0x1040>
   15e30:	cmp	r0, #0
   15e34:	bne	156ec <argp_failure@@Base+0x908>
   15e38:	b	15700 <argp_failure@@Base+0x91c>
   15e3c:	cmp	r0, #110	; 0x6e
   15e40:	beq	1515c <argp_failure@@Base+0x378>
   15e44:	mov	sl, r5
   15e48:	mov	r7, r5
   15e4c:	b	15188 <argp_failure@@Base+0x3a4>
   15e50:	ldrb	r1, [r9]
   15e54:	cmp	r3, r1
   15e58:	bne	15a20 <argp_failure@@Base+0xc3c>
   15e5c:	tst	r2, #2
   15e60:	bne	15ef4 <argp_failure@@Base+0x1110>
   15e64:	sub	r1, fp, #76	; 0x4c
   15e68:	ldr	r0, [r7, #8]
   15e6c:	bl	13984 <argp_parse@@Base+0x1578>
   15e70:	ldr	r2, [r4, #28]
   15e74:	ldr	r3, [r4, #32]
   15e78:	cmp	r2, r3
   15e7c:	bcs	15a2c <argp_failure@@Base+0xc48>
   15e80:	ldr	r3, [r4, #28]
   15e84:	add	r2, r3, #1
   15e88:	str	r2, [r4, #28]
   15e8c:	mov	r2, #45	; 0x2d
   15e90:	strb	r2, [r3]
   15e94:	ldr	r1, [r4, #28]
   15e98:	ldr	r3, [r4, #32]
   15e9c:	ldrb	r2, [r9]
   15ea0:	cmp	r1, r3
   15ea4:	bcs	15a44 <argp_failure@@Base+0xc60>
   15ea8:	ldr	r3, [r4, #28]
   15eac:	add	r1, r3, #1
   15eb0:	str	r1, [r4, #28]
   15eb4:	strb	r2, [r3]
   15eb8:	ldr	r3, [fp, #-120]	; 0xffffff88
   15ebc:	cmp	r3, #0
   15ec0:	beq	15ed0 <argp_failure@@Base+0x10ec>
   15ec4:	ldr	r3, [r7]
   15ec8:	cmp	r3, #0
   15ecc:	beq	15a64 <argp_failure@@Base+0xc80>
   15ed0:	ldr	r2, [r5, #8]
   15ed4:	cmp	r2, #0
   15ed8:	beq	15ef4 <argp_failure@@Base+0x1110>
   15edc:	ldr	r3, [r5, #12]
   15ee0:	mov	r0, r4
   15ee4:	tst	r3, #1
   15ee8:	ldrne	r1, [pc, #112]	; 15f60 <argp_failure@@Base+0x117c>
   15eec:	ldreq	r1, [pc, #112]	; 15f64 <argp_failure@@Base+0x1180>
   15ef0:	bl	1714c <argp_error@@Base+0x1124>
   15ef4:	add	r9, r9, #1
   15ef8:	b	15a20 <argp_failure@@Base+0xc3c>
   15efc:	andeq	r9, r2, r0, lsr r2
   15f00:	strdeq	r7, [r1], -r5
   15f04:	andeq	r7, r1, r8, asr sp
   15f08:	andeq	r7, r1, sp, ror fp
   15f0c:	andeq	r7, r1, r9, lsr #27
   15f10:	andeq	r7, r1, r5, ror sp
   15f14:	andeq	r7, r1, r3, lsl #26
   15f18:	andeq	r7, r1, sp, lsl #24
   15f1c:	andeq	r7, r1, r2, lsr sp
   15f20:	andeq	r7, r1, r3, asr #14
   15f24:	andeq	r7, r1, fp, lsr r7
   15f28:	andeq	r4, r1, ip, lsr fp
   15f2c:	andeq	r7, r1, r5, asr #27
   15f30:			; <UNDEFINED> instruction: 0x00017db1
   15f34:			; <UNDEFINED> instruction: 0x00017dbe
   15f38:			; <UNDEFINED> instruction: 0x00017db8
   15f3c:	ldrdeq	r7, [r1], -r2
   15f40:	andeq	r0, r0, #5
   15f44:	andeq	r7, r1, r1, lsr #28
   15f48:	andeq	r9, r2, r0, asr #5
   15f4c:	muleq	r1, r5, lr
   15f50:	andeq	r7, r1, lr, lsl #28
   15f54:	andeq	r7, r1, r3, lsl lr
   15f58:	andeq	r7, r1, r9, lsl lr
   15f5c:	andeq	r7, r1, sp, lsl lr
   15f60:	andeq	r7, r1, r9, lsl #28
   15f64:	andeq	r7, r1, r1, ror sp

00015f68 <argp_help@@Base>:
   15f68:	push	{r0, r1, r2, lr}
   15f6c:	str	r3, [sp]
   15f70:	mov	r3, r2
   15f74:	mov	r2, r1
   15f78:	mov	r1, #0
   15f7c:	bl	14f34 <argp_failure@@Base+0x150>
   15f80:	add	sp, sp, #12
   15f84:	pop	{pc}		; (ldr pc, [sp], #4)

00015f88 <argp_state_help@@Base>:
   15f88:	push	{r0, r1, r2, r4, r5, lr}
   15f8c:	subs	r4, r0, #0
   15f90:	mov	r5, r2
   15f94:	beq	15fac <argp_state_help@@Base+0x24>
   15f98:	ldr	r3, [r4, #16]
   15f9c:	tst	r3, #2
   15fa0:	beq	15fc4 <argp_state_help@@Base+0x3c>
   15fa4:	add	sp, sp, #12
   15fa8:	pop	{r4, r5, pc}
   15fac:	cmp	r1, #0
   15fb0:	beq	15fa4 <argp_state_help@@Base+0x1c>
   15fb4:	ldr	r3, [pc, #100]	; 16020 <argp_state_help@@Base+0x98>
   15fb8:	mov	r0, r4
   15fbc:	ldr	r3, [r3]
   15fc0:	b	15fdc <argp_state_help@@Base+0x54>
   15fc4:	cmp	r1, #0
   15fc8:	beq	15fa4 <argp_state_help@@Base+0x1c>
   15fcc:	tst	r3, #64	; 0x40
   15fd0:	ldr	r0, [r4]
   15fd4:	ldr	r3, [r4, #40]	; 0x28
   15fd8:	orrne	r5, r5, #128	; 0x80
   15fdc:	str	r3, [sp]
   15fe0:	mov	r2, r1
   15fe4:	mov	r3, r5
   15fe8:	mov	r1, r4
   15fec:	bl	14f34 <argp_failure@@Base+0x150>
   15ff0:	cmp	r4, #0
   15ff4:	beq	16004 <argp_state_help@@Base+0x7c>
   15ff8:	ldr	r3, [r4, #16]
   15ffc:	tst	r3, #32
   16000:	bne	15fa4 <argp_state_help@@Base+0x1c>
   16004:	ands	r0, r5, #256	; 0x100
   16008:	ldrne	r3, [pc, #20]	; 16024 <argp_state_help@@Base+0x9c>
   1600c:	ldrne	r0, [r3]
   16010:	bne	1601c <argp_state_help@@Base+0x94>
   16014:	tst	r5, #512	; 0x200
   16018:	beq	15fa4 <argp_state_help@@Base+0x1c>
   1601c:	bl	11148 <exit@plt>
   16020:	andeq	r9, r2, r8, ror #4
   16024:	andeq	r9, r2, r4, ror #4

00016028 <argp_error@@Base>:
   16028:	push	{r1, r2, r3}
   1602c:	push	{r0, r1, r4, r5, lr}
   16030:	subs	r5, r0, #0
   16034:	beq	16060 <argp_error@@Base+0x38>
   16038:	ldr	r3, [r5, #16]
   1603c:	tst	r3, #2
   16040:	bne	16050 <argp_error@@Base+0x28>
   16044:	ldr	r4, [r5, #44]	; 0x2c
   16048:	cmp	r4, #0
   1604c:	bne	1608c <argp_error@@Base+0x64>
   16050:	add	sp, sp, #8
   16054:	pop	{r4, r5, lr}
   16058:	add	sp, sp, #12
   1605c:	bx	lr
   16060:	ldr	r3, [pc, #144]	; 160f8 <argp_error@@Base+0xd0>
   16064:	ldr	r4, [r3]
   16068:	cmp	r4, #0
   1606c:	beq	16050 <argp_error@@Base+0x28>
   16070:	mov	r0, r4
   16074:	bl	11214 <flockfile@plt>
   16078:	add	r3, sp, #24
   1607c:	str	r3, [sp, #4]
   16080:	ldr	r3, [pc, #116]	; 160fc <argp_error@@Base+0xd4>
   16084:	ldr	r0, [r3]
   16088:	b	160a0 <argp_error@@Base+0x78>
   1608c:	mov	r0, r4
   16090:	bl	11214 <flockfile@plt>
   16094:	ldr	r0, [r5, #40]	; 0x28
   16098:	add	r3, sp, #24
   1609c:	str	r3, [sp, #4]
   160a0:	mov	r1, r4
   160a4:	bl	10fe0 <fputs_unlocked@plt>
   160a8:	mov	r1, r4
   160ac:	mov	r0, #58	; 0x3a
   160b0:	bl	112c8 <putc_unlocked@plt>
   160b4:	mov	r1, r4
   160b8:	mov	r0, #32
   160bc:	bl	112c8 <putc_unlocked@plt>
   160c0:	ldr	r2, [sp, #4]
   160c4:	ldr	r1, [sp, #20]
   160c8:	mov	r0, r4
   160cc:	bl	111f0 <vfprintf@plt>
   160d0:	mov	r1, r4
   160d4:	mov	r0, #10
   160d8:	bl	112c8 <putc_unlocked@plt>
   160dc:	mov	r0, r5
   160e0:	mov	r2, #260	; 0x104
   160e4:	mov	r1, r4
   160e8:	bl	15f88 <argp_state_help@@Base>
   160ec:	mov	r0, r4
   160f0:	bl	110b8 <funlockfile@plt>
   160f4:	b	16050 <argp_error@@Base+0x28>
   160f8:	andeq	r9, r2, r0, ror r2
   160fc:	andeq	r9, r2, r8, ror #4
   16100:	ldr	r3, [r1, #32]
   16104:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16108:	ldr	r7, [r1, #28]
   1610c:	ldr	r6, [r1]
   16110:	add	r8, r0, r3, lsl #2
   16114:	mov	lr, r6
   16118:	mov	r4, r7
   1611c:	cmp	lr, r3
   16120:	movle	r2, #0
   16124:	movgt	r2, #1
   16128:	cmp	r4, r3
   1612c:	movge	r2, #0
   16130:	cmp	r2, #0
   16134:	bne	1614c <argp_error@@Base+0x124>
   16138:	sub	r3, r6, r3
   1613c:	add	r3, r3, r7
   16140:	str	r3, [r1, #28]
   16144:	str	r6, [r1, #32]
   16148:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1614c:	sub	r2, r3, r4
   16150:	sub	r5, lr, r3
   16154:	cmp	r5, r2
   16158:	lsl	ip, r4, #2
   1615c:	addle	r2, r0, ip
   16160:	movle	r9, r8
   16164:	movle	ip, #0
   16168:	ble	1619c <argp_error@@Base+0x174>
   1616c:	sub	r2, lr, r2
   16170:	add	ip, r0, ip
   16174:	add	r5, r0, r2, lsl #2
   16178:	add	lr, r0, lr, lsl #2
   1617c:	ldr	r9, [ip]
   16180:	ldr	sl, [r5]
   16184:	str	sl, [ip], #4
   16188:	str	r9, [r5], #4
   1618c:	cmp	lr, r5
   16190:	bne	1617c <argp_error@@Base+0x154>
   16194:	mov	lr, r2
   16198:	b	1611c <argp_error@@Base+0xf4>
   1619c:	ldr	sl, [r2]
   161a0:	ldr	fp, [r9]
   161a4:	add	ip, ip, #1
   161a8:	cmp	r5, ip
   161ac:	str	fp, [r2], #4
   161b0:	str	sl, [r9], #4
   161b4:	bgt	1619c <argp_error@@Base+0x174>
   161b8:	add	r4, r4, r5
   161bc:	mov	r2, lr
   161c0:	b	16194 <argp_error@@Base+0x16c>
   161c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   161c8:	sub	sp, sp, #44	; 0x2c
   161cc:	mov	sl, r1
   161d0:	ldr	r4, [sp, #88]	; 0x58
   161d4:	str	r0, [sp, #36]	; 0x24
   161d8:	str	r2, [sp, #32]
   161dc:	ldr	r8, [r4, #20]
   161e0:	str	r3, [sp, #20]
   161e4:	mov	r9, r8
   161e8:	mov	r3, r9
   161ec:	ldrb	r6, [r3], #1
   161f0:	cmp	r6, #0
   161f4:	cmpne	r6, #61	; 0x3d
   161f8:	movne	r6, #1
   161fc:	moveq	r6, #0
   16200:	bne	162c8 <argp_error@@Base+0x2a0>
   16204:	sub	r3, r9, r8
   16208:	str	r3, [sp, #24]
   1620c:	ldr	r3, [sp, #20]
   16210:	add	r7, r3, r6, lsl #4
   16214:	ldr	r5, [r3, r6, lsl #4]
   16218:	cmp	r5, #0
   1621c:	bne	162d0 <argp_error@@Base+0x2a8>
   16220:	mov	r8, r5
   16224:	mov	r7, r5
   16228:	mov	fp, r3
   1622c:	mvn	r3, #0
   16230:	str	r3, [sp, #16]
   16234:	str	r5, [sp, #28]
   16238:	str	r5, [sp, #12]
   1623c:	ldr	r0, [fp]
   16240:	cmp	r0, #0
   16244:	bne	16304 <argp_error@@Base+0x2dc>
   16248:	cmp	r5, #0
   1624c:	cmpeq	r8, #0
   16250:	beq	1643c <argp_error@@Base+0x414>
   16254:	ldr	r3, [sp, #92]	; 0x5c
   16258:	cmp	r3, #0
   1625c:	beq	16288 <argp_error@@Base+0x260>
   16260:	cmp	r5, #0
   16264:	ldr	r7, [pc, #908]	; 165f8 <argp_error@@Base+0x5d0>
   16268:	beq	163c8 <argp_error@@Base+0x3a0>
   1626c:	ldr	r3, [r4, #20]
   16270:	ldr	r2, [sl]
   16274:	str	r3, [sp]
   16278:	ldr	r1, [pc, #892]	; 165fc <argp_error@@Base+0x5d4>
   1627c:	ldr	r3, [sp, #96]	; 0x60
   16280:	ldr	r0, [r7]
   16284:	bl	1116c <fprintf@plt>
   16288:	ldr	r3, [sp, #28]
   1628c:	cmp	r3, #0
   16290:	beq	1629c <argp_error@@Base+0x274>
   16294:	mov	r0, r8
   16298:	bl	12ea8 <argp_parse@@Base+0xa9c>
   1629c:	ldr	r5, [r4, #20]
   162a0:	mov	r0, r5
   162a4:	bl	11154 <strlen@plt>
   162a8:	ldr	r3, [r4]
   162ac:	add	r3, r3, #1
   162b0:	str	r3, [r4]
   162b4:	mov	r3, #0
   162b8:	add	r0, r5, r0
   162bc:	str	r0, [r4, #20]
   162c0:	str	r3, [r4, #8]
   162c4:	b	164c4 <argp_error@@Base+0x49c>
   162c8:	mov	r9, r3
   162cc:	b	161e8 <argp_error@@Base+0x1c0>
   162d0:	ldr	r2, [sp, #24]
   162d4:	mov	r1, r8
   162d8:	mov	r0, r5
   162dc:	bl	11280 <strncmp@plt>
   162e0:	cmp	r0, #0
   162e4:	bne	162fc <argp_error@@Base+0x2d4>
   162e8:	mov	r0, r5
   162ec:	bl	11154 <strlen@plt>
   162f0:	ldr	r3, [sp, #24]
   162f4:	cmp	r3, r0
   162f8:	beq	164d0 <argp_error@@Base+0x4a8>
   162fc:	add	r6, r6, #1
   16300:	b	1620c <argp_error@@Base+0x1e4>
   16304:	ldr	r2, [sp, #24]
   16308:	ldr	r1, [r4, #20]
   1630c:	bl	11280 <strncmp@plt>
   16310:	cmp	r0, #0
   16314:	bne	163b4 <argp_error@@Base+0x38c>
   16318:	cmp	r7, #0
   1631c:	moveq	r7, fp
   16320:	ldreq	r3, [sp, #12]
   16324:	streq	r3, [sp, #16]
   16328:	beq	163b4 <argp_error@@Base+0x38c>
   1632c:	ldr	r3, [sp, #84]	; 0x54
   16330:	cmp	r3, #0
   16334:	bne	16368 <argp_error@@Base+0x340>
   16338:	ldr	r1, [r7, #4]
   1633c:	ldr	r2, [fp, #4]
   16340:	cmp	r1, r2
   16344:	bne	16368 <argp_error@@Base+0x340>
   16348:	ldr	r1, [r7, #8]
   1634c:	ldr	r2, [fp, #8]
   16350:	cmp	r1, r2
   16354:	bne	16368 <argp_error@@Base+0x340>
   16358:	ldr	r1, [r7, #12]
   1635c:	ldr	r2, [fp, #12]
   16360:	cmp	r1, r2
   16364:	beq	163b4 <argp_error@@Base+0x38c>
   16368:	cmp	r5, #0
   1636c:	bne	163b4 <argp_error@@Base+0x38c>
   16370:	ldr	r3, [sp, #92]	; 0x5c
   16374:	cmp	r3, #0
   16378:	beq	1639c <argp_error@@Base+0x374>
   1637c:	cmp	r8, #0
   16380:	bne	163a8 <argp_error@@Base+0x380>
   16384:	mov	r0, r6
   16388:	bl	13428 <argp_parse@@Base+0x101c>
   1638c:	subs	r8, r0, #0
   16390:	bne	165d4 <argp_error@@Base+0x5ac>
   16394:	mov	r5, #1
   16398:	b	163b4 <argp_error@@Base+0x38c>
   1639c:	cmp	r8, #0
   163a0:	mov	r5, #1
   163a4:	beq	163b4 <argp_error@@Base+0x38c>
   163a8:	ldr	r3, [sp, #12]
   163ac:	mov	r2, #1
   163b0:	strb	r2, [r8, r3]
   163b4:	ldr	r3, [sp, #12]
   163b8:	add	fp, fp, #16
   163bc:	add	r3, r3, #1
   163c0:	str	r3, [sp, #12]
   163c4:	b	1623c <argp_error@@Base+0x214>
   163c8:	ldr	r0, [r7]
   163cc:	bl	11214 <flockfile@plt>
   163d0:	ldr	r3, [r4, #20]
   163d4:	ldr	r2, [sl]
   163d8:	str	r3, [sp]
   163dc:	ldr	r1, [pc, #540]	; 16600 <argp_error@@Base+0x5d8>
   163e0:	ldr	r3, [sp, #96]	; 0x60
   163e4:	ldr	r0, [r7]
   163e8:	bl	1116c <fprintf@plt>
   163ec:	ldr	r9, [pc, #528]	; 16604 <argp_error@@Base+0x5dc>
   163f0:	cmp	r6, r5
   163f4:	bne	16410 <argp_error@@Base+0x3e8>
   163f8:	ldr	r1, [r7]
   163fc:	mov	r0, #10
   16400:	bl	111fc <fputc@plt>
   16404:	ldr	r0, [r7]
   16408:	bl	110b8 <funlockfile@plt>
   1640c:	b	16288 <argp_error@@Base+0x260>
   16410:	ldrb	r3, [r8, r5]
   16414:	cmp	r3, #0
   16418:	beq	16434 <argp_error@@Base+0x40c>
   1641c:	ldr	r3, [sp, #20]
   16420:	ldr	r2, [sp, #96]	; 0x60
   16424:	mov	r1, r9
   16428:	ldr	r3, [r3, r5, lsl #4]
   1642c:	ldr	r0, [r7]
   16430:	bl	1116c <fprintf@plt>
   16434:	add	r5, r5, #1
   16438:	b	163f0 <argp_error@@Base+0x3c8>
   1643c:	cmp	r7, #0
   16440:	bne	164d4 <argp_error@@Base+0x4ac>
   16444:	ldr	r3, [sp, #84]	; 0x54
   16448:	cmp	r3, #0
   1644c:	beq	16480 <argp_error@@Base+0x458>
   16450:	ldr	r3, [r4]
   16454:	ldr	r3, [sl, r3, lsl #2]
   16458:	ldrb	r3, [r3, #1]
   1645c:	cmp	r3, #45	; 0x2d
   16460:	beq	16480 <argp_error@@Base+0x458>
   16464:	ldr	r3, [r4, #20]
   16468:	ldr	r0, [sp, #32]
   1646c:	ldrb	r1, [r3]
   16470:	bl	11160 <strchr@plt>
   16474:	cmp	r0, #0
   16478:	mvnne	r0, #0
   1647c:	bne	164c8 <argp_error@@Base+0x4a0>
   16480:	ldr	r3, [sp, #92]	; 0x5c
   16484:	cmp	r3, #0
   16488:	beq	164ac <argp_error@@Base+0x484>
   1648c:	ldr	r0, [pc, #356]	; 165f8 <argp_error@@Base+0x5d0>
   16490:	ldr	r3, [r4, #20]
   16494:	ldr	r2, [sl]
   16498:	str	r3, [sp]
   1649c:	ldr	r1, [pc, #356]	; 16608 <argp_error@@Base+0x5e0>
   164a0:	ldr	r3, [sp, #96]	; 0x60
   164a4:	ldr	r0, [r0]
   164a8:	bl	1116c <fprintf@plt>
   164ac:	ldr	r3, [r4]
   164b0:	mov	r2, #0
   164b4:	add	r3, r3, #1
   164b8:	str	r2, [r4, #20]
   164bc:	str	r3, [r4]
   164c0:	str	r2, [r4, #8]
   164c4:	mov	r0, #63	; 0x3f
   164c8:	add	sp, sp, #44	; 0x2c
   164cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   164d0:	str	r6, [sp, #16]
   164d4:	ldr	r3, [r4]
   164d8:	mov	r1, #0
   164dc:	add	r2, r3, #1
   164e0:	str	r2, [r4]
   164e4:	str	r1, [r4, #20]
   164e8:	ldrb	r1, [r9]
   164ec:	cmp	r1, #0
   164f0:	ldr	r1, [r7, #4]
   164f4:	beq	1653c <argp_error@@Base+0x514>
   164f8:	cmp	r1, #0
   164fc:	addne	r9, r9, #1
   16500:	strne	r9, [r4, #12]
   16504:	bne	16560 <argp_error@@Base+0x538>
   16508:	ldr	r3, [sp, #92]	; 0x5c
   1650c:	cmp	r3, #0
   16510:	beq	16534 <argp_error@@Base+0x50c>
   16514:	ldr	r0, [pc, #220]	; 165f8 <argp_error@@Base+0x5d0>
   16518:	ldr	r3, [r7]
   1651c:	ldr	r2, [sl]
   16520:	str	r3, [sp]
   16524:	ldr	r1, [pc, #224]	; 1660c <argp_error@@Base+0x5e4>
   16528:	ldr	r3, [sp, #96]	; 0x60
   1652c:	ldr	r0, [r0]
   16530:	bl	1116c <fprintf@plt>
   16534:	ldr	r3, [r7, #12]
   16538:	b	162c0 <argp_error@@Base+0x298>
   1653c:	cmp	r1, #1
   16540:	bne	16560 <argp_error@@Base+0x538>
   16544:	ldr	r1, [sp, #36]	; 0x24
   16548:	cmp	r2, r1
   1654c:	bge	16588 <argp_error@@Base+0x560>
   16550:	add	r3, r3, #2
   16554:	str	r3, [r4]
   16558:	ldr	r3, [sl, r2, lsl #2]
   1655c:	str	r3, [r4, #12]
   16560:	ldr	r3, [sp, #80]	; 0x50
   16564:	cmp	r3, #0
   16568:	ldrne	r2, [sp, #16]
   1656c:	strne	r2, [r3]
   16570:	ldr	r3, [r7, #8]
   16574:	ldr	r0, [r7, #12]
   16578:	cmp	r3, #0
   1657c:	strne	r0, [r3]
   16580:	movne	r0, #0
   16584:	b	164c8 <argp_error@@Base+0x4a0>
   16588:	ldr	r3, [sp, #92]	; 0x5c
   1658c:	cmp	r3, #0
   16590:	beq	165b4 <argp_error@@Base+0x58c>
   16594:	ldr	r0, [pc, #92]	; 165f8 <argp_error@@Base+0x5d0>
   16598:	ldr	r3, [r7]
   1659c:	ldr	r2, [sl]
   165a0:	str	r3, [sp]
   165a4:	ldr	r1, [pc, #100]	; 16610 <argp_error@@Base+0x5e8>
   165a8:	ldr	r3, [sp, #96]	; 0x60
   165ac:	ldr	r0, [r0]
   165b0:	bl	1116c <fprintf@plt>
   165b4:	ldr	r3, [r7, #12]
   165b8:	str	r3, [r4, #8]
   165bc:	ldr	r3, [sp, #32]
   165c0:	ldrb	r0, [r3]
   165c4:	cmp	r0, #58	; 0x3a
   165c8:	moveq	r0, #58	; 0x3a
   165cc:	movne	r0, #63	; 0x3f
   165d0:	b	164c8 <argp_error@@Base+0x4a0>
   165d4:	mov	r2, r6
   165d8:	mov	r1, #0
   165dc:	bl	111a8 <memset@plt>
   165e0:	ldr	r3, [sp, #16]
   165e4:	mov	r2, #1
   165e8:	strb	r2, [r8, r3]
   165ec:	mov	r3, #1
   165f0:	str	r3, [sp, #28]
   165f4:	b	163a8 <argp_error@@Base+0x380>
   165f8:	andeq	r9, r2, r0, ror r2
   165fc:	andeq	r7, r1, r9, lsr #29
   16600:	andeq	r7, r1, r9, asr #29
   16604:	strdeq	r7, [r1], -r8
   16608:	andeq	r7, r1, r0, lsl #30
   1660c:	andeq	r7, r1, r0, lsr #30
   16610:	andeq	r7, r1, sp, asr #30
   16614:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16618:	sub	sp, sp, #36	; 0x24
   1661c:	subs	r8, r0, #0
   16620:	ldr	r4, [sp, #80]	; 0x50
   16624:	ldr	fp, [sp, #72]	; 0x48
   16628:	ldr	r5, [sp, #76]	; 0x4c
   1662c:	ldr	r9, [r4, #4]
   16630:	bgt	16640 <argp_error@@Base+0x618>
   16634:	mvn	r0, #0
   16638:	add	sp, sp, #36	; 0x24
   1663c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16640:	mov	sl, r3
   16644:	mov	r3, #0
   16648:	str	r3, [r4, #12]
   1664c:	ldr	r3, [r4]
   16650:	mov	r7, r1
   16654:	cmp	r3, #0
   16658:	mov	r6, r2
   1665c:	beq	16680 <argp_error@@Base+0x658>
   16660:	ldr	r3, [r4, #16]
   16664:	cmp	r3, #0
   16668:	beq	16688 <argp_error@@Base+0x660>
   1666c:	ldrb	r3, [r2]
   16670:	sub	r3, r3, #43	; 0x2b
   16674:	tst	r3, #253	; 0xfd
   16678:	addeq	r6, r2, #1
   1667c:	b	166c4 <argp_error@@Base+0x69c>
   16680:	mov	r3, #1
   16684:	str	r3, [r4]
   16688:	ldr	r3, [r4]
   1668c:	str	r3, [r4, #32]
   16690:	str	r3, [r4, #28]
   16694:	mov	r3, #0
   16698:	str	r3, [r4, #20]
   1669c:	ldrb	r2, [r6]
   166a0:	cmp	r2, #45	; 0x2d
   166a4:	moveq	r3, #2
   166a8:	beq	166b4 <argp_error@@Base+0x68c>
   166ac:	cmp	r2, #43	; 0x2b
   166b0:	bne	167c4 <argp_error@@Base+0x79c>
   166b4:	add	r6, r6, #1
   166b8:	str	r3, [r4, #24]
   166bc:	mov	r3, #1
   166c0:	str	r3, [r4, #16]
   166c4:	ldrb	r3, [r6]
   166c8:	cmp	r3, #58	; 0x3a
   166cc:	ldr	r3, [r4, #20]
   166d0:	moveq	r9, #0
   166d4:	cmp	r3, #0
   166d8:	beq	166e8 <argp_error@@Base+0x6c0>
   166dc:	ldrb	r3, [r3]
   166e0:	cmp	r3, #0
   166e4:	bne	1687c <argp_error@@Base+0x854>
   166e8:	ldr	r3, [r4]
   166ec:	ldr	r2, [r4, #32]
   166f0:	cmp	r2, r3
   166f4:	ldr	r2, [r4, #28]
   166f8:	strgt	r3, [r4, #32]
   166fc:	cmp	r3, r2
   16700:	ldr	r2, [r4, #24]
   16704:	strlt	r3, [r4, #28]
   16708:	cmp	r2, #1
   1670c:	bne	16744 <argp_error@@Base+0x71c>
   16710:	ldr	r1, [r4, #32]
   16714:	ldr	r2, [r4, #28]
   16718:	cmp	r2, r1
   1671c:	beq	167f4 <argp_error@@Base+0x7cc>
   16720:	cmp	r3, r1
   16724:	beq	16734 <argp_error@@Base+0x70c>
   16728:	mov	r1, r4
   1672c:	mov	r0, r7
   16730:	bl	16100 <argp_error@@Base+0xd8>
   16734:	ldr	r3, [r4]
   16738:	cmp	r8, r3
   1673c:	bgt	16800 <argp_error@@Base+0x7d8>
   16740:	str	r3, [r4, #32]
   16744:	ldr	r3, [r4]
   16748:	cmp	r8, r3
   1674c:	beq	167a4 <argp_error@@Base+0x77c>
   16750:	ldr	r1, [pc, #920]	; 16af0 <argp_error@@Base+0xac8>
   16754:	ldr	r0, [r7, r3, lsl #2]
   16758:	str	r3, [sp, #24]
   1675c:	bl	10fec <strcmp@plt>
   16760:	cmp	r0, #0
   16764:	bne	167a4 <argp_error@@Base+0x77c>
   16768:	ldr	r1, [r4, #28]
   1676c:	ldr	r3, [sp, #24]
   16770:	ldr	r2, [r4, #32]
   16774:	add	r3, r3, #1
   16778:	cmp	r1, r2
   1677c:	str	r3, [r4]
   16780:	streq	r3, [r4, #28]
   16784:	beq	1679c <argp_error@@Base+0x774>
   16788:	cmp	r3, r2
   1678c:	beq	1679c <argp_error@@Base+0x774>
   16790:	mov	r1, r4
   16794:	mov	r0, r7
   16798:	bl	16100 <argp_error@@Base+0xd8>
   1679c:	str	r8, [r4, #32]
   167a0:	str	r8, [r4]
   167a4:	ldr	r2, [r4]
   167a8:	cmp	r8, r2
   167ac:	bne	16828 <argp_error@@Base+0x800>
   167b0:	ldr	r3, [r4, #28]
   167b4:	ldr	r2, [r4, #32]
   167b8:	cmp	r3, r2
   167bc:	strne	r3, [r4]
   167c0:	b	16634 <argp_error@@Base+0x60c>
   167c4:	ldr	r3, [sp, #84]	; 0x54
   167c8:	cmp	r3, #0
   167cc:	beq	167dc <argp_error@@Base+0x7b4>
   167d0:	mov	r3, #0
   167d4:	str	r3, [r4, #24]
   167d8:	b	166bc <argp_error@@Base+0x694>
   167dc:	ldr	r0, [pc, #784]	; 16af4 <argp_error@@Base+0xacc>
   167e0:	bl	110e8 <getenv@plt>
   167e4:	cmp	r0, #0
   167e8:	bne	167d0 <argp_error@@Base+0x7a8>
   167ec:	mov	r3, #1
   167f0:	b	167d4 <argp_error@@Base+0x7ac>
   167f4:	cmp	r3, r2
   167f8:	strne	r3, [r4, #28]
   167fc:	b	16734 <argp_error@@Base+0x70c>
   16800:	ldr	r2, [r7, r3, lsl #2]
   16804:	ldrb	r1, [r2]
   16808:	cmp	r1, #45	; 0x2d
   1680c:	bne	1681c <argp_error@@Base+0x7f4>
   16810:	ldrb	r2, [r2, #1]
   16814:	cmp	r2, #0
   16818:	bne	16740 <argp_error@@Base+0x718>
   1681c:	add	r3, r3, #1
   16820:	str	r3, [r4]
   16824:	b	16734 <argp_error@@Base+0x70c>
   16828:	ldr	r3, [r7, r2, lsl #2]
   1682c:	ldrb	r1, [r3]
   16830:	cmp	r1, #45	; 0x2d
   16834:	bne	16844 <argp_error@@Base+0x81c>
   16838:	ldrb	r1, [r3, #1]
   1683c:	cmp	r1, #0
   16840:	bne	16864 <argp_error@@Base+0x83c>
   16844:	ldr	r1, [r4, #24]
   16848:	cmp	r1, #0
   1684c:	beq	16634 <argp_error@@Base+0x60c>
   16850:	add	r2, r2, #1
   16854:	str	r2, [r4]
   16858:	str	r3, [r4, #12]
   1685c:	mov	r0, #1
   16860:	b	16638 <argp_error@@Base+0x610>
   16864:	cmp	sl, #0
   16868:	bne	168f8 <argp_error@@Base+0x8d0>
   1686c:	ldr	r3, [r4]
   16870:	ldr	r3, [r7, r3, lsl #2]
   16874:	add	r3, r3, #1
   16878:	str	r3, [r4, #20]
   1687c:	ldr	r3, [r4, #20]
   16880:	mov	r0, r6
   16884:	add	r2, r3, #1
   16888:	str	r2, [r4, #20]
   1688c:	ldrb	r5, [r3]
   16890:	str	r2, [sp, #28]
   16894:	str	r3, [sp, #24]
   16898:	mov	r1, r5
   1689c:	bl	11160 <strchr@plt>
   168a0:	ldr	r3, [sp, #24]
   168a4:	ldr	r2, [sp, #28]
   168a8:	ldrb	r1, [r3, #1]
   168ac:	cmp	r1, #0
   168b0:	ldreq	r1, [r4]
   168b4:	addeq	r1, r1, #1
   168b8:	streq	r1, [r4]
   168bc:	sub	r1, r5, #58	; 0x3a
   168c0:	cmp	r0, #0
   168c4:	cmpne	r1, #1
   168c8:	bhi	169a4 <argp_error@@Base+0x97c>
   168cc:	cmp	r9, #0
   168d0:	beq	168ec <argp_error@@Base+0x8c4>
   168d4:	ldr	r0, [pc, #540]	; 16af8 <argp_error@@Base+0xad0>
   168d8:	mov	r3, r5
   168dc:	ldr	r2, [r7]
   168e0:	ldr	r1, [pc, #532]	; 16afc <argp_error@@Base+0xad4>
   168e4:	ldr	r0, [r0]
   168e8:	bl	1116c <fprintf@plt>
   168ec:	str	r5, [r4, #8]
   168f0:	mov	r0, #63	; 0x3f
   168f4:	b	16638 <argp_error@@Base+0x610>
   168f8:	cmp	r1, #45	; 0x2d
   168fc:	bne	16938 <argp_error@@Base+0x910>
   16900:	add	r3, r3, #2
   16904:	str	r3, [r4, #20]
   16908:	ldr	r3, [pc, #480]	; 16af0 <argp_error@@Base+0xac8>
   1690c:	str	r9, [sp, #12]
   16910:	str	r3, [sp, #16]
   16914:	str	r4, [sp, #8]
   16918:	str	r5, [sp, #4]
   1691c:	str	fp, [sp]
   16920:	mov	r3, sl
   16924:	mov	r2, r6
   16928:	mov	r1, r7
   1692c:	mov	r0, r8
   16930:	bl	161c4 <argp_error@@Base+0x19c>
   16934:	b	16638 <argp_error@@Base+0x610>
   16938:	cmp	r5, #0
   1693c:	beq	1686c <argp_error@@Base+0x844>
   16940:	ldrb	r2, [r3, #2]
   16944:	cmp	r2, #0
   16948:	bne	16964 <argp_error@@Base+0x93c>
   1694c:	mov	r0, r6
   16950:	str	r3, [sp, #24]
   16954:	bl	11160 <strchr@plt>
   16958:	ldr	r3, [sp, #24]
   1695c:	cmp	r0, #0
   16960:	bne	1686c <argp_error@@Base+0x844>
   16964:	add	r3, r3, #1
   16968:	str	r3, [r4, #20]
   1696c:	ldr	r3, [pc, #396]	; 16b00 <argp_error@@Base+0xad8>
   16970:	str	r9, [sp, #12]
   16974:	str	r3, [sp, #16]
   16978:	str	r4, [sp, #8]
   1697c:	str	r5, [sp, #4]
   16980:	str	fp, [sp]
   16984:	mov	r3, sl
   16988:	mov	r2, r6
   1698c:	mov	r1, r7
   16990:	mov	r0, r8
   16994:	bl	161c4 <argp_error@@Base+0x19c>
   16998:	cmn	r0, #1
   1699c:	bne	16638 <argp_error@@Base+0x610>
   169a0:	b	1686c <argp_error@@Base+0x844>
   169a4:	ldrb	r1, [r0]
   169a8:	cmp	r1, #87	; 0x57
   169ac:	ldrb	r1, [r0, #1]
   169b0:	bne	16a4c <argp_error@@Base+0xa24>
   169b4:	cmp	sl, #0
   169b8:	sub	ip, r1, #59	; 0x3b
   169bc:	clz	ip, ip
   169c0:	lsr	ip, ip, #5
   169c4:	moveq	ip, #0
   169c8:	cmp	ip, #0
   169cc:	beq	16a4c <argp_error@@Base+0xa24>
   169d0:	ldrb	r3, [r3, #1]
   169d4:	cmp	r3, #0
   169d8:	strne	r2, [r4, #12]
   169dc:	bne	16a2c <argp_error@@Base+0xa04>
   169e0:	ldr	r3, [r4]
   169e4:	cmp	r8, r3
   169e8:	ldrne	r3, [r7, r3, lsl #2]
   169ec:	strne	r3, [r4, #12]
   169f0:	bne	16a2c <argp_error@@Base+0xa04>
   169f4:	cmp	r9, #0
   169f8:	beq	16a14 <argp_error@@Base+0x9ec>
   169fc:	ldr	r0, [pc, #244]	; 16af8 <argp_error@@Base+0xad0>
   16a00:	mov	r3, r5
   16a04:	ldr	r2, [r7]
   16a08:	ldr	r1, [pc, #244]	; 16b04 <argp_error@@Base+0xadc>
   16a0c:	ldr	r0, [r0]
   16a10:	bl	1116c <fprintf@plt>
   16a14:	str	r5, [r4, #8]
   16a18:	ldrb	r0, [r6]
   16a1c:	cmp	r0, #58	; 0x3a
   16a20:	moveq	r0, #58	; 0x3a
   16a24:	movne	r0, #63	; 0x3f
   16a28:	b	16638 <argp_error@@Base+0x610>
   16a2c:	ldr	r3, [r4, #12]
   16a30:	ldr	r2, [pc, #208]	; 16b08 <argp_error@@Base+0xae0>
   16a34:	str	r3, [r4, #20]
   16a38:	mov	r3, #0
   16a3c:	str	r3, [r4, #12]
   16a40:	str	r2, [sp, #16]
   16a44:	stmib	sp, {r3, r4, r9}
   16a48:	b	1691c <argp_error@@Base+0x8f4>
   16a4c:	cmp	r1, #58	; 0x3a
   16a50:	bne	16a9c <argp_error@@Base+0xa74>
   16a54:	ldrb	r1, [r0, #2]
   16a58:	ldrb	r3, [r3, #1]
   16a5c:	cmp	r1, #58	; 0x3a
   16a60:	bne	16a7c <argp_error@@Base+0xa54>
   16a64:	cmp	r3, #0
   16a68:	strne	r2, [r4, #12]
   16a6c:	ldrne	r3, [r4]
   16a70:	bne	16a8c <argp_error@@Base+0xa64>
   16a74:	str	r3, [r4, #12]
   16a78:	b	16a94 <argp_error@@Base+0xa6c>
   16a7c:	cmp	r3, #0
   16a80:	ldr	r3, [r4]
   16a84:	beq	16aa4 <argp_error@@Base+0xa7c>
   16a88:	str	r2, [r4, #12]
   16a8c:	add	r3, r3, #1
   16a90:	str	r3, [r4]
   16a94:	mov	r3, #0
   16a98:	str	r3, [r4, #20]
   16a9c:	mov	r0, r5
   16aa0:	b	16638 <argp_error@@Base+0x610>
   16aa4:	cmp	r8, r3
   16aa8:	addne	r2, r3, #1
   16aac:	strne	r2, [r4]
   16ab0:	ldrne	r3, [r7, r3, lsl #2]
   16ab4:	bne	16a74 <argp_error@@Base+0xa4c>
   16ab8:	cmp	r9, #0
   16abc:	beq	16ad8 <argp_error@@Base+0xab0>
   16ac0:	ldr	r0, [pc, #48]	; 16af8 <argp_error@@Base+0xad0>
   16ac4:	mov	r3, r5
   16ac8:	ldr	r2, [r7]
   16acc:	ldr	r1, [pc, #48]	; 16b04 <argp_error@@Base+0xadc>
   16ad0:	ldr	r0, [r0]
   16ad4:	bl	1116c <fprintf@plt>
   16ad8:	str	r5, [r4, #8]
   16adc:	ldrb	r5, [r6]
   16ae0:	cmp	r5, #58	; 0x3a
   16ae4:	moveq	r5, #58	; 0x3a
   16ae8:	movne	r5, #63	; 0x3f
   16aec:	b	16a94 <argp_error@@Base+0xa6c>
   16af0:	strdeq	r7, [r1], -ip
   16af4:	andeq	r7, r1, r5, ror pc
   16af8:	andeq	r9, r2, r0, ror r2
   16afc:	andeq	r7, r1, r5, lsl #31
   16b00:	strdeq	r7, [r1], -sp
   16b04:	andeq	r7, r1, r1, lsr #31
   16b08:	andeq	r7, r1, sl, asr #31
   16b0c:	push	{r4, r5, lr}
   16b10:	sub	sp, sp, #20
   16b14:	ldr	r5, [pc, #84]	; 16b70 <argp_error@@Base+0xb48>
   16b18:	ldr	r4, [pc, #84]	; 16b74 <argp_error@@Base+0xb4c>
   16b1c:	ldr	ip, [r5]
   16b20:	str	r4, [sp, #8]
   16b24:	str	ip, [r4]
   16b28:	ldr	ip, [r5, #4]
   16b2c:	str	ip, [r4, #4]
   16b30:	ldr	ip, [sp, #40]	; 0x28
   16b34:	str	ip, [sp, #12]
   16b38:	ldr	ip, [sp, #36]	; 0x24
   16b3c:	str	ip, [sp, #4]
   16b40:	ldr	ip, [sp, #32]
   16b44:	str	ip, [sp]
   16b48:	bl	16614 <argp_error@@Base+0x5ec>
   16b4c:	ldr	r3, [r4]
   16b50:	ldr	r2, [r4, #12]
   16b54:	str	r3, [r5]
   16b58:	ldr	r3, [pc, #24]	; 16b78 <argp_error@@Base+0xb50>
   16b5c:	str	r2, [r3]
   16b60:	ldr	r3, [r4, #8]
   16b64:	str	r3, [r5, #8]
   16b68:	add	sp, sp, #20
   16b6c:	pop	{r4, r5, pc}
   16b70:	andeq	r9, r2, r8, asr r2
   16b74:	muleq	r2, ip, r2
   16b78:	andeq	r9, r2, r8, asr #5
   16b7c:	push	{r0, r1, r2, r3, r4, lr}
   16b80:	mov	r3, #1
   16b84:	str	r3, [sp, #8]
   16b88:	mov	r3, #0
   16b8c:	str	r3, [sp, #4]
   16b90:	str	r3, [sp]
   16b94:	bl	16b0c <argp_error@@Base+0xae4>
   16b98:	add	sp, sp, #20
   16b9c:	pop	{pc}		; (ldr pc, [sp], #4)
   16ba0:	push	{r4, r5, r6, r7, r8, lr}
   16ba4:	mov	r8, r0
   16ba8:	mov	r0, #36	; 0x24
   16bac:	mov	r7, r1
   16bb0:	mov	r6, r2
   16bb4:	mov	r5, r3
   16bb8:	bl	13428 <argp_parse@@Base+0x101c>
   16bbc:	subs	r4, r0, #0
   16bc0:	beq	16c10 <argp_error@@Base+0xbe8>
   16bc4:	mov	r3, #0
   16bc8:	str	r5, [r4, #12]
   16bcc:	str	r8, [r4]
   16bd0:	str	r7, [r4, #4]
   16bd4:	str	r6, [r4, #8]
   16bd8:	str	r3, [r4, #20]
   16bdc:	str	r3, [r4, #16]
   16be0:	mov	r0, #200	; 0xc8
   16be4:	bl	13428 <argp_parse@@Base+0x101c>
   16be8:	cmp	r0, #0
   16bec:	mov	r5, r0
   16bf0:	addne	r5, r0, #200	; 0xc8
   16bf4:	str	r0, [r4, #24]
   16bf8:	strne	r0, [r4, #28]
   16bfc:	strne	r5, [r4, #32]
   16c00:	bne	16c10 <argp_error@@Base+0xbe8>
   16c04:	mov	r0, r4
   16c08:	bl	12ea8 <argp_parse@@Base+0xa9c>
   16c0c:	mov	r4, r5
   16c10:	mov	r0, r4
   16c14:	pop	{r4, r5, r6, r7, r8, pc}
   16c18:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16c1c:	mov	r4, r0
   16c20:	ldr	r6, [r0, #24]
   16c24:	ldr	r3, [r0, #16]
   16c28:	add	r6, r6, r3
   16c2c:	ldr	r2, [r4, #28]
   16c30:	cmp	r6, r2
   16c34:	bcs	16ce4 <argp_error@@Base+0xcbc>
   16c38:	ldr	r7, [r4, #20]
   16c3c:	cmp	r7, #0
   16c40:	bne	16c98 <argp_error@@Base+0xc70>
   16c44:	ldr	r5, [r4, #4]
   16c48:	cmp	r5, #0
   16c4c:	beq	16c98 <argp_error@@Base+0xc70>
   16c50:	ldr	r1, [r4, #32]
   16c54:	add	r3, r2, r5
   16c58:	cmp	r1, r3
   16c5c:	bls	16cfc <argp_error@@Base+0xcd4>
   16c60:	add	r7, r6, r5
   16c64:	sub	r2, r2, r6
   16c68:	mov	r1, r6
   16c6c:	mov	r0, r7
   16c70:	bl	1101c <memmove@plt>
   16c74:	ldr	r3, [r4, #28]
   16c78:	mov	r0, r6
   16c7c:	add	r3, r3, r5
   16c80:	str	r3, [r4, #28]
   16c84:	mov	r2, r5
   16c88:	mov	r1, #32
   16c8c:	bl	111a8 <memset@plt>
   16c90:	mov	r6, r7
   16c94:	str	r5, [r4, #20]
   16c98:	ldr	r9, [r4, #28]
   16c9c:	mov	r1, #10
   16ca0:	sub	r8, r9, r6
   16ca4:	mov	r2, r8
   16ca8:	mov	r0, r6
   16cac:	bl	111c0 <memchr@plt>
   16cb0:	ldr	r2, [r4, #20]
   16cb4:	ldr	r5, [r4, #8]
   16cb8:	cmp	r2, #0
   16cbc:	movlt	r3, #0
   16cc0:	strlt	r3, [r4, #20]
   16cc4:	cmp	r0, #0
   16cc8:	mov	fp, r0
   16ccc:	ldr	r0, [r4, #20]
   16cd0:	bne	16d18 <argp_error@@Base+0xcf0>
   16cd4:	add	r3, r8, r0
   16cd8:	cmp	r3, r5
   16cdc:	bcs	16d38 <argp_error@@Base+0xd10>
   16ce0:	str	r3, [r4, #20]
   16ce4:	ldr	r3, [r4, #28]
   16ce8:	ldr	r2, [r4, #24]
   16cec:	sub	r3, r3, r2
   16cf0:	str	r3, [r4, #16]
   16cf4:	add	sp, sp, #12
   16cf8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16cfc:	ldr	r1, [r4]
   16d00:	mov	r0, #32
   16d04:	add	r7, r7, #1
   16d08:	bl	112c8 <putc_unlocked@plt>
   16d0c:	cmp	r5, r7
   16d10:	bne	16cfc <argp_error@@Base+0xcd4>
   16d14:	b	16c94 <argp_error@@Base+0xc6c>
   16d18:	sub	r2, fp, r6
   16d1c:	add	r2, r2, r0
   16d20:	cmp	r2, r5
   16d24:	bge	16d3c <argp_error@@Base+0xd14>
   16d28:	mov	r3, #0
   16d2c:	str	r3, [r4, #20]
   16d30:	add	r3, fp, #1
   16d34:	b	16d9c <argp_error@@Base+0xd74>
   16d38:	mov	fp, r9
   16d3c:	ldr	sl, [r4, #12]
   16d40:	cmp	sl, #0
   16d44:	subge	r5, r5, r0
   16d48:	addge	r5, r6, r5
   16d4c:	movge	r7, r5
   16d50:	bge	16dbc <argp_error@@Base+0xd94>
   16d54:	cmp	fp, r9
   16d58:	sub	sl, r5, #1
   16d5c:	bcs	16da4 <argp_error@@Base+0xd7c>
   16d60:	sub	r0, sl, r0
   16d64:	sub	r2, r9, fp
   16d68:	mov	r1, fp
   16d6c:	add	r0, r6, r0
   16d70:	bl	1101c <memmove@plt>
   16d74:	ldr	r8, [r4, #20]
   16d78:	sub	sl, sl, r8
   16d7c:	add	sl, r6, sl
   16d80:	sub	r3, sl, fp
   16d84:	ldr	sl, [r4, #28]
   16d88:	sub	r3, sl, r3
   16d8c:	str	r3, [r4, #28]
   16d90:	mov	r3, #0
   16d94:	str	r3, [r4, #20]
   16d98:	add	r3, r6, r5
   16d9c:	mov	r6, r3
   16da0:	b	16c2c <argp_error@@Base+0xc04>
   16da4:	add	r0, r8, r0
   16da8:	str	r0, [r4, #20]
   16dac:	sub	r0, sl, r0
   16db0:	add	r9, r9, r0
   16db4:	str	r9, [r4, #28]
   16db8:	b	16ce4 <argp_error@@Base+0xcbc>
   16dbc:	cmp	r6, r7
   16dc0:	mov	r2, r7
   16dc4:	bhi	16df0 <argp_error@@Base+0xdc8>
   16dc8:	str	r7, [sp, #4]
   16dcc:	bl	1113c <__ctype_b_loc@plt>
   16dd0:	ldr	r2, [sp, #4]
   16dd4:	sub	r7, r7, #1
   16dd8:	ldrb	r1, [r2]
   16ddc:	lsl	r1, r1, #1
   16de0:	ldr	r0, [r0]
   16de4:	ldrh	r1, [r0, r1]
   16de8:	tst	r1, #1
   16dec:	beq	16dbc <argp_error@@Base+0xd94>
   16df0:	add	r7, r2, #1
   16df4:	cmp	r6, r7
   16df8:	bcs	16e70 <argp_error@@Base+0xe48>
   16dfc:	cmp	r6, r2
   16e00:	bhi	16e3c <argp_error@@Base+0xe14>
   16e04:	sub	r5, r2, #1
   16e08:	cmp	r6, r5
   16e0c:	mov	r2, r5
   16e10:	bhi	16e3c <argp_error@@Base+0xe14>
   16e14:	str	r5, [sp, #4]
   16e18:	bl	1113c <__ctype_b_loc@plt>
   16e1c:	ldr	r2, [sp, #4]
   16e20:	sub	r5, r5, #1
   16e24:	ldrb	r3, [r2]
   16e28:	lsl	r3, r3, #1
   16e2c:	ldr	r1, [r0]
   16e30:	ldrh	r3, [r1, r3]
   16e34:	tst	r3, #1
   16e38:	bne	16e08 <argp_error@@Base+0xde0>
   16e3c:	add	r5, r2, #1
   16e40:	add	r3, r8, #1
   16e44:	add	r3, r6, r3
   16e48:	cmp	r7, r3
   16e4c:	bne	16ed8 <argp_error@@Base+0xeb0>
   16e50:	ldr	r3, [r4, #32]
   16e54:	sub	r3, r3, r5
   16e58:	cmp	sl, r3
   16e5c:	bge	16ee8 <argp_error@@Base+0xec0>
   16e60:	mov	r3, #10
   16e64:	add	r9, r5, #1
   16e68:	strb	r3, [r5]
   16e6c:	b	16f68 <argp_error@@Base+0xf40>
   16e70:	cmp	fp, r5
   16e74:	bls	16ecc <argp_error@@Base+0xea4>
   16e78:	add	r7, r5, #1
   16e7c:	cmp	fp, r7
   16e80:	mov	r5, r7
   16e84:	beq	16ecc <argp_error@@Base+0xea4>
   16e88:	bl	1113c <__ctype_b_loc@plt>
   16e8c:	ldrb	r2, [r5]
   16e90:	add	r7, r7, #1
   16e94:	lsl	r2, r2, #1
   16e98:	ldr	r1, [r0]
   16e9c:	ldrh	r2, [r1, r2]
   16ea0:	tst	r2, #1
   16ea4:	beq	16e7c <argp_error@@Base+0xe54>
   16ea8:	bl	1113c <__ctype_b_loc@plt>
   16eac:	mov	r7, r5
   16eb0:	ldr	r2, [r0]
   16eb4:	ldrb	r3, [r7, #1]!
   16eb8:	lsl	r3, r3, #1
   16ebc:	ldrh	r3, [r2, r3]
   16ec0:	tst	r3, #1
   16ec4:	bne	16eb4 <argp_error@@Base+0xe8c>
   16ec8:	b	16e40 <argp_error@@Base+0xe18>
   16ecc:	cmp	fp, r5
   16ed0:	bne	16ea8 <argp_error@@Base+0xe80>
   16ed4:	b	16d28 <argp_error@@Base+0xd00>
   16ed8:	add	r3, r5, #1
   16edc:	sub	r3, r7, r3
   16ee0:	cmp	sl, r3
   16ee4:	ble	16e60 <argp_error@@Base+0xe38>
   16ee8:	cmp	r7, r9
   16eec:	bcs	16e60 <argp_error@@Base+0xe38>
   16ef0:	ldr	r3, [r4, #32]
   16ef4:	add	r0, sl, #1
   16ef8:	sub	r3, r3, r9
   16efc:	cmp	r3, r0
   16f00:	ble	16f30 <argp_error@@Base+0xf08>
   16f04:	sub	r9, r9, r7
   16f08:	mov	r2, r9
   16f0c:	mov	r1, r7
   16f10:	add	r0, r5, r0
   16f14:	bl	1101c <memmove@plt>
   16f18:	ldr	r7, [r4, #12]
   16f1c:	add	r7, r7, #1
   16f20:	add	r7, r5, r7
   16f24:	add	r9, r7, r9
   16f28:	sub	r8, r9, r6
   16f2c:	b	16e60 <argp_error@@Base+0xe38>
   16f30:	ldr	r0, [r4, #24]
   16f34:	cmp	r5, r0
   16f38:	bls	16f4c <argp_error@@Base+0xf24>
   16f3c:	ldr	r3, [r4]
   16f40:	sub	r2, r5, r0
   16f44:	mov	r1, #1
   16f48:	bl	11070 <fwrite_unlocked@plt>
   16f4c:	ldr	r1, [r4]
   16f50:	mov	r0, #10
   16f54:	bl	112c8 <putc_unlocked@plt>
   16f58:	ldr	r9, [r4, #24]
   16f5c:	sub	r6, r6, r9
   16f60:	add	r8, r8, r6
   16f64:	mov	r6, r9
   16f68:	ldr	r2, [r4, #12]
   16f6c:	sub	r3, r7, r9
   16f70:	cmp	r3, r2
   16f74:	bge	16fb0 <argp_error@@Base+0xf88>
   16f78:	add	r3, r8, #1
   16f7c:	add	r3, r6, r3
   16f80:	cmp	r7, r3
   16f84:	bne	16f98 <argp_error@@Base+0xf70>
   16f88:	ldr	r3, [r4, #32]
   16f8c:	sub	r3, r3, r7
   16f90:	cmp	r2, r3
   16f94:	ble	16fb0 <argp_error@@Base+0xf88>
   16f98:	mov	r5, #0
   16f9c:	ldr	r3, [r4, #12]
   16fa0:	cmp	r5, r3
   16fa4:	blt	17014 <argp_error@@Base+0xfec>
   16fa8:	mov	r3, r9
   16fac:	b	16fc4 <argp_error@@Base+0xf9c>
   16fb0:	mov	r3, r9
   16fb4:	ldr	r1, [r4, #12]
   16fb8:	sub	r2, r3, r9
   16fbc:	cmp	r1, r2
   16fc0:	bgt	17008 <argp_error@@Base+0xfe0>
   16fc4:	cmp	r3, r7
   16fc8:	bcs	16fe4 <argp_error@@Base+0xfbc>
   16fcc:	add	r2, r6, r8
   16fd0:	mov	r0, r3
   16fd4:	sub	r2, r2, r7
   16fd8:	mov	r1, r7
   16fdc:	bl	1101c <memmove@plt>
   16fe0:	mov	r3, r0
   16fe4:	ldr	r2, [r4, #12]
   16fe8:	sub	r6, r7, r6
   16fec:	sub	r6, r8, r6
   16ff0:	cmp	r2, #0
   16ff4:	add	r6, r3, r6
   16ff8:	mvneq	r2, #0
   16ffc:	str	r6, [r4, #28]
   17000:	str	r2, [r4, #20]
   17004:	b	16d9c <argp_error@@Base+0xd74>
   17008:	mov	r2, #32
   1700c:	strb	r2, [r3], #1
   17010:	b	16fb4 <argp_error@@Base+0xf8c>
   17014:	ldr	r1, [r4]
   17018:	mov	r0, #32
   1701c:	bl	112c8 <putc_unlocked@plt>
   17020:	add	r5, r5, #1
   17024:	b	16f9c <argp_error@@Base+0xf74>
   17028:	push	{r4, lr}
   1702c:	mov	r4, r0
   17030:	bl	16c18 <argp_error@@Base+0xbf0>
   17034:	ldr	r2, [r4, #28]
   17038:	ldr	r0, [r4, #24]
   1703c:	cmp	r2, r0
   17040:	bls	17054 <argp_error@@Base+0x102c>
   17044:	ldr	r3, [r4]
   17048:	sub	r2, r2, r0
   1704c:	mov	r1, #1
   17050:	bl	11070 <fwrite_unlocked@plt>
   17054:	ldr	r0, [r4, #24]
   17058:	bl	12ea8 <argp_parse@@Base+0xa9c>
   1705c:	mov	r0, r4
   17060:	pop	{r4, lr}
   17064:	b	12ea8 <argp_parse@@Base+0xa9c>
   17068:	ldr	r3, [r0, #32]
   1706c:	ldr	r2, [r0, #28]
   17070:	sub	r3, r3, r2
   17074:	cmp	r3, r1
   17078:	bcc	17084 <argp_error@@Base+0x105c>
   1707c:	mov	r0, #1
   17080:	bx	lr
   17084:	push	{r4, r5, r6, lr}
   17088:	mov	r4, r0
   1708c:	mov	r5, r1
   17090:	bl	16c18 <argp_error@@Base+0xbf0>
   17094:	ldr	r0, [r4, #24]
   17098:	ldr	r2, [r4, #28]
   1709c:	ldr	r3, [r4]
   170a0:	sub	r2, r2, r0
   170a4:	mov	r1, #1
   170a8:	bl	11070 <fwrite_unlocked@plt>
   170ac:	ldr	r2, [r4, #28]
   170b0:	mov	r1, r0
   170b4:	ldr	r0, [r4, #24]
   170b8:	sub	r3, r2, r0
   170bc:	cmp	r1, r3
   170c0:	bne	170e8 <argp_error@@Base+0x10c0>
   170c4:	ldr	r1, [r4, #32]
   170c8:	mov	r3, #0
   170cc:	sub	r1, r1, r0
   170d0:	cmp	r5, r1
   170d4:	str	r0, [r4, #28]
   170d8:	str	r3, [r4, #16]
   170dc:	bhi	17110 <argp_error@@Base+0x10e8>
   170e0:	mov	r0, #1
   170e4:	pop	{r4, r5, r6, pc}
   170e8:	ldr	r3, [r4, #16]
   170ec:	sub	r2, r2, r1
   170f0:	sub	r3, r3, r1
   170f4:	str	r2, [r4, #28]
   170f8:	str	r3, [r4, #16]
   170fc:	sub	r2, r2, r0
   17100:	add	r1, r0, r1
   17104:	bl	1101c <memmove@plt>
   17108:	mov	r0, #0
   1710c:	pop	{r4, r5, r6, pc}
   17110:	adds	r5, r5, r1
   17114:	bcc	17128 <argp_error@@Base+0x1100>
   17118:	bl	11178 <__errno_location@plt>
   1711c:	mov	r3, #12
   17120:	str	r3, [r0]
   17124:	b	17108 <argp_error@@Base+0x10e0>
   17128:	mov	r1, r5
   1712c:	bl	171c0 <argp_error@@Base+0x1198>
   17130:	cmp	r0, #0
   17134:	beq	17118 <argp_error@@Base+0x10f0>
   17138:	add	r5, r0, r5
   1713c:	str	r0, [r4, #24]
   17140:	str	r5, [r4, #32]
   17144:	str	r0, [r4, #28]
   17148:	b	170e0 <argp_error@@Base+0x10b8>
   1714c:	push	{r1, r2, r3}
   17150:	push	{r0, r1, r2, r4, r5, r6, lr}
   17154:	mov	r4, r0
   17158:	mov	r1, #150	; 0x96
   1715c:	add	r6, sp, #32
   17160:	mov	r0, r4
   17164:	bl	17068 <argp_error@@Base+0x1040>
   17168:	cmp	r0, #0
   1716c:	bne	17184 <argp_error@@Base+0x115c>
   17170:	mvn	r0, #0
   17174:	add	sp, sp, #12
   17178:	pop	{r4, r5, r6, lr}
   1717c:	add	sp, sp, #12
   17180:	bx	lr
   17184:	ldr	r0, [r4, #28]
   17188:	ldr	r5, [r4, #32]
   1718c:	mov	r3, r6
   17190:	sub	r5, r5, r0
   17194:	ldr	r2, [sp, #28]
   17198:	mov	r1, r5
   1719c:	str	r6, [sp, #4]
   171a0:	bl	11220 <vsnprintf@plt>
   171a4:	cmp	r5, r0
   171a8:	addls	r1, r0, #1
   171ac:	bls	17160 <argp_error@@Base+0x1138>
   171b0:	ldr	r3, [r4, #28]
   171b4:	add	r3, r3, r0
   171b8:	str	r3, [r4, #28]
   171bc:	b	17174 <argp_error@@Base+0x114c>
   171c0:	cmp	r0, #0
   171c4:	push	{r4, lr}
   171c8:	mov	r4, r1
   171cc:	bne	171dc <argp_error@@Base+0x11b4>
   171d0:	mov	r0, r1
   171d4:	pop	{r4, lr}
   171d8:	b	13428 <argp_parse@@Base+0x101c>
   171dc:	cmp	r1, #0
   171e0:	bne	171f0 <argp_error@@Base+0x11c8>
   171e4:	bl	12ea8 <argp_parse@@Base+0xa9c>
   171e8:	mov	r0, #0
   171ec:	pop	{r4, pc}
   171f0:	cmp	r1, #0
   171f4:	blt	17204 <argp_error@@Base+0x11dc>
   171f8:	mov	r3, #0
   171fc:	cmp	r3, r3
   17200:	beq	17214 <argp_error@@Base+0x11ec>
   17204:	bl	11178 <__errno_location@plt>
   17208:	mov	r3, #12
   1720c:	str	r3, [r0]
   17210:	b	171e8 <argp_error@@Base+0x11c0>
   17214:	pop	{r4, lr}
   17218:	b	110a0 <realloc@plt>
   1721c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17220:	mov	r7, r0
   17224:	ldr	r6, [pc, #72]	; 17274 <argp_error@@Base+0x124c>
   17228:	ldr	r5, [pc, #72]	; 17278 <argp_error@@Base+0x1250>
   1722c:	add	r6, pc, r6
   17230:	add	r5, pc, r5
   17234:	sub	r6, r6, r5
   17238:	mov	r8, r1
   1723c:	mov	r9, r2
   17240:	bl	10fc0 <fputs_unlocked@plt-0x20>
   17244:	asrs	r6, r6, #2
   17248:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1724c:	mov	r4, #0
   17250:	add	r4, r4, #1
   17254:	ldr	r3, [r5], #4
   17258:	mov	r2, r9
   1725c:	mov	r1, r8
   17260:	mov	r0, r7
   17264:	blx	r3
   17268:	cmp	r6, r4
   1726c:	bne	17250 <argp_error@@Base+0x1228>
   17270:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17274:	ldrdeq	r1, [r1], -r4
   17278:	andeq	r1, r1, ip, asr #25
   1727c:	bx	lr

Disassembly of section .fini:

00017280 <.fini>:
   17280:	push	{r3, lr}
   17284:	pop	{r3, pc}
