
../repos/prog2/MT2E2-2:     file format elf32-littlearm


Disassembly of section .init:

00010db0 <.init>:
   10db0:	push	{r3, lr}
   10db4:	bl	10ef0 <_start@@Base+0x3c>
   10db8:	pop	{r3, pc}

Disassembly of section .plt:

00010dbc <calloc@plt-0x14>:
   10dbc:	push	{lr}		; (str lr, [sp, #-4]!)
   10dc0:	ldr	lr, [pc, #4]	; 10dcc <calloc@plt-0x4>
   10dc4:	add	lr, pc, lr
   10dc8:	ldr	pc, [lr, #8]!
   10dcc:	andeq	r2, r1, r4, lsr r2

00010dd0 <calloc@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #73728	; 0x12000
   10dd8:	ldr	pc, [ip, #564]!	; 0x234

00010ddc <strcmp@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #73728	; 0x12000
   10de4:	ldr	pc, [ip, #556]!	; 0x22c

00010de8 <strtol@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #73728	; 0x12000
   10df0:	ldr	pc, [ip, #548]!	; 0x224

00010df4 <printf@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #73728	; 0x12000
   10dfc:	ldr	pc, [ip, #540]!	; 0x21c

00010e00 <__isoc99_fscanf@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #73728	; 0x12000
   10e08:	ldr	pc, [ip, #532]!	; 0x214

00010e0c <fopen@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #73728	; 0x12000
   10e14:	ldr	pc, [ip, #524]!	; 0x20c

00010e18 <free@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #73728	; 0x12000
   10e20:	ldr	pc, [ip, #516]!	; 0x204

00010e24 <realloc@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #73728	; 0x12000
   10e2c:	ldr	pc, [ip, #508]!	; 0x1fc

00010e30 <strcpy@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #73728	; 0x12000
   10e38:	ldr	pc, [ip, #500]!	; 0x1f4

00010e3c <puts@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #73728	; 0x12000
   10e44:	ldr	pc, [ip, #492]!	; 0x1ec

00010e48 <malloc@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #73728	; 0x12000
   10e50:	ldr	pc, [ip, #484]!	; 0x1e4

00010e54 <__libc_start_main@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #73728	; 0x12000
   10e5c:	ldr	pc, [ip, #476]!	; 0x1dc

00010e60 <__gmon_start__@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #73728	; 0x12000
   10e68:	ldr	pc, [ip, #468]!	; 0x1d4

00010e6c <strlen@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #73728	; 0x12000
   10e74:	ldr	pc, [ip, #460]!	; 0x1cc

00010e78 <memset@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #73728	; 0x12000
   10e80:	ldr	pc, [ip, #452]!	; 0x1c4

00010e84 <putchar@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #73728	; 0x12000
   10e8c:	ldr	pc, [ip, #444]!	; 0x1bc

00010e90 <fclose@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #73728	; 0x12000
   10e98:	ldr	pc, [ip, #436]!	; 0x1b4

00010e9c <sprintf@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #73728	; 0x12000
   10ea4:	ldr	pc, [ip, #428]!	; 0x1ac

00010ea8 <abort@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #73728	; 0x12000
   10eb0:	ldr	pc, [ip, #420]!	; 0x1a4

Disassembly of section .text:

00010eb4 <_start@@Base>:
   10eb4:	mov	fp, #0
   10eb8:	mov	lr, #0
   10ebc:	pop	{r1}		; (ldr r1, [sp], #4)
   10ec0:	mov	r2, sp
   10ec4:	push	{r2}		; (str r2, [sp, #-4]!)
   10ec8:	push	{r0}		; (str r0, [sp, #-4]!)
   10ecc:	ldr	ip, [pc, #16]	; 10ee4 <_start@@Base+0x30>
   10ed0:	push	{ip}		; (str ip, [sp, #-4]!)
   10ed4:	ldr	r0, [pc, #12]	; 10ee8 <_start@@Base+0x34>
   10ed8:	ldr	r3, [pc, #12]	; 10eec <_start@@Base+0x38>
   10edc:	bl	10e54 <__libc_start_main@plt>
   10ee0:	bl	10ea8 <abort@plt>
   10ee4:	andeq	r2, r1, r4, lsr #11
   10ee8:	muleq	r1, r4, r1
   10eec:	andeq	r2, r1, r4, asr #10
   10ef0:	ldr	r3, [pc, #20]	; 10f0c <_start@@Base+0x58>
   10ef4:	ldr	r2, [pc, #20]	; 10f10 <_start@@Base+0x5c>
   10ef8:	add	r3, pc, r3
   10efc:	ldr	r2, [r3, r2]
   10f00:	cmp	r2, #0
   10f04:	bxeq	lr
   10f08:	b	10e60 <__gmon_start__@plt>
   10f0c:	andeq	r2, r1, r0, lsl #2
   10f10:	andeq	r0, r0, r8, asr r0
   10f14:	ldr	r0, [pc, #24]	; 10f34 <_start@@Base+0x80>
   10f18:	ldr	r3, [pc, #24]	; 10f38 <_start@@Base+0x84>
   10f1c:	cmp	r3, r0
   10f20:	bxeq	lr
   10f24:	ldr	r3, [pc, #16]	; 10f3c <_start@@Base+0x88>
   10f28:	cmp	r3, #0
   10f2c:	bxeq	lr
   10f30:	bx	r3
   10f34:	andeq	r3, r2, r4, rrx
   10f38:	andeq	r3, r2, r4, rrx
   10f3c:	andeq	r0, r0, r0
   10f40:	ldr	r0, [pc, #36]	; 10f6c <_start@@Base+0xb8>
   10f44:	ldr	r1, [pc, #36]	; 10f70 <_start@@Base+0xbc>
   10f48:	sub	r1, r1, r0
   10f4c:	asr	r1, r1, #2
   10f50:	add	r1, r1, r1, lsr #31
   10f54:	asrs	r1, r1, #1
   10f58:	bxeq	lr
   10f5c:	ldr	r3, [pc, #16]	; 10f74 <_start@@Base+0xc0>
   10f60:	cmp	r3, #0
   10f64:	bxeq	lr
   10f68:	bx	r3
   10f6c:	andeq	r3, r2, r4, rrx
   10f70:	andeq	r3, r2, r4, rrx
   10f74:	andeq	r0, r0, r0
   10f78:	push	{r4, lr}
   10f7c:	ldr	r4, [pc, #24]	; 10f9c <_start@@Base+0xe8>
   10f80:	ldrb	r3, [r4]
   10f84:	cmp	r3, #0
   10f88:	popne	{r4, pc}
   10f8c:	bl	10f14 <_start@@Base+0x60>
   10f90:	mov	r3, #1
   10f94:	strb	r3, [r4]
   10f98:	pop	{r4, pc}
   10f9c:	andeq	r3, r2, r4, rrx
   10fa0:	b	10f40 <_start@@Base+0x8c>

00010fa4 <descobre_caminho@@Base>:
   10fa4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10fa8:	add	fp, sp, #28
   10fac:	sub	sp, sp, #12
   10fb0:	mov	r6, r3
   10fb4:	str	r2, [sp]
   10fb8:	mov	r5, r1
   10fbc:	mov	sl, r0
   10fc0:	bl	11f9c <lista_nova@@Base>
   10fc4:	mov	r4, r0
   10fc8:	mov	r1, r5
   10fcc:	add	r3, sp, #8
   10fd0:	mov	r0, sl
   10fd4:	mov	r2, r6
   10fd8:	mov	r5, r6
   10fdc:	bl	11924 <grafo_bfs@@Base>
   10fe0:	mov	r9, r0
   10fe4:	ldr	r0, [sp, #8]
   10fe8:	cmp	r0, #1
   10fec:	blt	11030 <descobre_caminho@@Base+0x8c>
   10ff0:	ldr	r6, [pc, #184]	; 110b0 <descobre_caminho@@Base+0x10c>
   10ff4:	mov	r8, #0
   10ff8:	add	r7, sp, #5
   10ffc:	add	r6, pc, r6
   11000:	ldr	r2, [r9, r8, lsl #2]
   11004:	mov	r0, r7
   11008:	mov	r1, r6
   1100c:	bl	10e9c <sprintf@plt>
   11010:	mov	r0, r4
   11014:	mov	r1, r7
   11018:	mvn	r2, #0
   1101c:	bl	120fc <lista_insere@@Base>
   11020:	ldr	r0, [sp, #8]
   11024:	add	r8, r8, #1
   11028:	cmp	r8, r0
   1102c:	blt	11000 <descobre_caminho@@Base+0x5c>
   11030:	ldr	r2, [sp]
   11034:	add	r3, sp, #8
   11038:	mov	r0, sl
   1103c:	mov	r1, r5
   11040:	bl	11924 <grafo_bfs@@Base>
   11044:	mov	r6, r0
   11048:	ldr	r0, [sp, #8]
   1104c:	cmp	r0, #2
   11050:	blt	11094 <descobre_caminho@@Base+0xf0>
   11054:	ldr	r8, [pc, #88]	; 110b4 <descobre_caminho@@Base+0x110>
   11058:	mov	r5, #1
   1105c:	add	r7, sp, #5
   11060:	add	r8, pc, r8
   11064:	ldr	r2, [r6, r5, lsl #2]
   11068:	mov	r0, r7
   1106c:	mov	r1, r8
   11070:	bl	10e9c <sprintf@plt>
   11074:	mov	r0, r4
   11078:	mov	r1, r7
   1107c:	mvn	r2, #0
   11080:	bl	120fc <lista_insere@@Base>
   11084:	ldr	r0, [sp, #8]
   11088:	add	r5, r5, #1
   1108c:	cmp	r5, r0
   11090:	blt	11064 <descobre_caminho@@Base+0xc0>
   11094:	mov	r0, r6
   11098:	bl	10e18 <free@plt>
   1109c:	mov	r0, r9
   110a0:	bl	10e18 <free@plt>
   110a4:	mov	r0, r4
   110a8:	sub	sp, fp, #28
   110ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   110b0:	andeq	r1, r0, sl, asr #12
   110b4:	andeq	r1, r0, r6, ror #11

000110b8 <simula_acontecimentos@@Base>:
   110b8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   110bc:	add	fp, sp, #24
   110c0:	sub	sp, sp, #24
   110c4:	mov	r9, r0
   110c8:	mov	r0, #0
   110cc:	cmp	r2, #20
   110d0:	bgt	11188 <simula_acontecimentos@@Base+0xd0>
   110d4:	mov	r0, r2
   110d8:	mov	r4, r2
   110dc:	mov	r8, r1
   110e0:	bl	11b08 <heap_nova@@Base>
   110e4:	mov	r5, r0
   110e8:	cmp	r4, #1
   110ec:	blt	1117c <simula_acontecimentos@@Base+0xc4>
   110f0:	mov	r6, #0
   110f4:	add	r7, sp, #4
   110f8:	mov	r0, r9
   110fc:	mov	r1, r6
   11100:	bl	1201c <lista_elemento@@Base>
   11104:	mov	r1, r0
   11108:	mov	r0, r7
   1110c:	bl	10e30 <strcpy@plt>
   11110:	mov	r0, r8
   11114:	mov	r1, r6
   11118:	bl	1201c <lista_elemento@@Base>
   1111c:	mov	r1, #0
   11120:	mov	r2, #10
   11124:	bl	10de8 <strtol@plt>
   11128:	mov	r2, r0
   1112c:	mov	r0, r5
   11130:	mov	r1, r7
   11134:	bl	11c44 <heap_insere@@Base>
   11138:	add	r6, r6, #1
   1113c:	cmp	r4, r6
   11140:	bne	110f8 <simula_acontecimentos@@Base+0x40>
   11144:	cmp	r4, #1
   11148:	blt	1117c <simula_acontecimentos@@Base+0xc4>
   1114c:	ldr	r7, [pc, #60]	; 11190 <simula_acontecimentos@@Base+0xd8>
   11150:	mov	r6, #0
   11154:	add	r7, pc, r7
   11158:	ldr	r0, [r5, #8]
   1115c:	ldr	r0, [r0, r6, lsl #2]
   11160:	add	r6, r6, #1
   11164:	mov	r1, r6
   11168:	ldr	r2, [r0, #4]
   1116c:	mov	r0, r7
   11170:	bl	10df4 <printf@plt>
   11174:	cmp	r4, r6
   11178:	bne	11158 <simula_acontecimentos@@Base+0xa0>
   1117c:	mov	r0, r5
   11180:	bl	11b64 <heap_apaga@@Base>
   11184:	mov	r0, #1
   11188:	sub	sp, fp, #24
   1118c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11190:	andeq	r1, r0, r8, asr r4

00011194 <main@@Base>:
   11194:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11198:	add	fp, sp, #24
   1119c:	sub	sp, sp, #32
   111a0:	ldr	r0, [pc, #576]	; 113e8 <main@@Base+0x254>
   111a4:	add	r0, pc, r0
   111a8:	bl	10e3c <puts@plt>
   111ac:	mov	r0, #8
   111b0:	mov	r1, #1
   111b4:	bl	1143c <grafo_novo@@Base>
   111b8:	mov	r1, #1
   111bc:	mov	r2, #3
   111c0:	mov	r4, r0
   111c4:	bl	11528 <grafo_adiciona@@Base>
   111c8:	mov	r0, r4
   111cc:	mov	r1, #2
   111d0:	mov	r2, #3
   111d4:	bl	11528 <grafo_adiciona@@Base>
   111d8:	mov	r0, r4
   111dc:	mov	r1, #2
   111e0:	mov	r2, #4
   111e4:	bl	11528 <grafo_adiciona@@Base>
   111e8:	mov	r0, r4
   111ec:	mov	r1, #2
   111f0:	mov	r2, #5
   111f4:	bl	11528 <grafo_adiciona@@Base>
   111f8:	mov	r0, r4
   111fc:	mov	r1, #3
   11200:	mov	r2, #2
   11204:	bl	11528 <grafo_adiciona@@Base>
   11208:	mov	r0, r4
   1120c:	mov	r1, #3
   11210:	mov	r2, #4
   11214:	bl	11528 <grafo_adiciona@@Base>
   11218:	mov	r0, r4
   1121c:	mov	r1, #4
   11220:	mov	r2, #6
   11224:	bl	11528 <grafo_adiciona@@Base>
   11228:	mov	r0, r4
   1122c:	mov	r1, #4
   11230:	mov	r2, #7
   11234:	bl	11528 <grafo_adiciona@@Base>
   11238:	mov	r0, r4
   1123c:	mov	r1, #5
   11240:	mov	r2, #4
   11244:	bl	11528 <grafo_adiciona@@Base>
   11248:	mov	r0, r4
   1124c:	mov	r1, #5
   11250:	mov	r2, #6
   11254:	bl	11528 <grafo_adiciona@@Base>
   11258:	mov	r0, r4
   1125c:	mov	r1, #5
   11260:	mov	r2, #7
   11264:	bl	11528 <grafo_adiciona@@Base>
   11268:	mov	r0, r4
   1126c:	mov	r1, #6
   11270:	mov	r2, #7
   11274:	bl	11528 <grafo_adiciona@@Base>
   11278:	mov	r0, r4
   1127c:	mov	r1, #1
   11280:	mov	r2, #7
   11284:	mov	r3, #5
   11288:	bl	10fa4 <descobre_caminho@@Base>
   1128c:	mov	r5, r0
   11290:	ldr	r0, [pc, #340]	; 113ec <main@@Base+0x258>
   11294:	add	r0, pc, r0
   11298:	bl	10df4 <printf@plt>
   1129c:	mov	r0, r5
   112a0:	bl	1200c <lista_tamanho@@Base>
   112a4:	cmp	r0, #1
   112a8:	blt	112e4 <main@@Base+0x150>
   112ac:	ldr	r7, [pc, #316]	; 113f0 <main@@Base+0x25c>
   112b0:	mov	r6, #0
   112b4:	add	r7, pc, r7
   112b8:	mov	r0, r5
   112bc:	mov	r1, r6
   112c0:	bl	1201c <lista_elemento@@Base>
   112c4:	mov	r1, r0
   112c8:	mov	r0, r7
   112cc:	bl	10df4 <printf@plt>
   112d0:	mov	r0, r5
   112d4:	add	r6, r6, #1
   112d8:	bl	1200c <lista_tamanho@@Base>
   112dc:	cmp	r6, r0
   112e0:	blt	112b8 <main@@Base+0x124>
   112e4:	ldr	r0, [pc, #264]	; 113f4 <main@@Base+0x260>
   112e8:	add	r0, pc, r0
   112ec:	bl	10e3c <puts@plt>
   112f0:	mov	r0, r4
   112f4:	bl	1149c <grafo_apaga@@Base>
   112f8:	mov	r0, r5
   112fc:	bl	11fc4 <lista_apaga@@Base>
   11300:	ldr	r0, [pc, #240]	; 113f8 <main@@Base+0x264>
   11304:	add	r0, pc, r0
   11308:	bl	10e3c <puts@plt>
   1130c:	ldr	r0, [pc, #232]	; 113fc <main@@Base+0x268>
   11310:	ldr	r1, [pc, #232]	; 11400 <main@@Base+0x26c>
   11314:	add	r0, pc, r0
   11318:	add	r1, pc, r1
   1131c:	bl	10e0c <fopen@plt>
   11320:	mov	r8, r0
   11324:	bl	11f9c <lista_nova@@Base>
   11328:	mov	r5, r0
   1132c:	bl	11f9c <lista_nova@@Base>
   11330:	ldr	r1, [pc, #204]	; 11404 <main@@Base+0x270>
   11334:	mov	r6, r0
   11338:	add	r2, sp, #11
   1133c:	add	r3, sp, #6
   11340:	mov	r0, r8
   11344:	add	r1, pc, r1
   11348:	bl	10e00 <__isoc99_fscanf@plt>
   1134c:	cmp	r0, #2
   11350:	bne	113a0 <main@@Base+0x20c>
   11354:	ldr	r9, [pc, #172]	; 11408 <main@@Base+0x274>
   11358:	add	r7, sp, #11
   1135c:	add	r4, sp, #6
   11360:	add	r9, pc, r9
   11364:	mov	r0, r5
   11368:	mov	r1, r7
   1136c:	mvn	r2, #0
   11370:	bl	120fc <lista_insere@@Base>
   11374:	mov	r0, r6
   11378:	mov	r1, r4
   1137c:	mvn	r2, #0
   11380:	bl	120fc <lista_insere@@Base>
   11384:	mov	r0, r8
   11388:	mov	r1, r9
   1138c:	mov	r2, r7
   11390:	mov	r3, r4
   11394:	bl	10e00 <__isoc99_fscanf@plt>
   11398:	cmp	r0, #2
   1139c:	beq	11364 <main@@Base+0x1d0>
   113a0:	mov	r0, r5
   113a4:	mov	r1, r6
   113a8:	mov	r2, #4
   113ac:	bl	110b8 <simula_acontecimentos@@Base>
   113b0:	cmp	r0, #0
   113b4:	bne	113c4 <main@@Base+0x230>
   113b8:	ldr	r0, [pc, #76]	; 1140c <main@@Base+0x278>
   113bc:	add	r0, pc, r0
   113c0:	bl	10e3c <puts@plt>
   113c4:	mov	r0, r5
   113c8:	bl	11fc4 <lista_apaga@@Base>
   113cc:	mov	r0, r6
   113d0:	bl	11fc4 <lista_apaga@@Base>
   113d4:	mov	r0, r8
   113d8:	bl	10e90 <fclose@plt>
   113dc:	mov	r0, #0
   113e0:	sub	sp, fp, #24
   113e4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   113e8:	andeq	r1, r0, pc, asr r4
   113ec:	andeq	r1, r0, r0, lsr #6
   113f0:	andeq	r1, r0, ip, asr #6
   113f4:	andeq	r1, r0, lr, ror #6
   113f8:	andeq	r1, r0, r0, lsl r3
   113fc:	ldrdeq	r1, [r0], -sp
   11400:	andeq	r1, r0, r3, ror #5
   11404:			; <UNDEFINED> instruction: 0x000012b9
   11408:	muleq	r0, sp, r2
   1140c:	andeq	r1, r0, r9, ror #4

00011410 <cria_no@@Base>:
   11410:	push	{r4, sl, fp, lr}
   11414:	add	fp, sp, #8
   11418:	mov	r4, r0
   1141c:	mov	r0, #8
   11420:	bl	10e48 <malloc@plt>
   11424:	cmp	r0, #0
   11428:	moveq	r0, #0
   1142c:	movne	r1, #0
   11430:	strne	r4, [r0]
   11434:	strne	r1, [r0, #4]
   11438:	pop	{r4, sl, fp, pc}

0001143c <grafo_novo@@Base>:
   1143c:	push	{r4, r5, r6, sl, fp, lr}
   11440:	add	fp, sp, #16
   11444:	mov	r5, r0
   11448:	mov	r0, #12
   1144c:	mov	r6, r1
   11450:	bl	10e48 <malloc@plt>
   11454:	cmp	r0, #0
   11458:	beq	11490 <grafo_novo@@Base+0x54>
   1145c:	str	r6, [r0]
   11460:	mov	r4, r0
   11464:	str	r5, [r0, #4]
   11468:	mov	r0, r5
   1146c:	mov	r1, #8
   11470:	bl	10dd0 <calloc@plt>
   11474:	cmp	r0, #0
   11478:	str	r0, [r4, #8]
   1147c:	beq	11488 <grafo_novo@@Base+0x4c>
   11480:	mov	r0, r4
   11484:	pop	{r4, r5, r6, sl, fp, pc}
   11488:	mov	r0, r4
   1148c:	bl	10e18 <free@plt>
   11490:	mov	r4, #0
   11494:	mov	r0, r4
   11498:	pop	{r4, r5, r6, sl, fp, pc}

0001149c <grafo_apaga@@Base>:
   1149c:	cmp	r0, #0
   114a0:	bxeq	lr
   114a4:	push	{r4, r5, fp, lr}
   114a8:	add	fp, sp, #8
   114ac:	mov	r4, r0
   114b0:	ldr	r0, [r0, #8]
   114b4:	cmp	r0, #0
   114b8:	beq	1151c <grafo_apaga@@Base+0x80>
   114bc:	ldr	r2, [r4, #4]
   114c0:	cmp	r2, #1
   114c4:	blt	11518 <grafo_apaga@@Base+0x7c>
   114c8:	mov	r5, #0
   114cc:	b	114dc <grafo_apaga@@Base+0x40>
   114d0:	add	r5, r5, #1
   114d4:	cmp	r5, r2
   114d8:	bge	11518 <grafo_apaga@@Base+0x7c>
   114dc:	add	r3, r0, r5, lsl #3
   114e0:	ldr	r1, [r3, #4]!
   114e4:	cmp	r1, #0
   114e8:	beq	114d0 <grafo_apaga@@Base+0x34>
   114ec:	ldr	r0, [r1, #4]
   114f0:	str	r0, [r3]
   114f4:	mov	r0, r1
   114f8:	bl	10e18 <free@plt>
   114fc:	ldr	r0, [r4, #8]
   11500:	add	r3, r0, r5, lsl #3
   11504:	ldr	r1, [r3, #4]!
   11508:	cmp	r1, #0
   1150c:	bne	114ec <grafo_apaga@@Base+0x50>
   11510:	ldr	r2, [r4, #4]
   11514:	b	114d0 <grafo_apaga@@Base+0x34>
   11518:	bl	10e18 <free@plt>
   1151c:	mov	r0, r4
   11520:	pop	{r4, r5, fp, lr}
   11524:	b	10e18 <free@plt>

00011528 <grafo_adiciona@@Base>:
   11528:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1152c:	add	fp, sp, #24
   11530:	cmp	r0, #0
   11534:	beq	115c8 <grafo_adiciona@@Base+0xa0>
   11538:	ldr	r8, [r0, #8]
   1153c:	mov	r6, r0
   11540:	mov	r4, r2
   11544:	mov	r5, r1
   11548:	add	r7, r8, r1, lsl #3
   1154c:	ldr	r0, [r7, #4]!
   11550:	cmp	r0, #0
   11554:	beq	11570 <grafo_adiciona@@Base+0x48>
   11558:	ldr	r1, [r0]
   1155c:	cmp	r1, r4
   11560:	beq	115c8 <grafo_adiciona@@Base+0xa0>
   11564:	ldr	r0, [r0, #4]
   11568:	cmp	r0, #0
   1156c:	bne	11558 <grafo_adiciona@@Base+0x30>
   11570:	mov	r0, #8
   11574:	bl	10e48 <malloc@plt>
   11578:	str	r4, [r0]
   1157c:	ldr	r1, [r7]
   11580:	str	r1, [r0, #4]
   11584:	str	r0, [r7]
   11588:	ldr	r0, [r8, r5, lsl #3]
   1158c:	add	r0, r0, #1
   11590:	str	r0, [r8, r5, lsl #3]
   11594:	ldr	r0, [r6]
   11598:	cmp	r0, #0
   1159c:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   115a0:	mov	r0, #8
   115a4:	bl	10e48 <malloc@plt>
   115a8:	add	r1, r8, r4, lsl #3
   115ac:	str	r5, [r0]
   115b0:	ldr	r2, [r1, #4]
   115b4:	str	r2, [r0, #4]
   115b8:	ldr	r2, [r8, r4, lsl #3]
   115bc:	add	r2, r2, #1
   115c0:	str	r2, [r8, r4, lsl #3]
   115c4:	str	r0, [r1, #4]
   115c8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000115cc <grafo_existe@@Base>:
   115cc:	mov	r3, r0
   115d0:	mov	r0, #0
   115d4:	cmp	r3, #0
   115d8:	beq	11600 <grafo_existe@@Base+0x34>
   115dc:	ldr	r3, [r3, #8]
   115e0:	add	r1, r3, r1, lsl #3
   115e4:	ldr	r1, [r1, #4]
   115e8:	cmp	r1, #0
   115ec:	bxeq	lr
   115f0:	ldr	r3, [r1]
   115f4:	cmp	r3, r2
   115f8:	bne	115e4 <grafo_existe@@Base+0x18>
   115fc:	mov	r0, #1
   11600:	bx	lr

00011604 <grafo_remove@@Base>:
   11604:	push	{r4, r5, r6, sl, fp, lr}
   11608:	add	fp, sp, #16
   1160c:	cmp	r0, #0
   11610:	beq	116cc <grafo_remove@@Base+0xc8>
   11614:	mov	r6, r0
   11618:	ldr	r0, [r0, #8]
   1161c:	mov	r4, r1
   11620:	add	r1, r0, r1, lsl #3
   11624:	ldr	r0, [r1, #4]!
   11628:	cmp	r0, #0
   1162c:	beq	116cc <grafo_remove@@Base+0xc8>
   11630:	mov	r5, r2
   11634:	ldr	r2, [r0]
   11638:	cmp	r2, r5
   1163c:	beq	11660 <grafo_remove@@Base+0x5c>
   11640:	mov	r1, r0
   11644:	ldr	r0, [r0, #4]
   11648:	cmp	r0, #0
   1164c:	beq	1166c <grafo_remove@@Base+0x68>
   11650:	ldr	r2, [r0]
   11654:	cmp	r2, r5
   11658:	bne	11640 <grafo_remove@@Base+0x3c>
   1165c:	add	r1, r1, #4
   11660:	ldr	r2, [r0, #4]
   11664:	str	r2, [r1]
   11668:	bl	10e18 <free@plt>
   1166c:	ldr	r0, [r6]
   11670:	cmp	r0, #0
   11674:	popne	{r4, r5, r6, sl, fp, pc}
   11678:	ldr	r0, [r6, #8]
   1167c:	add	r1, r0, r5, lsl #3
   11680:	ldr	r0, [r1, #4]!
   11684:	ldr	r2, [r0]
   11688:	cmp	r2, r4
   1168c:	bne	116a0 <grafo_remove@@Base+0x9c>
   11690:	ldr	r2, [r0, #4]
   11694:	str	r2, [r1]
   11698:	pop	{r4, r5, r6, sl, fp, lr}
   1169c:	b	10e18 <free@plt>
   116a0:	mov	r1, r0
   116a4:	ldr	r0, [r0, #4]
   116a8:	cmp	r0, #0
   116ac:	beq	116cc <grafo_remove@@Base+0xc8>
   116b0:	ldr	r2, [r0]
   116b4:	cmp	r2, r4
   116b8:	bne	116a0 <grafo_remove@@Base+0x9c>
   116bc:	ldr	r2, [r0, #4]
   116c0:	str	r2, [r1, #4]
   116c4:	pop	{r4, r5, r6, sl, fp, lr}
   116c8:	b	10e18 <free@plt>
   116cc:	pop	{r4, r5, r6, sl, fp, pc}

000116d0 <grafo_imprime@@Base>:
   116d0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   116d4:	add	fp, sp, #24
   116d8:	mov	r4, r0
   116dc:	ldr	r0, [r0, #4]
   116e0:	cmp	r0, #1
   116e4:	blt	11764 <grafo_imprime@@Base+0x94>
   116e8:	ldr	r9, [pc, #120]	; 11768 <grafo_imprime@@Base+0x98>
   116ec:	ldr	r8, [pc, #120]	; 1176c <grafo_imprime@@Base+0x9c>
   116f0:	ldr	r7, [pc, #120]	; 11770 <grafo_imprime@@Base+0xa0>
   116f4:	mov	r5, #0
   116f8:	add	r9, pc, r9
   116fc:	add	r8, pc, r8
   11700:	add	r7, pc, r7
   11704:	b	11720 <grafo_imprime@@Base+0x50>
   11708:	mov	r0, #10
   1170c:	bl	10e84 <putchar@plt>
   11710:	ldr	r0, [r4, #4]
   11714:	add	r5, r5, #1
   11718:	cmp	r5, r0
   1171c:	bge	11764 <grafo_imprime@@Base+0x94>
   11720:	ldr	r0, [r4, #8]
   11724:	mov	r1, r5
   11728:	add	r0, r0, r5, lsl #3
   1172c:	ldr	r6, [r0, #4]
   11730:	mov	r0, r9
   11734:	bl	10df4 <printf@plt>
   11738:	cmp	r6, #0
   1173c:	beq	11708 <grafo_imprime@@Base+0x38>
   11740:	ldr	r1, [r6]
   11744:	mov	r0, r8
   11748:	bl	10df4 <printf@plt>
   1174c:	ldr	r6, [r6, #4]
   11750:	cmp	r6, #0
   11754:	beq	11708 <grafo_imprime@@Base+0x38>
   11758:	ldr	r1, [r6]
   1175c:	mov	r0, r7
   11760:	b	11748 <grafo_imprime@@Base+0x78>
   11764:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11768:	andeq	r0, r0, r7, asr #30
   1176c:	andeq	r0, r0, sl, asr #30
   11770:	andeq	r0, r0, r4, asr #30

00011774 <dfs_helper@@Base>:
   11774:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11778:	add	fp, sp, #24
   1177c:	sub	sp, sp, #8
   11780:	ldr	r9, [fp, #8]
   11784:	mov	r4, r1
   11788:	mov	r6, r0
   1178c:	mov	r0, #0
   11790:	ldr	r1, [r9, r1, lsl #2]
   11794:	cmp	r1, #0
   11798:	beq	117a4 <dfs_helper@@Base+0x30>
   1179c:	sub	sp, fp, #24
   117a0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   117a4:	mov	r5, r2
   117a8:	cmp	r4, r2
   117ac:	str	r3, [r9, r4, lsl #2]
   117b0:	bne	117c0 <dfs_helper@@Base+0x4c>
   117b4:	mov	r0, r3
   117b8:	sub	sp, fp, #24
   117bc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   117c0:	ldr	r0, [r6, #4]
   117c4:	cmp	r0, #1
   117c8:	blt	1182c <dfs_helper@@Base+0xb8>
   117cc:	add	r8, r3, #1
   117d0:	mov	r7, #0
   117d4:	b	117e4 <dfs_helper@@Base+0x70>
   117d8:	add	r7, r7, #1
   117dc:	cmp	r7, r0
   117e0:	bge	1182c <dfs_helper@@Base+0xb8>
   117e4:	ldr	r1, [r6, #8]
   117e8:	add	r1, r1, r4, lsl #3
   117ec:	ldr	r1, [r1, #4]
   117f0:	cmp	r1, #0
   117f4:	beq	117d8 <dfs_helper@@Base+0x64>
   117f8:	ldr	r2, [r1]
   117fc:	cmp	r2, r7
   11800:	bne	117ec <dfs_helper@@Base+0x78>
   11804:	mov	r0, r6
   11808:	mov	r1, r7
   1180c:	mov	r2, r5
   11810:	mov	r3, r8
   11814:	str	r9, [sp]
   11818:	bl	11774 <dfs_helper@@Base>
   1181c:	cmp	r0, #0
   11820:	bne	1179c <dfs_helper@@Base+0x28>
   11824:	ldr	r0, [r6, #4]
   11828:	b	117d8 <dfs_helper@@Base+0x64>
   1182c:	mov	r0, #0
   11830:	str	r0, [r9, r4, lsl #2]
   11834:	sub	sp, fp, #24
   11838:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001183c <grafo_dfs@@Base>:
   1183c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11840:	add	fp, sp, #24
   11844:	sub	sp, sp, #8
   11848:	cmp	r0, #0
   1184c:	beq	11900 <grafo_dfs@@Base+0xc4>
   11850:	mov	r4, r0
   11854:	ldr	r0, [r0, #4]
   11858:	mov	r7, r1
   1185c:	mov	r1, #4
   11860:	mov	r8, r3
   11864:	mov	r6, r2
   11868:	bl	10dd0 <calloc@plt>
   1186c:	mov	r5, r0
   11870:	str	r0, [sp]
   11874:	mov	r0, r4
   11878:	mov	r1, r7
   1187c:	mov	r2, r6
   11880:	mov	r3, #1
   11884:	bl	11774 <dfs_helper@@Base>
   11888:	cmp	r0, #0
   1188c:	beq	11908 <grafo_dfs@@Base+0xcc>
   11890:	mov	r1, #4
   11894:	mov	r7, r0
   11898:	bl	10dd0 <calloc@plt>
   1189c:	mov	r6, r0
   118a0:	cmp	r7, #1
   118a4:	blt	118f0 <grafo_dfs@@Base+0xb4>
   118a8:	ldr	r0, [r4, #4]
   118ac:	mov	r1, #0
   118b0:	b	118c0 <grafo_dfs@@Base+0x84>
   118b4:	str	r3, [r6, r2, lsl #2]
   118b8:	cmp	r1, r7
   118bc:	beq	118f0 <grafo_dfs@@Base+0xb4>
   118c0:	mov	r2, r1
   118c4:	add	r1, r1, #1
   118c8:	cmp	r0, #1
   118cc:	blt	118b8 <grafo_dfs@@Base+0x7c>
   118d0:	mov	r3, #0
   118d4:	ldr	r4, [r5, r3, lsl #2]
   118d8:	cmp	r4, r1
   118dc:	beq	118b4 <grafo_dfs@@Base+0x78>
   118e0:	add	r3, r3, #1
   118e4:	cmp	r3, r0
   118e8:	blt	118d4 <grafo_dfs@@Base+0x98>
   118ec:	b	118b8 <grafo_dfs@@Base+0x7c>
   118f0:	mov	r0, r5
   118f4:	str	r7, [r8]
   118f8:	bl	10e18 <free@plt>
   118fc:	b	11918 <grafo_dfs@@Base+0xdc>
   11900:	mov	r6, #0
   11904:	b	11918 <grafo_dfs@@Base+0xdc>
   11908:	mov	r0, r5
   1190c:	bl	10e18 <free@plt>
   11910:	mov	r6, #0
   11914:	str	r6, [r8]
   11918:	mov	r0, r6
   1191c:	sub	sp, fp, #24
   11920:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00011924 <grafo_bfs@@Base>:
   11924:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11928:	add	fp, sp, #28
   1192c:	sub	sp, sp, #12
   11930:	cmp	r0, #0
   11934:	beq	11a48 <grafo_bfs@@Base+0x124>
   11938:	ldr	r7, [r0, #4]
   1193c:	mov	r8, r1
   11940:	mov	sl, r0
   11944:	mov	r1, #4
   11948:	str	r2, [sp, #8]
   1194c:	str	r3, [sp, #4]
   11950:	mov	r0, r7
   11954:	bl	10dd0 <calloc@plt>
   11958:	mov	r5, r0
   1195c:	mov	r0, r7
   11960:	mov	r1, #4
   11964:	bl	10dd0 <calloc@plt>
   11968:	mov	r9, r0
   1196c:	cmp	r7, #1
   11970:	blt	11984 <grafo_bfs@@Base+0x60>
   11974:	lsl	r2, r7, #2
   11978:	mov	r0, r5
   1197c:	mov	r1, #255	; 0xff
   11980:	bl	10e78 <memset@plt>
   11984:	ldr	ip, [sp, #8]
   11988:	str	r8, [r5, r8, lsl #2]
   1198c:	str	r8, [r9]
   11990:	mov	r0, #0
   11994:	mov	r1, #1
   11998:	add	r0, r0, #1
   1199c:	cmp	r7, #1
   119a0:	sdiv	r2, r0, r7
   119a4:	mls	r0, r2, r7, r0
   119a8:	blt	11a18 <grafo_bfs@@Base+0xf4>
   119ac:	ldr	r2, [sl, #8]
   119b0:	mov	r3, #0
   119b4:	add	r2, r2, r8, lsl #3
   119b8:	ldr	r6, [r2, #4]
   119bc:	b	119d8 <grafo_bfs@@Base+0xb4>
   119c0:	ldr	r2, [r5, r3, lsl #2]
   119c4:	cmn	r2, #1
   119c8:	beq	11a00 <grafo_bfs@@Base+0xdc>
   119cc:	add	r3, r3, #1
   119d0:	cmp	r3, r7
   119d4:	beq	11a18 <grafo_bfs@@Base+0xf4>
   119d8:	cmp	r6, #0
   119dc:	mov	r2, r6
   119e0:	beq	119cc <grafo_bfs@@Base+0xa8>
   119e4:	ldr	r4, [r2]
   119e8:	cmp	r4, r3
   119ec:	beq	119c0 <grafo_bfs@@Base+0x9c>
   119f0:	ldr	r2, [r2, #4]
   119f4:	cmp	r2, #0
   119f8:	bne	119e4 <grafo_bfs@@Base+0xc0>
   119fc:	b	119cc <grafo_bfs@@Base+0xa8>
   11a00:	str	r3, [r9, r1, lsl #2]
   11a04:	add	r1, r1, #1
   11a08:	str	r8, [r5, r3, lsl #2]
   11a0c:	sdiv	r2, r1, r7
   11a10:	mls	r1, r2, r7, r1
   11a14:	b	119cc <grafo_bfs@@Base+0xa8>
   11a18:	cmp	r0, r1
   11a1c:	beq	11a28 <grafo_bfs@@Base+0x104>
   11a20:	ldr	r8, [r9, r0, lsl #2]
   11a24:	b	11998 <grafo_bfs@@Base+0x74>
   11a28:	ldr	r4, [r5, ip, lsl #2]
   11a2c:	cmp	r4, #0
   11a30:	bmi	11a50 <grafo_bfs@@Base+0x12c>
   11a34:	cmp	r4, ip
   11a38:	bne	11a58 <grafo_bfs@@Base+0x134>
   11a3c:	mov	r8, #2
   11a40:	mov	r7, #1
   11a44:	b	11a78 <grafo_bfs@@Base+0x154>
   11a48:	mov	sl, #0
   11a4c:	b	11afc <grafo_bfs@@Base+0x1d8>
   11a50:	mov	r7, #0
   11a54:	b	11ae4 <grafo_bfs@@Base+0x1c0>
   11a58:	mov	r7, #1
   11a5c:	mov	r0, r4
   11a60:	ldr	r1, [r5, r0, lsl #2]
   11a64:	add	r7, r7, #1
   11a68:	cmp	r1, r0
   11a6c:	mov	r0, r1
   11a70:	bne	11a60 <grafo_bfs@@Base+0x13c>
   11a74:	add	r8, r7, #1
   11a78:	lsl	r0, r7, #2
   11a7c:	bl	10e48 <malloc@plt>
   11a80:	mov	sl, r0
   11a84:	add	r3, r0, r7, lsl #2
   11a88:	ldr	r0, [sp, #8]
   11a8c:	cmp	r8, #2
   11a90:	str	r0, [r3, #-4]
   11a94:	beq	11ae4 <grafo_bfs@@Base+0x1c0>
   11a98:	sub	r0, r8, #2
   11a9c:	mov	r1, #2
   11aa0:	cmp	r8, #3
   11aa4:	and	r0, r0, #1
   11aa8:	beq	11ad8 <grafo_bfs@@Base+0x1b4>
   11aac:	sub	r2, r8, r0
   11ab0:	sub	r3, r3, #12
   11ab4:	mov	r1, #2
   11ab8:	ldr	r6, [r5, r4, lsl #2]
   11abc:	str	r4, [r3, #4]
   11ac0:	add	r1, r1, #2
   11ac4:	cmp	r2, r1
   11ac8:	ldr	r4, [r5, r6, lsl #2]
   11acc:	str	r6, [r3]
   11ad0:	sub	r3, r3, #8
   11ad4:	bne	11ab8 <grafo_bfs@@Base+0x194>
   11ad8:	cmp	r0, #0
   11adc:	subne	r0, r7, r1
   11ae0:	strne	r4, [sl, r0, lsl #2]
   11ae4:	mov	r0, r9
   11ae8:	bl	10e18 <free@plt>
   11aec:	mov	r0, r5
   11af0:	bl	10e18 <free@plt>
   11af4:	ldr	r0, [sp, #4]
   11af8:	str	r7, [r0]
   11afc:	mov	r0, sl
   11b00:	sub	sp, fp, #28
   11b04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00011b08 <heap_nova@@Base>:
   11b08:	push	{r4, r5, fp, lr}
   11b0c:	add	fp, sp, #8
   11b10:	mov	r5, r0
   11b14:	mov	r0, #12
   11b18:	bl	10e48 <malloc@plt>
   11b1c:	cmp	r0, #0
   11b20:	beq	11b58 <heap_nova@@Base+0x50>
   11b24:	mov	r4, r0
   11b28:	mov	r0, #0
   11b2c:	mov	r1, #4
   11b30:	stm	r4, {r0, r5}
   11b34:	mov	r0, r5
   11b38:	bl	10dd0 <calloc@plt>
   11b3c:	cmp	r0, #0
   11b40:	str	r0, [r4, #8]
   11b44:	beq	11b50 <heap_nova@@Base+0x48>
   11b48:	mov	r0, r4
   11b4c:	pop	{r4, r5, fp, pc}
   11b50:	mov	r0, r4
   11b54:	bl	10e18 <free@plt>
   11b58:	mov	r4, #0
   11b5c:	mov	r0, r4
   11b60:	pop	{r4, r5, fp, pc}

00011b64 <heap_apaga@@Base>:
   11b64:	cmp	r0, #0
   11b68:	bxeq	lr
   11b6c:	push	{r4, r5, r6, sl, fp, lr}
   11b70:	add	fp, sp, #16
   11b74:	ldr	r1, [r0]
   11b78:	mov	r4, r0
   11b7c:	ldr	r0, [r0, #8]
   11b80:	cmp	r1, #1
   11b84:	blt	11bc4 <heap_apaga@@Base+0x60>
   11b88:	mov	r5, #0
   11b8c:	mov	r6, #0
   11b90:	ldr	r0, [r0, r6, lsl #2]
   11b94:	ldr	r0, [r0, #4]
   11b98:	bl	10e18 <free@plt>
   11b9c:	ldr	r0, [r4, #8]
   11ba0:	ldr	r0, [r0, r6, lsl #2]
   11ba4:	bl	10e18 <free@plt>
   11ba8:	ldr	r0, [r4, #8]
   11bac:	str	r5, [r0, r6, lsl #2]
   11bb0:	add	r6, r6, #1
   11bb4:	ldr	r1, [r4]
   11bb8:	ldr	r0, [r4, #8]
   11bbc:	cmp	r6, r1
   11bc0:	blt	11b90 <heap_apaga@@Base+0x2c>
   11bc4:	bl	10e18 <free@plt>
   11bc8:	mov	r0, r4
   11bcc:	pop	{r4, r5, r6, sl, fp, lr}
   11bd0:	b	10e18 <free@plt>

00011bd4 <elemento_cria@@Base>:
   11bd4:	push	{r4, r5, r6, r7, fp, lr}
   11bd8:	add	fp, sp, #16
   11bdc:	mov	r4, r0
   11be0:	mov	r0, #8
   11be4:	mov	r7, r1
   11be8:	bl	10e48 <malloc@plt>
   11bec:	mov	r5, #0
   11bf0:	cmp	r0, #0
   11bf4:	beq	11c2c <elemento_cria@@Base+0x58>
   11bf8:	mov	r6, r0
   11bfc:	mov	r0, r7
   11c00:	bl	10e6c <strlen@plt>
   11c04:	add	r0, r0, #1
   11c08:	mov	r1, #1
   11c0c:	bl	10dd0 <calloc@plt>
   11c10:	cmp	r0, #0
   11c14:	str	r0, [r6, #4]
   11c18:	beq	11c34 <elemento_cria@@Base+0x60>
   11c1c:	mov	r1, r7
   11c20:	bl	10e30 <strcpy@plt>
   11c24:	mov	r5, r6
   11c28:	str	r4, [r6]
   11c2c:	mov	r0, r5
   11c30:	pop	{r4, r5, r6, r7, fp, pc}
   11c34:	mov	r0, r6
   11c38:	bl	10e18 <free@plt>
   11c3c:	mov	r0, r5
   11c40:	pop	{r4, r5, r6, r7, fp, pc}

00011c44 <heap_insere@@Base>:
   11c44:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11c48:	add	fp, sp, #24
   11c4c:	mov	r4, r0
   11c50:	mov	r7, r1
   11c54:	ldr	r0, [r0]
   11c58:	mov	r5, #0
   11c5c:	ldr	r1, [r4, #4]
   11c60:	cmp	r0, r1
   11c64:	bge	11d18 <heap_insere@@Base+0xd4>
   11c68:	mov	r0, #8
   11c6c:	mov	r8, r2
   11c70:	bl	10e48 <malloc@plt>
   11c74:	cmp	r0, #0
   11c78:	beq	11d18 <heap_insere@@Base+0xd4>
   11c7c:	mov	r6, r0
   11c80:	mov	r0, r7
   11c84:	bl	10e6c <strlen@plt>
   11c88:	add	r0, r0, #1
   11c8c:	mov	r1, #1
   11c90:	bl	10dd0 <calloc@plt>
   11c94:	cmp	r0, #0
   11c98:	str	r0, [r6, #4]
   11c9c:	beq	11d20 <heap_insere@@Base+0xdc>
   11ca0:	mov	r1, r7
   11ca4:	bl	10e30 <strcpy@plt>
   11ca8:	str	r8, [r6]
   11cac:	ldr	r0, [r4]
   11cb0:	ldr	r1, [r4, #8]
   11cb4:	str	r6, [r1, r0, lsl #2]
   11cb8:	add	r1, r0, #1
   11cbc:	cmp	r0, #0
   11cc0:	str	r1, [r4]
   11cc4:	beq	11d14 <heap_insere@@Base+0xd0>
   11cc8:	ldr	r1, [r4, #8]
   11ccc:	ldr	r2, [r1, r0, lsl #2]
   11cd0:	cmp	r2, #0
   11cd4:	subne	r3, r0, #1
   11cd8:	addne	r3, r3, r3, lsr #31
   11cdc:	asrne	r3, r3, #1
   11ce0:	ldrne	r7, [r1, r3, lsl #2]
   11ce4:	cmpne	r7, #0
   11ce8:	beq	11d14 <heap_insere@@Base+0xd0>
   11cec:	ldr	r6, [r7]
   11cf0:	ldr	r5, [r2]
   11cf4:	cmp	r5, r6
   11cf8:	bge	11d14 <heap_insere@@Base+0xd0>
   11cfc:	str	r2, [r1, r3, lsl #2]
   11d00:	cmp	r0, #2
   11d04:	ldr	r1, [r4, #8]
   11d08:	str	r7, [r1, r0, lsl #2]
   11d0c:	mov	r0, r3
   11d10:	bhi	11cc8 <heap_insere@@Base+0x84>
   11d14:	mov	r5, #1
   11d18:	mov	r0, r5
   11d1c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11d20:	mov	r0, r6
   11d24:	bl	10e18 <free@plt>
   11d28:	mov	r0, r5
   11d2c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00011d30 <menor_que@@Base>:
   11d30:	mov	r2, r0
   11d34:	mov	r0, #0
   11d38:	cmp	r2, #0
   11d3c:	cmpne	r1, #0
   11d40:	bne	11d48 <menor_que@@Base+0x18>
   11d44:	bx	lr
   11d48:	ldr	r1, [r1]
   11d4c:	ldr	r2, [r2]
   11d50:	mov	r0, #0
   11d54:	cmp	r2, r1
   11d58:	movwlt	r0, #1
   11d5c:	bx	lr

00011d60 <heap_remove@@Base>:
   11d60:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11d64:	add	fp, sp, #24
   11d68:	mov	r8, #0
   11d6c:	cmp	r0, #0
   11d70:	beq	11e50 <heap_remove@@Base+0xf0>
   11d74:	mov	r5, r0
   11d78:	ldr	r0, [r0]
   11d7c:	cmp	r0, #1
   11d80:	blt	11e50 <heap_remove@@Base+0xf0>
   11d84:	ldr	r0, [r5, #8]
   11d88:	ldr	r0, [r0]
   11d8c:	ldr	r8, [r0, #4]
   11d90:	bl	10e18 <free@plt>
   11d94:	ldr	r0, [r5]
   11d98:	ldr	r1, [r5, #8]
   11d9c:	sub	lr, r0, #1
   11da0:	str	lr, [r5]
   11da4:	cmp	lr, #2
   11da8:	ldr	r2, [r1, lr, lsl #2]
   11dac:	str	r2, [r1]
   11db0:	mov	r1, #0
   11db4:	ldr	r2, [r5, #8]
   11db8:	str	r1, [r2, lr, lsl #2]
   11dbc:	blt	11e50 <heap_remove@@Base+0xf0>
   11dc0:	mov	ip, #1
   11dc4:	mov	r4, #1
   11dc8:	mov	r2, #0
   11dcc:	add	r3, r1, #2
   11dd0:	ldr	r1, [r5, #8]
   11dd4:	cmp	r3, lr
   11dd8:	bge	11df0 <heap_remove@@Base+0x90>
   11ddc:	ldr	r6, [r1, r3, lsl #2]
   11de0:	cmp	r6, #0
   11de4:	ldrne	r7, [r1, r4, lsl #2]
   11de8:	cmpne	r7, #0
   11dec:	bne	11e3c <heap_remove@@Base+0xdc>
   11df0:	mov	r3, r4
   11df4:	ldr	r4, [r1, r3, lsl #2]
   11df8:	cmp	r4, #0
   11dfc:	ldrne	r6, [r1, r2, lsl #2]
   11e00:	cmpne	r6, #0
   11e04:	beq	11e50 <heap_remove@@Base+0xf0>
   11e08:	ldr	r7, [r6]
   11e0c:	ldr	r0, [r4]
   11e10:	cmp	r0, r7
   11e14:	bge	11e50 <heap_remove@@Base+0xf0>
   11e18:	str	r6, [r1, r3, lsl #2]
   11e1c:	lsl	r1, r3, #1
   11e20:	ldr	r0, [r5, #8]
   11e24:	str	r4, [r0, r2, lsl #2]
   11e28:	orr	r4, ip, r3, lsl #1
   11e2c:	mov	r2, r3
   11e30:	cmp	r4, lr
   11e34:	blt	11dcc <heap_remove@@Base+0x6c>
   11e38:	b	11e50 <heap_remove@@Base+0xf0>
   11e3c:	ldr	r7, [r7]
   11e40:	ldr	r6, [r6]
   11e44:	cmp	r6, r7
   11e48:	movge	r3, r4
   11e4c:	b	11df4 <heap_remove@@Base+0x94>
   11e50:	mov	r0, r8
   11e54:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00011e58 <mostraHeap@@Base>:
   11e58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11e5c:	add	fp, sp, #28
   11e60:	sub	sp, sp, #4
   11e64:	mov	r9, r0
   11e68:	ldr	r0, [r0]
   11e6c:	cmp	r0, r1
   11e70:	ble	11f18 <mostraHeap@@Base+0xc0>
   11e74:	mov	sl, r1
   11e78:	mov	r7, #0
   11e7c:	cmp	r1, #1
   11e80:	blt	11ea0 <mostraHeap@@Base+0x48>
   11e84:	mov	r0, sl
   11e88:	sub	r1, r0, #1
   11e8c:	add	r7, r7, #1
   11e90:	add	r0, r1, r1, lsr #31
   11e94:	cmp	r1, #1
   11e98:	asr	r0, r0, #1
   11e9c:	bgt	11e88 <mostraHeap@@Base+0x30>
   11ea0:	mov	r0, #1
   11ea4:	orr	r1, r0, sl, lsl #1
   11ea8:	mov	r0, r9
   11eac:	bl	11e58 <mostraHeap@@Base>
   11eb0:	lsl	r8, sl, #1
   11eb4:	cmp	r7, #0
   11eb8:	beq	11ee0 <mostraHeap@@Base+0x88>
   11ebc:	ldr	r6, [pc, #100]	; 11f28 <mostraHeap@@Base+0xd0>
   11ec0:	add	r4, r7, r7, lsl #1
   11ec4:	mov	r5, #0
   11ec8:	add	r6, pc, r6
   11ecc:	mov	r0, r6
   11ed0:	bl	10df4 <printf@plt>
   11ed4:	add	r5, r5, #1
   11ed8:	cmp	r5, r4
   11edc:	bcc	11ecc <mostraHeap@@Base+0x74>
   11ee0:	ldr	r0, [r9, #8]
   11ee4:	ldr	r0, [r0, sl, lsl #2]
   11ee8:	ldr	r2, [r0]
   11eec:	ldr	r1, [r0, #4]
   11ef0:	ldr	r0, [pc, #52]	; 11f2c <mostraHeap@@Base+0xd4>
   11ef4:	add	r0, pc, r0
   11ef8:	bl	10df4 <printf@plt>
   11efc:	add	r1, r8, #2
   11f00:	mov	r0, r9
   11f04:	bl	11e58 <mostraHeap@@Base>
   11f08:	cmp	r7, #0
   11f0c:	beq	11f18 <mostraHeap@@Base+0xc0>
   11f10:	sub	sp, fp, #28
   11f14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f18:	mov	r0, #10
   11f1c:	sub	sp, fp, #28
   11f20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11f24:	b	10e84 <putchar@plt>
   11f28:	andeq	r0, r0, r1, lsl #15
   11f2c:	andeq	r0, r0, fp, asr r7

00011f30 <novo_str@@Base>:
   11f30:	push	{r4, r5, r6, sl, fp, lr}
   11f34:	add	fp, sp, #16
   11f38:	mov	r6, r0
   11f3c:	mov	r0, #8
   11f40:	bl	10e48 <malloc@plt>
   11f44:	mov	r5, #0
   11f48:	cmp	r0, #0
   11f4c:	beq	11f84 <novo_str@@Base+0x54>
   11f50:	mov	r4, r0
   11f54:	mov	r0, r6
   11f58:	bl	10e6c <strlen@plt>
   11f5c:	add	r0, r0, #1
   11f60:	bl	10e48 <malloc@plt>
   11f64:	cmp	r0, #0
   11f68:	str	r0, [r4]
   11f6c:	beq	11f8c <novo_str@@Base+0x5c>
   11f70:	mov	r1, r6
   11f74:	bl	10e30 <strcpy@plt>
   11f78:	mov	r0, #0
   11f7c:	mov	r5, r4
   11f80:	str	r0, [r4, #4]
   11f84:	mov	r0, r5
   11f88:	pop	{r4, r5, r6, sl, fp, pc}
   11f8c:	mov	r0, r4
   11f90:	bl	10e18 <free@plt>
   11f94:	mov	r0, r5
   11f98:	pop	{r4, r5, r6, sl, fp, pc}

00011f9c <lista_nova@@Base>:
   11f9c:	push	{fp, lr}
   11fa0:	mov	fp, sp
   11fa4:	mov	r0, #8
   11fa8:	bl	10e48 <malloc@plt>
   11fac:	cmp	r0, #0
   11fb0:	moveq	r0, #0
   11fb4:	movne	r1, #0
   11fb8:	strne	r1, [r0]
   11fbc:	strne	r1, [r0, #4]
   11fc0:	pop	{fp, pc}

00011fc4 <lista_apaga@@Base>:
   11fc4:	cmp	r0, #0
   11fc8:	bxeq	lr
   11fcc:	push	{r4, r5, fp, lr}
   11fd0:	add	fp, sp, #8
   11fd4:	mov	r4, r0
   11fd8:	ldr	r5, [r4]
   11fdc:	cmp	r5, #0
   11fe0:	beq	12000 <lista_apaga@@Base+0x3c>
   11fe4:	ldr	r0, [r5, #4]
   11fe8:	str	r0, [r4]
   11fec:	ldr	r0, [r5]
   11ff0:	bl	10e18 <free@plt>
   11ff4:	mov	r0, r5
   11ff8:	bl	10e18 <free@plt>
   11ffc:	b	11fd8 <lista_apaga@@Base+0x14>
   12000:	mov	r0, r4
   12004:	pop	{r4, r5, fp, lr}
   12008:	b	10e18 <free@plt>

0001200c <lista_tamanho@@Base>:
   1200c:	cmp	r0, #0
   12010:	ldrne	r0, [r0, #4]
   12014:	mvneq	r0, #0
   12018:	bx	lr

0001201c <lista_elemento@@Base>:
   1201c:	mov	r2, r0
   12020:	mov	r0, #0
   12024:	cmp	r2, #0
   12028:	beq	1206c <lista_elemento@@Base+0x50>
   1202c:	cmp	r1, #0
   12030:	bxmi	lr
   12034:	ldr	r2, [r2]
   12038:	cmp	r1, #1
   1203c:	blt	12064 <lista_elemento@@Base+0x48>
   12040:	cmp	r2, #0
   12044:	beq	12064 <lista_elemento@@Base+0x48>
   12048:	mov	r3, #1
   1204c:	ldr	r2, [r2, #4]
   12050:	cmp	r3, r1
   12054:	bge	12064 <lista_elemento@@Base+0x48>
   12058:	add	r3, r3, #1
   1205c:	cmp	r2, #0
   12060:	bne	1204c <lista_elemento@@Base+0x30>
   12064:	cmp	r2, #0
   12068:	ldrne	r0, [r2]
   1206c:	bx	lr

00012070 <lista_atribui@@Base>:
   12070:	push	{r4, r5, r6, r7, fp, lr}
   12074:	add	fp, sp, #16
   12078:	mov	r4, r1
   1207c:	mov	r1, r0
   12080:	mvn	r0, #0
   12084:	cmp	r1, #0
   12088:	beq	120f8 <lista_atribui@@Base+0x88>
   1208c:	cmp	r4, #0
   12090:	bmi	120f8 <lista_atribui@@Base+0x88>
   12094:	ldr	r7, [r1]
   12098:	mov	r5, r2
   1209c:	cmp	r4, #1
   120a0:	blt	120c8 <lista_atribui@@Base+0x58>
   120a4:	cmp	r7, #0
   120a8:	beq	120c8 <lista_atribui@@Base+0x58>
   120ac:	mov	r1, #1
   120b0:	ldr	r7, [r7, #4]
   120b4:	cmp	r1, r4
   120b8:	bge	120c8 <lista_atribui@@Base+0x58>
   120bc:	add	r1, r1, #1
   120c0:	cmp	r7, #0
   120c4:	bne	120b0 <lista_atribui@@Base+0x40>
   120c8:	cmp	r7, #0
   120cc:	beq	120f8 <lista_atribui@@Base+0x88>
   120d0:	ldr	r6, [r7]
   120d4:	mov	r0, r5
   120d8:	bl	10e6c <strlen@plt>
   120dc:	add	r1, r0, #1
   120e0:	mov	r0, r6
   120e4:	bl	10e24 <realloc@plt>
   120e8:	mov	r1, r5
   120ec:	str	r0, [r7]
   120f0:	bl	10e30 <strcpy@plt>
   120f4:	mov	r0, r4
   120f8:	pop	{r4, r5, r6, r7, fp, pc}

000120fc <lista_insere@@Base>:
   120fc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12100:	add	fp, sp, #24
   12104:	cmp	r0, #0
   12108:	beq	121b0 <lista_insere@@Base+0xb4>
   1210c:	mov	r4, r2
   12110:	cmn	r2, #1
   12114:	blt	121b0 <lista_insere@@Base+0xb4>
   12118:	mov	r7, r1
   1211c:	mov	r6, r0
   12120:	cmp	r4, #0
   12124:	beq	12134 <lista_insere@@Base+0x38>
   12128:	ldr	r0, [r6, #4]
   1212c:	cmp	r0, r4
   12130:	ble	121b0 <lista_insere@@Base+0xb4>
   12134:	ldr	r5, [r6]
   12138:	mov	r0, #8
   1213c:	bl	10e48 <malloc@plt>
   12140:	cmp	r0, #0
   12144:	beq	121b0 <lista_insere@@Base+0xb4>
   12148:	mov	r8, r0
   1214c:	mov	r0, r7
   12150:	bl	10e6c <strlen@plt>
   12154:	add	r0, r0, #1
   12158:	bl	10e48 <malloc@plt>
   1215c:	cmp	r0, #0
   12160:	str	r0, [r8]
   12164:	beq	121a8 <lista_insere@@Base+0xac>
   12168:	mov	r1, r7
   1216c:	bl	10e30 <strcpy@plt>
   12170:	mov	r0, #0
   12174:	cmn	r4, #1
   12178:	str	r0, [r8, #4]
   1217c:	ldr	r0, [r6, #4]
   12180:	add	r1, r0, #1
   12184:	str	r1, [r6, #4]
   12188:	beq	121bc <lista_insere@@Base+0xc0>
   1218c:	cmp	r4, #0
   12190:	bne	121dc <lista_insere@@Base+0xe0>
   12194:	mov	r4, #0
   12198:	str	r5, [r8, #4]
   1219c:	str	r8, [r6]
   121a0:	mov	r0, r4
   121a4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   121a8:	mov	r0, r8
   121ac:	bl	10e18 <free@plt>
   121b0:	mvn	r4, #0
   121b4:	mov	r0, r4
   121b8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   121bc:	cmp	r5, #0
   121c0:	beq	12210 <lista_insere@@Base+0x114>
   121c4:	mov	r1, r5
   121c8:	ldr	r5, [r5, #4]
   121cc:	cmp	r5, #0
   121d0:	bne	121c4 <lista_insere@@Base+0xc8>
   121d4:	str	r8, [r1, #4]
   121d8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   121dc:	sub	r0, r4, #1
   121e0:	mov	r1, #0
   121e4:	mov	r2, r5
   121e8:	ldr	r5, [r5, #4]
   121ec:	cmp	r1, r0
   121f0:	bge	12200 <lista_insere@@Base+0x104>
   121f4:	add	r1, r1, #1
   121f8:	cmp	r2, #0
   121fc:	bne	121e4 <lista_insere@@Base+0xe8>
   12200:	mov	r0, r4
   12204:	str	r5, [r8, #4]
   12208:	str	r8, [r2, #4]
   1220c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12210:	str	r8, [r6]
   12214:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012218 <lista_remove@@Base>:
   12218:	push	{r4, sl, fp, lr}
   1221c:	add	fp, sp, #8
   12220:	mov	r2, r0
   12224:	mvn	r0, #0
   12228:	cmp	r2, #0
   1222c:	beq	122a8 <lista_remove@@Base+0x90>
   12230:	cmp	r1, #0
   12234:	bmi	122a8 <lista_remove@@Base+0x90>
   12238:	ldr	r3, [r2, #4]
   1223c:	cmp	r3, r1
   12240:	pople	{r4, sl, fp, pc}
   12244:	sub	r0, r3, #1
   12248:	cmp	r1, #0
   1224c:	str	r0, [r2, #4]
   12250:	ldr	r4, [r2]
   12254:	beq	1227c <lista_remove@@Base+0x64>
   12258:	mov	r0, r4
   1225c:	ldr	r4, [r4, #4]
   12260:	subs	r1, r1, #1
   12264:	beq	12288 <lista_remove@@Base+0x70>
   12268:	mov	r2, r4
   1226c:	ldr	r3, [r2, #4]!
   12270:	cmp	r3, #0
   12274:	bne	12258 <lista_remove@@Base+0x40>
   12278:	b	1228c <lista_remove@@Base+0x74>
   1227c:	ldr	r0, [r4, #4]
   12280:	str	r0, [r2]
   12284:	b	12294 <lista_remove@@Base+0x7c>
   12288:	add	r2, r4, #4
   1228c:	ldr	r1, [r2]
   12290:	str	r1, [r0, #4]
   12294:	ldr	r0, [r4]
   12298:	bl	10e18 <free@plt>
   1229c:	mov	r0, r4
   122a0:	bl	10e18 <free@plt>
   122a4:	mov	r0, #0
   122a8:	pop	{r4, sl, fp, pc}

000122ac <lista_pesquisa@@Base>:
   122ac:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   122b0:	add	fp, sp, #24
   122b4:	mvn	r8, #0
   122b8:	cmp	r0, #0
   122bc:	beq	12320 <lista_pesquisa@@Base+0x74>
   122c0:	ldr	r7, [r0]
   122c4:	cmp	r7, #0
   122c8:	beq	12320 <lista_pesquisa@@Base+0x74>
   122cc:	mov	r4, r2
   122d0:	mov	r6, r1
   122d4:	mov	r5, #0
   122d8:	mvn	r8, #0
   122dc:	b	122f4 <lista_pesquisa@@Base+0x48>
   122e0:	mov	r8, r5
   122e4:	ldr	r7, [r7, #4]
   122e8:	add	r5, r5, #1
   122ec:	cmp	r7, #0
   122f0:	beq	12320 <lista_pesquisa@@Base+0x74>
   122f4:	ldr	r0, [r7]
   122f8:	mov	r1, r6
   122fc:	bl	10ddc <strcmp@plt>
   12300:	cmp	r0, #0
   12304:	bne	122e4 <lista_pesquisa@@Base+0x38>
   12308:	cmn	r4, #1
   1230c:	beq	122e0 <lista_pesquisa@@Base+0x34>
   12310:	cmp	r4, #0
   12314:	bne	122e4 <lista_pesquisa@@Base+0x38>
   12318:	mov	r0, r5
   1231c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12320:	mov	r0, r8
   12324:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012328 <lista_ordena@@Base>:
   12328:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1232c:	add	fp, sp, #28
   12330:	sub	sp, sp, #4
   12334:	cmp	r0, #0
   12338:	beq	123f4 <lista_ordena@@Base+0xcc>
   1233c:	ldr	sl, [r0]
   12340:	mov	r9, r0
   12344:	mov	r0, #0
   12348:	mov	r4, sl
   1234c:	ldr	r7, [r4, #4]!
   12350:	cmp	r7, #0
   12354:	beq	12404 <lista_ordena@@Base+0xdc>
   12358:	mov	r5, sl
   1235c:	b	12374 <lista_ordena@@Base+0x4c>
   12360:	mov	r5, r7
   12364:	mov	r4, r5
   12368:	ldr	r7, [r4, #4]!
   1236c:	cmp	r7, #0
   12370:	beq	12400 <lista_ordena@@Base+0xd8>
   12374:	ldr	r6, [r7]
   12378:	ldr	r0, [r5]
   1237c:	mov	r1, r6
   12380:	bl	10ddc <strcmp@plt>
   12384:	cmp	r0, #1
   12388:	blt	12360 <lista_ordena@@Base+0x38>
   1238c:	ldr	r0, [r7, #4]
   12390:	str	r0, [r4]
   12394:	ldr	r0, [r7, #4]
   12398:	cmp	r0, r5
   1239c:	beq	12364 <lista_ordena@@Base+0x3c>
   123a0:	ldr	r0, [sl]
   123a4:	mov	r1, r6
   123a8:	bl	10ddc <strcmp@plt>
   123ac:	cmp	r0, #0
   123b0:	mov	r0, sl
   123b4:	mov	r4, sl
   123b8:	bgt	123dc <lista_ordena@@Base+0xb4>
   123bc:	ldr	r8, [r4, #4]
   123c0:	mov	r1, r6
   123c4:	ldr	r0, [r8]
   123c8:	bl	10ddc <strcmp@plt>
   123cc:	cmp	r0, #0
   123d0:	mov	r0, r4
   123d4:	mov	r4, r8
   123d8:	ble	123bc <lista_ordena@@Base+0x94>
   123dc:	cmp	r4, sl
   123e0:	str	r4, [r7, #4]
   123e4:	moveq	sl, r7
   123e8:	strne	r7, [r0, #4]
   123ec:	streq	r7, [r9]
   123f0:	b	12364 <lista_ordena@@Base+0x3c>
   123f4:	mvn	r0, #0
   123f8:	sub	sp, fp, #28
   123fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12400:	mov	r0, #0
   12404:	sub	sp, fp, #28
   12408:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001240c <lista_compara@@Base>:
   1240c:	push	{r4, r5, r6, sl, fp, lr}
   12410:	add	fp, sp, #16
   12414:	cmp	r0, #0
   12418:	mvn	r4, #0
   1241c:	cmpne	r1, #0
   12420:	bne	1242c <lista_compara@@Base+0x20>
   12424:	mov	r0, r4
   12428:	pop	{r4, r5, r6, sl, fp, pc}
   1242c:	ldr	r2, [r1, #4]
   12430:	ldr	r3, [r0, #4]
   12434:	mov	r4, #0
   12438:	cmp	r3, r2
   1243c:	bne	12424 <lista_compara@@Base+0x18>
   12440:	ldr	r6, [r0]
   12444:	ldr	r5, [r1]
   12448:	cmp	r6, #0
   1244c:	beq	12474 <lista_compara@@Base+0x68>
   12450:	ldr	r1, [r5]
   12454:	ldr	r0, [r6]
   12458:	bl	10ddc <strcmp@plt>
   1245c:	cmp	r0, #0
   12460:	bne	12424 <lista_compara@@Base+0x18>
   12464:	ldr	r6, [r6, #4]
   12468:	ldr	r5, [r5, #4]
   1246c:	cmp	r6, #0
   12470:	bne	12450 <lista_compara@@Base+0x44>
   12474:	cmp	r5, #0
   12478:	mvn	r4, #0
   1247c:	movweq	r4, #1
   12480:	mov	r0, r4
   12484:	pop	{r4, r5, r6, sl, fp, pc}

00012488 <lista_inverte@@Base>:
   12488:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1248c:	add	fp, sp, #24
   12490:	mov	r5, #0
   12494:	cmp	r0, #0
   12498:	beq	1253c <lista_inverte@@Base+0xb4>
   1249c:	mov	r6, r0
   124a0:	mov	r0, #8
   124a4:	bl	10e48 <malloc@plt>
   124a8:	cmp	r0, #0
   124ac:	beq	1253c <lista_inverte@@Base+0xb4>
   124b0:	mov	r7, #0
   124b4:	mov	r8, r0
   124b8:	str	r7, [r0]
   124bc:	str	r7, [r0, #4]
   124c0:	ldr	r4, [r6]
   124c4:	cmp	r4, #0
   124c8:	beq	12538 <lista_inverte@@Base+0xb0>
   124cc:	mov	r9, #0
   124d0:	b	124f8 <lista_inverte@@Base+0x70>
   124d4:	mov	r1, r6
   124d8:	bl	10e30 <strcpy@plt>
   124dc:	add	r7, r7, #1
   124e0:	str	r9, [r5, #4]
   124e4:	mov	r9, r5
   124e8:	stm	r8, {r5, r7}
   124ec:	ldr	r4, [r4, #4]
   124f0:	cmp	r4, #0
   124f4:	beq	12538 <lista_inverte@@Base+0xb0>
   124f8:	ldr	r6, [r4]
   124fc:	mov	r0, #8
   12500:	bl	10e48 <malloc@plt>
   12504:	cmp	r0, #0
   12508:	beq	124ec <lista_inverte@@Base+0x64>
   1250c:	mov	r5, r0
   12510:	mov	r0, r6
   12514:	bl	10e6c <strlen@plt>
   12518:	add	r0, r0, #1
   1251c:	bl	10e48 <malloc@plt>
   12520:	cmp	r0, #0
   12524:	str	r0, [r5]
   12528:	bne	124d4 <lista_inverte@@Base+0x4c>
   1252c:	mov	r0, r5
   12530:	bl	10e18 <free@plt>
   12534:	b	124ec <lista_inverte@@Base+0x64>
   12538:	mov	r5, r8
   1253c:	mov	r0, r5
   12540:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012544 <__libc_csu_init@@Base>:
   12544:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12548:	mov	r7, r0
   1254c:	ldr	r6, [pc, #72]	; 1259c <__libc_csu_init@@Base+0x58>
   12550:	ldr	r5, [pc, #72]	; 125a0 <__libc_csu_init@@Base+0x5c>
   12554:	add	r6, pc, r6
   12558:	add	r5, pc, r5
   1255c:	sub	r6, r6, r5
   12560:	mov	r8, r1
   12564:	mov	r9, r2
   12568:	bl	10db0 <calloc@plt-0x20>
   1256c:	asrs	r6, r6, #2
   12570:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12574:	mov	r4, #0
   12578:	add	r4, r4, #1
   1257c:	ldr	r3, [r5], #4
   12580:	mov	r2, r9
   12584:	mov	r1, r8
   12588:	mov	r0, r7
   1258c:	blx	r3
   12590:	cmp	r6, r4
   12594:	bne	12578 <__libc_csu_init@@Base+0x34>
   12598:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1259c:			; <UNDEFINED> instruction: 0x000109b0
   125a0:	andeq	r0, r1, r8, lsr #19

000125a4 <__libc_csu_fini@@Base>:
   125a4:	bx	lr

Disassembly of section .fini:

000125a8 <.fini>:
   125a8:	push	{r3, lr}
   125ac:	pop	{r3, pc}
