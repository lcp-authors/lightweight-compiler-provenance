
../repos/ReadStat/.libs/libreadstat.so.1.1.4:     file format elf32-littlearm


Disassembly of section .init:

00003d70 <_init>:
    3d70:	push	{r3, lr}
    3d74:	bl	5fc8 <call_weak_fn>
    3d78:	pop	{r3, pc}

Disassembly of section .plt:

00003d7c <.plt>:
    3d7c:	push	{lr}		; (str lr, [sp, #-4]!)
    3d80:	ldr	lr, [pc, #4]	; 3d8c <.plt+0x10>
    3d84:	add	lr, pc, lr
    3d88:	ldr	pc, [lr, #8]!
    3d8c:	.word	0x0003d274

00003d90 <sas_validate_name@plt>:
    3d90:	add	ip, pc, #0, 12
    3d94:	add	ip, ip, #249856	; 0x3d000
    3d98:	ldr	pc, [ip, #628]!	; 0x274

00003d9c <calloc@plt>:
    3d9c:	add	ip, pc, #0, 12
    3da0:	add	ip, ip, #249856	; 0x3d000
    3da4:	ldr	pc, [ip, #620]!	; 0x26c

00003da8 <readstat_set_seek_handler@plt>:
    3da8:	add	ip, pc, #0, 12
    3dac:	add	ip, ip, #249856	; 0x3d000
    3db0:	ldr	pc, [ip, #612]!	; 0x264

00003db4 <readstat_set_open_handler@plt>:
    3db4:	add	ip, pc, #0, 12
    3db8:	add	ip, ip, #249856	; 0x3d000
    3dbc:	ldr	pc, [ip, #604]!	; 0x25c

00003dc0 <byteswap8@plt>:
    3dc0:	add	ip, pc, #0, 12
    3dc4:	add	ip, ip, #249856	; 0x3d000
    3dc8:	ldr	pc, [ip, #596]!	; 0x254

00003dcc <raise@plt>:
    3dcc:	add	ip, pc, #0, 12
    3dd0:	add	ip, ip, #249856	; 0x3d000
    3dd4:	ldr	pc, [ip, #588]!	; 0x24c

00003dd8 <byteswap4@plt>:
    3dd8:	add	ip, pc, #0, 12
    3ddc:	add	ip, ip, #249856	; 0x3d000
    3de0:	ldr	pc, [ip, #580]!	; 0x244

00003de4 <readstat_validate_metadata@plt>:
    3de4:	add	ip, pc, #0, 12
    3de8:	add	ip, ip, #249856	; 0x3d000
    3dec:	ldr	pc, [ip, #572]!	; 0x23c

00003df0 <readstat_sort_label_set@plt>:
    3df0:	add	ip, pc, #0, 12
    3df4:	add	ip, ip, #249856	; 0x3d000
    3df8:	ldr	pc, [ip, #564]!	; 0x234

00003dfc <por_ctx_free@plt>:
    3dfc:	add	ip, pc, #0, 12
    3e00:	add	ip, ip, #249856	; 0x3d000
    3e04:	ldr	pc, [ip, #556]!	; 0x22c

00003e08 <memreverse@plt>:
    3e08:	add	ip, pc, #0, 12
    3e0c:	add	ip, ip, #249856	; 0x3d000
    3e10:	ldr	pc, [ip, #548]!	; 0x224

00003e14 <iconv_close@plt>:
    3e14:	add	ip, pc, #0, 12
    3e18:	add	ip, ip, #249856	; 0x3d000
    3e1c:	ldr	pc, [ip, #540]!	; 0x21c

00003e20 <readstat_write_spaces@plt>:
    3e20:	add	ip, pc, #0, 12
    3e24:	add	ip, ip, #249856	; 0x3d000
    3e28:	ldr	pc, [ip, #532]!	; 0x214

00003e2c <iconv@plt>:
    3e2c:	add	ip, pc, #0, 12
    3e30:	add	ip, ip, #249856	; 0x3d000
    3e34:	ldr	pc, [ip, #524]!	; 0x20c

00003e38 <sav_parse_timestamp@plt>:
    3e38:	add	ip, pc, #0, 12
    3e3c:	add	ip, ip, #249856	; 0x3d000
    3e40:	ldr	pc, [ip, #516]!	; 0x204

00003e44 <strcmp@plt>:
    3e44:	add	ip, pc, #0, 12
    3e48:	add	ip, ip, #249856	; 0x3d000
    3e4c:	ldr	pc, [ip, #508]!	; 0x1fc

00003e50 <__cxa_finalize@plt>:
    3e50:	add	ip, pc, #0, 12
    3e54:	add	ip, ip, #249856	; 0x3d000
    3e58:	ldr	pc, [ip, #500]!	; 0x1f4

00003e5c <ck_hash_table_wipe@plt>:
    3e5c:	add	ip, pc, #0, 12
    3e60:	add	ip, ip, #249856	; 0x3d000
    3e64:	ldr	pc, [ip, #492]!	; 0x1ec

00003e68 <readstat_type_class@plt>:
    3e68:	add	ip, pc, #0, 12
    3e6c:	add	ip, ip, #249856	; 0x3d000
    3e70:	ldr	pc, [ip, #484]!	; 0x1e4

00003e74 <strtol@plt>:
    3e74:	add	ip, pc, #0, 12
    3e78:	add	ip, ip, #249856	; 0x3d000
    3e7c:	ldr	pc, [ip, #476]!	; 0x1dc

00003e80 <read@plt>:
    3e80:	add	ip, pc, #0, 12
    3e84:	add	ip, ip, #249856	; 0x3d000
    3e88:	ldr	pc, [ip, #468]!	; 0x1d4

00003e8c <readstat_error_message@plt>:
    3e8c:	add	ip, pc, #0, 12
    3e90:	add	ip, ip, #249856	; 0x3d000
    3e94:	ldr	pc, [ip, #460]!	; 0x1cc

00003e98 <mktime@plt>:
    3e98:	add	ip, pc, #0, 12
    3e9c:	add	ip, ip, #249856	; 0x3d000
    3ea0:	ldr	pc, [ip, #452]!	; 0x1c4

00003ea4 <spss_alignment_from_readstat_alignment@plt>:
    3ea4:	add	ip, pc, #0, 12
    3ea8:	add	ip, ip, #249856	; 0x3d000
    3eac:	ldr	pc, [ip, #444]!	; 0x1bc

00003eb0 <readstat_copy@plt>:
    3eb0:	add	ip, pc, #0, 12
    3eb4:	add	ip, ip, #249856	; 0x3d000
    3eb8:	ldr	pc, [ip, #436]!	; 0x1b4

00003ebc <dta_ctx_free@plt>:
    3ebc:	add	ip, pc, #0, 12
    3ec0:	add	ip, ip, #249856	; 0x3d000
    3ec4:	ldr	pc, [ip, #428]!	; 0x1ac

00003ec8 <deflateBound@plt>:
    3ec8:	add	ip, pc, #0, 12
    3ecc:	add	ip, ip, #249856	; 0x3d000
    3ed0:	ldr	pc, [ip, #420]!	; 0x1a4

00003ed4 <readstat_set_update_handler@plt>:
    3ed4:	add	ip, pc, #0, 12
    3ed8:	add	ip, ip, #249856	; 0x3d000
    3edc:	ldr	pc, [ip, #412]!	; 0x19c

00003ee0 <memmove@plt>:
    3ee0:	add	ip, pc, #0, 12
    3ee4:	add	ip, ip, #249856	; 0x3d000
    3ee8:	ldr	pc, [ip, #404]!	; 0x194

00003eec <byteswap2@plt>:
    3eec:	add	ip, pc, #0, 12
    3ef0:	add	ip, ip, #249856	; 0x3d000
    3ef4:	ldr	pc, [ip, #396]!	; 0x18c

00003ef8 <machine_is_little_endian@plt>:
    3ef8:	add	ip, pc, #0, 12
    3efc:	add	ip, ip, #249856	; 0x3d000
    3f00:	ldr	pc, [ip, #388]!	; 0x184

00003f04 <free@plt>:
    3f04:	add	ip, pc, #0, 12
    3f08:	add	ip, ip, #249856	; 0x3d000
    3f0c:	ldr	pc, [ip, #380]!	; 0x17c

00003f10 <readstat_value_is_system_missing@plt>:
    3f10:	add	ip, pc, #0, 12
    3f14:	add	ip, ip, #249856	; 0x3d000
    3f18:	ldr	pc, [ip, #372]!	; 0x174

00003f1c <sav_parse_time@plt>:
    3f1c:	add	ip, pc, #0, 12
    3f20:	add	ip, ip, #249856	; 0x3d000
    3f24:	ldr	pc, [ip, #364]!	; 0x16c

00003f28 <readstat_variable_get_format@plt>:
    3f28:	add	ip, pc, #0, 12
    3f2c:	add	ip, ip, #249856	; 0x3d000
    3f30:	ldr	pc, [ip, #356]!	; 0x164

00003f34 <readstat_value_is_defined_missing@plt>:
    3f34:	add	ip, pc, #0, 12
    3f38:	add	ip, ip, #249856	; 0x3d000
    3f3c:	ldr	pc, [ip, #348]!	; 0x15c

00003f40 <ones_to_twos_complement4@plt>:
    3f40:	add	ip, pc, #0, 12
    3f44:	add	ip, ip, #249856	; 0x3d000
    3f48:	ldr	pc, [ip, #340]!	; 0x154

00003f4c <ones_to_twos_complement2@plt>:
    3f4c:	add	ip, pc, #0, 12
    3f50:	add	ip, ip, #249856	; 0x3d000
    3f54:	ldr	pc, [ip, #332]!	; 0x14c

00003f58 <sav_ctx_free@plt>:
    3f58:	add	ip, pc, #0, 12
    3f5c:	add	ip, ip, #249856	; 0x3d000
    3f60:	ldr	pc, [ip, #324]!	; 0x144

00003f64 <memcpy@plt>:
    3f64:	add	ip, pc, #0, 12
    3f68:	add	ip, ip, #249856	; 0x3d000
    3f6c:	ldr	pc, [ip, #316]!	; 0x13c

00003f70 <spss_parse_format@plt>:
    3f70:	add	ip, pc, #0, 12
    3f74:	add	ip, ip, #249856	; 0x3d000
    3f78:	ldr	pc, [ip, #308]!	; 0x134

00003f7c <submit_columns@plt>:
    3f7c:	add	ip, pc, #0, 12
    3f80:	add	ip, ip, #249856	; 0x3d000
    3f84:	ldr	pc, [ip, #300]!	; 0x12c

00003f88 <readstat_variable_get_missing_range_lo@plt>:
    3f88:	add	ip, pc, #0, 12
    3f8c:	add	ip, ip, #249856	; 0x3d000
    3f90:	ldr	pc, [ip, #292]!	; 0x124

00003f94 <readstat_insert_string_ref@plt>:
    3f94:	add	ip, pc, #0, 12
    3f98:	add	ip, ip, #249856	; 0x3d000
    3f9c:	ldr	pc, [ip, #284]!	; 0x11c

00003fa0 <time@plt>:
    3fa0:	add	ip, pc, #0, 12
    3fa4:	add	ip, ip, #249856	; 0x3d000
    3fa8:	ldr	pc, [ip, #276]!	; 0x114

00003fac <readstat_begin_writing_file@plt>:
    3fac:	add	ip, pc, #0, 12
    3fb0:	add	ip, ip, #249856	; 0x3d000
    3fb4:	ldr	pc, [ip, #268]!	; 0x10c

00003fb8 <lseek@plt>:
    3fb8:	add	ip, pc, #0, 12
    3fbc:	add	ip, ip, #249856	; 0x3d000
    3fc0:	ldr	pc, [ip, #260]!	; 0x104

00003fc4 <unistd_io_init@plt>:
    3fc4:	add	ip, pc, #0, 12
    3fc8:	add	ip, ip, #249856	; 0x3d000
    3fcc:	ldr	pc, [ip, #252]!	; 0xfc

00003fd0 <pow@plt>:
    3fd0:	add	ip, pc, #0, 12
    3fd4:	add	ip, ip, #249856	; 0x3d000
    3fd8:	ldr	pc, [ip, #244]!	; 0xf4

00003fdc <uncompress@plt>:
    3fdc:	add	ip, pc, #0, 12
    3fe0:	add	ip, ip, #249856	; 0x3d000
    3fe4:	ldr	pc, [ip, #236]!	; 0xec

00003fe8 <memcmp@plt>:
    3fe8:	add	ip, pc, #0, 12
    3fec:	add	ip, ip, #249856	; 0x3d000
    3ff0:	ldr	pc, [ip, #228]!	; 0xe4

00003ff4 <readstat_string_value@plt>:
    3ff4:	add	ip, pc, #0, 12
    3ff8:	add	ip, ip, #249856	; 0x3d000
    3ffc:	ldr	pc, [ip, #220]!	; 0xdc

00004000 <readstat_schema_free@plt>:
    4000:	add	ip, pc, #0, 12
    4004:	add	ip, ip, #249856	; 0x3d000
    4008:	ldr	pc, [ip, #212]!	; 0xd4

0000400c <readstat_calloc@plt>:
    400c:	add	ip, pc, #0, 12
    4010:	add	ip, ip, #249856	; 0x3d000
    4014:	ldr	pc, [ip, #204]!	; 0xcc

00004018 <ck_str_hash_lookup@plt>:
    4018:	add	ip, pc, #0, 12
    401c:	add	ip, ip, #249856	; 0x3d000
    4020:	ldr	pc, [ip, #196]!	; 0xc4

00004024 <sav_compressed_row_bound@plt>:
    4024:	add	ip, pc, #0, 12
    4028:	add	ip, ip, #249856	; 0x3d000
    402c:	ldr	pc, [ip, #188]!	; 0xbc

00004030 <ck_hash_table_grow@plt>:
    4030:	add	ip, pc, #0, 12
    4034:	add	ip, ip, #249856	; 0x3d000
    4038:	ldr	pc, [ip, #180]!	; 0xb4

0000403c <realloc@plt>:
    403c:	add	ip, pc, #0, 12
    4040:	add	ip, ip, #249856	; 0x3d000
    4044:	ldr	pc, [ip, #172]!	; 0xac

00004048 <cnxptiee@plt>:
    4048:	add	ip, pc, #0, 12
    404c:	add	ip, ip, #249856	; 0x3d000
    4050:	ldr	pc, [ip, #164]!	; 0xa4

00004054 <read_version_and_timestamp@plt>:
    4054:	add	ip, pc, #0, 12
    4058:	add	ip, ip, #249856	; 0x3d000
    405c:	ldr	pc, [ip, #156]!	; 0x9c

00004060 <readstat_write_zeros@plt>:
    4060:	add	ip, pc, #0, 12
    4064:	add	ip, ip, #249856	; 0x3d000
    4068:	ldr	pc, [ip, #148]!	; 0x94

0000406c <strcasecmp@plt>:
    406c:	add	ip, pc, #0, 12
    4070:	add	ip, ip, #249856	; 0x3d000
    4074:	ldr	pc, [ip, #140]!	; 0x8c

00004078 <readstat_copy_quoted@plt>:
    4078:	add	ip, pc, #0, 12
    407c:	add	ip, ip, #249856	; 0x3d000
    4080:	ldr	pc, [ip, #132]!	; 0x84

00004084 <deflate@plt>:
    4084:	add	ip, pc, #0, 12
    4088:	add	ip, ip, #249856	; 0x3d000
    408c:	ldr	pc, [ip, #124]!	; 0x7c

00004090 <submit_value_label@plt>:
    4090:	add	ip, pc, #0, 12
    4094:	add	ip, ip, #249856	; 0x3d000
    4098:	ldr	pc, [ip, #116]!	; 0x74

0000409c <sav_ctx_init@plt>:
    409c:	add	ip, pc, #0, 12
    40a0:	add	ip, ip, #249856	; 0x3d000
    40a4:	ldr	pc, [ip, #108]!	; 0x6c

000040a8 <ck_str_n_hash_lookup@plt>:
    40a8:	add	ip, pc, #0, 12
    40ac:	add	ip, ip, #249856	; 0x3d000
    40b0:	ldr	pc, [ip, #100]!	; 0x64

000040b4 <spss_measure_from_readstat_measure@plt>:
    40b4:	add	ip, pc, #0, 12
    40b8:	add	ip, ip, #249856	; 0x3d000
    40bc:	ldr	pc, [ip, #92]!	; 0x5c

000040c0 <sas_rle_decompress@plt>:
    40c0:	add	ip, pc, #0, 12
    40c4:	add	ip, ip, #249856	; 0x3d000
    40c8:	ldr	pc, [ip, #84]!	; 0x54

000040cc <sav_parse_date@plt>:
    40cc:	add	ip, pc, #0, 12
    40d0:	add	ip, ip, #249856	; 0x3d000
    40d4:	ldr	pc, [ip, #76]!	; 0x4c

000040d8 <xport_namestr_bswap@plt>:
    40d8:	add	ip, pc, #0, 12
    40dc:	add	ip, ip, #249856	; 0x3d000
    40e0:	ldr	pc, [ip, #68]!	; 0x44

000040e4 <strcpy@plt>:
    40e4:	add	ip, pc, #0, 12
    40e8:	add	ip, ip, #249856	; 0x3d000
    40ec:	ldr	pc, [ip, #60]!	; 0x3c

000040f0 <zsav_current_block@plt>:
    40f0:	add	ip, pc, #0, 12
    40f4:	add	ip, ip, #249856	; 0x3d000
    40f8:	ldr	pc, [ip, #52]!	; 0x34

000040fc <zsav_ctx_init@plt>:
    40fc:	add	ip, pc, #0, 12
    4100:	add	ip, ip, #249856	; 0x3d000
    4104:	ldr	pc, [ip, #44]!	; 0x2c

00004108 <sas_write_header@plt>:
    4108:	add	ip, pc, #0, 12
    410c:	add	ip, ip, #249856	; 0x3d000
    4110:	ldr	pc, [ip, #36]!	; 0x24

00004114 <strtof@plt>:
    4114:	add	ip, pc, #0, 12
    4118:	add	ip, ip, #249856	; 0x3d000
    411c:	ldr	pc, [ip, #28]!

00004120 <readstat_schema_find_or_create_entry@plt>:
    4120:	add	ip, pc, #0, 12
    4124:	add	ip, ip, #249856	; 0x3d000
    4128:	ldr	pc, [ip, #20]!

0000412c <readstat_value_type_class@plt>:
    412c:	add	ip, pc, #0, 12
    4130:	add	ip, ip, #249856	; 0x3d000
    4134:	ldr	pc, [ip, #12]!

00004138 <readstat_set_io_ctx@plt>:
    4138:	add	ip, pc, #0, 12
    413c:	add	ip, ip, #249856	; 0x3d000
    4140:	ldr	pc, [ip, #4]!

00004144 <spss_format_for_variable@plt>:
    4144:	add	ip, pc, #0, 12
    4148:	add	ip, ip, #60, 20	; 0x3c000
    414c:	ldr	pc, [ip, #4092]!	; 0xffc

00004150 <readstat_parser_free@plt>:
    4150:	add	ip, pc, #0, 12
    4154:	add	ip, ip, #60, 20	; 0x3c000
    4158:	ldr	pc, [ip, #4084]!	; 0xff4

0000415c <malloc@plt>:
    415c:	add	ip, pc, #0, 12
    4160:	add	ip, ip, #60, 20	; 0x3c000
    4164:	ldr	pc, [ip, #4076]!	; 0xfec

00004168 <zsav_add_block@plt>:
    4168:	add	ip, pc, #0, 12
    416c:	add	ip, ip, #60, 20	; 0x3c000
    4170:	ldr	pc, [ip, #4068]!	; 0xfe4

00004174 <deflateInit_@plt>:
    4174:	add	ip, pc, #0, 12
    4178:	add	ip, ip, #60, 20	; 0x3c000
    417c:	ldr	pc, [ip, #4060]!	; 0xfdc

00004180 <iconv_open@plt>:
    4180:	add	ip, pc, #0, 12
    4184:	add	ip, ip, #60, 20	; 0x3c000
    4188:	ldr	pc, [ip, #4052]!	; 0xfd4

0000418c <strerror@plt>:
    418c:	add	ip, pc, #0, 12
    4190:	add	ip, ip, #60, 20	; 0x3c000
    4194:	ldr	pc, [ip, #4044]!	; 0xfcc

00004198 <sas_validate_tag@plt>:
    4198:	add	ip, pc, #0, 12
    419c:	add	ip, ip, #60, 20	; 0x3c000
    41a0:	ldr	pc, [ip, #4036]!	; 0xfc4

000041a4 <readstat_write_string@plt>:
    41a4:	add	ip, pc, #0, 12
    41a8:	add	ip, ip, #60, 20	; 0x3c000
    41ac:	ldr	pc, [ip, #4028]!	; 0xfbc

000041b0 <localtime@plt>:
    41b0:	add	ip, pc, #0, 12
    41b4:	add	ip, ip, #60, 20	; 0x3c000
    41b8:	ldr	pc, [ip, #4020]!	; 0xfb4

000041bc <__ctype_tolower_loc@plt>:
    41bc:	add	ip, pc, #0, 12
    41c0:	add	ip, ip, #60, 20	; 0x3c000
    41c4:	ldr	pc, [ip, #4012]!	; 0xfac

000041c8 <modf@plt>:
    41c8:	add	ip, pc, #0, 12
    41cc:	add	ip, ip, #60, 20	; 0x3c000
    41d0:	ldr	pc, [ip, #4004]!	; 0xfa4

000041d4 <__ctype_toupper_loc@plt>:
    41d4:	add	ip, pc, #0, 12
    41d8:	add	ip, ip, #60, 20	; 0x3c000
    41dc:	ldr	pc, [ip, #3996]!	; 0xf9c

000041e0 <ck_hash_table_init@plt>:
    41e0:	add	ip, pc, #0, 12
    41e4:	add	ip, ip, #60, 20	; 0x3c000
    41e8:	ldr	pc, [ip, #3988]!	; 0xf94

000041ec <__gmon_start__@plt>:
    41ec:	add	ip, pc, #0, 12
    41f0:	add	ip, ip, #60, 20	; 0x3c000
    41f4:	ldr	pc, [ip, #3980]!	; 0xf8c

000041f8 <open@plt>:
    41f8:	add	ip, pc, #0, 12
    41fc:	add	ip, ip, #60, 20	; 0x3c000
    4200:	ldr	pc, [ip, #3972]!	; 0xf84

00004204 <readstat_double_value@plt>:
    4204:	add	ip, pc, #0, 12
    4208:	add	ip, ip, #60, 20	; 0x3c000
    420c:	ldr	pc, [ip, #3964]!	; 0xf7c

00004210 <get_native@plt>:
    4210:	add	ip, pc, #0, 12
    4214:	add	ip, ip, #60, 20	; 0x3c000
    4218:	ldr	pc, [ip, #3956]!	; 0xf74

0000421c <dta_ctx_init@plt>:
    421c:	add	ip, pc, #0, 12
    4220:	add	ip, ip, #60, 20	; 0x3c000
    4224:	ldr	pc, [ip, #3948]!	; 0xf6c

00004228 <readstat_variable_get_type@plt>:
    4228:	add	ip, pc, #0, 12
    422c:	add	ip, ip, #60, 20	; 0x3c000
    4230:	ldr	pc, [ip, #3940]!	; 0xf64

00004234 <dta_type_info@plt>:
    4234:	add	ip, pc, #0, 12
    4238:	add	ip, ip, #60, 20	; 0x3c000
    423c:	ldr	pc, [ip, #3932]!	; 0xf5c

00004240 <sav_parse_long_variable_names_record@plt>:
    4240:	add	ip, pc, #0, 12
    4244:	add	ip, ip, #60, 20	; 0x3c000
    4248:	ldr	pc, [ip, #3924]!	; 0xf54

0000424c <strlen@plt>:
    424c:	add	ip, pc, #0, 12
    4250:	add	ip, ip, #60, 20	; 0x3c000
    4254:	ldr	pc, [ip, #3916]!	; 0xf4c

00004258 <sav_decompress_row@plt>:
    4258:	add	ip, pc, #0, 12
    425c:	add	ip, ip, #60, 20	; 0x3c000
    4260:	ldr	pc, [ip, #3908]!	; 0xf44

00004264 <readstat_variable_get_display_width@plt>:
    4264:	add	ip, pc, #0, 12
    4268:	add	ip, ip, #60, 20	; 0x3c000
    426c:	ldr	pc, [ip, #3900]!	; 0xf3c

00004270 <readstat_malloc@plt>:
    4270:	add	ip, pc, #0, 12
    4274:	add	ip, ip, #60, 20	; 0x3c000
    4278:	ldr	pc, [ip, #3892]!	; 0xf34

0000427c <readstat_convert@plt>:
    427c:	add	ip, pc, #0, 12
    4280:	add	ip, ip, #60, 20	; 0x3c000
    4284:	ldr	pc, [ip, #3884]!	; 0xf2c

00004288 <ck_hash_table_free@plt>:
    4288:	add	ip, pc, #0, 12
    428c:	add	ip, ip, #60, 20	; 0x3c000
    4290:	ldr	pc, [ip, #3876]!	; 0xf24

00004294 <readstat_por_parse_double@plt>:
    4294:	add	ip, pc, #0, 12
    4298:	add	ip, ip, #60, 20	; 0x3c000
    429c:	ldr	pc, [ip, #3868]!	; 0xf1c

000042a0 <por_utf8_encode@plt>:
    42a0:	add	ip, pc, #0, 12
    42a4:	add	ip, ip, #60, 20	; 0x3c000
    42a8:	ldr	pc, [ip, #3860]!	; 0xf14

000042ac <__errno_location@plt>:
    42ac:	add	ip, pc, #0, 12
    42b0:	add	ip, ip, #60, 20	; 0x3c000
    42b4:	ldr	pc, [ip, #3852]!	; 0xf0c

000042b8 <spss_init_variable_for_info@plt>:
    42b8:	add	ip, pc, #0, 12
    42bc:	add	ip, ip, #60, 20	; 0x3c000
    42c0:	ldr	pc, [ip, #3844]!	; 0xf04

000042c4 <snprintf@plt>:
    42c4:	add	ip, pc, #0, 12
    42c8:	add	ip, ip, #60, 20	; 0x3c000
    42cc:	ldr	pc, [ip, #3836]!	; 0xefc

000042d0 <__isoc99_sscanf@plt>:
    42d0:	add	ip, pc, #0, 12
    42d4:	add	ip, ip, #60, 20	; 0x3c000
    42d8:	ldr	pc, [ip, #3828]!	; 0xef4

000042dc <ck_str_n_hash_insert@plt>:
    42dc:	add	ip, pc, #0, 12
    42e0:	add	ip, ip, #60, 20	; 0x3c000
    42e4:	ldr	pc, [ip, #3820]!	; 0xeec

000042e8 <memset@plt>:
    42e8:	add	ip, pc, #0, 12
    42ec:	add	ip, ip, #60, 20	; 0x3c000
    42f0:	ldr	pc, [ip, #3812]!	; 0xee4

000042f4 <bsearch@plt>:
    42f4:	add	ip, pc, #0, 12
    42f8:	add	ip, ip, #60, 20	; 0x3c000
    42fc:	ldr	pc, [ip, #3804]!	; 0xedc

00004300 <spss_64bit_value@plt>:
    4300:	add	ip, pc, #0, 12
    4304:	add	ip, ip, #60, 20	; 0x3c000
    4308:	ldr	pc, [ip, #3796]!	; 0xed4

0000430c <strncpy@plt>:
    430c:	add	ip, pc, #0, 12
    4310:	add	ip, ip, #60, 20	; 0x3c000
    4314:	ldr	pc, [ip, #3788]!	; 0xecc

00004318 <readstat_variable_get_storage_width@plt>:
    4318:	add	ip, pc, #0, 12
    431c:	add	ip, ip, #60, 20	; 0x3c000
    4320:	ldr	pc, [ip, #3780]!	; 0xec4

00004324 <sav_parse_very_long_string_record@plt>:
    4324:	add	ip, pc, #0, 12
    4328:	add	ip, ip, #60, 20	; 0x3c000
    432c:	ldr	pc, [ip, #3772]!	; 0xebc

00004330 <readstat_realloc@plt>:
    4330:	add	ip, pc, #0, 12
    4334:	add	ip, ip, #60, 20	; 0x3c000
    4338:	ldr	pc, [ip, #3764]!	; 0xeb4

0000433c <dta_parse_timestamp@plt>:
    433c:	add	ip, pc, #0, 12
    4340:	add	ip, ip, #60, 20	; 0x3c000
    4344:	ldr	pc, [ip, #3756]!	; 0xeac

00004348 <strtod@plt>:
    4348:	add	ip, pc, #0, 12
    434c:	add	ip, ip, #60, 20	; 0x3c000
    4350:	ldr	pc, [ip, #3748]!	; 0xea4

00004354 <readstat_variable_get_missing_ranges_count@plt>:
    4354:	add	ip, pc, #0, 12
    4358:	add	ip, ip, #60, 20	; 0x3c000
    435c:	ldr	pc, [ip, #3740]!	; 0xe9c

00004360 <deflateEnd@plt>:
    4360:	add	ip, pc, #0, 12
    4364:	add	ip, ip, #60, 20	; 0x3c000
    4368:	ldr	pc, [ip, #3732]!	; 0xe94

0000436c <readstat_variable_get_measure@plt>:
    436c:	add	ip, pc, #0, 12
    4370:	add	ip, ip, #60, 20	; 0x3c000
    4374:	ldr	pc, [ip, #3724]!	; 0xe8c

00004378 <readstat_variable_get_missing_range_hi@plt>:
    4378:	add	ip, pc, #0, 12
    437c:	add	ip, ip, #60, 20	; 0x3c000
    4380:	ldr	pc, [ip, #3716]!	; 0xe84

00004384 <readstat_set_read_handler@plt>:
    4384:	add	ip, pc, #0, 12
    4388:	add	ip, ip, #60, 20	; 0x3c000
    438c:	ldr	pc, [ip, #3708]!	; 0xe7c

00004390 <readstat_value_type@plt>:
    4390:	add	ip, pc, #0, 12
    4394:	add	ip, ip, #60, 20	; 0x3c000
    4398:	ldr	pc, [ip, #3700]!	; 0xe74

0000439c <sas_header_info_init@plt>:
    439c:	add	ip, pc, #0, 12
    43a0:	add	ip, ip, #60, 20	; 0x3c000
    43a4:	ldr	pc, [ip, #3692]!	; 0xe6c

000043a8 <readstat_string_ref_init@plt>:
    43a8:	add	ip, pc, #0, 12
    43ac:	add	ip, ip, #60, 20	; 0x3c000
    43b0:	ldr	pc, [ip, #3684]!	; 0xe64

000043b4 <readstat_variable_get_name@plt>:
    43b4:	add	ip, pc, #0, 12
    43b8:	add	ip, ip, #60, 20	; 0x3c000
    43bc:	ldr	pc, [ip, #3676]!	; 0xe5c

000043c0 <ones_to_twos_complement1@plt>:
    43c0:	add	ip, pc, #0, 12
    43c4:	add	ip, ip, #60, 20	; 0x3c000
    43c8:	ldr	pc, [ip, #3668]!	; 0xe54

000043cc <readstat_get_variable@plt>:
    43cc:	add	ip, pc, #0, 12
    43d0:	add	ip, ip, #60, 20	; 0x3c000
    43d4:	ldr	pc, [ip, #3660]!	; 0xe4c

000043d8 <spss_alignment_to_readstat_alignment@plt>:
    43d8:	add	ip, pc, #0, 12
    43dc:	add	ip, ip, #60, 20	; 0x3c000
    43e0:	ldr	pc, [ip, #3652]!	; 0xe44

000043e4 <por_utf8_decode@plt>:
    43e4:	add	ip, pc, #0, 12
    43e8:	add	ip, ip, #60, 20	; 0x3c000
    43ec:	ldr	pc, [ip, #3644]!	; 0xe3c

000043f0 <sas_read_header@plt>:
    43f0:	add	ip, pc, #0, 12
    43f4:	add	ip, ip, #60, 20	; 0x3c000
    43f8:	ldr	pc, [ip, #3636]!	; 0xe34

000043fc <spss_measure_to_readstat_measure@plt>:
    43fc:	add	ip, pc, #0, 12
    4400:	add	ip, ip, #60, 20	; 0x3c000
    4404:	ldr	pc, [ip, #3628]!	; 0xe2c

00004408 <sas_subheader_remainder@plt>:
    4408:	add	ip, pc, #0, 12
    440c:	add	ip, ip, #60, 20	; 0x3c000
    4410:	ldr	pc, [ip, #3620]!	; 0xe24

00004414 <sas_read8@plt>:
    4414:	add	ip, pc, #0, 12
    4418:	add	ip, ip, #60, 20	; 0x3c000
    441c:	ldr	pc, [ip, #3612]!	; 0xe1c

00004420 <sas_read2@plt>:
    4420:	add	ip, pc, #0, 12
    4424:	add	ip, ip, #60, 20	; 0x3c000
    4428:	ldr	pc, [ip, #3604]!	; 0xe14

0000442c <readstat_copy_lower@plt>:
    442c:	add	ip, pc, #0, 12
    4430:	add	ip, ip, #60, 20	; 0x3c000
    4434:	ldr	pc, [ip, #3596]!	; 0xe0c

00004438 <sprintf@plt>:
    4438:	add	ip, pc, #0, 12
    443c:	add	ip, ip, #60, 20	; 0x3c000
    4440:	ldr	pc, [ip, #3588]!	; 0xe04

00004444 <sas_read4@plt>:
    4444:	add	ip, pc, #0, 12
    4448:	add	ip, ip, #60, 20	; 0x3c000
    444c:	ldr	pc, [ip, #3580]!	; 0xdfc

00004450 <readstat_variable_get_label@plt>:
    4450:	add	ip, pc, #0, 12
    4454:	add	ip, ip, #60, 20	; 0x3c000
    4458:	ldr	pc, [ip, #3572]!	; 0xdf4

0000445c <spss_format@plt>:
    445c:	add	ip, pc, #0, 12
    4460:	add	ip, ip, #60, 20	; 0x3c000
    4464:	ldr	pc, [ip, #3564]!	; 0xdec

00004468 <spss_varinfo_free@plt>:
    4468:	add	ip, pc, #0, 12
    446c:	add	ip, ip, #60, 20	; 0x3c000
    4470:	ldr	pc, [ip, #3556]!	; 0xde4

00004474 <readstat_get_label_set@plt>:
    4474:	add	ip, pc, #0, 12
    4478:	add	ip, ip, #60, 20	; 0x3c000
    447c:	ldr	pc, [ip, #3548]!	; 0xddc

00004480 <readstat_variable_get_alignment@plt>:
    4480:	add	ip, pc, #0, 12
    4484:	add	ip, ip, #60, 20	; 0x3c000
    4488:	ldr	pc, [ip, #3540]!	; 0xdd4

0000448c <qsort@plt>:
    448c:	add	ip, pc, #0, 12
    4490:	add	ip, ip, #60, 20	; 0x3c000
    4494:	ldr	pc, [ip, #3532]!	; 0xdcc

00004498 <readstat_get_label_set_variable@plt>:
    4498:	add	ip, pc, #0, 12
    449c:	add	ip, ip, #60, 20	; 0x3c000
    44a0:	ldr	pc, [ip, #3524]!	; 0xdc4

000044a4 <readstat_write_bytes@plt>:
    44a4:	add	ip, pc, #0, 12
    44a8:	add	ip, ip, #60, 20	; 0x3c000
    44ac:	ldr	pc, [ip, #3516]!	; 0xdbc

000044b0 <sav_compress_row@plt>:
    44b0:	add	ip, pc, #0, 12
    44b4:	add	ip, ip, #60, 20	; 0x3c000
    44b8:	ldr	pc, [ip, #3508]!	; 0xdb4

000044bc <readstat_set_close_handler@plt>:
    44bc:	add	ip, pc, #0, 12
    44c0:	add	ip, ip, #60, 20	; 0x3c000
    44c4:	ldr	pc, [ip, #3500]!	; 0xdac

000044c8 <sas_fill_page@plt>:
    44c8:	add	ip, pc, #0, 12
    44cc:	add	ip, ip, #60, 20	; 0x3c000
    44d0:	ldr	pc, [ip, #3492]!	; 0xda4

000044d4 <sas_rle_compressed_len@plt>:
    44d4:	add	ip, pc, #0, 12
    44d8:	add	ip, ip, #60, 20	; 0x3c000
    44dc:	ldr	pc, [ip, #3484]!	; 0xd9c

000044e0 <por_ctx_init@plt>:
    44e0:	add	ip, pc, #0, 12
    44e4:	add	ip, ip, #60, 20	; 0x3c000
    44e8:	ldr	pc, [ip, #3476]!	; 0xd94

000044ec <readstat_validate_variable@plt>:
    44ec:	add	ip, pc, #0, 12
    44f0:	add	ip, ip, #60, 20	; 0x3c000
    44f4:	ldr	pc, [ip, #3468]!	; 0xd8c

000044f8 <sas_assign_tag@plt>:
    44f8:	add	ip, pc, #0, 12
    44fc:	add	ip, ip, #60, 20	; 0x3c000
    4500:	ldr	pc, [ip, #3460]!	; 0xd84

00004504 <zsav_compress_row@plt>:
    4504:	add	ip, pc, #0, 12
    4508:	add	ip, ip, #60, 20	; 0x3c000
    450c:	ldr	pc, [ip, #3452]!	; 0xd7c

00004510 <zsav_read_compressed_data@plt>:
    4510:	add	ip, pc, #0, 12
    4514:	add	ip, ip, #60, 20	; 0x3c000
    4518:	ldr	pc, [ip, #3444]!	; 0xd74

0000451c <readstat_get_value_label@plt>:
    451c:	add	ip, pc, #0, 12
    4520:	add	ip, ip, #60, 20	; 0x3c000
    4524:	ldr	pc, [ip, #3436]!	; 0xd6c

00004528 <sas_rle_compress@plt>:
    4528:	add	ip, pc, #0, 12
    452c:	add	ip, ip, #60, 20	; 0x3c000
    4530:	ldr	pc, [ip, #3428]!	; 0xd64

00004534 <readstat_write_line_padding@plt>:
    4534:	add	ip, pc, #0, 12
    4538:	add	ip, ip, #60, 20	; 0x3c000
    453c:	ldr	pc, [ip, #3420]!	; 0xd5c

00004540 <ck_str_hash_insert@plt>:
    4540:	add	ip, pc, #0, 12
    4544:	add	ip, ip, #60, 20	; 0x3c000
    4548:	ldr	pc, [ip, #3412]!	; 0xd54

0000454c <strncmp@plt>:
    454c:	add	ip, pc, #0, 12
    4550:	add	ip, ip, #60, 20	; 0x3c000
    4554:	ldr	pc, [ip, #3404]!	; 0xd4c

00004558 <byteswap_double@plt>:
    4558:	add	ip, pc, #0, 12
    455c:	add	ip, ip, #60, 20	; 0x3c000
    4560:	ldr	pc, [ip, #3396]!	; 0xd44

00004564 <close@plt>:
    4564:	add	ip, pc, #0, 12
    4568:	add	ip, ip, #60, 20	; 0x3c000
    456c:	ldr	pc, [ip, #3388]!	; 0xd3c

00004570 <readstat_write_bytes_as_lines@plt>:
    4570:	add	ip, pc, #0, 12
    4574:	add	ip, ip, #60, 20	; 0x3c000
    4578:	ldr	pc, [ip, #3380]!	; 0xd34

0000457c <spss_missingness_for_info@plt>:
    457c:	add	ip, pc, #0, 12
    4580:	add	ip, ip, #60, 20	; 0x3c000
    4584:	ldr	pc, [ip, #3372]!	; 0xd2c

00004588 <handle_variables@plt>:
    4588:	add	ip, pc, #0, 12
    458c:	add	ip, ip, #60, 20	; 0x3c000
    4590:	ldr	pc, [ip, #3364]!	; 0xd24

00004594 <readstat_variable_get_type_class@plt>:
    4594:	add	ip, pc, #0, 12
    4598:	add	ip, ip, #60, 20	; 0x3c000
    459c:	ldr	pc, [ip, #3356]!	; 0xd1c

000045a0 <readstat_write_space_padded_string@plt>:
    45a0:	add	ip, pc, #0, 12
    45a4:	add	ip, ip, #60, 20	; 0x3c000
    45a8:	ldr	pc, [ip, #3348]!	; 0xd14

000045ac <dta_ctx_alloc@plt>:
    45ac:	add	ip, pc, #0, 12
    45b0:	add	ip, ip, #60, 20	; 0x3c000
    45b4:	ldr	pc, [ip, #3340]!	; 0xd0c

Disassembly of section .text:

000045b8 <sas7bdat_update_progress>:
    45b8:	ldr	r3, [r0, #56]	; 0x38
    45bc:	push	{lr}		; (str lr, [sp, #-4]!)
    45c0:	ldr	lr, [r3, #16]
    45c4:	ldr	r2, [r0, #52]	; 0x34
    45c8:	ldr	r1, [r0, #28]
    45cc:	mov	ip, lr
    45d0:	ldr	r3, [r3, #20]
    45d4:	ldr	r0, [r0, #32]
    45d8:	pop	{lr}		; (ldr lr, [sp], #4)
    45dc:	bx	ip

000045e0 <sas7bdat_copy_text_ref>:
    45e0:	push	{r0, r1, r2, r4, r5, lr}
    45e4:	add	ip, sp, #8
    45e8:	stmdb	ip, {r2, r3}
    45ec:	ldr	ip, [sp, #24]
    45f0:	ldrh	lr, [sp]
    45f4:	ldr	r3, [ip, #152]	; 0x98
    45f8:	cmp	lr, r3
    45fc:	bge	4650 <sas7bdat_copy_text_ref+0x70>
    4600:	ldrh	r3, [sp, #4]
    4604:	cmp	r3, #0
    4608:	moveq	r4, r0
    460c:	moveq	r0, r3
    4610:	strbeq	r3, [r4]
    4614:	beq	4654 <sas7bdat_copy_text_ref+0x74>
    4618:	ldr	r4, [ip, #156]	; 0x9c
    461c:	ldrh	r2, [sp, #2]
    4620:	ldr	r4, [r4, lr, lsl #2]
    4624:	add	r5, r2, r3
    4628:	cmp	r5, r4
    462c:	bhi	4650 <sas7bdat_copy_text_ref+0x70>
    4630:	ldr	r4, [ip, #160]	; 0xa0
    4634:	ldr	ip, [ip, #208]	; 0xd0
    4638:	ldr	lr, [r4, lr, lsl #2]
    463c:	str	ip, [sp, #24]
    4640:	add	r2, lr, r2
    4644:	add	sp, sp, #12
    4648:	pop	{r4, r5, lr}
    464c:	b	427c <readstat_convert@plt>
    4650:	mov	r0, #5
    4654:	add	sp, sp, #12
    4658:	pop	{r4, r5, pc}

0000465c <sas7bdat_parse_single_row>:
    465c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4660:	vpush	{d8}
    4664:	ldr	r2, [r1, #76]	; 0x4c
    4668:	ldr	r3, [r1, #84]	; 0x54
    466c:	cmp	r2, r3
    4670:	sub	sp, sp, #68	; 0x44
    4674:	beq	46ac <sas7bdat_parse_single_row+0x50>
    4678:	ldr	r8, [r1, #88]	; 0x58
    467c:	cmp	r8, #0
    4680:	subne	r8, r8, #1
    4684:	strne	r8, [r1, #88]	; 0x58
    4688:	bne	46ac <sas7bdat_parse_single_row+0x50>
    468c:	ldr	r3, [r1, #16]
    4690:	mov	r4, r1
    4694:	cmp	r3, #0
    4698:	str	r0, [sp, #36]	; 0x24
    469c:	bne	46c0 <sas7bdat_parse_single_row+0x64>
    46a0:	ldr	r3, [r4, #76]	; 0x4c
    46a4:	add	r3, r3, #1
    46a8:	str	r3, [r4, #76]	; 0x4c
    46ac:	mov	r7, #0
    46b0:	mov	r0, r7
    46b4:	add	sp, sp, #68	; 0x44
    46b8:	vpop	{d8}
    46bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    46c0:	ldr	r1, [r1, #176]	; 0xb0
    46c4:	ldr	r0, [r4, #180]	; 0xb4
    46c8:	lsl	r1, r1, #2
    46cc:	add	r1, r1, #1
    46d0:	str	r1, [r4, #184]	; 0xb8
    46d4:	bl	4330 <readstat_realloc@plt>
    46d8:	cmp	r0, #0
    46dc:	str	r0, [r4, #180]	; 0xb4
    46e0:	moveq	r7, #3
    46e4:	beq	46b0 <sas7bdat_parse_single_row+0x54>
    46e8:	vldr	d8, [pc, #576]	; 4930 <sas7bdat_parse_single_row+0x2d4>
    46ec:	add	sl, sp, #48	; 0x30
    46f0:	add	r3, sp, #56	; 0x38
    46f4:	str	r3, [sp, #32]
    46f8:	ldr	r3, [r4, #80]	; 0x50
    46fc:	cmp	r8, r3
    4700:	bcs	46a0 <sas7bdat_parse_single_row+0x44>
    4704:	ldr	r3, [r4, #196]	; 0xc4
    4708:	ldr	fp, [r3, r8, lsl #2]
    470c:	ldr	ip, [fp, #2144]	; 0x860
    4710:	cmp	ip, #0
    4714:	bne	4834 <sas7bdat_parse_single_row+0x1d8>
    4718:	ldr	r3, [r4, #192]	; 0xc0
    471c:	mov	r5, #40	; 0x28
    4720:	ldr	r0, [r4, #68]	; 0x44
    4724:	mla	r5, r5, r8, r3
    4728:	mov	r1, #0
    472c:	ldrd	r2, [r5, #24]
    4730:	cmp	r3, r1
    4734:	cmpeq	r2, r0
    4738:	bhi	491c <sas7bdat_parse_single_row+0x2c0>
    473c:	ldr	r9, [r5, #32]
    4740:	adds	r6, r2, r9
    4744:	adc	r7, r3, #0
    4748:	cmp	r1, r7
    474c:	cmpeq	r0, r6
    4750:	bcc	491c <sas7bdat_parse_single_row+0x2c0>
    4754:	ldr	r1, [sp, #36]	; 0x24
    4758:	mov	r0, sl
    475c:	add	r6, r1, r2
    4760:	mov	r2, #16
    4764:	mov	r1, ip
    4768:	bl	42e8 <memset@plt>
    476c:	ldr	r3, [r5, #36]	; 0x24
    4770:	cmp	r3, #0
    4774:	str	r3, [sp, #56]	; 0x38
    4778:	bne	483c <sas7bdat_parse_single_row+0x1e0>
    477c:	ldr	r3, [r4, #208]	; 0xd0
    4780:	mov	r2, r6
    4784:	str	r3, [sp]
    4788:	mov	r3, r9
    478c:	ldr	r1, [r4, #184]	; 0xb8
    4790:	ldr	r0, [r4, #180]	; 0xb4
    4794:	bl	427c <readstat_convert@plt>
    4798:	subs	r7, r0, #0
    479c:	beq	47fc <sas7bdat_parse_single_row+0x1a0>
    47a0:	ldr	r3, [r4, #24]
    47a4:	cmp	r3, #0
    47a8:	beq	46b0 <sas7bdat_parse_single_row+0x54>
    47ac:	ldr	r3, [r4, #76]	; 0x4c
    47b0:	str	r6, [sp, #8]
    47b4:	ldr	r2, [r5, #32]
    47b8:	add	r8, r4, #480	; 0x1e0
    47bc:	str	r2, [sp, #4]
    47c0:	ldr	r2, [r5, #20]
    47c4:	add	r8, r8, #1
    47c8:	add	r2, r2, #1
    47cc:	str	r2, [sp]
    47d0:	ldr	r2, [pc, #352]	; 4938 <sas7bdat_parse_single_row+0x2dc>
    47d4:	add	r3, r3, #1
    47d8:	add	r2, pc, r2
    47dc:	mov	r1, #2048	; 0x800
    47e0:	mov	r0, r8
    47e4:	bl	42c4 <snprintf@plt>
    47e8:	ldr	r3, [r4, #24]
    47ec:	ldr	r1, [r4, #52]	; 0x34
    47f0:	mov	r0, r8
    47f4:	blx	r3
    47f8:	b	46b0 <sas7bdat_parse_single_row+0x54>
    47fc:	ldr	r3, [r4, #180]	; 0xb4
    4800:	str	r3, [sp, #48]	; 0x30
    4804:	ldr	r3, [r4, #52]	; 0x34
    4808:	str	r3, [sp, #8]
    480c:	ldr	r3, [sp, #32]
    4810:	ldm	r3, {r0, r1}
    4814:	stm	sp, {r0, r1}
    4818:	mov	r1, fp
    481c:	ldm	sl, {r2, r3}
    4820:	ldr	r5, [r4, #16]
    4824:	ldr	r0, [r4, #76]	; 0x4c
    4828:	blx	r5
    482c:	cmp	r0, #0
    4830:	bne	4924 <sas7bdat_parse_single_row+0x2c8>
    4834:	add	r8, r8, #1
    4838:	b	46f8 <sas7bdat_parse_single_row+0x9c>
    483c:	cmp	r3, #5
    4840:	bne	4804 <sas7bdat_parse_single_row+0x1a8>
    4844:	ldr	r3, [r4, #40]	; 0x28
    4848:	cmp	r3, #0
    484c:	add	r3, r6, r9
    4850:	moveq	r2, r6
    4854:	moveq	r0, #0
    4858:	moveq	r1, #0
    485c:	movne	ip, r3
    4860:	movne	r0, #0
    4864:	movne	r1, #0
    4868:	bne	48d8 <sas7bdat_parse_single_row+0x27c>
    486c:	cmp	r2, r3
    4870:	beq	48e0 <sas7bdat_parse_single_row+0x284>
    4874:	lsl	ip, r1, #8
    4878:	orr	ip, ip, r0, lsr #24
    487c:	lsl	r1, r0, #8
    4880:	str	r1, [sp, #24]
    4884:	str	ip, [sp, #28]
    4888:	ldrb	r0, [r2], #1
    488c:	ldrd	r6, [sp, #24]
    4890:	mov	r1, #0
    4894:	orr	r6, r6, r0
    4898:	orr	r7, r7, r1
    489c:	mov	r0, r6
    48a0:	mov	r1, r7
    48a4:	b	486c <sas7bdat_parse_single_row+0x210>
    48a8:	lsl	r3, r1, #8
    48ac:	orr	r3, r3, r0, lsr #24
    48b0:	str	r3, [sp, #20]
    48b4:	lsl	r3, r0, #8
    48b8:	str	r3, [sp, #16]
    48bc:	ldrb	r0, [ip, #-1]!
    48c0:	ldrd	r2, [sp, #16]
    48c4:	mov	r1, #0
    48c8:	orr	r2, r2, r0
    48cc:	orr	r3, r3, r1
    48d0:	mov	r0, r2
    48d4:	mov	r1, r3
    48d8:	cmp	r6, ip
    48dc:	bne	48a8 <sas7bdat_parse_single_row+0x24c>
    48e0:	lsl	r2, r9, #3
    48e4:	rsb	r2, r2, #64	; 0x40
    48e8:	bl	20a68 <__aeabi_llsl>
    48ec:	vmov	d7, r0, r1
    48f0:	strd	r0, [sp, #40]	; 0x28
    48f4:	vcmp.f64	d7, d7
    48f8:	vmrs	APSR_nzcv, fpscr
    48fc:	vstrvc	d7, [sp, #48]	; 0x30
    4900:	bvc	4804 <sas7bdat_parse_single_row+0x1a8>
    4904:	mvn	r1, r1, lsr #8
    4908:	mov	r0, sl
    490c:	uxtb	r1, r1
    4910:	vstr	d8, [sp, #48]	; 0x30
    4914:	bl	44f8 <sas_assign_tag@plt>
    4918:	b	4804 <sas7bdat_parse_single_row+0x1a8>
    491c:	mov	r7, #5
    4920:	b	46b0 <sas7bdat_parse_single_row+0x54>
    4924:	mov	r7, #4
    4928:	b	46b0 <sas7bdat_parse_single_row+0x54>
    492c:	nop			; (mov r0, r0)
    4930:	.word	0x00000000
    4934:	.word	0x7ff80000
    4938:	.word	0x0001d230

0000493c <sas7bdat_submit_columns_if_needed>:
    493c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4940:	sub	sp, sp, #84	; 0x54
    4944:	ldr	r7, [r0, #64]	; 0x40
    4948:	cmp	r7, #0
    494c:	bne	4a34 <sas7bdat_submit_columns_if_needed+0xf8>
    4950:	ldr	r6, [r0]
    4954:	mov	r5, r1
    4958:	cmp	r6, #0
    495c:	mov	r4, r0
    4960:	beq	4a20 <sas7bdat_submit_columns_if_needed+0xe4>
    4964:	add	r8, sp, #24
    4968:	mov	r2, #56	; 0x38
    496c:	mov	r1, r7
    4970:	mov	r0, r8
    4974:	bl	42e8 <memset@plt>
    4978:	ldr	r2, [r4, #84]	; 0x54
    497c:	mov	r3, #0
    4980:	strd	r2, [sp, #24]
    4984:	ldr	r2, [r4, #80]	; 0x50
    4988:	mov	r3, #0
    498c:	strd	r2, [sp, #32]
    4990:	ldr	r3, [r4, #212]	; 0xd4
    4994:	ldr	r2, [r4, #220]	; 0xdc
    4998:	str	r3, [sp, #40]	; 0x28
    499c:	ldr	r3, [r4, #216]	; 0xd8
    49a0:	str	r3, [sp, #44]	; 0x2c
    49a4:	asr	r3, r2, #31
    49a8:	strd	r2, [sp, #48]	; 0x30
    49ac:	ldr	r3, [r4, #40]	; 0x28
    49b0:	ldrb	r2, [sp, #76]	; 0x4c
    49b4:	cmp	r3, #0
    49b8:	movne	r3, #1
    49bc:	moveq	r3, #2
    49c0:	str	r3, [sp, #60]	; 0x3c
    49c4:	add	r3, r4, #224	; 0xe0
    49c8:	str	r3, [sp, #68]	; 0x44
    49cc:	ldr	r3, [r4, #200]	; 0xc8
    49d0:	bic	r2, r2, #1
    49d4:	str	r3, [sp, #72]	; 0x48
    49d8:	ldr	r3, [r4, #44]	; 0x2c
    49dc:	cmp	r5, #0
    49e0:	and	r3, r3, #1
    49e4:	orr	r3, r3, r2
    49e8:	strb	r3, [sp, #76]	; 0x4c
    49ec:	beq	4a04 <sas7bdat_submit_columns_if_needed+0xc8>
    49f0:	ldrb	r3, [r4, #2529]	; 0x9e1
    49f4:	tst	r3, #1
    49f8:	movne	r3, #2
    49fc:	moveq	r3, #1
    4a00:	str	r3, [sp, #56]	; 0x38
    4a04:	ldr	r1, [r4, #52]	; 0x34
    4a08:	mov	r0, r8
    4a0c:	blx	r6
    4a10:	cmp	r0, #0
    4a14:	beq	4a20 <sas7bdat_submit_columns_if_needed+0xe4>
    4a18:	mov	r6, #4
    4a1c:	b	4a84 <sas7bdat_submit_columns_if_needed+0x148>
    4a20:	ldr	r0, [r4, #80]	; 0x50
    4a24:	cmp	r0, #0
    4a28:	bne	4a3c <sas7bdat_submit_columns_if_needed+0x100>
    4a2c:	mov	r3, #1
    4a30:	str	r3, [r4, #64]	; 0x40
    4a34:	mov	r6, #0
    4a38:	b	4a84 <sas7bdat_submit_columns_if_needed+0x148>
    4a3c:	mov	r1, #4
    4a40:	bl	400c <readstat_calloc@plt>
    4a44:	cmp	r0, #0
    4a48:	str	r0, [r4, #196]	; 0xc4
    4a4c:	moveq	r6, #3
    4a50:	beq	4a84 <sas7bdat_submit_columns_if_needed+0x148>
    4a54:	add	r9, r4, #480	; 0x1e0
    4a58:	ldr	r3, [pc, #480]	; 4c40 <sas7bdat_submit_columns_if_needed+0x304>
    4a5c:	mov	sl, r7
    4a60:	mov	r6, #0
    4a64:	add	r9, r9, #1
    4a68:	add	r3, pc, r3
    4a6c:	str	r3, [sp, #20]
    4a70:	ldr	r3, [r4, #80]	; 0x50
    4a74:	cmp	r7, r3
    4a78:	bcc	4a90 <sas7bdat_submit_columns_if_needed+0x154>
    4a7c:	cmp	r6, #0
    4a80:	beq	4a2c <sas7bdat_submit_columns_if_needed+0xf0>
    4a84:	mov	r0, r6
    4a88:	add	sp, sp, #84	; 0x54
    4a8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4a90:	ldr	r3, [r4, #196]	; 0xc4
    4a94:	ldr	r1, [pc, #424]	; 4c44 <sas7bdat_submit_columns_if_needed+0x308>
    4a98:	mov	r0, #1
    4a9c:	str	r3, [sp, #16]
    4aa0:	bl	400c <readstat_calloc@plt>
    4aa4:	mov	r8, #40	; 0x28
    4aa8:	ldr	r2, [r4, #192]	; 0xc0
    4aac:	mul	r8, r8, r7
    4ab0:	lsl	fp, r7, #2
    4ab4:	add	r2, r2, r8
    4ab8:	ldr	r1, [r2, #36]	; 0x24
    4abc:	ldr	r3, [r2, #32]
    4ac0:	cmp	r1, #5
    4ac4:	mov	r5, r0
    4ac8:	str	r7, [r0, #4]
    4acc:	str	sl, [r0, #2148]	; 0x864
    4ad0:	str	r1, [r0]
    4ad4:	str	r3, [r0, #1596]	; 0x63c
    4ad8:	bne	4c20 <sas7bdat_submit_columns_if_needed+0x2e4>
    4adc:	sub	r3, r3, #3
    4ae0:	cmp	r3, #5
    4ae4:	movhi	r6, #5
    4ae8:	bhi	4b64 <sas7bdat_submit_columns_if_needed+0x228>
    4aec:	str	r4, [sp]
    4af0:	mov	r1, #300	; 0x12c
    4af4:	ldm	r2, {r2, r3}
    4af8:	add	r0, r5, #8
    4afc:	bl	45e0 <sas7bdat_copy_text_ref>
    4b00:	cmp	r0, #0
    4b04:	bne	4b60 <sas7bdat_submit_columns_if_needed+0x224>
    4b08:	ldr	r3, [r4, #192]	; 0xc0
    4b0c:	str	r4, [sp]
    4b10:	add	r3, r3, r8
    4b14:	add	r0, r5, #308	; 0x134
    4b18:	ldrh	r1, [r3, #8]
    4b1c:	ldrh	r2, [r3, #6]
    4b20:	ldrh	r3, [r3, #10]
    4b24:	orr	r2, r2, r1, lsl #16
    4b28:	mov	r1, #256	; 0x100
    4b2c:	bl	45e0 <sas7bdat_copy_text_ref>
    4b30:	cmp	r0, #0
    4b34:	bne	4b60 <sas7bdat_submit_columns_if_needed+0x224>
    4b38:	ldr	r3, [r4, #192]	; 0xc0
    4b3c:	mov	r1, #1024	; 0x400
    4b40:	add	r8, r3, r8
    4b44:	add	r8, r8, #12
    4b48:	str	r4, [sp]
    4b4c:	add	r0, r5, #564	; 0x234
    4b50:	ldm	r8, {r2, r3}
    4b54:	bl	45e0 <sas7bdat_copy_text_ref>
    4b58:	cmp	r0, #0
    4b5c:	beq	4bc4 <sas7bdat_submit_columns_if_needed+0x288>
    4b60:	mov	r6, r0
    4b64:	mov	r0, r5
    4b68:	bl	3f04 <free@plt>
    4b6c:	cmp	r6, #17
    4b70:	bne	4bc0 <sas7bdat_submit_columns_if_needed+0x284>
    4b74:	ldr	r3, [r4, #24]
    4b78:	cmp	r3, #0
    4b7c:	moveq	r5, r3
    4b80:	beq	4bc4 <sas7bdat_submit_columns_if_needed+0x288>
    4b84:	add	r3, r5, #564	; 0x234
    4b88:	str	r3, [sp, #8]
    4b8c:	add	r3, r5, #308	; 0x134
    4b90:	add	r5, r5, #8
    4b94:	str	r3, [sp, #4]
    4b98:	mov	r1, #2048	; 0x800
    4b9c:	mov	r3, r7
    4ba0:	str	r5, [sp]
    4ba4:	ldr	r2, [sp, #20]
    4ba8:	mov	r0, r9
    4bac:	bl	42c4 <snprintf@plt>
    4bb0:	ldr	r3, [r4, #24]
    4bb4:	ldr	r1, [r4, #52]	; 0x34
    4bb8:	mov	r0, r9
    4bbc:	blx	r3
    4bc0:	mov	r5, #0
    4bc4:	ldr	r3, [sp, #16]
    4bc8:	str	r5, [r3, fp]
    4bcc:	ldr	r3, [r4, #196]	; 0xc4
    4bd0:	ldr	r1, [r3, fp]
    4bd4:	cmp	r1, #0
    4bd8:	beq	4a7c <sas7bdat_submit_columns_if_needed+0x140>
    4bdc:	ldr	r5, [r4, #8]
    4be0:	cmp	r5, #0
    4be4:	beq	4c38 <sas7bdat_submit_columns_if_needed+0x2fc>
    4be8:	ldr	r3, [r4, #52]	; 0x34
    4bec:	add	r2, r1, #308	; 0x134
    4bf0:	mov	r0, r7
    4bf4:	blx	r5
    4bf8:	cmp	r0, #1
    4bfc:	beq	4a18 <sas7bdat_submit_columns_if_needed+0xdc>
    4c00:	cmp	r0, #2
    4c04:	bne	4c38 <sas7bdat_submit_columns_if_needed+0x2fc>
    4c08:	ldr	r3, [r4, #196]	; 0xc4
    4c0c:	mov	r2, #1
    4c10:	ldr	r3, [r3, fp]
    4c14:	str	r2, [r3, #2144]	; 0x860
    4c18:	add	r7, r7, #1
    4c1c:	b	4a70 <sas7bdat_submit_columns_if_needed+0x134>
    4c20:	cmp	r1, #0
    4c24:	bne	4aec <sas7bdat_submit_columns_if_needed+0x1b0>
    4c28:	ldr	r1, [pc, #24]	; 4c48 <sas7bdat_submit_columns_if_needed+0x30c>
    4c2c:	sub	r3, r3, #1
    4c30:	cmp	r3, r1
    4c34:	b	4ae4 <sas7bdat_submit_columns_if_needed+0x1a8>
    4c38:	add	sl, sl, #1
    4c3c:	b	4c18 <sas7bdat_submit_columns_if_needed+0x2dc>
    4c40:	.word	0x0001cfef
    4c44:	.word	0x00000868
    4c48:	.word	0x00007ffe
    4c4c:	.word	0x00000000

00004c50 <xport_skip_rest_of_record.isra.2>:
    4c50:	push	{r4, lr}
    4c54:	mov	r1, #1
    4c58:	ldr	r3, [r0, #8]
    4c5c:	ldr	r2, [r0, #20]
    4c60:	mov	r4, r0
    4c64:	mov	r0, #0
    4c68:	blx	r3
    4c6c:	cmn	r0, #1
    4c70:	bne	4c7c <xport_skip_rest_of_record.isra.2+0x2c>
    4c74:	mov	r0, #15
    4c78:	pop	{r4, pc}
    4c7c:	mov	r1, #80	; 0x50
    4c80:	bl	20a48 <__aeabi_idivmod>
    4c84:	subs	r0, r1, #0
    4c88:	beq	4ca8 <xport_skip_rest_of_record.isra.2+0x58>
    4c8c:	ldr	r3, [r4, #8]
    4c90:	ldr	r2, [r4, #20]
    4c94:	mov	r1, #1
    4c98:	rsb	r0, r0, #80	; 0x50
    4c9c:	blx	r3
    4ca0:	cmn	r0, #1
    4ca4:	beq	4c74 <xport_skip_rest_of_record.isra.2+0x24>
    4ca8:	mov	r0, #0
    4cac:	pop	{r4, pc}

00004cb0 <xport_process_row.isra.3>:
    4cb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4cb4:	vpush	{d8}
    4cb8:	vldr	d8, [pc, #528]	; 4ed0 <xport_process_row.isra.3+0x220>
    4cbc:	mov	r5, #0
    4cc0:	mov	r4, r0
    4cc4:	sub	sp, sp, #60	; 0x3c
    4cc8:	add	r9, sp, #32
    4ccc:	mov	sl, r1
    4cd0:	mov	r6, r5
    4cd4:	mov	r8, r5
    4cd8:	add	r3, r9, #1
    4cdc:	str	r3, [sp, #20]
    4ce0:	ldr	r3, [r4, #64]	; 0x40
    4ce4:	cmp	r8, r3
    4ce8:	blt	4d10 <xport_process_row.isra.3+0x60>
    4cec:	ldr	fp, [r4, #72]	; 0x48
    4cf0:	cmp	fp, #0
    4cf4:	subne	fp, fp, #1
    4cf8:	ldreq	r3, [r4, #80]	; 0x50
    4cfc:	strne	fp, [r4, #72]	; 0x48
    4d00:	addeq	r3, r3, #1
    4d04:	movne	fp, #0
    4d08:	streq	r3, [r4, #80]	; 0x50
    4d0c:	b	4e50 <xport_process_row.isra.3+0x1a0>
    4d10:	ldr	r3, [r4, #376]	; 0x178
    4d14:	mov	r2, #16
    4d18:	mov	r1, #0
    4d1c:	ldr	r7, [r3, r8, lsl #2]
    4d20:	add	r3, sp, #40	; 0x28
    4d24:	mov	r0, r3
    4d28:	str	r3, [sp, #16]
    4d2c:	bl	42e8 <memset@plt>
    4d30:	ldr	r3, [r7]
    4d34:	ldr	r2, [r7, #1596]	; 0x63c
    4d38:	cmp	r3, #0
    4d3c:	str	r3, [sp, #48]	; 0x30
    4d40:	bne	4da0 <xport_process_row.isra.3+0xf0>
    4d44:	lsl	r2, r2, #2
    4d48:	mov	r0, r5
    4d4c:	add	r1, r2, #1
    4d50:	bl	4330 <readstat_realloc@plt>
    4d54:	subs	r5, r0, #0
    4d58:	beq	4ec4 <xport_process_row.isra.3+0x214>
    4d5c:	ldr	r3, [r7, #1596]	; 0x63c
    4d60:	ldr	r2, [r4, #48]	; 0x30
    4d64:	lsl	r1, r3, #2
    4d68:	str	r2, [sp]
    4d6c:	add	r1, r1, #1
    4d70:	add	r2, sl, r6
    4d74:	bl	427c <readstat_convert@plt>
    4d78:	subs	fp, r0, #0
    4d7c:	bne	4e50 <xport_process_row.isra.3+0x1a0>
    4d80:	str	r5, [sp, #40]	; 0x28
    4d84:	ldr	fp, [r4, #16]
    4d88:	ldr	r3, [r7, #1596]	; 0x63c
    4d8c:	cmp	fp, #0
    4d90:	add	r6, r6, r3
    4d94:	bne	4e68 <xport_process_row.isra.3+0x1b8>
    4d98:	add	r8, r8, #1
    4d9c:	b	4ce0 <xport_process_row.isra.3+0x30>
    4da0:	sub	r3, r2, #3
    4da4:	cmp	r3, #5
    4da8:	vstr	d8, [sp, #24]
    4dac:	bhi	4e08 <xport_process_row.isra.3+0x158>
    4db0:	add	r1, r6, #1
    4db4:	mov	r3, #0
    4db8:	sub	r2, r2, #1
    4dbc:	add	r1, sl, r1
    4dc0:	ldr	r0, [sp, #20]
    4dc4:	str	r3, [r9]
    4dc8:	str	r3, [r9, #4]
    4dcc:	bl	3fe8 <memcmp@plt>
    4dd0:	add	fp, sl, r6
    4dd4:	cmp	r0, #0
    4dd8:	bne	4e20 <xport_process_row.isra.3+0x170>
    4ddc:	ldrb	r0, [sl, r6]
    4de0:	cmp	r0, #46	; 0x2e
    4de4:	bne	4e14 <xport_process_row.isra.3+0x164>
    4de8:	ldrb	r3, [fp]
    4dec:	cmp	r3, #46	; 0x2e
    4df0:	strbne	r3, [sp, #52]	; 0x34
    4df4:	ldrbne	r3, [sp, #53]	; 0x35
    4df8:	orrne	r3, r3, #2
    4dfc:	ldrbeq	r3, [sp, #53]	; 0x35
    4e00:	orreq	r3, r3, #1
    4e04:	strb	r3, [sp, #53]	; 0x35
    4e08:	ldrd	r2, [sp, #24]
    4e0c:	strd	r2, [sp, #40]	; 0x28
    4e10:	b	4d84 <xport_process_row.isra.3+0xd4>
    4e14:	bl	4198 <sas_validate_tag@plt>
    4e18:	cmp	r0, #0
    4e1c:	beq	4de8 <xport_process_row.isra.3+0x138>
    4e20:	ldr	r2, [r7, #1596]	; 0x63c
    4e24:	mov	r1, fp
    4e28:	mov	r0, r9
    4e2c:	bl	3f64 <memcpy@plt>
    4e30:	mov	r3, #0
    4e34:	add	r2, sp, #24
    4e38:	mov	r1, #1
    4e3c:	mov	r0, r9
    4e40:	bl	4048 <cnxptiee@plt>
    4e44:	cmp	r0, #0
    4e48:	beq	4e08 <xport_process_row.isra.3+0x158>
    4e4c:	mov	fp, #16
    4e50:	mov	r0, r5
    4e54:	bl	3f04 <free@plt>
    4e58:	mov	r0, fp
    4e5c:	add	sp, sp, #60	; 0x3c
    4e60:	vpop	{d8}
    4e64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4e68:	ldr	r3, [r4, #376]	; 0x178
    4e6c:	lsl	r2, r8, #2
    4e70:	ldr	r3, [r3, r2]
    4e74:	ldr	r3, [r3, #2144]	; 0x860
    4e78:	cmp	r3, #0
    4e7c:	bne	4d98 <xport_process_row.isra.3+0xe8>
    4e80:	ldr	r3, [r4, #72]	; 0x48
    4e84:	cmp	r3, #0
    4e88:	bne	4d98 <xport_process_row.isra.3+0xe8>
    4e8c:	ldr	r3, [r4, #36]	; 0x24
    4e90:	str	r3, [sp, #8]
    4e94:	add	r3, sp, #56	; 0x38
    4e98:	ldmdb	r3, {r0, r1}
    4e9c:	ldr	r3, [sp, #16]
    4ea0:	stm	sp, {r0, r1}
    4ea4:	mov	r1, r7
    4ea8:	ldm	r3, {r2, r3}
    4eac:	ldr	r0, [r4, #80]	; 0x50
    4eb0:	blx	fp
    4eb4:	cmp	r0, #0
    4eb8:	beq	4d98 <xport_process_row.isra.3+0xe8>
    4ebc:	mov	fp, #4
    4ec0:	b	4e50 <xport_process_row.isra.3+0x1a0>
    4ec4:	mov	fp, #3
    4ec8:	b	4e50 <xport_process_row.isra.3+0x1a0>
    4ecc:	nop			; (mov r0, r0)
    4ed0:	.word	0x00000000
    4ed4:	.word	0x7ff80000

00004ed8 <xport_construct_format.constprop.4>:
    4ed8:	push	{r4, r5, r6, r7, r8, fp, lr}
    4edc:	mov	r4, r0
    4ee0:	lsl	r0, r2, #2
    4ee4:	mov	r6, r3
    4ee8:	add	r3, r0, #8
    4eec:	add	fp, sp, #24
    4ef0:	bic	r3, r3, #7
    4ef4:	sub	sp, sp, #12
    4ef8:	sub	sp, sp, r3
    4efc:	add	r5, sp, #8
    4f00:	mov	r3, #0
    4f04:	str	r3, [sp]
    4f08:	mov	r3, r2
    4f0c:	mov	r2, r1
    4f10:	add	r1, r0, #1
    4f14:	mov	r0, r5
    4f18:	ldr	r8, [fp, #4]
    4f1c:	bl	427c <readstat_convert@plt>
    4f20:	subs	r7, r0, #0
    4f24:	bne	4f5c <xport_construct_format.constprop.4+0x84>
    4f28:	ldrb	r3, [sp, #8]
    4f2c:	cmp	r3, #0
    4f30:	strbeq	r7, [r4]
    4f34:	beq	4f5c <xport_construct_format.constprop.4+0x84>
    4f38:	cmp	r8, #0
    4f3c:	beq	4f68 <xport_construct_format.constprop.4+0x90>
    4f40:	ldr	r2, [pc, #100]	; 4fac <xport_construct_format.constprop.4+0xd4>
    4f44:	stm	sp, {r6, r8}
    4f48:	mov	r3, r5
    4f4c:	add	r2, pc, r2
    4f50:	mov	r1, #256	; 0x100
    4f54:	mov	r0, r4
    4f58:	bl	42c4 <snprintf@plt>
    4f5c:	mov	r0, r7
    4f60:	sub	sp, fp, #24
    4f64:	pop	{r4, r5, r6, r7, r8, fp, pc}
    4f68:	cmp	r6, #0
    4f6c:	beq	4f90 <xport_construct_format.constprop.4+0xb8>
    4f70:	ldr	r2, [pc, #56]	; 4fb0 <xport_construct_format.constprop.4+0xd8>
    4f74:	str	r6, [sp]
    4f78:	mov	r3, r5
    4f7c:	add	r2, pc, r2
    4f80:	mov	r1, #256	; 0x100
    4f84:	mov	r0, r4
    4f88:	bl	42c4 <snprintf@plt>
    4f8c:	b	4f5c <xport_construct_format.constprop.4+0x84>
    4f90:	ldr	r2, [pc, #28]	; 4fb4 <xport_construct_format.constprop.4+0xdc>
    4f94:	mov	r3, r5
    4f98:	add	r2, pc, r2
    4f9c:	mov	r1, #256	; 0x100
    4fa0:	mov	r0, r4
    4fa4:	bl	42c4 <snprintf@plt>
    4fa8:	b	4f5c <xport_construct_format.constprop.4+0x84>
    4fac:	.word	0x0001cd55
    4fb0:	.word	0x0001cd2d
    4fb4:	.word	0x0001d8d6

00004fb8 <copypad>:
    4fb8:	add	r1, r0, r1
    4fbc:	sub	r2, r2, #1
    4fc0:	cmp	r0, r1
    4fc4:	bxcs	lr
    4fc8:	ldrb	r3, [r2, #1]!
    4fcc:	cmp	r3, #0
    4fd0:	bne	4fe8 <copypad+0x30>
    4fd4:	mov	r3, #32
    4fd8:	strb	r3, [r0], #1
    4fdc:	cmp	r1, r0
    4fe0:	bhi	4fd8 <copypad+0x20>
    4fe4:	bx	lr
    4fe8:	strb	r3, [r0], #1
    4fec:	b	4fc0 <copypad+0x8>

00004ff0 <xport_write_variables>:
    4ff0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4ff4:	mov	r8, #0
    4ff8:	sub	sp, sp, #228	; 0xe4
    4ffc:	add	r6, sp, #84	; 0x54
    5000:	mov	fp, r0
    5004:	mov	sl, #1
    5008:	mov	r9, r8
    500c:	add	r3, r6, #8
    5010:	str	r8, [sp, #12]
    5014:	str	r3, [sp, #28]
    5018:	ldr	r3, [fp, #28]
    501c:	sub	r1, sl, #1
    5020:	cmp	r3, r1
    5024:	mov	r0, fp
    5028:	bgt	5120 <xport_write_variables+0x130>
    502c:	bl	ef7c <xport_finish_record>
    5030:	subs	r3, r0, #0
    5034:	bne	52e4 <xport_write_variables+0x2f4>
    5038:	ldr	r2, [fp, #8]
    503c:	cmp	r9, #0
    5040:	sub	r2, r2, #8
    5044:	clz	r2, r2
    5048:	lsr	r2, r2, #5
    504c:	moveq	r2, #0
    5050:	cmp	r2, #0
    5054:	beq	52e4 <xport_write_variables+0x2f4>
    5058:	add	r5, sp, #48	; 0x30
    505c:	mov	r1, r3
    5060:	mov	r2, #36	; 0x24
    5064:	mov	r0, r5
    5068:	str	r3, [sp, #12]
    506c:	bl	42e8 <memset@plt>
    5070:	ldr	r1, [pc, #1108]	; 54cc <xport_write_variables+0x4dc>
    5074:	mov	r2, r5
    5078:	add	r1, pc, r1
    507c:	ldr	r3, [sp, #12]
    5080:	ldr	r0, [r1, #9]!
    5084:	cmp	r8, #0
    5088:	strb	r3, [sp, #56]	; 0x38
    508c:	ldr	r1, [r1, #4]
    5090:	str	r9, [sp, #60]	; 0x3c
    5094:	stmia	r2!, {r0, r1}
    5098:	beq	50ac <xport_write_variables+0xbc>
    509c:	ldr	r1, [pc, #1068]	; 54d0 <xport_write_variables+0x4e0>
    50a0:	mov	r0, r5
    50a4:	add	r1, pc, r1
    50a8:	bl	40e4 <strcpy@plt>
    50ac:	ldr	r3, [sp, #60]	; 0x3c
    50b0:	ldr	r2, [pc, #1052]	; 54d4 <xport_write_variables+0x4e4>
    50b4:	add	r4, sp, #84	; 0x54
    50b8:	str	r3, [sp]
    50bc:	add	r2, pc, r2
    50c0:	mov	r3, r5
    50c4:	mov	r1, #81	; 0x51
    50c8:	mov	r0, r4
    50cc:	bl	42c4 <snprintf@plt>
    50d0:	mov	r1, r4
    50d4:	mov	r0, fp
    50d8:	bl	f15c <xport_write_record>
    50dc:	subs	r3, r0, #0
    50e0:	bne	52e4 <xport_write_variables+0x2f4>
    50e4:	ldr	r3, [pc, #1004]	; 54d8 <xport_write_variables+0x4e8>
    50e8:	mov	r5, #1
    50ec:	add	r3, pc, r3
    50f0:	add	r7, sp, #36	; 0x24
    50f4:	str	r3, [sp, #16]
    50f8:	add	r3, sp, #32
    50fc:	str	r3, [sp, #20]
    5100:	ldr	r3, [fp, #28]
    5104:	sub	r1, r5, #1
    5108:	cmp	r3, r1
    510c:	mov	r0, fp
    5110:	bgt	5304 <xport_write_variables+0x314>
    5114:	bl	ef7c <xport_finish_record>
    5118:	mov	r3, r0
    511c:	b	52e4 <xport_write_variables+0x2f4>
    5120:	bl	43cc <readstat_get_variable@plt>
    5124:	mov	r5, r0
    5128:	ldr	r1, [r0, #1600]	; 0x640
    512c:	ldr	r0, [r0]
    5130:	bl	f050 <xport_variable_width>
    5134:	mov	r2, #140	; 0x8c
    5138:	mov	r1, #0
    513c:	str	r0, [sp, #16]
    5140:	mov	r0, r6
    5144:	bl	42e8 <memset@plt>
    5148:	ldr	r2, [pc, #908]	; 54dc <xport_write_variables+0x4ec>
    514c:	ldrh	r3, [sp, #16]
    5150:	add	r2, pc, r2
    5154:	strh	sl, [sp, #90]	; 0x5a
    5158:	ldr	r0, [r2]
    515c:	ldr	r1, [r2, #4]
    5160:	strh	r3, [sp, #88]	; 0x58
    5164:	add	r3, sp, #140	; 0x8c
    5168:	stmia	r3!, {r0, r1}
    516c:	add	r3, sp, #156	; 0x9c
    5170:	stmia	r3!, {r0, r1}
    5174:	ldr	r3, [sp, #12]
    5178:	mov	r0, r5
    517c:	str	r3, [sp, #168]	; 0xa8
    5180:	bl	4594 <readstat_variable_get_type_class@plt>
    5184:	mov	r1, #8
    5188:	cmp	r0, #0
    518c:	moveq	r3, #2
    5190:	movne	r3, #1
    5194:	strh	r3, [sp, #84]	; 0x54
    5198:	add	r3, r5, #8
    519c:	mov	r2, r3
    51a0:	ldr	r0, [sp, #28]
    51a4:	str	r3, [sp, #20]
    51a8:	bl	4fb8 <copypad>
    51ac:	add	r3, r5, #564	; 0x234
    51b0:	mov	r2, r3
    51b4:	mov	r1, #40	; 0x28
    51b8:	add	r0, r6, #16
    51bc:	str	r3, [sp, #24]
    51c0:	bl	4fb8 <copypad>
    51c4:	ldrb	r3, [r5, #308]	; 0x134
    51c8:	cmp	r3, #0
    51cc:	beq	52f0 <xport_write_variables+0x300>
    51d0:	add	r3, sp, #224	; 0xe0
    51d4:	ldr	r1, [pc, #772]	; 54e0 <xport_write_variables+0x4f0>
    51d8:	add	r7, sp, #48	; 0x30
    51dc:	mov	r4, #0
    51e0:	add	r2, sp, #32
    51e4:	str	r4, [r3, #-188]!	; 0xffffff44
    51e8:	add	r1, pc, r1
    51ec:	str	r2, [sp]
    51f0:	add	r0, r5, #308	; 0x134
    51f4:	mov	r2, r7
    51f8:	str	r4, [sp, #32]
    51fc:	bl	42d0 <__isoc99_sscanf@plt>
    5200:	mov	r2, r7
    5204:	mov	r1, #8
    5208:	add	r0, r6, #56	; 0x38
    520c:	bl	4fb8 <copypad>
    5210:	ldr	r3, [sp, #36]	; 0x24
    5214:	mov	r2, r7
    5218:	strh	r3, [sp, #148]	; 0x94
    521c:	ldr	r3, [sp, #32]
    5220:	mov	r1, #8
    5224:	add	r0, r6, #72	; 0x48
    5228:	strh	r3, [sp, #150]	; 0x96
    522c:	bl	4fb8 <copypad>
    5230:	ldr	r3, [sp, #36]	; 0x24
    5234:	mov	r0, r7
    5238:	strh	r3, [sp, #164]	; 0xa4
    523c:	ldr	r3, [sp, #32]
    5240:	strh	r3, [sp, #166]	; 0xa6
    5244:	bl	424c <strlen@plt>
    5248:	cmp	r0, #8
    524c:	movhi	r8, #1
    5250:	movhi	r4, r8
    5254:	ldr	r3, [r5, #2132]	; 0x854
    5258:	sub	r3, r3, #3
    525c:	clz	r3, r3
    5260:	lsr	r3, r3, #5
    5264:	strh	r3, [sp, #152]	; 0x98
    5268:	ldr	r3, [fp, #8]
    526c:	cmp	r3, #8
    5270:	bne	5298 <xport_write_variables+0x2a8>
    5274:	ldr	r2, [sp, #20]
    5278:	mov	r1, #32
    527c:	add	r0, r6, #88	; 0x58
    5280:	bl	4fb8 <copypad>
    5284:	ldr	r0, [sp, #24]
    5288:	bl	424c <strlen@plt>
    528c:	cmp	r0, #40	; 0x28
    5290:	movhi	r4, #1
    5294:	strh	r0, [sp, #204]	; 0xcc
    5298:	ldr	r2, [sp, #12]
    529c:	ldr	r3, [sp, #16]
    52a0:	cmp	r4, #0
    52a4:	add	r3, r3, r2
    52a8:	mov	r0, r6
    52ac:	addne	r9, r9, #1
    52b0:	str	r3, [sp, #12]
    52b4:	bl	40d8 <xport_namestr_bswap@plt>
    52b8:	ldr	r3, [pc, #548]	; 54e4 <xport_write_variables+0x4f4>
    52bc:	mov	r2, #140	; 0x8c
    52c0:	add	r3, pc, r3
    52c4:	str	r3, [sp]
    52c8:	mov	r1, r6
    52cc:	mov	r3, #80	; 0x50
    52d0:	mov	r0, fp
    52d4:	bl	4570 <readstat_write_bytes_as_lines@plt>
    52d8:	add	sl, sl, #1
    52dc:	subs	r3, r0, #0
    52e0:	beq	5018 <xport_write_variables+0x28>
    52e4:	mov	r0, r3
    52e8:	add	sp, sp, #228	; 0xe4
    52ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    52f0:	ldr	r4, [r5, #2136]	; 0x858
    52f4:	cmp	r4, #0
    52f8:	strhne	r4, [sp, #148]	; 0x94
    52fc:	movne	r4, r3
    5300:	b	5254 <xport_write_variables+0x264>
    5304:	bl	43cc <readstat_get_variable@plt>
    5308:	add	r8, r0, #564	; 0x234
    530c:	mov	r6, r0
    5310:	mov	r0, r8
    5314:	bl	424c <strlen@plt>
    5318:	add	r9, r6, #8
    531c:	mov	sl, r0
    5320:	mov	r0, r9
    5324:	bl	424c <strlen@plt>
    5328:	mov	r2, #24
    532c:	mov	r1, #0
    5330:	str	r0, [sp, #12]
    5334:	mov	r0, r4
    5338:	bl	42e8 <memset@plt>
    533c:	ldrb	r3, [r6, #308]	; 0x134
    5340:	cmp	r3, #0
    5344:	beq	5464 <xport_write_variables+0x474>
    5348:	mov	r3, #2
    534c:	str	r3, [sp, #32]
    5350:	mov	r3, #8
    5354:	str	r3, [sp, #36]	; 0x24
    5358:	ldr	r3, [sp, #20]
    535c:	mov	r2, r4
    5360:	str	r3, [sp]
    5364:	ldr	r1, [sp, #16]
    5368:	mov	r3, r7
    536c:	add	r0, r6, #308	; 0x134
    5370:	bl	42d0 <__isoc99_sscanf@plt>
    5374:	cmp	r0, #0
    5378:	movle	r3, #11
    537c:	ble	52e4 <xport_write_variables+0x2f4>
    5380:	mov	r0, r4
    5384:	bl	424c <strlen@plt>
    5388:	cmp	r0, #8
    538c:	ble	5464 <xport_write_variables+0x474>
    5390:	ldrh	r3, [sp, #12]
    5394:	uxth	r0, r0
    5398:	strh	r5, [sp, #36]	; 0x24
    539c:	strh	r3, [sp, #38]	; 0x26
    53a0:	strh	r0, [sp, #40]	; 0x28
    53a4:	strh	r0, [sp, #42]	; 0x2a
    53a8:	strh	sl, [sp, #44]	; 0x2c
    53ac:	bl	3ef8 <machine_is_little_endian@plt>
    53b0:	cmp	r0, #0
    53b4:	beq	53f4 <xport_write_variables+0x404>
    53b8:	ldrh	r0, [sp, #36]	; 0x24
    53bc:	bl	3eec <byteswap2@plt>
    53c0:	strh	r0, [sp, #36]	; 0x24
    53c4:	ldrh	r0, [sp, #38]	; 0x26
    53c8:	bl	3eec <byteswap2@plt>
    53cc:	strh	r0, [sp, #38]	; 0x26
    53d0:	ldrh	r0, [sp, #40]	; 0x28
    53d4:	bl	3eec <byteswap2@plt>
    53d8:	strh	r0, [sp, #40]	; 0x28
    53dc:	ldrh	r0, [sp, #42]	; 0x2a
    53e0:	bl	3eec <byteswap2@plt>
    53e4:	strh	r0, [sp, #42]	; 0x2a
    53e8:	ldrh	r0, [sp, #44]	; 0x2c
    53ec:	bl	3eec <byteswap2@plt>
    53f0:	strh	r0, [sp, #44]	; 0x2c
    53f4:	mov	r2, #10
    53f8:	mov	r1, r7
    53fc:	mov	r0, fp
    5400:	bl	44a4 <readstat_write_bytes@plt>
    5404:	subs	r3, r0, #0
    5408:	bne	52e4 <xport_write_variables+0x2f4>
    540c:	mov	r1, r9
    5410:	mov	r0, fp
    5414:	bl	41a4 <readstat_write_string@plt>
    5418:	subs	r3, r0, #0
    541c:	bne	52e4 <xport_write_variables+0x2f4>
    5420:	mov	r1, r4
    5424:	mov	r0, fp
    5428:	bl	41a4 <readstat_write_string@plt>
    542c:	subs	r3, r0, #0
    5430:	bne	52e4 <xport_write_variables+0x2f4>
    5434:	mov	r1, r4
    5438:	mov	r0, fp
    543c:	bl	41a4 <readstat_write_string@plt>
    5440:	subs	r3, r0, #0
    5444:	bne	52e4 <xport_write_variables+0x2f4>
    5448:	mov	r1, r8
    544c:	mov	r0, fp
    5450:	bl	41a4 <readstat_write_string@plt>
    5454:	subs	r3, r0, #0
    5458:	bne	52e4 <xport_write_variables+0x2f4>
    545c:	add	r5, r5, #1
    5460:	b	5100 <xport_write_variables+0x110>
    5464:	cmp	sl, #40	; 0x28
    5468:	bls	545c <xport_write_variables+0x46c>
    546c:	ldrh	r3, [sp, #12]
    5470:	strh	r5, [sp, #36]	; 0x24
    5474:	strh	sl, [sp, #40]	; 0x28
    5478:	strh	r3, [sp, #38]	; 0x26
    547c:	bl	3ef8 <machine_is_little_endian@plt>
    5480:	cmp	r0, #0
    5484:	beq	54ac <xport_write_variables+0x4bc>
    5488:	ldrh	r0, [sp, #36]	; 0x24
    548c:	bl	3eec <byteswap2@plt>
    5490:	strh	r0, [sp, #36]	; 0x24
    5494:	ldrh	r0, [sp, #38]	; 0x26
    5498:	bl	3eec <byteswap2@plt>
    549c:	strh	r0, [sp, #38]	; 0x26
    54a0:	ldrh	r0, [sp, #40]	; 0x28
    54a4:	bl	3eec <byteswap2@plt>
    54a8:	strh	r0, [sp, #40]	; 0x28
    54ac:	mov	r2, #6
    54b0:	mov	r1, r7
    54b4:	mov	r0, fp
    54b8:	bl	44a4 <readstat_write_bytes@plt>
    54bc:	subs	r3, r0, #0
    54c0:	bne	52e4 <xport_write_variables+0x2f4>
    54c4:	mov	r1, r9
    54c8:	b	5438 <xport_write_variables+0x448>
    54cc:	.word	0x0001cca7
    54d0:	.word	0x0001cc73
    54d4:	.word	0x0001ccde
    54d8:	.word	0x0001cbb5
    54dc:	.word	0x0001cbcf
    54e0:	.word	0x0001cab9
    54e4:	.word	0x0001cdfc

000054e8 <read_double>:
    54e8:	push	{r0, r1, r2, r4, r5, lr}
    54ec:	mov	r5, r1
    54f0:	mov	r2, #1
    54f4:	add	r1, sp, #7
    54f8:	mov	r4, r0
    54fc:	bl	fe58 <read_bytes>
    5500:	cmp	r0, #1
    5504:	movne	r0, #5
    5508:	bne	551c <read_double+0x34>
    550c:	ldrb	r2, [sp, #7]
    5510:	mov	r1, r5
    5514:	mov	r0, r4
    5518:	bl	ff5c <read_double_with_peek>
    551c:	add	sp, sp, #12
    5520:	pop	{r4, r5, pc}

00005524 <read_integer_in_range.constprop.1>:
    5524:	push	{r4, lr}
    5528:	vpush	{d8}
    552c:	ldr	r3, [pc, #108]	; 55a0 <read_integer_in_range.constprop.1+0x7c>
    5530:	vmov	s16, r1
    5534:	mov	r4, r2
    5538:	sub	sp, sp, #8
    553c:	add	r1, sp, #8
    5540:	mov	r2, #0
    5544:	strd	r2, [r1, #-8]!
    5548:	bl	54e8 <read_double>
    554c:	cmp	r0, #0
    5550:	bne	558c <read_integer_in_range.constprop.1+0x68>
    5554:	vldr	d7, [sp]
    5558:	vcmp.f64	d7, d7
    555c:	vmrs	APSR_nzcv, fpscr
    5560:	bvs	5598 <read_integer_in_range.constprop.1+0x74>
    5564:	vcmpe.f64	d7, #0.0
    5568:	vmrs	APSR_nzcv, fpscr
    556c:	bmi	5598 <read_integer_in_range.constprop.1+0x74>
    5570:	vcvt.f64.s32	d8, s16
    5574:	vcmpe.f64	d7, d8
    5578:	vmrs	APSR_nzcv, fpscr
    557c:	bgt	5598 <read_integer_in_range.constprop.1+0x74>
    5580:	cmp	r4, #0
    5584:	vcvtne.s32.f64	s14, d7
    5588:	vstrne	s14, [r4]
    558c:	add	sp, sp, #8
    5590:	vpop	{d8}
    5594:	pop	{r4, pc}
    5598:	mov	r0, #5
    559c:	b	558c <read_integer_in_range.constprop.1+0x68>
    55a0:	.word	0x7ff80000

000055a4 <por_emit_format>:
    55a4:	vldr	s15, [r2]
    55a8:	push	{r4, r5, r6, lr}
    55ac:	mov	r5, r0
    55b0:	mov	r6, r1
    55b4:	vcvt.f64.s32	d0, s15
    55b8:	mov	r4, r2
    55bc:	bl	11b40 <por_write_double>
    55c0:	cmp	r0, #0
    55c4:	popne	{r4, r5, r6, pc}
    55c8:	vldr	s15, [r4, #4]
    55cc:	mov	r1, r6
    55d0:	mov	r0, r5
    55d4:	vcvt.f64.s32	d0, s15
    55d8:	bl	11b40 <por_write_double>
    55dc:	cmp	r0, #0
    55e0:	popne	{r4, r5, r6, pc}
    55e4:	vldr	s0, [r4, #8]
    55e8:	mov	r1, r6
    55ec:	mov	r0, r5
    55f0:	pop	{r4, r5, r6, lr}
    55f4:	vcvt.f64.s32	d0, s0
    55f8:	b	11b40 <por_write_double>

000055fc <sav_read_pascal_string.constprop.4>:
    55fc:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
    5600:	mov	r5, r1
    5604:	ldr	r1, [r1]
    5608:	add	r4, r1, #4
    560c:	add	r7, r1, r2
    5610:	cmp	r7, r4
    5614:	movcc	r4, r1
    5618:	bcc	5670 <sav_read_pascal_string.constprop.4+0x74>
    561c:	ldrb	r3, [r3, #436]	; 0x1b4
    5620:	mov	r8, r0
    5624:	ldr	r0, [r1]
    5628:	tst	r3, #1
    562c:	beq	5634 <sav_read_pascal_string.constprop.4+0x38>
    5630:	bl	3dd8 <byteswap4@plt>
    5634:	add	r6, r4, r0
    5638:	cmp	r7, r6
    563c:	bcc	5670 <sav_read_pascal_string.constprop.4+0x74>
    5640:	mov	r3, #0
    5644:	str	r3, [sp]
    5648:	mov	r2, r4
    564c:	mov	r3, r0
    5650:	ldr	r1, [pc, #32]	; 5678 <sav_read_pascal_string.constprop.4+0x7c>
    5654:	mov	r0, r8
    5658:	bl	427c <readstat_convert@plt>
    565c:	cmp	r0, #0
    5660:	moveq	r4, r6
    5664:	str	r4, [r5]
    5668:	add	sp, sp, #8
    566c:	pop	{r4, r5, r6, r7, r8, pc}
    5670:	mov	r0, #5
    5674:	b	5664 <sav_read_pascal_string.constprop.4+0x68>
    5678:	.word	0x00000101

0000567c <sav_read_compressed_data.constprop.5>:
    567c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5680:	sub	sp, sp, #65536	; 0x10000
    5684:	sub	sp, sp, #68	; 0x44
    5688:	add	r4, sp, #64	; 0x40
    568c:	mov	r5, r0
    5690:	ldr	r6, [r0, #344]	; 0x158
    5694:	ldr	fp, [r0, #36]	; 0x24
    5698:	mov	r2, #56	; 0x38
    569c:	mov	r1, #0
    56a0:	sub	r0, r4, #56	; 0x38
    56a4:	bl	42e8 <memset@plt>
    56a8:	add	r3, r5, #400	; 0x190
    56ac:	lsl	r6, r6, #3
    56b0:	ldrd	r2, [r3, #-8]
    56b4:	cmp	r6, #0
    56b8:	moveq	sl, r6
    56bc:	strd	r2, [r4, #-40]	; 0xffffffd8
    56c0:	add	r3, r5, #416	; 0x1a0
    56c4:	ldrd	r2, [r3]
    56c8:	strd	r2, [r4, #-32]	; 0xffffffe0
    56cc:	ldrb	r3, [r5, #436]	; 0x1b4
    56d0:	and	r3, r3, #1
    56d4:	str	r3, [r4, #-12]
    56d8:	beq	56f0 <sav_read_compressed_data.constprop.5+0x74>
    56dc:	mov	r0, r6
    56e0:	bl	4270 <readstat_malloc@plt>
    56e4:	subs	sl, r0, #0
    56e8:	moveq	r9, #3
    56ec:	beq	57f0 <sav_read_compressed_data.constprop.5+0x174>
    56f0:	mov	r7, #0
    56f4:	sub	r3, r4, #56	; 0x38
    56f8:	str	r3, [sp]
    56fc:	mov	r0, r5
    5700:	bl	13db8 <sav_update_progress>
    5704:	subs	r9, r0, #0
    5708:	bne	57e0 <sav_read_compressed_data.constprop.5+0x164>
    570c:	ldr	r3, [fp, #12]
    5710:	ldr	r2, [fp, #20]
    5714:	mov	r1, #65536	; 0x10000
    5718:	mov	r0, r4
    571c:	blx	r3
    5720:	add	r2, r0, #1
    5724:	cmp	r2, #1
    5728:	mov	r3, r0
    572c:	bls	57e0 <sav_read_compressed_data.constprop.5+0x164>
    5730:	tst	r0, #7
    5734:	bne	57e0 <sav_read_compressed_data.constprop.5+0x164>
    5738:	mov	r8, r9
    573c:	mov	r2, #1
    5740:	str	r2, [r4, #-8]
    5744:	ldr	r2, [r4, #-8]
    5748:	cmp	r2, #0
    574c:	beq	56fc <sav_read_compressed_data.constprop.5+0x80>
    5750:	add	r2, r4, r8
    5754:	str	r2, [r4, #-56]	; 0xffffffc8
    5758:	sub	r8, r3, r8
    575c:	add	r2, sl, r7
    5760:	ldr	r0, [sp]
    5764:	sub	r7, r6, r7
    5768:	str	r3, [sp, #4]
    576c:	str	r8, [r4, #-52]	; 0xffffffcc
    5770:	str	r2, [r4, #-48]	; 0xffffffd0
    5774:	str	r7, [r4, #-44]	; 0xffffffd4
    5778:	bl	4258 <sav_decompress_row@plt>
    577c:	ldr	r2, [r4, #-8]
    5780:	ldr	r7, [r4, #-44]	; 0xffffffd4
    5784:	ldr	r8, [r4, #-52]	; 0xffffffcc
    5788:	ldr	r3, [sp, #4]
    578c:	cmp	r2, #2
    5790:	sub	r7, r6, r7
    5794:	sub	r8, r3, r8
    5798:	bne	57bc <sav_read_compressed_data.constprop.5+0x140>
    579c:	mov	r2, r5
    57a0:	mov	r1, r6
    57a4:	mov	r0, sl
    57a8:	bl	14298 <sav_process_row>
    57ac:	cmp	r0, #0
    57b0:	bne	5800 <sav_read_compressed_data.constprop.5+0x184>
    57b4:	ldr	r3, [sp, #4]
    57b8:	mov	r7, #0
    57bc:	ldr	r2, [r4, #-8]
    57c0:	cmp	r2, #3
    57c4:	beq	57e0 <sav_read_compressed_data.constprop.5+0x164>
    57c8:	ldr	r2, [r5, #356]	; 0x164
    57cc:	cmp	r2, #0
    57d0:	ble	5744 <sav_read_compressed_data.constprop.5+0xc8>
    57d4:	ldr	r1, [r5, #364]	; 0x16c
    57d8:	cmp	r2, r1
    57dc:	bne	5744 <sav_read_compressed_data.constprop.5+0xc8>
    57e0:	cmp	sl, #0
    57e4:	beq	57f0 <sav_read_compressed_data.constprop.5+0x174>
    57e8:	mov	r0, sl
    57ec:	bl	3f04 <free@plt>
    57f0:	mov	r0, r9
    57f4:	add	sp, sp, #65536	; 0x10000
    57f8:	add	sp, sp, #68	; 0x44
    57fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5800:	mov	r9, r0
    5804:	b	57e0 <sav_read_compressed_data.constprop.5+0x164>

00005808 <dta_interpret_int32_bytes>:
    5808:	push	{r4, r5, r6, lr}
    580c:	mov	r5, r1
    5810:	mov	r6, r2
    5814:	mov	r1, #0
    5818:	mov	r2, #16
    581c:	mov	r4, r0
    5820:	bl	42e8 <memset@plt>
    5824:	ldrb	r3, [r5, #192]	; 0xc0
    5828:	ldr	r0, [r6]
    582c:	tst	r3, #1
    5830:	beq	5838 <dta_interpret_int32_bytes+0x30>
    5834:	bl	3dd8 <byteswap4@plt>
    5838:	ldrb	r3, [r5, #192]	; 0xc0
    583c:	tst	r3, #2
    5840:	beq	5848 <dta_interpret_int32_bytes+0x40>
    5844:	bl	3f40 <ones_to_twos_complement4@plt>
    5848:	ldr	r3, [r5, #196]	; 0xc4
    584c:	cmp	r3, r0
    5850:	bge	58a8 <dta_interpret_int32_bytes+0xa0>
    5854:	ldrb	r2, [r5, #192]	; 0xc0
    5858:	cmn	r0, #-2147483621	; 0x8000001b
    585c:	movle	r3, #0
    5860:	movgt	r3, #1
    5864:	ands	r3, r3, r2, lsr #3
    5868:	beq	58b8 <dta_interpret_int32_bytes+0xb0>
    586c:	add	r1, r0, #123	; 0x7b
    5870:	mov	r3, #1
    5874:	uxtb	r1, r1
    5878:	mov	ip, #0
    587c:	mov	r2, #3
    5880:	str	r2, [r4, #8]
    5884:	ldrb	r2, [r4, #13]
    5888:	str	r0, [r4]
    588c:	strb	r1, [r4, #12]
    5890:	and	r2, r2, #252	; 0xfc
    5894:	orr	r2, r2, ip
    5898:	orr	r3, r2, r3, lsl #1
    589c:	strb	r3, [r4, #13]
    58a0:	mov	r0, r4
    58a4:	pop	{r4, r5, r6, pc}
    58a8:	mov	r3, #0
    58ac:	mov	ip, r3
    58b0:	mov	r1, r3
    58b4:	b	587c <dta_interpret_int32_bytes+0x74>
    58b8:	mov	ip, #1
    58bc:	b	58b0 <dta_interpret_int32_bytes+0xa8>

000058c0 <dta_handle_row>:
    58c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    58c4:	vpush	{d8-d9}
    58c8:	vldr	d8, [pc, #832]	; 5c10 <dta_handle_row+0x350>
    58cc:	vldr	s18, [pc, #836]	; 5c18 <dta_handle_row+0x358>
    58d0:	mov	r5, #0
    58d4:	sub	sp, sp, #2304	; 0x900
    58d8:	sub	sp, sp, #12
    58dc:	add	fp, sp, #120	; 0x78
    58e0:	sub	r3, fp, #12
    58e4:	str	r3, [sp, #80]	; 0x50
    58e8:	mov	r9, r0
    58ec:	add	r3, sp, #136	; 0x88
    58f0:	mov	r4, r1
    58f4:	mov	r8, r5
    58f8:	str	r3, [sp, #72]	; 0x48
    58fc:	sub	r3, r3, #8
    5900:	str	r3, [sp, #84]	; 0x54
    5904:	ldr	r3, [r4, #148]	; 0x94
    5908:	cmp	r8, r3
    590c:	movge	r0, #0
    5910:	bge	5fa8 <dta_handle_row+0x6e8>
    5914:	mov	r2, #16
    5918:	mov	r1, #0
    591c:	mov	r0, fp
    5920:	bl	42e8 <memset@plt>
    5924:	ldr	ip, [r4, #28]
    5928:	lsl	r0, r8, #1
    592c:	add	r3, fp, #8
    5930:	ldr	r2, [sp, #80]	; 0x50
    5934:	mov	r1, r4
    5938:	ldrh	r0, [ip, r0]
    593c:	bl	4234 <dta_type_info@plt>
    5940:	cmp	r0, #0
    5944:	bne	5fa8 <dta_handle_row+0x6e8>
    5948:	lsl	r3, r8, #2
    594c:	str	r3, [sp, #76]	; 0x4c
    5950:	ldr	r3, [r4, #228]	; 0xe4
    5954:	ldr	r2, [sp, #108]	; 0x6c
    5958:	ldr	r3, [r3, r8, lsl #2]
    595c:	ldr	r7, [r3, #2144]	; 0x860
    5960:	cmp	r7, #0
    5964:	addne	r5, r5, r2
    5968:	bne	5b3c <dta_handle_row+0x27c>
    596c:	ldr	r1, [r4, #160]	; 0xa0
    5970:	add	r3, r5, r2
    5974:	cmp	r3, r1
    5978:	bhi	5fa4 <dta_handle_row+0x6e4>
    597c:	ldr	r3, [sp, #128]	; 0x80
    5980:	cmp	r3, #0
    5984:	addeq	r0, r9, r5
    5988:	beq	5ac0 <dta_handle_row+0x200>
    598c:	cmp	r3, #6
    5990:	bne	5c28 <dta_handle_row+0x368>
    5994:	mov	r2, #32
    5998:	mov	r1, r7
    599c:	add	r0, sp, #232	; 0xe8
    59a0:	bl	42e8 <memset@plt>
    59a4:	ldr	r3, [r4, #112]	; 0x70
    59a8:	add	r6, r9, r5
    59ac:	cmp	r3, #2
    59b0:	bne	5bb8 <dta_handle_row+0x2f8>
    59b4:	ldr	r3, [r4, #232]	; 0xe8
    59b8:	ldrb	r2, [r6, #7]
    59bc:	cmp	r3, #2
    59c0:	mov	r3, #0
    59c4:	ldrb	sl, [r9, r5]
    59c8:	ldrb	r0, [r6, #1]
    59cc:	strd	r2, [sp, #64]	; 0x40
    59d0:	bne	5b44 <dta_handle_row+0x284>
    59d4:	ldrb	r2, [r6, #2]
    59d8:	str	r7, [sp, #32]
    59dc:	str	r7, [sp, #40]	; 0x28
    59e0:	add	sl, r0, sl, lsl #8
    59e4:	lsl	r3, r2, #8
    59e8:	str	r3, [sp, #36]	; 0x24
    59ec:	ldrb	r3, [r6, #3]
    59f0:	mov	ip, #0
    59f4:	str	ip, [sp, #20]
    59f8:	str	r3, [sp, #44]	; 0x2c
    59fc:	ldrd	r0, [sp, #40]	; 0x28
    5a00:	ldrd	r2, [sp, #32]
    5a04:	uxth	sl, sl
    5a08:	adds	r2, r2, r0
    5a0c:	adc	r3, r3, r1
    5a10:	ldrd	r0, [sp, #64]	; 0x40
    5a14:	adds	r0, r0, r2
    5a18:	mov	r2, r0
    5a1c:	ldrb	r0, [r6, #4]
    5a20:	adc	r1, r1, r3
    5a24:	mov	r3, r1
    5a28:	lsl	r1, r0, #24
    5a2c:	str	r1, [sp, #16]
    5a30:	ldrd	r0, [sp, #16]
    5a34:	adds	r0, r0, r2
    5a38:	adc	r1, r1, r3
    5a3c:	mov	r3, r1
    5a40:	ldrb	r1, [r6, #5]
    5a44:	lsl	r1, r1, #16
    5a48:	adds	r2, r0, r1
    5a4c:	adc	r3, r3, r1, asr #31
    5a50:	ldrb	r1, [r6, #6]
    5a54:	lsl	r1, r1, #8
    5a58:	adds	r2, r2, r1
    5a5c:	adc	r3, r3, r1, asr #31
    5a60:	add	ip, sp, #232	; 0xe8
    5a64:	strh	sl, [sp, #232]	; 0xe8
    5a68:	strd	r2, [sp, #240]	; 0xf0
    5a6c:	ldm	ip!, {r0, r1, r2, r3}
    5a70:	add	lr, sp, #200	; 0xc8
    5a74:	stmia	lr!, {r0, r1, r2, r3}
    5a78:	ldm	ip, {r0, r1, r2, r3}
    5a7c:	stm	lr, {r0, r1, r2, r3}
    5a80:	add	r0, sp, #200	; 0xc8
    5a84:	ldr	r3, [pc, #400]	; 5c1c <dta_handle_row+0x35c>
    5a88:	ldr	r2, [r4, #220]	; 0xdc
    5a8c:	add	r3, pc, r3
    5a90:	str	r3, [sp]
    5a94:	ldr	r1, [r4, #216]	; 0xd8
    5a98:	mov	r3, #4
    5a9c:	bl	42f4 <bsearch@plt>
    5aa0:	cmp	r0, #0
    5aa4:	ldrne	r3, [r0]
    5aa8:	addne	r3, r3, #24
    5aac:	strne	r3, [sp, #120]	; 0x78
    5ab0:	mov	r3, #0
    5ab4:	str	r3, [sp, #128]	; 0x80
    5ab8:	b	5afc <dta_handle_row+0x23c>
    5abc:	add	r3, r3, #1
    5ac0:	cmp	r3, r2
    5ac4:	beq	5ad4 <dta_handle_row+0x214>
    5ac8:	ldrb	r1, [r0, r3]
    5acc:	cmp	r1, #0
    5ad0:	bne	5abc <dta_handle_row+0x1fc>
    5ad4:	ldr	r2, [r4, #236]	; 0xec
    5ad8:	add	r6, sp, #264	; 0x108
    5adc:	str	r2, [sp]
    5ae0:	mov	r1, #2048	; 0x800
    5ae4:	add	r2, r9, r5
    5ae8:	mov	r0, r6
    5aec:	bl	427c <readstat_convert@plt>
    5af0:	cmp	r0, #0
    5af4:	bne	5fa8 <dta_handle_row+0x6e8>
    5af8:	str	r6, [sp, #120]	; 0x78
    5afc:	ldr	r3, [r4, #276]	; 0x114
    5b00:	ldr	ip, [r4, #228]	; 0xe4
    5b04:	str	r3, [sp, #8]
    5b08:	ldr	r3, [sp, #84]	; 0x54
    5b0c:	ldr	r6, [r4, #256]	; 0x100
    5b10:	ldm	r3, {r0, r1}
    5b14:	stm	sp, {r0, r1}
    5b18:	ldr	r1, [sp, #76]	; 0x4c
    5b1c:	ldm	fp, {r2, r3}
    5b20:	ldr	r0, [r4, #184]	; 0xb8
    5b24:	ldr	r1, [ip, r1]
    5b28:	blx	r6
    5b2c:	cmp	r0, #0
    5b30:	bne	5fb8 <dta_handle_row+0x6f8>
    5b34:	ldr	r3, [sp, #108]	; 0x6c
    5b38:	add	r5, r5, r3
    5b3c:	add	r8, r8, #1
    5b40:	b	5904 <dta_handle_row+0x44>
    5b44:	ldrb	r2, [r6, #5]
    5b48:	mov	r1, #0
    5b4c:	str	r1, [sp, #28]
    5b50:	str	r7, [sp, #48]	; 0x30
    5b54:	lsl	r3, r2, #24
    5b58:	str	r3, [sp, #24]
    5b5c:	ldrb	r3, [r6, #6]
    5b60:	add	sl, sl, r0, lsl #8
    5b64:	str	r7, [sp, #56]	; 0x38
    5b68:	str	r3, [sp, #52]	; 0x34
    5b6c:	ldrd	r0, [sp, #48]	; 0x30
    5b70:	ldrd	r2, [sp, #24]
    5b74:	uxth	sl, sl
    5b78:	adds	r2, r2, r0
    5b7c:	adc	r3, r3, r1
    5b80:	ldr	r1, [sp, #64]	; 0x40
    5b84:	lsl	r1, r1, #8
    5b88:	str	r1, [sp, #60]	; 0x3c
    5b8c:	ldrd	r0, [sp, #56]	; 0x38
    5b90:	adds	r0, r0, r2
    5b94:	adc	r1, r1, r3
    5b98:	mov	r2, r0
    5b9c:	ldrb	r0, [r6, #3]
    5ba0:	mov	r3, r1
    5ba4:	ldrb	r1, [r6, #2]
    5ba8:	add	r0, r1, r0, lsl #8
    5bac:	ldrb	r1, [r6, #4]
    5bb0:	add	r1, r0, r1, lsl #16
    5bb4:	b	5a58 <dta_handle_row+0x198>
    5bb8:	cmp	r3, #4
    5bbc:	movne	r2, #0
    5bc0:	movne	r3, #0
    5bc4:	movne	sl, r7
    5bc8:	bne	5a60 <dta_handle_row+0x1a0>
    5bcc:	ldrb	r3, [r4, #192]	; 0xc0
    5bd0:	ldr	r0, [r6]
    5bd4:	ldr	r6, [r6, #4]
    5bd8:	tst	r3, #1
    5bdc:	beq	5be4 <dta_handle_row+0x324>
    5be0:	bl	3dd8 <byteswap4@plt>
    5be4:	ldrb	r3, [r4, #192]	; 0xc0
    5be8:	uxth	sl, r0
    5bec:	tst	r3, #1
    5bf0:	beq	5c00 <dta_handle_row+0x340>
    5bf4:	mov	r0, r6
    5bf8:	bl	3dd8 <byteswap4@plt>
    5bfc:	mov	r6, r0
    5c00:	mov	r2, r6
    5c04:	mov	r3, #0
    5c08:	b	5a60 <dta_handle_row+0x1a0>
    5c0c:	nop			; (mov r0, r0)
    5c10:	.word	0x00000000
    5c14:	.word	0x7ff80000
    5c18:	.word	0x7fc00000
    5c1c:	.word	0x00013e4c
    5c20:	.word	0x00007fe5
    5c24:	.word	0x7fe00000
    5c28:	cmp	r3, #1
    5c2c:	bne	5cec <dta_handle_row+0x42c>
    5c30:	mov	r2, #16
    5c34:	mov	r1, r7
    5c38:	add	r0, sp, #232	; 0xe8
    5c3c:	bl	42e8 <memset@plt>
    5c40:	ldrb	r3, [r4, #192]	; 0xc0
    5c44:	ldrb	r0, [r9, r5]
    5c48:	tst	r3, #2
    5c4c:	bne	5cc8 <dta_handle_row+0x408>
    5c50:	ldrsb	r3, [r4, #193]	; 0xc1
    5c54:	sxtb	r0, r0
    5c58:	cmp	r3, r0
    5c5c:	bge	5cd0 <dta_handle_row+0x410>
    5c60:	ldrb	r2, [r4, #192]	; 0xc0
    5c64:	cmp	r0, #101	; 0x65
    5c68:	movle	r3, #0
    5c6c:	movgt	r3, #1
    5c70:	ands	r3, r3, r2, lsr #3
    5c74:	beq	5ce0 <dta_handle_row+0x420>
    5c78:	sub	r2, r0, #5
    5c7c:	mov	r1, #1
    5c80:	uxtb	r2, r2
    5c84:	mov	ip, #0
    5c88:	mov	r3, #1
    5c8c:	str	r3, [sp, #240]	; 0xf0
    5c90:	ldrb	r3, [sp, #245]	; 0xf5
    5c94:	strb	r0, [sp, #232]	; 0xe8
    5c98:	strb	r2, [sp, #244]	; 0xf4
    5c9c:	and	r3, r3, #252	; 0xfc
    5ca0:	orr	r3, r3, ip
    5ca4:	orr	r3, r3, r1, lsl #1
    5ca8:	strb	r3, [sp, #245]	; 0xf5
    5cac:	add	r3, sp, #232	; 0xe8
    5cb0:	ldr	ip, [sp, #72]	; 0x48
    5cb4:	ldm	r3, {r0, r1, r2, r3}
    5cb8:	stm	ip, {r0, r1, r2, r3}
    5cbc:	ldm	ip, {r0, r1, r2, r3}
    5cc0:	stm	fp, {r0, r1, r2, r3}
    5cc4:	b	5afc <dta_handle_row+0x23c>
    5cc8:	bl	43c0 <ones_to_twos_complement1@plt>
    5ccc:	b	5c50 <dta_handle_row+0x390>
    5cd0:	mov	r1, #0
    5cd4:	mov	ip, r1
    5cd8:	mov	r2, r1
    5cdc:	b	5c88 <dta_handle_row+0x3c8>
    5ce0:	mov	r1, r3
    5ce4:	mov	ip, #1
    5ce8:	b	5cd8 <dta_handle_row+0x418>
    5cec:	cmp	r3, #2
    5cf0:	bne	5db8 <dta_handle_row+0x4f8>
    5cf4:	mov	r2, #16
    5cf8:	mov	r1, r7
    5cfc:	add	r0, sp, #232	; 0xe8
    5d00:	bl	42e8 <memset@plt>
    5d04:	ldrb	r3, [r4, #192]	; 0xc0
    5d08:	ldrh	r0, [r9, r5]
    5d0c:	tst	r3, #1
    5d10:	bne	5d98 <dta_handle_row+0x4d8>
    5d14:	ldrb	r3, [r4, #192]	; 0xc0
    5d18:	sxth	r0, r0
    5d1c:	tst	r3, #2
    5d20:	beq	5d28 <dta_handle_row+0x468>
    5d24:	bl	3f4c <ones_to_twos_complement2@plt>
    5d28:	ldrsh	r3, [r4, #194]	; 0xc2
    5d2c:	cmp	r3, r0
    5d30:	bge	5da0 <dta_handle_row+0x4e0>
    5d34:	ldr	r3, [pc, #-284]	; 5c20 <dta_handle_row+0x360>
    5d38:	ldrb	r2, [r4, #192]	; 0xc0
    5d3c:	cmp	r0, r3
    5d40:	movle	r3, #0
    5d44:	movgt	r3, #1
    5d48:	ands	r3, r3, r2, lsr #3
    5d4c:	beq	5db0 <dta_handle_row+0x4f0>
    5d50:	add	r2, r0, #123	; 0x7b
    5d54:	mov	r3, #1
    5d58:	uxtb	r2, r2
    5d5c:	mov	ip, #0
    5d60:	strb	r2, [sp, #244]	; 0xf4
    5d64:	ldrb	r2, [sp, #245]	; 0xf5
    5d68:	add	r1, sp, #232	; 0xe8
    5d6c:	strh	r0, [sp, #232]	; 0xe8
    5d70:	and	r2, r2, #252	; 0xfc
    5d74:	orr	r2, r2, ip
    5d78:	mov	r0, #2
    5d7c:	orr	r3, r2, r3, lsl #1
    5d80:	str	r0, [sp, #240]	; 0xf0
    5d84:	strb	r3, [sp, #245]	; 0xf5
    5d88:	ldm	r1, {r0, r1, r2, r3}
    5d8c:	add	ip, sp, #152	; 0x98
    5d90:	stm	ip, {r0, r1, r2, r3}
    5d94:	b	5cc0 <dta_handle_row+0x400>
    5d98:	bl	3eec <byteswap2@plt>
    5d9c:	b	5d14 <dta_handle_row+0x454>
    5da0:	mov	r3, #0
    5da4:	mov	ip, r3
    5da8:	mov	r2, r3
    5dac:	b	5d60 <dta_handle_row+0x4a0>
    5db0:	mov	ip, #1
    5db4:	b	5da8 <dta_handle_row+0x4e8>
    5db8:	cmp	r3, #3
    5dbc:	bne	5ddc <dta_handle_row+0x51c>
    5dc0:	add	r6, sp, #88	; 0x58
    5dc4:	add	r2, r9, r5
    5dc8:	mov	r1, r4
    5dcc:	mov	r0, r6
    5dd0:	bl	5808 <dta_interpret_int32_bytes>
    5dd4:	ldm	r6, {r0, r1, r2, r3}
    5dd8:	b	5cc0 <dta_handle_row+0x400>
    5ddc:	cmp	r3, #4
    5de0:	bne	5ea4 <dta_handle_row+0x5e4>
    5de4:	mov	r2, #16
    5de8:	mov	r1, #0
    5dec:	add	r0, sp, #232	; 0xe8
    5df0:	bl	42e8 <memset@plt>
    5df4:	ldrb	r3, [r4, #192]	; 0xc0
    5df8:	vstr	s18, [sp, #200]	; 0xc8
    5dfc:	ldr	r0, [r9, r5]
    5e00:	tst	r3, #1
    5e04:	beq	5e0c <dta_handle_row+0x54c>
    5e08:	bl	3dd8 <byteswap4@plt>
    5e0c:	ldr	r3, [r4, #200]	; 0xc8
    5e10:	cmp	r3, r0
    5e14:	bge	5e84 <dta_handle_row+0x5c4>
    5e18:	ldrb	r2, [r4, #192]	; 0xc0
    5e1c:	cmp	r0, #2130706432	; 0x7f000000
    5e20:	movle	r3, #0
    5e24:	movgt	r3, #1
    5e28:	ands	r3, r3, r2, lsr #3
    5e2c:	beq	5e98 <dta_handle_row+0x5d8>
    5e30:	add	r3, r0, #-2130706432	; 0x81000000
    5e34:	sub	r3, r3, #2048	; 0x800
    5e38:	mov	r1, #1
    5e3c:	asr	r3, r3, #11
    5e40:	add	r3, r3, #97	; 0x61
    5e44:	mov	r0, #0
    5e48:	uxtb	r3, r3
    5e4c:	strb	r3, [sp, #244]	; 0xf4
    5e50:	ldrb	r3, [sp, #245]	; 0xf5
    5e54:	ldr	ip, [sp, #200]	; 0xc8
    5e58:	add	r2, sp, #232	; 0xe8
    5e5c:	and	r3, r3, #252	; 0xfc
    5e60:	orr	r3, r3, r0
    5e64:	str	ip, [sp, #232]	; 0xe8
    5e68:	orr	r3, r3, r1, lsl #1
    5e6c:	mov	ip, #4
    5e70:	str	ip, [sp, #240]	; 0xf0
    5e74:	strb	r3, [sp, #245]	; 0xf5
    5e78:	add	ip, sp, #168	; 0xa8
    5e7c:	ldm	r2, {r0, r1, r2, r3}
    5e80:	b	5d90 <dta_handle_row+0x4d0>
    5e84:	mov	r1, #0
    5e88:	str	r0, [sp, #200]	; 0xc8
    5e8c:	mov	r0, r1
    5e90:	mov	r3, r1
    5e94:	b	5e4c <dta_handle_row+0x58c>
    5e98:	mov	r1, r3
    5e9c:	mov	r0, #1
    5ea0:	b	5e90 <dta_handle_row+0x5d0>
    5ea4:	cmp	r3, #5
    5ea8:	bne	5afc <dta_handle_row+0x23c>
    5eac:	mov	r2, #16
    5eb0:	mov	r1, #0
    5eb4:	add	r0, sp, #232	; 0xe8
    5eb8:	bl	42e8 <memset@plt>
    5ebc:	add	r3, r9, r5
    5ec0:	add	r6, sp, #200	; 0xc8
    5ec4:	ldr	r0, [r3]
    5ec8:	ldr	r1, [r3, #4]
    5ecc:	ldrb	r3, [r4, #192]	; 0xc0
    5ed0:	mov	r2, r6
    5ed4:	vstr	d8, [fp, #-8]
    5ed8:	tst	r3, #1
    5edc:	stmia	r2!, {r0, r1}
    5ee0:	beq	5ef0 <dta_handle_row+0x630>
    5ee4:	ldrd	r0, [sp, #200]	; 0xc8
    5ee8:	bl	3dc0 <byteswap8@plt>
    5eec:	strd	r0, [r6]
    5ef0:	ldrd	r0, [sp, #200]	; 0xc8
    5ef4:	ldrd	r2, [r4, #208]	; 0xd0
    5ef8:	cmp	r2, r0
    5efc:	sbcs	r3, r3, r1
    5f00:	bge	5f84 <dta_handle_row+0x6c4>
    5f04:	ldrb	ip, [r4, #192]	; 0xc0
    5f08:	mov	r2, #0
    5f0c:	ldr	r3, [pc, #-752]	; 5c24 <dta_handle_row+0x364>
    5f10:	cmp	r2, r0
    5f14:	sbcs	r3, r3, r1
    5f18:	movlt	r3, #1
    5f1c:	movge	r3, #0
    5f20:	ands	r3, r3, ip, lsr #3
    5f24:	beq	5f98 <dta_handle_row+0x6d8>
    5f28:	add	r3, pc, #144	; 0x90
    5f2c:	ldrd	r2, [r3]
    5f30:	mov	ip, #0
    5f34:	adds	r0, r0, r2
    5f38:	adc	r1, r1, r3
    5f3c:	mov	r0, #1
    5f40:	asr	r3, r1, #8
    5f44:	add	r3, r3, #97	; 0x61
    5f48:	uxtb	r2, r3
    5f4c:	mov	r3, #5
    5f50:	str	r3, [sp, #240]	; 0xf0
    5f54:	ldrb	r3, [sp, #245]	; 0xf5
    5f58:	ldrd	r6, [fp, #-8]
    5f5c:	add	r1, sp, #232	; 0xe8
    5f60:	and	r3, r3, #252	; 0xfc
    5f64:	orr	r3, r3, ip
    5f68:	orr	r3, r3, r0, lsl #1
    5f6c:	strd	r6, [sp, #232]	; 0xe8
    5f70:	strb	r2, [sp, #244]	; 0xf4
    5f74:	strb	r3, [sp, #245]	; 0xf5
    5f78:	add	ip, sp, #184	; 0xb8
    5f7c:	ldm	r1, {r0, r1, r2, r3}
    5f80:	b	5d90 <dta_handle_row+0x4d0>
    5f84:	strd	r0, [fp, #-8]
    5f88:	mov	r0, #0
    5f8c:	mov	ip, r0
    5f90:	mov	r2, r0
    5f94:	b	5f4c <dta_handle_row+0x68c>
    5f98:	mov	r0, r3
    5f9c:	mov	ip, #1
    5fa0:	b	5f90 <dta_handle_row+0x6d0>
    5fa4:	mov	r0, #5
    5fa8:	add	sp, sp, #2304	; 0x900
    5fac:	add	sp, sp, #12
    5fb0:	vpop	{d8-d9}
    5fb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5fb8:	mov	r0, #4
    5fbc:	b	5fa8 <dta_handle_row+0x6e8>
    5fc0:	.word	0x00000000
    5fc4:	.word	0x801fff00

00005fc8 <call_weak_fn>:
    5fc8:	ldr	r3, [pc, #20]	; 5fe4 <call_weak_fn+0x1c>
    5fcc:	ldr	r2, [pc, #20]	; 5fe8 <call_weak_fn+0x20>
    5fd0:	add	r3, pc, r3
    5fd4:	ldr	r2, [r3, r2]
    5fd8:	cmp	r2, #0
    5fdc:	bxeq	lr
    5fe0:	b	41ec <__gmon_start__@plt>
    5fe4:	.word	0x0003b028
    5fe8:	.word	0x000002e8

00005fec <deregister_tm_clones>:
    5fec:	ldr	r3, [pc, #52]	; 6028 <deregister_tm_clones+0x3c>
    5ff0:	ldr	r0, [pc, #52]	; 602c <deregister_tm_clones+0x40>
    5ff4:	add	r3, pc, r3
    5ff8:	add	r0, pc, r0
    5ffc:	add	r3, r3, #3
    6000:	sub	r3, r3, r0
    6004:	cmp	r3, #6
    6008:	ldr	r3, [pc, #32]	; 6030 <deregister_tm_clones+0x44>
    600c:	add	r3, pc, r3
    6010:	bxls	lr
    6014:	ldr	r2, [pc, #24]	; 6034 <deregister_tm_clones+0x48>
    6018:	ldr	r3, [r3, r2]
    601c:	cmp	r3, #0
    6020:	bxeq	lr
    6024:	bx	r3
    6028:	.word	0x0003cd30
    602c:	.word	0x0003cd2c
    6030:	.word	0x0003afec
    6034:	.word	0x000002d0

00006038 <register_tm_clones>:
    6038:	ldr	r1, [pc, #56]	; 6078 <register_tm_clones+0x40>
    603c:	ldr	r0, [pc, #56]	; 607c <register_tm_clones+0x44>
    6040:	add	r1, pc, r1
    6044:	add	r0, pc, r0
    6048:	sub	r1, r1, r0
    604c:	ldr	r3, [pc, #44]	; 6080 <register_tm_clones+0x48>
    6050:	asr	r1, r1, #2
    6054:	add	r3, pc, r3
    6058:	add	r1, r1, r1, lsr #31
    605c:	asrs	r1, r1, #1
    6060:	bxeq	lr
    6064:	ldr	r2, [pc, #24]	; 6084 <register_tm_clones+0x4c>
    6068:	ldr	r3, [r3, r2]
    606c:	cmp	r3, #0
    6070:	bxeq	lr
    6074:	bx	r3
    6078:	.word	0x0003cce4
    607c:	.word	0x0003cce0
    6080:	.word	0x0003afa4
    6084:	.word	0x00000318

00006088 <__do_global_dtors_aux>:
    6088:	ldr	r3, [pc, #76]	; 60dc <__do_global_dtors_aux+0x54>
    608c:	ldr	r2, [pc, #76]	; 60e0 <__do_global_dtors_aux+0x58>
    6090:	add	r3, pc, r3
    6094:	add	r2, pc, r2
    6098:	ldrb	r3, [r3]
    609c:	cmp	r3, #0
    60a0:	bxne	lr
    60a4:	ldr	r3, [pc, #56]	; 60e4 <__do_global_dtors_aux+0x5c>
    60a8:	push	{r4, lr}
    60ac:	ldr	r3, [r2, r3]
    60b0:	cmp	r3, #0
    60b4:	beq	60c4 <__do_global_dtors_aux+0x3c>
    60b8:	ldr	r3, [pc, #40]	; 60e8 <__do_global_dtors_aux+0x60>
    60bc:	ldr	r0, [pc, r3]
    60c0:	bl	3e50 <__cxa_finalize@plt>
    60c4:	bl	5fec <deregister_tm_clones>
    60c8:	ldr	r3, [pc, #28]	; 60ec <__do_global_dtors_aux+0x64>
    60cc:	mov	r2, #1
    60d0:	add	r3, pc, r3
    60d4:	strb	r2, [r3]
    60d8:	pop	{r4, pc}
    60dc:	.word	0x0003cc94
    60e0:	.word	0x0003af64
    60e4:	.word	0x000002cc
    60e8:	.word	0x0003b25c
    60ec:	.word	0x0003cc54

000060f0 <frame_dummy>:
    60f0:	ldr	r0, [pc, #56]	; 6130 <frame_dummy+0x40>
    60f4:	ldr	r3, [pc, #56]	; 6134 <frame_dummy+0x44>
    60f8:	add	r0, pc, r0
    60fc:	ldr	r2, [r0]
    6100:	add	r3, pc, r3
    6104:	cmp	r2, #0
    6108:	bne	6110 <frame_dummy+0x20>
    610c:	b	6038 <register_tm_clones>
    6110:	ldr	r2, [pc, #32]	; 6138 <frame_dummy+0x48>
    6114:	ldr	r3, [r3, r2]
    6118:	cmp	r3, #0
    611c:	beq	610c <frame_dummy+0x1c>
    6120:	push	{r4, lr}
    6124:	blx	r3
    6128:	pop	{r4, lr}
    612c:	b	6038 <register_tm_clones>
    6130:	.word	0x0003ae04
    6134:	.word	0x0003aef8
    6138:	.word	0x0000030c
    613c:	.word	0x00000000

00006140 <ck_float2str>:
    6140:	vmov	r3, s0
    6144:	push	{r4, lr}
    6148:	lsr	r2, r3, #8
    614c:	uxtb	r1, r3
    6150:	uxtb	r2, r2
    6154:	lsr	ip, r3, #24
    6158:	and	r4, r2, #2
    615c:	lsr	lr, r3, #16
    6160:	and	r3, r1, #1
    6164:	orr	r3, r3, r4
    6168:	uxtb	lr, lr
    616c:	mvn	r3, r3, lsl #28
    6170:	and	r4, lr, #4
    6174:	mvn	r3, r3, lsr #28
    6178:	orr	r3, r3, r4
    617c:	and	r4, ip, #8
    6180:	orr	r3, r3, r4
    6184:	orr	r2, r2, #2
    6188:	strb	r3, [r0, #4]
    618c:	orr	r3, ip, #8
    6190:	orr	r1, r1, #1
    6194:	strb	r2, [r0, #1]
    6198:	strb	r3, [r0, #3]
    619c:	orr	r2, lr, #4
    61a0:	mov	r3, #0
    61a4:	strb	r1, [r0]
    61a8:	strb	r2, [r0, #2]
    61ac:	strb	r3, [r0, #5]
    61b0:	pop	{r4, pc}

000061b4 <ck_double2str>:
    61b4:	push	{r0, r1, r2, r4, r5, lr}
    61b8:	add	r2, sp, #8
    61bc:	mov	r3, r0
    61c0:	vstmdb	r2!, {d0}
    61c4:	ldm	r2, {r0, r1}
    61c8:	stm	r3, {r0, r1}
    61cc:	ldrb	lr, [r3]
    61d0:	ldrb	ip, [r3, #1]
    61d4:	ldrb	r2, [r3, #2]
    61d8:	ldrb	r0, [r3, #3]
    61dc:	and	r4, ip, #2
    61e0:	and	r1, lr, #1
    61e4:	orr	r1, r1, r4
    61e8:	orr	lr, lr, #1
    61ec:	mvn	r4, #15
    61f0:	orr	ip, ip, #2
    61f4:	and	r5, r2, #4
    61f8:	orr	r1, r1, r4
    61fc:	strb	lr, [r3]
    6200:	strb	ip, [r3, #1]
    6204:	ldrb	lr, [r3, #4]
    6208:	ldrb	ip, [r3, #5]
    620c:	orr	r1, r1, r5
    6210:	and	r5, r0, #8
    6214:	orr	r0, r0, #8
    6218:	orr	r1, r1, r5
    621c:	orr	r2, r2, #4
    6220:	strb	r0, [r3, #3]
    6224:	ldrb	r0, [r3, #6]
    6228:	and	r5, ip, #2
    622c:	strb	r1, [r3, #8]
    6230:	strb	r2, [r3, #2]
    6234:	ldrb	r1, [r3, #7]
    6238:	and	r2, lr, #1
    623c:	orr	r2, r2, r5
    6240:	orr	r2, r2, r4
    6244:	and	r4, r0, #4
    6248:	orr	r2, r2, r4
    624c:	and	r4, r1, #8
    6250:	orr	r2, r2, r4
    6254:	strb	r2, [r3, #9]
    6258:	orr	lr, lr, #1
    625c:	orr	ip, ip, #2
    6260:	orr	r0, r0, #4
    6264:	orr	r1, r1, #8
    6268:	mov	r2, #0
    626c:	strb	lr, [r3, #4]
    6270:	strb	ip, [r3, #5]
    6274:	strb	r0, [r3, #6]
    6278:	strb	r1, [r3, #7]
    627c:	strb	r2, [r3, #10]
    6280:	add	sp, sp, #12
    6284:	pop	{r4, r5, pc}

00006288 <ck_hash_str>:
    6288:	ldrb	r1, [r0], #1
    628c:	ldr	r2, [pc, #76]	; 62e0 <ck_hash_str+0x58>
    6290:	mov	r3, #0
    6294:	cmp	r1, #0
    6298:	bne	62a8 <ck_hash_str+0x20>
    629c:	mov	r0, r2
    62a0:	mov	r1, r3
    62a4:	bx	lr
    62a8:	push	{r4, r5, r6, r7, lr}
    62ac:	lsl	r4, r2, #5
    62b0:	adds	r6, r4, r1
    62b4:	lsl	r5, r3, #5
    62b8:	ldrb	r1, [r0], #1
    62bc:	orr	r5, r5, r2, lsr #27
    62c0:	adc	r7, r5, #0
    62c4:	adds	r2, r2, r6
    62c8:	adc	r3, r3, r7
    62cc:	cmp	r1, #0
    62d0:	bne	62ac <ck_hash_str+0x24>
    62d4:	mov	r0, r2
    62d8:	mov	r1, r3
    62dc:	pop	{r4, r5, r6, r7, pc}
    62e0:	.word	0x00001505

000062e4 <ck_str_n_hash_lookup>:
    62e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    62e8:	sub	sp, sp, #20
    62ec:	ldrd	r4, [r2, #8]
    62f0:	orrs	r3, r4, r5
    62f4:	beq	63c0 <ck_str_n_hash_lookup+0xdc>
    62f8:	sub	r3, r1, #1
    62fc:	cmp	r3, #126	; 0x7e
    6300:	bhi	63c0 <ck_str_n_hash_lookup+0xdc>
    6304:	mov	r5, r2
    6308:	mov	r4, r1
    630c:	mov	sl, r0
    6310:	bl	6288 <ck_hash_str>
    6314:	ldrd	r8, [r5]
    6318:	mov	fp, #132	; 0x84
    631c:	add	r4, r4, #1
    6320:	mov	r2, r8
    6324:	mov	r3, r9
    6328:	bl	20f10 <__aeabi_uldivmod>
    632c:	mov	r6, r2
    6330:	mov	r7, r3
    6334:	subs	r0, r6, #1
    6338:	mov	r2, r8
    633c:	mov	r3, r9
    6340:	sbc	r1, r7, #0
    6344:	bl	20f10 <__aeabi_uldivmod>
    6348:	strd	r2, [sp]
    634c:	ldrd	r2, [sp]
    6350:	cmp	r7, r3
    6354:	cmpeq	r6, r2
    6358:	beq	63c0 <ck_str_n_hash_lookup+0xdc>
    635c:	mul	r2, fp, r6
    6360:	ldr	r1, [r5, #16]
    6364:	add	r3, r1, r2
    6368:	ldrb	r0, [r1, r2]
    636c:	cmp	r0, #0
    6370:	beq	6398 <ck_str_n_hash_lookup+0xb4>
    6374:	mov	r0, r3
    6378:	mov	r2, r4
    637c:	mov	r1, sl
    6380:	str	r3, [sp, #12]
    6384:	bl	454c <strncmp@plt>
    6388:	ldr	r3, [sp, #12]
    638c:	cmp	r0, #0
    6390:	bne	63a0 <ck_str_n_hash_lookup+0xbc>
    6394:	ldr	r0, [r3, #128]	; 0x80
    6398:	add	sp, sp, #20
    639c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    63a0:	adds	r0, r6, #1
    63a4:	adc	r1, r7, #0
    63a8:	mov	r2, r8
    63ac:	mov	r3, r9
    63b0:	bl	20f10 <__aeabi_uldivmod>
    63b4:	mov	r6, r2
    63b8:	mov	r7, r3
    63bc:	b	634c <ck_str_n_hash_lookup+0x68>
    63c0:	mov	r0, #0
    63c4:	b	6398 <ck_str_n_hash_lookup+0xb4>

000063c8 <ck_float_hash_lookup>:
    63c8:	push	{r0, r1, r2, r4, r5, lr}
    63cc:	mov	r5, r0
    63d0:	mov	r0, sp
    63d4:	bl	6140 <ck_float2str>
    63d8:	mov	r2, r5
    63dc:	mov	r1, #5
    63e0:	mov	r0, sp
    63e4:	bl	40a8 <ck_str_n_hash_lookup@plt>
    63e8:	add	sp, sp, #12
    63ec:	pop	{r4, r5, pc}

000063f0 <ck_double_hash_lookup>:
    63f0:	push	{r4, r5, lr}
    63f4:	sub	sp, sp, #20
    63f8:	add	r4, sp, #4
    63fc:	mov	r5, r0
    6400:	mov	r0, r4
    6404:	bl	61b4 <ck_double2str>
    6408:	mov	r2, r5
    640c:	mov	r1, #10
    6410:	mov	r0, r4
    6414:	bl	40a8 <ck_str_n_hash_lookup@plt>
    6418:	add	sp, sp, #20
    641c:	pop	{r4, r5, pc}

00006420 <ck_str_hash_lookup>:
    6420:	push	{r4, r5, r6, lr}
    6424:	mov	r5, r1
    6428:	mov	r4, r0
    642c:	bl	424c <strlen@plt>
    6430:	mov	r2, r5
    6434:	cmp	r0, #127	; 0x7f
    6438:	movcc	r1, r0
    643c:	movcs	r1, #127	; 0x7f
    6440:	mov	r0, r4
    6444:	pop	{r4, r5, r6, lr}
    6448:	b	40a8 <ck_str_n_hash_lookup@plt>

0000644c <ck_hash_table_free>:
    644c:	push	{r4, lr}
    6450:	mov	r4, r0
    6454:	ldr	r0, [r0, #16]
    6458:	bl	3f04 <free@plt>
    645c:	mov	r0, r4
    6460:	pop	{r4, lr}
    6464:	b	3f04 <free@plt>

00006468 <ck_hash_table_wipe>:
    6468:	ldr	r3, [r0]
    646c:	mov	r2, #132	; 0x84
    6470:	mov	r1, #0
    6474:	mul	r2, r2, r3
    6478:	ldr	r0, [r0, #16]
    647c:	b	42e8 <memset@plt>

00006480 <ck_hash_table_init>:
    6480:	push	{r4, r5, r6, lr}
    6484:	mov	r5, r0
    6488:	mov	r0, #24
    648c:	bl	415c <malloc@plt>
    6490:	subs	r4, r0, #0
    6494:	beq	64c4 <ck_hash_table_init+0x44>
    6498:	lsl	r5, r5, #1
    649c:	mov	r0, #132	; 0x84
    64a0:	mul	r0, r0, r5
    64a4:	bl	415c <malloc@plt>
    64a8:	cmp	r0, #0
    64ac:	mov	r6, r0
    64b0:	str	r0, [r4, #16]
    64b4:	bne	64cc <ck_hash_table_init+0x4c>
    64b8:	mov	r0, r4
    64bc:	bl	3f04 <free@plt>
    64c0:	mov	r4, r6
    64c4:	mov	r0, r4
    64c8:	pop	{r4, r5, r6, pc}
    64cc:	mov	r0, r5
    64d0:	mov	r1, #0
    64d4:	mov	r2, #0
    64d8:	mov	r3, #0
    64dc:	strd	r0, [r4]
    64e0:	strd	r2, [r4, #8]
    64e4:	mov	r0, r4
    64e8:	bl	3e5c <ck_hash_table_wipe@plt>
    64ec:	b	64c4 <ck_hash_table_init+0x44>

000064f0 <ck_hash_table_grow>:
    64f0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    64f4:	mov	r1, #132	; 0x84
    64f8:	ldrd	r8, [r0]
    64fc:	mov	r4, r0
    6500:	ldr	sl, [r0, #16]
    6504:	adds	r6, r8, r8
    6508:	mov	r0, r6
    650c:	adc	r7, r9, r9
    6510:	bl	3d9c <calloc@plt>
    6514:	cmp	r0, #0
    6518:	str	r0, [r4, #16]
    651c:	bne	6528 <ck_hash_table_grow+0x38>
    6520:	mvn	r0, #0
    6524:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    6528:	mov	r2, #0
    652c:	stm	r4, {r6, r7}
    6530:	mov	r5, sl
    6534:	mov	r6, r2
    6538:	mov	r7, r2
    653c:	str	r2, [r4, #8]
    6540:	str	r2, [r4, #12]
    6544:	cmp	r7, r9
    6548:	cmpeq	r6, r8
    654c:	bne	6560 <ck_hash_table_grow+0x70>
    6550:	mov	r0, sl
    6554:	bl	3f04 <free@plt>
    6558:	mov	r0, #0
    655c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    6560:	ldrb	r3, [r5]
    6564:	cmp	r3, #0
    6568:	bne	657c <ck_hash_table_grow+0x8c>
    656c:	adds	r6, r6, #1
    6570:	adc	r7, r7, #0
    6574:	add	r5, r5, #132	; 0x84
    6578:	b	6544 <ck_hash_table_grow+0x54>
    657c:	mov	r2, r4
    6580:	ldr	r1, [r5, #128]	; 0x80
    6584:	mov	r0, r5
    6588:	bl	4540 <ck_str_hash_insert@plt>
    658c:	cmp	r0, #0
    6590:	bne	656c <ck_hash_table_grow+0x7c>
    6594:	b	6520 <ck_hash_table_grow+0x30>

00006598 <ck_str_n_hash_insert>:
    6598:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    659c:	vpush	{d8}
    65a0:	ldrd	r6, [r3]
    65a4:	orrs	ip, r6, r7
    65a8:	sub	sp, sp, #28
    65ac:	bne	65c0 <ck_str_n_hash_insert+0x28>
    65b0:	mov	r0, #0
    65b4:	add	sp, sp, #28
    65b8:	vpop	{d8}
    65bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    65c0:	sub	ip, r1, #1
    65c4:	cmp	ip, #126	; 0x7e
    65c8:	bhi	65b0 <ck_str_n_hash_insert+0x18>
    65cc:	mov	r5, r1
    65d0:	mov	r8, r0
    65d4:	ldrd	r0, [r3, #8]
    65d8:	mov	r4, r3
    65dc:	str	r2, [sp, #16]
    65e0:	bl	20dc8 <__aeabi_ul2d>
    65e4:	vmov	d8, r0, r1
    65e8:	mov	r0, r6
    65ec:	mov	r1, r7
    65f0:	bl	20dc8 <__aeabi_ul2d>
    65f4:	vldr	d7, [pc, #300]	; 6728 <ck_str_n_hash_insert+0x190>
    65f8:	vmov	d6, r0, r1
    65fc:	vmul.f64	d7, d6, d7
    6600:	vcmpe.f64	d8, d7
    6604:	vmrs	APSR_nzcv, fpscr
    6608:	bge	6640 <ck_str_n_hash_insert+0xa8>
    660c:	mov	r0, r8
    6610:	bl	6288 <ck_hash_str>
    6614:	ldrd	sl, [r4]
    6618:	mov	r2, sl
    661c:	mov	r3, fp
    6620:	bl	20f10 <__aeabi_uldivmod>
    6624:	mov	r6, r2
    6628:	mov	r7, r3
    662c:	orrs	r3, r6, r7
    6630:	bne	6654 <ck_str_n_hash_insert+0xbc>
    6634:	subs	r2, sl, #1
    6638:	sbc	r3, fp, #0
    663c:	b	6668 <ck_str_n_hash_insert+0xd0>
    6640:	mov	r0, r4
    6644:	bl	4030 <ck_hash_table_grow@plt>
    6648:	cmn	r0, #1
    664c:	bne	660c <ck_str_n_hash_insert+0x74>
    6650:	b	65b0 <ck_str_n_hash_insert+0x18>
    6654:	subs	r0, r6, #1
    6658:	mov	r2, sl
    665c:	mov	r3, fp
    6660:	sbc	r1, r7, #0
    6664:	bl	20f10 <__aeabi_uldivmod>
    6668:	strd	r2, [sp]
    666c:	add	r3, r5, #1
    6670:	str	r3, [sp, #12]
    6674:	ldrd	r2, [sp]
    6678:	cmp	r7, r3
    667c:	cmpeq	r6, r2
    6680:	beq	65b0 <ck_str_n_hash_insert+0x18>
    6684:	mov	r3, #132	; 0x84
    6688:	ldr	r2, [r4, #16]
    668c:	mul	r9, r3, r6
    6690:	add	r3, r2, r9
    6694:	ldrb	r2, [r2, r9]
    6698:	cmp	r2, #0
    669c:	bne	66e8 <ck_str_n_hash_insert+0x150>
    66a0:	ldrd	r0, [r4, #8]
    66a4:	adds	r0, r0, #1
    66a8:	adc	r1, r1, #0
    66ac:	strd	r0, [r4, #8]
    66b0:	mov	r2, r5
    66b4:	mov	r0, r3
    66b8:	mov	r1, r8
    66bc:	bl	3f64 <memcpy@plt>
    66c0:	ldr	r3, [r4, #16]
    66c4:	mov	r2, #0
    66c8:	add	r3, r3, r9
    66cc:	mov	r0, #1
    66d0:	strb	r2, [r3, r5]
    66d4:	ldr	r3, [r4, #16]
    66d8:	add	r9, r3, r9
    66dc:	ldr	r3, [sp, #16]
    66e0:	str	r3, [r9, #128]	; 0x80
    66e4:	b	65b4 <ck_str_n_hash_insert+0x1c>
    66e8:	mov	r0, r3
    66ec:	ldr	r2, [sp, #12]
    66f0:	mov	r1, r8
    66f4:	str	r3, [sp, #20]
    66f8:	bl	454c <strncmp@plt>
    66fc:	ldr	r3, [sp, #20]
    6700:	cmp	r0, #0
    6704:	beq	66b0 <ck_str_n_hash_insert+0x118>
    6708:	adds	r0, r6, #1
    670c:	adc	r1, r7, #0
    6710:	mov	r2, sl
    6714:	mov	r3, fp
    6718:	bl	20f10 <__aeabi_uldivmod>
    671c:	mov	r6, r2
    6720:	mov	r7, r3
    6724:	b	6674 <ck_str_n_hash_insert+0xdc>
    6728:	.word	0x00000000
    672c:	.word	0x3fe80000

00006730 <ck_float_hash_insert>:
    6730:	push	{r0, r1, r4, r5, r6, lr}
    6734:	mov	r6, r1
    6738:	mov	r5, r0
    673c:	mov	r0, sp
    6740:	bl	6140 <ck_float2str>
    6744:	mov	r3, r6
    6748:	mov	r2, r5
    674c:	mov	r1, #5
    6750:	mov	r0, sp
    6754:	bl	42dc <ck_str_n_hash_insert@plt>
    6758:	add	sp, sp, #8
    675c:	pop	{r4, r5, r6, pc}

00006760 <ck_double_hash_insert>:
    6760:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    6764:	add	r4, sp, #4
    6768:	mov	r6, r1
    676c:	mov	r5, r0
    6770:	mov	r0, r4
    6774:	bl	61b4 <ck_double2str>
    6778:	mov	r3, r6
    677c:	mov	r2, r5
    6780:	mov	r1, #10
    6784:	mov	r0, r4
    6788:	bl	42dc <ck_str_n_hash_insert@plt>
    678c:	add	sp, sp, #16
    6790:	pop	{r4, r5, r6, pc}

00006794 <ck_str_hash_insert>:
    6794:	push	{r4, r5, r6, lr}
    6798:	mov	r5, r1
    679c:	mov	r6, r2
    67a0:	mov	r4, r0
    67a4:	bl	424c <strlen@plt>
    67a8:	mov	r3, r6
    67ac:	mov	r2, r5
    67b0:	cmp	r0, #127	; 0x7f
    67b4:	movcc	r1, r0
    67b8:	movcs	r1, #127	; 0x7f
    67bc:	mov	r0, r4
    67c0:	pop	{r4, r5, r6, lr}
    67c4:	b	42dc <ck_str_n_hash_insert@plt>

000067c8 <machine_is_little_endian>:
    67c8:	mov	r0, #1
    67cc:	bx	lr

000067d0 <ones_to_twos_complement1>:
    67d0:	bx	lr

000067d4 <ones_to_twos_complement2>:
    67d4:	cmp	r0, #0
    67d8:	addlt	r0, r0, #1
    67dc:	sxthlt	r0, r0
    67e0:	bx	lr

000067e4 <ones_to_twos_complement4>:
    67e4:	cmp	r0, #0
    67e8:	addlt	r0, r0, #1
    67ec:	bx	lr

000067f0 <twos_to_ones_complement1>:
    67f0:	bx	lr

000067f4 <twos_to_ones_complement2>:
    67f4:	cmp	r0, #0
    67f8:	sublt	r0, r0, #1
    67fc:	sxthlt	r0, r0
    6800:	bx	lr

00006804 <twos_to_ones_complement4>:
    6804:	cmp	r0, #0
    6808:	sublt	r0, r0, #1
    680c:	bx	lr

00006810 <byteswap2>:
    6810:	rev16	r0, r0
    6814:	uxth	r0, r0
    6818:	bx	lr

0000681c <byteswap4>:
    681c:	rev	r0, r0
    6820:	bx	lr

00006824 <byteswap8>:
    6824:	rev	r3, r0
    6828:	rev	r0, r1
    682c:	mov	r1, r3
    6830:	bx	lr

00006834 <byteswap_float>:
    6834:	push	{r4, lr}
    6838:	vmov	r0, s0
    683c:	bl	3dd8 <byteswap4@plt>
    6840:	vmov	s0, r0
    6844:	pop	{r4, pc}

00006848 <byteswap_double>:
    6848:	push	{r4, lr}
    684c:	vmov	r0, r1, d0
    6850:	bl	3dc0 <byteswap8@plt>
    6854:	vmov	d0, r0, r1
    6858:	pop	{r4, pc}

0000685c <readstat_convert>:
    685c:	push	{r4, r5, r6, r7, lr}
    6860:	sub	sp, sp, #28
    6864:	ldr	r4, [sp, #48]	; 0x30
    6868:	str	r2, [sp, #12]
    686c:	str	r3, [sp, #8]
    6870:	ldr	r7, [sp, #8]
    6874:	cmp	r7, #0
    6878:	beq	688c <readstat_convert+0x30>
    687c:	sub	r3, r7, #1
    6880:	ldrb	ip, [r2, r3]
    6884:	cmp	ip, #32
    6888:	beq	691c <readstat_convert+0xc0>
    688c:	cmp	r1, #0
    6890:	beq	6948 <readstat_convert+0xec>
    6894:	cmp	r4, #0
    6898:	mov	r3, r2
    689c:	mov	r6, r1
    68a0:	mov	r5, r0
    68a4:	beq	6924 <readstat_convert+0xc8>
    68a8:	sub	r3, r1, #1
    68ac:	str	r3, [sp, #16]
    68b0:	add	r3, sp, #24
    68b4:	add	r2, sp, #16
    68b8:	str	r0, [r3, #-4]!
    68bc:	add	r1, sp, #12
    68c0:	str	r2, [sp]
    68c4:	mov	r0, r4
    68c8:	add	r2, sp, #8
    68cc:	bl	3e2c <iconv@plt>
    68d0:	cmn	r0, #1
    68d4:	bne	6900 <readstat_convert+0xa4>
    68d8:	bl	42ac <__errno_location@plt>
    68dc:	ldr	r3, [r0]
    68e0:	cmp	r3, #7
    68e4:	beq	6948 <readstat_convert+0xec>
    68e8:	cmp	r3, #84	; 0x54
    68ec:	moveq	r0, #17
    68f0:	beq	6914 <readstat_convert+0xb8>
    68f4:	cmp	r3, #22
    68f8:	movne	r0, #16
    68fc:	bne	6914 <readstat_convert+0xb8>
    6900:	ldr	r3, [sp, #16]
    6904:	add	r5, r5, r6
    6908:	mvn	r3, r3
    690c:	mov	r0, #0
    6910:	strb	r0, [r5, r3]
    6914:	add	sp, sp, #28
    6918:	pop	{r4, r5, r6, r7, pc}
    691c:	str	r3, [sp, #8]
    6920:	b	6870 <readstat_convert+0x14>
    6924:	add	r2, r7, #1
    6928:	cmp	r1, r2
    692c:	bcc	6948 <readstat_convert+0xec>
    6930:	mov	r2, r7
    6934:	mov	r1, r3
    6938:	bl	3f64 <memcpy@plt>
    693c:	strb	r4, [r5, r7]
    6940:	mov	r0, r4
    6944:	b	6914 <readstat_convert+0xb8>
    6948:	mov	r0, #19
    694c:	b	6914 <readstat_convert+0xb8>

00006950 <readstat_error_message>:
    6950:	cmp	r0, #0
    6954:	bxeq	lr
    6958:	cmp	r0, #1
    695c:	beq	6a9c <readstat_error_message+0x14c>
    6960:	cmp	r0, #2
    6964:	beq	6aa8 <readstat_error_message+0x158>
    6968:	cmp	r0, #3
    696c:	beq	6ab4 <readstat_error_message+0x164>
    6970:	cmp	r0, #4
    6974:	beq	6ac0 <readstat_error_message+0x170>
    6978:	cmp	r0, #5
    697c:	beq	6acc <readstat_error_message+0x17c>
    6980:	cmp	r0, #6
    6984:	beq	6ad8 <readstat_error_message+0x188>
    6988:	cmp	r0, #7
    698c:	beq	6ae4 <readstat_error_message+0x194>
    6990:	cmp	r0, #8
    6994:	beq	6af0 <readstat_error_message+0x1a0>
    6998:	cmp	r0, #9
    699c:	beq	6afc <readstat_error_message+0x1ac>
    69a0:	cmp	r0, #10
    69a4:	beq	6b08 <readstat_error_message+0x1b8>
    69a8:	cmp	r0, #11
    69ac:	beq	6b14 <readstat_error_message+0x1c4>
    69b0:	cmp	r0, #12
    69b4:	beq	6b20 <readstat_error_message+0x1d0>
    69b8:	cmp	r0, #13
    69bc:	beq	6b2c <readstat_error_message+0x1dc>
    69c0:	cmp	r0, #14
    69c4:	beq	6b38 <readstat_error_message+0x1e8>
    69c8:	cmp	r0, #15
    69cc:	beq	6b44 <readstat_error_message+0x1f4>
    69d0:	cmp	r0, #16
    69d4:	beq	6b50 <readstat_error_message+0x200>
    69d8:	cmp	r0, #17
    69dc:	beq	6b5c <readstat_error_message+0x20c>
    69e0:	cmp	r0, #18
    69e4:	beq	6b68 <readstat_error_message+0x218>
    69e8:	cmp	r0, #19
    69ec:	beq	6b74 <readstat_error_message+0x224>
    69f0:	cmp	r0, #20
    69f4:	beq	6b80 <readstat_error_message+0x230>
    69f8:	cmp	r0, #21
    69fc:	beq	6b8c <readstat_error_message+0x23c>
    6a00:	cmp	r0, #22
    6a04:	beq	6b98 <readstat_error_message+0x248>
    6a08:	cmp	r0, #23
    6a0c:	beq	6ba4 <readstat_error_message+0x254>
    6a10:	cmp	r0, #24
    6a14:	beq	6bb0 <readstat_error_message+0x260>
    6a18:	cmp	r0, #25
    6a1c:	beq	6bbc <readstat_error_message+0x26c>
    6a20:	cmp	r0, #26
    6a24:	beq	6bc8 <readstat_error_message+0x278>
    6a28:	cmp	r0, #27
    6a2c:	beq	6bd4 <readstat_error_message+0x284>
    6a30:	cmp	r0, #28
    6a34:	beq	6be0 <readstat_error_message+0x290>
    6a38:	cmp	r0, #38	; 0x26
    6a3c:	beq	6bec <readstat_error_message+0x29c>
    6a40:	cmp	r0, #29
    6a44:	beq	6bf8 <readstat_error_message+0x2a8>
    6a48:	cmp	r0, #30
    6a4c:	beq	6c04 <readstat_error_message+0x2b4>
    6a50:	cmp	r0, #31
    6a54:	beq	6c10 <readstat_error_message+0x2c0>
    6a58:	cmp	r0, #32
    6a5c:	beq	6c1c <readstat_error_message+0x2cc>
    6a60:	cmp	r0, #33	; 0x21
    6a64:	beq	6c28 <readstat_error_message+0x2d8>
    6a68:	cmp	r0, #34	; 0x22
    6a6c:	beq	6c34 <readstat_error_message+0x2e4>
    6a70:	cmp	r0, #35	; 0x23
    6a74:	beq	6c40 <readstat_error_message+0x2f0>
    6a78:	cmp	r0, #36	; 0x24
    6a7c:	beq	6c4c <readstat_error_message+0x2fc>
    6a80:	cmp	r0, #37	; 0x25
    6a84:	beq	6c58 <readstat_error_message+0x308>
    6a88:	cmp	r0, #39	; 0x27
    6a8c:	beq	6c64 <readstat_error_message+0x314>
    6a90:	ldr	r0, [pc, #472]	; 6c70 <readstat_error_message+0x320>
    6a94:	add	r0, pc, r0
    6a98:	bx	lr
    6a9c:	ldr	r0, [pc, #464]	; 6c74 <readstat_error_message+0x324>
    6aa0:	add	r0, pc, r0
    6aa4:	bx	lr
    6aa8:	ldr	r0, [pc, #456]	; 6c78 <readstat_error_message+0x328>
    6aac:	add	r0, pc, r0
    6ab0:	bx	lr
    6ab4:	ldr	r0, [pc, #448]	; 6c7c <readstat_error_message+0x32c>
    6ab8:	add	r0, pc, r0
    6abc:	bx	lr
    6ac0:	ldr	r0, [pc, #440]	; 6c80 <readstat_error_message+0x330>
    6ac4:	add	r0, pc, r0
    6ac8:	bx	lr
    6acc:	ldr	r0, [pc, #432]	; 6c84 <readstat_error_message+0x334>
    6ad0:	add	r0, pc, r0
    6ad4:	bx	lr
    6ad8:	ldr	r0, [pc, #424]	; 6c88 <readstat_error_message+0x338>
    6adc:	add	r0, pc, r0
    6ae0:	bx	lr
    6ae4:	ldr	r0, [pc, #416]	; 6c8c <readstat_error_message+0x33c>
    6ae8:	add	r0, pc, r0
    6aec:	bx	lr
    6af0:	ldr	r0, [pc, #408]	; 6c90 <readstat_error_message+0x340>
    6af4:	add	r0, pc, r0
    6af8:	bx	lr
    6afc:	ldr	r0, [pc, #400]	; 6c94 <readstat_error_message+0x344>
    6b00:	add	r0, pc, r0
    6b04:	bx	lr
    6b08:	ldr	r0, [pc, #392]	; 6c98 <readstat_error_message+0x348>
    6b0c:	add	r0, pc, r0
    6b10:	bx	lr
    6b14:	ldr	r0, [pc, #384]	; 6c9c <readstat_error_message+0x34c>
    6b18:	add	r0, pc, r0
    6b1c:	bx	lr
    6b20:	ldr	r0, [pc, #376]	; 6ca0 <readstat_error_message+0x350>
    6b24:	add	r0, pc, r0
    6b28:	bx	lr
    6b2c:	ldr	r0, [pc, #368]	; 6ca4 <readstat_error_message+0x354>
    6b30:	add	r0, pc, r0
    6b34:	bx	lr
    6b38:	ldr	r0, [pc, #360]	; 6ca8 <readstat_error_message+0x358>
    6b3c:	add	r0, pc, r0
    6b40:	bx	lr
    6b44:	ldr	r0, [pc, #352]	; 6cac <readstat_error_message+0x35c>
    6b48:	add	r0, pc, r0
    6b4c:	bx	lr
    6b50:	ldr	r0, [pc, #344]	; 6cb0 <readstat_error_message+0x360>
    6b54:	add	r0, pc, r0
    6b58:	bx	lr
    6b5c:	ldr	r0, [pc, #336]	; 6cb4 <readstat_error_message+0x364>
    6b60:	add	r0, pc, r0
    6b64:	bx	lr
    6b68:	ldr	r0, [pc, #328]	; 6cb8 <readstat_error_message+0x368>
    6b6c:	add	r0, pc, r0
    6b70:	bx	lr
    6b74:	ldr	r0, [pc, #320]	; 6cbc <readstat_error_message+0x36c>
    6b78:	add	r0, pc, r0
    6b7c:	bx	lr
    6b80:	ldr	r0, [pc, #312]	; 6cc0 <readstat_error_message+0x370>
    6b84:	add	r0, pc, r0
    6b88:	bx	lr
    6b8c:	ldr	r0, [pc, #304]	; 6cc4 <readstat_error_message+0x374>
    6b90:	add	r0, pc, r0
    6b94:	bx	lr
    6b98:	ldr	r0, [pc, #296]	; 6cc8 <readstat_error_message+0x378>
    6b9c:	add	r0, pc, r0
    6ba0:	bx	lr
    6ba4:	ldr	r0, [pc, #288]	; 6ccc <readstat_error_message+0x37c>
    6ba8:	add	r0, pc, r0
    6bac:	bx	lr
    6bb0:	ldr	r0, [pc, #280]	; 6cd0 <readstat_error_message+0x380>
    6bb4:	add	r0, pc, r0
    6bb8:	bx	lr
    6bbc:	ldr	r0, [pc, #272]	; 6cd4 <readstat_error_message+0x384>
    6bc0:	add	r0, pc, r0
    6bc4:	bx	lr
    6bc8:	ldr	r0, [pc, #264]	; 6cd8 <readstat_error_message+0x388>
    6bcc:	add	r0, pc, r0
    6bd0:	bx	lr
    6bd4:	ldr	r0, [pc, #256]	; 6cdc <readstat_error_message+0x38c>
    6bd8:	add	r0, pc, r0
    6bdc:	bx	lr
    6be0:	ldr	r0, [pc, #248]	; 6ce0 <readstat_error_message+0x390>
    6be4:	add	r0, pc, r0
    6be8:	bx	lr
    6bec:	ldr	r0, [pc, #240]	; 6ce4 <readstat_error_message+0x394>
    6bf0:	add	r0, pc, r0
    6bf4:	bx	lr
    6bf8:	ldr	r0, [pc, #232]	; 6ce8 <readstat_error_message+0x398>
    6bfc:	add	r0, pc, r0
    6c00:	bx	lr
    6c04:	ldr	r0, [pc, #224]	; 6cec <readstat_error_message+0x39c>
    6c08:	add	r0, pc, r0
    6c0c:	bx	lr
    6c10:	ldr	r0, [pc, #216]	; 6cf0 <readstat_error_message+0x3a0>
    6c14:	add	r0, pc, r0
    6c18:	bx	lr
    6c1c:	ldr	r0, [pc, #208]	; 6cf4 <readstat_error_message+0x3a4>
    6c20:	add	r0, pc, r0
    6c24:	bx	lr
    6c28:	ldr	r0, [pc, #200]	; 6cf8 <readstat_error_message+0x3a8>
    6c2c:	add	r0, pc, r0
    6c30:	bx	lr
    6c34:	ldr	r0, [pc, #192]	; 6cfc <readstat_error_message+0x3ac>
    6c38:	add	r0, pc, r0
    6c3c:	bx	lr
    6c40:	ldr	r0, [pc, #184]	; 6d00 <readstat_error_message+0x3b0>
    6c44:	add	r0, pc, r0
    6c48:	bx	lr
    6c4c:	ldr	r0, [pc, #176]	; 6d04 <readstat_error_message+0x3b4>
    6c50:	add	r0, pc, r0
    6c54:	bx	lr
    6c58:	ldr	r0, [pc, #168]	; 6d08 <readstat_error_message+0x3b8>
    6c5c:	add	r0, pc, r0
    6c60:	bx	lr
    6c64:	ldr	r0, [pc, #160]	; 6d0c <readstat_error_message+0x3bc>
    6c68:	add	r0, pc, r0
    6c6c:	bx	lr
    6c70:	.word	0x0001ae74
    6c74:	.word	0x0001a658
    6c78:	.word	0x0001a660
    6c7c:	.word	0x0001a66d
    6c80:	.word	0x0001a67b
    6c84:	.word	0x0001a6aa
    6c88:	.word	0x0001a6cd
    6c8c:	.word	0x0001a6e9
    6c90:	.word	0x0001a703
    6c94:	.word	0x0001a72b
    6c98:	.word	0x0001a750
    6c9c:	.word	0x0001a772
    6ca0:	.word	0x0001a797
    6ca4:	.word	0x0001a7cf
    6ca8:	.word	0x0001a7d8
    6cac:	.word	0x0001a837
    6cb0:	.word	0x0001a846
    6cb4:	.word	0x0001a86d
    6cb8:	.word	0x0001a8ac
    6cbc:	.word	0x0001a8ee
    6cc0:	.word	0x0001a92f
    6cc4:	.word	0x0001a987
    6cc8:	.word	0x0001a9d5
    6ccc:	.word	0x0001aa24
    6cd0:	.word	0x0001aa5d
    6cd4:	.word	0x0001aa82
    6cd8:	.word	0x0001aaa7
    6cdc:	.word	0x0001aac9
    6ce0:	.word	0x0001aae0
    6ce4:	.word	0x0001ab04
    6ce8:	.word	0x0001ab1a
    6cec:	.word	0x0001ab35
    6cf0:	.word	0x0001ab63
    6cf4:	.word	0x0001ab95
    6cf8:	.word	0x0001abbb
    6cfc:	.word	0x0001abf2
    6d00:	.word	0x0001ac1a
    6d04:	.word	0x0001ac3e
    6d08:	.word	0x0001ac57
    6d0c:	.word	0x0001ac79

00006d10 <unistd_open_handler>:
    6d10:	push	{r4, lr}
    6d14:	mov	r4, r1
    6d18:	mov	r1, #0
    6d1c:	bl	41f8 <open@plt>
    6d20:	str	r0, [r4]
    6d24:	pop	{r4, pc}

00006d28 <unistd_close_handler>:
    6d28:	ldr	r0, [r0]
    6d2c:	cmn	r0, #1
    6d30:	beq	6d38 <unistd_close_handler+0x10>
    6d34:	b	4564 <close@plt>
    6d38:	mov	r0, #0
    6d3c:	bx	lr

00006d40 <unistd_seek_handler>:
    6d40:	cmp	r1, #1
    6d44:	mov	r3, r2
    6d48:	beq	6d60 <unistd_seek_handler+0x20>
    6d4c:	bcc	6d70 <unistd_seek_handler+0x30>
    6d50:	cmp	r1, #2
    6d54:	beq	6d60 <unistd_seek_handler+0x20>
    6d58:	mvn	r0, #0
    6d5c:	bx	lr
    6d60:	mov	r2, r1
    6d64:	mov	r1, r0
    6d68:	ldr	r0, [r3]
    6d6c:	b	3fb8 <lseek@plt>
    6d70:	mov	r2, #0
    6d74:	b	6d64 <unistd_seek_handler+0x24>

00006d78 <unistd_update_handler>:
    6d78:	push	{r4, r5, r6, lr}
    6d7c:	subs	r4, r1, #0
    6d80:	vpush	{d8}
    6d84:	beq	6dd0 <unistd_update_handler+0x58>
    6d88:	mov	r5, r2
    6d8c:	vmov	s16, r0
    6d90:	mov	r2, #1
    6d94:	mov	r1, #0
    6d98:	ldr	r0, [r3]
    6d9c:	bl	3fb8 <lseek@plt>
    6da0:	cmn	r0, #1
    6da4:	moveq	r0, #15
    6da8:	beq	6dd4 <unistd_update_handler+0x5c>
    6dac:	vmov	s15, r0
    6db0:	vcvt.f64.s32	d8, s16
    6db4:	mov	r0, r5
    6db8:	vcvt.f64.s32	d0, s15
    6dbc:	vdiv.f64	d0, d0, d8
    6dc0:	blx	r4
    6dc4:	cmp	r0, #0
    6dc8:	movne	r0, #4
    6dcc:	bne	6dd4 <unistd_update_handler+0x5c>
    6dd0:	mov	r0, #0
    6dd4:	vpop	{d8}
    6dd8:	pop	{r4, r5, r6, pc}

00006ddc <unistd_read_handler>:
    6ddc:	mov	r3, r2
    6de0:	mov	r2, r1
    6de4:	mov	r1, r0
    6de8:	ldr	r0, [r3]
    6dec:	b	3e80 <read@plt>

00006df0 <unistd_io_init>:
    6df0:	push	{r0, r1, r4, r5, r6, lr}
    6df4:	mov	r4, r0
    6df8:	ldr	r5, [pc, #216]	; 6ed8 <unistd_io_init+0xe8>
    6dfc:	ldr	r3, [pc, #216]	; 6edc <unistd_io_init+0xec>
    6e00:	add	r5, pc, r5
    6e04:	ldr	r3, [r5, r3]
    6e08:	mov	r1, r3
    6e0c:	str	r3, [sp, #4]
    6e10:	bl	3db4 <readstat_set_open_handler@plt>
    6e14:	subs	r6, r0, #0
    6e18:	bne	6ecc <unistd_io_init+0xdc>
    6e1c:	ldr	r3, [pc, #188]	; 6ee0 <unistd_io_init+0xf0>
    6e20:	mov	r0, r4
    6e24:	ldr	r3, [r5, r3]
    6e28:	mov	r1, r3
    6e2c:	str	r3, [sp, #4]
    6e30:	bl	44bc <readstat_set_close_handler@plt>
    6e34:	subs	r6, r0, #0
    6e38:	bne	6ecc <unistd_io_init+0xdc>
    6e3c:	ldr	r3, [pc, #160]	; 6ee4 <unistd_io_init+0xf4>
    6e40:	mov	r0, r4
    6e44:	ldr	r3, [r5, r3]
    6e48:	mov	r1, r3
    6e4c:	str	r3, [sp, #4]
    6e50:	bl	3da8 <readstat_set_seek_handler@plt>
    6e54:	subs	r6, r0, #0
    6e58:	bne	6ecc <unistd_io_init+0xdc>
    6e5c:	ldr	r3, [pc, #132]	; 6ee8 <unistd_io_init+0xf8>
    6e60:	mov	r0, r4
    6e64:	ldr	r3, [r5, r3]
    6e68:	mov	r1, r3
    6e6c:	str	r3, [sp, #4]
    6e70:	bl	4384 <readstat_set_read_handler@plt>
    6e74:	subs	r6, r0, #0
    6e78:	bne	6ecc <unistd_io_init+0xdc>
    6e7c:	ldr	r3, [pc, #104]	; 6eec <unistd_io_init+0xfc>
    6e80:	mov	r0, r4
    6e84:	ldr	r3, [r5, r3]
    6e88:	mov	r1, r3
    6e8c:	str	r3, [sp, #4]
    6e90:	bl	3ed4 <readstat_set_update_handler@plt>
    6e94:	cmp	r0, #0
    6e98:	bne	6ecc <unistd_io_init+0xdc>
    6e9c:	mov	r1, #4
    6ea0:	mov	r0, #1
    6ea4:	bl	3d9c <calloc@plt>
    6ea8:	mvn	r3, #0
    6eac:	str	r3, [r0]
    6eb0:	mov	r1, r0
    6eb4:	mov	r0, r4
    6eb8:	bl	4138 <readstat_set_io_ctx@plt>
    6ebc:	ldr	r3, [r4, #32]
    6ec0:	mov	r2, #1
    6ec4:	str	r2, [r3, #24]
    6ec8:	mov	r6, r0
    6ecc:	mov	r0, r6
    6ed0:	add	sp, sp, #8
    6ed4:	pop	{r4, r5, r6, pc}
    6ed8:	.word	0x0003a1f8
    6edc:	.word	0x000002e0
    6ee0:	.word	0x00000314
    6ee4:	.word	0x00000310
    6ee8:	.word	0x000002c4
    6eec:	.word	0x00000300

00006ef0 <readstat_malloc>:
    6ef0:	ldr	r3, [pc, #20]	; 6f0c <readstat_malloc+0x1c>
    6ef4:	sub	r2, r0, #1
    6ef8:	cmp	r2, r3
    6efc:	bhi	6f04 <readstat_malloc+0x14>
    6f00:	b	415c <malloc@plt>
    6f04:	mov	r0, #0
    6f08:	bx	lr
    6f0c:	.word	0x00ffefff

00006f10 <readstat_calloc>:
    6f10:	push	{lr}		; (str lr, [sp, #-4]!)
    6f14:	mul	lr, r1, r0
    6f18:	ldr	ip, [pc, #44]	; 6f4c <readstat_calloc+0x3c>
    6f1c:	cmp	lr, ip
    6f20:	bhi	6f44 <readstat_calloc+0x34>
    6f24:	sub	r2, r0, #1
    6f28:	sub	ip, ip, #1
    6f2c:	sub	r3, r1, #1
    6f30:	cmp	r3, ip
    6f34:	cmpls	r2, ip
    6f38:	bhi	6f44 <readstat_calloc+0x34>
    6f3c:	pop	{lr}		; (ldr lr, [sp], #4)
    6f40:	b	3d9c <calloc@plt>
    6f44:	mov	r0, #0
    6f48:	pop	{pc}		; (ldr pc, [sp], #4)
    6f4c:	.word	0x00fff000

00006f50 <readstat_realloc>:
    6f50:	ldr	r2, [pc, #44]	; 6f84 <readstat_realloc+0x34>
    6f54:	sub	ip, r1, #1
    6f58:	cmp	ip, r2
    6f5c:	bls	6f7c <readstat_realloc+0x2c>
    6f60:	cmp	r0, #0
    6f64:	beq	6f80 <readstat_realloc+0x30>
    6f68:	push	{r4, lr}
    6f6c:	bl	3f04 <free@plt>
    6f70:	mov	r3, #0
    6f74:	mov	r0, r3
    6f78:	pop	{r4, pc}
    6f7c:	b	403c <realloc@plt>
    6f80:	bx	lr
    6f84:	.word	0x00ffefff

00006f88 <readstat_get_row_count>:
    6f88:	ldr	r0, [r0]
    6f8c:	bx	lr

00006f90 <readstat_get_var_count>:
    6f90:	ldr	r0, [r0, #8]
    6f94:	bx	lr

00006f98 <readstat_get_creation_time>:
    6f98:	ldr	r0, [r0, #16]
    6f9c:	bx	lr

00006fa0 <readstat_get_modified_time>:
    6fa0:	ldr	r0, [r0, #20]
    6fa4:	bx	lr

00006fa8 <readstat_get_file_format_version>:
    6fa8:	ldr	r0, [r0, #24]
    6fac:	bx	lr

00006fb0 <readstat_get_file_format_is_64bit>:
    6fb0:	ldrb	r0, [r0, #52]	; 0x34
    6fb4:	and	r0, r0, #1
    6fb8:	bx	lr

00006fbc <readstat_get_compression>:
    6fbc:	ldr	r0, [r0, #32]
    6fc0:	bx	lr

00006fc4 <readstat_get_endianness>:
    6fc4:	ldr	r0, [r0, #36]	; 0x24
    6fc8:	bx	lr

00006fcc <readstat_get_file_label>:
    6fcc:	ldr	r0, [r0, #44]	; 0x2c
    6fd0:	bx	lr

00006fd4 <readstat_get_file_encoding>:
    6fd4:	ldr	r0, [r0, #48]	; 0x30
    6fd8:	bx	lr

00006fdc <readstat_get_table_name>:
    6fdc:	ldr	r0, [r0, #40]	; 0x28
    6fe0:	bx	lr

00006fe4 <readstat_set_metadata_handler>:
    6fe4:	str	r1, [r0]
    6fe8:	mov	r0, #0
    6fec:	bx	lr

00006ff0 <readstat_set_note_handler>:
    6ff0:	str	r1, [r0, #4]
    6ff4:	mov	r0, #0
    6ff8:	bx	lr

00006ffc <readstat_set_variable_handler>:
    6ffc:	str	r1, [r0, #8]
    7000:	mov	r0, #0
    7004:	bx	lr

00007008 <readstat_set_value_handler>:
    7008:	str	r1, [r0, #16]
    700c:	mov	r0, #0
    7010:	bx	lr

00007014 <readstat_set_value_label_handler>:
    7014:	str	r1, [r0, #20]
    7018:	mov	r0, #0
    701c:	bx	lr

00007020 <readstat_set_error_handler>:
    7020:	str	r1, [r0, #24]
    7024:	mov	r0, #0
    7028:	bx	lr

0000702c <readstat_set_progress_handler>:
    702c:	str	r1, [r0, #28]
    7030:	mov	r0, #0
    7034:	bx	lr

00007038 <readstat_set_fweight_handler>:
    7038:	str	r1, [r0, #12]
    703c:	mov	r0, #0
    7040:	bx	lr

00007044 <readstat_set_open_handler>:
    7044:	ldr	r3, [r0, #32]
    7048:	mov	r0, #0
    704c:	str	r1, [r3]
    7050:	bx	lr

00007054 <readstat_set_close_handler>:
    7054:	ldr	r3, [r0, #32]
    7058:	mov	r0, #0
    705c:	str	r1, [r3, #4]
    7060:	bx	lr

00007064 <readstat_set_seek_handler>:
    7064:	ldr	r3, [r0, #32]
    7068:	mov	r0, #0
    706c:	str	r1, [r3, #8]
    7070:	bx	lr

00007074 <readstat_set_read_handler>:
    7074:	ldr	r3, [r0, #32]
    7078:	mov	r0, #0
    707c:	str	r1, [r3, #12]
    7080:	bx	lr

00007084 <readstat_set_update_handler>:
    7084:	ldr	r3, [r0, #32]
    7088:	mov	r0, #0
    708c:	str	r1, [r3, #16]
    7090:	bx	lr

00007094 <readstat_set_io_ctx>:
    7094:	ldr	r3, [r0, #32]
    7098:	push	{r4, r5, r6, lr}
    709c:	mov	r4, r0
    70a0:	ldr	r2, [r3, #24]
    70a4:	mov	r5, r1
    70a8:	cmp	r2, #0
    70ac:	beq	70b8 <readstat_set_io_ctx+0x24>
    70b0:	ldr	r0, [r3, #20]
    70b4:	bl	3f04 <free@plt>
    70b8:	ldr	r3, [r4, #32]
    70bc:	mov	r0, #0
    70c0:	str	r5, [r3, #20]
    70c4:	str	r0, [r3, #24]
    70c8:	pop	{r4, r5, r6, pc}

000070cc <readstat_parser_free>:
    70cc:	push	{r4, lr}
    70d0:	subs	r4, r0, #0
    70d4:	popeq	{r4, pc}
    70d8:	ldr	r3, [r4, #32]
    70dc:	cmp	r3, #0
    70e0:	beq	70f4 <readstat_parser_free+0x28>
    70e4:	mov	r1, #0
    70e8:	bl	4138 <readstat_set_io_ctx@plt>
    70ec:	ldr	r0, [r4, #32]
    70f0:	bl	3f04 <free@plt>
    70f4:	mov	r0, r4
    70f8:	pop	{r4, lr}
    70fc:	b	3f04 <free@plt>

00007100 <readstat_parser_init>:
    7100:	push	{r4, lr}
    7104:	mov	r1, #52	; 0x34
    7108:	mov	r0, #1
    710c:	bl	3d9c <calloc@plt>
    7110:	mov	r1, #28
    7114:	mov	r4, r0
    7118:	mov	r0, #1
    711c:	bl	3d9c <calloc@plt>
    7120:	str	r0, [r4, #32]
    7124:	mov	r0, r4
    7128:	bl	3fc4 <unistd_io_init@plt>
    712c:	cmp	r0, #0
    7130:	beq	7148 <readstat_parser_init+0x48>
    7134:	mov	r0, r4
    7138:	bl	4150 <readstat_parser_free@plt>
    713c:	mov	r4, #0
    7140:	mov	r0, r4
    7144:	pop	{r4, pc}
    7148:	ldr	r3, [pc, #8]	; 7158 <readstat_parser_init+0x58>
    714c:	add	r3, pc, r3
    7150:	str	r3, [r4, #40]	; 0x28
    7154:	b	7140 <readstat_parser_init+0x40>
    7158:	.word	0x0001a7ca

0000715c <readstat_set_file_character_encoding>:
    715c:	str	r1, [r0, #36]	; 0x24
    7160:	mov	r0, #0
    7164:	bx	lr

00007168 <readstat_set_handler_character_encoding>:
    7168:	str	r1, [r0, #40]	; 0x28
    716c:	mov	r0, #0
    7170:	bx	lr

00007174 <readstat_set_row_limit>:
    7174:	str	r1, [r0, #44]	; 0x2c
    7178:	mov	r0, #0
    717c:	bx	lr

00007180 <readstat_set_row_offset>:
    7180:	str	r1, [r0, #48]	; 0x30
    7184:	mov	r0, #0
    7188:	bx	lr
    718c:	andeq	r0, r0, r0

00007190 <readstat_type_class>:
    7190:	cmp	r0, #6
    7194:	cmpne	r0, #0
    7198:	moveq	r0, #1
    719c:	movne	r0, #0
    71a0:	eor	r0, r0, #1
    71a4:	bx	lr

000071a8 <readstat_value_type>:
    71a8:	sub	sp, sp, #16
    71ac:	add	ip, sp, #16
    71b0:	stmdb	ip, {r0, r1, r2, r3}
    71b4:	ldr	r0, [sp, #8]
    71b8:	add	sp, sp, #16
    71bc:	bx	lr

000071c0 <readstat_value_type_class>:
    71c0:	sub	sp, sp, #16
    71c4:	add	ip, sp, #16
    71c8:	stmdb	ip, {r0, r1, r2, r3}
    71cc:	ldr	r0, [sp, #8]
    71d0:	add	sp, sp, #16
    71d4:	b	3e68 <readstat_type_class@plt>

000071d8 <readstat_value_tag>:
    71d8:	sub	sp, sp, #16
    71dc:	add	ip, sp, #16
    71e0:	stmdb	ip, {r0, r1, r2, r3}
    71e4:	ldrb	r0, [sp, #12]
    71e8:	add	sp, sp, #16
    71ec:	bx	lr

000071f0 <readstat_value_is_system_missing>:
    71f0:	sub	sp, sp, #16
    71f4:	add	ip, sp, #16
    71f8:	stmdb	ip, {r0, r1, r2, r3}
    71fc:	ldrb	r0, [sp, #13]
    7200:	and	r0, r0, #1
    7204:	add	sp, sp, #16
    7208:	bx	lr

0000720c <readstat_value_is_tagged_missing>:
    720c:	sub	sp, sp, #16
    7210:	add	ip, sp, #16
    7214:	stmdb	ip, {r0, r1, r2, r3}
    7218:	ldrb	r0, [sp, #13]
    721c:	lsr	r0, r0, #1
    7220:	and	r0, r0, #1
    7224:	add	sp, sp, #16
    7228:	bx	lr

0000722c <readstat_int8_value>:
    722c:	push	{r4, lr}
    7230:	sub	sp, sp, #24
    7234:	add	ip, sp, #8
    7238:	stm	ip, {r0, r1, r2, r3}
    723c:	ldm	ip, {r0, r1, r2, r3}
    7240:	ldr	r4, [sp, #16]
    7244:	bl	3f10 <readstat_value_is_system_missing@plt>
    7248:	cmp	r0, #0
    724c:	movne	r0, #0
    7250:	bne	726c <readstat_int8_value+0x40>
    7254:	cmp	r4, #5
    7258:	bne	7274 <readstat_int8_value+0x48>
    725c:	vldr	d7, [sp, #8]
    7260:	vcvt.u32.f64	s15, d7
    7264:	vstr	s15, [sp, #4]
    7268:	ldrb	r0, [sp, #4]
    726c:	add	sp, sp, #24
    7270:	pop	{r4, pc}
    7274:	cmp	r4, #4
    7278:	vldreq	s15, [sp, #8]
    727c:	vcvteq.u32.f32	s15, s15
    7280:	beq	7264 <readstat_int8_value+0x38>
    7284:	cmp	r4, #3
    7288:	bne	7294 <readstat_int8_value+0x68>
    728c:	ldrb	r0, [sp, #8]
    7290:	b	726c <readstat_int8_value+0x40>
    7294:	cmp	r4, #2
    7298:	beq	728c <readstat_int8_value+0x60>
    729c:	cmp	r4, #1
    72a0:	bne	726c <readstat_int8_value+0x40>
    72a4:	b	728c <readstat_int8_value+0x60>

000072a8 <readstat_int16_value>:
    72a8:	push	{r4, lr}
    72ac:	sub	sp, sp, #24
    72b0:	add	ip, sp, #8
    72b4:	stm	ip, {r0, r1, r2, r3}
    72b8:	ldm	ip, {r0, r1, r2, r3}
    72bc:	ldr	r4, [sp, #16]
    72c0:	bl	3f10 <readstat_value_is_system_missing@plt>
    72c4:	cmp	r0, #0
    72c8:	movne	r0, #0
    72cc:	bne	72e8 <readstat_int16_value+0x40>
    72d0:	cmp	r4, #5
    72d4:	bne	72f0 <readstat_int16_value+0x48>
    72d8:	vldr	d7, [sp, #8]
    72dc:	vcvt.s32.f64	s15, d7
    72e0:	vstr	s15, [sp, #4]
    72e4:	ldrsh	r0, [sp, #4]
    72e8:	add	sp, sp, #24
    72ec:	pop	{r4, pc}
    72f0:	cmp	r4, #4
    72f4:	vldreq	s15, [sp, #8]
    72f8:	vcvteq.s32.f32	s15, s15
    72fc:	beq	72e0 <readstat_int16_value+0x38>
    7300:	cmp	r4, #3
    7304:	bne	7310 <readstat_int16_value+0x68>
    7308:	ldrsh	r0, [sp, #8]
    730c:	b	72e8 <readstat_int16_value+0x40>
    7310:	cmp	r4, #2
    7314:	beq	7308 <readstat_int16_value+0x60>
    7318:	cmp	r4, #1
    731c:	ldrsbeq	r0, [sp, #8]
    7320:	b	72e8 <readstat_int16_value+0x40>

00007324 <readstat_int32_value>:
    7324:	push	{r0, r1, r2, r3, r4, lr}
    7328:	mov	r4, r2
    732c:	stm	sp, {r0, r1, r2, r3}
    7330:	ldm	sp, {r0, r1, r2, r3}
    7334:	bl	3f10 <readstat_value_is_system_missing@plt>
    7338:	cmp	r0, #0
    733c:	movne	r0, #0
    7340:	bne	7358 <readstat_int32_value+0x34>
    7344:	cmp	r4, #5
    7348:	bne	7360 <readstat_int32_value+0x3c>
    734c:	vldr	d7, [sp]
    7350:	vcvt.s32.f64	s15, d7
    7354:	vmov	r0, s15
    7358:	add	sp, sp, #16
    735c:	pop	{r4, pc}
    7360:	cmp	r4, #4
    7364:	vldreq	s15, [sp]
    7368:	vcvteq.s32.f32	s15, s15
    736c:	beq	7354 <readstat_int32_value+0x30>
    7370:	cmp	r4, #3
    7374:	ldreq	r0, [sp]
    7378:	beq	7358 <readstat_int32_value+0x34>
    737c:	cmp	r4, #2
    7380:	ldrsheq	r0, [sp]
    7384:	beq	7358 <readstat_int32_value+0x34>
    7388:	cmp	r4, #1
    738c:	ldrsbeq	r0, [sp]
    7390:	b	7358 <readstat_int32_value+0x34>

00007394 <readstat_float_value>:
    7394:	push	{r0, r1, r2, r3, r4, lr}
    7398:	mov	r4, r2
    739c:	stm	sp, {r0, r1, r2, r3}
    73a0:	ldm	sp, {r0, r1, r2, r3}
    73a4:	bl	3f10 <readstat_value_is_system_missing@plt>
    73a8:	cmp	r0, #0
    73ac:	bne	7408 <readstat_float_value+0x74>
    73b0:	cmp	r4, #5
    73b4:	vldreq	d0, [sp]
    73b8:	vcvteq.f32.f64	s0, d0
    73bc:	beq	73cc <readstat_float_value+0x38>
    73c0:	cmp	r4, #4
    73c4:	bne	73d4 <readstat_float_value+0x40>
    73c8:	vldr	s0, [sp]
    73cc:	add	sp, sp, #16
    73d0:	pop	{r4, pc}
    73d4:	cmp	r4, #3
    73d8:	vldreq	s15, [sp]
    73dc:	vcvteq.f32.s32	s0, s15
    73e0:	beq	73cc <readstat_float_value+0x38>
    73e4:	cmp	r4, #2
    73e8:	ldrsheq	r3, [sp]
    73ec:	beq	73fc <readstat_float_value+0x68>
    73f0:	cmp	r4, #1
    73f4:	bne	73c8 <readstat_float_value+0x34>
    73f8:	ldrsb	r3, [sp]
    73fc:	vmov	s0, r3
    7400:	vcvt.f32.s32	s0, s0
    7404:	b	73cc <readstat_float_value+0x38>
    7408:	vldr	s0, [pc]	; 7410 <readstat_float_value+0x7c>
    740c:	b	73cc <readstat_float_value+0x38>
    7410:	.word	0x7fc00000

00007414 <readstat_double_value>:
    7414:	push	{r0, r1, r2, r3, r4, lr}
    7418:	mov	r4, r2
    741c:	stm	sp, {r0, r1, r2, r3}
    7420:	ldm	sp, {r0, r1, r2, r3}
    7424:	bl	3f10 <readstat_value_is_system_missing@plt>
    7428:	cmp	r0, #0
    742c:	bne	7484 <readstat_double_value+0x70>
    7430:	cmp	r4, #5
    7434:	vldreq	d0, [sp]
    7438:	beq	747c <readstat_double_value+0x68>
    743c:	cmp	r4, #4
    7440:	vldreq	s0, [sp]
    7444:	vcvteq.f64.f32	d0, s0
    7448:	beq	747c <readstat_double_value+0x68>
    744c:	cmp	r4, #3
    7450:	vldreq	s15, [sp]
    7454:	vcvteq.f64.s32	d0, s15
    7458:	beq	747c <readstat_double_value+0x68>
    745c:	cmp	r4, #2
    7460:	ldrsheq	r3, [sp]
    7464:	beq	7474 <readstat_double_value+0x60>
    7468:	cmp	r4, #1
    746c:	bne	7484 <readstat_double_value+0x70>
    7470:	ldrsb	r3, [sp]
    7474:	vmov	s0, r3
    7478:	vcvt.f64.s32	d0, s0
    747c:	add	sp, sp, #16
    7480:	pop	{r4, pc}
    7484:	vldr	d0, [pc, #4]	; 7490 <readstat_double_value+0x7c>
    7488:	b	747c <readstat_double_value+0x68>
    748c:	nop			; (mov r0, r0)
    7490:	.word	0x00000000
    7494:	.word	0x7ff80000

00007498 <readstat_string_value>:
    7498:	push	{r0, r1, r2, r3, r4, lr}
    749c:	stm	sp, {r0, r1, r2, r3}
    74a0:	ldm	sp, {r0, r1, r2, r3}
    74a4:	bl	4390 <readstat_value_type@plt>
    74a8:	cmp	r0, #0
    74ac:	movne	r0, #0
    74b0:	ldreq	r0, [sp]
    74b4:	add	sp, sp, #20
    74b8:	pop	{pc}		; (ldr pc, [sp], #4)

000074bc <readstat_value_is_defined_missing>:
    74bc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    74c0:	vpush	{d8-d9}
    74c4:	sub	sp, sp, #80	; 0x50
    74c8:	stm	sp, {r0, r1, r2, r3}
    74cc:	ldm	sp, {r0, r1, r2, r3}
    74d0:	bl	412c <readstat_value_type_class@plt>
    74d4:	mov	r5, r0
    74d8:	ldr	r0, [sp, #128]	; 0x80
    74dc:	bl	4594 <readstat_variable_get_type_class@plt>
    74e0:	cmp	r5, r0
    74e4:	beq	74f8 <readstat_value_is_defined_missing+0x3c>
    74e8:	mov	r0, #0
    74ec:	add	sp, sp, #80	; 0x50
    74f0:	vpop	{d8-d9}
    74f4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    74f8:	ldm	sp, {r0, r1, r2, r3}
    74fc:	bl	412c <readstat_value_type_class@plt>
    7500:	subs	r5, r0, #0
    7504:	ldm	sp, {r0, r1, r2, r3}
    7508:	bne	75b4 <readstat_value_is_defined_missing+0xf8>
    750c:	bl	3ff4 <readstat_string_value@plt>
    7510:	subs	r7, r0, #0
    7514:	beq	74e8 <readstat_value_is_defined_missing+0x2c>
    7518:	ldr	r0, [sp, #128]	; 0x80
    751c:	bl	4354 <readstat_variable_get_missing_ranges_count@plt>
    7520:	mov	r4, r5
    7524:	add	r6, sp, #16
    7528:	add	r5, sp, #32
    752c:	mov	sl, r0
    7530:	cmp	sl, r4
    7534:	ble	74e8 <readstat_value_is_defined_missing+0x2c>
    7538:	mov	r2, r4
    753c:	ldr	r1, [sp, #128]	; 0x80
    7540:	mov	r0, r5
    7544:	bl	3f88 <readstat_variable_get_missing_range_lo@plt>
    7548:	ldm	r5, {r0, r1, r2, r3}
    754c:	bl	3ff4 <readstat_string_value@plt>
    7550:	mov	r2, r4
    7554:	ldr	r1, [sp, #128]	; 0x80
    7558:	mov	r9, r0
    755c:	mov	r0, r6
    7560:	bl	4378 <readstat_variable_get_missing_range_hi@plt>
    7564:	ldm	r6, {r0, r1, r2, r3}
    7568:	bl	3ff4 <readstat_string_value@plt>
    756c:	cmp	r9, #0
    7570:	cmpne	r0, #0
    7574:	mov	r8, r0
    7578:	beq	75ac <readstat_value_is_defined_missing+0xf0>
    757c:	mov	r1, r9
    7580:	mov	r0, r7
    7584:	bl	3e44 <strcmp@plt>
    7588:	cmp	r0, #0
    758c:	blt	75ac <readstat_value_is_defined_missing+0xf0>
    7590:	mov	r1, r8
    7594:	mov	r0, r7
    7598:	bl	3e44 <strcmp@plt>
    759c:	cmp	r0, #0
    75a0:	bgt	75ac <readstat_value_is_defined_missing+0xf0>
    75a4:	mov	r0, #1
    75a8:	b	74ec <readstat_value_is_defined_missing+0x30>
    75ac:	add	r4, r4, #1
    75b0:	b	7530 <readstat_value_is_defined_missing+0x74>
    75b4:	bl	412c <readstat_value_type_class@plt>
    75b8:	cmp	r0, #1
    75bc:	bne	74e8 <readstat_value_is_defined_missing+0x2c>
    75c0:	ldm	sp, {r0, r1, r2, r3}
    75c4:	bl	4204 <readstat_double_value@plt>
    75c8:	ldr	r0, [sp, #128]	; 0x80
    75cc:	mov	r4, #0
    75d0:	add	r5, sp, #64	; 0x40
    75d4:	add	r6, sp, #48	; 0x30
    75d8:	vmov.f64	d8, d0
    75dc:	bl	4354 <readstat_variable_get_missing_ranges_count@plt>
    75e0:	mov	r7, r0
    75e4:	cmp	r7, r4
    75e8:	ble	74e8 <readstat_value_is_defined_missing+0x2c>
    75ec:	mov	r2, r4
    75f0:	ldr	r1, [sp, #128]	; 0x80
    75f4:	mov	r0, r5
    75f8:	bl	3f88 <readstat_variable_get_missing_range_lo@plt>
    75fc:	ldm	r5, {r0, r1, r2, r3}
    7600:	bl	4204 <readstat_double_value@plt>
    7604:	mov	r2, r4
    7608:	ldr	r1, [sp, #128]	; 0x80
    760c:	mov	r0, r6
    7610:	vmov.f64	d9, d0
    7614:	bl	4378 <readstat_variable_get_missing_range_hi@plt>
    7618:	ldm	r6, {r0, r1, r2, r3}
    761c:	bl	4204 <readstat_double_value@plt>
    7620:	vcmpe.f64	d8, d9
    7624:	vmrs	APSR_nzcv, fpscr
    7628:	blt	7638 <readstat_value_is_defined_missing+0x17c>
    762c:	vcmpe.f64	d8, d0
    7630:	vmrs	APSR_nzcv, fpscr
    7634:	bls	75a4 <readstat_value_is_defined_missing+0xe8>
    7638:	add	r4, r4, #1
    763c:	b	75e4 <readstat_value_is_defined_missing+0x128>

00007640 <readstat_value_is_missing>:
    7640:	sub	sp, sp, #16
    7644:	stm	sp, {r0, r1, r2, r3}
    7648:	ldrb	r3, [sp, #13]
    764c:	ldr	r0, [sp, #16]
    7650:	tst	r3, #3
    7654:	bne	766c <readstat_value_is_missing+0x2c>
    7658:	cmp	r0, #0
    765c:	beq	7670 <readstat_value_is_missing+0x30>
    7660:	ldm	sp, {r0, r1, r2, r3}
    7664:	add	sp, sp, #16
    7668:	b	3f34 <readstat_value_is_defined_missing@plt>
    766c:	mov	r0, #1
    7670:	add	sp, sp, #16
    7674:	bx	lr

00007678 <make_blank_value>:
    7678:	push	{r4, lr}
    767c:	mov	r2, #16
    7680:	mov	r1, #0
    7684:	mov	r4, r0
    7688:	bl	42e8 <memset@plt>
    768c:	ldr	r3, [pc, #28]	; 76b0 <make_blank_value+0x38>
    7690:	mov	r2, #0
    7694:	mov	r0, r4
    7698:	strd	r2, [r4]
    769c:	mov	r3, #5
    76a0:	str	r3, [r4, #8]
    76a4:	mov	r3, #1
    76a8:	strb	r3, [r4, #13]
    76ac:	pop	{r4, pc}
    76b0:	.word	0x7ff80000

000076b4 <make_double_value>:
    76b4:	push	{r4, lr}
    76b8:	vpush	{d8}
    76bc:	vmov.f64	d8, d0
    76c0:	mov	r4, r0
    76c4:	mov	r2, #16
    76c8:	mov	r1, #0
    76cc:	bl	42e8 <memset@plt>
    76d0:	vstr	d8, [r4]
    76d4:	vpop	{d8}
    76d8:	mov	r3, #5
    76dc:	mov	r0, r4
    76e0:	str	r3, [r4, #8]
    76e4:	pop	{r4, pc}

000076e8 <make_string_value>:
    76e8:	push	{r4, r5, r6, lr}
    76ec:	mov	r4, r0
    76f0:	mov	r5, r1
    76f4:	mov	r2, #16
    76f8:	mov	r1, #0
    76fc:	bl	42e8 <memset@plt>
    7700:	str	r5, [r4]
    7704:	mov	r0, r4
    7708:	pop	{r4, r5, r6, pc}

0000770c <readstat_variable_get_name>:
    770c:	ldrb	r3, [r0, #8]
    7710:	cmp	r3, #0
    7714:	addne	r0, r0, #8
    7718:	moveq	r0, r3
    771c:	bx	lr

00007720 <readstat_variable_get_label>:
    7720:	ldrb	r3, [r0, #564]	; 0x234
    7724:	cmp	r3, #0
    7728:	addne	r0, r0, #564	; 0x234
    772c:	moveq	r0, r3
    7730:	bx	lr

00007734 <readstat_variable_get_format>:
    7734:	ldrb	r3, [r0, #308]	; 0x134
    7738:	cmp	r3, #0
    773c:	addne	r0, r0, #308	; 0x134
    7740:	moveq	r0, r3
    7744:	bx	lr

00007748 <readstat_variable_get_type>:
    7748:	ldr	r0, [r0]
    774c:	bx	lr

00007750 <readstat_variable_get_type_class>:
    7750:	ldr	r0, [r0]
    7754:	b	3e68 <readstat_type_class@plt>

00007758 <readstat_variable_get_index>:
    7758:	ldr	r0, [r0, #4]
    775c:	bx	lr

00007760 <readstat_variable_get_index_after_skipping>:
    7760:	ldr	r0, [r0, #2148]	; 0x864
    7764:	bx	lr

00007768 <readstat_variable_get_storage_width>:
    7768:	ldr	r0, [r0, #1596]	; 0x63c
    776c:	bx	lr

00007770 <readstat_variable_get_measure>:
    7770:	ldr	r0, [r0, #2128]	; 0x850
    7774:	bx	lr

00007778 <readstat_variable_get_alignment>:
    7778:	ldr	r0, [r0, #2132]	; 0x854
    777c:	bx	lr

00007780 <readstat_variable_get_display_width>:
    7780:	ldr	r0, [r0, #2136]	; 0x858
    7784:	bx	lr

00007788 <readstat_variable_get_missing_ranges_count>:
    7788:	ldr	r0, [r0, #2120]	; 0x848
    778c:	bx	lr

00007790 <readstat_variable_get_missing_range_lo>:
    7790:	ldr	r3, [r1, #2120]	; 0x848
    7794:	push	{r4, lr}
    7798:	cmp	r3, r2
    779c:	mov	r4, r0
    77a0:	ble	77d0 <readstat_variable_get_missing_range_lo+0x40>
    77a4:	lsl	r3, r2, #1
    77a8:	add	r3, r3, #1
    77ac:	cmp	r3, #31
    77b0:	bhi	77d0 <readstat_variable_get_missing_range_lo+0x40>
    77b4:	add	r2, r1, r2, lsl #5
    77b8:	add	r2, r2, #1600	; 0x640
    77bc:	add	r2, r2, #8
    77c0:	ldm	r2, {r0, r1, r2, r3}
    77c4:	stm	r4, {r0, r1, r2, r3}
    77c8:	mov	r0, r4
    77cc:	pop	{r4, pc}
    77d0:	mov	r0, r4
    77d4:	bl	7678 <make_blank_value>
    77d8:	b	77c8 <readstat_variable_get_missing_range_lo+0x38>

000077dc <readstat_variable_get_missing_range_hi>:
    77dc:	ldr	r3, [r1, #2120]	; 0x848
    77e0:	push	{r4, lr}
    77e4:	cmp	r3, r2
    77e8:	mov	r4, r0
    77ec:	ble	781c <readstat_variable_get_missing_range_hi+0x40>
    77f0:	lsl	r2, r2, #1
    77f4:	add	r2, r2, #1
    77f8:	cmp	r2, #31
    77fc:	bhi	781c <readstat_variable_get_missing_range_hi+0x40>
    7800:	add	r1, r1, r2, lsl #4
    7804:	add	r1, r1, #1600	; 0x640
    7808:	add	r1, r1, #8
    780c:	ldm	r1, {r0, r1, r2, r3}
    7810:	stm	r4, {r0, r1, r2, r3}
    7814:	mov	r0, r4
    7818:	pop	{r4, pc}
    781c:	mov	r0, r4
    7820:	bl	7678 <make_blank_value>
    7824:	b	7814 <readstat_variable_get_missing_range_hi+0x38>

00007828 <readstat_variable_add_missing_double_range>:
    7828:	push	{r4, r5, r6, r7, lr}
    782c:	vpush	{d8}
    7830:	vmov.f64	d8, d1
    7834:	mov	r5, r0
    7838:	sub	sp, sp, #68	; 0x44
    783c:	mov	r0, sp
    7840:	add	r7, sp, #16
    7844:	bl	76b4 <make_double_value>
    7848:	vmov.f64	d0, d8
    784c:	mov	r0, r7
    7850:	bl	76b4 <make_double_value>
    7854:	ldm	sp, {r0, r1, r2, r3}
    7858:	add	r6, sp, #32
    785c:	add	r4, sp, #48	; 0x30
    7860:	stm	r6, {r0, r1, r2, r3}
    7864:	ldm	r7, {r0, r1, r2, r3}
    7868:	stm	r4, {r0, r1, r2, r3}
    786c:	mov	r0, r5
    7870:	bl	4354 <readstat_variable_get_missing_ranges_count@plt>
    7874:	lsl	ip, r0, #1
    7878:	cmp	ip, #31
    787c:	movhi	r0, #31
    7880:	bhi	78bc <readstat_variable_add_missing_double_range+0x94>
    7884:	add	lr, r5, r0, lsl #5
    7888:	ldm	r6, {r0, r1, r2, r3}
    788c:	add	lr, lr, #1600	; 0x640
    7890:	add	lr, lr, #8
    7894:	add	ip, r5, ip, lsl #4
    7898:	stm	lr, {r0, r1, r2, r3}
    789c:	add	ip, ip, #1616	; 0x650
    78a0:	ldm	r4, {r0, r1, r2, r3}
    78a4:	add	ip, ip, #8
    78a8:	stm	ip, {r0, r1, r2, r3}
    78ac:	mov	r0, #0
    78b0:	ldr	r3, [r5, #2120]	; 0x848
    78b4:	add	r3, r3, #1
    78b8:	str	r3, [r5, #2120]	; 0x848
    78bc:	add	sp, sp, #68	; 0x44
    78c0:	vpop	{d8}
    78c4:	pop	{r4, r5, r6, r7, pc}

000078c8 <readstat_variable_add_missing_double_value>:
    78c8:	push	{r4, r5, r6, r7, lr}
    78cc:	vpush	{d8}
    78d0:	vmov.f64	d8, d0
    78d4:	mov	r5, r0
    78d8:	sub	sp, sp, #68	; 0x44
    78dc:	mov	r0, sp
    78e0:	add	r7, sp, #16
    78e4:	bl	76b4 <make_double_value>
    78e8:	vmov.f64	d0, d8
    78ec:	mov	r0, r7
    78f0:	bl	76b4 <make_double_value>
    78f4:	ldm	sp, {r0, r1, r2, r3}
    78f8:	add	r6, sp, #32
    78fc:	add	r4, sp, #48	; 0x30
    7900:	stm	r6, {r0, r1, r2, r3}
    7904:	ldm	r7, {r0, r1, r2, r3}
    7908:	stm	r4, {r0, r1, r2, r3}
    790c:	mov	r0, r5
    7910:	bl	4354 <readstat_variable_get_missing_ranges_count@plt>
    7914:	lsl	ip, r0, #1
    7918:	cmp	ip, #31
    791c:	movhi	r0, #31
    7920:	bhi	795c <readstat_variable_add_missing_double_value+0x94>
    7924:	add	lr, r5, r0, lsl #5
    7928:	ldm	r6, {r0, r1, r2, r3}
    792c:	add	lr, lr, #1600	; 0x640
    7930:	add	lr, lr, #8
    7934:	add	ip, r5, ip, lsl #4
    7938:	stm	lr, {r0, r1, r2, r3}
    793c:	add	ip, ip, #1616	; 0x650
    7940:	ldm	r4, {r0, r1, r2, r3}
    7944:	add	ip, ip, #8
    7948:	stm	ip, {r0, r1, r2, r3}
    794c:	mov	r0, #0
    7950:	ldr	r3, [r5, #2120]	; 0x848
    7954:	add	r3, r3, #1
    7958:	str	r3, [r5, #2120]	; 0x848
    795c:	add	sp, sp, #68	; 0x44
    7960:	vpop	{d8}
    7964:	pop	{r4, r5, r6, r7, pc}

00007968 <readstat_variable_add_missing_string_range>:
    7968:	push	{r4, r5, r6, r7, lr}
    796c:	sub	sp, sp, #68	; 0x44
    7970:	mov	r6, r2
    7974:	mov	r5, r0
    7978:	add	r7, sp, #16
    797c:	mov	r0, sp
    7980:	bl	76e8 <make_string_value>
    7984:	mov	r1, r6
    7988:	mov	r0, r7
    798c:	bl	76e8 <make_string_value>
    7990:	ldm	sp, {r0, r1, r2, r3}
    7994:	add	r6, sp, #32
    7998:	add	r4, sp, #48	; 0x30
    799c:	stm	r6, {r0, r1, r2, r3}
    79a0:	ldm	r7, {r0, r1, r2, r3}
    79a4:	stm	r4, {r0, r1, r2, r3}
    79a8:	mov	r0, r5
    79ac:	bl	4354 <readstat_variable_get_missing_ranges_count@plt>
    79b0:	lsl	ip, r0, #1
    79b4:	cmp	ip, #31
    79b8:	movhi	r0, #31
    79bc:	bhi	79f8 <readstat_variable_add_missing_string_range+0x90>
    79c0:	add	lr, r5, r0, lsl #5
    79c4:	ldm	r6, {r0, r1, r2, r3}
    79c8:	add	lr, lr, #1600	; 0x640
    79cc:	add	lr, lr, #8
    79d0:	add	ip, r5, ip, lsl #4
    79d4:	stm	lr, {r0, r1, r2, r3}
    79d8:	add	ip, ip, #1616	; 0x650
    79dc:	ldm	r4, {r0, r1, r2, r3}
    79e0:	add	ip, ip, #8
    79e4:	stm	ip, {r0, r1, r2, r3}
    79e8:	mov	r0, #0
    79ec:	ldr	r3, [r5, #2120]	; 0x848
    79f0:	add	r3, r3, #1
    79f4:	str	r3, [r5, #2120]	; 0x848
    79f8:	add	sp, sp, #68	; 0x44
    79fc:	pop	{r4, r5, r6, r7, pc}

00007a00 <readstat_variable_add_missing_string_value>:
    7a00:	push	{r4, r5, r6, r7, lr}
    7a04:	sub	sp, sp, #68	; 0x44
    7a08:	mov	r6, r1
    7a0c:	mov	r5, r0
    7a10:	add	r7, sp, #16
    7a14:	mov	r0, sp
    7a18:	bl	76e8 <make_string_value>
    7a1c:	mov	r1, r6
    7a20:	mov	r0, r7
    7a24:	bl	76e8 <make_string_value>
    7a28:	ldm	sp, {r0, r1, r2, r3}
    7a2c:	add	r6, sp, #32
    7a30:	add	r4, sp, #48	; 0x30
    7a34:	stm	r6, {r0, r1, r2, r3}
    7a38:	ldm	r7, {r0, r1, r2, r3}
    7a3c:	stm	r4, {r0, r1, r2, r3}
    7a40:	mov	r0, r5
    7a44:	bl	4354 <readstat_variable_get_missing_ranges_count@plt>
    7a48:	lsl	ip, r0, #1
    7a4c:	cmp	ip, #31
    7a50:	movhi	r0, #31
    7a54:	bhi	7a90 <readstat_variable_add_missing_string_value+0x90>
    7a58:	add	lr, r5, r0, lsl #5
    7a5c:	ldm	r6, {r0, r1, r2, r3}
    7a60:	add	lr, lr, #1600	; 0x640
    7a64:	add	lr, lr, #8
    7a68:	add	ip, r5, ip, lsl #4
    7a6c:	stm	lr, {r0, r1, r2, r3}
    7a70:	add	ip, ip, #1616	; 0x650
    7a74:	ldm	r4, {r0, r1, r2, r3}
    7a78:	add	ip, ip, #8
    7a7c:	stm	ip, {r0, r1, r2, r3}
    7a80:	mov	r0, #0
    7a84:	ldr	r3, [r5, #2120]	; 0x848
    7a88:	add	r3, r3, #1
    7a8c:	str	r3, [r5, #2120]	; 0x848
    7a90:	add	sp, sp, #68	; 0x44
    7a94:	pop	{r4, r5, r6, r7, pc}

00007a98 <readstat_compare_string_refs>:
    7a98:	ldr	ip, [r1]
    7a9c:	push	{lr}		; (str lr, [sp, #-4]!)
    7aa0:	ldr	lr, [r0]
    7aa4:	ldrd	r2, [ip]
    7aa8:	ldrd	r0, [lr]
    7aac:	cmp	r1, r3
    7ab0:	cmpeq	r0, r2
    7ab4:	ldreq	r0, [lr, #8]
    7ab8:	ldreq	r3, [ip, #8]
    7abc:	subeq	r0, r0, r3
    7ac0:	subne	r0, r0, r2
    7ac4:	pop	{pc}		; (ldr pc, [sp], #4)

00007ac8 <readstat_add_value_label>:
    7ac8:	push	{r4, r5, r6, lr}
    7acc:	mov	r5, r1
    7ad0:	ldr	r3, [r0, #268]	; 0x10c
    7ad4:	ldr	r1, [r0, #264]	; 0x108
    7ad8:	mov	r4, r0
    7adc:	cmp	r1, r3
    7ae0:	bne	7afc <readstat_add_value_label+0x34>
    7ae4:	lsl	r3, r1, #1
    7ae8:	str	r3, [r0, #268]	; 0x10c
    7aec:	lsl	r1, r1, #6
    7af0:	ldr	r0, [r0, #260]	; 0x104
    7af4:	bl	403c <realloc@plt>
    7af8:	str	r0, [r4, #260]	; 0x104
    7afc:	ldr	r2, [r4, #264]	; 0x108
    7b00:	ldr	r3, [r4, #260]	; 0x104
    7b04:	add	r1, r2, #1
    7b08:	str	r1, [r4, #264]	; 0x108
    7b0c:	add	r4, r3, r2, lsl #5
    7b10:	mov	r1, #0
    7b14:	mov	r2, #32
    7b18:	mov	r0, r4
    7b1c:	bl	42e8 <memset@plt>
    7b20:	cmp	r5, #0
    7b24:	beq	7b58 <readstat_add_value_label+0x90>
    7b28:	ldrb	r3, [r5]
    7b2c:	cmp	r3, #0
    7b30:	beq	7b58 <readstat_add_value_label+0x90>
    7b34:	mov	r0, r5
    7b38:	bl	424c <strlen@plt>
    7b3c:	str	r0, [r4, #28]
    7b40:	mov	r6, r0
    7b44:	bl	415c <malloc@plt>
    7b48:	mov	r2, r6
    7b4c:	mov	r1, r5
    7b50:	str	r0, [r4, #24]
    7b54:	bl	3f64 <memcpy@plt>
    7b58:	mov	r0, r4
    7b5c:	pop	{r4, r5, r6, pc}

00007b60 <readstat_string_ref_init>:
    7b60:	push	{r4, r5, r6, lr}
    7b64:	mov	r6, r0
    7b68:	bl	424c <strlen@plt>
    7b6c:	add	r5, r0, #1
    7b70:	add	r1, r0, #25
    7b74:	mov	r0, #1
    7b78:	bl	3d9c <calloc@plt>
    7b7c:	mvn	r3, #0
    7b80:	mvn	r2, #0
    7b84:	mov	r1, r6
    7b88:	strd	r2, [r0, #8]
    7b8c:	strd	r2, [r0]
    7b90:	mov	r4, r0
    7b94:	str	r5, [r0, #16]
    7b98:	mov	r2, r5
    7b9c:	add	r0, r0, #20
    7ba0:	bl	3f64 <memcpy@plt>
    7ba4:	mov	r0, r4
    7ba8:	pop	{r4, r5, r6, pc}

00007bac <readstat_writer_init>:
    7bac:	push	{r4, r5, r6, lr}
    7bb0:	mov	r1, #312	; 0x138
    7bb4:	mov	r0, #1
    7bb8:	bl	3d9c <calloc@plt>
    7bbc:	mov	r1, #4
    7bc0:	mov	r5, #50	; 0x32
    7bc4:	mov	r4, r0
    7bc8:	mov	r0, #50	; 0x32
    7bcc:	bl	3d9c <calloc@plt>
    7bd0:	mov	r1, #4
    7bd4:	str	r5, [r4, #32]
    7bd8:	str	r0, [r4, #24]
    7bdc:	mov	r0, r5
    7be0:	bl	3d9c <calloc@plt>
    7be4:	mov	r1, #4
    7be8:	str	r5, [r4, #44]	; 0x2c
    7bec:	str	r0, [r4, #36]	; 0x24
    7bf0:	mov	r0, r5
    7bf4:	bl	3d9c <calloc@plt>
    7bf8:	mov	r1, #4
    7bfc:	str	r5, [r4, #56]	; 0x38
    7c00:	str	r0, [r4, #48]	; 0x30
    7c04:	mov	r0, #100	; 0x64
    7c08:	bl	3d9c <calloc@plt>
    7c0c:	mov	r3, #100	; 0x64
    7c10:	str	r3, [r4, #68]	; 0x44
    7c14:	str	r0, [r4, #60]	; 0x3c
    7c18:	mov	r0, #0
    7c1c:	bl	3fa0 <time@plt>
    7c20:	mov	r3, #1
    7c24:	str	r3, [r4, #12]
    7c28:	ldr	r3, [pc, #16]	; 7c40 <readstat_writer_init+0x94>
    7c2c:	add	r3, pc, r3
    7c30:	str	r3, [r4, #280]	; 0x118
    7c34:	str	r0, [r4, #20]
    7c38:	mov	r0, r4
    7c3c:	pop	{r4, r5, r6, pc}
    7c40:	.word	0x000000b4

00007c44 <readstat_validate_variable>:
    7c44:	ldr	r2, [r0, #308]	; 0x134
    7c48:	cmp	r2, #0
    7c4c:	beq	7c64 <readstat_validate_variable+0x20>
    7c50:	ldr	r3, [r0, #232]	; 0xe8
    7c54:	cmp	r3, #0
    7c58:	beq	7c6c <readstat_validate_variable+0x28>
    7c5c:	mov	r0, r1
    7c60:	bx	r3
    7c64:	mov	r0, #14
    7c68:	bx	lr
    7c6c:	mov	r0, r3
    7c70:	bx	lr

00007c74 <readstat_validate_metadata>:
    7c74:	ldr	r2, [r0, #308]	; 0x134
    7c78:	cmp	r2, #0
    7c7c:	beq	7c90 <readstat_validate_metadata+0x1c>
    7c80:	ldr	r3, [r0, #292]	; 0x124
    7c84:	cmp	r3, #0
    7c88:	beq	7c98 <readstat_validate_metadata+0x24>
    7c8c:	bx	r3
    7c90:	mov	r0, #14
    7c94:	bx	lr
    7c98:	mov	r0, r3
    7c9c:	bx	lr

00007ca0 <readstat_set_data_writer>:
    7ca0:	str	r1, [r0]
    7ca4:	mov	r0, #0
    7ca8:	bx	lr

00007cac <readstat_write_bytes>:
    7cac:	push	{r4, r5, r6, lr}
    7cb0:	mov	r4, r0
    7cb4:	mov	r5, r2
    7cb8:	ldr	r3, [r4]
    7cbc:	mov	r0, r1
    7cc0:	ldr	r2, [r4, #304]	; 0x130
    7cc4:	mov	r1, r5
    7cc8:	blx	r3
    7ccc:	cmp	r5, r0
    7cd0:	ldrls	r3, [r4, #4]
    7cd4:	addls	r0, r3, r0
    7cd8:	strls	r0, [r4, #4]
    7cdc:	movls	r0, #0
    7ce0:	movhi	r0, #13
    7ce4:	pop	{r4, r5, r6, pc}

00007ce8 <readstat_write_row_default_callback>:
    7ce8:	b	44a4 <readstat_write_bytes@plt>

00007cec <readstat_write_bytes_as_lines>:
    7cec:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7cf0:	mov	r5, r0
    7cf4:	ldr	r0, [sp, #40]	; 0x28
    7cf8:	mov	r7, r3
    7cfc:	mov	sl, r1
    7d00:	mov	r6, r2
    7d04:	bl	424c <strlen@plt>
    7d08:	mov	r4, #0
    7d0c:	mov	r8, r0
    7d10:	add	r9, r0, r7
    7d14:	cmp	r4, r6
    7d18:	bcc	7d24 <readstat_write_bytes_as_lines+0x38>
    7d1c:	mov	r0, #0
    7d20:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7d24:	mov	r1, r9
    7d28:	ldr	r0, [r5, #4]
    7d2c:	bl	20808 <__aeabi_uidivmod>
    7d30:	sub	r2, r6, r4
    7d34:	sub	fp, r7, r1
    7d38:	cmp	fp, r2
    7d3c:	add	r1, sl, r4
    7d40:	bls	7d88 <readstat_write_bytes_as_lines+0x9c>
    7d44:	mov	r0, r5
    7d48:	bl	44a4 <readstat_write_bytes@plt>
    7d4c:	mov	r4, r6
    7d50:	cmp	r0, #0
    7d54:	popne	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7d58:	mov	r1, r9
    7d5c:	ldr	r0, [r5, #4]
    7d60:	bl	20808 <__aeabi_uidivmod>
    7d64:	cmp	r7, r1
    7d68:	bne	7d14 <readstat_write_bytes_as_lines+0x28>
    7d6c:	mov	r2, r8
    7d70:	ldr	r1, [sp, #40]	; 0x28
    7d74:	mov	r0, r5
    7d78:	bl	44a4 <readstat_write_bytes@plt>
    7d7c:	cmp	r0, #0
    7d80:	beq	7d14 <readstat_write_bytes_as_lines+0x28>
    7d84:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7d88:	mov	r2, fp
    7d8c:	mov	r0, r5
    7d90:	bl	44a4 <readstat_write_bytes@plt>
    7d94:	add	r4, r4, fp
    7d98:	b	7d50 <readstat_write_bytes_as_lines+0x64>

00007d9c <readstat_write_line_padding>:
    7d9c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    7da0:	mov	r5, r0
    7da4:	mov	r0, r3
    7da8:	mov	r4, r2
    7dac:	mov	r9, r1
    7db0:	mov	r7, r3
    7db4:	bl	424c <strlen@plt>
    7db8:	add	r1, r0, r4
    7dbc:	mov	r8, r0
    7dc0:	ldr	r0, [r5, #4]
    7dc4:	bl	20808 <__aeabi_uidivmod>
    7dc8:	cmp	r1, #0
    7dcc:	beq	7e1c <readstat_write_line_padding+0x80>
    7dd0:	sub	r4, r4, r1
    7dd4:	mov	r0, r4
    7dd8:	bl	415c <malloc@plt>
    7ddc:	mov	r2, r4
    7de0:	mov	r1, r9
    7de4:	mov	r6, r0
    7de8:	bl	42e8 <memset@plt>
    7dec:	mov	r2, r4
    7df0:	mov	r1, r6
    7df4:	mov	r0, r5
    7df8:	bl	44a4 <readstat_write_bytes@plt>
    7dfc:	cmp	r0, #0
    7e00:	bne	7e14 <readstat_write_line_padding+0x78>
    7e04:	mov	r2, r8
    7e08:	mov	r1, r7
    7e0c:	mov	r0, r5
    7e10:	bl	44a4 <readstat_write_bytes@plt>
    7e14:	mov	r0, r6
    7e18:	bl	3f04 <free@plt>
    7e1c:	mov	r0, #0
    7e20:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00007e24 <readstat_write_string>:
    7e24:	push	{r4, r5, r6, lr}
    7e28:	mov	r5, r0
    7e2c:	mov	r0, r1
    7e30:	mov	r4, r1
    7e34:	bl	424c <strlen@plt>
    7e38:	mov	r1, r4
    7e3c:	mov	r2, r0
    7e40:	mov	r0, r5
    7e44:	pop	{r4, r5, r6, lr}
    7e48:	b	44a4 <readstat_write_bytes@plt>

00007e4c <readstat_write_zeros>:
    7e4c:	push	{r4, r5, fp, lr}
    7e50:	subs	r4, r1, #0
    7e54:	add	fp, sp, #12
    7e58:	moveq	r0, r4
    7e5c:	beq	7e90 <readstat_write_zeros+0x44>
    7e60:	add	r3, r4, #7
    7e64:	bic	r3, r3, #7
    7e68:	sub	sp, sp, r3
    7e6c:	mov	r5, r0
    7e70:	mov	r2, r4
    7e74:	mov	r1, #0
    7e78:	mov	r0, sp
    7e7c:	bl	42e8 <memset@plt>
    7e80:	mov	r2, r4
    7e84:	mov	r1, sp
    7e88:	mov	r0, r5
    7e8c:	bl	44a4 <readstat_write_bytes@plt>
    7e90:	sub	sp, fp, #12
    7e94:	pop	{r4, r5, fp, pc}

00007e98 <readstat_write_spaces>:
    7e98:	push	{r4, r5, fp, lr}
    7e9c:	subs	r4, r1, #0
    7ea0:	add	fp, sp, #12
    7ea4:	moveq	r0, r4
    7ea8:	beq	7edc <readstat_write_spaces+0x44>
    7eac:	add	r3, r4, #7
    7eb0:	bic	r3, r3, #7
    7eb4:	sub	sp, sp, r3
    7eb8:	mov	r5, r0
    7ebc:	mov	r2, r4
    7ec0:	mov	r1, #32
    7ec4:	mov	r0, sp
    7ec8:	bl	42e8 <memset@plt>
    7ecc:	mov	r2, r4
    7ed0:	mov	r1, sp
    7ed4:	mov	r0, r5
    7ed8:	bl	44a4 <readstat_write_bytes@plt>
    7edc:	sub	sp, fp, #12
    7ee0:	pop	{r4, r5, fp, pc}

00007ee4 <readstat_write_space_padded_string>:
    7ee4:	push	{r4, r5, r6, r7, r8, lr}
    7ee8:	subs	r6, r1, #0
    7eec:	beq	7efc <readstat_write_space_padded_string+0x18>
    7ef0:	ldrb	r3, [r6]
    7ef4:	cmp	r3, #0
    7ef8:	bne	7f08 <readstat_write_space_padded_string+0x24>
    7efc:	mov	r1, r2
    7f00:	pop	{r4, r5, r6, r7, r8, lr}
    7f04:	b	3e20 <readstat_write_spaces@plt>
    7f08:	mov	r5, r0
    7f0c:	mov	r0, r6
    7f10:	mov	r4, r2
    7f14:	bl	424c <strlen@plt>
    7f18:	mov	r1, r6
    7f1c:	cmp	r0, r4
    7f20:	movcc	r7, r0
    7f24:	movcs	r7, r4
    7f28:	mov	r2, r7
    7f2c:	mov	r0, r5
    7f30:	bl	44a4 <readstat_write_bytes@plt>
    7f34:	cmp	r0, #0
    7f38:	popne	{r4, r5, r6, r7, r8, pc}
    7f3c:	sub	r1, r4, r7
    7f40:	mov	r0, r5
    7f44:	b	7f00 <readstat_write_space_padded_string+0x1c>

00007f48 <readstat_add_label_set>:
    7f48:	push	{r4, r5, r6, r7, r8, lr}
    7f4c:	mov	r7, r1
    7f50:	ldr	r3, [r0, #44]	; 0x2c
    7f54:	ldr	r1, [r0, #40]	; 0x28
    7f58:	mov	r4, r0
    7f5c:	cmp	r1, r3
    7f60:	mov	r6, r2
    7f64:	bne	7f80 <readstat_add_label_set+0x38>
    7f68:	lsl	r3, r1, #1
    7f6c:	str	r3, [r0, #44]	; 0x2c
    7f70:	lsl	r1, r1, #3
    7f74:	ldr	r0, [r0, #36]	; 0x24
    7f78:	bl	403c <realloc@plt>
    7f7c:	str	r0, [r4, #36]	; 0x24
    7f80:	mov	r1, #284	; 0x11c
    7f84:	mov	r0, #1
    7f88:	bl	3d9c <calloc@plt>
    7f8c:	ldr	r3, [r4, #40]	; 0x28
    7f90:	ldr	r2, [r4, #36]	; 0x24
    7f94:	add	r1, r3, #1
    7f98:	str	r1, [r4, #40]	; 0x28
    7f9c:	mov	r1, #256	; 0x100
    7fa0:	str	r0, [r2, r3, lsl #2]
    7fa4:	ldr	r2, [pc, #72]	; 7ff4 <readstat_add_label_set+0xac>
    7fa8:	mov	r5, r0
    7fac:	mov	r3, r6
    7fb0:	add	r2, pc, r2
    7fb4:	str	r7, [r0], #4
    7fb8:	bl	42c4 <snprintf@plt>
    7fbc:	mov	r1, #32
    7fc0:	mov	r0, #10
    7fc4:	bl	3d9c <calloc@plt>
    7fc8:	mov	r3, #10
    7fcc:	mov	r1, #4
    7fd0:	str	r3, [r5, #268]	; 0x10c
    7fd4:	str	r0, [r5, #260]	; 0x104
    7fd8:	mov	r0, #2
    7fdc:	bl	3d9c <calloc@plt>
    7fe0:	mov	r3, #2
    7fe4:	str	r3, [r5, #280]	; 0x118
    7fe8:	str	r0, [r5, #272]	; 0x110
    7fec:	mov	r0, r5
    7ff0:	pop	{r4, r5, r6, r7, r8, pc}
    7ff4:	.word	0x0001a8be

00007ff8 <readstat_get_label_set>:
    7ff8:	ldr	r3, [r0, #40]	; 0x28
    7ffc:	cmp	r3, r1
    8000:	ldrgt	r3, [r0, #36]	; 0x24
    8004:	ldrgt	r0, [r3, r1, lsl #2]
    8008:	movle	r0, #0
    800c:	bx	lr

00008010 <readstat_sort_label_set>:
    8010:	mov	r3, r1
    8014:	mov	r2, #32
    8018:	ldr	r1, [r0, #264]	; 0x108
    801c:	ldr	r0, [r0, #260]	; 0x104
    8020:	b	448c <qsort@plt>

00008024 <readstat_get_value_label>:
    8024:	ldr	r3, [r0, #264]	; 0x108
    8028:	cmp	r3, r1
    802c:	ldrgt	r0, [r0, #260]	; 0x104
    8030:	addgt	r0, r0, r1, lsl #5
    8034:	movle	r0, #0
    8038:	bx	lr

0000803c <readstat_writer_free>:
    803c:	push	{r4, r5, r6, r7, r8, lr}
    8040:	subs	r4, r0, #0
    8044:	popeq	{r4, r5, r6, r7, r8, pc}
    8048:	ldr	r3, [r4, #288]	; 0x120
    804c:	cmp	r3, #0
    8050:	beq	8064 <readstat_writer_free+0x28>
    8054:	ldr	r0, [r4, #300]	; 0x12c
    8058:	cmp	r0, #0
    805c:	beq	8064 <readstat_writer_free+0x28>
    8060:	blx	r3
    8064:	ldr	r3, [r4, #24]
    8068:	cmp	r3, #0
    806c:	movne	r5, #0
    8070:	bne	80d0 <readstat_writer_free+0x94>
    8074:	ldr	r3, [r4, #36]	; 0x24
    8078:	cmp	r3, #0
    807c:	movne	r6, #0
    8080:	bne	811c <readstat_writer_free+0xe0>
    8084:	ldr	r3, [r4, #48]	; 0x30
    8088:	cmp	r3, #0
    808c:	movne	r5, #0
    8090:	bne	817c <readstat_writer_free+0x140>
    8094:	ldr	r3, [r4, #60]	; 0x3c
    8098:	cmp	r3, #0
    809c:	movne	r5, #0
    80a0:	bne	81a4 <readstat_writer_free+0x168>
    80a4:	ldr	r0, [r4, #72]	; 0x48
    80a8:	cmp	r0, #0
    80ac:	beq	80b4 <readstat_writer_free+0x78>
    80b0:	bl	3f04 <free@plt>
    80b4:	mov	r0, r4
    80b8:	pop	{r4, r5, r6, r7, r8, lr}
    80bc:	b	3f04 <free@plt>
    80c0:	ldr	r3, [r4, #24]
    80c4:	ldr	r0, [r3, r5, lsl #2]
    80c8:	bl	3f04 <free@plt>
    80cc:	add	r5, r5, #1
    80d0:	ldr	r3, [r4, #28]
    80d4:	cmp	r5, r3
    80d8:	blt	80c0 <readstat_writer_free+0x84>
    80dc:	ldr	r0, [r4, #24]
    80e0:	bl	3f04 <free@plt>
    80e4:	b	8074 <readstat_writer_free+0x38>
    80e8:	ldr	r3, [r4, #36]	; 0x24
    80ec:	mov	r7, #0
    80f0:	ldr	r5, [r3, r6, lsl #2]
    80f4:	ldr	r3, [r5, #264]	; 0x108
    80f8:	cmp	r7, r3
    80fc:	blt	8134 <readstat_writer_free+0xf8>
    8100:	ldr	r0, [r5, #260]	; 0x104
    8104:	bl	3f04 <free@plt>
    8108:	ldr	r0, [r5, #272]	; 0x110
    810c:	bl	3f04 <free@plt>
    8110:	mov	r0, r5
    8114:	bl	3f04 <free@plt>
    8118:	add	r6, r6, #1
    811c:	ldr	r3, [r4, #40]	; 0x28
    8120:	cmp	r6, r3
    8124:	blt	80e8 <readstat_writer_free+0xac>
    8128:	ldr	r0, [r4, #36]	; 0x24
    812c:	bl	3f04 <free@plt>
    8130:	b	8084 <readstat_writer_free+0x48>
    8134:	mov	r1, r7
    8138:	mov	r0, r5
    813c:	bl	451c <readstat_get_value_label@plt>
    8140:	mov	r8, r0
    8144:	ldr	r0, [r0, #24]
    8148:	cmp	r0, #0
    814c:	beq	8154 <readstat_writer_free+0x118>
    8150:	bl	3f04 <free@plt>
    8154:	ldr	r0, [r8, #16]
    8158:	cmp	r0, #0
    815c:	beq	8164 <readstat_writer_free+0x128>
    8160:	bl	3f04 <free@plt>
    8164:	add	r7, r7, #1
    8168:	b	80f4 <readstat_writer_free+0xb8>
    816c:	ldr	r3, [r4, #48]	; 0x30
    8170:	ldr	r0, [r3, r5, lsl #2]
    8174:	bl	3f04 <free@plt>
    8178:	add	r5, r5, #1
    817c:	ldr	r3, [r4, #52]	; 0x34
    8180:	cmp	r5, r3
    8184:	blt	816c <readstat_writer_free+0x130>
    8188:	ldr	r0, [r4, #48]	; 0x30
    818c:	bl	3f04 <free@plt>
    8190:	b	8094 <readstat_writer_free+0x58>
    8194:	ldr	r3, [r4, #60]	; 0x3c
    8198:	ldr	r0, [r3, r5, lsl #2]
    819c:	bl	3f04 <free@plt>
    81a0:	add	r5, r5, #1
    81a4:	ldr	r3, [r4, #64]	; 0x40
    81a8:	cmp	r5, r3
    81ac:	blt	8194 <readstat_writer_free+0x158>
    81b0:	ldr	r0, [r4, #60]	; 0x3c
    81b4:	bl	3f04 <free@plt>
    81b8:	b	80a4 <readstat_writer_free+0x68>

000081bc <readstat_get_label_set_variable>:
    81bc:	ldr	r3, [r0, #276]	; 0x114
    81c0:	cmp	r3, r1
    81c4:	ldrgt	r3, [r0, #272]	; 0x110
    81c8:	ldrgt	r0, [r3, r1, lsl #2]
    81cc:	movle	r0, #0
    81d0:	bx	lr

000081d4 <readstat_label_double_value>:
    81d4:	push	{r4, lr}
    81d8:	vpush	{d8}
    81dc:	vmov.f64	d8, d0
    81e0:	bl	7ac8 <readstat_add_value_label>
    81e4:	vstr	d8, [r0]
    81e8:	vcvt.s32.f64	s16, d8
    81ec:	vstr	s16, [r0, #8]
    81f0:	vpop	{d8}
    81f4:	pop	{r4, pc}

000081f8 <readstat_label_int32_value>:
    81f8:	push	{r4, lr}
    81fc:	mov	r4, r1
    8200:	mov	r1, r2
    8204:	bl	7ac8 <readstat_add_value_label>
    8208:	vmov	s15, r4
    820c:	vcvt.f64.s32	d7, s15
    8210:	str	r4, [r0, #8]
    8214:	vstr	d7, [r0]
    8218:	pop	{r4, pc}

0000821c <readstat_label_string_value>:
    821c:	push	{r4, r5, r6, lr}
    8220:	mov	r4, r1
    8224:	mov	r1, r2
    8228:	bl	7ac8 <readstat_add_value_label>
    822c:	cmp	r4, #0
    8230:	popeq	{r4, r5, r6, pc}
    8234:	ldrb	r3, [r4]
    8238:	cmp	r3, #0
    823c:	popeq	{r4, r5, r6, pc}
    8240:	mov	r6, r0
    8244:	mov	r0, r4
    8248:	bl	424c <strlen@plt>
    824c:	str	r0, [r6, #20]
    8250:	mov	r5, r0
    8254:	bl	415c <malloc@plt>
    8258:	mov	r2, r5
    825c:	mov	r1, r4
    8260:	str	r0, [r6, #16]
    8264:	pop	{r4, r5, r6, lr}
    8268:	b	3f64 <memcpy@plt>

0000826c <readstat_label_tagged_value>:
    826c:	push	{r4, lr}
    8270:	mov	r4, r1
    8274:	mov	r1, r2
    8278:	bl	7ac8 <readstat_add_value_label>
    827c:	strb	r4, [r0, #12]
    8280:	pop	{r4, pc}

00008284 <readstat_add_variable>:
    8284:	push	{r4, r5, r6, r7, r8, lr}
    8288:	mov	r6, r1
    828c:	mov	r8, r3
    8290:	ldr	r1, [r0, #28]
    8294:	ldr	r3, [r0, #32]
    8298:	mov	r5, r0
    829c:	cmp	r1, r3
    82a0:	mov	r7, r2
    82a4:	bne	82c0 <readstat_add_variable+0x3c>
    82a8:	lsl	r3, r1, #1
    82ac:	str	r3, [r0, #32]
    82b0:	lsl	r1, r1, #3
    82b4:	ldr	r0, [r0, #24]
    82b8:	bl	403c <realloc@plt>
    82bc:	str	r0, [r5, #24]
    82c0:	ldr	r1, [pc, #108]	; 8334 <readstat_add_variable+0xb0>
    82c4:	mov	r0, #1
    82c8:	bl	3d9c <calloc@plt>
    82cc:	ldr	r3, [r5, #28]
    82d0:	add	r2, r3, #1
    82d4:	str	r2, [r5, #28]
    82d8:	ldr	r2, [r5, #24]
    82dc:	str	r3, [r0, #4]
    82e0:	str	r0, [r2, r3, lsl #2]
    82e4:	str	r8, [r0, #1600]	; 0x640
    82e8:	str	r7, [r0]
    82ec:	mov	r4, r0
    82f0:	bl	4594 <readstat_variable_get_type_class@plt>
    82f4:	cmp	r0, #0
    82f8:	moveq	r3, #1
    82fc:	movne	r3, #3
    8300:	str	r3, [r4, #2132]	; 0x854
    8304:	mov	r3, #0
    8308:	cmp	r6, r3
    830c:	str	r3, [r4, #2128]	; 0x850
    8310:	beq	832c <readstat_add_variable+0xa8>
    8314:	ldr	r2, [pc, #28]	; 8338 <readstat_add_variable+0xb4>
    8318:	mov	r3, r6
    831c:	add	r2, pc, r2
    8320:	mov	r1, #300	; 0x12c
    8324:	add	r0, r4, #8
    8328:	bl	42c4 <snprintf@plt>
    832c:	mov	r0, r4
    8330:	pop	{r4, r5, r6, r7, r8, pc}
    8334:	.word	0x00000868
    8338:	.word	0x0001a552

0000833c <readstat_add_string_ref>:
    833c:	push	{r4, r5, r6, lr}
    8340:	mov	r4, r0
    8344:	mov	r0, r1
    8348:	bl	43a8 <readstat_string_ref_init@plt>
    834c:	ldr	r1, [r4, #64]	; 0x40
    8350:	ldr	r3, [r4, #68]	; 0x44
    8354:	cmp	r1, r3
    8358:	mov	r5, r0
    835c:	bne	8378 <readstat_add_string_ref+0x3c>
    8360:	lsl	r3, r1, #1
    8364:	str	r3, [r4, #68]	; 0x44
    8368:	lsl	r1, r1, #3
    836c:	ldr	r0, [r4, #60]	; 0x3c
    8370:	bl	403c <realloc@plt>
    8374:	str	r0, [r4, #60]	; 0x3c
    8378:	ldr	r3, [r4, #64]	; 0x40
    837c:	ldr	r2, [r4, #60]	; 0x3c
    8380:	add	r1, r3, #1
    8384:	str	r1, [r4, #64]	; 0x40
    8388:	mov	r0, r5
    838c:	str	r5, [r2, r3, lsl #2]
    8390:	pop	{r4, r5, r6, pc}

00008394 <readstat_add_note>:
    8394:	push	{r4, r5, r6, lr}
    8398:	mov	r5, r1
    839c:	ldr	r3, [r0, #56]	; 0x38
    83a0:	ldr	r1, [r0, #52]	; 0x34
    83a4:	mov	r4, r0
    83a8:	cmp	r1, r3
    83ac:	bne	83c8 <readstat_add_note+0x34>
    83b0:	lsl	r3, r1, #1
    83b4:	str	r3, [r0, #56]	; 0x38
    83b8:	lsl	r1, r1, #3
    83bc:	ldr	r0, [r0, #48]	; 0x30
    83c0:	bl	403c <realloc@plt>
    83c4:	str	r0, [r4, #48]	; 0x30
    83c8:	mov	r0, r5
    83cc:	bl	424c <strlen@plt>
    83d0:	add	r0, r0, #1
    83d4:	bl	415c <malloc@plt>
    83d8:	mov	r1, r5
    83dc:	mov	r6, r0
    83e0:	bl	40e4 <strcpy@plt>
    83e4:	ldr	r3, [r4, #52]	; 0x34
    83e8:	ldr	r2, [r4, #48]	; 0x30
    83ec:	add	r1, r3, #1
    83f0:	str	r1, [r4, #52]	; 0x34
    83f4:	str	r6, [r2, r3, lsl #2]
    83f8:	pop	{r4, r5, r6, pc}

000083fc <readstat_variable_set_label>:
    83fc:	subs	r3, r1, #0
    8400:	add	r0, r0, #564	; 0x234
    8404:	beq	8418 <readstat_variable_set_label+0x1c>
    8408:	ldr	r2, [pc, #16]	; 8420 <readstat_variable_set_label+0x24>
    840c:	mov	r1, #1024	; 0x400
    8410:	add	r2, pc, r2
    8414:	b	42c4 <snprintf@plt>
    8418:	mov	r2, #1024	; 0x400
    841c:	b	42e8 <memset@plt>
    8420:	.word	0x0001a45e

00008424 <readstat_variable_set_format>:
    8424:	subs	r3, r1, #0
    8428:	add	r0, r0, #308	; 0x134
    842c:	beq	8440 <readstat_variable_set_format+0x1c>
    8430:	ldr	r2, [pc, #16]	; 8448 <readstat_variable_set_format+0x24>
    8434:	mov	r1, #256	; 0x100
    8438:	add	r2, pc, r2
    843c:	b	42c4 <snprintf@plt>
    8440:	mov	r2, #256	; 0x100
    8444:	b	42e8 <memset@plt>
    8448:	.word	0x0001a436

0000844c <readstat_variable_set_measure>:
    844c:	str	r1, [r0, #2128]	; 0x850
    8450:	bx	lr

00008454 <readstat_variable_set_alignment>:
    8454:	str	r1, [r0, #2132]	; 0x854
    8458:	bx	lr

0000845c <readstat_variable_set_display_width>:
    845c:	str	r1, [r0, #2136]	; 0x858
    8460:	bx	lr

00008464 <readstat_variable_set_label_set>:
    8464:	cmp	r1, #0
    8468:	str	r1, [r0, #1588]	; 0x634
    846c:	bxeq	lr
    8470:	push	{r4, r5, r6, lr}
    8474:	mov	r4, r1
    8478:	ldr	r1, [r1, #276]	; 0x114
    847c:	ldr	r3, [r4, #280]	; 0x118
    8480:	mov	r5, r0
    8484:	cmp	r1, r3
    8488:	bne	84a4 <readstat_variable_set_label_set+0x40>
    848c:	lsl	r3, r1, #1
    8490:	str	r3, [r4, #280]	; 0x118
    8494:	lsl	r1, r1, #3
    8498:	ldr	r0, [r4, #272]	; 0x110
    849c:	bl	403c <realloc@plt>
    84a0:	str	r0, [r4, #272]	; 0x110
    84a4:	ldr	r3, [r4, #276]	; 0x114
    84a8:	ldr	r2, [r4, #272]	; 0x110
    84ac:	add	r1, r3, #1
    84b0:	str	r1, [r4, #276]	; 0x114
    84b4:	str	r5, [r2, r3, lsl #2]
    84b8:	pop	{r4, r5, r6, pc}

000084bc <readstat_get_variable>:
    84bc:	ldr	r3, [r0, #28]
    84c0:	cmp	r3, r1
    84c4:	ldrgt	r3, [r0, #24]
    84c8:	ldrgt	r0, [r3, r1, lsl #2]
    84cc:	movle	r0, #0
    84d0:	bx	lr

000084d4 <readstat_begin_writing_data>:
    84d4:	push	{r4, r5, r6, r7, r8, lr}
    84d8:	mov	r4, r0
    84dc:	bl	3de4 <readstat_validate_metadata@plt>
    84e0:	subs	r6, r0, #0
    84e4:	moveq	r7, r6
    84e8:	moveq	r5, r6
    84ec:	beq	8528 <readstat_begin_writing_data+0x54>
    84f0:	mov	r0, r6
    84f4:	pop	{r4, r5, r6, r7, r8, pc}
    84f8:	mov	r1, r7
    84fc:	mov	r0, r4
    8500:	bl	43cc <readstat_get_variable@plt>
    8504:	ldr	r3, [r4, #228]	; 0xe4
    8508:	add	r7, r7, #1
    850c:	mov	r8, r0
    8510:	ldr	r1, [r0, #1600]	; 0x640
    8514:	ldr	r0, [r0]
    8518:	blx	r3
    851c:	str	r5, [r8, #1592]	; 0x638
    8520:	add	r5, r5, r0
    8524:	str	r0, [r8, #1596]	; 0x63c
    8528:	ldr	r3, [r4, #28]
    852c:	cmp	r7, r3
    8530:	blt	84f8 <readstat_begin_writing_data+0x24>
    8534:	ldr	r3, [r4, #232]	; 0xe8
    8538:	cmp	r3, #0
    853c:	movne	r7, #0
    8540:	bne	8590 <readstat_begin_writing_data+0xbc>
    8544:	str	r5, [r4, #76]	; 0x4c
    8548:	mov	r0, r5
    854c:	bl	415c <malloc@plt>
    8550:	ldr	r3, [r4, #276]	; 0x114
    8554:	cmp	r3, #0
    8558:	str	r0, [r4, #72]	; 0x48
    855c:	beq	84f0 <readstat_begin_writing_data+0x1c>
    8560:	mov	r0, r4
    8564:	pop	{r4, r5, r6, r7, r8, lr}
    8568:	bx	r3
    856c:	mov	r1, r7
    8570:	mov	r0, r4
    8574:	bl	43cc <readstat_get_variable@plt>
    8578:	mov	r1, r0
    857c:	mov	r0, r4
    8580:	bl	44ec <readstat_validate_variable@plt>
    8584:	cmp	r0, #0
    8588:	bne	85a0 <readstat_begin_writing_data+0xcc>
    858c:	add	r7, r7, #1
    8590:	ldr	r3, [r4, #28]
    8594:	cmp	r7, r3
    8598:	blt	856c <readstat_begin_writing_data+0x98>
    859c:	b	8544 <readstat_begin_writing_data+0x70>
    85a0:	mov	r6, r0
    85a4:	b	84f0 <readstat_begin_writing_data+0x1c>

000085a8 <readstat_get_string_ref>:
    85a8:	ldr	r3, [r0, #64]	; 0x40
    85ac:	cmp	r3, r1
    85b0:	ldrgt	r3, [r0, #60]	; 0x3c
    85b4:	ldrgt	r0, [r3, r1, lsl #2]
    85b8:	movle	r0, #0
    85bc:	bx	lr

000085c0 <readstat_writer_set_file_label>:
    85c0:	ldr	r2, [pc, #28]	; 85e4 <readstat_writer_set_file_label+0x24>
    85c4:	mov	r3, r1
    85c8:	push	{r4, lr}
    85cc:	add	r2, pc, r2
    85d0:	mov	r1, #100	; 0x64
    85d4:	add	r0, r0, #88	; 0x58
    85d8:	bl	42c4 <snprintf@plt>
    85dc:	mov	r0, #0
    85e0:	pop	{r4, pc}
    85e4:	.word	0x0001a2a2

000085e8 <readstat_writer_set_file_timestamp>:
    85e8:	str	r1, [r0, #20]
    85ec:	mov	r0, #0
    85f0:	bx	lr

000085f4 <readstat_writer_set_table_name>:
    85f4:	ldr	r2, [pc, #28]	; 8618 <readstat_writer_set_table_name+0x24>
    85f8:	mov	r3, r1
    85fc:	push	{r4, lr}
    8600:	add	r2, pc, r2
    8604:	mov	r1, #33	; 0x21
    8608:	add	r0, r0, #188	; 0xbc
    860c:	bl	42c4 <snprintf@plt>
    8610:	mov	r0, #0
    8614:	pop	{r4, pc}
    8618:	.word	0x0001a26e

0000861c <readstat_writer_set_fweight_variable>:
    861c:	push	{r4, r5, r6, lr}
    8620:	mov	r5, r0
    8624:	mov	r0, r1
    8628:	mov	r4, r1
    862c:	bl	4594 <readstat_variable_get_type_class@plt>
    8630:	cmp	r0, #0
    8634:	movne	r0, #0
    8638:	strne	r4, [r5, #224]	; 0xe0
    863c:	moveq	r0, #30
    8640:	pop	{r4, r5, r6, pc}

00008644 <readstat_writer_set_file_format_version>:
    8644:	str	r1, [r0, #8]
    8648:	mov	r0, #0
    864c:	bx	lr

00008650 <readstat_writer_set_file_format_is_64bit>:
    8650:	str	r1, [r0, #12]
    8654:	mov	r0, #0
    8658:	bx	lr

0000865c <readstat_writer_set_compression>:
    865c:	str	r1, [r0, #16]
    8660:	mov	r0, #0
    8664:	bx	lr

00008668 <readstat_writer_set_error_handler>:
    8668:	str	r1, [r0, #296]	; 0x128
    866c:	mov	r0, #0
    8670:	bx	lr

00008674 <readstat_begin_writing_file>:
    8674:	str	r2, [r0, #80]	; 0x50
    8678:	mov	r2, #1
    867c:	str	r1, [r0, #304]	; 0x130
    8680:	str	r2, [r0, #308]	; 0x134
    8684:	b	3de4 <readstat_validate_metadata@plt>

00008688 <readstat_begin_row>:
    8688:	ldr	r3, [r0, #308]	; 0x134
    868c:	push	{r4, r5, r6, lr}
    8690:	cmp	r3, #0
    8694:	moveq	r5, #14
    8698:	beq	86c8 <readstat_begin_row+0x40>
    869c:	ldr	r3, [r0, #84]	; 0x54
    86a0:	mov	r4, r0
    86a4:	cmp	r3, #0
    86a8:	movne	r5, #0
    86ac:	bne	86b8 <readstat_begin_row+0x30>
    86b0:	bl	84d4 <readstat_begin_writing_data>
    86b4:	mov	r5, r0
    86b8:	ldr	r2, [r4, #76]	; 0x4c
    86bc:	mov	r1, #0
    86c0:	ldr	r0, [r4, #72]	; 0x48
    86c4:	bl	42e8 <memset@plt>
    86c8:	mov	r0, r5
    86cc:	pop	{r4, r5, r6, pc}

000086d0 <readstat_insert_int8_value>:
    86d0:	ldr	ip, [r0, #308]	; 0x134
    86d4:	cmp	ip, #0
    86d8:	beq	8704 <readstat_insert_int8_value+0x34>
    86dc:	ldr	ip, [r1]
    86e0:	cmp	ip, #1
    86e4:	bne	870c <readstat_insert_int8_value+0x3c>
    86e8:	push	{lr}		; (str lr, [sp, #-4]!)
    86ec:	ldr	ip, [r1, #1592]	; 0x638
    86f0:	ldr	lr, [r0, #72]	; 0x48
    86f4:	ldr	r3, [r0, #236]	; 0xec
    86f8:	add	r0, lr, ip
    86fc:	pop	{lr}		; (ldr lr, [sp], #4)
    8700:	bx	r3
    8704:	mov	r0, #14
    8708:	bx	lr
    870c:	mov	r0, #12
    8710:	bx	lr

00008714 <readstat_insert_int16_value>:
    8714:	ldr	ip, [r0, #308]	; 0x134
    8718:	cmp	ip, #0
    871c:	beq	8748 <readstat_insert_int16_value+0x34>
    8720:	ldr	ip, [r1]
    8724:	cmp	ip, #2
    8728:	bne	8750 <readstat_insert_int16_value+0x3c>
    872c:	push	{lr}		; (str lr, [sp, #-4]!)
    8730:	ldr	ip, [r1, #1592]	; 0x638
    8734:	ldr	lr, [r0, #72]	; 0x48
    8738:	ldr	r3, [r0, #240]	; 0xf0
    873c:	add	r0, lr, ip
    8740:	pop	{lr}		; (ldr lr, [sp], #4)
    8744:	bx	r3
    8748:	mov	r0, #14
    874c:	bx	lr
    8750:	mov	r0, #12
    8754:	bx	lr

00008758 <readstat_insert_int32_value>:
    8758:	ldr	ip, [r0, #308]	; 0x134
    875c:	cmp	ip, #0
    8760:	beq	878c <readstat_insert_int32_value+0x34>
    8764:	ldr	ip, [r1]
    8768:	cmp	ip, #3
    876c:	bne	8794 <readstat_insert_int32_value+0x3c>
    8770:	push	{lr}		; (str lr, [sp, #-4]!)
    8774:	ldr	ip, [r1, #1592]	; 0x638
    8778:	ldr	lr, [r0, #72]	; 0x48
    877c:	ldr	r3, [r0, #244]	; 0xf4
    8780:	add	r0, lr, ip
    8784:	pop	{lr}		; (ldr lr, [sp], #4)
    8788:	bx	r3
    878c:	mov	r0, #14
    8790:	bx	lr
    8794:	mov	r0, #12
    8798:	bx	lr

0000879c <readstat_insert_float_value>:
    879c:	ldr	r2, [r0, #308]	; 0x134
    87a0:	cmp	r2, #0
    87a4:	beq	87c8 <readstat_insert_float_value+0x2c>
    87a8:	ldr	r2, [r1]
    87ac:	cmp	r2, #4
    87b0:	bne	87d0 <readstat_insert_float_value+0x34>
    87b4:	ldr	ip, [r0, #72]	; 0x48
    87b8:	ldr	r2, [r1, #1592]	; 0x638
    87bc:	ldr	r3, [r0, #248]	; 0xf8
    87c0:	add	r0, ip, r2
    87c4:	bx	r3
    87c8:	mov	r0, #14
    87cc:	bx	lr
    87d0:	mov	r0, #12
    87d4:	bx	lr

000087d8 <readstat_insert_double_value>:
    87d8:	ldr	r2, [r0, #308]	; 0x134
    87dc:	cmp	r2, #0
    87e0:	beq	8804 <readstat_insert_double_value+0x2c>
    87e4:	ldr	r2, [r1]
    87e8:	cmp	r2, #5
    87ec:	bne	880c <readstat_insert_double_value+0x34>
    87f0:	ldr	ip, [r0, #72]	; 0x48
    87f4:	ldr	r2, [r1, #1592]	; 0x638
    87f8:	ldr	r3, [r0, #252]	; 0xfc
    87fc:	add	r0, ip, r2
    8800:	bx	r3
    8804:	mov	r0, #14
    8808:	bx	lr
    880c:	mov	r0, #12
    8810:	bx	lr

00008814 <readstat_insert_string_value>:
    8814:	ldr	ip, [r0, #308]	; 0x134
    8818:	cmp	ip, #0
    881c:	beq	8848 <readstat_insert_string_value+0x34>
    8820:	ldr	ip, [r1]
    8824:	cmp	ip, #0
    8828:	bne	8850 <readstat_insert_string_value+0x3c>
    882c:	push	{lr}		; (str lr, [sp, #-4]!)
    8830:	ldr	ip, [r1, #1592]	; 0x638
    8834:	ldr	lr, [r0, #72]	; 0x48
    8838:	ldr	r3, [r0, #256]	; 0x100
    883c:	add	r0, lr, ip
    8840:	pop	{lr}		; (ldr lr, [sp], #4)
    8844:	bx	r3
    8848:	mov	r0, #14
    884c:	bx	lr
    8850:	mov	r0, #12
    8854:	bx	lr

00008858 <readstat_insert_string_ref>:
    8858:	ldr	r3, [r0, #308]	; 0x134
    885c:	cmp	r3, #0
    8860:	beq	88e8 <readstat_insert_string_ref+0x90>
    8864:	ldr	r3, [r1]
    8868:	cmp	r3, #6
    886c:	bne	88f0 <readstat_insert_string_ref+0x98>
    8870:	ldr	r3, [r0, #260]	; 0x104
    8874:	cmp	r3, #0
    8878:	beq	88f8 <readstat_insert_string_ref+0xa0>
    887c:	cmp	r2, #0
    8880:	ldreq	ip, [r0, #72]	; 0x48
    8884:	ldreq	r0, [r1, #1592]	; 0x638
    8888:	addeq	r0, ip, r0
    888c:	beq	88e4 <readstat_insert_string_ref+0x8c>
    8890:	push	{r4, r5, r6, r7}
    8894:	mvn	r5, #0
    8898:	ldrd	r6, [r2, #8]
    889c:	mvn	r4, #0
    88a0:	cmp	r7, r5
    88a4:	cmpeq	r6, r4
    88a8:	bne	88d4 <readstat_insert_string_ref+0x7c>
    88ac:	ldrd	r4, [r2]
    88b0:	cmp	r5, r7
    88b4:	cmpeq	r4, r6
    88b8:	bne	88d4 <readstat_insert_string_ref+0x7c>
    88bc:	ldr	r4, [r0, #84]	; 0x54
    88c0:	asr	r5, r4, #31
    88c4:	strd	r4, [r2, #8]
    88c8:	ldr	r4, [r1, #4]
    88cc:	asr	r5, r4, #31
    88d0:	strd	r4, [r2]
    88d4:	ldr	ip, [r0, #72]	; 0x48
    88d8:	pop	{r4, r5, r6, r7}
    88dc:	ldr	r0, [r1, #1592]	; 0x638
    88e0:	add	r0, ip, r0
    88e4:	bx	r3
    88e8:	mov	r0, #14
    88ec:	bx	lr
    88f0:	mov	r0, #12
    88f4:	bx	lr
    88f8:	mov	r0, #33	; 0x21
    88fc:	bx	lr

00008900 <readstat_insert_missing_value>:
    8900:	ldr	ip, [r0, #308]	; 0x134
    8904:	mov	r3, r0
    8908:	cmp	ip, #0
    890c:	mov	r2, r1
    8910:	beq	8950 <readstat_insert_missing_value+0x50>
    8914:	ldr	ip, [r1]
    8918:	cmp	ip, #0
    891c:	ldreq	r0, [r0, #72]	; 0x48
    8920:	ldreq	r2, [r1, #1592]	; 0x638
    8924:	ldreq	r3, [r3, #264]	; 0x108
    8928:	beq	8948 <readstat_insert_missing_value+0x48>
    892c:	cmp	ip, #6
    8930:	ldrne	r0, [r3, #72]	; 0x48
    8934:	ldrne	r2, [r2, #1592]	; 0x638
    8938:	ldrne	r3, [r3, #268]	; 0x10c
    893c:	bne	8948 <readstat_insert_missing_value+0x48>
    8940:	mov	r2, #0
    8944:	b	3f94 <readstat_insert_string_ref@plt>
    8948:	add	r0, r0, r2
    894c:	bx	r3
    8950:	mov	r0, #14
    8954:	bx	lr

00008958 <readstat_insert_tagged_missing_value>:
    8958:	ldr	r3, [r0, #308]	; 0x134
    895c:	cmp	r3, #0
    8960:	beq	899c <readstat_insert_tagged_missing_value+0x44>
    8964:	ldr	r3, [r0, #272]	; 0x110
    8968:	push	{r4, lr}
    896c:	cmp	r3, #0
    8970:	ldr	lr, [r0, #72]	; 0x48
    8974:	ldr	ip, [r1, #1592]	; 0x638
    8978:	bne	8990 <readstat_insert_tagged_missing_value+0x38>
    897c:	ldr	r3, [r0, #268]	; 0x10c
    8980:	add	r0, lr, ip
    8984:	blx	r3
    8988:	mov	r0, #23
    898c:	pop	{r4, pc}
    8990:	add	r0, lr, ip
    8994:	pop	{r4, lr}
    8998:	bx	r3
    899c:	mov	r0, #14
    89a0:	bx	lr

000089a4 <readstat_end_row>:
    89a4:	ldr	r3, [r0, #308]	; 0x134
    89a8:	cmp	r3, #0
    89ac:	beq	89dc <readstat_end_row+0x38>
    89b0:	ldr	r3, [r0, #280]	; 0x118
    89b4:	push	{r4, lr}
    89b8:	mov	r4, r0
    89bc:	ldr	r2, [r0, #76]	; 0x4c
    89c0:	ldr	r1, [r0, #72]	; 0x48
    89c4:	blx	r3
    89c8:	cmp	r0, #0
    89cc:	ldreq	r3, [r4, #84]	; 0x54
    89d0:	addeq	r3, r3, #1
    89d4:	streq	r3, [r4, #84]	; 0x54
    89d8:	pop	{r4, pc}
    89dc:	mov	r0, #14
    89e0:	bx	lr

000089e4 <readstat_end_writing>:
    89e4:	ldr	r3, [r0, #308]	; 0x134
    89e8:	cmp	r3, #0
    89ec:	beq	8a8c <readstat_end_writing+0xa8>
    89f0:	ldr	r3, [r0, #84]	; 0x54
    89f4:	ldr	r2, [r0, #80]	; 0x50
    89f8:	push	{r4, r5, r6, r7, r8, lr}
    89fc:	cmp	r3, r2
    8a00:	mov	r4, r0
    8a04:	bne	8a94 <readstat_end_writing+0xb0>
    8a08:	cmp	r3, #0
    8a0c:	beq	8a74 <readstat_end_writing+0x90>
    8a10:	ldr	r7, [r4, #64]	; 0x40
    8a14:	mov	r5, #1
    8a18:	cmp	r5, r7
    8a1c:	bge	8a5c <readstat_end_writing+0x78>
    8a20:	sub	r0, r5, #-1073741823	; 0xc0000001
    8a24:	ldr	r6, [r4, #60]	; 0x3c
    8a28:	lsl	r0, r0, #2
    8a2c:	add	r1, r0, #4
    8a30:	add	r1, r6, r1
    8a34:	add	r0, r6, r0
    8a38:	bl	7a98 <readstat_compare_string_refs>
    8a3c:	cmp	r0, #0
    8a40:	ble	8a84 <readstat_end_writing+0xa0>
    8a44:	ldr	r3, [pc, #88]	; 8aa4 <readstat_end_writing+0xc0>
    8a48:	mov	r2, #4
    8a4c:	add	r3, pc, r3
    8a50:	mov	r1, r7
    8a54:	mov	r0, r6
    8a58:	bl	448c <qsort@plt>
    8a5c:	ldr	r3, [r4, #284]	; 0x11c
    8a60:	cmp	r3, #0
    8a64:	beq	8a9c <readstat_end_writing+0xb8>
    8a68:	mov	r0, r4
    8a6c:	pop	{r4, r5, r6, r7, r8, lr}
    8a70:	bx	r3
    8a74:	bl	84d4 <readstat_begin_writing_data>
    8a78:	cmp	r0, #0
    8a7c:	beq	8a10 <readstat_end_writing+0x2c>
    8a80:	pop	{r4, r5, r6, r7, r8, pc}
    8a84:	add	r5, r5, #1
    8a88:	b	8a18 <readstat_end_writing+0x34>
    8a8c:	mov	r0, #14
    8a90:	bx	lr
    8a94:	mov	r0, #9
    8a98:	pop	{r4, r5, r6, r7, r8, pc}
    8a9c:	mov	r0, r3
    8aa0:	pop	{r4, r5, r6, r7, r8, pc}
    8aa4:	.word	0xfffff044

00008aa8 <memreverse>:
    8aa8:	push	{r4, r5, r6, lr}
    8aac:	mov	r5, r0
    8ab0:	mov	r4, r1
    8ab4:	bl	3ef8 <machine_is_little_endian@plt>
    8ab8:	cmp	r0, #0
    8abc:	popeq	{r4, r5, r6, pc}
    8ac0:	add	r2, r4, r4, lsr #31
    8ac4:	mov	r3, r5
    8ac8:	asr	r2, r2, #1
    8acc:	add	r4, r5, r4
    8ad0:	sub	r1, r3, r5
    8ad4:	cmp	r2, r1
    8ad8:	bgt	8ae0 <memreverse+0x38>
    8adc:	pop	{r4, r5, r6, pc}
    8ae0:	ldrb	r1, [r3]
    8ae4:	ldrb	r0, [r4, #-1]
    8ae8:	strb	r0, [r3], #1
    8aec:	strb	r1, [r4, #-1]!
    8af0:	b	8ad0 <memreverse+0x28>

00008af4 <get_native>:
    8af4:	push	{r4, r5, r6, r7, r8, lr}
    8af8:	mov	r4, #0
    8afc:	ldr	r5, [pc, #56]	; 8b3c <get_native+0x48>
    8b00:	mov	r7, #8
    8b04:	add	r5, pc, r5
    8b08:	add	r6, r5, #24
    8b0c:	mov	r2, r7
    8b10:	add	r1, r5, r4, lsl #3
    8b14:	mov	r0, r6
    8b18:	bl	3fe8 <memcmp@plt>
    8b1c:	cmp	r0, #0
    8b20:	add	r0, r4, #1
    8b24:	popeq	{r4, r5, r6, r7, r8, pc}
    8b28:	cmp	r0, #3
    8b2c:	mov	r4, r0
    8b30:	bne	8b0c <get_native+0x18>
    8b34:	mvn	r0, #0
    8b38:	pop	{r4, r5, r6, r7, r8, pc}
    8b3c:	.word	0x0003881c

00008b40 <cnxptiee>:
    8b40:	push	{r4, r5, r6, r7, lr}
    8b44:	subs	r6, r1, #0
    8b48:	sub	sp, sp, #36	; 0x24
    8b4c:	mov	r5, r0
    8b50:	mov	r4, r2
    8b54:	mov	r7, r3
    8b58:	bne	8b64 <cnxptiee+0x24>
    8b5c:	bl	4210 <get_native@plt>
    8b60:	mov	r6, r0
    8b64:	cmp	r6, #1
    8b68:	blt	8ed8 <cnxptiee+0x398>
    8b6c:	cmp	r6, #2
    8b70:	ble	8ba8 <cnxptiee+0x68>
    8b74:	cmp	r6, #3
    8b78:	bne	8ed8 <cnxptiee+0x398>
    8b7c:	cmp	r7, #3
    8b80:	beq	8bd0 <cnxptiee+0x90>
    8b84:	add	r2, sp, #16
    8b88:	add	r3, r5, #8
    8b8c:	mov	r1, r2
    8b90:	ldrb	r0, [r3, #-1]!
    8b94:	cmp	r5, r3
    8b98:	strb	r0, [r2], #1
    8b9c:	bne	8b90 <cnxptiee+0x50>
    8ba0:	mov	r5, r1
    8ba4:	mov	r6, #2
    8ba8:	cmp	r7, #0
    8bac:	bne	8bb8 <cnxptiee+0x78>
    8bb0:	bl	4210 <get_native@plt>
    8bb4:	mov	r7, r0
    8bb8:	sub	r3, r7, #1
    8bbc:	cmp	r3, #2
    8bc0:	mvnhi	r0, #1
    8bc4:	bhi	8c78 <cnxptiee+0x138>
    8bc8:	cmp	r6, r7
    8bcc:	bne	8be4 <cnxptiee+0xa4>
    8bd0:	ldr	r3, [r5]
    8bd4:	str	r3, [r4]
    8bd8:	ldr	r3, [r5, #4]
    8bdc:	str	r3, [r4, #4]
    8be0:	b	8c74 <cnxptiee+0x134>
    8be4:	cmp	r6, #1
    8be8:	beq	8d68 <cnxptiee+0x228>
    8bec:	cmp	r6, #2
    8bf0:	bne	8dc8 <cnxptiee+0x288>
    8bf4:	cmp	r7, #1
    8bf8:	bne	8d54 <cnxptiee+0x214>
    8bfc:	ldr	r0, [r5]
    8c00:	ldr	r1, [r5, #4]
    8c04:	add	r3, sp, #24
    8c08:	mov	r6, #0
    8c0c:	stmia	r3!, {r0, r1}
    8c10:	add	r0, sp, #32
    8c14:	ldr	r3, [sp, #24]
    8c18:	mov	r5, r1
    8c1c:	str	r3, [r0, #-24]!	; 0xffffffe8
    8c20:	mov	r1, #4
    8c24:	str	r6, [sp, #12]
    8c28:	bl	3e08 <memreverse@plt>
    8c2c:	add	r0, sp, #32
    8c30:	mov	r1, #4
    8c34:	str	r5, [r0, #-20]!	; 0xffffffec
    8c38:	bl	3e08 <memreverse@plt>
    8c3c:	ldrb	r3, [sp, #24]
    8c40:	str	r6, [r4]
    8c44:	str	r6, [r4, #4]
    8c48:	cmp	r3, #255	; 0xff
    8c4c:	bne	8c80 <cnxptiee+0x140>
    8c50:	ldrb	r3, [sp, #25]
    8c54:	cmp	r3, #255	; 0xff
    8c58:	bne	8c80 <cnxptiee+0x140>
    8c5c:	ldrb	r3, [sp, #26]
    8c60:	mvn	r3, r3
    8c64:	uxtb	r3, r3
    8c68:	cmp	r3, #210	; 0xd2
    8c6c:	moveq	r3, #109	; 0x6d
    8c70:	strb	r3, [r4]
    8c74:	mov	r0, #0
    8c78:	add	sp, sp, #36	; 0x24
    8c7c:	pop	{r4, r5, r6, r7, pc}
    8c80:	ldr	r1, [sp, #8]
    8c84:	ldr	r0, [sp, #12]
    8c88:	bic	r2, r1, #-16777216	; 0xff000000
    8c8c:	bic	r2, r2, #15728640	; 0xf00000
    8c90:	orrs	r3, r1, r0
    8c94:	str	r2, [sp]
    8c98:	str	r0, [sp, #4]
    8c9c:	beq	8d2c <cnxptiee+0x1ec>
    8ca0:	ldr	r3, [pc, #616]	; 8f10 <cnxptiee+0x3d0>
    8ca4:	orr	r2, r2, #1048576	; 0x100000
    8ca8:	and	r3, r3, r1, lsr #20
    8cac:	sub	r3, r3, #1020	; 0x3fc
    8cb0:	sub	r3, r3, #3
    8cb4:	ands	ip, r3, #3
    8cb8:	lsrne	lr, r0, #24
    8cbc:	lslne	r2, r2, ip
    8cc0:	andne	lr, lr, #224	; 0xe0
    8cc4:	rsbne	r5, ip, #8
    8cc8:	lslne	r0, r0, ip
    8ccc:	orrne	r2, r2, lr, lsr r5
    8cd0:	streq	r2, [sp]
    8cd4:	strne	r2, [sp]
    8cd8:	lsr	r1, r1, #24
    8cdc:	asr	r2, r3, #2
    8ce0:	strne	r0, [sp, #4]
    8ce4:	add	r2, r2, #65	; 0x41
    8ce8:	and	r0, r1, #128	; 0x80
    8cec:	orr	r2, r2, r0
    8cf0:	ldr	r0, [sp]
    8cf4:	cmn	r3, #260	; 0x104
    8cf8:	orr	r2, r0, r2, lsl #24
    8cfc:	movlt	r3, #0
    8d00:	str	r2, [sp]
    8d04:	strlt	r3, [r4]
    8d08:	blt	8bdc <cnxptiee+0x9c>
    8d0c:	cmp	r3, #248	; 0xf8
    8d10:	ble	8d2c <cnxptiee+0x1ec>
    8d14:	mvn	r3, #0
    8d18:	orr	r1, r1, #127	; 0x7f
    8d1c:	str	r3, [r4, #1]
    8d20:	strb	r1, [r4]
    8d24:	str	r3, [r4, #4]
    8d28:	b	8c74 <cnxptiee+0x134>
    8d2c:	mov	r1, #4
    8d30:	mov	r0, sp
    8d34:	bl	3e08 <memreverse@plt>
    8d38:	ldr	r3, [sp]
    8d3c:	mov	r1, #4
    8d40:	str	r3, [r4]
    8d44:	add	r0, sp, r1
    8d48:	bl	3e08 <memreverse@plt>
    8d4c:	ldr	r3, [sp, #4]
    8d50:	b	8bdc <cnxptiee+0x9c>
    8d54:	ldr	r3, [r5]
    8d58:	str	r3, [r4]
    8d5c:	ldr	r3, [r5, #4]
    8d60:	str	r3, [r4, #4]
    8d64:	b	8dc8 <cnxptiee+0x288>
    8d68:	ldr	r0, [r5]
    8d6c:	ldr	r1, [r5, #4]
    8d70:	add	r2, sp, #24
    8d74:	mov	r3, #0
    8d78:	stmia	r2!, {r0, r1}
    8d7c:	add	r0, sp, #32
    8d80:	str	r3, [sp, #8]
    8d84:	ldrb	r5, [r0, #-8]!
    8d88:	str	r3, [sp, #12]
    8d8c:	str	r3, [r4]
    8d90:	cmp	r5, r3
    8d94:	str	r3, [r4, #4]
    8d98:	beq	8e00 <cnxptiee+0x2c0>
    8d9c:	mov	r2, #7
    8da0:	mov	r1, r4
    8da4:	add	r0, r0, #1
    8da8:	bl	3fe8 <memcmp@plt>
    8dac:	cmp	r0, #0
    8db0:	bne	8e00 <cnxptiee+0x2c0>
    8db4:	mvn	r3, #0
    8db8:	mvn	r5, r5
    8dbc:	strb	r3, [r4, #1]
    8dc0:	strb	r3, [r4]
    8dc4:	strb	r5, [r4, #2]
    8dc8:	cmp	r7, #3
    8dcc:	bne	8c74 <cnxptiee+0x134>
    8dd0:	ldr	r1, [r4, #4]
    8dd4:	ldr	r0, [r4]
    8dd8:	add	r3, sp, #16
    8ddc:	sub	r4, r4, #1
    8de0:	stmia	r3!, {r0, r1}
    8de4:	mov	r3, #7
    8de8:	add	r1, sp, #16
    8dec:	ldrb	r2, [r1, r3]
    8df0:	subs	r3, r3, #1
    8df4:	strb	r2, [r4, #1]!
    8df8:	bcs	8dec <cnxptiee+0x2ac>
    8dfc:	b	8c74 <cnxptiee+0x134>
    8e00:	add	r0, sp, #32
    8e04:	ldr	r3, [sp, #24]
    8e08:	mov	r1, #4
    8e0c:	str	r3, [r0, #-24]!	; 0xffffffe8
    8e10:	bl	3e08 <memreverse@plt>
    8e14:	ldr	r3, [sp, #28]
    8e18:	add	r0, sp, #32
    8e1c:	mov	r1, #4
    8e20:	str	r3, [r0, #-20]!	; 0xffffffec
    8e24:	bl	3e08 <memreverse@plt>
    8e28:	ldr	r2, [sp, #8]
    8e2c:	ldr	r1, [sp, #12]
    8e30:	bic	r3, r2, #-2147483648	; 0x80000000
    8e34:	cmn	r3, #-2147483647	; 0x80000001
    8e38:	bne	8e84 <cnxptiee+0x344>
    8e3c:	cmn	r1, #1
    8e40:	bne	8e84 <cnxptiee+0x344>
    8e44:	and	r2, r2, #-2147483648	; 0x80000000
    8e48:	orr	r2, r2, #2130706432	; 0x7f000000
    8e4c:	orr	r2, r2, #15728640	; 0xf00000
    8e50:	mov	r3, #0
    8e54:	str	r2, [sp]
    8e58:	str	r3, [sp, #4]
    8e5c:	mov	r1, #4
    8e60:	mov	r0, sp
    8e64:	bl	3e08 <memreverse@plt>
    8e68:	ldr	r3, [sp]
    8e6c:	mov	r1, #4
    8e70:	str	r3, [r4]
    8e74:	add	r0, sp, r1
    8e78:	bl	3e08 <memreverse@plt>
    8e7c:	ldr	r3, [sp, #4]
    8e80:	b	8d60 <cnxptiee+0x220>
    8e84:	bic	r0, r2, #-16777216	; 0xff000000
    8e88:	orrs	r3, r2, r1
    8e8c:	stm	sp, {r0, r1}
    8e90:	beq	8dc8 <cnxptiee+0x288>
    8e94:	tst	r2, #8388608	; 0x800000
    8e98:	bne	8ee0 <cnxptiee+0x3a0>
    8e9c:	tst	r2, #4194304	; 0x400000
    8ea0:	bne	8f08 <cnxptiee+0x3c8>
    8ea4:	ands	r3, r2, #2097152	; 0x200000
    8ea8:	bne	8ee4 <cnxptiee+0x3a4>
    8eac:	and	r5, r5, #127	; 0x7f
    8eb0:	ldr	r1, [sp]
    8eb4:	add	r3, r3, r5, lsl #2
    8eb8:	add	r3, r3, #760	; 0x2f8
    8ebc:	add	r3, r3, #3
    8ec0:	bic	r1, r1, #1048576	; 0x100000
    8ec4:	and	r2, r2, #-2147483648	; 0x80000000
    8ec8:	orr	r2, r1, r2
    8ecc:	orr	r3, r2, r3, lsl #20
    8ed0:	str	r3, [sp]
    8ed4:	b	8e5c <cnxptiee+0x31c>
    8ed8:	mvn	r0, #0
    8edc:	b	8c78 <cnxptiee+0x138>
    8ee0:	mov	r6, #3
    8ee4:	lsr	r0, r0, r6
    8ee8:	and	r3, r2, #7
    8eec:	str	r0, [sp]
    8ef0:	rsb	ip, r6, #32
    8ef4:	lsr	r0, r1, r6
    8ef8:	orr	r1, r0, r3, lsl ip
    8efc:	mov	r3, r6
    8f00:	str	r1, [sp, #4]
    8f04:	b	8eac <cnxptiee+0x36c>
    8f08:	mov	r6, #2
    8f0c:	b	8ee4 <cnxptiee+0x3a4>
    8f10:	.word	0x000007ff
    8f14:	.word	0x00000000

00008f18 <sas_read8>:
    8f18:	mov	r2, r0
    8f1c:	sub	sp, sp, #8
    8f20:	mov	ip, r1
    8f24:	ldr	r0, [r0]
    8f28:	ldr	r1, [r2, #4]
    8f2c:	mov	r3, sp
    8f30:	cmp	ip, #0
    8f34:	stmia	r3!, {r0, r1}
    8f38:	ldrd	r0, [sp]
    8f3c:	beq	8f48 <sas_read8+0x30>
    8f40:	add	sp, sp, #8
    8f44:	b	3dc0 <byteswap8@plt>
    8f48:	add	sp, sp, #8
    8f4c:	bx	lr

00008f50 <sas_read4>:
    8f50:	cmp	r1, #0
    8f54:	ldr	r0, [r0]
    8f58:	bxeq	lr
    8f5c:	b	3dd8 <byteswap4@plt>

00008f60 <sas_read2>:
    8f60:	cmp	r1, #0
    8f64:	ldrh	r0, [r0]
    8f68:	bxeq	lr
    8f6c:	b	3eec <byteswap2@plt>

00008f70 <sas_subheader_remainder>:
    8f70:	add	r1, r1, #2
    8f74:	sub	r0, r0, r1, lsl #1
    8f78:	bx	lr

00008f7c <sas_read_header>:
    8f7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8f80:	vpush	{d8}
    8f84:	mov	r5, r0
    8f88:	mov	r4, r1
    8f8c:	mov	r9, r2
    8f90:	sub	sp, sp, #1408	; 0x580
    8f94:	sub	sp, sp, #4
    8f98:	add	r6, sp, #56	; 0x38
    8f9c:	mov	r2, #44	; 0x2c
    8fa0:	mov	r1, #0
    8fa4:	mov	r0, r6
    8fa8:	mov	sl, r3
    8fac:	bl	42e8 <memset@plt>
    8fb0:	mov	r3, #1
    8fb4:	str	r3, [sp, #68]	; 0x44
    8fb8:	mov	r0, r6
    8fbc:	mov	r3, #60	; 0x3c
    8fc0:	str	r3, [sp, #76]	; 0x4c
    8fc4:	bl	3e98 <mktime@plt>
    8fc8:	add	r6, sp, #220	; 0xdc
    8fcc:	ldr	r3, [r5, #12]
    8fd0:	ldr	r2, [r5, #20]
    8fd4:	mov	r1, #164	; 0xa4
    8fd8:	ldr	r7, [pc, #1360]	; 9530 <sas_read_header+0x5b4>
    8fdc:	add	r7, pc, r7
    8fe0:	vmov	s16, r0
    8fe4:	mov	r0, r6
    8fe8:	blx	r3
    8fec:	cmp	r0, #163	; 0xa3
    8ff0:	bhi	8ffc <sas_read_header+0x80>
    8ff4:	mov	r0, #2
    8ff8:	b	9048 <sas_read_header+0xcc>
    8ffc:	ldr	r3, [pc, #1328]	; 9534 <sas_read_header+0x5b8>
    9000:	mov	r2, #32
    9004:	mov	r0, r6
    9008:	ldr	r3, [r7, r3]
    900c:	mov	r1, r3
    9010:	str	r3, [sp, #12]
    9014:	bl	3fe8 <memcmp@plt>
    9018:	cmp	r0, #0
    901c:	beq	9058 <sas_read_header+0xdc>
    9020:	ldr	r3, [pc, #1296]	; 9538 <sas_read_header+0x5bc>
    9024:	mov	r2, #32
    9028:	mov	r0, r6
    902c:	ldr	r3, [r7, r3]
    9030:	mov	r1, r3
    9034:	str	r3, [sp, #12]
    9038:	bl	3fe8 <memcmp@plt>
    903c:	cmp	r0, #0
    9040:	beq	9058 <sas_read_header+0xdc>
    9044:	mov	r0, #5
    9048:	add	sp, sp, #1408	; 0x580
    904c:	add	sp, sp, #4
    9050:	vpop	{d8}
    9054:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9058:	ldrb	r3, [sp, #255]	; 0xff
    905c:	ldrb	r6, [sp, #257]	; 0x101
    9060:	cmp	r3, #51	; 0x33
    9064:	moveq	r3, #4
    9068:	streq	r3, [r4, #24]
    906c:	ldrb	r3, [sp, #252]	; 0xfc
    9070:	cmp	r3, #51	; 0x33
    9074:	moveq	r3, #1
    9078:	streq	r3, [r4, #4]
    907c:	cmp	r6, #0
    9080:	bne	910c <sas_read_header+0x190>
    9084:	bl	3ef8 <machine_is_little_endian@plt>
    9088:	mov	r7, r0
    908c:	ldr	r1, [pc, #1192]	; 953c <sas_read_header+0x5c0>
    9090:	ldrb	r3, [sp, #290]	; 0x122
    9094:	mov	r2, #0
    9098:	mov	ip, #36	; 0x24
    909c:	add	r1, pc, r1
    90a0:	str	r6, [r4]
    90a4:	mul	r0, ip, r2
    90a8:	ldr	lr, [r0, r1]
    90ac:	cmp	r3, lr
    90b0:	bne	9124 <sas_read_header+0x1a8>
    90b4:	add	r0, r0, #4
    90b8:	add	r1, r1, r0
    90bc:	str	r1, [r4, #144]	; 0x90
    90c0:	ldr	r2, [r4, #144]	; 0x90
    90c4:	cmp	r2, #0
    90c8:	addne	lr, sp, #312	; 0x138
    90cc:	addne	ip, r4, #80	; 0x50
    90d0:	addne	r2, sp, #376	; 0x178
    90d4:	bne	9134 <sas_read_header+0x1b8>
    90d8:	cmp	r9, #0
    90dc:	beq	9104 <sas_read_header+0x188>
    90e0:	ldr	r2, [pc, #1112]	; 9540 <sas_read_header+0x5c4>
    90e4:	add	r4, sp, #384	; 0x180
    90e8:	mov	r1, #1024	; 0x400
    90ec:	add	r2, pc, r2
    90f0:	mov	r0, r4
    90f4:	bl	42c4 <snprintf@plt>
    90f8:	mov	r1, sl
    90fc:	mov	r0, r4
    9100:	blx	r9
    9104:	mov	r0, #7
    9108:	b	9048 <sas_read_header+0xcc>
    910c:	cmp	r6, #1
    9110:	bne	9044 <sas_read_header+0xc8>
    9114:	bl	3ef8 <machine_is_little_endian@plt>
    9118:	clz	r7, r0
    911c:	lsr	r7, r7, #5
    9120:	b	908c <sas_read_header+0x110>
    9124:	add	r2, r2, #1
    9128:	cmp	r2, #62	; 0x3e
    912c:	bne	90a4 <sas_read_header+0x128>
    9130:	b	90c0 <sas_read_header+0x144>
    9134:	mov	r3, lr
    9138:	add	ip, ip, #8
    913c:	ldm	r3!, {r0, r1}
    9140:	cmp	r3, r2
    9144:	str	r0, [ip, #-8]
    9148:	str	r1, [ip, #-4]
    914c:	mov	lr, r3
    9150:	bne	9134 <sas_read_header+0x1b8>
    9154:	ldr	r3, [r5, #8]
    9158:	ldr	r2, [r5, #20]
    915c:	mov	r1, #1
    9160:	ldr	r0, [r4, #24]
    9164:	blx	r3
    9168:	cmn	r0, #1
    916c:	bne	9178 <sas_read_header+0x1fc>
    9170:	mov	r0, #15
    9174:	b	9048 <sas_read_header+0xcc>
    9178:	add	r6, sp, #48	; 0x30
    917c:	ldr	r3, [r5, #12]
    9180:	ldr	r2, [r5, #20]
    9184:	mov	r1, #8
    9188:	sub	r0, r6, #8
    918c:	blx	r3
    9190:	cmp	r0, #7
    9194:	bls	8ff4 <sas_read_header+0x78>
    9198:	cmp	r7, #0
    919c:	beq	91ac <sas_read_header+0x230>
    91a0:	vldr	d0, [r6, #-8]
    91a4:	bl	4558 <byteswap_double@plt>
    91a8:	vstr	d0, [r6, #-8]
    91ac:	ldr	r3, [r5, #12]
    91b0:	ldr	r2, [r5, #20]
    91b4:	mov	r1, #8
    91b8:	mov	r0, r6
    91bc:	blx	r3
    91c0:	cmp	r0, #7
    91c4:	bls	8ff4 <sas_read_header+0x78>
    91c8:	cmp	r7, #0
    91cc:	beq	91dc <sas_read_header+0x260>
    91d0:	vldr	d0, [r6]
    91d4:	bl	4558 <byteswap_double@plt>
    91d8:	vstr	d0, [r6]
    91dc:	vcvt.f64.s32	d7, s16
    91e0:	vldr	d6, [r6, #-8]
    91e4:	vadd.f64	d6, d7, d6
    91e8:	vcmp.f64	d6, d6
    91ec:	vmrs	APSR_nzcv, fpscr
    91f0:	movvs	r3, #0
    91f4:	bvs	9224 <sas_read_header+0x2a8>
    91f8:	vldr	d5, [pc, #800]	; 9520 <sas_read_header+0x5a4>
    91fc:	vcmpe.f64	d6, d5
    9200:	vmrs	APSR_nzcv, fpscr
    9204:	mvngt	r3, #-2147483648	; 0x80000000
    9208:	bgt	9224 <sas_read_header+0x2a8>
    920c:	vldr	d5, [pc, #788]	; 9528 <sas_read_header+0x5ac>
    9210:	vcmpe.f64	d6, d5
    9214:	vmrs	APSR_nzcv, fpscr
    9218:	vcvtpl.s32.f64	s13, d6
    921c:	movmi	r3, #-2147483648	; 0x80000000
    9220:	vmovpl	r3, s13
    9224:	vldr	d6, [r6]
    9228:	str	r3, [r4, #72]	; 0x48
    922c:	vadd.f64	d7, d7, d6
    9230:	vcmp.f64	d7, d7
    9234:	vmrs	APSR_nzcv, fpscr
    9238:	movvs	r3, #0
    923c:	bvs	926c <sas_read_header+0x2f0>
    9240:	vldr	d6, [pc, #728]	; 9520 <sas_read_header+0x5a4>
    9244:	vcmpe.f64	d7, d6
    9248:	vmrs	APSR_nzcv, fpscr
    924c:	mvngt	r3, #-2147483648	; 0x80000000
    9250:	bgt	926c <sas_read_header+0x2f0>
    9254:	vldr	d6, [pc, #716]	; 9528 <sas_read_header+0x5ac>
    9258:	vcmpe.f64	d7, d6
    925c:	vmrs	APSR_nzcv, fpscr
    9260:	vcvtpl.s32.f64	s15, d7
    9264:	movmi	r3, #-2147483648	; 0x80000000
    9268:	vmovpl	r3, s15
    926c:	str	r3, [r4, #76]	; 0x4c
    9270:	ldr	r2, [r5, #20]
    9274:	ldr	r3, [r5, #8]
    9278:	mov	r1, #1
    927c:	mov	r0, #16
    9280:	blx	r3
    9284:	cmn	r0, #1
    9288:	beq	9170 <sas_read_header+0x1f4>
    928c:	add	fp, sp, #32
    9290:	ldr	r3, [r5, #12]
    9294:	ldr	r2, [r5, #20]
    9298:	mov	r1, #4
    929c:	sub	r0, fp, #12
    92a0:	blx	r3
    92a4:	cmp	r0, #3
    92a8:	bls	8ff4 <sas_read_header+0x78>
    92ac:	ldr	r3, [r5, #12]
    92b0:	ldr	r2, [r5, #20]
    92b4:	mov	r1, #4
    92b8:	sub	r0, fp, #8
    92bc:	blx	r3
    92c0:	cmp	r0, #3
    92c4:	bls	8ff4 <sas_read_header+0x78>
    92c8:	cmp	r7, #0
    92cc:	ldr	r0, [sp, #20]
    92d0:	beq	92d8 <sas_read_header+0x35c>
    92d4:	bl	3dd8 <byteswap4@plt>
    92d8:	mov	r1, #0
    92dc:	cmp	r7, #0
    92e0:	strd	r0, [r4, #64]	; 0x40
    92e4:	ldreq	ip, [sp, #24]
    92e8:	beq	92f8 <sas_read_header+0x37c>
    92ec:	ldr	r0, [sp, #24]
    92f0:	bl	3dd8 <byteswap4@plt>
    92f4:	mov	ip, r0
    92f8:	ldrd	r0, [r4, #64]	; 0x40
    92fc:	mov	r2, ip
    9300:	mov	r3, #0
    9304:	subs	r0, r0, #1024	; 0x400
    9308:	strd	r2, [r4, #32]
    930c:	sbc	r1, r1, #0
    9310:	mov	r3, #0
    9314:	ldr	r2, [pc, #552]	; 9544 <sas_read_header+0x5c8>
    9318:	cmp	r1, r3
    931c:	cmpeq	r0, r2
    9320:	ldr	r3, [pc, #544]	; 9548 <sas_read_header+0x5cc>
    9324:	movhi	r0, #1
    9328:	movls	r0, #0
    932c:	sub	ip, ip, #1024	; 0x400
    9330:	cmp	ip, r3
    9334:	movls	ip, r0
    9338:	orrhi	ip, r0, #1
    933c:	cmp	ip, #0
    9340:	bne	9044 <sas_read_header+0xc8>
    9344:	ldr	r3, [r4, #4]
    9348:	add	r8, sp, #384	; 0x180
    934c:	cmp	r3, #0
    9350:	ldr	r3, [r5, #12]
    9354:	beq	9400 <sas_read_header+0x484>
    9358:	mov	r0, #40	; 0x28
    935c:	mov	r1, #0
    9360:	ldr	r2, [r5, #20]
    9364:	strd	r0, [r4, #40]	; 0x28
    9368:	mov	r0, #24
    936c:	mov	r1, #0
    9370:	strd	r0, [r4, #48]	; 0x30
    9374:	mov	r1, #8
    9378:	mov	r0, r8
    937c:	blx	r3
    9380:	cmp	r0, #7
    9384:	bls	8ff4 <sas_read_header+0x78>
    9388:	cmp	r7, #0
    938c:	ldrd	r0, [r8]
    9390:	beq	9398 <sas_read_header+0x41c>
    9394:	bl	3dc0 <byteswap8@plt>
    9398:	strd	r0, [r4, #56]	; 0x38
    939c:	ldrd	r2, [r4, #56]	; 0x38
    93a0:	mov	r0, #16777216	; 0x1000000
    93a4:	mov	r1, #0
    93a8:	cmp	r0, r2
    93ac:	sbcs	r3, r1, r3
    93b0:	blt	9044 <sas_read_header+0xc8>
    93b4:	ldr	r3, [r5, #8]
    93b8:	ldr	r2, [r5, #20]
    93bc:	mov	r1, #1
    93c0:	mov	r0, #8
    93c4:	blx	r3
    93c8:	cmn	r0, #1
    93cc:	bne	9448 <sas_read_header+0x4cc>
    93d0:	cmp	r9, #0
    93d4:	beq	9170 <sas_read_header+0x1f4>
    93d8:	ldr	r2, [pc, #364]	; 954c <sas_read_header+0x5d0>
    93dc:	mov	r3, #8
    93e0:	add	r2, pc, r2
    93e4:	mov	r1, #1024	; 0x400
    93e8:	mov	r0, r8
    93ec:	bl	42c4 <snprintf@plt>
    93f0:	mov	r1, sl
    93f4:	mov	r0, r8
    93f8:	blx	r9
    93fc:	b	9170 <sas_read_header+0x1f4>
    9400:	mov	r0, #24
    9404:	mov	r1, #0
    9408:	ldr	r2, [r5, #20]
    940c:	strd	r0, [r4, #40]	; 0x28
    9410:	mov	r0, #12
    9414:	mov	r1, #0
    9418:	strd	r0, [r4, #48]	; 0x30
    941c:	mov	r1, #4
    9420:	mov	r0, r8
    9424:	blx	r3
    9428:	cmp	r0, #3
    942c:	bls	8ff4 <sas_read_header+0x78>
    9430:	cmp	r7, #0
    9434:	ldr	r0, [sp, #384]	; 0x180
    9438:	beq	9440 <sas_read_header+0x4c4>
    943c:	bl	3dd8 <byteswap4@plt>
    9440:	mov	r1, #0
    9444:	b	9398 <sas_read_header+0x41c>
    9448:	add	r7, sp, #100	; 0x64
    944c:	ldr	r3, [r5, #12]
    9450:	ldr	r2, [r5, #20]
    9454:	mov	r1, #120	; 0x78
    9458:	mov	r0, r7
    945c:	blx	r3
    9460:	cmp	r0, #119	; 0x77
    9464:	bls	8ff4 <sas_read_header+0x78>
    9468:	ldr	r1, [pc, #224]	; 9550 <sas_read_header+0x5d4>
    946c:	sub	r6, r6, #12
    9470:	str	r6, [sp]
    9474:	mov	r3, fp
    9478:	sub	r2, fp, #4
    947c:	add	r1, pc, r1
    9480:	mov	r0, r7
    9484:	bl	42d0 <__isoc99_sscanf@plt>
    9488:	cmp	r0, #3
    948c:	bne	9044 <sas_read_header+0xc8>
    9490:	ldr	r3, [sp, #32]
    9494:	ldr	r1, [sp, #36]	; 0x24
    9498:	ldr	r2, [sp, #28]
    949c:	cmp	r3, #0
    94a0:	cmpeq	r1, #0
    94a4:	str	r3, [r4, #16]
    94a8:	str	r2, [r4, #12]
    94ac:	moveq	r3, #1
    94b0:	movne	r3, #0
    94b4:	sub	r2, r2, #8
    94b8:	cmp	r2, #1
    94bc:	movhi	r3, #0
    94c0:	andls	r3, r3, #1
    94c4:	cmp	r3, #0
    94c8:	movne	r3, #0
    94cc:	moveq	r3, #1
    94d0:	str	r1, [r4, #20]
    94d4:	str	r3, [r4, #8]
    94d8:	ldr	r2, [r5, #20]
    94dc:	ldr	r3, [r5, #8]
    94e0:	mov	r1, #0
    94e4:	ldr	r0, [r4, #64]	; 0x40
    94e8:	blx	r3
    94ec:	cmn	r0, #1
    94f0:	movne	r0, #0
    94f4:	bne	9048 <sas_read_header+0xcc>
    94f8:	cmp	r9, #0
    94fc:	beq	9170 <sas_read_header+0x1f4>
    9500:	ldrd	r2, [r4, #64]	; 0x40
    9504:	mov	r1, #1024	; 0x400
    9508:	mov	r0, r8
    950c:	strd	r2, [sp]
    9510:	ldr	r2, [pc, #60]	; 9554 <sas_read_header+0x5d8>
    9514:	add	r2, pc, r2
    9518:	bl	42c4 <snprintf@plt>
    951c:	b	93f0 <sas_read_header+0x474>
    9520:	.word	0xffc00000
    9524:	.word	0x41dfffff
    9528:	.word	0x00000000
    952c:	.word	0xc1e00000
    9530:	.word	0x0003801c
    9534:	.word	0x000002f8
    9538:	.word	0x000002c8
    953c:	.word	0x000382a4
    9540:	.word	0x00018840
    9544:	.word	0x000ffc00
    9548:	.word	0x00fffc00
    954c:	.word	0x0001856f
    9550:	.word	0x000184fa
    9554:	.word	0x0001846f

00009558 <sas_write_header>:
    9558:	sub	sp, sp, #8
    955c:	push	{r4, r5, r6, r7, r8, r9, lr}
    9560:	sub	sp, sp, #212	; 0xd4
    9564:	add	r8, sp, #240	; 0xf0
    9568:	mov	r5, r0
    956c:	stm	r8, {r2, r3}
    9570:	mov	r2, #44	; 0x2c
    9574:	add	r4, sp, r2
    9578:	mov	r0, r4
    957c:	mov	r6, r1
    9580:	mov	r1, #0
    9584:	bl	42e8 <memset@plt>
    9588:	mov	r3, #1
    958c:	str	r3, [sp, #56]	; 0x38
    9590:	mov	r0, r4
    9594:	mov	r3, #60	; 0x3c
    9598:	str	r3, [sp, #64]	; 0x40
    959c:	bl	3e98 <mktime@plt>
    95a0:	add	r4, sp, #332	; 0x14c
    95a4:	mov	r2, #64	; 0x40
    95a8:	mov	r1, #32
    95ac:	add	r9, r5, #88	; 0x58
    95b0:	mov	r7, r0
    95b4:	mov	r0, r4
    95b8:	bl	42e8 <memset@plt>
    95bc:	mov	r0, r9
    95c0:	bl	424c <strlen@plt>
    95c4:	cmp	r0, #64	; 0x40
    95c8:	bhi	97d4 <sas_write_header+0x27c>
    95cc:	cmp	r0, #0
    95d0:	mov	r2, r0
    95d4:	beq	97dc <sas_write_header+0x284>
    95d8:	mov	r1, r9
    95dc:	mov	r0, r4
    95e0:	bl	3f64 <memcpy@plt>
    95e4:	mov	r2, #164	; 0xa4
    95e8:	mov	r1, r8
    95ec:	mov	r0, r5
    95f0:	bl	44a4 <readstat_write_bytes@plt>
    95f4:	subs	r4, r0, #0
    95f8:	bne	97c0 <sas_write_header+0x268>
    95fc:	ldr	r1, [r6, #24]
    9600:	mov	r0, r5
    9604:	bl	4060 <readstat_write_zeros@plt>
    9608:	subs	r4, r0, #0
    960c:	bne	97c0 <sas_write_header+0x268>
    9610:	ldr	r3, [r6, #72]	; 0x48
    9614:	add	r1, sp, #208	; 0xd0
    9618:	sub	r3, r3, r7
    961c:	mov	r0, r5
    9620:	vmov	s15, r3
    9624:	vcvt.f64.s32	d7, s15
    9628:	vmov	r2, r3, d7
    962c:	strd	r2, [r1, #-192]!	; 0xffffff40
    9630:	mov	r2, #8
    9634:	bl	44a4 <readstat_write_bytes@plt>
    9638:	subs	r4, r0, #0
    963c:	bne	97c0 <sas_write_header+0x268>
    9640:	ldr	r3, [r6, #76]	; 0x4c
    9644:	add	r1, sp, #208	; 0xd0
    9648:	sub	r3, r3, r7
    964c:	mov	r0, r5
    9650:	vmov	s15, r3
    9654:	vcvt.f64.s32	d7, s15
    9658:	vmov	r2, r3, d7
    965c:	strd	r2, [r1, #-184]!	; 0xffffff48
    9660:	mov	r2, #8
    9664:	bl	44a4 <readstat_write_bytes@plt>
    9668:	subs	r4, r0, #0
    966c:	bne	97c0 <sas_write_header+0x268>
    9670:	mov	r1, #16
    9674:	mov	r0, r5
    9678:	bl	4060 <readstat_write_zeros@plt>
    967c:	subs	r4, r0, #0
    9680:	bne	97c0 <sas_write_header+0x268>
    9684:	ldr	r3, [r6, #64]	; 0x40
    9688:	mov	r2, #4
    968c:	str	r3, [sp, #8]
    9690:	ldr	r3, [r6, #32]
    9694:	add	r1, sp, #8
    9698:	mov	r0, r5
    969c:	str	r3, [sp, #12]
    96a0:	bl	44a4 <readstat_write_bytes@plt>
    96a4:	subs	r4, r0, #0
    96a8:	bne	97c0 <sas_write_header+0x268>
    96ac:	mov	r2, #4
    96b0:	add	r1, sp, #12
    96b4:	mov	r0, r5
    96b8:	bl	44a4 <readstat_write_bytes@plt>
    96bc:	subs	r4, r0, #0
    96c0:	bne	97c0 <sas_write_header+0x268>
    96c4:	ldr	r3, [r6, #4]
    96c8:	add	r7, sp, #88	; 0x58
    96cc:	cmp	r3, #0
    96d0:	moveq	r2, #4
    96d4:	ldreq	r3, [r6, #56]	; 0x38
    96d8:	streq	r3, [sp, #88]	; 0x58
    96dc:	ldrdne	r2, [r6, #56]	; 0x38
    96e0:	strdne	r2, [sp, #88]	; 0x58
    96e4:	movne	r2, #8
    96e8:	mov	r1, r7
    96ec:	mov	r0, r5
    96f0:	bl	44a4 <readstat_write_bytes@plt>
    96f4:	cmp	r0, #0
    96f8:	mov	r4, r0
    96fc:	bne	97c0 <sas_write_header+0x268>
    9700:	mov	r1, #8
    9704:	mov	r0, r5
    9708:	bl	4060 <readstat_write_zeros@plt>
    970c:	subs	r4, r0, #0
    9710:	bne	97c0 <sas_write_header+0x268>
    9714:	mov	r1, r4
    9718:	mov	r2, #120	; 0x78
    971c:	mov	r0, r7
    9720:	bl	42e8 <memset@plt>
    9724:	ldr	r2, [pc, #212]	; 9800 <sas_write_header+0x2a8>
    9728:	add	r3, sp, #96	; 0x60
    972c:	add	r2, pc, r2
    9730:	str	r4, [sp, #106]	; 0x6a
    9734:	ldr	r0, [r2]
    9738:	ldr	r1, [r2, #4]
    973c:	ldrh	r2, [r2, #8]
    9740:	strh	r4, [sp, #110]	; 0x6e
    9744:	stmia	r3!, {r0, r1}
    9748:	ldr	r0, [r5, #8]
    974c:	strh	r2, [r3]
    9750:	mov	r1, #10
    9754:	str	r4, [sp, #32]
    9758:	str	r4, [sp, #36]	; 0x24
    975c:	strb	r4, [sp, #40]	; 0x28
    9760:	bl	20808 <__aeabi_uidivmod>
    9764:	ldr	r2, [pc, #152]	; 9804 <sas_write_header+0x2ac>
    9768:	add	r4, sp, #32
    976c:	mov	r3, #101	; 0x65
    9770:	str	r3, [sp]
    9774:	add	r2, pc, r2
    9778:	mov	r0, r4
    977c:	mov	r3, r1
    9780:	mov	r1, #9
    9784:	bl	42c4 <snprintf@plt>
    9788:	ldm	r4, {r0, r1}
    978c:	mov	r2, #120	; 0x78
    9790:	stm	r7, {r0, r1}
    9794:	mov	r1, r7
    9798:	mov	r0, r5
    979c:	bl	44a4 <readstat_write_bytes@plt>
    97a0:	subs	r4, r0, #0
    97a4:	bne	97c0 <sas_write_header+0x268>
    97a8:	ldr	r1, [r6, #64]	; 0x40
    97ac:	ldr	r3, [r5, #4]
    97b0:	mov	r0, r5
    97b4:	sub	r1, r1, r3
    97b8:	bl	4060 <readstat_write_zeros@plt>
    97bc:	mov	r4, r0
    97c0:	mov	r0, r4
    97c4:	add	sp, sp, #212	; 0xd4
    97c8:	pop	{r4, r5, r6, r7, r8, r9, lr}
    97cc:	add	sp, sp, #8
    97d0:	bx	lr
    97d4:	mov	r2, #64	; 0x40
    97d8:	b	95d8 <sas_write_header+0x80>
    97dc:	ldr	r3, [pc, #36]	; 9808 <sas_write_header+0x2b0>
    97e0:	add	r3, pc, r3
    97e4:	ldr	r2, [r3]
    97e8:	str	r2, [r4]
    97ec:	ldrh	r2, [r3, #4]
    97f0:	ldrb	r3, [r3, #6]
    97f4:	strh	r2, [r4, #4]
    97f8:	strb	r3, [r4, #6]
    97fc:	b	95e4 <sas_write_header+0x8c>
    9800:	.word	0x000181f0
    9804:	.word	0x00018241
    9808:	.word	0x000181cd

0000980c <sas_header_info_init>:
    980c:	push	{r4, r5, r6, lr}
    9810:	mov	r5, r0
    9814:	mov	r4, r1
    9818:	mov	r0, #1
    981c:	mov	r1, #152	; 0x98
    9820:	bl	3d9c <calloc@plt>
    9824:	ldr	r3, [r5, #20]
    9828:	mov	r2, #4096	; 0x1000
    982c:	cmp	r4, #0
    9830:	str	r3, [r0, #72]	; 0x48
    9834:	str	r3, [r0, #76]	; 0x4c
    9838:	mov	r3, #0
    983c:	strd	r2, [r0, #32]
    9840:	movne	r3, #1
    9844:	moveq	r3, #0
    9848:	str	r3, [r0, #4]
    984c:	beq	9878 <sas_header_info_init+0x6c>
    9850:	mov	r2, #8192	; 0x2000
    9854:	mov	r3, #0
    9858:	strd	r2, [r0, #64]	; 0x40
    985c:	mov	r2, #40	; 0x28
    9860:	mov	r3, #0
    9864:	strd	r2, [r0, #40]	; 0x28
    9868:	mov	r2, #24
    986c:	mov	r3, #0
    9870:	strd	r2, [r0, #48]	; 0x30
    9874:	pop	{r4, r5, r6, pc}
    9878:	mov	r2, #1024	; 0x400
    987c:	mov	r3, #0
    9880:	strd	r2, [r0, #64]	; 0x40
    9884:	mov	r2, #24
    9888:	mov	r3, #0
    988c:	strd	r2, [r0, #40]	; 0x28
    9890:	mov	r2, #12
    9894:	b	986c <sas_header_info_init+0x60>

00009898 <sas_fill_page>:
    9898:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    989c:	mov	r4, r0
    98a0:	ldrd	r6, [r1, #64]	; 0x40
    98a4:	ldr	r0, [r0, #4]
    98a8:	ldr	r5, [r1, #32]
    98ac:	subs	r8, r0, r6
    98b0:	rsc	r9, r7, #0
    98b4:	ldr	r3, [r1, #36]	; 0x24
    98b8:	mov	r2, r5
    98bc:	mov	r0, r8
    98c0:	mov	r1, r9
    98c4:	bl	20e3c <__aeabi_ldivmod>
    98c8:	orrs	r1, r2, r3
    98cc:	beq	98e0 <sas_fill_page+0x48>
    98d0:	sub	r1, r5, r2
    98d4:	mov	r0, r4
    98d8:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    98dc:	b	4060 <readstat_write_zeros@plt>
    98e0:	mov	r0, #0
    98e4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

000098e8 <sas_validate_name>:
    98e8:	sub	ip, r0, #1
    98ec:	ldrb	r3, [ip, #1]!
    98f0:	cmp	r3, #0
    98f4:	bne	99b4 <sas_validate_name+0xcc>
    98f8:	ldrb	r3, [r0]
    98fc:	cmp	r3, #0
    9900:	beq	99e0 <sas_validate_name+0xf8>
    9904:	cmp	r3, #95	; 0x5f
    9908:	beq	991c <sas_validate_name+0x34>
    990c:	bic	r3, r3, #32
    9910:	sub	r3, r3, #65	; 0x41
    9914:	cmp	r3, #25
    9918:	bhi	99e8 <sas_validate_name+0x100>
    991c:	push	{r4, r5, r6, lr}
    9920:	mov	r4, r1
    9924:	ldr	r1, [pc, #204]	; 99f8 <sas_validate_name+0x110>
    9928:	mov	r5, r0
    992c:	add	r1, pc, r1
    9930:	bl	3e44 <strcmp@plt>
    9934:	cmp	r0, #0
    9938:	beq	99f0 <sas_validate_name+0x108>
    993c:	ldr	r1, [pc, #184]	; 99fc <sas_validate_name+0x114>
    9940:	mov	r0, r5
    9944:	add	r1, pc, r1
    9948:	bl	3e44 <strcmp@plt>
    994c:	cmp	r0, #0
    9950:	beq	99f0 <sas_validate_name+0x108>
    9954:	ldr	r1, [pc, #164]	; 9a00 <sas_validate_name+0x118>
    9958:	mov	r0, r5
    995c:	add	r1, pc, r1
    9960:	bl	3e44 <strcmp@plt>
    9964:	cmp	r0, #0
    9968:	beq	99f0 <sas_validate_name+0x108>
    996c:	ldr	r1, [pc, #144]	; 9a04 <sas_validate_name+0x11c>
    9970:	mov	r0, r5
    9974:	add	r1, pc, r1
    9978:	bl	3e44 <strcmp@plt>
    997c:	cmp	r0, #0
    9980:	beq	99f0 <sas_validate_name+0x108>
    9984:	ldr	r1, [pc, #124]	; 9a08 <sas_validate_name+0x120>
    9988:	mov	r0, r5
    998c:	add	r1, pc, r1
    9990:	bl	3e44 <strcmp@plt>
    9994:	cmp	r0, #0
    9998:	beq	99f0 <sas_validate_name+0x108>
    999c:	mov	r0, r5
    99a0:	bl	424c <strlen@plt>
    99a4:	cmp	r4, r0
    99a8:	movcc	r0, #28
    99ac:	movcs	r0, #0
    99b0:	pop	{r4, r5, r6, pc}
    99b4:	cmp	r3, #95	; 0x5f
    99b8:	beq	98ec <sas_validate_name+0x4>
    99bc:	bic	r2, r3, #32
    99c0:	sub	r2, r2, #65	; 0x41
    99c4:	cmp	r2, #25
    99c8:	bls	98ec <sas_validate_name+0x4>
    99cc:	sub	r3, r3, #48	; 0x30
    99d0:	cmp	r3, #9
    99d4:	bls	98ec <sas_validate_name+0x4>
    99d8:	mov	r0, #26
    99dc:	bx	lr
    99e0:	mov	r0, #38	; 0x26
    99e4:	bx	lr
    99e8:	mov	r0, #25
    99ec:	bx	lr
    99f0:	mov	r0, #27
    99f4:	pop	{r4, r5, r6, pc}
    99f8:	.word	0x00018094
    99fc:	.word	0x00018080
    9a00:	.word	0x00018070
    9a04:	.word	0x00018062
    9a08:	.word	0x00018056

00009a0c <sas_validate_variable>:
    9a0c:	push	{r4, lr}
    9a10:	bl	43b4 <readstat_variable_get_name@plt>
    9a14:	mov	r1, #32
    9a18:	pop	{r4, lr}
    9a1c:	b	3d90 <sas_validate_name@plt>

00009a20 <sas_validate_tag>:
    9a20:	sub	r3, r0, #65	; 0x41
    9a24:	cmp	r0, #95	; 0x5f
    9a28:	cmpne	r3, #25
    9a2c:	movhi	r0, #21
    9a30:	movls	r0, #0
    9a34:	bx	lr

00009a38 <sas_assign_tag>:
    9a38:	push	{r4, r5, r6, lr}
    9a3c:	subs	r4, r1, #0
    9a40:	mov	r5, r0
    9a44:	moveq	r4, #95	; 0x5f
    9a48:	beq	9a5c <sas_assign_tag+0x24>
    9a4c:	sub	r3, r4, #2
    9a50:	cmp	r3, #25
    9a54:	addls	r4, r4, #63	; 0x3f
    9a58:	uxtbls	r4, r4
    9a5c:	mov	r0, r4
    9a60:	bl	4198 <sas_validate_tag@plt>
    9a64:	cmp	r0, #0
    9a68:	movne	r3, #0
    9a6c:	ldrbeq	r3, [r5, #13]
    9a70:	strbne	r3, [r5, #12]
    9a74:	ldrbne	r3, [r5, #13]
    9a78:	orreq	r3, r3, #2
    9a7c:	strbeq	r4, [r5, #12]
    9a80:	orrne	r3, r3, #1
    9a84:	strb	r3, [r5, #13]
    9a88:	pop	{r4, r5, r6, pc}
    9a8c:	andeq	r0, r0, r0

00009a90 <compare_block_pointers>:
    9a90:	ldr	r0, [r0]
    9a94:	ldr	r3, [r1]
    9a98:	sub	r0, r0, r3
    9a9c:	bx	lr

00009aa0 <sas7bcat_augment_index>:
    9aa0:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9aa4:	mov	r4, r2
    9aa8:	ldr	sl, [pc, #296]	; 9bd8 <sas7bcat_augment_index+0x138>
    9aac:	ldr	fp, [pc, #296]	; 9bdc <sas7bcat_augment_index+0x13c>
    9ab0:	mov	r5, r0
    9ab4:	add	r9, r0, r1
    9ab8:	add	sl, pc, sl
    9abc:	add	fp, pc, fp
    9ac0:	ldr	r3, [r4, #32]
    9ac4:	add	r3, r5, r3
    9ac8:	cmp	r3, r9
    9acc:	bls	9adc <sas7bcat_augment_index+0x3c>
    9ad0:	mov	r0, #0
    9ad4:	add	sp, sp, #12
    9ad8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9adc:	mov	r2, #4
    9ae0:	mov	r1, sl
    9ae4:	mov	r0, r5
    9ae8:	bl	3fe8 <memcmp@plt>
    9aec:	mov	r2, #4
    9af0:	mov	r1, fp
    9af4:	cmp	r0, #0
    9af8:	addne	r5, r5, #8
    9afc:	mov	r0, r5
    9b00:	bl	3fe8 <memcmp@plt>
    9b04:	cmp	r0, #0
    9b08:	bne	9ad0 <sas7bcat_augment_index+0x30>
    9b0c:	ldr	r3, [r4, #48]	; 0x30
    9b10:	ldrb	r3, [r5, r3]
    9b14:	cmp	r3, #79	; 0x4f
    9b18:	bne	9b6c <sas7bcat_augment_index+0xcc>
    9b1c:	ldr	r3, [r4, #16]
    9b20:	cmp	r3, #0
    9b24:	add	r3, r5, #8
    9b28:	beq	9b88 <sas7bcat_augment_index+0xe8>
    9b2c:	ldr	r1, [r4, #24]
    9b30:	mov	r0, r3
    9b34:	bl	4444 <sas_read4@plt>
    9b38:	ldr	r1, [r4, #24]
    9b3c:	mov	r8, r0
    9b40:	add	r0, r5, #16
    9b44:	bl	4444 <sas_read4@plt>
    9b48:	ldr	r3, [r4, #84]	; 0x54
    9b4c:	mov	r6, #0
    9b50:	add	r1, r3, #1
    9b54:	adds	r0, r6, r0
    9b58:	ldr	ip, [r4, #80]	; 0x50
    9b5c:	str	r1, [r4, #84]	; 0x54
    9b60:	lsl	r3, r3, #3
    9b64:	adc	r1, r8, #0
    9b68:	strd	r0, [ip, r3]
    9b6c:	ldr	r1, [r4, #84]	; 0x54
    9b70:	ldr	r3, [r4, #88]	; 0x58
    9b74:	cmp	r1, r3
    9b78:	beq	9bb0 <sas7bcat_augment_index+0x110>
    9b7c:	ldr	r3, [r4, #32]
    9b80:	add	r5, r5, r3
    9b84:	b	9ac0 <sas7bcat_augment_index+0x20>
    9b88:	ldr	r1, [r4, #24]
    9b8c:	add	r0, r5, #4
    9b90:	str	r3, [sp, #4]
    9b94:	bl	4420 <sas_read2@plt>
    9b98:	ldr	r3, [sp, #4]
    9b9c:	ldr	r1, [r4, #24]
    9ba0:	mov	r8, r0
    9ba4:	mov	r0, r3
    9ba8:	bl	4420 <sas_read2@plt>
    9bac:	b	9b48 <sas7bcat_augment_index+0xa8>
    9bb0:	lsl	r3, r1, #1
    9bb4:	str	r3, [r4, #88]	; 0x58
    9bb8:	lsl	r1, r1, #4
    9bbc:	ldr	r0, [r4, #80]	; 0x50
    9bc0:	bl	4330 <readstat_realloc@plt>
    9bc4:	cmp	r0, #0
    9bc8:	str	r0, [r4, #80]	; 0x50
    9bcc:	bne	9b7c <sas7bcat_augment_index+0xdc>
    9bd0:	mov	r0, #3
    9bd4:	b	9ad4 <sas7bcat_augment_index+0x34>
    9bd8:	.word	0x00017f30
    9bdc:	.word	0x00017f2c

00009be0 <readstat_parse_sas7bcat>:
    9be0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9be4:	vpush	{d8}
    9be8:	mov	r5, r0
    9bec:	mov	r7, r1
    9bf0:	mov	r1, #104	; 0x68
    9bf4:	add	fp, sp, #40	; 0x28
    9bf8:	sub	sp, sp, #436	; 0x1b4
    9bfc:	ldr	r3, [r0, #32]
    9c00:	mov	r0, #1
    9c04:	mov	r6, r2
    9c08:	str	r3, [fp, #-400]	; 0xfffffe70
    9c0c:	bl	3d9c <calloc@plt>
    9c10:	mov	r1, #152	; 0x98
    9c14:	mov	r4, r0
    9c18:	mov	r0, #1
    9c1c:	bl	3d9c <calloc@plt>
    9c20:	mov	r3, #200	; 0xc8
    9c24:	str	r3, [r4, #88]	; 0x58
    9c28:	mov	r8, r0
    9c2c:	mov	r0, #1600	; 0x640
    9c30:	bl	415c <malloc@plt>
    9c34:	ldr	r3, [r5, #20]
    9c38:	ldr	r2, [fp, #-400]	; 0xfffffe70
    9c3c:	str	r3, [r4, #4]
    9c40:	ldr	r3, [r5]
    9c44:	str	r6, [r4, #8]
    9c48:	str	r3, [r4]
    9c4c:	ldr	r3, [r5, #36]	; 0x24
    9c50:	ldr	r1, [r2, #20]
    9c54:	str	r3, [r4, #92]	; 0x5c
    9c58:	ldr	r3, [r5, #40]	; 0x28
    9c5c:	str	r3, [r4, #96]	; 0x60
    9c60:	ldr	r3, [fp, #-400]	; 0xfffffe70
    9c64:	str	r3, [r4, #12]
    9c68:	ldr	r3, [r3]
    9c6c:	str	r0, [r4, #80]	; 0x50
    9c70:	mov	r0, r7
    9c74:	blx	r3
    9c78:	cmn	r0, #1
    9c7c:	beq	a874 <readstat_parse_sas7bcat+0xc94>
    9c80:	mov	r3, r6
    9c84:	ldr	r2, [r5, #24]
    9c88:	mov	r1, r8
    9c8c:	ldr	r0, [fp, #-400]	; 0xfffffe70
    9c90:	bl	43f0 <sas_read_header@plt>
    9c94:	subs	r3, r0, #0
    9c98:	str	r3, [fp, #-396]	; 0xfffffe74
    9c9c:	bne	a87c <readstat_parse_sas7bcat+0xc9c>
    9ca0:	ldr	r3, [r8, #4]
    9ca4:	str	r3, [r4, #16]
    9ca8:	ldr	r3, [r8, #24]
    9cac:	str	r3, [r4, #20]
    9cb0:	bl	3ef8 <machine_is_little_endian@plt>
    9cb4:	ldr	r3, [r8]
    9cb8:	ldr	ip, [r4, #16]
    9cbc:	eor	r0, r0, r3
    9cc0:	ldrd	r2, [r8, #64]	; 0x40
    9cc4:	str	r0, [r4, #24]
    9cc8:	strd	r2, [r4, #72]	; 0x48
    9ccc:	ldrd	r2, [r8, #56]	; 0x38
    9cd0:	strd	r2, [r4, #56]	; 0x38
    9cd4:	ldrd	r2, [r8, #32]
    9cd8:	strd	r2, [r4, #64]	; 0x40
    9cdc:	ldr	r3, [r4, #92]	; 0x5c
    9ce0:	ldr	r2, [r4, #20]
    9ce4:	cmp	r3, #0
    9ce8:	add	r6, r2, #212	; 0xd4
    9cec:	ldreq	r3, [r8, #144]	; 0x90
    9cf0:	mov	r0, r6
    9cf4:	asr	r1, r6, #31
    9cf8:	streq	r3, [r4, #92]	; 0x5c
    9cfc:	sub	r3, fp, #396	; 0x18c
    9d00:	strd	r0, [r4, #32]
    9d04:	strd	r0, [r3]
    9d08:	add	r0, r2, #428	; 0x1ac
    9d0c:	add	r2, r2, #50	; 0x32
    9d10:	lsl	r0, r0, #1
    9d14:	asr	r1, r2, #31
    9d18:	mov	r6, r0
    9d1c:	asr	r7, r0, #31
    9d20:	mov	r3, r1
    9d24:	cmp	ip, #0
    9d28:	strd	r6, [r4, #40]	; 0x28
    9d2c:	strd	r2, [r4, #48]	; 0x30
    9d30:	beq	9d60 <readstat_parse_sas7bcat+0x180>
    9d34:	adds	r0, r6, #144	; 0x90
    9d38:	adc	r1, r7, #0
    9d3c:	strd	r0, [r4, #40]	; 0x28
    9d40:	sub	r1, fp, #396	; 0x18c
    9d44:	ldrd	r6, [r1]
    9d48:	adds	r6, r6, #72	; 0x48
    9d4c:	adc	r7, r7, #0
    9d50:	adds	r2, r2, #24
    9d54:	adc	r3, r3, #0
    9d58:	strd	r6, [r4, #32]
    9d5c:	strd	r2, [r4, #48]	; 0x30
    9d60:	ldr	r6, [r4, #92]	; 0x5c
    9d64:	cmp	r6, #0
    9d68:	beq	9da4 <readstat_parse_sas7bcat+0x1c4>
    9d6c:	ldr	r5, [r4, #96]	; 0x60
    9d70:	cmp	r5, #0
    9d74:	beq	9da4 <readstat_parse_sas7bcat+0x1c4>
    9d78:	mov	r1, r5
    9d7c:	mov	r0, r6
    9d80:	bl	3e44 <strcmp@plt>
    9d84:	cmp	r0, #0
    9d88:	beq	9da4 <readstat_parse_sas7bcat+0x1c4>
    9d8c:	mov	r1, r6
    9d90:	mov	r0, r5
    9d94:	bl	4180 <iconv_open@plt>
    9d98:	cmn	r0, #1
    9d9c:	beq	a888 <readstat_parse_sas7bcat+0xca8>
    9da0:	str	r0, [r4, #100]	; 0x64
    9da4:	ldr	r3, [r4]
    9da8:	cmp	r3, #0
    9dac:	beq	9e58 <readstat_parse_sas7bcat+0x278>
    9db0:	sub	r5, fp, #372	; 0x174
    9db4:	mov	r2, #56	; 0x38
    9db8:	mov	r1, #0
    9dbc:	mov	r0, r5
    9dc0:	bl	42e8 <memset@plt>
    9dc4:	ldr	r3, [r8, #72]	; 0x48
    9dc8:	ldr	r2, [r8, #12]
    9dcc:	str	r3, [fp, #-356]	; 0xfffffe9c
    9dd0:	ldr	r3, [r8, #76]	; 0x4c
    9dd4:	sub	r1, fp, #364	; 0x16c
    9dd8:	str	r3, [fp, #-352]	; 0xfffffea0
    9ddc:	asr	r3, r2, #31
    9de0:	sub	r6, fp, #304	; 0x130
    9de4:	strd	r2, [r1, #16]
    9de8:	mov	r2, r8
    9dec:	ldr	r1, [pc, #1500]	; a3d0 <readstat_parse_sas7bcat+0x7f0>
    9df0:	ldr	r3, [r2], #80	; 0x50
    9df4:	mov	r0, r6
    9df8:	cmp	r3, #0
    9dfc:	movne	r3, #1
    9e00:	moveq	r3, #2
    9e04:	str	r3, [fp, #-336]	; 0xfffffeb0
    9e08:	ldr	r3, [r4, #92]	; 0x5c
    9e0c:	str	r3, [fp, #-324]	; 0xfffffebc
    9e10:	ldr	r3, [r4, #16]
    9e14:	and	r3, r3, #1
    9e18:	strb	r3, [fp, #-320]	; 0xfffffec0
    9e1c:	ldr	r3, [r4, #100]	; 0x64
    9e20:	str	r3, [sp]
    9e24:	mov	r3, #64	; 0x40
    9e28:	bl	427c <readstat_convert@plt>
    9e2c:	subs	r3, r0, #0
    9e30:	str	r3, [fp, #-396]	; 0xfffffe74
    9e34:	bne	a87c <readstat_parse_sas7bcat+0xc9c>
    9e38:	ldr	r3, [r4]
    9e3c:	str	r6, [fp, #-328]	; 0xfffffeb8
    9e40:	ldr	r1, [r4, #8]
    9e44:	mov	r0, r5
    9e48:	blx	r3
    9e4c:	cmp	r0, #0
    9e50:	movne	r3, #4
    9e54:	bne	a878 <readstat_parse_sas7bcat+0xc98>
    9e58:	ldr	r0, [r4, #64]	; 0x40
    9e5c:	bl	4270 <readstat_malloc@plt>
    9e60:	subs	r3, r0, #0
    9e64:	str	r3, [fp, #-404]	; 0xfffffe6c
    9e68:	beq	a890 <readstat_parse_sas7bcat+0xcb0>
    9e6c:	ldr	r3, [fp, #-400]	; 0xfffffe70
    9e70:	ldr	r2, [fp, #-400]	; 0xfffffe70
    9e74:	ldr	ip, [r4, #72]	; 0x48
    9e78:	ldr	r0, [r4, #64]	; 0x40
    9e7c:	ldr	r3, [r3, #8]
    9e80:	ldr	r2, [r2, #20]
    9e84:	mov	r1, #0
    9e88:	add	r0, ip, r0
    9e8c:	blx	r3
    9e90:	cmn	r0, #1
    9e94:	beq	a89c <readstat_parse_sas7bcat+0xcbc>
    9e98:	ldr	r3, [fp, #-400]	; 0xfffffe70
    9e9c:	ldr	r2, [fp, #-400]	; 0xfffffe70
    9ea0:	ldr	r1, [r4, #64]	; 0x40
    9ea4:	ldr	r3, [r3, #12]
    9ea8:	ldr	r2, [r2, #20]
    9eac:	ldr	r0, [fp, #-404]	; 0xfffffe6c
    9eb0:	blx	r3
    9eb4:	ldrd	r6, [r4, #64]	; 0x40
    9eb8:	asr	r1, r0, #31
    9ebc:	cmp	r0, r6
    9ec0:	sbcs	r3, r1, r7
    9ec4:	blt	a8a8 <readstat_parse_sas7bcat+0xcc8>
    9ec8:	ldr	r0, [r4, #40]	; 0x28
    9ecc:	ldr	r3, [fp, #-404]	; 0xfffffe6c
    9ed0:	sub	r1, r6, r0
    9ed4:	mov	r2, r4
    9ed8:	add	r0, r3, r0
    9edc:	bl	9aa0 <sas7bcat_augment_index>
    9ee0:	subs	r3, r0, #0
    9ee4:	str	r3, [fp, #-396]	; 0xfffffe74
    9ee8:	bne	9f38 <readstat_parse_sas7bcat+0x358>
    9eec:	ldr	r3, [fp, #-404]	; 0xfffffe6c
    9ef0:	ldr	sl, [pc, #1244]	; a3d4 <readstat_parse_sas7bcat+0x7f4>
    9ef4:	mov	r6, #3
    9ef8:	mov	r7, #0
    9efc:	add	r5, r3, #16
    9f00:	add	sl, pc, sl
    9f04:	ldrd	r2, [r4, #56]	; 0x38
    9f08:	cmp	r6, r2
    9f0c:	sbcs	r3, r7, r3
    9f10:	blt	9f40 <readstat_parse_sas7bcat+0x360>
    9f14:	ldr	r1, [r4, #84]	; 0x54
    9f18:	cmp	r1, #0
    9f1c:	movne	ip, #1
    9f20:	bne	9ff8 <readstat_parse_sas7bcat+0x418>
    9f24:	ldr	r6, [r4, #84]	; 0x54
    9f28:	cmp	r6, #0
    9f2c:	movne	ip, #1
    9f30:	movne	lr, ip
    9f34:	bne	a06c <readstat_parse_sas7bcat+0x48c>
    9f38:	mov	r9, #0
    9f3c:	b	a0ac <readstat_parse_sas7bcat+0x4cc>
    9f40:	ldr	ip, [r4, #64]	; 0x40
    9f44:	ldr	r3, [fp, #-400]	; 0xfffffe70
    9f48:	ldr	r2, [fp, #-400]	; 0xfffffe70
    9f4c:	ldr	r0, [r4, #72]	; 0x48
    9f50:	ldr	r3, [r3, #8]
    9f54:	ldr	r2, [r2, #20]
    9f58:	mov	r1, #0
    9f5c:	mla	r0, ip, r6, r0
    9f60:	blx	r3
    9f64:	cmn	r0, #1
    9f68:	beq	a89c <readstat_parse_sas7bcat+0xcbc>
    9f6c:	ldr	r3, [fp, #-400]	; 0xfffffe70
    9f70:	ldr	r2, [fp, #-400]	; 0xfffffe70
    9f74:	ldr	r1, [r4, #64]	; 0x40
    9f78:	ldr	r3, [r3, #12]
    9f7c:	ldr	r2, [r2, #20]
    9f80:	ldr	r0, [fp, #-404]	; 0xfffffe6c
    9f84:	blx	r3
    9f88:	ldrd	r2, [r4, #64]	; 0x40
    9f8c:	sub	r1, fp, #412	; 0x19c
    9f90:	strd	r2, [r1]
    9f94:	sub	r3, fp, #412	; 0x19c
    9f98:	ldrd	r2, [r3]
    9f9c:	asr	r1, r0, #31
    9fa0:	cmp	r0, r2
    9fa4:	sbcs	r3, r1, r3
    9fa8:	blt	a8a8 <readstat_parse_sas7bcat+0xcc8>
    9fac:	mov	r2, #4
    9fb0:	mov	r1, sl
    9fb4:	mov	r0, r5
    9fb8:	bl	3fe8 <memcmp@plt>
    9fbc:	subs	r9, r0, #0
    9fc0:	beq	9fd0 <readstat_parse_sas7bcat+0x3f0>
    9fc4:	adds	r6, r6, #1
    9fc8:	adc	r7, r7, #0
    9fcc:	b	9f04 <readstat_parse_sas7bcat+0x324>
    9fd0:	ldr	r3, [fp, #-412]	; 0xfffffe64
    9fd4:	mov	r2, r4
    9fd8:	sub	r1, r3, #16
    9fdc:	mov	r0, r5
    9fe0:	bl	9aa0 <sas7bcat_augment_index>
    9fe4:	cmp	r0, #0
    9fe8:	beq	9fc4 <readstat_parse_sas7bcat+0x3e4>
    9fec:	str	r0, [fp, #-396]	; 0xfffffe74
    9ff0:	b	a0ac <readstat_parse_sas7bcat+0x4cc>
    9ff4:	add	ip, ip, #1
    9ff8:	cmp	r1, ip
    9ffc:	ble	9f24 <readstat_parse_sas7bcat+0x344>
    a000:	ldr	r0, [r4, #80]	; 0x50
    a004:	lsl	r3, ip, #3
    a008:	add	r2, r0, r3
    a00c:	ldrd	r6, [r0, r3]
    a010:	ldrd	r2, [r2, #-8]
    a014:	cmp	r7, r3
    a018:	cmpeq	r6, r2
    a01c:	bcs	9ff4 <readstat_parse_sas7bcat+0x414>
    a020:	ldr	r3, [pc, #944]	; a3d8 <readstat_parse_sas7bcat+0x7f8>
    a024:	mov	r2, #8
    a028:	add	r3, pc, r3
    a02c:	bl	448c <qsort@plt>
    a030:	b	9f24 <readstat_parse_sas7bcat+0x344>
    a034:	ldr	r5, [r4, #80]	; 0x50
    a038:	lsl	r3, lr, #3
    a03c:	mov	r1, r5
    a040:	add	r1, r1, r3
    a044:	ldrd	r2, [r1]
    a048:	ldrd	r0, [r1, #-8]
    a04c:	cmp	r3, r1
    a050:	cmpeq	r2, r0
    a054:	beq	a068 <readstat_parse_sas7bcat+0x488>
    a058:	cmp	lr, ip
    a05c:	lslne	r1, ip, #3
    a060:	strdne	r2, [r5, r1]
    a064:	add	ip, ip, #1
    a068:	add	lr, lr, #1
    a06c:	cmp	r6, lr
    a070:	bgt	a034 <readstat_parse_sas7bcat+0x454>
    a074:	vldr	d8, [pc, #844]	; a3c8 <readstat_parse_sas7bcat+0x7e8>
    a078:	mov	r2, #0
    a07c:	mov	r3, #0
    a080:	sub	r1, fp, #428	; 0x1ac
    a084:	mov	r9, #0
    a088:	str	ip, [r4, #84]	; 0x54
    a08c:	strd	r2, [r1]
    a090:	sub	r1, fp, #428	; 0x1ac
    a094:	ldr	r2, [r4, #84]	; 0x54
    a098:	ldrd	r0, [r1]
    a09c:	asr	r3, r2, #31
    a0a0:	cmp	r0, r2
    a0a4:	sbcs	r3, r1, r3
    a0a8:	blt	a12c <readstat_parse_sas7bcat+0x54c>
    a0ac:	ldr	r3, [fp, #-400]	; 0xfffffe70
    a0b0:	ldr	r2, [fp, #-400]	; 0xfffffe70
    a0b4:	ldr	r3, [r3, #4]
    a0b8:	ldr	r0, [r2, #20]
    a0bc:	blx	r3
    a0c0:	ldr	r3, [fp, #-404]	; 0xfffffe6c
    a0c4:	cmp	r3, #0
    a0c8:	beq	a0d4 <readstat_parse_sas7bcat+0x4f4>
    a0cc:	mov	r0, r3
    a0d0:	bl	3f04 <free@plt>
    a0d4:	cmp	r9, #0
    a0d8:	beq	a0e4 <readstat_parse_sas7bcat+0x504>
    a0dc:	mov	r0, r9
    a0e0:	bl	3f04 <free@plt>
    a0e4:	ldr	r0, [r4, #100]	; 0x64
    a0e8:	cmp	r0, #0
    a0ec:	beq	a0f4 <readstat_parse_sas7bcat+0x514>
    a0f0:	bl	3e14 <iconv_close@plt>
    a0f4:	ldr	r0, [r4, #80]	; 0x50
    a0f8:	cmp	r0, #0
    a0fc:	beq	a104 <readstat_parse_sas7bcat+0x524>
    a100:	bl	3f04 <free@plt>
    a104:	mov	r0, r4
    a108:	bl	3f04 <free@plt>
    a10c:	cmp	r8, #0
    a110:	beq	a11c <readstat_parse_sas7bcat+0x53c>
    a114:	mov	r0, r8
    a118:	bl	3f04 <free@plt>
    a11c:	ldr	r0, [fp, #-396]	; 0xfffffe74
    a120:	sub	sp, fp, #40	; 0x28
    a124:	vpop	{d8}
    a128:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a12c:	ldr	r3, [fp, #-428]	; 0xfffffe54
    a130:	ldr	r2, [r4, #80]	; 0x50
    a134:	sub	r5, fp, #304	; 0x130
    a138:	lsl	r3, r3, #3
    a13c:	add	r1, r2, r3
    a140:	ldr	r0, [r2, r3]
    a144:	ldr	r3, [r1, #4]
    a148:	mov	r2, #0
    a14c:	str	r3, [fp, #-416]	; 0xfffffe60
    a150:	uxth	r3, r0
    a154:	str	r3, [fp, #-420]	; 0xfffffe5c
    a158:	ldr	r3, [r4, #16]
    a15c:	sub	r1, fp, #436	; 0x1b4
    a160:	cmp	r3, #0
    a164:	moveq	r3, #16
    a168:	movne	r3, #32
    a16c:	str	r3, [fp, #-440]	; 0xfffffe48
    a170:	mov	r3, #0
    a174:	ldr	r6, [r4, #12]
    a178:	strd	r2, [r1]
    a17c:	ldr	sl, [fp, #-420]	; 0xfffffe5c
    a180:	mov	r3, #0
    a184:	ldr	r7, [fp, #-416]	; 0xfffffe60
    a188:	str	r3, [fp, #-412]	; 0xfffffe64
    a18c:	add	r3, r5, #4
    a190:	str	r3, [fp, #-444]	; 0xfffffe44
    a194:	add	r3, r5, #6
    a198:	str	r3, [fp, #-448]	; 0xfffffe40
    a19c:	cmp	r7, #0
    a1a0:	cmpgt	sl, #0
    a1a4:	ble	a1d0 <readstat_parse_sas7bcat+0x5f0>
    a1a8:	ldrd	r2, [r4, #56]	; 0x38
    a1ac:	asr	r1, r7, #31
    a1b0:	cmp	r2, r7
    a1b4:	sbcs	r1, r3, r1
    a1b8:	blt	a1d0 <readstat_parse_sas7bcat+0x5f0>
    a1bc:	sub	r1, fp, #436	; 0x1b4
    a1c0:	ldrd	r0, [r1]
    a1c4:	cmp	r0, r2
    a1c8:	sbcs	r3, r1, r3
    a1cc:	blt	a298 <readstat_parse_sas7bcat+0x6b8>
    a1d0:	ldr	r3, [fp, #-412]	; 0xfffffe64
    a1d4:	cmp	r3, #0
    a1d8:	beq	a27c <readstat_parse_sas7bcat+0x69c>
    a1dc:	mov	r0, r9
    a1e0:	ldr	r1, [fp, #-412]	; 0xfffffe64
    a1e4:	bl	4330 <readstat_realloc@plt>
    a1e8:	subs	r9, r0, #0
    a1ec:	beq	a894 <readstat_parse_sas7bcat+0xcb4>
    a1f0:	ldr	sl, [r4, #16]
    a1f4:	mov	r2, #0
    a1f8:	cmp	sl, #0
    a1fc:	moveq	r3, #16
    a200:	movne	r3, #32
    a204:	str	r3, [fp, #-440]	; 0xfffffe48
    a208:	sub	r1, fp, #436	; 0x1b4
    a20c:	mov	r3, #0
    a210:	sub	r5, fp, #304	; 0x130
    a214:	ldr	r6, [r4, #12]
    a218:	strd	r2, [r1]
    a21c:	mov	sl, #0
    a220:	add	r3, r5, #4
    a224:	str	r3, [fp, #-444]	; 0xfffffe44
    a228:	add	r3, r5, #6
    a22c:	str	r3, [fp, #-448]	; 0xfffffe40
    a230:	ldr	r3, [fp, #-416]	; 0xfffffe60
    a234:	ldr	r2, [fp, #-420]	; 0xfffffe5c
    a238:	cmp	r3, #0
    a23c:	cmpgt	r2, #0
    a240:	ble	a270 <readstat_parse_sas7bcat+0x690>
    a244:	ldrd	r2, [r4, #56]	; 0x38
    a248:	ldr	r0, [fp, #-416]	; 0xfffffe60
    a24c:	cmp	r2, r0
    a250:	asr	r1, r0, #31
    a254:	sbcs	r1, r3, r1
    a258:	blt	a270 <readstat_parse_sas7bcat+0x690>
    a25c:	sub	r1, fp, #436	; 0x1b4
    a260:	ldrd	r0, [r1]
    a264:	cmp	r0, r2
    a268:	sbcs	r3, r1, r3
    a26c:	blt	a368 <readstat_parse_sas7bcat+0x788>
    a270:	ldr	r3, [fp, #-412]	; 0xfffffe64
    a274:	cmp	r3, #105	; 0x69
    a278:	bgt	a494 <readstat_parse_sas7bcat+0x8b4>
    a27c:	sub	r3, fp, #428	; 0x1ac
    a280:	sub	r1, fp, #428	; 0x1ac
    a284:	ldrd	r2, [r3]
    a288:	adds	r2, r2, #1
    a28c:	adc	r3, r3, #0
    a290:	strd	r2, [r1]
    a294:	b	a090 <readstat_parse_sas7bcat+0x4b0>
    a298:	ldr	r3, [r4, #72]	; 0x48
    a29c:	ldr	r0, [r4, #64]	; 0x40
    a2a0:	sub	r7, r7, #1
    a2a4:	add	sl, sl, r3
    a2a8:	ldr	r2, [r6, #20]
    a2ac:	ldr	r3, [r6, #8]
    a2b0:	mov	r1, #0
    a2b4:	mla	r0, r0, r7, sl
    a2b8:	blx	r3
    a2bc:	cmn	r0, #1
    a2c0:	beq	a8b0 <readstat_parse_sas7bcat+0xcd0>
    a2c4:	ldr	r3, [r6, #12]
    a2c8:	ldr	r2, [r6, #20]
    a2cc:	ldr	r1, [fp, #-440]	; 0xfffffe48
    a2d0:	mov	r0, r5
    a2d4:	blx	r3
    a2d8:	ldr	r3, [fp, #-440]	; 0xfffffe48
    a2dc:	cmp	r0, r3
    a2e0:	blt	a3bc <readstat_parse_sas7bcat+0x7dc>
    a2e4:	ldr	r3, [r4, #16]
    a2e8:	ldr	r1, [r4, #24]
    a2ec:	cmp	r3, #0
    a2f0:	mov	r0, r5
    a2f4:	beq	a344 <readstat_parse_sas7bcat+0x764>
    a2f8:	bl	4444 <sas_read4@plt>
    a2fc:	ldr	r1, [r4, #24]
    a300:	mov	r7, r0
    a304:	add	r0, r5, #8
    a308:	bl	4420 <sas_read2@plt>
    a30c:	ldr	r1, [r4, #24]
    a310:	mov	sl, r0
    a314:	add	r0, r5, #10
    a318:	bl	4420 <sas_read2@plt>
    a31c:	ldr	r3, [fp, #-412]	; 0xfffffe64
    a320:	sub	r1, fp, #436	; 0x1b4
    a324:	add	r3, r3, r0
    a328:	str	r3, [fp, #-412]	; 0xfffffe64
    a32c:	sub	r3, fp, #436	; 0x1b4
    a330:	ldrd	r2, [r3]
    a334:	adds	r2, r2, #1
    a338:	adc	r3, r3, #0
    a33c:	strd	r2, [r1]
    a340:	b	a19c <readstat_parse_sas7bcat+0x5bc>
    a344:	bl	4444 <sas_read4@plt>
    a348:	ldr	r1, [r4, #24]
    a34c:	mov	r7, r0
    a350:	ldr	r0, [fp, #-444]	; 0xfffffe44
    a354:	bl	4420 <sas_read2@plt>
    a358:	ldr	r1, [r4, #24]
    a35c:	mov	sl, r0
    a360:	ldr	r0, [fp, #-448]	; 0xfffffe40
    a364:	b	a318 <readstat_parse_sas7bcat+0x738>
    a368:	ldr	r3, [fp, #-416]	; 0xfffffe60
    a36c:	ldr	lr, [r4, #64]	; 0x40
    a370:	sub	r0, r3, #1
    a374:	ldr	ip, [r4, #72]	; 0x48
    a378:	ldr	r3, [fp, #-420]	; 0xfffffe5c
    a37c:	ldr	r2, [r6, #20]
    a380:	add	ip, r3, ip
    a384:	mov	r1, #0
    a388:	ldr	r3, [r6, #8]
    a38c:	mla	r0, lr, r0, ip
    a390:	blx	r3
    a394:	cmn	r0, #1
    a398:	beq	a8b0 <readstat_parse_sas7bcat+0xcd0>
    a39c:	ldr	r3, [r6, #12]
    a3a0:	ldr	r2, [r6, #20]
    a3a4:	ldr	r1, [fp, #-440]	; 0xfffffe48
    a3a8:	mov	r0, r5
    a3ac:	blx	r3
    a3b0:	ldr	r3, [fp, #-440]	; 0xfffffe48
    a3b4:	cmp	r0, r3
    a3b8:	bge	a3e0 <readstat_parse_sas7bcat+0x800>
    a3bc:	mov	r3, #2
    a3c0:	b	a864 <readstat_parse_sas7bcat+0xc84>
    a3c4:	nop			; (mov r0, r0)
    a3c8:	.word	0x00000000
    a3cc:	.word	0x7ff80000
    a3d0:	.word	0x00000101
    a3d4:	.word	0x00017ae8
    a3d8:	.word	0xfffffa60
    a3dc:	.word	0x0000ffff
    a3e0:	ldr	r3, [r4, #16]
    a3e4:	ldr	r1, [r4, #24]
    a3e8:	cmp	r3, #0
    a3ec:	mov	r0, r5
    a3f0:	beq	a470 <readstat_parse_sas7bcat+0x890>
    a3f4:	bl	4444 <sas_read4@plt>
    a3f8:	ldr	r1, [r4, #24]
    a3fc:	str	r0, [fp, #-416]	; 0xfffffe60
    a400:	add	r0, r5, #8
    a404:	bl	4420 <sas_read2@plt>
    a408:	ldr	r1, [r4, #24]
    a40c:	str	r0, [fp, #-420]	; 0xfffffe5c
    a410:	add	r0, r5, #10
    a414:	bl	4420 <sas_read2@plt>
    a418:	ldr	r2, [fp, #-412]	; 0xfffffe64
    a41c:	add	r3, r0, sl
    a420:	cmp	r2, r3
    a424:	mov	r7, r0
    a428:	str	r3, [fp, #-452]	; 0xfffffe3c
    a42c:	bcc	a8b8 <readstat_parse_sas7bcat+0xcd8>
    a430:	mov	r1, r0
    a434:	ldr	r2, [r6, #20]
    a438:	add	r0, r9, sl
    a43c:	ldr	r3, [r6, #12]
    a440:	blx	r3
    a444:	sub	r3, fp, #436	; 0x1b4
    a448:	sub	r1, fp, #436	; 0x1b4
    a44c:	ldrd	r2, [r3]
    a450:	adds	r2, r2, #1
    a454:	adc	r3, r3, #0
    a458:	strd	r2, [r1]
    a45c:	ldr	r3, [fp, #-452]	; 0xfffffe3c
    a460:	mov	sl, r3
    a464:	cmp	r7, r0
    a468:	ble	a230 <readstat_parse_sas7bcat+0x650>
    a46c:	b	a3bc <readstat_parse_sas7bcat+0x7dc>
    a470:	bl	4444 <sas_read4@plt>
    a474:	ldr	r1, [r4, #24]
    a478:	str	r0, [fp, #-416]	; 0xfffffe60
    a47c:	ldr	r0, [fp, #-444]	; 0xfffffe44
    a480:	bl	4420 <sas_read2@plt>
    a484:	ldr	r1, [r4, #24]
    a488:	str	r0, [fp, #-420]	; 0xfffffe5c
    a48c:	ldr	r0, [fp, #-448]	; 0xfffffe40
    a490:	b	a414 <readstat_parse_sas7bcat+0x834>
    a494:	ldrb	r3, [r9, #2]
    a498:	tst	r3, #8
    a49c:	ldr	r3, [r4, #16]
    a4a0:	movne	r5, #4
    a4a4:	moveq	r5, #0
    a4a8:	cmp	r3, #0
    a4ac:	add	r6, r5, #42	; 0x2a
    a4b0:	beq	a5e0 <readstat_parse_sas7bcat+0xa00>
    a4b4:	ldr	r1, [r4, #24]
    a4b8:	add	r0, r9, r6
    a4bc:	bl	4444 <sas_read4@plt>
    a4c0:	ldr	r1, [r4, #24]
    a4c4:	mov	r6, #138	; 0x8a
    a4c8:	str	r0, [fp, #-436]	; 0xfffffe4c
    a4cc:	add	r0, r5, #50	; 0x32
    a4d0:	add	r0, r9, r0
    a4d4:	bl	4444 <sas_read4@plt>
    a4d8:	str	r0, [fp, #-416]	; 0xfffffe60
    a4dc:	ldr	r3, [r4, #100]	; 0x64
    a4e0:	mov	r1, #129	; 0x81
    a4e4:	str	r3, [sp]
    a4e8:	mov	r3, #8
    a4ec:	add	r2, r9, r3
    a4f0:	sub	r0, fp, #304	; 0x130
    a4f4:	bl	427c <readstat_convert@plt>
    a4f8:	subs	r3, r0, #0
    a4fc:	str	r3, [fp, #-420]	; 0xfffffe5c
    a500:	bne	a8cc <readstat_parse_sas7bcat+0xcec>
    a504:	ldrsb	r3, [r9, #2]
    a508:	cmp	r5, #0
    a50c:	addne	r5, r5, #16
    a510:	cmp	r3, #0
    a514:	bge	a560 <readstat_parse_sas7bcat+0x980>
    a518:	ldr	r3, [r4, #16]
    a51c:	cmp	r3, #0
    a520:	bne	a560 <readstat_parse_sas7bcat+0x980>
    a524:	add	r2, r6, r5
    a528:	ldr	r1, [fp, #-412]	; 0xfffffe64
    a52c:	add	r3, r2, #32
    a530:	cmp	r1, r3
    a534:	bcc	a27c <readstat_parse_sas7bcat+0x69c>
    a538:	ldr	r3, [r4, #100]	; 0x64
    a53c:	add	r2, r9, r2
    a540:	str	r3, [sp]
    a544:	mov	r1, #129	; 0x81
    a548:	mov	r3, #32
    a54c:	sub	r0, fp, #304	; 0x130
    a550:	bl	427c <readstat_convert@plt>
    a554:	cmp	r0, #0
    a558:	bne	9fec <readstat_parse_sas7bcat+0x40c>
    a55c:	add	r5, r5, #32
    a560:	ldr	r3, [fp, #-412]	; 0xfffffe64
    a564:	add	sl, r6, r5
    a568:	cmp	r3, sl
    a56c:	bcc	a27c <readstat_parse_sas7bcat+0x69c>
    a570:	mov	r1, #4
    a574:	ldr	r0, [fp, #-416]	; 0xfffffe60
    a578:	bl	400c <readstat_calloc@plt>
    a57c:	str	r0, [fp, #-440]	; 0xfffffe48
    a580:	bl	3ef8 <machine_is_little_endian@plt>
    a584:	ldr	r3, [fp, #-440]	; 0xfffffe48
    a588:	cmp	r3, #0
    a58c:	str	r0, [fp, #-456]	; 0xfffffe38
    a590:	beq	a894 <readstat_parse_sas7bcat+0xcb4>
    a594:	ldr	r3, [fp, #-412]	; 0xfffffe64
    a598:	add	sl, r9, sl
    a59c:	sub	r6, r3, r6
    a5a0:	sub	r3, r6, r5
    a5a4:	str	r3, [fp, #-412]	; 0xfffffe64
    a5a8:	ldrb	r3, [fp, #-304]	; 0xfffffed0
    a5ac:	mov	r5, sl
    a5b0:	mov	r6, #0
    a5b4:	str	r3, [fp, #-448]	; 0xfffffe40
    a5b8:	ldr	r3, [fp, #-436]	; 0xfffffe4c
    a5bc:	cmp	r3, r6
    a5c0:	bgt	a60c <readstat_parse_sas7bcat+0xa2c>
    a5c4:	ldr	r3, [fp, #-448]	; 0xfffffe40
    a5c8:	cmp	r3, #36	; 0x24
    a5cc:	movne	r3, #5
    a5d0:	moveq	r3, #0
    a5d4:	str	r3, [fp, #-460]	; 0xfffffe34
    a5d8:	mov	r3, #0
    a5dc:	b	a7d4 <readstat_parse_sas7bcat+0xbf4>
    a5e0:	add	r0, r5, #38	; 0x26
    a5e4:	ldr	r1, [r4, #24]
    a5e8:	add	r0, r9, r0
    a5ec:	bl	4444 <sas_read4@plt>
    a5f0:	ldr	r1, [r4, #24]
    a5f4:	str	r0, [fp, #-436]	; 0xfffffe4c
    a5f8:	add	r0, r9, r6
    a5fc:	bl	4444 <sas_read4@plt>
    a600:	mov	r6, #106	; 0x6a
    a604:	str	r0, [fp, #-416]	; 0xfffffe60
    a608:	b	a4dc <readstat_parse_sas7bcat+0x8fc>
    a60c:	add	r3, r5, #3
    a610:	ldr	r2, [fp, #-412]	; 0xfffffe64
    a614:	sub	r3, r3, sl
    a618:	cmp	r2, r3
    a61c:	bcc	a8c0 <readstat_parse_sas7bcat+0xce0>
    a620:	ldr	r3, [fp, #-416]	; 0xfffffe60
    a624:	cmp	r3, r6
    a628:	ble	a66c <readstat_parse_sas7bcat+0xa8c>
    a62c:	ldr	r0, [r4, #20]
    a630:	add	r3, r0, #14
    a634:	add	r3, r5, r3
    a638:	sub	r3, r3, sl
    a63c:	cmp	r2, r3
    a640:	bcc	a8c0 <readstat_parse_sas7bcat+0xce0>
    a644:	add	r0, r0, #10
    a648:	ldr	r1, [r4, #24]
    a64c:	add	r0, r5, r0
    a650:	bl	4444 <sas_read4@plt>
    a654:	ldr	r3, [fp, #-416]	; 0xfffffe60
    a658:	cmp	r3, r0
    a65c:	bls	a8c0 <readstat_parse_sas7bcat+0xce0>
    a660:	ldr	r2, [fp, #-440]	; 0xfffffe48
    a664:	sub	r3, r5, sl
    a668:	str	r3, [r2, r0, lsl #2]
    a66c:	ldrb	r3, [r5, #2]
    a670:	add	r6, r6, #1
    a674:	add	r3, r3, #6
    a678:	add	r5, r5, r3
    a67c:	b	a5b8 <readstat_parse_sas7bcat+0x9d8>
    a680:	ldr	r2, [fp, #-444]	; 0xfffffe44
    a684:	ldr	r3, [fp, #-440]	; 0xfffffe48
    a688:	ldr	r3, [r3, r2, lsl #2]
    a68c:	ldr	r2, [fp, #-412]	; 0xfffffe64
    a690:	add	r6, sl, r3
    a694:	add	r3, r3, #30
    a698:	cmp	r2, r3
    a69c:	bcc	a86c <readstat_parse_sas7bcat+0xc8c>
    a6a0:	add	r3, r5, #10
    a6a4:	str	r3, [fp, #-452]	; 0xfffffe3c
    a6a8:	sub	r3, r3, sl
    a6ac:	cmp	r2, r3
    a6b0:	bcc	a86c <readstat_parse_sas7bcat+0xc8c>
    a6b4:	sub	r3, fp, #388	; 0x184
    a6b8:	mov	r0, r3
    a6bc:	mov	r2, #16
    a6c0:	mov	r1, #0
    a6c4:	str	r3, [fp, #-452]	; 0xfffffe3c
    a6c8:	bl	42e8 <memset@plt>
    a6cc:	ldr	r3, [fp, #-460]	; 0xfffffe34
    a6d0:	str	r3, [fp, #-380]	; 0xfffffe84
    a6d4:	ldr	r3, [fp, #-448]	; 0xfffffe40
    a6d8:	cmp	r3, #36	; 0x24
    a6dc:	bne	a7f8 <readstat_parse_sas7bcat+0xc18>
    a6e0:	ldrb	r2, [r6, #2]
    a6e4:	ldr	r3, [r4, #100]	; 0x64
    a6e8:	sub	r7, fp, #372	; 0x174
    a6ec:	sub	r2, r2, #10
    a6f0:	str	r3, [sp]
    a6f4:	add	r2, r6, r2
    a6f8:	mov	r3, #16
    a6fc:	mov	r1, #65	; 0x41
    a700:	mov	r0, r7
    a704:	bl	427c <readstat_convert@plt>
    a708:	cmp	r0, #0
    a70c:	bne	a848 <readstat_parse_sas7bcat+0xc68>
    a710:	str	r7, [fp, #-388]	; 0xfffffe7c
    a714:	ldr	r1, [r4, #24]
    a718:	add	r0, r5, #8
    a71c:	bl	4420 <sas_read2@plt>
    a720:	ldr	r2, [fp, #-412]	; 0xfffffe64
    a724:	add	r3, r0, #10
    a728:	add	r3, r5, r3
    a72c:	sub	r3, r3, sl
    a730:	cmp	r2, r3
    a734:	mov	r6, r0
    a738:	bcc	a86c <readstat_parse_sas7bcat+0xc8c>
    a73c:	ldr	r3, [r4, #4]
    a740:	cmp	r3, #0
    a744:	beq	a7c4 <readstat_parse_sas7bcat+0xbe4>
    a748:	lsl	r1, r0, #2
    a74c:	add	r3, r1, #8
    a750:	bic	r3, r3, #7
    a754:	mov	r7, sp
    a758:	sub	sp, sp, r3
    a75c:	add	r3, sp, #16
    a760:	str	r3, [fp, #-452]	; 0xfffffe3c
    a764:	ldr	r3, [r4, #100]	; 0x64
    a768:	add	r2, r5, #10
    a76c:	str	r3, [sp]
    a770:	add	r1, r1, #1
    a774:	mov	r3, r0
    a778:	ldr	r0, [fp, #-452]	; 0xfffffe3c
    a77c:	bl	427c <readstat_convert@plt>
    a780:	cmp	r0, #0
    a784:	bne	a844 <readstat_parse_sas7bcat+0xc64>
    a788:	ldr	r3, [r4, #8]
    a78c:	str	r3, [sp, #12]
    a790:	ldr	r3, [fp, #-452]	; 0xfffffe3c
    a794:	str	r3, [sp, #8]
    a798:	sub	r3, fp, #380	; 0x17c
    a79c:	ldm	r3, {r0, r1}
    a7a0:	sub	r3, fp, #388	; 0x184
    a7a4:	stm	sp, {r0, r1}
    a7a8:	sub	r0, fp, #304	; 0x130
    a7ac:	ldm	r3, {r2, r3}
    a7b0:	ldr	r1, [r4, #4]
    a7b4:	blx	r1
    a7b8:	cmp	r0, #0
    a7bc:	bne	a840 <readstat_parse_sas7bcat+0xc60>
    a7c0:	mov	sp, r7
    a7c4:	ldr	r3, [fp, #-444]	; 0xfffffe44
    a7c8:	add	r6, r6, #11
    a7cc:	add	r5, r5, r6
    a7d0:	add	r3, r3, #1
    a7d4:	ldr	r2, [fp, #-436]	; 0xfffffe4c
    a7d8:	str	r3, [fp, #-444]	; 0xfffffe44
    a7dc:	ldr	r3, [fp, #-416]	; 0xfffffe60
    a7e0:	cmp	r3, r2
    a7e4:	movge	r3, r2
    a7e8:	ldr	r2, [fp, #-444]	; 0xfffffe44
    a7ec:	cmp	r2, r3
    a7f0:	blt	a680 <readstat_parse_sas7bcat+0xaa0>
    a7f4:	b	a84c <readstat_parse_sas7bcat+0xc6c>
    a7f8:	add	r0, r6, #22
    a7fc:	ldr	r1, [fp, #-456]	; 0xfffffe38
    a800:	bl	4414 <sas_read8@plt>
    a804:	ldr	r7, [pc, #-1072]	; a3dc <readstat_parse_sas7bcat+0x7fc>
    a808:	mvn	r6, #0
    a80c:	orr	r3, r1, #65280	; 0xff00
    a810:	cmp	r3, r7
    a814:	cmpeq	r0, r6
    a818:	vmovne	d7, r0, r1
    a81c:	vnegne.f64	d7, d7
    a820:	bne	a838 <readstat_parse_sas7bcat+0xc58>
    a824:	lsr	r1, r1, #8
    a828:	ldr	r0, [fp, #-452]	; 0xfffffe3c
    a82c:	uxtb	r1, r1
    a830:	bl	44f8 <sas_assign_tag@plt>
    a834:	vmov.f64	d7, d8
    a838:	vstr	d7, [fp, #-388]	; 0xfffffe7c
    a83c:	b	a714 <readstat_parse_sas7bcat+0xb34>
    a840:	mov	r0, #4
    a844:	mov	sp, r7
    a848:	str	r0, [fp, #-420]	; 0xfffffe5c
    a84c:	ldr	r0, [fp, #-440]	; 0xfffffe48
    a850:	bl	3f04 <free@plt>
    a854:	ldr	r3, [fp, #-420]	; 0xfffffe5c
    a858:	cmp	r3, #0
    a85c:	beq	a27c <readstat_parse_sas7bcat+0x69c>
    a860:	ldr	r3, [fp, #-420]	; 0xfffffe5c
    a864:	str	r3, [fp, #-396]	; 0xfffffe74
    a868:	b	a0ac <readstat_parse_sas7bcat+0x4cc>
    a86c:	mov	r0, #5
    a870:	b	a848 <readstat_parse_sas7bcat+0xc68>
    a874:	mov	r3, #1
    a878:	str	r3, [fp, #-396]	; 0xfffffe74
    a87c:	mov	r9, #0
    a880:	str	r9, [fp, #-404]	; 0xfffffe6c
    a884:	b	a0ac <readstat_parse_sas7bcat+0x4cc>
    a888:	mov	r3, #7
    a88c:	b	a878 <readstat_parse_sas7bcat+0xc98>
    a890:	ldr	r9, [fp, #-404]	; 0xfffffe6c
    a894:	mov	r3, #3
    a898:	b	a864 <readstat_parse_sas7bcat+0xc84>
    a89c:	mov	r3, #15
    a8a0:	str	r3, [fp, #-396]	; 0xfffffe74
    a8a4:	b	9f38 <readstat_parse_sas7bcat+0x358>
    a8a8:	mov	r3, #2
    a8ac:	b	a8a0 <readstat_parse_sas7bcat+0xcc0>
    a8b0:	mov	r3, #15
    a8b4:	b	a864 <readstat_parse_sas7bcat+0xc84>
    a8b8:	mov	r3, #5
    a8bc:	b	a864 <readstat_parse_sas7bcat+0xc84>
    a8c0:	mov	r3, #5
    a8c4:	str	r3, [fp, #-420]	; 0xfffffe5c
    a8c8:	b	a84c <readstat_parse_sas7bcat+0xc6c>
    a8cc:	ldr	r0, [fp, #-420]	; 0xfffffe5c
    a8d0:	b	9fec <readstat_parse_sas7bcat+0x40c>

0000a8d4 <sas7bcat_begin_data>:
    a8d4:	ldr	r3, [pc, #1320]	; ae04 <sas7bcat_begin_data+0x530>
    a8d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a8dc:	sub	sp, sp, #372	; 0x174
    a8e0:	add	r3, pc, r3
    a8e4:	mov	r1, #0
    a8e8:	str	r3, [sp, #184]	; 0xb8
    a8ec:	mov	r9, r0
    a8f0:	bl	439c <sas_header_info_init@plt>
    a8f4:	mov	sl, r0
    a8f8:	ldr	r0, [r9, #40]	; 0x28
    a8fc:	lsl	r0, r0, #3
    a900:	bl	415c <malloc@plt>
    a904:	str	r0, [sp, #176]	; 0xb0
    a908:	ldr	r0, [sl, #32]
    a90c:	bl	415c <malloc@plt>
    a910:	mov	r3, #0
    a914:	str	r3, [sp, #172]	; 0xac
    a918:	add	r3, sp, #204	; 0xcc
    a91c:	str	r3, [sp, #164]	; 0xa4
    a920:	add	r3, sp, #192	; 0xc0
    a924:	str	r3, [sp, #188]	; 0xbc
    a928:	str	r0, [sp, #168]	; 0xa8
    a92c:	ldr	r3, [r9, #40]	; 0x28
    a930:	ldr	r2, [sp, #172]	; 0xac
    a934:	cmp	r2, r3
    a938:	blt	ab0c <sas7bcat_begin_data+0x238>
    a93c:	mov	r3, #0
    a940:	mov	r2, #4
    a944:	mov	r1, #0
    a948:	strd	r2, [sl, #56]	; 0x38
    a94c:	ldr	r0, [sp, #164]	; 0xa4
    a950:	mov	r2, #164	; 0xa4
    a954:	bl	42e8 <memset@plt>
    a958:	ldr	r3, [sl, #4]
    a95c:	cmp	r3, #0
    a960:	movne	r3, #51	; 0x33
    a964:	moveq	r3, #34	; 0x22
    a968:	strb	r3, [sp, #236]	; 0xec
    a96c:	mov	r3, #34	; 0x22
    a970:	strb	r3, [sp, #239]	; 0xef
    a974:	bl	3ef8 <machine_is_little_endian@plt>
    a978:	mov	r3, #49	; 0x31
    a97c:	strb	r3, [sp, #243]	; 0xf3
    a980:	mov	r3, #20
    a984:	strb	r3, [sp, #274]	; 0x112
    a988:	ldr	r3, [pc, #1144]	; ae08 <sas7bcat_begin_data+0x534>
    a98c:	add	r2, sp, #288	; 0x120
    a990:	add	r3, pc, r3
    a994:	ldr	ip, [sp, #164]	; 0xa4
    a998:	ldr	r1, [r3, #4]
    a99c:	adds	r0, r0, #0
    a9a0:	movne	r0, #1
    a9a4:	strb	r0, [sp, #241]	; 0xf1
    a9a8:	ldr	r0, [r3]
    a9ac:	stmia	r2!, {r0, r1}
    a9b0:	ldr	r0, [r3, #9]!
    a9b4:	add	r2, sp, #360	; 0x168
    a9b8:	ldr	r1, [r3, #4]
    a9bc:	ldr	r3, [pc, #1096]	; ae0c <sas7bcat_begin_data+0x538>
    a9c0:	stmia	r2!, {r0, r1}
    a9c4:	ldr	r2, [sp, #184]	; 0xb8
    a9c8:	ldr	r3, [r2, r3]
    a9cc:	add	lr, r3, #32
    a9d0:	ldr	r0, [r3]
    a9d4:	ldr	r1, [r3, #4]
    a9d8:	mov	r2, ip
    a9dc:	add	r3, r3, #8
    a9e0:	cmp	r3, lr
    a9e4:	stmia	r2!, {r0, r1}
    a9e8:	mov	ip, r2
    a9ec:	bne	a9d0 <sas7bcat_begin_data+0xfc>
    a9f0:	mov	r2, #156	; 0x9c
    a9f4:	add	r1, sp, #212	; 0xd4
    a9f8:	mov	r0, sp
    a9fc:	bl	3f64 <memcpy@plt>
    aa00:	ldr	r3, [sp, #164]	; 0xa4
    aa04:	mov	r1, sl
    aa08:	mov	r0, r9
    aa0c:	ldm	r3, {r2, r3}
    aa10:	bl	4108 <sas_write_header@plt>
    aa14:	subs	r4, r0, #0
    aa18:	bne	aad8 <sas7bcat_begin_data+0x204>
    aa1c:	ldr	r1, [sl, #32]
    aa20:	mov	r0, r9
    aa24:	bl	4060 <readstat_write_zeros@plt>
    aa28:	subs	r4, r0, #0
    aa2c:	bne	aad8 <sas7bcat_begin_data+0x204>
    aa30:	mov	r1, r4
    aa34:	ldr	r2, [sl, #32]
    aa38:	ldr	r0, [sp, #168]	; 0xa8
    aa3c:	bl	42e8 <memset@plt>
    aa40:	ldr	r3, [sp, #168]	; 0xa8
    aa44:	ldr	r0, [pc, #964]	; ae10 <sas7bcat_begin_data+0x53c>
    aa48:	add	r1, r3, #856	; 0x358
    aa4c:	mov	ip, #4
    aa50:	mov	r3, #16
    aa54:	mov	lr, #79	; 0x4f
    aa58:	ldr	r5, [r9, #40]	; 0x28
    aa5c:	mov	r2, r1
    aa60:	cmp	r4, r5
    aa64:	blt	ad10 <sas7bcat_begin_data+0x43c>
    aa68:	ldr	r2, [sl, #32]
    aa6c:	ldr	r1, [sp, #168]	; 0xa8
    aa70:	mov	r0, r9
    aa74:	bl	44a4 <readstat_write_bytes@plt>
    aa78:	subs	r4, r0, #0
    aa7c:	bne	aad8 <sas7bcat_begin_data+0x204>
    aa80:	ldr	r1, [sl, #32]
    aa84:	mov	r0, r9
    aa88:	bl	4060 <readstat_write_zeros@plt>
    aa8c:	subs	r4, r0, #0
    aa90:	bne	aad8 <sas7bcat_begin_data+0x204>
    aa94:	ldr	r2, [sl, #32]
    aa98:	mov	r1, r4
    aa9c:	ldr	r0, [sp, #168]	; 0xa8
    aaa0:	bl	42e8 <memset@plt>
    aaa4:	mov	r5, #16
    aaa8:	ldr	r3, [sp, #164]	; 0xa4
    aaac:	mov	fp, r5
    aab0:	add	r3, r3, r5
    aab4:	str	r3, [sp, #172]	; 0xac
    aab8:	ldr	r3, [r9, #40]	; 0x28
    aabc:	cmp	r4, r3
    aac0:	blt	ad58 <sas7bcat_begin_data+0x484>
    aac4:	ldr	r2, [sl, #32]
    aac8:	ldr	r1, [sp, #168]	; 0xa8
    aacc:	mov	r0, r9
    aad0:	bl	44a4 <readstat_write_bytes@plt>
    aad4:	mov	r4, r0
    aad8:	mov	r5, #0
    aadc:	ldr	r3, [r9, #40]	; 0x28
    aae0:	cmp	r5, r3
    aae4:	blt	adf0 <sas7bcat_begin_data+0x51c>
    aae8:	ldr	r0, [sp, #176]	; 0xb0
    aaec:	bl	3f04 <free@plt>
    aaf0:	mov	r0, sl
    aaf4:	bl	3f04 <free@plt>
    aaf8:	ldr	r0, [sp, #168]	; 0xa8
    aafc:	bl	3f04 <free@plt>
    ab00:	mov	r0, r4
    ab04:	add	sp, sp, #372	; 0x174
    ab08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ab0c:	ldr	r3, [r9, #36]	; 0x24
    ab10:	ldr	r2, [sp, #172]	; 0xac
    ab14:	ldr	r5, [r3, r2, lsl #2]
    ab18:	add	r4, r5, #4
    ab1c:	mov	r0, r4
    ab20:	bl	424c <strlen@plt>
    ab24:	cmp	r0, #8
    ab28:	mov	r6, r0
    ab2c:	movls	r7, #106	; 0x6a
    ab30:	bls	ab44 <sas7bcat_begin_data+0x270>
    ab34:	cmp	r0, #32
    ab38:	movcc	r6, r0
    ab3c:	movcs	r6, #32
    ab40:	mov	r7, #138	; 0x8a
    ab44:	mov	r1, r4
    ab48:	mov	r2, r6
    ab4c:	ldr	r0, [sp, #164]	; 0xa4
    ab50:	bl	3f64 <memcpy@plt>
    ab54:	mov	r4, #0
    ab58:	ldr	r8, [r5, #264]	; 0x108
    ab5c:	cmp	r4, r8
    ab60:	blt	ac08 <sas7bcat_begin_data+0x334>
    ab64:	add	r1, r7, #8
    ab68:	mov	r0, #1
    ab6c:	bl	3d9c <calloc@plt>
    ab70:	cmp	r6, #8
    ab74:	mov	r4, r0
    ab78:	str	r7, [r0]
    ab7c:	str	r8, [r0, #42]	; 0x2a
    ab80:	str	r8, [r0, #46]	; 0x2e
    ab84:	add	r3, r0, #12
    ab88:	bls	ac28 <sas7bcat_begin_data+0x354>
    ab8c:	mvn	r2, #127	; 0x7f
    ab90:	strb	r2, [r0, #6]
    ab94:	ldr	r2, [sp, #164]	; 0xa4
    ab98:	ldm	r2, {r0, r1}
    ab9c:	mov	r2, #32
    aba0:	stm	r3, {r0, r1}
    aba4:	add	r3, r4, #110	; 0x6e
    aba8:	mov	r1, r2
    abac:	mov	r0, r3
    abb0:	bl	42e8 <memset@plt>
    abb4:	mov	r2, r6
    abb8:	ldr	r1, [sp, #164]	; 0xa4
    abbc:	bl	3f64 <memcpy@plt>
    abc0:	mov	r3, #138	; 0x8a
    abc4:	ldr	fp, [r5, #264]	; 0x108
    abc8:	mov	r2, #30
    abcc:	add	r8, r3, #4
    abd0:	mla	fp, r2, fp, r3
    abd4:	add	r8, r4, r8
    abd8:	add	fp, fp, #4
    abdc:	add	fp, r4, fp
    abe0:	mov	r7, #0
    abe4:	ldr	r3, [r5, #264]	; 0x108
    abe8:	cmp	r7, r3
    abec:	blt	ac4c <sas7bcat_begin_data+0x378>
    abf0:	ldr	r2, [sp, #172]	; 0xac
    abf4:	ldr	r3, [sp, #176]	; 0xb0
    abf8:	str	r4, [r3, r2, lsl #2]
    abfc:	add	r3, r2, #1
    ac00:	str	r3, [sp, #172]	; 0xac
    ac04:	b	a92c <sas7bcat_begin_data+0x58>
    ac08:	mov	r1, r4
    ac0c:	mov	r0, r5
    ac10:	bl	451c <readstat_get_value_label@plt>
    ac14:	add	r4, r4, #1
    ac18:	ldr	r3, [r0, #28]
    ac1c:	add	r3, r3, #41	; 0x29
    ac20:	add	r7, r7, r3
    ac24:	b	ab58 <sas7bcat_begin_data+0x284>
    ac28:	mov	r0, r3
    ac2c:	mov	r2, #8
    ac30:	mov	r1, #32
    ac34:	bl	42e8 <memset@plt>
    ac38:	mov	r2, r6
    ac3c:	ldr	r1, [sp, #164]	; 0xa4
    ac40:	bl	3f64 <memcpy@plt>
    ac44:	mov	r3, #106	; 0x6a
    ac48:	b	abc4 <sas7bcat_begin_data+0x2f0>
    ac4c:	mov	r1, r7
    ac50:	mov	r0, r5
    ac54:	bl	451c <readstat_get_value_label@plt>
    ac58:	mov	r3, #24
    ac5c:	strb	r3, [r8, #2]
    ac60:	str	r7, [r8, #10]
    ac64:	ldr	r3, [r5]
    ac68:	cmp	r3, #0
    ac6c:	mov	r6, r0
    ac70:	bne	acd4 <sas7bcat_begin_data+0x400>
    ac74:	ldr	r3, [r0, #20]
    ac78:	mov	r2, #16
    ac7c:	str	r3, [sp, #180]	; 0xb4
    ac80:	add	r3, r8, #14
    ac84:	mov	r1, #32
    ac88:	mov	r0, r3
    ac8c:	bl	42e8 <memset@plt>
    ac90:	ldr	r2, [sp, #180]	; 0xb4
    ac94:	ldr	r1, [r6, #16]
    ac98:	cmp	r2, #16
    ac9c:	movcs	r2, #16
    aca0:	bl	3f64 <memcpy@plt>
    aca4:	ldr	r2, [r6, #28]
    aca8:	add	r0, fp, #10
    acac:	strh	r2, [fp, #8]
    acb0:	sxth	r2, r2
    acb4:	ldr	r1, [r6, #24]
    acb8:	bl	3f64 <memcpy@plt>
    acbc:	ldr	r3, [r6, #28]
    acc0:	add	r8, r8, #30
    acc4:	add	r3, r3, #11
    acc8:	add	fp, fp, r3
    accc:	add	r7, r7, #1
    acd0:	b	abe4 <sas7bcat_begin_data+0x310>
    acd4:	vldr	d7, [r0]
    acd8:	vneg.f64	d7, d7
    acdc:	vmov	r2, r3, d7
    ace0:	strd	r2, [sp, #192]	; 0xc0
    ace4:	bl	3ef8 <machine_is_little_endian@plt>
    ace8:	cmp	r0, #0
    acec:	beq	acfc <sas7bcat_begin_data+0x428>
    acf0:	ldrd	r0, [sp, #192]	; 0xc0
    acf4:	bl	3dc0 <byteswap8@plt>
    acf8:	strd	r0, [sp, #192]	; 0xc0
    acfc:	ldr	r3, [sp, #188]	; 0xbc
    ad00:	ldm	r3!, {r0, r1}
    ad04:	str	r0, [r8, #22]
    ad08:	str	r1, [r8, #26]
    ad0c:	b	aca4 <sas7bcat_begin_data+0x3d0>
    ad10:	ldr	r5, [sl, #32]
    ad14:	ldr	r6, [sp, #168]	; 0xa8
    ad18:	add	r1, r1, #212	; 0xd4
    ad1c:	add	r5, r6, r5
    ad20:	cmp	r5, r1
    ad24:	bcc	aa68 <sas7bcat_begin_data+0x194>
    ad28:	uxth	r3, r3
    ad2c:	str	r0, [r2]
    ad30:	strh	r3, [r2, #8]
    ad34:	strh	ip, [r2, #4]
    ad38:	strb	lr, [r2, #50]	; 0x32
    ad3c:	ldr	r2, [sp, #176]	; 0xb0
    ad40:	ldr	r2, [r2, r4, lsl #2]
    ad44:	add	r4, r4, #1
    ad48:	ldr	r2, [r2]
    ad4c:	add	r3, r3, r2
    ad50:	sxth	r3, r3
    ad54:	b	aa58 <sas7bcat_begin_data+0x184>
    ad58:	ldr	r3, [sp, #176]	; 0xb0
    ad5c:	add	r6, r5, #16
    ad60:	mov	r1, #0
    ad64:	ldr	r7, [r3, r4, lsl #2]
    ad68:	ldrd	r2, [sl, #32]
    ad6c:	ldr	r8, [r7]
    ad70:	add	r0, r6, r8
    ad74:	cmp	r2, r0
    ad78:	sbcs	r3, r3, r1
    ad7c:	blt	aac4 <sas7bcat_begin_data+0x1f0>
    ad80:	mov	r2, fp
    ad84:	mov	r1, #0
    ad88:	ldr	r0, [sp, #164]	; 0xa4
    ad8c:	bl	42e8 <memset@plt>
    ad90:	ldr	r3, [sp, #168]	; 0xa8
    ad94:	ldr	r2, [sp, #164]	; 0xa4
    ad98:	add	r5, r3, r5
    ad9c:	strh	r8, [sp, #210]	; 0xd2
    ada0:	mov	r3, r2
    ada4:	add	r5, r5, #8
    ada8:	ldm	r3!, {r0, r1}
    adac:	str	r0, [r5, #-8]
    adb0:	str	r1, [r5, #-4]
    adb4:	ldr	r1, [sp, #172]	; 0xac
    adb8:	mov	r2, r3
    adbc:	cmp	r3, r1
    adc0:	bne	ada0 <sas7bcat_begin_data+0x4cc>
    adc4:	uxth	r6, r6
    adc8:	ldr	r3, [sp, #168]	; 0xa8
    adcc:	ldr	r2, [r7]
    add0:	sxtah	r0, r3, r6
    add4:	add	r1, r7, #4
    add8:	bl	3f64 <memcpy@plt>
    addc:	ldr	r5, [r7]
    ade0:	add	r4, r4, #1
    ade4:	add	r6, r6, r5
    ade8:	sxth	r5, r6
    adec:	b	aab8 <sas7bcat_begin_data+0x1e4>
    adf0:	ldr	r3, [sp, #176]	; 0xb0
    adf4:	ldr	r0, [r3, r5, lsl #2]
    adf8:	bl	3f04 <free@plt>
    adfc:	add	r5, r5, #1
    ae00:	b	aadc <sas7bcat_begin_data+0x208>
    ae04:	.word	0x00036718
    ae08:	.word	0x0001705d
    ae0c:	.word	0x000002c8
    ae10:	.word	0x52534c58

0000ae14 <readstat_begin_writing_sas7bcat>:
    ae14:	ldr	r3, [r0, #8]
    ae18:	mov	r2, #0
    ae1c:	cmp	r3, #0
    ae20:	moveq	r3, #9
    ae24:	streq	r3, [r0, #8]
    ae28:	ldr	r3, [pc, #8]	; ae38 <readstat_begin_writing_sas7bcat+0x24>
    ae2c:	add	r3, pc, r3
    ae30:	str	r3, [r0, #276]	; 0x114
    ae34:	b	3fac <readstat_begin_writing_file@plt>
    ae38:	.word	0xfffffaa0

0000ae3c <sas7bdat_validate_subheader_pointer>:
    ae3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ae40:	mov	r9, #0
    ae44:	ldrd	r6, [r0]
    ae48:	cmp	r7, r9
    ae4c:	cmpeq	r6, r1
    ae50:	bhi	aeec <sas7bdat_validate_subheader_pointer+0xb0>
    ae54:	ldrd	sl, [r0, #8]
    ae58:	mov	r8, r1
    ae5c:	cmp	r9, fp
    ae60:	cmpeq	r1, sl
    ae64:	bcc	aeec <sas7bdat_validate_subheader_pointer+0xb0>
    ae68:	adds	r4, r6, sl
    ae6c:	adc	r5, r7, fp
    ae70:	cmp	r9, r5
    ae74:	cmpeq	r1, r4
    ae78:	bcc	aeec <sas7bdat_validate_subheader_pointer+0xb0>
    ae7c:	uxth	r4, r2
    ae80:	ldr	r2, [r3, #144]	; 0x90
    ae84:	mov	ip, r3
    ae88:	ldr	r1, [r3, #148]	; 0x94
    ae8c:	umull	r2, r3, r2, r4
    ae90:	mla	r3, r1, r4, r3
    ae94:	ldrd	r4, [ip, #128]	; 0x80
    ae98:	adds	r2, r2, r4
    ae9c:	adc	r3, r3, r5
    aea0:	cmp	r7, r3
    aea4:	cmpeq	r6, r2
    aea8:	bcc	aeec <sas7bdat_validate_subheader_pointer+0xb0>
    aeac:	ldrb	r3, [r0, #16]
    aeb0:	cmp	r3, #0
    aeb4:	bne	aee4 <sas7bdat_validate_subheader_pointer+0xa8>
    aeb8:	ldrd	r2, [ip, #136]	; 0x88
    aebc:	cmp	fp, r3
    aec0:	cmpeq	sl, r2
    aec4:	bcc	aeec <sas7bdat_validate_subheader_pointer+0xb0>
    aec8:	adds	r6, r6, r2
    aecc:	adc	r7, r7, r3
    aed0:	cmp	r9, r7
    aed4:	cmpeq	r8, r6
    aed8:	movcs	r0, #0
    aedc:	movcc	r0, #5
    aee0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    aee4:	mov	r0, #0
    aee8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    aeec:	mov	r0, #5
    aef0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000aef4 <sas7bdat_realloc_col_info>:
    aef4:	push	{r4, r5, r6, r7, r8, lr}
    aef8:	ldr	r6, [r0, #188]	; 0xbc
    aefc:	cmp	r6, r1
    af00:	bcs	af40 <sas7bdat_realloc_col_info+0x4c>
    af04:	mov	r5, r0
    af08:	mov	r7, #40	; 0x28
    af0c:	str	r1, [r5, #188]	; 0xbc
    af10:	mov	r4, r1
    af14:	ldr	r0, [r0, #192]	; 0xc0
    af18:	mul	r1, r7, r1
    af1c:	bl	4330 <readstat_realloc@plt>
    af20:	cmp	r0, #0
    af24:	str	r0, [r5, #192]	; 0xc0
    af28:	beq	af48 <sas7bdat_realloc_col_info+0x54>
    af2c:	sub	r2, r4, r6
    af30:	mov	r1, #0
    af34:	mul	r2, r7, r2
    af38:	mla	r0, r7, r6, r0
    af3c:	bl	42e8 <memset@plt>
    af40:	mov	r0, #0
    af44:	pop	{r4, r5, r6, r7, r8, pc}
    af48:	mov	r0, #3
    af4c:	pop	{r4, r5, r6, r7, r8, pc}

0000af50 <sas7bdat_parse_text_ref.isra.0>:
    af50:	push	{r4, r5, r6, r7, r8, lr}
    af54:	mov	r5, r1
    af58:	mov	r4, r0
    af5c:	ldr	r1, [r2]
    af60:	mov	r0, r5
    af64:	mov	r6, r2
    af68:	bl	4420 <sas_read2@plt>
    af6c:	ldr	r1, [r6]
    af70:	mov	r8, r0
    af74:	add	r0, r5, #2
    af78:	bl	4420 <sas_read2@plt>
    af7c:	ldr	r1, [r6]
    af80:	mov	r7, r0
    af84:	add	r0, r5, #4
    af88:	bl	4420 <sas_read2@plt>
    af8c:	strh	r8, [r4]
    af90:	strh	r7, [r4, #2]
    af94:	strh	r0, [r4, #4]
    af98:	mov	r0, r4
    af9c:	pop	{r4, r5, r6, r7, r8, pc}

0000afa0 <sas7bdat_parse_subheader_pointer>:
    afa0:	push	{r4, r5, r6, r7, r8, lr}
    afa4:	mov	r6, r0
    afa8:	ldr	r5, [r3, #44]	; 0x2c
    afac:	mov	r4, r2
    afb0:	cmp	r5, #0
    afb4:	mov	r7, r3
    afb8:	beq	aff8 <sas7bdat_parse_subheader_pointer+0x58>
    afbc:	cmp	r1, #17
    afc0:	bls	b034 <sas7bdat_parse_subheader_pointer+0x94>
    afc4:	ldr	r1, [r3, #60]	; 0x3c
    afc8:	bl	4414 <sas_read8@plt>
    afcc:	strd	r0, [r4]
    afd0:	ldr	r1, [r7, #60]	; 0x3c
    afd4:	add	r0, r6, #8
    afd8:	bl	4414 <sas_read8@plt>
    afdc:	strd	r0, [r4, #8]
    afe0:	ldrb	r3, [r6, #16]
    afe4:	strb	r3, [r4, #16]
    afe8:	ldrb	r3, [r6, #17]
    afec:	strb	r3, [r4, #17]
    aff0:	mov	r0, #0
    aff4:	pop	{r4, r5, r6, r7, r8, pc}
    aff8:	cmp	r1, #9
    affc:	bls	b034 <sas7bdat_parse_subheader_pointer+0x94>
    b000:	ldr	r1, [r3, #60]	; 0x3c
    b004:	bl	4444 <sas_read4@plt>
    b008:	mov	r1, #0
    b00c:	strd	r0, [r4]
    b010:	ldr	r1, [r7, #60]	; 0x3c
    b014:	add	r0, r6, #4
    b018:	bl	4444 <sas_read4@plt>
    b01c:	mov	r1, #0
    b020:	strd	r0, [r4, #8]
    b024:	ldrb	r3, [r6, #8]
    b028:	strb	r3, [r4, #16]
    b02c:	ldrb	r3, [r6, #9]
    b030:	b	afec <sas7bdat_parse_subheader_pointer+0x4c>
    b034:	mov	r0, #5
    b038:	pop	{r4, r5, r6, r7, r8, pc}

0000b03c <sas7bdat_parse_subheader>:
    b03c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b040:	mov	fp, #0
    b044:	ldrd	r6, [r3, #136]	; 0x88
    b048:	sub	sp, sp, #20
    b04c:	adds	r8, r6, #2
    b050:	adc	r9, r7, #0
    b054:	cmp	fp, r9
    b058:	cmpeq	r2, r8
    b05c:	bcc	b534 <sas7bdat_parse_subheader+0x4f8>
    b060:	mov	r4, r3
    b064:	ldr	r3, [pc, #1380]	; b5d0 <sas7bdat_parse_subheader+0x594>
    b068:	mov	r8, r2
    b06c:	cmp	r0, r3
    b070:	mov	r5, r1
    b074:	bne	b118 <sas7bdat_parse_subheader+0xdc>
    b078:	ldr	r3, [r4, #44]	; 0x2c
    b07c:	cmp	r3, #0
    b080:	bne	b53c <sas7bdat_parse_subheader+0x500>
    b084:	cmp	r2, #63	; 0x3f
    b088:	bls	b534 <sas7bdat_parse_subheader+0x4f8>
    b08c:	ldr	r1, [r4, #60]	; 0x3c
    b090:	add	r0, r5, #20
    b094:	bl	4444 <sas_read4@plt>
    b098:	ldr	r1, [r4, #60]	; 0x3c
    b09c:	mov	r7, #0
    b0a0:	mov	r8, r0
    b0a4:	add	r0, r5, #24
    b0a8:	bl	4444 <sas_read4@plt>
    b0ac:	ldr	r1, [r4, #60]	; 0x3c
    b0b0:	mov	r6, r0
    b0b4:	add	r0, r5, #60	; 0x3c
    b0b8:	bl	4444 <sas_read4@plt>
    b0bc:	b	b574 <sas7bdat_parse_subheader+0x538>
    b0c0:	ldr	r2, [r4, #88]	; 0x58
    b0c4:	mov	r3, #0
    b0c8:	cmp	r3, r7
    b0cc:	cmpeq	r2, r6
    b0d0:	strcs	r6, [r4, #88]	; 0x58
    b0d4:	str	sl, [r4, #72]	; 0x48
    b0d8:	movcs	r6, #0
    b0dc:	movcs	r7, #0
    b0e0:	bcs	b0ec <sas7bdat_parse_subheader+0xb0>
    b0e4:	subs	r6, r6, r2
    b0e8:	sbc	r7, r7, r3
    b0ec:	ldr	r2, [r4, #84]	; 0x54
    b0f0:	cmp	r2, #0
    b0f4:	beq	b110 <sas7bdat_parse_subheader+0xd4>
    b0f8:	mov	r3, #0
    b0fc:	cmp	r3, r7
    b100:	cmpeq	r2, r6
    b104:	bhi	b110 <sas7bdat_parse_subheader+0xd4>
    b108:	mov	r8, #0
    b10c:	b	b598 <sas7bdat_parse_subheader+0x55c>
    b110:	str	r6, [r4, #84]	; 0x54
    b114:	b	b108 <sas7bdat_parse_subheader+0xcc>
    b118:	ldr	r3, [pc, #1204]	; b5d4 <sas7bdat_parse_subheader+0x598>
    b11c:	cmp	r0, r3
    b120:	bne	b160 <sas7bdat_parse_subheader+0x124>
    b124:	ldr	r3, [r4, #80]	; 0x50
    b128:	cmp	r3, #0
    b12c:	bne	b534 <sas7bdat_parse_subheader+0x4f8>
    b130:	ldr	r3, [r4, #64]	; 0x40
    b134:	cmp	r3, #0
    b138:	bne	b534 <sas7bdat_parse_subheader+0x4f8>
    b13c:	ldr	r3, [r4, #44]	; 0x2c
    b140:	cmp	r3, #0
    b144:	bne	b5a4 <sas7bdat_parse_subheader+0x568>
    b148:	cmp	r2, #7
    b14c:	bls	b534 <sas7bdat_parse_subheader+0x4f8>
    b150:	ldr	r1, [r4, #60]	; 0x3c
    b154:	add	r0, r5, #4
    b158:	bl	4444 <sas_read4@plt>
    b15c:	b	b5b8 <sas7bdat_parse_subheader+0x57c>
    b160:	cmn	r0, #1024	; 0x400
    b164:	beq	b108 <sas7bdat_parse_subheader+0xcc>
    b168:	cmn	r0, #3
    b16c:	bne	b248 <sas7bdat_parse_subheader+0x20c>
    b170:	add	r5, r1, r6
    b174:	mov	r0, r5
    b178:	ldr	r1, [r4, #60]	; 0x3c
    b17c:	bl	4420 <sas_read2@plt>
    b180:	mov	r1, r6
    b184:	mov	r9, r0
    b188:	mov	r0, r8
    b18c:	bl	4408 <sas_subheader_remainder@plt>
    b190:	cmp	r9, r0
    b194:	bne	b534 <sas7bdat_parse_subheader+0x4f8>
    b198:	ldr	r1, [r4, #152]	; 0x98
    b19c:	ldr	r0, [r4, #160]	; 0xa0
    b1a0:	add	r1, r1, #1
    b1a4:	str	r1, [r4, #152]	; 0x98
    b1a8:	lsl	r1, r1, #2
    b1ac:	bl	4330 <readstat_realloc@plt>
    b1b0:	ldr	r1, [r4, #152]	; 0x98
    b1b4:	lsl	r1, r1, #2
    b1b8:	str	r0, [r4, #160]	; 0xa0
    b1bc:	ldr	r0, [r4, #156]	; 0x9c
    b1c0:	bl	4330 <readstat_realloc@plt>
    b1c4:	ldr	r3, [r4, #160]	; 0xa0
    b1c8:	cmp	r0, #0
    b1cc:	cmpne	r3, #0
    b1d0:	str	r0, [r4, #156]	; 0x9c
    b1d4:	beq	b594 <sas7bdat_parse_subheader+0x558>
    b1d8:	sub	r6, r8, r6
    b1dc:	mov	r0, r6
    b1e0:	bl	4270 <readstat_malloc@plt>
    b1e4:	subs	r7, r0, #0
    b1e8:	beq	b594 <sas7bdat_parse_subheader+0x558>
    b1ec:	mov	r2, r6
    b1f0:	mov	r1, r5
    b1f4:	bl	3f64 <memcpy@plt>
    b1f8:	ldr	r3, [r4, #152]	; 0x98
    b1fc:	ldr	r2, [r4, #156]	; 0x9c
    b200:	sub	r3, r3, #-1073741823	; 0xc0000001
    b204:	cmp	r6, #20
    b208:	str	r6, [r2, r3, lsl #2]
    b20c:	ldr	r3, [r4, #152]	; 0x98
    b210:	ldr	r2, [r4, #160]	; 0xa0
    b214:	sub	r3, r3, #-1073741823	; 0xc0000001
    b218:	str	r7, [r2, r3, lsl #2]
    b21c:	bls	b108 <sas7bdat_parse_subheader+0xcc>
    b220:	ldr	r1, [pc, #944]	; b5d8 <sas7bdat_parse_subheader+0x59c>
    b224:	mov	r2, #8
    b228:	add	r1, pc, r1
    b22c:	add	r0, r7, #12
    b230:	bl	454c <strncmp@plt>
    b234:	cmp	r0, #0
    b238:	ldrbeq	r3, [r4, #2529]	; 0x9e1
    b23c:	orreq	r3, r3, #1
    b240:	strbeq	r3, [r4, #2529]	; 0x9e1
    b244:	b	b108 <sas7bdat_parse_subheader+0xcc>
    b248:	cmn	r0, #1
    b24c:	bne	b308 <sas7bdat_parse_subheader+0x2cc>
    b250:	ldr	r3, [r4, #44]	; 0x2c
    b254:	ldr	r1, [r4, #60]	; 0x3c
    b258:	cmp	r3, #0
    b25c:	add	r0, r5, r6
    b260:	subne	r9, r2, #28
    b264:	subeq	r9, r2, #20
    b268:	bl	4420 <sas_read2@plt>
    b26c:	mov	r1, r6
    b270:	lsr	r9, r9, #3
    b274:	mov	sl, r0
    b278:	mov	r0, r8
    b27c:	bl	4408 <sas_subheader_remainder@plt>
    b280:	cmp	sl, r0
    b284:	bne	b534 <sas7bdat_parse_subheader+0x4f8>
    b288:	ldr	r1, [r4, #164]	; 0xa4
    b28c:	mov	r0, r4
    b290:	add	r1, r9, r1
    b294:	str	r1, [r4, #164]	; 0xa4
    b298:	bl	aef4 <sas7bdat_realloc_col_info>
    b29c:	subs	r8, r0, #0
    b2a0:	bne	b598 <sas7bdat_parse_subheader+0x55c>
    b2a4:	ldr	r3, [r4, #164]	; 0xa4
    b2a8:	mov	r7, #40	; 0x28
    b2ac:	sub	r9, r3, r9
    b2b0:	add	r6, r6, #8
    b2b4:	mul	r7, r7, r9
    b2b8:	add	r5, r5, r6
    b2bc:	add	sl, r4, #60	; 0x3c
    b2c0:	add	r6, sp, #8
    b2c4:	ldr	r3, [r4, #164]	; 0xa4
    b2c8:	cmp	r9, r3
    b2cc:	bge	b108 <sas7bdat_parse_subheader+0xcc>
    b2d0:	ldr	r8, [r4, #192]	; 0xc0
    b2d4:	mov	r2, sl
    b2d8:	mov	r1, r5
    b2dc:	mov	r0, r6
    b2e0:	bl	af50 <sas7bdat_parse_text_ref.isra.0>
    b2e4:	ldr	r0, [r6]
    b2e8:	add	r3, r8, r7
    b2ec:	str	r0, [r8, r7]
    b2f0:	ldrh	r2, [r6, #4]
    b2f4:	add	r5, r5, #8
    b2f8:	add	r9, r9, #1
    b2fc:	strh	r2, [r3, #4]
    b300:	add	r7, r7, #40	; 0x28
    b304:	b	b2c4 <sas7bdat_parse_subheader+0x288>
    b308:	cmn	r0, #4
    b30c:	bne	b44c <sas7bdat_parse_subheader+0x410>
    b310:	ldr	r3, [r4, #44]	; 0x2c
    b314:	cmp	r3, #0
    b318:	subne	r9, r2, #28
    b31c:	lsrne	r9, r9, #4
    b320:	bne	b334 <sas7bdat_parse_subheader+0x2f8>
    b324:	mov	r1, #12
    b328:	sub	r0, r2, #20
    b32c:	bl	2061c <__udivsi3>
    b330:	mov	r9, r0
    b334:	ldr	r1, [r4, #60]	; 0x3c
    b338:	add	r0, r5, r6
    b33c:	bl	4420 <sas_read2@plt>
    b340:	mov	r1, r6
    b344:	mov	sl, r0
    b348:	mov	r0, r8
    b34c:	bl	4408 <sas_subheader_remainder@plt>
    b350:	cmp	sl, r0
    b354:	bne	b534 <sas7bdat_parse_subheader+0x4f8>
    b358:	ldr	r1, [r4, #168]	; 0xa8
    b35c:	mov	r0, r4
    b360:	add	r1, r9, r1
    b364:	str	r1, [r4, #168]	; 0xa8
    b368:	bl	aef4 <sas7bdat_realloc_col_info>
    b36c:	subs	r8, r0, #0
    b370:	bne	b598 <sas7bdat_parse_subheader+0x55c>
    b374:	ldr	r7, [r4, #168]	; 0xa8
    b378:	add	r6, r6, #8
    b37c:	add	r5, r5, r6
    b380:	sub	r7, r7, r9
    b384:	mov	r6, #40	; 0x28
    b388:	mov	sl, #5
    b38c:	mul	r6, r6, r7
    b390:	ldr	r3, [r4, #168]	; 0xa8
    b394:	cmp	r7, r3
    b398:	bge	b108 <sas7bdat_parse_subheader+0xcc>
    b39c:	ldr	r3, [r4, #44]	; 0x2c
    b3a0:	ldr	r1, [r4, #60]	; 0x3c
    b3a4:	cmp	r3, #0
    b3a8:	ldr	r3, [r4, #192]	; 0xc0
    b3ac:	mov	r0, r5
    b3b0:	add	r9, r3, r6
    b3b4:	beq	b440 <sas7bdat_parse_subheader+0x404>
    b3b8:	bl	4414 <sas_read8@plt>
    b3bc:	strd	r0, [r9, #24]
    b3c0:	ldr	r9, [r4, #44]	; 0x2c
    b3c4:	ldr	r3, [r4, #192]	; 0xc0
    b3c8:	cmp	r9, #0
    b3cc:	moveq	r9, #4
    b3d0:	movne	r9, #8
    b3d4:	add	fp, r5, r9
    b3d8:	add	r3, r3, r6
    b3dc:	ldr	r1, [r4, #60]	; 0x3c
    b3e0:	mov	r0, fp
    b3e4:	str	r3, [sp, #4]
    b3e8:	bl	4444 <sas_read4@plt>
    b3ec:	ldr	r3, [sp, #4]
    b3f0:	ldr	r1, [r4, #176]	; 0xb0
    b3f4:	str	r0, [r3, #32]
    b3f8:	ldr	r3, [r4, #192]	; 0xc0
    b3fc:	add	r3, r3, r6
    b400:	ldr	r2, [r3, #32]
    b404:	cmp	r2, r1
    b408:	strhi	r2, [r4, #176]	; 0xb0
    b40c:	ldrb	r2, [fp, #6]
    b410:	cmp	r2, #1
    b414:	streq	sl, [r3, #36]	; 0x24
    b418:	beq	b428 <sas7bdat_parse_subheader+0x3ec>
    b41c:	cmp	r2, #2
    b420:	bne	b534 <sas7bdat_parse_subheader+0x4f8>
    b424:	str	r8, [r3, #36]	; 0x24
    b428:	add	r9, r9, #8
    b42c:	str	r7, [r3, #20]
    b430:	add	r5, r5, r9
    b434:	add	r7, r7, #1
    b438:	add	r6, r6, #40	; 0x28
    b43c:	b	b390 <sas7bdat_parse_subheader+0x354>
    b440:	bl	4444 <sas_read4@plt>
    b444:	mov	r1, #0
    b448:	b	b3bc <sas7bdat_parse_subheader+0x380>
    b44c:	ldr	r3, [pc, #392]	; b5dc <sas7bdat_parse_subheader+0x5a0>
    b450:	cmp	r0, r3
    b454:	bne	b520 <sas7bdat_parse_subheader+0x4e4>
    b458:	ldr	r3, [r4, #44]	; 0x2c
    b45c:	cmp	r3, #0
    b460:	movne	r3, #58	; 0x3a
    b464:	moveq	r3, #46	; 0x2e
    b468:	cmp	r2, r3
    b46c:	bcc	b534 <sas7bdat_parse_subheader+0x4f8>
    b470:	ldr	r1, [r4, #172]	; 0xac
    b474:	mov	r0, r4
    b478:	add	r1, r1, #1
    b47c:	str	r1, [r4, #172]	; 0xac
    b480:	bl	aef4 <sas7bdat_realloc_col_info>
    b484:	subs	r8, r0, #0
    b488:	bne	b598 <sas7bdat_parse_subheader+0x55c>
    b48c:	ldr	r2, [r4, #172]	; 0xac
    b490:	mov	r3, #40	; 0x28
    b494:	ldr	r7, [r4, #192]	; 0xc0
    b498:	mul	r3, r3, r2
    b49c:	add	r6, sp, #8
    b4a0:	sub	r3, r3, #40	; 0x28
    b4a4:	add	r7, r7, r3
    b4a8:	ldr	r3, [r4, #44]	; 0x2c
    b4ac:	add	r9, r4, #60	; 0x3c
    b4b0:	cmp	r3, #0
    b4b4:	addne	r1, r5, #46	; 0x2e
    b4b8:	addeq	r1, r5, #34	; 0x22
    b4bc:	mov	r2, r9
    b4c0:	mov	r0, r6
    b4c4:	bl	af50 <sas7bdat_parse_text_ref.isra.0>
    b4c8:	ldr	r3, [r6]
    b4cc:	ldr	r2, [r4, #172]	; 0xac
    b4d0:	str	r3, [r7, #6]
    b4d4:	ldrh	r3, [r6, #4]
    b4d8:	mov	r0, r6
    b4dc:	strh	r3, [r7, #10]
    b4e0:	mov	r3, #40	; 0x28
    b4e4:	ldr	r7, [r4, #192]	; 0xc0
    b4e8:	mul	r3, r3, r2
    b4ec:	mov	r2, r9
    b4f0:	sub	r3, r3, #40	; 0x28
    b4f4:	add	r7, r7, r3
    b4f8:	ldr	r3, [r4, #44]	; 0x2c
    b4fc:	cmp	r3, #0
    b500:	addne	r1, r5, #52	; 0x34
    b504:	addeq	r1, r5, #40	; 0x28
    b508:	bl	af50 <sas7bdat_parse_text_ref.isra.0>
    b50c:	ldr	r0, [r6]
    b510:	str	r0, [r7, #12]
    b514:	ldrh	r3, [r6, #4]
    b518:	strh	r3, [r7, #16]
    b51c:	b	b598 <sas7bdat_parse_subheader+0x55c>
    b520:	cmn	r0, #2
    b524:	beq	b108 <sas7bdat_parse_subheader+0xcc>
    b528:	bic	r0, r0, #7
    b52c:	cmn	r0, #8
    b530:	beq	b108 <sas7bdat_parse_subheader+0xcc>
    b534:	mov	r8, #5
    b538:	b	b598 <sas7bdat_parse_subheader+0x55c>
    b53c:	cmp	r2, #127	; 0x7f
    b540:	bls	b534 <sas7bdat_parse_subheader+0x4f8>
    b544:	ldr	r1, [r4, #60]	; 0x3c
    b548:	add	r0, r5, #40	; 0x28
    b54c:	bl	4414 <sas_read8@plt>
    b550:	ldr	r1, [r4, #60]	; 0x3c
    b554:	mov	r8, r0
    b558:	add	r0, r5, #48	; 0x30
    b55c:	bl	4414 <sas_read8@plt>
    b560:	mov	r6, r0
    b564:	mov	r7, r1
    b568:	add	r0, r5, #120	; 0x78
    b56c:	ldr	r1, [r4, #60]	; 0x3c
    b570:	bl	4414 <sas_read8@plt>
    b574:	mov	sl, r0
    b578:	str	r8, [r4, #68]	; 0x44
    b57c:	mov	r1, r8
    b580:	ldr	r0, [r4, #124]	; 0x7c
    b584:	bl	4330 <readstat_realloc@plt>
    b588:	cmp	r0, #0
    b58c:	str	r0, [r4, #124]	; 0x7c
    b590:	bne	b0c0 <sas7bdat_parse_subheader+0x84>
    b594:	mov	r8, #3
    b598:	mov	r0, r8
    b59c:	add	sp, sp, #20
    b5a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b5a4:	cmp	r2, #15
    b5a8:	bls	b534 <sas7bdat_parse_subheader+0x4f8>
    b5ac:	ldr	r1, [r4, #60]	; 0x3c
    b5b0:	add	r0, r5, #8
    b5b4:	bl	4414 <sas_read8@plt>
    b5b8:	str	r0, [r4, #80]	; 0x50
    b5bc:	mov	r1, r0
    b5c0:	mov	r0, r4
    b5c4:	add	sp, sp, #20
    b5c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b5cc:	b	aef4 <sas7bdat_realloc_col_info>
    b5d0:	.word	0xf7f7f7f7
    b5d4:	.word	0xf6f6f6f6
    b5d8:	.word	0x000167d7
    b5dc:	.word	0xfffffbfe

0000b5e0 <sas7bdat_parse_page_pass1>:
    b5e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b5e4:	mov	r5, r0
    b5e8:	ldr	r0, [r2, #128]	; 0x80
    b5ec:	sub	sp, sp, #44	; 0x2c
    b5f0:	sub	r0, r0, #4
    b5f4:	mov	r8, r1
    b5f8:	add	r0, r5, r0
    b5fc:	ldr	r1, [r2, #60]	; 0x3c
    b600:	mov	r4, r2
    b604:	bl	4420 <sas_read2@plt>
    b608:	ldr	r3, [r4, #144]	; 0x90
    b60c:	str	r3, [sp, #4]
    b610:	mov	r9, r0
    b614:	ldrd	r0, [r4, #128]	; 0x80
    b618:	mul	r3, r3, r9
    b61c:	adds	r6, r0, r3
    b620:	adc	r7, r1, r3, asr #31
    b624:	mov	r3, #0
    b628:	cmp	r7, r3
    b62c:	cmpeq	r6, r8
    b630:	movhi	r0, #5
    b634:	bhi	b744 <sas7bdat_parse_page_pass1+0x164>
    b638:	add	r3, r5, r8
    b63c:	add	r6, r5, r0
    b640:	mov	r7, #0
    b644:	add	sl, sp, #16
    b648:	str	r3, [sp, #12]
    b64c:	b	b6a0 <sas7bdat_parse_page_pass1+0xc0>
    b650:	mov	r2, #24
    b654:	mov	r1, #0
    b658:	mov	r0, sl
    b65c:	bl	42e8 <memset@plt>
    b660:	ldr	r3, [r4, #136]	; 0x88
    b664:	ldr	r1, [sp, #12]
    b668:	str	r3, [sp, #8]
    b66c:	mov	r2, sl
    b670:	mov	r3, r4
    b674:	sub	r1, r1, r6
    b678:	mov	r0, r6
    b67c:	bl	afa0 <sas7bdat_parse_subheader_pointer>
    b680:	cmp	r0, #0
    b684:	bne	b744 <sas7bdat_parse_page_pass1+0x164>
    b688:	ldrd	r2, [sp, #24]
    b68c:	orrs	r3, r2, r3
    b690:	bne	b6b0 <sas7bdat_parse_page_pass1+0xd0>
    b694:	ldr	r3, [sp, #4]
    b698:	add	r7, r7, #1
    b69c:	add	r6, r6, r3
    b6a0:	cmp	r7, r9
    b6a4:	blt	b650 <sas7bdat_parse_page_pass1+0x70>
    b6a8:	mov	r0, #0
    b6ac:	b	b744 <sas7bdat_parse_page_pass1+0x164>
    b6b0:	ldrb	fp, [sp, #32]
    b6b4:	cmp	fp, #1
    b6b8:	beq	b694 <sas7bdat_parse_page_pass1+0xb4>
    b6bc:	mov	r3, r4
    b6c0:	mov	r2, r9
    b6c4:	mov	r1, r8
    b6c8:	mov	r0, sl
    b6cc:	bl	ae3c <sas7bdat_validate_subheader_pointer>
    b6d0:	cmp	r0, #0
    b6d4:	bne	b744 <sas7bdat_parse_page_pass1+0x164>
    b6d8:	cmp	fp, #0
    b6dc:	bne	b74c <sas7bdat_parse_page_pass1+0x16c>
    b6e0:	ldr	r0, [sp, #16]
    b6e4:	ldr	r1, [r4, #60]	; 0x3c
    b6e8:	add	r0, r5, r0
    b6ec:	bl	4444 <sas_read4@plt>
    b6f0:	ldr	r3, [r4, #40]	; 0x28
    b6f4:	cmp	r3, #0
    b6f8:	bne	b720 <sas7bdat_parse_page_pass1+0x140>
    b6fc:	ldr	r3, [sp, #8]
    b700:	cmp	r3, #8
    b704:	cmneq	r0, #1
    b708:	bne	b720 <sas7bdat_parse_page_pass1+0x140>
    b70c:	ldr	r0, [sp, #16]
    b710:	ldr	r1, [r4, #60]	; 0x3c
    b714:	add	r0, r0, #4
    b718:	add	r0, r5, r0
    b71c:	bl	4444 <sas_read4@plt>
    b720:	cmn	r0, #3
    b724:	bne	b694 <sas7bdat_parse_page_pass1+0xb4>
    b728:	ldr	r1, [sp, #16]
    b72c:	mov	r3, r4
    b730:	ldr	r2, [sp, #24]
    b734:	add	r1, r5, r1
    b738:	bl	b03c <sas7bdat_parse_subheader>
    b73c:	cmp	r0, #0
    b740:	beq	b694 <sas7bdat_parse_page_pass1+0xb4>
    b744:	add	sp, sp, #44	; 0x2c
    b748:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b74c:	cmp	fp, #4
    b750:	beq	b694 <sas7bdat_parse_page_pass1+0xb4>
    b754:	mov	r0, #6
    b758:	b	b744 <sas7bdat_parse_page_pass1+0x164>

0000b75c <readstat_parse_sas7bdat>:
    b75c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b760:	sub	sp, sp, #124	; 0x7c
    b764:	mov	r5, r0
    b768:	ldr	fp, [r0, #32]
    b76c:	mov	r7, r1
    b770:	mov	r0, #1
    b774:	ldr	r1, [pc, #3856]	; c68c <readstat_parse_sas7bdat+0xf30>
    b778:	str	r2, [sp, #72]	; 0x48
    b77c:	bl	3d9c <calloc@plt>
    b780:	mov	r1, #152	; 0x98
    b784:	mov	r4, r0
    b788:	mov	r0, #1
    b78c:	bl	3d9c <calloc@plt>
    b790:	mov	lr, r5
    b794:	mov	ip, r4
    b798:	mov	r6, r0
    b79c:	ldm	lr!, {r0, r1, r2, r3}
    b7a0:	stmia	ip!, {r0, r1, r2, r3}
    b7a4:	ldm	lr, {r0, r1, r2, r3}
    b7a8:	stm	ip, {r0, r1, r2, r3}
    b7ac:	mov	r0, r7
    b7b0:	ldr	r3, [r5, #36]	; 0x24
    b7b4:	str	fp, [r4, #56]	; 0x38
    b7b8:	str	r3, [r4, #200]	; 0xc8
    b7bc:	ldr	r3, [r5, #40]	; 0x28
    b7c0:	ldr	r1, [fp, #20]
    b7c4:	str	r3, [r4, #204]	; 0xcc
    b7c8:	ldr	r3, [sp, #72]	; 0x48
    b7cc:	str	r3, [r4, #52]	; 0x34
    b7d0:	ldr	r3, [r5, #44]	; 0x2c
    b7d4:	str	r3, [r4, #84]	; 0x54
    b7d8:	ldr	r3, [r5, #48]	; 0x30
    b7dc:	cmp	r3, #0
    b7e0:	strgt	r3, [r4, #88]	; 0x58
    b7e4:	ldr	r3, [fp]
    b7e8:	blx	r3
    b7ec:	cmn	r0, #1
    b7f0:	moveq	r5, #1
    b7f4:	beq	b838 <readstat_parse_sas7bdat+0xdc>
    b7f8:	ldr	r3, [fp, #8]
    b7fc:	ldr	r2, [fp, #20]
    b800:	mov	r1, #2
    b804:	mov	r0, #0
    b808:	blx	r3
    b80c:	mvn	r3, #0
    b810:	mvn	r2, #0
    b814:	asr	r1, r0, #31
    b818:	cmp	r1, r3
    b81c:	cmpeq	r0, r2
    b820:	strd	r0, [r4, #32]
    b824:	bne	b970 <readstat_parse_sas7bdat+0x214>
    b828:	ldr	r5, [r4, #24]
    b82c:	cmp	r5, #0
    b830:	bne	b94c <readstat_parse_sas7bdat+0x1f0>
    b834:	mov	r5, #15
    b838:	ldr	r3, [fp, #4]
    b83c:	ldr	r0, [fp, #20]
    b840:	blx	r3
    b844:	sub	r3, r5, #1
    b848:	cmp	r5, #15
    b84c:	cmpne	r3, #1
    b850:	bhi	b8b8 <readstat_parse_sas7bdat+0x15c>
    b854:	ldr	r3, [r4, #24]
    b858:	cmp	r3, #0
    b85c:	beq	b8b8 <readstat_parse_sas7bdat+0x15c>
    b860:	mov	r0, r5
    b864:	bl	3e8c <readstat_error_message@plt>
    b868:	add	r7, r4, #480	; 0x1e0
    b86c:	add	r7, r7, #1
    b870:	mov	r9, r0
    b874:	bl	42ac <__errno_location@plt>
    b878:	mov	r8, r0
    b87c:	ldr	r0, [r0]
    b880:	bl	418c <strerror@plt>
    b884:	ldr	r3, [r8]
    b888:	ldr	r2, [pc, #3584]	; c690 <readstat_parse_sas7bdat+0xf34>
    b88c:	mov	r1, #2048	; 0x800
    b890:	str	r5, [sp]
    b894:	add	r2, pc, r2
    b898:	stmib	sp, {r0, r3}
    b89c:	mov	r3, r9
    b8a0:	mov	r0, r7
    b8a4:	bl	42c4 <snprintf@plt>
    b8a8:	ldr	r3, [r4, #24]
    b8ac:	ldr	r1, [sp, #72]	; 0x48
    b8b0:	mov	r0, r7
    b8b4:	blx	r3
    b8b8:	ldr	r3, [r4, #160]	; 0xa0
    b8bc:	cmp	r3, #0
    b8c0:	movne	r7, #0
    b8c4:	bne	c584 <readstat_parse_sas7bdat+0xe28>
    b8c8:	ldr	r3, [r4, #196]	; 0xc4
    b8cc:	cmp	r3, #0
    b8d0:	movne	r7, #0
    b8d4:	bne	c5bc <readstat_parse_sas7bdat+0xe60>
    b8d8:	ldr	r0, [r4, #192]	; 0xc0
    b8dc:	cmp	r0, #0
    b8e0:	beq	b8e8 <readstat_parse_sas7bdat+0x18c>
    b8e4:	bl	3f04 <free@plt>
    b8e8:	ldr	r0, [r4, #180]	; 0xb4
    b8ec:	cmp	r0, #0
    b8f0:	beq	b8f8 <readstat_parse_sas7bdat+0x19c>
    b8f4:	bl	3f04 <free@plt>
    b8f8:	ldr	r0, [r4, #120]	; 0x78
    b8fc:	cmp	r0, #0
    b900:	beq	b908 <readstat_parse_sas7bdat+0x1ac>
    b904:	bl	3f04 <free@plt>
    b908:	ldr	r0, [r4, #124]	; 0x7c
    b90c:	cmp	r0, #0
    b910:	beq	b918 <readstat_parse_sas7bdat+0x1bc>
    b914:	bl	3f04 <free@plt>
    b918:	ldr	r0, [r4, #208]	; 0xd0
    b91c:	cmp	r0, #0
    b920:	beq	b928 <readstat_parse_sas7bdat+0x1cc>
    b924:	bl	3e14 <iconv_close@plt>
    b928:	mov	r0, r4
    b92c:	bl	3f04 <free@plt>
    b930:	cmp	r6, #0
    b934:	beq	b940 <readstat_parse_sas7bdat+0x1e4>
    b938:	mov	r0, r6
    b93c:	bl	3f04 <free@plt>
    b940:	mov	r0, r5
    b944:	add	sp, sp, #124	; 0x7c
    b948:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b94c:	ldr	r1, [pc, #3392]	; c694 <readstat_parse_sas7bdat+0xf38>
    b950:	add	r3, r4, #480	; 0x1e0
    b954:	add	r3, r3, #1
    b958:	add	r1, pc, r1
    b95c:	mov	r0, r3
    b960:	bl	40e4 <strcpy@plt>
    b964:	ldr	r1, [r4, #52]	; 0x34
    b968:	blx	r5
    b96c:	b	b834 <readstat_parse_sas7bdat+0xd8>
    b970:	mov	r1, #0
    b974:	ldr	r3, [fp, #8]
    b978:	ldr	r2, [fp, #20]
    b97c:	mov	r0, r1
    b980:	blx	r3
    b984:	cmn	r0, #1
    b988:	bne	b9ac <readstat_parse_sas7bdat+0x250>
    b98c:	ldr	r5, [r4, #24]
    b990:	cmp	r5, #0
    b994:	beq	b834 <readstat_parse_sas7bdat+0xd8>
    b998:	ldr	r1, [pc, #3320]	; c698 <readstat_parse_sas7bdat+0xf3c>
    b99c:	add	r3, r4, #480	; 0x1e0
    b9a0:	add	r3, r3, #1
    b9a4:	add	r1, pc, r1
    b9a8:	b	b95c <readstat_parse_sas7bdat+0x200>
    b9ac:	ldr	r3, [sp, #72]	; 0x48
    b9b0:	ldr	r2, [r4, #24]
    b9b4:	mov	r1, r6
    b9b8:	mov	r0, fp
    b9bc:	bl	43f0 <sas_read_header@plt>
    b9c0:	subs	r5, r0, #0
    b9c4:	bne	b838 <readstat_parse_sas7bdat+0xdc>
    b9c8:	ldr	r3, [r6, #4]
    b9cc:	str	r3, [r4, #44]	; 0x2c
    b9d0:	ldr	r3, [r6]
    b9d4:	str	r3, [r4, #40]	; 0x28
    b9d8:	ldr	r3, [r6, #8]
    b9dc:	str	r3, [r4, #48]	; 0x30
    b9e0:	bl	3ef8 <machine_is_little_endian@plt>
    b9e4:	ldr	r3, [r6]
    b9e8:	eor	r0, r0, r3
    b9ec:	ldrd	r2, [r6, #64]	; 0x40
    b9f0:	str	r0, [r4, #60]	; 0x3c
    b9f4:	ldr	r0, [r6, #32]
    b9f8:	strd	r2, [r4, #96]	; 0x60
    b9fc:	ldrd	r2, [r6, #56]	; 0x38
    ba00:	str	r0, [r4, #112]	; 0x70
    ba04:	strd	r2, [r4, #104]	; 0x68
    ba08:	ldr	r3, [r6, #36]	; 0x24
    ba0c:	str	r3, [r4, #116]	; 0x74
    ba10:	ldrd	r2, [r6, #40]	; 0x28
    ba14:	strd	r2, [r4, #128]	; 0x80
    ba18:	ldrd	r2, [r6, #48]	; 0x30
    ba1c:	strd	r2, [r4, #144]	; 0x90
    ba20:	ldr	r3, [r4, #44]	; 0x2c
    ba24:	cmp	r3, #0
    ba28:	moveq	r2, #4
    ba2c:	movne	r2, #8
    ba30:	mov	r3, #0
    ba34:	strd	r2, [r4, #136]	; 0x88
    ba38:	ldr	r3, [r6, #72]	; 0x48
    ba3c:	str	r3, [r4, #212]	; 0xd4
    ba40:	ldr	r3, [r6, #76]	; 0x4c
    ba44:	str	r3, [r4, #216]	; 0xd8
    ba48:	ldr	r3, [r6, #12]
    ba4c:	str	r3, [r4, #220]	; 0xdc
    ba50:	ldr	r3, [r4, #200]	; 0xc8
    ba54:	cmp	r3, #0
    ba58:	ldreq	r3, [r6, #144]	; 0x90
    ba5c:	streq	r3, [r4, #200]	; 0xc8
    ba60:	bl	4270 <readstat_malloc@plt>
    ba64:	cmp	r0, #0
    ba68:	str	r0, [r4, #120]	; 0x78
    ba6c:	moveq	r5, #3
    ba70:	beq	b838 <readstat_parse_sas7bdat+0xdc>
    ba74:	ldr	r7, [r4, #200]	; 0xc8
    ba78:	cmp	r7, #0
    ba7c:	beq	babc <readstat_parse_sas7bdat+0x360>
    ba80:	ldr	r5, [r4, #204]	; 0xcc
    ba84:	cmp	r5, #0
    ba88:	beq	babc <readstat_parse_sas7bdat+0x360>
    ba8c:	mov	r1, r5
    ba90:	mov	r0, r7
    ba94:	bl	3e44 <strcmp@plt>
    ba98:	cmp	r0, #0
    ba9c:	beq	babc <readstat_parse_sas7bdat+0x360>
    baa0:	mov	r0, r5
    baa4:	mov	r1, r7
    baa8:	bl	4180 <iconv_open@plt>
    baac:	cmn	r0, #1
    bab0:	moveq	r5, #7
    bab4:	beq	b838 <readstat_parse_sas7bdat+0xdc>
    bab8:	str	r0, [r4, #208]	; 0xd0
    babc:	ldr	r3, [r4, #208]	; 0xd0
    bac0:	add	r2, r6, #80	; 0x50
    bac4:	str	r3, [sp]
    bac8:	ldr	r1, [pc, #3020]	; c69c <readstat_parse_sas7bdat+0xf40>
    bacc:	mov	r3, #64	; 0x40
    bad0:	add	r0, r4, #224	; 0xe0
    bad4:	bl	427c <readstat_convert@plt>
    bad8:	subs	r5, r0, #0
    badc:	bne	b838 <readstat_parse_sas7bdat+0xdc>
    bae0:	ldr	r7, [r4, #56]	; 0x38
    bae4:	mov	r2, #0
    bae8:	mov	r3, #0
    baec:	mov	r9, r5
    baf0:	strd	r2, [sp, #32]
    baf4:	ldrd	r2, [r4, #104]	; 0x68
    baf8:	ldrd	r0, [sp, #32]
    bafc:	cmp	r1, r3
    bb00:	cmpeq	r0, r2
    bb04:	bcc	bb28 <readstat_parse_sas7bdat+0x3cc>
    bb08:	ldrd	r8, [r4, #104]	; 0x68
    bb0c:	mov	r2, #0
    bb10:	mov	r3, #0
    bb14:	subs	r8, r8, #1
    bb18:	ldr	r7, [r4, #56]	; 0x38
    bb1c:	sbc	r9, r9, #0
    bb20:	strd	r2, [sp, #40]	; 0x28
    bb24:	b	be80 <readstat_parse_sas7bdat+0x724>
    bb28:	ldr	ip, [r4, #112]	; 0x70
    bb2c:	ldr	lr, [sp, #32]
    bb30:	ldr	r0, [r4, #96]	; 0x60
    bb34:	ldr	r3, [r7, #8]
    bb38:	ldr	r2, [r7, #20]
    bb3c:	mov	r1, r9
    bb40:	mla	r0, ip, lr, r0
    bb44:	blx	r3
    bb48:	cmn	r0, #1
    bb4c:	bne	bbd0 <readstat_parse_sas7bdat+0x474>
    bb50:	ldr	r3, [r4, #24]
    bb54:	cmp	r3, #0
    bb58:	beq	b834 <readstat_parse_sas7bdat+0xd8>
    bb5c:	ldr	r0, [r4, #112]	; 0x70
    bb60:	ldr	ip, [sp, #36]	; 0x24
    bb64:	ldr	r1, [r4, #116]	; 0x74
    bb68:	ldr	lr, [sp, #32]
    bb6c:	mul	ip, r0, ip
    bb70:	str	r0, [sp, #24]
    bb74:	mla	ip, r1, lr, ip
    bb78:	str	r1, [sp, #28]
    bb7c:	umull	r0, r1, r0, lr
    bb80:	ldrd	r2, [r4, #96]	; 0x60
    bb84:	add	r1, ip, r1
    bb88:	add	r5, r4, #480	; 0x1e0
    bb8c:	strd	r2, [sp, #8]
    bb90:	adds	r2, r2, r0
    bb94:	adc	r3, r3, r1
    bb98:	ldrd	r8, [sp, #32]
    bb9c:	strd	r2, [sp]
    bba0:	ldr	r2, [pc, #2808]	; c6a0 <readstat_parse_sas7bdat+0xf44>
    bba4:	add	r5, r5, #1
    bba8:	add	r2, pc, r2
    bbac:	strd	r8, [sp, #16]
    bbb0:	mov	r1, #2048	; 0x800
    bbb4:	mov	r0, r5
    bbb8:	bl	42c4 <snprintf@plt>
    bbbc:	ldr	r3, [r4, #24]
    bbc0:	ldr	r1, [r4, #52]	; 0x34
    bbc4:	mov	r0, r5
    bbc8:	blx	r3
    bbcc:	b	b834 <readstat_parse_sas7bdat+0xd8>
    bbd0:	ldr	r5, [r4, #44]	; 0x2c
    bbd4:	ldr	r3, [r7, #12]
    bbd8:	cmp	r5, #0
    bbdc:	movne	r5, #16
    bbe0:	moveq	r5, #0
    bbe4:	add	r8, r5, #18
    bbe8:	ldr	r2, [r7, #20]
    bbec:	mov	r1, r8
    bbf0:	ldr	r0, [r4, #120]	; 0x78
    bbf4:	ldr	sl, [r4, #112]	; 0x70
    bbf8:	blx	r3
    bbfc:	cmp	r8, r0
    bc00:	bls	bc0c <readstat_parse_sas7bdat+0x4b0>
    bc04:	mov	r5, #2
    bc08:	b	b838 <readstat_parse_sas7bdat+0xdc>
    bc0c:	ldr	r0, [r4, #120]	; 0x78
    bc10:	add	r5, r5, #16
    bc14:	ldr	r1, [r4, #60]	; 0x3c
    bc18:	add	r0, r0, r5
    bc1c:	bl	4420 <sas_read2@plt>
    bc20:	and	r3, r0, #3840	; 0xf00
    bc24:	cmp	r3, #256	; 0x100
    bc28:	beq	bb08 <readstat_parse_sas7bdat+0x3ac>
    bc2c:	ands	r3, r0, #36864	; 0x9000
    bc30:	str	r3, [sp, #40]	; 0x28
    bc34:	bne	bcf4 <readstat_parse_sas7bdat+0x598>
    bc38:	ldr	r0, [r4, #120]	; 0x78
    bc3c:	sub	sl, sl, r8
    bc40:	ldr	r3, [r7, #12]
    bc44:	ldr	r2, [r7, #20]
    bc48:	mov	r1, sl
    bc4c:	add	r0, r0, r8
    bc50:	blx	r3
    bc54:	cmp	sl, r0
    bc58:	bhi	bc04 <readstat_parse_sas7bdat+0x4a8>
    bc5c:	mov	r2, r4
    bc60:	ldr	r1, [r4, #112]	; 0x70
    bc64:	ldr	r0, [r4, #120]	; 0x78
    bc68:	bl	b5e0 <sas7bdat_parse_page_pass1>
    bc6c:	subs	r5, r0, #0
    bc70:	beq	bcf4 <readstat_parse_sas7bdat+0x598>
    bc74:	ldr	r3, [r4, #24]
    bc78:	cmp	r3, #0
    bc7c:	beq	b838 <readstat_parse_sas7bdat+0xdc>
    bc80:	cmp	r5, #4
    bc84:	beq	b838 <readstat_parse_sas7bdat+0xdc>
    bc88:	ldr	r3, [r7, #8]
    bc8c:	ldr	r2, [r7, #20]
    bc90:	mov	r1, #1
    bc94:	ldr	r0, [sp, #40]	; 0x28
    bc98:	blx	r3
    bc9c:	add	r7, r4, #480	; 0x1e0
    bca0:	add	r7, r7, #1
    bca4:	subs	r2, r0, #1
    bca8:	asr	r1, r0, #31
    bcac:	sbc	r3, r1, #0
    bcb0:	strd	r2, [sp, #16]
    bcb4:	ldrd	r2, [r4, #112]	; 0x70
    bcb8:	subs	r0, r0, r2
    bcbc:	sbc	r1, r1, r3
    bcc0:	ldrd	r2, [sp, #32]
    bcc4:	strd	r0, [sp, #8]
    bcc8:	strd	r2, [sp]
    bccc:	ldr	r2, [pc, #2512]	; c6a4 <readstat_parse_sas7bdat+0xf48>
    bcd0:	add	r2, pc, r2
    bcd4:	mov	r1, #2048	; 0x800
    bcd8:	mov	r0, r7
    bcdc:	bl	42c4 <snprintf@plt>
    bce0:	ldr	r3, [r4, #24]
    bce4:	ldr	r1, [r4, #52]	; 0x34
    bce8:	mov	r0, r7
    bcec:	blx	r3
    bcf0:	b	b838 <readstat_parse_sas7bdat+0xdc>
    bcf4:	ldrd	r2, [sp, #32]
    bcf8:	adds	r2, r2, #1
    bcfc:	adc	r3, r3, #0
    bd00:	strd	r2, [sp, #32]
    bd04:	b	baf4 <readstat_parse_sas7bdat+0x398>
    bd08:	ldr	r5, [r4, #44]	; 0x2c
    bd0c:	ldr	r3, [r4, #112]	; 0x70
    bd10:	cmp	r5, #0
    bd14:	movne	r5, #16
    bd18:	moveq	r5, #0
    bd1c:	add	sl, r5, #18
    bd20:	str	r3, [sp, #60]	; 0x3c
    bd24:	ldr	r2, [r7, #20]
    bd28:	ldr	r3, [r7, #12]
    bd2c:	mov	r1, sl
    bd30:	ldr	r0, [r4, #120]	; 0x78
    bd34:	blx	r3
    bd38:	cmp	sl, r0
    bd3c:	bhi	bc04 <readstat_parse_sas7bdat+0x4a8>
    bd40:	ldr	r0, [r4, #120]	; 0x78
    bd44:	add	r5, r5, #16
    bd48:	ldr	r1, [r4, #60]	; 0x3c
    bd4c:	add	r0, r0, r5
    bd50:	bl	4420 <sas_read2@plt>
    bd54:	and	r3, r0, #3840	; 0xf00
    bd58:	cmp	r3, #256	; 0x100
    bd5c:	bne	bdbc <readstat_parse_sas7bdat+0x660>
    bd60:	ldrd	r2, [sp, #40]	; 0x28
    bd64:	orrs	r3, r2, r3
    bd68:	beq	be78 <readstat_parse_sas7bdat+0x71c>
    bd6c:	ldr	r3, [fp, #8]
    bd70:	ldr	r2, [fp, #20]
    bd74:	mov	r1, #0
    bd78:	ldr	r0, [r4, #96]	; 0x60
    bd7c:	blx	r3
    bd80:	cmn	r0, #1
    bd84:	bne	bf0c <readstat_parse_sas7bdat+0x7b0>
    bd88:	ldr	r3, [r4, #24]
    bd8c:	cmp	r3, #0
    bd90:	beq	b834 <readstat_parse_sas7bdat+0xd8>
    bd94:	ldrd	r2, [r4, #96]	; 0x60
    bd98:	add	r5, r4, #480	; 0x1e0
    bd9c:	add	r5, r5, #1
    bda0:	strd	r2, [sp]
    bda4:	ldr	r2, [pc, #2300]	; c6a8 <readstat_parse_sas7bdat+0xf4c>
    bda8:	mov	r1, #2048	; 0x800
    bdac:	add	r2, pc, r2
    bdb0:	mov	r0, r5
    bdb4:	bl	42c4 <snprintf@plt>
    bdb8:	b	bbbc <readstat_parse_sas7bdat+0x460>
    bdbc:	ands	r3, r0, #36864	; 0x9000
    bdc0:	str	r3, [sp, #48]	; 0x30
    bdc4:	bne	be78 <readstat_parse_sas7bdat+0x71c>
    bdc8:	ldr	r3, [sp, #60]	; 0x3c
    bdcc:	ldr	r0, [r4, #120]	; 0x78
    bdd0:	sub	r5, r3, sl
    bdd4:	ldr	r2, [r7, #20]
    bdd8:	ldr	r3, [r7, #12]
    bddc:	mov	r1, r5
    bde0:	add	r0, r0, sl
    bde4:	blx	r3
    bde8:	cmp	r5, r0
    bdec:	bhi	bc04 <readstat_parse_sas7bdat+0x4a8>
    bdf0:	mov	r2, r4
    bdf4:	ldr	r1, [r4, #112]	; 0x70
    bdf8:	ldr	r0, [r4, #120]	; 0x78
    bdfc:	bl	b5e0 <sas7bdat_parse_page_pass1>
    be00:	subs	r5, r0, #0
    be04:	beq	be68 <readstat_parse_sas7bdat+0x70c>
    be08:	ldr	r3, [r4, #24]
    be0c:	cmp	r3, #0
    be10:	beq	b838 <readstat_parse_sas7bdat+0xdc>
    be14:	cmp	r5, #4
    be18:	beq	b838 <readstat_parse_sas7bdat+0xdc>
    be1c:	ldr	r3, [r7, #8]
    be20:	ldr	r2, [r7, #20]
    be24:	mov	r1, #1
    be28:	ldr	r0, [sp, #48]	; 0x30
    be2c:	blx	r3
    be30:	add	r7, r4, #480	; 0x1e0
    be34:	add	r7, r7, #1
    be38:	strd	r8, [sp]
    be3c:	subs	r2, r0, #1
    be40:	asr	r1, r0, #31
    be44:	sbc	r3, r1, #0
    be48:	strd	r2, [sp, #16]
    be4c:	ldrd	r2, [r4, #112]	; 0x70
    be50:	subs	r0, r0, r2
    be54:	sbc	r1, r1, r3
    be58:	ldr	r2, [pc, #2124]	; c6ac <readstat_parse_sas7bdat+0xf50>
    be5c:	strd	r0, [sp, #8]
    be60:	add	r2, pc, r2
    be64:	b	bcd4 <readstat_parse_sas7bdat+0x578>
    be68:	ldrd	r2, [sp, #40]	; 0x28
    be6c:	adds	r2, r2, #1
    be70:	adc	r3, r3, #0
    be74:	strd	r2, [sp, #40]	; 0x28
    be78:	subs	r8, r8, #1
    be7c:	sbc	r9, r9, #0
    be80:	ldrd	r2, [sp, #32]
    be84:	cmp	r3, r9
    be88:	cmpeq	r2, r8
    be8c:	bcs	bd6c <readstat_parse_sas7bdat+0x610>
    be90:	ldr	ip, [r4, #112]	; 0x70
    be94:	ldr	r0, [r4, #96]	; 0x60
    be98:	ldr	r3, [r7, #8]
    be9c:	ldr	r2, [r7, #20]
    bea0:	mov	r1, #0
    bea4:	mla	r0, ip, r8, r0
    bea8:	blx	r3
    beac:	cmn	r0, #1
    beb0:	bne	bd08 <readstat_parse_sas7bdat+0x5ac>
    beb4:	ldr	r3, [r4, #24]
    beb8:	cmp	r3, #0
    bebc:	beq	b834 <readstat_parse_sas7bdat+0xd8>
    bec0:	ldr	r1, [r4, #116]	; 0x74
    bec4:	ldr	r0, [r4, #112]	; 0x70
    bec8:	str	r1, [sp, #28]
    becc:	mul	r1, r8, r1
    bed0:	str	r0, [sp, #24]
    bed4:	mla	ip, r0, r9, r1
    bed8:	umull	r0, r1, r8, r0
    bedc:	ldrd	r2, [r4, #96]	; 0x60
    bee0:	add	r1, ip, r1
    bee4:	add	r5, r4, #480	; 0x1e0
    bee8:	strd	r2, [sp, #8]
    beec:	adds	r2, r2, r0
    bef0:	adc	r3, r3, r1
    bef4:	add	r5, r5, #1
    bef8:	strd	r2, [sp]
    befc:	ldr	r2, [pc, #1964]	; c6b0 <readstat_parse_sas7bdat+0xf54>
    bf00:	strd	r8, [sp, #16]
    bf04:	add	r2, pc, r2
    bf08:	b	bbb0 <readstat_parse_sas7bdat+0x454>
    bf0c:	ldr	r3, [r4, #56]	; 0x38
    bf10:	mov	r2, #0
    bf14:	str	r3, [sp, #32]
    bf18:	mov	r3, #0
    bf1c:	strd	r2, [sp, #48]	; 0x30
    bf20:	ldrd	r0, [sp, #48]	; 0x30
    bf24:	ldrd	r2, [r4, #104]	; 0x68
    bf28:	cmp	r3, r1
    bf2c:	cmpeq	r2, r0
    bf30:	bhi	bfa8 <readstat_parse_sas7bdat+0x84c>
    bf34:	mov	r1, #0
    bf38:	mov	r0, r4
    bf3c:	bl	493c <sas7bdat_submit_columns_if_needed>
    bf40:	subs	r5, r0, #0
    bf44:	bne	b838 <readstat_parse_sas7bdat+0xdc>
    bf48:	ldr	r3, [r4, #16]
    bf4c:	cmp	r3, #0
    bf50:	beq	c564 <readstat_parse_sas7bdat+0xe08>
    bf54:	ldr	r2, [r4, #76]	; 0x4c
    bf58:	ldr	r3, [r4, #84]	; 0x54
    bf5c:	cmp	r2, r3
    bf60:	beq	c564 <readstat_parse_sas7bdat+0xe08>
    bf64:	ldr	r1, [r4, #24]
    bf68:	cmp	r1, #0
    bf6c:	beq	bfa0 <readstat_parse_sas7bdat+0x844>
    bf70:	str	r2, [sp]
    bf74:	add	r5, r4, #480	; 0x1e0
    bf78:	ldr	r2, [pc, #1844]	; c6b4 <readstat_parse_sas7bdat+0xf58>
    bf7c:	add	r5, r5, #1
    bf80:	mov	r1, #2048	; 0x800
    bf84:	add	r2, pc, r2
    bf88:	mov	r0, r5
    bf8c:	bl	42c4 <snprintf@plt>
    bf90:	ldr	r3, [r4, #24]
    bf94:	ldr	r1, [r4, #52]	; 0x34
    bf98:	mov	r0, r5
    bf9c:	blx	r3
    bfa0:	mov	r5, #9
    bfa4:	b	b838 <readstat_parse_sas7bdat+0xdc>
    bfa8:	mov	r0, r4
    bfac:	bl	45b8 <sas7bdat_update_progress>
    bfb0:	subs	r5, r0, #0
    bfb4:	bne	b838 <readstat_parse_sas7bdat+0xdc>
    bfb8:	ldr	r3, [sp, #32]
    bfbc:	ldr	r2, [sp, #32]
    bfc0:	ldr	r1, [r4, #112]	; 0x70
    bfc4:	ldr	r3, [r3, #12]
    bfc8:	ldr	r2, [r2, #20]
    bfcc:	ldr	r0, [r4, #120]	; 0x78
    bfd0:	blx	r3
    bfd4:	ldrd	r2, [r4, #112]	; 0x70
    bfd8:	strd	r2, [sp, #40]	; 0x28
    bfdc:	asr	r1, r0, #31
    bfe0:	cmp	r1, r3
    bfe4:	cmpeq	r0, r2
    bfe8:	bcc	bc04 <readstat_parse_sas7bdat+0x4a8>
    bfec:	ldr	r0, [r4, #128]	; 0x80
    bff0:	ldr	sl, [r4, #120]	; 0x78
    bff4:	ldr	r3, [sp, #40]	; 0x28
    bff8:	sub	r0, r0, #8
    bffc:	ldr	r1, [r4, #60]	; 0x3c
    c000:	add	r0, sl, r0
    c004:	str	r3, [sp, #76]	; 0x4c
    c008:	bl	4420 <sas_read2@plt>
    c00c:	and	r3, r0, #3840	; 0xf00
    c010:	cmp	r3, #256	; 0x100
    c014:	str	r3, [sp, #84]	; 0x54
    c018:	bne	c0b4 <readstat_parse_sas7bdat+0x958>
    c01c:	ldr	r0, [r4, #128]	; 0x80
    c020:	ldr	r1, [r4, #60]	; 0x3c
    c024:	sub	r0, r0, #6
    c028:	add	r0, sl, r0
    c02c:	bl	4420 <sas_read2@plt>
    c030:	ldr	r2, [r4, #128]	; 0x80
    c034:	add	r7, sl, r2
    c038:	str	r0, [r4, #72]	; 0x48
    c03c:	cmp	r7, #0
    c040:	beq	c094 <readstat_parse_sas7bdat+0x938>
    c044:	mov	r1, #0
    c048:	mov	r0, r4
    c04c:	bl	493c <sas7bdat_submit_columns_if_needed>
    c050:	subs	r5, r0, #0
    c054:	bne	c618 <readstat_parse_sas7bdat+0xebc>
    c058:	ldr	r3, [r4, #16]
    c05c:	cmp	r3, #0
    c060:	beq	c094 <readstat_parse_sas7bdat+0x938>
    c064:	ldr	r3, [sp, #40]	; 0x28
    c068:	mov	r8, r5
    c06c:	add	r9, sl, r3
    c070:	sub	r9, r9, r7
    c074:	mov	sl, r5
    c078:	ldr	r3, [r4, #72]	; 0x48
    c07c:	cmp	r3, sl
    c080:	bls	c094 <readstat_parse_sas7bdat+0x938>
    c084:	ldr	r2, [r4, #76]	; 0x4c
    c088:	ldr	r3, [r4, #84]	; 0x54
    c08c:	cmp	r2, r3
    c090:	bcc	c530 <readstat_parse_sas7bdat+0xdd4>
    c094:	ldr	r2, [r4, #76]	; 0x4c
    c098:	ldr	r3, [r4, #84]	; 0x54
    c09c:	cmp	r2, r3
    c0a0:	beq	bf34 <readstat_parse_sas7bdat+0x7d8>
    c0a4:	ldrd	r2, [sp, #48]	; 0x30
    c0a8:	adds	r2, r2, #1
    c0ac:	adc	r3, r3, #0
    c0b0:	b	bf1c <readstat_parse_sas7bdat+0x7c0>
    c0b4:	ands	r5, r0, #36864	; 0x9000
    c0b8:	bne	c094 <readstat_parse_sas7bdat+0x938>
    c0bc:	ldr	r0, [r4, #128]	; 0x80
    c0c0:	ldr	r1, [r4, #60]	; 0x3c
    c0c4:	sub	r0, r0, #4
    c0c8:	add	r0, sl, r0
    c0cc:	bl	4420 <sas_read2@plt>
    c0d0:	ldr	r1, [r4, #144]	; 0x90
    c0d4:	ldrd	r2, [r4, #128]	; 0x80
    c0d8:	str	r1, [sp, #80]	; 0x50
    c0dc:	mul	r1, r1, r0
    c0e0:	str	r0, [sp, #64]	; 0x40
    c0e4:	adds	r8, r2, r1
    c0e8:	adc	r9, r3, r1, asr #31
    c0ec:	mov	r0, r8
    c0f0:	mov	r1, r9
    c0f4:	ldrd	r8, [sp, #40]	; 0x28
    c0f8:	mov	r9, #0
    c0fc:	cmp	r1, r9
    c100:	cmpeq	r0, r8
    c104:	bhi	c684 <readstat_parse_sas7bdat+0xf28>
    c108:	add	r7, sl, r2
    c10c:	str	r5, [sp, #68]	; 0x44
    c110:	b	c16c <readstat_parse_sas7bdat+0xa10>
    c114:	add	r9, sp, #96	; 0x60
    c118:	mov	r2, #24
    c11c:	mov	r1, #0
    c120:	mov	r0, r9
    c124:	bl	42e8 <memset@plt>
    c128:	ldr	r3, [sp, #76]	; 0x4c
    c12c:	mov	r2, r9
    c130:	add	r1, sl, r3
    c134:	sub	r1, r1, r7
    c138:	mov	r3, r4
    c13c:	mov	r0, r7
    c140:	bl	afa0 <sas7bdat_parse_subheader_pointer>
    c144:	subs	r5, r0, #0
    c148:	bne	c618 <readstat_parse_sas7bdat+0xebc>
    c14c:	ldrd	r2, [sp, #104]	; 0x68
    c150:	orrs	r3, r2, r3
    c154:	bne	c1cc <readstat_parse_sas7bdat+0xa70>
    c158:	ldr	r3, [sp, #80]	; 0x50
    c15c:	add	r7, r7, r3
    c160:	ldr	r3, [sp, #68]	; 0x44
    c164:	add	r3, r3, #1
    c168:	str	r3, [sp, #68]	; 0x44
    c16c:	ldr	r3, [sp, #64]	; 0x40
    c170:	ldr	r2, [sp, #68]	; 0x44
    c174:	cmp	r3, r2
    c178:	bgt	c114 <readstat_parse_sas7bdat+0x9b8>
    c17c:	ldr	r3, [sp, #84]	; 0x54
    c180:	cmp	r3, #512	; 0x200
    c184:	bne	c094 <readstat_parse_sas7bdat+0x938>
    c188:	sub	r3, r7, sl
    c18c:	rsbs	r2, r3, #0
    c190:	and	r2, r2, #7
    c194:	and	r3, r3, #7
    c198:	rsbpl	r3, r2, #0
    c19c:	cmp	r3, #4
    c1a0:	bne	c03c <readstat_parse_sas7bdat+0x8e0>
    c1a4:	ldr	r3, [r7]
    c1a8:	ldr	r2, [pc, #1288]	; c6b8 <readstat_parse_sas7bdat+0xf5c>
    c1ac:	cmp	r3, r2
    c1b0:	cmpne	r3, #0
    c1b4:	beq	c1c4 <readstat_parse_sas7bdat+0xa68>
    c1b8:	ldr	r3, [r4, #48]	; 0x30
    c1bc:	cmp	r3, #0
    c1c0:	beq	c044 <readstat_parse_sas7bdat+0x8e8>
    c1c4:	add	r7, r7, #4
    c1c8:	b	c03c <readstat_parse_sas7bdat+0x8e0>
    c1cc:	ldrb	r8, [sp, #112]	; 0x70
    c1d0:	cmp	r8, #1
    c1d4:	beq	c158 <readstat_parse_sas7bdat+0x9fc>
    c1d8:	mov	r3, r4
    c1dc:	ldr	r2, [sp, #64]	; 0x40
    c1e0:	ldr	r1, [sp, #76]	; 0x4c
    c1e4:	mov	r0, r9
    c1e8:	bl	ae3c <sas7bdat_validate_subheader_pointer>
    c1ec:	subs	r5, r0, #0
    c1f0:	bne	c618 <readstat_parse_sas7bdat+0xebc>
    c1f4:	cmp	r8, #0
    c1f8:	bne	c29c <readstat_parse_sas7bdat+0xb40>
    c1fc:	ldr	r0, [sp, #96]	; 0x60
    c200:	ldr	r1, [r4, #60]	; 0x3c
    c204:	add	r0, sl, r0
    c208:	bl	4444 <sas_read4@plt>
    c20c:	ldr	r3, [r4, #40]	; 0x28
    c210:	cmp	r3, #0
    c214:	cmneq	r0, #1
    c218:	bne	c240 <readstat_parse_sas7bdat+0xae4>
    c21c:	ldr	r3, [r4, #44]	; 0x2c
    c220:	cmp	r3, #0
    c224:	mvneq	r0, #0
    c228:	beq	c240 <readstat_parse_sas7bdat+0xae4>
    c22c:	ldr	r0, [sp, #96]	; 0x60
    c230:	ldr	r1, [r4, #60]	; 0x3c
    c234:	add	r0, r0, #4
    c238:	add	r0, sl, r0
    c23c:	bl	4444 <sas_read4@plt>
    c240:	ldrb	r3, [sp, #113]	; 0x71
    c244:	cmp	r3, #0
    c248:	beq	c27c <readstat_parse_sas7bdat+0xb20>
    c24c:	ldr	r3, [pc, #1128]	; c6bc <readstat_parse_sas7bdat+0xf60>
    c250:	ldr	r2, [pc, #1128]	; c6c0 <readstat_parse_sas7bdat+0xf64>
    c254:	cmp	r0, r3
    c258:	cmpne	r0, r2
    c25c:	beq	c27c <readstat_parse_sas7bdat+0xb20>
    c260:	add	r3, r0, #1024	; 0x400
    c264:	add	r3, r3, #2
    c268:	bics	r3, r3, #2
    c26c:	beq	c27c <readstat_parse_sas7bdat+0xb20>
    c270:	bic	r3, r0, #7
    c274:	cmn	r3, #8
    c278:	bne	c5d4 <readstat_parse_sas7bdat+0xe78>
    c27c:	cmn	r0, #3
    c280:	beq	c158 <readstat_parse_sas7bdat+0x9fc>
    c284:	ldr	r1, [sp, #96]	; 0x60
    c288:	mov	r3, r4
    c28c:	ldr	r2, [sp, #104]	; 0x68
    c290:	add	r1, sl, r1
    c294:	bl	b03c <sas7bdat_parse_subheader>
    c298:	b	c610 <readstat_parse_sas7bdat+0xeb4>
    c29c:	cmp	r8, #4
    c2a0:	bne	c528 <readstat_parse_sas7bdat+0xdcc>
    c2a4:	mov	r1, #1
    c2a8:	mov	r0, r4
    c2ac:	bl	493c <sas7bdat_submit_columns_if_needed>
    c2b0:	subs	r5, r0, #0
    c2b4:	bne	c618 <readstat_parse_sas7bdat+0xebc>
    c2b8:	ldrb	r3, [r4, #2529]	; 0x9e1
    c2bc:	ldr	r5, [sp, #96]	; 0x60
    c2c0:	ldr	r9, [sp, #104]	; 0x68
    c2c4:	tst	r3, #1
    c2c8:	add	r5, sl, r5
    c2cc:	beq	c498 <readstat_parse_sas7bdat+0xd3c>
    c2d0:	ldr	r0, [r4, #68]	; 0x44
    c2d4:	bl	415c <malloc@plt>
    c2d8:	add	r9, r5, r9
    c2dc:	mov	r8, r0
    c2e0:	add	ip, r5, #2
    c2e4:	cmp	r9, ip
    c2e8:	bcs	c310 <readstat_parse_sas7bdat+0xbb4>
    c2ec:	ldr	r3, [r4, #68]	; 0x44
    c2f0:	sub	r0, r0, r8
    c2f4:	cmp	r0, r3
    c2f8:	bne	c360 <readstat_parse_sas7bdat+0xc04>
    c2fc:	mov	r1, r4
    c300:	mov	r0, r8
    c304:	bl	465c <sas7bdat_parse_single_row>
    c308:	mov	r5, r0
    c30c:	b	c364 <readstat_parse_sas7bdat+0xc08>
    c310:	ldrb	r2, [r5]
    c314:	ldrb	r3, [r5, #1]
    c318:	add	r3, r3, r2, lsl #8
    c31c:	uxth	r3, r3
    c320:	str	r3, [sp, #88]	; 0x58
    c324:	mov	r3, #15
    c328:	str	r3, [sp, #60]	; 0x3c
    c32c:	ldr	r3, [sp, #88]	; 0x58
    c330:	ldr	r2, [sp, #60]	; 0x3c
    c334:	asr	r3, r3, r2
    c338:	tst	r3, #1
    c33c:	bne	c3a0 <readstat_parse_sas7bdat+0xc44>
    c340:	add	r2, ip, #1
    c344:	cmp	r2, r9
    c348:	bhi	c398 <readstat_parse_sas7bdat+0xc3c>
    c34c:	ldr	r3, [r4, #68]	; 0x44
    c350:	add	r1, r0, #1
    c354:	add	r3, r8, r3
    c358:	cmp	r1, r3
    c35c:	bls	c374 <readstat_parse_sas7bdat+0xc18>
    c360:	mov	r5, #10
    c364:	mov	r0, r8
    c368:	bl	3f04 <free@plt>
    c36c:	cmp	r5, #0
    c370:	b	c614 <readstat_parse_sas7bdat+0xeb8>
    c374:	ldrb	r3, [ip]
    c378:	mov	ip, r2
    c37c:	strb	r3, [r0]
    c380:	mov	r0, r1
    c384:	ldr	r3, [sp, #60]	; 0x3c
    c388:	sub	r3, r3, #1
    c38c:	cmn	r3, #1
    c390:	str	r3, [sp, #60]	; 0x3c
    c394:	bne	c32c <readstat_parse_sas7bdat+0xbd0>
    c398:	mov	r5, ip
    c39c:	b	c2e0 <readstat_parse_sas7bdat+0xb84>
    c3a0:	add	r5, ip, #2
    c3a4:	cmp	r9, r5
    c3a8:	bcc	c468 <readstat_parse_sas7bdat+0xd0c>
    c3ac:	ldrb	r3, [ip]
    c3b0:	ldrb	r1, [ip, #1]
    c3b4:	cmp	r3, #15
    c3b8:	addls	r2, r3, #3
    c3bc:	bls	c3ec <readstat_parse_sas7bdat+0xc90>
    c3c0:	lsr	r2, r3, #4
    c3c4:	cmp	r2, #1
    c3c8:	bne	c418 <readstat_parse_sas7bdat+0xcbc>
    c3cc:	add	r5, ip, #3
    c3d0:	cmp	r9, r5
    c3d4:	bcc	c468 <readstat_parse_sas7bdat+0xd0c>
    c3d8:	and	r3, r3, #15
    c3dc:	mov	r2, #16
    c3e0:	add	r3, r3, #19
    c3e4:	smlabb	r2, r2, r1, r3
    c3e8:	ldrb	r1, [ip, #2]
    c3ec:	add	r3, r0, r2
    c3f0:	str	r3, [sp, #92]	; 0x5c
    c3f4:	ldr	r3, [r4, #68]	; 0x44
    c3f8:	add	ip, r0, r2
    c3fc:	add	r3, r8, r3
    c400:	cmp	ip, r3
    c404:	bhi	c360 <readstat_parse_sas7bdat+0xc04>
    c408:	bl	42e8 <memset@plt>
    c40c:	ldr	r0, [sp, #92]	; 0x5c
    c410:	mov	ip, r5
    c414:	b	c384 <readstat_parse_sas7bdat+0xc28>
    c418:	cmp	r2, #2
    c41c:	bne	c434 <readstat_parse_sas7bdat+0xcd8>
    c420:	add	r5, ip, #3
    c424:	cmp	r9, r5
    c428:	bcc	c468 <readstat_parse_sas7bdat+0xd0c>
    c42c:	ldrb	r2, [ip, #2]
    c430:	add	r2, r2, #16
    c434:	mov	ip, #16
    c438:	and	r3, r3, #15
    c43c:	add	r3, r3, #3
    c440:	smlabb	r1, ip, r1, r3
    c444:	sub	r3, r0, r8
    c448:	cmp	r2, r1
    c44c:	movls	ip, #0
    c450:	movhi	ip, #1
    c454:	cmp	r3, r1
    c458:	movcs	r3, ip
    c45c:	orrcc	r3, ip, #1
    c460:	cmp	r3, #0
    c464:	beq	c470 <readstat_parse_sas7bdat+0xd14>
    c468:	mov	r5, #5
    c46c:	b	c364 <readstat_parse_sas7bdat+0xc08>
    c470:	add	r3, r0, r2
    c474:	str	r3, [sp, #92]	; 0x5c
    c478:	ldr	r3, [r4, #68]	; 0x44
    c47c:	add	ip, r0, r2
    c480:	add	r3, r8, r3
    c484:	cmp	ip, r3
    c488:	bhi	c360 <readstat_parse_sas7bdat+0xc04>
    c48c:	sub	r1, r0, r1
    c490:	bl	3f64 <memcpy@plt>
    c494:	b	c40c <readstat_parse_sas7bdat+0xcb0>
    c498:	ldr	r2, [r4, #84]	; 0x54
    c49c:	ldr	r3, [r4, #76]	; 0x4c
    c4a0:	cmp	r2, r3
    c4a4:	beq	c158 <readstat_parse_sas7bdat+0x9fc>
    c4a8:	mov	r3, r9
    c4ac:	mov	r2, r5
    c4b0:	ldr	r1, [r4, #68]	; 0x44
    c4b4:	ldr	r0, [r4, #124]	; 0x7c
    c4b8:	bl	40c0 <sas_rle_decompress@plt>
    c4bc:	ldr	r3, [r4, #68]	; 0x44
    c4c0:	cmp	r3, r0
    c4c4:	beq	c514 <readstat_parse_sas7bdat+0xdb8>
    c4c8:	ldr	r2, [r4, #24]
    c4cc:	cmp	r2, #0
    c4d0:	bne	c4dc <readstat_parse_sas7bdat+0xd80>
    c4d4:	mov	r5, #10
    c4d8:	b	c618 <readstat_parse_sas7bdat+0xebc>
    c4dc:	add	r5, r4, #480	; 0x1e0
    c4e0:	ldr	r2, [pc, #476]	; c6c4 <readstat_parse_sas7bdat+0xf68>
    c4e4:	add	r5, r5, #1
    c4e8:	stm	sp, {r0, r3}
    c4ec:	add	r2, pc, r2
    c4f0:	ldr	r3, [r4, #76]	; 0x4c
    c4f4:	mov	r1, #2048	; 0x800
    c4f8:	mov	r0, r5
    c4fc:	bl	42c4 <snprintf@plt>
    c500:	ldr	r3, [r4, #24]
    c504:	ldr	r1, [r4, #52]	; 0x34
    c508:	mov	r0, r5
    c50c:	blx	r3
    c510:	b	c4d4 <readstat_parse_sas7bdat+0xd78>
    c514:	mov	r1, r4
    c518:	ldr	r0, [r4, #124]	; 0x7c
    c51c:	bl	465c <sas7bdat_parse_single_row>
    c520:	mov	r5, r0
    c524:	b	c36c <readstat_parse_sas7bdat+0xc10>
    c528:	mov	r5, #6
    c52c:	b	c618 <readstat_parse_sas7bdat+0xebc>
    c530:	ldr	r3, [r4, #68]	; 0x44
    c534:	add	r3, r8, r3
    c538:	cmp	r9, r3
    c53c:	bcc	c4d4 <readstat_parse_sas7bdat+0xd78>
    c540:	mov	r1, r4
    c544:	add	r0, r7, r8
    c548:	bl	465c <sas7bdat_parse_single_row>
    c54c:	subs	r5, r0, #0
    c550:	bne	c618 <readstat_parse_sas7bdat+0xebc>
    c554:	ldr	r3, [r4, #68]	; 0x44
    c558:	add	sl, sl, #1
    c55c:	add	r8, r8, r3
    c560:	b	c078 <readstat_parse_sas7bdat+0x91c>
    c564:	mov	r0, r4
    c568:	bl	45b8 <sas7bdat_update_progress>
    c56c:	mov	r5, r0
    c570:	b	b838 <readstat_parse_sas7bdat+0xdc>
    c574:	ldr	r3, [r4, #160]	; 0xa0
    c578:	ldr	r0, [r3, r7, lsl #2]
    c57c:	bl	3f04 <free@plt>
    c580:	add	r7, r7, #1
    c584:	ldr	r3, [r4, #152]	; 0x98
    c588:	cmp	r7, r3
    c58c:	blt	c574 <readstat_parse_sas7bdat+0xe18>
    c590:	ldr	r0, [r4, #160]	; 0xa0
    c594:	bl	3f04 <free@plt>
    c598:	ldr	r0, [r4, #156]	; 0x9c
    c59c:	bl	3f04 <free@plt>
    c5a0:	b	b8c8 <readstat_parse_sas7bdat+0x16c>
    c5a4:	ldr	r3, [r4, #196]	; 0xc4
    c5a8:	ldr	r0, [r3, r7, lsl #2]
    c5ac:	cmp	r0, #0
    c5b0:	beq	c5b8 <readstat_parse_sas7bdat+0xe5c>
    c5b4:	bl	3f04 <free@plt>
    c5b8:	add	r7, r7, #1
    c5bc:	ldr	r3, [r4, #80]	; 0x50
    c5c0:	cmp	r7, r3
    c5c4:	bcc	c5a4 <readstat_parse_sas7bdat+0xe48>
    c5c8:	ldr	r0, [r4, #196]	; 0xc4
    c5cc:	bl	3f04 <free@plt>
    c5d0:	b	b8d8 <readstat_parse_sas7bdat+0x17c>
    c5d4:	ldrd	r2, [sp, #104]	; 0x68
    c5d8:	ldr	r0, [r4, #68]	; 0x44
    c5dc:	mov	r1, #0
    c5e0:	cmp	r3, r1
    c5e4:	cmpeq	r2, r0
    c5e8:	bne	c4d4 <readstat_parse_sas7bdat+0xd78>
    c5ec:	mov	r1, #1
    c5f0:	mov	r0, r4
    c5f4:	bl	493c <sas7bdat_submit_columns_if_needed>
    c5f8:	subs	r5, r0, #0
    c5fc:	bne	c618 <readstat_parse_sas7bdat+0xebc>
    c600:	ldr	r0, [sp, #96]	; 0x60
    c604:	mov	r1, r4
    c608:	add	r0, sl, r0
    c60c:	bl	465c <sas7bdat_parse_single_row>
    c610:	subs	r5, r0, #0
    c614:	beq	c158 <readstat_parse_sas7bdat+0x9fc>
    c618:	ldr	r3, [r4, #24]
    c61c:	cmp	r3, #0
    c620:	beq	b838 <readstat_parse_sas7bdat+0xdc>
    c624:	cmp	r5, #4
    c628:	beq	b838 <readstat_parse_sas7bdat+0xdc>
    c62c:	ldr	r3, [sp, #32]
    c630:	ldr	r2, [sp, #32]
    c634:	mov	r1, #1
    c638:	ldr	r3, [r3, #8]
    c63c:	ldr	r2, [r2, #20]
    c640:	mov	r0, #0
    c644:	blx	r3
    c648:	add	r7, r4, #480	; 0x1e0
    c64c:	add	r7, r7, #1
    c650:	subs	r2, r0, #1
    c654:	asr	r1, r0, #31
    c658:	sbc	r3, r1, #0
    c65c:	strd	r2, [sp, #16]
    c660:	ldrd	r2, [r4, #112]	; 0x70
    c664:	subs	r0, r0, r2
    c668:	sbc	r1, r1, r3
    c66c:	ldrd	r2, [sp, #48]	; 0x30
    c670:	strd	r0, [sp, #8]
    c674:	strd	r2, [sp]
    c678:	ldr	r2, [pc, #72]	; c6c8 <readstat_parse_sas7bdat+0xf6c>
    c67c:	add	r2, pc, r2
    c680:	b	bcd4 <readstat_parse_sas7bdat+0x578>
    c684:	mov	r5, #5
    c688:	b	c618 <readstat_parse_sas7bdat+0xebc>
    c68c:	.word	0x000009e8
    c690:	.word	0x00016347
    c694:	.word	0x0001614e
    c698:	.word	0x0001612a
    c69c:	.word	0x00000101
    c6a0:	.word	0x00015f54
    c6a4:	.word	0x00015e6b
    c6a8:	.word	0x00015bd7
    c6ac:	.word	0x00015cdb
    c6b0:	.word	0x00015bf8
    c6b4:	.word	0x00015c2a
    c6b8:	.word	0x20202020
    c6bc:	.word	0xf6f6f6f6
    c6c0:	.word	0xf7f7f7f7
    c6c4:	.word	0x00015682
    c6c8:	.word	0x000154bf

0000c6cc <sas7bdat_variable_width>:
    c6cc:	cmp	r0, #0
    c6d0:	moveq	r0, r1
    c6d4:	movne	r0, #8
    c6d8:	bx	lr

0000c6dc <sas7bdat_metadata_ok>:
    c6dc:	ldr	r0, [r0, #16]
    c6e0:	cmp	r0, #1
    c6e4:	movhi	r0, #6
    c6e8:	movls	r0, #0
    c6ec:	bx	lr

0000c6f0 <sas7bdat_row_length>:
    c6f0:	push	{r4, r5, r6, r7, r8, lr}
    c6f4:	mov	r4, #0
    c6f8:	mov	r7, r0
    c6fc:	mov	r5, r4
    c700:	ldr	r3, [r7, #28]
    c704:	cmp	r5, r3
    c708:	blt	c714 <sas7bdat_row_length+0x24>
    c70c:	mov	r0, r4
    c710:	pop	{r4, r5, r6, r7, r8, pc}
    c714:	mov	r1, r5
    c718:	mov	r0, r7
    c71c:	bl	43cc <readstat_get_variable@plt>
    c720:	add	r5, r5, #1
    c724:	mov	r8, r0
    c728:	bl	4228 <readstat_variable_get_type@plt>
    c72c:	mov	r6, r0
    c730:	mov	r0, r8
    c734:	bl	4318 <readstat_variable_get_storage_width@plt>
    c738:	cmp	r6, #0
    c73c:	movne	r0, #8
    c740:	add	r4, r4, r0
    c744:	b	c700 <sas7bdat_row_length+0x10>

0000c748 <sas7bdat_write_double>:
    c748:	sub	sp, sp, #8
    c74c:	add	r3, sp, #8
    c750:	mov	r2, r0
    c754:	vstmdb	r3!, {d0}
    c758:	ldm	r3!, {r0, r1}
    c75c:	str	r0, [r2]
    c760:	str	r1, [r2, #4]
    c764:	mov	r0, #0
    c768:	add	sp, sp, #8
    c76c:	bx	lr

0000c770 <sas7bdat_write_float>:
    c770:	vcvt.f64.f32	d0, s0
    c774:	sub	sp, sp, #8
    c778:	add	r3, sp, #8
    c77c:	mov	r2, r0
    c780:	vstmdb	r3!, {d0}
    c784:	ldm	r3!, {r0, r1}
    c788:	str	r0, [r2]
    c78c:	str	r1, [r2, #4]
    c790:	mov	r0, #0
    c794:	add	sp, sp, #8
    c798:	bx	lr

0000c79c <sas7bdat_write_int32>:
    c79c:	vmov	s15, r2
    c7a0:	sub	sp, sp, #8
    c7a4:	add	r3, sp, #8
    c7a8:	mov	ip, r0
    c7ac:	vcvt.f64.s32	d7, s15
    c7b0:	vstmdb	r3!, {d7}
    c7b4:	ldm	r3!, {r0, r1}
    c7b8:	str	r0, [ip]
    c7bc:	str	r1, [ip, #4]
    c7c0:	mov	r0, #0
    c7c4:	add	sp, sp, #8
    c7c8:	bx	lr

0000c7cc <sas7bdat_write_int16>:
    c7cc:	vmov	s15, r2
    c7d0:	sub	sp, sp, #8
    c7d4:	add	r3, sp, #8
    c7d8:	mov	ip, r0
    c7dc:	vcvt.f64.s32	d7, s15
    c7e0:	vstmdb	r3!, {d7}
    c7e4:	ldm	r3!, {r0, r1}
    c7e8:	str	r0, [ip]
    c7ec:	str	r1, [ip, #4]
    c7f0:	mov	r0, #0
    c7f4:	add	sp, sp, #8
    c7f8:	bx	lr

0000c7fc <sas7bdat_write_int8>:
    c7fc:	vmov	s15, r2
    c800:	sub	sp, sp, #8
    c804:	add	r3, sp, #8
    c808:	mov	ip, r0
    c80c:	vcvt.f64.s32	d7, s15
    c810:	vstmdb	r3!, {d7}
    c814:	ldm	r3!, {r0, r1}
    c818:	str	r0, [ip]
    c81c:	str	r1, [ip, #4]
    c820:	mov	r0, #0
    c824:	add	sp, sp, #8
    c828:	bx	lr

0000c82c <sas7bdat_subheader_init>:
    c82c:	push	{r4, r5, r6, lr}
    c830:	mov	r5, r1
    c834:	mov	r6, r0
    c838:	mov	r1, #20
    c83c:	mov	r0, #1
    c840:	bl	3d9c <calloc@plt>
    c844:	mov	r1, r5
    c848:	mov	r4, r0
    c84c:	str	r6, [r0]
    c850:	str	r5, [r0, #8]
    c854:	mov	r0, #1
    c858:	bl	3d9c <calloc@plt>
    c85c:	str	r0, [r4, #4]
    c860:	mov	r0, r4
    c864:	pop	{r4, r5, r6, pc}

0000c868 <sas7bdat_subheader_free>:
    c868:	push	{r4, lr}
    c86c:	subs	r4, r0, #0
    c870:	popeq	{r4, pc}
    c874:	ldr	r0, [r4, #4]
    c878:	cmp	r0, #0
    c87c:	beq	c884 <sas7bdat_subheader_free+0x1c>
    c880:	bl	3f04 <free@plt>
    c884:	mov	r0, r4
    c888:	pop	{r4, lr}
    c88c:	b	3f04 <free@plt>

0000c890 <sas7bdat_subheader_array_free>:
    c890:	push	{r4, r5, r6, r7, r8, lr}
    c894:	mov	r4, r0
    c898:	mov	r5, #0
    c89c:	mov	r6, #0
    c8a0:	mov	r7, #0
    c8a4:	ldrd	r2, [r4]
    c8a8:	mov	r0, r6
    c8ac:	adds	r6, r6, #1
    c8b0:	mov	r1, r7
    c8b4:	adc	r7, r7, #0
    c8b8:	cmp	r0, r2
    c8bc:	sbcs	r3, r1, r3
    c8c0:	blt	c8d8 <sas7bdat_subheader_array_free+0x48>
    c8c4:	ldr	r0, [r4, #16]
    c8c8:	bl	3f04 <free@plt>
    c8cc:	mov	r0, r4
    c8d0:	pop	{r4, r5, r6, r7, r8, lr}
    c8d4:	b	3f04 <free@plt>
    c8d8:	ldr	r3, [r4, #16]
    c8dc:	ldr	r0, [r3, r5]
    c8e0:	bl	c868 <sas7bdat_subheader_free>
    c8e4:	add	r5, r5, #4
    c8e8:	b	c8a4 <sas7bdat_subheader_array_free+0x14>

0000c8ec <sas7bdat_make_text_ref>:
    c8ec:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c8f0:	mov	r7, r0
    c8f4:	mov	r0, r2
    c8f8:	mov	r6, r1
    c8fc:	mov	fp, r2
    c900:	bl	424c <strlen@plt>
    c904:	ldrd	r2, [r6]
    c908:	sub	r1, r2, #-1073741823	; 0xc0000001
    c90c:	add	r5, r0, #3
    c910:	mov	sl, r0
    c914:	ldr	r0, [r6, #8]
    c918:	bic	r5, r5, #3
    c91c:	ldr	r4, [r0, r1, lsl #2]
    c920:	ldr	r1, [r4, #8]
    c924:	ldr	ip, [r4, #4]
    c928:	add	r1, r5, r1
    c92c:	cmp	r1, ip
    c930:	bls	c98c <sas7bdat_make_text_ref+0xa0>
    c934:	adds	r2, r2, #1
    c938:	adc	r3, r3, #0
    c93c:	lsl	r1, r2, #2
    c940:	strd	r2, [r6]
    c944:	bl	403c <realloc@plt>
    c948:	mov	r1, #24
    c94c:	ldrd	r8, [r6]
    c950:	str	r0, [r6, #8]
    c954:	str	r0, [sp, #4]
    c958:	mov	r0, #1
    c95c:	ldr	r6, [r4, #4]
    c960:	bl	3d9c <calloc@plt>
    c964:	mov	r4, r0
    c968:	mov	r0, r6
    c96c:	bl	415c <malloc@plt>
    c970:	ldr	r3, [sp, #4]
    c974:	stm	r4, {r0, r6}
    c978:	subs	r0, r8, #1
    c97c:	sbc	r1, r9, #0
    c980:	sub	r8, r8, #-1073741823	; 0xc0000001
    c984:	strd	r0, [r4, #16]
    c988:	str	r4, [r3, r8, lsl #2]
    c98c:	ldr	r6, [r4, #8]
    c990:	ldr	r0, [r4]
    c994:	mov	r2, r5
    c998:	mov	r1, fp
    c99c:	add	r0, r0, r6
    c9a0:	ldrh	r8, [r4, #16]
    c9a4:	bl	430c <strncpy@plt>
    c9a8:	ldr	r3, [r4, #8]
    c9ac:	add	r6, r6, #28
    c9b0:	add	r5, r3, r5
    c9b4:	mov	r0, r7
    c9b8:	str	r5, [r4, #8]
    c9bc:	strh	r8, [r7]
    c9c0:	strh	r6, [r7, #2]
    c9c4:	strh	sl, [r7, #4]
    c9c8:	add	sp, sp, #12
    c9cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000c9d0 <sas7bdat_write_string>:
    c9d0:	push	{r4, r5, r6, lr}
    c9d4:	mov	r6, r0
    c9d8:	mov	r0, r1
    c9dc:	mov	r4, r2
    c9e0:	bl	4318 <readstat_variable_get_storage_width@plt>
    c9e4:	cmp	r4, #0
    c9e8:	mov	r5, r0
    c9ec:	beq	c9fc <sas7bdat_write_string+0x2c>
    c9f0:	ldrb	r3, [r4]
    c9f4:	cmp	r3, #0
    c9f8:	bne	ca14 <sas7bdat_write_string+0x44>
    c9fc:	mov	r2, r5
    ca00:	mov	r1, #0
    ca04:	mov	r0, r6
    ca08:	bl	42e8 <memset@plt>
    ca0c:	mov	r0, #0
    ca10:	pop	{r4, r5, r6, pc}
    ca14:	mov	r0, r4
    ca18:	bl	424c <strlen@plt>
    ca1c:	cmp	r5, r0
    ca20:	bcc	ca38 <sas7bdat_write_string+0x68>
    ca24:	mov	r2, r5
    ca28:	mov	r1, r4
    ca2c:	mov	r0, r6
    ca30:	bl	430c <strncpy@plt>
    ca34:	b	ca0c <sas7bdat_write_string+0x3c>
    ca38:	mov	r0, #22
    ca3c:	pop	{r4, r5, r6, pc}

0000ca40 <sas7bdat_write_missing_string>:
    ca40:	mov	r2, #0
    ca44:	b	c9d0 <sas7bdat_write_string>

0000ca48 <sas7bdat_write_missing_tagged>:
    ca48:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    ca4c:	mov	r7, r0
    ca50:	mov	r0, r2
    ca54:	mov	r6, r2
    ca58:	bl	4198 <sas_validate_tag@plt>
    ca5c:	subs	ip, r0, #0
    ca60:	bne	ca8c <sas7bdat_write_missing_tagged+0x44>
    ca64:	lsl	r2, r6, #8
    ca68:	eor	r2, r2, #65280	; 0xff00
    ca6c:	orr	r5, r2, #2130706432	; 0x7f000000
    ca70:	add	r3, sp, #8
    ca74:	mov	r4, #0
    ca78:	orr	r5, r5, #16252928	; 0xf80000
    ca7c:	strd	r4, [r3, #-8]!
    ca80:	ldm	r3!, {r0, r1}
    ca84:	str	r0, [r7]
    ca88:	str	r1, [r7, #4]
    ca8c:	mov	r0, ip
    ca90:	add	sp, sp, #12
    ca94:	pop	{r4, r5, r6, r7, pc}

0000ca98 <sas7bdat_module_ctx_free>:
    ca98:	push	{r4, lr}
    ca9c:	mov	r4, r0
    caa0:	ldr	r0, [r0]
    caa4:	bl	3f04 <free@plt>
    caa8:	ldr	r0, [r4, #4]
    caac:	bl	c890 <sas7bdat_subheader_array_free>
    cab0:	mov	r0, r4
    cab4:	pop	{r4, lr}
    cab8:	b	3f04 <free@plt>

0000cabc <sas7bdat_emit_header_and_meta_pages>:
    cabc:	ldr	r3, [pc, #1188]	; cf68 <sas7bdat_emit_header_and_meta_pages+0x4ac>
    cac0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    cac4:	sub	sp, sp, #388	; 0x184
    cac8:	add	r3, pc, r3
    cacc:	ldr	r8, [r0, #300]	; 0x12c
    cad0:	mov	fp, r0
    cad4:	str	r3, [sp, #160]	; 0xa0
    cad8:	bl	c6f0 <sas7bdat_row_length>
    cadc:	cmp	r0, #0
    cae0:	moveq	r8, #36	; 0x24
    cae4:	beq	ccf4 <sas7bdat_emit_header_and_meta_pages+0x238>
    cae8:	ldr	r3, [fp, #16]
    caec:	cmp	r3, #0
    caf0:	beq	ccc0 <sas7bdat_emit_header_and_meta_pages+0x204>
    caf4:	ldr	r2, [fp, #300]	; 0x12c
    caf8:	ldr	r9, [r8]
    cafc:	mov	sl, #1
    cb00:	ldm	r2, {r3, lr}
    cb04:	ldr	r1, [r3, #32]
    cb08:	ldr	r2, [r3, #40]	; 0x28
    cb0c:	ldr	r0, [lr]
    cb10:	sub	r2, r1, r2
    cb14:	ldr	r5, [r3, #48]	; 0x30
    cb18:	sub	r4, r0, #1
    cb1c:	mov	r1, r2
    cb20:	mov	r3, #0
    cb24:	sub	r0, r0, #-1073741823	; 0xc0000001
    cb28:	sub	ip, r4, r3
    cb2c:	cmp	ip, #0
    cb30:	bge	cd00 <sas7bdat_emit_header_and_meta_pages+0x244>
    cb34:	ldr	r3, [fp, #16]
    cb38:	cmp	r3, #1
    cb3c:	moveq	r0, #0
    cb40:	beq	cb7c <sas7bdat_emit_header_and_meta_pages+0xc0>
    cb44:	mov	r0, fp
    cb48:	bl	c6f0 <sas7bdat_row_length>
    cb4c:	ldrd	r6, [r9, #32]
    cb50:	ldrd	r4, [r9, #40]	; 0x28
    cb54:	mov	r3, #0
    cb58:	mov	r2, r0
    cb5c:	subs	r0, r6, r4
    cb60:	sbc	r1, r7, r5
    cb64:	bl	20e3c <__aeabi_ldivmod>
    cb68:	ldr	r3, [fp, #80]	; 0x50
    cb6c:	mov	r1, r0
    cb70:	sub	r0, r0, #1
    cb74:	add	r0, r0, r3
    cb78:	bl	20828 <__divsi3>
    cb7c:	add	r0, r0, sl
    cb80:	ldr	r4, [r8]
    cb84:	asr	r1, r0, #31
    cb88:	add	r3, sp, #216	; 0xd8
    cb8c:	strd	r0, [r9, #56]	; 0x38
    cb90:	mov	r2, #164	; 0xa4
    cb94:	mov	r1, #0
    cb98:	mov	r0, r3
    cb9c:	str	r3, [sp, #180]	; 0xb4
    cba0:	bl	42e8 <memset@plt>
    cba4:	ldr	r3, [r4, #4]
    cba8:	cmp	r3, #0
    cbac:	moveq	r3, #34	; 0x22
    cbb0:	movne	r3, #51	; 0x33
    cbb4:	strb	r3, [sp, #248]	; 0xf8
    cbb8:	mov	r3, #34	; 0x22
    cbbc:	strb	r3, [sp, #251]	; 0xfb
    cbc0:	bl	3ef8 <machine_is_little_endian@plt>
    cbc4:	mov	r3, #49	; 0x31
    cbc8:	strb	r3, [sp, #255]	; 0xff
    cbcc:	mov	r3, #20
    cbd0:	strb	r3, [sp, #286]	; 0x11e
    cbd4:	ldr	r3, [pc, #912]	; cf6c <sas7bdat_emit_header_and_meta_pages+0x4b0>
    cbd8:	add	r2, sp, #300	; 0x12c
    cbdc:	add	r3, pc, r3
    cbe0:	ldr	ip, [sp, #180]	; 0xb4
    cbe4:	ldr	r1, [r3, #4]
    cbe8:	adds	r0, r0, #0
    cbec:	movne	r0, #1
    cbf0:	strb	r0, [sp, #253]	; 0xfd
    cbf4:	ldr	r0, [r3]
    cbf8:	stmia	r2!, {r0, r1}
    cbfc:	ldr	r0, [r3, #9]!
    cc00:	add	r2, sp, #372	; 0x174
    cc04:	ldr	r1, [r3, #4]
    cc08:	ldr	r3, [pc, #864]	; cf70 <sas7bdat_emit_header_and_meta_pages+0x4b4>
    cc0c:	stmia	r2!, {r0, r1}
    cc10:	ldr	r2, [sp, #160]	; 0xa0
    cc14:	ldr	r3, [r2, r3]
    cc18:	add	lr, r3, #32
    cc1c:	ldr	r0, [r3]
    cc20:	ldr	r1, [r3, #4]
    cc24:	mov	r2, ip
    cc28:	add	r3, r3, #8
    cc2c:	cmp	r3, lr
    cc30:	stmia	r2!, {r0, r1}
    cc34:	mov	ip, r2
    cc38:	bne	cc1c <sas7bdat_emit_header_and_meta_pages+0x160>
    cc3c:	mov	r2, #156	; 0x9c
    cc40:	add	r1, sp, #224	; 0xe0
    cc44:	mov	r0, sp
    cc48:	bl	3f64 <memcpy@plt>
    cc4c:	ldr	r3, [sp, #180]	; 0xb4
    cc50:	mov	r1, r4
    cc54:	mov	r0, fp
    cc58:	ldm	r3, {r2, r3}
    cc5c:	bl	4108 <sas_write_header@plt>
    cc60:	subs	r8, r0, #0
    cc64:	bne	ccf4 <sas7bdat_emit_header_and_meta_pages+0x238>
    cc68:	ldr	r3, [fp, #300]	; 0x12c
    cc6c:	ldm	r3, {r6, r9}
    cc70:	ldr	r0, [r6, #32]
    cc74:	bl	415c <malloc@plt>
    cc78:	mov	r3, #0
    cc7c:	mov	r2, #0
    cc80:	strd	r2, [sp, #168]	; 0xa8
    cc84:	add	r3, sp, #200	; 0xc8
    cc88:	str	r3, [sp, #188]	; 0xbc
    cc8c:	add	r3, sp, #208	; 0xd0
    cc90:	str	r3, [sp, #192]	; 0xc0
    cc94:	mov	r5, r0
    cc98:	ldrd	r2, [r9]
    cc9c:	ldrd	r0, [sp, #168]	; 0xa8
    cca0:	cmp	r0, r2
    cca4:	sbcs	r3, r1, r3
    cca8:	blt	cd2c <sas7bdat_emit_header_and_meta_pages+0x270>
    ccac:	mov	r4, r8
    ccb0:	mov	r0, r5
    ccb4:	bl	3f04 <free@plt>
    ccb8:	mov	r8, r4
    ccbc:	b	ccf4 <sas7bdat_emit_header_and_meta_pages+0x238>
    ccc0:	mov	r0, fp
    ccc4:	ldr	r4, [r8]
    ccc8:	bl	c6f0 <sas7bdat_row_length>
    cccc:	mov	r3, #0
    ccd0:	ldrd	r6, [r4, #32]
    ccd4:	ldrd	r4, [r4, #40]	; 0x28
    ccd8:	mov	r2, r0
    ccdc:	subs	r0, r6, r4
    cce0:	sbc	r1, r7, r5
    cce4:	bl	20e3c <__aeabi_ldivmod>
    cce8:	cmp	r0, #0
    ccec:	moveq	r8, #35	; 0x23
    ccf0:	bne	caf4 <sas7bdat_emit_header_and_meta_pages+0x38>
    ccf4:	mov	r0, r8
    ccf8:	add	sp, sp, #388	; 0x184
    ccfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    cd00:	ldr	r6, [lr, #16]
    cd04:	sub	ip, r0, r3
    cd08:	add	r3, r3, #1
    cd0c:	ldr	ip, [r6, ip, lsl #2]
    cd10:	ldr	ip, [ip, #8]
    cd14:	add	ip, r5, ip
    cd18:	cmp	ip, r1
    cd1c:	movhi	r1, r2
    cd20:	addhi	sl, sl, #1
    cd24:	sub	r1, r1, ip
    cd28:	b	cb28 <sas7bdat_emit_header_and_meta_pages+0x6c>
    cd2c:	ldr	r2, [r6, #32]
    cd30:	mov	r1, #0
    cd34:	mov	r0, r5
    cd38:	bl	42e8 <memset@plt>
    cd3c:	ldr	r3, [r6, #40]	; 0x28
    cd40:	ldr	r2, [r6, #48]	; 0x30
    cd44:	add	r4, r5, r3
    cd48:	str	r2, [sp, #184]	; 0xb8
    cd4c:	mov	r2, #0
    cd50:	ldr	r7, [r6, #32]
    cd54:	strh	r2, [r4, #-8]
    cd58:	ldr	r2, [sp, #168]	; 0xa8
    cd5c:	ldr	r1, [r9, #16]
    cd60:	sub	r3, r7, r3
    cd64:	ldr	r2, [r1, r2, lsl #2]
    cd68:	ldr	r1, [sp, #184]	; 0xb8
    cd6c:	ldr	r2, [r2, #8]
    cd70:	add	r2, r1, r2
    cd74:	cmp	r2, r3
    cd78:	bhi	cf60 <sas7bdat_emit_header_and_meta_pages+0x4a4>
    cd7c:	ldrd	r2, [sp, #168]	; 0xa8
    cd80:	mov	sl, #1
    cd84:	strd	r2, [sp, #160]	; 0xa0
    cd88:	sub	r3, r4, r5
    cd8c:	ldr	r2, [sp, #168]	; 0xa8
    cd90:	str	r3, [sp, #196]	; 0xc4
    cd94:	ldr	r3, [sp, #160]	; 0xa0
    cd98:	sub	r1, r3, r2
    cd9c:	ldrd	r2, [r9]
    cda0:	uxth	lr, r1
    cda4:	ldrd	r0, [sp, #160]	; 0xa0
    cda8:	cmp	r0, r2
    cdac:	sbcs	r3, r1, r3
    cdb0:	bge	cddc <sas7bdat_emit_header_and_meta_pages+0x320>
    cdb4:	ldr	r2, [r9, #16]
    cdb8:	ldr	r3, [sp, #160]	; 0xa0
    cdbc:	sub	r1, r4, r5
    cdc0:	sub	r0, r7, r1
    cdc4:	ldr	r3, [r2, r3, lsl #2]
    cdc8:	ldr	r2, [sp, #184]	; 0xb8
    cdcc:	ldr	ip, [r3, #8]
    cdd0:	add	r2, r2, ip
    cdd4:	cmp	r2, r0
    cdd8:	bls	ce18 <sas7bdat_emit_header_and_meta_pages+0x35c>
    cddc:	ldr	r3, [r6, #4]
    cde0:	mov	r1, r5
    cde4:	cmp	r3, #0
    cde8:	strhne	lr, [r5, #34]	; 0x22
    cdec:	strhne	lr, [r5, #36]	; 0x24
    cdf0:	strheq	lr, [r5, #18]
    cdf4:	strheq	lr, [r5, #20]
    cdf8:	mov	r0, fp
    cdfc:	ldr	r2, [r6, #32]
    ce00:	bl	44a4 <readstat_write_bytes@plt>
    ce04:	subs	r4, r0, #0
    ce08:	bne	ccb0 <sas7bdat_emit_header_and_meta_pages+0x1f4>
    ce0c:	ldrd	r2, [sp, #160]	; 0xa0
    ce10:	strd	r2, [sp, #168]	; 0xa8
    ce14:	b	cc98 <sas7bdat_emit_header_and_meta_pages+0x1dc>
    ce18:	ldr	r1, [r6, #4]
    ce1c:	ldr	r2, [r3]
    ce20:	cmp	r1, #0
    ce24:	sub	r0, r7, ip
    ce28:	beq	cf04 <sas7bdat_emit_header_and_meta_pages+0x448>
    ce2c:	mov	r1, #0
    ce30:	strd	r0, [sp, #200]	; 0xc8
    ce34:	mov	r0, ip
    ce38:	ldr	ip, [sp, #188]	; 0xbc
    ce3c:	mov	r1, #0
    ce40:	strd	r0, [sp, #208]	; 0xd0
    ce44:	ldm	ip!, {r0, r1}
    ce48:	ldr	ip, [sp, #192]	; 0xc0
    ce4c:	str	r0, [r4]
    ce50:	str	r1, [r4, #4]
    ce54:	ldm	ip!, {r0, r1}
    ce58:	str	r0, [r4, #8]
    ce5c:	str	r1, [r4, #12]
    ce60:	ldr	r1, [r3, #12]
    ce64:	cmp	r1, #0
    ce68:	beq	ceb0 <sas7bdat_emit_header_and_meta_pages+0x3f4>
    ce6c:	ldr	r2, [r3, #16]
    ce70:	strb	sl, [r4, #17]
    ce74:	cmp	r2, #0
    ce78:	movne	r2, #4
    ce7c:	strb	r2, [r4, #16]
    ce80:	ldr	r2, [r3, #8]
    ce84:	ldr	r1, [r3, #4]
    ce88:	sub	r7, r7, r2
    ce8c:	add	r0, r5, r7
    ce90:	bl	3f64 <memcpy@plt>
    ce94:	ldrd	r2, [sp, #160]	; 0xa0
    ce98:	adds	r2, r2, #1
    ce9c:	adc	r3, r3, #0
    cea0:	strd	r2, [sp, #160]	; 0xa0
    cea4:	ldr	r3, [sp, #184]	; 0xb8
    cea8:	add	r4, r4, r3
    ceac:	b	cd88 <sas7bdat_emit_header_and_meta_pages+0x2cc>
    ceb0:	ldr	r1, [r3]
    ceb4:	bic	r1, r1, #2
    ceb8:	cmn	r1, #3
    cebc:	moveq	r1, sl
    cec0:	beq	ced0 <sas7bdat_emit_header_and_meta_pages+0x414>
    cec4:	cmn	r1, #4
    cec8:	movne	r1, #0
    cecc:	moveq	r1, #1
    ced0:	strb	r1, [r4, #17]
    ced4:	ldr	ip, [r3, #4]
    ced8:	cmp	r2, #-16777216	; 0xff000000
    cedc:	strcc	r2, [ip]
    cee0:	bcc	ce80 <sas7bdat_emit_header_and_meta_pages+0x3c4>
    cee4:	mov	r0, r2
    cee8:	asr	r1, r2, #31
    ceec:	ldr	r2, [sp, #180]	; 0xb4
    cef0:	strd	r0, [sp, #216]	; 0xd8
    cef4:	ldm	r2!, {r0, r1}
    cef8:	str	r0, [ip]
    cefc:	str	r1, [ip, #4]
    cf00:	b	ce80 <sas7bdat_emit_header_and_meta_pages+0x3c4>
    cf04:	str	r0, [r4]
    cf08:	str	ip, [r4, #4]
    cf0c:	ldr	r1, [r3, #12]
    cf10:	cmp	r1, #0
    cf14:	beq	cf30 <sas7bdat_emit_header_and_meta_pages+0x474>
    cf18:	ldr	r2, [r3, #16]
    cf1c:	strb	sl, [r4, #9]
    cf20:	cmp	r2, #0
    cf24:	movne	r2, #4
    cf28:	strb	r2, [r4, #8]
    cf2c:	b	ce80 <sas7bdat_emit_header_and_meta_pages+0x3c4>
    cf30:	ldr	r1, [r3]
    cf34:	bic	r1, r1, #2
    cf38:	cmn	r1, #3
    cf3c:	moveq	r1, sl
    cf40:	beq	cf50 <sas7bdat_emit_header_and_meta_pages+0x494>
    cf44:	cmn	r1, #4
    cf48:	movne	r1, #0
    cf4c:	moveq	r1, #1
    cf50:	strb	r1, [r4, #9]
    cf54:	ldr	r1, [r3, #4]
    cf58:	str	r2, [r1]
    cf5c:	b	ce80 <sas7bdat_emit_header_and_meta_pages+0x3c4>
    cf60:	mov	r4, #35	; 0x23
    cf64:	b	ccb0 <sas7bdat_emit_header_and_meta_pages+0x1f4>
    cf68:	.word	0x00034530
    cf6c:	.word	0x0001502b
    cf70:	.word	0x000002f8

0000cf74 <sas7bdat_end_data>:
    cf74:	ldr	r2, [r0, #16]
    cf78:	cmp	r2, #1
    cf7c:	bne	cf84 <sas7bdat_end_data+0x10>
    cf80:	b	cabc <sas7bdat_emit_header_and_meta_pages>
    cf84:	ldr	r3, [r0, #300]	; 0x12c
    cf88:	ldr	r1, [r3]
    cf8c:	b	44c8 <sas_fill_page@plt>

0000cf90 <sas7bdat_write_missing_numeric>:
    cf90:	sub	sp, sp, #8
    cf94:	ldr	r1, [pc, #36]	; cfc0 <sas7bdat_write_missing_numeric+0x30>
    cf98:	mov	r2, r0
    cf9c:	add	r3, sp, #8
    cfa0:	mov	r0, #0
    cfa4:	strd	r0, [r3, #-8]!
    cfa8:	ldm	r3!, {r0, r1}
    cfac:	str	r0, [r2]
    cfb0:	str	r1, [r2, #4]
    cfb4:	mov	r0, #0
    cfb8:	add	sp, sp, #8
    cfbc:	bx	lr
    cfc0:	.word	0x7ff8d100

0000cfc4 <sas7bdat_write_row>:
    cfc4:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    cfc8:	mov	r6, r1
    cfcc:	ldr	r5, [r0, #16]
    cfd0:	add	fp, sp, #36	; 0x24
    cfd4:	cmp	r5, #0
    cfd8:	mov	r9, r2
    cfdc:	ldr	r7, [r0, #300]	; 0x12c
    cfe0:	bne	d0c4 <sas7bdat_write_row+0x100>
    cfe4:	ldr	sl, [r7]
    cfe8:	mov	r8, r0
    cfec:	bl	c6f0 <sas7bdat_row_length>
    cff0:	ldrd	r4, [sl, #40]	; 0x28
    cff4:	mov	r3, #0
    cff8:	mov	r2, r0
    cffc:	ldrd	r0, [sl, #32]
    d000:	subs	r0, r0, r4
    d004:	sbc	r1, r1, r5
    d008:	bl	20e3c <__aeabi_ldivmod>
    d00c:	mov	r1, r0
    d010:	mov	r5, r0
    d014:	ldr	r0, [r8, #84]	; 0x54
    d018:	bl	20a48 <__aeabi_idivmod>
    d01c:	cmp	r1, #0
    d020:	bne	d0a4 <sas7bdat_write_row+0xe0>
    d024:	ldr	r1, [r7]
    d028:	mov	r0, r8
    d02c:	bl	44c8 <sas_fill_page@plt>
    d030:	mov	r4, sp
    d034:	cmp	r0, #0
    d038:	bne	d0b8 <sas7bdat_write_row+0xf4>
    d03c:	ldr	r3, [r8, #84]	; 0x54
    d040:	ldr	r2, [sl, #40]	; 0x28
    d044:	ldr	r1, [r8, #80]	; 0x50
    d048:	sub	r1, r1, r3
    d04c:	add	r3, r2, #7
    d050:	bic	r3, r3, #7
    d054:	sub	sp, sp, r3
    d058:	cmp	r1, r5
    d05c:	movlt	r5, r1
    d060:	mov	r1, r0
    d064:	mov	r0, sp
    d068:	bl	42e8 <memset@plt>
    d06c:	ldr	r3, [sl, #40]	; 0x28
    d070:	mov	r2, #256	; 0x100
    d074:	add	r3, sp, r3
    d078:	mov	r1, sp
    d07c:	strh	r5, [r3, #-6]
    d080:	ldr	r3, [sl, #40]	; 0x28
    d084:	mov	r0, r8
    d088:	add	r3, sp, r3
    d08c:	strh	r2, [r3, #-8]
    d090:	ldr	r2, [sl, #40]	; 0x28
    d094:	bl	44a4 <readstat_write_bytes@plt>
    d098:	cmp	r0, #0
    d09c:	bne	d0b8 <sas7bdat_write_row+0xf4>
    d0a0:	mov	sp, r4
    d0a4:	mov	r2, r9
    d0a8:	mov	r1, r6
    d0ac:	mov	r0, r8
    d0b0:	bl	44a4 <readstat_write_bytes@plt>
    d0b4:	b	d0bc <sas7bdat_write_row+0xf8>
    d0b8:	mov	sp, r4
    d0bc:	sub	sp, fp, #36	; 0x24
    d0c0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d0c4:	cmp	r5, #1
    d0c8:	bne	d130 <sas7bdat_write_row+0x16c>
    d0cc:	mov	r1, r2
    d0d0:	mov	r0, r6
    d0d4:	bl	44d4 <sas_rle_compressed_len@plt>
    d0d8:	cmp	r9, r0
    d0dc:	mov	r8, r0
    d0e0:	bls	d138 <sas7bdat_write_row+0x174>
    d0e4:	mov	r1, r0
    d0e8:	mov	r0, #0
    d0ec:	bl	c82c <sas7bdat_subheader_init>
    d0f0:	mov	r3, r9
    d0f4:	mov	r2, r6
    d0f8:	str	r5, [r0, #12]
    d0fc:	str	r5, [r0, #16]
    d100:	mov	r4, r0
    d104:	ldmib	r0, {r0, r1}
    d108:	bl	4528 <sas_rle_compress@plt>
    d10c:	cmp	r8, r0
    d110:	bne	d160 <sas7bdat_write_row+0x19c>
    d114:	ldr	r1, [r7, #4]
    d118:	ldrd	r2, [r1]
    d11c:	ldr	r0, [r1, #16]
    d120:	adds	r6, r2, #1
    d124:	adc	r7, r3, #0
    d128:	strd	r6, [r1]
    d12c:	str	r4, [r0, r2, lsl #2]
    d130:	mov	r0, #0
    d134:	b	d0bc <sas7bdat_write_row+0xf8>
    d138:	mov	r1, r9
    d13c:	mov	r0, #0
    d140:	bl	c82c <sas7bdat_subheader_init>
    d144:	mov	r2, r9
    d148:	mov	r1, r6
    d14c:	mov	r4, r0
    d150:	str	r5, [r0, #12]
    d154:	ldr	r0, [r0, #4]
    d158:	bl	3f64 <memcpy@plt>
    d15c:	b	d114 <sas7bdat_write_row+0x150>
    d160:	mov	r0, r4
    d164:	bl	c868 <sas7bdat_subheader_free>
    d168:	mov	r0, #10
    d16c:	b	d0bc <sas7bdat_write_row+0xf8>

0000d170 <sas7bdat_begin_data>:
    d170:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d174:	mov	r1, #8
    d178:	sub	sp, sp, #84	; 0x54
    d17c:	mov	r4, r0
    d180:	mov	r0, #1
    d184:	bl	3d9c <calloc@plt>
    d188:	ldr	r1, [r4, #12]
    d18c:	str	r0, [sp, #12]
    d190:	mov	r0, r4
    d194:	bl	439c <sas_header_info_init@plt>
    d198:	mov	r5, r0
    d19c:	mov	r0, r4
    d1a0:	bl	c6f0 <sas7bdat_row_length>
    d1a4:	ldr	lr, [r5, #40]	; 0x28
    d1a8:	ldr	r1, [r4, #16]
    d1ac:	mov	r3, #0
    d1b0:	mov	ip, #12
    d1b4:	mov	r2, r0
    d1b8:	strd	r2, [sp, #24]
    d1bc:	ldrd	r2, [r5, #32]
    d1c0:	cmp	r1, #0
    d1c4:	strd	r2, [sp]
    d1c8:	ldr	r3, [sp]
    d1cc:	sub	r7, r3, lr
    d1d0:	bne	d1f0 <sas7bdat_begin_data+0x80>
    d1d4:	cmp	r0, r7
    d1d8:	bls	d220 <sas7bdat_begin_data+0xb0>
    d1dc:	ldrd	r2, [sp]
    d1e0:	adds	r2, r2, r2
    d1e4:	adc	r3, r3, r3
    d1e8:	strd	r2, [r5, #32]
    d1ec:	b	d1bc <sas7bdat_begin_data+0x4c>
    d1f0:	cmp	r1, #1
    d1f4:	bne	d220 <sas7bdat_begin_data+0xb0>
    d1f8:	ldrd	r2, [r5, #48]	; 0x30
    d1fc:	ldrd	r8, [sp, #24]
    d200:	adds	r8, r8, r2
    d204:	adc	r9, r9, r3
    d208:	mov	r2, r8
    d20c:	mov	r3, r9
    d210:	cmp	r7, r2
    d214:	mov	r9, #0
    d218:	sbcs	r3, r9, r3
    d21c:	blt	d1dc <sas7bdat_begin_data+0x6c>
    d220:	ldr	r8, [r4, #28]
    d224:	mov	r3, #0
    d228:	ldr	r9, [r5, #4]
    d22c:	mov	fp, r3
    d230:	ldrd	r2, [r5, #48]	; 0x30
    d234:	cmp	r9, #0
    d238:	lsl	r6, r8, #3
    d23c:	addne	r6, r6, #28
    d240:	addeq	r6, r6, #20
    d244:	strd	r2, [sp, #16]
    d248:	adds	r2, r2, r6
    d24c:	adc	r3, r3, #0
    d250:	cmp	r7, r2
    d254:	sbcs	r3, fp, r3
    d258:	blt	d1dc <sas7bdat_begin_data+0x6c>
    d25c:	cmp	r9, #0
    d260:	ldrd	r2, [sp, #16]
    d264:	muleq	r6, ip, r8
    d268:	lslne	r6, r8, #4
    d26c:	addne	r6, r6, #28
    d270:	addeq	r6, r6, #20
    d274:	adds	r2, r2, r6
    d278:	adc	r3, r3, #0
    d27c:	cmp	r7, r2
    d280:	sbcs	r3, fp, r3
    d284:	blt	d1dc <sas7bdat_begin_data+0x6c>
    d288:	ldr	r3, [sp, #12]
    d28c:	mov	r1, #16
    d290:	mov	r0, #1
    d294:	str	r5, [r3]
    d298:	bl	3d9c <calloc@plt>
    d29c:	mov	r2, #1
    d2a0:	mov	r3, #0
    d2a4:	sub	r7, r7, #28
    d2a8:	strd	r2, [r0]
    d2ac:	mov	r6, r0
    d2b0:	mov	r0, #4
    d2b4:	bl	415c <malloc@plt>
    d2b8:	ldr	r3, [r5, #4]
    d2bc:	ldr	r2, [sp, #16]
    d2c0:	cmp	r3, #0
    d2c4:	moveq	r3, #4
    d2c8:	movne	r3, #8
    d2cc:	sub	sl, r7, r2
    d2d0:	mov	r1, #24
    d2d4:	sub	sl, sl, r3
    d2d8:	mov	r9, r0
    d2dc:	str	r0, [r6, #8]
    d2e0:	mov	r0, #1
    d2e4:	bl	3d9c <calloc@plt>
    d2e8:	mov	r7, r0
    d2ec:	mov	r0, sl
    d2f0:	bl	415c <malloc@plt>
    d2f4:	mov	r2, #0
    d2f8:	mov	r3, #0
    d2fc:	str	r7, [r9]
    d300:	strd	r2, [r7, #16]
    d304:	mov	r1, #24
    d308:	stm	r7, {r0, sl}
    d30c:	mov	r0, #1
    d310:	bl	3d9c <calloc@plt>
    d314:	mov	r1, #4
    d318:	mov	fp, r0
    d31c:	add	r0, r8, #4
    d320:	mov	r2, r0
    d324:	asr	r3, r0, #31
    d328:	strd	r2, [fp]
    d32c:	bl	3d9c <calloc@plt>
    d330:	ldr	r8, [r4, #28]
    d334:	ldr	r3, [r5, #4]
    d338:	lsl	r8, r8, #3
    d33c:	cmp	r3, #0
    d340:	addeq	r8, r8, #20
    d344:	moveq	r7, #4
    d348:	str	r0, [fp, #16]
    d34c:	addne	r8, r8, #28
    d350:	movne	r7, #8
    d354:	mov	r1, r7
    d358:	mov	r0, r8
    d35c:	bl	4408 <sas_subheader_remainder@plt>
    d360:	mov	r1, r8
    d364:	mov	r8, #0
    d368:	mov	r9, r0
    d36c:	mvn	r0, #0
    d370:	bl	c82c <sas7bdat_subheader_init>
    d374:	add	r2, sp, #72	; 0x48
    d378:	str	r2, [sp]
    d37c:	ldr	r3, [r0, #4]
    d380:	str	r0, [sp, #32]
    d384:	strh	r9, [r3, r7]
    d388:	ldr	r3, [r0, #4]
    d38c:	add	r7, r7, #8
    d390:	ldr	r2, [r4, #28]
    d394:	add	sl, r7, r8, lsl #3
    d398:	cmp	r8, r2
    d39c:	add	r9, r3, sl
    d3a0:	blt	d674 <sas7bdat_begin_data+0x504>
    d3a4:	ldr	r3, [r5, #4]
    d3a8:	cmp	r3, #0
    d3ac:	moveq	r7, #12
    d3b0:	lslne	r7, r2, #4
    d3b4:	muleq	r7, r7, r2
    d3b8:	addne	r7, r7, #28
    d3bc:	movne	r9, #8
    d3c0:	addeq	r7, r7, #20
    d3c4:	moveq	r9, #4
    d3c8:	mov	r1, r9
    d3cc:	mov	r0, r7
    d3d0:	bl	4408 <sas_subheader_remainder@plt>
    d3d4:	mov	r1, r7
    d3d8:	mov	r7, #0
    d3dc:	mov	r8, r0
    d3e0:	mvn	r0, #3
    d3e4:	bl	c82c <sas7bdat_subheader_init>
    d3e8:	mov	r2, #0
    d3ec:	ldr	r3, [r0, #4]
    d3f0:	str	r0, [sp, #24]
    d3f4:	strh	r8, [r3, r9]
    d3f8:	ldr	r3, [r0, #4]
    d3fc:	add	r9, r9, #8
    d400:	add	r9, r3, r9
    d404:	add	r8, sp, #80	; 0x50
    d408:	mov	r3, #0
    d40c:	strd	r2, [r8, #-8]!
    d410:	ldr	r3, [r4, #28]
    d414:	cmp	r7, r3
    d418:	blt	d6bc <sas7bdat_begin_data+0x54c>
    d41c:	ldr	r1, [r5, #4]
    d420:	ldr	r0, [pc, #1460]	; d9dc <sas7bdat_begin_data+0x86c>
    d424:	cmp	r1, #0
    d428:	moveq	r1, #480	; 0x1e0
    d42c:	movne	r1, #808	; 0x328
    d430:	ldr	r7, [fp, #16]
    d434:	bl	c82c <sas7bdat_subheader_init>
    d438:	ldr	r3, [r5, #4]
    d43c:	cmp	r3, #0
    d440:	mov	r8, r0
    d444:	mov	r0, r4
    d448:	beq	d770 <sas7bdat_begin_data+0x600>
    d44c:	bl	c6f0 <sas7bdat_row_length>
    d450:	ldr	r2, [r4, #80]	; 0x50
    d454:	mov	r1, #0
    d458:	asr	r3, r2, #31
    d45c:	strd	r2, [sp, #56]	; 0x38
    d460:	ldr	r2, [r4, #28]
    d464:	asr	r3, r2, #31
    d468:	strd	r2, [sp, #64]	; 0x40
    d46c:	ldrd	r2, [r5, #32]
    d470:	strd	r2, [sp, #72]	; 0x48
    d474:	add	r3, sp, #48	; 0x30
    d478:	ldr	r2, [r8, #4]
    d47c:	strd	r0, [sp, #48]	; 0x30
    d480:	ldm	r3!, {r0, r1}
    d484:	add	r3, sp, #56	; 0x38
    d488:	str	r0, [r2, #40]	; 0x28
    d48c:	str	r1, [r2, #44]	; 0x2c
    d490:	ldm	r3!, {r0, r1}
    d494:	ldr	r2, [r8, #4]
    d498:	add	r3, sp, #64	; 0x40
    d49c:	str	r0, [r2, #48]	; 0x30
    d4a0:	str	r1, [r2, #52]	; 0x34
    d4a4:	ldm	r3!, {r0, r1}
    d4a8:	ldr	r2, [r8, #4]
    d4ac:	add	r3, sp, #72	; 0x48
    d4b0:	str	r0, [r2, #72]	; 0x48
    d4b4:	str	r1, [r2, #76]	; 0x4c
    d4b8:	ldm	r3!, {r0, r1}
    d4bc:	ldr	r2, [r8, #4]
    d4c0:	str	r1, [r2, #108]	; 0x6c
    d4c4:	str	r0, [r2, #104]	; 0x68
    d4c8:	ldr	r0, [r8, #4]
    d4cc:	mov	r2, #16
    d4d0:	mov	r1, #255	; 0xff
    d4d4:	add	r0, r0, #128	; 0x80
    d4d8:	bl	42e8 <memset@plt>
    d4dc:	ldr	r1, [r5, #4]
    d4e0:	str	r8, [r7]
    d4e4:	cmp	r1, #0
    d4e8:	moveq	r1, #12
    d4ec:	movne	r1, #24
    d4f0:	ldr	r0, [pc, #1256]	; d9e0 <sas7bdat_begin_data+0x870>
    d4f4:	ldr	r7, [fp, #16]
    d4f8:	bl	c82c <sas7bdat_subheader_init>
    d4fc:	ldr	r3, [r5, #4]
    d500:	cmp	r3, #0
    d504:	mov	ip, r0
    d508:	ldr	r0, [r4, #28]
    d50c:	ldr	r2, [ip, #4]
    d510:	streq	r0, [r2, #4]
    d514:	beq	d530 <sas7bdat_begin_data+0x3c0>
    d518:	asr	r1, r0, #31
    d51c:	add	r3, sp, #80	; 0x50
    d520:	strd	r0, [r3, #-8]!
    d524:	ldm	r3!, {r0, r1}
    d528:	str	r0, [r2, #8]
    d52c:	str	r1, [r2, #12]
    d530:	str	ip, [r7, #4]
    d534:	mov	r1, #4
    d538:	ldr	r0, [r4, #28]
    d53c:	bl	3d9c <calloc@plt>
    d540:	mov	r8, #0
    d544:	add	r3, sp, #72	; 0x48
    d548:	str	r3, [sp, #36]	; 0x24
    d54c:	str	r0, [sp, #16]
    d550:	ldr	r3, [r4, #28]
    d554:	cmp	r8, r3
    d558:	blt	d7b4 <sas7bdat_begin_data+0x644>
    d55c:	ldrd	r0, [r6]
    d560:	ldrd	r2, [fp]
    d564:	mov	r7, #2
    d568:	adds	r2, r2, r0
    d56c:	adc	r3, r3, r1
    d570:	ldr	r0, [fp, #16]
    d574:	strd	r2, [fp]
    d578:	lsl	r1, r2, #2
    d57c:	bl	403c <realloc@plt>
    d580:	mov	r2, #0
    d584:	mov	r3, #0
    d588:	strd	r2, [sp]
    d58c:	str	r0, [fp, #16]
    d590:	ldrd	r2, [r6]
    d594:	ldrd	r0, [sp]
    d598:	cmp	r0, r2
    d59c:	sbcs	r3, r1, r3
    d5a0:	blt	d8ac <sas7bdat_begin_data+0x73c>
    d5a4:	mov	r5, #0
    d5a8:	mov	r8, #0
    d5ac:	mov	r9, #0
    d5b0:	ldrd	r2, [r6]
    d5b4:	mov	r0, r8
    d5b8:	adds	r8, r8, #1
    d5bc:	mov	r1, r9
    d5c0:	adc	r9, r9, #0
    d5c4:	cmp	r0, r2
    d5c8:	sbcs	r3, r1, r3
    d5cc:	blt	d970 <sas7bdat_begin_data+0x800>
    d5d0:	ldr	r0, [r6, #8]
    d5d4:	bl	3f04 <free@plt>
    d5d8:	mov	r0, r6
    d5dc:	bl	3f04 <free@plt>
    d5e0:	ldr	r5, [fp, #16]
    d5e4:	ldr	r2, [sp, #32]
    d5e8:	lsl	r3, r7, #2
    d5ec:	str	r2, [r5, r7, lsl #2]
    d5f0:	add	r3, r3, #4
    d5f4:	ldr	r2, [sp, #24]
    d5f8:	ldr	r1, [r4, #28]
    d5fc:	str	r2, [r5, r3]
    d600:	add	r3, r5, r3
    d604:	mov	r2, #0
    d608:	cmp	r2, r1
    d60c:	ldr	r0, [sp, #16]
    d610:	blt	d990 <sas7bdat_begin_data+0x820>
    d614:	bl	3f04 <free@plt>
    d618:	ldrd	r2, [fp]
    d61c:	ldr	r1, [r4, #16]
    d620:	cmp	r1, #1
    d624:	strd	r2, [fp, #8]
    d628:	bne	d64c <sas7bdat_begin_data+0x4dc>
    d62c:	ldr	r1, [r4, #80]	; 0x50
    d630:	mov	r0, r5
    d634:	adds	r2, r2, r1
    d638:	adc	r3, r3, r1, asr #31
    d63c:	lsl	r1, r2, #2
    d640:	strd	r2, [fp, #8]
    d644:	bl	403c <realloc@plt>
    d648:	str	r0, [fp, #16]
    d64c:	ldr	r3, [sp, #12]
    d650:	ldr	r7, [r4, #16]
    d654:	str	r3, [r4, #300]	; 0x12c
    d658:	cmp	r7, #0
    d65c:	str	fp, [r3, #4]
    d660:	beq	d9a0 <sas7bdat_begin_data+0x830>
    d664:	mov	r6, #0
    d668:	mov	r0, r6
    d66c:	add	sp, sp, #84	; 0x54
    d670:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d674:	mov	r1, r8
    d678:	mov	r0, r4
    d67c:	str	r3, [sp, #16]
    d680:	bl	43cc <readstat_get_variable@plt>
    d684:	bl	43b4 <readstat_variable_get_name@plt>
    d688:	mov	r1, r6
    d68c:	add	r8, r8, #1
    d690:	mov	r2, r0
    d694:	ldr	r0, [sp]
    d698:	bl	c8ec <sas7bdat_make_text_ref>
    d69c:	ldrh	r2, [sp, #72]	; 0x48
    d6a0:	ldr	r3, [sp, #16]
    d6a4:	strh	r2, [r3, sl]
    d6a8:	ldrh	r2, [sp, #74]	; 0x4a
    d6ac:	strh	r2, [r9, #2]
    d6b0:	ldrh	r2, [sp, #76]	; 0x4c
    d6b4:	strh	r2, [r9, #4]
    d6b8:	b	d390 <sas7bdat_begin_data+0x220>
    d6bc:	mov	r1, r7
    d6c0:	mov	r0, r4
    d6c4:	bl	43cc <readstat_get_variable@plt>
    d6c8:	mov	sl, r0
    d6cc:	bl	43b4 <readstat_variable_get_name@plt>
    d6d0:	str	r0, [sp]
    d6d4:	mov	r0, sl
    d6d8:	bl	4228 <readstat_variable_get_type@plt>
    d6dc:	ldr	r2, [sp]
    d6e0:	str	r0, [sp, #16]
    d6e4:	mov	r0, r2
    d6e8:	bl	424c <strlen@plt>
    d6ec:	ldr	r2, [r5, #4]
    d6f0:	cmp	r0, #8
    d6f4:	movhi	r3, #2048	; 0x800
    d6f8:	movls	r3, #4
    d6fc:	cmp	r2, #0
    d700:	movne	r2, r8
    d704:	ldreq	r2, [sp, #72]	; 0x48
    d708:	ldmne	r2!, {r0, r1}
    d70c:	str	r3, [sp]
    d710:	ldr	r3, [sp, #16]
    d714:	strne	r0, [r9]
    d718:	strne	r1, [r9, #4]
    d71c:	streq	r2, [r9], #4
    d720:	addne	r9, r9, #8
    d724:	cmp	r3, #0
    d728:	movne	r3, #1
    d72c:	strbne	r3, [r9, #6]
    d730:	movne	r0, #8
    d734:	bne	d748 <sas7bdat_begin_data+0x5d8>
    d738:	mov	r3, #2
    d73c:	strb	r3, [r9, #6]
    d740:	mov	r0, sl
    d744:	bl	4318 <readstat_variable_get_storage_width@plt>
    d748:	ldrh	r3, [sp]
    d74c:	str	r0, [r9]
    d750:	add	r7, r7, #1
    d754:	strh	r3, [r9, #4]
    d758:	ldrd	r2, [sp, #72]	; 0x48
    d75c:	add	r9, r9, #8
    d760:	adds	r2, r2, r0
    d764:	adc	r3, r3, #0
    d768:	strd	r2, [sp, #72]	; 0x48
    d76c:	b	d410 <sas7bdat_begin_data+0x2a0>
    d770:	bl	c6f0 <sas7bdat_row_length>
    d774:	ldr	r3, [r8, #4]
    d778:	ldr	r2, [r5, #32]
    d77c:	ldr	ip, [r4, #80]	; 0x50
    d780:	ldr	r1, [r4, #28]
    d784:	str	r0, [r3, #20]
    d788:	ldr	r3, [r8, #4]
    d78c:	str	ip, [r3, #24]
    d790:	ldr	r3, [r8, #4]
    d794:	str	r1, [r3, #36]	; 0x24
    d798:	ldr	r3, [r8, #4]
    d79c:	str	r2, [r3, #52]	; 0x34
    d7a0:	ldr	r3, [r8, #4]
    d7a4:	mvn	r2, #0
    d7a8:	str	r2, [r3, #64]	; 0x40
    d7ac:	str	r2, [r3, #68]	; 0x44
    d7b0:	b	d4dc <sas7bdat_begin_data+0x36c>
    d7b4:	mov	r1, r8
    d7b8:	mov	r0, r4
    d7bc:	bl	43cc <readstat_get_variable@plt>
    d7c0:	ldr	r1, [r5, #4]
    d7c4:	cmp	r1, #0
    d7c8:	moveq	r1, #52	; 0x34
    d7cc:	movne	r1, #64	; 0x40
    d7d0:	mov	r9, r0
    d7d4:	ldr	r0, [pc, #520]	; d9e4 <sas7bdat_begin_data+0x874>
    d7d8:	bl	c82c <sas7bdat_subheader_init>
    d7dc:	mov	r7, r0
    d7e0:	mov	r0, r9
    d7e4:	bl	3f28 <readstat_variable_get_format@plt>
    d7e8:	str	r0, [sp, #40]	; 0x28
    d7ec:	mov	r0, r9
    d7f0:	bl	4450 <readstat_variable_get_label@plt>
    d7f4:	ldr	r3, [r5, #4]
    d7f8:	ldr	r2, [sp, #40]	; 0x28
    d7fc:	cmp	r3, #0
    d800:	movne	sl, #46	; 0x2e
    d804:	moveq	sl, #34	; 0x22
    d808:	movne	r9, #52	; 0x34
    d80c:	moveq	r9, #40	; 0x28
    d810:	cmp	r2, #0
    d814:	str	r0, [sp]
    d818:	beq	d854 <sas7bdat_begin_data+0x6e4>
    d81c:	mov	r1, r6
    d820:	ldr	r0, [sp, #36]	; 0x24
    d824:	bl	c8ec <sas7bdat_make_text_ref>
    d828:	ldr	r3, [r7, #4]
    d82c:	ldrh	r2, [sp, #72]	; 0x48
    d830:	strh	r2, [r3, sl]
    d834:	ldr	r3, [r7, #4]
    d838:	ldrh	r2, [sp, #74]	; 0x4a
    d83c:	add	r3, r3, sl
    d840:	strh	r2, [r3, #2]
    d844:	ldr	r3, [r7, #4]
    d848:	add	sl, r3, sl
    d84c:	ldrh	r3, [sp, #76]	; 0x4c
    d850:	strh	r3, [sl, #4]
    d854:	ldr	r3, [sp]
    d858:	cmp	r3, #0
    d85c:	beq	d89c <sas7bdat_begin_data+0x72c>
    d860:	mov	r2, r3
    d864:	mov	r1, r6
    d868:	ldr	r0, [sp, #36]	; 0x24
    d86c:	bl	c8ec <sas7bdat_make_text_ref>
    d870:	ldr	r3, [r7, #4]
    d874:	ldrh	r2, [sp, #72]	; 0x48
    d878:	strh	r2, [r3, r9]
    d87c:	ldr	r3, [r7, #4]
    d880:	ldrh	r2, [sp, #74]	; 0x4a
    d884:	add	r3, r3, r9
    d888:	strh	r2, [r3, #2]
    d88c:	ldr	r3, [r7, #4]
    d890:	add	r9, r3, r9
    d894:	ldrh	r3, [sp, #76]	; 0x4c
    d898:	strh	r3, [r9, #4]
    d89c:	ldr	r3, [sp, #16]
    d8a0:	str	r7, [r3, r8, lsl #2]
    d8a4:	add	r8, r8, #1
    d8a8:	b	d550 <sas7bdat_begin_data+0x3e0>
    d8ac:	lsl	r3, r7, #2
    d8b0:	str	r3, [sp, #36]	; 0x24
    d8b4:	ldr	r3, [fp, #16]
    d8b8:	ldr	r2, [r6, #8]
    d8bc:	str	r3, [sp, #40]	; 0x28
    d8c0:	ldr	r3, [sp]
    d8c4:	ldr	r8, [r5, #4]
    d8c8:	mvn	r0, #2
    d8cc:	ldr	sl, [r2, r3, lsl #2]
    d8d0:	cmp	r8, #0
    d8d4:	moveq	r8, #4
    d8d8:	movne	r8, #8
    d8dc:	cmp	sl, #0
    d8e0:	moveq	r3, #0
    d8e4:	ldrne	r3, [sl, #8]
    d8e8:	add	r2, r8, #28
    d8ec:	add	r3, r3, r2
    d8f0:	mov	r1, r3
    d8f4:	str	r2, [sp, #36]	; 0x24
    d8f8:	str	r3, [sp, #44]	; 0x2c
    d8fc:	bl	c82c <sas7bdat_subheader_init>
    d900:	ldr	r3, [sp, #44]	; 0x2c
    d904:	mov	r1, r8
    d908:	mov	r9, r0
    d90c:	mov	r0, r3
    d910:	bl	4408 <sas_subheader_remainder@plt>
    d914:	ldr	r3, [r9, #4]
    d918:	mov	r2, #8
    d91c:	mov	r1, #32
    d920:	strh	r0, [r3, r8]
    d924:	ldr	r0, [r9, #4]
    d928:	add	r8, r8, #12
    d92c:	add	r0, r0, r8
    d930:	bl	42e8 <memset@plt>
    d934:	ldr	r3, [sp, #36]	; 0x24
    d938:	ldr	r0, [r9, #4]
    d93c:	ldr	r2, [sl, #8]
    d940:	add	r0, r0, r3
    d944:	ldr	r1, [sl]
    d948:	bl	3f64 <memcpy@plt>
    d94c:	ldr	r3, [sp, #40]	; 0x28
    d950:	lsl	r2, r7, #2
    d954:	add	r7, r7, #1
    d958:	str	r9, [r3, r2]
    d95c:	ldrd	r2, [sp]
    d960:	adds	r2, r2, #1
    d964:	adc	r3, r3, #0
    d968:	strd	r2, [sp]
    d96c:	b	d590 <sas7bdat_begin_data+0x420>
    d970:	ldr	r3, [r6, #8]
    d974:	ldr	sl, [r3, r5]
    d978:	add	r5, r5, #4
    d97c:	ldr	r0, [sl]
    d980:	bl	3f04 <free@plt>
    d984:	mov	r0, sl
    d988:	bl	3f04 <free@plt>
    d98c:	b	d5b0 <sas7bdat_begin_data+0x440>
    d990:	ldr	r0, [r0, r2, lsl #2]
    d994:	add	r2, r2, #1
    d998:	str	r0, [r3, #4]!
    d99c:	b	d608 <sas7bdat_begin_data+0x498>
    d9a0:	mov	r0, r4
    d9a4:	bl	cabc <sas7bdat_emit_header_and_meta_pages>
    d9a8:	subs	r6, r0, #0
    d9ac:	beq	d664 <sas7bdat_begin_data+0x4f4>
    d9b0:	ldr	r5, [r4, #300]	; 0x12c
    d9b4:	cmp	r5, #0
    d9b8:	beq	d668 <sas7bdat_begin_data+0x4f8>
    d9bc:	ldr	r0, [r5]
    d9c0:	bl	3f04 <free@plt>
    d9c4:	ldr	r0, [r5, #4]
    d9c8:	bl	c890 <sas7bdat_subheader_array_free>
    d9cc:	mov	r0, r5
    d9d0:	bl	3f04 <free@plt>
    d9d4:	str	r7, [r4, #300]	; 0x12c
    d9d8:	b	d668 <sas7bdat_begin_data+0x4f8>
    d9dc:	.word	0xf7f7f7f7
    d9e0:	.word	0xf6f6f6f6
    d9e4:	.word	0xfffffbfe

0000d9e8 <readstat_begin_writing_sas7bdat>:
    d9e8:	ldr	ip, [r0, #8]
    d9ec:	ldr	r3, [pc, #208]	; dac4 <readstat_begin_writing_sas7bdat+0xdc>
    d9f0:	cmp	ip, #0
    d9f4:	moveq	ip, #9
    d9f8:	streq	ip, [r0, #8]
    d9fc:	ldr	ip, [pc, #196]	; dac8 <readstat_begin_writing_sas7bdat+0xe0>
    da00:	add	r3, pc, r3
    da04:	add	ip, pc, ip
    da08:	str	ip, [r0, #292]	; 0x124
    da0c:	ldr	ip, [pc, #184]	; dacc <readstat_begin_writing_sas7bdat+0xe4>
    da10:	add	ip, pc, ip
    da14:	str	ip, [r0, #236]	; 0xec
    da18:	ldr	ip, [pc, #176]	; dad0 <readstat_begin_writing_sas7bdat+0xe8>
    da1c:	add	ip, pc, ip
    da20:	str	ip, [r0, #240]	; 0xf0
    da24:	ldr	ip, [pc, #168]	; dad4 <readstat_begin_writing_sas7bdat+0xec>
    da28:	add	ip, pc, ip
    da2c:	str	ip, [r0, #244]	; 0xf4
    da30:	ldr	ip, [pc, #160]	; dad8 <readstat_begin_writing_sas7bdat+0xf0>
    da34:	add	ip, pc, ip
    da38:	str	ip, [r0, #248]	; 0xf8
    da3c:	ldr	ip, [pc, #152]	; dadc <readstat_begin_writing_sas7bdat+0xf4>
    da40:	add	ip, pc, ip
    da44:	str	ip, [r0, #252]	; 0xfc
    da48:	ldr	ip, [pc, #144]	; dae0 <readstat_begin_writing_sas7bdat+0xf8>
    da4c:	add	ip, pc, ip
    da50:	str	ip, [r0, #256]	; 0x100
    da54:	ldr	ip, [pc, #136]	; dae4 <readstat_begin_writing_sas7bdat+0xfc>
    da58:	add	ip, pc, ip
    da5c:	str	ip, [r0, #264]	; 0x108
    da60:	ldr	ip, [pc, #128]	; dae8 <readstat_begin_writing_sas7bdat+0x100>
    da64:	add	ip, pc, ip
    da68:	str	ip, [r0, #268]	; 0x10c
    da6c:	ldr	ip, [pc, #120]	; daec <readstat_begin_writing_sas7bdat+0x104>
    da70:	add	ip, pc, ip
    da74:	str	ip, [r0, #272]	; 0x110
    da78:	ldr	ip, [pc, #112]	; daf0 <readstat_begin_writing_sas7bdat+0x108>
    da7c:	add	ip, pc, ip
    da80:	str	ip, [r0, #228]	; 0xe4
    da84:	ldr	ip, [pc, #104]	; daf4 <readstat_begin_writing_sas7bdat+0x10c>
    da88:	ldr	r3, [r3, ip]
    da8c:	str	r3, [r0, #232]	; 0xe8
    da90:	ldr	r3, [pc, #96]	; daf8 <readstat_begin_writing_sas7bdat+0x110>
    da94:	add	r3, pc, r3
    da98:	str	r3, [r0, #276]	; 0x114
    da9c:	ldr	r3, [pc, #88]	; dafc <readstat_begin_writing_sas7bdat+0x114>
    daa0:	add	r3, pc, r3
    daa4:	str	r3, [r0, #284]	; 0x11c
    daa8:	ldr	r3, [pc, #80]	; db00 <readstat_begin_writing_sas7bdat+0x118>
    daac:	add	r3, pc, r3
    dab0:	str	r3, [r0, #288]	; 0x120
    dab4:	ldr	r3, [pc, #72]	; db04 <readstat_begin_writing_sas7bdat+0x11c>
    dab8:	add	r3, pc, r3
    dabc:	str	r3, [r0, #280]	; 0x118
    dac0:	b	3fac <readstat_begin_writing_file@plt>
    dac4:	.word	0x000335f8
    dac8:	.word	0xffffecd0
    dacc:	.word	0xffffede4
    dad0:	.word	0xffffeda8
    dad4:	.word	0xffffed6c
    dad8:	.word	0xffffed34
    dadc:	.word	0xffffed00
    dae0:	.word	0xffffef7c
    dae4:	.word	0xffffefe0
    dae8:	.word	0xfffff524
    daec:	.word	0xffffefd0
    daf0:	.word	0xffffec48
    daf4:	.word	0x000002f0
    daf8:	.word	0xfffff6d4
    dafc:	.word	0xfffff4cc
    db00:	.word	0xffffefe4
    db04:	.word	0xfffff504

0000db08 <sas_rle_is_special_byte>:
    db08:	and	r3, r0, #223	; 0xdf
    db0c:	cmp	r3, #0
    db10:	cmpne	r0, #64	; 0x40
    db14:	moveq	r0, #1
    db18:	movne	r0, #0
    db1c:	bx	lr

0000db20 <sas_rle_insert_run>:
    db20:	cmp	r0, #0
    db24:	push	{r4, r5, r6, lr}
    db28:	mov	r4, r3
    db2c:	add	r6, r0, r1
    db30:	bne	db64 <sas_rle_insert_run+0x44>
    db34:	mov	r0, r2
    db38:	bl	db08 <sas_rle_is_special_byte>
    db3c:	cmp	r0, #0
    db40:	beq	db54 <sas_rle_insert_run+0x34>
    db44:	cmp	r4, #17
    db48:	movhi	r0, #2
    db4c:	movls	r0, #1
    db50:	pop	{r4, r5, r6, pc}
    db54:	cmp	r4, #18
    db58:	movls	r0, #2
    db5c:	movhi	r0, #3
    db60:	pop	{r4, r5, r6, pc}
    db64:	mov	r5, r0
    db68:	mov	r0, r2
    db6c:	bl	db08 <sas_rle_is_special_byte>
    db70:	cmp	r0, #0
    db74:	beq	dc20 <sas_rle_insert_run+0x100>
    db78:	cmp	r4, #17
    db7c:	bls	dbe0 <sas_rle_insert_run+0xc0>
    db80:	sub	r4, r4, #17
    db84:	cmp	r2, #64	; 0x40
    db88:	lsr	r3, r4, #8
    db8c:	andeq	r3, r3, #15
    db90:	uxtb	r4, r4
    db94:	addeq	r2, r6, #1
    db98:	addeq	r3, r3, #80	; 0x50
    db9c:	beq	dbcc <sas_rle_insert_run+0xac>
    dba0:	cmp	r2, #32
    dba4:	andeq	r3, r3, #15
    dba8:	addeq	r2, r6, #1
    dbac:	addeq	r3, r3, #96	; 0x60
    dbb0:	beq	dbcc <sas_rle_insert_run+0xac>
    dbb4:	cmp	r2, #0
    dbb8:	movne	r2, r6
    dbbc:	bne	dbd0 <sas_rle_insert_run+0xb0>
    dbc0:	and	r3, r3, #15
    dbc4:	add	r2, r6, #1
    dbc8:	add	r3, r3, #112	; 0x70
    dbcc:	strb	r3, [r5, r1]
    dbd0:	add	r0, r2, #1
    dbd4:	strb	r4, [r2]
    dbd8:	sub	r0, r0, r6
    dbdc:	pop	{r4, r5, r6, pc}
    dbe0:	cmp	r4, #1
    dbe4:	bls	dc64 <sas_rle_insert_run+0x144>
    dbe8:	cmp	r2, #64	; 0x40
    dbec:	addeq	r0, r6, #1
    dbf0:	subeq	r4, r4, #50	; 0x32
    dbf4:	beq	dc18 <sas_rle_insert_run+0xf8>
    dbf8:	cmp	r2, #32
    dbfc:	addeq	r0, r6, #1
    dc00:	subeq	r4, r4, #34	; 0x22
    dc04:	beq	dc18 <sas_rle_insert_run+0xf8>
    dc08:	cmp	r2, #0
    dc0c:	bne	dc64 <sas_rle_insert_run+0x144>
    dc10:	add	r0, r6, #1
    dc14:	sub	r4, r4, #18
    dc18:	strb	r4, [r5, r1]
    dc1c:	b	dbd8 <sas_rle_insert_run+0xb8>
    dc20:	cmp	r4, #18
    dc24:	bls	dc4c <sas_rle_insert_run+0x12c>
    dc28:	sub	r4, r4, #18
    dc2c:	add	r0, r6, #3
    dc30:	lsr	r3, r4, #8
    dc34:	and	r3, r3, #15
    dc38:	add	r3, r3, #64	; 0x40
    dc3c:	strb	r3, [r5, r1]
    dc40:	strb	r4, [r6, #1]
    dc44:	strb	r2, [r6, #2]
    dc48:	b	dbd8 <sas_rle_insert_run+0xb8>
    dc4c:	cmp	r4, #2
    dc50:	subhi	r4, r4, #67	; 0x43
    dc54:	strbhi	r4, [r5, r1]
    dc58:	addhi	r0, r6, #2
    dc5c:	strbhi	r2, [r6, #1]
    dc60:	bhi	dbd8 <sas_rle_insert_run+0xb8>
    dc64:	mov	r0, r6
    dc68:	b	dbd8 <sas_rle_insert_run+0xb8>

0000dc6c <sas_rle_copy_run>:
    dc6c:	cmp	r0, #0
    dc70:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    dc74:	mov	r6, r3
    dc78:	add	r7, r0, r1
    dc7c:	ldr	r8, [pc, #236]	; dd70 <sas_rle_copy_run+0x104>
    dc80:	beq	dcf0 <sas_rle_copy_run+0x84>
    dc84:	ldr	fp, [pc, #232]	; dd74 <sas_rle_copy_run+0x108>
    dc88:	mov	r9, r2
    dc8c:	add	r3, r7, #2
    dc90:	mov	r5, r6
    dc94:	mvn	sl, #0
    dc98:	sub	r1, r6, r5
    dc9c:	cmp	r5, r8
    dca0:	sub	r4, r3, #2
    dca4:	add	r1, r9, r1
    dca8:	bhi	dd10 <sas_rle_copy_run+0xa4>
    dcac:	cmp	r5, #64	; 0x40
    dcb0:	bls	dd3c <sas_rle_copy_run+0xd0>
    dcb4:	sub	r2, r5, #64	; 0x40
    dcb8:	strb	r2, [r4, #1]
    dcbc:	lsr	r0, r2, #8
    dcc0:	strb	r0, [r4]
    dcc4:	mov	r4, r3
    dcc8:	mov	r2, r5
    dccc:	mov	r0, r4
    dcd0:	add	r4, r4, r5
    dcd4:	bl	3f64 <memcpy@plt>
    dcd8:	sub	r0, r4, r7
    dcdc:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    dce0:	add	r0, r0, #4160	; 0x1040
    dce4:	sub	r6, r6, #4096	; 0x1000
    dce8:	add	r0, r0, #1
    dcec:	sub	r6, r6, #63	; 0x3f
    dcf0:	cmp	r6, r8
    dcf4:	bhi	dce0 <sas_rle_copy_run+0x74>
    dcf8:	add	r0, r0, r6
    dcfc:	cmp	r6, #64	; 0x40
    dd00:	addhi	r0, r0, #1
    dd04:	cmp	r6, #0
    dd08:	addne	r0, r0, #1
    dd0c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    dd10:	mov	r2, #15
    dd14:	strb	r2, [r3, #-2]
    dd18:	strb	sl, [r3, #-1]
    dd1c:	mov	r0, r3
    dd20:	mov	r2, fp
    dd24:	bl	3f64 <memcpy@plt>
    dd28:	sub	r5, r5, #4096	; 0x1000
    dd2c:	sub	r5, r5, #63	; 0x3f
    dd30:	add	r3, r0, #4160	; 0x1040
    dd34:	add	r3, r3, #1
    dd38:	b	dc98 <sas_rle_copy_run+0x2c>
    dd3c:	cmp	r5, #48	; 0x30
    dd40:	bls	dd54 <sas_rle_copy_run+0xe8>
    dd44:	add	r3, r5, #127	; 0x7f
    dd48:	strb	r3, [r4]
    dd4c:	add	r4, r4, #1
    dd50:	b	dcc8 <sas_rle_copy_run+0x5c>
    dd54:	cmp	r5, #32
    dd58:	bhi	dd44 <sas_rle_copy_run+0xd8>
    dd5c:	cmp	r5, #16
    dd60:	bhi	dd44 <sas_rle_copy_run+0xd8>
    dd64:	cmp	r5, #0
    dd68:	beq	dcc8 <sas_rle_copy_run+0x5c>
    dd6c:	b	dd44 <sas_rle_copy_run+0xd8>
    dd70:	.word	0x0000103e
    dd74:	.word	0x0000103f

0000dd78 <sas_rle_decompress>:
    dd78:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    dd7c:	mov	r5, r0
    dd80:	ldr	r8, [pc, #428]	; df34 <sas_rle_decompress+0x1bc>
    dd84:	mov	r0, #0
    dd88:	mov	r6, r1
    dd8c:	add	r9, r2, r3
    dd90:	add	r8, pc, r8
    dd94:	mov	r7, r0
    dd98:	cmp	r2, r9
    dd9c:	bcc	dda4 <sas_rle_decompress+0x2c>
    dda0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    dda4:	ldrb	ip, [r2]
    dda8:	add	r4, r2, #1
    ddac:	lsr	r3, ip, #4
    ddb0:	and	ip, ip, #15
    ddb4:	ldr	r1, [r8, r3, lsl #2]
    ddb8:	add	r1, r4, r1
    ddbc:	cmp	r9, r1
    ddc0:	bcc	de2c <sas_rle_decompress+0xb4>
    ddc4:	cmp	r3, #15
    ddc8:	addls	pc, pc, r3, lsl #2
    ddcc:	b	df2c <sas_rle_decompress+0x1b4>
    ddd0:	b	de10 <sas_rle_decompress+0x98>
    ddd4:	b	df2c <sas_rle_decompress+0x1b4>
    ddd8:	b	df2c <sas_rle_decompress+0x1b4>
    dddc:	b	df2c <sas_rle_decompress+0x1b4>
    dde0:	b	de34 <sas_rle_decompress+0xbc>
    dde4:	b	de74 <sas_rle_decompress+0xfc>
    dde8:	b	de8c <sas_rle_decompress+0x114>
    ddec:	b	dea4 <sas_rle_decompress+0x12c>
    ddf0:	b	debc <sas_rle_decompress+0x144>
    ddf4:	b	dec4 <sas_rle_decompress+0x14c>
    ddf8:	b	decc <sas_rle_decompress+0x154>
    ddfc:	b	ded4 <sas_rle_decompress+0x15c>
    de00:	b	dedc <sas_rle_decompress+0x164>
    de04:	b	deec <sas_rle_decompress+0x174>
    de08:	b	def4 <sas_rle_decompress+0x17c>
    de0c:	b	defc <sas_rle_decompress+0x184>
    de10:	add	r4, r2, #2
    de14:	ldrb	r2, [r2, #1]
    de18:	add	r2, r2, #64	; 0x40
    de1c:	add	r2, r2, ip, lsl #8
    de20:	add	sl, r0, r2
    de24:	cmp	sl, r6
    de28:	bls	df04 <sas_rle_decompress+0x18c>
    de2c:	mvn	r0, #0
    de30:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    de34:	ldrb	r3, [r2, #1]
    de38:	ldrb	r1, [r2, #2]
    de3c:	add	r4, r2, #3
    de40:	add	r3, r3, #18
    de44:	add	ip, r3, ip, lsl #8
    de48:	add	sl, r0, ip
    de4c:	cmp	r6, sl
    de50:	bcc	de2c <sas_rle_decompress+0xb4>
    de54:	cmp	r5, #0
    de58:	beq	de68 <sas_rle_decompress+0xf0>
    de5c:	mov	r2, ip
    de60:	add	r0, r5, r0
    de64:	bl	42e8 <memset@plt>
    de68:	mov	r2, r4
    de6c:	mov	r0, sl
    de70:	b	dd98 <sas_rle_decompress+0x20>
    de74:	add	r4, r2, #2
    de78:	ldrb	r2, [r2, #1]
    de7c:	add	r2, r2, #17
    de80:	add	ip, r2, ip, lsl #8
    de84:	mov	r1, #64	; 0x40
    de88:	b	de48 <sas_rle_decompress+0xd0>
    de8c:	add	r4, r2, #2
    de90:	ldrb	r2, [r2, #1]
    de94:	add	r2, r2, #17
    de98:	add	ip, r2, ip, lsl #8
    de9c:	mov	r1, #32
    dea0:	b	de48 <sas_rle_decompress+0xd0>
    dea4:	add	r4, r2, #2
    dea8:	ldrb	r2, [r2, #1]
    deac:	add	r2, r2, #17
    deb0:	add	ip, r2, ip, lsl #8
    deb4:	mov	r1, r7
    deb8:	b	de48 <sas_rle_decompress+0xd0>
    debc:	add	r2, ip, #1
    dec0:	b	de20 <sas_rle_decompress+0xa8>
    dec4:	add	r2, ip, #17
    dec8:	b	de20 <sas_rle_decompress+0xa8>
    decc:	add	r2, ip, #33	; 0x21
    ded0:	b	de20 <sas_rle_decompress+0xa8>
    ded4:	add	r2, ip, #49	; 0x31
    ded8:	b	de20 <sas_rle_decompress+0xa8>
    dedc:	add	r4, r2, #2
    dee0:	ldrb	r1, [r2, #1]
    dee4:	add	ip, ip, #3
    dee8:	b	de48 <sas_rle_decompress+0xd0>
    deec:	add	ip, ip, #2
    def0:	b	de84 <sas_rle_decompress+0x10c>
    def4:	add	ip, ip, #2
    def8:	b	de9c <sas_rle_decompress+0x124>
    defc:	add	ip, ip, #2
    df00:	b	deb4 <sas_rle_decompress+0x13c>
    df04:	add	fp, r4, r2
    df08:	cmp	r9, fp
    df0c:	bcc	de2c <sas_rle_decompress+0xb4>
    df10:	cmp	r5, #0
    df14:	beq	df24 <sas_rle_decompress+0x1ac>
    df18:	mov	r1, r4
    df1c:	add	r0, r5, r0
    df20:	bl	3f64 <memcpy@plt>
    df24:	mov	r4, fp
    df28:	b	de68 <sas_rle_decompress+0xf0>
    df2c:	mov	sl, r0
    df30:	b	de68 <sas_rle_decompress+0xf0>
    df34:	.word	0x00013e8c

0000df38 <sas_rle_decompressed_len>:
    df38:	mov	r3, r1
    df3c:	mov	r1, #0
    df40:	mov	r2, r0
    df44:	mov	r0, r1
    df48:	b	40c0 <sas_rle_decompress@plt>

0000df4c <sas_rle_compress>:
    df4c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    df50:	mov	r6, #0
    df54:	ldr	fp, [pc, #288]	; e07c <sas_rle_compress+0x130>
    df58:	mov	r8, r0
    df5c:	add	sl, r2, r3
    df60:	mov	r7, r2
    df64:	mov	r4, r6
    df68:	mov	r1, r6
    df6c:	mov	r5, r6
    df70:	cmp	r7, sl
    df74:	str	r7, [sp, #4]
    df78:	bcc	dfd4 <sas_rle_compress+0x88>
    df7c:	mov	r0, r6
    df80:	bl	db08 <sas_rle_is_special_byte>
    df84:	cmp	r0, #0
    df88:	beq	e060 <sas_rle_compress+0x114>
    df8c:	cmp	r5, #1
    df90:	movls	r3, #0
    df94:	movhi	r3, #1
    df98:	cmp	r3, #0
    df9c:	beq	e068 <sas_rle_compress+0x11c>
    dfa0:	mov	r3, r1
    dfa4:	mov	r0, r8
    dfa8:	mov	r1, r4
    dfac:	bl	dc6c <sas_rle_copy_run>
    dfb0:	mov	r3, r5
    dfb4:	mov	r2, r6
    dfb8:	add	r4, r4, r0
    dfbc:	mov	r1, r4
    dfc0:	mov	r0, r8
    dfc4:	bl	db20 <sas_rle_insert_run>
    dfc8:	add	r0, r4, r0
    dfcc:	add	sp, sp, #12
    dfd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    dfd4:	cmp	r5, #0
    dfd8:	ldrb	r9, [r7], #1
    dfdc:	beq	e04c <sas_rle_compress+0x100>
    dfe0:	cmp	r5, fp
    dfe4:	cmpls	r6, r9
    dfe8:	addeq	r5, r5, #1
    dfec:	beq	e050 <sas_rle_compress+0x104>
    dff0:	mov	r0, r6
    dff4:	bl	db08 <sas_rle_is_special_byte>
    dff8:	cmp	r0, #0
    dffc:	beq	e058 <sas_rle_compress+0x10c>
    e000:	cmp	r5, #1
    e004:	movls	r3, #0
    e008:	movhi	r3, #1
    e00c:	cmp	r3, #0
    e010:	addeq	r1, r1, r5
    e014:	beq	e04c <sas_rle_compress+0x100>
    e018:	mov	r3, r1
    e01c:	mov	r0, r8
    e020:	mov	r1, r4
    e024:	bl	dc6c <sas_rle_copy_run>
    e028:	mov	r2, r6
    e02c:	mov	r3, r5
    e030:	add	r4, r4, r0
    e034:	mov	r1, r4
    e038:	mov	r0, r8
    e03c:	bl	db20 <sas_rle_insert_run>
    e040:	ldr	r2, [sp, #4]
    e044:	mov	r1, #0
    e048:	add	r4, r4, r0
    e04c:	mov	r5, #1
    e050:	mov	r6, r9
    e054:	b	df70 <sas_rle_compress+0x24>
    e058:	cmp	r5, #2
    e05c:	b	e004 <sas_rle_compress+0xb8>
    e060:	cmp	r5, #2
    e064:	b	df90 <sas_rle_compress+0x44>
    e068:	add	r3, r5, r1
    e06c:	mov	r0, r8
    e070:	mov	r1, r4
    e074:	bl	dc6c <sas_rle_copy_run>
    e078:	b	dfc8 <sas_rle_compress+0x7c>
    e07c:	.word	0x0000100f

0000e080 <sas_rle_compressed_len>:
    e080:	mov	r3, r1
    e084:	mov	r1, #0
    e088:	mov	r2, r0
    e08c:	mov	r0, r1
    e090:	b	4528 <sas_rle_compress@plt>

0000e094 <xport_namestr_bswap>:
    e094:	push	{r4, lr}
    e098:	mov	r4, r0
    e09c:	bl	3ef8 <machine_is_little_endian@plt>
    e0a0:	cmp	r0, #0
    e0a4:	popeq	{r4, pc}
    e0a8:	ldrb	r0, [r4, #1]
    e0ac:	ldrb	r3, [r4]
    e0b0:	orr	r0, r3, r0, lsl #8
    e0b4:	bl	3eec <byteswap2@plt>
    e0b8:	ldrb	r3, [r4, #2]
    e0bc:	strb	r0, [r4]
    e0c0:	lsr	r0, r0, #8
    e0c4:	strb	r0, [r4, #1]
    e0c8:	ldrb	r0, [r4, #3]
    e0cc:	orr	r0, r3, r0, lsl #8
    e0d0:	bl	3eec <byteswap2@plt>
    e0d4:	ldrb	r3, [r4, #4]
    e0d8:	strb	r0, [r4, #2]
    e0dc:	lsr	r0, r0, #8
    e0e0:	strb	r0, [r4, #3]
    e0e4:	ldrb	r0, [r4, #5]
    e0e8:	orr	r0, r3, r0, lsl #8
    e0ec:	bl	3eec <byteswap2@plt>
    e0f0:	ldrb	r3, [r4, #6]
    e0f4:	strb	r0, [r4, #4]
    e0f8:	lsr	r0, r0, #8
    e0fc:	strb	r0, [r4, #5]
    e100:	ldrb	r0, [r4, #7]
    e104:	orr	r0, r3, r0, lsl #8
    e108:	bl	3eec <byteswap2@plt>
    e10c:	ldrb	r3, [r4, #64]	; 0x40
    e110:	strb	r0, [r4, #6]
    e114:	lsr	r0, r0, #8
    e118:	strb	r0, [r4, #7]
    e11c:	ldrb	r0, [r4, #65]	; 0x41
    e120:	orr	r0, r3, r0, lsl #8
    e124:	bl	3eec <byteswap2@plt>
    e128:	ldrb	r3, [r4, #66]	; 0x42
    e12c:	strb	r0, [r4, #64]	; 0x40
    e130:	lsr	r0, r0, #8
    e134:	strb	r0, [r4, #65]	; 0x41
    e138:	ldrb	r0, [r4, #67]	; 0x43
    e13c:	orr	r0, r3, r0, lsl #8
    e140:	bl	3eec <byteswap2@plt>
    e144:	ldrb	r3, [r4, #68]	; 0x44
    e148:	strb	r0, [r4, #66]	; 0x42
    e14c:	lsr	r0, r0, #8
    e150:	strb	r0, [r4, #67]	; 0x43
    e154:	ldrb	r0, [r4, #69]	; 0x45
    e158:	orr	r0, r3, r0, lsl #8
    e15c:	bl	3eec <byteswap2@plt>
    e160:	ldrb	r3, [r4, #80]	; 0x50
    e164:	strb	r0, [r4, #68]	; 0x44
    e168:	lsr	r0, r0, #8
    e16c:	strb	r0, [r4, #69]	; 0x45
    e170:	ldrb	r0, [r4, #81]	; 0x51
    e174:	orr	r0, r3, r0, lsl #8
    e178:	bl	3eec <byteswap2@plt>
    e17c:	ldrb	r3, [r4, #82]	; 0x52
    e180:	strb	r0, [r4, #80]	; 0x50
    e184:	lsr	r0, r0, #8
    e188:	strb	r0, [r4, #81]	; 0x51
    e18c:	ldrb	r0, [r4, #83]	; 0x53
    e190:	orr	r0, r3, r0, lsl #8
    e194:	bl	3eec <byteswap2@plt>
    e198:	ldrb	r3, [r4, #84]	; 0x54
    e19c:	strb	r0, [r4, #82]	; 0x52
    e1a0:	lsr	r0, r0, #8
    e1a4:	strb	r0, [r4, #83]	; 0x53
    e1a8:	ldrb	r0, [r4, #85]	; 0x55
    e1ac:	orr	r3, r3, r0, lsl #8
    e1b0:	ldrb	r0, [r4, #86]	; 0x56
    e1b4:	orr	r3, r3, r0, lsl #16
    e1b8:	ldrb	r0, [r4, #87]	; 0x57
    e1bc:	orr	r0, r3, r0, lsl #24
    e1c0:	bl	3dd8 <byteswap4@plt>
    e1c4:	lsr	r3, r0, #8
    e1c8:	strb	r0, [r4, #84]	; 0x54
    e1cc:	strb	r3, [r4, #85]	; 0x55
    e1d0:	lsr	r3, r0, #16
    e1d4:	lsr	r0, r0, #24
    e1d8:	strb	r0, [r4, #87]	; 0x57
    e1dc:	ldrb	r0, [r4, #121]	; 0x79
    e1e0:	strb	r3, [r4, #86]	; 0x56
    e1e4:	ldrb	r3, [r4, #120]	; 0x78
    e1e8:	orr	r0, r3, r0, lsl #8
    e1ec:	bl	3eec <byteswap2@plt>
    e1f0:	strb	r0, [r4, #120]	; 0x78
    e1f4:	lsr	r0, r0, #8
    e1f8:	strb	r0, [r4, #121]	; 0x79
    e1fc:	pop	{r4, pc}

0000e200 <read_bytes.isra.0>:
    e200:	mov	r3, r0
    e204:	push	{lr}		; (str lr, [sp, #-4]!)
    e208:	mov	r0, r1
    e20c:	ldr	lr, [r3, #12]
    e210:	mov	r1, r2
    e214:	ldr	r2, [r3, #20]
    e218:	mov	r3, lr
    e21c:	pop	{lr}		; (ldr lr, [sp], #4)
    e220:	bx	r3

0000e224 <xport_read_record>:
    e224:	push	{r4, lr}
    e228:	mov	r2, #80	; 0x50
    e22c:	ldr	r0, [r0, #52]	; 0x34
    e230:	mov	r4, r1
    e234:	bl	e200 <read_bytes.isra.0>
    e238:	cmp	r0, #79	; 0x4f
    e23c:	movgt	r0, #0
    e240:	strbgt	r0, [r4, #80]	; 0x50
    e244:	movle	r0, #2
    e248:	pop	{r4, pc}

0000e24c <xport_read_header_record>:
    e24c:	push	{r4, r5, lr}
    e250:	sub	sp, sp, #116	; 0x74
    e254:	add	r5, sp, #28
    e258:	mov	r4, r1
    e25c:	mov	r1, r5
    e260:	bl	e224 <xport_read_record>
    e264:	cmp	r0, #0
    e268:	bne	e2c8 <xport_read_header_record+0x7c>
    e26c:	mov	r1, r0
    e270:	mov	r2, #36	; 0x24
    e274:	mov	r0, r4
    e278:	bl	42e8 <memset@plt>
    e27c:	add	r3, r4, #32
    e280:	str	r3, [sp, #16]
    e284:	add	r3, r4, #28
    e288:	str	r3, [sp, #12]
    e28c:	add	r3, r4, #24
    e290:	str	r3, [sp, #8]
    e294:	ldr	r1, [pc, #52]	; e2d0 <xport_read_header_record+0x84>
    e298:	add	r3, r4, #20
    e29c:	str	r3, [sp, #4]
    e2a0:	add	r3, r4, #16
    e2a4:	str	r3, [sp]
    e2a8:	mov	r2, r4
    e2ac:	add	r3, r4, #12
    e2b0:	add	r1, pc, r1
    e2b4:	mov	r0, r5
    e2b8:	bl	42d0 <__isoc99_sscanf@plt>
    e2bc:	cmp	r0, #1
    e2c0:	movle	r0, #5
    e2c4:	movgt	r0, #0
    e2c8:	add	sp, sp, #116	; 0x74
    e2cc:	pop	{r4, r5, pc}
    e2d0:	.word	0x000139ac

0000e2d4 <xport_expect_header_record>:
    e2d4:	push	{r4, r5, r6, r7, lr}
    e2d8:	sub	sp, sp, #44	; 0x2c
    e2dc:	add	r4, sp, #4
    e2e0:	mov	r6, r1
    e2e4:	mov	r1, r4
    e2e8:	mov	r7, r0
    e2ec:	mov	r5, r2
    e2f0:	bl	e24c <xport_read_header_record>
    e2f4:	cmp	r0, #0
    e2f8:	bne	e32c <xport_expect_header_record+0x58>
    e2fc:	ldr	r3, [r7, #380]	; 0x17c
    e300:	cmp	r3, #5
    e304:	moveq	r1, r6
    e308:	beq	e318 <xport_expect_header_record+0x44>
    e30c:	cmp	r3, #8
    e310:	bne	e32c <xport_expect_header_record+0x58>
    e314:	mov	r1, r5
    e318:	mov	r0, r4
    e31c:	bl	3e44 <strcmp@plt>
    e320:	cmp	r0, #0
    e324:	movne	r0, #5
    e328:	moveq	r0, #0
    e32c:	add	sp, sp, #44	; 0x2c
    e330:	pop	{r4, r5, r6, r7, pc}

0000e334 <readstat_parse_xport>:
    e334:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e338:	add	fp, sp, #32
    e33c:	sub	sp, sp, #252	; 0xfc
    e340:	ldr	r3, [r0, #32]
    e344:	mov	r5, r0
    e348:	mov	r7, r1
    e34c:	mov	r0, #1
    e350:	mov	r1, #384	; 0x180
    e354:	mov	r8, r2
    e358:	str	r3, [fp, #-232]	; 0xffffff18
    e35c:	bl	3d9c <calloc@plt>
    e360:	mov	lr, r5
    e364:	ldr	r6, [pc, #2988]	; ef18 <readstat_parse_xport+0xbe4>
    e368:	add	r6, pc, r6
    e36c:	mov	r4, r0
    e370:	mov	ip, r0
    e374:	ldm	lr!, {r0, r1, r2, r3}
    e378:	stmia	ip!, {r0, r1, r2, r3}
    e37c:	ldm	lr, {r0, r1, r2, r3}
    e380:	stm	ip, {r0, r1, r2, r3}
    e384:	mov	r0, r7
    e388:	ldr	r3, [r5, #36]	; 0x24
    e38c:	ldr	r2, [fp, #-232]	; 0xffffff18
    e390:	str	r3, [r4, #40]	; 0x28
    e394:	ldr	r3, [r5, #40]	; 0x28
    e398:	str	r8, [r4, #36]	; 0x24
    e39c:	str	r3, [r4, #44]	; 0x2c
    e3a0:	ldr	r3, [fp, #-232]	; 0xffffff18
    e3a4:	ldr	r1, [r2, #20]
    e3a8:	str	r3, [r4, #52]	; 0x34
    e3ac:	ldr	r3, [r5, #44]	; 0x2c
    e3b0:	str	r3, [r4, #68]	; 0x44
    e3b4:	ldr	r3, [r5, #48]	; 0x30
    e3b8:	cmp	r3, #0
    e3bc:	strgt	r3, [r4, #72]	; 0x48
    e3c0:	ldr	r3, [fp, #-232]	; 0xffffff18
    e3c4:	ldr	r3, [r3]
    e3c8:	blx	r3
    e3cc:	cmn	r0, #1
    e3d0:	moveq	sl, #1
    e3d4:	beq	e750 <readstat_parse_xport+0x41c>
    e3d8:	ldr	r3, [fp, #-232]	; 0xffffff18
    e3dc:	ldr	r2, [fp, #-232]	; 0xffffff18
    e3e0:	mov	r1, #2
    e3e4:	ldr	r3, [r3, #8]
    e3e8:	ldr	r2, [r2, #20]
    e3ec:	mov	r0, #0
    e3f0:	blx	r3
    e3f4:	cmn	r0, #1
    e3f8:	str	r0, [r4, #32]
    e3fc:	bne	e408 <readstat_parse_xport+0xd4>
    e400:	mov	sl, #15
    e404:	b	e750 <readstat_parse_xport+0x41c>
    e408:	ldr	r3, [fp, #-232]	; 0xffffff18
    e40c:	ldr	r2, [fp, #-232]	; 0xffffff18
    e410:	mov	r1, #0
    e414:	ldr	r3, [r3, #8]
    e418:	ldr	r2, [r2, #20]
    e41c:	mov	r0, r1
    e420:	blx	r3
    e424:	cmn	r0, #1
    e428:	beq	e400 <readstat_parse_xport+0xcc>
    e42c:	ldr	r7, [r4, #40]	; 0x28
    e430:	cmp	r7, #0
    e434:	beq	e474 <readstat_parse_xport+0x140>
    e438:	ldr	r5, [r4, #44]	; 0x2c
    e43c:	cmp	r5, #0
    e440:	beq	e474 <readstat_parse_xport+0x140>
    e444:	mov	r1, r5
    e448:	mov	r0, r7
    e44c:	bl	3e44 <strcmp@plt>
    e450:	cmp	r0, #0
    e454:	beq	e474 <readstat_parse_xport+0x140>
    e458:	mov	r1, r7
    e45c:	mov	r0, r5
    e460:	bl	4180 <iconv_open@plt>
    e464:	cmn	r0, #1
    e468:	moveq	sl, #7
    e46c:	beq	e750 <readstat_parse_xport+0x41c>
    e470:	str	r0, [r4, #48]	; 0x30
    e474:	sub	r5, fp, #180	; 0xb4
    e478:	mov	r1, r5
    e47c:	mov	r0, r4
    e480:	bl	e24c <xport_read_header_record>
    e484:	subs	sl, r0, #0
    e488:	bne	e750 <readstat_parse_xport+0x41c>
    e48c:	ldr	r1, [pc, #2696]	; ef1c <readstat_parse_xport+0xbe8>
    e490:	mov	r0, r5
    e494:	add	r1, pc, r1
    e498:	bl	3e44 <strcmp@plt>
    e49c:	cmp	r0, #0
    e4a0:	moveq	r3, #5
    e4a4:	beq	e4c8 <readstat_parse_xport+0x194>
    e4a8:	ldr	r1, [pc, #2672]	; ef20 <readstat_parse_xport+0xbec>
    e4ac:	mov	r0, r5
    e4b0:	add	r1, pc, r1
    e4b4:	bl	3e44 <strcmp@plt>
    e4b8:	cmp	r0, #0
    e4bc:	movne	sl, #24
    e4c0:	bne	e750 <readstat_parse_xport+0x41c>
    e4c4:	mov	r3, #8
    e4c8:	str	r3, [r4, #380]	; 0x17c
    e4cc:	ldr	r3, [r4, #52]	; 0x34
    e4d0:	mov	r1, #1
    e4d4:	mov	r0, #80	; 0x50
    e4d8:	ldr	r7, [r3, #8]
    e4dc:	ldr	r2, [r3, #20]
    e4e0:	blx	r7
    e4e4:	cmn	r0, #1
    e4e8:	beq	e400 <readstat_parse_xport+0xcc>
    e4ec:	sub	r9, fp, #224	; 0xe0
    e4f0:	mov	r2, #44	; 0x2c
    e4f4:	mov	r1, #0
    e4f8:	mov	r0, r9
    e4fc:	bl	42e8 <memset@plt>
    e500:	mvn	r3, #0
    e504:	mov	r1, r5
    e508:	mov	r0, r4
    e50c:	str	r3, [fp, #-192]	; 0xffffff40
    e510:	bl	e224 <xport_read_record>
    e514:	subs	sl, r0, #0
    e518:	bne	e750 <readstat_parse_xport+0x41c>
    e51c:	add	r3, r9, #4
    e520:	str	r3, [sp, #8]
    e524:	ldr	r1, [pc, #2552]	; ef24 <readstat_parse_xport+0xbf0>
    e528:	add	r3, r9, #8
    e52c:	str	r3, [sp, #4]
    e530:	sub	r7, fp, #228	; 0xe4
    e534:	add	r3, r9, #20
    e538:	str	r3, [sp]
    e53c:	str	r9, [sp, #12]
    e540:	mov	r3, r7
    e544:	add	r2, r9, #12
    e548:	add	r1, pc, r1
    e54c:	mov	r0, r5
    e550:	bl	42d0 <__isoc99_sscanf@plt>
    e554:	ldr	r3, [pc, #2508]	; ef28 <readstat_parse_xport+0xbf4>
    e558:	ldr	r6, [r6, r3]
    e55c:	add	r1, r6, sl, lsl #2
    e560:	mov	r0, r7
    e564:	bl	3e44 <strcmp@plt>
    e568:	cmp	r0, #0
    e56c:	bne	e71c <readstat_parse_xport+0x3e8>
    e570:	str	sl, [fp, #-208]	; 0xffffff30
    e574:	ldr	r3, [fp, #-204]	; 0xffffff34
    e578:	mov	r0, r9
    e57c:	cmp	r3, #59	; 0x3b
    e580:	addle	r3, r3, #100	; 0x64
    e584:	strle	r3, [fp, #-204]	; 0xffffff34
    e588:	bl	3e98 <mktime@plt>
    e58c:	ldr	r2, [pc, #2456]	; ef2c <readstat_parse_xport+0xbf8>
    e590:	ldr	r1, [pc, #2456]	; ef30 <readstat_parse_xport+0xbfc>
    e594:	add	r2, pc, r2
    e598:	add	r1, pc, r1
    e59c:	str	r0, [r4, #56]	; 0x38
    e5a0:	mov	r0, r4
    e5a4:	bl	e2d4 <xport_expect_header_record>
    e5a8:	subs	sl, r0, #0
    e5ac:	bne	e750 <readstat_parse_xport+0x41c>
    e5b0:	ldr	r2, [pc, #2428]	; ef34 <readstat_parse_xport+0xc00>
    e5b4:	ldr	r1, [pc, #2428]	; ef38 <readstat_parse_xport+0xc04>
    e5b8:	add	r2, pc, r2
    e5bc:	add	r1, pc, r1
    e5c0:	mov	r0, r4
    e5c4:	bl	e2d4 <xport_expect_header_record>
    e5c8:	subs	sl, r0, #0
    e5cc:	bne	e750 <readstat_parse_xport+0x41c>
    e5d0:	mov	r1, r5
    e5d4:	mov	r0, r4
    e5d8:	bl	e224 <xport_read_record>
    e5dc:	subs	sl, r0, #0
    e5e0:	bne	e750 <readstat_parse_xport+0x41c>
    e5e4:	ldr	r3, [r4, #380]	; 0x17c
    e5e8:	ldr	r2, [r4, #48]	; 0x30
    e5ec:	cmp	r3, #5
    e5f0:	add	r7, r4, #245	; 0xf5
    e5f4:	str	r2, [sp]
    e5f8:	movne	r3, #32
    e5fc:	moveq	r3, #8
    e600:	add	r2, r5, #8
    e604:	mov	r1, #129	; 0x81
    e608:	mov	r0, r7
    e60c:	bl	427c <readstat_convert@plt>
    e610:	subs	sl, r0, #0
    e614:	bne	e750 <readstat_parse_xport+0x41c>
    e618:	mov	r1, r5
    e61c:	mov	r0, r4
    e620:	bl	e224 <xport_read_record>
    e624:	subs	sl, r0, #0
    e628:	bne	e750 <readstat_parse_xport+0x41c>
    e62c:	ldr	r3, [r4, #48]	; 0x30
    e630:	add	r6, r4, #84	; 0x54
    e634:	str	r3, [sp]
    e638:	add	r2, r5, #32
    e63c:	mov	r3, #40	; 0x28
    e640:	mov	r1, #161	; 0xa1
    e644:	mov	r0, r6
    e648:	bl	427c <readstat_convert@plt>
    e64c:	subs	sl, r0, #0
    e650:	bne	e750 <readstat_parse_xport+0x41c>
    e654:	mov	r1, r9
    e658:	mov	r0, r4
    e65c:	bl	e24c <xport_read_header_record>
    e660:	subs	sl, r0, #0
    e664:	bne	e750 <readstat_parse_xport+0x41c>
    e668:	ldr	sl, [r4, #380]	; 0x17c
    e66c:	cmp	sl, #5
    e670:	bne	e72c <readstat_parse_xport+0x3f8>
    e674:	ldr	r1, [pc, #2240]	; ef3c <readstat_parse_xport+0xc08>
    e678:	mov	r0, r9
    e67c:	add	r1, pc, r1
    e680:	bl	3e44 <strcmp@plt>
    e684:	cmp	r0, #0
    e688:	bne	e750 <readstat_parse_xport+0x41c>
    e68c:	ldr	r0, [fp, #-208]	; 0xffffff30
    e690:	mov	r1, #4
    e694:	str	r0, [r4, #64]	; 0x40
    e698:	bl	400c <readstat_calloc@plt>
    e69c:	cmp	r0, #0
    e6a0:	str	r0, [r4, #376]	; 0x178
    e6a4:	moveq	sl, #3
    e6a8:	beq	e750 <readstat_parse_xport+0x41c>
    e6ac:	ldr	r8, [r4]
    e6b0:	cmp	r8, #0
    e6b4:	beq	ef04 <readstat_parse_xport+0xbd0>
    e6b8:	mov	r2, #56	; 0x38
    e6bc:	mov	r1, #0
    e6c0:	mov	r0, r5
    e6c4:	bl	42e8 <memset@plt>
    e6c8:	mvn	r2, #0
    e6cc:	mvn	r3, #0
    e6d0:	str	r7, [fp, #-140]	; 0xffffff74
    e6d4:	strd	r2, [fp, #-180]	; 0xffffff4c
    e6d8:	ldr	r2, [r4, #64]	; 0x40
    e6dc:	str	r6, [fp, #-136]	; 0xffffff78
    e6e0:	ldr	r1, [r4, #36]	; 0x24
    e6e4:	asr	r3, r2, #31
    e6e8:	mov	r0, r5
    e6ec:	strd	r2, [fp, #-172]	; 0xffffff54
    e6f0:	ldr	r2, [r4, #380]	; 0x17c
    e6f4:	ldr	r3, [r4, #56]	; 0x38
    e6f8:	str	r3, [fp, #-164]	; 0xffffff5c
    e6fc:	str	r3, [fp, #-160]	; 0xffffff60
    e700:	asr	r3, r2, #31
    e704:	strd	r2, [fp, #-156]	; 0xffffff64
    e708:	blx	r8
    e70c:	cmp	r0, #0
    e710:	beq	ef04 <readstat_parse_xport+0xbd0>
    e714:	mov	sl, #4
    e718:	b	e750 <readstat_parse_xport+0x41c>
    e71c:	add	sl, sl, #1
    e720:	cmp	sl, #12
    e724:	bne	e55c <readstat_parse_xport+0x228>
    e728:	b	e574 <readstat_parse_xport+0x240>
    e72c:	cmp	sl, #8
    e730:	bne	e68c <readstat_parse_xport+0x358>
    e734:	ldr	r1, [pc, #2052]	; ef40 <readstat_parse_xport+0xc0c>
    e738:	mov	r0, r9
    e73c:	add	r1, pc, r1
    e740:	bl	3e44 <strcmp@plt>
    e744:	cmp	r0, #0
    e748:	movne	sl, #5
    e74c:	beq	e68c <readstat_parse_xport+0x358>
    e750:	ldr	r3, [fp, #-232]	; 0xffffff18
    e754:	ldr	r2, [fp, #-232]	; 0xffffff18
    e758:	ldr	r3, [r3, #4]
    e75c:	ldr	r0, [r2, #20]
    e760:	blx	r3
    e764:	ldr	r3, [r4, #376]	; 0x178
    e768:	cmp	r3, #0
    e76c:	movne	r5, #0
    e770:	bne	eeec <readstat_parse_xport+0xbb8>
    e774:	ldr	r0, [r4, #48]	; 0x30
    e778:	cmp	r0, #0
    e77c:	beq	e784 <readstat_parse_xport+0x450>
    e780:	bl	3e14 <iconv_close@plt>
    e784:	mov	r0, r4
    e788:	bl	3f04 <free@plt>
    e78c:	mov	r0, sl
    e790:	sub	sp, fp, #32
    e794:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e798:	mov	r2, #140	; 0x8c
    e79c:	mov	r1, r5
    e7a0:	ldr	r0, [r4, #52]	; 0x34
    e7a4:	bl	e200 <read_bytes.isra.0>
    e7a8:	cmp	r0, #139	; 0x8b
    e7ac:	bls	e8e8 <readstat_parse_xport+0x5b4>
    e7b0:	mov	r0, r5
    e7b4:	bl	40d8 <xport_namestr_bswap@plt>
    e7b8:	ldr	r1, [pc, #1924]	; ef44 <readstat_parse_xport+0xc10>
    e7bc:	mov	r0, #1
    e7c0:	bl	3d9c <calloc@plt>
    e7c4:	ldrh	r3, [fp, #-180]	; 0xffffff4c
    e7c8:	mov	r1, #300	; 0x12c
    e7cc:	cmp	r3, #2
    e7d0:	movne	r3, #5
    e7d4:	moveq	r3, #0
    e7d8:	str	r7, [r0, #4]
    e7dc:	str	r3, [r0]
    e7e0:	ldrh	r3, [fp, #-176]	; 0xffffff50
    e7e4:	mov	r6, r0
    e7e8:	add	r0, r0, #8
    e7ec:	str	r3, [r0, #1588]	; 0x634
    e7f0:	ldrh	r3, [fp, #-116]	; 0xffffff8c
    e7f4:	str	r3, [r0, #2128]	; 0x850
    e7f8:	ldrh	r3, [fp, #-114]	; 0xffffff8e
    e7fc:	str	r3, [r0, #2132]	; 0x854
    e800:	ldrh	r3, [fp, #-112]	; 0xffffff90
    e804:	cmp	r3, #0
    e808:	moveq	r3, #1
    e80c:	movne	r3, #3
    e810:	str	r3, [r0, #2124]	; 0x84c
    e814:	ldr	r3, [r4, #380]	; 0x17c
    e818:	cmp	r3, #5
    e81c:	ldr	r3, [r4, #48]	; 0x30
    e820:	moveq	r2, r8
    e824:	str	r3, [sp]
    e828:	moveq	r3, #8
    e82c:	movne	r3, #32
    e830:	ldrne	r2, [fp, #-236]	; 0xffffff14
    e834:	bl	427c <readstat_convert@plt>
    e838:	cmp	r0, #0
    e83c:	mov	sl, r0
    e840:	bne	e750 <readstat_parse_xport+0x41c>
    e844:	ldr	r3, [r4, #48]	; 0x30
    e848:	add	r2, r5, #16
    e84c:	str	r3, [sp]
    e850:	mov	r1, #1024	; 0x400
    e854:	mov	r3, #40	; 0x28
    e858:	add	r0, r6, #564	; 0x234
    e85c:	bl	427c <readstat_convert@plt>
    e860:	subs	sl, r0, #0
    e864:	bne	e750 <readstat_parse_xport+0x41c>
    e868:	ldr	r3, [r6, #2140]	; 0x85c
    e86c:	mov	r2, #8
    e870:	str	r3, [sp]
    e874:	add	r1, r5, #56	; 0x38
    e878:	ldr	r3, [r6, #2136]	; 0x858
    e87c:	add	r0, r6, #308	; 0x134
    e880:	bl	4ed8 <xport_construct_format.constprop.4>
    e884:	subs	sl, r0, #0
    e888:	bne	e750 <readstat_parse_xport+0x41c>
    e88c:	ldr	r3, [r4, #376]	; 0x178
    e890:	str	r6, [r3, r7, lsl #2]
    e894:	add	r7, r7, #1
    e898:	ldr	r3, [r4, #64]	; 0x40
    e89c:	cmp	r7, r3
    e8a0:	blt	e798 <readstat_parse_xport+0x464>
    e8a4:	ldr	r0, [r4, #52]	; 0x34
    e8a8:	bl	4c50 <xport_skip_rest_of_record.isra.2>
    e8ac:	subs	sl, r0, #0
    e8b0:	bne	e750 <readstat_parse_xport+0x41c>
    e8b4:	ldr	r3, [r4, #380]	; 0x17c
    e8b8:	cmp	r3, #5
    e8bc:	bne	e8f0 <readstat_parse_xport+0x5bc>
    e8c0:	ldr	r2, [pc, #1664]	; ef48 <readstat_parse_xport+0xc14>
    e8c4:	ldr	r1, [pc, #1664]	; ef4c <readstat_parse_xport+0xc18>
    e8c8:	add	r2, pc, r2
    e8cc:	add	r1, pc, r1
    e8d0:	mov	r0, r4
    e8d4:	bl	e2d4 <xport_expect_header_record>
    e8d8:	cmp	r0, #0
    e8dc:	beq	e960 <readstat_parse_xport+0x62c>
    e8e0:	mov	sl, r0
    e8e4:	b	e750 <readstat_parse_xport+0x41c>
    e8e8:	mov	sl, #2
    e8ec:	b	e750 <readstat_parse_xport+0x41c>
    e8f0:	mov	r1, r5
    e8f4:	mov	r0, r4
    e8f8:	bl	e24c <xport_read_header_record>
    e8fc:	cmp	r0, #0
    e900:	bne	e8e0 <readstat_parse_xport+0x5ac>
    e904:	ldr	r1, [pc, #1604]	; ef50 <readstat_parse_xport+0xc1c>
    e908:	mov	r0, r5
    e90c:	add	r1, pc, r1
    e910:	bl	3e44 <strcmp@plt>
    e914:	cmp	r0, #0
    e918:	beq	e960 <readstat_parse_xport+0x62c>
    e91c:	ldr	r1, [pc, #1584]	; ef54 <readstat_parse_xport+0xc20>
    e920:	mov	r0, r5
    e924:	add	r1, pc, r1
    e928:	bl	3e44 <strcmp@plt>
    e92c:	subs	r6, r0, #0
    e930:	ldreq	r3, [fp, #-168]	; 0xffffff58
    e934:	streq	r3, [fp, #-248]	; 0xffffff08
    e938:	beq	eb2c <readstat_parse_xport+0x7f8>
    e93c:	ldr	r1, [pc, #1556]	; ef58 <readstat_parse_xport+0xc24>
    e940:	mov	r0, r5
    e944:	add	r1, pc, r1
    e948:	bl	3e44 <strcmp@plt>
    e94c:	subs	r3, r0, #0
    e950:	str	r3, [fp, #-240]	; 0xffffff10
    e954:	ldreq	r3, [fp, #-168]	; 0xffffff58
    e958:	streq	r3, [fp, #-260]	; 0xfffffefc
    e95c:	beq	ed3c <readstat_parse_xport+0xa08>
    e960:	mov	r5, #0
    e964:	mov	r6, r5
    e968:	mov	r9, #1
    e96c:	str	r5, [r4, #76]	; 0x4c
    e970:	ldr	r3, [r4, #64]	; 0x40
    e974:	cmp	r6, r3
    e978:	blt	eda0 <readstat_parse_xport+0xa6c>
    e97c:	ldr	r0, [r4, #76]	; 0x4c
    e980:	cmp	r0, #0
    e984:	beq	e750 <readstat_parse_xport+0x41c>
    e988:	ldr	r3, [r4, #16]
    e98c:	cmp	r3, #0
    e990:	beq	e750 <readstat_parse_xport+0x41c>
    e994:	bl	4270 <readstat_malloc@plt>
    e998:	mov	r6, r0
    e99c:	ldr	r0, [r4, #76]	; 0x4c
    e9a0:	bl	4270 <readstat_malloc@plt>
    e9a4:	cmp	r0, #0
    e9a8:	cmpne	r6, #0
    e9ac:	mov	r8, r0
    e9b0:	moveq	r7, #1
    e9b4:	movne	r7, #0
    e9b8:	beq	eeb8 <readstat_parse_xport+0xb84>
    e9bc:	ldr	r2, [r4, #76]	; 0x4c
    e9c0:	mov	r1, #32
    e9c4:	bl	42e8 <memset@plt>
    e9c8:	ldr	r2, [r4, #76]	; 0x4c
    e9cc:	mov	r1, r6
    e9d0:	ldr	r0, [r4, #52]	; 0x34
    e9d4:	bl	e200 <read_bytes.isra.0>
    e9d8:	cmn	r0, #1
    e9dc:	beq	eecc <readstat_parse_xport+0xb98>
    e9e0:	ldr	r3, [r4, #76]	; 0x4c
    e9e4:	cmp	r3, r0
    e9e8:	bhi	ee60 <readstat_parse_xport+0xb2c>
    e9ec:	mov	r2, r6
    e9f0:	add	r3, r6, r3
    e9f4:	cmp	r2, r3
    e9f8:	bne	edfc <readstat_parse_xport+0xac8>
    e9fc:	add	r7, r7, #1
    ea00:	b	e9c8 <readstat_parse_xport+0x694>
    ea04:	mov	r2, #6
    ea08:	mov	r1, r9
    ea0c:	ldr	r0, [r4, #52]	; 0x34
    ea10:	str	sp, [fp, #-236]	; 0xffffff14
    ea14:	bl	e200 <read_bytes.isra.0>
    ea18:	cmp	r0, #6
    ea1c:	bne	eb64 <readstat_parse_xport+0x830>
    ea20:	bl	3ef8 <machine_is_little_endian@plt>
    ea24:	cmp	r0, #0
    ea28:	ldrh	r0, [fp, #-224]	; 0xffffff20
    ea2c:	ldrheq	r8, [fp, #-222]	; 0xffffff22
    ea30:	ldrheq	r5, [fp, #-220]	; 0xffffff24
    ea34:	moveq	r7, r0
    ea38:	beq	ea5c <readstat_parse_xport+0x728>
    ea3c:	bl	3eec <byteswap2@plt>
    ea40:	mov	r7, r0
    ea44:	ldrh	r0, [fp, #-222]	; 0xffffff22
    ea48:	bl	3eec <byteswap2@plt>
    ea4c:	mov	r8, r0
    ea50:	ldrh	r0, [fp, #-220]	; 0xffffff24
    ea54:	bl	3eec <byteswap2@plt>
    ea58:	mov	r5, r0
    ea5c:	ldr	r1, [r4, #64]	; 0x40
    ea60:	clz	r2, r7
    ea64:	lsr	r2, r2, #5
    ea68:	cmp	r1, r7
    ea6c:	orrlt	r2, r2, #1
    ea70:	cmp	r2, #0
    ea74:	bne	eb74 <readstat_parse_xport+0x840>
    ea78:	add	r2, r8, #8
    ea7c:	bic	r2, r2, #7
    ea80:	sub	sp, sp, r2
    ea84:	add	r2, r5, #8
    ea88:	bic	r2, r2, #7
    ea8c:	add	r3, sp, #16
    ea90:	sub	sp, sp, r2
    ea94:	ldr	r2, [r4, #376]	; 0x178
    ea98:	sub	r7, r7, #-1073741823	; 0xc0000001
    ea9c:	str	r3, [fp, #-240]	; 0xffffff10
    eaa0:	ldr	r7, [r2, r7, lsl #2]
    eaa4:	add	r3, sp, #16
    eaa8:	mov	r2, r8
    eaac:	ldr	r1, [fp, #-240]	; 0xffffff10
    eab0:	ldr	r0, [r4, #52]	; 0x34
    eab4:	str	r3, [fp, #-244]	; 0xffffff0c
    eab8:	bl	e200 <read_bytes.isra.0>
    eabc:	cmp	r8, r0
    eac0:	bne	eb64 <readstat_parse_xport+0x830>
    eac4:	mov	r2, r5
    eac8:	ldr	r1, [fp, #-244]	; 0xffffff0c
    eacc:	ldr	r0, [r4, #52]	; 0x34
    ead0:	bl	e200 <read_bytes.isra.0>
    ead4:	cmp	r5, r0
    ead8:	bne	eb64 <readstat_parse_xport+0x830>
    eadc:	ldr	r2, [r4, #48]	; 0x30
    eae0:	mov	r3, r8
    eae4:	str	r2, [sp]
    eae8:	ldr	r2, [fp, #-240]	; 0xffffff10
    eaec:	mov	r1, #300	; 0x12c
    eaf0:	add	r0, r7, #8
    eaf4:	bl	427c <readstat_convert@plt>
    eaf8:	cmp	r0, #0
    eafc:	bne	eb68 <readstat_parse_xport+0x834>
    eb00:	ldr	r3, [r4, #48]	; 0x30
    eb04:	mov	r1, #1024	; 0x400
    eb08:	str	r3, [sp]
    eb0c:	ldr	r2, [fp, #-244]	; 0xffffff0c
    eb10:	mov	r3, r5
    eb14:	add	r0, r7, #564	; 0x234
    eb18:	bl	427c <readstat_convert@plt>
    eb1c:	cmp	r0, #0
    eb20:	bne	eb68 <readstat_parse_xport+0x834>
    eb24:	ldr	sp, [fp, #-236]	; 0xffffff14
    eb28:	add	r6, r6, #1
    eb2c:	ldr	r3, [fp, #-248]	; 0xffffff08
    eb30:	cmp	r3, r6
    eb34:	bgt	ea04 <readstat_parse_xport+0x6d0>
    eb38:	ldr	r0, [r4, #52]	; 0x34
    eb3c:	bl	4c50 <xport_skip_rest_of_record.isra.2>
    eb40:	cmp	r0, #0
    eb44:	bne	e8e0 <readstat_parse_xport+0x5ac>
    eb48:	ldr	r2, [pc, #1036]	; ef5c <readstat_parse_xport+0xc28>
    eb4c:	ldr	r1, [pc, #1036]	; ef60 <readstat_parse_xport+0xc2c>
    eb50:	add	r2, pc, r2
    eb54:	add	r1, pc, r1
    eb58:	mov	r0, r4
    eb5c:	bl	e2d4 <xport_expect_header_record>
    eb60:	b	eb6c <readstat_parse_xport+0x838>
    eb64:	mov	r0, #2
    eb68:	ldr	sp, [fp, #-236]	; 0xffffff14
    eb6c:	cmp	r0, #0
    eb70:	b	e8dc <readstat_parse_xport+0x5a8>
    eb74:	mov	r0, #5
    eb78:	b	eb68 <readstat_parse_xport+0x834>
    eb7c:	mov	r2, #10
    eb80:	mov	r1, r9
    eb84:	ldr	r0, [r4, #52]	; 0x34
    eb88:	str	sp, [fp, #-244]	; 0xffffff0c
    eb8c:	bl	e200 <read_bytes.isra.0>
    eb90:	cmp	r0, #10
    eb94:	bne	ed8c <readstat_parse_xport+0xa58>
    eb98:	bl	3ef8 <machine_is_little_endian@plt>
    eb9c:	cmp	r0, #0
    eba0:	ldrh	r0, [fp, #-224]	; 0xffffff20
    eba4:	beq	ed70 <readstat_parse_xport+0xa3c>
    eba8:	bl	3eec <byteswap2@plt>
    ebac:	mov	r5, r0
    ebb0:	ldrh	r0, [fp, #-222]	; 0xffffff22
    ebb4:	bl	3eec <byteswap2@plt>
    ebb8:	mov	r8, r0
    ebbc:	ldrh	r0, [fp, #-220]	; 0xffffff24
    ebc0:	bl	3eec <byteswap2@plt>
    ebc4:	mov	r7, r0
    ebc8:	ldrh	r0, [fp, #-218]	; 0xffffff26
    ebcc:	bl	3eec <byteswap2@plt>
    ebd0:	str	r0, [fp, #-236]	; 0xffffff14
    ebd4:	ldrh	r0, [fp, #-216]	; 0xffffff28
    ebd8:	bl	3eec <byteswap2@plt>
    ebdc:	mov	r6, r0
    ebe0:	ldr	r2, [r4, #64]	; 0x40
    ebe4:	clz	r3, r5
    ebe8:	lsr	r3, r3, #5
    ebec:	cmp	r2, r5
    ebf0:	orrlt	r3, r3, #1
    ebf4:	cmp	r3, #0
    ebf8:	bne	ed98 <readstat_parse_xport+0xa64>
    ebfc:	add	r3, r8, #8
    ec00:	bic	r3, r3, #7
    ec04:	sub	sp, sp, r3
    ec08:	add	r3, sp, #16
    ec0c:	str	r3, [fp, #-248]	; 0xffffff08
    ec10:	add	r3, r7, #8
    ec14:	bic	r3, r3, #7
    ec18:	sub	sp, sp, r3
    ec1c:	add	r3, sp, #16
    ec20:	str	r3, [fp, #-252]	; 0xffffff04
    ec24:	ldr	r3, [fp, #-236]	; 0xffffff14
    ec28:	sub	r5, r5, #-1073741823	; 0xc0000001
    ec2c:	add	r3, r3, #8
    ec30:	bic	r3, r3, #7
    ec34:	sub	sp, sp, r3
    ec38:	add	r3, sp, #16
    ec3c:	str	r3, [fp, #-264]	; 0xfffffef8
    ec40:	add	r3, r6, #8
    ec44:	bic	r3, r3, #7
    ec48:	sub	sp, sp, r3
    ec4c:	add	r3, sp, #16
    ec50:	str	r3, [fp, #-256]	; 0xffffff00
    ec54:	ldr	r3, [r4, #376]	; 0x178
    ec58:	mov	r2, r8
    ec5c:	ldr	r1, [fp, #-248]	; 0xffffff08
    ec60:	ldr	r0, [r4, #52]	; 0x34
    ec64:	ldr	r5, [r3, r5, lsl #2]
    ec68:	bl	e200 <read_bytes.isra.0>
    ec6c:	cmp	r8, r0
    ec70:	bne	ed8c <readstat_parse_xport+0xa58>
    ec74:	mov	r2, r7
    ec78:	ldr	r1, [fp, #-252]	; 0xffffff04
    ec7c:	ldr	r0, [r4, #52]	; 0x34
    ec80:	bl	e200 <read_bytes.isra.0>
    ec84:	cmp	r7, r0
    ec88:	bne	ed8c <readstat_parse_xport+0xa58>
    ec8c:	ldr	r2, [fp, #-236]	; 0xffffff14
    ec90:	ldr	r1, [fp, #-264]	; 0xfffffef8
    ec94:	ldr	r0, [r4, #52]	; 0x34
    ec98:	bl	e200 <read_bytes.isra.0>
    ec9c:	ldr	r3, [fp, #-236]	; 0xffffff14
    eca0:	cmp	r3, r0
    eca4:	bne	ed8c <readstat_parse_xport+0xa58>
    eca8:	mov	r2, r6
    ecac:	ldr	r1, [fp, #-256]	; 0xffffff00
    ecb0:	ldr	r0, [r4, #52]	; 0x34
    ecb4:	bl	e200 <read_bytes.isra.0>
    ecb8:	cmp	r6, r0
    ecbc:	bne	ed8c <readstat_parse_xport+0xa58>
    ecc0:	ldr	r3, [r4, #48]	; 0x30
    ecc4:	mov	r1, #300	; 0x12c
    ecc8:	str	r3, [sp]
    eccc:	ldr	r2, [fp, #-248]	; 0xffffff08
    ecd0:	mov	r3, r8
    ecd4:	add	r0, r5, #8
    ecd8:	bl	427c <readstat_convert@plt>
    ecdc:	cmp	r0, #0
    ece0:	bne	ed90 <readstat_parse_xport+0xa5c>
    ece4:	ldr	r3, [r4, #48]	; 0x30
    ece8:	mov	r1, #1024	; 0x400
    ecec:	str	r3, [sp]
    ecf0:	ldr	r2, [fp, #-256]	; 0xffffff00
    ecf4:	mov	r3, r6
    ecf8:	add	r0, r5, #564	; 0x234
    ecfc:	bl	427c <readstat_convert@plt>
    ed00:	cmp	r0, #0
    ed04:	bne	ed90 <readstat_parse_xport+0xa5c>
    ed08:	ldr	r3, [r5, #2140]	; 0x85c
    ed0c:	mov	r2, r7
    ed10:	str	r3, [sp]
    ed14:	ldr	r1, [fp, #-252]	; 0xffffff04
    ed18:	ldr	r3, [r5, #2136]	; 0x858
    ed1c:	add	r0, r5, #308	; 0x134
    ed20:	bl	4ed8 <xport_construct_format.constprop.4>
    ed24:	cmp	r0, #0
    ed28:	bne	ed90 <readstat_parse_xport+0xa5c>
    ed2c:	ldr	r3, [fp, #-240]	; 0xffffff10
    ed30:	ldr	sp, [fp, #-244]	; 0xffffff0c
    ed34:	add	r3, r3, #1
    ed38:	str	r3, [fp, #-240]	; 0xffffff10
    ed3c:	ldr	r3, [fp, #-260]	; 0xfffffefc
    ed40:	ldr	r2, [fp, #-240]	; 0xffffff10
    ed44:	cmp	r3, r2
    ed48:	bgt	eb7c <readstat_parse_xport+0x848>
    ed4c:	ldr	r0, [r4, #52]	; 0x34
    ed50:	bl	4c50 <xport_skip_rest_of_record.isra.2>
    ed54:	cmp	r0, #0
    ed58:	bne	e8e0 <readstat_parse_xport+0x5ac>
    ed5c:	ldr	r2, [pc, #512]	; ef64 <readstat_parse_xport+0xc30>
    ed60:	ldr	r1, [pc, #512]	; ef68 <readstat_parse_xport+0xc34>
    ed64:	add	r2, pc, r2
    ed68:	add	r1, pc, r1
    ed6c:	b	eb58 <readstat_parse_xport+0x824>
    ed70:	ldrh	r3, [fp, #-218]	; 0xffffff26
    ed74:	mov	r5, r0
    ed78:	ldrh	r8, [fp, #-222]	; 0xffffff22
    ed7c:	ldrh	r7, [fp, #-220]	; 0xffffff24
    ed80:	str	r3, [fp, #-236]	; 0xffffff14
    ed84:	ldrh	r6, [fp, #-216]	; 0xffffff28
    ed88:	b	ebe0 <readstat_parse_xport+0x8ac>
    ed8c:	mov	r0, #2
    ed90:	ldr	sp, [fp, #-244]	; 0xffffff0c
    ed94:	b	eb6c <readstat_parse_xport+0x838>
    ed98:	mov	r0, #5
    ed9c:	b	ed90 <readstat_parse_xport+0xa5c>
    eda0:	ldr	r3, [r4, #376]	; 0x178
    eda4:	ldr	r8, [r4, #8]
    eda8:	ldr	r7, [r3, r6, lsl #2]
    edac:	cmp	r8, #0
    edb0:	str	r5, [r7, #2148]	; 0x864
    edb4:	beq	ede0 <readstat_parse_xport+0xaac>
    edb8:	ldr	r3, [r4, #36]	; 0x24
    edbc:	add	r2, r7, #308	; 0x134
    edc0:	mov	r1, r7
    edc4:	mov	r0, r6
    edc8:	blx	r8
    edcc:	cmp	r0, #1
    edd0:	beq	e714 <readstat_parse_xport+0x3e0>
    edd4:	cmp	r0, #2
    edd8:	streq	r9, [r7, #2144]	; 0x860
    eddc:	beq	ede4 <readstat_parse_xport+0xab0>
    ede0:	add	r5, r5, #1
    ede4:	ldr	r3, [r4, #76]	; 0x4c
    ede8:	ldr	r2, [r7, #1596]	; 0x63c
    edec:	add	r6, r6, #1
    edf0:	add	r3, r3, r2
    edf4:	str	r3, [r4, #76]	; 0x4c
    edf8:	b	e970 <readstat_parse_xport+0x63c>
    edfc:	ldrb	r1, [r2], #1
    ee00:	cmp	r1, #32
    ee04:	beq	e9f4 <readstat_parse_xport+0x6c0>
    ee08:	cmp	r7, #0
    ee0c:	bne	ee84 <readstat_parse_xport+0xb50>
    ee10:	mov	r1, r6
    ee14:	mov	r0, r4
    ee18:	bl	4cb0 <xport_process_row.isra.3>
    ee1c:	subs	r5, r0, #0
    ee20:	bne	ee64 <readstat_parse_xport+0xb30>
    ee24:	ldr	r3, [r4, #52]	; 0x34
    ee28:	ldr	r2, [r4, #36]	; 0x24
    ee2c:	ldr	r1, [r4, #28]
    ee30:	ldr	r5, [r3, #16]
    ee34:	ldr	r0, [r4, #32]
    ee38:	ldr	r3, [r3, #20]
    ee3c:	blx	r5
    ee40:	subs	r5, r0, #0
    ee44:	bne	ee64 <readstat_parse_xport+0xb30>
    ee48:	ldr	r3, [r4, #68]	; 0x44
    ee4c:	cmp	r3, #0
    ee50:	ble	e9c8 <readstat_parse_xport+0x694>
    ee54:	ldr	r2, [r4, #80]	; 0x50
    ee58:	cmp	r3, r2
    ee5c:	bne	e9c8 <readstat_parse_xport+0x694>
    ee60:	mov	r5, sl
    ee64:	mov	r0, r6
    ee68:	bl	3f04 <free@plt>
    ee6c:	mov	sl, r5
    ee70:	cmp	r8, #0
    ee74:	beq	e750 <readstat_parse_xport+0x41c>
    ee78:	mov	r0, r8
    ee7c:	bl	3f04 <free@plt>
    ee80:	b	e750 <readstat_parse_xport+0x41c>
    ee84:	mov	r1, r8
    ee88:	mov	r0, r4
    ee8c:	bl	4cb0 <xport_process_row.isra.3>
    ee90:	subs	r5, r0, #0
    ee94:	bne	ee64 <readstat_parse_xport+0xb30>
    ee98:	ldr	r3, [r4, #68]	; 0x44
    ee9c:	cmp	r3, #0
    eea0:	ble	eeb0 <readstat_parse_xport+0xb7c>
    eea4:	ldr	r2, [r4, #80]	; 0x50
    eea8:	cmp	r3, r2
    eeac:	beq	ee60 <readstat_parse_xport+0xb2c>
    eeb0:	sub	r7, r7, #1
    eeb4:	b	ee08 <readstat_parse_xport+0xad4>
    eeb8:	cmp	r6, #0
    eebc:	movne	r5, #3
    eec0:	bne	ee64 <readstat_parse_xport+0xb30>
    eec4:	mov	sl, #3
    eec8:	b	ee70 <readstat_parse_xport+0xb3c>
    eecc:	mov	r5, #2
    eed0:	b	ee64 <readstat_parse_xport+0xb30>
    eed4:	ldr	r3, [r4, #376]	; 0x178
    eed8:	ldr	r0, [r3, r5, lsl #2]
    eedc:	cmp	r0, #0
    eee0:	beq	eee8 <readstat_parse_xport+0xbb4>
    eee4:	bl	3f04 <free@plt>
    eee8:	add	r5, r5, #1
    eeec:	ldr	r3, [r4, #64]	; 0x40
    eef0:	cmp	r5, r3
    eef4:	blt	eed4 <readstat_parse_xport+0xba0>
    eef8:	ldr	r0, [r4, #376]	; 0x178
    eefc:	bl	3f04 <free@plt>
    ef00:	b	e774 <readstat_parse_xport+0x440>
    ef04:	add	r3, r5, #88	; 0x58
    ef08:	mov	r7, #0
    ef0c:	str	r3, [fp, #-236]	; 0xffffff14
    ef10:	add	r8, r5, #8
    ef14:	b	e898 <readstat_parse_xport+0x564>
    ef18:	.word	0x00032c90
    ef1c:	.word	0x0001381a
    ef20:	.word	0x00013806
    ef24:	.word	0x00013774
    ef28:	.word	0x000002dc
    ef2c:	.word	0x00013743
    ef30:	.word	0x00013746
    ef34:	.word	0x0001372d
    ef38:	.word	0x00013731
    ef3c:	.word	0x00013679
    ef40:	.word	0x000135c1
    ef44:	.word	0x00000868
    ef48:	.word	0x0001343d
    ef4c:	.word	0x0001343f
    ef50:	.word	0x000133f9
    ef54:	.word	0x000133eb
    ef58:	.word	0x000133d3
    ef5c:	.word	0x000131b5
    ef60:	.word	0x000131b7
    ef64:	.word	0x00012fa1
    ef68:	.word	0x00012fa3

0000ef6c <xport_write_missing_numeric>:
    ef6c:	mov	r3, #46	; 0x2e
    ef70:	strb	r3, [r0]
    ef74:	mov	r0, #0
    ef78:	bx	lr

0000ef7c <xport_finish_record>:
    ef7c:	ldr	r3, [pc, #12]	; ef90 <xport_finish_record+0x14>
    ef80:	mov	r2, #80	; 0x50
    ef84:	add	r3, pc, r3
    ef88:	mov	r1, #32
    ef8c:	b	4534 <readstat_write_line_padding@plt>
    ef90:	.word	0x00013138

0000ef94 <xport_end_data>:
    ef94:	b	ef7c <xport_finish_record>

0000ef98 <xport_write_missing_string>:
    ef98:	ldr	r2, [r1, #1596]	; 0x63c
    ef9c:	push	{r4, lr}
    efa0:	mov	r1, #32
    efa4:	bl	42e8 <memset@plt>
    efa8:	mov	r0, #0
    efac:	pop	{r4, pc}

0000efb0 <xport_write_missing_tagged>:
    efb0:	push	{r4, r5, r6, lr}
    efb4:	mov	r5, r0
    efb8:	mov	r0, r2
    efbc:	mov	r4, r2
    efc0:	bl	4198 <sas_validate_tag@plt>
    efc4:	cmp	r0, #0
    efc8:	strbeq	r4, [r5]
    efcc:	pop	{r4, r5, r6, pc}

0000efd0 <xport_write_double>:
    efd0:	push	{r4, r5, r6, r7, lr}
    efd4:	sub	sp, sp, #20
    efd8:	add	r5, sp, #8
    efdc:	mov	r6, r0
    efe0:	mov	r7, r1
    efe4:	mov	r3, #1
    efe8:	mov	r2, r5
    efec:	mov	r1, #0
    eff0:	mov	r0, sp
    eff4:	vstr	d0, [sp]
    eff8:	bl	4048 <cnxptiee@plt>
    effc:	subs	r4, r0, #0
    f000:	movne	r0, #16
    f004:	bne	f01c <xport_write_double+0x4c>
    f008:	ldr	r2, [r7, #1596]	; 0x63c
    f00c:	mov	r1, r5
    f010:	mov	r0, r6
    f014:	bl	3f64 <memcpy@plt>
    f018:	mov	r0, r4
    f01c:	add	sp, sp, #20
    f020:	pop	{r4, r5, r6, r7, pc}

0000f024 <xport_write_float>:
    f024:	vcvt.f64.f32	d0, s0
    f028:	b	efd0 <xport_write_double>

0000f02c <xport_write_int32>:
    f02c:	vmov	s15, r2
    f030:	vcvt.f64.s32	d0, s15
    f034:	b	efd0 <xport_write_double>

0000f038 <xport_write_int16>:
    f038:	vmov	s15, r2
    f03c:	vcvt.f64.s32	d0, s15
    f040:	b	efd0 <xport_write_double>

0000f044 <xport_write_int8>:
    f044:	vmov	s15, r2
    f048:	vcvt.f64.s32	d0, s15
    f04c:	b	efd0 <xport_write_double>

0000f050 <xport_variable_width>:
    f050:	cmp	r0, #0
    f054:	beq	f070 <xport_variable_width+0x20>
    f058:	sub	r3, r1, #1
    f05c:	cmp	r3, #6
    f060:	movhi	r1, #8
    f064:	bhi	f070 <xport_variable_width+0x20>
    f068:	cmp	r1, #3
    f06c:	movcc	r1, #3
    f070:	mov	r0, r1
    f074:	bx	lr

0000f078 <xport_write_string>:
    f078:	push	{r4, r5, r6, lr}
    f07c:	mov	r4, r2
    f080:	mov	r5, r1
    f084:	ldr	r2, [r1, #1596]	; 0x63c
    f088:	mov	r1, #32
    f08c:	mov	r6, r0
    f090:	bl	42e8 <memset@plt>
    f094:	cmp	r4, #0
    f098:	beq	f0cc <xport_write_string+0x54>
    f09c:	ldrb	r0, [r4]
    f0a0:	cmp	r0, #0
    f0a4:	popeq	{r4, r5, r6, pc}
    f0a8:	mov	r0, r4
    f0ac:	bl	424c <strlen@plt>
    f0b0:	ldr	r3, [r5, #1596]	; 0x63c
    f0b4:	cmp	r0, r3
    f0b8:	mov	r2, r0
    f0bc:	bhi	f0d4 <xport_write_string+0x5c>
    f0c0:	mov	r1, r4
    f0c4:	mov	r0, r6
    f0c8:	bl	3f64 <memcpy@plt>
    f0cc:	mov	r0, #0
    f0d0:	pop	{r4, r5, r6, pc}
    f0d4:	mov	r0, #22
    f0d8:	pop	{r4, r5, r6, pc}

0000f0dc <xport_metadata_ok>:
    f0dc:	ldr	r3, [r0, #8]
    f0e0:	cmp	r3, #5
    f0e4:	cmpne	r3, #8
    f0e8:	movne	r2, #1
    f0ec:	moveq	r2, #0
    f0f0:	bne	f120 <xport_metadata_ok+0x44>
    f0f4:	ldrb	r1, [r0, #188]	; 0xbc
    f0f8:	cmp	r1, #0
    f0fc:	beq	f128 <xport_metadata_ok+0x4c>
    f100:	cmp	r3, #8
    f104:	moveq	r1, #32
    f108:	beq	f118 <xport_metadata_ok+0x3c>
    f10c:	cmp	r3, #5
    f110:	bne	f130 <xport_metadata_ok+0x54>
    f114:	mov	r1, #8
    f118:	add	r0, r0, #188	; 0xbc
    f11c:	b	3d90 <sas_validate_name@plt>
    f120:	mov	r0, #24
    f124:	bx	lr
    f128:	mov	r0, r1
    f12c:	bx	lr
    f130:	mov	r0, r2
    f134:	bx	lr

0000f138 <xport_write_row>:
    f138:	ldr	r3, [pc, #24]	; f158 <xport_write_row+0x20>
    f13c:	push	{r0, r1, r2, lr}
    f140:	add	r3, pc, r3
    f144:	str	r3, [sp]
    f148:	mov	r3, #80	; 0x50
    f14c:	bl	4570 <readstat_write_bytes_as_lines@plt>
    f150:	add	sp, sp, #12
    f154:	pop	{pc}		; (ldr pc, [sp], #4)
    f158:	.word	0x00012f7c

0000f15c <xport_write_record>:
    f15c:	push	{r0, r1, r2, r4, r5, lr}
    f160:	mov	r4, r0
    f164:	mov	r0, r1
    f168:	mov	r5, r1
    f16c:	bl	424c <strlen@plt>
    f170:	ldr	r3, [pc, #56]	; f1b0 <xport_write_record+0x54>
    f174:	mov	r1, r5
    f178:	add	r3, pc, r3
    f17c:	str	r3, [sp]
    f180:	mov	r3, #80	; 0x50
    f184:	mov	r2, r0
    f188:	mov	r0, r4
    f18c:	bl	4570 <readstat_write_bytes_as_lines@plt>
    f190:	cmp	r0, #0
    f194:	bne	f1a8 <xport_write_record+0x4c>
    f198:	mov	r0, r4
    f19c:	add	sp, sp, #12
    f1a0:	pop	{r4, r5, lr}
    f1a4:	b	ef7c <xport_finish_record>
    f1a8:	add	sp, sp, #12
    f1ac:	pop	{r4, r5, pc}
    f1b0:	.word	0x00012f44

0000f1b4 <xport_write_header_record>:
    f1b4:	push	{r4, r5, lr}
    f1b8:	sub	sp, sp, #116	; 0x74
    f1bc:	ldr	r2, [r1, #32]
    f1c0:	add	r4, sp, #28
    f1c4:	str	r2, [sp, #20]
    f1c8:	ldr	r2, [r1, #28]
    f1cc:	mov	r3, r1
    f1d0:	str	r2, [sp, #16]
    f1d4:	ldr	r2, [r1, #24]
    f1d8:	mov	r5, r0
    f1dc:	str	r2, [sp, #12]
    f1e0:	ldr	r2, [r1, #20]
    f1e4:	mov	r0, r4
    f1e8:	str	r2, [sp, #8]
    f1ec:	ldr	r2, [r1, #16]
    f1f0:	str	r2, [sp, #4]
    f1f4:	ldr	r2, [r1, #12]
    f1f8:	mov	r1, #81	; 0x51
    f1fc:	str	r2, [sp]
    f200:	ldr	r2, [pc, #24]	; f220 <xport_write_header_record+0x6c>
    f204:	add	r2, pc, r2
    f208:	bl	42c4 <snprintf@plt>
    f20c:	mov	r1, r4
    f210:	mov	r0, r5
    f214:	bl	f15c <xport_write_record>
    f218:	add	sp, sp, #116	; 0x74
    f21c:	pop	{r4, r5, pc}
    f220:	.word	0x00012b51

0000f224 <xport_begin_data>:
    f224:	push	{r4, r5, r6, r7, r8, lr}
    f228:	sub	sp, sp, #136	; 0x88
    f22c:	ldr	r3, [r0, #20]
    f230:	mov	r5, r0
    f234:	add	r0, sp, #136	; 0x88
    f238:	ldr	r6, [pc, #1084]	; f67c <xport_begin_data+0x458>
    f23c:	str	r3, [r0, #-108]!	; 0xffffff94
    f240:	bl	41b0 <localtime@plt>
    f244:	add	r6, pc, r6
    f248:	subs	r4, r0, #0
    f24c:	moveq	r6, #39	; 0x27
    f250:	beq	f608 <xport_begin_data+0x3e4>
    f254:	ldr	r0, [r4, #12]
    f258:	mov	r1, #100	; 0x64
    f25c:	bl	20808 <__aeabi_uidivmod>
    f260:	ldr	r0, [r4]
    f264:	add	r7, sp, #32
    f268:	mov	r8, r1
    f26c:	mov	r1, #100	; 0x64
    f270:	bl	20808 <__aeabi_uidivmod>
    f274:	str	r1, [sp, #16]
    f278:	mov	r1, #100	; 0x64
    f27c:	ldr	r0, [r4, #4]
    f280:	bl	20808 <__aeabi_uidivmod>
    f284:	str	r1, [sp, #12]
    f288:	mov	r1, #100	; 0x64
    f28c:	ldr	r0, [r4, #8]
    f290:	bl	20808 <__aeabi_uidivmod>
    f294:	str	r1, [sp, #8]
    f298:	mov	r1, #100	; 0x64
    f29c:	ldr	r0, [r4, #20]
    f2a0:	bl	20808 <__aeabi_uidivmod>
    f2a4:	ldr	r2, [pc, #980]	; f680 <xport_begin_data+0x45c>
    f2a8:	mov	r0, r7
    f2ac:	str	r1, [sp, #4]
    f2b0:	ldr	r3, [r4, #16]
    f2b4:	ldr	r2, [r6, r2]
    f2b8:	mov	r1, #17
    f2bc:	add	r2, r2, r3, lsl #2
    f2c0:	str	r2, [sp]
    f2c4:	ldr	r2, [pc, #952]	; f684 <xport_begin_data+0x460>
    f2c8:	mov	r3, r8
    f2cc:	add	r2, pc, r2
    f2d0:	add	r4, sp, #52	; 0x34
    f2d4:	bl	42c4 <snprintf@plt>
    f2d8:	mov	r2, #36	; 0x24
    f2dc:	mov	r1, #0
    f2e0:	mov	r0, r4
    f2e4:	bl	42e8 <memset@plt>
    f2e8:	ldr	r2, [pc, #920]	; f688 <xport_begin_data+0x464>
    f2ec:	mov	r3, r4
    f2f0:	add	r2, pc, r2
    f2f4:	ldr	r0, [r2, #18]!
    f2f8:	ldr	r1, [r2, #4]
    f2fc:	stmia	r3!, {r0, r1}
    f300:	mov	r3, #0
    f304:	strb	r3, [sp, #60]	; 0x3c
    f308:	ldr	r3, [r5, #8]
    f30c:	cmp	r3, #8
    f310:	bne	f324 <xport_begin_data+0x100>
    f314:	ldr	r1, [pc, #880]	; f68c <xport_begin_data+0x468>
    f318:	mov	r0, r4
    f31c:	add	r1, pc, r1
    f320:	bl	40e4 <strcpy@plt>
    f324:	mov	r1, r4
    f328:	mov	r0, r5
    f32c:	bl	f1b4 <xport_write_header_record>
    f330:	subs	r6, r0, #0
    f334:	bne	f608 <xport_begin_data+0x3e4>
    f338:	ldr	r2, [pc, #848]	; f690 <xport_begin_data+0x46c>
    f33c:	ldr	r3, [pc, #848]	; f694 <xport_begin_data+0x470>
    f340:	add	r2, pc, r2
    f344:	str	r2, [sp, #16]
    f348:	ldr	r2, [pc, #840]	; f698 <xport_begin_data+0x474>
    f34c:	add	r3, pc, r3
    f350:	add	r2, pc, r2
    f354:	str	r2, [sp, #12]
    f358:	ldr	r2, [pc, #828]	; f69c <xport_begin_data+0x478>
    f35c:	str	r3, [sp]
    f360:	add	r2, pc, r2
    f364:	str	r2, [sp, #8]
    f368:	ldr	r2, [pc, #816]	; f6a0 <xport_begin_data+0x47c>
    f36c:	mov	r1, #81	; 0x51
    f370:	add	r2, pc, r2
    f374:	str	r2, [sp, #4]
    f378:	ldr	r2, [pc, #804]	; f6a4 <xport_begin_data+0x480>
    f37c:	str	r7, [sp, #20]
    f380:	add	r2, pc, r2
    f384:	mov	r0, r4
    f388:	bl	42c4 <snprintf@plt>
    f38c:	mov	r1, r4
    f390:	mov	r0, r5
    f394:	bl	f15c <xport_write_record>
    f398:	subs	r6, r0, #0
    f39c:	bne	f608 <xport_begin_data+0x3e4>
    f3a0:	mov	r1, r7
    f3a4:	mov	r0, r5
    f3a8:	bl	f15c <xport_write_record>
    f3ac:	subs	r6, r0, #0
    f3b0:	bne	f608 <xport_begin_data+0x3e4>
    f3b4:	mov	r2, #36	; 0x24
    f3b8:	mov	r1, r6
    f3bc:	mov	r0, r4
    f3c0:	bl	42e8 <memset@plt>
    f3c4:	ldr	r3, [pc, #732]	; f6a8 <xport_begin_data+0x484>
    f3c8:	strh	r6, [sp, #59]	; 0x3b
    f3cc:	add	r3, pc, r3
    f3d0:	ldr	r0, [r3, #27]!
    f3d4:	str	r0, [r4]
    f3d8:	ldrh	r2, [r3, #4]
    f3dc:	ldrb	r3, [r3, #6]
    f3e0:	strh	r2, [r4, #4]
    f3e4:	strb	r3, [r4, #6]
    f3e8:	mov	r3, #160	; 0xa0
    f3ec:	str	r3, [sp, #76]	; 0x4c
    f3f0:	mov	r3, #140	; 0x8c
    f3f4:	str	r3, [sp, #84]	; 0x54
    f3f8:	ldr	r3, [r5, #8]
    f3fc:	cmp	r3, #8
    f400:	bne	f414 <xport_begin_data+0x1f0>
    f404:	ldr	r1, [pc, #672]	; f6ac <xport_begin_data+0x488>
    f408:	mov	r0, r4
    f40c:	add	r1, pc, r1
    f410:	bl	40e4 <strcpy@plt>
    f414:	mov	r1, r4
    f418:	mov	r0, r5
    f41c:	bl	f1b4 <xport_write_header_record>
    f420:	subs	r6, r0, #0
    f424:	bne	f608 <xport_begin_data+0x3e4>
    f428:	mov	r2, #36	; 0x24
    f42c:	mov	r1, r6
    f430:	mov	r0, r4
    f434:	bl	42e8 <memset@plt>
    f438:	ldr	r2, [pc, #624]	; f6b0 <xport_begin_data+0x48c>
    f43c:	mov	r3, r4
    f440:	add	r2, pc, r2
    f444:	strb	r6, [sp, #60]	; 0x3c
    f448:	ldr	r0, [r2, #36]!	; 0x24
    f44c:	ldr	r1, [r2, #4]
    f450:	stmia	r3!, {r0, r1}
    f454:	ldr	r3, [r5, #8]
    f458:	cmp	r3, #8
    f45c:	bne	f470 <xport_begin_data+0x24c>
    f460:	ldr	r1, [pc, #588]	; f6b4 <xport_begin_data+0x490>
    f464:	mov	r0, r4
    f468:	add	r1, pc, r1
    f46c:	bl	40e4 <strcpy@plt>
    f470:	mov	r1, r4
    f474:	mov	r0, r5
    f478:	bl	f1b4 <xport_write_header_record>
    f47c:	subs	r6, r0, #0
    f480:	bne	f608 <xport_begin_data+0x3e4>
    f484:	ldr	r3, [r5, #8]
    f488:	cmp	r3, #8
    f48c:	ldrb	r3, [r5, #188]	; 0xbc
    f490:	bne	f614 <xport_begin_data+0x3f0>
    f494:	cmp	r3, #0
    f498:	addne	r3, r5, #188	; 0xbc
    f49c:	ldreq	r3, [pc, #532]	; f6b8 <xport_begin_data+0x494>
    f4a0:	addeq	r3, pc, r3
    f4a4:	ldr	r2, [pc, #528]	; f6bc <xport_begin_data+0x498>
    f4a8:	str	r3, [sp]
    f4ac:	add	r2, pc, r2
    f4b0:	str	r2, [sp, #12]
    f4b4:	ldr	r2, [pc, #516]	; f6c0 <xport_begin_data+0x49c>
    f4b8:	ldr	r3, [pc, #516]	; f6c4 <xport_begin_data+0x4a0>
    f4bc:	add	r2, pc, r2
    f4c0:	str	r2, [sp, #8]
    f4c4:	ldr	r2, [pc, #508]	; f6c8 <xport_begin_data+0x4a4>
    f4c8:	str	r7, [sp, #16]
    f4cc:	add	r2, pc, r2
    f4d0:	str	r2, [sp, #4]
    f4d4:	ldr	r2, [pc, #496]	; f6cc <xport_begin_data+0x4a8>
    f4d8:	add	r3, pc, r3
    f4dc:	add	r2, pc, r2
    f4e0:	mov	r1, #81	; 0x51
    f4e4:	mov	r0, r4
    f4e8:	bl	42c4 <snprintf@plt>
    f4ec:	mov	r1, r4
    f4f0:	mov	r0, r5
    f4f4:	bl	f15c <xport_write_record>
    f4f8:	cmp	r0, #0
    f4fc:	mov	r6, r0
    f500:	bne	f608 <xport_begin_data+0x3e4>
    f504:	add	r2, r5, #88	; 0x58
    f508:	ldr	r3, [pc, #448]	; f6d0 <xport_begin_data+0x4ac>
    f50c:	str	r2, [sp, #4]
    f510:	ldr	r2, [pc, #444]	; f6d4 <xport_begin_data+0x4b0>
    f514:	add	r3, pc, r3
    f518:	str	r3, [sp, #8]
    f51c:	str	r3, [sp]
    f520:	add	r2, pc, r2
    f524:	mov	r3, r7
    f528:	mov	r1, #81	; 0x51
    f52c:	mov	r0, r4
    f530:	bl	42c4 <snprintf@plt>
    f534:	mov	r1, r4
    f538:	mov	r0, r5
    f53c:	bl	f15c <xport_write_record>
    f540:	subs	r6, r0, #0
    f544:	bne	f608 <xport_begin_data+0x3e4>
    f548:	mov	r2, #36	; 0x24
    f54c:	mov	r1, r6
    f550:	mov	r0, r4
    f554:	bl	42e8 <memset@plt>
    f558:	ldr	r2, [pc, #376]	; f6d8 <xport_begin_data+0x4b4>
    f55c:	mov	r3, r4
    f560:	add	r2, pc, r2
    f564:	strb	r6, [sp, #60]	; 0x3c
    f568:	ldr	r0, [r2, #45]!	; 0x2d
    f56c:	ldr	r1, [r2, #4]
    f570:	stmia	r3!, {r0, r1}
    f574:	ldr	r3, [r5, #28]
    f578:	str	r3, [sp, #68]	; 0x44
    f57c:	ldr	r3, [r5, #8]
    f580:	cmp	r3, #8
    f584:	bne	f598 <xport_begin_data+0x374>
    f588:	ldr	r1, [pc, #332]	; f6dc <xport_begin_data+0x4b8>
    f58c:	mov	r0, r4
    f590:	add	r1, pc, r1
    f594:	bl	40e4 <strcpy@plt>
    f598:	mov	r1, r4
    f59c:	mov	r0, r5
    f5a0:	bl	f1b4 <xport_write_header_record>
    f5a4:	subs	r6, r0, #0
    f5a8:	bne	f608 <xport_begin_data+0x3e4>
    f5ac:	mov	r0, r5
    f5b0:	bl	4ff0 <xport_write_variables>
    f5b4:	subs	r6, r0, #0
    f5b8:	bne	f608 <xport_begin_data+0x3e4>
    f5bc:	mov	r2, #36	; 0x24
    f5c0:	mov	r1, r6
    f5c4:	mov	r0, r4
    f5c8:	bl	42e8 <memset@plt>
    f5cc:	ldr	r3, [pc, #268]	; f6e0 <xport_begin_data+0x4bc>
    f5d0:	str	r6, [sp, #56]	; 0x38
    f5d4:	str	r3, [sp, #52]	; 0x34
    f5d8:	ldr	r3, [r5, #8]
    f5dc:	strb	r6, [sp, #60]	; 0x3c
    f5e0:	cmp	r3, #8
    f5e4:	bne	f5f8 <xport_begin_data+0x3d4>
    f5e8:	ldr	r1, [pc, #244]	; f6e4 <xport_begin_data+0x4c0>
    f5ec:	mov	r0, r4
    f5f0:	add	r1, pc, r1
    f5f4:	bl	40e4 <strcpy@plt>
    f5f8:	mov	r1, r4
    f5fc:	mov	r0, r5
    f600:	bl	f1b4 <xport_write_header_record>
    f604:	mov	r6, r0
    f608:	mov	r0, r6
    f60c:	add	sp, sp, #136	; 0x88
    f610:	pop	{r4, r5, r6, r7, r8, pc}
    f614:	cmp	r3, #0
    f618:	addne	r3, r5, #188	; 0xbc
    f61c:	ldreq	r3, [pc, #196]	; f6e8 <xport_begin_data+0x4c4>
    f620:	addeq	r3, pc, r3
    f624:	ldr	r2, [pc, #192]	; f6ec <xport_begin_data+0x4c8>
    f628:	str	r3, [sp]
    f62c:	add	r2, pc, r2
    f630:	str	r2, [sp, #16]
    f634:	ldr	r2, [pc, #180]	; f6f0 <xport_begin_data+0x4cc>
    f638:	ldr	r3, [pc, #180]	; f6f4 <xport_begin_data+0x4d0>
    f63c:	add	r2, pc, r2
    f640:	str	r2, [sp, #12]
    f644:	ldr	r2, [pc, #172]	; f6f8 <xport_begin_data+0x4d4>
    f648:	str	r7, [sp, #20]
    f64c:	add	r2, pc, r2
    f650:	str	r2, [sp, #8]
    f654:	ldr	r2, [pc, #160]	; f6fc <xport_begin_data+0x4d8>
    f658:	add	r3, pc, r3
    f65c:	add	r2, pc, r2
    f660:	str	r2, [sp, #4]
    f664:	ldr	r2, [pc, #148]	; f700 <xport_begin_data+0x4dc>
    f668:	mov	r1, #81	; 0x51
    f66c:	add	r2, pc, r2
    f670:	mov	r0, r4
    f674:	bl	42c4 <snprintf@plt>
    f678:	b	f4ec <xport_begin_data+0x2c8>
    f67c:	.word	0x00031db4
    f680:	.word	0x000002dc
    f684:	.word	0x00012b00
    f688:	.word	0x00012a2f
    f68c:	.word	0x0001299a
    f690:	.word	0x00012d7c
    f694:	.word	0x00012a9d
    f698:	.word	0x00012acb
    f69c:	.word	0x00012ac2
    f6a0:	.word	0x00012ab7
    f6a4:	.word	0x00012a6d
    f6a8:	.word	0x00012953
    f6ac:	.word	0x000128cb
    f6b0:	.word	0x000128df
    f6b4:	.word	0x0001287d
    f6b8:	.word	0x0001250d
    f6bc:	.word	0x0001296f
    f6c0:	.word	0x00012966
    f6c4:	.word	0x00012911
    f6c8:	.word	0x0001298a
    f6cc:	.word	0x00012952
    f6d0:	.word	0x00012ba8
    f6d4:	.word	0x0001293e
    f6d8:	.word	0x000127bf
    f6dc:	.word	0x0001276d
    f6e0:	.word	0x0053424f
    f6e4:	.word	0x00012715
    f6e8:	.word	0x0001238d
    f6ec:	.word	0x00012a90
    f6f0:	.word	0x000127df
    f6f4:	.word	0x00012791
    f6f8:	.word	0x000127d6
    f6fc:	.word	0x000127fa
    f700:	.word	0x00012781

0000f704 <readstat_begin_writing_xport>:
    f704:	ldr	ip, [r0, #8]
    f708:	ldr	r3, [pc, #196]	; f7d4 <readstat_begin_writing_xport+0xd0>
    f70c:	cmp	ip, #0
    f710:	moveq	ip, #8
    f714:	streq	ip, [r0, #8]
    f718:	ldr	ip, [pc, #184]	; f7d8 <readstat_begin_writing_xport+0xd4>
    f71c:	add	r3, pc, r3
    f720:	add	ip, pc, ip
    f724:	str	ip, [r0, #292]	; 0x124
    f728:	ldr	ip, [pc, #172]	; f7dc <readstat_begin_writing_xport+0xd8>
    f72c:	add	ip, pc, ip
    f730:	str	ip, [r0, #236]	; 0xec
    f734:	ldr	ip, [pc, #164]	; f7e0 <readstat_begin_writing_xport+0xdc>
    f738:	add	ip, pc, ip
    f73c:	str	ip, [r0, #240]	; 0xf0
    f740:	ldr	ip, [pc, #156]	; f7e4 <readstat_begin_writing_xport+0xe0>
    f744:	add	ip, pc, ip
    f748:	str	ip, [r0, #244]	; 0xf4
    f74c:	ldr	ip, [pc, #148]	; f7e8 <readstat_begin_writing_xport+0xe4>
    f750:	add	ip, pc, ip
    f754:	str	ip, [r0, #248]	; 0xf8
    f758:	ldr	ip, [pc, #140]	; f7ec <readstat_begin_writing_xport+0xe8>
    f75c:	add	ip, pc, ip
    f760:	str	ip, [r0, #252]	; 0xfc
    f764:	ldr	ip, [pc, #132]	; f7f0 <readstat_begin_writing_xport+0xec>
    f768:	add	ip, pc, ip
    f76c:	str	ip, [r0, #256]	; 0x100
    f770:	ldr	ip, [pc, #124]	; f7f4 <readstat_begin_writing_xport+0xf0>
    f774:	add	ip, pc, ip
    f778:	str	ip, [r0, #264]	; 0x108
    f77c:	ldr	ip, [pc, #116]	; f7f8 <readstat_begin_writing_xport+0xf4>
    f780:	add	ip, pc, ip
    f784:	str	ip, [r0, #268]	; 0x10c
    f788:	ldr	ip, [pc, #108]	; f7fc <readstat_begin_writing_xport+0xf8>
    f78c:	add	ip, pc, ip
    f790:	str	ip, [r0, #272]	; 0x110
    f794:	ldr	ip, [pc, #100]	; f800 <readstat_begin_writing_xport+0xfc>
    f798:	add	ip, pc, ip
    f79c:	str	ip, [r0, #228]	; 0xe4
    f7a0:	ldr	ip, [pc, #92]	; f804 <readstat_begin_writing_xport+0x100>
    f7a4:	ldr	r3, [r3, ip]
    f7a8:	str	r3, [r0, #232]	; 0xe8
    f7ac:	ldr	r3, [pc, #84]	; f808 <readstat_begin_writing_xport+0x104>
    f7b0:	add	r3, pc, r3
    f7b4:	str	r3, [r0, #276]	; 0x114
    f7b8:	ldr	r3, [pc, #76]	; f80c <readstat_begin_writing_xport+0x108>
    f7bc:	add	r3, pc, r3
    f7c0:	str	r3, [r0, #284]	; 0x11c
    f7c4:	ldr	r3, [pc, #68]	; f810 <readstat_begin_writing_xport+0x10c>
    f7c8:	add	r3, pc, r3
    f7cc:	str	r3, [r0, #280]	; 0x118
    f7d0:	b	3fac <readstat_begin_writing_file@plt>
    f7d4:	.word	0x000318dc
    f7d8:	.word	0xfffff9b4
    f7dc:	.word	0xfffff910
    f7e0:	.word	0xfffff8f8
    f7e4:	.word	0xfffff8e0
    f7e8:	.word	0xfffff8cc
    f7ec:	.word	0xfffff86c
    f7f0:	.word	0xfffff908
    f7f4:	.word	0xfffff81c
    f7f8:	.word	0xfffff7e4
    f7fc:	.word	0xfffff81c
    f800:	.word	0xfffff8b0
    f804:	.word	0x000002f0
    f808:	.word	0xfffffa6c
    f80c:	.word	0xfffff7d0
    f810:	.word	0xfffff968

0000f814 <por_ctx_init>:
    f814:	push	{r4, lr}
    f818:	mov	r1, #660	; 0x294
    f81c:	mov	r0, #1
    f820:	bl	3d9c <calloc@plt>
    f824:	mov	r3, #32
    f828:	strb	r3, [r0, #48]	; 0x30
    f82c:	mov	r3, #20
    f830:	mov	r4, r0
    f834:	str	r3, [r0, #608]	; 0x260
    f838:	mov	r0, #1024	; 0x400
    f83c:	bl	41e0 <ck_hash_table_init@plt>
    f840:	str	r0, [r4, #656]	; 0x290
    f844:	mov	r0, r4
    f848:	pop	{r4, pc}

0000f84c <por_ctx_free>:
    f84c:	push	{r4, r5, r6, lr}
    f850:	mov	r4, r0
    f854:	ldr	r0, [r0, #616]	; 0x268
    f858:	cmp	r0, #0
    f85c:	beq	f864 <por_ctx_free+0x18>
    f860:	bl	3f04 <free@plt>
    f864:	ldr	r3, [r4, #652]	; 0x28c
    f868:	cmp	r3, #0
    f86c:	movne	r5, #0
    f870:	movne	r6, #280	; 0x118
    f874:	bne	f8d0 <por_ctx_free+0x84>
    f878:	ldr	r3, [r4, #648]	; 0x288
    f87c:	cmp	r3, #0
    f880:	movne	r5, #0
    f884:	bne	f900 <por_ctx_free+0xb4>
    f888:	ldr	r0, [r4, #656]	; 0x290
    f88c:	cmp	r0, #0
    f890:	beq	f898 <por_ctx_free+0x4c>
    f894:	bl	4288 <ck_hash_table_free@plt>
    f898:	ldr	r0, [r4, #612]	; 0x264
    f89c:	cmp	r0, #0
    f8a0:	beq	f8a8 <por_ctx_free+0x5c>
    f8a4:	bl	3e14 <iconv_close@plt>
    f8a8:	mov	r0, r4
    f8ac:	pop	{r4, r5, r6, lr}
    f8b0:	b	3f04 <free@plt>
    f8b4:	ldr	r3, [r4, #652]	; 0x28c
    f8b8:	mla	r3, r6, r5, r3
    f8bc:	ldr	r0, [r3, #264]	; 0x108
    f8c0:	cmp	r0, #0
    f8c4:	beq	f8cc <por_ctx_free+0x80>
    f8c8:	bl	3f04 <free@plt>
    f8cc:	add	r5, r5, #1
    f8d0:	ldr	r3, [r4, #632]	; 0x278
    f8d4:	cmp	r5, r3
    f8d8:	blt	f8b4 <por_ctx_free+0x68>
    f8dc:	ldr	r0, [r4, #652]	; 0x28c
    f8e0:	bl	3f04 <free@plt>
    f8e4:	b	f878 <por_ctx_free+0x2c>
    f8e8:	ldr	r3, [r4, #648]	; 0x288
    f8ec:	ldr	r0, [r3, r5, lsl #2]
    f8f0:	cmp	r0, #0
    f8f4:	beq	f8fc <por_ctx_free+0xb0>
    f8f8:	bl	3f04 <free@plt>
    f8fc:	add	r5, r5, #1
    f900:	ldr	r3, [r4, #632]	; 0x278
    f904:	cmp	r5, r3
    f908:	blt	f8e8 <por_ctx_free+0x9c>
    f90c:	ldr	r0, [r4, #648]	; 0x288
    f910:	bl	3f04 <free@plt>
    f914:	b	f888 <por_ctx_free+0x3c>

0000f918 <por_utf8_encode>:
    f918:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f91c:	mov	r6, r2
    f920:	ldr	sl, [pc, #180]	; f9dc <por_utf8_encode+0xc4>
    f924:	ldr	fp, [pc, #180]	; f9e0 <por_utf8_encode+0xc8>
    f928:	ldr	r9, [pc, #180]	; f9e4 <por_utf8_encode+0xcc>
    f92c:	mov	r7, r3
    f930:	mov	r5, r0
    f934:	add	r8, r0, r1
    f938:	mov	r4, #0
    f93c:	add	sl, pc, sl
    f940:	cmp	r5, r8
    f944:	bne	f950 <por_utf8_encode+0x38>
    f948:	mov	r0, r4
    f94c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f950:	ldrb	r2, [r5], #1
    f954:	ldr	r3, [sp, #40]	; 0x28
    f958:	lsl	r2, r2, #1
    f95c:	ldrh	r2, [r3, r2]
    f960:	cmp	r2, #0
    f964:	beq	f9cc <por_utf8_encode+0xb4>
    f968:	cmp	r2, #31
    f96c:	bls	f9d4 <por_utf8_encode+0xbc>
    f970:	cmp	r2, #127	; 0x7f
    f974:	bhi	f990 <por_utf8_encode+0x78>
    f978:	add	r0, r4, #1
    f97c:	cmp	r0, r7
    f980:	bhi	f948 <por_utf8_encode+0x30>
    f984:	strb	r2, [r6, r4]
    f988:	mov	r4, r0
    f98c:	b	f940 <por_utf8_encode+0x28>
    f990:	cmp	r2, r9
    f994:	addls	r1, r4, #2
    f998:	bls	f9a0 <por_utf8_encode+0x88>
    f99c:	add	r1, r4, #3
    f9a0:	cmp	r7, r1
    f9a4:	bcc	f948 <por_utf8_encode+0x30>
    f9a8:	mov	r1, sl
    f9ac:	add	r0, r6, r4
    f9b0:	bl	4438 <sprintf@plt>
    f9b4:	cmp	r0, #0
    f9b8:	addgt	r0, r4, r0
    f9bc:	bgt	f988 <por_utf8_encode+0x70>
    f9c0:	add	r0, r4, #1
    f9c4:	mov	r2, #32
    f9c8:	b	f984 <por_utf8_encode+0x6c>
    f9cc:	mov	r2, fp
    f9d0:	b	f99c <por_utf8_encode+0x84>
    f9d4:	mvn	r4, #0
    f9d8:	b	f948 <por_utf8_encode+0x30>
    f9dc:	.word	0x0001253f
    f9e0:	.word	0x0000fffd
    f9e4:	.word	0x000007ff

0000f9e8 <por_utf8_decode>:
    f9e8:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f9ec:	mov	r8, r3
    f9f0:	ldr	fp, [pc, #180]	; faac <por_utf8_decode+0xc4>
    f9f4:	ldr	r7, [sp, #48]	; 0x30
    f9f8:	mov	r5, r2
    f9fc:	add	r9, sp, #4
    fa00:	mov	sl, sp
    fa04:	add	fp, pc, fp
    fa08:	mov	r4, r0
    fa0c:	mov	r0, #0
    fa10:	str	r0, [sp]
    fa14:	add	r6, r0, #1
    fa18:	mov	r3, #0
    fa1c:	cmp	r8, r6
    fa20:	str	r3, [sp, #4]
    fa24:	bcc	fa48 <por_utf8_decode+0x60>
    fa28:	ldrb	r3, [r4]
    fa2c:	sub	r2, r3, #32
    fa30:	cmp	r2, #94	; 0x5e
    fa34:	bhi	fa64 <por_utf8_decode+0x7c>
    fa38:	ldrb	r3, [r7, r3]
    fa3c:	cmp	r3, #0
    fa40:	bne	fa50 <por_utf8_decode+0x68>
    fa44:	mvn	r0, #0
    fa48:	add	sp, sp, #12
    fa4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fa50:	add	r4, r4, #1
    fa54:	strb	r3, [r5]
    fa58:	add	r5, r5, #1
    fa5c:	mov	r0, r6
    fa60:	b	fa14 <por_utf8_decode+0x2c>
    fa64:	mov	r3, r9
    fa68:	mov	r2, sl
    fa6c:	mov	r1, fp
    fa70:	mov	r0, r4
    fa74:	bl	42d0 <__isoc99_sscanf@plt>
    fa78:	cmp	r0, #0
    fa7c:	beq	fa44 <por_utf8_decode+0x5c>
    fa80:	ldr	r3, [sp]
    fa84:	ldr	r2, [sp, #52]	; 0x34
    fa88:	cmp	r3, r2
    fa8c:	bcs	fa44 <por_utf8_decode+0x5c>
    fa90:	ldrb	r3, [r7, r3]
    fa94:	cmp	r3, #0
    fa98:	beq	fa44 <por_utf8_decode+0x5c>
    fa9c:	strb	r3, [r5]
    faa0:	ldr	r3, [sp, #4]
    faa4:	add	r4, r4, r3
    faa8:	b	fa58 <por_utf8_decode+0x70>
    faac:	.word	0x0001247b

0000fab0 <readstat_por_parse_double>:
    fab0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    fab4:	vpush	{d8-d10}
    fab8:	mov	r6, r0
    fabc:	mov	r4, r0
    fac0:	vldr	d7, [pc, #872]	; fe30 <readstat_por_parse_double+0x380>
    fac4:	sub	sp, sp, #1072	; 0x430
    fac8:	sub	sp, sp, #4
    facc:	str	r3, [sp, #32]
    fad0:	add	r3, r0, r1
    fad4:	cmp	r0, r3
    fad8:	str	r1, [sp, #24]
    fadc:	str	r2, [sp, #28]
    fae0:	str	r3, [sp, #20]
    fae4:	beq	fd84 <readstat_por_parse_double+0x2d4>
    fae8:	vldr	d3, [pc, #840]	; fe38 <readstat_por_parse_double+0x388>
    faec:	ldr	r8, [pc, #852]	; fe48 <readstat_por_parse_double+0x398>
    faf0:	ldr	r3, [pc, #852]	; fe4c <readstat_por_parse_double+0x39c>
    faf4:	vmov.f64	d5, d7
    faf8:	vmov.f64	d1, d7
    fafc:	vmov.f64	d2, d7
    fb00:	vmov.f64	d6, d7
    fb04:	vmov.f64	d8, d7
    fb08:	vmov.f64	d0, d3
    fb0c:	vmov.f64	d9, d7
    fb10:	mov	lr, #0
    fb14:	add	r8, pc, r8
    fb18:	add	r3, pc, r3
    fb1c:	mov	r7, lr
    fb20:	mov	r5, #1
    fb24:	str	r3, [sp, #44]	; 0x2c
    fb28:	add	r3, r8, #204	; 0xcc
    fb2c:	str	r8, [sp, #40]	; 0x28
    fb30:	str	r3, [sp, #36]	; 0x24
    fb34:	add	r1, r8, r5
    fb38:	ldrb	r9, [r1, #82]	; 0x52
    fb3c:	ldrb	r2, [r1, #56]	; 0x38
    fb40:	ldrb	r3, [r1, #69]	; 0x45
    fb44:	cmp	r9, #0
    fb48:	add	r2, r8, r2
    fb4c:	beq	fbf8 <readstat_por_parse_double+0x148>
    fb50:	sub	ip, r9, #1
    fb54:	add	ip, r2, ip
    fb58:	mov	r0, r2
    fb5c:	cmp	r0, ip
    fb60:	bhi	fbf0 <readstat_por_parse_double+0x140>
    fb64:	sub	sl, ip, r0
    fb68:	ldrb	fp, [r4]
    fb6c:	add	r1, r0, sl, asr #1
    fb70:	ldrb	sl, [r0, sl, asr #1]
    fb74:	cmp	fp, sl
    fb78:	subcc	ip, r1, #1
    fb7c:	bcc	fb5c <readstat_por_parse_double+0xac>
    fb80:	addhi	r0, r1, #1
    fb84:	bhi	fb5c <readstat_por_parse_double+0xac>
    fb88:	sub	r2, r1, r2
    fb8c:	add	r3, r3, r2
    fb90:	ldr	r2, [sp, #40]	; 0x28
    fb94:	add	r3, r2, r3
    fb98:	ldrb	r5, [r3, #108]	; 0x6c
    fb9c:	ldrb	r3, [r3, #156]	; 0x9c
    fba0:	cmp	r3, #0
    fba4:	beq	fbc4 <readstat_por_parse_double+0x114>
    fba8:	ldr	r1, [sp, #36]	; 0x24
    fbac:	ldr	r2, [sp, #36]	; 0x24
    fbb0:	ldrb	r0, [r1, r3]
    fbb4:	add	r2, r2, r3
    fbb8:	add	r0, r2, r0
    fbbc:	cmp	r0, r2
    fbc0:	bne	fc68 <readstat_por_parse_double+0x1b8>
    fbc4:	cmp	r5, #0
    fbc8:	beq	fbdc <readstat_por_parse_double+0x12c>
    fbcc:	ldr	r3, [sp, #20]
    fbd0:	add	r4, r4, #1
    fbd4:	cmp	r3, r4
    fbd8:	bne	fb34 <readstat_por_parse_double+0x84>
    fbdc:	vcmp.f64	d8, d8
    fbe0:	vmrs	APSR_nzcv, fpscr
    fbe4:	movvc	r8, #0
    fbe8:	bvc	fda0 <readstat_por_parse_double+0x2f0>
    fbec:	b	fdd4 <readstat_por_parse_double+0x324>
    fbf0:	add	r2, r2, r9
    fbf4:	add	r3, r3, r9
    fbf8:	ldr	r1, [sp, #44]	; 0x2c
    fbfc:	add	r5, r1, r5
    fc00:	ldrb	r9, [r5, #95]	; 0x5f
    fc04:	cmp	r9, #0
    fc08:	beq	fb90 <readstat_por_parse_double+0xe0>
    fc0c:	add	r5, r2, r9, lsl #1
    fc10:	sub	r5, r5, #2
    fc14:	mov	ip, r2
    fc18:	cmp	ip, r5
    fc1c:	bhi	fc60 <readstat_por_parse_double+0x1b0>
    fc20:	sub	r0, r5, ip
    fc24:	ldrb	sl, [r4]
    fc28:	asr	r0, r0, #1
    fc2c:	bic	r0, r0, #1
    fc30:	add	r1, ip, r0
    fc34:	ldrb	r0, [ip, r0]
    fc38:	cmp	r0, sl
    fc3c:	subhi	r5, r1, #2
    fc40:	bhi	fc18 <readstat_por_parse_double+0x168>
    fc44:	ldrb	r0, [r1, #1]
    fc48:	cmp	r0, sl
    fc4c:	addcc	ip, r1, #2
    fc50:	bcc	fc18 <readstat_por_parse_double+0x168>
    fc54:	sub	r2, r1, r2
    fc58:	add	r3, r3, r2, asr #1
    fc5c:	b	fb90 <readstat_por_parse_double+0xe0>
    fc60:	add	r3, r3, r9
    fc64:	b	fb90 <readstat_por_parse_double+0xe0>
    fc68:	ldrb	r3, [r2, #1]!
    fc6c:	cmp	r3, #10
    fc70:	addls	pc, pc, r3, lsl #2
    fc74:	b	fbbc <readstat_por_parse_double+0x10c>
    fc78:	b	fcac <readstat_por_parse_double+0x1fc>
    fc7c:	b	fce8 <readstat_por_parse_double+0x238>
    fc80:	b	fca4 <readstat_por_parse_double+0x1f4>
    fc84:	b	fd7c <readstat_por_parse_double+0x2cc>
    fc88:	b	fd40 <readstat_por_parse_double+0x290>
    fc8c:	b	fd28 <readstat_por_parse_double+0x278>
    fc90:	b	fd30 <readstat_por_parse_double+0x280>
    fc94:	b	fd38 <readstat_por_parse_double+0x288>
    fc98:	b	fd40 <readstat_por_parse_double+0x290>
    fc9c:	b	fd48 <readstat_por_parse_double+0x298>
    fca0:	b	fd50 <readstat_por_parse_double+0x2a0>
    fca4:	vmov.f64	d5, d9
    fca8:	b	fbbc <readstat_por_parse_double+0x10c>
    fcac:	ldrb	r3, [r4]
    fcb0:	sub	r1, r3, #48	; 0x30
    fcb4:	uxtb	ip, r1
    fcb8:	cmp	ip, #9
    fcbc:	vmovls	s9, r1
    fcc0:	bls	fcd8 <readstat_por_parse_double+0x228>
    fcc4:	sub	r1, r3, #65	; 0x41
    fcc8:	cmp	r1, #19
    fccc:	bhi	fbbc <readstat_por_parse_double+0x10c>
    fcd0:	sub	r3, r3, #55	; 0x37
    fcd4:	vmov	s9, r3
    fcd8:	vcvt.f64.s32	d4, s9
    fcdc:	vmla.f64	d4, d5, d0
    fce0:	vmov.f64	d5, d4
    fce4:	b	fbbc <readstat_por_parse_double+0x10c>
    fce8:	ldrb	r3, [r4]
    fcec:	sub	r1, r3, #48	; 0x30
    fcf0:	uxtb	ip, r1
    fcf4:	cmp	ip, #9
    fcf8:	vmovls	s9, r1
    fcfc:	bls	fd14 <readstat_por_parse_double+0x264>
    fd00:	sub	r1, r3, #65	; 0x41
    fd04:	cmp	r1, #19
    fd08:	bhi	fd20 <readstat_por_parse_double+0x270>
    fd0c:	sub	r3, r3, #55	; 0x37
    fd10:	vmov	s9, r3
    fd14:	vcvt.f64.s32	d4, s9
    fd18:	vdiv.f64	d10, d4, d3
    fd1c:	vadd.f64	d6, d6, d10
    fd20:	vmul.f64	d3, d3, d0
    fd24:	b	fbbc <readstat_por_parse_double+0x10c>
    fd28:	vmov.f64	d2, d5
    fd2c:	b	fbbc <readstat_por_parse_double+0x10c>
    fd30:	mov	lr, #1
    fd34:	b	fbbc <readstat_por_parse_double+0x10c>
    fd38:	vmov.f64	d1, d5
    fd3c:	b	fbbc <readstat_por_parse_double+0x10c>
    fd40:	mov	r7, #1
    fd44:	b	fbbc <readstat_por_parse_double+0x10c>
    fd48:	vldr	d8, [pc, #240]	; fe40 <readstat_por_parse_double+0x390>
    fd4c:	b	fbbc <readstat_por_parse_double+0x10c>
    fd50:	vcmp.f64	d8, d8
    fd54:	add	r4, r4, #1
    fd58:	vmrs	APSR_nzcv, fpscr
    fd5c:	movvc	r8, #1
    fd60:	bvc	fda0 <readstat_por_parse_double+0x2f0>
    fd64:	ldr	r3, [sp, #28]
    fd68:	sub	r0, r4, r6
    fd6c:	cmp	r3, #0
    fd70:	ldrne	r3, [sp, #28]
    fd74:	vstrne	d8, [r3]
    fd78:	b	fe20 <readstat_por_parse_double+0x370>
    fd7c:	vldr	d6, [pc, #172]	; fe30 <readstat_por_parse_double+0x380>
    fd80:	b	fbbc <readstat_por_parse_double+0x10c>
    fd84:	vmov.f64	d1, d7
    fd88:	vmov.f64	d2, d7
    fd8c:	vmov.f64	d6, d7
    fd90:	mov	r8, #0
    fd94:	mov	lr, r8
    fd98:	mov	r7, r8
    fd9c:	mov	r5, #1
    fda0:	cmp	lr, #0
    fda4:	vadd.f64	d8, d2, d6
    fda8:	vnegne.f64	d1, d1
    fdac:	vcmp.f64	d1, d7
    fdb0:	vmrs	APSR_nzcv, fpscr
    fdb4:	beq	fdc4 <readstat_por_parse_double+0x314>
    fdb8:	vldr	d0, [pc, #120]	; fe38 <readstat_por_parse_double+0x388>
    fdbc:	bl	3fd0 <pow@plt>
    fdc0:	vmul.f64	d8, d8, d0
    fdc4:	cmp	r7, #0
    fdc8:	vnegne.f64	d8, d8
    fdcc:	cmp	r8, #0
    fdd0:	bne	fd64 <readstat_por_parse_double+0x2b4>
    fdd4:	ldr	r3, [sp, #32]
    fdd8:	cmp	r3, #0
    fddc:	beq	fe1c <readstat_por_parse_double+0x36c>
    fde0:	ldr	r3, [sp, #24]
    fde4:	ldr	r2, [pc, #100]	; fe50 <readstat_por_parse_double+0x3a0>
    fde8:	str	r3, [sp]
    fdec:	sub	r3, r4, r6
    fdf0:	add	r4, sp, #48	; 0x30
    fdf4:	mov	r1, #1024	; 0x400
    fdf8:	str	r5, [sp, #8]
    fdfc:	str	r6, [sp, #4]
    fe00:	add	r2, pc, r2
    fe04:	mov	r0, r4
    fe08:	bl	42c4 <snprintf@plt>
    fe0c:	ldr	r1, [sp, #1136]	; 0x470
    fe10:	mov	r0, r4
    fe14:	ldr	r3, [sp, #32]
    fe18:	blx	r3
    fe1c:	mvn	r0, #0
    fe20:	add	sp, sp, #1072	; 0x430
    fe24:	add	sp, sp, #4
    fe28:	vpop	{d8-d10}
    fe2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...
    fe3c:	.word	0x403e0000
    fe40:	.word	0x00000000
    fe44:	.word	0x7ff80000
    fe48:	.word	0x00012371
    fe4c:	.word	0x0001236d
    fe50:	.word	0x00012172
    fe54:	.word	0x00000000

0000fe58 <read_bytes>:
    fe58:	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
    fe5c:	mov	r5, r0
    fe60:	ldr	r6, [r0, #44]	; 0x2c
    fe64:	mov	r7, r1
    fe68:	mov	r4, r1
    fe6c:	add	r9, r1, r2
    fe70:	add	r8, sp, #7
    fe74:	mov	sl, #0
    fe78:	cmp	r4, r9
    fe7c:	bcs	fec4 <read_bytes+0x6c>
    fe80:	ldr	r3, [r5, #52]	; 0x34
    fe84:	cmp	r3, #0
    fe88:	beq	fea8 <read_bytes+0x50>
    fe8c:	ldrb	r3, [r5, #48]	; 0x30
    fe90:	strb	r3, [r4]
    fe94:	ldr	r3, [r5, #52]	; 0x34
    fe98:	sub	r3, r3, #1
    fe9c:	str	r3, [r5, #52]	; 0x34
    fea0:	add	r4, r4, #1
    fea4:	b	fe78 <read_bytes+0x20>
    fea8:	ldr	r3, [r6, #12]
    feac:	ldr	r2, [r6, #20]
    feb0:	mov	r1, #1
    feb4:	mov	r0, r8
    feb8:	blx	r3
    febc:	cmp	r0, #0
    fec0:	bne	fed0 <read_bytes+0x78>
    fec4:	sub	r0, r4, r7
    fec8:	add	sp, sp, #8
    fecc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    fed0:	cmn	r0, #1
    fed4:	bne	fee0 <read_bytes+0x88>
    fed8:	mvn	r0, #0
    fedc:	b	fec8 <read_bytes+0x70>
    fee0:	ldrb	r3, [sp, #7]
    fee4:	cmp	r3, #10
    fee8:	cmpne	r3, #13
    feec:	bne	ff3c <read_bytes+0xe4>
    fef0:	cmp	r3, #13
    fef4:	beq	ff0c <read_bytes+0xb4>
    fef8:	ldr	r3, [r5, #40]	; 0x28
    fefc:	str	sl, [r5, #40]	; 0x28
    ff00:	rsb	r3, r3, #80	; 0x50
    ff04:	str	r3, [r5, #52]	; 0x34
    ff08:	b	fe78 <read_bytes+0x20>
    ff0c:	ldr	r3, [r6, #12]
    ff10:	ldr	r2, [r6, #20]
    ff14:	mov	r1, #1
    ff18:	mov	r0, r8
    ff1c:	blx	r3
    ff20:	add	r0, r0, #1
    ff24:	cmp	r0, #1
    ff28:	bls	fed8 <read_bytes+0x80>
    ff2c:	ldrb	r3, [sp, #7]
    ff30:	cmp	r3, #10
    ff34:	beq	fef8 <read_bytes+0xa0>
    ff38:	b	fed8 <read_bytes+0x80>
    ff3c:	ldr	r2, [r5, #40]	; 0x28
    ff40:	cmp	r2, #80	; 0x50
    ff44:	beq	fed8 <read_bytes+0x80>
    ff48:	strb	r3, [r4]
    ff4c:	ldr	r3, [r5, #40]	; 0x28
    ff50:	add	r3, r3, #1
    ff54:	str	r3, [r5, #40]	; 0x28
    ff58:	b	fea0 <read_bytes+0x48>

0000ff5c <read_double_with_peek>:
    ff5c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    ff60:	sub	sp, sp, #1456	; 0x5b0
    ff64:	sub	sp, sp, #8
    ff68:	ldr	r7, [pc, #456]	; 10138 <read_double_with_peek+0x1dc>
    ff6c:	add	r5, sp, #40	; 0x28
    ff70:	strb	r2, [sp, #40]	; 0x28
    ff74:	mov	r6, #0
    ff78:	mov	r2, #1
    ff7c:	mov	r8, r1
    ff80:	add	r1, r5, r2
    ff84:	mov	r4, r0
    ff88:	strd	r6, [r5, #-8]
    ff8c:	bl	fe58 <read_bytes>
    ff90:	cmp	r0, #1
    ff94:	beq	ffa8 <read_double_with_peek+0x4c>
    ff98:	mov	r0, #5
    ff9c:	add	sp, sp, #1456	; 0x5b0
    ffa0:	add	sp, sp, #8
    ffa4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    ffa8:	ldrb	r3, [sp, #40]	; 0x28
    ffac:	add	r3, r4, r3, lsl #1
    ffb0:	ldrh	r3, [r3, #94]	; 0x5e
    ffb4:	cmp	r3, #42	; 0x2a
    ffb8:	beq	1006c <read_double_with_peek+0x110>
    ffbc:	add	r9, r5, #1
    ffc0:	mov	r6, #2
    ffc4:	mov	r7, #0
    ffc8:	mov	sl, #1
    ffcc:	ldrb	r3, [r9], #1
    ffd0:	add	r3, r4, r3, lsl #1
    ffd4:	ldrh	r3, [r3, #94]	; 0x5e
    ffd8:	cmp	r3, #47	; 0x2f
    ffdc:	bne	10090 <read_double_with_peek+0x134>
    ffe0:	add	r3, r4, #94	; 0x5e
    ffe4:	add	sl, sp, #140	; 0x8c
    ffe8:	str	r3, [sp]
    ffec:	mov	r2, sl
    fff0:	mov	r3, #300	; 0x12c
    fff4:	mov	r1, r6
    fff8:	mov	r0, r5
    fffc:	bl	42a0 <por_utf8_encode@plt>
   10000:	mov	r2, r0
   10004:	asr	r3, r0, #31
   10008:	cmn	r0, #1
   1000c:	mov	r9, r0
   10010:	strd	r2, [sp, #24]
   10014:	bne	100c0 <read_double_with_peek+0x164>
   10018:	ldr	r3, [r4, #24]
   1001c:	cmp	r3, #0
   10020:	beq	10058 <read_double_with_peek+0xfc>
   10024:	ldr	r2, [pc, #272]	; 1013c <read_double_with_peek+0x1e0>
   10028:	str	r6, [sp, #8]
   1002c:	strd	r6, [sp]
   10030:	add	r6, sp, #440	; 0x1b8
   10034:	mov	r1, #1024	; 0x400
   10038:	str	r5, [sp, #12]
   1003c:	add	r2, pc, r2
   10040:	mov	r0, r6
   10044:	bl	42c4 <snprintf@plt>
   10048:	ldr	r3, [r4, #24]
   1004c:	ldr	r1, [r4, #36]	; 0x24
   10050:	mov	r0, r6
   10054:	blx	r3
   10058:	mov	r0, #16
   1005c:	cmp	r8, #0
   10060:	ldrdne	r2, [r5, #-8]
   10064:	strdne	r2, [r8]
   10068:	b	ff9c <read_double_with_peek+0x40>
   1006c:	ldrb	r3, [sp, #41]	; 0x29
   10070:	add	r3, r4, r3, lsl #1
   10074:	ldrh	r3, [r3, #94]	; 0x5e
   10078:	cmp	r3, #46	; 0x2e
   1007c:	bne	ffbc <read_double_with_peek+0x60>
   10080:	cmp	r8, #0
   10084:	mov	r0, #0
   10088:	strdne	r6, [r8]
   1008c:	b	ff9c <read_double_with_peek+0x40>
   10090:	mov	r2, sl
   10094:	mov	r1, r9
   10098:	mov	r0, r4
   1009c:	bl	fe58 <read_bytes>
   100a0:	cmp	r0, #1
   100a4:	bne	ff98 <read_double_with_peek+0x3c>
   100a8:	adds	r6, r6, #1
   100ac:	adc	r7, r7, #0
   100b0:	cmp	r7, #0
   100b4:	cmpeq	r6, #100	; 0x64
   100b8:	bne	ffcc <read_double_with_peek+0x70>
   100bc:	b	ff98 <read_double_with_peek+0x3c>
   100c0:	ldr	r3, [r4, #36]	; 0x24
   100c4:	sub	r2, r5, #8
   100c8:	str	r3, [sp]
   100cc:	mov	r1, r9
   100d0:	ldr	r3, [r4, #24]
   100d4:	mov	r0, sl
   100d8:	bl	4294 <readstat_por_parse_double@plt>
   100dc:	cmn	r0, #1
   100e0:	movne	r0, #0
   100e4:	bne	1005c <read_double_with_peek+0x100>
   100e8:	ldr	r3, [r4, #24]
   100ec:	cmp	r3, #0
   100f0:	beq	10130 <read_double_with_peek+0x1d4>
   100f4:	ldrd	r2, [sp, #24]
   100f8:	add	r6, sp, #440	; 0x1b8
   100fc:	mov	r1, #1024	; 0x400
   10100:	strd	r2, [sp]
   10104:	ldr	r2, [pc, #52]	; 10140 <read_double_with_peek+0x1e4>
   10108:	str	r5, [sp, #16]
   1010c:	str	sl, [sp, #12]
   10110:	str	r9, [sp, #8]
   10114:	add	r2, pc, r2
   10118:	mov	r0, r6
   1011c:	bl	42c4 <snprintf@plt>
   10120:	ldr	r3, [r4, #24]
   10124:	ldr	r1, [r4, #36]	; 0x24
   10128:	mov	r0, r6
   1012c:	blx	r3
   10130:	mov	r0, #5
   10134:	b	1005c <read_double_with_peek+0x100>
   10138:	.word	0x7ff80000
   1013c:	.word	0x00011f67
   10140:	.word	0x00011ec2

00010144 <maybe_read_string>:
   10144:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10148:	sub	sp, sp, #1040	; 0x410
   1014c:	add	r7, sp, #16
   10150:	mov	r9, r1
   10154:	mov	sl, r2
   10158:	mov	r1, r7
   1015c:	mov	r2, #1
   10160:	mov	r4, r0
   10164:	mov	r8, r3
   10168:	bl	fe58 <read_bytes>
   1016c:	cmp	r0, #1
   10170:	movne	r0, #0
   10174:	movne	r6, #5
   10178:	bne	101ac <maybe_read_string+0x68>
   1017c:	ldrb	r2, [sp, #16]
   10180:	add	r3, r4, r2, lsl #1
   10184:	ldrh	r3, [r3, #94]	; 0x5e
   10188:	cmp	r3, #90	; 0x5a
   1018c:	moveq	r6, #0
   10190:	beq	101ac <maybe_read_string+0x68>
   10194:	sub	r1, r7, #8
   10198:	mov	r0, r4
   1019c:	bl	ff5c <read_double_with_peek>
   101a0:	subs	r6, r0, #0
   101a4:	beq	101c0 <maybe_read_string+0x7c>
   101a8:	mov	r0, #0
   101ac:	cmp	r8, #0
   101b0:	strne	r0, [r8]
   101b4:	mov	r0, r6
   101b8:	add	sp, sp, #1040	; 0x410
   101bc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   101c0:	vldr	d7, [r7, #-8]
   101c4:	vcmpe.f64	d7, #0.0
   101c8:	vmrs	APSR_nzcv, fpscr
   101cc:	bmi	102b8 <maybe_read_string+0x174>
   101d0:	vldr	d6, [pc, #232]	; 102c0 <maybe_read_string+0x17c>
   101d4:	vcmpe.f64	d7, d6
   101d8:	vmrs	APSR_nzcv, fpscr
   101dc:	bgt	102b8 <maybe_read_string+0x174>
   101e0:	vcmp.f64	d7, d7
   101e4:	vmrs	APSR_nzcv, fpscr
   101e8:	bvs	102b8 <maybe_read_string+0x174>
   101ec:	vcvt.u32.f64	s15, d7
   101f0:	ldr	r3, [r4, #620]	; 0x26c
   101f4:	vmov	r5, s15
   101f8:	cmp	r5, r3
   101fc:	bls	10220 <maybe_read_string+0xdc>
   10200:	vmov	r1, s15
   10204:	vstr	s15, [r4, #620]	; 0x26c
   10208:	ldr	r0, [r4, #616]	; 0x268
   1020c:	bl	403c <realloc@plt>
   10210:	ldr	r2, [r4, #620]	; 0x26c
   10214:	mov	r1, r6
   10218:	str	r0, [r4, #616]	; 0x268
   1021c:	bl	42e8 <memset@plt>
   10220:	mov	r2, r5
   10224:	ldr	r1, [r4, #616]	; 0x268
   10228:	mov	r0, r4
   1022c:	bl	fe58 <read_bytes>
   10230:	cmn	r0, #1
   10234:	moveq	r6, #2
   10238:	beq	101b4 <maybe_read_string+0x70>
   1023c:	add	r3, r4, #94	; 0x5e
   10240:	str	r3, [sp]
   10244:	mov	r2, r9
   10248:	sub	r3, sl, #1
   1024c:	mov	r1, r5
   10250:	ldr	r0, [r4, #616]	; 0x268
   10254:	bl	42a0 <por_utf8_encode@plt>
   10258:	cmn	r0, #1
   1025c:	bne	102a4 <maybe_read_string+0x160>
   10260:	ldr	r3, [r4, #24]
   10264:	cmp	r3, #0
   10268:	beq	1029c <maybe_read_string+0x158>
   1026c:	ldr	r3, [r4, #616]	; 0x268
   10270:	ldr	r2, [pc, #80]	; 102c8 <maybe_read_string+0x184>
   10274:	str	r3, [sp]
   10278:	mov	r1, #1024	; 0x400
   1027c:	mov	r3, r5
   10280:	add	r2, pc, r2
   10284:	mov	r0, r7
   10288:	bl	42c4 <snprintf@plt>
   1028c:	ldr	r3, [r4, #24]
   10290:	ldr	r1, [r4, #36]	; 0x24
   10294:	mov	r0, r7
   10298:	blx	r3
   1029c:	mov	r6, #16
   102a0:	b	101b4 <maybe_read_string+0x70>
   102a4:	mov	r3, #0
   102a8:	cmp	r8, r3
   102ac:	strb	r3, [r9, r0]
   102b0:	strne	r3, [r8]
   102b4:	b	101b4 <maybe_read_string+0x70>
   102b8:	mov	r6, #5
   102bc:	b	101b4 <maybe_read_string+0x70>
   102c0:	.word	0x00000000
   102c4:	.word	0x40d38800
   102c8:	.word	0x00011d8b

000102cc <read_string>:
   102cc:	push	{r0, r1, r2, lr}
   102d0:	add	r3, sp, #8
   102d4:	mov	ip, #0
   102d8:	str	ip, [r3, #-4]!
   102dc:	bl	10144 <maybe_read_string>
   102e0:	cmp	r0, #0
   102e4:	bne	102f8 <read_string+0x2c>
   102e8:	ldr	r0, [sp, #4]
   102ec:	cmp	r0, #0
   102f0:	movne	r0, #5
   102f4:	moveq	r0, #0
   102f8:	add	sp, sp, #12
   102fc:	pop	{pc}		; (ldr pc, [sp], #4)

00010300 <read_version_and_timestamp>:
   10300:	push	{r4, r5, r6, r7, lr}
   10304:	sub	sp, sp, #316	; 0x13c
   10308:	add	r7, sp, #12
   1030c:	mov	r4, r0
   10310:	mov	r2, #44	; 0x2c
   10314:	mov	r1, #0
   10318:	mov	r0, r7
   1031c:	bl	42e8 <memset@plt>
   10320:	mvn	r3, #0
   10324:	mov	r2, #1
   10328:	add	r1, sp, #11
   1032c:	mov	r0, r4
   10330:	str	r3, [sp, #44]	; 0x2c
   10334:	bl	fe58 <read_bytes>
   10338:	cmp	r0, #1
   1033c:	movne	r5, #2
   10340:	bne	1038c <read_version_and_timestamp+0x8c>
   10344:	add	r6, sp, #56	; 0x38
   10348:	mov	r2, #256	; 0x100
   1034c:	mov	r1, r6
   10350:	mov	r0, r4
   10354:	bl	102cc <read_string>
   10358:	subs	r5, r0, #0
   1035c:	bne	1038c <read_version_and_timestamp+0x8c>
   10360:	ldr	r1, [pc, #172]	; 10414 <read_version_and_timestamp+0x114>
   10364:	add	r3, sp, #24
   10368:	str	r3, [sp]
   1036c:	add	r2, sp, #32
   10370:	add	r3, sp, #28
   10374:	add	r1, pc, r1
   10378:	mov	r0, r6
   1037c:	bl	42d0 <__isoc99_sscanf@plt>
   10380:	cmp	r0, #3
   10384:	beq	10398 <read_version_and_timestamp+0x98>
   10388:	mov	r5, #29
   1038c:	mov	r0, r5
   10390:	add	sp, sp, #316	; 0x13c
   10394:	pop	{r4, r5, r6, r7, pc}
   10398:	mov	r2, #256	; 0x100
   1039c:	mov	r1, r6
   103a0:	mov	r0, r4
   103a4:	bl	102cc <read_string>
   103a8:	subs	r5, r0, #0
   103ac:	bne	1038c <read_version_and_timestamp+0x8c>
   103b0:	ldr	r1, [pc, #96]	; 10418 <read_version_and_timestamp+0x118>
   103b4:	str	r7, [sp]
   103b8:	add	r3, sp, #16
   103bc:	add	r2, sp, #20
   103c0:	add	r1, pc, r1
   103c4:	mov	r0, r6
   103c8:	bl	42d0 <__isoc99_sscanf@plt>
   103cc:	cmp	r0, #3
   103d0:	bne	10388 <read_version_and_timestamp+0x88>
   103d4:	ldr	r3, [sp, #32]
   103d8:	mov	r0, r7
   103dc:	sub	r3, r3, #1888	; 0x760
   103e0:	sub	r3, r3, #12
   103e4:	str	r3, [sp, #32]
   103e8:	ldr	r3, [sp, #28]
   103ec:	sub	r3, r3, #1
   103f0:	str	r3, [sp, #28]
   103f4:	bl	3e98 <mktime@plt>
   103f8:	ldrb	r3, [sp, #11]
   103fc:	add	r3, r4, r3, lsl #1
   10400:	ldrh	r3, [r3, #94]	; 0x5e
   10404:	sub	r3, r3, #65	; 0x41
   10408:	str	r3, [r4, #60]	; 0x3c
   1040c:	str	r0, [r4, #56]	; 0x38
   10410:	b	1038c <read_version_and_timestamp+0x8c>
   10414:	.word	0x00011cb5
   10418:	.word	0x00011c76

0001041c <handle_variables>:
   1041c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10420:	mov	r7, #0
   10424:	ldr	sl, [pc, #316]	; 10568 <handle_variables+0x14c>
   10428:	sub	sp, sp, #260	; 0x104
   1042c:	mov	r4, r0
   10430:	mov	r5, r7
   10434:	add	sl, pc, sl
   10438:	mov	r8, sp
   1043c:	ldr	r6, [r4, #632]	; 0x278
   10440:	cmp	r5, r6
   10444:	blt	10460 <handle_variables+0x44>
   10448:	ldr	r7, [r4, #12]
   1044c:	cmp	r7, #0
   10450:	bne	10508 <handle_variables+0xec>
   10454:	mov	r0, #0
   10458:	add	sp, sp, #260	; 0x104
   1045c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10460:	ldr	r6, [r4, #652]	; 0x28c
   10464:	mov	r3, #280	; 0x118
   10468:	ldr	r2, [r4, #612]	; 0x264
   1046c:	mla	r6, r3, r5, r6
   10470:	mov	r1, r7
   10474:	mov	r0, r6
   10478:	str	r5, [r6, #8]
   1047c:	ldr	r9, [r4, #648]	; 0x288
   10480:	bl	42b8 <spss_init_variable_for_info@plt>
   10484:	ldr	r3, [r6, #4]
   10488:	mov	r2, sl
   1048c:	mov	r1, #256	; 0x100
   10490:	lsl	fp, r5, #2
   10494:	str	r0, [r9, r5, lsl #2]
   10498:	mov	r0, r8
   1049c:	bl	42c4 <snprintf@plt>
   104a0:	ldr	r9, [r4, #8]
   104a4:	cmp	r9, #0
   104a8:	beq	10500 <handle_variables+0xe4>
   104ac:	ldr	r2, [r6, #4]
   104b0:	ldr	r1, [r4, #648]	; 0x288
   104b4:	cmn	r2, #1
   104b8:	movne	r2, r8
   104bc:	moveq	r2, #0
   104c0:	ldr	r3, [r4, #36]	; 0x24
   104c4:	ldr	r1, [r1, r5, lsl #2]
   104c8:	mov	r0, r5
   104cc:	blx	r9
   104d0:	cmp	r0, #1
   104d4:	bne	104e0 <handle_variables+0xc4>
   104d8:	mov	r0, #4
   104dc:	b	10458 <handle_variables+0x3c>
   104e0:	cmp	r0, #2
   104e4:	bne	10500 <handle_variables+0xe4>
   104e8:	ldr	r3, [r4, #648]	; 0x288
   104ec:	mov	r2, #1
   104f0:	ldr	r3, [r3, fp]
   104f4:	str	r2, [r3, #2144]	; 0x860
   104f8:	add	r5, r5, #1
   104fc:	b	1043c <handle_variables+0x20>
   10500:	add	r7, r7, #1
   10504:	b	104f8 <handle_variables+0xdc>
   10508:	ldrb	r3, [r4, #64]	; 0x40
   1050c:	cmp	r3, #0
   10510:	movne	r5, #0
   10514:	addne	r8, r4, #64	; 0x40
   10518:	movne	r9, #280	; 0x118
   1051c:	beq	10454 <handle_variables+0x38>
   10520:	cmp	r5, r6
   10524:	bge	10454 <handle_variables+0x38>
   10528:	ldr	r0, [r4, #652]	; 0x28c
   1052c:	mov	r1, r8
   10530:	mla	r0, r9, r5, r0
   10534:	add	r0, r0, #187	; 0xbb
   10538:	bl	3e44 <strcmp@plt>
   1053c:	cmp	r0, #0
   10540:	bne	10560 <handle_variables+0x144>
   10544:	ldr	r3, [r4, #648]	; 0x288
   10548:	ldr	r1, [r4, #36]	; 0x24
   1054c:	ldr	r0, [r3, r5, lsl #2]
   10550:	blx	r7
   10554:	cmp	r0, #0
   10558:	bne	104d8 <handle_variables+0xbc>
   1055c:	b	10454 <handle_variables+0x38>
   10560:	add	r5, r5, #1
   10564:	b	10520 <handle_variables+0x104>
   10568:	.word	0x00011c0f

0001056c <readstat_parse_por>:
   1056c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10570:	vpush	{d8-d9}
   10574:	mov	r5, r0
   10578:	mov	r8, r2
   1057c:	mov	r7, r1
   10580:	sub	sp, sp, #3120	; 0xc30
   10584:	sub	sp, sp, #4
   10588:	ldr	fp, [r0, #32]
   1058c:	bl	44e0 <por_ctx_init@plt>
   10590:	mov	lr, r5
   10594:	ldr	r6, [pc, #1724]	; 10c58 <readstat_parse_por+0x6ec>
   10598:	add	r6, pc, r6
   1059c:	mov	r4, r0
   105a0:	mov	ip, r0
   105a4:	ldm	lr!, {r0, r1, r2, r3}
   105a8:	stmia	ip!, {r0, r1, r2, r3}
   105ac:	ldm	lr, {r0, r1, r2, r3}
   105b0:	stm	ip, {r0, r1, r2, r3}
   105b4:	ldr	r3, [r5, #44]	; 0x2c
   105b8:	str	r8, [r4, #36]	; 0x24
   105bc:	str	r3, [r4, #640]	; 0x280
   105c0:	ldr	r3, [r5, #48]	; 0x30
   105c4:	ldr	r5, [r5, #40]	; 0x28
   105c8:	cmp	r3, #0
   105cc:	strgt	r3, [r4, #644]	; 0x284
   105d0:	cmp	r5, #0
   105d4:	str	fp, [r4, #44]	; 0x2c
   105d8:	beq	10620 <readstat_parse_por+0xb4>
   105dc:	ldr	r8, [pc, #1656]	; 10c5c <readstat_parse_por+0x6f0>
   105e0:	mov	r0, r5
   105e4:	add	r8, pc, r8
   105e8:	mov	r1, r8
   105ec:	bl	3e44 <strcmp@plt>
   105f0:	cmp	r0, #0
   105f4:	beq	10608 <readstat_parse_por+0x9c>
   105f8:	mov	r1, r8
   105fc:	mov	r0, r5
   10600:	bl	4180 <iconv_open@plt>
   10604:	str	r0, [r4, #612]	; 0x264
   10608:	ldr	r3, [r4, #612]	; 0x264
   1060c:	cmn	r3, #1
   10610:	moveq	r3, #0
   10614:	streq	r3, [r4, #612]	; 0x264
   10618:	moveq	r5, #7
   1061c:	beq	10660 <readstat_parse_por+0xf4>
   10620:	ldr	r3, [fp]
   10624:	ldr	r1, [fp, #20]
   10628:	mov	r0, r7
   1062c:	blx	r3
   10630:	cmn	r0, #1
   10634:	moveq	r5, #1
   10638:	beq	10660 <readstat_parse_por+0xf4>
   1063c:	ldr	r3, [fp, #8]
   10640:	ldr	r2, [fp, #20]
   10644:	mov	r1, #2
   10648:	mov	r0, #0
   1064c:	blx	r3
   10650:	cmn	r0, #1
   10654:	str	r0, [r4, #32]
   10658:	bne	10688 <readstat_parse_por+0x11c>
   1065c:	mov	r5, #15
   10660:	ldr	r3, [fp, #4]
   10664:	ldr	r0, [fp, #20]
   10668:	blx	r3
   1066c:	mov	r0, r4
   10670:	bl	3dfc <por_ctx_free@plt>
   10674:	mov	r0, r5
   10678:	add	sp, sp, #3120	; 0xc30
   1067c:	add	sp, sp, #4
   10680:	vpop	{d8-d9}
   10684:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10688:	mov	r1, #0
   1068c:	ldr	r3, [fp, #8]
   10690:	ldr	r2, [fp, #20]
   10694:	mov	r0, r1
   10698:	blx	r3
   1069c:	cmn	r0, #1
   106a0:	beq	1065c <readstat_parse_por+0xf0>
   106a4:	add	r3, sp, #96	; 0x60
   106a8:	mov	r2, #200	; 0xc8
   106ac:	mov	r1, r3
   106b0:	mov	r0, r4
   106b4:	str	r3, [sp, #32]
   106b8:	bl	fe58 <read_bytes>
   106bc:	cmp	r0, #200	; 0xc8
   106c0:	beq	106cc <readstat_parse_por+0x160>
   106c4:	mov	r5, #2
   106c8:	b	10660 <readstat_parse_por+0xf4>
   106cc:	add	r3, r4, #73	; 0x49
   106d0:	ldr	r2, [sp, #32]
   106d4:	str	r3, [sp, #40]	; 0x28
   106d8:	mov	r3, #0
   106dc:	str	r3, [sp]
   106e0:	add	r2, r2, #60	; 0x3c
   106e4:	mov	r3, #20
   106e8:	mov	r1, #21
   106ec:	add	r0, r4, #73	; 0x49
   106f0:	bl	427c <readstat_convert@plt>
   106f4:	subs	r5, r0, #0
   106f8:	bne	10660 <readstat_parse_por+0xf4>
   106fc:	add	r7, sp, #296	; 0x128
   10700:	mov	r2, #256	; 0x100
   10704:	mov	r1, r7
   10708:	mov	r0, r4
   1070c:	bl	fe58 <read_bytes>
   10710:	cmp	r0, #256	; 0x100
   10714:	bne	106c4 <readstat_parse_por+0x158>
   10718:	ldrb	r3, [sp, #422]	; 0x1a6
   1071c:	strb	r3, [r4, #48]	; 0x30
   10720:	ldr	r3, [pc, #1336]	; 10c60 <readstat_parse_por+0x6f4>
   10724:	ldr	r2, [r6, r3]
   10728:	ldrsb	r1, [r5, r2]
   1072c:	cmp	r1, #0
   10730:	beq	10744 <readstat_parse_por+0x1d8>
   10734:	ldrb	r3, [r7, r5]
   10738:	add	r3, r4, r3, lsl #1
   1073c:	strh	r1, [r3, #94]	; 0x5e
   10740:	b	1075c <readstat_parse_por+0x1f0>
   10744:	ldr	r1, [pc, #1304]	; 10c64 <readstat_parse_por+0x6f8>
   10748:	lsl	r3, r5, #1
   1074c:	ldr	r1, [r6, r1]
   10750:	ldrh	r1, [r3, r1]
   10754:	cmp	r1, #0
   10758:	bne	10734 <readstat_parse_por+0x1c8>
   1075c:	add	r5, r5, #1
   10760:	cmp	r5, #256	; 0x100
   10764:	bne	10728 <readstat_parse_por+0x1bc>
   10768:	ldr	r2, [pc, #1268]	; 10c64 <readstat_parse_por+0x6f8>
   1076c:	ldrb	r3, [sp, #360]	; 0x168
   10770:	mov	r0, r4
   10774:	ldr	r2, [r6, r2]
   10778:	add	r3, r4, r3, lsl #1
   1077c:	ldrh	r2, [r2, #128]	; 0x80
   10780:	strh	r2, [r3, #94]	; 0x5e
   10784:	add	r3, sp, #64	; 0x40
   10788:	mov	r2, #8
   1078c:	mov	r1, r3
   10790:	str	r3, [sp, #24]
   10794:	bl	fe58 <read_bytes>
   10798:	cmp	r0, #8
   1079c:	mov	r5, r0
   107a0:	bne	106c4 <readstat_parse_por+0x158>
   107a4:	add	r3, sp, #80	; 0x50
   107a8:	str	r3, [sp, #20]
   107ac:	sub	r6, r3, #8
   107b0:	add	r3, r4, #94	; 0x5e
   107b4:	str	r3, [sp]
   107b8:	mov	r2, r6
   107bc:	mov	r3, r0
   107c0:	mov	r1, r0
   107c4:	ldr	r0, [sp, #24]
   107c8:	bl	42a0 <por_utf8_encode@plt>
   107cc:	cmn	r0, #1
   107d0:	mov	r2, r0
   107d4:	bne	10824 <readstat_parse_por+0x2b8>
   107d8:	ldr	r3, [r4, #24]
   107dc:	cmp	r3, #0
   107e0:	beq	1081c <readstat_parse_por+0x2b0>
   107e4:	ldr	r3, [sp, #24]
   107e8:	ldr	r2, [pc, #1144]	; 10c68 <readstat_parse_por+0x6fc>
   107ec:	str	r3, [sp]
   107f0:	mov	r3, r5
   107f4:	add	r5, sp, #2080	; 0x820
   107f8:	add	r5, r5, #8
   107fc:	mov	r1, #1024	; 0x400
   10800:	add	r2, pc, r2
   10804:	mov	r0, r5
   10808:	bl	42c4 <snprintf@plt>
   1080c:	ldr	r3, [r4, #24]
   10810:	ldr	r1, [r4, #36]	; 0x24
   10814:	mov	r0, r5
   10818:	blx	r3
   1081c:	mov	r5, #16
   10820:	b	10660 <readstat_parse_por+0xf4>
   10824:	ldr	r0, [pc, #1088]	; 10c6c <readstat_parse_por+0x700>
   10828:	mov	r1, r6
   1082c:	add	r0, pc, r0
   10830:	bl	454c <strncmp@plt>
   10834:	subs	r3, r0, #0
   10838:	str	r3, [sp, #28]
   1083c:	beq	10848 <readstat_parse_por+0x2dc>
   10840:	mov	r5, #5
   10844:	b	10660 <readstat_parse_por+0xf4>
   10848:	mvn	r3, #0
   1084c:	str	r3, [r4, #636]	; 0x27c
   10850:	mov	r0, r4
   10854:	bl	4054 <read_version_and_timestamp@plt>
   10858:	subs	r5, r0, #0
   1085c:	bne	10660 <readstat_parse_por+0xf4>
   10860:	ldr	r3, [pc, #1032]	; 10c70 <readstat_parse_por+0x704>
   10864:	vldr	d8, [pc, #988]	; 10c48 <readstat_parse_por+0x6dc>
   10868:	vldr	d9, [pc, #992]	; 10c50 <readstat_parse_por+0x6e4>
   1086c:	add	r3, pc, r3
   10870:	str	r3, [sp, #44]	; 0x2c
   10874:	add	r3, sp, #808	; 0x328
   10878:	str	r3, [sp, #36]	; 0x24
   1087c:	add	r6, sp, #2096	; 0x830
   10880:	sub	sl, r6, #8
   10884:	mov	r2, #1
   10888:	mov	r1, sl
   1088c:	mov	r0, r4
   10890:	bl	fe58 <read_bytes>
   10894:	cmp	r0, #1
   10898:	bne	10840 <readstat_parse_por+0x2d4>
   1089c:	ldrb	r3, [sp, #2088]	; 0x828
   108a0:	add	r3, r4, r3, lsl #1
   108a4:	ldrh	r3, [r3, #94]	; 0x5e
   108a8:	sub	r3, r3, #49	; 0x31
   108ac:	cmp	r3, #21
   108b0:	addls	pc, pc, r3, lsl #2
   108b4:	b	10840 <readstat_parse_por+0x2d4>
   108b8:	b	10910 <readstat_parse_por+0x3a4>
   108bc:	b	10910 <readstat_parse_por+0x3a4>
   108c0:	b	10910 <readstat_parse_por+0x3a4>
   108c4:	b	10924 <readstat_parse_por+0x3b8>
   108c8:	b	109f8 <readstat_parse_por+0x48c>
   108cc:	b	10a24 <readstat_parse_por+0x4b8>
   108d0:	b	10a30 <readstat_parse_por+0x4c4>
   108d4:	b	10b50 <readstat_parse_por+0x5e4>
   108d8:	b	10ca0 <readstat_parse_por+0x734>
   108dc:	b	10840 <readstat_parse_por+0x2d4>
   108e0:	b	10840 <readstat_parse_por+0x2d4>
   108e4:	b	10840 <readstat_parse_por+0x2d4>
   108e8:	b	10840 <readstat_parse_por+0x2d4>
   108ec:	b	10840 <readstat_parse_por+0x2d4>
   108f0:	b	10840 <readstat_parse_por+0x2d4>
   108f4:	b	10840 <readstat_parse_por+0x2d4>
   108f8:	b	10d00 <readstat_parse_por+0x794>
   108fc:	b	10bd4 <readstat_parse_por+0x668>
   10900:	b	10d80 <readstat_parse_por+0x814>
   10904:	b	10e08 <readstat_parse_por+0x89c>
   10908:	b	10fc0 <readstat_parse_por+0xa54>
   1090c:	b	11040 <readstat_parse_por+0xad4>
   10910:	mov	r2, #256	; 0x100
   10914:	add	r1, sp, #552	; 0x228
   10918:	mov	r0, r4
   1091c:	bl	102cc <read_string>
   10920:	b	10c38 <readstat_parse_por+0x6cc>
   10924:	ldr	r3, [r4, #632]	; 0x278
   10928:	cmp	r3, #0
   1092c:	bne	10840 <readstat_parse_por+0x2d4>
   10930:	add	r2, sp, #1056	; 0x420
   10934:	add	r2, r2, #8
   10938:	ldr	r1, [pc, #824]	; 10c78 <readstat_parse_por+0x70c>
   1093c:	mov	r0, r4
   10940:	bl	5524 <read_integer_in_range.constprop.1>
   10944:	subs	r5, r0, #0
   10948:	bne	10660 <readstat_parse_por+0xf4>
   1094c:	ldr	r0, [sp, #1064]	; 0x428
   10950:	mov	r1, #4
   10954:	str	r0, [r4, #632]	; 0x278
   10958:	bl	400c <readstat_calloc@plt>
   1095c:	mov	r1, #280	; 0x118
   10960:	str	r0, [r4, #648]	; 0x288
   10964:	ldr	r0, [r4, #632]	; 0x278
   10968:	bl	400c <readstat_calloc@plt>
   1096c:	ldr	r3, [r4, #648]	; 0x288
   10970:	cmp	r0, #0
   10974:	cmpne	r3, #0
   10978:	str	r0, [r4, #652]	; 0x28c
   1097c:	beq	109f0 <readstat_parse_por+0x484>
   10980:	ldr	r7, [r4]
   10984:	cmp	r7, #0
   10988:	beq	1087c <readstat_parse_por+0x310>
   1098c:	mov	r2, #56	; 0x38
   10990:	mov	r1, r5
   10994:	mov	r0, sl
   10998:	bl	42e8 <memset@plt>
   1099c:	mvn	r2, #0
   109a0:	mvn	r3, #0
   109a4:	ldr	r1, [r4, #36]	; 0x24
   109a8:	strd	r2, [r6, #-8]
   109ac:	ldr	r2, [r4, #632]	; 0x278
   109b0:	mov	r0, sl
   109b4:	asr	r3, r2, #31
   109b8:	strd	r2, [r6]
   109bc:	ldr	r2, [r4, #60]	; 0x3c
   109c0:	ldr	r3, [r4, #56]	; 0x38
   109c4:	str	r3, [sp, #2104]	; 0x838
   109c8:	str	r3, [sp, #2108]	; 0x83c
   109cc:	asr	r3, r2, #31
   109d0:	strd	r2, [r6, #16]
   109d4:	ldr	r3, [sp, #40]	; 0x28
   109d8:	str	r3, [sp, #2132]	; 0x854
   109dc:	blx	r7
   109e0:	cmp	r0, #0
   109e4:	beq	1087c <readstat_parse_por+0x310>
   109e8:	mov	r5, #4
   109ec:	b	10660 <readstat_parse_por+0xf4>
   109f0:	mov	r5, #3
   109f4:	b	10660 <readstat_parse_por+0xf4>
   109f8:	mov	r3, #0
   109fc:	mov	r2, sl
   10a00:	mov	r1, #100	; 0x64
   10a04:	mov	r0, r4
   10a08:	str	r3, [sp, #2088]	; 0x828
   10a0c:	bl	5524 <read_integer_in_range.constprop.1>
   10a10:	subs	r5, r0, #0
   10a14:	bne	10660 <readstat_parse_por+0xf4>
   10a18:	ldr	r3, [sp, #2088]	; 0x828
   10a1c:	str	r3, [r4, #608]	; 0x260
   10a20:	b	1087c <readstat_parse_por+0x310>
   10a24:	mov	r2, #9
   10a28:	add	r1, r4, #64	; 0x40
   10a2c:	b	10918 <readstat_parse_por+0x3ac>
   10a30:	ldr	r8, [r4, #636]	; 0x27c
   10a34:	ldr	r2, [r4, #632]	; 0x278
   10a38:	add	r3, r8, #1
   10a3c:	cmp	r3, r2
   10a40:	str	r3, [r4, #636]	; 0x27c
   10a44:	beq	10840 <readstat_parse_por+0x2d4>
   10a48:	mov	r8, #280	; 0x118
   10a4c:	ldr	r9, [r4, #652]	; 0x28c
   10a50:	mul	r8, r8, r3
   10a54:	add	r7, sp, #1056	; 0x420
   10a58:	add	r6, r9, r8
   10a5c:	add	r3, r6, #24
   10a60:	str	r3, [sp, #2088]	; 0x828
   10a64:	add	r3, r6, #36	; 0x24
   10a68:	str	r3, [sp, #2092]	; 0x82c
   10a6c:	add	r7, r7, #8
   10a70:	mvn	r3, #0
   10a74:	str	r3, [r6, #4]
   10a78:	mov	r2, r7
   10a7c:	ldr	r1, [pc, #500]	; 10c78 <readstat_parse_por+0x70c>
   10a80:	mov	r0, r4
   10a84:	bl	5524 <read_integer_in_range.constprop.1>
   10a88:	subs	r5, r0, #0
   10a8c:	bne	10660 <readstat_parse_por+0xf4>
   10a90:	ldr	r3, [sp, #1064]	; 0x428
   10a94:	mov	r2, #9
   10a98:	cmp	r3, #0
   10a9c:	str	r3, [r6, #16]
   10aa0:	moveq	r3, #5
   10aa4:	streq	r3, [r9, r8]
   10aa8:	strne	r5, [r9, r8]
   10aac:	add	r8, r6, #187	; 0xbb
   10ab0:	mov	r1, r8
   10ab4:	mov	r0, r4
   10ab8:	bl	102cc <read_string>
   10abc:	subs	r5, r0, #0
   10ac0:	bne	10660 <readstat_parse_por+0xf4>
   10ac4:	mov	r1, r6
   10ac8:	ldr	r2, [r4, #656]	; 0x290
   10acc:	mov	r0, r8
   10ad0:	bl	4540 <ck_str_hash_insert@plt>
   10ad4:	ldr	r6, [sp, #28]
   10ad8:	mov	r9, #120	; 0x78
   10adc:	mov	r2, r7
   10ae0:	mov	r1, r9
   10ae4:	mov	r0, r4
   10ae8:	ldr	r8, [sl, r6, lsl #2]
   10aec:	bl	5524 <read_integer_in_range.constprop.1>
   10af0:	subs	r5, r0, #0
   10af4:	bne	10660 <readstat_parse_por+0xf4>
   10af8:	ldr	r3, [sp, #1064]	; 0x428
   10afc:	mov	r2, r7
   10b00:	str	r3, [r8]
   10b04:	ldr	r1, [pc, #360]	; 10c74 <readstat_parse_por+0x708>
   10b08:	mov	r0, r4
   10b0c:	bl	5524 <read_integer_in_range.constprop.1>
   10b10:	subs	r5, r0, #0
   10b14:	bne	10660 <readstat_parse_por+0xf4>
   10b18:	ldr	r3, [sp, #1064]	; 0x428
   10b1c:	mov	r2, r7
   10b20:	str	r3, [r8, #4]
   10b24:	mov	r1, #100	; 0x64
   10b28:	mov	r0, r4
   10b2c:	bl	5524 <read_integer_in_range.constprop.1>
   10b30:	subs	r5, r0, #0
   10b34:	bne	10660 <readstat_parse_por+0xf4>
   10b38:	ldr	r3, [sp, #1064]	; 0x428
   10b3c:	add	r6, r6, #1
   10b40:	cmp	r6, #2
   10b44:	str	r3, [r8, #8]
   10b48:	bne	10adc <readstat_parse_por+0x570>
   10b4c:	b	1087c <readstat_parse_por+0x310>
   10b50:	ldr	r3, [r4, #636]	; 0x27c
   10b54:	cmp	r3, #0
   10b58:	blt	10840 <readstat_parse_por+0x2d4>
   10b5c:	ldr	r2, [r4, #632]	; 0x278
   10b60:	cmp	r3, r2
   10b64:	bge	10840 <readstat_parse_por+0x2d4>
   10b68:	mov	r2, #280	; 0x118
   10b6c:	mul	r3, r2, r3
   10b70:	ldr	r2, [r4, #652]	; 0x28c
   10b74:	add	r6, r2, r3
   10b78:	ldr	r3, [r2, r3]
   10b7c:	ldr	r1, [r6, #52]	; 0x34
   10b80:	cmp	r3, #5
   10b84:	bne	10bb8 <readstat_parse_por+0x64c>
   10b88:	add	r1, r1, #8
   10b8c:	mov	r0, r4
   10b90:	add	r1, r6, r1, lsl #3
   10b94:	bl	54e8 <read_double>
   10b98:	subs	r5, r0, #0
   10b9c:	bne	10660 <readstat_parse_por+0xf4>
   10ba0:	ldr	r3, [r6, #52]	; 0x34
   10ba4:	cmp	r3, #2
   10ba8:	bgt	10840 <readstat_parse_por+0x2d4>
   10bac:	add	r3, r3, #1
   10bb0:	str	r3, [r6, #52]	; 0x34
   10bb4:	b	1087c <readstat_parse_por+0x310>
   10bb8:	add	r1, r1, r1, lsl #5
   10bbc:	add	r1, r1, #88	; 0x58
   10bc0:	mov	r2, #33	; 0x21
   10bc4:	add	r1, r6, r1
   10bc8:	mov	r0, r4
   10bcc:	bl	102cc <read_string>
   10bd0:	b	10b98 <readstat_parse_por+0x62c>
   10bd4:	ldr	r3, [r4, #636]	; 0x27c
   10bd8:	cmp	r3, #0
   10bdc:	blt	10840 <readstat_parse_por+0x2d4>
   10be0:	ldr	r2, [r4, #632]	; 0x278
   10be4:	cmp	r3, r2
   10be8:	beq	10840 <readstat_parse_por+0x2d4>
   10bec:	mov	r2, #280	; 0x118
   10bf0:	mov	r1, #1
   10bf4:	mul	r3, r2, r3
   10bf8:	ldr	r2, [r4, #652]	; 0x28c
   10bfc:	add	r6, r2, r3
   10c00:	ldr	r3, [r2, r3]
   10c04:	str	r1, [r6, #56]	; 0x38
   10c08:	cmp	r3, #5
   10c0c:	mov	r1, #2
   10c10:	str	r1, [r6, #52]	; 0x34
   10c14:	bne	10c7c <readstat_parse_por+0x710>
   10c18:	add	r1, r6, #64	; 0x40
   10c1c:	mov	r0, r4
   10c20:	bl	54e8 <read_double>
   10c24:	subs	r5, r0, #0
   10c28:	bne	10660 <readstat_parse_por+0xf4>
   10c2c:	add	r1, r6, #72	; 0x48
   10c30:	mov	r0, r4
   10c34:	bl	54e8 <read_double>
   10c38:	mov	r5, r0
   10c3c:	cmp	r5, #0
   10c40:	beq	1087c <readstat_parse_por+0x310>
   10c44:	b	10660 <readstat_parse_por+0xf4>
   10c48:	.word	0x00000000
   10c4c:	.word	0x7ff00000
   10c50:	.word	0x00000000
   10c54:	.word	0xfff00000
   10c58:	.word	0x00030a60
   10c5c:	.word	0x00011332
   10c60:	.word	0x00000308
   10c64:	.word	0x000002fc
   10c68:	.word	0x0001184c
   10c6c:	.word	0x00011844
   10c70:	.word	0x000117d7
   10c74:	.word	0x00004e20
   10c78:	.word	0x000f4240
   10c7c:	mov	r2, #33	; 0x21
   10c80:	add	r1, r6, #88	; 0x58
   10c84:	mov	r0, r4
   10c88:	bl	102cc <read_string>
   10c8c:	subs	r5, r0, #0
   10c90:	bne	10660 <readstat_parse_por+0xf4>
   10c94:	mov	r2, #33	; 0x21
   10c98:	add	r1, r6, #121	; 0x79
   10c9c:	b	10918 <readstat_parse_por+0x3ac>
   10ca0:	ldr	r3, [r4, #636]	; 0x27c
   10ca4:	cmp	r3, #0
   10ca8:	blt	10840 <readstat_parse_por+0x2d4>
   10cac:	ldr	r2, [r4, #632]	; 0x278
   10cb0:	cmp	r3, r2
   10cb4:	beq	10840 <readstat_parse_por+0x2d4>
   10cb8:	mov	r2, #280	; 0x118
   10cbc:	mov	r0, #1
   10cc0:	mul	r3, r2, r3
   10cc4:	ldr	r2, [r4, #652]	; 0x28c
   10cc8:	add	r1, r2, r3
   10ccc:	ldr	r3, [r2, r3]
   10cd0:	str	r0, [r1, #56]	; 0x38
   10cd4:	cmp	r3, #5
   10cd8:	mov	r0, #2
   10cdc:	str	r0, [r1, #52]	; 0x34
   10ce0:	vstreq	d9, [r1, #64]	; 0x40
   10ce4:	addeq	r1, r1, #72	; 0x48
   10ce8:	beq	10c30 <readstat_parse_por+0x6c4>
   10cec:	mov	r3, #0
   10cf0:	strb	r3, [r1, #88]	; 0x58
   10cf4:	mov	r2, #33	; 0x21
   10cf8:	add	r1, r1, #121	; 0x79
   10cfc:	b	10918 <readstat_parse_por+0x3ac>
   10d00:	ldr	r3, [r4, #636]	; 0x27c
   10d04:	cmp	r3, #0
   10d08:	blt	10840 <readstat_parse_por+0x2d4>
   10d0c:	ldr	r2, [r4, #632]	; 0x278
   10d10:	cmp	r3, r2
   10d14:	beq	10840 <readstat_parse_por+0x2d4>
   10d18:	mov	r2, #280	; 0x118
   10d1c:	mov	r1, #1
   10d20:	mul	r3, r2, r3
   10d24:	ldr	r2, [r4, #652]	; 0x28c
   10d28:	add	r6, r2, r3
   10d2c:	ldr	r3, [r2, r3]
   10d30:	str	r1, [r6, #56]	; 0x38
   10d34:	cmp	r3, #5
   10d38:	mov	r1, #2
   10d3c:	str	r1, [r6, #52]	; 0x34
   10d40:	bne	10d60 <readstat_parse_por+0x7f4>
   10d44:	add	r1, r6, #64	; 0x40
   10d48:	mov	r0, r4
   10d4c:	bl	54e8 <read_double>
   10d50:	subs	r5, r0, #0
   10d54:	bne	10660 <readstat_parse_por+0xf4>
   10d58:	vstr	d8, [r6, #72]	; 0x48
   10d5c:	b	1087c <readstat_parse_por+0x310>
   10d60:	mov	r2, #33	; 0x21
   10d64:	add	r1, r6, #88	; 0x58
   10d68:	mov	r0, r4
   10d6c:	bl	102cc <read_string>
   10d70:	subs	r5, r0, #0
   10d74:	bne	10660 <readstat_parse_por+0xf4>
   10d78:	strb	r5, [r6, #121]	; 0x79
   10d7c:	b	1087c <readstat_parse_por+0x310>
   10d80:	ldr	r6, [r4, #636]	; 0x27c
   10d84:	cmp	r6, #0
   10d88:	blt	10840 <readstat_parse_por+0x2d4>
   10d8c:	ldr	r3, [r4, #632]	; 0x278
   10d90:	cmp	r6, r3
   10d94:	beq	10840 <readstat_parse_por+0x2d4>
   10d98:	ldr	r3, [r4, #652]	; 0x28c
   10d9c:	mov	r2, #280	; 0x118
   10da0:	mov	r1, sl
   10da4:	mla	r6, r2, r6, r3
   10da8:	mov	r0, r4
   10dac:	mov	r2, #256	; 0x100
   10db0:	bl	102cc <read_string>
   10db4:	subs	r5, r0, #0
   10db8:	bne	10660 <readstat_parse_por+0xf4>
   10dbc:	mov	r0, sl
   10dc0:	bl	424c <strlen@plt>
   10dc4:	lsl	r1, r0, #2
   10dc8:	add	r1, r1, #1
   10dcc:	ldr	r0, [r6, #264]	; 0x108
   10dd0:	bl	403c <realloc@plt>
   10dd4:	mov	r5, r0
   10dd8:	str	r0, [r6, #264]	; 0x108
   10ddc:	mov	r0, sl
   10de0:	bl	424c <strlen@plt>
   10de4:	ldr	r2, [r4, #612]	; 0x264
   10de8:	str	r2, [sp]
   10dec:	mov	r2, sl
   10df0:	lsl	r1, r0, #2
   10df4:	mov	r3, r0
   10df8:	add	r1, r1, #1
   10dfc:	mov	r0, r5
   10e00:	bl	427c <readstat_convert@plt>
   10e04:	b	10c38 <readstat_parse_por+0x6cc>
   10e08:	add	r8, sp, #1056	; 0x420
   10e0c:	mov	r3, #0
   10e10:	add	r8, r8, #8
   10e14:	str	r3, [sp, #48]	; 0x30
   10e18:	str	r3, [sp, #52]	; 0x34
   10e1c:	ldr	r2, [sp, #44]	; 0x2c
   10e20:	ldr	r3, [r4, #624]	; 0x270
   10e24:	mov	r1, #256	; 0x100
   10e28:	mov	r0, r8
   10e2c:	bl	42c4 <snprintf@plt>
   10e30:	add	r2, sp, #48	; 0x30
   10e34:	ldr	r1, [pc, #-452]	; 10c78 <readstat_parse_por+0x70c>
   10e38:	mov	r0, r4
   10e3c:	bl	5524 <read_integer_in_range.constprop.1>
   10e40:	subs	r5, r0, #0
   10e44:	bne	10660 <readstat_parse_por+0xf4>
   10e48:	ldr	r9, [sp, #28]
   10e4c:	mov	r7, #5
   10e50:	mov	r6, #256	; 0x100
   10e54:	ldr	r3, [sp, #48]	; 0x30
   10e58:	cmp	r9, r3
   10e5c:	blt	10ea4 <readstat_parse_por+0x938>
   10e60:	ldr	r3, [sp, #24]
   10e64:	ldr	r1, [pc, #-500]	; 10c78 <readstat_parse_por+0x70c>
   10e68:	sub	r2, r3, #12
   10e6c:	mov	r0, r4
   10e70:	bl	5524 <read_integer_in_range.constprop.1>
   10e74:	subs	r5, r0, #0
   10e78:	bne	10660 <readstat_parse_por+0xf4>
   10e7c:	ldr	r3, [sp, #24]
   10e80:	ldr	r6, [sp, #28]
   10e84:	sub	r9, r3, #8
   10e88:	ldr	r3, [sp, #52]	; 0x34
   10e8c:	cmp	r6, r3
   10e90:	blt	10ee0 <readstat_parse_por+0x974>
   10e94:	ldr	r3, [r4, #624]	; 0x270
   10e98:	add	r3, r3, #1
   10e9c:	str	r3, [r4, #624]	; 0x270
   10ea0:	b	1087c <readstat_parse_por+0x310>
   10ea4:	mov	r2, r6
   10ea8:	ldr	r1, [sp, #36]	; 0x24
   10eac:	mov	r0, r4
   10eb0:	bl	102cc <read_string>
   10eb4:	subs	r5, r0, #0
   10eb8:	bne	10660 <readstat_parse_por+0xf4>
   10ebc:	ldr	r1, [r4, #656]	; 0x290
   10ec0:	ldr	r0, [sp, #36]	; 0x24
   10ec4:	bl	4018 <ck_str_hash_lookup@plt>
   10ec8:	add	r9, r9, #1
   10ecc:	cmp	r0, #0
   10ed0:	ldrne	r3, [r4, #624]	; 0x270
   10ed4:	ldrne	r7, [r0]
   10ed8:	strne	r3, [r0, #4]
   10edc:	b	10e54 <readstat_parse_por+0x8e8>
   10ee0:	mov	r2, #16
   10ee4:	mov	r1, #0
   10ee8:	ldr	r0, [sp, #20]
   10eec:	bl	42e8 <memset@plt>
   10ef0:	cmp	r7, #0
   10ef4:	str	r7, [sp, #88]	; 0x58
   10ef8:	bne	10f48 <readstat_parse_por+0x9dc>
   10efc:	mov	r2, #256	; 0x100
   10f00:	ldr	r1, [sp, #36]	; 0x24
   10f04:	mov	r0, r4
   10f08:	bl	102cc <read_string>
   10f0c:	subs	r5, r0, #0
   10f10:	bne	10c3c <readstat_parse_por+0x6d0>
   10f14:	mov	r2, #256	; 0x100
   10f18:	mov	r1, sl
   10f1c:	mov	r0, r4
   10f20:	bl	102cc <read_string>
   10f24:	subs	r5, r0, #0
   10f28:	bne	10c3c <readstat_parse_por+0x6d0>
   10f2c:	ldr	r3, [sp, #36]	; 0x24
   10f30:	str	r3, [sp, #80]	; 0x50
   10f34:	ldr	r5, [r4, #20]
   10f38:	cmp	r5, #0
   10f3c:	bne	10f88 <readstat_parse_por+0xa1c>
   10f40:	add	r6, r6, #1
   10f44:	b	10e88 <readstat_parse_por+0x91c>
   10f48:	mov	r1, r9
   10f4c:	mov	r0, r4
   10f50:	bl	54e8 <read_double>
   10f54:	subs	r5, r0, #0
   10f58:	bne	10c3c <readstat_parse_por+0x6d0>
   10f5c:	mov	r2, #256	; 0x100
   10f60:	mov	r1, sl
   10f64:	mov	r0, r4
   10f68:	bl	102cc <read_string>
   10f6c:	subs	r5, r0, #0
   10f70:	bne	10c3c <readstat_parse_por+0x6d0>
   10f74:	ldr	r3, [sp, #24]
   10f78:	ldr	r1, [sp, #20]
   10f7c:	ldrd	r2, [r3, #-8]
   10f80:	strd	r2, [r1]
   10f84:	b	10f34 <readstat_parse_por+0x9c8>
   10f88:	ldr	r3, [r4, #36]	; 0x24
   10f8c:	str	sl, [sp, #8]
   10f90:	str	r3, [sp, #12]
   10f94:	ldr	r3, [sp, #32]
   10f98:	ldmdb	r3, {r0, r1}
   10f9c:	ldr	r3, [sp, #20]
   10fa0:	stm	sp, {r0, r1}
   10fa4:	mov	r0, r8
   10fa8:	ldm	r3, {r2, r3}
   10fac:	blx	r5
   10fb0:	cmp	r0, #0
   10fb4:	beq	10f40 <readstat_parse_por+0x9d4>
   10fb8:	mov	r5, #4
   10fbc:	b	10c3c <readstat_parse_por+0x6d0>
   10fc0:	add	r2, sp, #1056	; 0x420
   10fc4:	mov	r3, #0
   10fc8:	add	r2, r2, #8
   10fcc:	ldr	r1, [pc, #-860]	; 10c78 <readstat_parse_por+0x70c>
   10fd0:	mov	r0, r4
   10fd4:	str	r3, [sp, #1064]	; 0x428
   10fd8:	bl	5524 <read_integer_in_range.constprop.1>
   10fdc:	subs	r5, r0, #0
   10fe0:	bne	10660 <readstat_parse_por+0xf4>
   10fe4:	ldr	r6, [sp, #28]
   10fe8:	mov	r7, #256	; 0x100
   10fec:	ldr	r3, [sp, #1064]	; 0x428
   10ff0:	cmp	r6, r3
   10ff4:	bge	1087c <readstat_parse_por+0x310>
   10ff8:	mov	r2, r7
   10ffc:	mov	r1, sl
   11000:	mov	r0, r4
   11004:	bl	102cc <read_string>
   11008:	subs	r5, r0, #0
   1100c:	bne	10c3c <readstat_parse_por+0x6d0>
   11010:	ldr	r3, [r4, #4]
   11014:	cmp	r3, #0
   11018:	bne	11024 <readstat_parse_por+0xab8>
   1101c:	add	r6, r6, #1
   11020:	b	10fec <readstat_parse_por+0xa80>
   11024:	ldr	r2, [r4, #36]	; 0x24
   11028:	mov	r1, sl
   1102c:	mov	r0, r6
   11030:	blx	r3
   11034:	cmp	r0, #0
   11038:	beq	1101c <readstat_parse_por+0xab0>
   1103c:	b	109e8 <readstat_parse_por+0x47c>
   11040:	ldr	r3, [r4, #632]	; 0x278
   11044:	ldr	r2, [r4, #636]	; 0x27c
   11048:	sub	r3, r3, #1
   1104c:	cmp	r2, r3
   11050:	movne	r5, #8
   11054:	bne	10660 <readstat_parse_por+0xf4>
   11058:	mov	r0, r4
   1105c:	bl	4588 <handle_variables@plt>
   11060:	subs	r5, r0, #0
   11064:	bne	10660 <readstat_parse_por+0xf4>
   11068:	ldr	r3, [r4, #16]
   1106c:	cmp	r3, #0
   11070:	beq	10660 <readstat_parse_por+0xf4>
   11074:	ldr	r3, [r4, #632]	; 0x278
   11078:	cmp	r3, #0
   1107c:	beq	10660 <readstat_parse_por+0xf4>
   11080:	vldr	d8, [pc, #704]	; 11348 <readstat_parse_por+0xddc>
   11084:	ldr	r3, [sp, #32]
   11088:	sub	r3, r3, #8
   1108c:	str	r3, [sp, #36]	; 0x24
   11090:	add	r8, sp, #1056	; 0x420
   11094:	ldr	r7, [sp, #28]
   11098:	add	r8, r8, #8
   1109c:	mov	r3, #0
   110a0:	str	r3, [sp, #56]	; 0x38
   110a4:	ldr	r3, [r4, #632]	; 0x278
   110a8:	cmp	r7, r3
   110ac:	blt	11110 <readstat_parse_por+0xba4>
   110b0:	ldr	r3, [r4, #644]	; 0x284
   110b4:	ldr	r2, [r4, #36]	; 0x24
   110b8:	cmp	r3, #0
   110bc:	subne	r3, r3, #1
   110c0:	ldreq	r3, [r4, #628]	; 0x274
   110c4:	strne	r3, [r4, #644]	; 0x284
   110c8:	addeq	r3, r3, #1
   110cc:	streq	r3, [r4, #628]	; 0x274
   110d0:	ldr	r3, [r4, #44]	; 0x2c
   110d4:	ldr	r1, [r4, #28]
   110d8:	ldr	r0, [r4, #32]
   110dc:	ldr	r6, [r3, #16]
   110e0:	ldr	r3, [r3, #20]
   110e4:	blx	r6
   110e8:	cmp	r0, #0
   110ec:	bne	11108 <readstat_parse_por+0xb9c>
   110f0:	ldr	r3, [r4, #640]	; 0x280
   110f4:	cmp	r3, #0
   110f8:	ble	11090 <readstat_parse_por+0xb24>
   110fc:	ldr	r2, [r4, #628]	; 0x274
   11100:	cmp	r3, r2
   11104:	bne	11090 <readstat_parse_por+0xb24>
   11108:	mov	r5, r0
   1110c:	b	10660 <readstat_parse_por+0xf4>
   11110:	mov	r6, #280	; 0x118
   11114:	ldr	r9, [r4, #652]	; 0x28c
   11118:	mul	r6, r6, r7
   1111c:	mov	r2, #16
   11120:	add	r3, r9, r6
   11124:	mov	r1, #0
   11128:	ldr	r0, [sp, #20]
   1112c:	str	r3, [sp, #32]
   11130:	bl	42e8 <memset@plt>
   11134:	ldr	r6, [r9, r6]
   11138:	cmp	r6, #0
   1113c:	str	r6, [sp, #88]	; 0x58
   11140:	bne	1121c <readstat_parse_por+0xcb0>
   11144:	ldr	r3, [sp, #24]
   11148:	add	r9, sp, #808	; 0x328
   1114c:	sub	r3, r3, #8
   11150:	mov	r2, #256	; 0x100
   11154:	mov	r1, r9
   11158:	mov	r0, r4
   1115c:	bl	10144 <maybe_read_string>
   11160:	subs	r6, r0, #0
   11164:	beq	111b8 <readstat_parse_por+0xc4c>
   11168:	ldr	r3, [r4, #24]
   1116c:	cmp	r3, #0
   11170:	beq	111d0 <readstat_parse_por+0xc64>
   11174:	ldr	r3, [r4, #628]	; 0x274
   11178:	ldr	r2, [pc, #464]	; 11350 <readstat_parse_por+0xde4>
   1117c:	add	r3, r3, #1
   11180:	str	r3, [sp]
   11184:	add	r5, sp, #1056	; 0x420
   11188:	ldr	r3, [sp, #32]
   1118c:	add	r5, r5, #8
   11190:	add	r3, r3, #187	; 0xbb
   11194:	mov	r1, #1024	; 0x400
   11198:	add	r2, pc, r2
   1119c:	mov	r0, r5
   111a0:	bl	42c4 <snprintf@plt>
   111a4:	ldr	r3, [r4, #24]
   111a8:	ldr	r1, [r4, #36]	; 0x24
   111ac:	mov	r0, r5
   111b0:	blx	r3
   111b4:	b	111d0 <readstat_parse_por+0xc64>
   111b8:	ldr	r3, [sp, #56]	; 0x38
   111bc:	cmp	r3, #0
   111c0:	beq	111d8 <readstat_parse_por+0xc6c>
   111c4:	cmp	r7, #0
   111c8:	moveq	r6, r5
   111cc:	movne	r6, #5
   111d0:	mov	r5, r6
   111d4:	b	10660 <readstat_parse_por+0xf4>
   111d8:	mov	r0, r9
   111dc:	bl	424c <strlen@plt>
   111e0:	ldr	r3, [r4, #612]	; 0x264
   111e4:	mov	r2, r9
   111e8:	str	r3, [sp]
   111ec:	ldr	r1, [pc, #352]	; 11354 <readstat_parse_por+0xde8>
   111f0:	mov	r3, r0
   111f4:	mov	r0, sl
   111f8:	bl	427c <readstat_convert@plt>
   111fc:	subs	r6, r0, #0
   11200:	bne	111d0 <readstat_parse_por+0xc64>
   11204:	str	sl, [sp, #80]	; 0x50
   11208:	ldr	r6, [r4, #16]
   1120c:	cmp	r6, #0
   11210:	bne	112ec <readstat_parse_por+0xd80>
   11214:	add	r7, r7, #1
   11218:	b	110a4 <readstat_parse_por+0xb38>
   1121c:	cmp	r6, #5
   11220:	bne	11208 <readstat_parse_por+0xc9c>
   11224:	mov	r2, #1
   11228:	mov	r1, r8
   1122c:	mov	r0, r4
   11230:	bl	fe58 <read_bytes>
   11234:	cmp	r0, #1
   11238:	bne	11278 <readstat_parse_por+0xd0c>
   1123c:	ldrb	r2, [sp, #1064]	; 0x428
   11240:	add	r3, r4, r2, lsl #1
   11244:	ldrh	r3, [r3, #94]	; 0x5e
   11248:	cmp	r3, #90	; 0x5a
   1124c:	streq	r0, [sp, #56]	; 0x38
   11250:	ldreq	r3, [sp, #20]
   11254:	vstreq	d8, [r3]
   11258:	beq	112bc <readstat_parse_por+0xd50>
   1125c:	mov	r3, #0
   11260:	ldr	r1, [sp, #20]
   11264:	mov	r0, r4
   11268:	str	r3, [sp, #56]	; 0x38
   1126c:	bl	ff5c <read_double_with_peek>
   11270:	subs	r6, r0, #0
   11274:	beq	112bc <readstat_parse_por+0xd50>
   11278:	ldr	r3, [r4, #24]
   1127c:	cmp	r3, #0
   11280:	beq	111d0 <readstat_parse_por+0xc64>
   11284:	ldr	r3, [r4, #628]	; 0x274
   11288:	ldr	r2, [pc, #200]	; 11358 <readstat_parse_por+0xdec>
   1128c:	add	r3, r3, #1
   11290:	str	r3, [sp]
   11294:	ldr	r3, [sp, #32]
   11298:	mov	r1, #1024	; 0x400
   1129c:	add	r3, r3, #187	; 0xbb
   112a0:	add	r2, pc, r2
   112a4:	mov	r0, r8
   112a8:	bl	42c4 <snprintf@plt>
   112ac:	ldr	r3, [r4, #24]
   112b0:	ldr	r1, [r4, #36]	; 0x24
   112b4:	mov	r0, r8
   112b8:	b	111b0 <readstat_parse_por+0xc44>
   112bc:	ldr	r3, [sp, #56]	; 0x38
   112c0:	cmp	r3, #0
   112c4:	bne	111c4 <readstat_parse_por+0xc58>
   112c8:	ldr	r3, [sp, #20]
   112cc:	vldr	d7, [r3]
   112d0:	ldrb	r3, [sp, #93]	; 0x5d
   112d4:	vcmp.f64	d7, d7
   112d8:	bic	r3, r3, #1
   112dc:	vmrs	APSR_nzcv, fpscr
   112e0:	orrvs	r3, r3, #1
   112e4:	strb	r3, [sp, #93]	; 0x5d
   112e8:	b	11208 <readstat_parse_por+0xc9c>
   112ec:	ldr	r3, [r4, #648]	; 0x288
   112f0:	ldr	ip, [r3, r7, lsl #2]
   112f4:	ldr	r3, [ip, #2144]	; 0x860
   112f8:	cmp	r3, #0
   112fc:	bne	11214 <readstat_parse_por+0xca8>
   11300:	ldr	r3, [r4, #644]	; 0x284
   11304:	cmp	r3, #0
   11308:	bne	11214 <readstat_parse_por+0xca8>
   1130c:	ldr	r3, [r4, #36]	; 0x24
   11310:	str	r3, [sp, #8]
   11314:	ldr	r3, [sp, #36]	; 0x24
   11318:	ldm	r3, {r0, r1}
   1131c:	ldr	r3, [sp, #20]
   11320:	stm	sp, {r0, r1}
   11324:	mov	r1, ip
   11328:	ldm	r3, {r2, r3}
   1132c:	ldr	r0, [r4, #628]	; 0x274
   11330:	blx	r6
   11334:	cmp	r0, #0
   11338:	beq	11214 <readstat_parse_por+0xca8>
   1133c:	mov	r6, #4
   11340:	b	111d0 <readstat_parse_por+0xc64>
   11344:	nop			; (mov r0, r0)
   11348:	.word	0x00000000
   1134c:	.word	0x7ff80000
   11350:	.word	0x00010ee1
   11354:	.word	0x00000401
   11358:	.word	0x00010dd9
   1135c:	.word	0x00000000

00011360 <por_variable_width>:
   11360:	cmp	r0, #0
   11364:	addeq	r0, r1, #54	; 0x36
   11368:	movne	r0, #54	; 0x36
   1136c:	bx	lr

00011370 <por_metadata_ok>:
   11370:	ldr	r0, [r0, #16]
   11374:	cmp	r0, #0
   11378:	movne	r0, #6
   1137c:	moveq	r0, #0
   11380:	bx	lr

00011384 <por_variable_ok>:
   11384:	push	{r4, r5, r6, lr}
   11388:	bl	43b4 <readstat_variable_get_name@plt>
   1138c:	mov	r4, r0
   11390:	bl	424c <strlen@plt>
   11394:	sub	r0, r0, #1
   11398:	cmp	r0, #7
   1139c:	bhi	11414 <por_variable_ok+0x90>
   113a0:	ldr	r5, [pc, #116]	; 1141c <por_variable_ok+0x98>
   113a4:	sub	ip, r4, #1
   113a8:	mov	lr, #1
   113ac:	ldrb	r1, [ip, #1]!
   113b0:	cmp	r1, #0
   113b4:	bne	113d0 <por_variable_ok+0x4c>
   113b8:	ldrb	r0, [r4]
   113bc:	sub	r0, r0, #64	; 0x40
   113c0:	cmp	r0, #26
   113c4:	movhi	r0, #25
   113c8:	movls	r0, #0
   113cc:	pop	{r4, r5, r6, pc}
   113d0:	sub	r3, r1, #35	; 0x23
   113d4:	sub	r0, r1, #64	; 0x40
   113d8:	uxtb	r3, r3
   113dc:	cmp	r3, #22
   113e0:	mvnls	r3, r5, lsr r3
   113e4:	movhi	r3, lr
   113e8:	and	r2, r3, #1
   113ec:	eor	r2, r2, #1
   113f0:	cmp	r0, #26
   113f4:	movhi	r3, r2
   113f8:	orrls	r3, r2, #1
   113fc:	cmp	r3, #0
   11400:	bne	113ac <por_variable_ok+0x28>
   11404:	cmp	r1, #95	; 0x5f
   11408:	beq	113ac <por_variable_ok+0x28>
   1140c:	mov	r0, #26
   11410:	pop	{r4, r5, r6, pc}
   11414:	mov	r0, #28
   11418:	pop	{r4, r5, r6, pc}
   1141c:	.word	0x007fe803

00011420 <por_write_base30_integer.isra.0>:
   11420:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11424:	mov	r8, r0
   11428:	mov	r4, r2
   1142c:	mov	r5, r3
   11430:	mov	r9, r0
   11434:	mov	r6, #30
   11438:	mov	r7, #0
   1143c:	orrs	r3, r4, r5
   11440:	sub	r0, r9, r8
   11444:	bne	11468 <por_write_base30_integer.isra.0+0x48>
   11448:	sub	r3, r0, #1
   1144c:	add	r3, r8, r3
   11450:	mov	r2, r8
   11454:	sub	r1, r2, r8
   11458:	sub	ip, r3, r8
   1145c:	cmp	r1, ip
   11460:	blt	114b4 <por_write_base30_integer.isra.0+0x94>
   11464:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11468:	mov	r0, r4
   1146c:	mov	r1, r5
   11470:	mov	r2, r6
   11474:	mov	r3, r7
   11478:	bl	20f10 <__aeabi_uldivmod>
   1147c:	mov	r0, r4
   11480:	mov	r1, r5
   11484:	cmp	r3, #0
   11488:	cmpeq	r2, #9
   1148c:	addls	r2, r2, #48	; 0x30
   11490:	addhi	r2, r2, #55	; 0x37
   11494:	mov	r3, r7
   11498:	uxtb	r2, r2
   1149c:	strb	r2, [r9], #1
   114a0:	mov	r2, r6
   114a4:	bl	20f10 <__aeabi_uldivmod>
   114a8:	mov	r4, r0
   114ac:	mov	r5, r1
   114b0:	b	1143c <por_write_base30_integer.isra.0+0x1c>
   114b4:	ldrb	r1, [r2]
   114b8:	ldrb	ip, [r3]
   114bc:	strb	ip, [r2], #1
   114c0:	strb	r1, [r3], #-1
   114c4:	b	11454 <por_write_base30_integer.isra.0+0x34>

000114c8 <por_write_double_to_buffer.isra.1.constprop.4>:
   114c8:	vcmp.f64	d0, d0
   114cc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   114d0:	vpush	{d8-d10}
   114d4:	mov	r4, r0
   114d8:	vmrs	APSR_nzcv, fpscr
   114dc:	sub	sp, sp, #8
   114e0:	bvc	11504 <por_write_double_to_buffer.isra.1.constprop.4+0x3c>
   114e4:	mov	r3, #42	; 0x2a
   114e8:	strb	r3, [r0]
   114ec:	mov	r3, #46	; 0x2e
   114f0:	strb	r3, [r0, #1]
   114f4:	mov	r0, #2
   114f8:	mov	r3, #0
   114fc:	strb	r3, [r4, r0]
   11500:	b	11704 <por_write_double_to_buffer.isra.1.constprop.4+0x23c>
   11504:	vmov.f64	d9, d0
   11508:	vldr	d7, [pc, #544]	; 11730 <por_write_double_to_buffer.isra.1.constprop.4+0x268>
   1150c:	vabs.f64	d0, d0
   11510:	vldr	d10, [pc, #544]	; 11738 <por_write_double_to_buffer.isra.1.constprop.4+0x270>
   11514:	vcmp.f64	d0, d7
   11518:	vmrs	APSR_nzcv, fpscr
   1151c:	ble	11568 <por_write_double_to_buffer.isra.1.constprop.4+0xa0>
   11520:	vcmpe.f64	d9, d10
   11524:	mov	r2, #49	; 0x31
   11528:	vmrs	APSR_nzcv, fpscr
   1152c:	movmi	r3, #45	; 0x2d
   11530:	strbmi	r3, [r0]
   11534:	movpl	r0, #0
   11538:	mov	r3, r4
   1153c:	movmi	r0, #1
   11540:	strb	r2, [r3, r0]!
   11544:	mov	r2, #43	; 0x2b
   11548:	strb	r2, [r3, #1]
   1154c:	mov	r2, #84	; 0x54
   11550:	strb	r2, [r3, #2]
   11554:	strb	r2, [r3, #3]
   11558:	mov	r2, #47	; 0x2f
   1155c:	add	r0, r0, #5
   11560:	strb	r2, [r3, #4]
   11564:	b	114f8 <por_write_double_to_buffer.isra.1.constprop.4+0x30>
   11568:	mov	r0, sp
   1156c:	bl	41c8 <modf@plt>
   11570:	ldrd	r0, [sp]
   11574:	mov	sl, sp
   11578:	vmov.f64	d8, d0
   1157c:	bl	20f5c <__aeabi_d2lz>
   11580:	vcmpe.f64	d9, d10
   11584:	vmrs	APSR_nzcv, fpscr
   11588:	movmi	r3, #45	; 0x2d
   1158c:	movmi	r9, #1
   11590:	movpl	r9, #0
   11594:	mov	r6, r0
   11598:	mov	r7, r1
   1159c:	strbmi	r3, [r4]
   115a0:	orrs	r3, r6, r7
   115a4:	beq	11628 <por_write_double_to_buffer.isra.1.constprop.4+0x160>
   115a8:	mov	r5, r0
   115ac:	mov	r8, r1
   115b0:	mov	r6, #0
   115b4:	mov	r7, #0
   115b8:	vcmp.f64	d8, #0.0
   115bc:	vmrs	APSR_nzcv, fpscr
   115c0:	moveq	r3, #1
   115c4:	movne	r3, #0
   115c8:	orrs	r2, r5, r8
   115cc:	moveq	r3, #0
   115d0:	andne	r3, r3, #1
   115d4:	cmp	r3, #0
   115d8:	bne	11650 <por_write_double_to_buffer.isra.1.constprop.4+0x188>
   115dc:	mov	r2, r5
   115e0:	mov	r3, r8
   115e4:	add	r0, r4, r9
   115e8:	bl	11420 <por_write_base30_integer.isra.0>
   115ec:	vcmp.f64	d8, d10
   115f0:	vmrs	APSR_nzcv, fpscr
   115f4:	add	r5, r9, r0
   115f8:	bne	11698 <por_write_double_to_buffer.isra.1.constprop.4+0x1d0>
   115fc:	orrs	r3, r6, r7
   11600:	beq	11640 <por_write_double_to_buffer.isra.1.constprop.4+0x178>
   11604:	add	r8, r5, #1
   11608:	mov	r3, #43	; 0x2b
   1160c:	strb	r3, [r4, r5]
   11610:	mov	r2, r6
   11614:	mov	r3, r7
   11618:	add	r0, r4, r8
   1161c:	bl	11420 <por_write_base30_integer.isra.0>
   11620:	add	r5, r8, r0
   11624:	b	11640 <por_write_double_to_buffer.isra.1.constprop.4+0x178>
   11628:	vcmp.f64	d8, d10
   1162c:	mov	r3, #48	; 0x30
   11630:	add	r5, r9, #1
   11634:	strb	r3, [r4, r9]
   11638:	vmrs	APSR_nzcv, fpscr
   1163c:	bne	11694 <por_write_double_to_buffer.isra.1.constprop.4+0x1cc>
   11640:	mov	r3, #47	; 0x2f
   11644:	add	r0, r5, #1
   11648:	strb	r3, [r4, r5]
   1164c:	b	114f8 <por_write_double_to_buffer.isra.1.constprop.4+0x30>
   11650:	mov	r2, #30
   11654:	mov	r3, #0
   11658:	mov	r0, r5
   1165c:	mov	r1, r8
   11660:	bl	20e3c <__aeabi_ldivmod>
   11664:	orrs	r3, r2, r3
   11668:	bne	115dc <por_write_double_to_buffer.isra.1.constprop.4+0x114>
   1166c:	mov	r0, r5
   11670:	mov	r1, r8
   11674:	mov	r2, #30
   11678:	mov	r3, #0
   1167c:	bl	20e3c <__aeabi_ldivmod>
   11680:	adds	r6, r6, #1
   11684:	adc	r7, r7, #0
   11688:	mov	r5, r0
   1168c:	mov	r8, r1
   11690:	b	115b8 <por_write_double_to_buffer.isra.1.constprop.4+0xf0>
   11694:	mov	r0, #0
   11698:	vldr	d9, [pc, #160]	; 11740 <por_write_double_to_buffer.isra.1.constprop.4+0x278>
   1169c:	mov	r3, #46	; 0x2e
   116a0:	sub	r0, r0, r4
   116a4:	strb	r3, [r4, r5]
   116a8:	add	r9, r4, r5
   116ac:	sub	r8, r0, r5
   116b0:	add	r5, r5, #1
   116b4:	vcmp.f64	d8, #0.0
   116b8:	add	r3, r8, r9
   116bc:	vmrs	APSR_nzcv, fpscr
   116c0:	movne	r2, #1
   116c4:	moveq	r2, #0
   116c8:	cmp	r3, #49	; 0x31
   116cc:	movgt	r3, #0
   116d0:	andle	r3, r2, #1
   116d4:	cmp	r3, #0
   116d8:	beq	115fc <por_write_double_to_buffer.isra.1.constprop.4+0x134>
   116dc:	mov	r0, sl
   116e0:	vmul.f64	d0, d8, d9
   116e4:	bl	41c8 <modf@plt>
   116e8:	ldrd	r0, [sp]
   116ec:	vmov.f64	d8, d0
   116f0:	bl	20f5c <__aeabi_d2lz>
   116f4:	cmp	r0, #0
   116f8:	sbcs	r3, r1, #0
   116fc:	bge	11710 <por_write_double_to_buffer.isra.1.constprop.4+0x248>
   11700:	mvn	r0, #0
   11704:	add	sp, sp, #8
   11708:	vpop	{d8-d10}
   1170c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11710:	cmp	r0, #10
   11714:	sbcs	r3, r1, #0
   11718:	addlt	r0, r0, #48	; 0x30
   1171c:	addge	r0, r0, #55	; 0x37
   11720:	add	r5, r5, #1
   11724:	uxtb	r0, r0
   11728:	strb	r0, [r9, #1]!
   1172c:	b	116b4 <por_write_double_to_buffer.isra.1.constprop.4+0x1ec>
   11730:	.word	0xffffffff
   11734:	.word	0x7fefffff
	...
   11744:	.word	0x403e0000

00011748 <por_write_string_value>:
   11748:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1174c:	mov	r6, r0
   11750:	mov	r0, r2
   11754:	mov	r7, r1
   11758:	mov	r5, r2
   1175c:	bl	424c <strlen@plt>
   11760:	subs	r4, r0, #0
   11764:	ldreq	r5, [pc, #84]	; 117c0 <por_write_string_value+0x78>
   11768:	moveq	r4, #1
   1176c:	addeq	r5, pc, r5
   11770:	mov	r0, r7
   11774:	bl	4318 <readstat_variable_get_storage_width@plt>
   11778:	cmp	r4, r0
   1177c:	movcs	r2, r0
   11780:	movcc	r2, r4
   11784:	mov	r0, r6
   11788:	vmov	s15, r2
   1178c:	str	r2, [sp, #4]
   11790:	vcvt.f64.u32	d0, s15
   11794:	bl	114c8 <por_write_double_to_buffer.isra.1.constprop.4>
   11798:	ldr	r2, [sp, #4]
   1179c:	cmn	r0, #1
   117a0:	moveq	r0, #13
   117a4:	beq	117b8 <por_write_string_value+0x70>
   117a8:	mov	r1, r5
   117ac:	add	r0, r6, r0
   117b0:	bl	430c <strncpy@plt>
   117b4:	mov	r0, #0
   117b8:	add	sp, sp, #12
   117bc:	pop	{r4, r5, r6, r7, pc}
   117c0:	.word	0x00010994

000117c4 <por_write_double_value>:
   117c4:	push	{r4, lr}
   117c8:	bl	114c8 <por_write_double_to_buffer.isra.1.constprop.4>
   117cc:	cmn	r0, #1
   117d0:	moveq	r0, #13
   117d4:	movne	r0, #0
   117d8:	pop	{r4, pc}

000117dc <por_write_missing_number>:
   117dc:	vldr	d0, [pc, #4]	; 117e8 <por_write_missing_number+0xc>
   117e0:	b	117c4 <por_write_double_value>
   117e4:	nop			; (mov r0, r0)
   117e8:	.word	0x00000000
   117ec:	.word	0x7ff80000

000117f0 <por_write_missing_string>:
   117f0:	vldr	d0, [pc]	; 117f8 <por_write_missing_string+0x8>
   117f4:	b	117c4 <por_write_double_value>
	...

00011800 <por_write_float_value>:
   11800:	vcvt.f64.f32	d0, s0
   11804:	b	117c4 <por_write_double_value>

00011808 <por_write_int32_value>:
   11808:	vmov	s15, r2
   1180c:	vcvt.f64.s32	d0, s15
   11810:	b	117c4 <por_write_double_value>

00011814 <por_write_int16_value>:
   11814:	vmov	s15, r2
   11818:	vcvt.f64.s32	d0, s15
   1181c:	b	117c4 <por_write_double_value>

00011820 <por_write_int8_value>:
   11820:	vmov	s15, r2
   11824:	vcvt.f64.s32	d0, s15
   11828:	b	117c4 <por_write_double_value>

0001182c <por_write_string_n>:
   1182c:	push	{r4, r5, r6, r7, r8, lr}
   11830:	mov	r6, r0
   11834:	sub	sp, sp, #1040	; 0x410
   11838:	mov	r0, r3
   1183c:	mov	r8, r1
   11840:	mov	r4, r3
   11844:	mov	r7, r2
   11848:	bl	415c <malloc@plt>
   1184c:	ldr	r3, [r8, #4]
   11850:	mov	r1, r4
   11854:	str	r3, [sp, #4]
   11858:	ldr	r3, [r8]
   1185c:	str	r3, [sp]
   11860:	mov	r3, r4
   11864:	mov	r2, r0
   11868:	mov	r5, r0
   1186c:	mov	r0, r7
   11870:	bl	43e4 <por_utf8_decode@plt>
   11874:	cmn	r0, #1
   11878:	bne	118cc <por_write_string_n+0xa0>
   1187c:	ldr	r3, [r6, #296]	; 0x128
   11880:	cmp	r3, #0
   11884:	beq	118c4 <por_write_string_n+0x98>
   11888:	mov	r0, r4
   1188c:	mov	r1, #0
   11890:	ldr	r2, [pc, #116]	; 1190c <por_write_string_n+0xe0>
   11894:	str	r4, [sp, #8]
   11898:	add	r4, sp, #16
   1189c:	strd	r0, [sp]
   118a0:	str	r7, [sp, #12]
   118a4:	mov	r1, #1024	; 0x400
   118a8:	add	r2, pc, r2
   118ac:	mov	r0, r4
   118b0:	bl	42c4 <snprintf@plt>
   118b4:	ldr	r3, [r6, #296]	; 0x128
   118b8:	ldr	r1, [r6, #304]	; 0x130
   118bc:	mov	r0, r4
   118c0:	blx	r3
   118c4:	mov	r4, #16
   118c8:	b	118f0 <por_write_string_n+0xc4>
   118cc:	ldr	r3, [pc, #60]	; 11910 <por_write_string_n+0xe4>
   118d0:	mov	r2, r0
   118d4:	add	r3, pc, r3
   118d8:	str	r3, [sp]
   118dc:	mov	r1, r5
   118e0:	mov	r3, #80	; 0x50
   118e4:	mov	r0, r6
   118e8:	bl	4570 <readstat_write_bytes_as_lines@plt>
   118ec:	mov	r4, r0
   118f0:	cmp	r5, #0
   118f4:	beq	11900 <por_write_string_n+0xd4>
   118f8:	mov	r0, r5
   118fc:	bl	3f04 <free@plt>
   11900:	mov	r0, r4
   11904:	add	sp, sp, #1040	; 0x410
   11908:	pop	{r4, r5, r6, r7, r8, pc}
   1190c:	.word	0x000107e6
   11910:	.word	0x000107e6

00011914 <por_write_tag>:
   11914:	mov	r3, #0
   11918:	push	{r0, r1, r2, lr}
   1191c:	strb	r2, [sp, #4]
   11920:	strb	r3, [sp, #5]
   11924:	add	r2, sp, #4
   11928:	mov	r3, #1
   1192c:	bl	1182c <por_write_string_n>
   11930:	add	sp, sp, #12
   11934:	pop	{pc}		; (ldr pc, [sp], #4)

00011938 <por_end_data>:
   11938:	push	{r4, r5, r6, lr}
   1193c:	mov	r2, #90	; 0x5a
   11940:	ldr	r1, [r0, #300]	; 0x12c
   11944:	mov	r4, r0
   11948:	bl	11914 <por_write_tag>
   1194c:	subs	r5, r0, #0
   11950:	bne	11970 <por_end_data+0x38>
   11954:	ldr	r3, [pc, #56]	; 11994 <por_end_data+0x5c>
   11958:	mov	r2, #80	; 0x50
   1195c:	add	r3, pc, r3
   11960:	mov	r1, #90	; 0x5a
   11964:	mov	r0, r4
   11968:	bl	4534 <readstat_write_line_padding@plt>
   1196c:	mov	r5, r0
   11970:	ldr	r4, [r4, #300]	; 0x12c
   11974:	ldr	r0, [r4]
   11978:	cmp	r0, #0
   1197c:	beq	11984 <por_end_data+0x4c>
   11980:	bl	3f04 <free@plt>
   11984:	mov	r0, r4
   11988:	bl	3f04 <free@plt>
   1198c:	mov	r0, r5
   11990:	pop	{r4, r5, r6, pc}
   11994:	.word	0x0001075e

00011998 <por_write_row>:
   11998:	mov	r3, #0
   1199c:	cmp	r3, r2
   119a0:	mov	ip, r3
   119a4:	moveq	r2, r1
   119a8:	ldreq	r1, [r0, #300]	; 0x12c
   119ac:	beq	119e4 <por_write_row+0x4c>
   119b0:	push	{lr}		; (str lr, [sp, #-4]!)
   119b4:	ldrb	lr, [r1, ip]
   119b8:	cmp	lr, #0
   119bc:	beq	119cc <por_write_row+0x34>
   119c0:	cmp	ip, r3
   119c4:	strbne	lr, [r1, r3]
   119c8:	add	r3, r3, #1
   119cc:	add	ip, ip, #1
   119d0:	cmp	ip, r2
   119d4:	bne	119b4 <por_write_row+0x1c>
   119d8:	mov	r2, r1
   119dc:	pop	{lr}		; (ldr lr, [sp], #4)
   119e0:	ldr	r1, [r0, #300]	; 0x12c
   119e4:	b	1182c <por_write_string_n>

000119e8 <por_emit_header>:
   119e8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   119ec:	add	sl, r0, #88	; 0x58
   119f0:	sub	sp, sp, #464	; 0x1d0
   119f4:	mov	r4, r0
   119f8:	mov	r0, sl
   119fc:	mov	r8, r1
   11a00:	bl	424c <strlen@plt>
   11a04:	add	r7, sp, #8
   11a08:	mov	r2, #200	; 0xc8
   11a0c:	mov	r1, #48	; 0x30
   11a10:	add	r9, sp, #48	; 0x30
   11a14:	ldr	r6, [pc, #268]	; 11b28 <por_emit_header+0x140>
   11a18:	add	r6, pc, r6
   11a1c:	mov	r5, r0
   11a20:	mov	r0, r7
   11a24:	bl	42e8 <memset@plt>
   11a28:	ldr	r3, [pc, #252]	; 11b2c <por_emit_header+0x144>
   11a2c:	mov	r2, r9
   11a30:	add	r3, pc, r3
   11a34:	add	lr, r3, #16
   11a38:	ldr	r0, [r3]
   11a3c:	ldr	r1, [r3, #4]
   11a40:	mov	ip, r2
   11a44:	add	r3, r3, #8
   11a48:	cmp	r3, lr
   11a4c:	stmia	ip!, {r0, r1}
   11a50:	mov	r2, ip
   11a54:	bne	11a38 <por_emit_header+0x50>
   11a58:	ldr	r0, [r3]
   11a5c:	mov	r2, #20
   11a60:	str	r0, [ip]
   11a64:	mov	r1, sl
   11a68:	add	r0, sp, #68	; 0x44
   11a6c:	bl	430c <strncpy@plt>
   11a70:	cmp	r5, #19
   11a74:	bhi	11a8c <por_emit_header+0xa4>
   11a78:	add	r0, r5, #20
   11a7c:	rsb	r2, r5, #20
   11a80:	mov	r1, #32
   11a84:	add	r0, r9, r0
   11a88:	bl	42e8 <memset@plt>
   11a8c:	ldr	r3, [pc, #156]	; 11b30 <por_emit_header+0x148>
   11a90:	mov	r2, #200	; 0xc8
   11a94:	add	r3, pc, r3
   11a98:	str	r3, [sp]
   11a9c:	mov	r1, r7
   11aa0:	mov	r3, #80	; 0x50
   11aa4:	mov	r0, r4
   11aa8:	add	r5, sp, #208	; 0xd0
   11aac:	bl	4570 <readstat_write_bytes_as_lines@plt>
   11ab0:	mov	r2, #256	; 0x100
   11ab4:	mov	r1, #48	; 0x30
   11ab8:	mov	r0, r5
   11abc:	bl	42e8 <memset@plt>
   11ac0:	ldr	r3, [pc, #108]	; 11b34 <por_emit_header+0x14c>
   11ac4:	mov	r2, #0
   11ac8:	ldr	r1, [r6, r3]
   11acc:	ldrsb	r3, [r2, r1]
   11ad0:	cmp	r3, #0
   11ad4:	strbne	r3, [r5, r2]
   11ad8:	add	r2, r2, #1
   11adc:	cmp	r2, #256	; 0x100
   11ae0:	bne	11acc <por_emit_header+0xe4>
   11ae4:	ldr	r3, [pc, #76]	; 11b38 <por_emit_header+0x150>
   11ae8:	mov	r1, r5
   11aec:	add	r3, pc, r3
   11af0:	str	r3, [sp]
   11af4:	mov	r0, r4
   11af8:	mov	r3, #80	; 0x50
   11afc:	bl	4570 <readstat_write_bytes_as_lines@plt>
   11b00:	cmp	r0, #0
   11b04:	bne	11b20 <por_emit_header+0x138>
   11b08:	ldr	r2, [pc, #44]	; 11b3c <por_emit_header+0x154>
   11b0c:	mov	r3, #8
   11b10:	add	r2, pc, r2
   11b14:	mov	r1, r8
   11b18:	mov	r0, r4
   11b1c:	bl	1182c <por_write_string_n>
   11b20:	add	sp, sp, #464	; 0x1d0
   11b24:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11b28:	.word	0x0002f5e0
   11b2c:	.word	0x0001068d
   11b30:	.word	0x00010626
   11b34:	.word	0x00000308
   11b38:	.word	0x000105ce
   11b3c:	.word	0x00010560

00011b40 <por_write_double>:
   11b40:	push	{r4, r5, r6, lr}
   11b44:	vpush	{d8}
   11b48:	mov	r4, r0
   11b4c:	mov	r6, r1
   11b50:	vmov.f64	d8, d0
   11b54:	sub	sp, sp, #1280	; 0x500
   11b58:	sub	sp, sp, #8
   11b5c:	add	r5, sp, #8
   11b60:	mov	r0, r5
   11b64:	bl	114c8 <por_write_double_to_buffer.isra.1.constprop.4>
   11b68:	cmn	r0, #1
   11b6c:	bne	11bb0 <por_write_double+0x70>
   11b70:	ldr	r3, [r4, #296]	; 0x128
   11b74:	cmp	r3, #0
   11b78:	beq	11ba8 <por_write_double+0x68>
   11b7c:	ldr	r2, [pc, #80]	; 11bd4 <por_write_double+0x94>
   11b80:	add	r5, sp, #264	; 0x108
   11b84:	mov	r1, #1024	; 0x400
   11b88:	vstr	d8, [sp]
   11b8c:	add	r2, pc, r2
   11b90:	mov	r0, r5
   11b94:	bl	42c4 <snprintf@plt>
   11b98:	ldr	r3, [r4, #296]	; 0x128
   11b9c:	ldr	r1, [r4, #304]	; 0x130
   11ba0:	mov	r0, r5
   11ba4:	blx	r3
   11ba8:	mov	r0, #13
   11bac:	b	11bc4 <por_write_double+0x84>
   11bb0:	mov	r3, r0
   11bb4:	mov	r2, r5
   11bb8:	mov	r1, r6
   11bbc:	mov	r0, r4
   11bc0:	bl	1182c <por_write_string_n>
   11bc4:	add	sp, sp, #1280	; 0x500
   11bc8:	add	sp, sp, #8
   11bcc:	vpop	{d8}
   11bd0:	pop	{r4, r5, r6, pc}
   11bd4:	.word	0x00010546

00011bd8 <por_write_string_field_n>:
   11bd8:	vmov	s15, r3
   11bdc:	push	{r0, r1, r4, r5, r6, lr}
   11be0:	mov	r4, r0
   11be4:	mov	r5, r1
   11be8:	vcvt.f64.u32	d0, s15
   11bec:	mov	r6, r2
   11bf0:	str	r3, [sp, #4]
   11bf4:	bl	11b40 <por_write_double>
   11bf8:	cmp	r0, #0
   11bfc:	bne	11c1c <por_write_string_field_n+0x44>
   11c00:	ldr	r3, [sp, #4]
   11c04:	mov	r2, r6
   11c08:	mov	r1, r5
   11c0c:	mov	r0, r4
   11c10:	add	sp, sp, #8
   11c14:	pop	{r4, r5, r6, lr}
   11c18:	b	1182c <por_write_string_n>
   11c1c:	add	sp, sp, #8
   11c20:	pop	{r4, r5, r6, pc}

00011c24 <por_write_string_field>:
   11c24:	push	{r4, r5, r6, lr}
   11c28:	mov	r5, r0
   11c2c:	mov	r0, r2
   11c30:	mov	r6, r1
   11c34:	mov	r4, r2
   11c38:	bl	424c <strlen@plt>
   11c3c:	mov	r2, r4
   11c40:	mov	r1, r6
   11c44:	mov	r3, r0
   11c48:	mov	r0, r5
   11c4c:	pop	{r4, r5, r6, lr}
   11c50:	b	11bd8 <por_write_string_field_n>

00011c54 <por_begin_data>:
   11c54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c58:	vpush	{d8-d11}
   11c5c:	mov	r4, r0
   11c60:	mov	r1, #8
   11c64:	mov	r0, #1
   11c68:	sub	sp, sp, #76	; 0x4c
   11c6c:	bl	3d9c <calloc@plt>
   11c70:	ldr	r8, [pc, #1576]	; 122a0 <por_begin_data+0x64c>
   11c74:	ldr	r2, [pc, #1576]	; 122a4 <por_begin_data+0x650>
   11c78:	add	r8, pc, r8
   11c7c:	mov	r3, #0
   11c80:	ldr	r7, [r8, r2]
   11c84:	mov	r5, r0
   11c88:	mov	r0, r3
   11c8c:	ldrh	r2, [r3, r7]
   11c90:	add	r3, r3, #2
   11c94:	cmp	r2, r0
   11c98:	movcs	r0, r2
   11c9c:	cmp	r3, #512	; 0x200
   11ca0:	bne	11c8c <por_begin_data+0x38>
   11ca4:	add	r6, r0, #1
   11ca8:	mov	r0, r6
   11cac:	bl	415c <malloc@plt>
   11cb0:	ldr	r2, [pc, #1520]	; 122a8 <por_begin_data+0x654>
   11cb4:	mov	r3, #0
   11cb8:	stm	r5, {r0, r6}
   11cbc:	ldr	r1, [r8, r2]
   11cc0:	lsl	r2, r3, #1
   11cc4:	ldrh	r2, [r7, r2]
   11cc8:	cmp	r2, #0
   11ccc:	ldrne	r0, [r5]
   11cd0:	ldrbne	ip, [r1, r3]
   11cd4:	strbne	ip, [r0, r2]
   11cd8:	ldrsb	r2, [r1, r3]
   11cdc:	add	r3, r3, #1
   11ce0:	cmp	r2, #0
   11ce4:	ldrne	r0, [r5]
   11ce8:	strbne	r2, [r0, r2]
   11cec:	cmp	r3, #256	; 0x100
   11cf0:	bne	11cc0 <por_begin_data+0x6c>
   11cf4:	mov	r1, r5
   11cf8:	mov	r0, r4
   11cfc:	bl	119e8 <por_emit_header>
   11d00:	subs	r3, r0, #0
   11d04:	bne	11fac <por_begin_data+0x358>
   11d08:	add	r0, r4, #20
   11d0c:	bl	41b0 <localtime@plt>
   11d10:	subs	r7, r0, #0
   11d14:	beq	125e4 <por_begin_data+0x990>
   11d18:	mov	r2, #65	; 0x41
   11d1c:	mov	r1, r5
   11d20:	mov	r0, r4
   11d24:	bl	11914 <por_write_tag>
   11d28:	subs	r3, r0, #0
   11d2c:	bne	11fac <por_begin_data+0x358>
   11d30:	ldr	r0, [r7, #20]
   11d34:	ldr	r1, [pc, #1392]	; 122ac <por_begin_data+0x658>
   11d38:	add	r0, r0, #1888	; 0x760
   11d3c:	add	r0, r0, #12
   11d40:	bl	20808 <__aeabi_uidivmod>
   11d44:	ldr	r0, [r7, #12]
   11d48:	add	fp, sp, #56	; 0x38
   11d4c:	mov	r6, r1
   11d50:	mov	r1, #100	; 0x64
   11d54:	bl	20808 <__aeabi_uidivmod>
   11d58:	str	r1, [sp, #4]
   11d5c:	ldr	r0, [r7, #16]
   11d60:	mov	r1, #100	; 0x64
   11d64:	add	r0, r0, #1
   11d68:	bl	20808 <__aeabi_uidivmod>
   11d6c:	ldr	r2, [pc, #1340]	; 122b0 <por_begin_data+0x65c>
   11d70:	mov	r3, r6
   11d74:	add	r2, pc, r2
   11d78:	mov	r0, fp
   11d7c:	str	r1, [sp]
   11d80:	mov	r1, #9
   11d84:	bl	42c4 <snprintf@plt>
   11d88:	mov	r2, fp
   11d8c:	mov	r1, r5
   11d90:	mov	r0, r4
   11d94:	bl	11c24 <por_write_string_field>
   11d98:	subs	r3, r0, #0
   11d9c:	bne	11fac <por_begin_data+0x358>
   11da0:	ldr	r0, [r7, #8]
   11da4:	mov	r1, #100	; 0x64
   11da8:	bl	20808 <__aeabi_uidivmod>
   11dac:	ldr	r0, [r7]
   11db0:	add	r6, sp, #40	; 0x28
   11db4:	mov	r8, r1
   11db8:	mov	r1, #100	; 0x64
   11dbc:	bl	20808 <__aeabi_uidivmod>
   11dc0:	str	r1, [sp, #4]
   11dc4:	mov	r1, #100	; 0x64
   11dc8:	ldr	r0, [r7, #4]
   11dcc:	bl	20808 <__aeabi_uidivmod>
   11dd0:	ldr	r2, [pc, #1244]	; 122b4 <por_begin_data+0x660>
   11dd4:	mov	r3, r8
   11dd8:	add	r2, pc, r2
   11ddc:	mov	r0, r6
   11de0:	str	r1, [sp]
   11de4:	mov	r1, #7
   11de8:	bl	42c4 <snprintf@plt>
   11dec:	mov	r2, r6
   11df0:	mov	r1, r5
   11df4:	mov	r0, r4
   11df8:	bl	11c24 <por_write_string_field>
   11dfc:	subs	r3, r0, #0
   11e00:	bne	11fac <por_begin_data+0x358>
   11e04:	mov	r2, #49	; 0x31
   11e08:	mov	r1, r5
   11e0c:	mov	r0, r4
   11e10:	bl	11914 <por_write_tag>
   11e14:	subs	r3, r0, #0
   11e18:	bne	11fac <por_begin_data+0x358>
   11e1c:	ldr	r2, [pc, #1172]	; 122b8 <por_begin_data+0x664>
   11e20:	mov	r1, r5
   11e24:	add	r2, pc, r2
   11e28:	mov	r0, r4
   11e2c:	bl	11c24 <por_write_string_field>
   11e30:	subs	r3, r0, #0
   11e34:	bne	11fac <por_begin_data+0x358>
   11e38:	mov	r2, #51	; 0x33
   11e3c:	mov	r1, r5
   11e40:	mov	r0, r4
   11e44:	bl	11914 <por_write_tag>
   11e48:	subs	r3, r0, #0
   11e4c:	bne	11fac <por_begin_data+0x358>
   11e50:	ldr	r2, [pc, #1124]	; 122bc <por_begin_data+0x668>
   11e54:	mov	r1, r5
   11e58:	add	r2, pc, r2
   11e5c:	mov	r0, r4
   11e60:	bl	11c24 <por_write_string_field>
   11e64:	subs	r3, r0, #0
   11e68:	bne	11fac <por_begin_data+0x358>
   11e6c:	mov	r2, #52	; 0x34
   11e70:	mov	r1, r5
   11e74:	mov	r0, r4
   11e78:	bl	11914 <por_write_tag>
   11e7c:	subs	r3, r0, #0
   11e80:	bne	11fac <por_begin_data+0x358>
   11e84:	vldr	s15, [r4, #28]
   11e88:	mov	r1, r5
   11e8c:	mov	r0, r4
   11e90:	vcvt.f64.s32	d0, s15
   11e94:	bl	11b40 <por_write_double>
   11e98:	subs	r3, r0, #0
   11e9c:	bne	11fac <por_begin_data+0x358>
   11ea0:	mov	r2, #53	; 0x35
   11ea4:	mov	r1, r5
   11ea8:	mov	r0, r4
   11eac:	bl	11914 <por_write_tag>
   11eb0:	subs	r3, r0, #0
   11eb4:	bne	11fac <por_begin_data+0x358>
   11eb8:	vldr	d0, [pc, #968]	; 12288 <por_begin_data+0x634>
   11ebc:	mov	r1, r5
   11ec0:	mov	r0, r4
   11ec4:	bl	11b40 <por_write_double>
   11ec8:	subs	r3, r0, #0
   11ecc:	bne	11fac <por_begin_data+0x358>
   11ed0:	ldr	r3, [r4, #224]	; 0xe0
   11ed4:	cmp	r3, #0
   11ed8:	bne	11f74 <por_begin_data+0x320>
   11edc:	vldr	d10, [pc, #940]	; 12290 <por_begin_data+0x63c>
   11ee0:	vldr	d8, [pc, #944]	; 12298 <por_begin_data+0x644>
   11ee4:	mov	r3, #0
   11ee8:	str	r3, [sp, #12]
   11eec:	ldr	r3, [r4, #28]
   11ef0:	ldr	r2, [sp, #12]
   11ef4:	cmp	r2, r3
   11ef8:	blt	11fe4 <por_begin_data+0x390>
   11efc:	mov	r8, #0
   11f00:	mov	fp, #68	; 0x44
   11f04:	ldr	r3, [r4, #40]	; 0x28
   11f08:	cmp	r8, r3
   11f0c:	blt	12440 <por_begin_data+0x7ec>
   11f10:	mov	r2, #69	; 0x45
   11f14:	mov	r1, r5
   11f18:	mov	r0, r4
   11f1c:	bl	11914 <por_write_tag>
   11f20:	subs	r3, r0, #0
   11f24:	bne	11fac <por_begin_data+0x358>
   11f28:	vldr	s15, [r4, #52]	; 0x34
   11f2c:	mov	r1, r5
   11f30:	mov	r0, r4
   11f34:	vcvt.f64.s32	d0, s15
   11f38:	bl	11b40 <por_write_double>
   11f3c:	subs	r3, r0, #0
   11f40:	moveq	r6, r3
   11f44:	bne	11fac <por_begin_data+0x358>
   11f48:	ldr	r3, [r4, #52]	; 0x34
   11f4c:	cmp	r6, r3
   11f50:	blt	125a0 <por_begin_data+0x94c>
   11f54:	mov	r2, #70	; 0x46
   11f58:	mov	r1, r5
   11f5c:	mov	r0, r4
   11f60:	bl	11914 <por_write_tag>
   11f64:	subs	r3, r0, #0
   11f68:	streq	r5, [r4, #300]	; 0x12c
   11f6c:	beq	11fd4 <por_begin_data+0x380>
   11f70:	b	11fac <por_begin_data+0x358>
   11f74:	mov	r2, #54	; 0x36
   11f78:	mov	r1, r5
   11f7c:	mov	r0, r4
   11f80:	bl	11914 <por_write_tag>
   11f84:	subs	r3, r0, #0
   11f88:	bne	11fac <por_begin_data+0x358>
   11f8c:	ldr	r0, [r4, #224]	; 0xe0
   11f90:	bl	43b4 <readstat_variable_get_name@plt>
   11f94:	mov	r1, r5
   11f98:	mov	r2, r0
   11f9c:	mov	r0, r4
   11fa0:	bl	11c24 <por_write_string_field>
   11fa4:	subs	r3, r0, #0
   11fa8:	beq	11edc <por_begin_data+0x288>
   11fac:	ldr	r0, [r5]
   11fb0:	cmp	r0, #0
   11fb4:	beq	11fc4 <por_begin_data+0x370>
   11fb8:	str	r3, [sp, #12]
   11fbc:	bl	3f04 <free@plt>
   11fc0:	ldr	r3, [sp, #12]
   11fc4:	mov	r0, r5
   11fc8:	str	r3, [sp, #12]
   11fcc:	bl	3f04 <free@plt>
   11fd0:	ldr	r3, [sp, #12]
   11fd4:	mov	r0, r3
   11fd8:	add	sp, sp, #76	; 0x4c
   11fdc:	vpop	{d8-d11}
   11fe0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11fe4:	ldr	r1, [sp, #12]
   11fe8:	mov	r0, r4
   11fec:	bl	43cc <readstat_get_variable@plt>
   11ff0:	mov	r7, r0
   11ff4:	bl	43b4 <readstat_variable_get_name@plt>
   11ff8:	mov	r2, #55	; 0x37
   11ffc:	mov	r1, r5
   12000:	mov	r8, r0
   12004:	mov	r0, r4
   12008:	bl	11914 <por_write_tag>
   1200c:	subs	r3, r0, #0
   12010:	bne	11fac <por_begin_data+0x358>
   12014:	ldr	r3, [r7]
   12018:	mov	r1, r5
   1201c:	cmp	r3, #0
   12020:	mov	r0, r4
   12024:	ldreq	r3, [r7, #1600]	; 0x640
   12028:	vmovne.f64	d0, d10
   1202c:	vmoveq	s15, r3
   12030:	vcvteq.f64.u32	d0, s15
   12034:	bl	11b40 <por_write_double>
   12038:	subs	r3, r0, #0
   1203c:	bne	11fac <por_begin_data+0x358>
   12040:	mov	r2, r8
   12044:	mov	r1, r5
   12048:	mov	r0, r4
   1204c:	bl	11c24 <por_write_string_field>
   12050:	subs	r3, r0, #0
   12054:	bne	11fac <por_begin_data+0x358>
   12058:	add	r8, sp, #28
   1205c:	mov	r1, r8
   12060:	mov	r0, r7
   12064:	bl	4144 <spss_format_for_variable@plt>
   12068:	subs	r3, r0, #0
   1206c:	bne	11fac <por_begin_data+0x358>
   12070:	mov	r2, r8
   12074:	mov	r1, r5
   12078:	mov	r0, r4
   1207c:	bl	55a4 <por_emit_format>
   12080:	subs	r3, r0, #0
   12084:	bne	11fac <por_begin_data+0x358>
   12088:	mov	r2, r8
   1208c:	mov	r1, r5
   12090:	mov	r0, r4
   12094:	bl	55a4 <por_emit_format>
   12098:	subs	r3, r0, #0
   1209c:	bne	11fac <por_begin_data+0x358>
   120a0:	ldr	r2, [r7]
   120a4:	cmp	r2, #5
   120a8:	bne	122c0 <por_begin_data+0x66c>
   120ac:	mov	r0, r7
   120b0:	str	r3, [sp, #20]
   120b4:	bl	4354 <readstat_variable_get_missing_ranges_count@plt>
   120b8:	ldr	r3, [sp, #20]
   120bc:	mov	sl, #65	; 0x41
   120c0:	mov	r9, r3
   120c4:	mov	r8, r3
   120c8:	str	r0, [sp, #16]
   120cc:	ldr	r3, [sp, #16]
   120d0:	cmp	r3, r9
   120d4:	bgt	120fc <por_begin_data+0x4a8>
   120d8:	mov	r9, #0
   120dc:	mov	sl, #56	; 0x38
   120e0:	ldr	r3, [sp, #16]
   120e4:	cmp	r3, r9
   120e8:	bgt	121e8 <por_begin_data+0x594>
   120ec:	cmp	r8, #3
   120f0:	ble	125ec <por_begin_data+0x998>
   120f4:	mov	r3, #31
   120f8:	b	11fac <por_begin_data+0x358>
   120fc:	mov	r2, r9
   12100:	mov	r1, r7
   12104:	mov	r0, r6
   12108:	bl	3f88 <readstat_variable_get_missing_range_lo@plt>
   1210c:	mov	r2, r9
   12110:	mov	r1, r7
   12114:	mov	r0, fp
   12118:	bl	4378 <readstat_variable_get_missing_range_hi@plt>
   1211c:	ldm	r6, {r0, r1, r2, r3}
   12120:	bl	4204 <readstat_double_value@plt>
   12124:	ldm	fp, {r0, r1, r2, r3}
   12128:	vmov.f64	d11, d0
   1212c:	bl	4204 <readstat_double_value@plt>
   12130:	vabs.f64	d7, d11
   12134:	vcmp.f64	d7, d8
   12138:	vmrs	APSR_nzcv, fpscr
   1213c:	vmov.f64	d9, d0
   12140:	ble	12164 <por_begin_data+0x510>
   12144:	mov	r2, #57	; 0x39
   12148:	mov	r1, r5
   1214c:	mov	r0, r4
   12150:	bl	11914 <por_write_tag>
   12154:	subs	r3, r0, #0
   12158:	bne	11fac <por_begin_data+0x358>
   1215c:	vmov.f64	d0, d9
   12160:	b	12190 <por_begin_data+0x53c>
   12164:	vabs.f64	d7, d0
   12168:	vcmp.f64	d7, d8
   1216c:	vmrs	APSR_nzcv, fpscr
   12170:	ble	121b0 <por_begin_data+0x55c>
   12174:	mov	r2, sl
   12178:	mov	r1, r5
   1217c:	mov	r0, r4
   12180:	bl	11914 <por_write_tag>
   12184:	subs	r3, r0, #0
   12188:	bne	11fac <por_begin_data+0x358>
   1218c:	vmov.f64	d0, d11
   12190:	mov	r1, r5
   12194:	mov	r0, r4
   12198:	bl	11b40 <por_write_double>
   1219c:	subs	r3, r0, #0
   121a0:	bne	11fac <por_begin_data+0x358>
   121a4:	add	r8, r8, #2
   121a8:	add	r9, r9, #1
   121ac:	b	120cc <por_begin_data+0x478>
   121b0:	vcmp.f64	d11, d0
   121b4:	vmrs	APSR_nzcv, fpscr
   121b8:	beq	121a8 <por_begin_data+0x554>
   121bc:	mov	r2, #66	; 0x42
   121c0:	mov	r1, r5
   121c4:	mov	r0, r4
   121c8:	bl	11914 <por_write_tag>
   121cc:	subs	r3, r0, #0
   121d0:	bne	11fac <por_begin_data+0x358>
   121d4:	vmov.f64	d0, d11
   121d8:	mov	r1, r5
   121dc:	mov	r0, r4
   121e0:	bl	11b40 <por_write_double>
   121e4:	b	12154 <por_begin_data+0x500>
   121e8:	mov	r2, r9
   121ec:	mov	r1, r7
   121f0:	mov	r0, r6
   121f4:	bl	3f88 <readstat_variable_get_missing_range_lo@plt>
   121f8:	mov	r2, r9
   121fc:	mov	r1, r7
   12200:	mov	r0, fp
   12204:	bl	4378 <readstat_variable_get_missing_range_hi@plt>
   12208:	ldm	r6, {r0, r1, r2, r3}
   1220c:	bl	4204 <readstat_double_value@plt>
   12210:	ldm	fp, {r0, r1, r2, r3}
   12214:	vmov.f64	d9, d0
   12218:	bl	4204 <readstat_double_value@plt>
   1221c:	vcmp.f64	d9, d0
   12220:	vmrs	APSR_nzcv, fpscr
   12224:	bne	1227c <por_begin_data+0x628>
   12228:	vabs.f64	d7, d9
   1222c:	vcmp.f64	d7, d8
   12230:	vmrs	APSR_nzcv, fpscr
   12234:	bgt	1227c <por_begin_data+0x628>
   12238:	vabs.f64	d0, d0
   1223c:	vcmp.f64	d0, d8
   12240:	vmrs	APSR_nzcv, fpscr
   12244:	bgt	1227c <por_begin_data+0x628>
   12248:	mov	r2, sl
   1224c:	mov	r1, r5
   12250:	mov	r0, r4
   12254:	bl	11914 <por_write_tag>
   12258:	subs	r3, r0, #0
   1225c:	bne	11fac <por_begin_data+0x358>
   12260:	vmov.f64	d0, d9
   12264:	mov	r1, r5
   12268:	mov	r0, r4
   1226c:	bl	11b40 <por_write_double>
   12270:	subs	r3, r0, #0
   12274:	bne	11fac <por_begin_data+0x358>
   12278:	add	r8, r8, #1
   1227c:	add	r9, r9, #1
   12280:	b	120e0 <por_begin_data+0x48c>
   12284:	nop			; (mov r0, r0)
   12288:	.word	0x00000000
   1228c:	.word	0x40490000
	...
   12298:	.word	0xffffffff
   1229c:	.word	0x7fefffff
   122a0:	.word	0x0002f380
   122a4:	.word	0x000002fc
   122a8:	.word	0x00000308
   122ac:	.word	0x00002710
   122b0:	.word	0x000102b5
   122b4:	.word	0x0001025e
   122b8:	.word	0x00010f35
   122bc:	.word	0x00010ee4
   122c0:	mov	r0, r7
   122c4:	str	r3, [sp, #16]
   122c8:	bl	4354 <readstat_variable_get_missing_ranges_count@plt>
   122cc:	ldr	r3, [sp, #16]
   122d0:	mov	r8, r3
   122d4:	mov	r9, r3
   122d8:	str	r0, [sp, #20]
   122dc:	ldr	r3, [sp, #20]
   122e0:	cmp	r3, r8
   122e4:	bgt	12300 <por_begin_data+0x6ac>
   122e8:	mov	r8, #0
   122ec:	ldr	r3, [sp, #20]
   122f0:	cmp	r3, r8
   122f4:	bgt	123b0 <por_begin_data+0x75c>
   122f8:	cmp	r9, #3
   122fc:	b	120f0 <por_begin_data+0x49c>
   12300:	mov	r2, r8
   12304:	mov	r1, r7
   12308:	mov	r0, r6
   1230c:	bl	3f88 <readstat_variable_get_missing_range_lo@plt>
   12310:	mov	r2, r8
   12314:	mov	r1, r7
   12318:	mov	r0, fp
   1231c:	bl	4378 <readstat_variable_get_missing_range_hi@plt>
   12320:	ldm	r6, {r0, r1, r2, r3}
   12324:	bl	3ff4 <readstat_string_value@plt>
   12328:	str	r0, [sp, #16]
   1232c:	ldm	fp, {r0, r1, r2, r3}
   12330:	bl	3ff4 <readstat_string_value@plt>
   12334:	ldr	r3, [sp, #16]
   12338:	cmp	r3, #0
   1233c:	cmpne	r0, #0
   12340:	mov	sl, r0
   12344:	beq	123a8 <por_begin_data+0x754>
   12348:	mov	r1, r0
   1234c:	mov	r0, r3
   12350:	bl	3e44 <strcmp@plt>
   12354:	cmp	r0, #0
   12358:	beq	123a8 <por_begin_data+0x754>
   1235c:	mov	r2, #66	; 0x42
   12360:	mov	r1, r5
   12364:	mov	r0, r4
   12368:	bl	11914 <por_write_tag>
   1236c:	subs	r3, r0, #0
   12370:	bne	11fac <por_begin_data+0x358>
   12374:	ldr	r2, [sp, #16]
   12378:	mov	r1, r5
   1237c:	mov	r0, r4
   12380:	bl	11c24 <por_write_string_field>
   12384:	subs	r3, r0, #0
   12388:	bne	11fac <por_begin_data+0x358>
   1238c:	mov	r2, sl
   12390:	mov	r1, r5
   12394:	mov	r0, r4
   12398:	bl	11c24 <por_write_string_field>
   1239c:	subs	r3, r0, #0
   123a0:	bne	11fac <por_begin_data+0x358>
   123a4:	add	r9, r9, #2
   123a8:	add	r8, r8, #1
   123ac:	b	122dc <por_begin_data+0x688>
   123b0:	mov	r2, r8
   123b4:	mov	r1, r7
   123b8:	mov	r0, r6
   123bc:	bl	3f88 <readstat_variable_get_missing_range_lo@plt>
   123c0:	mov	r2, r8
   123c4:	mov	r1, r7
   123c8:	mov	r0, fp
   123cc:	bl	4378 <readstat_variable_get_missing_range_hi@plt>
   123d0:	ldm	r6, {r0, r1, r2, r3}
   123d4:	bl	3ff4 <readstat_string_value@plt>
   123d8:	mov	sl, r0
   123dc:	ldm	fp, {r0, r1, r2, r3}
   123e0:	bl	3ff4 <readstat_string_value@plt>
   123e4:	cmp	sl, #0
   123e8:	cmpne	r0, #0
   123ec:	mov	r1, r0
   123f0:	beq	12438 <por_begin_data+0x7e4>
   123f4:	mov	r0, sl
   123f8:	bl	3e44 <strcmp@plt>
   123fc:	cmp	r0, #0
   12400:	bne	12438 <por_begin_data+0x7e4>
   12404:	mov	r2, #56	; 0x38
   12408:	mov	r1, r5
   1240c:	mov	r0, r4
   12410:	bl	11914 <por_write_tag>
   12414:	subs	r3, r0, #0
   12418:	bne	11fac <por_begin_data+0x358>
   1241c:	mov	r2, sl
   12420:	mov	r1, r5
   12424:	mov	r0, r4
   12428:	bl	11c24 <por_write_string_field>
   1242c:	subs	r3, r0, #0
   12430:	bne	11fac <por_begin_data+0x358>
   12434:	add	r9, r9, #1
   12438:	add	r8, r8, #1
   1243c:	b	122ec <por_begin_data+0x698>
   12440:	mov	r1, r8
   12444:	mov	r0, r4
   12448:	bl	4474 <readstat_get_label_set@plt>
   1244c:	ldr	r3, [r0, #264]	; 0x108
   12450:	mov	r6, r0
   12454:	cmp	r3, #0
   12458:	ldr	sl, [r0]
   1245c:	bne	12468 <por_begin_data+0x814>
   12460:	add	r8, r8, #1
   12464:	b	11f04 <por_begin_data+0x2b0>
   12468:	ldr	r3, [r0, #276]	; 0x114
   1246c:	cmp	r3, #0
   12470:	beq	12460 <por_begin_data+0x80c>
   12474:	mov	r2, fp
   12478:	mov	r1, r5
   1247c:	mov	r0, r4
   12480:	bl	11914 <por_write_tag>
   12484:	subs	r3, r0, #0
   12488:	bne	11fac <por_begin_data+0x358>
   1248c:	vldr	s15, [r6, #276]	; 0x114
   12490:	mov	r1, r5
   12494:	mov	r0, r4
   12498:	vcvt.f64.s32	d0, s15
   1249c:	bl	11b40 <por_write_double>
   124a0:	subs	r3, r0, #0
   124a4:	bne	11fac <por_begin_data+0x358>
   124a8:	mov	r7, r3
   124ac:	ldr	r3, [r6, #276]	; 0x114
   124b0:	cmp	r7, r3
   124b4:	blt	12520 <por_begin_data+0x8cc>
   124b8:	vldr	s15, [r6, #264]	; 0x108
   124bc:	mov	r1, r5
   124c0:	mov	r0, r4
   124c4:	vcvt.f64.s32	d0, s15
   124c8:	bl	11b40 <por_write_double>
   124cc:	subs	r3, r0, #0
   124d0:	bne	11fac <por_begin_data+0x358>
   124d4:	mov	r9, r3
   124d8:	ldr	r3, [r6, #264]	; 0x108
   124dc:	cmp	r9, r3
   124e0:	bge	12460 <por_begin_data+0x80c>
   124e4:	mov	r1, r9
   124e8:	mov	r0, r6
   124ec:	bl	451c <readstat_get_value_label@plt>
   124f0:	cmp	sl, #0
   124f4:	mov	r7, r0
   124f8:	bne	12550 <por_begin_data+0x8fc>
   124fc:	ldr	r3, [r0, #20]
   12500:	ldr	r2, [r0, #16]
   12504:	mov	r1, r5
   12508:	mov	r0, r4
   1250c:	bl	11bd8 <por_write_string_field_n>
   12510:	cmp	r0, #0
   12514:	mov	r3, r0
   12518:	beq	12564 <por_begin_data+0x910>
   1251c:	b	11fac <por_begin_data+0x358>
   12520:	mov	r1, r7
   12524:	mov	r0, r6
   12528:	bl	4498 <readstat_get_label_set_variable@plt>
   1252c:	bl	43b4 <readstat_variable_get_name@plt>
   12530:	mov	r1, r5
   12534:	mov	r2, r0
   12538:	mov	r0, r4
   1253c:	bl	11c24 <por_write_string_field>
   12540:	subs	r3, r0, #0
   12544:	bne	11fac <por_begin_data+0x358>
   12548:	add	r7, r7, #1
   1254c:	b	124ac <por_begin_data+0x858>
   12550:	cmp	sl, #5
   12554:	vldreq	d0, [r0]
   12558:	beq	12590 <por_begin_data+0x93c>
   1255c:	cmp	sl, #3
   12560:	beq	12588 <por_begin_data+0x934>
   12564:	ldr	r3, [r7, #28]
   12568:	ldr	r2, [r7, #24]
   1256c:	mov	r1, r5
   12570:	mov	r0, r4
   12574:	bl	11bd8 <por_write_string_field_n>
   12578:	subs	r3, r0, #0
   1257c:	bne	11fac <por_begin_data+0x358>
   12580:	add	r9, r9, #1
   12584:	b	124d8 <por_begin_data+0x884>
   12588:	vldr	s15, [r0, #8]
   1258c:	vcvt.f64.s32	d0, s15
   12590:	mov	r1, r5
   12594:	mov	r0, r4
   12598:	bl	11b40 <por_write_double>
   1259c:	b	12510 <por_begin_data+0x8bc>
   125a0:	ldr	r3, [r4, #48]	; 0x30
   125a4:	ldr	r7, [r3, r6, lsl #2]
   125a8:	mov	r0, r7
   125ac:	bl	424c <strlen@plt>
   125b0:	cmp	r0, #80	; 0x50
   125b4:	mov	r3, r0
   125b8:	bhi	125dc <por_begin_data+0x988>
   125bc:	mov	r2, r7
   125c0:	mov	r1, r5
   125c4:	mov	r0, r4
   125c8:	bl	11bd8 <por_write_string_field_n>
   125cc:	subs	r3, r0, #0
   125d0:	bne	11fac <por_begin_data+0x358>
   125d4:	add	r6, r6, #1
   125d8:	b	11f48 <por_begin_data+0x2f4>
   125dc:	mov	r3, #32
   125e0:	b	11fac <por_begin_data+0x358>
   125e4:	mov	r3, #39	; 0x27
   125e8:	b	11fac <por_begin_data+0x358>
   125ec:	mov	r0, r7
   125f0:	bl	4450 <readstat_variable_get_label@plt>
   125f4:	subs	r7, r0, #0
   125f8:	beq	1262c <por_begin_data+0x9d8>
   125fc:	mov	r2, #67	; 0x43
   12600:	mov	r1, r5
   12604:	mov	r0, r4
   12608:	bl	11914 <por_write_tag>
   1260c:	subs	r3, r0, #0
   12610:	bne	11fac <por_begin_data+0x358>
   12614:	mov	r2, r7
   12618:	mov	r1, r5
   1261c:	mov	r0, r4
   12620:	bl	11c24 <por_write_string_field>
   12624:	subs	r3, r0, #0
   12628:	bne	11fac <por_begin_data+0x358>
   1262c:	ldr	r3, [sp, #12]
   12630:	add	r3, r3, #1
   12634:	str	r3, [sp, #12]
   12638:	b	11eec <por_begin_data+0x298>

0001263c <readstat_begin_writing_por>:
   1263c:	ldr	ip, [pc, #164]	; 126e8 <readstat_begin_writing_por+0xac>
   12640:	add	ip, pc, ip
   12644:	str	ip, [r0, #292]	; 0x124
   12648:	ldr	ip, [pc, #156]	; 126ec <readstat_begin_writing_por+0xb0>
   1264c:	add	ip, pc, ip
   12650:	str	ip, [r0, #228]	; 0xe4
   12654:	ldr	ip, [pc, #148]	; 126f0 <readstat_begin_writing_por+0xb4>
   12658:	add	ip, pc, ip
   1265c:	str	ip, [r0, #232]	; 0xe8
   12660:	ldr	ip, [pc, #140]	; 126f4 <readstat_begin_writing_por+0xb8>
   12664:	add	ip, pc, ip
   12668:	str	ip, [r0, #236]	; 0xec
   1266c:	ldr	ip, [pc, #132]	; 126f8 <readstat_begin_writing_por+0xbc>
   12670:	add	ip, pc, ip
   12674:	str	ip, [r0, #240]	; 0xf0
   12678:	ldr	ip, [pc, #124]	; 126fc <readstat_begin_writing_por+0xc0>
   1267c:	add	ip, pc, ip
   12680:	str	ip, [r0, #244]	; 0xf4
   12684:	ldr	ip, [pc, #116]	; 12700 <readstat_begin_writing_por+0xc4>
   12688:	add	ip, pc, ip
   1268c:	str	ip, [r0, #248]	; 0xf8
   12690:	ldr	ip, [pc, #108]	; 12704 <readstat_begin_writing_por+0xc8>
   12694:	add	ip, pc, ip
   12698:	str	ip, [r0, #252]	; 0xfc
   1269c:	ldr	ip, [pc, #100]	; 12708 <readstat_begin_writing_por+0xcc>
   126a0:	add	ip, pc, ip
   126a4:	str	ip, [r0, #256]	; 0x100
   126a8:	ldr	ip, [pc, #92]	; 1270c <readstat_begin_writing_por+0xd0>
   126ac:	add	ip, pc, ip
   126b0:	str	ip, [r0, #264]	; 0x108
   126b4:	ldr	ip, [pc, #84]	; 12710 <readstat_begin_writing_por+0xd4>
   126b8:	add	ip, pc, ip
   126bc:	str	ip, [r0, #268]	; 0x10c
   126c0:	ldr	ip, [pc, #76]	; 12714 <readstat_begin_writing_por+0xd8>
   126c4:	add	ip, pc, ip
   126c8:	str	ip, [r0, #276]	; 0x114
   126cc:	ldr	ip, [pc, #68]	; 12718 <readstat_begin_writing_por+0xdc>
   126d0:	add	ip, pc, ip
   126d4:	str	ip, [r0, #280]	; 0x118
   126d8:	ldr	ip, [pc, #60]	; 1271c <readstat_begin_writing_por+0xe0>
   126dc:	add	ip, pc, ip
   126e0:	str	ip, [r0, #284]	; 0x11c
   126e4:	b	3fac <readstat_begin_writing_file@plt>
   126e8:	.word	0xffffed28
   126ec:	.word	0xffffed0c
   126f0:	.word	0xffffed24
   126f4:	.word	0xfffff1b4
   126f8:	.word	0xfffff19c
   126fc:	.word	0xfffff184
   12700:	.word	0xfffff170
   12704:	.word	0xfffff128
   12708:	.word	0xfffff0a0
   1270c:	.word	0xfffff13c
   12710:	.word	0xfffff11c
   12714:	.word	0xfffff588
   12718:	.word	0xfffff2c0
   1271c:	.word	0xfffff254

00012720 <sav_ctx_free>:
   12720:	ldr	r3, [r0, #44]	; 0x2c
   12724:	push	{r4, r5, r6, lr}
   12728:	cmp	r3, #0
   1272c:	mov	r4, r0
   12730:	movne	r5, #0
   12734:	bne	127a4 <sav_ctx_free+0x84>
   12738:	ldr	r3, [r4, #52]	; 0x34
   1273c:	cmp	r3, #0
   12740:	movne	r5, #0
   12744:	bne	127d4 <sav_ctx_free+0xb4>
   12748:	ldr	r0, [r4, #376]	; 0x178
   1274c:	cmp	r0, #0
   12750:	beq	12758 <sav_ctx_free+0x38>
   12754:	bl	3f04 <free@plt>
   12758:	ldr	r0, [r4, #384]	; 0x180
   1275c:	cmp	r0, #0
   12760:	beq	12768 <sav_ctx_free+0x48>
   12764:	bl	3f04 <free@plt>
   12768:	ldr	r0, [r4, #336]	; 0x150
   1276c:	cmp	r0, #0
   12770:	beq	12778 <sav_ctx_free+0x58>
   12774:	bl	3e14 <iconv_close@plt>
   12778:	ldr	r0, [r4, #328]	; 0x148
   1277c:	cmp	r0, #0
   12780:	beq	12788 <sav_ctx_free+0x68>
   12784:	bl	3f04 <free@plt>
   12788:	mov	r0, r4
   1278c:	pop	{r4, r5, r6, lr}
   12790:	b	3f04 <free@plt>
   12794:	ldr	r3, [r4, #44]	; 0x2c
   12798:	ldr	r0, [r3, r5, lsl #2]
   1279c:	bl	4468 <spss_varinfo_free@plt>
   127a0:	add	r5, r5, #1
   127a4:	ldr	r3, [r4, #340]	; 0x154
   127a8:	cmp	r5, r3
   127ac:	blt	12794 <sav_ctx_free+0x74>
   127b0:	ldr	r0, [r4, #44]	; 0x2c
   127b4:	bl	3f04 <free@plt>
   127b8:	b	12738 <sav_ctx_free+0x18>
   127bc:	ldr	r3, [r4, #52]	; 0x34
   127c0:	ldr	r0, [r3, r5, lsl #2]
   127c4:	cmp	r0, #0
   127c8:	beq	127d0 <sav_ctx_free+0xb0>
   127cc:	bl	3f04 <free@plt>
   127d0:	add	r5, r5, #1
   127d4:	ldr	r3, [r4, #348]	; 0x15c
   127d8:	cmp	r5, r3
   127dc:	blt	127bc <sav_ctx_free+0x9c>
   127e0:	ldr	r0, [r4, #52]	; 0x34
   127e4:	bl	3f04 <free@plt>
   127e8:	b	12748 <sav_ctx_free+0x28>

000127ec <sav_ctx_init>:
   127ec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   127f0:	mov	r4, r0
   127f4:	mov	r6, r1
   127f8:	mov	r0, #1
   127fc:	mov	r1, #440	; 0x1b8
   12800:	bl	400c <readstat_calloc@plt>
   12804:	subs	r5, r0, #0
   12808:	beq	129f0 <sav_ctx_init+0x204>
   1280c:	ldr	r1, [pc, #584]	; 12a5c <sav_ctx_init+0x270>
   12810:	mov	r2, #4
   12814:	add	r1, pc, r1
   12818:	mov	r0, r4
   1281c:	bl	3fe8 <memcmp@plt>
   12820:	cmp	r0, #0
   12824:	moveq	r3, #2
   12828:	beq	1284c <sav_ctx_init+0x60>
   1282c:	ldr	r1, [pc, #556]	; 12a60 <sav_ctx_init+0x274>
   12830:	mov	r2, #4
   12834:	add	r1, pc, r1
   12838:	mov	r0, r4
   1283c:	bl	3fe8 <memcmp@plt>
   12840:	cmp	r0, #0
   12844:	bne	129e4 <sav_ctx_init+0x1f8>
   12848:	mov	r3, #3
   1284c:	str	r3, [r5, #424]	; 0x1a8
   12850:	ldrb	r2, [r4, #65]	; 0x41
   12854:	ldrb	r3, [r4, #64]	; 0x40
   12858:	orr	r3, r3, r2, lsl #8
   1285c:	ldrb	r2, [r4, #66]	; 0x42
   12860:	orr	r3, r3, r2, lsl #16
   12864:	ldrb	r2, [r4, #67]	; 0x43
   12868:	orr	r3, r3, r2, lsl #24
   1286c:	ldrb	r2, [r5, #436]	; 0x1b4
   12870:	sub	r3, r3, #2
   12874:	bic	r2, r2, #1
   12878:	cmp	r3, #1
   1287c:	movls	r3, r2
   12880:	orrhi	r3, r2, #1
   12884:	strb	r3, [r5, #436]	; 0x1b4
   12888:	bl	3ef8 <machine_is_little_endian@plt>
   1288c:	ldrb	r3, [r5, #436]	; 0x1b4
   12890:	and	r3, r3, #1
   12894:	cmp	r0, r3
   12898:	movne	r0, #1
   1289c:	moveq	r0, #2
   128a0:	str	r0, [r5, #432]	; 0x1b0
   128a4:	ldrb	r3, [r4, #73]	; 0x49
   128a8:	ldrb	r0, [r4, #72]	; 0x48
   128ac:	orr	r0, r0, r3, lsl #8
   128b0:	ldrb	r3, [r4, #74]	; 0x4a
   128b4:	orr	r0, r0, r3, lsl #16
   128b8:	ldrb	r3, [r4, #75]	; 0x4b
   128bc:	orr	r0, r0, r3, lsl #24
   128c0:	cmp	r0, #1
   128c4:	bne	129f8 <sav_ctx_init+0x20c>
   128c8:	mov	r3, #1
   128cc:	str	r3, [r5, #428]	; 0x1ac
   128d0:	ldrb	r3, [r5, #436]	; 0x1b4
   128d4:	ldrb	r1, [r4, #81]	; 0x51
   128d8:	ldrb	r0, [r4, #82]	; 0x52
   128dc:	tst	r3, #1
   128e0:	ldrb	r3, [r4, #80]	; 0x50
   128e4:	ldrb	r2, [r4, #83]	; 0x53
   128e8:	orr	r3, r3, r1, lsl #8
   128ec:	orr	r0, r3, r0, lsl #16
   128f0:	orr	r0, r0, r2, lsl #24
   128f4:	beq	128fc <sav_ctx_init+0x110>
   128f8:	bl	3dd8 <byteswap4@plt>
   128fc:	ldrb	r3, [r5, #436]	; 0x1b4
   12900:	str	r0, [r5, #352]	; 0x160
   12904:	ldrb	r1, [r4, #77]	; 0x4d
   12908:	tst	r3, #1
   1290c:	ldrb	r0, [r4, #78]	; 0x4e
   12910:	ldrb	r3, [r4, #76]	; 0x4c
   12914:	ldrb	r2, [r4, #79]	; 0x4f
   12918:	orr	r3, r3, r1, lsl #8
   1291c:	orr	r0, r3, r0, lsl #16
   12920:	orr	r0, r0, r2, lsl #24
   12924:	beq	1292c <sav_ctx_init+0x140>
   12928:	bl	3dd8 <byteswap4@plt>
   1292c:	str	r0, [r5, #372]	; 0x174
   12930:	add	r3, r5, #400	; 0x190
   12934:	mvn	r0, #0
   12938:	mvn	r1, #1048576	; 0x100000
   1293c:	strd	r0, [r3, #-8]
   12940:	mvn	r0, #1
   12944:	mvn	r1, #1048576	; 0x100000
   12948:	strd	r0, [r3]
   1294c:	ldr	r1, [pc, #272]	; 12a64 <sav_ctx_init+0x278>
   12950:	add	r3, r5, #416	; 0x1a0
   12954:	mvn	r0, #0
   12958:	strd	r0, [r3, #-8]
   1295c:	ldrb	r3, [r5, #436]	; 0x1b4
   12960:	ldrb	r2, [r4, #84]	; 0x54
   12964:	ldrb	r8, [r4, #86]	; 0x56
   12968:	tst	r3, #1
   1296c:	ldrb	ip, [r4, #87]	; 0x57
   12970:	ldrb	r3, [r4, #85]	; 0x55
   12974:	ldrb	r1, [r4, #88]	; 0x58
   12978:	ldrb	r7, [r4, #89]	; 0x59
   1297c:	ldrb	lr, [r4, #90]	; 0x5a
   12980:	ldrb	r0, [r4, #91]	; 0x5b
   12984:	beq	12a40 <sav_ctx_init+0x254>
   12988:	orr	r2, r2, r3, lsl #8
   1298c:	orr	r1, r1, r7, lsl #8
   12990:	orr	r2, r2, r8, lsl #16
   12994:	orr	r1, r1, lr, lsl #16
   12998:	orr	r8, r2, ip, lsl #24
   1299c:	orr	r9, r1, r0, lsl #24
   129a0:	vmov	d0, r8, r9
   129a4:	bl	4558 <byteswap_double@plt>
   129a8:	vmov	r3, s0
   129ac:	vmov	r2, s1
   129b0:	mov	r0, r3
   129b4:	mov	r1, r2
   129b8:	str	r0, [r5, #416]	; 0x1a0
   129bc:	str	r1, [r5, #420]	; 0x1a4
   129c0:	mov	r0, #512	; 0x200
   129c4:	str	r0, [r5, #48]	; 0x30
   129c8:	mov	r1, #4
   129cc:	bl	400c <readstat_calloc@plt>
   129d0:	cmp	r0, #0
   129d4:	mov	r4, r0
   129d8:	str	r0, [r5, #44]	; 0x2c
   129dc:	strne	r6, [r5, #36]	; 0x24
   129e0:	bne	129f0 <sav_ctx_init+0x204>
   129e4:	mov	r0, r5
   129e8:	bl	3f58 <sav_ctx_free@plt>
   129ec:	mov	r5, #0
   129f0:	mov	r0, r5
   129f4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   129f8:	bl	3dd8 <byteswap4@plt>
   129fc:	cmp	r0, #1
   12a00:	beq	128c8 <sav_ctx_init+0xdc>
   12a04:	ldrb	r3, [r4, #73]	; 0x49
   12a08:	ldrb	r0, [r4, #72]	; 0x48
   12a0c:	orr	r0, r0, r3, lsl #8
   12a10:	ldrb	r3, [r4, #74]	; 0x4a
   12a14:	orr	r0, r0, r3, lsl #16
   12a18:	ldrb	r3, [r4, #75]	; 0x4b
   12a1c:	orr	r0, r0, r3, lsl #24
   12a20:	cmp	r0, #2
   12a24:	bne	12a30 <sav_ctx_init+0x244>
   12a28:	mov	r3, #2
   12a2c:	b	128cc <sav_ctx_init+0xe0>
   12a30:	bl	3dd8 <byteswap4@plt>
   12a34:	cmp	r0, #2
   12a38:	bne	128d0 <sav_ctx_init+0xe4>
   12a3c:	b	12a28 <sav_ctx_init+0x23c>
   12a40:	orr	r3, r2, r3, lsl #8
   12a44:	orr	r2, r1, r7, lsl #8
   12a48:	orr	r3, r3, r8, lsl #16
   12a4c:	orr	r2, r2, lr, lsl #16
   12a50:	orr	r3, r3, ip, lsl #24
   12a54:	orr	r2, r2, r0, lsl #24
   12a58:	b	129b0 <sav_ctx_init+0x1c4>
   12a5c:	.word	0x0000f8db
   12a60:	.word	0x0000f8c0
   12a64:	.word	0x7fefffff

00012a68 <sav_compressed_row_bound>:
   12a68:	lsr	r3, r0, #3
   12a6c:	add	r3, r3, #8
   12a70:	bic	r3, r3, #7
   12a74:	add	r0, r3, r0
   12a78:	bx	lr

00012a7c <sav_compress_row>:
   12a7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a80:	vpush	{d8-d9}
   12a84:	vldr	d8, [pc, #468]	; 12c60 <sav_compress_row+0x1e4>
   12a88:	vldr	d9, [pc, #472]	; 12c68 <sav_compress_row+0x1ec>
   12a8c:	mov	r8, #0
   12a90:	sub	sp, sp, #28
   12a94:	mov	r5, r0
   12a98:	mov	r9, r3
   12a9c:	mov	r6, r8
   12aa0:	mov	r4, #8
   12aa4:	mov	r7, r8
   12aa8:	str	r1, [sp]
   12aac:	str	r8, [r0]
   12ab0:	str	r8, [r0, #4]
   12ab4:	ldr	r3, [r9, #28]
   12ab8:	cmp	r8, r3
   12abc:	blt	12ae8 <sav_compress_row+0x6c>
   12ac0:	ldr	r3, [r9, #84]	; 0x54
   12ac4:	ldr	r2, [r9, #80]	; 0x50
   12ac8:	add	r3, r3, #1
   12acc:	cmp	r3, r2
   12ad0:	mvneq	r3, #3
   12ad4:	mov	r0, r4
   12ad8:	strbeq	r3, [r5, r6]
   12adc:	add	sp, sp, #28
   12ae0:	vpop	{d8-d9}
   12ae4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ae8:	mov	r1, r8
   12aec:	mov	r0, r9
   12af0:	bl	43cc <readstat_get_variable@plt>
   12af4:	ldr	r3, [r0]
   12af8:	cmp	r3, #0
   12afc:	bne	12b98 <sav_compress_row+0x11c>
   12b00:	ldr	r2, [pc, #360]	; 12c70 <sav_compress_row+0x1f4>
   12b04:	ldr	r3, [r0, #1596]	; 0x63c
   12b08:	add	r2, pc, r2
   12b0c:	add	r3, r7, r3
   12b10:	mov	fp, r2
   12b14:	cmp	r7, r3
   12b18:	bne	12b24 <sav_compress_row+0xa8>
   12b1c:	add	r8, r8, #1
   12b20:	b	12ab4 <sav_compress_row+0x38>
   12b24:	str	r3, [sp, #4]
   12b28:	ldr	r3, [sp]
   12b2c:	mov	r1, fp
   12b30:	add	sl, r3, r7
   12b34:	mov	r2, #8
   12b38:	mov	r0, sl
   12b3c:	bl	3fe8 <memcmp@plt>
   12b40:	add	r2, r6, #1
   12b44:	ldr	r3, [sp, #4]
   12b48:	add	r7, r7, #8
   12b4c:	cmp	r0, #0
   12b50:	mvnne	r1, #2
   12b54:	strbne	r1, [r5, r6]
   12b58:	ldrne	r1, [sl]
   12b5c:	addne	r0, r5, r4
   12b60:	strne	r1, [r5, r4]
   12b64:	ldrne	r1, [sl, #4]
   12b68:	mvneq	r1, #1
   12b6c:	strbeq	r1, [r5, r6]
   12b70:	addne	r4, r4, #8
   12b74:	strne	r1, [r0, #4]
   12b78:	mov	r6, r2
   12b7c:	ands	r2, r2, #7
   12b80:	addeq	r1, r5, r4
   12b84:	streq	r2, [r5, r4]
   12b88:	moveq	r6, r4
   12b8c:	streq	r2, [r1, #4]
   12b90:	addeq	r4, r4, #8
   12b94:	b	12b14 <sav_compress_row+0x98>
   12b98:	ldr	r3, [sp]
   12b9c:	mvn	fp, #1048576	; 0x100000
   12ba0:	add	ip, r3, r7
   12ba4:	add	r3, sp, #8
   12ba8:	ldr	r0, [ip]
   12bac:	ldr	r1, [ip, #4]
   12bb0:	mvn	sl, #0
   12bb4:	stmia	r3!, {r0, r1}
   12bb8:	ldrd	r2, [sp, #8]
   12bbc:	cmp	r3, fp
   12bc0:	cmpeq	r2, sl
   12bc4:	add	r3, r6, #1
   12bc8:	mvneq	r2, #0
   12bcc:	beq	12c10 <sav_compress_row+0x194>
   12bd0:	add	r2, sp, #16
   12bd4:	stmia	r2!, {r0, r1}
   12bd8:	vldr	d6, [sp, #16]
   12bdc:	vcmpe.f64	d6, d8
   12be0:	vmrs	APSR_nzcv, fpscr
   12be4:	ble	12c38 <sav_compress_row+0x1bc>
   12be8:	vcmpe.f64	d6, d9
   12bec:	vmrs	APSR_nzcv, fpscr
   12bf0:	bpl	12c38 <sav_compress_row+0x1bc>
   12bf4:	vcvt.s32.f64	s15, d6
   12bf8:	vcvt.f64.s32	d5, s15
   12bfc:	vcmp.f64	d6, d5
   12c00:	vmrs	APSR_nzcv, fpscr
   12c04:	bne	12c38 <sav_compress_row+0x1bc>
   12c08:	vmov	r2, s15
   12c0c:	add	r2, r2, #100	; 0x64
   12c10:	strb	r2, [r5, r6]
   12c14:	mov	r6, r3
   12c18:	ands	r3, r3, #7
   12c1c:	addeq	r2, r5, r4
   12c20:	streq	r3, [r5, r4]
   12c24:	moveq	r6, r4
   12c28:	streq	r3, [r2, #4]
   12c2c:	addeq	r4, r4, #8
   12c30:	add	r7, r7, #8
   12c34:	b	12b1c <sav_compress_row+0xa0>
   12c38:	mvn	r2, #2
   12c3c:	strb	r2, [r5, r6]
   12c40:	ldr	r2, [ip]
   12c44:	add	r1, r5, r4
   12c48:	str	r2, [r5, r4]
   12c4c:	ldr	r2, [ip, #4]
   12c50:	add	r4, r4, #8
   12c54:	str	r2, [r1, #4]
   12c58:	b	12c14 <sav_compress_row+0x198>
   12c5c:	nop			; (mov r0, r0)
   12c60:	.word	0x00000000
   12c64:	.word	0xc0590000
   12c68:	.word	0x00000000
   12c6c:	.word	0x40630000
   12c70:	.word	0x0000f5f1

00012c74 <sav_decompress_row>:
   12c74:	ldr	r3, [r0, #44]	; 0x2c
   12c78:	push	{r4, r5, r6, r7, r8, r9, lr}
   12c7c:	mov	r4, r0
   12c80:	cmp	r3, #0
   12c84:	sub	sp, sp, #20
   12c88:	ldr	r0, [r0, #16]
   12c8c:	ldr	r1, [r4, #20]
   12c90:	beq	12c98 <sav_decompress_row+0x24>
   12c94:	bl	3dc0 <byteswap8@plt>
   12c98:	ldr	r5, [r4, #40]	; 0x28
   12c9c:	mov	r7, sp
   12ca0:	rsb	r5, r5, #8
   12ca4:	add	r8, sp, #8
   12ca8:	str	r0, [sp, #8]
   12cac:	str	r1, [sp, #12]
   12cb0:	cmp	r5, #8
   12cb4:	bne	12cf8 <sav_decompress_row+0x84>
   12cb8:	ldr	r2, [r4, #4]
   12cbc:	cmp	r2, #7
   12cc0:	bhi	12ccc <sav_decompress_row+0x58>
   12cc4:	mov	r3, #0
   12cc8:	b	12d8c <sav_decompress_row+0x118>
   12ccc:	mov	r1, r4
   12cd0:	mov	r5, #0
   12cd4:	ldr	r3, [r1], #32
   12cd8:	sub	r2, r2, #8
   12cdc:	add	r3, r3, #8
   12ce0:	ldr	r0, [r3, #-8]
   12ce4:	str	r0, [r4, #32]
   12ce8:	ldr	r0, [r3, #-4]
   12cec:	str	r0, [r1, #4]
   12cf0:	str	r3, [r4]
   12cf4:	str	r2, [r4, #4]
   12cf8:	add	r6, r5, #32
   12cfc:	add	r6, r4, r6
   12d00:	mov	r9, #8
   12d04:	cmp	r5, #7
   12d08:	bgt	12cb0 <sav_decompress_row+0x3c>
   12d0c:	ldrb	r3, [r6], #1
   12d10:	cmp	r3, #253	; 0xfd
   12d14:	beq	12da0 <sav_decompress_row+0x12c>
   12d18:	bhi	12d60 <sav_decompress_row+0xec>
   12d1c:	cmp	r3, #0
   12d20:	beq	12df4 <sav_decompress_row+0x180>
   12d24:	cmp	r3, #252	; 0xfc
   12d28:	beq	12d88 <sav_decompress_row+0x114>
   12d2c:	vmov	s15, r3
   12d30:	ldr	r3, [r4, #44]	; 0x2c
   12d34:	cmp	r3, #0
   12d38:	vcvt.f64.s32	d0, s15
   12d3c:	vldr	d7, [r4, #24]
   12d40:	vsub.f64	d0, d0, d7
   12d44:	vstr	d0, [sp]
   12d48:	beq	12d50 <sav_decompress_row+0xdc>
   12d4c:	bl	4558 <byteswap_double@plt>
   12d50:	vstr	d0, [sp]
   12d54:	ldr	r2, [r4, #8]
   12d58:	mov	r3, r7
   12d5c:	b	12d78 <sav_decompress_row+0x104>
   12d60:	cmp	r3, #254	; 0xfe
   12d64:	beq	12e0c <sav_decompress_row+0x198>
   12d68:	cmp	r3, #255	; 0xff
   12d6c:	moveq	r3, r8
   12d70:	ldreq	r2, [r4, #8]
   12d74:	bne	12d2c <sav_decompress_row+0xb8>
   12d78:	ldm	r3!, {r0, r1}
   12d7c:	str	r0, [r2]
   12d80:	str	r1, [r2, #4]
   12d84:	b	12e1c <sav_decompress_row+0x1a8>
   12d88:	mov	r3, #3
   12d8c:	rsb	r5, r5, #8
   12d90:	str	r3, [r4, #48]	; 0x30
   12d94:	str	r5, [r4, #40]	; 0x28
   12d98:	add	sp, sp, #20
   12d9c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12da0:	ldr	r3, [r4, #4]
   12da4:	cmp	r3, #7
   12da8:	bls	12cc4 <sav_decompress_row+0x50>
   12dac:	ldr	r1, [r4]
   12db0:	ldr	r2, [r4, #8]
   12db4:	ldr	r3, [r1]
   12db8:	str	r3, [r2]
   12dbc:	ldr	r3, [r1, #4]
   12dc0:	str	r3, [r2, #4]
   12dc4:	ldr	r3, [r4, #8]
   12dc8:	add	r3, r3, #8
   12dcc:	str	r3, [r4, #8]
   12dd0:	ldr	r3, [r4, #12]
   12dd4:	sub	r3, r3, #8
   12dd8:	str	r3, [r4, #12]
   12ddc:	ldr	r3, [r4]
   12de0:	add	r3, r3, #8
   12de4:	str	r3, [r4]
   12de8:	ldr	r3, [r4, #4]
   12dec:	sub	r3, r3, #8
   12df0:	str	r3, [r4, #4]
   12df4:	ldr	r3, [r4, #12]
   12df8:	add	r5, r5, #1
   12dfc:	cmp	r3, #7
   12e00:	bhi	12d04 <sav_decompress_row+0x90>
   12e04:	mov	r3, #2
   12e08:	b	12d8c <sav_decompress_row+0x118>
   12e0c:	mov	r2, r9
   12e10:	mov	r1, #32
   12e14:	ldr	r0, [r4, #8]
   12e18:	bl	42e8 <memset@plt>
   12e1c:	ldr	r3, [r4, #8]
   12e20:	add	r3, r3, #8
   12e24:	str	r3, [r4, #8]
   12e28:	ldr	r3, [r4, #12]
   12e2c:	sub	r3, r3, #8
   12e30:	str	r3, [r4, #12]
   12e34:	b	12df4 <sav_decompress_row+0x180>

00012e38 <compare_key_varlookup>:
   12e38:	b	3e44 <strcmp@plt>

00012e3c <count_vars>:
   12e3c:	push	{r4, r5, r6, r7, r8, lr}
   12e40:	mov	r4, #0
   12e44:	ldr	r8, [r0, #340]	; 0x154
   12e48:	mov	r6, r0
   12e4c:	mov	r1, r4
   12e50:	mov	r5, r4
   12e54:	cmp	r5, r8
   12e58:	blt	12e64 <count_vars+0x28>
   12e5c:	mov	r0, r4
   12e60:	pop	{r4, r5, r6, r7, r8, pc}
   12e64:	ldr	r3, [r6, #44]	; 0x2c
   12e68:	cmp	r1, #0
   12e6c:	ldr	r7, [r3, r5, lsl #2]
   12e70:	beq	12e88 <count_vars+0x4c>
   12e74:	add	r1, r1, #187	; 0xbb
   12e78:	add	r0, r7, #187	; 0xbb
   12e7c:	bl	3e44 <strcmp@plt>
   12e80:	cmp	r0, #0
   12e84:	beq	12e8c <count_vars+0x50>
   12e88:	add	r4, r4, #1
   12e8c:	add	r5, r5, #1
   12e90:	mov	r1, r7
   12e94:	b	12e54 <count_vars+0x18>

00012e98 <compare_varlookups>:
   12e98:	b	3e44 <strcmp@plt>

00012e9c <build_lookup_table>:
   12e9c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ea0:	mov	r6, #40	; 0x28
   12ea4:	mov	sl, r0
   12ea8:	mul	r0, r6, r0
   12eac:	mov	fp, r1
   12eb0:	bl	4270 <readstat_malloc@plt>
   12eb4:	mov	r1, #0
   12eb8:	mov	r5, r1
   12ebc:	mov	r8, r1
   12ec0:	mov	r4, r0
   12ec4:	ldr	r3, [fp, #340]	; 0x154
   12ec8:	cmp	r5, r3
   12ecc:	blt	12ef0 <build_lookup_table+0x54>
   12ed0:	ldr	r3, [pc, #120]	; 12f50 <build_lookup_table+0xb4>
   12ed4:	mov	r0, r4
   12ed8:	add	r3, pc, r3
   12edc:	mov	r2, #40	; 0x28
   12ee0:	mov	r1, sl
   12ee4:	bl	448c <qsort@plt>
   12ee8:	mov	r0, r4
   12eec:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ef0:	ldr	r3, [fp, #44]	; 0x2c
   12ef4:	cmp	r1, #0
   12ef8:	ldr	r9, [r3, r5, lsl #2]
   12efc:	add	r7, r9, #187	; 0xbb
   12f00:	beq	12f18 <build_lookup_table+0x7c>
   12f04:	add	r1, r1, #187	; 0xbb
   12f08:	mov	r0, r7
   12f0c:	bl	3e44 <strcmp@plt>
   12f10:	cmp	r0, #0
   12f14:	beq	12f44 <build_lookup_table+0xa8>
   12f18:	mul	r1, r6, r8
   12f1c:	ldr	r2, [r7]
   12f20:	add	r3, r4, r1
   12f24:	str	r2, [r4, r1]
   12f28:	ldr	r2, [r7, #4]
   12f2c:	add	r8, r8, #1
   12f30:	str	r2, [r3, #4]
   12f34:	ldrb	r2, [r7, #8]
   12f38:	strb	r2, [r3, #8]
   12f3c:	ldr	r2, [r9, #8]
   12f40:	str	r2, [r3, #36]	; 0x24
   12f44:	add	r5, r5, #1
   12f48:	mov	r1, r9
   12f4c:	b	12ec4 <build_lookup_table+0x28>
   12f50:	.word	0xffffffb8

00012f54 <sav_parse_long_variable_names_record>:
   12f54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f58:	sub	sp, sp, #8320	; 0x2080
   12f5c:	sub	sp, sp, #28
   12f60:	mov	r6, r2
   12f64:	str	r0, [sp, #28]
   12f68:	mov	r0, r2
   12f6c:	str	r1, [sp, #36]	; 0x24
   12f70:	bl	12e3c <count_vars>
   12f74:	ldr	r2, [sp, #36]	; 0x24
   12f78:	ldr	r3, [sp, #28]
   12f7c:	mov	r1, r6
   12f80:	add	r3, r3, r2
   12f84:	str	r3, [sp, #24]
   12f88:	str	r0, [sp, #40]	; 0x28
   12f8c:	bl	12e9c <build_lookup_table>
   12f90:	ldr	r3, [sp, #28]
   12f94:	ldr	r2, [sp, #24]
   12f98:	cmp	r3, r2
   12f9c:	str	r0, [sp, #32]
   12fa0:	beq	13408 <sav_parse_long_variable_names_record+0x4b4>
   12fa4:	ldr	r8, [pc, #1132]	; 13418 <sav_parse_long_variable_names_record+0x4c4>
   12fa8:	mov	r5, r3
   12fac:	add	r8, pc, r8
   12fb0:	add	r3, r8, #496	; 0x1f0
   12fb4:	str	r3, [sp, #60]	; 0x3c
   12fb8:	ldr	r3, [pc, #1116]	; 1341c <sav_parse_long_variable_names_record+0x4c8>
   12fbc:	mov	r7, #1
   12fc0:	add	r3, pc, r3
   12fc4:	str	r3, [sp, #68]	; 0x44
   12fc8:	add	r3, r8, #1488	; 0x5d0
   12fcc:	mov	r4, #0
   12fd0:	add	r3, r3, #9
   12fd4:	str	r4, [sp, #20]
   12fd8:	str	r8, [sp, #44]	; 0x2c
   12fdc:	str	r3, [sp, #52]	; 0x34
   12fe0:	ldr	r2, [sp, #60]	; 0x3c
   12fe4:	lsl	r3, r7, #1
   12fe8:	add	r1, r8, #648	; 0x288
   12fec:	ldrsh	r2, [r2, r3]
   12ff0:	ldrsh	r3, [r1, r3]
   12ff4:	add	r1, r8, r7
   12ff8:	add	r2, r8, r2
   12ffc:	ldrb	lr, [r1, #800]	; 0x320
   13000:	cmp	lr, #0
   13004:	beq	13100 <sav_parse_long_variable_names_record+0x1ac>
   13008:	sub	ip, lr, #1
   1300c:	add	ip, r2, ip
   13010:	mov	r0, r2
   13014:	cmp	r0, ip
   13018:	bhi	130f8 <sav_parse_long_variable_names_record+0x1a4>
   1301c:	sub	r9, ip, r0
   13020:	ldrb	sl, [r5]
   13024:	add	r1, r0, r9, asr #1
   13028:	ldrb	r9, [r0, r9, asr #1]
   1302c:	cmp	sl, r9
   13030:	subcc	ip, r1, #1
   13034:	bcc	13014 <sav_parse_long_variable_names_record+0xc0>
   13038:	addhi	r0, r1, #1
   1303c:	bhi	13014 <sav_parse_long_variable_names_record+0xc0>
   13040:	sub	r2, r1, r2
   13044:	add	r3, r3, r2
   13048:	ldr	r2, [sp, #44]	; 0x2c
   1304c:	add	r3, r2, r3
   13050:	ldrb	r3, [r3, #952]	; 0x3b8
   13054:	add	r3, r2, r3
   13058:	ldrb	r7, [r3, #1347]	; 0x543
   1305c:	ldrb	r3, [r3, #1422]	; 0x58e
   13060:	cmp	r3, #0
   13064:	beq	130a0 <sav_parse_long_variable_names_record+0x14c>
   13068:	ldr	r2, [sp, #52]	; 0x34
   1306c:	add	fp, sp, #88	; 0x58
   13070:	add	r9, r2, r3
   13074:	ldrb	r3, [r2, r3]
   13078:	add	r3, r9, r3
   1307c:	str	r3, [sp, #56]	; 0x38
   13080:	sub	r3, fp, #4
   13084:	str	r3, [sp, #48]	; 0x30
   13088:	ldr	r3, [pc, #912]	; 13420 <sav_parse_long_variable_names_record+0x4cc>
   1308c:	add	r3, pc, r3
   13090:	str	r3, [sp, #64]	; 0x40
   13094:	ldr	r3, [sp, #56]	; 0x38
   13098:	cmp	r3, r9
   1309c:	bne	13170 <sav_parse_long_variable_names_record+0x21c>
   130a0:	cmp	r7, #0
   130a4:	beq	1330c <sav_parse_long_variable_names_record+0x3b8>
   130a8:	ldr	r3, [sp, #24]
   130ac:	add	r5, r5, #1
   130b0:	cmp	r3, r5
   130b4:	bne	12fe0 <sav_parse_long_variable_names_record+0x8c>
   130b8:	ldr	r2, [pc, #868]	; 13424 <sav_parse_long_variable_names_record+0x4d0>
   130bc:	add	sl, sp, #88	; 0x58
   130c0:	add	r2, pc, r2
   130c4:	add	r3, r2, #1488	; 0x5d0
   130c8:	add	r2, r2, r7
   130cc:	add	r3, r3, #9
   130d0:	ldrb	r2, [r2, #1509]	; 0x5e5
   130d4:	sub	r9, sl, #4
   130d8:	add	r5, r3, r2
   130dc:	ldrb	r3, [r3, r2]
   130e0:	add	r3, r5, r3
   130e4:	str	r3, [sp, #44]	; 0x2c
   130e8:	ldr	r3, [pc, #824]	; 13428 <sav_parse_long_variable_names_record+0x4d4>
   130ec:	add	r3, pc, r3
   130f0:	str	r3, [sp, #48]	; 0x30
   130f4:	b	132fc <sav_parse_long_variable_names_record+0x3a8>
   130f8:	add	r2, r2, lr
   130fc:	add	r3, r3, lr
   13100:	ldr	r1, [sp, #68]	; 0x44
   13104:	add	r7, r1, r7
   13108:	ldrb	r7, [r7, #876]	; 0x36c
   1310c:	cmp	r7, #0
   13110:	beq	13048 <sav_parse_long_variable_names_record+0xf4>
   13114:	add	lr, r2, r7, lsl #1
   13118:	sub	lr, lr, #2
   1311c:	mov	ip, r2
   13120:	cmp	ip, lr
   13124:	bhi	13168 <sav_parse_long_variable_names_record+0x214>
   13128:	sub	r0, lr, ip
   1312c:	ldrb	r9, [r5]
   13130:	asr	r0, r0, #1
   13134:	bic	r0, r0, #1
   13138:	add	r1, ip, r0
   1313c:	ldrb	r0, [ip, r0]
   13140:	cmp	r0, r9
   13144:	subhi	lr, r1, #2
   13148:	bhi	13120 <sav_parse_long_variable_names_record+0x1cc>
   1314c:	ldrb	r0, [r1, #1]
   13150:	cmp	r0, r9
   13154:	addcc	ip, r1, #2
   13158:	bcc	13120 <sav_parse_long_variable_names_record+0x1cc>
   1315c:	sub	r2, r1, r2
   13160:	add	r3, r3, r2, asr #1
   13164:	b	13048 <sav_parse_long_variable_names_record+0xf4>
   13168:	add	r3, r3, r7
   1316c:	b	13048 <sav_parse_long_variable_names_record+0xf4>
   13170:	ldrb	r3, [r9, #1]!
   13174:	cmp	r3, #6
   13178:	addls	pc, pc, r3, lsl #2
   1317c:	b	13094 <sav_parse_long_variable_names_record+0x140>
   13180:	b	131a4 <sav_parse_long_variable_names_record+0x250>
   13184:	b	13234 <sav_parse_long_variable_names_record+0x2e0>
   13188:	b	13258 <sav_parse_long_variable_names_record+0x304>
   1318c:	b	1319c <sav_parse_long_variable_names_record+0x248>
   13190:	b	1327c <sav_parse_long_variable_names_record+0x328>
   13194:	b	1319c <sav_parse_long_variable_names_record+0x248>
   13198:	b	1327c <sav_parse_long_variable_names_record+0x328>
   1319c:	str	r5, [sp, #20]
   131a0:	b	13094 <sav_parse_long_variable_names_record+0x140>
   131a4:	ldr	r3, [sp, #64]	; 0x40
   131a8:	sub	sl, fp, #16
   131ac:	str	r3, [sp]
   131b0:	ldr	r2, [sp, #40]	; 0x28
   131b4:	mov	r3, #40	; 0x28
   131b8:	ldr	r1, [sp, #32]
   131bc:	mov	r0, sl
   131c0:	bl	42f4 <bsearch@plt>
   131c4:	cmp	r0, #0
   131c8:	beq	131f8 <sav_parse_long_variable_names_record+0x2a4>
   131cc:	ldr	r2, [r0, #36]	; 0x24
   131d0:	ldr	r3, [r6, #44]	; 0x2c
   131d4:	ldr	r1, [sp, #48]	; 0x30
   131d8:	ldr	sl, [r3, r2, lsl #2]
   131dc:	mov	r2, r4
   131e0:	add	r0, sl, #196	; 0xc4
   131e4:	add	sl, sl, r4
   131e8:	bl	3f64 <memcpy@plt>
   131ec:	mov	r3, #0
   131f0:	strb	r3, [sl, #196]	; 0xc4
   131f4:	b	13094 <sav_parse_long_variable_names_record+0x140>
   131f8:	ldr	r3, [r6, #24]
   131fc:	cmp	r3, #0
   13200:	beq	13094 <sav_parse_long_variable_names_record+0x140>
   13204:	ldr	r2, [pc, #544]	; 1342c <sav_parse_long_variable_names_record+0x4d8>
   13208:	mov	r3, sl
   1320c:	add	sl, sp, #152	; 0x98
   13210:	add	r2, pc, r2
   13214:	mov	r1, #8192	; 0x2000
   13218:	mov	r0, sl
   1321c:	bl	42c4 <snprintf@plt>
   13220:	ldr	r3, [r6, #24]
   13224:	ldr	r1, [r6, #40]	; 0x28
   13228:	mov	r0, sl
   1322c:	blx	r3
   13230:	b	13094 <sav_parse_long_variable_names_record+0x140>
   13234:	mov	r2, r4
   13238:	ldr	r1, [sp, #20]
   1323c:	sub	r0, fp, #16
   13240:	bl	3f64 <memcpy@plt>
   13244:	add	r3, sp, #152	; 0x98
   13248:	add	r3, r3, r4
   1324c:	mov	r2, #0
   13250:	strb	r2, [r3, #-80]	; 0xffffffb0
   13254:	b	13094 <sav_parse_long_variable_names_record+0x140>
   13258:	mov	r2, r4
   1325c:	ldr	r1, [sp, #20]
   13260:	ldr	r0, [sp, #48]	; 0x30
   13264:	bl	3f64 <memcpy@plt>
   13268:	add	r3, sp, #152	; 0x98
   1326c:	add	r3, r3, r4
   13270:	mov	r2, #0
   13274:	strb	r2, [r3, #-68]	; 0xffffffbc
   13278:	b	13094 <sav_parse_long_variable_names_record+0x140>
   1327c:	ldr	r3, [sp, #20]
   13280:	sub	r4, r5, r3
   13284:	b	13094 <sav_parse_long_variable_names_record+0x140>
   13288:	ldrb	r8, [r5, #1]!
   1328c:	cmp	r8, #2
   13290:	beq	133e4 <sav_parse_long_variable_names_record+0x490>
   13294:	cmp	r8, #6
   13298:	ldreq	r3, [sp, #24]
   1329c:	ldreq	r2, [sp, #20]
   132a0:	subeq	r4, r3, r2
   132a4:	beq	132fc <sav_parse_long_variable_names_record+0x3a8>
   132a8:	cmp	r8, #0
   132ac:	bne	132fc <sav_parse_long_variable_names_record+0x3a8>
   132b0:	ldr	r3, [sp, #48]	; 0x30
   132b4:	sub	fp, sl, #16
   132b8:	str	r3, [sp]
   132bc:	ldr	r2, [sp, #40]	; 0x28
   132c0:	mov	r3, #40	; 0x28
   132c4:	ldr	r1, [sp, #32]
   132c8:	mov	r0, fp
   132cc:	bl	42f4 <bsearch@plt>
   132d0:	cmp	r0, #0
   132d4:	beq	133a8 <sav_parse_long_variable_names_record+0x454>
   132d8:	ldr	r2, [r0, #36]	; 0x24
   132dc:	ldr	r3, [r6, #44]	; 0x2c
   132e0:	mov	r1, r9
   132e4:	ldr	fp, [r3, r2, lsl #2]
   132e8:	mov	r2, r4
   132ec:	add	r0, fp, #196	; 0xc4
   132f0:	add	fp, fp, r4
   132f4:	bl	3f64 <memcpy@plt>
   132f8:	strb	r8, [fp, #196]	; 0xc4
   132fc:	ldr	r3, [sp, #44]	; 0x2c
   13300:	cmp	r5, r3
   13304:	bne	13288 <sav_parse_long_variable_names_record+0x334>
   13308:	ldr	r5, [sp, #24]
   1330c:	ldr	r3, [sp, #24]
   13310:	subs	r3, r5, r3
   13314:	movne	r3, #1
   13318:	cmp	r7, #10
   1331c:	movgt	r7, r3
   13320:	orrle	r7, r3, #1
   13324:	cmp	r7, #0
   13328:	beq	13384 <sav_parse_long_variable_names_record+0x430>
   1332c:	ldr	r3, [r6, #24]
   13330:	cmp	r3, #0
   13334:	beq	13380 <sav_parse_long_variable_names_record+0x42c>
   13338:	ldrb	r3, [r5]
   1333c:	ldr	r2, [pc, #236]	; 13430 <sav_parse_long_variable_names_record+0x4dc>
   13340:	add	r4, sp, #152	; 0x98
   13344:	str	r3, [sp, #12]
   13348:	ldr	r3, [sp, #36]	; 0x24
   1334c:	mov	r1, #8192	; 0x2000
   13350:	str	r3, [sp, #8]
   13354:	ldr	r3, [sp, #28]
   13358:	add	r2, pc, r2
   1335c:	sub	r5, r5, r3
   13360:	mov	r0, r4
   13364:	stm	sp, {r3, r5}
   13368:	ldr	r3, [sp, #36]	; 0x24
   1336c:	bl	42c4 <snprintf@plt>
   13370:	ldr	r3, [r6, #24]
   13374:	ldr	r1, [r6, #40]	; 0x28
   13378:	mov	r0, r4
   1337c:	blx	r3
   13380:	mov	r7, #5
   13384:	ldr	r3, [sp, #32]
   13388:	cmp	r3, #0
   1338c:	beq	13398 <sav_parse_long_variable_names_record+0x444>
   13390:	mov	r0, r3
   13394:	bl	3f04 <free@plt>
   13398:	mov	r0, r7
   1339c:	add	sp, sp, #8320	; 0x2080
   133a0:	add	sp, sp, #28
   133a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   133a8:	ldr	r3, [r6, #24]
   133ac:	cmp	r3, #0
   133b0:	beq	132fc <sav_parse_long_variable_names_record+0x3a8>
   133b4:	ldr	r2, [pc, #120]	; 13434 <sav_parse_long_variable_names_record+0x4e0>
   133b8:	add	r8, sp, #152	; 0x98
   133bc:	mov	r3, fp
   133c0:	add	r2, pc, r2
   133c4:	mov	r1, #8192	; 0x2000
   133c8:	mov	r0, r8
   133cc:	bl	42c4 <snprintf@plt>
   133d0:	ldr	r3, [r6, #24]
   133d4:	ldr	r1, [r6, #40]	; 0x28
   133d8:	mov	r0, r8
   133dc:	blx	r3
   133e0:	b	132fc <sav_parse_long_variable_names_record+0x3a8>
   133e4:	mov	r2, r4
   133e8:	ldr	r1, [sp, #20]
   133ec:	mov	r0, r9
   133f0:	bl	3f64 <memcpy@plt>
   133f4:	add	r3, sp, #152	; 0x98
   133f8:	add	r3, r3, r4
   133fc:	mov	r2, #0
   13400:	strb	r2, [r3, #-68]	; 0xffffffbc
   13404:	b	132fc <sav_parse_long_variable_names_record+0x3a8>
   13408:	mov	r4, #0
   1340c:	mov	r7, #1
   13410:	str	r4, [sp, #20]
   13414:	b	130b8 <sav_parse_long_variable_names_record+0x164>
   13418:	.word	0x0000f156
   1341c:	.word	0x0000f142
   13420:	.word	0xfffffda4
   13424:	.word	0x0000f042
   13428:	.word	0xfffffd44
   1342c:	.word	0x0000f64f
   13430:	.word	0x0000f519
   13434:	.word	0x0000f49f

00013438 <sav_parse_very_long_string_record>:
   13438:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1343c:	sub	sp, sp, #124	; 0x7c
   13440:	mov	r7, r0
   13444:	mov	r0, r2
   13448:	mov	r6, r2
   1344c:	str	r1, [sp, #40]	; 0x28
   13450:	bl	12e3c <count_vars>
   13454:	ldr	r3, [sp, #40]	; 0x28
   13458:	mov	r4, r7
   1345c:	add	r3, r3, #1024	; 0x400
   13460:	str	r3, [sp, #48]	; 0x30
   13464:	ldr	r3, [sp, #40]	; 0x28
   13468:	mov	r5, #1
   1346c:	add	fp, r7, r3
   13470:	str	r0, [sp, #44]	; 0x2c
   13474:	ldr	r0, [sp, #48]	; 0x30
   13478:	bl	4270 <readstat_malloc@plt>
   1347c:	mov	r1, r6
   13480:	str	r0, [sp, #20]
   13484:	ldr	r0, [sp, #44]	; 0x2c
   13488:	bl	12e9c <build_lookup_table>
   1348c:	cmp	r7, fp
   13490:	str	r0, [sp, #32]
   13494:	beq	136f0 <sav_parse_very_long_string_record+0x2b8>
   13498:	ldr	r3, [pc, #768]	; 137a0 <sav_parse_very_long_string_record+0x368>
   1349c:	mov	sl, #0
   134a0:	add	r3, pc, r3
   134a4:	str	r3, [sp, #24]
   134a8:	add	r3, r3, #1584	; 0x630
   134ac:	add	r3, r3, r5
   134b0:	str	r3, [sp, #64]	; 0x40
   134b4:	ldr	r3, [pc, #744]	; 137a4 <sav_parse_very_long_string_record+0x36c>
   134b8:	mov	r8, sl
   134bc:	add	r3, pc, r3
   134c0:	str	r3, [sp, #68]	; 0x44
   134c4:	ldr	r3, [sp, #24]
   134c8:	str	sl, [sp, #28]
   134cc:	str	r3, [sp, #52]	; 0x34
   134d0:	add	r3, r3, #1872	; 0x750
   134d4:	str	r3, [sp, #56]	; 0x38
   134d8:	ldr	r3, [pc, #712]	; 137a8 <sav_parse_very_long_string_record+0x370>
   134dc:	add	r3, pc, r3
   134e0:	str	r3, [sp, #72]	; 0x48
   134e4:	ldr	r3, [sp, #24]
   134e8:	add	r1, r3, r5
   134ec:	ldr	r3, [sp, #64]	; 0x40
   134f0:	ldrb	lr, [r1, #1732]	; 0x6c4
   134f4:	ldrb	r2, [r1, #1704]	; 0x6a8
   134f8:	cmp	lr, #0
   134fc:	add	r2, r3, r2
   13500:	ldrb	r3, [r1, #1718]	; 0x6b6
   13504:	beq	135bc <sav_parse_very_long_string_record+0x184>
   13508:	sub	ip, lr, #1
   1350c:	add	ip, r2, ip
   13510:	mov	r0, r2
   13514:	cmp	r0, ip
   13518:	bhi	135b4 <sav_parse_very_long_string_record+0x17c>
   1351c:	sub	r9, ip, r0
   13520:	add	r1, r0, r9, asr #1
   13524:	str	r1, [sp, #36]	; 0x24
   13528:	ldrb	r9, [r0, r9, asr #1]
   1352c:	ldrb	r1, [r4]
   13530:	cmp	r1, r9
   13534:	ldr	r1, [sp, #36]	; 0x24
   13538:	subcc	ip, r1, #1
   1353c:	bcc	13514 <sav_parse_very_long_string_record+0xdc>
   13540:	addhi	r0, r1, #1
   13544:	bhi	13514 <sav_parse_very_long_string_record+0xdc>
   13548:	sub	r2, r1, r2
   1354c:	add	r3, r3, r2
   13550:	ldr	r2, [sp, #52]	; 0x34
   13554:	add	r3, r2, r3
   13558:	ldrb	r3, [r3, #1760]	; 0x6e0
   1355c:	add	r3, r2, r3
   13560:	ldrb	r5, [r3, #1842]	; 0x732
   13564:	ldrb	r3, [r3, #1857]	; 0x741
   13568:	cmp	r3, #0
   1356c:	beq	13598 <sav_parse_very_long_string_record+0x160>
   13570:	ldr	r2, [sp, #56]	; 0x38
   13574:	add	r9, r2, r3
   13578:	ldrb	r3, [r2, r3]
   1357c:	add	r3, r9, r3
   13580:	str	r3, [sp, #60]	; 0x3c
   13584:	add	r3, sp, #84	; 0x54
   13588:	str	r3, [sp, #36]	; 0x24
   1358c:	ldr	r3, [sp, #60]	; 0x3c
   13590:	cmp	r9, r3
   13594:	bne	1362c <sav_parse_very_long_string_record+0x1f4>
   13598:	cmp	r5, #0
   1359c:	beq	136f0 <sav_parse_very_long_string_record+0x2b8>
   135a0:	add	r4, r4, #1
   135a4:	cmp	fp, r4
   135a8:	bne	134e4 <sav_parse_very_long_string_record+0xac>
   135ac:	mov	r4, fp
   135b0:	b	136f0 <sav_parse_very_long_string_record+0x2b8>
   135b4:	add	r2, r2, lr
   135b8:	add	r3, r3, lr
   135bc:	ldr	r1, [sp, #68]	; 0x44
   135c0:	add	r5, r1, r5
   135c4:	ldrb	r5, [r5, #1746]	; 0x6d2
   135c8:	cmp	r5, #0
   135cc:	beq	13550 <sav_parse_very_long_string_record+0x118>
   135d0:	add	lr, r2, r5, lsl #1
   135d4:	sub	lr, lr, #2
   135d8:	mov	ip, r2
   135dc:	cmp	ip, lr
   135e0:	bhi	13624 <sav_parse_very_long_string_record+0x1ec>
   135e4:	sub	r0, lr, ip
   135e8:	ldrb	r9, [r4]
   135ec:	asr	r0, r0, #1
   135f0:	bic	r0, r0, #1
   135f4:	add	r1, ip, r0
   135f8:	ldrb	r0, [ip, r0]
   135fc:	cmp	r0, r9
   13600:	subhi	lr, r1, #2
   13604:	bhi	135dc <sav_parse_very_long_string_record+0x1a4>
   13608:	ldrb	r0, [r1, #1]
   1360c:	cmp	r0, r9
   13610:	addcc	ip, r1, #2
   13614:	bcc	135dc <sav_parse_very_long_string_record+0x1a4>
   13618:	sub	r2, r1, r2
   1361c:	add	r3, r3, r2, asr #1
   13620:	b	13550 <sav_parse_very_long_string_record+0x118>
   13624:	add	r3, r3, r5
   13628:	b	13550 <sav_parse_very_long_string_record+0x118>
   1362c:	ldrb	r3, [r9, #1]!
   13630:	cmp	r3, #5
   13634:	addls	pc, pc, r3, lsl #2
   13638:	b	1358c <sav_parse_very_long_string_record+0x154>
   1363c:	b	1365c <sav_parse_very_long_string_record+0x224>
   13640:	b	13690 <sav_parse_very_long_string_record+0x258>
   13644:	b	136b4 <sav_parse_very_long_string_record+0x27c>
   13648:	b	13654 <sav_parse_very_long_string_record+0x21c>
   1364c:	b	1378c <sav_parse_very_long_string_record+0x354>
   13650:	b	13798 <sav_parse_very_long_string_record+0x360>
   13654:	str	r4, [sp, #28]
   13658:	b	1358c <sav_parse_very_long_string_record+0x154>
   1365c:	ldr	r3, [sp, #72]	; 0x48
   13660:	ldr	r2, [sp, #44]	; 0x2c
   13664:	str	r3, [sp]
   13668:	ldr	r1, [sp, #32]
   1366c:	mov	r3, #40	; 0x28
   13670:	ldr	r0, [sp, #36]	; 0x24
   13674:	bl	42f4 <bsearch@plt>
   13678:	cmp	r0, #0
   1367c:	ldrne	r2, [r0, #36]	; 0x24
   13680:	ldrne	r3, [r6, #44]	; 0x2c
   13684:	ldrne	r3, [r3, r2, lsl #2]
   13688:	strne	r8, [r3, #20]
   1368c:	b	1358c <sav_parse_very_long_string_record+0x154>
   13690:	mov	r2, sl
   13694:	ldr	r1, [sp, #28]
   13698:	ldr	r0, [sp, #36]	; 0x24
   1369c:	bl	3f64 <memcpy@plt>
   136a0:	add	r3, sp, #120	; 0x78
   136a4:	add	r3, r3, sl
   136a8:	mov	r2, #0
   136ac:	strb	r2, [r3, #-36]	; 0xffffffdc
   136b0:	b	1358c <sav_parse_very_long_string_record+0x154>
   136b4:	ldrb	r3, [r4]
   136b8:	cmp	r3, #0
   136bc:	beq	1358c <sav_parse_very_long_string_record+0x154>
   136c0:	sub	r3, r3, #48	; 0x30
   136c4:	mov	r1, #10
   136c8:	uxtb	r3, r3
   136cc:	mvn	r0, r3
   136d0:	str	r3, [sp, #76]	; 0x4c
   136d4:	bl	2061c <__udivsi3>
   136d8:	cmp	r8, r0
   136dc:	movls	r2, #10
   136e0:	ldrls	r3, [sp, #76]	; 0x4c
   136e4:	mlals	r8, r2, r8, r3
   136e8:	bls	1358c <sav_parse_very_long_string_record+0x154>
   136ec:	add	r4, r4, #1
   136f0:	subs	r3, r4, fp
   136f4:	movne	r3, #1
   136f8:	cmp	r5, #11
   136fc:	movgt	r5, r3
   13700:	orrle	r5, r3, #1
   13704:	cmp	r5, #0
   13708:	beq	13758 <sav_parse_very_long_string_record+0x320>
   1370c:	ldr	r3, [r6, #24]
   13710:	cmp	r3, #0
   13714:	beq	13754 <sav_parse_very_long_string_record+0x31c>
   13718:	sub	r3, fp, r4
   1371c:	str	r3, [sp, #4]
   13720:	ldr	r2, [pc, #132]	; 137ac <sav_parse_very_long_string_record+0x374>
   13724:	ldr	r3, [sp, #40]	; 0x28
   13728:	ldr	r1, [sp, #48]	; 0x30
   1372c:	str	r3, [sp]
   13730:	str	r4, [sp, #8]
   13734:	sub	r3, r4, r7
   13738:	add	r2, pc, r2
   1373c:	ldr	r0, [sp, #20]
   13740:	bl	42c4 <snprintf@plt>
   13744:	ldr	r3, [r6, #24]
   13748:	ldr	r1, [r6, #40]	; 0x28
   1374c:	ldr	r0, [sp, #20]
   13750:	blx	r3
   13754:	mov	r5, #5
   13758:	ldr	r3, [sp, #32]
   1375c:	cmp	r3, #0
   13760:	beq	1376c <sav_parse_very_long_string_record+0x334>
   13764:	mov	r0, r3
   13768:	bl	3f04 <free@plt>
   1376c:	ldr	r3, [sp, #20]
   13770:	cmp	r3, #0
   13774:	beq	13780 <sav_parse_very_long_string_record+0x348>
   13778:	mov	r0, r3
   1377c:	bl	3f04 <free@plt>
   13780:	mov	r0, r5
   13784:	add	sp, sp, #124	; 0x7c
   13788:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1378c:	ldr	r3, [sp, #28]
   13790:	sub	sl, r4, r3
   13794:	b	1358c <sav_parse_very_long_string_record+0x154>
   13798:	mov	r8, #0
   1379c:	b	1358c <sav_parse_very_long_string_record+0x154>
   137a0:	.word	0x0000ec62
   137a4:	.word	0x0000ec46
   137a8:	.word	0xfffff954
   137ac:	.word	0x0000f177

000137b0 <sav_parse_time>:
   137b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   137b4:	sub	sp, sp, #8192	; 0x2000
   137b8:	sub	sp, sp, #36	; 0x24
   137bc:	add	r7, r0, r1
   137c0:	cmp	r0, r7
   137c4:	str	r1, [sp, #12]
   137c8:	mov	fp, r2
   137cc:	str	r3, [sp, #16]
   137d0:	beq	13a3c <sav_parse_time+0x28c>
   137d4:	ldr	r8, [pc, #620]	; 13a48 <sav_parse_time+0x298>
   137d8:	ldr	r2, [pc, #620]	; 13a4c <sav_parse_time+0x29c>
   137dc:	add	r8, pc, r8
   137e0:	add	r2, pc, r2
   137e4:	mov	r3, r0
   137e8:	mov	r1, #0
   137ec:	mov	lr, #1
   137f0:	str	r2, [sp, #28]
   137f4:	add	r2, r8, #130	; 0x82
   137f8:	str	r8, [sp, #24]
   137fc:	str	r2, [sp, #20]
   13800:	add	r4, r8, lr
   13804:	ldrb	r9, [r4, #50]	; 0x32
   13808:	ldrb	ip, [r4, #24]
   1380c:	ldrb	r2, [r4, #37]	; 0x25
   13810:	cmp	r9, #0
   13814:	add	ip, r8, ip
   13818:	beq	138e0 <sav_parse_time+0x130>
   1381c:	sub	r6, r9, #1
   13820:	add	r6, ip, r6
   13824:	mov	r5, ip
   13828:	cmp	r5, r6
   1382c:	bhi	138d8 <sav_parse_time+0x128>
   13830:	sub	sl, r6, r5
   13834:	add	r4, r5, sl, asr #1
   13838:	str	r4, [sp, #8]
   1383c:	ldrb	sl, [r5, sl, asr #1]
   13840:	ldrb	r4, [r3]
   13844:	cmp	r4, sl
   13848:	ldrcc	r4, [sp, #8]
   1384c:	subcc	r6, r4, #1
   13850:	bcc	13828 <sav_parse_time+0x78>
   13854:	ldrhi	r4, [sp, #8]
   13858:	addhi	r5, r4, #1
   1385c:	bhi	13828 <sav_parse_time+0x78>
   13860:	ldr	lr, [sp, #8]
   13864:	sub	ip, lr, ip
   13868:	add	r2, r2, ip
   1386c:	ldr	ip, [sp, #24]
   13870:	add	r2, ip, r2
   13874:	ldrb	ip, [r2, #103]	; 0x67
   13878:	ldrb	lr, [r2, #76]	; 0x4c
   1387c:	cmp	ip, #0
   13880:	beq	138a0 <sav_parse_time+0xf0>
   13884:	ldr	r4, [sp, #20]
   13888:	ldr	r2, [sp, #20]
   1388c:	add	r2, r2, ip
   13890:	ldrb	ip, [r4, ip]
   13894:	add	r2, r2, #1
   13898:	subs	ip, ip, #1
   1389c:	bcs	13950 <sav_parse_time+0x1a0>
   138a0:	cmp	lr, #0
   138a4:	beq	139c4 <sav_parse_time+0x214>
   138a8:	add	r3, r3, #1
   138ac:	cmp	r7, r3
   138b0:	bne	13800 <sav_parse_time+0x50>
   138b4:	ldr	r3, [pc, #404]	; 13a50 <sav_parse_time+0x2a0>
   138b8:	add	r3, pc, r3
   138bc:	add	ip, r3, #130	; 0x82
   138c0:	add	r3, r3, lr
   138c4:	ldrb	r2, [r3, #144]	; 0x90
   138c8:	add	r3, ip, r2
   138cc:	add	r3, r3, #1
   138d0:	ldrb	r2, [ip, r2]
   138d4:	b	139b8 <sav_parse_time+0x208>
   138d8:	add	ip, ip, r9
   138dc:	add	r2, r2, r9
   138e0:	ldr	r4, [sp, #28]
   138e4:	add	lr, r4, lr
   138e8:	ldrb	r9, [lr, #63]	; 0x3f
   138ec:	cmp	r9, #0
   138f0:	beq	1386c <sav_parse_time+0xbc>
   138f4:	add	r6, ip, r9, lsl #1
   138f8:	sub	r6, r6, #2
   138fc:	mov	r5, ip
   13900:	cmp	r5, r6
   13904:	bhi	13948 <sav_parse_time+0x198>
   13908:	sub	r4, r6, r5
   1390c:	ldrb	sl, [r3]
   13910:	asr	r4, r4, #1
   13914:	bic	r4, r4, #1
   13918:	add	lr, r5, r4
   1391c:	ldrb	r4, [r5, r4]
   13920:	cmp	r4, sl
   13924:	subhi	r6, lr, #2
   13928:	bhi	13900 <sav_parse_time+0x150>
   1392c:	ldrb	r4, [lr, #1]
   13930:	cmp	r4, sl
   13934:	addcc	r5, lr, #2
   13938:	bcc	13900 <sav_parse_time+0x150>
   1393c:	sub	ip, lr, ip
   13940:	add	r2, r2, ip, asr #1
   13944:	b	1386c <sav_parse_time+0xbc>
   13948:	add	r2, r2, r9
   1394c:	b	1386c <sav_parse_time+0xbc>
   13950:	ldrb	r4, [r2], #1
   13954:	cmp	r4, #4
   13958:	addls	pc, pc, r4, lsl #2
   1395c:	b	13898 <sav_parse_time+0xe8>
   13960:	b	1397c <sav_parse_time+0x1cc>
   13964:	b	13974 <sav_parse_time+0x1c4>
   13968:	b	13990 <sav_parse_time+0x1e0>
   1396c:	b	1399c <sav_parse_time+0x1ec>
   13970:	b	139a4 <sav_parse_time+0x1f4>
   13974:	mov	r1, #0
   13978:	b	13898 <sav_parse_time+0xe8>
   1397c:	ldrb	r4, [r3]
   13980:	mov	r5, #10
   13984:	sub	r4, r4, #48	; 0x30
   13988:	mla	r1, r5, r1, r4
   1398c:	b	13898 <sav_parse_time+0xe8>
   13990:	ldrb	r1, [r3]
   13994:	sub	r1, r1, #48	; 0x30
   13998:	b	13898 <sav_parse_time+0xe8>
   1399c:	str	r1, [fp, #8]
   139a0:	b	13898 <sav_parse_time+0xe8>
   139a4:	str	r1, [fp, #4]
   139a8:	b	13898 <sav_parse_time+0xe8>
   139ac:	ldrb	ip, [r3], #1
   139b0:	cmp	ip, #5
   139b4:	streq	r1, [fp]
   139b8:	subs	r2, r2, #1
   139bc:	bcs	139ac <sav_parse_time+0x1fc>
   139c0:	mov	r3, r7
   139c4:	subs	r3, r3, r7
   139c8:	movne	r3, #1
   139cc:	cmp	lr, #11
   139d0:	movgt	lr, r3
   139d4:	orrle	lr, r3, #1
   139d8:	cmp	lr, #0
   139dc:	moveq	r0, lr
   139e0:	beq	13a30 <sav_parse_time+0x280>
   139e4:	ldr	r3, [sp, #16]
   139e8:	cmp	r3, #0
   139ec:	beq	13a2c <sav_parse_time+0x27c>
   139f0:	mov	r5, r3
   139f4:	ldr	r2, [pc, #88]	; 13a54 <sav_parse_time+0x2a4>
   139f8:	ldr	r3, [sp, #12]
   139fc:	add	r4, sp, #32
   13a00:	str	r0, [sp, #4]
   13a04:	str	r3, [sp]
   13a08:	mov	r1, #8192	; 0x2000
   13a0c:	add	r2, pc, r2
   13a10:	mov	r0, r4
   13a14:	bl	42c4 <snprintf@plt>
   13a18:	add	r3, sp, #8256	; 0x2040
   13a1c:	add	r3, r3, #8
   13a20:	mov	r0, r4
   13a24:	ldr	r1, [r3]
   13a28:	blx	r5
   13a2c:	mov	r0, #29
   13a30:	add	sp, sp, #8192	; 0x2000
   13a34:	add	sp, sp, #36	; 0x24
   13a38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a3c:	mov	r1, #0
   13a40:	mov	lr, #1
   13a44:	b	138b4 <sav_parse_time+0x104>
   13a48:	.word	0x0000f102
   13a4c:	.word	0x0000f0fe
   13a50:	.word	0x0000f026
   13a54:	.word	0x0000f1d6

00013a58 <sav_parse_date>:
   13a58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13a5c:	sub	sp, sp, #8192	; 0x2000
   13a60:	sub	sp, sp, #44	; 0x2c
   13a64:	add	fp, r0, r1
   13a68:	cmp	r0, fp
   13a6c:	str	r0, [sp, #12]
   13a70:	str	r1, [sp, #16]
   13a74:	str	r3, [sp, #20]
   13a78:	beq	13d98 <sav_parse_date+0x340>
   13a7c:	ldr	r8, [pc, #800]	; 13da4 <sav_parse_date+0x34c>
   13a80:	mov	r3, r0
   13a84:	add	r8, pc, r8
   13a88:	add	r1, r8, #157	; 0x9d
   13a8c:	str	r1, [sp, #32]
   13a90:	ldr	r1, [pc, #784]	; 13da8 <sav_parse_date+0x350>
   13a94:	mov	lr, #0
   13a98:	add	r1, pc, r1
   13a9c:	str	r1, [sp, #36]	; 0x24
   13aa0:	mov	r4, #1
   13aa4:	add	r1, r8, #688	; 0x2b0
   13aa8:	add	r1, r1, #2
   13aac:	str	r8, [sp, #24]
   13ab0:	str	r1, [sp, #28]
   13ab4:	add	r5, r8, r4
   13ab8:	ldr	r1, [sp, #32]
   13abc:	ldrb	r9, [r5, #344]	; 0x158
   13ac0:	ldrb	ip, [r5, #248]	; 0xf8
   13ac4:	cmp	r9, #0
   13ac8:	add	ip, r1, ip
   13acc:	ldrb	r1, [r5, #296]	; 0x128
   13ad0:	beq	13ba4 <sav_parse_date+0x14c>
   13ad4:	sub	r7, r9, #1
   13ad8:	add	r7, ip, r7
   13adc:	mov	r6, ip
   13ae0:	cmp	r6, r7
   13ae4:	bhi	13b9c <sav_parse_date+0x144>
   13ae8:	sub	sl, r7, r6
   13aec:	ldrb	r0, [r3]
   13af0:	add	r5, r6, sl, asr #1
   13af4:	ldrb	sl, [r6, sl, asr #1]
   13af8:	cmp	r0, sl
   13afc:	subcc	r7, r5, #1
   13b00:	bcc	13ae0 <sav_parse_date+0x88>
   13b04:	addhi	r6, r5, #1
   13b08:	bhi	13ae0 <sav_parse_date+0x88>
   13b0c:	sub	ip, r5, ip
   13b10:	add	r1, r1, ip
   13b14:	ldr	r0, [sp, #24]
   13b18:	add	r1, r0, r1
   13b1c:	ldrb	r1, [r1, #440]	; 0x1b8
   13b20:	add	r1, r0, r1
   13b24:	ldrb	r4, [r1, #574]	; 0x23e
   13b28:	ldrb	r1, [r1, #632]	; 0x278
   13b2c:	cmp	r1, #0
   13b30:	beq	13b5c <sav_parse_date+0x104>
   13b34:	ldr	r0, [sp, #28]
   13b38:	mov	r6, #6
   13b3c:	add	ip, r0, r1
   13b40:	ldrb	r5, [r0, r1]
   13b44:	add	ip, ip, #1
   13b48:	mov	r7, #5
   13b4c:	mov	r9, #4
   13b50:	mov	sl, #3
   13b54:	subs	r5, r5, #1
   13b58:	bcs	13c14 <sav_parse_date+0x1bc>
   13b5c:	cmp	r4, #0
   13b60:	beq	13d1c <sav_parse_date+0x2c4>
   13b64:	add	r3, r3, #1
   13b68:	cmp	fp, r3
   13b6c:	bne	13ab4 <sav_parse_date+0x5c>
   13b70:	ldr	r1, [pc, #564]	; 13dac <sav_parse_date+0x354>
   13b74:	add	r1, pc, r1
   13b78:	add	r3, r1, #688	; 0x2b0
   13b7c:	add	r1, r1, r4
   13b80:	add	r3, r3, #2
   13b84:	ldrb	ip, [r1, #724]	; 0x2d4
   13b88:	add	r1, r3, ip
   13b8c:	add	r1, r1, #1
   13b90:	ldrb	r3, [r3, ip]
   13b94:	add	ip, lr, #100	; 0x64
   13b98:	b	13d10 <sav_parse_date+0x2b8>
   13b9c:	add	ip, ip, r9
   13ba0:	add	r1, r1, r9
   13ba4:	ldr	r0, [sp, #36]	; 0x24
   13ba8:	add	r4, r0, r4
   13bac:	ldrb	r9, [r4, #392]	; 0x188
   13bb0:	cmp	r9, #0
   13bb4:	beq	13b14 <sav_parse_date+0xbc>
   13bb8:	add	r7, ip, r9, lsl #1
   13bbc:	sub	r7, r7, #2
   13bc0:	mov	r6, ip
   13bc4:	cmp	r6, r7
   13bc8:	bhi	13c0c <sav_parse_date+0x1b4>
   13bcc:	sub	r5, r7, r6
   13bd0:	ldrb	sl, [r3]
   13bd4:	asr	r5, r5, #1
   13bd8:	bic	r5, r5, #1
   13bdc:	add	r4, r6, r5
   13be0:	ldrb	r5, [r6, r5]
   13be4:	cmp	r5, sl
   13be8:	subhi	r7, r4, #2
   13bec:	bhi	13bc4 <sav_parse_date+0x16c>
   13bf0:	ldrb	r5, [r4, #1]
   13bf4:	cmp	r5, sl
   13bf8:	addcc	r6, r4, #2
   13bfc:	bcc	13bc4 <sav_parse_date+0x16c>
   13c00:	sub	ip, r4, ip
   13c04:	add	r1, r1, ip, asr #1
   13c08:	b	13b14 <sav_parse_date+0xbc>
   13c0c:	add	r1, r1, r9
   13c10:	b	13b14 <sav_parse_date+0xbc>
   13c14:	ldrb	r1, [ip], #1
   13c18:	cmp	r1, #15
   13c1c:	addls	pc, pc, r1, lsl #2
   13c20:	b	13b54 <sav_parse_date+0xfc>
   13c24:	b	13c6c <sav_parse_date+0x214>
   13c28:	b	13b54 <sav_parse_date+0xfc>
   13c2c:	b	13c64 <sav_parse_date+0x20c>
   13c30:	b	13c88 <sav_parse_date+0x230>
   13c34:	b	13c90 <sav_parse_date+0x238>
   13c38:	b	13c9c <sav_parse_date+0x244>
   13c3c:	b	13ca4 <sav_parse_date+0x24c>
   13c40:	b	13cac <sav_parse_date+0x254>
   13c44:	b	13cb4 <sav_parse_date+0x25c>
   13c48:	b	13cbc <sav_parse_date+0x264>
   13c4c:	b	13cc4 <sav_parse_date+0x26c>
   13c50:	b	13ccc <sav_parse_date+0x274>
   13c54:	b	13cd4 <sav_parse_date+0x27c>
   13c58:	b	13cdc <sav_parse_date+0x284>
   13c5c:	b	13ce4 <sav_parse_date+0x28c>
   13c60:	b	13cec <sav_parse_date+0x294>
   13c64:	mov	lr, #0
   13c68:	b	13b54 <sav_parse_date+0xfc>
   13c6c:	ldrb	r1, [r3]
   13c70:	sub	r1, r1, #48	; 0x30
   13c74:	uxtb	r1, r1
   13c78:	cmp	r1, #9
   13c7c:	movls	r0, #10
   13c80:	mlals	lr, r0, lr, r1
   13c84:	b	13b54 <sav_parse_date+0xfc>
   13c88:	str	lr, [r2, #12]
   13c8c:	b	13b54 <sav_parse_date+0xfc>
   13c90:	mov	r1, #0
   13c94:	str	r1, [r2, #16]
   13c98:	b	13b54 <sav_parse_date+0xfc>
   13c9c:	mov	r1, #1
   13ca0:	b	13c94 <sav_parse_date+0x23c>
   13ca4:	mov	r1, #2
   13ca8:	b	13c94 <sav_parse_date+0x23c>
   13cac:	str	sl, [r2, #16]
   13cb0:	b	13b54 <sav_parse_date+0xfc>
   13cb4:	str	r9, [r2, #16]
   13cb8:	b	13b54 <sav_parse_date+0xfc>
   13cbc:	str	r7, [r2, #16]
   13cc0:	b	13b54 <sav_parse_date+0xfc>
   13cc4:	str	r6, [r2, #16]
   13cc8:	b	13b54 <sav_parse_date+0xfc>
   13ccc:	mov	r1, #7
   13cd0:	b	13c94 <sav_parse_date+0x23c>
   13cd4:	mov	r1, #8
   13cd8:	b	13c94 <sav_parse_date+0x23c>
   13cdc:	mov	r1, #9
   13ce0:	b	13c94 <sav_parse_date+0x23c>
   13ce4:	mov	r1, #10
   13ce8:	b	13c94 <sav_parse_date+0x23c>
   13cec:	mov	r1, #11
   13cf0:	b	13c94 <sav_parse_date+0x23c>
   13cf4:	ldrb	r5, [r1], #1
   13cf8:	cmp	r5, #1
   13cfc:	bne	13d10 <sav_parse_date+0x2b8>
   13d00:	cmp	lr, #69	; 0x45
   13d04:	movgt	r5, lr
   13d08:	movle	r5, ip
   13d0c:	str	r5, [r2, #20]
   13d10:	subs	r3, r3, #1
   13d14:	bcs	13cf4 <sav_parse_date+0x29c>
   13d18:	mov	r3, fp
   13d1c:	subs	r3, r3, fp
   13d20:	movne	r3, #1
   13d24:	cmp	r4, #46	; 0x2e
   13d28:	movgt	r4, r3
   13d2c:	orrle	r4, r3, #1
   13d30:	cmp	r4, #0
   13d34:	moveq	r0, r4
   13d38:	beq	13d8c <sav_parse_date+0x334>
   13d3c:	ldr	r3, [sp, #20]
   13d40:	cmp	r3, #0
   13d44:	beq	13d88 <sav_parse_date+0x330>
   13d48:	ldr	r0, [sp, #12]
   13d4c:	mov	r5, r3
   13d50:	ldr	r2, [pc, #88]	; 13db0 <sav_parse_date+0x358>
   13d54:	ldr	r3, [sp, #16]
   13d58:	add	r4, sp, #40	; 0x28
   13d5c:	str	r0, [sp, #4]
   13d60:	str	r3, [sp]
   13d64:	mov	r1, #8192	; 0x2000
   13d68:	add	r2, pc, r2
   13d6c:	mov	r0, r4
   13d70:	bl	42c4 <snprintf@plt>
   13d74:	add	r3, sp, #8256	; 0x2040
   13d78:	add	r3, r3, #16
   13d7c:	mov	r0, r4
   13d80:	ldr	r1, [r3]
   13d84:	blx	r5
   13d88:	mov	r0, #29
   13d8c:	add	sp, sp, #8192	; 0x2000
   13d90:	add	sp, sp, #44	; 0x2c
   13d94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d98:	mov	lr, #0
   13d9c:	mov	r4, #1
   13da0:	b	13b70 <sav_parse_date+0x118>
   13da4:	.word	0x0000ee5a
   13da8:	.word	0x0000ee46
   13dac:	.word	0x0000ed6a
   13db0:	.word	0x0000eea0
   13db4:	.word	0x00000000

00013db8 <sav_update_progress>:
   13db8:	ldr	r3, [r0, #36]	; 0x24
   13dbc:	push	{lr}		; (str lr, [sp, #-4]!)
   13dc0:	ldr	lr, [r3, #16]
   13dc4:	ldr	r2, [r0, #40]	; 0x28
   13dc8:	ldr	r1, [r0, #28]
   13dcc:	mov	ip, lr
   13dd0:	ldr	r3, [r3, #20]
   13dd4:	ldr	r0, [r0, #32]
   13dd8:	pop	{lr}		; (ldr lr, [sp], #4)
   13ddc:	bx	ip

00013de0 <sav_skip_document_record>:
   13de0:	push	{r0, r1, r2, r4, r5, lr}
   13de4:	mov	r1, #4
   13de8:	ldr	r4, [r0, #36]	; 0x24
   13dec:	mov	r5, r0
   13df0:	add	r0, sp, r1
   13df4:	ldr	r3, [r4, #12]
   13df8:	ldr	r2, [r4, #20]
   13dfc:	blx	r3
   13e00:	cmp	r0, #3
   13e04:	movls	r0, #2
   13e08:	bls	13e4c <sav_skip_document_record+0x6c>
   13e0c:	ldrb	r3, [r5, #436]	; 0x1b4
   13e10:	tst	r3, #1
   13e14:	beq	13e24 <sav_skip_document_record+0x44>
   13e18:	ldr	r0, [sp, #4]
   13e1c:	bl	3dd8 <byteswap4@plt>
   13e20:	str	r0, [sp, #4]
   13e24:	ldr	r0, [sp, #4]
   13e28:	mov	ip, #80	; 0x50
   13e2c:	ldr	r3, [r4, #8]
   13e30:	ldr	r2, [r4, #20]
   13e34:	mov	r1, #1
   13e38:	mul	r0, ip, r0
   13e3c:	blx	r3
   13e40:	cmn	r0, #1
   13e44:	moveq	r0, #15
   13e48:	movne	r0, #0
   13e4c:	add	sp, sp, #12
   13e50:	pop	{r4, r5, pc}

00013e54 <sav_parse_records_pass1>:
   13e54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e58:	sub	sp, sp, #5120	; 0x1400
   13e5c:	sub	sp, sp, #28
   13e60:	add	r7, sp, #24
   13e64:	ldr	r8, [r0, #36]	; 0x24
   13e68:	mov	r5, r0
   13e6c:	sub	r9, r7, #12
   13e70:	ldr	r3, [r8, #12]
   13e74:	ldr	r2, [r8, #20]
   13e78:	mov	r1, #4
   13e7c:	sub	r0, r7, #20
   13e80:	blx	r3
   13e84:	cmp	r0, #3
   13e88:	bhi	13e94 <sav_parse_records_pass1+0x40>
   13e8c:	mov	r0, #2
   13e90:	b	13ef4 <sav_parse_records_pass1+0xa0>
   13e94:	ldrb	r3, [r5, #436]	; 0x1b4
   13e98:	add	r4, sp, #1040	; 0x410
   13e9c:	add	r4, r4, #8
   13ea0:	tst	r3, #1
   13ea4:	beq	13eb4 <sav_parse_records_pass1+0x60>
   13ea8:	ldr	r0, [r4, #-1044]	; 0xfffffbec
   13eac:	bl	3dd8 <byteswap4@plt>
   13eb0:	str	r0, [r4, #-1044]	; 0xfffffbec
   13eb4:	ldr	r6, [r4, #-1044]	; 0xfffffbec
   13eb8:	cmp	r6, #6
   13ebc:	beq	14110 <sav_parse_records_pass1+0x2bc>
   13ec0:	bhi	13edc <sav_parse_records_pass1+0x88>
   13ec4:	cmp	r6, #2
   13ec8:	beq	13f00 <sav_parse_records_pass1+0xac>
   13ecc:	cmp	r6, #3
   13ed0:	beq	13fcc <sav_parse_records_pass1+0x178>
   13ed4:	mov	r0, #5
   13ed8:	b	13ef4 <sav_parse_records_pass1+0xa0>
   13edc:	cmp	r6, #7
   13ee0:	beq	14124 <sav_parse_records_pass1+0x2d0>
   13ee4:	ldr	r3, [pc, #928]	; 1428c <sav_parse_records_pass1+0x438>
   13ee8:	cmp	r6, r3
   13eec:	moveq	r0, #0
   13ef0:	bne	13ed4 <sav_parse_records_pass1+0x80>
   13ef4:	add	sp, sp, #5120	; 0x1400
   13ef8:	add	sp, sp, #28
   13efc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13f00:	ldr	sl, [r5, #36]	; 0x24
   13f04:	mov	r1, #28
   13f08:	mov	r0, r7
   13f0c:	ldr	r3, [sl, #12]
   13f10:	ldr	r2, [sl, #20]
   13f14:	blx	r3
   13f18:	cmp	r0, #27
   13f1c:	bls	13e8c <sav_parse_records_pass1+0x38>
   13f20:	ldr	r3, [r4, #-1020]	; 0xfffffc04
   13f24:	cmp	r3, #0
   13f28:	beq	13f88 <sav_parse_records_pass1+0x134>
   13f2c:	ldr	r3, [sl, #12]
   13f30:	ldr	r2, [sl, #20]
   13f34:	mov	r1, #4
   13f38:	mov	r0, r9
   13f3c:	blx	r3
   13f40:	cmp	r0, #3
   13f44:	bls	13e8c <sav_parse_records_pass1+0x38>
   13f48:	ldrb	r3, [r5, #436]	; 0x1b4
   13f4c:	ldr	r0, [r4, #-1036]	; 0xfffffbf4
   13f50:	tst	r3, #1
   13f54:	beq	13f5c <sav_parse_records_pass1+0x108>
   13f58:	bl	3dd8 <byteswap4@plt>
   13f5c:	str	r0, [r4, #-1036]	; 0xfffffbf4
   13f60:	add	r0, r0, #3
   13f64:	ldr	r3, [sl, #8]
   13f68:	ldr	r2, [sl, #20]
   13f6c:	mov	r1, #1
   13f70:	bic	r0, r0, #3
   13f74:	blx	r3
   13f78:	cmn	r0, #1
   13f7c:	bne	13f88 <sav_parse_records_pass1+0x134>
   13f80:	mov	r0, #15
   13f84:	b	13ef4 <sav_parse_records_pass1+0xa0>
   13f88:	ldr	r0, [r4, #-1016]	; 0xfffffc08
   13f8c:	cmp	r0, #0
   13f90:	beq	13e70 <sav_parse_records_pass1+0x1c>
   13f94:	ldrb	r3, [r5, #436]	; 0x1b4
   13f98:	tst	r3, #1
   13f9c:	beq	13fa4 <sav_parse_records_pass1+0x150>
   13fa0:	bl	3dd8 <byteswap4@plt>
   13fa4:	cmp	r0, #0
   13fa8:	rsblt	r0, r0, #0
   13fac:	ldr	r3, [sl, #8]
   13fb0:	ldr	r2, [sl, #20]
   13fb4:	mov	r1, #1
   13fb8:	lsl	r0, r0, #3
   13fbc:	blx	r3
   13fc0:	cmn	r0, #1
   13fc4:	bne	13e70 <sav_parse_records_pass1+0x1c>
   13fc8:	b	13f80 <sav_parse_records_pass1+0x12c>
   13fcc:	ldr	r6, [r5, #36]	; 0x24
   13fd0:	mov	r1, #4
   13fd4:	sub	r0, r7, #16
   13fd8:	ldr	r3, [r6, #12]
   13fdc:	ldr	r2, [r6, #20]
   13fe0:	blx	r3
   13fe4:	cmp	r0, #3
   13fe8:	bls	13e8c <sav_parse_records_pass1+0x38>
   13fec:	ldrb	r3, [r5, #436]	; 0x1b4
   13ff0:	tst	r3, #1
   13ff4:	beq	14004 <sav_parse_records_pass1+0x1b0>
   13ff8:	ldr	r0, [r4, #-1040]	; 0xfffffbf0
   13ffc:	bl	3dd8 <byteswap4@plt>
   14000:	str	r0, [r4, #-1040]	; 0xfffffbf0
   14004:	mov	sl, #0
   14008:	mov	fp, #1
   1400c:	ldr	r3, [r4, #-1040]	; 0xfffffbf0
   14010:	cmp	sl, r3
   14014:	bcc	140a0 <sav_parse_records_pass1+0x24c>
   14018:	ldr	r3, [r6, #12]
   1401c:	ldr	r2, [r6, #20]
   14020:	mov	r1, #4
   14024:	mov	r0, r9
   14028:	blx	r3
   1402c:	cmp	r0, #3
   14030:	bls	13e8c <sav_parse_records_pass1+0x38>
   14034:	ldrb	r3, [r5, #436]	; 0x1b4
   14038:	tst	r3, #1
   1403c:	beq	1404c <sav_parse_records_pass1+0x1f8>
   14040:	ldr	r0, [r4, #-1036]	; 0xfffffbf4
   14044:	bl	3dd8 <byteswap4@plt>
   14048:	str	r0, [r4, #-1036]	; 0xfffffbf4
   1404c:	ldr	r1, [r4, #-1036]	; 0xfffffbf4
   14050:	cmp	r1, #4
   14054:	bne	13ed4 <sav_parse_records_pass1+0x80>
   14058:	ldr	r3, [r6, #12]
   1405c:	ldr	r2, [r6, #20]
   14060:	mov	r0, r7
   14064:	blx	r3
   14068:	cmp	r0, #3
   1406c:	bls	13e8c <sav_parse_records_pass1+0x38>
   14070:	ldrb	r3, [r5, #436]	; 0x1b4
   14074:	tst	r3, #1
   14078:	beq	14088 <sav_parse_records_pass1+0x234>
   1407c:	ldr	r0, [r4, #-1024]	; 0xfffffc00
   14080:	bl	3dd8 <byteswap4@plt>
   14084:	str	r0, [r4, #-1024]	; 0xfffffc00
   14088:	ldr	r0, [r4, #-1024]	; 0xfffffc00
   1408c:	ldr	r3, [r6, #8]
   14090:	ldr	r2, [r6, #20]
   14094:	mov	r1, #1
   14098:	lsl	r0, r0, #2
   1409c:	b	13fbc <sav_parse_records_pass1+0x168>
   140a0:	mov	r3, #0
   140a4:	strb	r3, [r4, #-1024]	; 0xfffffc00
   140a8:	mov	r1, fp
   140ac:	ldr	r3, [r6, #8]
   140b0:	ldr	r2, [r6, #20]
   140b4:	mov	r0, #8
   140b8:	blx	r3
   140bc:	cmn	r0, #1
   140c0:	beq	13f80 <sav_parse_records_pass1+0x12c>
   140c4:	ldr	r3, [r6, #12]
   140c8:	ldr	r2, [r6, #20]
   140cc:	mov	r1, fp
   140d0:	mov	r0, r7
   140d4:	blx	r3
   140d8:	cmp	r0, #0
   140dc:	ble	13e8c <sav_parse_records_pass1+0x38>
   140e0:	ldrb	r0, [r4, #-1024]	; 0xfffffc00
   140e4:	ldr	r3, [r6, #8]
   140e8:	ldr	r2, [r6, #20]
   140ec:	add	r0, r0, #8
   140f0:	bic	r0, r0, #7
   140f4:	mov	r1, fp
   140f8:	sub	r0, r0, #1
   140fc:	blx	r3
   14100:	cmn	r0, #1
   14104:	beq	13f80 <sav_parse_records_pass1+0x12c>
   14108:	add	sl, sl, #1
   1410c:	b	1400c <sav_parse_records_pass1+0x1b8>
   14110:	mov	r0, r5
   14114:	bl	13de0 <sav_skip_document_record>
   14118:	cmp	r0, #0
   1411c:	beq	13e70 <sav_parse_records_pass1+0x1c>
   14120:	b	13ef4 <sav_parse_records_pass1+0xa0>
   14124:	ldr	r3, [r8, #12]
   14128:	ldr	r2, [r8, #20]
   1412c:	mov	r1, #12
   14130:	mov	r0, r9
   14134:	blx	r3
   14138:	cmp	r0, #11
   1413c:	bls	13e8c <sav_parse_records_pass1+0x38>
   14140:	ldrb	r3, [r5, #436]	; 0x1b4
   14144:	tst	r3, #1
   14148:	bne	14210 <sav_parse_records_pass1+0x3bc>
   1414c:	ldr	r3, [r4, #-1032]	; 0xfffffbf8
   14150:	ldr	r6, [r4, #-1028]	; 0xfffffbfc
   14154:	mul	r6, r6, r3
   14158:	ldr	r3, [r4, #-1036]	; 0xfffffbf4
   1415c:	cmp	r3, #3
   14160:	bne	14278 <sav_parse_records_pass1+0x424>
   14164:	cmp	r6, #4096	; 0x1000
   14168:	bhi	13ed4 <sav_parse_records_pass1+0x80>
   1416c:	ldr	r3, [r8, #12]
   14170:	ldr	r2, [r8, #20]
   14174:	mov	r1, r6
   14178:	mov	r0, r4
   1417c:	blx	r3
   14180:	cmp	r6, r0
   14184:	bhi	13ed4 <sav_parse_records_pass1+0x80>
   14188:	cmp	r6, #32
   1418c:	bne	13ed4 <sav_parse_records_pass1+0x80>
   14190:	ldrb	r3, [r5, #436]	; 0x1b4
   14194:	ldr	r6, [r5, #60]	; 0x3c
   14198:	ldr	r0, [r4, #28]
   1419c:	tst	r3, #1
   141a0:	beq	141a8 <sav_parse_records_pass1+0x354>
   141a4:	bl	3dd8 <byteswap4@plt>
   141a8:	ldr	r1, [r5, #56]	; 0x38
   141ac:	cmp	r1, #0
   141b0:	bne	141dc <sav_parse_records_pass1+0x388>
   141b4:	ldr	r2, [pc, #212]	; 14290 <sav_parse_records_pass1+0x43c>
   141b8:	mov	ip, #36	; 0x24
   141bc:	add	r2, pc, r2
   141c0:	mul	r3, ip, r1
   141c4:	ldr	lr, [r3, r2]
   141c8:	cmp	r0, lr
   141cc:	bne	14230 <sav_parse_records_pass1+0x3dc>
   141d0:	add	r1, r3, #4
   141d4:	add	r1, r2, r1
   141d8:	str	r1, [r5, #56]	; 0x38
   141dc:	cmp	r6, #0
   141e0:	beq	13e70 <sav_parse_records_pass1+0x1c>
   141e4:	mov	r0, r6
   141e8:	bl	4180 <iconv_open@plt>
   141ec:	cmn	r0, #1
   141f0:	mov	r4, r0
   141f4:	beq	14270 <sav_parse_records_pass1+0x41c>
   141f8:	ldr	r0, [r5, #336]	; 0x150
   141fc:	cmp	r0, #0
   14200:	beq	14208 <sav_parse_records_pass1+0x3b4>
   14204:	bl	3e14 <iconv_close@plt>
   14208:	str	r4, [r5, #336]	; 0x150
   1420c:	b	13e70 <sav_parse_records_pass1+0x1c>
   14210:	mov	r6, #0
   14214:	ldr	r0, [r9, r6, lsl #2]
   14218:	bl	3dd8 <byteswap4@plt>
   1421c:	str	r0, [r9, r6, lsl #2]
   14220:	add	r6, r6, #1
   14224:	cmp	r6, #3
   14228:	bne	14214 <sav_parse_records_pass1+0x3c0>
   1422c:	b	1414c <sav_parse_records_pass1+0x2f8>
   14230:	add	r1, r1, #1
   14234:	cmp	r1, #79	; 0x4f
   14238:	bne	141c0 <sav_parse_records_pass1+0x36c>
   1423c:	ldr	r3, [r5, #24]
   14240:	cmp	r3, #0
   14244:	beq	14270 <sav_parse_records_pass1+0x41c>
   14248:	ldr	r2, [pc, #68]	; 14294 <sav_parse_records_pass1+0x440>
   1424c:	mov	r3, r0
   14250:	mov	r1, #1024	; 0x400
   14254:	add	r2, pc, r2
   14258:	mov	r0, r7
   1425c:	bl	42c4 <snprintf@plt>
   14260:	ldr	r3, [r5, #24]
   14264:	ldr	r1, [r5, #40]	; 0x28
   14268:	mov	r0, r7
   1426c:	blx	r3
   14270:	mov	r0, #7
   14274:	b	13ef4 <sav_parse_records_pass1+0xa0>
   14278:	ldr	r3, [r8, #8]
   1427c:	ldr	r2, [r8, #20]
   14280:	mov	r1, #1
   14284:	mov	r0, r6
   14288:	b	13fbc <sav_parse_records_pass1+0x168>
   1428c:	.word	0x000003e7
   14290:	.word	0x0002ddac
   14294:	.word	0x0000e9da

00014298 <sav_process_row>:
   14298:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1429c:	sub	sp, sp, #76	; 0x4c
   142a0:	ldr	r5, [r2, #360]	; 0x168
   142a4:	cmp	r5, #0
   142a8:	beq	14550 <sav_process_row+0x2b8>
   142ac:	sub	r5, r5, #1
   142b0:	str	r5, [r2, #360]	; 0x168
   142b4:	b	143bc <sav_process_row+0x124>
   142b8:	ldr	r3, [r4, #44]	; 0x2c
   142bc:	mov	r1, #0
   142c0:	ldr	r0, [sp, #28]
   142c4:	ldr	r2, [r3, sl, lsl #2]
   142c8:	ldr	r7, [r3, r9, lsl #2]
   142cc:	str	r2, [sp, #16]
   142d0:	mov	r2, #16
   142d4:	bl	42e8 <memset@plt>
   142d8:	ldr	r2, [sp, #24]
   142dc:	ldr	r3, [r7]
   142e0:	cmp	r2, #31
   142e4:	str	r3, [sp, #64]	; 0x40
   142e8:	bgt	14548 <sav_process_row+0x2b0>
   142ec:	cmp	r3, #0
   142f0:	bne	14438 <sav_process_row+0x1a0>
   142f4:	ldr	r3, [r4, #380]	; 0x17c
   142f8:	add	r2, r6, #8
   142fc:	cmp	r2, r3
   14300:	bhi	14320 <sav_process_row+0x88>
   14304:	ldr	r1, [r4, #376]	; 0x178
   14308:	ldr	r3, [r8]
   1430c:	add	r0, r1, r6
   14310:	str	r3, [r1, r6]
   14314:	mov	r6, r2
   14318:	ldr	r3, [r8, #4]
   1431c:	str	r3, [r0, #4]
   14320:	ldr	r3, [sp, #24]
   14324:	add	r3, r3, #1
   14328:	str	r3, [sp, #24]
   1432c:	ldr	r3, [sp, #16]
   14330:	ldr	r2, [sp, #24]
   14334:	ldr	r3, [r3, #16]
   14338:	cmp	r2, r3
   1433c:	ldr	r3, [r7, #48]	; 0x30
   14340:	bne	14358 <sav_process_row+0xc0>
   14344:	add	fp, fp, #1
   14348:	cmp	fp, r3
   1434c:	sublt	r6, r6, #1
   14350:	add	sl, sl, #1
   14354:	str	r5, [sp, #24]
   14358:	cmp	r3, fp
   1435c:	bne	14388 <sav_process_row+0xf0>
   14360:	ldr	r2, [r7, #8]
   14364:	ldr	r3, [r4, #52]	; 0x34
   14368:	ldr	r3, [r3, r2, lsl #2]
   1436c:	ldr	r3, [r3, #2144]	; 0x860
   14370:	cmp	r3, #0
   14374:	beq	143c4 <sav_process_row+0x12c>
   14378:	ldr	r3, [r7, #48]	; 0x30
   1437c:	mov	fp, r5
   14380:	add	r9, r9, r3
   14384:	mov	r6, #0
   14388:	add	r8, r8, #8
   1438c:	ldr	r3, [sp, #36]	; 0x24
   14390:	ldr	r2, [sp, #44]	; 0x2c
   14394:	sub	r3, r8, r3
   14398:	cmp	r2, r3
   1439c:	bls	143b0 <sav_process_row+0x118>
   143a0:	ldr	r3, [r4, #340]	; 0x154
   143a4:	cmp	sl, r3
   143a8:	cmplt	r9, r3
   143ac:	blt	142b8 <sav_process_row+0x20>
   143b0:	ldr	r3, [r4, #364]	; 0x16c
   143b4:	add	r3, r3, #1
   143b8:	str	r3, [r4, #364]	; 0x16c
   143bc:	mov	r0, #0
   143c0:	b	14430 <sav_process_row+0x198>
   143c4:	ldr	r3, [r4, #336]	; 0x150
   143c8:	str	r3, [sp]
   143cc:	mov	r3, r6
   143d0:	ldr	r2, [r4, #376]	; 0x178
   143d4:	ldr	r1, [r4, #388]	; 0x184
   143d8:	ldr	r0, [r4, #384]	; 0x180
   143dc:	bl	427c <readstat_convert@plt>
   143e0:	cmp	r0, #0
   143e4:	bne	14430 <sav_process_row+0x198>
   143e8:	ldr	r3, [r4, #384]	; 0x180
   143ec:	ldr	lr, [r7, #8]
   143f0:	str	r3, [sp, #56]	; 0x38
   143f4:	ldr	r3, [r4, #40]	; 0x28
   143f8:	ldr	ip, [r4, #52]	; 0x34
   143fc:	str	r3, [sp, #8]
   14400:	ldr	r3, [sp, #32]
   14404:	ldm	r3, {r0, r1}
   14408:	ldr	r3, [sp, #28]
   1440c:	stm	sp, {r0, r1}
   14410:	ldm	r3, {r2, r3}
   14414:	ldr	r6, [r4, #16]
   14418:	ldr	r1, [ip, lr, lsl #2]
   1441c:	ldr	r0, [r4, #364]	; 0x16c
   14420:	blx	r6
   14424:	cmp	r0, #0
   14428:	beq	14378 <sav_process_row+0xe0>
   1442c:	mov	r0, #4
   14430:	add	sp, sp, #76	; 0x4c
   14434:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14438:	cmp	r3, #5
   1443c:	bne	14388 <sav_process_row+0xf0>
   14440:	ldr	r2, [r7, #8]
   14444:	ldr	r3, [r4, #52]	; 0x34
   14448:	ldr	r3, [r3, r2, lsl #2]
   1444c:	ldr	r3, [r3, #2144]	; 0x860
   14450:	cmp	r3, #0
   14454:	beq	14468 <sav_process_row+0x1d0>
   14458:	ldr	r3, [r7, #48]	; 0x30
   1445c:	add	sl, sl, #1
   14460:	add	r9, r9, r3
   14464:	b	14388 <sav_process_row+0xf0>
   14468:	ldr	r3, [sp, #40]	; 0x28
   1446c:	ldr	r0, [r8]
   14470:	ldr	r1, [r8, #4]
   14474:	stmia	r3!, {r0, r1}
   14478:	ldrb	r3, [r4, #436]	; 0x1b4
   1447c:	tst	r3, #1
   14480:	beq	14490 <sav_process_row+0x1f8>
   14484:	vldr	d0, [sp, #48]	; 0x30
   14488:	bl	4558 <byteswap_double@plt>
   1448c:	vstr	d0, [sp, #48]	; 0x30
   14490:	vldr	d7, [sp, #48]	; 0x30
   14494:	add	ip, r4, #400	; 0x190
   14498:	ldr	lr, [r7, #8]
   1449c:	ldrd	r2, [ip, #-8]
   144a0:	vstr	d7, [sp, #16]
   144a4:	ldrd	r0, [sp, #16]
   144a8:	vstr	d7, [sp, #56]	; 0x38
   144ac:	vldr	d7, [sp, #16]
   144b0:	cmp	r1, r3
   144b4:	cmpeq	r0, r2
   144b8:	ldrbeq	r3, [sp, #69]	; 0x45
   144bc:	vcmp.f64	d7, d7
   144c0:	orreq	r3, r3, #1
   144c4:	strbeq	r3, [sp, #69]	; 0x45
   144c8:	ldrd	r2, [ip]
   144cc:	ldr	ip, [r4, #52]	; 0x34
   144d0:	cmp	r1, r3
   144d4:	cmpeq	r0, r2
   144d8:	ldrbeq	r3, [sp, #69]	; 0x45
   144dc:	orreq	r3, r3, #1
   144e0:	strbeq	r3, [sp, #69]	; 0x45
   144e4:	add	r3, r4, #416	; 0x1a0
   144e8:	ldrd	r2, [r3, #-8]
   144ec:	cmp	r1, r3
   144f0:	cmpeq	r0, r2
   144f4:	ldrbeq	r3, [sp, #69]	; 0x45
   144f8:	orreq	r3, r3, #1
   144fc:	strbeq	r3, [sp, #69]	; 0x45
   14500:	vmrs	APSR_nzcv, fpscr
   14504:	ldrbvs	r3, [sp, #69]	; 0x45
   14508:	orrvs	r3, r3, #1
   1450c:	strbvs	r3, [sp, #69]	; 0x45
   14510:	ldr	r3, [r4, #40]	; 0x28
   14514:	str	r3, [sp, #8]
   14518:	ldr	r3, [sp, #32]
   1451c:	ldm	r3, {r0, r1}
   14520:	ldr	r3, [sp, #28]
   14524:	stm	sp, {r0, r1}
   14528:	ldr	r1, [ip, lr, lsl #2]
   1452c:	ldm	r3, {r2, r3}
   14530:	ldr	r0, [r4, #364]	; 0x16c
   14534:	ldr	ip, [r4, #16]
   14538:	blx	ip
   1453c:	cmp	r0, #0
   14540:	beq	14458 <sav_process_row+0x1c0>
   14544:	b	1442c <sav_process_row+0x194>
   14548:	mov	r0, #5
   1454c:	b	14430 <sav_process_row+0x198>
   14550:	add	r3, sp, #56	; 0x38
   14554:	str	r3, [sp, #28]
   14558:	add	r3, sp, #48	; 0x30
   1455c:	str	r3, [sp, #40]	; 0x28
   14560:	add	r3, sp, #64	; 0x40
   14564:	mov	r4, r2
   14568:	str	r1, [sp, #44]	; 0x2c
   1456c:	str	r0, [sp, #36]	; 0x24
   14570:	mov	r8, r0
   14574:	mov	sl, r5
   14578:	mov	r9, r5
   1457c:	mov	fp, r5
   14580:	str	r5, [sp, #24]
   14584:	mov	r6, r5
   14588:	str	r3, [sp, #32]
   1458c:	b	1438c <sav_process_row+0xf4>

00014590 <sav_parse_timestamp>:
   14590:	push	{r4, r5, r6, r7, lr}
   14594:	sub	sp, sp, #60	; 0x3c
   14598:	add	r5, sp, #12
   1459c:	mov	r4, r0
   145a0:	mov	r7, r1
   145a4:	mov	r2, #44	; 0x2c
   145a8:	mov	r1, #0
   145ac:	mov	r0, r5
   145b0:	bl	42e8 <memset@plt>
   145b4:	mvn	r3, #0
   145b8:	str	r3, [sp, #44]	; 0x2c
   145bc:	ldr	r3, [r4, #40]	; 0x28
   145c0:	mov	r2, r5
   145c4:	str	r3, [sp]
   145c8:	mov	r1, #8
   145cc:	ldr	r3, [r4, #24]
   145d0:	add	r0, r7, #101	; 0x65
   145d4:	bl	3f1c <sav_parse_time@plt>
   145d8:	subs	r6, r0, #0
   145dc:	bne	14610 <sav_parse_timestamp+0x80>
   145e0:	ldr	r3, [r4, #40]	; 0x28
   145e4:	mov	r2, r5
   145e8:	str	r3, [sp]
   145ec:	mov	r1, #9
   145f0:	ldr	r3, [r4, #24]
   145f4:	add	r0, r7, #92	; 0x5c
   145f8:	bl	40cc <sav_parse_date@plt>
   145fc:	subs	r6, r0, #0
   14600:	bne	14610 <sav_parse_timestamp+0x80>
   14604:	mov	r0, r5
   14608:	bl	3e98 <mktime@plt>
   1460c:	str	r0, [r4, #324]	; 0x144
   14610:	mov	r0, r6
   14614:	add	sp, sp, #60	; 0x3c
   14618:	pop	{r4, r5, r6, r7, pc}

0001461c <readstat_parse_sav>:
   1461c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14620:	vpush	{d8-d11}
   14624:	ldr	r3, [pc, #1220]	; 14af0 <readstat_parse_sav+0x4d4>
   14628:	mov	r5, r0
   1462c:	add	r3, pc, r3
   14630:	sub	sp, sp, #868	; 0x364
   14634:	mov	r8, r2
   14638:	str	r3, [sp, #52]	; 0x34
   1463c:	ldr	r3, [r5, #32]
   14640:	mov	r0, r1
   14644:	str	r3, [sp, #20]
   14648:	ldr	r2, [sp, #20]
   1464c:	ldr	r3, [r3]
   14650:	ldr	r1, [r2, #20]
   14654:	blx	r3
   14658:	cmn	r0, #1
   1465c:	moveq	fp, #1
   14660:	beq	149c4 <readstat_parse_sav+0x3a8>
   14664:	ldr	r3, [sp, #20]
   14668:	ldr	r2, [sp, #20]
   1466c:	mov	r1, #2
   14670:	ldr	r3, [r3, #8]
   14674:	ldr	r2, [r2, #20]
   14678:	mov	r0, #0
   1467c:	blx	r3
   14680:	cmn	r0, #1
   14684:	mov	r7, r0
   14688:	bne	14698 <readstat_parse_sav+0x7c>
   1468c:	mov	r4, #0
   14690:	mov	fp, #15
   14694:	b	149a0 <readstat_parse_sav+0x384>
   14698:	ldr	r3, [sp, #20]
   1469c:	ldr	r2, [sp, #20]
   146a0:	mov	r1, #0
   146a4:	ldr	r3, [r3, #8]
   146a8:	ldr	r2, [r2, #20]
   146ac:	mov	r0, r1
   146b0:	blx	r3
   146b4:	cmn	r0, #1
   146b8:	beq	1468c <readstat_parse_sav+0x70>
   146bc:	ldr	r3, [sp, #20]
   146c0:	ldr	r2, [sp, #20]
   146c4:	add	r6, sp, #104	; 0x68
   146c8:	ldr	r3, [r3, #12]
   146cc:	ldr	r2, [r2, #20]
   146d0:	mov	r1, #176	; 0xb0
   146d4:	mov	r0, r6
   146d8:	blx	r3
   146dc:	cmp	r0, #175	; 0xaf
   146e0:	movls	r4, #0
   146e4:	movls	fp, #2
   146e8:	bls	149a0 <readstat_parse_sav+0x384>
   146ec:	ldr	r1, [sp, #20]
   146f0:	mov	r0, r6
   146f4:	bl	409c <sav_ctx_init@plt>
   146f8:	subs	r4, r0, #0
   146fc:	beq	15ed8 <readstat_parse_sav+0x18bc>
   14700:	mov	lr, r5
   14704:	mov	ip, r4
   14708:	ldm	lr!, {r0, r1, r2, r3}
   1470c:	stmia	ip!, {r0, r1, r2, r3}
   14710:	ldm	lr, {r0, r1, r2, r3}
   14714:	stm	ip, {r0, r1, r2, r3}
   14718:	ldr	r3, [r5, #36]	; 0x24
   1471c:	ldr	r1, [r4, #352]	; 0x160
   14720:	str	r3, [r4, #56]	; 0x38
   14724:	ldr	r3, [r5, #40]	; 0x28
   14728:	ldr	r2, [r5, #44]	; 0x2c
   1472c:	str	r3, [r4, #60]	; 0x3c
   14730:	ldr	r3, [r5, #48]	; 0x30
   14734:	str	r8, [r4, #40]	; 0x28
   14738:	cmp	r3, #0
   1473c:	strgt	r3, [r4, #360]	; 0x168
   14740:	cmn	r1, #1
   14744:	str	r7, [r4, #32]
   14748:	beq	14774 <readstat_parse_sav+0x158>
   1474c:	ldr	r3, [r4, #360]	; 0x168
   14750:	subs	r3, r1, r3
   14754:	movmi	r3, #0
   14758:	strmi	r1, [r4, #360]	; 0x168
   1475c:	cmp	r3, r2
   14760:	cmpgt	r2, #0
   14764:	str	r3, [r4, #356]	; 0x164
   14768:	ble	1477c <readstat_parse_sav+0x160>
   1476c:	str	r2, [r4, #356]	; 0x164
   14770:	b	1477c <readstat_parse_sav+0x160>
   14774:	cmp	r2, #0
   14778:	bgt	1476c <readstat_parse_sav+0x150>
   1477c:	mov	r1, r6
   14780:	mov	r0, r4
   14784:	bl	3e38 <sav_parse_timestamp@plt>
   14788:	subs	fp, r0, #0
   1478c:	bne	149a0 <readstat_parse_sav+0x384>
   14790:	mov	r0, r4
   14794:	bl	13e54 <sav_parse_records_pass1>
   14798:	subs	fp, r0, #0
   1479c:	bne	149a0 <readstat_parse_sav+0x384>
   147a0:	ldr	r3, [sp, #20]
   147a4:	ldr	r2, [sp, #20]
   147a8:	mov	r1, fp
   147ac:	ldr	r3, [r3, #8]
   147b0:	ldr	r2, [r2, #20]
   147b4:	mov	r0, #176	; 0xb0
   147b8:	blx	r3
   147bc:	cmn	r0, #1
   147c0:	beq	14690 <readstat_parse_sav+0x74>
   147c4:	mov	r0, r4
   147c8:	bl	13db8 <sav_update_progress>
   147cc:	subs	fp, r0, #0
   147d0:	bne	149a0 <readstat_parse_sav+0x384>
   147d4:	ldr	r3, [r4, #36]	; 0x24
   147d8:	mov	r0, #4096	; 0x1000
   147dc:	str	r3, [sp, #28]
   147e0:	bl	4270 <readstat_malloc@plt>
   147e4:	subs	r9, r0, #0
   147e8:	beq	15f40 <readstat_parse_sav+0x1924>
   147ec:	vldr	d8, [pc, #732]	; 14ad0 <readstat_parse_sav+0x4b4>
   147f0:	vldr	d9, [pc, #736]	; 14ad8 <readstat_parse_sav+0x4bc>
   147f4:	vldr	d10, [pc, #740]	; 14ae0 <readstat_parse_sav+0x4c4>
   147f8:	vldr	d11, [pc, #744]	; 14ae8 <readstat_parse_sav+0x4cc>
   147fc:	mov	r3, #4096	; 0x1000
   14800:	str	r3, [sp, #48]	; 0x30
   14804:	ldr	r3, [sp, #28]
   14808:	ldr	r2, [sp, #28]
   1480c:	mov	r1, #4
   14810:	ldr	r3, [r3, #12]
   14814:	ldr	r2, [r2, #20]
   14818:	add	r0, sp, #68	; 0x44
   1481c:	blx	r3
   14820:	cmp	r0, #3
   14824:	bls	15f6c <readstat_parse_sav+0x1950>
   14828:	ldrb	r3, [r4, #436]	; 0x1b4
   1482c:	tst	r3, #1
   14830:	beq	14840 <readstat_parse_sav+0x224>
   14834:	ldr	r0, [sp, #68]	; 0x44
   14838:	bl	3dd8 <byteswap4@plt>
   1483c:	str	r0, [sp, #68]	; 0x44
   14840:	ldr	r3, [sp, #68]	; 0x44
   14844:	cmp	r3, #6
   14848:	beq	1530c <readstat_parse_sav+0xcf0>
   1484c:	bhi	14868 <readstat_parse_sav+0x24c>
   14850:	cmp	r3, #2
   14854:	beq	149d4 <readstat_parse_sav+0x3b8>
   14858:	cmp	r3, #3
   1485c:	beq	14e6c <readstat_parse_sav+0x850>
   14860:	mov	fp, #5
   14864:	b	148a0 <readstat_parse_sav+0x284>
   14868:	cmp	r3, #7
   1486c:	beq	153e8 <readstat_parse_sav+0xdcc>
   14870:	ldr	r2, [pc, #636]	; 14af4 <readstat_parse_sav+0x4d8>
   14874:	cmp	r3, r2
   14878:	bne	14860 <readstat_parse_sav+0x244>
   1487c:	ldr	r3, [r4, #36]	; 0x24
   14880:	mov	r1, #4
   14884:	add	r0, sp, #536	; 0x218
   14888:	ldr	r5, [r3, #12]
   1488c:	ldr	r2, [r3, #20]
   14890:	blx	r5
   14894:	cmp	r0, #3
   14898:	movls	fp, #2
   1489c:	movhi	fp, #0
   148a0:	mov	r0, r9
   148a4:	bl	3f04 <free@plt>
   148a8:	cmp	fp, #0
   148ac:	bne	149a0 <readstat_parse_sav+0x384>
   148b0:	ldr	r7, [r4, #340]	; 0x154
   148b4:	mov	r5, fp
   148b8:	mov	r8, #252	; 0xfc
   148bc:	str	fp, [r4, #348]	; 0x15c
   148c0:	cmp	r5, r7
   148c4:	blt	15b0c <readstat_parse_sav+0x14f0>
   148c8:	mov	r1, #4
   148cc:	ldr	r0, [r4, #348]	; 0x15c
   148d0:	bl	400c <readstat_calloc@plt>
   148d4:	ldr	r6, [r4, #348]	; 0x15c
   148d8:	cmp	r6, #0
   148dc:	str	r0, [r4, #52]	; 0x34
   148e0:	beq	15ed8 <readstat_parse_sav+0x18bc>
   148e4:	ldr	r3, [r4]
   148e8:	cmp	r3, #0
   148ec:	beq	15b4c <readstat_parse_sav+0x1530>
   148f0:	add	r5, sp, #536	; 0x218
   148f4:	mov	r2, #56	; 0x38
   148f8:	mov	r1, #0
   148fc:	mov	r0, r5
   14900:	bl	42e8 <memset@plt>
   14904:	ldr	r2, [r4, #352]	; 0x160
   14908:	add	r1, sp, #544	; 0x220
   1490c:	cmn	r2, #1
   14910:	asr	r7, r6, #31
   14914:	ldrne	r2, [r4, #356]	; 0x164
   14918:	strd	r6, [r1]
   1491c:	add	r6, r4, #64	; 0x40
   14920:	asr	r3, r2, #31
   14924:	mov	r0, r6
   14928:	strd	r2, [r1, #-8]
   1492c:	ldr	r2, [r4, #424]	; 0x1a8
   14930:	ldr	r3, [r4, #324]	; 0x144
   14934:	str	r3, [sp, #552]	; 0x228
   14938:	str	r3, [sp, #556]	; 0x22c
   1493c:	asr	r3, r2, #31
   14940:	strd	r2, [r1, #16]
   14944:	ldr	r3, [r4, #428]	; 0x1ac
   14948:	add	r2, sp, #213	; 0xd5
   1494c:	str	r3, [sp, #568]	; 0x238
   14950:	ldr	r3, [r4, #432]	; 0x1b0
   14954:	ldr	r1, [pc, #412]	; 14af8 <readstat_parse_sav+0x4dc>
   14958:	str	r3, [sp, #572]	; 0x23c
   1495c:	ldr	r3, [r4, #56]	; 0x38
   14960:	str	r3, [sp, #584]	; 0x248
   14964:	ldr	r3, [r4, #336]	; 0x150
   14968:	str	r3, [sp]
   1496c:	mov	r3, #64	; 0x40
   14970:	bl	427c <readstat_convert@plt>
   14974:	cmp	r0, #0
   14978:	bne	1499c <readstat_parse_sav+0x380>
   1497c:	str	r6, [sp, #580]	; 0x244
   14980:	ldr	r3, [r4]
   14984:	ldr	r1, [r4, #40]	; 0x28
   14988:	mov	r0, r5
   1498c:	blx	r3
   14990:	cmp	r0, #0
   14994:	beq	15b4c <readstat_parse_sav+0x1530>
   14998:	mov	r0, #4
   1499c:	mov	fp, r0
   149a0:	ldr	r3, [sp, #20]
   149a4:	ldr	r2, [sp, #20]
   149a8:	ldr	r3, [r3, #4]
   149ac:	ldr	r0, [r2, #20]
   149b0:	blx	r3
   149b4:	cmp	r4, #0
   149b8:	beq	149c4 <readstat_parse_sav+0x3a8>
   149bc:	mov	r0, r4
   149c0:	bl	3f58 <sav_ctx_free@plt>
   149c4:	mov	r0, fp
   149c8:	add	sp, sp, #868	; 0x364
   149cc:	vpop	{d8-d11}
   149d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   149d4:	add	r6, sp, #536	; 0x218
   149d8:	mov	r1, #0
   149dc:	mov	r2, #28
   149e0:	mov	r0, r6
   149e4:	ldr	r5, [r4, #36]	; 0x24
   149e8:	bl	42e8 <memset@plt>
   149ec:	ldr	r1, [r4, #340]	; 0x154
   149f0:	ldr	r3, [r4, #48]	; 0x30
   149f4:	cmp	r1, r3
   149f8:	beq	14aa0 <readstat_parse_sav+0x484>
   149fc:	ldr	r3, [r5, #12]
   14a00:	ldr	r2, [r5, #20]
   14a04:	mov	r1, #28
   14a08:	mov	r0, r6
   14a0c:	blx	r3
   14a10:	cmp	r0, #27
   14a14:	bls	15ee0 <readstat_parse_sav+0x18c4>
   14a18:	ldrb	r3, [r4, #436]	; 0x1b4
   14a1c:	ldr	r0, [sp, #548]	; 0x224
   14a20:	tst	r3, #1
   14a24:	beq	14a2c <readstat_parse_sav+0x410>
   14a28:	bl	3dd8 <byteswap4@plt>
   14a2c:	ldrb	r3, [r4, #436]	; 0x1b4
   14a30:	str	r0, [sp, #548]	; 0x224
   14a34:	ldr	r0, [sp, #552]	; 0x228
   14a38:	tst	r3, #1
   14a3c:	beq	14a44 <readstat_parse_sav+0x428>
   14a40:	bl	3dd8 <byteswap4@plt>
   14a44:	ldrb	r3, [r4, #436]	; 0x1b4
   14a48:	str	r0, [sp, #552]	; 0x228
   14a4c:	tst	r3, #1
   14a50:	ldreq	r6, [sp, #536]	; 0x218
   14a54:	beq	14a64 <readstat_parse_sav+0x448>
   14a58:	ldr	r0, [sp, #536]	; 0x218
   14a5c:	bl	3dd8 <byteswap4@plt>
   14a60:	mov	r6, r0
   14a64:	cmp	r6, #0
   14a68:	bge	14b0c <readstat_parse_sav+0x4f0>
   14a6c:	ldr	r2, [r4, #340]	; 0x154
   14a70:	cmp	r2, #0
   14a74:	beq	15ef8 <readstat_parse_sav+0x18dc>
   14a78:	ldr	r3, [r4, #344]	; 0x158
   14a7c:	sub	r2, r2, #-1073741823	; 0xc0000001
   14a80:	add	r3, r3, #1
   14a84:	str	r3, [r4, #344]	; 0x158
   14a88:	ldr	r3, [r4, #44]	; 0x2c
   14a8c:	ldr	r2, [r3, r2, lsl #2]
   14a90:	ldr	r3, [r2, #16]
   14a94:	add	r3, r3, #1
   14a98:	str	r3, [r2, #16]
   14a9c:	b	14804 <readstat_parse_sav+0x1e8>
   14aa0:	lsl	r3, r1, #1
   14aa4:	str	r3, [r4, #48]	; 0x30
   14aa8:	lsl	r1, r1, #3
   14aac:	ldr	r0, [r4, #44]	; 0x2c
   14ab0:	bl	4330 <readstat_realloc@plt>
   14ab4:	cmp	r0, #0
   14ab8:	str	r0, [r4, #44]	; 0x2c
   14abc:	bne	149fc <readstat_parse_sav+0x3e0>
   14ac0:	mov	sl, #3
   14ac4:	mov	r5, #0
   14ac8:	b	15f2c <readstat_parse_sav+0x1910>
   14acc:	nop			; (mov r0, r0)
   14ad0:	.word	0x00000000
   14ad4:	.word	0x7ff80000
   14ad8:	.word	0x00000000
   14adc:	.word	0xfff00000
   14ae0:	.word	0x00000000
   14ae4:	.word	0x7ff00000
	...
   14af0:	.word	0x0002c9cc
   14af4:	.word	0x000003e7
   14af8:	.word	0x00000101
   14afc:	.word	0x000002f4
   14b00:	.word	0x0000ce2b
   14b04:	.word	0x00000141
   14b08:	.word	0x0000c97f
   14b0c:	mov	r1, #280	; 0x118
   14b10:	mov	r0, #1
   14b14:	bl	400c <readstat_calloc@plt>
   14b18:	subs	r5, r0, #0
   14b1c:	beq	14ac0 <readstat_parse_sav+0x4a4>
   14b20:	mov	r3, #1
   14b24:	str	r3, [r5, #16]
   14b28:	str	r3, [r5, #48]	; 0x30
   14b2c:	ldr	r3, [r4, #340]	; 0x154
   14b30:	add	r7, sp, #556	; 0x22c
   14b34:	str	r3, [r5, #8]
   14b38:	ldr	r3, [r4, #344]	; 0x158
   14b3c:	mov	r2, r7
   14b40:	str	r3, [r5, #12]
   14b44:	mvn	r3, #0
   14b48:	str	r3, [r5, #4]
   14b4c:	mov	r3, #0
   14b50:	str	r3, [sp]
   14b54:	mov	r1, #9
   14b58:	mov	r3, #8
   14b5c:	add	r0, r5, #187	; 0xbb
   14b60:	bl	427c <readstat_convert@plt>
   14b64:	subs	sl, r0, #0
   14b68:	bne	15f2c <readstat_parse_sav+0x1910>
   14b6c:	str	sl, [sp]
   14b70:	mov	r3, #8
   14b74:	mov	r2, r7
   14b78:	mov	r1, #65	; 0x41
   14b7c:	add	r0, r5, #196	; 0xc4
   14b80:	bl	427c <readstat_convert@plt>
   14b84:	subs	sl, r0, #0
   14b88:	bne	15f2c <readstat_parse_sav+0x1910>
   14b8c:	ldr	r1, [sp, #548]	; 0x224
   14b90:	uxtb	r2, r1
   14b94:	asr	r0, r1, #8
   14b98:	asr	r1, r1, #16
   14b9c:	uxtb	r0, r0
   14ba0:	uxtb	r1, r1
   14ba4:	str	r0, [r5, #28]
   14ba8:	str	r2, [r5, #32]
   14bac:	str	r1, [r5, #24]
   14bb0:	ldr	r2, [sp, #552]	; 0x228
   14bb4:	uxtb	r0, r2
   14bb8:	str	r0, [r5, #44]	; 0x2c
   14bbc:	asr	r0, r2, #8
   14bc0:	asr	r2, r2, #16
   14bc4:	uxtb	r0, r0
   14bc8:	uxtb	r2, r2
   14bcc:	cmp	r2, #1
   14bd0:	cmpne	r1, #1
   14bd4:	str	r2, [r5, #36]	; 0x24
   14bd8:	moveq	r2, #1
   14bdc:	movne	r2, #0
   14be0:	cmp	r6, #0
   14be4:	moveq	r6, r2
   14be8:	orrne	r6, r2, #1
   14bec:	cmp	r6, #0
   14bf0:	moveq	r3, #5
   14bf4:	str	r0, [r5, #40]	; 0x28
   14bf8:	strne	sl, [r5]
   14bfc:	streq	r3, [r5]
   14c00:	ldr	r3, [sp, #540]	; 0x21c
   14c04:	cmp	r3, #0
   14c08:	beq	14cdc <readstat_parse_sav+0x6c0>
   14c0c:	ldr	r8, [r4, #36]	; 0x24
   14c10:	mov	r1, #4
   14c14:	add	r0, sp, #280	; 0x118
   14c18:	ldr	r3, [r8, #12]
   14c1c:	ldr	r2, [r8, #20]
   14c20:	blx	r3
   14c24:	cmp	r0, #3
   14c28:	bls	15f10 <readstat_parse_sav+0x18f4>
   14c2c:	ldrb	r3, [r4, #436]	; 0x1b4
   14c30:	ldr	r0, [sp, #280]	; 0x118
   14c34:	tst	r3, #1
   14c38:	beq	14c40 <readstat_parse_sav+0x624>
   14c3c:	bl	3dd8 <byteswap4@plt>
   14c40:	cmp	r0, #0
   14c44:	str	r0, [sp, #280]	; 0x118
   14c48:	beq	14cdc <readstat_parse_sav+0x6c0>
   14c4c:	add	r0, r0, #3
   14c50:	bic	r6, r0, #3
   14c54:	mov	r0, r6
   14c58:	bl	4270 <readstat_malloc@plt>
   14c5c:	subs	r3, r0, #0
   14c60:	str	r3, [sp, #24]
   14c64:	beq	15f38 <readstat_parse_sav+0x191c>
   14c68:	ldr	r7, [sp, #280]	; 0x118
   14c6c:	lsl	r7, r7, #2
   14c70:	add	r7, r7, #1
   14c74:	mov	r0, r7
   14c78:	bl	4270 <readstat_malloc@plt>
   14c7c:	cmp	r0, #0
   14c80:	str	r0, [r5, #264]	; 0x108
   14c84:	moveq	sl, #3
   14c88:	beq	14ccc <readstat_parse_sav+0x6b0>
   14c8c:	ldr	r3, [r8, #12]
   14c90:	ldr	r2, [r8, #20]
   14c94:	mov	r1, r6
   14c98:	ldr	r0, [sp, #24]
   14c9c:	blx	r3
   14ca0:	cmp	r6, r0
   14ca4:	movhi	sl, #2
   14ca8:	bhi	14ccc <readstat_parse_sav+0x6b0>
   14cac:	ldr	r3, [r4, #336]	; 0x150
   14cb0:	ldr	r2, [sp, #24]
   14cb4:	str	r3, [sp]
   14cb8:	mov	r1, r7
   14cbc:	ldr	r3, [sp, #280]	; 0x118
   14cc0:	ldr	r0, [r5, #264]	; 0x108
   14cc4:	bl	427c <readstat_convert@plt>
   14cc8:	mov	sl, r0
   14ccc:	ldr	r0, [sp, #24]
   14cd0:	bl	3f04 <free@plt>
   14cd4:	cmp	sl, #0
   14cd8:	bne	15f14 <readstat_parse_sav+0x18f8>
   14cdc:	ldr	r0, [sp, #544]	; 0x220
   14ce0:	cmp	r0, #0
   14ce4:	bne	14d0c <readstat_parse_sav+0x6f0>
   14ce8:	ldr	r3, [r4, #340]	; 0x154
   14cec:	ldr	r2, [r4, #44]	; 0x2c
   14cf0:	str	r5, [r2, r3, lsl #2]
   14cf4:	add	r3, r3, #1
   14cf8:	str	r3, [r4, #340]	; 0x154
   14cfc:	ldr	r3, [r4, #344]	; 0x158
   14d00:	add	r3, r3, #1
   14d04:	str	r3, [r4, #344]	; 0x158
   14d08:	b	14804 <readstat_parse_sav+0x1e8>
   14d0c:	ldrb	r3, [r4, #436]	; 0x1b4
   14d10:	tst	r3, #1
   14d14:	beq	14d1c <readstat_parse_sav+0x700>
   14d18:	bl	3dd8 <byteswap4@plt>
   14d1c:	add	r3, r0, #3
   14d20:	cmp	r3, #6
   14d24:	str	r0, [r5, #52]	; 0x34
   14d28:	bhi	15ee8 <readstat_parse_sav+0x18cc>
   14d2c:	cmp	r0, #0
   14d30:	movlt	r3, #1
   14d34:	movge	r3, #0
   14d38:	strlt	r3, [r5, #56]	; 0x38
   14d3c:	strge	r3, [r5, #56]	; 0x38
   14d40:	ldr	r3, [r5]
   14d44:	rsblt	r0, r0, #0
   14d48:	strlt	r0, [r5, #52]	; 0x34
   14d4c:	cmp	r3, #5
   14d50:	ldr	r7, [r4, #36]	; 0x24
   14d54:	bne	14e04 <readstat_parse_sav+0x7e8>
   14d58:	ldr	r1, [r5, #52]	; 0x34
   14d5c:	add	r6, r5, #64	; 0x40
   14d60:	ldr	r3, [r7, #12]
   14d64:	ldr	r2, [r7, #20]
   14d68:	lsl	r1, r1, #3
   14d6c:	mov	r0, r6
   14d70:	blx	r3
   14d74:	ldr	r3, [r5, #52]	; 0x34
   14d78:	cmp	r0, r3, lsl #3
   14d7c:	bcc	15ef0 <readstat_parse_sav+0x18d4>
   14d80:	mov	r7, #0
   14d84:	ldr	r3, [r5, #52]	; 0x34
   14d88:	cmp	r7, r3
   14d8c:	bge	14ce8 <readstat_parse_sav+0x6cc>
   14d90:	ldrb	r3, [r4, #436]	; 0x1b4
   14d94:	tst	r3, #1
   14d98:	beq	14da8 <readstat_parse_sav+0x78c>
   14d9c:	vldr	d0, [r6]
   14da0:	bl	4558 <byteswap_double@plt>
   14da4:	vstr	d0, [r6]
   14da8:	ldr	r0, [r6]
   14dac:	ldr	r1, [r6, #4]
   14db0:	add	r3, sp, #280	; 0x118
   14db4:	add	ip, r4, #400	; 0x190
   14db8:	stmia	r3!, {r0, r1}
   14dbc:	add	r3, sp, #288	; 0x120
   14dc0:	add	r7, r7, #1
   14dc4:	ldrd	r0, [r3, #-8]
   14dc8:	ldrd	r2, [ip, #-8]
   14dcc:	add	r6, r6, #8
   14dd0:	cmp	r3, r1
   14dd4:	cmpeq	r2, r0
   14dd8:	ldrd	r2, [ip]
   14ddc:	vstreq	d8, [r6, #-8]
   14de0:	cmp	r1, r3
   14de4:	add	r3, r4, #416	; 0x1a0
   14de8:	cmpeq	r0, r2
   14dec:	ldrd	r2, [r3, #-8]
   14df0:	vstreq	d9, [r6, #-8]
   14df4:	cmp	r1, r3
   14df8:	cmpeq	r0, r2
   14dfc:	vstreq	d10, [r6, #-8]
   14e00:	b	14d84 <readstat_parse_sav+0x768>
   14e04:	add	r8, r5, #88	; 0x58
   14e08:	mov	r6, #0
   14e0c:	add	r3, sp, #280	; 0x118
   14e10:	str	r3, [sp, #24]
   14e14:	ldr	r3, [r5, #52]	; 0x34
   14e18:	cmp	r6, r3
   14e1c:	bge	14ce8 <readstat_parse_sav+0x6cc>
   14e20:	ldr	r3, [r7, #12]
   14e24:	ldr	r2, [r7, #20]
   14e28:	mov	r1, #8
   14e2c:	ldr	r0, [sp, #24]
   14e30:	blx	r3
   14e34:	cmp	r0, #7
   14e38:	bls	15ef0 <readstat_parse_sav+0x18d4>
   14e3c:	ldr	r3, [r4, #336]	; 0x150
   14e40:	mov	r0, r8
   14e44:	str	r3, [sp]
   14e48:	ldr	r2, [sp, #24]
   14e4c:	mov	r3, #8
   14e50:	mov	r1, #33	; 0x21
   14e54:	bl	427c <readstat_convert@plt>
   14e58:	add	r8, r8, #33	; 0x21
   14e5c:	subs	sl, r0, #0
   14e60:	bne	15f2c <readstat_parse_sav+0x1910>
   14e64:	add	r6, r6, #1
   14e68:	b	14e14 <readstat_parse_sav+0x7f8>
   14e6c:	ldr	r5, [r4, #36]	; 0x24
   14e70:	mov	r1, #4
   14e74:	add	r0, sp, #72	; 0x48
   14e78:	ldr	r3, [r5, #12]
   14e7c:	ldr	r2, [r5, #20]
   14e80:	blx	r3
   14e84:	cmp	r0, #3
   14e88:	bls	15f5c <readstat_parse_sav+0x1940>
   14e8c:	ldrb	r3, [r4, #436]	; 0x1b4
   14e90:	tst	r3, #1
   14e94:	beq	14ea4 <readstat_parse_sav+0x888>
   14e98:	ldr	r0, [sp, #72]	; 0x48
   14e9c:	bl	3dd8 <byteswap4@plt>
   14ea0:	str	r0, [sp, #72]	; 0x48
   14ea4:	ldr	r0, [sp, #72]	; 0x48
   14ea8:	cmp	r0, #0
   14eac:	streq	r0, [sp, #24]
   14eb0:	beq	14f90 <readstat_parse_sav+0x974>
   14eb4:	mov	r1, #72	; 0x48
   14eb8:	bl	400c <readstat_calloc@plt>
   14ebc:	subs	r3, r0, #0
   14ec0:	str	r3, [sp, #24]
   14ec4:	bne	15058 <readstat_parse_sav+0xa3c>
   14ec8:	mov	sl, #3
   14ecc:	b	1526c <readstat_parse_sav+0xc50>
   14ed0:	mov	r3, #0
   14ed4:	strb	r3, [sp, #536]	; 0x218
   14ed8:	mov	r1, #8
   14edc:	ldr	r3, [r5, #12]
   14ee0:	ldr	r2, [r5, #20]
   14ee4:	mov	r0, r7
   14ee8:	blx	r3
   14eec:	cmp	r0, #7
   14ef0:	ble	1502c <readstat_parse_sav+0xa10>
   14ef4:	ldr	r3, [r5, #12]
   14ef8:	ldr	r2, [r5, #20]
   14efc:	mov	r1, #1
   14f00:	ldr	r0, [sp, #32]
   14f04:	blx	r3
   14f08:	cmp	r0, #0
   14f0c:	ble	1502c <readstat_parse_sav+0xa10>
   14f10:	ldrb	sl, [sp, #536]	; 0x218
   14f14:	ldr	r3, [r5, #12]
   14f18:	ldr	r2, [r5, #20]
   14f1c:	add	sl, sl, #8
   14f20:	bic	sl, sl, #7
   14f24:	sub	sl, sl, #1
   14f28:	mov	r1, sl
   14f2c:	mov	r0, r8
   14f30:	blx	r3
   14f34:	cmp	sl, r0
   14f38:	bhi	1502c <readstat_parse_sav+0xa10>
   14f3c:	lsl	r1, sl, #2
   14f40:	add	r1, r1, #1
   14f44:	mov	r0, r1
   14f48:	str	r1, [sp, #36]	; 0x24
   14f4c:	bl	4270 <readstat_malloc@plt>
   14f50:	cmp	r0, #0
   14f54:	str	r0, [r7, #64]	; 0x40
   14f58:	beq	15050 <readstat_parse_sav+0xa34>
   14f5c:	ldr	r3, [r4, #336]	; 0x150
   14f60:	mov	r2, r8
   14f64:	str	r3, [sp]
   14f68:	ldr	r1, [sp, #36]	; 0x24
   14f6c:	mov	r3, sl
   14f70:	bl	427c <readstat_convert@plt>
   14f74:	add	r7, r7, #72	; 0x48
   14f78:	subs	sl, r0, #0
   14f7c:	bne	15030 <readstat_parse_sav+0xa14>
   14f80:	add	r6, r6, #1
   14f84:	ldr	r3, [sp, #72]	; 0x48
   14f88:	cmp	r6, r3
   14f8c:	bcc	14ed0 <readstat_parse_sav+0x8b4>
   14f90:	ldr	r3, [r5, #12]
   14f94:	ldr	r2, [r5, #20]
   14f98:	mov	r1, #4
   14f9c:	add	r0, sp, #88	; 0x58
   14fa0:	blx	r3
   14fa4:	cmp	r0, #3
   14fa8:	bls	15f48 <readstat_parse_sav+0x192c>
   14fac:	ldrb	r3, [r4, #436]	; 0x1b4
   14fb0:	tst	r3, #1
   14fb4:	beq	14fc4 <readstat_parse_sav+0x9a8>
   14fb8:	ldr	r0, [sp, #88]	; 0x58
   14fbc:	bl	3dd8 <byteswap4@plt>
   14fc0:	str	r0, [sp, #88]	; 0x58
   14fc4:	ldr	r1, [sp, #88]	; 0x58
   14fc8:	cmp	r1, #4
   14fcc:	movne	sl, #5
   14fd0:	bne	15f4c <readstat_parse_sav+0x1930>
   14fd4:	ldr	r3, [r5, #12]
   14fd8:	ldr	r2, [r5, #20]
   14fdc:	add	r0, sp, #76	; 0x4c
   14fe0:	blx	r3
   14fe4:	cmp	r0, #3
   14fe8:	bls	15f48 <readstat_parse_sav+0x192c>
   14fec:	ldrb	r3, [r4, #436]	; 0x1b4
   14ff0:	tst	r3, #1
   14ff4:	beq	15004 <readstat_parse_sav+0x9e8>
   14ff8:	ldr	r0, [sp, #76]	; 0x4c
   14ffc:	bl	3dd8 <byteswap4@plt>
   15000:	str	r0, [sp, #76]	; 0x4c
   15004:	ldr	r0, [sp, #76]	; 0x4c
   15008:	cmp	r0, #0
   1500c:	beq	15070 <readstat_parse_sav+0xa54>
   15010:	lsl	r0, r0, #2
   15014:	bl	4270 <readstat_malloc@plt>
   15018:	subs	r3, r0, #0
   1501c:	str	r3, [sp, #32]
   15020:	bne	15074 <readstat_parse_sav+0xa58>
   15024:	mov	sl, #3
   15028:	b	15f4c <readstat_parse_sav+0x1930>
   1502c:	mov	sl, #2
   15030:	ldr	r6, [sp, #24]
   15034:	mov	r5, #0
   15038:	ldr	r3, [sp, #72]	; 0x48
   1503c:	cmp	r5, r3
   15040:	bcc	152f0 <readstat_parse_sav+0xcd4>
   15044:	ldr	r0, [sp, #24]
   15048:	bl	3f04 <free@plt>
   1504c:	b	15264 <readstat_parse_sav+0xc48>
   15050:	mov	sl, #3
   15054:	b	15030 <readstat_parse_sav+0xa14>
   15058:	add	r3, sp, #536	; 0x218
   1505c:	ldr	r7, [sp, #24]
   15060:	mov	r6, #0
   15064:	str	r3, [sp, #32]
   15068:	add	r8, sp, #280	; 0x118
   1506c:	b	14f84 <readstat_parse_sav+0x968>
   15070:	str	r0, [sp, #32]
   15074:	ldr	r1, [sp, #76]	; 0x4c
   15078:	ldr	r3, [r5, #12]
   1507c:	ldr	r2, [r5, #20]
   15080:	lsl	r1, r1, #2
   15084:	ldr	r0, [sp, #32]
   15088:	blx	r3
   1508c:	ldr	r3, [sp, #76]	; 0x4c
   15090:	cmp	r0, r3, lsl #2
   15094:	movcc	sl, #2
   15098:	bcc	15244 <readstat_parse_sav+0xc28>
   1509c:	add	r6, sp, #536	; 0x218
   150a0:	mov	r7, #4
   150a4:	mov	r5, #0
   150a8:	str	r5, [sp, #36]	; 0x24
   150ac:	ldr	r3, [sp, #76]	; 0x4c
   150b0:	cmp	r5, r3
   150b4:	ldrcs	r6, [sp, #24]
   150b8:	movcs	r8, #0
   150bc:	movcs	r5, r6
   150c0:	addcs	r7, r4, #400	; 0x190
   150c4:	bcs	151f0 <readstat_parse_sav+0xbd4>
   150c8:	ldr	r3, [sp, #32]
   150cc:	ldr	r0, [r3, r5, lsl #2]
   150d0:	str	r0, [sp, #536]	; 0x218
   150d4:	ldrb	r3, [r4, #436]	; 0x1b4
   150d8:	tst	r3, #1
   150dc:	beq	150e8 <readstat_parse_sav+0xacc>
   150e0:	bl	3dd8 <byteswap4@plt>
   150e4:	str	r0, [sp, #536]	; 0x218
   150e8:	ldr	r3, [sp, #536]	; 0x218
   150ec:	ldr	r2, [sp, #52]	; 0x34
   150f0:	sub	r3, r3, #1
   150f4:	str	r3, [sp, #536]	; 0x218
   150f8:	ldr	r3, [pc, #-1540]	; 14afc <readstat_parse_sav+0x4e0>
   150fc:	mov	r0, r6
   15100:	add	r5, r5, #1
   15104:	ldr	r3, [r2, r3]
   15108:	str	r3, [sp]
   1510c:	mov	r3, r7
   15110:	ldr	r2, [r4, #340]	; 0x154
   15114:	ldr	r1, [r4, #44]	; 0x2c
   15118:	bl	42f4 <bsearch@plt>
   1511c:	cmp	r0, #0
   15120:	ldrne	r3, [r0]
   15124:	ldrne	r2, [r4, #368]	; 0x170
   15128:	strne	r2, [r3, #4]
   1512c:	ldrne	r3, [r3]
   15130:	strne	r3, [sp, #36]	; 0x24
   15134:	b	150ac <readstat_parse_sav+0xa90>
   15138:	ldr	r3, [sp, #36]	; 0x24
   1513c:	vstr	d11, [sp, #536]	; 0x218
   15140:	cmp	r3, #5
   15144:	str	r3, [r5, #56]	; 0x38
   15148:	bne	15274 <readstat_parse_sav+0xc58>
   1514c:	ldr	r0, [r5]
   15150:	ldr	r1, [r5, #4]
   15154:	add	r3, sp, #536	; 0x218
   15158:	stmia	r3!, {r0, r1}
   1515c:	ldrb	r3, [r4, #436]	; 0x1b4
   15160:	tst	r3, #1
   15164:	beq	15174 <readstat_parse_sav+0xb58>
   15168:	vldr	d0, [sp, #536]	; 0x218
   1516c:	bl	4558 <byteswap_double@plt>
   15170:	vstr	d0, [sp, #536]	; 0x218
   15174:	vldr	d7, [sp, #536]	; 0x218
   15178:	vstr	d7, [r5, #48]	; 0x30
   1517c:	vstr	d7, [sp, #40]	; 0x28
   15180:	ldrd	r0, [sp, #40]	; 0x28
   15184:	vldr	d7, [sp, #40]	; 0x28
   15188:	ldrd	r2, [r7, #-8]
   1518c:	cmp	r1, r3
   15190:	cmpeq	r0, r2
   15194:	vcmp.f64	d7, d7
   15198:	ldrbeq	r3, [r5, #61]	; 0x3d
   1519c:	orreq	r3, r3, #1
   151a0:	strbeq	r3, [r5, #61]	; 0x3d
   151a4:	ldrd	r2, [r7]
   151a8:	cmp	r1, r3
   151ac:	cmpeq	r0, r2
   151b0:	ldrbeq	r3, [r5, #61]	; 0x3d
   151b4:	orreq	r3, r3, #1
   151b8:	strbeq	r3, [r5, #61]	; 0x3d
   151bc:	add	r3, r4, #416	; 0x1a0
   151c0:	ldrd	r2, [r3, #-8]
   151c4:	cmp	r1, r3
   151c8:	cmpeq	r0, r2
   151cc:	ldrbeq	r3, [r5, #61]	; 0x3d
   151d0:	orreq	r3, r3, #1
   151d4:	strbeq	r3, [r5, #61]	; 0x3d
   151d8:	vmrs	APSR_nzcv, fpscr
   151dc:	ldrbvs	r3, [r5, #61]	; 0x3d
   151e0:	orrvs	r3, r3, #1
   151e4:	strbvs	r3, [r5, #61]	; 0x3d
   151e8:	add	r8, r8, #1
   151ec:	add	r5, r5, #72	; 0x48
   151f0:	ldr	r3, [sp, #72]	; 0x48
   151f4:	cmp	r8, r3
   151f8:	bcc	15138 <readstat_parse_sav+0xb1c>
   151fc:	mov	sl, fp
   15200:	ldr	r3, [r4, #20]
   15204:	cmp	r3, #0
   15208:	beq	15238 <readstat_parse_sav+0xc1c>
   1520c:	ldr	r2, [pc, #-1812]	; 14b00 <readstat_parse_sav+0x4e4>
   15210:	add	r5, sp, #536	; 0x218
   15214:	ldr	r3, [r4, #368]	; 0x170
   15218:	add	r2, pc, r2
   1521c:	mov	r1, #256	; 0x100
   15220:	mov	r0, r5
   15224:	ldr	r8, [sp, #72]	; 0x48
   15228:	bl	42c4 <snprintf@plt>
   1522c:	mov	r7, #0
   15230:	cmp	r8, r7
   15234:	bgt	152ac <readstat_parse_sav+0xc90>
   15238:	ldr	r3, [r4, #368]	; 0x170
   1523c:	add	r3, r3, #1
   15240:	str	r3, [r4, #368]	; 0x170
   15244:	ldr	r3, [sp, #32]
   15248:	cmp	r3, #0
   1524c:	beq	15258 <readstat_parse_sav+0xc3c>
   15250:	mov	r0, r3
   15254:	bl	3f04 <free@plt>
   15258:	ldr	r3, [sp, #24]
   1525c:	cmp	r3, #0
   15260:	bne	15030 <readstat_parse_sav+0xa14>
   15264:	cmp	sl, #0
   15268:	beq	14804 <readstat_parse_sav+0x1e8>
   1526c:	mov	fp, sl
   15270:	b	148a0 <readstat_parse_sav+0x284>
   15274:	add	r3, r5, #8
   15278:	str	r3, [sp, #40]	; 0x28
   1527c:	ldr	r3, [r4, #336]	; 0x150
   15280:	mov	r2, r5
   15284:	str	r3, [sp]
   15288:	mov	r3, #8
   1528c:	mov	r1, #33	; 0x21
   15290:	add	r0, r5, r3
   15294:	bl	427c <readstat_convert@plt>
   15298:	subs	sl, r0, #0
   1529c:	bne	15200 <readstat_parse_sav+0xbe4>
   152a0:	ldr	r3, [sp, #40]	; 0x28
   152a4:	str	r3, [r5, #48]	; 0x30
   152a8:	b	151e8 <readstat_parse_sav+0xbcc>
   152ac:	ldr	r3, [r4, #40]	; 0x28
   152b0:	str	r3, [sp, #12]
   152b4:	ldr	r3, [r6, #64]	; 0x40
   152b8:	str	r3, [sp, #8]
   152bc:	add	r3, r6, #56	; 0x38
   152c0:	ldm	r3, {r0, r1}
   152c4:	add	r3, r6, #48	; 0x30
   152c8:	add	r6, r6, #72	; 0x48
   152cc:	stm	sp, {r0, r1}
   152d0:	mov	r0, r5
   152d4:	ldm	r3, {r2, r3}
   152d8:	ldr	r1, [r4, #20]
   152dc:	blx	r1
   152e0:	cmp	r0, #0
   152e4:	bne	15238 <readstat_parse_sav+0xc1c>
   152e8:	add	r7, r7, #1
   152ec:	b	15230 <readstat_parse_sav+0xc14>
   152f0:	ldr	r0, [r6, #64]	; 0x40
   152f4:	cmp	r0, #0
   152f8:	beq	15300 <readstat_parse_sav+0xce4>
   152fc:	bl	3f04 <free@plt>
   15300:	add	r5, r5, #1
   15304:	add	r6, r6, #72	; 0x48
   15308:	b	15038 <readstat_parse_sav+0xa1c>
   1530c:	ldr	r3, [r4, #4]
   15310:	cmp	r3, #0
   15314:	bne	15330 <readstat_parse_sav+0xd14>
   15318:	mov	r0, r4
   1531c:	bl	13de0 <sav_skip_document_record>
   15320:	cmp	r0, #0
   15324:	beq	14804 <readstat_parse_sav+0x1e8>
   15328:	mov	fp, r0
   1532c:	b	148a0 <readstat_parse_sav+0x284>
   15330:	ldr	r6, [r4, #36]	; 0x24
   15334:	mov	r1, #4
   15338:	add	r0, sp, #88	; 0x58
   1533c:	ldr	r3, [r6, #12]
   15340:	ldr	r2, [r6, #20]
   15344:	blx	r3
   15348:	cmp	r0, #3
   1534c:	bls	15f00 <readstat_parse_sav+0x18e4>
   15350:	ldrb	r3, [r4, #436]	; 0x1b4
   15354:	tst	r3, #1
   15358:	beq	15368 <readstat_parse_sav+0xd4c>
   1535c:	ldr	r0, [sp, #88]	; 0x58
   15360:	bl	3dd8 <byteswap4@plt>
   15364:	str	r0, [sp, #88]	; 0x58
   15368:	ldr	sl, [pc, #-2156]	; 14b04 <readstat_parse_sav+0x4e8>
   1536c:	mov	r5, #0
   15370:	add	r7, sp, #280	; 0x118
   15374:	add	r8, sp, #536	; 0x218
   15378:	ldr	r3, [sp, #88]	; 0x58
   1537c:	cmp	r5, r3
   15380:	bcs	14804 <readstat_parse_sav+0x1e8>
   15384:	ldr	r3, [r6, #12]
   15388:	ldr	r2, [r6, #20]
   1538c:	mov	r1, #80	; 0x50
   15390:	mov	r0, r7
   15394:	blx	r3
   15398:	cmp	r0, #79	; 0x4f
   1539c:	ble	15f00 <readstat_parse_sav+0x18e4>
   153a0:	ldr	r3, [r4, #336]	; 0x150
   153a4:	mov	r2, r7
   153a8:	str	r3, [sp]
   153ac:	mov	r1, sl
   153b0:	mov	r3, #80	; 0x50
   153b4:	mov	r0, r8
   153b8:	bl	427c <readstat_convert@plt>
   153bc:	cmp	r0, #0
   153c0:	bne	15328 <readstat_parse_sav+0xd0c>
   153c4:	ldr	r3, [r4, #4]
   153c8:	ldr	r2, [r4, #40]	; 0x28
   153cc:	mov	r1, r8
   153d0:	mov	r0, r5
   153d4:	blx	r3
   153d8:	cmp	r0, #0
   153dc:	bne	15f08 <readstat_parse_sav+0x18ec>
   153e0:	add	r5, r5, #1
   153e4:	b	15378 <readstat_parse_sav+0xd5c>
   153e8:	ldr	r3, [sp, #28]
   153ec:	ldr	r2, [sp, #28]
   153f0:	add	r5, sp, #76	; 0x4c
   153f4:	ldr	r3, [r3, #12]
   153f8:	ldr	r2, [r2, #20]
   153fc:	mov	r1, #12
   15400:	mov	r0, r5
   15404:	blx	r3
   15408:	cmp	r0, #11
   1540c:	bls	15f6c <readstat_parse_sav+0x1950>
   15410:	ldrb	r3, [r4, #436]	; 0x1b4
   15414:	tst	r3, #1
   15418:	bne	154d0 <readstat_parse_sav+0xeb4>
   1541c:	ldr	r7, [sp, #80]	; 0x50
   15420:	ldr	r6, [sp, #84]	; 0x54
   15424:	ldr	r3, [sp, #48]	; 0x30
   15428:	ldr	r8, [sp, #76]	; 0x4c
   1542c:	mul	r5, r6, r7
   15430:	cmp	r5, r3
   15434:	bls	154f0 <readstat_parse_sav+0xed4>
   15438:	mov	r0, r9
   1543c:	mov	r1, r5
   15440:	bl	4330 <readstat_realloc@plt>
   15444:	subs	r9, r0, #0
   15448:	beq	15f40 <readstat_parse_sav+0x1924>
   1544c:	str	r5, [sp, #48]	; 0x30
   15450:	ldr	r3, [sp, #28]
   15454:	ldr	r2, [sp, #28]
   15458:	mov	r1, r5
   1545c:	ldr	r3, [r3, #12]
   15460:	ldr	r2, [r2, #20]
   15464:	mov	r0, r9
   15468:	blx	r3
   1546c:	cmp	r5, r0
   15470:	bhi	14860 <readstat_parse_sav+0x244>
   15474:	sub	r8, r8, #4
   15478:	cmp	r8, #18
   1547c:	addls	pc, pc, r8, lsl #2
   15480:	b	14804 <readstat_parse_sav+0x1e8>
   15484:	b	154fc <readstat_parse_sav+0xee0>
   15488:	b	14804 <readstat_parse_sav+0x1e8>
   1548c:	b	14804 <readstat_parse_sav+0x1e8>
   15490:	b	14804 <readstat_parse_sav+0x1e8>
   15494:	b	14804 <readstat_parse_sav+0x1e8>
   15498:	b	14804 <readstat_parse_sav+0x1e8>
   1549c:	b	14804 <readstat_parse_sav+0x1e8>
   154a0:	b	1561c <readstat_parse_sav+0x1000>
   154a4:	b	14804 <readstat_parse_sav+0x1e8>
   154a8:	b	15680 <readstat_parse_sav+0x1064>
   154ac:	b	15694 <readstat_parse_sav+0x1078>
   154b0:	b	14804 <readstat_parse_sav+0x1e8>
   154b4:	b	14804 <readstat_parse_sav+0x1e8>
   154b8:	b	14804 <readstat_parse_sav+0x1e8>
   154bc:	b	14804 <readstat_parse_sav+0x1e8>
   154c0:	b	14804 <readstat_parse_sav+0x1e8>
   154c4:	b	14804 <readstat_parse_sav+0x1e8>
   154c8:	b	156a8 <readstat_parse_sav+0x108c>
   154cc:	b	159a8 <readstat_parse_sav+0x138c>
   154d0:	mov	r6, #0
   154d4:	ldr	r0, [r5, r6, lsl #2]
   154d8:	bl	3dd8 <byteswap4@plt>
   154dc:	str	r0, [r5, r6, lsl #2]
   154e0:	add	r6, r6, #1
   154e4:	cmp	r6, #3
   154e8:	bne	154d4 <readstat_parse_sav+0xeb8>
   154ec:	b	1541c <readstat_parse_sav+0xe00>
   154f0:	cmp	r5, #0
   154f4:	bne	15450 <readstat_parse_sav+0xe34>
   154f8:	b	14860 <readstat_parse_sav+0x244>
   154fc:	cmp	r6, #3
   15500:	cmpeq	r7, #8
   15504:	bne	14860 <readstat_parse_sav+0x244>
   15508:	ldrb	r3, [r9, #1]
   1550c:	ldrb	r0, [r9]
   15510:	ldrb	r1, [r9, #4]
   15514:	ldrb	r8, [r9, #8]
   15518:	orr	r0, r0, r3, lsl #8
   1551c:	ldrb	r3, [r9, #2]
   15520:	ldrb	r7, [r9, #12]
   15524:	ldrb	r6, [r9, #16]
   15528:	ldrb	r5, [r9, #20]
   1552c:	orr	r0, r0, r3, lsl #16
   15530:	ldrb	r3, [r9, #3]
   15534:	orr	r0, r0, r3, lsl #24
   15538:	ldrb	r3, [r9, #5]
   1553c:	orr	r1, r1, r3, lsl #8
   15540:	ldrb	r3, [r9, #6]
   15544:	orr	r1, r1, r3, lsl #16
   15548:	ldrb	r3, [r9, #7]
   1554c:	orr	r1, r1, r3, lsl #24
   15550:	ldrb	r3, [r9, #9]
   15554:	orr	r8, r8, r3, lsl #8
   15558:	ldrb	r3, [r9, #10]
   1555c:	orr	r8, r8, r3, lsl #16
   15560:	ldrb	r3, [r9, #11]
   15564:	orr	r8, r8, r3, lsl #24
   15568:	ldrb	r3, [r9, #13]
   1556c:	orr	r7, r7, r3, lsl #8
   15570:	ldrb	r3, [r9, #14]
   15574:	orr	r7, r7, r3, lsl #16
   15578:	ldrb	r3, [r9, #15]
   1557c:	orr	r7, r7, r3, lsl #24
   15580:	ldrb	r3, [r9, #17]
   15584:	orr	r6, r6, r3, lsl #8
   15588:	ldrb	r3, [r9, #18]
   1558c:	orr	r6, r6, r3, lsl #16
   15590:	ldrb	r3, [r9, #19]
   15594:	orr	r6, r6, r3, lsl #24
   15598:	ldrb	r3, [r9, #21]
   1559c:	orr	r5, r5, r3, lsl #8
   155a0:	ldrb	r3, [r9, #22]
   155a4:	orr	r5, r5, r3, lsl #16
   155a8:	ldrb	r3, [r9, #23]
   155ac:	orr	r5, r5, r3, lsl #24
   155b0:	ldrb	r3, [r4, #436]	; 0x1b4
   155b4:	tst	r3, #1
   155b8:	beq	155c0 <readstat_parse_sav+0xfa4>
   155bc:	bl	3dc0 <byteswap8@plt>
   155c0:	ldrb	r3, [r4, #436]	; 0x1b4
   155c4:	add	sl, r4, #400	; 0x190
   155c8:	tst	r3, #1
   155cc:	stmdb	sl, {r0, r1}
   155d0:	beq	155e8 <readstat_parse_sav+0xfcc>
   155d4:	mov	r0, r8
   155d8:	mov	r1, r7
   155dc:	bl	3dc0 <byteswap8@plt>
   155e0:	mov	r8, r0
   155e4:	mov	r7, r1
   155e8:	ldrb	r3, [r4, #436]	; 0x1b4
   155ec:	str	r8, [r4, #408]	; 0x198
   155f0:	str	r7, [r4, #412]	; 0x19c
   155f4:	tst	r3, #1
   155f8:	beq	15610 <readstat_parse_sav+0xff4>
   155fc:	mov	r0, r6
   15600:	mov	r1, r5
   15604:	bl	3dc0 <byteswap8@plt>
   15608:	mov	r6, r0
   1560c:	mov	r5, r1
   15610:	str	r6, [sl]
   15614:	str	r5, [sl, #4]
   15618:	b	14804 <readstat_parse_sav+0x1e8>
   1561c:	cmp	r7, #4
   15620:	bne	14860 <readstat_parse_sav+0x244>
   15624:	lsl	r1, r6, #2
   15628:	ldr	r0, [r4, #328]	; 0x148
   1562c:	bl	4330 <readstat_realloc@plt>
   15630:	adds	r5, r6, #0
   15634:	movne	r5, #1
   15638:	cmp	r0, #0
   1563c:	movne	r5, #0
   15640:	cmp	r5, #0
   15644:	str	r0, [r4, #328]	; 0x148
   15648:	bne	15f64 <readstat_parse_sav+0x1948>
   1564c:	str	r6, [r4, #332]	; 0x14c
   15650:	cmp	r5, r6
   15654:	beq	14804 <readstat_parse_sav+0x1e8>
   15658:	ldrb	r3, [r4, #436]	; 0x1b4
   1565c:	lsl	r7, r5, #2
   15660:	ldr	r8, [r4, #328]	; 0x148
   15664:	tst	r3, #1
   15668:	ldr	r0, [r9, r5, lsl #2]
   1566c:	beq	15674 <readstat_parse_sav+0x1058>
   15670:	bl	3dd8 <byteswap4@plt>
   15674:	str	r0, [r8, r7]
   15678:	add	r5, r5, #1
   1567c:	b	15650 <readstat_parse_sav+0x1034>
   15680:	mov	r2, r4
   15684:	mov	r1, r6
   15688:	mov	r0, r9
   1568c:	bl	4240 <sav_parse_long_variable_names_record@plt>
   15690:	b	15320 <readstat_parse_sav+0xd04>
   15694:	mov	r2, r4
   15698:	mov	r1, r6
   1569c:	mov	r0, r9
   156a0:	bl	4324 <sav_parse_very_long_string_record@plt>
   156a4:	b	15320 <readstat_parse_sav+0xd04>
   156a8:	ldr	r3, [r4, #20]
   156ac:	cmp	r3, #0
   156b0:	beq	14804 <readstat_parse_sav+0x1e8>
   156b4:	cmp	r7, #1
   156b8:	bne	14860 <readstat_parse_sav+0x244>
   156bc:	ldr	r3, [pc, #-3004]	; 14b08 <readstat_parse_sav+0x4ec>
   156c0:	add	r5, r9, r5
   156c4:	add	r3, pc, r3
   156c8:	mov	r6, #0
   156cc:	str	r3, [sp, #60]	; 0x3c
   156d0:	add	r3, sp, #88	; 0x58
   156d4:	str	r9, [sp, #72]	; 0x48
   156d8:	str	r6, [sp, #24]
   156dc:	str	r3, [sp, #36]	; 0x24
   156e0:	ldr	r7, [sp, #72]	; 0x48
   156e4:	cmp	r5, r7
   156e8:	bhi	156fc <readstat_parse_sav+0x10e0>
   156ec:	moveq	sl, fp
   156f0:	beq	15988 <readstat_parse_sav+0x136c>
   156f4:	mov	sl, #5
   156f8:	b	15988 <readstat_parse_sav+0x136c>
   156fc:	mov	r2, #256	; 0x100
   15700:	mov	r1, #0
   15704:	add	r0, sp, #280	; 0x118
   15708:	add	r8, sp, #536	; 0x218
   1570c:	bl	42e8 <memset@plt>
   15710:	mov	r3, r4
   15714:	sub	r2, r5, r7
   15718:	add	r1, sp, #72	; 0x48
   1571c:	mov	r0, r8
   15720:	bl	55fc <sav_read_pascal_string.constprop.4>
   15724:	subs	sl, r0, #0
   15728:	bne	15988 <readstat_parse_sav+0x136c>
   1572c:	ldr	r2, [r4, #340]	; 0x154
   15730:	mov	r7, sl
   15734:	cmp	r7, r2
   15738:	bcs	15780 <readstat_parse_sav+0x1164>
   1573c:	ldr	r3, [r4, #44]	; 0x2c
   15740:	mov	r0, r8
   15744:	str	r2, [sp, #32]
   15748:	ldr	sl, [r3, r7, lsl #2]
   1574c:	add	r1, sl, #196	; 0xc4
   15750:	bl	3e44 <strcmp@plt>
   15754:	ldr	r2, [sp, #32]
   15758:	cmp	r0, #0
   1575c:	bne	15964 <readstat_parse_sav+0x1348>
   15760:	ldr	r3, [r4, #368]	; 0x170
   15764:	mov	r1, #256	; 0x100
   15768:	add	r2, r3, #1
   1576c:	str	r2, [r4, #368]	; 0x170
   15770:	add	r0, sp, #280	; 0x118
   15774:	str	r3, [sl, #4]
   15778:	ldr	r2, [sp, #60]	; 0x3c
   1577c:	bl	42c4 <snprintf@plt>
   15780:	ldrb	r3, [sp, #280]	; 0x118
   15784:	cmp	r3, #0
   15788:	beq	156f4 <readstat_parse_sav+0x10d8>
   1578c:	ldr	r3, [sp, #72]	; 0x48
   15790:	add	r2, r3, #4
   15794:	str	r2, [sp, #72]	; 0x48
   15798:	add	r2, r3, #8
   1579c:	cmp	r5, r2
   157a0:	bcc	156f4 <readstat_parse_sav+0x10d8>
   157a4:	ldr	r8, [r3, #4]
   157a8:	ldrb	r3, [r4, #436]	; 0x1b4
   157ac:	tst	r3, #1
   157b0:	beq	157c0 <readstat_parse_sav+0x11a4>
   157b4:	mov	r0, r8
   157b8:	bl	3dd8 <byteswap4@plt>
   157bc:	mov	r8, r0
   157c0:	ldr	r3, [sp, #72]	; 0x48
   157c4:	add	r3, r3, #4
   157c8:	str	r3, [sp, #72]	; 0x48
   157cc:	mov	r3, #0
   157d0:	str	r3, [sp, #32]
   157d4:	add	r3, sp, #280	; 0x118
   157d8:	str	r3, [sp, #40]	; 0x28
   157dc:	add	r3, sp, #96	; 0x60
   157e0:	str	r3, [sp, #56]	; 0x38
   157e4:	ldr	r3, [sp, #32]
   157e8:	cmp	r3, r8
   157ec:	beq	156e0 <readstat_parse_sav+0x10c4>
   157f0:	ldr	r3, [sp, #72]	; 0x48
   157f4:	add	r2, r3, #4
   157f8:	cmp	r5, r2
   157fc:	bcc	156f4 <readstat_parse_sav+0x10d8>
   15800:	ldr	r7, [r3]
   15804:	ldrb	r3, [r4, #436]	; 0x1b4
   15808:	tst	r3, #1
   1580c:	beq	1581c <readstat_parse_sav+0x1200>
   15810:	mov	r0, r7
   15814:	bl	3dd8 <byteswap4@plt>
   15818:	mov	r7, r0
   1581c:	ldr	r3, [sp, #72]	; 0x48
   15820:	lsl	sl, r7, #2
   15824:	add	sl, sl, #1
   15828:	add	r3, r3, #4
   1582c:	mov	r1, sl
   15830:	ldr	r0, [sp, #24]
   15834:	str	r3, [sp, #72]	; 0x48
   15838:	bl	4330 <readstat_realloc@plt>
   1583c:	subs	r3, r0, #0
   15840:	str	r3, [sp, #24]
   15844:	beq	15970 <readstat_parse_sav+0x1354>
   15848:	ldr	r2, [sp, #72]	; 0x48
   1584c:	add	r3, r2, r7
   15850:	cmp	r5, r3
   15854:	bcc	156f4 <readstat_parse_sav+0x10d8>
   15858:	ldr	r3, [r4, #336]	; 0x150
   1585c:	mov	r1, sl
   15860:	str	r3, [sp]
   15864:	mov	r3, r7
   15868:	bl	427c <readstat_convert@plt>
   1586c:	subs	sl, r0, #0
   15870:	bne	15988 <readstat_parse_sav+0x136c>
   15874:	ldr	r3, [sp, #72]	; 0x48
   15878:	add	r7, r3, r7
   1587c:	add	r3, r7, #4
   15880:	cmp	r5, r3
   15884:	str	r7, [sp, #72]	; 0x48
   15888:	bcc	156f4 <readstat_parse_sav+0x10d8>
   1588c:	ldrb	r3, [r4, #436]	; 0x1b4
   15890:	ldr	r7, [r7]
   15894:	tst	r3, #1
   15898:	beq	158a8 <readstat_parse_sav+0x128c>
   1589c:	mov	r0, r7
   158a0:	bl	3dd8 <byteswap4@plt>
   158a4:	mov	r7, r0
   158a8:	ldr	r3, [sp, #72]	; 0x48
   158ac:	lsl	sl, r7, #2
   158b0:	add	sl, sl, #1
   158b4:	add	r3, r3, #4
   158b8:	mov	r0, r6
   158bc:	mov	r1, sl
   158c0:	str	r3, [sp, #72]	; 0x48
   158c4:	bl	4330 <readstat_realloc@plt>
   158c8:	subs	r6, r0, #0
   158cc:	beq	15984 <readstat_parse_sav+0x1368>
   158d0:	ldr	r2, [sp, #72]	; 0x48
   158d4:	add	r3, r2, r7
   158d8:	cmp	r5, r3
   158dc:	bcc	156f4 <readstat_parse_sav+0x10d8>
   158e0:	ldr	r3, [r4, #336]	; 0x150
   158e4:	mov	r1, sl
   158e8:	str	r3, [sp]
   158ec:	mov	r3, r7
   158f0:	bl	427c <readstat_convert@plt>
   158f4:	subs	sl, r0, #0
   158f8:	bne	15988 <readstat_parse_sav+0x136c>
   158fc:	ldr	r3, [sp, #72]	; 0x48
   15900:	mov	r2, #16
   15904:	add	r7, r3, r7
   15908:	mov	r1, sl
   1590c:	ldr	r0, [sp, #36]	; 0x24
   15910:	str	r7, [sp, #72]	; 0x48
   15914:	bl	42e8 <memset@plt>
   15918:	ldr	r3, [sp, #24]
   1591c:	str	r3, [sp, #88]	; 0x58
   15920:	ldr	r3, [r4, #40]	; 0x28
   15924:	str	r6, [sp, #8]
   15928:	str	r3, [sp, #12]
   1592c:	ldr	r3, [sp, #56]	; 0x38
   15930:	ldm	r3, {r0, r1}
   15934:	ldr	r3, [sp, #36]	; 0x24
   15938:	stm	sp, {r0, r1}
   1593c:	ldr	r0, [sp, #40]	; 0x28
   15940:	ldm	r3, {r2, r3}
   15944:	ldr	r1, [r4, #20]
   15948:	blx	r1
   1594c:	cmp	r0, #0
   15950:	bne	159a0 <readstat_parse_sav+0x1384>
   15954:	ldr	r3, [sp, #32]
   15958:	add	r3, r3, #1
   1595c:	str	r3, [sp, #32]
   15960:	b	157e4 <readstat_parse_sav+0x11c8>
   15964:	ldr	r3, [sl, #48]	; 0x30
   15968:	add	r7, r7, r3
   1596c:	b	15734 <readstat_parse_sav+0x1118>
   15970:	mov	sl, #3
   15974:	cmp	r6, #0
   15978:	beq	15264 <readstat_parse_sav+0xc48>
   1597c:	mov	r0, r6
   15980:	b	15048 <readstat_parse_sav+0xa2c>
   15984:	mov	sl, #3
   15988:	ldr	r3, [sp, #24]
   1598c:	cmp	r3, #0
   15990:	beq	15974 <readstat_parse_sav+0x1358>
   15994:	mov	r0, r3
   15998:	bl	3f04 <free@plt>
   1599c:	b	15974 <readstat_parse_sav+0x1358>
   159a0:	mov	sl, #4
   159a4:	b	15988 <readstat_parse_sav+0x136c>
   159a8:	cmp	r7, #1
   159ac:	bne	15aac <readstat_parse_sav+0x1490>
   159b0:	add	r3, sp, #864	; 0x360
   159b4:	add	r5, r9, r5
   159b8:	str	r9, [r3, #-584]!	; 0xfffffdb8
   159bc:	str	r3, [sp, #32]
   159c0:	add	r3, sp, #536	; 0x218
   159c4:	str	r3, [sp, #36]	; 0x24
   159c8:	ldr	r2, [sp, #280]	; 0x118
   159cc:	cmp	r5, r2
   159d0:	bhi	159dc <readstat_parse_sav+0x13c0>
   159d4:	bne	15aac <readstat_parse_sav+0x1490>
   159d8:	b	14804 <readstat_parse_sav+0x1e8>
   159dc:	mov	r3, r4
   159e0:	sub	r2, r5, r2
   159e4:	ldr	r1, [sp, #32]
   159e8:	ldr	r0, [sp, #36]	; 0x24
   159ec:	bl	55fc <sav_read_pascal_string.constprop.4>
   159f0:	cmp	r0, #0
   159f4:	bne	15328 <readstat_parse_sav+0xd0c>
   159f8:	ldr	r8, [sp, #280]	; 0x118
   159fc:	cmp	r5, r8
   15a00:	beq	15aac <readstat_parse_sav+0x1490>
   15a04:	add	r3, r8, #1
   15a08:	str	r3, [sp, #280]	; 0x118
   15a0c:	ldrb	sl, [r8]
   15a10:	sub	r3, sl, #1
   15a14:	cmp	r3, #2
   15a18:	bhi	15aac <readstat_parse_sav+0x1490>
   15a1c:	ldr	r2, [r4, #340]	; 0x154
   15a20:	mov	r7, r0
   15a24:	cmp	r7, r2
   15a28:	bcs	15aa0 <readstat_parse_sav+0x1484>
   15a2c:	ldr	r3, [r4, #44]	; 0x2c
   15a30:	ldr	r0, [sp, #36]	; 0x24
   15a34:	str	r2, [sp, #24]
   15a38:	ldr	r6, [r3, r7, lsl #2]
   15a3c:	add	r1, r6, #196	; 0xc4
   15a40:	bl	3e44 <strcmp@plt>
   15a44:	ldr	r2, [sp, #24]
   15a48:	cmp	r0, #0
   15a4c:	bne	15b00 <readstat_parse_sav+0x14e4>
   15a50:	add	r3, r8, #5
   15a54:	cmp	r5, r3
   15a58:	str	sl, [r6, #52]	; 0x34
   15a5c:	bcc	15aac <readstat_parse_sav+0x1490>
   15a60:	ldrb	r3, [r4, #436]	; 0x1b4
   15a64:	ldr	r8, [r8, #1]
   15a68:	tst	r3, #1
   15a6c:	beq	15a7c <readstat_parse_sav+0x1460>
   15a70:	mov	r0, r8
   15a74:	bl	3dd8 <byteswap4@plt>
   15a78:	mov	r8, r0
   15a7c:	ldr	r3, [sp, #280]	; 0x118
   15a80:	add	r6, r6, #88	; 0x58
   15a84:	add	r3, r3, #4
   15a88:	str	r3, [sp, #280]	; 0x118
   15a8c:	mov	r3, #0
   15a90:	str	r3, [sp, #24]
   15a94:	ldr	r3, [sp, #24]
   15a98:	cmp	r3, sl
   15a9c:	bcc	15ab4 <readstat_parse_sav+0x1498>
   15aa0:	ldr	r3, [r4, #340]	; 0x154
   15aa4:	cmp	r7, r3
   15aa8:	bne	159c8 <readstat_parse_sav+0x13ac>
   15aac:	mov	r0, #5
   15ab0:	b	15328 <readstat_parse_sav+0xd0c>
   15ab4:	ldr	r2, [sp, #280]	; 0x118
   15ab8:	add	r3, r2, r8
   15abc:	cmp	r5, r3
   15ac0:	bcc	15aac <readstat_parse_sav+0x1490>
   15ac4:	ldr	r3, [r4, #336]	; 0x150
   15ac8:	mov	r0, r6
   15acc:	str	r3, [sp]
   15ad0:	mov	r1, #33	; 0x21
   15ad4:	mov	r3, r8
   15ad8:	bl	427c <readstat_convert@plt>
   15adc:	add	r6, r6, #33	; 0x21
   15ae0:	cmp	r0, #0
   15ae4:	bne	15328 <readstat_parse_sav+0xd0c>
   15ae8:	ldr	r3, [sp, #280]	; 0x118
   15aec:	add	r3, r3, r8
   15af0:	str	r3, [sp, #280]	; 0x118
   15af4:	ldr	r3, [sp, #24]
   15af8:	add	r3, r3, #1
   15afc:	b	15a90 <readstat_parse_sav+0x1474>
   15b00:	ldr	r3, [r6, #48]	; 0x30
   15b04:	add	r7, r7, r3
   15b08:	b	15a24 <readstat_parse_sav+0x1408>
   15b0c:	ldr	r3, [r4, #44]	; 0x2c
   15b10:	ldr	r6, [r3, r5, lsl #2]
   15b14:	ldr	r0, [r6, #20]
   15b18:	cmp	r0, #0
   15b1c:	beq	15b30 <readstat_parse_sav+0x1514>
   15b20:	mov	r1, r8
   15b24:	add	r0, r0, #251	; 0xfb
   15b28:	bl	2061c <__udivsi3>
   15b2c:	str	r0, [r6, #48]	; 0x30
   15b30:	ldr	r3, [r4, #348]	; 0x15c
   15b34:	add	r2, r3, #1
   15b38:	str	r2, [r4, #348]	; 0x15c
   15b3c:	str	r3, [r6, #8]
   15b40:	ldr	r3, [r6, #48]	; 0x30
   15b44:	add	r5, r5, r3
   15b48:	b	148c0 <readstat_parse_sav+0x2a4>
   15b4c:	ldr	r3, [r4, #328]	; 0x148
   15b50:	cmp	r3, #0
   15b54:	beq	15ba4 <readstat_parse_sav+0x1588>
   15b58:	ldr	r1, [r4, #340]	; 0x154
   15b5c:	ldr	r0, [r4, #332]	; 0x14c
   15b60:	lsl	r3, r1, #1
   15b64:	cmp	r0, r3
   15b68:	beq	15b78 <readstat_parse_sav+0x155c>
   15b6c:	add	r3, r3, r1
   15b70:	cmp	r0, r3
   15b74:	bne	15ed8 <readstat_parse_sav+0x18bc>
   15b78:	cmp	r1, #0
   15b7c:	ble	15ba4 <readstat_parse_sav+0x1588>
   15b80:	bl	20828 <__divsi3>
   15b84:	mov	r5, #0
   15b88:	sub	r8, r0, #3
   15b8c:	clz	r8, r8
   15b90:	lsr	r8, r8, #5
   15b94:	add	r9, r8, #2
   15b98:	ldr	r3, [r4, #340]	; 0x154
   15b9c:	cmp	r5, r3
   15ba0:	blt	15bcc <readstat_parse_sav+0x15b0>
   15ba4:	ldr	r3, [r4, #8]
   15ba8:	cmp	r3, #0
   15bac:	beq	15cc4 <readstat_parse_sav+0x16a8>
   15bb0:	ldr	sl, [pc, #956]	; 15f74 <readstat_parse_sav+0x1958>
   15bb4:	mov	r7, #0
   15bb8:	mov	r6, r7
   15bbc:	add	sl, pc, sl
   15bc0:	add	r8, sp, #536	; 0x218
   15bc4:	mov	r9, #1
   15bc8:	b	15cb8 <readstat_parse_sav+0x169c>
   15bcc:	ldr	r3, [r4, #44]	; 0x2c
   15bd0:	mul	sl, r5, r9
   15bd4:	ldr	r6, [r3, r5, lsl #2]
   15bd8:	ldr	r3, [r4, #328]	; 0x148
   15bdc:	add	r7, sl, #1
   15be0:	ldr	r0, [r3, sl, lsl #2]
   15be4:	bl	43fc <spss_measure_to_readstat_measure@plt>
   15be8:	ldr	r3, [r4, #328]	; 0x148
   15bec:	cmp	r8, #0
   15bf0:	ldrne	r2, [r3, r7, lsl #2]
   15bf4:	addne	r7, sl, #2
   15bf8:	str	r0, [r6, #268]	; 0x10c
   15bfc:	strne	r2, [r6, #276]	; 0x114
   15c00:	ldr	r0, [r3, r7, lsl #2]
   15c04:	bl	43d8 <spss_alignment_to_readstat_alignment@plt>
   15c08:	ldr	r3, [r6, #48]	; 0x30
   15c0c:	add	r5, r5, r3
   15c10:	str	r0, [r6, #272]	; 0x110
   15c14:	b	15b98 <readstat_parse_sav+0x157c>
   15c18:	ldr	r3, [r4, #44]	; 0x2c
   15c1c:	ldr	r2, [r4, #336]	; 0x150
   15c20:	mov	r1, r7
   15c24:	ldr	r5, [r3, r6, lsl #2]
   15c28:	mov	r0, r5
   15c2c:	ldr	r3, [r5, #8]
   15c30:	str	r3, [sp, #28]
   15c34:	ldr	r3, [r4, #52]	; 0x34
   15c38:	str	r3, [sp, #24]
   15c3c:	bl	42b8 <spss_init_variable_for_info@plt>
   15c40:	ldr	r2, [sp, #24]
   15c44:	ldr	r3, [sp, #28]
   15c48:	mov	r1, #256	; 0x100
   15c4c:	str	r0, [r2, r3, lsl #2]
   15c50:	ldr	r3, [r5, #4]
   15c54:	mov	r2, sl
   15c58:	mov	r0, r8
   15c5c:	bl	42c4 <snprintf@plt>
   15c60:	ldr	r2, [r5, #4]
   15c64:	ldr	r0, [r5, #8]
   15c68:	ldr	r1, [r4, #52]	; 0x34
   15c6c:	cmn	r2, #1
   15c70:	movne	r2, r8
   15c74:	moveq	r2, #0
   15c78:	ldr	r3, [r4, #40]	; 0x28
   15c7c:	ldr	r1, [r1, r0, lsl #2]
   15c80:	ldr	ip, [r4, #8]
   15c84:	blx	ip
   15c88:	cmp	r0, #1
   15c8c:	bne	15c98 <readstat_parse_sav+0x167c>
   15c90:	mov	fp, #4
   15c94:	b	149a0 <readstat_parse_sav+0x384>
   15c98:	cmp	r0, #2
   15c9c:	addne	r7, r7, #1
   15ca0:	ldreq	r3, [r4, #52]	; 0x34
   15ca4:	ldreq	r2, [r5, #8]
   15ca8:	ldreq	r3, [r3, r2, lsl #2]
   15cac:	streq	r9, [r3, #2144]	; 0x860
   15cb0:	ldr	r3, [r5, #48]	; 0x30
   15cb4:	add	r6, r6, r3
   15cb8:	ldr	r3, [r4, #340]	; 0x154
   15cbc:	cmp	r6, r3
   15cc0:	blt	15c18 <readstat_parse_sav+0x15fc>
   15cc4:	ldr	r5, [r4, #12]
   15cc8:	cmp	r5, #0
   15ccc:	beq	15cdc <readstat_parse_sav+0x16c0>
   15cd0:	ldr	r2, [r4, #372]	; 0x174
   15cd4:	cmp	r2, #0
   15cd8:	bge	15d7c <readstat_parse_sav+0x1760>
   15cdc:	ldr	r3, [r4, #16]
   15ce0:	cmp	r3, #0
   15ce4:	movne	r3, #0
   15ce8:	ldrne	r0, [r4, #340]	; 0x154
   15cec:	movne	r5, #256	; 0x100
   15cf0:	beq	149a0 <readstat_parse_sav+0x384>
   15cf4:	cmp	r3, r0
   15cf8:	blt	15dd0 <readstat_parse_sav+0x17b4>
   15cfc:	add	r0, r5, #7
   15d00:	str	r0, [r4, #380]	; 0x17c
   15d04:	bl	4270 <readstat_malloc@plt>
   15d08:	str	r0, [r4, #376]	; 0x178
   15d0c:	add	r0, r5, #2
   15d10:	lsl	r0, r0, #2
   15d14:	str	r0, [r4, #388]	; 0x184
   15d18:	bl	4270 <readstat_malloc@plt>
   15d1c:	ldr	r5, [r4, #376]	; 0x178
   15d20:	cmp	r0, #0
   15d24:	cmpne	r5, #0
   15d28:	str	r0, [r4, #384]	; 0x180
   15d2c:	moveq	r5, #1
   15d30:	movne	r5, #0
   15d34:	beq	15f40 <readstat_parse_sav+0x1924>
   15d38:	ldr	r3, [r4, #428]	; 0x1ac
   15d3c:	cmp	r3, #1
   15d40:	bne	15df0 <readstat_parse_sav+0x17d4>
   15d44:	mov	r0, r4
   15d48:	bl	567c <sav_read_compressed_data.constprop.5>
   15d4c:	mov	r5, r0
   15d50:	cmp	r5, #0
   15d54:	bne	15e5c <readstat_parse_sav+0x1840>
   15d58:	ldr	r3, [r4, #352]	; 0x160
   15d5c:	cmn	r3, #1
   15d60:	beq	149a0 <readstat_parse_sav+0x384>
   15d64:	ldr	r2, [r4, #364]	; 0x16c
   15d68:	ldr	r3, [r4, #356]	; 0x164
   15d6c:	cmp	r2, r3
   15d70:	movne	fp, #9
   15d74:	moveq	fp, #0
   15d78:	b	149a0 <readstat_parse_sav+0x384>
   15d7c:	ldr	r0, [r4, #340]	; 0x154
   15d80:	mov	r3, #0
   15d84:	sub	r2, r2, #1
   15d88:	cmp	r3, r0
   15d8c:	bge	15cdc <readstat_parse_sav+0x16c0>
   15d90:	ldr	r1, [r4, #44]	; 0x2c
   15d94:	ldr	r1, [r1, r3, lsl #2]
   15d98:	ldr	ip, [r1, #12]
   15d9c:	cmp	ip, r2
   15da0:	bne	15dc4 <readstat_parse_sav+0x17a8>
   15da4:	ldr	r2, [r1, #8]
   15da8:	ldr	r3, [r4, #52]	; 0x34
   15dac:	ldr	r1, [r4, #40]	; 0x28
   15db0:	ldr	r0, [r3, r2, lsl #2]
   15db4:	blx	r5
   15db8:	cmp	r0, #0
   15dbc:	bne	15c90 <readstat_parse_sav+0x1674>
   15dc0:	b	15cdc <readstat_parse_sav+0x16c0>
   15dc4:	ldr	r1, [r1, #48]	; 0x30
   15dc8:	add	r3, r3, r1
   15dcc:	b	15d88 <readstat_parse_sav+0x176c>
   15dd0:	ldr	r2, [r4, #44]	; 0x2c
   15dd4:	ldr	r2, [r2, r3, lsl #2]
   15dd8:	ldr	r1, [r2, #20]
   15ddc:	ldr	r2, [r2, #48]	; 0x30
   15de0:	cmp	r5, r1
   15de4:	movcc	r5, r1
   15de8:	add	r3, r3, r2
   15dec:	b	15cf4 <readstat_parse_sav+0x16d8>
   15df0:	cmp	r3, #2
   15df4:	bne	15e0c <readstat_parse_sav+0x17f0>
   15df8:	ldr	r1, [pc, #376]	; 15f78 <readstat_parse_sav+0x195c>
   15dfc:	mov	r0, r4
   15e00:	add	r1, pc, r1
   15e04:	bl	4510 <zsav_read_compressed_data@plt>
   15e08:	b	15d4c <readstat_parse_sav+0x1730>
   15e0c:	ldr	r6, [r4, #344]	; 0x158
   15e10:	ldr	r8, [r4, #36]	; 0x24
   15e14:	lsl	r6, r6, #3
   15e18:	mov	r0, r6
   15e1c:	bl	4270 <readstat_malloc@plt>
   15e20:	mov	r7, r0
   15e24:	ldr	r0, [r4, #360]	; 0x168
   15e28:	cmp	r0, #0
   15e2c:	beq	15ea8 <readstat_parse_sav+0x188c>
   15e30:	ldr	r3, [r8, #8]
   15e34:	ldr	r2, [r8, #20]
   15e38:	mov	r1, #1
   15e3c:	mul	r0, r6, r0
   15e40:	blx	r3
   15e44:	cmn	r0, #1
   15e48:	strne	r5, [r4, #360]	; 0x168
   15e4c:	bne	15ea8 <readstat_parse_sav+0x188c>
   15e50:	mov	r5, #15
   15e54:	cmp	r7, #0
   15e58:	bne	15ecc <readstat_parse_sav+0x18b0>
   15e5c:	mov	fp, r5
   15e60:	b	149a0 <readstat_parse_sav+0x384>
   15e64:	mov	r0, r4
   15e68:	bl	13db8 <sav_update_progress>
   15e6c:	subs	r5, r0, #0
   15e70:	bne	15e54 <readstat_parse_sav+0x1838>
   15e74:	ldr	r3, [r8, #12]
   15e78:	ldr	r2, [r8, #20]
   15e7c:	mov	r1, r6
   15e80:	mov	r0, r7
   15e84:	blx	r3
   15e88:	cmp	r6, r0
   15e8c:	bne	15ec0 <readstat_parse_sav+0x18a4>
   15e90:	mov	r2, r4
   15e94:	mov	r1, r6
   15e98:	mov	r0, r7
   15e9c:	bl	14298 <sav_process_row>
   15ea0:	subs	r5, r0, #0
   15ea4:	bne	15e54 <readstat_parse_sav+0x1838>
   15ea8:	ldr	r3, [r4, #356]	; 0x164
   15eac:	cmn	r3, #1
   15eb0:	beq	15e64 <readstat_parse_sav+0x1848>
   15eb4:	ldr	r2, [r4, #364]	; 0x16c
   15eb8:	cmp	r3, r2
   15ebc:	bgt	15e64 <readstat_parse_sav+0x1848>
   15ec0:	cmp	r7, #0
   15ec4:	movne	r5, fp
   15ec8:	beq	15d58 <readstat_parse_sav+0x173c>
   15ecc:	mov	r0, r7
   15ed0:	bl	3f04 <free@plt>
   15ed4:	b	15d50 <readstat_parse_sav+0x1734>
   15ed8:	mov	fp, #5
   15edc:	b	149a0 <readstat_parse_sav+0x384>
   15ee0:	mov	sl, #2
   15ee4:	b	14ac4 <readstat_parse_sav+0x4a8>
   15ee8:	mov	sl, #5
   15eec:	b	15f2c <readstat_parse_sav+0x1910>
   15ef0:	mov	sl, #2
   15ef4:	b	15f2c <readstat_parse_sav+0x1910>
   15ef8:	mov	sl, #5
   15efc:	b	1526c <readstat_parse_sav+0xc50>
   15f00:	mov	r0, #2
   15f04:	b	15328 <readstat_parse_sav+0xd0c>
   15f08:	mov	r0, #4
   15f0c:	b	15328 <readstat_parse_sav+0xd0c>
   15f10:	mov	sl, #2
   15f14:	ldr	r0, [r5, #264]	; 0x108
   15f18:	cmp	r0, #0
   15f1c:	beq	15f2c <readstat_parse_sav+0x1910>
   15f20:	bl	3f04 <free@plt>
   15f24:	mov	r2, #0
   15f28:	str	r2, [r5, #264]	; 0x108
   15f2c:	mov	r0, r5
   15f30:	bl	4468 <spss_varinfo_free@plt>
   15f34:	b	1526c <readstat_parse_sav+0xc50>
   15f38:	mov	sl, #3
   15f3c:	b	15f14 <readstat_parse_sav+0x18f8>
   15f40:	mov	fp, #3
   15f44:	b	149a0 <readstat_parse_sav+0x384>
   15f48:	mov	sl, #2
   15f4c:	ldr	r3, [sp, #24]
   15f50:	cmp	r3, #0
   15f54:	bne	15030 <readstat_parse_sav+0xa14>
   15f58:	b	1526c <readstat_parse_sav+0xc50>
   15f5c:	mov	sl, #2
   15f60:	b	1526c <readstat_parse_sav+0xc50>
   15f64:	mov	fp, #3
   15f68:	b	148a0 <readstat_parse_sav+0x284>
   15f6c:	mov	fp, #2
   15f70:	b	148a0 <readstat_parse_sav+0x284>
   15f74:	.word	0x0000c487
   15f78:	.word	0xffffe490

00015f7c <sav_variable_segments>:
   15f7c:	cmp	r1, #255	; 0xff
   15f80:	clz	r0, r0
   15f84:	lsr	r0, r0, #5
   15f88:	movls	r0, #0
   15f8c:	cmp	r0, #0
   15f90:	beq	15fac <sav_variable_segments+0x30>
   15f94:	mov	r0, r1
   15f98:	push	{r4, lr}
   15f9c:	mov	r1, #252	; 0xfc
   15fa0:	add	r0, r0, #251	; 0xfb
   15fa4:	bl	2061c <__udivsi3>
   15fa8:	pop	{r4, pc}
   15fac:	mov	r0, #1
   15fb0:	bx	lr

00015fb4 <sav_metadata_ok>:
   15fb4:	ldr	r3, [r0, #8]
   15fb8:	cmp	r3, #2
   15fbc:	bne	15fcc <sav_metadata_ok+0x18>
   15fc0:	ldr	r2, [r0, #16]
   15fc4:	cmp	r2, #2
   15fc8:	beq	15fe0 <sav_metadata_ok+0x2c>
   15fcc:	sub	r0, r3, #2
   15fd0:	cmp	r0, #1
   15fd4:	movhi	r0, #24
   15fd8:	movls	r0, #0
   15fdc:	bx	lr
   15fe0:	mov	r0, #6
   15fe4:	bx	lr

00015fe8 <sav_write_compressed_row>:
   15fe8:	push	{r4, r5, r6, lr}
   15fec:	mov	r3, r0
   15ff0:	ldr	r5, [r0, #300]	; 0x12c
   15ff4:	mov	r4, r0
   15ff8:	mov	r0, r5
   15ffc:	bl	44b0 <sav_compress_row@plt>
   16000:	mov	r1, r5
   16004:	mov	r2, r0
   16008:	mov	r0, r4
   1600c:	pop	{r4, r5, r6, lr}
   16010:	b	44a4 <readstat_write_bytes@plt>

00016014 <sav_emit_blank_variable_records>:
   16014:	push	{r4, r5, r6, r7, r8, lr}
   16018:	sub	sp, sp, #32
   1601c:	add	r6, sp, #4
   16020:	add	r5, sp, #32
   16024:	mov	r7, r0
   16028:	mov	r4, r1
   1602c:	add	r8, r6, #20
   16030:	mov	r3, #2
   16034:	str	r3, [r5, #-32]!	; 0xffffffe0
   16038:	cmp	r4, #0
   1603c:	moveq	r0, r4
   16040:	beq	160ac <sav_emit_blank_variable_records+0x98>
   16044:	mov	r2, #4
   16048:	mov	r1, r5
   1604c:	mov	r0, r7
   16050:	bl	44a4 <readstat_write_bytes@plt>
   16054:	cmp	r0, #0
   16058:	bne	160ac <sav_emit_blank_variable_records+0x98>
   1605c:	mov	r1, r0
   16060:	mov	r2, #28
   16064:	mov	r0, r6
   16068:	bl	42e8 <memset@plt>
   1606c:	mov	r2, #8
   16070:	mov	r1, #32
   16074:	mov	r0, r8
   16078:	bl	42e8 <memset@plt>
   1607c:	mvn	r3, #0
   16080:	str	r3, [sp, #4]
   16084:	ldr	r3, [pc, #40]	; 160b4 <sav_emit_blank_variable_records+0xa0>
   16088:	mov	r2, #28
   1608c:	mov	r1, r6
   16090:	mov	r0, r7
   16094:	str	r3, [sp, #20]
   16098:	str	r3, [sp, #16]
   1609c:	bl	44a4 <readstat_write_bytes@plt>
   160a0:	sub	r4, r4, #1
   160a4:	cmp	r0, #0
   160a8:	beq	16038 <sav_emit_blank_variable_records+0x24>
   160ac:	add	sp, sp, #32
   160b0:	pop	{r4, r5, r6, r7, r8, pc}
   160b4:	.word	0x00011d01

000160b8 <sav_write_missing_string>:
   160b8:	ldr	r2, [r1, #1596]	; 0x63c
   160bc:	push	{r4, lr}
   160c0:	mov	r1, #32
   160c4:	bl	42e8 <memset@plt>
   160c8:	mov	r0, #0
   160cc:	pop	{r4, pc}

000160d0 <sav_write_missing_number>:
   160d0:	sub	sp, sp, #8
   160d4:	mov	r2, r0
   160d8:	add	r3, sp, #8
   160dc:	mvn	r0, #0
   160e0:	mvn	r1, #1048576	; 0x100000
   160e4:	strd	r0, [r3, #-8]!
   160e8:	ldm	r3!, {r0, r1}
   160ec:	str	r0, [r2]
   160f0:	str	r1, [r2, #4]
   160f4:	mov	r0, #0
   160f8:	add	sp, sp, #8
   160fc:	bx	lr

00016100 <sav_write_double>:
   16100:	sub	sp, sp, #8
   16104:	add	r3, sp, #8
   16108:	mov	r2, r0
   1610c:	vstmdb	r3!, {d0}
   16110:	ldm	r3!, {r0, r1}
   16114:	str	r0, [r2]
   16118:	str	r1, [r2, #4]
   1611c:	mov	r0, #0
   16120:	add	sp, sp, #8
   16124:	bx	lr

00016128 <sav_write_float>:
   16128:	vcvt.f64.f32	d0, s0
   1612c:	sub	sp, sp, #8
   16130:	add	r3, sp, #8
   16134:	mov	r2, r0
   16138:	vstmdb	r3!, {d0}
   1613c:	ldm	r3!, {r0, r1}
   16140:	str	r0, [r2]
   16144:	str	r1, [r2, #4]
   16148:	mov	r0, #0
   1614c:	add	sp, sp, #8
   16150:	bx	lr

00016154 <sav_write_int32>:
   16154:	vmov	s15, r2
   16158:	sub	sp, sp, #8
   1615c:	add	r3, sp, #8
   16160:	mov	ip, r0
   16164:	vcvt.f64.s32	d7, s15
   16168:	vstmdb	r3!, {d7}
   1616c:	ldm	r3!, {r0, r1}
   16170:	str	r0, [ip]
   16174:	str	r1, [ip, #4]
   16178:	mov	r0, #0
   1617c:	add	sp, sp, #8
   16180:	bx	lr

00016184 <sav_write_int16>:
   16184:	vmov	s15, r2
   16188:	sub	sp, sp, #8
   1618c:	add	r3, sp, #8
   16190:	mov	ip, r0
   16194:	vcvt.f64.s32	d7, s15
   16198:	vstmdb	r3!, {d7}
   1619c:	ldm	r3!, {r0, r1}
   161a0:	str	r0, [ip]
   161a4:	str	r1, [ip, #4]
   161a8:	mov	r0, #0
   161ac:	add	sp, sp, #8
   161b0:	bx	lr

000161b4 <sav_write_int8>:
   161b4:	vmov	s15, r2
   161b8:	sub	sp, sp, #8
   161bc:	add	r3, sp, #8
   161c0:	mov	ip, r0
   161c4:	vcvt.f64.s32	d7, s15
   161c8:	vstmdb	r3!, {d7}
   161cc:	ldm	r3!, {r0, r1}
   161d0:	str	r0, [ip]
   161d4:	str	r1, [ip, #4]
   161d8:	mov	r0, #0
   161dc:	add	sp, sp, #8
   161e0:	bx	lr

000161e4 <readstat_label_set_number_short_variables>:
   161e4:	push	{r4, r5, r6, lr}
   161e8:	mov	r4, #0
   161ec:	mov	r6, r0
   161f0:	mov	r5, r4
   161f4:	ldr	r3, [r6, #276]	; 0x114
   161f8:	cmp	r4, r3
   161fc:	blt	16208 <readstat_label_set_number_short_variables+0x24>
   16200:	mov	r0, r5
   16204:	pop	{r4, r5, r6, pc}
   16208:	mov	r1, r4
   1620c:	mov	r0, r6
   16210:	bl	4498 <readstat_get_label_set_variable@plt>
   16214:	add	r4, r4, #1
   16218:	ldr	r3, [r0, #1596]	; 0x63c
   1621c:	cmp	r3, #8
   16220:	addls	r5, r5, #1
   16224:	b	161f4 <readstat_label_set_number_short_variables+0x10>

00016228 <sav_variable_width>:
   16228:	cmp	r0, #0
   1622c:	bne	1627c <sav_variable_width+0x54>
   16230:	cmp	r1, #255	; 0xff
   16234:	push	{r4, lr}
   16238:	mov	r4, r1
   1623c:	bls	16268 <sav_variable_width+0x40>
   16240:	bl	15f7c <sav_variable_segments>
   16244:	add	r4, r4, #256	; 0x100
   16248:	mvn	r3, #251	; 0xfb
   1624c:	add	r4, r4, #3
   16250:	mla	r4, r3, r0, r4
   16254:	add	r0, r0, #16777216	; 0x1000000
   16258:	sub	r0, r0, #1
   1625c:	bic	r4, r4, #7
   16260:	add	r0, r4, r0, lsl #8
   16264:	pop	{r4, pc}
   16268:	cmp	r1, #0
   1626c:	beq	16284 <sav_variable_width+0x5c>
   16270:	add	r0, r1, #7
   16274:	bic	r0, r0, #7
   16278:	pop	{r4, pc}
   1627c:	mov	r0, #8
   16280:	bx	lr
   16284:	mov	r0, #8
   16288:	pop	{r4, pc}

0001628c <sav_write_string>:
   1628c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16290:	mov	r4, r2
   16294:	mov	r5, r1
   16298:	ldr	r2, [r1, #1596]	; 0x63c
   1629c:	mov	r1, #32
   162a0:	mov	r7, r0
   162a4:	bl	42e8 <memset@plt>
   162a8:	cmp	r4, #0
   162ac:	beq	16310 <sav_write_string+0x84>
   162b0:	ldrb	r0, [r4]
   162b4:	cmp	r0, #0
   162b8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   162bc:	mov	r0, r4
   162c0:	bl	424c <strlen@plt>
   162c4:	ldr	r3, [r5, #1596]	; 0x63c
   162c8:	cmp	r0, r3
   162cc:	movls	r5, #0
   162d0:	mov	r8, r0
   162d4:	movls	r6, r5
   162d8:	movls	r9, #255	; 0xff
   162dc:	bls	162f8 <sav_write_string+0x6c>
   162e0:	mov	r0, #22
   162e4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   162e8:	mov	r2, r9
   162ec:	bl	3f64 <memcpy@plt>
   162f0:	add	r6, r6, #256	; 0x100
   162f4:	add	r5, r5, #255	; 0xff
   162f8:	sub	r2, r8, r5
   162fc:	cmp	r2, #255	; 0xff
   16300:	add	r0, r7, r6
   16304:	add	r1, r4, r5
   16308:	bhi	162e8 <sav_write_string+0x5c>
   1630c:	bl	3f64 <memcpy@plt>
   16310:	mov	r0, #0
   16314:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00016318 <sav_variable_ok>:
   16318:	push	{r4, r5, r6, lr}
   1631c:	add	r4, r0, #8
   16320:	mov	r5, r0
   16324:	mov	r0, r4
   16328:	bl	424c <strlen@plt>
   1632c:	cmp	r0, #64	; 0x40
   16330:	bhi	16508 <sav_variable_ok+0x1f0>
   16334:	cmp	r0, #0
   16338:	beq	16510 <sav_variable_ok+0x1f8>
   1633c:	ldr	r1, [pc, #476]	; 16520 <sav_variable_ok+0x208>
   16340:	mov	r0, r4
   16344:	add	r1, pc, r1
   16348:	bl	3e44 <strcmp@plt>
   1634c:	cmp	r0, #0
   16350:	beq	16518 <sav_variable_ok+0x200>
   16354:	ldr	r1, [pc, #456]	; 16524 <sav_variable_ok+0x20c>
   16358:	mov	r0, r4
   1635c:	add	r1, pc, r1
   16360:	bl	3e44 <strcmp@plt>
   16364:	cmp	r0, #0
   16368:	beq	16518 <sav_variable_ok+0x200>
   1636c:	ldr	r1, [pc, #436]	; 16528 <sav_variable_ok+0x210>
   16370:	mov	r0, r4
   16374:	add	r1, pc, r1
   16378:	bl	3e44 <strcmp@plt>
   1637c:	cmp	r0, #0
   16380:	beq	16518 <sav_variable_ok+0x200>
   16384:	ldr	r1, [pc, #416]	; 1652c <sav_variable_ok+0x214>
   16388:	mov	r0, r4
   1638c:	add	r1, pc, r1
   16390:	bl	3e44 <strcmp@plt>
   16394:	cmp	r0, #0
   16398:	beq	16518 <sav_variable_ok+0x200>
   1639c:	ldr	r1, [pc, #396]	; 16530 <sav_variable_ok+0x218>
   163a0:	mov	r0, r4
   163a4:	add	r1, pc, r1
   163a8:	bl	3e44 <strcmp@plt>
   163ac:	cmp	r0, #0
   163b0:	beq	16518 <sav_variable_ok+0x200>
   163b4:	ldr	r1, [pc, #376]	; 16534 <sav_variable_ok+0x21c>
   163b8:	mov	r0, r4
   163bc:	add	r1, pc, r1
   163c0:	bl	3e44 <strcmp@plt>
   163c4:	cmp	r0, #0
   163c8:	beq	16518 <sav_variable_ok+0x200>
   163cc:	ldr	r1, [pc, #356]	; 16538 <sav_variable_ok+0x220>
   163d0:	mov	r0, r4
   163d4:	add	r1, pc, r1
   163d8:	bl	3e44 <strcmp@plt>
   163dc:	cmp	r0, #0
   163e0:	beq	16518 <sav_variable_ok+0x200>
   163e4:	ldr	r1, [pc, #336]	; 1653c <sav_variable_ok+0x224>
   163e8:	mov	r0, r4
   163ec:	add	r1, pc, r1
   163f0:	bl	3e44 <strcmp@plt>
   163f4:	cmp	r0, #0
   163f8:	beq	16518 <sav_variable_ok+0x200>
   163fc:	ldr	r1, [pc, #316]	; 16540 <sav_variable_ok+0x228>
   16400:	mov	r0, r4
   16404:	add	r1, pc, r1
   16408:	bl	3e44 <strcmp@plt>
   1640c:	cmp	r0, #0
   16410:	beq	16518 <sav_variable_ok+0x200>
   16414:	ldr	r1, [pc, #296]	; 16544 <sav_variable_ok+0x22c>
   16418:	mov	r0, r4
   1641c:	add	r1, pc, r1
   16420:	bl	3e44 <strcmp@plt>
   16424:	cmp	r0, #0
   16428:	beq	16518 <sav_variable_ok+0x200>
   1642c:	ldr	r1, [pc, #276]	; 16548 <sav_variable_ok+0x230>
   16430:	mov	r0, r4
   16434:	add	r1, pc, r1
   16438:	bl	3e44 <strcmp@plt>
   1643c:	cmp	r0, #0
   16440:	beq	16518 <sav_variable_ok+0x200>
   16444:	ldr	r1, [pc, #256]	; 1654c <sav_variable_ok+0x234>
   16448:	mov	r0, r4
   1644c:	add	r1, pc, r1
   16450:	bl	3e44 <strcmp@plt>
   16454:	cmp	r0, #0
   16458:	beq	16518 <sav_variable_ok+0x200>
   1645c:	ldr	r1, [pc, #236]	; 16550 <sav_variable_ok+0x238>
   16460:	mov	r0, r4
   16464:	add	r1, pc, r1
   16468:	bl	3e44 <strcmp@plt>
   1646c:	cmp	r0, #0
   16470:	beq	16518 <sav_variable_ok+0x200>
   16474:	ldr	lr, [pc, #216]	; 16554 <sav_variable_ok+0x23c>
   16478:	add	r0, r5, #7
   1647c:	mov	ip, #1
   16480:	ldrb	r3, [r0, #1]!
   16484:	cmp	r3, #0
   16488:	bne	164bc <sav_variable_ok+0x1a4>
   1648c:	ldrb	r3, [r5, #8]
   16490:	sub	r0, r3, #64	; 0x40
   16494:	cmp	r3, #0
   16498:	cmpne	r0, #26
   1649c:	movhi	r0, #1
   164a0:	movls	r0, #0
   164a4:	popls	{r4, r5, r6, pc}
   164a8:	sub	r0, r3, #97	; 0x61
   164ac:	cmp	r0, #25
   164b0:	movhi	r0, #25
   164b4:	movls	r0, #0
   164b8:	pop	{r4, r5, r6, pc}
   164bc:	cmp	r3, #32
   164c0:	beq	16500 <sav_variable_ok+0x1e8>
   164c4:	sub	r2, r3, #35	; 0x23
   164c8:	sub	r1, r3, #64	; 0x40
   164cc:	uxtb	r2, r2
   164d0:	cmp	r3, #95	; 0x5f
   164d4:	cmpne	r1, #26
   164d8:	movhi	r1, #1
   164dc:	movls	r1, #0
   164e0:	cmp	r2, #22
   164e4:	mvnls	r2, lr, lsr r2
   164e8:	movhi	r2, ip
   164ec:	tst	r2, r1
   164f0:	beq	16480 <sav_variable_ok+0x168>
   164f4:	sub	r3, r3, #97	; 0x61
   164f8:	cmp	r3, #25
   164fc:	bls	16480 <sav_variable_ok+0x168>
   16500:	mov	r0, #26
   16504:	pop	{r4, r5, r6, pc}
   16508:	mov	r0, #28
   1650c:	pop	{r4, r5, r6, pc}
   16510:	mov	r0, #38	; 0x26
   16514:	pop	{r4, r5, r6, pc}
   16518:	mov	r0, #27
   1651c:	pop	{r4, r5, r6, pc}
   16520:	.word	0x0000c9ce
   16524:	.word	0x0000c991
   16528:	.word	0x0000c97d
   1652c:	.word	0x0000c968
   16530:	.word	0x0000c953
   16534:	.word	0x0000c93e
   16538:	.word	0x0000bcfb
   1653c:	.word	0x0000c911
   16540:	.word	0x0000c8fc
   16544:	.word	0x0000c8e7
   16548:	.word	0x0000c8d3
   1654c:	.word	0x0000c8be
   16550:	.word	0x0000c8a9
   16554:	.word	0x007fe803

00016558 <sav_format_variable_name.constprop.5>:
   16558:	ldr	r2, [pc, #32]	; 16580 <sav_format_variable_name.constprop.5+0x28>
   1655c:	push	{r4, lr}
   16560:	mov	r3, r1
   16564:	mov	r4, r0
   16568:	add	r2, pc, r2
   1656c:	mov	r1, #9
   16570:	bl	42c4 <snprintf@plt>
   16574:	mov	r0, r4
   16578:	pop	{r4, lr}
   1657c:	b	424c <strlen@plt>
   16580:	.word	0x0000c306

00016584 <sav_emit_variable_records>:
   16584:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16588:	sub	sp, sp, #380	; 0x17c
   1658c:	add	r3, r1, #9
   16590:	str	r3, [sp, #4]
   16594:	add	sl, sp, #120	; 0x78
   16598:	mov	r3, #0
   1659c:	mov	fp, r0
   165a0:	str	r3, [sp]
   165a4:	add	r3, sl, #20
   165a8:	str	r3, [sp, #20]
   165ac:	ldr	r3, [fp, #28]
   165b0:	ldr	r2, [sp]
   165b4:	cmp	r2, r3
   165b8:	blt	165c8 <sav_emit_variable_records+0x44>
   165bc:	mov	r0, #0
   165c0:	add	sp, sp, #380	; 0x17c
   165c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   165c8:	ldr	r1, [sp]
   165cc:	mov	r0, fp
   165d0:	bl	43cc <readstat_get_variable@plt>
   165d4:	mov	r3, #2
   165d8:	str	r3, [sp, #36]	; 0x24
   165dc:	ldr	r3, [sp, #4]
   165e0:	sub	r1, r3, #9
   165e4:	mov	r4, r0
   165e8:	add	r0, sp, #60	; 0x3c
   165ec:	bl	16558 <sav_format_variable_name.constprop.5>
   165f0:	mov	r2, #4
   165f4:	add	r1, sp, #36	; 0x24
   165f8:	str	r0, [sp, #16]
   165fc:	mov	r0, fp
   16600:	bl	44a4 <readstat_write_bytes@plt>
   16604:	cmp	r0, #0
   16608:	bne	165c0 <sav_emit_variable_records+0x3c>
   1660c:	mov	r2, #28
   16610:	mov	r1, r0
   16614:	add	r0, sp, #92	; 0x5c
   16618:	bl	42e8 <memset@plt>
   1661c:	ldr	r2, [r4]
   16620:	cmp	r2, #0
   16624:	bne	16638 <sav_emit_variable_records+0xb4>
   16628:	ldr	r3, [r4, #1600]	; 0x640
   1662c:	cmp	r3, #255	; 0xff
   16630:	movcs	r3, #255	; 0xff
   16634:	str	r3, [sp, #92]	; 0x5c
   16638:	ldrb	r3, [r4, #564]	; 0x234
   1663c:	mov	r0, r4
   16640:	adds	r3, r3, #0
   16644:	movne	r3, #1
   16648:	cmp	r2, #5
   1664c:	str	r3, [sp, #96]	; 0x60
   16650:	bne	16810 <sav_emit_variable_records+0x28c>
   16654:	bl	4354 <readstat_variable_get_missing_ranges_count@plt>
   16658:	mov	r6, #0
   1665c:	mov	r8, r6
   16660:	add	r7, sp, #72	; 0x48
   16664:	mov	r9, r0
   16668:	mov	r5, r0
   1666c:	cmp	r9, r6
   16670:	bgt	167c0 <sav_emit_variable_records+0x23c>
   16674:	cmp	r8, #0
   16678:	rsbne	r5, r5, #0
   1667c:	eor	r3, r5, r5, asr #31
   16680:	sub	r3, r3, r5, asr #31
   16684:	cmp	r3, #3
   16688:	bgt	16cf4 <sav_emit_variable_records+0x770>
   1668c:	mov	r1, sl
   16690:	mov	r0, r4
   16694:	str	r5, [sp, #100]	; 0x64
   16698:	bl	4144 <spss_format_for_variable@plt>
   1669c:	cmp	r0, #0
   166a0:	bne	165c0 <sav_emit_variable_records+0x3c>
   166a4:	ldr	r3, [sp, #124]	; 0x7c
   166a8:	ldr	r1, [sp, #120]	; 0x78
   166ac:	cmp	r3, #255	; 0xff
   166b0:	movge	r3, #255	; 0xff
   166b4:	ldr	r5, [pc, #1600]	; 16cfc <sav_emit_variable_records+0x778>
   166b8:	ldr	r2, [sp, #128]	; 0x80
   166bc:	and	r3, r5, r3, lsl #8
   166c0:	orr	r2, r2, r1, lsl #16
   166c4:	orr	r3, r3, r2
   166c8:	str	r3, [sp, #104]	; 0x68
   166cc:	str	r3, [sp, #108]	; 0x6c
   166d0:	add	r3, sp, #112	; 0x70
   166d4:	mov	r2, #8
   166d8:	mov	r1, #32
   166dc:	mov	r0, r3
   166e0:	bl	42e8 <memset@plt>
   166e4:	ldr	r2, [sp, #16]
   166e8:	str	r5, [sp, #8]
   166ec:	sub	r2, r2, #1
   166f0:	cmp	r2, #7
   166f4:	bhi	16704 <sav_emit_variable_records+0x180>
   166f8:	ldr	r2, [sp, #16]
   166fc:	add	r1, sp, #60	; 0x3c
   16700:	bl	3f64 <memcpy@plt>
   16704:	mov	r2, #28
   16708:	add	r1, sp, #92	; 0x5c
   1670c:	mov	r0, fp
   16710:	bl	44a4 <readstat_write_bytes@plt>
   16714:	cmp	r0, #0
   16718:	bne	165c0 <sav_emit_variable_records+0x3c>
   1671c:	add	r5, r4, #564	; 0x234
   16720:	mov	r0, r5
   16724:	bl	424c <strlen@plt>
   16728:	cmp	r0, #0
   1672c:	beq	1678c <sav_emit_variable_records+0x208>
   16730:	cmp	r0, #256	; 0x100
   16734:	strls	r0, [sp, #72]	; 0x48
   16738:	movhi	r3, #256	; 0x100
   1673c:	mov	r2, #4
   16740:	add	r1, sp, #72	; 0x48
   16744:	mov	r0, fp
   16748:	strhi	r3, [sp, #72]	; 0x48
   1674c:	bl	44a4 <readstat_write_bytes@plt>
   16750:	cmp	r0, #0
   16754:	bne	165c0 <sav_emit_variable_records+0x3c>
   16758:	ldr	r6, [sp, #72]	; 0x48
   1675c:	mov	r1, r5
   16760:	add	r6, r6, #3
   16764:	bic	r6, r6, #3
   16768:	mov	r2, r6
   1676c:	mov	r0, sl
   16770:	bl	430c <strncpy@plt>
   16774:	mov	r2, r6
   16778:	mov	r1, sl
   1677c:	mov	r0, fp
   16780:	bl	44a4 <readstat_write_bytes@plt>
   16784:	cmp	r0, #0
   16788:	bne	165c0 <sav_emit_variable_records+0x3c>
   1678c:	ldr	r3, [r4]
   16790:	cmp	r3, #5
   16794:	bne	16a54 <sav_emit_variable_records+0x4d0>
   16798:	mov	r0, r4
   1679c:	bl	4354 <readstat_variable_get_missing_ranges_count@plt>
   167a0:	mov	r8, #0
   167a4:	add	r5, sp, #72	; 0x48
   167a8:	str	r0, [sp, #16]
   167ac:	ldr	r3, [sp, #16]
   167b0:	cmp	r3, r8
   167b4:	bgt	168a8 <sav_emit_variable_records+0x324>
   167b8:	mov	r9, #0
   167bc:	b	1693c <sav_emit_variable_records+0x3b8>
   167c0:	mov	r2, r6
   167c4:	mov	r1, r4
   167c8:	mov	r0, r7
   167cc:	bl	3f88 <readstat_variable_get_missing_range_lo@plt>
   167d0:	mov	r2, r6
   167d4:	mov	r1, r4
   167d8:	mov	r0, sl
   167dc:	bl	4378 <readstat_variable_get_missing_range_hi@plt>
   167e0:	ldm	r7, {r0, r1, r2, r3}
   167e4:	bl	4300 <spss_64bit_value@plt>
   167e8:	add	r6, r6, #1
   167ec:	strd	r0, [sp, #8]
   167f0:	ldm	sl, {r0, r1, r2, r3}
   167f4:	bl	4300 <spss_64bit_value@plt>
   167f8:	ldrd	r2, [sp, #8]
   167fc:	cmp	r3, r1
   16800:	cmpeq	r2, r0
   16804:	addne	r5, r5, #1
   16808:	movne	r8, #1
   1680c:	b	1666c <sav_emit_variable_records+0xe8>
   16810:	bl	4318 <readstat_variable_get_storage_width@plt>
   16814:	cmp	r0, #8
   16818:	movhi	r5, #0
   1681c:	bhi	1667c <sav_emit_variable_records+0xf8>
   16820:	mov	r0, r4
   16824:	bl	4354 <readstat_variable_get_missing_ranges_count@plt>
   16828:	mov	r6, #0
   1682c:	mov	r8, r6
   16830:	add	r7, sp, #72	; 0x48
   16834:	mov	r9, r0
   16838:	mov	r5, r0
   1683c:	cmp	r9, r6
   16840:	ble	16674 <sav_emit_variable_records+0xf0>
   16844:	mov	r2, r6
   16848:	mov	r1, r4
   1684c:	mov	r0, r7
   16850:	bl	3f88 <readstat_variable_get_missing_range_lo@plt>
   16854:	mov	r2, r6
   16858:	mov	r1, r4
   1685c:	mov	r0, sl
   16860:	bl	4378 <readstat_variable_get_missing_range_hi@plt>
   16864:	ldm	r7, {r0, r1, r2, r3}
   16868:	bl	3ff4 <readstat_string_value@plt>
   1686c:	str	r0, [sp, #8]
   16870:	ldm	sl, {r0, r1, r2, r3}
   16874:	bl	3ff4 <readstat_string_value@plt>
   16878:	ldr	r3, [sp, #8]
   1687c:	cmp	r3, #0
   16880:	cmpne	r0, #0
   16884:	mov	r1, r0
   16888:	beq	168a0 <sav_emit_variable_records+0x31c>
   1688c:	mov	r0, r3
   16890:	bl	3e44 <strcmp@plt>
   16894:	cmp	r0, #0
   16898:	addne	r5, r5, #1
   1689c:	movne	r8, #1
   168a0:	add	r6, r6, #1
   168a4:	b	1683c <sav_emit_variable_records+0x2b8>
   168a8:	mov	r2, r8
   168ac:	mov	r1, r4
   168b0:	mov	r0, r5
   168b4:	bl	3f88 <readstat_variable_get_missing_range_lo@plt>
   168b8:	mov	r2, r8
   168bc:	mov	r1, r4
   168c0:	mov	r0, sl
   168c4:	bl	4378 <readstat_variable_get_missing_range_hi@plt>
   168c8:	ldm	r5, {r0, r1, r2, r3}
   168cc:	bl	4300 <spss_64bit_value@plt>
   168d0:	mov	r6, r0
   168d4:	mov	r7, r1
   168d8:	ldm	sl, {r0, r1, r2, r3}
   168dc:	bl	4300 <spss_64bit_value@plt>
   168e0:	cmp	r7, r1
   168e4:	cmpeq	r6, r0
   168e8:	beq	169cc <sav_emit_variable_records+0x448>
   168ec:	ldm	r5, {r0, r1, r2, r3}
   168f0:	bl	4300 <spss_64bit_value@plt>
   168f4:	add	r3, sp, #40	; 0x28
   168f8:	mov	r2, #8
   168fc:	strd	r0, [sp, #40]	; 0x28
   16900:	mov	r1, r3
   16904:	mov	r0, fp
   16908:	bl	44a4 <readstat_write_bytes@plt>
   1690c:	cmp	r0, #0
   16910:	bne	165c0 <sav_emit_variable_records+0x3c>
   16914:	ldm	sl, {r0, r1, r2, r3}
   16918:	bl	4300 <spss_64bit_value@plt>
   1691c:	mov	r2, #8
   16920:	strd	r0, [sp, #48]	; 0x30
   16924:	add	r1, sp, #48	; 0x30
   16928:	mov	r0, fp
   1692c:	bl	44a4 <readstat_write_bytes@plt>
   16930:	cmp	r0, #0
   16934:	bne	165c0 <sav_emit_variable_records+0x3c>
   16938:	mov	r9, #2
   1693c:	add	r3, sp, #56	; 0x38
   16940:	mov	r8, #0
   16944:	add	r5, sp, #72	; 0x48
   16948:	str	r3, [sp, #24]
   1694c:	add	r3, sp, #48	; 0x30
   16950:	str	r3, [sp, #28]
   16954:	ldr	r3, [sp, #16]
   16958:	cmp	r3, r8
   1695c:	bgt	169d4 <sav_emit_variable_records+0x450>
   16960:	ldr	r1, [r4, #1596]	; 0x63c
   16964:	mov	r0, fp
   16968:	lsr	r1, r1, #3
   1696c:	sub	r1, r1, #1
   16970:	cmp	r1, #31
   16974:	movge	r1, #31
   16978:	bl	16014 <sav_emit_blank_variable_records>
   1697c:	cmp	r0, #0
   16980:	bne	165c0 <sav_emit_variable_records+0x3c>
   16984:	ldr	r1, [r4, #1600]	; 0x640
   16988:	ldr	r0, [r4]
   1698c:	bl	15f7c <sav_variable_segments>
   16990:	ldr	r3, [pc, #872]	; 16d00 <sav_emit_variable_records+0x77c>
   16994:	mov	r6, #1
   16998:	add	r3, pc, r3
   1699c:	str	r3, [sp, #24]
   169a0:	mov	r8, r0
   169a4:	sub	r9, r0, #1
   169a8:	cmp	r8, r6
   169ac:	bgt	16ba8 <sav_emit_variable_records+0x624>
   169b0:	ldr	r3, [sp]
   169b4:	add	r3, r3, #1
   169b8:	str	r3, [sp]
   169bc:	ldr	r3, [sp, #4]
   169c0:	add	r3, r3, #15
   169c4:	str	r3, [sp, #4]
   169c8:	b	165ac <sav_emit_variable_records+0x28>
   169cc:	add	r8, r8, #1
   169d0:	b	167ac <sav_emit_variable_records+0x228>
   169d4:	mov	r2, r8
   169d8:	mov	r1, r4
   169dc:	mov	r0, r5
   169e0:	bl	3f88 <readstat_variable_get_missing_range_lo@plt>
   169e4:	mov	r2, r8
   169e8:	mov	r1, r4
   169ec:	mov	r0, sl
   169f0:	bl	4378 <readstat_variable_get_missing_range_hi@plt>
   169f4:	ldm	r5, {r0, r1, r2, r3}
   169f8:	bl	4300 <spss_64bit_value@plt>
   169fc:	mov	r6, r0
   16a00:	mov	r7, r1
   16a04:	ldm	sl, {r0, r1, r2, r3}
   16a08:	bl	4300 <spss_64bit_value@plt>
   16a0c:	cmp	r7, r1
   16a10:	cmpeq	r6, r0
   16a14:	bne	16a4c <sav_emit_variable_records+0x4c8>
   16a18:	ldm	r5, {r0, r1, r2, r3}
   16a1c:	bl	4300 <spss_64bit_value@plt>
   16a20:	ldr	r3, [sp, #24]
   16a24:	mov	r2, #8
   16a28:	strd	r0, [r3, #-8]
   16a2c:	ldr	r1, [sp, #28]
   16a30:	mov	r0, fp
   16a34:	bl	44a4 <readstat_write_bytes@plt>
   16a38:	cmp	r0, #0
   16a3c:	bne	165c0 <sav_emit_variable_records+0x3c>
   16a40:	add	r9, r9, #1
   16a44:	cmp	r9, #3
   16a48:	beq	16960 <sav_emit_variable_records+0x3dc>
   16a4c:	add	r8, r8, #1
   16a50:	b	16954 <sav_emit_variable_records+0x3d0>
   16a54:	mov	r0, r4
   16a58:	bl	4318 <readstat_variable_get_storage_width@plt>
   16a5c:	cmp	r0, #8
   16a60:	bhi	16960 <sav_emit_variable_records+0x3dc>
   16a64:	mov	r0, r4
   16a68:	bl	4354 <readstat_variable_get_missing_ranges_count@plt>
   16a6c:	mov	r5, #0
   16a70:	add	r6, sp, #72	; 0x48
   16a74:	mov	r9, r0
   16a78:	cmp	r9, r5
   16a7c:	movle	r7, #0
   16a80:	ble	16b10 <sav_emit_variable_records+0x58c>
   16a84:	mov	r2, r5
   16a88:	mov	r1, r4
   16a8c:	mov	r0, r6
   16a90:	bl	3f88 <readstat_variable_get_missing_range_lo@plt>
   16a94:	mov	r2, r5
   16a98:	mov	r1, r4
   16a9c:	mov	r0, sl
   16aa0:	bl	4378 <readstat_variable_get_missing_range_hi@plt>
   16aa4:	ldm	r6, {r0, r1, r2, r3}
   16aa8:	bl	3ff4 <readstat_string_value@plt>
   16aac:	mov	r7, r0
   16ab0:	ldm	sl, {r0, r1, r2, r3}
   16ab4:	bl	3ff4 <readstat_string_value@plt>
   16ab8:	cmp	r7, #0
   16abc:	cmpne	r0, #0
   16ac0:	mov	r8, r0
   16ac4:	beq	16ba0 <sav_emit_variable_records+0x61c>
   16ac8:	mov	r1, r0
   16acc:	mov	r0, r7
   16ad0:	bl	3e44 <strcmp@plt>
   16ad4:	cmp	r0, #0
   16ad8:	beq	16ba0 <sav_emit_variable_records+0x61c>
   16adc:	mov	r2, #8
   16ae0:	mov	r1, r7
   16ae4:	mov	r0, fp
   16ae8:	bl	45a0 <readstat_write_space_padded_string@plt>
   16aec:	cmp	r0, #0
   16af0:	bne	165c0 <sav_emit_variable_records+0x3c>
   16af4:	mov	r2, #8
   16af8:	mov	r1, r8
   16afc:	mov	r0, fp
   16b00:	bl	45a0 <readstat_write_space_padded_string@plt>
   16b04:	cmp	r0, #0
   16b08:	bne	165c0 <sav_emit_variable_records+0x3c>
   16b0c:	mov	r7, #2
   16b10:	mov	r5, #0
   16b14:	add	r6, sp, #72	; 0x48
   16b18:	cmp	r9, r5
   16b1c:	ble	16960 <sav_emit_variable_records+0x3dc>
   16b20:	mov	r2, r5
   16b24:	mov	r1, r4
   16b28:	mov	r0, r6
   16b2c:	bl	3f88 <readstat_variable_get_missing_range_lo@plt>
   16b30:	mov	r2, r5
   16b34:	mov	r1, r4
   16b38:	mov	r0, sl
   16b3c:	bl	4378 <readstat_variable_get_missing_range_hi@plt>
   16b40:	ldm	r6, {r0, r1, r2, r3}
   16b44:	bl	3ff4 <readstat_string_value@plt>
   16b48:	mov	r8, r0
   16b4c:	ldm	sl, {r0, r1, r2, r3}
   16b50:	bl	3ff4 <readstat_string_value@plt>
   16b54:	cmp	r8, #0
   16b58:	cmpne	r0, #0
   16b5c:	mov	r1, r0
   16b60:	beq	16b98 <sav_emit_variable_records+0x614>
   16b64:	mov	r0, r8
   16b68:	bl	3e44 <strcmp@plt>
   16b6c:	cmp	r0, #0
   16b70:	bne	16b98 <sav_emit_variable_records+0x614>
   16b74:	mov	r2, #8
   16b78:	mov	r1, r8
   16b7c:	mov	r0, fp
   16b80:	bl	45a0 <readstat_write_space_padded_string@plt>
   16b84:	cmp	r0, #0
   16b88:	bne	165c0 <sav_emit_variable_records+0x3c>
   16b8c:	add	r7, r7, #1
   16b90:	cmp	r7, #3
   16b94:	beq	16960 <sav_emit_variable_records+0x3dc>
   16b98:	add	r5, r5, #1
   16b9c:	b	16b18 <sav_emit_variable_records+0x594>
   16ba0:	add	r5, r5, #1
   16ba4:	b	16a78 <sav_emit_variable_records+0x4f4>
   16ba8:	cmp	r9, r6
   16bac:	moveq	r5, #252	; 0xfc
   16bb0:	add	r7, sp, #72	; 0x48
   16bb4:	muleq	r3, r5, r9
   16bb8:	ldreq	r5, [r4, #1600]	; 0x640
   16bbc:	mov	r2, #28
   16bc0:	subeq	r5, r5, r3
   16bc4:	mov	r1, #0
   16bc8:	mov	r3, #2
   16bcc:	mov	r0, sl
   16bd0:	movne	r5, #255	; 0xff
   16bd4:	str	r3, [sp, #60]	; 0x3c
   16bd8:	bl	42e8 <memset@plt>
   16bdc:	ldr	r3, [sp, #4]
   16be0:	ldr	r2, [sp, #24]
   16be4:	mov	r1, #9
   16be8:	mov	r0, r7
   16bec:	bl	42c4 <snprintf@plt>
   16bf0:	mov	r0, r7
   16bf4:	bl	424c <strlen@plt>
   16bf8:	mov	r1, #36	; 0x24
   16bfc:	mov	r7, r0
   16c00:	mov	r0, r6
   16c04:	bl	20808 <__aeabi_uidivmod>
   16c08:	add	r3, r7, #1
   16c0c:	str	r3, [sp, #16]
   16c10:	add	r3, sp, #376	; 0x178
   16c14:	add	r3, r3, r7
   16c18:	mov	r2, #4
   16c1c:	mov	r0, fp
   16c20:	cmp	r1, #9
   16c24:	addls	r1, r1, #48	; 0x30
   16c28:	addhi	r1, r1, #55	; 0x37
   16c2c:	strb	r1, [r3, #-304]	; 0xfffffed0
   16c30:	add	r1, sp, #60	; 0x3c
   16c34:	bl	44a4 <readstat_write_bytes@plt>
   16c38:	cmp	r0, #0
   16c3c:	bne	165c0 <sav_emit_variable_records+0x3c>
   16c40:	add	r1, sp, #92	; 0x5c
   16c44:	mov	r0, r4
   16c48:	str	r5, [sp, #120]	; 0x78
   16c4c:	bl	4144 <spss_format_for_variable@plt>
   16c50:	str	r5, [sp, #96]	; 0x60
   16c54:	cmp	r0, #0
   16c58:	bne	165c0 <sav_emit_variable_records+0x3c>
   16c5c:	ldr	r2, [sp, #92]	; 0x5c
   16c60:	ldr	r3, [sp, #100]	; 0x64
   16c64:	cmp	r5, #255	; 0xff
   16c68:	orr	r3, r3, r2, lsl #16
   16c6c:	ldr	r1, [sp, #8]
   16c70:	movlt	r2, r5
   16c74:	movge	r2, #255	; 0xff
   16c78:	ldr	r0, [sp, #20]
   16c7c:	and	r2, r1, r2, lsl #8
   16c80:	orr	r3, r3, r2
   16c84:	mov	r1, #32
   16c88:	mov	r2, #8
   16c8c:	str	r3, [sp, #132]	; 0x84
   16c90:	str	r3, [sp, #136]	; 0x88
   16c94:	bl	42e8 <memset@plt>
   16c98:	cmp	r7, #7
   16c9c:	bhi	16cb0 <sav_emit_variable_records+0x72c>
   16ca0:	ldr	r2, [sp, #16]
   16ca4:	add	r1, sp, #72	; 0x48
   16ca8:	ldr	r0, [sp, #20]
   16cac:	bl	3f64 <memcpy@plt>
   16cb0:	mov	r2, #28
   16cb4:	mov	r1, sl
   16cb8:	mov	r0, fp
   16cbc:	bl	44a4 <readstat_write_bytes@plt>
   16cc0:	cmp	r0, #0
   16cc4:	bne	165c0 <sav_emit_variable_records+0x3c>
   16cc8:	add	r1, r5, #7
   16ccc:	mov	r0, fp
   16cd0:	lsr	r1, r1, #3
   16cd4:	sub	r1, r1, #1
   16cd8:	cmp	r1, #31
   16cdc:	movge	r1, #31
   16ce0:	bl	16014 <sav_emit_blank_variable_records>
   16ce4:	cmp	r0, #0
   16ce8:	bne	165c0 <sav_emit_variable_records+0x3c>
   16cec:	add	r6, r6, #1
   16cf0:	b	169a8 <sav_emit_variable_records+0x424>
   16cf4:	mov	r0, #31
   16cf8:	b	165c0 <sav_emit_variable_records+0x3c>
   16cfc:	.word	0x0000ffff
   16d00:	.word	0x0000bed6

00016d04 <sav_begin_data>:
   16d04:	ldr	r3, [r0, #308]	; 0x134
   16d08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16d0c:	cmp	r3, #0
   16d10:	sub	sp, sp, #316	; 0x13c
   16d14:	moveq	r5, #14
   16d18:	beq	170f0 <sav_begin_data+0x3ec>
   16d1c:	ldr	r5, [r0, #28]
   16d20:	mov	r1, #15
   16d24:	mov	r4, r0
   16d28:	mov	r0, r5
   16d2c:	bl	3d9c <calloc@plt>
   16d30:	ldr	r9, [pc, #3872]	; 17c58 <sav_begin_data+0xf54>
   16d34:	ldr	sl, [pc, #3872]	; 17c5c <sav_begin_data+0xf58>
   16d38:	ldr	fp, [pc, #3872]	; 17c60 <sav_begin_data+0xf5c>
   16d3c:	mov	r6, #0
   16d40:	add	r9, pc, r9
   16d44:	add	sl, pc, sl
   16d48:	add	fp, pc, fp
   16d4c:	str	r0, [sp, #20]
   16d50:	mov	r0, r5
   16d54:	bl	41e0 <ck_hash_table_init@plt>
   16d58:	ldr	r5, [sp, #20]
   16d5c:	mov	r7, r0
   16d60:	ldr	r3, [r4, #28]
   16d64:	cmp	r6, r3
   16d68:	blt	16e8c <sav_begin_data+0x188>
   16d6c:	mov	r0, r7
   16d70:	add	r6, sp, #136	; 0x88
   16d74:	bl	4288 <ck_hash_table_free@plt>
   16d78:	mov	r2, #176	; 0xb0
   16d7c:	mov	r1, #0
   16d80:	mov	r0, r6
   16d84:	bl	42e8 <memset@plt>
   16d88:	add	fp, sp, #312	; 0x138
   16d8c:	ldr	r3, [r4, #20]
   16d90:	str	r3, [fp, #-256]!	; 0xffffff00
   16d94:	mov	r0, fp
   16d98:	bl	41b0 <localtime@plt>
   16d9c:	ldr	r3, [pc, #3776]	; 17c64 <sav_begin_data+0xf60>
   16da0:	add	r2, sp, #88	; 0x58
   16da4:	add	r3, pc, r3
   16da8:	add	lr, r3, #48	; 0x30
   16dac:	mov	r7, r2
   16db0:	mov	r5, r0
   16db4:	ldr	r0, [r3]
   16db8:	ldr	r1, [r3, #4]
   16dbc:	mov	ip, r2
   16dc0:	add	r3, r3, #8
   16dc4:	cmp	r3, lr
   16dc8:	stmia	ip!, {r0, r1}
   16dcc:	mov	r2, ip
   16dd0:	bne	16db4 <sav_begin_data+0xb0>
   16dd4:	mov	r3, #0
   16dd8:	cmp	r5, r3
   16ddc:	str	r3, [sp, #72]	; 0x48
   16de0:	str	r3, [sp, #76]	; 0x4c
   16de4:	strh	r3, [sp, #80]	; 0x50
   16de8:	str	r3, [sp, #60]	; 0x3c
   16dec:	str	r3, [sp, #64]	; 0x40
   16df0:	strb	r3, [sp, #68]	; 0x44
   16df4:	moveq	r5, #39	; 0x27
   16df8:	beq	170c4 <sav_begin_data+0x3c0>
   16dfc:	ldr	r8, [r4, #16]
   16e00:	ldr	r3, [pc, #3680]	; 17c68 <sav_begin_data+0xf64>
   16e04:	cmp	r8, #2
   16e08:	str	r3, [sp, #136]	; 0x88
   16e0c:	moveq	r3, #51	; 0x33
   16e10:	strbeq	r3, [sp, #139]	; 0x8b
   16e14:	add	r3, r6, #4
   16e18:	mov	r0, r3
   16e1c:	mov	r2, #60	; 0x3c
   16e20:	mov	r1, #32
   16e24:	bl	42e8 <memset@plt>
   16e28:	ldr	ip, [pc, #3644]	; 17c6c <sav_begin_data+0xf68>
   16e2c:	add	ip, pc, ip
   16e30:	add	lr, ip, #56	; 0x38
   16e34:	mov	r3, r0
   16e38:	ldr	r0, [ip]
   16e3c:	ldr	r1, [ip, #4]
   16e40:	mov	r2, r3
   16e44:	add	ip, ip, #8
   16e48:	cmp	ip, lr
   16e4c:	stmia	r2!, {r0, r1}
   16e50:	mov	r3, r2
   16e54:	bne	16e38 <sav_begin_data+0x134>
   16e58:	ldrh	r1, [ip]
   16e5c:	ldrb	r2, [ip, #2]
   16e60:	cmp	r8, #1
   16e64:	strh	r1, [r3]
   16e68:	strb	r2, [r3, #2]
   16e6c:	mov	r3, #2
   16e70:	str	r3, [sp, #200]	; 0xc8
   16e74:	ldr	r3, [r4, #76]	; 0x4c
   16e78:	lsr	r3, r3, #3
   16e7c:	str	r3, [sp, #204]	; 0xcc
   16e80:	bne	16f48 <sav_begin_data+0x244>
   16e84:	str	r8, [sp, #208]	; 0xd0
   16e88:	b	16f50 <sav_begin_data+0x24c>
   16e8c:	mov	r1, r6
   16e90:	mov	r0, r4
   16e94:	bl	43cc <readstat_get_variable@plt>
   16e98:	mov	r2, r9
   16e9c:	mov	r1, #9
   16ea0:	add	r3, r0, #8
   16ea4:	mov	r8, r0
   16ea8:	mov	r0, r5
   16eac:	bl	42c4 <snprintf@plt>
   16eb0:	sub	r3, r5, #1
   16eb4:	ldrb	r2, [r3, #1]
   16eb8:	cmp	r2, #0
   16ebc:	bne	16f24 <sav_begin_data+0x220>
   16ec0:	mov	r1, r7
   16ec4:	mov	r0, r5
   16ec8:	bl	4018 <ck_str_hash_lookup@plt>
   16ecc:	add	r6, r6, #1
   16ed0:	cmp	r0, #0
   16ed4:	beq	16eec <sav_begin_data+0x1e8>
   16ed8:	mov	r3, r6
   16edc:	mov	r2, sl
   16ee0:	mov	r1, #9
   16ee4:	mov	r0, r5
   16ee8:	bl	42c4 <snprintf@plt>
   16eec:	mov	r2, r7
   16ef0:	mov	r1, r8
   16ef4:	mov	r0, r5
   16ef8:	bl	4540 <ck_str_hash_insert@plt>
   16efc:	ldr	r3, [r8, #1600]	; 0x640
   16f00:	cmp	r3, #255	; 0xff
   16f04:	bls	16f1c <sav_begin_data+0x218>
   16f08:	mov	r3, r5
   16f0c:	mov	r2, fp
   16f10:	mov	r1, #6
   16f14:	add	r0, r5, #9
   16f18:	bl	42c4 <snprintf@plt>
   16f1c:	add	r5, r5, #15
   16f20:	b	16d60 <sav_begin_data+0x5c>
   16f24:	str	r2, [sp, #16]
   16f28:	str	r3, [sp, #12]
   16f2c:	bl	41d4 <__ctype_toupper_loc@plt>
   16f30:	ldr	r2, [sp, #16]
   16f34:	ldr	r3, [sp, #12]
   16f38:	ldr	r1, [r0]
   16f3c:	ldr	r2, [r1, r2, lsl #2]
   16f40:	strb	r2, [r3, #1]!
   16f44:	b	16eb4 <sav_begin_data+0x1b0>
   16f48:	cmp	r8, #2
   16f4c:	beq	16e84 <sav_begin_data+0x180>
   16f50:	ldr	r3, [r4, #224]	; 0xe0
   16f54:	cmp	r3, #0
   16f58:	beq	16f74 <sav_begin_data+0x270>
   16f5c:	ldr	r3, [r3, #1592]	; 0x638
   16f60:	add	r2, r3, #7
   16f64:	cmp	r3, #0
   16f68:	movlt	r3, r2
   16f6c:	asr	r3, r3, #3
   16f70:	add	r3, r3, #1
   16f74:	str	r3, [sp, #212]	; 0xd4
   16f78:	ldr	r3, [r4, #80]	; 0x50
   16f7c:	ldr	r0, [r5, #12]
   16f80:	str	r3, [sp, #216]	; 0xd8
   16f84:	mov	r3, #0
   16f88:	str	r3, [sp, #220]	; 0xdc
   16f8c:	ldr	r3, [pc, #3292]	; 17c70 <sav_begin_data+0xf6c>
   16f90:	mov	r1, #100	; 0x64
   16f94:	str	r3, [sp, #224]	; 0xe0
   16f98:	bl	20808 <__aeabi_uidivmod>
   16f9c:	ldr	r0, [r5, #20]
   16fa0:	add	r3, sp, #72	; 0x48
   16fa4:	str	r3, [sp, #16]
   16fa8:	mov	r8, r1
   16fac:	mov	r1, #100	; 0x64
   16fb0:	bl	20808 <__aeabi_uidivmod>
   16fb4:	mov	r3, r8
   16fb8:	ldr	r0, [sp, #16]
   16fbc:	str	r1, [sp, #4]
   16fc0:	ldr	r2, [r5, #16]
   16fc4:	mov	r1, #10
   16fc8:	add	r2, r7, r2, lsl #2
   16fcc:	str	r2, [sp]
   16fd0:	ldr	r2, [pc, #3228]	; 17c74 <sav_begin_data+0xf70>
   16fd4:	add	r2, pc, r2
   16fd8:	bl	42c4 <snprintf@plt>
   16fdc:	ldr	r2, [sp, #16]
   16fe0:	add	r3, sp, #228	; 0xe4
   16fe4:	ldm	r2, {r0, r1, r2}
   16fe8:	stmia	r3!, {r0, r1}
   16fec:	mov	r1, #100	; 0x64
   16ff0:	strb	r2, [r3]
   16ff4:	ldr	r0, [r5, #8]
   16ff8:	bl	20808 <__aeabi_uidivmod>
   16ffc:	ldr	r0, [r5]
   17000:	add	r3, sp, #60	; 0x3c
   17004:	str	r3, [sp, #24]
   17008:	mov	r8, r1
   1700c:	mov	r1, #100	; 0x64
   17010:	bl	20808 <__aeabi_uidivmod>
   17014:	str	r1, [sp, #4]
   17018:	mov	r1, #100	; 0x64
   1701c:	ldr	r0, [r5, #4]
   17020:	bl	20808 <__aeabi_uidivmod>
   17024:	ldr	r2, [pc, #3148]	; 17c78 <sav_begin_data+0xf74>
   17028:	mov	r3, r8
   1702c:	add	r2, pc, r2
   17030:	ldr	r0, [sp, #24]
   17034:	add	r5, r6, #109	; 0x6d
   17038:	add	r8, r4, #88	; 0x58
   1703c:	str	r1, [sp]
   17040:	mov	r1, #9
   17044:	bl	42c4 <snprintf@plt>
   17048:	ldr	r3, [sp, #24]
   1704c:	mov	r2, #64	; 0x40
   17050:	ldm	r3!, {r0, r1}
   17054:	str	r0, [sp, #237]	; 0xed
   17058:	str	r1, [sp, #241]	; 0xf1
   1705c:	mov	r0, r5
   17060:	mov	r1, #32
   17064:	bl	42e8 <memset@plt>
   17068:	mov	r0, r8
   1706c:	bl	424c <strlen@plt>
   17070:	ldrb	r3, [r4, #88]	; 0x58
   17074:	cmp	r3, #0
   17078:	beq	17094 <sav_begin_data+0x390>
   1707c:	cmp	r0, #64	; 0x40
   17080:	movcc	r2, r0
   17084:	movcs	r2, #64	; 0x40
   17088:	mov	r1, r8
   1708c:	mov	r0, r5
   17090:	bl	3f64 <memcpy@plt>
   17094:	mov	r2, #176	; 0xb0
   17098:	mov	r1, r6
   1709c:	mov	r0, r4
   170a0:	bl	44a4 <readstat_write_bytes@plt>
   170a4:	subs	r5, r0, #0
   170a8:	bne	170c4 <sav_begin_data+0x3c0>
   170ac:	ldr	r1, [sp, #20]
   170b0:	mov	r0, r4
   170b4:	bl	16584 <sav_emit_variable_records>
   170b8:	subs	r5, r0, #0
   170bc:	streq	r5, [sp, #12]
   170c0:	beq	17124 <sav_begin_data+0x420>
   170c4:	ldr	r0, [sp, #20]
   170c8:	bl	3f04 <free@plt>
   170cc:	cmp	r5, #0
   170d0:	bne	170f0 <sav_begin_data+0x3ec>
   170d4:	ldr	r0, [r4, #76]	; 0x4c
   170d8:	bl	4024 <sav_compressed_row_bound@plt>
   170dc:	ldr	r3, [r4, #16]
   170e0:	cmp	r3, #1
   170e4:	bne	18150 <sav_begin_data+0x144c>
   170e8:	bl	4270 <readstat_malloc@plt>
   170ec:	str	r0, [r4, #300]	; 0x12c
   170f0:	mov	r0, r5
   170f4:	add	sp, sp, #316	; 0x13c
   170f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   170fc:	ldr	r1, [sp, #12]
   17100:	mov	r0, r4
   17104:	bl	4474 <readstat_get_label_set@plt>
   17108:	mov	r8, r0
   1710c:	bl	161e4 <readstat_label_set_number_short_variables>
   17110:	cmp	r0, #0
   17114:	bgt	1737c <sav_begin_data+0x678>
   17118:	ldr	r3, [sp, #12]
   1711c:	add	r3, r3, #1
   17120:	str	r3, [sp, #12]
   17124:	ldr	r3, [r4, #40]	; 0x28
   17128:	ldr	r2, [sp, #12]
   1712c:	cmp	r2, r3
   17130:	blt	170fc <sav_begin_data+0x3f8>
   17134:	mov	r3, #6
   17138:	str	r3, [sp, #88]	; 0x58
   1713c:	ldr	r3, [r4, #52]	; 0x34
   17140:	cmp	r3, #0
   17144:	str	r3, [sp, #136]	; 0x88
   17148:	beq	1718c <sav_begin_data+0x488>
   1714c:	mov	r2, #4
   17150:	mov	r1, r7
   17154:	mov	r0, r4
   17158:	bl	44a4 <readstat_write_bytes@plt>
   1715c:	subs	r5, r0, #0
   17160:	bne	170c4 <sav_begin_data+0x3c0>
   17164:	mov	r2, #4
   17168:	mov	r1, r6
   1716c:	mov	r0, r4
   17170:	bl	44a4 <readstat_write_bytes@plt>
   17174:	subs	r5, r0, #0
   17178:	moveq	r8, r5
   1717c:	bne	170c4 <sav_begin_data+0x3c0>
   17180:	ldr	r3, [r4, #52]	; 0x34
   17184:	cmp	r8, r3
   17188:	blt	175a0 <sav_begin_data+0x89c>
   1718c:	ldr	r2, [pc, #2792]	; 17c7c <sav_begin_data+0xf78>
   17190:	mov	lr, r7
   17194:	add	r2, pc, r2
   17198:	add	r3, r2, #48	; 0x30
   1719c:	add	r2, r2, #64	; 0x40
   171a0:	ldr	r0, [r3]
   171a4:	ldr	r1, [r3, #4]
   171a8:	mov	ip, lr
   171ac:	add	r3, r3, #8
   171b0:	cmp	r3, r2
   171b4:	stmia	ip!, {r0, r1}
   171b8:	mov	lr, ip
   171bc:	bne	171a0 <sav_begin_data+0x49c>
   171c0:	mov	r3, #20
   171c4:	str	r3, [sp, #136]	; 0x88
   171c8:	mov	r3, #0
   171cc:	str	r3, [sp, #140]	; 0x8c
   171d0:	str	r3, [sp, #144]	; 0x90
   171d4:	mvn	r3, #0
   171d8:	str	r3, [sp, #148]	; 0x94
   171dc:	mov	r3, #1
   171e0:	str	r3, [sp, #152]	; 0x98
   171e4:	str	r3, [sp, #156]	; 0x9c
   171e8:	bl	3ef8 <machine_is_little_endian@plt>
   171ec:	ldr	r3, [pc, #2700]	; 17c80 <sav_begin_data+0xf7c>
   171f0:	mov	r2, #16
   171f4:	mov	r1, r7
   171f8:	str	r3, [sp, #164]	; 0xa4
   171fc:	cmp	r0, #0
   17200:	movne	r0, #2
   17204:	moveq	r0, #1
   17208:	str	r0, [sp, #160]	; 0xa0
   1720c:	mov	r0, r4
   17210:	bl	44a4 <readstat_write_bytes@plt>
   17214:	subs	r5, r0, #0
   17218:	bne	170c4 <sav_begin_data+0x3c0>
   1721c:	mov	r2, #32
   17220:	mov	r1, r6
   17224:	mov	r0, r4
   17228:	bl	44a4 <readstat_write_bytes@plt>
   1722c:	subs	r5, r0, #0
   17230:	bne	170c4 <sav_begin_data+0x3c0>
   17234:	ldr	r2, [pc, #2632]	; 17c84 <sav_begin_data+0xf80>
   17238:	mov	lr, r7
   1723c:	add	r2, pc, r2
   17240:	add	r3, r2, #64	; 0x40
   17244:	add	r2, r2, #80	; 0x50
   17248:	ldr	r0, [r3]
   1724c:	ldr	r1, [r3, #4]
   17250:	mov	ip, lr
   17254:	add	r3, r3, #8
   17258:	cmp	r3, r2
   1725c:	stmia	ip!, {r0, r1}
   17260:	mov	lr, ip
   17264:	bne	17248 <sav_begin_data+0x544>
   17268:	mov	r2, #16
   1726c:	mov	r1, r7
   17270:	mov	r0, r4
   17274:	bl	44a4 <readstat_write_bytes@plt>
   17278:	subs	r5, r0, #0
   1727c:	bne	170c4 <sav_begin_data+0x3c0>
   17280:	mov	r1, r5
   17284:	mov	r2, #24
   17288:	mov	r0, r6
   1728c:	bl	42e8 <memset@plt>
   17290:	mvn	r2, #0
   17294:	mvn	r3, #1048576	; 0x100000
   17298:	mov	r1, r6
   1729c:	strd	r2, [sp, #136]	; 0x88
   172a0:	ldr	r3, [pc, #2528]	; 17c88 <sav_begin_data+0xf84>
   172a4:	mvn	r2, #0
   172a8:	mov	r0, r4
   172ac:	strd	r2, [sp, #144]	; 0x90
   172b0:	mvn	r2, #1
   172b4:	mvn	r3, #1048576	; 0x100000
   172b8:	strd	r2, [sp, #152]	; 0x98
   172bc:	mov	r2, #24
   172c0:	bl	44a4 <readstat_write_bytes@plt>
   172c4:	subs	r5, r0, #0
   172c8:	bne	170c4 <sav_begin_data+0x3c0>
   172cc:	mov	r2, #16
   172d0:	mov	r1, r5
   172d4:	mov	r0, r6
   172d8:	bl	42e8 <memset@plt>
   172dc:	mov	r3, #7
   172e0:	str	r3, [sp, #136]	; 0x88
   172e4:	mov	r7, r5
   172e8:	mov	r3, #11
   172ec:	str	r3, [sp, #140]	; 0x8c
   172f0:	mov	r3, #4
   172f4:	str	r3, [sp, #144]	; 0x90
   172f8:	ldr	r3, [r4, #28]
   172fc:	cmp	r7, r3
   17300:	blt	175f0 <sav_begin_data+0x8ec>
   17304:	add	r5, r5, r5, lsl #1
   17308:	mov	r2, #16
   1730c:	mov	r1, r6
   17310:	mov	r0, r4
   17314:	str	r5, [sp, #148]	; 0x94
   17318:	bl	44a4 <readstat_write_bytes@plt>
   1731c:	subs	r5, r0, #0
   17320:	moveq	r7, r5
   17324:	moveq	sl, #8
   17328:	addeq	fp, sp, #88	; 0x58
   1732c:	bne	170c4 <sav_begin_data+0x3c0>
   17330:	ldr	r3, [r4, #28]
   17334:	cmp	r7, r3
   17338:	blt	17614 <sav_begin_data+0x910>
   1733c:	ldr	r2, [pc, #2376]	; 17c8c <sav_begin_data+0xf88>
   17340:	add	r2, pc, r2
   17344:	add	r3, r2, #96	; 0x60
   17348:	add	r2, r2, #112	; 0x70
   1734c:	ldr	r0, [r3]
   17350:	ldr	r1, [r3, #4]
   17354:	mov	ip, r6
   17358:	add	r3, r3, #8
   1735c:	cmp	r3, r2
   17360:	stmia	ip!, {r0, r1}
   17364:	mov	r6, ip
   17368:	bne	1734c <sav_begin_data+0x648>
   1736c:	mov	r7, #0
   17370:	mov	r6, #15
   17374:	add	r5, sp, #88	; 0x58
   17378:	b	1771c <sav_begin_data+0xa18>
   1737c:	ldr	r3, [r8]
   17380:	str	r3, [sp, #28]
   17384:	ldr	r3, [r8, #264]	; 0x108
   17388:	cmp	r3, #0
   1738c:	str	r3, [sp, #60]	; 0x3c
   17390:	beq	17118 <sav_begin_data+0x414>
   17394:	mov	r3, #3
   17398:	mov	r2, #4
   1739c:	ldr	r1, [sp, #16]
   173a0:	mov	r0, r4
   173a4:	str	r3, [sp, #72]	; 0x48
   173a8:	bl	44a4 <readstat_write_bytes@plt>
   173ac:	subs	r5, r0, #0
   173b0:	bne	170c4 <sav_begin_data+0x3c0>
   173b4:	mov	r2, #4
   173b8:	ldr	r1, [sp, #24]
   173bc:	mov	r0, r4
   173c0:	bl	44a4 <readstat_write_bytes@plt>
   173c4:	subs	r5, r0, #0
   173c8:	bne	170c4 <sav_begin_data+0x3c0>
   173cc:	mov	r9, r5
   173d0:	add	r3, sp, #40	; 0x28
   173d4:	str	r3, [sp, #32]
   173d8:	ldr	r3, [sp, #60]	; 0x3c
   173dc:	cmp	r9, r3
   173e0:	blt	17458 <sav_begin_data+0x754>
   173e4:	mov	r9, #4
   173e8:	mov	r0, r8
   173ec:	str	r9, [sp, #72]	; 0x48
   173f0:	bl	161e4 <readstat_label_set_number_short_variables>
   173f4:	mov	r2, r9
   173f8:	ldr	r1, [sp, #16]
   173fc:	str	r0, [sp, #88]	; 0x58
   17400:	mov	r0, r4
   17404:	bl	44a4 <readstat_write_bytes@plt>
   17408:	subs	r5, r0, #0
   1740c:	bne	170c4 <sav_begin_data+0x3c0>
   17410:	mov	r2, r9
   17414:	mov	r1, r7
   17418:	mov	r0, r4
   1741c:	bl	44a4 <readstat_write_bytes@plt>
   17420:	subs	r5, r0, #0
   17424:	bne	170c4 <sav_begin_data+0x3c0>
   17428:	mov	sl, r5
   1742c:	ldr	r3, [r8, #276]	; 0x114
   17430:	cmp	sl, r3
   17434:	bge	17118 <sav_begin_data+0x414>
   17438:	mov	r1, sl
   1743c:	mov	r0, r8
   17440:	bl	4498 <readstat_get_label_set_variable@plt>
   17444:	ldr	r3, [r0, #1596]	; 0x63c
   17448:	cmp	r3, #8
   1744c:	bls	17568 <sav_begin_data+0x864>
   17450:	add	sl, sl, #1
   17454:	b	1742c <sav_begin_data+0x728>
   17458:	mov	r1, r9
   1745c:	mov	r0, r8
   17460:	bl	451c <readstat_get_value_label@plt>
   17464:	ldr	r3, [sp, #28]
   17468:	cmp	r3, #0
   1746c:	mov	r5, r0
   17470:	bne	1752c <sav_begin_data+0x828>
   17474:	ldr	sl, [r0, #20]
   17478:	mov	r2, #8
   1747c:	mov	r1, #32
   17480:	mov	r0, r7
   17484:	bl	42e8 <memset@plt>
   17488:	cmp	sl, #8
   1748c:	movcc	r2, sl
   17490:	movcs	r2, #8
   17494:	ldr	r1, [r5, #16]
   17498:	mov	r0, r7
   1749c:	bl	3f64 <memcpy@plt>
   174a0:	mov	r2, #8
   174a4:	mov	r1, r7
   174a8:	mov	r0, r4
   174ac:	bl	44a4 <readstat_write_bytes@plt>
   174b0:	mov	r3, #120	; 0x78
   174b4:	ldr	sl, [r5, #24]
   174b8:	strb	r3, [sp, #56]	; 0x38
   174bc:	ldr	r3, [r5, #28]
   174c0:	mov	r2, #1
   174c4:	cmp	r3, #119	; 0x77
   174c8:	mov	r1, fp
   174cc:	mov	r0, r4
   174d0:	strbls	r3, [sp, #56]	; 0x38
   174d4:	bl	44a4 <readstat_write_bytes@plt>
   174d8:	subs	r5, r0, #0
   174dc:	bne	170c4 <sav_begin_data+0x3c0>
   174e0:	mov	r2, #128	; 0x80
   174e4:	mov	r1, #32
   174e8:	mov	r0, r6
   174ec:	bl	42e8 <memset@plt>
   174f0:	ldrb	r5, [sp, #56]	; 0x38
   174f4:	mov	r1, sl
   174f8:	mov	r0, r6
   174fc:	mov	r2, r5
   17500:	bl	3f64 <memcpy@plt>
   17504:	add	r2, r5, #8
   17508:	bic	r2, r2, #7
   1750c:	sub	r2, r2, #1
   17510:	mov	r1, r6
   17514:	mov	r0, r4
   17518:	bl	44a4 <readstat_write_bytes@plt>
   1751c:	subs	r5, r0, #0
   17520:	bne	170c4 <sav_begin_data+0x3c0>
   17524:	add	r9, r9, #1
   17528:	b	173d8 <sav_begin_data+0x6d4>
   1752c:	ldr	r3, [sp, #28]
   17530:	cmp	r3, #5
   17534:	bne	17544 <sav_begin_data+0x840>
   17538:	ldm	r0, {r0, r1}
   1753c:	stm	r7, {r0, r1}
   17540:	b	174a0 <sav_begin_data+0x79c>
   17544:	ldr	r3, [sp, #28]
   17548:	cmp	r3, #3
   1754c:	bne	174a0 <sav_begin_data+0x79c>
   17550:	vldr	s15, [r0, #8]
   17554:	ldr	r3, [sp, #32]
   17558:	vcvt.f64.s32	d7, s15
   1755c:	vstr	d7, [sp, #40]	; 0x28
   17560:	ldm	r3, {r0, r1}
   17564:	b	1753c <sav_begin_data+0x838>
   17568:	ldr	r3, [r0, #1592]	; 0x638
   1756c:	mov	r1, r6
   17570:	cmp	r3, #0
   17574:	add	r2, r3, #7
   17578:	movlt	r3, r2
   1757c:	mov	r0, r4
   17580:	asr	r3, r3, #3
   17584:	add	r3, r3, #1
   17588:	mov	r2, r9
   1758c:	str	r3, [sp, #136]	; 0x88
   17590:	bl	44a4 <readstat_write_bytes@plt>
   17594:	subs	r5, r0, #0
   17598:	beq	17450 <sav_begin_data+0x74c>
   1759c:	b	170c4 <sav_begin_data+0x3c0>
   175a0:	ldr	r3, [r4, #48]	; 0x30
   175a4:	ldr	r5, [r3, r8, lsl #2]
   175a8:	mov	r0, r5
   175ac:	bl	424c <strlen@plt>
   175b0:	cmp	r0, #80	; 0x50
   175b4:	mov	r9, r0
   175b8:	bhi	18168 <sav_begin_data+0x1464>
   175bc:	mov	r2, r0
   175c0:	mov	r1, r5
   175c4:	mov	r0, r4
   175c8:	bl	44a4 <readstat_write_bytes@plt>
   175cc:	subs	r5, r0, #0
   175d0:	bne	170c4 <sav_begin_data+0x3c0>
   175d4:	rsb	r1, r9, #80	; 0x50
   175d8:	mov	r0, r4
   175dc:	bl	3e20 <readstat_write_spaces@plt>
   175e0:	subs	r5, r0, #0
   175e4:	bne	170c4 <sav_begin_data+0x3c0>
   175e8:	add	r8, r8, #1
   175ec:	b	17180 <sav_begin_data+0x47c>
   175f0:	mov	r1, r7
   175f4:	mov	r0, r4
   175f8:	bl	43cc <readstat_get_variable@plt>
   175fc:	add	r7, r7, #1
   17600:	ldr	r1, [r0, #1600]	; 0x640
   17604:	ldr	r0, [r0]
   17608:	bl	15f7c <sav_variable_segments>
   1760c:	add	r5, r5, r0
   17610:	b	172f8 <sav_begin_data+0x5f4>
   17614:	mov	r1, r7
   17618:	mov	r0, r4
   1761c:	bl	43cc <readstat_get_variable@plt>
   17620:	mov	r9, #4
   17624:	mov	r5, r0
   17628:	bl	436c <readstat_variable_get_measure@plt>
   1762c:	bl	40b4 <spss_measure_from_readstat_measure@plt>
   17630:	str	r0, [sp, #60]	; 0x3c
   17634:	mov	r0, r5
   17638:	bl	4264 <readstat_variable_get_display_width@plt>
   1763c:	cmp	r0, #0
   17640:	movle	r0, sl
   17644:	str	r0, [sp, #72]	; 0x48
   17648:	mov	r0, r5
   1764c:	bl	4480 <readstat_variable_get_alignment@plt>
   17650:	bl	3ea4 <spss_alignment_from_readstat_alignment@plt>
   17654:	str	r0, [sp, #88]	; 0x58
   17658:	ldr	r0, [r5]
   1765c:	ldr	r1, [r5, #1600]	; 0x640
   17660:	bl	15f7c <sav_variable_segments>
   17664:	mov	r8, r0
   17668:	cmp	r8, #0
   1766c:	addeq	r7, r7, #1
   17670:	beq	17330 <sav_begin_data+0x62c>
   17674:	mov	r2, r9
   17678:	ldr	r1, [sp, #24]
   1767c:	mov	r0, r4
   17680:	bl	44a4 <readstat_write_bytes@plt>
   17684:	subs	r5, r0, #0
   17688:	bne	170c4 <sav_begin_data+0x3c0>
   1768c:	mov	r2, r9
   17690:	ldr	r1, [sp, #16]
   17694:	mov	r0, r4
   17698:	bl	44a4 <readstat_write_bytes@plt>
   1769c:	subs	r5, r0, #0
   176a0:	bne	170c4 <sav_begin_data+0x3c0>
   176a4:	mov	r2, r9
   176a8:	mov	r1, fp
   176ac:	mov	r0, r4
   176b0:	bl	44a4 <readstat_write_bytes@plt>
   176b4:	sub	r8, r8, #1
   176b8:	subs	r5, r0, #0
   176bc:	beq	17668 <sav_begin_data+0x964>
   176c0:	b	170c4 <sav_begin_data+0x3c0>
   176c4:	mov	r1, r7
   176c8:	mov	r0, r4
   176cc:	bl	43cc <readstat_get_variable@plt>
   176d0:	ldr	r3, [sp, #20]
   176d4:	mla	r1, r6, r7, r3
   176d8:	mov	r9, r0
   176dc:	mov	r0, r5
   176e0:	bl	16558 <sav_format_variable_name.constprop.5>
   176e4:	mov	r8, r0
   176e8:	add	r0, r9, #8
   176ec:	bl	424c <strlen@plt>
   176f0:	cmp	r0, #0
   176f4:	cmpne	r8, #0
   176f8:	beq	17718 <sav_begin_data+0xa14>
   176fc:	ldr	r3, [sp, #148]	; 0x94
   17700:	add	r3, r3, #2
   17704:	add	r3, r3, r8
   17708:	cmp	r0, #64	; 0x40
   1770c:	addls	r0, r3, r0
   17710:	addhi	r0, r3, #64	; 0x40
   17714:	str	r0, [sp, #148]	; 0x94
   17718:	add	r7, r7, #1
   1771c:	ldr	r3, [r4, #28]
   17720:	cmp	r7, r3
   17724:	blt	176c4 <sav_begin_data+0x9c0>
   17728:	ldr	r3, [sp, #148]	; 0x94
   1772c:	add	r2, sp, #136	; 0x88
   17730:	cmp	r3, #0
   17734:	str	r2, [sp, #12]
   17738:	ble	1777c <sav_begin_data+0xa78>
   1773c:	sub	r3, r3, #1
   17740:	mov	r2, #16
   17744:	ldr	r1, [sp, #12]
   17748:	mov	r0, r4
   1774c:	str	r3, [sp, #148]	; 0x94
   17750:	bl	44a4 <readstat_write_bytes@plt>
   17754:	subs	r5, r0, #0
   17758:	bne	170c4 <sav_begin_data+0x3c0>
   1775c:	mov	r3, #1
   17760:	mov	r6, r5
   17764:	mov	sl, #15
   17768:	add	r9, sp, #88	; 0x58
   1776c:	add	fp, sp, #60	; 0x3c
   17770:	ldr	r2, [r4, #28]
   17774:	cmp	r6, r2
   17778:	blt	177d8 <sav_begin_data+0xad4>
   1777c:	ldr	r2, [pc, #1292]	; 17c90 <sav_begin_data+0xf8c>
   17780:	mov	r3, #0
   17784:	add	r2, pc, r2
   17788:	strb	r3, [sp, #60]	; 0x3c
   1778c:	ldr	lr, [sp, #12]
   17790:	mov	r3, #9
   17794:	strb	r3, [sp, #61]	; 0x3d
   17798:	add	r3, r2, #112	; 0x70
   1779c:	add	r2, r2, #128	; 0x80
   177a0:	ldr	r0, [r3]
   177a4:	ldr	r1, [r3, #4]
   177a8:	mov	ip, lr
   177ac:	add	r3, r3, #8
   177b0:	cmp	r3, r2
   177b4:	stmia	ip!, {r0, r1}
   177b8:	mov	lr, ip
   177bc:	bne	177a0 <sav_begin_data+0xa9c>
   177c0:	ldr	r7, [pc, #1228]	; 17c94 <sav_begin_data+0xf90>
   177c4:	mov	r5, #0
   177c8:	mov	r8, #15
   177cc:	add	r7, pc, r7
   177d0:	add	r6, sp, #88	; 0x58
   177d4:	b	17910 <sav_begin_data+0xc0c>
   177d8:	mov	r1, r6
   177dc:	mov	r0, r4
   177e0:	str	r3, [sp, #24]
   177e4:	bl	43cc <readstat_get_variable@plt>
   177e8:	ldr	r3, [sp, #20]
   177ec:	mla	r1, sl, r6, r3
   177f0:	mov	r7, r0
   177f4:	add	r7, r7, #8
   177f8:	mov	r0, r9
   177fc:	bl	16558 <sav_format_variable_name.constprop.5>
   17800:	mov	r0, r7
   17804:	bl	424c <strlen@plt>
   17808:	mov	r2, #61	; 0x3d
   1780c:	strb	r2, [sp, #60]	; 0x3c
   17810:	mov	r2, #9
   17814:	strb	r2, [sp, #72]	; 0x48
   17818:	ldr	r3, [sp, #24]
   1781c:	cmp	r0, #0
   17820:	beq	17880 <sav_begin_data+0xb7c>
   17824:	cmp	r0, #64	; 0x40
   17828:	movcc	r8, r0
   1782c:	movcs	r8, #64	; 0x40
   17830:	cmp	r3, #0
   17834:	beq	17888 <sav_begin_data+0xb84>
   17838:	mov	r1, r9
   1783c:	mov	r0, r4
   17840:	bl	41a4 <readstat_write_string@plt>
   17844:	subs	r5, r0, #0
   17848:	bne	170c4 <sav_begin_data+0x3c0>
   1784c:	mov	r2, #1
   17850:	mov	r1, fp
   17854:	mov	r0, r4
   17858:	bl	44a4 <readstat_write_bytes@plt>
   1785c:	subs	r5, r0, #0
   17860:	bne	170c4 <sav_begin_data+0x3c0>
   17864:	mov	r2, r8
   17868:	mov	r1, r7
   1786c:	mov	r0, r4
   17870:	bl	44a4 <readstat_write_bytes@plt>
   17874:	subs	r5, r0, #0
   17878:	bne	170c4 <sav_begin_data+0x3c0>
   1787c:	mov	r3, r5
   17880:	add	r6, r6, #1
   17884:	b	17770 <sav_begin_data+0xa6c>
   17888:	mov	r2, #1
   1788c:	ldr	r1, [sp, #16]
   17890:	mov	r0, r4
   17894:	bl	44a4 <readstat_write_bytes@plt>
   17898:	subs	r5, r0, #0
   1789c:	beq	17838 <sav_begin_data+0xb34>
   178a0:	b	170c4 <sav_begin_data+0x3c0>
   178a4:	mov	r1, r5
   178a8:	mov	r0, r4
   178ac:	bl	43cc <readstat_get_variable@plt>
   178b0:	ldr	r3, [r0, #1600]	; 0x640
   178b4:	mov	r9, r0
   178b8:	cmp	r3, #255	; 0xff
   178bc:	bls	1790c <sav_begin_data+0xc08>
   178c0:	ldr	r3, [sp, #20]
   178c4:	ldr	r0, [sp, #16]
   178c8:	mla	r1, r8, r5, r3
   178cc:	bl	16558 <sav_format_variable_name.constprop.5>
   178d0:	ldr	r0, [r9, #1600]	; 0x640
   178d4:	ldr	r1, [pc, #956]	; 17c98 <sav_begin_data+0xf94>
   178d8:	bl	20808 <__aeabi_uidivmod>
   178dc:	ldr	r3, [sp, #16]
   178e0:	mov	r2, r7
   178e4:	mov	r0, r6
   178e8:	str	r1, [sp]
   178ec:	mov	r1, #15
   178f0:	bl	42c4 <snprintf@plt>
   178f4:	mov	r0, r6
   178f8:	bl	424c <strlen@plt>
   178fc:	ldr	r3, [sp, #148]	; 0x94
   17900:	add	r3, r3, #2
   17904:	add	r0, r3, r0
   17908:	str	r0, [sp, #148]	; 0x94
   1790c:	add	r5, r5, #1
   17910:	ldr	r3, [r4, #28]
   17914:	cmp	r5, r3
   17918:	blt	178a4 <sav_begin_data+0xba0>
   1791c:	ldr	r3, [sp, #148]	; 0x94
   17920:	cmp	r3, #0
   17924:	beq	17960 <sav_begin_data+0xc5c>
   17928:	mov	r2, #16
   1792c:	ldr	r1, [sp, #12]
   17930:	mov	r0, r4
   17934:	bl	44a4 <readstat_write_bytes@plt>
   17938:	subs	r5, r0, #0
   1793c:	bne	170c4 <sav_begin_data+0x3c0>
   17940:	ldr	r9, [pc, #852]	; 17c9c <sav_begin_data+0xf98>
   17944:	mov	r6, r5
   17948:	add	r7, sp, #72	; 0x48
   1794c:	add	r9, pc, r9
   17950:	add	r8, sp, #88	; 0x58
   17954:	ldr	r3, [r4, #28]
   17958:	cmp	r6, r3
   1795c:	blt	1799c <sav_begin_data+0xc98>
   17960:	ldr	r2, [pc, #824]	; 17ca0 <sav_begin_data+0xf9c>
   17964:	ldr	lr, [sp, #12]
   17968:	add	r2, pc, r2
   1796c:	add	r3, r2, #128	; 0x80
   17970:	add	r2, r2, #144	; 0x90
   17974:	ldr	r0, [r3]
   17978:	ldr	r1, [r3, #4]
   1797c:	mov	ip, lr
   17980:	add	r3, r3, #8
   17984:	cmp	r3, r2
   17988:	stmia	ip!, {r0, r1}
   1798c:	mov	lr, ip
   17990:	bne	17974 <sav_begin_data+0xc70>
   17994:	mov	r5, #0
   17998:	b	17a4c <sav_begin_data+0xd48>
   1799c:	mov	r1, r6
   179a0:	mov	r0, r4
   179a4:	bl	43cc <readstat_get_variable@plt>
   179a8:	ldr	r3, [r0, #1600]	; 0x640
   179ac:	mov	sl, r0
   179b0:	cmp	r3, #255	; 0xff
   179b4:	bhi	179c0 <sav_begin_data+0xcbc>
   179b8:	add	r6, r6, #1
   179bc:	b	17954 <sav_begin_data+0xc50>
   179c0:	ldr	r3, [sp, #20]
   179c4:	mov	r5, #15
   179c8:	mov	r0, r7
   179cc:	mla	r1, r5, r6, r3
   179d0:	bl	16558 <sav_format_variable_name.constprop.5>
   179d4:	ldr	r0, [sl, #1600]	; 0x640
   179d8:	ldr	r1, [pc, #696]	; 17c98 <sav_begin_data+0xf94>
   179dc:	bl	20808 <__aeabi_uidivmod>
   179e0:	mov	r3, r7
   179e4:	mov	r2, r9
   179e8:	mov	r0, r8
   179ec:	str	r1, [sp]
   179f0:	mov	r1, r5
   179f4:	bl	42c4 <snprintf@plt>
   179f8:	mov	r1, r8
   179fc:	mov	r0, r4
   17a00:	bl	41a4 <readstat_write_string@plt>
   17a04:	subs	r5, r0, #0
   17a08:	bne	170c4 <sav_begin_data+0x3c0>
   17a0c:	mov	r2, #2
   17a10:	add	r1, sp, #60	; 0x3c
   17a14:	mov	r0, r4
   17a18:	bl	44a4 <readstat_write_bytes@plt>
   17a1c:	subs	r5, r0, #0
   17a20:	beq	179b8 <sav_begin_data+0xcb4>
   17a24:	b	170c4 <sav_begin_data+0x3c0>
   17a28:	mov	r1, r5
   17a2c:	mov	r0, r4
   17a30:	bl	4474 <readstat_get_label_set@plt>
   17a34:	mov	r7, r0
   17a38:	bl	161e4 <readstat_label_set_number_short_variables>
   17a3c:	ldr	r8, [r7, #276]	; 0x114
   17a40:	cmp	r0, r8
   17a44:	blt	17aa4 <sav_begin_data+0xda0>
   17a48:	add	r5, r5, #1
   17a4c:	ldr	r3, [r4, #40]	; 0x28
   17a50:	cmp	r5, r3
   17a54:	blt	17a28 <sav_begin_data+0xd24>
   17a58:	ldr	r3, [sp, #148]	; 0x94
   17a5c:	cmp	r3, #0
   17a60:	beq	17d48 <sav_begin_data+0x1044>
   17a64:	mov	r2, #16
   17a68:	ldr	r1, [sp, #12]
   17a6c:	mov	r0, r4
   17a70:	bl	44a4 <readstat_write_bytes@plt>
   17a74:	subs	r5, r0, #0
   17a78:	bne	170c4 <sav_begin_data+0x3c0>
   17a7c:	mov	r6, r5
   17a80:	mov	fp, r5
   17a84:	add	r3, sp, #88	; 0x58
   17a88:	str	r3, [sp, #32]
   17a8c:	ldr	r3, [r4, #40]	; 0x28
   17a90:	cmp	fp, r3
   17a94:	blt	17b3c <sav_begin_data+0xe38>
   17a98:	cmp	r6, #0
   17a9c:	bne	17d38 <sav_begin_data+0x1034>
   17aa0:	b	17d48 <sav_begin_data+0x1044>
   17aa4:	ldr	r9, [r7, #264]	; 0x108
   17aa8:	mov	r6, #0
   17aac:	cmp	r6, r8
   17ab0:	bge	17a48 <sav_begin_data+0xd44>
   17ab4:	mov	r1, r6
   17ab8:	mov	r0, r7
   17abc:	bl	4498 <readstat_get_label_set_variable@plt>
   17ac0:	mov	fp, r0
   17ac4:	add	r0, r0, #8
   17ac8:	bl	424c <strlen@plt>
   17acc:	mov	sl, r0
   17ad0:	mov	r0, fp
   17ad4:	bl	4318 <readstat_variable_get_storage_width@plt>
   17ad8:	cmp	r0, #8
   17adc:	mov	fp, r0
   17ae0:	bgt	17aec <sav_begin_data+0xde8>
   17ae4:	add	r6, r6, #1
   17ae8:	b	17aac <sav_begin_data+0xda8>
   17aec:	ldr	r0, [sp, #148]	; 0x94
   17af0:	add	r0, sl, r0
   17af4:	mov	sl, #0
   17af8:	add	r0, r0, #12
   17afc:	str	r0, [sp, #148]	; 0x94
   17b00:	cmp	r9, sl
   17b04:	ble	17ae4 <sav_begin_data+0xde0>
   17b08:	mov	r1, sl
   17b0c:	mov	r0, r7
   17b10:	bl	451c <readstat_get_value_label@plt>
   17b14:	ldr	r3, [sp, #148]	; 0x94
   17b18:	add	sl, sl, #1
   17b1c:	add	r3, fp, r3
   17b20:	add	r3, r3, #8
   17b24:	ldr	r2, [r0, #28]
   17b28:	cmp	r2, #120	; 0x78
   17b2c:	addle	r3, r3, r2
   17b30:	addgt	r3, r3, #120	; 0x78
   17b34:	str	r3, [sp, #148]	; 0x94
   17b38:	b	17b00 <sav_begin_data+0xdfc>
   17b3c:	mov	r1, fp
   17b40:	mov	r0, r4
   17b44:	bl	4474 <readstat_get_label_set@plt>
   17b48:	mov	r8, r0
   17b4c:	bl	161e4 <readstat_label_set_number_short_variables>
   17b50:	ldr	r3, [r8, #276]	; 0x114
   17b54:	str	r3, [sp, #16]
   17b58:	cmp	r0, r3
   17b5c:	bge	17b80 <sav_begin_data+0xe7c>
   17b60:	ldr	r3, [r8, #264]	; 0x108
   17b64:	mov	r7, #0
   17b68:	str	r3, [sp, #56]	; 0x38
   17b6c:	add	r3, sp, #60	; 0x3c
   17b70:	str	r3, [sp, #28]
   17b74:	ldr	r3, [sp, #16]
   17b78:	cmp	r7, r3
   17b7c:	blt	17b88 <sav_begin_data+0xe84>
   17b80:	add	fp, fp, #1
   17b84:	b	17a8c <sav_begin_data+0xd88>
   17b88:	mov	r1, r7
   17b8c:	mov	r0, r8
   17b90:	bl	4498 <readstat_get_label_set_variable@plt>
   17b94:	add	r9, r0, #8
   17b98:	mov	sl, r0
   17b9c:	mov	r0, r9
   17ba0:	bl	424c <strlen@plt>
   17ba4:	str	r0, [sp, #60]	; 0x3c
   17ba8:	mov	r0, sl
   17bac:	bl	4318 <readstat_variable_get_storage_width@plt>
   17bb0:	cmp	r0, #8
   17bb4:	mov	r1, r0
   17bb8:	str	r0, [sp, #72]	; 0x48
   17bbc:	ble	17c50 <sav_begin_data+0xf4c>
   17bc0:	mov	r0, r6
   17bc4:	bl	403c <realloc@plt>
   17bc8:	ldr	r2, [sp, #72]	; 0x48
   17bcc:	mov	r1, #32
   17bd0:	mov	r6, r0
   17bd4:	bl	42e8 <memset@plt>
   17bd8:	mov	r2, #4
   17bdc:	ldr	r1, [sp, #28]
   17be0:	mov	r0, r4
   17be4:	bl	44a4 <readstat_write_bytes@plt>
   17be8:	cmp	r0, #0
   17bec:	bne	17d34 <sav_begin_data+0x1030>
   17bf0:	ldr	r2, [sp, #60]	; 0x3c
   17bf4:	mov	r1, r9
   17bf8:	mov	r0, r4
   17bfc:	bl	44a4 <readstat_write_bytes@plt>
   17c00:	cmp	r0, #0
   17c04:	bne	17d34 <sav_begin_data+0x1030>
   17c08:	add	r3, sp, #72	; 0x48
   17c0c:	mov	r2, #4
   17c10:	mov	r1, r3
   17c14:	mov	r0, r4
   17c18:	str	r3, [sp, #24]
   17c1c:	bl	44a4 <readstat_write_bytes@plt>
   17c20:	cmp	r0, #0
   17c24:	bne	17d34 <sav_begin_data+0x1030>
   17c28:	mov	r2, #4
   17c2c:	add	r1, sp, #56	; 0x38
   17c30:	mov	r0, r4
   17c34:	bl	44a4 <readstat_write_bytes@plt>
   17c38:	cmp	r0, #0
   17c3c:	bne	17d34 <sav_begin_data+0x1030>
   17c40:	mov	r9, r0
   17c44:	ldr	r3, [sp, #56]	; 0x38
   17c48:	cmp	r9, r3
   17c4c:	blt	17cb0 <sav_begin_data+0xfac>
   17c50:	add	r7, r7, #1
   17c54:	b	17b74 <sav_begin_data+0xe70>
   17c58:	.word	0x0000bfd6
   17c5c:	.word	0x0000bfd7
   17c60:	.word	0x0000bfd9
   17c64:	.word	0x0000bea9
   17c68:	.word	0x324c4624
   17c6c:	.word	0x0000befa
   17c70:	.word	0x40590000
   17c74:	.word	0x0000bd8e
   17c78:	.word	0x0000ac9c
   17c7c:	.word	0x0000bab9
   17c80:	.word	0x0000fde9
   17c84:	.word	0x0000ba11
   17c88:	.word	0x7fefffff
   17c8c:	.word	0x0000b90d
   17c90:	.word	0x0000b4c9
   17c94:	.word	0x0000b5a6
   17c98:	.word	0x000186a0
   17c9c:	.word	0x0000b426
   17ca0:	.word	0x0000b2e5
   17ca4:	.word	0x0000aefd
   17ca8:	.word	0x0000ae69
   17cac:	.word	0x000003e7
   17cb0:	mov	r1, r9
   17cb4:	mov	r0, r8
   17cb8:	bl	451c <readstat_get_value_label@plt>
   17cbc:	ldr	r1, [sp, #24]
   17cc0:	ldr	r2, [r0, #28]
   17cc4:	ldr	r3, [r0, #20]
   17cc8:	cmp	r2, #121	; 0x79
   17ccc:	movge	r2, #120	; 0x78
   17cd0:	str	r2, [sp, #88]	; 0x58
   17cd4:	mov	sl, r0
   17cd8:	mov	r2, #4
   17cdc:	mov	r0, r4
   17ce0:	str	r3, [sp, #36]	; 0x24
   17ce4:	bl	44a4 <readstat_write_bytes@plt>
   17ce8:	cmp	r0, #0
   17cec:	bne	17d34 <sav_begin_data+0x1030>
   17cf0:	ldr	r3, [sp, #36]	; 0x24
   17cf4:	ldr	r1, [sl, #16]
   17cf8:	mov	r2, r3
   17cfc:	mov	r0, r4
   17d00:	bl	44a4 <readstat_write_bytes@plt>
   17d04:	cmp	r0, #0
   17d08:	bne	17d34 <sav_begin_data+0x1030>
   17d0c:	ldr	r2, [sp, #72]	; 0x48
   17d10:	ldr	r3, [sp, #36]	; 0x24
   17d14:	cmp	r3, r2
   17d18:	blt	17e98 <sav_begin_data+0x1194>
   17d1c:	mov	r2, #4
   17d20:	ldr	r1, [sp, #32]
   17d24:	mov	r0, r4
   17d28:	bl	44a4 <readstat_write_bytes@plt>
   17d2c:	cmp	r0, #0
   17d30:	beq	17eb4 <sav_begin_data+0x11b0>
   17d34:	mov	r5, r0
   17d38:	mov	r0, r6
   17d3c:	bl	3f04 <free@plt>
   17d40:	cmp	r5, #0
   17d44:	bne	170c4 <sav_begin_data+0x3c0>
   17d48:	ldr	r2, [pc, #-172]	; 17ca4 <sav_begin_data+0xfa0>
   17d4c:	ldr	lr, [sp, #12]
   17d50:	add	r2, pc, r2
   17d54:	add	r3, r2, #80	; 0x50
   17d58:	add	r2, r2, #96	; 0x60
   17d5c:	ldr	r0, [r3]
   17d60:	ldr	r1, [r3, #4]
   17d64:	mov	ip, lr
   17d68:	add	r3, r3, #8
   17d6c:	cmp	r3, r2
   17d70:	stmia	ip!, {r0, r1}
   17d74:	mov	lr, ip
   17d78:	bne	17d5c <sav_begin_data+0x1058>
   17d7c:	ldr	r3, [r4, #28]
   17d80:	mov	sl, #0
   17d84:	add	r6, sp, #88	; 0x58
   17d88:	str	r3, [sp, #16]
   17d8c:	add	r3, sp, #72	; 0x48
   17d90:	str	r3, [sp, #24]
   17d94:	ldr	r3, [sp, #16]
   17d98:	cmp	r3, sl
   17d9c:	bgt	17ed4 <sav_begin_data+0x11d0>
   17da0:	ldr	r3, [sp, #148]	; 0x94
   17da4:	cmp	r3, #0
   17da8:	beq	17ddc <sav_begin_data+0x10d8>
   17dac:	mov	r2, #16
   17db0:	ldr	r1, [sp, #12]
   17db4:	mov	r0, r4
   17db8:	bl	44a4 <readstat_write_bytes@plt>
   17dbc:	subs	r5, r0, #0
   17dc0:	moveq	r9, r5
   17dc4:	addeq	r6, sp, #72	; 0x48
   17dc8:	addeq	r7, sp, #88	; 0x58
   17dcc:	bne	170c4 <sav_begin_data+0x3c0>
   17dd0:	ldr	r3, [sp, #16]
   17dd4:	cmp	r3, r9
   17dd8:	bgt	17f98 <sav_begin_data+0x1294>
   17ddc:	ldr	r2, [pc, #-316]	; 17ca8 <sav_begin_data+0xfa4>
   17de0:	ldr	lr, [sp, #12]
   17de4:	add	r2, pc, r2
   17de8:	add	r3, r2, #144	; 0x90
   17dec:	add	r2, r2, #160	; 0xa0
   17df0:	ldr	r0, [r3]
   17df4:	ldr	r1, [r3, #4]
   17df8:	mov	ip, lr
   17dfc:	add	r3, r3, #8
   17e00:	cmp	r3, r2
   17e04:	stmia	ip!, {r0, r1}
   17e08:	mov	lr, ip
   17e0c:	bne	17df0 <sav_begin_data+0x10ec>
   17e10:	mov	r2, #1
   17e14:	mov	r3, #0
   17e18:	ldr	r1, [sp, #12]
   17e1c:	strd	r2, [sp, #72]	; 0x48
   17e20:	ldr	r2, [r4, #80]	; 0x50
   17e24:	mov	r0, r4
   17e28:	asr	r3, r2, #31
   17e2c:	strd	r2, [sp, #88]	; 0x58
   17e30:	mov	r2, #16
   17e34:	bl	44a4 <readstat_write_bytes@plt>
   17e38:	subs	r5, r0, #0
   17e3c:	bne	170c4 <sav_begin_data+0x3c0>
   17e40:	mov	r2, #8
   17e44:	add	r1, sp, #72	; 0x48
   17e48:	mov	r0, r4
   17e4c:	bl	44a4 <readstat_write_bytes@plt>
   17e50:	subs	r5, r0, #0
   17e54:	bne	170c4 <sav_begin_data+0x3c0>
   17e58:	mov	r2, #8
   17e5c:	add	r1, sp, #88	; 0x58
   17e60:	mov	r0, r4
   17e64:	bl	44a4 <readstat_write_bytes@plt>
   17e68:	subs	r5, r0, #0
   17e6c:	bne	170c4 <sav_begin_data+0x3c0>
   17e70:	ldr	r3, [sp, #12]
   17e74:	mov	r2, #8
   17e78:	ldr	r1, [sp, #12]
   17e7c:	str	r5, [r3, #4]
   17e80:	ldr	r3, [pc, #-476]	; 17cac <sav_begin_data+0xfa8>
   17e84:	mov	r0, r4
   17e88:	str	r3, [sp, #136]	; 0x88
   17e8c:	bl	44a4 <readstat_write_bytes@plt>
   17e90:	mov	r5, r0
   17e94:	b	170c4 <sav_begin_data+0x3c0>
   17e98:	sub	r2, r2, r3
   17e9c:	mov	r1, r6
   17ea0:	mov	r0, r4
   17ea4:	bl	44a4 <readstat_write_bytes@plt>
   17ea8:	cmp	r0, #0
   17eac:	beq	17d1c <sav_begin_data+0x1018>
   17eb0:	b	17d34 <sav_begin_data+0x1030>
   17eb4:	ldr	r2, [sp, #88]	; 0x58
   17eb8:	ldr	r1, [sl, #24]
   17ebc:	mov	r0, r4
   17ec0:	bl	44a4 <readstat_write_bytes@plt>
   17ec4:	cmp	r0, #0
   17ec8:	bne	17d34 <sav_begin_data+0x1030>
   17ecc:	add	r9, r9, #1
   17ed0:	b	17c44 <sav_begin_data+0xf40>
   17ed4:	mov	r1, sl
   17ed8:	mov	r0, r4
   17edc:	bl	43cc <readstat_get_variable@plt>
   17ee0:	mov	r9, r0
   17ee4:	add	r0, r0, #8
   17ee8:	bl	424c <strlen@plt>
   17eec:	mov	r5, r0
   17ef0:	mov	r0, r9
   17ef4:	bl	4318 <readstat_variable_get_storage_width@plt>
   17ef8:	cmp	r0, #8
   17efc:	movgt	r7, #0
   17f00:	movgt	r8, r7
   17f04:	bgt	17f6c <sav_begin_data+0x1268>
   17f08:	add	sl, sl, #1
   17f0c:	b	17d94 <sav_begin_data+0x1090>
   17f10:	mov	r2, r8
   17f14:	mov	r1, r9
   17f18:	ldr	r0, [sp, #24]
   17f1c:	bl	3f88 <readstat_variable_get_missing_range_lo@plt>
   17f20:	mov	r2, r8
   17f24:	mov	r1, r9
   17f28:	mov	r0, r6
   17f2c:	bl	4378 <readstat_variable_get_missing_range_hi@plt>
   17f30:	ldr	r3, [sp, #24]
   17f34:	ldm	r3, {r0, r1, r2, r3}
   17f38:	bl	3ff4 <readstat_string_value@plt>
   17f3c:	mov	fp, r0
   17f40:	ldm	r6, {r0, r1, r2, r3}
   17f44:	bl	3ff4 <readstat_string_value@plt>
   17f48:	cmp	fp, #0
   17f4c:	cmpne	r0, #0
   17f50:	mov	r1, r0
   17f54:	beq	17f68 <sav_begin_data+0x1264>
   17f58:	mov	r0, fp
   17f5c:	bl	3e44 <strcmp@plt>
   17f60:	cmp	r0, #0
   17f64:	addeq	r7, r7, #1
   17f68:	add	r8, r8, #1
   17f6c:	mov	r0, r9
   17f70:	bl	4354 <readstat_variable_get_missing_ranges_count@plt>
   17f74:	cmp	r8, r0
   17f78:	blt	17f10 <sav_begin_data+0x120c>
   17f7c:	cmp	r7, #0
   17f80:	ldrne	r3, [sp, #148]	; 0x94
   17f84:	addne	r5, r5, r3
   17f88:	addne	r5, r5, #9
   17f8c:	addne	r7, r5, r7, lsl #3
   17f90:	strne	r7, [sp, #148]	; 0x94
   17f94:	b	17f08 <sav_begin_data+0x1204>
   17f98:	mov	r1, r9
   17f9c:	mov	r0, r4
   17fa0:	bl	43cc <readstat_get_variable@plt>
   17fa4:	mov	r5, #0
   17fa8:	add	sl, r0, #8
   17fac:	mov	r8, r0
   17fb0:	mov	r0, sl
   17fb4:	bl	424c <strlen@plt>
   17fb8:	strb	r5, [sp, #55]	; 0x37
   17fbc:	str	r0, [sp, #56]	; 0x38
   17fc0:	mov	r0, r8
   17fc4:	bl	4318 <readstat_variable_get_storage_width@plt>
   17fc8:	cmp	r0, #8
   17fcc:	ble	1806c <sav_begin_data+0x1368>
   17fd0:	mov	r0, r8
   17fd4:	bl	4354 <readstat_variable_get_missing_ranges_count@plt>
   17fd8:	cmp	r5, r0
   17fdc:	blt	18074 <sav_begin_data+0x1370>
   17fe0:	ldrsb	r3, [sp, #55]	; 0x37
   17fe4:	add	fp, sp, #55	; 0x37
   17fe8:	cmp	r3, #0
   17fec:	beq	1806c <sav_begin_data+0x1368>
   17ff0:	mov	r2, #4
   17ff4:	add	r1, sp, #56	; 0x38
   17ff8:	mov	r0, r4
   17ffc:	bl	44a4 <readstat_write_bytes@plt>
   18000:	subs	r5, r0, #0
   18004:	bne	170c4 <sav_begin_data+0x3c0>
   18008:	ldr	r2, [sp, #56]	; 0x38
   1800c:	mov	r1, sl
   18010:	mov	r0, r4
   18014:	bl	44a4 <readstat_write_bytes@plt>
   18018:	subs	r5, r0, #0
   1801c:	bne	170c4 <sav_begin_data+0x3c0>
   18020:	mov	r2, #1
   18024:	mov	r1, fp
   18028:	mov	r0, r4
   1802c:	bl	44a4 <readstat_write_bytes@plt>
   18030:	subs	r5, r0, #0
   18034:	bne	170c4 <sav_begin_data+0x3c0>
   18038:	add	r1, sp, #312	; 0x138
   1803c:	mov	r3, #8
   18040:	str	r3, [r1, #-252]!	; 0xffffff04
   18044:	mov	r2, #4
   18048:	mov	r0, r4
   1804c:	bl	44a4 <readstat_write_bytes@plt>
   18050:	subs	r5, r0, #0
   18054:	bne	170c4 <sav_begin_data+0x3c0>
   18058:	mov	sl, r5
   1805c:	mov	r0, r8
   18060:	bl	4354 <readstat_variable_get_missing_ranges_count@plt>
   18064:	cmp	sl, r0
   18068:	blt	180d8 <sav_begin_data+0x13d4>
   1806c:	add	r9, r9, #1
   18070:	b	17dd0 <sav_begin_data+0x10cc>
   18074:	mov	r2, r5
   18078:	mov	r1, r8
   1807c:	mov	r0, r6
   18080:	bl	3f88 <readstat_variable_get_missing_range_lo@plt>
   18084:	mov	r2, r5
   18088:	mov	r1, r8
   1808c:	mov	r0, r7
   18090:	bl	4378 <readstat_variable_get_missing_range_hi@plt>
   18094:	ldm	r6, {r0, r1, r2, r3}
   18098:	bl	3ff4 <readstat_string_value@plt>
   1809c:	mov	fp, r0
   180a0:	ldm	r7, {r0, r1, r2, r3}
   180a4:	bl	3ff4 <readstat_string_value@plt>
   180a8:	cmp	fp, #0
   180ac:	cmpne	r0, #0
   180b0:	mov	r1, r0
   180b4:	beq	180d0 <sav_begin_data+0x13cc>
   180b8:	mov	r0, fp
   180bc:	bl	3e44 <strcmp@plt>
   180c0:	cmp	r0, #0
   180c4:	ldrbeq	r3, [sp, #55]	; 0x37
   180c8:	addeq	r3, r3, #1
   180cc:	strbeq	r3, [sp, #55]	; 0x37
   180d0:	add	r5, r5, #1
   180d4:	b	17fd0 <sav_begin_data+0x12cc>
   180d8:	mov	r2, sl
   180dc:	mov	r1, r8
   180e0:	mov	r0, r6
   180e4:	bl	3f88 <readstat_variable_get_missing_range_lo@plt>
   180e8:	mov	r2, sl
   180ec:	mov	r1, r8
   180f0:	mov	r0, r7
   180f4:	bl	4378 <readstat_variable_get_missing_range_hi@plt>
   180f8:	ldm	r6, {r0, r1, r2, r3}
   180fc:	bl	3ff4 <readstat_string_value@plt>
   18100:	mov	r5, r0
   18104:	ldm	r7, {r0, r1, r2, r3}
   18108:	bl	3ff4 <readstat_string_value@plt>
   1810c:	cmp	r5, #0
   18110:	cmpne	r0, #0
   18114:	mov	r1, r0
   18118:	bne	18124 <sav_begin_data+0x1420>
   1811c:	add	sl, sl, #1
   18120:	b	1805c <sav_begin_data+0x1358>
   18124:	mov	r0, r5
   18128:	bl	3e44 <strcmp@plt>
   1812c:	cmp	r0, #0
   18130:	bne	1811c <sav_begin_data+0x1418>
   18134:	mov	r1, r5
   18138:	ldr	r2, [sp, #60]	; 0x3c
   1813c:	mov	r0, r4
   18140:	bl	45a0 <readstat_write_space_padded_string@plt>
   18144:	subs	r5, r0, #0
   18148:	beq	1811c <sav_begin_data+0x1418>
   1814c:	b	170c4 <sav_begin_data+0x3c0>
   18150:	cmp	r3, #2
   18154:	bne	170f0 <sav_begin_data+0x3ec>
   18158:	ldr	r2, [r4, #4]
   1815c:	mov	r3, #0
   18160:	bl	40fc <zsav_ctx_init@plt>
   18164:	b	170ec <sav_begin_data+0x3e8>
   18168:	mov	r5, #32
   1816c:	b	170c4 <sav_begin_data+0x3c0>

00018170 <readstat_begin_writing_sav>:
   18170:	ldr	ip, [pc, #288]	; 18298 <readstat_begin_writing_sav+0x128>
   18174:	ldr	r3, [pc, #288]	; 1829c <readstat_begin_writing_sav+0x12c>
   18178:	add	ip, pc, ip
   1817c:	str	ip, [r0, #292]	; 0x124
   18180:	ldr	ip, [pc, #280]	; 182a0 <readstat_begin_writing_sav+0x130>
   18184:	add	r3, pc, r3
   18188:	add	ip, pc, ip
   1818c:	str	ip, [r0, #228]	; 0xe4
   18190:	ldr	ip, [pc, #268]	; 182a4 <readstat_begin_writing_sav+0x134>
   18194:	add	ip, pc, ip
   18198:	str	ip, [r0, #232]	; 0xe8
   1819c:	ldr	ip, [pc, #260]	; 182a8 <readstat_begin_writing_sav+0x138>
   181a0:	add	ip, pc, ip
   181a4:	str	ip, [r0, #236]	; 0xec
   181a8:	ldr	ip, [pc, #252]	; 182ac <readstat_begin_writing_sav+0x13c>
   181ac:	add	ip, pc, ip
   181b0:	str	ip, [r0, #240]	; 0xf0
   181b4:	ldr	ip, [pc, #244]	; 182b0 <readstat_begin_writing_sav+0x140>
   181b8:	add	ip, pc, ip
   181bc:	str	ip, [r0, #244]	; 0xf4
   181c0:	ldr	ip, [pc, #236]	; 182b4 <readstat_begin_writing_sav+0x144>
   181c4:	add	ip, pc, ip
   181c8:	str	ip, [r0, #248]	; 0xf8
   181cc:	ldr	ip, [pc, #228]	; 182b8 <readstat_begin_writing_sav+0x148>
   181d0:	add	ip, pc, ip
   181d4:	str	ip, [r0, #252]	; 0xfc
   181d8:	ldr	ip, [pc, #220]	; 182bc <readstat_begin_writing_sav+0x14c>
   181dc:	add	ip, pc, ip
   181e0:	str	ip, [r0, #256]	; 0x100
   181e4:	ldr	ip, [pc, #212]	; 182c0 <readstat_begin_writing_sav+0x150>
   181e8:	add	ip, pc, ip
   181ec:	str	ip, [r0, #264]	; 0x108
   181f0:	ldr	ip, [pc, #204]	; 182c4 <readstat_begin_writing_sav+0x154>
   181f4:	add	ip, pc, ip
   181f8:	str	ip, [r0, #268]	; 0x10c
   181fc:	ldr	ip, [pc, #196]	; 182c8 <readstat_begin_writing_sav+0x158>
   18200:	add	ip, pc, ip
   18204:	str	ip, [r0, #276]	; 0x114
   18208:	ldr	ip, [r0, #8]
   1820c:	cmp	ip, #3
   18210:	moveq	ip, #2
   18214:	streq	ip, [r0, #16]
   18218:	beq	18238 <readstat_begin_writing_sav+0xc8>
   1821c:	cmp	ip, #0
   18220:	bne	18238 <readstat_begin_writing_sav+0xc8>
   18224:	ldr	ip, [r0, #16]
   18228:	cmp	ip, #2
   1822c:	moveq	ip, #3
   18230:	movne	ip, #2
   18234:	str	ip, [r0, #8]
   18238:	ldr	ip, [r0, #16]
   1823c:	cmp	ip, #1
   18240:	bne	18260 <readstat_begin_writing_sav+0xf0>
   18244:	ldr	ip, [pc, #128]	; 182cc <readstat_begin_writing_sav+0x15c>
   18248:	add	ip, pc, ip
   1824c:	str	ip, [r0, #280]	; 0x118
   18250:	ldr	ip, [pc, #120]	; 182d0 <readstat_begin_writing_sav+0x160>
   18254:	ldr	r3, [r3, ip]
   18258:	str	r3, [r0, #288]	; 0x120
   1825c:	b	3fac <readstat_begin_writing_file@plt>
   18260:	cmp	ip, #2
   18264:	bne	18288 <readstat_begin_writing_sav+0x118>
   18268:	ldr	ip, [pc, #100]	; 182d4 <readstat_begin_writing_sav+0x164>
   1826c:	ldr	ip, [r3, ip]
   18270:	str	ip, [r0, #280]	; 0x118
   18274:	ldr	ip, [pc, #92]	; 182d8 <readstat_begin_writing_sav+0x168>
   18278:	ldr	ip, [r3, ip]
   1827c:	str	ip, [r0, #284]	; 0x11c
   18280:	ldr	ip, [pc, #84]	; 182dc <readstat_begin_writing_sav+0x16c>
   18284:	b	18254 <readstat_begin_writing_sav+0xe4>
   18288:	cmp	ip, #0
   1828c:	beq	1825c <readstat_begin_writing_sav+0xec>
   18290:	mov	r0, #6
   18294:	bx	lr
   18298:	.word	0xffffde34
   1829c:	.word	0x00028e74
   182a0:	.word	0xffffe098
   182a4:	.word	0xffffe17c
   182a8:	.word	0xffffe00c
   182ac:	.word	0xffffdfd0
   182b0:	.word	0xffffdf94
   182b4:	.word	0xffffdf5c
   182b8:	.word	0xffffdf28
   182bc:	.word	0xffffe0a8
   182c0:	.word	0xffffdec8
   182c4:	.word	0xffffded4
   182c8:	.word	0xffffeafc
   182cc:	.word	0xffffdd98
   182d0:	.word	0x000002d8
   182d4:	.word	0x000002e4
   182d8:	.word	0x000002ec
   182dc:	.word	0x000002d4

000182e0 <spss_boxed_missing_value>:
   182e0:	push	{r4, r5, r6, r7, r8, lr}
   182e4:	vpush	{d8}
   182e8:	ldr	r8, [r1]
   182ec:	mov	r5, r0
   182f0:	cmp	r8, #5
   182f4:	sub	sp, sp, #16
   182f8:	mov	r6, r1
   182fc:	mov	r7, r2
   18300:	mov	r4, sp
   18304:	bne	18354 <spss_boxed_missing_value+0x74>
   18308:	add	r6, r1, r2, lsl #3
   1830c:	mov	r0, sp
   18310:	mov	r2, #16
   18314:	mov	r1, #0
   18318:	vldr	d8, [r6, #64]	; 0x40
   1831c:	bl	42e8 <memset@plt>
   18320:	str	r8, [sp, #8]
   18324:	vcmp.f64	d8, d8
   18328:	vstr	d8, [sp]
   1832c:	vmrs	APSR_nzcv, fpscr
   18330:	movvs	r3, #1
   18334:	movvc	r3, #0
   18338:	strb	r3, [sp, #13]
   1833c:	ldm	r4, {r0, r1, r2, r3}
   18340:	stm	r5, {r0, r1, r2, r3}
   18344:	mov	r0, r5
   18348:	add	sp, sp, #16
   1834c:	vpop	{d8}
   18350:	pop	{r4, r5, r6, r7, r8, pc}
   18354:	add	r7, r7, r7, lsl #5
   18358:	add	r7, r7, #88	; 0x58
   1835c:	mov	r2, #16
   18360:	mov	r1, #0
   18364:	mov	r0, sp
   18368:	add	r6, r6, r7
   1836c:	bl	42e8 <memset@plt>
   18370:	str	r6, [sp]
   18374:	b	1833c <spss_boxed_missing_value+0x5c>

00018378 <spss_format>:
   18378:	push	{r0, r1, r2, lr}
   1837c:	ldr	lr, [r2]
   18380:	cmp	lr, #41	; 0x29
   18384:	movhi	r0, #0
   18388:	bhi	183e0 <spss_format+0x68>
   1838c:	ldr	r3, [pc, #128]	; 18414 <spss_format+0x9c>
   18390:	add	r3, pc, r3
   18394:	ldrb	ip, [r3, lr, lsl #4]
   18398:	cmp	ip, #0
   1839c:	moveq	r0, ip
   183a0:	beq	183e0 <spss_format+0x68>
   183a4:	ldr	ip, [r2, #8]
   183a8:	add	r3, r3, lr, lsl #4
   183ac:	sub	lr, lr, #5
   183b0:	clz	lr, lr
   183b4:	lsr	lr, lr, #5
   183b8:	cmp	ip, #0
   183bc:	orrne	lr, lr, #1
   183c0:	cmp	lr, #0
   183c4:	ldr	r2, [r2, #4]
   183c8:	beq	183e8 <spss_format+0x70>
   183cc:	stm	sp, {r2, ip}
   183d0:	ldr	r2, [pc, #64]	; 18418 <spss_format+0xa0>
   183d4:	add	r2, pc, r2
   183d8:	bl	42c4 <snprintf@plt>
   183dc:	mov	r0, #1
   183e0:	add	sp, sp, #12
   183e4:	pop	{pc}		; (ldr pc, [sp], #4)
   183e8:	cmp	r2, #0
   183ec:	beq	18404 <spss_format+0x8c>
   183f0:	str	r2, [sp]
   183f4:	ldr	r2, [pc, #32]	; 1841c <spss_format+0xa4>
   183f8:	add	r2, pc, r2
   183fc:	bl	42c4 <snprintf@plt>
   18400:	b	183dc <spss_format+0x64>
   18404:	ldr	r2, [pc, #20]	; 18420 <spss_format+0xa8>
   18408:	add	r2, pc, r2
   1840c:	bl	42c4 <snprintf@plt>
   18410:	b	183dc <spss_format+0x64>
   18414:	.word	0x0002a6f4
   18418:	.word	0x000098cd
   1841c:	.word	0x000098b1
   18420:	.word	0x0000a466

00018424 <spss_varinfo_compare>:
   18424:	ldr	r3, [r1]
   18428:	ldr	r2, [r0]
   1842c:	ldr	r3, [r3, #12]
   18430:	cmp	r2, r3
   18434:	blt	18444 <spss_varinfo_compare+0x20>
   18438:	movgt	r0, #1
   1843c:	movle	r0, #0
   18440:	bx	lr
   18444:	mvn	r0, #0
   18448:	bx	lr

0001844c <spss_varinfo_free>:
   1844c:	push	{r4, lr}
   18450:	subs	r4, r0, #0
   18454:	popeq	{r4, pc}
   18458:	ldr	r0, [r4, #264]	; 0x108
   1845c:	cmp	r0, #0
   18460:	beq	18468 <spss_varinfo_free+0x1c>
   18464:	bl	3f04 <free@plt>
   18468:	mov	r0, r4
   1846c:	pop	{r4, lr}
   18470:	b	3f04 <free@plt>

00018474 <spss_64bit_value>:
   18474:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   18478:	add	ip, sp, #8
   1847c:	stm	ip, {r0, r1, r2, r3}
   18480:	ldm	ip, {r0, r1, r2, r3}
   18484:	bl	4204 <readstat_double_value@plt>
   18488:	vldr	d7, [pc, #96]	; 184f0 <spss_64bit_value+0x7c>
   1848c:	vabs.f64	d6, d0
   18490:	vstr	d0, [sp]
   18494:	vcmp.f64	d6, d7
   18498:	vmrs	APSR_nzcv, fpscr
   1849c:	ble	184d4 <spss_64bit_value+0x60>
   184a0:	vldr	d7, [sp]
   184a4:	vcmpe.f64	d7, #0.0
   184a8:	vmrs	APSR_nzcv, fpscr
   184ac:	bmi	184cc <spss_64bit_value+0x58>
   184b0:	mvn	r0, #0
   184b4:	ldr	r1, [pc, #60]	; 184f8 <spss_64bit_value+0x84>
   184b8:	b	184c4 <spss_64bit_value+0x50>
   184bc:	mvn	r0, #0
   184c0:	mvn	r1, #1048576	; 0x100000
   184c4:	add	sp, sp, #28
   184c8:	pop	{pc}		; (ldr pc, [sp], #4)
   184cc:	mvn	r0, #1
   184d0:	b	184c0 <spss_64bit_value+0x4c>
   184d4:	vldr	d7, [sp]
   184d8:	vcmp.f64	d7, d7
   184dc:	vmrs	APSR_nzcv, fpscr
   184e0:	bvs	184bc <spss_64bit_value+0x48>
   184e4:	ldrd	r0, [sp]
   184e8:	b	184c4 <spss_64bit_value+0x50>
   184ec:	nop			; (mov r0, r0)
   184f0:	.word	0xffffffff
   184f4:	.word	0x7fefffff
   184f8:	.word	0x7fefffff

000184fc <spss_missingness_for_info>:
   184fc:	push	{r4, r5, r6, r7, r8, r9, lr}
   18500:	mov	r4, r1
   18504:	sub	sp, sp, #524	; 0x20c
   18508:	mov	r8, r0
   1850c:	mov	r2, #520	; 0x208
   18510:	mov	r1, #0
   18514:	mov	r0, sp
   18518:	bl	42e8 <memset@plt>
   1851c:	ldr	r6, [r4, #56]	; 0x38
   18520:	mov	r7, sp
   18524:	cmp	r6, #0
   18528:	beq	185a0 <spss_missingness_for_info+0xa4>
   1852c:	mov	r5, #1
   18530:	mov	r2, #0
   18534:	mov	r1, r4
   18538:	mov	r0, sp
   1853c:	str	r5, [sp, #512]	; 0x200
   18540:	bl	182e0 <spss_boxed_missing_value>
   18544:	mov	r2, r5
   18548:	mov	r1, r4
   1854c:	add	r0, sp, #16
   18550:	bl	182e0 <spss_boxed_missing_value>
   18554:	ldr	r3, [r4, #52]	; 0x34
   18558:	cmp	r3, #3
   1855c:	bne	18584 <spss_missingness_for_info+0x88>
   18560:	mov	r1, r4
   18564:	add	r4, sp, #48	; 0x30
   18568:	mov	r2, #2
   1856c:	mov	r0, r4
   18570:	str	r2, [sp, #512]	; 0x200
   18574:	bl	182e0 <spss_boxed_missing_value>
   18578:	ldm	r4, {r0, r1, r2, r3}
   1857c:	add	ip, sp, #32
   18580:	stm	ip, {r0, r1, r2, r3}
   18584:	mov	r2, #520	; 0x208
   18588:	mov	r1, r7
   1858c:	mov	r0, r8
   18590:	bl	3f64 <memcpy@plt>
   18594:	mov	r0, r8
   18598:	add	sp, sp, #524	; 0x20c
   1859c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   185a0:	ldr	r3, [r4, #52]	; 0x34
   185a4:	cmp	r3, #0
   185a8:	strgt	r3, [sp, #512]	; 0x200
   185ac:	movgt	r9, #1
   185b0:	ble	18584 <spss_missingness_for_info+0x88>
   185b4:	ldr	r3, [r4, #52]	; 0x34
   185b8:	cmp	r6, r3
   185bc:	bge	18584 <spss_missingness_for_info+0x88>
   185c0:	lsl	r5, r9, #4
   185c4:	add	r3, sp, #520	; 0x208
   185c8:	add	r0, r3, r5
   185cc:	mov	r2, r6
   185d0:	mov	r1, r4
   185d4:	sub	r0, r0, #520	; 0x208
   185d8:	bl	182e0 <spss_boxed_missing_value>
   185dc:	add	r3, r7, r5
   185e0:	add	ip, r7, r6, lsl #5
   185e4:	ldm	r3, {r0, r1, r2, r3}
   185e8:	add	r6, r6, #1
   185ec:	add	r9, r9, #2
   185f0:	stm	ip, {r0, r1, r2, r3}
   185f4:	b	185b4 <spss_missingness_for_info+0xb8>

000185f8 <spss_init_variable_for_info>:
   185f8:	push	{r4, r5, r6, r7, lr}
   185fc:	mov	r5, r0
   18600:	sub	sp, sp, #532	; 0x214
   18604:	mov	r7, r1
   18608:	mov	r0, #1
   1860c:	ldr	r1, [pc, #208]	; 186e4 <spss_init_variable_for_info+0xec>
   18610:	mov	r6, r2
   18614:	bl	3d9c <calloc@plt>
   18618:	ldr	r3, [r5, #8]
   1861c:	mov	r1, #300	; 0x12c
   18620:	str	r3, [r0, #4]
   18624:	ldr	r3, [r5]
   18628:	str	r7, [r0, #2148]	; 0x864
   1862c:	str	r3, [r0]
   18630:	ldr	r3, [r5, #20]
   18634:	mov	r4, r0
   18638:	cmp	r3, #0
   1863c:	add	r0, r0, #8
   18640:	ldreq	r3, [r5, #16]
   18644:	lsleq	r3, r3, #3
   18648:	str	r3, [r0, #1588]	; 0x634
   1864c:	ldrb	r3, [r5, #196]	; 0xc4
   18650:	str	r6, [sp]
   18654:	cmp	r3, #0
   18658:	movne	r3, #65	; 0x41
   1865c:	moveq	r3, #9
   18660:	addne	r2, r5, #196	; 0xc4
   18664:	addeq	r2, r5, #187	; 0xbb
   18668:	bl	427c <readstat_convert@plt>
   1866c:	ldr	r3, [r5, #264]	; 0x108
   18670:	cmp	r3, #0
   18674:	beq	1868c <spss_init_variable_for_info+0x94>
   18678:	ldr	r2, [pc, #104]	; 186e8 <spss_init_variable_for_info+0xf0>
   1867c:	mov	r1, #1024	; 0x400
   18680:	add	r2, pc, r2
   18684:	add	r0, r4, #564	; 0x234
   18688:	bl	42c4 <snprintf@plt>
   1868c:	add	r2, r5, #24
   18690:	add	r6, sp, #8
   18694:	mov	r1, #256	; 0x100
   18698:	add	r0, r4, #308	; 0x134
   1869c:	bl	445c <spss_format@plt>
   186a0:	mov	r1, r5
   186a4:	mov	r0, r6
   186a8:	bl	457c <spss_missingness_for_info@plt>
   186ac:	add	r0, r4, #1600	; 0x640
   186b0:	mov	r2, #520	; 0x208
   186b4:	mov	r1, r6
   186b8:	add	r0, r0, #8
   186bc:	bl	3f64 <memcpy@plt>
   186c0:	ldr	r3, [r5, #268]	; 0x10c
   186c4:	mov	r0, r4
   186c8:	str	r3, [r4, #2128]	; 0x850
   186cc:	ldr	r3, [r5, #276]	; 0x114
   186d0:	cmp	r3, #0
   186d4:	ldreq	r3, [r5, #28]
   186d8:	str	r3, [r4, #2136]	; 0x858
   186dc:	add	sp, sp, #532	; 0x214
   186e0:	pop	{r4, r5, r6, r7, pc}
   186e4:	.word	0x00000868
   186e8:	.word	0x0000a1ee

000186ec <spss_measure_from_readstat_measure>:
   186ec:	cmp	r0, #1
   186f0:	bxeq	lr
   186f4:	cmp	r0, #2
   186f8:	bxeq	lr
   186fc:	cmp	r0, #3
   18700:	moveq	r0, #3
   18704:	movne	r0, #0
   18708:	bx	lr

0001870c <spss_measure_to_readstat_measure>:
   1870c:	cmp	r0, #1
   18710:	bxeq	lr
   18714:	cmp	r0, #2
   18718:	bxeq	lr
   1871c:	cmp	r0, #3
   18720:	moveq	r0, #3
   18724:	movne	r0, #0
   18728:	bx	lr

0001872c <spss_alignment_from_readstat_alignment>:
   1872c:	cmp	r0, #1
   18730:	beq	18748 <spss_alignment_from_readstat_alignment+0x1c>
   18734:	cmp	r0, #2
   18738:	subne	r0, r0, #3
   1873c:	clzne	r0, r0
   18740:	lsrne	r0, r0, #5
   18744:	bx	lr
   18748:	mov	r0, #0
   1874c:	bx	lr

00018750 <spss_alignment_to_readstat_alignment>:
   18750:	cmp	r0, #0
   18754:	beq	18770 <spss_alignment_to_readstat_alignment+0x20>
   18758:	cmp	r0, #2
   1875c:	bxeq	lr
   18760:	cmp	r0, #1
   18764:	moveq	r0, #3
   18768:	movne	r0, #0
   1876c:	bx	lr
   18770:	mov	r0, #1
   18774:	bx	lr

00018778 <spss_format_for_variable>:
   18778:	mov	r3, #0
   1877c:	str	r3, [r1]
   18780:	str	r3, [r1, #4]
   18784:	str	r3, [r1, #8]
   18788:	ldr	r3, [r0]
   1878c:	ldr	r2, [r0, #2136]	; 0x858
   18790:	cmp	r3, #0
   18794:	bne	187d0 <spss_format_for_variable+0x58>
   18798:	mov	r3, #1
   1879c:	cmp	r2, #0
   187a0:	str	r3, [r1]
   187a4:	strne	r2, [r1, #4]
   187a8:	bne	187bc <spss_format_for_variable+0x44>
   187ac:	ldr	r3, [r0, #1600]	; 0x640
   187b0:	cmp	r3, #0
   187b4:	ldreq	r3, [r0, #1596]	; 0x63c
   187b8:	str	r3, [r1, #4]
   187bc:	ldrb	r3, [r0, #308]	; 0x134
   187c0:	cmp	r3, #0
   187c4:	bne	18800 <spss_format_for_variable+0x88>
   187c8:	mov	r0, #0
   187cc:	bx	lr
   187d0:	sub	r3, r3, #4
   187d4:	cmp	r2, #0
   187d8:	moveq	r2, #8
   187dc:	cmp	r3, #1
   187e0:	mov	ip, #5
   187e4:	movls	r3, #2
   187e8:	str	ip, [r1]
   187ec:	str	r2, [r1, #4]
   187f0:	strls	r3, [r1, #8]
   187f4:	b	187bc <spss_format_for_variable+0x44>
   187f8:	mov	r0, #0
   187fc:	pop	{r4, r5, r6, pc}
   18800:	push	{r4, r5, r6, lr}
   18804:	mov	r3, #0
   18808:	add	r5, r0, #308	; 0x134
   1880c:	str	r3, [r1, #8]
   18810:	mov	r0, r5
   18814:	mov	r4, r1
   18818:	bl	424c <strlen@plt>
   1881c:	mov	r2, r4
   18820:	mov	r1, r0
   18824:	mov	r0, r5
   18828:	bl	3f70 <spss_parse_format@plt>
   1882c:	cmp	r0, #0
   18830:	beq	187f8 <spss_format_for_variable+0x80>
   18834:	mov	r0, #11
   18838:	pop	{r4, r5, r6, pc}

0001883c <spss_parse_format>:
   1883c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18840:	add	r3, r0, r1
   18844:	sub	sp, sp, #28
   18848:	cmp	r0, r3
   1884c:	str	r3, [sp, #4]
   18850:	mov	r4, #0
   18854:	mov	ip, #1
   18858:	beq	1895c <spss_parse_format+0x120>
   1885c:	ldr	r5, [pc, #1576]	; 18e8c <spss_parse_format+0x650>
   18860:	mov	r6, #10
   18864:	add	r5, pc, r5
   18868:	add	r3, r5, #284	; 0x11c
   1886c:	add	r3, r3, #2
   18870:	str	r3, [sp, #16]
   18874:	ldr	r3, [pc, #1556]	; 18e90 <spss_parse_format+0x654>
   18878:	str	r5, [sp, #8]
   1887c:	add	r3, pc, r3
   18880:	str	r3, [sp, #20]
   18884:	add	r3, r5, #1568	; 0x620
   18888:	str	r3, [sp, #12]
   1888c:	ldr	r1, [sp, #16]
   18890:	lsl	r3, ip, #1
   18894:	ldrsh	lr, [r1, r3]
   18898:	add	r1, r5, #500	; 0x1f4
   1889c:	ldrsh	r3, [r1, r3]
   188a0:	add	r1, r5, ip
   188a4:	add	lr, r5, lr
   188a8:	ldrb	r9, [r1, #714]	; 0x2ca
   188ac:	cmp	r9, #0
   188b0:	beq	189a8 <spss_parse_format+0x16c>
   188b4:	sub	r8, r9, #1
   188b8:	add	r8, lr, r8
   188bc:	mov	r7, lr
   188c0:	cmp	r7, r8
   188c4:	bhi	189a0 <spss_parse_format+0x164>
   188c8:	sub	sl, r8, r7
   188cc:	ldrb	fp, [r0]
   188d0:	add	r1, r7, sl, asr #1
   188d4:	ldrb	sl, [r7, sl, asr #1]
   188d8:	cmp	fp, sl
   188dc:	subcc	r8, r1, #1
   188e0:	bcc	188c0 <spss_parse_format+0x84>
   188e4:	addhi	r7, r1, #1
   188e8:	bhi	188c0 <spss_parse_format+0x84>
   188ec:	sub	lr, r1, lr
   188f0:	add	r3, r3, lr
   188f4:	ldr	r1, [sp, #8]
   188f8:	add	r3, r1, r3
   188fc:	ldrb	r3, [r3, #928]	; 0x3a0
   18900:	add	r3, r1, r3
   18904:	ldrb	r1, [r3, #1424]	; 0x590
   18908:	ldrb	ip, [r3, #1280]	; 0x500
   1890c:	cmp	r1, #0
   18910:	beq	18944 <spss_parse_format+0x108>
   18914:	ldr	lr, [sp, #12]
   18918:	ldr	r3, [sp, #12]
   1891c:	mov	fp, #36	; 0x24
   18920:	add	r3, r3, r1
   18924:	ldrb	r1, [lr, r1]
   18928:	add	r3, r3, #1
   1892c:	mov	sl, #35	; 0x23
   18930:	mov	r9, #34	; 0x22
   18934:	mov	r7, #33	; 0x21
   18938:	mov	r8, #32
   1893c:	subs	r1, r1, #1
   18940:	bcs	18a18 <spss_parse_format+0x1dc>
   18944:	cmp	ip, #0
   18948:	beq	18d04 <spss_parse_format+0x4c8>
   1894c:	ldr	r3, [sp, #4]
   18950:	add	r0, r0, #1
   18954:	cmp	r3, r0
   18958:	bne	1888c <spss_parse_format+0x50>
   1895c:	ldr	r3, [pc, #1328]	; 18e94 <spss_parse_format+0x658>
   18960:	mov	sl, #39	; 0x27
   18964:	add	r3, pc, r3
   18968:	add	r0, r3, #1568	; 0x620
   1896c:	add	r3, r3, ip
   18970:	mov	r9, #38	; 0x26
   18974:	ldrb	r3, [r3, #1800]	; 0x708
   18978:	mov	r8, #37	; 0x25
   1897c:	mov	r7, #36	; 0x24
   18980:	add	r1, r0, r3
   18984:	ldrb	lr, [r0, r3]
   18988:	add	r1, r1, #1
   1898c:	mov	r3, #10
   18990:	mov	r6, #35	; 0x23
   18994:	mov	r5, #34	; 0x22
   18998:	mov	fp, #33	; 0x21
   1899c:	b	18cf8 <spss_parse_format+0x4bc>
   189a0:	add	lr, lr, r9
   189a4:	add	r3, r3, r9
   189a8:	ldr	r1, [sp, #20]
   189ac:	add	ip, r1, ip
   189b0:	ldrb	r9, [ip, #821]	; 0x335
   189b4:	cmp	r9, #0
   189b8:	beq	188f4 <spss_parse_format+0xb8>
   189bc:	add	r8, lr, r9, lsl #1
   189c0:	sub	r8, r8, #2
   189c4:	mov	r7, lr
   189c8:	cmp	r7, r8
   189cc:	bhi	18a10 <spss_parse_format+0x1d4>
   189d0:	sub	ip, r8, r7
   189d4:	ldrb	sl, [r0]
   189d8:	asr	ip, ip, #1
   189dc:	bic	ip, ip, #1
   189e0:	add	r1, r7, ip
   189e4:	ldrb	ip, [r7, ip]
   189e8:	cmp	ip, sl
   189ec:	subhi	r8, r1, #2
   189f0:	bhi	189c8 <spss_parse_format+0x18c>
   189f4:	ldrb	ip, [r1, #1]
   189f8:	cmp	ip, sl
   189fc:	addcc	r7, r1, #2
   18a00:	bcc	189c8 <spss_parse_format+0x18c>
   18a04:	sub	lr, r1, lr
   18a08:	add	r3, r3, lr, asr #1
   18a0c:	b	188f4 <spss_parse_format+0xb8>
   18a10:	add	r3, r3, r9
   18a14:	b	188f4 <spss_parse_format+0xb8>
   18a18:	ldrb	lr, [r3], #1
   18a1c:	cmp	lr, #40	; 0x28
   18a20:	addls	pc, pc, lr, lsl #2
   18a24:	b	1893c <spss_parse_format+0x100>
   18a28:	b	18acc <spss_parse_format+0x290>
   18a2c:	b	18ad4 <spss_parse_format+0x298>
   18a30:	b	18ae4 <spss_parse_format+0x2a8>
   18a34:	b	1893c <spss_parse_format+0x100>
   18a38:	b	18aec <spss_parse_format+0x2b0>
   18a3c:	b	18af8 <spss_parse_format+0x2bc>
   18a40:	b	18b00 <spss_parse_format+0x2c4>
   18a44:	b	18b08 <spss_parse_format+0x2cc>
   18a48:	b	18b10 <spss_parse_format+0x2d4>
   18a4c:	b	18b18 <spss_parse_format+0x2dc>
   18a50:	b	18b20 <spss_parse_format+0x2e4>
   18a54:	b	18b28 <spss_parse_format+0x2ec>
   18a58:	b	18b30 <spss_parse_format+0x2f4>
   18a5c:	b	18b38 <spss_parse_format+0x2fc>
   18a60:	b	18b40 <spss_parse_format+0x304>
   18a64:	b	18b48 <spss_parse_format+0x30c>
   18a68:	b	18b50 <spss_parse_format+0x314>
   18a6c:	b	18b58 <spss_parse_format+0x31c>
   18a70:	b	18b60 <spss_parse_format+0x324>
   18a74:	b	18b68 <spss_parse_format+0x32c>
   18a78:	b	18b7c <spss_parse_format+0x340>
   18a7c:	b	18b84 <spss_parse_format+0x348>
   18a80:	b	18b94 <spss_parse_format+0x358>
   18a84:	b	18ba4 <spss_parse_format+0x368>
   18a88:	b	18bb4 <spss_parse_format+0x378>
   18a8c:	b	18bbc <spss_parse_format+0x380>
   18a90:	b	18bcc <spss_parse_format+0x390>
   18a94:	b	18bd4 <spss_parse_format+0x398>
   18a98:	b	18bdc <spss_parse_format+0x3a0>
   18a9c:	b	18be4 <spss_parse_format+0x3a8>
   18aa0:	b	18bec <spss_parse_format+0x3b0>
   18aa4:	b	18bf4 <spss_parse_format+0x3b8>
   18aa8:	b	18bfc <spss_parse_format+0x3c0>
   18aac:	b	18c04 <spss_parse_format+0x3c8>
   18ab0:	b	18c0c <spss_parse_format+0x3d0>
   18ab4:	b	18c14 <spss_parse_format+0x3d8>
   18ab8:	b	18c1c <spss_parse_format+0x3e0>
   18abc:	b	18c24 <spss_parse_format+0x3e8>
   18ac0:	b	18c2c <spss_parse_format+0x3f0>
   18ac4:	b	18c34 <spss_parse_format+0x3f8>
   18ac8:	b	18c3c <spss_parse_format+0x400>
   18acc:	mov	r4, #0
   18ad0:	b	1893c <spss_parse_format+0x100>
   18ad4:	ldrb	lr, [r0]
   18ad8:	sub	lr, lr, #48	; 0x30
   18adc:	mla	r4, r6, r4, lr
   18ae0:	b	1893c <spss_parse_format+0x100>
   18ae4:	str	r4, [r2, #4]
   18ae8:	b	1893c <spss_parse_format+0x100>
   18aec:	mov	lr, #1
   18af0:	str	lr, [r2]
   18af4:	b	1893c <spss_parse_format+0x100>
   18af8:	mov	lr, #2
   18afc:	b	18af0 <spss_parse_format+0x2b4>
   18b00:	mov	lr, #3
   18b04:	b	18af0 <spss_parse_format+0x2b4>
   18b08:	mov	lr, #4
   18b0c:	b	18af0 <spss_parse_format+0x2b4>
   18b10:	mov	lr, #5
   18b14:	b	18af0 <spss_parse_format+0x2b4>
   18b18:	mov	lr, #6
   18b1c:	b	18af0 <spss_parse_format+0x2b4>
   18b20:	mov	lr, #7
   18b24:	b	18af0 <spss_parse_format+0x2b4>
   18b28:	mov	lr, #8
   18b2c:	b	18af0 <spss_parse_format+0x2b4>
   18b30:	mov	lr, #9
   18b34:	b	18af0 <spss_parse_format+0x2b4>
   18b38:	str	r6, [r2]
   18b3c:	b	1893c <spss_parse_format+0x100>
   18b40:	mov	lr, #11
   18b44:	b	18af0 <spss_parse_format+0x2b4>
   18b48:	mov	lr, #12
   18b4c:	b	18af0 <spss_parse_format+0x2b4>
   18b50:	mov	lr, #15
   18b54:	b	18af0 <spss_parse_format+0x2b4>
   18b58:	mov	lr, #16
   18b5c:	b	18af0 <spss_parse_format+0x2b4>
   18b60:	mov	lr, #17
   18b64:	b	18af0 <spss_parse_format+0x2b4>
   18b68:	mov	lr, #20
   18b6c:	str	lr, [r2]
   18b70:	mov	lr, #11
   18b74:	str	lr, [r2, #4]
   18b78:	b	1893c <spss_parse_format+0x100>
   18b7c:	mov	lr, #21
   18b80:	b	18af0 <spss_parse_format+0x2b4>
   18b84:	mov	lr, #22
   18b88:	str	lr, [r2]
   18b8c:	mov	lr, #20
   18b90:	b	18b74 <spss_parse_format+0x338>
   18b94:	mov	lr, #41	; 0x29
   18b98:	str	lr, [r2]
   18b9c:	mov	lr, #19
   18ba0:	b	18b74 <spss_parse_format+0x338>
   18ba4:	mov	lr, #23
   18ba8:	str	lr, [r2]
   18bac:	str	r6, [r2, #4]
   18bb0:	b	1893c <spss_parse_format+0x100>
   18bb4:	mov	lr, #24
   18bb8:	b	18af0 <spss_parse_format+0x2b4>
   18bbc:	mov	lr, #25
   18bc0:	str	lr, [r2]
   18bc4:	mov	lr, #23
   18bc8:	b	18b74 <spss_parse_format+0x338>
   18bcc:	mov	lr, #40	; 0x28
   18bd0:	b	18af0 <spss_parse_format+0x2b4>
   18bd4:	mov	lr, #26
   18bd8:	b	18af0 <spss_parse_format+0x2b4>
   18bdc:	mov	lr, #27
   18be0:	b	18af0 <spss_parse_format+0x2b4>
   18be4:	mov	lr, #28
   18be8:	b	18af0 <spss_parse_format+0x2b4>
   18bec:	mov	lr, #29
   18bf0:	b	18af0 <spss_parse_format+0x2b4>
   18bf4:	mov	lr, #30
   18bf8:	b	18ba8 <spss_parse_format+0x36c>
   18bfc:	mov	lr, #31
   18c00:	b	18af0 <spss_parse_format+0x2b4>
   18c04:	str	r8, [r2]
   18c08:	b	1893c <spss_parse_format+0x100>
   18c0c:	str	r7, [r2]
   18c10:	b	1893c <spss_parse_format+0x100>
   18c14:	str	r9, [r2]
   18c18:	b	1893c <spss_parse_format+0x100>
   18c1c:	str	sl, [r2]
   18c20:	b	1893c <spss_parse_format+0x100>
   18c24:	str	fp, [r2]
   18c28:	b	1893c <spss_parse_format+0x100>
   18c2c:	mov	lr, #37	; 0x25
   18c30:	b	18af0 <spss_parse_format+0x2b4>
   18c34:	mov	lr, #38	; 0x26
   18c38:	b	18ba8 <spss_parse_format+0x36c>
   18c3c:	mov	lr, #39	; 0x27
   18c40:	b	18ba8 <spss_parse_format+0x36c>
   18c44:	ldrb	r0, [r1], #1
   18c48:	sub	r0, r0, #2
   18c4c:	cmp	r0, #38	; 0x26
   18c50:	addls	pc, pc, r0, lsl #2
   18c54:	b	18cf8 <spss_parse_format+0x4bc>
   18c58:	b	18cf4 <spss_parse_format+0x4b8>
   18c5c:	b	18d2c <spss_parse_format+0x4f0>
   18c60:	b	18d34 <spss_parse_format+0x4f8>
   18c64:	b	18d40 <spss_parse_format+0x504>
   18c68:	b	18d48 <spss_parse_format+0x50c>
   18c6c:	b	18d50 <spss_parse_format+0x514>
   18c70:	b	18d58 <spss_parse_format+0x51c>
   18c74:	b	18d60 <spss_parse_format+0x524>
   18c78:	b	18d68 <spss_parse_format+0x52c>
   18c7c:	b	18d70 <spss_parse_format+0x534>
   18c80:	b	18d78 <spss_parse_format+0x53c>
   18c84:	b	18d80 <spss_parse_format+0x544>
   18c88:	b	18d88 <spss_parse_format+0x54c>
   18c8c:	b	18d90 <spss_parse_format+0x554>
   18c90:	b	18d98 <spss_parse_format+0x55c>
   18c94:	b	18da0 <spss_parse_format+0x564>
   18c98:	b	18da8 <spss_parse_format+0x56c>
   18c9c:	b	18db0 <spss_parse_format+0x574>
   18ca0:	b	18dc4 <spss_parse_format+0x588>
   18ca4:	b	18dcc <spss_parse_format+0x590>
   18ca8:	b	18ddc <spss_parse_format+0x5a0>
   18cac:	b	18dec <spss_parse_format+0x5b0>
   18cb0:	b	18dfc <spss_parse_format+0x5c0>
   18cb4:	b	18e04 <spss_parse_format+0x5c8>
   18cb8:	b	18e14 <spss_parse_format+0x5d8>
   18cbc:	b	18e1c <spss_parse_format+0x5e0>
   18cc0:	b	18e24 <spss_parse_format+0x5e8>
   18cc4:	b	18e2c <spss_parse_format+0x5f0>
   18cc8:	b	18e34 <spss_parse_format+0x5f8>
   18ccc:	b	18e3c <spss_parse_format+0x600>
   18cd0:	b	18e44 <spss_parse_format+0x608>
   18cd4:	b	18e4c <spss_parse_format+0x610>
   18cd8:	b	18e54 <spss_parse_format+0x618>
   18cdc:	b	18e5c <spss_parse_format+0x620>
   18ce0:	b	18e64 <spss_parse_format+0x628>
   18ce4:	b	18e6c <spss_parse_format+0x630>
   18ce8:	b	18e74 <spss_parse_format+0x638>
   18cec:	b	18e7c <spss_parse_format+0x640>
   18cf0:	b	18e84 <spss_parse_format+0x648>
   18cf4:	str	r4, [r2, #4]
   18cf8:	subs	lr, lr, #1
   18cfc:	bcs	18c44 <spss_parse_format+0x408>
   18d00:	ldr	r0, [sp, #4]
   18d04:	ldr	r3, [sp, #4]
   18d08:	subs	r0, r0, r3
   18d0c:	movne	r0, #1
   18d10:	cmp	ip, #67	; 0x43
   18d14:	orrle	r0, r0, #1
   18d18:	cmp	r0, #0
   18d1c:	movne	r0, #5
   18d20:	moveq	r0, #0
   18d24:	add	sp, sp, #28
   18d28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18d2c:	str	r4, [r2, #8]
   18d30:	b	18cf8 <spss_parse_format+0x4bc>
   18d34:	mov	r0, #1
   18d38:	str	r0, [r2]
   18d3c:	b	18cf8 <spss_parse_format+0x4bc>
   18d40:	mov	r0, #2
   18d44:	b	18d38 <spss_parse_format+0x4fc>
   18d48:	mov	r0, #3
   18d4c:	b	18d38 <spss_parse_format+0x4fc>
   18d50:	mov	r0, #4
   18d54:	b	18d38 <spss_parse_format+0x4fc>
   18d58:	mov	r0, #5
   18d5c:	b	18d38 <spss_parse_format+0x4fc>
   18d60:	mov	r0, #6
   18d64:	b	18d38 <spss_parse_format+0x4fc>
   18d68:	mov	r0, #7
   18d6c:	b	18d38 <spss_parse_format+0x4fc>
   18d70:	mov	r0, #8
   18d74:	b	18d38 <spss_parse_format+0x4fc>
   18d78:	mov	r0, #9
   18d7c:	b	18d38 <spss_parse_format+0x4fc>
   18d80:	str	r3, [r2]
   18d84:	b	18cf8 <spss_parse_format+0x4bc>
   18d88:	mov	r0, #11
   18d8c:	b	18d38 <spss_parse_format+0x4fc>
   18d90:	mov	r0, #12
   18d94:	b	18d38 <spss_parse_format+0x4fc>
   18d98:	mov	r0, #15
   18d9c:	b	18d38 <spss_parse_format+0x4fc>
   18da0:	mov	r0, #16
   18da4:	b	18d38 <spss_parse_format+0x4fc>
   18da8:	mov	r0, #17
   18dac:	b	18d38 <spss_parse_format+0x4fc>
   18db0:	mov	r0, #20
   18db4:	str	r0, [r2]
   18db8:	mov	r0, #11
   18dbc:	str	r0, [r2, #4]
   18dc0:	b	18cf8 <spss_parse_format+0x4bc>
   18dc4:	mov	r0, #21
   18dc8:	b	18d38 <spss_parse_format+0x4fc>
   18dcc:	mov	r0, #22
   18dd0:	str	r0, [r2]
   18dd4:	mov	r0, #20
   18dd8:	b	18dbc <spss_parse_format+0x580>
   18ddc:	mov	r0, #41	; 0x29
   18de0:	str	r0, [r2]
   18de4:	mov	r0, #19
   18de8:	b	18dbc <spss_parse_format+0x580>
   18dec:	mov	r0, #23
   18df0:	str	r0, [r2]
   18df4:	str	r3, [r2, #4]
   18df8:	b	18cf8 <spss_parse_format+0x4bc>
   18dfc:	mov	r0, #24
   18e00:	b	18d38 <spss_parse_format+0x4fc>
   18e04:	mov	r0, #25
   18e08:	str	r0, [r2]
   18e0c:	mov	r0, #23
   18e10:	b	18dbc <spss_parse_format+0x580>
   18e14:	mov	r0, #40	; 0x28
   18e18:	b	18d38 <spss_parse_format+0x4fc>
   18e1c:	mov	r0, #26
   18e20:	b	18d38 <spss_parse_format+0x4fc>
   18e24:	mov	r0, #27
   18e28:	b	18d38 <spss_parse_format+0x4fc>
   18e2c:	mov	r0, #28
   18e30:	b	18d38 <spss_parse_format+0x4fc>
   18e34:	mov	r0, #29
   18e38:	b	18d38 <spss_parse_format+0x4fc>
   18e3c:	mov	r0, #30
   18e40:	b	18df0 <spss_parse_format+0x5b4>
   18e44:	mov	r0, #31
   18e48:	b	18d38 <spss_parse_format+0x4fc>
   18e4c:	mov	r0, #32
   18e50:	b	18d38 <spss_parse_format+0x4fc>
   18e54:	str	fp, [r2]
   18e58:	b	18cf8 <spss_parse_format+0x4bc>
   18e5c:	str	r5, [r2]
   18e60:	b	18cf8 <spss_parse_format+0x4bc>
   18e64:	str	r6, [r2]
   18e68:	b	18cf8 <spss_parse_format+0x4bc>
   18e6c:	str	r7, [r2]
   18e70:	b	18cf8 <spss_parse_format+0x4bc>
   18e74:	str	r8, [r2]
   18e78:	b	18cf8 <spss_parse_format+0x4bc>
   18e7c:	str	r9, [r2]
   18e80:	b	18df4 <spss_parse_format+0x5b8>
   18e84:	str	sl, [r2]
   18e88:	b	18df4 <spss_parse_format+0x5b8>
   18e8c:	.word	0x0000a516
   18e90:	.word	0x0000a4fe
   18e94:	.word	0x0000a416

00018e98 <dta_ctx_alloc>:
   18e98:	push	{r4, lr}
   18e9c:	mov	r1, #544	; 0x220
   18ea0:	mov	r4, r0
   18ea4:	mov	r0, #1
   18ea8:	bl	3d9c <calloc@plt>
   18eac:	cmp	r0, #0
   18eb0:	movne	r3, #0
   18eb4:	strne	r4, [r0, #280]	; 0x118
   18eb8:	strne	r3, [r0, #284]	; 0x11c
   18ebc:	pop	{r4, pc}

00018ec0 <dta_ctx_init>:
   18ec0:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18ec4:	ldrb	r5, [sp, #44]	; 0x2c
   18ec8:	ldrb	fp, [sp, #40]	; 0x28
   18ecc:	ldr	r7, [sp, #48]	; 0x30
   18ed0:	sub	ip, r5, #104	; 0x68
   18ed4:	cmp	ip, #15
   18ed8:	ldr	r6, [sp, #52]	; 0x34
   18edc:	bhi	192cc <dta_ctx_init+0x40c>
   18ee0:	mov	r4, r0
   18ee4:	mov	r9, r3
   18ee8:	mov	sl, r1
   18eec:	mov	r8, r2
   18ef0:	bl	3ef8 <machine_is_little_endian@plt>
   18ef4:	str	r5, [r4, #144]	; 0x90
   18ef8:	str	sl, [r4, #148]	; 0x94
   18efc:	strd	r8, [r4, #152]	; 0x98
   18f00:	cmp	r0, #0
   18f04:	ldrb	r0, [r4, #192]	; 0xc0
   18f08:	moveq	r3, #1
   18f0c:	movne	r3, #2
   18f10:	bic	r0, r0, #1
   18f14:	cmp	fp, r3
   18f18:	orrne	r0, r0, #1
   18f1c:	cmp	fp, #2
   18f20:	moveq	fp, #1
   18f24:	movne	fp, #2
   18f28:	cmp	sl, #0
   18f2c:	strb	r0, [r4, #192]	; 0xc0
   18f30:	str	fp, [r4, #232]	; 0xe8
   18f34:	bne	18f8c <dta_ctx_init+0xcc>
   18f38:	ldrb	r3, [r4, #192]	; 0xc0
   18f3c:	cmp	r5, #104	; 0x68
   18f40:	mvn	r0, #0
   18f44:	bic	r3, r3, #2
   18f48:	strb	r3, [r4, #192]	; 0xc0
   18f4c:	ldr	r1, [pc, #896]	; 192d4 <dta_ctx_init+0x414>
   18f50:	beq	18fac <dta_ctx_init+0xec>
   18f54:	cmp	r5, #113	; 0x71
   18f58:	bhi	18fd8 <dta_ctx_init+0x118>
   18f5c:	mov	r2, #12
   18f60:	cmp	r5, #110	; 0x6e
   18f64:	str	r2, [r4, #80]	; 0x50
   18f68:	bls	18fb4 <dta_ctx_init+0xf4>
   18f6c:	mov	r2, #111	; 0x6f
   18f70:	cmp	r5, #117	; 0x75
   18f74:	strb	r2, [r4, #20]
   18f78:	beq	18fc4 <dta_ctx_init+0x104>
   18f7c:	cmp	r5, #109	; 0x6d
   18f80:	bhi	1904c <dta_ctx_init+0x18c>
   18f84:	mov	r2, #2
   18f88:	b	19024 <dta_ctx_init+0x164>
   18f8c:	mov	r1, #4
   18f90:	mov	r0, sl
   18f94:	bl	400c <readstat_calloc@plt>
   18f98:	cmp	r0, #0
   18f9c:	str	r0, [r4, #228]	; 0xe4
   18fa0:	bne	18f38 <dta_ctx_init+0x78>
   18fa4:	mov	r0, #3
   18fa8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18fac:	mov	r2, #7
   18fb0:	str	r2, [r4, #80]	; 0x50
   18fb4:	mov	r2, #0
   18fb8:	cmp	r5, #117	; 0x75
   18fbc:	strb	r2, [r4, #20]
   18fc0:	bne	1901c <dta_ctx_init+0x15c>
   18fc4:	mov	r2, #1
   18fc8:	str	r2, [r4, #8]
   18fcc:	mov	r2, #4
   18fd0:	str	r2, [r4, #112]	; 0x70
   18fd4:	b	19014 <dta_ctx_init+0x154>
   18fd8:	cmp	r5, #117	; 0x75
   18fdc:	bhi	18ff4 <dta_ctx_init+0x134>
   18fe0:	mov	r2, #49	; 0x31
   18fe4:	str	r2, [r4, #80]	; 0x50
   18fe8:	bne	18f6c <dta_ctx_init+0xac>
   18fec:	strb	r5, [r4, #20]
   18ff0:	b	18fc4 <dta_ctx_init+0x104>
   18ff4:	mov	r2, #57	; 0x39
   18ff8:	str	r2, [r4, #80]	; 0x50
   18ffc:	mov	r2, #117	; 0x75
   19000:	strb	r2, [r4, #20]
   19004:	mov	r2, #2
   19008:	str	r2, [r4, #8]
   1900c:	str	r2, [r4, #112]	; 0x70
   19010:	mov	r2, #6
   19014:	str	r2, [r4, #116]	; 0x74
   19018:	b	18f7c <dta_ctx_init+0xbc>
   1901c:	cmp	r5, #104	; 0x68
   19020:	bne	18f7c <dta_ctx_init+0xbc>
   19024:	str	r2, [r4, #92]	; 0x5c
   19028:	cmp	r5, #107	; 0x6b
   1902c:	mov	r2, #9
   19030:	str	r2, [r4, #84]	; 0x54
   19034:	str	r2, [r4, #76]	; 0x4c
   19038:	str	r2, [r4, #96]	; 0x60
   1903c:	bls	19094 <dta_ctx_init+0x1d4>
   19040:	cmp	r5, #117	; 0x75
   19044:	bls	19084 <dta_ctx_init+0x1c4>
   19048:	b	1906c <dta_ctx_init+0x1ac>
   1904c:	mov	r2, #4
   19050:	cmp	r5, #117	; 0x75
   19054:	str	r2, [r4, #92]	; 0x5c
   19058:	bls	19074 <dta_ctx_init+0x1b4>
   1905c:	mov	r2, #129	; 0x81
   19060:	str	r2, [r4, #84]	; 0x54
   19064:	str	r2, [r4, #76]	; 0x4c
   19068:	str	r2, [r4, #96]	; 0x60
   1906c:	ldr	r2, [pc, #612]	; 192d8 <dta_ctx_init+0x418>
   19070:	b	19088 <dta_ctx_init+0x1c8>
   19074:	mov	r2, #33	; 0x21
   19078:	str	r2, [r4, #84]	; 0x54
   1907c:	str	r2, [r4, #76]	; 0x4c
   19080:	str	r2, [r4, #96]	; 0x60
   19084:	mov	r2, #81	; 0x51
   19088:	str	r2, [r4, #88]	; 0x58
   1908c:	str	r2, [r4, #4]
   19090:	b	190a8 <dta_ctx_init+0x1e8>
   19094:	mov	r2, #32
   19098:	cmp	r5, #104	; 0x68
   1909c:	str	r2, [r4, #88]	; 0x58
   190a0:	str	r2, [r4, #4]
   190a4:	beq	190ec <dta_ctx_init+0x22c>
   190a8:	mov	r2, #18
   190ac:	cmp	r5, #117	; 0x75
   190b0:	str	r2, [r4, #16]
   190b4:	mov	r2, #4
   190b8:	str	r2, [r4, #100]	; 0x64
   190bc:	movls	r2, #33	; 0x21
   190c0:	movhi	r2, #129	; 0x81
   190c4:	str	r2, [r4, #104]	; 0x68
   190c8:	cmp	r5, #116	; 0x74
   190cc:	mov	r2, #3
   190d0:	str	r2, [r4, #108]	; 0x6c
   190d4:	bls	19108 <dta_ctx_init+0x248>
   190d8:	mov	r2, #2
   190dc:	orr	r3, r3, #4
   190e0:	str	r2, [r4, #24]
   190e4:	strb	r3, [r4, #192]	; 0xc0
   190e8:	b	19120 <dta_ctx_init+0x260>
   190ec:	mov	r2, #0
   190f0:	str	r2, [r4, #16]
   190f4:	mov	ip, #12
   190f8:	mov	r2, #2
   190fc:	str	r2, [r4, #100]	; 0x64
   19100:	str	ip, [r4, #104]	; 0x68
   19104:	str	r2, [r4, #108]	; 0x6c
   19108:	mov	r2, #1
   1910c:	bic	r3, r3, #4
   19110:	cmp	r5, #112	; 0x70
   19114:	str	r2, [r4, #24]
   19118:	strb	r3, [r4, #192]	; 0xc0
   1911c:	bls	19154 <dta_ctx_init+0x294>
   19120:	mov	r3, #100	; 0x64
   19124:	strb	r3, [r4, #193]	; 0xc1
   19128:	ldr	r3, [pc, #428]	; 192dc <dta_ctx_init+0x41c>
   1912c:	strd	r0, [r4, #208]	; 0xd0
   19130:	strh	r3, [r4, #194]	; 0xc2
   19134:	mvn	r3, #-2147483621	; 0x8000001b
   19138:	str	r3, [r4, #196]	; 0xc4
   1913c:	mvn	r3, #-2130706432	; 0x81000000
   19140:	str	r3, [r4, #200]	; 0xc8
   19144:	ldrb	r3, [r4, #192]	; 0xc0
   19148:	orr	r3, r3, #8
   1914c:	strb	r3, [r4, #192]	; 0xc0
   19150:	b	19178 <dta_ctx_init+0x2b8>
   19154:	mov	r3, #126	; 0x7e
   19158:	strb	r3, [r4, #193]	; 0xc1
   1915c:	ldr	r3, [pc, #380]	; 192e0 <dta_ctx_init+0x420>
   19160:	strd	r0, [r4, #208]	; 0xd0
   19164:	strh	r3, [r4, #194]	; 0xc2
   19168:	mvn	r3, #-2147483647	; 0x80000001
   1916c:	str	r3, [r4, #196]	; 0xc4
   19170:	mvn	r3, #-2130706432	; 0x81000000
   19174:	str	r3, [r4, #200]	; 0xc8
   19178:	cmp	r6, #0
   1917c:	beq	191e8 <dta_ctx_init+0x328>
   19180:	cmp	r7, #0
   19184:	beq	19190 <dta_ctx_init+0x2d0>
   19188:	mov	r1, r7
   1918c:	b	191a0 <dta_ctx_init+0x2e0>
   19190:	cmp	r5, #117	; 0x75
   19194:	bhi	191b0 <dta_ctx_init+0x2f0>
   19198:	ldr	r1, [pc, #324]	; 192e4 <dta_ctx_init+0x424>
   1919c:	add	r1, pc, r1
   191a0:	mov	r0, r6
   191a4:	bl	4180 <iconv_open@plt>
   191a8:	str	r0, [r4, #236]	; 0xec
   191ac:	b	191cc <dta_ctx_init+0x30c>
   191b0:	ldr	r7, [pc, #304]	; 192e8 <dta_ctx_init+0x428>
   191b4:	mov	r0, r6
   191b8:	add	r7, pc, r7
   191bc:	mov	r1, r7
   191c0:	bl	3e44 <strcmp@plt>
   191c4:	cmp	r0, #0
   191c8:	bne	19188 <dta_ctx_init+0x2c8>
   191cc:	ldr	r3, [r4, #236]	; 0xec
   191d0:	cmn	r3, #1
   191d4:	bne	191e8 <dta_ctx_init+0x328>
   191d8:	mov	r3, #0
   191dc:	str	r3, [r4, #236]	; 0xec
   191e0:	mov	r0, #7
   191e4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   191e8:	ldr	r3, [r4, #148]	; 0x94
   191ec:	cmp	r5, #119	; 0x77
   191f0:	add	r3, r3, #1
   191f4:	lslne	r3, r3, #1
   191f8:	lsleq	r3, r3, #2
   191fc:	str	r3, [r4, #48]	; 0x30
   19200:	ldr	r0, [r4, #48]	; 0x30
   19204:	bl	4270 <readstat_malloc@plt>
   19208:	cmp	r0, #0
   1920c:	str	r0, [r4, #44]	; 0x2c
   19210:	beq	18fa4 <dta_ctx_init+0xe4>
   19214:	ldr	r3, [r4, #148]	; 0x94
   19218:	cmp	r3, #0
   1921c:	bgt	19230 <dta_ctx_init+0x370>
   19220:	mov	r3, #1
   19224:	str	r3, [r4, #284]	; 0x11c
   19228:	mov	r0, #0
   1922c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19230:	ldr	r2, [r4, #76]	; 0x4c
   19234:	lsl	r0, r3, #1
   19238:	str	r0, [r4, #32]
   1923c:	mul	r2, r3, r2
   19240:	str	r2, [r4, #40]	; 0x28
   19244:	ldr	r2, [r4, #80]	; 0x50
   19248:	mul	r2, r3, r2
   1924c:	str	r2, [r4, #56]	; 0x38
   19250:	ldr	r2, [r4, #84]	; 0x54
   19254:	mul	r2, r3, r2
   19258:	str	r2, [r4, #64]	; 0x40
   1925c:	ldr	r2, [r4, #88]	; 0x58
   19260:	mul	r3, r3, r2
   19264:	str	r3, [r4, #72]	; 0x48
   19268:	bl	4270 <readstat_malloc@plt>
   1926c:	cmp	r0, #0
   19270:	str	r0, [r4, #28]
   19274:	beq	18fa4 <dta_ctx_init+0xe4>
   19278:	ldr	r0, [r4, #40]	; 0x28
   1927c:	bl	4270 <readstat_malloc@plt>
   19280:	cmp	r0, #0
   19284:	str	r0, [r4, #36]	; 0x24
   19288:	beq	18fa4 <dta_ctx_init+0xe4>
   1928c:	ldr	r0, [r4, #56]	; 0x38
   19290:	bl	4270 <readstat_malloc@plt>
   19294:	cmp	r0, #0
   19298:	str	r0, [r4, #52]	; 0x34
   1929c:	beq	18fa4 <dta_ctx_init+0xe4>
   192a0:	ldr	r0, [r4, #64]	; 0x40
   192a4:	bl	4270 <readstat_malloc@plt>
   192a8:	cmp	r0, #0
   192ac:	str	r0, [r4, #60]	; 0x3c
   192b0:	beq	18fa4 <dta_ctx_init+0xe4>
   192b4:	ldr	r0, [r4, #72]	; 0x48
   192b8:	bl	4270 <readstat_malloc@plt>
   192bc:	cmp	r0, #0
   192c0:	str	r0, [r4, #68]	; 0x44
   192c4:	bne	19220 <dta_ctx_init+0x360>
   192c8:	b	18fa4 <dta_ctx_init+0xe4>
   192cc:	mov	r0, #24
   192d0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   192d4:	.word	0x7fdfffff
   192d8:	.word	0x00000141
   192dc:	.word	0x00007fe4
   192e0:	.word	0x00007ffe
   192e4:	.word	0x0000a372
   192e8:	.word	0x0000875e

000192ec <dta_ctx_free>:
   192ec:	push	{r4, r5, r6, lr}
   192f0:	mov	r4, r0
   192f4:	ldr	r0, [r0, #28]
   192f8:	cmp	r0, #0
   192fc:	beq	19304 <dta_ctx_free+0x18>
   19300:	bl	3f04 <free@plt>
   19304:	ldr	r0, [r4, #36]	; 0x24
   19308:	cmp	r0, #0
   1930c:	beq	19314 <dta_ctx_free+0x28>
   19310:	bl	3f04 <free@plt>
   19314:	ldr	r0, [r4, #44]	; 0x2c
   19318:	cmp	r0, #0
   1931c:	beq	19324 <dta_ctx_free+0x38>
   19320:	bl	3f04 <free@plt>
   19324:	ldr	r0, [r4, #52]	; 0x34
   19328:	cmp	r0, #0
   1932c:	beq	19334 <dta_ctx_free+0x48>
   19330:	bl	3f04 <free@plt>
   19334:	ldr	r0, [r4, #60]	; 0x3c
   19338:	cmp	r0, #0
   1933c:	beq	19344 <dta_ctx_free+0x58>
   19340:	bl	3f04 <free@plt>
   19344:	ldr	r0, [r4, #68]	; 0x44
   19348:	cmp	r0, #0
   1934c:	beq	19354 <dta_ctx_free+0x68>
   19350:	bl	3f04 <free@plt>
   19354:	ldr	r0, [r4, #236]	; 0xec
   19358:	cmp	r0, #0
   1935c:	beq	19364 <dta_ctx_free+0x78>
   19360:	bl	3e14 <iconv_close@plt>
   19364:	ldr	r0, [r4]
   19368:	cmp	r0, #0
   1936c:	beq	19374 <dta_ctx_free+0x88>
   19370:	bl	3f04 <free@plt>
   19374:	ldr	r3, [r4, #228]	; 0xe4
   19378:	cmp	r3, #0
   1937c:	movne	r5, #0
   19380:	bne	193b8 <dta_ctx_free+0xcc>
   19384:	ldr	r3, [r4, #216]	; 0xd8
   19388:	cmp	r3, #0
   1938c:	movne	r5, #0
   19390:	bne	193e0 <dta_ctx_free+0xf4>
   19394:	mov	r0, r4
   19398:	pop	{r4, r5, r6, lr}
   1939c:	b	3f04 <free@plt>
   193a0:	ldr	r3, [r4, #228]	; 0xe4
   193a4:	ldr	r0, [r3, r5, lsl #2]
   193a8:	cmp	r0, #0
   193ac:	beq	193b4 <dta_ctx_free+0xc8>
   193b0:	bl	3f04 <free@plt>
   193b4:	add	r5, r5, #1
   193b8:	ldr	r3, [r4, #148]	; 0x94
   193bc:	cmp	r5, r3
   193c0:	blt	193a0 <dta_ctx_free+0xb4>
   193c4:	ldr	r0, [r4, #228]	; 0xe4
   193c8:	bl	3f04 <free@plt>
   193cc:	b	19384 <dta_ctx_free+0x98>
   193d0:	ldr	r3, [r4, #216]	; 0xd8
   193d4:	ldr	r0, [r3, r5, lsl #2]
   193d8:	bl	3f04 <free@plt>
   193dc:	add	r5, r5, #1
   193e0:	ldr	r3, [r4, #220]	; 0xdc
   193e4:	cmp	r3, r5
   193e8:	bhi	193d0 <dta_ctx_free+0xe4>
   193ec:	ldr	r0, [r4, #216]	; 0xd8
   193f0:	bl	3f04 <free@plt>
   193f4:	b	19394 <dta_ctx_free+0xa8>

000193f8 <dta_type_info>:
   193f8:	ldrb	r1, [r1, #20]
   193fc:	cmp	r1, #111	; 0x6f
   19400:	bne	19428 <dta_type_info+0x30>
   19404:	sub	r1, r0, #251	; 0xfb
   19408:	cmp	r1, #4
   1940c:	addls	pc, pc, r1, lsl #2
   19410:	b	19454 <dta_type_info+0x5c>
   19414:	b	1947c <dta_type_info+0x84>
   19418:	b	19484 <dta_type_info+0x8c>
   1941c:	b	19490 <dta_type_info+0x98>
   19420:	b	194a0 <dta_type_info+0xa8>
   19424:	b	194a8 <dta_type_info+0xb0>
   19428:	cmp	r1, #117	; 0x75
   1942c:	bne	194bc <dta_type_info+0xc4>
   19430:	ldr	r1, [pc, #212]	; 1950c <dta_type_info+0x114>
   19434:	cmp	r0, r1
   19438:	beq	194a0 <dta_type_info+0xa8>
   1943c:	bhi	19460 <dta_type_info+0x68>
   19440:	cmp	r0, #32768	; 0x8000
   19444:	beq	194b4 <dta_type_info+0xbc>
   19448:	sub	r1, r1, #1
   1944c:	cmp	r0, r1
   19450:	beq	194a8 <dta_type_info+0xb0>
   19454:	mov	r1, r0
   19458:	mov	ip, #0
   1945c:	b	19498 <dta_type_info+0xa0>
   19460:	ldr	r1, [pc, #168]	; 19510 <dta_type_info+0x118>
   19464:	cmp	r0, r1
   19468:	beq	19484 <dta_type_info+0x8c>
   1946c:	bcc	19490 <dta_type_info+0x98>
   19470:	add	r1, r1, #1
   19474:	cmp	r0, r1
   19478:	bne	19454 <dta_type_info+0x5c>
   1947c:	mov	ip, #1
   19480:	b	19488 <dta_type_info+0x90>
   19484:	mov	ip, #2
   19488:	mov	r1, ip
   1948c:	b	19498 <dta_type_info+0xa0>
   19490:	mov	ip, #3
   19494:	mov	r1, #4
   19498:	mov	r0, #0
   1949c:	b	194f0 <dta_type_info+0xf8>
   194a0:	mov	ip, #4
   194a4:	b	19488 <dta_type_info+0x90>
   194a8:	mov	ip, #5
   194ac:	mov	r1, #8
   194b0:	b	19498 <dta_type_info+0xa0>
   194b4:	mov	ip, #6
   194b8:	b	194ac <dta_type_info+0xb4>
   194bc:	cmp	r0, #126	; 0x7e
   194c0:	bhi	19504 <dta_type_info+0x10c>
   194c4:	sub	r1, r0, #98	; 0x62
   194c8:	uxth	r1, r1
   194cc:	cmp	r1, #10
   194d0:	movhi	ip, #0
   194d4:	movhi	r1, ip
   194d8:	movhi	r0, #5
   194dc:	ldrls	ip, [pc, #48]	; 19514 <dta_type_info+0x11c>
   194e0:	addls	ip, pc, ip
   194e4:	ldrbls	r0, [ip, r1]!
   194e8:	ldrbls	r1, [ip, #11]
   194ec:	ldrbls	ip, [ip, #22]
   194f0:	cmp	r2, #0
   194f4:	strne	r1, [r2]
   194f8:	cmp	r3, #0
   194fc:	strne	ip, [r3]
   19500:	bx	lr
   19504:	sub	r1, r0, #127	; 0x7f
   19508:	b	19458 <dta_type_info+0x60>
   1950c:	.word	0x0000fff7
   19510:	.word	0x0000fff9
   19514:	.word	0x0000a00d

00019518 <dta_parse_timestamp>:
   19518:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1951c:	sub	sp, sp, #1056	; 0x420
   19520:	sub	sp, sp, #4
   19524:	add	fp, r0, r1
   19528:	cmp	r0, fp
   1952c:	str	r0, [sp, #8]
   19530:	str	r1, [sp, #12]
   19534:	str	r3, [sp, #16]
   19538:	beq	1984c <dta_parse_timestamp+0x334>
   1953c:	ldr	r8, [pc, #788]	; 19858 <dta_parse_timestamp+0x340>
   19540:	ldr	r1, [pc, #788]	; 1985c <dta_parse_timestamp+0x344>
   19544:	add	r8, pc, r8
   19548:	add	r1, pc, r1
   1954c:	str	r1, [sp, #28]
   19550:	mov	r3, r0
   19554:	add	r1, r8, #568	; 0x238
   19558:	mov	r4, #0
   1955c:	mov	lr, #1
   19560:	add	r1, r1, #3
   19564:	str	r8, [sp, #20]
   19568:	str	r1, [sp, #24]
   1956c:	add	r5, r8, lr
   19570:	ldrb	r9, [r5, #208]	; 0xd0
   19574:	ldrb	ip, [r5, #118]	; 0x76
   19578:	ldrb	r1, [r5, #163]	; 0xa3
   1957c:	cmp	r9, #0
   19580:	add	ip, r8, ip
   19584:	beq	19658 <dta_parse_timestamp+0x140>
   19588:	sub	r7, r9, #1
   1958c:	add	r7, ip, r7
   19590:	mov	r6, ip
   19594:	cmp	r6, r7
   19598:	bhi	19650 <dta_parse_timestamp+0x138>
   1959c:	sub	sl, r7, r6
   195a0:	ldrb	r0, [r3]
   195a4:	add	r5, r6, sl, asr #1
   195a8:	ldrb	sl, [r6, sl, asr #1]
   195ac:	cmp	r0, sl
   195b0:	subcc	r7, r5, #1
   195b4:	bcc	19594 <dta_parse_timestamp+0x7c>
   195b8:	addhi	r6, r5, #1
   195bc:	bhi	19594 <dta_parse_timestamp+0x7c>
   195c0:	sub	ip, r5, ip
   195c4:	add	r1, r1, ip
   195c8:	ldr	r0, [sp, #20]
   195cc:	add	r1, r0, r1
   195d0:	ldrb	r1, [r1, #298]	; 0x12a
   195d4:	add	r1, r0, r1
   195d8:	ldrb	ip, [r1, #511]	; 0x1ff
   195dc:	ldrb	lr, [r1, #451]	; 0x1c3
   195e0:	cmp	ip, #0
   195e4:	beq	19614 <dta_parse_timestamp+0xfc>
   195e8:	ldr	r0, [sp, #24]
   195ec:	ldr	r1, [sp, #24]
   195f0:	mov	r6, #6
   195f4:	add	r1, r1, ip
   195f8:	ldrb	ip, [r0, ip]
   195fc:	add	r1, r1, #1
   19600:	mov	r7, #5
   19604:	mov	r9, #4
   19608:	mov	sl, #3
   1960c:	subs	ip, ip, #1
   19610:	bcs	196c8 <dta_parse_timestamp+0x1b0>
   19614:	cmp	lr, #0
   19618:	beq	197d8 <dta_parse_timestamp+0x2c0>
   1961c:	add	r3, r3, #1
   19620:	cmp	fp, r3
   19624:	bne	1956c <dta_parse_timestamp+0x54>
   19628:	ldr	r1, [pc, #560]	; 19860 <dta_parse_timestamp+0x348>
   1962c:	add	r1, pc, r1
   19630:	add	r3, r1, #568	; 0x238
   19634:	add	r1, r1, lr
   19638:	add	r3, r3, #3
   1963c:	ldrb	ip, [r1, #609]	; 0x261
   19640:	add	r1, r3, ip
   19644:	add	r1, r1, #1
   19648:	ldrb	r3, [r3, ip]
   1964c:	b	197cc <dta_parse_timestamp+0x2b4>
   19650:	add	ip, ip, r9
   19654:	add	r1, r1, r9
   19658:	ldr	r0, [sp, #28]
   1965c:	add	lr, r0, lr
   19660:	ldrb	r9, [lr, #253]	; 0xfd
   19664:	cmp	r9, #0
   19668:	beq	195c8 <dta_parse_timestamp+0xb0>
   1966c:	add	r7, ip, r9, lsl #1
   19670:	sub	r7, r7, #2
   19674:	mov	r6, ip
   19678:	cmp	r6, r7
   1967c:	bhi	196c0 <dta_parse_timestamp+0x1a8>
   19680:	sub	r5, r7, r6
   19684:	ldrb	sl, [r3]
   19688:	asr	r5, r5, #1
   1968c:	bic	r5, r5, #1
   19690:	add	lr, r6, r5
   19694:	ldrb	r5, [r6, r5]
   19698:	cmp	r5, sl
   1969c:	subhi	r7, lr, #2
   196a0:	bhi	19678 <dta_parse_timestamp+0x160>
   196a4:	ldrb	r5, [lr, #1]
   196a8:	cmp	r5, sl
   196ac:	addcc	r6, lr, #2
   196b0:	bcc	19678 <dta_parse_timestamp+0x160>
   196b4:	sub	ip, lr, ip
   196b8:	add	r1, r1, ip, asr #1
   196bc:	b	195c8 <dta_parse_timestamp+0xb0>
   196c0:	add	r1, r1, r9
   196c4:	b	195c8 <dta_parse_timestamp+0xb0>
   196c8:	ldrb	r5, [r1], #1
   196cc:	cmp	r5, #16
   196d0:	addls	pc, pc, r5, lsl #2
   196d4:	b	1960c <dta_parse_timestamp+0xf4>
   196d8:	b	19724 <dta_parse_timestamp+0x20c>
   196dc:	b	1971c <dta_parse_timestamp+0x204>
   196e0:	b	19738 <dta_parse_timestamp+0x220>
   196e4:	b	19740 <dta_parse_timestamp+0x228>
   196e8:	b	1974c <dta_parse_timestamp+0x234>
   196ec:	b	19754 <dta_parse_timestamp+0x23c>
   196f0:	b	1975c <dta_parse_timestamp+0x244>
   196f4:	b	19764 <dta_parse_timestamp+0x24c>
   196f8:	b	1976c <dta_parse_timestamp+0x254>
   196fc:	b	19774 <dta_parse_timestamp+0x25c>
   19700:	b	1977c <dta_parse_timestamp+0x264>
   19704:	b	19788 <dta_parse_timestamp+0x270>
   19708:	b	19790 <dta_parse_timestamp+0x278>
   1970c:	b	19798 <dta_parse_timestamp+0x280>
   19710:	b	197a0 <dta_parse_timestamp+0x288>
   19714:	b	197a8 <dta_parse_timestamp+0x290>
   19718:	b	197b8 <dta_parse_timestamp+0x2a0>
   1971c:	mov	r4, #0
   19720:	b	1960c <dta_parse_timestamp+0xf4>
   19724:	ldrb	r5, [r3]
   19728:	mov	r0, #10
   1972c:	sub	r5, r5, #48	; 0x30
   19730:	mla	r4, r0, r4, r5
   19734:	b	1960c <dta_parse_timestamp+0xf4>
   19738:	str	r4, [r2, #12]
   1973c:	b	1960c <dta_parse_timestamp+0xf4>
   19740:	mov	r5, #0
   19744:	str	r5, [r2, #16]
   19748:	b	1960c <dta_parse_timestamp+0xf4>
   1974c:	mov	r5, #1
   19750:	b	19744 <dta_parse_timestamp+0x22c>
   19754:	mov	r5, #2
   19758:	b	19744 <dta_parse_timestamp+0x22c>
   1975c:	str	sl, [r2, #16]
   19760:	b	1960c <dta_parse_timestamp+0xf4>
   19764:	str	r9, [r2, #16]
   19768:	b	1960c <dta_parse_timestamp+0xf4>
   1976c:	str	r7, [r2, #16]
   19770:	b	1960c <dta_parse_timestamp+0xf4>
   19774:	str	r6, [r2, #16]
   19778:	b	1960c <dta_parse_timestamp+0xf4>
   1977c:	mov	r0, #7
   19780:	str	r0, [r2, #16]
   19784:	b	1960c <dta_parse_timestamp+0xf4>
   19788:	mov	r0, #8
   1978c:	b	19780 <dta_parse_timestamp+0x268>
   19790:	mov	r0, #9
   19794:	b	19780 <dta_parse_timestamp+0x268>
   19798:	mov	r0, #10
   1979c:	b	19780 <dta_parse_timestamp+0x268>
   197a0:	mov	r0, #11
   197a4:	b	19780 <dta_parse_timestamp+0x268>
   197a8:	sub	r5, r4, #1888	; 0x760
   197ac:	sub	r5, r5, #12
   197b0:	str	r5, [r2, #20]
   197b4:	b	1960c <dta_parse_timestamp+0xf4>
   197b8:	str	r4, [r2, #8]
   197bc:	b	1960c <dta_parse_timestamp+0xf4>
   197c0:	ldrb	ip, [r1], #1
   197c4:	cmp	ip, #17
   197c8:	streq	r4, [r2, #4]
   197cc:	subs	r3, r3, #1
   197d0:	bcs	197c0 <dta_parse_timestamp+0x2a8>
   197d4:	mov	r3, fp
   197d8:	subs	r3, r3, fp
   197dc:	movne	r3, #1
   197e0:	cmp	lr, #43	; 0x2b
   197e4:	movgt	lr, r3
   197e8:	orrle	lr, r3, #1
   197ec:	cmp	lr, #0
   197f0:	moveq	r0, lr
   197f4:	beq	19840 <dta_parse_timestamp+0x328>
   197f8:	ldr	r3, [sp, #16]
   197fc:	cmp	r3, #0
   19800:	beq	1983c <dta_parse_timestamp+0x324>
   19804:	ldr	r0, [sp, #8]
   19808:	mov	r5, r3
   1980c:	ldr	r2, [pc, #80]	; 19864 <dta_parse_timestamp+0x34c>
   19810:	ldr	r3, [sp, #12]
   19814:	add	r4, sp, #32
   19818:	str	r0, [sp, #4]
   1981c:	mov	r1, #1024	; 0x400
   19820:	str	r3, [sp]
   19824:	add	r2, pc, r2
   19828:	mov	r0, r4
   1982c:	bl	42c4 <snprintf@plt>
   19830:	ldr	r1, [sp, #1096]	; 0x448
   19834:	mov	r0, r4
   19838:	blx	r5
   1983c:	mov	r0, #29
   19840:	add	sp, sp, #1056	; 0x420
   19844:	add	sp, sp, #4
   19848:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1984c:	mov	r4, #0
   19850:	mov	lr, #1
   19854:	b	19628 <dta_parse_timestamp+0x110>
   19858:	.word	0x00009fd7
   1985c:	.word	0x00009fd3
   19860:	.word	0x00009eef
   19864:	.word	0x00009f85

00019868 <dta_update_progress>:
   19868:	push	{r4, r6, r7, lr}
   1986c:	mov	r4, r0
   19870:	ldrd	r6, [r0, #168]	; 0xa8
   19874:	vpush	{d8}
   19878:	cmp	r6, #1
   1987c:	sbcs	r3, r7, #0
   19880:	blt	198d0 <dta_update_progress+0x68>
   19884:	ldrd	r0, [r0, #184]	; 0xb8
   19888:	bl	20ddc <__aeabi_l2d>
   1988c:	vmov	d8, r0, r1
   19890:	mov	r0, r6
   19894:	mov	r1, r7
   19898:	bl	20ddc <__aeabi_l2d>
   1989c:	vmov	d7, r0, r1
   198a0:	vdiv.f64	d0, d8, d7
   198a4:	ldr	r3, [r4, #268]	; 0x10c
   198a8:	cmp	r3, #0
   198ac:	beq	198c4 <dta_update_progress+0x5c>
   198b0:	ldr	r0, [r4, #276]	; 0x114
   198b4:	blx	r3
   198b8:	cmp	r0, #0
   198bc:	movne	r0, #4
   198c0:	bne	198c8 <dta_update_progress+0x60>
   198c4:	mov	r0, #0
   198c8:	vpop	{d8}
   198cc:	pop	{r4, r6, r7, pc}
   198d0:	vldr	d0, [pc]	; 198d8 <dta_update_progress+0x70>
   198d4:	b	198a4 <dta_update_progress+0x3c>
	...

000198e0 <dta_compare_strls>:
   198e0:	ldr	r1, [r1]
   198e4:	ldrh	r3, [r0]
   198e8:	ldrh	r2, [r1]
   198ec:	cmp	r3, r2
   198f0:	ldreq	r0, [r0, #8]
   198f4:	ldreq	r3, [r1, #8]
   198f8:	subeq	r0, r0, r3
   198fc:	subne	r0, r3, r2
   19900:	bx	lr

00019904 <dta_read_tag>:
   19904:	ldr	r3, [r0, #284]	; 0x11c
   19908:	cmp	r3, #0
   1990c:	beq	19924 <dta_read_tag+0x20>
   19910:	ldrb	r3, [r0, #192]	; 0xc0
   19914:	tst	r3, #4
   19918:	bne	19924 <dta_read_tag+0x20>
   1991c:	mov	r0, #0
   19920:	bx	lr
   19924:	push	{r4, r5, r6, r7, lr}
   19928:	mov	r4, r0
   1992c:	sub	sp, sp, #260	; 0x104
   19930:	mov	r0, r1
   19934:	mov	r5, r1
   19938:	bl	424c <strlen@plt>
   1993c:	ldr	r3, [r4, #280]	; 0x118
   19940:	ldr	r7, [r3, #12]
   19944:	ldr	r2, [r3, #20]
   19948:	mov	r6, r0
   1994c:	mov	r1, r0
   19950:	mov	r0, sp
   19954:	blx	r7
   19958:	cmp	r6, r0
   1995c:	movne	r0, #2
   19960:	bne	19980 <dta_read_tag+0x7c>
   19964:	mov	r2, r6
   19968:	mov	r1, r5
   1996c:	mov	r0, sp
   19970:	bl	454c <strncmp@plt>
   19974:	cmp	r0, #0
   19978:	movne	r0, #5
   1997c:	moveq	r0, #0
   19980:	add	sp, sp, #260	; 0x104
   19984:	pop	{r4, r5, r6, r7, pc}

00019988 <dta_read_chunk>:
   19988:	push	{r4, r5, r6, r7, r8, lr}
   1998c:	mov	r4, r0
   19990:	mov	r8, r2
   19994:	mov	r5, r3
   19998:	ldr	r7, [sp, #24]
   1999c:	ldr	r6, [r0, #280]	; 0x118
   199a0:	bl	19904 <dta_read_tag>
   199a4:	cmp	r0, #0
   199a8:	popne	{r4, r5, r6, r7, r8, pc}
   199ac:	ldr	r3, [r6, #12]
   199b0:	ldr	r2, [r6, #20]
   199b4:	mov	r1, r5
   199b8:	mov	r0, r8
   199bc:	blx	r3
   199c0:	cmp	r5, r0
   199c4:	bne	199d8 <dta_read_chunk+0x50>
   199c8:	mov	r1, r7
   199cc:	mov	r0, r4
   199d0:	pop	{r4, r5, r6, r7, r8, lr}
   199d4:	b	19904 <dta_read_tag>
   199d8:	mov	r0, #2
   199dc:	pop	{r4, r5, r6, r7, r8, pc}

000199e0 <readstat_parse_dta>:
   199e0:	ldr	r3, [r0, #32]
   199e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   199e8:	sub	sp, sp, #260	; 0x104
   199ec:	mov	r4, r0
   199f0:	mov	r0, r3
   199f4:	mov	r5, r1
   199f8:	str	r2, [sp, #32]
   199fc:	str	r3, [sp, #20]
   19a00:	bl	45ac <dta_ctx_alloc@plt>
   19a04:	ldr	r3, [sp, #20]
   19a08:	ldr	r2, [sp, #20]
   19a0c:	ldr	r3, [r3]
   19a10:	ldr	r1, [r2, #20]
   19a14:	mov	r7, r0
   19a18:	mov	r0, r5
   19a1c:	blx	r3
   19a20:	cmn	r0, #1
   19a24:	moveq	fp, #1
   19a28:	beq	1a46c <readstat_parse_dta+0xa8c>
   19a2c:	ldr	r3, [sp, #20]
   19a30:	ldr	r2, [sp, #20]
   19a34:	add	r5, sp, #60	; 0x3c
   19a38:	ldr	r3, [r3, #12]
   19a3c:	ldr	r2, [r2, #20]
   19a40:	mov	r1, #4
   19a44:	mov	r0, r5
   19a48:	blx	r3
   19a4c:	cmp	r0, #4
   19a50:	mov	r6, r0
   19a54:	bne	1a1f4 <readstat_parse_dta+0x814>
   19a58:	ldr	r3, [sp, #20]
   19a5c:	ldr	r2, [sp, #20]
   19a60:	mov	r1, #2
   19a64:	ldr	r3, [r3, #8]
   19a68:	ldr	r2, [r2, #20]
   19a6c:	mov	r0, #0
   19a70:	blx	r3
   19a74:	cmn	r0, #1
   19a78:	str	r0, [sp, #28]
   19a7c:	bne	19ab4 <readstat_parse_dta+0xd4>
   19a80:	ldr	r4, [r7, #264]	; 0x108
   19a84:	cmp	r4, #0
   19a88:	bne	19a94 <readstat_parse_dta+0xb4>
   19a8c:	mov	fp, #15
   19a90:	b	1a46c <readstat_parse_dta+0xa8c>
   19a94:	ldr	r1, [pc, #4000]	; 1aa3c <readstat_parse_dta+0x105c>
   19a98:	add	r3, r7, #288	; 0x120
   19a9c:	add	r1, pc, r1
   19aa0:	mov	r0, r3
   19aa4:	bl	40e4 <strcpy@plt>
   19aa8:	ldr	r1, [r7, #276]	; 0x114
   19aac:	blx	r4
   19ab0:	b	19a8c <readstat_parse_dta+0xac>
   19ab4:	ldr	r3, [sp, #20]
   19ab8:	ldr	r2, [sp, #20]
   19abc:	mov	r1, #0
   19ac0:	ldr	r3, [r3, #8]
   19ac4:	ldr	r2, [r2, #20]
   19ac8:	mov	r0, r1
   19acc:	blx	r3
   19ad0:	cmn	r0, #1
   19ad4:	bne	19af4 <readstat_parse_dta+0x114>
   19ad8:	ldr	r4, [r7, #264]	; 0x108
   19adc:	cmp	r4, #0
   19ae0:	beq	19a8c <readstat_parse_dta+0xac>
   19ae4:	ldr	r1, [pc, #3924]	; 1aa40 <readstat_parse_dta+0x1060>
   19ae8:	add	r3, r7, #288	; 0x120
   19aec:	add	r1, pc, r1
   19af0:	b	19aa0 <readstat_parse_dta+0xc0>
   19af4:	ldr	r1, [pc, #3912]	; 1aa44 <readstat_parse_dta+0x1064>
   19af8:	mov	r2, r6
   19afc:	add	r1, pc, r1
   19b00:	mov	r0, r5
   19b04:	bl	454c <strncmp@plt>
   19b08:	cmp	r0, #0
   19b0c:	bne	19d78 <readstat_parse_dta+0x398>
   19b10:	ldr	r1, [pc, #3888]	; 1aa48 <readstat_parse_dta+0x1068>
   19b14:	mov	r0, r7
   19b18:	add	r1, pc, r1
   19b1c:	bl	19904 <dta_read_tag>
   19b20:	subs	fp, r0, #0
   19b24:	bne	1a46c <readstat_parse_dta+0xa8c>
   19b28:	ldr	r1, [pc, #3868]	; 1aa4c <readstat_parse_dta+0x106c>
   19b2c:	mov	r0, r7
   19b30:	add	r1, pc, r1
   19b34:	bl	19904 <dta_read_tag>
   19b38:	subs	fp, r0, #0
   19b3c:	bne	1a46c <readstat_parse_dta+0xa8c>
   19b40:	ldr	r3, [pc, #3848]	; 1aa50 <readstat_parse_dta+0x1070>
   19b44:	ldr	r1, [pc, #3848]	; 1aa54 <readstat_parse_dta+0x1074>
   19b48:	add	r3, pc, r3
   19b4c:	str	r3, [sp]
   19b50:	add	r2, sp, #64	; 0x40
   19b54:	mov	r3, #3
   19b58:	add	r1, pc, r1
   19b5c:	mov	r0, r7
   19b60:	bl	19988 <dta_read_chunk>
   19b64:	subs	fp, r0, #0
   19b68:	bne	1a46c <readstat_parse_dta+0xa8c>
   19b6c:	ldr	r3, [pc, #3812]	; 1aa58 <readstat_parse_dta+0x1078>
   19b70:	ldr	r1, [pc, #3812]	; 1aa5c <readstat_parse_dta+0x107c>
   19b74:	add	r3, pc, r3
   19b78:	add	r9, sp, #80	; 0x50
   19b7c:	str	r3, [sp]
   19b80:	mov	r2, r9
   19b84:	mov	r3, #3
   19b88:	add	r1, pc, r1
   19b8c:	mov	r0, r7
   19b90:	ldrb	r6, [sp, #64]	; 0x40
   19b94:	ldrb	r5, [sp, #65]	; 0x41
   19b98:	ldrb	r8, [sp, #66]	; 0x42
   19b9c:	bl	19988 <dta_read_chunk>
   19ba0:	subs	fp, r0, #0
   19ba4:	bne	1a46c <readstat_parse_dta+0xa8c>
   19ba8:	ldr	r1, [pc, #3760]	; 1aa60 <readstat_parse_dta+0x1080>
   19bac:	mov	r2, #3
   19bb0:	add	r1, pc, r1
   19bb4:	mov	r0, r9
   19bb8:	bl	454c <strncmp@plt>
   19bbc:	cmp	r0, #0
   19bc0:	beq	19bec <readstat_parse_dta+0x20c>
   19bc4:	ldr	r1, [pc, #3736]	; 1aa64 <readstat_parse_dta+0x1084>
   19bc8:	mov	r2, #3
   19bcc:	add	r1, pc, r1
   19bd0:	mov	r0, r9
   19bd4:	bl	454c <strncmp@plt>
   19bd8:	cmp	r0, #0
   19bdc:	moveq	r3, #2
   19be0:	beq	19bf0 <readstat_parse_dta+0x210>
   19be4:	mov	fp, #5
   19be8:	b	1a46c <readstat_parse_dta+0xa8c>
   19bec:	mov	r3, #1
   19bf0:	str	r3, [sp, #24]
   19bf4:	sub	r6, r6, #48	; 0x30
   19bf8:	mov	r3, #100	; 0x64
   19bfc:	sub	r8, r8, #48	; 0x30
   19c00:	mla	r8, r6, r3, r8
   19c04:	ldr	r3, [sp, #24]
   19c08:	sub	r5, r5, #48	; 0x30
   19c0c:	sub	r9, r3, #2
   19c10:	bl	3ef8 <machine_is_little_endian@plt>
   19c14:	mov	r6, #10
   19c18:	clz	r9, r9
   19c1c:	mla	r6, r5, r6, r8
   19c20:	lsr	r9, r9, #5
   19c24:	add	sl, sp, #120	; 0x78
   19c28:	uxtb	r6, r6
   19c2c:	cmp	r6, #118	; 0x76
   19c30:	mov	r8, r0
   19c34:	bls	19ce8 <readstat_parse_dta+0x308>
   19c38:	ldr	r3, [pc, #3624]	; 1aa68 <readstat_parse_dta+0x1088>
   19c3c:	ldr	r1, [pc, #3624]	; 1aa6c <readstat_parse_dta+0x108c>
   19c40:	add	r3, pc, r3
   19c44:	str	r3, [sp]
   19c48:	mov	r2, sl
   19c4c:	mov	r3, #4
   19c50:	add	r1, pc, r1
   19c54:	mov	r0, r7
   19c58:	bl	19988 <dta_read_chunk>
   19c5c:	subs	fp, r0, #0
   19c60:	bne	1a46c <readstat_parse_dta+0xa8c>
   19c64:	cmp	r9, r8
   19c68:	ldreq	r5, [sp, #120]	; 0x78
   19c6c:	beq	19c7c <readstat_parse_dta+0x29c>
   19c70:	ldr	r0, [sp, #120]	; 0x78
   19c74:	bl	3dd8 <byteswap4@plt>
   19c78:	mov	r5, r0
   19c7c:	ldr	r3, [pc, #3564]	; 1aa70 <readstat_parse_dta+0x1090>
   19c80:	ldr	r1, [pc, #3564]	; 1aa74 <readstat_parse_dta+0x1094>
   19c84:	add	r3, pc, r3
   19c88:	str	r3, [sp]
   19c8c:	mov	r2, sl
   19c90:	mov	r3, #8
   19c94:	add	r1, pc, r1
   19c98:	mov	r0, r7
   19c9c:	bl	19988 <dta_read_chunk>
   19ca0:	subs	fp, r0, #0
   19ca4:	bne	1a46c <readstat_parse_dta+0xa8c>
   19ca8:	cmp	r9, r8
   19cac:	ldr	r0, [sp, #120]	; 0x78
   19cb0:	ldr	r1, [sp, #124]	; 0x7c
   19cb4:	beq	19cbc <readstat_parse_dta+0x2dc>
   19cb8:	bl	3dc0 <byteswap8@plt>
   19cbc:	mov	r2, r0
   19cc0:	mov	r3, r1
   19cc4:	ldr	r1, [r4, #40]	; 0x28
   19cc8:	str	r1, [sp, #12]
   19ccc:	ldr	r1, [r4, #36]	; 0x24
   19cd0:	str	r6, [sp, #4]
   19cd4:	str	r1, [sp, #8]
   19cd8:	ldr	r1, [sp, #24]
   19cdc:	str	r1, [sp]
   19ce0:	mov	r1, r5
   19ce4:	b	19e14 <readstat_parse_dta+0x434>
   19ce8:	ldr	r3, [pc, #3464]	; 1aa78 <readstat_parse_dta+0x1098>
   19cec:	ldr	r1, [pc, #3464]	; 1aa7c <readstat_parse_dta+0x109c>
   19cf0:	add	r3, pc, r3
   19cf4:	str	r3, [sp]
   19cf8:	mov	r2, sl
   19cfc:	mov	r3, #2
   19d00:	add	r1, pc, r1
   19d04:	mov	r0, r7
   19d08:	bl	19988 <dta_read_chunk>
   19d0c:	subs	fp, r0, #0
   19d10:	bne	1a46c <readstat_parse_dta+0xa8c>
   19d14:	cmp	r9, r8
   19d18:	ldrh	r0, [sp, #120]	; 0x78
   19d1c:	beq	19d24 <readstat_parse_dta+0x344>
   19d20:	bl	3eec <byteswap2@plt>
   19d24:	cmp	r6, #117	; 0x75
   19d28:	mov	r5, r0
   19d2c:	bhi	19c7c <readstat_parse_dta+0x29c>
   19d30:	ldr	r3, [pc, #3400]	; 1aa80 <readstat_parse_dta+0x10a0>
   19d34:	ldr	r1, [pc, #3400]	; 1aa84 <readstat_parse_dta+0x10a4>
   19d38:	add	r3, pc, r3
   19d3c:	str	r3, [sp]
   19d40:	mov	r2, sl
   19d44:	mov	r3, #4
   19d48:	add	r1, pc, r1
   19d4c:	mov	r0, r7
   19d50:	bl	19988 <dta_read_chunk>
   19d54:	subs	fp, r0, #0
   19d58:	bne	1a46c <readstat_parse_dta+0xa8c>
   19d5c:	cmp	r9, r8
   19d60:	ldr	r0, [sp, #120]	; 0x78
   19d64:	beq	19d6c <readstat_parse_dta+0x38c>
   19d68:	bl	3dd8 <byteswap4@plt>
   19d6c:	mov	r2, r0
   19d70:	mov	r3, #0
   19d74:	b	19cc4 <readstat_parse_dta+0x2e4>
   19d78:	ldr	r3, [r7, #280]	; 0x118
   19d7c:	mov	r1, #10
   19d80:	add	r0, sp, #120	; 0x78
   19d84:	ldr	r5, [r3, #12]
   19d88:	ldr	r2, [r3, #20]
   19d8c:	blx	r5
   19d90:	cmp	r0, #10
   19d94:	bne	1a1f4 <readstat_parse_dta+0x814>
   19d98:	ldrb	r5, [sp, #121]	; 0x79
   19d9c:	bl	3ef8 <machine_is_little_endian@plt>
   19da0:	sub	r5, r5, #2
   19da4:	clz	r5, r5
   19da8:	lsr	r5, r5, #5
   19dac:	cmp	r5, r0
   19db0:	mov	r6, r0
   19db4:	ldrh	r0, [sp, #124]	; 0x7c
   19db8:	beq	19dc0 <readstat_parse_dta+0x3e0>
   19dbc:	bl	3eec <byteswap2@plt>
   19dc0:	ldrh	r2, [sp, #128]	; 0x80
   19dc4:	strh	r0, [sp, #124]	; 0x7c
   19dc8:	ldrh	r0, [sp, #126]	; 0x7e
   19dcc:	cmp	r5, r6
   19dd0:	orr	r0, r0, r2, lsl #16
   19dd4:	beq	19ddc <readstat_parse_dta+0x3fc>
   19dd8:	bl	3dd8 <byteswap4@plt>
   19ddc:	lsr	r3, r0, #16
   19de0:	strh	r3, [sp, #128]	; 0x80
   19de4:	ldr	r3, [r4, #40]	; 0x28
   19de8:	ldrh	r1, [sp, #124]	; 0x7c
   19dec:	str	r3, [sp, #12]
   19df0:	ldr	r3, [r4, #36]	; 0x24
   19df4:	mov	r2, r0
   19df8:	str	r3, [sp, #8]
   19dfc:	ldrb	r3, [sp, #120]	; 0x78
   19e00:	strh	r0, [sp, #126]	; 0x7e
   19e04:	str	r3, [sp, #4]
   19e08:	ldrb	r3, [sp, #121]	; 0x79
   19e0c:	str	r3, [sp]
   19e10:	mov	r3, #0
   19e14:	mov	r0, r7
   19e18:	bl	421c <dta_ctx_init@plt>
   19e1c:	cmp	r0, #0
   19e20:	mov	fp, r0
   19e24:	bne	1a46c <readstat_parse_dta+0xa8c>
   19e28:	ldr	r3, [sp, #32]
   19e2c:	mov	lr, r4
   19e30:	str	r3, [r7, #276]	; 0x114
   19e34:	ldr	r3, [sp, #28]
   19e38:	add	ip, r7, #240	; 0xf0
   19e3c:	str	r3, [r7, #272]	; 0x110
   19e40:	ldm	lr!, {r0, r1, r2, r3}
   19e44:	stmia	ip!, {r0, r1, r2, r3}
   19e48:	ldm	lr, {r0, r1, r2, r3}
   19e4c:	stm	ip, {r0, r1, r2, r3}
   19e50:	ldr	r2, [r4, #48]	; 0x30
   19e54:	cmp	r2, #0
   19e58:	asrgt	r3, r2, #31
   19e5c:	strdgt	r2, [r7, #176]	; 0xb0
   19e60:	ldrd	r0, [r7, #152]	; 0x98
   19e64:	ldrd	r2, [r7, #176]	; 0xb0
   19e68:	subs	r2, r0, r2
   19e6c:	sbc	r3, r1, r3
   19e70:	cmp	r2, #0
   19e74:	sbcs	ip, r3, #0
   19e78:	movlt	r2, #0
   19e7c:	movlt	r3, #0
   19e80:	strdlt	r0, [r7, #176]	; 0xb0
   19e84:	ldr	r0, [r4, #44]	; 0x2c
   19e88:	strd	r2, [r7, #168]	; 0xa8
   19e8c:	cmp	r0, #0
   19e90:	ble	19ea4 <readstat_parse_dta+0x4c4>
   19e94:	asr	r1, r0, #31
   19e98:	cmp	r0, r2
   19e9c:	sbcs	r3, r1, r3
   19ea0:	strdlt	r0, [r7, #168]	; 0xa8
   19ea4:	mov	r0, r7
   19ea8:	bl	19868 <dta_update_progress>
   19eac:	subs	fp, r0, #0
   19eb0:	bne	1a46c <readstat_parse_dta+0xa8c>
   19eb4:	add	sl, sp, #120	; 0x78
   19eb8:	mov	r2, #44	; 0x2c
   19ebc:	mov	r1, fp
   19ec0:	mov	r0, sl
   19ec4:	ldr	r5, [r7, #280]	; 0x118
   19ec8:	strb	fp, [sp, #59]	; 0x3b
   19ecc:	strh	fp, [sp, #80]	; 0x50
   19ed0:	bl	42e8 <memset@plt>
   19ed4:	mvn	r3, #0
   19ed8:	str	r3, [sp, #152]	; 0x98
   19edc:	ldrb	r3, [r7, #192]	; 0xc0
   19ee0:	tst	r3, #4
   19ee4:	ldreq	r3, [r7, #4]
   19ee8:	beq	1a200 <readstat_parse_dta+0x820>
   19eec:	ldr	r1, [pc, #2964]	; 1aa88 <readstat_parse_dta+0x10a8>
   19ef0:	mov	r0, r7
   19ef4:	add	r1, pc, r1
   19ef8:	bl	19904 <dta_read_tag>
   19efc:	subs	fp, r0, #0
   19f00:	bne	1a46c <readstat_parse_dta+0xa8c>
   19f04:	ldr	fp, [r7, #8]
   19f08:	cmp	fp, #2
   19f0c:	bne	1a1d0 <readstat_parse_dta+0x7f0>
   19f10:	ldr	r3, [r5, #12]
   19f14:	ldr	r2, [r5, #20]
   19f18:	mov	r1, fp
   19f1c:	add	r0, sp, #80	; 0x50
   19f20:	blx	r3
   19f24:	cmp	r0, #2
   19f28:	bne	1a46c <readstat_parse_dta+0xa8c>
   19f2c:	ldrb	r3, [r7, #192]	; 0xc0
   19f30:	ldrh	r0, [sp, #80]	; 0x50
   19f34:	tst	r3, #1
   19f38:	beq	19f40 <readstat_parse_dta+0x560>
   19f3c:	bl	3eec <byteswap2@plt>
   19f40:	strh	r0, [sp, #80]	; 0x50
   19f44:	ldrh	r0, [sp, #80]	; 0x50
   19f48:	add	r0, r0, #1
   19f4c:	bl	4270 <readstat_malloc@plt>
   19f50:	subs	r6, r0, #0
   19f54:	beq	1aee0 <readstat_parse_dta+0x1500>
   19f58:	ldr	r3, [r5, #12]
   19f5c:	ldr	r2, [r5, #20]
   19f60:	ldrh	r1, [sp, #80]	; 0x50
   19f64:	blx	r3
   19f68:	ldrh	r3, [sp, #80]	; 0x50
   19f6c:	cmp	r0, r3
   19f70:	bne	1b434 <readstat_parse_dta+0x1a54>
   19f74:	ldrb	r3, [r7, #192]	; 0xc0
   19f78:	ands	r3, r3, #4
   19f7c:	movne	r8, #0
   19f80:	bne	19f9c <readstat_parse_dta+0x5bc>
   19f84:	add	r2, r6, r0
   19f88:	ldrb	r8, [r2, #-1]
   19f8c:	strb	r3, [r6, r0]
   19f90:	mov	r0, r6
   19f94:	bl	424c <strlen@plt>
   19f98:	strh	r0, [sp, #80]	; 0x50
   19f9c:	ldrh	r0, [sp, #80]	; 0x50
   19fa0:	lsl	r0, r0, #2
   19fa4:	add	r0, r0, #1
   19fa8:	bl	4270 <readstat_malloc@plt>
   19fac:	cmp	r0, #0
   19fb0:	mov	r4, r0
   19fb4:	str	r0, [r7]
   19fb8:	moveq	fp, #3
   19fbc:	beq	1a10c <readstat_parse_dta+0x72c>
   19fc0:	ldrh	r3, [sp, #80]	; 0x50
   19fc4:	ldr	r2, [r7, #236]	; 0xec
   19fc8:	str	r2, [sp]
   19fcc:	lsl	r1, r3, #2
   19fd0:	mov	r2, r6
   19fd4:	add	r1, r1, #1
   19fd8:	bl	427c <readstat_convert@plt>
   19fdc:	subs	fp, r0, #0
   19fe0:	bne	1b440 <readstat_parse_dta+0x1a60>
   19fe4:	ldrb	r3, [r7, #192]	; 0xc0
   19fe8:	tst	r3, #4
   19fec:	ldreq	r3, [r7, #16]
   19ff0:	strbeq	r3, [sp, #59]	; 0x3b
   19ff4:	beq	1a044 <readstat_parse_dta+0x664>
   19ff8:	ldr	r1, [pc, #2700]	; 1aa8c <readstat_parse_dta+0x10ac>
   19ffc:	mov	r0, r7
   1a000:	add	r1, pc, r1
   1a004:	bl	19904 <dta_read_tag>
   1a008:	subs	fp, r0, #0
   1a00c:	bne	1b440 <readstat_parse_dta+0x1a60>
   1a010:	ldr	r1, [pc, #2680]	; 1aa90 <readstat_parse_dta+0x10b0>
   1a014:	mov	r0, r7
   1a018:	add	r1, pc, r1
   1a01c:	bl	19904 <dta_read_tag>
   1a020:	subs	fp, r0, #0
   1a024:	bne	1b440 <readstat_parse_dta+0x1a60>
   1a028:	ldr	r3, [r5, #12]
   1a02c:	ldr	r2, [r5, #20]
   1a030:	mov	r1, #1
   1a034:	add	r0, sp, #59	; 0x3b
   1a038:	blx	r3
   1a03c:	cmp	r0, #1
   1a040:	bne	1b434 <readstat_parse_dta+0x1a54>
   1a044:	ldrb	r0, [sp, #59]	; 0x3b
   1a048:	cmp	r0, #0
   1a04c:	beq	1a208 <readstat_parse_dta+0x828>
   1a050:	bl	4270 <readstat_malloc@plt>
   1a054:	ldr	r3, [r5, #12]
   1a058:	ldr	r2, [r5, #20]
   1a05c:	ldrb	r1, [sp, #59]	; 0x3b
   1a060:	mov	r4, r0
   1a064:	blx	r3
   1a068:	ldrb	r3, [sp, #59]	; 0x3b
   1a06c:	cmp	r0, r3
   1a070:	bne	1b438 <readstat_parse_dta+0x1a58>
   1a074:	ldrb	r3, [r7, #192]	; 0xc0
   1a078:	tst	r3, #4
   1a07c:	subeq	r0, r0, #1
   1a080:	strbeq	r0, [sp, #59]	; 0x3b
   1a084:	ldrb	r3, [r4]
   1a088:	cmp	r3, #0
   1a08c:	beq	1a0f8 <readstat_parse_dta+0x718>
   1a090:	ldrb	r2, [sp, #59]	; 0x3b
   1a094:	cmp	r8, #0
   1a098:	add	r3, r4, r2
   1a09c:	ldrb	r3, [r3, #-1]
   1a0a0:	clz	r3, r3
   1a0a4:	lsr	r3, r3, #5
   1a0a8:	moveq	r3, #0
   1a0ac:	cmp	r3, #0
   1a0b0:	beq	1a0c8 <readstat_parse_dta+0x6e8>
   1a0b4:	sub	r2, r2, #1
   1a0b8:	mov	r1, r4
   1a0bc:	add	r0, r4, #1
   1a0c0:	bl	3ee0 <memmove@plt>
   1a0c4:	strb	r8, [r4]
   1a0c8:	ldr	r3, [r7, #276]	; 0x114
   1a0cc:	ldrb	r1, [sp, #59]	; 0x3b
   1a0d0:	str	r3, [sp]
   1a0d4:	mov	r2, sl
   1a0d8:	ldr	r3, [r7, #264]	; 0x108
   1a0dc:	mov	r0, r4
   1a0e0:	bl	433c <dta_parse_timestamp@plt>
   1a0e4:	subs	fp, r0, #0
   1a0e8:	bne	1a10c <readstat_parse_dta+0x72c>
   1a0ec:	mov	r0, sl
   1a0f0:	bl	3e98 <mktime@plt>
   1a0f4:	str	r0, [r7, #12]
   1a0f8:	ldr	r1, [pc, #2452]	; 1aa94 <readstat_parse_dta+0x10b4>
   1a0fc:	mov	r0, r7
   1a100:	add	r1, pc, r1
   1a104:	bl	19904 <dta_read_tag>
   1a108:	mov	fp, r0
   1a10c:	mov	r0, r6
   1a110:	bl	3f04 <free@plt>
   1a114:	cmp	r4, #0
   1a118:	beq	1a124 <readstat_parse_dta+0x744>
   1a11c:	mov	r0, r4
   1a120:	bl	3f04 <free@plt>
   1a124:	cmp	fp, #0
   1a128:	bne	1a46c <readstat_parse_dta+0xa8c>
   1a12c:	ldr	r1, [pc, #2404]	; 1aa98 <readstat_parse_dta+0x10b8>
   1a130:	mov	r0, r7
   1a134:	add	r1, pc, r1
   1a138:	bl	19904 <dta_read_tag>
   1a13c:	subs	fp, r0, #0
   1a140:	bne	1a46c <readstat_parse_dta+0xa8c>
   1a144:	ldr	r4, [r7, #240]	; 0xf0
   1a148:	cmp	r4, #0
   1a14c:	beq	1a210 <readstat_parse_dta+0x830>
   1a150:	mov	r2, #56	; 0x38
   1a154:	mov	r1, fp
   1a158:	mov	r0, sl
   1a15c:	bl	42e8 <memset@plt>
   1a160:	ldrd	r2, [r7, #168]	; 0xa8
   1a164:	strd	r2, [sp, #120]	; 0x78
   1a168:	ldr	r2, [r7, #148]	; 0x94
   1a16c:	asr	r3, r2, #31
   1a170:	strd	r2, [sp, #128]	; 0x80
   1a174:	ldr	r3, [r7, #12]
   1a178:	ldr	r2, [r7, #144]	; 0x90
   1a17c:	str	r3, [sp, #136]	; 0x88
   1a180:	str	r3, [sp, #140]	; 0x8c
   1a184:	ldr	r3, [r7, #232]	; 0xe8
   1a188:	mov	r0, r2
   1a18c:	str	r3, [sp, #156]	; 0x9c
   1a190:	ldr	r3, [r7]
   1a194:	asr	r1, r2, #31
   1a198:	str	r3, [sp, #164]	; 0xa4
   1a19c:	ldrb	r3, [sp, #172]	; 0xac
   1a1a0:	strd	r0, [sp, #144]	; 0x90
   1a1a4:	ldr	r1, [sp, #32]
   1a1a8:	bic	r3, r3, #1
   1a1ac:	cmp	r2, #117	; 0x75
   1a1b0:	orrgt	r3, r3, #1
   1a1b4:	strb	r3, [sp, #172]	; 0xac
   1a1b8:	mov	r0, sl
   1a1bc:	blx	r4
   1a1c0:	cmp	r0, #0
   1a1c4:	beq	1a210 <readstat_parse_dta+0x830>
   1a1c8:	mov	fp, #4
   1a1cc:	b	1a46c <readstat_parse_dta+0xa8c>
   1a1d0:	cmp	fp, #1
   1a1d4:	bne	19f44 <readstat_parse_dta+0x564>
   1a1d8:	ldr	r3, [r5, #12]
   1a1dc:	ldr	r2, [r5, #20]
   1a1e0:	mov	r1, fp
   1a1e4:	add	r0, sp, #64	; 0x40
   1a1e8:	blx	r3
   1a1ec:	cmp	r0, #1
   1a1f0:	beq	1a1fc <readstat_parse_dta+0x81c>
   1a1f4:	mov	fp, #2
   1a1f8:	b	1a46c <readstat_parse_dta+0xa8c>
   1a1fc:	ldrb	r3, [sp, #64]	; 0x40
   1a200:	strh	r3, [sp, #80]	; 0x50
   1a204:	b	19f44 <readstat_parse_dta+0x564>
   1a208:	mov	r4, r0
   1a20c:	b	1a0f8 <readstat_parse_dta+0x718>
   1a210:	ldrb	r3, [r7, #192]	; 0xc0
   1a214:	tst	r3, #4
   1a218:	beq	1a2a8 <readstat_parse_dta+0x8c8>
   1a21c:	ldr	r3, [pc, #2168]	; 1aa9c <readstat_parse_dta+0x10bc>
   1a220:	ldr	r1, [pc, #2168]	; 1aaa0 <readstat_parse_dta+0x10c0>
   1a224:	add	r3, pc, r3
   1a228:	str	r3, [sp]
   1a22c:	mov	r2, sl
   1a230:	mov	r3, #112	; 0x70
   1a234:	add	r1, pc, r1
   1a238:	mov	r0, r7
   1a23c:	bl	19988 <dta_read_chunk>
   1a240:	cmp	r0, #0
   1a244:	bne	1a1f4 <readstat_parse_dta+0x814>
   1a248:	ldrb	r3, [r7, #192]	; 0xc0
   1a24c:	ldr	r0, [sp, #192]	; 0xc0
   1a250:	ldr	r1, [sp, #196]	; 0xc4
   1a254:	tst	r3, #1
   1a258:	beq	1a260 <readstat_parse_dta+0x880>
   1a25c:	bl	3dc0 <byteswap8@plt>
   1a260:	ldrb	r3, [r7, #192]	; 0xc0
   1a264:	str	r0, [r7, #120]	; 0x78
   1a268:	str	r1, [r7, #124]	; 0x7c
   1a26c:	tst	r3, #1
   1a270:	ldr	r0, [sp, #200]	; 0xc8
   1a274:	ldr	r1, [sp, #204]	; 0xcc
   1a278:	beq	1a280 <readstat_parse_dta+0x8a0>
   1a27c:	bl	3dc0 <byteswap8@plt>
   1a280:	ldrb	r3, [r7, #192]	; 0xc0
   1a284:	str	r0, [r7, #128]	; 0x80
   1a288:	str	r1, [r7, #132]	; 0x84
   1a28c:	tst	r3, #1
   1a290:	ldr	r0, [sp, #208]	; 0xd0
   1a294:	ldr	r1, [sp, #212]	; 0xd4
   1a298:	beq	1a2a0 <readstat_parse_dta+0x8c0>
   1a29c:	bl	3dc0 <byteswap8@plt>
   1a2a0:	str	r0, [r7, #136]	; 0x88
   1a2a4:	str	r1, [r7, #140]	; 0x8c
   1a2a8:	ldr	r4, [r7, #148]	; 0x94
   1a2ac:	ldr	r5, [r7, #24]
   1a2b0:	cmp	r4, #0
   1a2b4:	mul	r5, r5, r4
   1a2b8:	beq	1a2cc <readstat_parse_dta+0x8ec>
   1a2bc:	mov	r0, r5
   1a2c0:	bl	4270 <readstat_malloc@plt>
   1a2c4:	subs	r4, r0, #0
   1a2c8:	beq	1aee0 <readstat_parse_dta+0x1500>
   1a2cc:	ldr	r3, [pc, #2000]	; 1aaa4 <readstat_parse_dta+0x10c4>
   1a2d0:	ldr	r1, [pc, #2000]	; 1aaa8 <readstat_parse_dta+0x10c8>
   1a2d4:	add	r3, pc, r3
   1a2d8:	str	r3, [sp]
   1a2dc:	mov	r2, r4
   1a2e0:	mov	r3, r5
   1a2e4:	add	r1, pc, r1
   1a2e8:	mov	r0, r7
   1a2ec:	bl	19988 <dta_read_chunk>
   1a2f0:	subs	fp, r0, #0
   1a2f4:	bne	1b448 <readstat_parse_dta+0x1a68>
   1a2f8:	ldr	r3, [r7, #24]
   1a2fc:	cmp	r3, #1
   1a300:	moveq	r3, fp
   1a304:	ldreq	r2, [r7, #148]	; 0x94
   1a308:	beq	1a36c <readstat_parse_dta+0x98c>
   1a30c:	cmp	r3, #2
   1a310:	bne	1a374 <readstat_parse_dta+0x994>
   1a314:	mov	r2, r5
   1a318:	mov	r1, r4
   1a31c:	ldr	r0, [r7, #28]
   1a320:	bl	3f64 <memcpy@plt>
   1a324:	ldrb	r3, [r7, #192]	; 0xc0
   1a328:	tst	r3, #1
   1a32c:	beq	1a374 <readstat_parse_dta+0x994>
   1a330:	ldr	r3, [r7, #148]	; 0x94
   1a334:	cmp	fp, r3
   1a338:	bge	1a374 <readstat_parse_dta+0x994>
   1a33c:	ldr	r8, [r7, #28]
   1a340:	lsl	r6, fp, #1
   1a344:	add	fp, fp, #1
   1a348:	ldrh	r0, [r8, r6]
   1a34c:	bl	3eec <byteswap2@plt>
   1a350:	strh	r0, [r8, r6]
   1a354:	b	1a330 <readstat_parse_dta+0x950>
   1a358:	ldrb	ip, [r4, r3]
   1a35c:	ldr	r0, [r7, #28]
   1a360:	lsl	r1, r3, #1
   1a364:	add	r3, r3, #1
   1a368:	strh	ip, [r0, r1]
   1a36c:	cmp	r3, r2
   1a370:	blt	1a358 <readstat_parse_dta+0x978>
   1a374:	ldr	r3, [pc, #1840]	; 1aaac <readstat_parse_dta+0x10cc>
   1a378:	ldr	r1, [pc, #1840]	; 1aab0 <readstat_parse_dta+0x10d0>
   1a37c:	add	r3, pc, r3
   1a380:	str	r3, [sp]
   1a384:	add	r1, pc, r1
   1a388:	ldr	r3, [r7, #40]	; 0x28
   1a38c:	ldr	r2, [r7, #36]	; 0x24
   1a390:	mov	r0, r7
   1a394:	bl	19988 <dta_read_chunk>
   1a398:	subs	fp, r0, #0
   1a39c:	bne	1b448 <readstat_parse_dta+0x1a68>
   1a3a0:	ldr	r3, [pc, #1804]	; 1aab4 <readstat_parse_dta+0x10d4>
   1a3a4:	ldr	r1, [pc, #1804]	; 1aab8 <readstat_parse_dta+0x10d8>
   1a3a8:	add	r3, pc, r3
   1a3ac:	str	r3, [sp]
   1a3b0:	add	r1, pc, r1
   1a3b4:	ldr	r3, [r7, #48]	; 0x30
   1a3b8:	ldr	r2, [r7, #44]	; 0x2c
   1a3bc:	mov	r0, r7
   1a3c0:	bl	19988 <dta_read_chunk>
   1a3c4:	subs	fp, r0, #0
   1a3c8:	bne	1b448 <readstat_parse_dta+0x1a68>
   1a3cc:	ldr	r3, [pc, #1768]	; 1aabc <readstat_parse_dta+0x10dc>
   1a3d0:	ldr	r1, [pc, #1768]	; 1aac0 <readstat_parse_dta+0x10e0>
   1a3d4:	add	r3, pc, r3
   1a3d8:	str	r3, [sp]
   1a3dc:	add	r1, pc, r1
   1a3e0:	ldr	r3, [r7, #56]	; 0x38
   1a3e4:	ldr	r2, [r7, #52]	; 0x34
   1a3e8:	mov	r0, r7
   1a3ec:	bl	19988 <dta_read_chunk>
   1a3f0:	subs	fp, r0, #0
   1a3f4:	bne	1b448 <readstat_parse_dta+0x1a68>
   1a3f8:	ldr	r3, [pc, #1732]	; 1aac4 <readstat_parse_dta+0x10e4>
   1a3fc:	ldr	r1, [pc, #1732]	; 1aac8 <readstat_parse_dta+0x10e8>
   1a400:	add	r3, pc, r3
   1a404:	str	r3, [sp]
   1a408:	add	r1, pc, r1
   1a40c:	ldr	r3, [r7, #64]	; 0x40
   1a410:	ldr	r2, [r7, #60]	; 0x3c
   1a414:	mov	r0, r7
   1a418:	bl	19988 <dta_read_chunk>
   1a41c:	subs	fp, r0, #0
   1a420:	bne	1b448 <readstat_parse_dta+0x1a68>
   1a424:	ldr	r3, [pc, #1696]	; 1aacc <readstat_parse_dta+0x10ec>
   1a428:	ldr	r1, [pc, #1696]	; 1aad0 <readstat_parse_dta+0x10f0>
   1a42c:	add	r3, pc, r3
   1a430:	str	r3, [sp]
   1a434:	add	r1, pc, r1
   1a438:	ldr	r3, [r7, #72]	; 0x48
   1a43c:	ldr	r2, [r7, #68]	; 0x44
   1a440:	mov	r0, r7
   1a444:	bl	19988 <dta_read_chunk>
   1a448:	cmp	r4, #0
   1a44c:	mov	fp, r0
   1a450:	beq	1a45c <readstat_parse_dta+0xa7c>
   1a454:	mov	r0, r4
   1a458:	bl	3f04 <free@plt>
   1a45c:	cmp	fp, #0
   1a460:	moveq	r4, fp
   1a464:	moveq	r5, r4
   1a468:	beq	1a4d4 <readstat_parse_dta+0xaf4>
   1a46c:	ldr	r3, [sp, #20]
   1a470:	ldr	r2, [sp, #20]
   1a474:	ldr	r3, [r3, #4]
   1a478:	ldr	r0, [r2, #20]
   1a47c:	blx	r3
   1a480:	cmp	r7, #0
   1a484:	beq	1a490 <readstat_parse_dta+0xab0>
   1a488:	mov	r0, r7
   1a48c:	bl	3ebc <dta_ctx_free@plt>
   1a490:	mov	r0, fp
   1a494:	add	sp, sp, #260	; 0x104
   1a498:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a49c:	ldr	ip, [r7, #28]
   1a4a0:	lsl	r0, r4, #1
   1a4a4:	mov	r3, r5
   1a4a8:	mov	r2, sl
   1a4ac:	mov	r1, r7
   1a4b0:	ldrh	r0, [ip, r0]
   1a4b4:	bl	4234 <dta_type_info@plt>
   1a4b8:	subs	fp, r0, #0
   1a4bc:	bne	1a46c <readstat_parse_dta+0xa8c>
   1a4c0:	ldr	r3, [r7, #160]	; 0xa0
   1a4c4:	ldr	r2, [sp, #120]	; 0x78
   1a4c8:	add	r4, r4, #1
   1a4cc:	add	r3, r3, r2
   1a4d0:	str	r3, [r7, #160]	; 0xa0
   1a4d4:	ldr	r3, [r7, #148]	; 0x94
   1a4d8:	cmp	r4, r3
   1a4dc:	blt	1a49c <readstat_parse_dta+0xabc>
   1a4e0:	cmp	r3, #0
   1a4e4:	bgt	1a4f8 <readstat_parse_dta+0xb18>
   1a4e8:	ldrd	r2, [r7, #152]	; 0x98
   1a4ec:	cmp	r2, #1
   1a4f0:	sbcs	r3, r3, #0
   1a4f4:	blt	1a504 <readstat_parse_dta+0xb24>
   1a4f8:	ldr	r3, [r7, #160]	; 0xa0
   1a4fc:	cmp	r3, #0
   1a500:	beq	19be4 <readstat_parse_dta+0x204>
   1a504:	ldr	r3, [r7, #248]	; 0xf8
   1a508:	cmp	r3, #0
   1a50c:	beq	1a544 <readstat_parse_dta+0xb64>
   1a510:	add	r3, sp, #80	; 0x50
   1a514:	str	r3, [sp, #24]
   1a518:	ldr	r3, [pc, #1460]	; 1aad4 <readstat_parse_dta+0x10f4>
   1a51c:	mov	r6, #0
   1a520:	add	r3, pc, r3
   1a524:	str	r3, [sp, #28]
   1a528:	ldr	r3, [pc, #1448]	; 1aad8 <readstat_parse_dta+0x10f8>
   1a52c:	mov	r5, r6
   1a530:	add	r3, pc, r3
   1a534:	str	r3, [sp, #32]
   1a538:	ldr	r3, [r7, #148]	; 0x94
   1a53c:	cmp	r5, r3
   1a540:	blt	1a5e0 <readstat_parse_dta+0xc00>
   1a544:	ldr	r3, [r7, #92]	; 0x5c
   1a548:	ldr	r5, [r7, #280]	; 0x118
   1a54c:	cmp	r3, #0
   1a550:	beq	1a584 <readstat_parse_dta+0xba4>
   1a554:	ldrb	r3, [r7, #192]	; 0xc0
   1a558:	tst	r3, #4
   1a55c:	beq	1a7e8 <readstat_parse_dta+0xe08>
   1a560:	ldr	r1, [r7, #244]	; 0xf4
   1a564:	cmp	r1, #0
   1a568:	bne	1a7e8 <readstat_parse_dta+0xe08>
   1a56c:	ldr	r3, [r5, #8]
   1a570:	ldr	r2, [r5, #20]
   1a574:	ldr	r0, [r7, #120]	; 0x78
   1a578:	blx	r3
   1a57c:	cmn	r0, #1
   1a580:	beq	1a7a8 <readstat_parse_dta+0xdc8>
   1a584:	ldrb	r0, [r7, #192]	; 0xc0
   1a588:	ands	r0, r0, #4
   1a58c:	beq	1ab78 <readstat_parse_dta+0x1198>
   1a590:	ldrb	r3, [r7, #192]	; 0xc0
   1a594:	tst	r3, #4
   1a598:	beq	1ae44 <readstat_parse_dta+0x1464>
   1a59c:	ldr	r4, [r7, #280]	; 0x118
   1a5a0:	mov	r1, #0
   1a5a4:	ldr	r0, [r7, #128]	; 0x80
   1a5a8:	ldr	r3, [r4, #8]
   1a5ac:	ldr	r2, [r4, #20]
   1a5b0:	blx	r3
   1a5b4:	cmn	r0, #1
   1a5b8:	bne	1abd0 <readstat_parse_dta+0x11f0>
   1a5bc:	ldr	r3, [r7, #264]	; 0x108
   1a5c0:	cmp	r3, #0
   1a5c4:	beq	19a8c <readstat_parse_dta+0xac>
   1a5c8:	ldrd	r2, [r7, #128]	; 0x80
   1a5cc:	add	r4, r7, #288	; 0x120
   1a5d0:	strd	r2, [sp]
   1a5d4:	ldr	r2, [pc, #1280]	; 1aadc <readstat_parse_dta+0x10fc>
   1a5d8:	add	r2, pc, r2
   1a5dc:	b	1a7c8 <readstat_parse_dta+0xde8>
   1a5e0:	ldr	ip, [r7, #28]
   1a5e4:	lsl	r0, r5, #1
   1a5e8:	ldr	r3, [sp, #24]
   1a5ec:	add	r2, sp, #64	; 0x40
   1a5f0:	mov	r1, r7
   1a5f4:	ldrh	r0, [ip, r0]
   1a5f8:	bl	4234 <dta_type_info@plt>
   1a5fc:	subs	fp, r0, #0
   1a600:	bne	1a46c <readstat_parse_dta+0xa8c>
   1a604:	ldr	r3, [sp, #80]	; 0x50
   1a608:	cmp	r3, #0
   1a60c:	ldreq	r3, [sp, #64]	; 0x40
   1a610:	addeq	r3, r3, #1
   1a614:	streq	r3, [sp, #64]	; 0x40
   1a618:	beq	1a628 <readstat_parse_dta+0xc48>
   1a61c:	cmp	r3, #6
   1a620:	streq	fp, [sp, #80]	; 0x50
   1a624:	streq	fp, [sp, #64]	; 0x40
   1a628:	ldr	r3, [sp, #80]	; 0x50
   1a62c:	ldr	r1, [pc, #1196]	; 1aae0 <readstat_parse_dta+0x1100>
   1a630:	mov	r0, #1
   1a634:	str	r3, [sp, #36]	; 0x24
   1a638:	ldr	r9, [sp, #64]	; 0x40
   1a63c:	ldr	fp, [r7, #228]	; 0xe4
   1a640:	bl	3d9c <calloc@plt>
   1a644:	ldr	r3, [sp, #36]	; 0x24
   1a648:	ldr	r2, [r7, #36]	; 0x24
   1a64c:	ldr	r1, [r7, #236]	; 0xec
   1a650:	lsl	r8, r5, #2
   1a654:	stm	r0, {r3, r5}
   1a658:	ldr	r3, [r7, #76]	; 0x4c
   1a65c:	str	r6, [r0, #2148]	; 0x864
   1a660:	str	r9, [r0, #1596]	; 0x63c
   1a664:	mla	r2, r3, r5, r2
   1a668:	str	r1, [sp]
   1a66c:	mov	r4, r0
   1a670:	mov	r1, #300	; 0x12c
   1a674:	add	r0, r0, #8
   1a678:	bl	427c <readstat_convert@plt>
   1a67c:	ldr	r3, [r7, #88]	; 0x58
   1a680:	ldr	r0, [r7, #68]	; 0x44
   1a684:	mul	r1, r3, r5
   1a688:	add	r2, r0, r1
   1a68c:	ldrb	r1, [r0, r1]
   1a690:	cmp	r1, #0
   1a694:	beq	1a6ac <readstat_parse_dta+0xccc>
   1a698:	ldr	r1, [r7, #236]	; 0xec
   1a69c:	add	r0, r4, #564	; 0x234
   1a6a0:	str	r1, [sp]
   1a6a4:	mov	r1, #1024	; 0x400
   1a6a8:	bl	427c <readstat_convert@plt>
   1a6ac:	ldr	r3, [r7, #80]	; 0x50
   1a6b0:	ldr	r0, [r7, #52]	; 0x34
   1a6b4:	mul	r1, r3, r5
   1a6b8:	add	r2, r0, r1
   1a6bc:	ldrb	r1, [r0, r1]
   1a6c0:	cmp	r1, #0
   1a6c4:	beq	1a72c <readstat_parse_dta+0xd4c>
   1a6c8:	ldr	r1, [r7, #236]	; 0xec
   1a6cc:	add	r9, r4, #308	; 0x134
   1a6d0:	str	r1, [sp]
   1a6d4:	mov	r0, r9
   1a6d8:	mov	r1, #256	; 0x100
   1a6dc:	bl	427c <readstat_convert@plt>
   1a6e0:	ldrb	r3, [r4, #308]	; 0x134
   1a6e4:	cmp	r3, #37	; 0x25
   1a6e8:	bne	1a70c <readstat_parse_dta+0xd2c>
   1a6ec:	ldrb	r3, [r4, #309]	; 0x135
   1a6f0:	cmp	r3, #45	; 0x2d
   1a6f4:	moveq	r3, #1
   1a6f8:	beq	1a708 <readstat_parse_dta+0xd28>
   1a6fc:	cmp	r3, #126	; 0x7e
   1a700:	moveq	r3, #2
   1a704:	movne	r3, #3
   1a708:	str	r3, [r4, #2132]	; 0x854
   1a70c:	mov	r2, sl
   1a710:	ldr	r1, [sp, #28]
   1a714:	mov	r0, r9
   1a718:	bl	42d0 <__isoc99_sscanf@plt>
   1a71c:	cmp	r0, #1
   1a720:	bne	1a78c <readstat_parse_dta+0xdac>
   1a724:	ldr	r3, [sp, #120]	; 0x78
   1a728:	str	r3, [r4, #2136]	; 0x858
   1a72c:	ldr	r1, [r7, #84]	; 0x54
   1a730:	ldr	r2, [r7, #60]	; 0x3c
   1a734:	str	r4, [fp, r8]
   1a738:	mul	r1, r1, r5
   1a73c:	ldr	r0, [r7, #228]	; 0xe4
   1a740:	ldr	r4, [r7, #248]	; 0xf8
   1a744:	ldrb	ip, [r2, r1]
   1a748:	ldr	r3, [r7, #276]	; 0x114
   1a74c:	cmp	ip, #0
   1a750:	addne	r2, r2, r1
   1a754:	moveq	r2, #0
   1a758:	ldr	r1, [r0, r8]
   1a75c:	mov	r0, r5
   1a760:	blx	r4
   1a764:	cmp	r0, #1
   1a768:	beq	1a1c8 <readstat_parse_dta+0x7e8>
   1a76c:	cmp	r0, #2
   1a770:	moveq	r2, #1
   1a774:	ldreq	r3, [r7, #228]	; 0xe4
   1a778:	addne	r6, r6, #1
   1a77c:	add	r5, r5, #1
   1a780:	ldreq	r3, [r3, r8]
   1a784:	streq	r2, [r3, #2144]	; 0x860
   1a788:	b	1a538 <readstat_parse_dta+0xb58>
   1a78c:	mov	r2, sl
   1a790:	ldr	r1, [sp, #32]
   1a794:	mov	r0, r9
   1a798:	bl	42d0 <__isoc99_sscanf@plt>
   1a79c:	cmp	r0, #1
   1a7a0:	bne	1a72c <readstat_parse_dta+0xd4c>
   1a7a4:	b	1a724 <readstat_parse_dta+0xd44>
   1a7a8:	ldr	r3, [r7, #264]	; 0x108
   1a7ac:	cmp	r3, #0
   1a7b0:	beq	19a8c <readstat_parse_dta+0xac>
   1a7b4:	ldrd	r2, [r7, #120]	; 0x78
   1a7b8:	add	r4, r7, #288	; 0x120
   1a7bc:	strd	r2, [sp]
   1a7c0:	ldr	r2, [pc, #796]	; 1aae4 <readstat_parse_dta+0x1104>
   1a7c4:	add	r2, pc, r2
   1a7c8:	mov	r1, #256	; 0x100
   1a7cc:	mov	r0, r4
   1a7d0:	bl	42c4 <snprintf@plt>
   1a7d4:	ldr	r3, [r7, #264]	; 0x108
   1a7d8:	ldr	r1, [r7, #276]	; 0x114
   1a7dc:	mov	r0, r4
   1a7e0:	blx	r3
   1a7e4:	b	19a8c <readstat_parse_dta+0xac>
   1a7e8:	ldr	r1, [pc, #760]	; 1aae8 <readstat_parse_dta+0x1108>
   1a7ec:	mov	r0, r7
   1a7f0:	add	r1, pc, r1
   1a7f4:	bl	19904 <dta_read_tag>
   1a7f8:	subs	r8, r0, #0
   1a7fc:	movne	fp, r8
   1a800:	bne	1a46c <readstat_parse_dta+0xa8c>
   1a804:	ldr	r3, [pc, #736]	; 1aaec <readstat_parse_dta+0x110c>
   1a808:	ldr	r9, [pc, #736]	; 1aaf0 <readstat_parse_dta+0x1110>
   1a80c:	add	r3, pc, r3
   1a810:	str	r3, [sp, #24]
   1a814:	ldr	r3, [pc, #728]	; 1aaf4 <readstat_parse_dta+0x1114>
   1a818:	mov	r6, r8
   1a81c:	add	r9, pc, r9
   1a820:	add	r3, pc, r3
   1a824:	str	r3, [sp, #28]
   1a828:	ldrb	r3, [r7, #192]	; 0xc0
   1a82c:	ldr	r2, [r5, #20]
   1a830:	tst	r3, #4
   1a834:	ldr	r3, [r5, #12]
   1a838:	beq	1a930 <readstat_parse_dta+0xf50>
   1a83c:	mov	r1, #4
   1a840:	mov	r0, sl
   1a844:	blx	r3
   1a848:	cmp	r0, #4
   1a84c:	mov	r4, r0
   1a850:	bne	1a944 <readstat_parse_dta+0xf64>
   1a854:	mov	r2, r0
   1a858:	ldr	r1, [sp, #24]
   1a85c:	mov	r0, sl
   1a860:	bl	3fe8 <memcmp@plt>
   1a864:	cmp	r0, #0
   1a868:	bne	1a894 <readstat_parse_dta+0xeb4>
   1a86c:	ldr	r1, [pc, #644]	; 1aaf8 <readstat_parse_dta+0x1118>
   1a870:	mov	r0, r7
   1a874:	add	r1, pc, r1
   1a878:	bl	19904 <dta_read_tag>
   1a87c:	subs	fp, r0, #0
   1a880:	bne	1a914 <readstat_parse_dta+0xf34>
   1a884:	cmp	r6, #0
   1a888:	beq	1a584 <readstat_parse_dta+0xba4>
   1a88c:	mov	fp, r8
   1a890:	b	1a91c <readstat_parse_dta+0xf3c>
   1a894:	mov	r2, r4
   1a898:	mov	r1, r9
   1a89c:	mov	r0, sl
   1a8a0:	bl	3fe8 <memcmp@plt>
   1a8a4:	cmp	r0, #0
   1a8a8:	bne	1a910 <readstat_parse_dta+0xf30>
   1a8ac:	mov	r3, #1
   1a8b0:	strb	r3, [sp, #80]	; 0x50
   1a8b4:	ldr	fp, [r7, #92]	; 0x5c
   1a8b8:	ldr	r3, [r5, #12]
   1a8bc:	cmp	fp, #2
   1a8c0:	ldr	r2, [r5, #20]
   1a8c4:	bne	1a94c <readstat_parse_dta+0xf6c>
   1a8c8:	mov	r1, fp
   1a8cc:	mov	r0, sl
   1a8d0:	blx	r3
   1a8d4:	cmp	r0, #2
   1a8d8:	bne	1a914 <readstat_parse_dta+0xf34>
   1a8dc:	ldrb	r3, [r7, #192]	; 0xc0
   1a8e0:	ldrh	r0, [sp, #120]	; 0x78
   1a8e4:	tst	r3, #1
   1a8e8:	beq	1a8f0 <readstat_parse_dta+0xf10>
   1a8ec:	bl	3eec <byteswap2@plt>
   1a8f0:	mov	r4, r0
   1a8f4:	ldrb	fp, [sp, #80]	; 0x50
   1a8f8:	cmp	fp, #0
   1a8fc:	bne	1a97c <readstat_parse_dta+0xf9c>
   1a900:	cmp	r4, #0
   1a904:	beq	1a884 <readstat_parse_dta+0xea4>
   1a908:	mov	fp, #32
   1a90c:	b	1a914 <readstat_parse_dta+0xf34>
   1a910:	mov	fp, #5
   1a914:	cmp	r6, #0
   1a918:	beq	1a46c <readstat_parse_dta+0xa8c>
   1a91c:	mov	r0, r6
   1a920:	bl	3f04 <free@plt>
   1a924:	cmp	fp, #0
   1a928:	bne	1a46c <readstat_parse_dta+0xa8c>
   1a92c:	b	1a584 <readstat_parse_dta+0xba4>
   1a930:	mov	r1, #1
   1a934:	add	r0, sp, #80	; 0x50
   1a938:	blx	r3
   1a93c:	cmp	r0, #1
   1a940:	beq	1a8b4 <readstat_parse_dta+0xed4>
   1a944:	mov	fp, #2
   1a948:	b	1a914 <readstat_parse_dta+0xf34>
   1a94c:	mov	r1, #4
   1a950:	mov	r0, sl
   1a954:	blx	r3
   1a958:	cmp	r0, #4
   1a95c:	bne	1a944 <readstat_parse_dta+0xf64>
   1a960:	ldrb	r3, [r7, #192]	; 0xc0
   1a964:	tst	r3, #1
   1a968:	ldreq	r4, [sp, #120]	; 0x78
   1a96c:	beq	1a8f4 <readstat_parse_dta+0xf14>
   1a970:	ldr	r0, [sp, #120]	; 0x78
   1a974:	bl	3dd8 <byteswap4@plt>
   1a978:	b	1a8f0 <readstat_parse_dta+0xf10>
   1a97c:	cmp	r4, #1048576	; 0x100000
   1a980:	cmpls	fp, #1
   1a984:	movne	fp, #1
   1a988:	moveq	fp, #0
   1a98c:	bne	1a908 <readstat_parse_dta+0xf28>
   1a990:	ldr	r3, [r7, #244]	; 0xf4
   1a994:	cmp	r3, #0
   1a998:	beq	1ab38 <readstat_parse_dta+0x1158>
   1a99c:	ldr	r3, [r7, #96]	; 0x60
   1a9a0:	cmp	r4, r3, lsl #1
   1a9a4:	bcc	1ab38 <readstat_parse_dta+0x1158>
   1a9a8:	mov	r0, r6
   1a9ac:	add	r1, r4, #1
   1a9b0:	bl	4330 <readstat_realloc@plt>
   1a9b4:	subs	r6, r0, #0
   1a9b8:	beq	1aee0 <readstat_parse_dta+0x1500>
   1a9bc:	strb	fp, [r6, r4]
   1a9c0:	mov	r1, r4
   1a9c4:	ldr	r3, [r5, #12]
   1a9c8:	ldr	r2, [r5, #20]
   1a9cc:	blx	r3
   1a9d0:	cmp	r4, r0
   1a9d4:	bne	1a944 <readstat_parse_dta+0xf64>
   1a9d8:	mov	r2, #4
   1a9dc:	ldr	r1, [sp, #28]
   1a9e0:	mov	r0, r6
   1a9e4:	str	fp, [sp, #120]	; 0x78
   1a9e8:	bl	454c <strncmp@plt>
   1a9ec:	cmp	r0, #0
   1a9f0:	bne	1ab54 <readstat_parse_dta+0x1174>
   1a9f4:	ldr	r0, [r7, #96]	; 0x60
   1a9f8:	ldr	r1, [pc, #252]	; 1aafc <readstat_parse_dta+0x111c>
   1a9fc:	mov	r2, sl
   1aa00:	add	r1, pc, r1
   1aa04:	add	r0, r6, r0
   1aa08:	bl	42d0 <__isoc99_sscanf@plt>
   1aa0c:	cmp	r0, #1
   1aa10:	bne	1ab54 <readstat_parse_dta+0x1174>
   1aa14:	ldr	r1, [r7, #96]	; 0x60
   1aa18:	ldr	r3, [r7, #244]	; 0xf4
   1aa1c:	ldr	r2, [r7, #276]	; 0x114
   1aa20:	add	r1, r6, r1, lsl #1
   1aa24:	ldr	r0, [sp, #120]	; 0x78
   1aa28:	blx	r3
   1aa2c:	cmp	r0, #0
   1aa30:	beq	1ab54 <readstat_parse_dta+0x1174>
   1aa34:	mov	fp, #4
   1aa38:	b	1a914 <readstat_parse_dta+0xf34>
   1aa3c:	.word	0x00008014
   1aa40:	.word	0x00009ce8
   1aa44:	.word	0x00009cf8
   1aa48:	.word	0x00009ce1
   1aa4c:	.word	0x00009cd5
   1aa50:	.word	0x00009fdf
   1aa54:	.word	0x00009cb6
   1aa58:	.word	0x00009cb0
   1aa5c:	.word	0x00009c90
   1aa60:	.word	0x00009c81
   1aa64:	.word	0x00009c69
   1aa68:	.word	0x00009bfd
   1aa6c:	.word	0x00009be9
   1aa70:	.word	0x00009bc2
   1aa74:	.word	0x00009bae
   1aa78:	.word	0x00009b4d
   1aa7c:	.word	0x00009b39
   1aa80:	.word	0x00009b0e
   1aa84:	.word	0x00009afa
   1aa88:	.word	0x00009957
   1aa8c:	.word	0x00009853
   1aa90:	.word	0x00009844
   1aa94:	.word	0x00009768
   1aa98:	.word	0x00009741
   1aa9c:	.word	0x00009661
   1aaa0:	.word	0x0000964b
   1aaa4:	.word	0x000095c9
   1aaa8:	.word	0x000095a8
   1aaac:	.word	0x0000953e
   1aab0:	.word	0x0000952b
   1aab4:	.word	0x00009529
   1aab8:	.word	0x00009516
   1aabc:	.word	0x00009513
   1aac0:	.word	0x00009501
   1aac4:	.word	0x00009506
   1aac8:	.word	0x000094ea
   1aacc:	.word	0x00009501
   1aad0:	.word	0x000094e7
   1aad4:	.word	0x00009420
   1aad8:	.word	0x00009416
   1aadc:	.word	0x000093d0
   1aae0:	.word	0x00000868
   1aae4:	.word	0x00009189
   1aae8:	.word	0x0000918a
   1aaec:	.word	0x00009180
   1aaf0:	.word	0x00009175
   1aaf4:	.word	0x00009176
   1aaf8:	.word	0x000092c2
   1aafc:	.word	0x00008f9b
   1ab00:	.word	0x00008e46
   1ab04:	.word	0x00008dfe
   1ab08:	.word	0x00008dde
   1ab0c:	.word	0x00008bca
   1ab10:	.word	0x00008c45
   1ab14:	.word	0x00008ac1
   1ab18:	.word	0x00008b4a
   1ab1c:	.word	0x000089ed
   1ab20:	.word	0x000089a9
   1ab24:	.word	0x000089ce
   1ab28:	.word	0x000089b9
   1ab2c:	.word	0x000089af
   1ab30:	.word	0x00007d01
   1ab34:	.word	0x0001f401
   1ab38:	ldr	r3, [r5, #8]
   1ab3c:	ldr	r2, [r5, #20]
   1ab40:	mov	r1, #1
   1ab44:	mov	r0, r4
   1ab48:	blx	r3
   1ab4c:	cmn	r0, #1
   1ab50:	beq	1ab70 <readstat_parse_dta+0x1190>
   1ab54:	ldr	r1, [pc, #-92]	; 1ab00 <readstat_parse_dta+0x1120>
   1ab58:	mov	r0, r7
   1ab5c:	add	r1, pc, r1
   1ab60:	bl	19904 <dta_read_tag>
   1ab64:	subs	fp, r0, #0
   1ab68:	beq	1a828 <readstat_parse_dta+0xe48>
   1ab6c:	b	1a914 <readstat_parse_dta+0xf34>
   1ab70:	mov	fp, #15
   1ab74:	b	1a914 <readstat_parse_dta+0xf34>
   1ab78:	ldr	r3, [sp, #20]
   1ab7c:	ldr	r2, [sp, #20]
   1ab80:	mov	r1, #1
   1ab84:	ldr	r3, [r3, #8]
   1ab88:	ldr	r2, [r2, #20]
   1ab8c:	blx	r3
   1ab90:	mvn	r3, #0
   1ab94:	mvn	r2, #0
   1ab98:	asr	r1, r0, #31
   1ab9c:	cmp	r1, r3
   1aba0:	cmpeq	r0, r2
   1aba4:	strd	r0, [r7, #120]	; 0x78
   1aba8:	beq	19a8c <readstat_parse_dta+0xac>
   1abac:	ldr	r4, [r7, #160]	; 0xa0
   1abb0:	ldr	r2, [r7, #152]	; 0x98
   1abb4:	ldr	ip, [r7, #156]	; 0x9c
   1abb8:	umull	r2, r3, r2, r4
   1abbc:	mla	r3, ip, r4, r3
   1abc0:	adds	r2, r2, r0
   1abc4:	adc	r3, r3, r1
   1abc8:	strd	r2, [r7, #136]	; 0x88
   1abcc:	b	1a590 <readstat_parse_dta+0xbb0>
   1abd0:	ldr	r1, [pc, #-212]	; 1ab04 <readstat_parse_dta+0x1124>
   1abd4:	mov	r0, r7
   1abd8:	add	r1, pc, r1
   1abdc:	bl	19904 <dta_read_tag>
   1abe0:	subs	fp, r0, #0
   1abe4:	bne	1a46c <readstat_parse_dta+0xa8c>
   1abe8:	mov	r3, #100	; 0x64
   1abec:	str	r3, [r7, #224]	; 0xe0
   1abf0:	mov	r0, #400	; 0x190
   1abf4:	bl	4270 <readstat_malloc@plt>
   1abf8:	ldr	r9, [pc, #-248]	; 1ab08 <readstat_parse_dta+0x1128>
   1abfc:	add	r6, sp, #64	; 0x40
   1ac00:	add	r9, pc, r9
   1ac04:	add	r8, sp, #80	; 0x50
   1ac08:	str	r0, [r7, #216]	; 0xd8
   1ac0c:	ldr	r3, [r4, #12]
   1ac10:	ldr	r2, [r4, #20]
   1ac14:	mov	r1, #3
   1ac18:	mov	r0, r6
   1ac1c:	blx	r3
   1ac20:	cmp	r0, #3
   1ac24:	mov	r5, r0
   1ac28:	bne	1a1f4 <readstat_parse_dta+0x814>
   1ac2c:	mov	r2, r0
   1ac30:	mov	r1, r9
   1ac34:	mov	r0, r6
   1ac38:	bl	3fe8 <memcmp@plt>
   1ac3c:	cmp	r0, #0
   1ac40:	bne	1ae10 <readstat_parse_dta+0x1430>
   1ac44:	ldr	r3, [r7, #116]	; 0x74
   1ac48:	cmp	r3, #4
   1ac4c:	ldr	r3, [r7, #280]	; 0x118
   1ac50:	ldr	r5, [r3, #12]
   1ac54:	ldr	r2, [r3, #20]
   1ac58:	bls	1ad18 <readstat_parse_dta+0x1338>
   1ac5c:	mov	r1, #17
   1ac60:	mov	r0, r8
   1ac64:	blx	r5
   1ac68:	cmp	r0, #17
   1ac6c:	bne	1ae08 <readstat_parse_dta+0x1428>
   1ac70:	ldrb	r3, [r7, #192]	; 0xc0
   1ac74:	tst	r3, #1
   1ac78:	ldrheq	r0, [sp, #80]	; 0x50
   1ac7c:	beq	1ac8c <readstat_parse_dta+0x12ac>
   1ac80:	ldr	r0, [sp, #80]	; 0x50
   1ac84:	bl	3dd8 <byteswap4@plt>
   1ac88:	uxth	r0, r0
   1ac8c:	ldrb	r3, [r7, #192]	; 0xc0
   1ac90:	strh	r0, [sp, #120]	; 0x78
   1ac94:	ldr	r1, [sp, #88]	; 0x58
   1ac98:	tst	r3, #1
   1ac9c:	ldr	r0, [sp, #84]	; 0x54
   1aca0:	beq	1aca8 <readstat_parse_dta+0x12c8>
   1aca4:	bl	3dc0 <byteswap8@plt>
   1aca8:	ldrb	r3, [sp, #92]	; 0x5c
   1acac:	str	r0, [sp, #128]	; 0x80
   1acb0:	ldr	r0, [sp, #92]	; 0x5c
   1acb4:	strb	r3, [sp, #136]	; 0x88
   1acb8:	ldrb	r3, [r7, #192]	; 0xc0
   1acbc:	str	r1, [sp, #132]	; 0x84
   1acc0:	tst	r3, #1
   1acc4:	ldrb	r3, [sp, #96]	; 0x60
   1acc8:	lsl	r3, r3, #24
   1accc:	orr	r0, r3, r0, lsr #8
   1acd0:	beq	1acd8 <readstat_parse_dta+0x12f8>
   1acd4:	bl	3dd8 <byteswap4@plt>
   1acd8:	ldrb	r3, [sp, #136]	; 0x88
   1acdc:	str	r0, [sp, #140]	; 0x8c
   1ace0:	cmp	r3, #130	; 0x82
   1ace4:	bne	1ac0c <readstat_parse_dta+0x122c>
   1ace8:	ldr	r1, [r7, #220]	; 0xdc
   1acec:	ldr	r3, [r7, #224]	; 0xe0
   1acf0:	cmp	r1, r3
   1acf4:	beq	1ad84 <readstat_parse_dta+0x13a4>
   1acf8:	ldr	fp, [sp, #140]	; 0x8c
   1acfc:	add	r0, fp, #32
   1ad00:	bl	4270 <readstat_malloc@plt>
   1ad04:	subs	r5, r0, #0
   1ad08:	bne	1ada8 <readstat_parse_dta+0x13c8>
   1ad0c:	mov	r3, #3
   1ad10:	mov	fp, r3
   1ad14:	b	1a46c <readstat_parse_dta+0xa8c>
   1ad18:	mov	r1, #13
   1ad1c:	mov	r0, r8
   1ad20:	blx	r5
   1ad24:	cmp	r0, #13
   1ad28:	bne	1ae08 <readstat_parse_dta+0x1428>
   1ad2c:	ldrb	r3, [r7, #192]	; 0xc0
   1ad30:	tst	r3, #1
   1ad34:	ldrheq	r0, [sp, #80]	; 0x50
   1ad38:	beq	1ad48 <readstat_parse_dta+0x1368>
   1ad3c:	ldr	r0, [sp, #80]	; 0x50
   1ad40:	bl	3dd8 <byteswap4@plt>
   1ad44:	uxth	r0, r0
   1ad48:	ldrb	r3, [r7, #192]	; 0xc0
   1ad4c:	strh	r0, [sp, #120]	; 0x78
   1ad50:	ldr	r0, [sp, #84]	; 0x54
   1ad54:	tst	r3, #1
   1ad58:	beq	1ad60 <readstat_parse_dta+0x1380>
   1ad5c:	bl	3dd8 <byteswap4@plt>
   1ad60:	ldrb	r3, [sp, #88]	; 0x58
   1ad64:	mov	r1, #0
   1ad68:	strb	r3, [sp, #136]	; 0x88
   1ad6c:	ldrb	r3, [r7, #192]	; 0xc0
   1ad70:	strd	r0, [sp, #128]	; 0x80
   1ad74:	ldr	r0, [sp, #88]	; 0x58
   1ad78:	tst	r3, #1
   1ad7c:	ldrb	r3, [sp, #92]	; 0x5c
   1ad80:	b	1acc8 <readstat_parse_dta+0x12e8>
   1ad84:	lsl	r3, r1, #1
   1ad88:	str	r3, [r7, #224]	; 0xe0
   1ad8c:	lsl	r1, r1, #3
   1ad90:	ldr	r0, [r7, #216]	; 0xd8
   1ad94:	bl	4330 <readstat_realloc@plt>
   1ad98:	cmp	r0, #0
   1ad9c:	str	r0, [r7, #216]	; 0xd8
   1ada0:	bne	1acf8 <readstat_parse_dta+0x1318>
   1ada4:	b	1ad0c <readstat_parse_dta+0x132c>
   1ada8:	mov	ip, sl
   1adac:	mov	r2, r5
   1adb0:	add	lr, sl, #32
   1adb4:	mov	r3, ip
   1adb8:	add	r2, r2, #8
   1adbc:	ldm	r3!, {r0, r1}
   1adc0:	cmp	r3, lr
   1adc4:	str	r0, [r2, #-8]
   1adc8:	str	r1, [r2, #-4]
   1adcc:	mov	ip, r3
   1add0:	bne	1adb4 <readstat_parse_dta+0x13d4>
   1add4:	ldr	r3, [r7, #220]	; 0xdc
   1add8:	ldr	r2, [r7, #216]	; 0xd8
   1addc:	add	r1, r3, #1
   1ade0:	str	r1, [r7, #220]	; 0xdc
   1ade4:	add	r0, r5, #24
   1ade8:	str	r5, [r2, r3, lsl #2]
   1adec:	mov	r1, fp
   1adf0:	ldr	r3, [r4, #12]
   1adf4:	ldr	r2, [r4, #20]
   1adf8:	blx	r3
   1adfc:	ldr	r3, [r5, #20]
   1ae00:	cmp	r0, r3
   1ae04:	beq	1ac0c <readstat_parse_dta+0x122c>
   1ae08:	mov	r3, #2
   1ae0c:	b	1ad10 <readstat_parse_dta+0x1330>
   1ae10:	ldr	r1, [pc, #-780]	; 1ab0c <readstat_parse_dta+0x112c>
   1ae14:	mov	r2, r5
   1ae18:	add	r1, pc, r1
   1ae1c:	mov	r0, r6
   1ae20:	bl	3fe8 <memcmp@plt>
   1ae24:	cmp	r0, #0
   1ae28:	bne	19be4 <readstat_parse_dta+0x204>
   1ae2c:	ldr	r1, [pc, #-804]	; 1ab10 <readstat_parse_dta+0x1130>
   1ae30:	mov	r0, r7
   1ae34:	add	r1, pc, r1
   1ae38:	bl	19904 <dta_read_tag>
   1ae3c:	subs	fp, r0, #0
   1ae40:	bne	1a46c <readstat_parse_dta+0xa8c>
   1ae44:	ldr	r2, [r7, #256]	; 0x100
   1ae48:	ldr	r3, [r7, #280]	; 0x118
   1ae4c:	cmp	r2, #0
   1ae50:	beq	1b010 <readstat_parse_dta+0x1630>
   1ae54:	ldr	r4, [r3, #8]
   1ae58:	ldr	r2, [r3, #20]
   1ae5c:	mov	r1, #0
   1ae60:	ldr	r0, [r7, #120]	; 0x78
   1ae64:	blx	r4
   1ae68:	cmn	r0, #1
   1ae6c:	bne	1ae94 <readstat_parse_dta+0x14b4>
   1ae70:	ldr	r3, [r7, #264]	; 0x108
   1ae74:	cmp	r3, #0
   1ae78:	beq	19a8c <readstat_parse_dta+0xac>
   1ae7c:	ldrd	r2, [r7, #120]	; 0x78
   1ae80:	add	r4, r7, #288	; 0x120
   1ae84:	strd	r2, [sp]
   1ae88:	ldr	r2, [pc, #-892]	; 1ab14 <readstat_parse_dta+0x1134>
   1ae8c:	add	r2, pc, r2
   1ae90:	b	1a7c8 <readstat_parse_dta+0xde8>
   1ae94:	ldr	r1, [pc, #-900]	; 1ab18 <readstat_parse_dta+0x1138>
   1ae98:	mov	r0, r7
   1ae9c:	add	r1, pc, r1
   1aea0:	bl	19904 <dta_read_tag>
   1aea4:	subs	fp, r0, #0
   1aea8:	bne	1a46c <readstat_parse_dta+0xa8c>
   1aeac:	mov	r0, r7
   1aeb0:	bl	19868 <dta_update_progress>
   1aeb4:	subs	r6, r0, #0
   1aeb8:	movne	fp, r6
   1aebc:	bne	1a46c <readstat_parse_dta+0xa8c>
   1aec0:	ldr	r0, [r7, #160]	; 0xa0
   1aec4:	ldr	r5, [r7, #280]	; 0x118
   1aec8:	cmp	r0, #0
   1aecc:	moveq	r4, r6
   1aed0:	beq	1aee8 <readstat_parse_dta+0x1508>
   1aed4:	bl	4270 <readstat_malloc@plt>
   1aed8:	subs	r4, r0, #0
   1aedc:	bne	1aee8 <readstat_parse_dta+0x1508>
   1aee0:	mov	fp, #3
   1aee4:	b	1a46c <readstat_parse_dta+0xa8c>
   1aee8:	ldrd	r0, [r7, #176]	; 0xb0
   1aeec:	orrs	r3, r0, r1
   1aef0:	bne	1af5c <readstat_parse_dta+0x157c>
   1aef4:	mov	r8, #0
   1aef8:	mov	r9, #0
   1aefc:	ldrd	r0, [r7, #168]	; 0xa8
   1af00:	cmp	r8, r0
   1af04:	sbcs	r3, r9, r1
   1af08:	blt	1af84 <readstat_parse_dta+0x15a4>
   1af0c:	ldrd	r2, [r7, #152]	; 0x98
   1af10:	ldrd	r8, [r7, #176]	; 0xb0
   1af14:	subs	r2, r2, r8
   1af18:	sbc	r3, r3, r9
   1af1c:	cmp	r0, r2
   1af20:	sbcs	ip, r1, r3
   1af24:	bge	1af4c <readstat_parse_dta+0x156c>
   1af28:	ldr	ip, [r7, #160]	; 0xa0
   1af2c:	subs	r0, r2, r0
   1af30:	ldr	r3, [r5, #8]
   1af34:	ldr	r2, [r5, #20]
   1af38:	mov	r1, #1
   1af3c:	mul	r0, ip, r0
   1af40:	blx	r3
   1af44:	cmn	r0, #1
   1af48:	beq	1af7c <readstat_parse_dta+0x159c>
   1af4c:	cmp	r4, #0
   1af50:	movne	fp, r6
   1af54:	bne	1afe8 <readstat_parse_dta+0x1608>
   1af58:	b	1aff8 <readstat_parse_dta+0x1618>
   1af5c:	ldr	ip, [r7, #160]	; 0xa0
   1af60:	ldr	r3, [r5, #8]
   1af64:	ldr	r2, [r5, #20]
   1af68:	mov	r1, #1
   1af6c:	mul	r0, ip, r0
   1af70:	blx	r3
   1af74:	cmn	r0, #1
   1af78:	bne	1aef4 <readstat_parse_dta+0x1514>
   1af7c:	mov	fp, #15
   1af80:	b	1afe0 <readstat_parse_dta+0x1600>
   1af84:	ldr	r3, [r5, #12]
   1af88:	ldr	r2, [r5, #20]
   1af8c:	ldr	r1, [r7, #160]	; 0xa0
   1af90:	mov	r0, r4
   1af94:	blx	r3
   1af98:	ldr	r3, [r7, #160]	; 0xa0
   1af9c:	cmp	r0, r3
   1afa0:	bne	1b454 <readstat_parse_dta+0x1a74>
   1afa4:	mov	r1, r7
   1afa8:	mov	r0, r4
   1afac:	bl	58c0 <dta_handle_row>
   1afb0:	subs	fp, r0, #0
   1afb4:	bne	1afe0 <readstat_parse_dta+0x1600>
   1afb8:	ldrd	r2, [r7, #184]	; 0xb8
   1afbc:	mov	r0, r7
   1afc0:	adds	r2, r2, #1
   1afc4:	adc	r3, r3, #0
   1afc8:	strd	r2, [r7, #184]	; 0xb8
   1afcc:	bl	19868 <dta_update_progress>
   1afd0:	adds	r8, r8, #1
   1afd4:	adc	r9, r9, #0
   1afd8:	subs	fp, r0, #0
   1afdc:	beq	1aefc <readstat_parse_dta+0x151c>
   1afe0:	cmp	r4, #0
   1afe4:	beq	1a46c <readstat_parse_dta+0xa8c>
   1afe8:	mov	r0, r4
   1afec:	bl	3f04 <free@plt>
   1aff0:	cmp	fp, #0
   1aff4:	bne	1a46c <readstat_parse_dta+0xa8c>
   1aff8:	ldr	r1, [pc, #-1252]	; 1ab1c <readstat_parse_dta+0x113c>
   1affc:	mov	r0, r7
   1b000:	add	r1, pc, r1
   1b004:	bl	19904 <dta_read_tag>
   1b008:	subs	fp, r0, #0
   1b00c:	bne	1a46c <readstat_parse_dta+0xa8c>
   1b010:	ldr	r4, [r7, #280]	; 0x118
   1b014:	mov	r1, #0
   1b018:	ldr	r0, [r7, #136]	; 0x88
   1b01c:	ldr	r3, [r4, #8]
   1b020:	ldr	r2, [r4, #20]
   1b024:	blx	r3
   1b028:	cmn	r0, #1
   1b02c:	bne	1b054 <readstat_parse_dta+0x1674>
   1b030:	ldr	r3, [r7, #264]	; 0x108
   1b034:	cmp	r3, #0
   1b038:	beq	19a8c <readstat_parse_dta+0xac>
   1b03c:	ldrd	r2, [r7, #136]	; 0x88
   1b040:	add	r4, r7, #288	; 0x120
   1b044:	strd	r2, [sp]
   1b048:	ldr	r2, [pc, #-1328]	; 1ab20 <readstat_parse_dta+0x1140>
   1b04c:	add	r2, pc, r2
   1b050:	b	1a7c8 <readstat_parse_dta+0xde8>
   1b054:	ldr	r1, [pc, #-1336]	; 1ab24 <readstat_parse_dta+0x1144>
   1b058:	mov	r0, r7
   1b05c:	add	r1, pc, r1
   1b060:	bl	19904 <dta_read_tag>
   1b064:	subs	fp, r0, #0
   1b068:	bne	1a46c <readstat_parse_dta+0xa8c>
   1b06c:	ldr	r3, [r7, #260]	; 0x104
   1b070:	cmp	r3, #0
   1b074:	beq	1a46c <readstat_parse_dta+0xa8c>
   1b078:	ldr	r3, [pc, #-1368]	; 1ab28 <readstat_parse_dta+0x1148>
   1b07c:	mov	r8, fp
   1b080:	add	r3, pc, r3
   1b084:	str	r3, [sp, #48]	; 0x30
   1b088:	ldr	r3, [pc, #-1380]	; 1ab2c <readstat_parse_dta+0x114c>
   1b08c:	str	fp, [sp, #24]
   1b090:	add	r3, pc, r3
   1b094:	str	r3, [sp, #52]	; 0x34
   1b098:	ldr	r1, [r7, #100]	; 0x64
   1b09c:	cmp	r1, #2
   1b0a0:	bne	1b1c0 <readstat_parse_dta+0x17e0>
   1b0a4:	ldr	r3, [r4, #12]
   1b0a8:	ldr	r2, [r4, #20]
   1b0ac:	mov	r0, sl
   1b0b0:	blx	r3
   1b0b4:	cmp	r0, #1
   1b0b8:	bls	1b404 <readstat_parse_dta+0x1a24>
   1b0bc:	ldrb	r3, [r7, #192]	; 0xc0
   1b0c0:	ldrsh	r5, [sp, #120]	; 0x78
   1b0c4:	tst	r3, #1
   1b0c8:	beq	1b0d8 <readstat_parse_dta+0x16f8>
   1b0cc:	uxth	r0, r5
   1b0d0:	bl	3eec <byteswap2@plt>
   1b0d4:	mov	r5, r0
   1b0d8:	lsr	r9, r5, #3
   1b0dc:	ldr	r3, [r4, #12]
   1b0e0:	ldr	r2, [r4, #20]
   1b0e4:	ldr	r1, [r7, #104]	; 0x68
   1b0e8:	mov	r0, sl
   1b0ec:	blx	r3
   1b0f0:	ldr	r3, [r7, #104]	; 0x68
   1b0f4:	cmp	r0, r3
   1b0f8:	bcc	1b404 <readstat_parse_dta+0x1a24>
   1b0fc:	ldr	r3, [r4, #8]
   1b100:	ldr	r2, [r4, #20]
   1b104:	mov	r1, #1
   1b108:	ldr	r0, [r7, #108]	; 0x6c
   1b10c:	blx	r3
   1b110:	cmn	r0, #1
   1b114:	beq	1b404 <readstat_parse_dta+0x1a24>
   1b118:	mov	r0, r8
   1b11c:	mov	r1, r5
   1b120:	bl	4330 <readstat_realloc@plt>
   1b124:	subs	r8, r0, #0
   1b128:	beq	1b42c <readstat_parse_dta+0x1a4c>
   1b12c:	ldr	r3, [r4, #12]
   1b130:	ldr	r2, [r4, #20]
   1b134:	mov	r1, r5
   1b138:	blx	r3
   1b13c:	cmp	r5, r0
   1b140:	bhi	1b404 <readstat_parse_dta+0x1a24>
   1b144:	ldr	r3, [r7, #100]	; 0x64
   1b148:	cmp	r3, #2
   1b14c:	bne	1b250 <readstat_parse_dta+0x1870>
   1b150:	mov	r5, #0
   1b154:	add	r6, sp, #80	; 0x50
   1b158:	add	r3, sp, #64	; 0x40
   1b15c:	str	r3, [sp, #28]
   1b160:	str	sl, [sp, #32]
   1b164:	cmp	r5, r9
   1b168:	beq	1b098 <readstat_parse_dta+0x16b8>
   1b16c:	mov	r2, #16
   1b170:	mov	r1, #0
   1b174:	ldr	r0, [sp, #28]
   1b178:	bl	42e8 <memset@plt>
   1b17c:	mov	r3, #3
   1b180:	str	r5, [sp, #64]	; 0x40
   1b184:	str	r3, [sp, #72]	; 0x48
   1b188:	ldr	r3, [r7, #236]	; 0xec
   1b18c:	add	r2, r8, r5, lsl #3
   1b190:	str	r3, [sp]
   1b194:	mov	r1, #33	; 0x21
   1b198:	mov	r3, #8
   1b19c:	mov	r0, r6
   1b1a0:	bl	427c <readstat_convert@plt>
   1b1a4:	cmp	r0, #0
   1b1a8:	bne	1b400 <readstat_parse_dta+0x1a20>
   1b1ac:	ldrb	r3, [sp, #80]	; 0x50
   1b1b0:	cmp	r3, #0
   1b1b4:	bne	1b214 <readstat_parse_dta+0x1834>
   1b1b8:	add	r5, r5, #1
   1b1bc:	b	1b164 <readstat_parse_dta+0x1784>
   1b1c0:	ldr	r1, [sp, #48]	; 0x30
   1b1c4:	mov	r0, r7
   1b1c8:	bl	19904 <dta_read_tag>
   1b1cc:	cmp	r0, #0
   1b1d0:	bne	1b404 <readstat_parse_dta+0x1a24>
   1b1d4:	ldr	r3, [r4, #12]
   1b1d8:	ldr	r2, [r4, #20]
   1b1dc:	mov	r1, #4
   1b1e0:	mov	r0, sl
   1b1e4:	blx	r3
   1b1e8:	cmp	r0, #3
   1b1ec:	bls	1b404 <readstat_parse_dta+0x1a24>
   1b1f0:	ldrb	r3, [r7, #192]	; 0xc0
   1b1f4:	ldr	r5, [sp, #120]	; 0x78
   1b1f8:	tst	r3, #1
   1b1fc:	beq	1b20c <readstat_parse_dta+0x182c>
   1b200:	mov	r0, r5
   1b204:	bl	3dd8 <byteswap4@plt>
   1b208:	mov	r5, r0
   1b20c:	mov	r9, #0
   1b210:	b	1b0dc <readstat_parse_dta+0x16fc>
   1b214:	ldr	r3, [r7, #276]	; 0x114
   1b218:	str	r6, [sp, #8]
   1b21c:	str	r3, [sp, #12]
   1b220:	add	r3, sp, #72	; 0x48
   1b224:	ldm	r3, {r0, r1}
   1b228:	ldr	r3, [sp, #28]
   1b22c:	stm	sp, {r0, r1}
   1b230:	ldr	r0, [sp, #32]
   1b234:	ldm	r3, {r2, r3}
   1b238:	ldr	r1, [r7, #260]	; 0x104
   1b23c:	blx	r1
   1b240:	cmp	r0, #0
   1b244:	beq	1b1b8 <readstat_parse_dta+0x17d8>
   1b248:	mov	r0, #4
   1b24c:	b	1b400 <readstat_parse_dta+0x1a20>
   1b250:	cmp	r5, #8
   1b254:	bls	1b098 <readstat_parse_dta+0x16b8>
   1b258:	ldr	r1, [sp, #52]	; 0x34
   1b25c:	mov	r0, r7
   1b260:	bl	19904 <dta_read_tag>
   1b264:	cmp	r0, #0
   1b268:	bne	1b400 <readstat_parse_dta+0x1a20>
   1b26c:	ldrb	r3, [r7, #192]	; 0xc0
   1b270:	ldr	r9, [r8]
   1b274:	ldr	r6, [r8, #4]
   1b278:	tst	r3, #1
   1b27c:	beq	1b298 <readstat_parse_dta+0x18b8>
   1b280:	mov	r0, r9
   1b284:	bl	3dd8 <byteswap4@plt>
   1b288:	mov	r9, r0
   1b28c:	mov	r0, r6
   1b290:	bl	3dd8 <byteswap4@plt>
   1b294:	mov	r6, r0
   1b298:	sub	r5, r5, #8
   1b29c:	cmp	r5, r6
   1b2a0:	bcc	1b404 <readstat_parse_dta+0x1a24>
   1b2a4:	sub	r5, r5, r6
   1b2a8:	cmp	r9, r5, lsr #3
   1b2ac:	bhi	1b404 <readstat_parse_dta+0x1a24>
   1b2b0:	add	r3, r9, #2
   1b2b4:	add	r9, r9, #1
   1b2b8:	lsl	r3, r3, #2
   1b2bc:	ldr	r1, [pc, #-1940]	; 1ab30 <readstat_parse_dta+0x1150>
   1b2c0:	str	r3, [sp, #28]
   1b2c4:	lsl	r3, r9, #3
   1b2c8:	ldr	r2, [pc, #-1948]	; 1ab34 <readstat_parse_dta+0x1154>
   1b2cc:	cmp	r6, r1
   1b2d0:	str	r3, [sp, #36]	; 0x24
   1b2d4:	lsl	r3, r6, #2
   1b2d8:	addls	r2, r3, #1
   1b2dc:	mov	r1, r2
   1b2e0:	ldr	r0, [sp, #24]
   1b2e4:	str	r2, [sp, #32]
   1b2e8:	bl	403c <realloc@plt>
   1b2ec:	subs	r3, r0, #0
   1b2f0:	str	r3, [sp, #24]
   1b2f4:	beq	1b42c <readstat_parse_dta+0x1a4c>
   1b2f8:	ldrb	r3, [r7, #192]	; 0xc0
   1b2fc:	add	r5, r8, #4
   1b300:	tst	r3, #1
   1b304:	ldr	r3, [sp, #28]
   1b308:	movne	r9, r5
   1b30c:	sub	r3, r3, #4
   1b310:	addne	r2, r8, r3
   1b314:	bne	1b3f0 <readstat_parse_dta+0x1a10>
   1b318:	add	r3, r8, r3
   1b31c:	str	r3, [sp, #40]	; 0x28
   1b320:	ldr	r3, [sp, #28]
   1b324:	add	r9, sp, #80	; 0x50
   1b328:	sub	r3, r3, #8
   1b32c:	str	r3, [sp, #28]
   1b330:	add	r3, sp, #120	; 0x78
   1b334:	str	r3, [sp, #44]	; 0x2c
   1b338:	ldr	r3, [sp, #40]	; 0x28
   1b33c:	cmp	r5, r3
   1b340:	beq	1b098 <readstat_parse_dta+0x16b8>
   1b344:	ldr	r3, [r5, #4]!
   1b348:	cmp	r6, r3
   1b34c:	bls	1b3fc <readstat_parse_dta+0x1a1c>
   1b350:	ldr	r3, [sp, #28]
   1b354:	mov	r1, r7
   1b358:	add	r2, r3, r5
   1b35c:	mov	r0, r9
   1b360:	bl	5808 <dta_interpret_int32_bytes>
   1b364:	ldr	r2, [r5]
   1b368:	ldr	r1, [sp, #36]	; 0x24
   1b36c:	sub	r3, r6, r2
   1b370:	add	r2, r1, r2
   1b374:	ldr	r1, [r7, #236]	; 0xec
   1b378:	cmp	r3, #32000	; 0x7d00
   1b37c:	str	r1, [sp]
   1b380:	movcs	r3, #32000	; 0x7d00
   1b384:	add	r2, r8, r2
   1b388:	ldr	r1, [sp, #32]
   1b38c:	ldr	r0, [sp, #24]
   1b390:	bl	427c <readstat_convert@plt>
   1b394:	cmp	r0, #0
   1b398:	bne	1b400 <readstat_parse_dta+0x1a20>
   1b39c:	ldr	r3, [r7, #276]	; 0x114
   1b3a0:	str	r3, [sp, #12]
   1b3a4:	ldr	r3, [sp, #24]
   1b3a8:	str	r3, [sp, #8]
   1b3ac:	add	r3, sp, #88	; 0x58
   1b3b0:	ldm	r3, {r0, r1}
   1b3b4:	stm	sp, {r0, r1}
   1b3b8:	ldr	r0, [sp, #44]	; 0x2c
   1b3bc:	ldm	r9, {r2, r3}
   1b3c0:	ldr	r1, [r7, #260]	; 0x104
   1b3c4:	blx	r1
   1b3c8:	cmp	r0, #0
   1b3cc:	beq	1b338 <readstat_parse_dta+0x1958>
   1b3d0:	b	1b248 <readstat_parse_dta+0x1868>
   1b3d4:	ldr	r0, [r9, #4]
   1b3d8:	str	r3, [sp, #44]	; 0x2c
   1b3dc:	str	r2, [sp, #40]	; 0x28
   1b3e0:	bl	3dd8 <byteswap4@plt>
   1b3e4:	ldr	r3, [sp, #44]	; 0x2c
   1b3e8:	ldr	r2, [sp, #40]	; 0x28
   1b3ec:	str	r0, [r9, #4]!
   1b3f0:	cmp	r2, r9
   1b3f4:	bne	1b3d4 <readstat_parse_dta+0x19f4>
   1b3f8:	b	1b318 <readstat_parse_dta+0x1938>
   1b3fc:	mov	r0, #5
   1b400:	mov	fp, r0
   1b404:	cmp	r8, #0
   1b408:	beq	1b414 <readstat_parse_dta+0x1a34>
   1b40c:	mov	r0, r8
   1b410:	bl	3f04 <free@plt>
   1b414:	ldr	r3, [sp, #24]
   1b418:	cmp	r3, #0
   1b41c:	beq	1a46c <readstat_parse_dta+0xa8c>
   1b420:	mov	r0, r3
   1b424:	bl	3f04 <free@plt>
   1b428:	b	1a46c <readstat_parse_dta+0xa8c>
   1b42c:	mov	r0, #3
   1b430:	b	1b400 <readstat_parse_dta+0x1a20>
   1b434:	mov	r4, #0
   1b438:	mov	fp, #2
   1b43c:	b	1a10c <readstat_parse_dta+0x72c>
   1b440:	mov	r4, #0
   1b444:	b	1a10c <readstat_parse_dta+0x72c>
   1b448:	cmp	r4, #0
   1b44c:	bne	1a454 <readstat_parse_dta+0xa74>
   1b450:	b	1a46c <readstat_parse_dta+0xa8c>
   1b454:	mov	fp, #2
   1b458:	b	1afe0 <readstat_parse_dta+0x1600>
   1b45c:	andeq	r0, r0, r0

0001b460 <dta_113_write_int8>:
   1b460:	cmp	r2, #100	; 0x64
   1b464:	strble	r2, [r0]
   1b468:	movle	r0, #0
   1b46c:	movgt	r0, #20
   1b470:	bx	lr

0001b474 <dta_old_write_int8>:
   1b474:	cmp	r2, #127	; 0x7f
   1b478:	strbne	r2, [r0]
   1b47c:	movne	r0, #0
   1b480:	moveq	r0, #20
   1b484:	bx	lr

0001b488 <dta_113_write_int16>:
   1b488:	ldr	r3, [pc, #16]	; 1b4a0 <dta_113_write_int16+0x18>
   1b48c:	cmp	r2, r3
   1b490:	strhle	r2, [r0]
   1b494:	movle	r0, #0
   1b498:	movgt	r0, #20
   1b49c:	bx	lr
   1b4a0:	.word	0x00007fe4

0001b4a4 <dta_old_write_int16>:
   1b4a4:	ldr	r3, [pc, #16]	; 1b4bc <dta_old_write_int16+0x18>
   1b4a8:	cmp	r2, r3
   1b4ac:	strhne	r2, [r0]
   1b4b0:	movne	r0, #0
   1b4b4:	moveq	r0, #20
   1b4b8:	bx	lr
   1b4bc:	.word	0x00007fff

0001b4c0 <dta_113_write_int32>:
   1b4c0:	cmn	r2, #-2147483620	; 0x8000001c
   1b4c4:	strle	r2, [r0]
   1b4c8:	movle	r0, #0
   1b4cc:	movgt	r0, #20
   1b4d0:	bx	lr

0001b4d4 <dta_old_write_int32>:
   1b4d4:	cmn	r2, #-2147483647	; 0x80000001
   1b4d8:	strne	r2, [r0]
   1b4dc:	movne	r0, #0
   1b4e0:	moveq	r0, #20
   1b4e4:	bx	lr

0001b4e8 <dta_117_write_string_ref>:
   1b4e8:	cmp	r2, #0
   1b4ec:	ldrne	r3, [r2, #8]
   1b4f0:	ldrne	r2, [r2]
   1b4f4:	strne	r3, [r0, #4]
   1b4f8:	strne	r2, [r0]
   1b4fc:	movne	r0, #0
   1b500:	moveq	r0, #34	; 0x22
   1b504:	bx	lr

0001b508 <dta_module_ctx_free>:
   1b508:	b	3ebc <dta_ctx_free@plt>

0001b50c <dta_write_tag>:
   1b50c:	ldrb	r3, [r1, #192]	; 0xc0
   1b510:	ands	r3, r3, #4
   1b514:	beq	1b520 <dta_write_tag+0x14>
   1b518:	mov	r1, r2
   1b51c:	b	41a4 <readstat_write_string@plt>
   1b520:	mov	r0, r3
   1b524:	bx	lr

0001b528 <dta_end_data>:
   1b528:	ldr	r3, [r0, #308]	; 0x134
   1b52c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b530:	cmp	r3, #0
   1b534:	sub	sp, sp, #60	; 0x3c
   1b538:	moveq	r5, #14
   1b53c:	beq	1b6c8 <dta_end_data+0x1a0>
   1b540:	ldr	r7, [r0, #300]	; 0x12c
   1b544:	ldr	r2, [pc, #1660]	; 1bbc8 <dta_end_data+0x6a0>
   1b548:	mov	r1, r7
   1b54c:	add	r2, pc, r2
   1b550:	mov	r4, r0
   1b554:	bl	1b50c <dta_write_tag>
   1b558:	subs	r3, r0, #0
   1b55c:	str	r3, [sp]
   1b560:	ldrne	r5, [sp]
   1b564:	bne	1b6c8 <dta_end_data+0x1a0>
   1b568:	ldrb	r3, [r7, #192]	; 0xc0
   1b56c:	tst	r3, #4
   1b570:	bne	1b678 <dta_end_data+0x150>
   1b574:	ldr	r9, [r7, #100]	; 0x64
   1b578:	cmp	r9, #2
   1b57c:	bne	1b854 <dta_end_data+0x32c>
   1b580:	mov	r5, #0
   1b584:	mov	r8, r5
   1b588:	add	sl, sp, #36	; 0x24
   1b58c:	add	r3, sp, #32
   1b590:	str	r3, [sp, #4]
   1b594:	ldr	r3, [r4, #40]	; 0x28
   1b598:	cmp	r8, r3
   1b59c:	bge	1b814 <dta_end_data+0x2ec>
   1b5a0:	mov	r1, r8
   1b5a4:	mov	r0, r4
   1b5a8:	bl	4474 <readstat_get_label_set@plt>
   1b5ac:	mov	fp, #0
   1b5b0:	mov	r2, fp
   1b5b4:	mov	r6, r0
   1b5b8:	ldr	r1, [r6, #264]	; 0x108
   1b5bc:	cmp	r2, r1
   1b5c0:	blt	1b7a0 <dta_end_data+0x278>
   1b5c4:	add	r3, fp, #1
   1b5c8:	mov	r2, r9
   1b5cc:	lsl	r3, r3, #3
   1b5d0:	ldr	r1, [sp, #4]
   1b5d4:	mov	r0, r4
   1b5d8:	strh	r3, [sp, #32]
   1b5dc:	bl	44a4 <readstat_write_bytes@plt>
   1b5e0:	subs	fp, r0, #0
   1b5e4:	bne	1b810 <dta_end_data+0x2e8>
   1b5e8:	mov	r1, fp
   1b5ec:	mov	r2, #14
   1b5f0:	mov	r0, sl
   1b5f4:	bl	42e8 <memset@plt>
   1b5f8:	ldr	fp, [r7, #104]	; 0x68
   1b5fc:	add	r1, r6, #4
   1b600:	mov	r2, fp
   1b604:	mov	r0, sl
   1b608:	bl	430c <strncpy@plt>
   1b60c:	ldr	r2, [r7, #108]	; 0x6c
   1b610:	mov	r1, sl
   1b614:	add	r2, fp, r2
   1b618:	mov	r0, r4
   1b61c:	bl	44a4 <readstat_write_bytes@plt>
   1b620:	subs	fp, r0, #0
   1b624:	bne	1b810 <dta_end_data+0x2e8>
   1b628:	ldrsh	r2, [sp, #32]
   1b62c:	mov	r0, r5
   1b630:	mov	r1, r2
   1b634:	str	r2, [sp, #8]
   1b638:	bl	403c <realloc@plt>
   1b63c:	ldr	r2, [sp, #8]
   1b640:	mov	r1, fp
   1b644:	mov	r5, r0
   1b648:	bl	42e8 <memset@plt>
   1b64c:	ldr	r2, [r6, #264]	; 0x108
   1b650:	cmp	fp, r2
   1b654:	blt	1b7dc <dta_end_data+0x2b4>
   1b658:	ldrsh	r2, [sp, #32]
   1b65c:	mov	r1, r5
   1b660:	mov	r0, r4
   1b664:	bl	44a4 <readstat_write_bytes@plt>
   1b668:	subs	fp, r0, #0
   1b66c:	bne	1b810 <dta_end_data+0x2e8>
   1b670:	add	r8, r8, #1
   1b674:	b	1b594 <dta_end_data+0x6c>
   1b678:	ldr	r1, [pc, #1356]	; 1bbcc <dta_end_data+0x6a4>
   1b67c:	mov	r0, r4
   1b680:	add	r1, pc, r1
   1b684:	bl	41a4 <readstat_write_string@plt>
   1b688:	subs	r5, r0, #0
   1b68c:	bne	1b6c8 <dta_end_data+0x1a0>
   1b690:	ldr	sl, [pc, #1336]	; 1bbd0 <dta_end_data+0x6a8>
   1b694:	ldr	r6, [sp]
   1b698:	add	sl, pc, sl
   1b69c:	add	r8, sp, #36	; 0x24
   1b6a0:	mvn	r9, #125	; 0x7d
   1b6a4:	ldr	r3, [r4, #64]	; 0x40
   1b6a8:	cmp	r6, r3
   1b6ac:	blt	1b6d4 <dta_end_data+0x1ac>
   1b6b0:	ldr	r1, [pc, #1308]	; 1bbd4 <dta_end_data+0x6ac>
   1b6b4:	mov	r0, r4
   1b6b8:	add	r1, pc, r1
   1b6bc:	bl	41a4 <readstat_write_string@plt>
   1b6c0:	subs	r5, r0, #0
   1b6c4:	beq	1b574 <dta_end_data+0x4c>
   1b6c8:	mov	r0, r5
   1b6cc:	add	sp, sp, #60	; 0x3c
   1b6d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b6d4:	ldr	r3, [r4, #60]	; 0x3c
   1b6d8:	mov	r1, sl
   1b6dc:	mov	r0, r4
   1b6e0:	ldr	fp, [r3, r6, lsl #2]
   1b6e4:	bl	41a4 <readstat_write_string@plt>
   1b6e8:	subs	r5, r0, #0
   1b6ec:	bne	1b6c8 <dta_end_data+0x1a0>
   1b6f0:	ldr	r3, [r7, #116]	; 0x74
   1b6f4:	ldr	r2, [fp]
   1b6f8:	cmp	r3, #4
   1b6fc:	ldr	r3, [fp, #8]
   1b700:	str	r2, [sp, #36]	; 0x24
   1b704:	str	r3, [sp, #40]	; 0x28
   1b708:	bls	1b774 <dta_end_data+0x24c>
   1b70c:	ldr	r3, [fp, #12]
   1b710:	strb	r9, [sp, #48]	; 0x30
   1b714:	str	r3, [sp, #44]	; 0x2c
   1b718:	ldrb	r3, [fp, #16]
   1b71c:	mov	r2, #17
   1b720:	strb	r3, [sp, #49]	; 0x31
   1b724:	ldrb	r3, [fp, #17]
   1b728:	strb	r3, [sp, #50]	; 0x32
   1b72c:	ldrb	r3, [fp, #18]
   1b730:	strb	r3, [sp, #51]	; 0x33
   1b734:	ldrb	r3, [fp, #19]
   1b738:	strb	r3, [sp, #52]	; 0x34
   1b73c:	mov	r1, r8
   1b740:	mov	r0, r4
   1b744:	bl	44a4 <readstat_write_bytes@plt>
   1b748:	cmp	r0, #0
   1b74c:	mov	r5, r0
   1b750:	bne	1b6c8 <dta_end_data+0x1a0>
   1b754:	ldr	r2, [fp, #16]
   1b758:	add	r1, fp, #20
   1b75c:	mov	r0, r4
   1b760:	bl	44a4 <readstat_write_bytes@plt>
   1b764:	subs	r5, r0, #0
   1b768:	bne	1b6c8 <dta_end_data+0x1a0>
   1b76c:	add	r6, r6, #1
   1b770:	b	1b6a4 <dta_end_data+0x17c>
   1b774:	strb	r9, [sp, #44]	; 0x2c
   1b778:	ldrb	r3, [fp, #16]
   1b77c:	mov	r2, #13
   1b780:	strb	r3, [sp, #45]	; 0x2d
   1b784:	ldrb	r3, [fp, #17]
   1b788:	strb	r3, [sp, #46]	; 0x2e
   1b78c:	ldrb	r3, [fp, #18]
   1b790:	strb	r3, [sp, #47]	; 0x2f
   1b794:	ldrb	r3, [fp, #19]
   1b798:	strb	r3, [sp, #48]	; 0x30
   1b79c:	b	1b73c <dta_end_data+0x214>
   1b7a0:	mov	r1, r2
   1b7a4:	mov	r0, r6
   1b7a8:	str	r2, [sp, #8]
   1b7ac:	bl	451c <readstat_get_value_label@plt>
   1b7b0:	ldrb	r1, [r0, #12]
   1b7b4:	cmp	r1, #0
   1b7b8:	bne	1b80c <dta_end_data+0x2e4>
   1b7bc:	ldr	r1, [r0, #8]
   1b7c0:	cmp	r1, #1024	; 0x400
   1b7c4:	bhi	1b84c <dta_end_data+0x324>
   1b7c8:	ldr	r2, [sp, #8]
   1b7cc:	cmp	fp, r1
   1b7d0:	movlt	fp, r1
   1b7d4:	add	r2, r2, #1
   1b7d8:	b	1b5b8 <dta_end_data+0x90>
   1b7dc:	mov	r1, fp
   1b7e0:	mov	r0, r6
   1b7e4:	bl	451c <readstat_get_value_label@plt>
   1b7e8:	add	fp, fp, #1
   1b7ec:	ldr	r2, [r0, #28]
   1b7f0:	ldr	ip, [r0, #8]
   1b7f4:	cmp	r2, #8
   1b7f8:	ldr	r1, [r0, #24]
   1b7fc:	movcs	r2, #8
   1b800:	add	r0, r5, ip, lsl #3
   1b804:	bl	3f64 <memcpy@plt>
   1b808:	b	1b64c <dta_end_data+0x124>
   1b80c:	mov	fp, #23
   1b810:	str	fp, [sp]
   1b814:	cmp	r5, #0
   1b818:	beq	1b824 <dta_end_data+0x2fc>
   1b81c:	mov	r0, r5
   1b820:	bl	3f04 <free@plt>
   1b824:	ldr	r5, [sp]
   1b828:	cmp	r5, #0
   1b82c:	bne	1b6c8 <dta_end_data+0x1a0>
   1b830:	ldr	r2, [pc, #928]	; 1bbd8 <dta_end_data+0x6b0>
   1b834:	mov	r1, r7
   1b838:	add	r2, pc, r2
   1b83c:	mov	r0, r4
   1b840:	bl	1b50c <dta_write_tag>
   1b844:	mov	r5, r0
   1b848:	b	1b6c8 <dta_end_data+0x1a0>
   1b84c:	mov	fp, #20
   1b850:	b	1b810 <dta_end_data+0x2e8>
   1b854:	ldr	r3, [r7, #108]	; 0x6c
   1b858:	ldr	r1, [r7, #104]	; 0x68
   1b85c:	mov	r0, #1
   1b860:	add	r1, r1, r3
   1b864:	bl	3d9c <calloc@plt>
   1b868:	ldr	r2, [pc, #876]	; 1bbdc <dta_end_data+0x6b4>
   1b86c:	mov	r1, r7
   1b870:	add	r2, pc, r2
   1b874:	str	r0, [sp]
   1b878:	mov	r0, r4
   1b87c:	bl	1b50c <dta_write_tag>
   1b880:	subs	r5, r0, #0
   1b884:	bne	1bbb8 <dta_end_data+0x690>
   1b888:	ldr	r3, [pc, #848]	; 1bbe0 <dta_end_data+0x6b8>
   1b88c:	mov	r6, r5
   1b890:	add	r3, pc, r3
   1b894:	str	r3, [sp, #8]
   1b898:	ldr	r3, [pc, #836]	; 1bbe4 <dta_end_data+0x6bc>
   1b89c:	mov	r9, r5
   1b8a0:	add	r3, pc, r3
   1b8a4:	str	r3, [sp, #12]
   1b8a8:	ldr	r3, [pc, #824]	; 1bbe8 <dta_end_data+0x6c0>
   1b8ac:	mov	r8, r5
   1b8b0:	add	r3, pc, r3
   1b8b4:	str	r5, [sp, #4]
   1b8b8:	str	r3, [sp, #16]
   1b8bc:	ldr	r3, [r4, #40]	; 0x28
   1b8c0:	ldr	r2, [sp, #4]
   1b8c4:	cmp	r2, r3
   1b8c8:	blt	1b8e8 <dta_end_data+0x3c0>
   1b8cc:	ldr	r2, [pc, #792]	; 1bbec <dta_end_data+0x6c4>
   1b8d0:	mov	r1, r7
   1b8d4:	add	r2, pc, r2
   1b8d8:	mov	r0, r4
   1b8dc:	bl	1b50c <dta_write_tag>
   1b8e0:	mov	r5, r0
   1b8e4:	b	1b9e4 <dta_end_data+0x4bc>
   1b8e8:	ldr	r1, [sp, #4]
   1b8ec:	mov	r0, r4
   1b8f0:	bl	4474 <readstat_get_label_set@plt>
   1b8f4:	mov	r5, #0
   1b8f8:	ldr	r3, [r0, #264]	; 0x108
   1b8fc:	mov	sl, r0
   1b900:	str	r3, [sp, #28]
   1b904:	str	r5, [sp, #32]
   1b908:	ldr	r3, [sp, #28]
   1b90c:	cmp	r5, r3
   1b910:	blt	1ba2c <dta_end_data+0x504>
   1b914:	ldr	r2, [sp, #8]
   1b918:	mov	r1, r7
   1b91c:	mov	r0, r4
   1b920:	bl	1b50c <dta_write_tag>
   1b924:	subs	r5, r0, #0
   1b928:	bne	1b9e4 <dta_end_data+0x4bc>
   1b92c:	ldr	r3, [sp, #28]
   1b930:	add	r1, sp, #56	; 0x38
   1b934:	add	r2, r3, #1
   1b938:	ldr	r3, [sp, #32]
   1b93c:	mov	r0, r4
   1b940:	add	r3, r3, r2, lsl #3
   1b944:	str	r3, [r1, #-20]!	; 0xffffffec
   1b948:	mov	r2, #4
   1b94c:	bl	44a4 <readstat_write_bytes@plt>
   1b950:	subs	r5, r0, #0
   1b954:	bne	1b9e4 <dta_end_data+0x4bc>
   1b958:	ldr	r5, [r7, #104]	; 0x68
   1b95c:	add	r1, sl, #4
   1b960:	mov	r2, r5
   1b964:	ldr	r0, [sp]
   1b968:	bl	430c <strncpy@plt>
   1b96c:	ldr	r2, [r7, #108]	; 0x6c
   1b970:	ldr	r1, [sp]
   1b974:	add	r2, r5, r2
   1b978:	mov	r0, r4
   1b97c:	bl	44a4 <readstat_write_bytes@plt>
   1b980:	subs	r5, r0, #0
   1b984:	bne	1b9e4 <dta_end_data+0x4bc>
   1b988:	ldr	r3, [sp, #32]
   1b98c:	cmp	r3, #0
   1b990:	bne	1ba54 <dta_end_data+0x52c>
   1b994:	add	sl, sp, #32
   1b998:	mov	r2, #4
   1b99c:	mov	r1, sl
   1b9a0:	mov	r0, r4
   1b9a4:	bl	44a4 <readstat_write_bytes@plt>
   1b9a8:	subs	r5, r0, #0
   1b9ac:	bne	1b9e4 <dta_end_data+0x4bc>
   1b9b0:	mov	r2, #4
   1b9b4:	mov	r1, sl
   1b9b8:	mov	r0, r4
   1b9bc:	bl	44a4 <readstat_write_bytes@plt>
   1b9c0:	subs	r5, r0, #0
   1b9c4:	bne	1b9e4 <dta_end_data+0x4bc>
   1b9c8:	ldr	r2, [pc, #544]	; 1bbf0 <dta_end_data+0x6c8>
   1b9cc:	add	r2, pc, r2
   1b9d0:	mov	r1, r7
   1b9d4:	mov	r0, r4
   1b9d8:	bl	1b50c <dta_write_tag>
   1b9dc:	subs	r5, r0, #0
   1b9e0:	beq	1bba8 <dta_end_data+0x680>
   1b9e4:	cmp	r8, #0
   1b9e8:	beq	1b9f4 <dta_end_data+0x4cc>
   1b9ec:	mov	r0, r8
   1b9f0:	bl	3f04 <free@plt>
   1b9f4:	cmp	r9, #0
   1b9f8:	beq	1ba04 <dta_end_data+0x4dc>
   1b9fc:	mov	r0, r9
   1ba00:	bl	3f04 <free@plt>
   1ba04:	cmp	r6, #0
   1ba08:	beq	1ba14 <dta_end_data+0x4ec>
   1ba0c:	mov	r0, r6
   1ba10:	bl	3f04 <free@plt>
   1ba14:	ldr	r3, [sp]
   1ba18:	cmp	r3, #0
   1ba1c:	beq	1b828 <dta_end_data+0x300>
   1ba20:	ldr	r0, [sp]
   1ba24:	bl	3f04 <free@plt>
   1ba28:	b	1b828 <dta_end_data+0x300>
   1ba2c:	mov	r1, r5
   1ba30:	mov	r0, sl
   1ba34:	bl	451c <readstat_get_value_label@plt>
   1ba38:	ldr	r3, [sp, #32]
   1ba3c:	add	r5, r5, #1
   1ba40:	add	r3, r3, #1
   1ba44:	ldr	r2, [r0, #28]
   1ba48:	add	r3, r3, r2
   1ba4c:	str	r3, [sp, #32]
   1ba50:	b	1b908 <dta_end_data+0x3e0>
   1ba54:	ldr	r1, [sp, #28]
   1ba58:	mov	r0, r8
   1ba5c:	mov	fp, r5
   1ba60:	lsl	r1, r1, #2
   1ba64:	bl	403c <realloc@plt>
   1ba68:	ldr	r1, [sp, #28]
   1ba6c:	lsl	r1, r1, #2
   1ba70:	mov	r8, r0
   1ba74:	mov	r0, r9
   1ba78:	bl	403c <realloc@plt>
   1ba7c:	ldr	r1, [sp, #32]
   1ba80:	mov	r9, r0
   1ba84:	mov	r0, r6
   1ba88:	bl	403c <realloc@plt>
   1ba8c:	ldr	r1, [sp, #12]
   1ba90:	mov	r6, r0
   1ba94:	mov	r0, sl
   1ba98:	bl	3df0 <readstat_sort_label_set@plt>
   1ba9c:	ldr	r3, [sp, #28]
   1baa0:	cmp	fp, r3
   1baa4:	blt	1bb30 <dta_end_data+0x608>
   1baa8:	mov	r2, #4
   1baac:	add	r1, sp, #28
   1bab0:	mov	r0, r4
   1bab4:	bl	44a4 <readstat_write_bytes@plt>
   1bab8:	subs	r5, r0, #0
   1babc:	bne	1b9e4 <dta_end_data+0x4bc>
   1bac0:	mov	r2, #4
   1bac4:	add	r1, sp, #32
   1bac8:	mov	r0, r4
   1bacc:	bl	44a4 <readstat_write_bytes@plt>
   1bad0:	subs	r5, r0, #0
   1bad4:	bne	1b9e4 <dta_end_data+0x4bc>
   1bad8:	ldr	r2, [sp, #28]
   1badc:	mov	r1, r8
   1bae0:	mov	r0, r4
   1bae4:	lsl	r2, r2, #2
   1bae8:	bl	44a4 <readstat_write_bytes@plt>
   1baec:	subs	r5, r0, #0
   1baf0:	bne	1b9e4 <dta_end_data+0x4bc>
   1baf4:	ldr	r2, [sp, #28]
   1baf8:	mov	r1, r9
   1bafc:	mov	r0, r4
   1bb00:	lsl	r2, r2, #2
   1bb04:	bl	44a4 <readstat_write_bytes@plt>
   1bb08:	subs	r5, r0, #0
   1bb0c:	bne	1b9e4 <dta_end_data+0x4bc>
   1bb10:	ldr	r2, [sp, #32]
   1bb14:	mov	r1, r6
   1bb18:	mov	r0, r4
   1bb1c:	bl	44a4 <readstat_write_bytes@plt>
   1bb20:	subs	r5, r0, #0
   1bb24:	bne	1b9e4 <dta_end_data+0x4bc>
   1bb28:	ldr	r2, [sp, #16]
   1bb2c:	b	1b9d0 <dta_end_data+0x4a8>
   1bb30:	mov	r1, fp
   1bb34:	mov	r0, sl
   1bb38:	bl	451c <readstat_get_value_label@plt>
   1bb3c:	ldr	r1, [r0, #24]
   1bb40:	ldr	r3, [r0, #28]
   1bb44:	str	r5, [r8, fp, lsl #2]
   1bb48:	ldrb	r2, [r0, #12]
   1bb4c:	cmp	r2, #0
   1bb50:	beq	1bb98 <dta_end_data+0x670>
   1bb54:	ldr	r0, [r4, #8]
   1bb58:	cmp	r0, #112	; 0x70
   1bb5c:	ble	1bba0 <dta_end_data+0x678>
   1bb60:	add	r2, r2, #-2147483648	; 0x80000000
   1bb64:	sub	r2, r2, #123	; 0x7b
   1bb68:	str	r2, [r9, fp, lsl #2]
   1bb6c:	add	r0, r6, r5
   1bb70:	mov	r2, r3
   1bb74:	str	r3, [sp, #20]
   1bb78:	bl	3f64 <memcpy@plt>
   1bb7c:	ldr	r3, [sp, #20]
   1bb80:	mov	r2, #0
   1bb84:	add	r3, r3, r5
   1bb88:	add	r5, r3, #1
   1bb8c:	strb	r2, [r6, r3]
   1bb90:	add	fp, fp, #1
   1bb94:	b	1ba9c <dta_end_data+0x574>
   1bb98:	ldr	r2, [r0, #8]
   1bb9c:	b	1bb68 <dta_end_data+0x640>
   1bba0:	mov	r5, #23
   1bba4:	b	1b9e4 <dta_end_data+0x4bc>
   1bba8:	ldr	r3, [sp, #4]
   1bbac:	add	r3, r3, #1
   1bbb0:	str	r3, [sp, #4]
   1bbb4:	b	1b8bc <dta_end_data+0x394>
   1bbb8:	ldr	r3, [sp]
   1bbbc:	cmp	r3, #0
   1bbc0:	bne	1ba20 <dta_end_data+0x4f8>
   1bbc4:	b	1b6c8 <dta_end_data+0x1a0>
   1bbc8:	.word	0x000084a1
   1bbcc:	.word	0x00008356
   1bbd0:	.word	0x00008346
   1bbd4:	.word	0x000083be
   1bbd8:	.word	0x00008257
   1bbdc:	.word	0x000081ba
   1bbe0:	.word	0x000081a9
   1bbe4:	.word	0x000004e4
   1bbe8:	.word	0x0000818f
   1bbec:	.word	0x000081ab
   1bbf0:	.word	0x00008073

0001bbf4 <dta_write_missing_string>:
   1bbf4:	ldr	r2, [r1, #1596]	; 0x63c
   1bbf8:	push	{r4, lr}
   1bbfc:	mov	r1, #0
   1bc00:	bl	42e8 <memset@plt>
   1bc04:	mov	r0, #0
   1bc08:	pop	{r4, pc}

0001bc0c <dta_emit_header_data_label>:
   1bc0c:	ldr	r2, [pc, #248]	; 1bd0c <dta_emit_header_data_label+0x100>
   1bc10:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   1bc14:	add	r2, pc, r2
   1bc18:	mov	r5, r0
   1bc1c:	mov	r8, r1
   1bc20:	bl	1b50c <dta_write_tag>
   1bc24:	subs	r4, r0, #0
   1bc28:	bne	1bc80 <dta_emit_header_data_label+0x74>
   1bc2c:	ldr	r4, [r8, #8]
   1bc30:	add	r7, r5, #88	; 0x58
   1bc34:	cmp	r4, #0
   1bc38:	beq	1bca8 <dta_emit_header_data_label+0x9c>
   1bc3c:	cmp	r4, #1
   1bc40:	bne	1bc8c <dta_emit_header_data_label+0x80>
   1bc44:	mov	r0, r7
   1bc48:	bl	424c <strlen@plt>
   1bc4c:	add	r1, sp, #8
   1bc50:	strb	r0, [r1, #-2]!
   1bc54:	mov	r2, r4
   1bc58:	mov	r0, r5
   1bc5c:	bl	44a4 <readstat_write_bytes@plt>
   1bc60:	subs	r4, r0, #0
   1bc64:	bne	1bc80 <dta_emit_header_data_label+0x74>
   1bc68:	mov	r1, r7
   1bc6c:	mov	r0, r5
   1bc70:	bl	41a4 <readstat_write_string@plt>
   1bc74:	subs	r4, r0, #0
   1bc78:	moveq	r6, r4
   1bc7c:	beq	1bce0 <dta_emit_header_data_label+0xd4>
   1bc80:	mov	r0, r4
   1bc84:	add	sp, sp, #8
   1bc88:	pop	{r4, r5, r6, r7, r8, pc}
   1bc8c:	cmp	r4, #2
   1bc90:	bne	1bc68 <dta_emit_header_data_label+0x5c>
   1bc94:	mov	r0, r7
   1bc98:	bl	424c <strlen@plt>
   1bc9c:	add	r1, sp, #8
   1bca0:	strh	r0, [r1, #-2]!
   1bca4:	b	1bc54 <dta_emit_header_data_label+0x48>
   1bca8:	ldr	r4, [r8, #4]
   1bcac:	mov	r0, #1
   1bcb0:	mov	r1, r4
   1bcb4:	bl	3d9c <calloc@plt>
   1bcb8:	mov	r2, r4
   1bcbc:	mov	r1, r7
   1bcc0:	mov	r6, r0
   1bcc4:	bl	430c <strncpy@plt>
   1bcc8:	mov	r2, r4
   1bccc:	mov	r1, r6
   1bcd0:	mov	r0, r5
   1bcd4:	bl	44a4 <readstat_write_bytes@plt>
   1bcd8:	subs	r4, r0, #0
   1bcdc:	bne	1bd00 <dta_emit_header_data_label+0xf4>
   1bce0:	ldr	r2, [pc, #40]	; 1bd10 <dta_emit_header_data_label+0x104>
   1bce4:	mov	r1, r8
   1bce8:	add	r2, pc, r2
   1bcec:	mov	r0, r5
   1bcf0:	bl	1b50c <dta_write_tag>
   1bcf4:	cmp	r6, #0
   1bcf8:	mov	r4, r0
   1bcfc:	beq	1bc80 <dta_emit_header_data_label+0x74>
   1bd00:	mov	r0, r6
   1bd04:	bl	3f04 <free@plt>
   1bd08:	b	1bc80 <dta_emit_header_data_label+0x74>
   1bd0c:	.word	0x00007c37
   1bd10:	.word	0x00007b6b

0001bd14 <dta_measure_tag>:
   1bd14:	ldrb	r0, [r0, #192]	; 0xc0
   1bd18:	ands	r0, r0, #4
   1bd1c:	bxeq	lr
   1bd20:	mov	r0, r1
   1bd24:	b	424c <strlen@plt>

0001bd28 <dta_write_string>:
   1bd28:	push	{r4, r5, r6, lr}
   1bd2c:	subs	r4, r2, #0
   1bd30:	mov	r6, r0
   1bd34:	ldr	r5, [r1, #1596]	; 0x63c
   1bd38:	beq	1bd48 <dta_write_string+0x20>
   1bd3c:	ldrb	r3, [r4]
   1bd40:	cmp	r3, #0
   1bd44:	bne	1bd60 <dta_write_string+0x38>
   1bd48:	mov	r2, r5
   1bd4c:	mov	r1, #0
   1bd50:	mov	r0, r6
   1bd54:	bl	42e8 <memset@plt>
   1bd58:	mov	r0, #0
   1bd5c:	pop	{r4, r5, r6, pc}
   1bd60:	mov	r0, r4
   1bd64:	bl	424c <strlen@plt>
   1bd68:	cmp	r5, r0
   1bd6c:	bcc	1bd84 <dta_write_string+0x5c>
   1bd70:	mov	r2, r5
   1bd74:	mov	r1, r4
   1bd78:	mov	r0, r6
   1bd7c:	bl	430c <strncpy@plt>
   1bd80:	b	1bd58 <dta_write_string+0x30>
   1bd84:	mov	r0, #22
   1bd88:	pop	{r4, r5, r6, pc}

0001bd8c <dta_compare_value_labels>:
   1bd8c:	ldrb	r3, [r0, #12]
   1bd90:	ldrb	r2, [r1, #12]
   1bd94:	cmp	r3, #0
   1bd98:	beq	1bdac <dta_compare_value_labels+0x20>
   1bd9c:	cmp	r2, #0
   1bda0:	beq	1bdc4 <dta_compare_value_labels+0x38>
   1bda4:	sub	r0, r3, r2
   1bda8:	bx	lr
   1bdac:	cmp	r2, #0
   1bdb0:	bne	1bdcc <dta_compare_value_labels+0x40>
   1bdb4:	ldr	r0, [r0, #8]
   1bdb8:	ldr	r3, [r1, #8]
   1bdbc:	sub	r0, r0, r3
   1bdc0:	bx	lr
   1bdc4:	mov	r0, #1
   1bdc8:	bx	lr
   1bdcc:	mvn	r0, #0
   1bdd0:	bx	lr

0001bdd4 <dta_numeric_variable_width.isra.1>:
   1bdd4:	cmp	r0, #5
   1bdd8:	beq	1bdfc <dta_numeric_variable_width.isra.1+0x28>
   1bddc:	sub	r3, r0, #3
   1bde0:	cmp	r3, #1
   1bde4:	bls	1be04 <dta_numeric_variable_width.isra.1+0x30>
   1bde8:	cmp	r0, #2
   1bdec:	subne	r0, r0, #1
   1bdf0:	clzne	r0, r0
   1bdf4:	lsrne	r0, r0, #5
   1bdf8:	bx	lr
   1bdfc:	mov	r0, #8
   1be00:	bx	lr
   1be04:	mov	r0, #4
   1be08:	bx	lr

0001be0c <dta_111_variable_width>:
   1be0c:	cmp	r0, #0
   1be10:	beq	1be18 <dta_111_variable_width+0xc>
   1be14:	b	1bdd4 <dta_numeric_variable_width.isra.1>
   1be18:	sub	r3, r1, #1
   1be1c:	cmp	r3, #243	; 0xf3
   1be20:	movhi	r1, #244	; 0xf4
   1be24:	mov	r0, r1
   1be28:	bx	lr

0001be2c <dta_old_variable_width>:
   1be2c:	cmp	r0, #0
   1be30:	beq	1be38 <dta_old_variable_width+0xc>
   1be34:	b	1bdd4 <dta_numeric_variable_width.isra.1>
   1be38:	sub	r3, r1, #1
   1be3c:	cmp	r3, #127	; 0x7f
   1be40:	movhi	r1, #128	; 0x80
   1be44:	mov	r0, r1
   1be48:	bx	lr

0001be4c <dta_117_variable_width>:
   1be4c:	subs	r3, r0, #0
   1be50:	bne	1be70 <dta_117_variable_width+0x24>
   1be54:	ldr	r2, [pc, #40]	; 1be84 <dta_117_variable_width+0x38>
   1be58:	sub	r0, r1, #1
   1be5c:	ldr	r3, [pc, #36]	; 1be88 <dta_117_variable_width+0x3c>
   1be60:	cmp	r0, r2
   1be64:	movhi	r1, r3
   1be68:	mov	r0, r1
   1be6c:	bx	lr
   1be70:	cmp	r3, #6
   1be74:	beq	1be7c <dta_117_variable_width+0x30>
   1be78:	b	1bdd4 <dta_numeric_variable_width.isra.1>
   1be7c:	mov	r1, #8
   1be80:	b	1be68 <dta_117_variable_width+0x1c>
   1be84:	.word	0x000007fc
   1be88:	.word	0x000007fd

0001be8c <dta_metadata_ok>:
   1be8c:	ldr	r3, [r0, #16]
   1be90:	cmp	r3, #0
   1be94:	bne	1beb0 <dta_metadata_ok+0x24>
   1be98:	ldr	r0, [r0, #8]
   1be9c:	sub	r0, r0, #104	; 0x68
   1bea0:	cmp	r0, #15
   1bea4:	movhi	r0, #24
   1bea8:	movls	r0, #0
   1beac:	bx	lr
   1beb0:	mov	r0, #6
   1beb4:	bx	lr

0001beb8 <dta_write_chunk>:
   1beb8:	push	{r4, r5, r6, r7, r8, lr}
   1bebc:	mov	r4, r0
   1bec0:	mov	r5, r1
   1bec4:	mov	r7, r3
   1bec8:	ldr	r8, [sp, #24]
   1becc:	ldr	r6, [sp, #28]
   1bed0:	bl	1b50c <dta_write_tag>
   1bed4:	cmp	r0, #0
   1bed8:	popne	{r4, r5, r6, r7, r8, pc}
   1bedc:	mov	r2, r8
   1bee0:	mov	r1, r7
   1bee4:	mov	r0, r4
   1bee8:	bl	44a4 <readstat_write_bytes@plt>
   1beec:	cmp	r0, #0
   1bef0:	popne	{r4, r5, r6, r7, r8, pc}
   1bef4:	mov	r2, r6
   1bef8:	mov	r1, r5
   1befc:	mov	r0, r4
   1bf00:	pop	{r4, r5, r6, r7, r8, lr}
   1bf04:	b	1b50c <dta_write_tag>

0001bf08 <dta_113_write_missing_tagged>:
   1bf08:	mov	ip, r0
   1bf0c:	sub	r0, r2, #97	; 0x61
   1bf10:	uxtb	r3, r0
   1bf14:	cmp	r3, #25
   1bf18:	bhi	1bfbc <dta_113_write_missing_tagged+0xb4>
   1bf1c:	ldr	r3, [r1]
   1bf20:	cmp	r3, #1
   1bf24:	addeq	r2, r2, #5
   1bf28:	strbeq	r2, [ip]
   1bf2c:	beq	1bf44 <dta_113_write_missing_tagged+0x3c>
   1bf30:	cmp	r3, #2
   1bf34:	bne	1bf4c <dta_113_write_missing_tagged+0x44>
   1bf38:	add	r2, r2, #32512	; 0x7f00
   1bf3c:	add	r2, r2, #133	; 0x85
   1bf40:	strh	r2, [ip]
   1bf44:	mov	r0, #0
   1bf48:	bx	lr
   1bf4c:	cmp	r3, #3
   1bf50:	addeq	r2, r2, #-2147483648	; 0x80000000
   1bf54:	subeq	r2, r2, #123	; 0x7b
   1bf58:	streq	r2, [ip]
   1bf5c:	beq	1bf44 <dta_113_write_missing_tagged+0x3c>
   1bf60:	cmp	r3, #4
   1bf64:	lsleq	r0, r0, #11
   1bf68:	addeq	r0, r0, #2130706432	; 0x7f000000
   1bf6c:	addeq	r0, r0, #2048	; 0x800
   1bf70:	streq	r0, [ip]
   1bf74:	beq	1bf44 <dta_113_write_missing_tagged+0x3c>
   1bf78:	cmp	r3, #5
   1bf7c:	bne	1bfc4 <dta_113_write_missing_tagged+0xbc>
   1bf80:	lsl	r3, r0, #8
   1bf84:	add	r1, pc, #68	; 0x44
   1bf88:	ldrd	r0, [r1]
   1bf8c:	mov	r2, #0
   1bf90:	sub	sp, sp, #8
   1bf94:	adds	r0, r0, r2
   1bf98:	adc	r1, r1, r3
   1bf9c:	add	r3, sp, #8
   1bfa0:	strd	r0, [r3, #-8]!
   1bfa4:	ldm	r3!, {r0, r1}
   1bfa8:	str	r0, [ip]
   1bfac:	str	r1, [ip, #4]
   1bfb0:	mov	r0, r2
   1bfb4:	add	sp, sp, #8
   1bfb8:	bx	lr
   1bfbc:	mov	r0, #21
   1bfc0:	bx	lr
   1bfc4:	mov	r0, #23
   1bfc8:	bx	lr
   1bfcc:	nop			; (mov r0, r0)
   1bfd0:	.word	0x00000000
   1bfd4:	.word	0x7fe00100

0001bfd8 <dta_old_write_missing_numeric>:
   1bfd8:	ldr	r3, [r1]
   1bfdc:	mov	r2, r0
   1bfe0:	cmp	r3, #1
   1bfe4:	moveq	r3, #127	; 0x7f
   1bfe8:	strbeq	r3, [r0]
   1bfec:	beq	1c01c <dta_old_write_missing_numeric+0x44>
   1bff0:	cmp	r3, #2
   1bff4:	ldrheq	r3, [pc, #92]	; 1c058 <dta_old_write_missing_numeric+0x80>
   1bff8:	strheq	r3, [r0]
   1bffc:	beq	1c01c <dta_old_write_missing_numeric+0x44>
   1c000:	cmp	r3, #3
   1c004:	mvneq	r3, #-2147483648	; 0x80000000
   1c008:	beq	1c018 <dta_old_write_missing_numeric+0x40>
   1c00c:	cmp	r3, #4
   1c010:	bne	1c024 <dta_old_write_missing_numeric+0x4c>
   1c014:	mov	r3, #2130706432	; 0x7f000000
   1c018:	str	r3, [r2]
   1c01c:	mov	r0, #0
   1c020:	bx	lr
   1c024:	cmp	r3, #5
   1c028:	bne	1c01c <dta_old_write_missing_numeric+0x44>
   1c02c:	sub	sp, sp, #8
   1c030:	ldr	r1, [pc, #36]	; 1c05c <dta_old_write_missing_numeric+0x84>
   1c034:	add	r3, sp, #8
   1c038:	mov	r0, #0
   1c03c:	strd	r0, [r3, #-8]!
   1c040:	ldm	r3!, {r0, r1}
   1c044:	str	r0, [r2]
   1c048:	str	r1, [r2, #4]
   1c04c:	mov	r0, #0
   1c050:	add	sp, sp, #8
   1c054:	bx	lr
   1c058:	.word	0x00007fff
   1c05c:	.word	0x7fe00000

0001c060 <dta_118_write_string_ref>:
   1c060:	cmp	r2, #0
   1c064:	push	{r0, r1, r4, r5, r6, lr}
   1c068:	moveq	r0, #34	; 0x22
   1c06c:	beq	1c0bc <dta_118_write_string_ref+0x5c>
   1c070:	ldr	r3, [r2]
   1c074:	ldr	r6, [r2, #8]
   1c078:	ldr	r4, [r2, #12]
   1c07c:	strh	r3, [r0]
   1c080:	mov	r5, r0
   1c084:	str	r4, [sp, #4]
   1c088:	str	r6, [sp]
   1c08c:	bl	3ef8 <machine_is_little_endian@plt>
   1c090:	cmp	r0, #0
   1c094:	lsleq	r4, r4, #16
   1c098:	orreq	r4, r4, r6, lsr #16
   1c09c:	lsleq	r6, r6, #16
   1c0a0:	streq	r6, [sp]
   1c0a4:	ldr	r0, [sp]
   1c0a8:	streq	r4, [sp, #4]
   1c0ac:	ldrh	r3, [sp, #4]
   1c0b0:	str	r0, [r5, #2]
   1c0b4:	mov	r0, #0
   1c0b8:	strh	r3, [r5, #6]
   1c0bc:	add	sp, sp, #8
   1c0c0:	pop	{r4, r5, r6, pc}

0001c0c4 <dta_emit_header_time_stamp.part.12>:
   1c0c4:	push	{r4, r5, r6, r7, r8, r9, lr}
   1c0c8:	sub	sp, sp, #76	; 0x4c
   1c0cc:	ldr	r3, [r0, #20]
   1c0d0:	mov	r5, r0
   1c0d4:	add	r0, sp, #72	; 0x48
   1c0d8:	mov	r7, r1
   1c0dc:	str	r3, [r0, #-52]!	; 0xffffffcc
   1c0e0:	bl	41b0 <localtime@plt>
   1c0e4:	ldr	r8, [r7, #16]
   1c0e8:	mov	r1, r8
   1c0ec:	mov	r4, r0
   1c0f0:	mov	r0, #1
   1c0f4:	bl	3d9c <calloc@plt>
   1c0f8:	ldr	r3, [pc, #312]	; 1c238 <dta_emit_header_time_stamp.part.12+0x174>
   1c0fc:	add	r2, sp, #24
   1c100:	add	r3, pc, r3
   1c104:	add	r9, r3, #48	; 0x30
   1c108:	mov	lr, r2
   1c10c:	mov	r6, r0
   1c110:	ldr	r0, [r3]
   1c114:	ldr	r1, [r3, #4]
   1c118:	mov	ip, r2
   1c11c:	add	r3, r3, #8
   1c120:	cmp	r3, r9
   1c124:	stmia	ip!, {r0, r1}
   1c128:	mov	r2, ip
   1c12c:	bne	1c110 <dta_emit_header_time_stamp.part.12+0x4c>
   1c130:	cmp	r4, #0
   1c134:	moveq	r4, #39	; 0x27
   1c138:	beq	1c210 <dta_emit_header_time_stamp.part.12+0x14c>
   1c13c:	cmp	r6, #0
   1c140:	moveq	r4, #3
   1c144:	beq	1c210 <dta_emit_header_time_stamp.part.12+0x14c>
   1c148:	ldr	r3, [r4, #4]
   1c14c:	ldr	r2, [pc, #232]	; 1c23c <dta_emit_header_time_stamp.part.12+0x178>
   1c150:	str	r3, [sp, #12]
   1c154:	ldr	r3, [r4, #8]
   1c158:	add	r2, pc, r2
   1c15c:	str	r3, [sp, #8]
   1c160:	ldr	r3, [r4, #20]
   1c164:	mov	r1, r8
   1c168:	add	r3, r3, #1888	; 0x760
   1c16c:	add	r3, r3, #12
   1c170:	str	r3, [sp, #4]
   1c174:	ldr	r3, [r4, #16]
   1c178:	mov	r0, r6
   1c17c:	add	lr, lr, r3, lsl #2
   1c180:	str	lr, [sp]
   1c184:	ldr	r3, [r4, #12]
   1c188:	bl	42c4 <snprintf@plt>
   1c18c:	uxtb	r0, r0
   1c190:	cmp	r0, #0
   1c194:	strb	r0, [sp, #19]
   1c198:	moveq	r4, #13
   1c19c:	beq	1c210 <dta_emit_header_time_stamp.part.12+0x14c>
   1c1a0:	ldrb	r3, [r7, #192]	; 0xc0
   1c1a4:	tst	r3, #4
   1c1a8:	beq	1c224 <dta_emit_header_time_stamp.part.12+0x160>
   1c1ac:	ldr	r2, [pc, #140]	; 1c240 <dta_emit_header_time_stamp.part.12+0x17c>
   1c1b0:	mov	r1, r7
   1c1b4:	add	r2, pc, r2
   1c1b8:	mov	r0, r5
   1c1bc:	bl	1b50c <dta_write_tag>
   1c1c0:	subs	r4, r0, #0
   1c1c4:	bne	1c210 <dta_emit_header_time_stamp.part.12+0x14c>
   1c1c8:	mov	r2, #1
   1c1cc:	add	r1, sp, #19
   1c1d0:	mov	r0, r5
   1c1d4:	bl	44a4 <readstat_write_bytes@plt>
   1c1d8:	subs	r4, r0, #0
   1c1dc:	bne	1c210 <dta_emit_header_time_stamp.part.12+0x14c>
   1c1e0:	ldrb	r2, [sp, #19]
   1c1e4:	mov	r1, r6
   1c1e8:	mov	r0, r5
   1c1ec:	bl	44a4 <readstat_write_bytes@plt>
   1c1f0:	subs	r4, r0, #0
   1c1f4:	bne	1c210 <dta_emit_header_time_stamp.part.12+0x14c>
   1c1f8:	ldr	r2, [pc, #68]	; 1c244 <dta_emit_header_time_stamp.part.12+0x180>
   1c1fc:	mov	r1, r7
   1c200:	add	r2, pc, r2
   1c204:	mov	r0, r5
   1c208:	bl	1b50c <dta_write_tag>
   1c20c:	mov	r4, r0
   1c210:	mov	r0, r6
   1c214:	bl	3f04 <free@plt>
   1c218:	mov	r0, r4
   1c21c:	add	sp, sp, #76	; 0x4c
   1c220:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1c224:	ldr	r2, [r7, #16]
   1c228:	mov	r1, r6
   1c22c:	mov	r0, r5
   1c230:	bl	44a4 <readstat_write_bytes@plt>
   1c234:	b	1c20c <dta_emit_header_time_stamp.part.12+0x148>
   1c238:	.word	0x00007946
   1c23c:	.word	0x00007944
   1c240:	.word	0x000076a8
   1c244:	.word	0x00007668

0001c248 <dta_validate_name>:
   1c248:	push	{r0, r1, r2, r4, r5, lr}
   1c24c:	mov	r5, r2
   1c250:	mov	r4, r0
   1c254:	bl	424c <strlen@plt>
   1c258:	cmp	r0, r5
   1c25c:	movhi	r0, #28
   1c260:	bhi	1c2fc <dta_validate_name+0xb4>
   1c264:	ldrb	r3, [r4]
   1c268:	cmp	r3, #0
   1c26c:	subne	r0, r4, #1
   1c270:	bne	1c2a0 <dta_validate_name+0x58>
   1c274:	mov	r0, #38	; 0x26
   1c278:	b	1c2fc <dta_validate_name+0xb4>
   1c27c:	cmp	r2, #95	; 0x5f
   1c280:	beq	1c2a0 <dta_validate_name+0x58>
   1c284:	bic	r1, r2, #32
   1c288:	sub	r1, r1, #65	; 0x41
   1c28c:	cmp	r1, #25
   1c290:	bls	1c2a0 <dta_validate_name+0x58>
   1c294:	sub	r2, r2, #48	; 0x30
   1c298:	cmp	r2, #9
   1c29c:	bhi	1c4d8 <dta_validate_name+0x290>
   1c2a0:	ldrb	r2, [r0, #1]!
   1c2a4:	cmp	r2, #0
   1c2a8:	bne	1c27c <dta_validate_name+0x34>
   1c2ac:	cmp	r3, #95	; 0x5f
   1c2b0:	beq	1c2c8 <dta_validate_name+0x80>
   1c2b4:	bic	r3, r3, #32
   1c2b8:	sub	r3, r3, #65	; 0x41
   1c2bc:	cmp	r3, #25
   1c2c0:	movhi	r0, #25
   1c2c4:	bhi	1c2fc <dta_validate_name+0xb4>
   1c2c8:	ldr	r1, [pc, #528]	; 1c4e0 <dta_validate_name+0x298>
   1c2cc:	mov	r0, r4
   1c2d0:	add	r1, pc, r1
   1c2d4:	bl	3e44 <strcmp@plt>
   1c2d8:	cmp	r0, #0
   1c2dc:	beq	1c2f8 <dta_validate_name+0xb0>
   1c2e0:	ldr	r1, [pc, #508]	; 1c4e4 <dta_validate_name+0x29c>
   1c2e4:	mov	r0, r4
   1c2e8:	add	r1, pc, r1
   1c2ec:	bl	3e44 <strcmp@plt>
   1c2f0:	cmp	r0, #0
   1c2f4:	bne	1c304 <dta_validate_name+0xbc>
   1c2f8:	mov	r0, #27
   1c2fc:	add	sp, sp, #12
   1c300:	pop	{r4, r5, pc}
   1c304:	ldr	r1, [pc, #476]	; 1c4e8 <dta_validate_name+0x2a0>
   1c308:	mov	r0, r4
   1c30c:	add	r1, pc, r1
   1c310:	bl	3e44 <strcmp@plt>
   1c314:	cmp	r0, #0
   1c318:	beq	1c2f8 <dta_validate_name+0xb0>
   1c31c:	ldr	r1, [pc, #456]	; 1c4ec <dta_validate_name+0x2a4>
   1c320:	mov	r0, r4
   1c324:	add	r1, pc, r1
   1c328:	bl	3e44 <strcmp@plt>
   1c32c:	cmp	r0, #0
   1c330:	beq	1c2f8 <dta_validate_name+0xb0>
   1c334:	ldr	r1, [pc, #436]	; 1c4f0 <dta_validate_name+0x2a8>
   1c338:	mov	r0, r4
   1c33c:	add	r1, pc, r1
   1c340:	bl	3e44 <strcmp@plt>
   1c344:	cmp	r0, #0
   1c348:	beq	1c2f8 <dta_validate_name+0xb0>
   1c34c:	ldr	r1, [pc, #416]	; 1c4f4 <dta_validate_name+0x2ac>
   1c350:	mov	r0, r4
   1c354:	add	r1, pc, r1
   1c358:	bl	3e44 <strcmp@plt>
   1c35c:	cmp	r0, #0
   1c360:	beq	1c2f8 <dta_validate_name+0xb0>
   1c364:	ldr	r1, [pc, #396]	; 1c4f8 <dta_validate_name+0x2b0>
   1c368:	mov	r0, r4
   1c36c:	add	r1, pc, r1
   1c370:	bl	3e44 <strcmp@plt>
   1c374:	cmp	r0, #0
   1c378:	beq	1c2f8 <dta_validate_name+0xb0>
   1c37c:	ldr	r1, [pc, #376]	; 1c4fc <dta_validate_name+0x2b4>
   1c380:	mov	r0, r4
   1c384:	add	r1, pc, r1
   1c388:	bl	3e44 <strcmp@plt>
   1c38c:	cmp	r0, #0
   1c390:	beq	1c2f8 <dta_validate_name+0xb0>
   1c394:	ldr	r1, [pc, #356]	; 1c500 <dta_validate_name+0x2b8>
   1c398:	mov	r0, r4
   1c39c:	add	r1, pc, r1
   1c3a0:	bl	3e44 <strcmp@plt>
   1c3a4:	cmp	r0, #0
   1c3a8:	beq	1c2f8 <dta_validate_name+0xb0>
   1c3ac:	ldr	r1, [pc, #336]	; 1c504 <dta_validate_name+0x2bc>
   1c3b0:	mov	r0, r4
   1c3b4:	add	r1, pc, r1
   1c3b8:	bl	3e44 <strcmp@plt>
   1c3bc:	cmp	r0, #0
   1c3c0:	beq	1c2f8 <dta_validate_name+0xb0>
   1c3c4:	ldr	r1, [pc, #316]	; 1c508 <dta_validate_name+0x2c0>
   1c3c8:	mov	r0, r4
   1c3cc:	add	r1, pc, r1
   1c3d0:	bl	3e44 <strcmp@plt>
   1c3d4:	cmp	r0, #0
   1c3d8:	beq	1c2f8 <dta_validate_name+0xb0>
   1c3dc:	ldr	r1, [pc, #296]	; 1c50c <dta_validate_name+0x2c4>
   1c3e0:	mov	r0, r4
   1c3e4:	add	r1, pc, r1
   1c3e8:	bl	3e44 <strcmp@plt>
   1c3ec:	cmp	r0, #0
   1c3f0:	beq	1c2f8 <dta_validate_name+0xb0>
   1c3f4:	ldr	r1, [pc, #276]	; 1c510 <dta_validate_name+0x2c8>
   1c3f8:	mov	r0, r4
   1c3fc:	add	r1, pc, r1
   1c400:	bl	3e44 <strcmp@plt>
   1c404:	cmp	r0, #0
   1c408:	beq	1c2f8 <dta_validate_name+0xb0>
   1c40c:	ldr	r1, [pc, #256]	; 1c514 <dta_validate_name+0x2cc>
   1c410:	mov	r0, r4
   1c414:	add	r1, pc, r1
   1c418:	bl	3e44 <strcmp@plt>
   1c41c:	cmp	r0, #0
   1c420:	beq	1c2f8 <dta_validate_name+0xb0>
   1c424:	ldr	r1, [pc, #236]	; 1c518 <dta_validate_name+0x2d0>
   1c428:	mov	r0, r4
   1c42c:	add	r1, pc, r1
   1c430:	bl	3e44 <strcmp@plt>
   1c434:	cmp	r0, #0
   1c438:	beq	1c2f8 <dta_validate_name+0xb0>
   1c43c:	ldr	r1, [pc, #216]	; 1c51c <dta_validate_name+0x2d4>
   1c440:	mov	r0, r4
   1c444:	add	r1, pc, r1
   1c448:	bl	3e44 <strcmp@plt>
   1c44c:	cmp	r0, #0
   1c450:	beq	1c2f8 <dta_validate_name+0xb0>
   1c454:	ldr	r1, [pc, #196]	; 1c520 <dta_validate_name+0x2d8>
   1c458:	mov	r0, r4
   1c45c:	add	r1, pc, r1
   1c460:	bl	3e44 <strcmp@plt>
   1c464:	cmp	r0, #0
   1c468:	beq	1c2f8 <dta_validate_name+0xb0>
   1c46c:	ldr	r1, [pc, #176]	; 1c524 <dta_validate_name+0x2dc>
   1c470:	mov	r0, r4
   1c474:	add	r1, pc, r1
   1c478:	bl	3e44 <strcmp@plt>
   1c47c:	cmp	r0, #0
   1c480:	beq	1c2f8 <dta_validate_name+0xb0>
   1c484:	ldr	r1, [pc, #156]	; 1c528 <dta_validate_name+0x2e0>
   1c488:	mov	r0, r4
   1c48c:	add	r1, pc, r1
   1c490:	bl	3e44 <strcmp@plt>
   1c494:	cmp	r0, #0
   1c498:	beq	1c2f8 <dta_validate_name+0xb0>
   1c49c:	ldr	r1, [pc, #136]	; 1c52c <dta_validate_name+0x2e4>
   1c4a0:	mov	r0, r4
   1c4a4:	add	r1, pc, r1
   1c4a8:	bl	3e44 <strcmp@plt>
   1c4ac:	cmp	r0, #0
   1c4b0:	beq	1c2f8 <dta_validate_name+0xb0>
   1c4b4:	ldr	r1, [pc, #116]	; 1c530 <dta_validate_name+0x2e8>
   1c4b8:	add	r2, sp, #4
   1c4bc:	add	r1, pc, r1
   1c4c0:	mov	r0, r4
   1c4c4:	bl	42d0 <__isoc99_sscanf@plt>
   1c4c8:	cmp	r0, #1
   1c4cc:	movne	r0, #0
   1c4d0:	bne	1c2fc <dta_validate_name+0xb4>
   1c4d4:	b	1c2f8 <dta_validate_name+0xb0>
   1c4d8:	mov	r0, #26
   1c4dc:	b	1c2fc <dta_validate_name+0xb4>
   1c4e0:	.word	0x00007844
   1c4e4:	.word	0x000077cc
   1c4e8:	.word	0x000077ab
   1c4ec:	.word	0x00007798
   1c4f0:	.word	0x00007786
   1c4f4:	.word	0x00007774
   1c4f8:	.word	0x00007763
   1c4fc:	.word	0x00007751
   1c500:	.word	0x0000773c
   1c504:	.word	0x00007727
   1c508:	.word	0x00007713
   1c50c:	.word	0x00007700
   1c510:	.word	0x000076eb
   1c514:	.word	0x000076d6
   1c518:	.word	0x000076c2
   1c51c:	.word	0x000076b0
   1c520:	.word	0x0000769c
   1c524:	.word	0x0000768a
   1c528:	.word	0x00007677
   1c52c:	.word	0x00007665
   1c530:	.word	0x00007652

0001c534 <dta_old_variable_ok>:
   1c534:	push	{r4, lr}
   1c538:	bl	43b4 <readstat_variable_get_name@plt>
   1c53c:	mov	r2, #9
   1c540:	mov	r1, #0
   1c544:	pop	{r4, lr}
   1c548:	b	1c248 <dta_validate_name>

0001c54c <dta_110_variable_ok>:
   1c54c:	push	{r4, lr}
   1c550:	bl	43b4 <readstat_variable_get_name@plt>
   1c554:	mov	r2, #33	; 0x21
   1c558:	mov	r1, #0
   1c55c:	pop	{r4, lr}
   1c560:	b	1c248 <dta_validate_name>

0001c564 <dta_118_variable_ok>:
   1c564:	push	{r4, lr}
   1c568:	bl	43b4 <readstat_variable_get_name@plt>
   1c56c:	mov	r2, #129	; 0x81
   1c570:	mov	r1, #1
   1c574:	pop	{r4, lr}
   1c578:	b	1c248 <dta_validate_name>

0001c57c <dta_typecode_for_variable.constprop.15>:
   1c57c:	cmp	r1, #111	; 0x6f
   1c580:	ldr	r3, [r0, #1596]	; 0x63c
   1c584:	ldr	r0, [r0]
   1c588:	bne	1c5f8 <dta_typecode_for_variable.constprop.15+0x7c>
   1c58c:	cmp	r0, #6
   1c590:	addls	pc, pc, r0, lsl #2
   1c594:	b	1c6dc <dta_typecode_for_variable.constprop.15+0x160>
   1c598:	b	1c6c8 <dta_typecode_for_variable.constprop.15+0x14c>
   1c59c:	b	1c5b4 <dta_typecode_for_variable.constprop.15+0x38>
   1c5a0:	b	1c5d8 <dta_typecode_for_variable.constprop.15+0x5c>
   1c5a4:	b	1c5e0 <dta_typecode_for_variable.constprop.15+0x64>
   1c5a8:	b	1c5e8 <dta_typecode_for_variable.constprop.15+0x6c>
   1c5ac:	b	1c5f0 <dta_typecode_for_variable.constprop.15+0x74>
   1c5b0:	b	1c6d0 <dta_typecode_for_variable.constprop.15+0x154>
   1c5b4:	mov	r3, #251	; 0xfb
   1c5b8:	mov	r0, #0
   1c5bc:	adds	r1, r2, #0
   1c5c0:	movne	r1, #1
   1c5c4:	cmp	r0, #0
   1c5c8:	movne	r1, #0
   1c5cc:	cmp	r1, #0
   1c5d0:	strhne	r3, [r2]
   1c5d4:	bx	lr
   1c5d8:	mov	r3, #252	; 0xfc
   1c5dc:	b	1c5b8 <dta_typecode_for_variable.constprop.15+0x3c>
   1c5e0:	mov	r3, #253	; 0xfd
   1c5e4:	b	1c5b8 <dta_typecode_for_variable.constprop.15+0x3c>
   1c5e8:	mov	r3, #254	; 0xfe
   1c5ec:	b	1c5b8 <dta_typecode_for_variable.constprop.15+0x3c>
   1c5f0:	mov	r3, #255	; 0xff
   1c5f4:	b	1c5b8 <dta_typecode_for_variable.constprop.15+0x3c>
   1c5f8:	cmp	r1, #117	; 0x75
   1c5fc:	bne	1c674 <dta_typecode_for_variable.constprop.15+0xf8>
   1c600:	cmp	r0, #6
   1c604:	addls	pc, pc, r0, lsl #2
   1c608:	b	1c66c <dta_typecode_for_variable.constprop.15+0xf0>
   1c60c:	b	1c65c <dta_typecode_for_variable.constprop.15+0xe0>
   1c610:	b	1c628 <dta_typecode_for_variable.constprop.15+0xac>
   1c614:	b	1c63c <dta_typecode_for_variable.constprop.15+0xc0>
   1c618:	b	1c644 <dta_typecode_for_variable.constprop.15+0xc8>
   1c61c:	b	1c64c <dta_typecode_for_variable.constprop.15+0xd0>
   1c620:	b	1c654 <dta_typecode_for_variable.constprop.15+0xd8>
   1c624:	b	1c664 <dta_typecode_for_variable.constprop.15+0xe8>
   1c628:	ldr	r3, [pc, #184]	; 1c6e8 <dta_typecode_for_variable.constprop.15+0x16c>
   1c62c:	cmp	r2, #0
   1c630:	strhne	r3, [r2]
   1c634:	mov	r0, #0
   1c638:	bx	lr
   1c63c:	ldr	r3, [pc, #168]	; 1c6ec <dta_typecode_for_variable.constprop.15+0x170>
   1c640:	b	1c62c <dta_typecode_for_variable.constprop.15+0xb0>
   1c644:	ldr	r3, [pc, #164]	; 1c6f0 <dta_typecode_for_variable.constprop.15+0x174>
   1c648:	b	1c62c <dta_typecode_for_variable.constprop.15+0xb0>
   1c64c:	ldr	r3, [pc, #160]	; 1c6f4 <dta_typecode_for_variable.constprop.15+0x178>
   1c650:	b	1c62c <dta_typecode_for_variable.constprop.15+0xb0>
   1c654:	ldr	r3, [pc, #156]	; 1c6f8 <dta_typecode_for_variable.constprop.15+0x17c>
   1c658:	b	1c62c <dta_typecode_for_variable.constprop.15+0xb0>
   1c65c:	uxth	r3, r3
   1c660:	b	1c62c <dta_typecode_for_variable.constprop.15+0xb0>
   1c664:	mov	r3, #32768	; 0x8000
   1c668:	b	1c62c <dta_typecode_for_variable.constprop.15+0xb0>
   1c66c:	mov	r3, #0
   1c670:	b	1c62c <dta_typecode_for_variable.constprop.15+0xb0>
   1c674:	cmp	r0, #6
   1c678:	addls	pc, pc, r0, lsl #2
   1c67c:	b	1c6dc <dta_typecode_for_variable.constprop.15+0x160>
   1c680:	b	1c6c4 <dta_typecode_for_variable.constprop.15+0x148>
   1c684:	b	1c69c <dta_typecode_for_variable.constprop.15+0x120>
   1c688:	b	1c6a4 <dta_typecode_for_variable.constprop.15+0x128>
   1c68c:	b	1c6ac <dta_typecode_for_variable.constprop.15+0x130>
   1c690:	b	1c6b4 <dta_typecode_for_variable.constprop.15+0x138>
   1c694:	b	1c6bc <dta_typecode_for_variable.constprop.15+0x140>
   1c698:	b	1c6d0 <dta_typecode_for_variable.constprop.15+0x154>
   1c69c:	mov	r3, #98	; 0x62
   1c6a0:	b	1c5b8 <dta_typecode_for_variable.constprop.15+0x3c>
   1c6a4:	mov	r3, #105	; 0x69
   1c6a8:	b	1c5b8 <dta_typecode_for_variable.constprop.15+0x3c>
   1c6ac:	mov	r3, #108	; 0x6c
   1c6b0:	b	1c5b8 <dta_typecode_for_variable.constprop.15+0x3c>
   1c6b4:	mov	r3, #102	; 0x66
   1c6b8:	b	1c5b8 <dta_typecode_for_variable.constprop.15+0x3c>
   1c6bc:	mov	r3, #100	; 0x64
   1c6c0:	b	1c5b8 <dta_typecode_for_variable.constprop.15+0x3c>
   1c6c4:	add	r3, r3, #127	; 0x7f
   1c6c8:	uxth	r3, r3
   1c6cc:	b	1c5b8 <dta_typecode_for_variable.constprop.15+0x3c>
   1c6d0:	mov	r3, #0
   1c6d4:	mov	r0, #33	; 0x21
   1c6d8:	b	1c5bc <dta_typecode_for_variable.constprop.15+0x40>
   1c6dc:	mov	r3, #0
   1c6e0:	mov	r0, r3
   1c6e4:	b	1c5bc <dta_typecode_for_variable.constprop.15+0x40>
   1c6e8:	.word	0x0000fffa
   1c6ec:	.word	0x0000fff9
   1c6f0:	.word	0x0000fff8
   1c6f4:	.word	0x0000fff7
   1c6f8:	.word	0x0000fff6

0001c6fc <dta_113_write_missing_numeric>:
   1c6fc:	ldr	r3, [r1]
   1c700:	mov	r2, r0
   1c704:	cmp	r3, #1
   1c708:	moveq	r3, #101	; 0x65
   1c70c:	strbeq	r3, [r0]
   1c710:	beq	1c740 <dta_113_write_missing_numeric+0x44>
   1c714:	cmp	r3, #2
   1c718:	ldrheq	r3, [pc, #92]	; 1c77c <dta_113_write_missing_numeric+0x80>
   1c71c:	strheq	r3, [r0]
   1c720:	beq	1c740 <dta_113_write_missing_numeric+0x44>
   1c724:	cmp	r3, #3
   1c728:	mvneq	r3, #-2147483622	; 0x8000001a
   1c72c:	beq	1c73c <dta_113_write_missing_numeric+0x40>
   1c730:	cmp	r3, #4
   1c734:	bne	1c748 <dta_113_write_missing_numeric+0x4c>
   1c738:	mov	r3, #2130706432	; 0x7f000000
   1c73c:	str	r3, [r2]
   1c740:	mov	r0, #0
   1c744:	bx	lr
   1c748:	cmp	r3, #5
   1c74c:	bne	1c740 <dta_113_write_missing_numeric+0x44>
   1c750:	sub	sp, sp, #8
   1c754:	ldr	r1, [pc, #36]	; 1c780 <dta_113_write_missing_numeric+0x84>
   1c758:	add	r3, sp, #8
   1c75c:	mov	r0, #0
   1c760:	strd	r0, [r3, #-8]!
   1c764:	ldm	r3!, {r0, r1}
   1c768:	str	r0, [r2]
   1c76c:	str	r1, [r2, #4]
   1c770:	mov	r0, #0
   1c774:	add	sp, sp, #8
   1c778:	bx	lr
   1c77c:	.word	0x00007fe5
   1c780:	.word	0x7fe00000

0001c784 <dta_write_double>:
   1c784:	vldr	d7, [pc, #92]	; 1c7e8 <dta_write_double+0x64>
   1c788:	push	{r0, r1, r2, r3, r4, r5}
   1c78c:	mvn	r4, #0
   1c790:	ldr	r5, [pc, #88]	; 1c7f0 <dta_write_double+0x6c>
   1c794:	vcmpe.f64	d0, d7
   1c798:	strd	r4, [sp]
   1c79c:	vmrs	APSR_nzcv, fpscr
   1c7a0:	movgt	r0, #20
   1c7a4:	bgt	1c7dc <dta_write_double+0x58>
   1c7a8:	vcmp.f64	d0, d0
   1c7ac:	vmrs	APSR_nzcv, fpscr
   1c7b0:	bvc	1c7c0 <dta_write_double+0x3c>
   1c7b4:	add	sp, sp, #16
   1c7b8:	pop	{r4, r5}
   1c7bc:	b	1c6fc <dta_113_write_missing_numeric>
   1c7c0:	add	r3, sp, #16
   1c7c4:	mov	r2, r0
   1c7c8:	vstmdb	r3!, {d0}
   1c7cc:	ldm	r3!, {r0, r1}
   1c7d0:	str	r0, [r2]
   1c7d4:	mov	r0, #0
   1c7d8:	str	r1, [r2, #4]
   1c7dc:	add	sp, sp, #16
   1c7e0:	pop	{r4, r5}
   1c7e4:	bx	lr
   1c7e8:	.word	0xffffffff
   1c7ec:	.word	0x7fdfffff
   1c7f0:	.word	0x7fdfffff

0001c7f4 <dta_write_float>:
   1c7f4:	vldr	s15, [pc, #64]	; 1c83c <dta_write_float+0x48>
   1c7f8:	sub	sp, sp, #8
   1c7fc:	mvn	r2, #-2130706432	; 0x81000000
   1c800:	str	r2, [sp, #4]
   1c804:	vcmpe.f32	s0, s15
   1c808:	vmrs	APSR_nzcv, fpscr
   1c80c:	movgt	r0, #20
   1c810:	bgt	1c834 <dta_write_float+0x40>
   1c814:	vcmp.f32	s0, s0
   1c818:	vmrs	APSR_nzcv, fpscr
   1c81c:	bvc	1c828 <dta_write_float+0x34>
   1c820:	add	sp, sp, #8
   1c824:	b	1c6fc <dta_113_write_missing_numeric>
   1c828:	vmov	r2, s0
   1c82c:	str	r2, [r0]
   1c830:	mov	r0, #0
   1c834:	add	sp, sp, #8
   1c838:	bx	lr
   1c83c:	.word	0x7effffff

0001c840 <dta_begin_data>:
   1c840:	ldr	r3, [r0, #308]	; 0x134
   1c844:	cmp	r3, #0
   1c848:	moveq	r1, #14
   1c84c:	beq	1d748 <dta_begin_data+0xf08>
   1c850:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c854:	mov	r5, r0
   1c858:	add	fp, sp, #32
   1c85c:	mov	r0, #0
   1c860:	sub	sp, sp, #188	; 0xbc
   1c864:	bl	45ac <dta_ctx_alloc@plt>
   1c868:	ldr	r6, [r5, #80]	; 0x50
   1c86c:	ldr	r8, [r5, #28]
   1c870:	asr	r7, r6, #31
   1c874:	mov	r4, r0
   1c878:	bl	3ef8 <machine_is_little_endian@plt>
   1c87c:	mov	r3, #0
   1c880:	str	r3, [sp, #12]
   1c884:	str	r3, [sp, #8]
   1c888:	ldrb	r3, [r5, #8]
   1c88c:	mov	r1, r8
   1c890:	mov	r2, r6
   1c894:	cmp	r0, #0
   1c898:	movne	r0, #2
   1c89c:	moveq	r0, #1
   1c8a0:	stm	sp, {r0, r3}
   1c8a4:	mov	r3, r7
   1c8a8:	mov	r0, r4
   1c8ac:	bl	421c <dta_ctx_init@plt>
   1c8b0:	subs	r1, r0, #0
   1c8b4:	bne	1d164 <dta_begin_data+0x924>
   1c8b8:	ldrb	r6, [r4, #192]	; 0xc0
   1c8bc:	ands	r6, r6, #4
   1c8c0:	beq	1d178 <dta_begin_data+0x938>
   1c8c4:	ldr	r2, [pc, #3716]	; 1d750 <dta_begin_data+0xf10>
   1c8c8:	mov	r1, r4
   1c8cc:	add	r2, pc, r2
   1c8d0:	mov	r0, r5
   1c8d4:	bl	1b50c <dta_write_tag>
   1c8d8:	subs	r1, r0, #0
   1c8dc:	bne	1d164 <dta_begin_data+0x924>
   1c8e0:	ldr	r2, [pc, #3692]	; 1d754 <dta_begin_data+0xf14>
   1c8e4:	mov	r1, r4
   1c8e8:	add	r2, pc, r2
   1c8ec:	mov	r0, r5
   1c8f0:	bl	1b50c <dta_write_tag>
   1c8f4:	subs	r1, r0, #0
   1c8f8:	bne	1d164 <dta_begin_data+0x924>
   1c8fc:	ldr	r2, [pc, #3668]	; 1d758 <dta_begin_data+0xf18>
   1c900:	sub	r6, fp, #164	; 0xa4
   1c904:	ldr	r3, [r5, #8]
   1c908:	add	r2, pc, r2
   1c90c:	mov	r1, #128	; 0x80
   1c910:	mov	r0, r6
   1c914:	bl	42c4 <snprintf@plt>
   1c918:	mov	r1, r6
   1c91c:	mov	r0, r5
   1c920:	bl	41a4 <readstat_write_string@plt>
   1c924:	subs	r1, r0, #0
   1c928:	bne	1d164 <dta_begin_data+0x924>
   1c92c:	bl	3ef8 <machine_is_little_endian@plt>
   1c930:	cmp	r0, #0
   1c934:	bne	1d0f4 <dta_begin_data+0x8b4>
   1c938:	ldr	r3, [pc, #3612]	; 1d75c <dta_begin_data+0xf1c>
   1c93c:	add	r3, pc, r3
   1c940:	ldr	r2, [pc, #3608]	; 1d760 <dta_begin_data+0xf20>
   1c944:	mov	r1, r4
   1c948:	add	r2, pc, r2
   1c94c:	str	r2, [sp, #4]
   1c950:	mov	r2, #3
   1c954:	str	r2, [sp]
   1c958:	ldr	r2, [pc, #3588]	; 1d764 <dta_begin_data+0xf24>
   1c95c:	mov	r0, r5
   1c960:	add	r2, pc, r2
   1c964:	bl	1beb8 <dta_write_chunk>
   1c968:	subs	r1, r0, #0
   1c96c:	bne	1d164 <dta_begin_data+0x924>
   1c970:	ldr	r3, [r5, #8]
   1c974:	sub	r6, fp, #172	; 0xac
   1c978:	cmp	r3, #118	; 0x76
   1c97c:	ldr	r3, [r5, #28]
   1c980:	ble	1d100 <dta_begin_data+0x8c0>
   1c984:	str	r3, [fp, #-172]	; 0xffffff54
   1c988:	ldr	r3, [pc, #3544]	; 1d768 <dta_begin_data+0xf28>
   1c98c:	ldr	r2, [pc, #3544]	; 1d76c <dta_begin_data+0xf2c>
   1c990:	add	r3, pc, r3
   1c994:	str	r3, [sp, #4]
   1c998:	mov	r3, #4
   1c99c:	str	r3, [sp]
   1c9a0:	add	r2, pc, r2
   1c9a4:	mov	r3, r6
   1c9a8:	mov	r1, r4
   1c9ac:	mov	r0, r5
   1c9b0:	bl	1beb8 <dta_write_chunk>
   1c9b4:	subs	r1, r0, #0
   1c9b8:	bne	1d164 <dta_begin_data+0x924>
   1c9bc:	ldr	r3, [r5, #8]
   1c9c0:	ldr	r2, [r5, #80]	; 0x50
   1c9c4:	cmp	r3, #117	; 0x75
   1c9c8:	ble	1d128 <dta_begin_data+0x8e8>
   1c9cc:	asr	r3, r2, #31
   1c9d0:	strd	r2, [fp, #-172]	; 0xffffff54
   1c9d4:	ldr	r3, [pc, #3476]	; 1d770 <dta_begin_data+0xf30>
   1c9d8:	ldr	r2, [pc, #3476]	; 1d774 <dta_begin_data+0xf34>
   1c9dc:	add	r3, pc, r3
   1c9e0:	str	r3, [sp, #4]
   1c9e4:	mov	r3, #8
   1c9e8:	str	r3, [sp]
   1c9ec:	add	r2, pc, r2
   1c9f0:	mov	r3, r6
   1c9f4:	mov	r1, r4
   1c9f8:	mov	r0, r5
   1c9fc:	bl	1beb8 <dta_write_chunk>
   1ca00:	subs	r1, r0, #0
   1ca04:	bne	1d164 <dta_begin_data+0x924>
   1ca08:	mov	r1, r4
   1ca0c:	mov	r0, r5
   1ca10:	bl	1bc0c <dta_emit_header_data_label>
   1ca14:	subs	r1, r0, #0
   1ca18:	bne	1d164 <dta_begin_data+0x924>
   1ca1c:	ldr	r3, [r4, #16]
   1ca20:	cmp	r3, #0
   1ca24:	bne	1d150 <dta_begin_data+0x910>
   1ca28:	ldr	r2, [pc, #3400]	; 1d778 <dta_begin_data+0xf38>
   1ca2c:	mov	r1, r4
   1ca30:	add	r2, pc, r2
   1ca34:	mov	r0, r5
   1ca38:	bl	1b50c <dta_write_tag>
   1ca3c:	subs	r1, r0, #0
   1ca40:	bne	1d164 <dta_begin_data+0x924>
   1ca44:	ldrb	r3, [r4, #192]	; 0xc0
   1ca48:	tst	r3, #4
   1ca4c:	beq	1cdf8 <dta_begin_data+0x5b8>
   1ca50:	ldr	r6, [r5, #4]
   1ca54:	ldr	r1, [pc, #3360]	; 1d77c <dta_begin_data+0xf3c>
   1ca58:	mov	r2, #0
   1ca5c:	mov	r3, #0
   1ca60:	mov	r8, r6
   1ca64:	mov	r9, #0
   1ca68:	add	r1, pc, r1
   1ca6c:	mov	r0, r4
   1ca70:	strd	r2, [fp, #-164]	; 0xffffff5c
   1ca74:	strd	r8, [fp, #-156]	; 0xffffff64
   1ca78:	bl	1bd14 <dta_measure_tag>
   1ca7c:	ldr	r1, [pc, #3324]	; 1d780 <dta_begin_data+0xf40>
   1ca80:	ldr	sl, [pc, #3324]	; 1d784 <dta_begin_data+0xf44>
   1ca84:	add	r1, pc, r1
   1ca88:	add	sl, pc, sl
   1ca8c:	mov	r7, r0
   1ca90:	mov	r0, r4
   1ca94:	bl	1bd14 <dta_measure_tag>
   1ca98:	ldr	r1, [pc, #3304]	; 1d788 <dta_begin_data+0xf48>
   1ca9c:	add	r1, pc, r1
   1caa0:	add	r0, r7, r0
   1caa4:	add	r0, r0, #112	; 0x70
   1caa8:	adds	r2, r6, r0
   1caac:	adc	r3, r9, #0
   1cab0:	mov	r0, r4
   1cab4:	mov	r6, r2
   1cab8:	mov	r7, r3
   1cabc:	strd	r2, [fp, #-148]	; 0xffffff6c
   1cac0:	bl	1bd14 <dta_measure_tag>
   1cac4:	ldr	r9, [r4, #24]
   1cac8:	ldr	r1, [pc, #3260]	; 1d78c <dta_begin_data+0xf4c>
   1cacc:	add	r1, pc, r1
   1cad0:	mov	r8, r0
   1cad4:	ldr	r0, [r4, #148]	; 0x94
   1cad8:	mul	r9, r0, r9
   1cadc:	mov	r0, r4
   1cae0:	bl	1bd14 <dta_measure_tag>
   1cae4:	ldr	r1, [pc, #3236]	; 1d790 <dta_begin_data+0xf50>
   1cae8:	add	r1, pc, r1
   1caec:	add	r0, r8, r0
   1caf0:	add	r0, r0, r9
   1caf4:	adds	r6, r6, r0
   1caf8:	adc	r7, r7, #0
   1cafc:	mov	r0, r4
   1cb00:	strd	r6, [fp, #-140]	; 0xffffff74
   1cb04:	bl	1bd14 <dta_measure_tag>
   1cb08:	ldr	r1, [pc, #3204]	; 1d794 <dta_begin_data+0xf54>
   1cb0c:	add	r1, pc, r1
   1cb10:	mov	r8, r0
   1cb14:	mov	r0, r4
   1cb18:	bl	1bd14 <dta_measure_tag>
   1cb1c:	ldr	r1, [pc, #3188]	; 1d798 <dta_begin_data+0xf58>
   1cb20:	add	r1, pc, r1
   1cb24:	add	r0, r8, r0
   1cb28:	ldr	r8, [r4, #40]	; 0x28
   1cb2c:	add	r0, r0, r8
   1cb30:	adds	r2, r6, r0
   1cb34:	adc	r3, r7, #0
   1cb38:	mov	r0, r4
   1cb3c:	mov	r6, r2
   1cb40:	mov	r7, r3
   1cb44:	strd	r2, [fp, #-132]	; 0xffffff7c
   1cb48:	bl	1bd14 <dta_measure_tag>
   1cb4c:	ldr	r1, [pc, #3144]	; 1d79c <dta_begin_data+0xf5c>
   1cb50:	add	r1, pc, r1
   1cb54:	mov	r8, r0
   1cb58:	mov	r0, r4
   1cb5c:	bl	1bd14 <dta_measure_tag>
   1cb60:	ldr	r1, [pc, #3128]	; 1d7a0 <dta_begin_data+0xf60>
   1cb64:	add	r1, pc, r1
   1cb68:	add	r0, r8, r0
   1cb6c:	ldr	r8, [r4, #48]	; 0x30
   1cb70:	add	r0, r0, r8
   1cb74:	adds	r6, r6, r0
   1cb78:	adc	r7, r7, #0
   1cb7c:	mov	r0, r4
   1cb80:	strd	r6, [fp, #-124]	; 0xffffff84
   1cb84:	bl	1bd14 <dta_measure_tag>
   1cb88:	ldr	r1, [pc, #3092]	; 1d7a4 <dta_begin_data+0xf64>
   1cb8c:	add	r1, pc, r1
   1cb90:	mov	r8, r0
   1cb94:	mov	r0, r4
   1cb98:	bl	1bd14 <dta_measure_tag>
   1cb9c:	ldr	r1, [pc, #3076]	; 1d7a8 <dta_begin_data+0xf68>
   1cba0:	add	r1, pc, r1
   1cba4:	add	r0, r8, r0
   1cba8:	ldr	r8, [r4, #56]	; 0x38
   1cbac:	add	r0, r0, r8
   1cbb0:	adds	r2, r6, r0
   1cbb4:	adc	r3, r7, #0
   1cbb8:	mov	r0, r4
   1cbbc:	mov	r6, r2
   1cbc0:	mov	r7, r3
   1cbc4:	strd	r2, [fp, #-116]	; 0xffffff8c
   1cbc8:	bl	1bd14 <dta_measure_tag>
   1cbcc:	ldr	r1, [pc, #3032]	; 1d7ac <dta_begin_data+0xf6c>
   1cbd0:	add	r1, pc, r1
   1cbd4:	mov	r8, r0
   1cbd8:	mov	r0, r4
   1cbdc:	bl	1bd14 <dta_measure_tag>
   1cbe0:	ldr	r1, [pc, #3016]	; 1d7b0 <dta_begin_data+0xf70>
   1cbe4:	add	r1, pc, r1
   1cbe8:	add	r0, r8, r0
   1cbec:	ldr	r8, [r4, #64]	; 0x40
   1cbf0:	add	r0, r0, r8
   1cbf4:	adds	r6, r6, r0
   1cbf8:	adc	r7, r7, #0
   1cbfc:	mov	r0, r4
   1cc00:	strd	r6, [fp, #-108]	; 0xffffff94
   1cc04:	bl	1bd14 <dta_measure_tag>
   1cc08:	ldr	r1, [pc, #2980]	; 1d7b4 <dta_begin_data+0xf74>
   1cc0c:	add	r1, pc, r1
   1cc10:	mov	r8, r0
   1cc14:	mov	r0, r4
   1cc18:	bl	1bd14 <dta_measure_tag>
   1cc1c:	ldr	r9, [r5, #52]	; 0x34
   1cc20:	add	r0, r8, r0
   1cc24:	ldr	r8, [r4, #72]	; 0x48
   1cc28:	add	r0, r0, r8
   1cc2c:	adds	r2, r6, r0
   1cc30:	adc	r3, r7, #0
   1cc34:	mov	r7, #0
   1cc38:	strd	r2, [fp, #-188]	; 0xffffff44
   1cc3c:	strd	r2, [fp, #-100]	; 0xffffff9c
   1cc40:	ldr	r3, [pc, #2928]	; 1d7b8 <dta_begin_data+0xf78>
   1cc44:	mov	r6, r7
   1cc48:	add	r3, pc, r3
   1cc4c:	cmp	r7, r9
   1cc50:	blt	1d214 <dta_begin_data+0x9d4>
   1cc54:	ldr	r1, [pc, #2912]	; 1d7bc <dta_begin_data+0xf7c>
   1cc58:	mov	r0, r4
   1cc5c:	add	r1, pc, r1
   1cc60:	bl	1bd14 <dta_measure_tag>
   1cc64:	ldr	r1, [pc, #2900]	; 1d7c0 <dta_begin_data+0xf80>
   1cc68:	mov	r8, #0
   1cc6c:	add	r1, pc, r1
   1cc70:	mov	r9, r8
   1cc74:	sub	sl, fp, #172	; 0xac
   1cc78:	mov	r7, r0
   1cc7c:	mov	r0, r4
   1cc80:	bl	1bd14 <dta_measure_tag>
   1cc84:	add	r6, r6, r7
   1cc88:	sub	r3, fp, #174	; 0xae
   1cc8c:	add	r0, r6, r0
   1cc90:	ldrd	r6, [fp, #-188]	; 0xffffff44
   1cc94:	str	r3, [fp, #-188]	; 0xffffff44
   1cc98:	adds	r6, r6, r0
   1cc9c:	adc	r7, r7, #0
   1cca0:	strd	r6, [fp, #-92]	; 0xffffffa4
   1cca4:	ldr	r3, [r4, #148]	; 0x94
   1cca8:	cmp	r8, r3
   1ccac:	blt	1d274 <dta_begin_data+0xa34>
   1ccb0:	ldr	r1, [pc, #2828]	; 1d7c4 <dta_begin_data+0xf84>
   1ccb4:	mov	r0, r4
   1ccb8:	add	r1, pc, r1
   1ccbc:	bl	1bd14 <dta_measure_tag>
   1ccc0:	ldr	r9, [r4, #152]	; 0x98
   1ccc4:	ldr	r1, [pc, #2812]	; 1d7c8 <dta_begin_data+0xf88>
   1ccc8:	add	r1, pc, r1
   1cccc:	mov	r8, r0
   1ccd0:	ldr	r0, [r4, #160]	; 0xa0
   1ccd4:	mul	r9, r0, r9
   1ccd8:	mov	r0, r4
   1ccdc:	bl	1bd14 <dta_measure_tag>
   1cce0:	ldr	r1, [r5, #64]	; 0x40
   1cce4:	add	r0, r8, r0
   1cce8:	add	r0, r0, r9
   1ccec:	adds	r8, r6, r0
   1ccf0:	adc	r9, r7, #0
   1ccf4:	mov	r7, #0
   1ccf8:	mov	r3, r7
   1ccfc:	strd	r8, [fp, #-84]	; 0xffffffac
   1cd00:	cmp	r3, r1
   1cd04:	blt	1d2c4 <dta_begin_data+0xa84>
   1cd08:	ldr	r1, [pc, #2748]	; 1d7cc <dta_begin_data+0xf8c>
   1cd0c:	mov	r0, r4
   1cd10:	add	r1, pc, r1
   1cd14:	bl	1bd14 <dta_measure_tag>
   1cd18:	ldr	r1, [pc, #2736]	; 1d7d0 <dta_begin_data+0xf90>
   1cd1c:	ldr	sl, [pc, #2736]	; 1d7d4 <dta_begin_data+0xf94>
   1cd20:	add	r1, pc, r1
   1cd24:	add	sl, pc, sl
   1cd28:	mov	r6, r0
   1cd2c:	mov	r0, r4
   1cd30:	bl	1bd14 <dta_measure_tag>
   1cd34:	add	r7, r7, r6
   1cd38:	ldr	r1, [pc, #2712]	; 1d7d8 <dta_begin_data+0xf98>
   1cd3c:	add	r1, pc, r1
   1cd40:	add	r7, r7, r0
   1cd44:	adds	r2, r8, r7
   1cd48:	adc	r3, r9, #0
   1cd4c:	mov	r0, r4
   1cd50:	strd	r2, [fp, #-188]	; 0xffffff44
   1cd54:	strd	r2, [fp, #-76]	; 0xffffffb4
   1cd58:	bl	1bd14 <dta_measure_tag>
   1cd5c:	ldr	r3, [pc, #2680]	; 1d7dc <dta_begin_data+0xf9c>
   1cd60:	mov	r8, #0
   1cd64:	add	r3, pc, r3
   1cd68:	str	r3, [fp, #-192]	; 0xffffff40
   1cd6c:	mov	r7, r0
   1cd70:	ldr	r3, [r5, #40]	; 0x28
   1cd74:	cmp	r8, r3
   1cd78:	blt	1d2ec <dta_begin_data+0xaac>
   1cd7c:	ldr	r1, [pc, #2652]	; 1d7e0 <dta_begin_data+0xfa0>
   1cd80:	mov	r0, r4
   1cd84:	add	r1, pc, r1
   1cd88:	bl	1bd14 <dta_measure_tag>
   1cd8c:	ldr	r1, [pc, #2640]	; 1d7e4 <dta_begin_data+0xfa4>
   1cd90:	add	r1, pc, r1
   1cd94:	add	r0, r7, r0
   1cd98:	ldrd	r6, [fp, #-188]	; 0xffffff44
   1cd9c:	adds	r6, r6, r0
   1cda0:	adc	r7, r7, #0
   1cda4:	mov	r0, r4
   1cda8:	strd	r6, [fp, #-68]	; 0xffffffbc
   1cdac:	bl	1bd14 <dta_measure_tag>
   1cdb0:	adds	r2, r6, r0
   1cdb4:	adc	r3, r7, #0
   1cdb8:	mov	r1, r3
   1cdbc:	ldr	r3, [pc, #2596]	; 1d7e8 <dta_begin_data+0xfa8>
   1cdc0:	mov	r0, r2
   1cdc4:	add	r3, pc, r3
   1cdc8:	ldr	r2, [pc, #2588]	; 1d7ec <dta_begin_data+0xfac>
   1cdcc:	strd	r0, [fp, #-60]	; 0xffffffc4
   1cdd0:	str	r3, [sp, #4]
   1cdd4:	mov	r3, #112	; 0x70
   1cdd8:	str	r3, [sp]
   1cddc:	mov	r1, r4
   1cde0:	sub	r3, fp, #164	; 0xa4
   1cde4:	add	r2, pc, r2
   1cde8:	mov	r0, r5
   1cdec:	bl	1beb8 <dta_write_chunk>
   1cdf0:	subs	r1, r0, #0
   1cdf4:	bne	1d164 <dta_begin_data+0x924>
   1cdf8:	ldr	r2, [pc, #2544]	; 1d7f0 <dta_begin_data+0xfb0>
   1cdfc:	mov	r1, r4
   1ce00:	add	r2, pc, r2
   1ce04:	mov	r0, r5
   1ce08:	bl	1b50c <dta_write_tag>
   1ce0c:	subs	r1, r0, #0
   1ce10:	bne	1d164 <dta_begin_data+0x924>
   1ce14:	mov	r6, r1
   1ce18:	mov	r7, r1
   1ce1c:	sub	r8, fp, #164	; 0xa4
   1ce20:	ldr	r3, [r4, #148]	; 0x94
   1ce24:	cmp	r6, r3
   1ce28:	blt	1d388 <dta_begin_data+0xb48>
   1ce2c:	mov	r6, #0
   1ce30:	sub	r7, fp, #164	; 0xa4
   1ce34:	mov	r8, #2
   1ce38:	mov	r9, #1
   1ce3c:	ldr	r3, [r4, #148]	; 0x94
   1ce40:	cmp	r6, r3
   1ce44:	blt	1d3c4 <dta_begin_data+0xb84>
   1ce48:	ldr	r2, [pc, #2468]	; 1d7f4 <dta_begin_data+0xfb4>
   1ce4c:	mov	r1, r4
   1ce50:	add	r2, pc, r2
   1ce54:	mov	r0, r5
   1ce58:	bl	1b50c <dta_write_tag>
   1ce5c:	subs	r1, r0, #0
   1ce60:	bne	1d164 <dta_begin_data+0x924>
   1ce64:	ldr	r2, [pc, #2444]	; 1d7f8 <dta_begin_data+0xfb8>
   1ce68:	mov	r1, r4
   1ce6c:	add	r2, pc, r2
   1ce70:	mov	r0, r5
   1ce74:	bl	1b50c <dta_write_tag>
   1ce78:	subs	r1, r0, #0
   1ce7c:	moveq	r6, r1
   1ce80:	bne	1d164 <dta_begin_data+0x924>
   1ce84:	ldr	r3, [r4, #148]	; 0x94
   1ce88:	cmp	r6, r3
   1ce8c:	blt	1d428 <dta_begin_data+0xbe8>
   1ce90:	ldr	r1, [r4, #36]	; 0x24
   1ce94:	ldr	r2, [r4, #40]	; 0x28
   1ce98:	mov	r0, r5
   1ce9c:	bl	44a4 <readstat_write_bytes@plt>
   1cea0:	subs	r1, r0, #0
   1cea4:	bne	1d164 <dta_begin_data+0x924>
   1cea8:	ldr	r2, [pc, #2380]	; 1d7fc <dta_begin_data+0xfbc>
   1ceac:	mov	r1, r4
   1ceb0:	add	r2, pc, r2
   1ceb4:	mov	r0, r5
   1ceb8:	bl	1b50c <dta_write_tag>
   1cebc:	subs	r1, r0, #0
   1cec0:	bne	1d164 <dta_begin_data+0x924>
   1cec4:	ldr	r2, [pc, #2356]	; 1d800 <dta_begin_data+0xfc0>
   1cec8:	mov	r1, r4
   1cecc:	add	r2, pc, r2
   1ced0:	mov	r0, r5
   1ced4:	bl	1b50c <dta_write_tag>
   1ced8:	subs	r1, r0, #0
   1cedc:	bne	1d164 <dta_begin_data+0x924>
   1cee0:	ldr	r2, [r4, #48]	; 0x30
   1cee4:	ldr	r0, [r4, #44]	; 0x2c
   1cee8:	bl	42e8 <memset@plt>
   1ceec:	ldr	r1, [r4, #44]	; 0x2c
   1cef0:	ldr	r2, [r4, #48]	; 0x30
   1cef4:	mov	r0, r5
   1cef8:	bl	44a4 <readstat_write_bytes@plt>
   1cefc:	subs	r1, r0, #0
   1cf00:	bne	1d164 <dta_begin_data+0x924>
   1cf04:	ldr	r2, [pc, #2296]	; 1d804 <dta_begin_data+0xfc4>
   1cf08:	mov	r1, r4
   1cf0c:	add	r2, pc, r2
   1cf10:	mov	r0, r5
   1cf14:	bl	1b50c <dta_write_tag>
   1cf18:	subs	r1, r0, #0
   1cf1c:	bne	1d164 <dta_begin_data+0x924>
   1cf20:	ldr	r2, [pc, #2272]	; 1d808 <dta_begin_data+0xfc8>
   1cf24:	mov	r1, r4
   1cf28:	add	r2, pc, r2
   1cf2c:	mov	r0, r5
   1cf30:	bl	1b50c <dta_write_tag>
   1cf34:	subs	r1, r0, #0
   1cf38:	bne	1d164 <dta_begin_data+0x924>
   1cf3c:	ldr	r8, [pc, #2248]	; 1d80c <dta_begin_data+0xfcc>
   1cf40:	ldr	r9, [pc, #2248]	; 1d810 <dta_begin_data+0xfd0>
   1cf44:	ldr	sl, [pc, #2248]	; 1d814 <dta_begin_data+0xfd4>
   1cf48:	mov	r6, r1
   1cf4c:	add	r8, pc, r8
   1cf50:	add	r9, pc, r9
   1cf54:	add	sl, pc, sl
   1cf58:	ldr	r3, [r4, #148]	; 0x94
   1cf5c:	cmp	r6, r3
   1cf60:	blt	1d450 <dta_begin_data+0xc10>
   1cf64:	ldr	r1, [r4, #52]	; 0x34
   1cf68:	ldr	r2, [r4, #56]	; 0x38
   1cf6c:	mov	r0, r5
   1cf70:	bl	44a4 <readstat_write_bytes@plt>
   1cf74:	subs	r1, r0, #0
   1cf78:	bne	1d164 <dta_begin_data+0x924>
   1cf7c:	ldr	r2, [pc, #2196]	; 1d818 <dta_begin_data+0xfd8>
   1cf80:	mov	r1, r4
   1cf84:	add	r2, pc, r2
   1cf88:	mov	r0, r5
   1cf8c:	bl	1b50c <dta_write_tag>
   1cf90:	subs	r1, r0, #0
   1cf94:	bne	1d164 <dta_begin_data+0x924>
   1cf98:	ldr	r2, [pc, #2172]	; 1d81c <dta_begin_data+0xfdc>
   1cf9c:	mov	r1, r4
   1cfa0:	add	r2, pc, r2
   1cfa4:	mov	r0, r5
   1cfa8:	bl	1b50c <dta_write_tag>
   1cfac:	subs	r1, r0, #0
   1cfb0:	moveq	r6, r1
   1cfb4:	moveq	r7, r6
   1cfb8:	bne	1d164 <dta_begin_data+0x924>
   1cfbc:	ldr	r3, [r4, #148]	; 0x94
   1cfc0:	cmp	r6, r3
   1cfc4:	blt	1d52c <dta_begin_data+0xcec>
   1cfc8:	ldr	r1, [r4, #60]	; 0x3c
   1cfcc:	ldr	r2, [r4, #64]	; 0x40
   1cfd0:	mov	r0, r5
   1cfd4:	bl	44a4 <readstat_write_bytes@plt>
   1cfd8:	subs	r1, r0, #0
   1cfdc:	bne	1d164 <dta_begin_data+0x924>
   1cfe0:	ldr	r2, [pc, #2104]	; 1d820 <dta_begin_data+0xfe0>
   1cfe4:	mov	r1, r4
   1cfe8:	add	r2, pc, r2
   1cfec:	mov	r0, r5
   1cff0:	bl	1b50c <dta_write_tag>
   1cff4:	subs	r1, r0, #0
   1cff8:	bne	1d164 <dta_begin_data+0x924>
   1cffc:	ldr	r2, [pc, #2080]	; 1d824 <dta_begin_data+0xfe4>
   1d000:	mov	r1, r4
   1d004:	add	r2, pc, r2
   1d008:	mov	r0, r5
   1d00c:	bl	1b50c <dta_write_tag>
   1d010:	subs	r1, r0, #0
   1d014:	moveq	r6, r1
   1d018:	bne	1d164 <dta_begin_data+0x924>
   1d01c:	ldr	r3, [r4, #148]	; 0x94
   1d020:	cmp	r6, r3
   1d024:	blt	1d570 <dta_begin_data+0xd30>
   1d028:	ldr	r1, [r4, #68]	; 0x44
   1d02c:	ldr	r2, [r4, #72]	; 0x48
   1d030:	mov	r0, r5
   1d034:	bl	44a4 <readstat_write_bytes@plt>
   1d038:	subs	r1, r0, #0
   1d03c:	bne	1d164 <dta_begin_data+0x924>
   1d040:	ldr	r2, [pc, #2016]	; 1d828 <dta_begin_data+0xfe8>
   1d044:	mov	r1, r4
   1d048:	add	r2, pc, r2
   1d04c:	mov	r0, r5
   1d050:	bl	1b50c <dta_write_tag>
   1d054:	subs	r1, r0, #0
   1d058:	bne	1d164 <dta_begin_data+0x924>
   1d05c:	ldr	r3, [r4, #96]	; 0x60
   1d060:	str	sp, [fp, #-188]	; 0xffffff44
   1d064:	add	r3, r3, #7
   1d068:	bic	r3, r3, #7
   1d06c:	sub	sp, sp, r3
   1d070:	ldr	r3, [r4, #92]	; 0x5c
   1d074:	add	r7, sp, #16
   1d078:	cmp	r3, #0
   1d07c:	beq	1d65c <dta_begin_data+0xe1c>
   1d080:	ldr	r2, [pc, #1956]	; 1d82c <dta_begin_data+0xfec>
   1d084:	mov	r1, r4
   1d088:	add	r2, pc, r2
   1d08c:	mov	r0, r5
   1d090:	bl	1b50c <dta_write_tag>
   1d094:	subs	r1, r0, #0
   1d098:	bne	1d65c <dta_begin_data+0xe1c>
   1d09c:	ldr	r3, [pc, #1932]	; 1d830 <dta_begin_data+0xff0>
   1d0a0:	ldr	r9, [pc, #1932]	; 1d834 <dta_begin_data+0xff4>
   1d0a4:	add	r3, pc, r3
   1d0a8:	str	r3, [fp, #-192]	; 0xffffff40
   1d0ac:	ldr	r3, [pc, #1924]	; 1d838 <dta_begin_data+0xff8>
   1d0b0:	mov	r6, r1
   1d0b4:	add	r9, pc, r9
   1d0b8:	add	r3, pc, r3
   1d0bc:	str	r3, [fp, #-196]	; 0xffffff3c
   1d0c0:	ldr	r3, [r5, #52]	; 0x34
   1d0c4:	cmp	r6, r3
   1d0c8:	ldrb	r3, [r4, #192]	; 0xc0
   1d0cc:	blt	1d598 <dta_begin_data+0xd58>
   1d0d0:	tst	r3, #4
   1d0d4:	beq	1d714 <dta_begin_data+0xed4>
   1d0d8:	ldr	r2, [pc, #1884]	; 1d83c <dta_begin_data+0xffc>
   1d0dc:	mov	r1, r4
   1d0e0:	add	r2, pc, r2
   1d0e4:	mov	r0, r5
   1d0e8:	bl	1b50c <dta_write_tag>
   1d0ec:	mov	r1, r0
   1d0f0:	b	1d65c <dta_begin_data+0xe1c>
   1d0f4:	ldr	r3, [pc, #1860]	; 1d840 <dta_begin_data+0x1000>
   1d0f8:	add	r3, pc, r3
   1d0fc:	b	1c940 <dta_begin_data+0x100>
   1d100:	strh	r3, [fp, #-172]	; 0xffffff54
   1d104:	ldr	r3, [pc, #1848]	; 1d844 <dta_begin_data+0x1004>
   1d108:	ldr	r2, [pc, #1848]	; 1d848 <dta_begin_data+0x1008>
   1d10c:	add	r3, pc, r3
   1d110:	str	r3, [sp, #4]
   1d114:	mov	r3, #2
   1d118:	str	r3, [sp]
   1d11c:	add	r2, pc, r2
   1d120:	mov	r3, r6
   1d124:	b	1c9a8 <dta_begin_data+0x168>
   1d128:	ldr	r3, [pc, #1820]	; 1d84c <dta_begin_data+0x100c>
   1d12c:	str	r2, [fp, #-172]	; 0xffffff54
   1d130:	add	r3, pc, r3
   1d134:	ldr	r2, [pc, #1812]	; 1d850 <dta_begin_data+0x1010>
   1d138:	str	r3, [sp, #4]
   1d13c:	mov	r3, #4
   1d140:	str	r3, [sp]
   1d144:	add	r2, pc, r2
   1d148:	mov	r3, r6
   1d14c:	b	1c9f4 <dta_begin_data+0x1b4>
   1d150:	mov	r1, r4
   1d154:	mov	r0, r5
   1d158:	bl	1c0c4 <dta_emit_header_time_stamp.part.12>
   1d15c:	subs	r1, r0, #0
   1d160:	beq	1ca28 <dta_begin_data+0x1e8>
   1d164:	mov	r0, r4
   1d168:	str	r1, [fp, #-188]	; 0xffffff44
   1d16c:	bl	3ebc <dta_ctx_free@plt>
   1d170:	ldr	r1, [fp, #-188]	; 0xffffff44
   1d174:	b	1d688 <dta_begin_data+0xe48>
   1d178:	ldr	r3, [r5, #8]
   1d17c:	str	r6, [fp, #-164]	; 0xffffff5c
   1d180:	str	r6, [fp, #-160]	; 0xffffff60
   1d184:	strb	r3, [fp, #-164]	; 0xffffff5c
   1d188:	strh	r6, [fp, #-156]	; 0xffffff64
   1d18c:	bl	3ef8 <machine_is_little_endian@plt>
   1d190:	ldrh	r2, [r5, #80]	; 0x50
   1d194:	mov	r3, #1
   1d198:	strb	r3, [fp, #-162]	; 0xffffff5e
   1d19c:	strh	r2, [fp, #-158]	; 0xffffff62
   1d1a0:	ldr	r3, [r5, #28]
   1d1a4:	ldrh	r2, [r5, #82]	; 0x52
   1d1a8:	strb	r6, [fp, #-161]	; 0xffffff5f
   1d1ac:	strh	r3, [fp, #-160]	; 0xffffff60
   1d1b0:	strh	r2, [fp, #-156]	; 0xffffff64
   1d1b4:	cmp	r0, #0
   1d1b8:	movne	r0, #2
   1d1bc:	moveq	r0, #1
   1d1c0:	cmp	r3, #32768	; 0x8000
   1d1c4:	strb	r0, [fp, #-163]	; 0xffffff5d
   1d1c8:	bge	1ca44 <dta_begin_data+0x204>
   1d1cc:	mov	r2, #10
   1d1d0:	sub	r1, fp, #164	; 0xa4
   1d1d4:	mov	r0, r5
   1d1d8:	bl	44a4 <readstat_write_bytes@plt>
   1d1dc:	cmp	r0, #0
   1d1e0:	bne	1ca44 <dta_begin_data+0x204>
   1d1e4:	mov	r1, r4
   1d1e8:	mov	r0, r5
   1d1ec:	bl	1bc0c <dta_emit_header_data_label>
   1d1f0:	cmp	r0, #0
   1d1f4:	bne	1ca44 <dta_begin_data+0x204>
   1d1f8:	ldr	r3, [r4, #16]
   1d1fc:	cmp	r3, #0
   1d200:	beq	1ca44 <dta_begin_data+0x204>
   1d204:	mov	r1, r4
   1d208:	mov	r0, r5
   1d20c:	bl	1c0c4 <dta_emit_header_time_stamp.part.12>
   1d210:	b	1ca44 <dta_begin_data+0x204>
   1d214:	mov	r1, r3
   1d218:	mov	r0, r4
   1d21c:	str	r3, [fp, #-196]	; 0xffffff3c
   1d220:	bl	1bd14 <dta_measure_tag>
   1d224:	ldr	r2, [r5, #48]	; 0x30
   1d228:	mov	r8, r0
   1d22c:	ldr	r0, [r2, r7, lsl #2]
   1d230:	bl	424c <strlen@plt>
   1d234:	ldr	r1, [r4, #96]	; 0x60
   1d238:	add	r7, r7, #1
   1d23c:	str	r0, [fp, #-192]	; 0xffffff40
   1d240:	ldr	r0, [r4, #92]	; 0x5c
   1d244:	add	r0, r0, #1
   1d248:	add	r0, r0, r1, lsl #1
   1d24c:	add	r6, r0, r6
   1d250:	mov	r1, sl
   1d254:	mov	r0, r4
   1d258:	bl	1bd14 <dta_measure_tag>
   1d25c:	ldr	r2, [fp, #-192]	; 0xffffff40
   1d260:	add	r6, r8, r6
   1d264:	add	r6, r6, r2
   1d268:	ldr	r3, [fp, #-196]	; 0xffffff3c
   1d26c:	add	r6, r6, r0
   1d270:	b	1cc4c <dta_begin_data+0x40c>
   1d274:	mov	r1, r8
   1d278:	mov	r0, r5
   1d27c:	str	r9, [fp, #-172]	; 0xffffff54
   1d280:	bl	43cc <readstat_get_variable@plt>
   1d284:	ldr	r2, [fp, #-188]	; 0xffffff44
   1d288:	ldrb	r1, [r4, #20]
   1d28c:	strh	r9, [fp, #-174]	; 0xffffff52
   1d290:	bl	1c57c <dta_typecode_for_variable.constprop.15>
   1d294:	mov	r3, #0
   1d298:	mov	r2, sl
   1d29c:	mov	r1, r4
   1d2a0:	ldrh	r0, [fp, #-174]	; 0xffffff52
   1d2a4:	bl	4234 <dta_type_info@plt>
   1d2a8:	add	r8, r8, #1
   1d2ac:	cmp	r0, #0
   1d2b0:	ldreq	r3, [r4, #160]	; 0xa0
   1d2b4:	ldreq	r2, [fp, #-172]	; 0xffffff54
   1d2b8:	addeq	r3, r3, r2
   1d2bc:	streq	r3, [r4, #160]	; 0xa0
   1d2c0:	b	1cca4 <dta_begin_data+0x464>
   1d2c4:	ldr	r2, [r5, #60]	; 0x3c
   1d2c8:	ldr	r0, [r4, #116]	; 0x74
   1d2cc:	ldr	r2, [r2, r3, lsl #2]
   1d2d0:	cmp	r0, #4
   1d2d4:	addhi	r7, r7, #20
   1d2d8:	ldr	r2, [r2, #16]
   1d2dc:	addls	r7, r7, #16
   1d2e0:	add	r7, r7, r2
   1d2e4:	add	r3, r3, #1
   1d2e8:	b	1cd00 <dta_begin_data+0x4c0>
   1d2ec:	mov	r1, r8
   1d2f0:	mov	r0, r5
   1d2f4:	bl	4474 <readstat_get_label_set@plt>
   1d2f8:	mov	r6, #0
   1d2fc:	mov	r3, r6
   1d300:	ldr	r9, [r0, #264]	; 0x108
   1d304:	mov	r2, r0
   1d308:	cmp	r9, r3
   1d30c:	bgt	1d358 <dta_begin_data+0xb18>
   1d310:	ldr	r1, [fp, #-192]	; 0xffffff40
   1d314:	mov	r0, r4
   1d318:	bl	1bd14 <dta_measure_tag>
   1d31c:	ldr	r2, [r4, #108]	; 0x6c
   1d320:	ldr	r3, [r4, #104]	; 0x68
   1d324:	mov	r1, sl
   1d328:	add	r3, r3, r2
   1d32c:	add	r3, r3, #4
   1d330:	add	r7, r3, r7
   1d334:	add	r9, r9, #1
   1d338:	add	r8, r8, #1
   1d33c:	add	r6, r6, r9, lsl #3
   1d340:	add	r7, r7, r0
   1d344:	mov	r0, r4
   1d348:	bl	1bd14 <dta_measure_tag>
   1d34c:	add	r7, r0, r7
   1d350:	add	r7, r6, r7
   1d354:	b	1cd70 <dta_begin_data+0x530>
   1d358:	mov	r1, r3
   1d35c:	mov	r0, r2
   1d360:	str	r3, [fp, #-200]	; 0xffffff38
   1d364:	str	r2, [fp, #-196]	; 0xffffff3c
   1d368:	bl	451c <readstat_get_value_label@plt>
   1d36c:	ldr	r3, [fp, #-200]	; 0xffffff38
   1d370:	add	r6, r6, #1
   1d374:	add	r3, r3, #1
   1d378:	ldr	r2, [fp, #-196]	; 0xffffff3c
   1d37c:	ldr	r0, [r0, #28]
   1d380:	add	r6, r6, r0
   1d384:	b	1d308 <dta_begin_data+0xac8>
   1d388:	mov	r1, r6
   1d38c:	mov	r0, r5
   1d390:	bl	43cc <readstat_get_variable@plt>
   1d394:	strh	r7, [fp, #-164]	; 0xffffff5c
   1d398:	mov	r2, r8
   1d39c:	ldrb	r1, [r4, #20]
   1d3a0:	bl	1c57c <dta_typecode_for_variable.constprop.15>
   1d3a4:	subs	r1, r0, #0
   1d3a8:	bne	1d164 <dta_begin_data+0x924>
   1d3ac:	ldrh	r1, [fp, #-164]	; 0xffffff5c
   1d3b0:	ldr	r2, [r4, #28]
   1d3b4:	lsl	r3, r6, #1
   1d3b8:	add	r6, r6, #1
   1d3bc:	strh	r1, [r2, r3]
   1d3c0:	b	1ce20 <dta_begin_data+0x5e0>
   1d3c4:	ldr	r3, [r4, #24]
   1d3c8:	cmp	r3, #1
   1d3cc:	bne	1d400 <dta_begin_data+0xbc0>
   1d3d0:	ldr	r2, [r4, #28]
   1d3d4:	lsl	r3, r6, #1
   1d3d8:	ldrh	r3, [r2, r3]
   1d3dc:	mov	r2, r9
   1d3e0:	strb	r3, [fp, #-164]	; 0xffffff5c
   1d3e4:	mov	r1, r7
   1d3e8:	mov	r0, r5
   1d3ec:	bl	44a4 <readstat_write_bytes@plt>
   1d3f0:	cmp	r0, #0
   1d3f4:	mov	r1, r0
   1d3f8:	beq	1d408 <dta_begin_data+0xbc8>
   1d3fc:	b	1d164 <dta_begin_data+0x924>
   1d400:	cmp	r3, #2
   1d404:	beq	1d410 <dta_begin_data+0xbd0>
   1d408:	add	r6, r6, #1
   1d40c:	b	1ce3c <dta_begin_data+0x5fc>
   1d410:	ldr	r2, [r4, #28]
   1d414:	lsl	r3, r6, #1
   1d418:	ldrh	r3, [r2, r3]
   1d41c:	mov	r2, r8
   1d420:	strh	r3, [fp, #-164]	; 0xffffff5c
   1d424:	b	1d3e4 <dta_begin_data+0xba4>
   1d428:	mov	r1, r6
   1d42c:	mov	r0, r5
   1d430:	bl	43cc <readstat_get_variable@plt>
   1d434:	ldr	r2, [r4, #76]	; 0x4c
   1d438:	ldr	r3, [r4, #36]	; 0x24
   1d43c:	add	r1, r0, #8
   1d440:	mla	r0, r2, r6, r3
   1d444:	bl	430c <strncpy@plt>
   1d448:	add	r6, r6, #1
   1d44c:	b	1ce84 <dta_begin_data+0x644>
   1d450:	mov	r1, r6
   1d454:	mov	r0, r5
   1d458:	bl	43cc <readstat_get_variable@plt>
   1d45c:	ldrb	r3, [r0, #308]	; 0x134
   1d460:	mov	r1, r0
   1d464:	cmp	r3, #0
   1d468:	addne	r1, r1, #308	; 0x134
   1d46c:	ldrne	r0, [r4, #52]	; 0x34
   1d470:	ldrne	r2, [r4, #80]	; 0x50
   1d474:	bne	1d510 <dta_begin_data+0xcd0>
   1d478:	ldr	r3, [r1, #2136]	; 0x858
   1d47c:	ldr	r0, [r1]
   1d480:	str	r3, [fp, #-192]	; 0xffffff40
   1d484:	str	r1, [fp, #-188]	; 0xffffff44
   1d488:	bl	3e68 <readstat_type_class@plt>
   1d48c:	ldr	r1, [fp, #-188]	; 0xffffff44
   1d490:	sub	r7, fp, #164	; 0xa4
   1d494:	ldr	r3, [fp, #-192]	; 0xffffff40
   1d498:	ldr	r2, [r1, #2132]	; 0x854
   1d49c:	cmp	r0, #0
   1d4a0:	beq	1d728 <dta_begin_data+0xee8>
   1d4a4:	cmp	r3, #0
   1d4a8:	bne	1d4e4 <dta_begin_data+0xca4>
   1d4ac:	mov	r0, #103	; 0x67
   1d4b0:	ldr	r3, [r1]
   1d4b4:	sub	r1, r3, #1
   1d4b8:	cmp	r1, #1
   1d4bc:	movls	r3, #8
   1d4c0:	bls	1d4dc <dta_begin_data+0xc9c>
   1d4c4:	cmp	r3, #3
   1d4c8:	moveq	r3, #12
   1d4cc:	beq	1d4dc <dta_begin_data+0xc9c>
   1d4d0:	cmp	r3, #5
   1d4d4:	moveq	r3, #10
   1d4d8:	movne	r3, #9
   1d4dc:	cmp	r0, #103	; 0x67
   1d4e0:	bne	1d734 <dta_begin_data+0xef4>
   1d4e4:	cmp	r2, #1
   1d4e8:	beq	1d520 <dta_begin_data+0xce0>
   1d4ec:	ldr	r2, [pc, #864]	; 1d854 <dta_begin_data+0x1014>
   1d4f0:	add	r2, pc, r2
   1d4f4:	ldr	r1, [pc, #860]	; 1d858 <dta_begin_data+0x1018>
   1d4f8:	add	r1, pc, r1
   1d4fc:	mov	r0, r7
   1d500:	bl	4438 <sprintf@plt>
   1d504:	ldr	r0, [r4, #52]	; 0x34
   1d508:	ldr	r2, [r4, #80]	; 0x50
   1d50c:	mov	r1, r7
   1d510:	mla	r0, r2, r6, r0
   1d514:	bl	430c <strncpy@plt>
   1d518:	add	r6, r6, #1
   1d51c:	b	1cf58 <dta_begin_data+0x718>
   1d520:	ldr	r2, [pc, #820]	; 1d85c <dta_begin_data+0x101c>
   1d524:	add	r2, pc, r2
   1d528:	b	1d4f4 <dta_begin_data+0xcb4>
   1d52c:	mov	r1, r6
   1d530:	mov	r0, r5
   1d534:	bl	43cc <readstat_get_variable@plt>
   1d538:	ldr	r2, [r4, #84]	; 0x54
   1d53c:	ldr	r1, [r0, #1588]	; 0x634
   1d540:	ldr	r0, [r4, #60]	; 0x3c
   1d544:	cmp	r1, #0
   1d548:	beq	1d560 <dta_begin_data+0xd20>
   1d54c:	add	r1, r1, #4
   1d550:	mla	r0, r2, r6, r0
   1d554:	bl	430c <strncpy@plt>
   1d558:	add	r6, r6, #1
   1d55c:	b	1cfbc <dta_begin_data+0x77c>
   1d560:	mov	r1, r7
   1d564:	mla	r0, r2, r6, r0
   1d568:	bl	42e8 <memset@plt>
   1d56c:	b	1d558 <dta_begin_data+0xd18>
   1d570:	mov	r1, r6
   1d574:	mov	r0, r5
   1d578:	bl	43cc <readstat_get_variable@plt>
   1d57c:	ldr	r2, [r4, #88]	; 0x58
   1d580:	ldr	r3, [r4, #68]	; 0x44
   1d584:	add	r1, r0, #564	; 0x234
   1d588:	mla	r0, r2, r6, r3
   1d58c:	bl	430c <strncpy@plt>
   1d590:	add	r6, r6, #1
   1d594:	b	1d01c <dta_begin_data+0x7dc>
   1d598:	tst	r3, #4
   1d59c:	beq	1d608 <dta_begin_data+0xdc8>
   1d5a0:	ldr	r2, [fp, #-192]	; 0xffffff40
   1d5a4:	mov	r1, r4
   1d5a8:	mov	r0, r5
   1d5ac:	bl	1b50c <dta_write_tag>
   1d5b0:	cmp	r0, #0
   1d5b4:	mov	r1, r0
   1d5b8:	bne	1d65c <dta_begin_data+0xe1c>
   1d5bc:	ldr	r3, [r5, #48]	; 0x30
   1d5c0:	lsl	sl, r6, #2
   1d5c4:	ldr	r0, [r3, r6, lsl #2]
   1d5c8:	bl	424c <strlen@plt>
   1d5cc:	ldr	r2, [r4, #92]	; 0x5c
   1d5d0:	ldr	r3, [r4, #96]	; 0x60
   1d5d4:	cmp	r2, #2
   1d5d8:	mov	r8, r0
   1d5dc:	bne	1d620 <dta_begin_data+0xde0>
   1d5e0:	add	r3, r0, r3, lsl #1
   1d5e4:	sub	r1, fp, #36	; 0x24
   1d5e8:	add	r3, r3, #1
   1d5ec:	strh	r3, [r1, #-128]!	; 0xffffff80
   1d5f0:	mov	r0, r5
   1d5f4:	bl	44a4 <readstat_write_bytes@plt>
   1d5f8:	cmp	r0, #0
   1d5fc:	mov	r1, r0
   1d600:	beq	1d628 <dta_begin_data+0xde8>
   1d604:	b	1d65c <dta_begin_data+0xe1c>
   1d608:	sub	r1, fp, #36	; 0x24
   1d60c:	mov	r2, #1
   1d610:	strb	r2, [r1, #-128]!	; 0xffffff80
   1d614:	mov	r0, r5
   1d618:	bl	44a4 <readstat_write_bytes@plt>
   1d61c:	b	1d5b0 <dta_begin_data+0xd70>
   1d620:	cmp	r2, #4
   1d624:	beq	1d694 <dta_begin_data+0xe54>
   1d628:	ldr	r3, [r4, #96]	; 0x60
   1d62c:	ldr	r1, [fp, #-196]	; 0xffffff3c
   1d630:	mov	r2, r3
   1d634:	mov	r0, r7
   1d638:	str	r3, [fp, #-200]	; 0xffffff38
   1d63c:	bl	430c <strncpy@plt>
   1d640:	ldr	r3, [fp, #-200]	; 0xffffff38
   1d644:	mov	r1, r7
   1d648:	mov	r2, r3
   1d64c:	mov	r0, r5
   1d650:	bl	44a4 <readstat_write_bytes@plt>
   1d654:	subs	r1, r0, #0
   1d658:	beq	1d6a8 <dta_begin_data+0xe68>
   1d65c:	cmp	r1, #0
   1d660:	ldr	sp, [fp, #-188]	; 0xffffff44
   1d664:	bne	1d164 <dta_begin_data+0x924>
   1d668:	ldr	r2, [pc, #496]	; 1d860 <dta_begin_data+0x1020>
   1d66c:	mov	r1, r4
   1d670:	add	r2, pc, r2
   1d674:	mov	r0, r5
   1d678:	bl	1b50c <dta_write_tag>
   1d67c:	subs	r1, r0, #0
   1d680:	streq	r4, [r5, #300]	; 0x12c
   1d684:	bne	1d164 <dta_begin_data+0x924>
   1d688:	mov	r0, r1
   1d68c:	sub	sp, fp, #32
   1d690:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d694:	add	r3, r0, r3, lsl #1
   1d698:	sub	r1, fp, #36	; 0x24
   1d69c:	add	r3, r3, #1
   1d6a0:	str	r3, [r1, #-128]!	; 0xffffff80
   1d6a4:	b	1d5f0 <dta_begin_data+0xdb0>
   1d6a8:	add	r6, r6, #1
   1d6ac:	mov	r3, r6
   1d6b0:	mov	r2, r9
   1d6b4:	ldr	r1, [r4, #96]	; 0x60
   1d6b8:	mov	r0, r7
   1d6bc:	bl	42c4 <snprintf@plt>
   1d6c0:	mov	r1, r7
   1d6c4:	ldr	r2, [r4, #96]	; 0x60
   1d6c8:	mov	r0, r5
   1d6cc:	bl	44a4 <readstat_write_bytes@plt>
   1d6d0:	subs	r1, r0, #0
   1d6d4:	bne	1d65c <dta_begin_data+0xe1c>
   1d6d8:	ldr	r3, [r5, #48]	; 0x30
   1d6dc:	add	r2, r8, #1
   1d6e0:	mov	r0, r5
   1d6e4:	ldr	r1, [r3, sl]
   1d6e8:	bl	44a4 <readstat_write_bytes@plt>
   1d6ec:	subs	r1, r0, #0
   1d6f0:	bne	1d65c <dta_begin_data+0xe1c>
   1d6f4:	ldr	r2, [pc, #360]	; 1d864 <dta_begin_data+0x1024>
   1d6f8:	mov	r1, r4
   1d6fc:	add	r2, pc, r2
   1d700:	mov	r0, r5
   1d704:	bl	1b50c <dta_write_tag>
   1d708:	subs	r1, r0, #0
   1d70c:	beq	1d0c0 <dta_begin_data+0x880>
   1d710:	b	1d65c <dta_begin_data+0xe1c>
   1d714:	ldr	r1, [r4, #92]	; 0x5c
   1d718:	mov	r0, r5
   1d71c:	add	r1, r1, #1
   1d720:	bl	4060 <readstat_write_zeros@plt>
   1d724:	b	1d0ec <dta_begin_data+0x8ac>
   1d728:	cmp	r3, #0
   1d72c:	moveq	r0, #115	; 0x73
   1d730:	beq	1d4b0 <dta_begin_data+0xc70>
   1d734:	cmp	r2, #1
   1d738:	moveq	r2, r9
   1d73c:	movne	r2, sl
   1d740:	mov	r1, r8
   1d744:	b	1d4fc <dta_begin_data+0xcbc>
   1d748:	mov	r0, r1
   1d74c:	bx	lr
   1d750:	.word	0x00006f2d
   1d754:	.word	0x00006f1d
   1d758:	.word	0x00007213
   1d75c:	.word	0x00006ef5
   1d760:	.word	0x00006edc
   1d764:	.word	0x00006eb8
   1d768:	.word	0x00006ead
   1d76c:	.word	0x00006e99
   1d770:	.word	0x00006e6a
   1d774:	.word	0x00006e56
   1d778:	.word	0x00006e45
   1d77c:	.word	0x00006e17
   1d780:	.word	0x00006e01
   1d784:	.word	0x00006f1a
   1d788:	.word	0x00006df0
   1d78c:	.word	0x00006dd1
   1d790:	.word	0x00006dc7
   1d794:	.word	0x00006dae
   1d798:	.word	0x00006da6
   1d79c:	.word	0x00006d81
   1d7a0:	.word	0x00006d79
   1d7a4:	.word	0x00006d5b
   1d7a8:	.word	0x00006d52
   1d7ac:	.word	0x00006d36
   1d7b0:	.word	0x00006d37
   1d7b4:	.word	0x00006d21
   1d7b8:	.word	0x00006d49
   1d7bc:	.word	0x00006d1e
   1d7c0:	.word	0x00006ec6
   1d7c4:	.word	0x00006d2e
   1d7c8:	.word	0x00006d25
   1d7cc:	.word	0x00006cc6
   1d7d0:	.word	0x00006d56
   1d7d4:	.word	0x00006d1b
   1d7d8:	.word	0x00006cee
   1d7dc:	.word	0x00006cd5
   1d7e0:	.word	0x00006cfb
   1d7e4:	.word	0x00006cff
   1d7e8:	.word	0x00006ac1
   1d7ec:	.word	0x00006a9b
   1d7f0:	.word	0x00006a8c
   1d7f4:	.word	0x00006a4d
   1d7f8:	.word	0x00006a43
   1d7fc:	.word	0x00006a0a
   1d800:	.word	0x000069fa
   1d804:	.word	0x000069c5
   1d808:	.word	0x000069b5
   1d80c:	.word	0x00006c03
   1d810:	.word	0x00006bc9
   1d814:	.word	0x00005168
   1d818:	.word	0x00006963
   1d81c:	.word	0x00006952
   1d820:	.word	0x0000691e
   1d824:	.word	0x00006917
   1d828:	.word	0x000068e5
   1d82c:	.word	0x000068f2
   1d830:	.word	0x000068ed
   1d834:	.word	0x000068e7
   1d838:	.word	0x000068de
   1d83c:	.word	0x00006a52
   1d840:	.word	0x0000673d
   1d844:	.word	0x00006731
   1d848:	.word	0x0000671d
   1d84c:	.word	0x00006716
   1d850:	.word	0x000066fe
   1d854:	.word	0x00004bcc
   1d858:	.word	0x0000664d
   1d85c:	.word	0x000065f5
   1d860:	.word	0x00006376
   1d864:	.word	0x000062a6

0001d868 <readstat_begin_writing_dta>:
   1d868:	ldr	ip, [r0, #8]
   1d86c:	ldr	r3, [pc, #376]	; 1d9ec <readstat_begin_writing_dta+0x184>
   1d870:	cmp	ip, #0
   1d874:	moveq	ip, #118	; 0x76
   1d878:	streq	ip, [r0, #8]
   1d87c:	ldr	ip, [pc, #364]	; 1d9f0 <readstat_begin_writing_dta+0x188>
   1d880:	add	r3, pc, r3
   1d884:	ldr	r3, [r3, ip]
   1d888:	str	r3, [r0, #292]	; 0x124
   1d88c:	ldr	r3, [r0, #8]
   1d890:	cmp	r3, #116	; 0x74
   1d894:	ble	1d8fc <readstat_begin_writing_dta+0x94>
   1d898:	ldr	ip, [pc, #340]	; 1d9f4 <readstat_begin_writing_dta+0x18c>
   1d89c:	cmp	r3, #117	; 0x75
   1d8a0:	add	ip, pc, ip
   1d8a4:	str	ip, [r0, #228]	; 0xe4
   1d8a8:	bne	1d934 <readstat_begin_writing_dta+0xcc>
   1d8ac:	ldr	ip, [pc, #324]	; 1d9f8 <readstat_begin_writing_dta+0x190>
   1d8b0:	cmp	r3, #117	; 0x75
   1d8b4:	add	ip, pc, ip
   1d8b8:	str	ip, [r0, #232]	; 0xe8
   1d8bc:	beq	1d9e0 <readstat_begin_writing_dta+0x178>
   1d8c0:	cmp	r3, #112	; 0x70
   1d8c4:	bgt	1d94c <readstat_begin_writing_dta+0xe4>
   1d8c8:	ldr	r3, [pc, #300]	; 1d9fc <readstat_begin_writing_dta+0x194>
   1d8cc:	add	r3, pc, r3
   1d8d0:	str	r3, [r0, #236]	; 0xec
   1d8d4:	ldr	r3, [pc, #292]	; 1da00 <readstat_begin_writing_dta+0x198>
   1d8d8:	add	r3, pc, r3
   1d8dc:	str	r3, [r0, #240]	; 0xf0
   1d8e0:	ldr	r3, [pc, #284]	; 1da04 <readstat_begin_writing_dta+0x19c>
   1d8e4:	add	r3, pc, r3
   1d8e8:	str	r3, [r0, #244]	; 0xf4
   1d8ec:	ldr	r3, [pc, #276]	; 1da08 <readstat_begin_writing_dta+0x1a0>
   1d8f0:	add	r3, pc, r3
   1d8f4:	str	r3, [r0, #268]	; 0x10c
   1d8f8:	b	1d988 <readstat_begin_writing_dta+0x120>
   1d8fc:	cmp	r3, #110	; 0x6e
   1d900:	ble	1d928 <readstat_begin_writing_dta+0xc0>
   1d904:	ldr	ip, [pc, #256]	; 1da0c <readstat_begin_writing_dta+0x1a4>
   1d908:	add	ip, pc, ip
   1d90c:	cmp	r3, #109	; 0x6d
   1d910:	str	ip, [r0, #228]	; 0xe4
   1d914:	bgt	1d8ac <readstat_begin_writing_dta+0x44>
   1d918:	ldr	ip, [pc, #240]	; 1da10 <readstat_begin_writing_dta+0x1a8>
   1d91c:	add	ip, pc, ip
   1d920:	str	ip, [r0, #232]	; 0xe8
   1d924:	b	1d8c0 <readstat_begin_writing_dta+0x58>
   1d928:	ldr	ip, [pc, #228]	; 1da14 <readstat_begin_writing_dta+0x1ac>
   1d92c:	add	ip, pc, ip
   1d930:	b	1d90c <readstat_begin_writing_dta+0xa4>
   1d934:	ldr	r3, [pc, #220]	; 1da18 <readstat_begin_writing_dta+0x1b0>
   1d938:	add	r3, pc, r3
   1d93c:	str	r3, [r0, #232]	; 0xe8
   1d940:	ldr	r3, [pc, #212]	; 1da1c <readstat_begin_writing_dta+0x1b4>
   1d944:	add	r3, pc, r3
   1d948:	str	r3, [r0, #260]	; 0x104
   1d94c:	ldr	r3, [pc, #204]	; 1da20 <readstat_begin_writing_dta+0x1b8>
   1d950:	add	r3, pc, r3
   1d954:	str	r3, [r0, #236]	; 0xec
   1d958:	ldr	r3, [pc, #196]	; 1da24 <readstat_begin_writing_dta+0x1bc>
   1d95c:	add	r3, pc, r3
   1d960:	str	r3, [r0, #240]	; 0xf0
   1d964:	ldr	r3, [pc, #188]	; 1da28 <readstat_begin_writing_dta+0x1c0>
   1d968:	add	r3, pc, r3
   1d96c:	str	r3, [r0, #244]	; 0xf4
   1d970:	ldr	r3, [pc, #180]	; 1da2c <readstat_begin_writing_dta+0x1c4>
   1d974:	add	r3, pc, r3
   1d978:	str	r3, [r0, #268]	; 0x10c
   1d97c:	ldr	r3, [pc, #172]	; 1da30 <readstat_begin_writing_dta+0x1c8>
   1d980:	add	r3, pc, r3
   1d984:	str	r3, [r0, #272]	; 0x110
   1d988:	ldr	r3, [pc, #164]	; 1da34 <readstat_begin_writing_dta+0x1cc>
   1d98c:	add	r3, pc, r3
   1d990:	str	r3, [r0, #248]	; 0xf8
   1d994:	ldr	r3, [pc, #156]	; 1da38 <readstat_begin_writing_dta+0x1d0>
   1d998:	add	r3, pc, r3
   1d99c:	str	r3, [r0, #252]	; 0xfc
   1d9a0:	ldr	r3, [pc, #148]	; 1da3c <readstat_begin_writing_dta+0x1d4>
   1d9a4:	add	r3, pc, r3
   1d9a8:	str	r3, [r0, #256]	; 0x100
   1d9ac:	ldr	r3, [pc, #140]	; 1da40 <readstat_begin_writing_dta+0x1d8>
   1d9b0:	add	r3, pc, r3
   1d9b4:	str	r3, [r0, #264]	; 0x108
   1d9b8:	ldr	r3, [pc, #132]	; 1da44 <readstat_begin_writing_dta+0x1dc>
   1d9bc:	add	r3, pc, r3
   1d9c0:	str	r3, [r0, #276]	; 0x114
   1d9c4:	ldr	r3, [pc, #124]	; 1da48 <readstat_begin_writing_dta+0x1e0>
   1d9c8:	add	r3, pc, r3
   1d9cc:	str	r3, [r0, #284]	; 0x11c
   1d9d0:	ldr	r3, [pc, #116]	; 1da4c <readstat_begin_writing_dta+0x1e4>
   1d9d4:	add	r3, pc, r3
   1d9d8:	str	r3, [r0, #288]	; 0x120
   1d9dc:	b	3fac <readstat_begin_writing_file@plt>
   1d9e0:	ldr	r3, [pc, #104]	; 1da50 <readstat_begin_writing_dta+0x1e8>
   1d9e4:	add	r3, pc, r3
   1d9e8:	b	1d948 <readstat_begin_writing_dta+0xe0>
   1d9ec:	.word	0x00023778
   1d9f0:	.word	0x00000304
   1d9f4:	.word	0xffffe5a4
   1d9f8:	.word	0xffffec90
   1d9fc:	.word	0xffffdba0
   1da00:	.word	0xffffdbc4
   1da04:	.word	0xffffdbe8
   1da08:	.word	0xffffe6e0
   1da0c:	.word	0xffffe4fc
   1da10:	.word	0xffffec10
   1da14:	.word	0xffffe4f8
   1da18:	.word	0xffffec24
   1da1c:	.word	0xffffe714
   1da20:	.word	0xffffdb08
   1da24:	.word	0xffffdb24
   1da28:	.word	0xffffdb50
   1da2c:	.word	0xffffed80
   1da30:	.word	0xffffe580
   1da34:	.word	0xffffee60
   1da38:	.word	0xffffede4
   1da3c:	.word	0xffffe37c
   1da40:	.word	0xffffe23c
   1da44:	.word	0xffffee7c
   1da48:	.word	0xffffdb58
   1da4c:	.word	0xffffdb2c
   1da50:	.word	0xffffdafc

0001da54 <submit_value_label>:
   1da54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1da58:	vpush	{d8}
   1da5c:	ldr	r6, [r0, #20]
   1da60:	cmp	r6, #0
   1da64:	sub	sp, sp, #36	; 0x24
   1da68:	ldrd	sl, [sp, #80]	; 0x50
   1da6c:	ldr	r8, [sp, #104]	; 0x68
   1da70:	bne	1da84 <submit_value_label+0x30>
   1da74:	mov	r0, #0
   1da78:	add	sp, sp, #36	; 0x24
   1da7c:	vpop	{d8}
   1da80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1da84:	cmp	r2, #2
   1da88:	mov	r9, r2
   1da8c:	vmov.f64	d8, d0
   1da90:	mov	r4, r1
   1da94:	mov	r5, r0
   1da98:	addeq	r6, sp, #16
   1da9c:	moveq	r7, #5
   1daa0:	addeq	r9, sp, #24
   1daa4:	beq	1db8c <submit_value_label+0x138>
   1daa8:	cmp	r9, #3
   1daac:	beq	1da74 <submit_value_label+0x20>
   1dab0:	add	r5, sp, #16
   1dab4:	mov	r2, #16
   1dab8:	mov	r1, #0
   1dabc:	mov	r0, r5
   1dac0:	bl	42e8 <memset@plt>
   1dac4:	cmp	r9, #0
   1dac8:	moveq	r3, #5
   1dacc:	vstreq	d8, [sp, #16]
   1dad0:	streq	r3, [sp, #24]
   1dad4:	beq	1db00 <submit_value_label+0xac>
   1dad8:	cmp	r9, #1
   1dadc:	ldreq	r3, [sp, #96]	; 0x60
   1dae0:	streq	r3, [sp, #16]
   1dae4:	beq	1db00 <submit_value_label+0xac>
   1dae8:	cmn	r9, #1
   1daec:	moveq	r3, #5
   1daf0:	streq	r3, [sp, #24]
   1daf4:	ldreq	r3, [pc, #164]	; 1dba0 <submit_value_label+0x14c>
   1daf8:	moveq	r2, #0
   1dafc:	strdeq	r2, [sp, #16]
   1db00:	ldr	r3, [sp, #100]	; 0x64
   1db04:	str	r8, [sp, #12]
   1db08:	str	r3, [sp, #8]
   1db0c:	add	r3, sp, #32
   1db10:	ldmdb	r3, {r0, r1}
   1db14:	stm	sp, {r0, r1}
   1db18:	mov	r0, r4
   1db1c:	ldm	r5, {r2, r3}
   1db20:	blx	r6
   1db24:	cmp	r0, #0
   1db28:	beq	1da74 <submit_value_label+0x20>
   1db2c:	mov	r0, #4
   1db30:	b	1da78 <submit_value_label+0x24>
   1db34:	mov	r2, #16
   1db38:	mov	r1, #0
   1db3c:	mov	r0, r6
   1db40:	bl	42e8 <memset@plt>
   1db44:	mov	r0, sl
   1db48:	mov	r1, fp
   1db4c:	bl	20ddc <__aeabi_l2d>
   1db50:	ldr	r3, [sp, #100]	; 0x64
   1db54:	str	r8, [sp, #12]
   1db58:	str	r3, [sp, #8]
   1db5c:	str	r7, [sp, #24]
   1db60:	strd	r0, [sp, #16]
   1db64:	ldm	r9, {r0, r1}
   1db68:	stm	sp, {r0, r1}
   1db6c:	mov	r0, r4
   1db70:	ldm	r6, {r2, r3}
   1db74:	ldr	r1, [r5, #20]
   1db78:	blx	r1
   1db7c:	cmp	r0, #0
   1db80:	bne	1db2c <submit_value_label+0xd8>
   1db84:	adds	sl, sl, #1
   1db88:	adc	fp, fp, #0
   1db8c:	ldrd	r2, [sp, #88]	; 0x58
   1db90:	cmp	r2, sl
   1db94:	sbcs	r3, r3, fp
   1db98:	bge	1db34 <submit_value_label+0xe0>
   1db9c:	b	1da74 <submit_value_label+0x20>
   1dba0:	.word	0x7ff80000

0001dba4 <submit_columns>:
   1dba4:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dba8:	mov	r3, #0
   1dbac:	ldr	lr, [r1, #268]	; 0x10c
   1dbb0:	mov	r4, #2208	; 0x8a0
   1dbb4:	cmp	r3, lr
   1dbb8:	blt	1dbf4 <submit_columns+0x50>
   1dbbc:	ldr	r3, [r0, #8]
   1dbc0:	cmp	r3, #0
   1dbc4:	beq	1dbec <submit_columns+0x48>
   1dbc8:	mov	r7, #0
   1dbcc:	mov	r9, r2
   1dbd0:	mov	r5, r1
   1dbd4:	mov	r8, r0
   1dbd8:	mov	r6, r7
   1dbdc:	mov	sl, #1
   1dbe0:	ldr	r3, [r5, #268]	; 0x10c
   1dbe4:	cmp	r6, r3
   1dbe8:	blt	1dc18 <submit_columns+0x74>
   1dbec:	mov	r0, #0
   1dbf0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dbf4:	mul	ip, r4, r3
   1dbf8:	ldr	r5, [r1, #276]	; 0x114
   1dbfc:	add	r3, r3, #1
   1dc00:	ldr	ip, [r5, ip]
   1dc04:	ldr	r5, [r1, #256]	; 0x100
   1dc08:	cmp	ip, r5
   1dc0c:	addge	ip, ip, #1
   1dc10:	strge	ip, [r1, #256]	; 0x100
   1dc14:	b	1dbb4 <submit_columns+0x10>
   1dc18:	ldr	r4, [r5, #276]	; 0x114
   1dc1c:	mov	r3, #2208	; 0x8a0
   1dc20:	ldr	fp, [r8, #8]
   1dc24:	mla	r4, r3, r6, r4
   1dc28:	mov	r0, r6
   1dc2c:	add	r1, r4, #16
   1dc30:	ldr	r3, [r4, #16]
   1dc34:	str	r6, [r4, #20]
   1dc38:	cmp	r3, #0
   1dc3c:	str	r7, [r4, #2164]	; 0x874
   1dc40:	ldreq	r3, [r4, #8]
   1dc44:	streq	r3, [r4, #1612]	; 0x64c
   1dc48:	ldrb	r3, [r4, #2168]	; 0x878
   1dc4c:	cmp	r3, #0
   1dc50:	addne	r2, r4, #2160	; 0x870
   1dc54:	addne	r2, r2, #8
   1dc58:	moveq	r2, #0
   1dc5c:	mov	r3, r9
   1dc60:	blx	fp
   1dc64:	cmp	r0, #2
   1dc68:	streq	sl, [r4, #12]
   1dc6c:	beq	1dc7c <submit_columns+0xd8>
   1dc70:	cmp	r0, #1
   1dc74:	beq	1dc84 <submit_columns+0xe0>
   1dc78:	add	r7, r7, #1
   1dc7c:	add	r6, r6, #1
   1dc80:	b	1dbe0 <submit_columns+0x3c>
   1dc84:	mov	r0, #4
   1dc88:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001dc8c <readstat_copy>:
   1dc8c:	cmp	r3, r1
   1dc90:	push	{r4, r5, r6, lr}
   1dc94:	subcs	r4, r1, #1
   1dc98:	movcc	r4, r3
   1dc9c:	mov	r5, r0
   1dca0:	mov	r0, r2
   1dca4:	mov	r1, r0
   1dca8:	mov	r2, r4
   1dcac:	mov	r0, r5
   1dcb0:	bl	3f64 <memcpy@plt>
   1dcb4:	mov	r3, #0
   1dcb8:	strb	r3, [r5, r4]
   1dcbc:	pop	{r4, r5, r6, pc}

0001dcc0 <readstat_copy_lower>:
   1dcc0:	push	{r4, r5, r6, lr}
   1dcc4:	mov	r4, r0
   1dcc8:	mov	r5, r1
   1dccc:	bl	3eb0 <readstat_copy@plt>
   1dcd0:	add	r5, r4, r5
   1dcd4:	cmp	r4, r5
   1dcd8:	popeq	{r4, r5, r6, pc}
   1dcdc:	ldrb	r6, [r4], #1
   1dce0:	cmp	r6, #0
   1dce4:	bne	1dcec <readstat_copy_lower+0x2c>
   1dce8:	pop	{r4, r5, r6, pc}
   1dcec:	bl	41bc <__ctype_tolower_loc@plt>
   1dcf0:	ldr	r3, [r0]
   1dcf4:	ldr	r3, [r3, r6, lsl #2]
   1dcf8:	strb	r3, [r4, #-1]
   1dcfc:	b	1dcd4 <readstat_copy_lower+0x14>

0001dd00 <readstat_copy_quoted>:
   1dd00:	cmp	r3, r1
   1dd04:	subcs	r3, r1, #1
   1dd08:	mov	ip, #0
   1dd0c:	push	{r4, r5, r6, lr}
   1dd10:	add	r3, r2, r3
   1dd14:	mov	r1, ip
   1dd18:	mov	r5, #1
   1dd1c:	mov	lr, ip
   1dd20:	mov	r6, #9
   1dd24:	cmp	r3, r2
   1dd28:	bne	1dd38 <readstat_copy_quoted+0x38>
   1dd2c:	mov	r3, #0
   1dd30:	strb	r3, [r0, r1]
   1dd34:	pop	{r4, r5, r6, pc}
   1dd38:	cmp	ip, #0
   1dd3c:	ldrb	r4, [r2]
   1dd40:	beq	1dd64 <readstat_copy_quoted+0x64>
   1dd44:	cmp	r4, #116	; 0x74
   1dd48:	add	ip, r1, #1
   1dd4c:	strbeq	r6, [r0, r1]
   1dd50:	strbne	r4, [r0, r1]
   1dd54:	mov	r1, ip
   1dd58:	mov	ip, lr
   1dd5c:	add	r2, r2, #1
   1dd60:	b	1dd24 <readstat_copy_quoted+0x24>
   1dd64:	cmp	r4, #92	; 0x5c
   1dd68:	strbne	r4, [r0, r1]
   1dd6c:	moveq	ip, r5
   1dd70:	addne	r1, r1, #1
   1dd74:	b	1dd5c <readstat_copy_quoted+0x5c>

0001dd78 <readstat_parse_sas_commands>:
   1dd78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dd7c:	sub	sp, sp, #2304	; 0x900
   1dd80:	sub	sp, sp, #12
   1dd84:	str	r0, [sp, #40]	; 0x28
   1dd88:	str	r3, [sp, #52]	; 0x34
   1dd8c:	ldr	r3, [sp, #40]	; 0x28
   1dd90:	mov	r0, r1
   1dd94:	str	r2, [sp, #100]	; 0x64
   1dd98:	ldr	r3, [r3, #32]
   1dd9c:	ldr	r2, [r3]
   1dda0:	ldr	r1, [r3, #20]
   1dda4:	blx	r2
   1dda8:	cmn	r0, #1
   1ddac:	bne	1ddd8 <readstat_parse_sas_commands+0x60>
   1ddb0:	ldr	r3, [sp, #52]	; 0x34
   1ddb4:	cmp	r3, #0
   1ddb8:	movne	r3, #1
   1ddbc:	ldrne	r2, [sp, #52]	; 0x34
   1ddc0:	strne	r3, [r2]
   1ddc4:	mov	r5, #0
   1ddc8:	mov	r0, r5
   1ddcc:	add	sp, sp, #2304	; 0x900
   1ddd0:	add	sp, sp, #12
   1ddd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ddd8:	ldr	r3, [sp, #40]	; 0x28
   1dddc:	mov	r1, #2
   1dde0:	mov	r0, #0
   1dde4:	ldr	r3, [r3, #32]
   1dde8:	ldr	r4, [r3, #8]
   1ddec:	ldr	r2, [r3, #20]
   1ddf0:	blx	r4
   1ddf4:	cmn	r0, #1
   1ddf8:	moveq	fp, #0
   1ddfc:	mov	r4, r0
   1de00:	moveq	r3, #15
   1de04:	moveq	r5, fp
   1de08:	beq	1e3d8 <readstat_parse_sas_commands+0x660>
   1de0c:	ldr	r3, [sp, #40]	; 0x28
   1de10:	mov	r1, #0
   1de14:	mov	r0, r1
   1de18:	ldr	r3, [r3, #32]
   1de1c:	ldr	r5, [r3, #8]
   1de20:	ldr	r2, [r3, #20]
   1de24:	blx	r5
   1de28:	mov	r0, r4
   1de2c:	bl	415c <malloc@plt>
   1de30:	ldr	r3, [sp, #40]	; 0x28
   1de34:	mov	r1, r4
   1de38:	ldr	r3, [r3, #32]
   1de3c:	ldr	r5, [r3, #12]
   1de40:	ldr	r2, [r3, #20]
   1de44:	mov	fp, r0
   1de48:	blx	r5
   1de4c:	add	r3, fp, r4
   1de50:	mov	r1, #280	; 0x118
   1de54:	mov	r0, #1
   1de58:	str	r3, [sp, #96]	; 0x60
   1de5c:	bl	3d9c <calloc@plt>
   1de60:	subs	r5, r0, #0
   1de64:	moveq	r3, #3
   1de68:	beq	1e3d8 <readstat_parse_sas_commands+0x660>
   1de6c:	mov	r3, #1
   1de70:	str	r3, [r5, #256]	; 0x100
   1de74:	ldr	r3, [sp, #96]	; 0x60
   1de78:	cmp	fp, r3
   1de7c:	beq	1e4e8 <readstat_parse_sas_commands+0x770>
   1de80:	mov	r3, #5
   1de84:	str	r3, [sp, #84]	; 0x54
   1de88:	ldr	r3, [pc, #1028]	; 1e294 <readstat_parse_sas_commands+0x51c>
   1de8c:	vldr	d7, [pc, #980]	; 1e268 <readstat_parse_sas_commands+0x4f0>
   1de90:	str	r3, [sp, #44]	; 0x2c
   1de94:	ldr	r3, [pc, #980]	; 1e270 <readstat_parse_sas_commands+0x4f8>
   1de98:	mov	r7, #0
   1de9c:	add	r3, pc, r3
   1dea0:	str	r3, [sp, #64]	; 0x40
   1dea4:	sub	r3, r3, #2688	; 0xa80
   1dea8:	sub	r3, r3, #2
   1deac:	str	r3, [sp, #104]	; 0x68
   1deb0:	ldr	r3, [sp, #64]	; 0x40
   1deb4:	vstr	d7, [sp, #72]	; 0x48
   1deb8:	add	r3, r3, #3888	; 0xf30
   1debc:	add	r3, r3, #10
   1dec0:	str	r3, [sp, #120]	; 0x78
   1dec4:	ldr	r3, [pc, #936]	; 1e274 <readstat_parse_sas_commands+0x4fc>
   1dec8:	mov	r4, fp
   1decc:	add	r3, pc, r3
   1ded0:	sub	r3, r3, #3408	; 0xd50
   1ded4:	mov	r6, r7
   1ded8:	mov	r8, #0
   1dedc:	mov	r9, #0
   1dee0:	sub	r3, r3, #5
   1dee4:	str	fp, [sp, #108]	; 0x6c
   1dee8:	str	r7, [sp, #92]	; 0x5c
   1deec:	str	r7, [sp, #88]	; 0x58
   1def0:	str	r7, [sp, #48]	; 0x30
   1def4:	str	r7, [sp, #80]	; 0x50
   1def8:	str	r8, [sp, #112]	; 0x70
   1defc:	str	r9, [sp, #116]	; 0x74
   1df00:	str	r7, [sp, #36]	; 0x24
   1df04:	str	r3, [sp, #68]	; 0x44
   1df08:	ldr	r3, [sp, #44]	; 0x2c
   1df0c:	ldr	r2, [pc, #868]	; 1e278 <readstat_parse_sas_commands+0x500>
   1df10:	ldr	r0, [sp, #44]	; 0x2c
   1df14:	lsl	r1, r3, #1
   1df18:	ldr	r3, [sp, #104]	; 0x68
   1df1c:	add	r2, pc, r2
   1df20:	ldrsh	r3, [r3, r1]
   1df24:	add	r2, r2, r3
   1df28:	ldr	r3, [sp, #64]	; 0x40
   1df2c:	sub	r3, r3, #492	; 0x1ec
   1df30:	sub	r3, r3, #2
   1df34:	ldrsh	r3, [r3, r1]
   1df38:	ldr	r1, [sp, #64]	; 0x40
   1df3c:	add	r1, r1, r0
   1df40:	str	r3, [sp, #32]
   1df44:	ldrb	lr, [r1, #1702]	; 0x6a6
   1df48:	cmp	lr, #0
   1df4c:	beq	1e054 <readstat_parse_sas_commands+0x2dc>
   1df50:	sub	ip, lr, #1
   1df54:	add	ip, r2, ip
   1df58:	mov	r0, r2
   1df5c:	cmp	r0, ip
   1df60:	bhi	1e044 <readstat_parse_sas_commands+0x2cc>
   1df64:	sub	sl, ip, r0
   1df68:	ldrb	r3, [r4]
   1df6c:	add	r1, r0, sl, asr #1
   1df70:	ldrb	sl, [r0, sl, asr #1]
   1df74:	cmp	r3, sl
   1df78:	subcc	ip, r1, #1
   1df7c:	bcc	1df5c <readstat_parse_sas_commands+0x1e4>
   1df80:	addhi	r0, r1, #1
   1df84:	bhi	1df5c <readstat_parse_sas_commands+0x1e4>
   1df88:	ldr	r3, [sp, #32]
   1df8c:	sub	r2, r1, r2
   1df90:	add	r3, r3, r2
   1df94:	str	r3, [sp, #32]
   1df98:	ldr	r3, [sp, #32]
   1df9c:	lsl	r2, r3, #1
   1dfa0:	ldr	r3, [sp, #120]	; 0x78
   1dfa4:	ldrsh	r3, [r3, r2]
   1dfa8:	ldr	r2, [pc, #716]	; 1e27c <readstat_parse_sas_commands+0x504>
   1dfac:	str	r3, [sp, #44]	; 0x2c
   1dfb0:	ldr	r3, [sp, #32]
   1dfb4:	add	r2, pc, r2
   1dfb8:	add	r3, r2, r3
   1dfbc:	ldrb	r3, [r3, #-976]	; 0xfffffc30
   1dfc0:	cmp	r3, #0
   1dfc4:	beq	1e000 <readstat_parse_sas_commands+0x288>
   1dfc8:	ldr	r2, [sp, #68]	; 0x44
   1dfcc:	add	sl, r2, r3
   1dfd0:	ldrb	r3, [r2, r3]
   1dfd4:	add	r3, sl, r3
   1dfd8:	str	r3, [sp, #32]
   1dfdc:	ldr	r3, [pc, #668]	; 1e280 <readstat_parse_sas_commands+0x508>
   1dfe0:	add	r3, pc, r3
   1dfe4:	str	r3, [sp, #124]	; 0x7c
   1dfe8:	ldr	r3, [pc, #660]	; 1e284 <readstat_parse_sas_commands+0x50c>
   1dfec:	add	r3, pc, r3
   1dff0:	str	r3, [sp, #128]	; 0x80
   1dff4:	ldr	r3, [sp, #32]
   1dff8:	cmp	r3, sl
   1dffc:	bne	1e0d4 <readstat_parse_sas_commands+0x35c>
   1e000:	ldr	r3, [sp, #44]	; 0x2c
   1e004:	cmp	r3, #0
   1e008:	beq	1e4f4 <readstat_parse_sas_commands+0x77c>
   1e00c:	ldr	r3, [sp, #96]	; 0x60
   1e010:	add	r4, r4, #1
   1e014:	cmp	r3, r4
   1e018:	bne	1df08 <readstat_parse_sas_commands+0x190>
   1e01c:	ldr	r3, [pc, #612]	; 1e288 <readstat_parse_sas_commands+0x510>
   1e020:	ldr	r2, [sp, #44]	; 0x2c
   1e024:	cmp	r2, r3
   1e028:	ble	1e500 <readstat_parse_sas_commands+0x788>
   1e02c:	ldr	r2, [sp, #100]	; 0x64
   1e030:	mov	r1, r5
   1e034:	ldr	r0, [sp, #40]	; 0x28
   1e038:	bl	3f7c <submit_columns@plt>
   1e03c:	mov	r3, r0
   1e040:	b	1e3d8 <readstat_parse_sas_commands+0x660>
   1e044:	ldr	r3, [sp, #32]
   1e048:	add	r2, r2, lr
   1e04c:	add	r3, r3, lr
   1e050:	str	r3, [sp, #32]
   1e054:	ldr	r1, [pc, #560]	; 1e28c <readstat_parse_sas_commands+0x514>
   1e058:	ldr	r3, [sp, #44]	; 0x2c
   1e05c:	add	r1, pc, r1
   1e060:	add	r1, r1, r3
   1e064:	ldrb	sl, [r1, #2800]	; 0xaf0
   1e068:	cmp	sl, #0
   1e06c:	beq	1df98 <readstat_parse_sas_commands+0x220>
   1e070:	add	lr, r2, sl, lsl #1
   1e074:	sub	lr, lr, #2
   1e078:	mov	ip, r2
   1e07c:	cmp	ip, lr
   1e080:	bhi	1e0c8 <readstat_parse_sas_commands+0x350>
   1e084:	sub	r0, lr, ip
   1e088:	ldrb	r3, [r4]
   1e08c:	asr	r0, r0, #1
   1e090:	bic	r0, r0, #1
   1e094:	add	r1, ip, r0
   1e098:	ldrb	r0, [ip, r0]
   1e09c:	cmp	r0, r3
   1e0a0:	subhi	lr, r1, #2
   1e0a4:	bhi	1e07c <readstat_parse_sas_commands+0x304>
   1e0a8:	ldrb	r0, [r1, #1]
   1e0ac:	cmp	r0, r3
   1e0b0:	addcc	ip, r1, #2
   1e0b4:	bcc	1e07c <readstat_parse_sas_commands+0x304>
   1e0b8:	sub	r2, r1, r2
   1e0bc:	ldr	r3, [sp, #32]
   1e0c0:	add	r3, r3, r2, asr #1
   1e0c4:	b	1df94 <readstat_parse_sas_commands+0x21c>
   1e0c8:	ldr	r3, [sp, #32]
   1e0cc:	add	r3, r3, sl
   1e0d0:	b	1df94 <readstat_parse_sas_commands+0x21c>
   1e0d4:	ldrb	r3, [sl, #1]!
   1e0d8:	cmp	r3, #34	; 0x22
   1e0dc:	addls	pc, pc, r3, lsl #2
   1e0e0:	b	1dff4 <readstat_parse_sas_commands+0x27c>
   1e0e4:	b	1e170 <readstat_parse_sas_commands+0x3f8>
   1e0e8:	b	1e17c <readstat_parse_sas_commands+0x404>
   1e0ec:	b	1e19c <readstat_parse_sas_commands+0x424>
   1e0f0:	b	1e1f4 <readstat_parse_sas_commands+0x47c>
   1e0f4:	b	1e204 <readstat_parse_sas_commands+0x48c>
   1e0f8:	b	1e210 <readstat_parse_sas_commands+0x498>
   1e0fc:	b	1e21c <readstat_parse_sas_commands+0x4a4>
   1e100:	b	1e224 <readstat_parse_sas_commands+0x4ac>
   1e104:	b	1e23c <readstat_parse_sas_commands+0x4c4>
   1e108:	b	1e250 <readstat_parse_sas_commands+0x4d8>
   1e10c:	b	1e29c <readstat_parse_sas_commands+0x524>
   1e110:	b	1e2b0 <readstat_parse_sas_commands+0x538>
   1e114:	b	1e2c8 <readstat_parse_sas_commands+0x550>
   1e118:	b	1e310 <readstat_parse_sas_commands+0x598>
   1e11c:	b	1e33c <readstat_parse_sas_commands+0x5c4>
   1e120:	b	1e34c <readstat_parse_sas_commands+0x5d4>
   1e124:	b	1e36c <readstat_parse_sas_commands+0x5f4>
   1e128:	b	1e390 <readstat_parse_sas_commands+0x618>
   1e12c:	b	1e430 <readstat_parse_sas_commands+0x6b8>
   1e130:	b	1e438 <readstat_parse_sas_commands+0x6c0>
   1e134:	b	1e430 <readstat_parse_sas_commands+0x6b8>
   1e138:	b	1e438 <readstat_parse_sas_commands+0x6c0>
   1e13c:	b	1e41c <readstat_parse_sas_commands+0x6a4>
   1e140:	b	1e430 <readstat_parse_sas_commands+0x6b8>
   1e144:	b	1e438 <readstat_parse_sas_commands+0x6c0>
   1e148:	b	1e444 <readstat_parse_sas_commands+0x6cc>
   1e14c:	b	1e460 <readstat_parse_sas_commands+0x6e8>
   1e150:	b	1e46c <readstat_parse_sas_commands+0x6f4>
   1e154:	b	1e478 <readstat_parse_sas_commands+0x700>
   1e158:	b	1e480 <readstat_parse_sas_commands+0x708>
   1e15c:	b	1e480 <readstat_parse_sas_commands+0x708>
   1e160:	b	1e488 <readstat_parse_sas_commands+0x710>
   1e164:	b	1e490 <readstat_parse_sas_commands+0x718>
   1e168:	b	1e498 <readstat_parse_sas_commands+0x720>
   1e16c:	b	1e4a4 <readstat_parse_sas_commands+0x72c>
   1e170:	mov	r8, #0
   1e174:	mov	r9, r8
   1e178:	b	1dff4 <readstat_parse_sas_commands+0x27c>
   1e17c:	mov	r1, #10
   1e180:	umull	r2, r3, r8, r1
   1e184:	mla	r3, r1, r9, r3
   1e188:	ldrb	r1, [r4]
   1e18c:	sub	r1, r1, #48	; 0x30
   1e190:	adds	r8, r2, r1
   1e194:	adc	r9, r3, r1, asr #31
   1e198:	b	1dff4 <readstat_parse_sas_commands+0x27c>
   1e19c:	ldrb	r2, [r4]
   1e1a0:	sub	r3, r2, #48	; 0x30
   1e1a4:	uxtb	r1, r3
   1e1a8:	cmp	r1, #9
   1e1ac:	bls	1e1d0 <readstat_parse_sas_commands+0x458>
   1e1b0:	sub	r3, r2, #65	; 0x41
   1e1b4:	cmp	r3, #5
   1e1b8:	subls	r3, r2, #55	; 0x37
   1e1bc:	bls	1e1d0 <readstat_parse_sas_commands+0x458>
   1e1c0:	sub	r3, r2, #97	; 0x61
   1e1c4:	cmp	r3, #5
   1e1c8:	subls	r3, r2, #87	; 0x57
   1e1cc:	movhi	r3, #0
   1e1d0:	lsl	r2, r9, #4
   1e1d4:	orr	r2, r2, r8, lsr #28
   1e1d8:	str	r2, [sp, #60]	; 0x3c
   1e1dc:	lsl	r2, r8, #4
   1e1e0:	str	r2, [sp, #56]	; 0x38
   1e1e4:	ldrd	r8, [sp, #56]	; 0x38
   1e1e8:	adds	r8, r8, r3
   1e1ec:	adc	r9, r9, r3, asr #31
   1e1f0:	b	1dff4 <readstat_parse_sas_commands+0x27c>
   1e1f4:	sub	r3, r8, #1
   1e1f8:	str	r3, [sp, #92]	; 0x5c
   1e1fc:	mov	r7, #1
   1e200:	b	1dff4 <readstat_parse_sas_commands+0x27c>
   1e204:	ldr	r3, [sp, #92]	; 0x5c
   1e208:	sub	r7, r8, r3
   1e20c:	b	1dff4 <readstat_parse_sas_commands+0x27c>
   1e210:	mov	r3, #0
   1e214:	str	r3, [sp, #84]	; 0x54
   1e218:	b	1dff4 <readstat_parse_sas_commands+0x27c>
   1e21c:	mov	r3, #5
   1e220:	b	1e214 <readstat_parse_sas_commands+0x49c>
   1e224:	ldr	r3, [sp, #36]	; 0x24
   1e228:	mov	r2, r6
   1e22c:	mov	r1, #1024	; 0x400
   1e230:	add	r0, sp, #264	; 0x108
   1e234:	bl	3eb0 <readstat_copy@plt>
   1e238:	b	1dff4 <readstat_parse_sas_commands+0x27c>
   1e23c:	ldr	r3, [sp, #36]	; 0x24
   1e240:	mov	r2, r6
   1e244:	mov	r1, #32
   1e248:	add	r0, sp, #200	; 0xc8
   1e24c:	b	1e234 <readstat_parse_sas_commands+0x4bc>
   1e250:	ldr	r3, [sp, #36]	; 0x24
   1e254:	mov	r2, r6
   1e258:	mov	r1, #32
   1e25c:	add	r0, sp, #232	; 0xe8
   1e260:	b	1e234 <readstat_parse_sas_commands+0x4bc>
   1e264:	nop			; (mov r0, r0)
   1e268:	.word	0x00000000
   1e26c:	.word	0x7ff80000
   1e270:	.word	0x00007cb4
   1e274:	.word	0x0000dc6c
   1e278:	.word	0x00005c3c
   1e27c:	.word	0x0000bb8c
   1e280:	.word	0x0000cec8
   1e284:	.word	0x0000cec5
   1e288:	.word	0x00000445
   1e28c:	.word	0x00007af4
   1e290:	.word	0x0000ca37
   1e294:	.word	0x00000446
   1e298:	.word	0x0000c9ad
   1e29c:	ldr	r3, [sp, #36]	; 0x24
   1e2a0:	mov	r2, r6
   1e2a4:	mov	r1, #32
   1e2a8:	add	r0, sp, #168	; 0xa8
   1e2ac:	b	1e234 <readstat_parse_sas_commands+0x4bc>
   1e2b0:	ldr	r3, [sp, #36]	; 0x24
   1e2b4:	mov	r2, r6
   1e2b8:	mov	r1, #32
   1e2bc:	add	r0, sp, #136	; 0x88
   1e2c0:	bl	442c <readstat_copy_lower@plt>
   1e2c4:	b	1dff4 <readstat_parse_sas_commands+0x27c>
   1e2c8:	add	r3, sp, #168	; 0xa8
   1e2cc:	ldr	r1, [sp, #124]	; 0x7c
   1e2d0:	mov	r0, r3
   1e2d4:	str	r3, [sp, #132]	; 0x84
   1e2d8:	bl	406c <strcasecmp@plt>
   1e2dc:	ldr	r3, [sp, #132]	; 0x84
   1e2e0:	ldr	r1, [sp, #128]	; 0x80
   1e2e4:	cmp	r0, #0
   1e2e8:	streq	r8, [r5, #264]	; 0x108
   1e2ec:	mov	r0, r3
   1e2f0:	bl	406c <strcasecmp@plt>
   1e2f4:	cmp	r0, #0
   1e2f8:	bne	1dff4 <readstat_parse_sas_commands+0x27c>
   1e2fc:	orrs	r3, r8, r9
   1e300:	uxtbne	r3, r8
   1e304:	ldrbeq	r3, [sp, #264]	; 0x108
   1e308:	strb	r3, [r5, #272]	; 0x110
   1e30c:	b	1dff4 <readstat_parse_sas_commands+0x27c>
   1e310:	add	r1, sp, #136	; 0x88
   1e314:	mov	r0, r5
   1e318:	bl	4120 <readstat_schema_find_or_create_entry@plt>
   1e31c:	ldr	r3, [sp, #84]	; 0x54
   1e320:	str	r3, [r0, #16]
   1e324:	ldr	r3, [sp, #88]	; 0x58
   1e328:	str	r3, [r0]
   1e32c:	ldr	r3, [sp, #92]	; 0x5c
   1e330:	str	r3, [r0, #4]
   1e334:	str	r7, [r0, #8]
   1e338:	b	1dff4 <readstat_parse_sas_commands+0x27c>
   1e33c:	add	r1, sp, #136	; 0x88
   1e340:	mov	r0, r5
   1e344:	bl	4120 <readstat_schema_find_or_create_entry@plt>
   1e348:	b	1e334 <readstat_parse_sas_commands+0x5bc>
   1e34c:	add	r1, sp, #136	; 0x88
   1e350:	mov	r0, r5
   1e354:	bl	4120 <readstat_schema_find_or_create_entry@plt>
   1e358:	mov	r3, #1024	; 0x400
   1e35c:	add	r2, sp, #264	; 0x108
   1e360:	mov	r1, r3
   1e364:	add	r0, r0, #580	; 0x244
   1e368:	b	1e234 <readstat_parse_sas_commands+0x4bc>
   1e36c:	add	r1, sp, #136	; 0x88
   1e370:	mov	r0, r5
   1e374:	bl	4120 <readstat_schema_find_or_create_entry@plt>
   1e378:	mov	r3, #32
   1e37c:	add	r2, sp, #200	; 0xc8
   1e380:	mov	r1, r3
   1e384:	add	r0, r0, #2160	; 0x870
   1e388:	add	r0, r0, #8
   1e38c:	b	1e234 <readstat_parse_sas_commands+0x4bc>
   1e390:	ldr	r3, [sp, #100]	; 0x64
   1e394:	strd	r8, [sp, #8]
   1e398:	str	r3, [sp, #24]
   1e39c:	add	r3, sp, #264	; 0x108
   1e3a0:	str	r3, [sp, #20]
   1e3a4:	add	r3, sp, #232	; 0xe8
   1e3a8:	str	r3, [sp, #16]
   1e3ac:	ldr	r3, [sp, #112]	; 0x70
   1e3b0:	vldr	d0, [sp, #72]	; 0x48
   1e3b4:	str	r3, [sp]
   1e3b8:	ldr	r3, [sp, #116]	; 0x74
   1e3bc:	ldr	r2, [sp, #48]	; 0x30
   1e3c0:	str	r3, [sp, #4]
   1e3c4:	add	r1, sp, #200	; 0xc8
   1e3c8:	ldr	r0, [sp, #40]	; 0x28
   1e3cc:	bl	4090 <submit_value_label@plt>
   1e3d0:	subs	r3, r0, #0
   1e3d4:	beq	1dff4 <readstat_parse_sas_commands+0x27c>
   1e3d8:	str	r3, [sp, #32]
   1e3dc:	ldr	r3, [sp, #40]	; 0x28
   1e3e0:	ldr	r2, [r3, #32]
   1e3e4:	ldr	r1, [r2, #4]
   1e3e8:	ldr	r0, [r2, #20]
   1e3ec:	blx	r1
   1e3f0:	mov	r0, fp
   1e3f4:	bl	3f04 <free@plt>
   1e3f8:	ldr	r3, [sp, #32]
   1e3fc:	cmp	r3, #0
   1e400:	beq	1ddc8 <readstat_parse_sas_commands+0x50>
   1e404:	ldr	r2, [sp, #52]	; 0x34
   1e408:	mov	r0, r5
   1e40c:	cmp	r2, #0
   1e410:	strne	r3, [r2]
   1e414:	bl	4000 <readstat_schema_free@plt>
   1e418:	b	1ddc4 <readstat_parse_sas_commands+0x4c>
   1e41c:	ldr	r3, [sp, #80]	; 0x50
   1e420:	str	r4, [sp, #108]	; 0x6c
   1e424:	add	r3, r3, #1
   1e428:	str	r3, [sp, #80]	; 0x50
   1e42c:	b	1dff4 <readstat_parse_sas_commands+0x27c>
   1e430:	mov	r6, r4
   1e434:	b	1dff4 <readstat_parse_sas_commands+0x27c>
   1e438:	sub	r3, r4, r6
   1e43c:	str	r3, [sp, #36]	; 0x24
   1e440:	b	1dff4 <readstat_parse_sas_commands+0x27c>
   1e444:	rsbs	r0, r8, #0
   1e448:	rsc	r1, r9, #0
   1e44c:	bl	20dc8 <__aeabi_ul2d>
   1e450:	mov	r3, #0
   1e454:	strd	r0, [sp, #72]	; 0x48
   1e458:	str	r3, [sp, #48]	; 0x30
   1e45c:	b	1dff4 <readstat_parse_sas_commands+0x27c>
   1e460:	mov	r0, r8
   1e464:	mov	r1, r9
   1e468:	b	1e44c <readstat_parse_sas_commands+0x6d4>
   1e46c:	str	r8, [sp, #112]	; 0x70
   1e470:	str	r9, [sp, #116]	; 0x74
   1e474:	b	1dff4 <readstat_parse_sas_commands+0x27c>
   1e478:	mov	r3, #2
   1e47c:	b	1e458 <readstat_parse_sas_commands+0x6e0>
   1e480:	mov	r3, #1
   1e484:	b	1e458 <readstat_parse_sas_commands+0x6e0>
   1e488:	mov	r3, #3
   1e48c:	b	1e458 <readstat_parse_sas_commands+0x6e0>
   1e490:	mov	r7, r8
   1e494:	b	1dff4 <readstat_parse_sas_commands+0x27c>
   1e498:	sub	r3, r8, #1
   1e49c:	str	r3, [sp, #88]	; 0x58
   1e4a0:	b	1dff4 <readstat_parse_sas_commands+0x27c>
   1e4a4:	mov	r3, #0
   1e4a8:	b	1e49c <readstat_parse_sas_commands+0x724>
   1e4ac:	ldrb	r3, [r4]
   1e4b0:	ldr	r2, [pc, #-552]	; 1e290 <readstat_parse_sas_commands+0x518>
   1e4b4:	add	r0, sp, #1280	; 0x500
   1e4b8:	str	r3, [sp, #4]
   1e4bc:	ldr	r3, [sp, #108]	; 0x6c
   1e4c0:	add	r2, pc, r2
   1e4c4:	sub	r4, r4, r3
   1e4c8:	ldr	r3, [sp, #80]	; 0x50
   1e4cc:	add	r4, r4, #1
   1e4d0:	str	r4, [sp]
   1e4d4:	add	r3, r3, #1
   1e4d8:	mov	r1, #1024	; 0x400
   1e4dc:	add	r0, r0, #8
   1e4e0:	bl	42c4 <snprintf@plt>
   1e4e4:	b	1e514 <readstat_parse_sas_commands+0x79c>
   1e4e8:	ldr	r3, [pc, #-604]	; 1e294 <readstat_parse_sas_commands+0x51c>
   1e4ec:	str	r3, [sp, #44]	; 0x2c
   1e4f0:	b	1e01c <readstat_parse_sas_commands+0x2a4>
   1e4f4:	ldr	r3, [sp, #96]	; 0x60
   1e4f8:	cmp	r4, r3
   1e4fc:	bne	1e4ac <readstat_parse_sas_commands+0x734>
   1e500:	ldr	r1, [pc, #-624]	; 1e298 <readstat_parse_sas_commands+0x520>
   1e504:	add	r0, sp, #1280	; 0x500
   1e508:	add	r1, pc, r1
   1e50c:	add	r0, r0, #8
   1e510:	bl	40e4 <strcpy@plt>
   1e514:	ldr	r3, [sp, #40]	; 0x28
   1e518:	ldr	r3, [r3, #24]
   1e51c:	cmp	r3, #0
   1e520:	beq	1e534 <readstat_parse_sas_commands+0x7bc>
   1e524:	add	r0, sp, #1280	; 0x500
   1e528:	ldr	r1, [sp, #100]	; 0x64
   1e52c:	add	r0, r0, #8
   1e530:	blx	r3
   1e534:	mov	r3, #5
   1e538:	b	1e3d8 <readstat_parse_sas_commands+0x660>
   1e53c:	andeq	r0, r0, r0

0001e540 <readstat_parse_spss_commands>:
   1e540:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e544:	sub	sp, sp, #2304	; 0x900
   1e548:	sub	sp, sp, #4
   1e54c:	mov	r6, r0
   1e550:	str	r3, [sp, #72]	; 0x48
   1e554:	ldr	r3, [r6, #32]
   1e558:	mov	r0, r1
   1e55c:	str	r2, [sp, #100]	; 0x64
   1e560:	ldr	r1, [r3, #20]
   1e564:	ldr	r2, [r3]
   1e568:	blx	r2
   1e56c:	cmn	r0, #1
   1e570:	bne	1e59c <readstat_parse_spss_commands+0x5c>
   1e574:	ldr	r3, [sp, #72]	; 0x48
   1e578:	cmp	r3, #0
   1e57c:	movne	r3, #1
   1e580:	ldrne	r2, [sp, #72]	; 0x48
   1e584:	strne	r3, [r2]
   1e588:	mov	r5, #0
   1e58c:	mov	r0, r5
   1e590:	add	sp, sp, #2304	; 0x900
   1e594:	add	sp, sp, #4
   1e598:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e59c:	ldr	r3, [r6, #32]
   1e5a0:	mov	r1, #2
   1e5a4:	mov	r0, #0
   1e5a8:	ldr	r4, [r3, #8]
   1e5ac:	ldr	r2, [r3, #20]
   1e5b0:	blx	r4
   1e5b4:	cmn	r0, #1
   1e5b8:	mov	r4, r0
   1e5bc:	beq	1ed10 <readstat_parse_spss_commands+0x7d0>
   1e5c0:	ldr	r3, [r6, #32]
   1e5c4:	mov	r1, #0
   1e5c8:	mov	r0, r1
   1e5cc:	ldr	r5, [r3, #8]
   1e5d0:	ldr	r2, [r3, #20]
   1e5d4:	blx	r5
   1e5d8:	mov	r0, r4
   1e5dc:	bl	415c <malloc@plt>
   1e5e0:	ldr	r3, [r6, #32]
   1e5e4:	mov	r1, r4
   1e5e8:	ldr	r5, [r3, #12]
   1e5ec:	ldr	r2, [r3, #20]
   1e5f0:	str	r0, [sp, #52]	; 0x34
   1e5f4:	blx	r5
   1e5f8:	ldr	r3, [sp, #52]	; 0x34
   1e5fc:	mov	r1, #280	; 0x118
   1e600:	add	r3, r3, r4
   1e604:	mov	r0, #1
   1e608:	str	r3, [sp, #96]	; 0x60
   1e60c:	bl	3d9c <calloc@plt>
   1e610:	subs	r5, r0, #0
   1e614:	moveq	r8, #3
   1e618:	beq	1eba4 <readstat_parse_spss_commands+0x664>
   1e61c:	mov	r3, #1
   1e620:	str	r3, [r5, #256]	; 0x100
   1e624:	ldr	r2, [sp, #96]	; 0x60
   1e628:	ldr	r3, [sp, #52]	; 0x34
   1e62c:	cmp	r3, r2
   1e630:	beq	1ed24 <readstat_parse_spss_commands+0x7e4>
   1e634:	str	r3, [sp, #116]	; 0x74
   1e638:	mov	r4, r3
   1e63c:	mov	r2, #0
   1e640:	mov	r3, #0
   1e644:	vldr	d7, [pc, #988]	; 1ea28 <readstat_parse_spss_commands+0x4e8>
   1e648:	strd	r2, [sp, #32]
   1e64c:	ldr	r3, [sp, #32]
   1e650:	mov	r7, #0
   1e654:	str	r3, [sp, #124]	; 0x7c
   1e658:	ldr	r3, [sp, #36]	; 0x24
   1e65c:	vstr	d7, [sp, #88]	; 0x58
   1e660:	str	r3, [sp, #128]	; 0x80
   1e664:	mov	r3, #628	; 0x274
   1e668:	str	r3, [sp, #44]	; 0x2c
   1e66c:	ldr	r3, [pc, #956]	; 1ea30 <readstat_parse_spss_commands+0x4f0>
   1e670:	mov	sl, #5
   1e674:	add	r3, pc, r3
   1e678:	str	r3, [sp, #120]	; 0x78
   1e67c:	add	r3, r3, #3024	; 0xbd0
   1e680:	add	r3, r3, #12
   1e684:	str	r3, [sp, #136]	; 0x88
   1e688:	ldr	r3, [pc, #932]	; 1ea34 <readstat_parse_spss_commands+0x4f4>
   1e68c:	mov	fp, r7
   1e690:	add	r3, pc, r3
   1e694:	str	r3, [sp, #104]	; 0x68
   1e698:	sub	r3, r3, #3872	; 0xf20
   1e69c:	sub	r3, r3, #12
   1e6a0:	str	r3, [sp, #108]	; 0x6c
   1e6a4:	ldr	r3, [pc, #908]	; 1ea38 <readstat_parse_spss_commands+0x4f8>
   1e6a8:	str	r7, [sp, #56]	; 0x38
   1e6ac:	add	r3, pc, r3
   1e6b0:	str	r3, [sp, #156]	; 0x9c
   1e6b4:	ldr	r3, [sp, #104]	; 0x68
   1e6b8:	str	r7, [sp, #68]	; 0x44
   1e6bc:	sub	r3, r3, #1344	; 0x540
   1e6c0:	sub	r3, r3, #12
   1e6c4:	str	r7, [sp, #64]	; 0x40
   1e6c8:	str	r7, [sp, #76]	; 0x4c
   1e6cc:	str	r7, [sp, #60]	; 0x3c
   1e6d0:	str	r7, [sp, #84]	; 0x54
   1e6d4:	str	r7, [sp, #48]	; 0x30
   1e6d8:	str	r3, [sp, #112]	; 0x70
   1e6dc:	ldr	r3, [sp, #44]	; 0x2c
   1e6e0:	ldr	r2, [sp, #136]	; 0x88
   1e6e4:	ldr	r1, [sp, #120]	; 0x78
   1e6e8:	lsl	r3, r3, #1
   1e6ec:	ldr	r0, [sp, #44]	; 0x2c
   1e6f0:	ldrsh	r2, [r2, r3]
   1e6f4:	add	r2, r1, r2
   1e6f8:	ldr	r1, [sp, #108]	; 0x6c
   1e6fc:	ldrsh	r3, [r1, r3]
   1e700:	ldr	r1, [sp, #104]	; 0x68
   1e704:	add	r1, r1, r0
   1e708:	ldrb	lr, [r1, #-2620]	; 0xfffff5c4
   1e70c:	cmp	lr, #0
   1e710:	beq	1e820 <readstat_parse_spss_commands+0x2e0>
   1e714:	sub	ip, lr, #1
   1e718:	add	ip, r2, ip
   1e71c:	mov	r0, r2
   1e720:	cmp	r0, ip
   1e724:	bhi	1e818 <readstat_parse_spss_commands+0x2d8>
   1e728:	sub	r8, ip, r0
   1e72c:	ldrb	r9, [r4]
   1e730:	add	r1, r0, r8, asr #1
   1e734:	ldrb	r8, [r0, r8, asr #1]
   1e738:	cmp	r9, r8
   1e73c:	subcc	ip, r1, #1
   1e740:	bcc	1e720 <readstat_parse_spss_commands+0x1e0>
   1e744:	addhi	r0, r1, #1
   1e748:	bhi	1e720 <readstat_parse_spss_commands+0x1e0>
   1e74c:	sub	r2, r1, r2
   1e750:	add	r3, r3, r2
   1e754:	ldr	r1, [sp, #112]	; 0x70
   1e758:	lsl	r2, r3, #1
   1e75c:	ldrsh	r2, [r1, r2]
   1e760:	str	r2, [sp, #44]	; 0x2c
   1e764:	ldr	r2, [pc, #720]	; 1ea3c <readstat_parse_spss_commands+0x4fc>
   1e768:	add	r2, pc, r2
   1e76c:	add	r3, r2, r3
   1e770:	ldrb	r1, [r3, #-2968]	; 0xfffff468
   1e774:	cmp	r1, #0
   1e778:	beq	1e7cc <readstat_parse_spss_commands+0x28c>
   1e77c:	add	r3, r2, #316	; 0x13c
   1e780:	add	r3, r3, #2
   1e784:	add	r2, r3, r1
   1e788:	ldrb	r3, [r3, r1]
   1e78c:	str	r2, [sp, #80]	; 0x50
   1e790:	add	r3, r2, r3
   1e794:	str	r3, [sp, #132]	; 0x84
   1e798:	ldr	r3, [pc, #672]	; 1ea40 <readstat_parse_spss_commands+0x500>
   1e79c:	add	r3, pc, r3
   1e7a0:	str	r3, [sp, #144]	; 0x90
   1e7a4:	ldr	r3, [pc, #664]	; 1ea44 <readstat_parse_spss_commands+0x504>
   1e7a8:	add	r3, pc, r3
   1e7ac:	str	r3, [sp, #148]	; 0x94
   1e7b0:	ldr	r3, [pc, #656]	; 1ea48 <readstat_parse_spss_commands+0x508>
   1e7b4:	add	r3, pc, r3
   1e7b8:	str	r3, [sp, #152]	; 0x98
   1e7bc:	ldr	r3, [sp, #132]	; 0x84
   1e7c0:	ldr	r2, [sp, #80]	; 0x50
   1e7c4:	cmp	r3, r2
   1e7c8:	bne	1e894 <readstat_parse_spss_commands+0x354>
   1e7cc:	ldr	r3, [sp, #44]	; 0x2c
   1e7d0:	cmp	r3, #0
   1e7d4:	beq	1ed44 <readstat_parse_spss_commands+0x804>
   1e7d8:	ldr	r3, [sp, #96]	; 0x60
   1e7dc:	add	r4, r4, #1
   1e7e0:	cmp	r3, r4
   1e7e4:	bne	1e6dc <readstat_parse_spss_commands+0x19c>
   1e7e8:	ldr	r2, [pc, #604]	; 1ea4c <readstat_parse_spss_commands+0x50c>
   1e7ec:	ldr	r1, [sp, #44]	; 0x2c
   1e7f0:	add	r2, pc, r2
   1e7f4:	add	r3, r2, #316	; 0x13c
   1e7f8:	add	r2, r2, r1
   1e7fc:	add	r3, r3, #2
   1e800:	ldrb	r2, [r2, #481]	; 0x1e1
   1e804:	add	r8, sp, #160	; 0xa0
   1e808:	add	r4, r3, r2
   1e80c:	ldrb	r7, [r3, r2]
   1e810:	add	r7, r4, r7
   1e814:	b	1ecac <readstat_parse_spss_commands+0x76c>
   1e818:	add	r2, r2, lr
   1e81c:	add	r3, r3, lr
   1e820:	ldr	r1, [sp, #156]	; 0x9c
   1e824:	ldr	r0, [sp, #44]	; 0x2c
   1e828:	add	r1, r1, r0
   1e82c:	ldrb	r8, [r1, #-1988]	; 0xfffff83c
   1e830:	cmp	r8, #0
   1e834:	beq	1e754 <readstat_parse_spss_commands+0x214>
   1e838:	add	lr, r2, r8, lsl #1
   1e83c:	sub	lr, lr, #2
   1e840:	mov	ip, r2
   1e844:	cmp	ip, lr
   1e848:	bhi	1e88c <readstat_parse_spss_commands+0x34c>
   1e84c:	sub	r0, lr, ip
   1e850:	ldrb	r9, [r4]
   1e854:	asr	r0, r0, #1
   1e858:	bic	r0, r0, #1
   1e85c:	add	r1, ip, r0
   1e860:	ldrb	r0, [ip, r0]
   1e864:	cmp	r0, r9
   1e868:	subhi	lr, r1, #2
   1e86c:	bhi	1e844 <readstat_parse_spss_commands+0x304>
   1e870:	ldrb	r0, [r1, #1]
   1e874:	cmp	r0, r9
   1e878:	addcc	ip, r1, #2
   1e87c:	bcc	1e844 <readstat_parse_spss_commands+0x304>
   1e880:	sub	r2, r1, r2
   1e884:	add	r3, r3, r2, asr #1
   1e888:	b	1e754 <readstat_parse_spss_commands+0x214>
   1e88c:	add	r3, r3, r8
   1e890:	b	1e754 <readstat_parse_spss_commands+0x214>
   1e894:	ldr	r2, [sp, #80]	; 0x50
   1e898:	ldrb	r3, [r2, #1]!
   1e89c:	str	r2, [sp, #80]	; 0x50
   1e8a0:	cmp	r3, #35	; 0x23
   1e8a4:	addls	pc, pc, r3, lsl #2
   1e8a8:	b	1e7bc <readstat_parse_spss_commands+0x27c>
   1e8ac:	b	1e93c <readstat_parse_spss_commands+0x3fc>
   1e8b0:	b	1e94c <readstat_parse_spss_commands+0x40c>
   1e8b4:	b	1e978 <readstat_parse_spss_commands+0x438>
   1e8b8:	b	1e990 <readstat_parse_spss_commands+0x450>
   1e8bc:	b	1e9a0 <readstat_parse_spss_commands+0x460>
   1e8c0:	b	1e9b8 <readstat_parse_spss_commands+0x478>
   1e8c4:	b	1e9cc <readstat_parse_spss_commands+0x48c>
   1e8c8:	b	1e9e4 <readstat_parse_spss_commands+0x4a4>
   1e8cc:	b	1e9f8 <readstat_parse_spss_commands+0x4b8>
   1e8d0:	b	1ea5c <readstat_parse_spss_commands+0x51c>
   1e8d4:	b	1ea7c <readstat_parse_spss_commands+0x53c>
   1e8d8:	b	1ea88 <readstat_parse_spss_commands+0x548>
   1e8dc:	b	1ea9c <readstat_parse_spss_commands+0x55c>
   1e8e0:	b	1ead8 <readstat_parse_spss_commands+0x598>
   1e8e4:	b	1eb40 <readstat_parse_spss_commands+0x600>
   1e8e8:	b	1ebf0 <readstat_parse_spss_commands+0x6b0>
   1e8ec:	b	1ebf8 <readstat_parse_spss_commands+0x6b8>
   1e8f0:	b	1ebf0 <readstat_parse_spss_commands+0x6b0>
   1e8f4:	b	1ebf8 <readstat_parse_spss_commands+0x6b8>
   1e8f8:	b	1ebdc <readstat_parse_spss_commands+0x69c>
   1e8fc:	b	1ebf0 <readstat_parse_spss_commands+0x6b0>
   1e900:	b	1ebf8 <readstat_parse_spss_commands+0x6b8>
   1e904:	b	1ec04 <readstat_parse_spss_commands+0x6c4>
   1e908:	b	1ec04 <readstat_parse_spss_commands+0x6c4>
   1e90c:	b	1ec1c <readstat_parse_spss_commands+0x6dc>
   1e910:	b	1ec1c <readstat_parse_spss_commands+0x6dc>
   1e914:	b	1ec04 <readstat_parse_spss_commands+0x6c4>
   1e918:	b	1ec0c <readstat_parse_spss_commands+0x6cc>
   1e91c:	b	1ec1c <readstat_parse_spss_commands+0x6dc>
   1e920:	b	1ec1c <readstat_parse_spss_commands+0x6dc>
   1e924:	b	1ec24 <readstat_parse_spss_commands+0x6e4>
   1e928:	b	1ec30 <readstat_parse_spss_commands+0x6f0>
   1e92c:	b	1ec4c <readstat_parse_spss_commands+0x70c>
   1e930:	b	1ec54 <readstat_parse_spss_commands+0x714>
   1e934:	b	1ec68 <readstat_parse_spss_commands+0x728>
   1e938:	b	1ec70 <readstat_parse_spss_commands+0x730>
   1e93c:	mov	r2, #0
   1e940:	mov	r3, #0
   1e944:	strd	r2, [sp, #32]
   1e948:	b	1e7bc <readstat_parse_spss_commands+0x27c>
   1e94c:	ldr	r3, [sp, #32]
   1e950:	mov	r1, #10
   1e954:	ldr	r0, [sp, #36]	; 0x24
   1e958:	umull	r2, r3, r3, r1
   1e95c:	mla	r3, r1, r0, r3
   1e960:	ldrb	r1, [r4]
   1e964:	sub	r1, r1, #48	; 0x30
   1e968:	adds	r8, r2, r1
   1e96c:	adc	r9, r3, r1, asr #31
   1e970:	strd	r8, [sp, #32]
   1e974:	b	1e7bc <readstat_parse_spss_commands+0x27c>
   1e978:	ldr	r3, [sp, #32]
   1e97c:	sub	r3, r3, #1
   1e980:	str	r3, [sp, #60]	; 0x3c
   1e984:	mov	r3, #1
   1e988:	str	r3, [sp, #64]	; 0x40
   1e98c:	b	1e7bc <readstat_parse_spss_commands+0x27c>
   1e990:	ldr	r3, [sp, #32]
   1e994:	ldr	r2, [sp, #60]	; 0x3c
   1e998:	sub	r3, r3, r2
   1e99c:	b	1e988 <readstat_parse_spss_commands+0x448>
   1e9a0:	ldr	r3, [sp, #48]	; 0x30
   1e9a4:	mov	r2, fp
   1e9a8:	mov	r1, #1024	; 0x400
   1e9ac:	add	r0, sp, #256	; 0x100
   1e9b0:	bl	4078 <readstat_copy_quoted@plt>
   1e9b4:	b	1e7bc <readstat_parse_spss_commands+0x27c>
   1e9b8:	ldr	r3, [sp, #48]	; 0x30
   1e9bc:	mov	r2, fp
   1e9c0:	mov	r1, #32
   1e9c4:	add	r0, sp, #224	; 0xe0
   1e9c8:	b	1e9b0 <readstat_parse_spss_commands+0x470>
   1e9cc:	ldr	r3, [sp, #48]	; 0x30
   1e9d0:	mov	r2, fp
   1e9d4:	mov	r1, #32
   1e9d8:	add	r0, sp, #160	; 0xa0
   1e9dc:	bl	3eb0 <readstat_copy@plt>
   1e9e0:	b	1e7bc <readstat_parse_spss_commands+0x27c>
   1e9e4:	ldr	r3, [sp, #48]	; 0x30
   1e9e8:	mov	r2, fp
   1e9ec:	mov	r1, #32
   1e9f0:	add	r0, sp, #192	; 0xc0
   1e9f4:	b	1e9dc <readstat_parse_spss_commands+0x49c>
   1e9f8:	add	r1, sp, #160	; 0xa0
   1e9fc:	mov	r0, r5
   1ea00:	bl	4120 <readstat_schema_find_or_create_entry@plt>
   1ea04:	ldr	r3, [sp, #76]	; 0x4c
   1ea08:	str	r3, [r0]
   1ea0c:	ldr	r3, [sp, #60]	; 0x3c
   1ea10:	str	sl, [r0, #16]
   1ea14:	str	r3, [r0, #4]
   1ea18:	ldr	r3, [sp, #64]	; 0x40
   1ea1c:	str	r3, [r0, #8]
   1ea20:	b	1e7bc <readstat_parse_spss_commands+0x27c>
   1ea24:	nop			; (mov r0, r0)
   1ea28:	.word	0x00000000
   1ea2c:	.word	0x7ff80000
   1ea30:	.word	0x0000c8c2
   1ea34:	.word	0x0000e89e
   1ea38:	.word	0x0000e882
   1ea3c:	.word	0x000107be
   1ea40:	.word	0x000038a7
   1ea44:	.word	0x0000389b
   1ea48:	.word	0x00010bcb
   1ea4c:	.word	0x00010736
   1ea50:	.word	0x000108d9
   1ea54:	.word	0x000106eb
   1ea58:	.word	0x0001063c
   1ea5c:	add	r1, sp, #160	; 0xa0
   1ea60:	mov	r0, r5
   1ea64:	bl	4120 <readstat_schema_find_or_create_entry@plt>
   1ea68:	mov	r3, #1024	; 0x400
   1ea6c:	add	r2, sp, #256	; 0x100
   1ea70:	mov	r1, r3
   1ea74:	add	r0, r0, #580	; 0x244
   1ea78:	b	1e9dc <readstat_parse_spss_commands+0x49c>
   1ea7c:	mov	r3, #0
   1ea80:	str	r3, [sp, #68]	; 0x44
   1ea84:	b	1e7bc <readstat_parse_spss_commands+0x27c>
   1ea88:	ldr	r3, [sp, #68]	; 0x44
   1ea8c:	cmp	r3, #1024	; 0x400
   1ea90:	bge	1e7bc <readstat_parse_spss_commands+0x27c>
   1ea94:	add	r3, r3, #1
   1ea98:	b	1ea80 <readstat_parse_spss_commands+0x540>
   1ea9c:	add	r8, sp, #192	; 0xc0
   1eaa0:	ldr	r1, [sp, #152]	; 0x98
   1eaa4:	mov	r0, r8
   1eaa8:	bl	406c <strcasecmp@plt>
   1eaac:	ldr	r1, [pc, #-100]	; 1ea50 <readstat_parse_spss_commands+0x510>
   1eab0:	add	r1, pc, r1
   1eab4:	cmp	r0, #0
   1eab8:	mov	r0, r8
   1eabc:	ldreq	r3, [sp, #32]
   1eac0:	streq	r3, [r5, #264]	; 0x108
   1eac4:	bl	406c <strcasecmp@plt>
   1eac8:	cmp	r0, #0
   1eacc:	ldrbeq	r3, [sp, #256]	; 0x100
   1ead0:	strbeq	r3, [r5, #272]	; 0x110
   1ead4:	b	1e7bc <readstat_parse_spss_commands+0x27c>
   1ead8:	add	r3, r7, #1
   1eadc:	mov	r9, r3
   1eae0:	mov	r3, r7
   1eae4:	add	r7, sp, #1280	; 0x500
   1eae8:	ldr	r2, [sp, #148]	; 0x94
   1eaec:	mov	r1, #256	; 0x100
   1eaf0:	mov	r0, r7
   1eaf4:	mov	r8, #0
   1eaf8:	bl	42c4 <snprintf@plt>
   1eafc:	add	r3, sp, #160	; 0xa0
   1eb00:	str	r3, [sp, #140]	; 0x8c
   1eb04:	ldr	r3, [sp, #68]	; 0x44
   1eb08:	cmp	r8, r3
   1eb0c:	moveq	r7, r9
   1eb10:	beq	1e7bc <readstat_parse_spss_commands+0x27c>
   1eb14:	ldr	r1, [sp, #140]	; 0x8c
   1eb18:	mov	r0, r5
   1eb1c:	bl	4120 <readstat_schema_find_or_create_entry@plt>
   1eb20:	mov	r3, #256	; 0x100
   1eb24:	mov	r2, r7
   1eb28:	mov	r1, #32
   1eb2c:	add	r8, r8, #1
   1eb30:	add	r0, r0, #2160	; 0x870
   1eb34:	add	r0, r0, #8
   1eb38:	bl	3eb0 <readstat_copy@plt>
   1eb3c:	b	1eb04 <readstat_parse_spss_commands+0x5c4>
   1eb40:	add	r8, sp, #1280	; 0x500
   1eb44:	mov	r3, r7
   1eb48:	ldr	r2, [sp, #144]	; 0x90
   1eb4c:	mov	r1, #256	; 0x100
   1eb50:	mov	r0, r8
   1eb54:	bl	42c4 <snprintf@plt>
   1eb58:	ldr	r3, [sp, #100]	; 0x64
   1eb5c:	mov	r1, r8
   1eb60:	str	r3, [sp, #24]
   1eb64:	add	r3, sp, #256	; 0x100
   1eb68:	str	r3, [sp, #20]
   1eb6c:	add	r3, sp, #224	; 0xe0
   1eb70:	str	r3, [sp, #16]
   1eb74:	ldrd	r2, [sp, #32]
   1eb78:	vldr	d0, [sp, #88]	; 0x58
   1eb7c:	mov	r0, r6
   1eb80:	strd	r2, [sp, #8]
   1eb84:	ldr	r3, [sp, #124]	; 0x7c
   1eb88:	ldr	r2, [sp, #56]	; 0x38
   1eb8c:	str	r3, [sp]
   1eb90:	ldr	r3, [sp, #128]	; 0x80
   1eb94:	str	r3, [sp, #4]
   1eb98:	bl	4090 <submit_value_label@plt>
   1eb9c:	subs	r8, r0, #0
   1eba0:	beq	1e7bc <readstat_parse_spss_commands+0x27c>
   1eba4:	ldr	r3, [r6, #32]
   1eba8:	ldr	r2, [r3, #4]
   1ebac:	ldr	r0, [r3, #20]
   1ebb0:	blx	r2
   1ebb4:	ldr	r0, [sp, #52]	; 0x34
   1ebb8:	bl	3f04 <free@plt>
   1ebbc:	cmp	r8, #0
   1ebc0:	beq	1e58c <readstat_parse_spss_commands+0x4c>
   1ebc4:	ldr	r3, [sp, #72]	; 0x48
   1ebc8:	mov	r0, r5
   1ebcc:	cmp	r3, #0
   1ebd0:	strne	r8, [r3]
   1ebd4:	bl	4000 <readstat_schema_free@plt>
   1ebd8:	b	1e588 <readstat_parse_spss_commands+0x48>
   1ebdc:	ldr	r3, [sp, #84]	; 0x54
   1ebe0:	str	r4, [sp, #116]	; 0x74
   1ebe4:	add	r3, r3, #1
   1ebe8:	str	r3, [sp, #84]	; 0x54
   1ebec:	b	1e7bc <readstat_parse_spss_commands+0x27c>
   1ebf0:	mov	fp, r4
   1ebf4:	b	1e7bc <readstat_parse_spss_commands+0x27c>
   1ebf8:	sub	r3, r4, fp
   1ebfc:	str	r3, [sp, #48]	; 0x30
   1ec00:	b	1e7bc <readstat_parse_spss_commands+0x27c>
   1ec04:	mov	sl, #0
   1ec08:	b	1e7bc <readstat_parse_spss_commands+0x27c>
   1ec0c:	ldr	r3, [sp, #32]
   1ec10:	sub	r3, r3, #1
   1ec14:	str	r3, [sp, #76]	; 0x4c
   1ec18:	b	1e7bc <readstat_parse_spss_commands+0x27c>
   1ec1c:	mov	sl, #5
   1ec20:	b	1e7bc <readstat_parse_spss_commands+0x27c>
   1ec24:	mvn	r3, #0
   1ec28:	str	r3, [sp, #56]	; 0x38
   1ec2c:	b	1e7bc <readstat_parse_spss_commands+0x27c>
   1ec30:	ldrd	r0, [sp, #32]
   1ec34:	rsbs	r0, r0, #0
   1ec38:	rsc	r1, r1, #0
   1ec3c:	bl	20dc8 <__aeabi_ul2d>
   1ec40:	mov	r3, #0
   1ec44:	strd	r0, [sp, #88]	; 0x58
   1ec48:	b	1ec28 <readstat_parse_spss_commands+0x6e8>
   1ec4c:	ldrd	r0, [sp, #32]
   1ec50:	b	1ec3c <readstat_parse_spss_commands+0x6fc>
   1ec54:	ldr	r3, [sp, #32]
   1ec58:	str	r3, [sp, #124]	; 0x7c
   1ec5c:	ldr	r3, [sp, #36]	; 0x24
   1ec60:	str	r3, [sp, #128]	; 0x80
   1ec64:	b	1e7bc <readstat_parse_spss_commands+0x27c>
   1ec68:	mov	r3, #2
   1ec6c:	b	1ec28 <readstat_parse_spss_commands+0x6e8>
   1ec70:	mov	r3, #1
   1ec74:	b	1ec28 <readstat_parse_spss_commands+0x6e8>
   1ec78:	ldrb	r3, [r4, #1]!
   1ec7c:	cmp	r3, #8
   1ec80:	bne	1ecac <readstat_parse_spss_commands+0x76c>
   1ec84:	mov	r1, r8
   1ec88:	mov	r0, r5
   1ec8c:	bl	4120 <readstat_schema_find_or_create_entry@plt>
   1ec90:	ldr	r3, [sp, #76]	; 0x4c
   1ec94:	str	r3, [r0]
   1ec98:	ldr	r3, [sp, #60]	; 0x3c
   1ec9c:	str	sl, [r0, #16]
   1eca0:	str	r3, [r0, #4]
   1eca4:	ldr	r3, [sp, #64]	; 0x40
   1eca8:	str	r3, [r0, #8]
   1ecac:	cmp	r7, r4
   1ecb0:	bne	1ec78 <readstat_parse_spss_commands+0x738>
   1ecb4:	ldr	r3, [sp, #44]	; 0x2c
   1ecb8:	cmp	r3, #628	; 0x274
   1ecbc:	blt	1ed50 <readstat_parse_spss_commands+0x810>
   1ecc0:	ldr	r2, [sp, #100]	; 0x64
   1ecc4:	mov	r1, r5
   1ecc8:	mov	r0, r6
   1eccc:	bl	3f7c <submit_columns@plt>
   1ecd0:	mov	r8, r0
   1ecd4:	b	1eba4 <readstat_parse_spss_commands+0x664>
   1ecd8:	ldrb	r3, [r4]
   1ecdc:	ldr	r2, [pc, #-656]	; 1ea54 <readstat_parse_spss_commands+0x514>
   1ece0:	mov	r1, #1024	; 0x400
   1ece4:	str	r3, [sp, #4]
   1ece8:	ldr	r3, [sp, #116]	; 0x74
   1ecec:	add	r2, pc, r2
   1ecf0:	sub	r4, r4, r3
   1ecf4:	ldr	r3, [sp, #84]	; 0x54
   1ecf8:	add	r4, r4, #1
   1ecfc:	str	r4, [sp]
   1ed00:	add	r3, r3, #1
   1ed04:	add	r0, sp, #1280	; 0x500
   1ed08:	bl	42c4 <snprintf@plt>
   1ed0c:	b	1ed60 <readstat_parse_spss_commands+0x820>
   1ed10:	mov	r3, #0
   1ed14:	mov	r8, #15
   1ed18:	str	r3, [sp, #52]	; 0x34
   1ed1c:	mov	r5, r3
   1ed20:	b	1eba4 <readstat_parse_spss_commands+0x664>
   1ed24:	mov	r3, #0
   1ed28:	str	r3, [sp, #64]	; 0x40
   1ed2c:	str	r3, [sp, #76]	; 0x4c
   1ed30:	str	r3, [sp, #60]	; 0x3c
   1ed34:	mov	r3, #628	; 0x274
   1ed38:	mov	sl, #5
   1ed3c:	str	r3, [sp, #44]	; 0x2c
   1ed40:	b	1e7e8 <readstat_parse_spss_commands+0x2a8>
   1ed44:	ldr	r3, [sp, #96]	; 0x60
   1ed48:	cmp	r4, r3
   1ed4c:	bne	1ecd8 <readstat_parse_spss_commands+0x798>
   1ed50:	ldr	r1, [pc, #-768]	; 1ea58 <readstat_parse_spss_commands+0x518>
   1ed54:	add	r0, sp, #1280	; 0x500
   1ed58:	add	r1, pc, r1
   1ed5c:	bl	40e4 <strcpy@plt>
   1ed60:	ldr	r3, [r6, #24]
   1ed64:	cmp	r3, #0
   1ed68:	beq	1ed78 <readstat_parse_spss_commands+0x838>
   1ed6c:	ldr	r1, [sp, #100]	; 0x64
   1ed70:	add	r0, sp, #1280	; 0x500
   1ed74:	blx	r3
   1ed78:	mov	r8, #5
   1ed7c:	b	1eba4 <readstat_parse_spss_commands+0x664>

0001ed80 <readstat_schema_free>:
   1ed80:	push	{r4, lr}
   1ed84:	subs	r4, r0, #0
   1ed88:	popeq	{r4, pc}
   1ed8c:	ldr	r0, [r4, #276]	; 0x114
   1ed90:	bl	3f04 <free@plt>
   1ed94:	mov	r0, r4
   1ed98:	pop	{r4, lr}
   1ed9c:	b	3f04 <free@plt>

0001eda0 <readstat_schema_find_or_create_entry>:
   1eda0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1eda4:	mov	r5, r0
   1eda8:	ldr	r6, [r0, #268]	; 0x10c
   1edac:	mov	r8, r1
   1edb0:	mov	r7, #0
   1edb4:	mov	r9, #2208	; 0x8a0
   1edb8:	cmp	r7, r6
   1edbc:	blt	1ee2c <readstat_schema_find_or_create_entry+0x8c>
   1edc0:	add	r1, r6, #1
   1edc4:	mov	r6, #2208	; 0x8a0
   1edc8:	ldr	r0, [r5, #276]	; 0x114
   1edcc:	mul	r1, r6, r1
   1edd0:	bl	403c <realloc@plt>
   1edd4:	ldr	r4, [r5, #268]	; 0x10c
   1edd8:	mov	r2, r6
   1eddc:	mov	r1, #0
   1ede0:	mla	r4, r6, r4, r0
   1ede4:	str	r0, [r5, #276]	; 0x114
   1ede8:	mov	r0, r4
   1edec:	bl	42e8 <memset@plt>
   1edf0:	mov	r0, r8
   1edf4:	bl	424c <strlen@plt>
   1edf8:	mov	r2, r8
   1edfc:	mov	r1, #300	; 0x12c
   1ee00:	mov	r3, r0
   1ee04:	add	r0, r4, #24
   1ee08:	bl	3eb0 <readstat_copy@plt>
   1ee0c:	mov	r3, #46	; 0x2e
   1ee10:	strb	r3, [r4, #2200]	; 0x898
   1ee14:	ldr	r3, [r5, #268]	; 0x10c
   1ee18:	add	r2, r3, #1
   1ee1c:	str	r2, [r5, #268]	; 0x10c
   1ee20:	str	r3, [r4, #20]
   1ee24:	mov	r0, r4
   1ee28:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ee2c:	ldr	r4, [r5, #276]	; 0x114
   1ee30:	mov	r1, r8
   1ee34:	mla	r4, r9, r7, r4
   1ee38:	add	r0, r4, #24
   1ee3c:	bl	3e44 <strcmp@plt>
   1ee40:	cmp	r0, #0
   1ee44:	addne	r7, r7, #1
   1ee48:	bne	1edb8 <readstat_schema_find_or_create_entry+0x18>
   1ee4c:	cmp	r4, #0
   1ee50:	bne	1ee24 <readstat_schema_find_or_create_entry+0x84>
   1ee54:	b	1edc0 <readstat_schema_find_or_create_entry+0x20>

0001ee58 <readstat_parse_stata_dictionary>:
   1ee58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ee5c:	sub	sp, sp, #3312	; 0xcf0
   1ee60:	sub	sp, sp, #12
   1ee64:	mov	r9, r0
   1ee68:	str	r3, [sp, #32]
   1ee6c:	ldr	r3, [r9, #32]
   1ee70:	mov	r0, r1
   1ee74:	str	r2, [sp, #60]	; 0x3c
   1ee78:	ldr	r1, [r3, #20]
   1ee7c:	ldr	r2, [r3]
   1ee80:	blx	r2
   1ee84:	cmn	r0, #1
   1ee88:	bne	1eeb4 <readstat_parse_stata_dictionary+0x5c>
   1ee8c:	ldr	r3, [sp, #32]
   1ee90:	cmp	r3, #0
   1ee94:	movne	r3, #1
   1ee98:	ldrne	r2, [sp, #32]
   1ee9c:	strne	r3, [r2]
   1eea0:	mov	r5, #0
   1eea4:	mov	r0, r5
   1eea8:	add	sp, sp, #3312	; 0xcf0
   1eeac:	add	sp, sp, #12
   1eeb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1eeb4:	ldr	r3, [r9, #32]
   1eeb8:	mov	r1, #2
   1eebc:	mov	r0, #0
   1eec0:	ldr	r4, [r3, #8]
   1eec4:	ldr	r2, [r3, #20]
   1eec8:	blx	r4
   1eecc:	cmn	r0, #1
   1eed0:	mov	r4, r0
   1eed4:	beq	1f3f8 <readstat_parse_stata_dictionary+0x5a0>
   1eed8:	ldr	r3, [r9, #32]
   1eedc:	mov	r1, #0
   1eee0:	mov	r0, r1
   1eee4:	ldr	r5, [r3, #8]
   1eee8:	ldr	r2, [r3, #20]
   1eeec:	blx	r5
   1eef0:	mov	r0, r4
   1eef4:	bl	415c <malloc@plt>
   1eef8:	ldr	r3, [r9, #32]
   1eefc:	mov	r1, r4
   1ef00:	ldr	r5, [r3, #12]
   1ef04:	ldr	r2, [r3, #20]
   1ef08:	str	r0, [sp, #12]
   1ef0c:	blx	r5
   1ef10:	ldr	r3, [sp, #12]
   1ef14:	mov	r1, #280	; 0x118
   1ef18:	add	r3, r3, r4
   1ef1c:	mov	r0, #1
   1ef20:	str	r3, [sp, #52]	; 0x34
   1ef24:	bl	3d9c <calloc@plt>
   1ef28:	subs	r5, r0, #0
   1ef2c:	moveq	r4, #3
   1ef30:	beq	1f44c <readstat_parse_stata_dictionary+0x5f4>
   1ef34:	ldr	r2, [sp, #12]
   1ef38:	ldr	r1, [sp, #52]	; 0x34
   1ef3c:	mov	r3, #1
   1ef40:	cmp	r2, r1
   1ef44:	str	r3, [r5, #256]	; 0x100
   1ef48:	beq	1f420 <readstat_parse_stata_dictionary+0x5c8>
   1ef4c:	str	r3, [sp, #20]
   1ef50:	ldr	r3, [pc, #1324]	; 1f484 <readstat_parse_stata_dictionary+0x62c>
   1ef54:	mov	r7, #0
   1ef58:	add	r3, pc, r3
   1ef5c:	str	r3, [sp, #28]
   1ef60:	add	r3, r3, #824	; 0x338
   1ef64:	add	r3, r3, #2
   1ef68:	str	r3, [sp, #72]	; 0x48
   1ef6c:	ldr	r3, [sp, #28]
   1ef70:	mov	r4, r2
   1ef74:	add	r3, r3, #1136	; 0x470
   1ef78:	add	r3, r3, #4
   1ef7c:	str	r3, [sp, #76]	; 0x4c
   1ef80:	ldr	r3, [sp, #28]
   1ef84:	mov	r6, r7
   1ef88:	str	r3, [sp, #80]	; 0x50
   1ef8c:	mov	r8, r7
   1ef90:	add	r3, r3, #3456	; 0xd80
   1ef94:	add	r3, r3, #12
   1ef98:	str	r2, [sp, #56]	; 0x38
   1ef9c:	str	r7, [sp, #40]	; 0x28
   1efa0:	str	r7, [sp, #24]
   1efa4:	str	r7, [sp, #16]
   1efa8:	str	r7, [sp, #48]	; 0x30
   1efac:	str	r7, [sp, #36]	; 0x24
   1efb0:	str	r3, [sp, #64]	; 0x40
   1efb4:	ldr	r3, [sp, #20]
   1efb8:	ldr	r2, [sp, #72]	; 0x48
   1efbc:	ldr	r1, [sp, #28]
   1efc0:	lsl	r3, r3, #1
   1efc4:	ldr	r0, [sp, #20]
   1efc8:	ldrsh	r2, [r2, r3]
   1efcc:	add	r2, r1, r2
   1efd0:	ldr	r1, [sp, #76]	; 0x4c
   1efd4:	ldrsh	r3, [r1, r3]
   1efd8:	ldr	r1, [sp, #28]
   1efdc:	add	r1, r1, r0
   1efe0:	ldrb	lr, [r1, #1454]	; 0x5ae
   1efe4:	cmp	lr, #0
   1efe8:	beq	1f0c0 <readstat_parse_stata_dictionary+0x268>
   1efec:	sub	ip, lr, #1
   1eff0:	add	ip, r2, ip
   1eff4:	mov	r0, r2
   1eff8:	cmp	r0, ip
   1effc:	bhi	1f0b8 <readstat_parse_stata_dictionary+0x260>
   1f000:	sub	sl, ip, r0
   1f004:	ldrb	fp, [r4]
   1f008:	add	r1, r0, sl, asr #1
   1f00c:	ldrb	sl, [r0, sl, asr #1]
   1f010:	cmp	fp, sl
   1f014:	subcc	ip, r1, #1
   1f018:	bcc	1eff8 <readstat_parse_stata_dictionary+0x1a0>
   1f01c:	addhi	r0, r1, #1
   1f020:	bhi	1eff8 <readstat_parse_stata_dictionary+0x1a0>
   1f024:	sub	r2, r1, r2
   1f028:	add	r3, r3, r2
   1f02c:	ldr	r2, [sp, #80]	; 0x50
   1f030:	add	r3, r2, r3
   1f034:	ldrb	r2, [r3, #1768]	; 0x6e8
   1f038:	ldrb	r3, [r3, #2618]	; 0xa3a
   1f03c:	str	r2, [sp, #20]
   1f040:	cmp	r3, #0
   1f044:	beq	1f088 <readstat_parse_stata_dictionary+0x230>
   1f048:	ldr	r2, [sp, #64]	; 0x40
   1f04c:	add	fp, sp, #1104	; 0x450
   1f050:	add	r2, r2, r3
   1f054:	str	r2, [sp, #44]	; 0x2c
   1f058:	ldr	r2, [sp, #64]	; 0x40
   1f05c:	add	fp, fp, #8
   1f060:	ldrb	r3, [r2, r3]
   1f064:	ldr	r2, [sp, #44]	; 0x2c
   1f068:	add	r3, r2, r3
   1f06c:	str	r3, [sp, #68]	; 0x44
   1f070:	add	r3, fp, #580	; 0x244
   1f074:	str	r3, [sp, #84]	; 0x54
   1f078:	ldr	r3, [sp, #68]	; 0x44
   1f07c:	ldr	r2, [sp, #44]	; 0x2c
   1f080:	cmp	r3, r2
   1f084:	bne	1f138 <readstat_parse_stata_dictionary+0x2e0>
   1f088:	ldr	r3, [sp, #20]
   1f08c:	cmp	r3, #0
   1f090:	beq	1f414 <readstat_parse_stata_dictionary+0x5bc>
   1f094:	ldr	r3, [sp, #52]	; 0x34
   1f098:	add	r4, r4, #1
   1f09c:	cmp	r3, r4
   1f0a0:	bne	1efb4 <readstat_parse_stata_dictionary+0x15c>
   1f0a4:	ldr	r3, [sp, #20]
   1f0a8:	cmp	r3, #155	; 0x9b
   1f0ac:	movgt	r4, #0
   1f0b0:	bgt	1f44c <readstat_parse_stata_dictionary+0x5f4>
   1f0b4:	b	1f420 <readstat_parse_stata_dictionary+0x5c8>
   1f0b8:	add	r2, r2, lr
   1f0bc:	add	r3, r3, lr
   1f0c0:	ldr	r1, [pc, #960]	; 1f488 <readstat_parse_stata_dictionary+0x630>
   1f0c4:	ldr	r0, [sp, #20]
   1f0c8:	add	r1, pc, r1
   1f0cc:	add	r1, r1, r0
   1f0d0:	ldrb	sl, [r1, #1611]	; 0x64b
   1f0d4:	cmp	sl, #0
   1f0d8:	beq	1f02c <readstat_parse_stata_dictionary+0x1d4>
   1f0dc:	add	lr, r2, sl, lsl #1
   1f0e0:	sub	lr, lr, #2
   1f0e4:	mov	ip, r2
   1f0e8:	cmp	ip, lr
   1f0ec:	bhi	1f130 <readstat_parse_stata_dictionary+0x2d8>
   1f0f0:	sub	r0, lr, ip
   1f0f4:	ldrb	fp, [r4]
   1f0f8:	asr	r0, r0, #1
   1f0fc:	bic	r0, r0, #1
   1f100:	add	r1, ip, r0
   1f104:	ldrb	r0, [ip, r0]
   1f108:	cmp	r0, fp
   1f10c:	subhi	lr, r1, #2
   1f110:	bhi	1f0e8 <readstat_parse_stata_dictionary+0x290>
   1f114:	ldrb	r0, [r1, #1]
   1f118:	cmp	r0, fp
   1f11c:	addcc	ip, r1, #2
   1f120:	bcc	1f0e8 <readstat_parse_stata_dictionary+0x290>
   1f124:	sub	r2, r1, r2
   1f128:	add	r3, r3, r2, asr #1
   1f12c:	b	1f02c <readstat_parse_stata_dictionary+0x1d4>
   1f130:	add	r3, r3, sl
   1f134:	b	1f02c <readstat_parse_stata_dictionary+0x1d4>
   1f138:	ldr	r2, [sp, #44]	; 0x2c
   1f13c:	ldrb	r3, [r2, #1]!
   1f140:	str	r2, [sp, #44]	; 0x2c
   1f144:	cmp	r3, #28
   1f148:	addls	pc, pc, r3, lsl #2
   1f14c:	b	1f078 <readstat_parse_stata_dictionary+0x220>
   1f150:	b	1f1c4 <readstat_parse_stata_dictionary+0x36c>
   1f154:	b	1f1cc <readstat_parse_stata_dictionary+0x374>
   1f158:	b	1f1e0 <readstat_parse_stata_dictionary+0x388>
   1f15c:	b	1f20c <readstat_parse_stata_dictionary+0x3b4>
   1f160:	b	1f2c4 <readstat_parse_stata_dictionary+0x46c>
   1f164:	b	1f2dc <readstat_parse_stata_dictionary+0x484>
   1f168:	b	1f2f0 <readstat_parse_stata_dictionary+0x498>
   1f16c:	b	1f304 <readstat_parse_stata_dictionary+0x4ac>
   1f170:	b	1f30c <readstat_parse_stata_dictionary+0x4b4>
   1f174:	b	1f304 <readstat_parse_stata_dictionary+0x4ac>
   1f178:	b	1f30c <readstat_parse_stata_dictionary+0x4b4>
   1f17c:	b	1f304 <readstat_parse_stata_dictionary+0x4ac>
   1f180:	b	1f30c <readstat_parse_stata_dictionary+0x4b4>
   1f184:	b	1f318 <readstat_parse_stata_dictionary+0x4c0>
   1f188:	b	1f324 <readstat_parse_stata_dictionary+0x4cc>
   1f18c:	b	1f32c <readstat_parse_stata_dictionary+0x4d4>
   1f190:	b	1f338 <readstat_parse_stata_dictionary+0x4e0>
   1f194:	b	1f344 <readstat_parse_stata_dictionary+0x4ec>
   1f198:	b	1f350 <readstat_parse_stata_dictionary+0x4f8>
   1f19c:	b	1f360 <readstat_parse_stata_dictionary+0x508>
   1f1a0:	b	1f368 <readstat_parse_stata_dictionary+0x510>
   1f1a4:	b	1f374 <readstat_parse_stata_dictionary+0x51c>
   1f1a8:	b	1f380 <readstat_parse_stata_dictionary+0x528>
   1f1ac:	b	1f388 <readstat_parse_stata_dictionary+0x530>
   1f1b0:	b	1f390 <readstat_parse_stata_dictionary+0x538>
   1f1b4:	b	1f398 <readstat_parse_stata_dictionary+0x540>
   1f1b8:	b	1f3a0 <readstat_parse_stata_dictionary+0x548>
   1f1bc:	b	1f3b0 <readstat_parse_stata_dictionary+0x558>
   1f1c0:	b	1f3b8 <readstat_parse_stata_dictionary+0x560>
   1f1c4:	mov	r6, #0
   1f1c8:	b	1f078 <readstat_parse_stata_dictionary+0x220>
   1f1cc:	ldrb	r3, [r4]
   1f1d0:	mov	r2, #10
   1f1d4:	sub	r3, r3, #48	; 0x30
   1f1d8:	mla	r6, r2, r6, r3
   1f1dc:	b	1f078 <readstat_parse_stata_dictionary+0x220>
   1f1e0:	mov	r2, #2208	; 0x8a0
   1f1e4:	mov	r1, #0
   1f1e8:	mov	r0, fp
   1f1ec:	bl	42e8 <memset@plt>
   1f1f0:	mov	r3, #46	; 0x2e
   1f1f4:	strb	r3, [sp, #3312]	; 0xcf0
   1f1f8:	mov	r3, #5
   1f1fc:	str	r3, [sp, #1128]	; 0x468
   1f200:	ldr	r3, [sp, #36]	; 0x24
   1f204:	str	r3, [sp, #1132]	; 0x46c
   1f208:	b	1f078 <readstat_parse_stata_dictionary+0x220>
   1f20c:	ldr	r3, [sp, #24]
   1f210:	ldr	r2, [sp, #40]	; 0x28
   1f214:	str	r3, [sp, #1112]	; 0x458
   1f218:	ldr	r3, [sp, #40]	; 0x28
   1f21c:	ldr	sl, [r9, #8]
   1f220:	str	r3, [sp, #1116]	; 0x45c
   1f224:	ldr	r3, [sp, #1120]	; 0x460
   1f228:	cmp	sl, #0
   1f22c:	add	r3, r2, r3
   1f230:	str	r3, [sp, #40]	; 0x28
   1f234:	beq	1f270 <readstat_parse_stata_dictionary+0x418>
   1f238:	ldr	r3, [sp, #48]	; 0x30
   1f23c:	add	r1, sp, #1120	; 0x460
   1f240:	str	r3, [sp, #3276]	; 0xccc
   1f244:	mov	r2, #0
   1f248:	ldr	r3, [sp, #60]	; 0x3c
   1f24c:	add	r1, r1, #8
   1f250:	ldr	r0, [sp, #36]	; 0x24
   1f254:	blx	sl
   1f258:	cmp	r0, #1
   1f25c:	beq	1f40c <readstat_parse_stata_dictionary+0x5b4>
   1f260:	cmp	r0, #2
   1f264:	moveq	r3, #1
   1f268:	streq	r3, [sp, #1124]	; 0x464
   1f26c:	beq	1f27c <readstat_parse_stata_dictionary+0x424>
   1f270:	ldr	r3, [sp, #48]	; 0x30
   1f274:	add	r3, r3, #1
   1f278:	str	r3, [sp, #48]	; 0x30
   1f27c:	ldr	r1, [r5, #268]	; 0x10c
   1f280:	mov	sl, #2208	; 0x8a0
   1f284:	add	r1, r1, #1
   1f288:	ldr	r0, [r5, #276]	; 0x114
   1f28c:	mul	r1, sl, r1
   1f290:	bl	403c <realloc@plt>
   1f294:	ldr	r3, [r5, #268]	; 0x10c
   1f298:	mov	r1, fp
   1f29c:	add	r2, r3, #1
   1f2a0:	str	r2, [r5, #268]	; 0x10c
   1f2a4:	mov	r2, sl
   1f2a8:	str	r0, [r5, #276]	; 0x114
   1f2ac:	mla	r0, sl, r3, r0
   1f2b0:	bl	3f64 <memcpy@plt>
   1f2b4:	ldr	r3, [sp, #36]	; 0x24
   1f2b8:	add	r3, r3, #1
   1f2bc:	str	r3, [sp, #36]	; 0x24
   1f2c0:	b	1f078 <readstat_parse_stata_dictionary+0x220>
   1f2c4:	ldr	r3, [sp, #16]
   1f2c8:	mov	r2, r8
   1f2cc:	mov	r1, #255	; 0xff
   1f2d0:	mov	r0, r5
   1f2d4:	bl	3eb0 <readstat_copy@plt>
   1f2d8:	b	1f078 <readstat_parse_stata_dictionary+0x220>
   1f2dc:	ldr	r3, [sp, #16]
   1f2e0:	mov	r2, r8
   1f2e4:	mov	r1, #300	; 0x12c
   1f2e8:	add	r0, fp, #24
   1f2ec:	b	1f2d4 <readstat_parse_stata_dictionary+0x47c>
   1f2f0:	ldr	r3, [sp, #16]
   1f2f4:	mov	r2, r8
   1f2f8:	mov	r1, #1024	; 0x400
   1f2fc:	ldr	r0, [sp, #84]	; 0x54
   1f300:	b	1f2d4 <readstat_parse_stata_dictionary+0x47c>
   1f304:	mov	r8, r4
   1f308:	b	1f078 <readstat_parse_stata_dictionary+0x220>
   1f30c:	sub	r3, r4, r8
   1f310:	str	r3, [sp, #16]
   1f314:	b	1f078 <readstat_parse_stata_dictionary+0x220>
   1f318:	add	r7, r7, #1
   1f31c:	str	r4, [sp, #56]	; 0x38
   1f320:	b	1f078 <readstat_parse_stata_dictionary+0x220>
   1f324:	str	r6, [r5, #256]	; 0x100
   1f328:	b	1f078 <readstat_parse_stata_dictionary+0x220>
   1f32c:	sub	r3, r6, #1
   1f330:	str	r3, [sp, #24]
   1f334:	b	1f078 <readstat_parse_stata_dictionary+0x220>
   1f338:	sub	r3, r6, #1
   1f33c:	str	r3, [sp, #40]	; 0x28
   1f340:	b	1f078 <readstat_parse_stata_dictionary+0x220>
   1f344:	ldr	r3, [sp, #24]
   1f348:	add	r3, r3, #1
   1f34c:	b	1f330 <readstat_parse_stata_dictionary+0x4d8>
   1f350:	ldr	r2, [sp, #24]
   1f354:	sub	r3, r6, #1
   1f358:	add	r3, r2, r3
   1f35c:	b	1f330 <readstat_parse_stata_dictionary+0x4d8>
   1f360:	str	r6, [r5, #260]	; 0x104
   1f364:	b	1f078 <readstat_parse_stata_dictionary+0x220>
   1f368:	sub	r3, r6, #1
   1f36c:	str	r3, [r5, #264]	; 0x108
   1f370:	b	1f078 <readstat_parse_stata_dictionary+0x220>
   1f374:	mov	r3, #1
   1f378:	str	r3, [sp, #1128]	; 0x468
   1f37c:	b	1f078 <readstat_parse_stata_dictionary+0x220>
   1f380:	mov	r3, #2
   1f384:	b	1f378 <readstat_parse_stata_dictionary+0x520>
   1f388:	mov	r3, #3
   1f38c:	b	1f378 <readstat_parse_stata_dictionary+0x520>
   1f390:	mov	r3, #4
   1f394:	b	1f378 <readstat_parse_stata_dictionary+0x520>
   1f398:	mov	r3, #5
   1f39c:	b	1f378 <readstat_parse_stata_dictionary+0x520>
   1f3a0:	mov	r3, #0
   1f3a4:	str	r3, [sp, #1128]	; 0x468
   1f3a8:	str	r6, [sp, #2724]	; 0xaa4
   1f3ac:	b	1f078 <readstat_parse_stata_dictionary+0x220>
   1f3b0:	str	r6, [sp, #1120]	; 0x460
   1f3b4:	b	1f078 <readstat_parse_stata_dictionary+0x220>
   1f3b8:	mov	r3, #44	; 0x2c
   1f3bc:	strb	r3, [sp, #3312]	; 0xcf0
   1f3c0:	b	1f078 <readstat_parse_stata_dictionary+0x220>
   1f3c4:	ldrb	r3, [r4]
   1f3c8:	ldr	r2, [pc, #188]	; 1f48c <readstat_parse_stata_dictionary+0x634>
   1f3cc:	mov	r1, #1024	; 0x400
   1f3d0:	str	r3, [sp, #4]
   1f3d4:	ldr	r3, [sp, #56]	; 0x38
   1f3d8:	add	r2, pc, r2
   1f3dc:	sub	r4, r4, r3
   1f3e0:	add	r4, r4, #1
   1f3e4:	str	r4, [sp]
   1f3e8:	add	r3, r7, #1
   1f3ec:	add	r0, sp, #88	; 0x58
   1f3f0:	bl	42c4 <snprintf@plt>
   1f3f4:	b	1f430 <readstat_parse_stata_dictionary+0x5d8>
   1f3f8:	mov	r3, #0
   1f3fc:	mov	r4, #15
   1f400:	str	r3, [sp, #12]
   1f404:	mov	r5, r3
   1f408:	b	1f44c <readstat_parse_stata_dictionary+0x5f4>
   1f40c:	mov	r4, #4
   1f410:	b	1f44c <readstat_parse_stata_dictionary+0x5f4>
   1f414:	ldr	r3, [sp, #52]	; 0x34
   1f418:	cmp	r4, r3
   1f41c:	bne	1f3c4 <readstat_parse_stata_dictionary+0x56c>
   1f420:	ldr	r1, [pc, #104]	; 1f490 <readstat_parse_stata_dictionary+0x638>
   1f424:	add	r0, sp, #88	; 0x58
   1f428:	add	r1, pc, r1
   1f42c:	bl	40e4 <strcpy@plt>
   1f430:	ldr	r3, [r9, #24]
   1f434:	cmp	r3, #0
   1f438:	beq	1f448 <readstat_parse_stata_dictionary+0x5f0>
   1f43c:	ldr	r1, [sp, #60]	; 0x3c
   1f440:	add	r0, sp, #88	; 0x58
   1f444:	blx	r3
   1f448:	mov	r4, #5
   1f44c:	ldr	r3, [r9, #32]
   1f450:	ldr	r2, [r3, #4]
   1f454:	ldr	r0, [r3, #20]
   1f458:	blx	r2
   1f45c:	ldr	r0, [sp, #12]
   1f460:	bl	3f04 <free@plt>
   1f464:	cmp	r4, #0
   1f468:	beq	1eea4 <readstat_parse_stata_dictionary+0x4c>
   1f46c:	ldr	r3, [sp, #32]
   1f470:	mov	r0, r5
   1f474:	cmp	r3, #0
   1f478:	strne	r4, [r3]
   1f47c:	bl	4000 <readstat_schema_free@plt>
   1f480:	b	1eea0 <readstat_parse_stata_dictionary+0x48>
   1f484:	.word	0x000104be
   1f488:	.word	0x0001034e
   1f48c:	.word	0x00010e7c
   1f490:	.word	0x00010df1

0001f494 <handle_value.isra.0>:
   1f494:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f498:	add	fp, sp, #32
   1f49c:	sub	sp, sp, #52	; 0x34
   1f4a0:	mov	r7, r3
   1f4a4:	ldr	r3, [fp, #8]
   1f4a8:	str	r2, [fp, #-68]	; 0xffffffbc
   1f4ac:	sub	r5, fp, #52	; 0x34
   1f4b0:	lsl	r2, r3, #2
   1f4b4:	add	r9, r2, #1
   1f4b8:	add	r2, r2, #8
   1f4bc:	bic	r2, r2, #7
   1f4c0:	sub	sp, sp, r2
   1f4c4:	add	r3, r7, #16
   1f4c8:	mov	r2, #16
   1f4cc:	mov	r8, r0
   1f4d0:	mov	sl, r1
   1f4d4:	mov	r0, r5
   1f4d8:	mov	r1, #0
   1f4dc:	str	r3, [fp, #-64]	; 0xffffffc0
   1f4e0:	ldr	r4, [fp, #4]
   1f4e4:	bl	42e8 <memset@plt>
   1f4e8:	ldr	r0, [r7, #16]
   1f4ec:	str	r0, [fp, #-44]	; 0xffffffd4
   1f4f0:	bl	3e68 <readstat_type_class@plt>
   1f4f4:	cmp	r0, #0
   1f4f8:	bne	1f52c <handle_value.isra.0+0x98>
   1f4fc:	add	r6, sp, #16
   1f500:	str	sl, [sp]
   1f504:	ldr	r3, [fp, #8]
   1f508:	mov	r2, r4
   1f50c:	mov	r1, r9
   1f510:	mov	r0, r6
   1f514:	bl	427c <readstat_convert@plt>
   1f518:	cmp	r0, #0
   1f51c:	streq	r6, [fp, #-52]	; 0xffffffcc
   1f520:	beq	1f56c <handle_value.isra.0+0xd8>
   1f524:	sub	sp, fp, #32
   1f528:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f52c:	ldr	r3, [r7, #16]
   1f530:	sub	r1, fp, #36	; 0x24
   1f534:	mov	r2, #0
   1f538:	cmp	r3, #5
   1f53c:	str	r2, [r1, #-20]!	; 0xffffffec
   1f540:	bne	1f5a4 <handle_value.isra.0+0x110>
   1f544:	mov	r0, r4
   1f548:	bl	4348 <strtod@plt>
   1f54c:	vstr	d0, [fp, #-52]	; 0xffffffcc
   1f550:	ldrb	r3, [fp, #-39]	; 0xffffffd9
   1f554:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1f558:	bic	r3, r3, #1
   1f55c:	cmp	r2, r4
   1f560:	movne	r4, r3
   1f564:	orreq	r4, r3, #1
   1f568:	strb	r4, [fp, #-39]	; 0xffffffd9
   1f56c:	ldr	r3, [fp, #12]
   1f570:	ldr	r4, [r8]
   1f574:	str	r3, [sp, #8]
   1f578:	sub	r3, fp, #36	; 0x24
   1f57c:	ldmdb	r3, {r0, r1}
   1f580:	stm	sp, {r0, r1}
   1f584:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1f588:	ldm	r5, {r2, r3}
   1f58c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1f590:	blx	r4
   1f594:	cmp	r0, #1
   1f598:	moveq	r0, #4
   1f59c:	movne	r0, #0
   1f5a0:	b	1f524 <handle_value.isra.0+0x90>
   1f5a4:	cmp	r3, #4
   1f5a8:	bne	1f5bc <handle_value.isra.0+0x128>
   1f5ac:	mov	r0, r4
   1f5b0:	bl	4114 <strtof@plt>
   1f5b4:	vstr	s0, [fp, #-52]	; 0xffffffcc
   1f5b8:	b	1f550 <handle_value.isra.0+0xbc>
   1f5bc:	mov	r2, #10
   1f5c0:	mov	r0, r4
   1f5c4:	bl	3e74 <strtol@plt>
   1f5c8:	mov	r3, #3
   1f5cc:	str	r3, [fp, #-44]	; 0xffffffd4
   1f5d0:	str	r0, [fp, #-52]	; 0xffffffcc
   1f5d4:	b	1f550 <handle_value.isra.0+0xbc>

0001f5d8 <txt_parse_fixed_width>:
   1f5d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f5dc:	sub	sp, sp, #4160	; 0x1040
   1f5e0:	sub	sp, sp, #4
   1f5e4:	ldr	r8, [r1, #8]
   1f5e8:	ldr	r9, [r0, #32]
   1f5ec:	mov	r7, r0
   1f5f0:	mov	r5, #0
   1f5f4:	str	r3, [sp, #40]	; 0x28
   1f5f8:	add	r3, sp, #63	; 0x3f
   1f5fc:	str	r1, [sp, #28]
   1f600:	str	r2, [sp, #36]	; 0x24
   1f604:	str	r3, [sp, #48]	; 0x30
   1f608:	ldr	r3, [sp, #40]	; 0x28
   1f60c:	mov	r6, #0
   1f610:	sub	r3, r3, #4
   1f614:	str	r3, [sp, #24]
   1f618:	str	r6, [sp, #20]
   1f61c:	ldr	r3, [r8, #256]	; 0x100
   1f620:	cmp	r6, r3
   1f624:	blt	1f640 <txt_parse_fixed_width+0x68>
   1f628:	ldr	r3, [r7, #44]	; 0x2c
   1f62c:	add	r5, r5, #1
   1f630:	cmp	r5, r3
   1f634:	bne	1f608 <txt_parse_fixed_width+0x30>
   1f638:	mov	r0, #0
   1f63c:	b	1f734 <txt_parse_fixed_width+0x15c>
   1f640:	ldr	r0, [sp, #24]
   1f644:	ldr	r3, [r9, #12]
   1f648:	ldr	r2, [r9, #20]
   1f64c:	ldr	r1, [r0, #4]!
   1f650:	str	r0, [sp, #24]
   1f654:	add	r0, sp, #4160	; 0x1040
   1f658:	add	r0, r0, #40	; 0x28
   1f65c:	ldr	r0, [r0]
   1f660:	blx	r3
   1f664:	cmp	r0, #0
   1f668:	beq	1f734 <txt_parse_fixed_width+0x15c>
   1f66c:	ldr	r3, [sp, #24]
   1f670:	ldr	r3, [r3]
   1f674:	cmp	r3, r0
   1f678:	bhi	1f7b8 <txt_parse_fixed_width+0x1e0>
   1f67c:	ldr	r3, [sp, #20]
   1f680:	mov	r4, #2208	; 0x8a0
   1f684:	mul	r4, r4, r3
   1f688:	add	r3, sp, #64	; 0x40
   1f68c:	str	r3, [sp, #32]
   1f690:	add	r3, r7, #16
   1f694:	str	r3, [sp, #44]	; 0x2c
   1f698:	ldr	r3, [r8, #268]	; 0x10c
   1f69c:	ldr	r2, [sp, #20]
   1f6a0:	cmp	r2, r3
   1f6a4:	blt	1f748 <txt_parse_fixed_width+0x170>
   1f6a8:	ldr	r3, [r8, #260]	; 0x104
   1f6ac:	cmp	r3, #0
   1f6b0:	beq	1f780 <txt_parse_fixed_width+0x1a8>
   1f6b4:	add	r6, r6, #1
   1f6b8:	b	1f61c <txt_parse_fixed_width+0x44>
   1f6bc:	ldr	r3, [r7, #16]
   1f6c0:	cmp	r3, #0
   1f6c4:	beq	1f76c <txt_parse_fixed_width+0x194>
   1f6c8:	ldr	r3, [sl, #12]
   1f6cc:	cmp	r3, #0
   1f6d0:	bne	1f76c <txt_parse_fixed_width+0x194>
   1f6d4:	str	r3, [sp, #52]	; 0x34
   1f6d8:	add	r3, sp, #4160	; 0x1040
   1f6dc:	add	r3, r3, #40	; 0x28
   1f6e0:	ldr	r1, [sl, #4]
   1f6e4:	ldr	r3, [r3]
   1f6e8:	mov	r2, fp
   1f6ec:	add	r1, r3, r1
   1f6f0:	ldr	r0, [sp, #32]
   1f6f4:	bl	3f64 <memcpy@plt>
   1f6f8:	ldr	r2, [sp, #32]
   1f6fc:	ldr	r3, [sp, #52]	; 0x34
   1f700:	ldr	r1, [sp, #28]
   1f704:	strb	r3, [r2, fp]
   1f708:	ldr	r3, [sp, #36]	; 0x24
   1f70c:	str	r2, [sp]
   1f710:	str	r3, [sp, #8]
   1f714:	str	fp, [sp, #4]
   1f718:	mov	r3, sl
   1f71c:	mov	r2, r5
   1f720:	ldr	r1, [r1, #4]
   1f724:	ldr	r0, [sp, #44]	; 0x2c
   1f728:	bl	1f494 <handle_value.isra.0>
   1f72c:	cmp	r0, #0
   1f730:	beq	1f76c <txt_parse_fixed_width+0x194>
   1f734:	ldr	r3, [sp, #28]
   1f738:	str	r5, [r3]
   1f73c:	add	sp, sp, #4160	; 0x1040
   1f740:	add	sp, sp, #4
   1f744:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f748:	ldr	r3, [r8, #276]	; 0x114
   1f74c:	add	sl, r3, r4
   1f750:	ldr	r3, [r3, r4]
   1f754:	cmp	r6, r3
   1f758:	bne	1f6a8 <txt_parse_fixed_width+0xd0>
   1f75c:	ldr	fp, [sl, #8]
   1f760:	ldr	r3, [pc, #88]	; 1f7c0 <txt_parse_fixed_width+0x1e8>
   1f764:	cmp	fp, r3
   1f768:	bls	1f6bc <txt_parse_fixed_width+0xe4>
   1f76c:	ldr	r3, [sp, #20]
   1f770:	add	r4, r4, #2208	; 0x8a0
   1f774:	add	r3, r3, #1
   1f778:	str	r3, [sp, #20]
   1f77c:	b	1f698 <txt_parse_fixed_width+0xc0>
   1f780:	add	r4, sp, #64	; 0x40
   1f784:	mov	sl, #1
   1f788:	strb	r3, [r4, #-1]
   1f78c:	ldr	r3, [r9, #12]
   1f790:	ldr	r2, [r9, #20]
   1f794:	mov	r1, sl
   1f798:	ldr	r0, [sp, #48]	; 0x30
   1f79c:	blx	r3
   1f7a0:	cmp	r0, #1
   1f7a4:	bne	1f6b4 <txt_parse_fixed_width+0xdc>
   1f7a8:	ldrb	r3, [r4, #-1]
   1f7ac:	cmp	r3, #10
   1f7b0:	bne	1f78c <txt_parse_fixed_width+0x1b4>
   1f7b4:	b	1f6b4 <txt_parse_fixed_width+0xdc>
   1f7b8:	mov	r0, #2
   1f7bc:	b	1f734 <txt_parse_fixed_width+0x15c>
   1f7c0:	.word	0x00000fff

0001f7c4 <readstat_parse_txt>:
   1f7c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f7c8:	mov	r7, r0
   1f7cc:	ldr	sl, [r0, #32]
   1f7d0:	ldr	r0, [r0, #40]	; 0x28
   1f7d4:	sub	sp, sp, #124	; 0x7c
   1f7d8:	mov	r5, #0
   1f7dc:	cmp	r0, r5
   1f7e0:	mov	r4, r1
   1f7e4:	mov	r9, r2
   1f7e8:	str	r3, [sp, #24]
   1f7ec:	str	r5, [sp, #52]	; 0x34
   1f7f0:	str	r5, [sp, #56]	; 0x38
   1f7f4:	str	r2, [sp, #60]	; 0x3c
   1f7f8:	beq	1f824 <readstat_parse_txt+0x60>
   1f7fc:	ldr	r1, [r7, #36]	; 0x24
   1f800:	cmp	r1, r5
   1f804:	beq	1f824 <readstat_parse_txt+0x60>
   1f808:	bl	4180 <iconv_open@plt>
   1f80c:	cmn	r0, #1
   1f810:	strne	r0, [sp, #56]	; 0x38
   1f814:	streq	r5, [sp, #56]	; 0x38
   1f818:	moveq	r6, r5
   1f81c:	moveq	r4, #7
   1f820:	beq	1fb4c <readstat_parse_txt+0x388>
   1f824:	mov	r0, r4
   1f828:	ldr	r3, [sl]
   1f82c:	ldr	r1, [sl, #20]
   1f830:	blx	r3
   1f834:	cmn	r0, #1
   1f838:	moveq	r5, #0
   1f83c:	moveq	r6, r5
   1f840:	moveq	r4, #1
   1f844:	beq	1fb4c <readstat_parse_txt+0x388>
   1f848:	ldr	r4, [r9, #256]	; 0x100
   1f84c:	lsl	r0, r4, #2
   1f850:	bl	415c <malloc@plt>
   1f854:	subs	r6, r0, #0
   1f858:	movne	r3, #0
   1f85c:	bne	1f878 <readstat_parse_txt+0xb4>
   1f860:	mov	r5, r6
   1f864:	mov	r4, #3
   1f868:	b	1fb4c <readstat_parse_txt+0x388>
   1f86c:	ldr	r2, [r9, #260]	; 0x104
   1f870:	str	r2, [r6, r3, lsl #2]
   1f874:	add	r3, r3, #1
   1f878:	cmp	r3, r4
   1f87c:	blt	1f86c <readstat_parse_txt+0xa8>
   1f880:	ldr	r0, [r9, #268]	; 0x10c
   1f884:	mov	r3, #0
   1f888:	mov	ip, #2208	; 0x8a0
   1f88c:	cmp	r3, r0
   1f890:	blt	1f944 <readstat_parse_txt+0x180>
   1f894:	mov	r0, #0
   1f898:	mov	r3, r0
   1f89c:	cmp	r3, r4
   1f8a0:	blt	1f970 <readstat_parse_txt+0x1ac>
   1f8a4:	add	r0, r0, #2
   1f8a8:	bl	415c <malloc@plt>
   1f8ac:	subs	r5, r0, #0
   1f8b0:	beq	1f864 <readstat_parse_txt+0xa0>
   1f8b4:	ldr	r4, [r9, #264]	; 0x108
   1f8b8:	cmp	r4, #1
   1f8bc:	ble	1f8dc <readstat_parse_txt+0x118>
   1f8c0:	add	r8, sp, #120	; 0x78
   1f8c4:	sub	r4, r4, #1
   1f8c8:	mov	fp, #1
   1f8cc:	mov	r3, #0
   1f8d0:	strb	r3, [r8, #-56]!	; 0xffffffc8
   1f8d4:	subs	r4, r4, #1
   1f8d8:	bcs	1f984 <readstat_parse_txt+0x1c0>
   1f8dc:	ldrb	r3, [r9, #272]	; 0x110
   1f8e0:	cmp	r3, #0
   1f8e4:	beq	1fb94 <readstat_parse_txt+0x3d0>
   1f8e8:	mov	r0, #4096	; 0x1000
   1f8ec:	bl	415c <malloc@plt>
   1f8f0:	ldr	r3, [sp, #60]	; 0x3c
   1f8f4:	mov	fp, #0
   1f8f8:	str	r3, [sp, #20]
   1f8fc:	ldr	r3, [r7, #32]
   1f900:	str	r3, [sp, #28]
   1f904:	mov	r3, #4096	; 0x1000
   1f908:	str	r3, [sp, #36]	; 0x24
   1f90c:	mov	r8, r0
   1f910:	mov	r3, #0
   1f914:	str	r3, [sp, #16]
   1f918:	ldr	r3, [sp, #20]
   1f91c:	ldr	r2, [sp, #16]
   1f920:	ldr	r3, [r3, #268]	; 0x10c
   1f924:	cmp	r2, r3
   1f928:	blt	1f9b0 <readstat_parse_txt+0x1ec>
   1f92c:	ldr	r3, [r7, #44]	; 0x2c
   1f930:	add	fp, fp, #1
   1f934:	cmp	fp, r3
   1f938:	bne	1f910 <readstat_parse_txt+0x14c>
   1f93c:	mov	r4, #0
   1f940:	b	1fae0 <readstat_parse_txt+0x31c>
   1f944:	mul	r2, ip, r3
   1f948:	ldr	lr, [r9, #276]	; 0x114
   1f94c:	add	r3, r3, #1
   1f950:	add	r1, lr, r2
   1f954:	ldr	r2, [lr, r2]
   1f958:	ldmib	r1, {r1, lr}
   1f95c:	add	r1, r1, lr
   1f960:	ldr	lr, [r6, r2, lsl #2]
   1f964:	cmp	lr, r1
   1f968:	strcc	r1, [r6, r2, lsl #2]
   1f96c:	b	1f88c <readstat_parse_txt+0xc8>
   1f970:	ldr	r2, [r6, r3, lsl #2]
   1f974:	add	r3, r3, #1
   1f978:	cmp	r0, r2
   1f97c:	movcc	r0, r2
   1f980:	b	1f89c <readstat_parse_txt+0xd8>
   1f984:	ldr	r3, [sl, #12]
   1f988:	ldr	r2, [sl, #20]
   1f98c:	mov	r1, fp
   1f990:	mov	r0, r8
   1f994:	blx	r3
   1f998:	cmp	r0, #1
   1f99c:	bne	1f8d4 <readstat_parse_txt+0x110>
   1f9a0:	ldrb	r3, [sp, #64]	; 0x40
   1f9a4:	cmp	r3, #10
   1f9a8:	bne	1f984 <readstat_parse_txt+0x1c0>
   1f9ac:	b	1f8d4 <readstat_parse_txt+0x110>
   1f9b0:	ldr	r1, [sp, #16]
   1f9b4:	sub	r3, r3, #1
   1f9b8:	cmp	r1, r3
   1f9bc:	ldr	r2, [sp, #20]
   1f9c0:	ldrne	r3, [sp, #20]
   1f9c4:	mov	r0, #2208	; 0x8a0
   1f9c8:	ldr	r2, [r2, #276]	; 0x114
   1f9cc:	ldrbne	r3, [r3, #272]	; 0x110
   1f9d0:	mla	r2, r0, r1, r2
   1f9d4:	mov	r4, #0
   1f9d8:	moveq	r3, #10
   1f9dc:	str	r2, [sp, #32]
   1f9e0:	str	r3, [sp, #40]	; 0x28
   1f9e4:	ldr	r2, [sp, #28]
   1f9e8:	add	r3, r8, r4
   1f9ec:	mov	r0, r3
   1f9f0:	ldr	r2, [r2, #12]
   1f9f4:	str	r3, [sp, #44]	; 0x2c
   1f9f8:	mov	ip, r2
   1f9fc:	ldr	r2, [sp, #28]
   1fa00:	mov	r1, #1
   1fa04:	mov	r3, ip
   1fa08:	ldr	r2, [r2, #20]
   1fa0c:	blx	r3
   1fa10:	cmp	r0, #1
   1fa14:	bne	1fa70 <readstat_parse_txt+0x2ac>
   1fa18:	ldr	r3, [sp, #44]	; 0x2c
   1fa1c:	ldr	r2, [sp, #40]	; 0x28
   1fa20:	add	r4, r4, #1
   1fa24:	ldrb	r3, [r3]
   1fa28:	cmp	r3, r2
   1fa2c:	bne	1fa48 <readstat_parse_txt+0x284>
   1fa30:	ldr	r3, [r7, #16]
   1fa34:	cmp	r3, #0
   1fa38:	bne	1fa80 <readstat_parse_txt+0x2bc>
   1fa3c:	ldr	r3, [sp, #16]
   1fa40:	add	r3, r3, #1
   1fa44:	b	1f914 <readstat_parse_txt+0x150>
   1fa48:	ldr	r3, [sp, #36]	; 0x24
   1fa4c:	cmp	r4, r3
   1fa50:	bne	1f9e4 <readstat_parse_txt+0x220>
   1fa54:	lsl	r3, r4, #1
   1fa58:	mov	r0, r8
   1fa5c:	mov	r1, r3
   1fa60:	str	r3, [sp, #36]	; 0x24
   1fa64:	bl	403c <realloc@plt>
   1fa68:	mov	r8, r0
   1fa6c:	b	1f9e4 <readstat_parse_txt+0x220>
   1fa70:	cmn	r0, #1
   1fa74:	bne	1fbb4 <readstat_parse_txt+0x3f0>
   1fa78:	mov	r4, #2
   1fa7c:	b	1fae0 <readstat_parse_txt+0x31c>
   1fa80:	ldr	r3, [sp, #32]
   1fa84:	ldr	r3, [r3, #12]
   1fa88:	cmp	r3, #0
   1fa8c:	bne	1fa3c <readstat_parse_txt+0x278>
   1fa90:	subs	r2, r4, #1
   1fa94:	beq	1faac <readstat_parse_txt+0x2e8>
   1fa98:	add	r3, r8, r2
   1fa9c:	ldrb	r3, [r3, #-1]
   1faa0:	cmp	r3, #13
   1faa4:	subeq	r3, r4, #2
   1faa8:	movne	r3, r2
   1faac:	mov	r2, #0
   1fab0:	strb	r2, [r8, r3]
   1fab4:	ldr	r2, [sp, #24]
   1fab8:	str	r3, [sp, #4]
   1fabc:	str	r2, [sp, #8]
   1fac0:	str	r8, [sp]
   1fac4:	ldr	r3, [sp, #32]
   1fac8:	mov	r2, fp
   1facc:	ldr	r1, [sp, #56]	; 0x38
   1fad0:	add	r0, r7, #16
   1fad4:	bl	1f494 <handle_value.isra.0>
   1fad8:	subs	r4, r0, #0
   1fadc:	beq	1fa3c <readstat_parse_txt+0x278>
   1fae0:	cmp	r8, #0
   1fae4:	str	fp, [sp, #52]	; 0x34
   1fae8:	beq	1faf4 <readstat_parse_txt+0x330>
   1faec:	mov	r0, r8
   1faf0:	bl	3f04 <free@plt>
   1faf4:	cmp	r4, #0
   1faf8:	bne	1fb4c <readstat_parse_txt+0x388>
   1fafc:	ldr	r7, [r7]
   1fb00:	cmp	r7, #0
   1fb04:	beq	1fb4c <readstat_parse_txt+0x388>
   1fb08:	mov	r1, r4
   1fb0c:	add	r4, sp, #64	; 0x40
   1fb10:	mov	r0, r4
   1fb14:	mov	r2, #56	; 0x38
   1fb18:	bl	42e8 <memset@plt>
   1fb1c:	ldr	r2, [sp, #52]	; 0x34
   1fb20:	mov	r0, r4
   1fb24:	ldr	r1, [sp, #24]
   1fb28:	asr	r3, r2, #31
   1fb2c:	strd	r2, [sp, #64]	; 0x40
   1fb30:	ldr	r2, [r9, #268]	; 0x10c
   1fb34:	asr	r3, r2, #31
   1fb38:	strd	r2, [sp, #72]	; 0x48
   1fb3c:	blx	r7
   1fb40:	cmp	r0, #1
   1fb44:	moveq	r4, #4
   1fb48:	movne	r4, #0
   1fb4c:	ldr	r3, [sl, #4]
   1fb50:	ldr	r0, [sl, #20]
   1fb54:	blx	r3
   1fb58:	cmp	r5, #0
   1fb5c:	beq	1fb68 <readstat_parse_txt+0x3a4>
   1fb60:	mov	r0, r5
   1fb64:	bl	3f04 <free@plt>
   1fb68:	cmp	r6, #0
   1fb6c:	beq	1fb78 <readstat_parse_txt+0x3b4>
   1fb70:	mov	r0, r6
   1fb74:	bl	3f04 <free@plt>
   1fb78:	ldr	r0, [sp, #56]	; 0x38
   1fb7c:	cmp	r0, #0
   1fb80:	beq	1fb88 <readstat_parse_txt+0x3c4>
   1fb84:	bl	3e14 <iconv_close@plt>
   1fb88:	mov	r0, r4
   1fb8c:	add	sp, sp, #124	; 0x7c
   1fb90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fb94:	str	r5, [sp]
   1fb98:	mov	r3, r6
   1fb9c:	ldr	r2, [sp, #24]
   1fba0:	add	r1, sp, #52	; 0x34
   1fba4:	mov	r0, r7
   1fba8:	bl	1f5d8 <txt_parse_fixed_width>
   1fbac:	mov	r4, r0
   1fbb0:	b	1faf4 <readstat_parse_txt+0x330>
   1fbb4:	cmp	r4, #0
   1fbb8:	bne	1fa30 <readstat_parse_txt+0x26c>
   1fbbc:	b	1fae0 <readstat_parse_txt+0x31c>

0001fbc0 <zsav_ctx_init>:
   1fbc0:	push	{r4, r5, r6, r7, r8, lr}
   1fbc4:	mov	r1, #40	; 0x28
   1fbc8:	mov	r5, r0
   1fbcc:	mov	r0, #1
   1fbd0:	mov	r6, r2
   1fbd4:	mov	r7, r3
   1fbd8:	bl	3d9c <calloc@plt>
   1fbdc:	mov	r4, r0
   1fbe0:	mov	r0, r5
   1fbe4:	bl	415c <malloc@plt>
   1fbe8:	mov	r1, #4
   1fbec:	str	r0, [r4]
   1fbf0:	mov	r0, #10
   1fbf4:	str	r0, [r4, #12]
   1fbf8:	bl	3d9c <calloc@plt>
   1fbfc:	ldr	r2, [pc, #28]	; 1fc20 <zsav_ctx_init+0x60>
   1fc00:	mov	r3, #0
   1fc04:	strd	r6, [r4, #24]
   1fc08:	strd	r2, [r4, #16]
   1fc0c:	mvn	r3, #0
   1fc10:	str	r3, [r4, #32]
   1fc14:	str	r0, [r4, #4]
   1fc18:	mov	r0, r4
   1fc1c:	pop	{r4, r5, r6, r7, r8, pc}
   1fc20:	.word	0x003ff000

0001fc24 <zsav_ctx_free>:
   1fc24:	push	{r4, r5, r6, lr}
   1fc28:	mov	r4, r0
   1fc2c:	mov	r5, #0
   1fc30:	ldr	r3, [r4, #8]
   1fc34:	cmp	r5, r3
   1fc38:	blt	1fc58 <zsav_ctx_free+0x34>
   1fc3c:	ldr	r0, [r4, #4]
   1fc40:	bl	3f04 <free@plt>
   1fc44:	ldr	r0, [r4]
   1fc48:	bl	3f04 <free@plt>
   1fc4c:	mov	r0, r4
   1fc50:	pop	{r4, r5, r6, lr}
   1fc54:	b	3f04 <free@plt>
   1fc58:	ldr	r3, [r4, #4]
   1fc5c:	ldr	r6, [r3, r5, lsl #2]
   1fc60:	add	r5, r5, #1
   1fc64:	add	r0, r6, #8
   1fc68:	bl	4360 <deflateEnd@plt>
   1fc6c:	ldr	r0, [r6, #64]	; 0x40
   1fc70:	bl	3f04 <free@plt>
   1fc74:	mov	r0, r6
   1fc78:	bl	3f04 <free@plt>
   1fc7c:	b	1fc30 <zsav_ctx_free+0xc>

0001fc80 <zsav_add_block>:
   1fc80:	ldr	r1, [r0, #8]
   1fc84:	ldr	r3, [r0, #12]
   1fc88:	push	{r4, r5, r6, lr}
   1fc8c:	cmp	r1, r3
   1fc90:	mov	r4, r0
   1fc94:	bne	1fcb0 <zsav_add_block+0x30>
   1fc98:	lsl	r3, r1, #1
   1fc9c:	str	r3, [r0, #12]
   1fca0:	lsl	r1, r1, #3
   1fca4:	ldr	r0, [r0, #4]
   1fca8:	bl	403c <realloc@plt>
   1fcac:	str	r0, [r4, #4]
   1fcb0:	mov	r1, #72	; 0x48
   1fcb4:	mov	r0, #1
   1fcb8:	bl	3d9c <calloc@plt>
   1fcbc:	ldmib	r4, {r2, r3}
   1fcc0:	add	r1, r3, #1
   1fcc4:	str	r1, [r4, #8]
   1fcc8:	ldr	r1, [r4, #32]
   1fccc:	str	r0, [r2, r3, lsl #2]
   1fcd0:	ldr	r2, [pc, #52]	; 1fd0c <zsav_add_block+0x8c>
   1fcd4:	add	r6, r0, #8
   1fcd8:	mov	r5, r0
   1fcdc:	mov	r3, #56	; 0x38
   1fce0:	add	r2, pc, r2
   1fce4:	mov	r0, r6
   1fce8:	bl	4174 <deflateInit_@plt>
   1fcec:	ldr	r1, [r4, #16]
   1fcf0:	mov	r0, r6
   1fcf4:	bl	3ec8 <deflateBound@plt>
   1fcf8:	str	r0, [r5, #68]	; 0x44
   1fcfc:	bl	415c <malloc@plt>
   1fd00:	str	r0, [r5, #64]	; 0x40
   1fd04:	mov	r0, r5
   1fd08:	pop	{r4, r5, r6, pc}
   1fd0c:	.word	0x000105ab

0001fd10 <zsav_current_block>:
   1fd10:	ldr	r3, [r0, #8]
   1fd14:	cmp	r3, #0
   1fd18:	subne	r3, r3, #-1073741823	; 0xc0000001
   1fd1c:	ldrne	r2, [r0, #4]
   1fd20:	ldrne	r0, [r2, r3, lsl #2]
   1fd24:	moveq	r0, r3
   1fd28:	bx	lr

0001fd2c <zsav_compress_row>:
   1fd2c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fd30:	mov	r9, r0
   1fd34:	mov	r0, r3
   1fd38:	mov	r7, r1
   1fd3c:	mov	sl, r2
   1fd40:	mov	r5, r3
   1fd44:	bl	40f0 <zsav_current_block@plt>
   1fd48:	subs	r4, r0, #0
   1fd4c:	bne	1fd5c <zsav_compress_row+0x30>
   1fd50:	mov	r0, r5
   1fd54:	bl	4168 <zsav_add_block@plt>
   1fd58:	mov	r4, r0
   1fd5c:	ldr	r1, [r4, #4]
   1fd60:	ldr	r2, [r4, #64]	; 0x40
   1fd64:	ldr	r3, [r4, #68]	; 0x44
   1fd68:	mov	r6, #0
   1fd6c:	mov	fp, #4
   1fd70:	add	r2, r2, r1
   1fd74:	sub	r3, r3, r1
   1fd78:	str	r9, [r4, #8]
   1fd7c:	str	r7, [r4, #12]
   1fd80:	str	r2, [r4, #20]
   1fd84:	str	r3, [r4, #24]
   1fd88:	ldrd	r2, [r5, #16]
   1fd8c:	mov	r1, #0
   1fd90:	mov	ip, r4
   1fd94:	strd	r2, [sp]
   1fd98:	mov	r3, r1
   1fd9c:	ldrd	r0, [sp]
   1fda0:	ldr	lr, [ip], #8
   1fda4:	sub	r8, r7, r6
   1fda8:	subs	r0, r0, lr
   1fdac:	sbc	r1, r1, lr, asr #31
   1fdb0:	cmp	r0, r8
   1fdb4:	sbcs	r3, r1, r3
   1fdb8:	blt	1fdfc <zsav_compress_row+0xd0>
   1fdbc:	cmp	sl, #0
   1fdc0:	movne	r1, #4
   1fdc4:	moveq	r1, #0
   1fdc8:	mov	r0, ip
   1fdcc:	bl	4084 <deflate@plt>
   1fdd0:	ldr	r2, [r4, #24]
   1fdd4:	ldr	r3, [r4, #68]	; 0x44
   1fdd8:	sub	r3, r3, r2
   1fddc:	str	r3, [r4, #4]
   1fde0:	ldr	r2, [r4, #12]
   1fde4:	ldr	r3, [r4]
   1fde8:	sub	r3, r3, r2
   1fdec:	add	r8, r3, r8
   1fdf0:	str	r8, [r4]
   1fdf4:	add	sp, sp, #12
   1fdf8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fdfc:	ldr	r3, [sp]
   1fe00:	mov	r1, fp
   1fe04:	sub	r2, r3, lr
   1fe08:	str	r2, [r4, #12]
   1fe0c:	mov	r0, ip
   1fe10:	add	r6, r6, r2
   1fe14:	bl	4084 <deflate@plt>
   1fe18:	cmp	r0, #1
   1fe1c:	bne	1fdf4 <zsav_compress_row+0xc8>
   1fe20:	ldr	r2, [r4, #24]
   1fe24:	ldr	r3, [r4, #68]	; 0x44
   1fe28:	mov	r0, r5
   1fe2c:	sub	r3, r3, r2
   1fe30:	str	r3, [r4, #4]
   1fe34:	ldr	r2, [r4, #12]
   1fe38:	ldr	r3, [r5, #16]
   1fe3c:	sub	r3, r3, r2
   1fe40:	str	r3, [r4]
   1fe44:	bl	4168 <zsav_add_block@plt>
   1fe48:	add	r3, r9, r6
   1fe4c:	str	r3, [r0, #8]
   1fe50:	sub	r3, r7, r6
   1fe54:	str	r3, [r0, #12]
   1fe58:	ldr	r3, [r0, #64]	; 0x40
   1fe5c:	mov	r4, r0
   1fe60:	str	r3, [r0, #20]
   1fe64:	ldr	r3, [r0, #68]	; 0x44
   1fe68:	str	r3, [r0, #24]
   1fe6c:	b	1fd88 <zsav_compress_row+0x5c>

0001fe70 <zsav_read_compressed_data>:
   1fe70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fe74:	sub	sp, sp, #148	; 0x94
   1fe78:	add	r3, sp, #88	; 0x58
   1fe7c:	mov	r4, r0
   1fe80:	ldr	r5, [r0, #36]	; 0x24
   1fe84:	str	r1, [sp, #20]
   1fe88:	ldr	sl, [r0, #344]	; 0x158
   1fe8c:	mov	r1, #0
   1fe90:	mov	r2, #56	; 0x38
   1fe94:	mov	r0, r3
   1fe98:	str	r1, [sp, #36]	; 0x24
   1fe9c:	str	r3, [sp, #16]
   1fea0:	bl	42e8 <memset@plt>
   1fea4:	add	r3, r4, #400	; 0x190
   1fea8:	mov	r1, #24
   1feac:	ldrd	r2, [r3, #-8]
   1feb0:	add	r0, sp, #40	; 0x28
   1feb4:	strd	r2, [sp, #104]	; 0x68
   1feb8:	add	r3, r4, #416	; 0x1a0
   1febc:	ldrd	r2, [r3]
   1fec0:	strd	r2, [sp, #112]	; 0x70
   1fec4:	ldrb	r3, [r4, #436]	; 0x1b4
   1fec8:	ldr	r2, [r5, #20]
   1fecc:	and	r3, r3, #1
   1fed0:	str	r3, [sp, #132]	; 0x84
   1fed4:	ldr	r3, [r5, #12]
   1fed8:	blx	r3
   1fedc:	cmp	r0, #23
   1fee0:	bls	20350 <zsav_read_compressed_data+0x4e0>
   1fee4:	ldrb	r3, [r4, #436]	; 0x1b4
   1fee8:	ldr	r0, [sp, #40]	; 0x28
   1feec:	ldr	r1, [sp, #44]	; 0x2c
   1fef0:	tst	r3, #1
   1fef4:	beq	1fefc <zsav_read_compressed_data+0x8c>
   1fef8:	bl	3dc0 <byteswap8@plt>
   1fefc:	ldrb	r3, [r4, #436]	; 0x1b4
   1ff00:	str	r0, [sp, #40]	; 0x28
   1ff04:	str	r1, [sp, #44]	; 0x2c
   1ff08:	tst	r3, #1
   1ff0c:	ldr	r0, [sp, #48]	; 0x30
   1ff10:	ldr	r1, [sp, #52]	; 0x34
   1ff14:	beq	1ff1c <zsav_read_compressed_data+0xac>
   1ff18:	bl	3dc0 <byteswap8@plt>
   1ff1c:	ldrb	r3, [r4, #436]	; 0x1b4
   1ff20:	str	r0, [sp, #48]	; 0x30
   1ff24:	str	r1, [sp, #52]	; 0x34
   1ff28:	tst	r3, #1
   1ff2c:	ldr	r0, [sp, #56]	; 0x38
   1ff30:	ldr	r1, [sp, #60]	; 0x3c
   1ff34:	beq	1ff3c <zsav_read_compressed_data+0xcc>
   1ff38:	bl	3dc0 <byteswap8@plt>
   1ff3c:	str	r0, [sp, #56]	; 0x38
   1ff40:	str	r1, [sp, #60]	; 0x3c
   1ff44:	ldr	r3, [r5, #8]
   1ff48:	mov	r1, #1
   1ff4c:	ldr	r2, [r5, #20]
   1ff50:	mov	r0, #0
   1ff54:	ldrd	r6, [sp, #40]	; 0x28
   1ff58:	blx	r3
   1ff5c:	mov	r1, #0
   1ff60:	cmp	r7, r1
   1ff64:	sub	r0, r0, #24
   1ff68:	cmpeq	r6, r0
   1ff6c:	beq	1ff80 <zsav_read_compressed_data+0x110>
   1ff70:	mov	fp, #5
   1ff74:	mov	r0, fp
   1ff78:	add	sp, sp, #148	; 0x94
   1ff7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ff80:	ldr	r3, [r5, #8]
   1ff84:	ldr	r2, [r5, #20]
   1ff88:	mov	r1, #0
   1ff8c:	ldr	r0, [sp, #48]	; 0x30
   1ff90:	ldrd	r8, [sp, #56]	; 0x38
   1ff94:	blx	r3
   1ff98:	cmn	r0, #1
   1ff9c:	moveq	fp, #15
   1ffa0:	beq	1ff74 <zsav_read_compressed_data+0x104>
   1ffa4:	ldr	r3, [r5, #12]
   1ffa8:	ldr	r2, [r5, #20]
   1ffac:	mov	r1, #24
   1ffb0:	add	r0, sp, #64	; 0x40
   1ffb4:	blx	r3
   1ffb8:	cmp	r0, #23
   1ffbc:	bls	20350 <zsav_read_compressed_data+0x4e0>
   1ffc0:	ldrb	r3, [r4, #436]	; 0x1b4
   1ffc4:	ldr	r0, [sp, #64]	; 0x40
   1ffc8:	ldr	r1, [sp, #68]	; 0x44
   1ffcc:	tst	r3, #1
   1ffd0:	beq	1ffd8 <zsav_read_compressed_data+0x168>
   1ffd4:	bl	3dc0 <byteswap8@plt>
   1ffd8:	ldrb	r3, [r4, #436]	; 0x1b4
   1ffdc:	str	r0, [sp, #64]	; 0x40
   1ffe0:	str	r1, [sp, #68]	; 0x44
   1ffe4:	tst	r3, #1
   1ffe8:	ldr	r0, [sp, #72]	; 0x48
   1ffec:	ldr	r1, [sp, #76]	; 0x4c
   1fff0:	beq	1fff8 <zsav_read_compressed_data+0x188>
   1fff4:	bl	3dc0 <byteswap8@plt>
   1fff8:	ldrb	r3, [r4, #436]	; 0x1b4
   1fffc:	str	r0, [sp, #72]	; 0x48
   20000:	str	r1, [sp, #76]	; 0x4c
   20004:	tst	r3, #1
   20008:	ldr	r0, [sp, #80]	; 0x50
   2000c:	beq	20014 <zsav_read_compressed_data+0x1a4>
   20010:	bl	3dd8 <byteswap4@plt>
   20014:	ldrb	r3, [r4, #436]	; 0x1b4
   20018:	str	r0, [sp, #80]	; 0x50
   2001c:	tst	r3, #1
   20020:	ldreq	r7, [sp, #84]	; 0x54
   20024:	beq	20034 <zsav_read_compressed_data+0x1c4>
   20028:	ldr	r0, [sp, #84]	; 0x54
   2002c:	bl	3dd8 <byteswap4@plt>
   20030:	mov	r7, r0
   20034:	subs	r0, r8, #24
   20038:	sbc	r1, r9, #0
   2003c:	mov	r2, #24
   20040:	mov	r3, #0
   20044:	bl	20f10 <__aeabi_uldivmod>
   20048:	str	r7, [sp, #84]	; 0x54
   2004c:	cmp	r7, r0
   20050:	mov	r9, r0
   20054:	bne	1ff70 <zsav_read_compressed_data+0x100>
   20058:	cmp	r7, #0
   2005c:	beq	2007c <zsav_read_compressed_data+0x20c>
   20060:	mov	r0, #24
   20064:	mul	r0, r0, r7
   20068:	bl	4270 <readstat_malloc@plt>
   2006c:	subs	r8, r0, #0
   20070:	bne	20080 <zsav_read_compressed_data+0x210>
   20074:	mov	fp, #3
   20078:	b	1ff74 <zsav_read_compressed_data+0x104>
   2007c:	mov	r8, r7
   20080:	mov	r6, #24
   20084:	ldr	r3, [r5, #12]
   20088:	mul	r6, r6, r9
   2008c:	ldr	r2, [r5, #20]
   20090:	mov	r1, r6
   20094:	mov	r0, r8
   20098:	blx	r3
   2009c:	cmp	r6, r0
   200a0:	movls	r6, r8
   200a4:	movls	fp, r8
   200a8:	movls	r9, #0
   200ac:	bls	20140 <zsav_read_compressed_data+0x2d0>
   200b0:	mov	fp, #2
   200b4:	cmp	r8, #0
   200b8:	movne	r9, #0
   200bc:	strne	r9, [sp, #4]
   200c0:	beq	1ff74 <zsav_read_compressed_data+0x104>
   200c4:	mov	r0, r8
   200c8:	bl	3f04 <free@plt>
   200cc:	b	20310 <zsav_read_compressed_data+0x4a0>
   200d0:	ldrb	r3, [r4, #436]	; 0x1b4
   200d4:	ldrd	r0, [fp]
   200d8:	tst	r3, #1
   200dc:	beq	200e4 <zsav_read_compressed_data+0x274>
   200e0:	bl	3dc0 <byteswap8@plt>
   200e4:	strd	r0, [fp]
   200e8:	ldrb	r3, [r4, #436]	; 0x1b4
   200ec:	ldr	r0, [fp, #8]
   200f0:	ldr	r1, [fp, #12]
   200f4:	tst	r3, #1
   200f8:	beq	20100 <zsav_read_compressed_data+0x290>
   200fc:	bl	3dc0 <byteswap8@plt>
   20100:	str	r0, [fp, #8]
   20104:	str	r1, [fp, #12]
   20108:	ldrb	r3, [r4, #436]	; 0x1b4
   2010c:	ldr	r0, [fp, #16]
   20110:	tst	r3, #1
   20114:	beq	2011c <zsav_read_compressed_data+0x2ac>
   20118:	bl	3dd8 <byteswap4@plt>
   2011c:	str	r0, [fp, #16]
   20120:	ldrb	r3, [r4, #436]	; 0x1b4
   20124:	ldr	r0, [fp, #20]
   20128:	tst	r3, #1
   2012c:	beq	20134 <zsav_read_compressed_data+0x2c4>
   20130:	bl	3dd8 <byteswap4@plt>
   20134:	str	r0, [fp, #20]
   20138:	add	r9, r9, #1
   2013c:	add	fp, fp, #24
   20140:	cmp	r9, r7
   20144:	blt	200d0 <zsav_read_compressed_data+0x260>
   20148:	lsls	r3, sl, #3
   2014c:	str	r3, [sp, #8]
   20150:	ldreq	r3, [sp, #8]
   20154:	streq	r3, [sp, #12]
   20158:	beq	20174 <zsav_read_compressed_data+0x304>
   2015c:	mov	r0, r3
   20160:	bl	4270 <readstat_malloc@plt>
   20164:	subs	r3, r0, #0
   20168:	str	r3, [sp, #12]
   2016c:	moveq	fp, #3
   20170:	beq	200b4 <zsav_read_compressed_data+0x244>
   20174:	mov	sl, #0
   20178:	mov	r9, sl
   2017c:	mov	fp, sl
   20180:	add	r3, sp, #36	; 0x24
   20184:	str	sl, [sp, #4]
   20188:	str	r3, [sp, #24]
   2018c:	cmp	sl, r7
   20190:	beq	202e8 <zsav_read_compressed_data+0x478>
   20194:	ldr	r3, [r5, #8]
   20198:	ldr	r2, [r5, #20]
   2019c:	mov	r1, #0
   201a0:	ldr	r0, [r6, #8]
   201a4:	blx	r3
   201a8:	cmn	r0, #1
   201ac:	beq	202f0 <zsav_read_compressed_data+0x480>
   201b0:	ldr	r1, [r6, #20]
   201b4:	ldr	r0, [sp, #4]
   201b8:	bl	4330 <readstat_realloc@plt>
   201bc:	subs	r3, r0, #0
   201c0:	str	r3, [sp, #4]
   201c4:	beq	20340 <zsav_read_compressed_data+0x4d0>
   201c8:	ldr	r3, [r5, #12]
   201cc:	ldr	r2, [r5, #20]
   201d0:	ldr	r1, [r6, #20]
   201d4:	blx	r3
   201d8:	ldr	r3, [r6, #20]
   201dc:	cmp	r0, r3
   201e0:	bne	20338 <zsav_read_compressed_data+0x4c8>
   201e4:	ldr	r1, [r6, #16]
   201e8:	mov	r0, r9
   201ec:	str	r1, [sp, #36]	; 0x24
   201f0:	bl	4330 <readstat_realloc@plt>
   201f4:	subs	r9, r0, #0
   201f8:	beq	20340 <zsav_read_compressed_data+0x4d0>
   201fc:	ldr	r3, [r6, #20]
   20200:	ldr	r2, [sp, #4]
   20204:	ldr	r1, [sp, #24]
   20208:	bl	3fdc <uncompress@plt>
   2020c:	cmp	r0, #0
   20210:	bne	20348 <zsav_read_compressed_data+0x4d8>
   20214:	ldr	r2, [r6, #16]
   20218:	ldr	r3, [sp, #36]	; 0x24
   2021c:	cmp	r2, r3
   20220:	bne	20348 <zsav_read_compressed_data+0x4d8>
   20224:	mov	r3, #1
   20228:	str	r3, [sp, #136]	; 0x88
   2022c:	add	sl, sl, #1
   20230:	mov	r3, #0
   20234:	ldr	r2, [sp, #136]	; 0x88
   20238:	cmp	r2, #0
   2023c:	addeq	r6, r6, #24
   20240:	beq	2018c <zsav_read_compressed_data+0x31c>
   20244:	add	r2, r9, r3
   20248:	str	r2, [sp, #88]	; 0x58
   2024c:	ldr	r2, [sp, #36]	; 0x24
   20250:	ldr	r0, [sp, #16]
   20254:	sub	r3, r2, r3
   20258:	str	r3, [sp, #92]	; 0x5c
   2025c:	ldr	r3, [sp, #12]
   20260:	add	r3, r3, fp
   20264:	str	r3, [sp, #96]	; 0x60
   20268:	ldr	r3, [sp, #8]
   2026c:	sub	r3, r3, fp
   20270:	str	r3, [sp, #100]	; 0x64
   20274:	bl	4258 <sav_decompress_row@plt>
   20278:	ldr	r3, [sp, #100]	; 0x64
   2027c:	ldr	r2, [sp, #8]
   20280:	sub	fp, r2, r3
   20284:	ldr	r2, [sp, #36]	; 0x24
   20288:	ldr	r3, [sp, #92]	; 0x5c
   2028c:	sub	r3, r2, r3
   20290:	ldr	r2, [sp, #136]	; 0x88
   20294:	cmp	r2, #2
   20298:	bne	202c4 <zsav_read_compressed_data+0x454>
   2029c:	str	r3, [sp, #28]
   202a0:	mov	r2, r4
   202a4:	ldr	r1, [sp, #8]
   202a8:	ldr	r0, [sp, #12]
   202ac:	ldr	r3, [sp, #20]
   202b0:	blx	r3
   202b4:	subs	fp, r0, #0
   202b8:	bne	202f4 <zsav_read_compressed_data+0x484>
   202bc:	ldr	r3, [sp, #28]
   202c0:	mov	fp, #0
   202c4:	ldr	r2, [sp, #136]	; 0x88
   202c8:	cmp	r2, #3
   202cc:	beq	202e8 <zsav_read_compressed_data+0x478>
   202d0:	ldr	r2, [r4, #356]	; 0x164
   202d4:	cmp	r2, #0
   202d8:	ble	20234 <zsav_read_compressed_data+0x3c4>
   202dc:	ldr	r1, [r4, #364]	; 0x16c
   202e0:	cmp	r2, r1
   202e4:	bne	20234 <zsav_read_compressed_data+0x3c4>
   202e8:	mov	fp, #0
   202ec:	b	202f4 <zsav_read_compressed_data+0x484>
   202f0:	mov	fp, #15
   202f4:	ldr	r3, [sp, #12]
   202f8:	cmp	r3, #0
   202fc:	beq	20308 <zsav_read_compressed_data+0x498>
   20300:	mov	r0, r3
   20304:	bl	3f04 <free@plt>
   20308:	cmp	r8, #0
   2030c:	bne	200c4 <zsav_read_compressed_data+0x254>
   20310:	ldr	r3, [sp, #4]
   20314:	cmp	r3, #0
   20318:	beq	20324 <zsav_read_compressed_data+0x4b4>
   2031c:	mov	r0, r3
   20320:	bl	3f04 <free@plt>
   20324:	cmp	r9, #0
   20328:	beq	1ff74 <zsav_read_compressed_data+0x104>
   2032c:	mov	r0, r9
   20330:	bl	3f04 <free@plt>
   20334:	b	1ff74 <zsav_read_compressed_data+0x104>
   20338:	mov	fp, #2
   2033c:	b	202f4 <zsav_read_compressed_data+0x484>
   20340:	mov	fp, #3
   20344:	b	202f4 <zsav_read_compressed_data+0x484>
   20348:	mov	fp, #5
   2034c:	b	202f4 <zsav_read_compressed_data+0x484>
   20350:	mov	fp, #2
   20354:	b	1ff74 <zsav_read_compressed_data+0x104>

00020358 <zsav_write_compressed_row>:
   20358:	push	{r4, r5, r6, lr}
   2035c:	mov	r3, r0
   20360:	ldr	r5, [r0, #300]	; 0x12c
   20364:	mov	r4, r0
   20368:	ldr	r0, [r5]
   2036c:	bl	44b0 <sav_compress_row@plt>
   20370:	ldr	r2, [r4, #84]	; 0x54
   20374:	ldr	r1, [r4, #80]	; 0x50
   20378:	add	r2, r2, #1
   2037c:	mov	r3, r5
   20380:	sub	r2, r2, r1
   20384:	clz	r2, r2
   20388:	lsr	r2, r2, #5
   2038c:	mov	r1, r0
   20390:	ldr	r0, [r5]
   20394:	bl	4504 <zsav_compress_row@plt>
   20398:	cmp	r0, #1
   2039c:	movhi	r0, #13
   203a0:	movls	r0, #0
   203a4:	pop	{r4, r5, r6, pc}

000203a8 <zsav_end_data>:
   203a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   203ac:	mov	r4, r0
   203b0:	ldr	r5, [r0, #300]	; 0x12c
   203b4:	mov	r0, #24
   203b8:	sub	sp, sp, #60	; 0x3c
   203bc:	ldr	ip, [r5, #8]
   203c0:	ldrd	r2, [r5, #24]
   203c4:	add	r1, ip, #1
   203c8:	mov	lr, #1
   203cc:	mul	r0, r0, r1
   203d0:	strd	r2, [sp, #32]
   203d4:	adds	r2, r2, #24
   203d8:	asr	r1, r0, #31
   203dc:	adc	r3, r3, #0
   203e0:	strd	r0, [sp, #48]	; 0x30
   203e4:	mov	r0, #0
   203e8:	mov	r1, r0
   203ec:	strd	r2, [sp, #40]	; 0x28
   203f0:	cmp	ip, r1
   203f4:	bgt	20464 <zsav_end_data+0xbc>
   203f8:	cmp	r0, #0
   203fc:	strdne	r2, [sp, #40]	; 0x28
   20400:	add	r9, sp, #32
   20404:	mov	r2, #8
   20408:	mov	r1, r9
   2040c:	mov	r0, r4
   20410:	bl	44a4 <readstat_write_bytes@plt>
   20414:	subs	sl, r0, #0
   20418:	bne	20458 <zsav_end_data+0xb0>
   2041c:	add	r7, sp, #40	; 0x28
   20420:	mov	r2, #8
   20424:	mov	r1, r7
   20428:	mov	r0, r4
   2042c:	bl	44a4 <readstat_write_bytes@plt>
   20430:	subs	sl, r0, #0
   20434:	bne	20458 <zsav_end_data+0xb0>
   20438:	add	r8, sp, #48	; 0x30
   2043c:	mov	r2, #8
   20440:	mov	r1, r8
   20444:	mov	r0, r4
   20448:	bl	44a4 <readstat_write_bytes@plt>
   2044c:	subs	sl, r0, #0
   20450:	moveq	r6, sl
   20454:	beq	204a8 <zsav_end_data+0x100>
   20458:	mov	r0, sl
   2045c:	add	sp, sp, #60	; 0x3c
   20460:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20464:	ldr	r0, [r5, #4]
   20468:	ldr	r0, [r0, r1, lsl #2]
   2046c:	add	r1, r1, #1
   20470:	ldr	r0, [r0, #4]
   20474:	adds	r2, r2, r0
   20478:	adc	r3, r3, r0, asr #31
   2047c:	mov	r0, lr
   20480:	b	203f0 <zsav_end_data+0x48>
   20484:	ldr	r3, [r5, #4]
   20488:	mov	r0, r4
   2048c:	ldr	r3, [r3, r6, lsl #2]
   20490:	ldr	r2, [r3, #4]
   20494:	ldr	r1, [r3, #64]	; 0x40
   20498:	bl	44a4 <readstat_write_bytes@plt>
   2049c:	subs	sl, r0, #0
   204a0:	bne	20458 <zsav_end_data+0xb0>
   204a4:	add	r6, r6, #1
   204a8:	ldr	r3, [r5, #8]
   204ac:	cmp	r6, r3
   204b0:	blt	20484 <zsav_end_data+0xdc>
   204b4:	mvn	r0, #99	; 0x63
   204b8:	mvn	r1, #0
   204bc:	str	r3, [sp, #12]
   204c0:	strd	r0, [sp, #24]
   204c4:	mov	r0, #0
   204c8:	mov	r1, #0
   204cc:	strd	r0, [sp, #32]
   204d0:	ldr	r2, [r5, #16]
   204d4:	add	r1, sp, #24
   204d8:	str	r2, [sp, #8]
   204dc:	mov	r0, r4
   204e0:	mov	r2, #8
   204e4:	bl	44a4 <readstat_write_bytes@plt>
   204e8:	subs	sl, r0, #0
   204ec:	bne	20458 <zsav_end_data+0xb0>
   204f0:	mov	r2, #8
   204f4:	mov	r1, r9
   204f8:	mov	r0, r4
   204fc:	bl	44a4 <readstat_write_bytes@plt>
   20500:	subs	sl, r0, #0
   20504:	bne	20458 <zsav_end_data+0xb0>
   20508:	mov	r2, #4
   2050c:	add	r1, sp, #8
   20510:	mov	r0, r4
   20514:	bl	44a4 <readstat_write_bytes@plt>
   20518:	subs	sl, r0, #0
   2051c:	bne	20458 <zsav_end_data+0xb0>
   20520:	mov	r2, #4
   20524:	add	r1, sp, #12
   20528:	mov	r0, r4
   2052c:	bl	44a4 <readstat_write_bytes@plt>
   20530:	subs	sl, r0, #0
   20534:	bne	20458 <zsav_end_data+0xb0>
   20538:	ldrd	r0, [r5, #24]
   2053c:	mov	r6, sl
   20540:	mov	r9, #8
   20544:	strd	r0, [sp, #40]	; 0x28
   20548:	adds	r0, r0, #24
   2054c:	adc	r1, r1, #0
   20550:	add	fp, sp, #20
   20554:	add	r3, sp, #16
   20558:	strd	r0, [sp, #48]	; 0x30
   2055c:	str	r3, [sp, #4]
   20560:	ldr	r2, [r5, #8]
   20564:	cmp	r6, r2
   20568:	bge	20458 <zsav_end_data+0xb0>
   2056c:	ldr	r2, [r5, #4]
   20570:	mov	r0, r4
   20574:	ldr	r2, [r2, r6, lsl #2]
   20578:	ldr	r1, [r2]
   2057c:	ldr	r2, [r2, #4]
   20580:	str	r1, [sp, #16]
   20584:	str	r2, [sp, #20]
   20588:	mov	r1, r7
   2058c:	mov	r2, r9
   20590:	bl	44a4 <readstat_write_bytes@plt>
   20594:	cmp	r0, #0
   20598:	bne	20614 <zsav_end_data+0x26c>
   2059c:	mov	r2, r9
   205a0:	mov	r1, r8
   205a4:	mov	r0, r4
   205a8:	bl	44a4 <readstat_write_bytes@plt>
   205ac:	cmp	r0, #0
   205b0:	bne	20614 <zsav_end_data+0x26c>
   205b4:	mov	r2, #4
   205b8:	ldr	r1, [sp, #4]
   205bc:	mov	r0, r4
   205c0:	bl	44a4 <readstat_write_bytes@plt>
   205c4:	cmp	r0, #0
   205c8:	bne	20614 <zsav_end_data+0x26c>
   205cc:	mov	r2, #4
   205d0:	mov	r1, fp
   205d4:	mov	r0, r4
   205d8:	bl	44a4 <readstat_write_bytes@plt>
   205dc:	cmp	r0, #0
   205e0:	bne	20614 <zsav_end_data+0x26c>
   205e4:	ldrd	r0, [sp, #40]	; 0x28
   205e8:	ldr	r2, [sp, #16]
   205ec:	add	r6, r6, #1
   205f0:	adds	r0, r0, r2
   205f4:	adc	r1, r1, r2, asr #31
   205f8:	ldr	r2, [sp, #20]
   205fc:	strd	r0, [sp, #40]	; 0x28
   20600:	ldrd	r0, [sp, #48]	; 0x30
   20604:	adds	r0, r0, r2
   20608:	adc	r1, r1, r2, asr #31
   2060c:	strd	r0, [sp, #48]	; 0x30
   20610:	b	20560 <zsav_end_data+0x1b8>
   20614:	mov	sl, r0
   20618:	b	20458 <zsav_end_data+0xb0>

0002061c <__udivsi3>:
   2061c:	subs	r2, r1, #1
   20620:	bxeq	lr
   20624:	bcc	207fc <__udivsi3+0x1e0>
   20628:	cmp	r0, r1
   2062c:	bls	207e0 <__udivsi3+0x1c4>
   20630:	tst	r1, r2
   20634:	beq	207ec <__udivsi3+0x1d0>
   20638:	clz	r3, r0
   2063c:	clz	r2, r1
   20640:	sub	r3, r2, r3
   20644:	rsbs	r3, r3, #31
   20648:	addne	r3, r3, r3, lsl #1
   2064c:	mov	r2, #0
   20650:	addne	pc, pc, r3, lsl #2
   20654:	nop			; (mov r0, r0)
   20658:	cmp	r0, r1, lsl #31
   2065c:	adc	r2, r2, r2
   20660:	subcs	r0, r0, r1, lsl #31
   20664:	cmp	r0, r1, lsl #30
   20668:	adc	r2, r2, r2
   2066c:	subcs	r0, r0, r1, lsl #30
   20670:	cmp	r0, r1, lsl #29
   20674:	adc	r2, r2, r2
   20678:	subcs	r0, r0, r1, lsl #29
   2067c:	cmp	r0, r1, lsl #28
   20680:	adc	r2, r2, r2
   20684:	subcs	r0, r0, r1, lsl #28
   20688:	cmp	r0, r1, lsl #27
   2068c:	adc	r2, r2, r2
   20690:	subcs	r0, r0, r1, lsl #27
   20694:	cmp	r0, r1, lsl #26
   20698:	adc	r2, r2, r2
   2069c:	subcs	r0, r0, r1, lsl #26
   206a0:	cmp	r0, r1, lsl #25
   206a4:	adc	r2, r2, r2
   206a8:	subcs	r0, r0, r1, lsl #25
   206ac:	cmp	r0, r1, lsl #24
   206b0:	adc	r2, r2, r2
   206b4:	subcs	r0, r0, r1, lsl #24
   206b8:	cmp	r0, r1, lsl #23
   206bc:	adc	r2, r2, r2
   206c0:	subcs	r0, r0, r1, lsl #23
   206c4:	cmp	r0, r1, lsl #22
   206c8:	adc	r2, r2, r2
   206cc:	subcs	r0, r0, r1, lsl #22
   206d0:	cmp	r0, r1, lsl #21
   206d4:	adc	r2, r2, r2
   206d8:	subcs	r0, r0, r1, lsl #21
   206dc:	cmp	r0, r1, lsl #20
   206e0:	adc	r2, r2, r2
   206e4:	subcs	r0, r0, r1, lsl #20
   206e8:	cmp	r0, r1, lsl #19
   206ec:	adc	r2, r2, r2
   206f0:	subcs	r0, r0, r1, lsl #19
   206f4:	cmp	r0, r1, lsl #18
   206f8:	adc	r2, r2, r2
   206fc:	subcs	r0, r0, r1, lsl #18
   20700:	cmp	r0, r1, lsl #17
   20704:	adc	r2, r2, r2
   20708:	subcs	r0, r0, r1, lsl #17
   2070c:	cmp	r0, r1, lsl #16
   20710:	adc	r2, r2, r2
   20714:	subcs	r0, r0, r1, lsl #16
   20718:	cmp	r0, r1, lsl #15
   2071c:	adc	r2, r2, r2
   20720:	subcs	r0, r0, r1, lsl #15
   20724:	cmp	r0, r1, lsl #14
   20728:	adc	r2, r2, r2
   2072c:	subcs	r0, r0, r1, lsl #14
   20730:	cmp	r0, r1, lsl #13
   20734:	adc	r2, r2, r2
   20738:	subcs	r0, r0, r1, lsl #13
   2073c:	cmp	r0, r1, lsl #12
   20740:	adc	r2, r2, r2
   20744:	subcs	r0, r0, r1, lsl #12
   20748:	cmp	r0, r1, lsl #11
   2074c:	adc	r2, r2, r2
   20750:	subcs	r0, r0, r1, lsl #11
   20754:	cmp	r0, r1, lsl #10
   20758:	adc	r2, r2, r2
   2075c:	subcs	r0, r0, r1, lsl #10
   20760:	cmp	r0, r1, lsl #9
   20764:	adc	r2, r2, r2
   20768:	subcs	r0, r0, r1, lsl #9
   2076c:	cmp	r0, r1, lsl #8
   20770:	adc	r2, r2, r2
   20774:	subcs	r0, r0, r1, lsl #8
   20778:	cmp	r0, r1, lsl #7
   2077c:	adc	r2, r2, r2
   20780:	subcs	r0, r0, r1, lsl #7
   20784:	cmp	r0, r1, lsl #6
   20788:	adc	r2, r2, r2
   2078c:	subcs	r0, r0, r1, lsl #6
   20790:	cmp	r0, r1, lsl #5
   20794:	adc	r2, r2, r2
   20798:	subcs	r0, r0, r1, lsl #5
   2079c:	cmp	r0, r1, lsl #4
   207a0:	adc	r2, r2, r2
   207a4:	subcs	r0, r0, r1, lsl #4
   207a8:	cmp	r0, r1, lsl #3
   207ac:	adc	r2, r2, r2
   207b0:	subcs	r0, r0, r1, lsl #3
   207b4:	cmp	r0, r1, lsl #2
   207b8:	adc	r2, r2, r2
   207bc:	subcs	r0, r0, r1, lsl #2
   207c0:	cmp	r0, r1, lsl #1
   207c4:	adc	r2, r2, r2
   207c8:	subcs	r0, r0, r1, lsl #1
   207cc:	cmp	r0, r1
   207d0:	adc	r2, r2, r2
   207d4:	subcs	r0, r0, r1
   207d8:	mov	r0, r2
   207dc:	bx	lr
   207e0:	moveq	r0, #1
   207e4:	movne	r0, #0
   207e8:	bx	lr
   207ec:	clz	r2, r1
   207f0:	rsb	r2, r2, #31
   207f4:	lsr	r0, r0, r2
   207f8:	bx	lr
   207fc:	cmp	r0, #0
   20800:	mvnne	r0, #0
   20804:	b	20f4c <__aeabi_idiv0>

00020808 <__aeabi_uidivmod>:
   20808:	cmp	r1, #0
   2080c:	beq	207fc <__udivsi3+0x1e0>
   20810:	push	{r0, r1, lr}
   20814:	bl	2061c <__udivsi3>
   20818:	pop	{r1, r2, lr}
   2081c:	mul	r3, r2, r0
   20820:	sub	r1, r1, r3
   20824:	bx	lr

00020828 <__divsi3>:
   20828:	cmp	r1, #0
   2082c:	beq	20a38 <.divsi3_skip_div0_test+0x208>

00020830 <.divsi3_skip_div0_test>:
   20830:	eor	ip, r0, r1
   20834:	rsbmi	r1, r1, #0
   20838:	subs	r2, r1, #1
   2083c:	beq	20a04 <.divsi3_skip_div0_test+0x1d4>
   20840:	movs	r3, r0
   20844:	rsbmi	r3, r0, #0
   20848:	cmp	r3, r1
   2084c:	bls	20a10 <.divsi3_skip_div0_test+0x1e0>
   20850:	tst	r1, r2
   20854:	beq	20a20 <.divsi3_skip_div0_test+0x1f0>
   20858:	clz	r2, r3
   2085c:	clz	r0, r1
   20860:	sub	r2, r0, r2
   20864:	rsbs	r2, r2, #31
   20868:	addne	r2, r2, r2, lsl #1
   2086c:	mov	r0, #0
   20870:	addne	pc, pc, r2, lsl #2
   20874:	nop			; (mov r0, r0)
   20878:	cmp	r3, r1, lsl #31
   2087c:	adc	r0, r0, r0
   20880:	subcs	r3, r3, r1, lsl #31
   20884:	cmp	r3, r1, lsl #30
   20888:	adc	r0, r0, r0
   2088c:	subcs	r3, r3, r1, lsl #30
   20890:	cmp	r3, r1, lsl #29
   20894:	adc	r0, r0, r0
   20898:	subcs	r3, r3, r1, lsl #29
   2089c:	cmp	r3, r1, lsl #28
   208a0:	adc	r0, r0, r0
   208a4:	subcs	r3, r3, r1, lsl #28
   208a8:	cmp	r3, r1, lsl #27
   208ac:	adc	r0, r0, r0
   208b0:	subcs	r3, r3, r1, lsl #27
   208b4:	cmp	r3, r1, lsl #26
   208b8:	adc	r0, r0, r0
   208bc:	subcs	r3, r3, r1, lsl #26
   208c0:	cmp	r3, r1, lsl #25
   208c4:	adc	r0, r0, r0
   208c8:	subcs	r3, r3, r1, lsl #25
   208cc:	cmp	r3, r1, lsl #24
   208d0:	adc	r0, r0, r0
   208d4:	subcs	r3, r3, r1, lsl #24
   208d8:	cmp	r3, r1, lsl #23
   208dc:	adc	r0, r0, r0
   208e0:	subcs	r3, r3, r1, lsl #23
   208e4:	cmp	r3, r1, lsl #22
   208e8:	adc	r0, r0, r0
   208ec:	subcs	r3, r3, r1, lsl #22
   208f0:	cmp	r3, r1, lsl #21
   208f4:	adc	r0, r0, r0
   208f8:	subcs	r3, r3, r1, lsl #21
   208fc:	cmp	r3, r1, lsl #20
   20900:	adc	r0, r0, r0
   20904:	subcs	r3, r3, r1, lsl #20
   20908:	cmp	r3, r1, lsl #19
   2090c:	adc	r0, r0, r0
   20910:	subcs	r3, r3, r1, lsl #19
   20914:	cmp	r3, r1, lsl #18
   20918:	adc	r0, r0, r0
   2091c:	subcs	r3, r3, r1, lsl #18
   20920:	cmp	r3, r1, lsl #17
   20924:	adc	r0, r0, r0
   20928:	subcs	r3, r3, r1, lsl #17
   2092c:	cmp	r3, r1, lsl #16
   20930:	adc	r0, r0, r0
   20934:	subcs	r3, r3, r1, lsl #16
   20938:	cmp	r3, r1, lsl #15
   2093c:	adc	r0, r0, r0
   20940:	subcs	r3, r3, r1, lsl #15
   20944:	cmp	r3, r1, lsl #14
   20948:	adc	r0, r0, r0
   2094c:	subcs	r3, r3, r1, lsl #14
   20950:	cmp	r3, r1, lsl #13
   20954:	adc	r0, r0, r0
   20958:	subcs	r3, r3, r1, lsl #13
   2095c:	cmp	r3, r1, lsl #12
   20960:	adc	r0, r0, r0
   20964:	subcs	r3, r3, r1, lsl #12
   20968:	cmp	r3, r1, lsl #11
   2096c:	adc	r0, r0, r0
   20970:	subcs	r3, r3, r1, lsl #11
   20974:	cmp	r3, r1, lsl #10
   20978:	adc	r0, r0, r0
   2097c:	subcs	r3, r3, r1, lsl #10
   20980:	cmp	r3, r1, lsl #9
   20984:	adc	r0, r0, r0
   20988:	subcs	r3, r3, r1, lsl #9
   2098c:	cmp	r3, r1, lsl #8
   20990:	adc	r0, r0, r0
   20994:	subcs	r3, r3, r1, lsl #8
   20998:	cmp	r3, r1, lsl #7
   2099c:	adc	r0, r0, r0
   209a0:	subcs	r3, r3, r1, lsl #7
   209a4:	cmp	r3, r1, lsl #6
   209a8:	adc	r0, r0, r0
   209ac:	subcs	r3, r3, r1, lsl #6
   209b0:	cmp	r3, r1, lsl #5
   209b4:	adc	r0, r0, r0
   209b8:	subcs	r3, r3, r1, lsl #5
   209bc:	cmp	r3, r1, lsl #4
   209c0:	adc	r0, r0, r0
   209c4:	subcs	r3, r3, r1, lsl #4
   209c8:	cmp	r3, r1, lsl #3
   209cc:	adc	r0, r0, r0
   209d0:	subcs	r3, r3, r1, lsl #3
   209d4:	cmp	r3, r1, lsl #2
   209d8:	adc	r0, r0, r0
   209dc:	subcs	r3, r3, r1, lsl #2
   209e0:	cmp	r3, r1, lsl #1
   209e4:	adc	r0, r0, r0
   209e8:	subcs	r3, r3, r1, lsl #1
   209ec:	cmp	r3, r1
   209f0:	adc	r0, r0, r0
   209f4:	subcs	r3, r3, r1
   209f8:	cmp	ip, #0
   209fc:	rsbmi	r0, r0, #0
   20a00:	bx	lr
   20a04:	teq	ip, r0
   20a08:	rsbmi	r0, r0, #0
   20a0c:	bx	lr
   20a10:	movcc	r0, #0
   20a14:	asreq	r0, ip, #31
   20a18:	orreq	r0, r0, #1
   20a1c:	bx	lr
   20a20:	clz	r2, r1
   20a24:	rsb	r2, r2, #31
   20a28:	cmp	ip, #0
   20a2c:	lsr	r0, r3, r2
   20a30:	rsbmi	r0, r0, #0
   20a34:	bx	lr
   20a38:	cmp	r0, #0
   20a3c:	mvngt	r0, #-2147483648	; 0x80000000
   20a40:	movlt	r0, #-2147483648	; 0x80000000
   20a44:	b	20f4c <__aeabi_idiv0>

00020a48 <__aeabi_idivmod>:
   20a48:	cmp	r1, #0
   20a4c:	beq	20a38 <.divsi3_skip_div0_test+0x208>
   20a50:	push	{r0, r1, lr}
   20a54:	bl	20830 <.divsi3_skip_div0_test>
   20a58:	pop	{r1, r2, lr}
   20a5c:	mul	r3, r2, r0
   20a60:	sub	r1, r1, r3
   20a64:	bx	lr

00020a68 <__aeabi_llsl>:
   20a68:	subs	r3, r2, #32
   20a6c:	rsb	ip, r2, #32
   20a70:	lslmi	r1, r1, r2
   20a74:	lslpl	r1, r0, r3
   20a78:	orrmi	r1, r1, r0, lsr ip
   20a7c:	lsl	r0, r0, r2
   20a80:	bx	lr

00020a84 <__aeabi_drsub>:
   20a84:	eor	r1, r1, #-2147483648	; 0x80000000
   20a88:	b	20a90 <__adddf3>

00020a8c <__aeabi_dsub>:
   20a8c:	eor	r3, r3, #-2147483648	; 0x80000000

00020a90 <__adddf3>:
   20a90:	push	{r4, r5, lr}
   20a94:	lsl	r4, r1, #1
   20a98:	lsl	r5, r3, #1
   20a9c:	teq	r4, r5
   20aa0:	teqeq	r0, r2
   20aa4:	orrsne	ip, r4, r0
   20aa8:	orrsne	ip, r5, r2
   20aac:	mvnsne	ip, r4, asr #21
   20ab0:	mvnsne	ip, r5, asr #21
   20ab4:	beq	20ca0 <__adddf3+0x210>
   20ab8:	lsr	r4, r4, #21
   20abc:	rsbs	r5, r4, r5, lsr #21
   20ac0:	rsblt	r5, r5, #0
   20ac4:	ble	20ae4 <__adddf3+0x54>
   20ac8:	add	r4, r4, r5
   20acc:	eor	r2, r0, r2
   20ad0:	eor	r3, r1, r3
   20ad4:	eor	r0, r2, r0
   20ad8:	eor	r1, r3, r1
   20adc:	eor	r2, r0, r2
   20ae0:	eor	r3, r1, r3
   20ae4:	cmp	r5, #54	; 0x36
   20ae8:	pophi	{r4, r5, pc}
   20aec:	tst	r1, #-2147483648	; 0x80000000
   20af0:	lsl	r1, r1, #12
   20af4:	mov	ip, #1048576	; 0x100000
   20af8:	orr	r1, ip, r1, lsr #12
   20afc:	beq	20b08 <__adddf3+0x78>
   20b00:	rsbs	r0, r0, #0
   20b04:	rsc	r1, r1, #0
   20b08:	tst	r3, #-2147483648	; 0x80000000
   20b0c:	lsl	r3, r3, #12
   20b10:	orr	r3, ip, r3, lsr #12
   20b14:	beq	20b20 <__adddf3+0x90>
   20b18:	rsbs	r2, r2, #0
   20b1c:	rsc	r3, r3, #0
   20b20:	teq	r4, r5
   20b24:	beq	20c88 <__adddf3+0x1f8>
   20b28:	sub	r4, r4, #1
   20b2c:	rsbs	lr, r5, #32
   20b30:	blt	20b4c <__adddf3+0xbc>
   20b34:	lsl	ip, r2, lr
   20b38:	adds	r0, r0, r2, lsr r5
   20b3c:	adc	r1, r1, #0
   20b40:	adds	r0, r0, r3, lsl lr
   20b44:	adcs	r1, r1, r3, asr r5
   20b48:	b	20b68 <__adddf3+0xd8>
   20b4c:	sub	r5, r5, #32
   20b50:	add	lr, lr, #32
   20b54:	cmp	r2, #1
   20b58:	lsl	ip, r3, lr
   20b5c:	orrcs	ip, ip, #2
   20b60:	adds	r0, r0, r3, asr r5
   20b64:	adcs	r1, r1, r3, asr #31
   20b68:	and	r5, r1, #-2147483648	; 0x80000000
   20b6c:	bpl	20b7c <__adddf3+0xec>
   20b70:	rsbs	ip, ip, #0
   20b74:	rscs	r0, r0, #0
   20b78:	rsc	r1, r1, #0
   20b7c:	cmp	r1, #1048576	; 0x100000
   20b80:	bcc	20bc0 <__adddf3+0x130>
   20b84:	cmp	r1, #2097152	; 0x200000
   20b88:	bcc	20ba8 <__adddf3+0x118>
   20b8c:	lsrs	r1, r1, #1
   20b90:	rrxs	r0, r0
   20b94:	rrx	ip, ip
   20b98:	add	r4, r4, #1
   20b9c:	lsl	r2, r4, #21
   20ba0:	cmn	r2, #4194304	; 0x400000
   20ba4:	bcs	20d00 <__adddf3+0x270>
   20ba8:	cmp	ip, #-2147483648	; 0x80000000
   20bac:	lsrseq	ip, r0, #1
   20bb0:	adcs	r0, r0, #0
   20bb4:	adc	r1, r1, r4, lsl #20
   20bb8:	orr	r1, r1, r5
   20bbc:	pop	{r4, r5, pc}
   20bc0:	lsls	ip, ip, #1
   20bc4:	adcs	r0, r0, r0
   20bc8:	adc	r1, r1, r1
   20bcc:	tst	r1, #1048576	; 0x100000
   20bd0:	sub	r4, r4, #1
   20bd4:	bne	20ba8 <__adddf3+0x118>
   20bd8:	teq	r1, #0
   20bdc:	moveq	r1, r0
   20be0:	moveq	r0, #0
   20be4:	clz	r3, r1
   20be8:	addeq	r3, r3, #32
   20bec:	sub	r3, r3, #11
   20bf0:	subs	r2, r3, #32
   20bf4:	bge	20c18 <__adddf3+0x188>
   20bf8:	adds	r2, r2, #12
   20bfc:	ble	20c14 <__adddf3+0x184>
   20c00:	add	ip, r2, #20
   20c04:	rsb	r2, r2, #12
   20c08:	lsl	r0, r1, ip
   20c0c:	lsr	r1, r1, r2
   20c10:	b	20c28 <__adddf3+0x198>
   20c14:	add	r2, r2, #20
   20c18:	rsble	ip, r2, #32
   20c1c:	lsl	r1, r1, r2
   20c20:	orrle	r1, r1, r0, lsr ip
   20c24:	lslle	r0, r0, r2
   20c28:	subs	r4, r4, r3
   20c2c:	addge	r1, r1, r4, lsl #20
   20c30:	orrge	r1, r1, r5
   20c34:	popge	{r4, r5, pc}
   20c38:	mvn	r4, r4
   20c3c:	subs	r4, r4, #31
   20c40:	bge	20c7c <__adddf3+0x1ec>
   20c44:	adds	r4, r4, #12
   20c48:	bgt	20c64 <__adddf3+0x1d4>
   20c4c:	add	r4, r4, #20
   20c50:	rsb	r2, r4, #32
   20c54:	lsr	r0, r0, r4
   20c58:	orr	r0, r0, r1, lsl r2
   20c5c:	orr	r1, r5, r1, lsr r4
   20c60:	pop	{r4, r5, pc}
   20c64:	rsb	r4, r4, #12
   20c68:	rsb	r2, r4, #32
   20c6c:	lsr	r0, r0, r2
   20c70:	orr	r0, r0, r1, lsl r4
   20c74:	mov	r1, r5
   20c78:	pop	{r4, r5, pc}
   20c7c:	lsr	r0, r1, r4
   20c80:	mov	r1, r5
   20c84:	pop	{r4, r5, pc}
   20c88:	teq	r4, #0
   20c8c:	eor	r3, r3, #1048576	; 0x100000
   20c90:	eoreq	r1, r1, #1048576	; 0x100000
   20c94:	addeq	r4, r4, #1
   20c98:	subne	r5, r5, #1
   20c9c:	b	20b28 <__adddf3+0x98>
   20ca0:	mvns	ip, r4, asr #21
   20ca4:	mvnsne	ip, r5, asr #21
   20ca8:	beq	20d10 <__adddf3+0x280>
   20cac:	teq	r4, r5
   20cb0:	teqeq	r0, r2
   20cb4:	beq	20cc8 <__adddf3+0x238>
   20cb8:	orrs	ip, r4, r0
   20cbc:	moveq	r1, r3
   20cc0:	moveq	r0, r2
   20cc4:	pop	{r4, r5, pc}
   20cc8:	teq	r1, r3
   20ccc:	movne	r1, #0
   20cd0:	movne	r0, #0
   20cd4:	popne	{r4, r5, pc}
   20cd8:	lsrs	ip, r4, #21
   20cdc:	bne	20cf0 <__adddf3+0x260>
   20ce0:	lsls	r0, r0, #1
   20ce4:	adcs	r1, r1, r1
   20ce8:	orrcs	r1, r1, #-2147483648	; 0x80000000
   20cec:	pop	{r4, r5, pc}
   20cf0:	adds	r4, r4, #4194304	; 0x400000
   20cf4:	addcc	r1, r1, #1048576	; 0x100000
   20cf8:	popcc	{r4, r5, pc}
   20cfc:	and	r5, r1, #-2147483648	; 0x80000000
   20d00:	orr	r1, r5, #2130706432	; 0x7f000000
   20d04:	orr	r1, r1, #15728640	; 0xf00000
   20d08:	mov	r0, #0
   20d0c:	pop	{r4, r5, pc}
   20d10:	mvns	ip, r4, asr #21
   20d14:	movne	r1, r3
   20d18:	movne	r0, r2
   20d1c:	mvnseq	ip, r5, asr #21
   20d20:	movne	r3, r1
   20d24:	movne	r2, r0
   20d28:	orrs	r4, r0, r1, lsl #12
   20d2c:	orrseq	r5, r2, r3, lsl #12
   20d30:	teqeq	r1, r3
   20d34:	orrne	r1, r1, #524288	; 0x80000
   20d38:	pop	{r4, r5, pc}

00020d3c <__aeabi_ui2d>:
   20d3c:	teq	r0, #0
   20d40:	moveq	r1, #0
   20d44:	bxeq	lr
   20d48:	push	{r4, r5, lr}
   20d4c:	mov	r4, #1024	; 0x400
   20d50:	add	r4, r4, #50	; 0x32
   20d54:	mov	r5, #0
   20d58:	mov	r1, #0
   20d5c:	b	20bd8 <__adddf3+0x148>

00020d60 <__aeabi_i2d>:
   20d60:	teq	r0, #0
   20d64:	moveq	r1, #0
   20d68:	bxeq	lr
   20d6c:	push	{r4, r5, lr}
   20d70:	mov	r4, #1024	; 0x400
   20d74:	add	r4, r4, #50	; 0x32
   20d78:	ands	r5, r0, #-2147483648	; 0x80000000
   20d7c:	rsbmi	r0, r0, #0
   20d80:	mov	r1, #0
   20d84:	b	20bd8 <__adddf3+0x148>

00020d88 <__aeabi_f2d>:
   20d88:	lsls	r2, r0, #1
   20d8c:	asr	r1, r2, #3
   20d90:	rrx	r1, r1
   20d94:	lsl	r0, r2, #28
   20d98:	andsne	r3, r2, #-16777216	; 0xff000000
   20d9c:	teqne	r3, #-16777216	; 0xff000000
   20da0:	eorne	r1, r1, #939524096	; 0x38000000
   20da4:	bxne	lr
   20da8:	teq	r2, #0
   20dac:	teqne	r3, #-16777216	; 0xff000000
   20db0:	bxeq	lr
   20db4:	push	{r4, r5, lr}
   20db8:	mov	r4, #896	; 0x380
   20dbc:	and	r5, r1, #-2147483648	; 0x80000000
   20dc0:	bic	r1, r1, #-2147483648	; 0x80000000
   20dc4:	b	20bd8 <__adddf3+0x148>

00020dc8 <__aeabi_ul2d>:
   20dc8:	orrs	r2, r0, r1
   20dcc:	bxeq	lr
   20dd0:	push	{r4, r5, lr}
   20dd4:	mov	r5, #0
   20dd8:	b	20df8 <__aeabi_l2d+0x1c>

00020ddc <__aeabi_l2d>:
   20ddc:	orrs	r2, r0, r1
   20de0:	bxeq	lr
   20de4:	push	{r4, r5, lr}
   20de8:	ands	r5, r1, #-2147483648	; 0x80000000
   20dec:	bpl	20df8 <__aeabi_l2d+0x1c>
   20df0:	rsbs	r0, r0, #0
   20df4:	rsc	r1, r1, #0
   20df8:	mov	r4, #1024	; 0x400
   20dfc:	add	r4, r4, #50	; 0x32
   20e00:	lsrs	ip, r1, #22
   20e04:	beq	20b7c <__adddf3+0xec>
   20e08:	mov	r2, #3
   20e0c:	lsrs	ip, ip, #3
   20e10:	addne	r2, r2, #3
   20e14:	lsrs	ip, ip, #3
   20e18:	addne	r2, r2, #3
   20e1c:	add	r2, r2, ip, lsr #3
   20e20:	rsb	r3, r2, #32
   20e24:	lsl	ip, r0, r3
   20e28:	lsr	r0, r0, r2
   20e2c:	orr	r0, r0, r1, lsl r3
   20e30:	lsr	r1, r1, r2
   20e34:	add	r4, r4, r2
   20e38:	b	20b7c <__adddf3+0xec>

00020e3c <__aeabi_ldivmod>:
   20e3c:	cmp	r3, #0
   20e40:	cmpeq	r2, #0
   20e44:	bne	20e68 <__aeabi_ldivmod+0x2c>
   20e48:	cmp	r1, #0
   20e4c:	movlt	r1, #-2147483648	; 0x80000000
   20e50:	movlt	r0, #0
   20e54:	blt	20e64 <__aeabi_ldivmod+0x28>
   20e58:	cmpeq	r0, #0
   20e5c:	mvnne	r1, #-2147483648	; 0x80000000
   20e60:	mvnne	r0, #0
   20e64:	b	20f4c <__aeabi_idiv0>
   20e68:	sub	sp, sp, #8
   20e6c:	push	{sp, lr}
   20e70:	cmp	r1, #0
   20e74:	blt	20e94 <__aeabi_ldivmod+0x58>
   20e78:	cmp	r3, #0
   20e7c:	blt	20ec8 <__aeabi_ldivmod+0x8c>
   20e80:	bl	20fd0 <__udivmoddi4>
   20e84:	ldr	lr, [sp, #4]
   20e88:	add	sp, sp, #8
   20e8c:	pop	{r2, r3}
   20e90:	bx	lr
   20e94:	rsbs	r0, r0, #0
   20e98:	sbc	r1, r1, r1, lsl #1
   20e9c:	cmp	r3, #0
   20ea0:	blt	20eec <__aeabi_ldivmod+0xb0>
   20ea4:	bl	20fd0 <__udivmoddi4>
   20ea8:	ldr	lr, [sp, #4]
   20eac:	add	sp, sp, #8
   20eb0:	pop	{r2, r3}
   20eb4:	rsbs	r0, r0, #0
   20eb8:	sbc	r1, r1, r1, lsl #1
   20ebc:	rsbs	r2, r2, #0
   20ec0:	sbc	r3, r3, r3, lsl #1
   20ec4:	bx	lr
   20ec8:	rsbs	r2, r2, #0
   20ecc:	sbc	r3, r3, r3, lsl #1
   20ed0:	bl	20fd0 <__udivmoddi4>
   20ed4:	ldr	lr, [sp, #4]
   20ed8:	add	sp, sp, #8
   20edc:	pop	{r2, r3}
   20ee0:	rsbs	r0, r0, #0
   20ee4:	sbc	r1, r1, r1, lsl #1
   20ee8:	bx	lr
   20eec:	rsbs	r2, r2, #0
   20ef0:	sbc	r3, r3, r3, lsl #1
   20ef4:	bl	20fd0 <__udivmoddi4>
   20ef8:	ldr	lr, [sp, #4]
   20efc:	add	sp, sp, #8
   20f00:	pop	{r2, r3}
   20f04:	rsbs	r2, r2, #0
   20f08:	sbc	r3, r3, r3, lsl #1
   20f0c:	bx	lr

00020f10 <__aeabi_uldivmod>:
   20f10:	cmp	r3, #0
   20f14:	cmpeq	r2, #0
   20f18:	bne	20f30 <__aeabi_uldivmod+0x20>
   20f1c:	cmp	r1, #0
   20f20:	cmpeq	r0, #0
   20f24:	mvnne	r1, #0
   20f28:	mvnne	r0, #0
   20f2c:	b	20f4c <__aeabi_idiv0>
   20f30:	sub	sp, sp, #8
   20f34:	push	{sp, lr}
   20f38:	bl	20fd0 <__udivmoddi4>
   20f3c:	ldr	lr, [sp, #4]
   20f40:	add	sp, sp, #8
   20f44:	pop	{r2, r3}
   20f48:	bx	lr

00020f4c <__aeabi_idiv0>:
   20f4c:	push	{r1, lr}
   20f50:	mov	r0, #8
   20f54:	bl	3dcc <raise@plt>
   20f58:	pop	{r1, pc}

00020f5c <__aeabi_d2lz>:
   20f5c:	vmov	d7, r0, r1
   20f60:	vcmpe.f64	d7, #0.0
   20f64:	vmrs	APSR_nzcv, fpscr
   20f68:	bmi	20f70 <__aeabi_d2lz+0x14>
   20f6c:	b	20f88 <__aeabi_d2ulz>
   20f70:	push	{r4, lr}
   20f74:	eor	r1, r1, #-2147483648	; 0x80000000
   20f78:	bl	20f88 <__aeabi_d2ulz>
   20f7c:	rsbs	r0, r0, #0
   20f80:	rsc	r1, r1, #0
   20f84:	pop	{r4, pc}

00020f88 <__aeabi_d2ulz>:
   20f88:	vmov	d7, r0, r1
   20f8c:	vldr	d6, [pc, #44]	; 20fc0 <__aeabi_d2ulz+0x38>
   20f90:	vldr	d5, [pc, #48]	; 20fc8 <__aeabi_d2ulz+0x40>
   20f94:	mov	r0, #0
   20f98:	vmul.f64	d6, d7, d6
   20f9c:	vcvt.u32.f64	s12, d6
   20fa0:	vcvt.f64.u32	d4, s12
   20fa4:	vmov	r1, s12
   20fa8:	vmls.f64	d7, d4, d5
   20fac:	vcvt.u32.f64	s14, d7
   20fb0:	vmov	r3, s14
   20fb4:	orr	r0, r0, r3
   20fb8:	bx	lr
   20fbc:	nop			; (mov r0, r0)
   20fc0:	.word	0x00000000
   20fc4:	.word	0x3df00000
   20fc8:	.word	0x00000000
   20fcc:	.word	0x41f00000

00020fd0 <__udivmoddi4>:
   20fd0:	cmp	r1, r3
   20fd4:	push	{r4, r5, r6, r7, r8, r9, lr}
   20fd8:	cmpeq	r0, r2
   20fdc:	mov	r4, r0
   20fe0:	mov	r5, r1
   20fe4:	ldr	r9, [sp, #28]
   20fe8:	movcc	r0, #0
   20fec:	movcc	r1, #0
   20ff0:	bcc	210e8 <__udivmoddi4+0x118>
   20ff4:	cmp	r3, #0
   20ff8:	clzeq	ip, r2
   20ffc:	clzne	ip, r3
   21000:	addeq	ip, ip, #32
   21004:	cmp	r5, #0
   21008:	clzeq	r1, r4
   2100c:	addeq	r1, r1, #32
   21010:	clzne	r1, r5
   21014:	sub	ip, ip, r1
   21018:	sub	lr, ip, #32
   2101c:	lsl	r7, r3, ip
   21020:	rsb	r8, ip, #32
   21024:	orr	r7, r7, r2, lsl lr
   21028:	orr	r7, r7, r2, lsr r8
   2102c:	lsl	r6, r2, ip
   21030:	cmp	r5, r7
   21034:	cmpeq	r4, r6
   21038:	movcc	r0, #0
   2103c:	movcc	r1, #0
   21040:	bcc	2105c <__udivmoddi4+0x8c>
   21044:	mov	r3, #1
   21048:	subs	r4, r4, r6
   2104c:	lsl	r1, r3, lr
   21050:	lsl	r0, r3, ip
   21054:	orr	r1, r1, r3, lsr r8
   21058:	sbc	r5, r5, r7
   2105c:	cmp	ip, #0
   21060:	beq	210e8 <__udivmoddi4+0x118>
   21064:	lsrs	r3, r7, #1
   21068:	rrx	r2, r6
   2106c:	mov	r6, ip
   21070:	b	21094 <__udivmoddi4+0xc4>
   21074:	subs	r4, r4, r2
   21078:	sbc	r5, r5, r3
   2107c:	adds	r4, r4, r4
   21080:	adc	r5, r5, r5
   21084:	adds	r4, r4, #1
   21088:	adc	r5, r5, #0
   2108c:	subs	r6, r6, #1
   21090:	beq	210b0 <__udivmoddi4+0xe0>
   21094:	cmp	r5, r3
   21098:	cmpeq	r4, r2
   2109c:	bcs	21074 <__udivmoddi4+0xa4>
   210a0:	adds	r4, r4, r4
   210a4:	adc	r5, r5, r5
   210a8:	subs	r6, r6, #1
   210ac:	bne	21094 <__udivmoddi4+0xc4>
   210b0:	lsr	r6, r4, ip
   210b4:	lsr	r7, r5, ip
   210b8:	orr	r6, r6, r5, lsl r8
   210bc:	adds	r2, r0, r4
   210c0:	orr	r6, r6, r5, lsr lr
   210c4:	adc	r3, r1, r5
   210c8:	lsl	r1, r7, ip
   210cc:	orr	r1, r1, r6, lsl lr
   210d0:	lsl	r0, r6, ip
   210d4:	orr	r1, r1, r6, lsr r8
   210d8:	subs	r0, r2, r0
   210dc:	mov	r4, r6
   210e0:	mov	r5, r7
   210e4:	sbc	r1, r3, r1
   210e8:	cmp	r9, #0
   210ec:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   210f0:	strd	r4, [r9]
   210f4:	pop	{r4, r5, r6, r7, r8, r9, pc}

Disassembly of section .fini:

000210f8 <_fini>:
   210f8:	push	{r3, lr}
   210fc:	pop	{r3, pc}
