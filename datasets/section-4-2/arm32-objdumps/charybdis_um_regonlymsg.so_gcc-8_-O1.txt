
../repos/charybdis/modules/.libs/um_regonlymsg.so:     file format elf32-littlearm


Disassembly of section .init:

00000460 <_init>:
 460:	push	{r3, lr}
 464:	bl	4e0 <call_weak_fn>
 468:	pop	{r3, pc}

Disassembly of section .plt:

0000046c <.plt>:
 46c:	push	{lr}		; (str lr, [sp, #-4]!)
 470:	ldr	lr, [pc, #4]	; 47c <.plt+0x10>
 474:	add	lr, pc, lr
 478:	ldr	pc, [lr, #8]!
 47c:	.word	0x00010b84

00000480 <__cxa_finalize@plt>:
 480:	add	ip, pc, #0, 12
 484:	add	ip, ip, #16, 20	; 0x10000
 488:	ldr	pc, [ip, #2948]!	; 0xb84

0000048c <ierror@plt>:
 48c:	add	ip, pc, #0, 12
 490:	add	ip, ip, #16, 20	; 0x10000
 494:	ldr	pc, [ip, #2940]!	; 0xb7c

00000498 <find_umode_slot@plt>:
 498:	add	ip, pc, #0, 12
 49c:	add	ip, ip, #16, 20	; 0x10000
 4a0:	ldr	pc, [ip, #2932]!	; 0xb74

000004a4 <__gmon_start__@plt>:
 4a4:	add	ip, pc, #0, 12
 4a8:	add	ip, ip, #16, 20	; 0x10000
 4ac:	ldr	pc, [ip, #2924]!	; 0xb6c

000004b0 <sendto_one_numeric@plt>:
 4b0:	add	ip, pc, #0, 12
 4b4:	add	ip, ip, #16, 20	; 0x10000
 4b8:	ldr	pc, [ip, #2916]!	; 0xb64

000004bc <snprintf@plt>:
 4bc:	add	ip, pc, #0, 12
 4c0:	add	ip, ip, #16, 20	; 0x10000
 4c4:	ldr	pc, [ip, #2908]!	; 0xb5c

000004c8 <__assert_fail@plt>:
 4c8:	add	ip, pc, #0, 12
 4cc:	add	ip, ip, #16, 20	; 0x10000
 4d0:	ldr	pc, [ip, #2900]!	; 0xb54

000004d4 <construct_umodebuf@plt>:
 4d4:	add	ip, pc, #0, 12
 4d8:	add	ip, ip, #16, 20	; 0x10000
 4dc:	ldr	pc, [ip, #2892]!	; 0xb4c

Disassembly of section .text:

000004e0 <call_weak_fn>:
 4e0:	ldr	r3, [pc, #20]	; 4fc <call_weak_fn+0x1c>
 4e4:	ldr	r2, [pc, #20]	; 500 <call_weak_fn+0x20>
 4e8:	add	r3, pc, r3
 4ec:	ldr	r2, [r3, r2]
 4f0:	cmp	r2, #0
 4f4:	bxeq	lr
 4f8:	b	4a4 <__gmon_start__@plt>
 4fc:	.word	0x00010b10
 500:	.word	0x00000038

00000504 <deregister_tm_clones>:
 504:	ldr	r0, [pc, #44]	; 538 <deregister_tm_clones+0x34>
 508:	ldr	r3, [pc, #44]	; 53c <deregister_tm_clones+0x38>
 50c:	add	r0, pc, r0
 510:	add	r3, pc, r3
 514:	cmp	r3, r0
 518:	ldr	r3, [pc, #32]	; 540 <deregister_tm_clones+0x3c>
 51c:	add	r3, pc, r3
 520:	bxeq	lr
 524:	ldr	r2, [pc, #24]	; 544 <deregister_tm_clones+0x40>
 528:	ldr	r3, [r3, r2]
 52c:	cmp	r3, #0
 530:	bxeq	lr
 534:	bx	r3
 538:	.word	0x00010b7c
 53c:	.word	0x00010b78
 540:	.word	0x00010adc
 544:	.word	0x00000030

00000548 <register_tm_clones>:
 548:	ldr	r0, [pc, #56]	; 588 <register_tm_clones+0x40>
 54c:	ldr	r3, [pc, #56]	; 58c <register_tm_clones+0x44>
 550:	add	r0, pc, r0
 554:	add	r3, pc, r3
 558:	sub	r1, r3, r0
 55c:	ldr	r3, [pc, #44]	; 590 <register_tm_clones+0x48>
 560:	asr	r1, r1, #2
 564:	add	r3, pc, r3
 568:	add	r1, r1, r1, lsr #31
 56c:	asrs	r1, r1, #1
 570:	bxeq	lr
 574:	ldr	r2, [pc, #24]	; 594 <register_tm_clones+0x4c>
 578:	ldr	r3, [r3, r2]
 57c:	cmp	r3, #0
 580:	bxeq	lr
 584:	bx	r3
 588:	.word	0x00010b38
 58c:	.word	0x00010b34
 590:	.word	0x00010a94
 594:	.word	0x0000003c

00000598 <__do_global_dtors_aux>:
 598:	ldr	r3, [pc, #76]	; 5ec <__do_global_dtors_aux+0x54>
 59c:	ldr	r2, [pc, #76]	; 5f0 <__do_global_dtors_aux+0x58>
 5a0:	add	r3, pc, r3
 5a4:	add	r2, pc, r2
 5a8:	ldrb	r3, [r3]
 5ac:	cmp	r3, #0
 5b0:	bxne	lr
 5b4:	ldr	r3, [pc, #56]	; 5f4 <__do_global_dtors_aux+0x5c>
 5b8:	push	{r4, lr}
 5bc:	ldr	r3, [r2, r3]
 5c0:	cmp	r3, #0
 5c4:	beq	5d4 <__do_global_dtors_aux+0x3c>
 5c8:	ldr	r3, [pc, #40]	; 5f8 <__do_global_dtors_aux+0x60>
 5cc:	ldr	r0, [pc, r3]
 5d0:	bl	480 <__cxa_finalize@plt>
 5d4:	bl	504 <deregister_tm_clones>
 5d8:	ldr	r3, [pc, #28]	; 5fc <__do_global_dtors_aux+0x64>
 5dc:	mov	r2, #1
 5e0:	add	r3, pc, r3
 5e4:	strb	r2, [r3]
 5e8:	pop	{r4, pc}
 5ec:	.word	0x00010ae8
 5f0:	.word	0x00010a54
 5f4:	.word	0x0000002c
 5f8:	.word	0x00010a6c
 5fc:	.word	0x00010aa8

00000600 <frame_dummy>:
 600:	b	548 <register_tm_clones>

00000604 <allow_message>:
 604:	str	r4, [sp, #-8]!
 608:	str	lr, [sp, #4]
 60c:	ldr	ip, [pc, #304]	; 744 <allow_message+0x140>
 610:	add	ip, pc, ip
 614:	ldr	lr, [r1, #64]	; 0x40
 618:	and	r2, lr, #8192	; 0x2000
 61c:	mov	r3, #0
 620:	orrs	r3, r2, r3
 624:	beq	6fc <allow_message+0xf8>
 628:	ldrh	r3, [r1, #80]	; 0x50
 62c:	cmp	r3, #64	; 0x40
 630:	bne	710 <allow_message+0x10c>
 634:	ldr	r3, [pc, #268]	; 748 <allow_message+0x144>
 638:	ldr	r3, [ip, r3]
 63c:	ldr	r3, [r3, #328]	; 0x148
 640:	ldr	r2, [r1, #56]	; 0x38
 644:	bics	r3, r3, r2
 648:	bne	718 <allow_message+0x114>
 64c:	ldrh	r3, [r0, #80]	; 0x50
 650:	cmp	r3, #32
 654:	beq	720 <allow_message+0x11c>
 658:	ldr	r3, [r0, #56]	; 0x38
 65c:	ubfx	r3, r3, #12, #1
 660:	cmp	r1, r0
 664:	orreq	r3, r3, #1
 668:	cmp	r3, #0
 66c:	bne	700 <allow_message+0xfc>
 670:	ldr	r3, [r1, #432]	; 0x1b0
 674:	cmn	r3, #316	; 0x13c
 678:	beq	6bc <allow_message+0xb8>
 67c:	cmp	r0, #0
 680:	beq	6dc <allow_message+0xd8>
 684:	ldr	r3, [r3, #316]	; 0x13c
 688:	cmp	r3, #0
 68c:	beq	730 <allow_message+0x12c>
 690:	ldr	r2, [r3]
 694:	cmp	r0, r2
 698:	beq	728 <allow_message+0x124>
 69c:	ldr	r3, [r3, #8]
 6a0:	cmp	r3, #0
 6a4:	beq	730 <allow_message+0x12c>
 6a8:	ldr	r2, [r3]
 6ac:	cmp	r0, r2
 6b0:	bne	69c <allow_message+0x98>
 6b4:	mov	r3, #1
 6b8:	b	700 <allow_message+0xfc>
 6bc:	ldr	r3, [pc, #136]	; 74c <allow_message+0x148>
 6c0:	add	r3, pc, r3
 6c4:	movw	r2, #310	; 0x136
 6c8:	ldr	r1, [pc, #128]	; 750 <allow_message+0x14c>
 6cc:	add	r1, pc, r1
 6d0:	ldr	r0, [pc, #124]	; 754 <allow_message+0x150>
 6d4:	add	r0, pc, r0
 6d8:	bl	4c8 <__assert_fail@plt>
 6dc:	ldr	r3, [pc, #116]	; 758 <allow_message+0x154>
 6e0:	add	r3, pc, r3
 6e4:	movw	r2, #311	; 0x137
 6e8:	ldr	r1, [pc, #108]	; 75c <allow_message+0x158>
 6ec:	add	r1, pc, r1
 6f0:	ldr	r0, [pc, #104]	; 760 <allow_message+0x15c>
 6f4:	add	r0, pc, r0
 6f8:	bl	4c8 <__assert_fail@plt>
 6fc:	mov	r3, #1
 700:	mov	r0, r3
 704:	ldr	r4, [sp]
 708:	add	sp, sp, #4
 70c:	pop	{pc}		; (ldr pc, [sp], #4)
 710:	mov	r3, #1
 714:	b	700 <allow_message+0xfc>
 718:	mov	r3, #1
 71c:	b	700 <allow_message+0xfc>
 720:	mov	r3, #1
 724:	b	700 <allow_message+0xfc>
 728:	mov	r3, #1
 72c:	b	700 <allow_message+0xfc>
 730:	ldr	r3, [r0, #24]
 734:	ldrb	r3, [r3, #40]	; 0x28
 738:	adds	r3, r3, #0
 73c:	movne	r3, #1
 740:	b	700 <allow_message+0xfc>
 744:	.word	0x000109e8
 748:	.word	0x00000034
 74c:	.word	0x00000234
 750:	.word	0x00000280
 754:	.word	0x00000294
 758:	.word	0x00000214
 75c:	.word	0x00000260
 760:	.word	0x00000284

00000764 <h_hdl_privmsg_user>:
 764:	ldr	r3, [r0, #16]
 768:	cmp	r3, #0
 76c:	bxne	lr
 770:	strd	r4, [sp, #-16]!
 774:	str	r6, [sp, #8]
 778:	str	lr, [sp, #12]
 77c:	mov	r4, r0
 780:	ldr	r5, [r0, #4]
 784:	ldr	r6, [r0, #8]
 788:	mov	r1, r6
 78c:	mov	r0, r5
 790:	bl	604 <allow_message>
 794:	cmp	r0, #0
 798:	bne	7a8 <h_hdl_privmsg_user+0x44>
 79c:	ldr	r3, [r4]
 7a0:	cmp	r3, #0
 7a4:	bne	7b8 <h_hdl_privmsg_user+0x54>
 7a8:	ldrd	r4, [sp]
 7ac:	ldr	r6, [sp, #8]
 7b0:	add	sp, sp, #12
 7b4:	pop	{pc}		; (ldr pc, [sp], #4)
 7b8:	add	r3, r6, #88	; 0x58
 7bc:	ldr	r2, [pc, #24]	; 7dc <h_hdl_privmsg_user+0x78>
 7c0:	add	r2, pc, r2
 7c4:	movw	r1, #486	; 0x1e6
 7c8:	mov	r0, r5
 7cc:	bl	4b0 <sendto_one_numeric@plt>
 7d0:	movw	r3, #486	; 0x1e6
 7d4:	str	r3, [r4, #16]
 7d8:	b	7a8 <h_hdl_privmsg_user+0x44>
 7dc:	.word	0x000001c8

000007e0 <h_hdl_invite>:
 7e0:	ldr	r3, [r0, #16]
 7e4:	cmp	r3, #0
 7e8:	bxne	lr
 7ec:	strd	r4, [sp, #-16]!
 7f0:	str	r6, [sp, #8]
 7f4:	str	lr, [sp, #12]
 7f8:	mov	r4, r0
 7fc:	ldr	r5, [r0, #12]
 800:	mov	r1, r5
 804:	ldr	r0, [r0]
 808:	bl	604 <allow_message>
 80c:	cmp	r0, #0
 810:	beq	824 <h_hdl_invite+0x44>
 814:	ldrd	r4, [sp]
 818:	ldr	r6, [sp, #8]
 81c:	add	sp, sp, #12
 820:	pop	{pc}		; (ldr pc, [sp], #4)
 824:	ldr	r0, [pc, #40]	; 854 <h_hdl_invite+0x74>
 828:	add	r0, pc, r0
 82c:	add	r3, r5, #88	; 0x58
 830:	ldr	r2, [pc, #32]	; 858 <h_hdl_invite+0x78>
 834:	add	r2, pc, r2
 838:	mov	r1, #512	; 0x200
 83c:	mov	r5, r0
 840:	bl	4bc <snprintf@plt>
 844:	movw	r3, #486	; 0x1e6
 848:	str	r3, [r4, #16]
 84c:	str	r5, [r4, #28]
 850:	b	814 <h_hdl_invite+0x34>
 854:	.word	0x00010864
 858:	.word	0x00000154

0000085c <um_regonlymsg_moddeinit>:
 85c:	str	r4, [sp, #-8]!
 860:	str	lr, [sp, #4]
 864:	ldr	r3, [pc, #32]	; 88c <um_regonlymsg_moddeinit+0x30>
 868:	add	r3, pc, r3
 86c:	ldr	r2, [pc, #28]	; 890 <um_regonlymsg_moddeinit+0x34>
 870:	ldr	r3, [r3, r2]
 874:	mov	r2, #0
 878:	str	r2, [r3, #328]	; 0x148
 87c:	bl	4d4 <construct_umodebuf@plt>
 880:	ldr	r4, [sp]
 884:	add	sp, sp, #4
 888:	pop	{pc}		; (ldr pc, [sp], #4)
 88c:	.word	0x00010790
 890:	.word	0x00000034

00000894 <um_regonlymsg_modinit>:
 894:	str	r4, [sp, #-8]!
 898:	str	lr, [sp, #4]
 89c:	ldr	r4, [pc, #68]	; 8e8 <um_regonlymsg_modinit+0x54>
 8a0:	add	r4, pc, r4
 8a4:	bl	498 <find_umode_slot@plt>
 8a8:	ldr	r3, [pc, #60]	; 8ec <um_regonlymsg_modinit+0x58>
 8ac:	ldr	r4, [r4, r3]
 8b0:	str	r0, [r4, #328]	; 0x148
 8b4:	bl	4d4 <construct_umodebuf@plt>
 8b8:	ldr	r3, [r4, #328]	; 0x148
 8bc:	cmp	r3, #0
 8c0:	movne	r0, #0
 8c4:	beq	8d4 <um_regonlymsg_modinit+0x40>
 8c8:	ldr	r4, [sp]
 8cc:	add	sp, sp, #4
 8d0:	pop	{pc}		; (ldr pc, [sp], #4)
 8d4:	ldr	r0, [pc, #20]	; 8f0 <um_regonlymsg_modinit+0x5c>
 8d8:	add	r0, pc, r0
 8dc:	bl	48c <ierror@plt>
 8e0:	mvn	r0, #0
 8e4:	b	8c8 <um_regonlymsg_modinit+0x34>
 8e8:	.word	0x00010758
 8ec:	.word	0x00000034
 8f0:	.word	0x000000e8

Disassembly of section .fini:

000008f4 <_fini>:
 8f4:	push	{r3, lr}
 8f8:	pop	{r3, pc}
