
../repos/daq-2.0.7/os-daq-modules/.libs/daq_pcap.so:     file format elf32-littlearm


Disassembly of section .init:

00000884 <_init>:
 884:	push	{r3, lr}
 888:	bl	a54 <call_weak_fn>
 88c:	pop	{r3, pc}

Disassembly of section .plt:

00000890 <.plt>:
 890:	push	{lr}		; (str lr, [sp, #-4]!)
 894:	ldr	lr, [pc, #4]	; 8a0 <.plt+0x10>
 898:	add	lr, pc, lr
 89c:	ldr	pc, [lr, #8]!
 8a0:	.word	0x00011760

000008a4 <calloc@plt>:
 8a4:	add	ip, pc, #0, 12
 8a8:	add	ip, ip, #69632	; 0x11000
 8ac:	ldr	pc, [ip, #1888]!	; 0x760

000008b0 <raise@plt>:
 8b0:	add	ip, pc, #0, 12
 8b4:	add	ip, ip, #69632	; 0x11000
 8b8:	ldr	pc, [ip, #1880]!	; 0x758

000008bc <strcmp@plt>:
 8bc:	add	ip, pc, #0, 12
 8c0:	add	ip, ip, #69632	; 0x11000
 8c4:	ldr	pc, [ip, #1872]!	; 0x750

000008c8 <__cxa_finalize@plt>:
 8c8:	add	ip, pc, #0, 12
 8cc:	add	ip, ip, #69632	; 0x11000
 8d0:	ldr	pc, [ip, #1864]!	; 0x748

000008d4 <pcap_activate@plt>:
 8d4:	add	ip, pc, #0, 12
 8d8:	add	ip, ip, #69632	; 0x11000
 8dc:	ldr	pc, [ip, #1856]!	; 0x740

000008e0 <strtol@plt>:
 8e0:	add	ip, pc, #0, 12
 8e4:	add	ip, ip, #69632	; 0x11000
 8e8:	ldr	pc, [ip, #1848]!	; 0x738

000008ec <pcap_setfilter@plt>:
 8ec:	add	ip, pc, #0, 12
 8f0:	add	ip, ip, #69632	; 0x11000
 8f4:	ldr	pc, [ip, #1840]!	; 0x730

000008f8 <printf@plt>:
 8f8:	add	ip, pc, #0, 12
 8fc:	add	ip, ip, #69632	; 0x11000
 900:	ldr	pc, [ip, #1832]!	; 0x728

00000904 <free@plt>:
 904:	add	ip, pc, #0, 12
 908:	add	ip, ip, #69632	; 0x11000
 90c:	ldr	pc, [ip, #1824]!	; 0x720

00000910 <memcpy@plt>:
 910:	add	ip, pc, #0, 12
 914:	add	ip, ip, #69632	; 0x11000
 918:	ldr	pc, [ip, #1816]!	; 0x718

0000091c <pcap_set_timeout@plt>:
 91c:	add	ip, pc, #0, 12
 920:	add	ip, ip, #69632	; 0x11000
 924:	ldr	pc, [ip, #1808]!	; 0x710

00000928 <strdup@plt>:
 928:	add	ip, pc, #0, 12
 92c:	add	ip, ip, #69632	; 0x11000
 930:	ldr	pc, [ip, #1800]!	; 0x708

00000934 <pcap_create@plt>:
 934:	add	ip, pc, #0, 12
 938:	add	ip, ip, #69632	; 0x11000
 93c:	ldr	pc, [ip, #1792]!	; 0x700

00000940 <pcap_close@plt>:
 940:	add	ip, pc, #0, 12
 944:	add	ip, ip, #69632	; 0x11000
 948:	ldr	pc, [ip, #1784]!	; 0x6f8

0000094c <pcap_stats@plt>:
 94c:	add	ip, pc, #0, 12
 950:	add	ip, ip, #69632	; 0x11000
 954:	ldr	pc, [ip, #1776]!	; 0x6f0

00000958 <pcap_open_dead@plt>:
 958:	add	ip, pc, #0, 12
 95c:	add	ip, ip, #69632	; 0x11000
 960:	ldr	pc, [ip, #1768]!	; 0x6e8

00000964 <pcap_set_snaplen@plt>:
 964:	add	ip, pc, #0, 12
 968:	add	ip, ip, #69632	; 0x11000
 96c:	ldr	pc, [ip, #1760]!	; 0x6e0

00000970 <pcap_breakloop@plt>:
 970:	add	ip, pc, #0, 12
 974:	add	ip, ip, #69632	; 0x11000
 978:	ldr	pc, [ip, #1752]!	; 0x6d8

0000097c <getenv@plt>:
 97c:	add	ip, pc, #0, 12
 980:	add	ip, ip, #69632	; 0x11000
 984:	ldr	pc, [ip, #1744]!	; 0x6d0

00000988 <pcap_geterr@plt>:
 988:	add	ip, pc, #0, 12
 98c:	add	ip, ip, #69632	; 0x11000
 990:	ldr	pc, [ip, #1736]!	; 0x6c8

00000994 <pcap_set_promisc@plt>:
 994:	add	ip, pc, #0, 12
 998:	add	ip, ip, #69632	; 0x11000
 99c:	ldr	pc, [ip, #1728]!	; 0x6c0

000009a0 <pcap_open_offline@plt>:
 9a0:	add	ip, pc, #0, 12
 9a4:	add	ip, ip, #69632	; 0x11000
 9a8:	ldr	pc, [ip, #1720]!	; 0x6b8

000009ac <__gmon_start__@plt>:
 9ac:	add	ip, pc, #0, 12
 9b0:	add	ip, ip, #69632	; 0x11000
 9b4:	ldr	pc, [ip, #1712]!	; 0x6b0

000009b8 <getpagesize@plt>:
 9b8:	add	ip, pc, #0, 12
 9bc:	add	ip, ip, #69632	; 0x11000
 9c0:	ldr	pc, [ip, #1704]!	; 0x6a8

000009c4 <snprintf@plt>:
 9c4:	add	ip, pc, #0, 12
 9c8:	add	ip, ip, #69632	; 0x11000
 9cc:	ldr	pc, [ip, #1696]!	; 0x6a0

000009d0 <memset@plt>:
 9d0:	add	ip, pc, #0, 12
 9d4:	add	ip, ip, #69632	; 0x11000
 9d8:	ldr	pc, [ip, #1688]!	; 0x698

000009dc <pcap_inject@plt>:
 9dc:	add	ip, pc, #0, 12
 9e0:	add	ip, ip, #69632	; 0x11000
 9e4:	ldr	pc, [ip, #1680]!	; 0x690

000009e8 <pcap_compile@plt>:
 9e8:	add	ip, pc, #0, 12
 9ec:	add	ip, ip, #69632	; 0x11000
 9f0:	ldr	pc, [ip, #1672]!	; 0x688

000009f4 <pcap_snapshot@plt>:
 9f4:	add	ip, pc, #0, 12
 9f8:	add	ip, ip, #69632	; 0x11000
 9fc:	ldr	pc, [ip, #1664]!	; 0x680

00000a00 <pcap_freecode@plt>:
 a00:	add	ip, pc, #0, 12
 a04:	add	ip, ip, #69632	; 0x11000
 a08:	ldr	pc, [ip, #1656]!	; 0x678

00000a0c <pcap_statustostr@plt>:
 a0c:	add	ip, pc, #0, 12
 a10:	add	ip, ip, #69632	; 0x11000
 a14:	ldr	pc, [ip, #1648]!	; 0x670

00000a18 <pcap_datalink@plt>:
 a18:	add	ip, pc, #0, 12
 a1c:	add	ip, ip, #69632	; 0x11000
 a20:	ldr	pc, [ip, #1640]!	; 0x668

00000a24 <pcap_lookupnet@plt>:
 a24:	add	ip, pc, #0, 12
 a28:	add	ip, ip, #69632	; 0x11000
 a2c:	ldr	pc, [ip, #1632]!	; 0x660

00000a30 <strncmp@plt>:
 a30:	add	ip, pc, #0, 12
 a34:	add	ip, ip, #69632	; 0x11000
 a38:	ldr	pc, [ip, #1624]!	; 0x658

00000a3c <pcap_dispatch@plt>:
 a3c:	add	ip, pc, #0, 12
 a40:	add	ip, ip, #69632	; 0x11000
 a44:	ldr	pc, [ip, #1616]!	; 0x650

00000a48 <pcap_set_buffer_size@plt>:
 a48:	add	ip, pc, #0, 12
 a4c:	add	ip, ip, #69632	; 0x11000
 a50:	ldr	pc, [ip, #1608]!	; 0x648

Disassembly of section .text:

00000a54 <call_weak_fn>:
     a54:	ldr	r3, [pc, #20]	; a70 <call_weak_fn+0x1c>
     a58:	ldr	r2, [pc, #20]	; a74 <call_weak_fn+0x20>
     a5c:	add	r3, pc, r3
     a60:	ldr	r2, [r3, r2]
     a64:	cmp	r2, #0
     a68:	bxeq	lr
     a6c:	b	9ac <__gmon_start__@plt>
     a70:	.word	0x0001159c
     a74:	.word	0x000000a4

00000a78 <deregister_tm_clones>:
     a78:	ldr	r3, [pc, #52]	; ab4 <deregister_tm_clones+0x3c>
     a7c:	ldr	r0, [pc, #52]	; ab8 <deregister_tm_clones+0x40>
     a80:	add	r3, pc, r3
     a84:	add	r0, pc, r0
     a88:	add	r3, r3, #3
     a8c:	sub	r3, r3, r0
     a90:	cmp	r3, #6
     a94:	ldr	r3, [pc, #32]	; abc <deregister_tm_clones+0x44>
     a98:	add	r3, pc, r3
     a9c:	bxls	lr
     aa0:	ldr	r2, [pc, #24]	; ac0 <deregister_tm_clones+0x48>
     aa4:	ldr	r3, [r3, r2]
     aa8:	cmp	r3, #0
     aac:	bxeq	lr
     ab0:	bx	r3
     ab4:	.word	0x0001162c
     ab8:	.word	0x00011628
     abc:	.word	0x00011560
     ac0:	.word	0x000000a0

00000ac4 <register_tm_clones>:
     ac4:	ldr	r1, [pc, #56]	; b04 <register_tm_clones+0x40>
     ac8:	ldr	r0, [pc, #56]	; b08 <register_tm_clones+0x44>
     acc:	add	r1, pc, r1
     ad0:	add	r0, pc, r0
     ad4:	sub	r1, r1, r0
     ad8:	ldr	r3, [pc, #44]	; b0c <register_tm_clones+0x48>
     adc:	asr	r1, r1, #2
     ae0:	add	r3, pc, r3
     ae4:	add	r1, r1, r1, lsr #31
     ae8:	asrs	r1, r1, #1
     aec:	bxeq	lr
     af0:	ldr	r2, [pc, #24]	; b10 <register_tm_clones+0x4c>
     af4:	ldr	r3, [r3, r2]
     af8:	cmp	r3, #0
     afc:	bxeq	lr
     b00:	bx	r3
     b04:	.word	0x000115e0
     b08:	.word	0x000115dc
     b0c:	.word	0x00011518
     b10:	.word	0x000000ac

00000b14 <__do_global_dtors_aux>:
     b14:	ldr	r3, [pc, #76]	; b68 <__do_global_dtors_aux+0x54>
     b18:	ldr	r2, [pc, #76]	; b6c <__do_global_dtors_aux+0x58>
     b1c:	add	r3, pc, r3
     b20:	add	r2, pc, r2
     b24:	ldrb	r3, [r3]
     b28:	cmp	r3, #0
     b2c:	bxne	lr
     b30:	ldr	r3, [pc, #56]	; b70 <__do_global_dtors_aux+0x5c>
     b34:	push	{r4, lr}
     b38:	ldr	r3, [r2, r3]
     b3c:	cmp	r3, #0
     b40:	beq	b50 <__do_global_dtors_aux+0x3c>
     b44:	ldr	r3, [pc, #40]	; b74 <__do_global_dtors_aux+0x60>
     b48:	ldr	r0, [pc, r3]
     b4c:	bl	8c8 <__cxa_finalize@plt>
     b50:	bl	a78 <deregister_tm_clones>
     b54:	ldr	r3, [pc, #28]	; b78 <__do_global_dtors_aux+0x64>
     b58:	mov	r2, #1
     b5c:	add	r3, pc, r3
     b60:	strb	r2, [r3]
     b64:	pop	{r4, pc}
     b68:	.word	0x00011590
     b6c:	.word	0x000114d8
     b70:	.word	0x0000009c
     b74:	.word	0x00011560
     b78:	.word	0x00011550

00000b7c <frame_dummy>:
     b7c:	ldr	r0, [pc, #56]	; bbc <frame_dummy+0x40>
     b80:	ldr	r3, [pc, #56]	; bc0 <frame_dummy+0x44>
     b84:	add	r0, pc, r0
     b88:	ldr	r2, [r0]
     b8c:	add	r3, pc, r3
     b90:	cmp	r2, #0
     b94:	bne	b9c <frame_dummy+0x20>
     b98:	b	ac4 <register_tm_clones>
     b9c:	ldr	r2, [pc, #32]	; bc4 <frame_dummy+0x48>
     ba0:	ldr	r3, [r3, r2]
     ba4:	cmp	r3, #0
     ba8:	beq	b98 <frame_dummy+0x1c>
     bac:	push	{r4, lr}
     bb0:	blx	r3
     bb4:	pop	{r4, lr}
     bb8:	b	ac4 <register_tm_clones>
     bbc:	.word	0x00011318
     bc0:	.word	0x0001146c
     bc4:	.word	0x000000a8

00000bc8 <pcap_process_loop>:
     bc8:	push	{r4, r5, lr}
     bcc:	sub	sp, sp, #60	; 0x3c
     bd0:	mov	r4, r0
     bd4:	ldr	r3, [r1, #8]
     bd8:	str	r3, [sp, #12]
     bdc:	ldr	r3, [r1, #12]
     be0:	str	r3, [sp, #16]
     be4:	ldm	r1, {r0, r1}
     be8:	add	r3, sp, #4
     bec:	stm	r3, {r0, r1}
     bf0:	mvn	r1, #0
     bf4:	str	r1, [sp, #20]
     bf8:	str	r1, [sp, #24]
     bfc:	str	r1, [sp, #28]
     c00:	str	r1, [sp, #32]
     c04:	mov	r1, #0
     c08:	str	r1, [sp, #36]	; 0x24
     c0c:	strh	r1, [sp, #52]	; 0x34
     c10:	ldr	r1, [r4, #288]	; 0x120
     c14:	add	r1, r1, #1
     c18:	str	r1, [r4, #288]	; 0x120
     c1c:	add	ip, r4, #336	; 0x150
     c20:	ldrd	r0, [ip, #-8]
     c24:	adds	r0, r0, #1
     c28:	adc	r1, r1, #0
     c2c:	strd	r0, [ip, #-8]
     c30:	ldr	r5, [r4, #296]	; 0x128
     c34:	mov	r1, r3
     c38:	ldr	r0, [r4, #300]	; 0x12c
     c3c:	blx	r5
     c40:	cmp	r0, #6
     c44:	movhi	r0, #0
     c48:	add	r4, r4, r0, lsl #3
     c4c:	add	r4, r4, #352	; 0x160
     c50:	ldrd	r2, [r4]
     c54:	adds	r2, r2, #1
     c58:	adc	r3, r3, #0
     c5c:	strd	r2, [r4]
     c60:	add	sp, sp, #60	; 0x3c
     c64:	pop	{r4, r5, pc}

00000c68 <pcap_daq_check_status>:
     c68:	ldr	r0, [r0, #440]	; 0x1b8
     c6c:	bx	lr

00000c70 <pcap_daq_get_capabilities>:
     c70:	ldr	r3, [r0]
     c74:	cmp	r3, #0
     c78:	moveq	r3, #128	; 0x80
     c7c:	movne	r3, #132	; 0x84
     c80:	ldr	r2, [r0, #292]	; 0x124
     c84:	cmp	r2, #0
     c88:	orrne	r0, r3, #64	; 0x40
     c8c:	orreq	r0, r3, #96	; 0x60
     c90:	bx	lr

00000c94 <pcap_daq_get_errbuf>:
     c94:	add	r0, r0, #20
     c98:	bx	lr

00000c9c <pcap_daq_get_device_index>:
     c9c:	mvn	r0, #3
     ca0:	bx	lr

00000ca4 <pcap_daq_set_errbuf>:
     ca4:	subs	r3, r1, #0
     ca8:	bxeq	lr
     cac:	push	{r4, lr}
     cb0:	ldr	r2, [pc, #16]	; cc8 <pcap_daq_set_errbuf+0x24>
     cb4:	add	r2, pc, r2
     cb8:	mov	r1, #256	; 0x100
     cbc:	add	r0, r0, #20
     cc0:	bl	9c4 <snprintf@plt>
     cc4:	pop	{r4, pc}
     cc8:	.word	0x00000d4c

00000ccc <pcap_daq_get_datalink_type>:
     ccc:	ldr	r0, [r0, #16]
     cd0:	cmp	r0, #0
     cd4:	beq	ce4 <pcap_daq_get_datalink_type+0x18>
     cd8:	push	{r4, lr}
     cdc:	bl	a18 <pcap_datalink@plt>
     ce0:	pop	{r4, pc}
     ce4:	mov	r0, #0
     ce8:	bx	lr

00000cec <pcap_daq_get_snaplen>:
     cec:	ldr	r3, [r0, #16]
     cf0:	cmp	r3, #0
     cf4:	beq	d08 <pcap_daq_get_snaplen+0x1c>
     cf8:	push	{r4, lr}
     cfc:	mov	r0, r3
     d00:	bl	9f4 <pcap_snapshot@plt>
     d04:	pop	{r4, pc}
     d08:	ldr	r0, [r0, #12]
     d0c:	bx	lr

00000d10 <pcap_daq_reset_stats>:
     d10:	push	{r4, lr}
     d14:	sub	sp, sp, #16
     d18:	mov	r4, r0
     d1c:	mov	r2, #96	; 0x60
     d20:	mov	r1, #0
     d24:	add	r0, r0, #312	; 0x138
     d28:	bl	9d0 <memset@plt>
     d2c:	ldr	r0, [r4, #16]
     d30:	cmp	r0, #0
     d34:	beq	d7c <pcap_daq_reset_stats+0x6c>
     d38:	mov	r2, #0
     d3c:	str	r2, [sp, #4]
     d40:	str	r2, [sp, #8]
     d44:	str	r2, [sp, #12]
     d48:	ldr	r3, [r4]
     d4c:	cmp	r3, r2
     d50:	beq	d7c <pcap_daq_reset_stats+0x6c>
     d54:	add	r1, sp, #4
     d58:	bl	94c <pcap_stats@plt>
     d5c:	cmp	r0, #0
     d60:	bne	d7c <pcap_daq_reset_stats+0x6c>
     d64:	ldr	r3, [sp, #4]
     d68:	str	r3, [r4, #432]	; 0x1b0
     d6c:	str	r3, [r4, #408]	; 0x198
     d70:	ldr	r3, [sp, #8]
     d74:	str	r3, [r4, #436]	; 0x1b4
     d78:	str	r3, [r4, #412]	; 0x19c
     d7c:	add	sp, sp, #16
     d80:	pop	{r4, pc}

00000d84 <update_hw_stats>:
     d84:	push	{r4, r5, lr}
     d88:	sub	sp, sp, #20
     d8c:	ldr	r2, [r0, #16]
     d90:	cmp	r2, #0
     d94:	beq	e9c <update_hw_stats+0x118>
     d98:	ldr	r3, [r0]
     d9c:	cmp	r3, #0
     da0:	moveq	r5, #0
     da4:	beq	e6c <update_hw_stats+0xe8>
     da8:	mov	r4, r0
     dac:	mov	r3, #0
     db0:	str	r3, [sp, #4]
     db4:	add	r1, sp, #4
     db8:	str	r3, [r1, #4]
     dbc:	str	r3, [r1, #8]
     dc0:	mov	r0, r2
     dc4:	bl	94c <pcap_stats@plt>
     dc8:	mov	r5, r0
     dcc:	cmn	r0, #1
     dd0:	beq	e78 <update_hw_stats+0xf4>
     dd4:	ldr	ip, [sp, #4]
     dd8:	ldr	r3, [r4, #432]	; 0x1b0
     ddc:	cmp	ip, r3
     de0:	bcs	df8 <update_hw_stats+0x74>
     de4:	add	r1, r4, #416	; 0x1a0
     de8:	ldrd	r2, [r1]
     dec:	subs	r2, r2, #1
     df0:	adc	r3, r3, #0
     df4:	strd	r2, [r1]
     df8:	ldr	r0, [sp, #8]
     dfc:	ldr	r3, [r4, #436]	; 0x1b4
     e00:	cmp	r0, r3
     e04:	bcs	e1c <update_hw_stats+0x98>
     e08:	add	r1, r4, #432	; 0x1b0
     e0c:	ldrd	r2, [r1, #-8]
     e10:	subs	r2, r2, #1
     e14:	adc	r3, r3, #0
     e18:	strd	r2, [r1, #-8]
     e1c:	str	ip, [r4, #432]	; 0x1b0
     e20:	str	r0, [r4, #436]	; 0x1b4
     e24:	add	r1, r4, #320	; 0x140
     e28:	add	r3, r4, #416	; 0x1a0
     e2c:	ldrd	r2, [r3]
     e30:	adds	r2, r2, ip
     e34:	adc	r3, r3, #0
     e38:	ldr	ip, [r4, #408]	; 0x198
     e3c:	subs	r2, r2, ip
     e40:	sbc	r3, r3, #0
     e44:	strd	r2, [r1, #-8]
     e48:	add	r3, r4, #432	; 0x1b0
     e4c:	ldrd	r2, [r3, #-8]
     e50:	adds	r2, r2, r0
     e54:	adc	r3, r3, #0
     e58:	ldr	r0, [r4, #412]	; 0x19c
     e5c:	subs	r2, r2, r0
     e60:	sbc	r3, r3, #0
     e64:	strd	r2, [r1]
     e68:	mov	r5, #0
     e6c:	mov	r0, r5
     e70:	add	sp, sp, #20
     e74:	pop	{r4, r5, pc}
     e78:	ldr	r0, [r4, #16]
     e7c:	bl	988 <pcap_geterr@plt>
     e80:	mov	r3, r0
     e84:	ldr	r2, [pc, #24]	; ea4 <update_hw_stats+0x120>
     e88:	add	r2, pc, r2
     e8c:	mov	r1, #256	; 0x100
     e90:	add	r0, r4, #20
     e94:	bl	9c4 <snprintf@plt>
     e98:	b	e6c <update_hw_stats+0xe8>
     e9c:	mov	r5, #0
     ea0:	b	e6c <update_hw_stats+0xe8>
     ea4:	.word	0x00000b78

00000ea8 <pcap_daq_get_stats>:
     ea8:	push	{r4, r5, r6, lr}
     eac:	mov	r6, r0
     eb0:	mov	r5, r1
     eb4:	bl	d84 <update_hw_stats>
     eb8:	subs	r4, r0, #0
     ebc:	bne	ed8 <pcap_daq_get_stats+0x30>
     ec0:	mov	r2, #96	; 0x60
     ec4:	add	r1, r6, #312	; 0x138
     ec8:	mov	r0, r5
     ecc:	bl	910 <memcpy@plt>
     ed0:	mov	r0, r4
     ed4:	pop	{r4, r5, r6, pc}
     ed8:	mvn	r4, #0
     edc:	b	ed0 <pcap_daq_get_stats+0x28>

00000ee0 <pcap_daq_stop>:
     ee0:	push	{r4, lr}
     ee4:	mov	r4, r0
     ee8:	ldr	r3, [r0, #16]
     eec:	cmp	r3, #0
     ef0:	beq	f08 <pcap_daq_stop+0x28>
     ef4:	bl	d84 <update_hw_stats>
     ef8:	ldr	r0, [r4, #16]
     efc:	bl	940 <pcap_close@plt>
     f00:	mov	r3, #0
     f04:	str	r3, [r4, #16]
     f08:	mov	r3, #3
     f0c:	str	r3, [r4, #440]	; 0x1b8
     f10:	mov	r0, #0
     f14:	pop	{r4, pc}

00000f18 <pcap_daq_shutdown>:
     f18:	push	{r4, lr}
     f1c:	mov	r4, r0
     f20:	ldr	r0, [r0, #16]
     f24:	cmp	r0, #0
     f28:	beq	f30 <pcap_daq_shutdown+0x18>
     f2c:	bl	940 <pcap_close@plt>
     f30:	ldr	r0, [r4]
     f34:	cmp	r0, #0
     f38:	beq	f40 <pcap_daq_shutdown+0x28>
     f3c:	bl	904 <free@plt>
     f40:	ldr	r0, [r4, #4]
     f44:	cmp	r0, #0
     f48:	beq	f50 <pcap_daq_shutdown+0x38>
     f4c:	bl	904 <free@plt>
     f50:	ldr	r0, [r4, #8]
     f54:	cmp	r0, #0
     f58:	beq	f60 <pcap_daq_shutdown+0x48>
     f5c:	bl	904 <free@plt>
     f60:	mov	r0, r4
     f64:	bl	904 <free@plt>
     f68:	pop	{r4, pc}

00000f6c <pcap_daq_breakloop>:
     f6c:	ldr	r0, [r0, #16]
     f70:	cmp	r0, #0
     f74:	beq	f88 <pcap_daq_breakloop+0x1c>
     f78:	push	{r4, lr}
     f7c:	bl	970 <pcap_breakloop@plt>
     f80:	mov	r0, #0
     f84:	pop	{r4, pc}
     f88:	mvn	r0, #0
     f8c:	bx	lr

00000f90 <pcap_daq_inject>:
     f90:	push	{r4, lr}
     f94:	mov	r4, r0
     f98:	mov	r1, r2
     f9c:	mov	r2, r3
     fa0:	ldr	r0, [r0, #16]
     fa4:	bl	9dc <pcap_inject@plt>
     fa8:	cmp	r0, #0
     fac:	blt	fcc <pcap_daq_inject+0x3c>
     fb0:	add	r4, r4, #352	; 0x160
     fb4:	ldrd	r2, [r4, #-8]
     fb8:	adds	r2, r2, #1
     fbc:	adc	r3, r3, #0
     fc0:	strd	r2, [r4, #-8]
     fc4:	mov	r0, #0
     fc8:	pop	{r4, pc}
     fcc:	ldr	r0, [r4, #16]
     fd0:	bl	988 <pcap_geterr@plt>
     fd4:	mov	r3, r0
     fd8:	ldr	r2, [pc, #20]	; ff4 <pcap_daq_inject+0x64>
     fdc:	add	r2, pc, r2
     fe0:	mov	r1, #256	; 0x100
     fe4:	add	r0, r4, #20
     fe8:	bl	9c4 <snprintf@plt>
     fec:	mvn	r0, #0
     ff0:	pop	{r4, pc}
     ff4:	.word	0x00000a24

00000ff8 <pcap_daq_acquire>:
     ff8:	push	{r4, r5, r6, r7, r8, lr}
     ffc:	mov	r5, r0
    1000:	mov	r6, r1
    1004:	str	r2, [r0, #296]	; 0x128
    1008:	ldr	r3, [sp, #24]
    100c:	str	r3, [r0, #300]	; 0x12c
    1010:	mov	r3, #0
    1014:	str	r3, [r0, #288]	; 0x120
    1018:	mvn	r8, #0
    101c:	ldr	r7, [pc, #160]	; 10c4 <pcap_daq_acquire+0xcc>
    1020:	add	r7, pc, r7
    1024:	ldr	r1, [r5, #288]	; 0x120
    1028:	cmp	r1, r6
    102c:	cmpge	r6, #0
    1030:	bgt	10b0 <pcap_daq_acquire+0xb8>
    1034:	ldr	r0, [r5, #16]
    1038:	cmp	r6, #0
    103c:	subgt	r1, r6, r1
    1040:	movle	r1, r8
    1044:	mov	r3, r5
    1048:	mov	r2, r7
    104c:	bl	a3c <pcap_dispatch@plt>
    1050:	mov	r4, r0
    1054:	cmn	r0, #1
    1058:	beq	108c <pcap_daq_acquire+0x94>
    105c:	ldr	r3, [r5, #4]
    1060:	adds	r3, r3, #0
    1064:	movne	r3, #1
    1068:	cmp	r0, #0
    106c:	movne	r3, #0
    1070:	cmp	r3, #0
    1074:	bne	10bc <pcap_daq_acquire+0xc4>
    1078:	add	r4, r0, #2
    107c:	bics	r3, r4, #2
    1080:	bne	1024 <pcap_daq_acquire+0x2c>
    1084:	mov	r4, #0
    1088:	b	10b4 <pcap_daq_acquire+0xbc>
    108c:	ldr	r0, [r5, #16]
    1090:	bl	988 <pcap_geterr@plt>
    1094:	mov	r3, r0
    1098:	ldr	r2, [pc, #40]	; 10c8 <pcap_daq_acquire+0xd0>
    109c:	add	r2, pc, r2
    10a0:	mov	r1, #256	; 0x100
    10a4:	add	r0, r5, #20
    10a8:	bl	9c4 <snprintf@plt>
    10ac:	b	10b4 <pcap_daq_acquire+0xbc>
    10b0:	mov	r4, #0
    10b4:	mov	r0, r4
    10b8:	pop	{r4, r5, r6, r7, r8, pc}
    10bc:	mvn	r4, #41	; 0x29
    10c0:	b	10b4 <pcap_daq_acquire+0xbc>
    10c4:	.word	0xfffffba0
    10c8:	.word	0x00000964

000010cc <pcap_daq_open>:
    10cc:	ldr	r3, [r0, #16]
    10d0:	cmp	r3, #0
    10d4:	beq	10e0 <pcap_daq_open+0x14>
    10d8:	mov	r0, #0
    10dc:	bx	lr
    10e0:	push	{r4, r5, r6, lr}
    10e4:	sub	sp, sp, #16
    10e8:	mov	r4, r0
    10ec:	ldr	r0, [r0]
    10f0:	cmp	r0, #0
    10f4:	beq	119c <pcap_daq_open+0xd0>
    10f8:	add	r5, r4, #20
    10fc:	mov	r1, r5
    1100:	bl	934 <pcap_create@plt>
    1104:	str	r0, [r4, #16]
    1108:	cmp	r0, #0
    110c:	beq	122c <pcap_daq_open+0x160>
    1110:	ldr	r1, [r4, #12]
    1114:	bl	964 <pcap_set_snaplen@plt>
    1118:	cmp	r0, #0
    111c:	blt	11bc <pcap_daq_open+0xf0>
    1120:	ldr	r1, [r4, #276]	; 0x114
    1124:	adds	r1, r1, #0
    1128:	movne	r1, #1
    112c:	ldr	r0, [r4, #16]
    1130:	bl	994 <pcap_set_promisc@plt>
    1134:	cmp	r0, #0
    1138:	blt	11bc <pcap_daq_open+0xf0>
    113c:	ldr	r1, [r4, #280]	; 0x118
    1140:	ldr	r0, [r4, #16]
    1144:	bl	91c <pcap_set_timeout@plt>
    1148:	cmp	r0, #0
    114c:	blt	11bc <pcap_daq_open+0xf0>
    1150:	ldr	r1, [r4, #284]	; 0x11c
    1154:	ldr	r0, [r4, #16]
    1158:	bl	a48 <pcap_set_buffer_size@plt>
    115c:	cmp	r0, #0
    1160:	blt	11bc <pcap_daq_open+0xf0>
    1164:	ldr	r0, [r4, #16]
    1168:	bl	8d4 <pcap_activate@plt>
    116c:	cmp	r0, #0
    1170:	blt	11bc <pcap_daq_open+0xf0>
    1174:	mov	r3, r5
    1178:	add	r2, sp, #8
    117c:	add	r1, sp, #12
    1180:	ldr	r0, [r4]
    1184:	bl	a24 <pcap_lookupnet@plt>
    1188:	mvn	r3, #-16777216	; 0xff000000
    118c:	str	r3, [r4, #304]	; 0x130
    1190:	mov	r0, #0
    1194:	add	sp, sp, #16
    1198:	pop	{r4, r5, r6, pc}
    119c:	add	r1, r4, #20
    11a0:	ldr	r0, [r4, #4]
    11a4:	bl	9a0 <pcap_open_offline@plt>
    11a8:	str	r0, [r4, #16]
    11ac:	cmp	r0, #0
    11b0:	bne	1188 <pcap_daq_open+0xbc>
    11b4:	mvn	r0, #0
    11b8:	b	1194 <pcap_daq_open+0xc8>
    11bc:	bic	r3, r0, #4
    11c0:	cmn	r3, #5
    11c4:	cmnne	r0, #8
    11c8:	beq	11f4 <pcap_daq_open+0x128>
    11cc:	ldr	r6, [r4]
    11d0:	bl	a0c <pcap_statustostr@plt>
    11d4:	str	r0, [sp]
    11d8:	mov	r3, r6
    11dc:	ldr	r2, [pc, #80]	; 1234 <pcap_daq_open+0x168>
    11e0:	add	r2, pc, r2
    11e4:	mov	r1, #256	; 0x100
    11e8:	mov	r0, r5
    11ec:	bl	9c4 <snprintf@plt>
    11f0:	b	1214 <pcap_daq_open+0x148>
    11f4:	ldr	r0, [r4, #16]
    11f8:	bl	988 <pcap_geterr@plt>
    11fc:	mov	r3, r0
    1200:	ldr	r2, [pc, #48]	; 1238 <pcap_daq_open+0x16c>
    1204:	add	r2, pc, r2
    1208:	mov	r1, #256	; 0x100
    120c:	mov	r0, r5
    1210:	bl	9c4 <snprintf@plt>
    1214:	ldr	r0, [r4, #16]
    1218:	bl	940 <pcap_close@plt>
    121c:	mov	r3, #0
    1220:	str	r3, [r4, #16]
    1224:	mvn	r0, #0
    1228:	b	1194 <pcap_daq_open+0xc8>
    122c:	mvn	r0, #0
    1230:	b	1194 <pcap_daq_open+0xc8>
    1234:	.word	0x000007ec
    1238:	.word	0x000007fc

0000123c <pcap_daq_set_filter>:
    123c:	push	{r4, r5, r6, lr}
    1240:	sub	sp, sp, #16
    1244:	mov	r4, r0
    1248:	mov	r5, r1
    124c:	ldr	r0, [r0, #16]
    1250:	cmp	r0, #0
    1254:	beq	1308 <pcap_daq_set_filter+0xcc>
    1258:	ldr	r3, [r4, #304]	; 0x130
    125c:	str	r3, [sp]
    1260:	mov	r3, #1
    1264:	mov	r2, r1
    1268:	add	r1, sp, #8
    126c:	bl	9e8 <pcap_compile@plt>
    1270:	cmp	r0, #0
    1274:	blt	12a0 <pcap_daq_set_filter+0x64>
    1278:	add	r1, sp, #8
    127c:	ldr	r0, [r4, #16]
    1280:	bl	8ec <pcap_setfilter@plt>
    1284:	cmp	r0, #0
    1288:	blt	12d0 <pcap_daq_set_filter+0x94>
    128c:	add	r0, sp, #8
    1290:	bl	a00 <pcap_freecode@plt>
    1294:	mov	r0, #0
    1298:	add	sp, sp, #16
    129c:	pop	{r4, r5, r6, pc}
    12a0:	ldr	r0, [r4, #16]
    12a4:	bl	988 <pcap_geterr@plt>
    12a8:	str	r0, [sp]
    12ac:	ldr	r3, [pc, #316]	; 13f0 <pcap_daq_set_filter+0x1b4>
    12b0:	add	r3, pc, r3
    12b4:	ldr	r2, [pc, #312]	; 13f4 <pcap_daq_set_filter+0x1b8>
    12b8:	add	r2, pc, r2
    12bc:	mov	r1, #256	; 0x100
    12c0:	add	r0, r4, #20
    12c4:	bl	9c4 <snprintf@plt>
    12c8:	mvn	r0, #0
    12cc:	b	1298 <pcap_daq_set_filter+0x5c>
    12d0:	add	r0, sp, #8
    12d4:	bl	a00 <pcap_freecode@plt>
    12d8:	ldr	r0, [r4, #16]
    12dc:	bl	988 <pcap_geterr@plt>
    12e0:	str	r0, [sp]
    12e4:	ldr	r3, [pc, #268]	; 13f8 <pcap_daq_set_filter+0x1bc>
    12e8:	add	r3, pc, r3
    12ec:	ldr	r2, [pc, #264]	; 13fc <pcap_daq_set_filter+0x1c0>
    12f0:	add	r2, pc, r2
    12f4:	mov	r1, #256	; 0x100
    12f8:	add	r0, r4, #20
    12fc:	bl	9c4 <snprintf@plt>
    1300:	mvn	r0, #0
    1304:	b	1298 <pcap_daq_set_filter+0x5c>
    1308:	ldr	r1, [r4, #12]
    130c:	mov	r0, #1
    1310:	bl	958 <pcap_open_dead@plt>
    1314:	subs	r6, r0, #0
    1318:	beq	139c <pcap_daq_set_filter+0x160>
    131c:	ldr	r3, [r4, #304]	; 0x130
    1320:	str	r3, [sp]
    1324:	mov	r3, #1
    1328:	mov	r2, r5
    132c:	add	r1, sp, #8
    1330:	mov	r0, r6
    1334:	bl	9e8 <pcap_compile@plt>
    1338:	cmp	r0, #0
    133c:	blt	13c0 <pcap_daq_set_filter+0x184>
    1340:	add	r0, sp, #8
    1344:	bl	a00 <pcap_freecode@plt>
    1348:	mov	r0, r6
    134c:	bl	940 <pcap_close@plt>
    1350:	ldr	r0, [r4, #8]
    1354:	cmp	r0, #0
    1358:	beq	1360 <pcap_daq_set_filter+0x124>
    135c:	bl	904 <free@plt>
    1360:	mov	r0, r5
    1364:	bl	928 <strdup@plt>
    1368:	str	r0, [r4, #8]
    136c:	cmp	r0, #0
    1370:	movne	r0, #0
    1374:	bne	1298 <pcap_daq_set_filter+0x5c>
    1378:	ldr	r3, [pc, #128]	; 1400 <pcap_daq_set_filter+0x1c4>
    137c:	add	r3, pc, r3
    1380:	ldr	r2, [pc, #124]	; 1404 <pcap_daq_set_filter+0x1c8>
    1384:	add	r2, pc, r2
    1388:	mov	r1, #256	; 0x100
    138c:	add	r0, r4, #20
    1390:	bl	9c4 <snprintf@plt>
    1394:	mvn	r0, #1
    1398:	b	1298 <pcap_daq_set_filter+0x5c>
    139c:	ldr	r3, [pc, #100]	; 1408 <pcap_daq_set_filter+0x1cc>
    13a0:	add	r3, pc, r3
    13a4:	ldr	r2, [pc, #96]	; 140c <pcap_daq_set_filter+0x1d0>
    13a8:	add	r2, pc, r2
    13ac:	mov	r1, #256	; 0x100
    13b0:	add	r0, r4, #20
    13b4:	bl	9c4 <snprintf@plt>
    13b8:	mvn	r0, #1
    13bc:	b	1298 <pcap_daq_set_filter+0x5c>
    13c0:	mov	r0, r6
    13c4:	bl	988 <pcap_geterr@plt>
    13c8:	str	r0, [sp]
    13cc:	ldr	r3, [pc, #60]	; 1410 <pcap_daq_set_filter+0x1d4>
    13d0:	add	r3, pc, r3
    13d4:	ldr	r2, [pc, #56]	; 1414 <pcap_daq_set_filter+0x1d8>
    13d8:	add	r2, pc, r2
    13dc:	mov	r1, #256	; 0x100
    13e0:	add	r0, r4, #20
    13e4:	bl	9c4 <snprintf@plt>
    13e8:	mvn	r0, #0
    13ec:	b	1298 <pcap_daq_set_filter+0x5c>
    13f0:	.word	0x000006f4
    13f4:	.word	0x0000071c
    13f8:	.word	0x000006bc
    13fc:	.word	0x000006fc
    1400:	.word	0x00000628
    1404:	.word	0x000006ac
    1408:	.word	0x00000604
    140c:	.word	0x0000065c
    1410:	.word	0x000005d4
    1414:	.word	0x000005fc

00001418 <pcap_daq_start>:
    1418:	push	{r4, r5, r6, lr}
    141c:	mov	r4, r0
    1420:	bl	10cc <pcap_daq_open>
    1424:	subs	r5, r0, #0
    1428:	bne	1470 <pcap_daq_start+0x58>
    142c:	mov	r0, r4
    1430:	bl	d10 <pcap_daq_reset_stats>
    1434:	ldr	r1, [r4, #8]
    1438:	cmp	r1, #0
    143c:	beq	1460 <pcap_daq_start+0x48>
    1440:	mov	r0, r4
    1444:	bl	123c <pcap_daq_set_filter>
    1448:	cmp	r0, #0
    144c:	bne	1478 <pcap_daq_start+0x60>
    1450:	ldr	r0, [r4, #8]
    1454:	bl	904 <free@plt>
    1458:	mov	r3, #0
    145c:	str	r3, [r4, #8]
    1460:	mov	r3, #2
    1464:	str	r3, [r4, #440]	; 0x1b8
    1468:	mov	r0, r5
    146c:	pop	{r4, r5, r6, pc}
    1470:	mvn	r5, #0
    1474:	b	1468 <pcap_daq_start+0x50>
    1478:	mvn	r5, #0
    147c:	b	1468 <pcap_daq_start+0x50>

00001480 <pcap_daq_initialize>:
    1480:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1484:	sub	sp, sp, #20
    1488:	mov	r7, r0
    148c:	mov	sl, r1
    1490:	str	r2, [sp, #8]
    1494:	mov	fp, r3
    1498:	mov	r1, #448	; 0x1c0
    149c:	mov	r0, #1
    14a0:	bl	8a4 <calloc@plt>
    14a4:	subs	r5, r0, #0
    14a8:	beq	14e8 <pcap_daq_initialize+0x68>
    14ac:	ldr	r3, [r7, #4]
    14b0:	str	r3, [r5, #12]
    14b4:	ldr	r3, [r7, #16]
    14b8:	and	r3, r3, #1
    14bc:	str	r3, [r5, #276]	; 0x114
    14c0:	ldr	r3, [r7, #8]
    14c4:	str	r3, [r5, #280]	; 0x118
    14c8:	ldr	r4, [r7, #20]
    14cc:	cmp	r4, #0
    14d0:	beq	1548 <pcap_daq_initialize+0xc8>
    14d4:	ldr	r6, [pc, #584]	; 1724 <pcap_daq_initialize+0x2a4>
    14d8:	add	r6, pc, r6
    14dc:	mov	r9, #10
    14e0:	mov	r8, #0
    14e4:	b	151c <pcap_daq_initialize+0x9c>
    14e8:	ldr	r3, [pc, #568]	; 1728 <pcap_daq_initialize+0x2a8>
    14ec:	add	r3, pc, r3
    14f0:	add	r3, r3, #20
    14f4:	ldr	r2, [pc, #560]	; 172c <pcap_daq_initialize+0x2ac>
    14f8:	add	r2, pc, r2
    14fc:	mov	r1, fp
    1500:	ldr	r0, [sp, #8]
    1504:	bl	9c4 <snprintf@plt>
    1508:	mvn	r0, #1
    150c:	b	158c <pcap_daq_initialize+0x10c>
    1510:	ldr	r4, [r4, #8]
    1514:	cmp	r4, #0
    1518:	beq	1548 <pcap_daq_initialize+0xc8>
    151c:	mov	r1, r6
    1520:	ldr	r0, [r4]
    1524:	bl	8bc <strcmp@plt>
    1528:	cmp	r0, #0
    152c:	bne	1510 <pcap_daq_initialize+0x90>
    1530:	mov	r2, r9
    1534:	mov	r1, r8
    1538:	ldr	r0, [r4, #4]
    153c:	bl	8e0 <strtol@plt>
    1540:	str	r0, [r5, #284]	; 0x11c
    1544:	b	1510 <pcap_daq_initialize+0x90>
    1548:	ldr	r8, [r5, #284]	; 0x11c
    154c:	cmp	r8, #0
    1550:	beq	1594 <pcap_daq_initialize+0x114>
    1554:	ldr	r3, [r7, #12]
    1558:	cmp	r3, #2
    155c:	beq	1670 <pcap_daq_initialize+0x1f0>
    1560:	ldr	r0, [r7]
    1564:	bl	928 <strdup@plt>
    1568:	str	r0, [r5]
    156c:	cmp	r0, #0
    1570:	movne	r3, #1
    1574:	strne	r3, [r5, #292]	; 0x124
    1578:	beq	16f4 <pcap_daq_initialize+0x274>
    157c:	mov	r3, #1
    1580:	str	r3, [r5, #440]	; 0x1b8
    1584:	str	r5, [sl]
    1588:	mov	r0, #0
    158c:	add	sp, sp, #20
    1590:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1594:	ldr	r6, [r5, #12]
    1598:	ldr	r0, [pc, #400]	; 1730 <pcap_daq_initialize+0x2b0>
    159c:	add	r0, pc, r0
    15a0:	bl	97c <getenv@plt>
    15a4:	subs	r9, r0, #0
    15a8:	beq	1650 <pcap_daq_initialize+0x1d0>
    15ac:	add	r6, r6, #99	; 0x63
    15b0:	bic	r6, r6, #15
    15b4:	bl	9b8 <getpagesize@plt>
    15b8:	mov	r4, r0
    15bc:	cmp	r6, r0
    15c0:	ble	15d0 <pcap_daq_initialize+0x150>
    15c4:	lsl	r4, r4, #1
    15c8:	cmp	r6, r4
    15cc:	bgt	15c4 <pcap_daq_initialize+0x144>
    15d0:	mov	r1, r6
    15d4:	mov	r0, r4
    15d8:	bl	1754 <__divsi3>
    15dc:	str	r0, [sp, #12]
    15e0:	mov	r2, #3
    15e4:	ldr	r1, [pc, #328]	; 1734 <pcap_daq_initialize+0x2b4>
    15e8:	add	r1, pc, r1
    15ec:	mov	r0, r9
    15f0:	bl	a30 <strncmp@plt>
    15f4:	cmp	r0, #0
    15f8:	moveq	r9, #32768	; 0x8000
    15fc:	beq	1620 <pcap_daq_initialize+0x1a0>
    1600:	mov	r2, #3
    1604:	ldr	r1, [pc, #300]	; 1738 <pcap_daq_initialize+0x2b8>
    1608:	add	r1, pc, r1
    160c:	mov	r0, r9
    1610:	bl	a30 <strncmp@plt>
    1614:	cmp	r0, #0
    1618:	moveq	r9, #32768	; 0x8000
    161c:	bne	1658 <pcap_daq_initialize+0x1d8>
    1620:	ldr	r1, [sp, #12]
    1624:	mul	r0, r4, r9
    1628:	bl	1754 <__divsi3>
    162c:	mov	r8, r0
    1630:	str	r6, [sp, #4]
    1634:	str	r0, [sp]
    1638:	ldr	r3, [sp, #12]
    163c:	mov	r2, r4
    1640:	mov	r1, r9
    1644:	ldr	r0, [pc, #240]	; 173c <pcap_daq_initialize+0x2bc>
    1648:	add	r0, pc, r0
    164c:	bl	8f8 <printf@plt>
    1650:	str	r8, [r5, #284]	; 0x11c
    1654:	b	1554 <pcap_daq_initialize+0xd4>
    1658:	mov	r2, #10
    165c:	mov	r1, #0
    1660:	mov	r0, r9
    1664:	bl	8e0 <strtol@plt>
    1668:	mov	r9, r0
    166c:	b	1620 <pcap_daq_initialize+0x1a0>
    1670:	ldr	r0, [r7]
    1674:	bl	928 <strdup@plt>
    1678:	str	r0, [r5, #4]
    167c:	cmp	r0, #0
    1680:	beq	16c4 <pcap_daq_initialize+0x244>
    1684:	mov	r3, #0
    1688:	str	r3, [r5, #292]	; 0x124
    168c:	mov	r0, r5
    1690:	bl	10cc <pcap_daq_open>
    1694:	cmp	r0, #0
    1698:	beq	157c <pcap_daq_initialize+0xfc>
    169c:	add	r3, r5, #20
    16a0:	ldr	r2, [pc, #152]	; 1740 <pcap_daq_initialize+0x2c0>
    16a4:	add	r2, pc, r2
    16a8:	mov	r1, fp
    16ac:	ldr	r0, [sp, #8]
    16b0:	bl	9c4 <snprintf@plt>
    16b4:	mov	r0, r5
    16b8:	bl	904 <free@plt>
    16bc:	mvn	r0, #0
    16c0:	b	158c <pcap_daq_initialize+0x10c>
    16c4:	ldr	r3, [pc, #120]	; 1744 <pcap_daq_initialize+0x2c4>
    16c8:	add	r3, pc, r3
    16cc:	add	r3, r3, #20
    16d0:	ldr	r2, [pc, #112]	; 1748 <pcap_daq_initialize+0x2c8>
    16d4:	add	r2, pc, r2
    16d8:	mov	r1, fp
    16dc:	ldr	r0, [sp, #8]
    16e0:	bl	9c4 <snprintf@plt>
    16e4:	mov	r0, r5
    16e8:	bl	904 <free@plt>
    16ec:	mvn	r0, #1
    16f0:	b	158c <pcap_daq_initialize+0x10c>
    16f4:	ldr	r3, [pc, #80]	; 174c <pcap_daq_initialize+0x2cc>
    16f8:	add	r3, pc, r3
    16fc:	add	r3, r3, #20
    1700:	ldr	r2, [pc, #72]	; 1750 <pcap_daq_initialize+0x2d0>
    1704:	add	r2, pc, r2
    1708:	mov	r1, fp
    170c:	ldr	r0, [sp, #8]
    1710:	bl	9c4 <snprintf@plt>
    1714:	mov	r0, r5
    1718:	bl	904 <free@plt>
    171c:	mvn	r0, #1
    1720:	b	158c <pcap_daq_initialize+0x10c>
    1724:	.word	0x000005d4
    1728:	.word	0x000004b8
    172c:	.word	0x0000057c
    1730:	.word	0x0000051c
    1734:	.word	0x000004dc
    1738:	.word	0x000004c0
    173c:	.word	0x00000484
    1740:	.word	0x0000035c
    1744:	.word	0x000002dc
    1748:	.word	0x00000420
    174c:	.word	0x000002ac
    1750:	.word	0x00000428

00001754 <__divsi3>:
    1754:	cmp	r1, #0
    1758:	beq	1964 <.divsi3_skip_div0_test+0x208>

0000175c <.divsi3_skip_div0_test>:
    175c:	eor	ip, r0, r1
    1760:	rsbmi	r1, r1, #0
    1764:	subs	r2, r1, #1
    1768:	beq	1930 <.divsi3_skip_div0_test+0x1d4>
    176c:	movs	r3, r0
    1770:	rsbmi	r3, r0, #0
    1774:	cmp	r3, r1
    1778:	bls	193c <.divsi3_skip_div0_test+0x1e0>
    177c:	tst	r1, r2
    1780:	beq	194c <.divsi3_skip_div0_test+0x1f0>
    1784:	clz	r2, r3
    1788:	clz	r0, r1
    178c:	sub	r2, r0, r2
    1790:	rsbs	r2, r2, #31
    1794:	addne	r2, r2, r2, lsl #1
    1798:	mov	r0, #0
    179c:	addne	pc, pc, r2, lsl #2
    17a0:	nop			; (mov r0, r0)
    17a4:	cmp	r3, r1, lsl #31
    17a8:	adc	r0, r0, r0
    17ac:	subcs	r3, r3, r1, lsl #31
    17b0:	cmp	r3, r1, lsl #30
    17b4:	adc	r0, r0, r0
    17b8:	subcs	r3, r3, r1, lsl #30
    17bc:	cmp	r3, r1, lsl #29
    17c0:	adc	r0, r0, r0
    17c4:	subcs	r3, r3, r1, lsl #29
    17c8:	cmp	r3, r1, lsl #28
    17cc:	adc	r0, r0, r0
    17d0:	subcs	r3, r3, r1, lsl #28
    17d4:	cmp	r3, r1, lsl #27
    17d8:	adc	r0, r0, r0
    17dc:	subcs	r3, r3, r1, lsl #27
    17e0:	cmp	r3, r1, lsl #26
    17e4:	adc	r0, r0, r0
    17e8:	subcs	r3, r3, r1, lsl #26
    17ec:	cmp	r3, r1, lsl #25
    17f0:	adc	r0, r0, r0
    17f4:	subcs	r3, r3, r1, lsl #25
    17f8:	cmp	r3, r1, lsl #24
    17fc:	adc	r0, r0, r0
    1800:	subcs	r3, r3, r1, lsl #24
    1804:	cmp	r3, r1, lsl #23
    1808:	adc	r0, r0, r0
    180c:	subcs	r3, r3, r1, lsl #23
    1810:	cmp	r3, r1, lsl #22
    1814:	adc	r0, r0, r0
    1818:	subcs	r3, r3, r1, lsl #22
    181c:	cmp	r3, r1, lsl #21
    1820:	adc	r0, r0, r0
    1824:	subcs	r3, r3, r1, lsl #21
    1828:	cmp	r3, r1, lsl #20
    182c:	adc	r0, r0, r0
    1830:	subcs	r3, r3, r1, lsl #20
    1834:	cmp	r3, r1, lsl #19
    1838:	adc	r0, r0, r0
    183c:	subcs	r3, r3, r1, lsl #19
    1840:	cmp	r3, r1, lsl #18
    1844:	adc	r0, r0, r0
    1848:	subcs	r3, r3, r1, lsl #18
    184c:	cmp	r3, r1, lsl #17
    1850:	adc	r0, r0, r0
    1854:	subcs	r3, r3, r1, lsl #17
    1858:	cmp	r3, r1, lsl #16
    185c:	adc	r0, r0, r0
    1860:	subcs	r3, r3, r1, lsl #16
    1864:	cmp	r3, r1, lsl #15
    1868:	adc	r0, r0, r0
    186c:	subcs	r3, r3, r1, lsl #15
    1870:	cmp	r3, r1, lsl #14
    1874:	adc	r0, r0, r0
    1878:	subcs	r3, r3, r1, lsl #14
    187c:	cmp	r3, r1, lsl #13
    1880:	adc	r0, r0, r0
    1884:	subcs	r3, r3, r1, lsl #13
    1888:	cmp	r3, r1, lsl #12
    188c:	adc	r0, r0, r0
    1890:	subcs	r3, r3, r1, lsl #12
    1894:	cmp	r3, r1, lsl #11
    1898:	adc	r0, r0, r0
    189c:	subcs	r3, r3, r1, lsl #11
    18a0:	cmp	r3, r1, lsl #10
    18a4:	adc	r0, r0, r0
    18a8:	subcs	r3, r3, r1, lsl #10
    18ac:	cmp	r3, r1, lsl #9
    18b0:	adc	r0, r0, r0
    18b4:	subcs	r3, r3, r1, lsl #9
    18b8:	cmp	r3, r1, lsl #8
    18bc:	adc	r0, r0, r0
    18c0:	subcs	r3, r3, r1, lsl #8
    18c4:	cmp	r3, r1, lsl #7
    18c8:	adc	r0, r0, r0
    18cc:	subcs	r3, r3, r1, lsl #7
    18d0:	cmp	r3, r1, lsl #6
    18d4:	adc	r0, r0, r0
    18d8:	subcs	r3, r3, r1, lsl #6
    18dc:	cmp	r3, r1, lsl #5
    18e0:	adc	r0, r0, r0
    18e4:	subcs	r3, r3, r1, lsl #5
    18e8:	cmp	r3, r1, lsl #4
    18ec:	adc	r0, r0, r0
    18f0:	subcs	r3, r3, r1, lsl #4
    18f4:	cmp	r3, r1, lsl #3
    18f8:	adc	r0, r0, r0
    18fc:	subcs	r3, r3, r1, lsl #3
    1900:	cmp	r3, r1, lsl #2
    1904:	adc	r0, r0, r0
    1908:	subcs	r3, r3, r1, lsl #2
    190c:	cmp	r3, r1, lsl #1
    1910:	adc	r0, r0, r0
    1914:	subcs	r3, r3, r1, lsl #1
    1918:	cmp	r3, r1
    191c:	adc	r0, r0, r0
    1920:	subcs	r3, r3, r1
    1924:	cmp	ip, #0
    1928:	rsbmi	r0, r0, #0
    192c:	bx	lr
    1930:	teq	ip, r0
    1934:	rsbmi	r0, r0, #0
    1938:	bx	lr
    193c:	movcc	r0, #0
    1940:	asreq	r0, ip, #31
    1944:	orreq	r0, r0, #1
    1948:	bx	lr
    194c:	clz	r2, r1
    1950:	rsb	r2, r2, #31
    1954:	cmp	ip, #0
    1958:	lsr	r0, r3, r2
    195c:	rsbmi	r0, r0, #0
    1960:	bx	lr
    1964:	cmp	r0, #0
    1968:	mvngt	r0, #-2147483648	; 0x80000000
    196c:	movlt	r0, #-2147483648	; 0x80000000
    1970:	b	1994 <__aeabi_idiv0>

00001974 <__aeabi_idivmod>:
    1974:	cmp	r1, #0
    1978:	beq	1964 <.divsi3_skip_div0_test+0x208>
    197c:	push	{r0, r1, lr}
    1980:	bl	175c <.divsi3_skip_div0_test>
    1984:	pop	{r1, r2, lr}
    1988:	mul	r3, r2, r0
    198c:	sub	r1, r1, r3
    1990:	bx	lr

00001994 <__aeabi_idiv0>:
    1994:	push	{r1, lr}
    1998:	mov	r0, #8
    199c:	bl	8b0 <raise@plt>
    19a0:	pop	{r1, pc}

Disassembly of section .fini:

000019a4 <_fini>:
    19a4:	push	{r3, lr}
    19a8:	pop	{r3, pc}
