
../repos/eddieantonio-ocreval-3ab279a/groupacc/groupacc:     file format elf32-littlearm


Disassembly of section .init:

000109e8 <.init>:
   109e8:	push	{r3, lr}
   109ec:	bl	10bc4 <getc@plt+0x48>
   109f0:	pop	{r3, pc}

Disassembly of section .plt:

000109f4 <calloc@plt-0x14>:
   109f4:	push	{lr}		; (str lr, [sp, #-4]!)
   109f8:	ldr	lr, [pc, #4]	; 10a04 <calloc@plt-0x4>
   109fc:	add	lr, pc, lr
   10a00:	ldr	pc, [lr, #8]!
   10a04:	strdeq	r4, [r1], -ip

00010a08 <calloc@plt>:
   10a08:	add	ip, pc, #0, 12
   10a0c:	add	ip, ip, #20, 20	; 0x14000
   10a10:	ldr	pc, [ip, #1532]!	; 0x5fc

00010a14 <strcmp@plt>:
   10a14:	add	ip, pc, #0, 12
   10a18:	add	ip, ip, #20, 20	; 0x14000
   10a1c:	ldr	pc, [ip, #1524]!	; 0x5f4

00010a20 <fopen@plt>:
   10a20:	add	ip, pc, #0, 12
   10a24:	add	ip, ip, #20, 20	; 0x14000
   10a28:	ldr	pc, [ip, #1516]!	; 0x5ec

00010a2c <free@plt>:
   10a2c:	add	ip, pc, #0, 12
   10a30:	add	ip, ip, #20, 20	; 0x14000
   10a34:	ldr	pc, [ip, #1508]!	; 0x5e4

00010a38 <utf8proc_get_property@plt>:
   10a38:	add	ip, pc, #0, 12
   10a3c:	add	ip, ip, #20, 20	; 0x14000
   10a40:	ldr	pc, [ip, #1500]!	; 0x5dc

00010a44 <fgets@plt>:
   10a44:	add	ip, pc, #0, 12
   10a48:	add	ip, ip, #20, 20	; 0x14000
   10a4c:	ldr	pc, [ip, #1492]!	; 0x5d4

00010a50 <utf8proc_encode_char@plt>:
   10a50:	add	ip, pc, #0, 12
   10a54:	add	ip, ip, #20, 20	; 0x14000
   10a58:	ldr	pc, [ip, #1484]!	; 0x5cc

00010a5c <strdup@plt>:
   10a5c:	add	ip, pc, #0, 12
   10a60:	add	ip, ip, #20, 20	; 0x14000
   10a64:	ldr	pc, [ip, #1476]!	; 0x5c4

00010a68 <rewind@plt>:
   10a68:	add	ip, pc, #0, 12
   10a6c:	add	ip, ip, #20, 20	; 0x14000
   10a70:	ldr	pc, [ip, #1468]!	; 0x5bc

00010a74 <unlink@plt>:
   10a74:	add	ip, pc, #0, 12
   10a78:	add	ip, ip, #20, 20	; 0x14000
   10a7c:	ldr	pc, [ip, #1460]!	; 0x5b4

00010a80 <utf8proc_tolower@plt>:
   10a80:	add	ip, pc, #0, 12
   10a84:	add	ip, ip, #20, 20	; 0x14000
   10a88:	ldr	pc, [ip, #1452]!	; 0x5ac

00010a8c <__xstat@plt>:
   10a8c:	add	ip, pc, #0, 12
   10a90:	add	ip, ip, #20, 20	; 0x14000
   10a94:	ldr	pc, [ip, #1444]!	; 0x5a4

00010a98 <fwrite@plt>:
   10a98:	add	ip, pc, #0, 12
   10a9c:	add	ip, ip, #20, 20	; 0x14000
   10aa0:	ldr	pc, [ip, #1436]!	; 0x59c

00010aa4 <fread@plt>:
   10aa4:	add	ip, pc, #0, 12
   10aa8:	add	ip, ip, #20, 20	; 0x14000
   10aac:	ldr	pc, [ip, #1428]!	; 0x594

00010ab0 <utf8proc_iterate@plt>:
   10ab0:	add	ip, pc, #0, 12
   10ab4:	add	ip, ip, #20, 20	; 0x14000
   10ab8:	ldr	pc, [ip, #1420]!	; 0x58c

00010abc <__libc_start_main@plt>:
   10abc:	add	ip, pc, #0, 12
   10ac0:	add	ip, ip, #20, 20	; 0x14000
   10ac4:	ldr	pc, [ip, #1412]!	; 0x584

00010ac8 <__sysv_signal@plt>:
   10ac8:	add	ip, pc, #0, 12
   10acc:	add	ip, ip, #20, 20	; 0x14000
   10ad0:	ldr	pc, [ip, #1404]!	; 0x57c

00010ad4 <__gmon_start__@plt>:
   10ad4:	add	ip, pc, #0, 12
   10ad8:	add	ip, ip, #20, 20	; 0x14000
   10adc:	ldr	pc, [ip, #1396]!	; 0x574

00010ae0 <getpid@plt>:
   10ae0:	add	ip, pc, #0, 12
   10ae4:	add	ip, ip, #20, 20	; 0x14000
   10ae8:	ldr	pc, [ip, #1388]!	; 0x56c

00010aec <exit@plt>:
   10aec:	add	ip, pc, #0, 12
   10af0:	add	ip, ip, #20, 20	; 0x14000
   10af4:	ldr	pc, [ip, #1380]!	; 0x564

00010af8 <bcmp@plt>:
   10af8:	add	ip, pc, #0, 12
   10afc:	add	ip, ip, #20, 20	; 0x14000
   10b00:	ldr	pc, [ip, #1372]!	; 0x55c

00010b04 <utf8proc_category@plt>:
   10b04:	add	ip, pc, #0, 12
   10b08:	add	ip, ip, #20, 20	; 0x14000
   10b0c:	ldr	pc, [ip, #1364]!	; 0x554

00010b10 <strlen@plt>:
   10b10:	add	ip, pc, #0, 12
   10b14:	add	ip, ip, #20, 20	; 0x14000
   10b18:	ldr	pc, [ip, #1356]!	; 0x54c

00010b1c <fprintf@plt>:
   10b1c:	add	ip, pc, #0, 12
   10b20:	add	ip, ip, #20, 20	; 0x14000
   10b24:	ldr	pc, [ip, #1348]!	; 0x544

00010b28 <__isoc99_sscanf@plt>:
   10b28:	add	ip, pc, #0, 12
   10b2c:	add	ip, ip, #20, 20	; 0x14000
   10b30:	ldr	pc, [ip, #1340]!	; 0x53c

00010b34 <fclose@plt>:
   10b34:	add	ip, pc, #0, 12
   10b38:	add	ip, ip, #20, 20	; 0x14000
   10b3c:	ldr	pc, [ip, #1332]!	; 0x534

00010b40 <sprintf@plt>:
   10b40:	add	ip, pc, #0, 12
   10b44:	add	ip, ip, #20, 20	; 0x14000
   10b48:	ldr	pc, [ip, #1324]!	; 0x52c

00010b4c <utf8proc_errmsg@plt>:
   10b4c:	add	ip, pc, #0, 12
   10b50:	add	ip, ip, #20, 20	; 0x14000
   10b54:	ldr	pc, [ip, #1316]!	; 0x524

00010b58 <fputs@plt>:
   10b58:	add	ip, pc, #0, 12
   10b5c:	add	ip, ip, #20, 20	; 0x14000
   10b60:	ldr	pc, [ip, #1308]!	; 0x51c

00010b64 <strncmp@plt>:
   10b64:	add	ip, pc, #0, 12
   10b68:	add	ip, ip, #20, 20	; 0x14000
   10b6c:	ldr	pc, [ip, #1300]!	; 0x514

00010b70 <abort@plt>:
   10b70:	add	ip, pc, #0, 12
   10b74:	add	ip, ip, #20, 20	; 0x14000
   10b78:	ldr	pc, [ip, #1292]!	; 0x50c

00010b7c <getc@plt>:
   10b7c:	add	ip, pc, #0, 12
   10b80:	add	ip, ip, #20, 20	; 0x14000
   10b84:	ldr	pc, [ip, #1284]!	; 0x504

Disassembly of section .text:

00010b88 <error@@Base-0x2000>:
   10b88:	mov	fp, #0
   10b8c:	mov	lr, #0
   10b90:	pop	{r1}		; (ldr r1, [sp], #4)
   10b94:	mov	r2, sp
   10b98:	push	{r2}		; (str r2, [sp, #-4]!)
   10b9c:	push	{r0}		; (str r0, [sp, #-4]!)
   10ba0:	ldr	ip, [pc, #16]	; 10bb8 <getc@plt+0x3c>
   10ba4:	push	{ip}		; (str ip, [sp, #-4]!)
   10ba8:	ldr	r0, [pc, #12]	; 10bbc <getc@plt+0x40>
   10bac:	ldr	r3, [pc, #12]	; 10bc0 <getc@plt+0x44>
   10bb0:	bl	10abc <__libc_start_main@plt>
   10bb4:	bl	10b70 <abort@plt>
   10bb8:	andeq	r3, r1, r8, ror #14
   10bbc:	andeq	r0, r1, r0, asr #30
   10bc0:	andeq	r3, r1, r8, lsl #14
   10bc4:	ldr	r3, [pc, #20]	; 10be0 <getc@plt+0x64>
   10bc8:	ldr	r2, [pc, #20]	; 10be4 <getc@plt+0x68>
   10bcc:	add	r3, pc, r3
   10bd0:	ldr	r2, [r3, r2]
   10bd4:	cmp	r2, #0
   10bd8:	bxeq	lr
   10bdc:	b	10ad4 <__gmon_start__@plt>
   10be0:	andeq	r4, r1, ip, lsr #8
   10be4:	andeq	r0, r0, r4, lsr #1
   10be8:	ldr	r0, [pc, #24]	; 10c08 <getc@plt+0x8c>
   10bec:	ldr	r3, [pc, #24]	; 10c0c <getc@plt+0x90>
   10bf0:	cmp	r3, r0
   10bf4:	bxeq	lr
   10bf8:	ldr	r3, [pc, #16]	; 10c10 <getc@plt+0x94>
   10bfc:	cmp	r3, #0
   10c00:	bxeq	lr
   10c04:	bx	r3
   10c08:	ldrdeq	r5, [r2], -ip
   10c0c:	ldrdeq	r5, [r2], -ip
   10c10:	andeq	r0, r0, r0
   10c14:	ldr	r0, [pc, #36]	; 10c40 <getc@plt+0xc4>
   10c18:	ldr	r1, [pc, #36]	; 10c44 <getc@plt+0xc8>
   10c1c:	sub	r1, r1, r0
   10c20:	asr	r1, r1, #2
   10c24:	add	r1, r1, r1, lsr #31
   10c28:	asrs	r1, r1, #1
   10c2c:	bxeq	lr
   10c30:	ldr	r3, [pc, #16]	; 10c48 <getc@plt+0xcc>
   10c34:	cmp	r3, #0
   10c38:	bxeq	lr
   10c3c:	bx	r3
   10c40:	ldrdeq	r5, [r2], -ip
   10c44:	ldrdeq	r5, [r2], -ip
   10c48:	andeq	r0, r0, r0
   10c4c:	push	{r4, lr}
   10c50:	ldr	r4, [pc, #24]	; 10c70 <getc@plt+0xf4>
   10c54:	ldrb	r3, [r4]
   10c58:	cmp	r3, #0
   10c5c:	popne	{r4, pc}
   10c60:	bl	10be8 <getc@plt+0x6c>
   10c64:	mov	r3, #1
   10c68:	strb	r3, [r4]
   10c6c:	pop	{r4, pc}
   10c70:	ldrdeq	r5, [r2], -ip
   10c74:	b	10c14 <getc@plt+0x98>
   10c78:	push	{r4, r5, r6, sl, fp, lr}
   10c7c:	add	fp, sp, #16
   10c80:	mov	r5, r1
   10c84:	ldr	r1, [pc, #124]	; 10d08 <getc@plt+0x18c>
   10c88:	mov	r6, r2
   10c8c:	mov	r4, r0
   10c90:	mov	r2, r5
   10c94:	mov	r3, r6
   10c98:	add	r1, pc, r1
   10c9c:	bl	10b1c <fprintf@plt>
   10ca0:	cmp	r5, #0
   10ca4:	beq	10ce0 <getc@plt+0x164>
   10ca8:	sub	r0, r5, r6
   10cac:	vldr	d16, [pc, #76]	; 10d00 <getc@plt+0x184>
   10cb0:	vmov	s2, r5
   10cb4:	vmov	s0, r0
   10cb8:	mov	r0, r4
   10cbc:	vcvt.f64.s32	d17, s0
   10cc0:	vcvt.f64.s32	d18, s2
   10cc4:	ldr	r1, [pc, #68]	; 10d10 <getc@plt+0x194>
   10cc8:	add	r1, pc, r1
   10ccc:	vmul.f64	d16, d17, d16
   10cd0:	vdiv.f64	d16, d16, d18
   10cd4:	vmov	r2, r3, d16
   10cd8:	pop	{r4, r5, r6, sl, fp, lr}
   10cdc:	b	10b1c <fprintf@plt>
   10ce0:	ldr	r0, [pc, #36]	; 10d0c <getc@plt+0x190>
   10ce4:	mov	r1, #11
   10ce8:	mov	r2, #1
   10cec:	mov	r3, r4
   10cf0:	add	r0, pc, r0
   10cf4:	pop	{r4, r5, r6, sl, fp, lr}
   10cf8:	b	10a98 <fwrite@plt>
   10cfc:	nop	{0}
   10d00:	andeq	r0, r0, r0
   10d04:	subsmi	r0, r9, r0
   10d08:	ldrdeq	r2, [r0], -r8
   10d0c:	andeq	r2, r0, fp, lsl #21
   10d10:			; <UNDEFINED> instruction: 0x00002abf
   10d14:	nop	{0}
   10d18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10d1c:	add	fp, sp, #28
   10d20:	sub	sp, sp, #4
   10d24:	vpush	{d8}
   10d28:	sub	sp, sp, #24
   10d2c:	ldr	r1, [pc, #476]	; 10f10 <getc@plt+0x394>
   10d30:	add	r1, pc, r1
   10d34:	bl	12760 <getc@plt+0x1be4>
   10d38:	ldr	r1, [pc, #468]	; 10f14 <getc@plt+0x398>
   10d3c:	mov	r4, r0
   10d40:	add	r1, pc, r1
   10d44:	bl	10b1c <fprintf@plt>
   10d48:	ldr	r0, [pc, #456]	; 10f18 <getc@plt+0x39c>
   10d4c:	ldr	r0, [pc, r0]
   10d50:	ldr	sl, [r0]
   10d54:	cmp	sl, #0
   10d58:	beq	10ea8 <getc@plt+0x32c>
   10d5c:	str	r4, [sp, #4]
   10d60:	vldr	d8, [pc, #416]	; 10f08 <getc@plt+0x38c>
   10d64:	mov	r5, #0
   10d68:	movw	r4, #10180	; 0x27c4
   10d6c:	mov	r6, #0
   10d70:	ldr	r3, [pc, #420]	; 10f1c <getc@plt+0x3a0>
   10d74:	ldr	r3, [pc, r3]
   10d78:	b	10d88 <getc@plt+0x20c>
   10d7c:	ldr	sl, [sl, #4]
   10d80:	cmp	sl, #0
   10d84:	beq	10e50 <getc@plt+0x2d4>
   10d88:	ldr	r1, [sl, #12]
   10d8c:	add	r0, r3, r1, lsl #3
   10d90:	ldr	r8, [r0, r4]
   10d94:	cmp	r8, #1
   10d98:	blt	10d7c <getc@plt+0x200>
   10d9c:	cmp	r1, #10
   10da0:	cmpne	r1, #32
   10da4:	beq	10d7c <getc@plt+0x200>
   10da8:	movw	r1, #10184	; 0x27c8
   10dac:	ldr	r4, [sp, #4]
   10db0:	mov	r2, r8
   10db4:	ldr	r9, [r0, r1]
   10db8:	ldr	r1, [pc, #352]	; 10f20 <getc@plt+0x3a4>
   10dbc:	str	r6, [sp, #8]
   10dc0:	mov	r6, r5
   10dc4:	mov	r5, r3
   10dc8:	mov	r0, r4
   10dcc:	add	r1, pc, r1
   10dd0:	mov	r3, r9
   10dd4:	bl	10b1c <fprintf@plt>
   10dd8:	sub	r0, r8, r9
   10ddc:	vmov	s2, r8
   10de0:	vmov	s0, r0
   10de4:	mov	r0, r4
   10de8:	vcvt.f64.s32	d16, s0
   10dec:	vcvt.f64.s32	d17, s2
   10df0:	ldr	r1, [pc, #300]	; 10f24 <getc@plt+0x3a8>
   10df4:	add	r1, pc, r1
   10df8:	vmul.f64	d16, d16, d8
   10dfc:	vdiv.f64	d16, d16, d17
   10e00:	vmov	r2, r3, d16
   10e04:	bl	10b1c <fprintf@plt>
   10e08:	ldr	r1, [sl, #12]
   10e0c:	add	r7, sp, #15
   10e10:	mov	r0, #0
   10e14:	mov	r3, #1
   10e18:	mov	r2, r7
   10e1c:	bl	131b0 <error@@Base+0x628>
   10e20:	ldr	r1, [pc, #256]	; 10f28 <getc@plt+0x3ac>
   10e24:	mov	r0, r4
   10e28:	mov	r2, r7
   10e2c:	add	r1, pc, r1
   10e30:	bl	10b1c <fprintf@plt>
   10e34:	mov	r3, r5
   10e38:	mov	r5, r6
   10e3c:	ldr	r6, [sp, #8]
   10e40:	movw	r4, #10180	; 0x27c4
   10e44:	add	r5, r8, r5
   10e48:	add	r6, r9, r6
   10e4c:	b	10d7c <getc@plt+0x200>
   10e50:	ldr	r1, [pc, #212]	; 10f2c <getc@plt+0x3b0>
   10e54:	ldr	r4, [sp, #4]
   10e58:	mov	r2, r5
   10e5c:	mov	r3, r6
   10e60:	add	r1, pc, r1
   10e64:	mov	r0, r4
   10e68:	bl	10b1c <fprintf@plt>
   10e6c:	cmp	r5, #0
   10e70:	beq	10ec0 <getc@plt+0x344>
   10e74:	sub	r0, r5, r6
   10e78:	vmov	s2, r5
   10e7c:	vmov	s0, r0
   10e80:	mov	r0, r4
   10e84:	vcvt.f64.s32	d16, s0
   10e88:	vcvt.f64.s32	d17, s2
   10e8c:	ldr	r1, [pc, #160]	; 10f34 <getc@plt+0x3b8>
   10e90:	add	r1, pc, r1
   10e94:	vmul.f64	d16, d16, d8
   10e98:	vdiv.f64	d16, d16, d17
   10e9c:	vmov	r2, r3, d16
   10ea0:	bl	10b1c <fprintf@plt>
   10ea4:	b	10ed8 <getc@plt+0x35c>
   10ea8:	ldr	r1, [pc, #140]	; 10f3c <getc@plt+0x3c0>
   10eac:	mov	r0, r4
   10eb0:	mov	r2, #0
   10eb4:	mov	r3, #0
   10eb8:	add	r1, pc, r1
   10ebc:	bl	10b1c <fprintf@plt>
   10ec0:	ldr	r0, [pc, #104]	; 10f30 <getc@plt+0x3b4>
   10ec4:	mov	r1, #11
   10ec8:	mov	r2, #1
   10ecc:	mov	r3, r4
   10ed0:	add	r0, pc, r0
   10ed4:	bl	10a98 <fwrite@plt>
   10ed8:	ldr	r0, [pc, #88]	; 10f38 <getc@plt+0x3bc>
   10edc:	mov	r1, #6
   10ee0:	mov	r2, #1
   10ee4:	mov	r3, r4
   10ee8:	add	r0, pc, r0
   10eec:	bl	10a98 <fwrite@plt>
   10ef0:	mov	r0, r4
   10ef4:	bl	127e8 <getc@plt+0x1c6c>
   10ef8:	sub	sp, fp, #40	; 0x28
   10efc:	vpop	{d8}
   10f00:	add	sp, sp, #4
   10f04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10f08:	andeq	r0, r0, r0
   10f0c:	subsmi	r0, r9, r0
   10f10:	andeq	r2, r0, r4, lsr lr
   10f14:	muleq	r0, lr, fp
   10f18:	andeq	r4, r1, r8, lsr r3
   10f1c:	andeq	r4, r1, r8, lsl r3
   10f20:	andeq	r2, r0, r4, lsr #19
   10f24:	muleq	r0, r3, r9
   10f28:	andeq	r2, r0, r3, lsr fp
   10f2c:	andeq	r2, r0, r0, lsl r9
   10f30:	andeq	r2, r0, fp, lsr #17
   10f34:	strdeq	r2, [r0], -r7
   10f38:	andeq	r2, r0, r8, lsr #17
   10f3c:			; <UNDEFINED> instruction: 0x000028b8
   10f40:	push	{fp, lr}
   10f44:	mov	fp, sp
   10f48:	sub	sp, sp, #8
   10f4c:	str	r0, [sp, #4]
   10f50:	add	r0, sp, #4
   10f54:	mov	r3, #0
   10f58:	mov	r4, r1
   10f5c:	mov	r5, #0
   10f60:	ldr	r2, [pc, #96]	; 10fc8 <getc@plt+0x44c>
   10f64:	add	r2, pc, r2
   10f68:	bl	12900 <getc@plt+0x1d84>
   10f6c:	ldr	r0, [sp, #4]
   10f70:	bic	r0, r0, #1
   10f74:	cmp	r0, #2
   10f78:	bne	10fbc <getc@plt+0x440>
   10f7c:	ldr	r1, [r4]
   10f80:	ldr	r0, [pc, #68]	; 10fcc <getc@plt+0x450>
   10f84:	ldr	r0, [pc, r0]
   10f88:	ldr	r2, [pc, #64]	; 10fd0 <getc@plt+0x454>
   10f8c:	ldr	r2, [pc, r2]
   10f90:	bl	12de8 <error@@Base+0x260>
   10f94:	ldr	r1, [r4, #4]
   10f98:	ldr	r0, [pc, #52]	; 10fd4 <getc@plt+0x458>
   10f9c:	ldr	r0, [pc, r0]
   10fa0:	bl	110d4 <getc@plt+0x558>
   10fa4:	ldr	r0, [sp, #4]
   10fa8:	cmp	r0, #3
   10fac:	ldreq	r5, [r4, #8]
   10fb0:	mov	r0, r5
   10fb4:	bl	10d18 <getc@plt+0x19c>
   10fb8:	bl	12b44 <getc@plt+0x1fc8>
   10fbc:	ldr	r0, [pc, #20]	; 10fd8 <getc@plt+0x45c>
   10fc0:	add	r0, pc, r0
   10fc4:	bl	12b88 <error@@Base>
   10fc8:	andeq	r2, r0, r3, lsr r8
   10fcc:	andeq	r4, r1, r0, lsl #2
   10fd0:	andeq	r4, r1, r8, lsl #2
   10fd4:	strdeq	r4, [r1], -r0
   10fd8:	andeq	r2, r0, r3, lsl #16
   10fdc:	andeq	r0, r0, r0
   10fe0:	push	{r4, r5, r6, r7, fp, lr}
   10fe4:	add	fp, sp, #16
   10fe8:	mov	r7, r0
   10fec:	mov	r0, r1
   10ff0:	mov	r4, r3
   10ff4:	mov	r5, r2
   10ff8:	mov	r6, r1
   10ffc:	bl	12384 <getc@plt+0x1808>
   11000:	add	r0, r7, r0, lsl #3
   11004:	ldr	r1, [r0, #68]	; 0x44
   11008:	ldr	r2, [r0, #72]	; 0x48
   1100c:	add	r1, r1, r5
   11010:	add	r2, r2, r4
   11014:	str	r1, [r0, #68]	; 0x44
   11018:	str	r2, [r0, #72]	; 0x48
   1101c:	ldr	r0, [r7, #2116]	; 0x844
   11020:	ldr	r1, [r7, #2120]	; 0x848
   11024:	add	r0, r0, r5
   11028:	add	r1, r1, r4
   1102c:	str	r0, [r7, #2116]	; 0x844
   11030:	add	r0, r7, r6, lsl #3
   11034:	str	r1, [r7, #2120]	; 0x848
   11038:	movw	r1, #10180	; 0x27c4
   1103c:	ldr	r1, [r0, r1]!
   11040:	add	r1, r1, r5
   11044:	str	r1, [r0]
   11048:	ldr	r1, [r0, #4]
   1104c:	add	r1, r1, r4
   11050:	str	r1, [r0, #4]
   11054:	pop	{r4, r5, r6, r7, fp, pc}
   11058:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1105c:	add	fp, sp, #24
   11060:	mov	r7, r1
   11064:	movw	r1, #2124	; 0x84c
   11068:	mov	r8, r3
   1106c:	mov	r5, r2
   11070:	add	r6, r0, r1
   11074:	mov	r1, r7
   11078:	mov	r0, r6
   1107c:	bl	1210c <getc@plt+0x1590>
   11080:	cmp	r0, #0
   11084:	beq	110a4 <getc@plt+0x528>
   11088:	ldr	r1, [r0, #12]
   1108c:	ldr	r2, [r0, #16]
   11090:	add	r1, r1, r5
   11094:	add	r2, r2, r8
   11098:	str	r1, [r0, #12]
   1109c:	str	r2, [r0, #16]
   110a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   110a4:	mov	r0, #1
   110a8:	mov	r1, #20
   110ac:	bl	126b8 <getc@plt+0x1b3c>
   110b0:	mov	r4, r0
   110b4:	mov	r0, r7
   110b8:	bl	10a5c <strdup@plt>
   110bc:	add	r1, r4, #8
   110c0:	stm	r1, {r0, r5, r8}
   110c4:	mov	r0, r6
   110c8:	mov	r1, r4
   110cc:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   110d0:	b	1219c <getc@plt+0x1620>
   110d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   110d8:	add	fp, sp, #28
   110dc:	sub	sp, sp, #76	; 0x4c
   110e0:	bfc	sp, #0, #4
   110e4:	mov	r2, r1
   110e8:	ldr	r1, [pc, #1680]	; 11780 <getc@plt+0xc04>
   110ec:	mov	r4, r0
   110f0:	mov	r0, r2
   110f4:	str	r2, [sp, #28]
   110f8:	add	r1, pc, r1
   110fc:	bl	12760 <getc@plt+0x1be4>
   11100:	mov	r7, r0
   11104:	ldr	r0, [pc, #1656]	; 11784 <getc@plt+0xc08>
   11108:	mov	r1, #99	; 0x63
   1110c:	mov	r2, r7
   11110:	add	r0, pc, r0
   11114:	bl	10a44 <fgets@plt>
   11118:	cmp	r0, #0
   1111c:	beq	11760 <getc@plt+0xbe4>
   11120:	ldr	r0, [pc, #1632]	; 11788 <getc@plt+0xc0c>
   11124:	ldr	r1, [pc, #1632]	; 1178c <getc@plt+0xc10>
   11128:	mov	r2, #40	; 0x28
   1112c:	add	r0, pc, r0
   11130:	add	r1, pc, r1
   11134:	bl	10af8 <bcmp@plt>
   11138:	cmp	r0, #0
   1113c:	bne	11760 <getc@plt+0xbe4>
   11140:	ldr	r0, [pc, #1608]	; 11790 <getc@plt+0xc14>
   11144:	mov	r1, #99	; 0x63
   11148:	mov	r2, r7
   1114c:	add	r0, pc, r0
   11150:	bl	10a44 <fgets@plt>
   11154:	cmp	r0, #0
   11158:	beq	11760 <getc@plt+0xbe4>
   1115c:	ldr	r0, [pc, #1584]	; 11794 <getc@plt+0xc18>
   11160:	ldr	r1, [pc, #1584]	; 11798 <getc@plt+0xc1c>
   11164:	mov	r2, #43	; 0x2b
   11168:	add	r0, pc, r0
   1116c:	add	r1, pc, r1
   11170:	bl	10af8 <bcmp@plt>
   11174:	cmp	r0, #0
   11178:	bne	11760 <getc@plt+0xbe4>
   1117c:	ldr	r0, [pc, #1560]	; 1179c <getc@plt+0xc20>
   11180:	mov	r1, #99	; 0x63
   11184:	mov	r2, r7
   11188:	add	r0, pc, r0
   1118c:	bl	10a44 <fgets@plt>
   11190:	cmp	r0, #0
   11194:	beq	11760 <getc@plt+0xbe4>
   11198:	ldr	r0, [pc, #1536]	; 117a0 <getc@plt+0xc24>
   1119c:	ldr	r1, [pc, #1536]	; 117a4 <getc@plt+0xc28>
   111a0:	add	r2, sp, #44	; 0x2c
   111a4:	add	r0, pc, r0
   111a8:	add	r1, pc, r1
   111ac:	bl	10b28 <__isoc99_sscanf@plt>
   111b0:	cmp	r0, #1
   111b4:	bne	11760 <getc@plt+0xbe4>
   111b8:	ldr	r0, [r4]
   111bc:	ldr	r1, [sp, #44]	; 0x2c
   111c0:	mov	r2, r7
   111c4:	add	r0, r0, r1
   111c8:	mov	r1, #99	; 0x63
   111cc:	str	r0, [r4]
   111d0:	ldr	r0, [pc, #1488]	; 117a8 <getc@plt+0xc2c>
   111d4:	add	r0, pc, r0
   111d8:	bl	10a44 <fgets@plt>
   111dc:	cmp	r0, #0
   111e0:	beq	11760 <getc@plt+0xbe4>
   111e4:	ldr	r0, [pc, #1472]	; 117ac <getc@plt+0xc30>
   111e8:	ldr	r1, [pc, #1472]	; 117b0 <getc@plt+0xc34>
   111ec:	add	r2, sp, #40	; 0x28
   111f0:	add	r0, pc, r0
   111f4:	add	r1, pc, r1
   111f8:	bl	10b28 <__isoc99_sscanf@plt>
   111fc:	cmp	r0, #1
   11200:	bne	11760 <getc@plt+0xbe4>
   11204:	ldr	r0, [r4, #4]
   11208:	ldr	r1, [sp, #40]	; 0x28
   1120c:	mov	r2, r7
   11210:	add	r0, r0, r1
   11214:	mov	r1, #99	; 0x63
   11218:	str	r0, [r4, #4]
   1121c:	ldr	r0, [pc, #1424]	; 117b4 <getc@plt+0xc38>
   11220:	add	r0, pc, r0
   11224:	bl	10a44 <fgets@plt>
   11228:	cmp	r0, #0
   1122c:	beq	11760 <getc@plt+0xbe4>
   11230:	ldr	r0, [pc, #1408]	; 117b8 <getc@plt+0xc3c>
   11234:	mov	r1, #99	; 0x63
   11238:	mov	r2, r7
   1123c:	add	r0, pc, r0
   11240:	bl	10a44 <fgets@plt>
   11244:	cmp	r0, #0
   11248:	beq	11760 <getc@plt+0xbe4>
   1124c:	ldr	r0, [pc, #1384]	; 117bc <getc@plt+0xc40>
   11250:	mov	r1, #99	; 0x63
   11254:	mov	r2, r7
   11258:	add	r0, pc, r0
   1125c:	bl	10a44 <fgets@plt>
   11260:	cmp	r0, #0
   11264:	beq	11760 <getc@plt+0xbe4>
   11268:	ldr	r0, [pc, #1360]	; 117c0 <getc@plt+0xc44>
   1126c:	ldr	r1, [pc, #1360]	; 117c4 <getc@plt+0xc48>
   11270:	add	r2, sp, #36	; 0x24
   11274:	add	r0, pc, r0
   11278:	add	r1, pc, r1
   1127c:	bl	10b28 <__isoc99_sscanf@plt>
   11280:	cmp	r0, #1
   11284:	bne	11760 <getc@plt+0xbe4>
   11288:	ldr	r0, [r4, #8]
   1128c:	ldr	r1, [sp, #36]	; 0x24
   11290:	mov	r2, r7
   11294:	add	r0, r0, r1
   11298:	mov	r1, #99	; 0x63
   1129c:	str	r0, [r4, #8]
   112a0:	ldr	r0, [pc, #1312]	; 117c8 <getc@plt+0xc4c>
   112a4:	add	r0, pc, r0
   112a8:	bl	10a44 <fgets@plt>
   112ac:	cmp	r0, #0
   112b0:	beq	11760 <getc@plt+0xbe4>
   112b4:	ldr	r0, [pc, #1296]	; 117cc <getc@plt+0xc50>
   112b8:	ldr	r1, [pc, #1296]	; 117d0 <getc@plt+0xc54>
   112bc:	add	r2, sp, #36	; 0x24
   112c0:	add	r0, pc, r0
   112c4:	add	r1, pc, r1
   112c8:	bl	10b28 <__isoc99_sscanf@plt>
   112cc:	cmp	r0, #1
   112d0:	bne	11760 <getc@plt+0xbe4>
   112d4:	ldr	r0, [r4, #12]
   112d8:	ldr	r1, [sp, #36]	; 0x24
   112dc:	mov	r2, r7
   112e0:	add	r0, r0, r1
   112e4:	mov	r1, #99	; 0x63
   112e8:	str	r0, [r4, #12]
   112ec:	ldr	r0, [pc, #1248]	; 117d4 <getc@plt+0xc58>
   112f0:	add	r0, pc, r0
   112f4:	bl	10a44 <fgets@plt>
   112f8:	cmp	r0, #0
   112fc:	beq	11760 <getc@plt+0xbe4>
   11300:	ldr	r0, [pc, #1232]	; 117d8 <getc@plt+0xc5c>
   11304:	ldr	r1, [pc, #1232]	; 117dc <getc@plt+0xc60>
   11308:	add	r2, sp, #36	; 0x24
   1130c:	add	r0, pc, r0
   11310:	add	r1, pc, r1
   11314:	bl	10b28 <__isoc99_sscanf@plt>
   11318:	cmp	r0, #1
   1131c:	bne	11760 <getc@plt+0xbe4>
   11320:	ldr	r0, [r4, #16]
   11324:	ldr	r1, [sp, #36]	; 0x24
   11328:	mov	r2, r7
   1132c:	add	r0, r0, r1
   11330:	mov	r1, #99	; 0x63
   11334:	str	r0, [r4, #16]
   11338:	ldr	r0, [pc, #1184]	; 117e0 <getc@plt+0xc64>
   1133c:	add	r0, pc, r0
   11340:	bl	10a44 <fgets@plt>
   11344:	cmp	r0, #0
   11348:	beq	11760 <getc@plt+0xbe4>
   1134c:	ldr	r0, [pc, #1168]	; 117e4 <getc@plt+0xc68>
   11350:	mov	r1, #99	; 0x63
   11354:	mov	r2, r7
   11358:	add	r0, pc, r0
   1135c:	bl	10a44 <fgets@plt>
   11360:	cmp	r0, #0
   11364:	beq	11760 <getc@plt+0xbe4>
   11368:	ldr	r0, [pc, #1144]	; 117e8 <getc@plt+0xc6c>
   1136c:	mov	r1, #99	; 0x63
   11370:	mov	r2, r7
   11374:	add	r0, pc, r0
   11378:	bl	10a44 <fgets@plt>
   1137c:	cmp	r0, #0
   11380:	beq	11760 <getc@plt+0xbe4>
   11384:	ldr	r0, [pc, #1120]	; 117ec <getc@plt+0xc70>
   11388:	mov	r1, #99	; 0x63
   1138c:	mov	r2, r7
   11390:	add	r0, pc, r0
   11394:	bl	10a44 <fgets@plt>
   11398:	cmp	r0, #0
   1139c:	beq	11760 <getc@plt+0xbe4>
   113a0:	ldr	r0, [pc, #1096]	; 117f0 <getc@plt+0xc74>
   113a4:	mov	r1, #99	; 0x63
   113a8:	mov	r2, r7
   113ac:	add	r0, pc, r0
   113b0:	bl	10a44 <fgets@plt>
   113b4:	cmp	r0, #0
   113b8:	beq	11760 <getc@plt+0xbe4>
   113bc:	add	r5, sp, #48	; 0x30
   113c0:	orr	r6, r5, #8
   113c4:	orr	r9, r5, #12
   113c8:	orr	sl, r5, #4
   113cc:	mov	r2, r5
   113d0:	stm	sp, {r6, r9}
   113d4:	mov	r3, sl
   113d8:	ldr	r0, [pc, #1044]	; 117f4 <getc@plt+0xc78>
   113dc:	ldr	r1, [pc, #1044]	; 117f8 <getc@plt+0xc7c>
   113e0:	add	r0, pc, r0
   113e4:	add	r1, pc, r1
   113e8:	bl	10b28 <__isoc99_sscanf@plt>
   113ec:	cmp	r0, #4
   113f0:	bne	11760 <getc@plt+0xbe4>
   113f4:	add	r8, r4, #20
   113f8:	vld1.64	{d16-d17}, [r5 :128]
   113fc:	mov	r1, #99	; 0x63
   11400:	mov	r2, r7
   11404:	vld1.32	{d18-d19}, [r8]
   11408:	vadd.i32	q8, q9, q8
   1140c:	vst1.32	{d16-d17}, [r8]
   11410:	ldr	r0, [pc, #996]	; 117fc <getc@plt+0xc80>
   11414:	add	r0, pc, r0
   11418:	bl	10a44 <fgets@plt>
   1141c:	cmp	r0, #0
   11420:	beq	11760 <getc@plt+0xbe4>
   11424:	stm	sp, {r6, r9}
   11428:	mov	r2, r5
   1142c:	mov	r3, sl
   11430:	ldr	r0, [pc, #968]	; 11800 <getc@plt+0xc84>
   11434:	ldr	r1, [pc, #968]	; 11804 <getc@plt+0xc88>
   11438:	add	r0, pc, r0
   1143c:	add	r1, pc, r1
   11440:	bl	10b28 <__isoc99_sscanf@plt>
   11444:	cmp	r0, #4
   11448:	bne	11760 <getc@plt+0xbe4>
   1144c:	add	r0, r8, #16
   11450:	vld1.64	{d16-d17}, [r5 :128]
   11454:	mov	r1, #99	; 0x63
   11458:	mov	r2, r7
   1145c:	vld1.32	{d18-d19}, [r0]
   11460:	vadd.i32	q8, q9, q8
   11464:	vst1.32	{d16-d17}, [r0]
   11468:	ldr	r0, [pc, #920]	; 11808 <getc@plt+0xc8c>
   1146c:	add	r0, pc, r0
   11470:	bl	10a44 <fgets@plt>
   11474:	cmp	r0, #0
   11478:	beq	11760 <getc@plt+0xbe4>
   1147c:	stm	sp, {r6, r9}
   11480:	mov	r2, r5
   11484:	mov	r3, sl
   11488:	ldr	r0, [pc, #892]	; 1180c <getc@plt+0xc90>
   1148c:	ldr	r1, [pc, #892]	; 11810 <getc@plt+0xc94>
   11490:	add	r0, pc, r0
   11494:	add	r1, pc, r1
   11498:	bl	10b28 <__isoc99_sscanf@plt>
   1149c:	cmp	r0, #4
   114a0:	bne	11760 <getc@plt+0xbe4>
   114a4:	add	r0, r8, #32
   114a8:	vld1.64	{d16-d17}, [r5 :128]
   114ac:	mov	r1, #99	; 0x63
   114b0:	mov	r2, r7
   114b4:	vld1.32	{d18-d19}, [r0]
   114b8:	vadd.i32	q8, q9, q8
   114bc:	vst1.32	{d16-d17}, [r0]
   114c0:	ldr	r6, [pc, #844]	; 11814 <getc@plt+0xc98>
   114c4:	add	r6, pc, r6
   114c8:	mov	r0, r6
   114cc:	bl	10a44 <fgets@plt>
   114d0:	cmp	r0, #0
   114d4:	beq	11760 <getc@plt+0xbe4>
   114d8:	str	r4, [sp, #20]
   114dc:	mov	r0, r6
   114e0:	mov	r1, #99	; 0x63
   114e4:	mov	r2, r7
   114e8:	bl	10a44 <fgets@plt>
   114ec:	cmp	r0, #0
   114f0:	ldrbne	r0, [r6]
   114f4:	cmpne	r0, #10
   114f8:	bne	114dc <getc@plt+0x960>
   114fc:	ldr	r0, [sp, #40]	; 0x28
   11500:	cmp	r0, #1
   11504:	blt	11618 <getc@plt+0xa9c>
   11508:	ldr	r0, [pc, #776]	; 11818 <getc@plt+0xc9c>
   1150c:	mov	r1, #99	; 0x63
   11510:	mov	r2, r7
   11514:	add	r0, pc, r0
   11518:	bl	10a44 <fgets@plt>
   1151c:	cmp	r0, #0
   11520:	beq	11618 <getc@plt+0xa9c>
   11524:	ldr	r4, [pc, #752]	; 1181c <getc@plt+0xca0>
   11528:	mov	r1, #99	; 0x63
   1152c:	mov	r2, r7
   11530:	add	r4, pc, r4
   11534:	mov	r0, r4
   11538:	bl	10a44 <fgets@plt>
   1153c:	cmp	r0, #0
   11540:	beq	11618 <getc@plt+0xa9c>
   11544:	ldr	r1, [sp, #20]
   11548:	movw	r0, #2124	; 0x84c
   1154c:	add	r8, sp, #36	; 0x24
   11550:	add	r0, r1, r0
   11554:	str	r0, [sp, #28]
   11558:	add	r0, r4, #20
   1155c:	ldr	r9, [pc, #700]	; 11820 <getc@plt+0xca4>
   11560:	str	r0, [sp, #24]
   11564:	ldr	r5, [sp, #24]
   11568:	add	r9, pc, r9
   1156c:	b	115c4 <getc@plt+0xa48>
   11570:	mov	r0, #1
   11574:	mov	r1, #20
   11578:	bl	126b8 <getc@plt+0x1b3c>
   1157c:	mov	r4, r9
   11580:	mov	r9, r0
   11584:	mov	r0, r5
   11588:	bl	10a5c <strdup@plt>
   1158c:	add	r1, r9, #8
   11590:	stm	r1, {r0, r6, sl}
   11594:	mov	r1, r9
   11598:	mov	r9, r4
   1159c:	ldr	r0, [sp, #28]
   115a0:	ldr	r4, [pc, #636]	; 11824 <getc@plt+0xca8>
   115a4:	add	r4, pc, r4
   115a8:	bl	1219c <getc@plt+0x1620>
   115ac:	mov	r0, r4
   115b0:	mov	r1, #99	; 0x63
   115b4:	mov	r2, r7
   115b8:	bl	10a44 <fgets@plt>
   115bc:	cmp	r0, #0
   115c0:	beq	11618 <getc@plt+0xa9c>
   115c4:	mov	r0, r4
   115c8:	mov	r1, r9
   115cc:	mov	r2, r8
   115d0:	add	r3, sp, #48	; 0x30
   115d4:	bl	10b28 <__isoc99_sscanf@plt>
   115d8:	cmp	r0, #2
   115dc:	bne	11618 <getc@plt+0xa9c>
   115e0:	ldr	r0, [sp, #28]
   115e4:	ldr	sl, [sp, #48]	; 0x30
   115e8:	ldr	r6, [sp, #36]	; 0x24
   115ec:	mov	r1, r5
   115f0:	bl	1210c <getc@plt+0x1590>
   115f4:	cmp	r0, #0
   115f8:	beq	11570 <getc@plt+0x9f4>
   115fc:	ldr	r1, [r0, #12]
   11600:	ldr	r2, [r0, #16]
   11604:	add	r1, r1, r6
   11608:	add	r2, r2, sl
   1160c:	str	r1, [r0, #12]
   11610:	str	r2, [r0, #16]
   11614:	b	115ac <getc@plt+0xa30>
   11618:	ldr	r0, [sp, #44]	; 0x2c
   1161c:	ldr	r4, [sp, #20]
   11620:	cmp	r0, #1
   11624:	blt	11750 <getc@plt+0xbd4>
   11628:	ldr	r0, [pc, #504]	; 11828 <getc@plt+0xcac>
   1162c:	mov	r1, #99	; 0x63
   11630:	mov	r2, r7
   11634:	add	r0, pc, r0
   11638:	bl	10a44 <fgets@plt>
   1163c:	cmp	r0, #0
   11640:	beq	11750 <getc@plt+0xbd4>
   11644:	ldr	r6, [pc, #480]	; 1182c <getc@plt+0xcb0>
   11648:	mov	r1, #99	; 0x63
   1164c:	mov	r2, r7
   11650:	add	r6, pc, r6
   11654:	mov	r0, r6
   11658:	bl	10a44 <fgets@plt>
   1165c:	cmp	r0, #0
   11660:	beq	11750 <getc@plt+0xbd4>
   11664:	add	r5, sp, #48	; 0x30
   11668:	add	r0, r6, #31
   1166c:	str	r0, [sp, #28]
   11670:	b	116f8 <getc@plt+0xb7c>
   11674:	mov	sl, #10
   11678:	str	sl, [sp, #32]
   1167c:	ldr	r8, [sp, #48]	; 0x30
   11680:	ldr	r9, [sp, #36]	; 0x24
   11684:	mov	r0, sl
   11688:	bl	12384 <getc@plt+0x1808>
   1168c:	add	r0, r4, r0, lsl #3
   11690:	ldr	r1, [r0, #68]	; 0x44
   11694:	ldr	r2, [r0, #72]	; 0x48
   11698:	add	r1, r1, r9
   1169c:	add	r2, r2, r8
   116a0:	str	r1, [r0, #68]	; 0x44
   116a4:	str	r2, [r0, #72]	; 0x48
   116a8:	mov	r2, r7
   116ac:	ldr	r0, [r4, #2116]	; 0x844
   116b0:	ldr	r1, [r4, #2120]	; 0x848
   116b4:	add	r0, r0, r9
   116b8:	add	r1, r1, r8
   116bc:	str	r0, [r4, #2116]	; 0x844
   116c0:	add	r0, r4, sl, lsl #3
   116c4:	str	r1, [r4, #2120]	; 0x848
   116c8:	movw	r1, #10180	; 0x27c4
   116cc:	ldr	r1, [r0, r1]!
   116d0:	add	r1, r1, r9
   116d4:	str	r1, [r0]
   116d8:	ldr	r1, [r0, #4]
   116dc:	add	r1, r1, r8
   116e0:	str	r1, [r0, #4]
   116e4:	mov	r0, r6
   116e8:	mov	r1, #99	; 0x63
   116ec:	bl	10a44 <fgets@plt>
   116f0:	cmp	r0, #0
   116f4:	beq	11750 <getc@plt+0xbd4>
   116f8:	ldr	r1, [pc, #304]	; 11830 <getc@plt+0xcb4>
   116fc:	mov	r0, r6
   11700:	add	r2, sp, #36	; 0x24
   11704:	mov	r3, r5
   11708:	add	r1, pc, r1
   1170c:	bl	10b28 <__isoc99_sscanf@plt>
   11710:	cmp	r0, #2
   11714:	bne	11750 <getc@plt+0xbd4>
   11718:	ldrb	r0, [r6, #31]
   1171c:	cmp	r0, #92	; 0x5c
   11720:	beq	11674 <getc@plt+0xaf8>
   11724:	cmp	r0, #125	; 0x7d
   11728:	bne	11734 <getc@plt+0xbb8>
   1172c:	ldrb	sl, [r6, #30]
   11730:	b	11678 <getc@plt+0xafc>
   11734:	ldr	r0, [sp, #28]
   11738:	ldr	r1, [pc, #244]	; 11834 <getc@plt+0xcb8>
   1173c:	add	r2, sp, #32
   11740:	add	r1, pc, r1
   11744:	bl	10b28 <__isoc99_sscanf@plt>
   11748:	ldr	sl, [sp, #32]
   1174c:	b	1167c <getc@plt+0xb00>
   11750:	mov	r0, r7
   11754:	bl	127e8 <getc@plt+0x1c6c>
   11758:	sub	sp, fp, #28
   1175c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11760:	ldr	r1, [pc, #208]	; 11838 <getc@plt+0xcbc>
   11764:	ldr	r0, [sp, #28]
   11768:	cmp	r0, #0
   1176c:	add	r1, pc, r1
   11770:	movne	r1, r0
   11774:	ldr	r0, [pc, #192]	; 1183c <getc@plt+0xcc0>
   11778:	add	r0, pc, r0
   1177c:	bl	12bd8 <error@@Base+0x50>
   11780:	ldrdeq	r2, [r0], -r7
   11784:	andeq	r3, r1, r5, asr #31
   11788:	andeq	r3, r1, r9, lsr #31
   1178c:	andeq	r2, r0, fp, lsr #13
   11790:	andeq	r3, r1, r9, lsl #31
   11794:	andeq	r3, r1, sp, ror #30
   11798:	andeq	r2, r0, r2, lsr #30
   1179c:	andeq	r3, r1, sp, asr #30
   117a0:	andeq	r3, r1, r1, lsr pc
   117a4:	andeq	r2, r0, r7, lsl #15
   117a8:	andeq	r3, r1, r1, lsl #30
   117ac:	andeq	r3, r1, r5, ror #29
   117b0:	andeq	r2, r0, fp, lsr r7
   117b4:			; <UNDEFINED> instruction: 0x00013eb5
   117b8:	muleq	r1, r9, lr
   117bc:	andeq	r3, r1, sp, ror lr
   117c0:	andeq	r3, r1, r1, ror #28
   117c4:			; <UNDEFINED> instruction: 0x000026b7
   117c8:	andeq	r3, r1, r1, lsr lr
   117cc:	andeq	r3, r1, r5, lsl lr
   117d0:	andeq	r2, r0, fp, ror #12
   117d4:	andeq	r3, r1, r5, ror #27
   117d8:	andeq	r3, r1, r9, asr #27
   117dc:	andeq	r2, r0, pc, lsl r6
   117e0:	muleq	r1, r9, sp
   117e4:	andeq	r3, r1, sp, ror sp
   117e8:	andeq	r3, r1, r1, ror #26
   117ec:	andeq	r3, r1, r5, asr #26
   117f0:	andeq	r3, r1, r9, lsr #26
   117f4:	strdeq	r3, [r1], -r5
   117f8:	andeq	r2, r0, pc, lsr r5
   117fc:	andeq	r3, r1, r1, asr #25
   11800:	muleq	r1, sp, ip
   11804:	andeq	r2, r0, r7, ror #9
   11808:	andeq	r3, r1, r9, ror #24
   1180c:	andeq	r3, r1, r5, asr #24
   11810:	andeq	r2, r0, pc, lsl #9
   11814:	andeq	r3, r1, r1, lsl ip
   11818:	andeq	r3, r1, r1, asr #23
   1181c:	andeq	r3, r1, r5, lsr #23
   11820:	andeq	r2, r0, r3, asr #7
   11824:	andeq	r3, r1, r1, lsr fp
   11828:	andeq	r3, r1, r1, lsr #21
   1182c:	andeq	r3, r1, r5, lsl #21
   11830:	andeq	r2, r0, r3, lsr #4
   11834:	andeq	r2, r0, r6, asr #1
   11838:	strheq	r2, [r0], -r0
   1183c:	muleq	r0, r2, r0
   11840:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11844:	add	fp, sp, #28
   11848:	sub	sp, sp, #4
   1184c:	vpush	{d8}
   11850:	sub	sp, sp, #32
   11854:	mov	r2, r1
   11858:	ldr	r1, [pc, #1536]	; 11e60 <getc@plt+0x12e4>
   1185c:	mov	sl, r0
   11860:	mov	r0, r2
   11864:	add	r1, pc, r1
   11868:	bl	12760 <getc@plt+0x1be4>
   1186c:	ldr	r1, [pc, #1520]	; 11e64 <getc@plt+0x12e8>
   11870:	ldr	r2, [pc, #1520]	; 11e68 <getc@plt+0x12ec>
   11874:	ldr	r3, [pc, #1520]	; 11e6c <getc@plt+0x12f0>
   11878:	mov	r4, r0
   1187c:	add	r1, pc, r1
   11880:	add	r2, pc, r2
   11884:	add	r3, pc, r3
   11888:	bl	10b1c <fprintf@plt>
   1188c:	ldr	r2, [sl]
   11890:	ldr	r6, [pc, #1496]	; 11e70 <getc@plt+0x12f4>
   11894:	ldr	r3, [pc, #1496]	; 11e74 <getc@plt+0x12f8>
   11898:	mov	r0, r4
   1189c:	add	r6, pc, r6
   118a0:	add	r3, pc, r3
   118a4:	mov	r1, r6
   118a8:	bl	10b1c <fprintf@plt>
   118ac:	ldr	r2, [sl, #4]
   118b0:	ldr	r3, [pc, #1472]	; 11e78 <getc@plt+0x12fc>
   118b4:	mov	r0, r4
   118b8:	mov	r1, r6
   118bc:	add	r3, pc, r3
   118c0:	bl	10b1c <fprintf@plt>
   118c4:	ldr	r0, [sl]
   118c8:	cmp	r0, #0
   118cc:	beq	1190c <getc@plt+0xd90>
   118d0:	ldr	r1, [sl, #4]
   118d4:	vldr	d16, [pc, #932]	; 11c80 <getc@plt+0x1104>
   118d8:	vmov	s2, r0
   118dc:	sub	r1, r0, r1
   118e0:	mov	r0, r4
   118e4:	vmov	s0, r1
   118e8:	vcvt.f64.s32	d17, s0
   118ec:	vcvt.f64.s32	d18, s2
   118f0:	ldr	r1, [pc, #1416]	; 11e80 <getc@plt+0x1304>
   118f4:	add	r1, pc, r1
   118f8:	vmul.f64	d16, d17, d16
   118fc:	vdiv.f64	d16, d16, d18
   11900:	vmov	r2, r3, d16
   11904:	bl	10b1c <fprintf@plt>
   11908:	b	11924 <getc@plt+0xda8>
   1190c:	ldr	r0, [pc, #1384]	; 11e7c <getc@plt+0x1300>
   11910:	mov	r1, #8
   11914:	mov	r2, #1
   11918:	mov	r3, r4
   1191c:	add	r0, pc, r0
   11920:	bl	10a98 <fwrite@plt>
   11924:	ldr	r1, [pc, #1368]	; 11e84 <getc@plt+0x1308>
   11928:	mov	r0, r4
   1192c:	add	r1, pc, r1
   11930:	bl	10b1c <fprintf@plt>
   11934:	ldr	r2, [sl, #8]
   11938:	ldr	r6, [pc, #1352]	; 11e88 <getc@plt+0x130c>
   1193c:	ldr	r3, [pc, #1352]	; 11e8c <getc@plt+0x1310>
   11940:	mov	r0, r4
   11944:	add	r6, pc, r6
   11948:	add	r3, pc, r3
   1194c:	mov	r1, r6
   11950:	bl	10b1c <fprintf@plt>
   11954:	ldr	r2, [sl, #12]
   11958:	ldr	r3, [pc, #1328]	; 11e90 <getc@plt+0x1314>
   1195c:	mov	r0, r4
   11960:	mov	r1, r6
   11964:	add	r3, pc, r3
   11968:	bl	10b1c <fprintf@plt>
   1196c:	ldr	r2, [sl, #16]
   11970:	ldr	r3, [pc, #1308]	; 11e94 <getc@plt+0x1318>
   11974:	mov	r0, r4
   11978:	mov	r1, r6
   1197c:	add	r3, pc, r3
   11980:	bl	10b1c <fprintf@plt>
   11984:	ldr	r0, [sl]
   11988:	cmp	r0, #0
   1198c:	beq	119d0 <getc@plt+0xe54>
   11990:	ldr	r1, [sl, #8]
   11994:	ldr	r2, [sl, #12]
   11998:	vmov	s2, r0
   1199c:	vldr	d16, [pc, #732]	; 11c80 <getc@plt+0x1104>
   119a0:	mov	r0, r4
   119a4:	add	r1, r2, r1
   119a8:	vmov	s0, r1
   119ac:	vcvt.f64.s32	d17, s0
   119b0:	vcvt.f64.s32	d18, s2
   119b4:	ldr	r1, [pc, #1248]	; 11e9c <getc@plt+0x1320>
   119b8:	add	r1, pc, r1
   119bc:	vmul.f64	d16, d17, d16
   119c0:	vdiv.f64	d16, d16, d18
   119c4:	vmov	r2, r3, d16
   119c8:	bl	10b1c <fprintf@plt>
   119cc:	b	119e8 <getc@plt+0xe6c>
   119d0:	ldr	r0, [pc, #1216]	; 11e98 <getc@plt+0x131c>
   119d4:	mov	r1, #8
   119d8:	mov	r2, #1
   119dc:	mov	r3, r4
   119e0:	add	r0, pc, r0
   119e4:	bl	10a98 <fwrite@plt>
   119e8:	ldr	r1, [pc, #1200]	; 11ea0 <getc@plt+0x1324>
   119ec:	mov	r0, r4
   119f0:	movw	r6, #10172	; 0x27bc
   119f4:	add	r1, pc, r1
   119f8:	bl	10b1c <fprintf@plt>
   119fc:	ldr	r0, [sl]
   11a00:	cmp	r0, #0
   11a04:	beq	11a44 <getc@plt+0xec8>
   11a08:	ldr	r1, [sl, #48]	; 0x30
   11a0c:	vldr	d16, [pc, #620]	; 11c80 <getc@plt+0x1104>
   11a10:	vmov	s2, r0
   11a14:	sub	r1, r0, r1
   11a18:	mov	r0, r4
   11a1c:	vmov	s0, r1
   11a20:	vcvt.f64.s32	d17, s0
   11a24:	vcvt.f64.s32	d18, s2
   11a28:	ldr	r1, [pc, #1144]	; 11ea8 <getc@plt+0x132c>
   11a2c:	add	r1, pc, r1
   11a30:	vmul.f64	d16, d17, d16
   11a34:	vdiv.f64	d16, d16, d18
   11a38:	vmov	r2, r3, d16
   11a3c:	bl	10b1c <fprintf@plt>
   11a40:	b	11a5c <getc@plt+0xee0>
   11a44:	ldr	r0, [pc, #1112]	; 11ea4 <getc@plt+0x1328>
   11a48:	mov	r1, #8
   11a4c:	mov	r2, #1
   11a50:	mov	r3, r4
   11a54:	add	r0, pc, r0
   11a58:	bl	10a98 <fwrite@plt>
   11a5c:	add	r0, sl, r6
   11a60:	str	r0, [sp, #16]
   11a64:	mov	r0, r4
   11a68:	ldr	r1, [pc, #1084]	; 11eac <getc@plt+0x1330>
   11a6c:	add	r1, pc, r1
   11a70:	bl	10b1c <fprintf@plt>
   11a74:	ldr	r0, [pc, #1076]	; 11eb0 <getc@plt+0x1334>
   11a78:	mov	r1, #37	; 0x25
   11a7c:	mov	r2, #1
   11a80:	mov	r3, r4
   11a84:	add	r0, pc, r0
   11a88:	bl	10a98 <fwrite@plt>
   11a8c:	ldr	r2, [sl, #20]
   11a90:	ldr	r3, [sl, #24]
   11a94:	ldr	r0, [sl, #28]
   11a98:	ldr	r1, [sl, #32]
   11a9c:	ldr	r7, [pc, #1040]	; 11eb4 <getc@plt+0x1338>
   11aa0:	add	r7, pc, r7
   11aa4:	stm	sp, {r0, r1, r7}
   11aa8:	mov	r0, r4
   11aac:	ldr	r6, [pc, #1028]	; 11eb8 <getc@plt+0x133c>
   11ab0:	add	r6, pc, r6
   11ab4:	mov	r1, r6
   11ab8:	bl	10b1c <fprintf@plt>
   11abc:	ldr	r2, [sl, #36]	; 0x24
   11ac0:	ldr	r3, [sl, #40]	; 0x28
   11ac4:	ldr	r0, [sl, #44]	; 0x2c
   11ac8:	ldr	r1, [sl, #48]	; 0x30
   11acc:	ldr	r7, [pc, #1000]	; 11ebc <getc@plt+0x1340>
   11ad0:	add	r7, pc, r7
   11ad4:	stm	sp, {r0, r1, r7}
   11ad8:	mov	r0, r4
   11adc:	mov	r1, r6
   11ae0:	bl	10b1c <fprintf@plt>
   11ae4:	ldr	r2, [sl, #52]	; 0x34
   11ae8:	ldr	r3, [sl, #56]	; 0x38
   11aec:	ldr	r0, [sl, #60]	; 0x3c
   11af0:	ldr	r1, [sl, #64]	; 0x40
   11af4:	ldr	r7, [pc, #964]	; 11ec0 <getc@plt+0x1344>
   11af8:	add	r7, pc, r7
   11afc:	stm	sp, {r0, r1, r7}
   11b00:	mov	r0, r4
   11b04:	mov	r1, r6
   11b08:	bl	10b1c <fprintf@plt>
   11b0c:	ldr	r1, [pc, #944]	; 11ec4 <getc@plt+0x1348>
   11b10:	mov	r0, r4
   11b14:	add	r1, pc, r1
   11b18:	bl	10b1c <fprintf@plt>
   11b1c:	ldr	r7, [pc, #932]	; 11ec8 <getc@plt+0x134c>
   11b20:	vldr	d8, [pc, #816]	; 11e58 <getc@plt+0x12dc>
   11b24:	mov	r6, #0
   11b28:	add	r7, pc, r7
   11b2c:	b	11b70 <getc@plt+0xff4>
   11b30:	mov	r5, r7
   11b34:	add	r7, sp, #23
   11b38:	mov	r0, #0
   11b3c:	mov	r1, #0
   11b40:	mov	r3, #1
   11b44:	mov	r2, r7
   11b48:	bl	131b0 <error@@Base+0x628>
   11b4c:	ldr	r1, [pc, #900]	; 11ed8 <getc@plt+0x135c>
   11b50:	mov	r2, r7
   11b54:	mov	r0, r4
   11b58:	mov	r7, r5
   11b5c:	add	r1, pc, r1
   11b60:	bl	10b1c <fprintf@plt>
   11b64:	add	r6, r6, #1
   11b68:	cmp	r6, #256	; 0x100
   11b6c:	beq	11c20 <getc@plt+0x10a4>
   11b70:	add	r9, sl, r6, lsl #3
   11b74:	ldr	r0, [r9, #68]	; 0x44
   11b78:	cmp	r0, #1
   11b7c:	blt	11b64 <getc@plt+0xfe8>
   11b80:	mov	r0, r6
   11b84:	bl	1250c <getc@plt+0x1990>
   11b88:	ldr	r2, [r9, #68]	; 0x44
   11b8c:	ldr	r3, [r9, #72]	; 0x48
   11b90:	mov	r8, r0
   11b94:	mov	r0, r4
   11b98:	mov	r1, r7
   11b9c:	bl	10b1c <fprintf@plt>
   11ba0:	ldr	r0, [r9, #68]	; 0x44
   11ba4:	cmp	r0, #0
   11ba8:	beq	11bec <getc@plt+0x1070>
   11bac:	ldr	r1, [r9, #72]	; 0x48
   11bb0:	vmov	s2, r0
   11bb4:	sub	r1, r0, r1
   11bb8:	mov	r0, r4
   11bbc:	vmov	s0, r1
   11bc0:	vcvt.f64.s32	d16, s0
   11bc4:	vcvt.f64.s32	d17, s2
   11bc8:	ldr	r1, [pc, #768]	; 11ed0 <getc@plt+0x1354>
   11bcc:	add	r1, pc, r1
   11bd0:	vmul.f64	d16, d16, d8
   11bd4:	vdiv.f64	d16, d16, d17
   11bd8:	vmov	r2, r3, d16
   11bdc:	bl	10b1c <fprintf@plt>
   11be0:	cmp	r8, #0
   11be4:	bne	11c0c <getc@plt+0x1090>
   11be8:	b	11b30 <getc@plt+0xfb4>
   11bec:	ldr	r0, [pc, #728]	; 11ecc <getc@plt+0x1350>
   11bf0:	mov	r1, #8
   11bf4:	mov	r2, #1
   11bf8:	mov	r3, r4
   11bfc:	add	r0, pc, r0
   11c00:	bl	10a98 <fwrite@plt>
   11c04:	cmp	r8, #0
   11c08:	beq	11b30 <getc@plt+0xfb4>
   11c0c:	ldr	r1, [pc, #704]	; 11ed4 <getc@plt+0x1358>
   11c10:	mov	r0, r4
   11c14:	mov	r2, r8
   11c18:	add	r1, pc, r1
   11c1c:	b	11b60 <getc@plt+0xfe4>
   11c20:	ldr	r2, [sl, #2116]	; 0x844
   11c24:	ldr	r3, [sl, #2120]	; 0x848
   11c28:	ldr	r1, [pc, #684]	; 11edc <getc@plt+0x1360>
   11c2c:	mov	r0, r4
   11c30:	add	r1, pc, r1
   11c34:	bl	10b1c <fprintf@plt>
   11c38:	ldr	r0, [sl, #2116]	; 0x844
   11c3c:	cmp	r0, #0
   11c40:	beq	11c88 <getc@plt+0x110c>
   11c44:	ldr	r1, [sl, #2120]	; 0x848
   11c48:	vmov	s2, r0
   11c4c:	sub	r1, r0, r1
   11c50:	mov	r0, r4
   11c54:	vmov	s0, r1
   11c58:	vcvt.f64.s32	d16, s0
   11c5c:	vcvt.f64.s32	d17, s2
   11c60:	ldr	r1, [pc, #636]	; 11ee4 <getc@plt+0x1368>
   11c64:	add	r1, pc, r1
   11c68:	vmul.f64	d16, d16, d8
   11c6c:	vdiv.f64	d16, d16, d17
   11c70:	vmov	r2, r3, d16
   11c74:	bl	10b1c <fprintf@plt>
   11c78:	b	11ca0 <getc@plt+0x1124>
   11c7c:	nop	{0}
   11c80:	andeq	r0, r0, r0
   11c84:	subsmi	r0, r9, r0
   11c88:	ldr	r0, [pc, #592]	; 11ee0 <getc@plt+0x1364>
   11c8c:	mov	r1, #8
   11c90:	mov	r2, #1
   11c94:	mov	r3, r4
   11c98:	add	r0, pc, r0
   11c9c:	bl	10a98 <fwrite@plt>
   11ca0:	ldr	r1, [pc, #576]	; 11ee8 <getc@plt+0x136c>
   11ca4:	ldr	r2, [pc, #576]	; 11eec <getc@plt+0x1370>
   11ca8:	mov	r0, r4
   11cac:	add	r1, pc, r1
   11cb0:	add	r2, pc, r2
   11cb4:	bl	10b1c <fprintf@plt>
   11cb8:	ldr	r0, [sl, #4]
   11cbc:	ldr	r5, [sp, #16]
   11cc0:	cmp	r0, #1
   11cc4:	blt	11d48 <getc@plt+0x11cc>
   11cc8:	movw	r0, #2124	; 0x84c
   11ccc:	add	r0, sl, r0
   11cd0:	bl	122ac <getc@plt+0x1730>
   11cd4:	ldr	r1, [r5]
   11cd8:	ldr	r0, [r5, #4]
   11cdc:	ldr	r2, [pc, #524]	; 11ef0 <getc@plt+0x1374>
   11ce0:	add	r2, pc, r2
   11ce4:	bl	11f44 <getc@plt+0x13c8>
   11ce8:	ldr	r0, [pc, #516]	; 11ef4 <getc@plt+0x1378>
   11cec:	mov	r1, #39	; 0x27
   11cf0:	mov	r2, #1
   11cf4:	mov	r3, r4
   11cf8:	add	r0, pc, r0
   11cfc:	bl	10a98 <fwrite@plt>
   11d00:	ldr	r0, [r5, #4]
   11d04:	cmp	r0, #1
   11d08:	blt	11d48 <getc@plt+0x11cc>
   11d0c:	ldr	r6, [pc, #484]	; 11ef8 <getc@plt+0x137c>
   11d10:	mov	r7, #0
   11d14:	add	r6, pc, r6
   11d18:	ldr	r0, [r5]
   11d1c:	ldr	r0, [r0, r7, lsl #2]
   11d20:	add	r3, r0, #8
   11d24:	mov	r0, r4
   11d28:	ldm	r3, {r1, r2, r3}
   11d2c:	str	r1, [sp]
   11d30:	mov	r1, r6
   11d34:	bl	10b1c <fprintf@plt>
   11d38:	ldr	r0, [r5, #4]
   11d3c:	add	r7, r7, #1
   11d40:	cmp	r7, r0
   11d44:	blt	11d18 <getc@plt+0x119c>
   11d48:	ldr	r0, [sl]
   11d4c:	cmp	r0, #1
   11d50:	blt	11e40 <getc@plt+0x12c4>
   11d54:	ldr	r1, [pc, #416]	; 11efc <getc@plt+0x1380>
   11d58:	mov	r0, r4
   11d5c:	add	r1, pc, r1
   11d60:	bl	10b1c <fprintf@plt>
   11d64:	ldr	r6, [pc, #404]	; 11f00 <getc@plt+0x1384>
   11d68:	movw	r9, #65535	; 0xffff
   11d6c:	movw	r0, #10180	; 0x27c4
   11d70:	mov	r5, #0
   11d74:	add	r7, sp, #23
   11d78:	add	r8, sl, r0
   11d7c:	movw	r0, #10184	; 0x27c8
   11d80:	movt	r9, #16
   11d84:	add	sl, sl, r0
   11d88:	add	r6, pc, r6
   11d8c:	b	11df8 <getc@plt+0x127c>
   11d90:	lsl	r1, r5, #1
   11d94:	vmov	s2, r0
   11d98:	ldr	r1, [sl, r1, lsl #2]
   11d9c:	sub	r1, r0, r1
   11da0:	mov	r0, r4
   11da4:	vmov	s0, r1
   11da8:	vcvt.f64.s32	d16, s0
   11dac:	vcvt.f64.s32	d17, s2
   11db0:	ldr	r1, [pc, #340]	; 11f0c <getc@plt+0x1390>
   11db4:	add	r1, pc, r1
   11db8:	vmul.f64	d16, d16, d8
   11dbc:	vdiv.f64	d16, d16, d17
   11dc0:	vmov	r2, r3, d16
   11dc4:	bl	10b1c <fprintf@plt>
   11dc8:	mov	r0, #0
   11dcc:	mov	r1, r5
   11dd0:	mov	r2, r7
   11dd4:	mov	r3, #1
   11dd8:	bl	131b0 <error@@Base+0x628>
   11ddc:	mov	r0, r4
   11de0:	mov	r1, r6
   11de4:	mov	r2, r7
   11de8:	bl	10b1c <fprintf@plt>
   11dec:	add	r5, r5, #1
   11df0:	cmp	r5, r9
   11df4:	beq	11e40 <getc@plt+0x12c4>
   11df8:	ldr	r2, [r8, r5, lsl #3]
   11dfc:	cmp	r2, #1
   11e00:	blt	11dec <getc@plt+0x1270>
   11e04:	ldr	r3, [sl, r5, lsl #3]
   11e08:	ldr	r1, [pc, #244]	; 11f04 <getc@plt+0x1388>
   11e0c:	mov	r0, r4
   11e10:	add	r1, pc, r1
   11e14:	bl	10b1c <fprintf@plt>
   11e18:	ldr	r0, [r8, r5, lsl #3]
   11e1c:	cmp	r0, #0
   11e20:	bne	11d90 <getc@plt+0x1214>
   11e24:	ldr	r0, [pc, #220]	; 11f08 <getc@plt+0x138c>
   11e28:	mov	r1, #8
   11e2c:	mov	r2, #1
   11e30:	mov	r3, r4
   11e34:	add	r0, pc, r0
   11e38:	bl	10a98 <fwrite@plt>
   11e3c:	b	11dc8 <getc@plt+0x124c>
   11e40:	mov	r0, r4
   11e44:	bl	127e8 <getc@plt+0x1c6c>
   11e48:	sub	sp, fp, #40	; 0x28
   11e4c:	vpop	{d8}
   11e50:	add	sp, sp, #4
   11e54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11e58:	andeq	r0, r0, r0
   11e5c:	subsmi	r0, r9, r0
   11e60:	andeq	r2, r0, r0, lsl #6
   11e64:	andeq	r1, r0, r6, lsr #31
   11e68:	andeq	r1, r0, fp, asr pc
   11e6c:	andeq	r2, r0, sl, lsl #16
   11e70:	strheq	r2, [r0], -r5
   11e74:			; <UNDEFINED> instruction: 0x000021b6
   11e78:	andeq	r1, r0, fp, ror #30
   11e7c:	andeq	r2, r0, r7, lsl r0
   11e80:	andeq	r2, r0, r8, asr #32
   11e84:	andeq	r1, r0, r2, lsl #30
   11e88:	andeq	r2, r0, sp
   11e8c:	strdeq	r1, [r0], -r5
   11e90:	andeq	r1, r0, fp, ror #29
   11e94:	andeq	r1, r0, r3, ror #29
   11e98:	andeq	r1, r0, r3, asr pc
   11e9c:	andeq	r1, r0, r4, lsl #31
   11ea0:	andeq	r1, r0, r7, ror lr
   11ea4:	ldrdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   11ea8:	andeq	r1, r0, r0, lsl pc
   11eac:	andeq	r1, r0, r6, lsl lr
   11eb0:	andeq	r1, r0, sp, lsl lr
   11eb4:	andeq	r1, r0, r7, lsr #28
   11eb8:	muleq	r0, r2, lr
   11ebc:	strdeq	r1, [r0], -lr
   11ec0:	ldrdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   11ec4:	andeq	r1, r0, r9, asr #27
   11ec8:	andeq	r1, r0, r8, asr #24
   11ecc:	andeq	r1, r0, r7, lsr sp
   11ed0:	andeq	r1, r0, r0, ror sp
   11ed4:	andeq	r1, r0, sp, lsr sp
   11ed8:	andeq	r1, r0, r0, lsl #28
   11edc:	andeq	r1, r0, r0, asr #22
   11ee0:	muleq	r0, fp, ip
   11ee4:	ldrdeq	r1, [r0], -r8
   11ee8:	andeq	r1, r0, r9, lsr #25
   11eec:	andeq	r1, r0, r7, lsr #24
   11ef0:	andeq	r0, r0, r8, lsr #4
   11ef4:	andeq	r1, r0, r3, lsl #24
   11ef8:	andeq	r1, r0, r1, asr ip
   11efc:	andeq	r1, r0, r1, lsl #23
   11f00:	ldrdeq	r1, [r0], -r4
   11f04:	andeq	r1, r0, r0, ror #18
   11f08:	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   11f0c:	andeq	r1, r0, r8, lsl #23
   11f10:	ldr	r2, [r1, #12]
   11f14:	ldr	r3, [r0, #12]
   11f18:	cmp	r2, r3
   11f1c:	bne	11f3c <getc@plt+0x13c0>
   11f20:	ldr	r2, [r1, #16]
   11f24:	ldr	r3, [r0, #16]
   11f28:	cmp	r2, r3
   11f2c:	bne	11f3c <getc@plt+0x13c0>
   11f30:	ldr	r1, [r1, #8]
   11f34:	ldr	r0, [r0, #8]
   11f38:	b	126dc <getc@plt+0x1b60>
   11f3c:	sub	r0, r2, r3
   11f40:	bx	lr
   11f44:	cmp	r0, #2
   11f48:	bxlt	lr
   11f4c:	ldr	r3, [pc, #28]	; 11f70 <getc@plt+0x13f4>
   11f50:	add	r3, pc, r3
   11f54:	str	r2, [r3]
   11f58:	ldr	r2, [pc, #20]	; 11f74 <getc@plt+0x13f8>
   11f5c:	add	r2, pc, r2
   11f60:	str	r1, [r2]
   11f64:	sub	r1, r0, #1
   11f68:	mov	r0, #0
   11f6c:	b	11f78 <getc@plt+0x13fc>
   11f70:	strdeq	r3, [r1], -r0
   11f74:	andeq	r3, r1, r0, ror #3
   11f78:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11f7c:	add	fp, sp, #24
   11f80:	mov	r8, r1
   11f84:	mov	r5, r0
   11f88:	b	11fb8 <getc@plt+0x143c>
   11f8c:	mov	r7, r4
   11f90:	ldr	r0, [pc, #308]	; 120cc <getc@plt+0x1550>
   11f94:	ldr	r0, [pc, r0]
   11f98:	sub	r1, r4, #1
   11f9c:	str	r6, [r0, r4, lsl #2]
   11fa0:	cmp	r1, r5
   11fa4:	movgt	r0, r5
   11fa8:	blgt	11f78 <getc@plt+0x13fc>
   11fac:	add	r5, r7, #1
   11fb0:	cmp	r5, r8
   11fb4:	bge	120ac <getc@plt+0x1530>
   11fb8:	ldr	r0, [pc, #240]	; 120b0 <getc@plt+0x1534>
   11fbc:	cmp	r5, r8
   11fc0:	mov	r4, r8
   11fc4:	mov	r7, r5
   11fc8:	ldr	r0, [pc, r0]
   11fcc:	ldr	r6, [r0, r5, lsl #2]
   11fd0:	bge	11f98 <getc@plt+0x141c>
   11fd4:	mov	r7, r5
   11fd8:	mov	r4, r8
   11fdc:	cmp	r7, r4
   11fe0:	blt	11ff8 <getc@plt+0x147c>
   11fe4:	b	12028 <getc@plt+0x14ac>
   11fe8:	cmp	r7, r4
   11fec:	bge	11f90 <getc@plt+0x1414>
   11ff0:	cmp	r7, r4
   11ff4:	bge	12028 <getc@plt+0x14ac>
   11ff8:	ldr	r0, [pc, #180]	; 120b4 <getc@plt+0x1538>
   11ffc:	ldr	r0, [pc, r0]
   12000:	ldr	r1, [r0, r4, lsl #2]
   12004:	ldr	r2, [pc, #172]	; 120b8 <getc@plt+0x153c>
   12008:	mov	r0, r6
   1200c:	ldr	r2, [pc, r2]
   12010:	blx	r2
   12014:	cmn	r0, #1
   12018:	bgt	12028 <getc@plt+0x14ac>
   1201c:	sub	r4, r4, #1
   12020:	cmp	r7, r4
   12024:	blt	11ff8 <getc@plt+0x147c>
   12028:	cmp	r7, r4
   1202c:	bne	1203c <getc@plt+0x14c0>
   12030:	cmp	r7, r4
   12034:	blt	12058 <getc@plt+0x14dc>
   12038:	b	1208c <getc@plt+0x1510>
   1203c:	ldr	r0, [pc, #120]	; 120bc <getc@plt+0x1540>
   12040:	ldr	r0, [pc, r0]
   12044:	ldr	r1, [r0, r4, lsl #2]
   12048:	str	r1, [r0, r7, lsl #2]
   1204c:	add	r7, r7, #1
   12050:	cmp	r7, r4
   12054:	bge	1208c <getc@plt+0x1510>
   12058:	ldr	r0, [pc, #96]	; 120c0 <getc@plt+0x1544>
   1205c:	ldr	r0, [pc, r0]
   12060:	ldr	r1, [r0, r7, lsl #2]
   12064:	ldr	r2, [pc, #88]	; 120c4 <getc@plt+0x1548>
   12068:	mov	r0, r6
   1206c:	ldr	r2, [pc, r2]
   12070:	blx	r2
   12074:	cmp	r0, #1
   12078:	blt	1208c <getc@plt+0x1510>
   1207c:	add	r7, r7, #1
   12080:	cmp	r4, r7
   12084:	bne	12058 <getc@plt+0x14dc>
   12088:	b	11f8c <getc@plt+0x1410>
   1208c:	cmp	r7, r4
   12090:	beq	11fe8 <getc@plt+0x146c>
   12094:	ldr	r0, [pc, #44]	; 120c8 <getc@plt+0x154c>
   12098:	ldr	r0, [pc, r0]
   1209c:	ldr	r1, [r0, r7, lsl #2]
   120a0:	str	r1, [r0, r4, lsl #2]
   120a4:	sub	r4, r4, #1
   120a8:	b	11fe8 <getc@plt+0x146c>
   120ac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   120b0:	andeq	r3, r1, r4, ror r1
   120b4:	andeq	r3, r1, r0, asr #2
   120b8:	andeq	r3, r1, r4, lsr r1
   120bc:	strdeq	r3, [r1], -ip
   120c0:	andeq	r3, r1, r0, ror #1
   120c4:	ldrdeq	r3, [r1], -r4
   120c8:	andeq	r3, r1, r4, lsr #1
   120cc:	andeq	r3, r1, r8, lsr #3
   120d0:	push	{r4, r5, r6, sl, fp, lr}
   120d4:	add	fp, sp, #16
   120d8:	mov	r4, r0
   120dc:	movw	r0, #8048	; 0x1f70
   120e0:	movw	r6, #503	; 0x1f7
   120e4:	add	r5, r4, r0
   120e8:	mov	r0, r4
   120ec:	bl	13450 <error@@Base+0x8c8>
   120f0:	subs	r6, r6, #1
   120f4:	add	r4, r4, #16
   120f8:	bne	120e8 <getc@plt+0x156c>
   120fc:	mov	r0, #0
   12100:	str	r0, [r5]
   12104:	str	r0, [r5, #4]
   12108:	pop	{r4, r5, r6, sl, fp, pc}
   1210c:	push	{r4, r5, r6, sl, fp, lr}
   12110:	add	fp, sp, #16
   12114:	mov	r5, r1
   12118:	ldrb	r1, [r1]
   1211c:	mov	r4, #0
   12120:	mov	r2, #0
   12124:	cmp	r1, #0
   12128:	beq	1215c <getc@plt+0x15e0>
   1212c:	add	r3, r5, #1
   12130:	mov	r2, #0
   12134:	uxtab	r2, r2, r1
   12138:	ldrb	r1, [r3], #1
   1213c:	cmp	r1, #0
   12140:	bne	12134 <getc@plt+0x15b8>
   12144:	movw	r1, #20065	; 0x4e61
   12148:	movt	r1, #33354	; 0x824a
   1214c:	umull	r1, r3, r2, r1
   12150:	lsr	r1, r3, #8
   12154:	movw	r3, #503	; 0x1f7
   12158:	mls	r2, r1, r3, r2
   1215c:	ldr	r6, [r0, r2, lsl #4]
   12160:	cmp	r6, #0
   12164:	beq	12188 <getc@plt+0x160c>
   12168:	ldr	r1, [r6, #8]
   1216c:	mov	r0, r5
   12170:	bl	10a14 <strcmp@plt>
   12174:	cmp	r0, #0
   12178:	beq	12190 <getc@plt+0x1614>
   1217c:	ldr	r6, [r6, #4]
   12180:	cmp	r6, #0
   12184:	bne	12168 <getc@plt+0x15ec>
   12188:	mov	r0, r4
   1218c:	pop	{r4, r5, r6, sl, fp, pc}
   12190:	mov	r4, r6
   12194:	mov	r0, r4
   12198:	pop	{r4, r5, r6, sl, fp, pc}
   1219c:	push	{r4, r5, fp, lr}
   121a0:	add	fp, sp, #8
   121a4:	movw	r2, #8048	; 0x1f70
   121a8:	add	r5, r0, r2
   121ac:	ldr	r2, [r1, #8]
   121b0:	ldrb	r3, [r2]
   121b4:	cmp	r3, #0
   121b8:	beq	121f0 <getc@plt+0x1674>
   121bc:	add	r4, r2, #1
   121c0:	mov	r2, #0
   121c4:	uxtab	r2, r2, r3
   121c8:	ldrb	r3, [r4], #1
   121cc:	cmp	r3, #0
   121d0:	bne	121c4 <getc@plt+0x1648>
   121d4:	movw	r3, #20065	; 0x4e61
   121d8:	movt	r3, #33354	; 0x824a
   121dc:	umull	r3, r4, r2, r3
   121e0:	lsr	r3, r4, #8
   121e4:	movw	r4, #503	; 0x1f7
   121e8:	mls	r2, r3, r4, r2
   121ec:	b	121f4 <getc@plt+0x1678>
   121f0:	mov	r2, #0
   121f4:	add	r0, r0, r2, lsl #4
   121f8:	bl	1345c <error@@Base+0x8d4>
   121fc:	ldr	r0, [r5]
   12200:	cmp	r0, #0
   12204:	beq	12214 <getc@plt+0x1698>
   12208:	bl	10a2c <free@plt>
   1220c:	mov	r0, #0
   12210:	str	r0, [r5]
   12214:	ldr	r0, [r5, #4]
   12218:	add	r0, r0, #1
   1221c:	str	r0, [r5, #4]
   12220:	pop	{r4, r5, fp, pc}
   12224:	push	{r4, r5, fp, lr}
   12228:	add	fp, sp, #8
   1222c:	movw	r2, #8048	; 0x1f70
   12230:	add	r5, r0, r2
   12234:	ldr	r2, [r1, #8]
   12238:	ldrb	r3, [r2]
   1223c:	cmp	r3, #0
   12240:	beq	12278 <getc@plt+0x16fc>
   12244:	add	r4, r2, #1
   12248:	mov	r2, #0
   1224c:	uxtab	r2, r2, r3
   12250:	ldrb	r3, [r4], #1
   12254:	cmp	r3, #0
   12258:	bne	1224c <getc@plt+0x16d0>
   1225c:	movw	r3, #20065	; 0x4e61
   12260:	movt	r3, #33354	; 0x824a
   12264:	umull	r3, r4, r2, r3
   12268:	lsr	r3, r4, #8
   1226c:	movw	r4, #503	; 0x1f7
   12270:	mls	r2, r3, r4, r2
   12274:	b	1227c <getc@plt+0x1700>
   12278:	mov	r2, #0
   1227c:	add	r0, r0, r2, lsl #4
   12280:	bl	135a4 <error@@Base+0xa1c>
   12284:	ldr	r0, [r5]
   12288:	cmp	r0, #0
   1228c:	beq	1229c <getc@plt+0x1720>
   12290:	bl	10a2c <free@plt>
   12294:	mov	r0, #0
   12298:	str	r0, [r5]
   1229c:	ldr	r0, [r5, #4]
   122a0:	sub	r0, r0, #1
   122a4:	str	r0, [r5, #4]
   122a8:	pop	{r4, r5, fp, pc}
   122ac:	push	{r4, r5, fp, lr}
   122b0:	add	fp, sp, #8
   122b4:	mov	r4, r0
   122b8:	movw	r0, #8048	; 0x1f70
   122bc:	mov	r5, r4
   122c0:	ldr	r0, [r5, r0]!
   122c4:	cmp	r0, #0
   122c8:	bne	12328 <getc@plt+0x17ac>
   122cc:	ldr	r0, [r5, #4]
   122d0:	cmp	r0, #0
   122d4:	popeq	{r4, r5, fp, pc}
   122d8:	mov	r1, #4
   122dc:	bl	126b8 <getc@plt+0x1b3c>
   122e0:	str	r0, [r5]
   122e4:	mov	r0, #0
   122e8:	movw	ip, #503	; 0x1f7
   122ec:	mov	r2, #0
   122f0:	b	12300 <getc@plt+0x1784>
   122f4:	add	r2, r2, #1
   122f8:	cmp	r2, ip
   122fc:	beq	12328 <getc@plt+0x17ac>
   12300:	ldr	r3, [r4, r2, lsl #4]
   12304:	cmp	r3, #0
   12308:	beq	122f4 <getc@plt+0x1778>
   1230c:	ldr	r1, [r5]
   12310:	str	r3, [r1, r0, lsl #2]
   12314:	add	r0, r0, #1
   12318:	ldr	r3, [r3, #4]
   1231c:	cmp	r3, #0
   12320:	bne	1230c <getc@plt+0x1790>
   12324:	b	122f4 <getc@plt+0x1778>
   12328:	pop	{r4, r5, fp, pc}
   1232c:	push	{r4, r5, r6, r7, fp, lr}
   12330:	add	fp, sp, #16
   12334:	mov	r5, r0
   12338:	movw	r0, #8048	; 0x1f70
   1233c:	mov	r4, r1
   12340:	movw	r7, #503	; 0x1f7
   12344:	add	r6, r5, r0
   12348:	mov	r0, r5
   1234c:	mov	r1, r4
   12350:	bl	13678 <error@@Base+0xaf0>
   12354:	subs	r7, r7, #1
   12358:	add	r5, r5, #16
   1235c:	bne	12348 <getc@plt+0x17cc>
   12360:	ldr	r0, [r6]
   12364:	cmp	r0, #0
   12368:	beq	12378 <getc@plt+0x17fc>
   1236c:	bl	10a2c <free@plt>
   12370:	mov	r0, #0
   12374:	str	r0, [r6]
   12378:	mov	r0, #0
   1237c:	str	r0, [r6, #4]
   12380:	pop	{r4, r5, r6, r7, fp, pc}
   12384:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12388:	add	fp, sp, #28
   1238c:	push	{r0}		; (str r0, [sp, #-4]!)
   12390:	ldr	r0, [pc, #336]	; 124e8 <getc@plt+0x196c>
   12394:	add	r0, pc, r0
   12398:	ldrh	r0, [r0]
   1239c:	ldr	r7, [pc, #328]	; 124ec <getc@plt+0x1970>
   123a0:	cmp	r0, #0
   123a4:	add	r7, pc, r7
   123a8:	bne	124cc <getc@plt+0x1950>
   123ac:	ldr	r3, [pc, #316]	; 124f0 <getc@plt+0x1974>
   123b0:	mov	r6, #0
   123b4:	mov	r8, #0
   123b8:	mov	r4, #0
   123bc:	add	r3, pc, r3
   123c0:	b	123d4 <getc@plt+0x1858>
   123c4:	add	r4, r4, #1
   123c8:	mov	r8, r0
   123cc:	cmp	r4, #91	; 0x5b
   123d0:	beq	124cc <getc@plt+0x1950>
   123d4:	sxth	sl, r8
   123d8:	cmp	sl, #1
   123dc:	blt	12450 <getc@plt+0x18d4>
   123e0:	add	r0, r4, r4, lsl #1
   123e4:	ldr	r1, [pc, #264]	; 124f4 <getc@plt+0x1978>
   123e8:	add	r0, r3, r0, lsl #2
   123ec:	ldr	r5, [r0, #8]
   123f0:	ldr	r1, [pc, r1]
   123f4:	mov	r0, r5
   123f8:	bl	10a14 <strcmp@plt>
   123fc:	cmp	r0, #0
   12400:	mov	r0, r6
   12404:	mov	r9, #0
   12408:	beq	12458 <getc@plt+0x18dc>
   1240c:	mov	r8, r6
   12410:	sxth	sl, r6
   12414:	ldr	r6, [pc, #220]	; 124f8 <getc@plt+0x197c>
   12418:	mov	r1, #1
   1241c:	add	r6, pc, r6
   12420:	mov	r9, r1
   12424:	cmp	r1, sl
   12428:	bge	12444 <getc@plt+0x18c8>
   1242c:	ldr	r1, [r6, r9, lsl #2]
   12430:	mov	r0, r5
   12434:	bl	10a14 <strcmp@plt>
   12438:	add	r1, r9, #1
   1243c:	cmp	r0, #0
   12440:	bne	12420 <getc@plt+0x18a4>
   12444:	mov	r6, r8
   12448:	mov	r0, r8
   1244c:	b	12458 <getc@plt+0x18dc>
   12450:	mov	r0, r8
   12454:	mov	r9, #0
   12458:	ldr	r3, [pc, #156]	; 124fc <getc@plt+0x1980>
   1245c:	cmp	r9, sl
   12460:	add	r3, pc, r3
   12464:	bne	124a0 <getc@plt+0x1924>
   12468:	uxth	r0, r8
   1246c:	cmp	r0, #256	; 0x100
   12470:	beq	124dc <getc@plt+0x1960>
   12474:	ldr	r0, [pc, #132]	; 12500 <getc@plt+0x1984>
   12478:	add	r6, r8, #1
   1247c:	add	r0, pc, r0
   12480:	strh	r6, [r0]
   12484:	add	r0, r4, r4, lsl #1
   12488:	ldr	r1, [pc, #116]	; 12504 <getc@plt+0x1988>
   1248c:	add	r0, r3, r0, lsl #2
   12490:	ldr	r0, [r0, #8]
   12494:	add	r1, pc, r1
   12498:	str	r0, [r1, r9, lsl #2]
   1249c:	mov	r0, r6
   124a0:	add	r1, r4, r4, lsl #1
   124a4:	mov	r2, r3
   124a8:	ldr	r1, [r2, r1, lsl #2]!
   124ac:	ldr	r2, [r2, #4]
   124b0:	cmp	r1, r2
   124b4:	bhi	123c4 <getc@plt+0x1848>
   124b8:	strb	r9, [r7, r1]
   124bc:	add	r1, r1, #1
   124c0:	cmp	r1, r2
   124c4:	bls	124b8 <getc@plt+0x193c>
   124c8:	b	123c4 <getc@plt+0x1848>
   124cc:	ldr	r0, [sp]
   124d0:	ldrb	r0, [r7, r0]
   124d4:	sub	sp, fp, #28
   124d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   124dc:	ldr	r0, [pc, #36]	; 12508 <getc@plt+0x198c>
   124e0:	add	r0, pc, r0
   124e4:	bl	12b88 <error@@Base>
   124e8:			; <UNDEFINED> instruction: 0x00012db0
   124ec:	andeq	r2, r1, r2, lsr #27
   124f0:	strdeq	r2, [r1], -r8
   124f4:	andseq	r2, r2, r8, asr sp
   124f8:	andseq	r2, r2, ip, lsr #26
   124fc:	andeq	r2, r1, r4, asr r6
   12500:	andeq	r2, r1, r8, asr #25
   12504:			; <UNDEFINED> instruction: 0x00122cb4
   12508:	andeq	r1, r0, ip, lsr #9
   1250c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12510:	add	fp, sp, #28
   12514:	push	{r0}		; (str r0, [sp, #-4]!)
   12518:	ldr	r0, [pc, #364]	; 1268c <getc@plt+0x1b10>
   1251c:	add	r0, pc, r0
   12520:	ldrh	r6, [r0]
   12524:	cmp	r6, #0
   12528:	bne	12650 <getc@plt+0x1ad4>
   1252c:	ldr	r3, [pc, #348]	; 12690 <getc@plt+0x1b14>
   12530:	ldr	r7, [pc, #348]	; 12694 <getc@plt+0x1b18>
   12534:	mov	r6, #0
   12538:	mov	r4, #0
   1253c:	mov	r8, #0
   12540:	add	r3, pc, r3
   12544:	add	r7, pc, r7
   12548:	b	1255c <getc@plt+0x19e0>
   1254c:	add	r8, r8, #1
   12550:	mov	r4, r0
   12554:	cmp	r8, #91	; 0x5b
   12558:	beq	12650 <getc@plt+0x1ad4>
   1255c:	sxth	sl, r4
   12560:	cmp	sl, #1
   12564:	blt	125d4 <getc@plt+0x1a58>
   12568:	add	r0, r8, r8, lsl #1
   1256c:	ldr	r1, [pc, #292]	; 12698 <getc@plt+0x1b1c>
   12570:	add	r0, r3, r0, lsl #2
   12574:	ldr	r5, [r0, #8]
   12578:	ldr	r1, [pc, r1]
   1257c:	mov	r0, r5
   12580:	bl	10a14 <strcmp@plt>
   12584:	cmp	r0, #0
   12588:	mov	r0, r6
   1258c:	mov	r9, #0
   12590:	beq	125dc <getc@plt+0x1a60>
   12594:	ldr	r4, [pc, #256]	; 1269c <getc@plt+0x1b20>
   12598:	sxth	sl, r6
   1259c:	mov	r1, #1
   125a0:	add	r4, pc, r4
   125a4:	mov	r9, r1
   125a8:	cmp	r1, sl
   125ac:	bge	125c8 <getc@plt+0x1a4c>
   125b0:	ldr	r1, [r4, r9, lsl #2]
   125b4:	mov	r0, r5
   125b8:	bl	10a14 <strcmp@plt>
   125bc:	add	r1, r9, #1
   125c0:	cmp	r0, #0
   125c4:	bne	125a4 <getc@plt+0x1a28>
   125c8:	mov	r0, r6
   125cc:	mov	r4, r6
   125d0:	b	125dc <getc@plt+0x1a60>
   125d4:	mov	r0, r4
   125d8:	mov	r9, #0
   125dc:	ldr	r3, [pc, #188]	; 126a0 <getc@plt+0x1b24>
   125e0:	cmp	r9, sl
   125e4:	add	r3, pc, r3
   125e8:	bne	12624 <getc@plt+0x1aa8>
   125ec:	uxth	r0, r4
   125f0:	cmp	r0, #256	; 0x100
   125f4:	beq	12680 <getc@plt+0x1b04>
   125f8:	ldr	r0, [pc, #164]	; 126a4 <getc@plt+0x1b28>
   125fc:	add	r6, r4, #1
   12600:	add	r0, pc, r0
   12604:	strh	r6, [r0]
   12608:	add	r0, r8, r8, lsl #1
   1260c:	ldr	r1, [pc, #148]	; 126a8 <getc@plt+0x1b2c>
   12610:	add	r0, r3, r0, lsl #2
   12614:	ldr	r0, [r0, #8]
   12618:	add	r1, pc, r1
   1261c:	str	r0, [r1, r9, lsl #2]
   12620:	mov	r0, r6
   12624:	add	r1, r8, r8, lsl #1
   12628:	mov	r2, r3
   1262c:	ldr	r1, [r2, r1, lsl #2]!
   12630:	ldr	r2, [r2, #4]
   12634:	cmp	r1, r2
   12638:	bhi	1254c <getc@plt+0x19d0>
   1263c:	strb	r9, [r7, r1]
   12640:	add	r1, r1, #1
   12644:	cmp	r1, r2
   12648:	bls	1263c <getc@plt+0x1ac0>
   1264c:	b	1254c <getc@plt+0x19d0>
   12650:	ldr	r0, [sp]
   12654:	sxth	r1, r6
   12658:	uxtb	r0, r0
   1265c:	cmp	r0, r1
   12660:	ldrlt	r1, [pc, #68]	; 126ac <getc@plt+0x1b30>
   12664:	addlt	r1, pc, r1
   12668:	ldrlt	r0, [r1, r0, lsl #2]
   1266c:	sublt	sp, fp, #28
   12670:	poplt	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12674:	ldr	r0, [pc, #56]	; 126b4 <getc@plt+0x1b38>
   12678:	add	r0, pc, r0
   1267c:	bl	12b88 <error@@Base>
   12680:	ldr	r0, [pc, #40]	; 126b0 <getc@plt+0x1b34>
   12684:	add	r0, pc, r0
   12688:	bl	12b88 <error@@Base>
   1268c:	andeq	r2, r1, r8, lsr #24
   12690:	andeq	r2, r1, r4, ror r5
   12694:	andeq	r2, r1, r2, lsl #24
   12698:			; <UNDEFINED> instruction: 0x00122bd0
   1269c:	andseq	r2, r2, r8, lsr #23
   126a0:	ldrdeq	r2, [r1], -r0
   126a4:	andeq	r2, r1, r4, asr #22
   126a8:	andseq	r2, r2, r0, lsr fp
   126ac:	andseq	r2, r2, r4, ror #21
   126b0:	andeq	r1, r0, r8, lsl #6
   126b4:	strdeq	r1, [r0], -ip
   126b8:	push	{fp, lr}
   126bc:	mov	fp, sp
   126c0:	bl	10a08 <calloc@plt>
   126c4:	cmp	r0, #0
   126c8:	popne	{fp, pc}
   126cc:	ldr	r0, [pc, #4]	; 126d8 <getc@plt+0x1b5c>
   126d0:	add	r0, pc, r0
   126d4:	bl	12b88 <error@@Base>
   126d8:	andeq	r1, r0, sl, lsl #17
   126dc:	push	{r4, r5, r6, sl, fp, lr}
   126e0:	add	fp, sp, #16
   126e4:	ldrb	r3, [r0]
   126e8:	ldrb	ip, [r1]
   126ec:	mov	r2, r0
   126f0:	mov	r0, #0
   126f4:	cmp	r3, #0
   126f8:	beq	12738 <getc@plt+0x1bbc>
   126fc:	add	r6, r2, #1
   12700:	add	lr, r1, #1
   12704:	mov	r2, #0
   12708:	uxtb	r4, ip
   1270c:	uxtb	r5, r3
   12710:	cmp	r5, r4
   12714:	bne	12748 <getc@plt+0x1bcc>
   12718:	ldrb	r3, [r6, r2]
   1271c:	ldrb	ip, [lr, r2]
   12720:	add	r2, r2, #1
   12724:	cmp	r3, #0
   12728:	bne	12708 <getc@plt+0x1b8c>
   1272c:	cmp	ip, #0
   12730:	bne	12744 <getc@plt+0x1bc8>
   12734:	pop	{r4, r5, r6, sl, fp, pc}
   12738:	mov	r2, #0
   1273c:	cmp	ip, #0
   12740:	beq	12734 <getc@plt+0x1bb8>
   12744:	mov	r3, #0
   12748:	ldrb	r1, [r1, r2]
   1274c:	uxtb	r2, r3
   12750:	mov	r0, #1
   12754:	cmp	r2, r1
   12758:	mvncc	r0, #0
   1275c:	pop	{r4, r5, r6, sl, fp, pc}
   12760:	push	{r4, r5, fp, lr}
   12764:	add	fp, sp, #8
   12768:	mov	r5, r1
   1276c:	cmp	r0, #0
   12770:	beq	127a4 <getc@plt+0x1c28>
   12774:	mov	r1, r5
   12778:	mov	r4, r0
   1277c:	bl	10a20 <fopen@plt>
   12780:	cmp	r0, #0
   12784:	popne	{r4, r5, fp, pc}
   12788:	ldrb	r0, [r5]
   1278c:	cmp	r0, #119	; 0x77
   12790:	bne	127c8 <getc@plt+0x1c4c>
   12794:	ldr	r0, [pc, #72]	; 127e4 <getc@plt+0x1c68>
   12798:	mov	r1, r4
   1279c:	add	r0, pc, r0
   127a0:	bl	12bd8 <error@@Base+0x50>
   127a4:	ldrb	r0, [r5]
   127a8:	ldr	r1, [pc, #40]	; 127d8 <getc@plt+0x1c5c>
   127ac:	ldr	r1, [pc, r1]
   127b0:	ldr	r2, [pc, #36]	; 127dc <getc@plt+0x1c60>
   127b4:	cmp	r0, #114	; 0x72
   127b8:	ldr	r2, [pc, r2]
   127bc:	moveq	r2, r1
   127c0:	ldr	r0, [r2]
   127c4:	pop	{r4, r5, fp, pc}
   127c8:	ldr	r0, [pc, #16]	; 127e0 <getc@plt+0x1c64>
   127cc:	mov	r1, r4
   127d0:	add	r0, pc, r0
   127d4:	bl	12bd8 <error@@Base+0x50>
   127d8:	andeq	r2, r1, r0, lsl #18
   127dc:	strdeq	r2, [r1], -r8
   127e0:			; <UNDEFINED> instruction: 0x000017ba
   127e4:	ldrdeq	r1, [r0], -r8
   127e8:	ldr	r1, [pc, #40]	; 12818 <getc@plt+0x1c9c>
   127ec:	ldr	r1, [pc, r1]
   127f0:	ldr	r1, [r1]
   127f4:	cmp	r1, r0
   127f8:	bxeq	lr
   127fc:	ldr	r1, [pc, #24]	; 1281c <getc@plt+0x1ca0>
   12800:	ldr	r1, [pc, r1]
   12804:	ldr	r1, [r1]
   12808:	cmp	r1, r0
   1280c:	beq	12814 <getc@plt+0x1c98>
   12810:	b	10b34 <fclose@plt>
   12814:	bx	lr
   12818:	andeq	r2, r1, r0, asr #17
   1281c:			; <UNDEFINED> instruction: 0x000128b0
   12820:	push	{fp, lr}
   12824:	mov	fp, sp
   12828:	sub	sp, sp, #88	; 0x58
   1282c:	mov	r1, r0
   12830:	mov	r2, sp
   12834:	mov	r0, #3
   12838:	bl	10a8c <__xstat@plt>
   1283c:	clz	r0, r0
   12840:	lsr	r0, r0, #5
   12844:	mov	sp, fp
   12848:	pop	{fp, pc}
   1284c:	push	{r4, r5, fp, lr}
   12850:	add	fp, sp, #8
   12854:	sub	sp, sp, #104	; 0x68
   12858:	ldr	r0, [pc, #92]	; 128bc <getc@plt+0x1d40>
   1285c:	add	r0, pc, r0
   12860:	ldrh	r1, [r0]
   12864:	add	r5, r1, #1
   12868:	strh	r5, [r0]
   1286c:	ldr	r0, [pc, #76]	; 128c0 <getc@plt+0x1d44>
   12870:	ldr	r0, [pc, r0]
   12874:	ldr	r4, [r0]
   12878:	bl	10ae0 <getpid@plt>
   1287c:	mov	r3, r0
   12880:	sxth	r0, r5
   12884:	add	r5, sp, #4
   12888:	mov	r2, r4
   1288c:	str	r0, [sp]
   12890:	mov	r0, r5
   12894:	ldr	r1, [pc, #40]	; 128c4 <getc@plt+0x1d48>
   12898:	add	r1, pc, r1
   1289c:	bl	10b40 <sprintf@plt>
   128a0:	mov	r0, r5
   128a4:	bl	10a5c <strdup@plt>
   128a8:	mov	r4, r0
   128ac:	bl	10a74 <unlink@plt>
   128b0:	mov	r0, r4
   128b4:	sub	sp, fp, #8
   128b8:	pop	{r4, r5, fp, pc}
   128bc:	andseq	r2, r2, ip, ror #25
   128c0:	andeq	r2, r1, r0, lsr r8
   128c4:	andeq	r1, r0, fp, lsl r7
   128c8:	push	{r4, sl, fp, lr}
   128cc:	add	fp, sp, #8
   128d0:	mov	r4, r0
   128d4:	bl	10b10 <strlen@plt>
   128d8:	sub	r0, r0, #1
   128dc:	sxth	r0, r0
   128e0:	cmp	r0, #0
   128e4:	bmi	128f4 <getc@plt+0x1d78>
   128e8:	ldrb	r1, [r4, r0]
   128ec:	cmp	r1, #47	; 0x2f
   128f0:	bne	128d8 <getc@plt+0x1d5c>
   128f4:	add	r0, r0, r4
   128f8:	add	r0, r0, #1
   128fc:	pop	{r4, sl, fp, pc}
   12900:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12904:	add	fp, sp, #28
   12908:	sub	sp, sp, #12
   1290c:	stmib	sp, {r0, r1}
   12910:	mov	r6, r3
   12914:	str	r2, [sp]
   12918:	ldr	r4, [r1]
   1291c:	mov	r0, r4
   12920:	bl	10b10 <strlen@plt>
   12924:	sub	r0, r0, #1
   12928:	sxth	r0, r0
   1292c:	cmp	r0, #0
   12930:	bmi	12940 <getc@plt+0x1dc4>
   12934:	ldrb	r1, [r4, r0]
   12938:	cmp	r1, #47	; 0x2f
   1293c:	bne	12924 <getc@plt+0x1da8>
   12940:	ldr	r1, [pc, #484]	; 12b2c <getc@plt+0x1fb0>
   12944:	add	r0, r0, r4
   12948:	add	r0, r0, #1
   1294c:	ldr	r1, [pc, r1]
   12950:	str	r0, [r1]
   12954:	mov	r0, #2
   12958:	ldr	r4, [pc, #464]	; 12b30 <getc@plt+0x1fb4>
   1295c:	add	r4, pc, r4
   12960:	mov	r1, r4
   12964:	bl	10ac8 <__sysv_signal@plt>
   12968:	mov	r0, #15
   1296c:	mov	r1, r4
   12970:	bl	10ac8 <__sysv_signal@plt>
   12974:	ldr	r0, [sp, #4]
   12978:	ldr	r5, [r0]
   1297c:	cmp	r5, #1
   12980:	bne	12998 <getc@plt+0x1e1c>
   12984:	ldr	r0, [pc, #424]	; 12b34 <getc@plt+0x1fb8>
   12988:	ldr	r0, [pc, r0]
   1298c:	ldrb	r0, [r0]
   12990:	cmp	r0, #0
   12994:	bne	12b14 <getc@plt+0x1f98>
   12998:	ldr	ip, [sp, #8]
   1299c:	mov	r8, #0
   129a0:	cmp	r5, #2
   129a4:	blt	12af0 <getc@plt+0x1f74>
   129a8:	mov	r8, #0
   129ac:	mov	r7, #1
   129b0:	mov	r9, #1
   129b4:	ldr	r4, [ip, r7, lsl #2]
   129b8:	ldrb	r0, [r4]
   129bc:	cmp	r0, #45	; 0x2d
   129c0:	bne	12a98 <getc@plt+0x1f1c>
   129c4:	ldrb	sl, [r4, #1]
   129c8:	cmp	sl, #0
   129cc:	beq	12a98 <getc@plt+0x1f1c>
   129d0:	mov	r0, r4
   129d4:	bl	10b10 <strlen@plt>
   129d8:	mov	r2, r0
   129dc:	ldr	r0, [pc, #340]	; 12b38 <getc@plt+0x1fbc>
   129e0:	mov	r1, r4
   129e4:	add	r0, pc, r0
   129e8:	bl	10b64 <strncmp@plt>
   129ec:	cmp	r0, #0
   129f0:	beq	12b14 <getc@plt+0x1f98>
   129f4:	ldr	ip, [sp, #8]
   129f8:	add	r1, r7, #1
   129fc:	mov	r0, #0
   12a00:	cmp	r1, r5
   12a04:	ldrlt	r0, [ip, r1, lsl #2]
   12a08:	cmp	r6, #0
   12a0c:	ldrbne	r2, [r6]
   12a10:	cmpne	r2, #0
   12a14:	beq	12b04 <getc@plt+0x1f88>
   12a18:	mov	r1, #0
   12a1c:	cmp	sl, r2
   12a20:	beq	12a48 <getc@plt+0x1ecc>
   12a24:	mov	r2, #1
   12a28:	sxth	r1, r2
   12a2c:	add	r3, r1, r1, lsl #1
   12a30:	ldrb	r3, [r6, r3, lsl #2]
   12a34:	cmp	r3, #0
   12a38:	beq	12b04 <getc@plt+0x1f88>
   12a3c:	add	r2, r2, #1
   12a40:	cmp	sl, r3
   12a44:	bne	12a28 <getc@plt+0x1eac>
   12a48:	add	r1, r1, r1, lsl #1
   12a4c:	add	r3, r6, r1, lsl #2
   12a50:	ldr	r1, [r3, #4]
   12a54:	cmp	r1, #0
   12a58:	beq	12ab8 <getc@plt+0x1f3c>
   12a5c:	mov	r2, r4
   12a60:	cmp	r0, #0
   12a64:	ldrb	r7, [r2, #2]!
   12a68:	cmpeq	r7, #0
   12a6c:	beq	12ab8 <getc@plt+0x1f3c>
   12a70:	ldr	r3, [r1]
   12a74:	cmp	r3, #0
   12a78:	bne	12b1c <getc@plt+0x1fa0>
   12a7c:	cmp	r7, #0
   12a80:	movne	r0, r2
   12a84:	str	r0, [r1]
   12a88:	ldrb	r0, [r2]
   12a8c:	cmp	r0, #0
   12a90:	addeq	r9, r9, #1
   12a94:	b	12aa4 <getc@plt+0x1f28>
   12a98:	sxth	r0, r8
   12a9c:	add	r8, r8, #1
   12aa0:	str	r4, [ip, r0, lsl #2]
   12aa4:	add	r9, r9, #1
   12aa8:	sxth	r7, r9
   12aac:	cmp	r5, r7
   12ab0:	bgt	129b4 <getc@plt+0x1e38>
   12ab4:	b	12af0 <getc@plt+0x1f74>
   12ab8:	ldr	r0, [r3, #8]
   12abc:	cmp	r0, #0
   12ac0:	beq	12b04 <getc@plt+0x1f88>
   12ac4:	ldrb	r1, [r4, #2]
   12ac8:	cmp	r1, #0
   12acc:	bne	12b04 <getc@plt+0x1f88>
   12ad0:	ldrb	r1, [r0]
   12ad4:	cmp	r1, #0
   12ad8:	bne	12b1c <getc@plt+0x1fa0>
   12adc:	mov	r1, #1
   12ae0:	strb	r1, [r0]
   12ae4:	ldr	r0, [sp, #4]
   12ae8:	ldr	r5, [r0]
   12aec:	b	12aa4 <getc@plt+0x1f28>
   12af0:	ldr	r1, [sp, #4]
   12af4:	sxth	r0, r8
   12af8:	str	r0, [r1]
   12afc:	sub	sp, fp, #28
   12b00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12b04:	ldr	r0, [pc, #52]	; 12b40 <getc@plt+0x1fc4>
   12b08:	mov	r1, r4
   12b0c:	add	r0, pc, r0
   12b10:	bl	12bd8 <error@@Base+0x50>
   12b14:	ldr	r0, [sp]
   12b18:	bl	12cb4 <error@@Base+0x12c>
   12b1c:	ldr	r0, [pc, #24]	; 12b3c <getc@plt+0x1fc0>
   12b20:	mov	r1, r4
   12b24:	add	r0, pc, r0
   12b28:	bl	12bd8 <error@@Base+0x50>
   12b2c:	andeq	r2, r1, r4, asr r7
   12b30:	andeq	r0, r0, r8, lsl r3
   12b34:	andeq	r2, r1, r0, lsl #14
   12b38:	andeq	r1, r0, ip, ror #11
   12b3c:	ldrdeq	r1, [r0], -r0
   12b40:	ldrdeq	r1, [r0], -r9
   12b44:	push	{fp, lr}
   12b48:	mov	fp, sp
   12b4c:	mov	r0, #0
   12b50:	bl	12b54 <getc@plt+0x1fd8>
   12b54:	push	{fp, lr}
   12b58:	mov	fp, sp
   12b5c:	mov	r4, r0
   12b60:	ldr	r0, [pc, #28]	; 12b84 <getc@plt+0x2008>
   12b64:	ldr	r0, [pc, r0]
   12b68:	ldr	r0, [r0]
   12b6c:	cmp	r0, #0
   12b70:	beq	12b78 <getc@plt+0x1ffc>
   12b74:	blx	r0
   12b78:	bl	12d14 <error@@Base+0x18c>
   12b7c:	mov	r0, r4
   12b80:	bl	10aec <exit@plt>
   12b84:	andeq	r2, r1, r0, asr #10

00012b88 <error@@Base>:
   12b88:	push	{fp, lr}
   12b8c:	mov	fp, sp
   12b90:	mov	r3, r0
   12b94:	ldr	r0, [pc, #44]	; 12bc8 <error@@Base+0x40>
   12b98:	ldr	r0, [pc, r0]
   12b9c:	ldr	r2, [r0]
   12ba0:	ldr	r0, [pc, #36]	; 12bcc <error@@Base+0x44>
   12ba4:	ldr	r0, [pc, r0]
   12ba8:	ldr	r0, [r0]
   12bac:	ldr	r1, [pc, #28]	; 12bd0 <error@@Base+0x48>
   12bb0:	add	r1, pc, r1
   12bb4:	bl	10b1c <fprintf@plt>
   12bb8:	ldr	r0, [pc, #20]	; 12bd4 <error@@Base+0x4c>
   12bbc:	ldr	r0, [pc, r0]
   12bc0:	ldr	r0, [r0]
   12bc4:	bl	12b54 <getc@plt+0x1fd8>
   12bc8:	andeq	r2, r1, r8, lsl #10
   12bcc:	strdeq	r2, [r1], -r4
   12bd0:	andeq	r1, r0, lr, ror #7
   12bd4:	strdeq	r2, [r1], -r8
   12bd8:	push	{fp, lr}
   12bdc:	mov	fp, sp
   12be0:	sub	sp, sp, #8
   12be4:	mov	r3, r0
   12be8:	ldr	r0, [pc, #48]	; 12c20 <error@@Base+0x98>
   12bec:	ldr	r0, [pc, r0]
   12bf0:	ldr	r2, [r0]
   12bf4:	ldr	r0, [pc, #40]	; 12c24 <error@@Base+0x9c>
   12bf8:	ldr	r0, [pc, r0]
   12bfc:	str	r1, [sp]
   12c00:	ldr	r0, [r0]
   12c04:	ldr	r1, [pc, #28]	; 12c28 <error@@Base+0xa0>
   12c08:	add	r1, pc, r1
   12c0c:	bl	10b1c <fprintf@plt>
   12c10:	ldr	r0, [pc, #20]	; 12c2c <error@@Base+0xa4>
   12c14:	ldr	r0, [pc, r0]
   12c18:	ldr	r0, [r0]
   12c1c:	bl	12b54 <getc@plt+0x1fd8>
   12c20:			; <UNDEFINED> instruction: 0x000124b4
   12c24:	andeq	r2, r1, r0, lsr #9
   12c28:	muleq	r0, lr, r3
   12c2c:	andeq	r2, r1, r0, lsr #9
   12c30:	push	{fp, lr}
   12c34:	mov	fp, sp
   12c38:	sub	sp, sp, #8
   12c3c:	mov	r3, r0
   12c40:	ldr	r0, [pc, #40]	; 12c70 <error@@Base+0xe8>
   12c44:	ldr	r0, [pc, r0]
   12c48:	ldr	r2, [r0]
   12c4c:	ldr	r0, [pc, #32]	; 12c74 <error@@Base+0xec>
   12c50:	ldr	r0, [pc, r0]
   12c54:	str	r1, [sp]
   12c58:	ldr	r0, [r0]
   12c5c:	ldr	r1, [pc, #20]	; 12c78 <error@@Base+0xf0>
   12c60:	add	r1, pc, r1
   12c64:	bl	10b1c <fprintf@plt>
   12c68:	mov	sp, fp
   12c6c:	pop	{fp, pc}
   12c70:	andeq	r2, r1, ip, asr r4
   12c74:	andeq	r2, r1, r8, asr #8
   12c78:	andeq	r1, r0, r6, asr #6
   12c7c:	push	{fp, lr}
   12c80:	mov	fp, sp
   12c84:	ldr	r0, [pc, #32]	; 12cac <error@@Base+0x124>
   12c88:	add	r0, pc, r0
   12c8c:	ldrb	r1, [r0]
   12c90:	cmp	r1, #1
   12c94:	popeq	{fp, pc}
   12c98:	mov	r1, #1
   12c9c:	strb	r1, [r0]
   12ca0:	ldr	r0, [pc, #8]	; 12cb0 <error@@Base+0x128>
   12ca4:	add	r0, pc, r0
   12ca8:	bl	12b88 <error@@Base>
   12cac:	andseq	r2, r2, r2, asr #17
   12cb0:	andeq	r1, r0, sp, lsl r3
   12cb4:	push	{fp, lr}
   12cb8:	mov	fp, sp
   12cbc:	mov	r3, r0
   12cc0:	ldr	r0, [pc, #60]	; 12d04 <error@@Base+0x17c>
   12cc4:	ldr	r0, [pc, r0]
   12cc8:	ldr	r0, [r0]
   12ccc:	cmp	r0, #0
   12cd0:	bne	12cfc <error@@Base+0x174>
   12cd4:	ldr	r0, [pc, #44]	; 12d08 <error@@Base+0x180>
   12cd8:	ldr	r0, [pc, r0]
   12cdc:	ldr	r2, [r0]
   12ce0:	ldr	r0, [pc, #36]	; 12d0c <error@@Base+0x184>
   12ce4:	ldr	r0, [pc, r0]
   12ce8:	ldr	r0, [r0]
   12cec:	ldr	r1, [pc, #28]	; 12d10 <error@@Base+0x188>
   12cf0:	add	r1, pc, r1
   12cf4:	bl	10b1c <fprintf@plt>
   12cf8:	bl	12b44 <getc@plt+0x1fc8>
   12cfc:	blx	r0
   12d00:	bl	12b44 <getc@plt+0x1fc8>
   12d04:	andeq	r2, r1, ip, asr #7
   12d08:	andeq	r2, r1, r8, asr #7
   12d0c:			; <UNDEFINED> instruction: 0x000123b4
   12d10:	andeq	r1, r0, r6, ror #5
   12d14:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12d18:	add	fp, sp, #24
   12d1c:	sub	sp, sp, #104	; 0x68
   12d20:	ldr	r8, [pc, #124]	; 12da4 <error@@Base+0x21c>
   12d24:	add	r8, pc, r8
   12d28:	ldrsh	r0, [r8]
   12d2c:	cmp	r0, #1
   12d30:	blt	12d9c <error@@Base+0x214>
   12d34:	ldr	r9, [pc, #108]	; 12da8 <error@@Base+0x220>
   12d38:	mov	r7, #1
   12d3c:	add	r4, sp, #4
   12d40:	ldr	r9, [pc, r9]
   12d44:	ldr	r5, [pc, #96]	; 12dac <error@@Base+0x224>
   12d48:	add	r5, pc, r5
   12d4c:	ldr	r6, [r9]
   12d50:	bl	10ae0 <getpid@plt>
   12d54:	mov	r3, r0
   12d58:	sxth	r0, r7
   12d5c:	mov	r1, r5
   12d60:	mov	r2, r6
   12d64:	str	r0, [sp]
   12d68:	mov	r0, r4
   12d6c:	bl	10b40 <sprintf@plt>
   12d70:	mov	r0, r4
   12d74:	bl	10a5c <strdup@plt>
   12d78:	mov	r6, r0
   12d7c:	bl	10a74 <unlink@plt>
   12d80:	mov	r0, r6
   12d84:	bl	10a2c <free@plt>
   12d88:	add	r0, r7, #1
   12d8c:	sxth	r7, r0
   12d90:	ldrsh	r0, [r8]
   12d94:	cmp	r7, r0
   12d98:	ble	12d4c <error@@Base+0x1c4>
   12d9c:	sub	sp, fp, #24
   12da0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12da4:	andseq	r2, r2, r4, lsr #16
   12da8:	andeq	r2, r1, r0, ror #6
   12dac:	andeq	r1, r0, fp, ror #4
   12db0:	push	{r4, r5, r6, sl, fp, lr}
   12db4:	add	fp, sp, #16
   12db8:	mov	r5, r1
   12dbc:	mov	r6, r0
   12dc0:	mov	r0, #1
   12dc4:	mov	r1, #16
   12dc8:	mov	r4, r2
   12dcc:	bl	126b8 <getc@plt+0x1b3c>
   12dd0:	str	r4, [r0, #12]
   12dd4:	mov	r1, r0
   12dd8:	strb	r5, [r0, #8]
   12ddc:	mov	r0, r6
   12de0:	pop	{r4, r5, r6, sl, fp, lr}
   12de4:	b	134ac <error@@Base+0x924>
   12de8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12dec:	add	fp, sp, #28
   12df0:	sub	sp, sp, #124	; 0x7c
   12df4:	mov	r4, r2
   12df8:	mov	r2, r1
   12dfc:	cmp	r1, #0
   12e00:	str	r0, [sp, #16]
   12e04:	bne	12e14 <error@@Base+0x28c>
   12e08:	ldrb	r0, [r4]
   12e0c:	cmp	r0, #0
   12e10:	bne	13154 <error@@Base+0x5cc>
   12e14:	ldr	r0, [sp, #16]
   12e18:	ldr	r0, [r0, #4]
   12e1c:	str	r0, [sp, #4]
   12e20:	mov	r0, r2
   12e24:	ldr	r1, [pc, #828]	; 13168 <error@@Base+0x5e0>
   12e28:	add	r1, pc, r1
   12e2c:	bl	12760 <getc@plt+0x1be4>
   12e30:	mov	r6, r0
   12e34:	ldrb	r0, [r4]
   12e38:	cmp	r0, #0
   12e3c:	beq	12e84 <error@@Base+0x2fc>
   12e40:	add	r0, sp, #20
   12e44:	mov	r1, #99	; 0x63
   12e48:	mov	r2, r6
   12e4c:	bl	10a44 <fgets@plt>
   12e50:	cmp	r0, #0
   12e54:	beq	12e74 <error@@Base+0x2ec>
   12e58:	ldr	r1, [pc, #780]	; 1316c <error@@Base+0x5e4>
   12e5c:	add	r0, sp, #20
   12e60:	mov	r2, #51	; 0x33
   12e64:	add	r1, pc, r1
   12e68:	bl	10af8 <bcmp@plt>
   12e6c:	cmp	r0, #0
   12e70:	beq	130e0 <error@@Base+0x558>
   12e74:	mov	r0, r6
   12e78:	bl	10a68 <rewind@plt>
   12e7c:	mov	r5, #0
   12e80:	strb	r5, [r4, #11]
   12e84:	ldr	r9, [r4, #4]
   12e88:	ldrb	r8, [r4, #1]
   12e8c:	mov	r0, r6
   12e90:	str	r4, [sp, #8]
   12e94:	cmp	r9, #0
   12e98:	movweq	r9, #94	; 0x5e
   12e9c:	bl	10b7c <getc@plt>
   12ea0:	cmn	r0, #1
   12ea4:	beq	12f70 <error@@Base+0x3e8>
   12ea8:	add	r1, sp, #20
   12eac:	mov	sl, #0
   12eb0:	sub	r4, fp, #32
   12eb4:	add	r1, r1, #1
   12eb8:	str	r1, [sp, #12]
   12ebc:	b	12ef8 <error@@Base+0x370>
   12ec0:	mov	r0, #1
   12ec4:	mov	r1, #16
   12ec8:	bl	126b8 <getc@plt+0x1b3c>
   12ecc:	str	r5, [r0, #12]
   12ed0:	mov	r1, r0
   12ed4:	strb	sl, [r0, #8]
   12ed8:	ldr	r0, [sp, #16]
   12edc:	bl	134ac <error@@Base+0x924>
   12ee0:	mov	r7, #0
   12ee4:	mov	r0, r6
   12ee8:	bl	10b7c <getc@plt>
   12eec:	cmn	r0, #1
   12ef0:	mov	sl, r7
   12ef4:	beq	12f70 <error@@Base+0x3e8>
   12ef8:	ldr	r1, [pc, #628]	; 13174 <error@@Base+0x5ec>
   12efc:	ldr	r1, [pc, r1]
   12f00:	add	r1, r1, r0
   12f04:	ldrsb	r5, [r1]
   12f08:	cmp	r5, #0
   12f0c:	ble	13134 <error@@Base+0x5ac>
   12f10:	cmp	r5, #1
   12f14:	strb	r0, [sp, #20]
   12f18:	beq	12f3c <error@@Base+0x3b4>
   12f1c:	ldr	r0, [sp, #12]
   12f20:	sub	r7, r5, #1
   12f24:	mov	r1, #1
   12f28:	mov	r3, r6
   12f2c:	mov	r2, r7
   12f30:	bl	10aa4 <fread@plt>
   12f34:	cmp	r0, r7
   12f38:	bne	13148 <error@@Base+0x5c0>
   12f3c:	add	r0, sp, #20
   12f40:	mov	r1, #4
   12f44:	mov	r2, r4
   12f48:	bl	10ab0 <utf8proc_iterate@plt>
   12f4c:	cmp	r0, r5
   12f50:	bne	13140 <error@@Base+0x5b8>
   12f54:	ldr	r5, [fp, #-32]	; 0xffffffe0
   12f58:	cmp	r8, #0
   12f5c:	beq	12ec0 <error@@Base+0x338>
   12f60:	mov	r7, #1
   12f64:	cmp	r5, r9
   12f68:	beq	12ee4 <error@@Base+0x35c>
   12f6c:	b	12ec0 <error@@Base+0x338>
   12f70:	mov	r0, r6
   12f74:	bl	127e8 <getc@plt+0x1c6c>
   12f78:	ldr	r8, [sp, #8]
   12f7c:	ldr	r9, [sp, #4]
   12f80:	ldrb	r0, [r8, #9]
   12f84:	cmp	r0, #0
   12f88:	beq	1309c <error@@Base+0x514>
   12f8c:	cmp	r9, #0
   12f90:	ldr	r0, [sp, #16]
   12f94:	addne	r0, r9, #4
   12f98:	ldr	r6, [r0]
   12f9c:	cmp	r6, #0
   12fa0:	beq	1309c <error@@Base+0x514>
   12fa4:	mov	r5, #32
   12fa8:	mov	r7, r6
   12fac:	b	12fc0 <error@@Base+0x438>
   12fb0:	str	r5, [r7, #12]
   12fb4:	ldr	r7, [r7, #4]
   12fb8:	cmp	r7, #0
   12fbc:	beq	13010 <error@@Base+0x488>
   12fc0:	ldr	r4, [r7, #12]
   12fc4:	mov	r0, r4
   12fc8:	bl	10a38 <utf8proc_get_property@plt>
   12fcc:	cmp	r4, #10
   12fd0:	ble	12fec <error@@Base+0x464>
   12fd4:	sub	r1, r4, #11
   12fd8:	cmp	r1, #3
   12fdc:	bcc	12fb0 <error@@Base+0x428>
   12fe0:	cmp	r4, #160	; 0xa0
   12fe4:	beq	12fb0 <error@@Base+0x428>
   12fe8:	b	12ffc <error@@Base+0x474>
   12fec:	cmp	r4, #9
   12ff0:	beq	12fb0 <error@@Base+0x428>
   12ff4:	cmp	r4, #10
   12ff8:	beq	12fb4 <error@@Base+0x42c>
   12ffc:	ldrsh	r0, [r0]
   13000:	sub	r0, r0, #23
   13004:	cmp	r0, #2
   13008:	strls	r5, [r7, #12]
   1300c:	b	12fb4 <error@@Base+0x42c>
   13010:	mov	r4, #0
   13014:	b	13044 <error@@Base+0x4bc>
   13018:	tst	r4, #255	; 0xff
   1301c:	cmpne	r5, #0
   13020:	bne	13070 <error@@Base+0x4e8>
   13024:	ldr	r0, [sp, #16]
   13028:	mov	r1, r6
   1302c:	bl	135a4 <error@@Base+0xa1c>
   13030:	mov	r0, r6
   13034:	bl	10a2c <free@plt>
   13038:	cmp	r5, #0
   1303c:	mov	r6, r5
   13040:	beq	1309c <error@@Base+0x514>
   13044:	ldr	r1, [r6, #12]
   13048:	ldr	r5, [r6, #4]
   1304c:	cmp	r1, #32
   13050:	beq	13018 <error@@Base+0x490>
   13054:	subs	r0, r1, #10
   13058:	movwne	r0, #1
   1305c:	tst	r4, #255	; 0xff
   13060:	cmpeq	r1, #10
   13064:	beq	13024 <error@@Base+0x49c>
   13068:	mov	r4, r0
   1306c:	b	13038 <error@@Base+0x4b0>
   13070:	ldr	r1, [r5, #12]
   13074:	cmp	r1, #10
   13078:	beq	13024 <error@@Base+0x49c>
   1307c:	mov	r0, #1
   13080:	cmp	r1, #32
   13084:	bne	13068 <error@@Base+0x4e0>
   13088:	ldrb	r0, [r6, #8]
   1308c:	ldrb	r1, [r5, #8]
   13090:	orr	r0, r1, r0
   13094:	strb	r0, [r5, #8]
   13098:	b	13024 <error@@Base+0x49c>
   1309c:	ldrb	r0, [r8, #10]
   130a0:	cmp	r0, #0
   130a4:	beq	130d8 <error@@Base+0x550>
   130a8:	cmp	r9, #0
   130ac:	ldr	r0, [sp, #16]
   130b0:	addne	r0, r9, #4
   130b4:	ldr	r4, [r0]
   130b8:	cmp	r4, #0
   130bc:	beq	130d8 <error@@Base+0x550>
   130c0:	ldr	r0, [r4, #12]
   130c4:	bl	10a80 <utf8proc_tolower@plt>
   130c8:	str	r0, [r4, #12]
   130cc:	ldr	r4, [r4, #4]
   130d0:	cmp	r4, #0
   130d4:	bne	130c0 <error@@Base+0x538>
   130d8:	sub	sp, fp, #28
   130dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   130e0:	ldr	r8, [pc, #136]	; 13170 <error@@Base+0x5e8>
   130e4:	mov	r7, #0
   130e8:	add	r9, sp, #20
   130ec:	mov	r5, #1
   130f0:	add	r8, pc, r8
   130f4:	mov	r0, r9
   130f8:	mov	r1, #99	; 0x63
   130fc:	mov	r2, r6
   13100:	bl	10a44 <fgets@plt>
   13104:	cmp	r0, #0
   13108:	beq	12e80 <error@@Base+0x2f8>
   1310c:	mov	r0, r9
   13110:	mov	r1, r8
   13114:	mov	r2, #56	; 0x38
   13118:	bl	10af8 <bcmp@plt>
   1311c:	cmp	r0, #0
   13120:	addeq	r7, r7, #1
   13124:	uxth	r0, r7
   13128:	cmp	r0, #2
   1312c:	bcc	130f4 <error@@Base+0x56c>
   13130:	b	12e80 <error@@Base+0x2f8>
   13134:	ldr	r0, [pc, #68]	; 13180 <error@@Base+0x5f8>
   13138:	add	r0, pc, r0
   1313c:	bl	12b88 <error@@Base>
   13140:	bl	10b4c <utf8proc_errmsg@plt>
   13144:	bl	12b88 <error@@Base>
   13148:	ldr	r0, [pc, #52]	; 13184 <error@@Base+0x5fc>
   1314c:	add	r0, pc, r0
   13150:	bl	12b88 <error@@Base>
   13154:	ldr	r0, [pc, #28]	; 13178 <error@@Base+0x5f0>
   13158:	ldr	r1, [pc, #28]	; 1317c <error@@Base+0x5f4>
   1315c:	add	r0, pc, r0
   13160:	add	r1, pc, r1
   13164:	bl	12bd8 <error@@Base+0x50>
   13168:	andeq	r1, r0, r7, lsr #5
   1316c:	andeq	r1, r0, r5, ror #3
   13170:	muleq	r0, r1, pc	; <UNPREDICTABLE>
   13174:	andeq	r2, r1, ip, lsr #3
   13178:	andeq	r0, r0, r9, lsr #29
   1317c:			; <UNDEFINED> instruction: 0x00000eb5
   13180:	andeq	r0, r0, r1, lsl #31
   13184:	andeq	r0, r0, r5, lsl #31
   13188:	push	{fp, lr}
   1318c:	mov	fp, sp
   13190:	bl	10a50 <utf8proc_encode_char@plt>
   13194:	cmp	r0, #0
   13198:	sxtbgt	r0, r0
   1319c:	popgt	{fp, pc}
   131a0:	ldr	r0, [pc, #4]	; 131ac <error@@Base+0x624>
   131a4:	add	r0, pc, r0
   131a8:	bl	12b88 <error@@Base>
   131ac:	andeq	r0, r0, fp, ror lr
   131b0:	push	{r4, r5, r6, r7, fp, lr}
   131b4:	add	fp, sp, #16
   131b8:	mov	r6, r3
   131bc:	mov	r4, r2
   131c0:	mov	r5, r1
   131c4:	tst	r0, #255	; 0xff
   131c8:	beq	13210 <error@@Base+0x688>
   131cc:	mov	r0, #94	; 0x5e
   131d0:	mov	r1, r4
   131d4:	bl	10a50 <utf8proc_encode_char@plt>
   131d8:	cmp	r0, #0
   131dc:	ble	13288 <error@@Base+0x700>
   131e0:	sxtb	r7, r0
   131e4:	cmp	r5, #10
   131e8:	bne	1321c <error@@Base+0x694>
   131ec:	ldr	r0, [pc, #224]	; 132d4 <error@@Base+0x74c>
   131f0:	ldr	r1, [pc, #224]	; 132d8 <error@@Base+0x750>
   131f4:	tst	r6, #255	; 0xff
   131f8:	add	r0, pc, r0
   131fc:	add	r1, pc, r1
   13200:	moveq	r1, r0
   13204:	add	r0, r4, r7
   13208:	pop	{r4, r5, r6, r7, fp, lr}
   1320c:	b	10b40 <sprintf@plt>
   13210:	mov	r7, #0
   13214:	cmp	r5, #10
   13218:	beq	131ec <error@@Base+0x664>
   1321c:	mov	r0, r5
   13220:	bl	10a38 <utf8proc_get_property@plt>
   13224:	cmp	r5, #32
   13228:	beq	1323c <error@@Base+0x6b4>
   1322c:	ldrsh	r0, [r0]
   13230:	sub	r1, r0, #1
   13234:	cmp	r1, #22
   13238:	bcs	13294 <error@@Base+0x70c>
   1323c:	mov	r0, r5
   13240:	bl	10b04 <utf8proc_category@plt>
   13244:	sub	r0, r0, #6
   13248:	cmp	r0, #2
   1324c:	bhi	13268 <error@@Base+0x6e0>
   13250:	add	r1, r4, r7
   13254:	movw	r0, #9676	; 0x25cc
   13258:	bl	10a50 <utf8proc_encode_char@plt>
   1325c:	cmp	r0, #0
   13260:	ble	13288 <error@@Base+0x700>
   13264:	sxtab	r7, r7, r0
   13268:	add	r1, r4, r7
   1326c:	mov	r0, r5
   13270:	bl	10a50 <utf8proc_encode_char@plt>
   13274:	cmp	r0, #0
   13278:	sxtabgt	r0, r7, r0
   1327c:	movgt	r1, #0
   13280:	strbgt	r1, [r4, r0]
   13284:	popgt	{r4, r5, r6, r7, fp, pc}
   13288:	ldr	r0, [pc, #64]	; 132d0 <error@@Base+0x748>
   1328c:	add	r0, pc, r0
   13290:	bl	12b88 <error@@Base>
   13294:	cmp	r0, #29
   13298:	beq	1323c <error@@Base+0x6b4>
   1329c:	add	r0, r4, r7
   132a0:	cmp	r5, #255	; 0xff
   132a4:	bhi	132b4 <error@@Base+0x72c>
   132a8:	ldr	r1, [pc, #24]	; 132c8 <error@@Base+0x740>
   132ac:	add	r1, pc, r1
   132b0:	b	132bc <error@@Base+0x734>
   132b4:	ldr	r1, [pc, #16]	; 132cc <error@@Base+0x744>
   132b8:	add	r1, pc, r1
   132bc:	mov	r2, r5
   132c0:	pop	{r4, r5, r6, r7, fp, lr}
   132c4:	b	10b40 <sprintf@plt>
   132c8:	andeq	r0, r0, pc, lsl #27
   132cc:	andeq	r0, r0, sl, lsl #27
   132d0:	muleq	r0, r3, sp
   132d4:	andeq	r0, r0, r3, asr #12
   132d8:	andeq	r0, r0, sl, lsr lr
   132dc:	push	{r4, r5, r6, r7, fp, lr}
   132e0:	add	fp, sp, #16
   132e4:	sub	sp, sp, #16
   132e8:	mov	r6, r2
   132ec:	mov	r2, r1
   132f0:	ldr	r1, [pc, #180]	; 133ac <error@@Base+0x824>
   132f4:	mov	r5, r0
   132f8:	mov	r0, r2
   132fc:	add	r1, pc, r1
   13300:	bl	12760 <getc@plt+0x1be4>
   13304:	mov	r4, r0
   13308:	cmp	r6, #0
   1330c:	beq	13360 <error@@Base+0x7d8>
   13310:	ldr	r0, [pc, #152]	; 133b0 <error@@Base+0x828>
   13314:	mov	r1, #55	; 0x37
   13318:	mov	r2, #1
   1331c:	mov	r3, r4
   13320:	add	r0, pc, r0
   13324:	bl	10a98 <fwrite@plt>
   13328:	ldr	r7, [pc, #132]	; 133b4 <error@@Base+0x82c>
   1332c:	mov	r1, #55	; 0x37
   13330:	mov	r2, #1
   13334:	mov	r3, r4
   13338:	add	r7, pc, r7
   1333c:	mov	r0, r7
   13340:	bl	10a98 <fwrite@plt>
   13344:	mov	r0, r4
   13348:	blx	r6
   1334c:	mov	r0, r7
   13350:	mov	r1, #55	; 0x37
   13354:	mov	r2, #1
   13358:	mov	r3, r4
   1335c:	bl	10a98 <fwrite@plt>
   13360:	ldr	r6, [r5]
   13364:	cmp	r6, #0
   13368:	beq	1339c <error@@Base+0x814>
   1336c:	add	r5, sp, #7
   13370:	ldr	r1, [r6, #12]
   13374:	ldrb	r0, [r6, #8]
   13378:	mov	r2, r5
   1337c:	mov	r3, #0
   13380:	bl	131b0 <error@@Base+0x628>
   13384:	mov	r0, r5
   13388:	mov	r1, r4
   1338c:	bl	10b58 <fputs@plt>
   13390:	ldr	r6, [r6, #4]
   13394:	cmp	r6, #0
   13398:	bne	13370 <error@@Base+0x7e8>
   1339c:	mov	r0, r4
   133a0:	bl	127e8 <getc@plt+0x1c6c>
   133a4:	sub	sp, fp, #16
   133a8:	pop	{r4, r5, r6, r7, fp, pc}
   133ac:	andeq	r0, r0, r8, ror #16
   133b0:	andeq	r0, r0, r9, lsr #26
   133b4:	andeq	r0, r0, r9, asr #26
   133b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   133bc:	add	fp, sp, #28
   133c0:	sub	sp, sp, #4
   133c4:	mov	r9, #0
   133c8:	mov	sl, r0
   133cc:	str	r9, [sp]
   133d0:	ldrb	r0, [r1]
   133d4:	cmp	r0, #0
   133d8:	beq	13438 <error@@Base+0x8b0>
   133dc:	mov	r4, r1
   133e0:	mov	r8, sp
   133e4:	mov	r7, #1
   133e8:	mov	r0, r4
   133ec:	mvn	r1, #0
   133f0:	mov	r2, r8
   133f4:	bl	10ab0 <utf8proc_iterate@plt>
   133f8:	cmp	r0, #1
   133fc:	blt	13440 <error@@Base+0x8b8>
   13400:	ldr	r5, [sp]
   13404:	mov	r6, r0
   13408:	mov	r0, #1
   1340c:	mov	r1, #16
   13410:	bl	126b8 <getc@plt+0x1b3c>
   13414:	str	r5, [r0, #12]
   13418:	mov	r1, r0
   1341c:	strb	r9, [r0, #8]
   13420:	mov	r0, sl
   13424:	bl	134ac <error@@Base+0x924>
   13428:	ldrb	r0, [r4, r6]!
   1342c:	cmp	r0, #0
   13430:	bne	133e8 <error@@Base+0x860>
   13434:	b	13444 <error@@Base+0x8bc>
   13438:	mov	r7, #1
   1343c:	b	13444 <error@@Base+0x8bc>
   13440:	mov	r7, #0
   13444:	mov	r0, r7
   13448:	sub	sp, fp, #28
   1344c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13450:	vmov.i32	q8, #0	; 0x00000000
   13454:	vst1.32	{d16-d17}, [r0]
   13458:	bx	lr
   1345c:	push	{r4, r5, fp, lr}
   13460:	add	fp, sp, #8
   13464:	mov	r4, r0
   13468:	ldr	r0, [r0]
   1346c:	mov	r5, #0
   13470:	str	r5, [r1]
   13474:	cmp	r0, #0
   13478:	str	r0, [r1, #4]
   1347c:	str	r1, [r4]
   13480:	addeq	r0, r4, #4
   13484:	str	r1, [r0]
   13488:	ldr	r0, [r4, #8]
   1348c:	cmp	r0, #0
   13490:	beq	1349c <error@@Base+0x914>
   13494:	bl	10a2c <free@plt>
   13498:	str	r5, [r4, #8]
   1349c:	ldr	r0, [r4, #12]
   134a0:	add	r0, r0, #1
   134a4:	str	r0, [r4, #12]
   134a8:	pop	{r4, r5, fp, pc}
   134ac:	push	{r4, r5, fp, lr}
   134b0:	add	fp, sp, #8
   134b4:	mov	r4, r0
   134b8:	ldr	r0, [r0, #4]
   134bc:	mov	r5, #0
   134c0:	mov	r2, r4
   134c4:	cmp	r0, #0
   134c8:	stm	r1, {r0, r5}
   134cc:	addne	r2, r0, #4
   134d0:	str	r1, [r2]
   134d4:	str	r1, [r4, #4]
   134d8:	ldr	r0, [r4, #8]
   134dc:	cmp	r0, #0
   134e0:	beq	134ec <error@@Base+0x964>
   134e4:	bl	10a2c <free@plt>
   134e8:	str	r5, [r4, #8]
   134ec:	ldr	r0, [r4, #12]
   134f0:	add	r0, r0, #1
   134f4:	str	r0, [r4, #12]
   134f8:	pop	{r4, r5, fp, pc}
   134fc:	push	{r4, sl, fp, lr}
   13500:	add	fp, sp, #8
   13504:	mov	r4, r0
   13508:	ldr	r0, [r2]
   1350c:	mov	r3, r4
   13510:	cmp	r0, #0
   13514:	stm	r1, {r0, r2}
   13518:	addne	r3, r0, #4
   1351c:	str	r1, [r3]
   13520:	str	r1, [r2]
   13524:	ldr	r0, [r4, #8]
   13528:	cmp	r0, #0
   1352c:	beq	1353c <error@@Base+0x9b4>
   13530:	bl	10a2c <free@plt>
   13534:	mov	r0, #0
   13538:	str	r0, [r4, #8]
   1353c:	ldr	r0, [r4, #12]
   13540:	add	r0, r0, #1
   13544:	str	r0, [r4, #12]
   13548:	pop	{r4, sl, fp, pc}
   1354c:	push	{r4, sl, fp, lr}
   13550:	add	fp, sp, #8
   13554:	mov	r4, r0
   13558:	mov	r0, r1
   1355c:	cmp	r1, #0
   13560:	ldr	r3, [r0, #4]!
   13564:	moveq	r0, r4
   13568:	stm	r2, {r1, r3}
   1356c:	str	r2, [r0]
   13570:	cmp	r3, #0
   13574:	addeq	r3, r4, #4
   13578:	str	r2, [r3]
   1357c:	ldr	r0, [r4, #8]
   13580:	cmp	r0, #0
   13584:	beq	13594 <error@@Base+0xa0c>
   13588:	bl	10a2c <free@plt>
   1358c:	mov	r0, #0
   13590:	str	r0, [r4, #8]
   13594:	ldr	r0, [r4, #12]
   13598:	add	r0, r0, #1
   1359c:	str	r0, [r4, #12]
   135a0:	pop	{r4, sl, fp, pc}
   135a4:	push	{r4, r5, fp, lr}
   135a8:	add	fp, sp, #8
   135ac:	mov	r4, r0
   135b0:	ldm	r1, {r0, r2}
   135b4:	cmp	r0, #0
   135b8:	beq	135c8 <error@@Base+0xa40>
   135bc:	str	r2, [r0, #4]
   135c0:	ldr	r2, [r1, #4]
   135c4:	b	135cc <error@@Base+0xa44>
   135c8:	str	r2, [r4]
   135cc:	cmp	r2, #0
   135d0:	mov	r5, #0
   135d4:	addeq	r2, r4, #4
   135d8:	str	r0, [r2]
   135dc:	str	r5, [r1]
   135e0:	str	r5, [r1, #4]
   135e4:	ldr	r0, [r4, #8]
   135e8:	cmp	r0, #0
   135ec:	beq	135f8 <error@@Base+0xa70>
   135f0:	bl	10a2c <free@plt>
   135f4:	str	r5, [r4, #8]
   135f8:	ldr	r0, [r4, #12]
   135fc:	sub	r0, r0, #1
   13600:	str	r0, [r4, #12]
   13604:	pop	{r4, r5, fp, pc}
   13608:	push	{r4, sl, fp, lr}
   1360c:	add	fp, sp, #8
   13610:	mov	r4, r0
   13614:	ldr	r0, [r0, #8]
   13618:	cmp	r0, #0
   1361c:	beq	13624 <error@@Base+0xa9c>
   13620:	pop	{r4, sl, fp, pc}
   13624:	ldr	r0, [r4, #12]
   13628:	cmp	r0, #0
   1362c:	beq	13620 <error@@Base+0xa98>
   13630:	mov	r1, #4
   13634:	bl	126b8 <getc@plt+0x1b3c>
   13638:	str	r0, [r4, #8]
   1363c:	ldr	r1, [r4]
   13640:	cmp	r1, #0
   13644:	beq	13620 <error@@Base+0xa98>
   13648:	str	r1, [r0]
   1364c:	ldr	r0, [r1, #4]
   13650:	cmp	r0, #0
   13654:	popeq	{r4, sl, fp, pc}
   13658:	mov	r1, #4
   1365c:	ldr	r2, [r4, #8]
   13660:	str	r0, [r2, r1]
   13664:	add	r1, r1, #4
   13668:	ldr	r0, [r0, #4]
   1366c:	cmp	r0, #0
   13670:	bne	1365c <error@@Base+0xad4>
   13674:	b	13620 <error@@Base+0xa98>
   13678:	push	{r4, r5, r6, r7, fp, lr}
   1367c:	add	fp, sp, #16
   13680:	ldr	r6, [r0]
   13684:	cmp	r6, #0
   13688:	beq	13704 <error@@Base+0xb7c>
   1368c:	mov	r4, r1
   13690:	mov	r5, r0
   13694:	mov	r7, #0
   13698:	b	136bc <error@@Base+0xb34>
   1369c:	ldr	r0, [r5, #12]
   136a0:	sub	r0, r0, #1
   136a4:	str	r0, [r5, #12]
   136a8:	mov	r0, r6
   136ac:	blx	r4
   136b0:	ldr	r6, [r5]
   136b4:	cmp	r6, #0
   136b8:	beq	13704 <error@@Base+0xb7c>
   136bc:	ldm	r6, {r0, r1}
   136c0:	cmp	r0, #0
   136c4:	beq	136d4 <error@@Base+0xb4c>
   136c8:	str	r1, [r0, #4]
   136cc:	ldr	r1, [r6, #4]
   136d0:	b	136d8 <error@@Base+0xb50>
   136d4:	str	r1, [r5]
   136d8:	cmp	r1, #0
   136dc:	addeq	r1, r5, #4
   136e0:	str	r0, [r1]
   136e4:	str	r7, [r6]
   136e8:	str	r7, [r6, #4]
   136ec:	ldr	r0, [r5, #8]
   136f0:	cmp	r0, #0
   136f4:	beq	1369c <error@@Base+0xb14>
   136f8:	bl	10a2c <free@plt>
   136fc:	str	r7, [r5, #8]
   13700:	b	1369c <error@@Base+0xb14>
   13704:	pop	{r4, r5, r6, r7, fp, pc}
   13708:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1370c:	mov	r7, r0
   13710:	ldr	r6, [pc, #72]	; 13760 <error@@Base+0xbd8>
   13714:	ldr	r5, [pc, #72]	; 13764 <error@@Base+0xbdc>
   13718:	add	r6, pc, r6
   1371c:	add	r5, pc, r5
   13720:	sub	r6, r6, r5
   13724:	mov	r8, r1
   13728:	mov	r9, r2
   1372c:	bl	109e8 <calloc@plt-0x20>
   13730:	asrs	r6, r6, #2
   13734:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13738:	mov	r4, #0
   1373c:	add	r4, r4, #1
   13740:	ldr	r3, [r5], #4
   13744:	mov	r2, r9
   13748:	mov	r1, r8
   1374c:	mov	r0, r7
   13750:	blx	r3
   13754:	cmp	r6, r4
   13758:	bne	1373c <error@@Base+0xbb4>
   1375c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13760:	muleq	r1, r8, r3
   13764:	muleq	r1, r0, r3
   13768:	bx	lr

Disassembly of section .fini:

0001376c <.fini>:
   1376c:	push	{r3, lr}
   13770:	pop	{r3, pc}
