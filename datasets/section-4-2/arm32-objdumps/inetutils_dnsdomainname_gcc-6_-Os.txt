
../repos/inetutils/src/dnsdomainname:     file format elf32-littlearm


Disassembly of section .init:

00010d18 <.init>:
   10d18:	push	{r3, lr}
   10d1c:	bl	1102c <putc_unlocked@plt+0xb4>
   10d20:	pop	{r3, pc}

Disassembly of section .plt:

00010d24 <calloc@plt-0x14>:
   10d24:	push	{lr}		; (str lr, [sp, #-4]!)
   10d28:	ldr	lr, [pc, #4]	; 10d34 <calloc@plt-0x4>
   10d2c:	add	lr, pc, lr
   10d30:	ldr	pc, [lr, #8]!
   10d34:	andeq	r7, r1, ip, asr #5

00010d38 <calloc@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #94208	; 0x17000
   10d40:	ldr	pc, [ip, #716]!	; 0x2cc

00010d44 <fputs_unlocked@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #94208	; 0x17000
   10d4c:	ldr	pc, [ip, #708]!	; 0x2c4

00010d50 <raise@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #94208	; 0x17000
   10d58:	ldr	pc, [ip, #700]!	; 0x2bc

00010d5c <strcmp@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #94208	; 0x17000
   10d64:	ldr	pc, [ip, #692]!	; 0x2b4

00010d68 <printf@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #94208	; 0x17000
   10d70:	ldr	pc, [ip, #684]!	; 0x2ac

00010d74 <memmove@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #94208	; 0x17000
   10d7c:	ldr	pc, [ip, #676]!	; 0x2a4

00010d80 <strchrnul@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #94208	; 0x17000
   10d88:	ldr	pc, [ip, #668]!	; 0x29c

00010d8c <free@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #94208	; 0x17000
   10d94:	ldr	pc, [ip, #660]!	; 0x294

00010d98 <gai_strerror@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #94208	; 0x17000
   10da0:	ldr	pc, [ip, #652]!	; 0x28c

00010da4 <strndup@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #94208	; 0x17000
   10dac:	ldr	pc, [ip, #644]!	; 0x284

00010db0 <memcpy@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #94208	; 0x17000
   10db8:	ldr	pc, [ip, #636]!	; 0x27c

00010dbc <fwrite_unlocked@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #94208	; 0x17000
   10dc4:	ldr	pc, [ip, #628]!	; 0x274

00010dc8 <sleep@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #94208	; 0x17000
   10dd0:	ldr	pc, [ip, #620]!	; 0x26c

00010dd4 <realloc@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #94208	; 0x17000
   10ddc:	ldr	pc, [ip, #612]!	; 0x264

00010de0 <strcasecmp@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #94208	; 0x17000
   10de8:	ldr	pc, [ip, #604]!	; 0x25c

00010dec <funlockfile@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #94208	; 0x17000
   10df4:	ldr	pc, [ip, #596]!	; 0x254

00010df8 <error@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #94208	; 0x17000
   10e00:	ldr	pc, [ip, #588]!	; 0x24c

00010e04 <gethostname@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #94208	; 0x17000
   10e0c:	ldr	pc, [ip, #580]!	; 0x244

00010e10 <getenv@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #94208	; 0x17000
   10e18:	ldr	pc, [ip, #572]!	; 0x23c

00010e1c <puts@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #94208	; 0x17000
   10e24:	ldr	pc, [ip, #564]!	; 0x234

00010e28 <malloc@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #94208	; 0x17000
   10e30:	ldr	pc, [ip, #556]!	; 0x22c

00010e34 <__libc_start_main@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #94208	; 0x17000
   10e3c:	ldr	pc, [ip, #548]!	; 0x224

00010e40 <strerror@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #94208	; 0x17000
   10e48:	ldr	pc, [ip, #540]!	; 0x21c

00010e4c <__ctype_tolower_loc@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #94208	; 0x17000
   10e54:	ldr	pc, [ip, #532]!	; 0x214

00010e58 <__gmon_start__@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #94208	; 0x17000
   10e60:	ldr	pc, [ip, #524]!	; 0x20c

00010e64 <mempcpy@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #94208	; 0x17000
   10e6c:	ldr	pc, [ip, #516]!	; 0x204

00010e70 <__ctype_b_loc@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #94208	; 0x17000
   10e78:	ldr	pc, [ip, #508]!	; 0x1fc

00010e7c <exit@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #94208	; 0x17000
   10e84:	ldr	pc, [ip, #500]!	; 0x1f4

00010e88 <strlen@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #94208	; 0x17000
   10e90:	ldr	pc, [ip, #492]!	; 0x1ec

00010e94 <strchr@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #94208	; 0x17000
   10e9c:	ldr	pc, [ip, #484]!	; 0x1e4

00010ea0 <fprintf@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #94208	; 0x17000
   10ea8:	ldr	pc, [ip, #476]!	; 0x1dc

00010eac <__errno_location@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #94208	; 0x17000
   10eb4:	ldr	pc, [ip, #468]!	; 0x1d4

00010eb8 <strerror_r@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #94208	; 0x17000
   10ec0:	ldr	pc, [ip, #460]!	; 0x1cc

00010ec4 <memset@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #94208	; 0x17000
   10ecc:	ldr	pc, [ip, #452]!	; 0x1c4

00010ed0 <memchr@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #94208	; 0x17000
   10ed8:	ldr	pc, [ip, #444]!	; 0x1bc

00010edc <strrchr@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #94208	; 0x17000
   10ee4:	ldr	pc, [ip, #436]!	; 0x1b4

00010ee8 <vfprintf@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #94208	; 0x17000
   10ef0:	ldr	pc, [ip, #428]!	; 0x1ac

00010ef4 <fputc@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #94208	; 0x17000
   10efc:	ldr	pc, [ip, #420]!	; 0x1a4

00010f00 <flockfile@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #94208	; 0x17000
   10f08:	ldr	pc, [ip, #412]!	; 0x19c

00010f0c <vsnprintf@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #94208	; 0x17000
   10f14:	ldr	pc, [ip, #404]!	; 0x194

00010f18 <atoi@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #94208	; 0x17000
   10f20:	ldr	pc, [ip, #396]!	; 0x18c

00010f24 <qsort@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #94208	; 0x17000
   10f2c:	ldr	pc, [ip, #388]!	; 0x184

00010f30 <freeaddrinfo@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #94208	; 0x17000
   10f38:	ldr	pc, [ip, #380]!	; 0x17c

00010f3c <getaddrinfo@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #94208	; 0x17000
   10f44:	ldr	pc, [ip, #372]!	; 0x174

00010f48 <fputs@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #94208	; 0x17000
   10f50:	ldr	pc, [ip, #364]!	; 0x16c

00010f54 <strncmp@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #94208	; 0x17000
   10f5c:	ldr	pc, [ip, #356]!	; 0x164

00010f60 <abort@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #94208	; 0x17000
   10f68:	ldr	pc, [ip, #348]!	; 0x15c

00010f6c <__assert_fail@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #94208	; 0x17000
   10f74:	ldr	pc, [ip, #340]!	; 0x154

00010f78 <putc_unlocked@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #94208	; 0x17000
   10f80:	ldr	pc, [ip, #332]!	; 0x14c

Disassembly of section .text:

00010f84 <argp_parse@@Base-0x780>:
   10f84:	push	{r0, r1, r7, lr}
   10f88:	mov	r7, r0
   10f8c:	ldr	r0, [r1]
   10f90:	mov	r6, r1
   10f94:	ldr	r5, [pc, #68]	; 10fe0 <putc_unlocked@plt+0x68>
   10f98:	bl	12294 <argp_parse@@Base+0xb90>
   10f9c:	ldr	r3, [pc, #64]	; 10fe4 <putc_unlocked@plt+0x6c>
   10fa0:	ldr	r2, [pc, #64]	; 10fe8 <putc_unlocked@plt+0x70>
   10fa4:	mov	r4, #0
   10fa8:	mov	r1, r5
   10fac:	ldr	r0, [pc, #56]	; 10fec <putc_unlocked@plt+0x74>
   10fb0:	str	r2, [r3]
   10fb4:	bl	120ec <argp_parse@@Base+0x9e8>
   10fb8:	mov	r3, r4
   10fbc:	mov	r2, r6
   10fc0:	mov	r1, r7
   10fc4:	str	r4, [sp, #4]
   10fc8:	str	r4, [sp]
   10fcc:	add	r0, r5, #8
   10fd0:	bl	11704 <argp_parse@@Base>
   10fd4:	bl	11118 <putc_unlocked@plt+0x1a0>
   10fd8:	mov	r0, r4
   10fdc:	bl	10e7c <exit@plt>
   10fe0:	ldrdeq	r8, [r2], -ip
   10fe4:	andeq	r8, r2, ip, lsl #3
   10fe8:	andeq	r7, r1, r5, lsr #2
   10fec:	andeq	r7, r1, sp, lsr r1
   10ff0:	mov	fp, #0
   10ff4:	mov	lr, #0
   10ff8:	pop	{r1}		; (ldr r1, [sp], #4)
   10ffc:	mov	r2, sp
   11000:	push	{r2}		; (str r2, [sp, #-4]!)
   11004:	push	{r0}		; (str r0, [sp, #-4]!)
   11008:	ldr	ip, [pc, #16]	; 11020 <putc_unlocked@plt+0xa8>
   1100c:	push	{ip}		; (str ip, [sp, #-4]!)
   11010:	ldr	r0, [pc, #12]	; 11024 <putc_unlocked@plt+0xac>
   11014:	ldr	r3, [pc, #12]	; 11028 <putc_unlocked@plt+0xb0>
   11018:	bl	10e34 <__libc_start_main@plt>
   1101c:	bl	10f60 <abort@plt>
   11020:	andeq	r7, r1, r4
   11024:	andeq	r0, r1, r4, lsl #31
   11028:	andeq	r6, r1, r4, lsr #31
   1102c:	ldr	r3, [pc, #20]	; 11048 <putc_unlocked@plt+0xd0>
   11030:	ldr	r2, [pc, #20]	; 1104c <putc_unlocked@plt+0xd4>
   11034:	add	r3, pc, r3
   11038:	ldr	r2, [r3, r2]
   1103c:	cmp	r2, #0
   11040:	bxeq	lr
   11044:	b	10e58 <__gmon_start__@plt>
   11048:	andeq	r6, r1, r4, asr #31
   1104c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11050:	ldr	r3, [pc, #28]	; 11074 <putc_unlocked@plt+0xfc>
   11054:	ldr	r0, [pc, #28]	; 11078 <putc_unlocked@plt+0x100>
   11058:	sub	r3, r3, r0
   1105c:	cmp	r3, #6
   11060:	bxls	lr
   11064:	ldr	r3, [pc, #16]	; 1107c <putc_unlocked@plt+0x104>
   11068:	cmp	r3, #0
   1106c:	bxeq	lr
   11070:	bx	r3
   11074:	andeq	r8, r2, pc, lsr r1
   11078:	andeq	r8, r2, ip, lsr r1
   1107c:	andeq	r0, r0, r0
   11080:	ldr	r1, [pc, #36]	; 110ac <putc_unlocked@plt+0x134>
   11084:	ldr	r0, [pc, #36]	; 110b0 <putc_unlocked@plt+0x138>
   11088:	sub	r1, r1, r0
   1108c:	asr	r1, r1, #2
   11090:	add	r1, r1, r1, lsr #31
   11094:	asrs	r1, r1, #1
   11098:	bxeq	lr
   1109c:	ldr	r3, [pc, #16]	; 110b4 <putc_unlocked@plt+0x13c>
   110a0:	cmp	r3, #0
   110a4:	bxeq	lr
   110a8:	bx	r3
   110ac:	andeq	r8, r2, ip, lsr r1
   110b0:	andeq	r8, r2, ip, lsr r1
   110b4:	andeq	r0, r0, r0
   110b8:	push	{r4, lr}
   110bc:	ldr	r4, [pc, #24]	; 110dc <putc_unlocked@plt+0x164>
   110c0:	ldrb	r3, [r4]
   110c4:	cmp	r3, #0
   110c8:	popne	{r4, pc}
   110cc:	bl	11050 <putc_unlocked@plt+0xd8>
   110d0:	mov	r3, #1
   110d4:	strb	r3, [r4]
   110d8:	pop	{r4, pc}
   110dc:	andeq	r8, r2, r0, asr r1
   110e0:	ldr	r0, [pc, #40]	; 11110 <putc_unlocked@plt+0x198>
   110e4:	ldr	r3, [r0]
   110e8:	cmp	r3, #0
   110ec:	bne	110f4 <putc_unlocked@plt+0x17c>
   110f0:	b	11080 <putc_unlocked@plt+0x108>
   110f4:	ldr	r3, [pc, #24]	; 11114 <putc_unlocked@plt+0x19c>
   110f8:	cmp	r3, #0
   110fc:	beq	110f0 <putc_unlocked@plt+0x178>
   11100:	push	{r4, lr}
   11104:	blx	r3
   11108:	pop	{r4, lr}
   1110c:	b	11080 <putc_unlocked@plt+0x108>
   11110:	andeq	r7, r2, ip, lsl #30
   11114:	andeq	r0, r0, r0
   11118:	push	{r4, lr}
   1111c:	sub	sp, sp, #40	; 0x28
   11120:	bl	12720 <argp_parse@@Base+0x101c>
   11124:	subs	r4, r0, #0
   11128:	bne	11140 <putc_unlocked@plt+0x1c8>
   1112c:	bl	10eac <__errno_location@plt>
   11130:	ldr	r2, [pc, #140]	; 111c4 <putc_unlocked@plt+0x24c>
   11134:	ldr	r1, [r0]
   11138:	mov	r0, #1
   1113c:	bl	10df8 <error@plt>
   11140:	mov	r2, #32
   11144:	mov	r1, #0
   11148:	add	r0, sp, #8
   1114c:	bl	10ec4 <memset@plt>
   11150:	mov	r3, #2
   11154:	str	r3, [sp, #8]
   11158:	add	r2, sp, #8
   1115c:	add	r3, sp, #4
   11160:	mov	r1, #0
   11164:	mov	r0, r4
   11168:	bl	10f3c <getaddrinfo@plt>
   1116c:	cmp	r0, #0
   11170:	beq	1118c <putc_unlocked@plt+0x214>
   11174:	bl	10d98 <gai_strerror@plt>
   11178:	ldr	r2, [pc, #72]	; 111c8 <putc_unlocked@plt+0x250>
   1117c:	mov	r1, #0
   11180:	mov	r3, r0
   11184:	mov	r0, #1
   11188:	bl	10df8 <error@plt>
   1118c:	ldr	r3, [sp, #4]
   11190:	mov	r1, #46	; 0x2e
   11194:	ldr	r0, [r3, #24]
   11198:	bl	10e94 <strchr@plt>
   1119c:	cmp	r0, #0
   111a0:	beq	111ac <putc_unlocked@plt+0x234>
   111a4:	add	r0, r0, #1
   111a8:	bl	10e1c <puts@plt>
   111ac:	mov	r0, r4
   111b0:	bl	121a0 <argp_parse@@Base+0xa9c>
   111b4:	ldr	r0, [sp, #4]
   111b8:	bl	10f30 <freeaddrinfo@plt>
   111bc:	add	sp, sp, #40	; 0x28
   111c0:	pop	{r4, pc}
   111c4:	andeq	r7, r1, sl, lsl #2
   111c8:	andeq	r7, r1, r6, lsl r9
   111cc:	push	{r4, r5, r6, lr}
   111d0:	ldr	r6, [r0]
   111d4:	cmp	r6, #0
   111d8:	beq	11224 <putc_unlocked@plt+0x2ac>
   111dc:	mov	ip, r2
   111e0:	ldr	r2, [r0, #32]
   111e4:	mov	r5, r1
   111e8:	str	r2, [r1, #36]	; 0x24
   111ec:	ldr	r2, [r0, #24]
   111f0:	mov	r4, r0
   111f4:	str	r2, [r1, #28]
   111f8:	ldr	r2, [r0, #28]
   111fc:	str	r2, [r1, #32]
   11200:	ldr	r2, [r0, #12]
   11204:	mov	r0, ip
   11208:	str	r2, [r1, #20]
   1120c:	mov	r2, r1
   11210:	mov	r1, r3
   11214:	blx	r6
   11218:	ldr	r3, [r5, #36]	; 0x24
   1121c:	str	r3, [r4, #32]
   11220:	pop	{r4, r5, r6, pc}
   11224:	mov	r0, #7
   11228:	pop	{r4, r5, r6, pc}
   1122c:	ldr	r3, [r0]
   11230:	push	{r4, r5, r6, lr}
   11234:	cmp	r3, #0
   11238:	ldr	r4, [r0, #16]
   1123c:	bne	1124c <putc_unlocked@plt+0x2d4>
   11240:	ldr	r2, [r0, #4]
   11244:	cmp	r2, #0
   11248:	beq	112b4 <putc_unlocked@plt+0x33c>
   1124c:	ldr	r2, [r1, #8]
   11250:	cmp	r3, #0
   11254:	add	r2, r2, #1
   11258:	str	r2, [r1, #8]
   1125c:	beq	112b4 <putc_unlocked@plt+0x33c>
   11260:	mov	r2, #0
   11264:	add	r3, r3, #24
   11268:	ldr	r0, [r3, #-20]	; 0xffffffec
   1126c:	cmp	r0, #0
   11270:	bne	112f0 <putc_unlocked@plt+0x378>
   11274:	ldr	r0, [r3, #-24]	; 0xffffffe8
   11278:	cmp	r0, #0
   1127c:	bne	112f0 <putc_unlocked@plt+0x378>
   11280:	ldr	r0, [r3, #-8]
   11284:	cmp	r0, #0
   11288:	bne	112f0 <putc_unlocked@plt+0x378>
   1128c:	ldr	r0, [r3, #-4]
   11290:	cmp	r0, #0
   11294:	bne	112f0 <putc_unlocked@plt+0x378>
   11298:	ldr	r3, [r1]
   1129c:	add	r0, r2, r2, lsl #1
   112a0:	add	r3, r3, r0
   112a4:	str	r3, [r1]
   112a8:	ldr	r3, [r1, #4]
   112ac:	add	r2, r3, r2
   112b0:	str	r2, [r1, #4]
   112b4:	cmp	r4, #0
   112b8:	movne	r5, r1
   112bc:	addne	r4, r4, #16
   112c0:	bne	112dc <putc_unlocked@plt+0x364>
   112c4:	pop	{r4, r5, r6, pc}
   112c8:	mov	r1, r5
   112cc:	bl	1122c <putc_unlocked@plt+0x2b4>
   112d0:	ldr	r3, [r5, #12]
   112d4:	add	r3, r3, #1
   112d8:	str	r3, [r5, #12]
   112dc:	add	r4, r4, #16
   112e0:	ldr	r0, [r4, #-32]	; 0xffffffe0
   112e4:	cmp	r0, #0
   112e8:	bne	112c8 <putc_unlocked@plt+0x350>
   112ec:	pop	{r4, r5, r6, pc}
   112f0:	add	r2, r2, #1
   112f4:	b	11264 <putc_unlocked@plt+0x2ec>
   112f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   112fc:	sub	sp, sp, #36	; 0x24
   11300:	ldr	r6, [r0]
   11304:	mov	r9, r0
   11308:	cmp	r6, #0
   1130c:	str	r1, [sp, #16]
   11310:	str	r2, [sp, #20]
   11314:	mov	r4, r3
   11318:	ldr	r5, [sp, #72]	; 0x48
   1131c:	ldr	sl, [r0, #16]
   11320:	addne	r7, r6, #24
   11324:	movne	fp, #0
   11328:	bne	114a4 <putc_unlocked@plt+0x52c>
   1132c:	ldr	r6, [r0, #4]
   11330:	cmp	r6, #0
   11334:	beq	11398 <putc_unlocked@plt+0x420>
   11338:	ldr	r3, [r9, #4]
   1133c:	ldr	r2, [sp, #16]
   11340:	stm	r4, {r3, r9}
   11344:	ldr	r3, [r5, #4]
   11348:	str	r2, [r4, #16]
   1134c:	str	r3, [r4, #8]
   11350:	ldr	r2, [sp, #20]
   11354:	mov	r3, #0
   11358:	cmp	sl, r3
   1135c:	str	r3, [r4, #12]
   11360:	str	r2, [r4, #20]
   11364:	str	r3, [r4, #24]
   11368:	str	r3, [r4, #32]
   1136c:	str	r3, [r4, #28]
   11370:	beq	11390 <putc_unlocked@plt+0x418>
   11374:	ldr	r2, [sl, r3, lsl #4]
   11378:	cmp	r2, #0
   1137c:	bne	11500 <putc_unlocked@plt+0x588>
   11380:	ldr	r2, [r5, #12]
   11384:	add	r3, r2, r3, lsl #2
   11388:	str	r2, [r4, #28]
   1138c:	str	r3, [r5, #12]
   11390:	mov	r6, r4
   11394:	add	r4, r4, #36	; 0x24
   11398:	cmp	sl, #0
   1139c:	movne	r2, #0
   113a0:	bne	11524 <putc_unlocked@plt+0x5ac>
   113a4:	mov	r0, r4
   113a8:	add	sp, sp, #36	; 0x24
   113ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   113b0:	tst	r2, #8
   113b4:	bne	113dc <putc_unlocked@plt+0x464>
   113b8:	sub	r3, r8, #1
   113bc:	cmp	r3, #254	; 0xfe
   113c0:	bhi	113dc <putc_unlocked@plt+0x464>
   113c4:	bl	10e70 <__ctype_b_loc@plt>
   113c8:	lsl	r3, r8, #1
   113cc:	ldr	r2, [r0]
   113d0:	ldrh	r3, [r2, r3]
   113d4:	tst	r3, #16384	; 0x4000
   113d8:	bne	11534 <putc_unlocked@plt+0x5bc>
   113dc:	ldr	r3, [r7, #-24]	; 0xffffffe8
   113e0:	cmp	r3, #0
   113e4:	beq	114a0 <putc_unlocked@plt+0x528>
   113e8:	ldr	r2, [r5]
   113ec:	str	r2, [sp, #12]
   113f0:	ldr	r2, [r2, #8]
   113f4:	mov	r8, r2
   113f8:	ldr	r0, [r8]
   113fc:	cmp	r0, #0
   11400:	beq	11430 <putc_unlocked@plt+0x4b8>
   11404:	mov	r1, r3
   11408:	str	r2, [sp, #28]
   1140c:	str	r3, [sp, #24]
   11410:	bl	10d5c <strcmp@plt>
   11414:	ldr	r3, [sp, #24]
   11418:	ldr	r2, [sp, #28]
   1141c:	cmp	r0, #0
   11420:	bne	114f8 <putc_unlocked@plt+0x580>
   11424:	sub	r8, r8, r2
   11428:	cmn	r8, #15
   1142c:	bge	114a0 <putc_unlocked@plt+0x528>
   11430:	ldr	r1, [r5, #8]
   11434:	str	r3, [r1]
   11438:	ldr	r3, [r6, #8]
   1143c:	cmp	r3, #0
   11440:	beq	11458 <putc_unlocked@plt+0x4e0>
   11444:	ldr	r3, [r6, #12]
   11448:	tst	r3, #1
   1144c:	movne	r3, #2
   11450:	moveq	r3, #1
   11454:	str	r3, [sp, #8]
   11458:	ldr	r2, [sp, #12]
   1145c:	ldr	r3, [sp, #8]
   11460:	ldr	r0, [pc, #292]	; 1158c <putc_unlocked@plt+0x614>
   11464:	ldr	r2, [r2, #48]	; 0x30
   11468:	stmib	r1, {r3, fp}
   1146c:	sub	r2, r4, r2
   11470:	ldr	r3, [r7, #-20]	; 0xffffffec
   11474:	asr	r2, r2, #2
   11478:	cmp	r3, #0
   1147c:	mul	r2, r0, r2
   11480:	ldreq	r3, [r6, #4]
   11484:	add	r2, r2, #1
   11488:	bic	r3, r3, #-16777216	; 0xff000000
   1148c:	add	r3, r3, r2, lsl #24
   11490:	str	r3, [r1, #12]
   11494:	add	r3, r1, #16
   11498:	str	r3, [r5, #8]
   1149c:	str	fp, [r1, #16]
   114a0:	add	r7, r7, #24
   114a4:	ldr	r8, [r7, #-20]	; 0xffffffec
   114a8:	sub	r3, r7, #24
   114ac:	cmp	r8, #0
   114b0:	bne	114d8 <putc_unlocked@plt+0x560>
   114b4:	ldr	r2, [r7, #-24]	; 0xffffffe8
   114b8:	cmp	r2, #0
   114bc:	bne	114d8 <putc_unlocked@plt+0x560>
   114c0:	ldr	r2, [r7, #-8]
   114c4:	cmp	r2, #0
   114c8:	bne	114d8 <putc_unlocked@plt+0x560>
   114cc:	ldr	r2, [r7, #-4]
   114d0:	cmp	r2, #0
   114d4:	beq	11338 <putc_unlocked@plt+0x3c0>
   114d8:	ldr	r2, [r7, #-12]
   114dc:	tst	r2, #4
   114e0:	moveq	r6, r3
   114e4:	ldr	r3, [r6, #12]
   114e8:	ands	r3, r3, #8
   114ec:	str	r3, [sp, #8]
   114f0:	beq	113b0 <putc_unlocked@plt+0x438>
   114f4:	b	114a0 <putc_unlocked@plt+0x528>
   114f8:	add	r8, r8, #16
   114fc:	b	113f8 <putc_unlocked@plt+0x480>
   11500:	add	r3, r3, #1
   11504:	b	11374 <putc_unlocked@plt+0x3fc>
   11508:	mov	r3, r4
   1150c:	str	r5, [sp]
   11510:	mov	r1, r6
   11514:	add	r7, r2, #1
   11518:	bl	112f8 <putc_unlocked@plt+0x380>
   1151c:	mov	r2, r7
   11520:	mov	r4, r0
   11524:	ldr	r0, [sl, r2, lsl #4]
   11528:	cmp	r0, #0
   1152c:	bne	11508 <putc_unlocked@plt+0x590>
   11530:	b	113a4 <putc_unlocked@plt+0x42c>
   11534:	ldr	r3, [r5, #4]
   11538:	add	r2, r3, #1
   1153c:	str	r2, [r5, #4]
   11540:	strb	r8, [r3]
   11544:	ldr	r3, [r6, #8]
   11548:	cmp	r3, #0
   1154c:	beq	11580 <putc_unlocked@plt+0x608>
   11550:	ldr	r3, [r5, #4]
   11554:	add	r2, r3, #1
   11558:	str	r2, [r5, #4]
   1155c:	mov	r2, #58	; 0x3a
   11560:	strb	r2, [r3]
   11564:	ldr	r3, [r6, #12]
   11568:	tst	r3, #1
   1156c:	ldrne	r3, [r5, #4]
   11570:	addne	r2, r3, #1
   11574:	strne	r2, [r5, #4]
   11578:	movne	r2, #58	; 0x3a
   1157c:	strbne	r2, [r3]
   11580:	ldr	r3, [r5, #4]
   11584:	strb	fp, [r3]
   11588:	b	113dc <putc_unlocked@plt+0x464>
   1158c:	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^
   11590:	cmp	r0, #86	; 0x56
   11594:	bne	11600 <putc_unlocked@plt+0x688>
   11598:	ldr	r3, [pc, #112]	; 11610 <putc_unlocked@plt+0x698>
   1159c:	push	{r4, lr}
   115a0:	mov	r4, r2
   115a4:	ldr	r3, [r3]
   115a8:	cmp	r3, #0
   115ac:	beq	115cc <putc_unlocked@plt+0x654>
   115b0:	mov	r1, r2
   115b4:	ldr	r0, [r2, #48]	; 0x30
   115b8:	blx	r3
   115bc:	ldr	r0, [r4, #16]
   115c0:	ands	r0, r0, #32
   115c4:	bne	11608 <putc_unlocked@plt+0x690>
   115c8:	bl	10e7c <exit@plt>
   115cc:	ldr	r3, [pc, #64]	; 11614 <putc_unlocked@plt+0x69c>
   115d0:	ldr	r2, [r3]
   115d4:	cmp	r2, #0
   115d8:	beq	115ec <putc_unlocked@plt+0x674>
   115dc:	ldr	r1, [pc, #52]	; 11618 <putc_unlocked@plt+0x6a0>
   115e0:	ldr	r0, [r4, #48]	; 0x30
   115e4:	bl	10ea0 <fprintf@plt>
   115e8:	b	115bc <putc_unlocked@plt+0x644>
   115ec:	ldr	r2, [pc, #40]	; 1161c <putc_unlocked@plt+0x6a4>
   115f0:	ldr	r1, [pc, #40]	; 11620 <putc_unlocked@plt+0x6a8>
   115f4:	mov	r0, r4
   115f8:	bl	15400 <argp_error@@Base>
   115fc:	b	115bc <putc_unlocked@plt+0x644>
   11600:	mov	r0, #7
   11604:	bx	lr
   11608:	mov	r0, #0
   1160c:	pop	{r4, pc}
   11610:	andeq	r8, r2, r8, asr r1
   11614:	muleq	r2, r0, r1
   11618:	ldrdeq	r7, [r1], -lr
   1161c:	andeq	r7, r1, r4, ror r2
   11620:	andeq	r7, r1, r6, lsl r9
   11624:	cmn	r0, #3
   11628:	push	{r4, r5, r6, lr}
   1162c:	mov	r4, r2
   11630:	beq	11674 <putc_unlocked@plt+0x6fc>
   11634:	mov	r5, r1
   11638:	bgt	1164c <putc_unlocked@plt+0x6d4>
   1163c:	cmn	r0, #4
   11640:	beq	116b0 <putc_unlocked@plt+0x738>
   11644:	mov	r0, #7
   11648:	pop	{r4, r5, r6, pc}
   1164c:	cmn	r0, #2
   11650:	beq	1167c <putc_unlocked@plt+0x704>
   11654:	cmp	r0, #63	; 0x3f
   11658:	ldreq	r2, [pc, #140]	; 116ec <putc_unlocked@plt+0x774>
   1165c:	bne	11644 <putc_unlocked@plt+0x6cc>
   11660:	ldr	r1, [r4, #48]	; 0x30
   11664:	mov	r0, r4
   11668:	bl	15360 <argp_state_help@@Base>
   1166c:	mov	r0, #0
   11670:	pop	{r4, r5, r6, pc}
   11674:	ldr	r2, [pc, #116]	; 116f0 <putc_unlocked@plt+0x778>
   11678:	b	11660 <putc_unlocked@plt+0x6e8>
   1167c:	ldr	r3, [pc, #112]	; 116f4 <putc_unlocked@plt+0x77c>
   11680:	mov	r0, r1
   11684:	str	r1, [r3]
   11688:	bl	12110 <argp_parse@@Base+0xa0c>
   1168c:	ldr	r3, [pc, #100]	; 116f8 <putc_unlocked@plt+0x780>
   11690:	str	r0, [r3]
   11694:	ldr	r3, [r4, #16]
   11698:	str	r0, [r4, #40]	; 0x28
   1169c:	and	r3, r3, #3
   116a0:	cmp	r3, #1
   116a4:	ldreq	r3, [r4, #8]
   116a8:	streq	r5, [r3]
   116ac:	b	1166c <putc_unlocked@plt+0x6f4>
   116b0:	cmp	r1, #0
   116b4:	ldr	r0, [pc, #64]	; 116fc <putc_unlocked@plt+0x784>
   116b8:	movne	r0, r1
   116bc:	bl	10f18 <atoi@plt>
   116c0:	ldr	r4, [pc, #56]	; 11700 <putc_unlocked@plt+0x788>
   116c4:	mov	r5, #1
   116c8:	str	r0, [r4]
   116cc:	ldr	r3, [r4]
   116d0:	sub	r2, r3, #1
   116d4:	cmp	r3, #0
   116d8:	str	r2, [r4]
   116dc:	ble	1166c <putc_unlocked@plt+0x6f4>
   116e0:	mov	r0, r5
   116e4:	bl	10dc8 <sleep@plt>
   116e8:	b	116cc <putc_unlocked@plt+0x754>
   116ec:	andeq	r0, r0, sl, ror r2
   116f0:	andeq	r0, r0, r1, lsl #4
   116f4:	andeq	r8, r2, r4, asr #2
   116f8:	andeq	r8, r2, r0, asr #2
   116fc:	muleq	r1, r7, r2
   11700:	andeq	r8, r2, r4, asr r1

00011704 <argp_parse@@Base>:
   11704:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11708:	add	fp, sp, #32
   1170c:	tst	r3, #1
   11710:	sub	sp, sp, #220	; 0xdc
   11714:	mov	r4, r0
   11718:	mov	r8, r2
   1171c:	str	r1, [fp, #-240]	; 0xffffff10
   11720:	mov	sl, r3
   11724:	bne	11758 <argp_parse@@Base+0x54>
   11728:	ldr	r3, [pc, #2296]	; 12028 <argp_parse@@Base+0x924>
   1172c:	ldr	r5, [pc, #2296]	; 1202c <argp_parse@@Base+0x928>
   11730:	ldr	r2, [r3]
   11734:	cmp	r2, #0
   11738:	ldreq	r2, [r8]
   1173c:	streq	r2, [r3]
   11740:	ldr	r3, [r5]
   11744:	cmp	r3, #0
   11748:	bne	11758 <argp_parse@@Base+0x54>
   1174c:	ldr	r0, [r8]
   11750:	bl	12110 <argp_parse@@Base+0xa0c>
   11754:	str	r0, [r5]
   11758:	ands	r7, sl, #16
   1175c:	bne	117e4 <argp_parse@@Base+0xe0>
   11760:	sub	sp, sp, #72	; 0x48
   11764:	add	r5, sp, #8
   11768:	sub	sp, sp, #40	; 0x28
   1176c:	add	r6, sp, #8
   11770:	mov	r2, #28
   11774:	mov	r1, r7
   11778:	mov	r0, r6
   1177c:	bl	10ec4 <memset@plt>
   11780:	str	r5, [r6, #16]
   11784:	mov	r0, r5
   11788:	mov	r2, #64	; 0x40
   1178c:	mov	r1, r7
   11790:	bl	10ec4 <memset@plt>
   11794:	cmp	r4, #0
   11798:	strne	r4, [r5]
   1179c:	ldr	r3, [pc, #2188]	; 12030 <argp_parse@@Base+0x92c>
   117a0:	addne	r5, r5, #16
   117a4:	str	r3, [r5]
   117a8:	ldr	r3, [pc, #2180]	; 12034 <argp_parse@@Base+0x930>
   117ac:	ldr	r3, [r3]
   117b0:	cmp	r3, #0
   117b4:	bne	117cc <argp_parse@@Base+0xc8>
   117b8:	ldr	r3, [pc, #2168]	; 12038 <argp_parse@@Base+0x934>
   117bc:	ldr	r3, [r3]
   117c0:	cmp	r3, #0
   117c4:	addeq	r3, r5, #16
   117c8:	beq	117d8 <argp_parse@@Base+0xd4>
   117cc:	ldr	r2, [pc, #2152]	; 1203c <argp_parse@@Base+0x938>
   117d0:	add	r3, r5, #32
   117d4:	str	r2, [r5, #16]
   117d8:	mov	r4, r6
   117dc:	mov	r2, #0
   117e0:	str	r2, [r3]
   117e4:	mov	r2, #36	; 0x24
   117e8:	mov	r1, #0
   117ec:	sub	r0, fp, #196	; 0xc4
   117f0:	bl	10ec4 <memset@plt>
   117f4:	ands	r3, sl, #4
   117f8:	moveq	r3, #1
   117fc:	movne	r3, #0
   11800:	str	r3, [fp, #-228]	; 0xffffff1c
   11804:	mov	r3, #0
   11808:	cmp	r4, r3
   1180c:	str	r3, [fp, #-224]	; 0xffffff20
   11810:	str	r3, [fp, #-220]	; 0xffffff24
   11814:	str	r3, [fp, #-216]	; 0xffffff28
   11818:	beq	11828 <argp_parse@@Base+0x124>
   1181c:	sub	r1, fp, #228	; 0xe4
   11820:	mov	r0, r4
   11824:	bl	1122c <putc_unlocked@plt+0x2b4>
   11828:	ldr	r9, [fp, #-220]	; 0xffffff24
   1182c:	ldr	r5, [fp, #-216]	; 0xffffff28
   11830:	add	r3, r9, #1
   11834:	mov	r9, #36	; 0x24
   11838:	ldr	r6, [fp, #-224]	; 0xffffff20
   1183c:	mul	r9, r9, r3
   11840:	ldr	r0, [fp, #-228]	; 0xffffff1c
   11844:	lsl	r5, r5, #2
   11848:	add	r6, r6, #1
   1184c:	add	r3, r9, r5
   11850:	add	r6, r3, r6, lsl #4
   11854:	add	r0, r0, #1
   11858:	add	r0, r0, r6
   1185c:	str	r3, [fp, #-236]	; 0xffffff14
   11860:	bl	12800 <argp_parse@@Base+0x10fc>
   11864:	cmp	r0, #0
   11868:	mov	r7, r0
   1186c:	str	r0, [fp, #-40]	; 0xffffffd8
   11870:	moveq	r4, #12
   11874:	beq	119f4 <argp_parse@@Base+0x2f0>
   11878:	add	r3, r0, r9
   1187c:	str	r3, [fp, #-232]	; 0xffffff18
   11880:	str	r3, [fp, #-104]	; 0xffffff98
   11884:	ldr	r3, [fp, #-236]	; 0xffffff14
   11888:	sub	lr, fp, #196	; 0xc4
   1188c:	add	r3, r0, r3
   11890:	str	r3, [fp, #-236]	; 0xffffff14
   11894:	str	r3, [fp, #-152]	; 0xffffff68
   11898:	mov	r3, #1
   1189c:	add	r9, r0, r6
   118a0:	str	r0, [fp, #-112]	; 0xffffff90
   118a4:	str	r3, [fp, #-196]	; 0xffffff3c
   118a8:	str	r3, [fp, #-192]	; 0xffffff40
   118ac:	ldm	lr!, {r0, r1, r2, r3}
   118b0:	sub	ip, fp, #148	; 0x94
   118b4:	str	r9, [fp, #-156]	; 0xffffff64
   118b8:	stmia	ip!, {r0, r1, r2, r3}
   118bc:	ldm	lr!, {r0, r1, r2, r3}
   118c0:	stmia	ip!, {r0, r1, r2, r3}
   118c4:	mov	r2, r5
   118c8:	ldr	r3, [lr]
   118cc:	mov	r1, #0
   118d0:	ldr	r0, [fp, #-232]	; 0xffffff18
   118d4:	str	r3, [ip]
   118d8:	bl	10ec4 <memset@plt>
   118dc:	ldr	r3, [fp, #-236]	; 0xffffff14
   118e0:	tst	sl, #8
   118e4:	str	r3, [fp, #-204]	; 0xffffff34
   118e8:	ldr	r3, [fp, #-232]	; 0xffffff18
   118ec:	str	r9, [fp, #-208]	; 0xffffff30
   118f0:	sub	r5, fp, #160	; 0xa0
   118f4:	addne	r9, r9, #1
   118f8:	str	r3, [fp, #-200]	; 0xffffff38
   118fc:	str	r5, [fp, #-212]	; 0xffffff2c
   11900:	strne	r9, [fp, #-208]	; 0xffffff30
   11904:	movne	r3, #45	; 0x2d
   11908:	bne	11924 <argp_parse@@Base+0x220>
   1190c:	ands	r3, sl, #4
   11910:	cmp	r3, #0
   11914:	beq	11928 <argp_parse@@Base+0x224>
   11918:	mov	r3, #43	; 0x2b
   1191c:	add	r9, r9, #1
   11920:	str	r9, [fp, #-208]	; 0xffffff30
   11924:	strb	r3, [r7, r6]
   11928:	ldr	r3, [fp, #-208]	; 0xffffff30
   1192c:	mov	r2, #0
   11930:	cmp	r4, r2
   11934:	strb	r2, [r3]
   11938:	ldr	r3, [fp, #-204]	; 0xffffff34
   1193c:	str	r2, [r3]
   11940:	ldreq	r3, [fp, #-112]	; 0xffffff90
   11944:	str	r4, [fp, #-160]	; 0xffffff60
   11948:	streq	r3, [fp, #-108]	; 0xffffff94
   1194c:	beq	1196c <argp_parse@@Base+0x268>
   11950:	sub	r3, fp, #212	; 0xd4
   11954:	str	r3, [sp]
   11958:	mov	r1, r2
   1195c:	ldr	r3, [fp, #-112]	; 0xffffff90
   11960:	mov	r0, r4
   11964:	bl	112f8 <putc_unlocked@plt+0x380>
   11968:	str	r0, [fp, #-108]	; 0xffffff94
   1196c:	mov	r2, #56	; 0x38
   11970:	mov	r1, #0
   11974:	add	r0, r5, #64	; 0x40
   11978:	bl	10ec4 <memset@plt>
   1197c:	ldr	r3, [fp, #-160]	; 0xffffff60
   11980:	ldr	r6, [fp, #-112]	; 0xffffff90
   11984:	str	r3, [fp, #-96]	; 0xffffffa0
   11988:	ldr	r3, [fp, #-240]	; 0xffffff10
   1198c:	str	sl, [fp, #-80]	; 0xffffffb0
   11990:	str	r3, [fp, #-92]	; 0xffffffa4
   11994:	ldr	r3, [pc, #1700]	; 12040 <argp_parse@@Base+0x93c>
   11998:	mov	r4, #0
   1199c:	ldr	sl, [pc, #1696]	; 12044 <argp_parse@@Base+0x940>
   119a0:	ldr	r3, [r3]
   119a4:	add	r7, r5, #64	; 0x40
   119a8:	str	r3, [fp, #-52]	; 0xffffffcc
   119ac:	ldr	r3, [pc, #1684]	; 12048 <argp_parse@@Base+0x944>
   119b0:	mov	r9, r4
   119b4:	str	r8, [fp, #-88]	; 0xffffffa8
   119b8:	ldr	r3, [r3]
   119bc:	str	r5, [fp, #-44]	; 0xffffffd4
   119c0:	str	r3, [fp, #-48]	; 0xffffffd0
   119c4:	mov	r3, #1
   119c8:	str	r3, [fp, #-100]	; 0xffffff9c
   119cc:	ldr	r3, [fp, #-108]	; 0xffffff94
   119d0:	cmp	r6, r3
   119d4:	ldrcc	r3, [fp, #8]
   119d8:	strcc	r3, [r6, #24]
   119dc:	ldr	r3, [fp, #-108]	; 0xffffff94
   119e0:	cmp	r6, r3
   119e4:	bcs	11a68 <argp_parse@@Base+0x364>
   119e8:	cmp	r4, #7
   119ec:	cmpne	r4, #0
   119f0:	beq	11a00 <argp_parse@@Base+0x2fc>
   119f4:	mov	r0, r4
   119f8:	sub	sp, fp, #32
   119fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a00:	ldr	r3, [r6, #16]
   11a04:	cmp	r3, #0
   11a08:	ldrne	r3, [r3, #28]
   11a0c:	ldrne	r2, [r6, #20]
   11a10:	ldrne	r3, [r3, r2, lsl #2]
   11a14:	strne	r3, [r6, #24]
   11a18:	ldr	r3, [r6]
   11a1c:	cmp	r3, #0
   11a20:	bne	11a48 <argp_parse@@Base+0x344>
   11a24:	ldr	r3, [r6, #4]
   11a28:	ldr	r3, [r3, #16]
   11a2c:	cmp	r3, #0
   11a30:	beq	11a48 <argp_parse@@Base+0x344>
   11a34:	ldr	r3, [r3]
   11a38:	cmp	r3, #0
   11a3c:	ldrne	r3, [r6, #28]
   11a40:	ldrne	r2, [r6, #24]
   11a44:	strne	r2, [r3]
   11a48:	mov	r0, r6
   11a4c:	mov	r3, r9
   11a50:	mov	r2, sl
   11a54:	mov	r1, r7
   11a58:	bl	111cc <putc_unlocked@plt+0x254>
   11a5c:	add	r6, r6, #36	; 0x24
   11a60:	mov	r4, r0
   11a64:	b	119dc <argp_parse@@Base+0x2d8>
   11a68:	cmp	r4, #7
   11a6c:	beq	11a78 <argp_parse@@Base+0x374>
   11a70:	cmp	r4, #0
   11a74:	bne	119f4 <argp_parse@@Base+0x2f0>
   11a78:	ldr	r3, [fp, #-80]	; 0xffffffb0
   11a7c:	tst	r3, #2
   11a80:	moveq	r3, #1
   11a84:	streq	r3, [fp, #-144]	; 0xffffff70
   11a88:	beq	11ab0 <argp_parse@@Base+0x3ac>
   11a8c:	tst	r3, #1
   11a90:	mov	r2, #0
   11a94:	ldrne	r3, [fp, #-88]	; 0xffffffa8
   11a98:	str	r2, [fp, #-144]	; 0xffffff70
   11a9c:	subne	r3, r3, #4
   11aa0:	strne	r3, [fp, #-88]	; 0xffffffa8
   11aa4:	ldrne	r3, [fp, #-92]	; 0xffffffa4
   11aa8:	addne	r3, r3, #1
   11aac:	strne	r3, [fp, #-92]	; 0xffffffa4
   11ab0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   11ab4:	cmp	r8, r3
   11ab8:	bne	11adc <argp_parse@@Base+0x3d8>
   11abc:	ldr	r0, [r8]
   11ac0:	cmp	r0, #0
   11ac4:	beq	11adc <argp_parse@@Base+0x3d8>
   11ac8:	bl	12110 <argp_parse@@Base+0xa0c>
   11acc:	str	r0, [fp, #-56]	; 0xffffffc8
   11ad0:	add	r8, r5, #64	; 0x40
   11ad4:	ldr	r9, [pc, #1392]	; 1204c <argp_parse@@Base+0x948>
   11ad8:	b	11ca0 <argp_parse@@Base+0x59c>
   11adc:	ldr	r3, [pc, #1352]	; 1202c <argp_parse@@Base+0x928>
   11ae0:	ldr	r3, [r3]
   11ae4:	str	r3, [fp, #-56]	; 0xffffffc8
   11ae8:	b	11ad0 <argp_parse@@Base+0x3cc>
   11aec:	bl	12218 <argp_parse@@Base+0xb14>
   11af0:	b	11d0c <argp_parse@@Base+0x608>
   11af4:	cmp	r0, #63	; 0x3f
   11af8:	bne	11fbc <argp_parse@@Base+0x8b8>
   11afc:	ldr	r3, [fp, #-140]	; 0xffffff74
   11b00:	cmn	r3, #1
   11b04:	bne	11f60 <argp_parse@@Base+0x85c>
   11b08:	asrs	r3, r6, #24
   11b0c:	bne	11dc8 <argp_parse@@Base+0x6c4>
   11b10:	mov	r1, r6
   11b14:	ldr	r0, [fp, #-156]	; 0xffffff64
   11b18:	bl	10e94 <strchr@plt>
   11b1c:	subs	r2, r0, #0
   11b20:	beq	11b5c <argp_parse@@Base+0x458>
   11b24:	ldr	r0, [fp, #-112]	; 0xffffff90
   11b28:	ldr	r3, [fp, #-108]	; 0xffffff94
   11b2c:	cmp	r0, r3
   11b30:	bcs	11b5c <argp_parse@@Base+0x458>
   11b34:	ldr	r1, [r0, #8]
   11b38:	cmp	r2, r1
   11b3c:	bcs	11dc0 <argp_parse@@Base+0x6bc>
   11b40:	ldr	r3, [fp, #-136]	; 0xffffff78
   11b44:	mov	r2, r6
   11b48:	mov	r1, r8
   11b4c:	bl	111cc <putc_unlocked@plt+0x254>
   11b50:	cmp	r0, #7
   11b54:	mov	r4, r0
   11b58:	bne	11e54 <argp_parse@@Base+0x750>
   11b5c:	ldr	r3, [pc, #1260]	; 12050 <argp_parse@@Base+0x94c>
   11b60:	ldr	r1, [pc, #1260]	; 12054 <argp_parse@@Base+0x950>
   11b64:	mov	r2, r6
   11b68:	add	r0, r5, #64	; 0x40
   11b6c:	bl	15400 <argp_error@@Base>
   11b70:	sub	r7, r6, #1
   11b74:	mov	r4, #7
   11b78:	clz	r7, r7
   11b7c:	lsr	r7, r7, #5
   11b80:	cmp	r4, #7
   11b84:	movne	r7, #0
   11b88:	andeq	r7, r7, #1
   11b8c:	cmp	r7, #0
   11b90:	beq	11ed4 <argp_parse@@Base+0x7d0>
   11b94:	ldr	r3, [fp, #-84]	; 0xffffffac
   11b98:	ldr	r2, [fp, #-92]	; 0xffffffa4
   11b9c:	cmp	r3, r2
   11ba0:	bne	11f2c <argp_parse@@Base+0x828>
   11ba4:	mov	r4, #0
   11ba8:	ldr	r7, [fp, #-112]	; 0xffffff90
   11bac:	ldr	sl, [pc, #1188]	; 12058 <argp_parse@@Base+0x954>
   11bb0:	add	r8, r5, #64	; 0x40
   11bb4:	mov	r9, r4
   11bb8:	ldr	r6, [fp, #-108]	; 0xffffff94
   11bbc:	cmp	r7, r6
   11bc0:	bcc	11e60 <argp_parse@@Base+0x75c>
   11bc4:	ldr	r9, [pc, #1168]	; 1205c <argp_parse@@Base+0x958>
   11bc8:	sub	r6, r6, #36	; 0x24
   11bcc:	add	r7, r5, #64	; 0x40
   11bd0:	mov	r8, #0
   11bd4:	ldr	r3, [fp, #-112]	; 0xffffff90
   11bd8:	cmp	r6, r3
   11bdc:	bcc	11eb8 <argp_parse@@Base+0x7b4>
   11be0:	cmp	r4, #7
   11be4:	cmpne	r4, #0
   11be8:	beq	11e98 <argp_parse@@Base+0x794>
   11bec:	ldr	r3, [fp, #4]
   11bf0:	cmp	r3, #0
   11bf4:	beq	11ed4 <argp_parse@@Base+0x7d0>
   11bf8:	ldr	r2, [fp, #4]
   11bfc:	ldr	r3, [fp, #-84]	; 0xffffffac
   11c00:	str	r3, [r2]
   11c04:	b	11ecc <argp_parse@@Base+0x7c8>
   11c08:	ldr	r2, [fp, #-80]	; 0xffffffb0
   11c0c:	tst	r2, #4
   11c10:	bne	11b94 <argp_parse@@Base+0x490>
   11c14:	add	r2, r3, #1
   11c18:	str	r2, [fp, #-84]	; 0xffffffac
   11c1c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   11c20:	ldr	r3, [r2, r3, lsl #2]
   11c24:	str	r3, [fp, #-136]	; 0xffffff78
   11c28:	ldr	r3, [fp, #-136]	; 0xffffff78
   11c2c:	ldr	r7, [fp, #-84]	; 0xffffffac
   11c30:	str	r3, [fp, #-232]	; 0xffffff18
   11c34:	ldr	r6, [fp, #-112]	; 0xffffff90
   11c38:	mov	r3, #0
   11c3c:	mov	r4, #7
   11c40:	mov	sl, r3
   11c44:	sub	r7, r7, #1
   11c48:	str	r7, [fp, #-84]	; 0xffffffac
   11c4c:	ldr	r2, [fp, #-108]	; 0xffffff94
   11c50:	cmp	r6, r2
   11c54:	movcs	r2, #0
   11c58:	movcc	r2, #1
   11c5c:	cmp	r4, #7
   11c60:	movne	r2, #0
   11c64:	cmp	r2, #0
   11c68:	bne	11d60 <argp_parse@@Base+0x65c>
   11c6c:	cmp	r4, #0
   11c70:	bne	11e44 <argp_parse@@Base+0x740>
   11c74:	cmp	r3, r9
   11c78:	ldreq	r3, [fp, #-92]	; 0xffffffa4
   11c7c:	streq	r3, [fp, #-84]	; 0xffffffac
   11c80:	ldr	r3, [fp, #-84]	; 0xffffffac
   11c84:	cmp	r7, r3
   11c88:	sublt	r7, r3, r7
   11c8c:	ldrlt	r3, [r6, #-24]	; 0xffffffe8
   11c90:	movge	r3, #1
   11c94:	addlt	r7, r3, r7
   11c98:	strlt	r7, [r6, #-24]	; 0xffffffe8
   11c9c:	strge	r3, [fp, #-100]	; 0xffffff9c
   11ca0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   11ca4:	ldr	r3, [fp, #-84]	; 0xffffffac
   11ca8:	cmp	r2, #0
   11cac:	beq	11cbc <argp_parse@@Base+0x5b8>
   11cb0:	cmp	r2, r3
   11cb4:	movgt	r2, #0
   11cb8:	strgt	r2, [fp, #-72]	; 0xffffffb8
   11cbc:	ldr	r2, [fp, #-100]	; 0xffffff9c
   11cc0:	cmp	r2, #0
   11cc4:	beq	11d4c <argp_parse@@Base+0x648>
   11cc8:	ldr	r7, [fp, #-72]	; 0xffffffb8
   11ccc:	cmp	r7, #0
   11cd0:	bne	11d4c <argp_parse@@Base+0x648>
   11cd4:	str	r3, [fp, #-148]	; 0xffffff6c
   11cd8:	mvn	r3, #0
   11cdc:	str	r3, [fp, #-140]	; 0xffffff74
   11ce0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   11ce4:	str	r7, [sp]
   11ce8:	tst	r3, #64	; 0x40
   11cec:	add	r3, r5, #12
   11cf0:	str	r3, [sp, #4]
   11cf4:	ldr	r2, [fp, #-156]	; 0xffffff64
   11cf8:	ldr	r3, [fp, #-152]	; 0xffffff68
   11cfc:	ldr	r1, [fp, #-88]	; 0xffffffa8
   11d00:	ldr	r0, [fp, #-92]	; 0xffffffa4
   11d04:	beq	11aec <argp_parse@@Base+0x3e8>
   11d08:	bl	12264 <argp_parse@@Base+0xb60>
   11d0c:	ldr	r4, [fp, #-148]	; 0xffffff6c
   11d10:	cmn	r0, #1
   11d14:	mov	r6, r0
   11d18:	str	r4, [fp, #-84]	; 0xffffffac
   11d1c:	bne	11af4 <argp_parse@@Base+0x3f0>
   11d20:	mov	r3, #0
   11d24:	cmp	r4, #1
   11d28:	str	r3, [fp, #-100]	; 0xffffff9c
   11d2c:	ble	11d4c <argp_parse@@Base+0x648>
   11d30:	ldr	r2, [fp, #-88]	; 0xffffffa8
   11d34:	sub	r3, r4, #-1073741823	; 0xc0000001
   11d38:	ldr	r1, [pc, #800]	; 12060 <argp_parse@@Base+0x95c>
   11d3c:	ldr	r0, [r2, r3, lsl #2]
   11d40:	bl	10d5c <strcmp@plt>
   11d44:	cmp	r0, #0
   11d48:	streq	r4, [fp, #-72]	; 0xffffffb8
   11d4c:	ldr	r3, [fp, #-84]	; 0xffffffac
   11d50:	ldr	r2, [fp, #-92]	; 0xffffffa4
   11d54:	cmp	r3, r2
   11d58:	bge	11b94 <argp_parse@@Base+0x490>
   11d5c:	b	11c08 <argp_parse@@Base+0x504>
   11d60:	ldr	r3, [fp, #-84]	; 0xffffffac
   11d64:	mov	r2, sl
   11d68:	add	r3, r3, #1
   11d6c:	str	r3, [fp, #-84]	; 0xffffffac
   11d70:	mov	r1, r8
   11d74:	ldr	r3, [fp, #-232]	; 0xffffff18
   11d78:	mov	r0, r6
   11d7c:	bl	111cc <putc_unlocked@plt+0x254>
   11d80:	cmp	r0, #7
   11d84:	mov	r4, r0
   11d88:	movne	r3, sl
   11d8c:	bne	11db8 <argp_parse@@Base+0x6b4>
   11d90:	ldr	r3, [fp, #-84]	; 0xffffffac
   11d94:	mov	r2, r9
   11d98:	sub	r3, r3, #1
   11d9c:	str	r3, [fp, #-84]	; 0xffffffac
   11da0:	mov	r1, r8
   11da4:	mov	r3, sl
   11da8:	mov	r0, r6
   11dac:	bl	111cc <putc_unlocked@plt+0x254>
   11db0:	mov	r3, r9
   11db4:	mov	r4, r0
   11db8:	add	r6, r6, #36	; 0x24
   11dbc:	b	11c4c <argp_parse@@Base+0x548>
   11dc0:	add	r0, r0, #36	; 0x24
   11dc4:	b	11b2c <argp_parse@@Base+0x428>
   11dc8:	mov	r0, #36	; 0x24
   11dcc:	ands	r1, r6, #8388608	; 0x800000
   11dd0:	mul	r0, r0, r3
   11dd4:	ldr	ip, [fp, #-112]	; 0xffffff90
   11dd8:	movne	r1, #-16777216	; 0xff000000
   11ddc:	bic	r2, r6, #-16777216	; 0xff000000
   11de0:	sub	r0, r0, #36	; 0x24
   11de4:	orr	r2, r2, r1
   11de8:	ldr	r3, [fp, #-136]	; 0xffffff78
   11dec:	mov	r1, r8
   11df0:	add	r0, ip, r0
   11df4:	bl	111cc <putc_unlocked@plt+0x254>
   11df8:	cmp	r0, #7
   11dfc:	mov	r4, r0
   11e00:	bne	11e54 <argp_parse@@Base+0x750>
   11e04:	ldr	r3, [fp, #-152]	; 0xffffff68
   11e08:	b	11e1c <argp_parse@@Base+0x718>
   11e0c:	ldr	r2, [r3]
   11e10:	cmp	r2, #0
   11e14:	beq	11e28 <argp_parse@@Base+0x724>
   11e18:	add	r3, r3, #16
   11e1c:	ldr	r2, [r3, #12]
   11e20:	cmp	r2, r6
   11e24:	bne	11e0c <argp_parse@@Base+0x708>
   11e28:	ldr	r2, [r3]
   11e2c:	ldr	r1, [pc, #560]	; 12064 <argp_parse@@Base+0x960>
   11e30:	cmp	r2, #0
   11e34:	moveq	r2, r1
   11e38:	ldr	r3, [pc, #528]	; 12050 <argp_parse@@Base+0x94c>
   11e3c:	ldr	r1, [pc, #548]	; 12068 <argp_parse@@Base+0x964>
   11e40:	b	11b68 <argp_parse@@Base+0x464>
   11e44:	cmp	r4, #7
   11e48:	bne	11edc <argp_parse@@Base+0x7d8>
   11e4c:	mov	r6, #1
   11e50:	b	11b70 <argp_parse@@Base+0x46c>
   11e54:	cmp	r4, #0
   11e58:	beq	11ca0 <argp_parse@@Base+0x59c>
   11e5c:	b	11b80 <argp_parse@@Base+0x47c>
   11e60:	cmp	r4, #7
   11e64:	cmpne	r4, #0
   11e68:	bne	11bc4 <argp_parse@@Base+0x4c0>
   11e6c:	ldr	r3, [r7, #12]
   11e70:	cmp	r3, #0
   11e74:	bne	11e90 <argp_parse@@Base+0x78c>
   11e78:	mov	r3, r9
   11e7c:	mov	r2, sl
   11e80:	mov	r1, r8
   11e84:	mov	r0, r7
   11e88:	bl	111cc <putc_unlocked@plt+0x254>
   11e8c:	mov	r4, r0
   11e90:	add	r7, r7, #36	; 0x24
   11e94:	b	11bb8 <argp_parse@@Base+0x4b4>
   11e98:	mov	r0, r6
   11e9c:	mov	r3, r8
   11ea0:	mov	r2, r9
   11ea4:	mov	r1, r7
   11ea8:	bl	111cc <putc_unlocked@plt+0x254>
   11eac:	sub	r6, r6, #36	; 0x24
   11eb0:	mov	r4, r0
   11eb4:	b	11bd4 <argp_parse@@Base+0x4d0>
   11eb8:	cmp	r4, #7
   11ebc:	beq	11fc8 <argp_parse@@Base+0x8c4>
   11ec0:	ldr	r3, [fp, #4]
   11ec4:	cmp	r3, #0
   11ec8:	bne	11bf8 <argp_parse@@Base+0x4f4>
   11ecc:	cmp	r4, #0
   11ed0:	beq	11fd8 <argp_parse@@Base+0x8d4>
   11ed4:	cmp	r4, #7
   11ed8:	beq	11f60 <argp_parse@@Base+0x85c>
   11edc:	ldr	r6, [fp, #-112]	; 0xffffff90
   11ee0:	ldr	r9, [pc, #388]	; 1206c <argp_parse@@Base+0x968>
   11ee4:	add	r7, r5, #64	; 0x40
   11ee8:	mov	r8, #0
   11eec:	ldr	r3, [fp, #-108]	; 0xffffff94
   11ef0:	cmp	r6, r3
   11ef4:	bcc	11f78 <argp_parse@@Base+0x874>
   11ef8:	ldr	r6, [fp, #-108]	; 0xffffff94
   11efc:	ldr	r8, [pc, #364]	; 12070 <argp_parse@@Base+0x96c>
   11f00:	sub	r6, r6, #36	; 0x24
   11f04:	add	r5, r5, #64	; 0x40
   11f08:	mov	r7, #0
   11f0c:	ldr	r3, [fp, #-112]	; 0xffffff90
   11f10:	cmp	r6, r3
   11f14:	bcs	11fa0 <argp_parse@@Base+0x89c>
   11f18:	cmp	r4, #7
   11f1c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11f20:	moveq	r4, #22
   11f24:	bl	121a0 <argp_parse@@Base+0xa9c>
   11f28:	b	119f4 <argp_parse@@Base+0x2f0>
   11f2c:	ldr	r2, [fp, #4]
   11f30:	cmp	r2, #0
   11f34:	strne	r3, [r2]
   11f38:	bne	11fd8 <argp_parse@@Base+0x8d4>
   11f3c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   11f40:	tst	r3, #2
   11f44:	bne	11f60 <argp_parse@@Base+0x85c>
   11f48:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11f4c:	cmp	r0, #0
   11f50:	beq	11f60 <argp_parse@@Base+0x85c>
   11f54:	ldr	r2, [fp, #-56]	; 0xffffffc8
   11f58:	ldr	r1, [pc, #276]	; 12074 <argp_parse@@Base+0x970>
   11f5c:	bl	10ea0 <fprintf@plt>
   11f60:	mov	r2, #260	; 0x104
   11f64:	ldr	r1, [fp, #-52]	; 0xffffffcc
   11f68:	add	r0, r5, #64	; 0x40
   11f6c:	bl	15360 <argp_state_help@@Base>
   11f70:	mov	r4, #7
   11f74:	b	11edc <argp_parse@@Base+0x7d8>
   11f78:	mov	r0, r6
   11f7c:	mov	r3, r8
   11f80:	mov	r2, r9
   11f84:	mov	r1, r7
   11f88:	bl	111cc <putc_unlocked@plt+0x254>
   11f8c:	add	r6, r6, #36	; 0x24
   11f90:	b	11eec <argp_parse@@Base+0x7e8>
   11f94:	cmp	r4, #7
   11f98:	moveq	r4, #0
   11f9c:	b	11ef8 <argp_parse@@Base+0x7f4>
   11fa0:	mov	r0, r6
   11fa4:	mov	r3, r7
   11fa8:	mov	r2, r8
   11fac:	mov	r1, r5
   11fb0:	bl	111cc <putc_unlocked@plt+0x254>
   11fb4:	sub	r6, r6, #36	; 0x24
   11fb8:	b	11f0c <argp_parse@@Base+0x808>
   11fbc:	cmp	r0, #1
   11fc0:	bne	11b08 <argp_parse@@Base+0x404>
   11fc4:	b	11c28 <argp_parse@@Base+0x524>
   11fc8:	ldr	r3, [fp, #4]
   11fcc:	cmp	r3, #0
   11fd0:	movne	r4, #0
   11fd4:	bne	11bf8 <argp_parse@@Base+0x4f4>
   11fd8:	ldr	r6, [fp, #-108]	; 0xffffff94
   11fdc:	mov	r4, #0
   11fe0:	ldr	r9, [pc, #144]	; 12078 <argp_parse@@Base+0x974>
   11fe4:	sub	r6, r6, #36	; 0x24
   11fe8:	add	r7, r5, #64	; 0x40
   11fec:	mov	r8, r4
   11ff0:	ldr	r3, [fp, #-112]	; 0xffffff90
   11ff4:	cmp	r6, r3
   11ff8:	bcc	11f94 <argp_parse@@Base+0x890>
   11ffc:	cmp	r4, #7
   12000:	cmpne	r4, #0
   12004:	bne	11ef8 <argp_parse@@Base+0x7f4>
   12008:	mov	r0, r6
   1200c:	mov	r3, r8
   12010:	mov	r2, r9
   12014:	mov	r1, r7
   12018:	bl	111cc <putc_unlocked@plt+0x254>
   1201c:	sub	r6, r6, #36	; 0x24
   12020:	mov	r4, r0
   12024:	b	11ff0 <argp_parse@@Base+0x8ec>
   12028:	andeq	r8, r2, r4, asr #2
   1202c:	andeq	r8, r2, r0, asr #2
   12030:	andeq	r7, r1, ip, asr r1
   12034:	muleq	r2, r0, r1
   12038:	andeq	r8, r2, r8, asr r1
   1203c:	andeq	r7, r1, r8, ror r1
   12040:	andeq	r8, r2, r8, asr #2
   12044:	tsteq	r0, r3
   12048:	andeq	r8, r2, ip, asr #2
   1204c:	tsteq	r0, r6
   12050:	muleq	r1, r4, r1
   12054:	andeq	r7, r1, r3, lsr #5
   12058:	tsteq	r0, r2
   1205c:	tsteq	r0, r1
   12060:	andeq	r7, r1, r0, lsr #5
   12064:	muleq	r1, ip, r2
   12068:	andeq	r7, r1, fp, lsr #5
   1206c:	tsteq	r0, r5
   12070:	tsteq	r0, r7
   12074:			; <UNDEFINED> instruction: 0x000172b4
   12078:	tsteq	r0, r4
   1207c:	cmp	r1, #0
   12080:	ldrne	r2, [r1, #52]	; 0x34
   12084:	ldrne	r3, [r2, #48]	; 0x30
   12088:	ldrne	r2, [r2, #52]	; 0x34
   1208c:	bne	1209c <argp_parse@@Base+0x998>
   12090:	mov	r0, #0
   12094:	bx	lr
   12098:	add	r3, r3, #36	; 0x24
   1209c:	cmp	r3, r2
   120a0:	bcs	12090 <argp_parse@@Base+0x98c>
   120a4:	ldr	r1, [r3, #4]
   120a8:	cmp	r1, r0
   120ac:	bne	12098 <argp_parse@@Base+0x994>
   120b0:	ldr	r0, [r3, #24]
   120b4:	bx	lr
   120b8:	push	{r0, r1, r2, lr}
   120bc:	ldr	r1, [pc, #28]	; 120e0 <argp_parse@@Base+0x9dc>
   120c0:	ldr	r2, [pc, #28]	; 120e4 <argp_parse@@Base+0x9e0>
   120c4:	ldr	r3, [r1, #4]
   120c8:	str	r3, [sp]
   120cc:	ldr	r3, [pc, #20]	; 120e8 <argp_parse@@Base+0x9e4>
   120d0:	ldr	r1, [r1]
   120d4:	bl	1261c <argp_parse@@Base+0xf18>
   120d8:	add	sp, sp, #12
   120dc:	pop	{pc}		; (ldr pc, [sp], #4)
   120e0:	andeq	r8, r2, ip, asr r1
   120e4:	andeq	r7, r1, r4, lsl #7
   120e8:	andeq	r7, r1, r7, ror r3
   120ec:	ldr	r3, [pc, #16]	; 12104 <argp_parse@@Base+0xa00>
   120f0:	ldr	r2, [pc, #16]	; 12108 <argp_parse@@Base+0xa04>
   120f4:	str	r2, [r3]
   120f8:	ldr	r3, [pc, #12]	; 1210c <argp_parse@@Base+0xa08>
   120fc:	stm	r3, {r0, r1}
   12100:	bx	lr
   12104:	andeq	r8, r2, r8, asr r1
   12108:	strheq	r2, [r1], -r8
   1210c:	andeq	r8, r2, ip, asr r1
   12110:	mov	r2, r0
   12114:	push	{r4, lr}
   12118:	mov	r0, r2
   1211c:	ldrb	r3, [r2]
   12120:	add	r1, r2, #1
   12124:	cmp	r3, #47	; 0x2f
   12128:	beq	1214c <argp_parse@@Base+0xa48>
   1212c:	mov	r3, #0
   12130:	mov	lr, #1
   12134:	mov	r4, r3
   12138:	mov	ip, r2
   1213c:	ldrb	r1, [r2], #1
   12140:	cmp	r1, #0
   12144:	bne	12154 <argp_parse@@Base+0xa50>
   12148:	pop	{r4, pc}
   1214c:	mov	r2, r1
   12150:	b	12118 <argp_parse@@Base+0xa14>
   12154:	cmp	r1, #47	; 0x2f
   12158:	moveq	r3, lr
   1215c:	beq	12138 <argp_parse@@Base+0xa34>
   12160:	cmp	r3, #0
   12164:	movne	r0, ip
   12168:	movne	r3, r4
   1216c:	b	12138 <argp_parse@@Base+0xa34>
   12170:	push	{r4, lr}
   12174:	mov	r4, r0
   12178:	bl	10e88 <strlen@plt>
   1217c:	cmp	r0, #1
   12180:	popls	{r4, pc}
   12184:	sub	r3, r0, #1
   12188:	ldrb	r2, [r4, r3]
   1218c:	cmp	r2, #47	; 0x2f
   12190:	beq	12198 <argp_parse@@Base+0xa94>
   12194:	pop	{r4, pc}
   12198:	mov	r0, r3
   1219c:	b	1217c <argp_parse@@Base+0xa78>
   121a0:	push	{r0, r1, r2, r4, r5, lr}
   121a4:	mov	r5, r0
   121a8:	bl	10eac <__errno_location@plt>
   121ac:	ldr	r3, [r0]
   121b0:	mov	r4, r0
   121b4:	str	r3, [sp]
   121b8:	str	r3, [sp, #4]
   121bc:	mov	r3, #0
   121c0:	str	r3, [r0]
   121c4:	mov	r0, r5
   121c8:	bl	10d8c <free@plt>
   121cc:	ldr	r3, [r4]
   121d0:	add	r2, sp, #8
   121d4:	cmp	r3, #0
   121d8:	moveq	r3, #4
   121dc:	movne	r3, #0
   121e0:	add	r3, r2, r3
   121e4:	ldr	r3, [r3, #-8]
   121e8:	str	r3, [r4]
   121ec:	add	sp, sp, #12
   121f0:	pop	{r4, r5, pc}
   121f4:	push	{r0, r1, r2, r3, r4, lr}
   121f8:	mov	ip, #0
   121fc:	str	ip, [sp, #8]
   12200:	str	ip, [sp, #4]
   12204:	ldr	ip, [sp, #24]
   12208:	str	ip, [sp]
   1220c:	bl	15ee4 <argp_error@@Base+0xae4>
   12210:	add	sp, sp, #20
   12214:	pop	{pc}		; (ldr pc, [sp], #4)
   12218:	push	{r0, r1, r2, r3, r4, lr}
   1221c:	mov	ip, #0
   12220:	ldr	lr, [sp, #28]
   12224:	str	ip, [sp, #12]
   12228:	stmib	sp, {ip, lr}
   1222c:	ldr	ip, [sp, #24]
   12230:	str	ip, [sp]
   12234:	bl	159ec <argp_error@@Base+0x5ec>
   12238:	add	sp, sp, #20
   1223c:	pop	{pc}		; (ldr pc, [sp], #4)
   12240:	push	{r0, r1, r2, r3, r4, lr}
   12244:	mov	ip, #1
   12248:	mov	lr, #0
   1224c:	stmib	sp, {ip, lr}
   12250:	ldr	ip, [sp, #24]
   12254:	str	ip, [sp]
   12258:	bl	15ee4 <argp_error@@Base+0xae4>
   1225c:	add	sp, sp, #20
   12260:	pop	{pc}		; (ldr pc, [sp], #4)
   12264:	push	{r0, r1, r2, r3, r4, lr}
   12268:	mov	ip, #0
   1226c:	str	ip, [sp, #12]
   12270:	ldr	ip, [sp, #28]
   12274:	str	ip, [sp, #8]
   12278:	mov	ip, #1
   1227c:	str	ip, [sp, #4]
   12280:	ldr	ip, [sp, #24]
   12284:	str	ip, [sp]
   12288:	bl	159ec <argp_error@@Base+0x5ec>
   1228c:	add	sp, sp, #20
   12290:	pop	{pc}		; (ldr pc, [sp], #4)
   12294:	push	{r4, r5, r6, lr}
   12298:	subs	r5, r0, #0
   1229c:	bne	122b4 <argp_parse@@Base+0xbb0>
   122a0:	ldr	r3, [pc, #124]	; 12324 <argp_parse@@Base+0xc20>
   122a4:	ldr	r0, [pc, #124]	; 12328 <argp_parse@@Base+0xc24>
   122a8:	ldr	r1, [r3]
   122ac:	bl	10f48 <fputs@plt>
   122b0:	bl	10f60 <abort@plt>
   122b4:	mov	r1, #47	; 0x2f
   122b8:	bl	10edc <strrchr@plt>
   122bc:	cmp	r0, #0
   122c0:	addne	r4, r0, #1
   122c4:	moveq	r4, r5
   122c8:	sub	r3, r4, r5
   122cc:	cmp	r3, #6
   122d0:	ble	12310 <argp_parse@@Base+0xc0c>
   122d4:	mov	r2, #7
   122d8:	ldr	r1, [pc, #76]	; 1232c <argp_parse@@Base+0xc28>
   122dc:	sub	r0, r4, #7
   122e0:	bl	10f54 <strncmp@plt>
   122e4:	cmp	r0, #0
   122e8:	bne	12310 <argp_parse@@Base+0xc0c>
   122ec:	mov	r2, #3
   122f0:	ldr	r1, [pc, #56]	; 12330 <argp_parse@@Base+0xc2c>
   122f4:	mov	r0, r4
   122f8:	bl	10f54 <strncmp@plt>
   122fc:	cmp	r0, #0
   12300:	movne	r5, r4
   12304:	ldreq	r3, [pc, #40]	; 12334 <argp_parse@@Base+0xc30>
   12308:	addeq	r5, r4, #3
   1230c:	streq	r5, [r3]
   12310:	ldr	r3, [pc, #32]	; 12338 <argp_parse@@Base+0xc34>
   12314:	str	r5, [r3]
   12318:	ldr	r3, [pc, #28]	; 1233c <argp_parse@@Base+0xc38>
   1231c:	str	r5, [r3]
   12320:	pop	{r4, r5, r6, pc}
   12324:	andeq	r8, r2, r8, asr #2
   12328:	muleq	r1, r2, r3
   1232c:	andeq	r7, r1, sl, asr #7
   12330:	ldrdeq	r7, [r1], -r2
   12334:	andeq	r8, r2, r0, asr #2
   12338:	andeq	r8, r2, r4, ror #2
   1233c:	andeq	r8, r2, r4, asr #2
   12340:	push	{r4, r5, r6, lr}
   12344:	sub	sp, sp, #32
   12348:	cmp	r1, #0
   1234c:	mov	r5, r0
   12350:	ldr	r4, [sp, #48]	; 0x30
   12354:	ldr	r6, [sp, #52]	; 0x34
   12358:	beq	123e0 <argp_parse@@Base+0xcdc>
   1235c:	str	r3, [sp]
   12360:	mov	r3, r2
   12364:	mov	r2, r1
   12368:	ldr	r1, [pc, #616]	; 125d8 <argp_parse@@Base+0xed4>
   1236c:	bl	10ea0 <fprintf@plt>
   12370:	ldr	r3, [pc, #612]	; 125dc <argp_parse@@Base+0xed8>
   12374:	ldr	r2, [pc, #612]	; 125e0 <argp_parse@@Base+0xedc>
   12378:	ldr	r1, [pc, #612]	; 125e4 <argp_parse@@Base+0xee0>
   1237c:	mov	r0, r5
   12380:	bl	10ea0 <fprintf@plt>
   12384:	mov	r1, r5
   12388:	mov	r0, #10
   1238c:	bl	10ef4 <fputc@plt>
   12390:	ldr	r1, [pc, #592]	; 125e8 <argp_parse@@Base+0xee4>
   12394:	ldr	r2, [pc, #592]	; 125ec <argp_parse@@Base+0xee8>
   12398:	mov	r0, r5
   1239c:	bl	10ea0 <fprintf@plt>
   123a0:	mov	r1, r5
   123a4:	mov	r0, #10
   123a8:	bl	10ef4 <fputc@plt>
   123ac:	cmp	r6, #9
   123b0:	ldrls	pc, [pc, r6, lsl #2]
   123b4:	b	12594 <argp_parse@@Base+0xe90>
   123b8:	andeq	r2, r1, ip, lsl #9
   123bc:	andeq	r2, r1, ip, ror #7
   123c0:	andeq	r2, r1, r4, lsl #8
   123c4:	andeq	r2, r1, ip, lsl r4
   123c8:	andeq	r2, r1, ip, lsr r4
   123cc:	andeq	r2, r1, r4, ror #8
   123d0:	muleq	r1, r4, r4
   123d4:	andeq	r2, r1, r8, asr #9
   123d8:	andeq	r2, r1, r4, lsl #10
   123dc:	andeq	r2, r1, r8, asr #10
   123e0:	ldr	r1, [pc, #520]	; 125f0 <argp_parse@@Base+0xeec>
   123e4:	bl	10ea0 <fprintf@plt>
   123e8:	b	12370 <argp_parse@@Base+0xc6c>
   123ec:	ldr	r2, [r4]
   123f0:	ldr	r1, [pc, #508]	; 125f4 <argp_parse@@Base+0xef0>
   123f4:	mov	r0, r5
   123f8:	add	sp, sp, #32
   123fc:	pop	{r4, r5, r6, lr}
   12400:	b	10ea0 <fprintf@plt>
   12404:	ldm	r4, {r2, r3}
   12408:	ldr	r1, [pc, #488]	; 125f8 <argp_parse@@Base+0xef4>
   1240c:	mov	r0, r5
   12410:	add	sp, sp, #32
   12414:	pop	{r4, r5, r6, lr}
   12418:	b	10ea0 <fprintf@plt>
   1241c:	ldr	r3, [r4, #8]
   12420:	ldr	r1, [pc, #468]	; 125fc <argp_parse@@Base+0xef8>
   12424:	str	r3, [sp, #48]	; 0x30
   12428:	mov	r0, r5
   1242c:	ldm	r4, {r2, r3}
   12430:	add	sp, sp, #32
   12434:	pop	{r4, r5, r6, lr}
   12438:	b	10ea0 <fprintf@plt>
   1243c:	ldr	r3, [r4, #12]
   12440:	ldr	r1, [pc, #440]	; 12600 <argp_parse@@Base+0xefc>
   12444:	str	r3, [sp, #52]	; 0x34
   12448:	ldr	r3, [r4, #8]
   1244c:	mov	r0, r5
   12450:	str	r3, [sp, #48]	; 0x30
   12454:	ldm	r4, {r2, r3}
   12458:	add	sp, sp, #32
   1245c:	pop	{r4, r5, r6, lr}
   12460:	b	10ea0 <fprintf@plt>
   12464:	ldr	r3, [r4, #16]
   12468:	ldr	r1, [pc, #404]	; 12604 <argp_parse@@Base+0xf00>
   1246c:	str	r3, [sp, #8]
   12470:	ldr	r3, [r4, #12]
   12474:	mov	r0, r5
   12478:	str	r3, [sp, #4]
   1247c:	ldr	r3, [r4, #8]
   12480:	str	r3, [sp]
   12484:	ldm	r4, {r2, r3}
   12488:	bl	10ea0 <fprintf@plt>
   1248c:	add	sp, sp, #32
   12490:	pop	{r4, r5, r6, pc}
   12494:	ldr	r3, [r4, #20]
   12498:	ldr	r1, [pc, #360]	; 12608 <argp_parse@@Base+0xf04>
   1249c:	str	r3, [sp, #12]
   124a0:	ldr	r3, [r4, #16]
   124a4:	mov	r0, r5
   124a8:	str	r3, [sp, #8]
   124ac:	ldr	r3, [r4, #12]
   124b0:	str	r3, [sp, #4]
   124b4:	ldr	r3, [r4, #8]
   124b8:	str	r3, [sp]
   124bc:	ldm	r4, {r2, r3}
   124c0:	bl	10ea0 <fprintf@plt>
   124c4:	b	1248c <argp_parse@@Base+0xd88>
   124c8:	ldr	r3, [r4, #24]
   124cc:	ldr	r1, [pc, #312]	; 1260c <argp_parse@@Base+0xf08>
   124d0:	str	r3, [sp, #16]
   124d4:	ldr	r3, [r4, #20]
   124d8:	mov	r0, r5
   124dc:	str	r3, [sp, #12]
   124e0:	ldr	r3, [r4, #16]
   124e4:	str	r3, [sp, #8]
   124e8:	ldr	r3, [r4, #12]
   124ec:	str	r3, [sp, #4]
   124f0:	ldr	r3, [r4, #8]
   124f4:	str	r3, [sp]
   124f8:	ldm	r4, {r2, r3}
   124fc:	bl	10ea0 <fprintf@plt>
   12500:	b	1248c <argp_parse@@Base+0xd88>
   12504:	ldr	r3, [r4, #28]
   12508:	ldr	r1, [pc, #256]	; 12610 <argp_parse@@Base+0xf0c>
   1250c:	str	r3, [sp, #20]
   12510:	ldr	r3, [r4, #24]
   12514:	mov	r0, r5
   12518:	str	r3, [sp, #16]
   1251c:	ldr	r3, [r4, #20]
   12520:	str	r3, [sp, #12]
   12524:	ldr	r3, [r4, #16]
   12528:	str	r3, [sp, #8]
   1252c:	ldr	r3, [r4, #12]
   12530:	str	r3, [sp, #4]
   12534:	ldr	r3, [r4, #8]
   12538:	str	r3, [sp]
   1253c:	ldm	r4, {r2, r3}
   12540:	bl	10ea0 <fprintf@plt>
   12544:	b	1248c <argp_parse@@Base+0xd88>
   12548:	ldr	r3, [r4, #32]
   1254c:	ldr	r1, [pc, #192]	; 12614 <argp_parse@@Base+0xf10>
   12550:	str	r3, [sp, #24]
   12554:	ldr	r3, [r4, #28]
   12558:	str	r3, [sp, #20]
   1255c:	ldr	r3, [r4, #24]
   12560:	str	r3, [sp, #16]
   12564:	ldr	r3, [r4, #20]
   12568:	str	r3, [sp, #12]
   1256c:	ldr	r3, [r4, #16]
   12570:	str	r3, [sp, #8]
   12574:	ldr	r3, [r4, #12]
   12578:	str	r3, [sp, #4]
   1257c:	ldr	r3, [r4, #8]
   12580:	str	r3, [sp]
   12584:	ldm	r4, {r2, r3}
   12588:	mov	r0, r5
   1258c:	bl	10ea0 <fprintf@plt>
   12590:	b	1248c <argp_parse@@Base+0xd88>
   12594:	ldr	r3, [r4, #32]
   12598:	ldr	r1, [pc, #120]	; 12618 <argp_parse@@Base+0xf14>
   1259c:	str	r3, [sp, #24]
   125a0:	ldr	r3, [r4, #28]
   125a4:	str	r3, [sp, #20]
   125a8:	ldr	r3, [r4, #24]
   125ac:	str	r3, [sp, #16]
   125b0:	ldr	r3, [r4, #20]
   125b4:	str	r3, [sp, #12]
   125b8:	ldr	r3, [r4, #16]
   125bc:	str	r3, [sp, #8]
   125c0:	ldr	r3, [r4, #12]
   125c4:	str	r3, [sp, #4]
   125c8:	ldr	r3, [r4, #8]
   125cc:	str	r3, [sp]
   125d0:	ldm	r4, {r2, r3}
   125d4:	b	12588 <argp_parse@@Base+0xe84>
   125d8:	ldrdeq	r7, [r1], -r6
   125dc:	andeq	r0, r0, r6, ror #15
   125e0:	andeq	r7, r1, r9, ror #7
   125e4:	ldrdeq	r7, [r1], -lr
   125e8:	andeq	r7, r1, pc, lsl #8
   125ec:	andeq	r7, r1, sp, ror #7
   125f0:	andeq	r7, r1, r2, ror #7
   125f4:			; <UNDEFINED> instruction: 0x000174ba
   125f8:	andeq	r7, r1, sl, asr #9
   125fc:	andeq	r7, r1, r1, ror #9
   12600:	strdeq	r7, [r1], -sp
   12604:	andeq	r7, r1, sp, lsl r5
   12608:	andeq	r7, r1, r1, asr #10
   1260c:	andeq	r7, r1, r9, ror #10
   12610:	muleq	r1, r5, r5
   12614:	andeq	r7, r1, r5, asr #11
   12618:	strdeq	r7, [r1], -r9
   1261c:	push	{r0, r1, r4, lr}
   12620:	mov	ip, #0
   12624:	ldr	lr, [sp, #16]
   12628:	ldr	r4, [lr, ip, lsl #2]
   1262c:	cmp	r4, #0
   12630:	bne	12648 <argp_parse@@Base+0xf44>
   12634:	str	ip, [sp, #4]
   12638:	str	lr, [sp]
   1263c:	bl	12340 <argp_parse@@Base+0xc3c>
   12640:	add	sp, sp, #8
   12644:	pop	{r4, pc}
   12648:	add	ip, ip, #1
   1264c:	b	12628 <argp_parse@@Base+0xf24>
   12650:	push	{r4, r5, lr}
   12654:	sub	sp, sp, #52	; 0x34
   12658:	mov	ip, #0
   1265c:	ldr	r5, [sp, #64]	; 0x40
   12660:	add	lr, sp, #8
   12664:	ldr	r4, [r5, ip, lsl #2]
   12668:	cmp	r4, #0
   1266c:	str	r4, [lr, ip, lsl #2]
   12670:	beq	12680 <argp_parse@@Base+0xf7c>
   12674:	add	ip, ip, #1
   12678:	cmp	ip, #10
   1267c:	bne	12664 <argp_parse@@Base+0xf60>
   12680:	str	ip, [sp, #4]
   12684:	str	lr, [sp]
   12688:	bl	12340 <argp_parse@@Base+0xc3c>
   1268c:	add	sp, sp, #52	; 0x34
   12690:	pop	{r4, r5, pc}
   12694:	push	{r3}		; (str r3, [sp, #-4]!)
   12698:	push	{r0, r1, r2, r3, lr}
   1269c:	add	r3, sp, #24
   126a0:	str	r3, [sp, #12]
   126a4:	str	r3, [sp]
   126a8:	ldr	r3, [sp, #20]
   126ac:	bl	12650 <argp_parse@@Base+0xf4c>
   126b0:	add	sp, sp, #16
   126b4:	pop	{lr}		; (ldr lr, [sp], #4)
   126b8:	add	sp, sp, #4
   126bc:	bx	lr
   126c0:	ldr	r3, [pc, #56]	; 12700 <argp_parse@@Base+0xffc>
   126c4:	push	{r4, lr}
   126c8:	mov	r0, #10
   126cc:	ldr	r1, [r3]
   126d0:	bl	10ef4 <fputc@plt>
   126d4:	ldr	r1, [pc, #40]	; 12704 <argp_parse@@Base+0x1000>
   126d8:	ldr	r0, [pc, #40]	; 12708 <argp_parse@@Base+0x1004>
   126dc:	bl	10d68 <printf@plt>
   126e0:	ldr	r1, [pc, #36]	; 1270c <argp_parse@@Base+0x1008>
   126e4:	ldr	r2, [pc, #36]	; 12710 <argp_parse@@Base+0x100c>
   126e8:	ldr	r0, [pc, #36]	; 12714 <argp_parse@@Base+0x1010>
   126ec:	bl	10d68 <printf@plt>
   126f0:	ldr	r1, [pc, #32]	; 12718 <argp_parse@@Base+0x1014>
   126f4:	ldr	r0, [pc, #32]	; 1271c <argp_parse@@Base+0x1018>
   126f8:	pop	{r4, lr}
   126fc:	b	10d68 <printf@plt>
   12700:	andeq	r8, r2, ip, asr #2
   12704:	andeq	r7, r1, r5, lsr r6
   12708:	andeq	r7, r1, fp, asr #12
   1270c:	andeq	r7, r1, r4, lsl #7
   12710:	andeq	r7, r1, pc, asr r6
   12714:	andeq	r7, r1, r6, lsl #13
   12718:	muleq	r1, sl, r6
   1271c:			; <UNDEFINED> instruction: 0x000176b7
   12720:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12724:	sub	sp, sp, #112	; 0x70
   12728:	mov	r3, #100	; 0x64
   1272c:	str	r3, [sp, #8]
   12730:	bl	10eac <__errno_location@plt>
   12734:	mov	r4, #0
   12738:	ldr	r9, [pc, #188]	; 127fc <argp_parse@@Base+0x10f8>
   1273c:	add	r5, sp, #12
   12740:	mov	r7, r4
   12744:	mov	r8, r0
   12748:	ldr	r6, [sp, #8]
   1274c:	mov	r0, r5
   12750:	sub	r6, r6, #1
   12754:	mov	r1, r6
   12758:	strb	r7, [r5, r6]
   1275c:	str	r7, [r8]
   12760:	bl	10e04 <gethostname@plt>
   12764:	subs	sl, r0, #0
   12768:	bne	127a4 <argp_parse@@Base+0x10a0>
   1276c:	mov	r0, r5
   12770:	bl	10e88 <strlen@plt>
   12774:	add	r1, r0, #1
   12778:	cmp	r6, r1
   1277c:	ble	127a0 <argp_parse@@Base+0x109c>
   12780:	cmp	r4, #0
   12784:	bne	12794 <argp_parse@@Base+0x1090>
   12788:	mov	r0, r5
   1278c:	bl	163a0 <argp_error@@Base+0xfa0>
   12790:	mov	r4, r0
   12794:	mov	r0, r4
   12798:	add	sp, sp, #112	; 0x70
   1279c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   127a0:	str	sl, [r8]
   127a4:	mov	r0, r4
   127a8:	bl	121a0 <argp_parse@@Base+0xa9c>
   127ac:	ldr	r2, [r8]
   127b0:	cmp	r2, #22
   127b4:	mvnls	r3, r9, lsr r2
   127b8:	movhi	r3, #1
   127bc:	cmp	r2, #36	; 0x24
   127c0:	moveq	r3, #0
   127c4:	andne	r3, r3, #1
   127c8:	cmp	r3, #0
   127cc:	bne	127f4 <argp_parse@@Base+0x10f0>
   127d0:	mov	r2, #1
   127d4:	str	r2, [sp]
   127d8:	mvn	r3, #0
   127dc:	add	r1, sp, #8
   127e0:	mov	r0, r7
   127e4:	bl	160e8 <argp_error@@Base+0xce8>
   127e8:	mov	r4, r0
   127ec:	mov	r5, r0
   127f0:	b	12748 <argp_parse@@Base+0x1044>
   127f4:	mov	r4, #0
   127f8:	b	12794 <argp_parse@@Base+0x1090>
   127fc:	subeq	r1, r0, r1
   12800:	cmp	r0, #0
   12804:	mov	r3, #0
   12808:	moveq	r0, #1
   1280c:	adds	r3, r3, #0
   12810:	movne	r3, #1
   12814:	cmp	r0, #0
   12818:	blt	12828 <argp_parse@@Base+0x1124>
   1281c:	cmp	r3, #0
   12820:	bne	12828 <argp_parse@@Base+0x1124>
   12824:	b	10e28 <malloc@plt>
   12828:	push	{r4, lr}
   1282c:	bl	10eac <__errno_location@plt>
   12830:	mov	r3, #12
   12834:	str	r3, [r0]
   12838:	mov	r0, #0
   1283c:	pop	{r4, pc}
   12840:	ldr	r2, [r0, #4]
   12844:	ldr	r3, [r0]
   12848:	cmp	r2, #0
   1284c:	add	r3, r3, #24
   12850:	bne	1285c <argp_parse@@Base+0x1158>
   12854:	mov	r0, r2
   12858:	bx	lr
   1285c:	ldr	r0, [r3, #-24]	; 0xffffffe8
   12860:	cmp	r0, #0
   12864:	beq	12874 <argp_parse@@Base+0x1170>
   12868:	ldr	r1, [r3, #-12]
   1286c:	tst	r1, #2
   12870:	bxeq	lr
   12874:	sub	r2, r2, #1
   12878:	b	12848 <argp_parse@@Base+0x1144>
   1287c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12880:	mov	sl, r3
   12884:	ldm	r0, {r5, r6, r7}
   12888:	mov	r3, #0
   1288c:	sub	sp, sp, #20
   12890:	mov	r8, r1
   12894:	mov	r9, r2
   12898:	mov	r4, r5
   1289c:	mov	fp, r3
   128a0:	adds	r2, r6, #0
   128a4:	movne	r2, #1
   128a8:	cmp	r3, #0
   128ac:	movne	r2, #0
   128b0:	cmp	r2, #0
   128b4:	bne	128c4 <argp_parse@@Base+0x11c0>
   128b8:	mov	r0, r3
   128bc:	add	sp, sp, #20
   128c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   128c4:	ldr	r2, [r4, #12]
   128c8:	ands	r3, r2, #8
   128cc:	str	r2, [sp, #12]
   128d0:	movne	r3, fp
   128d4:	bne	12914 <argp_parse@@Base+0x1210>
   128d8:	ldr	r1, [r4, #4]
   128dc:	sub	r0, r1, #1
   128e0:	cmp	r0, #254	; 0xfe
   128e4:	str	r1, [sp, #8]
   128e8:	bhi	12914 <argp_parse@@Base+0x1210>
   128ec:	str	r3, [sp, #4]
   128f0:	bl	10e70 <__ctype_b_loc@plt>
   128f4:	ldr	r1, [sp, #8]
   128f8:	ldr	r3, [sp, #4]
   128fc:	ldr	r2, [sp, #12]
   12900:	ldr	ip, [r0]
   12904:	lsl	r0, r1, #1
   12908:	ldrh	r0, [ip, r0]
   1290c:	tst	r0, #16384	; 0x4000
   12910:	bne	12920 <argp_parse@@Base+0x121c>
   12914:	add	r4, r4, #24
   12918:	sub	r6, r6, #1
   1291c:	b	128a0 <argp_parse@@Base+0x119c>
   12920:	ldrb	r0, [r7]
   12924:	cmp	r0, r1
   12928:	bne	12914 <argp_parse@@Base+0x1210>
   1292c:	tst	r2, #4
   12930:	moveq	r5, r4
   12934:	tst	r2, #2
   12938:	bne	12954 <argp_parse@@Base+0x1250>
   1293c:	mov	r3, sl
   12940:	mov	r2, r9
   12944:	mov	r1, r5
   12948:	mov	r0, r4
   1294c:	blx	r8
   12950:	mov	r3, r0
   12954:	add	r7, r7, #1
   12958:	b	12914 <argp_parse@@Base+0x1210>
   1295c:	ldr	r3, [r0, #12]
   12960:	ands	r3, r3, #8
   12964:	bne	1299c <argp_parse@@Base+0x1298>
   12968:	push	{r4, lr}
   1296c:	ldr	r4, [r0, #4]
   12970:	sub	r2, r4, #1
   12974:	cmp	r2, #254	; 0xfe
   12978:	bhi	12994 <argp_parse@@Base+0x1290>
   1297c:	bl	10e70 <__ctype_b_loc@plt>
   12980:	lsl	r3, r4, #1
   12984:	ldr	r2, [r0]
   12988:	ldrh	r3, [r2, r3]
   1298c:	ands	r3, r3, #16384	; 0x4000
   12990:	movne	r3, r4
   12994:	mov	r0, r3
   12998:	pop	{r4, pc}
   1299c:	mov	r3, #0
   129a0:	mov	r0, r3
   129a4:	bx	lr
   129a8:	push	{r4, lr}
   129ac:	mov	r4, r0
   129b0:	bl	10e70 <__ctype_b_loc@plt>
   129b4:	ldr	r1, [r0]
   129b8:	ldr	r3, [r4]
   129bc:	ldrb	r0, [r3]
   129c0:	lsl	r2, r0, #1
   129c4:	ldrh	r2, [r1, r2]
   129c8:	tst	r2, #8192	; 0x2000
   129cc:	bne	129fc <argp_parse@@Base+0x12f8>
   129d0:	subs	r0, r0, #45	; 0x2d
   129d4:	movne	r0, #1
   129d8:	ldr	r2, [r4]
   129dc:	ldrb	r3, [r2]
   129e0:	cmp	r3, #0
   129e4:	popeq	{r4, pc}
   129e8:	lsl	r3, r3, #1
   129ec:	ldrh	r3, [r1, r3]
   129f0:	tst	r3, #8
   129f4:	beq	12a08 <argp_parse@@Base+0x1304>
   129f8:	pop	{r4, pc}
   129fc:	add	r3, r3, #1
   12a00:	str	r3, [r4]
   12a04:	b	129b8 <argp_parse@@Base+0x12b4>
   12a08:	add	r2, r2, #1
   12a0c:	str	r2, [r4]
   12a10:	b	129d8 <argp_parse@@Base+0x12d4>
   12a14:	push	{r4, r5, r6, lr}
   12a18:	mov	r4, r0
   12a1c:	ldr	r0, [r0, #12]
   12a20:	cmp	r0, #0
   12a24:	bne	12a50 <argp_parse@@Base+0x134c>
   12a28:	ldr	r3, [r4, #4]
   12a2c:	cmp	r3, #0
   12a30:	beq	12a44 <argp_parse@@Base+0x1340>
   12a34:	ldr	r0, [r4]
   12a38:	bl	121a0 <argp_parse@@Base+0xa9c>
   12a3c:	ldr	r0, [r4, #8]
   12a40:	bl	121a0 <argp_parse@@Base+0xa9c>
   12a44:	mov	r0, r4
   12a48:	pop	{r4, r5, r6, lr}
   12a4c:	b	121a0 <argp_parse@@Base+0xa9c>
   12a50:	ldr	r5, [r0, #24]
   12a54:	bl	121a0 <argp_parse@@Base+0xa9c>
   12a58:	mov	r0, r5
   12a5c:	b	12a20 <argp_parse@@Base+0x131c>
   12a60:	push	{r4, r5, r6, lr}
   12a64:	ldr	r5, [r0, #16]
   12a68:	ldr	r0, [r0, #8]
   12a6c:	cmp	r0, #0
   12a70:	beq	12a84 <argp_parse@@Base+0x1380>
   12a74:	mov	r1, #10
   12a78:	bl	10e94 <strchr@plt>
   12a7c:	adds	r0, r0, #0
   12a80:	movne	r0, #1
   12a84:	cmp	r5, #0
   12a88:	mov	r4, r0
   12a8c:	addne	r5, r5, #16
   12a90:	bne	12aa4 <argp_parse@@Base+0x13a0>
   12a94:	mov	r0, r4
   12a98:	pop	{r4, r5, r6, pc}
   12a9c:	bl	12a60 <argp_parse@@Base+0x135c>
   12aa0:	add	r4, r4, r0
   12aa4:	add	r5, r5, #16
   12aa8:	ldr	r0, [r5, #-32]	; 0xffffffe0
   12aac:	cmp	r0, #0
   12ab0:	bne	12a9c <argp_parse@@Base+0x1398>
   12ab4:	b	12a94 <argp_parse@@Base+0x1390>
   12ab8:	ldr	r2, [r0, #24]
   12abc:	ldr	r3, [r0, #28]
   12ac0:	push	{r4, r5, r6, r7, r8, lr}
   12ac4:	sub	r3, r3, r2
   12ac8:	ldr	r2, [r0, #16]
   12acc:	mov	r4, r0
   12ad0:	cmp	r3, r2
   12ad4:	mov	r5, r1
   12ad8:	bls	12ae0 <argp_parse@@Base+0x13dc>
   12adc:	bl	16554 <argp_error@@Base+0x1154>
   12ae0:	ldr	r1, [r4, #20]
   12ae4:	mov	r6, #1
   12ae8:	cmp	r1, #0
   12aec:	subge	r5, r5, r1
   12af0:	mov	r7, #32
   12af4:	cmp	r5, #0
   12af8:	bgt	12b00 <argp_parse@@Base+0x13fc>
   12afc:	pop	{r4, r5, r6, r7, r8, pc}
   12b00:	ldr	r2, [r4, #28]
   12b04:	ldr	r3, [r4, #32]
   12b08:	cmp	r2, r3
   12b0c:	bcs	12b28 <argp_parse@@Base+0x1424>
   12b10:	ldr	r3, [r4, #28]
   12b14:	add	r2, r3, #1
   12b18:	str	r2, [r4, #28]
   12b1c:	strb	r7, [r3]
   12b20:	sub	r5, r5, #1
   12b24:	b	12af4 <argp_parse@@Base+0x13f0>
   12b28:	mov	r1, r6
   12b2c:	mov	r0, r4
   12b30:	bl	169a4 <argp_error@@Base+0x15a4>
   12b34:	cmp	r0, #0
   12b38:	bne	12b10 <argp_parse@@Base+0x140c>
   12b3c:	b	12b20 <argp_parse@@Base+0x141c>
   12b40:	push	{r4, r5, r6, lr}
   12b44:	subs	r4, r2, #0
   12b48:	popeq	{r4, r5, r6, pc}
   12b4c:	ldr	r2, [r4, #20]
   12b50:	cmp	r2, #0
   12b54:	popeq	{r4, r5, r6, pc}
   12b58:	mov	r6, r1
   12b5c:	mov	r5, r0
   12b60:	mov	r1, r3
   12b64:	mov	r0, r4
   12b68:	bl	1207c <argp_parse@@Base+0x978>
   12b6c:	ldr	r3, [r4, #20]
   12b70:	mov	r1, r5
   12b74:	mov	r2, r0
   12b78:	mov	r0, r6
   12b7c:	pop	{r4, r5, r6, lr}
   12b80:	bx	r3
   12b84:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12b88:	mov	r4, r2
   12b8c:	ldr	r3, [r2, #16]
   12b90:	mov	r2, r1
   12b94:	ldr	r1, [pc, #440]	; 12d54 <argp_parse@@Base+0x1650>
   12b98:	mov	r7, r0
   12b9c:	bl	12b40 <argp_parse@@Base+0x143c>
   12ba0:	subs	r6, r0, #0
   12ba4:	beq	12cf8 <argp_parse@@Base+0x15f4>
   12ba8:	ldrb	r3, [r6]
   12bac:	cmp	r3, #0
   12bb0:	beq	12cec <argp_parse@@Base+0x15e8>
   12bb4:	ldr	r3, [r4, #8]
   12bb8:	ldr	r3, [r3]
   12bbc:	cmp	r3, #0
   12bc0:	beq	12bec <argp_parse@@Base+0x14e8>
   12bc4:	ldr	r5, [r4, #4]
   12bc8:	ldr	r2, [r5, #28]
   12bcc:	ldr	r3, [r5, #32]
   12bd0:	cmp	r2, r3
   12bd4:	bcs	12d0c <argp_parse@@Base+0x1608>
   12bd8:	ldr	r3, [r5, #28]
   12bdc:	add	r2, r3, #1
   12be0:	str	r2, [r5, #28]
   12be4:	mov	r2, #10
   12be8:	strb	r2, [r3]
   12bec:	ldr	r8, [pc, #356]	; 12d58 <argp_parse@@Base+0x1654>
   12bf0:	ldr	r0, [r4, #4]
   12bf4:	ldr	r1, [r8, #24]
   12bf8:	bl	12ab8 <argp_parse@@Base+0x13b4>
   12bfc:	ldr	r9, [r4, #4]
   12c00:	ldr	sl, [r8, #24]
   12c04:	ldr	r2, [r9, #24]
   12c08:	ldr	r3, [r9, #28]
   12c0c:	sub	r3, r3, r2
   12c10:	ldr	r2, [r9, #16]
   12c14:	cmp	r3, r2
   12c18:	bls	12c24 <argp_parse@@Base+0x1520>
   12c1c:	mov	r0, r9
   12c20:	bl	16554 <argp_error@@Base+0x1154>
   12c24:	ldr	r5, [r4, #4]
   12c28:	str	sl, [r9, #4]
   12c2c:	ldr	r8, [r8, #24]
   12c30:	ldr	r2, [r5, #24]
   12c34:	ldr	r3, [r5, #28]
   12c38:	sub	r3, r3, r2
   12c3c:	ldr	r2, [r5, #16]
   12c40:	cmp	r3, r2
   12c44:	bls	12c50 <argp_parse@@Base+0x154c>
   12c48:	mov	r0, r5
   12c4c:	bl	16554 <argp_error@@Base+0x1154>
   12c50:	str	r8, [r5, #12]
   12c54:	mov	r0, r6
   12c58:	bl	10e88 <strlen@plt>
   12c5c:	subs	r8, r0, #0
   12c60:	beq	12c98 <argp_parse@@Base+0x1594>
   12c64:	ldr	r5, [r4, #4]
   12c68:	ldr	r3, [r5, #28]
   12c6c:	ldr	r2, [r5, #32]
   12c70:	add	r3, r3, r8
   12c74:	cmp	r2, r3
   12c78:	bcc	12d24 <argp_parse@@Base+0x1620>
   12c7c:	mov	r2, r8
   12c80:	mov	r1, r6
   12c84:	ldr	r0, [r5, #28]
   12c88:	bl	10db0 <memcpy@plt>
   12c8c:	ldr	r3, [r5, #28]
   12c90:	add	r8, r3, r8
   12c94:	str	r8, [r5, #28]
   12c98:	ldr	r5, [r4, #4]
   12c9c:	ldr	r2, [r5, #24]
   12ca0:	ldr	r3, [r5, #28]
   12ca4:	sub	r3, r3, r2
   12ca8:	ldr	r2, [r5, #16]
   12cac:	cmp	r3, r2
   12cb0:	bls	12cbc <argp_parse@@Base+0x15b8>
   12cb4:	mov	r0, r5
   12cb8:	bl	16554 <argp_error@@Base+0x1154>
   12cbc:	mov	r3, #0
   12cc0:	str	r3, [r5, #4]
   12cc4:	ldr	r5, [r4, #4]
   12cc8:	ldr	r2, [r5, #28]
   12ccc:	ldr	r3, [r5, #32]
   12cd0:	cmp	r2, r3
   12cd4:	bcs	12d3c <argp_parse@@Base+0x1638>
   12cd8:	ldr	r3, [r5, #28]
   12cdc:	add	r2, r3, #1
   12ce0:	str	r2, [r5, #28]
   12ce4:	mov	r2, #10
   12ce8:	strb	r2, [r3]
   12cec:	ldr	r3, [r4, #8]
   12cf0:	mov	r2, #1
   12cf4:	str	r2, [r3, #4]
   12cf8:	cmp	r7, r6
   12cfc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12d00:	mov	r0, r6
   12d04:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   12d08:	b	121a0 <argp_parse@@Base+0xa9c>
   12d0c:	mov	r1, #1
   12d10:	mov	r0, r5
   12d14:	bl	169a4 <argp_error@@Base+0x15a4>
   12d18:	cmp	r0, #0
   12d1c:	bne	12bd8 <argp_parse@@Base+0x14d4>
   12d20:	b	12bec <argp_parse@@Base+0x14e8>
   12d24:	mov	r1, r8
   12d28:	mov	r0, r5
   12d2c:	bl	169a4 <argp_error@@Base+0x15a4>
   12d30:	cmp	r0, #0
   12d34:	bne	12c7c <argp_parse@@Base+0x1578>
   12d38:	b	12c98 <argp_parse@@Base+0x1594>
   12d3c:	mov	r1, #1
   12d40:	mov	r0, r5
   12d44:	bl	169a4 <argp_error@@Base+0x15a4>
   12d48:	cmp	r0, #0
   12d4c:	bne	12cd8 <argp_parse@@Base+0x15d4>
   12d50:	b	12cec <argp_parse@@Base+0x15e8>
   12d54:	andeq	r0, r0, #3
   12d58:	andeq	r8, r2, r0, lsl #2
   12d5c:	ldr	r3, [r1, #12]
   12d60:	push	{r4, r5, r6, r7, r8, lr}
   12d64:	cmp	r3, #0
   12d68:	mov	r7, r0
   12d6c:	mov	r4, r1
   12d70:	beq	12e88 <argp_parse@@Base+0x1784>
   12d74:	ldr	r2, [r1, #8]
   12d78:	ldr	r3, [r1]
   12d7c:	ldr	r8, [r2]
   12d80:	ldr	r2, [r2, #4]
   12d84:	ldr	r5, [r3, #16]
   12d88:	cmp	r2, #0
   12d8c:	cmpne	r8, #0
   12d90:	beq	12dcc <argp_parse@@Base+0x16c8>
   12d94:	ldr	r2, [r3, #12]
   12d98:	ldr	r3, [r8, #12]
   12d9c:	cmp	r2, r3
   12da0:	beq	12dcc <argp_parse@@Base+0x16c8>
   12da4:	ldr	r6, [r1, #4]
   12da8:	ldr	r2, [r6, #28]
   12dac:	ldr	r3, [r6, #32]
   12db0:	cmp	r2, r3
   12db4:	bcs	12e68 <argp_parse@@Base+0x1764>
   12db8:	ldr	r3, [r6, #28]
   12dbc:	add	r2, r3, #1
   12dc0:	str	r2, [r6, #28]
   12dc4:	mov	r2, #10
   12dc8:	strb	r2, [r3]
   12dcc:	cmp	r5, #0
   12dd0:	beq	12e50 <argp_parse@@Base+0x174c>
   12dd4:	ldr	r0, [r5]
   12dd8:	cmp	r0, #0
   12ddc:	beq	12e50 <argp_parse@@Base+0x174c>
   12de0:	ldrb	r3, [r0]
   12de4:	cmp	r3, #0
   12de8:	beq	12e50 <argp_parse@@Base+0x174c>
   12dec:	cmp	r8, #0
   12df0:	beq	12e14 <argp_parse@@Base+0x1710>
   12df4:	ldr	r3, [r8, #16]
   12df8:	cmp	r5, r3
   12dfc:	beq	12e50 <argp_parse@@Base+0x174c>
   12e00:	cmp	r3, #0
   12e04:	cmpne	r5, r3
   12e08:	bne	12e80 <argp_parse@@Base+0x177c>
   12e0c:	cmp	r5, r3
   12e10:	beq	12e50 <argp_parse@@Base+0x174c>
   12e14:	ldr	r3, [r4, #4]
   12e18:	mov	r2, r4
   12e1c:	ldr	r1, [r5, #16]
   12e20:	ldr	r6, [r3, #12]
   12e24:	bl	12b84 <argp_parse@@Base+0x1480>
   12e28:	ldr	r5, [r4, #4]
   12e2c:	ldr	r2, [r5, #24]
   12e30:	ldr	r3, [r5, #28]
   12e34:	sub	r3, r3, r2
   12e38:	ldr	r2, [r5, #16]
   12e3c:	cmp	r3, r2
   12e40:	bls	12e4c <argp_parse@@Base+0x1748>
   12e44:	mov	r0, r5
   12e48:	bl	16554 <argp_error@@Base+0x1154>
   12e4c:	str	r6, [r5, #12]
   12e50:	mov	r3, #0
   12e54:	str	r3, [r4, #12]
   12e58:	mov	r1, r7
   12e5c:	ldr	r0, [r4, #4]
   12e60:	pop	{r4, r5, r6, r7, r8, lr}
   12e64:	b	12ab8 <argp_parse@@Base+0x13b4>
   12e68:	mov	r1, #1
   12e6c:	mov	r0, r6
   12e70:	bl	169a4 <argp_error@@Base+0x15a4>
   12e74:	cmp	r0, #0
   12e78:	bne	12db8 <argp_parse@@Base+0x16b4>
   12e7c:	b	12dcc <argp_parse@@Base+0x16c8>
   12e80:	ldr	r3, [r3, #12]
   12e84:	b	12e00 <argp_parse@@Base+0x16fc>
   12e88:	ldr	r5, [r1, #4]
   12e8c:	ldr	r3, [r5, #28]
   12e90:	ldr	r2, [r5, #32]
   12e94:	add	r3, r3, #2
   12e98:	cmp	r2, r3
   12e9c:	bcc	12ec0 <argp_parse@@Base+0x17bc>
   12ea0:	ldr	r2, [pc, #48]	; 12ed8 <argp_parse@@Base+0x17d4>
   12ea4:	ldr	r3, [r5, #28]
   12ea8:	ldrh	r2, [r2]
   12eac:	strh	r2, [r3]
   12eb0:	ldr	r3, [r5, #28]
   12eb4:	add	r3, r3, #2
   12eb8:	str	r3, [r5, #28]
   12ebc:	b	12e58 <argp_parse@@Base+0x1754>
   12ec0:	mov	r1, #2
   12ec4:	mov	r0, r5
   12ec8:	bl	169a4 <argp_error@@Base+0x15a4>
   12ecc:	cmp	r0, #0
   12ed0:	bne	12ea0 <argp_parse@@Base+0x179c>
   12ed4:	b	12e58 <argp_parse@@Base+0x1754>
   12ed8:			; <UNDEFINED> instruction: 0x000177b1
   12edc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ee0:	sub	sp, sp, #28
   12ee4:	ldr	r7, [r0, #12]
   12ee8:	str	r3, [sp, #8]
   12eec:	cmp	r7, #0
   12ef0:	ldr	r3, [r0, #16]
   12ef4:	moveq	r5, r7
   12ef8:	mov	r8, r0
   12efc:	str	r1, [sp, #16]
   12f00:	mov	fp, r2
   12f04:	ldr	r4, [sp, #68]	; 0x44
   12f08:	str	r3, [sp, #12]
   12f0c:	moveq	r6, r5
   12f10:	beq	12f50 <argp_parse@@Base+0x184c>
   12f14:	mov	r1, #11
   12f18:	mov	r0, r7
   12f1c:	bl	10e94 <strchr@plt>
   12f20:	cmp	fp, #0
   12f24:	moveq	r5, r7
   12f28:	beq	12f38 <argp_parse@@Base+0x1834>
   12f2c:	cmp	r0, #0
   12f30:	addne	r5, r0, #1
   12f34:	moveq	r5, r0
   12f38:	cmp	r0, #0
   12f3c:	clz	r6, fp
   12f40:	lsr	r6, r6, #5
   12f44:	moveq	r6, #0
   12f48:	cmp	r6, #0
   12f4c:	subne	r6, r0, r7
   12f50:	ldr	r9, [r8, #20]
   12f54:	cmp	r9, #0
   12f58:	moveq	sl, r5
   12f5c:	beq	12fb0 <argp_parse@@Base+0x18ac>
   12f60:	cmp	r6, #0
   12f64:	beq	12f78 <argp_parse@@Base+0x1874>
   12f68:	mov	r0, r5
   12f6c:	mov	r1, r6
   12f70:	bl	10da4 <strndup@plt>
   12f74:	mov	r5, r0
   12f78:	ldr	r1, [sp, #16]
   12f7c:	mov	r0, r8
   12f80:	bl	1207c <argp_parse@@Base+0x978>
   12f84:	ldr	ip, [pc, #928]	; 1332c <argp_parse@@Base+0x1c28>
   12f88:	cmp	fp, #0
   12f8c:	mov	r1, r5
   12f90:	ldr	r3, [r8, #20]
   12f94:	mov	sl, r5
   12f98:	mov	r2, r0
   12f9c:	mov	r9, r0
   12fa0:	ldr	r0, [pc, #904]	; 13330 <argp_parse@@Base+0x1c2c>
   12fa4:	movne	r0, ip
   12fa8:	blx	r3
   12fac:	mov	r5, r0
   12fb0:	cmp	r5, #0
   12fb4:	moveq	r7, r5
   12fb8:	beq	13070 <argp_parse@@Base+0x196c>
   12fbc:	ldr	r3, [sp, #8]
   12fc0:	cmp	r3, #0
   12fc4:	beq	12fec <argp_parse@@Base+0x18e8>
   12fc8:	ldr	r2, [r4, #28]
   12fcc:	ldr	r3, [r4, #32]
   12fd0:	cmp	r2, r3
   12fd4:	bcs	1319c <argp_parse@@Base+0x1a98>
   12fd8:	ldr	r3, [r4, #28]
   12fdc:	add	r2, r3, #1
   12fe0:	str	r2, [r4, #28]
   12fe4:	mov	r2, #10
   12fe8:	strb	r2, [r3]
   12fec:	cmp	r6, #0
   12ff0:	sub	r3, r5, sl
   12ff4:	clz	r3, r3
   12ff8:	lsr	r3, r3, #5
   12ffc:	moveq	r3, #0
   13000:	cmp	r3, #0
   13004:	ldr	r3, [r4, #28]
   13008:	beq	131cc <argp_parse@@Base+0x1ac8>
   1300c:	ldr	r2, [r4, #32]
   13010:	add	r3, r3, r6
   13014:	cmp	r2, r3
   13018:	bcc	131b4 <argp_parse@@Base+0x1ab0>
   1301c:	mov	r2, r6
   13020:	mov	r1, sl
   13024:	ldr	r0, [r4, #28]
   13028:	bl	10db0 <memcpy@plt>
   1302c:	ldr	r3, [r4, #28]
   13030:	add	r3, r3, r6
   13034:	str	r3, [r4, #28]
   13038:	ldr	r2, [r4, #24]
   1303c:	ldr	r3, [r4, #28]
   13040:	sub	r3, r3, r2
   13044:	ldr	r2, [r4, #16]
   13048:	cmp	r3, r2
   1304c:	bls	13058 <argp_parse@@Base+0x1954>
   13050:	mov	r0, r4
   13054:	bl	16554 <argp_error@@Base+0x1154>
   13058:	ldr	r3, [r4, #20]
   1305c:	ldr	r2, [r4, #4]
   13060:	bic	r3, r3, r3, asr #31
   13064:	cmp	r2, r3
   13068:	bcc	1322c <argp_parse@@Base+0x1b28>
   1306c:	mov	r7, #1
   13070:	cmp	r5, #0
   13074:	cmpne	r5, sl
   13078:	beq	13084 <argp_parse@@Base+0x1980>
   1307c:	mov	r0, r5
   13080:	bl	121a0 <argp_parse@@Base+0xa9c>
   13084:	cmp	sl, #0
   13088:	cmpne	r6, #0
   1308c:	beq	130a4 <argp_parse@@Base+0x19a0>
   13090:	ldr	r3, [r8, #20]
   13094:	cmp	r3, #0
   13098:	beq	13180 <argp_parse@@Base+0x1a7c>
   1309c:	mov	r0, sl
   130a0:	bl	121a0 <argp_parse@@Base+0xa9c>
   130a4:	cmp	fp, #0
   130a8:	beq	13180 <argp_parse@@Base+0x1a7c>
   130ac:	ldr	r3, [r8, #20]
   130b0:	cmp	r3, #0
   130b4:	beq	13180 <argp_parse@@Base+0x1a7c>
   130b8:	mov	r2, r9
   130bc:	mov	r1, #0
   130c0:	ldr	r0, [pc, #620]	; 13334 <argp_parse@@Base+0x1c30>
   130c4:	blx	r3
   130c8:	subs	r5, r0, #0
   130cc:	beq	13180 <argp_parse@@Base+0x1a7c>
   130d0:	ldr	r3, [sp, #8]
   130d4:	orrs	r3, r7, r3
   130d8:	beq	13100 <argp_parse@@Base+0x19fc>
   130dc:	ldr	r2, [r4, #28]
   130e0:	ldr	r3, [r4, #32]
   130e4:	cmp	r2, r3
   130e8:	bcs	1326c <argp_parse@@Base+0x1b68>
   130ec:	ldr	r3, [r4, #28]
   130f0:	add	r2, r3, #1
   130f4:	str	r2, [r4, #28]
   130f8:	mov	r2, #10
   130fc:	strb	r2, [r3]
   13100:	mov	r0, r5
   13104:	bl	10e88 <strlen@plt>
   13108:	subs	r6, r0, #0
   1310c:	beq	13140 <argp_parse@@Base+0x1a3c>
   13110:	ldr	r3, [r4, #28]
   13114:	ldr	r2, [r4, #32]
   13118:	add	r3, r3, r6
   1311c:	cmp	r2, r3
   13120:	bcc	13284 <argp_parse@@Base+0x1b80>
   13124:	mov	r2, r6
   13128:	mov	r1, r5
   1312c:	ldr	r0, [r4, #28]
   13130:	bl	10db0 <memcpy@plt>
   13134:	ldr	r3, [r4, #28]
   13138:	add	r6, r3, r6
   1313c:	str	r6, [r4, #28]
   13140:	mov	r0, r5
   13144:	bl	121a0 <argp_parse@@Base+0xa9c>
   13148:	ldr	r2, [r4, #24]
   1314c:	ldr	r3, [r4, #28]
   13150:	sub	r3, r3, r2
   13154:	ldr	r2, [r4, #16]
   13158:	cmp	r3, r2
   1315c:	bls	13168 <argp_parse@@Base+0x1a64>
   13160:	mov	r0, r4
   13164:	bl	16554 <argp_error@@Base+0x1154>
   13168:	ldr	r3, [r4, #20]
   1316c:	ldr	r2, [r4, #4]
   13170:	bic	r3, r3, r3, asr #31
   13174:	cmp	r2, r3
   13178:	bcc	1329c <argp_parse@@Base+0x1b98>
   1317c:	mov	r7, #1
   13180:	ldr	r3, [sp, #12]
   13184:	cmp	r3, #0
   13188:	addne	r5, r3, #16
   1318c:	bne	13308 <argp_parse@@Base+0x1c04>
   13190:	mov	r0, r7
   13194:	add	sp, sp, #28
   13198:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1319c:	mov	r1, #1
   131a0:	mov	r0, r4
   131a4:	bl	169a4 <argp_error@@Base+0x15a4>
   131a8:	cmp	r0, #0
   131ac:	bne	12fd8 <argp_parse@@Base+0x18d4>
   131b0:	b	12fec <argp_parse@@Base+0x18e8>
   131b4:	mov	r1, r6
   131b8:	mov	r0, r4
   131bc:	bl	169a4 <argp_error@@Base+0x15a4>
   131c0:	cmp	r0, #0
   131c4:	bne	1301c <argp_parse@@Base+0x1918>
   131c8:	b	13038 <argp_parse@@Base+0x1934>
   131cc:	mov	r0, r5
   131d0:	str	r3, [sp, #20]
   131d4:	bl	10e88 <strlen@plt>
   131d8:	subs	r7, r0, #0
   131dc:	beq	13038 <argp_parse@@Base+0x1934>
   131e0:	ldr	r3, [sp, #20]
   131e4:	ldr	r2, [r4, #32]
   131e8:	add	r3, r3, r7
   131ec:	cmp	r2, r3
   131f0:	bcc	13214 <argp_parse@@Base+0x1b10>
   131f4:	mov	r2, r7
   131f8:	mov	r1, r5
   131fc:	ldr	r0, [r4, #28]
   13200:	bl	10db0 <memcpy@plt>
   13204:	ldr	r3, [r4, #28]
   13208:	add	r7, r3, r7
   1320c:	str	r7, [r4, #28]
   13210:	b	13038 <argp_parse@@Base+0x1934>
   13214:	mov	r1, r7
   13218:	mov	r0, r4
   1321c:	bl	169a4 <argp_error@@Base+0x15a4>
   13220:	cmp	r0, #0
   13224:	bne	131f4 <argp_parse@@Base+0x1af0>
   13228:	b	13038 <argp_parse@@Base+0x1934>
   1322c:	ldr	r2, [r4, #28]
   13230:	ldr	r3, [r4, #32]
   13234:	cmp	r2, r3
   13238:	bcs	13254 <argp_parse@@Base+0x1b50>
   1323c:	ldr	r3, [r4, #28]
   13240:	add	r2, r3, #1
   13244:	str	r2, [r4, #28]
   13248:	mov	r2, #10
   1324c:	strb	r2, [r3]
   13250:	b	1306c <argp_parse@@Base+0x1968>
   13254:	mov	r1, #1
   13258:	mov	r0, r4
   1325c:	bl	169a4 <argp_error@@Base+0x15a4>
   13260:	cmp	r0, #0
   13264:	bne	1323c <argp_parse@@Base+0x1b38>
   13268:	b	1306c <argp_parse@@Base+0x1968>
   1326c:	mov	r1, #1
   13270:	mov	r0, r4
   13274:	bl	169a4 <argp_error@@Base+0x15a4>
   13278:	cmp	r0, #0
   1327c:	bne	130ec <argp_parse@@Base+0x19e8>
   13280:	b	13100 <argp_parse@@Base+0x19fc>
   13284:	mov	r1, r6
   13288:	mov	r0, r4
   1328c:	bl	169a4 <argp_error@@Base+0x15a4>
   13290:	cmp	r0, #0
   13294:	bne	13124 <argp_parse@@Base+0x1a20>
   13298:	b	13140 <argp_parse@@Base+0x1a3c>
   1329c:	ldr	r2, [r4, #28]
   132a0:	ldr	r3, [r4, #32]
   132a4:	cmp	r2, r3
   132a8:	bcs	132c4 <argp_parse@@Base+0x1bc0>
   132ac:	ldr	r3, [r4, #28]
   132b0:	add	r2, r3, #1
   132b4:	str	r2, [r4, #28]
   132b8:	mov	r2, #10
   132bc:	strb	r2, [r3]
   132c0:	b	1317c <argp_parse@@Base+0x1a78>
   132c4:	mov	r1, #1
   132c8:	mov	r0, r4
   132cc:	bl	169a4 <argp_error@@Base+0x15a4>
   132d0:	cmp	r0, #0
   132d4:	bne	132ac <argp_parse@@Base+0x1ba8>
   132d8:	b	1317c <argp_parse@@Base+0x1a78>
   132dc:	ldr	r3, [sp, #8]
   132e0:	str	r4, [sp, #4]
   132e4:	orrs	r3, r7, r3
   132e8:	ldr	r3, [sp, #64]	; 0x40
   132ec:	mov	r2, fp
   132f0:	str	r3, [sp]
   132f4:	ldr	r1, [sp, #16]
   132f8:	movne	r3, #1
   132fc:	moveq	r3, #0
   13300:	bl	12edc <argp_parse@@Base+0x17d8>
   13304:	orr	r7, r7, r0
   13308:	ldr	r0, [r5, #-16]
   1330c:	cmp	r0, #0
   13310:	beq	13190 <argp_parse@@Base+0x1a8c>
   13314:	ldr	r3, [sp, #64]	; 0x40
   13318:	add	r5, r5, #16
   1331c:	cmp	r7, #0
   13320:	cmpne	r3, #0
   13324:	beq	132dc <argp_parse@@Base+0x1bd8>
   13328:	b	13190 <argp_parse@@Base+0x1a8c>
   1332c:	andeq	r0, r0, #2
   13330:	andeq	r0, r0, #1
   13334:	andeq	r0, r0, #4
   13338:	ldr	r2, [r0, #24]
   1333c:	ldr	r3, [r0, #28]
   13340:	push	{r4, r5, r6, lr}
   13344:	sub	r3, r3, r2
   13348:	ldr	r2, [r0, #16]
   1334c:	mov	r4, r0
   13350:	cmp	r3, r2
   13354:	mov	r5, r1
   13358:	bls	13360 <argp_parse@@Base+0x1c5c>
   1335c:	bl	16554 <argp_error@@Base+0x1154>
   13360:	ldr	r1, [r4, #20]
   13364:	ldr	r3, [r4, #8]
   13368:	cmp	r1, #0
   1336c:	addge	r5, r5, r1
   13370:	cmp	r5, r3
   13374:	ldr	r2, [r4, #28]
   13378:	ldr	r3, [r4, #32]
   1337c:	bcc	133b8 <argp_parse@@Base+0x1cb4>
   13380:	cmp	r2, r3
   13384:	bcs	133a0 <argp_parse@@Base+0x1c9c>
   13388:	ldr	r3, [r4, #28]
   1338c:	add	r2, r3, #1
   13390:	str	r2, [r4, #28]
   13394:	mov	r2, #10
   13398:	strb	r2, [r3]
   1339c:	pop	{r4, r5, r6, pc}
   133a0:	mov	r1, #1
   133a4:	mov	r0, r4
   133a8:	bl	169a4 <argp_error@@Base+0x15a4>
   133ac:	cmp	r0, #0
   133b0:	bne	13388 <argp_parse@@Base+0x1c84>
   133b4:	pop	{r4, r5, r6, pc}
   133b8:	cmp	r2, r3
   133bc:	bcs	133d4 <argp_parse@@Base+0x1cd0>
   133c0:	ldr	r3, [r4, #28]
   133c4:	add	r2, r3, #1
   133c8:	str	r2, [r4, #28]
   133cc:	mov	r2, #32
   133d0:	b	13398 <argp_parse@@Base+0x1c94>
   133d4:	mov	r1, #1
   133d8:	mov	r0, r4
   133dc:	bl	169a4 <argp_error@@Base+0x15a4>
   133e0:	cmp	r0, #0
   133e4:	bne	133c0 <argp_parse@@Base+0x1cbc>
   133e8:	pop	{r4, r5, r6, pc}
   133ec:	push	{r4, r5, r6, lr}
   133f0:	ldr	r5, [r0, #8]
   133f4:	ldr	r2, [r0, #12]
   133f8:	ldr	ip, [r1, #12]
   133fc:	cmp	r5, #0
   13400:	orr	r2, r2, ip
   13404:	bne	13414 <argp_parse@@Base+0x1d10>
   13408:	ldr	r5, [r1, #8]
   1340c:	cmp	r5, #0
   13410:	beq	13440 <argp_parse@@Base+0x1d3c>
   13414:	tst	r2, #16
   13418:	bne	13440 <argp_parse@@Base+0x1d3c>
   1341c:	tst	r2, #1
   13420:	mov	r6, r3
   13424:	mov	r4, r0
   13428:	beq	13448 <argp_parse@@Base+0x1d44>
   1342c:	ldr	r2, [r0, #4]
   13430:	ldr	r1, [pc, #52]	; 1346c <argp_parse@@Base+0x1d68>
   13434:	mov	r3, r5
   13438:	mov	r0, r6
   1343c:	bl	16a88 <argp_error@@Base+0x1688>
   13440:	mov	r0, #0
   13444:	pop	{r4, r5, r6, pc}
   13448:	mov	r0, r5
   1344c:	bl	10e88 <strlen@plt>
   13450:	add	r1, r0, #6
   13454:	mov	r0, r6
   13458:	bl	13338 <argp_parse@@Base+0x1c34>
   1345c:	mov	r3, r5
   13460:	ldr	r2, [r4, #4]
   13464:	ldr	r1, [pc, #4]	; 13470 <argp_parse@@Base+0x1d6c>
   13468:	b	13438 <argp_parse@@Base+0x1d34>
   1346c:			; <UNDEFINED> instruction: 0x000177b4
   13470:			; <UNDEFINED> instruction: 0x000177bf
   13474:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13478:	mov	r6, r3
   1347c:	sub	sp, sp, #36	; 0x24
   13480:	ldr	r3, [r0, #16]
   13484:	str	r1, [sp, #20]
   13488:	str	r3, [sp, #12]
   1348c:	ldr	r3, [r0, #8]
   13490:	ldr	sl, [r2]
   13494:	str	r3, [sp, #16]
   13498:	mov	fp, r2
   1349c:	mov	r3, r1
   134a0:	mov	r2, r0
   134a4:	ldr	r1, [pc, #404]	; 13640 <argp_parse@@Base+0x1f3c>
   134a8:	ldr	r0, [sp, #16]
   134ac:	ldr	r5, [sp, #72]	; 0x48
   134b0:	bl	12b40 <argp_parse@@Base+0x143c>
   134b4:	subs	r8, r0, #0
   134b8:	moveq	r7, r8
   134bc:	moveq	r4, r8
   134c0:	beq	13554 <argp_parse@@Base+0x1e50>
   134c4:	mov	r1, #10
   134c8:	bl	10d80 <strchrnul@plt>
   134cc:	ldrb	r4, [r0]
   134d0:	mov	r7, r0
   134d4:	cmp	r4, #0
   134d8:	moveq	r9, r8
   134dc:	beq	13508 <argp_parse@@Base+0x1e04>
   134e0:	ldrb	r3, [sl]
   134e4:	mov	r9, r8
   134e8:	mov	r4, #0
   134ec:	mov	r2, #10
   134f0:	cmp	r4, r3
   134f4:	blt	135c4 <argp_parse@@Base+0x1ec0>
   134f8:	ldr	r3, [fp]
   134fc:	mov	r4, #1
   13500:	add	r3, r3, #1
   13504:	str	r3, [fp]
   13508:	add	r1, r7, #1
   1350c:	sub	r1, r1, r9
   13510:	mov	r0, r5
   13514:	bl	13338 <argp_parse@@Base+0x1c34>
   13518:	ldr	r2, [r5, #28]
   1351c:	sub	r3, r7, r9
   13520:	ldr	r1, [r5, #32]
   13524:	add	r2, r2, r3
   13528:	cmp	r1, r2
   1352c:	bcc	135f0 <argp_parse@@Base+0x1eec>
   13530:	mov	r2, r3
   13534:	mov	r1, r9
   13538:	ldr	r0, [r5, #28]
   1353c:	str	r3, [sp, #24]
   13540:	bl	10db0 <memcpy@plt>
   13544:	ldr	r2, [r5, #28]
   13548:	ldr	r3, [sp, #24]
   1354c:	add	r3, r2, r3
   13550:	str	r3, [r5, #28]
   13554:	ldr	r3, [sp, #16]
   13558:	cmp	r8, #0
   1355c:	cmpne	r3, r8
   13560:	beq	1356c <argp_parse@@Base+0x1e68>
   13564:	mov	r0, r8
   13568:	bl	121a0 <argp_parse@@Base+0xa9c>
   1356c:	ldr	r3, [sp, #12]
   13570:	cmp	r3, #0
   13574:	addne	r8, r3, #16
   13578:	bne	1362c <argp_parse@@Base+0x1f28>
   1357c:	cmp	r6, #0
   13580:	moveq	r4, #0
   13584:	andne	r4, r4, #1
   13588:	cmp	r4, #0
   1358c:	beq	135b4 <argp_parse@@Base+0x1eb0>
   13590:	ldrb	r2, [r7]
   13594:	ldrb	r3, [sl]
   13598:	cmp	r2, #0
   1359c:	addne	r3, r3, #1
   135a0:	strbne	r3, [sl]
   135a4:	movne	r6, #0
   135a8:	bne	135b4 <argp_parse@@Base+0x1eb0>
   135ac:	cmp	r3, #0
   135b0:	strbne	r2, [sl]
   135b4:	clz	r0, r6
   135b8:	lsr	r0, r0, #5
   135bc:	add	sp, sp, #36	; 0x24
   135c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   135c4:	add	r9, r7, #1
   135c8:	mov	r1, r2
   135cc:	mov	r0, r9
   135d0:	str	r3, [sp, #28]
   135d4:	str	r2, [sp, #24]
   135d8:	bl	10d80 <strchrnul@plt>
   135dc:	add	r4, r4, #1
   135e0:	ldr	r3, [sp, #28]
   135e4:	ldr	r2, [sp, #24]
   135e8:	mov	r7, r0
   135ec:	b	134f0 <argp_parse@@Base+0x1dec>
   135f0:	mov	r1, r3
   135f4:	mov	r0, r5
   135f8:	str	r3, [sp, #24]
   135fc:	bl	169a4 <argp_error@@Base+0x15a4>
   13600:	ldr	r3, [sp, #24]
   13604:	cmp	r0, #0
   13608:	bne	13530 <argp_parse@@Base+0x1e2c>
   1360c:	b	13554 <argp_parse@@Base+0x1e50>
   13610:	mov	r3, r6
   13614:	str	r5, [sp]
   13618:	mov	r2, fp
   1361c:	ldr	r1, [sp, #20]
   13620:	bl	13474 <argp_parse@@Base+0x1d70>
   13624:	clz	r6, r0
   13628:	lsr	r6, r6, #5
   1362c:	add	r8, r8, #16
   13630:	ldr	r0, [r8, #-32]	; 0xffffffe0
   13634:	cmp	r0, #0
   13638:	bne	13610 <argp_parse@@Base+0x1f0c>
   1363c:	b	1357c <argp_parse@@Base+0x1e78>
   13640:	andeq	r0, r0, #6
   13644:	ldr	r2, [r0, #8]
   13648:	cmp	r2, #0
   1364c:	bne	13680 <argp_parse@@Base+0x1f7c>
   13650:	ldr	r2, [r1, #8]
   13654:	cmp	r2, #0
   13658:	bne	13680 <argp_parse@@Base+0x1f7c>
   1365c:	ldr	r1, [r1, #12]
   13660:	ldr	r2, [r0, #12]
   13664:	orr	r2, r2, r1
   13668:	tst	r2, #16
   1366c:	ldreq	r2, [r3]
   13670:	addeq	r1, r2, #1
   13674:	streq	r1, [r3]
   13678:	ldreq	r3, [r0, #4]
   1367c:	strbeq	r3, [r2]
   13680:	mov	r0, #0
   13684:	bx	lr
   13688:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1368c:	add	fp, sp, #32
   13690:	sub	sp, sp, #12
   13694:	ldr	r6, [r0, #4]
   13698:	cmp	r6, #0
   1369c:	beq	13740 <argp_parse@@Base+0x203c>
   136a0:	mov	r5, r0
   136a4:	ldr	r0, [r0, #8]
   136a8:	mov	r4, r1
   136ac:	bl	10e88 <strlen@plt>
   136b0:	ldr	sl, [pc, #324]	; 137fc <argp_parse@@Base+0x20f8>
   136b4:	ldr	r7, [r5]
   136b8:	sub	r9, fp, #36	; 0x24
   136bc:	add	r0, r0, #15
   136c0:	bic	r0, r0, #7
   136c4:	sub	sp, sp, r0
   136c8:	mov	r8, sp
   136cc:	str	sp, [r9, #-4]!
   136d0:	ldr	r2, [r7, #20]
   136d4:	mov	r0, r7
   136d8:	mov	r3, r9
   136dc:	ldr	r2, [r2, #24]
   136e0:	mov	r1, sl
   136e4:	bl	1287c <argp_parse@@Base+0x1178>
   136e8:	subs	r6, r6, #1
   136ec:	add	r7, r7, #28
   136f0:	bne	136d0 <argp_parse@@Base+0x1fcc>
   136f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   136f8:	cmp	r8, r3
   136fc:	bcs	1371c <argp_parse@@Base+0x2018>
   13700:	add	r2, r3, #1
   13704:	str	r2, [fp, #-40]	; 0xffffffd8
   13708:	ldr	r1, [pc, #240]	; 13800 <argp_parse@@Base+0x20fc>
   1370c:	strb	r6, [r3]
   13710:	mov	r2, r8
   13714:	mov	r0, r4
   13718:	bl	16a88 <argp_error@@Base+0x1688>
   1371c:	ldm	r5, {r6, r7}
   13720:	ldr	r8, [pc, #220]	; 13804 <argp_parse@@Base+0x2100>
   13724:	cmp	r7, #0
   13728:	bne	13748 <argp_parse@@Base+0x2044>
   1372c:	ldm	r5, {r5, r8}
   13730:	ldr	sl, [pc, #208]	; 13808 <argp_parse@@Base+0x2104>
   13734:	add	r5, r5, #28
   13738:	cmp	r8, #0
   1373c:	bne	1376c <argp_parse@@Base+0x2068>
   13740:	sub	sp, fp, #32
   13744:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13748:	ldr	r2, [r6, #20]
   1374c:	mov	r0, r6
   13750:	mov	r3, r4
   13754:	ldr	r2, [r2, #24]
   13758:	mov	r1, r8
   1375c:	bl	1287c <argp_parse@@Base+0x1178>
   13760:	add	r6, r6, #28
   13764:	sub	r7, r7, #1
   13768:	b	13724 <argp_parse@@Base+0x2020>
   1376c:	ldr	r7, [r5, #-28]	; 0xffffffe4
   13770:	ldr	r9, [r5, #-24]	; 0xffffffe8
   13774:	mov	r6, r7
   13778:	cmp	r9, #0
   1377c:	subeq	r8, r8, #1
   13780:	addeq	r5, r5, #28
   13784:	beq	13738 <argp_parse@@Base+0x2034>
   13788:	ldr	r2, [r6]
   1378c:	cmp	r2, #0
   13790:	beq	137e0 <argp_parse@@Base+0x20dc>
   13794:	ldr	r1, [r6, #12]
   13798:	tst	r1, #4
   1379c:	moveq	r7, r6
   137a0:	tst	r1, #2
   137a4:	bne	137e0 <argp_parse@@Base+0x20dc>
   137a8:	ldr	r3, [r6, #8]
   137ac:	ldr	r0, [r7, #12]
   137b0:	cmp	r3, #0
   137b4:	orr	r1, r1, r0
   137b8:	ldreq	r3, [r7, #8]
   137bc:	tst	r1, #16
   137c0:	bne	137e0 <argp_parse@@Base+0x20dc>
   137c4:	cmp	r3, #0
   137c8:	beq	137ec <argp_parse@@Base+0x20e8>
   137cc:	tst	r1, #1
   137d0:	movne	r1, sl
   137d4:	ldreq	r1, [pc, #48]	; 1380c <argp_parse@@Base+0x2108>
   137d8:	mov	r0, r4
   137dc:	bl	16a88 <argp_error@@Base+0x1688>
   137e0:	add	r6, r6, #24
   137e4:	sub	r9, r9, #1
   137e8:	b	13778 <argp_parse@@Base+0x2074>
   137ec:	ldr	r1, [pc, #28]	; 13810 <argp_parse@@Base+0x210c>
   137f0:	mov	r0, r4
   137f4:	bl	16a88 <argp_error@@Base+0x1688>
   137f8:	b	137e0 <argp_parse@@Base+0x20dc>
   137fc:	andeq	r3, r1, r4, asr #12
   13800:	andeq	r7, r1, r8, asr #15
   13804:	andeq	r3, r1, ip, ror #7
   13808:	andeq	r7, r1, pc, asr #15
   1380c:	ldrdeq	r7, [r1], -ip
   13810:	andeq	r7, r1, r7, ror #15
   13814:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13818:	mov	r8, r1
   1381c:	ldm	r0, {r5, r6}
   13820:	cmp	r6, #0
   13824:	bne	1382c <argp_parse@@Base+0x2128>
   13828:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1382c:	ldm	r5, {r4, r9}
   13830:	mov	r7, #0
   13834:	add	r4, r4, #24
   13838:	cmp	r9, r7
   1383c:	subeq	r6, r6, #1
   13840:	addeq	r5, r5, #28
   13844:	beq	13820 <argp_parse@@Base+0x211c>
   13848:	ldr	r0, [r4, #-24]	; 0xffffffe8
   1384c:	cmp	r0, #0
   13850:	beq	13870 <argp_parse@@Base+0x216c>
   13854:	ldr	r3, [r4, #-12]
   13858:	tst	r3, #2
   1385c:	bne	13870 <argp_parse@@Base+0x216c>
   13860:	mov	r1, r8
   13864:	bl	10d5c <strcmp@plt>
   13868:	cmp	r0, #0
   1386c:	beq	1387c <argp_parse@@Base+0x2178>
   13870:	add	r7, r7, #1
   13874:	add	r4, r4, #24
   13878:	b	13838 <argp_parse@@Base+0x2134>
   1387c:	mvn	r3, #0
   13880:	str	r3, [r5, #12]
   13884:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13888:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1388c:	sub	sp, sp, #44	; 0x2c
   13890:	ldr	r6, [r0, #16]
   13894:	str	r0, [sp, #8]
   13898:	ldr	r5, [r0]
   1389c:	mov	r0, #16
   138a0:	mov	r9, r1
   138a4:	bl	12800 <argp_parse@@Base+0x10fc>
   138a8:	subs	r4, r0, #0
   138ac:	bne	138c4 <argp_parse@@Base+0x21c0>
   138b0:	ldr	r3, [pc, #1444]	; 13e5c <argp_parse@@Base+0x2758>
   138b4:	ldr	r2, [pc, #1444]	; 13e60 <argp_parse@@Base+0x275c>
   138b8:	ldr	r1, [pc, #1444]	; 13e64 <argp_parse@@Base+0x2760>
   138bc:	ldr	r0, [pc, #1444]	; 13e68 <argp_parse@@Base+0x2764>
   138c0:	bl	10f6c <__assert_fail@plt>
   138c4:	mov	r3, #0
   138c8:	cmp	r5, r3
   138cc:	str	r3, [r4, #4]
   138d0:	str	r3, [r4, #12]
   138d4:	beq	13e28 <argp_parse@@Base+0x2724>
   138d8:	ldr	r8, [r5, #12]
   138dc:	ands	r8, r8, #4
   138e0:	addeq	r7, r5, #24
   138e4:	moveq	fp, r8
   138e8:	beq	13c90 <argp_parse@@Base+0x258c>
   138ec:	ldr	r3, [pc, #1384]	; 13e5c <argp_parse@@Base+0x2758>
   138f0:	mov	r2, #460	; 0x1cc
   138f4:	ldr	r1, [pc, #1384]	; 13e64 <argp_parse@@Base+0x2760>
   138f8:	ldr	r0, [pc, #1388]	; 13e6c <argp_parse@@Base+0x2768>
   138fc:	b	138c0 <argp_parse@@Base+0x21bc>
   13900:	ldr	r2, [pc, #1384]	; 13e70 <argp_parse@@Base+0x276c>
   13904:	ldr	r0, [r4, #4]
   13908:	cmp	r0, r2
   1390c:	addls	r7, r7, #28
   13910:	movls	sl, r3
   13914:	movls	r2, r1
   13918:	bls	13df4 <argp_parse@@Base+0x26f0>
   1391c:	ldr	r3, [pc, #1336]	; 13e5c <argp_parse@@Base+0x2758>
   13920:	mov	r2, #476	; 0x1dc
   13924:	ldr	r1, [pc, #1336]	; 13e64 <argp_parse@@Base+0x2760>
   13928:	ldr	r0, [pc, #1348]	; 13e74 <argp_parse@@Base+0x2770>
   1392c:	b	138c0 <argp_parse@@Base+0x21bc>
   13930:	ldrb	r0, [r0]
   13934:	add	r1, r1, #1
   13938:	cmp	r0, r8
   1393c:	beq	13db8 <argp_parse@@Base+0x26b4>
   13940:	cmp	sl, r1
   13944:	mov	r0, r1
   13948:	bhi	13930 <argp_parse@@Base+0x222c>
   1394c:	strb	r8, [sl]
   13950:	add	sl, sl, #1
   13954:	b	13db8 <argp_parse@@Base+0x26b4>
   13958:	ldr	r8, [r6, #-4]
   1395c:	ldr	r7, [r6, #-8]
   13960:	cmp	r8, #0
   13964:	bne	13974 <argp_parse@@Base+0x2270>
   13968:	cmp	r7, #0
   1396c:	moveq	r1, r9
   13970:	beq	139d0 <argp_parse@@Base+0x22cc>
   13974:	ldr	r3, [sp, #8]
   13978:	sub	r5, r6, #16
   1397c:	mov	r0, #28
   13980:	ldr	r3, [r3, #16]
   13984:	sub	r5, r5, r3
   13988:	bl	12800 <argp_parse@@Base+0x10fc>
   1398c:	asr	r5, r5, #4
   13990:	subs	r1, r0, #0
   13994:	beq	139d0 <argp_parse@@Base+0x22cc>
   13998:	ldr	r3, [sp, #8]
   1399c:	cmp	r9, #0
   139a0:	str	r3, [r1, #16]
   139a4:	ldrne	r3, [r9, #20]
   139a8:	moveq	r3, #0
   139ac:	addne	r3, r3, #1
   139b0:	str	r3, [r1, #20]
   139b4:	ldr	r3, [r4, #12]
   139b8:	str	r8, [r1, #8]
   139bc:	str	r7, [r1]
   139c0:	str	r5, [r1, #4]
   139c4:	str	r9, [r1, #12]
   139c8:	str	r3, [r1, #24]
   139cc:	str	r1, [r4, #12]
   139d0:	ldr	r0, [r6, #-16]
   139d4:	bl	13888 <argp_parse@@Base+0x2184>
   139d8:	ldr	r2, [sp, #28]
   139dc:	ldr	r3, [r4, #12]
   139e0:	mov	r5, r0
   139e4:	cmp	r3, #0
   139e8:	bne	13a44 <argp_parse@@Base+0x2340>
   139ec:	ldr	r1, [r5, #12]
   139f0:	str	r1, [r2]
   139f4:	ldr	r2, [r5, #4]
   139f8:	str	r3, [r5, #12]
   139fc:	cmp	r2, #0
   13a00:	beq	13a28 <argp_parse@@Base+0x2324>
   13a04:	ldr	r1, [r4, #4]
   13a08:	cmp	r1, #0
   13a0c:	bne	13a50 <argp_parse@@Base+0x234c>
   13a10:	str	r2, [r4, #4]
   13a14:	ldr	r2, [r5]
   13a18:	str	r2, [r4]
   13a1c:	ldr	r2, [r5, #8]
   13a20:	str	r2, [r4, #8]
   13a24:	str	r3, [r5, #4]
   13a28:	mov	r0, r5
   13a2c:	bl	12a14 <argp_parse@@Base+0x1310>
   13a30:	add	r6, r6, #16
   13a34:	ldr	r3, [r6, #-16]
   13a38:	cmp	r3, #0
   13a3c:	bne	13958 <argp_parse@@Base+0x2254>
   13a40:	b	13e3c <argp_parse@@Base+0x2738>
   13a44:	add	r2, r3, #24
   13a48:	ldr	r3, [r3, #24]
   13a4c:	b	139e4 <argp_parse@@Base+0x22e0>
   13a50:	add	r3, r2, r1
   13a54:	mov	r7, #28
   13a58:	str	r3, [sp, #12]
   13a5c:	mul	r0, r7, r3
   13a60:	bl	12800 <argp_parse@@Base+0x10fc>
   13a64:	str	r0, [sp]
   13a68:	ldr	r0, [r4, #8]
   13a6c:	bl	10e88 <strlen@plt>
   13a70:	mov	fp, r0
   13a74:	ldr	r0, [r5, #8]
   13a78:	bl	10e88 <strlen@plt>
   13a7c:	add	r0, fp, r0
   13a80:	add	r0, r0, #1
   13a84:	bl	12800 <argp_parse@@Base+0x10fc>
   13a88:	ldr	r3, [sp]
   13a8c:	cmp	r3, #0
   13a90:	cmpne	r0, #0
   13a94:	mov	r8, r0
   13a98:	ldreq	r3, [pc, #984]	; 13e78 <argp_parse@@Base+0x2774>
   13a9c:	ldreq	r2, [pc, #984]	; 13e7c <argp_parse@@Base+0x2778>
   13aa0:	ldreq	r1, [pc, #956]	; 13e64 <argp_parse@@Base+0x2760>
   13aa4:	ldreq	r0, [pc, #980]	; 13e80 <argp_parse@@Base+0x277c>
   13aa8:	beq	138c0 <argp_parse@@Base+0x21bc>
   13aac:	ldr	r3, [sp, #12]
   13ab0:	ldr	r2, [pc, #952]	; 13e70 <argp_parse@@Base+0x276c>
   13ab4:	cmp	r3, r2
   13ab8:	ldrhi	r3, [pc, #952]	; 13e78 <argp_parse@@Base+0x2774>
   13abc:	movhi	r2, #972	; 0x3cc
   13ac0:	ldrhi	r1, [pc, #924]	; 13e64 <argp_parse@@Base+0x2760>
   13ac4:	ldrhi	r0, [pc, #952]	; 13e84 <argp_parse@@Base+0x2780>
   13ac8:	bhi	138c0 <argp_parse@@Base+0x21bc>
   13acc:	ldr	sl, [r4, #4]
   13ad0:	ldr	r3, [r4]
   13ad4:	ldr	r0, [sp]
   13ad8:	str	r3, [sp, #16]
   13adc:	mul	r3, r7, sl
   13ae0:	ldr	r1, [sp, #16]
   13ae4:	mov	r2, r3
   13ae8:	str	r3, [sp, #24]
   13aec:	bl	10e64 <mempcpy@plt>
   13af0:	ldr	r3, [r5, #4]
   13af4:	ldr	r1, [r5]
   13af8:	str	r3, [sp, #4]
   13afc:	mul	r2, r7, r3
   13b00:	bl	10db0 <memcpy@plt>
   13b04:	ldr	r3, [r4, #8]
   13b08:	mov	r2, fp
   13b0c:	mov	r1, r3
   13b10:	mov	r0, r8
   13b14:	str	r3, [sp, #20]
   13b18:	bl	10db0 <memcpy@plt>
   13b1c:	ldr	r1, [sp]
   13b20:	ldr	r3, [sp, #20]
   13b24:	cmp	sl, #0
   13b28:	bne	13b84 <argp_parse@@Base+0x2480>
   13b2c:	add	r3, r8, fp
   13b30:	str	r3, [sp, #20]
   13b34:	ldr	r3, [sp, #24]
   13b38:	ldr	r1, [r5, #8]
   13b3c:	add	r7, r3, #28
   13b40:	ldr	r3, [sp]
   13b44:	ldr	sl, [sp, #20]
   13b48:	add	r7, r3, r7
   13b4c:	ldr	r3, [sp, #4]
   13b50:	cmp	r3, #0
   13b54:	bne	13ba0 <argp_parse@@Base+0x249c>
   13b58:	ldrb	r3, [sp, #4]
   13b5c:	ldr	r0, [sp, #16]
   13b60:	strb	r3, [sl]
   13b64:	bl	121a0 <argp_parse@@Base+0xa9c>
   13b68:	ldr	r0, [r4, #8]
   13b6c:	bl	121a0 <argp_parse@@Base+0xa9c>
   13b70:	ldr	r3, [sp]
   13b74:	str	r3, [r4]
   13b78:	ldr	r3, [sp, #12]
   13b7c:	stmib	r4, {r3, r8}
   13b80:	b	13a28 <argp_parse@@Base+0x2324>
   13b84:	ldr	r2, [r1, #8]
   13b88:	sub	sl, sl, #1
   13b8c:	sub	r2, r2, r3
   13b90:	add	r2, r8, r2
   13b94:	str	r2, [r1, #8]
   13b98:	add	r1, r1, #28
   13b9c:	b	13b24 <argp_parse@@Base+0x2420>
   13ba0:	ldr	r3, [r7, #-24]	; 0xffffffe8
   13ba4:	ldr	fp, [r7, #-28]	; 0xffffffe4
   13ba8:	str	sl, [r7, #-20]	; 0xffffffec
   13bac:	cmp	r3, #0
   13bb0:	ldreq	r3, [sp, #4]
   13bb4:	addeq	r7, r7, #28
   13bb8:	subeq	r3, r3, #1
   13bbc:	streq	r3, [sp, #4]
   13bc0:	beq	13b4c <argp_parse@@Base+0x2448>
   13bc4:	ldr	r2, [fp, #12]
   13bc8:	tst	r2, #8
   13bcc:	bne	13c10 <argp_parse@@Base+0x250c>
   13bd0:	ldr	r2, [fp, #4]
   13bd4:	sub	r0, r2, #1
   13bd8:	cmp	r0, #254	; 0xfe
   13bdc:	str	r2, [sp, #36]	; 0x24
   13be0:	bhi	13c10 <argp_parse@@Base+0x250c>
   13be4:	str	r3, [sp, #32]
   13be8:	str	r1, [sp, #24]
   13bec:	bl	10e70 <__ctype_b_loc@plt>
   13bf0:	ldr	r2, [sp, #36]	; 0x24
   13bf4:	ldr	r1, [sp, #24]
   13bf8:	ldr	r3, [sp, #32]
   13bfc:	ldr	ip, [r0]
   13c00:	lsl	r0, r2, #1
   13c04:	ldrh	r0, [ip, r0]
   13c08:	tst	r0, #16384	; 0x4000
   13c0c:	bne	13e48 <argp_parse@@Base+0x2744>
   13c10:	add	fp, fp, #24
   13c14:	sub	r3, r3, #1
   13c18:	b	13bac <argp_parse@@Base+0x24a8>
   13c1c:	ldrb	ip, [ip]
   13c20:	add	r2, r2, #1
   13c24:	cmp	ip, r0
   13c28:	beq	13c44 <argp_parse@@Base+0x2540>
   13c2c:	ldr	lr, [sp, #20]
   13c30:	mov	ip, r2
   13c34:	cmp	lr, r2
   13c38:	bhi	13c1c <argp_parse@@Base+0x2518>
   13c3c:	strb	r0, [sl]
   13c40:	add	sl, sl, #1
   13c44:	add	r1, r1, #1
   13c48:	b	13c10 <argp_parse@@Base+0x250c>
   13c4c:	ldr	r1, [r7, #-12]
   13c50:	tst	r1, #4
   13c54:	ldreq	r2, [r4, #4]
   13c58:	addeq	r2, r2, #1
   13c5c:	streq	r2, [r4, #4]
   13c60:	tst	r1, #8
   13c64:	bne	13c8c <argp_parse@@Base+0x2588>
   13c68:	sub	r2, sl, #1
   13c6c:	cmp	r2, #254	; 0xfe
   13c70:	bhi	13c8c <argp_parse@@Base+0x2588>
   13c74:	bl	10e70 <__ctype_b_loc@plt>
   13c78:	lsl	sl, sl, #1
   13c7c:	ldr	r2, [r0]
   13c80:	ldrh	r2, [r2, sl]
   13c84:	tst	r2, #16384	; 0x4000
   13c88:	addne	fp, fp, #1
   13c8c:	add	r7, r7, #24
   13c90:	ldr	sl, [r7, #-20]	; 0xffffffec
   13c94:	cmp	sl, #0
   13c98:	bne	13c4c <argp_parse@@Base+0x2548>
   13c9c:	ldr	r2, [r7, #-24]	; 0xffffffe8
   13ca0:	cmp	r2, #0
   13ca4:	bne	13c4c <argp_parse@@Base+0x2548>
   13ca8:	ldr	r2, [r7, #-8]
   13cac:	cmp	r2, #0
   13cb0:	bne	13c4c <argp_parse@@Base+0x2548>
   13cb4:	ldr	r1, [r7, #-4]
   13cb8:	cmp	r1, #0
   13cbc:	bne	13c4c <argp_parse@@Base+0x2548>
   13cc0:	ldr	r2, [r4, #4]
   13cc4:	mov	r0, #28
   13cc8:	str	r1, [sp]
   13ccc:	mul	r0, r0, r2
   13cd0:	bl	12800 <argp_parse@@Base+0x10fc>
   13cd4:	str	r0, [r4]
   13cd8:	add	r0, fp, #1
   13cdc:	bl	12800 <argp_parse@@Base+0x10fc>
   13ce0:	ldr	r7, [r4]
   13ce4:	ldr	r1, [sp]
   13ce8:	cmp	r0, #0
   13cec:	cmpne	r7, #0
   13cf0:	mov	r3, r0
   13cf4:	str	r0, [r4, #8]
   13cf8:	bne	13900 <argp_parse@@Base+0x21fc>
   13cfc:	ldr	r3, [pc, #344]	; 13e5c <argp_parse@@Base+0x2758>
   13d00:	ldr	r2, [pc, #384]	; 13e88 <argp_parse@@Base+0x2784>
   13d04:	ldr	r1, [pc, #344]	; 13e64 <argp_parse@@Base+0x2760>
   13d08:	ldr	r0, [pc, #380]	; 13e8c <argp_parse@@Base+0x2788>
   13d0c:	b	138c0 <argp_parse@@Base+0x21bc>
   13d10:	uxtb	r8, r8
   13d14:	mov	r1, r3
   13d18:	b	13940 <argp_parse@@Base+0x223c>
   13d1c:	ldr	r1, [r5, #12]
   13d20:	tst	r1, #4
   13d24:	bne	13d68 <argp_parse@@Base+0x2664>
   13d28:	b	13dec <argp_parse@@Base+0x26e8>
   13d2c:	str	r2, [r7, #-24]	; 0xffffffe8
   13d30:	ldr	fp, [r5, #20]
   13d34:	str	r5, [r7, #-28]	; 0xffffffe4
   13d38:	cmp	fp, #0
   13d3c:	str	sl, [r7, #-20]	; 0xffffffec
   13d40:	bne	13d58 <argp_parse@@Base+0x2654>
   13d44:	ldr	r1, [r5]
   13d48:	cmp	r1, #0
   13d4c:	cmpeq	r0, #0
   13d50:	addeq	fp, r8, #1
   13d54:	movne	fp, r8
   13d58:	ldr	r1, [sp, #8]
   13d5c:	str	fp, [r7, #-16]
   13d60:	str	r9, [r7, #-12]
   13d64:	str	r1, [r7, #-8]
   13d68:	ldr	r1, [r7, #-24]	; 0xffffffe8
   13d6c:	add	r1, r1, #1
   13d70:	str	r1, [r7, #-24]	; 0xffffffe8
   13d74:	ldr	r1, [r5, #12]
   13d78:	tst	r1, #8
   13d7c:	bne	13db8 <argp_parse@@Base+0x26b4>
   13d80:	ldr	r8, [r5, #4]
   13d84:	sub	r1, r8, #1
   13d88:	cmp	r1, #254	; 0xfe
   13d8c:	bhi	13db8 <argp_parse@@Base+0x26b4>
   13d90:	str	r2, [sp, #4]
   13d94:	str	r3, [sp]
   13d98:	bl	10e70 <__ctype_b_loc@plt>
   13d9c:	lsl	r1, r8, #1
   13da0:	ldr	r3, [sp]
   13da4:	ldr	r2, [sp, #4]
   13da8:	ldr	r0, [r0]
   13dac:	ldrh	r1, [r0, r1]
   13db0:	tst	r1, #16384	; 0x4000
   13db4:	bne	13d10 <argp_parse@@Base+0x260c>
   13db8:	add	r5, r5, #24
   13dbc:	ldr	r1, [r5, #4]
   13dc0:	cmp	r1, #0
   13dc4:	bne	13d1c <argp_parse@@Base+0x2618>
   13dc8:	ldr	r1, [r5]
   13dcc:	cmp	r1, #0
   13dd0:	bne	13d1c <argp_parse@@Base+0x2618>
   13dd4:	ldr	r1, [r5, #16]
   13dd8:	cmp	r1, #0
   13ddc:	bne	13d1c <argp_parse@@Base+0x2618>
   13de0:	ldr	r1, [r5, #20]
   13de4:	cmp	r1, #0
   13de8:	bne	13d1c <argp_parse@@Base+0x2618>
   13dec:	add	r7, r7, #28
   13df0:	mov	r8, fp
   13df4:	ldr	r0, [r5, #4]
   13df8:	cmp	r0, #0
   13dfc:	bne	13d2c <argp_parse@@Base+0x2628>
   13e00:	ldr	r1, [r5]
   13e04:	cmp	r1, #0
   13e08:	bne	13d2c <argp_parse@@Base+0x2628>
   13e0c:	ldr	r1, [r5, #16]
   13e10:	cmp	r1, #0
   13e14:	bne	13d2c <argp_parse@@Base+0x2628>
   13e18:	ldr	r1, [r5, #20]
   13e1c:	cmp	r1, #0
   13e20:	bne	13d2c <argp_parse@@Base+0x2628>
   13e24:	strb	r1, [sl]
   13e28:	cmp	r6, #0
   13e2c:	addne	r3, r4, #12
   13e30:	addne	r6, r6, #16
   13e34:	strne	r3, [sp, #28]
   13e38:	bne	13a34 <argp_parse@@Base+0x2330>
   13e3c:	mov	r0, r4
   13e40:	add	sp, sp, #44	; 0x2c
   13e44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e48:	ldrb	r0, [r1]
   13e4c:	cmp	r0, r2
   13e50:	moveq	r2, r8
   13e54:	bne	13c10 <argp_parse@@Base+0x250c>
   13e58:	b	13c2c <argp_parse@@Base+0x2528>
   13e5c:	andeq	r7, r1, sp, lsl #14
   13e60:	andeq	r0, r0, r2, asr #3
   13e64:	andeq	r7, r1, pc, ror #15
   13e68:	strdeq	r7, [r1], -fp
   13e6c:	strdeq	r7, [r1], -pc	; <UNPREDICTABLE>
   13e70:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   13e74:	andeq	r7, r1, r2, lsr r8
   13e78:	andeq	r7, r1, r6, lsl r7
   13e7c:	andeq	r0, r0, sl, asr #7
   13e80:	andeq	r7, r1, fp, ror #16
   13e84:	andeq	r7, r1, r7, lsr r8
   13e88:	ldrdeq	r0, [r0], -sl
   13e8c:	andeq	r7, r1, pc, lsl #16
   13e90:	push	{r4, r5, r6, lr}
   13e94:	mov	r4, r0
   13e98:	mov	r5, r1
   13e9c:	ldr	r0, [r0, #12]
   13ea0:	ldr	r1, [r1, #12]
   13ea4:	cmp	r0, r1
   13ea8:	bne	13ee0 <argp_parse@@Base+0x27dc>
   13eac:	ldr	r0, [r5, #8]
   13eb0:	ldr	r3, [r4, #8]
   13eb4:	mvn	r2, r0
   13eb8:	lsr	r2, r2, #31
   13ebc:	cmp	r2, r3, lsr #31
   13ec0:	subne	r0, r3, r0
   13ec4:	subeq	r0, r0, r3
   13ec8:	cmp	r0, #0
   13ecc:	popne	{r4, r5, r6, pc}
   13ed0:	ldr	r0, [r5, #4]
   13ed4:	ldr	r3, [r4, #4]
   13ed8:	sub	r0, r0, r3
   13edc:	pop	{r4, r5, r6, pc}
   13ee0:	bl	13e90 <argp_parse@@Base+0x278c>
   13ee4:	cmp	r0, #0
   13ee8:	popne	{r4, r5, r6, pc}
   13eec:	ldr	r0, [r5, #8]
   13ef0:	ldr	r3, [r4, #8]
   13ef4:	mvn	r2, r0
   13ef8:	lsr	r2, r2, #31
   13efc:	cmp	r2, r3, lsr #31
   13f00:	subne	r0, r3, r0
   13f04:	subeq	r0, r0, r3
   13f08:	cmp	r0, #0
   13f0c:	beq	13ed0 <argp_parse@@Base+0x27cc>
   13f10:	pop	{r4, r5, r6, pc}
   13f14:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   13f18:	mov	r6, r0
   13f1c:	ldr	r0, [r0, #16]
   13f20:	mov	r5, r1
   13f24:	cmp	r0, #0
   13f28:	movne	r3, r0
   13f2c:	bne	13f3c <argp_parse@@Base+0x2838>
   13f30:	ldr	r3, [r6, #12]
   13f34:	b	13f4c <argp_parse@@Base+0x2848>
   13f38:	mov	r3, r2
   13f3c:	ldr	r2, [r3, #12]
   13f40:	cmp	r2, #0
   13f44:	bne	13f38 <argp_parse@@Base+0x2834>
   13f48:	ldr	r3, [r3, #8]
   13f4c:	ldr	r1, [r5, #16]
   13f50:	cmp	r1, #0
   13f54:	movne	r2, r1
   13f58:	bne	13f68 <argp_parse@@Base+0x2864>
   13f5c:	ldr	r4, [r5, #12]
   13f60:	b	13f78 <argp_parse@@Base+0x2874>
   13f64:	mov	r2, ip
   13f68:	ldr	ip, [r2, #12]
   13f6c:	cmp	ip, #0
   13f70:	bne	13f64 <argp_parse@@Base+0x2860>
   13f74:	ldr	r4, [r2, #8]
   13f78:	mvn	r2, r4
   13f7c:	lsr	r2, r2, #31
   13f80:	cmp	r2, r3, lsr #31
   13f84:	subne	r4, r3, r4
   13f88:	subeq	r4, r4, r3
   13f8c:	cmp	r4, #0
   13f90:	bne	13fe8 <argp_parse@@Base+0x28e4>
   13f94:	adds	r4, r1, #0
   13f98:	movne	r4, #1
   13f9c:	cmp	r0, #0
   13fa0:	rsbeq	r4, r4, #0
   13fa4:	rsbne	r4, r4, #1
   13fa8:	cmp	r4, #0
   13fac:	bne	13fe8 <argp_parse@@Base+0x28e4>
   13fb0:	cmp	r0, #0
   13fb4:	beq	14024 <argp_parse@@Base+0x2920>
   13fb8:	ldr	r3, [r0, #20]
   13fbc:	ldr	r2, [r1, #20]
   13fc0:	cmp	r3, r2
   13fc4:	ble	13ff4 <argp_parse@@Base+0x28f0>
   13fc8:	ldr	r0, [r0, #12]
   13fcc:	ldr	r3, [r0, #20]
   13fd0:	cmp	r2, r3
   13fd4:	blt	13fc8 <argp_parse@@Base+0x28c4>
   13fd8:	bl	13e90 <argp_parse@@Base+0x278c>
   13fdc:	cmp	r0, #0
   13fe0:	movne	r4, r0
   13fe4:	moveq	r4, #1
   13fe8:	mov	r0, r4
   13fec:	add	sp, sp, #8
   13ff0:	pop	{r4, r5, r6, r7, r8, pc}
   13ff4:	bge	14018 <argp_parse@@Base+0x2914>
   13ff8:	ldr	r1, [r1, #12]
   13ffc:	ldr	r2, [r1, #20]
   14000:	cmp	r3, r2
   14004:	blt	13ff8 <argp_parse@@Base+0x28f4>
   14008:	bl	13e90 <argp_parse@@Base+0x278c>
   1400c:	subs	r4, r0, #0
   14010:	mvneq	r4, #0
   14014:	b	13fe8 <argp_parse@@Base+0x28e4>
   14018:	bl	13e90 <argp_parse@@Base+0x278c>
   1401c:	subs	r4, r0, #0
   14020:	bne	13fe8 <argp_parse@@Base+0x28e4>
   14024:	ldr	r4, [r5, #12]
   14028:	ldr	r3, [r6, #12]
   1402c:	mvn	r2, r4
   14030:	lsr	r2, r2, #31
   14034:	cmp	r2, r3, lsr #31
   14038:	subne	r4, r3, r4
   1403c:	subeq	r4, r4, r3
   14040:	cmp	r4, #0
   14044:	bne	13fe8 <argp_parse@@Base+0x28e4>
   14048:	mov	r0, r6
   1404c:	bl	12840 <argp_parse@@Base+0x113c>
   14050:	mov	r7, r0
   14054:	str	r0, [sp]
   14058:	mov	r0, r5
   1405c:	bl	12840 <argp_parse@@Base+0x113c>
   14060:	ldr	r3, [r6]
   14064:	adds	r7, r7, #0
   14068:	movne	r7, #1
   1406c:	ldr	r3, [r3, #12]
   14070:	ands	r3, r7, r3, lsr #3
   14074:	moveq	r7, r4
   14078:	str	r0, [sp, #4]
   1407c:	beq	14090 <argp_parse@@Base+0x298c>
   14080:	mov	r0, sp
   14084:	bl	129a8 <argp_parse@@Base+0x12a4>
   14088:	adds	r7, r0, #0
   1408c:	movne	r7, #1
   14090:	ldr	r3, [r5]
   14094:	ldr	r0, [r3, #12]
   14098:	ands	r0, r0, #8
   1409c:	beq	140c0 <argp_parse@@Base+0x29bc>
   140a0:	ldr	r3, [sp, #4]
   140a4:	cmp	r3, #0
   140a8:	moveq	r0, r4
   140ac:	beq	140c0 <argp_parse@@Base+0x29bc>
   140b0:	add	r0, sp, #4
   140b4:	bl	129a8 <argp_parse@@Base+0x12a4>
   140b8:	adds	r0, r0, #0
   140bc:	movne	r0, #1
   140c0:	subs	r4, r7, r0
   140c4:	bne	13fe8 <argp_parse@@Base+0x28e4>
   140c8:	ldr	r2, [r6, #20]
   140cc:	mov	r3, r4
   140d0:	ldr	r1, [pc, #224]	; 141b8 <argp_parse@@Base+0x2ab4>
   140d4:	ldr	r2, [r2, #24]
   140d8:	mov	r0, r6
   140dc:	bl	1287c <argp_parse@@Base+0x1178>
   140e0:	ldr	r2, [r5, #20]
   140e4:	mov	r3, r4
   140e8:	ldr	r1, [pc, #200]	; 141b8 <argp_parse@@Base+0x2ab4>
   140ec:	ldr	r2, [r2, #24]
   140f0:	uxtb	r8, r0
   140f4:	mov	r0, r5
   140f8:	bl	1287c <argp_parse@@Base+0x1178>
   140fc:	cmp	r8, #0
   14100:	uxtb	r5, r0
   14104:	beq	14110 <argp_parse@@Base+0x2a0c>
   14108:	mov	r6, r8
   1410c:	b	14120 <argp_parse@@Base+0x2a1c>
   14110:	ldr	r3, [sp]
   14114:	cmp	r3, #0
   14118:	ldrbne	r6, [r3]
   1411c:	beq	14108 <argp_parse@@Base+0x2a04>
   14120:	cmp	r5, #0
   14124:	beq	14130 <argp_parse@@Base+0x2a2c>
   14128:	mov	r7, r5
   1412c:	b	14140 <argp_parse@@Base+0x2a3c>
   14130:	ldr	r3, [sp, #4]
   14134:	cmp	r3, #0
   14138:	ldrbne	r7, [r3]
   1413c:	beq	14128 <argp_parse@@Base+0x2a24>
   14140:	bl	10e4c <__ctype_tolower_loc@plt>
   14144:	ldr	r3, [r0]
   14148:	ldr	r4, [r3, r6, lsl #2]
   1414c:	ldr	r3, [r3, r7, lsl #2]
   14150:	subs	r4, r4, r3
   14154:	bne	13fe8 <argp_parse@@Base+0x28e4>
   14158:	subs	r4, r7, r6
   1415c:	bne	13fe8 <argp_parse@@Base+0x28e4>
   14160:	adds	r4, r5, #0
   14164:	movne	r4, #1
   14168:	cmp	r8, #0
   1416c:	rsbeq	r4, r4, #0
   14170:	rsbne	r4, r4, #1
   14174:	cmp	r4, #0
   14178:	bne	13fe8 <argp_parse@@Base+0x28e4>
   1417c:	cmp	r8, #0
   14180:	bne	13fe8 <argp_parse@@Base+0x28e4>
   14184:	ldm	sp, {r0, r1}
   14188:	adds	r4, r1, #0
   1418c:	movne	r4, #1
   14190:	cmp	r0, #0
   14194:	rsbeq	r4, r4, #0
   14198:	rsbne	r4, r4, #1
   1419c:	cmp	r4, #0
   141a0:	bne	13fe8 <argp_parse@@Base+0x28e4>
   141a4:	cmp	r0, #0
   141a8:	beq	13fe8 <argp_parse@@Base+0x28e4>
   141ac:	bl	10de0 <strcasecmp@plt>
   141b0:	mov	r4, r0
   141b4:	b	13fe8 <argp_parse@@Base+0x28e4>
   141b8:	andeq	r2, r1, ip, asr r9

000141bc <argp_failure@@Base>:
   141bc:	push	{r3}		; (str r3, [sp, #-4]!)
   141c0:	push	{r4, r5, r6, r7, r8, lr}
   141c4:	sub	sp, sp, #204	; 0xcc
   141c8:	subs	r5, r0, #0
   141cc:	mov	r7, r1
   141d0:	mov	r6, r2
   141d4:	ldr	r8, [sp, #228]	; 0xe4
   141d8:	beq	14204 <argp_failure@@Base+0x48>
   141dc:	ldr	r3, [r5, #16]
   141e0:	tst	r3, #2
   141e4:	bne	141f4 <argp_failure@@Base+0x38>
   141e8:	ldr	r4, [r5, #44]	; 0x2c
   141ec:	cmp	r4, #0
   141f0:	bne	14228 <argp_failure@@Base+0x6c>
   141f4:	add	sp, sp, #204	; 0xcc
   141f8:	pop	{r4, r5, r6, r7, r8, lr}
   141fc:	add	sp, sp, #4
   14200:	bx	lr
   14204:	ldr	r3, [pc, #244]	; 14300 <argp_failure@@Base+0x144>
   14208:	ldr	r4, [r3]
   1420c:	cmp	r4, #0
   14210:	beq	141f4 <argp_failure@@Base+0x38>
   14214:	mov	r0, r4
   14218:	bl	10f00 <flockfile@plt>
   1421c:	ldr	r3, [pc, #224]	; 14304 <argp_failure@@Base+0x148>
   14220:	ldr	r0, [r3]
   14224:	b	14234 <argp_failure@@Base+0x78>
   14228:	mov	r0, r4
   1422c:	bl	10f00 <flockfile@plt>
   14230:	ldr	r0, [r5, #40]	; 0x28
   14234:	mov	r1, r4
   14238:	bl	10d44 <fputs_unlocked@plt>
   1423c:	cmp	r8, #0
   14240:	beq	14274 <argp_failure@@Base+0xb8>
   14244:	add	r3, sp, #232	; 0xe8
   14248:	mov	r1, r4
   1424c:	mov	r0, #58	; 0x3a
   14250:	str	r3, [sp]
   14254:	bl	10f78 <putc_unlocked@plt>
   14258:	mov	r1, r4
   1425c:	mov	r0, #32
   14260:	bl	10f78 <putc_unlocked@plt>
   14264:	ldr	r2, [sp]
   14268:	mov	r1, r8
   1426c:	mov	r0, r4
   14270:	bl	10ee8 <vfprintf@plt>
   14274:	cmp	r6, #0
   14278:	beq	142c8 <argp_failure@@Base+0x10c>
   1427c:	mov	r1, r4
   14280:	mov	r0, #58	; 0x3a
   14284:	bl	10f78 <putc_unlocked@plt>
   14288:	mov	r1, r4
   1428c:	mov	r0, #32
   14290:	bl	10f78 <putc_unlocked@plt>
   14294:	mov	r2, #200	; 0xc8
   14298:	mov	r1, sp
   1429c:	mov	r0, r6
   142a0:	bl	10eb8 <strerror_r@plt>
   142a4:	cmp	r0, #0
   142a8:	bne	142c0 <argp_failure@@Base+0x104>
   142ac:	mov	r0, r6
   142b0:	bl	10e40 <strerror@plt>
   142b4:	ldr	r3, [pc, #76]	; 14308 <argp_failure@@Base+0x14c>
   142b8:	cmp	r0, #0
   142bc:	moveq	r0, r3
   142c0:	mov	r1, r4
   142c4:	bl	10d44 <fputs_unlocked@plt>
   142c8:	mov	r1, r4
   142cc:	mov	r0, #10
   142d0:	bl	10f78 <putc_unlocked@plt>
   142d4:	mov	r0, r4
   142d8:	bl	10dec <funlockfile@plt>
   142dc:	cmp	r7, #0
   142e0:	beq	141f4 <argp_failure@@Base+0x38>
   142e4:	cmp	r5, #0
   142e8:	beq	142f8 <argp_failure@@Base+0x13c>
   142ec:	ldr	r3, [r5, #16]
   142f0:	tst	r3, #32
   142f4:	bne	141f4 <argp_failure@@Base+0x38>
   142f8:	mov	r0, r7
   142fc:	bl	10e7c <exit@plt>
   14300:	andeq	r8, r2, r8, asr #2
   14304:	andeq	r8, r2, r0, asr #2
   14308:	andeq	r7, r1, r4, lsl #17
   1430c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14310:	add	fp, sp, #32
   14314:	sub	sp, sp, #116	; 0x74
   14318:	str	r3, [fp, #-104]	; 0xffffff98
   1431c:	subs	r3, r2, #0
   14320:	str	r0, [fp, #-108]	; 0xffffff94
   14324:	str	r1, [fp, #-96]	; 0xffffffa0
   14328:	str	r3, [fp, #-112]	; 0xffffff90
   1432c:	beq	143a8 <argp_failure@@Base+0x1ec>
   14330:	ldr	r5, [pc, #3996]	; 152d4 <argp_failure@@Base+0x1118>
   14334:	mov	r0, r3
   14338:	bl	10f00 <flockfile@plt>
   1433c:	ldr	r9, [r5, #36]	; 0x24
   14340:	cmp	r9, #0
   14344:	bne	14380 <argp_failure@@Base+0x1c4>
   14348:	ldr	r0, [pc, #3976]	; 152d8 <argp_failure@@Base+0x111c>
   1434c:	bl	10e10 <getenv@plt>
   14350:	mov	ip, r5
   14354:	sub	lr, fp, #76	; 0x4c
   14358:	mov	r4, r0
   1435c:	ldm	ip!, {r0, r1, r2, r3}
   14360:	cmp	r4, #0
   14364:	movne	r5, #1
   14368:	stmia	lr!, {r0, r1, r2, r3}
   1436c:	ldm	ip!, {r0, r1, r2, r3}
   14370:	stmia	lr!, {r0, r1, r2, r3}
   14374:	ldm	ip, {r0, r1}
   14378:	stm	lr, {r0, r1}
   1437c:	bne	145fc <argp_failure@@Base+0x440>
   14380:	ldr	r5, [pc, #3916]	; 152d4 <argp_failure@@Base+0x1118>
   14384:	mov	r3, #0
   14388:	mov	r1, r3
   1438c:	ldr	r2, [r5, #32]
   14390:	ldr	r0, [fp, #-112]	; 0xffffff90
   14394:	bl	164dc <argp_error@@Base+0x10dc>
   14398:	subs	r4, r0, #0
   1439c:	bne	14690 <argp_failure@@Base+0x4d4>
   143a0:	ldr	r0, [fp, #-112]	; 0xffffff90
   143a4:	bl	10dec <funlockfile@plt>
   143a8:	sub	sp, fp, #32
   143ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   143b0:	mov	r3, r1
   143b4:	mov	r1, r3
   143b8:	str	r3, [fp, #-100]	; 0xffffff9c
   143bc:	ldrb	r0, [r1], #1
   143c0:	lsl	r2, r0, #1
   143c4:	ldrh	r2, [r6, r2]
   143c8:	tst	r2, #8192	; 0x2000
   143cc:	bne	143b0 <argp_failure@@Base+0x1f4>
   143d0:	ands	r2, r2, #1024	; 0x400
   143d4:	movne	r2, r3
   143d8:	bne	14454 <argp_failure@@Base+0x298>
   143dc:	cmp	r0, #0
   143e0:	beq	1464c <argp_failure@@Base+0x490>
   143e4:	str	r3, [sp]
   143e8:	mov	r1, r2
   143ec:	ldr	r3, [pc, #3816]	; 152dc <argp_failure@@Base+0x1120>
   143f0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   143f4:	bl	141bc <argp_failure@@Base>
   143f8:	ldr	ip, [fp, #-44]	; 0xffffffd4
   143fc:	ldr	r3, [pc, #3804]	; 152e0 <argp_failure@@Base+0x1124>
   14400:	mov	r0, #9
   14404:	ldrb	r2, [r3, #14]
   14408:	cmp	r2, #0
   1440c:	bne	14654 <argp_failure@@Base+0x498>
   14410:	ldrb	r1, [r3, #15]
   14414:	cmp	r1, #32
   14418:	beq	14654 <argp_failure@@Base+0x498>
   1441c:	sub	lr, fp, #36	; 0x24
   14420:	add	r1, lr, r1
   14424:	ldr	r1, [r1, #-40]	; 0xffffffd8
   14428:	cmp	r1, ip
   1442c:	blt	14654 <argp_failure@@Base+0x498>
   14430:	str	r3, [sp, #4]
   14434:	ldr	r3, [pc, #3752]	; 152e4 <argp_failure@@Base+0x1128>
   14438:	mov	r1, r2
   1443c:	str	r3, [sp]
   14440:	ldr	r0, [fp, #-96]	; 0xffffffa0
   14444:	ldr	r3, [pc, #3740]	; 152e8 <argp_failure@@Base+0x112c>
   14448:	bl	141bc <argp_failure@@Base>
   1444c:	b	14380 <argp_failure@@Base+0x1c4>
   14450:	mov	r2, lr
   14454:	mov	lr, r2
   14458:	ldrb	r1, [lr], #1
   1445c:	cmp	r1, #95	; 0x5f
   14460:	cmpne	r1, #45	; 0x2d
   14464:	lsl	ip, r1, #1
   14468:	moveq	r1, #1
   1446c:	ldrh	ip, [r6, ip]
   14470:	movne	r1, #0
   14474:	lsl	ip, ip, #28
   14478:	orrs	r1, r1, ip, lsr #31
   1447c:	bne	14450 <argp_failure@@Base+0x294>
   14480:	sub	r8, r2, r3
   14484:	mov	r4, r2
   14488:	ldrb	r1, [r2], #1
   1448c:	lsl	ip, r1, #1
   14490:	ldrh	ip, [r6, ip]
   14494:	tst	ip, #8192	; 0x2000
   14498:	bne	14484 <argp_failure@@Base+0x2c8>
   1449c:	cmp	r1, #44	; 0x2c
   144a0:	cmpne	r1, #0
   144a4:	beq	15214 <argp_failure@@Base+0x1058>
   144a8:	cmp	r1, #61	; 0x3d
   144ac:	bne	144cc <argp_failure@@Base+0x310>
   144b0:	mov	r4, r2
   144b4:	add	r2, r2, #1
   144b8:	ldrb	r3, [r4]
   144bc:	lsl	r3, r3, #1
   144c0:	ldrh	r3, [r6, r3]
   144c4:	tst	r3, #8192	; 0x2000
   144c8:	bne	144b0 <argp_failure@@Base+0x2f4>
   144cc:	ldrb	r3, [r4]
   144d0:	lsl	r3, r3, #1
   144d4:	ldrh	r3, [r6, r3]
   144d8:	tst	r3, #2048	; 0x800
   144dc:	moveq	sl, r9
   144e0:	moveq	r7, r9
   144e4:	beq	14560 <argp_failure@@Base+0x3a4>
   144e8:	mov	r0, r4
   144ec:	bl	10f18 <atoi@plt>
   144f0:	mov	r3, r4
   144f4:	mov	r7, r0
   144f8:	ldrb	r2, [r3]
   144fc:	add	r1, r3, #1
   14500:	lsl	r2, r2, #1
   14504:	ldrh	r2, [r6, r2]
   14508:	tst	r2, #2048	; 0x800
   1450c:	bne	14618 <argp_failure@@Base+0x45c>
   14510:	mov	r4, r3
   14514:	add	r3, r3, #1
   14518:	ldrb	r2, [r4]
   1451c:	lsl	r2, r2, #1
   14520:	ldrh	r2, [r6, r2]
   14524:	tst	r2, #8192	; 0x2000
   14528:	bne	14510 <argp_failure@@Base+0x354>
   1452c:	mov	sl, r9
   14530:	b	14560 <argp_failure@@Base+0x3a4>
   14534:	ldrb	r2, [r3, #1]
   14538:	cmp	r2, #111	; 0x6f
   1453c:	bne	1521c <argp_failure@@Base+0x1060>
   14540:	ldrb	r2, [r3, #2]
   14544:	cmp	r2, #45	; 0x2d
   14548:	bne	1521c <argp_failure@@Base+0x1060>
   1454c:	sub	r8, r8, #3
   14550:	mov	r7, r9
   14554:	mov	sl, r5
   14558:	add	r3, r3, #3
   1455c:	str	r3, [fp, #-100]	; 0xffffff9c
   14560:	ldr	r6, [pc, #3448]	; 152e0 <argp_failure@@Base+0x1124>
   14564:	mov	r3, #9
   14568:	str	r3, [fp, #-116]	; 0xffffff8c
   1456c:	mov	r0, r6
   14570:	bl	10e88 <strlen@plt>
   14574:	cmp	r0, r8
   14578:	bne	14634 <argp_failure@@Base+0x478>
   1457c:	mov	r2, r8
   14580:	mov	r1, r6
   14584:	ldr	r0, [fp, #-100]	; 0xffffff9c
   14588:	bl	10f54 <strncmp@plt>
   1458c:	cmp	r0, #0
   14590:	bne	14634 <argp_failure@@Base+0x478>
   14594:	cmp	sl, #0
   14598:	beq	14620 <argp_failure@@Base+0x464>
   1459c:	ldrb	r2, [r6, #14]
   145a0:	cmp	r2, #0
   145a4:	bne	14620 <argp_failure@@Base+0x464>
   145a8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   145ac:	str	r8, [sp]
   145b0:	str	r3, [sp, #4]
   145b4:	mov	r1, r2
   145b8:	ldr	r3, [pc, #3372]	; 152ec <argp_failure@@Base+0x1130>
   145bc:	ldr	r0, [fp, #-96]	; 0xffffffa0
   145c0:	bl	141bc <argp_failure@@Base>
   145c4:	ldr	r3, [pc, #3364]	; 152f0 <argp_failure@@Base+0x1134>
   145c8:	cmp	r6, r3
   145cc:	bne	145f0 <argp_failure@@Base+0x434>
   145d0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   145d4:	mov	r2, #0
   145d8:	str	r3, [sp, #4]
   145dc:	str	r8, [sp]
   145e0:	ldr	r3, [pc, #3340]	; 152f4 <argp_failure@@Base+0x1138>
   145e4:	mov	r1, r2
   145e8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   145ec:	bl	141bc <argp_failure@@Base>
   145f0:	ldrb	r3, [r4]
   145f4:	cmp	r3, #44	; 0x2c
   145f8:	addeq	r4, r4, #1
   145fc:	ldrb	r3, [r4]
   14600:	cmp	r3, #0
   14604:	beq	143f8 <argp_failure@@Base+0x23c>
   14608:	bl	10e70 <__ctype_b_loc@plt>
   1460c:	mov	r3, r4
   14610:	ldr	r6, [r0]
   14614:	b	143b4 <argp_failure@@Base+0x1f8>
   14618:	mov	r3, r1
   1461c:	b	144f8 <argp_failure@@Base+0x33c>
   14620:	ldrb	r3, [r6, #15]
   14624:	sub	r2, fp, #36	; 0x24
   14628:	add	r3, r2, r3
   1462c:	str	r7, [r3, #-40]	; 0xffffffd8
   14630:	b	145c4 <argp_failure@@Base+0x408>
   14634:	ldr	r3, [fp, #-116]	; 0xffffff8c
   14638:	add	r6, r6, #16
   1463c:	subs	r3, r3, #1
   14640:	str	r3, [fp, #-116]	; 0xffffff8c
   14644:	bne	1456c <argp_failure@@Base+0x3b0>
   14648:	b	145c4 <argp_failure@@Base+0x408>
   1464c:	mov	r4, r3
   14650:	b	145fc <argp_failure@@Base+0x440>
   14654:	subs	r0, r0, #1
   14658:	add	r3, r3, #16
   1465c:	bne	14404 <argp_failure@@Base+0x248>
   14660:	sub	lr, fp, #76	; 0x4c
   14664:	ldr	r4, [pc, #3176]	; 152d4 <argp_failure@@Base+0x1118>
   14668:	ldm	lr!, {r0, r1, r2, r3}
   1466c:	mov	ip, r4
   14670:	stmia	ip!, {r0, r1, r2, r3}
   14674:	ldm	lr!, {r0, r1, r2, r3}
   14678:	stmia	ip!, {r0, r1, r2, r3}
   1467c:	mov	r3, #1
   14680:	ldm	lr, {r0, r1}
   14684:	stm	ip, {r0, r1}
   14688:	str	r3, [r4, #36]	; 0x24
   1468c:	b	14380 <argp_failure@@Base+0x1c4>
   14690:	ldr	r3, [fp, #-104]	; 0xffffff98
   14694:	ands	r3, r3, #11
   14698:	moveq	sl, r3
   1469c:	beq	146fc <argp_failure@@Base+0x540>
   146a0:	mov	r1, #0
   146a4:	ldr	r0, [fp, #-108]	; 0xffffff94
   146a8:	bl	13888 <argp_parse@@Base+0x2184>
   146ac:	ldr	r1, [pc, #3140]	; 152f8 <argp_failure@@Base+0x113c>
   146b0:	mov	sl, r0
   146b4:	bl	13814 <argp_parse@@Base+0x2110>
   146b8:	ldr	r1, [pc, #3132]	; 152fc <argp_failure@@Base+0x1140>
   146bc:	mov	r0, sl
   146c0:	bl	13814 <argp_parse@@Base+0x2110>
   146c4:	ldr	r1, [sl, #4]
   146c8:	cmp	r1, #0
   146cc:	beq	146fc <argp_failure@@Base+0x540>
   146d0:	ldr	r0, [sl]
   146d4:	mov	r3, #0
   146d8:	mov	r2, r0
   146dc:	str	r3, [r2, #24]
   146e0:	add	r3, r3, #1
   146e4:	cmp	r1, r3
   146e8:	add	r2, r2, #28
   146ec:	bne	146dc <argp_failure@@Base+0x520>
   146f0:	ldr	r3, [pc, #3080]	; 15300 <argp_failure@@Base+0x1144>
   146f4:	mov	r2, #28
   146f8:	bl	10f24 <qsort@plt>
   146fc:	ldr	r3, [fp, #-104]	; 0xffffff98
   14700:	ands	r3, r3, #3
   14704:	moveq	r5, r3
   14708:	beq	148a8 <argp_failure@@Base+0x6ec>
   1470c:	ldr	r0, [fp, #-108]	; 0xffffff94
   14710:	bl	12a60 <argp_parse@@Base+0x135c>
   14714:	mov	r1, #0
   14718:	ldr	r6, [pc, #3044]	; 15304 <argp_failure@@Base+0x1148>
   1471c:	mov	r9, #1
   14720:	add	r3, r0, #14
   14724:	bic	r3, r3, #7
   14728:	sub	sp, sp, r3
   1472c:	add	r7, sp, #8
   14730:	mov	r2, r0
   14734:	mov	r0, r7
   14738:	bl	10ec4 <memset@plt>
   1473c:	ldr	r2, [r4, #24]
   14740:	ldr	r3, [r4, #28]
   14744:	ldr	r8, [r5, #28]
   14748:	sub	r3, r3, r2
   1474c:	ldr	r2, [r4, #16]
   14750:	cmp	r3, r2
   14754:	bls	14760 <argp_failure@@Base+0x5a4>
   14758:	mov	r0, r4
   1475c:	bl	16554 <argp_error@@Base+0x1154>
   14760:	ldr	r3, [r4, #12]
   14764:	cmp	r9, #0
   14768:	str	r8, [r4, #12]
   1476c:	ldrne	r2, [pc, #2964]	; 15308 <argp_failure@@Base+0x114c>
   14770:	ldreq	r2, [pc, #2964]	; 1530c <argp_failure@@Base+0x1150>
   14774:	str	r3, [fp, #-100]	; 0xffffff9c
   14778:	ldr	r1, [pc, #2960]	; 15310 <argp_failure@@Base+0x1154>
   1477c:	ldr	r3, [fp, #4]
   14780:	mov	r0, r4
   14784:	str	r7, [fp, #-76]	; 0xffffffb4
   14788:	bl	16a88 <argp_error@@Base+0x1688>
   1478c:	ldr	r2, [r4, #24]
   14790:	ldr	r3, [r4, #28]
   14794:	ldr	r8, [r5, #28]
   14798:	sub	r3, r3, r2
   1479c:	ldr	r2, [r4, #16]
   147a0:	cmp	r3, r2
   147a4:	bls	147b0 <argp_failure@@Base+0x5f4>
   147a8:	mov	r0, r4
   147ac:	bl	16554 <argp_error@@Base+0x1154>
   147b0:	ldr	r3, [fp, #-104]	; 0xffffff98
   147b4:	ldr	r9, [r4, #4]
   147b8:	tst	r3, #2
   147bc:	str	r8, [r4, #4]
   147c0:	beq	14b24 <argp_failure@@Base+0x968>
   147c4:	ldr	r3, [sl, #4]
   147c8:	cmp	r3, #0
   147cc:	beq	1480c <argp_failure@@Base+0x650>
   147d0:	ldr	r3, [r4, #28]
   147d4:	ldr	r2, [r4, #32]
   147d8:	add	r3, r3, #12
   147dc:	cmp	r2, r3
   147e0:	bcc	14b0c <argp_failure@@Base+0x950>
   147e4:	ldr	r2, [r4, #28]
   147e8:	ldr	r3, [r6]
   147ec:	str	r3, [r2]
   147f0:	ldr	r3, [r6, #4]
   147f4:	str	r3, [r2, #4]
   147f8:	ldr	r3, [r6, #8]
   147fc:	str	r3, [r2, #8]
   14800:	ldr	r3, [r4, #28]
   14804:	add	r3, r3, #12
   14808:	str	r3, [r4, #28]
   1480c:	mov	r3, #1
   14810:	sub	r2, fp, #76	; 0x4c
   14814:	str	r4, [sp]
   14818:	ldr	r1, [fp, #-96]	; 0xffffffa0
   1481c:	ldr	r0, [fp, #-108]	; 0xffffff94
   14820:	bl	13474 <argp_parse@@Base+0x1d70>
   14824:	ldr	r2, [r4, #24]
   14828:	ldr	r3, [r4, #28]
   1482c:	sub	r3, r3, r2
   14830:	ldr	r2, [r4, #16]
   14834:	cmp	r3, r2
   14838:	mov	r8, r0
   1483c:	bls	14848 <argp_failure@@Base+0x68c>
   14840:	mov	r0, r4
   14844:	bl	16554 <argp_error@@Base+0x1154>
   14848:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1484c:	ldr	r2, [r4, #24]
   14850:	str	r3, [r4, #12]
   14854:	ldr	r3, [r4, #28]
   14858:	sub	r3, r3, r2
   1485c:	ldr	r2, [r4, #16]
   14860:	cmp	r3, r2
   14864:	bls	14870 <argp_failure@@Base+0x6b4>
   14868:	mov	r0, r4
   1486c:	bl	16554 <argp_error@@Base+0x1154>
   14870:	ldr	r2, [r4, #28]
   14874:	ldr	r3, [r4, #32]
   14878:	str	r9, [r4, #4]
   1487c:	cmp	r2, r3
   14880:	bcs	14b40 <argp_failure@@Base+0x984>
   14884:	ldr	r3, [r4, #28]
   14888:	add	r2, r3, #1
   1488c:	str	r2, [r4, #28]
   14890:	mov	r2, #10
   14894:	strb	r2, [r3]
   14898:	mov	r9, #0
   1489c:	cmp	r8, r9
   148a0:	bne	1473c <argp_failure@@Base+0x580>
   148a4:	mov	r5, #1
   148a8:	ldr	r3, [fp, #-104]	; 0xffffff98
   148ac:	tst	r3, #16
   148b0:	beq	148d8 <argp_failure@@Base+0x71c>
   148b4:	mov	r3, #1
   148b8:	str	r3, [sp]
   148bc:	mov	r3, #0
   148c0:	str	r4, [sp, #4]
   148c4:	mov	r2, r3
   148c8:	ldr	r1, [fp, #-96]	; 0xffffffa0
   148cc:	ldr	r0, [fp, #-108]	; 0xffffff94
   148d0:	bl	12edc <argp_parse@@Base+0x17d8>
   148d4:	orr	r5, r5, r0
   148d8:	ldr	r3, [fp, #-104]	; 0xffffff98
   148dc:	tst	r3, #4
   148e0:	beq	148fc <argp_failure@@Base+0x740>
   148e4:	ldr	r3, [fp, #4]
   148e8:	ldr	r1, [pc, #2596]	; 15314 <argp_failure@@Base+0x1158>
   148ec:	mov	r2, r3
   148f0:	mov	r0, r4
   148f4:	bl	16a88 <argp_error@@Base+0x1688>
   148f8:	mov	r5, #1
   148fc:	ldr	r3, [fp, #-104]	; 0xffffff98
   14900:	tst	r3, #8
   14904:	beq	14a5c <argp_failure@@Base+0x8a0>
   14908:	ldr	r3, [sl, #4]
   1490c:	cmp	r3, #0
   14910:	beq	14a5c <argp_failure@@Base+0x8a0>
   14914:	cmp	r5, #0
   14918:	beq	14940 <argp_failure@@Base+0x784>
   1491c:	ldr	r2, [r4, #28]
   14920:	ldr	r3, [r4, #32]
   14924:	cmp	r2, r3
   14928:	bcs	14b58 <argp_failure@@Base+0x99c>
   1492c:	ldr	r3, [r4, #28]
   14930:	add	r2, r3, #1
   14934:	str	r2, [r4, #28]
   14938:	mov	r2, #10
   1493c:	strb	r2, [r3]
   14940:	mov	r3, #0
   14944:	str	r3, [fp, #-88]	; 0xffffffa8
   14948:	str	r3, [fp, #-84]	; 0xffffffac
   1494c:	str	r3, [fp, #-80]	; 0xffffffb0
   14950:	ldr	r3, [sl]
   14954:	str	r3, [fp, #-100]	; 0xffffff9c
   14958:	ldr	r3, [sl, #4]
   1495c:	str	r3, [fp, #-116]	; 0xffffff8c
   14960:	ldr	r3, [fp, #-116]	; 0xffffff8c
   14964:	cmp	r3, #0
   14968:	bne	14b70 <argp_failure@@Base+0x9b4>
   1496c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   14970:	cmp	r3, #0
   14974:	beq	14a58 <argp_failure@@Base+0x89c>
   14978:	ldr	r3, [pc, #2388]	; 152d4 <argp_failure@@Base+0x1118>
   1497c:	ldr	r3, [r3, #4]
   14980:	cmp	r3, #0
   14984:	beq	14a58 <argp_failure@@Base+0x89c>
   14988:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1498c:	ldr	r1, [pc, #2436]	; 15318 <argp_failure@@Base+0x115c>
   14990:	cmp	r3, #0
   14994:	ldr	r0, [pc, #2432]	; 1531c <argp_failure@@Base+0x1160>
   14998:	ldrne	r2, [r3]
   1499c:	ldreq	r2, [fp, #-96]	; 0xffffffa0
   149a0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   149a4:	bl	12b40 <argp_parse@@Base+0x143c>
   149a8:	subs	r5, r0, #0
   149ac:	beq	14a58 <argp_failure@@Base+0x89c>
   149b0:	ldrb	r3, [r5]
   149b4:	cmp	r3, #0
   149b8:	beq	14a44 <argp_failure@@Base+0x888>
   149bc:	ldr	r2, [r4, #28]
   149c0:	ldr	r3, [r4, #32]
   149c4:	cmp	r2, r3
   149c8:	bcs	151b4 <argp_failure@@Base+0xff8>
   149cc:	ldr	r3, [r4, #28]
   149d0:	add	r2, r3, #1
   149d4:	str	r2, [r4, #28]
   149d8:	mov	r2, #10
   149dc:	strb	r2, [r3]
   149e0:	mov	r0, r5
   149e4:	bl	10e88 <strlen@plt>
   149e8:	subs	r6, r0, #0
   149ec:	beq	14a20 <argp_failure@@Base+0x864>
   149f0:	ldr	r3, [r4, #28]
   149f4:	ldr	r2, [r4, #32]
   149f8:	add	r3, r3, r6
   149fc:	cmp	r2, r3
   14a00:	bcc	151cc <argp_failure@@Base+0x1010>
   14a04:	mov	r2, r6
   14a08:	mov	r1, r5
   14a0c:	ldr	r0, [r4, #28]
   14a10:	bl	10db0 <memcpy@plt>
   14a14:	ldr	r3, [r4, #28]
   14a18:	add	r6, r3, r6
   14a1c:	str	r6, [r4, #28]
   14a20:	ldr	r2, [r4, #28]
   14a24:	ldr	r3, [r4, #32]
   14a28:	cmp	r2, r3
   14a2c:	bcs	151e4 <argp_failure@@Base+0x1028>
   14a30:	ldr	r3, [r4, #28]
   14a34:	add	r2, r3, #1
   14a38:	str	r2, [r4, #28]
   14a3c:	mov	r2, #10
   14a40:	strb	r2, [r3]
   14a44:	ldr	r3, [pc, #2256]	; 1531c <argp_failure@@Base+0x1160>
   14a48:	cmp	r5, r3
   14a4c:	beq	14a58 <argp_failure@@Base+0x89c>
   14a50:	mov	r0, r5
   14a54:	bl	121a0 <argp_parse@@Base+0xa9c>
   14a58:	mov	r5, #1
   14a5c:	ldr	r3, [fp, #-104]	; 0xffffff98
   14a60:	tst	r3, #32
   14a64:	beq	14a8c <argp_failure@@Base+0x8d0>
   14a68:	mov	r3, #0
   14a6c:	str	r3, [sp]
   14a70:	str	r4, [sp, #4]
   14a74:	mov	r3, r5
   14a78:	mov	r2, #1
   14a7c:	ldr	r1, [fp, #-96]	; 0xffffffa0
   14a80:	ldr	r0, [fp, #-108]	; 0xffffff94
   14a84:	bl	12edc <argp_parse@@Base+0x17d8>
   14a88:	orr	r5, r5, r0
   14a8c:	ldr	r3, [fp, #-104]	; 0xffffff98
   14a90:	tst	r3, #64	; 0x40
   14a94:	beq	14ae8 <argp_failure@@Base+0x92c>
   14a98:	ldr	r3, [pc, #2176]	; 15320 <argp_failure@@Base+0x1164>
   14a9c:	mov	r6, r3
   14aa0:	ldr	r2, [r3]
   14aa4:	cmp	r2, #0
   14aa8:	beq	14ae8 <argp_failure@@Base+0x92c>
   14aac:	cmp	r5, #0
   14ab0:	beq	14ad8 <argp_failure@@Base+0x91c>
   14ab4:	ldr	r2, [r4, #28]
   14ab8:	ldr	r3, [r4, #32]
   14abc:	cmp	r2, r3
   14ac0:	bcs	151fc <argp_failure@@Base+0x1040>
   14ac4:	ldr	r3, [r4, #28]
   14ac8:	add	r2, r3, #1
   14acc:	str	r2, [r4, #28]
   14ad0:	mov	r2, #10
   14ad4:	strb	r2, [r3]
   14ad8:	ldr	r2, [r6]
   14adc:	ldr	r1, [pc, #2112]	; 15324 <argp_failure@@Base+0x1168>
   14ae0:	mov	r0, r4
   14ae4:	bl	16a88 <argp_error@@Base+0x1688>
   14ae8:	ldr	r0, [fp, #-112]	; 0xffffff90
   14aec:	bl	10dec <funlockfile@plt>
   14af0:	cmp	sl, #0
   14af4:	beq	14b00 <argp_failure@@Base+0x944>
   14af8:	mov	r0, sl
   14afc:	bl	12a14 <argp_parse@@Base+0x1310>
   14b00:	mov	r0, r4
   14b04:	bl	16964 <argp_error@@Base+0x1564>
   14b08:	b	143a8 <argp_failure@@Base+0x1ec>
   14b0c:	mov	r1, #12
   14b10:	mov	r0, r4
   14b14:	bl	169a4 <argp_error@@Base+0x15a4>
   14b18:	cmp	r0, #0
   14b1c:	bne	147e4 <argp_failure@@Base+0x628>
   14b20:	b	1480c <argp_failure@@Base+0x650>
   14b24:	mov	r1, r4
   14b28:	mov	r0, sl
   14b2c:	bl	13688 <argp_parse@@Base+0x1f84>
   14b30:	ldr	r3, [fp, #-104]	; 0xffffff98
   14b34:	orr	r3, r3, #2
   14b38:	str	r3, [fp, #-104]	; 0xffffff98
   14b3c:	b	1480c <argp_failure@@Base+0x650>
   14b40:	mov	r1, #1
   14b44:	mov	r0, r4
   14b48:	bl	169a4 <argp_error@@Base+0x15a4>
   14b4c:	cmp	r0, #0
   14b50:	bne	14884 <argp_failure@@Base+0x6c8>
   14b54:	b	14898 <argp_failure@@Base+0x6dc>
   14b58:	mov	r1, #1
   14b5c:	mov	r0, r4
   14b60:	bl	169a4 <argp_error@@Base+0x15a4>
   14b64:	cmp	r0, #0
   14b68:	bne	1492c <argp_failure@@Base+0x770>
   14b6c:	b	14940 <argp_failure@@Base+0x784>
   14b70:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14b74:	ldr	r2, [r4, #24]
   14b78:	ldr	r5, [r3]
   14b7c:	ldr	r9, [r3, #8]
   14b80:	ldr	r3, [r4, #28]
   14b84:	sub	r3, r3, r2
   14b88:	ldr	r2, [r4, #16]
   14b8c:	cmp	r3, r2
   14b90:	bls	14b9c <argp_failure@@Base+0x9e0>
   14b94:	mov	r0, r4
   14b98:	bl	16554 <argp_error@@Base+0x1154>
   14b9c:	ldr	r2, [r4, #12]
   14ba0:	ldr	r3, [r4, #4]
   14ba4:	str	r2, [fp, #-128]	; 0xffffff80
   14ba8:	ldr	r2, [fp, #-100]	; 0xffffff9c
   14bac:	str	r3, [fp, #-124]	; 0xffffff84
   14bb0:	mov	r3, #0
   14bb4:	str	r3, [r4, #4]
   14bb8:	str	r2, [fp, #-76]	; 0xffffffb4
   14bbc:	sub	r2, fp, #88	; 0x58
   14bc0:	str	r2, [fp, #-68]	; 0xffffffbc
   14bc4:	mov	r2, #1
   14bc8:	str	r2, [fp, #-64]	; 0xffffffc0
   14bcc:	ldr	r2, [fp, #-96]	; 0xffffffa0
   14bd0:	str	r4, [fp, #-72]	; 0xffffffb8
   14bd4:	str	r2, [fp, #-60]	; 0xffffffc4
   14bd8:	ldr	r2, [r5, #12]
   14bdc:	ands	r2, r2, #8
   14be0:	str	r2, [fp, #-120]	; 0xffffff88
   14be4:	ldreq	r3, [fp, #-100]	; 0xffffff9c
   14be8:	ldreq	r2, [r3, #4]
   14bec:	addeq	r3, r5, #24
   14bf0:	beq	14c1c <argp_failure@@Base+0xa60>
   14bf4:	str	r3, [fp, #-120]	; 0xffffff88
   14bf8:	b	14c24 <argp_failure@@Base+0xa68>
   14bfc:	ldr	r1, [r3, #-24]	; 0xffffffe8
   14c00:	cmp	r1, #0
   14c04:	beq	14c14 <argp_failure@@Base+0xa58>
   14c08:	ldr	r1, [r3, #-12]
   14c0c:	tst	r1, #2
   14c10:	beq	14dac <argp_failure@@Base+0xbf0>
   14c14:	sub	r2, r2, #1
   14c18:	add	r3, r3, #24
   14c1c:	cmp	r2, #0
   14c20:	bne	14bfc <argp_failure@@Base+0xa40>
   14c24:	ldr	r3, [pc, #1704]	; 152d4 <argp_failure@@Base+0x1118>
   14c28:	ldr	r2, [r4, #24]
   14c2c:	ldr	r6, [r3, #8]
   14c30:	ldr	r3, [r4, #28]
   14c34:	sub	r3, r3, r2
   14c38:	ldr	r2, [r4, #16]
   14c3c:	cmp	r3, r2
   14c40:	bls	14c4c <argp_failure@@Base+0xa90>
   14c44:	mov	r0, r4
   14c48:	bl	16554 <argp_error@@Base+0x1154>
   14c4c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14c50:	str	r6, [r4, #12]
   14c54:	ldr	r7, [pc, #1656]	; 152d4 <argp_failure@@Base+0x1118>
   14c58:	ldr	r8, [r3, #4]
   14c5c:	mov	r6, r5
   14c60:	cmp	r8, #0
   14c64:	bne	14db4 <argp_failure@@Base+0xbf8>
   14c68:	ldr	r3, [r5, #12]
   14c6c:	ldr	r1, [pc, #1632]	; 152d4 <argp_failure@@Base+0x1118>
   14c70:	tst	r3, #8
   14c74:	ldr	r2, [r4, #24]
   14c78:	ldr	r3, [r4, #28]
   14c7c:	beq	14ee0 <argp_failure@@Base+0xd24>
   14c80:	sub	r3, r3, r2
   14c84:	ldr	r2, [r4, #16]
   14c88:	ldr	r6, [r1, #16]
   14c8c:	cmp	r3, r2
   14c90:	bls	14c9c <argp_failure@@Base+0xae0>
   14c94:	mov	r0, r4
   14c98:	bl	16554 <argp_error@@Base+0x1154>
   14c9c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14ca0:	str	r6, [r4, #12]
   14ca4:	add	r6, r5, #24
   14ca8:	ldr	r7, [r3, #4]
   14cac:	cmp	r7, #0
   14cb0:	bne	14e50 <argp_failure@@Base+0xc94>
   14cb4:	ldr	r2, [r4, #24]
   14cb8:	ldr	r3, [r4, #28]
   14cbc:	sub	r3, r3, r2
   14cc0:	ldr	r2, [r4, #16]
   14cc4:	cmp	r3, r2
   14cc8:	bls	14cd4 <argp_failure@@Base+0xb18>
   14ccc:	mov	r0, r4
   14cd0:	bl	16554 <argp_error@@Base+0x1154>
   14cd4:	mov	r3, #0
   14cd8:	str	r3, [r4, #4]
   14cdc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   14ce0:	cmp	r3, #0
   14ce4:	beq	14f80 <argp_failure@@Base+0xdc4>
   14ce8:	ldr	r3, [r5, #12]
   14cec:	tst	r3, #8
   14cf0:	bne	14d1c <argp_failure@@Base+0xb60>
   14cf4:	ldr	r6, [r5, #4]
   14cf8:	sub	r3, r6, #1
   14cfc:	cmp	r3, #254	; 0xfe
   14d00:	bhi	14d1c <argp_failure@@Base+0xb60>
   14d04:	bl	10e70 <__ctype_b_loc@plt>
   14d08:	lsl	r6, r6, #1
   14d0c:	ldr	r3, [r0]
   14d10:	ldrh	r3, [r3, r6]
   14d14:	tst	r3, #16384	; 0x4000
   14d18:	bne	14d44 <argp_failure@@Base+0xb88>
   14d1c:	ldr	r3, [r5]
   14d20:	cmp	r3, #0
   14d24:	bne	14d44 <argp_failure@@Base+0xb88>
   14d28:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14d2c:	sub	r2, fp, #76	; 0x4c
   14d30:	ldr	r0, [r5, #16]
   14d34:	ldr	r1, [r3, #20]
   14d38:	bl	12b84 <argp_parse@@Base+0x1480>
   14d3c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14d40:	str	r3, [fp, #-88]	; 0xffffffa8
   14d44:	ldr	r2, [r4, #24]
   14d48:	ldr	r3, [r4, #28]
   14d4c:	sub	r3, r3, r2
   14d50:	ldr	r2, [r4, #16]
   14d54:	cmp	r3, r2
   14d58:	bls	14d64 <argp_failure@@Base+0xba8>
   14d5c:	mov	r0, r4
   14d60:	bl	16554 <argp_error@@Base+0x1154>
   14d64:	ldr	r3, [fp, #-124]	; 0xffffff84
   14d68:	ldr	r2, [r4, #24]
   14d6c:	str	r3, [r4, #4]
   14d70:	ldr	r3, [r4, #28]
   14d74:	sub	r3, r3, r2
   14d78:	ldr	r2, [r4, #16]
   14d7c:	cmp	r3, r2
   14d80:	bls	14d8c <argp_failure@@Base+0xbd0>
   14d84:	mov	r0, r4
   14d88:	bl	16554 <argp_error@@Base+0x1154>
   14d8c:	ldr	r3, [fp, #-128]	; 0xffffff80
   14d90:	str	r3, [r4, #12]
   14d94:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14d98:	add	r3, r3, #28
   14d9c:	str	r3, [fp, #-100]	; 0xffffff9c
   14da0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   14da4:	sub	r3, r3, #1
   14da8:	b	1495c <argp_failure@@Base+0x7a0>
   14dac:	mov	r3, #1
   14db0:	b	14bf4 <argp_failure@@Base+0xa38>
   14db4:	ldr	r2, [r6, #12]
   14db8:	tst	r2, #8
   14dbc:	str	r2, [fp, #-136]	; 0xffffff78
   14dc0:	bne	14df8 <argp_failure@@Base+0xc3c>
   14dc4:	ldr	r3, [r6, #4]
   14dc8:	sub	r1, r3, #1
   14dcc:	cmp	r1, #254	; 0xfe
   14dd0:	str	r3, [fp, #-132]	; 0xffffff7c
   14dd4:	bhi	14df8 <argp_failure@@Base+0xc3c>
   14dd8:	bl	10e70 <__ctype_b_loc@plt>
   14ddc:	ldr	r3, [fp, #-132]	; 0xffffff7c
   14de0:	ldr	r2, [fp, #-136]	; 0xffffff78
   14de4:	lsl	r1, r3, #1
   14de8:	ldr	r0, [r0]
   14dec:	ldrh	r1, [r0, r1]
   14df0:	tst	r1, #16384	; 0x4000
   14df4:	bne	15228 <argp_failure@@Base+0x106c>
   14df8:	add	r6, r6, #24
   14dfc:	sub	r8, r8, #1
   14e00:	b	14c60 <argp_failure@@Base+0xaa4>
   14e04:	mov	r1, #1
   14e08:	mov	r0, r4
   14e0c:	bl	169a4 <argp_error@@Base+0x15a4>
   14e10:	cmp	r0, #0
   14e14:	bne	15258 <argp_failure@@Base+0x109c>
   14e18:	b	1526c <argp_failure@@Base+0x10b0>
   14e1c:	mov	r1, #1
   14e20:	mov	r0, r4
   14e24:	str	r2, [fp, #-132]	; 0xffffff7c
   14e28:	bl	169a4 <argp_error@@Base+0x15a4>
   14e2c:	ldr	r2, [fp, #-132]	; 0xffffff7c
   14e30:	cmp	r0, #0
   14e34:	bne	15280 <argp_failure@@Base+0x10c4>
   14e38:	b	15290 <argp_failure@@Base+0x10d4>
   14e3c:	ldr	r3, [r5, #8]
   14e40:	cmp	r3, #0
   14e44:	movne	r3, #1
   14e48:	strne	r3, [fp, #-80]	; 0xffffffb0
   14e4c:	b	152cc <argp_failure@@Base+0x1110>
   14e50:	ldr	r3, [r6, #-24]	; 0xffffffe8
   14e54:	cmp	r3, #0
   14e58:	beq	14ebc <argp_failure@@Base+0xd00>
   14e5c:	ldr	r3, [r6, #-12]
   14e60:	tst	r3, #2
   14e64:	bne	14ebc <argp_failure@@Base+0xd00>
   14e68:	ldr	r3, [pc, #1124]	; 152d4 <argp_failure@@Base+0x1118>
   14e6c:	sub	r1, fp, #76	; 0x4c
   14e70:	ldr	r0, [r3, #16]
   14e74:	bl	12d5c <argp_parse@@Base+0x1658>
   14e78:	ldr	r8, [r6, #-24]	; 0xffffffe8
   14e7c:	mov	r0, r8
   14e80:	bl	10e88 <strlen@plt>
   14e84:	subs	r9, r0, #0
   14e88:	beq	14ebc <argp_failure@@Base+0xd00>
   14e8c:	ldr	r3, [r4, #28]
   14e90:	ldr	r2, [r4, #32]
   14e94:	add	r3, r3, r9
   14e98:	cmp	r2, r3
   14e9c:	bcc	14ec8 <argp_failure@@Base+0xd0c>
   14ea0:	mov	r2, r9
   14ea4:	mov	r1, r8
   14ea8:	ldr	r0, [r4, #28]
   14eac:	bl	10db0 <memcpy@plt>
   14eb0:	ldr	r3, [r4, #28]
   14eb4:	add	r9, r3, r9
   14eb8:	str	r9, [r4, #28]
   14ebc:	sub	r7, r7, #1
   14ec0:	add	r6, r6, #24
   14ec4:	b	14cac <argp_failure@@Base+0xaf0>
   14ec8:	mov	r1, r9
   14ecc:	mov	r0, r4
   14ed0:	bl	169a4 <argp_error@@Base+0x15a4>
   14ed4:	cmp	r0, #0
   14ed8:	bne	14ea0 <argp_failure@@Base+0xce4>
   14edc:	b	14ebc <argp_failure@@Base+0xd00>
   14ee0:	sub	r3, r3, r2
   14ee4:	ldr	r2, [r4, #16]
   14ee8:	ldr	r6, [r1, #12]
   14eec:	cmp	r3, r2
   14ef0:	bls	14efc <argp_failure@@Base+0xd40>
   14ef4:	mov	r0, r4
   14ef8:	bl	16554 <argp_error@@Base+0x1154>
   14efc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14f00:	str	r6, [r4, #12]
   14f04:	ldr	r7, [pc, #968]	; 152d4 <argp_failure@@Base+0x1118>
   14f08:	ldr	r6, [r3, #4]
   14f0c:	ldr	r8, [pc, #1044]	; 15328 <argp_failure@@Base+0x116c>
   14f10:	add	r9, r5, #24
   14f14:	cmp	r6, #0
   14f18:	beq	14cb4 <argp_failure@@Base+0xaf8>
   14f1c:	ldr	r3, [r9, #-24]	; 0xffffffe8
   14f20:	cmp	r3, #0
   14f24:	beq	14f74 <argp_failure@@Base+0xdb8>
   14f28:	ldr	r3, [r9, #-12]
   14f2c:	tst	r3, #2
   14f30:	bne	14f74 <argp_failure@@Base+0xdb8>
   14f34:	sub	r1, fp, #76	; 0x4c
   14f38:	ldr	r0, [r7, #12]
   14f3c:	bl	12d5c <argp_parse@@Base+0x1658>
   14f40:	ldr	r2, [r9, #-24]	; 0xffffffe8
   14f44:	mov	r1, r8
   14f48:	mov	r0, r4
   14f4c:	bl	16a88 <argp_error@@Base+0x1688>
   14f50:	ldr	r2, [r5, #8]
   14f54:	cmp	r2, #0
   14f58:	beq	14f74 <argp_failure@@Base+0xdb8>
   14f5c:	ldr	r3, [r5, #12]
   14f60:	mov	r0, r4
   14f64:	tst	r3, #1
   14f68:	ldrne	r1, [pc, #956]	; 1532c <argp_failure@@Base+0x1170>
   14f6c:	ldreq	r1, [pc, #956]	; 15330 <argp_failure@@Base+0x1174>
   14f70:	bl	16a88 <argp_error@@Base+0x1688>
   14f74:	sub	r6, r6, #1
   14f78:	add	r9, r9, #24
   14f7c:	b	14f14 <argp_failure@@Base+0xd58>
   14f80:	ldr	r2, [fp, #-100]	; 0xffffff9c
   14f84:	ldr	r6, [r5, #16]
   14f88:	ldr	r1, [r5, #4]
   14f8c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   14f90:	ldr	r2, [r2, #20]
   14f94:	mov	r0, r6
   14f98:	bl	12b40 <argp_parse@@Base+0x143c>
   14f9c:	subs	r5, r0, #0
   14fa0:	beq	150b4 <argp_failure@@Base+0xef8>
   14fa4:	ldrb	r3, [r5]
   14fa8:	cmp	r3, #0
   14fac:	beq	150a4 <argp_failure@@Base+0xee8>
   14fb0:	ldr	r2, [r4, #24]
   14fb4:	ldr	r3, [r4, #28]
   14fb8:	sub	r3, r3, r2
   14fbc:	ldr	r2, [r4, #16]
   14fc0:	cmp	r3, r2
   14fc4:	bls	14fd0 <argp_failure@@Base+0xe14>
   14fc8:	mov	r0, r4
   14fcc:	bl	16554 <argp_error@@Base+0x1154>
   14fd0:	ldr	r2, [r4, #24]
   14fd4:	ldr	r3, [r4, #28]
   14fd8:	ldr	r7, [r4, #20]
   14fdc:	sub	r3, r3, r2
   14fe0:	ldr	r8, [pc, #748]	; 152d4 <argp_failure@@Base+0x1118>
   14fe4:	ldr	r2, [r4, #16]
   14fe8:	bic	r7, r7, r7, asr #31
   14fec:	cmp	r3, r2
   14ff0:	ldr	r9, [r8, #20]
   14ff4:	bls	15000 <argp_failure@@Base+0xe44>
   14ff8:	mov	r0, r4
   14ffc:	bl	16554 <argp_error@@Base+0x1154>
   15000:	ldr	r2, [r4, #24]
   15004:	ldr	r3, [r4, #28]
   15008:	str	r9, [r4, #4]
   1500c:	sub	r3, r3, r2
   15010:	ldr	r2, [r4, #16]
   15014:	ldr	r8, [r8, #20]
   15018:	cmp	r3, r2
   1501c:	bls	15028 <argp_failure@@Base+0xe6c>
   15020:	mov	r0, r4
   15024:	bl	16554 <argp_error@@Base+0x1154>
   15028:	ldr	r3, [pc, #676]	; 152d4 <argp_failure@@Base+0x1118>
   1502c:	str	r8, [r4, #12]
   15030:	ldr	r1, [r3, #20]
   15034:	add	r3, r1, #3
   15038:	cmp	r7, r3
   1503c:	bls	1511c <argp_failure@@Base+0xf60>
   15040:	ldr	r2, [r4, #28]
   15044:	ldr	r3, [r4, #32]
   15048:	cmp	r2, r3
   1504c:	bcs	15104 <argp_failure@@Base+0xf48>
   15050:	ldr	r3, [r4, #28]
   15054:	add	r2, r3, #1
   15058:	str	r2, [r4, #28]
   1505c:	mov	r2, #10
   15060:	strb	r2, [r3]
   15064:	mov	r0, r5
   15068:	bl	10e88 <strlen@plt>
   1506c:	subs	r7, r0, #0
   15070:	beq	150a4 <argp_failure@@Base+0xee8>
   15074:	ldr	r3, [r4, #28]
   15078:	ldr	r2, [r4, #32]
   1507c:	add	r3, r3, r7
   15080:	cmp	r2, r3
   15084:	bcc	15184 <argp_failure@@Base+0xfc8>
   15088:	mov	r2, r7
   1508c:	mov	r1, r5
   15090:	ldr	r0, [r4, #28]
   15094:	bl	10db0 <memcpy@plt>
   15098:	ldr	r3, [r4, #28]
   1509c:	add	r7, r3, r7
   150a0:	str	r7, [r4, #28]
   150a4:	cmp	r6, r5
   150a8:	beq	150b4 <argp_failure@@Base+0xef8>
   150ac:	mov	r0, r5
   150b0:	bl	121a0 <argp_parse@@Base+0xa9c>
   150b4:	ldr	r2, [r4, #24]
   150b8:	ldr	r3, [r4, #28]
   150bc:	sub	r3, r3, r2
   150c0:	ldr	r2, [r4, #16]
   150c4:	cmp	r3, r2
   150c8:	bls	150d4 <argp_failure@@Base+0xf18>
   150cc:	mov	r0, r4
   150d0:	bl	16554 <argp_error@@Base+0x1154>
   150d4:	mov	r3, #0
   150d8:	str	r3, [r4, #4]
   150dc:	ldr	r2, [r4, #28]
   150e0:	ldr	r3, [r4, #32]
   150e4:	cmp	r2, r3
   150e8:	bcs	1519c <argp_failure@@Base+0xfe0>
   150ec:	ldr	r3, [r4, #28]
   150f0:	add	r2, r3, #1
   150f4:	str	r2, [r4, #28]
   150f8:	mov	r2, #10
   150fc:	strb	r2, [r3]
   15100:	b	14d3c <argp_failure@@Base+0xb80>
   15104:	mov	r1, #1
   15108:	mov	r0, r4
   1510c:	bl	169a4 <argp_error@@Base+0x15a4>
   15110:	cmp	r0, #0
   15114:	bne	15050 <argp_failure@@Base+0xe94>
   15118:	b	15064 <argp_failure@@Base+0xea8>
   1511c:	cmp	r7, r1
   15120:	bcc	15178 <argp_failure@@Base+0xfbc>
   15124:	ldr	r3, [r4, #28]
   15128:	ldr	r2, [r4, #32]
   1512c:	add	r3, r3, #3
   15130:	cmp	r2, r3
   15134:	bcc	15160 <argp_failure@@Base+0xfa4>
   15138:	ldr	r2, [pc, #500]	; 15334 <argp_failure@@Base+0x1178>
   1513c:	ldr	r3, [r4, #28]
   15140:	ldrh	r1, [r2]
   15144:	ldrb	r2, [r2, #2]
   15148:	strh	r1, [r3]
   1514c:	strb	r2, [r3, #2]
   15150:	ldr	r3, [r4, #28]
   15154:	add	r3, r3, #3
   15158:	str	r3, [r4, #28]
   1515c:	b	15064 <argp_failure@@Base+0xea8>
   15160:	mov	r1, #3
   15164:	mov	r0, r4
   15168:	bl	169a4 <argp_error@@Base+0x15a4>
   1516c:	cmp	r0, #0
   15170:	bne	15138 <argp_failure@@Base+0xf7c>
   15174:	b	15064 <argp_failure@@Base+0xea8>
   15178:	mov	r0, r4
   1517c:	bl	12ab8 <argp_parse@@Base+0x13b4>
   15180:	b	15064 <argp_failure@@Base+0xea8>
   15184:	mov	r1, r7
   15188:	mov	r0, r4
   1518c:	bl	169a4 <argp_error@@Base+0x15a4>
   15190:	cmp	r0, #0
   15194:	bne	15088 <argp_failure@@Base+0xecc>
   15198:	b	150a4 <argp_failure@@Base+0xee8>
   1519c:	mov	r1, #1
   151a0:	mov	r0, r4
   151a4:	bl	169a4 <argp_error@@Base+0x15a4>
   151a8:	cmp	r0, #0
   151ac:	bne	150ec <argp_failure@@Base+0xf30>
   151b0:	b	14d3c <argp_failure@@Base+0xb80>
   151b4:	mov	r1, #1
   151b8:	mov	r0, r4
   151bc:	bl	169a4 <argp_error@@Base+0x15a4>
   151c0:	cmp	r0, #0
   151c4:	bne	149cc <argp_failure@@Base+0x810>
   151c8:	b	149e0 <argp_failure@@Base+0x824>
   151cc:	mov	r1, r6
   151d0:	mov	r0, r4
   151d4:	bl	169a4 <argp_error@@Base+0x15a4>
   151d8:	cmp	r0, #0
   151dc:	bne	14a04 <argp_failure@@Base+0x848>
   151e0:	b	14a20 <argp_failure@@Base+0x864>
   151e4:	mov	r1, #1
   151e8:	mov	r0, r4
   151ec:	bl	169a4 <argp_error@@Base+0x15a4>
   151f0:	cmp	r0, #0
   151f4:	bne	14a30 <argp_failure@@Base+0x874>
   151f8:	b	14a44 <argp_failure@@Base+0x888>
   151fc:	mov	r1, #1
   15200:	mov	r0, r4
   15204:	bl	169a4 <argp_error@@Base+0x15a4>
   15208:	cmp	r0, #0
   1520c:	bne	14ac4 <argp_failure@@Base+0x908>
   15210:	b	14ad8 <argp_failure@@Base+0x91c>
   15214:	cmp	r0, #110	; 0x6e
   15218:	beq	14534 <argp_failure@@Base+0x378>
   1521c:	mov	sl, r5
   15220:	mov	r7, r5
   15224:	b	14560 <argp_failure@@Base+0x3a4>
   15228:	ldrb	r1, [r9]
   1522c:	cmp	r3, r1
   15230:	bne	14df8 <argp_failure@@Base+0xc3c>
   15234:	tst	r2, #2
   15238:	bne	152cc <argp_failure@@Base+0x1110>
   1523c:	sub	r1, fp, #76	; 0x4c
   15240:	ldr	r0, [r7, #8]
   15244:	bl	12d5c <argp_parse@@Base+0x1658>
   15248:	ldr	r2, [r4, #28]
   1524c:	ldr	r3, [r4, #32]
   15250:	cmp	r2, r3
   15254:	bcs	14e04 <argp_failure@@Base+0xc48>
   15258:	ldr	r3, [r4, #28]
   1525c:	add	r2, r3, #1
   15260:	str	r2, [r4, #28]
   15264:	mov	r2, #45	; 0x2d
   15268:	strb	r2, [r3]
   1526c:	ldr	r1, [r4, #28]
   15270:	ldr	r3, [r4, #32]
   15274:	ldrb	r2, [r9]
   15278:	cmp	r1, r3
   1527c:	bcs	14e1c <argp_failure@@Base+0xc60>
   15280:	ldr	r3, [r4, #28]
   15284:	add	r1, r3, #1
   15288:	str	r1, [r4, #28]
   1528c:	strb	r2, [r3]
   15290:	ldr	r3, [fp, #-120]	; 0xffffff88
   15294:	cmp	r3, #0
   15298:	beq	152a8 <argp_failure@@Base+0x10ec>
   1529c:	ldr	r3, [r7]
   152a0:	cmp	r3, #0
   152a4:	beq	14e3c <argp_failure@@Base+0xc80>
   152a8:	ldr	r2, [r5, #8]
   152ac:	cmp	r2, #0
   152b0:	beq	152cc <argp_failure@@Base+0x1110>
   152b4:	ldr	r3, [r5, #12]
   152b8:	mov	r0, r4
   152bc:	tst	r3, #1
   152c0:	ldrne	r1, [pc, #112]	; 15338 <argp_failure@@Base+0x117c>
   152c4:	ldreq	r1, [pc, #112]	; 1533c <argp_failure@@Base+0x1180>
   152c8:	bl	16a88 <argp_error@@Base+0x1688>
   152cc:	add	r9, r9, #1
   152d0:	b	14df8 <argp_failure@@Base+0xc3c>
   152d4:	andeq	r8, r2, r0, lsl #2
   152d8:	muleq	r1, r9, r8
   152dc:	strdeq	r7, [r1], -ip
   152e0:	andeq	r7, r1, r1, lsr #14
   152e4:	andeq	r7, r1, sp, asr #18
   152e8:	andeq	r7, r1, r9, lsl r9
   152ec:	andeq	r7, r1, r7, lsr #17
   152f0:			; <UNDEFINED> instruction: 0x000177b1
   152f4:	ldrdeq	r7, [r1], -r6
   152f8:	andeq	r7, r1, r7, ror #5
   152fc:	ldrdeq	r7, [r1], -pc	; <UNPREDICTABLE>
   15300:	andeq	r3, r1, r4, lsl pc
   15304:	andeq	r7, r1, r9, ror #18
   15308:	andeq	r7, r1, r5, asr r9
   1530c:	andeq	r7, r1, r2, ror #18
   15310:	andeq	r7, r1, ip, asr r9
   15314:	andeq	r7, r1, r6, ror r9
   15318:	andeq	r0, r0, #5
   1531c:	andeq	r7, r1, r5, asr #19
   15320:	andeq	r8, r2, ip, lsl #3
   15324:	andeq	r7, r1, r9, lsr sl
   15328:			; <UNDEFINED> instruction: 0x000179b2
   1532c:			; <UNDEFINED> instruction: 0x000179b7
   15330:			; <UNDEFINED> instruction: 0x000179bd
   15334:	andeq	r7, r1, r1, asr #19
   15338:	andeq	r7, r1, sp, lsr #19
   1533c:	andeq	r7, r1, r5, lsl r9

00015340 <argp_help@@Base>:
   15340:	push	{r0, r1, r2, lr}
   15344:	str	r3, [sp]
   15348:	mov	r3, r2
   1534c:	mov	r2, r1
   15350:	mov	r1, #0
   15354:	bl	1430c <argp_failure@@Base+0x150>
   15358:	add	sp, sp, #12
   1535c:	pop	{pc}		; (ldr pc, [sp], #4)

00015360 <argp_state_help@@Base>:
   15360:	push	{r0, r1, r2, r4, r5, lr}
   15364:	subs	r4, r0, #0
   15368:	mov	r5, r2
   1536c:	beq	15384 <argp_state_help@@Base+0x24>
   15370:	ldr	r3, [r4, #16]
   15374:	tst	r3, #2
   15378:	beq	1539c <argp_state_help@@Base+0x3c>
   1537c:	add	sp, sp, #12
   15380:	pop	{r4, r5, pc}
   15384:	cmp	r1, #0
   15388:	beq	1537c <argp_state_help@@Base+0x1c>
   1538c:	ldr	r3, [pc, #100]	; 153f8 <argp_state_help@@Base+0x98>
   15390:	mov	r0, r4
   15394:	ldr	r3, [r3]
   15398:	b	153b4 <argp_state_help@@Base+0x54>
   1539c:	cmp	r1, #0
   153a0:	beq	1537c <argp_state_help@@Base+0x1c>
   153a4:	tst	r3, #64	; 0x40
   153a8:	ldr	r0, [r4]
   153ac:	ldr	r3, [r4, #40]	; 0x28
   153b0:	orrne	r5, r5, #128	; 0x80
   153b4:	str	r3, [sp]
   153b8:	mov	r2, r1
   153bc:	mov	r3, r5
   153c0:	mov	r1, r4
   153c4:	bl	1430c <argp_failure@@Base+0x150>
   153c8:	cmp	r4, #0
   153cc:	beq	153dc <argp_state_help@@Base+0x7c>
   153d0:	ldr	r3, [r4, #16]
   153d4:	tst	r3, #32
   153d8:	bne	1537c <argp_state_help@@Base+0x1c>
   153dc:	ands	r0, r5, #256	; 0x100
   153e0:	ldrne	r3, [pc, #20]	; 153fc <argp_state_help@@Base+0x9c>
   153e4:	ldrne	r0, [r3]
   153e8:	bne	153f4 <argp_state_help@@Base+0x94>
   153ec:	tst	r5, #512	; 0x200
   153f0:	beq	1537c <argp_state_help@@Base+0x1c>
   153f4:	bl	10e7c <exit@plt>
   153f8:	andeq	r8, r2, r0, asr #2
   153fc:	andeq	r8, r2, r4, lsr r1

00015400 <argp_error@@Base>:
   15400:	push	{r1, r2, r3}
   15404:	push	{r0, r1, r4, r5, lr}
   15408:	subs	r5, r0, #0
   1540c:	beq	15438 <argp_error@@Base+0x38>
   15410:	ldr	r3, [r5, #16]
   15414:	tst	r3, #2
   15418:	bne	15428 <argp_error@@Base+0x28>
   1541c:	ldr	r4, [r5, #44]	; 0x2c
   15420:	cmp	r4, #0
   15424:	bne	15464 <argp_error@@Base+0x64>
   15428:	add	sp, sp, #8
   1542c:	pop	{r4, r5, lr}
   15430:	add	sp, sp, #12
   15434:	bx	lr
   15438:	ldr	r3, [pc, #144]	; 154d0 <argp_error@@Base+0xd0>
   1543c:	ldr	r4, [r3]
   15440:	cmp	r4, #0
   15444:	beq	15428 <argp_error@@Base+0x28>
   15448:	mov	r0, r4
   1544c:	bl	10f00 <flockfile@plt>
   15450:	add	r3, sp, #24
   15454:	str	r3, [sp, #4]
   15458:	ldr	r3, [pc, #116]	; 154d4 <argp_error@@Base+0xd4>
   1545c:	ldr	r0, [r3]
   15460:	b	15478 <argp_error@@Base+0x78>
   15464:	mov	r0, r4
   15468:	bl	10f00 <flockfile@plt>
   1546c:	ldr	r0, [r5, #40]	; 0x28
   15470:	add	r3, sp, #24
   15474:	str	r3, [sp, #4]
   15478:	mov	r1, r4
   1547c:	bl	10d44 <fputs_unlocked@plt>
   15480:	mov	r1, r4
   15484:	mov	r0, #58	; 0x3a
   15488:	bl	10f78 <putc_unlocked@plt>
   1548c:	mov	r1, r4
   15490:	mov	r0, #32
   15494:	bl	10f78 <putc_unlocked@plt>
   15498:	ldr	r2, [sp, #4]
   1549c:	ldr	r1, [sp, #20]
   154a0:	mov	r0, r4
   154a4:	bl	10ee8 <vfprintf@plt>
   154a8:	mov	r1, r4
   154ac:	mov	r0, #10
   154b0:	bl	10f78 <putc_unlocked@plt>
   154b4:	mov	r0, r5
   154b8:	mov	r2, #260	; 0x104
   154bc:	mov	r1, r4
   154c0:	bl	15360 <argp_state_help@@Base>
   154c4:	mov	r0, r4
   154c8:	bl	10dec <funlockfile@plt>
   154cc:	b	15428 <argp_error@@Base+0x28>
   154d0:	andeq	r8, r2, r8, asr #2
   154d4:	andeq	r8, r2, r0, asr #2
   154d8:	ldr	r3, [r1, #32]
   154dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   154e0:	ldr	r7, [r1, #28]
   154e4:	ldr	r6, [r1]
   154e8:	add	r8, r0, r3, lsl #2
   154ec:	mov	lr, r6
   154f0:	mov	r4, r7
   154f4:	cmp	lr, r3
   154f8:	movle	r2, #0
   154fc:	movgt	r2, #1
   15500:	cmp	r4, r3
   15504:	movge	r2, #0
   15508:	cmp	r2, #0
   1550c:	bne	15524 <argp_error@@Base+0x124>
   15510:	sub	r3, r6, r3
   15514:	add	r3, r3, r7
   15518:	str	r3, [r1, #28]
   1551c:	str	r6, [r1, #32]
   15520:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15524:	sub	r2, r3, r4
   15528:	sub	r5, lr, r3
   1552c:	cmp	r5, r2
   15530:	lsl	ip, r4, #2
   15534:	addle	r2, r0, ip
   15538:	movle	r9, r8
   1553c:	movle	ip, #0
   15540:	ble	15574 <argp_error@@Base+0x174>
   15544:	sub	r2, lr, r2
   15548:	add	ip, r0, ip
   1554c:	add	r5, r0, r2, lsl #2
   15550:	add	lr, r0, lr, lsl #2
   15554:	ldr	r9, [ip]
   15558:	ldr	sl, [r5]
   1555c:	str	sl, [ip], #4
   15560:	str	r9, [r5], #4
   15564:	cmp	lr, r5
   15568:	bne	15554 <argp_error@@Base+0x154>
   1556c:	mov	lr, r2
   15570:	b	154f4 <argp_error@@Base+0xf4>
   15574:	ldr	sl, [r2]
   15578:	ldr	fp, [r9]
   1557c:	add	ip, ip, #1
   15580:	cmp	r5, ip
   15584:	str	fp, [r2], #4
   15588:	str	sl, [r9], #4
   1558c:	bgt	15574 <argp_error@@Base+0x174>
   15590:	add	r4, r4, r5
   15594:	mov	r2, lr
   15598:	b	1556c <argp_error@@Base+0x16c>
   1559c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   155a0:	sub	sp, sp, #44	; 0x2c
   155a4:	mov	sl, r1
   155a8:	ldr	r4, [sp, #88]	; 0x58
   155ac:	str	r0, [sp, #36]	; 0x24
   155b0:	str	r2, [sp, #32]
   155b4:	ldr	r8, [r4, #20]
   155b8:	str	r3, [sp, #20]
   155bc:	mov	r9, r8
   155c0:	mov	r3, r9
   155c4:	ldrb	r6, [r3], #1
   155c8:	cmp	r6, #0
   155cc:	cmpne	r6, #61	; 0x3d
   155d0:	movne	r6, #1
   155d4:	moveq	r6, #0
   155d8:	bne	156a0 <argp_error@@Base+0x2a0>
   155dc:	sub	r3, r9, r8
   155e0:	str	r3, [sp, #24]
   155e4:	ldr	r3, [sp, #20]
   155e8:	add	r7, r3, r6, lsl #4
   155ec:	ldr	r5, [r3, r6, lsl #4]
   155f0:	cmp	r5, #0
   155f4:	bne	156a8 <argp_error@@Base+0x2a8>
   155f8:	mov	r8, r5
   155fc:	mov	r7, r5
   15600:	mov	fp, r3
   15604:	mvn	r3, #0
   15608:	str	r3, [sp, #16]
   1560c:	str	r5, [sp, #28]
   15610:	str	r5, [sp, #12]
   15614:	ldr	r0, [fp]
   15618:	cmp	r0, #0
   1561c:	bne	156dc <argp_error@@Base+0x2dc>
   15620:	cmp	r5, #0
   15624:	cmpeq	r8, #0
   15628:	beq	15814 <argp_error@@Base+0x414>
   1562c:	ldr	r3, [sp, #92]	; 0x5c
   15630:	cmp	r3, #0
   15634:	beq	15660 <argp_error@@Base+0x260>
   15638:	cmp	r5, #0
   1563c:	ldr	r7, [pc, #908]	; 159d0 <argp_error@@Base+0x5d0>
   15640:	beq	157a0 <argp_error@@Base+0x3a0>
   15644:	ldr	r3, [r4, #20]
   15648:	ldr	r2, [sl]
   1564c:	str	r3, [sp]
   15650:	ldr	r1, [pc, #892]	; 159d4 <argp_error@@Base+0x5d4>
   15654:	ldr	r3, [sp, #96]	; 0x60
   15658:	ldr	r0, [r7]
   1565c:	bl	10ea0 <fprintf@plt>
   15660:	ldr	r3, [sp, #28]
   15664:	cmp	r3, #0
   15668:	beq	15674 <argp_error@@Base+0x274>
   1566c:	mov	r0, r8
   15670:	bl	121a0 <argp_parse@@Base+0xa9c>
   15674:	ldr	r5, [r4, #20]
   15678:	mov	r0, r5
   1567c:	bl	10e88 <strlen@plt>
   15680:	ldr	r3, [r4]
   15684:	add	r3, r3, #1
   15688:	str	r3, [r4]
   1568c:	mov	r3, #0
   15690:	add	r0, r5, r0
   15694:	str	r0, [r4, #20]
   15698:	str	r3, [r4, #8]
   1569c:	b	1589c <argp_error@@Base+0x49c>
   156a0:	mov	r9, r3
   156a4:	b	155c0 <argp_error@@Base+0x1c0>
   156a8:	ldr	r2, [sp, #24]
   156ac:	mov	r1, r8
   156b0:	mov	r0, r5
   156b4:	bl	10f54 <strncmp@plt>
   156b8:	cmp	r0, #0
   156bc:	bne	156d4 <argp_error@@Base+0x2d4>
   156c0:	mov	r0, r5
   156c4:	bl	10e88 <strlen@plt>
   156c8:	ldr	r3, [sp, #24]
   156cc:	cmp	r3, r0
   156d0:	beq	158a8 <argp_error@@Base+0x4a8>
   156d4:	add	r6, r6, #1
   156d8:	b	155e4 <argp_error@@Base+0x1e4>
   156dc:	ldr	r2, [sp, #24]
   156e0:	ldr	r1, [r4, #20]
   156e4:	bl	10f54 <strncmp@plt>
   156e8:	cmp	r0, #0
   156ec:	bne	1578c <argp_error@@Base+0x38c>
   156f0:	cmp	r7, #0
   156f4:	moveq	r7, fp
   156f8:	ldreq	r3, [sp, #12]
   156fc:	streq	r3, [sp, #16]
   15700:	beq	1578c <argp_error@@Base+0x38c>
   15704:	ldr	r3, [sp, #84]	; 0x54
   15708:	cmp	r3, #0
   1570c:	bne	15740 <argp_error@@Base+0x340>
   15710:	ldr	r1, [r7, #4]
   15714:	ldr	r2, [fp, #4]
   15718:	cmp	r1, r2
   1571c:	bne	15740 <argp_error@@Base+0x340>
   15720:	ldr	r1, [r7, #8]
   15724:	ldr	r2, [fp, #8]
   15728:	cmp	r1, r2
   1572c:	bne	15740 <argp_error@@Base+0x340>
   15730:	ldr	r1, [r7, #12]
   15734:	ldr	r2, [fp, #12]
   15738:	cmp	r1, r2
   1573c:	beq	1578c <argp_error@@Base+0x38c>
   15740:	cmp	r5, #0
   15744:	bne	1578c <argp_error@@Base+0x38c>
   15748:	ldr	r3, [sp, #92]	; 0x5c
   1574c:	cmp	r3, #0
   15750:	beq	15774 <argp_error@@Base+0x374>
   15754:	cmp	r8, #0
   15758:	bne	15780 <argp_error@@Base+0x380>
   1575c:	mov	r0, r6
   15760:	bl	12800 <argp_parse@@Base+0x10fc>
   15764:	subs	r8, r0, #0
   15768:	bne	159ac <argp_error@@Base+0x5ac>
   1576c:	mov	r5, #1
   15770:	b	1578c <argp_error@@Base+0x38c>
   15774:	cmp	r8, #0
   15778:	mov	r5, #1
   1577c:	beq	1578c <argp_error@@Base+0x38c>
   15780:	ldr	r3, [sp, #12]
   15784:	mov	r2, #1
   15788:	strb	r2, [r8, r3]
   1578c:	ldr	r3, [sp, #12]
   15790:	add	fp, fp, #16
   15794:	add	r3, r3, #1
   15798:	str	r3, [sp, #12]
   1579c:	b	15614 <argp_error@@Base+0x214>
   157a0:	ldr	r0, [r7]
   157a4:	bl	10f00 <flockfile@plt>
   157a8:	ldr	r3, [r4, #20]
   157ac:	ldr	r2, [sl]
   157b0:	str	r3, [sp]
   157b4:	ldr	r1, [pc, #540]	; 159d8 <argp_error@@Base+0x5d8>
   157b8:	ldr	r3, [sp, #96]	; 0x60
   157bc:	ldr	r0, [r7]
   157c0:	bl	10ea0 <fprintf@plt>
   157c4:	ldr	r9, [pc, #528]	; 159dc <argp_error@@Base+0x5dc>
   157c8:	cmp	r6, r5
   157cc:	bne	157e8 <argp_error@@Base+0x3e8>
   157d0:	ldr	r1, [r7]
   157d4:	mov	r0, #10
   157d8:	bl	10ef4 <fputc@plt>
   157dc:	ldr	r0, [r7]
   157e0:	bl	10dec <funlockfile@plt>
   157e4:	b	15660 <argp_error@@Base+0x260>
   157e8:	ldrb	r3, [r8, r5]
   157ec:	cmp	r3, #0
   157f0:	beq	1580c <argp_error@@Base+0x40c>
   157f4:	ldr	r3, [sp, #20]
   157f8:	ldr	r2, [sp, #96]	; 0x60
   157fc:	mov	r1, r9
   15800:	ldr	r3, [r3, r5, lsl #4]
   15804:	ldr	r0, [r7]
   15808:	bl	10ea0 <fprintf@plt>
   1580c:	add	r5, r5, #1
   15810:	b	157c8 <argp_error@@Base+0x3c8>
   15814:	cmp	r7, #0
   15818:	bne	158ac <argp_error@@Base+0x4ac>
   1581c:	ldr	r3, [sp, #84]	; 0x54
   15820:	cmp	r3, #0
   15824:	beq	15858 <argp_error@@Base+0x458>
   15828:	ldr	r3, [r4]
   1582c:	ldr	r3, [sl, r3, lsl #2]
   15830:	ldrb	r3, [r3, #1]
   15834:	cmp	r3, #45	; 0x2d
   15838:	beq	15858 <argp_error@@Base+0x458>
   1583c:	ldr	r3, [r4, #20]
   15840:	ldr	r0, [sp, #32]
   15844:	ldrb	r1, [r3]
   15848:	bl	10e94 <strchr@plt>
   1584c:	cmp	r0, #0
   15850:	mvnne	r0, #0
   15854:	bne	158a0 <argp_error@@Base+0x4a0>
   15858:	ldr	r3, [sp, #92]	; 0x5c
   1585c:	cmp	r3, #0
   15860:	beq	15884 <argp_error@@Base+0x484>
   15864:	ldr	r0, [pc, #356]	; 159d0 <argp_error@@Base+0x5d0>
   15868:	ldr	r3, [r4, #20]
   1586c:	ldr	r2, [sl]
   15870:	str	r3, [sp]
   15874:	ldr	r1, [pc, #356]	; 159e0 <argp_error@@Base+0x5e0>
   15878:	ldr	r3, [sp, #96]	; 0x60
   1587c:	ldr	r0, [r0]
   15880:	bl	10ea0 <fprintf@plt>
   15884:	ldr	r3, [r4]
   15888:	mov	r2, #0
   1588c:	add	r3, r3, #1
   15890:	str	r2, [r4, #20]
   15894:	str	r3, [r4]
   15898:	str	r2, [r4, #8]
   1589c:	mov	r0, #63	; 0x3f
   158a0:	add	sp, sp, #44	; 0x2c
   158a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   158a8:	str	r6, [sp, #16]
   158ac:	ldr	r3, [r4]
   158b0:	mov	r1, #0
   158b4:	add	r2, r3, #1
   158b8:	str	r2, [r4]
   158bc:	str	r1, [r4, #20]
   158c0:	ldrb	r1, [r9]
   158c4:	cmp	r1, #0
   158c8:	ldr	r1, [r7, #4]
   158cc:	beq	15914 <argp_error@@Base+0x514>
   158d0:	cmp	r1, #0
   158d4:	addne	r9, r9, #1
   158d8:	strne	r9, [r4, #12]
   158dc:	bne	15938 <argp_error@@Base+0x538>
   158e0:	ldr	r3, [sp, #92]	; 0x5c
   158e4:	cmp	r3, #0
   158e8:	beq	1590c <argp_error@@Base+0x50c>
   158ec:	ldr	r0, [pc, #220]	; 159d0 <argp_error@@Base+0x5d0>
   158f0:	ldr	r3, [r7]
   158f4:	ldr	r2, [sl]
   158f8:	str	r3, [sp]
   158fc:	ldr	r1, [pc, #224]	; 159e4 <argp_error@@Base+0x5e4>
   15900:	ldr	r3, [sp, #96]	; 0x60
   15904:	ldr	r0, [r0]
   15908:	bl	10ea0 <fprintf@plt>
   1590c:	ldr	r3, [r7, #12]
   15910:	b	15698 <argp_error@@Base+0x298>
   15914:	cmp	r1, #1
   15918:	bne	15938 <argp_error@@Base+0x538>
   1591c:	ldr	r1, [sp, #36]	; 0x24
   15920:	cmp	r2, r1
   15924:	bge	15960 <argp_error@@Base+0x560>
   15928:	add	r3, r3, #2
   1592c:	str	r3, [r4]
   15930:	ldr	r3, [sl, r2, lsl #2]
   15934:	str	r3, [r4, #12]
   15938:	ldr	r3, [sp, #80]	; 0x50
   1593c:	cmp	r3, #0
   15940:	ldrne	r2, [sp, #16]
   15944:	strne	r2, [r3]
   15948:	ldr	r3, [r7, #8]
   1594c:	ldr	r0, [r7, #12]
   15950:	cmp	r3, #0
   15954:	strne	r0, [r3]
   15958:	movne	r0, #0
   1595c:	b	158a0 <argp_error@@Base+0x4a0>
   15960:	ldr	r3, [sp, #92]	; 0x5c
   15964:	cmp	r3, #0
   15968:	beq	1598c <argp_error@@Base+0x58c>
   1596c:	ldr	r0, [pc, #92]	; 159d0 <argp_error@@Base+0x5d0>
   15970:	ldr	r3, [r7]
   15974:	ldr	r2, [sl]
   15978:	str	r3, [sp]
   1597c:	ldr	r1, [pc, #100]	; 159e8 <argp_error@@Base+0x5e8>
   15980:	ldr	r3, [sp, #96]	; 0x60
   15984:	ldr	r0, [r0]
   15988:	bl	10ea0 <fprintf@plt>
   1598c:	ldr	r3, [r7, #12]
   15990:	str	r3, [r4, #8]
   15994:	ldr	r3, [sp, #32]
   15998:	ldrb	r0, [r3]
   1599c:	cmp	r0, #58	; 0x3a
   159a0:	moveq	r0, #58	; 0x3a
   159a4:	movne	r0, #63	; 0x3f
   159a8:	b	158a0 <argp_error@@Base+0x4a0>
   159ac:	mov	r2, r6
   159b0:	mov	r1, #0
   159b4:	bl	10ec4 <memset@plt>
   159b8:	ldr	r3, [sp, #16]
   159bc:	mov	r2, #1
   159c0:	strb	r2, [r8, r3]
   159c4:	mov	r3, #1
   159c8:	str	r3, [sp, #28]
   159cc:	b	15780 <argp_error@@Base+0x380>
   159d0:	andeq	r8, r2, r8, asr #2
   159d4:	andeq	r7, r1, sp, asr #20
   159d8:	andeq	r7, r1, sp, ror #20
   159dc:	muleq	r1, ip, sl
   159e0:	andeq	r7, r1, r4, lsr #21
   159e4:	andeq	r7, r1, r4, asr #21
   159e8:	strdeq	r7, [r1], -r1
   159ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   159f0:	sub	sp, sp, #36	; 0x24
   159f4:	subs	r8, r0, #0
   159f8:	ldr	r4, [sp, #80]	; 0x50
   159fc:	ldr	fp, [sp, #72]	; 0x48
   15a00:	ldr	r5, [sp, #76]	; 0x4c
   15a04:	ldr	r9, [r4, #4]
   15a08:	bgt	15a18 <argp_error@@Base+0x618>
   15a0c:	mvn	r0, #0
   15a10:	add	sp, sp, #36	; 0x24
   15a14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15a18:	mov	sl, r3
   15a1c:	mov	r3, #0
   15a20:	str	r3, [r4, #12]
   15a24:	ldr	r3, [r4]
   15a28:	mov	r7, r1
   15a2c:	cmp	r3, #0
   15a30:	mov	r6, r2
   15a34:	beq	15a58 <argp_error@@Base+0x658>
   15a38:	ldr	r3, [r4, #16]
   15a3c:	cmp	r3, #0
   15a40:	beq	15a60 <argp_error@@Base+0x660>
   15a44:	ldrb	r3, [r2]
   15a48:	sub	r3, r3, #43	; 0x2b
   15a4c:	tst	r3, #253	; 0xfd
   15a50:	addeq	r6, r2, #1
   15a54:	b	15a9c <argp_error@@Base+0x69c>
   15a58:	mov	r3, #1
   15a5c:	str	r3, [r4]
   15a60:	ldr	r3, [r4]
   15a64:	str	r3, [r4, #32]
   15a68:	str	r3, [r4, #28]
   15a6c:	mov	r3, #0
   15a70:	str	r3, [r4, #20]
   15a74:	ldrb	r2, [r6]
   15a78:	cmp	r2, #45	; 0x2d
   15a7c:	moveq	r3, #2
   15a80:	beq	15a8c <argp_error@@Base+0x68c>
   15a84:	cmp	r2, #43	; 0x2b
   15a88:	bne	15b9c <argp_error@@Base+0x79c>
   15a8c:	add	r6, r6, #1
   15a90:	str	r3, [r4, #24]
   15a94:	mov	r3, #1
   15a98:	str	r3, [r4, #16]
   15a9c:	ldrb	r3, [r6]
   15aa0:	cmp	r3, #58	; 0x3a
   15aa4:	ldr	r3, [r4, #20]
   15aa8:	moveq	r9, #0
   15aac:	cmp	r3, #0
   15ab0:	beq	15ac0 <argp_error@@Base+0x6c0>
   15ab4:	ldrb	r3, [r3]
   15ab8:	cmp	r3, #0
   15abc:	bne	15c54 <argp_error@@Base+0x854>
   15ac0:	ldr	r3, [r4]
   15ac4:	ldr	r2, [r4, #32]
   15ac8:	cmp	r2, r3
   15acc:	ldr	r2, [r4, #28]
   15ad0:	strgt	r3, [r4, #32]
   15ad4:	cmp	r3, r2
   15ad8:	ldr	r2, [r4, #24]
   15adc:	strlt	r3, [r4, #28]
   15ae0:	cmp	r2, #1
   15ae4:	bne	15b1c <argp_error@@Base+0x71c>
   15ae8:	ldr	r1, [r4, #32]
   15aec:	ldr	r2, [r4, #28]
   15af0:	cmp	r2, r1
   15af4:	beq	15bcc <argp_error@@Base+0x7cc>
   15af8:	cmp	r3, r1
   15afc:	beq	15b0c <argp_error@@Base+0x70c>
   15b00:	mov	r1, r4
   15b04:	mov	r0, r7
   15b08:	bl	154d8 <argp_error@@Base+0xd8>
   15b0c:	ldr	r3, [r4]
   15b10:	cmp	r8, r3
   15b14:	bgt	15bd8 <argp_error@@Base+0x7d8>
   15b18:	str	r3, [r4, #32]
   15b1c:	ldr	r3, [r4]
   15b20:	cmp	r8, r3
   15b24:	beq	15b7c <argp_error@@Base+0x77c>
   15b28:	ldr	r1, [pc, #920]	; 15ec8 <argp_error@@Base+0xac8>
   15b2c:	ldr	r0, [r7, r3, lsl #2]
   15b30:	str	r3, [sp, #24]
   15b34:	bl	10d5c <strcmp@plt>
   15b38:	cmp	r0, #0
   15b3c:	bne	15b7c <argp_error@@Base+0x77c>
   15b40:	ldr	r1, [r4, #28]
   15b44:	ldr	r3, [sp, #24]
   15b48:	ldr	r2, [r4, #32]
   15b4c:	add	r3, r3, #1
   15b50:	cmp	r1, r2
   15b54:	str	r3, [r4]
   15b58:	streq	r3, [r4, #28]
   15b5c:	beq	15b74 <argp_error@@Base+0x774>
   15b60:	cmp	r3, r2
   15b64:	beq	15b74 <argp_error@@Base+0x774>
   15b68:	mov	r1, r4
   15b6c:	mov	r0, r7
   15b70:	bl	154d8 <argp_error@@Base+0xd8>
   15b74:	str	r8, [r4, #32]
   15b78:	str	r8, [r4]
   15b7c:	ldr	r2, [r4]
   15b80:	cmp	r8, r2
   15b84:	bne	15c00 <argp_error@@Base+0x800>
   15b88:	ldr	r3, [r4, #28]
   15b8c:	ldr	r2, [r4, #32]
   15b90:	cmp	r3, r2
   15b94:	strne	r3, [r4]
   15b98:	b	15a0c <argp_error@@Base+0x60c>
   15b9c:	ldr	r3, [sp, #84]	; 0x54
   15ba0:	cmp	r3, #0
   15ba4:	beq	15bb4 <argp_error@@Base+0x7b4>
   15ba8:	mov	r3, #0
   15bac:	str	r3, [r4, #24]
   15bb0:	b	15a94 <argp_error@@Base+0x694>
   15bb4:	ldr	r0, [pc, #784]	; 15ecc <argp_error@@Base+0xacc>
   15bb8:	bl	10e10 <getenv@plt>
   15bbc:	cmp	r0, #0
   15bc0:	bne	15ba8 <argp_error@@Base+0x7a8>
   15bc4:	mov	r3, #1
   15bc8:	b	15bac <argp_error@@Base+0x7ac>
   15bcc:	cmp	r3, r2
   15bd0:	strne	r3, [r4, #28]
   15bd4:	b	15b0c <argp_error@@Base+0x70c>
   15bd8:	ldr	r2, [r7, r3, lsl #2]
   15bdc:	ldrb	r1, [r2]
   15be0:	cmp	r1, #45	; 0x2d
   15be4:	bne	15bf4 <argp_error@@Base+0x7f4>
   15be8:	ldrb	r2, [r2, #1]
   15bec:	cmp	r2, #0
   15bf0:	bne	15b18 <argp_error@@Base+0x718>
   15bf4:	add	r3, r3, #1
   15bf8:	str	r3, [r4]
   15bfc:	b	15b0c <argp_error@@Base+0x70c>
   15c00:	ldr	r3, [r7, r2, lsl #2]
   15c04:	ldrb	r1, [r3]
   15c08:	cmp	r1, #45	; 0x2d
   15c0c:	bne	15c1c <argp_error@@Base+0x81c>
   15c10:	ldrb	r1, [r3, #1]
   15c14:	cmp	r1, #0
   15c18:	bne	15c3c <argp_error@@Base+0x83c>
   15c1c:	ldr	r1, [r4, #24]
   15c20:	cmp	r1, #0
   15c24:	beq	15a0c <argp_error@@Base+0x60c>
   15c28:	add	r2, r2, #1
   15c2c:	str	r2, [r4]
   15c30:	str	r3, [r4, #12]
   15c34:	mov	r0, #1
   15c38:	b	15a10 <argp_error@@Base+0x610>
   15c3c:	cmp	sl, #0
   15c40:	bne	15cd0 <argp_error@@Base+0x8d0>
   15c44:	ldr	r3, [r4]
   15c48:	ldr	r3, [r7, r3, lsl #2]
   15c4c:	add	r3, r3, #1
   15c50:	str	r3, [r4, #20]
   15c54:	ldr	r3, [r4, #20]
   15c58:	mov	r0, r6
   15c5c:	add	r2, r3, #1
   15c60:	str	r2, [r4, #20]
   15c64:	ldrb	r5, [r3]
   15c68:	str	r2, [sp, #28]
   15c6c:	str	r3, [sp, #24]
   15c70:	mov	r1, r5
   15c74:	bl	10e94 <strchr@plt>
   15c78:	ldr	r3, [sp, #24]
   15c7c:	ldr	r2, [sp, #28]
   15c80:	ldrb	r1, [r3, #1]
   15c84:	cmp	r1, #0
   15c88:	ldreq	r1, [r4]
   15c8c:	addeq	r1, r1, #1
   15c90:	streq	r1, [r4]
   15c94:	sub	r1, r5, #58	; 0x3a
   15c98:	cmp	r0, #0
   15c9c:	cmpne	r1, #1
   15ca0:	bhi	15d7c <argp_error@@Base+0x97c>
   15ca4:	cmp	r9, #0
   15ca8:	beq	15cc4 <argp_error@@Base+0x8c4>
   15cac:	ldr	r0, [pc, #540]	; 15ed0 <argp_error@@Base+0xad0>
   15cb0:	mov	r3, r5
   15cb4:	ldr	r2, [r7]
   15cb8:	ldr	r1, [pc, #532]	; 15ed4 <argp_error@@Base+0xad4>
   15cbc:	ldr	r0, [r0]
   15cc0:	bl	10ea0 <fprintf@plt>
   15cc4:	str	r5, [r4, #8]
   15cc8:	mov	r0, #63	; 0x3f
   15ccc:	b	15a10 <argp_error@@Base+0x610>
   15cd0:	cmp	r1, #45	; 0x2d
   15cd4:	bne	15d10 <argp_error@@Base+0x910>
   15cd8:	add	r3, r3, #2
   15cdc:	str	r3, [r4, #20]
   15ce0:	ldr	r3, [pc, #480]	; 15ec8 <argp_error@@Base+0xac8>
   15ce4:	str	r9, [sp, #12]
   15ce8:	str	r3, [sp, #16]
   15cec:	str	r4, [sp, #8]
   15cf0:	str	r5, [sp, #4]
   15cf4:	str	fp, [sp]
   15cf8:	mov	r3, sl
   15cfc:	mov	r2, r6
   15d00:	mov	r1, r7
   15d04:	mov	r0, r8
   15d08:	bl	1559c <argp_error@@Base+0x19c>
   15d0c:	b	15a10 <argp_error@@Base+0x610>
   15d10:	cmp	r5, #0
   15d14:	beq	15c44 <argp_error@@Base+0x844>
   15d18:	ldrb	r2, [r3, #2]
   15d1c:	cmp	r2, #0
   15d20:	bne	15d3c <argp_error@@Base+0x93c>
   15d24:	mov	r0, r6
   15d28:	str	r3, [sp, #24]
   15d2c:	bl	10e94 <strchr@plt>
   15d30:	ldr	r3, [sp, #24]
   15d34:	cmp	r0, #0
   15d38:	bne	15c44 <argp_error@@Base+0x844>
   15d3c:	add	r3, r3, #1
   15d40:	str	r3, [r4, #20]
   15d44:	ldr	r3, [pc, #396]	; 15ed8 <argp_error@@Base+0xad8>
   15d48:	str	r9, [sp, #12]
   15d4c:	str	r3, [sp, #16]
   15d50:	str	r4, [sp, #8]
   15d54:	str	r5, [sp, #4]
   15d58:	str	fp, [sp]
   15d5c:	mov	r3, sl
   15d60:	mov	r2, r6
   15d64:	mov	r1, r7
   15d68:	mov	r0, r8
   15d6c:	bl	1559c <argp_error@@Base+0x19c>
   15d70:	cmn	r0, #1
   15d74:	bne	15a10 <argp_error@@Base+0x610>
   15d78:	b	15c44 <argp_error@@Base+0x844>
   15d7c:	ldrb	r1, [r0]
   15d80:	cmp	r1, #87	; 0x57
   15d84:	ldrb	r1, [r0, #1]
   15d88:	bne	15e24 <argp_error@@Base+0xa24>
   15d8c:	cmp	sl, #0
   15d90:	sub	ip, r1, #59	; 0x3b
   15d94:	clz	ip, ip
   15d98:	lsr	ip, ip, #5
   15d9c:	moveq	ip, #0
   15da0:	cmp	ip, #0
   15da4:	beq	15e24 <argp_error@@Base+0xa24>
   15da8:	ldrb	r3, [r3, #1]
   15dac:	cmp	r3, #0
   15db0:	strne	r2, [r4, #12]
   15db4:	bne	15e04 <argp_error@@Base+0xa04>
   15db8:	ldr	r3, [r4]
   15dbc:	cmp	r8, r3
   15dc0:	ldrne	r3, [r7, r3, lsl #2]
   15dc4:	strne	r3, [r4, #12]
   15dc8:	bne	15e04 <argp_error@@Base+0xa04>
   15dcc:	cmp	r9, #0
   15dd0:	beq	15dec <argp_error@@Base+0x9ec>
   15dd4:	ldr	r0, [pc, #244]	; 15ed0 <argp_error@@Base+0xad0>
   15dd8:	mov	r3, r5
   15ddc:	ldr	r2, [r7]
   15de0:	ldr	r1, [pc, #244]	; 15edc <argp_error@@Base+0xadc>
   15de4:	ldr	r0, [r0]
   15de8:	bl	10ea0 <fprintf@plt>
   15dec:	str	r5, [r4, #8]
   15df0:	ldrb	r0, [r6]
   15df4:	cmp	r0, #58	; 0x3a
   15df8:	moveq	r0, #58	; 0x3a
   15dfc:	movne	r0, #63	; 0x3f
   15e00:	b	15a10 <argp_error@@Base+0x610>
   15e04:	ldr	r3, [r4, #12]
   15e08:	ldr	r2, [pc, #208]	; 15ee0 <argp_error@@Base+0xae0>
   15e0c:	str	r3, [r4, #20]
   15e10:	mov	r3, #0
   15e14:	str	r3, [r4, #12]
   15e18:	str	r2, [sp, #16]
   15e1c:	stmib	sp, {r3, r4, r9}
   15e20:	b	15cf4 <argp_error@@Base+0x8f4>
   15e24:	cmp	r1, #58	; 0x3a
   15e28:	bne	15e74 <argp_error@@Base+0xa74>
   15e2c:	ldrb	r1, [r0, #2]
   15e30:	ldrb	r3, [r3, #1]
   15e34:	cmp	r1, #58	; 0x3a
   15e38:	bne	15e54 <argp_error@@Base+0xa54>
   15e3c:	cmp	r3, #0
   15e40:	strne	r2, [r4, #12]
   15e44:	ldrne	r3, [r4]
   15e48:	bne	15e64 <argp_error@@Base+0xa64>
   15e4c:	str	r3, [r4, #12]
   15e50:	b	15e6c <argp_error@@Base+0xa6c>
   15e54:	cmp	r3, #0
   15e58:	ldr	r3, [r4]
   15e5c:	beq	15e7c <argp_error@@Base+0xa7c>
   15e60:	str	r2, [r4, #12]
   15e64:	add	r3, r3, #1
   15e68:	str	r3, [r4]
   15e6c:	mov	r3, #0
   15e70:	str	r3, [r4, #20]
   15e74:	mov	r0, r5
   15e78:	b	15a10 <argp_error@@Base+0x610>
   15e7c:	cmp	r8, r3
   15e80:	addne	r2, r3, #1
   15e84:	strne	r2, [r4]
   15e88:	ldrne	r3, [r7, r3, lsl #2]
   15e8c:	bne	15e4c <argp_error@@Base+0xa4c>
   15e90:	cmp	r9, #0
   15e94:	beq	15eb0 <argp_error@@Base+0xab0>
   15e98:	ldr	r0, [pc, #48]	; 15ed0 <argp_error@@Base+0xad0>
   15e9c:	mov	r3, r5
   15ea0:	ldr	r2, [r7]
   15ea4:	ldr	r1, [pc, #48]	; 15edc <argp_error@@Base+0xadc>
   15ea8:	ldr	r0, [r0]
   15eac:	bl	10ea0 <fprintf@plt>
   15eb0:	str	r5, [r4, #8]
   15eb4:	ldrb	r5, [r6]
   15eb8:	cmp	r5, #58	; 0x3a
   15ebc:	moveq	r5, #58	; 0x3a
   15ec0:	movne	r5, #63	; 0x3f
   15ec4:	b	15e6c <argp_error@@Base+0xa6c>
   15ec8:	andeq	r7, r1, r0, lsr #5
   15ecc:	andeq	r7, r1, r9, lsl fp
   15ed0:	andeq	r8, r2, r8, asr #2
   15ed4:	andeq	r7, r1, r9, lsr #22
   15ed8:	andeq	r7, r1, r1, lsr #5
   15edc:	andeq	r7, r1, r5, asr #22
   15ee0:	andeq	r7, r1, lr, ror #22
   15ee4:	push	{r4, r5, lr}
   15ee8:	sub	sp, sp, #20
   15eec:	ldr	r5, [pc, #84]	; 15f48 <argp_error@@Base+0xb48>
   15ef0:	ldr	r4, [pc, #84]	; 15f4c <argp_error@@Base+0xb4c>
   15ef4:	ldr	ip, [r5]
   15ef8:	str	r4, [sp, #8]
   15efc:	str	ip, [r4]
   15f00:	ldr	ip, [r5, #4]
   15f04:	str	ip, [r4, #4]
   15f08:	ldr	ip, [sp, #40]	; 0x28
   15f0c:	str	ip, [sp, #12]
   15f10:	ldr	ip, [sp, #36]	; 0x24
   15f14:	str	ip, [sp, #4]
   15f18:	ldr	ip, [sp, #32]
   15f1c:	str	ip, [sp]
   15f20:	bl	159ec <argp_error@@Base+0x5ec>
   15f24:	ldr	r3, [r4]
   15f28:	ldr	r2, [r4, #12]
   15f2c:	str	r3, [r5]
   15f30:	ldr	r3, [pc, #24]	; 15f50 <argp_error@@Base+0xb50>
   15f34:	str	r2, [r3]
   15f38:	ldr	r3, [r4, #8]
   15f3c:	str	r3, [r5, #8]
   15f40:	add	sp, sp, #20
   15f44:	pop	{r4, r5, pc}
   15f48:	andeq	r8, r2, r8, lsr #2
   15f4c:	andeq	r8, r2, r8, ror #2
   15f50:	muleq	r2, r4, r1
   15f54:	push	{r0, r1, r2, r3, r4, lr}
   15f58:	mov	r3, #1
   15f5c:	str	r3, [sp, #8]
   15f60:	mov	r3, #0
   15f64:	str	r3, [sp, #4]
   15f68:	str	r3, [sp]
   15f6c:	bl	15ee4 <argp_error@@Base+0xae4>
   15f70:	add	sp, sp, #20
   15f74:	pop	{pc}		; (ldr pc, [sp], #4)
   15f78:	push	{r4, lr}
   15f7c:	bl	12800 <argp_parse@@Base+0x10fc>
   15f80:	cmp	r0, #0
   15f84:	popne	{r4, pc}
   15f88:	bl	1640c <argp_error@@Base+0x100c>
   15f8c:	push	{r4, lr}
   15f90:	bl	12800 <argp_parse@@Base+0x10fc>
   15f94:	cmp	r0, #0
   15f98:	popne	{r4, pc}
   15f9c:	bl	1640c <argp_error@@Base+0x100c>
   15fa0:	b	15f78 <argp_error@@Base+0xb78>
   15fa4:	push	{r4, r5, r6, lr}
   15fa8:	mov	r5, r0
   15fac:	mov	r4, r1
   15fb0:	bl	16480 <argp_error@@Base+0x1080>
   15fb4:	cmp	r0, #0
   15fb8:	popne	{r4, r5, r6, pc}
   15fbc:	adds	r4, r4, #0
   15fc0:	movne	r4, #1
   15fc4:	cmp	r5, #0
   15fc8:	orreq	r4, r4, #1
   15fcc:	cmp	r4, #0
   15fd0:	popeq	{r4, r5, r6, pc}
   15fd4:	bl	1640c <argp_error@@Base+0x100c>
   15fd8:	push	{r4, lr}
   15fdc:	cmp	r1, #0
   15fe0:	orreq	r1, r1, #1
   15fe4:	bl	16480 <argp_error@@Base+0x1080>
   15fe8:	cmp	r0, #0
   15fec:	popne	{r4, pc}
   15ff0:	bl	1640c <argp_error@@Base+0x100c>
   15ff4:	push	{r4, r5, r6, lr}
   15ff8:	mov	r6, r0
   15ffc:	mov	r5, r1
   16000:	mov	r4, r2
   16004:	bl	16afc <argp_error@@Base+0x16fc>
   16008:	cmp	r0, #0
   1600c:	popne	{r4, r5, r6, pc}
   16010:	cmp	r6, #0
   16014:	beq	16024 <argp_error@@Base+0xc24>
   16018:	cmp	r5, #0
   1601c:	cmpne	r4, #0
   16020:	popeq	{r4, r5, r6, pc}
   16024:	bl	1640c <argp_error@@Base+0x100c>
   16028:	b	15ff4 <argp_error@@Base+0xbf4>
   1602c:	cmp	r2, #0
   16030:	cmpne	r1, #0
   16034:	moveq	r2, #1
   16038:	moveq	r1, r2
   1603c:	push	{r4, lr}
   16040:	bl	16afc <argp_error@@Base+0x16fc>
   16044:	cmp	r0, #0
   16048:	popne	{r4, pc}
   1604c:	bl	1640c <argp_error@@Base+0x100c>
   16050:	mov	r2, r1
   16054:	mov	r1, r0
   16058:	mov	r0, #0
   1605c:	b	15ff4 <argp_error@@Base+0xbf4>
   16060:	mov	r2, r1
   16064:	mov	r1, r0
   16068:	mov	r0, #0
   1606c:	b	1602c <argp_error@@Base+0xc2c>
   16070:	push	{r4, r5, r6, r7, r8, lr}
   16074:	subs	r7, r0, #0
   16078:	mov	r5, r1
   1607c:	mov	r6, r2
   16080:	ldr	r4, [r1]
   16084:	bne	160c0 <argp_error@@Base+0xcc0>
   16088:	cmp	r4, #0
   1608c:	bne	160a8 <argp_error@@Base+0xca8>
   16090:	mov	r1, r2
   16094:	mov	r0, #64	; 0x40
   16098:	bl	16b48 <argp_error@@Base+0x1748>
   1609c:	cmp	r0, #0
   160a0:	movne	r4, r0
   160a4:	addeq	r4, r0, #1
   160a8:	mov	r2, r6
   160ac:	mov	r1, r4
   160b0:	mov	r0, r7
   160b4:	bl	15ff4 <argp_error@@Base+0xbf4>
   160b8:	str	r4, [r5]
   160bc:	pop	{r4, r5, r6, r7, r8, pc}
   160c0:	lsr	r2, r4, #1
   160c4:	add	r3, r2, #1
   160c8:	mvn	r3, r3
   160cc:	cmp	r4, r3
   160d0:	addls	r4, r4, #1
   160d4:	addls	r4, r4, r2
   160d8:	bls	160a8 <argp_error@@Base+0xca8>
   160dc:	bl	1640c <argp_error@@Base+0x100c>
   160e0:	mov	r2, #1
   160e4:	b	16070 <argp_error@@Base+0xc70>
   160e8:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   160ec:	mov	sl, r0
   160f0:	ldr	r8, [r1]
   160f4:	mov	fp, r1
   160f8:	mov	r5, r2
   160fc:	asrs	r4, r8, #1
   16100:	mov	r9, r3
   16104:	ldr	r7, [sp, #48]	; 0x30
   16108:	bpl	161a4 <argp_error@@Base+0xda4>
   1610c:	rsb	r2, r4, #-2147483648	; 0x80000000
   16110:	cmp	r8, r2
   16114:	movge	r2, #0
   16118:	movlt	r2, #1
   1611c:	mvn	r3, r9
   16120:	cmp	r2, #0
   16124:	lsr	r3, r3, #31
   16128:	addeq	r4, r4, r8
   1612c:	mvnne	r4, #-2147483648	; 0x80000000
   16130:	mov	r0, r3
   16134:	cmp	r9, r4
   16138:	movge	r0, #0
   1613c:	andlt	r0, r0, #1
   16140:	cmp	r0, #0
   16144:	str	r3, [sp, #4]
   16148:	bne	16318 <argp_error@@Base+0xf18>
   1614c:	cmp	r7, #0
   16150:	bge	16264 <argp_error@@Base+0xe64>
   16154:	cmp	r4, #0
   16158:	bge	161bc <argp_error@@Base+0xdbc>
   1615c:	mov	r1, r7
   16160:	mvn	r0, #-2147483648	; 0x80000000
   16164:	bl	16d54 <argp_error@@Base+0x1954>
   16168:	cmp	r0, r4
   1616c:	movle	r0, #0
   16170:	movgt	r0, #1
   16174:	cmp	r0, #0
   16178:	mvnne	r6, #-2147483648	; 0x80000000
   1617c:	beq	161cc <argp_error@@Base+0xdcc>
   16180:	mov	r1, r7
   16184:	mov	r0, r6
   16188:	bl	16d54 <argp_error@@Base+0x1954>
   1618c:	mov	r1, r7
   16190:	mov	r4, r0
   16194:	mov	r0, r6
   16198:	bl	16f74 <argp_error@@Base+0x1b74>
   1619c:	sub	r1, r6, r1
   161a0:	b	161dc <argp_error@@Base+0xddc>
   161a4:	mvn	r2, #-2147483648	; 0x80000000
   161a8:	sub	r2, r2, r4
   161ac:	cmp	r8, r2
   161b0:	movle	r2, #0
   161b4:	movgt	r2, #1
   161b8:	b	1611c <argp_error@@Base+0xd1c>
   161bc:	cmn	r7, #1
   161c0:	movne	r1, r7
   161c4:	movne	r0, #-2147483648	; 0x80000000
   161c8:	bne	16330 <argp_error@@Base+0xf30>
   161cc:	mul	r1, r7, r4
   161d0:	cmp	r1, #63	; 0x3f
   161d4:	movle	r6, #64	; 0x40
   161d8:	ble	16180 <argp_error@@Base+0xd80>
   161dc:	cmp	sl, #0
   161e0:	sub	r2, r4, r8
   161e4:	streq	sl, [fp]
   161e8:	cmp	r2, r5
   161ec:	bge	162c0 <argp_error@@Base+0xec0>
   161f0:	cmp	r5, #0
   161f4:	bge	1628c <argp_error@@Base+0xe8c>
   161f8:	rsb	r2, r5, #-2147483648	; 0x80000000
   161fc:	cmp	r8, r2
   16200:	movge	r2, #0
   16204:	movlt	r2, #1
   16208:	cmp	r2, #0
   1620c:	bne	16260 <argp_error@@Base+0xe60>
   16210:	ldr	r0, [sp, #4]
   16214:	add	r5, r8, r5
   16218:	cmp	r9, r5
   1621c:	movge	r0, #0
   16220:	andlt	r0, r0, #1
   16224:	cmp	r0, #0
   16228:	mov	r4, r5
   1622c:	bne	16260 <argp_error@@Base+0xe60>
   16230:	cmp	r7, #0
   16234:	bge	162d4 <argp_error@@Base+0xed4>
   16238:	cmp	r5, #0
   1623c:	bge	162ac <argp_error@@Base+0xeac>
   16240:	mov	r1, r7
   16244:	mvn	r0, #-2147483648	; 0x80000000
   16248:	bl	16d54 <argp_error@@Base+0x1954>
   1624c:	cmp	r5, r0
   16250:	movge	r0, #0
   16254:	movlt	r0, #1
   16258:	cmp	r0, #0
   1625c:	beq	162bc <argp_error@@Base+0xebc>
   16260:	bl	1640c <argp_error@@Base+0x100c>
   16264:	beq	161cc <argp_error@@Base+0xdcc>
   16268:	cmp	r4, #0
   1626c:	bge	16328 <argp_error@@Base+0xf28>
   16270:	cmn	r4, #1
   16274:	beq	161cc <argp_error@@Base+0xdcc>
   16278:	mov	r1, r4
   1627c:	mov	r0, #-2147483648	; 0x80000000
   16280:	bl	16d54 <argp_error@@Base+0x1954>
   16284:	cmp	r7, r0
   16288:	b	1616c <argp_error@@Base+0xd6c>
   1628c:	cmp	r8, #0
   16290:	blt	16210 <argp_error@@Base+0xe10>
   16294:	mvn	r2, #-2147483648	; 0x80000000
   16298:	sub	r2, r2, r5
   1629c:	cmp	r8, r2
   162a0:	movle	r2, #0
   162a4:	movgt	r2, #1
   162a8:	b	16208 <argp_error@@Base+0xe08>
   162ac:	cmn	r7, #1
   162b0:	movne	r1, r7
   162b4:	movne	r0, #-2147483648	; 0x80000000
   162b8:	bne	1630c <argp_error@@Base+0xf0c>
   162bc:	mul	r1, r5, r7
   162c0:	mov	r0, sl
   162c4:	bl	15fa4 <argp_error@@Base+0xba4>
   162c8:	str	r4, [fp]
   162cc:	add	sp, sp, #12
   162d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   162d4:	beq	162bc <argp_error@@Base+0xebc>
   162d8:	cmp	r5, #0
   162dc:	movge	r1, r7
   162e0:	mvnge	r0, #-2147483648	; 0x80000000
   162e4:	bge	1630c <argp_error@@Base+0xf0c>
   162e8:	cmn	r5, #1
   162ec:	beq	162bc <argp_error@@Base+0xebc>
   162f0:	mov	r1, r5
   162f4:	mov	r0, #-2147483648	; 0x80000000
   162f8:	bl	16d54 <argp_error@@Base+0x1954>
   162fc:	cmp	r7, r0
   16300:	movle	r0, #0
   16304:	movgt	r0, #1
   16308:	b	16258 <argp_error@@Base+0xe58>
   1630c:	bl	16d54 <argp_error@@Base+0x1954>
   16310:	cmp	r5, r0
   16314:	b	16300 <argp_error@@Base+0xf00>
   16318:	cmp	r7, #0
   1631c:	mov	r4, r9
   16320:	blt	161bc <argp_error@@Base+0xdbc>
   16324:	beq	161cc <argp_error@@Base+0xdcc>
   16328:	mov	r1, r7
   1632c:	mvn	r0, #-2147483648	; 0x80000000
   16330:	bl	16d54 <argp_error@@Base+0x1954>
   16334:	cmp	r0, r4
   16338:	movge	r0, #0
   1633c:	movlt	r0, #1
   16340:	b	16174 <argp_error@@Base+0xd74>
   16344:	push	{r4, lr}
   16348:	bl	16438 <argp_error@@Base+0x1038>
   1634c:	cmp	r0, #0
   16350:	popne	{r4, pc}
   16354:	bl	1640c <argp_error@@Base+0x100c>
   16358:	mov	r1, #1
   1635c:	b	16344 <argp_error@@Base+0xf44>
   16360:	push	{r4, lr}
   16364:	bl	16438 <argp_error@@Base+0x1038>
   16368:	cmp	r0, #0
   1636c:	popne	{r4, pc}
   16370:	bl	1640c <argp_error@@Base+0x100c>
   16374:	mov	r1, #1
   16378:	b	16360 <argp_error@@Base+0xf60>
   1637c:	push	{r4, r5, r6, lr}
   16380:	mov	r4, r1
   16384:	mov	r5, r0
   16388:	mov	r0, r1
   1638c:	bl	15f78 <argp_error@@Base+0xb78>
   16390:	mov	r2, r4
   16394:	mov	r1, r5
   16398:	pop	{r4, r5, r6, lr}
   1639c:	b	10db0 <memcpy@plt>
   163a0:	push	{r4, r5, r6, lr}
   163a4:	mov	r4, r1
   163a8:	mov	r5, r0
   163ac:	mov	r0, r1
   163b0:	bl	15f8c <argp_error@@Base+0xb8c>
   163b4:	mov	r2, r4
   163b8:	mov	r1, r5
   163bc:	pop	{r4, r5, r6, lr}
   163c0:	b	10db0 <memcpy@plt>
   163c4:	push	{r4, r5, r6, lr}
   163c8:	mov	r5, r0
   163cc:	add	r0, r1, #1
   163d0:	mov	r4, r1
   163d4:	bl	15f8c <argp_error@@Base+0xb8c>
   163d8:	mov	r2, #0
   163dc:	mov	r1, r5
   163e0:	strb	r2, [r0, r4]
   163e4:	mov	r2, r4
   163e8:	pop	{r4, r5, r6, lr}
   163ec:	b	10db0 <memcpy@plt>
   163f0:	push	{r4, lr}
   163f4:	mov	r4, r0
   163f8:	bl	10e88 <strlen@plt>
   163fc:	add	r1, r0, #1
   16400:	mov	r0, r4
   16404:	pop	{r4, lr}
   16408:	b	1637c <argp_error@@Base+0xf7c>
   1640c:	ldr	r3, [pc, #24]	; 1642c <argp_error@@Base+0x102c>
   16410:	push	{r4, lr}
   16414:	mov	r1, #0
   16418:	ldr	r0, [r3]
   1641c:	ldr	r2, [pc, #12]	; 16430 <argp_error@@Base+0x1030>
   16420:	ldr	r3, [pc, #12]	; 16434 <argp_error@@Base+0x1034>
   16424:	bl	10df8 <error@plt>
   16428:	bl	10f60 <abort@plt>
   1642c:	andeq	r8, r2, r8, lsr r1
   16430:	andeq	r7, r1, r6, lsl r9
   16434:	andeq	r7, r1, r2, ror fp
   16438:	cmp	r1, #0
   1643c:	cmpne	r0, #0
   16440:	moveq	r1, #1
   16444:	moveq	r0, r1
   16448:	umull	r2, r3, r0, r1
   1644c:	adds	r3, r3, #0
   16450:	movne	r3, #1
   16454:	cmp	r2, #0
   16458:	blt	16468 <argp_error@@Base+0x1068>
   1645c:	cmp	r3, #0
   16460:	bne	16468 <argp_error@@Base+0x1068>
   16464:	b	10d38 <calloc@plt>
   16468:	push	{r4, lr}
   1646c:	bl	10eac <__errno_location@plt>
   16470:	mov	r3, #12
   16474:	str	r3, [r0]
   16478:	mov	r0, #0
   1647c:	pop	{r4, pc}
   16480:	cmp	r0, #0
   16484:	push	{r4, lr}
   16488:	mov	r4, r1
   1648c:	bne	1649c <argp_error@@Base+0x109c>
   16490:	mov	r0, r1
   16494:	pop	{r4, lr}
   16498:	b	12800 <argp_parse@@Base+0x10fc>
   1649c:	cmp	r1, #0
   164a0:	bne	164b0 <argp_error@@Base+0x10b0>
   164a4:	bl	121a0 <argp_parse@@Base+0xa9c>
   164a8:	mov	r0, #0
   164ac:	pop	{r4, pc}
   164b0:	cmp	r1, #0
   164b4:	blt	164c4 <argp_error@@Base+0x10c4>
   164b8:	mov	r3, #0
   164bc:	cmp	r3, r3
   164c0:	beq	164d4 <argp_error@@Base+0x10d4>
   164c4:	bl	10eac <__errno_location@plt>
   164c8:	mov	r3, #12
   164cc:	str	r3, [r0]
   164d0:	b	164a8 <argp_error@@Base+0x10a8>
   164d4:	pop	{r4, lr}
   164d8:	b	10dd4 <realloc@plt>
   164dc:	push	{r4, r5, r6, r7, r8, lr}
   164e0:	mov	r8, r0
   164e4:	mov	r0, #36	; 0x24
   164e8:	mov	r7, r1
   164ec:	mov	r6, r2
   164f0:	mov	r5, r3
   164f4:	bl	12800 <argp_parse@@Base+0x10fc>
   164f8:	subs	r4, r0, #0
   164fc:	beq	1654c <argp_error@@Base+0x114c>
   16500:	mov	r3, #0
   16504:	str	r5, [r4, #12]
   16508:	str	r8, [r4]
   1650c:	str	r7, [r4, #4]
   16510:	str	r6, [r4, #8]
   16514:	str	r3, [r4, #20]
   16518:	str	r3, [r4, #16]
   1651c:	mov	r0, #200	; 0xc8
   16520:	bl	12800 <argp_parse@@Base+0x10fc>
   16524:	cmp	r0, #0
   16528:	mov	r5, r0
   1652c:	addne	r5, r0, #200	; 0xc8
   16530:	str	r0, [r4, #24]
   16534:	strne	r0, [r4, #28]
   16538:	strne	r5, [r4, #32]
   1653c:	bne	1654c <argp_error@@Base+0x114c>
   16540:	mov	r0, r4
   16544:	bl	121a0 <argp_parse@@Base+0xa9c>
   16548:	mov	r4, r5
   1654c:	mov	r0, r4
   16550:	pop	{r4, r5, r6, r7, r8, pc}
   16554:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16558:	mov	r4, r0
   1655c:	ldr	r6, [r0, #24]
   16560:	ldr	r3, [r0, #16]
   16564:	add	r6, r6, r3
   16568:	ldr	r2, [r4, #28]
   1656c:	cmp	r6, r2
   16570:	bcs	16620 <argp_error@@Base+0x1220>
   16574:	ldr	r7, [r4, #20]
   16578:	cmp	r7, #0
   1657c:	bne	165d4 <argp_error@@Base+0x11d4>
   16580:	ldr	r5, [r4, #4]
   16584:	cmp	r5, #0
   16588:	beq	165d4 <argp_error@@Base+0x11d4>
   1658c:	ldr	r1, [r4, #32]
   16590:	add	r3, r2, r5
   16594:	cmp	r1, r3
   16598:	bls	16638 <argp_error@@Base+0x1238>
   1659c:	add	r7, r6, r5
   165a0:	sub	r2, r2, r6
   165a4:	mov	r1, r6
   165a8:	mov	r0, r7
   165ac:	bl	10d74 <memmove@plt>
   165b0:	ldr	r3, [r4, #28]
   165b4:	mov	r0, r6
   165b8:	add	r3, r3, r5
   165bc:	str	r3, [r4, #28]
   165c0:	mov	r2, r5
   165c4:	mov	r1, #32
   165c8:	bl	10ec4 <memset@plt>
   165cc:	mov	r6, r7
   165d0:	str	r5, [r4, #20]
   165d4:	ldr	r9, [r4, #28]
   165d8:	mov	r1, #10
   165dc:	sub	r8, r9, r6
   165e0:	mov	r2, r8
   165e4:	mov	r0, r6
   165e8:	bl	10ed0 <memchr@plt>
   165ec:	ldr	r2, [r4, #20]
   165f0:	ldr	r5, [r4, #8]
   165f4:	cmp	r2, #0
   165f8:	movlt	r3, #0
   165fc:	strlt	r3, [r4, #20]
   16600:	cmp	r0, #0
   16604:	mov	fp, r0
   16608:	ldr	r0, [r4, #20]
   1660c:	bne	16654 <argp_error@@Base+0x1254>
   16610:	add	r3, r8, r0
   16614:	cmp	r3, r5
   16618:	bcs	16674 <argp_error@@Base+0x1274>
   1661c:	str	r3, [r4, #20]
   16620:	ldr	r3, [r4, #28]
   16624:	ldr	r2, [r4, #24]
   16628:	sub	r3, r3, r2
   1662c:	str	r3, [r4, #16]
   16630:	add	sp, sp, #12
   16634:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16638:	ldr	r1, [r4]
   1663c:	mov	r0, #32
   16640:	add	r7, r7, #1
   16644:	bl	10f78 <putc_unlocked@plt>
   16648:	cmp	r5, r7
   1664c:	bne	16638 <argp_error@@Base+0x1238>
   16650:	b	165d0 <argp_error@@Base+0x11d0>
   16654:	sub	r2, fp, r6
   16658:	add	r2, r2, r0
   1665c:	cmp	r2, r5
   16660:	bge	16678 <argp_error@@Base+0x1278>
   16664:	mov	r3, #0
   16668:	str	r3, [r4, #20]
   1666c:	add	r3, fp, #1
   16670:	b	166d8 <argp_error@@Base+0x12d8>
   16674:	mov	fp, r9
   16678:	ldr	sl, [r4, #12]
   1667c:	cmp	sl, #0
   16680:	subge	r5, r5, r0
   16684:	addge	r5, r6, r5
   16688:	movge	r7, r5
   1668c:	bge	166f8 <argp_error@@Base+0x12f8>
   16690:	cmp	fp, r9
   16694:	sub	sl, r5, #1
   16698:	bcs	166e0 <argp_error@@Base+0x12e0>
   1669c:	sub	r0, sl, r0
   166a0:	sub	r2, r9, fp
   166a4:	mov	r1, fp
   166a8:	add	r0, r6, r0
   166ac:	bl	10d74 <memmove@plt>
   166b0:	ldr	r8, [r4, #20]
   166b4:	sub	sl, sl, r8
   166b8:	add	sl, r6, sl
   166bc:	sub	r3, sl, fp
   166c0:	ldr	sl, [r4, #28]
   166c4:	sub	r3, sl, r3
   166c8:	str	r3, [r4, #28]
   166cc:	mov	r3, #0
   166d0:	str	r3, [r4, #20]
   166d4:	add	r3, r6, r5
   166d8:	mov	r6, r3
   166dc:	b	16568 <argp_error@@Base+0x1168>
   166e0:	add	r0, r8, r0
   166e4:	str	r0, [r4, #20]
   166e8:	sub	r0, sl, r0
   166ec:	add	r9, r9, r0
   166f0:	str	r9, [r4, #28]
   166f4:	b	16620 <argp_error@@Base+0x1220>
   166f8:	cmp	r6, r7
   166fc:	mov	r2, r7
   16700:	bhi	1672c <argp_error@@Base+0x132c>
   16704:	str	r7, [sp, #4]
   16708:	bl	10e70 <__ctype_b_loc@plt>
   1670c:	ldr	r2, [sp, #4]
   16710:	sub	r7, r7, #1
   16714:	ldrb	r1, [r2]
   16718:	lsl	r1, r1, #1
   1671c:	ldr	r0, [r0]
   16720:	ldrh	r1, [r0, r1]
   16724:	tst	r1, #1
   16728:	beq	166f8 <argp_error@@Base+0x12f8>
   1672c:	add	r7, r2, #1
   16730:	cmp	r6, r7
   16734:	bcs	167ac <argp_error@@Base+0x13ac>
   16738:	cmp	r6, r2
   1673c:	bhi	16778 <argp_error@@Base+0x1378>
   16740:	sub	r5, r2, #1
   16744:	cmp	r6, r5
   16748:	mov	r2, r5
   1674c:	bhi	16778 <argp_error@@Base+0x1378>
   16750:	str	r5, [sp, #4]
   16754:	bl	10e70 <__ctype_b_loc@plt>
   16758:	ldr	r2, [sp, #4]
   1675c:	sub	r5, r5, #1
   16760:	ldrb	r3, [r2]
   16764:	lsl	r3, r3, #1
   16768:	ldr	r1, [r0]
   1676c:	ldrh	r3, [r1, r3]
   16770:	tst	r3, #1
   16774:	bne	16744 <argp_error@@Base+0x1344>
   16778:	add	r5, r2, #1
   1677c:	add	r3, r8, #1
   16780:	add	r3, r6, r3
   16784:	cmp	r7, r3
   16788:	bne	16814 <argp_error@@Base+0x1414>
   1678c:	ldr	r3, [r4, #32]
   16790:	sub	r3, r3, r5
   16794:	cmp	sl, r3
   16798:	bge	16824 <argp_error@@Base+0x1424>
   1679c:	mov	r3, #10
   167a0:	add	r9, r5, #1
   167a4:	strb	r3, [r5]
   167a8:	b	168a4 <argp_error@@Base+0x14a4>
   167ac:	cmp	fp, r5
   167b0:	bls	16808 <argp_error@@Base+0x1408>
   167b4:	add	r7, r5, #1
   167b8:	cmp	fp, r7
   167bc:	mov	r5, r7
   167c0:	beq	16808 <argp_error@@Base+0x1408>
   167c4:	bl	10e70 <__ctype_b_loc@plt>
   167c8:	ldrb	r2, [r5]
   167cc:	add	r7, r7, #1
   167d0:	lsl	r2, r2, #1
   167d4:	ldr	r1, [r0]
   167d8:	ldrh	r2, [r1, r2]
   167dc:	tst	r2, #1
   167e0:	beq	167b8 <argp_error@@Base+0x13b8>
   167e4:	bl	10e70 <__ctype_b_loc@plt>
   167e8:	mov	r7, r5
   167ec:	ldr	r2, [r0]
   167f0:	ldrb	r3, [r7, #1]!
   167f4:	lsl	r3, r3, #1
   167f8:	ldrh	r3, [r2, r3]
   167fc:	tst	r3, #1
   16800:	bne	167f0 <argp_error@@Base+0x13f0>
   16804:	b	1677c <argp_error@@Base+0x137c>
   16808:	cmp	fp, r5
   1680c:	bne	167e4 <argp_error@@Base+0x13e4>
   16810:	b	16664 <argp_error@@Base+0x1264>
   16814:	add	r3, r5, #1
   16818:	sub	r3, r7, r3
   1681c:	cmp	sl, r3
   16820:	ble	1679c <argp_error@@Base+0x139c>
   16824:	cmp	r7, r9
   16828:	bcs	1679c <argp_error@@Base+0x139c>
   1682c:	ldr	r3, [r4, #32]
   16830:	add	r0, sl, #1
   16834:	sub	r3, r3, r9
   16838:	cmp	r3, r0
   1683c:	ble	1686c <argp_error@@Base+0x146c>
   16840:	sub	r9, r9, r7
   16844:	mov	r2, r9
   16848:	mov	r1, r7
   1684c:	add	r0, r5, r0
   16850:	bl	10d74 <memmove@plt>
   16854:	ldr	r7, [r4, #12]
   16858:	add	r7, r7, #1
   1685c:	add	r7, r5, r7
   16860:	add	r9, r7, r9
   16864:	sub	r8, r9, r6
   16868:	b	1679c <argp_error@@Base+0x139c>
   1686c:	ldr	r0, [r4, #24]
   16870:	cmp	r5, r0
   16874:	bls	16888 <argp_error@@Base+0x1488>
   16878:	ldr	r3, [r4]
   1687c:	sub	r2, r5, r0
   16880:	mov	r1, #1
   16884:	bl	10dbc <fwrite_unlocked@plt>
   16888:	ldr	r1, [r4]
   1688c:	mov	r0, #10
   16890:	bl	10f78 <putc_unlocked@plt>
   16894:	ldr	r9, [r4, #24]
   16898:	sub	r6, r6, r9
   1689c:	add	r8, r8, r6
   168a0:	mov	r6, r9
   168a4:	ldr	r2, [r4, #12]
   168a8:	sub	r3, r7, r9
   168ac:	cmp	r3, r2
   168b0:	bge	168ec <argp_error@@Base+0x14ec>
   168b4:	add	r3, r8, #1
   168b8:	add	r3, r6, r3
   168bc:	cmp	r7, r3
   168c0:	bne	168d4 <argp_error@@Base+0x14d4>
   168c4:	ldr	r3, [r4, #32]
   168c8:	sub	r3, r3, r7
   168cc:	cmp	r2, r3
   168d0:	ble	168ec <argp_error@@Base+0x14ec>
   168d4:	mov	r5, #0
   168d8:	ldr	r3, [r4, #12]
   168dc:	cmp	r5, r3
   168e0:	blt	16950 <argp_error@@Base+0x1550>
   168e4:	mov	r3, r9
   168e8:	b	16900 <argp_error@@Base+0x1500>
   168ec:	mov	r3, r9
   168f0:	ldr	r1, [r4, #12]
   168f4:	sub	r2, r3, r9
   168f8:	cmp	r1, r2
   168fc:	bgt	16944 <argp_error@@Base+0x1544>
   16900:	cmp	r3, r7
   16904:	bcs	16920 <argp_error@@Base+0x1520>
   16908:	add	r2, r6, r8
   1690c:	mov	r0, r3
   16910:	sub	r2, r2, r7
   16914:	mov	r1, r7
   16918:	bl	10d74 <memmove@plt>
   1691c:	mov	r3, r0
   16920:	ldr	r2, [r4, #12]
   16924:	sub	r6, r7, r6
   16928:	sub	r6, r8, r6
   1692c:	cmp	r2, #0
   16930:	add	r6, r3, r6
   16934:	mvneq	r2, #0
   16938:	str	r6, [r4, #28]
   1693c:	str	r2, [r4, #20]
   16940:	b	166d8 <argp_error@@Base+0x12d8>
   16944:	mov	r2, #32
   16948:	strb	r2, [r3], #1
   1694c:	b	168f0 <argp_error@@Base+0x14f0>
   16950:	ldr	r1, [r4]
   16954:	mov	r0, #32
   16958:	bl	10f78 <putc_unlocked@plt>
   1695c:	add	r5, r5, #1
   16960:	b	168d8 <argp_error@@Base+0x14d8>
   16964:	push	{r4, lr}
   16968:	mov	r4, r0
   1696c:	bl	16554 <argp_error@@Base+0x1154>
   16970:	ldr	r2, [r4, #28]
   16974:	ldr	r0, [r4, #24]
   16978:	cmp	r2, r0
   1697c:	bls	16990 <argp_error@@Base+0x1590>
   16980:	ldr	r3, [r4]
   16984:	sub	r2, r2, r0
   16988:	mov	r1, #1
   1698c:	bl	10dbc <fwrite_unlocked@plt>
   16990:	ldr	r0, [r4, #24]
   16994:	bl	121a0 <argp_parse@@Base+0xa9c>
   16998:	mov	r0, r4
   1699c:	pop	{r4, lr}
   169a0:	b	121a0 <argp_parse@@Base+0xa9c>
   169a4:	ldr	r3, [r0, #32]
   169a8:	ldr	r2, [r0, #28]
   169ac:	sub	r3, r3, r2
   169b0:	cmp	r3, r1
   169b4:	bcc	169c0 <argp_error@@Base+0x15c0>
   169b8:	mov	r0, #1
   169bc:	bx	lr
   169c0:	push	{r4, r5, r6, lr}
   169c4:	mov	r4, r0
   169c8:	mov	r5, r1
   169cc:	bl	16554 <argp_error@@Base+0x1154>
   169d0:	ldr	r0, [r4, #24]
   169d4:	ldr	r2, [r4, #28]
   169d8:	ldr	r3, [r4]
   169dc:	sub	r2, r2, r0
   169e0:	mov	r1, #1
   169e4:	bl	10dbc <fwrite_unlocked@plt>
   169e8:	ldr	r2, [r4, #28]
   169ec:	mov	r1, r0
   169f0:	ldr	r0, [r4, #24]
   169f4:	sub	r3, r2, r0
   169f8:	cmp	r1, r3
   169fc:	bne	16a24 <argp_error@@Base+0x1624>
   16a00:	ldr	r1, [r4, #32]
   16a04:	mov	r3, #0
   16a08:	sub	r1, r1, r0
   16a0c:	cmp	r5, r1
   16a10:	str	r0, [r4, #28]
   16a14:	str	r3, [r4, #16]
   16a18:	bhi	16a4c <argp_error@@Base+0x164c>
   16a1c:	mov	r0, #1
   16a20:	pop	{r4, r5, r6, pc}
   16a24:	ldr	r3, [r4, #16]
   16a28:	sub	r2, r2, r1
   16a2c:	sub	r3, r3, r1
   16a30:	str	r2, [r4, #28]
   16a34:	str	r3, [r4, #16]
   16a38:	sub	r2, r2, r0
   16a3c:	add	r1, r0, r1
   16a40:	bl	10d74 <memmove@plt>
   16a44:	mov	r0, #0
   16a48:	pop	{r4, r5, r6, pc}
   16a4c:	adds	r5, r5, r1
   16a50:	bcc	16a64 <argp_error@@Base+0x1664>
   16a54:	bl	10eac <__errno_location@plt>
   16a58:	mov	r3, #12
   16a5c:	str	r3, [r0]
   16a60:	b	16a44 <argp_error@@Base+0x1644>
   16a64:	mov	r1, r5
   16a68:	bl	16480 <argp_error@@Base+0x1080>
   16a6c:	cmp	r0, #0
   16a70:	beq	16a54 <argp_error@@Base+0x1654>
   16a74:	add	r5, r0, r5
   16a78:	str	r0, [r4, #24]
   16a7c:	str	r5, [r4, #32]
   16a80:	str	r0, [r4, #28]
   16a84:	b	16a1c <argp_error@@Base+0x161c>
   16a88:	push	{r1, r2, r3}
   16a8c:	push	{r0, r1, r2, r4, r5, r6, lr}
   16a90:	mov	r4, r0
   16a94:	mov	r1, #150	; 0x96
   16a98:	add	r6, sp, #32
   16a9c:	mov	r0, r4
   16aa0:	bl	169a4 <argp_error@@Base+0x15a4>
   16aa4:	cmp	r0, #0
   16aa8:	bne	16ac0 <argp_error@@Base+0x16c0>
   16aac:	mvn	r0, #0
   16ab0:	add	sp, sp, #12
   16ab4:	pop	{r4, r5, r6, lr}
   16ab8:	add	sp, sp, #12
   16abc:	bx	lr
   16ac0:	ldr	r0, [r4, #28]
   16ac4:	ldr	r5, [r4, #32]
   16ac8:	mov	r3, r6
   16acc:	sub	r5, r5, r0
   16ad0:	ldr	r2, [sp, #28]
   16ad4:	mov	r1, r5
   16ad8:	str	r6, [sp, #4]
   16adc:	bl	10f0c <vsnprintf@plt>
   16ae0:	cmp	r5, r0
   16ae4:	addls	r1, r0, #1
   16ae8:	bls	16a9c <argp_error@@Base+0x169c>
   16aec:	ldr	r3, [r4, #28]
   16af0:	add	r3, r3, r0
   16af4:	str	r3, [r4, #28]
   16af8:	b	16ab0 <argp_error@@Base+0x16b0>
   16afc:	push	{r4, r5, r6, lr}
   16b00:	subs	r4, r2, #0
   16b04:	mov	r6, r0
   16b08:	mov	r5, r1
   16b0c:	beq	16b24 <argp_error@@Base+0x1724>
   16b10:	mov	r1, r4
   16b14:	mvn	r0, #0
   16b18:	bl	16b48 <argp_error@@Base+0x1748>
   16b1c:	cmp	r0, r5
   16b20:	bcc	16b34 <argp_error@@Base+0x1734>
   16b24:	mul	r1, r5, r4
   16b28:	mov	r0, r6
   16b2c:	pop	{r4, r5, r6, lr}
   16b30:	b	16480 <argp_error@@Base+0x1080>
   16b34:	bl	10eac <__errno_location@plt>
   16b38:	mov	r3, #12
   16b3c:	str	r3, [r0]
   16b40:	mov	r0, #0
   16b44:	pop	{r4, r5, r6, pc}
   16b48:	subs	r2, r1, #1
   16b4c:	bxeq	lr
   16b50:	bcc	16d28 <argp_error@@Base+0x1928>
   16b54:	cmp	r0, r1
   16b58:	bls	16d0c <argp_error@@Base+0x190c>
   16b5c:	tst	r1, r2
   16b60:	beq	16d18 <argp_error@@Base+0x1918>
   16b64:	clz	r3, r0
   16b68:	clz	r2, r1
   16b6c:	sub	r3, r2, r3
   16b70:	rsbs	r3, r3, #31
   16b74:	addne	r3, r3, r3, lsl #1
   16b78:	mov	r2, #0
   16b7c:	addne	pc, pc, r3, lsl #2
   16b80:	nop			; (mov r0, r0)
   16b84:	cmp	r0, r1, lsl #31
   16b88:	adc	r2, r2, r2
   16b8c:	subcs	r0, r0, r1, lsl #31
   16b90:	cmp	r0, r1, lsl #30
   16b94:	adc	r2, r2, r2
   16b98:	subcs	r0, r0, r1, lsl #30
   16b9c:	cmp	r0, r1, lsl #29
   16ba0:	adc	r2, r2, r2
   16ba4:	subcs	r0, r0, r1, lsl #29
   16ba8:	cmp	r0, r1, lsl #28
   16bac:	adc	r2, r2, r2
   16bb0:	subcs	r0, r0, r1, lsl #28
   16bb4:	cmp	r0, r1, lsl #27
   16bb8:	adc	r2, r2, r2
   16bbc:	subcs	r0, r0, r1, lsl #27
   16bc0:	cmp	r0, r1, lsl #26
   16bc4:	adc	r2, r2, r2
   16bc8:	subcs	r0, r0, r1, lsl #26
   16bcc:	cmp	r0, r1, lsl #25
   16bd0:	adc	r2, r2, r2
   16bd4:	subcs	r0, r0, r1, lsl #25
   16bd8:	cmp	r0, r1, lsl #24
   16bdc:	adc	r2, r2, r2
   16be0:	subcs	r0, r0, r1, lsl #24
   16be4:	cmp	r0, r1, lsl #23
   16be8:	adc	r2, r2, r2
   16bec:	subcs	r0, r0, r1, lsl #23
   16bf0:	cmp	r0, r1, lsl #22
   16bf4:	adc	r2, r2, r2
   16bf8:	subcs	r0, r0, r1, lsl #22
   16bfc:	cmp	r0, r1, lsl #21
   16c00:	adc	r2, r2, r2
   16c04:	subcs	r0, r0, r1, lsl #21
   16c08:	cmp	r0, r1, lsl #20
   16c0c:	adc	r2, r2, r2
   16c10:	subcs	r0, r0, r1, lsl #20
   16c14:	cmp	r0, r1, lsl #19
   16c18:	adc	r2, r2, r2
   16c1c:	subcs	r0, r0, r1, lsl #19
   16c20:	cmp	r0, r1, lsl #18
   16c24:	adc	r2, r2, r2
   16c28:	subcs	r0, r0, r1, lsl #18
   16c2c:	cmp	r0, r1, lsl #17
   16c30:	adc	r2, r2, r2
   16c34:	subcs	r0, r0, r1, lsl #17
   16c38:	cmp	r0, r1, lsl #16
   16c3c:	adc	r2, r2, r2
   16c40:	subcs	r0, r0, r1, lsl #16
   16c44:	cmp	r0, r1, lsl #15
   16c48:	adc	r2, r2, r2
   16c4c:	subcs	r0, r0, r1, lsl #15
   16c50:	cmp	r0, r1, lsl #14
   16c54:	adc	r2, r2, r2
   16c58:	subcs	r0, r0, r1, lsl #14
   16c5c:	cmp	r0, r1, lsl #13
   16c60:	adc	r2, r2, r2
   16c64:	subcs	r0, r0, r1, lsl #13
   16c68:	cmp	r0, r1, lsl #12
   16c6c:	adc	r2, r2, r2
   16c70:	subcs	r0, r0, r1, lsl #12
   16c74:	cmp	r0, r1, lsl #11
   16c78:	adc	r2, r2, r2
   16c7c:	subcs	r0, r0, r1, lsl #11
   16c80:	cmp	r0, r1, lsl #10
   16c84:	adc	r2, r2, r2
   16c88:	subcs	r0, r0, r1, lsl #10
   16c8c:	cmp	r0, r1, lsl #9
   16c90:	adc	r2, r2, r2
   16c94:	subcs	r0, r0, r1, lsl #9
   16c98:	cmp	r0, r1, lsl #8
   16c9c:	adc	r2, r2, r2
   16ca0:	subcs	r0, r0, r1, lsl #8
   16ca4:	cmp	r0, r1, lsl #7
   16ca8:	adc	r2, r2, r2
   16cac:	subcs	r0, r0, r1, lsl #7
   16cb0:	cmp	r0, r1, lsl #6
   16cb4:	adc	r2, r2, r2
   16cb8:	subcs	r0, r0, r1, lsl #6
   16cbc:	cmp	r0, r1, lsl #5
   16cc0:	adc	r2, r2, r2
   16cc4:	subcs	r0, r0, r1, lsl #5
   16cc8:	cmp	r0, r1, lsl #4
   16ccc:	adc	r2, r2, r2
   16cd0:	subcs	r0, r0, r1, lsl #4
   16cd4:	cmp	r0, r1, lsl #3
   16cd8:	adc	r2, r2, r2
   16cdc:	subcs	r0, r0, r1, lsl #3
   16ce0:	cmp	r0, r1, lsl #2
   16ce4:	adc	r2, r2, r2
   16ce8:	subcs	r0, r0, r1, lsl #2
   16cec:	cmp	r0, r1, lsl #1
   16cf0:	adc	r2, r2, r2
   16cf4:	subcs	r0, r0, r1, lsl #1
   16cf8:	cmp	r0, r1
   16cfc:	adc	r2, r2, r2
   16d00:	subcs	r0, r0, r1
   16d04:	mov	r0, r2
   16d08:	bx	lr
   16d0c:	moveq	r0, #1
   16d10:	movne	r0, #0
   16d14:	bx	lr
   16d18:	clz	r2, r1
   16d1c:	rsb	r2, r2, #31
   16d20:	lsr	r0, r0, r2
   16d24:	bx	lr
   16d28:	cmp	r0, #0
   16d2c:	mvnne	r0, #0
   16d30:	b	16f94 <argp_error@@Base+0x1b94>
   16d34:	cmp	r1, #0
   16d38:	beq	16d28 <argp_error@@Base+0x1928>
   16d3c:	push	{r0, r1, lr}
   16d40:	bl	16b48 <argp_error@@Base+0x1748>
   16d44:	pop	{r1, r2, lr}
   16d48:	mul	r3, r2, r0
   16d4c:	sub	r1, r1, r3
   16d50:	bx	lr
   16d54:	cmp	r1, #0
   16d58:	beq	16f64 <argp_error@@Base+0x1b64>
   16d5c:	eor	ip, r0, r1
   16d60:	rsbmi	r1, r1, #0
   16d64:	subs	r2, r1, #1
   16d68:	beq	16f30 <argp_error@@Base+0x1b30>
   16d6c:	movs	r3, r0
   16d70:	rsbmi	r3, r0, #0
   16d74:	cmp	r3, r1
   16d78:	bls	16f3c <argp_error@@Base+0x1b3c>
   16d7c:	tst	r1, r2
   16d80:	beq	16f4c <argp_error@@Base+0x1b4c>
   16d84:	clz	r2, r3
   16d88:	clz	r0, r1
   16d8c:	sub	r2, r0, r2
   16d90:	rsbs	r2, r2, #31
   16d94:	addne	r2, r2, r2, lsl #1
   16d98:	mov	r0, #0
   16d9c:	addne	pc, pc, r2, lsl #2
   16da0:	nop			; (mov r0, r0)
   16da4:	cmp	r3, r1, lsl #31
   16da8:	adc	r0, r0, r0
   16dac:	subcs	r3, r3, r1, lsl #31
   16db0:	cmp	r3, r1, lsl #30
   16db4:	adc	r0, r0, r0
   16db8:	subcs	r3, r3, r1, lsl #30
   16dbc:	cmp	r3, r1, lsl #29
   16dc0:	adc	r0, r0, r0
   16dc4:	subcs	r3, r3, r1, lsl #29
   16dc8:	cmp	r3, r1, lsl #28
   16dcc:	adc	r0, r0, r0
   16dd0:	subcs	r3, r3, r1, lsl #28
   16dd4:	cmp	r3, r1, lsl #27
   16dd8:	adc	r0, r0, r0
   16ddc:	subcs	r3, r3, r1, lsl #27
   16de0:	cmp	r3, r1, lsl #26
   16de4:	adc	r0, r0, r0
   16de8:	subcs	r3, r3, r1, lsl #26
   16dec:	cmp	r3, r1, lsl #25
   16df0:	adc	r0, r0, r0
   16df4:	subcs	r3, r3, r1, lsl #25
   16df8:	cmp	r3, r1, lsl #24
   16dfc:	adc	r0, r0, r0
   16e00:	subcs	r3, r3, r1, lsl #24
   16e04:	cmp	r3, r1, lsl #23
   16e08:	adc	r0, r0, r0
   16e0c:	subcs	r3, r3, r1, lsl #23
   16e10:	cmp	r3, r1, lsl #22
   16e14:	adc	r0, r0, r0
   16e18:	subcs	r3, r3, r1, lsl #22
   16e1c:	cmp	r3, r1, lsl #21
   16e20:	adc	r0, r0, r0
   16e24:	subcs	r3, r3, r1, lsl #21
   16e28:	cmp	r3, r1, lsl #20
   16e2c:	adc	r0, r0, r0
   16e30:	subcs	r3, r3, r1, lsl #20
   16e34:	cmp	r3, r1, lsl #19
   16e38:	adc	r0, r0, r0
   16e3c:	subcs	r3, r3, r1, lsl #19
   16e40:	cmp	r3, r1, lsl #18
   16e44:	adc	r0, r0, r0
   16e48:	subcs	r3, r3, r1, lsl #18
   16e4c:	cmp	r3, r1, lsl #17
   16e50:	adc	r0, r0, r0
   16e54:	subcs	r3, r3, r1, lsl #17
   16e58:	cmp	r3, r1, lsl #16
   16e5c:	adc	r0, r0, r0
   16e60:	subcs	r3, r3, r1, lsl #16
   16e64:	cmp	r3, r1, lsl #15
   16e68:	adc	r0, r0, r0
   16e6c:	subcs	r3, r3, r1, lsl #15
   16e70:	cmp	r3, r1, lsl #14
   16e74:	adc	r0, r0, r0
   16e78:	subcs	r3, r3, r1, lsl #14
   16e7c:	cmp	r3, r1, lsl #13
   16e80:	adc	r0, r0, r0
   16e84:	subcs	r3, r3, r1, lsl #13
   16e88:	cmp	r3, r1, lsl #12
   16e8c:	adc	r0, r0, r0
   16e90:	subcs	r3, r3, r1, lsl #12
   16e94:	cmp	r3, r1, lsl #11
   16e98:	adc	r0, r0, r0
   16e9c:	subcs	r3, r3, r1, lsl #11
   16ea0:	cmp	r3, r1, lsl #10
   16ea4:	adc	r0, r0, r0
   16ea8:	subcs	r3, r3, r1, lsl #10
   16eac:	cmp	r3, r1, lsl #9
   16eb0:	adc	r0, r0, r0
   16eb4:	subcs	r3, r3, r1, lsl #9
   16eb8:	cmp	r3, r1, lsl #8
   16ebc:	adc	r0, r0, r0
   16ec0:	subcs	r3, r3, r1, lsl #8
   16ec4:	cmp	r3, r1, lsl #7
   16ec8:	adc	r0, r0, r0
   16ecc:	subcs	r3, r3, r1, lsl #7
   16ed0:	cmp	r3, r1, lsl #6
   16ed4:	adc	r0, r0, r0
   16ed8:	subcs	r3, r3, r1, lsl #6
   16edc:	cmp	r3, r1, lsl #5
   16ee0:	adc	r0, r0, r0
   16ee4:	subcs	r3, r3, r1, lsl #5
   16ee8:	cmp	r3, r1, lsl #4
   16eec:	adc	r0, r0, r0
   16ef0:	subcs	r3, r3, r1, lsl #4
   16ef4:	cmp	r3, r1, lsl #3
   16ef8:	adc	r0, r0, r0
   16efc:	subcs	r3, r3, r1, lsl #3
   16f00:	cmp	r3, r1, lsl #2
   16f04:	adc	r0, r0, r0
   16f08:	subcs	r3, r3, r1, lsl #2
   16f0c:	cmp	r3, r1, lsl #1
   16f10:	adc	r0, r0, r0
   16f14:	subcs	r3, r3, r1, lsl #1
   16f18:	cmp	r3, r1
   16f1c:	adc	r0, r0, r0
   16f20:	subcs	r3, r3, r1
   16f24:	cmp	ip, #0
   16f28:	rsbmi	r0, r0, #0
   16f2c:	bx	lr
   16f30:	teq	ip, r0
   16f34:	rsbmi	r0, r0, #0
   16f38:	bx	lr
   16f3c:	movcc	r0, #0
   16f40:	asreq	r0, ip, #31
   16f44:	orreq	r0, r0, #1
   16f48:	bx	lr
   16f4c:	clz	r2, r1
   16f50:	rsb	r2, r2, #31
   16f54:	cmp	ip, #0
   16f58:	lsr	r0, r3, r2
   16f5c:	rsbmi	r0, r0, #0
   16f60:	bx	lr
   16f64:	cmp	r0, #0
   16f68:	mvngt	r0, #-2147483648	; 0x80000000
   16f6c:	movlt	r0, #-2147483648	; 0x80000000
   16f70:	b	16f94 <argp_error@@Base+0x1b94>
   16f74:	cmp	r1, #0
   16f78:	beq	16f64 <argp_error@@Base+0x1b64>
   16f7c:	push	{r0, r1, lr}
   16f80:	bl	16d5c <argp_error@@Base+0x195c>
   16f84:	pop	{r1, r2, lr}
   16f88:	mul	r3, r2, r0
   16f8c:	sub	r1, r1, r3
   16f90:	bx	lr
   16f94:	push	{r1, lr}
   16f98:	mov	r0, #8
   16f9c:	bl	10d50 <raise@plt>
   16fa0:	pop	{r1, pc}
   16fa4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16fa8:	mov	r7, r0
   16fac:	ldr	r6, [pc, #72]	; 16ffc <argp_error@@Base+0x1bfc>
   16fb0:	ldr	r5, [pc, #72]	; 17000 <argp_error@@Base+0x1c00>
   16fb4:	add	r6, pc, r6
   16fb8:	add	r5, pc, r5
   16fbc:	sub	r6, r6, r5
   16fc0:	mov	r8, r1
   16fc4:	mov	r9, r2
   16fc8:	bl	10d18 <calloc@plt-0x20>
   16fcc:	asrs	r6, r6, #2
   16fd0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16fd4:	mov	r4, #0
   16fd8:	add	r4, r4, #1
   16fdc:	ldr	r3, [r5], #4
   16fe0:	mov	r2, r9
   16fe4:	mov	r1, r8
   16fe8:	mov	r0, r7
   16fec:	blx	r3
   16ff0:	cmp	r6, r4
   16ff4:	bne	16fd8 <argp_error@@Base+0x1bd8>
   16ff8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16ffc:	andeq	r0, r1, ip, asr #30
   17000:	andeq	r0, r1, r4, asr #30
   17004:	bx	lr

Disassembly of section .fini:

00017008 <.fini>:
   17008:	push	{r3, lr}
   1700c:	pop	{r3, pc}
