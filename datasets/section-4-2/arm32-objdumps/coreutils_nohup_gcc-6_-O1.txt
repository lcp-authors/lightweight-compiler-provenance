
../repos/coreutils/src/nohup:     file format elf32-littlearm


Disassembly of section .init:

00010c5c <.init>:
   10c5c:	push	{r3, lr}
   10c60:	bl	10f34 <close@plt+0x48>
   10c64:	pop	{r3, pc}

Disassembly of section .plt:

00010c68 <calloc@plt-0x14>:
   10c68:	push	{lr}		; (str lr, [sp, #-4]!)
   10c6c:	ldr	lr, [pc, #4]	; 10c78 <calloc@plt-0x4>
   10c70:	add	lr, pc, lr
   10c74:	ldr	pc, [lr, #8]!
   10c78:	andeq	r5, r1, r8, lsl #7

00010c7c <calloc@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #86016	; 0x15000
   10c84:	ldr	pc, [ip, #904]!	; 0x388

00010c88 <fputs_unlocked@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #86016	; 0x15000
   10c90:	ldr	pc, [ip, #896]!	; 0x380

00010c94 <raise@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #86016	; 0x15000
   10c9c:	ldr	pc, [ip, #888]!	; 0x378

00010ca0 <strcmp@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #86016	; 0x15000
   10ca8:	ldr	pc, [ip, #880]!	; 0x370

00010cac <fflush@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #86016	; 0x15000
   10cb4:	ldr	pc, [ip, #872]!	; 0x368

00010cb8 <free@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #86016	; 0x15000
   10cc0:	ldr	pc, [ip, #864]!	; 0x360

00010cc4 <_exit@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #86016	; 0x15000
   10ccc:	ldr	pc, [ip, #856]!	; 0x358

00010cd0 <memcpy@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #86016	; 0x15000
   10cd8:	ldr	pc, [ip, #848]!	; 0x350

00010cdc <execvp@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #86016	; 0x15000
   10ce4:	ldr	pc, [ip, #840]!	; 0x348

00010ce8 <mbsinit@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #86016	; 0x15000
   10cf0:	ldr	pc, [ip, #832]!	; 0x340

00010cf4 <signal@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #86016	; 0x15000
   10cfc:	ldr	pc, [ip, #824]!	; 0x338

00010d00 <memcmp@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #86016	; 0x15000
   10d08:	ldr	pc, [ip, #816]!	; 0x330

00010d0c <fputc_unlocked@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #86016	; 0x15000
   10d14:	ldr	pc, [ip, #808]!	; 0x328

00010d18 <dcgettext@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #86016	; 0x15000
   10d20:	ldr	pc, [ip, #800]!	; 0x320

00010d24 <dup2@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #86016	; 0x15000
   10d2c:	ldr	pc, [ip, #792]!	; 0x318

00010d30 <realloc@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #86016	; 0x15000
   10d38:	ldr	pc, [ip, #784]!	; 0x310

00010d3c <textdomain@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #86016	; 0x15000
   10d44:	ldr	pc, [ip, #776]!	; 0x308

00010d48 <iswprint@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #86016	; 0x15000
   10d50:	ldr	pc, [ip, #768]!	; 0x300

00010d54 <fwrite@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #86016	; 0x15000
   10d5c:	ldr	pc, [ip, #760]!	; 0x2f8

00010d60 <lseek64@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #86016	; 0x15000
   10d68:	ldr	pc, [ip, #752]!	; 0x2f0

00010d6c <__ctype_get_mb_cur_max@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #86016	; 0x15000
   10d74:	ldr	pc, [ip, #744]!	; 0x2e8

00010d78 <__fpending@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #86016	; 0x15000
   10d80:	ldr	pc, [ip, #736]!	; 0x2e0

00010d84 <mbrtowc@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #86016	; 0x15000
   10d8c:	ldr	pc, [ip, #728]!	; 0x2d8

00010d90 <error@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #86016	; 0x15000
   10d98:	ldr	pc, [ip, #720]!	; 0x2d0

00010d9c <open64@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #86016	; 0x15000
   10da4:	ldr	pc, [ip, #712]!	; 0x2c8

00010da8 <getenv@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #86016	; 0x15000
   10db0:	ldr	pc, [ip, #704]!	; 0x2c0

00010db4 <malloc@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #86016	; 0x15000
   10dbc:	ldr	pc, [ip, #696]!	; 0x2b8

00010dc0 <__libc_start_main@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #86016	; 0x15000
   10dc8:	ldr	pc, [ip, #688]!	; 0x2b0

00010dcc <__freading@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #86016	; 0x15000
   10dd4:	ldr	pc, [ip, #680]!	; 0x2a8

00010dd8 <__gmon_start__@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #86016	; 0x15000
   10de0:	ldr	pc, [ip, #672]!	; 0x2a0

00010de4 <mempcpy@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #86016	; 0x15000
   10dec:	ldr	pc, [ip, #664]!	; 0x298

00010df0 <getopt_long@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #86016	; 0x15000
   10df8:	ldr	pc, [ip, #656]!	; 0x290

00010dfc <__ctype_b_loc@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #86016	; 0x15000
   10e04:	ldr	pc, [ip, #648]!	; 0x288

00010e08 <exit@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #86016	; 0x15000
   10e10:	ldr	pc, [ip, #640]!	; 0x280

00010e14 <strlen@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #86016	; 0x15000
   10e1c:	ldr	pc, [ip, #632]!	; 0x278

00010e20 <__errno_location@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #86016	; 0x15000
   10e28:	ldr	pc, [ip, #624]!	; 0x270

00010e2c <__cxa_atexit@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #86016	; 0x15000
   10e34:	ldr	pc, [ip, #616]!	; 0x268

00010e38 <memset@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #86016	; 0x15000
   10e40:	ldr	pc, [ip, #608]!	; 0x260

00010e44 <__printf_chk@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #86016	; 0x15000
   10e4c:	ldr	pc, [ip, #600]!	; 0x258

00010e50 <fileno@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #86016	; 0x15000
   10e58:	ldr	pc, [ip, #592]!	; 0x250

00010e5c <__fprintf_chk@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #86016	; 0x15000
   10e64:	ldr	pc, [ip, #584]!	; 0x248

00010e68 <fclose@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #86016	; 0x15000
   10e70:	ldr	pc, [ip, #576]!	; 0x240

00010e74 <fseeko64@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #86016	; 0x15000
   10e7c:	ldr	pc, [ip, #568]!	; 0x238

00010e80 <fcntl64@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #86016	; 0x15000
   10e88:	ldr	pc, [ip, #560]!	; 0x230

00010e8c <setlocale@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #86016	; 0x15000
   10e94:	ldr	pc, [ip, #552]!	; 0x228

00010e98 <strrchr@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #86016	; 0x15000
   10ea0:	ldr	pc, [ip, #544]!	; 0x220

00010ea4 <nl_langinfo@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #86016	; 0x15000
   10eac:	ldr	pc, [ip, #536]!	; 0x218

00010eb0 <bindtextdomain@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #86016	; 0x15000
   10eb8:	ldr	pc, [ip, #528]!	; 0x210

00010ebc <umask@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #86016	; 0x15000
   10ec4:	ldr	pc, [ip, #520]!	; 0x208

00010ec8 <isatty@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #86016	; 0x15000
   10ed0:	ldr	pc, [ip, #512]!	; 0x200

00010ed4 <strncmp@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #86016	; 0x15000
   10edc:	ldr	pc, [ip, #504]!	; 0x1f8

00010ee0 <abort@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #86016	; 0x15000
   10ee8:	ldr	pc, [ip, #496]!	; 0x1f0

00010eec <close@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #86016	; 0x15000
   10ef4:	ldr	pc, [ip, #488]!	; 0x1e8

Disassembly of section .text:

00010ef8 <.text>:
   10ef8:	mov	fp, #0
   10efc:	mov	lr, #0
   10f00:	pop	{r1}		; (ldr r1, [sp], #4)
   10f04:	mov	r2, sp
   10f08:	push	{r2}		; (str r2, [sp, #-4]!)
   10f0c:	push	{r0}		; (str r0, [sp, #-4]!)
   10f10:	ldr	ip, [pc, #16]	; 10f28 <close@plt+0x3c>
   10f14:	push	{ip}		; (str ip, [sp, #-4]!)
   10f18:	ldr	r0, [pc, #12]	; 10f2c <close@plt+0x40>
   10f1c:	ldr	r3, [pc, #12]	; 10f30 <close@plt+0x44>
   10f20:	bl	10dc0 <__libc_start_main@plt>
   10f24:	bl	10ee0 <abort@plt>
   10f28:	strheq	r5, [r1], -r0
   10f2c:	andeq	r1, r1, r8, ror r3
   10f30:	andeq	r5, r1, r0, asr r0
   10f34:	ldr	r3, [pc, #20]	; 10f50 <close@plt+0x64>
   10f38:	ldr	r2, [pc, #20]	; 10f54 <close@plt+0x68>
   10f3c:	add	r3, pc, r3
   10f40:	ldr	r2, [r3, r2]
   10f44:	cmp	r2, #0
   10f48:	bxeq	lr
   10f4c:	b	10dd8 <__gmon_start__@plt>
   10f50:	strheq	r5, [r1], -ip
   10f54:	andeq	r0, r0, r0, ror #1
   10f58:	ldr	r3, [pc, #28]	; 10f7c <close@plt+0x90>
   10f5c:	ldr	r0, [pc, #28]	; 10f80 <close@plt+0x94>
   10f60:	sub	r3, r3, r0
   10f64:	cmp	r3, #6
   10f68:	bxls	lr
   10f6c:	ldr	r3, [pc, #16]	; 10f84 <close@plt+0x98>
   10f70:	cmp	r3, #0
   10f74:	bxeq	lr
   10f78:	bx	r3
   10f7c:	andeq	r6, r2, r7, lsr r1
   10f80:	andeq	r6, r2, r4, lsr r1
   10f84:	andeq	r0, r0, r0
   10f88:	ldr	r1, [pc, #36]	; 10fb4 <close@plt+0xc8>
   10f8c:	ldr	r0, [pc, #36]	; 10fb8 <close@plt+0xcc>
   10f90:	sub	r1, r1, r0
   10f94:	asr	r1, r1, #2
   10f98:	add	r1, r1, r1, lsr #31
   10f9c:	asrs	r1, r1, #1
   10fa0:	bxeq	lr
   10fa4:	ldr	r3, [pc, #16]	; 10fbc <close@plt+0xd0>
   10fa8:	cmp	r3, #0
   10fac:	bxeq	lr
   10fb0:	bx	r3
   10fb4:	andeq	r6, r2, r4, lsr r1
   10fb8:	andeq	r6, r2, r4, lsr r1
   10fbc:	andeq	r0, r0, r0
   10fc0:	push	{r4, lr}
   10fc4:	ldr	r4, [pc, #24]	; 10fe4 <close@plt+0xf8>
   10fc8:	ldrb	r3, [r4]
   10fcc:	cmp	r3, #0
   10fd0:	popne	{r4, pc}
   10fd4:	bl	10f58 <close@plt+0x6c>
   10fd8:	mov	r3, #1
   10fdc:	strb	r3, [r4]
   10fe0:	pop	{r4, pc}
   10fe4:	andeq	r6, r2, r4, asr r1
   10fe8:	ldr	r0, [pc, #40]	; 11018 <close@plt+0x12c>
   10fec:	ldr	r3, [r0]
   10ff0:	cmp	r3, #0
   10ff4:	bne	10ffc <close@plt+0x110>
   10ff8:	b	10f88 <close@plt+0x9c>
   10ffc:	ldr	r3, [pc, #24]	; 1101c <close@plt+0x130>
   11000:	cmp	r3, #0
   11004:	beq	10ff8 <close@plt+0x10c>
   11008:	push	{r4, lr}
   1100c:	blx	r3
   11010:	pop	{r4, lr}
   11014:	b	10f88 <close@plt+0x9c>
   11018:	andeq	r5, r2, r4, lsl pc
   1101c:	andeq	r0, r0, r0
   11020:	push	{lr}		; (str lr, [sp, #-4]!)
   11024:	sub	sp, sp, #60	; 0x3c
   11028:	subs	r6, r0, #0
   1102c:	beq	11068 <close@plt+0x17c>
   11030:	ldr	r3, [pc, #748]	; 11324 <close@plt+0x438>
   11034:	ldr	r4, [r3]
   11038:	mov	r2, #5
   1103c:	ldr	r1, [pc, #740]	; 11328 <close@plt+0x43c>
   11040:	mov	r0, #0
   11044:	bl	10d18 <dcgettext@plt>
   11048:	ldr	r3, [pc, #732]	; 1132c <close@plt+0x440>
   1104c:	ldr	r3, [r3]
   11050:	mov	r2, r0
   11054:	mov	r1, #1
   11058:	mov	r0, r4
   1105c:	bl	10e5c <__fprintf_chk@plt>
   11060:	mov	r0, r6
   11064:	bl	10e08 <exit@plt>
   11068:	mov	r2, #5
   1106c:	ldr	r1, [pc, #700]	; 11330 <close@plt+0x444>
   11070:	mov	r0, #0
   11074:	bl	10d18 <dcgettext@plt>
   11078:	ldr	r5, [pc, #684]	; 1132c <close@plt+0x440>
   1107c:	ldr	r3, [r5]
   11080:	mov	r2, r3
   11084:	mov	r1, r0
   11088:	mov	r0, #1
   1108c:	bl	10e44 <__printf_chk@plt>
   11090:	mov	r2, #5
   11094:	ldr	r1, [pc, #664]	; 11334 <close@plt+0x448>
   11098:	mov	r0, #0
   1109c:	bl	10d18 <dcgettext@plt>
   110a0:	ldr	r4, [pc, #656]	; 11338 <close@plt+0x44c>
   110a4:	ldr	r1, [r4]
   110a8:	bl	10c88 <fputs_unlocked@plt>
   110ac:	mov	r2, #5
   110b0:	ldr	r1, [pc, #644]	; 1133c <close@plt+0x450>
   110b4:	mov	r0, #0
   110b8:	bl	10d18 <dcgettext@plt>
   110bc:	ldr	r1, [r4]
   110c0:	bl	10c88 <fputs_unlocked@plt>
   110c4:	mov	r2, #5
   110c8:	ldr	r1, [pc, #624]	; 11340 <close@plt+0x454>
   110cc:	mov	r0, #0
   110d0:	bl	10d18 <dcgettext@plt>
   110d4:	ldr	r1, [r4]
   110d8:	bl	10c88 <fputs_unlocked@plt>
   110dc:	mov	r2, #5
   110e0:	ldr	r1, [pc, #604]	; 11344 <close@plt+0x458>
   110e4:	mov	r0, #0
   110e8:	bl	10d18 <dcgettext@plt>
   110ec:	ldr	r2, [r5]
   110f0:	mov	r1, r0
   110f4:	mov	r0, #1
   110f8:	bl	10e44 <__printf_chk@plt>
   110fc:	mov	r2, #5
   11100:	ldr	r1, [pc, #576]	; 11348 <close@plt+0x45c>
   11104:	mov	r0, #0
   11108:	bl	10d18 <dcgettext@plt>
   1110c:	ldr	r2, [pc, #568]	; 1134c <close@plt+0x460>
   11110:	mov	r1, r0
   11114:	mov	r0, #1
   11118:	bl	10e44 <__printf_chk@plt>
   1111c:	mov	ip, sp
   11120:	ldr	lr, [pc, #552]	; 11350 <close@plt+0x464>
   11124:	ldm	lr!, {r0, r1, r2, r3}
   11128:	stmia	ip!, {r0, r1, r2, r3}
   1112c:	ldm	lr!, {r0, r1, r2, r3}
   11130:	stmia	ip!, {r0, r1, r2, r3}
   11134:	ldm	lr!, {r0, r1, r2, r3}
   11138:	stmia	ip!, {r0, r1, r2, r3}
   1113c:	ldm	lr, {r0, r1}
   11140:	stm	ip, {r0, r1}
   11144:	ldr	r1, [sp]
   11148:	cmp	r1, #0
   1114c:	moveq	r4, sp
   11150:	beq	11178 <close@plt+0x28c>
   11154:	mov	r4, sp
   11158:	ldr	r5, [pc, #492]	; 1134c <close@plt+0x460>
   1115c:	mov	r0, r5
   11160:	bl	10ca0 <strcmp@plt>
   11164:	cmp	r0, #0
   11168:	beq	11178 <close@plt+0x28c>
   1116c:	ldr	r1, [r4, #8]!
   11170:	cmp	r1, #0
   11174:	bne	1115c <close@plt+0x270>
   11178:	ldr	r4, [r4, #4]
   1117c:	cmp	r4, #0
   11180:	beq	11294 <close@plt+0x3a8>
   11184:	mov	r2, #5
   11188:	ldr	r1, [pc, #452]	; 11354 <close@plt+0x468>
   1118c:	mov	r0, #0
   11190:	bl	10d18 <dcgettext@plt>
   11194:	ldr	r3, [pc, #444]	; 11358 <close@plt+0x46c>
   11198:	ldr	r2, [pc, #444]	; 1135c <close@plt+0x470>
   1119c:	mov	r1, r0
   111a0:	mov	r0, #1
   111a4:	bl	10e44 <__printf_chk@plt>
   111a8:	mov	r1, #0
   111ac:	mov	r0, #5
   111b0:	bl	10e8c <setlocale@plt>
   111b4:	cmp	r0, #0
   111b8:	beq	111d0 <close@plt+0x2e4>
   111bc:	mov	r2, #3
   111c0:	ldr	r1, [pc, #408]	; 11360 <close@plt+0x474>
   111c4:	bl	10ed4 <strncmp@plt>
   111c8:	cmp	r0, #0
   111cc:	bne	11230 <close@plt+0x344>
   111d0:	mov	r2, #5
   111d4:	ldr	r1, [pc, #392]	; 11364 <close@plt+0x478>
   111d8:	mov	r0, #0
   111dc:	bl	10d18 <dcgettext@plt>
   111e0:	ldr	r5, [pc, #356]	; 1134c <close@plt+0x460>
   111e4:	mov	r3, r5
   111e8:	ldr	r2, [pc, #360]	; 11358 <close@plt+0x46c>
   111ec:	mov	r1, r0
   111f0:	mov	r0, #1
   111f4:	bl	10e44 <__printf_chk@plt>
   111f8:	mov	r2, #5
   111fc:	ldr	r1, [pc, #356]	; 11368 <close@plt+0x47c>
   11200:	mov	r0, #0
   11204:	bl	10d18 <dcgettext@plt>
   11208:	mov	r1, r0
   1120c:	ldr	r2, [pc, #344]	; 1136c <close@plt+0x480>
   11210:	ldr	r3, [pc, #344]	; 11370 <close@plt+0x484>
   11214:	cmp	r4, r5
   11218:	movne	r3, r2
   1121c:	mov	r2, r4
   11220:	mov	r0, #1
   11224:	bl	10e44 <__printf_chk@plt>
   11228:	b	11060 <close@plt+0x174>
   1122c:	ldr	r4, [pc, #280]	; 1134c <close@plt+0x460>
   11230:	mov	r2, #5
   11234:	ldr	r1, [pc, #312]	; 11374 <close@plt+0x488>
   11238:	mov	r0, #0
   1123c:	bl	10d18 <dcgettext@plt>
   11240:	ldr	r3, [pc, #240]	; 11338 <close@plt+0x44c>
   11244:	ldr	r1, [r3]
   11248:	bl	10c88 <fputs_unlocked@plt>
   1124c:	b	111d0 <close@plt+0x2e4>
   11250:	mov	r2, #5
   11254:	ldr	r1, [pc, #264]	; 11364 <close@plt+0x478>
   11258:	mov	r0, #0
   1125c:	bl	10d18 <dcgettext@plt>
   11260:	ldr	r4, [pc, #228]	; 1134c <close@plt+0x460>
   11264:	mov	r3, r4
   11268:	ldr	r2, [pc, #232]	; 11358 <close@plt+0x46c>
   1126c:	mov	r1, r0
   11270:	mov	r0, #1
   11274:	bl	10e44 <__printf_chk@plt>
   11278:	mov	r2, #5
   1127c:	ldr	r1, [pc, #228]	; 11368 <close@plt+0x47c>
   11280:	mov	r0, #0
   11284:	bl	10d18 <dcgettext@plt>
   11288:	mov	r1, r0
   1128c:	ldr	r3, [pc, #220]	; 11370 <close@plt+0x484>
   11290:	b	1121c <close@plt+0x330>
   11294:	mov	r2, #5
   11298:	ldr	r1, [pc, #180]	; 11354 <close@plt+0x468>
   1129c:	mov	r0, #0
   112a0:	bl	10d18 <dcgettext@plt>
   112a4:	ldr	r3, [pc, #172]	; 11358 <close@plt+0x46c>
   112a8:	ldr	r2, [pc, #172]	; 1135c <close@plt+0x470>
   112ac:	mov	r1, r0
   112b0:	mov	r0, #1
   112b4:	bl	10e44 <__printf_chk@plt>
   112b8:	mov	r1, #0
   112bc:	mov	r0, #5
   112c0:	bl	10e8c <setlocale@plt>
   112c4:	cmp	r0, #0
   112c8:	beq	11250 <close@plt+0x364>
   112cc:	mov	r2, #3
   112d0:	ldr	r1, [pc, #136]	; 11360 <close@plt+0x474>
   112d4:	bl	10ed4 <strncmp@plt>
   112d8:	cmp	r0, #0
   112dc:	bne	1122c <close@plt+0x340>
   112e0:	mov	r2, #5
   112e4:	ldr	r1, [pc, #120]	; 11364 <close@plt+0x478>
   112e8:	mov	r0, #0
   112ec:	bl	10d18 <dcgettext@plt>
   112f0:	ldr	r4, [pc, #84]	; 1134c <close@plt+0x460>
   112f4:	mov	r3, r4
   112f8:	ldr	r2, [pc, #88]	; 11358 <close@plt+0x46c>
   112fc:	mov	r1, r0
   11300:	mov	r0, #1
   11304:	bl	10e44 <__printf_chk@plt>
   11308:	mov	r2, #5
   1130c:	ldr	r1, [pc, #84]	; 11368 <close@plt+0x47c>
   11310:	mov	r0, #0
   11314:	bl	10d18 <dcgettext@plt>
   11318:	mov	r1, r0
   1131c:	ldr	r3, [pc, #76]	; 11370 <close@plt+0x484>
   11320:	b	1121c <close@plt+0x330>
   11324:	andeq	r6, r2, r8, asr #2
   11328:	andeq	r5, r1, r8, lsl r1
   1132c:	andeq	r6, r2, r4, ror #2
   11330:	andeq	r5, r1, r0, asr #2
   11334:	andeq	r5, r1, r0, ror r1
   11338:	andeq	r6, r2, ip, asr #2
   1133c:	muleq	r1, r8, r1
   11340:	andeq	r5, r1, r8, asr #3
   11344:	andeq	r5, r1, r0, lsl #4
   11348:	andeq	r5, r1, r4, lsr #6
   1134c:	andeq	r5, r1, r0, lsl r1
   11350:	ldrdeq	r5, [r1], -r8
   11354:	andeq	r5, r1, r4, ror #7
   11358:	strdeq	r5, [r1], -ip
   1135c:	andeq	r5, r1, r4, lsr #8
   11360:	andeq	r5, r1, r4, lsr r4
   11364:	andeq	r5, r1, r0, lsl #9
   11368:	muleq	r1, ip, r4
   1136c:	andeq	r5, r1, ip, ror #2
   11370:	andeq	r5, r1, r4, ror #12
   11374:	andeq	r5, r1, r8, lsr r4
   11378:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1137c:	sub	sp, sp, #44	; 0x2c
   11380:	mov	r6, r0
   11384:	mov	r5, r1
   11388:	ldr	r0, [r1]
   1138c:	bl	11f8c <close@plt+0x10a0>
   11390:	ldr	r1, [pc, #1264]	; 11888 <close@plt+0x99c>
   11394:	mov	r0, #6
   11398:	bl	10e8c <setlocale@plt>
   1139c:	ldr	r4, [pc, #1256]	; 1188c <close@plt+0x9a0>
   113a0:	ldr	r1, [pc, #1256]	; 11890 <close@plt+0x9a4>
   113a4:	mov	r0, r4
   113a8:	bl	10eb0 <bindtextdomain@plt>
   113ac:	mov	r0, r4
   113b0:	bl	10d3c <textdomain@plt>
   113b4:	ldr	r0, [pc, #1240]	; 11894 <close@plt+0x9a8>
   113b8:	bl	10da8 <getenv@plt>
   113bc:	cmp	r0, #0
   113c0:	movne	r4, #127	; 0x7f
   113c4:	moveq	r4, #125	; 0x7d
   113c8:	ldr	r3, [pc, #1224]	; 11898 <close@plt+0x9ac>
   113cc:	str	r4, [r3]
   113d0:	ldr	r0, [pc, #1220]	; 1189c <close@plt+0x9b0>
   113d4:	bl	150b4 <close@plt+0x41c8>
   113d8:	mov	r3, #0
   113dc:	str	r3, [sp, #16]
   113e0:	ldr	r2, [pc, #1208]	; 118a0 <close@plt+0x9b4>
   113e4:	str	r2, [sp, #12]
   113e8:	ldr	r2, [pc, #1204]	; 118a4 <close@plt+0x9b8>
   113ec:	str	r2, [sp, #8]
   113f0:	str	r3, [sp, #4]
   113f4:	ldr	r3, [pc, #1196]	; 118a8 <close@plt+0x9bc>
   113f8:	ldr	r3, [r3]
   113fc:	str	r3, [sp]
   11400:	ldr	r3, [pc, #1188]	; 118ac <close@plt+0x9c0>
   11404:	ldr	r2, [pc, #1188]	; 118b0 <close@plt+0x9c4>
   11408:	mov	r1, r5
   1140c:	mov	r0, r6
   11410:	bl	11ebc <close@plt+0xfd0>
   11414:	ldr	r3, [pc, #1176]	; 118b4 <close@plt+0x9c8>
   11418:	ldr	r3, [r3]
   1141c:	cmp	r6, r3
   11420:	ble	114d0 <close@plt+0x5e4>
   11424:	mov	r0, #0
   11428:	bl	10ec8 <isatty@plt>
   1142c:	mov	r8, r0
   11430:	mov	r0, #1
   11434:	bl	10ec8 <isatty@plt>
   11438:	subs	sl, r0, #0
   1143c:	bne	11810 <close@plt+0x924>
   11440:	bl	10e20 <__errno_location@plt>
   11444:	ldr	r6, [r0]
   11448:	cmp	r6, #9
   1144c:	movne	r6, #0
   11450:	moveq	r6, #1
   11454:	mov	r0, #2
   11458:	bl	10ec8 <isatty@plt>
   1145c:	mov	r7, r0
   11460:	cmp	r8, #0
   11464:	bne	114fc <close@plt+0x610>
   11468:	cmp	r7, #0
   1146c:	moveq	r3, #0
   11470:	andne	r3, r6, #1
   11474:	cmp	r3, #0
   11478:	bne	11760 <close@plt+0x874>
   1147c:	cmp	r7, #0
   11480:	moveq	r7, #2
   11484:	beq	117f0 <close@plt+0x904>
   11488:	mov	r2, #3
   1148c:	ldr	r1, [pc, #1060]	; 118b8 <close@plt+0x9cc>
   11490:	mov	r0, #2
   11494:	bl	11a0c <close@plt+0xb20>
   11498:	mov	r7, r0
   1149c:	mov	r9, #1
   114a0:	mov	r2, #5
   114a4:	ldr	r3, [pc, #1040]	; 118bc <close@plt+0x9d0>
   114a8:	ldr	r1, [pc, #1040]	; 118c0 <close@plt+0x9d4>
   114ac:	cmp	r8, #0
   114b0:	moveq	r1, r3
   114b4:	mov	r0, #0
   114b8:	bl	10d18 <dcgettext@plt>
   114bc:	mov	r2, r0
   114c0:	mov	r1, #0
   114c4:	mov	r0, r1
   114c8:	bl	10d90 <error@plt>
   114cc:	b	1168c <close@plt+0x7a0>
   114d0:	mov	r2, #5
   114d4:	ldr	r1, [pc, #1000]	; 118c4 <close@plt+0x9d8>
   114d8:	mov	r0, #0
   114dc:	bl	10d18 <dcgettext@plt>
   114e0:	mov	r2, r0
   114e4:	mov	r1, #0
   114e8:	mov	r0, r1
   114ec:	bl	10d90 <error@plt>
   114f0:	mov	r0, r4
   114f4:	bl	11020 <close@plt+0x134>
   114f8:	mov	r6, #0
   114fc:	mov	r3, #0
   11500:	mov	r2, #1
   11504:	ldr	r1, [pc, #956]	; 118c8 <close@plt+0x9dc>
   11508:	mov	r0, r3
   1150c:	bl	11c64 <close@plt+0xd78>
   11510:	cmp	r0, #0
   11514:	blt	11530 <close@plt+0x644>
   11518:	cmp	sl, #0
   1151c:	cmpeq	r7, #0
   11520:	beq	1155c <close@plt+0x670>
   11524:	cmp	sl, #0
   11528:	beq	11468 <close@plt+0x57c>
   1152c:	b	11828 <close@plt+0x93c>
   11530:	bl	10e20 <__errno_location@plt>
   11534:	ldr	r9, [r0]
   11538:	mov	r2, #5
   1153c:	ldr	r1, [pc, #904]	; 118cc <close@plt+0x9e0>
   11540:	mov	r0, #0
   11544:	bl	10d18 <dcgettext@plt>
   11548:	mov	r2, r0
   1154c:	mov	r1, r9
   11550:	mov	r0, r4
   11554:	bl	10d90 <error@plt>
   11558:	b	11518 <close@plt+0x62c>
   1155c:	mov	r2, #5
   11560:	ldr	r1, [pc, #872]	; 118d0 <close@plt+0x9e4>
   11564:	mov	r0, #0
   11568:	bl	10d18 <dcgettext@plt>
   1156c:	mov	r2, r0
   11570:	mov	r1, #0
   11574:	mov	r0, r1
   11578:	bl	10d90 <error@plt>
   1157c:	b	11524 <close@plt+0x638>
   11580:	bl	10e20 <__errno_location@plt>
   11584:	mov	fp, r0
   11588:	ldr	r3, [r0]
   1158c:	str	r3, [sp, #36]	; 0x24
   11590:	ldr	r0, [pc, #828]	; 118d4 <close@plt+0x9e8>
   11594:	bl	10da8 <getenv@plt>
   11598:	cmp	r0, #0
   1159c:	beq	11850 <close@plt+0x964>
   115a0:	mov	r2, #0
   115a4:	ldr	r1, [pc, #812]	; 118d8 <close@plt+0x9ec>
   115a8:	bl	11cc8 <close@plt+0xddc>
   115ac:	str	r0, [sp, #28]
   115b0:	cmp	sl, #0
   115b4:	beq	11658 <close@plt+0x76c>
   115b8:	mov	r3, #384	; 0x180
   115bc:	ldr	r2, [pc, #792]	; 118dc <close@plt+0x9f0>
   115c0:	mov	r1, r0
   115c4:	mov	r0, #1
   115c8:	bl	11c64 <close@plt+0xd78>
   115cc:	mov	r9, r0
   115d0:	cmp	r9, #0
   115d4:	ldrge	fp, [sp, #28]
   115d8:	bge	11794 <close@plt+0x8a8>
   115dc:	ldr	r6, [fp]
   115e0:	mov	r2, #5
   115e4:	ldr	r1, [pc, #756]	; 118e0 <close@plt+0x9f4>
   115e8:	mov	r0, #0
   115ec:	bl	10d18 <dcgettext@plt>
   115f0:	mov	r5, r0
   115f4:	ldr	r1, [pc, #732]	; 118d8 <close@plt+0x9ec>
   115f8:	mov	r0, #4
   115fc:	bl	138a8 <close@plt+0x29bc>
   11600:	mov	r3, r0
   11604:	mov	r2, r5
   11608:	ldr	r1, [sp, #36]	; 0x24
   1160c:	mov	r0, #0
   11610:	bl	10d90 <error@plt>
   11614:	ldr	r7, [sp, #28]
   11618:	cmp	r7, #0
   1161c:	beq	11804 <close@plt+0x918>
   11620:	mov	r2, #5
   11624:	ldr	r1, [pc, #692]	; 118e0 <close@plt+0x9f4>
   11628:	mov	r0, #0
   1162c:	bl	10d18 <dcgettext@plt>
   11630:	mov	r5, r0
   11634:	mov	r1, r7
   11638:	mov	r0, #4
   1163c:	bl	138a8 <close@plt+0x29bc>
   11640:	mov	r3, r0
   11644:	mov	r2, r5
   11648:	mov	r1, r6
   1164c:	mov	r0, #0
   11650:	bl	10d90 <error@plt>
   11654:	b	11804 <close@plt+0x918>
   11658:	mov	r2, #384	; 0x180
   1165c:	ldr	r1, [pc, #632]	; 118dc <close@plt+0x9f0>
   11660:	ldr	r0, [sp, #28]
   11664:	bl	10d9c <open64@plt>
   11668:	mov	r9, r0
   1166c:	b	115d0 <close@plt+0x6e4>
   11670:	mov	r2, #3
   11674:	ldr	r1, [pc, #572]	; 118b8 <close@plt+0x9cc>
   11678:	mov	r0, #2
   1167c:	bl	11a0c <close@plt+0xb20>
   11680:	mov	r7, r0
   11684:	cmp	sl, #0
   11688:	beq	114a0 <close@plt+0x5b4>
   1168c:	mov	r1, #2
   11690:	mov	r0, r9
   11694:	bl	10d24 <dup2@plt>
   11698:	cmp	r0, #0
   1169c:	blt	116b4 <close@plt+0x7c8>
   116a0:	cmp	r6, #0
   116a4:	beq	117f0 <close@plt+0x904>
   116a8:	mov	r0, r9
   116ac:	bl	10eec <close@plt>
   116b0:	b	117f0 <close@plt+0x904>
   116b4:	bl	10e20 <__errno_location@plt>
   116b8:	ldr	r8, [r0]
   116bc:	mov	r2, #5
   116c0:	ldr	r1, [pc, #540]	; 118e4 <close@plt+0x9f8>
   116c4:	mov	r0, #0
   116c8:	bl	10d18 <dcgettext@plt>
   116cc:	mov	r2, r0
   116d0:	mov	r1, r8
   116d4:	mov	r0, r4
   116d8:	bl	10d90 <error@plt>
   116dc:	b	116a0 <close@plt+0x7b4>
   116e0:	mov	r1, #1
   116e4:	mov	r0, r1
   116e8:	bl	10cf4 <signal@plt>
   116ec:	ldr	r3, [pc, #448]	; 118b4 <close@plt+0x9c8>
   116f0:	ldr	r6, [r3]
   116f4:	add	r1, r5, r6, lsl #2
   116f8:	ldr	r0, [r5, r6, lsl #2]
   116fc:	bl	10cdc <execvp@plt>
   11700:	bl	10e20 <__errno_location@plt>
   11704:	ldr	r8, [r0]
   11708:	cmp	r8, #2
   1170c:	moveq	r4, #127	; 0x7f
   11710:	movne	r4, #126	; 0x7e
   11714:	mov	r1, #2
   11718:	mov	r0, r7
   1171c:	bl	10d24 <dup2@plt>
   11720:	cmp	r0, #2
   11724:	bne	11804 <close@plt+0x918>
   11728:	mov	r2, #5
   1172c:	ldr	r1, [pc, #436]	; 118e8 <close@plt+0x9fc>
   11730:	mov	r0, #0
   11734:	bl	10d18 <dcgettext@plt>
   11738:	mov	r7, r0
   1173c:	ldr	r1, [r5, r6, lsl #2]
   11740:	mov	r0, #4
   11744:	bl	138a8 <close@plt+0x29bc>
   11748:	mov	r3, r0
   1174c:	mov	r2, r7
   11750:	mov	r1, r8
   11754:	mov	r0, #0
   11758:	bl	10d90 <error@plt>
   1175c:	b	11804 <close@plt+0x918>
   11760:	mvn	r0, #384	; 0x180
   11764:	bl	10ebc <umask@plt>
   11768:	str	r0, [sp, #32]
   1176c:	mov	r2, #384	; 0x180
   11770:	ldr	r1, [pc, #356]	; 118dc <close@plt+0x9f0>
   11774:	ldr	r0, [pc, #348]	; 118d8 <close@plt+0x9ec>
   11778:	bl	10d9c <open64@plt>
   1177c:	mov	r9, r0
   11780:	cmp	r9, #0
   11784:	blt	11580 <close@plt+0x694>
   11788:	ldr	fp, [pc, #328]	; 118d8 <close@plt+0x9ec>
   1178c:	mov	r3, #0
   11790:	str	r3, [sp, #28]
   11794:	ldr	r0, [sp, #32]
   11798:	bl	10ebc <umask@plt>
   1179c:	mov	r2, #5
   117a0:	ldr	r3, [pc, #324]	; 118ec <close@plt+0xa00>
   117a4:	ldr	r1, [pc, #324]	; 118f0 <close@plt+0xa04>
   117a8:	cmp	r8, #0
   117ac:	moveq	r1, r3
   117b0:	mov	r0, #0
   117b4:	bl	10d18 <dcgettext@plt>
   117b8:	str	r0, [sp, #32]
   117bc:	mov	r1, fp
   117c0:	mov	r0, #4
   117c4:	bl	138a8 <close@plt+0x29bc>
   117c8:	mov	r3, r0
   117cc:	ldr	r2, [sp, #32]
   117d0:	mov	r1, #0
   117d4:	mov	r0, r1
   117d8:	bl	10d90 <error@plt>
   117dc:	ldr	r0, [sp, #28]
   117e0:	bl	11da8 <close@plt+0xebc>
   117e4:	cmp	r7, #0
   117e8:	moveq	r7, #2
   117ec:	bne	11670 <close@plt+0x784>
   117f0:	ldr	r3, [pc, #252]	; 118f4 <close@plt+0xa08>
   117f4:	ldr	r3, [r3]
   117f8:	ldr	r3, [r3]
   117fc:	tst	r3, #32
   11800:	beq	116e0 <close@plt+0x7f4>
   11804:	mov	r0, r4
   11808:	add	sp, sp, #44	; 0x2c
   1180c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11810:	mov	r0, #2
   11814:	bl	10ec8 <isatty@plt>
   11818:	mov	r7, r0
   1181c:	cmp	r8, #0
   11820:	moveq	r6, #0
   11824:	bne	114f8 <close@plt+0x60c>
   11828:	mvn	r0, #384	; 0x180
   1182c:	bl	10ebc <umask@plt>
   11830:	str	r0, [sp, #32]
   11834:	mov	r3, #384	; 0x180
   11838:	ldr	r2, [pc, #156]	; 118dc <close@plt+0x9f0>
   1183c:	ldr	r1, [pc, #148]	; 118d8 <close@plt+0x9ec>
   11840:	mov	r0, #1
   11844:	bl	11c64 <close@plt+0xd78>
   11848:	mov	r9, r0
   1184c:	b	11780 <close@plt+0x894>
   11850:	mov	r2, #5
   11854:	ldr	r1, [pc, #132]	; 118e0 <close@plt+0x9f4>
   11858:	mov	r0, #0
   1185c:	bl	10d18 <dcgettext@plt>
   11860:	mov	r5, r0
   11864:	ldr	r1, [pc, #108]	; 118d8 <close@plt+0x9ec>
   11868:	mov	r0, #4
   1186c:	bl	138a8 <close@plt+0x29bc>
   11870:	mov	r3, r0
   11874:	mov	r2, r5
   11878:	ldr	r1, [sp, #36]	; 0x24
   1187c:	mov	r0, #0
   11880:	bl	10d90 <error@plt>
   11884:	b	11804 <close@plt+0x918>
   11888:	andeq	r5, r1, ip, ror #2
   1188c:	andeq	r5, r1, r8, lsr #8
   11890:	andeq	r5, r1, r0, ror r5
   11894:	andeq	r5, r1, r8, lsl #11
   11898:	strdeq	r6, [r2], -r0
   1189c:	andeq	r1, r1, r8, lsl r9
   118a0:	muleq	r1, r8, r5
   118a4:	andeq	r1, r1, r0, lsr #32
   118a8:	andeq	r6, r2, ip, ror #1
   118ac:	andeq	r5, r1, r4, lsr #8
   118b0:	andeq	r5, r1, r0, lsl r1
   118b4:	andeq	r6, r2, r0, asr #2
   118b8:	andeq	r0, r0, r6, lsl #8
   118bc:	andeq	r5, r1, r0, asr r5
   118c0:	andeq	r5, r1, r0, lsr #10
   118c4:	andeq	r5, r1, r8, lsr #11
   118c8:			; <UNDEFINED> instruction: 0x000155b8
   118cc:	andeq	r5, r1, r4, asr #11
   118d0:	strdeq	r5, [r1], -r0
   118d4:	andeq	r5, r1, r0, lsl #12
   118d8:	ldrdeq	r5, [r1], -r0
   118dc:	andeq	r0, r0, r1, asr #8
   118e0:	andeq	r5, r1, r8, lsl #12
   118e4:	andeq	r5, r1, ip, lsl r6
   118e8:	andeq	r5, r1, r0, asr #12
   118ec:	andeq	r5, r1, r8, lsl #10
   118f0:	ldrdeq	r5, [r1], -ip
   118f4:	andeq	r6, r2, r8, asr #2
   118f8:	ldr	r3, [pc, #4]	; 11904 <close@plt+0xa18>
   118fc:	str	r0, [r3]
   11900:	bx	lr
   11904:	andeq	r6, r2, r8, asr r1
   11908:	ldr	r3, [pc, #4]	; 11914 <close@plt+0xa28>
   1190c:	strb	r0, [r3, #4]
   11910:	bx	lr
   11914:	andeq	r6, r2, r8, asr r1
   11918:	push	{r4, r5, r6, lr}
   1191c:	sub	sp, sp, #8
   11920:	ldr	r3, [pc, #200]	; 119f0 <close@plt+0xb04>
   11924:	ldr	r0, [r3]
   11928:	bl	147e8 <close@plt+0x38fc>
   1192c:	cmp	r0, #0
   11930:	beq	11954 <close@plt+0xa68>
   11934:	ldr	r3, [pc, #184]	; 119f4 <close@plt+0xb08>
   11938:	ldrb	r3, [r3, #4]
   1193c:	cmp	r3, #0
   11940:	beq	11970 <close@plt+0xa84>
   11944:	bl	10e20 <__errno_location@plt>
   11948:	ldr	r3, [r0]
   1194c:	cmp	r3, #32
   11950:	bne	11970 <close@plt+0xa84>
   11954:	ldr	r3, [pc, #156]	; 119f8 <close@plt+0xb0c>
   11958:	ldr	r0, [r3]
   1195c:	bl	147e8 <close@plt+0x38fc>
   11960:	cmp	r0, #0
   11964:	bne	119e4 <close@plt+0xaf8>
   11968:	add	sp, sp, #8
   1196c:	pop	{r4, r5, r6, pc}
   11970:	mov	r2, #5
   11974:	ldr	r1, [pc, #128]	; 119fc <close@plt+0xb10>
   11978:	mov	r0, #0
   1197c:	bl	10d18 <dcgettext@plt>
   11980:	mov	r4, r0
   11984:	ldr	r3, [pc, #104]	; 119f4 <close@plt+0xb08>
   11988:	ldr	r5, [r3]
   1198c:	cmp	r5, #0
   11990:	beq	119c8 <close@plt+0xadc>
   11994:	bl	10e20 <__errno_location@plt>
   11998:	ldr	r6, [r0]
   1199c:	mov	r0, r5
   119a0:	bl	13954 <close@plt+0x2a68>
   119a4:	str	r4, [sp]
   119a8:	mov	r3, r0
   119ac:	ldr	r2, [pc, #76]	; 11a00 <close@plt+0xb14>
   119b0:	mov	r1, r6
   119b4:	mov	r0, #0
   119b8:	bl	10d90 <error@plt>
   119bc:	ldr	r3, [pc, #64]	; 11a04 <close@plt+0xb18>
   119c0:	ldr	r0, [r3]
   119c4:	bl	10cc4 <_exit@plt>
   119c8:	bl	10e20 <__errno_location@plt>
   119cc:	mov	r3, r4
   119d0:	ldr	r2, [pc, #48]	; 11a08 <close@plt+0xb1c>
   119d4:	ldr	r1, [r0]
   119d8:	mov	r0, #0
   119dc:	bl	10d90 <error@plt>
   119e0:	b	119bc <close@plt+0xad0>
   119e4:	ldr	r3, [pc, #24]	; 11a04 <close@plt+0xb18>
   119e8:	ldr	r0, [r3]
   119ec:	bl	10cc4 <_exit@plt>
   119f0:	andeq	r6, r2, ip, asr #2
   119f4:	andeq	r6, r2, r8, asr r1
   119f8:	andeq	r6, r2, r8, asr #2
   119fc:	ldrdeq	r5, [r1], -r8
   11a00:	andeq	r5, r1, r4, ror #13
   11a04:	strdeq	r6, [r2], -r0
   11a08:	andeq	r5, r1, r8, ror #13
   11a0c:	push	{r1, r2, r3}
   11a10:	push	{r4, r5, r6, lr}
   11a14:	sub	sp, sp, #12
   11a18:	mov	r5, r0
   11a1c:	ldr	r1, [sp, #28]
   11a20:	add	r3, sp, #32
   11a24:	str	r3, [sp, #4]
   11a28:	cmp	r1, #0
   11a2c:	beq	11a74 <close@plt+0xb88>
   11a30:	ldr	r3, [pc, #540]	; 11c54 <close@plt+0xd68>
   11a34:	cmp	r1, r3
   11a38:	beq	11aa4 <close@plt+0xbb8>
   11a3c:	cmp	r1, #11
   11a40:	beq	11c44 <close@plt+0xd58>
   11a44:	bgt	11bd0 <close@plt+0xce4>
   11a48:	cmp	r1, #3
   11a4c:	beq	11c44 <close@plt+0xd58>
   11a50:	ble	11b90 <close@plt+0xca4>
   11a54:	cmp	r1, #8
   11a58:	beq	11bb0 <close@plt+0xcc4>
   11a5c:	ble	11ba8 <close@plt+0xcbc>
   11a60:	cmp	r1, #9
   11a64:	beq	11c44 <close@plt+0xd58>
   11a68:	cmp	r1, #10
   11a6c:	bne	11c08 <close@plt+0xd1c>
   11a70:	b	11bb0 <close@plt+0xcc4>
   11a74:	ldr	r3, [sp, #4]
   11a78:	add	r2, r3, #4
   11a7c:	str	r2, [sp, #4]
   11a80:	ldr	r2, [r3]
   11a84:	mov	r1, #0
   11a88:	bl	10e80 <fcntl64@plt>
   11a8c:	mov	r4, r0
   11a90:	mov	r0, r4
   11a94:	add	sp, sp, #12
   11a98:	pop	{r4, r5, r6, lr}
   11a9c:	add	sp, sp, #12
   11aa0:	bx	lr
   11aa4:	ldr	r3, [sp, #4]
   11aa8:	add	r2, r3, #4
   11aac:	str	r2, [sp, #4]
   11ab0:	ldr	r6, [r3]
   11ab4:	ldr	r3, [pc, #412]	; 11c58 <close@plt+0xd6c>
   11ab8:	ldr	r3, [r3]
   11abc:	cmp	r3, #0
   11ac0:	blt	11b20 <close@plt+0xc34>
   11ac4:	mov	r2, r6
   11ac8:	ldr	r1, [pc, #388]	; 11c54 <close@plt+0xd68>
   11acc:	bl	10e80 <fcntl64@plt>
   11ad0:	subs	r4, r0, #0
   11ad4:	blt	11ae8 <close@plt+0xbfc>
   11ad8:	mov	r2, #1
   11adc:	ldr	r3, [pc, #372]	; 11c58 <close@plt+0xd6c>
   11ae0:	str	r2, [r3]
   11ae4:	b	11a90 <close@plt+0xba4>
   11ae8:	bl	10e20 <__errno_location@plt>
   11aec:	ldr	r3, [r0]
   11af0:	cmp	r3, #22
   11af4:	bne	11ad8 <close@plt+0xbec>
   11af8:	mov	r2, r6
   11afc:	mov	r1, #0
   11b00:	mov	r0, r5
   11b04:	bl	10e80 <fcntl64@plt>
   11b08:	subs	r4, r0, #0
   11b0c:	blt	11a90 <close@plt+0xba4>
   11b10:	mvn	r2, #0
   11b14:	ldr	r3, [pc, #316]	; 11c58 <close@plt+0xd6c>
   11b18:	str	r2, [r3]
   11b1c:	b	11b44 <close@plt+0xc58>
   11b20:	mov	r2, r6
   11b24:	mov	r1, #0
   11b28:	bl	10e80 <fcntl64@plt>
   11b2c:	subs	r4, r0, #0
   11b30:	blt	11a90 <close@plt+0xba4>
   11b34:	ldr	r3, [pc, #284]	; 11c58 <close@plt+0xd6c>
   11b38:	ldr	r3, [r3]
   11b3c:	cmn	r3, #1
   11b40:	bne	11a90 <close@plt+0xba4>
   11b44:	mov	r1, #1
   11b48:	mov	r0, r4
   11b4c:	bl	10e80 <fcntl64@plt>
   11b50:	subs	r2, r0, #0
   11b54:	blt	11b70 <close@plt+0xc84>
   11b58:	orr	r2, r2, #1
   11b5c:	mov	r1, #2
   11b60:	mov	r0, r4
   11b64:	bl	10e80 <fcntl64@plt>
   11b68:	cmn	r0, #1
   11b6c:	bne	11a90 <close@plt+0xba4>
   11b70:	bl	10e20 <__errno_location@plt>
   11b74:	mov	r5, r0
   11b78:	ldr	r6, [r0]
   11b7c:	mov	r0, r4
   11b80:	bl	10eec <close@plt>
   11b84:	str	r6, [r5]
   11b88:	mvn	r4, #0
   11b8c:	b	11a90 <close@plt+0xba4>
   11b90:	cmp	r1, #1
   11b94:	beq	11c44 <close@plt+0xd58>
   11b98:	bgt	11bb0 <close@plt+0xcc4>
   11b9c:	cmp	r1, #0
   11ba0:	bne	11c08 <close@plt+0xd1c>
   11ba4:	b	11bb0 <close@plt+0xcc4>
   11ba8:	cmp	r1, #4
   11bac:	bne	11c08 <close@plt+0xd1c>
   11bb0:	ldr	r3, [sp, #4]
   11bb4:	add	r2, r3, #4
   11bb8:	str	r2, [sp, #4]
   11bbc:	ldr	r2, [r3]
   11bc0:	mov	r0, r5
   11bc4:	bl	10e80 <fcntl64@plt>
   11bc8:	mov	r4, r0
   11bcc:	b	11a90 <close@plt+0xba4>
   11bd0:	ldr	r3, [pc, #132]	; 11c5c <close@plt+0xd70>
   11bd4:	cmp	r1, r3
   11bd8:	bgt	11c28 <close@plt+0xd3c>
   11bdc:	sub	r3, r3, #1
   11be0:	cmp	r1, r3
   11be4:	bge	11bb0 <close@plt+0xcc4>
   11be8:	sub	r3, r3, #5
   11bec:	cmp	r1, r3
   11bf0:	beq	11c44 <close@plt+0xd58>
   11bf4:	add	r3, r3, #1
   11bf8:	cmp	r1, r3
   11bfc:	beq	11bb0 <close@plt+0xcc4>
   11c00:	cmp	r1, #1024	; 0x400
   11c04:	beq	11bb0 <close@plt+0xcc4>
   11c08:	ldr	r3, [sp, #4]
   11c0c:	add	r2, r3, #4
   11c10:	str	r2, [sp, #4]
   11c14:	ldr	r2, [r3]
   11c18:	mov	r0, r5
   11c1c:	bl	10e80 <fcntl64@plt>
   11c20:	mov	r4, r0
   11c24:	b	11a90 <close@plt+0xba4>
   11c28:	ldr	r3, [pc, #48]	; 11c60 <close@plt+0xd74>
   11c2c:	cmp	r1, r3
   11c30:	beq	11bb0 <close@plt+0xcc4>
   11c34:	blt	11c44 <close@plt+0xd58>
   11c38:	add	r3, r3, #1
   11c3c:	cmp	r1, r3
   11c40:	bne	11c08 <close@plt+0xd1c>
   11c44:	mov	r0, r5
   11c48:	bl	10e80 <fcntl64@plt>
   11c4c:	mov	r4, r0
   11c50:	b	11a90 <close@plt+0xba4>
   11c54:	andeq	r0, r0, r6, lsl #8
   11c58:	andeq	r6, r2, r0, ror #2
   11c5c:	andeq	r0, r0, r7, lsl #8
   11c60:	andeq	r0, r0, r9, lsl #8
   11c64:	push	{r4, r5, r6, r7, r8, lr}
   11c68:	mov	r5, r0
   11c6c:	mov	r0, r1
   11c70:	mov	r1, r2
   11c74:	mov	r2, r3
   11c78:	bl	10d9c <open64@plt>
   11c7c:	mov	r4, r0
   11c80:	cmp	r5, r0
   11c84:	movne	r3, #0
   11c88:	moveq	r3, #1
   11c8c:	orrs	r3, r3, r0, lsr #31
   11c90:	beq	11c9c <close@plt+0xdb0>
   11c94:	mov	r0, r4
   11c98:	pop	{r4, r5, r6, r7, r8, pc}
   11c9c:	mov	r1, r5
   11ca0:	bl	10d24 <dup2@plt>
   11ca4:	mov	r6, r0
   11ca8:	bl	10e20 <__errno_location@plt>
   11cac:	mov	r5, r0
   11cb0:	ldr	r7, [r0]
   11cb4:	mov	r0, r4
   11cb8:	bl	10eec <close@plt>
   11cbc:	str	r7, [r5]
   11cc0:	mov	r4, r6
   11cc4:	b	11c94 <close@plt+0xda8>
   11cc8:	push	{r4, lr}
   11ccc:	bl	11cdc <close@plt+0xdf0>
   11cd0:	cmp	r0, #0
   11cd4:	popne	{r4, pc}
   11cd8:	bl	14618 <close@plt+0x372c>
   11cdc:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11ce0:	mov	fp, r0
   11ce4:	mov	r6, r1
   11ce8:	mov	r9, r2
   11cec:	bl	14728 <close@plt+0x383c>
   11cf0:	mov	r4, r0
   11cf4:	bl	14790 <close@plt+0x38a4>
   11cf8:	mov	r5, r0
   11cfc:	sub	r4, r4, fp
   11d00:	add	r4, r4, r0
   11d04:	mov	r0, r6
   11d08:	bl	10e14 <strlen@plt>
   11d0c:	mov	r8, r0
   11d10:	cmp	r5, #0
   11d14:	beq	11d40 <close@plt+0xe54>
   11d18:	add	r3, fp, r4
   11d1c:	ldrb	r3, [r3, #-1]
   11d20:	cmp	r3, #47	; 0x2f
   11d24:	moveq	r5, #0
   11d28:	beq	11d50 <close@plt+0xe64>
   11d2c:	ldrb	r5, [r6]
   11d30:	cmp	r5, #47	; 0x2f
   11d34:	movne	r5, #47	; 0x2f
   11d38:	moveq	r5, #0
   11d3c:	b	11d50 <close@plt+0xe64>
   11d40:	ldrb	r5, [r6]
   11d44:	cmp	r5, #47	; 0x2f
   11d48:	moveq	r5, #46	; 0x2e
   11d4c:	movne	r5, #0
   11d50:	adds	sl, r5, #0
   11d54:	movne	sl, #1
   11d58:	add	r0, r8, #1
   11d5c:	add	r0, r0, r4
   11d60:	add	r0, r0, sl
   11d64:	bl	146a8 <close@plt+0x37bc>
   11d68:	subs	r7, r0, #0
   11d6c:	beq	11da0 <close@plt+0xeb4>
   11d70:	mov	r2, r4
   11d74:	mov	r1, fp
   11d78:	mov	r0, r7
   11d7c:	bl	10de4 <mempcpy@plt>
   11d80:	strb	r5, [r0], sl
   11d84:	cmp	r9, #0
   11d88:	strne	r0, [r9]
   11d8c:	mov	r2, r8
   11d90:	mov	r1, r6
   11d94:	bl	10de4 <mempcpy@plt>
   11d98:	mov	r3, #0
   11d9c:	strb	r3, [r0]
   11da0:	mov	r0, r7
   11da4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11da8:	push	{r4, r5, lr}
   11dac:	sub	sp, sp, #12
   11db0:	mov	r5, r0
   11db4:	bl	10e20 <__errno_location@plt>
   11db8:	mov	r4, r0
   11dbc:	ldr	r3, [r0]
   11dc0:	str	r3, [sp]
   11dc4:	str	r3, [sp, #4]
   11dc8:	mov	r3, #0
   11dcc:	str	r3, [r0]
   11dd0:	mov	r0, r5
   11dd4:	bl	10cb8 <free@plt>
   11dd8:	ldr	r3, [r4]
   11ddc:	cmp	r3, #0
   11de0:	moveq	r3, #4
   11de4:	movne	r3, #0
   11de8:	add	r2, sp, #8
   11dec:	add	r3, r2, r3
   11df0:	ldr	r3, [r3, #-8]
   11df4:	str	r3, [r4]
   11df8:	add	sp, sp, #12
   11dfc:	pop	{r4, r5, pc}
   11e00:	push	{r4, r5, r6, lr}
   11e04:	sub	sp, sp, #16
   11e08:	ldr	ip, [pc, #152]	; 11ea8 <close@plt+0xfbc>
   11e0c:	ldr	r4, [ip]
   11e10:	mov	lr, #0
   11e14:	str	lr, [ip]
   11e18:	cmp	r0, #2
   11e1c:	beq	11e3c <close@plt+0xf50>
   11e20:	ldr	r3, [pc, #128]	; 11ea8 <close@plt+0xfbc>
   11e24:	str	r4, [r3]
   11e28:	mov	r2, #0
   11e2c:	ldr	r3, [pc, #120]	; 11eac <close@plt+0xfc0>
   11e30:	str	r2, [r3]
   11e34:	add	sp, sp, #16
   11e38:	pop	{r4, r5, r6, pc}
   11e3c:	mov	r6, r3
   11e40:	mov	r5, r2
   11e44:	str	lr, [sp]
   11e48:	ldr	r3, [pc, #96]	; 11eb0 <close@plt+0xfc4>
   11e4c:	ldr	r2, [pc, #96]	; 11eb4 <close@plt+0xfc8>
   11e50:	bl	10df0 <getopt_long@plt>
   11e54:	cmn	r0, #1
   11e58:	beq	11e20 <close@plt+0xf34>
   11e5c:	cmp	r0, #104	; 0x68
   11e60:	beq	11e98 <close@plt+0xfac>
   11e64:	cmp	r0, #118	; 0x76
   11e68:	bne	11e20 <close@plt+0xf34>
   11e6c:	add	r3, sp, #40	; 0x28
   11e70:	str	r3, [sp, #12]
   11e74:	ldr	r2, [pc, #60]	; 11eb8 <close@plt+0xfcc>
   11e78:	ldr	r0, [r2]
   11e7c:	str	r3, [sp]
   11e80:	ldr	r3, [sp, #32]
   11e84:	mov	r2, r6
   11e88:	mov	r1, r5
   11e8c:	bl	13f5c <close@plt+0x3070>
   11e90:	mov	r0, #0
   11e94:	bl	10e08 <exit@plt>
   11e98:	mov	r0, #0
   11e9c:	ldr	r3, [sp, #36]	; 0x24
   11ea0:	blx	r3
   11ea4:	b	11e20 <close@plt+0xf34>
   11ea8:	andeq	r6, r2, r0, asr r1
   11eac:	andeq	r6, r2, r0, asr #2
   11eb0:	andeq	r5, r1, ip, ror #13
   11eb4:	andeq	r5, r1, ip, lsl r7
   11eb8:	andeq	r6, r2, ip, asr #2
   11ebc:	push	{r4, r5, r6, lr}
   11ec0:	sub	sp, sp, #16
   11ec4:	mov	r5, r2
   11ec8:	mov	r6, r3
   11ecc:	ldr	r3, [pc, #160]	; 11f74 <close@plt+0x1088>
   11ed0:	ldr	r4, [r3]
   11ed4:	mov	r2, #1
   11ed8:	str	r2, [r3]
   11edc:	mov	r3, #0
   11ee0:	str	r3, [sp]
   11ee4:	ldr	r3, [pc, #140]	; 11f78 <close@plt+0x108c>
   11ee8:	ldr	ip, [pc, #140]	; 11f7c <close@plt+0x1090>
   11eec:	ldr	r2, [pc, #140]	; 11f80 <close@plt+0x1094>
   11ef0:	ldrb	lr, [sp, #36]	; 0x24
   11ef4:	cmp	lr, #0
   11ef8:	moveq	r2, ip
   11efc:	bl	10df0 <getopt_long@plt>
   11f00:	cmn	r0, #1
   11f04:	beq	11f38 <close@plt+0x104c>
   11f08:	cmp	r0, #104	; 0x68
   11f0c:	beq	11f2c <close@plt+0x1040>
   11f10:	cmp	r0, #118	; 0x76
   11f14:	beq	11f48 <close@plt+0x105c>
   11f18:	ldr	r3, [pc, #100]	; 11f84 <close@plt+0x1098>
   11f1c:	ldr	r0, [r3]
   11f20:	ldr	r3, [sp, #40]	; 0x28
   11f24:	blx	r3
   11f28:	b	11f38 <close@plt+0x104c>
   11f2c:	mov	r0, #0
   11f30:	ldr	r3, [sp, #40]	; 0x28
   11f34:	blx	r3
   11f38:	ldr	r3, [pc, #52]	; 11f74 <close@plt+0x1088>
   11f3c:	str	r4, [r3]
   11f40:	add	sp, sp, #16
   11f44:	pop	{r4, r5, r6, pc}
   11f48:	add	r3, sp, #44	; 0x2c
   11f4c:	str	r3, [sp, #12]
   11f50:	ldr	r2, [pc, #48]	; 11f88 <close@plt+0x109c>
   11f54:	ldr	r0, [r2]
   11f58:	str	r3, [sp]
   11f5c:	ldr	r3, [sp, #32]
   11f60:	mov	r2, r6
   11f64:	mov	r1, r5
   11f68:	bl	13f5c <close@plt+0x3070>
   11f6c:	mov	r0, #0
   11f70:	bl	10e08 <exit@plt>
   11f74:	andeq	r6, r2, r0, asr r1
   11f78:	andeq	r5, r1, ip, ror #13
   11f7c:	andeq	r5, r1, ip, lsl r7
   11f80:	andeq	r5, r1, ip, ror #2
   11f84:	strdeq	r6, [r2], -r0
   11f88:	andeq	r6, r2, ip, asr #2
   11f8c:	push	{r4, r5, r6, lr}
   11f90:	subs	r4, r0, #0
   11f94:	beq	1200c <close@plt+0x1120>
   11f98:	mov	r1, #47	; 0x2f
   11f9c:	mov	r0, r4
   11fa0:	bl	10e98 <strrchr@plt>
   11fa4:	cmp	r0, #0
   11fa8:	addne	r5, r0, #1
   11fac:	moveq	r5, r4
   11fb0:	sub	r3, r5, r4
   11fb4:	cmp	r3, #6
   11fb8:	ble	11ff8 <close@plt+0x110c>
   11fbc:	mov	r2, #7
   11fc0:	ldr	r1, [pc, #96]	; 12028 <close@plt+0x113c>
   11fc4:	sub	r0, r5, #7
   11fc8:	bl	10ed4 <strncmp@plt>
   11fcc:	cmp	r0, #0
   11fd0:	bne	11ff8 <close@plt+0x110c>
   11fd4:	mov	r2, #3
   11fd8:	ldr	r1, [pc, #76]	; 1202c <close@plt+0x1140>
   11fdc:	mov	r0, r5
   11fe0:	bl	10ed4 <strncmp@plt>
   11fe4:	cmp	r0, #0
   11fe8:	addeq	r4, r5, #3
   11fec:	ldreq	r3, [pc, #60]	; 12030 <close@plt+0x1144>
   11ff0:	streq	r4, [r3]
   11ff4:	movne	r4, r5
   11ff8:	ldr	r3, [pc, #52]	; 12034 <close@plt+0x1148>
   11ffc:	str	r4, [r3]
   12000:	ldr	r3, [pc, #48]	; 12038 <close@plt+0x114c>
   12004:	str	r4, [r3]
   12008:	pop	{r4, r5, r6, pc}
   1200c:	ldr	r3, [pc, #40]	; 1203c <close@plt+0x1150>
   12010:	ldr	r3, [r3]
   12014:	mov	r2, #55	; 0x37
   12018:	mov	r1, #1
   1201c:	ldr	r0, [pc, #28]	; 12040 <close@plt+0x1154>
   12020:	bl	10d54 <fwrite@plt>
   12024:	bl	10ee0 <abort@plt>
   12028:	andeq	r5, r1, r8, ror #14
   1202c:	andeq	r5, r1, r0, ror r7
   12030:	andeq	r6, r2, r8, lsr r1
   12034:	andeq	r6, r2, r4, ror #2
   12038:	andeq	r6, r2, ip, lsr r1
   1203c:	andeq	r6, r2, r8, asr #2
   12040:	andeq	r5, r1, r0, lsr r7
   12044:	push	{r4, r5, r6, lr}
   12048:	mov	r5, r0
   1204c:	mov	r4, r1
   12050:	mov	r2, #48	; 0x30
   12054:	mov	r1, #0
   12058:	bl	10e38 <memset@plt>
   1205c:	cmp	r4, #10
   12060:	beq	12070 <close@plt+0x1184>
   12064:	str	r4, [r5]
   12068:	mov	r0, r5
   1206c:	pop	{r4, r5, r6, pc}
   12070:	bl	10ee0 <abort@plt>
   12074:	push	{r4, r5, r6, lr}
   12078:	mov	r4, r0
   1207c:	mov	r5, r1
   12080:	mov	r2, #5
   12084:	mov	r1, r0
   12088:	mov	r0, #0
   1208c:	bl	10d18 <dcgettext@plt>
   12090:	cmp	r4, r0
   12094:	popne	{r4, r5, r6, pc}
   12098:	bl	14a14 <close@plt+0x3b28>
   1209c:	ldrb	r3, [r0]
   120a0:	bic	r3, r3, #32
   120a4:	cmp	r3, #85	; 0x55
   120a8:	beq	12124 <close@plt+0x1238>
   120ac:	cmp	r3, #71	; 0x47
   120b0:	bne	12180 <close@plt+0x1294>
   120b4:	ldrb	r3, [r0, #1]
   120b8:	bic	r3, r3, #32
   120bc:	cmp	r3, #66	; 0x42
   120c0:	bne	12180 <close@plt+0x1294>
   120c4:	ldrb	r3, [r0, #2]
   120c8:	cmp	r3, #49	; 0x31
   120cc:	bne	12180 <close@plt+0x1294>
   120d0:	ldrb	r3, [r0, #3]
   120d4:	cmp	r3, #56	; 0x38
   120d8:	bne	12180 <close@plt+0x1294>
   120dc:	ldrb	r3, [r0, #4]
   120e0:	cmp	r3, #48	; 0x30
   120e4:	bne	12180 <close@plt+0x1294>
   120e8:	ldrb	r3, [r0, #5]
   120ec:	cmp	r3, #51	; 0x33
   120f0:	bne	12180 <close@plt+0x1294>
   120f4:	ldrb	r3, [r0, #6]
   120f8:	cmp	r3, #48	; 0x30
   120fc:	bne	12180 <close@plt+0x1294>
   12100:	ldrb	r3, [r0, #7]
   12104:	cmp	r3, #0
   12108:	bne	12180 <close@plt+0x1294>
   1210c:	ldrb	r2, [r4]
   12110:	ldr	r3, [pc, #124]	; 12194 <close@plt+0x12a8>
   12114:	ldr	r0, [pc, #124]	; 12198 <close@plt+0x12ac>
   12118:	cmp	r2, #96	; 0x60
   1211c:	movne	r0, r3
   12120:	pop	{r4, r5, r6, pc}
   12124:	ldrb	r3, [r0, #1]
   12128:	bic	r3, r3, #32
   1212c:	cmp	r3, #84	; 0x54
   12130:	bne	12180 <close@plt+0x1294>
   12134:	ldrb	r3, [r0, #2]
   12138:	bic	r3, r3, #32
   1213c:	cmp	r3, #70	; 0x46
   12140:	bne	12180 <close@plt+0x1294>
   12144:	ldrb	r3, [r0, #3]
   12148:	cmp	r3, #45	; 0x2d
   1214c:	bne	12180 <close@plt+0x1294>
   12150:	ldrb	r3, [r0, #4]
   12154:	cmp	r3, #56	; 0x38
   12158:	bne	12180 <close@plt+0x1294>
   1215c:	ldrb	r3, [r0, #5]
   12160:	cmp	r3, #0
   12164:	bne	12180 <close@plt+0x1294>
   12168:	ldrb	r2, [r4]
   1216c:	ldr	r3, [pc, #40]	; 1219c <close@plt+0x12b0>
   12170:	ldr	r0, [pc, #40]	; 121a0 <close@plt+0x12b4>
   12174:	cmp	r2, #96	; 0x60
   12178:	movne	r0, r3
   1217c:	pop	{r4, r5, r6, pc}
   12180:	ldr	r3, [pc, #28]	; 121a4 <close@plt+0x12b8>
   12184:	ldr	r0, [pc, #28]	; 121a8 <close@plt+0x12bc>
   12188:	cmp	r5, #9
   1218c:	movne	r0, r3
   12190:	pop	{r4, r5, r6, pc}
   12194:	andeq	r5, r1, ip, asr #15
   12198:	ldrdeq	r5, [r1], -r8
   1219c:	andeq	r5, r1, r8, asr #15
   121a0:	ldrdeq	r5, [r1], -ip
   121a4:	ldrdeq	r5, [r1], -r0
   121a8:	ldrdeq	r5, [r1], -r4
   121ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   121b0:	sub	sp, sp, #116	; 0x74
   121b4:	str	r0, [sp, #36]	; 0x24
   121b8:	mov	sl, r1
   121bc:	str	r2, [sp, #52]	; 0x34
   121c0:	str	r3, [sp, #28]
   121c4:	ldr	r8, [sp, #152]	; 0x98
   121c8:	bl	10d6c <__ctype_get_mb_cur_max@plt>
   121cc:	str	r0, [sp, #84]	; 0x54
   121d0:	ldr	r3, [sp, #156]	; 0x9c
   121d4:	lsr	r3, r3, #1
   121d8:	and	r3, r3, #1
   121dc:	str	r3, [sp, #32]
   121e0:	mov	r3, #1
   121e4:	str	r3, [sp, #40]	; 0x28
   121e8:	mov	r3, #0
   121ec:	str	r3, [sp, #80]	; 0x50
   121f0:	str	r3, [sp, #44]	; 0x2c
   121f4:	str	r3, [sp, #48]	; 0x30
   121f8:	str	r3, [sp, #60]	; 0x3c
   121fc:	str	r3, [sp, #72]	; 0x48
   12200:	str	r3, [sp, #76]	; 0x4c
   12204:	mov	r7, sl
   12208:	mov	sl, r8
   1220c:	cmp	sl, #10
   12210:	ldrls	pc, [pc, sl, lsl #2]
   12214:	b	123cc <close@plt+0x14e0>
   12218:	andeq	r2, r1, ip, ror r2
   1221c:	andeq	r2, r1, ip, asr #4
   12220:	andeq	r2, r1, r8, lsr #7
   12224:	andeq	r2, r1, r4, asr #4
   12228:	andeq	r2, r1, ip, asr r3
   1222c:	andeq	r2, r1, ip, lsl #5
   12230:	strdeq	r3, [r1], -r8
   12234:	ldrdeq	r2, [r1], -r0
   12238:	andeq	r2, r1, r8, asr #5
   1223c:	andeq	r2, r1, r8, asr #5
   12240:	andeq	r2, r1, r8, asr #5
   12244:	mov	r3, #1
   12248:	str	r3, [sp, #48]	; 0x30
   1224c:	mov	r3, #1
   12250:	str	r3, [sp, #32]
   12254:	str	r3, [sp, #60]	; 0x3c
   12258:	ldr	r3, [pc, #4068]	; 13244 <close@plt+0x2358>
   1225c:	str	r3, [sp, #72]	; 0x48
   12260:	mov	fp, #0
   12264:	mov	sl, #2
   12268:	mov	r6, #0
   1226c:	ldr	r3, [sp, #48]	; 0x30
   12270:	eor	r3, r3, #1
   12274:	str	r3, [sp, #68]	; 0x44
   12278:	b	12b60 <close@plt+0x1c74>
   1227c:	mov	r3, #0
   12280:	str	r3, [sp, #32]
   12284:	mov	fp, r3
   12288:	b	12268 <close@plt+0x137c>
   1228c:	ldr	r3, [sp, #32]
   12290:	cmp	r3, #0
   12294:	bne	123e8 <close@plt+0x14fc>
   12298:	cmp	r7, #0
   1229c:	beq	12408 <close@plt+0x151c>
   122a0:	ldr	r3, [sp, #36]	; 0x24
   122a4:	mov	r2, #34	; 0x22
   122a8:	strb	r2, [r3]
   122ac:	mov	r3, #1
   122b0:	str	r3, [sp, #48]	; 0x30
   122b4:	str	r3, [sp, #60]	; 0x3c
   122b8:	ldr	r3, [pc, #3980]	; 1324c <close@plt+0x2360>
   122bc:	str	r3, [sp, #72]	; 0x48
   122c0:	mov	fp, #1
   122c4:	b	12268 <close@plt+0x137c>
   122c8:	cmp	sl, #10
   122cc:	beq	122f0 <close@plt+0x1404>
   122d0:	mov	r1, sl
   122d4:	ldr	r0, [pc, #3948]	; 13248 <close@plt+0x235c>
   122d8:	bl	12074 <close@plt+0x1188>
   122dc:	str	r0, [sp, #164]	; 0xa4
   122e0:	mov	r1, sl
   122e4:	ldr	r0, [pc, #3928]	; 13244 <close@plt+0x2358>
   122e8:	bl	12074 <close@plt+0x1188>
   122ec:	str	r0, [sp, #168]	; 0xa8
   122f0:	ldr	r3, [sp, #32]
   122f4:	cmp	r3, #0
   122f8:	movne	fp, #0
   122fc:	bne	12334 <close@plt+0x1448>
   12300:	ldr	r3, [sp, #164]	; 0xa4
   12304:	ldrb	r3, [r3]
   12308:	cmp	r3, #0
   1230c:	beq	12354 <close@plt+0x1468>
   12310:	ldr	r2, [sp, #164]	; 0xa4
   12314:	mov	fp, #0
   12318:	ldr	r1, [sp, #36]	; 0x24
   1231c:	cmp	r7, fp
   12320:	strbhi	r3, [r1, fp]
   12324:	add	fp, fp, #1
   12328:	ldrb	r3, [r2, #1]!
   1232c:	cmp	r3, #0
   12330:	bne	1231c <close@plt+0x1430>
   12334:	ldr	r0, [sp, #168]	; 0xa8
   12338:	bl	10e14 <strlen@plt>
   1233c:	str	r0, [sp, #60]	; 0x3c
   12340:	ldr	r3, [sp, #168]	; 0xa8
   12344:	str	r3, [sp, #72]	; 0x48
   12348:	mov	r3, #1
   1234c:	str	r3, [sp, #48]	; 0x30
   12350:	b	12268 <close@plt+0x137c>
   12354:	mov	fp, #0
   12358:	b	12334 <close@plt+0x1448>
   1235c:	ldr	r3, [sp, #32]
   12360:	cmp	r3, #0
   12364:	bne	12424 <close@plt+0x1538>
   12368:	mov	r3, #1
   1236c:	str	r3, [sp, #48]	; 0x30
   12370:	cmp	r7, #0
   12374:	beq	12440 <close@plt+0x1554>
   12378:	ldr	r3, [sp, #36]	; 0x24
   1237c:	mov	r2, #39	; 0x27
   12380:	strb	r2, [r3]
   12384:	mov	r3, #0
   12388:	str	r3, [sp, #32]
   1238c:	mov	r3, #1
   12390:	str	r3, [sp, #60]	; 0x3c
   12394:	ldr	r3, [pc, #3752]	; 13244 <close@plt+0x2358>
   12398:	str	r3, [sp, #72]	; 0x48
   1239c:	mov	fp, #1
   123a0:	mov	sl, #2
   123a4:	b	12268 <close@plt+0x137c>
   123a8:	ldr	r3, [sp, #32]
   123ac:	cmp	r3, #0
   123b0:	beq	12370 <close@plt+0x1484>
   123b4:	mov	r3, #1
   123b8:	str	r3, [sp, #60]	; 0x3c
   123bc:	ldr	r3, [pc, #3712]	; 13244 <close@plt+0x2358>
   123c0:	str	r3, [sp, #72]	; 0x48
   123c4:	mov	fp, #0
   123c8:	b	12268 <close@plt+0x137c>
   123cc:	bl	10ee0 <abort@plt>
   123d0:	mov	r3, #0
   123d4:	str	r3, [sp, #32]
   123d8:	mov	r3, #1
   123dc:	str	r3, [sp, #48]	; 0x30
   123e0:	mov	fp, #0
   123e4:	b	12268 <close@plt+0x137c>
   123e8:	ldr	r3, [sp, #32]
   123ec:	str	r3, [sp, #48]	; 0x30
   123f0:	mov	r3, #1
   123f4:	str	r3, [sp, #60]	; 0x3c
   123f8:	ldr	r3, [pc, #3660]	; 1324c <close@plt+0x2360>
   123fc:	str	r3, [sp, #72]	; 0x48
   12400:	mov	fp, #0
   12404:	b	12268 <close@plt+0x137c>
   12408:	mov	r3, #1
   1240c:	str	r3, [sp, #48]	; 0x30
   12410:	str	r3, [sp, #60]	; 0x3c
   12414:	ldr	r3, [pc, #3632]	; 1324c <close@plt+0x2360>
   12418:	str	r3, [sp, #72]	; 0x48
   1241c:	mov	fp, #1
   12420:	b	12268 <close@plt+0x137c>
   12424:	mov	r3, #1
   12428:	str	r3, [sp, #60]	; 0x3c
   1242c:	ldr	r3, [pc, #3600]	; 13244 <close@plt+0x2358>
   12430:	str	r3, [sp, #72]	; 0x48
   12434:	mov	fp, #0
   12438:	mov	sl, #2
   1243c:	b	12268 <close@plt+0x137c>
   12440:	mov	r3, #0
   12444:	str	r3, [sp, #32]
   12448:	mov	r3, #1
   1244c:	str	r3, [sp, #60]	; 0x3c
   12450:	ldr	r3, [pc, #3564]	; 13244 <close@plt+0x2358>
   12454:	str	r3, [sp, #72]	; 0x48
   12458:	mov	fp, #1
   1245c:	mov	sl, #2
   12460:	b	12268 <close@plt+0x137c>
   12464:	mov	r3, #0
   12468:	str	r3, [sp, #56]	; 0x38
   1246c:	ldr	r3, [sp, #52]	; 0x34
   12470:	add	r2, r3, r6
   12474:	str	r2, [sp, #64]	; 0x40
   12478:	ldrb	r4, [r3, r6]
   1247c:	cmp	r4, #126	; 0x7e
   12480:	ldrls	pc, [pc, r4, lsl #2]
   12484:	b	12cc0 <close@plt+0x1dd4>
   12488:	andeq	r2, r1, r0, lsr #13
   1248c:	andeq	r2, r1, r0, asr #25
   12490:	andeq	r2, r1, r0, asr #25
   12494:	andeq	r2, r1, r0, asr #25
   12498:	andeq	r2, r1, r0, asr #25
   1249c:	andeq	r2, r1, r0, asr #25
   124a0:	andeq	r2, r1, r0, asr #25
   124a4:	strdeq	r2, [r1], -ip
   124a8:	muleq	r1, r8, r6
   124ac:			; <UNDEFINED> instruction: 0x000129b4
   124b0:	andeq	r2, r1, ip, lsr #19
   124b4:	andeq	r2, r1, ip, lsl r9
   124b8:	andeq	r2, r1, r4, lsl r9
   124bc:	muleq	r1, r0, r6
   124c0:	andeq	r2, r1, r0, asr #25
   124c4:	andeq	r2, r1, r0, asr #25
   124c8:	andeq	r2, r1, r0, asr #25
   124cc:	andeq	r2, r1, r0, asr #25
   124d0:	andeq	r2, r1, r0, asr #25
   124d4:	andeq	r2, r1, r0, asr #25
   124d8:	andeq	r2, r1, r0, asr #25
   124dc:	andeq	r2, r1, r0, asr #25
   124e0:	andeq	r2, r1, r0, asr #25
   124e4:	andeq	r2, r1, r0, asr #25
   124e8:	andeq	r2, r1, r0, asr #25
   124ec:	andeq	r2, r1, r0, asr #25
   124f0:	andeq	r2, r1, r0, asr #25
   124f4:	andeq	r2, r1, r0, asr #25
   124f8:	andeq	r2, r1, r0, asr #25
   124fc:	andeq	r2, r1, r0, asr #25
   12500:	andeq	r2, r1, r0, asr #25
   12504:	andeq	r2, r1, r0, asr #25
   12508:	andeq	r2, r1, r0, asr sl
   1250c:	andeq	r2, r1, ip, asr #20
   12510:	andeq	r2, r1, ip, asr #20
   12514:	andeq	r2, r1, r4, lsr #20
   12518:	andeq	r2, r1, ip, asr #20
   1251c:	muleq	r1, r4, r0
   12520:	andeq	r2, r1, ip, asr #20
   12524:	andeq	r2, r1, r4, lsr #24
   12528:	andeq	r2, r1, ip, asr #20
   1252c:	andeq	r2, r1, ip, asr #20
   12530:	andeq	r2, r1, ip, asr #20
   12534:	muleq	r1, r4, r0
   12538:	muleq	r1, r4, r0
   1253c:	muleq	r1, r4, r0
   12540:	muleq	r1, r4, r0
   12544:	muleq	r1, r4, r0
   12548:	muleq	r1, r4, r0
   1254c:	muleq	r1, r4, r0
   12550:	muleq	r1, r4, r0
   12554:	muleq	r1, r4, r0
   12558:	muleq	r1, r4, r0
   1255c:	muleq	r1, r4, r0
   12560:	muleq	r1, r4, r0
   12564:	muleq	r1, r4, r0
   12568:	muleq	r1, r4, r0
   1256c:	muleq	r1, r4, r0
   12570:	muleq	r1, r4, r0
   12574:	andeq	r2, r1, ip, asr #20
   12578:	andeq	r2, r1, ip, asr #20
   1257c:	andeq	r2, r1, ip, asr #20
   12580:	andeq	r2, r1, ip, asr #20
   12584:	andeq	r2, r1, r8, lsr #15
   12588:	andeq	r2, r1, r0, asr #25
   1258c:	muleq	r1, r4, r0
   12590:	muleq	r1, r4, r0
   12594:	muleq	r1, r4, r0
   12598:	muleq	r1, r4, r0
   1259c:	muleq	r1, r4, r0
   125a0:	muleq	r1, r4, r0
   125a4:	muleq	r1, r4, r0
   125a8:	muleq	r1, r4, r0
   125ac:	muleq	r1, r4, r0
   125b0:	muleq	r1, r4, r0
   125b4:	muleq	r1, r4, r0
   125b8:	muleq	r1, r4, r0
   125bc:	muleq	r1, r4, r0
   125c0:	muleq	r1, r4, r0
   125c4:	muleq	r1, r4, r0
   125c8:	muleq	r1, r4, r0
   125cc:	muleq	r1, r4, r0
   125d0:	muleq	r1, r4, r0
   125d4:	muleq	r1, r4, r0
   125d8:	muleq	r1, r4, r0
   125dc:	muleq	r1, r4, r0
   125e0:	muleq	r1, r4, r0
   125e4:	muleq	r1, r4, r0
   125e8:	muleq	r1, r4, r0
   125ec:	muleq	r1, r4, r0
   125f0:	muleq	r1, r4, r0
   125f4:	andeq	r2, r1, ip, asr #20
   125f8:	andeq	r2, r1, r4, lsr #18
   125fc:	muleq	r1, r4, r0
   12600:	andeq	r2, r1, ip, asr #20
   12604:	muleq	r1, r4, r0
   12608:	andeq	r2, r1, ip, asr #20
   1260c:	muleq	r1, r4, r0
   12610:	muleq	r1, r4, r0
   12614:	muleq	r1, r4, r0
   12618:	muleq	r1, r4, r0
   1261c:	muleq	r1, r4, r0
   12620:	muleq	r1, r4, r0
   12624:	muleq	r1, r4, r0
   12628:	muleq	r1, r4, r0
   1262c:	muleq	r1, r4, r0
   12630:	muleq	r1, r4, r0
   12634:	muleq	r1, r4, r0
   12638:	muleq	r1, r4, r0
   1263c:	muleq	r1, r4, r0
   12640:	muleq	r1, r4, r0
   12644:	muleq	r1, r4, r0
   12648:	muleq	r1, r4, r0
   1264c:	muleq	r1, r4, r0
   12650:	muleq	r1, r4, r0
   12654:	muleq	r1, r4, r0
   12658:	muleq	r1, r4, r0
   1265c:	muleq	r1, r4, r0
   12660:	muleq	r1, r4, r0
   12664:	muleq	r1, r4, r0
   12668:	muleq	r1, r4, r0
   1266c:	muleq	r1, r4, r0
   12670:	muleq	r1, r4, r0
   12674:	andeq	r2, r1, r4, lsl #20
   12678:	andeq	r2, r1, ip, asr #20
   1267c:	andeq	r2, r1, r4, lsl #20
   12680:	andeq	r2, r1, r4, lsr #20
   12684:	mov	r3, #0
   12688:	str	r3, [sp, #56]	; 0x38
   1268c:	b	1246c <close@plt+0x1580>
   12690:	mov	r3, #114	; 0x72
   12694:	b	129b8 <close@plt+0x1acc>
   12698:	mov	r3, #98	; 0x62
   1269c:	b	129d0 <close@plt+0x1ae4>
   126a0:	ldr	r3, [sp, #48]	; 0x30
   126a4:	cmp	r3, #0
   126a8:	beq	12790 <close@plt+0x18a4>
   126ac:	ldr	r3, [sp, #32]
   126b0:	cmp	r3, #0
   126b4:	bne	13218 <close@plt+0x232c>
   126b8:	ldr	r3, [sp, #44]	; 0x2c
   126bc:	eor	r3, r3, #1
   126c0:	cmp	sl, #2
   126c4:	movne	r3, #0
   126c8:	andeq	r3, r3, #1
   126cc:	cmp	r3, #0
   126d0:	moveq	r2, fp
   126d4:	beq	12718 <close@plt+0x182c>
   126d8:	cmp	r7, fp
   126dc:	ldrhi	r2, [sp, #36]	; 0x24
   126e0:	movhi	r1, #39	; 0x27
   126e4:	strbhi	r1, [r2, fp]
   126e8:	add	r2, fp, #1
   126ec:	cmp	r7, r2
   126f0:	ldrhi	r1, [sp, #36]	; 0x24
   126f4:	movhi	r0, #36	; 0x24
   126f8:	strbhi	r0, [r1, r2]
   126fc:	add	r2, fp, #2
   12700:	cmp	r7, r2
   12704:	ldrhi	r1, [sp, #36]	; 0x24
   12708:	movhi	r0, #39	; 0x27
   1270c:	strbhi	r0, [r1, r2]
   12710:	add	r2, fp, #3
   12714:	str	r3, [sp, #44]	; 0x2c
   12718:	cmp	r7, r2
   1271c:	ldrhi	r3, [sp, #36]	; 0x24
   12720:	movhi	r1, #92	; 0x5c
   12724:	strbhi	r1, [r3, r2]
   12728:	add	fp, r2, #1
   1272c:	cmp	r5, #0
   12730:	beq	1309c <close@plt+0x21b0>
   12734:	add	r3, r6, #1
   12738:	ldr	r1, [sp, #28]
   1273c:	cmp	r1, r3
   12740:	bls	130ac <close@plt+0x21c0>
   12744:	ldr	r1, [sp, #52]	; 0x34
   12748:	ldrb	r3, [r1, r3]
   1274c:	sub	r3, r3, #48	; 0x30
   12750:	uxtb	r3, r3
   12754:	cmp	r3, #9
   12758:	bhi	130b8 <close@plt+0x21cc>
   1275c:	cmp	r7, fp
   12760:	movhi	r3, #48	; 0x30
   12764:	ldrhi	r1, [sp, #36]	; 0x24
   12768:	strbhi	r3, [r1, fp]
   1276c:	add	r3, r2, #2
   12770:	cmp	r7, r3
   12774:	movhi	r1, #48	; 0x30
   12778:	ldrhi	r0, [sp, #36]	; 0x24
   1277c:	strbhi	r1, [r0, r3]
   12780:	add	fp, r2, #3
   12784:	ldr	r8, [sp, #32]
   12788:	mov	r4, #48	; 0x30
   1278c:	b	12a68 <close@plt+0x1b7c>
   12790:	ldr	r3, [sp, #156]	; 0x9c
   12794:	tst	r3, #1
   12798:	bne	12b5c <close@plt+0x1c70>
   1279c:	ldr	r5, [sp, #48]	; 0x30
   127a0:	mov	r8, r5
   127a4:	b	12a68 <close@plt+0x1b7c>
   127a8:	cmp	sl, #2
   127ac:	beq	127c4 <close@plt+0x18d8>
   127b0:	cmp	sl, #5
   127b4:	beq	127dc <close@plt+0x18f0>
   127b8:	mov	r8, #0
   127bc:	mov	r5, r8
   127c0:	b	12a68 <close@plt+0x1b7c>
   127c4:	ldr	r3, [sp, #32]
   127c8:	cmp	r3, #0
   127cc:	bne	1322c <close@plt+0x2340>
   127d0:	mov	r8, r3
   127d4:	mov	r5, r3
   127d8:	b	12a68 <close@plt+0x1b7c>
   127dc:	ldr	r3, [sp, #156]	; 0x9c
   127e0:	tst	r3, #4
   127e4:	beq	130c4 <close@plt+0x21d8>
   127e8:	add	r3, r6, #2
   127ec:	ldr	r2, [sp, #28]
   127f0:	cmp	r2, r3
   127f4:	bls	130d0 <close@plt+0x21e4>
   127f8:	ldr	r2, [sp, #52]	; 0x34
   127fc:	add	r2, r2, r6
   12800:	ldrb	r2, [r2, #1]
   12804:	cmp	r2, #63	; 0x3f
   12808:	movne	r8, #0
   1280c:	movne	r5, r8
   12810:	bne	12a68 <close@plt+0x1b7c>
   12814:	ldr	r2, [sp, #52]	; 0x34
   12818:	ldrb	r2, [r2, r3]
   1281c:	sub	r1, r2, #33	; 0x21
   12820:	cmp	r1, #29
   12824:	ldrls	pc, [pc, r1, lsl #2]
   12828:	b	130dc <close@plt+0x21f0>
   1282c:	andeq	r2, r1, r4, lsr #17
   12830:	ldrdeq	r3, [r1], -ip
   12834:	ldrdeq	r3, [r1], -ip
   12838:	ldrdeq	r3, [r1], -ip
   1283c:	ldrdeq	r3, [r1], -ip
   12840:	ldrdeq	r3, [r1], -ip
   12844:	andeq	r2, r1, r4, lsr #17
   12848:	andeq	r2, r1, r4, lsr #17
   1284c:	andeq	r2, r1, r4, lsr #17
   12850:	ldrdeq	r3, [r1], -ip
   12854:	ldrdeq	r3, [r1], -ip
   12858:	ldrdeq	r3, [r1], -ip
   1285c:	andeq	r2, r1, r4, lsr #17
   12860:	ldrdeq	r3, [r1], -ip
   12864:	andeq	r2, r1, r4, lsr #17
   12868:	ldrdeq	r3, [r1], -ip
   1286c:	ldrdeq	r3, [r1], -ip
   12870:	ldrdeq	r3, [r1], -ip
   12874:	ldrdeq	r3, [r1], -ip
   12878:	ldrdeq	r3, [r1], -ip
   1287c:	ldrdeq	r3, [r1], -ip
   12880:	ldrdeq	r3, [r1], -ip
   12884:	ldrdeq	r3, [r1], -ip
   12888:	ldrdeq	r3, [r1], -ip
   1288c:	ldrdeq	r3, [r1], -ip
   12890:	ldrdeq	r3, [r1], -ip
   12894:	ldrdeq	r3, [r1], -ip
   12898:	andeq	r2, r1, r4, lsr #17
   1289c:	andeq	r2, r1, r4, lsr #17
   128a0:	andeq	r2, r1, r4, lsr #17
   128a4:	ldr	r1, [sp, #32]
   128a8:	cmp	r1, #0
   128ac:	bne	132ec <close@plt+0x2400>
   128b0:	cmp	r7, fp
   128b4:	movhi	r1, #63	; 0x3f
   128b8:	ldrhi	r0, [sp, #36]	; 0x24
   128bc:	strbhi	r1, [r0, fp]
   128c0:	add	r1, fp, #1
   128c4:	cmp	r7, r1
   128c8:	ldrhi	r0, [sp, #36]	; 0x24
   128cc:	movhi	ip, #34	; 0x22
   128d0:	strbhi	ip, [r0, r1]
   128d4:	add	r1, fp, #2
   128d8:	cmp	r7, r1
   128dc:	ldrhi	r0, [sp, #36]	; 0x24
   128e0:	movhi	ip, #34	; 0x22
   128e4:	strbhi	ip, [r0, r1]
   128e8:	add	r1, fp, #3
   128ec:	cmp	r7, r1
   128f0:	movhi	r0, #63	; 0x3f
   128f4:	ldrhi	ip, [sp, #36]	; 0x24
   128f8:	strbhi	r0, [ip, r1]
   128fc:	add	fp, fp, #4
   12900:	ldr	r5, [sp, #32]
   12904:	mov	r8, r5
   12908:	mov	r4, r2
   1290c:	mov	r6, r3
   12910:	b	12a68 <close@plt+0x1b7c>
   12914:	mov	r3, #102	; 0x66
   12918:	b	129d0 <close@plt+0x1ae4>
   1291c:	mov	r3, #118	; 0x76
   12920:	b	129d0 <close@plt+0x1ae4>
   12924:	cmp	sl, #2
   12928:	beq	12994 <close@plt+0x1aa8>
   1292c:	ldr	r3, [sp, #48]	; 0x30
   12930:	ldr	r2, [sp, #32]
   12934:	and	r3, r3, r2
   12938:	tst	r9, r3
   1293c:	moveq	r3, r4
   12940:	beq	129d0 <close@plt+0x1ae4>
   12944:	mov	r8, #0
   12948:	mov	r5, r8
   1294c:	eor	r5, r5, #1
   12950:	ldr	r3, [sp, #44]	; 0x2c
   12954:	and	r5, r5, r3
   12958:	tst	r5, #255	; 0xff
   1295c:	beq	12b3c <close@plt+0x1c50>
   12960:	cmp	r7, fp
   12964:	ldrhi	r3, [sp, #36]	; 0x24
   12968:	movhi	r2, #39	; 0x27
   1296c:	strbhi	r2, [r3, fp]
   12970:	add	r3, fp, #1
   12974:	cmp	r7, r3
   12978:	ldrhi	r2, [sp, #36]	; 0x24
   1297c:	movhi	r1, #39	; 0x27
   12980:	strbhi	r1, [r2, r3]
   12984:	add	fp, fp, #2
   12988:	mov	r3, #0
   1298c:	str	r3, [sp, #44]	; 0x2c
   12990:	b	12b3c <close@plt+0x1c50>
   12994:	ldr	r3, [sp, #32]
   12998:	cmp	r3, #0
   1299c:	bne	13238 <close@plt+0x234c>
   129a0:	mov	r8, r3
   129a4:	mov	r5, r3
   129a8:	b	1294c <close@plt+0x1a60>
   129ac:	mov	r3, #110	; 0x6e
   129b0:	b	129b8 <close@plt+0x1acc>
   129b4:	mov	r3, #116	; 0x74
   129b8:	ldr	r2, [sp, #32]
   129bc:	cmp	sl, #2
   129c0:	movne	r2, #0
   129c4:	andeq	r2, r2, #1
   129c8:	cmp	r2, #0
   129cc:	bne	129f0 <close@plt+0x1b04>
   129d0:	ldr	r2, [sp, #48]	; 0x30
   129d4:	cmp	r2, #0
   129d8:	moveq	r8, r2
   129dc:	moveq	r5, r2
   129e0:	beq	12a68 <close@plt+0x1b7c>
   129e4:	mov	r4, r3
   129e8:	mov	r8, #0
   129ec:	b	12ac0 <close@plt+0x1bd4>
   129f0:	mov	r8, sl
   129f4:	mov	sl, r7
   129f8:	b	13264 <close@plt+0x2378>
   129fc:	mov	r3, #97	; 0x61
   12a00:	b	129d0 <close@plt+0x1ae4>
   12a04:	ldr	r3, [sp, #28]
   12a08:	cmn	r3, #1
   12a0c:	beq	12a38 <close@plt+0x1b4c>
   12a10:	ldr	r3, [sp, #28]
   12a14:	subs	r3, r3, #1
   12a18:	movne	r3, #1
   12a1c:	cmp	r3, #0
   12a20:	bne	130e8 <close@plt+0x21fc>
   12a24:	cmp	r6, #0
   12a28:	beq	12a50 <close@plt+0x1b64>
   12a2c:	mov	r8, #0
   12a30:	mov	r5, r8
   12a34:	b	12a68 <close@plt+0x1b7c>
   12a38:	ldr	r3, [sp, #52]	; 0x34
   12a3c:	ldrb	r3, [r3, #1]
   12a40:	adds	r3, r3, #0
   12a44:	movne	r3, #1
   12a48:	b	12a1c <close@plt+0x1b30>
   12a4c:	mov	r8, #0
   12a50:	ldr	r5, [sp, #32]
   12a54:	cmp	sl, #2
   12a58:	movne	r5, #0
   12a5c:	andeq	r5, r5, #1
   12a60:	cmp	r5, #0
   12a64:	bne	12c18 <close@plt+0x1d2c>
   12a68:	ldr	r3, [sp, #68]	; 0x44
   12a6c:	cmp	sl, #2
   12a70:	orreq	r3, r3, #1
   12a74:	eor	r3, r3, #1
   12a78:	ldr	r2, [sp, #32]
   12a7c:	orr	r3, r2, r3
   12a80:	tst	r3, #255	; 0xff
   12a84:	beq	12ab4 <close@plt+0x1bc8>
   12a88:	ldr	r3, [sp, #160]	; 0xa0
   12a8c:	cmp	r3, #0
   12a90:	beq	12ab4 <close@plt+0x1bc8>
   12a94:	lsr	r2, r4, #5
   12a98:	uxtb	r2, r2
   12a9c:	and	r3, r4, #31
   12aa0:	ldr	r1, [sp, #160]	; 0xa0
   12aa4:	ldr	r2, [r1, r2, lsl #2]
   12aa8:	lsr	r3, r2, r3
   12aac:	tst	r3, #1
   12ab0:	bne	12ac0 <close@plt+0x1bd4>
   12ab4:	ldr	r3, [sp, #56]	; 0x38
   12ab8:	cmp	r3, #0
   12abc:	beq	1294c <close@plt+0x1a60>
   12ac0:	ldr	r3, [sp, #32]
   12ac4:	cmp	r3, #0
   12ac8:	bne	132d4 <close@plt+0x23e8>
   12acc:	ldr	r3, [sp, #44]	; 0x2c
   12ad0:	eor	r3, r3, #1
   12ad4:	cmp	sl, #2
   12ad8:	movne	r3, #0
   12adc:	andeq	r3, r3, #1
   12ae0:	cmp	r3, #0
   12ae4:	beq	12b28 <close@plt+0x1c3c>
   12ae8:	cmp	r7, fp
   12aec:	ldrhi	r2, [sp, #36]	; 0x24
   12af0:	movhi	r1, #39	; 0x27
   12af4:	strbhi	r1, [r2, fp]
   12af8:	add	r2, fp, #1
   12afc:	cmp	r7, r2
   12b00:	ldrhi	r1, [sp, #36]	; 0x24
   12b04:	movhi	r0, #36	; 0x24
   12b08:	strbhi	r0, [r1, r2]
   12b0c:	add	r2, fp, #2
   12b10:	cmp	r7, r2
   12b14:	ldrhi	r1, [sp, #36]	; 0x24
   12b18:	movhi	r0, #39	; 0x27
   12b1c:	strbhi	r0, [r1, r2]
   12b20:	add	fp, fp, #3
   12b24:	str	r3, [sp, #44]	; 0x2c
   12b28:	cmp	r7, fp
   12b2c:	ldrhi	r3, [sp, #36]	; 0x24
   12b30:	movhi	r2, #92	; 0x5c
   12b34:	strbhi	r2, [r3, fp]
   12b38:	add	fp, fp, #1
   12b3c:	cmp	fp, r7
   12b40:	ldrcc	r3, [sp, #36]	; 0x24
   12b44:	strbcc	r4, [r3, fp]
   12b48:	add	fp, fp, #1
   12b4c:	ldr	r3, [sp, #40]	; 0x28
   12b50:	cmp	r8, #0
   12b54:	moveq	r3, #0
   12b58:	str	r3, [sp, #40]	; 0x28
   12b5c:	add	r6, r6, #1
   12b60:	ldr	r3, [sp, #28]
   12b64:	cmn	r3, #1
   12b68:	beq	130f4 <close@plt+0x2208>
   12b6c:	ldr	r3, [sp, #28]
   12b70:	subs	r8, r3, r6
   12b74:	movne	r8, #1
   12b78:	cmp	r8, #0
   12b7c:	beq	13108 <close@plt+0x221c>
   12b80:	ldr	r5, [sp, #48]	; 0x30
   12b84:	cmp	sl, #2
   12b88:	moveq	r5, #0
   12b8c:	andne	r5, r5, #1
   12b90:	ldr	r3, [sp, #60]	; 0x3c
   12b94:	adds	r9, r3, #0
   12b98:	movne	r9, #1
   12b9c:	ands	r2, r5, r9
   12ba0:	str	r2, [sp, #56]	; 0x38
   12ba4:	beq	1246c <close@plt+0x1580>
   12ba8:	add	r4, r6, r3
   12bac:	ldr	r2, [sp, #28]
   12bb0:	cmp	r3, #1
   12bb4:	movls	r3, #0
   12bb8:	movhi	r3, #1
   12bbc:	cmn	r2, #1
   12bc0:	movne	r3, #0
   12bc4:	cmp	r3, #0
   12bc8:	beq	12bd8 <close@plt+0x1cec>
   12bcc:	ldr	r0, [sp, #52]	; 0x34
   12bd0:	bl	10e14 <strlen@plt>
   12bd4:	str	r0, [sp, #28]
   12bd8:	ldr	r3, [sp, #28]
   12bdc:	cmp	r3, r4
   12be0:	bcc	12464 <close@plt+0x1578>
   12be4:	ldr	r2, [sp, #60]	; 0x3c
   12be8:	ldr	r1, [sp, #72]	; 0x48
   12bec:	ldr	r3, [sp, #52]	; 0x34
   12bf0:	add	r0, r3, r6
   12bf4:	bl	10d00 <memcmp@plt>
   12bf8:	cmp	r0, #0
   12bfc:	bne	12684 <close@plt+0x1798>
   12c00:	ldr	r3, [sp, #32]
   12c04:	cmp	r3, #0
   12c08:	beq	1246c <close@plt+0x1580>
   12c0c:	mov	r8, sl
   12c10:	mov	sl, r7
   12c14:	b	13264 <close@plt+0x2378>
   12c18:	mov	r8, sl
   12c1c:	mov	sl, r7
   12c20:	b	13264 <close@plt+0x2378>
   12c24:	cmp	sl, #2
   12c28:	strne	r8, [sp, #80]	; 0x50
   12c2c:	movne	r5, #0
   12c30:	bne	12a68 <close@plt+0x1b7c>
   12c34:	ldr	r3, [sp, #32]
   12c38:	cmp	r3, #0
   12c3c:	bne	13250 <close@plt+0x2364>
   12c40:	ldr	r2, [sp, #76]	; 0x4c
   12c44:	adds	r3, r7, #0
   12c48:	movne	r3, #1
   12c4c:	cmp	r2, #0
   12c50:	movne	r3, #0
   12c54:	cmp	r3, #0
   12c58:	movne	r3, #0
   12c5c:	bne	12c8c <close@plt+0x1da0>
   12c60:	cmp	r7, fp
   12c64:	ldrhi	r3, [sp, #36]	; 0x24
   12c68:	movhi	r2, #39	; 0x27
   12c6c:	strbhi	r2, [r3, fp]
   12c70:	add	r3, fp, #1
   12c74:	cmp	r7, r3
   12c78:	ldrhi	r2, [sp, #36]	; 0x24
   12c7c:	movhi	r1, #92	; 0x5c
   12c80:	strbhi	r1, [r2, r3]
   12c84:	mov	r3, r7
   12c88:	ldr	r7, [sp, #76]	; 0x4c
   12c8c:	add	r2, fp, #2
   12c90:	cmp	r2, r3
   12c94:	ldrcc	r1, [sp, #36]	; 0x24
   12c98:	movcc	r0, #39	; 0x27
   12c9c:	strbcc	r0, [r1, r2]
   12ca0:	add	fp, fp, #3
   12ca4:	ldr	r2, [sp, #32]
   12ca8:	mov	r5, r2
   12cac:	str	r8, [sp, #80]	; 0x50
   12cb0:	str	r2, [sp, #44]	; 0x2c
   12cb4:	str	r7, [sp, #76]	; 0x4c
   12cb8:	mov	r7, r3
   12cbc:	b	12a68 <close@plt+0x1b7c>
   12cc0:	ldr	r5, [sp, #84]	; 0x54
   12cc4:	cmp	r5, #1
   12cc8:	beq	12cf8 <close@plt+0x1e0c>
   12ccc:	mov	r3, #0
   12cd0:	str	r3, [sp, #104]	; 0x68
   12cd4:	str	r3, [sp, #108]	; 0x6c
   12cd8:	ldr	r3, [sp, #28]
   12cdc:	cmn	r3, #1
   12ce0:	beq	12d2c <close@plt+0x1e40>
   12ce4:	mov	r3, #0
   12ce8:	str	r4, [sp, #88]	; 0x58
   12cec:	str	fp, [sp, #92]	; 0x5c
   12cf0:	mov	fp, r3
   12cf4:	b	12e54 <close@plt+0x1f68>
   12cf8:	bl	10dfc <__ctype_b_loc@plt>
   12cfc:	ldr	r2, [r0]
   12d00:	lsl	r3, r4, #1
   12d04:	ldrh	r8, [r2, r3]
   12d08:	lsr	r8, r8, #14
   12d0c:	and	r8, r8, #1
   12d10:	mov	r2, r5
   12d14:	eor	r5, r8, #1
   12d18:	ldr	r3, [sp, #48]	; 0x30
   12d1c:	and	r5, r5, r3
   12d20:	ands	r5, r5, #255	; 0xff
   12d24:	beq	12a68 <close@plt+0x1b7c>
   12d28:	b	12eec <close@plt+0x2000>
   12d2c:	ldr	r0, [sp, #52]	; 0x34
   12d30:	bl	10e14 <strlen@plt>
   12d34:	str	r0, [sp, #28]
   12d38:	b	12ce4 <close@plt+0x1df8>
   12d3c:	mov	r2, fp
   12d40:	mov	r1, r4
   12d44:	ldr	r4, [sp, #88]	; 0x58
   12d48:	ldr	fp, [sp, #92]	; 0x5c
   12d4c:	ldr	r0, [sp, #28]
   12d50:	cmp	r0, r5
   12d54:	bls	12f20 <close@plt+0x2034>
   12d58:	ldrb	r3, [r1]
   12d5c:	cmp	r3, #0
   12d60:	beq	12f28 <close@plt+0x203c>
   12d64:	mov	r3, r1
   12d68:	add	r2, r2, #1
   12d6c:	add	r1, r6, r2
   12d70:	cmp	r0, r1
   12d74:	bls	12f30 <close@plt+0x2044>
   12d78:	ldrb	r1, [r3, #1]!
   12d7c:	cmp	r1, #0
   12d80:	bne	12d68 <close@plt+0x1e7c>
   12d84:	mov	r8, #0
   12d88:	b	12ee4 <close@plt+0x1ff8>
   12d8c:	cmp	r4, r5
   12d90:	beq	12e30 <close@plt+0x1f44>
   12d94:	ldrb	r3, [r4, #1]!
   12d98:	sub	r3, r3, #91	; 0x5b
   12d9c:	cmp	r3, #33	; 0x21
   12da0:	ldrls	pc, [pc, r3, lsl #2]
   12da4:	b	12d8c <close@plt+0x1ea0>
   12da8:	andeq	r3, r1, ip, asr r2
   12dac:	andeq	r3, r1, ip, asr r2
   12db0:	andeq	r2, r1, ip, lsl #27
   12db4:	andeq	r3, r1, ip, asr r2
   12db8:	andeq	r2, r1, ip, lsl #27
   12dbc:	andeq	r3, r1, ip, asr r2
   12dc0:	andeq	r2, r1, ip, lsl #27
   12dc4:	andeq	r2, r1, ip, lsl #27
   12dc8:	andeq	r2, r1, ip, lsl #27
   12dcc:	andeq	r2, r1, ip, lsl #27
   12dd0:	andeq	r2, r1, ip, lsl #27
   12dd4:	andeq	r2, r1, ip, lsl #27
   12dd8:	andeq	r2, r1, ip, lsl #27
   12ddc:	andeq	r2, r1, ip, lsl #27
   12de0:	andeq	r2, r1, ip, lsl #27
   12de4:	andeq	r2, r1, ip, lsl #27
   12de8:	andeq	r2, r1, ip, lsl #27
   12dec:	andeq	r2, r1, ip, lsl #27
   12df0:	andeq	r2, r1, ip, lsl #27
   12df4:	andeq	r2, r1, ip, lsl #27
   12df8:	andeq	r2, r1, ip, lsl #27
   12dfc:	andeq	r2, r1, ip, lsl #27
   12e00:	andeq	r2, r1, ip, lsl #27
   12e04:	andeq	r2, r1, ip, lsl #27
   12e08:	andeq	r2, r1, ip, lsl #27
   12e0c:	andeq	r2, r1, ip, lsl #27
   12e10:	andeq	r2, r1, ip, lsl #27
   12e14:	andeq	r2, r1, ip, lsl #27
   12e18:	andeq	r2, r1, ip, lsl #27
   12e1c:	andeq	r2, r1, ip, lsl #27
   12e20:	andeq	r2, r1, ip, lsl #27
   12e24:	andeq	r2, r1, ip, lsl #27
   12e28:	andeq	r2, r1, ip, lsl #27
   12e2c:	andeq	r3, r1, ip, asr r2
   12e30:	ldr	r0, [sp, #100]	; 0x64
   12e34:	bl	10d48 <iswprint@plt>
   12e38:	cmp	r0, #0
   12e3c:	moveq	r8, #0
   12e40:	add	fp, fp, r9
   12e44:	add	r0, sp, #104	; 0x68
   12e48:	bl	10ce8 <mbsinit@plt>
   12e4c:	cmp	r0, #0
   12e50:	bne	12ec4 <close@plt+0x1fd8>
   12e54:	add	r5, r6, fp
   12e58:	ldr	r3, [sp, #52]	; 0x34
   12e5c:	add	r4, r3, r5
   12e60:	add	r3, sp, #104	; 0x68
   12e64:	ldr	r2, [sp, #28]
   12e68:	sub	r2, r2, r5
   12e6c:	mov	r1, r4
   12e70:	add	r0, sp, #100	; 0x64
   12e74:	bl	14a48 <close@plt+0x3b5c>
   12e78:	subs	r9, r0, #0
   12e7c:	beq	12f38 <close@plt+0x204c>
   12e80:	cmn	r9, #1
   12e84:	beq	12ed4 <close@plt+0x1fe8>
   12e88:	cmn	r9, #2
   12e8c:	beq	12d3c <close@plt+0x1e50>
   12e90:	ldr	r3, [sp, #32]
   12e94:	cmp	sl, #2
   12e98:	movne	r3, #0
   12e9c:	andeq	r3, r3, #1
   12ea0:	cmp	r3, #0
   12ea4:	beq	12e30 <close@plt+0x1f44>
   12ea8:	cmp	r9, #1
   12eac:	bls	12e30 <close@plt+0x1f44>
   12eb0:	sub	r3, r9, #1
   12eb4:	add	r5, r3, r5
   12eb8:	ldr	r3, [sp, #52]	; 0x34
   12ebc:	add	r5, r3, r5
   12ec0:	b	12d94 <close@plt+0x1ea8>
   12ec4:	ldr	r4, [sp, #88]	; 0x58
   12ec8:	mov	r2, fp
   12ecc:	ldr	fp, [sp, #92]	; 0x5c
   12ed0:	b	12ee4 <close@plt+0x1ff8>
   12ed4:	ldr	r4, [sp, #88]	; 0x58
   12ed8:	mov	r2, fp
   12edc:	ldr	fp, [sp, #92]	; 0x5c
   12ee0:	mov	r8, #0
   12ee4:	cmp	r2, #1
   12ee8:	bls	12d14 <close@plt+0x1e28>
   12eec:	add	r1, r6, r2
   12ef0:	ldr	ip, [sp, #64]	; 0x40
   12ef4:	mov	r5, #0
   12ef8:	eor	r3, r8, #1
   12efc:	ldr	r2, [sp, #48]	; 0x30
   12f00:	and	r3, r3, r2
   12f04:	uxtb	r3, r3
   12f08:	ldr	r9, [sp, #32]
   12f0c:	ldr	lr, [sp, #44]	; 0x2c
   12f10:	ldr	r2, [sp, #56]	; 0x38
   12f14:	str	r8, [sp, #56]	; 0x38
   12f18:	ldr	r0, [sp, #36]	; 0x24
   12f1c:	b	12fb8 <close@plt+0x20cc>
   12f20:	mov	r8, #0
   12f24:	b	12ee4 <close@plt+0x1ff8>
   12f28:	mov	r8, #0
   12f2c:	b	12ee4 <close@plt+0x1ff8>
   12f30:	mov	r8, #0
   12f34:	b	12ee4 <close@plt+0x1ff8>
   12f38:	ldr	r4, [sp, #88]	; 0x58
   12f3c:	mov	r2, fp
   12f40:	ldr	fp, [sp, #92]	; 0x5c
   12f44:	b	12ee4 <close@plt+0x1ff8>
   12f48:	cmp	r2, #0
   12f4c:	beq	12f60 <close@plt+0x2074>
   12f50:	cmp	r7, fp
   12f54:	movhi	r2, #92	; 0x5c
   12f58:	strbhi	r2, [r0, fp]
   12f5c:	add	fp, fp, #1
   12f60:	add	r8, r6, #1
   12f64:	cmp	r1, r8
   12f68:	bls	13070 <close@plt+0x2184>
   12f6c:	eor	r2, r5, #1
   12f70:	and	r2, r2, lr
   12f74:	ands	r2, r2, #255	; 0xff
   12f78:	beq	1308c <close@plt+0x21a0>
   12f7c:	cmp	r7, fp
   12f80:	movhi	r2, #39	; 0x27
   12f84:	strbhi	r2, [r0, fp]
   12f88:	add	r2, fp, #1
   12f8c:	cmp	r7, r2
   12f90:	movhi	lr, #39	; 0x27
   12f94:	strbhi	lr, [r0, r2]
   12f98:	add	fp, fp, #2
   12f9c:	mov	r6, r8
   12fa0:	mov	r2, r3
   12fa4:	mov	lr, r3
   12fa8:	cmp	r7, fp
   12fac:	strbhi	r4, [r0, fp]
   12fb0:	add	fp, fp, #1
   12fb4:	ldrb	r4, [ip, #1]!
   12fb8:	cmp	r3, #0
   12fbc:	beq	12f48 <close@plt+0x205c>
   12fc0:	cmp	r9, #0
   12fc4:	bne	132c8 <close@plt+0x23dc>
   12fc8:	eor	r5, lr, #1
   12fcc:	cmp	sl, #2
   12fd0:	movne	r5, #0
   12fd4:	andeq	r5, r5, #1
   12fd8:	cmp	r5, #0
   12fdc:	beq	13014 <close@plt+0x2128>
   12fe0:	cmp	r7, fp
   12fe4:	movhi	lr, #39	; 0x27
   12fe8:	strbhi	lr, [r0, fp]
   12fec:	add	lr, fp, #1
   12ff0:	cmp	r7, lr
   12ff4:	movhi	r8, #36	; 0x24
   12ff8:	strbhi	r8, [r0, lr]
   12ffc:	add	lr, fp, #2
   13000:	cmp	r7, lr
   13004:	movhi	r8, #39	; 0x27
   13008:	strbhi	r8, [r0, lr]
   1300c:	add	fp, fp, #3
   13010:	mov	lr, r5
   13014:	cmp	r7, fp
   13018:	movhi	r5, #92	; 0x5c
   1301c:	strbhi	r5, [r0, fp]
   13020:	add	r5, fp, #1
   13024:	cmp	r7, r5
   13028:	lsrhi	r8, r4, #6
   1302c:	addhi	r8, r8, #48	; 0x30
   13030:	strbhi	r8, [r0, r5]
   13034:	add	r8, fp, #2
   13038:	cmp	r7, r8
   1303c:	lsrhi	r5, r4, #3
   13040:	andhi	r5, r5, #7
   13044:	addhi	r5, r5, #48	; 0x30
   13048:	strbhi	r5, [r0, r8]
   1304c:	add	fp, fp, #3
   13050:	and	r4, r4, #7
   13054:	add	r4, r4, #48	; 0x30
   13058:	add	r5, r6, #1
   1305c:	cmp	r1, r5
   13060:	bls	1307c <close@plt+0x2190>
   13064:	mov	r6, r5
   13068:	mov	r5, r3
   1306c:	b	12fa8 <close@plt+0x20bc>
   13070:	str	lr, [sp, #44]	; 0x2c
   13074:	ldr	r8, [sp, #56]	; 0x38
   13078:	b	1294c <close@plt+0x1a60>
   1307c:	str	lr, [sp, #44]	; 0x2c
   13080:	ldr	r8, [sp, #56]	; 0x38
   13084:	mov	r5, r3
   13088:	b	1294c <close@plt+0x1a60>
   1308c:	mov	r6, r8
   13090:	b	12fa8 <close@plt+0x20bc>
   13094:	mov	r5, #0
   13098:	b	12a68 <close@plt+0x1b7c>
   1309c:	mov	r8, r5
   130a0:	ldr	r5, [sp, #48]	; 0x30
   130a4:	mov	r4, #48	; 0x30
   130a8:	b	12a68 <close@plt+0x1b7c>
   130ac:	ldr	r8, [sp, #32]
   130b0:	mov	r4, #48	; 0x30
   130b4:	b	12a68 <close@plt+0x1b7c>
   130b8:	ldr	r8, [sp, #32]
   130bc:	mov	r4, #48	; 0x30
   130c0:	b	12a68 <close@plt+0x1b7c>
   130c4:	mov	r8, #0
   130c8:	mov	r5, r8
   130cc:	b	12a68 <close@plt+0x1b7c>
   130d0:	mov	r8, #0
   130d4:	mov	r5, r8
   130d8:	b	12a68 <close@plt+0x1b7c>
   130dc:	mov	r8, #0
   130e0:	mov	r5, r8
   130e4:	b	12a68 <close@plt+0x1b7c>
   130e8:	mov	r8, #0
   130ec:	mov	r5, r8
   130f0:	b	12a68 <close@plt+0x1b7c>
   130f4:	ldr	r3, [sp, #52]	; 0x34
   130f8:	ldrb	r8, [r3, r6]
   130fc:	adds	r8, r8, #0
   13100:	movne	r8, #1
   13104:	b	12b78 <close@plt+0x1c8c>
   13108:	cmp	sl, #2
   1310c:	movne	r3, #0
   13110:	moveq	r3, #1
   13114:	ldr	r1, [sp, #32]
   13118:	mov	r2, r1
   1311c:	and	r2, r2, r3
   13120:	cmp	fp, #0
   13124:	movne	r2, #0
   13128:	andeq	r2, r2, #1
   1312c:	cmp	r2, #0
   13130:	bne	132e0 <close@plt+0x23f4>
   13134:	eor	r2, r1, #1
   13138:	and	r3, r3, r2
   1313c:	ldr	r1, [sp, #80]	; 0x50
   13140:	tst	r1, r3
   13144:	beq	131bc <close@plt+0x22d0>
   13148:	ldr	r3, [sp, #40]	; 0x28
   1314c:	cmp	r3, #0
   13150:	bne	13178 <close@plt+0x228c>
   13154:	ldr	r1, [sp, #76]	; 0x4c
   13158:	clz	r3, r7
   1315c:	lsr	r3, r3, #5
   13160:	cmp	r1, #0
   13164:	moveq	r3, #0
   13168:	cmp	r3, #0
   1316c:	beq	131bc <close@plt+0x22d0>
   13170:	ldr	r7, [sp, #76]	; 0x4c
   13174:	b	1220c <close@plt+0x1320>
   13178:	ldr	r3, [sp, #168]	; 0xa8
   1317c:	str	r3, [sp, #16]
   13180:	ldr	r3, [sp, #164]	; 0xa4
   13184:	str	r3, [sp, #12]
   13188:	ldr	r3, [sp, #160]	; 0xa0
   1318c:	str	r3, [sp, #8]
   13190:	ldr	r3, [sp, #156]	; 0x9c
   13194:	str	r3, [sp, #4]
   13198:	mov	r3, #5
   1319c:	str	r3, [sp]
   131a0:	ldr	r3, [sp, #28]
   131a4:	ldr	r2, [sp, #52]	; 0x34
   131a8:	ldr	r1, [sp, #76]	; 0x4c
   131ac:	ldr	r0, [sp, #36]	; 0x24
   131b0:	bl	121ac <close@plt+0x12c0>
   131b4:	mov	fp, r0
   131b8:	b	132bc <close@plt+0x23d0>
   131bc:	mov	sl, r7
   131c0:	ldr	r3, [sp, #72]	; 0x48
   131c4:	cmp	r3, #0
   131c8:	moveq	r2, #0
   131cc:	andne	r2, r2, #1
   131d0:	cmp	r2, #0
   131d4:	beq	13204 <close@plt+0x2318>
   131d8:	mov	r2, r3
   131dc:	ldrb	r3, [r3]
   131e0:	cmp	r3, #0
   131e4:	beq	13204 <close@plt+0x2318>
   131e8:	ldr	r1, [sp, #36]	; 0x24
   131ec:	cmp	sl, fp
   131f0:	strbhi	r3, [r1, fp]
   131f4:	add	fp, fp, #1
   131f8:	ldrb	r3, [r2, #1]!
   131fc:	cmp	r3, #0
   13200:	bne	131ec <close@plt+0x2300>
   13204:	cmp	sl, fp
   13208:	movhi	r3, #0
   1320c:	ldrhi	r2, [sp, #36]	; 0x24
   13210:	strbhi	r3, [r2, fp]
   13214:	b	132bc <close@plt+0x23d0>
   13218:	mov	r8, sl
   1321c:	mov	sl, r7
   13220:	ldr	r3, [sp, #32]
   13224:	str	r3, [sp, #48]	; 0x30
   13228:	b	13264 <close@plt+0x2378>
   1322c:	mov	r8, sl
   13230:	mov	sl, r7
   13234:	b	13264 <close@plt+0x2378>
   13238:	mov	r8, sl
   1323c:	mov	sl, r7
   13240:	b	13264 <close@plt+0x2378>
   13244:	ldrdeq	r5, [r1], -r0
   13248:	andeq	r5, r1, r0, ror #15
   1324c:	ldrdeq	r5, [r1], -r4
   13250:	mov	r8, sl
   13254:	mov	sl, r7
   13258:	b	13264 <close@plt+0x2378>
   1325c:	mov	r8, sl
   13260:	mov	sl, r7
   13264:	ldr	r3, [sp, #48]	; 0x30
   13268:	cmp	r8, #2
   1326c:	movne	r3, #0
   13270:	andeq	r3, r3, #1
   13274:	cmp	r3, #0
   13278:	movne	r8, #4
   1327c:	ldr	r3, [sp, #168]	; 0xa8
   13280:	str	r3, [sp, #16]
   13284:	ldr	r3, [sp, #164]	; 0xa4
   13288:	str	r3, [sp, #12]
   1328c:	mov	r3, #0
   13290:	str	r3, [sp, #8]
   13294:	ldr	r3, [sp, #156]	; 0x9c
   13298:	bic	r3, r3, #2
   1329c:	str	r3, [sp, #4]
   132a0:	str	r8, [sp]
   132a4:	ldr	r3, [sp, #28]
   132a8:	ldr	r2, [sp, #52]	; 0x34
   132ac:	mov	r1, sl
   132b0:	ldr	r0, [sp, #36]	; 0x24
   132b4:	bl	121ac <close@plt+0x12c0>
   132b8:	mov	fp, r0
   132bc:	mov	r0, fp
   132c0:	add	sp, sp, #116	; 0x74
   132c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   132c8:	mov	r8, sl
   132cc:	mov	sl, r7
   132d0:	b	13264 <close@plt+0x2378>
   132d4:	mov	r8, sl
   132d8:	mov	sl, r7
   132dc:	b	13264 <close@plt+0x2378>
   132e0:	mov	r8, sl
   132e4:	mov	sl, r7
   132e8:	b	13264 <close@plt+0x2378>
   132ec:	mov	r8, sl
   132f0:	mov	sl, r7
   132f4:	b	1327c <close@plt+0x2390>
   132f8:	mov	r3, #1
   132fc:	str	r3, [sp, #32]
   13300:	str	r3, [sp, #48]	; 0x30
   13304:	str	r3, [sp, #60]	; 0x3c
   13308:	ldr	r3, [pc, #-196]	; 1324c <close@plt+0x2360>
   1330c:	str	r3, [sp, #72]	; 0x48
   13310:	mov	fp, #0
   13314:	mov	sl, #5
   13318:	b	12268 <close@plt+0x137c>
   1331c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13320:	sub	sp, sp, #52	; 0x34
   13324:	mov	r5, r0
   13328:	str	r1, [sp, #24]
   1332c:	str	r2, [sp, #28]
   13330:	mov	r4, r3
   13334:	bl	10e20 <__errno_location@plt>
   13338:	str	r0, [sp, #32]
   1333c:	ldr	r3, [r0]
   13340:	str	r3, [sp, #36]	; 0x24
   13344:	ldr	r3, [pc, #396]	; 134d8 <close@plt+0x25ec>
   13348:	ldr	r6, [r3]
   1334c:	cmn	r5, #-2147483647	; 0x80000001
   13350:	movne	r3, #0
   13354:	moveq	r3, #1
   13358:	orrs	r3, r3, r5, lsr #31
   1335c:	bne	1349c <close@plt+0x25b0>
   13360:	ldr	r3, [pc, #368]	; 134d8 <close@plt+0x25ec>
   13364:	ldr	r2, [r3, #4]
   13368:	cmp	r5, r2
   1336c:	blt	133d4 <close@plt+0x24e8>
   13370:	str	r2, [sp, #44]	; 0x2c
   13374:	add	r3, r3, #8
   13378:	cmp	r6, r3
   1337c:	beq	134a0 <close@plt+0x25b4>
   13380:	sub	r2, r5, r2
   13384:	mov	r3, #8
   13388:	str	r3, [sp]
   1338c:	mvn	r3, #-2147483648	; 0x80000000
   13390:	add	r2, r2, #1
   13394:	add	r1, sp, #44	; 0x2c
   13398:	mov	r0, r6
   1339c:	bl	14220 <close@plt+0x3334>
   133a0:	mov	r6, r0
   133a4:	ldr	r3, [pc, #300]	; 134d8 <close@plt+0x25ec>
   133a8:	str	r0, [r3]
   133ac:	ldr	r7, [pc, #292]	; 134d8 <close@plt+0x25ec>
   133b0:	ldr	r0, [r7, #4]
   133b4:	ldr	r2, [sp, #44]	; 0x2c
   133b8:	sub	r2, r2, r0
   133bc:	lsl	r2, r2, #3
   133c0:	mov	r1, #0
   133c4:	add	r0, r6, r0, lsl #3
   133c8:	bl	10e38 <memset@plt>
   133cc:	ldr	r3, [sp, #44]	; 0x2c
   133d0:	str	r3, [r7, #4]
   133d4:	add	fp, r6, r5, lsl #3
   133d8:	ldr	r8, [r6, r5, lsl #3]
   133dc:	ldr	r7, [fp, #4]
   133e0:	ldr	r9, [r4, #4]
   133e4:	orr	r9, r9, #1
   133e8:	add	sl, r4, #8
   133ec:	ldr	r3, [r4, #44]	; 0x2c
   133f0:	str	r3, [sp, #16]
   133f4:	ldr	r3, [r4, #40]	; 0x28
   133f8:	str	r3, [sp, #12]
   133fc:	str	sl, [sp, #8]
   13400:	str	r9, [sp, #4]
   13404:	ldr	r3, [r4]
   13408:	str	r3, [sp]
   1340c:	ldr	r3, [sp, #28]
   13410:	ldr	r2, [sp, #24]
   13414:	mov	r1, r8
   13418:	mov	r0, r7
   1341c:	bl	121ac <close@plt+0x12c0>
   13420:	cmp	r8, r0
   13424:	bhi	13484 <close@plt+0x2598>
   13428:	add	r8, r0, #1
   1342c:	str	r8, [r6, r5, lsl #3]
   13430:	ldr	r3, [pc, #164]	; 134dc <close@plt+0x25f0>
   13434:	cmp	r7, r3
   13438:	beq	13444 <close@plt+0x2558>
   1343c:	mov	r0, r7
   13440:	bl	11da8 <close@plt+0xebc>
   13444:	mov	r0, r8
   13448:	bl	1409c <close@plt+0x31b0>
   1344c:	mov	r7, r0
   13450:	str	r0, [fp, #4]
   13454:	ldr	r3, [r4, #44]	; 0x2c
   13458:	str	r3, [sp, #16]
   1345c:	ldr	r3, [r4, #40]	; 0x28
   13460:	str	r3, [sp, #12]
   13464:	str	sl, [sp, #8]
   13468:	str	r9, [sp, #4]
   1346c:	ldr	r3, [r4]
   13470:	str	r3, [sp]
   13474:	ldr	r3, [sp, #28]
   13478:	ldr	r2, [sp, #24]
   1347c:	mov	r1, r8
   13480:	bl	121ac <close@plt+0x12c0>
   13484:	ldr	r3, [sp, #32]
   13488:	ldr	r2, [sp, #36]	; 0x24
   1348c:	str	r2, [r3]
   13490:	mov	r0, r7
   13494:	add	sp, sp, #52	; 0x34
   13498:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1349c:	bl	10ee0 <abort@plt>
   134a0:	sub	r2, r5, r2
   134a4:	mov	r3, #8
   134a8:	str	r3, [sp]
   134ac:	mvn	r3, #-2147483648	; 0x80000000
   134b0:	add	r2, r2, #1
   134b4:	add	r1, sp, #44	; 0x2c
   134b8:	mov	r0, #0
   134bc:	bl	14220 <close@plt+0x3334>
   134c0:	mov	r6, r0
   134c4:	ldr	r3, [pc, #12]	; 134d8 <close@plt+0x25ec>
   134c8:	str	r0, [r3], #8
   134cc:	ldm	r3, {r0, r1}
   134d0:	stm	r6, {r0, r1}
   134d4:	b	133ac <close@plt+0x24c0>
   134d8:	strdeq	r6, [r2], -r4
   134dc:	andeq	r6, r2, r8, ror #2
   134e0:	push	{r4, r5, r6, lr}
   134e4:	mov	r4, r0
   134e8:	bl	10e20 <__errno_location@plt>
   134ec:	mov	r5, r0
   134f0:	ldr	r6, [r0]
   134f4:	cmp	r4, #0
   134f8:	ldr	r3, [pc, #20]	; 13514 <close@plt+0x2628>
   134fc:	moveq	r4, r3
   13500:	mov	r1, #48	; 0x30
   13504:	mov	r0, r4
   13508:	bl	14588 <close@plt+0x369c>
   1350c:	str	r6, [r5]
   13510:	pop	{r4, r5, r6, pc}
   13514:	andeq	r6, r2, r8, ror #4
   13518:	subs	r3, r0, #0
   1351c:	ldr	r2, [pc, #8]	; 1352c <close@plt+0x2640>
   13520:	moveq	r3, r2
   13524:	ldr	r0, [r3]
   13528:	bx	lr
   1352c:	andeq	r6, r2, r8, ror #4
   13530:	subs	r3, r0, #0
   13534:	ldr	r2, [pc, #8]	; 13544 <close@plt+0x2658>
   13538:	moveq	r3, r2
   1353c:	str	r1, [r3]
   13540:	bx	lr
   13544:	andeq	r6, r2, r8, ror #4
   13548:	push	{lr}		; (str lr, [sp, #-4]!)
   1354c:	subs	r3, r0, #0
   13550:	ldr	r0, [pc, #44]	; 13584 <close@plt+0x2698>
   13554:	moveq	r3, r0
   13558:	add	r3, r3, #8
   1355c:	lsr	lr, r1, #5
   13560:	and	r1, r1, #31
   13564:	ldr	ip, [r3, lr, lsl #2]
   13568:	lsr	r0, ip, r1
   1356c:	eor	r2, r2, r0
   13570:	and	r2, r2, #1
   13574:	eor	r1, ip, r2, lsl r1
   13578:	str	r1, [r3, lr, lsl #2]
   1357c:	and	r0, r0, #1
   13580:	pop	{pc}		; (ldr pc, [sp], #4)
   13584:	andeq	r6, r2, r8, ror #4
   13588:	subs	r3, r0, #0
   1358c:	ldr	r2, [pc, #12]	; 135a0 <close@plt+0x26b4>
   13590:	moveq	r3, r2
   13594:	ldr	r0, [r3, #4]
   13598:	str	r1, [r3, #4]
   1359c:	bx	lr
   135a0:	andeq	r6, r2, r8, ror #4
   135a4:	subs	r3, r0, #0
   135a8:	ldr	r0, [pc, #40]	; 135d8 <close@plt+0x26ec>
   135ac:	moveq	r3, r0
   135b0:	mov	r0, #10
   135b4:	str	r0, [r3]
   135b8:	cmp	r2, #0
   135bc:	cmpne	r1, #0
   135c0:	beq	135d0 <close@plt+0x26e4>
   135c4:	str	r1, [r3, #40]	; 0x28
   135c8:	str	r2, [r3, #44]	; 0x2c
   135cc:	bx	lr
   135d0:	push	{r4, lr}
   135d4:	bl	10ee0 <abort@plt>
   135d8:	andeq	r6, r2, r8, ror #4
   135dc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   135e0:	sub	sp, sp, #24
   135e4:	mov	r7, r0
   135e8:	mov	r8, r1
   135ec:	mov	r9, r2
   135f0:	mov	sl, r3
   135f4:	ldr	r4, [sp, #56]	; 0x38
   135f8:	cmp	r4, #0
   135fc:	ldr	r3, [pc, #84]	; 13658 <close@plt+0x276c>
   13600:	moveq	r4, r3
   13604:	bl	10e20 <__errno_location@plt>
   13608:	mov	r5, r0
   1360c:	ldr	r6, [r0]
   13610:	ldr	r3, [r4, #44]	; 0x2c
   13614:	str	r3, [sp, #16]
   13618:	ldr	r3, [r4, #40]	; 0x28
   1361c:	str	r3, [sp, #12]
   13620:	add	r3, r4, #8
   13624:	str	r3, [sp, #8]
   13628:	ldr	r3, [r4, #4]
   1362c:	str	r3, [sp, #4]
   13630:	ldr	r3, [r4]
   13634:	str	r3, [sp]
   13638:	mov	r3, sl
   1363c:	mov	r2, r9
   13640:	mov	r1, r8
   13644:	mov	r0, r7
   13648:	bl	121ac <close@plt+0x12c0>
   1364c:	str	r6, [r5]
   13650:	add	sp, sp, #24
   13654:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13658:	andeq	r6, r2, r8, ror #4
   1365c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13660:	sub	sp, sp, #44	; 0x2c
   13664:	str	r0, [sp, #28]
   13668:	str	r1, [sp, #32]
   1366c:	mov	r6, r2
   13670:	subs	r4, r3, #0
   13674:	ldr	r3, [pc, #172]	; 13728 <close@plt+0x283c>
   13678:	moveq	r4, r3
   1367c:	bl	10e20 <__errno_location@plt>
   13680:	mov	r7, r0
   13684:	ldr	fp, [r0]
   13688:	ldr	r5, [r4, #4]
   1368c:	cmp	r6, #0
   13690:	orreq	r5, r5, #1
   13694:	add	r9, r4, #8
   13698:	ldr	r3, [r4, #44]	; 0x2c
   1369c:	str	r3, [sp, #16]
   136a0:	ldr	r3, [r4, #40]	; 0x28
   136a4:	str	r3, [sp, #12]
   136a8:	str	r9, [sp, #8]
   136ac:	str	r5, [sp, #4]
   136b0:	ldr	r3, [r4]
   136b4:	str	r3, [sp]
   136b8:	ldr	r3, [sp, #32]
   136bc:	ldr	r2, [sp, #28]
   136c0:	mov	r1, #0
   136c4:	mov	r0, r1
   136c8:	bl	121ac <close@plt+0x12c0>
   136cc:	mov	sl, r0
   136d0:	add	r8, r0, #1
   136d4:	mov	r0, r8
   136d8:	bl	1409c <close@plt+0x31b0>
   136dc:	str	r0, [sp, #36]	; 0x24
   136e0:	ldr	r3, [r4, #44]	; 0x2c
   136e4:	str	r3, [sp, #16]
   136e8:	ldr	r3, [r4, #40]	; 0x28
   136ec:	str	r3, [sp, #12]
   136f0:	str	r9, [sp, #8]
   136f4:	str	r5, [sp, #4]
   136f8:	ldr	r3, [r4]
   136fc:	str	r3, [sp]
   13700:	ldr	r3, [sp, #32]
   13704:	ldr	r2, [sp, #28]
   13708:	mov	r1, r8
   1370c:	bl	121ac <close@plt+0x12c0>
   13710:	str	fp, [r7]
   13714:	cmp	r6, #0
   13718:	strne	sl, [r6]
   1371c:	ldr	r0, [sp, #36]	; 0x24
   13720:	add	sp, sp, #44	; 0x2c
   13724:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13728:	andeq	r6, r2, r8, ror #4
   1372c:	push	{r4, lr}
   13730:	mov	r3, r2
   13734:	mov	r2, #0
   13738:	bl	1365c <close@plt+0x2770>
   1373c:	pop	{r4, pc}
   13740:	push	{r4, r5, r6, r7, r8, lr}
   13744:	ldr	r3, [pc, #140]	; 137d8 <close@plt+0x28ec>
   13748:	ldr	r7, [r3]
   1374c:	ldr	r3, [r3, #4]
   13750:	cmp	r3, #1
   13754:	ble	13780 <close@plt+0x2894>
   13758:	mov	r5, r7
   1375c:	mov	r4, #1
   13760:	ldr	r6, [pc, #112]	; 137d8 <close@plt+0x28ec>
   13764:	ldr	r0, [r5, #12]
   13768:	bl	11da8 <close@plt+0xebc>
   1376c:	add	r4, r4, #1
   13770:	add	r5, r5, #8
   13774:	ldr	r3, [r6, #4]
   13778:	cmp	r3, r4
   1377c:	bgt	13764 <close@plt+0x2878>
   13780:	ldr	r0, [r7, #4]
   13784:	ldr	r3, [pc, #80]	; 137dc <close@plt+0x28f0>
   13788:	cmp	r0, r3
   1378c:	beq	137a8 <close@plt+0x28bc>
   13790:	bl	11da8 <close@plt+0xebc>
   13794:	ldr	r3, [pc, #60]	; 137d8 <close@plt+0x28ec>
   13798:	mov	r2, #256	; 0x100
   1379c:	str	r2, [r3, #8]
   137a0:	ldr	r2, [pc, #52]	; 137dc <close@plt+0x28f0>
   137a4:	str	r2, [r3, #12]
   137a8:	ldr	r3, [pc, #48]	; 137e0 <close@plt+0x28f4>
   137ac:	cmp	r7, r3
   137b0:	beq	137c8 <close@plt+0x28dc>
   137b4:	mov	r0, r7
   137b8:	bl	11da8 <close@plt+0xebc>
   137bc:	ldr	r3, [pc, #20]	; 137d8 <close@plt+0x28ec>
   137c0:	add	r2, r3, #8
   137c4:	str	r2, [r3]
   137c8:	mov	r2, #1
   137cc:	ldr	r3, [pc, #4]	; 137d8 <close@plt+0x28ec>
   137d0:	str	r2, [r3, #4]
   137d4:	pop	{r4, r5, r6, r7, r8, pc}
   137d8:	strdeq	r6, [r2], -r4
   137dc:	andeq	r6, r2, r8, ror #2
   137e0:	strdeq	r6, [r2], -ip
   137e4:	push	{r4, lr}
   137e8:	ldr	r3, [pc, #8]	; 137f8 <close@plt+0x290c>
   137ec:	mvn	r2, #0
   137f0:	bl	1331c <close@plt+0x2430>
   137f4:	pop	{r4, pc}
   137f8:	andeq	r6, r2, r8, ror #4
   137fc:	push	{r4, lr}
   13800:	ldr	r3, [pc, #4]	; 1380c <close@plt+0x2920>
   13804:	bl	1331c <close@plt+0x2430>
   13808:	pop	{r4, pc}
   1380c:	andeq	r6, r2, r8, ror #4
   13810:	push	{r4, lr}
   13814:	mov	r1, r0
   13818:	mov	r0, #0
   1381c:	bl	137e4 <close@plt+0x28f8>
   13820:	pop	{r4, pc}
   13824:	push	{r4, lr}
   13828:	mov	r2, r1
   1382c:	mov	r1, r0
   13830:	mov	r0, #0
   13834:	bl	137fc <close@plt+0x2910>
   13838:	pop	{r4, pc}
   1383c:	push	{r4, r5, lr}
   13840:	sub	sp, sp, #52	; 0x34
   13844:	mov	r4, r0
   13848:	mov	r5, r2
   1384c:	mov	r0, sp
   13850:	bl	12044 <close@plt+0x1158>
   13854:	mov	r3, sp
   13858:	mvn	r2, #0
   1385c:	mov	r1, r5
   13860:	mov	r0, r4
   13864:	bl	1331c <close@plt+0x2430>
   13868:	add	sp, sp, #52	; 0x34
   1386c:	pop	{r4, r5, pc}
   13870:	push	{r4, r5, r6, lr}
   13874:	sub	sp, sp, #48	; 0x30
   13878:	mov	r4, r0
   1387c:	mov	r5, r2
   13880:	mov	r6, r3
   13884:	mov	r0, sp
   13888:	bl	12044 <close@plt+0x1158>
   1388c:	mov	r3, sp
   13890:	mov	r2, r6
   13894:	mov	r1, r5
   13898:	mov	r0, r4
   1389c:	bl	1331c <close@plt+0x2430>
   138a0:	add	sp, sp, #48	; 0x30
   138a4:	pop	{r4, r5, r6, pc}
   138a8:	push	{r4, lr}
   138ac:	mov	r2, r1
   138b0:	mov	r1, r0
   138b4:	mov	r0, #0
   138b8:	bl	1383c <close@plt+0x2950>
   138bc:	pop	{r4, pc}
   138c0:	push	{r4, lr}
   138c4:	mov	r3, r2
   138c8:	mov	r2, r1
   138cc:	mov	r1, r0
   138d0:	mov	r0, #0
   138d4:	bl	13870 <close@plt+0x2984>
   138d8:	pop	{r4, pc}
   138dc:	push	{r4, r5, r6, lr}
   138e0:	sub	sp, sp, #48	; 0x30
   138e4:	mov	r4, r0
   138e8:	mov	r5, r1
   138ec:	mov	r6, r2
   138f0:	mov	ip, sp
   138f4:	ldr	lr, [pc, #64]	; 1393c <close@plt+0x2a50>
   138f8:	ldm	lr!, {r0, r1, r2, r3}
   138fc:	stmia	ip!, {r0, r1, r2, r3}
   13900:	ldm	lr!, {r0, r1, r2, r3}
   13904:	stmia	ip!, {r0, r1, r2, r3}
   13908:	ldm	lr, {r0, r1, r2, r3}
   1390c:	stm	ip, {r0, r1, r2, r3}
   13910:	mov	r2, #1
   13914:	mov	r1, r6
   13918:	mov	r0, sp
   1391c:	bl	13548 <close@plt+0x265c>
   13920:	mov	r3, sp
   13924:	mov	r2, r5
   13928:	mov	r1, r4
   1392c:	mov	r0, #0
   13930:	bl	1331c <close@plt+0x2430>
   13934:	add	sp, sp, #48	; 0x30
   13938:	pop	{r4, r5, r6, pc}
   1393c:	andeq	r6, r2, r8, ror #4
   13940:	push	{r4, lr}
   13944:	mov	r2, r1
   13948:	mvn	r1, #0
   1394c:	bl	138dc <close@plt+0x29f0>
   13950:	pop	{r4, pc}
   13954:	push	{r4, lr}
   13958:	mov	r1, #58	; 0x3a
   1395c:	bl	13940 <close@plt+0x2a54>
   13960:	pop	{r4, pc}
   13964:	push	{r4, lr}
   13968:	mov	r2, #58	; 0x3a
   1396c:	bl	138dc <close@plt+0x29f0>
   13970:	pop	{r4, pc}
   13974:	push	{r4, r5, lr}
   13978:	sub	sp, sp, #100	; 0x64
   1397c:	mov	r4, r0
   13980:	mov	r5, r2
   13984:	mov	r0, sp
   13988:	bl	12044 <close@plt+0x1158>
   1398c:	add	lr, sp, #48	; 0x30
   13990:	mov	ip, sp
   13994:	ldm	ip!, {r0, r1, r2, r3}
   13998:	stmia	lr!, {r0, r1, r2, r3}
   1399c:	ldm	ip!, {r0, r1, r2, r3}
   139a0:	stmia	lr!, {r0, r1, r2, r3}
   139a4:	ldm	ip, {r0, r1, r2, r3}
   139a8:	stm	lr, {r0, r1, r2, r3}
   139ac:	mov	r2, #1
   139b0:	mov	r1, #58	; 0x3a
   139b4:	add	r0, sp, #48	; 0x30
   139b8:	bl	13548 <close@plt+0x265c>
   139bc:	add	r3, sp, #48	; 0x30
   139c0:	mvn	r2, #0
   139c4:	mov	r1, r5
   139c8:	mov	r0, r4
   139cc:	bl	1331c <close@plt+0x2430>
   139d0:	add	sp, sp, #100	; 0x64
   139d4:	pop	{r4, r5, pc}
   139d8:	push	{r4, r5, r6, r7, lr}
   139dc:	sub	sp, sp, #52	; 0x34
   139e0:	mov	r4, r0
   139e4:	mov	r6, r1
   139e8:	mov	r7, r2
   139ec:	mov	r5, r3
   139f0:	mov	ip, sp
   139f4:	ldr	lr, [pc, #64]	; 13a3c <close@plt+0x2b50>
   139f8:	ldm	lr!, {r0, r1, r2, r3}
   139fc:	stmia	ip!, {r0, r1, r2, r3}
   13a00:	ldm	lr!, {r0, r1, r2, r3}
   13a04:	stmia	ip!, {r0, r1, r2, r3}
   13a08:	ldm	lr, {r0, r1, r2, r3}
   13a0c:	stm	ip, {r0, r1, r2, r3}
   13a10:	mov	r2, r7
   13a14:	mov	r1, r6
   13a18:	mov	r0, sp
   13a1c:	bl	135a4 <close@plt+0x26b8>
   13a20:	mov	r3, sp
   13a24:	ldr	r2, [sp, #72]	; 0x48
   13a28:	mov	r1, r5
   13a2c:	mov	r0, r4
   13a30:	bl	1331c <close@plt+0x2430>
   13a34:	add	sp, sp, #52	; 0x34
   13a38:	pop	{r4, r5, r6, r7, pc}
   13a3c:	andeq	r6, r2, r8, ror #4
   13a40:	push	{lr}		; (str lr, [sp, #-4]!)
   13a44:	sub	sp, sp, #12
   13a48:	mvn	ip, #0
   13a4c:	str	ip, [sp]
   13a50:	bl	139d8 <close@plt+0x2aec>
   13a54:	add	sp, sp, #12
   13a58:	pop	{pc}		; (ldr pc, [sp], #4)
   13a5c:	push	{r4, lr}
   13a60:	mov	r3, r2
   13a64:	mov	r2, r1
   13a68:	mov	r1, r0
   13a6c:	mov	r0, #0
   13a70:	bl	13a40 <close@plt+0x2b54>
   13a74:	pop	{r4, pc}
   13a78:	push	{lr}		; (str lr, [sp, #-4]!)
   13a7c:	sub	sp, sp, #12
   13a80:	str	r3, [sp]
   13a84:	mov	r3, r2
   13a88:	mov	r2, r1
   13a8c:	mov	r1, r0
   13a90:	mov	r0, #0
   13a94:	bl	139d8 <close@plt+0x2aec>
   13a98:	add	sp, sp, #12
   13a9c:	pop	{pc}		; (ldr pc, [sp], #4)
   13aa0:	push	{r4, lr}
   13aa4:	ldr	r3, [pc, #4]	; 13ab0 <close@plt+0x2bc4>
   13aa8:	bl	1331c <close@plt+0x2430>
   13aac:	pop	{r4, pc}
   13ab0:	andeq	r6, r2, r4, lsl #2
   13ab4:	push	{r4, lr}
   13ab8:	mov	r2, r1
   13abc:	mov	r1, r0
   13ac0:	mov	r0, #0
   13ac4:	bl	13aa0 <close@plt+0x2bb4>
   13ac8:	pop	{r4, pc}
   13acc:	push	{r4, lr}
   13ad0:	mvn	r2, #0
   13ad4:	bl	13aa0 <close@plt+0x2bb4>
   13ad8:	pop	{r4, pc}
   13adc:	push	{r4, lr}
   13ae0:	mov	r1, r0
   13ae4:	mov	r0, #0
   13ae8:	bl	13acc <close@plt+0x2be0>
   13aec:	pop	{r4, pc}
   13af0:	push	{r4, r5, r6, lr}
   13af4:	sub	sp, sp, #32
   13af8:	mov	r4, r0
   13afc:	ldr	r5, [sp, #48]	; 0x30
   13b00:	ldr	r6, [sp, #52]	; 0x34
   13b04:	cmp	r1, #0
   13b08:	beq	13bc0 <close@plt+0x2cd4>
   13b0c:	str	r3, [sp, #4]
   13b10:	str	r2, [sp]
   13b14:	mov	r3, r1
   13b18:	ldr	r2, [pc, #940]	; 13ecc <close@plt+0x2fe0>
   13b1c:	mov	r1, #1
   13b20:	bl	10e5c <__fprintf_chk@plt>
   13b24:	mov	r2, #5
   13b28:	ldr	r1, [pc, #928]	; 13ed0 <close@plt+0x2fe4>
   13b2c:	mov	r0, #0
   13b30:	bl	10d18 <dcgettext@plt>
   13b34:	ldr	r3, [pc, #920]	; 13ed4 <close@plt+0x2fe8>
   13b38:	str	r3, [sp]
   13b3c:	mov	r3, r0
   13b40:	ldr	r2, [pc, #912]	; 13ed8 <close@plt+0x2fec>
   13b44:	mov	r1, #1
   13b48:	mov	r0, r4
   13b4c:	bl	10e5c <__fprintf_chk@plt>
   13b50:	mov	r1, r4
   13b54:	mov	r0, #10
   13b58:	bl	10d0c <fputc_unlocked@plt>
   13b5c:	mov	r2, #5
   13b60:	ldr	r1, [pc, #884]	; 13edc <close@plt+0x2ff0>
   13b64:	mov	r0, #0
   13b68:	bl	10d18 <dcgettext@plt>
   13b6c:	ldr	r3, [pc, #876]	; 13ee0 <close@plt+0x2ff4>
   13b70:	mov	r2, r0
   13b74:	mov	r1, #1
   13b78:	mov	r0, r4
   13b7c:	bl	10e5c <__fprintf_chk@plt>
   13b80:	mov	r1, r4
   13b84:	mov	r0, #10
   13b88:	bl	10d0c <fputc_unlocked@plt>
   13b8c:	cmp	r6, #9
   13b90:	ldrls	pc, [pc, r6, lsl #2]
   13b94:	b	13e64 <close@plt+0x2f78>
   13b98:	strdeq	r3, [r1], -ip
   13b9c:	ldrdeq	r3, [r1], -r8
   13ba0:	andeq	r3, r1, r4, lsl #24
   13ba4:	andeq	r3, r1, r4, lsr ip
   13ba8:	andeq	r3, r1, ip, ror #24
   13bac:	andeq	r3, r1, ip, lsr #25
   13bb0:	strdeq	r3, [r1], -r4
   13bb4:	andeq	r3, r1, r4, asr #26
   13bb8:	muleq	r1, ip, sp
   13bbc:	strdeq	r3, [r1], -ip
   13bc0:	str	r3, [sp]
   13bc4:	mov	r3, r2
   13bc8:	ldr	r2, [pc, #788]	; 13ee4 <close@plt+0x2ff8>
   13bcc:	mov	r1, #1
   13bd0:	bl	10e5c <__fprintf_chk@plt>
   13bd4:	b	13b24 <close@plt+0x2c38>
   13bd8:	mov	r2, #5
   13bdc:	ldr	r1, [pc, #772]	; 13ee8 <close@plt+0x2ffc>
   13be0:	mov	r0, #0
   13be4:	bl	10d18 <dcgettext@plt>
   13be8:	ldr	r3, [r5]
   13bec:	mov	r2, r0
   13bf0:	mov	r1, #1
   13bf4:	mov	r0, r4
   13bf8:	bl	10e5c <__fprintf_chk@plt>
   13bfc:	add	sp, sp, #32
   13c00:	pop	{r4, r5, r6, pc}
   13c04:	mov	r2, #5
   13c08:	ldr	r1, [pc, #732]	; 13eec <close@plt+0x3000>
   13c0c:	mov	r0, #0
   13c10:	bl	10d18 <dcgettext@plt>
   13c14:	ldr	r3, [r5]
   13c18:	ldr	r2, [r5, #4]
   13c1c:	str	r2, [sp]
   13c20:	mov	r2, r0
   13c24:	mov	r1, #1
   13c28:	mov	r0, r4
   13c2c:	bl	10e5c <__fprintf_chk@plt>
   13c30:	b	13bfc <close@plt+0x2d10>
   13c34:	mov	r2, #5
   13c38:	ldr	r1, [pc, #688]	; 13ef0 <close@plt+0x3004>
   13c3c:	mov	r0, #0
   13c40:	bl	10d18 <dcgettext@plt>
   13c44:	ldr	r3, [r5]
   13c48:	ldr	r2, [r5, #8]
   13c4c:	str	r2, [sp, #4]
   13c50:	ldr	r2, [r5, #4]
   13c54:	str	r2, [sp]
   13c58:	mov	r2, r0
   13c5c:	mov	r1, #1
   13c60:	mov	r0, r4
   13c64:	bl	10e5c <__fprintf_chk@plt>
   13c68:	b	13bfc <close@plt+0x2d10>
   13c6c:	mov	r2, #5
   13c70:	ldr	r1, [pc, #636]	; 13ef4 <close@plt+0x3008>
   13c74:	mov	r0, #0
   13c78:	bl	10d18 <dcgettext@plt>
   13c7c:	ldr	r3, [r5]
   13c80:	ldr	r2, [r5, #12]
   13c84:	str	r2, [sp, #8]
   13c88:	ldr	r2, [r5, #8]
   13c8c:	str	r2, [sp, #4]
   13c90:	ldr	r2, [r5, #4]
   13c94:	str	r2, [sp]
   13c98:	mov	r2, r0
   13c9c:	mov	r1, #1
   13ca0:	mov	r0, r4
   13ca4:	bl	10e5c <__fprintf_chk@plt>
   13ca8:	b	13bfc <close@plt+0x2d10>
   13cac:	mov	r2, #5
   13cb0:	ldr	r1, [pc, #576]	; 13ef8 <close@plt+0x300c>
   13cb4:	mov	r0, #0
   13cb8:	bl	10d18 <dcgettext@plt>
   13cbc:	ldr	r3, [r5]
   13cc0:	ldr	r2, [r5, #16]
   13cc4:	str	r2, [sp, #12]
   13cc8:	ldr	r2, [r5, #12]
   13ccc:	str	r2, [sp, #8]
   13cd0:	ldr	r2, [r5, #8]
   13cd4:	str	r2, [sp, #4]
   13cd8:	ldr	r2, [r5, #4]
   13cdc:	str	r2, [sp]
   13ce0:	mov	r2, r0
   13ce4:	mov	r1, #1
   13ce8:	mov	r0, r4
   13cec:	bl	10e5c <__fprintf_chk@plt>
   13cf0:	b	13bfc <close@plt+0x2d10>
   13cf4:	mov	r2, #5
   13cf8:	ldr	r1, [pc, #508]	; 13efc <close@plt+0x3010>
   13cfc:	mov	r0, #0
   13d00:	bl	10d18 <dcgettext@plt>
   13d04:	ldr	r3, [r5]
   13d08:	ldr	r2, [r5, #20]
   13d0c:	str	r2, [sp, #16]
   13d10:	ldr	r2, [r5, #16]
   13d14:	str	r2, [sp, #12]
   13d18:	ldr	r2, [r5, #12]
   13d1c:	str	r2, [sp, #8]
   13d20:	ldr	r2, [r5, #8]
   13d24:	str	r2, [sp, #4]
   13d28:	ldr	r2, [r5, #4]
   13d2c:	str	r2, [sp]
   13d30:	mov	r2, r0
   13d34:	mov	r1, #1
   13d38:	mov	r0, r4
   13d3c:	bl	10e5c <__fprintf_chk@plt>
   13d40:	b	13bfc <close@plt+0x2d10>
   13d44:	mov	r2, #5
   13d48:	ldr	r1, [pc, #432]	; 13f00 <close@plt+0x3014>
   13d4c:	mov	r0, #0
   13d50:	bl	10d18 <dcgettext@plt>
   13d54:	ldr	r3, [r5]
   13d58:	ldr	r2, [r5, #24]
   13d5c:	str	r2, [sp, #20]
   13d60:	ldr	r2, [r5, #20]
   13d64:	str	r2, [sp, #16]
   13d68:	ldr	r2, [r5, #16]
   13d6c:	str	r2, [sp, #12]
   13d70:	ldr	r2, [r5, #12]
   13d74:	str	r2, [sp, #8]
   13d78:	ldr	r2, [r5, #8]
   13d7c:	str	r2, [sp, #4]
   13d80:	ldr	r2, [r5, #4]
   13d84:	str	r2, [sp]
   13d88:	mov	r2, r0
   13d8c:	mov	r1, #1
   13d90:	mov	r0, r4
   13d94:	bl	10e5c <__fprintf_chk@plt>
   13d98:	b	13bfc <close@plt+0x2d10>
   13d9c:	mov	r2, #5
   13da0:	ldr	r1, [pc, #348]	; 13f04 <close@plt+0x3018>
   13da4:	mov	r0, #0
   13da8:	bl	10d18 <dcgettext@plt>
   13dac:	ldr	r3, [r5]
   13db0:	ldr	r2, [r5, #28]
   13db4:	str	r2, [sp, #24]
   13db8:	ldr	r2, [r5, #24]
   13dbc:	str	r2, [sp, #20]
   13dc0:	ldr	r2, [r5, #20]
   13dc4:	str	r2, [sp, #16]
   13dc8:	ldr	r2, [r5, #16]
   13dcc:	str	r2, [sp, #12]
   13dd0:	ldr	r2, [r5, #12]
   13dd4:	str	r2, [sp, #8]
   13dd8:	ldr	r2, [r5, #8]
   13ddc:	str	r2, [sp, #4]
   13de0:	ldr	r2, [r5, #4]
   13de4:	str	r2, [sp]
   13de8:	mov	r2, r0
   13dec:	mov	r1, #1
   13df0:	mov	r0, r4
   13df4:	bl	10e5c <__fprintf_chk@plt>
   13df8:	b	13bfc <close@plt+0x2d10>
   13dfc:	mov	r2, #5
   13e00:	ldr	r1, [pc, #256]	; 13f08 <close@plt+0x301c>
   13e04:	mov	r0, #0
   13e08:	bl	10d18 <dcgettext@plt>
   13e0c:	ldr	r3, [r5]
   13e10:	ldr	r2, [r5, #32]
   13e14:	str	r2, [sp, #28]
   13e18:	ldr	r2, [r5, #28]
   13e1c:	str	r2, [sp, #24]
   13e20:	ldr	r2, [r5, #24]
   13e24:	str	r2, [sp, #20]
   13e28:	ldr	r2, [r5, #20]
   13e2c:	str	r2, [sp, #16]
   13e30:	ldr	r2, [r5, #16]
   13e34:	str	r2, [sp, #12]
   13e38:	ldr	r2, [r5, #12]
   13e3c:	str	r2, [sp, #8]
   13e40:	ldr	r2, [r5, #8]
   13e44:	str	r2, [sp, #4]
   13e48:	ldr	r2, [r5, #4]
   13e4c:	str	r2, [sp]
   13e50:	mov	r2, r0
   13e54:	mov	r1, #1
   13e58:	mov	r0, r4
   13e5c:	bl	10e5c <__fprintf_chk@plt>
   13e60:	b	13bfc <close@plt+0x2d10>
   13e64:	mov	r2, #5
   13e68:	ldr	r1, [pc, #156]	; 13f0c <close@plt+0x3020>
   13e6c:	mov	r0, #0
   13e70:	bl	10d18 <dcgettext@plt>
   13e74:	ldr	r3, [r5]
   13e78:	ldr	r2, [r5, #32]
   13e7c:	str	r2, [sp, #28]
   13e80:	ldr	r2, [r5, #28]
   13e84:	str	r2, [sp, #24]
   13e88:	ldr	r2, [r5, #24]
   13e8c:	str	r2, [sp, #20]
   13e90:	ldr	r2, [r5, #20]
   13e94:	str	r2, [sp, #16]
   13e98:	ldr	r2, [r5, #16]
   13e9c:	str	r2, [sp, #12]
   13ea0:	ldr	r2, [r5, #12]
   13ea4:	str	r2, [sp, #8]
   13ea8:	ldr	r2, [r5, #8]
   13eac:	str	r2, [sp, #4]
   13eb0:	ldr	r2, [r5, #4]
   13eb4:	str	r2, [sp]
   13eb8:	mov	r2, r0
   13ebc:	mov	r1, #1
   13ec0:	mov	r0, r4
   13ec4:	bl	10e5c <__fprintf_chk@plt>
   13ec8:	b	13bfc <close@plt+0x2d10>
   13ecc:	andeq	r5, r1, ip, asr #16
   13ed0:	andeq	r5, r1, r0, ror #16
   13ed4:	andeq	r0, r0, r6, ror #15
   13ed8:	andeq	r5, r1, r8, lsr fp
   13edc:	andeq	r5, r1, r4, ror #16
   13ee0:	andeq	r5, r1, r0, lsl r9
   13ee4:	andeq	r5, r1, r8, asr r8
   13ee8:	andeq	r5, r1, r4, lsr r9
   13eec:	andeq	r5, r1, r4, asr #18
   13ef0:	andeq	r5, r1, ip, asr r9
   13ef4:	andeq	r5, r1, r8, ror r9
   13ef8:	muleq	r1, r8, r9
   13efc:			; <UNDEFINED> instruction: 0x000159bc
   13f00:	andeq	r5, r1, r4, ror #19
   13f04:	andeq	r5, r1, r0, lsl sl
   13f08:	andeq	r5, r1, r0, asr #20
   13f0c:	andeq	r5, r1, r4, ror sl
   13f10:	push	{r4, r5, lr}
   13f14:	sub	sp, sp, #12
   13f18:	ldr	r5, [sp, #24]
   13f1c:	ldr	ip, [r5]
   13f20:	cmp	ip, #0
   13f24:	beq	13f54 <close@plt+0x3068>
   13f28:	mov	lr, r5
   13f2c:	mov	ip, #0
   13f30:	add	ip, ip, #1
   13f34:	ldr	r4, [lr, #4]!
   13f38:	cmp	r4, #0
   13f3c:	bne	13f30 <close@plt+0x3044>
   13f40:	str	ip, [sp, #4]
   13f44:	str	r5, [sp]
   13f48:	bl	13af0 <close@plt+0x2c04>
   13f4c:	add	sp, sp, #12
   13f50:	pop	{r4, r5, pc}
   13f54:	mov	ip, #0
   13f58:	b	13f40 <close@plt+0x3054>
   13f5c:	push	{r4, r5, lr}
   13f60:	sub	sp, sp, #52	; 0x34
   13f64:	ldr	r4, [sp, #64]	; 0x40
   13f68:	sub	r4, r4, #4
   13f6c:	add	r5, sp, #4
   13f70:	mov	ip, #0
   13f74:	ldr	lr, [r4, #4]!
   13f78:	str	lr, [r5, #4]!
   13f7c:	cmp	lr, #0
   13f80:	beq	13f90 <close@plt+0x30a4>
   13f84:	add	ip, ip, #1
   13f88:	cmp	ip, #10
   13f8c:	bne	13f74 <close@plt+0x3088>
   13f90:	str	ip, [sp, #4]
   13f94:	add	ip, sp, #8
   13f98:	str	ip, [sp]
   13f9c:	bl	13af0 <close@plt+0x2c04>
   13fa0:	add	sp, sp, #52	; 0x34
   13fa4:	pop	{r4, r5, pc}
   13fa8:	push	{r3}		; (str r3, [sp, #-4]!)
   13fac:	push	{lr}		; (str lr, [sp, #-4]!)
   13fb0:	sub	sp, sp, #16
   13fb4:	add	r3, sp, #24
   13fb8:	str	r3, [sp, #12]
   13fbc:	str	r3, [sp]
   13fc0:	ldr	r3, [sp, #20]
   13fc4:	bl	13f5c <close@plt+0x3070>
   13fc8:	add	sp, sp, #16
   13fcc:	pop	{lr}		; (ldr lr, [sp], #4)
   13fd0:	add	sp, sp, #4
   13fd4:	bx	lr
   13fd8:	push	{r4, lr}
   13fdc:	ldr	r3, [pc, #112]	; 14054 <close@plt+0x3168>
   13fe0:	ldr	r1, [r3]
   13fe4:	mov	r0, #10
   13fe8:	bl	10d0c <fputc_unlocked@plt>
   13fec:	mov	r2, #5
   13ff0:	ldr	r1, [pc, #96]	; 14058 <close@plt+0x316c>
   13ff4:	mov	r0, #0
   13ff8:	bl	10d18 <dcgettext@plt>
   13ffc:	ldr	r2, [pc, #88]	; 1405c <close@plt+0x3170>
   14000:	mov	r1, r0
   14004:	mov	r0, #1
   14008:	bl	10e44 <__printf_chk@plt>
   1400c:	mov	r2, #5
   14010:	ldr	r1, [pc, #72]	; 14060 <close@plt+0x3174>
   14014:	mov	r0, #0
   14018:	bl	10d18 <dcgettext@plt>
   1401c:	ldr	r3, [pc, #64]	; 14064 <close@plt+0x3178>
   14020:	ldr	r2, [pc, #64]	; 14068 <close@plt+0x317c>
   14024:	mov	r1, r0
   14028:	mov	r0, #1
   1402c:	bl	10e44 <__printf_chk@plt>
   14030:	mov	r2, #5
   14034:	ldr	r1, [pc, #48]	; 1406c <close@plt+0x3180>
   14038:	mov	r0, #0
   1403c:	bl	10d18 <dcgettext@plt>
   14040:	ldr	r2, [pc, #40]	; 14070 <close@plt+0x3184>
   14044:	mov	r1, r0
   14048:	mov	r0, #1
   1404c:	bl	10e44 <__printf_chk@plt>
   14050:	pop	{r4, pc}
   14054:	andeq	r6, r2, ip, asr #2
   14058:			; <UNDEFINED> instruction: 0x00015ab0
   1405c:	andeq	r5, r1, r4, asr #21
   14060:	ldrdeq	r5, [r1], -ip
   14064:	strdeq	r5, [r1], -ip
   14068:	andeq	r5, r1, r4, lsr #8
   1406c:	strdeq	r5, [r1], -r0
   14070:	andeq	r5, r1, r8, lsl fp
   14074:	push	{r4, lr}
   14078:	bl	146a8 <close@plt+0x37bc>
   1407c:	cmp	r0, #0
   14080:	popne	{r4, pc}
   14084:	bl	14618 <close@plt+0x372c>
   14088:	push	{r4, lr}
   1408c:	bl	146a8 <close@plt+0x37bc>
   14090:	cmp	r0, #0
   14094:	popne	{r4, pc}
   14098:	bl	14618 <close@plt+0x372c>
   1409c:	push	{r4, lr}
   140a0:	bl	14074 <close@plt+0x3188>
   140a4:	pop	{r4, pc}
   140a8:	push	{r4, r5, r6, lr}
   140ac:	mov	r5, r0
   140b0:	mov	r4, r1
   140b4:	bl	146d8 <close@plt+0x37ec>
   140b8:	cmp	r0, #0
   140bc:	popne	{r4, r5, r6, pc}
   140c0:	adds	r4, r4, #0
   140c4:	movne	r4, #1
   140c8:	cmp	r5, #0
   140cc:	orreq	r4, r4, #1
   140d0:	cmp	r4, #0
   140d4:	popeq	{r4, r5, r6, pc}
   140d8:	bl	14618 <close@plt+0x372c>
   140dc:	push	{r4, lr}
   140e0:	cmp	r1, #0
   140e4:	orreq	r1, r1, #1
   140e8:	bl	146d8 <close@plt+0x37ec>
   140ec:	cmp	r0, #0
   140f0:	popne	{r4, pc}
   140f4:	bl	14618 <close@plt+0x372c>
   140f8:	push	{r4, r5, r6, lr}
   140fc:	mov	r6, r0
   14100:	mov	r5, r1
   14104:	mov	r4, r2
   14108:	bl	14aa0 <close@plt+0x3bb4>
   1410c:	cmp	r0, #0
   14110:	popne	{r4, r5, r6, pc}
   14114:	cmp	r6, #0
   14118:	beq	14128 <close@plt+0x323c>
   1411c:	cmp	r5, #0
   14120:	cmpne	r4, #0
   14124:	popeq	{r4, r5, r6, pc}
   14128:	bl	14618 <close@plt+0x372c>
   1412c:	push	{r4, lr}
   14130:	bl	140f8 <close@plt+0x320c>
   14134:	pop	{r4, pc}
   14138:	push	{r4, lr}
   1413c:	mov	ip, r1
   14140:	mov	r3, r2
   14144:	cmp	r2, #0
   14148:	cmpne	r1, #0
   1414c:	moveq	r3, #1
   14150:	moveq	ip, r3
   14154:	mov	r2, r3
   14158:	mov	r1, ip
   1415c:	bl	14aa0 <close@plt+0x3bb4>
   14160:	cmp	r0, #0
   14164:	popne	{r4, pc}
   14168:	bl	14618 <close@plt+0x372c>
   1416c:	push	{r4, lr}
   14170:	mov	r2, r1
   14174:	mov	r1, r0
   14178:	mov	r0, #0
   1417c:	bl	140f8 <close@plt+0x320c>
   14180:	pop	{r4, pc}
   14184:	push	{r4, lr}
   14188:	mov	r2, r1
   1418c:	mov	r1, r0
   14190:	mov	r0, #0
   14194:	bl	14138 <close@plt+0x324c>
   14198:	pop	{r4, pc}
   1419c:	push	{r4, r5, r6, r7, r8, lr}
   141a0:	mov	r5, r1
   141a4:	mov	r6, r2
   141a8:	ldr	r4, [r1]
   141ac:	subs	r7, r0, #0
   141b0:	beq	141cc <close@plt+0x32e0>
   141b4:	lsr	r2, r4, #1
   141b8:	add	r3, r2, #1
   141bc:	mvn	r3, r3
   141c0:	cmp	r4, r3
   141c4:	bls	141f0 <close@plt+0x3304>
   141c8:	bl	14618 <close@plt+0x372c>
   141cc:	cmp	r4, #0
   141d0:	bne	141f8 <close@plt+0x330c>
   141d4:	mov	r1, r2
   141d8:	mov	r0, #64	; 0x40
   141dc:	bl	14bf4 <close@plt+0x3d08>
   141e0:	cmp	r0, #0
   141e4:	movne	r4, r0
   141e8:	addeq	r4, r0, #1
   141ec:	b	141f8 <close@plt+0x330c>
   141f0:	add	r4, r4, #1
   141f4:	add	r4, r4, r2
   141f8:	mov	r2, r6
   141fc:	mov	r1, r4
   14200:	mov	r0, r7
   14204:	bl	140f8 <close@plt+0x320c>
   14208:	str	r4, [r5]
   1420c:	pop	{r4, r5, r6, r7, r8, pc}
   14210:	push	{r4, lr}
   14214:	mov	r2, #1
   14218:	bl	1419c <close@plt+0x32b0>
   1421c:	pop	{r4, pc}
   14220:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14224:	sub	sp, sp, #12
   14228:	mov	fp, r0
   1422c:	mov	sl, r1
   14230:	mov	r9, r2
   14234:	mov	r7, r3
   14238:	ldr	r6, [sp, #48]	; 0x30
   1423c:	ldr	r5, [r1]
   14240:	asrs	r4, r5, #1
   14244:	bmi	143a0 <close@plt+0x34b4>
   14248:	cmp	r5, #0
   1424c:	blt	143b4 <close@plt+0x34c8>
   14250:	mvn	r3, #-2147483648	; 0x80000000
   14254:	sub	r3, r3, r4
   14258:	cmp	r5, r3
   1425c:	movle	r3, #0
   14260:	movgt	r3, #1
   14264:	cmp	r3, #0
   14268:	addeq	r4, r4, r5
   1426c:	mvnne	r4, #-2147483648	; 0x80000000
   14270:	mvn	r8, r7
   14274:	lsr	r8, r8, #31
   14278:	cmp	r7, r4
   1427c:	movge	r3, #0
   14280:	andlt	r3, r8, #1
   14284:	cmp	r3, #0
   14288:	movne	r4, r7
   1428c:	cmp	r6, #0
   14290:	blt	143c8 <close@plt+0x34dc>
   14294:	cmp	r6, #0
   14298:	beq	14474 <close@plt+0x3588>
   1429c:	cmp	r4, #0
   142a0:	blt	14424 <close@plt+0x3538>
   142a4:	mov	r1, r6
   142a8:	mvn	r0, #-2147483648	; 0x80000000
   142ac:	bl	14e00 <close@plt+0x3f14>
   142b0:	cmp	r0, r4
   142b4:	movge	r0, #0
   142b8:	movlt	r0, #1
   142bc:	cmp	r0, #0
   142c0:	mvnne	r3, #-2147483648	; 0x80000000
   142c4:	strne	r3, [sp, #4]
   142c8:	beq	1445c <close@plt+0x3570>
   142cc:	mov	r1, r6
   142d0:	ldr	r0, [sp, #4]
   142d4:	bl	14e00 <close@plt+0x3f14>
   142d8:	mov	r4, r0
   142dc:	mov	r1, r6
   142e0:	ldr	r0, [sp, #4]
   142e4:	bl	15020 <close@plt+0x4134>
   142e8:	ldr	r3, [sp, #4]
   142ec:	sub	r1, r3, r1
   142f0:	cmp	fp, #0
   142f4:	moveq	r3, #0
   142f8:	streq	r3, [sl]
   142fc:	sub	r3, r4, r5
   14300:	cmp	r3, r9
   14304:	bge	1438c <close@plt+0x34a0>
   14308:	cmp	r9, #0
   1430c:	blt	14480 <close@plt+0x3594>
   14310:	cmp	r5, #0
   14314:	blt	14494 <close@plt+0x35a8>
   14318:	mvn	r3, #-2147483648	; 0x80000000
   1431c:	sub	r3, r3, r9
   14320:	cmp	r5, r3
   14324:	movle	r3, #0
   14328:	movgt	r3, #1
   1432c:	cmp	r3, #0
   14330:	bne	1453c <close@plt+0x3650>
   14334:	add	r5, r5, r9
   14338:	mov	r4, r5
   1433c:	cmp	r7, r5
   14340:	movge	r7, #0
   14344:	andlt	r7, r8, #1
   14348:	cmp	r7, #0
   1434c:	bne	1453c <close@plt+0x3650>
   14350:	cmp	r6, #0
   14354:	blt	144a8 <close@plt+0x35bc>
   14358:	cmp	r6, #0
   1435c:	beq	14388 <close@plt+0x349c>
   14360:	cmp	r5, #0
   14364:	blt	14504 <close@plt+0x3618>
   14368:	mov	r1, r6
   1436c:	mvn	r0, #-2147483648	; 0x80000000
   14370:	bl	14e00 <close@plt+0x3f14>
   14374:	cmp	r5, r0
   14378:	movle	r0, #0
   1437c:	movgt	r0, #1
   14380:	cmp	r0, #0
   14384:	bne	1453c <close@plt+0x3650>
   14388:	mul	r1, r5, r6
   1438c:	mov	r0, fp
   14390:	bl	140a8 <close@plt+0x31bc>
   14394:	str	r4, [sl]
   14398:	add	sp, sp, #12
   1439c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   143a0:	rsb	r3, r4, #-2147483648	; 0x80000000
   143a4:	cmp	r5, r3
   143a8:	movge	r3, #0
   143ac:	movlt	r3, #1
   143b0:	b	14264 <close@plt+0x3378>
   143b4:	rsb	r3, r5, #-2147483648	; 0x80000000
   143b8:	cmp	r4, r3
   143bc:	movge	r3, #0
   143c0:	movlt	r3, #1
   143c4:	b	14264 <close@plt+0x3378>
   143c8:	cmp	r4, #0
   143cc:	blt	143f4 <close@plt+0x3508>
   143d0:	cmn	r6, #1
   143d4:	beq	14410 <close@plt+0x3524>
   143d8:	mov	r1, r6
   143dc:	mov	r0, #-2147483648	; 0x80000000
   143e0:	bl	14e00 <close@plt+0x3f14>
   143e4:	cmp	r0, r4
   143e8:	movge	r0, #0
   143ec:	movlt	r0, #1
   143f0:	b	142bc <close@plt+0x33d0>
   143f4:	mov	r1, r6
   143f8:	mvn	r0, #-2147483648	; 0x80000000
   143fc:	bl	14e00 <close@plt+0x3f14>
   14400:	cmp	r0, r4
   14404:	movle	r0, #0
   14408:	movgt	r0, #1
   1440c:	b	142bc <close@plt+0x33d0>
   14410:	add	r0, r4, #-2147483648	; 0x80000000
   14414:	cmp	r0, #0
   14418:	movle	r0, #0
   1441c:	movgt	r0, #1
   14420:	b	142bc <close@plt+0x33d0>
   14424:	cmn	r4, #1
   14428:	beq	14448 <close@plt+0x355c>
   1442c:	mov	r1, r4
   14430:	mov	r0, #-2147483648	; 0x80000000
   14434:	bl	14e00 <close@plt+0x3f14>
   14438:	cmp	r6, r0
   1443c:	movle	r0, #0
   14440:	movgt	r0, #1
   14444:	b	142bc <close@plt+0x33d0>
   14448:	add	r0, r6, #-2147483648	; 0x80000000
   1444c:	cmp	r0, #0
   14450:	movle	r0, #0
   14454:	movgt	r0, #1
   14458:	b	142bc <close@plt+0x33d0>
   1445c:	mul	r1, r6, r4
   14460:	cmp	r1, #63	; 0x3f
   14464:	movle	r3, #64	; 0x40
   14468:	strle	r3, [sp, #4]
   1446c:	bgt	142f0 <close@plt+0x3404>
   14470:	b	142cc <close@plt+0x33e0>
   14474:	mov	r3, #64	; 0x40
   14478:	str	r3, [sp, #4]
   1447c:	b	142cc <close@plt+0x33e0>
   14480:	rsb	r3, r9, #-2147483648	; 0x80000000
   14484:	cmp	r5, r3
   14488:	movge	r3, #0
   1448c:	movlt	r3, #1
   14490:	b	1432c <close@plt+0x3440>
   14494:	rsb	r3, r5, #-2147483648	; 0x80000000
   14498:	cmp	r9, r3
   1449c:	movge	r3, #0
   144a0:	movlt	r3, #1
   144a4:	b	1432c <close@plt+0x3440>
   144a8:	cmp	r5, #0
   144ac:	blt	144d4 <close@plt+0x35e8>
   144b0:	cmn	r6, #1
   144b4:	beq	144f0 <close@plt+0x3604>
   144b8:	mov	r1, r6
   144bc:	mov	r0, #-2147483648	; 0x80000000
   144c0:	bl	14e00 <close@plt+0x3f14>
   144c4:	cmp	r5, r0
   144c8:	movle	r0, #0
   144cc:	movgt	r0, #1
   144d0:	b	14380 <close@plt+0x3494>
   144d4:	mov	r1, r6
   144d8:	mvn	r0, #-2147483648	; 0x80000000
   144dc:	bl	14e00 <close@plt+0x3f14>
   144e0:	cmp	r5, r0
   144e4:	movge	r0, #0
   144e8:	movlt	r0, #1
   144ec:	b	14380 <close@plt+0x3494>
   144f0:	add	r0, r5, #-2147483648	; 0x80000000
   144f4:	cmp	r0, #0
   144f8:	movle	r0, #0
   144fc:	movgt	r0, #1
   14500:	b	14380 <close@plt+0x3494>
   14504:	cmn	r5, #1
   14508:	beq	14528 <close@plt+0x363c>
   1450c:	mov	r1, r5
   14510:	mov	r0, #-2147483648	; 0x80000000
   14514:	bl	14e00 <close@plt+0x3f14>
   14518:	cmp	r6, r0
   1451c:	movle	r0, #0
   14520:	movgt	r0, #1
   14524:	b	14380 <close@plt+0x3494>
   14528:	add	r0, r6, #-2147483648	; 0x80000000
   1452c:	cmp	r0, #0
   14530:	movle	r0, #0
   14534:	movgt	r0, #1
   14538:	b	14380 <close@plt+0x3494>
   1453c:	bl	14618 <close@plt+0x372c>
   14540:	push	{r4, lr}
   14544:	bl	14658 <close@plt+0x376c>
   14548:	cmp	r0, #0
   1454c:	popne	{r4, pc}
   14550:	bl	14618 <close@plt+0x372c>
   14554:	push	{r4, lr}
   14558:	mov	r1, #1
   1455c:	bl	14540 <close@plt+0x3654>
   14560:	pop	{r4, pc}
   14564:	push	{r4, lr}
   14568:	bl	14658 <close@plt+0x376c>
   1456c:	cmp	r0, #0
   14570:	popne	{r4, pc}
   14574:	bl	14618 <close@plt+0x372c>
   14578:	push	{r4, lr}
   1457c:	mov	r1, #1
   14580:	bl	14564 <close@plt+0x3678>
   14584:	pop	{r4, pc}
   14588:	push	{r4, r5, r6, lr}
   1458c:	mov	r5, r0
   14590:	mov	r4, r1
   14594:	mov	r0, r1
   14598:	bl	14074 <close@plt+0x3188>
   1459c:	mov	r2, r4
   145a0:	mov	r1, r5
   145a4:	bl	10cd0 <memcpy@plt>
   145a8:	pop	{r4, r5, r6, pc}
   145ac:	push	{r4, r5, r6, lr}
   145b0:	mov	r5, r0
   145b4:	mov	r4, r1
   145b8:	mov	r0, r1
   145bc:	bl	14088 <close@plt+0x319c>
   145c0:	mov	r2, r4
   145c4:	mov	r1, r5
   145c8:	bl	10cd0 <memcpy@plt>
   145cc:	pop	{r4, r5, r6, pc}
   145d0:	push	{r4, r5, r6, lr}
   145d4:	mov	r5, r0
   145d8:	mov	r4, r1
   145dc:	add	r0, r1, #1
   145e0:	bl	14088 <close@plt+0x319c>
   145e4:	mov	r2, #0
   145e8:	strb	r2, [r0, r4]
   145ec:	mov	r2, r4
   145f0:	mov	r1, r5
   145f4:	bl	10cd0 <memcpy@plt>
   145f8:	pop	{r4, r5, r6, pc}
   145fc:	push	{r4, lr}
   14600:	mov	r4, r0
   14604:	bl	10e14 <strlen@plt>
   14608:	add	r1, r0, #1
   1460c:	mov	r0, r4
   14610:	bl	14588 <close@plt+0x369c>
   14614:	pop	{r4, pc}
   14618:	push	{r4, lr}
   1461c:	ldr	r3, [pc, #40]	; 1464c <close@plt+0x3760>
   14620:	ldr	r4, [r3]
   14624:	mov	r2, #5
   14628:	ldr	r1, [pc, #32]	; 14650 <close@plt+0x3764>
   1462c:	mov	r0, #0
   14630:	bl	10d18 <dcgettext@plt>
   14634:	mov	r3, r0
   14638:	ldr	r2, [pc, #20]	; 14654 <close@plt+0x3768>
   1463c:	mov	r1, #0
   14640:	mov	r0, r4
   14644:	bl	10d90 <error@plt>
   14648:	bl	10ee0 <abort@plt>
   1464c:	strdeq	r6, [r2], -r0
   14650:	andeq	r5, r1, r8, ror #22
   14654:	andeq	r5, r1, r8, ror #13
   14658:	push	{r4, lr}
   1465c:	mov	r2, r0
   14660:	mov	r3, r1
   14664:	cmp	r1, #0
   14668:	cmpne	r0, #0
   1466c:	moveq	r3, #1
   14670:	moveq	r2, r3
   14674:	umull	r0, r1, r2, r3
   14678:	cmp	r0, #0
   1467c:	cmpge	r1, #0
   14680:	bne	14694 <close@plt+0x37a8>
   14684:	mov	r1, r3
   14688:	mov	r0, r2
   1468c:	bl	10c7c <calloc@plt>
   14690:	pop	{r4, pc}
   14694:	bl	10e20 <__errno_location@plt>
   14698:	mov	r3, #12
   1469c:	str	r3, [r0]
   146a0:	mov	r0, #0
   146a4:	pop	{r4, pc}
   146a8:	push	{r4, lr}
   146ac:	cmp	r0, #0
   146b0:	moveq	r0, #1
   146b4:	cmp	r0, #0
   146b8:	blt	146c4 <close@plt+0x37d8>
   146bc:	bl	10db4 <malloc@plt>
   146c0:	pop	{r4, pc}
   146c4:	bl	10e20 <__errno_location@plt>
   146c8:	mov	r3, #12
   146cc:	str	r3, [r0]
   146d0:	mov	r0, #0
   146d4:	pop	{r4, pc}
   146d8:	push	{r4, lr}
   146dc:	cmp	r0, #0
   146e0:	beq	146fc <close@plt+0x3810>
   146e4:	cmp	r1, #0
   146e8:	beq	14708 <close@plt+0x381c>
   146ec:	cmp	r1, #0
   146f0:	blt	14714 <close@plt+0x3828>
   146f4:	bl	10d30 <realloc@plt>
   146f8:	pop	{r4, pc}
   146fc:	mov	r0, r1
   14700:	bl	146a8 <close@plt+0x37bc>
   14704:	pop	{r4, pc}
   14708:	bl	11da8 <close@plt+0xebc>
   1470c:	mov	r0, #0
   14710:	pop	{r4, pc}
   14714:	bl	10e20 <__errno_location@plt>
   14718:	mov	r3, #12
   1471c:	str	r3, [r0]
   14720:	mov	r0, #0
   14724:	pop	{r4, pc}
   14728:	ldrb	r3, [r0]
   1472c:	cmp	r3, #47	; 0x2f
   14730:	bne	14740 <close@plt+0x3854>
   14734:	ldrb	r3, [r0, #1]!
   14738:	cmp	r3, #47	; 0x2f
   1473c:	beq	14734 <close@plt+0x3848>
   14740:	ldrb	r2, [r0]
   14744:	cmp	r2, #0
   14748:	bxeq	lr
   1474c:	push	{lr}		; (str lr, [sp, #-4]!)
   14750:	mov	r1, r0
   14754:	mov	r3, #0
   14758:	mov	lr, #1
   1475c:	mov	ip, r3
   14760:	b	14770 <close@plt+0x3884>
   14764:	ldrb	r2, [r1, #1]!
   14768:	cmp	r2, #0
   1476c:	beq	1478c <close@plt+0x38a0>
   14770:	cmp	r2, #47	; 0x2f
   14774:	moveq	r3, lr
   14778:	beq	14764 <close@plt+0x3878>
   1477c:	cmp	r3, #0
   14780:	movne	r0, r1
   14784:	movne	r3, ip
   14788:	b	14764 <close@plt+0x3878>
   1478c:	pop	{pc}		; (ldr pc, [sp], #4)
   14790:	push	{r4, lr}
   14794:	mov	r4, r0
   14798:	bl	10e14 <strlen@plt>
   1479c:	cmp	r0, #1
   147a0:	popls	{r4, pc}
   147a4:	sub	r3, r0, #1
   147a8:	add	r2, r4, r3
   147ac:	ldrb	r1, [r4, r3]
   147b0:	cmp	r1, #47	; 0x2f
   147b4:	popne	{r4, pc}
   147b8:	cmp	r3, #1
   147bc:	beq	147e0 <close@plt+0x38f4>
   147c0:	sub	r0, r3, #1
   147c4:	ldrb	r1, [r2, #-1]!
   147c8:	cmp	r1, #47	; 0x2f
   147cc:	beq	147d8 <close@plt+0x38ec>
   147d0:	mov	r0, r3
   147d4:	pop	{r4, pc}
   147d8:	mov	r3, r0
   147dc:	b	147b8 <close@plt+0x38cc>
   147e0:	mov	r0, #1
   147e4:	pop	{r4, pc}
   147e8:	push	{r4, r5, r6, lr}
   147ec:	mov	r5, r0
   147f0:	bl	10d78 <__fpending@plt>
   147f4:	mov	r6, r0
   147f8:	ldr	r4, [r5]
   147fc:	and	r4, r4, #32
   14800:	mov	r0, r5
   14804:	bl	14860 <close@plt+0x3974>
   14808:	cmp	r4, #0
   1480c:	bne	14834 <close@plt+0x3948>
   14810:	cmp	r0, #0
   14814:	popeq	{r4, r5, r6, pc}
   14818:	cmp	r6, #0
   1481c:	bne	14850 <close@plt+0x3964>
   14820:	bl	10e20 <__errno_location@plt>
   14824:	ldr	r0, [r0]
   14828:	subs	r0, r0, #9
   1482c:	mvnne	r0, #0
   14830:	pop	{r4, r5, r6, pc}
   14834:	cmp	r0, #0
   14838:	bne	14858 <close@plt+0x396c>
   1483c:	bl	10e20 <__errno_location@plt>
   14840:	mov	r3, #0
   14844:	str	r3, [r0]
   14848:	mvn	r0, #0
   1484c:	pop	{r4, r5, r6, pc}
   14850:	mvn	r0, #0
   14854:	pop	{r4, r5, r6, pc}
   14858:	mvn	r0, #0
   1485c:	pop	{r4, r5, r6, pc}
   14860:	push	{r4, r5, r6, lr}
   14864:	sub	sp, sp, #8
   14868:	mov	r4, r0
   1486c:	bl	10e50 <fileno@plt>
   14870:	cmp	r0, #0
   14874:	blt	148ec <close@plt+0x3a00>
   14878:	mov	r0, r4
   1487c:	bl	10dcc <__freading@plt>
   14880:	cmp	r0, #0
   14884:	beq	148b8 <close@plt+0x39cc>
   14888:	mov	r0, r4
   1488c:	bl	10e50 <fileno@plt>
   14890:	mov	r3, #1
   14894:	str	r3, [sp]
   14898:	mov	r2, #0
   1489c:	mov	r3, #0
   148a0:	bl	10d60 <lseek64@plt>
   148a4:	mvn	r2, #0
   148a8:	mvn	r3, #0
   148ac:	cmp	r1, r3
   148b0:	cmpeq	r0, r2
   148b4:	beq	148f8 <close@plt+0x3a0c>
   148b8:	mov	r0, r4
   148bc:	bl	14908 <close@plt+0x3a1c>
   148c0:	cmp	r0, #0
   148c4:	beq	148f8 <close@plt+0x3a0c>
   148c8:	bl	10e20 <__errno_location@plt>
   148cc:	mov	r5, r0
   148d0:	ldr	r6, [r0]
   148d4:	mov	r0, r4
   148d8:	bl	10e68 <fclose@plt>
   148dc:	cmp	r6, #0
   148e0:	strne	r6, [r5]
   148e4:	mvnne	r0, #0
   148e8:	b	14900 <close@plt+0x3a14>
   148ec:	mov	r0, r4
   148f0:	bl	10e68 <fclose@plt>
   148f4:	b	14900 <close@plt+0x3a14>
   148f8:	mov	r0, r4
   148fc:	bl	10e68 <fclose@plt>
   14900:	add	sp, sp, #8
   14904:	pop	{r4, r5, r6, pc}
   14908:	push	{r4, lr}
   1490c:	sub	sp, sp, #8
   14910:	subs	r4, r0, #0
   14914:	beq	14928 <close@plt+0x3a3c>
   14918:	mov	r0, r4
   1491c:	bl	10dcc <__freading@plt>
   14920:	cmp	r0, #0
   14924:	bne	14938 <close@plt+0x3a4c>
   14928:	mov	r0, r4
   1492c:	bl	10cac <fflush@plt>
   14930:	add	sp, sp, #8
   14934:	pop	{r4, pc}
   14938:	ldr	r3, [r4]
   1493c:	tst	r3, #256	; 0x100
   14940:	bne	14950 <close@plt+0x3a64>
   14944:	mov	r0, r4
   14948:	bl	10cac <fflush@plt>
   1494c:	b	14930 <close@plt+0x3a44>
   14950:	mov	r3, #1
   14954:	str	r3, [sp]
   14958:	mov	r2, #0
   1495c:	mov	r3, #0
   14960:	mov	r0, r4
   14964:	bl	1496c <close@plt+0x3a80>
   14968:	b	14944 <close@plt+0x3a58>
   1496c:	push	{r4, r5, r6, r7, lr}
   14970:	sub	sp, sp, #12
   14974:	mov	r4, r0
   14978:	mov	r6, r2
   1497c:	mov	r7, r3
   14980:	ldr	r5, [sp, #32]
   14984:	ldr	r2, [r0, #8]
   14988:	ldr	r3, [r0, #4]
   1498c:	cmp	r2, r3
   14990:	beq	149b0 <close@plt+0x3ac4>
   14994:	str	r5, [sp]
   14998:	mov	r2, r6
   1499c:	mov	r3, r7
   149a0:	mov	r0, r4
   149a4:	bl	10e74 <fseeko64@plt>
   149a8:	add	sp, sp, #12
   149ac:	pop	{r4, r5, r6, r7, pc}
   149b0:	ldr	r2, [r0, #20]
   149b4:	ldr	r3, [r0, #16]
   149b8:	cmp	r2, r3
   149bc:	bne	14994 <close@plt+0x3aa8>
   149c0:	ldr	r3, [r0, #36]	; 0x24
   149c4:	cmp	r3, #0
   149c8:	bne	14994 <close@plt+0x3aa8>
   149cc:	bl	10e50 <fileno@plt>
   149d0:	str	r5, [sp]
   149d4:	mov	r2, r6
   149d8:	mov	r3, r7
   149dc:	bl	10d60 <lseek64@plt>
   149e0:	mvn	r2, #0
   149e4:	mvn	r3, #0
   149e8:	cmp	r1, r3
   149ec:	cmpeq	r0, r2
   149f0:	beq	14a0c <close@plt+0x3b20>
   149f4:	ldr	r3, [r4]
   149f8:	bic	r3, r3, #16
   149fc:	str	r3, [r4]
   14a00:	strd	r0, [r4, #80]	; 0x50
   14a04:	mov	r0, #0
   14a08:	b	149a8 <close@plt+0x3abc>
   14a0c:	mvn	r0, #0
   14a10:	b	149a8 <close@plt+0x3abc>
   14a14:	push	{r4, lr}
   14a18:	mov	r0, #14
   14a1c:	bl	10ea4 <nl_langinfo@plt>
   14a20:	cmp	r0, #0
   14a24:	beq	14a3c <close@plt+0x3b50>
   14a28:	ldrb	r2, [r0]
   14a2c:	ldr	r3, [pc, #16]	; 14a44 <close@plt+0x3b58>
   14a30:	cmp	r2, #0
   14a34:	moveq	r0, r3
   14a38:	pop	{r4, pc}
   14a3c:	ldr	r0, [pc]	; 14a44 <close@plt+0x3b58>
   14a40:	pop	{r4, pc}
   14a44:	andeq	r5, r1, ip, ror fp
   14a48:	push	{r4, r5, r6, r7, lr}
   14a4c:	sub	sp, sp, #12
   14a50:	mov	r7, r1
   14a54:	mov	r5, r2
   14a58:	subs	r6, r0, #0
   14a5c:	addeq	r6, sp, #4
   14a60:	mov	r0, r6
   14a64:	bl	10d84 <mbrtowc@plt>
   14a68:	mov	r4, r0
   14a6c:	cmp	r5, #0
   14a70:	cmnne	r0, #3
   14a74:	bhi	14a84 <close@plt+0x3b98>
   14a78:	mov	r0, r4
   14a7c:	add	sp, sp, #12
   14a80:	pop	{r4, r5, r6, r7, pc}
   14a84:	mov	r0, #0
   14a88:	bl	14aec <close@plt+0x3c00>
   14a8c:	cmp	r0, #0
   14a90:	ldrbeq	r3, [r7]
   14a94:	streq	r3, [r6]
   14a98:	moveq	r4, #1
   14a9c:	b	14a78 <close@plt+0x3b8c>
   14aa0:	push	{r4, r5, r6, lr}
   14aa4:	mov	r6, r0
   14aa8:	mov	r5, r1
   14aac:	subs	r4, r2, #0
   14ab0:	beq	14adc <close@plt+0x3bf0>
   14ab4:	mov	r1, r4
   14ab8:	mvn	r0, #0
   14abc:	bl	14bf4 <close@plt+0x3d08>
   14ac0:	cmp	r0, r5
   14ac4:	bcs	14adc <close@plt+0x3bf0>
   14ac8:	bl	10e20 <__errno_location@plt>
   14acc:	mov	r3, #12
   14ad0:	str	r3, [r0]
   14ad4:	mov	r0, #0
   14ad8:	pop	{r4, r5, r6, pc}
   14adc:	mul	r1, r5, r4
   14ae0:	mov	r0, r6
   14ae4:	bl	146d8 <close@plt+0x37ec>
   14ae8:	pop	{r4, r5, r6, pc}
   14aec:	push	{lr}		; (str lr, [sp, #-4]!)
   14af0:	sub	sp, sp, #268	; 0x10c
   14af4:	ldr	r2, [pc, #68]	; 14b40 <close@plt+0x3c54>
   14af8:	add	r1, sp, #4
   14afc:	bl	14b4c <close@plt+0x3c60>
   14b00:	cmp	r0, #0
   14b04:	movne	r0, #0
   14b08:	bne	14b38 <close@plt+0x3c4c>
   14b0c:	ldr	r1, [pc, #48]	; 14b44 <close@plt+0x3c58>
   14b10:	add	r0, sp, #4
   14b14:	bl	10ca0 <strcmp@plt>
   14b18:	cmp	r0, #0
   14b1c:	moveq	r0, #0
   14b20:	beq	14b38 <close@plt+0x3c4c>
   14b24:	ldr	r1, [pc, #28]	; 14b48 <close@plt+0x3c5c>
   14b28:	add	r0, sp, #4
   14b2c:	bl	10ca0 <strcmp@plt>
   14b30:	adds	r0, r0, #0
   14b34:	movne	r0, #1
   14b38:	add	sp, sp, #268	; 0x10c
   14b3c:	pop	{pc}		; (ldr pc, [sp], #4)
   14b40:	andeq	r0, r0, r1, lsl #2
   14b44:	andeq	r5, r1, r4, lsl #23
   14b48:	andeq	r5, r1, r8, lsl #23
   14b4c:	push	{r4, r5, r6, lr}
   14b50:	mov	r6, r1
   14b54:	mov	r4, r2
   14b58:	mov	r1, #0
   14b5c:	bl	10e8c <setlocale@plt>
   14b60:	subs	r5, r0, #0
   14b64:	beq	14b88 <close@plt+0x3c9c>
   14b68:	mov	r0, r5
   14b6c:	bl	10e14 <strlen@plt>
   14b70:	cmp	r4, r0
   14b74:	bhi	14ba0 <close@plt+0x3cb4>
   14b78:	cmp	r4, #0
   14b7c:	bne	14bb8 <close@plt+0x3ccc>
   14b80:	mov	r0, #34	; 0x22
   14b84:	pop	{r4, r5, r6, pc}
   14b88:	cmp	r4, #0
   14b8c:	beq	14bdc <close@plt+0x3cf0>
   14b90:	mov	r3, #0
   14b94:	strb	r3, [r6]
   14b98:	mov	r0, #22
   14b9c:	pop	{r4, r5, r6, pc}
   14ba0:	add	r2, r0, #1
   14ba4:	mov	r1, r5
   14ba8:	mov	r0, r6
   14bac:	bl	10cd0 <memcpy@plt>
   14bb0:	mov	r0, #0
   14bb4:	pop	{r4, r5, r6, pc}
   14bb8:	sub	r4, r4, #1
   14bbc:	mov	r2, r4
   14bc0:	mov	r1, r5
   14bc4:	mov	r0, r6
   14bc8:	bl	10cd0 <memcpy@plt>
   14bcc:	mov	r3, #0
   14bd0:	strb	r3, [r6, r4]
   14bd4:	mov	r0, #34	; 0x22
   14bd8:	pop	{r4, r5, r6, pc}
   14bdc:	mov	r0, #22
   14be0:	pop	{r4, r5, r6, pc}
   14be4:	push	{r4, lr}
   14be8:	mov	r1, #0
   14bec:	bl	10e8c <setlocale@plt>
   14bf0:	pop	{r4, pc}
   14bf4:	subs	r2, r1, #1
   14bf8:	bxeq	lr
   14bfc:	bcc	14dd4 <close@plt+0x3ee8>
   14c00:	cmp	r0, r1
   14c04:	bls	14db8 <close@plt+0x3ecc>
   14c08:	tst	r1, r2
   14c0c:	beq	14dc4 <close@plt+0x3ed8>
   14c10:	clz	r3, r0
   14c14:	clz	r2, r1
   14c18:	sub	r3, r2, r3
   14c1c:	rsbs	r3, r3, #31
   14c20:	addne	r3, r3, r3, lsl #1
   14c24:	mov	r2, #0
   14c28:	addne	pc, pc, r3, lsl #2
   14c2c:	nop			; (mov r0, r0)
   14c30:	cmp	r0, r1, lsl #31
   14c34:	adc	r2, r2, r2
   14c38:	subcs	r0, r0, r1, lsl #31
   14c3c:	cmp	r0, r1, lsl #30
   14c40:	adc	r2, r2, r2
   14c44:	subcs	r0, r0, r1, lsl #30
   14c48:	cmp	r0, r1, lsl #29
   14c4c:	adc	r2, r2, r2
   14c50:	subcs	r0, r0, r1, lsl #29
   14c54:	cmp	r0, r1, lsl #28
   14c58:	adc	r2, r2, r2
   14c5c:	subcs	r0, r0, r1, lsl #28
   14c60:	cmp	r0, r1, lsl #27
   14c64:	adc	r2, r2, r2
   14c68:	subcs	r0, r0, r1, lsl #27
   14c6c:	cmp	r0, r1, lsl #26
   14c70:	adc	r2, r2, r2
   14c74:	subcs	r0, r0, r1, lsl #26
   14c78:	cmp	r0, r1, lsl #25
   14c7c:	adc	r2, r2, r2
   14c80:	subcs	r0, r0, r1, lsl #25
   14c84:	cmp	r0, r1, lsl #24
   14c88:	adc	r2, r2, r2
   14c8c:	subcs	r0, r0, r1, lsl #24
   14c90:	cmp	r0, r1, lsl #23
   14c94:	adc	r2, r2, r2
   14c98:	subcs	r0, r0, r1, lsl #23
   14c9c:	cmp	r0, r1, lsl #22
   14ca0:	adc	r2, r2, r2
   14ca4:	subcs	r0, r0, r1, lsl #22
   14ca8:	cmp	r0, r1, lsl #21
   14cac:	adc	r2, r2, r2
   14cb0:	subcs	r0, r0, r1, lsl #21
   14cb4:	cmp	r0, r1, lsl #20
   14cb8:	adc	r2, r2, r2
   14cbc:	subcs	r0, r0, r1, lsl #20
   14cc0:	cmp	r0, r1, lsl #19
   14cc4:	adc	r2, r2, r2
   14cc8:	subcs	r0, r0, r1, lsl #19
   14ccc:	cmp	r0, r1, lsl #18
   14cd0:	adc	r2, r2, r2
   14cd4:	subcs	r0, r0, r1, lsl #18
   14cd8:	cmp	r0, r1, lsl #17
   14cdc:	adc	r2, r2, r2
   14ce0:	subcs	r0, r0, r1, lsl #17
   14ce4:	cmp	r0, r1, lsl #16
   14ce8:	adc	r2, r2, r2
   14cec:	subcs	r0, r0, r1, lsl #16
   14cf0:	cmp	r0, r1, lsl #15
   14cf4:	adc	r2, r2, r2
   14cf8:	subcs	r0, r0, r1, lsl #15
   14cfc:	cmp	r0, r1, lsl #14
   14d00:	adc	r2, r2, r2
   14d04:	subcs	r0, r0, r1, lsl #14
   14d08:	cmp	r0, r1, lsl #13
   14d0c:	adc	r2, r2, r2
   14d10:	subcs	r0, r0, r1, lsl #13
   14d14:	cmp	r0, r1, lsl #12
   14d18:	adc	r2, r2, r2
   14d1c:	subcs	r0, r0, r1, lsl #12
   14d20:	cmp	r0, r1, lsl #11
   14d24:	adc	r2, r2, r2
   14d28:	subcs	r0, r0, r1, lsl #11
   14d2c:	cmp	r0, r1, lsl #10
   14d30:	adc	r2, r2, r2
   14d34:	subcs	r0, r0, r1, lsl #10
   14d38:	cmp	r0, r1, lsl #9
   14d3c:	adc	r2, r2, r2
   14d40:	subcs	r0, r0, r1, lsl #9
   14d44:	cmp	r0, r1, lsl #8
   14d48:	adc	r2, r2, r2
   14d4c:	subcs	r0, r0, r1, lsl #8
   14d50:	cmp	r0, r1, lsl #7
   14d54:	adc	r2, r2, r2
   14d58:	subcs	r0, r0, r1, lsl #7
   14d5c:	cmp	r0, r1, lsl #6
   14d60:	adc	r2, r2, r2
   14d64:	subcs	r0, r0, r1, lsl #6
   14d68:	cmp	r0, r1, lsl #5
   14d6c:	adc	r2, r2, r2
   14d70:	subcs	r0, r0, r1, lsl #5
   14d74:	cmp	r0, r1, lsl #4
   14d78:	adc	r2, r2, r2
   14d7c:	subcs	r0, r0, r1, lsl #4
   14d80:	cmp	r0, r1, lsl #3
   14d84:	adc	r2, r2, r2
   14d88:	subcs	r0, r0, r1, lsl #3
   14d8c:	cmp	r0, r1, lsl #2
   14d90:	adc	r2, r2, r2
   14d94:	subcs	r0, r0, r1, lsl #2
   14d98:	cmp	r0, r1, lsl #1
   14d9c:	adc	r2, r2, r2
   14da0:	subcs	r0, r0, r1, lsl #1
   14da4:	cmp	r0, r1
   14da8:	adc	r2, r2, r2
   14dac:	subcs	r0, r0, r1
   14db0:	mov	r0, r2
   14db4:	bx	lr
   14db8:	moveq	r0, #1
   14dbc:	movne	r0, #0
   14dc0:	bx	lr
   14dc4:	clz	r2, r1
   14dc8:	rsb	r2, r2, #31
   14dcc:	lsr	r0, r0, r2
   14dd0:	bx	lr
   14dd4:	cmp	r0, #0
   14dd8:	mvnne	r0, #0
   14ddc:	b	15040 <close@plt+0x4154>
   14de0:	cmp	r1, #0
   14de4:	beq	14dd4 <close@plt+0x3ee8>
   14de8:	push	{r0, r1, lr}
   14dec:	bl	14bf4 <close@plt+0x3d08>
   14df0:	pop	{r1, r2, lr}
   14df4:	mul	r3, r2, r0
   14df8:	sub	r1, r1, r3
   14dfc:	bx	lr
   14e00:	cmp	r1, #0
   14e04:	beq	15010 <close@plt+0x4124>
   14e08:	eor	ip, r0, r1
   14e0c:	rsbmi	r1, r1, #0
   14e10:	subs	r2, r1, #1
   14e14:	beq	14fdc <close@plt+0x40f0>
   14e18:	movs	r3, r0
   14e1c:	rsbmi	r3, r0, #0
   14e20:	cmp	r3, r1
   14e24:	bls	14fe8 <close@plt+0x40fc>
   14e28:	tst	r1, r2
   14e2c:	beq	14ff8 <close@plt+0x410c>
   14e30:	clz	r2, r3
   14e34:	clz	r0, r1
   14e38:	sub	r2, r0, r2
   14e3c:	rsbs	r2, r2, #31
   14e40:	addne	r2, r2, r2, lsl #1
   14e44:	mov	r0, #0
   14e48:	addne	pc, pc, r2, lsl #2
   14e4c:	nop			; (mov r0, r0)
   14e50:	cmp	r3, r1, lsl #31
   14e54:	adc	r0, r0, r0
   14e58:	subcs	r3, r3, r1, lsl #31
   14e5c:	cmp	r3, r1, lsl #30
   14e60:	adc	r0, r0, r0
   14e64:	subcs	r3, r3, r1, lsl #30
   14e68:	cmp	r3, r1, lsl #29
   14e6c:	adc	r0, r0, r0
   14e70:	subcs	r3, r3, r1, lsl #29
   14e74:	cmp	r3, r1, lsl #28
   14e78:	adc	r0, r0, r0
   14e7c:	subcs	r3, r3, r1, lsl #28
   14e80:	cmp	r3, r1, lsl #27
   14e84:	adc	r0, r0, r0
   14e88:	subcs	r3, r3, r1, lsl #27
   14e8c:	cmp	r3, r1, lsl #26
   14e90:	adc	r0, r0, r0
   14e94:	subcs	r3, r3, r1, lsl #26
   14e98:	cmp	r3, r1, lsl #25
   14e9c:	adc	r0, r0, r0
   14ea0:	subcs	r3, r3, r1, lsl #25
   14ea4:	cmp	r3, r1, lsl #24
   14ea8:	adc	r0, r0, r0
   14eac:	subcs	r3, r3, r1, lsl #24
   14eb0:	cmp	r3, r1, lsl #23
   14eb4:	adc	r0, r0, r0
   14eb8:	subcs	r3, r3, r1, lsl #23
   14ebc:	cmp	r3, r1, lsl #22
   14ec0:	adc	r0, r0, r0
   14ec4:	subcs	r3, r3, r1, lsl #22
   14ec8:	cmp	r3, r1, lsl #21
   14ecc:	adc	r0, r0, r0
   14ed0:	subcs	r3, r3, r1, lsl #21
   14ed4:	cmp	r3, r1, lsl #20
   14ed8:	adc	r0, r0, r0
   14edc:	subcs	r3, r3, r1, lsl #20
   14ee0:	cmp	r3, r1, lsl #19
   14ee4:	adc	r0, r0, r0
   14ee8:	subcs	r3, r3, r1, lsl #19
   14eec:	cmp	r3, r1, lsl #18
   14ef0:	adc	r0, r0, r0
   14ef4:	subcs	r3, r3, r1, lsl #18
   14ef8:	cmp	r3, r1, lsl #17
   14efc:	adc	r0, r0, r0
   14f00:	subcs	r3, r3, r1, lsl #17
   14f04:	cmp	r3, r1, lsl #16
   14f08:	adc	r0, r0, r0
   14f0c:	subcs	r3, r3, r1, lsl #16
   14f10:	cmp	r3, r1, lsl #15
   14f14:	adc	r0, r0, r0
   14f18:	subcs	r3, r3, r1, lsl #15
   14f1c:	cmp	r3, r1, lsl #14
   14f20:	adc	r0, r0, r0
   14f24:	subcs	r3, r3, r1, lsl #14
   14f28:	cmp	r3, r1, lsl #13
   14f2c:	adc	r0, r0, r0
   14f30:	subcs	r3, r3, r1, lsl #13
   14f34:	cmp	r3, r1, lsl #12
   14f38:	adc	r0, r0, r0
   14f3c:	subcs	r3, r3, r1, lsl #12
   14f40:	cmp	r3, r1, lsl #11
   14f44:	adc	r0, r0, r0
   14f48:	subcs	r3, r3, r1, lsl #11
   14f4c:	cmp	r3, r1, lsl #10
   14f50:	adc	r0, r0, r0
   14f54:	subcs	r3, r3, r1, lsl #10
   14f58:	cmp	r3, r1, lsl #9
   14f5c:	adc	r0, r0, r0
   14f60:	subcs	r3, r3, r1, lsl #9
   14f64:	cmp	r3, r1, lsl #8
   14f68:	adc	r0, r0, r0
   14f6c:	subcs	r3, r3, r1, lsl #8
   14f70:	cmp	r3, r1, lsl #7
   14f74:	adc	r0, r0, r0
   14f78:	subcs	r3, r3, r1, lsl #7
   14f7c:	cmp	r3, r1, lsl #6
   14f80:	adc	r0, r0, r0
   14f84:	subcs	r3, r3, r1, lsl #6
   14f88:	cmp	r3, r1, lsl #5
   14f8c:	adc	r0, r0, r0
   14f90:	subcs	r3, r3, r1, lsl #5
   14f94:	cmp	r3, r1, lsl #4
   14f98:	adc	r0, r0, r0
   14f9c:	subcs	r3, r3, r1, lsl #4
   14fa0:	cmp	r3, r1, lsl #3
   14fa4:	adc	r0, r0, r0
   14fa8:	subcs	r3, r3, r1, lsl #3
   14fac:	cmp	r3, r1, lsl #2
   14fb0:	adc	r0, r0, r0
   14fb4:	subcs	r3, r3, r1, lsl #2
   14fb8:	cmp	r3, r1, lsl #1
   14fbc:	adc	r0, r0, r0
   14fc0:	subcs	r3, r3, r1, lsl #1
   14fc4:	cmp	r3, r1
   14fc8:	adc	r0, r0, r0
   14fcc:	subcs	r3, r3, r1
   14fd0:	cmp	ip, #0
   14fd4:	rsbmi	r0, r0, #0
   14fd8:	bx	lr
   14fdc:	teq	ip, r0
   14fe0:	rsbmi	r0, r0, #0
   14fe4:	bx	lr
   14fe8:	movcc	r0, #0
   14fec:	asreq	r0, ip, #31
   14ff0:	orreq	r0, r0, #1
   14ff4:	bx	lr
   14ff8:	clz	r2, r1
   14ffc:	rsb	r2, r2, #31
   15000:	cmp	ip, #0
   15004:	lsr	r0, r3, r2
   15008:	rsbmi	r0, r0, #0
   1500c:	bx	lr
   15010:	cmp	r0, #0
   15014:	mvngt	r0, #-2147483648	; 0x80000000
   15018:	movlt	r0, #-2147483648	; 0x80000000
   1501c:	b	15040 <close@plt+0x4154>
   15020:	cmp	r1, #0
   15024:	beq	15010 <close@plt+0x4124>
   15028:	push	{r0, r1, lr}
   1502c:	bl	14e08 <close@plt+0x3f1c>
   15030:	pop	{r1, r2, lr}
   15034:	mul	r3, r2, r0
   15038:	sub	r1, r1, r3
   1503c:	bx	lr
   15040:	push	{r1, lr}
   15044:	mov	r0, #8
   15048:	bl	10c94 <raise@plt>
   1504c:	pop	{r1, pc}
   15050:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15054:	mov	r7, r0
   15058:	ldr	r6, [pc, #72]	; 150a8 <close@plt+0x41bc>
   1505c:	ldr	r5, [pc, #72]	; 150ac <close@plt+0x41c0>
   15060:	add	r6, pc, r6
   15064:	add	r5, pc, r5
   15068:	sub	r6, r6, r5
   1506c:	mov	r8, r1
   15070:	mov	r9, r2
   15074:	bl	10c5c <calloc@plt-0x20>
   15078:	asrs	r6, r6, #2
   1507c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15080:	mov	r4, #0
   15084:	add	r4, r4, #1
   15088:	ldr	r3, [r5], #4
   1508c:	mov	r2, r9
   15090:	mov	r1, r8
   15094:	mov	r0, r7
   15098:	blx	r3
   1509c:	cmp	r6, r4
   150a0:	bne	15084 <close@plt+0x4198>
   150a4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   150a8:	andeq	r0, r1, r8, lsr #29
   150ac:	andeq	r0, r1, r0, lsr #29
   150b0:	bx	lr
   150b4:	ldr	r3, [pc, #12]	; 150c8 <close@plt+0x41dc>
   150b8:	mov	r1, #0
   150bc:	add	r3, pc, r3
   150c0:	ldr	r2, [r3]
   150c4:	b	10e2c <__cxa_atexit@plt>
   150c8:	andeq	r1, r1, r4, lsr #32

Disassembly of section .fini:

000150cc <.fini>:
   150cc:	push	{r3, lr}
   150d0:	pop	{r3, pc}
