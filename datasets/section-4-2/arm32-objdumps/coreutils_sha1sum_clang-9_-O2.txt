
../repos/coreutils/src/sha1sum:     file format elf32-littlearm


Disassembly of section .init:

00010e70 <.init>:
   10e70:	push	{r3, lr}
   10e74:	bl	1116c <dcngettext@plt+0x54>
   10e78:	pop	{r3, pc}

Disassembly of section .plt:

00010e7c <fdopen@plt-0x14>:
   10e7c:	push	{lr}		; (str lr, [sp, #-4]!)
   10e80:	ldr	lr, [pc, #4]	; 10e8c <fdopen@plt-0x4>
   10e84:	add	lr, pc, lr
   10e88:	ldr	pc, [lr, #8]!
   10e8c:	andeq	r8, r1, r4, ror r1

00010e90 <fdopen@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #24, 20	; 0x18000
   10e98:	ldr	pc, [ip, #372]!	; 0x174

00010e9c <calloc@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #24, 20	; 0x18000
   10ea4:	ldr	pc, [ip, #364]!	; 0x16c

00010ea8 <fputs_unlocked@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #24, 20	; 0x18000
   10eb0:	ldr	pc, [ip, #356]!	; 0x164

00010eb4 <raise@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #24, 20	; 0x18000
   10ebc:	ldr	pc, [ip, #348]!	; 0x15c

00010ec0 <__getdelim@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #24, 20	; 0x18000
   10ec8:	ldr	pc, [ip, #340]!	; 0x154

00010ecc <strcmp@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #24, 20	; 0x18000
   10ed4:	ldr	pc, [ip, #332]!	; 0x14c

00010ed8 <posix_fadvise64@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #24, 20	; 0x18000
   10ee0:	ldr	pc, [ip, #324]!	; 0x144

00010ee4 <fflush@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #24, 20	; 0x18000
   10eec:	ldr	pc, [ip, #316]!	; 0x13c

00010ef0 <free@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #24, 20	; 0x18000
   10ef8:	ldr	pc, [ip, #308]!	; 0x134

00010efc <_exit@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #24, 20	; 0x18000
   10f04:	ldr	pc, [ip, #300]!	; 0x12c

00010f08 <memcpy@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #24, 20	; 0x18000
   10f10:	ldr	pc, [ip, #292]!	; 0x124

00010f14 <mbsinit@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #24, 20	; 0x18000
   10f1c:	ldr	pc, [ip, #284]!	; 0x11c

00010f20 <dcgettext@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #24, 20	; 0x18000
   10f28:	ldr	pc, [ip, #276]!	; 0x114

00010f2c <realloc@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #24, 20	; 0x18000
   10f34:	ldr	pc, [ip, #268]!	; 0x10c

00010f38 <textdomain@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #24, 20	; 0x18000
   10f40:	ldr	pc, [ip, #260]!	; 0x104

00010f44 <iswprint@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #24, 20	; 0x18000
   10f4c:	ldr	pc, [ip, #252]!	; 0xfc

00010f50 <fwrite@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #24, 20	; 0x18000
   10f58:	ldr	pc, [ip, #244]!	; 0xf4

00010f5c <lseek64@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #24, 20	; 0x18000
   10f64:	ldr	pc, [ip, #236]!	; 0xec

00010f68 <__ctype_get_mb_cur_max@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #24, 20	; 0x18000
   10f70:	ldr	pc, [ip, #228]!	; 0xe4

00010f74 <__fpending@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #24, 20	; 0x18000
   10f7c:	ldr	pc, [ip, #220]!	; 0xdc

00010f80 <mbrtowc@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #24, 20	; 0x18000
   10f88:	ldr	pc, [ip, #212]!	; 0xd4

00010f8c <error@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #24, 20	; 0x18000
   10f94:	ldr	pc, [ip, #204]!	; 0xcc

00010f98 <malloc@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #24, 20	; 0x18000
   10fa0:	ldr	pc, [ip, #196]!	; 0xc4

00010fa4 <__libc_start_main@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #24, 20	; 0x18000
   10fac:	ldr	pc, [ip, #188]!	; 0xbc

00010fb0 <__freading@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #24, 20	; 0x18000
   10fb8:	ldr	pc, [ip, #180]!	; 0xb4

00010fbc <__ctype_tolower_loc@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #24, 20	; 0x18000
   10fc4:	ldr	pc, [ip, #172]!	; 0xac

00010fc8 <__gmon_start__@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #24, 20	; 0x18000
   10fd0:	ldr	pc, [ip, #164]!	; 0xa4

00010fd4 <getopt_long@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #24, 20	; 0x18000
   10fdc:	ldr	pc, [ip, #156]!	; 0x9c

00010fe0 <__ctype_b_loc@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #24, 20	; 0x18000
   10fe8:	ldr	pc, [ip, #148]!	; 0x94

00010fec <exit@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #24, 20	; 0x18000
   10ff4:	ldr	pc, [ip, #140]!	; 0x8c

00010ff8 <bcmp@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #24, 20	; 0x18000
   11000:	ldr	pc, [ip, #132]!	; 0x84

00011004 <strlen@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #24, 20	; 0x18000
   1100c:	ldr	pc, [ip, #124]!	; 0x7c

00011010 <strchr@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #24, 20	; 0x18000
   11018:	ldr	pc, [ip, #116]!	; 0x74

0001101c <__errno_location@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #24, 20	; 0x18000
   11024:	ldr	pc, [ip, #108]!	; 0x6c

00011028 <__cxa_atexit@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #24, 20	; 0x18000
   11030:	ldr	pc, [ip, #100]!	; 0x64

00011034 <setvbuf@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #24, 20	; 0x18000
   1103c:	ldr	pc, [ip, #92]!	; 0x5c

00011040 <memset@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #24, 20	; 0x18000
   11048:	ldr	pc, [ip, #84]!	; 0x54

0001104c <__printf_chk@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #24, 20	; 0x18000
   11054:	ldr	pc, [ip, #76]!	; 0x4c

00011058 <fileno@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #24, 20	; 0x18000
   11060:	ldr	pc, [ip, #68]!	; 0x44

00011064 <__fprintf_chk@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #24, 20	; 0x18000
   1106c:	ldr	pc, [ip, #60]!	; 0x3c

00011070 <fclose@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #24, 20	; 0x18000
   11078:	ldr	pc, [ip, #52]!	; 0x34

0001107c <fseeko64@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #24, 20	; 0x18000
   11084:	ldr	pc, [ip, #44]!	; 0x2c

00011088 <fcntl64@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #24, 20	; 0x18000
   11090:	ldr	pc, [ip, #36]!	; 0x24

00011094 <__overflow@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #24, 20	; 0x18000
   1109c:	ldr	pc, [ip, #28]!

000110a0 <setlocale@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #24, 20	; 0x18000
   110a8:	ldr	pc, [ip, #20]!

000110ac <strrchr@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #24, 20	; 0x18000
   110b4:	ldr	pc, [ip, #12]!

000110b8 <nl_langinfo@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #24, 20	; 0x18000
   110c0:	ldr	pc, [ip, #4]!

000110c4 <clearerr_unlocked@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #94208	; 0x17000
   110cc:	ldr	pc, [ip, #4092]!	; 0xffc

000110d0 <fopen64@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #94208	; 0x17000
   110d8:	ldr	pc, [ip, #4084]!	; 0xff4

000110dc <bindtextdomain@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #94208	; 0x17000
   110e4:	ldr	pc, [ip, #4076]!	; 0xfec

000110e8 <fread_unlocked@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #94208	; 0x17000
   110f0:	ldr	pc, [ip, #4068]!	; 0xfe4

000110f4 <strncmp@plt>:
   110f4:	add	ip, pc, #0, 12
   110f8:	add	ip, ip, #94208	; 0x17000
   110fc:	ldr	pc, [ip, #4060]!	; 0xfdc

00011100 <abort@plt>:
   11100:	add	ip, pc, #0, 12
   11104:	add	ip, ip, #94208	; 0x17000
   11108:	ldr	pc, [ip, #4052]!	; 0xfd4

0001110c <close@plt>:
   1110c:	add	ip, pc, #0, 12
   11110:	add	ip, ip, #94208	; 0x17000
   11114:	ldr	pc, [ip, #4044]!	; 0xfcc

00011118 <dcngettext@plt>:
   11118:	add	ip, pc, #0, 12
   1111c:	add	ip, ip, #94208	; 0x17000
   11120:	ldr	pc, [ip, #4036]!	; 0xfc4

Disassembly of section .text:

00011130 <.text>:
   11130:	mov	fp, #0
   11134:	mov	lr, #0
   11138:	pop	{r1}		; (ldr r1, [sp], #4)
   1113c:	mov	r2, sp
   11140:	push	{r2}		; (str r2, [sp, #-4]!)
   11144:	push	{r0}		; (str r0, [sp, #-4]!)
   11148:	ldr	ip, [pc, #16]	; 11160 <dcngettext@plt+0x48>
   1114c:	push	{ip}		; (str ip, [sp, #-4]!)
   11150:	ldr	r0, [pc, #12]	; 11164 <dcngettext@plt+0x4c>
   11154:	ldr	r3, [pc, #12]	; 11168 <dcngettext@plt+0x50>
   11158:	bl	10fa4 <__libc_start_main@plt>
   1115c:	bl	11100 <abort@plt>
   11160:	strdeq	r7, [r1], -ip
   11164:	andeq	r1, r1, ip, ror r5
   11168:	muleq	r1, ip, sl
   1116c:	ldr	r3, [pc, #20]	; 11188 <dcngettext@plt+0x70>
   11170:	ldr	r2, [pc, #20]	; 1118c <dcngettext@plt+0x74>
   11174:	add	r3, pc, r3
   11178:	ldr	r2, [r3, r2]
   1117c:	cmp	r2, #0
   11180:	bxeq	lr
   11184:	b	10fc8 <__gmon_start__@plt>
   11188:	andeq	r7, r1, r4, lsl #29
   1118c:	andeq	r0, r0, r8, ror #1
   11190:	ldr	r0, [pc, #24]	; 111b0 <dcngettext@plt+0x98>
   11194:	ldr	r3, [pc, #24]	; 111b4 <dcngettext@plt+0x9c>
   11198:	cmp	r3, r0
   1119c:	bxeq	lr
   111a0:	ldr	r3, [pc, #16]	; 111b8 <dcngettext@plt+0xa0>
   111a4:	cmp	r3, #0
   111a8:	bxeq	lr
   111ac:	bx	r3
   111b0:	andeq	r9, r2, r8, asr #2
   111b4:	andeq	r9, r2, r8, asr #2
   111b8:	andeq	r0, r0, r0
   111bc:	ldr	r0, [pc, #36]	; 111e8 <dcngettext@plt+0xd0>
   111c0:	ldr	r1, [pc, #36]	; 111ec <dcngettext@plt+0xd4>
   111c4:	sub	r1, r1, r0
   111c8:	asr	r1, r1, #2
   111cc:	add	r1, r1, r1, lsr #31
   111d0:	asrs	r1, r1, #1
   111d4:	bxeq	lr
   111d8:	ldr	r3, [pc, #16]	; 111f0 <dcngettext@plt+0xd8>
   111dc:	cmp	r3, #0
   111e0:	bxeq	lr
   111e4:	bx	r3
   111e8:	andeq	r9, r2, r8, asr #2
   111ec:	andeq	r9, r2, r8, asr #2
   111f0:	andeq	r0, r0, r0
   111f4:	push	{r4, lr}
   111f8:	ldr	r4, [pc, #24]	; 11218 <dcngettext@plt+0x100>
   111fc:	ldrb	r3, [r4]
   11200:	cmp	r3, #0
   11204:	popne	{r4, pc}
   11208:	bl	11190 <dcngettext@plt+0x78>
   1120c:	mov	r3, #1
   11210:	strb	r3, [r4]
   11214:	pop	{r4, pc}
   11218:	andeq	r9, r2, r8, ror #2
   1121c:	b	111bc <dcngettext@plt+0xa4>
   11220:	push	{fp, lr}
   11224:	mov	fp, sp
   11228:	sub	sp, sp, #56	; 0x38
   1122c:	mov	r4, r0
   11230:	cmp	r0, #0
   11234:	bne	11538 <dcngettext@plt+0x420>
   11238:	movw	r1, #31563	; 0x7b4b
   1123c:	mov	r0, #0
   11240:	mov	r2, #5
   11244:	movt	r1, #1
   11248:	bl	10f20 <dcgettext@plt>
   1124c:	mov	r1, r0
   11250:	movw	r0, #37252	; 0x9184
   11254:	movt	r0, #2
   11258:	ldr	r2, [r0]
   1125c:	mov	r0, #1
   11260:	bl	1104c <__printf_chk@plt>
   11264:	movw	r1, #31596	; 0x7b6c
   11268:	mov	r0, #0
   1126c:	mov	r2, #5
   11270:	movt	r1, #1
   11274:	bl	10f20 <dcgettext@plt>
   11278:	movw	r2, #31635	; 0x7b93
   1127c:	mov	r1, r0
   11280:	mov	r0, #1
   11284:	mov	r3, #160	; 0xa0
   11288:	movt	r2, #1
   1128c:	bl	1104c <__printf_chk@plt>
   11290:	movw	r1, #33571	; 0x8323
   11294:	mov	r0, #0
   11298:	mov	r2, #5
   1129c:	movt	r1, #1
   112a0:	bl	10f20 <dcgettext@plt>
   112a4:	movw	r7, #37220	; 0x9164
   112a8:	movt	r7, #2
   112ac:	ldr	r1, [r7]
   112b0:	bl	10ea8 <fputs_unlocked@plt>
   112b4:	movw	r1, #31640	; 0x7b98
   112b8:	mov	r0, #0
   112bc:	mov	r2, #5
   112c0:	movt	r1, #1
   112c4:	bl	10f20 <dcgettext@plt>
   112c8:	ldr	r1, [r7]
   112cc:	bl	10ea8 <fputs_unlocked@plt>
   112d0:	movw	r1, #31685	; 0x7bc5
   112d4:	mov	r0, #0
   112d8:	mov	r2, #5
   112dc:	movt	r1, #1
   112e0:	bl	10f20 <dcgettext@plt>
   112e4:	ldr	r1, [r7]
   112e8:	bl	10ea8 <fputs_unlocked@plt>
   112ec:	movw	r1, #31755	; 0x7c0b
   112f0:	mov	r0, #0
   112f4:	mov	r2, #5
   112f8:	movt	r1, #1
   112fc:	bl	10f20 <dcgettext@plt>
   11300:	ldr	r1, [r7]
   11304:	bl	10ea8 <fputs_unlocked@plt>
   11308:	movw	r1, #31808	; 0x7c40
   1130c:	mov	r0, #0
   11310:	mov	r2, #5
   11314:	movt	r1, #1
   11318:	bl	10f20 <dcgettext@plt>
   1131c:	ldr	r1, [r7]
   11320:	bl	10ea8 <fputs_unlocked@plt>
   11324:	movw	r1, #31861	; 0x7c75
   11328:	mov	r0, #0
   1132c:	mov	r2, #5
   11330:	movt	r1, #1
   11334:	bl	10f20 <dcgettext@plt>
   11338:	ldr	r1, [r7]
   1133c:	bl	10ea8 <fputs_unlocked@plt>
   11340:	movw	r1, #31987	; 0x7cf3
   11344:	mov	r0, #0
   11348:	mov	r2, #5
   1134c:	movt	r1, #1
   11350:	bl	10f20 <dcgettext@plt>
   11354:	ldr	r1, [r7]
   11358:	bl	10ea8 <fputs_unlocked@plt>
   1135c:	movw	r1, #32426	; 0x7eaa
   11360:	mov	r0, #0
   11364:	mov	r2, #5
   11368:	movt	r1, #1
   1136c:	bl	10f20 <dcgettext@plt>
   11370:	ldr	r1, [r7]
   11374:	bl	10ea8 <fputs_unlocked@plt>
   11378:	movw	r1, #32471	; 0x7ed7
   1137c:	mov	r0, #0
   11380:	mov	r2, #5
   11384:	movt	r1, #1
   11388:	bl	10f20 <dcgettext@plt>
   1138c:	ldr	r1, [r7]
   11390:	bl	10ea8 <fputs_unlocked@plt>
   11394:	movw	r1, #32525	; 0x7f0d
   11398:	mov	r0, #0
   1139c:	mov	r2, #5
   113a0:	movt	r1, #1
   113a4:	bl	10f20 <dcgettext@plt>
   113a8:	movw	r2, #32569	; 0x7f39
   113ac:	mov	r1, r0
   113b0:	mov	r0, #1
   113b4:	movt	r2, #1
   113b8:	bl	1104c <__printf_chk@plt>
   113bc:	movw	r1, #32580	; 0x7f44
   113c0:	mov	r0, #0
   113c4:	mov	r2, #5
   113c8:	movt	r1, #1
   113cc:	bl	10f20 <dcgettext@plt>
   113d0:	ldr	r1, [r7]
   113d4:	bl	10ea8 <fputs_unlocked@plt>
   113d8:	movw	r0, #34712	; 0x8798
   113dc:	mov	r2, #48	; 0x30
   113e0:	mov	r6, sp
   113e4:	movw	r5, #32913	; 0x8091
   113e8:	movt	r0, #1
   113ec:	movt	r5, #1
   113f0:	add	r1, r0, #32
   113f4:	add	r3, r0, #16
   113f8:	vld1.64	{d18-d19}, [r0], r2
   113fc:	vld1.64	{d16-d17}, [r1]
   11400:	vld1.64	{d20-d21}, [r3]
   11404:	vldr	d22, [r0]
   11408:	add	r1, r6, #32
   1140c:	add	r0, r6, #16
   11410:	vst1.64	{d16-d17}, [r1]
   11414:	movw	r1, #33627	; 0x835b
   11418:	vst1.64	{d20-d21}, [r0]
   1141c:	mov	r0, r6
   11420:	movt	r1, #1
   11424:	vst1.64	{d18-d19}, [r0], r2
   11428:	vstr	d22, [r0]
   1142c:	mov	r0, r5
   11430:	bl	10ecc <strcmp@plt>
   11434:	cmp	r0, #0
   11438:	ldrne	r1, [r6, #8]!
   1143c:	cmpne	r1, #0
   11440:	bne	1142c <dcngettext@plt+0x314>
   11444:	movw	r1, #33722	; 0x83ba
   11448:	ldr	r6, [r6, #4]
   1144c:	mov	r0, #0
   11450:	mov	r2, #5
   11454:	movt	r1, #1
   11458:	bl	10f20 <dcgettext@plt>
   1145c:	movw	r2, #32951	; 0x80b7
   11460:	movw	r3, #33745	; 0x83d1
   11464:	mov	r1, r0
   11468:	mov	r0, #1
   1146c:	movt	r2, #1
   11470:	movt	r3, #1
   11474:	bl	1104c <__printf_chk@plt>
   11478:	cmp	r6, #0
   1147c:	mov	r0, #5
   11480:	mov	r1, #0
   11484:	moveq	r6, r5
   11488:	bl	110a0 <setlocale@plt>
   1148c:	cmp	r0, #0
   11490:	beq	114c8 <dcngettext@plt+0x3b0>
   11494:	movw	r1, #33785	; 0x83f9
   11498:	mov	r2, #3
   1149c:	movt	r1, #1
   114a0:	bl	110f4 <strncmp@plt>
   114a4:	cmp	r0, #0
   114a8:	beq	114c8 <dcngettext@plt+0x3b0>
   114ac:	movw	r1, #33789	; 0x83fd
   114b0:	mov	r0, #0
   114b4:	mov	r2, #5
   114b8:	movt	r1, #1
   114bc:	bl	10f20 <dcgettext@plt>
   114c0:	ldr	r1, [r7]
   114c4:	bl	10ea8 <fputs_unlocked@plt>
   114c8:	movw	r1, #33860	; 0x8444
   114cc:	mov	r0, #0
   114d0:	mov	r2, #5
   114d4:	movt	r1, #1
   114d8:	bl	10f20 <dcgettext@plt>
   114dc:	movw	r2, #33745	; 0x83d1
   114e0:	mov	r1, r0
   114e4:	mov	r0, #1
   114e8:	mov	r3, r5
   114ec:	movt	r2, #1
   114f0:	bl	1104c <__printf_chk@plt>
   114f4:	movw	r1, #33887	; 0x845f
   114f8:	mov	r0, #0
   114fc:	mov	r2, #5
   11500:	movt	r1, #1
   11504:	bl	10f20 <dcgettext@plt>
   11508:	mov	r1, r0
   1150c:	movw	r0, #33655	; 0x8377
   11510:	movw	r3, #32425	; 0x7ea9
   11514:	cmp	r6, r5
   11518:	mov	r2, r6
   1151c:	movt	r0, #1
   11520:	movt	r3, #1
   11524:	moveq	r3, r0
   11528:	mov	r0, #1
   1152c:	bl	1104c <__printf_chk@plt>
   11530:	mov	r0, r4
   11534:	bl	10fec <exit@plt>
   11538:	movw	r0, #37208	; 0x9158
   1153c:	movw	r1, #31524	; 0x7b24
   11540:	mov	r2, #5
   11544:	movt	r0, #2
   11548:	movt	r1, #1
   1154c:	ldr	r5, [r0]
   11550:	mov	r0, #0
   11554:	bl	10f20 <dcgettext@plt>
   11558:	mov	r2, r0
   1155c:	movw	r0, #37252	; 0x9184
   11560:	mov	r1, #1
   11564:	movt	r0, #2
   11568:	ldr	r3, [r0]
   1156c:	mov	r0, r5
   11570:	bl	11064 <__fprintf_chk@plt>
   11574:	mov	r0, r4
   11578:	bl	10fec <exit@plt>
   1157c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11580:	add	fp, sp, #28
   11584:	sub	sp, sp, #196	; 0xc4
   11588:	mov	r5, r0
   1158c:	ldr	r0, [r1]
   11590:	mov	r4, r1
   11594:	bl	14a24 <dcngettext@plt+0x390c>
   11598:	movw	r1, #32425	; 0x7ea9
   1159c:	mov	r0, #6
   115a0:	movt	r1, #1
   115a4:	bl	110a0 <setlocale@plt>
   115a8:	movw	r6, #32955	; 0x80bb
   115ac:	movw	r1, #32921	; 0x8099
   115b0:	movt	r6, #1
   115b4:	movt	r1, #1
   115b8:	mov	r0, r6
   115bc:	bl	110dc <bindtextdomain@plt>
   115c0:	mov	r0, r6
   115c4:	bl	10f38 <textdomain@plt>
   115c8:	movw	r0, #11672	; 0x2d98
   115cc:	movt	r0, #1
   115d0:	bl	17b00 <dcngettext@plt+0x69e8>
   115d4:	movw	r0, #37220	; 0x9164
   115d8:	mov	r1, #0
   115dc:	mov	r2, #1
   115e0:	mov	r3, #0
   115e4:	mov	r8, #0
   115e8:	movt	r0, #2
   115ec:	ldr	r0, [r0]
   115f0:	bl	11034 <setvbuf@plt>
   115f4:	sub	r0, fp, #85	; 0x55
   115f8:	movw	sl, #32945	; 0x80b1
   115fc:	movw	r7, #34504	; 0x86c8
   11600:	mvn	r6, #0
   11604:	add	r0, r0, #3
   11608:	movt	sl, #1
   1160c:	movt	r7, #1
   11610:	and	r9, r0, #3
   11614:	sub	r0, r0, r9
   11618:	str	r0, [sp, #52]	; 0x34
   1161c:	mov	r0, #0
   11620:	str	r0, [sp, #60]	; 0x3c
   11624:	mov	r0, #0
   11628:	str	r0, [sp, #76]	; 0x4c
   1162c:	mov	r0, r5
   11630:	mov	r1, r4
   11634:	mov	r2, sl
   11638:	mov	r3, r7
   1163c:	str	r8, [sp]
   11640:	bl	10fd4 <getopt_long@plt>
   11644:	cmp	r0, #97	; 0x61
   11648:	ble	117e4 <dcngettext@plt+0x6cc>
   1164c:	sub	r1, r0, #98	; 0x62
   11650:	cmp	r1, #24
   11654:	bls	11690 <dcngettext@plt+0x578>
   11658:	ldr	r2, [sp, #76]	; 0x4c
   1165c:	sub	r0, r0, #256	; 0x100
   11660:	cmp	r0, #4
   11664:	bhi	12a64 <dcngettext@plt+0x194c>
   11668:	add	r1, pc, #0
   1166c:	ldr	pc, [r1, r0, lsl #2]
   11670:	andeq	r1, r1, r4, lsl #13
   11674:			; <UNDEFINED> instruction: 0x000117b4
   11678:	andeq	r1, r1, r8, asr #14
   1167c:	andeq	r1, r1, ip, ror #14
   11680:	andeq	r1, r1, r0, lsl r7
   11684:	movw	r0, #37231	; 0x916f
   11688:	movt	r0, #2
   1168c:	b	11774 <dcngettext@plt+0x65c>
   11690:	add	r2, pc, #8
   11694:	ldr	r3, [sp, #76]	; 0x4c
   11698:	mov	r0, #1
   1169c:	ldr	pc, [r2, r1, lsl #2]
   116a0:	andeq	r1, r1, r4, lsl #14
   116a4:	andeq	r1, r1, r8, lsr #12
   116a8:	andeq	r2, r1, r4, ror #20
   116ac:	andeq	r2, r1, r4, ror #20
   116b0:	andeq	r2, r1, r4, ror #20
   116b4:	andeq	r2, r1, r4, ror #20
   116b8:	andeq	r2, r1, r4, ror #20
   116bc:	andeq	r2, r1, r4, ror #20
   116c0:	andeq	r2, r1, r4, ror #20
   116c4:	andeq	r2, r1, r4, ror #20
   116c8:	andeq	r2, r1, r4, ror #20
   116cc:	andeq	r2, r1, r4, ror #20
   116d0:	andeq	r2, r1, r4, ror #20
   116d4:	andeq	r2, r1, r4, ror #20
   116d8:	andeq	r2, r1, r4, ror #20
   116dc:	andeq	r2, r1, r4, ror #20
   116e0:	andeq	r2, r1, r4, ror #20
   116e4:	andeq	r2, r1, r4, ror #20
   116e8:	andeq	r1, r1, ip, lsr r7
   116ec:	andeq	r2, r1, r4, ror #20
   116f0:	andeq	r2, r1, r4, ror #20
   116f4:	andeq	r1, r1, r4, lsl #15
   116f8:	andeq	r2, r1, r4, ror #20
   116fc:	andeq	r2, r1, r4, ror #20
   11700:	andeq	r1, r1, r4, lsr #14
   11704:	mov	r6, #1
   11708:	mov	r0, r3
   1170c:	b	11628 <dcngettext@plt+0x510>
   11710:	mov	r0, #1
   11714:	mov	r6, #1
   11718:	str	r0, [sp, #60]	; 0x3c
   1171c:	mov	r0, r2
   11720:	b	11628 <dcngettext@plt+0x510>
   11724:	movw	r0, #37233	; 0x9171
   11728:	mov	r1, #1
   1172c:	movt	r0, #2
   11730:	strb	r1, [r0]
   11734:	mov	r0, r3
   11738:	b	11628 <dcngettext@plt+0x510>
   1173c:	mov	r6, #0
   11740:	mov	r0, r3
   11744:	b	11628 <dcngettext@plt+0x510>
   11748:	movw	r0, #37229	; 0x916d
   1174c:	movt	r0, #2
   11750:	strb	r8, [r0]
   11754:	movw	r0, #37228	; 0x916c
   11758:	movt	r0, #2
   1175c:	strb	r8, [r0]
   11760:	movw	r0, #37230	; 0x916e
   11764:	movt	r0, #2
   11768:	b	11774 <dcngettext@plt+0x65c>
   1176c:	movw	r0, #37232	; 0x9170
   11770:	movt	r0, #2
   11774:	mov	r1, #1
   11778:	strb	r1, [r0]
   1177c:	mov	r0, r2
   11780:	b	11628 <dcngettext@plt+0x510>
   11784:	movw	r0, #37229	; 0x916d
   11788:	mov	r1, #1
   1178c:	movt	r0, #2
   11790:	strb	r1, [r0]
   11794:	movw	r0, #37228	; 0x916c
   11798:	movt	r0, #2
   1179c:	strb	r8, [r0]
   117a0:	movw	r0, #37230	; 0x916e
   117a4:	movt	r0, #2
   117a8:	strb	r8, [r0]
   117ac:	mov	r0, r3
   117b0:	b	11628 <dcngettext@plt+0x510>
   117b4:	movw	r0, #37229	; 0x916d
   117b8:	mov	r1, #1
   117bc:	movt	r0, #2
   117c0:	strb	r8, [r0]
   117c4:	movw	r0, #37228	; 0x916c
   117c8:	movt	r0, #2
   117cc:	strb	r1, [r0]
   117d0:	movw	r0, #37230	; 0x916e
   117d4:	movt	r0, #2
   117d8:	strb	r8, [r0]
   117dc:	mov	r0, r2
   117e0:	b	11628 <dcngettext@plt+0x510>
   117e4:	cmn	r0, #1
   117e8:	bne	129f0 <dcngettext@plt+0x18d8>
   117ec:	movw	sl, #37240	; 0x9178
   117f0:	movw	r1, #37236	; 0x9174
   117f4:	mov	r0, #1
   117f8:	ldr	r3, [sp, #76]	; 0x4c
   117fc:	cmp	r6, #0
   11800:	movt	sl, #2
   11804:	movt	r1, #2
   11808:	strb	r0, [sl]
   1180c:	strb	r0, [r1]
   11810:	ldr	r0, [sp, #60]	; 0x3c
   11814:	eor	r1, r0, #1
   11818:	tsteq	r1, #1
   1181c:	beq	12a6c <dcngettext@plt+0x1954>
   11820:	eor	r0, r3, #1
   11824:	tst	r0, #1
   11828:	bne	11840 <dcngettext@plt+0x728>
   1182c:	movw	r2, #37233	; 0x9171
   11830:	movt	r2, #2
   11834:	ldrb	r2, [r2]
   11838:	cmp	r2, #0
   1183c:	bne	12a78 <dcngettext@plt+0x1960>
   11840:	orr	r1, r1, r0
   11844:	tst	r1, #1
   11848:	beq	12a84 <dcngettext@plt+0x196c>
   1184c:	cmp	r6, #0
   11850:	mov	r1, #0
   11854:	movwmi	r1, #1
   11858:	orr	r1, r1, r0
   1185c:	tst	r1, #1
   11860:	beq	12a90 <dcngettext@plt+0x1978>
   11864:	movw	r1, #37231	; 0x916f
   11868:	movt	r1, #2
   1186c:	ldrb	r1, [r1]
   11870:	mvn	r1, r1
   11874:	orr	r1, r3, r1
   11878:	tst	r1, #1
   1187c:	beq	12a9c <dcngettext@plt+0x1984>
   11880:	movw	r1, #37228	; 0x916c
   11884:	movt	r1, #2
   11888:	ldrb	r1, [r1]
   1188c:	mvn	r1, r1
   11890:	orr	r1, r3, r1
   11894:	tst	r1, #1
   11898:	beq	12aa8 <dcngettext@plt+0x1990>
   1189c:	movw	r1, #37229	; 0x916d
   118a0:	movt	r1, #2
   118a4:	ldrb	r1, [r1]
   118a8:	mvn	r1, r1
   118ac:	orr	r1, r3, r1
   118b0:	tst	r1, #1
   118b4:	beq	12ab4 <dcngettext@plt+0x199c>
   118b8:	movw	r1, #37230	; 0x916e
   118bc:	movt	r1, #2
   118c0:	ldrb	r1, [r1]
   118c4:	mvn	r1, r1
   118c8:	orr	r1, r3, r1
   118cc:	tst	r1, #1
   118d0:	beq	12ac0 <dcngettext@plt+0x19a8>
   118d4:	movw	r1, #37232	; 0x9170
   118d8:	movt	r1, #2
   118dc:	ldrb	r1, [r1]
   118e0:	and	r0, r1, r0
   118e4:	tst	r0, #1
   118e8:	bne	12acc <dcngettext@plt+0x19b4>
   118ec:	movw	r0, #37200	; 0x9150
   118f0:	add	r2, r4, r5, lsl #2
   118f4:	movt	r0, #2
   118f8:	ldr	r0, [r0]
   118fc:	cmp	r0, r5
   11900:	add	r0, r4, r0, lsl #2
   11904:	mov	r4, #1
   11908:	movweq	r1, #34954	; 0x888a
   1190c:	movteq	r1, #1
   11910:	streq	r1, [r2], #4
   11914:	cmp	r0, r2
   11918:	bcs	12978 <dcngettext@plt+0x1860>
   1191c:	cmp	r6, #1
   11920:	sub	r5, fp, #52	; 0x34
   11924:	mov	r1, #42	; 0x2a
   11928:	mov	r6, r0
   1192c:	sub	r7, fp, #60	; 0x3c
   11930:	str	r2, [sp, #72]	; 0x48
   11934:	movwlt	r1, #32
   11938:	add	r0, r5, #3
   1193c:	str	r1, [sp, #24]
   11940:	and	r1, r0, #3
   11944:	sub	r0, r0, r1
   11948:	str	r0, [sp, #20]
   1194c:	sub	r0, fp, #85	; 0x55
   11950:	sub	r0, r0, r9
   11954:	add	r8, r0, #3
   11958:	sub	r0, r5, r1
   1195c:	mov	r1, #1
   11960:	add	r0, r0, #3
   11964:	str	r8, [sp, #32]
   11968:	str	r0, [sp, #16]
   1196c:	mov	r0, r6
   11970:	b	119d8 <dcngettext@plt+0x8c0>
   11974:	add	r2, r1, #1
   11978:	str	r2, [r0, #20]
   1197c:	ldr	r0, [sp, #24]
   11980:	strb	r0, [r1]
   11984:	ldr	r0, [sp, #100]	; 0x64
   11988:	mov	r1, r9
   1198c:	bl	12c9c <dcngettext@plt+0x1b84>
   11990:	movw	r0, #37220	; 0x9164
   11994:	movt	r0, #2
   11998:	ldr	r0, [r0]
   1199c:	ldr	r1, [r0, #20]
   119a0:	ldr	r2, [r0, #24]
   119a4:	cmp	r1, r2
   119a8:	bcs	12954 <dcngettext@plt+0x183c>
   119ac:	add	r2, r1, #1
   119b0:	str	r2, [r0, #20]
   119b4:	strb	r4, [r1]
   119b8:	ldr	r4, [sp, #84]	; 0x54
   119bc:	ldr	r3, [sp, #76]	; 0x4c
   119c0:	ldr	r2, [sp, #72]	; 0x48
   119c4:	ldr	r0, [sp, #88]	; 0x58
   119c8:	mov	r1, r4
   119cc:	add	r0, r0, #4
   119d0:	cmp	r0, r2
   119d4:	bcs	12978 <dcngettext@plt+0x1860>
   119d8:	ldr	r4, [r0]
   119dc:	tst	r3, #1
   119e0:	str	r1, [sp, #84]	; 0x54
   119e4:	str	r0, [sp, #88]	; 0x58
   119e8:	beq	11a34 <dcngettext@plt+0x91c>
   119ec:	movw	r1, #34954	; 0x888a
   119f0:	mov	r0, r4
   119f4:	movt	r1, #1
   119f8:	bl	10ecc <strcmp@plt>
   119fc:	mov	r6, r0
   11a00:	cmp	r0, #0
   11a04:	beq	11bd4 <dcngettext@plt+0xabc>
   11a08:	movw	r1, #34485	; 0x86b5
   11a0c:	mov	r0, r4
   11a10:	movt	r1, #1
   11a14:	bl	148a4 <dcngettext@plt+0x378c>
   11a18:	cmp	r0, #0
   11a1c:	beq	128b8 <dcngettext@plt+0x17a0>
   11a20:	mov	r8, r0
   11a24:	mov	r1, r0
   11a28:	str	r6, [sp, #68]	; 0x44
   11a2c:	str	r4, [sp, #100]	; 0x64
   11a30:	b	11c0c <dcngettext@plt+0xaf4>
   11a34:	ldr	r1, [sp, #52]	; 0x34
   11a38:	mov	r0, r4
   11a3c:	sub	r2, fp, #52	; 0x34
   11a40:	str	r4, [sp, #100]	; 0x64
   11a44:	bl	12b24 <dcngettext@plt+0x1a0c>
   11a48:	mov	r4, #0
   11a4c:	cmp	r0, #0
   11a50:	beq	119bc <dcngettext@plt+0x8a4>
   11a54:	movw	r0, #37233	; 0x9171
   11a58:	mov	r4, #10
   11a5c:	mov	r9, #0
   11a60:	movt	r0, #2
   11a64:	ldrb	r0, [r0]
   11a68:	cmp	r0, #0
   11a6c:	movwne	r4, #0
   11a70:	bne	11ae0 <dcngettext@plt+0x9c8>
   11a74:	ldr	r0, [sp, #100]	; 0x64
   11a78:	mov	r1, #92	; 0x5c
   11a7c:	bl	11010 <strchr@plt>
   11a80:	cmp	r0, #0
   11a84:	bne	11ab0 <dcngettext@plt+0x998>
   11a88:	ldr	r0, [sp, #100]	; 0x64
   11a8c:	mov	r1, #10
   11a90:	bl	11010 <strchr@plt>
   11a94:	cmp	r0, #0
   11a98:	bne	11ab0 <dcngettext@plt+0x998>
   11a9c:	ldr	r0, [sp, #100]	; 0x64
   11aa0:	mov	r1, #13
   11aa4:	bl	11010 <strchr@plt>
   11aa8:	cmp	r0, #0
   11aac:	beq	11ae0 <dcngettext@plt+0x9c8>
   11ab0:	movw	r0, #37220	; 0x9164
   11ab4:	movt	r0, #2
   11ab8:	ldr	r0, [r0]
   11abc:	ldr	r1, [r0, #20]
   11ac0:	ldr	r2, [r0, #24]
   11ac4:	cmp	r1, r2
   11ac8:	bcs	1296c <dcngettext@plt+0x1854>
   11acc:	add	r2, r1, #1
   11ad0:	str	r2, [r0, #20]
   11ad4:	mov	r0, #92	; 0x5c
   11ad8:	strb	r0, [r1]
   11adc:	mov	r9, #1
   11ae0:	ldr	r0, [sp, #60]	; 0x3c
   11ae4:	tst	r0, #1
   11ae8:	beq	11b34 <dcngettext@plt+0xa1c>
   11aec:	movw	r0, #37220	; 0x9164
   11af0:	movt	r0, #2
   11af4:	ldr	r1, [r0]
   11af8:	mov	r6, r0
   11afc:	movw	r0, #31635	; 0x7b93
   11b00:	movt	r0, #1
   11b04:	bl	10ea8 <fputs_unlocked@plt>
   11b08:	ldr	r1, [r6]
   11b0c:	movw	r0, #34490	; 0x86ba
   11b10:	movt	r0, #1
   11b14:	bl	10ea8 <fputs_unlocked@plt>
   11b18:	ldr	r0, [sp, #100]	; 0x64
   11b1c:	mov	r1, r9
   11b20:	bl	12c9c <dcngettext@plt+0x1b84>
   11b24:	ldr	r1, [r6]
   11b28:	movw	r0, #34493	; 0x86bd
   11b2c:	movt	r0, #1
   11b30:	bl	10ea8 <fputs_unlocked@plt>
   11b34:	ldrb	r0, [sl]
   11b38:	movw	r5, #34498	; 0x86c2
   11b3c:	movt	r5, #1
   11b40:	cmp	r0, #1
   11b44:	bne	11b74 <dcngettext@plt+0xa5c>
   11b48:	mov	r6, #0
   11b4c:	ldrb	r2, [r8, r6]
   11b50:	mov	r0, #1
   11b54:	mov	r1, r5
   11b58:	bl	1104c <__printf_chk@plt>
   11b5c:	ldrb	r0, [sl]
   11b60:	add	r6, r6, #1
   11b64:	cmp	r0, #0
   11b68:	movwne	r0, #20
   11b6c:	cmp	r6, r0
   11b70:	bcc	11b4c <dcngettext@plt+0xa34>
   11b74:	ldr	r0, [sp, #60]	; 0x3c
   11b78:	tst	r0, #1
   11b7c:	bne	11990 <dcngettext@plt+0x878>
   11b80:	movw	r0, #37220	; 0x9164
   11b84:	movt	r0, #2
   11b88:	ldr	r0, [r0]
   11b8c:	ldr	r1, [r0, #20]
   11b90:	ldr	r2, [r0, #24]
   11b94:	cmp	r1, r2
   11b98:	bcs	12960 <dcngettext@plt+0x1848>
   11b9c:	add	r2, r1, #1
   11ba0:	str	r2, [r0, #20]
   11ba4:	mov	r0, #32
   11ba8:	strb	r0, [r1]
   11bac:	movw	r0, #37220	; 0x9164
   11bb0:	movt	r0, #2
   11bb4:	ldr	r0, [r0]
   11bb8:	ldr	r1, [r0, #20]
   11bbc:	ldr	r2, [r0, #24]
   11bc0:	cmp	r1, r2
   11bc4:	bcc	11974 <dcngettext@plt+0x85c>
   11bc8:	ldr	r1, [sp, #24]
   11bcc:	bl	11094 <__overflow@plt>
   11bd0:	b	11984 <dcngettext@plt+0x86c>
   11bd4:	movw	r0, #37241	; 0x9179
   11bd8:	mov	r1, #1
   11bdc:	mov	r2, #5
   11be0:	str	r6, [sp, #68]	; 0x44
   11be4:	movt	r0, #2
   11be8:	strb	r1, [r0]
   11bec:	movw	r1, #33556	; 0x8314
   11bf0:	mov	r0, #0
   11bf4:	movt	r1, #1
   11bf8:	bl	10f20 <dcgettext@plt>
   11bfc:	str	r0, [sp, #100]	; 0x64
   11c00:	movw	r0, #37216	; 0x9160
   11c04:	movt	r0, #2
   11c08:	ldr	r8, [r0]
   11c0c:	mov	r0, #0
   11c10:	mov	r1, #0
   11c14:	mov	r6, #0
   11c18:	mov	r4, #0
   11c1c:	mov	sl, #0
   11c20:	mov	r9, #0
   11c24:	str	r8, [sp, #96]	; 0x60
   11c28:	str	r0, [sp, #40]	; 0x28
   11c2c:	mov	r0, #0
   11c30:	str	r1, [fp, #-60]	; 0xffffffc4
   11c34:	str	r1, [fp, #-56]	; 0xffffffc8
   11c38:	str	r0, [sp, #56]	; 0x38
   11c3c:	mov	r0, #0
   11c40:	str	r0, [sp, #64]	; 0x40
   11c44:	mov	r0, #0
   11c48:	str	r0, [sp, #48]	; 0x30
   11c4c:	mov	r0, #0
   11c50:	str	r0, [sp, #44]	; 0x2c
   11c54:	mov	r0, #0
   11c58:	str	r0, [sp, #108]	; 0x6c
   11c5c:	mov	r0, #0
   11c60:	str	r0, [sp, #104]	; 0x68
   11c64:	mov	r0, #0
   11c68:	str	r0, [sp, #112]	; 0x70
   11c6c:	b	11c90 <dcngettext@plt+0xb78>
   11c70:	ldr	sl, [fp, #-108]	; 0xffffff94
   11c74:	sub	r7, fp, #60	; 0x3c
   11c78:	sub	r9, fp, #100	; 0x64
   11c7c:	mov	r8, r5
   11c80:	ldm	r9, {r4, r6, r9}
   11c84:	ldrb	r0, [r8]
   11c88:	tst	r0, #48	; 0x30
   11c8c:	bne	12590 <dcngettext@plt+0x1478>
   11c90:	adds	r6, r6, #1
   11c94:	mov	r0, #0
   11c98:	str	r9, [fp, #-92]	; 0xffffffa4
   11c9c:	adcs	r4, r4, #0
   11ca0:	str	r6, [fp, #-96]	; 0xffffffa0
   11ca4:	adc	r0, r0, #0
   11ca8:	str	r4, [fp, #-100]	; 0xffffff9c
   11cac:	cmp	r0, #1
   11cb0:	beq	129b4 <dcngettext@plt+0x189c>
   11cb4:	sub	r0, fp, #56	; 0x38
   11cb8:	mov	r1, r7
   11cbc:	mov	r2, #10
   11cc0:	mov	r3, r8
   11cc4:	mov	r5, r8
   11cc8:	bl	10ec0 <__getdelim@plt>
   11ccc:	cmp	r0, #1
   11cd0:	blt	12588 <dcngettext@plt+0x1470>
   11cd4:	mov	r9, r0
   11cd8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11cdc:	ldrb	r1, [r0]
   11ce0:	cmp	r1, #35	; 0x23
   11ce4:	beq	11c78 <dcngettext@plt+0xb60>
   11ce8:	add	r1, r9, r0
   11cec:	str	sl, [fp, #-108]	; 0xffffff94
   11cf0:	ldrb	r1, [r1, #-1]
   11cf4:	sub	r1, r1, #10
   11cf8:	clz	r1, r1
   11cfc:	lsr	r3, r1, #5
   11d00:	sub	r1, r9, r3
   11d04:	cmp	r1, #0
   11d08:	mov	r2, r1
   11d0c:	subgt	r2, r2, #1
   11d10:	ldrb	r2, [r0, r2]
   11d14:	sub	r2, r2, #13
   11d18:	clz	r2, r2
   11d1c:	lsr	r8, r2, #5
   11d20:	subs	sl, r1, r8
   11d24:	beq	11c70 <dcngettext@plt+0xb58>
   11d28:	mov	r7, #0
   11d2c:	strb	r7, [r0, sl]
   11d30:	ldr	r6, [fp, #-56]	; 0xffffffc8
   11d34:	b	11d3c <dcngettext@plt+0xc24>
   11d38:	add	r7, r7, #1
   11d3c:	ldrb	r0, [r6, r7]
   11d40:	cmp	r0, #9
   11d44:	cmpne	r0, #32
   11d48:	beq	11d38 <dcngettext@plt+0xc20>
   11d4c:	cmp	r0, #92	; 0x5c
   11d50:	movw	r1, #31635	; 0x7b93
   11d54:	mov	r2, #4
   11d58:	mov	r5, r3
   11d5c:	addeq	r7, r7, #1
   11d60:	movne	r0, #0
   11d64:	moveq	r0, #1
   11d68:	movt	r1, #1
   11d6c:	add	r4, r6, r7
   11d70:	str	r0, [sp, #92]	; 0x5c
   11d74:	mov	r0, r4
   11d78:	bl	110f4 <strncmp@plt>
   11d7c:	cmp	r0, #0
   11d80:	beq	11e8c <dcngettext@plt+0xd74>
   11d84:	movw	r0, #37236	; 0x9174
   11d88:	ldrb	r1, [r4]
   11d8c:	movt	r0, #2
   11d90:	ldrb	r0, [r0]
   11d94:	sub	r1, r1, #92	; 0x5c
   11d98:	clz	r1, r1
   11d9c:	lsr	r1, r1, #5
   11da0:	cmp	r0, #0
   11da4:	sub	r0, sl, r7
   11da8:	orrne	r1, r1, #42	; 0x2a
   11dac:	cmp	r0, r1
   11db0:	bcc	1230c <dcngettext@plt+0x11f4>
   11db4:	movw	r0, #37240	; 0x9178
   11db8:	mov	r5, r4
   11dbc:	movt	r0, #2
   11dc0:	ldrb	r0, [r0]
   11dc4:	cmp	r0, #0
   11dc8:	addne	r7, r7, #40	; 0x28
   11dcc:	ldrb	r1, [r6, r7]
   11dd0:	cmp	r1, #32
   11dd4:	cmpne	r1, #9
   11dd8:	bne	1230c <dcngettext@plt+0x11f4>
   11ddc:	mov	r1, #0
   11de0:	cmp	r0, #0
   11de4:	mov	r0, r5
   11de8:	strb	r1, [r6, r7]
   11dec:	beq	11e34 <dcngettext@plt+0xd1c>
   11df0:	bl	10fe0 <__ctype_b_loc@plt>
   11df4:	ldr	r1, [r0]
   11df8:	mov	r0, #0
   11dfc:	mov	r2, r5
   11e00:	ldrb	r3, [r2, -r0]!
   11e04:	add	r3, r1, r3, lsl #1
   11e08:	ldrb	r3, [r3, #1]
   11e0c:	tst	r3, #16
   11e10:	ldrbne	r2, [r2, #1]
   11e14:	addne	r2, r1, r2, lsl #1
   11e18:	ldrbne	r2, [r2, #1]
   11e1c:	tstne	r2, #16
   11e20:	beq	1230c <dcngettext@plt+0x11f4>
   11e24:	sub	r0, r0, #2
   11e28:	cmn	r0, #40	; 0x28
   11e2c:	bne	11dfc <dcngettext@plt+0xce4>
   11e30:	sub	r0, r5, r0
   11e34:	ldrb	r0, [r0]
   11e38:	cmp	r0, #0
   11e3c:	bne	1230c <dcngettext@plt+0x11f4>
   11e40:	add	r0, r7, #1
   11e44:	sub	r1, sl, r0
   11e48:	cmp	r1, #1
   11e4c:	beq	120c4 <dcngettext@plt+0xfac>
   11e50:	ldrb	r1, [r6, r0]
   11e54:	cmp	r1, #32
   11e58:	cmpne	r1, #42	; 0x2a
   11e5c:	bne	120c4 <dcngettext@plt+0xfac>
   11e60:	movw	r1, #37112	; 0x90f8
   11e64:	movt	r1, #2
   11e68:	ldr	r1, [r1]
   11e6c:	cmp	r1, #1
   11e70:	beq	120e8 <dcngettext@plt+0xfd0>
   11e74:	movw	r1, #37112	; 0x90f8
   11e78:	mov	r0, #0
   11e7c:	movt	r1, #2
   11e80:	str	r0, [r1]
   11e84:	add	r0, r7, #2
   11e88:	b	120e8 <dcngettext@plt+0xfd0>
   11e8c:	add	r1, r7, #4
   11e90:	ldrb	r0, [r6, r1]
   11e94:	cmp	r0, #32
   11e98:	addeq	r1, r7, #5
   11e9c:	ldrb	r0, [r6, r1]
   11ea0:	cmp	r0, #40	; 0x28
   11ea4:	bne	1230c <dcngettext@plt+0x11f4>
   11ea8:	add	r0, r1, #1
   11eac:	subs	r2, sl, r0
   11eb0:	beq	1230c <dcngettext@plt+0x11f4>
   11eb4:	add	r1, r1, r5
   11eb8:	add	r7, r5, r8
   11ebc:	add	r0, r6, r0
   11ec0:	add	r1, r1, r8
   11ec4:	str	r0, [sp, #80]	; 0x50
   11ec8:	sub	r0, r6, r7
   11ecc:	add	r3, r1, #2
   11ed0:	add	ip, r1, #3
   11ed4:	add	r4, r1, #1
   11ed8:	sub	r1, r9, r7
   11edc:	add	r1, r6, r1
   11ee0:	add	r6, r1, #2
   11ee4:	add	r1, r1, #1
   11ee8:	mov	lr, ip
   11eec:	mov	sl, r3
   11ef0:	mov	r5, r0
   11ef4:	mov	r8, r1
   11ef8:	mov	r2, r6
   11efc:	cmp	r9, r3
   11f00:	str	r4, [fp, #-104]	; 0xffffff98
   11f04:	beq	11f4c <dcngettext@plt+0xe34>
   11f08:	add	r0, r5, r9
   11f0c:	ldr	r4, [fp, #-104]	; 0xffffff98
   11f10:	sub	r6, r2, #1
   11f14:	sub	r1, r8, #1
   11f18:	add	r3, sl, #1
   11f1c:	add	ip, lr, #1
   11f20:	ldrb	r7, [r0, #-1]
   11f24:	sub	r0, r5, #1
   11f28:	add	r4, r4, #1
   11f2c:	cmp	r7, #41	; 0x29
   11f30:	bne	11ee8 <dcngettext@plt+0xdd0>
   11f34:	str	lr, [sp, #36]	; 0x24
   11f38:	ldr	lr, [fp, #-104]	; 0xffffff98
   11f3c:	add	r1, r0, r9
   11f40:	mov	r0, #0
   11f44:	str	r2, [sp, #28]
   11f48:	b	11f70 <dcngettext@plt+0xe58>
   11f4c:	str	r2, [sp, #28]
   11f50:	ldr	r2, [sp, #80]	; 0x50
   11f54:	str	lr, [sp, #36]	; 0x24
   11f58:	ldr	lr, [fp, #-104]	; 0xffffff98
   11f5c:	mov	r0, #1
   11f60:	ldrb	r1, [r2]
   11f64:	cmp	r1, #41	; 0x29
   11f68:	mov	r1, r2
   11f6c:	bne	1230c <dcngettext@plt+0x11f4>
   11f70:	ldr	r2, [sp, #92]	; 0x5c
   11f74:	cmp	r2, #0
   11f78:	beq	12014 <dcngettext@plt+0xefc>
   11f7c:	ldr	r6, [sp, #80]	; 0x50
   11f80:	cmp	r0, #0
   11f84:	bne	12008 <dcngettext@plt+0xef0>
   11f88:	ldr	r6, [sp, #80]	; 0x50
   11f8c:	sub	r2, r9, sl
   11f90:	mov	r3, #0
   11f94:	b	11fb0 <dcngettext@plt+0xe98>
   11f98:	cmp	r0, #0
   11f9c:	beq	1230c <dcngettext@plt+0x11f4>
   11fa0:	add	r3, r3, #1
   11fa4:	strb	r0, [r6], #1
   11fa8:	cmp	r3, r2
   11fac:	bcs	12008 <dcngettext@plt+0xef0>
   11fb0:	ldr	r0, [sp, #80]	; 0x50
   11fb4:	ldrb	r0, [r0, r3]
   11fb8:	cmp	r0, #92	; 0x5c
   11fbc:	bne	11f98 <dcngettext@plt+0xe80>
   11fc0:	ldr	r4, [sp, #36]	; 0x24
   11fc4:	sub	r0, r9, r3
   11fc8:	cmp	r0, r4
   11fcc:	beq	1230c <dcngettext@plt+0x11f4>
   11fd0:	ldr	r0, [sp, #80]	; 0x50
   11fd4:	add	r3, r3, #1
   11fd8:	ldrb	r4, [r0, r3]
   11fdc:	cmp	r4, #92	; 0x5c
   11fe0:	beq	12000 <dcngettext@plt+0xee8>
   11fe4:	mov	r0, #10
   11fe8:	cmp	r4, #110	; 0x6e
   11fec:	beq	11fa0 <dcngettext@plt+0xe88>
   11ff0:	cmp	r4, #114	; 0x72
   11ff4:	bne	1230c <dcngettext@plt+0x11f4>
   11ff8:	mov	r0, #13
   11ffc:	b	11fa0 <dcngettext@plt+0xe88>
   12000:	mov	r0, #92	; 0x5c
   12004:	b	11fa0 <dcngettext@plt+0xe88>
   12008:	cmp	r6, r1
   1200c:	movcc	r0, #0
   12010:	strbcc	r0, [r6]
   12014:	ldr	sl, [sp, #28]
   12018:	sub	r0, r9, lr
   1201c:	mov	r2, #0
   12020:	strb	r2, [r1]
   12024:	b	12038 <dcngettext@plt+0xf20>
   12028:	add	sl, sl, #1
   1202c:	add	r8, r8, #1
   12030:	add	r9, r9, #1
   12034:	add	r0, r0, #1
   12038:	ldrb	r1, [r5, r9]
   1203c:	cmp	r1, #9
   12040:	cmpne	r1, #32
   12044:	beq	12028 <dcngettext@plt+0xf10>
   12048:	mov	r6, sl
   1204c:	cmp	r1, #61	; 0x3d
   12050:	bne	1230c <dcngettext@plt+0x11f4>
   12054:	ldrb	r4, [r8]
   12058:	mov	r5, r8
   1205c:	cmp	r4, #32
   12060:	cmpne	r4, #9
   12064:	bne	12078 <dcngettext@plt+0xf60>
   12068:	mov	r8, r5
   1206c:	add	r6, r6, #1
   12070:	add	r8, r5, #1
   12074:	b	12054 <dcngettext@plt+0xf3c>
   12078:	movw	r0, #37240	; 0x9178
   1207c:	movt	r0, #2
   12080:	ldrb	r0, [r0]
   12084:	cmp	r0, #1
   12088:	bne	120b8 <dcngettext@plt+0xfa0>
   1208c:	bl	10fe0 <__ctype_b_loc@plt>
   12090:	ldr	r0, [r0]
   12094:	mov	r1, #40	; 0x28
   12098:	uxtb	r2, r4
   1209c:	add	r2, r0, r2, lsl #1
   120a0:	ldrb	r2, [r2, #1]
   120a4:	tst	r2, #16
   120a8:	beq	1230c <dcngettext@plt+0x11f4>
   120ac:	ldrb	r4, [r6], #1
   120b0:	subs	r1, r1, #1
   120b4:	bne	12098 <dcngettext@plt+0xf80>
   120b8:	cmp	r4, #0
   120bc:	bne	1230c <dcngettext@plt+0x11f4>
   120c0:	b	12198 <dcngettext@plt+0x1080>
   120c4:	movw	r1, #37112	; 0x90f8
   120c8:	movt	r1, #2
   120cc:	ldr	r1, [r1]
   120d0:	cmp	r1, #0
   120d4:	beq	1230c <dcngettext@plt+0x11f4>
   120d8:	movw	r2, #37112	; 0x90f8
   120dc:	mov	r1, #1
   120e0:	movt	r2, #2
   120e4:	str	r1, [r2]
   120e8:	ldr	r1, [sp, #92]	; 0x5c
   120ec:	add	r2, r6, r0
   120f0:	str	r2, [sp, #80]	; 0x50
   120f4:	cmp	r1, #0
   120f8:	beq	12198 <dcngettext@plt+0x1080>
   120fc:	subs	r1, sl, r0
   12100:	mov	r0, r2
   12104:	beq	12180 <dcngettext@plt+0x1068>
   12108:	sub	ip, r1, #1
   1210c:	mov	r3, #0
   12110:	mov	r0, r2
   12114:	b	12134 <dcngettext@plt+0x101c>
   12118:	cmp	r7, #0
   1211c:	beq	1230c <dcngettext@plt+0x11f4>
   12120:	ldr	r2, [sp, #80]	; 0x50
   12124:	add	r3, r3, #1
   12128:	strb	r7, [r0], #1
   1212c:	cmp	r3, r1
   12130:	bcs	12180 <dcngettext@plt+0x1068>
   12134:	ldrb	r7, [r2, r3]
   12138:	cmp	r7, #92	; 0x5c
   1213c:	bne	12118 <dcngettext@plt+0x1000>
   12140:	cmp	r3, ip
   12144:	beq	1230c <dcngettext@plt+0x11f4>
   12148:	ldr	r2, [sp, #80]	; 0x50
   1214c:	add	r3, r3, #1
   12150:	ldrb	r2, [r2, r3]
   12154:	cmp	r2, #92	; 0x5c
   12158:	beq	12178 <dcngettext@plt+0x1060>
   1215c:	mov	r7, #10
   12160:	cmp	r2, #110	; 0x6e
   12164:	beq	12120 <dcngettext@plt+0x1008>
   12168:	cmp	r2, #114	; 0x72
   1216c:	bne	1230c <dcngettext@plt+0x11f4>
   12170:	mov	r7, #13
   12174:	b	12120 <dcngettext@plt+0x1008>
   12178:	mov	r7, #92	; 0x5c
   1217c:	b	12120 <dcngettext@plt+0x1008>
   12180:	add	r1, r6, sl
   12184:	cmp	r0, r1
   12188:	movcc	r1, #0
   1218c:	strbcc	r1, [r0]
   12190:	cmp	r2, #0
   12194:	beq	1230c <dcngettext@plt+0x11f4>
   12198:	ldr	r0, [sp, #68]	; 0x44
   1219c:	cmp	r0, #0
   121a0:	bne	121bc <dcngettext@plt+0x10a4>
   121a4:	ldr	r0, [sp, #80]	; 0x50
   121a8:	movw	r1, #34954	; 0x888a
   121ac:	movt	r1, #1
   121b0:	bl	10ecc <strcmp@plt>
   121b4:	cmp	r0, #0
   121b8:	beq	1230c <dcngettext@plt+0x11f4>
   121bc:	movw	r0, #37228	; 0x916c
   121c0:	ldr	r4, [sp, #80]	; 0x50
   121c4:	mov	r9, #0
   121c8:	movt	r0, #2
   121cc:	ldrb	r0, [r0]
   121d0:	cmp	r0, #0
   121d4:	bne	121f0 <dcngettext@plt+0x10d8>
   121d8:	mov	r0, r4
   121dc:	mov	r1, #10
   121e0:	bl	11010 <strchr@plt>
   121e4:	cmp	r0, #0
   121e8:	mov	r9, r0
   121ec:	movwne	r9, #1
   121f0:	ldr	r1, [sp, #20]
   121f4:	mov	r0, r4
   121f8:	sub	r2, fp, #61	; 0x3d
   121fc:	bl	12b24 <dcngettext@plt+0x1a0c>
   12200:	ldr	sl, [fp, #-108]	; 0xffffff94
   12204:	cmp	r0, #0
   12208:	beq	123b4 <dcngettext@plt+0x129c>
   1220c:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   12210:	sub	r7, fp, #60	; 0x3c
   12214:	cmp	r0, #0
   12218:	beq	12230 <dcngettext@plt+0x1118>
   1221c:	movw	r0, #37231	; 0x916f
   12220:	movt	r0, #2
   12224:	ldrb	r0, [r0]
   12228:	cmp	r0, #0
   1222c:	bne	12300 <dcngettext@plt+0x11e8>
   12230:	movw	r0, #37240	; 0x9178
   12234:	ldr	r4, [sp, #16]
   12238:	movw	r6, #34768	; 0x87d0
   1223c:	mov	r7, #0
   12240:	movt	r0, #2
   12244:	movt	r6, #1
   12248:	ldrb	sl, [r0]
   1224c:	cmp	sl, #0
   12250:	movwne	sl, #20
   12254:	beq	122a8 <dcngettext@plt+0x1190>
   12258:	mov	r8, r5
   1225c:	bl	10fbc <__ctype_tolower_loc@plt>
   12260:	ldr	r0, [r0]
   12264:	mov	r7, #0
   12268:	ldrb	r3, [r8, r7, lsl #1]
   1226c:	ldrb	r1, [r4, r7]
   12270:	ldrb	r2, [r6, r1, lsr #4]
   12274:	ldr	r3, [r0, r3, lsl #2]
   12278:	cmp	r3, r2
   1227c:	addeq	r2, r8, r7, lsl #1
   12280:	andeq	r1, r1, #15
   12284:	moveq	r5, r8
   12288:	ldrbeq	r1, [r6, r1]
   1228c:	ldrbeq	r2, [r2, #1]
   12290:	ldreq	r2, [r0, r2, lsl #2]
   12294:	cmpeq	r2, r1
   12298:	bne	122a8 <dcngettext@plt+0x1190>
   1229c:	add	r7, r7, #1
   122a0:	cmp	r7, sl
   122a4:	bcc	12268 <dcngettext@plt+0x1150>
   122a8:	movw	r2, #37228	; 0x916c
   122ac:	ldr	r0, [sp, #48]	; 0x30
   122b0:	ldr	r1, [sp, #44]	; 0x2c
   122b4:	movt	r2, #2
   122b8:	ldrb	r2, [r2]
   122bc:	adds	r4, r0, #1
   122c0:	adc	r5, r1, #0
   122c4:	cmp	r7, sl
   122c8:	movne	r0, r4
   122cc:	movne	r1, r5
   122d0:	cmp	r2, #0
   122d4:	beq	1244c <dcngettext@plt+0x1334>
   122d8:	ldr	r3, [sp, #40]	; 0x28
   122dc:	sub	r2, r7, sl
   122e0:	ldr	sl, [fp, #-108]	; 0xffffff94
   122e4:	str	r0, [sp, #48]	; 0x30
   122e8:	str	r1, [sp, #44]	; 0x2c
   122ec:	sub	r7, fp, #60	; 0x3c
   122f0:	clz	r2, r2
   122f4:	lsr	r2, r2, #5
   122f8:	orr	r3, r3, r2
   122fc:	str	r3, [sp, #40]	; 0x28
   12300:	ldr	r9, [fp, #-92]	; 0xffffffa4
   12304:	ldr	r8, [sp, #96]	; 0x60
   12308:	b	124fc <dcngettext@plt+0x13e4>
   1230c:	ldr	r0, [sp, #112]	; 0x70
   12310:	ldr	r9, [fp, #-92]	; 0xffffffa4
   12314:	ldr	r6, [fp, #-96]	; 0xffffffa0
   12318:	ldr	r4, [fp, #-100]	; 0xffffff9c
   1231c:	adds	r0, r0, #1
   12320:	str	r0, [sp, #112]	; 0x70
   12324:	movw	r0, #37229	; 0x916d
   12328:	adc	r9, r9, #0
   1232c:	movt	r0, #2
   12330:	ldrb	r0, [r0]
   12334:	cmp	r0, #1
   12338:	bne	1238c <dcngettext@plt+0x1274>
   1233c:	movw	r1, #34046	; 0x84fe
   12340:	mov	r0, #0
   12344:	mov	r2, #5
   12348:	movt	r1, #1
   1234c:	bl	10f20 <dcgettext@plt>
   12350:	ldr	r2, [sp, #100]	; 0x64
   12354:	mov	r5, r0
   12358:	mov	r0, #0
   1235c:	mov	r1, #3
   12360:	bl	163cc <dcngettext@plt+0x52b4>
   12364:	mov	r3, r0
   12368:	movw	r0, #31635	; 0x7b93
   1236c:	mov	r1, #0
   12370:	mov	r2, r5
   12374:	str	r6, [sp]
   12378:	str	r4, [sp, #4]
   1237c:	movt	r0, #1
   12380:	str	r0, [sp, #8]
   12384:	mov	r0, #0
   12388:	bl	10f8c <error@plt>
   1238c:	ldr	r0, [sp, #108]	; 0x6c
   12390:	ldr	sl, [fp, #-108]	; 0xffffff94
   12394:	ldr	r8, [sp, #96]	; 0x60
   12398:	sub	r7, fp, #60	; 0x3c
   1239c:	adds	r0, r0, #1
   123a0:	str	r0, [sp, #108]	; 0x6c
   123a4:	ldr	r0, [sp, #104]	; 0x68
   123a8:	adc	r0, r0, #0
   123ac:	str	r0, [sp, #104]	; 0x68
   123b0:	b	11c84 <dcngettext@plt+0xb6c>
   123b4:	ldr	r0, [sp, #64]	; 0x40
   123b8:	ldr	r8, [sp, #96]	; 0x60
   123bc:	sub	r7, fp, #60	; 0x3c
   123c0:	adds	r0, r0, #1
   123c4:	str	r0, [sp, #64]	; 0x40
   123c8:	movw	r0, #37228	; 0x916c
   123cc:	adc	sl, sl, #0
   123d0:	movt	r0, #2
   123d4:	ldrb	r0, [r0]
   123d8:	cmp	r0, #0
   123dc:	bne	124f8 <dcngettext@plt+0x13e0>
   123e0:	cmp	r9, #0
   123e4:	beq	12414 <dcngettext@plt+0x12fc>
   123e8:	movw	r0, #37220	; 0x9164
   123ec:	movt	r0, #2
   123f0:	ldr	r0, [r0]
   123f4:	ldr	r1, [r0, #20]
   123f8:	ldr	r2, [r0, #24]
   123fc:	cmp	r1, r2
   12400:	bcs	12570 <dcngettext@plt+0x1458>
   12404:	add	r2, r1, #1
   12408:	str	r2, [r0, #20]
   1240c:	mov	r0, #92	; 0x5c
   12410:	strb	r0, [r1]
   12414:	ldr	r0, [sp, #80]	; 0x50
   12418:	mov	r1, r9
   1241c:	bl	12c9c <dcngettext@plt+0x1b84>
   12420:	movw	r1, #34094	; 0x852e
   12424:	mov	r0, #0
   12428:	mov	r2, #5
   1242c:	movt	r1, #1
   12430:	bl	10f20 <dcgettext@plt>
   12434:	movw	r1, #35761	; 0x8bb1
   12438:	mov	r2, r0
   1243c:	mov	r0, #1
   12440:	movt	r1, #1
   12444:	bl	1104c <__printf_chk@plt>
   12448:	b	124f8 <dcngettext@plt+0x13e0>
   1244c:	ldr	r8, [sp, #96]	; 0x60
   12450:	cmp	r7, sl
   12454:	bne	12478 <dcngettext@plt+0x1360>
   12458:	movw	r0, #37230	; 0x916e
   1245c:	movt	r0, #2
   12460:	ldrb	r0, [r0]
   12464:	cmp	r0, #0
   12468:	beq	12478 <dcngettext@plt+0x1360>
   1246c:	mov	r0, #1
   12470:	str	r0, [sp, #40]	; 0x28
   12474:	b	124f0 <dcngettext@plt+0x13d8>
   12478:	cmp	r9, #0
   1247c:	beq	124ac <dcngettext@plt+0x1394>
   12480:	movw	r0, #37220	; 0x9164
   12484:	movt	r0, #2
   12488:	ldr	r0, [r0]
   1248c:	ldr	r1, [r0, #20]
   12490:	ldr	r2, [r0, #24]
   12494:	cmp	r1, r2
   12498:	bcs	1257c <dcngettext@plt+0x1464>
   1249c:	add	r2, r1, #1
   124a0:	str	r2, [r0, #20]
   124a4:	mov	r0, #92	; 0x5c
   124a8:	strb	r0, [r1]
   124ac:	ldr	r0, [sp, #80]	; 0x50
   124b0:	mov	r1, r9
   124b4:	bl	12c9c <dcngettext@plt+0x1b84>
   124b8:	cmp	r7, sl
   124bc:	beq	12510 <dcngettext@plt+0x13f8>
   124c0:	movw	r1, #34114	; 0x8542
   124c4:	mov	r0, #0
   124c8:	mov	r2, #5
   124cc:	movt	r1, #1
   124d0:	bl	10f20 <dcgettext@plt>
   124d4:	movw	r1, #35761	; 0x8bb1
   124d8:	mov	r2, r0
   124dc:	mov	r0, #1
   124e0:	movt	r1, #1
   124e4:	bl	1104c <__printf_chk@plt>
   124e8:	str	r4, [sp, #48]	; 0x30
   124ec:	str	r5, [sp, #44]	; 0x2c
   124f0:	ldr	sl, [fp, #-108]	; 0xffffff94
   124f4:	sub	r7, fp, #60	; 0x3c
   124f8:	ldr	r9, [fp, #-92]	; 0xffffffa4
   124fc:	ldr	r6, [fp, #-96]	; 0xffffffa0
   12500:	ldr	r4, [fp, #-100]	; 0xffffff9c
   12504:	mov	r0, #1
   12508:	str	r0, [sp, #56]	; 0x38
   1250c:	b	11c84 <dcngettext@plt+0xb6c>
   12510:	movw	r0, #37230	; 0x916e
   12514:	sub	r9, fp, #100	; 0x64
   12518:	mov	r1, #1
   1251c:	movt	r0, #2
   12520:	ldm	r9, {r4, r6, r9}
   12524:	str	r1, [sp, #40]	; 0x28
   12528:	ldrb	r0, [r0]
   1252c:	cmp	r0, #0
   12530:	bne	12564 <dcngettext@plt+0x144c>
   12534:	movw	r1, #34121	; 0x8549
   12538:	mov	r0, #0
   1253c:	mov	r2, #5
   12540:	movt	r1, #1
   12544:	bl	10f20 <dcgettext@plt>
   12548:	movw	r1, #35761	; 0x8bb1
   1254c:	mov	r2, r0
   12550:	mov	r0, #1
   12554:	movt	r1, #1
   12558:	str	r0, [sp, #40]	; 0x28
   1255c:	mov	r0, #1
   12560:	bl	1104c <__printf_chk@plt>
   12564:	ldr	sl, [fp, #-108]	; 0xffffff94
   12568:	sub	r7, fp, #60	; 0x3c
   1256c:	b	12504 <dcngettext@plt+0x13ec>
   12570:	mov	r1, #92	; 0x5c
   12574:	bl	11094 <__overflow@plt>
   12578:	b	12414 <dcngettext@plt+0x12fc>
   1257c:	mov	r1, #92	; 0x5c
   12580:	bl	11094 <__overflow@plt>
   12584:	b	124ac <dcngettext@plt+0x1394>
   12588:	ldr	r9, [fp, #-92]	; 0xffffffa4
   1258c:	mov	r8, r5
   12590:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12594:	bl	14954 <dcngettext@plt+0x383c>
   12598:	ldr	r0, [r8]
   1259c:	mov	r6, #0
   125a0:	ands	r4, r0, #32
   125a4:	ldr	r0, [sp, #68]	; 0x44
   125a8:	mvneq	r6, #0
   125ac:	cmp	r0, #0
   125b0:	beq	1263c <dcngettext@plt+0x1524>
   125b4:	mov	r0, r8
   125b8:	bl	147ac <dcngettext@plt+0x3694>
   125bc:	ldr	r5, [sp, #64]	; 0x40
   125c0:	ldr	r8, [sp, #32]
   125c4:	cmp	r4, #0
   125c8:	bne	1264c <dcngettext@plt+0x1534>
   125cc:	cmp	r0, #0
   125d0:	mov	r4, sl
   125d4:	beq	125e0 <dcngettext@plt+0x14c8>
   125d8:	bl	1101c <__errno_location@plt>
   125dc:	ldr	r6, [r0]
   125e0:	cmp	r6, #0
   125e4:	bmi	12658 <dcngettext@plt+0x1540>
   125e8:	movw	r4, #34815	; 0x87ff
   125ec:	movw	sl, #37240	; 0x9178
   125f0:	movt	r4, #1
   125f4:	movt	sl, #2
   125f8:	bne	12614 <dcngettext@plt+0x14fc>
   125fc:	movw	r1, #34124	; 0x854c
   12600:	mov	r0, #0
   12604:	mov	r2, #5
   12608:	movt	r1, #1
   1260c:	bl	10f20 <dcgettext@plt>
   12610:	mov	r4, r0
   12614:	ldr	r2, [sp, #100]	; 0x64
   12618:	mov	r0, #0
   1261c:	mov	r1, #3
   12620:	mov	r5, #0
   12624:	bl	163cc <dcngettext@plt+0x52b4>
   12628:	mov	r3, r0
   1262c:	mov	r0, #0
   12630:	mov	r1, r6
   12634:	mov	r2, r4
   12638:	b	128e8 <dcngettext@plt+0x17d0>
   1263c:	mov	r0, r8
   12640:	bl	110c4 <clearerr_unlocked@plt>
   12644:	ldr	r5, [sp, #64]	; 0x40
   12648:	ldr	r8, [sp, #32]
   1264c:	mov	r4, sl
   12650:	cmp	r6, #0
   12654:	bpl	125e8 <dcngettext@plt+0x14d0>
   12658:	ldr	r0, [sp, #56]	; 0x38
   1265c:	tst	r0, #1
   12660:	beq	12900 <dcngettext@plt+0x17e8>
   12664:	movw	r0, #37228	; 0x916c
   12668:	ldr	r3, [sp, #76]	; 0x4c
   1266c:	ldr	r2, [sp, #72]	; 0x48
   12670:	movt	r0, #2
   12674:	ldrb	r0, [r0]
   12678:	cmp	r0, #0
   1267c:	bne	12854 <dcngettext@plt+0x173c>
   12680:	ldr	r6, [sp, #112]	; 0x70
   12684:	orrs	r0, r6, r9
   12688:	beq	126f8 <dcngettext@plt+0x15e0>
   1268c:	cmp	r9, #0
   12690:	mov	r3, r6
   12694:	beq	126bc <dcngettext@plt+0x15a4>
   12698:	movw	r4, #16960	; 0x4240
   1269c:	mov	r0, r6
   126a0:	mov	r1, r9
   126a4:	mov	r3, #0
   126a8:	movt	r4, #15
   126ac:	mov	r2, r4
   126b0:	bl	17928 <dcngettext@plt+0x6810>
   126b4:	add	r3, r2, r4
   126b8:	mov	r4, sl
   126bc:	movw	r1, #34186	; 0x858a
   126c0:	movw	r2, #34229	; 0x85b5
   126c4:	mov	r0, #5
   126c8:	movt	r1, #1
   126cc:	movt	r2, #1
   126d0:	str	r0, [sp]
   126d4:	mov	r0, #0
   126d8:	bl	11118 <dcngettext@plt>
   126dc:	mov	r2, r0
   126e0:	mov	r0, #0
   126e4:	mov	r1, #0
   126e8:	stm	sp, {r6, r9}
   126ec:	bl	10f8c <error@plt>
   126f0:	ldr	r3, [sp, #76]	; 0x4c
   126f4:	ldr	r2, [sp, #72]	; 0x48
   126f8:	orrs	r0, r5, r4
   126fc:	beq	12770 <dcngettext@plt+0x1658>
   12700:	cmp	r4, #0
   12704:	mov	r3, r5
   12708:	beq	12730 <dcngettext@plt+0x1618>
   1270c:	mov	r1, r4
   12710:	movw	r4, #16960	; 0x4240
   12714:	mov	r0, r5
   12718:	mov	r3, #0
   1271c:	movt	r4, #15
   12720:	mov	r2, r4
   12724:	bl	17928 <dcngettext@plt+0x6810>
   12728:	add	r3, r2, r4
   1272c:	mov	r4, sl
   12730:	movw	r1, #34274	; 0x85e2
   12734:	movw	r2, #34318	; 0x860e
   12738:	mov	r0, #5
   1273c:	movt	r1, #1
   12740:	movt	r2, #1
   12744:	str	r0, [sp]
   12748:	mov	r0, #0
   1274c:	bl	11118 <dcngettext@plt>
   12750:	mov	r2, r0
   12754:	mov	r0, #0
   12758:	mov	r1, #0
   1275c:	str	r5, [sp]
   12760:	str	r4, [sp, #4]
   12764:	bl	10f8c <error@plt>
   12768:	ldr	r3, [sp, #76]	; 0x4c
   1276c:	ldr	r2, [sp, #72]	; 0x48
   12770:	ldr	r6, [sp, #48]	; 0x30
   12774:	ldr	r9, [sp, #44]	; 0x2c
   12778:	orrs	r0, r6, r9
   1277c:	beq	127ec <dcngettext@plt+0x16d4>
   12780:	cmp	r9, #0
   12784:	mov	r3, r6
   12788:	beq	127b0 <dcngettext@plt+0x1698>
   1278c:	movw	r4, #16960	; 0x4240
   12790:	mov	r0, r6
   12794:	mov	r1, r9
   12798:	mov	r3, #0
   1279c:	movt	r4, #15
   127a0:	mov	r2, r4
   127a4:	bl	17928 <dcngettext@plt+0x6810>
   127a8:	add	r3, r2, r4
   127ac:	mov	r4, sl
   127b0:	movw	r1, #34363	; 0x863b
   127b4:	movw	r2, #34409	; 0x8669
   127b8:	mov	r0, #5
   127bc:	movt	r1, #1
   127c0:	movt	r2, #1
   127c4:	str	r0, [sp]
   127c8:	mov	r0, #0
   127cc:	bl	11118 <dcngettext@plt>
   127d0:	mov	r2, r0
   127d4:	mov	r0, #0
   127d8:	mov	r1, #0
   127dc:	stm	sp, {r6, r9}
   127e0:	bl	10f8c <error@plt>
   127e4:	ldr	r3, [sp, #76]	; 0x4c
   127e8:	ldr	r2, [sp, #72]	; 0x48
   127ec:	movw	r0, #37231	; 0x916f
   127f0:	ldr	r1, [sp, #40]	; 0x28
   127f4:	movt	r0, #2
   127f8:	ldrb	r0, [r0]
   127fc:	mvn	r0, r0
   12800:	orr	r0, r1, r0
   12804:	tst	r0, #1
   12808:	bne	12854 <dcngettext@plt+0x173c>
   1280c:	movw	r1, #34456	; 0x8698
   12810:	mov	r0, #0
   12814:	mov	r2, #5
   12818:	movt	r1, #1
   1281c:	bl	10f20 <dcgettext@plt>
   12820:	ldr	r2, [sp, #100]	; 0x64
   12824:	mov	r4, r0
   12828:	mov	r0, #0
   1282c:	mov	r1, #3
   12830:	bl	163cc <dcngettext@plt+0x52b4>
   12834:	mov	r3, r0
   12838:	mov	r2, r4
   1283c:	mov	r0, #0
   12840:	mov	r1, #0
   12844:	mov	r4, sl
   12848:	bl	10f8c <error@plt>
   1284c:	ldr	r2, [sp, #72]	; 0x48
   12850:	ldr	r3, [sp, #76]	; 0x4c
   12854:	ldr	r0, [sp, #48]	; 0x30
   12858:	ldr	r1, [sp, #44]	; 0x2c
   1285c:	movw	sl, #37240	; 0x9178
   12860:	movt	sl, #2
   12864:	orr	r0, r5, r0
   12868:	orr	r1, r4, r1
   1286c:	mov	r5, #0
   12870:	orrs	r0, r0, r1
   12874:	ldr	r1, [sp, #40]	; 0x28
   12878:	movwne	r0, #1
   1287c:	mvn	r1, r1
   12880:	orr	r0, r1, r0
   12884:	tst	r0, #1
   12888:	bne	128f4 <dcngettext@plt+0x17dc>
   1288c:	ldr	r0, [sp, #108]	; 0x6c
   12890:	ldr	r1, [sp, #104]	; 0x68
   12894:	orr	r0, r0, r1
   12898:	movw	r1, #37232	; 0x9170
   1289c:	movt	r1, #2
   128a0:	clz	r0, r0
   128a4:	lsr	r0, r0, #5
   128a8:	ldrb	r1, [r1]
   128ac:	eor	r1, r1, #1
   128b0:	orr	r5, r0, r1
   128b4:	b	128f4 <dcngettext@plt+0x17dc>
   128b8:	bl	1101c <__errno_location@plt>
   128bc:	ldr	r9, [r0]
   128c0:	mov	r0, #0
   128c4:	mov	r1, #3
   128c8:	mov	r2, r4
   128cc:	mov	r5, #0
   128d0:	bl	163cc <dcngettext@plt+0x52b4>
   128d4:	movw	r2, #34815	; 0x87ff
   128d8:	mov	r3, r0
   128dc:	mov	r0, #0
   128e0:	mov	r1, r9
   128e4:	movt	r2, #1
   128e8:	bl	10f8c <error@plt>
   128ec:	ldr	r3, [sp, #76]	; 0x4c
   128f0:	ldr	r2, [sp, #72]	; 0x48
   128f4:	ldr	r0, [sp, #84]	; 0x54
   128f8:	and	r4, r0, r5
   128fc:	b	119c4 <dcngettext@plt+0x8ac>
   12900:	movw	r1, #34139	; 0x855b
   12904:	mov	r0, #0
   12908:	mov	r2, #5
   1290c:	mov	r5, #0
   12910:	movt	r1, #1
   12914:	bl	10f20 <dcgettext@plt>
   12918:	ldr	r2, [sp, #100]	; 0x64
   1291c:	mov	r4, r0
   12920:	mov	r0, #0
   12924:	mov	r1, #3
   12928:	bl	163cc <dcngettext@plt+0x52b4>
   1292c:	mov	r3, r0
   12930:	mov	r0, #0
   12934:	mov	r1, #0
   12938:	mov	r2, r4
   1293c:	bl	10f8c <error@plt>
   12940:	ldr	r3, [sp, #76]	; 0x4c
   12944:	ldr	r2, [sp, #72]	; 0x48
   12948:	movw	sl, #37240	; 0x9178
   1294c:	movt	sl, #2
   12950:	b	128f4 <dcngettext@plt+0x17dc>
   12954:	mov	r1, r4
   12958:	bl	11094 <__overflow@plt>
   1295c:	b	119b8 <dcngettext@plt+0x8a0>
   12960:	mov	r1, #32
   12964:	bl	11094 <__overflow@plt>
   12968:	b	11bac <dcngettext@plt+0xa94>
   1296c:	mov	r1, #92	; 0x5c
   12970:	bl	11094 <__overflow@plt>
   12974:	b	11adc <dcngettext@plt+0x9c4>
   12978:	movw	r0, #37241	; 0x9179
   1297c:	movt	r0, #2
   12980:	ldrb	r0, [r0]
   12984:	cmp	r0, #0
   12988:	beq	129a4 <dcngettext@plt+0x188c>
   1298c:	movw	r0, #37216	; 0x9160
   12990:	movt	r0, #2
   12994:	ldr	r0, [r0]
   12998:	bl	147ac <dcngettext@plt+0x3694>
   1299c:	cmn	r0, #1
   129a0:	beq	12af8 <dcngettext@plt+0x19e0>
   129a4:	mov	r0, #1
   129a8:	bic	r0, r0, r4
   129ac:	sub	sp, fp, #28
   129b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   129b4:	movw	r1, #34018	; 0x84e2
   129b8:	mov	r0, #0
   129bc:	mov	r2, #5
   129c0:	movt	r1, #1
   129c4:	bl	10f20 <dcgettext@plt>
   129c8:	ldr	r2, [sp, #100]	; 0x64
   129cc:	mov	r4, r0
   129d0:	mov	r0, #0
   129d4:	mov	r1, #3
   129d8:	bl	163cc <dcngettext@plt+0x52b4>
   129dc:	mov	r3, r0
   129e0:	mov	r0, #1
   129e4:	mov	r1, #0
   129e8:	mov	r2, r4
   129ec:	bl	10f8c <error@plt>
   129f0:	cmn	r0, #3
   129f4:	bne	12a54 <dcngettext@plt+0x193c>
   129f8:	movw	r0, #37116	; 0x90fc
   129fc:	movw	r2, #32993	; 0x80e1
   12a00:	movw	r6, #32965	; 0x80c5
   12a04:	movw	r7, #32980	; 0x80d4
   12a08:	mov	r1, #0
   12a0c:	movt	r0, #2
   12a10:	movt	r2, #1
   12a14:	movt	r6, #1
   12a18:	movt	r7, #1
   12a1c:	ldr	r3, [r0]
   12a20:	movw	r0, #37220	; 0x9164
   12a24:	stm	sp, {r6, r7}
   12a28:	str	r2, [sp, #8]
   12a2c:	movw	r2, #32951	; 0x80b7
   12a30:	str	r1, [sp, #12]
   12a34:	movw	r1, #32913	; 0x8091
   12a38:	movt	r0, #2
   12a3c:	movt	r1, #1
   12a40:	movt	r2, #1
   12a44:	ldr	r0, [r0]
   12a48:	bl	16c54 <dcngettext@plt+0x5b3c>
   12a4c:	mov	r0, #0
   12a50:	bl	10fec <exit@plt>
   12a54:	cmn	r0, #2
   12a58:	bne	12a64 <dcngettext@plt+0x194c>
   12a5c:	mov	r0, #0
   12a60:	bl	11220 <dcngettext@plt+0x108>
   12a64:	mov	r0, #1
   12a68:	bl	11220 <dcngettext@plt+0x108>
   12a6c:	movw	r1, #33006	; 0x80ee
   12a70:	movt	r1, #1
   12a74:	b	12ad4 <dcngettext@plt+0x19bc>
   12a78:	movw	r1, #33041	; 0x8111
   12a7c:	movt	r1, #1
   12a80:	b	12ad4 <dcngettext@plt+0x19bc>
   12a84:	movw	r1, #33101	; 0x814d
   12a88:	movt	r1, #1
   12a8c:	b	12ad4 <dcngettext@plt+0x19bc>
   12a90:	movw	r1, #33158	; 0x8186
   12a94:	movt	r1, #1
   12a98:	b	12ad4 <dcngettext@plt+0x19bc>
   12a9c:	movw	r1, #33231	; 0x81cf
   12aa0:	movt	r1, #1
   12aa4:	b	12ad4 <dcngettext@plt+0x19bc>
   12aa8:	movw	r1, #33303	; 0x8217
   12aac:	movt	r1, #1
   12ab0:	b	12ad4 <dcngettext@plt+0x19bc>
   12ab4:	movw	r1, #33367	; 0x8257
   12ab8:	movt	r1, #1
   12abc:	b	12ad4 <dcngettext@plt+0x19bc>
   12ac0:	movw	r1, #33429	; 0x8295
   12ac4:	movt	r1, #1
   12ac8:	b	12ad4 <dcngettext@plt+0x19bc>
   12acc:	movw	r1, #33492	; 0x82d4
   12ad0:	movt	r1, #1
   12ad4:	mov	r0, #0
   12ad8:	mov	r2, #5
   12adc:	bl	10f20 <dcgettext@plt>
   12ae0:	mov	r2, r0
   12ae4:	mov	r0, #0
   12ae8:	mov	r1, #0
   12aec:	bl	10f8c <error@plt>
   12af0:	mov	r0, #1
   12af4:	bl	11220 <dcngettext@plt+0x108>
   12af8:	bl	1101c <__errno_location@plt>
   12afc:	movw	r1, #33556	; 0x8314
   12b00:	ldr	r4, [r0]
   12b04:	mov	r0, #0
   12b08:	mov	r2, #5
   12b0c:	movt	r1, #1
   12b10:	bl	10f20 <dcgettext@plt>
   12b14:	mov	r2, r0
   12b18:	mov	r0, #1
   12b1c:	mov	r1, r4
   12b20:	bl	10f8c <error@plt>
   12b24:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12b28:	add	fp, sp, #24
   12b2c:	mov	r7, r1
   12b30:	movw	r1, #34954	; 0x888a
   12b34:	mov	r6, r2
   12b38:	mov	r8, r0
   12b3c:	movt	r1, #1
   12b40:	bl	10ecc <strcmp@plt>
   12b44:	mov	r5, r0
   12b48:	mov	r0, #0
   12b4c:	cmp	r5, #0
   12b50:	strb	r0, [r6]
   12b54:	beq	12ba8 <dcngettext@plt+0x1a90>
   12b58:	movw	r1, #34485	; 0x86b5
   12b5c:	mov	r0, r8
   12b60:	movt	r1, #1
   12b64:	bl	148a4 <dcngettext@plt+0x378c>
   12b68:	mov	r4, r0
   12b6c:	cmp	r0, #0
   12b70:	bne	12bc4 <dcngettext@plt+0x1aac>
   12b74:	movw	r0, #37231	; 0x916f
   12b78:	movt	r0, #2
   12b7c:	ldrb	r4, [r0]
   12b80:	bl	1101c <__errno_location@plt>
   12b84:	cmp	r4, #1
   12b88:	bne	12c64 <dcngettext@plt+0x1b4c>
   12b8c:	ldr	r1, [r0]
   12b90:	cmp	r1, #2
   12b94:	bne	12c64 <dcngettext@plt+0x1b4c>
   12b98:	mov	r4, #1
   12b9c:	mov	r0, r4
   12ba0:	strb	r4, [r6]
   12ba4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12ba8:	movw	r0, #37241	; 0x9179
   12bac:	mov	r1, #1
   12bb0:	movt	r0, #2
   12bb4:	strb	r1, [r0]
   12bb8:	movw	r0, #37216	; 0x9160
   12bbc:	movt	r0, #2
   12bc0:	ldr	r4, [r0]
   12bc4:	mov	r0, r4
   12bc8:	mov	r1, #2
   12bcc:	bl	14770 <dcngettext@plt+0x3658>
   12bd0:	mov	r0, r4
   12bd4:	mov	r1, r7
   12bd8:	bl	12e80 <dcngettext@plt+0x1d68>
   12bdc:	cmp	r0, #0
   12be0:	beq	12bf0 <dcngettext@plt+0x1ad8>
   12be4:	bl	1101c <__errno_location@plt>
   12be8:	ldr	r6, [r0]
   12bec:	b	12bf4 <dcngettext@plt+0x1adc>
   12bf0:	mov	r6, #0
   12bf4:	mov	r0, r4
   12bf8:	cmp	r5, #0
   12bfc:	beq	12c4c <dcngettext@plt+0x1b34>
   12c00:	bl	147ac <dcngettext@plt+0x3694>
   12c04:	cmp	r6, #0
   12c08:	bne	12c1c <dcngettext@plt+0x1b04>
   12c0c:	cmp	r0, #0
   12c10:	beq	12c1c <dcngettext@plt+0x1b04>
   12c14:	bl	1101c <__errno_location@plt>
   12c18:	ldr	r6, [r0]
   12c1c:	cmp	r6, #0
   12c20:	beq	12c58 <dcngettext@plt+0x1b40>
   12c24:	mov	r0, #0
   12c28:	mov	r1, #3
   12c2c:	mov	r2, r8
   12c30:	mov	r4, #0
   12c34:	bl	163cc <dcngettext@plt+0x52b4>
   12c38:	movw	r2, #34815	; 0x87ff
   12c3c:	mov	r3, r0
   12c40:	mov	r0, #0
   12c44:	mov	r1, r6
   12c48:	b	12c8c <dcngettext@plt+0x1b74>
   12c4c:	bl	110c4 <clearerr_unlocked@plt>
   12c50:	cmp	r6, #0
   12c54:	bne	12c24 <dcngettext@plt+0x1b0c>
   12c58:	mov	r4, #1
   12c5c:	mov	r0, r4
   12c60:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12c64:	ldr	r5, [r0]
   12c68:	mov	r0, #0
   12c6c:	mov	r1, #3
   12c70:	mov	r2, r8
   12c74:	mov	r4, #0
   12c78:	bl	163cc <dcngettext@plt+0x52b4>
   12c7c:	movw	r2, #34815	; 0x87ff
   12c80:	mov	r3, r0
   12c84:	mov	r0, #0
   12c88:	mov	r1, r5
   12c8c:	movt	r2, #1
   12c90:	bl	10f8c <error@plt>
   12c94:	mov	r0, r4
   12c98:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12c9c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12ca0:	add	fp, sp, #24
   12ca4:	mov	r4, r0
   12ca8:	cmp	r1, #0
   12cac:	beq	12d5c <dcngettext@plt+0x1c44>
   12cb0:	movw	r5, #37220	; 0x9164
   12cb4:	movw	r8, #34481	; 0x86b1
   12cb8:	movw	r6, #34484	; 0x86b4
   12cbc:	movw	r7, #34487	; 0x86b7
   12cc0:	movt	r5, #2
   12cc4:	movt	r8, #1
   12cc8:	movt	r6, #1
   12ccc:	movt	r7, #1
   12cd0:	b	12ce4 <dcngettext@plt+0x1bcc>
   12cd4:	ldr	r1, [r5]
   12cd8:	mov	r0, r6
   12cdc:	bl	10ea8 <fputs_unlocked@plt>
   12ce0:	add	r4, r4, #1
   12ce4:	ldrb	r1, [r4]
   12ce8:	cmp	r1, #12
   12cec:	ble	12d0c <dcngettext@plt+0x1bf4>
   12cf0:	cmp	r1, #13
   12cf4:	beq	12cd4 <dcngettext@plt+0x1bbc>
   12cf8:	cmp	r1, #92	; 0x5c
   12cfc:	bne	12d28 <dcngettext@plt+0x1c10>
   12d00:	ldr	r1, [r5]
   12d04:	mov	r0, r7
   12d08:	b	12cdc <dcngettext@plt+0x1bc4>
   12d0c:	cmp	r1, #10
   12d10:	bne	12d20 <dcngettext@plt+0x1c08>
   12d14:	ldr	r1, [r5]
   12d18:	mov	r0, r8
   12d1c:	b	12cdc <dcngettext@plt+0x1bc4>
   12d20:	cmp	r1, #0
   12d24:	beq	12d74 <dcngettext@plt+0x1c5c>
   12d28:	ldr	r0, [r5]
   12d2c:	ldr	r2, [r0, #20]
   12d30:	ldr	r3, [r0, #24]
   12d34:	cmp	r2, r3
   12d38:	bcs	12d50 <dcngettext@plt+0x1c38>
   12d3c:	add	r3, r2, #1
   12d40:	add	r4, r4, #1
   12d44:	str	r3, [r0, #20]
   12d48:	strb	r1, [r2]
   12d4c:	b	12ce4 <dcngettext@plt+0x1bcc>
   12d50:	bl	11094 <__overflow@plt>
   12d54:	add	r4, r4, #1
   12d58:	b	12ce4 <dcngettext@plt+0x1bcc>
   12d5c:	movw	r0, #37220	; 0x9164
   12d60:	movt	r0, #2
   12d64:	ldr	r1, [r0]
   12d68:	mov	r0, r4
   12d6c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   12d70:	b	10ea8 <fputs_unlocked@plt>
   12d74:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12d78:	movw	r1, #37244	; 0x917c
   12d7c:	movt	r1, #2
   12d80:	str	r0, [r1]
   12d84:	bx	lr
   12d88:	movw	r1, #37248	; 0x9180
   12d8c:	movt	r1, #2
   12d90:	strb	r0, [r1]
   12d94:	bx	lr
   12d98:	push	{r4, r5, r6, sl, fp, lr}
   12d9c:	add	fp, sp, #16
   12da0:	sub	sp, sp, #8
   12da4:	movw	r0, #37220	; 0x9164
   12da8:	movt	r0, #2
   12dac:	ldr	r0, [r0]
   12db0:	bl	174e0 <dcngettext@plt+0x63c8>
   12db4:	cmp	r0, #0
   12db8:	beq	12de0 <dcngettext@plt+0x1cc8>
   12dbc:	movw	r0, #37248	; 0x9180
   12dc0:	movt	r0, #2
   12dc4:	ldrb	r0, [r0]
   12dc8:	cmp	r0, #0
   12dcc:	beq	12e00 <dcngettext@plt+0x1ce8>
   12dd0:	bl	1101c <__errno_location@plt>
   12dd4:	ldr	r0, [r0]
   12dd8:	cmp	r0, #32
   12ddc:	bne	12e00 <dcngettext@plt+0x1ce8>
   12de0:	movw	r0, #37208	; 0x9158
   12de4:	movt	r0, #2
   12de8:	ldr	r0, [r0]
   12dec:	bl	174e0 <dcngettext@plt+0x63c8>
   12df0:	cmp	r0, #0
   12df4:	subeq	sp, fp, #16
   12df8:	popeq	{r4, r5, r6, sl, fp, pc}
   12dfc:	b	12e70 <dcngettext@plt+0x1d58>
   12e00:	movw	r1, #34799	; 0x87ef
   12e04:	mov	r0, #0
   12e08:	mov	r2, #5
   12e0c:	movt	r1, #1
   12e10:	bl	10f20 <dcgettext@plt>
   12e14:	mov	r4, r0
   12e18:	movw	r0, #37244	; 0x917c
   12e1c:	movt	r0, #2
   12e20:	ldr	r6, [r0]
   12e24:	bl	1101c <__errno_location@plt>
   12e28:	ldr	r5, [r0]
   12e2c:	cmp	r6, #0
   12e30:	bne	12e4c <dcngettext@plt+0x1d34>
   12e34:	movw	r2, #34815	; 0x87ff
   12e38:	mov	r0, #0
   12e3c:	mov	r1, r5
   12e40:	mov	r3, r4
   12e44:	movt	r2, #1
   12e48:	b	12e6c <dcngettext@plt+0x1d54>
   12e4c:	mov	r0, r6
   12e50:	bl	162f0 <dcngettext@plt+0x51d8>
   12e54:	movw	r2, #34811	; 0x87fb
   12e58:	mov	r3, r0
   12e5c:	str	r4, [sp]
   12e60:	mov	r0, #0
   12e64:	mov	r1, r5
   12e68:	movt	r2, #1
   12e6c:	bl	10f8c <error@plt>
   12e70:	movw	r0, #37120	; 0x9100
   12e74:	movt	r0, #2
   12e78:	ldr	r0, [r0]
   12e7c:	bl	10efc <_exit@plt>
   12e80:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12e84:	add	fp, sp, #24
   12e88:	sub	sp, sp, #160	; 0xa0
   12e8c:	mov	r6, r0
   12e90:	movw	r0, #32840	; 0x8048
   12e94:	mov	r8, r1
   12e98:	bl	1745c <dcngettext@plt+0x6344>
   12e9c:	cmp	r0, #0
   12ea0:	beq	12f44 <dcngettext@plt+0x1e2c>
   12ea4:	mov	r5, sp
   12ea8:	mov	r4, r0
   12eac:	mov	r0, r5
   12eb0:	bl	12f60 <dcngettext@plt+0x1e48>
   12eb4:	b	12ec8 <dcngettext@plt+0x1db0>
   12eb8:	mov	r0, r4
   12ebc:	mov	r1, #32768	; 0x8000
   12ec0:	mov	r2, r5
   12ec4:	bl	130b4 <dcngettext@plt+0x1f9c>
   12ec8:	mov	r7, #0
   12ecc:	ldrb	r0, [r6]
   12ed0:	tst	r0, #16
   12ed4:	bne	12f10 <dcngettext@plt+0x1df8>
   12ed8:	add	r0, r4, r7
   12edc:	rsb	r2, r7, #32768	; 0x8000
   12ee0:	mov	r1, #1
   12ee4:	mov	r3, r6
   12ee8:	bl	110e8 <fread_unlocked@plt>
   12eec:	add	r7, r0, r7
   12ef0:	cmp	r7, #32768	; 0x8000
   12ef4:	beq	12eb8 <dcngettext@plt+0x1da0>
   12ef8:	cmp	r0, #0
   12efc:	bne	12ecc <dcngettext@plt+0x1db4>
   12f00:	ldrb	r0, [r6]
   12f04:	mov	r5, #1
   12f08:	tst	r0, #32
   12f0c:	bne	12f38 <dcngettext@plt+0x1e20>
   12f10:	cmp	r7, #0
   12f14:	beq	12f28 <dcngettext@plt+0x1e10>
   12f18:	mov	r2, sp
   12f1c:	mov	r0, r4
   12f20:	mov	r1, r7
   12f24:	bl	145a0 <dcngettext@plt+0x3488>
   12f28:	mov	r0, sp
   12f2c:	mov	r1, r8
   12f30:	bl	12fe4 <dcngettext@plt+0x1ecc>
   12f34:	mov	r5, #0
   12f38:	mov	r0, r4
   12f3c:	bl	14954 <dcngettext@plt+0x383c>
   12f40:	b	12f48 <dcngettext@plt+0x1e30>
   12f44:	mov	r5, #1
   12f48:	mov	r0, r5
   12f4c:	sub	sp, fp, #24
   12f50:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
	...
   12f60:	add	r1, pc, #24
   12f64:	add	r2, pc, #36	; 0x24
   12f68:	vld1.64	{d16-d17}, [r2 :128]
   12f6c:	vld1.64	{d18-d19}, [r1 :128]
   12f70:	vst1.32	{d16-d17}, [r0]!
   12f74:	vst1.32	{d18-d19}, [r0]
   12f78:	bx	lr
   12f7c:	nop	{0}
   12f80:	bicsgt	lr, r2, #240, 2	; 0x3c
	...
   12f90:	strbvs	r2, [r5, -r1, lsl #6]
   12f94:	svc	0x00cdab89
   12f98:	ldmls	sl!, {r1, r2, r3, r4, r5, r6, r7, sl, fp, ip, lr, pc}
   12f9c:	eorsne	r5, r2, r6, ror r4
   12fa0:	ldr	r2, [r0]
   12fa4:	rev	r2, r2
   12fa8:	str	r2, [r1]
   12fac:	ldr	r2, [r0, #4]
   12fb0:	rev	r2, r2
   12fb4:	str	r2, [r1, #4]
   12fb8:	ldr	r2, [r0, #8]
   12fbc:	rev	r2, r2
   12fc0:	str	r2, [r1, #8]
   12fc4:	ldr	r2, [r0, #12]
   12fc8:	rev	r2, r2
   12fcc:	str	r2, [r1, #12]
   12fd0:	ldr	r0, [r0, #16]
   12fd4:	rev	r0, r0
   12fd8:	str	r0, [r1, #16]
   12fdc:	mov	r0, r1
   12fe0:	bx	lr
   12fe4:	push	{r4, r5, r6, r7, fp, lr}
   12fe8:	add	fp, sp, #16
   12fec:	mov	r4, r1
   12ff0:	ldr	r1, [r0, #28]
   12ff4:	ldr	r3, [r0, #20]
   12ff8:	ldr	r2, [r0, #24]
   12ffc:	mov	r5, r0
   13000:	mov	r7, #32
   13004:	add	r6, r5, #32
   13008:	add	r0, r3, r1
   1300c:	cmp	r1, #56	; 0x38
   13010:	movwcc	r7, #16
   13014:	cmp	r0, r3
   13018:	str	r0, [r5, #20]
   1301c:	mvn	r3, #7
   13020:	addcc	r2, r2, #1
   13024:	add	r3, r3, r7, lsl #2
   13028:	strcc	r2, [r5, #24]
   1302c:	lsl	r2, r2, #3
   13030:	orr	r2, r2, r0, lsr #29
   13034:	lsl	r0, r0, #3
   13038:	rev	r0, r0
   1303c:	rev	r2, r2
   13040:	str	r2, [r6, r3]
   13044:	add	r2, r6, r7, lsl #2
   13048:	str	r0, [r2, #-4]
   1304c:	add	r0, r6, r1
   13050:	sub	r2, r3, r1
   13054:	movw	r1, #34824	; 0x8808
   13058:	movt	r1, #1
   1305c:	bl	10f08 <memcpy@plt>
   13060:	lsl	r1, r7, #2
   13064:	mov	r0, r6
   13068:	mov	r2, r5
   1306c:	bl	130b4 <dcngettext@plt+0x1f9c>
   13070:	ldr	r0, [r5]
   13074:	rev	r0, r0
   13078:	str	r0, [r4]
   1307c:	ldr	r0, [r5, #4]
   13080:	rev	r0, r0
   13084:	str	r0, [r4, #4]
   13088:	ldr	r0, [r5, #8]
   1308c:	rev	r0, r0
   13090:	str	r0, [r4, #8]
   13094:	ldr	r0, [r5, #12]
   13098:	rev	r0, r0
   1309c:	str	r0, [r4, #12]
   130a0:	ldr	r0, [r5, #16]
   130a4:	rev	r0, r0
   130a8:	str	r0, [r4, #16]
   130ac:	mov	r0, r4
   130b0:	pop	{r4, r5, r6, r7, fp, pc}
   130b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   130b8:	add	fp, sp, #28
   130bc:	sub	sp, sp, #416	; 0x1a0
   130c0:	ldr	r3, [r2, #20]
   130c4:	str	r2, [sp, #12]
   130c8:	adds	r3, r3, r1
   130cc:	bic	r1, r1, #3
   130d0:	str	r3, [r2, #20]
   130d4:	ldr	r3, [r2, #24]
   130d8:	adc	r3, r3, #0
   130dc:	str	r3, [r2, #24]
   130e0:	add	r2, r0, r1
   130e4:	cmp	r2, r0
   130e8:	bls	1445c <dcngettext@plt+0x3344>
   130ec:	ldr	r1, [sp, #12]
   130f0:	ldm	r1, {r5, r7}
   130f4:	ldr	r3, [r1, #8]
   130f8:	ldr	r6, [r1, #12]
   130fc:	ldr	r1, [r1, #16]
   13100:	str	r2, [sp, #8]
   13104:	str	r1, [sp, #60]	; 0x3c
   13108:	ldr	r1, [r0]
   1310c:	str	r3, [sp, #28]
   13110:	str	r7, [sp, #48]	; 0x30
   13114:	str	r5, [sp, #52]	; 0x34
   13118:	str	r6, [sp, #56]	; 0x38
   1311c:	str	r0, [sp, #164]	; 0xa4
   13120:	str	r1, [fp, #-96]	; 0xffffffa0
   13124:	ldmib	r0, {r1, r2}
   13128:	rev	r2, r2
   1312c:	str	r2, [fp, #-84]	; 0xffffffac
   13130:	mov	r7, r2
   13134:	ldr	r2, [r0, #12]
   13138:	str	r7, [sp, #20]
   1313c:	rev	r1, r1
   13140:	str	r1, [sp, #32]
   13144:	rev	r2, r2
   13148:	str	r2, [fp, #-80]	; 0xffffffb0
   1314c:	mov	r4, r2
   13150:	str	r2, [sp, #188]	; 0xbc
   13154:	ldr	r2, [r0, #16]
   13158:	eor	r1, r4, r1
   1315c:	rev	r2, r2
   13160:	str	r2, [fp, #-76]	; 0xffffffb4
   13164:	ldr	r2, [r0, #20]
   13168:	rev	r2, r2
   1316c:	str	r2, [fp, #-72]	; 0xffffffb8
   13170:	ldr	r2, [r0, #24]
   13174:	rev	ip, r2
   13178:	str	ip, [fp, #-68]	; 0xffffffbc
   1317c:	str	ip, [sp, #184]	; 0xb8
   13180:	ldr	r2, [r0, #28]
   13184:	rev	lr, r2
   13188:	str	lr, [fp, #-64]	; 0xffffffc0
   1318c:	str	lr, [sp, #44]	; 0x2c
   13190:	ldr	r2, [r0, #32]
   13194:	rev	r2, r2
   13198:	str	r2, [fp, #-60]	; 0xffffffc4
   1319c:	str	r2, [sp, #172]	; 0xac
   131a0:	ldr	r2, [r0, #36]	; 0x24
   131a4:	rev	r2, r2
   131a8:	str	r2, [fp, #-56]	; 0xffffffc8
   131ac:	eor	r3, r1, r2
   131b0:	mov	r9, r2
   131b4:	str	r2, [sp, #168]	; 0xa8
   131b8:	ldr	r1, [r0, #40]	; 0x28
   131bc:	rev	r1, r1
   131c0:	str	r1, [fp, #-52]	; 0xffffffcc
   131c4:	mov	sl, r1
   131c8:	ldr	r1, [r0, #44]	; 0x2c
   131cc:	str	sl, [sp, #64]	; 0x40
   131d0:	rev	r1, r1
   131d4:	str	r1, [fp, #-48]	; 0xffffffd0
   131d8:	str	r1, [sp, #176]	; 0xb0
   131dc:	ldr	r1, [r0, #48]	; 0x30
   131e0:	rev	r5, r1
   131e4:	str	r5, [fp, #-44]	; 0xffffffd4
   131e8:	ldr	r1, [r0, #52]	; 0x34
   131ec:	rev	r8, r1
   131f0:	str	r8, [fp, #-40]	; 0xffffffd8
   131f4:	str	r8, [sp, #68]	; 0x44
   131f8:	ldr	r2, [r0, #56]	; 0x38
   131fc:	rev	r1, r2
   13200:	str	r1, [fp, #-36]	; 0xffffffdc
   13204:	eor	r2, r3, r1
   13208:	str	r1, [sp, #180]	; 0xb4
   1320c:	ldr	r3, [r0, #60]	; 0x3c
   13210:	str	r2, [fp, #-132]	; 0xffffff7c
   13214:	rev	r0, r3
   13218:	mov	r3, r5
   1321c:	str	r0, [fp, #-32]	; 0xffffffe0
   13220:	str	r3, [sp, #36]	; 0x24
   13224:	str	r0, [sp, #208]	; 0xd0
   13228:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1322c:	ldr	r6, [fp, #-72]	; 0xffffffb8
   13230:	eor	r4, ip, r1
   13234:	str	r1, [sp, #40]	; 0x28
   13238:	mov	ip, r0
   1323c:	ldr	ip, [sp, #172]	; 0xac
   13240:	str	r6, [sp, #24]
   13244:	eor	r4, r4, r5
   13248:	eor	r2, r4, r2, ror #31
   1324c:	eor	r4, r9, lr
   13250:	ldr	r9, [sp, #176]	; 0xb0
   13254:	eor	r4, r4, r0
   13258:	eor	r5, r4, r2, ror #31
   1325c:	eor	r4, r1, r7
   13260:	str	r2, [sp, #192]	; 0xc0
   13264:	mov	r2, r7
   13268:	mov	r7, sl
   1326c:	eor	r4, r4, sl
   13270:	eor	r1, r4, r0
   13274:	eor	r4, r3, sl
   13278:	mov	sl, r3
   1327c:	str	r5, [sp, #196]	; 0xc4
   13280:	eor	r4, r4, r1, ror #31
   13284:	str	r1, [sp, #220]	; 0xdc
   13288:	eor	r3, r4, r5, ror #31
   1328c:	eor	r4, lr, r6
   13290:	mov	lr, r1
   13294:	eor	r4, r4, r8
   13298:	eor	r5, r4, r1, ror #31
   1329c:	ldr	r1, [fp, #-96]	; 0xffffffa0
   132a0:	eor	r4, r0, r8
   132a4:	str	r3, [sp, #204]	; 0xcc
   132a8:	ldr	r0, [sp, #188]	; 0xbc
   132ac:	eor	r4, r4, r5, ror #31
   132b0:	str	r5, [fp, #-220]	; 0xffffff24
   132b4:	rev	r1, r1
   132b8:	eor	r3, r4, r3, ror #31
   132bc:	eor	r4, r2, r1
   132c0:	str	r1, [sp, #16]
   132c4:	eor	r4, r4, ip
   132c8:	str	r3, [sp, #212]	; 0xd4
   132cc:	eor	r1, r4, r8
   132d0:	eor	r4, r7, ip
   132d4:	mov	r7, ip
   132d8:	eor	r4, r4, r1, ror #31
   132dc:	str	r1, [sp, #72]	; 0x48
   132e0:	eor	r2, r4, r5, ror #31
   132e4:	ror	r4, lr, #31
   132e8:	str	r4, [fp, #-84]	; 0xffffffac
   132ec:	eor	r4, r4, r1, ror #31
   132f0:	mov	ip, r2
   132f4:	str	r2, [fp, #-212]	; 0xffffff2c
   132f8:	eor	r4, r4, r2, ror #31
   132fc:	eor	lr, r4, r3, ror #31
   13300:	eor	r4, r6, r0
   13304:	ldr	r6, [fp, #-132]	; 0xffffff7c
   13308:	eor	r4, r4, r9
   1330c:	eor	r3, r4, r1, ror #31
   13310:	eor	r4, r8, r9
   13314:	str	lr, [sp, #200]	; 0xc8
   13318:	eor	r4, r4, r3, ror #31
   1331c:	mov	r8, r3
   13320:	str	r3, [sp, #76]	; 0x4c
   13324:	eor	r0, r4, r2, ror #31
   13328:	ror	r4, r5, #31
   1332c:	ldr	r2, [sp, #184]	; 0xb8
   13330:	str	r4, [fp, #-72]	; 0xffffffb8
   13334:	eor	r4, r4, r3, ror #31
   13338:	str	r0, [fp, #-196]	; 0xffffff3c
   1333c:	eor	r4, r4, r0, ror #31
   13340:	eor	r5, r4, lr, ror #31
   13344:	ldr	lr, [sp, #180]	; 0xb4
   13348:	eor	r4, r7, r2
   1334c:	ldr	r7, [sp, #196]	; 0xc4
   13350:	str	r5, [fp, #-128]	; 0xffffff80
   13354:	eor	r4, r4, lr
   13358:	eor	r2, r4, r3, ror #31
   1335c:	eor	r4, lr, r1, ror #31
   13360:	ldr	r3, [sp, #168]	; 0xa8
   13364:	eor	r4, r4, r2, ror #31
   13368:	str	r2, [sp, #80]	; 0x50
   1336c:	eor	r1, r4, r0, ror #31
   13370:	ror	r4, ip, #31
   13374:	mov	ip, r2
   13378:	str	r4, [fp, #-60]	; 0xffffffc4
   1337c:	eor	r4, r4, r2, ror #31
   13380:	str	r1, [fp, #-208]	; 0xffffff30
   13384:	eor	r4, r4, r1, ror #31
   13388:	eor	r5, r4, r5, ror #31
   1338c:	eor	r4, r9, r3
   13390:	mov	r9, r1
   13394:	eor	r4, r4, r6, ror #31
   13398:	ror	r9, r9, #31
   1339c:	str	r5, [fp, #-120]	; 0xffffff88
   133a0:	eor	r3, r4, r2, ror #31
   133a4:	ror	r4, r8, #31
   133a8:	str	r4, [fp, #-80]	; 0xffffffb0
   133ac:	eor	r4, r4, r6, ror #31
   133b0:	str	r3, [sp, #84]	; 0x54
   133b4:	eor	r4, r4, r3, ror #31
   133b8:	eor	r2, r4, r1, ror #31
   133bc:	ror	r4, r0, #31
   133c0:	str	r4, [fp, #-48]	; 0xffffffd0
   133c4:	eor	r4, r4, r3, ror #31
   133c8:	str	r2, [sp, #216]	; 0xd8
   133cc:	eor	r4, r4, r2, ror #31
   133d0:	eor	r0, r4, r5, ror #31
   133d4:	ldr	r5, [sp, #192]	; 0xc0
   133d8:	eor	r4, lr, sl
   133dc:	ldr	sl, [sp, #204]	; 0xcc
   133e0:	mov	lr, r2
   133e4:	str	r0, [fp, #-124]	; 0xffffff84
   133e8:	ror	r0, r7, #31
   133ec:	str	r0, [fp, #-104]	; 0xffffff98
   133f0:	eor	r4, r4, r5, ror #31
   133f4:	eor	r6, r4, r3, ror #31
   133f8:	ror	r4, ip, #31
   133fc:	ror	ip, r3, #31
   13400:	str	r4, [fp, #-68]	; 0xffffffbc
   13404:	eor	r4, r4, r5, ror #31
   13408:	ror	r8, r6, #31
   1340c:	eor	r4, r4, r6, ror #31
   13410:	eor	r1, r4, r2, ror #31
   13414:	ror	r4, r5, #31
   13418:	ldr	r5, [sp, #212]	; 0xd4
   1341c:	mov	r2, r6
   13420:	eor	r6, r9, r6, ror #31
   13424:	str	r4, [fp, #-76]	; 0xffffffb4
   13428:	str	r0, [fp, #-64]	; 0xffffffc0
   1342c:	ror	r0, sl, #31
   13430:	str	ip, [fp, #-56]	; 0xffffffc8
   13434:	str	r2, [sp, #88]	; 0x58
   13438:	str	r0, [fp, #-52]	; 0xffffffcc
   1343c:	str	r8, [fp, #-44]	; 0xffffffd4
   13440:	eor	r6, r6, r1, ror #31
   13444:	str	r0, [fp, #-100]	; 0xffffff9c
   13448:	ror	r3, r5, #31
   1344c:	str	r3, [fp, #-40]	; 0xffffffd8
   13450:	str	r3, [fp, #-96]	; 0xffffffa0
   13454:	ldr	r3, [fp, #-124]	; 0xffffff84
   13458:	str	r9, [fp, #-36]	; 0xffffffdc
   1345c:	mov	r9, r1
   13460:	str	r9, [sp, #100]	; 0x64
   13464:	eor	r0, r6, r3, ror #31
   13468:	ldr	r3, [sp, #208]	; 0xd0
   1346c:	ldr	r6, [fp, #-132]	; 0xffffff7c
   13470:	str	r0, [fp, #-112]	; 0xffffff90
   13474:	eor	r6, r3, r6, ror #31
   13478:	eor	r6, r6, r7, ror #31
   1347c:	eor	r2, r6, r2, ror #31
   13480:	eor	r6, ip, r7, ror #31
   13484:	eor	r6, r6, r2, ror #31
   13488:	mov	ip, r2
   1348c:	str	ip, [sp, #92]	; 0x5c
   13490:	eor	r2, r6, r1, ror #31
   13494:	ror	r6, lr, #31
   13498:	eor	r6, r6, ip, ror #31
   1349c:	mov	lr, r2
   134a0:	eor	r6, r6, r2, ror #31
   134a4:	str	lr, [sp, #108]	; 0x6c
   134a8:	eor	r3, r6, r0, ror #31
   134ac:	ldr	r0, [sp, #220]	; 0xdc
   134b0:	str	r3, [fp, #-108]	; 0xffffff94
   134b4:	eor	r6, r4, r0, ror #31
   134b8:	ldr	r0, [fp, #-220]	; 0xffffff24
   134bc:	eor	r6, r6, sl, ror #31
   134c0:	eor	r7, r6, ip, ror #31
   134c4:	eor	r6, r8, sl, ror #31
   134c8:	mov	sl, r9
   134cc:	eor	r6, r6, r7, ror #31
   134d0:	str	r7, [sp, #104]	; 0x68
   134d4:	eor	r1, r6, r2, ror #31
   134d8:	ror	r6, r9, #31
   134dc:	mov	r9, r7
   134e0:	eor	r6, r6, r7, ror #31
   134e4:	mov	r8, r1
   134e8:	str	r1, [sp, #116]	; 0x74
   134ec:	eor	r6, r6, r1, ror #31
   134f0:	eor	r2, r6, r3, ror #31
   134f4:	ldr	r3, [fp, #-104]	; 0xffffff98
   134f8:	str	r2, [fp, #-156]	; 0xffffff64
   134fc:	eor	r6, r3, r0, ror #31
   13500:	ldr	r3, [fp, #-100]	; 0xffffff9c
   13504:	eor	r6, r6, r5, ror #31
   13508:	eor	r4, r6, r7, ror #31
   1350c:	ror	r6, ip, #31
   13510:	eor	r6, r6, r5, ror #31
   13514:	ldr	r5, [sp, #200]	; 0xc8
   13518:	str	r4, [fp, #-188]	; 0xffffff44
   1351c:	eor	r6, r6, r4, ror #31
   13520:	eor	r0, r6, r1, ror #31
   13524:	ror	r6, lr, #31
   13528:	ldr	r1, [fp, #-212]	; 0xffffff2c
   1352c:	mov	r9, r5
   13530:	eor	r6, r6, r4, ror #31
   13534:	str	r0, [fp, #-204]	; 0xffffff34
   13538:	eor	r6, r6, r0, ror #31
   1353c:	eor	ip, r6, r2, ror #31
   13540:	eor	r6, r3, r1, ror #31
   13544:	eor	r6, r6, r5, ror #31
   13548:	str	ip, [fp, #-104]	; 0xffffff98
   1354c:	eor	r1, r6, r4, ror #31
   13550:	ror	r6, r7, #31
   13554:	ldr	r7, [sp, #216]	; 0xd8
   13558:	eor	r6, r6, r5, ror #31
   1355c:	str	r1, [fp, #-200]	; 0xffffff38
   13560:	eor	r6, r6, r1, ror #31
   13564:	eor	r3, r6, r0, ror #31
   13568:	ror	r6, r8, #31
   1356c:	eor	r6, r6, r1, ror #31
   13570:	str	r3, [fp, #-192]	; 0xffffff40
   13574:	eor	r6, r6, r3, ror #31
   13578:	eor	r0, r6, ip, ror #31
   1357c:	ror	r6, r2, #31
   13580:	ldr	ip, [fp, #-108]	; 0xffffff94
   13584:	eor	r6, r6, r3, ror #31
   13588:	str	r0, [fp, #-176]	; 0xffffff50
   1358c:	eor	r3, r6, r0, ror #31
   13590:	mov	r6, r0
   13594:	str	r3, [fp, #-136]	; 0xffffff78
   13598:	ldr	r3, [fp, #-112]	; 0xffffff90
   1359c:	ror	r5, r3, #31
   135a0:	eor	r5, r5, r8, ror #31
   135a4:	eor	r0, r5, r2, ror #31
   135a8:	ldr	r2, [fp, #-128]	; 0xffffff80
   135ac:	ldr	r5, [fp, #-96]	; 0xffffffa0
   135b0:	str	r0, [fp, #-100]	; 0xffffff9c
   135b4:	ldr	r0, [fp, #-120]	; 0xffffff88
   135b8:	ror	r4, r0, #31
   135bc:	eor	r4, r4, sl, ror #31
   135c0:	ldr	sl, [fp, #-124]	; 0xffffff84
   135c4:	eor	r4, r4, r3, ror #31
   135c8:	ror	r3, r2, #31
   135cc:	eor	r3, r3, r7, ror #31
   135d0:	ldr	r7, [fp, #-196]	; 0xffffff3c
   135d4:	eor	r3, r3, sl, ror #31
   135d8:	eor	r7, r5, r7, ror #31
   135dc:	eor	r7, r7, r2, ror #31
   135e0:	eor	r8, r7, r1, ror #31
   135e4:	ldr	r1, [fp, #-208]	; 0xffffff30
   135e8:	ror	r7, r9, #31
   135ec:	mov	r9, sl
   135f0:	str	r8, [sp, #96]	; 0x60
   135f4:	eor	r7, r7, r1, ror #31
   135f8:	ldr	r1, [fp, #-100]	; 0xffffff9c
   135fc:	eor	r7, r7, r0, ror #31
   13600:	eor	r0, r7, r8, ror #31
   13604:	str	r0, [fp, #-216]	; 0xffffff28
   13608:	eor	r0, r3, r0, ror #31
   1360c:	ror	r3, sl, #31
   13610:	eor	r3, r3, lr, ror #31
   13614:	eor	r2, r4, r0, ror #31
   13618:	str	r0, [fp, #-116]	; 0xffffff8c
   1361c:	eor	r3, r3, ip, ror #31
   13620:	mov	lr, r2
   13624:	eor	r0, r3, r2, ror #31
   13628:	ror	r3, ip, #31
   1362c:	ldr	ip, [fp, #-204]	; 0xffffff34
   13630:	str	lr, [fp, #-160]	; 0xffffff60
   13634:	eor	r4, r1, r0, ror #31
   13638:	ldr	r1, [fp, #-104]	; 0xffffff98
   1363c:	mov	r5, r0
   13640:	ldr	r0, [fp, #-136]	; 0xffffff78
   13644:	ror	r7, r5, #31
   13648:	str	r5, [fp, #-148]	; 0xffffff6c
   1364c:	eor	r3, r3, ip, ror #31
   13650:	str	r4, [fp, #-140]	; 0xffffff74
   13654:	eor	r3, r3, r1, ror #31
   13658:	eor	r7, r7, r1, ror #31
   1365c:	ldr	r1, [fp, #-192]	; 0xffffff40
   13660:	eor	r2, r3, r4, ror #31
   13664:	ror	r3, r4, #31
   13668:	eor	r3, r3, r6, ror #31
   1366c:	ror	r6, lr, #31
   13670:	eor	r0, r0, r2, ror #31
   13674:	str	r2, [fp, #-100]	; 0xffffff9c
   13678:	str	r0, [fp, #-96]	; 0xffffffa0
   1367c:	eor	r0, r3, r0, ror #31
   13680:	mov	r3, r5
   13684:	ror	r5, r8, #31
   13688:	eor	r5, r5, r9, ror #31
   1368c:	str	r0, [fp, #-136]	; 0xffffff78
   13690:	eor	r0, r7, r2, ror #31
   13694:	str	r0, [fp, #-152]	; 0xffffff68
   13698:	ldr	r0, [fp, #-156]	; 0xffffff64
   1369c:	eor	r6, r6, r0, ror #31
   136a0:	ldr	r0, [fp, #-188]	; 0xffffff44
   136a4:	eor	sl, r6, r4, ror #31
   136a8:	ldr	r6, [fp, #-116]	; 0xffffff8c
   136ac:	ror	r4, r0, #31
   136b0:	ldr	r0, [fp, #-128]	; 0xffffff80
   136b4:	eor	r5, r5, r6, ror #31
   136b8:	eor	r4, r4, r0, ror #31
   136bc:	ldr	r0, [fp, #-200]	; 0xffffff38
   136c0:	eor	r4, r4, r8, ror #31
   136c4:	eor	r2, r4, r1, ror #31
   136c8:	ror	r4, r0, #31
   136cc:	ldr	r0, [fp, #-120]	; 0xffffff88
   136d0:	eor	r4, r4, r0, ror #31
   136d4:	ldr	r0, [fp, #-216]	; 0xffffff28
   136d8:	eor	r4, r4, r0, ror #31
   136dc:	eor	r7, r4, r2, ror #31
   136e0:	mov	r4, r2
   136e4:	str	r4, [sp, #112]	; 0x70
   136e8:	eor	r2, r5, r7, ror #31
   136ec:	str	r7, [fp, #-184]	; 0xffffff48
   136f0:	ror	r5, r0, #31
   136f4:	mov	r7, r0
   136f8:	ldr	r0, [fp, #-112]	; 0xffffff90
   136fc:	str	r2, [fp, #-180]	; 0xffffff4c
   13700:	eor	r5, r5, r0, ror #31
   13704:	eor	r5, r5, lr, ror #31
   13708:	ldr	lr, [fp, #-176]	; 0xffffff50
   1370c:	eor	r0, r5, r2, ror #31
   13710:	ldr	r2, [fp, #-108]	; 0xffffff94
   13714:	ror	r5, r6, #31
   13718:	str	r0, [fp, #-172]	; 0xffffff54
   1371c:	eor	r5, r5, r2, ror #31
   13720:	eor	r5, r5, r3, ror #31
   13724:	ror	r3, ip, #31
   13728:	eor	r3, r3, r8, ror #31
   1372c:	ldr	r8, [fp, #-172]	; 0xffffff54
   13730:	eor	r2, r5, r0, ror #31
   13734:	ldr	r0, [fp, #-152]	; 0xffffff68
   13738:	eor	r3, r3, r4, ror #31
   1373c:	eor	sl, sl, r2, ror #31
   13740:	str	r2, [fp, #-164]	; 0xffffff5c
   13744:	eor	r5, r3, lr, ror #31
   13748:	eor	r9, r0, sl, ror #31
   1374c:	ldr	r0, [fp, #-136]	; 0xffffff78
   13750:	str	sl, [fp, #-144]	; 0xffffff70
   13754:	str	r5, [sp, #120]	; 0x78
   13758:	str	r9, [sp, #128]	; 0x80
   1375c:	eor	r2, r0, r9, ror #31
   13760:	ldr	r0, [fp, #-104]	; 0xffffff98
   13764:	mov	ip, r2
   13768:	str	r2, [sp, #148]	; 0x94
   1376c:	ror	r3, r0, #31
   13770:	ldr	r0, [fp, #-96]	; 0xffffffa0
   13774:	eor	r3, r3, r4, ror #31
   13778:	eor	r3, r3, r5, ror #31
   1377c:	eor	r6, r3, r0, ror #31
   13780:	ldr	r0, [fp, #-100]	; 0xffffff9c
   13784:	str	r6, [sp, #132]	; 0x84
   13788:	ror	r3, r0, #31
   1378c:	eor	r3, r3, r5, ror #31
   13790:	eor	r3, r3, r6, ror #31
   13794:	eor	r0, r3, r2, ror #31
   13798:	mov	r2, r5
   1379c:	ror	r3, r0, #31
   137a0:	str	r0, [fp, #-136]	; 0xffffff78
   137a4:	str	r3, [fp, #-48]	; 0xffffffd0
   137a8:	ror	r3, sl, #31
   137ac:	str	r3, [fp, #-84]	; 0xffffffac
   137b0:	ror	r3, r6, #31
   137b4:	str	r3, [fp, #-80]	; 0xffffffb0
   137b8:	ror	r3, r1, #31
   137bc:	ldr	r1, [fp, #-184]	; 0xffffff48
   137c0:	eor	r3, r3, r7, ror #31
   137c4:	eor	r3, r3, r1, ror #31
   137c8:	eor	r0, r3, r5, ror #31
   137cc:	ror	r3, r4, #31
   137d0:	ldr	r4, [fp, #-116]	; 0xffffff8c
   137d4:	mov	r7, r0
   137d8:	str	r0, [fp, #-168]	; 0xffffff58
   137dc:	eor	r3, r3, r4, ror #31
   137e0:	ldr	r4, [fp, #-180]	; 0xffffff4c
   137e4:	eor	r3, r3, r4, ror #31
   137e8:	eor	r5, r3, r0, ror #31
   137ec:	ldr	r0, [fp, #-160]	; 0xffffff60
   137f0:	ror	r3, r1, #31
   137f4:	str	r5, [fp, #-152]	; 0xffffff68
   137f8:	eor	r3, r3, r0, ror #31
   137fc:	eor	r3, r3, r8, ror #31
   13800:	eor	r0, r3, r5, ror #31
   13804:	mov	r5, r9
   13808:	ror	r3, r0, #31
   1380c:	str	r0, [sp, #124]	; 0x7c
   13810:	str	r3, [fp, #-76]	; 0xffffffb4
   13814:	ror	r3, r9, #31
   13818:	str	r3, [fp, #-72]	; 0xffffffb8
   1381c:	ror	r3, lr, #31
   13820:	ldr	lr, [fp, #-164]	; 0xffffff5c
   13824:	eor	r3, r3, r1, ror #31
   13828:	eor	r3, r3, r7, ror #31
   1382c:	ldr	r7, [fp, #-148]	; 0xffffff6c
   13830:	mov	r1, lr
   13834:	ldr	r1, [sp, #52]	; 0x34
   13838:	eor	sl, r3, r6, ror #31
   1383c:	ror	r3, sl, #31
   13840:	str	r3, [fp, #-68]	; 0xffffffbc
   13844:	ror	r3, r4, #31
   13848:	eor	r3, r3, r7, ror #31
   1384c:	mov	r7, r0
   13850:	eor	r3, r3, lr, ror #31
   13854:	eor	r9, r3, r0, ror #31
   13858:	ror	r3, r9, #31
   1385c:	str	r3, [fp, #-64]	; 0xffffffc0
   13860:	ror	r3, ip, #31
   13864:	ldr	ip, [fp, #-152]	; 0xffffff68
   13868:	str	r3, [fp, #-60]	; 0xffffffc4
   1386c:	ror	r3, r2, #31
   13870:	eor	r3, r3, r4, ror #31
   13874:	ldr	r4, [fp, #-168]	; 0xffffff58
   13878:	eor	r3, r3, ip, ror #31
   1387c:	eor	r0, r3, sl, ror #31
   13880:	ror	r3, r0, #31
   13884:	mov	r2, r0
   13888:	str	r0, [sp, #136]	; 0x88
   1388c:	ldr	r0, [fp, #-140]	; 0xffffff74
   13890:	str	r3, [fp, #-56]	; 0xffffffc8
   13894:	ror	r3, r8, #31
   13898:	eor	r3, r3, r0, ror #31
   1389c:	ldr	r0, [fp, #-144]	; 0xffffff70
   138a0:	eor	r3, r3, r0, ror #31
   138a4:	eor	r0, r3, r9, ror #31
   138a8:	ror	r3, r0, #31
   138ac:	mov	r6, r0
   138b0:	str	r0, [sp, #140]	; 0x8c
   138b4:	str	r3, [fp, #-52]	; 0xffffffcc
   138b8:	ror	r3, r4, #31
   138bc:	eor	r3, r3, r8, ror #31
   138c0:	eor	r3, r3, r7, ror #31
   138c4:	eor	r0, r3, r2, ror #31
   138c8:	ror	r3, r0, #31
   138cc:	mov	r2, r0
   138d0:	str	r0, [sp, #144]	; 0x90
   138d4:	ldr	r0, [fp, #-100]	; 0xffffff9c
   138d8:	str	r3, [fp, #-44]	; 0xffffffd4
   138dc:	ror	r3, lr, #31
   138e0:	eor	r3, r3, r0, ror #31
   138e4:	eor	r3, r3, r5, ror #31
   138e8:	ldr	r5, [sp, #56]	; 0x38
   138ec:	eor	r0, r3, r6, ror #31
   138f0:	ror	r3, r0, #31
   138f4:	str	r0, [sp, #152]	; 0x98
   138f8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   138fc:	str	r3, [fp, #-40]	; 0xffffffd8
   13900:	ror	r0, r0, #31
   13904:	eor	r3, r0, r4, ror #31
   13908:	str	r0, [sp, #4]
   1390c:	ldr	r0, [fp, #-136]	; 0xffffff78
   13910:	ldr	r4, [sp, #28]
   13914:	eor	r3, r3, sl, ror #31
   13918:	eor	r0, r3, r0, ror #31
   1391c:	eor	r6, r5, r4
   13920:	ror	r3, r0, #31
   13924:	str	r0, [sp, #156]	; 0x9c
   13928:	ror	r0, ip, #31
   1392c:	mov	ip, r4
   13930:	str	r3, [fp, #-36]	; 0xffffffdc
   13934:	eor	r3, r0, lr, ror #31
   13938:	str	r0, [sp]
   1393c:	eor	r3, r3, r9, ror #31
   13940:	eor	r0, r3, r2, ror #31
   13944:	ldr	r2, [sp, #48]	; 0x30
   13948:	ror	r3, r0, #31
   1394c:	str	r0, [sp, #160]	; 0xa0
   13950:	movw	r0, #31129	; 0x7999
   13954:	str	r3, [fp, #-32]	; 0xffffffe0
   13958:	movt	r0, #23170	; 0x5a82
   1395c:	eor	r3, r4, r2, ror #2
   13960:	and	r6, r6, r2
   13964:	add	r7, r5, r0
   13968:	eor	r6, r6, r5
   1396c:	ldr	r5, [sp, #20]
   13970:	and	r3, r1, r3
   13974:	eor	r3, r3, r4
   13978:	add	r3, r7, r3
   1397c:	ldr	r7, [sp, #32]
   13980:	add	r3, r3, r7
   13984:	ldr	r7, [sp, #60]	; 0x3c
   13988:	add	r7, r7, r0
   1398c:	add	r7, r7, r6
   13990:	ldr	r6, [sp, #16]
   13994:	add	r7, r7, r1, ror #27
   13998:	add	r7, r7, r6
   1399c:	add	r6, ip, r0
   139a0:	add	r4, r3, r7, ror #27
   139a4:	ror	r3, r1, #2
   139a8:	add	r6, r6, r5
   139ac:	add	r5, r0, r2, ror #2
   139b0:	eor	r3, r3, r2, ror #2
   139b4:	and	r3, r7, r3
   139b8:	eor	r3, r3, r2, ror #2
   139bc:	ldr	r2, [sp, #188]	; 0xbc
   139c0:	add	r3, r6, r3
   139c4:	ror	r6, r7, #2
   139c8:	eor	r6, r6, r1, ror #2
   139cc:	add	r8, r3, r4, ror #27
   139d0:	add	r5, r5, r2
   139d4:	ldr	r2, [sp, #24]
   139d8:	and	r6, r4, r6
   139dc:	ror	r3, r8, #2
   139e0:	eor	r6, r6, r1, ror #2
   139e4:	eor	r3, r3, r4, ror #2
   139e8:	add	r6, r5, r6
   139ec:	add	r5, r6, r8, ror #27
   139f0:	add	r6, r0, r7, ror #2
   139f4:	and	r3, r5, r3
   139f8:	add	r6, r6, r2
   139fc:	eor	r3, r3, r4, ror #2
   13a00:	add	r3, r6, r3
   13a04:	ror	r6, r4, #2
   13a08:	eor	r6, r6, r7, ror #2
   13a0c:	and	r6, r8, r6
   13a10:	eor	r7, r6, r7, ror #2
   13a14:	add	r6, r0, r1, ror #2
   13a18:	ldr	r1, [sp, #40]	; 0x28
   13a1c:	add	r6, r6, r1
   13a20:	ldr	r1, [sp, #184]	; 0xb8
   13a24:	add	r7, r6, r7
   13a28:	add	r6, r7, r5, ror #27
   13a2c:	add	r7, r3, r6, ror #27
   13a30:	ror	r3, r5, #2
   13a34:	add	r2, r1, r0
   13a38:	ldr	r1, [sp, #44]	; 0x2c
   13a3c:	eor	r3, r3, r8, ror #2
   13a40:	add	r2, r2, r4, ror #2
   13a44:	and	r3, r6, r3
   13a48:	eor	r3, r3, r8, ror #2
   13a4c:	add	r2, r2, r3
   13a50:	add	r3, r1, r0
   13a54:	ldr	r1, [sp, #172]	; 0xac
   13a58:	add	r4, r2, r7, ror #27
   13a5c:	ror	r2, r6, #2
   13a60:	add	r3, r3, r8, ror #2
   13a64:	eor	r2, r2, r5, ror #2
   13a68:	and	r2, r7, r2
   13a6c:	eor	r2, r2, r5, ror #2
   13a70:	add	r2, r3, r2
   13a74:	add	r3, r1, r0
   13a78:	ldr	r1, [sp, #168]	; 0xa8
   13a7c:	add	r8, r2, r4, ror #27
   13a80:	ror	r2, r7, #2
   13a84:	add	r3, r3, r5, ror #2
   13a88:	eor	r2, r2, r6, ror #2
   13a8c:	and	r2, r4, r2
   13a90:	eor	r2, r2, r6, ror #2
   13a94:	add	r2, r3, r2
   13a98:	add	r3, r1, r0
   13a9c:	ldr	r1, [sp, #64]	; 0x40
   13aa0:	add	ip, r2, r8, ror #27
   13aa4:	ror	r2, r4, #2
   13aa8:	add	r3, r3, r6, ror #2
   13aac:	ldr	r6, [sp, #208]	; 0xd0
   13ab0:	eor	r2, r2, r7, ror #2
   13ab4:	and	r2, r8, r2
   13ab8:	eor	r2, r2, r7, ror #2
   13abc:	add	r6, r6, r0
   13ac0:	add	r2, r3, r2
   13ac4:	add	r3, r1, r0
   13ac8:	ldr	r1, [sp, #176]	; 0xb0
   13acc:	add	lr, r2, ip, ror #27
   13ad0:	ror	r2, r8, #2
   13ad4:	add	r3, r3, r7, ror #2
   13ad8:	eor	r2, r2, r4, ror #2
   13adc:	and	r2, ip, r2
   13ae0:	eor	r2, r2, r4, ror #2
   13ae4:	add	r2, r3, r2
   13ae8:	add	r3, r1, r0
   13aec:	ldr	r1, [sp, #36]	; 0x24
   13af0:	add	r7, r2, lr, ror #27
   13af4:	ror	r2, ip, #2
   13af8:	add	r3, r3, r4, ror #2
   13afc:	eor	r2, r2, r8, ror #2
   13b00:	and	r2, lr, r2
   13b04:	eor	r2, r2, r8, ror #2
   13b08:	add	r2, r3, r2
   13b0c:	add	r3, r1, r0
   13b10:	ldr	r1, [sp, #68]	; 0x44
   13b14:	add	r4, r2, r7, ror #27
   13b18:	ror	r2, lr, #2
   13b1c:	add	r3, r3, r8, ror #2
   13b20:	eor	r2, r2, ip, ror #2
   13b24:	and	r2, r7, r2
   13b28:	add	r1, r1, r0
   13b2c:	eor	r2, r2, ip, ror #2
   13b30:	add	r1, r1, ip, ror #2
   13b34:	movw	ip, #48348	; 0xbcdc
   13b38:	movt	ip, #36635	; 0x8f1b
   13b3c:	add	r2, r3, r2
   13b40:	ldr	r3, [sp, #180]	; 0xb4
   13b44:	add	r5, r2, r4, ror #27
   13b48:	ror	r2, r7, #2
   13b4c:	eor	r2, r2, lr, ror #2
   13b50:	and	r2, r4, r2
   13b54:	add	r3, r3, r0
   13b58:	eor	r2, r2, lr, ror #2
   13b5c:	add	r3, r3, lr, ror #2
   13b60:	add	r1, r1, r2
   13b64:	ror	r2, r4, #2
   13b68:	eor	r2, r2, r7, ror #2
   13b6c:	add	r1, r1, r5, ror #27
   13b70:	and	r2, r5, r2
   13b74:	eor	r2, r2, r7, ror #2
   13b78:	add	r7, r6, r7, ror #2
   13b7c:	ldr	r6, [sp, #72]	; 0x48
   13b80:	add	r2, r3, r2
   13b84:	ror	r3, r5, #2
   13b88:	eor	r3, r3, r4, ror #2
   13b8c:	add	r2, r2, r1, ror #27
   13b90:	add	r6, r0, r6, ror #31
   13b94:	and	r3, r1, r3
   13b98:	eor	r3, r3, r4, ror #2
   13b9c:	add	r6, r6, r4, ror #2
   13ba0:	ldr	r4, [fp, #-132]	; 0xffffff7c
   13ba4:	add	r3, r7, r3
   13ba8:	ror	r7, r1, #2
   13bac:	eor	r7, r7, r5, ror #2
   13bb0:	add	r3, r3, r2, ror #27
   13bb4:	add	r4, r0, r4, ror #31
   13bb8:	and	r7, r2, r7
   13bbc:	eor	r7, r7, r5, ror #2
   13bc0:	add	r5, r4, r5, ror #2
   13bc4:	ldr	r4, [sp, #220]	; 0xdc
   13bc8:	add	r7, r6, r7
   13bcc:	ror	r6, r2, #2
   13bd0:	eor	r6, r6, r1, ror #2
   13bd4:	add	r7, r7, r3, ror #27
   13bd8:	add	r4, r0, r4, ror #31
   13bdc:	and	r6, r3, r6
   13be0:	eor	r6, r6, r1, ror #2
   13be4:	add	r1, r4, r1, ror #2
   13be8:	ldr	r4, [sp, #76]	; 0x4c
   13bec:	add	r6, r5, r6
   13bf0:	ror	r5, r3, #2
   13bf4:	eor	r5, r5, r2, ror #2
   13bf8:	add	r6, r6, r7, ror #27
   13bfc:	add	r4, r0, r4, ror #31
   13c00:	movw	r0, #60321	; 0xeba1
   13c04:	and	r5, r7, r5
   13c08:	movt	r0, #28377	; 0x6ed9
   13c0c:	eor	r5, r5, r2, ror #2
   13c10:	add	r2, r4, r2, ror #2
   13c14:	ldr	r4, [sp, #192]	; 0xc0
   13c18:	add	r1, r1, r5
   13c1c:	ror	r5, r7, #2
   13c20:	eor	r5, r5, r3, ror #2
   13c24:	add	r1, r1, r6, ror #27
   13c28:	add	r4, r0, r4, ror #31
   13c2c:	and	r5, r6, r5
   13c30:	eor	r5, r5, r3, ror #2
   13c34:	add	r3, r4, r3, ror #2
   13c38:	ldr	r4, [fp, #-220]	; 0xffffff24
   13c3c:	add	r2, r2, r5
   13c40:	ror	r5, r6, #2
   13c44:	eor	r5, r5, r7, ror #2
   13c48:	add	r2, r2, r1, ror #27
   13c4c:	add	r4, r0, r4, ror #31
   13c50:	eor	r5, r5, r1
   13c54:	add	r7, r4, r7, ror #2
   13c58:	ldr	r4, [sp, #80]	; 0x50
   13c5c:	add	r3, r3, r5
   13c60:	ror	r5, r1, #2
   13c64:	eor	r5, r5, r6, ror #2
   13c68:	add	r3, r3, r2, ror #27
   13c6c:	eor	r5, r5, r2
   13c70:	add	r4, r0, r4, ror #31
   13c74:	add	r7, r7, r5
   13c78:	ror	r5, r2, #2
   13c7c:	eor	r5, r5, r1, ror #2
   13c80:	add	r7, r7, r3, ror #27
   13c84:	add	r6, r4, r6, ror #2
   13c88:	ldr	r4, [sp, #196]	; 0xc4
   13c8c:	eor	r5, r5, r3
   13c90:	add	r6, r6, r5
   13c94:	ror	r5, r3, #2
   13c98:	eor	r5, r5, r2, ror #2
   13c9c:	add	r6, r6, r7, ror #27
   13ca0:	add	r4, r0, r4, ror #31
   13ca4:	eor	r5, r5, r7
   13ca8:	add	r1, r4, r1, ror #2
   13cac:	ldr	r4, [fp, #-212]	; 0xffffff2c
   13cb0:	add	r1, r1, r5
   13cb4:	ror	r5, r7, #2
   13cb8:	eor	r5, r5, r3, ror #2
   13cbc:	add	r1, r1, r6, ror #27
   13cc0:	add	r4, r0, r4, ror #31
   13cc4:	eor	r5, r5, r6
   13cc8:	add	r2, r4, r2, ror #2
   13ccc:	ldr	r4, [sp, #84]	; 0x54
   13cd0:	add	r2, r2, r5
   13cd4:	ror	r5, r6, #2
   13cd8:	eor	r5, r5, r7, ror #2
   13cdc:	add	r2, r2, r1, ror #27
   13ce0:	add	r4, r0, r4, ror #31
   13ce4:	eor	r5, r5, r1
   13ce8:	add	r3, r4, r3, ror #2
   13cec:	ldr	r4, [sp, #204]	; 0xcc
   13cf0:	add	r3, r3, r5
   13cf4:	ror	r5, r1, #2
   13cf8:	eor	r5, r5, r6, ror #2
   13cfc:	add	r3, r3, r2, ror #27
   13d00:	add	r4, r0, r4, ror #31
   13d04:	eor	r5, r5, r2
   13d08:	add	r7, r4, r7, ror #2
   13d0c:	ldr	r4, [fp, #-196]	; 0xffffff3c
   13d10:	add	r7, r7, r5
   13d14:	ror	r5, r2, #2
   13d18:	eor	r5, r5, r1, ror #2
   13d1c:	add	r7, r7, r3, ror #27
   13d20:	add	r4, r0, r4, ror #31
   13d24:	eor	r5, r5, r3
   13d28:	add	r6, r4, r6, ror #2
   13d2c:	ldr	r4, [sp, #88]	; 0x58
   13d30:	add	r6, r6, r5
   13d34:	ror	r5, r3, #2
   13d38:	eor	r5, r5, r2, ror #2
   13d3c:	add	r6, r6, r7, ror #27
   13d40:	add	r4, r0, r4, ror #31
   13d44:	eor	r5, r5, r7
   13d48:	add	r1, r4, r1, ror #2
   13d4c:	ldr	r4, [sp, #212]	; 0xd4
   13d50:	add	r1, r1, r5
   13d54:	ror	r5, r7, #2
   13d58:	eor	r5, r5, r3, ror #2
   13d5c:	add	r1, r1, r6, ror #27
   13d60:	add	r4, r0, r4, ror #31
   13d64:	eor	r5, r5, r6
   13d68:	add	r2, r4, r2, ror #2
   13d6c:	ldr	r4, [fp, #-208]	; 0xffffff30
   13d70:	add	r2, r2, r5
   13d74:	ror	r5, r6, #2
   13d78:	eor	r5, r5, r7, ror #2
   13d7c:	add	r2, r2, r1, ror #27
   13d80:	add	r4, r0, r4, ror #31
   13d84:	eor	r5, r5, r1
   13d88:	add	r3, r4, r3, ror #2
   13d8c:	ldr	r4, [sp, #92]	; 0x5c
   13d90:	add	r3, r3, r5
   13d94:	ror	r5, r1, #2
   13d98:	eor	r5, r5, r6, ror #2
   13d9c:	add	r3, r3, r2, ror #27
   13da0:	add	r4, r0, r4, ror #31
   13da4:	eor	r5, r5, r2
   13da8:	add	r7, r4, r7, ror #2
   13dac:	ldr	r4, [sp, #200]	; 0xc8
   13db0:	add	r7, r7, r5
   13db4:	ror	r5, r2, #2
   13db8:	eor	r5, r5, r1, ror #2
   13dbc:	add	r7, r7, r3, ror #27
   13dc0:	add	r4, r0, r4, ror #31
   13dc4:	eor	r5, r5, r3
   13dc8:	add	r6, r4, r6, ror #2
   13dcc:	ldr	r4, [sp, #216]	; 0xd8
   13dd0:	add	r6, r6, r5
   13dd4:	ror	r5, r3, #2
   13dd8:	eor	r5, r5, r2, ror #2
   13ddc:	add	r6, r6, r7, ror #27
   13de0:	add	r4, r0, r4, ror #31
   13de4:	eor	r5, r5, r7
   13de8:	add	r1, r4, r1, ror #2
   13dec:	ldr	r4, [sp, #104]	; 0x68
   13df0:	add	r1, r1, r5
   13df4:	add	r5, r1, r6, ror #27
   13df8:	ror	r1, r7, #2
   13dfc:	add	r4, r0, r4, ror #31
   13e00:	eor	r1, r1, r3, ror #2
   13e04:	add	r2, r4, r2, ror #2
   13e08:	ldr	r4, [fp, #-128]	; 0xffffff80
   13e0c:	eor	r1, r1, r6
   13e10:	add	r1, r2, r1
   13e14:	ror	r2, r6, #2
   13e18:	eor	r2, r2, r7, ror #2
   13e1c:	add	r1, r1, r5, ror #27
   13e20:	add	r4, r0, r4, ror #31
   13e24:	eor	r2, r2, r5
   13e28:	add	r3, r4, r3, ror #2
   13e2c:	add	r2, r3, r2
   13e30:	ldr	r3, [sp, #100]	; 0x64
   13e34:	add	r4, r2, r1, ror #27
   13e38:	ror	r2, r5, #2
   13e3c:	eor	r2, r2, r6, ror #2
   13e40:	add	r3, r0, r3, ror #31
   13e44:	eor	r2, r2, r1
   13e48:	add	r3, r3, r7, ror #2
   13e4c:	ldr	r7, [fp, #-188]	; 0xffffff44
   13e50:	add	r2, r3, r2
   13e54:	ror	r3, r1, #2
   13e58:	eor	r3, r3, r5, ror #2
   13e5c:	add	r2, r2, r4, ror #27
   13e60:	add	r7, r0, r7, ror #31
   13e64:	eor	r3, r3, r4
   13e68:	add	r7, r7, r6, ror #2
   13e6c:	ldr	r6, [fp, #-120]	; 0xffffff88
   13e70:	add	r3, r7, r3
   13e74:	ror	r7, r4, #2
   13e78:	eor	r7, r7, r1, ror #2
   13e7c:	add	r3, r3, r2, ror #27
   13e80:	add	r6, r0, r6, ror #31
   13e84:	eor	r7, r7, r2
   13e88:	add	r6, r6, r5, ror #2
   13e8c:	add	r7, r6, r7
   13e90:	add	r7, r7, r3, ror #27
   13e94:	orr	r6, r7, r3, ror #2
   13e98:	and	r5, r7, r3, ror #2
   13e9c:	and	r6, r6, r2, ror #2
   13ea0:	orr	r6, r6, r5
   13ea4:	ldr	r5, [fp, #-200]	; 0xffffff38
   13ea8:	add	r5, ip, r5, ror #31
   13eac:	add	r5, r5, r4, ror #2
   13eb0:	add	r6, r5, r6
   13eb4:	ror	r5, r2, #2
   13eb8:	eor	r5, r5, r4, ror #2
   13ebc:	ldr	r4, [sp, #108]	; 0x6c
   13ec0:	eor	r5, r5, r3
   13ec4:	add	r4, r0, r4, ror #31
   13ec8:	ldr	r0, [fp, #-124]	; 0xffffff84
   13ecc:	add	r1, r4, r1, ror #2
   13ed0:	add	r1, r1, r5
   13ed4:	add	r5, r1, r7, ror #27
   13ed8:	add	r1, r6, r5, ror #27
   13edc:	orr	r6, r5, r7, ror #2
   13ee0:	and	r4, r5, r7, ror #2
   13ee4:	and	r6, r6, r3, ror #2
   13ee8:	orr	r6, r6, r4
   13eec:	add	r4, ip, r0, ror #31
   13ef0:	ldr	r0, [sp, #116]	; 0x74
   13ef4:	add	r2, r4, r2, ror #2
   13ef8:	and	r4, r1, r5, ror #2
   13efc:	add	r2, r2, r6
   13f00:	orr	r6, r1, r5, ror #2
   13f04:	add	r2, r2, r1, ror #27
   13f08:	and	r6, r6, r7, ror #2
   13f0c:	orr	r6, r6, r4
   13f10:	add	r4, ip, r0, ror #31
   13f14:	ldr	r0, [sp, #96]	; 0x60
   13f18:	add	r3, r4, r3, ror #2
   13f1c:	and	r4, r2, r1, ror #2
   13f20:	add	r3, r3, r6
   13f24:	orr	r6, r2, r1, ror #2
   13f28:	add	r3, r3, r2, ror #27
   13f2c:	and	r6, r6, r5, ror #2
   13f30:	orr	r6, r6, r4
   13f34:	add	r4, ip, r0, ror #31
   13f38:	ldr	r0, [fp, #-112]	; 0xffffff90
   13f3c:	add	r7, r4, r7, ror #2
   13f40:	and	r4, r3, r2, ror #2
   13f44:	add	r7, r7, r6
   13f48:	orr	r6, r3, r2, ror #2
   13f4c:	add	r7, r7, r3, ror #27
   13f50:	and	r6, r6, r1, ror #2
   13f54:	orr	r6, r6, r4
   13f58:	add	r4, ip, r0, ror #31
   13f5c:	ldr	r0, [fp, #-204]	; 0xffffff34
   13f60:	add	r5, r4, r5, ror #2
   13f64:	and	r4, r7, r3, ror #2
   13f68:	add	r6, r5, r6
   13f6c:	orr	r5, r7, r3, ror #2
   13f70:	add	r6, r6, r7, ror #27
   13f74:	and	r5, r5, r2, ror #2
   13f78:	orr	r5, r5, r4
   13f7c:	add	r4, ip, r0, ror #31
   13f80:	ldr	r0, [fp, #-216]	; 0xffffff28
   13f84:	add	r1, r4, r1, ror #2
   13f88:	and	r4, r6, r7, ror #2
   13f8c:	add	r1, r1, r5
   13f90:	orr	r5, r6, r7, ror #2
   13f94:	add	r1, r1, r6, ror #27
   13f98:	and	r5, r5, r3, ror #2
   13f9c:	orr	r5, r5, r4
   13fa0:	add	r4, ip, r0, ror #31
   13fa4:	ldr	r0, [fp, #-108]	; 0xffffff94
   13fa8:	add	r2, r4, r2, ror #2
   13fac:	and	r4, r1, r6, ror #2
   13fb0:	add	r2, r2, r5
   13fb4:	orr	r5, r1, r6, ror #2
   13fb8:	add	r2, r2, r1, ror #27
   13fbc:	and	r5, r5, r7, ror #2
   13fc0:	orr	r5, r5, r4
   13fc4:	add	r4, ip, r0, ror #31
   13fc8:	ldr	r0, [fp, #-192]	; 0xffffff40
   13fcc:	add	r3, r4, r3, ror #2
   13fd0:	and	r4, r2, r1, ror #2
   13fd4:	add	r3, r3, r5
   13fd8:	orr	r5, r2, r1, ror #2
   13fdc:	add	r3, r3, r2, ror #27
   13fe0:	and	r5, r5, r6, ror #2
   13fe4:	orr	r5, r5, r4
   13fe8:	add	r4, ip, r0, ror #31
   13fec:	ldr	r0, [fp, #-116]	; 0xffffff8c
   13ff0:	add	r7, r4, r7, ror #2
   13ff4:	and	r4, r3, r2, ror #2
   13ff8:	add	r7, r7, r5
   13ffc:	orr	r5, r3, r2, ror #2
   14000:	add	r7, r7, r3, ror #27
   14004:	and	r5, r5, r1, ror #2
   14008:	orr	r5, r5, r4
   1400c:	add	r4, ip, r0, ror #31
   14010:	ldr	r0, [fp, #-156]	; 0xffffff64
   14014:	add	r6, r4, r6, ror #2
   14018:	and	r4, r7, r3, ror #2
   1401c:	add	r6, r6, r5
   14020:	orr	r5, r7, r3, ror #2
   14024:	add	r6, r6, r7, ror #27
   14028:	and	r5, r5, r2, ror #2
   1402c:	orr	r5, r5, r4
   14030:	add	r4, ip, r0, ror #31
   14034:	ldr	r0, [sp, #112]	; 0x70
   14038:	add	r1, r4, r1, ror #2
   1403c:	and	r4, r6, r7, ror #2
   14040:	add	r1, r1, r5
   14044:	orr	r5, r6, r7, ror #2
   14048:	add	r1, r1, r6, ror #27
   1404c:	and	r5, r5, r3, ror #2
   14050:	orr	r5, r5, r4
   14054:	add	r4, ip, r0, ror #31
   14058:	ldr	r0, [fp, #-160]	; 0xffffff60
   1405c:	add	r2, r4, r2, ror #2
   14060:	and	r4, r1, r6, ror #2
   14064:	add	r2, r2, r5
   14068:	orr	r5, r1, r6, ror #2
   1406c:	add	r2, r2, r1, ror #27
   14070:	and	r5, r5, r7, ror #2
   14074:	orr	r5, r5, r4
   14078:	add	r4, ip, r0, ror #31
   1407c:	ldr	r0, [fp, #-104]	; 0xffffff98
   14080:	add	r3, r4, r3, ror #2
   14084:	and	r4, r2, r1, ror #2
   14088:	add	r3, r3, r5
   1408c:	orr	r5, r2, r1, ror #2
   14090:	add	r3, r3, r2, ror #27
   14094:	and	r5, r5, r6, ror #2
   14098:	orr	r5, r5, r4
   1409c:	add	r4, ip, r0, ror #31
   140a0:	ldr	r0, [fp, #-184]	; 0xffffff48
   140a4:	add	r7, r4, r7, ror #2
   140a8:	and	r4, r3, r2, ror #2
   140ac:	add	r7, r7, r5
   140b0:	orr	r5, r3, r2, ror #2
   140b4:	add	r7, r7, r3, ror #27
   140b8:	and	r5, r5, r1, ror #2
   140bc:	orr	r5, r5, r4
   140c0:	add	r4, ip, r0, ror #31
   140c4:	ldr	r0, [fp, #-148]	; 0xffffff6c
   140c8:	add	r6, r4, r6, ror #2
   140cc:	and	r4, r7, r3, ror #2
   140d0:	add	r6, r6, r5
   140d4:	orr	r5, r7, r3, ror #2
   140d8:	add	r6, r6, r7, ror #27
   140dc:	and	r5, r5, r2, ror #2
   140e0:	orr	r5, r5, r4
   140e4:	add	r4, ip, r0, ror #31
   140e8:	ldr	r0, [fp, #-176]	; 0xffffff50
   140ec:	add	r1, r4, r1, ror #2
   140f0:	and	r4, r6, r7, ror #2
   140f4:	add	r1, r1, r5
   140f8:	orr	r5, r6, r7, ror #2
   140fc:	add	r1, r1, r6, ror #27
   14100:	and	r5, r5, r3, ror #2
   14104:	orr	r5, r5, r4
   14108:	add	r4, ip, r0, ror #31
   1410c:	ldr	r0, [fp, #-180]	; 0xffffff4c
   14110:	add	r2, r4, r2, ror #2
   14114:	and	r4, r1, r6, ror #2
   14118:	add	r2, r2, r5
   1411c:	orr	r5, r1, r6, ror #2
   14120:	add	r2, r2, r1, ror #27
   14124:	and	r5, r5, r7, ror #2
   14128:	orr	r5, r5, r4
   1412c:	add	r4, ip, r0, ror #31
   14130:	ldr	r0, [fp, #-140]	; 0xffffff74
   14134:	add	r3, r4, r3, ror #2
   14138:	and	r4, r2, r1, ror #2
   1413c:	add	r3, r3, r5
   14140:	orr	r5, r2, r1, ror #2
   14144:	add	r3, r3, r2, ror #27
   14148:	and	r5, r5, r6, ror #2
   1414c:	orr	r5, r5, r4
   14150:	add	r4, ip, r0, ror #31
   14154:	ldr	r0, [sp, #120]	; 0x78
   14158:	add	r7, r4, r7, ror #2
   1415c:	and	r4, r3, r2, ror #2
   14160:	add	r7, r7, r5
   14164:	orr	r5, r3, r2, ror #2
   14168:	add	r7, r7, r3, ror #27
   1416c:	and	r5, r5, r1, ror #2
   14170:	orr	r5, r5, r4
   14174:	add	r4, ip, r0, ror #31
   14178:	movw	r0, #49622	; 0xc1d6
   1417c:	movt	r0, #51810	; 0xca62
   14180:	add	r6, r4, r6, ror #2
   14184:	ldr	r4, [fp, #-172]	; 0xffffff54
   14188:	add	r6, r6, r5
   1418c:	ror	r5, r3, #2
   14190:	eor	r5, r5, r2, ror #2
   14194:	add	r6, r6, r7, ror #27
   14198:	add	r4, r0, r4, ror #31
   1419c:	eor	r5, r5, r7
   141a0:	add	r1, r4, r1, ror #2
   141a4:	ldr	r4, [fp, #-100]	; 0xffffff9c
   141a8:	add	r1, r1, r5
   141ac:	ror	r5, r7, #2
   141b0:	eor	r5, r5, r3, ror #2
   141b4:	add	r1, r1, r6, ror #27
   141b8:	add	r4, r0, r4, ror #31
   141bc:	eor	r5, r5, r6
   141c0:	add	r2, r4, r2, ror #2
   141c4:	ldr	r4, [fp, #-168]	; 0xffffff58
   141c8:	add	r2, r2, r5
   141cc:	ror	r5, r6, #2
   141d0:	eor	r5, r5, r7, ror #2
   141d4:	add	r2, r2, r1, ror #27
   141d8:	add	r4, r0, r4, ror #31
   141dc:	eor	r5, r5, r1
   141e0:	add	r3, r4, r3, ror #2
   141e4:	ldr	r4, [fp, #-164]	; 0xffffff5c
   141e8:	add	r3, r3, r5
   141ec:	ror	r5, r1, #2
   141f0:	eor	r5, r5, r6, ror #2
   141f4:	add	r3, r3, r2, ror #27
   141f8:	add	r4, r0, r4, ror #31
   141fc:	eor	r5, r5, r2
   14200:	add	r7, r4, r7, ror #2
   14204:	ldr	r4, [fp, #-96]	; 0xffffffa0
   14208:	add	r7, r7, r5
   1420c:	ror	r5, r2, #2
   14210:	eor	r5, r5, r1, ror #2
   14214:	add	r7, r7, r3, ror #27
   14218:	add	r4, r0, r4, ror #31
   1421c:	eor	r5, r5, r3
   14220:	add	r6, r4, r6, ror #2
   14224:	ldr	r4, [fp, #-152]	; 0xffffff68
   14228:	add	r6, r6, r5
   1422c:	ror	r5, r3, #2
   14230:	eor	r5, r5, r2, ror #2
   14234:	add	r6, r6, r7, ror #27
   14238:	add	r4, r0, r4, ror #31
   1423c:	eor	r5, r5, r7
   14240:	add	r1, r4, r1, ror #2
   14244:	ldr	r4, [fp, #-144]	; 0xffffff70
   14248:	add	r1, r1, r5
   1424c:	ror	r5, r7, #2
   14250:	eor	r5, r5, r3, ror #2
   14254:	add	r1, r1, r6, ror #27
   14258:	add	r4, r0, r4, ror #31
   1425c:	eor	r5, r5, r6
   14260:	add	r2, r4, r2, ror #2
   14264:	ldr	r4, [sp, #132]	; 0x84
   14268:	add	r2, r2, r5
   1426c:	ror	r5, r6, #2
   14270:	eor	r5, r5, r7, ror #2
   14274:	add	r2, r2, r1, ror #27
   14278:	add	r4, r0, r4, ror #31
   1427c:	eor	r5, r5, r1
   14280:	add	r3, r4, r3, ror #2
   14284:	ldr	r4, [sp, #124]	; 0x7c
   14288:	add	r3, r3, r5
   1428c:	ror	r5, r1, #2
   14290:	eor	r5, r5, r6, ror #2
   14294:	add	r3, r3, r2, ror #27
   14298:	add	r4, r0, r4, ror #31
   1429c:	eor	r5, r5, r2
   142a0:	add	r7, r4, r7, ror #2
   142a4:	ldr	r4, [sp, #128]	; 0x80
   142a8:	add	r7, r7, r5
   142ac:	ror	r5, r2, #2
   142b0:	eor	r5, r5, r1, ror #2
   142b4:	add	r7, r7, r3, ror #27
   142b8:	add	r4, r0, r4, ror #31
   142bc:	eor	r5, r5, r3
   142c0:	add	r6, r4, r6, ror #2
   142c4:	add	r4, r0, sl, ror #31
   142c8:	add	r6, r6, r5
   142cc:	ror	r5, r3, #2
   142d0:	add	r1, r4, r1, ror #2
   142d4:	add	r4, r0, r9, ror #31
   142d8:	eor	r5, r5, r2, ror #2
   142dc:	add	r6, r6, r7, ror #27
   142e0:	add	r2, r4, r2, ror #2
   142e4:	eor	r5, r5, r7
   142e8:	add	r1, r1, r5
   142ec:	add	r5, r1, r6, ror #27
   142f0:	ror	r1, r7, #2
   142f4:	eor	r1, r1, r3, ror #2
   142f8:	eor	r1, r1, r6
   142fc:	add	r1, r2, r1
   14300:	ldr	r2, [sp, #148]	; 0x94
   14304:	add	r4, r1, r5, ror #27
   14308:	ror	r1, r6, #2
   1430c:	eor	r1, r1, r7, ror #2
   14310:	add	r2, r0, r2, ror #31
   14314:	eor	r1, r1, r5
   14318:	add	r2, r2, r3, ror #2
   1431c:	add	r1, r2, r1
   14320:	ldr	r2, [sp, #136]	; 0x88
   14324:	add	r3, r1, r4, ror #27
   14328:	ror	r1, r5, #2
   1432c:	eor	r1, r1, r6, ror #2
   14330:	add	r2, r0, r2, ror #31
   14334:	eor	r1, r1, r4
   14338:	add	r2, r2, r7, ror #2
   1433c:	add	r1, r2, r1
   14340:	ldr	r2, [sp, #140]	; 0x8c
   14344:	add	r7, r1, r3, ror #27
   14348:	ror	r1, r4, #2
   1434c:	eor	r1, r1, r5, ror #2
   14350:	add	r2, r0, r2, ror #31
   14354:	eor	r1, r1, r3
   14358:	add	r2, r2, r6, ror #2
   1435c:	ldr	r6, [fp, #-136]	; 0xffffff78
   14360:	add	r1, r2, r1
   14364:	ror	r2, r3, #2
   14368:	eor	r2, r2, r4, ror #2
   1436c:	add	r1, r1, r7, ror #27
   14370:	add	r6, r0, r6, ror #31
   14374:	eor	r2, r2, r7
   14378:	add	r6, r6, r5, ror #2
   1437c:	ldr	r5, [sp, #144]	; 0x90
   14380:	add	r2, r6, r2
   14384:	ror	r6, r7, #2
   14388:	eor	r6, r6, r3, ror #2
   1438c:	add	r2, r2, r1, ror #27
   14390:	add	r5, r0, r5, ror #31
   14394:	eor	r6, r6, r1
   14398:	add	r5, r5, r4, ror #2
   1439c:	ldr	r4, [sp, #152]	; 0x98
   143a0:	add	r6, r5, r6
   143a4:	ror	r5, r1, #2
   143a8:	eor	r5, r5, r7, ror #2
   143ac:	add	r6, r6, r2, ror #27
   143b0:	add	r4, r0, r4, ror #31
   143b4:	eor	r5, r5, r2
   143b8:	add	r3, r4, r3, ror #2
   143bc:	ldr	r4, [sp, #156]	; 0x9c
   143c0:	add	r3, r3, r5
   143c4:	ror	r5, r2, #2
   143c8:	eor	r5, r5, r1, ror #2
   143cc:	add	r3, r3, r6, ror #27
   143d0:	add	r4, r0, r4, ror #31
   143d4:	eor	r5, r5, r6
   143d8:	add	r7, r4, r7, ror #2
   143dc:	add	r7, r7, r5
   143e0:	ror	r5, r6, #2
   143e4:	eor	r5, r5, r2, ror #2
   143e8:	add	r7, r7, r3, ror #27
   143ec:	eor	ip, r5, r3
   143f0:	ldr	r5, [sp, #160]	; 0xa0
   143f4:	add	r4, r0, r5, ror #31
   143f8:	ldr	r0, [sp, #12]
   143fc:	ldm	r0, {r5, lr}
   14400:	add	sl, r0, #8
   14404:	ldm	sl, {r8, r9, sl}
   14408:	add	r6, r9, r6, ror #2
   1440c:	add	r4, r4, r5
   14410:	add	r1, r4, r1, ror #2
   14414:	add	r3, r8, r3, ror #2
   14418:	add	r1, r1, ip
   1441c:	add	r5, r1, r7, ror #27
   14420:	add	r1, sl, r2, ror #2
   14424:	add	r7, r7, lr
   14428:	ldr	r2, [sp, #8]
   1442c:	stm	r0, {r5, r7}
   14430:	str	r3, [r0, #8]
   14434:	str	r6, [r0, #12]
   14438:	str	r1, [r0, #16]
   1443c:	ldr	r0, [sp, #164]	; 0xa4
   14440:	add	r0, r0, #64	; 0x40
   14444:	cmp	r0, r2
   14448:	bcc	13104 <dcngettext@plt+0x1fec>
   1444c:	ldr	r0, [sp]
   14450:	str	r0, [fp, #-88]	; 0xffffffa8
   14454:	ldr	r0, [sp, #4]
   14458:	str	r0, [fp, #-92]	; 0xffffffa4
   1445c:	sub	sp, fp, #28
   14460:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14464:	nop	{0}
   14468:	nop	{0}
   1446c:	nop	{0}
   14470:	push	{r4, r5, r6, r7, fp, lr}
   14474:	add	fp, sp, #16
   14478:	sub	sp, sp, #160	; 0xa0
   1447c:	mov	r4, r2
   14480:	add	r2, pc, #248	; 0xf8
   14484:	mov	r5, sp
   14488:	vld1.64	{d16-d17}, [r2 :128]
   1448c:	add	r2, pc, #252	; 0xfc
   14490:	mov	r6, r5
   14494:	vld1.64	{d18-d19}, [r2 :128]
   14498:	add	r2, r5, #16
   1449c:	vst1.32	{d16-d17}, [r2]
   144a0:	mov	r2, #24
   144a4:	vst1.32	{d18-d19}, [r6], r2
   144a8:	mov	r2, r5
   144ac:	bl	145a0 <dcngettext@plt+0x3488>
   144b0:	ldr	r1, [sp, #28]
   144b4:	ldr	r3, [sp, #20]
   144b8:	mov	r7, #32
   144bc:	add	r0, r3, r1
   144c0:	cmp	r1, #56	; 0x38
   144c4:	str	r0, [sp, #20]
   144c8:	movwcc	r7, #16
   144cc:	cmp	r0, r3
   144d0:	mvn	r3, #7
   144d4:	ldr	r2, [r6]
   144d8:	add	r3, r3, r7, lsl #2
   144dc:	add	r6, r5, #32
   144e0:	addcc	r2, r2, #1
   144e4:	strcc	r2, [sp, #24]
   144e8:	lsl	r2, r2, #3
   144ec:	orr	r2, r2, r0, lsr #29
   144f0:	lsl	r0, r0, #3
   144f4:	rev	r0, r0
   144f8:	rev	r2, r2
   144fc:	str	r2, [r6, r3]
   14500:	add	r2, r6, r7, lsl #2
   14504:	str	r0, [r2, #-4]
   14508:	add	r0, r6, r1
   1450c:	sub	r2, r3, r1
   14510:	movw	r1, #34824	; 0x8808
   14514:	movt	r1, #1
   14518:	bl	10f08 <memcpy@plt>
   1451c:	lsl	r1, r7, #2
   14520:	mov	r0, r6
   14524:	mov	r2, r5
   14528:	bl	130b4 <dcngettext@plt+0x1f9c>
   1452c:	ldr	r0, [sp]
   14530:	rev	r0, r0
   14534:	str	r0, [r4]
   14538:	ldr	r0, [sp, #4]
   1453c:	rev	r0, r0
   14540:	str	r0, [r4, #4]
   14544:	ldr	r0, [sp, #8]
   14548:	rev	r0, r0
   1454c:	str	r0, [r4, #8]
   14550:	ldr	r0, [sp, #12]
   14554:	rev	r0, r0
   14558:	str	r0, [r4, #12]
   1455c:	ldr	r0, [sp, #16]
   14560:	rev	r0, r0
   14564:	str	r0, [r4, #16]
   14568:	mov	r0, r4
   1456c:	sub	sp, fp, #16
   14570:	pop	{r4, r5, r6, r7, fp, pc}
   14574:	nop	{0}
   14578:	nop	{0}
   1457c:	nop	{0}
   14580:	bicsgt	lr, r2, #240, 2	; 0x3c
	...
   14590:	strbvs	r2, [r5, -r1, lsl #6]
   14594:	svc	0x00cdab89
   14598:	ldmls	sl!, {r1, r2, r3, r4, r5, r6, r7, sl, fp, ip, lr, pc}
   1459c:	eorsne	r5, r2, r6, ror r4
   145a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   145a4:	add	fp, sp, #28
   145a8:	sub	sp, sp, #12
   145ac:	ldr	r5, [r2, #28]
   145b0:	mov	r4, r2
   145b4:	mov	r8, r1
   145b8:	mov	r6, r0
   145bc:	cmp	r5, #0
   145c0:	beq	14630 <dcngettext@plt+0x3518>
   145c4:	rsb	r7, r5, #128	; 0x80
   145c8:	add	r9, r4, #32
   145cc:	mov	r1, r6
   145d0:	cmp	r7, r8
   145d4:	add	r0, r9, r5
   145d8:	movhi	r7, r8
   145dc:	mov	r2, r7
   145e0:	bl	10f08 <memcpy@plt>
   145e4:	ldr	r0, [r4, #28]
   145e8:	add	r0, r0, r7
   145ec:	cmp	r0, #65	; 0x41
   145f0:	str	r0, [r4, #28]
   145f4:	bcc	14628 <dcngettext@plt+0x3510>
   145f8:	bic	r1, r0, #63	; 0x3f
   145fc:	mov	r0, r9
   14600:	mov	r2, r4
   14604:	bl	130b4 <dcngettext@plt+0x1f9c>
   14608:	ldr	r0, [r4, #28]
   1460c:	and	r2, r0, #63	; 0x3f
   14610:	add	r0, r7, r5
   14614:	bic	r0, r0, #63	; 0x3f
   14618:	str	r2, [r4, #28]
   1461c:	add	r1, r9, r0
   14620:	mov	r0, r9
   14624:	bl	10f08 <memcpy@plt>
   14628:	sub	r8, r8, r7
   1462c:	add	r6, r6, r7
   14630:	cmp	r8, #64	; 0x40
   14634:	bcc	146d4 <dcngettext@plt+0x35bc>
   14638:	tst	r6, #3
   1463c:	beq	146e8 <dcngettext@plt+0x35d0>
   14640:	cmp	r8, #65	; 0x41
   14644:	bcc	14710 <dcngettext@plt+0x35f8>
   14648:	add	r5, r4, #32
   1464c:	sub	r0, r8, #65	; 0x41
   14650:	mov	r7, r6
   14654:	str	r8, [sp, #8]
   14658:	bic	r0, r0, #63	; 0x3f
   1465c:	add	sl, r5, #32
   14660:	add	r9, r5, #16
   14664:	str	r0, [sp, #4]
   14668:	mov	r0, #64	; 0x40
   1466c:	add	r1, r6, #48	; 0x30
   14670:	mov	r2, r4
   14674:	vld1.8	{d16-d17}, [r7], r0
   14678:	add	r0, r6, #32
   1467c:	vld1.8	{d18-d19}, [r1]
   14680:	mov	r1, #48	; 0x30
   14684:	vld1.8	{d20-d21}, [r0]
   14688:	mov	r0, r5
   1468c:	vst1.8	{d16-d17}, [r0], r1
   14690:	add	r1, r6, #16
   14694:	vld1.8	{d16-d17}, [r1]
   14698:	vst1.8	{d18-d19}, [r0]
   1469c:	mov	r0, r5
   146a0:	mov	r1, #64	; 0x40
   146a4:	vst1.8	{d20-d21}, [sl]
   146a8:	vst1.8	{d16-d17}, [r9]
   146ac:	bl	130b4 <dcngettext@plt+0x1f9c>
   146b0:	sub	r8, r8, #64	; 0x40
   146b4:	mov	r6, r7
   146b8:	cmp	r8, #64	; 0x40
   146bc:	bhi	14668 <dcngettext@plt+0x3550>
   146c0:	ldr	r0, [sp, #8]
   146c4:	ldr	r1, [sp, #4]
   146c8:	sub	r0, r0, r1
   146cc:	sub	r8, r0, #64	; 0x40
   146d0:	b	14718 <dcngettext@plt+0x3600>
   146d4:	mov	r7, r6
   146d8:	cmp	r8, #0
   146dc:	bne	14718 <dcngettext@plt+0x3600>
   146e0:	sub	sp, fp, #28
   146e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   146e8:	bic	r5, r8, #63	; 0x3f
   146ec:	mov	r0, r6
   146f0:	mov	r2, r4
   146f4:	mov	r1, r5
   146f8:	bl	130b4 <dcngettext@plt+0x1f9c>
   146fc:	add	r7, r6, r5
   14700:	and	r8, r8, #63	; 0x3f
   14704:	cmp	r8, #0
   14708:	bne	14718 <dcngettext@plt+0x3600>
   1470c:	b	146e0 <dcngettext@plt+0x35c8>
   14710:	mov	r7, r6
   14714:	mov	r8, #64	; 0x40
   14718:	ldr	r5, [r4, #28]
   1471c:	add	r6, r4, #32
   14720:	mov	r1, r7
   14724:	mov	r2, r8
   14728:	add	r0, r6, r5
   1472c:	bl	10f08 <memcpy@plt>
   14730:	add	r5, r5, r8
   14734:	cmp	r5, #64	; 0x40
   14738:	bcc	14760 <dcngettext@plt+0x3648>
   1473c:	mov	r0, r6
   14740:	mov	r1, #64	; 0x40
   14744:	mov	r2, r4
   14748:	bl	130b4 <dcngettext@plt+0x1f9c>
   1474c:	sub	r5, r5, #64	; 0x40
   14750:	add	r1, r4, #96	; 0x60
   14754:	mov	r0, r6
   14758:	mov	r2, r5
   1475c:	bl	10f08 <memcpy@plt>
   14760:	str	r5, [r4, #28]
   14764:	sub	sp, fp, #28
   14768:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1476c:	b	10ed8 <posix_fadvise64@plt>
   14770:	cmp	r0, #0
   14774:	bxeq	lr
   14778:	push	{r4, sl, fp, lr}
   1477c:	add	fp, sp, #8
   14780:	sub	sp, sp, #16
   14784:	mov	r4, r1
   14788:	bl	11058 <fileno@plt>
   1478c:	mov	r1, #0
   14790:	mov	r2, #0
   14794:	mov	r3, #0
   14798:	str	r1, [sp]
   1479c:	stmib	sp, {r1, r4}
   147a0:	bl	10ed8 <posix_fadvise64@plt>
   147a4:	sub	sp, fp, #8
   147a8:	pop	{r4, sl, fp, pc}
   147ac:	push	{r4, r5, r6, sl, fp, lr}
   147b0:	add	fp, sp, #16
   147b4:	sub	sp, sp, #8
   147b8:	mov	r4, r0
   147bc:	bl	11058 <fileno@plt>
   147c0:	cmn	r0, #1
   147c4:	ble	14838 <dcngettext@plt+0x3720>
   147c8:	mov	r0, r4
   147cc:	bl	10fb0 <__freading@plt>
   147d0:	cmp	r0, #0
   147d4:	beq	14800 <dcngettext@plt+0x36e8>
   147d8:	mov	r0, r4
   147dc:	bl	11058 <fileno@plt>
   147e0:	mov	r1, #1
   147e4:	mov	r2, #0
   147e8:	mov	r3, #0
   147ec:	str	r1, [sp]
   147f0:	bl	10f5c <lseek64@plt>
   147f4:	and	r0, r0, r1
   147f8:	cmn	r0, #1
   147fc:	beq	14838 <dcngettext@plt+0x3720>
   14800:	mov	r0, r4
   14804:	bl	14848 <dcngettext@plt+0x3730>
   14808:	cmp	r0, #0
   1480c:	beq	14838 <dcngettext@plt+0x3720>
   14810:	bl	1101c <__errno_location@plt>
   14814:	ldr	r6, [r0]
   14818:	mov	r5, r0
   1481c:	mov	r0, r4
   14820:	bl	11070 <fclose@plt>
   14824:	cmp	r6, #0
   14828:	strne	r6, [r5]
   1482c:	mvnne	r0, #0
   14830:	sub	sp, fp, #16
   14834:	pop	{r4, r5, r6, sl, fp, pc}
   14838:	mov	r0, r4
   1483c:	sub	sp, fp, #16
   14840:	pop	{r4, r5, r6, sl, fp, lr}
   14844:	b	11070 <fclose@plt>
   14848:	push	{r4, sl, fp, lr}
   1484c:	add	fp, sp, #8
   14850:	sub	sp, sp, #8
   14854:	mov	r4, r0
   14858:	cmp	r0, #0
   1485c:	beq	14894 <dcngettext@plt+0x377c>
   14860:	mov	r0, r4
   14864:	bl	10fb0 <__freading@plt>
   14868:	cmp	r0, #0
   1486c:	beq	14894 <dcngettext@plt+0x377c>
   14870:	ldrb	r0, [r4, #1]
   14874:	tst	r0, #1
   14878:	beq	14894 <dcngettext@plt+0x377c>
   1487c:	mov	r0, #1
   14880:	mov	r2, #0
   14884:	mov	r3, #0
   14888:	str	r0, [sp]
   1488c:	mov	r0, r4
   14890:	bl	1497c <dcngettext@plt+0x3864>
   14894:	mov	r0, r4
   14898:	sub	sp, fp, #8
   1489c:	pop	{r4, sl, fp, lr}
   148a0:	b	10ee4 <fflush@plt>
   148a4:	push	{r4, r5, r6, r7, fp, lr}
   148a8:	add	fp, sp, #16
   148ac:	mov	r5, r1
   148b0:	bl	110d0 <fopen64@plt>
   148b4:	mov	r4, #0
   148b8:	cmp	r0, #0
   148bc:	beq	14924 <dcngettext@plt+0x380c>
   148c0:	mov	r6, r0
   148c4:	bl	11058 <fileno@plt>
   148c8:	cmp	r0, #2
   148cc:	bhi	1492c <dcngettext@plt+0x3814>
   148d0:	bl	167c4 <dcngettext@plt+0x56ac>
   148d4:	cmn	r0, #1
   148d8:	ble	14934 <dcngettext@plt+0x381c>
   148dc:	mov	r7, r0
   148e0:	mov	r0, r6
   148e4:	bl	147ac <dcngettext@plt+0x3694>
   148e8:	cmp	r0, #0
   148ec:	bne	14908 <dcngettext@plt+0x37f0>
   148f0:	mov	r0, r7
   148f4:	mov	r1, r5
   148f8:	bl	10e90 <fdopen@plt>
   148fc:	mov	r4, r0
   14900:	cmp	r0, #0
   14904:	bne	14924 <dcngettext@plt+0x380c>
   14908:	bl	1101c <__errno_location@plt>
   1490c:	ldr	r5, [r0]
   14910:	mov	r4, r0
   14914:	mov	r0, r7
   14918:	bl	1110c <close@plt>
   1491c:	str	r5, [r4]
   14920:	mov	r4, #0
   14924:	mov	r0, r4
   14928:	pop	{r4, r5, r6, r7, fp, pc}
   1492c:	mov	r0, r6
   14930:	pop	{r4, r5, r6, r7, fp, pc}
   14934:	bl	1101c <__errno_location@plt>
   14938:	ldr	r7, [r0]
   1493c:	mov	r5, r0
   14940:	mov	r0, r6
   14944:	bl	147ac <dcngettext@plt+0x3694>
   14948:	mov	r0, r4
   1494c:	str	r7, [r5]
   14950:	pop	{r4, r5, r6, r7, fp, pc}
   14954:	push	{r4, r5, r6, sl, fp, lr}
   14958:	add	fp, sp, #16
   1495c:	mov	r4, r0
   14960:	bl	1101c <__errno_location@plt>
   14964:	ldr	r6, [r0]
   14968:	mov	r5, r0
   1496c:	mov	r0, r4
   14970:	bl	10ef0 <free@plt>
   14974:	str	r6, [r5]
   14978:	pop	{r4, r5, r6, sl, fp, pc}
   1497c:	push	{r4, r5, r6, r7, fp, lr}
   14980:	add	fp, sp, #16
   14984:	sub	sp, sp, #8
   14988:	mov	r4, r0
   1498c:	ldr	r0, [r0, #4]
   14990:	mov	r5, r3
   14994:	mov	r6, r2
   14998:	ldr	r1, [r4, #8]
   1499c:	cmp	r1, r0
   149a0:	bne	149bc <dcngettext@plt+0x38a4>
   149a4:	ldrd	r0, [r4, #16]
   149a8:	cmp	r1, r0
   149ac:	bne	149bc <dcngettext@plt+0x38a4>
   149b0:	ldr	r0, [r4, #36]	; 0x24
   149b4:	cmp	r0, #0
   149b8:	beq	149d4 <dcngettext@plt+0x38bc>
   149bc:	mov	r0, r4
   149c0:	mov	r2, r6
   149c4:	mov	r3, r5
   149c8:	sub	sp, fp, #16
   149cc:	pop	{r4, r5, r6, r7, fp, lr}
   149d0:	b	1107c <fseeko64@plt>
   149d4:	ldr	r7, [fp, #8]
   149d8:	mov	r0, r4
   149dc:	bl	11058 <fileno@plt>
   149e0:	mov	r2, r6
   149e4:	mov	r3, r5
   149e8:	str	r7, [sp]
   149ec:	bl	10f5c <lseek64@plt>
   149f0:	and	r2, r0, r1
   149f4:	cmn	r2, #1
   149f8:	beq	14a18 <dcngettext@plt+0x3900>
   149fc:	strd	r0, [r4, #80]	; 0x50
   14a00:	ldr	r0, [r4]
   14a04:	bic	r0, r0, #16
   14a08:	str	r0, [r4]
   14a0c:	mov	r0, #0
   14a10:	sub	sp, fp, #16
   14a14:	pop	{r4, r5, r6, r7, fp, pc}
   14a18:	mvn	r0, #0
   14a1c:	sub	sp, fp, #16
   14a20:	pop	{r4, r5, r6, r7, fp, pc}
   14a24:	push	{r4, r5, fp, lr}
   14a28:	add	fp, sp, #8
   14a2c:	cmp	r0, #0
   14a30:	beq	14ac4 <dcngettext@plt+0x39ac>
   14a34:	mov	r1, #47	; 0x2f
   14a38:	mov	r4, r0
   14a3c:	bl	110ac <strrchr@plt>
   14a40:	cmp	r0, #0
   14a44:	mov	r5, r4
   14a48:	addne	r5, r0, #1
   14a4c:	sub	r0, r5, r4
   14a50:	cmp	r0, #7
   14a54:	blt	14aa8 <dcngettext@plt+0x3990>
   14a58:	movw	r1, #34944	; 0x8880
   14a5c:	sub	r0, r5, #7
   14a60:	mov	r2, #7
   14a64:	movt	r1, #1
   14a68:	bl	110f4 <strncmp@plt>
   14a6c:	cmp	r0, #0
   14a70:	bne	14aa8 <dcngettext@plt+0x3990>
   14a74:	movw	r1, #34952	; 0x8888
   14a78:	mov	r0, r5
   14a7c:	mov	r2, #3
   14a80:	movt	r1, #1
   14a84:	bl	110f4 <strncmp@plt>
   14a88:	cmp	r0, #0
   14a8c:	beq	14a98 <dcngettext@plt+0x3980>
   14a90:	mov	r4, r5
   14a94:	b	14aa8 <dcngettext@plt+0x3990>
   14a98:	movw	r0, #37192	; 0x9148
   14a9c:	add	r4, r5, #3
   14aa0:	movt	r0, #2
   14aa4:	str	r4, [r0]
   14aa8:	movw	r0, #37196	; 0x914c
   14aac:	movt	r0, #2
   14ab0:	str	r4, [r0]
   14ab4:	movw	r0, #37252	; 0x9184
   14ab8:	movt	r0, #2
   14abc:	str	r4, [r0]
   14ac0:	pop	{r4, r5, fp, pc}
   14ac4:	movw	r0, #37208	; 0x9158
   14ac8:	mov	r1, #55	; 0x37
   14acc:	mov	r2, #1
   14ad0:	movt	r0, #2
   14ad4:	ldr	r3, [r0]
   14ad8:	movw	r0, #34888	; 0x8848
   14adc:	movt	r0, #1
   14ae0:	bl	10f50 <fwrite@plt>
   14ae4:	bl	11100 <abort@plt>
   14ae8:	push	{r4, r5, r6, sl, fp, lr}
   14aec:	add	fp, sp, #16
   14af0:	mov	r4, r0
   14af4:	movw	r0, #37256	; 0x9188
   14af8:	movt	r0, #2
   14afc:	cmp	r4, #0
   14b00:	moveq	r4, r0
   14b04:	bl	1101c <__errno_location@plt>
   14b08:	ldr	r6, [r0]
   14b0c:	mov	r5, r0
   14b10:	mov	r0, r4
   14b14:	mov	r1, #48	; 0x30
   14b18:	bl	172e8 <dcngettext@plt+0x61d0>
   14b1c:	str	r6, [r5]
   14b20:	pop	{r4, r5, r6, sl, fp, pc}
   14b24:	movw	r1, #37256	; 0x9188
   14b28:	cmp	r0, #0
   14b2c:	movt	r1, #2
   14b30:	movne	r1, r0
   14b34:	ldr	r0, [r1]
   14b38:	bx	lr
   14b3c:	movw	r2, #37256	; 0x9188
   14b40:	cmp	r0, #0
   14b44:	movt	r2, #2
   14b48:	movne	r2, r0
   14b4c:	str	r1, [r2]
   14b50:	bx	lr
   14b54:	movw	r3, #37256	; 0x9188
   14b58:	cmp	r0, #0
   14b5c:	and	r2, r2, #1
   14b60:	movt	r3, #2
   14b64:	movne	r3, r0
   14b68:	ubfx	r0, r1, #5, #3
   14b6c:	and	r1, r1, #31
   14b70:	add	ip, r3, r0, lsl #2
   14b74:	mov	r0, #1
   14b78:	ldr	r3, [ip, #8]
   14b7c:	and	r0, r0, r3, lsr r1
   14b80:	eor	r2, r0, r2
   14b84:	eor	r1, r3, r2, lsl r1
   14b88:	str	r1, [ip, #8]
   14b8c:	bx	lr
   14b90:	movw	r2, #37256	; 0x9188
   14b94:	cmp	r0, #0
   14b98:	movt	r2, #2
   14b9c:	movne	r2, r0
   14ba0:	ldr	r0, [r2, #4]
   14ba4:	str	r1, [r2, #4]
   14ba8:	bx	lr
   14bac:	push	{fp, lr}
   14bb0:	mov	fp, sp
   14bb4:	movw	r3, #37256	; 0x9188
   14bb8:	cmp	r0, #0
   14bbc:	movt	r3, #2
   14bc0:	movne	r3, r0
   14bc4:	cmp	r1, #0
   14bc8:	mov	r0, #10
   14bcc:	cmpne	r2, #0
   14bd0:	str	r0, [r3]
   14bd4:	bne	14bdc <dcngettext@plt+0x3ac4>
   14bd8:	bl	11100 <abort@plt>
   14bdc:	str	r1, [r3, #40]	; 0x28
   14be0:	str	r2, [r3, #44]	; 0x2c
   14be4:	pop	{fp, pc}
   14be8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14bec:	add	fp, sp, #28
   14bf0:	sub	sp, sp, #20
   14bf4:	mov	r7, r0
   14bf8:	ldr	r0, [fp, #8]
   14bfc:	movw	r5, #37256	; 0x9188
   14c00:	mov	r8, r3
   14c04:	mov	r9, r2
   14c08:	mov	sl, r1
   14c0c:	movt	r5, #2
   14c10:	cmp	r0, #0
   14c14:	movne	r5, r0
   14c18:	bl	1101c <__errno_location@plt>
   14c1c:	ldr	r2, [r5, #40]	; 0x28
   14c20:	ldr	r3, [r5, #44]	; 0x2c
   14c24:	mov	r4, r0
   14c28:	ldm	r5, {r0, r1}
   14c2c:	add	r5, r5, #8
   14c30:	ldr	r6, [r4]
   14c34:	stm	sp, {r0, r1, r5}
   14c38:	mov	r0, r7
   14c3c:	mov	r1, sl
   14c40:	str	r2, [sp, #12]
   14c44:	str	r3, [sp, #16]
   14c48:	mov	r2, r9
   14c4c:	mov	r3, r8
   14c50:	bl	14c60 <dcngettext@plt+0x3b48>
   14c54:	str	r6, [r4]
   14c58:	sub	sp, fp, #28
   14c5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14c60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14c64:	add	fp, sp, #28
   14c68:	sub	sp, sp, #156	; 0x9c
   14c6c:	mov	r5, r0
   14c70:	add	r0, r2, #1
   14c74:	mov	r6, r1
   14c78:	mov	sl, r3
   14c7c:	str	r2, [fp, #-80]	; 0xffffffb0
   14c80:	str	r0, [sp, #72]	; 0x48
   14c84:	ldr	r0, [fp, #12]
   14c88:	and	r1, r0, #1
   14c8c:	str	r1, [sp, #36]	; 0x24
   14c90:	and	r1, r0, #4
   14c94:	str	r1, [sp, #32]
   14c98:	ubfx	r9, r0, #1, #1
   14c9c:	bl	10f68 <__ctype_get_mb_cur_max@plt>
   14ca0:	str	r0, [sp, #40]	; 0x28
   14ca4:	ldr	r0, [fp, #24]
   14ca8:	ldr	r7, [fp, #8]
   14cac:	mov	r1, #0
   14cb0:	str	r5, [fp, #-84]	; 0xffffffac
   14cb4:	str	r1, [fp, #-56]	; 0xffffffc8
   14cb8:	mov	r1, #0
   14cbc:	str	r1, [sp, #60]	; 0x3c
   14cc0:	mov	r1, #1
   14cc4:	str	r1, [fp, #-48]	; 0xffffffd0
   14cc8:	str	r0, [sp, #80]	; 0x50
   14ccc:	ldr	r0, [fp, #20]
   14cd0:	str	r0, [sp, #76]	; 0x4c
   14cd4:	mov	r0, #0
   14cd8:	str	r0, [sp, #56]	; 0x38
   14cdc:	mov	r0, #0
   14ce0:	str	r0, [fp, #-88]	; 0xffffffa8
   14ce4:	mov	r0, #0
   14ce8:	str	r0, [fp, #-72]	; 0xffffffb8
   14cec:	mov	r0, #0
   14cf0:	cmp	r7, #10
   14cf4:	bhi	15c88 <dcngettext@plt+0x4b70>
   14cf8:	add	r1, pc, #24
   14cfc:	ldr	ip, [fp, #-80]	; 0xffffffb0
   14d00:	mov	r4, r6
   14d04:	mov	r8, #0
   14d08:	mov	r2, #1
   14d0c:	mov	r3, #0
   14d10:	mov	lr, sl
   14d14:	ldr	pc, [r1, r7, lsl #2]
   14d18:	ldrdeq	r4, [r1], -ip
   14d1c:	andeq	r4, r1, r0, lsr lr
   14d20:	strdeq	r4, [r1], -r0
   14d24:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14d28:	andeq	r4, r1, r4, lsr #28
   14d2c:	andeq	r4, r1, r8, asr lr
   14d30:	andeq	r4, r1, r0, lsl #28
   14d34:	ldrdeq	r4, [r1], -ip
   14d38:	andeq	r4, r1, r4, asr #26
   14d3c:	andeq	r4, r1, r4, asr #26
   14d40:	andeq	r4, r1, ip, ror #26
   14d44:	movw	r0, #35036	; 0x88dc
   14d48:	mov	r1, r7
   14d4c:	movt	r0, #1
   14d50:	bl	16690 <dcngettext@plt+0x5578>
   14d54:	str	r0, [sp, #76]	; 0x4c
   14d58:	movw	r0, #35038	; 0x88de
   14d5c:	mov	r1, r7
   14d60:	movt	r0, #1
   14d64:	bl	16690 <dcngettext@plt+0x5578>
   14d68:	str	r0, [sp, #80]	; 0x50
   14d6c:	mov	r8, #0
   14d70:	tst	r9, #1
   14d74:	bne	14dac <dcngettext@plt+0x3c94>
   14d78:	ldr	r0, [sp, #76]	; 0x4c
   14d7c:	ldrb	r0, [r0]
   14d80:	cmp	r0, #0
   14d84:	beq	14dac <dcngettext@plt+0x3c94>
   14d88:	ldr	r1, [sp, #76]	; 0x4c
   14d8c:	mov	r8, #0
   14d90:	add	r1, r1, #1
   14d94:	cmp	r8, r4
   14d98:	strbcc	r0, [r5, r8]
   14d9c:	ldrb	r0, [r1, r8]
   14da0:	add	r8, r8, #1
   14da4:	cmp	r0, #0
   14da8:	bne	14d94 <dcngettext@plt+0x3c7c>
   14dac:	ldr	r6, [sp, #80]	; 0x50
   14db0:	mov	r0, r6
   14db4:	bl	11004 <strlen@plt>
   14db8:	ldr	ip, [fp, #-80]	; 0xffffffb0
   14dbc:	str	r0, [fp, #-72]	; 0xffffffb8
   14dc0:	str	r6, [fp, #-88]	; 0xffffffa8
   14dc4:	mov	r2, #1
   14dc8:	mov	r3, r9
   14dcc:	mov	lr, sl
   14dd0:	b	14edc <dcngettext@plt+0x3dc4>
   14dd4:	mov	r0, #1
   14dd8:	b	14e30 <dcngettext@plt+0x3d18>
   14ddc:	mov	r7, #0
   14de0:	mov	r8, #0
   14de4:	mov	r2, r0
   14de8:	mov	r3, #0
   14dec:	b	14edc <dcngettext@plt+0x3dc4>
   14df0:	tst	r9, #1
   14df4:	bne	14e30 <dcngettext@plt+0x3d18>
   14df8:	mov	r2, r0
   14dfc:	b	14e88 <dcngettext@plt+0x3d70>
   14e00:	mov	r0, #1
   14e04:	mov	r8, #0
   14e08:	mov	r7, #5
   14e0c:	mov	r2, #1
   14e10:	str	r0, [fp, #-72]	; 0xffffffb8
   14e14:	movw	r0, #35034	; 0x88da
   14e18:	movt	r0, #1
   14e1c:	str	r0, [fp, #-88]	; 0xffffffa8
   14e20:	b	14e50 <dcngettext@plt+0x3d38>
   14e24:	mov	r2, #1
   14e28:	tst	r9, #1
   14e2c:	beq	14e88 <dcngettext@plt+0x3d70>
   14e30:	mov	r1, #1
   14e34:	mov	r8, #0
   14e38:	mov	r7, #2
   14e3c:	mov	r2, r0
   14e40:	str	r1, [fp, #-72]	; 0xffffffb8
   14e44:	movw	r1, #35038	; 0x88de
   14e48:	movt	r1, #1
   14e4c:	str	r1, [fp, #-88]	; 0xffffffa8
   14e50:	mov	r3, #1
   14e54:	b	14edc <dcngettext@plt+0x3dc4>
   14e58:	tst	r9, #1
   14e5c:	beq	14eac <dcngettext@plt+0x3d94>
   14e60:	mov	r0, #1
   14e64:	mov	r8, #0
   14e68:	mov	r2, #1
   14e6c:	mov	r3, #1
   14e70:	mov	r7, #5
   14e74:	str	r0, [fp, #-72]	; 0xffffffb8
   14e78:	movw	r0, #35034	; 0x88da
   14e7c:	movt	r0, #1
   14e80:	str	r0, [fp, #-88]	; 0xffffffa8
   14e84:	b	14edc <dcngettext@plt+0x3dc4>
   14e88:	cmp	r4, #0
   14e8c:	mov	r8, #1
   14e90:	mov	r3, #0
   14e94:	mov	r7, #2
   14e98:	movne	r0, #39	; 0x27
   14e9c:	strbne	r0, [r5]
   14ea0:	movw	r0, #35038	; 0x88de
   14ea4:	movt	r0, #1
   14ea8:	b	14ed0 <dcngettext@plt+0x3db8>
   14eac:	cmp	r4, #0
   14eb0:	mov	r8, #1
   14eb4:	mov	r2, #1
   14eb8:	mov	r7, #5
   14ebc:	mov	r3, #0
   14ec0:	movne	r0, #34	; 0x22
   14ec4:	strbne	r0, [r5]
   14ec8:	movw	r0, #35034	; 0x88da
   14ecc:	movt	r0, #1
   14ed0:	str	r0, [fp, #-88]	; 0xffffffa8
   14ed4:	mov	r0, #1
   14ed8:	str	r0, [fp, #-72]	; 0xffffffb8
   14edc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14ee0:	eor	r6, r3, #1
   14ee4:	str	r7, [fp, #-68]	; 0xffffffbc
   14ee8:	str	r3, [fp, #-76]	; 0xffffffb4
   14eec:	str	r2, [sp, #84]	; 0x54
   14ef0:	str	r6, [sp, #92]	; 0x5c
   14ef4:	cmp	r0, #0
   14ef8:	movwne	r0, #1
   14efc:	and	r1, r0, r3
   14f00:	and	r1, r2, r1
   14f04:	str	r1, [sp, #48]	; 0x30
   14f08:	sub	r1, r7, #2
   14f0c:	clz	r1, r1
   14f10:	lsr	r1, r1, #5
   14f14:	and	r1, r1, r3
   14f18:	str	r1, [sp, #64]	; 0x40
   14f1c:	subs	r1, r7, #2
   14f20:	mov	r7, #0
   14f24:	movwne	r1, #1
   14f28:	orr	r6, r1, r6
   14f2c:	and	r1, r1, r2
   14f30:	and	r0, r0, r1
   14f34:	str	r6, [sp, #68]	; 0x44
   14f38:	str	r0, [fp, #-60]	; 0xffffffc4
   14f3c:	orr	r0, r1, r3
   14f40:	ldr	r1, [fp, #16]
   14f44:	eor	r0, r0, #1
   14f48:	clz	r1, r1
   14f4c:	lsr	r1, r1, #5
   14f50:	orr	r0, r1, r0
   14f54:	str	r0, [fp, #-64]	; 0xffffffc0
   14f58:	eor	r0, r2, #1
   14f5c:	str	r0, [sp, #52]	; 0x34
   14f60:	cmn	lr, #1
   14f64:	beq	14f74 <dcngettext@plt+0x3e5c>
   14f68:	cmp	r7, lr
   14f6c:	bne	14f80 <dcngettext@plt+0x3e68>
   14f70:	b	15ac8 <dcngettext@plt+0x49b0>
   14f74:	ldrb	r0, [ip, r7]
   14f78:	cmp	r0, #0
   14f7c:	beq	15ad0 <dcngettext@plt+0x49b8>
   14f80:	ldr	r0, [fp, #-60]	; 0xffffffc4
   14f84:	mov	sl, #0
   14f88:	cmp	r0, #0
   14f8c:	beq	14fc4 <dcngettext@plt+0x3eac>
   14f90:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14f94:	add	r5, r7, r0
   14f98:	cmp	r0, #2
   14f9c:	bcc	14fb8 <dcngettext@plt+0x3ea0>
   14fa0:	cmn	lr, #1
   14fa4:	bne	14fb8 <dcngettext@plt+0x3ea0>
   14fa8:	mov	r0, ip
   14fac:	bl	11004 <strlen@plt>
   14fb0:	ldr	ip, [fp, #-80]	; 0xffffffb0
   14fb4:	mov	lr, r0
   14fb8:	cmp	r5, lr
   14fbc:	bls	14fcc <dcngettext@plt+0x3eb4>
   14fc0:	ldr	r5, [fp, #-84]	; 0xffffffac
   14fc4:	mov	r0, #0
   14fc8:	b	15018 <dcngettext@plt+0x3f00>
   14fcc:	ldr	r1, [fp, #-88]	; 0xffffffa8
   14fd0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14fd4:	add	r0, ip, r7
   14fd8:	mov	r6, r4
   14fdc:	mov	r4, lr
   14fe0:	bl	10ff8 <bcmp@plt>
   14fe4:	ldr	r2, [sp, #92]	; 0x5c
   14fe8:	cmp	r0, #0
   14fec:	ldr	r5, [fp, #-84]	; 0xffffffac
   14ff0:	mov	r1, r0
   14ff4:	movwne	r1, #1
   14ff8:	orr	r1, r1, r2
   14ffc:	tst	r1, #1
   15000:	beq	15b58 <dcngettext@plt+0x4a40>
   15004:	ldr	ip, [fp, #-80]	; 0xffffffb0
   15008:	clz	r0, r0
   1500c:	mov	lr, r4
   15010:	mov	r4, r6
   15014:	lsr	r0, r0, #5
   15018:	str	r0, [fp, #-52]	; 0xffffffcc
   1501c:	ldrb	r6, [ip, r7]
   15020:	cmp	r6, #126	; 0x7e
   15024:	bhi	15554 <dcngettext@plt+0x443c>
   15028:	add	r3, pc, #16
   1502c:	mov	r9, #1
   15030:	mov	r2, #110	; 0x6e
   15034:	mov	r0, #97	; 0x61
   15038:	mov	r1, #0
   1503c:	ldr	pc, [r3, r6, lsl #2]
   15040:			; <UNDEFINED> instruction: 0x000153b4
   15044:	andeq	r5, r1, r4, asr r5
   15048:	andeq	r5, r1, r4, asr r5
   1504c:	andeq	r5, r1, r4, asr r5
   15050:	andeq	r5, r1, r4, asr r5
   15054:	andeq	r5, r1, r4, asr r5
   15058:	andeq	r5, r1, r4, asr r5
   1505c:	andeq	r5, r1, r0, lsr r6
   15060:	muleq	r1, r4, r3
   15064:	andeq	r5, r1, ip, lsl #7
   15068:	andeq	r5, r1, r0, lsr #7
   1506c:			; <UNDEFINED> instruction: 0x000154bc
   15070:	andeq	r5, r1, r4, lsl #7
   15074:	muleq	r1, ip, r3
   15078:	andeq	r5, r1, r4, asr r5
   1507c:	andeq	r5, r1, r4, asr r5
   15080:	andeq	r5, r1, r4, asr r5
   15084:	andeq	r5, r1, r4, asr r5
   15088:	andeq	r5, r1, r4, asr r5
   1508c:	andeq	r5, r1, r4, asr r5
   15090:	andeq	r5, r1, r4, asr r5
   15094:	andeq	r5, r1, r4, asr r5
   15098:	andeq	r5, r1, r4, asr r5
   1509c:	andeq	r5, r1, r4, asr r5
   150a0:	andeq	r5, r1, r4, asr r5
   150a4:	andeq	r5, r1, r4, asr r5
   150a8:	andeq	r5, r1, r4, asr r5
   150ac:	andeq	r5, r1, r4, asr r5
   150b0:	andeq	r5, r1, r4, asr r5
   150b4:	andeq	r5, r1, r4, asr r5
   150b8:	andeq	r5, r1, r4, asr r5
   150bc:	andeq	r5, r1, r4, asr r5
   150c0:	andeq	r5, r1, r8, lsr r3
   150c4:	andeq	r5, r1, ip, lsr r3
   150c8:	andeq	r5, r1, ip, lsr r3
   150cc:	andeq	r5, r1, r4, lsr #6
   150d0:	andeq	r5, r1, ip, lsr r3
   150d4:	andeq	r5, r1, ip, lsr r2
   150d8:	andeq	r5, r1, ip, lsr r3
   150dc:	andeq	r5, r1, r4, asr #9
   150e0:	andeq	r5, r1, ip, lsr r3
   150e4:	andeq	r5, r1, ip, lsr r3
   150e8:	andeq	r5, r1, ip, lsr r3
   150ec:	andeq	r5, r1, ip, lsr r2
   150f0:	andeq	r5, r1, ip, lsr r2
   150f4:	andeq	r5, r1, ip, lsr r2
   150f8:	andeq	r5, r1, ip, lsr r2
   150fc:	andeq	r5, r1, ip, lsr r2
   15100:	andeq	r5, r1, ip, lsr r2
   15104:	andeq	r5, r1, ip, lsr r2
   15108:	andeq	r5, r1, ip, lsr r2
   1510c:	andeq	r5, r1, ip, lsr r2
   15110:	andeq	r5, r1, ip, lsr r2
   15114:	andeq	r5, r1, ip, lsr r2
   15118:	andeq	r5, r1, ip, lsr r2
   1511c:	andeq	r5, r1, ip, lsr r2
   15120:	andeq	r5, r1, ip, lsr r2
   15124:	andeq	r5, r1, ip, lsr r2
   15128:	andeq	r5, r1, ip, lsr r2
   1512c:	andeq	r5, r1, ip, lsr r3
   15130:	andeq	r5, r1, ip, lsr r3
   15134:	andeq	r5, r1, ip, lsr r3
   15138:	andeq	r5, r1, ip, lsr r3
   1513c:	andeq	r5, r1, ip, lsl #9
   15140:	andeq	r5, r1, r4, asr r5
   15144:	andeq	r5, r1, ip, lsr r2
   15148:	andeq	r5, r1, ip, lsr r2
   1514c:	andeq	r5, r1, ip, lsr r2
   15150:	andeq	r5, r1, ip, lsr r2
   15154:	andeq	r5, r1, ip, lsr r2
   15158:	andeq	r5, r1, ip, lsr r2
   1515c:	andeq	r5, r1, ip, lsr r2
   15160:	andeq	r5, r1, ip, lsr r2
   15164:	andeq	r5, r1, ip, lsr r2
   15168:	andeq	r5, r1, ip, lsr r2
   1516c:	andeq	r5, r1, ip, lsr r2
   15170:	andeq	r5, r1, ip, lsr r2
   15174:	andeq	r5, r1, ip, lsr r2
   15178:	andeq	r5, r1, ip, lsr r2
   1517c:	andeq	r5, r1, ip, lsr r2
   15180:	andeq	r5, r1, ip, lsr r2
   15184:	andeq	r5, r1, ip, lsr r2
   15188:	andeq	r5, r1, ip, lsr r2
   1518c:	andeq	r5, r1, ip, lsr r2
   15190:	andeq	r5, r1, ip, lsr r2
   15194:	andeq	r5, r1, ip, lsr r2
   15198:	andeq	r5, r1, ip, lsr r2
   1519c:	andeq	r5, r1, ip, lsr r2
   151a0:	andeq	r5, r1, ip, lsr r2
   151a4:	andeq	r5, r1, ip, lsr r2
   151a8:	andeq	r5, r1, ip, lsr r2
   151ac:	andeq	r5, r1, ip, lsr r3
   151b0:	andeq	r5, r1, r4, ror #6
   151b4:	andeq	r5, r1, ip, lsr r2
   151b8:	andeq	r5, r1, ip, lsr r3
   151bc:	andeq	r5, r1, ip, lsr r2
   151c0:	andeq	r5, r1, ip, lsr r3
   151c4:	andeq	r5, r1, ip, lsr r2
   151c8:	andeq	r5, r1, ip, lsr r2
   151cc:	andeq	r5, r1, ip, lsr r2
   151d0:	andeq	r5, r1, ip, lsr r2
   151d4:	andeq	r5, r1, ip, lsr r2
   151d8:	andeq	r5, r1, ip, lsr r2
   151dc:	andeq	r5, r1, ip, lsr r2
   151e0:	andeq	r5, r1, ip, lsr r2
   151e4:	andeq	r5, r1, ip, lsr r2
   151e8:	andeq	r5, r1, ip, lsr r2
   151ec:	andeq	r5, r1, ip, lsr r2
   151f0:	andeq	r5, r1, ip, lsr r2
   151f4:	andeq	r5, r1, ip, lsr r2
   151f8:	andeq	r5, r1, ip, lsr r2
   151fc:	andeq	r5, r1, ip, lsr r2
   15200:	andeq	r5, r1, ip, lsr r2
   15204:	andeq	r5, r1, ip, lsr r2
   15208:	andeq	r5, r1, ip, lsr r2
   1520c:	andeq	r5, r1, ip, lsr r2
   15210:	andeq	r5, r1, ip, lsr r2
   15214:	andeq	r5, r1, ip, lsr r2
   15218:	andeq	r5, r1, ip, lsr r2
   1521c:	andeq	r5, r1, ip, lsr r2
   15220:	andeq	r5, r1, ip, lsr r2
   15224:	andeq	r5, r1, ip, lsr r2
   15228:	andeq	r5, r1, ip, lsr r2
   1522c:	strdeq	r5, [r1], -r8
   15230:	andeq	r5, r1, ip, lsr r3
   15234:	strdeq	r5, [r1], -r8
   15238:	andeq	r5, r1, r4, lsr #6
   1523c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15240:	tst	r0, #1
   15244:	bne	15270 <dcngettext@plt+0x4158>
   15248:	ldr	r1, [fp, #16]
   1524c:	ubfx	r0, r6, #5, #3
   15250:	mov	r2, #1
   15254:	ldr	r0, [r1, r0, lsl #2]
   15258:	and	r1, r6, #31
   1525c:	tst	r0, r2, lsl r1
   15260:	beq	15270 <dcngettext@plt+0x4158>
   15264:	mov	r0, r6
   15268:	mov	r1, r9
   1526c:	b	15284 <dcngettext@plt+0x416c>
   15270:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15274:	mov	r1, r9
   15278:	cmp	r0, #0
   1527c:	mov	r0, r6
   15280:	beq	155c4 <dcngettext@plt+0x44ac>
   15284:	ldr	r2, [fp, #-76]	; 0xffffffb4
   15288:	tst	r2, #1
   1528c:	bne	15b94 <dcngettext@plt+0x4a7c>
   15290:	ldr	r2, [fp, #-68]	; 0xffffffbc
   15294:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15298:	subs	r2, r2, #2
   1529c:	movwne	r2, #1
   152a0:	orr	r2, r2, r3
   152a4:	tst	r2, #1
   152a8:	bne	152e4 <dcngettext@plt+0x41cc>
   152ac:	cmp	r8, r4
   152b0:	movcc	r2, #39	; 0x27
   152b4:	strbcc	r2, [r5, r8]
   152b8:	add	r2, r8, #1
   152bc:	cmp	r2, r4
   152c0:	movcc	r3, #36	; 0x24
   152c4:	strbcc	r3, [r5, r2]
   152c8:	add	r2, r8, #2
   152cc:	add	r8, r8, #3
   152d0:	cmp	r2, r4
   152d4:	movcc	r3, #39	; 0x27
   152d8:	strbcc	r3, [r5, r2]
   152dc:	mov	r2, #1
   152e0:	str	r2, [fp, #-56]	; 0xffffffc8
   152e4:	cmp	r8, r4
   152e8:	movcc	r2, #92	; 0x5c
   152ec:	strbcc	r2, [r5, r8]
   152f0:	add	r8, r8, #1
   152f4:	b	15608 <dcngettext@plt+0x44f0>
   152f8:	cmp	lr, #1
   152fc:	beq	15324 <dcngettext@plt+0x420c>
   15300:	mov	r9, #0
   15304:	cmn	lr, #1
   15308:	bne	15330 <dcngettext@plt+0x4218>
   1530c:	ldrb	r0, [ip, #1]
   15310:	cmp	r0, #0
   15314:	beq	15324 <dcngettext@plt+0x420c>
   15318:	mvn	lr, #0
   1531c:	mov	sl, #0
   15320:	b	1523c <dcngettext@plt+0x4124>
   15324:	mov	r9, #0
   15328:	cmp	r7, #0
   1532c:	beq	15338 <dcngettext@plt+0x4220>
   15330:	mov	sl, #0
   15334:	b	1523c <dcngettext@plt+0x4124>
   15338:	mov	r1, #1
   1533c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15340:	cmp	r0, #2
   15344:	bne	1535c <dcngettext@plt+0x4244>
   15348:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1534c:	mov	r9, r1
   15350:	tst	r0, #1
   15354:	beq	1523c <dcngettext@plt+0x4124>
   15358:	b	15b94 <dcngettext@plt+0x4a7c>
   1535c:	mov	r9, r1
   15360:	b	1523c <dcngettext@plt+0x4124>
   15364:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15368:	cmp	r0, #2
   1536c:	bne	155a8 <dcngettext@plt+0x4490>
   15370:	ldr	r0, [fp, #-76]	; 0xffffffb4
   15374:	tst	r0, #1
   15378:	bne	15b94 <dcngettext@plt+0x4a7c>
   1537c:	mov	sl, #0
   15380:	b	155bc <dcngettext@plt+0x44a4>
   15384:	mov	r0, #102	; 0x66
   15388:	b	15630 <dcngettext@plt+0x4518>
   1538c:	mov	r2, #116	; 0x74
   15390:	b	153a0 <dcngettext@plt+0x4288>
   15394:	mov	r0, #98	; 0x62
   15398:	b	15630 <dcngettext@plt+0x4518>
   1539c:	mov	r2, #114	; 0x72
   153a0:	ldr	r0, [sp, #68]	; 0x44
   153a4:	tst	r0, #1
   153a8:	mov	r0, r2
   153ac:	bne	15630 <dcngettext@plt+0x4518>
   153b0:	b	15b94 <dcngettext@plt+0x4a7c>
   153b4:	ldr	r0, [sp, #84]	; 0x54
   153b8:	tst	r0, #1
   153bc:	beq	1564c <dcngettext@plt+0x4534>
   153c0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   153c4:	tst	r0, #1
   153c8:	bne	15c80 <dcngettext@plt+0x4b68>
   153cc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   153d0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   153d4:	subs	r0, r0, #2
   153d8:	movwne	r0, #1
   153dc:	orr	r0, r0, r1
   153e0:	tst	r0, #1
   153e4:	bne	15420 <dcngettext@plt+0x4308>
   153e8:	cmp	r8, r4
   153ec:	movcc	r0, #39	; 0x27
   153f0:	strbcc	r0, [r5, r8]
   153f4:	add	r0, r8, #1
   153f8:	cmp	r0, r4
   153fc:	movcc	r1, #36	; 0x24
   15400:	strbcc	r1, [r5, r0]
   15404:	add	r0, r8, #2
   15408:	add	r8, r8, #3
   1540c:	cmp	r0, r4
   15410:	movcc	r1, #39	; 0x27
   15414:	strbcc	r1, [r5, r0]
   15418:	mov	r0, #1
   1541c:	str	r0, [fp, #-56]	; 0xffffffc8
   15420:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15424:	cmp	r8, r4
   15428:	mov	r9, #0
   1542c:	mov	sl, #1
   15430:	mov	r6, #48	; 0x30
   15434:	movcc	r0, #92	; 0x5c
   15438:	strbcc	r0, [r5, r8]
   1543c:	add	r0, r8, #1
   15440:	cmp	r1, #2
   15444:	beq	15814 <dcngettext@plt+0x46fc>
   15448:	add	r1, r7, #1
   1544c:	cmp	r1, lr
   15450:	bcs	15814 <dcngettext@plt+0x46fc>
   15454:	ldrb	r1, [ip, r1]
   15458:	sub	r1, r1, #48	; 0x30
   1545c:	uxtb	r1, r1
   15460:	cmp	r1, #9
   15464:	bhi	15814 <dcngettext@plt+0x46fc>
   15468:	cmp	r0, r4
   1546c:	movcc	r1, #48	; 0x30
   15470:	strbcc	r1, [r5, r0]
   15474:	add	r0, r8, #2
   15478:	add	r8, r8, #3
   1547c:	cmp	r0, r4
   15480:	movcc	r1, #48	; 0x30
   15484:	strbcc	r1, [r5, r0]
   15488:	b	1523c <dcngettext@plt+0x4124>
   1548c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15490:	mov	sl, #0
   15494:	mov	r6, #63	; 0x3f
   15498:	cmp	r0, #5
   1549c:	beq	1581c <dcngettext@plt+0x4704>
   154a0:	cmp	r0, #2
   154a4:	bne	158c4 <dcngettext@plt+0x47ac>
   154a8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   154ac:	mov	r9, #0
   154b0:	tst	r0, #1
   154b4:	beq	1523c <dcngettext@plt+0x4124>
   154b8:	b	15b94 <dcngettext@plt+0x4a7c>
   154bc:	mov	r0, #118	; 0x76
   154c0:	b	15630 <dcngettext@plt+0x4518>
   154c4:	mov	r0, #1
   154c8:	mov	r6, #39	; 0x27
   154cc:	str	r0, [sp, #60]	; 0x3c
   154d0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   154d4:	cmp	r0, #2
   154d8:	bne	15668 <dcngettext@plt+0x4550>
   154dc:	ldr	r0, [fp, #-76]	; 0xffffffb4
   154e0:	tst	r0, #1
   154e4:	bne	15b94 <dcngettext@plt+0x4a7c>
   154e8:	ldr	r2, [sp, #56]	; 0x38
   154ec:	clz	r1, r4
   154f0:	mov	sl, #0
   154f4:	mov	r9, #1
   154f8:	lsr	r1, r1, #5
   154fc:	cmp	r2, #0
   15500:	mov	r0, r2
   15504:	movwne	r0, #1
   15508:	orrs	r0, r0, r1
   1550c:	moveq	r2, r4
   15510:	moveq	r4, r0
   15514:	cmp	r8, r4
   15518:	str	r2, [sp, #56]	; 0x38
   1551c:	movcc	r0, #39	; 0x27
   15520:	strbcc	r0, [r5, r8]
   15524:	add	r0, r8, #1
   15528:	cmp	r0, r4
   1552c:	movcc	r1, #92	; 0x5c
   15530:	strbcc	r1, [r5, r0]
   15534:	add	r0, r8, #2
   15538:	add	r8, r8, #3
   1553c:	cmp	r0, r4
   15540:	movcc	r1, #39	; 0x27
   15544:	strbcc	r1, [r5, r0]
   15548:	mov	r0, #0
   1554c:	str	r0, [fp, #-56]	; 0xffffffc8
   15550:	b	1523c <dcngettext@plt+0x4124>
   15554:	ldr	r0, [sp, #40]	; 0x28
   15558:	str	r4, [sp, #88]	; 0x58
   1555c:	cmp	r0, #1
   15560:	bne	15670 <dcngettext@plt+0x4558>
   15564:	str	lr, [sp, #28]
   15568:	bl	10fe0 <__ctype_b_loc@plt>
   1556c:	ldr	r0, [r0]
   15570:	ldr	ip, [fp, #-80]	; 0xffffffb0
   15574:	mov	r2, #1
   15578:	add	r0, r0, r6, lsl #1
   1557c:	ldrb	r0, [r0, #1]
   15580:	ubfx	r9, r0, #6, #1
   15584:	ldr	r0, [sp, #52]	; 0x34
   15588:	cmp	r2, #1
   1558c:	orr	r0, r9, r0
   15590:	bhi	158cc <dcngettext@plt+0x47b4>
   15594:	tst	r0, #1
   15598:	beq	158cc <dcngettext@plt+0x47b4>
   1559c:	ldr	lr, [sp, #28]
   155a0:	ldr	r4, [sp, #88]	; 0x58
   155a4:	b	1523c <dcngettext@plt+0x4124>
   155a8:	ldr	r1, [sp, #48]	; 0x30
   155ac:	mov	sl, #0
   155b0:	mov	r0, #92	; 0x5c
   155b4:	cmp	r1, #0
   155b8:	beq	15630 <dcngettext@plt+0x4518>
   155bc:	mov	r6, #92	; 0x5c
   155c0:	mov	r9, #0
   155c4:	cmp	sl, #0
   155c8:	bne	15600 <dcngettext@plt+0x44e8>
   155cc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   155d0:	tst	r0, #1
   155d4:	beq	15600 <dcngettext@plt+0x44e8>
   155d8:	cmp	r8, r4
   155dc:	movcc	r0, #39	; 0x27
   155e0:	strbcc	r0, [r5, r8]
   155e4:	add	r0, r8, #1
   155e8:	add	r8, r8, #2
   155ec:	cmp	r0, r4
   155f0:	movcc	r1, #39	; 0x27
   155f4:	strbcc	r1, [r5, r0]
   155f8:	mov	r0, #0
   155fc:	str	r0, [fp, #-56]	; 0xffffffc8
   15600:	mov	r1, r9
   15604:	mov	r0, r6
   15608:	cmp	r8, r4
   1560c:	strbcc	r0, [r5, r8]
   15610:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15614:	add	r8, r8, #1
   15618:	and	r0, r0, r1
   1561c:	str	r0, [fp, #-48]	; 0xffffffd0
   15620:	add	r7, r7, #1
   15624:	cmn	lr, #1
   15628:	bne	14f68 <dcngettext@plt+0x3e50>
   1562c:	b	14f74 <dcngettext@plt+0x3e5c>
   15630:	ldr	r1, [sp, #84]	; 0x54
   15634:	mov	sl, #0
   15638:	mov	r9, #0
   1563c:	tst	r1, #1
   15640:	mov	r1, #0
   15644:	beq	1523c <dcngettext@plt+0x4124>
   15648:	b	15284 <dcngettext@plt+0x416c>
   1564c:	ldr	r0, [sp, #36]	; 0x24
   15650:	mov	r6, #0
   15654:	mov	sl, #0
   15658:	mov	r9, #0
   1565c:	cmp	r0, #0
   15660:	beq	1523c <dcngettext@plt+0x4124>
   15664:	b	15620 <dcngettext@plt+0x4508>
   15668:	mov	r9, #1
   1566c:	b	1523c <dcngettext@plt+0x4124>
   15670:	mov	r0, #0
   15674:	cmn	lr, #1
   15678:	sub	r4, fp, #40	; 0x28
   1567c:	str	r0, [fp, #-36]	; 0xffffffdc
   15680:	str	r0, [fp, #-40]	; 0xffffffd8
   15684:	bne	15698 <dcngettext@plt+0x4580>
   15688:	mov	r0, ip
   1568c:	bl	11004 <strlen@plt>
   15690:	ldr	ip, [fp, #-80]	; 0xffffffb0
   15694:	mov	lr, r0
   15698:	ldr	r0, [sp, #72]	; 0x48
   1569c:	mov	r9, #1
   156a0:	mov	r2, #0
   156a4:	str	lr, [sp, #28]
   156a8:	add	r0, r0, r7
   156ac:	str	r0, [sp, #20]
   156b0:	b	156f4 <dcngettext@plt+0x45dc>
   156b4:	ldr	r5, [sp, #44]	; 0x2c
   156b8:	add	r5, r0, r5
   156bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   156c0:	bl	10f44 <iswprint@plt>
   156c4:	cmp	r0, #0
   156c8:	sub	r4, fp, #40	; 0x28
   156cc:	movwne	r0, #1
   156d0:	and	r9, r9, r0
   156d4:	mov	r0, r4
   156d8:	bl	10f14 <mbsinit@plt>
   156dc:	mov	r2, r5
   156e0:	ldr	lr, [sp, #28]
   156e4:	ldr	r5, [fp, #-84]	; 0xffffffac
   156e8:	ldr	ip, [fp, #-80]	; 0xffffffb0
   156ec:	cmp	r0, #0
   156f0:	bne	15584 <dcngettext@plt+0x446c>
   156f4:	add	r0, r2, r7
   156f8:	str	r2, [sp, #44]	; 0x2c
   156fc:	mov	r3, r4
   15700:	add	r1, ip, r0
   15704:	str	r0, [sp, #24]
   15708:	sub	r2, lr, r0
   1570c:	sub	r0, fp, #44	; 0x2c
   15710:	bl	1777c <dcngettext@plt+0x6664>
   15714:	cmp	r0, #0
   15718:	beq	15abc <dcngettext@plt+0x49a4>
   1571c:	cmn	r0, #1
   15720:	beq	15a78 <dcngettext@plt+0x4960>
   15724:	ldr	lr, [sp, #28]
   15728:	cmn	r0, #2
   1572c:	beq	15a80 <dcngettext@plt+0x4968>
   15730:	ldr	r2, [sp, #64]	; 0x40
   15734:	ldr	r4, [sp, #88]	; 0x58
   15738:	ldr	ip, [sp, #84]	; 0x54
   1573c:	cmp	r0, #2
   15740:	mov	r1, #0
   15744:	movwcc	r1, #1
   15748:	eor	r2, r2, #1
   1574c:	orrs	r1, r2, r1
   15750:	bne	156b4 <dcngettext@plt+0x459c>
   15754:	ldr	r1, [sp, #44]	; 0x2c
   15758:	ldr	r2, [sp, #20]
   1575c:	add	r1, r2, r1
   15760:	sub	r2, r0, #1
   15764:	b	15774 <dcngettext@plt+0x465c>
   15768:	add	r1, r1, #1
   1576c:	subs	r2, r2, #1
   15770:	beq	156b4 <dcngettext@plt+0x459c>
   15774:	ldrb	r3, [r1]
   15778:	sub	r3, r3, #91	; 0x5b
   1577c:	cmp	r3, #33	; 0x21
   15780:	bhi	15768 <dcngettext@plt+0x4650>
   15784:	add	r5, pc, #0
   15788:	ldr	pc, [r5, r3, lsl #2]
   1578c:	andeq	r5, r1, r0, ror fp
   15790:	andeq	r5, r1, r0, ror fp
   15794:	andeq	r5, r1, r8, ror #14
   15798:	andeq	r5, r1, r0, ror fp
   1579c:	andeq	r5, r1, r8, ror #14
   157a0:	andeq	r5, r1, r0, ror fp
   157a4:	andeq	r5, r1, r8, ror #14
   157a8:	andeq	r5, r1, r8, ror #14
   157ac:	andeq	r5, r1, r8, ror #14
   157b0:	andeq	r5, r1, r8, ror #14
   157b4:	andeq	r5, r1, r8, ror #14
   157b8:	andeq	r5, r1, r8, ror #14
   157bc:	andeq	r5, r1, r8, ror #14
   157c0:	andeq	r5, r1, r8, ror #14
   157c4:	andeq	r5, r1, r8, ror #14
   157c8:	andeq	r5, r1, r8, ror #14
   157cc:	andeq	r5, r1, r8, ror #14
   157d0:	andeq	r5, r1, r8, ror #14
   157d4:	andeq	r5, r1, r8, ror #14
   157d8:	andeq	r5, r1, r8, ror #14
   157dc:	andeq	r5, r1, r8, ror #14
   157e0:	andeq	r5, r1, r8, ror #14
   157e4:	andeq	r5, r1, r8, ror #14
   157e8:	andeq	r5, r1, r8, ror #14
   157ec:	andeq	r5, r1, r8, ror #14
   157f0:	andeq	r5, r1, r8, ror #14
   157f4:	andeq	r5, r1, r8, ror #14
   157f8:	andeq	r5, r1, r8, ror #14
   157fc:	andeq	r5, r1, r8, ror #14
   15800:	andeq	r5, r1, r8, ror #14
   15804:	andeq	r5, r1, r8, ror #14
   15808:	andeq	r5, r1, r8, ror #14
   1580c:	andeq	r5, r1, r8, ror #14
   15810:	andeq	r5, r1, r0, ror fp
   15814:	mov	r8, r0
   15818:	b	1523c <dcngettext@plt+0x4124>
   1581c:	ldr	r0, [sp, #32]
   15820:	cmp	r0, #0
   15824:	beq	158c4 <dcngettext@plt+0x47ac>
   15828:	add	r0, r7, #2
   1582c:	cmp	r0, lr
   15830:	bcs	158c4 <dcngettext@plt+0x47ac>
   15834:	add	r1, r7, ip
   15838:	ldrb	r1, [r1, #1]
   1583c:	cmp	r1, #63	; 0x3f
   15840:	bne	158c4 <dcngettext@plt+0x47ac>
   15844:	ldrb	r9, [ip, r0]
   15848:	sub	r2, r9, #33	; 0x21
   1584c:	cmp	r2, #29
   15850:	bhi	158c4 <dcngettext@plt+0x47ac>
   15854:	movw	r1, #20929	; 0x51c1
   15858:	mov	r3, #1
   1585c:	movt	r1, #14336	; 0x3800
   15860:	tst	r1, r3, lsl r2
   15864:	beq	158c4 <dcngettext@plt+0x47ac>
   15868:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1586c:	tst	r1, #1
   15870:	bne	15b94 <dcngettext@plt+0x4a7c>
   15874:	cmp	r8, r4
   15878:	add	r2, r8, #1
   1587c:	mov	r6, r9
   15880:	mov	r7, r0
   15884:	mov	r9, #0
   15888:	movcc	r1, #63	; 0x3f
   1588c:	strbcc	r1, [r5, r8]
   15890:	cmp	r2, r4
   15894:	movcc	r1, #34	; 0x22
   15898:	strbcc	r1, [r5, r2]
   1589c:	add	r2, r8, #2
   158a0:	cmp	r2, r4
   158a4:	movcc	r1, #34	; 0x22
   158a8:	strbcc	r1, [r5, r2]
   158ac:	add	r2, r8, #3
   158b0:	add	r8, r8, #4
   158b4:	cmp	r2, r4
   158b8:	movcc	r1, #63	; 0x3f
   158bc:	strbcc	r1, [r5, r2]
   158c0:	b	1523c <dcngettext@plt+0x4124>
   158c4:	mov	r9, #0
   158c8:	b	1523c <dcngettext@plt+0x4124>
   158cc:	ldr	lr, [sp, #28]
   158d0:	ldr	r4, [fp, #-56]	; 0xffffffc8
   158d4:	add	r1, r2, r7
   158d8:	mov	r2, #0
   158dc:	str	r1, [sp, #44]	; 0x2c
   158e0:	tst	r0, #1
   158e4:	bne	15a00 <dcngettext@plt+0x48e8>
   158e8:	ldr	r1, [fp, #-76]	; 0xffffffb4
   158ec:	tst	r1, #1
   158f0:	bne	15b90 <dcngettext@plt+0x4a78>
   158f4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   158f8:	subs	r2, r1, #2
   158fc:	movwne	r2, #1
   15900:	orr	r2, r2, r4
   15904:	tst	r2, #1
   15908:	bne	1594c <dcngettext@plt+0x4834>
   1590c:	ldr	r1, [sp, #88]	; 0x58
   15910:	add	r2, r8, #1
   15914:	mov	r4, #1
   15918:	cmp	r8, r1
   1591c:	movcc	r1, #39	; 0x27
   15920:	strbcc	r1, [r5, r8]
   15924:	ldr	r1, [sp, #88]	; 0x58
   15928:	cmp	r2, r1
   1592c:	movcc	r1, #36	; 0x24
   15930:	strbcc	r1, [r5, r2]
   15934:	ldr	r1, [sp, #88]	; 0x58
   15938:	add	r2, r8, #2
   1593c:	add	r8, r8, #3
   15940:	cmp	r2, r1
   15944:	movcc	r1, #39	; 0x27
   15948:	strbcc	r1, [r5, r2]
   1594c:	ldr	r1, [sp, #88]	; 0x58
   15950:	add	r2, r8, #1
   15954:	cmp	r8, r1
   15958:	movcc	r1, #92	; 0x5c
   1595c:	strbcc	r1, [r5, r8]
   15960:	ldr	r1, [sp, #88]	; 0x58
   15964:	cmp	r2, r1
   15968:	bcs	1597c <dcngettext@plt+0x4864>
   1596c:	uxtb	r3, r6
   15970:	mov	r1, #48	; 0x30
   15974:	orr	r3, r1, r3, lsr #6
   15978:	strb	r3, [r5, r2]
   1597c:	ldr	r1, [sp, #88]	; 0x58
   15980:	add	r2, r8, #2
   15984:	add	r8, r8, #3
   15988:	cmp	r2, r1
   1598c:	lsrcc	r3, r6, #3
   15990:	movcc	r1, #6
   15994:	bficc	r3, r1, #3, #29
   15998:	mov	r1, #6
   1599c:	bfi	r6, r1, #3, #29
   159a0:	strbcc	r3, [r5, r2]
   159a4:	mov	r2, #1
   159a8:	b	15a28 <dcngettext@plt+0x4910>
   159ac:	ldr	r1, [sp, #88]	; 0x58
   159b0:	ldr	r5, [fp, #-84]	; 0xffffffac
   159b4:	ldr	r4, [sp, #88]	; 0x58
   159b8:	cmp	r8, r1
   159bc:	movcc	r1, #39	; 0x27
   159c0:	strbcc	r1, [r5, r8]
   159c4:	add	r1, r8, #1
   159c8:	add	r8, r8, #2
   159cc:	cmp	r1, r4
   159d0:	movcc	r4, #39	; 0x27
   159d4:	strbcc	r4, [r5, r1]
   159d8:	mov	r4, #0
   159dc:	ldr	r1, [sp, #88]	; 0x58
   159e0:	cmp	r8, r1
   159e4:	ldr	r1, [sp, #72]	; 0x48
   159e8:	strbcc	r6, [r5, r8]
   159ec:	add	r8, r8, #1
   159f0:	ldrb	r6, [r1, r7]
   159f4:	mov	r7, r3
   159f8:	tst	r0, #1
   159fc:	beq	158e8 <dcngettext@plt+0x47d0>
   15a00:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15a04:	tst	r1, #1
   15a08:	beq	15a20 <dcngettext@plt+0x4908>
   15a0c:	ldr	r1, [sp, #88]	; 0x58
   15a10:	cmp	r8, r1
   15a14:	movcc	r1, #92	; 0x5c
   15a18:	strbcc	r1, [r5, r8]
   15a1c:	add	r8, r8, #1
   15a20:	mov	r1, #0
   15a24:	str	r1, [fp, #-52]	; 0xffffffcc
   15a28:	ldr	r1, [sp, #44]	; 0x2c
   15a2c:	add	r3, r7, #1
   15a30:	and	sl, r2, #1
   15a34:	cmp	r1, r3
   15a38:	bls	15a5c <dcngettext@plt+0x4944>
   15a3c:	cmp	sl, #0
   15a40:	mvn	r5, r4
   15a44:	movwne	sl, #1
   15a48:	orr	r5, r5, sl
   15a4c:	tst	r5, #1
   15a50:	beq	159ac <dcngettext@plt+0x4894>
   15a54:	ldr	r5, [fp, #-84]	; 0xffffffac
   15a58:	b	159dc <dcngettext@plt+0x48c4>
   15a5c:	str	r4, [fp, #-56]	; 0xffffffc8
   15a60:	ldr	r4, [sp, #88]	; 0x58
   15a64:	cmp	sl, #0
   15a68:	movwne	sl, #1
   15a6c:	cmp	sl, #0
   15a70:	beq	155cc <dcngettext@plt+0x44b4>
   15a74:	b	15600 <dcngettext@plt+0x44e8>
   15a78:	mov	r9, #0
   15a7c:	b	15abc <dcngettext@plt+0x49a4>
   15a80:	ldr	r0, [sp, #24]
   15a84:	mov	r9, #0
   15a88:	cmp	lr, r0
   15a8c:	bls	15abc <dcngettext@plt+0x49a4>
   15a90:	ldr	ip, [fp, #-80]	; 0xffffffb0
   15a94:	ldr	r2, [sp, #44]	; 0x2c
   15a98:	add	r0, ip, r7
   15a9c:	ldrb	r1, [r0, r2]
   15aa0:	cmp	r1, #0
   15aa4:	beq	15584 <dcngettext@plt+0x446c>
   15aa8:	add	r2, r2, #1
   15aac:	add	r1, r7, r2
   15ab0:	cmp	r1, lr
   15ab4:	bcc	15a9c <dcngettext@plt+0x4984>
   15ab8:	b	15584 <dcngettext@plt+0x446c>
   15abc:	ldr	ip, [fp, #-80]	; 0xffffffb0
   15ac0:	ldr	r2, [sp, #44]	; 0x2c
   15ac4:	b	15584 <dcngettext@plt+0x446c>
   15ac8:	mov	lr, r7
   15acc:	b	15ad4 <dcngettext@plt+0x49bc>
   15ad0:	mvn	lr, #0
   15ad4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15ad8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   15adc:	eor	r0, r1, #2
   15ae0:	orr	r0, r0, r8
   15ae4:	clz	r0, r0
   15ae8:	lsr	r0, r0, #5
   15aec:	tst	r2, r0
   15af0:	bne	15b94 <dcngettext@plt+0x4a7c>
   15af4:	subs	r0, r1, #2
   15af8:	movwne	r0, #1
   15afc:	orr	r0, r2, r0
   15b00:	tst	r0, #1
   15b04:	ldreq	r0, [sp, #60]	; 0x3c
   15b08:	eoreq	r0, r0, #1
   15b0c:	tsteq	r0, #1
   15b10:	bne	15c28 <dcngettext@plt+0x4b10>
   15b14:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15b18:	mov	sl, lr
   15b1c:	tst	r0, #1
   15b20:	bne	15bf4 <dcngettext@plt+0x4adc>
   15b24:	ldr	r6, [sp, #56]	; 0x38
   15b28:	mov	r9, #0
   15b2c:	cmp	r6, #0
   15b30:	beq	15c20 <dcngettext@plt+0x4b08>
   15b34:	ldr	r0, [sp, #84]	; 0x54
   15b38:	mov	r1, #0
   15b3c:	mov	r7, #2
   15b40:	cmp	r4, #0
   15b44:	str	r1, [fp, #-48]	; 0xffffffd0
   15b48:	mov	r1, #0
   15b4c:	str	r1, [fp, #-76]	; 0xffffffb4
   15b50:	beq	14cf0 <dcngettext@plt+0x3bd8>
   15b54:	b	15c28 <dcngettext@plt+0x4b10>
   15b58:	ldr	ip, [fp, #-80]	; 0xffffffb0
   15b5c:	ldr	r1, [fp, #12]
   15b60:	ldr	r2, [fp, #-68]	; 0xffffffbc
   15b64:	mov	lr, r4
   15b68:	mov	r4, r6
   15b6c:	b	15bb4 <dcngettext@plt+0x4a9c>
   15b70:	tst	ip, #1
   15b74:	ldr	r5, [fp, #-84]	; 0xffffffac
   15b78:	ldr	ip, [fp, #-80]	; 0xffffffb0
   15b7c:	ldr	r1, [fp, #12]
   15b80:	mov	r0, #2
   15b84:	movwne	r0, #4
   15b88:	mov	r2, r0
   15b8c:	b	15bb4 <dcngettext@plt+0x4a9c>
   15b90:	ldr	r4, [sp, #88]	; 0x58
   15b94:	ldr	r1, [sp, #84]	; 0x54
   15b98:	mov	r0, #2
   15b9c:	tst	r1, #1
   15ba0:	movwne	r0, #4
   15ba4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   15ba8:	ldr	r1, [fp, #12]
   15bac:	cmp	r2, #2
   15bb0:	moveq	r2, r0
   15bb4:	mov	r0, #0
   15bb8:	bic	r1, r1, #2
   15bbc:	str	r2, [sp]
   15bc0:	mov	r2, ip
   15bc4:	mov	r3, lr
   15bc8:	str	r0, [sp, #8]
   15bcc:	ldr	r0, [sp, #76]	; 0x4c
   15bd0:	str	r1, [sp, #4]
   15bd4:	mov	r1, r4
   15bd8:	str	r0, [sp, #12]
   15bdc:	ldr	r0, [sp, #80]	; 0x50
   15be0:	str	r0, [sp, #16]
   15be4:	mov	r0, r5
   15be8:	bl	14c60 <dcngettext@plt+0x3b48>
   15bec:	mov	r8, r0
   15bf0:	b	15c74 <dcngettext@plt+0x4b5c>
   15bf4:	mov	r0, #5
   15bf8:	ldr	r1, [sp, #56]	; 0x38
   15bfc:	ldr	r2, [fp, #-80]	; 0xffffffb0
   15c00:	mov	r3, sl
   15c04:	str	r0, [sp]
   15c08:	ldr	r0, [fp, #12]
   15c0c:	str	r0, [sp, #4]
   15c10:	ldr	r0, [fp, #16]
   15c14:	str	r0, [sp, #8]
   15c18:	ldr	r0, [sp, #76]	; 0x4c
   15c1c:	b	15bd8 <dcngettext@plt+0x4ac0>
   15c20:	mov	r0, #0
   15c24:	str	r0, [fp, #-76]	; 0xffffffb4
   15c28:	ldr	r1, [fp, #-88]	; 0xffffffa8
   15c2c:	cmp	r1, #0
   15c30:	beq	15c68 <dcngettext@plt+0x4b50>
   15c34:	ldr	r0, [fp, #-76]	; 0xffffffb4
   15c38:	tst	r0, #1
   15c3c:	bne	15c68 <dcngettext@plt+0x4b50>
   15c40:	ldrb	r0, [r1]
   15c44:	cmp	r0, #0
   15c48:	beq	15c68 <dcngettext@plt+0x4b50>
   15c4c:	add	r1, r1, #1
   15c50:	cmp	r8, r4
   15c54:	strbcc	r0, [r5, r8]
   15c58:	add	r8, r8, #1
   15c5c:	ldrb	r0, [r1], #1
   15c60:	cmp	r0, #0
   15c64:	bne	15c50 <dcngettext@plt+0x4b38>
   15c68:	cmp	r8, r4
   15c6c:	movcc	r0, #0
   15c70:	strbcc	r0, [r5, r8]
   15c74:	mov	r0, r8
   15c78:	sub	sp, fp, #28
   15c7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15c80:	mov	r0, #4
   15c84:	b	15ba4 <dcngettext@plt+0x4a8c>
   15c88:	bl	11100 <abort@plt>
   15c8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15c90:	add	fp, sp, #28
   15c94:	sub	sp, sp, #28
   15c98:	movw	r5, #37256	; 0x9188
   15c9c:	cmp	r2, #0
   15ca0:	mov	r4, r1
   15ca4:	mov	r7, r0
   15ca8:	str	r0, [sp, #20]
   15cac:	movt	r5, #2
   15cb0:	movne	r5, r2
   15cb4:	bl	1101c <__errno_location@plt>
   15cb8:	mov	sl, r0
   15cbc:	ldr	r2, [r5, #40]	; 0x28
   15cc0:	ldr	r3, [r5, #44]	; 0x2c
   15cc4:	ldm	r5, {r0, r1}
   15cc8:	orr	r8, r1, #1
   15ccc:	add	r9, r5, #8
   15cd0:	mov	r1, #0
   15cd4:	ldr	r6, [sl]
   15cd8:	stm	sp, {r0, r8, r9}
   15cdc:	mov	r0, #0
   15ce0:	str	r2, [sp, #12]
   15ce4:	str	r3, [sp, #16]
   15ce8:	mov	r2, r7
   15cec:	mov	r3, r4
   15cf0:	str	r6, [sp, #24]
   15cf4:	mov	r6, r4
   15cf8:	bl	14c60 <dcngettext@plt+0x3b48>
   15cfc:	add	r7, r0, #1
   15d00:	mov	r0, r7
   15d04:	bl	16eb8 <dcngettext@plt+0x5da0>
   15d08:	mov	r4, r0
   15d0c:	ldr	r0, [r5]
   15d10:	ldr	r2, [r5, #44]	; 0x2c
   15d14:	ldr	r1, [r5, #40]	; 0x28
   15d18:	mov	r3, r6
   15d1c:	stm	sp, {r0, r8, r9}
   15d20:	str	r2, [sp, #16]
   15d24:	ldr	r2, [sp, #20]
   15d28:	str	r1, [sp, #12]
   15d2c:	mov	r0, r4
   15d30:	mov	r1, r7
   15d34:	bl	14c60 <dcngettext@plt+0x3b48>
   15d38:	ldr	r0, [sp, #24]
   15d3c:	str	r0, [sl]
   15d40:	mov	r0, r4
   15d44:	sub	sp, fp, #28
   15d48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15d4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d50:	add	fp, sp, #28
   15d54:	sub	sp, sp, #36	; 0x24
   15d58:	movw	r8, #37256	; 0x9188
   15d5c:	cmp	r3, #0
   15d60:	mov	r4, r2
   15d64:	str	r2, [sp, #24]
   15d68:	mov	r5, r1
   15d6c:	mov	r6, r0
   15d70:	str	r0, [sp, #20]
   15d74:	movt	r8, #2
   15d78:	movne	r8, r3
   15d7c:	bl	1101c <__errno_location@plt>
   15d80:	str	r0, [sp, #28]
   15d84:	ldr	r1, [r8, #40]	; 0x28
   15d88:	ldr	r2, [r8, #44]	; 0x2c
   15d8c:	ldr	r7, [r0]
   15d90:	cmp	r4, #0
   15d94:	add	sl, r8, #8
   15d98:	mov	r0, #0
   15d9c:	ldm	r8, {r3, r9}
   15da0:	orreq	r9, r9, #1
   15da4:	stm	sp, {r3, r9, sl}
   15da8:	str	r1, [sp, #12]
   15dac:	str	r2, [sp, #16]
   15db0:	mov	r1, #0
   15db4:	mov	r2, r6
   15db8:	mov	r3, r5
   15dbc:	str	r7, [sp, #32]
   15dc0:	mov	r7, r5
   15dc4:	bl	14c60 <dcngettext@plt+0x3b48>
   15dc8:	add	r4, r0, #1
   15dcc:	mov	r5, r0
   15dd0:	mov	r0, r4
   15dd4:	bl	16eb8 <dcngettext@plt+0x5da0>
   15dd8:	mov	r6, r0
   15ddc:	ldr	r0, [r8]
   15de0:	ldr	r2, [r8, #44]	; 0x2c
   15de4:	ldr	r1, [r8, #40]	; 0x28
   15de8:	mov	r3, r7
   15dec:	stm	sp, {r0, r9, sl}
   15df0:	str	r2, [sp, #16]
   15df4:	ldr	r2, [sp, #20]
   15df8:	str	r1, [sp, #12]
   15dfc:	mov	r0, r6
   15e00:	mov	r1, r4
   15e04:	bl	14c60 <dcngettext@plt+0x3b48>
   15e08:	ldr	r0, [sp, #24]
   15e0c:	ldr	r1, [sp, #32]
   15e10:	ldr	r2, [sp, #28]
   15e14:	cmp	r0, #0
   15e18:	str	r1, [r2]
   15e1c:	strne	r5, [r0]
   15e20:	mov	r0, r6
   15e24:	sub	sp, fp, #28
   15e28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15e2c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15e30:	add	fp, sp, #24
   15e34:	movw	r5, #37132	; 0x910c
   15e38:	movw	r8, #37128	; 0x9108
   15e3c:	movt	r5, #2
   15e40:	movt	r8, #2
   15e44:	ldr	r0, [r5]
   15e48:	ldr	r4, [r8]
   15e4c:	cmp	r0, #2
   15e50:	blt	15e7c <dcngettext@plt+0x4d64>
   15e54:	add	r7, r4, #12
   15e58:	mov	r6, #0
   15e5c:	ldr	r0, [r7, r6, lsl #3]
   15e60:	bl	14954 <dcngettext@plt+0x383c>
   15e64:	ldr	r1, [r5]
   15e68:	add	r2, r6, #2
   15e6c:	add	r0, r6, #1
   15e70:	mov	r6, r0
   15e74:	cmp	r2, r1
   15e78:	blt	15e5c <dcngettext@plt+0x4d44>
   15e7c:	ldr	r0, [r4, #4]
   15e80:	movw	r9, #37304	; 0x91b8
   15e84:	movw	r7, #37136	; 0x9110
   15e88:	movt	r9, #2
   15e8c:	movt	r7, #2
   15e90:	cmp	r0, r9
   15e94:	beq	15ea4 <dcngettext@plt+0x4d8c>
   15e98:	bl	14954 <dcngettext@plt+0x383c>
   15e9c:	mov	r0, #256	; 0x100
   15ea0:	stm	r7, {r0, r9}
   15ea4:	cmp	r4, r7
   15ea8:	beq	15eb8 <dcngettext@plt+0x4da0>
   15eac:	mov	r0, r4
   15eb0:	bl	14954 <dcngettext@plt+0x383c>
   15eb4:	str	r7, [r8]
   15eb8:	mov	r0, #1
   15ebc:	str	r0, [r5]
   15ec0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15ec4:	movw	r3, #37256	; 0x9188
   15ec8:	mvn	r2, #0
   15ecc:	movt	r3, #2
   15ed0:	b	15ed4 <dcngettext@plt+0x4dbc>
   15ed4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15ed8:	add	fp, sp, #28
   15edc:	sub	sp, sp, #44	; 0x2c
   15ee0:	mov	r7, r3
   15ee4:	str	r2, [sp, #36]	; 0x24
   15ee8:	str	r1, [sp, #32]
   15eec:	mov	r5, r0
   15ef0:	bl	1101c <__errno_location@plt>
   15ef4:	cmp	r5, #0
   15ef8:	bmi	16068 <dcngettext@plt+0x4f50>
   15efc:	cmn	r5, #-2147483647	; 0x80000001
   15f00:	beq	16068 <dcngettext@plt+0x4f50>
   15f04:	movw	r8, #37132	; 0x910c
   15f08:	movw	r4, #37128	; 0x9108
   15f0c:	str	r0, [sp, #28]
   15f10:	ldr	r0, [r0]
   15f14:	movt	r8, #2
   15f18:	movt	r4, #2
   15f1c:	ldr	r1, [r8]
   15f20:	ldr	r6, [r4]
   15f24:	str	r0, [sp, #24]
   15f28:	cmp	r1, r5
   15f2c:	ble	15f38 <dcngettext@plt+0x4e20>
   15f30:	mov	sl, r6
   15f34:	b	15fa4 <dcngettext@plt+0x4e8c>
   15f38:	movw	r9, #37136	; 0x9110
   15f3c:	mov	r0, #8
   15f40:	str	r1, [fp, #-32]	; 0xffffffe0
   15f44:	sub	r1, r5, r1
   15f48:	mvn	r3, #-2147483648	; 0x80000000
   15f4c:	movt	r9, #2
   15f50:	str	r0, [sp]
   15f54:	add	r2, r1, #1
   15f58:	sub	r1, fp, #32
   15f5c:	subs	r0, r6, r9
   15f60:	movne	r0, r6
   15f64:	bl	170b8 <dcngettext@plt+0x5fa0>
   15f68:	mov	sl, r0
   15f6c:	cmp	r6, r9
   15f70:	str	r0, [r4]
   15f74:	bne	15f80 <dcngettext@plt+0x4e68>
   15f78:	ldrd	r0, [r9]
   15f7c:	stm	sl, {r0, r1}
   15f80:	ldr	r1, [r8]
   15f84:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15f88:	add	r0, sl, r1, lsl #3
   15f8c:	sub	r1, r2, r1
   15f90:	lsl	r2, r1, #3
   15f94:	mov	r1, #0
   15f98:	bl	11040 <memset@plt>
   15f9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15fa0:	str	r0, [r8]
   15fa4:	mov	r9, sl
   15fa8:	ldm	r7, {r0, r1}
   15fac:	orr	r8, r1, #1
   15fb0:	add	r1, r7, #8
   15fb4:	ldr	r2, [r7, #40]	; 0x28
   15fb8:	ldr	r3, [r7, #44]	; 0x2c
   15fbc:	ldr	r6, [r9, r5, lsl #3]!
   15fc0:	str	r1, [sp, #20]
   15fc4:	ldr	r4, [r9, #4]!
   15fc8:	stm	sp, {r0, r8}
   15fcc:	add	r0, sp, #8
   15fd0:	stm	r0, {r1, r2, r3}
   15fd4:	ldr	r2, [sp, #32]
   15fd8:	ldr	r3, [sp, #36]	; 0x24
   15fdc:	mov	r1, r6
   15fe0:	mov	r0, r4
   15fe4:	bl	14c60 <dcngettext@plt+0x3b48>
   15fe8:	cmp	r6, r0
   15fec:	bhi	16050 <dcngettext@plt+0x4f38>
   15ff0:	add	r6, r0, #1
   15ff4:	movw	r0, #37304	; 0x91b8
   15ff8:	movt	r0, #2
   15ffc:	str	r6, [sl, r5, lsl #3]
   16000:	cmp	r4, r0
   16004:	beq	16010 <dcngettext@plt+0x4ef8>
   16008:	mov	r0, r4
   1600c:	bl	14954 <dcngettext@plt+0x383c>
   16010:	mov	r0, r6
   16014:	bl	16eb8 <dcngettext@plt+0x5da0>
   16018:	str	r0, [r9]
   1601c:	mov	r4, r0
   16020:	add	r3, sp, #8
   16024:	ldr	r0, [r7]
   16028:	ldr	r1, [r7, #40]	; 0x28
   1602c:	ldr	r2, [r7, #44]	; 0x2c
   16030:	stm	sp, {r0, r8}
   16034:	ldr	r0, [sp, #20]
   16038:	stm	r3, {r0, r1, r2}
   1603c:	ldr	r2, [sp, #32]
   16040:	ldr	r3, [sp, #36]	; 0x24
   16044:	mov	r0, r4
   16048:	mov	r1, r6
   1604c:	bl	14c60 <dcngettext@plt+0x3b48>
   16050:	ldr	r0, [sp, #28]
   16054:	ldr	r1, [sp, #24]
   16058:	str	r1, [r0]
   1605c:	mov	r0, r4
   16060:	sub	sp, fp, #28
   16064:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16068:	bl	11100 <abort@plt>
   1606c:	movw	r3, #37256	; 0x9188
   16070:	movt	r3, #2
   16074:	b	15ed4 <dcngettext@plt+0x4dbc>
   16078:	movw	r3, #37256	; 0x9188
   1607c:	mov	r1, r0
   16080:	mov	r0, #0
   16084:	mvn	r2, #0
   16088:	movt	r3, #2
   1608c:	b	15ed4 <dcngettext@plt+0x4dbc>
   16090:	movw	r3, #37256	; 0x9188
   16094:	mov	r2, r1
   16098:	mov	r1, r0
   1609c:	mov	r0, #0
   160a0:	movt	r3, #2
   160a4:	b	15ed4 <dcngettext@plt+0x4dbc>
   160a8:	push	{fp, lr}
   160ac:	mov	fp, sp
   160b0:	sub	sp, sp, #48	; 0x30
   160b4:	vmov.i32	q8, #0	; 0x00000000
   160b8:	mov	ip, #32
   160bc:	mov	r3, sp
   160c0:	mov	lr, r2
   160c4:	cmp	r1, #10
   160c8:	add	r2, r3, #16
   160cc:	vst1.64	{d16-d17}, [r3], ip
   160d0:	vst1.64	{d16-d17}, [r2]
   160d4:	vst1.64	{d16-d17}, [r3]
   160d8:	beq	160f8 <dcngettext@plt+0x4fe0>
   160dc:	str	r1, [sp]
   160e0:	mov	r3, sp
   160e4:	mov	r1, lr
   160e8:	mvn	r2, #0
   160ec:	bl	15ed4 <dcngettext@plt+0x4dbc>
   160f0:	mov	sp, fp
   160f4:	pop	{fp, pc}
   160f8:	bl	11100 <abort@plt>
   160fc:	push	{r4, sl, fp, lr}
   16100:	add	fp, sp, #8
   16104:	sub	sp, sp, #48	; 0x30
   16108:	vmov.i32	q8, #0	; 0x00000000
   1610c:	mov	ip, r3
   16110:	mov	r3, sp
   16114:	mov	lr, #32
   16118:	cmp	r1, #10
   1611c:	add	r4, r3, #16
   16120:	vst1.64	{d16-d17}, [r3], lr
   16124:	vst1.64	{d16-d17}, [r4]
   16128:	vst1.64	{d16-d17}, [r3]
   1612c:	beq	1614c <dcngettext@plt+0x5034>
   16130:	str	r1, [sp]
   16134:	mov	r1, r2
   16138:	mov	r3, sp
   1613c:	mov	r2, ip
   16140:	bl	15ed4 <dcngettext@plt+0x4dbc>
   16144:	sub	sp, fp, #8
   16148:	pop	{r4, sl, fp, pc}
   1614c:	bl	11100 <abort@plt>
   16150:	push	{fp, lr}
   16154:	mov	fp, sp
   16158:	sub	sp, sp, #48	; 0x30
   1615c:	vmov.i32	q8, #0	; 0x00000000
   16160:	mov	r3, sp
   16164:	mov	ip, #32
   16168:	cmp	r0, #10
   1616c:	add	r2, r3, #16
   16170:	vst1.64	{d16-d17}, [r3], ip
   16174:	vst1.64	{d16-d17}, [r2]
   16178:	vst1.64	{d16-d17}, [r3]
   1617c:	beq	1619c <dcngettext@plt+0x5084>
   16180:	str	r0, [sp]
   16184:	mov	r3, sp
   16188:	mov	r0, #0
   1618c:	mvn	r2, #0
   16190:	bl	15ed4 <dcngettext@plt+0x4dbc>
   16194:	mov	sp, fp
   16198:	pop	{fp, pc}
   1619c:	bl	11100 <abort@plt>
   161a0:	push	{fp, lr}
   161a4:	mov	fp, sp
   161a8:	sub	sp, sp, #48	; 0x30
   161ac:	vmov.i32	q8, #0	; 0x00000000
   161b0:	mov	r3, sp
   161b4:	mov	ip, #32
   161b8:	cmp	r0, #10
   161bc:	add	lr, r3, #16
   161c0:	vst1.64	{d16-d17}, [r3], ip
   161c4:	vst1.64	{d16-d17}, [lr]
   161c8:	vst1.64	{d16-d17}, [r3]
   161cc:	beq	161e8 <dcngettext@plt+0x50d0>
   161d0:	str	r0, [sp]
   161d4:	mov	r3, sp
   161d8:	mov	r0, #0
   161dc:	bl	15ed4 <dcngettext@plt+0x4dbc>
   161e0:	mov	sp, fp
   161e4:	pop	{fp, pc}
   161e8:	bl	11100 <abort@plt>
   161ec:	push	{r4, sl, fp, lr}
   161f0:	add	fp, sp, #8
   161f4:	sub	sp, sp, #48	; 0x30
   161f8:	mov	lr, r0
   161fc:	movw	r0, #37256	; 0x9188
   16200:	mov	ip, r1
   16204:	mov	r1, #32
   16208:	mov	r4, #1
   1620c:	movt	r0, #2
   16210:	add	r3, r0, #16
   16214:	vld1.64	{d16-d17}, [r0], r1
   16218:	vld1.64	{d20-d21}, [r0]
   1621c:	vld1.64	{d18-d19}, [r3]
   16220:	mov	r3, sp
   16224:	add	r0, r3, #32
   16228:	add	r1, r3, #16
   1622c:	vst1.64	{d20-d21}, [r0]
   16230:	mov	r0, #28
   16234:	vst1.64	{d18-d19}, [r1]
   16238:	mov	r1, r3
   1623c:	and	r0, r0, r2, lsr #3
   16240:	and	r2, r2, #31
   16244:	vst1.64	{d16-d17}, [r1], r0
   16248:	ldr	r0, [r1, #8]
   1624c:	bic	r4, r4, r0, lsr r2
   16250:	eor	r0, r0, r4, lsl r2
   16254:	mov	r2, ip
   16258:	str	r0, [r1, #8]
   1625c:	mov	r0, #0
   16260:	mov	r1, lr
   16264:	bl	15ed4 <dcngettext@plt+0x4dbc>
   16268:	sub	sp, fp, #8
   1626c:	pop	{r4, sl, fp, pc}
   16270:	push	{fp, lr}
   16274:	mov	fp, sp
   16278:	sub	sp, sp, #48	; 0x30
   1627c:	mov	ip, r0
   16280:	movw	r0, #37256	; 0x9188
   16284:	mov	r2, #32
   16288:	movt	r0, #2
   1628c:	add	r3, r0, #16
   16290:	vld1.64	{d16-d17}, [r0], r2
   16294:	vld1.64	{d20-d21}, [r0]
   16298:	vld1.64	{d18-d19}, [r3]
   1629c:	mov	r3, sp
   162a0:	add	r0, r3, #32
   162a4:	add	r2, r3, #16
   162a8:	vst1.64	{d20-d21}, [r0]
   162ac:	mov	r0, #28
   162b0:	vst1.64	{d18-d19}, [r2]
   162b4:	mov	r2, r3
   162b8:	and	r0, r0, r1, lsr #3
   162bc:	and	r1, r1, #31
   162c0:	vst1.64	{d16-d17}, [r2], r0
   162c4:	mov	r0, #1
   162c8:	ldr	lr, [r2, #8]
   162cc:	bic	r0, r0, lr, lsr r1
   162d0:	eor	r0, lr, r0, lsl r1
   162d4:	mov	r1, ip
   162d8:	str	r0, [r2, #8]
   162dc:	mov	r0, #0
   162e0:	mvn	r2, #0
   162e4:	bl	15ed4 <dcngettext@plt+0x4dbc>
   162e8:	mov	sp, fp
   162ec:	pop	{fp, pc}
   162f0:	push	{fp, lr}
   162f4:	mov	fp, sp
   162f8:	sub	sp, sp, #48	; 0x30
   162fc:	mov	r1, r0
   16300:	movw	r0, #37256	; 0x9188
   16304:	mov	r3, #32
   16308:	movt	r0, #2
   1630c:	add	r2, r0, #16
   16310:	vld1.64	{d16-d17}, [r0], r3
   16314:	mov	r3, sp
   16318:	vld1.64	{d18-d19}, [r2]
   1631c:	vld1.64	{d20-d21}, [r0]
   16320:	add	r2, r3, #16
   16324:	add	r0, r3, #32
   16328:	vst1.64	{d18-d19}, [r2]
   1632c:	vst1.64	{d20-d21}, [r0]
   16330:	mov	r0, #12
   16334:	mov	r2, r3
   16338:	vst1.64	{d16-d17}, [r2], r0
   1633c:	ldr	r0, [r2]
   16340:	orr	r0, r0, #67108864	; 0x4000000
   16344:	str	r0, [r2]
   16348:	mov	r0, #0
   1634c:	mvn	r2, #0
   16350:	bl	15ed4 <dcngettext@plt+0x4dbc>
   16354:	mov	sp, fp
   16358:	pop	{fp, pc}
   1635c:	push	{fp, lr}
   16360:	mov	fp, sp
   16364:	sub	sp, sp, #48	; 0x30
   16368:	mov	ip, r1
   1636c:	mov	r1, r0
   16370:	movw	r0, #37256	; 0x9188
   16374:	mov	r2, #32
   16378:	movt	r0, #2
   1637c:	add	r3, r0, #16
   16380:	vld1.64	{d16-d17}, [r0], r2
   16384:	vld1.64	{d18-d19}, [r3]
   16388:	vld1.64	{d20-d21}, [r0]
   1638c:	mov	r3, sp
   16390:	add	r2, r3, #16
   16394:	add	r0, r3, #32
   16398:	vst1.64	{d18-d19}, [r2]
   1639c:	vst1.64	{d20-d21}, [r0]
   163a0:	mov	r0, #12
   163a4:	mov	r2, r3
   163a8:	vst1.64	{d16-d17}, [r2], r0
   163ac:	ldr	r0, [r2]
   163b0:	orr	r0, r0, #67108864	; 0x4000000
   163b4:	str	r0, [r2]
   163b8:	mov	r0, #0
   163bc:	mov	r2, ip
   163c0:	bl	15ed4 <dcngettext@plt+0x4dbc>
   163c4:	mov	sp, fp
   163c8:	pop	{fp, pc}
   163cc:	push	{r4, sl, fp, lr}
   163d0:	add	fp, sp, #8
   163d4:	sub	sp, sp, #96	; 0x60
   163d8:	vmov.i32	q8, #0	; 0x00000000
   163dc:	mov	ip, r2
   163e0:	mov	r2, sp
   163e4:	mov	r4, #28
   163e8:	cmp	r1, #10
   163ec:	mov	r3, r2
   163f0:	add	lr, r2, #16
   163f4:	vst1.64	{d16-d17}, [r3], r4
   163f8:	vst1.64	{d16-d17}, [lr]
   163fc:	vst1.32	{d16-d17}, [r3]
   16400:	beq	16450 <dcngettext@plt+0x5338>
   16404:	vld1.64	{d16-d17}, [r2], r4
   16408:	vld1.64	{d18-d19}, [lr]
   1640c:	add	r3, sp, #48	; 0x30
   16410:	vld1.32	{d20-d21}, [r2]
   16414:	add	r2, r3, #20
   16418:	add	r4, r3, #4
   1641c:	vst1.32	{d18-d19}, [r2]
   16420:	add	r2, r3, #32
   16424:	vst1.32	{d16-d17}, [r4]
   16428:	vst1.32	{d20-d21}, [r2]
   1642c:	str	r1, [sp, #48]	; 0x30
   16430:	mvn	r2, #0
   16434:	ldr	r1, [sp, #60]	; 0x3c
   16438:	orr	r1, r1, #67108864	; 0x4000000
   1643c:	str	r1, [sp, #60]	; 0x3c
   16440:	mov	r1, ip
   16444:	bl	15ed4 <dcngettext@plt+0x4dbc>
   16448:	sub	sp, fp, #8
   1644c:	pop	{r4, sl, fp, pc}
   16450:	bl	11100 <abort@plt>
   16454:	push	{r4, r5, r6, sl, fp, lr}
   16458:	add	fp, sp, #16
   1645c:	sub	sp, sp, #48	; 0x30
   16460:	mov	ip, r3
   16464:	movw	r3, #37256	; 0x9188
   16468:	mov	r6, #32
   1646c:	cmp	r1, #0
   16470:	mov	r4, sp
   16474:	movt	r3, #2
   16478:	cmpne	r2, #0
   1647c:	add	r5, r4, #16
   16480:	add	lr, r3, #16
   16484:	vld1.64	{d16-d17}, [r3], r6
   16488:	vld1.64	{d18-d19}, [lr]
   1648c:	vld1.64	{d20-d21}, [r3]
   16490:	mov	r3, #10
   16494:	vst1.64	{d16-d17}, [r4], r6
   16498:	vst1.64	{d18-d19}, [r5]
   1649c:	vst1.64	{d20-d21}, [r4]
   164a0:	str	r3, [sp]
   164a4:	bne	164ac <dcngettext@plt+0x5394>
   164a8:	bl	11100 <abort@plt>
   164ac:	str	r2, [sp, #44]	; 0x2c
   164b0:	str	r1, [sp, #40]	; 0x28
   164b4:	mov	r3, sp
   164b8:	mov	r1, ip
   164bc:	mvn	r2, #0
   164c0:	bl	15ed4 <dcngettext@plt+0x4dbc>
   164c4:	sub	sp, fp, #16
   164c8:	pop	{r4, r5, r6, sl, fp, pc}
   164cc:	push	{r4, r5, r6, sl, fp, lr}
   164d0:	add	fp, sp, #16
   164d4:	sub	sp, sp, #48	; 0x30
   164d8:	mov	lr, r3
   164dc:	movw	r3, #37256	; 0x9188
   164e0:	mov	r6, #32
   164e4:	cmp	r1, #0
   164e8:	mov	r4, sp
   164ec:	movt	r3, #2
   164f0:	cmpne	r2, #0
   164f4:	add	r5, r4, #16
   164f8:	add	ip, r3, #16
   164fc:	vld1.64	{d16-d17}, [r3], r6
   16500:	vld1.64	{d18-d19}, [ip]
   16504:	vld1.64	{d20-d21}, [r3]
   16508:	mov	r3, #10
   1650c:	vst1.64	{d16-d17}, [r4], r6
   16510:	vst1.64	{d18-d19}, [r5]
   16514:	vst1.64	{d20-d21}, [r4]
   16518:	str	r3, [sp]
   1651c:	bne	16524 <dcngettext@plt+0x540c>
   16520:	bl	11100 <abort@plt>
   16524:	ldr	ip, [fp, #8]
   16528:	str	r2, [sp, #44]	; 0x2c
   1652c:	str	r1, [sp, #40]	; 0x28
   16530:	mov	r3, sp
   16534:	mov	r1, lr
   16538:	mov	r2, ip
   1653c:	bl	15ed4 <dcngettext@plt+0x4dbc>
   16540:	sub	sp, fp, #16
   16544:	pop	{r4, r5, r6, sl, fp, pc}
   16548:	push	{r4, sl, fp, lr}
   1654c:	add	fp, sp, #8
   16550:	sub	sp, sp, #48	; 0x30
   16554:	movw	r3, #37256	; 0x9188
   16558:	mov	lr, #32
   1655c:	mov	ip, r2
   16560:	cmp	r0, #0
   16564:	movt	r3, #2
   16568:	cmpne	r1, #0
   1656c:	add	r2, r3, #16
   16570:	vld1.64	{d16-d17}, [r3], lr
   16574:	vld1.64	{d20-d21}, [r3]
   16578:	vld1.64	{d18-d19}, [r2]
   1657c:	mov	r2, sp
   16580:	add	r4, r2, #16
   16584:	vst1.64	{d16-d17}, [r2], lr
   16588:	vst1.64	{d20-d21}, [r2]
   1658c:	mov	r2, #10
   16590:	vst1.64	{d18-d19}, [r4]
   16594:	str	r2, [sp]
   16598:	bne	165a0 <dcngettext@plt+0x5488>
   1659c:	bl	11100 <abort@plt>
   165a0:	str	r1, [sp, #44]	; 0x2c
   165a4:	str	r0, [sp, #40]	; 0x28
   165a8:	mov	r3, sp
   165ac:	mov	r0, #0
   165b0:	mov	r1, ip
   165b4:	mvn	r2, #0
   165b8:	bl	15ed4 <dcngettext@plt+0x4dbc>
   165bc:	sub	sp, fp, #8
   165c0:	pop	{r4, sl, fp, pc}
   165c4:	push	{r4, r5, fp, lr}
   165c8:	add	fp, sp, #8
   165cc:	sub	sp, sp, #48	; 0x30
   165d0:	mov	ip, r3
   165d4:	movw	r3, #37256	; 0x9188
   165d8:	mov	r4, #32
   165dc:	mov	lr, r2
   165e0:	cmp	r0, #0
   165e4:	movt	r3, #2
   165e8:	cmpne	r1, #0
   165ec:	add	r2, r3, #16
   165f0:	vld1.64	{d16-d17}, [r3], r4
   165f4:	vld1.64	{d20-d21}, [r3]
   165f8:	vld1.64	{d18-d19}, [r2]
   165fc:	mov	r2, sp
   16600:	add	r5, r2, #16
   16604:	vst1.64	{d16-d17}, [r2], r4
   16608:	vst1.64	{d20-d21}, [r2]
   1660c:	mov	r2, #10
   16610:	vst1.64	{d18-d19}, [r5]
   16614:	str	r2, [sp]
   16618:	bne	16620 <dcngettext@plt+0x5508>
   1661c:	bl	11100 <abort@plt>
   16620:	str	r1, [sp, #44]	; 0x2c
   16624:	str	r0, [sp, #40]	; 0x28
   16628:	mov	r3, sp
   1662c:	mov	r0, #0
   16630:	mov	r1, lr
   16634:	mov	r2, ip
   16638:	bl	15ed4 <dcngettext@plt+0x4dbc>
   1663c:	sub	sp, fp, #8
   16640:	pop	{r4, r5, fp, pc}
   16644:	movw	r3, #37144	; 0x9118
   16648:	movt	r3, #2
   1664c:	b	15ed4 <dcngettext@plt+0x4dbc>
   16650:	movw	r3, #37144	; 0x9118
   16654:	mov	r2, r1
   16658:	mov	r1, r0
   1665c:	mov	r0, #0
   16660:	movt	r3, #2
   16664:	b	15ed4 <dcngettext@plt+0x4dbc>
   16668:	movw	r3, #37144	; 0x9118
   1666c:	mvn	r2, #0
   16670:	movt	r3, #2
   16674:	b	15ed4 <dcngettext@plt+0x4dbc>
   16678:	movw	r3, #37144	; 0x9118
   1667c:	mov	r1, r0
   16680:	mov	r0, #0
   16684:	mvn	r2, #0
   16688:	movt	r3, #2
   1668c:	b	15ed4 <dcngettext@plt+0x4dbc>
   16690:	push	{r4, r5, fp, lr}
   16694:	add	fp, sp, #8
   16698:	mov	r5, r0
   1669c:	mov	r4, r1
   166a0:	mov	r0, #0
   166a4:	mov	r2, #5
   166a8:	mov	r1, r5
   166ac:	bl	10f20 <dcgettext@plt>
   166b0:	cmp	r0, r5
   166b4:	popne	{r4, r5, fp, pc}
   166b8:	bl	17744 <dcngettext@plt+0x662c>
   166bc:	ldrb	r1, [r0]
   166c0:	and	r1, r1, #223	; 0xdf
   166c4:	cmp	r1, #71	; 0x47
   166c8:	beq	16730 <dcngettext@plt+0x5618>
   166cc:	cmp	r1, #85	; 0x55
   166d0:	bne	16788 <dcngettext@plt+0x5670>
   166d4:	ldrb	r1, [r0, #1]
   166d8:	and	r1, r1, #223	; 0xdf
   166dc:	cmp	r1, #84	; 0x54
   166e0:	bne	16788 <dcngettext@plt+0x5670>
   166e4:	ldrb	r1, [r0, #2]
   166e8:	and	r1, r1, #223	; 0xdf
   166ec:	cmp	r1, #70	; 0x46
   166f0:	bne	16788 <dcngettext@plt+0x5670>
   166f4:	ldrb	r1, [r0, #3]
   166f8:	cmp	r1, #45	; 0x2d
   166fc:	bne	16788 <dcngettext@plt+0x5670>
   16700:	ldrb	r1, [r0, #4]
   16704:	cmp	r1, #56	; 0x38
   16708:	bne	16788 <dcngettext@plt+0x5670>
   1670c:	ldrb	r0, [r0, #5]
   16710:	cmp	r0, #0
   16714:	bne	16788 <dcngettext@plt+0x5670>
   16718:	ldrb	r1, [r5]
   1671c:	movw	r2, #35040	; 0x88e0
   16720:	movw	r0, #35044	; 0x88e4
   16724:	movt	r2, #1
   16728:	movt	r0, #1
   1672c:	b	167b8 <dcngettext@plt+0x56a0>
   16730:	ldrb	r1, [r0, #1]
   16734:	and	r1, r1, #223	; 0xdf
   16738:	cmp	r1, #66	; 0x42
   1673c:	bne	16788 <dcngettext@plt+0x5670>
   16740:	ldrb	r1, [r0, #2]
   16744:	cmp	r1, #49	; 0x31
   16748:	bne	16788 <dcngettext@plt+0x5670>
   1674c:	ldrb	r1, [r0, #3]
   16750:	cmp	r1, #56	; 0x38
   16754:	bne	16788 <dcngettext@plt+0x5670>
   16758:	ldrb	r1, [r0, #4]
   1675c:	cmp	r1, #48	; 0x30
   16760:	bne	16788 <dcngettext@plt+0x5670>
   16764:	ldrb	r1, [r0, #5]
   16768:	cmp	r1, #51	; 0x33
   1676c:	bne	16788 <dcngettext@plt+0x5670>
   16770:	ldrb	r1, [r0, #6]
   16774:	cmp	r1, #48	; 0x30
   16778:	bne	16788 <dcngettext@plt+0x5670>
   1677c:	ldrb	r0, [r0, #7]
   16780:	cmp	r0, #0
   16784:	beq	167a4 <dcngettext@plt+0x568c>
   16788:	movw	r1, #35034	; 0x88da
   1678c:	movw	r0, #35038	; 0x88de
   16790:	cmp	r4, #9
   16794:	movt	r1, #1
   16798:	movt	r0, #1
   1679c:	moveq	r0, r1
   167a0:	pop	{r4, r5, fp, pc}
   167a4:	ldrb	r1, [r5]
   167a8:	movw	r2, #35048	; 0x88e8
   167ac:	movw	r0, #35052	; 0x88ec
   167b0:	movt	r2, #1
   167b4:	movt	r0, #1
   167b8:	cmp	r1, #96	; 0x60
   167bc:	moveq	r0, r2
   167c0:	pop	{r4, r5, fp, pc}
   167c4:	mov	r1, #0
   167c8:	mov	r2, #3
   167cc:	b	17564 <dcngettext@plt+0x644c>
   167d0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   167d4:	add	fp, sp, #24
   167d8:	sub	sp, sp, #32
   167dc:	ldr	r6, [fp, #12]
   167e0:	ldr	r7, [fp, #8]
   167e4:	mov	r4, r2
   167e8:	mov	r8, r0
   167ec:	cmp	r1, #0
   167f0:	beq	16818 <dcngettext@plt+0x5700>
   167f4:	movw	r2, #35140	; 0x8944
   167f8:	mov	r5, r1
   167fc:	str	r3, [sp, #4]
   16800:	str	r4, [sp]
   16804:	mov	r0, r8
   16808:	mov	r1, #1
   1680c:	movt	r2, #1
   16810:	mov	r3, r5
   16814:	b	16830 <dcngettext@plt+0x5718>
   16818:	movw	r2, #35152	; 0x8950
   1681c:	str	r3, [sp]
   16820:	mov	r0, r8
   16824:	mov	r1, #1
   16828:	mov	r3, r4
   1682c:	movt	r2, #1
   16830:	bl	11064 <__fprintf_chk@plt>
   16834:	movw	r1, #35159	; 0x8957
   16838:	mov	r0, #0
   1683c:	mov	r2, #5
   16840:	movt	r1, #1
   16844:	bl	10f20 <dcgettext@plt>
   16848:	movw	r2, #35877	; 0x8c25
   1684c:	mov	r3, r0
   16850:	movw	r0, #2022	; 0x7e6
   16854:	mov	r1, #1
   16858:	movt	r2, #1
   1685c:	str	r0, [sp]
   16860:	mov	r0, r8
   16864:	bl	11064 <__fprintf_chk@plt>
   16868:	movw	r4, #32424	; 0x7ea8
   1686c:	mov	r1, r8
   16870:	movt	r4, #1
   16874:	mov	r0, r4
   16878:	bl	10ea8 <fputs_unlocked@plt>
   1687c:	movw	r1, #35163	; 0x895b
   16880:	mov	r0, #0
   16884:	mov	r2, #5
   16888:	movt	r1, #1
   1688c:	bl	10f20 <dcgettext@plt>
   16890:	movw	r3, #35334	; 0x8a06
   16894:	mov	r2, r0
   16898:	mov	r0, r8
   1689c:	mov	r1, #1
   168a0:	movt	r3, #1
   168a4:	bl	11064 <__fprintf_chk@plt>
   168a8:	mov	r0, r4
   168ac:	mov	r1, r8
   168b0:	bl	10ea8 <fputs_unlocked@plt>
   168b4:	cmp	r6, #9
   168b8:	bhi	168f4 <dcngettext@plt+0x57dc>
   168bc:	add	r0, pc, #0
   168c0:	ldr	pc, [r0, r6, lsl #2]
   168c4:	andeq	r6, r1, ip, ror #17
   168c8:	andeq	r6, r1, r0, lsl #18
   168cc:	andeq	r6, r1, r0, lsr r9
   168d0:	andeq	r6, r1, r8, asr r9
   168d4:	andeq	r6, r1, r0, lsl #19
   168d8:	andeq	r6, r1, r8, lsr #19
   168dc:	ldrdeq	r6, [r1], -r0
   168e0:	andeq	r6, r1, r8, lsl #20
   168e4:	andeq	r6, r1, r8, lsr #21
   168e8:	andeq	r6, r1, r0, asr sl
   168ec:	sub	sp, fp, #24
   168f0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   168f4:	movw	r1, #35687	; 0x8b67
   168f8:	movt	r1, #1
   168fc:	b	16a58 <dcngettext@plt+0x5940>
   16900:	movw	r1, #35368	; 0x8a28
   16904:	mov	r0, #0
   16908:	mov	r2, #5
   1690c:	movt	r1, #1
   16910:	bl	10f20 <dcgettext@plt>
   16914:	ldr	r3, [r7]
   16918:	mov	r2, r0
   1691c:	mov	r0, r8
   16920:	mov	r1, #1
   16924:	sub	sp, fp, #24
   16928:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1692c:	b	11064 <__fprintf_chk@plt>
   16930:	movw	r1, #35384	; 0x8a38
   16934:	mov	r0, #0
   16938:	mov	r2, #5
   1693c:	movt	r1, #1
   16940:	bl	10f20 <dcgettext@plt>
   16944:	mov	r2, r0
   16948:	ldr	r3, [r7]
   1694c:	ldr	r0, [r7, #4]
   16950:	str	r0, [sp]
   16954:	b	16a44 <dcngettext@plt+0x592c>
   16958:	movw	r1, #35407	; 0x8a4f
   1695c:	mov	r0, #0
   16960:	mov	r2, #5
   16964:	movt	r1, #1
   16968:	bl	10f20 <dcgettext@plt>
   1696c:	mov	r2, r0
   16970:	ldr	r3, [r7]
   16974:	ldmib	r7, {r0, r1}
   16978:	stm	sp, {r0, r1}
   1697c:	b	16a44 <dcngettext@plt+0x592c>
   16980:	movw	r1, #35435	; 0x8a6b
   16984:	mov	r0, #0
   16988:	mov	r2, #5
   1698c:	movt	r1, #1
   16990:	bl	10f20 <dcgettext@plt>
   16994:	ldr	r3, [r7]
   16998:	mov	r2, r0
   1699c:	ldmib	r7, {r0, r1, r7}
   169a0:	stm	sp, {r0, r1, r7}
   169a4:	b	16a44 <dcngettext@plt+0x592c>
   169a8:	movw	r1, #35467	; 0x8a8b
   169ac:	mov	r0, #0
   169b0:	mov	r2, #5
   169b4:	movt	r1, #1
   169b8:	bl	10f20 <dcgettext@plt>
   169bc:	ldr	r3, [r7]
   169c0:	mov	r2, r0
   169c4:	ldmib	r7, {r0, r1, r6, r7}
   169c8:	stm	sp, {r0, r1, r6, r7}
   169cc:	b	16a44 <dcngettext@plt+0x592c>
   169d0:	movw	r1, #35503	; 0x8aaf
   169d4:	mov	r0, #0
   169d8:	mov	r2, #5
   169dc:	movt	r1, #1
   169e0:	bl	10f20 <dcgettext@plt>
   169e4:	mov	r2, r0
   169e8:	ldr	r3, [r7]
   169ec:	ldmib	r7, {r0, r1, r6}
   169f0:	ldr	r5, [r7, #16]
   169f4:	ldr	r7, [r7, #20]
   169f8:	stm	sp, {r0, r1, r6}
   169fc:	str	r5, [sp, #12]
   16a00:	str	r7, [sp, #16]
   16a04:	b	16a44 <dcngettext@plt+0x592c>
   16a08:	movw	r1, #35543	; 0x8ad7
   16a0c:	mov	r0, #0
   16a10:	mov	r2, #5
   16a14:	movt	r1, #1
   16a18:	bl	10f20 <dcgettext@plt>
   16a1c:	mov	r2, r0
   16a20:	ldr	r3, [r7]
   16a24:	ldmib	r7, {r0, r1, r6}
   16a28:	ldr	r5, [r7, #16]
   16a2c:	ldr	r4, [r7, #20]
   16a30:	ldr	r7, [r7, #24]
   16a34:	stm	sp, {r0, r1, r6}
   16a38:	str	r5, [sp, #12]
   16a3c:	str	r4, [sp, #16]
   16a40:	str	r7, [sp, #20]
   16a44:	mov	r0, r8
   16a48:	mov	r1, #1
   16a4c:	b	16af8 <dcngettext@plt+0x59e0>
   16a50:	movw	r1, #35635	; 0x8b33
   16a54:	movt	r1, #1
   16a58:	mov	r0, #0
   16a5c:	mov	r2, #5
   16a60:	bl	10f20 <dcgettext@plt>
   16a64:	mov	ip, r0
   16a68:	ldr	r3, [r7]
   16a6c:	ldr	r0, [r7, #4]
   16a70:	ldr	r1, [r7, #8]
   16a74:	ldr	r6, [r7, #12]
   16a78:	ldr	r5, [r7, #16]
   16a7c:	ldr	r4, [r7, #20]
   16a80:	ldr	r2, [r7, #24]
   16a84:	ldr	lr, [r7, #28]
   16a88:	ldr	r7, [r7, #32]
   16a8c:	stm	sp, {r0, r1, r6}
   16a90:	str	r5, [sp, #12]
   16a94:	str	r4, [sp, #16]
   16a98:	str	r2, [sp, #20]
   16a9c:	str	lr, [sp, #24]
   16aa0:	str	r7, [sp, #28]
   16aa4:	b	16aec <dcngettext@plt+0x59d4>
   16aa8:	movw	r1, #35587	; 0x8b03
   16aac:	mov	r0, #0
   16ab0:	mov	r2, #5
   16ab4:	movt	r1, #1
   16ab8:	bl	10f20 <dcgettext@plt>
   16abc:	mov	ip, r0
   16ac0:	ldr	r3, [r7]
   16ac4:	ldmib	r7, {r0, r1, r6}
   16ac8:	ldr	r5, [r7, #16]
   16acc:	ldr	r4, [r7, #20]
   16ad0:	ldr	r2, [r7, #24]
   16ad4:	ldr	r7, [r7, #28]
   16ad8:	stm	sp, {r0, r1, r6}
   16adc:	str	r5, [sp, #12]
   16ae0:	str	r4, [sp, #16]
   16ae4:	str	r2, [sp, #20]
   16ae8:	str	r7, [sp, #24]
   16aec:	mov	r0, r8
   16af0:	mov	r1, #1
   16af4:	mov	r2, ip
   16af8:	bl	11064 <__fprintf_chk@plt>
   16afc:	sub	sp, fp, #24
   16b00:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16b04:	push	{r4, sl, fp, lr}
   16b08:	add	fp, sp, #8
   16b0c:	sub	sp, sp, #8
   16b10:	ldr	ip, [fp, #8]
   16b14:	mov	lr, #0
   16b18:	ldr	r4, [ip, lr, lsl #2]
   16b1c:	add	lr, lr, #1
   16b20:	cmp	r4, #0
   16b24:	bne	16b18 <dcngettext@plt+0x5a00>
   16b28:	sub	r4, lr, #1
   16b2c:	str	ip, [sp]
   16b30:	str	r4, [sp, #4]
   16b34:	bl	167d0 <dcngettext@plt+0x56b8>
   16b38:	sub	sp, fp, #8
   16b3c:	pop	{r4, sl, fp, pc}
   16b40:	push	{fp, lr}
   16b44:	mov	fp, sp
   16b48:	sub	sp, sp, #48	; 0x30
   16b4c:	ldr	ip, [fp, #8]
   16b50:	ldr	lr, [ip]
   16b54:	cmp	lr, #0
   16b58:	str	lr, [sp, #8]
   16b5c:	beq	16bf8 <dcngettext@plt+0x5ae0>
   16b60:	ldr	lr, [ip, #4]
   16b64:	cmp	lr, #0
   16b68:	str	lr, [sp, #12]
   16b6c:	beq	16c00 <dcngettext@plt+0x5ae8>
   16b70:	ldr	lr, [ip, #8]
   16b74:	cmp	lr, #0
   16b78:	str	lr, [sp, #16]
   16b7c:	beq	16c08 <dcngettext@plt+0x5af0>
   16b80:	ldr	lr, [ip, #12]
   16b84:	cmp	lr, #0
   16b88:	str	lr, [sp, #20]
   16b8c:	beq	16c10 <dcngettext@plt+0x5af8>
   16b90:	ldr	lr, [ip, #16]
   16b94:	cmp	lr, #0
   16b98:	str	lr, [sp, #24]
   16b9c:	beq	16c18 <dcngettext@plt+0x5b00>
   16ba0:	ldr	lr, [ip, #20]
   16ba4:	cmp	lr, #0
   16ba8:	str	lr, [sp, #28]
   16bac:	beq	16c20 <dcngettext@plt+0x5b08>
   16bb0:	ldr	lr, [ip, #24]
   16bb4:	cmp	lr, #0
   16bb8:	str	lr, [sp, #32]
   16bbc:	beq	16c28 <dcngettext@plt+0x5b10>
   16bc0:	ldr	lr, [ip, #28]
   16bc4:	cmp	lr, #0
   16bc8:	str	lr, [sp, #36]	; 0x24
   16bcc:	beq	16c30 <dcngettext@plt+0x5b18>
   16bd0:	ldr	lr, [ip, #32]
   16bd4:	cmp	lr, #0
   16bd8:	str	lr, [sp, #40]	; 0x28
   16bdc:	beq	16c38 <dcngettext@plt+0x5b20>
   16be0:	ldr	lr, [ip, #36]	; 0x24
   16be4:	mov	ip, #10
   16be8:	cmp	lr, #0
   16bec:	str	lr, [sp, #44]	; 0x2c
   16bf0:	movweq	ip, #9
   16bf4:	b	16c3c <dcngettext@plt+0x5b24>
   16bf8:	mov	ip, #0
   16bfc:	b	16c3c <dcngettext@plt+0x5b24>
   16c00:	mov	ip, #1
   16c04:	b	16c3c <dcngettext@plt+0x5b24>
   16c08:	mov	ip, #2
   16c0c:	b	16c3c <dcngettext@plt+0x5b24>
   16c10:	mov	ip, #3
   16c14:	b	16c3c <dcngettext@plt+0x5b24>
   16c18:	mov	ip, #4
   16c1c:	b	16c3c <dcngettext@plt+0x5b24>
   16c20:	mov	ip, #5
   16c24:	b	16c3c <dcngettext@plt+0x5b24>
   16c28:	mov	ip, #6
   16c2c:	b	16c3c <dcngettext@plt+0x5b24>
   16c30:	mov	ip, #7
   16c34:	b	16c3c <dcngettext@plt+0x5b24>
   16c38:	mov	ip, #8
   16c3c:	add	lr, sp, #8
   16c40:	str	ip, [sp, #4]
   16c44:	str	lr, [sp]
   16c48:	bl	167d0 <dcngettext@plt+0x56b8>
   16c4c:	mov	sp, fp
   16c50:	pop	{fp, pc}
   16c54:	push	{fp, lr}
   16c58:	mov	fp, sp
   16c5c:	sub	sp, sp, #56	; 0x38
   16c60:	add	ip, fp, #8
   16c64:	str	ip, [sp, #12]
   16c68:	ldr	lr, [fp, #8]
   16c6c:	cmp	lr, #0
   16c70:	str	lr, [sp, #16]
   16c74:	beq	16d10 <dcngettext@plt+0x5bf8>
   16c78:	ldr	lr, [ip, #4]
   16c7c:	cmp	lr, #0
   16c80:	str	lr, [sp, #20]
   16c84:	beq	16d18 <dcngettext@plt+0x5c00>
   16c88:	ldr	lr, [ip, #8]
   16c8c:	cmp	lr, #0
   16c90:	str	lr, [sp, #24]
   16c94:	beq	16d20 <dcngettext@plt+0x5c08>
   16c98:	ldr	lr, [ip, #12]
   16c9c:	cmp	lr, #0
   16ca0:	str	lr, [sp, #28]
   16ca4:	beq	16d28 <dcngettext@plt+0x5c10>
   16ca8:	ldr	lr, [ip, #16]
   16cac:	cmp	lr, #0
   16cb0:	str	lr, [sp, #32]
   16cb4:	beq	16d30 <dcngettext@plt+0x5c18>
   16cb8:	ldr	lr, [ip, #20]
   16cbc:	cmp	lr, #0
   16cc0:	str	lr, [sp, #36]	; 0x24
   16cc4:	beq	16d38 <dcngettext@plt+0x5c20>
   16cc8:	ldr	lr, [ip, #24]
   16ccc:	cmp	lr, #0
   16cd0:	str	lr, [sp, #40]	; 0x28
   16cd4:	beq	16d40 <dcngettext@plt+0x5c28>
   16cd8:	ldr	lr, [ip, #28]
   16cdc:	cmp	lr, #0
   16ce0:	str	lr, [sp, #44]	; 0x2c
   16ce4:	beq	16d48 <dcngettext@plt+0x5c30>
   16ce8:	ldr	lr, [ip, #32]
   16cec:	cmp	lr, #0
   16cf0:	str	lr, [sp, #48]	; 0x30
   16cf4:	beq	16d50 <dcngettext@plt+0x5c38>
   16cf8:	ldr	lr, [ip, #36]	; 0x24
   16cfc:	mov	ip, #10
   16d00:	cmp	lr, #0
   16d04:	str	lr, [sp, #52]	; 0x34
   16d08:	movweq	ip, #9
   16d0c:	b	16d54 <dcngettext@plt+0x5c3c>
   16d10:	mov	ip, #0
   16d14:	b	16d54 <dcngettext@plt+0x5c3c>
   16d18:	mov	ip, #1
   16d1c:	b	16d54 <dcngettext@plt+0x5c3c>
   16d20:	mov	ip, #2
   16d24:	b	16d54 <dcngettext@plt+0x5c3c>
   16d28:	mov	ip, #3
   16d2c:	b	16d54 <dcngettext@plt+0x5c3c>
   16d30:	mov	ip, #4
   16d34:	b	16d54 <dcngettext@plt+0x5c3c>
   16d38:	mov	ip, #5
   16d3c:	b	16d54 <dcngettext@plt+0x5c3c>
   16d40:	mov	ip, #6
   16d44:	b	16d54 <dcngettext@plt+0x5c3c>
   16d48:	mov	ip, #7
   16d4c:	b	16d54 <dcngettext@plt+0x5c3c>
   16d50:	mov	ip, #8
   16d54:	add	lr, sp, #16
   16d58:	str	ip, [sp, #4]
   16d5c:	str	lr, [sp]
   16d60:	bl	167d0 <dcngettext@plt+0x56b8>
   16d64:	mov	sp, fp
   16d68:	pop	{fp, pc}
   16d6c:	push	{fp, lr}
   16d70:	mov	fp, sp
   16d74:	movw	r0, #37220	; 0x9164
   16d78:	movt	r0, #2
   16d7c:	ldr	r1, [r0]
   16d80:	movw	r0, #32424	; 0x7ea8
   16d84:	movt	r0, #1
   16d88:	bl	10ea8 <fputs_unlocked@plt>
   16d8c:	movw	r1, #35747	; 0x8ba3
   16d90:	mov	r0, #0
   16d94:	mov	r2, #5
   16d98:	movt	r1, #1
   16d9c:	bl	10f20 <dcgettext@plt>
   16da0:	movw	r2, #35767	; 0x8bb7
   16da4:	mov	r1, r0
   16da8:	mov	r0, #1
   16dac:	movt	r2, #1
   16db0:	bl	1104c <__printf_chk@plt>
   16db4:	movw	r1, #35789	; 0x8bcd
   16db8:	mov	r0, #0
   16dbc:	mov	r2, #5
   16dc0:	movt	r1, #1
   16dc4:	bl	10f20 <dcgettext@plt>
   16dc8:	movw	r2, #32951	; 0x80b7
   16dcc:	movw	r3, #33745	; 0x83d1
   16dd0:	mov	r1, r0
   16dd4:	mov	r0, #1
   16dd8:	movt	r2, #1
   16ddc:	movt	r3, #1
   16de0:	bl	1104c <__printf_chk@plt>
   16de4:	movw	r1, #35809	; 0x8be1
   16de8:	mov	r0, #0
   16dec:	mov	r2, #5
   16df0:	movt	r1, #1
   16df4:	bl	10f20 <dcgettext@plt>
   16df8:	movw	r2, #35848	; 0x8c08
   16dfc:	mov	r1, r0
   16e00:	mov	r0, #1
   16e04:	movt	r2, #1
   16e08:	pop	{fp, lr}
   16e0c:	b	1104c <__printf_chk@plt>
   16e10:	push	{r4, r5, r6, sl, fp, lr}
   16e14:	add	fp, sp, #16
   16e18:	mov	r4, r2
   16e1c:	mov	r5, r1
   16e20:	mov	r6, r0
   16e24:	bl	177e0 <dcngettext@plt+0x66c8>
   16e28:	cmp	r0, #0
   16e2c:	popne	{r4, r5, r6, sl, fp, pc}
   16e30:	cmp	r6, #0
   16e34:	beq	16e48 <dcngettext@plt+0x5d30>
   16e38:	cmp	r5, #0
   16e3c:	cmpne	r4, #0
   16e40:	bne	16e48 <dcngettext@plt+0x5d30>
   16e44:	pop	{r4, r5, r6, sl, fp, pc}
   16e48:	bl	173c4 <dcngettext@plt+0x62ac>
   16e4c:	push	{r4, r5, r6, sl, fp, lr}
   16e50:	add	fp, sp, #16
   16e54:	mov	r4, r2
   16e58:	mov	r5, r1
   16e5c:	mov	r6, r0
   16e60:	bl	177e0 <dcngettext@plt+0x66c8>
   16e64:	cmp	r0, #0
   16e68:	popne	{r4, r5, r6, sl, fp, pc}
   16e6c:	cmp	r6, #0
   16e70:	beq	16e84 <dcngettext@plt+0x5d6c>
   16e74:	cmp	r5, #0
   16e78:	cmpne	r4, #0
   16e7c:	bne	16e84 <dcngettext@plt+0x5d6c>
   16e80:	pop	{r4, r5, r6, sl, fp, pc}
   16e84:	bl	173c4 <dcngettext@plt+0x62ac>
   16e88:	push	{fp, lr}
   16e8c:	mov	fp, sp
   16e90:	bl	1745c <dcngettext@plt+0x6344>
   16e94:	cmp	r0, #0
   16e98:	popne	{fp, pc}
   16e9c:	bl	173c4 <dcngettext@plt+0x62ac>
   16ea0:	push	{fp, lr}
   16ea4:	mov	fp, sp
   16ea8:	bl	1745c <dcngettext@plt+0x6344>
   16eac:	cmp	r0, #0
   16eb0:	popne	{fp, pc}
   16eb4:	bl	173c4 <dcngettext@plt+0x62ac>
   16eb8:	push	{fp, lr}
   16ebc:	mov	fp, sp
   16ec0:	bl	1745c <dcngettext@plt+0x6344>
   16ec4:	cmp	r0, #0
   16ec8:	popne	{fp, pc}
   16ecc:	bl	173c4 <dcngettext@plt+0x62ac>
   16ed0:	push	{r4, r5, fp, lr}
   16ed4:	add	fp, sp, #8
   16ed8:	mov	r4, r1
   16edc:	mov	r5, r0
   16ee0:	bl	1748c <dcngettext@plt+0x6374>
   16ee4:	cmp	r0, #0
   16ee8:	popne	{r4, r5, fp, pc}
   16eec:	cmp	r5, #0
   16ef0:	beq	16f00 <dcngettext@plt+0x5de8>
   16ef4:	cmp	r4, #0
   16ef8:	bne	16f00 <dcngettext@plt+0x5de8>
   16efc:	pop	{r4, r5, fp, pc}
   16f00:	bl	173c4 <dcngettext@plt+0x62ac>
   16f04:	push	{fp, lr}
   16f08:	mov	fp, sp
   16f0c:	cmp	r1, #0
   16f10:	orreq	r1, r1, #1
   16f14:	bl	1748c <dcngettext@plt+0x6374>
   16f18:	cmp	r0, #0
   16f1c:	popne	{fp, pc}
   16f20:	bl	173c4 <dcngettext@plt+0x62ac>
   16f24:	push	{fp, lr}
   16f28:	mov	fp, sp
   16f2c:	clz	r3, r2
   16f30:	lsr	ip, r3, #5
   16f34:	clz	r3, r1
   16f38:	lsr	r3, r3, #5
   16f3c:	orrs	r3, r3, ip
   16f40:	movwne	r1, #1
   16f44:	movwne	r2, #1
   16f48:	bl	177e0 <dcngettext@plt+0x66c8>
   16f4c:	cmp	r0, #0
   16f50:	popne	{fp, pc}
   16f54:	bl	173c4 <dcngettext@plt+0x62ac>
   16f58:	push	{fp, lr}
   16f5c:	mov	fp, sp
   16f60:	mov	r2, r1
   16f64:	mov	r1, r0
   16f68:	mov	r0, #0
   16f6c:	bl	177e0 <dcngettext@plt+0x66c8>
   16f70:	cmp	r0, #0
   16f74:	popne	{fp, pc}
   16f78:	bl	173c4 <dcngettext@plt+0x62ac>
   16f7c:	push	{fp, lr}
   16f80:	mov	fp, sp
   16f84:	mov	r2, r1
   16f88:	mov	r1, r0
   16f8c:	clz	r0, r2
   16f90:	clz	r3, r1
   16f94:	lsr	r0, r0, #5
   16f98:	lsr	r3, r3, #5
   16f9c:	orrs	r0, r3, r0
   16fa0:	mov	r0, #0
   16fa4:	movwne	r1, #1
   16fa8:	movwne	r2, #1
   16fac:	bl	177e0 <dcngettext@plt+0x66c8>
   16fb0:	cmp	r0, #0
   16fb4:	popne	{fp, pc}
   16fb8:	bl	173c4 <dcngettext@plt+0x62ac>
   16fbc:	push	{r4, r5, r6, sl, fp, lr}
   16fc0:	add	fp, sp, #16
   16fc4:	ldr	r5, [r1]
   16fc8:	mov	r4, r1
   16fcc:	mov	r6, r0
   16fd0:	cmp	r0, #0
   16fd4:	beq	16fec <dcngettext@plt+0x5ed4>
   16fd8:	mov	r0, #1
   16fdc:	add	r0, r0, r5, lsr #1
   16fe0:	adds	r5, r5, r0
   16fe4:	bcc	16ff4 <dcngettext@plt+0x5edc>
   16fe8:	b	17030 <dcngettext@plt+0x5f18>
   16fec:	cmp	r5, #0
   16ff0:	movweq	r5, #64	; 0x40
   16ff4:	mov	r0, r6
   16ff8:	mov	r1, r5
   16ffc:	mov	r2, #1
   17000:	bl	177e0 <dcngettext@plt+0x66c8>
   17004:	cmp	r5, #0
   17008:	mov	r1, r5
   1700c:	movwne	r1, #1
   17010:	cmp	r0, #0
   17014:	bne	17028 <dcngettext@plt+0x5f10>
   17018:	clz	r2, r6
   1701c:	lsr	r2, r2, #5
   17020:	orrs	r1, r2, r1
   17024:	bne	17030 <dcngettext@plt+0x5f18>
   17028:	str	r5, [r4]
   1702c:	pop	{r4, r5, r6, sl, fp, pc}
   17030:	bl	173c4 <dcngettext@plt+0x62ac>
   17034:	push	{r4, r5, r6, r7, fp, lr}
   17038:	add	fp, sp, #16
   1703c:	ldr	r5, [r1]
   17040:	mov	r6, r2
   17044:	mov	r4, r1
   17048:	mov	r7, r0
   1704c:	cmp	r0, #0
   17050:	beq	17068 <dcngettext@plt+0x5f50>
   17054:	mov	r0, #1
   17058:	add	r0, r0, r5, lsr #1
   1705c:	adds	r5, r5, r0
   17060:	bcc	17080 <dcngettext@plt+0x5f68>
   17064:	b	170b4 <dcngettext@plt+0x5f9c>
   17068:	cmp	r5, #0
   1706c:	bne	17080 <dcngettext@plt+0x5f68>
   17070:	mov	r0, #64	; 0x40
   17074:	cmp	r6, #64	; 0x40
   17078:	udiv	r5, r0, r6
   1707c:	addhi	r5, r5, #1
   17080:	mov	r0, r7
   17084:	mov	r1, r5
   17088:	mov	r2, r6
   1708c:	bl	177e0 <dcngettext@plt+0x66c8>
   17090:	cmp	r0, #0
   17094:	bne	170ac <dcngettext@plt+0x5f94>
   17098:	cmp	r7, #0
   1709c:	beq	170b4 <dcngettext@plt+0x5f9c>
   170a0:	cmp	r6, #0
   170a4:	cmpne	r5, #0
   170a8:	bne	170b4 <dcngettext@plt+0x5f9c>
   170ac:	str	r5, [r4]
   170b0:	pop	{r4, r5, r6, r7, fp, pc}
   170b4:	bl	173c4 <dcngettext@plt+0x62ac>
   170b8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   170bc:	add	fp, sp, #24
   170c0:	mov	r8, r1
   170c4:	ldr	r1, [r1]
   170c8:	mov	r5, r0
   170cc:	add	r0, r1, r1, asr #1
   170d0:	cmp	r0, r1
   170d4:	mvnvs	r0, #-2147483648	; 0x80000000
   170d8:	cmp	r0, r3
   170dc:	mov	r7, r0
   170e0:	movgt	r7, r3
   170e4:	cmn	r3, #1
   170e8:	movle	r7, r0
   170ec:	ldr	r0, [fp, #8]
   170f0:	cmn	r0, #1
   170f4:	ble	1711c <dcngettext@plt+0x6004>
   170f8:	cmp	r0, #0
   170fc:	beq	17170 <dcngettext@plt+0x6058>
   17100:	cmn	r7, #1
   17104:	ble	17144 <dcngettext@plt+0x602c>
   17108:	mvn	r4, #-2147483648	; 0x80000000
   1710c:	udiv	r6, r4, r0
   17110:	cmp	r6, r7
   17114:	bge	17170 <dcngettext@plt+0x6058>
   17118:	b	17180 <dcngettext@plt+0x6068>
   1711c:	cmn	r7, #1
   17120:	ble	17160 <dcngettext@plt+0x6048>
   17124:	cmn	r0, #1
   17128:	beq	17170 <dcngettext@plt+0x6058>
   1712c:	mov	r6, #-2147483648	; 0x80000000
   17130:	mvn	r4, #-2147483648	; 0x80000000
   17134:	sdiv	r6, r6, r0
   17138:	cmp	r6, r7
   1713c:	bge	17170 <dcngettext@plt+0x6058>
   17140:	b	17180 <dcngettext@plt+0x6068>
   17144:	beq	17170 <dcngettext@plt+0x6058>
   17148:	mov	r6, #-2147483648	; 0x80000000
   1714c:	mvn	r4, #-2147483648	; 0x80000000
   17150:	sdiv	r6, r6, r7
   17154:	cmp	r6, r0
   17158:	bge	17170 <dcngettext@plt+0x6058>
   1715c:	b	17180 <dcngettext@plt+0x6068>
   17160:	mvn	r4, #-2147483648	; 0x80000000
   17164:	sdiv	r6, r4, r0
   17168:	cmp	r7, r6
   1716c:	blt	17180 <dcngettext@plt+0x6068>
   17170:	mul	r6, r7, r0
   17174:	mov	r4, #64	; 0x40
   17178:	cmp	r6, #63	; 0x3f
   1717c:	bgt	17188 <dcngettext@plt+0x6070>
   17180:	sdiv	r7, r4, r0
   17184:	mul	r6, r7, r0
   17188:	cmp	r5, #0
   1718c:	moveq	r4, #0
   17190:	streq	r4, [r8]
   17194:	sub	r4, r7, r1
   17198:	cmp	r4, r2
   1719c:	bge	17248 <dcngettext@plt+0x6130>
   171a0:	add	r7, r1, r2
   171a4:	mov	r6, #0
   171a8:	mov	r2, #0
   171ac:	cmp	r7, r3
   171b0:	movwgt	r6, #1
   171b4:	cmn	r3, #1
   171b8:	movwgt	r2, #1
   171bc:	cmp	r7, r1
   171c0:	bvs	1727c <dcngettext@plt+0x6164>
   171c4:	ands	r1, r2, r6
   171c8:	bne	1727c <dcngettext@plt+0x6164>
   171cc:	cmn	r0, #1
   171d0:	ble	171f8 <dcngettext@plt+0x60e0>
   171d4:	cmp	r0, #0
   171d8:	beq	17244 <dcngettext@plt+0x612c>
   171dc:	cmn	r7, #1
   171e0:	ble	1721c <dcngettext@plt+0x6104>
   171e4:	mvn	r1, #-2147483648	; 0x80000000
   171e8:	udiv	r1, r1, r0
   171ec:	cmp	r1, r7
   171f0:	bge	17244 <dcngettext@plt+0x612c>
   171f4:	b	1727c <dcngettext@plt+0x6164>
   171f8:	cmn	r7, #1
   171fc:	ble	17234 <dcngettext@plt+0x611c>
   17200:	cmn	r0, #1
   17204:	beq	17244 <dcngettext@plt+0x612c>
   17208:	mov	r1, #-2147483648	; 0x80000000
   1720c:	sdiv	r1, r1, r0
   17210:	cmp	r1, r7
   17214:	bge	17244 <dcngettext@plt+0x612c>
   17218:	b	1727c <dcngettext@plt+0x6164>
   1721c:	beq	17244 <dcngettext@plt+0x612c>
   17220:	mov	r1, #-2147483648	; 0x80000000
   17224:	sdiv	r1, r1, r7
   17228:	cmp	r1, r0
   1722c:	bge	17244 <dcngettext@plt+0x612c>
   17230:	b	1727c <dcngettext@plt+0x6164>
   17234:	mvn	r1, #-2147483648	; 0x80000000
   17238:	sdiv	r1, r1, r0
   1723c:	cmp	r7, r1
   17240:	blt	1727c <dcngettext@plt+0x6164>
   17244:	mul	r6, r7, r0
   17248:	mov	r0, r5
   1724c:	mov	r1, r6
   17250:	bl	1748c <dcngettext@plt+0x6374>
   17254:	cmp	r6, #0
   17258:	movwne	r6, #1
   1725c:	cmp	r0, #0
   17260:	bne	17274 <dcngettext@plt+0x615c>
   17264:	clz	r1, r5
   17268:	lsr	r1, r1, #5
   1726c:	orrs	r1, r1, r6
   17270:	bne	1727c <dcngettext@plt+0x6164>
   17274:	str	r7, [r8]
   17278:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1727c:	bl	173c4 <dcngettext@plt+0x62ac>
   17280:	push	{fp, lr}
   17284:	mov	fp, sp
   17288:	mov	r1, #1
   1728c:	bl	17408 <dcngettext@plt+0x62f0>
   17290:	cmp	r0, #0
   17294:	popne	{fp, pc}
   17298:	bl	173c4 <dcngettext@plt+0x62ac>
   1729c:	push	{fp, lr}
   172a0:	mov	fp, sp
   172a4:	bl	17408 <dcngettext@plt+0x62f0>
   172a8:	cmp	r0, #0
   172ac:	popne	{fp, pc}
   172b0:	bl	173c4 <dcngettext@plt+0x62ac>
   172b4:	push	{fp, lr}
   172b8:	mov	fp, sp
   172bc:	mov	r1, #1
   172c0:	bl	17408 <dcngettext@plt+0x62f0>
   172c4:	cmp	r0, #0
   172c8:	popne	{fp, pc}
   172cc:	bl	173c4 <dcngettext@plt+0x62ac>
   172d0:	push	{fp, lr}
   172d4:	mov	fp, sp
   172d8:	bl	17408 <dcngettext@plt+0x62f0>
   172dc:	cmp	r0, #0
   172e0:	popne	{fp, pc}
   172e4:	bl	173c4 <dcngettext@plt+0x62ac>
   172e8:	push	{r4, r5, fp, lr}
   172ec:	add	fp, sp, #8
   172f0:	mov	r5, r0
   172f4:	mov	r0, r1
   172f8:	mov	r4, r1
   172fc:	bl	1745c <dcngettext@plt+0x6344>
   17300:	cmp	r0, #0
   17304:	beq	17318 <dcngettext@plt+0x6200>
   17308:	mov	r1, r5
   1730c:	mov	r2, r4
   17310:	pop	{r4, r5, fp, lr}
   17314:	b	10f08 <memcpy@plt>
   17318:	bl	173c4 <dcngettext@plt+0x62ac>
   1731c:	push	{r4, r5, fp, lr}
   17320:	add	fp, sp, #8
   17324:	mov	r5, r0
   17328:	mov	r0, r1
   1732c:	mov	r4, r1
   17330:	bl	1745c <dcngettext@plt+0x6344>
   17334:	cmp	r0, #0
   17338:	beq	1734c <dcngettext@plt+0x6234>
   1733c:	mov	r1, r5
   17340:	mov	r2, r4
   17344:	pop	{r4, r5, fp, lr}
   17348:	b	10f08 <memcpy@plt>
   1734c:	bl	173c4 <dcngettext@plt+0x62ac>
   17350:	push	{r4, r5, fp, lr}
   17354:	add	fp, sp, #8
   17358:	mov	r5, r0
   1735c:	add	r0, r1, #1
   17360:	mov	r4, r1
   17364:	bl	1745c <dcngettext@plt+0x6344>
   17368:	cmp	r0, #0
   1736c:	beq	17388 <dcngettext@plt+0x6270>
   17370:	mov	r1, #0
   17374:	mov	r2, r4
   17378:	strb	r1, [r0, r4]
   1737c:	mov	r1, r5
   17380:	pop	{r4, r5, fp, lr}
   17384:	b	10f08 <memcpy@plt>
   17388:	bl	173c4 <dcngettext@plt+0x62ac>
   1738c:	push	{r4, r5, fp, lr}
   17390:	add	fp, sp, #8
   17394:	mov	r4, r0
   17398:	bl	11004 <strlen@plt>
   1739c:	add	r5, r0, #1
   173a0:	mov	r0, r5
   173a4:	bl	1745c <dcngettext@plt+0x6344>
   173a8:	cmp	r0, #0
   173ac:	beq	173c0 <dcngettext@plt+0x62a8>
   173b0:	mov	r1, r4
   173b4:	mov	r2, r5
   173b8:	pop	{r4, r5, fp, lr}
   173bc:	b	10f08 <memcpy@plt>
   173c0:	bl	173c4 <dcngettext@plt+0x62ac>
   173c4:	push	{fp, lr}
   173c8:	mov	fp, sp
   173cc:	movw	r0, #37120	; 0x9100
   173d0:	movw	r1, #35924	; 0x8c54
   173d4:	mov	r2, #5
   173d8:	movt	r0, #2
   173dc:	movt	r1, #1
   173e0:	ldr	r4, [r0]
   173e4:	mov	r0, #0
   173e8:	bl	10f20 <dcgettext@plt>
   173ec:	movw	r2, #34815	; 0x87ff
   173f0:	mov	r3, r0
   173f4:	mov	r0, r4
   173f8:	mov	r1, #0
   173fc:	movt	r2, #1
   17400:	bl	10f8c <error@plt>
   17404:	bl	11100 <abort@plt>
   17408:	clz	r2, r1
   1740c:	clz	r3, r0
   17410:	lsr	r2, r2, #5
   17414:	lsr	r3, r3, #5
   17418:	orrs	r2, r3, r2
   1741c:	movwne	r1, #1
   17420:	movwne	r0, #1
   17424:	cmp	r1, #0
   17428:	beq	17458 <dcngettext@plt+0x6340>
   1742c:	mvn	r2, #-2147483648	; 0x80000000
   17430:	udiv	r2, r2, r1
   17434:	cmp	r2, r0
   17438:	bcs	17458 <dcngettext@plt+0x6340>
   1743c:	push	{fp, lr}
   17440:	mov	fp, sp
   17444:	bl	1101c <__errno_location@plt>
   17448:	mov	r1, #12
   1744c:	str	r1, [r0]
   17450:	mov	r0, #0
   17454:	pop	{fp, pc}
   17458:	b	10e9c <calloc@plt>
   1745c:	cmp	r0, #0
   17460:	movweq	r0, #1
   17464:	cmn	r0, #1
   17468:	ble	17470 <dcngettext@plt+0x6358>
   1746c:	b	10f98 <malloc@plt>
   17470:	push	{fp, lr}
   17474:	mov	fp, sp
   17478:	bl	1101c <__errno_location@plt>
   1747c:	mov	r1, #12
   17480:	str	r1, [r0]
   17484:	mov	r0, #0
   17488:	pop	{fp, pc}
   1748c:	push	{fp, lr}
   17490:	mov	fp, sp
   17494:	cmp	r0, #0
   17498:	beq	174b4 <dcngettext@plt+0x639c>
   1749c:	cmp	r1, #0
   174a0:	beq	174c0 <dcngettext@plt+0x63a8>
   174a4:	cmn	r1, #1
   174a8:	ble	174cc <dcngettext@plt+0x63b4>
   174ac:	pop	{fp, lr}
   174b0:	b	10f2c <realloc@plt>
   174b4:	mov	r0, r1
   174b8:	pop	{fp, lr}
   174bc:	b	1745c <dcngettext@plt+0x6344>
   174c0:	bl	14954 <dcngettext@plt+0x383c>
   174c4:	mov	r0, #0
   174c8:	pop	{fp, pc}
   174cc:	bl	1101c <__errno_location@plt>
   174d0:	mov	r1, #12
   174d4:	str	r1, [r0]
   174d8:	mov	r0, #0
   174dc:	pop	{fp, pc}
   174e0:	push	{r4, r5, r6, sl, fp, lr}
   174e4:	add	fp, sp, #16
   174e8:	mov	r4, r0
   174ec:	bl	10f74 <__fpending@plt>
   174f0:	ldr	r6, [r4]
   174f4:	mov	r5, r0
   174f8:	mov	r0, r4
   174fc:	bl	147ac <dcngettext@plt+0x3694>
   17500:	tst	r6, #32
   17504:	bne	1753c <dcngettext@plt+0x6424>
   17508:	cmp	r0, #0
   1750c:	mov	r4, r0
   17510:	mvnne	r4, #0
   17514:	cmp	r5, #0
   17518:	bne	17548 <dcngettext@plt+0x6430>
   1751c:	cmp	r0, #0
   17520:	beq	17548 <dcngettext@plt+0x6430>
   17524:	bl	1101c <__errno_location@plt>
   17528:	ldr	r0, [r0]
   1752c:	subs	r4, r0, #9
   17530:	mvnne	r4, #0
   17534:	mov	r0, r4
   17538:	pop	{r4, r5, r6, sl, fp, pc}
   1753c:	mvn	r4, #0
   17540:	cmp	r0, #0
   17544:	beq	17550 <dcngettext@plt+0x6438>
   17548:	mov	r0, r4
   1754c:	pop	{r4, r5, r6, sl, fp, pc}
   17550:	bl	1101c <__errno_location@plt>
   17554:	mov	r1, #0
   17558:	str	r1, [r0]
   1755c:	mov	r0, r4
   17560:	pop	{r4, r5, r6, sl, fp, pc}
   17564:	sub	sp, sp, #8
   17568:	push	{r4, r5, r6, r7, fp, lr}
   1756c:	add	fp, sp, #16
   17570:	sub	sp, sp, #8
   17574:	mov	r5, r0
   17578:	add	r0, fp, #8
   1757c:	cmp	r1, #11
   17580:	str	r2, [fp, #8]
   17584:	str	r3, [fp, #12]
   17588:	str	r0, [sp, #4]
   1758c:	bhi	175c8 <dcngettext@plt+0x64b0>
   17590:	mov	r0, #1
   17594:	movw	r2, #1300	; 0x514
   17598:	tst	r2, r0, lsl r1
   1759c:	bne	17688 <dcngettext@plt+0x6570>
   175a0:	movw	r2, #2570	; 0xa0a
   175a4:	tst	r2, r0, lsl r1
   175a8:	bne	175f0 <dcngettext@plt+0x64d8>
   175ac:	cmp	r1, #0
   175b0:	bne	175c8 <dcngettext@plt+0x64b0>
   175b4:	ldr	r0, [sp, #4]
   175b8:	add	r1, r0, #4
   175bc:	str	r1, [sp, #4]
   175c0:	mov	r1, #0
   175c4:	b	17694 <dcngettext@plt+0x657c>
   175c8:	sub	r0, r1, #1024	; 0x400
   175cc:	cmp	r0, #10
   175d0:	bhi	17688 <dcngettext@plt+0x6570>
   175d4:	mov	r2, #1
   175d8:	movw	r3, #645	; 0x285
   175dc:	tst	r3, r2, lsl r0
   175e0:	bne	17688 <dcngettext@plt+0x6570>
   175e4:	movw	r3, #1282	; 0x502
   175e8:	tst	r3, r2, lsl r0
   175ec:	beq	175fc <dcngettext@plt+0x64e4>
   175f0:	mov	r0, r5
   175f4:	bl	11088 <fcntl64@plt>
   175f8:	b	176a0 <dcngettext@plt+0x6588>
   175fc:	cmp	r0, #6
   17600:	bne	17688 <dcngettext@plt+0x6570>
   17604:	ldr	r0, [sp, #4]
   17608:	movw	r7, #37560	; 0x92b8
   1760c:	movt	r7, #2
   17610:	add	r1, r0, #4
   17614:	str	r1, [sp, #4]
   17618:	ldr	r6, [r0]
   1761c:	ldr	r0, [r7]
   17620:	cmp	r0, #0
   17624:	bmi	176c4 <dcngettext@plt+0x65ac>
   17628:	mov	r0, r5
   1762c:	movw	r1, #1030	; 0x406
   17630:	mov	r2, r6
   17634:	bl	11088 <fcntl64@plt>
   17638:	mov	r4, r0
   1763c:	cmn	r0, #1
   17640:	bgt	176b8 <dcngettext@plt+0x65a0>
   17644:	bl	1101c <__errno_location@plt>
   17648:	ldr	r0, [r0]
   1764c:	cmp	r0, #22
   17650:	bne	176b8 <dcngettext@plt+0x65a0>
   17654:	mov	r0, r5
   17658:	mov	r1, #0
   1765c:	mov	r2, r6
   17660:	bl	11088 <fcntl64@plt>
   17664:	mov	r4, r0
   17668:	cmp	r0, #0
   1766c:	bmi	176a4 <dcngettext@plt+0x658c>
   17670:	mvn	r0, #0
   17674:	str	r0, [r7]
   17678:	mov	r0, #1
   1767c:	cmp	r0, #0
   17680:	bne	176f0 <dcngettext@plt+0x65d8>
   17684:	b	176a4 <dcngettext@plt+0x658c>
   17688:	ldr	r0, [sp, #4]
   1768c:	add	r2, r0, #4
   17690:	str	r2, [sp, #4]
   17694:	ldr	r2, [r0]
   17698:	mov	r0, r5
   1769c:	bl	11088 <fcntl64@plt>
   176a0:	mov	r4, r0
   176a4:	mov	r0, r4
   176a8:	sub	sp, fp, #16
   176ac:	pop	{r4, r5, r6, r7, fp, lr}
   176b0:	add	sp, sp, #8
   176b4:	bx	lr
   176b8:	mov	r0, #1
   176bc:	str	r0, [r7]
   176c0:	b	176a4 <dcngettext@plt+0x658c>
   176c4:	mov	r0, r5
   176c8:	mov	r1, #0
   176cc:	mov	r2, r6
   176d0:	bl	11088 <fcntl64@plt>
   176d4:	mov	r4, r0
   176d8:	ldr	r0, [r7]
   176dc:	add	r0, r0, #1
   176e0:	clz	r0, r0
   176e4:	lsr	r0, r0, #5
   176e8:	cmp	r0, #0
   176ec:	beq	176a4 <dcngettext@plt+0x658c>
   176f0:	cmp	r4, #0
   176f4:	bmi	176a4 <dcngettext@plt+0x658c>
   176f8:	mov	r0, r4
   176fc:	mov	r1, #1
   17700:	bl	11088 <fcntl64@plt>
   17704:	cmp	r0, #0
   17708:	bmi	17724 <dcngettext@plt+0x660c>
   1770c:	orr	r2, r0, #1
   17710:	mov	r0, r4
   17714:	mov	r1, #2
   17718:	bl	11088 <fcntl64@plt>
   1771c:	cmn	r0, #1
   17720:	bne	176a4 <dcngettext@plt+0x658c>
   17724:	bl	1101c <__errno_location@plt>
   17728:	ldr	r6, [r0]
   1772c:	mov	r5, r0
   17730:	mov	r0, r4
   17734:	bl	1110c <close@plt>
   17738:	str	r6, [r5]
   1773c:	mvn	r4, #0
   17740:	b	176a4 <dcngettext@plt+0x658c>
   17744:	push	{fp, lr}
   17748:	mov	fp, sp
   1774c:	mov	r0, #14
   17750:	bl	110b8 <nl_langinfo@plt>
   17754:	movw	r1, #32425	; 0x7ea9
   17758:	cmp	r0, #0
   1775c:	movt	r1, #1
   17760:	movne	r1, r0
   17764:	movw	r0, #35941	; 0x8c65
   17768:	ldrb	r2, [r1]
   1776c:	movt	r0, #1
   17770:	cmp	r2, #0
   17774:	movne	r0, r1
   17778:	pop	{fp, pc}
   1777c:	push	{r4, r5, r6, r7, fp, lr}
   17780:	add	fp, sp, #16
   17784:	sub	sp, sp, #8
   17788:	cmp	r0, #0
   1778c:	add	r5, sp, #4
   17790:	mov	r7, r2
   17794:	mov	r4, r1
   17798:	movne	r5, r0
   1779c:	mov	r0, r5
   177a0:	bl	10f80 <mbrtowc@plt>
   177a4:	mov	r6, r0
   177a8:	cmp	r7, #0
   177ac:	beq	177d4 <dcngettext@plt+0x66bc>
   177b0:	cmn	r6, #2
   177b4:	bcc	177d4 <dcngettext@plt+0x66bc>
   177b8:	mov	r0, #0
   177bc:	bl	1781c <dcngettext@plt+0x6704>
   177c0:	cmp	r0, #0
   177c4:	bne	177d4 <dcngettext@plt+0x66bc>
   177c8:	ldrb	r0, [r4]
   177cc:	mov	r6, #1
   177d0:	str	r0, [r5]
   177d4:	mov	r0, r6
   177d8:	sub	sp, fp, #16
   177dc:	pop	{r4, r5, r6, r7, fp, pc}
   177e0:	cmp	r2, #0
   177e4:	beq	17814 <dcngettext@plt+0x66fc>
   177e8:	mvn	r3, #0
   177ec:	udiv	r3, r3, r2
   177f0:	cmp	r3, r1
   177f4:	bcs	17814 <dcngettext@plt+0x66fc>
   177f8:	push	{fp, lr}
   177fc:	mov	fp, sp
   17800:	bl	1101c <__errno_location@plt>
   17804:	mov	r1, #12
   17808:	str	r1, [r0]
   1780c:	mov	r0, #0
   17810:	pop	{fp, pc}
   17814:	mul	r1, r2, r1
   17818:	b	1748c <dcngettext@plt+0x6374>
   1781c:	push	{r4, sl, fp, lr}
   17820:	add	fp, sp, #8
   17824:	sub	sp, sp, #264	; 0x108
   17828:	add	r1, sp, #7
   1782c:	movw	r2, #257	; 0x101
   17830:	bl	17888 <dcngettext@plt+0x6770>
   17834:	mov	r4, #0
   17838:	cmp	r0, #0
   1783c:	bne	1787c <dcngettext@plt+0x6764>
   17840:	movw	r1, #35947	; 0x8c6b
   17844:	add	r0, sp, #7
   17848:	mov	r2, #2
   1784c:	movt	r1, #1
   17850:	bl	10ff8 <bcmp@plt>
   17854:	cmp	r0, #0
   17858:	beq	1787c <dcngettext@plt+0x6764>
   1785c:	movw	r1, #35949	; 0x8c6d
   17860:	add	r0, sp, #7
   17864:	mov	r2, #6
   17868:	movt	r1, #1
   1786c:	bl	10ff8 <bcmp@plt>
   17870:	cmp	r0, #0
   17874:	mov	r4, r0
   17878:	movwne	r4, #1
   1787c:	mov	r0, r4
   17880:	sub	sp, fp, #8
   17884:	pop	{r4, sl, fp, pc}
   17888:	push	{r4, r5, r6, r7, fp, lr}
   1788c:	add	fp, sp, #16
   17890:	mov	r4, r1
   17894:	mov	r1, #0
   17898:	mov	r6, r2
   1789c:	bl	110a0 <setlocale@plt>
   178a0:	cmp	r0, #0
   178a4:	beq	178d4 <dcngettext@plt+0x67bc>
   178a8:	mov	r7, r0
   178ac:	bl	11004 <strlen@plt>
   178b0:	cmp	r0, r6
   178b4:	bcs	178f0 <dcngettext@plt+0x67d8>
   178b8:	add	r2, r0, #1
   178bc:	mov	r0, r4
   178c0:	mov	r1, r7
   178c4:	bl	10f08 <memcpy@plt>
   178c8:	mov	r5, #0
   178cc:	mov	r0, r5
   178d0:	pop	{r4, r5, r6, r7, fp, pc}
   178d4:	mov	r5, #22
   178d8:	cmp	r6, #0
   178dc:	beq	17918 <dcngettext@plt+0x6800>
   178e0:	mov	r0, #0
   178e4:	strb	r0, [r4]
   178e8:	mov	r0, r5
   178ec:	pop	{r4, r5, r6, r7, fp, pc}
   178f0:	mov	r5, #34	; 0x22
   178f4:	cmp	r6, #0
   178f8:	beq	17918 <dcngettext@plt+0x6800>
   178fc:	sub	r6, r6, #1
   17900:	mov	r0, r4
   17904:	mov	r1, r7
   17908:	mov	r2, r6
   1790c:	bl	10f08 <memcpy@plt>
   17910:	mov	r0, #0
   17914:	strb	r0, [r4, r6]
   17918:	mov	r0, r5
   1791c:	pop	{r4, r5, r6, r7, fp, pc}
   17920:	mov	r1, #0
   17924:	b	110a0 <setlocale@plt>
   17928:	cmp	r3, #0
   1792c:	cmpeq	r2, #0
   17930:	bne	17948 <dcngettext@plt+0x6830>
   17934:	cmp	r1, #0
   17938:	cmpeq	r0, #0
   1793c:	mvnne	r1, #0
   17940:	mvnne	r0, #0
   17944:	b	17964 <dcngettext@plt+0x684c>
   17948:	sub	sp, sp, #8
   1794c:	push	{sp, lr}
   17950:	bl	17974 <dcngettext@plt+0x685c>
   17954:	ldr	lr, [sp, #4]
   17958:	add	sp, sp, #8
   1795c:	pop	{r2, r3}
   17960:	bx	lr
   17964:	push	{r1, lr}
   17968:	mov	r0, #8
   1796c:	bl	10eb4 <raise@plt>
   17970:	pop	{r1, pc}
   17974:	cmp	r1, r3
   17978:	cmpeq	r0, r2
   1797c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17980:	mov	r4, r0
   17984:	movcc	r0, #0
   17988:	mov	r5, r1
   1798c:	ldr	lr, [sp, #36]	; 0x24
   17990:	movcc	r1, r0
   17994:	bcc	17a90 <dcngettext@plt+0x6978>
   17998:	cmp	r3, #0
   1799c:	clzeq	ip, r2
   179a0:	clzne	ip, r3
   179a4:	addeq	ip, ip, #32
   179a8:	cmp	r5, #0
   179ac:	clzeq	r1, r4
   179b0:	addeq	r1, r1, #32
   179b4:	clzne	r1, r5
   179b8:	sub	ip, ip, r1
   179bc:	sub	sl, ip, #32
   179c0:	lsl	r9, r3, ip
   179c4:	rsb	fp, ip, #32
   179c8:	orr	r9, r9, r2, lsl sl
   179cc:	orr	r9, r9, r2, lsr fp
   179d0:	lsl	r8, r2, ip
   179d4:	cmp	r5, r9
   179d8:	cmpeq	r4, r8
   179dc:	movcc	r0, #0
   179e0:	movcc	r1, r0
   179e4:	bcc	17a00 <dcngettext@plt+0x68e8>
   179e8:	mov	r0, #1
   179ec:	subs	r4, r4, r8
   179f0:	lsl	r1, r0, sl
   179f4:	orr	r1, r1, r0, lsr fp
   179f8:	lsl	r0, r0, ip
   179fc:	sbc	r5, r5, r9
   17a00:	cmp	ip, #0
   17a04:	beq	17a90 <dcngettext@plt+0x6978>
   17a08:	lsr	r6, r8, #1
   17a0c:	orr	r6, r6, r9, lsl #31
   17a10:	lsr	r7, r9, #1
   17a14:	mov	r2, ip
   17a18:	b	17a3c <dcngettext@plt+0x6924>
   17a1c:	subs	r3, r4, r6
   17a20:	sbc	r8, r5, r7
   17a24:	adds	r3, r3, r3
   17a28:	adc	r8, r8, r8
   17a2c:	adds	r4, r3, #1
   17a30:	adc	r5, r8, #0
   17a34:	subs	r2, r2, #1
   17a38:	beq	17a58 <dcngettext@plt+0x6940>
   17a3c:	cmp	r5, r7
   17a40:	cmpeq	r4, r6
   17a44:	bcs	17a1c <dcngettext@plt+0x6904>
   17a48:	adds	r4, r4, r4
   17a4c:	adc	r5, r5, r5
   17a50:	subs	r2, r2, #1
   17a54:	bne	17a3c <dcngettext@plt+0x6924>
   17a58:	lsr	r3, r4, ip
   17a5c:	orr	r3, r3, r5, lsl fp
   17a60:	lsr	r2, r5, ip
   17a64:	orr	r3, r3, r5, lsr sl
   17a68:	adds	r0, r0, r4
   17a6c:	mov	r4, r3
   17a70:	lsl	r3, r2, ip
   17a74:	orr	r3, r3, r4, lsl sl
   17a78:	lsl	ip, r4, ip
   17a7c:	orr	r3, r3, r4, lsr fp
   17a80:	adc	r1, r1, r5
   17a84:	subs	r0, r0, ip
   17a88:	mov	r5, r2
   17a8c:	sbc	r1, r1, r3
   17a90:	cmp	lr, #0
   17a94:	strdne	r4, [lr]
   17a98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17a9c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17aa0:	mov	r7, r0
   17aa4:	ldr	r6, [pc, #72]	; 17af4 <dcngettext@plt+0x69dc>
   17aa8:	ldr	r5, [pc, #72]	; 17af8 <dcngettext@plt+0x69e0>
   17aac:	add	r6, pc, r6
   17ab0:	add	r5, pc, r5
   17ab4:	sub	r6, r6, r5
   17ab8:	mov	r8, r1
   17abc:	mov	r9, r2
   17ac0:	bl	10e70 <fdopen@plt-0x20>
   17ac4:	asrs	r6, r6, #2
   17ac8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   17acc:	mov	r4, #0
   17ad0:	add	r4, r4, #1
   17ad4:	ldr	r3, [r5], #4
   17ad8:	mov	r2, r9
   17adc:	mov	r1, r8
   17ae0:	mov	r0, r7
   17ae4:	blx	r3
   17ae8:	cmp	r6, r4
   17aec:	bne	17ad0 <dcngettext@plt+0x69b8>
   17af0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17af4:	andeq	r1, r1, r8, asr r4
   17af8:	andeq	r1, r1, r0, asr r4
   17afc:	bx	lr
   17b00:	ldr	r3, [pc, #12]	; 17b14 <dcngettext@plt+0x69fc>
   17b04:	mov	r1, #0
   17b08:	add	r3, pc, r3
   17b0c:	ldr	r2, [r3]
   17b10:	b	11028 <__cxa_atexit@plt>
   17b14:	andeq	r1, r1, r4, ror #11

Disassembly of section .fini:

00017b18 <.fini>:
   17b18:	push	{r3, lr}
   17b1c:	pop	{r3, pc}
