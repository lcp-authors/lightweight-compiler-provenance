
../repos/findutils/find/find:     file format elf32-littlearm


Disassembly of section .init:

0001240c <.init>:
   1240c:	push	{r3, lr}
   12410:	bl	12c04 <__assert_fail@plt+0x4c>
   12414:	pop	{r3, pc}

Disassembly of section .plt:

00012418 <pthread_mutex_unlock@plt-0x14>:
   12418:	push	{lr}		; (str lr, [sp, #-4]!)
   1241c:	ldr	lr, [pc, #4]	; 12428 <pthread_mutex_unlock@plt-0x4>
   12420:	add	lr, pc, lr
   12424:	ldr	pc, [lr, #8]!
   12428:	ldrdeq	sl, [r7], -r8

0001242c <pthread_mutex_unlock@plt>:
   1242c:	add	ip, pc, #0, 12
   12430:	add	ip, ip, #499712	; 0x7a000
   12434:	ldr	pc, [ip, #3032]!	; 0xbd8

00012438 <fdopen@plt>:
   12438:	add	ip, pc, #0, 12
   1243c:	add	ip, ip, #499712	; 0x7a000
   12440:	ldr	pc, [ip, #3024]!	; 0xbd0

00012444 <fstatfs64@plt>:
   12444:	add	ip, pc, #0, 12
   12448:	add	ip, ip, #499712	; 0x7a000
   1244c:	ldr	pc, [ip, #3016]!	; 0xbc8

00012450 <calloc@plt>:
   12450:	add	ip, pc, #0, 12
   12454:	add	ip, ip, #499712	; 0x7a000
   12458:	ldr	pc, [ip, #3008]!	; 0xbc0

0001245c <endgrent@plt>:
   1245c:	add	ip, pc, #0, 12
   12460:	add	ip, ip, #499712	; 0x7a000
   12464:	ldr	pc, [ip, #3000]!	; 0xbb8

00012468 <wctype@plt>:
   12468:	add	ip, pc, #0, 12
   1246c:	add	ip, ip, #499712	; 0x7a000
   12470:	ldr	pc, [ip, #2992]!	; 0xbb0

00012474 <gnu_dev_major@plt>:
   12474:	add	ip, pc, #0, 12
   12478:	add	ip, ip, #499712	; 0x7a000
   1247c:	ldr	pc, [ip, #2984]!	; 0xba8

00012480 <raise@plt>:
   12480:	add	ip, pc, #0, 12
   12484:	add	ip, ip, #499712	; 0x7a000
   12488:	ldr	pc, [ip, #2976]!	; 0xba0

0001248c <wcrtomb@plt>:
   1248c:	add	ip, pc, #0, 12
   12490:	add	ip, ip, #499712	; 0x7a000
   12494:	ldr	pc, [ip, #2968]!	; 0xb98

00012498 <gmtime_r@plt>:
   12498:	add	ip, pc, #0, 12
   1249c:	add	ip, ip, #499712	; 0x7a000
   124a0:	ldr	pc, [ip, #2960]!	; 0xb90

000124a4 <getpwnam@plt>:
   124a4:	add	ip, pc, #0, 12
   124a8:	add	ip, ip, #499712	; 0x7a000
   124ac:	ldr	pc, [ip, #2952]!	; 0xb88

000124b0 <is_selinux_enabled@plt>:
   124b0:	add	ip, pc, #0, 12
   124b4:	add	ip, ip, #499712	; 0x7a000
   124b8:	ldr	pc, [ip, #2944]!	; 0xb80

000124bc <iswctype@plt>:
   124bc:	add	ip, pc, #0, 12
   124c0:	add	ip, ip, #499712	; 0x7a000
   124c4:	ldr	pc, [ip, #2936]!	; 0xb78

000124c8 <strcmp@plt>:
   124c8:	add	ip, pc, #0, 12
   124cc:	add	ip, ip, #499712	; 0x7a000
   124d0:	ldr	pc, [ip, #2928]!	; 0xb70

000124d4 <strtol@plt>:
   124d4:	add	ip, pc, #0, 12
   124d8:	add	ip, ip, #499712	; 0x7a000
   124dc:	ldr	pc, [ip, #2920]!	; 0xb68

000124e0 <getpwuid@plt>:
   124e0:	add	ip, pc, #0, 12
   124e4:	add	ip, ip, #499712	; 0x7a000
   124e8:	ldr	pc, [ip, #2912]!	; 0xb60

000124ec <gnu_dev_makedev@plt>:
   124ec:	add	ip, pc, #0, 12
   124f0:	add	ip, ip, #499712	; 0x7a000
   124f4:	ldr	pc, [ip, #2904]!	; 0xb58

000124f8 <printf@plt>:
   124f8:	add	ip, pc, #0, 12
   124fc:	add	ip, ip, #499712	; 0x7a000
   12500:	ldr	pc, [ip, #2896]!	; 0xb50

00012504 <gnu_dev_minor@plt>:
   12504:	add	ip, pc, #0, 12
   12508:	add	ip, ip, #499712	; 0x7a000
   1250c:	ldr	pc, [ip, #2888]!	; 0xb48

00012510 <pthread_mutex_destroy@plt>:
   12510:	add	ip, pc, #0, 12
   12514:	add	ip, ip, #499712	; 0x7a000
   12518:	ldr	pc, [ip, #2880]!	; 0xb40

0001251c <mktime@plt>:
   1251c:	add	ip, pc, #0, 12
   12520:	add	ip, ip, #499712	; 0x7a000
   12524:	ldr	pc, [ip, #2872]!	; 0xb38

00012528 <fflush@plt>:
   12528:	add	ip, pc, #0, 12
   1252c:	add	ip, ip, #499712	; 0x7a000
   12530:	ldr	pc, [ip, #2864]!	; 0xb30

00012534 <unlinkat@plt>:
   12534:	add	ip, pc, #0, 12
   12538:	add	ip, ip, #499712	; 0x7a000
   1253c:	ldr	pc, [ip, #2856]!	; 0xb28

00012540 <wcwidth@plt>:
   12540:	add	ip, pc, #0, 12
   12544:	add	ip, ip, #499712	; 0x7a000
   12548:	ldr	pc, [ip, #2848]!	; 0xb20

0001254c <lsetfilecon@plt>:
   1254c:	add	ip, pc, #0, 12
   12550:	add	ip, ip, #499712	; 0x7a000
   12554:	ldr	pc, [ip, #2840]!	; 0xb18

00012558 <memmove@plt>:
   12558:	add	ip, pc, #0, 12
   1255c:	add	ip, ip, #499712	; 0x7a000
   12560:	ldr	pc, [ip, #2832]!	; 0xb10

00012564 <free@plt>:
   12564:	add	ip, pc, #0, 12
   12568:	add	ip, ip, #499712	; 0x7a000
   1256c:	ldr	pc, [ip, #2824]!	; 0xb08

00012570 <pthread_mutex_lock@plt>:
   12570:	add	ip, pc, #0, 12
   12574:	add	ip, ip, #499712	; 0x7a000
   12578:	ldr	pc, [ip, #2816]!	; 0xb00

0001257c <faccessat@plt>:
   1257c:	add	ip, pc, #0, 12
   12580:	add	ip, ip, #499712	; 0x7a000
   12584:	ldr	pc, [ip, #2808]!	; 0xaf8

00012588 <ferror@plt>:
   12588:	add	ip, pc, #0, 12
   1258c:	add	ip, ip, #499712	; 0x7a000
   12590:	ldr	pc, [ip, #2800]!	; 0xaf0

00012594 <thrd_exit@plt>:
   12594:	add	ip, pc, #0, 12
   12598:	add	ip, ip, #499712	; 0x7a000
   1259c:	ldr	pc, [ip, #2792]!	; 0xae8

000125a0 <strndup@plt>:
   125a0:	add	ip, pc, #0, 12
   125a4:	add	ip, ip, #499712	; 0x7a000
   125a8:	ldr	pc, [ip, #2784]!	; 0xae0

000125ac <clock_gettime@plt>:
   125ac:	add	ip, pc, #0, 12
   125b0:	add	ip, ip, #499712	; 0x7a000
   125b4:	ldr	pc, [ip, #2776]!	; 0xad8

000125b8 <_exit@plt>:
   125b8:	add	ip, pc, #0, 12
   125bc:	add	ip, ip, #499712	; 0x7a000
   125c0:	ldr	pc, [ip, #2768]!	; 0xad0

000125c4 <memcpy@plt>:
   125c4:	add	ip, pc, #0, 12
   125c8:	add	ip, ip, #499712	; 0x7a000
   125cc:	ldr	pc, [ip, #2760]!	; 0xac8

000125d0 <execvp@plt>:
   125d0:	add	ip, pc, #0, 12
   125d4:	add	ip, ip, #499712	; 0x7a000
   125d8:	ldr	pc, [ip, #2752]!	; 0xac0

000125dc <tolower@plt>:
   125dc:	add	ip, pc, #0, 12
   125e0:	add	ip, ip, #499712	; 0x7a000
   125e4:	ldr	pc, [ip, #2744]!	; 0xab8

000125e8 <pthread_mutex_init@plt>:
   125e8:	add	ip, pc, #0, 12
   125ec:	add	ip, ip, #499712	; 0x7a000
   125f0:	ldr	pc, [ip, #2736]!	; 0xab0

000125f4 <towlower@plt>:
   125f4:	add	ip, pc, #0, 12
   125f8:	add	ip, ip, #499712	; 0x7a000
   125fc:	ldr	pc, [ip, #2728]!	; 0xaa8

00012600 <mbsinit@plt>:
   12600:	add	ip, pc, #0, 12
   12604:	add	ip, ip, #499712	; 0x7a000
   12608:	ldr	pc, [ip, #2720]!	; 0xaa0

0001260c <signal@plt>:
   1260c:	add	ip, pc, #0, 12
   12610:	add	ip, ip, #499712	; 0x7a000
   12614:	ldr	pc, [ip, #2712]!	; 0xa98

00012618 <time@plt>:
   12618:	add	ip, pc, #0, 12
   1261c:	add	ip, ip, #499712	; 0x7a000
   12620:	ldr	pc, [ip, #2704]!	; 0xa90

00012624 <memcmp@plt>:
   12624:	add	ip, pc, #0, 12
   12628:	add	ip, ip, #499712	; 0x7a000
   1262c:	ldr	pc, [ip, #2696]!	; 0xa88

00012630 <uname@plt>:
   12630:	add	ip, pc, #0, 12
   12634:	add	ip, ip, #499712	; 0x7a000
   12638:	ldr	pc, [ip, #2688]!	; 0xa80

0001263c <ctime@plt>:
   1263c:	add	ip, pc, #0, 12
   12640:	add	ip, ip, #499712	; 0x7a000
   12644:	ldr	pc, [ip, #2680]!	; 0xa78

00012648 <strdup@plt>:
   12648:	add	ip, pc, #0, 12
   1264c:	add	ip, ip, #499712	; 0x7a000
   12650:	ldr	pc, [ip, #2672]!	; 0xa70

00012654 <sysconf@plt>:
   12654:	add	ip, pc, #0, 12
   12658:	add	ip, ip, #499712	; 0x7a000
   1265c:	ldr	pc, [ip, #2664]!	; 0xa68

00012660 <getrlimit64@plt>:
   12660:	add	ip, pc, #0, 12
   12664:	add	ip, ip, #499712	; 0x7a000
   12668:	ldr	pc, [ip, #2656]!	; 0xa60

0001266c <realloc@plt>:
   1266c:	add	ip, pc, #0, 12
   12670:	add	ip, ip, #499712	; 0x7a000
   12674:	ldr	pc, [ip, #2648]!	; 0xa58

00012678 <fgetfilecon@plt>:
   12678:	add	ip, pc, #0, 12
   1267c:	add	ip, ip, #499712	; 0x7a000
   12680:	ldr	pc, [ip, #2640]!	; 0xa50

00012684 <localtime_r@plt>:
   12684:	add	ip, pc, #0, 12
   12688:	add	ip, ip, #499712	; 0x7a000
   1268c:	ldr	pc, [ip, #2632]!	; 0xa48

00012690 <textdomain@plt>:
   12690:	add	ip, pc, #0, 12
   12694:	add	ip, ip, #499712	; 0x7a000
   12698:	ldr	pc, [ip, #2624]!	; 0xa40

0001269c <iswcntrl@plt>:
   1269c:	add	ip, pc, #0, 12
   126a0:	add	ip, ip, #499712	; 0x7a000
   126a4:	ldr	pc, [ip, #2616]!	; 0xa38

000126a8 <chdir@plt>:
   126a8:	add	ip, pc, #0, 12
   126ac:	add	ip, ip, #499712	; 0x7a000
   126b0:	ldr	pc, [ip, #2608]!	; 0xa30

000126b4 <__fxstatat64@plt>:
   126b4:	add	ip, pc, #0, 12
   126b8:	add	ip, ip, #499712	; 0x7a000
   126bc:	ldr	pc, [ip, #2600]!	; 0xa28

000126c0 <iswprint@plt>:
   126c0:	add	ip, pc, #0, 12
   126c4:	add	ip, ip, #499712	; 0x7a000
   126c8:	ldr	pc, [ip, #2592]!	; 0xa20

000126cc <tzset@plt>:
   126cc:	add	ip, pc, #0, 12
   126d0:	add	ip, ip, #499712	; 0x7a000
   126d4:	ldr	pc, [ip, #2584]!	; 0xa18

000126d8 <poll@plt>:
   126d8:	add	ip, pc, #0, 12
   126dc:	add	ip, ip, #499712	; 0x7a000
   126e0:	ldr	pc, [ip, #2576]!	; 0xa10

000126e4 <__fxstat64@plt>:
   126e4:	add	ip, pc, #0, 12
   126e8:	add	ip, ip, #499712	; 0x7a000
   126ec:	ldr	pc, [ip, #2568]!	; 0xa08

000126f0 <fwrite@plt>:
   126f0:	add	ip, pc, #0, 12
   126f4:	add	ip, ip, #499712	; 0x7a000
   126f8:	ldr	pc, [ip, #2560]!	; 0xa00

000126fc <strcat@plt>:
   126fc:	add	ip, pc, #0, 12
   12700:	add	ip, ip, #499712	; 0x7a000
   12704:	ldr	pc, [ip, #2552]!	; 0x9f8

00012708 <lseek64@plt>:
   12708:	add	ip, pc, #0, 12
   1270c:	add	ip, ip, #499712	; 0x7a000
   12710:	ldr	pc, [ip, #2544]!	; 0x9f0

00012714 <waitpid@plt>:
   12714:	add	ip, pc, #0, 12
   12718:	add	ip, ip, #499712	; 0x7a000
   1271c:	ldr	pc, [ip, #2536]!	; 0x9e8

00012720 <__ctype_get_mb_cur_max@plt>:
   12720:	add	ip, pc, #0, 12
   12724:	add	ip, ip, #499712	; 0x7a000
   12728:	ldr	pc, [ip, #2528]!	; 0x9e0

0001272c <hasmntopt@plt>:
   1272c:	add	ip, pc, #0, 12
   12730:	add	ip, ip, #499712	; 0x7a000
   12734:	ldr	pc, [ip, #2520]!	; 0x9d8

00012738 <strcpy@plt>:
   12738:	add	ip, pc, #0, 12
   1273c:	add	ip, ip, #499712	; 0x7a000
   12740:	ldr	pc, [ip, #2512]!	; 0x9d0

00012744 <gettimeofday@plt>:
   12744:	add	ip, pc, #0, 12
   12748:	add	ip, ip, #499712	; 0x7a000
   1274c:	ldr	pc, [ip, #2504]!	; 0x9c8

00012750 <__fpending@plt>:
   12750:	add	ip, pc, #0, 12
   12754:	add	ip, ip, #499712	; 0x7a000
   12758:	ldr	pc, [ip, #2496]!	; 0x9c0

0001275c <ferror_unlocked@plt>:
   1275c:	add	ip, pc, #0, 12
   12760:	add	ip, ip, #499712	; 0x7a000
   12764:	ldr	pc, [ip, #2488]!	; 0x9b8

00012768 <mbrtowc@plt>:
   12768:	add	ip, pc, #0, 12
   1276c:	add	ip, ip, #499712	; 0x7a000
   12770:	ldr	pc, [ip, #2480]!	; 0x9b0

00012774 <strtok_r@plt>:
   12774:	add	ip, pc, #0, 12
   12778:	add	ip, ip, #499712	; 0x7a000
   1277c:	ldr	pc, [ip, #2472]!	; 0x9a8

00012780 <error@plt>:
   12780:	add	ip, pc, #0, 12
   12784:	add	ip, ip, #499712	; 0x7a000
   12788:	ldr	pc, [ip, #2464]!	; 0x9a0

0001278c <getmntent@plt>:
   1278c:	add	ip, pc, #0, 12
   12790:	add	ip, ip, #499712	; 0x7a000
   12794:	ldr	pc, [ip, #2456]!	; 0x998

00012798 <opendir@plt>:
   12798:	add	ip, pc, #0, 12
   1279c:	add	ip, ip, #499712	; 0x7a000
   127a0:	ldr	pc, [ip, #2448]!	; 0x990

000127a4 <fnmatch@plt>:
   127a4:	add	ip, pc, #0, 12
   127a8:	add	ip, ip, #499712	; 0x7a000
   127ac:	ldr	pc, [ip, #2440]!	; 0x988

000127b0 <open64@plt>:
   127b0:	add	ip, pc, #0, 12
   127b4:	add	ip, ip, #499712	; 0x7a000
   127b8:	ldr	pc, [ip, #2432]!	; 0x980

000127bc <getenv@plt>:
   127bc:	add	ip, pc, #0, 12
   127c0:	add	ip, ip, #499712	; 0x7a000
   127c4:	ldr	pc, [ip, #2424]!	; 0x978

000127c8 <lgetfilecon@plt>:
   127c8:	add	ip, pc, #0, 12
   127cc:	add	ip, ip, #499712	; 0x7a000
   127d0:	ldr	pc, [ip, #2416]!	; 0x970

000127d4 <malloc@plt>:
   127d4:	add	ip, pc, #0, 12
   127d8:	add	ip, ip, #499712	; 0x7a000
   127dc:	ldr	pc, [ip, #2408]!	; 0x968

000127e0 <__libc_start_main@plt>:
   127e0:	add	ip, pc, #0, 12
   127e4:	add	ip, ip, #499712	; 0x7a000
   127e8:	ldr	pc, [ip, #2400]!	; 0x960

000127ec <readlinkat@plt>:
   127ec:	add	ip, pc, #0, 12
   127f0:	add	ip, ip, #499712	; 0x7a000
   127f4:	ldr	pc, [ip, #2392]!	; 0x958

000127f8 <strftime@plt>:
   127f8:	add	ip, pc, #0, 12
   127fc:	add	ip, ip, #499712	; 0x7a000
   12800:	ldr	pc, [ip, #2384]!	; 0x950

00012804 <__freading@plt>:
   12804:	add	ip, pc, #0, 12
   12808:	add	ip, ip, #499712	; 0x7a000
   1280c:	ldr	pc, [ip, #2376]!	; 0x948

00012810 <localtime@plt>:
   12810:	add	ip, pc, #0, 12
   12814:	add	ip, ip, #499712	; 0x7a000
   12818:	ldr	pc, [ip, #2368]!	; 0x940

0001281c <modf@plt>:
   1281c:	add	ip, pc, #0, 12
   12820:	add	ip, ip, #499712	; 0x7a000
   12824:	ldr	pc, [ip, #2360]!	; 0x938

00012828 <__gmon_start__@plt>:
   12828:	add	ip, pc, #0, 12
   1282c:	add	ip, ip, #499712	; 0x7a000
   12830:	ldr	pc, [ip, #2352]!	; 0x930

00012834 <__ctype_b_loc@plt>:
   12834:	add	ip, pc, #0, 12
   12838:	add	ip, ip, #499712	; 0x7a000
   1283c:	ldr	pc, [ip, #2344]!	; 0x928

00012840 <getcwd@plt>:
   12840:	add	ip, pc, #0, 12
   12844:	add	ip, ip, #499712	; 0x7a000
   12848:	ldr	pc, [ip, #2336]!	; 0x920

0001284c <exit@plt>:
   1284c:	add	ip, pc, #0, 12
   12850:	add	ip, ip, #499712	; 0x7a000
   12854:	ldr	pc, [ip, #2328]!	; 0x918

00012858 <feof@plt>:
   12858:	add	ip, pc, #0, 12
   1285c:	add	ip, ip, #499712	; 0x7a000
   12860:	ldr	pc, [ip, #2320]!	; 0x910

00012864 <gettext@plt>:
   12864:	add	ip, pc, #0, 12
   12868:	add	ip, ip, #499712	; 0x7a000
   1286c:	ldr	pc, [ip, #2312]!	; 0x908

00012870 <getfilecon@plt>:
   12870:	add	ip, pc, #0, 12
   12874:	add	ip, ip, #499712	; 0x7a000
   12878:	ldr	pc, [ip, #2304]!	; 0x900

0001287c <strtoul@plt>:
   1287c:	add	ip, pc, #0, 12
   12880:	add	ip, ip, #499712	; 0x7a000
   12884:	ldr	pc, [ip, #2296]!	; 0x8f8

00012888 <strlen@plt>:
   12888:	add	ip, pc, #0, 12
   1288c:	add	ip, ip, #499712	; 0x7a000
   12890:	ldr	pc, [ip, #2288]!	; 0x8f0

00012894 <strchr@plt>:
   12894:	add	ip, pc, #0, 12
   12898:	add	ip, ip, #499712	; 0x7a000
   1289c:	ldr	pc, [ip, #2280]!	; 0x8e8

000128a0 <setenv@plt>:
   128a0:	add	ip, pc, #0, 12
   128a4:	add	ip, ip, #499712	; 0x7a000
   128a8:	ldr	pc, [ip, #2272]!	; 0x8e0

000128ac <openat64@plt>:
   128ac:	add	ip, pc, #0, 12
   128b0:	add	ip, ip, #499712	; 0x7a000
   128b4:	ldr	pc, [ip, #2264]!	; 0x8d8

000128b8 <memrchr@plt>:
   128b8:	add	ip, pc, #0, 12
   128bc:	add	ip, ip, #499712	; 0x7a000
   128c0:	ldr	pc, [ip, #2256]!	; 0x8d0

000128c4 <fprintf@plt>:
   128c4:	add	ip, pc, #0, 12
   128c8:	add	ip, ip, #499712	; 0x7a000
   128cc:	ldr	pc, [ip, #2248]!	; 0x8c8

000128d0 <__errno_location@plt>:
   128d0:	add	ip, pc, #0, 12
   128d4:	add	ip, ip, #499712	; 0x7a000
   128d8:	ldr	pc, [ip, #2240]!	; 0x8c0

000128dc <iswalnum@plt>:
   128dc:	add	ip, pc, #0, 12
   128e0:	add	ip, ip, #499712	; 0x7a000
   128e4:	ldr	pc, [ip, #2232]!	; 0x8b8

000128e8 <snprintf@plt>:
   128e8:	add	ip, pc, #0, 12
   128ec:	add	ip, ip, #499712	; 0x7a000
   128f0:	ldr	pc, [ip, #2224]!	; 0x8b0

000128f4 <__cxa_atexit@plt>:
   128f4:	add	ip, pc, #0, 12
   128f8:	add	ip, ip, #499712	; 0x7a000
   128fc:	ldr	pc, [ip, #2216]!	; 0x8a8

00012900 <memset@plt>:
   12900:	add	ip, pc, #0, 12
   12904:	add	ip, ip, #499712	; 0x7a000
   12908:	ldr	pc, [ip, #2208]!	; 0x8a0

0001290c <bsearch@plt>:
   1290c:	add	ip, pc, #0, 12
   12910:	add	ip, ip, #499712	; 0x7a000
   12914:	ldr	pc, [ip, #2200]!	; 0x898

00012918 <strncpy@plt>:
   12918:	add	ip, pc, #0, 12
   1291c:	add	ip, ip, #499712	; 0x7a000
   12920:	ldr	pc, [ip, #2192]!	; 0x890

00012924 <pthread_mutexattr_gettype@plt>:
   12924:	add	ip, pc, #0, 12
   12928:	add	ip, ip, #499712	; 0x7a000
   1292c:	ldr	pc, [ip, #2184]!	; 0x888

00012930 <btowc@plt>:
   12930:	add	ip, pc, #0, 12
   12934:	add	ip, ip, #499712	; 0x7a000
   12938:	ldr	pc, [ip, #2176]!	; 0x880

0001293c <strtod@plt>:
   1293c:	add	ip, pc, #0, 12
   12940:	add	ip, ip, #499712	; 0x7a000
   12944:	ldr	pc, [ip, #2168]!	; 0x878

00012948 <fileno@plt>:
   12948:	add	ip, pc, #0, 12
   1294c:	add	ip, ip, #499712	; 0x7a000
   12950:	ldr	pc, [ip, #2160]!	; 0x870

00012954 <difftime@plt>:
   12954:	add	ip, pc, #0, 12
   12958:	add	ip, ip, #499712	; 0x7a000
   1295c:	ldr	pc, [ip, #2152]!	; 0x868

00012960 <strtoumax@plt>:
   12960:	add	ip, pc, #0, 12
   12964:	add	ip, ip, #499712	; 0x7a000
   12968:	ldr	pc, [ip, #2144]!	; 0x860

0001296c <memchr@plt>:
   1296c:	add	ip, pc, #0, 12
   12970:	add	ip, ip, #499712	; 0x7a000
   12974:	ldr	pc, [ip, #2136]!	; 0x858

00012978 <setfilecon@plt>:
   12978:	add	ip, pc, #0, 12
   1297c:	add	ip, ip, #499712	; 0x7a000
   12980:	ldr	pc, [ip, #2128]!	; 0x850

00012984 <access@plt>:
   12984:	add	ip, pc, #0, 12
   12988:	add	ip, ip, #499712	; 0x7a000
   1298c:	ldr	pc, [ip, #2120]!	; 0x848

00012990 <fclose@plt>:
   12990:	add	ip, pc, #0, 12
   12994:	add	ip, ip, #499712	; 0x7a000
   12998:	ldr	pc, [ip, #2112]!	; 0x840

0001299c <strnlen@plt>:
   1299c:	add	ip, pc, #0, 12
   129a0:	add	ip, ip, #499712	; 0x7a000
   129a4:	ldr	pc, [ip, #2104]!	; 0x838

000129a8 <fseeko64@plt>:
   129a8:	add	ip, pc, #0, 12
   129ac:	add	ip, ip, #499712	; 0x7a000
   129b0:	ldr	pc, [ip, #2096]!	; 0x830

000129b4 <abs@plt>:
   129b4:	add	ip, pc, #0, 12
   129b8:	add	ip, ip, #499712	; 0x7a000
   129bc:	ldr	pc, [ip, #2088]!	; 0x828

000129c0 <endmntent@plt>:
   129c0:	add	ip, pc, #0, 12
   129c4:	add	ip, ip, #499712	; 0x7a000
   129c8:	ldr	pc, [ip, #2080]!	; 0x820

000129cc <fcntl64@plt>:
   129cc:	add	ip, pc, #0, 12
   129d0:	add	ip, ip, #499712	; 0x7a000
   129d4:	ldr	pc, [ip, #2072]!	; 0x818

000129d8 <rpmatch@plt>:
   129d8:	add	ip, pc, #0, 12
   129dc:	add	ip, ip, #499712	; 0x7a000
   129e0:	ldr	pc, [ip, #2064]!	; 0x810

000129e4 <setlocale@plt>:
   129e4:	add	ip, pc, #0, 12
   129e8:	add	ip, ip, #499712	; 0x7a000
   129ec:	ldr	pc, [ip, #2056]!	; 0x808

000129f0 <fork@plt>:
   129f0:	add	ip, pc, #0, 12
   129f4:	add	ip, ip, #499712	; 0x7a000
   129f8:	ldr	pc, [ip, #2048]!	; 0x800

000129fc <endpwent@plt>:
   129fc:	add	ip, pc, #0, 12
   12a00:	add	ip, ip, #499712	; 0x7a000
   12a04:	ldr	pc, [ip, #2040]!	; 0x7f8

00012a08 <toupper@plt>:
   12a08:	add	ip, pc, #0, 12
   12a0c:	add	ip, ip, #499712	; 0x7a000
   12a10:	ldr	pc, [ip, #2032]!	; 0x7f0

00012a14 <strrchr@plt>:
   12a14:	add	ip, pc, #0, 12
   12a18:	add	ip, ip, #499712	; 0x7a000
   12a1c:	ldr	pc, [ip, #2024]!	; 0x7e8

00012a20 <vfprintf@plt>:
   12a20:	add	ip, pc, #0, 12
   12a24:	add	ip, ip, #499712	; 0x7a000
   12a28:	ldr	pc, [ip, #2016]!	; 0x7e0

00012a2c <nl_langinfo@plt>:
   12a2c:	add	ip, pc, #0, 12
   12a30:	add	ip, ip, #499712	; 0x7a000
   12a34:	ldr	pc, [ip, #2008]!	; 0x7d8

00012a38 <fputc@plt>:
   12a38:	add	ip, pc, #0, 12
   12a3c:	add	ip, ip, #499712	; 0x7a000
   12a40:	ldr	pc, [ip, #2000]!	; 0x7d0

00012a44 <sscanf@plt>:
   12a44:	add	ip, pc, #0, 12
   12a48:	add	ip, ip, #499712	; 0x7a000
   12a4c:	ldr	pc, [ip, #1992]!	; 0x7c8

00012a50 <localeconv@plt>:
   12a50:	add	ip, pc, #0, 12
   12a54:	add	ip, ip, #499712	; 0x7a000
   12a58:	ldr	pc, [ip, #1984]!	; 0x7c0

00012a5c <sprintf@plt>:
   12a5c:	add	ip, pc, #0, 12
   12a60:	add	ip, ip, #499712	; 0x7a000
   12a64:	ldr	pc, [ip, #1976]!	; 0x7b8

00012a68 <readdir64@plt>:
   12a68:	add	ip, pc, #0, 12
   12a6c:	add	ip, ip, #499712	; 0x7a000
   12a70:	ldr	pc, [ip, #1968]!	; 0x7b0

00012a74 <fdopendir@plt>:
   12a74:	add	ip, pc, #0, 12
   12a78:	add	ip, ip, #499712	; 0x7a000
   12a7c:	ldr	pc, [ip, #1960]!	; 0x7a8

00012a80 <timegm@plt>:
   12a80:	add	ip, pc, #0, 12
   12a84:	add	ip, ip, #499712	; 0x7a000
   12a88:	ldr	pc, [ip, #1952]!	; 0x7a0

00012a8c <putc@plt>:
   12a8c:	add	ip, pc, #0, 12
   12a90:	add	ip, ip, #499712	; 0x7a000
   12a94:	ldr	pc, [ip, #1944]!	; 0x798

00012a98 <dirfd@plt>:
   12a98:	add	ip, pc, #0, 12
   12a9c:	add	ip, ip, #499712	; 0x7a000
   12aa0:	ldr	pc, [ip, #1936]!	; 0x790

00012aa4 <fchdir@plt>:
   12aa4:	add	ip, pc, #0, 12
   12aa8:	add	ip, ip, #499712	; 0x7a000
   12aac:	ldr	pc, [ip, #1928]!	; 0x788

00012ab0 <fopen64@plt>:
   12ab0:	add	ip, pc, #0, 12
   12ab4:	add	ip, ip, #499712	; 0x7a000
   12ab8:	ldr	pc, [ip, #1920]!	; 0x780

00012abc <qsort@plt>:
   12abc:	add	ip, pc, #0, 12
   12ac0:	add	ip, ip, #499712	; 0x7a000
   12ac4:	ldr	pc, [ip, #1912]!	; 0x778

00012ac8 <freecon@plt>:
   12ac8:	add	ip, pc, #0, 12
   12acc:	add	ip, ip, #499712	; 0x7a000
   12ad0:	ldr	pc, [ip, #1904]!	; 0x770

00012ad4 <strpbrk@plt>:
   12ad4:	add	ip, pc, #0, 12
   12ad8:	add	ip, ip, #499712	; 0x7a000
   12adc:	ldr	pc, [ip, #1896]!	; 0x768

00012ae0 <setmntent@plt>:
   12ae0:	add	ip, pc, #0, 12
   12ae4:	add	ip, ip, #499712	; 0x7a000
   12ae8:	ldr	pc, [ip, #1888]!	; 0x760

00012aec <bindtextdomain@plt>:
   12aec:	add	ip, pc, #0, 12
   12af0:	add	ip, ip, #499712	; 0x7a000
   12af4:	ldr	pc, [ip, #1880]!	; 0x758

00012af8 <atof@plt>:
   12af8:	add	ip, pc, #0, 12
   12afc:	add	ip, ip, #499712	; 0x7a000
   12b00:	ldr	pc, [ip, #1872]!	; 0x750

00012b04 <getline@plt>:
   12b04:	add	ip, pc, #0, 12
   12b08:	add	ip, ip, #499712	; 0x7a000
   12b0c:	ldr	pc, [ip, #1864]!	; 0x748

00012b10 <getdelim@plt>:
   12b10:	add	ip, pc, #0, 12
   12b14:	add	ip, ip, #499712	; 0x7a000
   12b18:	ldr	pc, [ip, #1856]!	; 0x740

00012b1c <__xstat64@plt>:
   12b1c:	add	ip, pc, #0, 12
   12b20:	add	ip, ip, #499712	; 0x7a000
   12b24:	ldr	pc, [ip, #1848]!	; 0x738

00012b28 <isatty@plt>:
   12b28:	add	ip, pc, #0, 12
   12b2c:	add	ip, ip, #499712	; 0x7a000
   12b30:	ldr	pc, [ip, #1840]!	; 0x730

00012b34 <unsetenv@plt>:
   12b34:	add	ip, pc, #0, 12
   12b38:	add	ip, ip, #499712	; 0x7a000
   12b3c:	ldr	pc, [ip, #1832]!	; 0x728

00012b40 <towupper@plt>:
   12b40:	add	ip, pc, #0, 12
   12b44:	add	ip, ip, #499712	; 0x7a000
   12b48:	ldr	pc, [ip, #1824]!	; 0x720

00012b4c <fputs@plt>:
   12b4c:	add	ip, pc, #0, 12
   12b50:	add	ip, ip, #499712	; 0x7a000
   12b54:	ldr	pc, [ip, #1816]!	; 0x718

00012b58 <strncmp@plt>:
   12b58:	add	ip, pc, #0, 12
   12b5c:	add	ip, ip, #499712	; 0x7a000
   12b60:	ldr	pc, [ip, #1808]!	; 0x710

00012b64 <abort@plt>:
   12b64:	add	ip, pc, #0, 12
   12b68:	add	ip, ip, #499712	; 0x7a000
   12b6c:	ldr	pc, [ip, #1800]!	; 0x708

00012b70 <close@plt>:
   12b70:	add	ip, pc, #0, 12
   12b74:	add	ip, ip, #499712	; 0x7a000
   12b78:	ldr	pc, [ip, #1792]!	; 0x700

00012b7c <__lxstat64@plt>:
   12b7c:	add	ip, pc, #0, 12
   12b80:	add	ip, ip, #499712	; 0x7a000
   12b84:	ldr	pc, [ip, #1784]!	; 0x6f8

00012b88 <closedir@plt>:
   12b88:	add	ip, pc, #0, 12
   12b8c:	add	ip, ip, #499712	; 0x7a000
   12b90:	ldr	pc, [ip, #1776]!	; 0x6f0

00012b94 <getgrgid@plt>:
   12b94:	add	ip, pc, #0, 12
   12b98:	add	ip, ip, #499712	; 0x7a000
   12b9c:	ldr	pc, [ip, #1768]!	; 0x6e8

00012ba0 <getgrnam@plt>:
   12ba0:	add	ip, pc, #0, 12
   12ba4:	add	ip, ip, #499712	; 0x7a000
   12ba8:	ldr	pc, [ip, #1760]!	; 0x6e0

00012bac <strspn@plt>:
   12bac:	add	ip, pc, #0, 12
   12bb0:	add	ip, ip, #499712	; 0x7a000
   12bb4:	ldr	pc, [ip, #1752]!	; 0x6d8

00012bb8 <__assert_fail@plt>:
   12bb8:	add	ip, pc, #0, 12
   12bbc:	add	ip, ip, #499712	; 0x7a000
   12bc0:	ldr	pc, [ip, #1744]!	; 0x6d0

Disassembly of section .text:

00012bc8 <.text>:
   12bc8:	mov	fp, #0
   12bcc:	mov	lr, #0
   12bd0:	pop	{r1}		; (ldr r1, [sp], #4)
   12bd4:	mov	r2, sp
   12bd8:	push	{r2}		; (str r2, [sp, #-4]!)
   12bdc:	push	{r0}		; (str r0, [sp, #-4]!)
   12be0:	ldr	ip, [pc, #16]	; 12bf8 <__assert_fail@plt+0x40>
   12be4:	push	{ip}		; (str ip, [sp, #-4]!)
   12be8:	ldr	r0, [pc, #12]	; 12bfc <__assert_fail@plt+0x44>
   12bec:	ldr	r3, [pc, #12]	; 12c00 <__assert_fail@plt+0x48>
   12bf0:	bl	127e0 <__libc_start_main@plt>
   12bf4:	bl	12b64 <abort@plt>
   12bf8:	andeq	r5, r7, r0, lsr #12
   12bfc:			; <UNDEFINED> instruction: 0x00012cb8
   12c00:	andeq	r5, r7, r0, asr #11
   12c04:	ldr	r3, [pc, #20]	; 12c20 <__assert_fail@plt+0x68>
   12c08:	ldr	r2, [pc, #20]	; 12c24 <__assert_fail@plt+0x6c>
   12c0c:	add	r3, pc, r3
   12c10:	ldr	r2, [r3, r2]
   12c14:	cmp	r2, #0
   12c18:	bxeq	lr
   12c1c:	b	12828 <__gmon_start__@plt>
   12c20:	andeq	sl, r7, ip, ror #7
   12c24:	muleq	r0, r4, r2
   12c28:	ldr	r0, [pc, #24]	; 12c48 <__assert_fail@plt+0x90>
   12c2c:	ldr	r3, [pc, #24]	; 12c4c <__assert_fail@plt+0x94>
   12c30:	cmp	r3, r0
   12c34:	bxeq	lr
   12c38:	ldr	r3, [pc, #16]	; 12c50 <__assert_fail@plt+0x98>
   12c3c:	cmp	r3, #0
   12c40:	bxeq	lr
   12c44:	bx	r3
   12c48:	andeq	sp, r8, r4, lsl r7
   12c4c:	andeq	sp, r8, r4, lsl r7
   12c50:	andeq	r0, r0, r0
   12c54:	ldr	r0, [pc, #36]	; 12c80 <__assert_fail@plt+0xc8>
   12c58:	ldr	r1, [pc, #36]	; 12c84 <__assert_fail@plt+0xcc>
   12c5c:	sub	r1, r1, r0
   12c60:	asr	r1, r1, #2
   12c64:	add	r1, r1, r1, lsr #31
   12c68:	asrs	r1, r1, #1
   12c6c:	bxeq	lr
   12c70:	ldr	r3, [pc, #16]	; 12c88 <__assert_fail@plt+0xd0>
   12c74:	cmp	r3, #0
   12c78:	bxeq	lr
   12c7c:	bx	r3
   12c80:	andeq	sp, r8, r4, lsl r7
   12c84:	andeq	sp, r8, r4, lsl r7
   12c88:	andeq	r0, r0, r0
   12c8c:	push	{r4, lr}
   12c90:	ldr	r4, [pc, #24]	; 12cb0 <__assert_fail@plt+0xf8>
   12c94:	ldrb	r3, [r4]
   12c98:	cmp	r3, #0
   12c9c:	popne	{r4, pc}
   12ca0:	bl	12c28 <__assert_fail@plt+0x70>
   12ca4:	mov	r3, #1
   12ca8:	strb	r3, [r4]
   12cac:	pop	{r4, pc}
   12cb0:	andeq	sp, r8, r8, lsr r7
   12cb4:	b	12c54 <__assert_fail@plt+0x9c>
   12cb8:	push	{fp, lr}
   12cbc:	mov	fp, sp
   12cc0:	sub	sp, sp, #56	; 0x38
   12cc4:	movw	r2, #0
   12cc8:	str	r2, [fp, #-4]
   12ccc:	str	r0, [fp, #-8]
   12cd0:	str	r1, [fp, #-12]
   12cd4:	str	r2, [fp, #-16]
   12cd8:	ldr	r0, [fp, #-12]
   12cdc:	ldr	r0, [r0]
   12ce0:	cmp	r0, r2
   12ce4:	beq	12cf8 <__assert_fail@plt+0x140>
   12ce8:	ldr	r0, [fp, #-12]
   12cec:	ldr	r0, [r0]
   12cf0:	bl	465e0 <__assert_fail@plt+0x33a28>
   12cf4:	b	12d04 <__assert_fail@plt+0x14c>
   12cf8:	movw	r0, #22176	; 0x56a0
   12cfc:	movt	r0, #7
   12d00:	bl	465e0 <__assert_fail@plt+0x33a28>
   12d04:	bl	1c208 <__assert_fail@plt+0x9650>
   12d08:	movw	r0, #0
   12d0c:	movw	r1, #57436	; 0xe05c
   12d10:	movt	r1, #8
   12d14:	strb	r0, [r1, #40]	; 0x28
   12d18:	movw	r2, #0
   12d1c:	str	r2, [r1, #28]
   12d20:	strb	r0, [r1, #32]
   12d24:	mvn	r0, #99	; 0x63
   12d28:	str	r0, [r1, #16]
   12d2c:	bl	296e0 <__assert_fail@plt+0x16b28>
   12d30:	tst	r0, #1
   12d34:	beq	12d3c <__assert_fail@plt+0x184>
   12d38:	bl	291a4 <__assert_fail@plt+0x165ec>
   12d3c:	movw	r0, #33982	; 0x84be
   12d40:	movt	r0, #7
   12d44:	bl	1dba4 <__assert_fail@plt+0xafec>
   12d48:	movw	r1, #57436	; 0xe05c
   12d4c:	movt	r1, #8
   12d50:	str	r0, [r1, #36]	; 0x24
   12d54:	ldr	r0, [r1, #36]	; 0x24
   12d58:	movw	r1, #0
   12d5c:	cmp	r1, r0
   12d60:	bne	12d94 <__assert_fail@plt+0x1dc>
   12d64:	bl	128d0 <__errno_location@plt>
   12d68:	ldr	r1, [r0]
   12d6c:	movw	r0, #22181	; 0x56a5
   12d70:	movt	r0, #7
   12d74:	str	r1, [fp, #-24]	; 0xffffffe8
   12d78:	bl	12864 <gettext@plt>
   12d7c:	movw	r1, #1
   12d80:	str	r0, [sp, #28]
   12d84:	mov	r0, r1
   12d88:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12d8c:	ldr	r2, [sp, #28]
   12d90:	bl	12780 <error@plt>
   12d94:	movw	r0, #57480	; 0xe088
   12d98:	movt	r0, #8
   12d9c:	bl	1d44c <__assert_fail@plt+0xa894>
   12da0:	movw	r0, #6
   12da4:	movw	r1, #29909	; 0x74d5
   12da8:	movt	r1, #7
   12dac:	bl	129e4 <setlocale@plt>
   12db0:	movw	r1, #40125	; 0x9cbd
   12db4:	movt	r1, #7
   12db8:	str	r0, [sp, #24]
   12dbc:	mov	r0, r1
   12dc0:	movw	r1, #22225	; 0x56d1
   12dc4:	movt	r1, #7
   12dc8:	bl	12aec <bindtextdomain@plt>
   12dcc:	movw	r1, #40125	; 0x9cbd
   12dd0:	movt	r1, #7
   12dd4:	str	r0, [sp, #20]
   12dd8:	mov	r0, r1
   12ddc:	bl	12690 <textdomain@plt>
   12de0:	movw	r1, #49228	; 0xc04c
   12de4:	movt	r1, #2
   12de8:	str	r0, [sp, #16]
   12dec:	mov	r0, r1
   12df0:	bl	75624 <__assert_fail@plt+0x62a6c>
   12df4:	cmp	r0, #0
   12df8:	beq	12e2c <__assert_fail@plt+0x274>
   12dfc:	bl	128d0 <__errno_location@plt>
   12e00:	ldr	r1, [r0]
   12e04:	movw	r0, #22249	; 0x56e9
   12e08:	movt	r0, #7
   12e0c:	str	r1, [sp, #12]
   12e10:	bl	12864 <gettext@plt>
   12e14:	movw	r1, #1
   12e18:	str	r0, [sp, #8]
   12e1c:	mov	r0, r1
   12e20:	ldr	r1, [sp, #12]
   12e24:	ldr	r2, [sp, #8]
   12e28:	bl	12780 <error@plt>
   12e2c:	ldr	r0, [fp, #-8]
   12e30:	ldr	r1, [fp, #-12]
   12e34:	bl	1ce6c <__assert_fail@plt+0xa2b4>
   12e38:	str	r0, [fp, #-16]
   12e3c:	movw	r0, #57480	; 0xe088
   12e40:	movt	r0, #8
   12e44:	ldr	r0, [r0, #44]	; 0x2c
   12e48:	and	r0, r0, #2
   12e4c:	cmp	r0, #0
   12e50:	beq	12e68 <__assert_fail@plt+0x2b0>
   12e54:	movw	r0, #57480	; 0xe088
   12e58:	movt	r0, #8
   12e5c:	movw	r1, #51704	; 0xc9f8
   12e60:	movt	r1, #1
   12e64:	str	r1, [r0, #52]	; 0x34
   12e68:	movw	r0, #57480	; 0xe088
   12e6c:	movt	r0, #8
   12e70:	ldr	r0, [r0, #44]	; 0x2c
   12e74:	and	r0, r0, #128	; 0x80
   12e78:	cmp	r0, #0
   12e7c:	beq	12ebc <__assert_fail@plt+0x304>
   12e80:	movw	r0, #57480	; 0xe088
   12e84:	movt	r0, #8
   12e88:	add	r0, r0, #28
   12e8c:	movw	r1, #55080	; 0xd728
   12e90:	movt	r1, #8
   12e94:	ldr	r1, [r1]
   12e98:	str	r1, [sp, #4]
   12e9c:	bl	1263c <ctime@plt>
   12ea0:	ldr	r1, [sp, #4]
   12ea4:	str	r0, [sp]
   12ea8:	mov	r0, r1
   12eac:	movw	r1, #22284	; 0x570c
   12eb0:	movt	r1, #7
   12eb4:	ldr	r2, [sp]
   12eb8:	bl	128c4 <fprintf@plt>
   12ebc:	ldr	r0, [fp, #-8]
   12ec0:	ldr	r1, [fp, #-12]
   12ec4:	ldr	r2, [fp, #-16]
   12ec8:	bl	187d8 <__assert_fail@plt+0x5c20>
   12ecc:	str	r0, [fp, #-20]	; 0xffffffec
   12ed0:	movw	r0, #57480	; 0xe088
   12ed4:	movt	r0, #8
   12ed8:	ldrb	r0, [r0, #56]	; 0x38
   12edc:	tst	r0, #1
   12ee0:	bne	12ee8 <__assert_fail@plt+0x330>
   12ee4:	b	12ee8 <__assert_fail@plt+0x330>
   12ee8:	ldr	r0, [fp, #-8]
   12eec:	ldr	r1, [fp, #-16]
   12ef0:	sub	r0, r0, r1
   12ef4:	ldr	r2, [fp, #-12]
   12ef8:	add	r1, r2, r1, lsl #2
   12efc:	bl	12f28 <__assert_fail@plt+0x370>
   12f00:	tst	r0, #1
   12f04:	beq	12f14 <__assert_fail@plt+0x35c>
   12f08:	ldr	r0, [fp, #-20]	; 0xffffffec
   12f0c:	bl	171e0 <__assert_fail@plt+0x4628>
   12f10:	bl	1c348 <__assert_fail@plt+0x9790>
   12f14:	movw	r0, #57436	; 0xe05c
   12f18:	movt	r0, #8
   12f1c:	ldr	r0, [r0, #28]
   12f20:	mov	sp, fp
   12f24:	pop	{fp, pc}
   12f28:	push	{r4, r5, fp, lr}
   12f2c:	add	fp, sp, #8
   12f30:	sub	sp, sp, #336	; 0x150
   12f34:	str	r0, [fp, #-16]
   12f38:	str	r1, [fp, #-20]	; 0xffffffec
   12f3c:	ldr	r0, [fp, #-16]
   12f40:	movw	r1, #0
   12f44:	cmp	r1, r0
   12f48:	movw	r0, #0
   12f4c:	str	r0, [sp, #76]	; 0x4c
   12f50:	bge	12f74 <__assert_fail@plt+0x3bc>
   12f54:	ldr	r0, [fp, #-20]	; 0xffffffec
   12f58:	ldr	r0, [r0]
   12f5c:	movw	r1, #1
   12f60:	and	r1, r1, #1
   12f64:	bl	1cd4c <__assert_fail@plt+0xa194>
   12f68:	mvn	r1, #0
   12f6c:	eor	r0, r0, r1
   12f70:	str	r0, [sp, #76]	; 0x4c
   12f74:	ldr	r0, [sp, #76]	; 0x4c
   12f78:	and	r0, r0, #1
   12f7c:	strb	r0, [fp, #-21]	; 0xffffffeb
   12f80:	movw	r0, #0
   12f84:	str	r0, [fp, #-28]	; 0xffffffe4
   12f88:	str	r0, [fp, #-32]	; 0xffffffe0
   12f8c:	movw	r1, #57480	; 0xe088
   12f90:	movt	r1, #8
   12f94:	ldr	r1, [r1, #76]	; 0x4c
   12f98:	cmp	r1, r0
   12f9c:	beq	13254 <__assert_fail@plt+0x69c>
   12fa0:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   12fa4:	tst	r0, #1
   12fa8:	beq	13014 <__assert_fail@plt+0x45c>
   12fac:	movw	r0, #22303	; 0x571f
   12fb0:	movt	r0, #7
   12fb4:	bl	12864 <gettext@plt>
   12fb8:	ldr	r1, [fp, #-20]	; 0xffffffec
   12fbc:	ldr	r1, [r1]
   12fc0:	movw	r2, #0
   12fc4:	str	r0, [sp, #72]	; 0x48
   12fc8:	mov	r0, r2
   12fcc:	bl	1d994 <__assert_fail@plt+0xaddc>
   12fd0:	movw	r1, #0
   12fd4:	str	r0, [sp, #68]	; 0x44
   12fd8:	mov	r0, r1
   12fdc:	ldr	r2, [sp, #72]	; 0x48
   12fe0:	ldr	r3, [sp, #68]	; 0x44
   12fe4:	bl	12780 <error@plt>
   12fe8:	movw	r0, #22320	; 0x5730
   12fec:	movt	r0, #7
   12ff0:	bl	12864 <gettext@plt>
   12ff4:	movw	r1, #1
   12ff8:	str	r0, [sp, #64]	; 0x40
   12ffc:	mov	r0, r1
   13000:	movw	r1, #0
   13004:	movw	r2, #50143	; 0xc3df
   13008:	movt	r2, #7
   1300c:	ldr	r3, [sp, #64]	; 0x40
   13010:	bl	12780 <error@plt>
   13014:	movw	r0, #57480	; 0xe088
   13018:	movt	r0, #8
   1301c:	ldr	r0, [r0, #76]	; 0x4c
   13020:	movw	r1, #47605	; 0xb9f5
   13024:	movt	r1, #7
   13028:	bl	124c8 <strcmp@plt>
   1302c:	movw	r1, #0
   13030:	cmp	r1, r0
   13034:	bne	130b0 <__assert_fail@plt+0x4f8>
   13038:	movw	r0, #57480	; 0xe088
   1303c:	movt	r0, #8
   13040:	ldrb	r0, [r0, #80]	; 0x50
   13044:	tst	r0, #1
   13048:	beq	13078 <__assert_fail@plt+0x4c0>
   1304c:	movw	r0, #22371	; 0x5763
   13050:	movt	r0, #7
   13054:	bl	12864 <gettext@plt>
   13058:	movw	r1, #1
   1305c:	str	r0, [sp, #60]	; 0x3c
   13060:	mov	r0, r1
   13064:	movw	r1, #0
   13068:	movw	r2, #47760	; 0xba90
   1306c:	movt	r2, #7
   13070:	ldr	r3, [sp, #60]	; 0x3c
   13074:	bl	12780 <error@plt>
   13078:	movw	r0, #22455	; 0x57b7
   1307c:	movt	r0, #7
   13080:	bl	12864 <gettext@plt>
   13084:	movw	r1, #0
   13088:	str	r0, [sp, #56]	; 0x38
   1308c:	mov	r0, r1
   13090:	ldr	r1, [sp, #56]	; 0x38
   13094:	bl	1d994 <__assert_fail@plt+0xaddc>
   13098:	str	r0, [fp, #-32]	; 0xffffffe0
   1309c:	movw	r0, #55088	; 0xd730
   130a0:	movt	r0, #8
   130a4:	ldr	r0, [r0]
   130a8:	str	r0, [fp, #-28]	; 0xffffffe4
   130ac:	b	13244 <__assert_fail@plt+0x68c>
   130b0:	movw	r0, #57480	; 0xe088
   130b4:	movt	r0, #8
   130b8:	ldr	r1, [r0, #76]	; 0x4c
   130bc:	movw	r0, #0
   130c0:	bl	1d994 <__assert_fail@plt+0xaddc>
   130c4:	str	r0, [fp, #-32]	; 0xffffffe0
   130c8:	movw	r0, #57480	; 0xe088
   130cc:	movt	r0, #8
   130d0:	ldr	r0, [r0, #76]	; 0x4c
   130d4:	movw	r1, #40292	; 0x9d64
   130d8:	movt	r1, #7
   130dc:	bl	12ab0 <fopen64@plt>
   130e0:	str	r0, [fp, #-28]	; 0xffffffe4
   130e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   130e8:	movw	r1, #0
   130ec:	cmp	r0, r1
   130f0:	bne	13128 <__assert_fail@plt+0x570>
   130f4:	bl	128d0 <__errno_location@plt>
   130f8:	ldr	r1, [r0]
   130fc:	movw	r0, #22472	; 0x57c8
   13100:	movt	r0, #7
   13104:	str	r1, [sp, #52]	; 0x34
   13108:	bl	12864 <gettext@plt>
   1310c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13110:	movw	r1, #1
   13114:	str	r0, [sp, #48]	; 0x30
   13118:	mov	r0, r1
   1311c:	ldr	r1, [sp, #52]	; 0x34
   13120:	ldr	r2, [sp, #48]	; 0x30
   13124:	bl	12780 <error@plt>
   13128:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1312c:	bl	12948 <fileno@plt>
   13130:	str	r0, [fp, #-40]	; 0xffffffd8
   13134:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13138:	cmp	r0, #0
   1313c:	blt	13144 <__assert_fail@plt+0x58c>
   13140:	b	13164 <__assert_fail@plt+0x5ac>
   13144:	movw	r0, #22978	; 0x59c2
   13148:	movt	r0, #7
   1314c:	movw	r1, #22499	; 0x57e3
   13150:	movt	r1, #7
   13154:	movw	r2, #610	; 0x262
   13158:	movw	r3, #22509	; 0x57ed
   1315c:	movt	r3, #7
   13160:	bl	12bb8 <__assert_fail@plt>
   13164:	movw	r0, #57480	; 0xe088
   13168:	movt	r0, #8
   1316c:	ldrb	r0, [r0, #80]	; 0x50
   13170:	tst	r0, #1
   13174:	beq	13234 <__assert_fail@plt+0x67c>
   13178:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1317c:	sub	r1, fp, #144	; 0x90
   13180:	bl	7564c <__assert_fail@plt+0x62a94>
   13184:	cmp	r0, #0
   13188:	bne	13230 <__assert_fail@plt+0x678>
   1318c:	movw	r0, #0
   13190:	add	r1, sp, #96	; 0x60
   13194:	bl	7564c <__assert_fail@plt+0x62a94>
   13198:	cmp	r0, #0
   1319c:	bne	13230 <__assert_fail@plt+0x678>
   131a0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   131a4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   131a8:	ldr	r2, [sp, #192]	; 0xc0
   131ac:	ldr	r3, [sp, #196]	; 0xc4
   131b0:	eor	r1, r1, r3
   131b4:	eor	r0, r0, r2
   131b8:	orr	r0, r0, r1
   131bc:	cmp	r0, #0
   131c0:	bne	13230 <__assert_fail@plt+0x678>
   131c4:	b	131c8 <__assert_fail@plt+0x610>
   131c8:	ldr	r0, [fp, #-144]	; 0xffffff70
   131cc:	ldr	r1, [fp, #-140]	; 0xffffff74
   131d0:	ldr	r2, [sp, #96]	; 0x60
   131d4:	ldr	r3, [sp, #100]	; 0x64
   131d8:	eor	r1, r1, r3
   131dc:	eor	r0, r0, r2
   131e0:	orr	r0, r0, r1
   131e4:	cmp	r0, #0
   131e8:	bne	13230 <__assert_fail@plt+0x678>
   131ec:	b	131f0 <__assert_fail@plt+0x638>
   131f0:	movw	r0, #22561	; 0x5821
   131f4:	movt	r0, #7
   131f8:	bl	12864 <gettext@plt>
   131fc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13200:	movw	r2, #1
   13204:	str	r0, [sp, #44]	; 0x2c
   13208:	mov	r0, r2
   1320c:	movw	r2, #0
   13210:	str	r1, [sp, #40]	; 0x28
   13214:	mov	r1, r2
   13218:	movw	r2, #22553	; 0x5819
   1321c:	movt	r2, #7
   13220:	ldr	r3, [sp, #44]	; 0x2c
   13224:	ldr	ip, [sp, #40]	; 0x28
   13228:	str	ip, [sp]
   1322c:	bl	12780 <error@plt>
   13230:	b	13234 <__assert_fail@plt+0x67c>
   13234:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13238:	movw	r1, #1
   1323c:	and	r1, r1, #1
   13240:	bl	2bf20 <__assert_fail@plt+0x19368>
   13244:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13248:	bl	2b940 <__assert_fail@plt+0x18d88>
   1324c:	str	r0, [fp, #-36]	; 0xffffffdc
   13250:	b	13298 <__assert_fail@plt+0x6e0>
   13254:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   13258:	tst	r0, #1
   1325c:	bne	1328c <__assert_fail@plt+0x6d4>
   13260:	add	r0, sp, #94	; 0x5e
   13264:	movw	r1, #26652	; 0x681c
   13268:	movt	r1, #7
   1326c:	ldrb	r2, [r1]
   13270:	strb	r2, [sp, #94]	; 0x5e
   13274:	ldrb	r1, [r1, #1]
   13278:	strb	r1, [sp, #95]	; 0x5f
   1327c:	bl	13574 <__assert_fail@plt+0x9bc>
   13280:	and	r0, r0, #1
   13284:	strb	r0, [fp, #-9]
   13288:	b	13538 <__assert_fail@plt+0x980>
   1328c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13290:	bl	2b8d0 <__assert_fail@plt+0x18d18>
   13294:	str	r0, [fp, #-36]	; 0xffffffdc
   13298:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1329c:	movw	r1, #0
   132a0:	cmp	r0, r1
   132a4:	bne	132ac <__assert_fail@plt+0x6f4>
   132a8:	bl	4d028 <__assert_fail@plt+0x3a470>
   132ac:	movw	r0, #1
   132b0:	strb	r0, [sp, #93]	; 0x5d
   132b4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   132b8:	add	r1, sp, #88	; 0x58
   132bc:	bl	2b9bc <__assert_fail@plt+0x18e04>
   132c0:	str	r0, [sp, #84]	; 0x54
   132c4:	ldr	r0, [sp, #84]	; 0x54
   132c8:	movw	r1, #0
   132cc:	cmp	r0, r1
   132d0:	bne	13380 <__assert_fail@plt+0x7c8>
   132d4:	ldr	r0, [sp, #88]	; 0x58
   132d8:	cmp	r0, #2
   132dc:	str	r0, [sp, #36]	; 0x24
   132e0:	beq	13308 <__assert_fail@plt+0x750>
   132e4:	b	132e8 <__assert_fail@plt+0x730>
   132e8:	ldr	r0, [sp, #36]	; 0x24
   132ec:	cmp	r0, #3
   132f0:	beq	1335c <__assert_fail@plt+0x7a4>
   132f4:	b	132f8 <__assert_fail@plt+0x740>
   132f8:	ldr	r0, [sp, #36]	; 0x24
   132fc:	cmp	r0, #4
   13300:	beq	1330c <__assert_fail@plt+0x754>
   13304:	b	13360 <__assert_fail@plt+0x7a8>
   13308:	b	134b8 <__assert_fail@plt+0x900>
   1330c:	bl	128d0 <__errno_location@plt>
   13310:	ldr	r1, [r0]
   13314:	movw	r0, #22660	; 0x5884
   13318:	movt	r0, #7
   1331c:	str	r1, [sp, #32]
   13320:	bl	12864 <gettext@plt>
   13324:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13328:	movw	r1, #0
   1332c:	str	r0, [sp, #28]
   13330:	mov	r0, r1
   13334:	ldr	r1, [sp, #32]
   13338:	ldr	r2, [sp, #28]
   1333c:	bl	12780 <error@plt>
   13340:	movw	r0, #57436	; 0xe05c
   13344:	movt	r0, #8
   13348:	movw	r1, #1
   1334c:	str	r1, [r0, #28]
   13350:	movw	r0, #0
   13354:	strb	r0, [sp, #93]	; 0x5d
   13358:	b	134b8 <__assert_fail@plt+0x900>
   1335c:	bl	4d028 <__assert_fail@plt+0x3a470>
   13360:	movw	r0, #22675	; 0x5893
   13364:	movt	r0, #7
   13368:	movw	r1, #22499	; 0x57e3
   1336c:	movt	r1, #7
   13370:	movw	r2, #675	; 0x2a3
   13374:	movw	r3, #22509	; 0x57ed
   13378:	movt	r3, #7
   1337c:	bl	12bb8 <__assert_fail@plt>
   13380:	ldr	r0, [sp, #84]	; 0x54
   13384:	ldrsb	r0, [r0]
   13388:	cmp	r0, #0
   1338c:	bne	1344c <__assert_fail@plt+0x894>
   13390:	movw	r0, #57480	; 0xe088
   13394:	movt	r0, #8
   13398:	ldr	r0, [r0, #76]	; 0x4c
   1339c:	movw	r1, #0
   133a0:	cmp	r0, r1
   133a4:	bne	133d8 <__assert_fail@plt+0x820>
   133a8:	ldr	r1, [sp, #84]	; 0x54
   133ac:	movw	r0, #0
   133b0:	bl	1d994 <__assert_fail@plt+0xaddc>
   133b4:	movw	r1, #0
   133b8:	str	r0, [sp, #24]
   133bc:	mov	r0, r1
   133c0:	movw	r1, #2
   133c4:	movw	r2, #50143	; 0xc3df
   133c8:	movt	r2, #7
   133cc:	ldr	r3, [sp, #24]
   133d0:	bl	12780 <error@plt>
   133d4:	b	13430 <__assert_fail@plt+0x878>
   133d8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   133dc:	bl	2bad8 <__assert_fail@plt+0x18f20>
   133e0:	str	r0, [sp, #80]	; 0x50
   133e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   133e8:	ldr	r0, [sp, #80]	; 0x50
   133ec:	movw	r1, #22726	; 0x58c6
   133f0:	movt	r1, #7
   133f4:	str	r0, [sp, #20]
   133f8:	mov	r0, r1
   133fc:	str	r3, [sp, #16]
   13400:	bl	12864 <gettext@plt>
   13404:	movw	r1, #0
   13408:	str	r0, [sp, #12]
   1340c:	mov	r0, r1
   13410:	movw	r2, #22715	; 0x58bb
   13414:	movt	r2, #7
   13418:	ldr	r3, [sp, #16]
   1341c:	ldr	ip, [sp, #20]
   13420:	str	ip, [sp]
   13424:	ldr	lr, [sp, #12]
   13428:	str	lr, [sp, #4]
   1342c:	bl	12780 <error@plt>
   13430:	movw	r0, #57436	; 0xe05c
   13434:	movt	r0, #8
   13438:	movw	r1, #1
   1343c:	str	r1, [r0, #28]
   13440:	movw	r0, #0
   13444:	strb	r0, [sp, #93]	; 0x5d
   13448:	b	132b4 <__assert_fail@plt+0x6fc>
   1344c:	movw	r0, #57480	; 0xe088
   13450:	movt	r0, #8
   13454:	ldr	r0, [r0, #76]	; 0x4c
   13458:	movw	r1, #0
   1345c:	cmp	r0, r1
   13460:	bne	13480 <__assert_fail@plt+0x8c8>
   13464:	ldr	r0, [sp, #84]	; 0x54
   13468:	movw	r1, #1
   1346c:	and	r1, r1, #1
   13470:	bl	1cd4c <__assert_fail@plt+0xa194>
   13474:	tst	r0, #1
   13478:	beq	13480 <__assert_fail@plt+0x8c8>
   1347c:	b	134b4 <__assert_fail@plt+0x8fc>
   13480:	ldr	r0, [sp, #84]	; 0x54
   13484:	bl	12888 <strlen@plt>
   13488:	movw	r1, #57436	; 0xe05c
   1348c:	movt	r1, #8
   13490:	str	r0, [r1, #20]
   13494:	ldr	r0, [sp, #84]	; 0x54
   13498:	bl	13574 <__assert_fail@plt+0x9bc>
   1349c:	tst	r0, #1
   134a0:	bne	134b0 <__assert_fail@plt+0x8f8>
   134a4:	movw	r0, #0
   134a8:	strb	r0, [sp, #93]	; 0x5d
   134ac:	b	134b8 <__assert_fail@plt+0x900>
   134b0:	b	132b4 <__assert_fail@plt+0x6fc>
   134b4:	b	134b8 <__assert_fail@plt+0x900>
   134b8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   134bc:	bl	2bb28 <__assert_fail@plt+0x18f70>
   134c0:	ldrb	r0, [sp, #93]	; 0x5d
   134c4:	tst	r0, #1
   134c8:	beq	1352c <__assert_fail@plt+0x974>
   134cc:	movw	r0, #57480	; 0xe088
   134d0:	movt	r0, #8
   134d4:	ldr	r0, [r0, #76]	; 0x4c
   134d8:	movw	r1, #0
   134dc:	cmp	r0, r1
   134e0:	beq	1352c <__assert_fail@plt+0x974>
   134e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   134e8:	bl	12588 <ferror@plt>
   134ec:	cmp	r0, #0
   134f0:	bne	13504 <__assert_fail@plt+0x94c>
   134f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   134f8:	bl	12990 <fclose@plt>
   134fc:	cmp	r0, #0
   13500:	beq	1352c <__assert_fail@plt+0x974>
   13504:	movw	r0, #22756	; 0x58e4
   13508:	movt	r0, #7
   1350c:	bl	12864 <gettext@plt>
   13510:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13514:	movw	r1, #1
   13518:	str	r0, [sp, #8]
   1351c:	mov	r0, r1
   13520:	movw	r1, #0
   13524:	ldr	r2, [sp, #8]
   13528:	bl	12780 <error@plt>
   1352c:	ldrb	r0, [sp, #93]	; 0x5d
   13530:	and	r0, r0, #1
   13534:	strb	r0, [fp, #-9]
   13538:	ldrb	r0, [fp, #-9]
   1353c:	and	r0, r0, #1
   13540:	sub	sp, fp, #8
   13544:	pop	{r4, r5, fp, pc}
   13548:	sub	sp, sp, #4
   1354c:	str	r0, [sp]
   13550:	movw	r0, #53920	; 0xd2a0
   13554:	movt	r0, #8
   13558:	ldr	r0, [r0]
   1355c:	ldr	r1, [sp]
   13560:	str	r0, [r1]
   13564:	movw	r0, #1
   13568:	and	r0, r0, #1
   1356c:	add	sp, sp, #4
   13570:	bx	lr
   13574:	push	{fp, lr}
   13578:	mov	fp, sp
   1357c:	sub	sp, sp, #72	; 0x48
   13580:	str	r0, [fp, #-8]
   13584:	ldr	r0, [fp, #-8]
   13588:	bl	12888 <strlen@plt>
   1358c:	movw	r1, #57436	; 0xe05c
   13590:	movt	r1, #8
   13594:	str	r0, [r1, #20]
   13598:	mvn	r0, #99	; 0x63
   1359c:	bl	138d0 <__assert_fail@plt+0xd18>
   135a0:	ldr	r0, [fp, #-8]
   135a4:	str	r0, [fp, #-16]
   135a8:	mov	r0, #0
   135ac:	str	r0, [fp, #-12]
   135b0:	movw	r0, #57480	; 0xe088
   135b4:	movt	r0, #8
   135b8:	ldr	r0, [r0, #48]	; 0x30
   135bc:	cmp	r0, #0
   135c0:	str	r0, [fp, #-32]	; 0xffffffe0
   135c4:	beq	1361c <__assert_fail@plt+0xa64>
   135c8:	b	135cc <__assert_fail@plt+0xa14>
   135cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   135d0:	cmp	r0, #1
   135d4:	beq	135ec <__assert_fail@plt+0xa34>
   135d8:	b	135dc <__assert_fail@plt+0xa24>
   135dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   135e0:	cmp	r0, #2
   135e4:	beq	13604 <__assert_fail@plt+0xa4c>
   135e8:	b	13630 <__assert_fail@plt+0xa78>
   135ec:	movw	r0, #53920	; 0xd2a0
   135f0:	movt	r0, #8
   135f4:	ldr	r1, [r0]
   135f8:	orr	r1, r1, #3
   135fc:	str	r1, [r0]
   13600:	b	13630 <__assert_fail@plt+0xa78>
   13604:	movw	r0, #53920	; 0xd2a0
   13608:	movt	r0, #8
   1360c:	ldr	r1, [r0]
   13610:	orr	r1, r1, #17
   13614:	str	r1, [r0]
   13618:	b	13630 <__assert_fail@plt+0xa78>
   1361c:	movw	r0, #53920	; 0xd2a0
   13620:	movt	r0, #8
   13624:	ldr	r1, [r0]
   13628:	orr	r1, r1, #16
   1362c:	str	r1, [r0]
   13630:	movw	r0, #57480	; 0xe088
   13634:	movt	r0, #8
   13638:	ldrb	r0, [r0, #13]
   1363c:	tst	r0, #1
   13640:	beq	13658 <__assert_fail@plt+0xaa0>
   13644:	movw	r0, #53920	; 0xd2a0
   13648:	movt	r0, #8
   1364c:	ldr	r1, [r0]
   13650:	orr	r1, r1, #64	; 0x40
   13654:	str	r1, [r0]
   13658:	sub	r0, fp, #16
   1365c:	movw	r1, #53920	; 0xd2a0
   13660:	movt	r1, #8
   13664:	ldr	r1, [r1]
   13668:	movw	r2, #0
   1366c:	bl	4ec4c <__assert_fail@plt+0x3c094>
   13670:	str	r0, [fp, #-20]	; 0xffffffec
   13674:	ldr	r0, [fp, #-20]	; 0xffffffec
   13678:	movw	r1, #0
   1367c:	cmp	r1, r0
   13680:	bne	136e0 <__assert_fail@plt+0xb28>
   13684:	bl	128d0 <__errno_location@plt>
   13688:	ldr	r1, [r0]
   1368c:	movw	r0, #22773	; 0x58f5
   13690:	movt	r0, #7
   13694:	str	r1, [sp, #36]	; 0x24
   13698:	bl	12864 <gettext@plt>
   1369c:	ldr	r1, [fp, #-8]
   136a0:	movw	r2, #0
   136a4:	str	r0, [sp, #32]
   136a8:	mov	r0, r2
   136ac:	bl	1d994 <__assert_fail@plt+0xaddc>
   136b0:	movw	r1, #0
   136b4:	str	r0, [sp, #28]
   136b8:	mov	r0, r1
   136bc:	ldr	r1, [sp, #36]	; 0x24
   136c0:	ldr	r2, [sp, #32]
   136c4:	ldr	r3, [sp, #28]
   136c8:	bl	12780 <error@plt>
   136cc:	movw	r0, #57436	; 0xe05c
   136d0:	movt	r0, #8
   136d4:	movw	r1, #1
   136d8:	str	r1, [r0, #28]
   136dc:	b	138b0 <__assert_fail@plt+0xcf8>
   136e0:	ldr	r0, [pc, #484]	; 138cc <__assert_fail@plt+0xd14>
   136e4:	str	r0, [fp, #-28]	; 0xffffffe4
   136e8:	bl	128d0 <__errno_location@plt>
   136ec:	movw	r1, #0
   136f0:	str	r1, [r0]
   136f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   136f8:	bl	4fd4c <__assert_fail@plt+0x3d194>
   136fc:	str	r0, [fp, #-24]	; 0xffffffe8
   13700:	movw	r1, #0
   13704:	cmp	r0, r1
   13708:	beq	137c8 <__assert_fail@plt+0xc10>
   1370c:	movw	r0, #57436	; 0xe05c
   13710:	movt	r0, #8
   13714:	ldrb	r0, [r0, #32]
   13718:	tst	r0, #1
   1371c:	beq	13738 <__assert_fail@plt+0xb80>
   13720:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13724:	ldr	r0, [r0, #48]	; 0x30
   13728:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1372c:	cmp	r0, r1
   13730:	beq	13738 <__assert_fail@plt+0xb80>
   13734:	bl	1c048 <__assert_fail@plt+0x9490>
   13738:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1373c:	ldr	r0, [r0, #48]	; 0x30
   13740:	str	r0, [fp, #-28]	; 0xffffffe4
   13744:	movw	r0, #0
   13748:	movw	r1, #57436	; 0xe05c
   1374c:	movt	r1, #8
   13750:	strb	r0, [r1, #40]	; 0x28
   13754:	strb	r0, [r1, #4]
   13758:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1375c:	ldr	r0, [r0, #80]	; 0x50
   13760:	cmp	r0, #0
   13764:	movw	r0, #0
   13768:	movne	r0, #1
   1376c:	mvn	r2, #0
   13770:	eor	r0, r0, r2
   13774:	eor	r0, r0, r2
   13778:	and	r0, r0, #1
   1377c:	strb	r0, [r1, #5]
   13780:	ldrb	r0, [r1, #5]
   13784:	tst	r0, #1
   13788:	beq	1379c <__assert_fail@plt+0xbe4>
   1378c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13790:	ldr	r0, [r0, #80]	; 0x50
   13794:	str	r0, [sp, #24]
   13798:	b	137a8 <__assert_fail@plt+0xbf0>
   1379c:	movw	r0, #0
   137a0:	str	r0, [sp, #24]
   137a4:	b	137a8 <__assert_fail@plt+0xbf0>
   137a8:	ldr	r0, [sp, #24]
   137ac:	movw	r1, #57436	; 0xe05c
   137b0:	movt	r1, #8
   137b4:	str	r0, [r1, #8]
   137b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   137bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   137c0:	bl	13a00 <__assert_fail@plt+0xe48>
   137c4:	b	136e8 <__assert_fail@plt+0xb30>
   137c8:	bl	128d0 <__errno_location@plt>
   137cc:	ldr	r0, [r0]
   137d0:	cmp	r0, #0
   137d4:	beq	13840 <__assert_fail@plt+0xc88>
   137d8:	bl	128d0 <__errno_location@plt>
   137dc:	ldr	r1, [r0]
   137e0:	ldr	r0, [fp, #-8]
   137e4:	movw	r2, #0
   137e8:	str	r0, [sp, #20]
   137ec:	mov	r0, r2
   137f0:	ldr	r2, [sp, #20]
   137f4:	str	r1, [sp, #16]
   137f8:	mov	r1, r2
   137fc:	bl	1d994 <__assert_fail@plt+0xaddc>
   13800:	movw	r1, #0
   13804:	str	r0, [sp, #12]
   13808:	mov	r0, r1
   1380c:	ldr	r1, [sp, #16]
   13810:	movw	r2, #22790	; 0x5906
   13814:	movt	r2, #7
   13818:	ldr	r3, [sp, #12]
   1381c:	bl	12780 <error@plt>
   13820:	movw	r0, #57436	; 0xe05c
   13824:	movt	r0, #8
   13828:	movw	r1, #1
   1382c:	str	r1, [r0, #28]
   13830:	movw	r0, #0
   13834:	and	r0, r0, #1
   13838:	strb	r0, [fp, #-1]
   1383c:	b	138bc <__assert_fail@plt+0xd04>
   13840:	ldr	r0, [fp, #-20]	; 0xffffffec
   13844:	bl	4fa8c <__assert_fail@plt+0x3ced4>
   13848:	movw	r1, #0
   1384c:	cmp	r1, r0
   13850:	beq	138a8 <__assert_fail@plt+0xcf0>
   13854:	bl	128d0 <__errno_location@plt>
   13858:	ldr	r1, [r0]
   1385c:	movw	r0, #22848	; 0x5940
   13860:	movt	r0, #7
   13864:	str	r1, [sp, #8]
   13868:	bl	12864 <gettext@plt>
   1386c:	ldr	r3, [fp, #-8]
   13870:	movw	r1, #0
   13874:	str	r0, [sp, #4]
   13878:	mov	r0, r1
   1387c:	ldr	r1, [sp, #8]
   13880:	ldr	r2, [sp, #4]
   13884:	bl	12780 <error@plt>
   13888:	movw	r0, #57436	; 0xe05c
   1388c:	movt	r0, #8
   13890:	movw	r1, #1
   13894:	str	r1, [r0, #28]
   13898:	movw	r0, #0
   1389c:	and	r0, r0, #1
   138a0:	strb	r0, [fp, #-1]
   138a4:	b	138bc <__assert_fail@plt+0xd04>
   138a8:	movw	r0, #0
   138ac:	str	r0, [fp, #-20]	; 0xffffffec
   138b0:	movw	r0, #1
   138b4:	and	r0, r0, #1
   138b8:	strb	r0, [fp, #-1]
   138bc:	ldrb	r0, [fp, #-1]
   138c0:	and	r0, r0, #1
   138c4:	mov	sp, fp
   138c8:	pop	{fp, pc}
   138cc:	andhi	r0, r0, r0
   138d0:	push	{fp, lr}
   138d4:	mov	fp, sp
   138d8:	sub	sp, sp, #8
   138dc:	str	r0, [sp, #4]
   138e0:	movw	r0, #53920	; 0xd2a0
   138e4:	movt	r0, #8
   138e8:	ldr	r0, [r0]
   138ec:	and	r0, r0, #512	; 0x200
   138f0:	cmp	r0, #0
   138f4:	beq	139f4 <__assert_fail@plt+0xe3c>
   138f8:	ldr	r0, [sp, #4]
   138fc:	cmn	r0, #100	; 0x64
   13900:	beq	13910 <__assert_fail@plt+0xd58>
   13904:	ldr	r0, [sp, #4]
   13908:	cmp	r0, #0
   1390c:	blt	13914 <__assert_fail@plt+0xd5c>
   13910:	b	13934 <__assert_fail@plt+0xd7c>
   13914:	movw	r0, #22903	; 0x5977
   13918:	movt	r0, #7
   1391c:	movw	r1, #22499	; 0x57e3
   13920:	movt	r1, #7
   13924:	movw	r2, #107	; 0x6b
   13928:	movw	r3, #22937	; 0x5999
   1392c:	movt	r3, #7
   13930:	bl	12bb8 <__assert_fail@plt>
   13934:	ldr	r0, [sp, #4]
   13938:	movw	r1, #57436	; 0xe05c
   1393c:	movt	r1, #8
   13940:	str	r0, [r1, #16]
   13944:	movw	r0, #53924	; 0xd2a4
   13948:	movt	r0, #8
   1394c:	ldr	r0, [r0]
   13950:	cmp	r0, #0
   13954:	bge	139f0 <__assert_fail@plt+0xe38>
   13958:	ldr	r0, [sp, #4]
   1395c:	mvn	r1, #99	; 0x63
   13960:	cmp	r1, r0
   13964:	bne	1397c <__assert_fail@plt+0xdc4>
   13968:	movw	r0, #53924	; 0xd2a4
   1396c:	movt	r0, #8
   13970:	mvn	r1, #99	; 0x63
   13974:	str	r1, [r0]
   13978:	b	139ec <__assert_fail@plt+0xe34>
   1397c:	ldr	r0, [sp, #4]
   13980:	cmp	r0, #0
   13984:	blt	139a0 <__assert_fail@plt+0xde8>
   13988:	ldr	r0, [sp, #4]
   1398c:	bl	2bfdc <__assert_fail@plt+0x19424>
   13990:	movw	r1, #53924	; 0xd2a4
   13994:	movt	r1, #8
   13998:	str	r0, [r1]
   1399c:	b	139e8 <__assert_fail@plt+0xe30>
   139a0:	movw	r0, #53924	; 0xd2a4
   139a4:	movt	r0, #8
   139a8:	ldr	r0, [r0]
   139ac:	cmp	r0, #0
   139b0:	bge	139c0 <__assert_fail@plt+0xe08>
   139b4:	ldr	r0, [sp, #4]
   139b8:	cmp	r0, #0
   139bc:	blt	139c4 <__assert_fail@plt+0xe0c>
   139c0:	b	139e4 <__assert_fail@plt+0xe2c>
   139c4:	movw	r0, #22958	; 0x59ae
   139c8:	movt	r0, #7
   139cc:	movw	r1, #22499	; 0x57e3
   139d0:	movt	r1, #7
   139d4:	movw	r2, #125	; 0x7d
   139d8:	movw	r3, #22937	; 0x5999
   139dc:	movt	r3, #7
   139e0:	bl	12bb8 <__assert_fail@plt>
   139e4:	b	139e8 <__assert_fail@plt+0xe30>
   139e8:	b	139ec <__assert_fail@plt+0xe34>
   139ec:	b	139f0 <__assert_fail@plt+0xe38>
   139f0:	b	139f8 <__assert_fail@plt+0xe40>
   139f4:	b	139f8 <__assert_fail@plt+0xe40>
   139f8:	mov	sp, fp
   139fc:	pop	{fp, pc}
   13a00:	push	{r4, r5, r6, r7, fp, lr}
   13a04:	add	fp, sp, #16
   13a08:	sub	sp, sp, #216	; 0xd8
   13a0c:	str	r0, [fp, #-20]	; 0xffffffec
   13a10:	str	r1, [fp, #-24]	; 0xffffffe8
   13a14:	movw	r0, #57480	; 0xe088
   13a18:	movt	r0, #8
   13a1c:	ldr	r0, [r0, #44]	; 0x2c
   13a20:	and	r0, r0, #4
   13a24:	cmp	r0, #0
   13a28:	beq	13b1c <__assert_fail@plt+0xf64>
   13a2c:	movw	r0, #55080	; 0xd728
   13a30:	movt	r0, #8
   13a34:	ldr	r0, [r0]
   13a38:	movw	r1, #57480	; 0xe088
   13a3c:	movt	r1, #8
   13a40:	ldr	r1, [r1, #72]	; 0x48
   13a44:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13a48:	ldr	r2, [r2, #28]
   13a4c:	movw	r3, #0
   13a50:	str	r0, [sp, #88]	; 0x58
   13a54:	mov	r0, r3
   13a58:	bl	487d0 <__assert_fail@plt+0x35c18>
   13a5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13a60:	ldrh	r1, [r1, #56]	; 0x38
   13a64:	str	r0, [sp, #84]	; 0x54
   13a68:	mov	r0, r1
   13a6c:	bl	14164 <__assert_fail@plt+0x15ac>
   13a70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13a74:	ldr	r1, [r1, #48]	; 0x30
   13a78:	movw	r2, #53928	; 0xd2a8
   13a7c:	movt	r2, #8
   13a80:	ldr	r2, [r2]
   13a84:	movw	r3, #57480	; 0xe088
   13a88:	movt	r3, #8
   13a8c:	ldr	r3, [r3, #72]	; 0x48
   13a90:	ldr	ip, [fp, #-24]	; 0xffffffe8
   13a94:	ldr	ip, [ip, #28]
   13a98:	movw	lr, #1
   13a9c:	str	r0, [sp, #80]	; 0x50
   13aa0:	mov	r0, lr
   13aa4:	str	r1, [sp, #76]	; 0x4c
   13aa8:	mov	r1, r3
   13aac:	str	r2, [sp, #72]	; 0x48
   13ab0:	mov	r2, ip
   13ab4:	bl	487d0 <__assert_fail@plt+0x35c18>
   13ab8:	movw	r1, #57480	; 0xe088
   13abc:	movt	r1, #8
   13ac0:	ldr	r1, [r1, #72]	; 0x48
   13ac4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13ac8:	ldr	r2, [r2, #24]
   13acc:	movw	r3, #2
   13ad0:	str	r0, [sp, #68]	; 0x44
   13ad4:	mov	r0, r3
   13ad8:	bl	487d0 <__assert_fail@plt+0x35c18>
   13adc:	ldr	r1, [sp, #88]	; 0x58
   13ae0:	str	r0, [sp, #64]	; 0x40
   13ae4:	mov	r0, r1
   13ae8:	movw	r1, #22986	; 0x59ca
   13aec:	movt	r1, #7
   13af0:	ldr	r2, [sp, #84]	; 0x54
   13af4:	ldr	r3, [sp, #80]	; 0x50
   13af8:	ldr	ip, [sp, #76]	; 0x4c
   13afc:	str	ip, [sp]
   13b00:	ldr	lr, [sp, #72]	; 0x48
   13b04:	str	lr, [sp, #4]
   13b08:	ldr	r4, [sp, #68]	; 0x44
   13b0c:	str	r4, [sp, #8]
   13b10:	ldr	r5, [sp, #64]	; 0x40
   13b14:	str	r5, [sp, #12]
   13b18:	bl	128c4 <fprintf@plt>
   13b1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13b20:	ldrh	r0, [r0, #56]	; 0x38
   13b24:	cmp	r0, #6
   13b28:	bne	13b34 <__assert_fail@plt+0xf7c>
   13b2c:	bl	142e0 <__assert_fail@plt+0x1728>
   13b30:	b	13b68 <__assert_fail@plt+0xfb0>
   13b34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13b38:	ldr	r0, [r0, #48]	; 0x30
   13b3c:	movw	r1, #53928	; 0xd2a8
   13b40:	movt	r1, #8
   13b44:	ldr	r1, [r1]
   13b48:	cmp	r0, r1
   13b4c:	bgt	13b60 <__assert_fail@plt+0xfa8>
   13b50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13b54:	ldr	r0, [r0, #48]	; 0x30
   13b58:	cmp	r0, #0
   13b5c:	bne	13b64 <__assert_fail@plt+0xfac>
   13b60:	bl	142e0 <__assert_fail@plt+0x1728>
   13b64:	b	13b68 <__assert_fail@plt+0xfb0>
   13b68:	ldr	r0, [fp, #-20]	; 0xffffffec
   13b6c:	ldr	r0, [r0, #32]
   13b70:	bl	138d0 <__assert_fail@plt+0xd18>
   13b74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13b78:	ldr	r0, [r0, #48]	; 0x30
   13b7c:	movw	r1, #53928	; 0xd2a8
   13b80:	movt	r1, #8
   13b84:	str	r0, [r1]
   13b88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13b8c:	ldr	r1, [r0, #160]	; 0xa0
   13b90:	ldr	r0, [r0, #164]	; 0xa4
   13b94:	str	r0, [sp, #204]	; 0xcc
   13b98:	str	r1, [sp, #200]	; 0xc8
   13b9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13ba0:	ldrh	r0, [r0, #56]	; 0x38
   13ba4:	cmp	r0, #7
   13ba8:	bne	13bc4 <__assert_fail@plt+0x100c>
   13bac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13bb0:	ldr	r0, [r0, #32]
   13bb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13bb8:	ldr	r1, [r1, #28]
   13bbc:	bl	1bf18 <__assert_fail@plt+0x9360>
   13bc0:	b	1415c <__assert_fail@plt+0x15a4>
   13bc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13bc8:	ldrh	r0, [r0, #56]	; 0x38
   13bcc:	cmp	r0, #4
   13bd0:	bne	13c04 <__assert_fail@plt+0x104c>
   13bd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13bd8:	ldr	r0, [r0, #32]
   13bdc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13be0:	ldr	r1, [r1, #28]
   13be4:	bl	1bf18 <__assert_fail@plt+0x9360>
   13be8:	movw	r0, #57480	; 0xe088
   13bec:	movt	r0, #8
   13bf0:	ldrb	r0, [r0]
   13bf4:	tst	r0, #1
   13bf8:	beq	13c00 <__assert_fail@plt+0x1048>
   13bfc:	b	1415c <__assert_fail@plt+0x15a4>
   13c00:	b	13cf4 <__assert_fail@plt+0x113c>
   13c04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13c08:	ldrh	r0, [r0, #56]	; 0x38
   13c0c:	cmp	r0, #2
   13c10:	bne	13c30 <__assert_fail@plt+0x1078>
   13c14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13c18:	bl	14340 <__assert_fail@plt+0x1788>
   13c1c:	movw	r0, #57436	; 0xe05c
   13c20:	movt	r0, #8
   13c24:	movw	r1, #1
   13c28:	str	r1, [r0, #28]
   13c2c:	b	1415c <__assert_fail@plt+0x15a4>
   13c30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13c34:	ldrh	r0, [r0, #56]	; 0x38
   13c38:	cmp	r0, #13
   13c3c:	bne	13c6c <__assert_fail@plt+0x10b4>
   13c40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13c44:	ldr	r0, [r0, #24]
   13c48:	bl	14424 <__assert_fail@plt+0x186c>
   13c4c:	tst	r0, #1
   13c50:	beq	13c68 <__assert_fail@plt+0x10b0>
   13c54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13c58:	ldr	r1, [r0, #28]
   13c5c:	movw	r0, #40	; 0x28
   13c60:	bl	1bf18 <__assert_fail@plt+0x9360>
   13c64:	b	1415c <__assert_fail@plt+0x15a4>
   13c68:	b	13cec <__assert_fail@plt+0x1134>
   13c6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13c70:	ldrh	r0, [r0, #56]	; 0x38
   13c74:	cmp	r0, #10
   13c78:	bne	13ce8 <__assert_fail@plt+0x1130>
   13c7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13c80:	ldr	r0, [r0, #48]	; 0x30
   13c84:	cmp	r0, #0
   13c88:	bne	13ca4 <__assert_fail@plt+0x10ec>
   13c8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13c90:	ldr	r0, [r0, #32]
   13c94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13c98:	ldr	r1, [r1, #28]
   13c9c:	bl	1bf18 <__assert_fail@plt+0x9360>
   13ca0:	b	1415c <__assert_fail@plt+0x15a4>
   13ca4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13ca8:	ldr	r0, [r0, #24]
   13cac:	bl	14424 <__assert_fail@plt+0x186c>
   13cb0:	tst	r0, #1
   13cb4:	beq	13ccc <__assert_fail@plt+0x1114>
   13cb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13cbc:	ldr	r1, [r0, #28]
   13cc0:	movw	r0, #40	; 0x28
   13cc4:	bl	1bf18 <__assert_fail@plt+0x9360>
   13cc8:	b	1415c <__assert_fail@plt+0x15a4>
   13ccc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13cd0:	ldr	r0, [r0, #32]
   13cd4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13cd8:	ldr	r1, [r1, #28]
   13cdc:	bl	1bf18 <__assert_fail@plt+0x9360>
   13ce0:	b	13ce4 <__assert_fail@plt+0x112c>
   13ce4:	b	13ce8 <__assert_fail@plt+0x1130>
   13ce8:	b	13cec <__assert_fail@plt+0x1134>
   13cec:	b	13cf0 <__assert_fail@plt+0x1138>
   13cf0:	b	13cf4 <__assert_fail@plt+0x113c>
   13cf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13cf8:	ldrh	r0, [r0, #56]	; 0x38
   13cfc:	cmp	r0, #11
   13d00:	beq	13d14 <__assert_fail@plt+0x115c>
   13d04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13d08:	ldrh	r0, [r0, #56]	; 0x38
   13d0c:	cmp	r0, #10
   13d10:	bne	13da8 <__assert_fail@plt+0x11f0>
   13d14:	movw	r0, #57436	; 0xe05c
   13d18:	movt	r0, #8
   13d1c:	ldrb	r0, [r0, #4]
   13d20:	tst	r0, #1
   13d24:	bne	13d2c <__assert_fail@plt+0x1174>
   13d28:	b	13d4c <__assert_fail@plt+0x1194>
   13d2c:	movw	r0, #23090	; 0x5a32
   13d30:	movt	r0, #7
   13d34:	movw	r1, #22499	; 0x57e3
   13d38:	movt	r1, #7
   13d3c:	movw	r2, #380	; 0x17c
   13d40:	movw	r3, #23107	; 0x5a43
   13d44:	movt	r3, #7
   13d48:	bl	12bb8 <__assert_fail@plt>
   13d4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13d50:	ldrh	r0, [r0, #56]	; 0x38
   13d54:	cmp	r0, #11
   13d58:	beq	13d70 <__assert_fail@plt+0x11b8>
   13d5c:	movw	r0, #57436	; 0xe05c
   13d60:	movt	r0, #8
   13d64:	ldr	r0, [r0, #8]
   13d68:	cmp	r0, #0
   13d6c:	bne	13d74 <__assert_fail@plt+0x11bc>
   13d70:	b	13d94 <__assert_fail@plt+0x11dc>
   13d74:	movw	r0, #23147	; 0x5a6b
   13d78:	movt	r0, #7
   13d7c:	movw	r1, #22499	; 0x57e3
   13d80:	movt	r1, #7
   13d84:	movw	r2, #381	; 0x17d
   13d88:	movw	r3, #23107	; 0x5a43
   13d8c:	movt	r3, #7
   13d90:	bl	12bb8 <__assert_fail@plt>
   13d94:	movw	r0, #57436	; 0xe05c
   13d98:	movt	r0, #8
   13d9c:	ldr	r0, [r0, #8]
   13da0:	str	r0, [sp, #100]	; 0x64
   13da4:	b	13e50 <__assert_fail@plt+0x1298>
   13da8:	movw	r0, #1
   13dac:	movw	r1, #57436	; 0xe05c
   13db0:	movt	r1, #8
   13db4:	strb	r0, [r1, #4]
   13db8:	strb	r0, [r1, #5]
   13dbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13dc0:	add	r0, r0, #64	; 0x40
   13dc4:	add	r2, sp, #104	; 0x68
   13dc8:	str	r0, [sp, #60]	; 0x3c
   13dcc:	mov	r0, r2
   13dd0:	ldr	r2, [sp, #60]	; 0x3c
   13dd4:	str	r1, [sp, #56]	; 0x38
   13dd8:	mov	r1, r2
   13ddc:	movw	r2, #104	; 0x68
   13de0:	bl	125c4 <memcpy@plt>
   13de4:	ldr	r0, [sp, #120]	; 0x78
   13de8:	str	r0, [sp, #100]	; 0x64
   13dec:	ldr	r1, [sp, #56]	; 0x38
   13df0:	str	r0, [r1, #8]
   13df4:	ldr	r0, [sp, #100]	; 0x64
   13df8:	movw	r2, #0
   13dfc:	cmp	r2, r0
   13e00:	bne	13e4c <__assert_fail@plt+0x1294>
   13e04:	movw	r0, #23192	; 0x5a98
   13e08:	movt	r0, #7
   13e0c:	bl	12864 <gettext@plt>
   13e10:	movw	r1, #57480	; 0xe088
   13e14:	movt	r1, #8
   13e18:	ldr	r1, [r1, #72]	; 0x48
   13e1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13e20:	ldr	r2, [r2, #28]
   13e24:	movw	r3, #0
   13e28:	str	r0, [sp, #52]	; 0x34
   13e2c:	mov	r0, r3
   13e30:	bl	487d0 <__assert_fail@plt+0x35c18>
   13e34:	movw	r1, #0
   13e38:	str	r0, [sp, #48]	; 0x30
   13e3c:	mov	r0, r1
   13e40:	ldr	r2, [sp, #52]	; 0x34
   13e44:	ldr	r3, [sp, #48]	; 0x30
   13e48:	bl	12780 <error@plt>
   13e4c:	b	13e50 <__assert_fail@plt+0x1298>
   13e50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13e54:	ldr	r0, [r0, #48]	; 0x30
   13e58:	movw	r1, #57436	; 0xe05c
   13e5c:	movt	r1, #8
   13e60:	str	r0, [r1]
   13e64:	ldr	r0, [sp, #100]	; 0x64
   13e68:	cmp	r0, #0
   13e6c:	beq	13ea8 <__assert_fail@plt+0x12f0>
   13e70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13e74:	ldr	r1, [r0, #28]
   13e78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13e7c:	add	r2, r0, #168	; 0xa8
   13e80:	add	r0, sp, #100	; 0x64
   13e84:	add	r3, sp, #104	; 0x68
   13e88:	movw	ip, #0
   13e8c:	and	ip, ip, #1
   13e90:	str	ip, [sp]
   13e94:	bl	1cb80 <__assert_fail@plt+0x9fc8>
   13e98:	tst	r0, #1
   13e9c:	bne	13ea4 <__assert_fail@plt+0x12ec>
   13ea0:	b	1415c <__assert_fail@plt+0x15a4>
   13ea4:	b	13ea8 <__assert_fail@plt+0x12f0>
   13ea8:	movw	r0, #0
   13eac:	str	r0, [sp, #96]	; 0x60
   13eb0:	ldr	r0, [sp, #100]	; 0x64
   13eb4:	and	r0, r0, #61440	; 0xf000
   13eb8:	cmp	r0, #16384	; 0x4000
   13ebc:	movw	r0, #1
   13ec0:	str	r0, [sp, #44]	; 0x2c
   13ec4:	beq	13f1c <__assert_fail@plt+0x1364>
   13ec8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13ecc:	ldrh	r0, [r0, #56]	; 0x38
   13ed0:	movw	r1, #1
   13ed4:	cmp	r1, r0
   13ed8:	movw	r0, #1
   13edc:	str	r0, [sp, #44]	; 0x2c
   13ee0:	beq	13f1c <__assert_fail@plt+0x1364>
   13ee4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13ee8:	ldrh	r0, [r0, #56]	; 0x38
   13eec:	movw	r1, #6
   13ef0:	cmp	r1, r0
   13ef4:	movw	r0, #1
   13ef8:	str	r0, [sp, #44]	; 0x2c
   13efc:	beq	13f1c <__assert_fail@plt+0x1364>
   13f00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13f04:	ldrh	r0, [r0, #56]	; 0x38
   13f08:	movw	r1, #2
   13f0c:	cmp	r1, r0
   13f10:	movw	r0, #0
   13f14:	moveq	r0, #1
   13f18:	str	r0, [sp, #44]	; 0x2c
   13f1c:	ldr	r0, [sp, #44]	; 0x2c
   13f20:	and	r0, r0, #1
   13f24:	str	r0, [sp, #92]	; 0x5c
   13f28:	ldr	r0, [sp, #92]	; 0x5c
   13f2c:	cmp	r0, #0
   13f30:	beq	13f58 <__assert_fail@plt+0x13a0>
   13f34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13f38:	ldrh	r0, [r0, #56]	; 0x38
   13f3c:	cmp	r0, #11
   13f40:	bne	13f58 <__assert_fail@plt+0x13a0>
   13f44:	ldr	r0, [fp, #-20]	; 0xffffffec
   13f48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13f4c:	movw	r2, #1
   13f50:	bl	51c70 <__assert_fail@plt+0x3f0b8>
   13f54:	b	1415c <__assert_fail@plt+0x15a4>
   13f58:	movw	r0, #57480	; 0xe088
   13f5c:	movt	r0, #8
   13f60:	ldr	r0, [r0, #4]
   13f64:	cmp	r0, #0
   13f68:	blt	13fc4 <__assert_fail@plt+0x140c>
   13f6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13f70:	ldr	r0, [r0, #48]	; 0x30
   13f74:	movw	r1, #57480	; 0xe088
   13f78:	movt	r1, #8
   13f7c:	ldr	r1, [r1, #4]
   13f80:	cmp	r0, r1
   13f84:	blt	13fc0 <__assert_fail@plt+0x1408>
   13f88:	ldr	r0, [fp, #-20]	; 0xffffffec
   13f8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13f90:	movw	r2, #4
   13f94:	bl	51c70 <__assert_fail@plt+0x3f0b8>
   13f98:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13f9c:	ldr	r1, [r1, #48]	; 0x30
   13fa0:	movw	r2, #57480	; 0xe088
   13fa4:	movt	r2, #8
   13fa8:	ldr	r2, [r2, #4]
   13fac:	cmp	r1, r2
   13fb0:	ble	13fbc <__assert_fail@plt+0x1404>
   13fb4:	movw	r0, #1
   13fb8:	str	r0, [sp, #96]	; 0x60
   13fbc:	b	13fc0 <__assert_fail@plt+0x1408>
   13fc0:	b	13fc4 <__assert_fail@plt+0x140c>
   13fc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13fc8:	ldrh	r0, [r0, #56]	; 0x38
   13fcc:	cmp	r0, #1
   13fd0:	bne	13ff4 <__assert_fail@plt+0x143c>
   13fd4:	movw	r0, #57480	; 0xe088
   13fd8:	movt	r0, #8
   13fdc:	ldrb	r0, [r0]
   13fe0:	tst	r0, #1
   13fe4:	bne	13ff4 <__assert_fail@plt+0x143c>
   13fe8:	movw	r0, #1
   13fec:	str	r0, [sp, #96]	; 0x60
   13ff0:	b	14050 <__assert_fail@plt+0x1498>
   13ff4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13ff8:	ldrh	r0, [r0, #56]	; 0x38
   13ffc:	cmp	r0, #6
   14000:	bne	14024 <__assert_fail@plt+0x146c>
   14004:	movw	r0, #57480	; 0xe088
   14008:	movt	r0, #8
   1400c:	ldrb	r0, [r0]
   14010:	tst	r0, #1
   14014:	beq	14024 <__assert_fail@plt+0x146c>
   14018:	movw	r0, #1
   1401c:	str	r0, [sp, #96]	; 0x60
   14020:	b	1404c <__assert_fail@plt+0x1494>
   14024:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14028:	ldr	r0, [r0, #48]	; 0x30
   1402c:	movw	r1, #57480	; 0xe088
   14030:	movt	r1, #8
   14034:	ldr	r1, [r1, #8]
   14038:	cmp	r0, r1
   1403c:	bge	14048 <__assert_fail@plt+0x1490>
   14040:	movw	r0, #1
   14044:	str	r0, [sp, #96]	; 0x60
   14048:	b	1404c <__assert_fail@plt+0x1494>
   1404c:	b	14050 <__assert_fail@plt+0x1498>
   14050:	movw	r0, #57480	; 0xe088
   14054:	movt	r0, #8
   14058:	ldr	r0, [r0, #44]	; 0x2c
   1405c:	and	r0, r0, #4
   14060:	cmp	r0, #0
   14064:	beq	14120 <__assert_fail@plt+0x1568>
   14068:	movw	r0, #55080	; 0xd728
   1406c:	movt	r0, #8
   14070:	ldr	r0, [r0]
   14074:	movw	r1, #57480	; 0xe088
   14078:	movt	r1, #8
   1407c:	ldr	r1, [r1, #72]	; 0x48
   14080:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14084:	ldr	r2, [r2, #28]
   14088:	movw	r3, #0
   1408c:	str	r0, [sp, #40]	; 0x28
   14090:	mov	r0, r3
   14094:	bl	487d0 <__assert_fail@plt+0x35c18>
   14098:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1409c:	ldrh	r1, [r1, #56]	; 0x38
   140a0:	str	r0, [sp, #36]	; 0x24
   140a4:	mov	r0, r1
   140a8:	bl	14164 <__assert_fail@plt+0x15ac>
   140ac:	ldr	r1, [sp, #92]	; 0x5c
   140b0:	ldr	r2, [sp, #96]	; 0x60
   140b4:	movw	r3, #57436	; 0xe05c
   140b8:	movt	r3, #8
   140bc:	ldrb	ip, [r3, #4]
   140c0:	and	ip, ip, #1
   140c4:	ldrb	r3, [r3, #5]
   140c8:	and	r3, r3, #1
   140cc:	ldr	lr, [sp, #40]	; 0x28
   140d0:	str	r0, [sp, #32]
   140d4:	mov	r0, lr
   140d8:	movw	r4, #23235	; 0x5ac3
   140dc:	movt	r4, #7
   140e0:	str	r1, [sp, #28]
   140e4:	mov	r1, r4
   140e8:	ldr	r4, [sp, #36]	; 0x24
   140ec:	str	r2, [sp, #24]
   140f0:	mov	r2, r4
   140f4:	ldr	r5, [sp, #32]
   140f8:	str	r3, [sp, #20]
   140fc:	mov	r3, r5
   14100:	ldr	r6, [sp, #28]
   14104:	str	r6, [sp]
   14108:	ldr	r7, [sp, #24]
   1410c:	str	r7, [sp, #4]
   14110:	str	ip, [sp, #8]
   14114:	ldr	ip, [sp, #20]
   14118:	str	ip, [sp, #12]
   1411c:	bl	128c4 <fprintf@plt>
   14120:	ldr	r0, [sp, #96]	; 0x60
   14124:	cmp	r0, #0
   14128:	bne	1413c <__assert_fail@plt+0x1584>
   1412c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14130:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14134:	add	r2, sp, #104	; 0x68
   14138:	bl	144a0 <__assert_fail@plt+0x18e8>
   1413c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14140:	ldrh	r0, [r0, #56]	; 0x38
   14144:	cmp	r0, #6
   14148:	bne	1415c <__assert_fail@plt+0x15a4>
   1414c:	movw	r0, #57436	; 0xe05c
   14150:	movt	r0, #8
   14154:	movw	r1, #0
   14158:	strb	r1, [r0, #24]
   1415c:	sub	sp, fp, #16
   14160:	pop	{r4, r5, r6, r7, fp, pc}
   14164:	push	{fp, lr}
   14168:	mov	fp, sp
   1416c:	sub	sp, sp, #16
   14170:	str	r0, [sp, #8]
   14174:	ldr	r0, [sp, #8]
   14178:	sub	r0, r0, #1
   1417c:	cmp	r0, #13
   14180:	str	r0, [sp, #4]
   14184:	bhi	142b0 <__assert_fail@plt+0x16f8>
   14188:	add	r0, pc, #8
   1418c:	ldr	r1, [sp, #4]
   14190:	ldr	r0, [r0, r1, lsl #2]
   14194:	mov	pc, r0
   14198:	ldrdeq	r4, [r1], -r0
   1419c:	andeq	r4, r1, r0, ror #3
   141a0:	strdeq	r4, [r1], -r0
   141a4:	andeq	r4, r1, r0, lsl #4
   141a8:	andeq	r4, r1, r0, lsl r2
   141ac:	andeq	r4, r1, r0, lsr #4
   141b0:	andeq	r4, r1, r0, lsr r2
   141b4:	andeq	r4, r1, r0, asr #4
   141b8:	andeq	r4, r1, r0, asr r2
   141bc:	andeq	r4, r1, r0, ror #4
   141c0:	andeq	r4, r1, r0, ror r2
   141c4:	andeq	r4, r1, r0, lsl #5
   141c8:	muleq	r1, r0, r2
   141cc:	andeq	r4, r1, r0, lsr #5
   141d0:	movw	r0, #23327	; 0x5b1f
   141d4:	movt	r0, #7
   141d8:	str	r0, [fp, #-4]
   141dc:	b	142d4 <__assert_fail@plt+0x171c>
   141e0:	movw	r0, #23333	; 0x5b25
   141e4:	movt	r0, #7
   141e8:	str	r0, [fp, #-4]
   141ec:	b	142d4 <__assert_fail@plt+0x171c>
   141f0:	movw	r0, #23340	; 0x5b2c
   141f4:	movt	r0, #7
   141f8:	str	r0, [fp, #-4]
   141fc:	b	142d4 <__assert_fail@plt+0x171c>
   14200:	movw	r0, #23352	; 0x5b38
   14204:	movt	r0, #7
   14208:	str	r0, [fp, #-4]
   1420c:	b	142d4 <__assert_fail@plt+0x171c>
   14210:	movw	r0, #23360	; 0x5b40
   14214:	movt	r0, #7
   14218:	str	r0, [fp, #-4]
   1421c:	b	142d4 <__assert_fail@plt+0x171c>
   14220:	movw	r0, #23368	; 0x5b48
   14224:	movt	r0, #7
   14228:	str	r0, [fp, #-4]
   1422c:	b	142d4 <__assert_fail@plt+0x171c>
   14230:	movw	r0, #23375	; 0x5b4f
   14234:	movt	r0, #7
   14238:	str	r0, [fp, #-4]
   1423c:	b	142d4 <__assert_fail@plt+0x171c>
   14240:	movw	r0, #23383	; 0x5b57
   14244:	movt	r0, #7
   14248:	str	r0, [fp, #-4]
   1424c:	b	142d4 <__assert_fail@plt+0x171c>
   14250:	movw	r0, #23389	; 0x5b5d
   14254:	movt	r0, #7
   14258:	str	r0, [fp, #-4]
   1425c:	b	142d4 <__assert_fail@plt+0x171c>
   14260:	movw	r0, #23398	; 0x5b66
   14264:	movt	r0, #7
   14268:	str	r0, [fp, #-4]
   1426c:	b	142d4 <__assert_fail@plt+0x171c>
   14270:	movw	r0, #23405	; 0x5b6d
   14274:	movt	r0, #7
   14278:	str	r0, [fp, #-4]
   1427c:	b	142d4 <__assert_fail@plt+0x171c>
   14280:	movw	r0, #23414	; 0x5b76
   14284:	movt	r0, #7
   14288:	str	r0, [fp, #-4]
   1428c:	b	142d4 <__assert_fail@plt+0x171c>
   14290:	movw	r0, #23421	; 0x5b7d
   14294:	movt	r0, #7
   14298:	str	r0, [fp, #-4]
   1429c:	b	142d4 <__assert_fail@plt+0x171c>
   142a0:	movw	r0, #23432	; 0x5b88
   142a4:	movt	r0, #7
   142a8:	str	r0, [fp, #-4]
   142ac:	b	142d4 <__assert_fail@plt+0x171c>
   142b0:	ldr	r2, [sp, #8]
   142b4:	movw	r0, #55097	; 0xd739
   142b8:	movt	r0, #8
   142bc:	movw	r1, #23438	; 0x5b8e
   142c0:	movt	r1, #7
   142c4:	bl	12a5c <sprintf@plt>
   142c8:	movw	r1, #55097	; 0xd739
   142cc:	movt	r1, #8
   142d0:	str	r1, [fp, #-4]
   142d4:	ldr	r0, [fp, #-4]
   142d8:	mov	sp, fp
   142dc:	pop	{fp, pc}
   142e0:	push	{fp, lr}
   142e4:	mov	fp, sp
   142e8:	movw	r0, #53920	; 0xd2a0
   142ec:	movt	r0, #8
   142f0:	ldr	r0, [r0]
   142f4:	and	r0, r0, #512	; 0x200
   142f8:	cmp	r0, #0
   142fc:	beq	14338 <__assert_fail@plt+0x1780>
   14300:	movw	r0, #53924	; 0xd2a4
   14304:	movt	r0, #8
   14308:	ldr	r0, [r0]
   1430c:	cmp	r0, #0
   14310:	blt	14334 <__assert_fail@plt+0x177c>
   14314:	movw	r0, #53924	; 0xd2a4
   14318:	movt	r0, #8
   1431c:	ldr	r0, [r0]
   14320:	bl	12b70 <close@plt>
   14324:	movw	r1, #53924	; 0xd2a4
   14328:	movt	r1, #8
   1432c:	mvn	r2, #0
   14330:	str	r2, [r1]
   14334:	b	1433c <__assert_fail@plt+0x1784>
   14338:	b	1433c <__assert_fail@plt+0x1784>
   1433c:	pop	{fp, pc}
   14340:	push	{fp, lr}
   14344:	mov	fp, sp
   14348:	sub	sp, sp, #32
   1434c:	str	r0, [fp, #-4]
   14350:	ldr	r0, [fp, #-4]
   14354:	ldr	r0, [r0, #80]	; 0x50
   14358:	and	r0, r0, #61440	; 0xf000
   1435c:	cmp	r0, #40960	; 0xa000
   14360:	bne	143a4 <__assert_fail@plt+0x17ec>
   14364:	movw	r0, #23443	; 0x5b93
   14368:	movt	r0, #7
   1436c:	bl	12864 <gettext@plt>
   14370:	ldr	r1, [fp, #-4]
   14374:	ldr	r1, [r1, #28]
   14378:	movw	r2, #0
   1437c:	str	r0, [fp, #-8]
   14380:	mov	r0, r2
   14384:	bl	1d994 <__assert_fail@plt+0xaddc>
   14388:	movw	r1, #0
   1438c:	str	r0, [fp, #-12]
   14390:	mov	r0, r1
   14394:	ldr	r2, [fp, #-8]
   14398:	ldr	r3, [fp, #-12]
   1439c:	bl	12780 <error@plt>
   143a0:	b	1441c <__assert_fail@plt+0x1864>
   143a4:	movw	r0, #23564	; 0x5c0c
   143a8:	movt	r0, #7
   143ac:	bl	12864 <gettext@plt>
   143b0:	ldr	r1, [fp, #-4]
   143b4:	ldr	r1, [r1, #28]
   143b8:	movw	r2, #0
   143bc:	str	r0, [sp, #16]
   143c0:	mov	r0, r2
   143c4:	bl	1d994 <__assert_fail@plt+0xaddc>
   143c8:	ldr	r1, [fp, #-4]
   143cc:	ldr	r1, [r1]
   143d0:	ldr	r1, [r1, #28]
   143d4:	ldr	r2, [fp, #-4]
   143d8:	ldr	r2, [r2]
   143dc:	ldr	r2, [r2, #40]	; 0x28
   143e0:	movw	r3, #57480	; 0xe088
   143e4:	movt	r3, #8
   143e8:	ldr	r3, [r3, #72]	; 0x48
   143ec:	movw	ip, #1
   143f0:	str	r0, [sp, #12]
   143f4:	mov	r0, ip
   143f8:	bl	1455c <__assert_fail@plt+0x19a4>
   143fc:	movw	r1, #0
   14400:	str	r0, [sp, #8]
   14404:	mov	r0, r1
   14408:	ldr	r2, [sp, #16]
   1440c:	ldr	r3, [sp, #12]
   14410:	ldr	ip, [sp, #8]
   14414:	str	ip, [sp]
   14418:	bl	12780 <error@plt>
   1441c:	mov	sp, fp
   14420:	pop	{fp, pc}
   14424:	push	{fp, lr}
   14428:	mov	fp, sp
   1442c:	sub	sp, sp, #128	; 0x80
   14430:	str	r0, [fp, #-4]
   14434:	movw	r0, #57480	; 0xe088
   14438:	movt	r0, #8
   1443c:	ldr	r0, [r0, #52]	; 0x34
   14440:	ldr	r1, [fp, #-4]
   14444:	str	r0, [sp, #8]
   14448:	mov	r0, r1
   1444c:	add	r1, sp, #16
   14450:	ldr	r2, [sp, #8]
   14454:	blx	r2
   14458:	str	r0, [sp, #12]
   1445c:	ldr	r0, [sp, #12]
   14460:	movw	r1, #0
   14464:	cmp	r1, r0
   14468:	movw	r0, #0
   1446c:	str	r0, [sp, #4]
   14470:	beq	14490 <__assert_fail@plt+0x18d8>
   14474:	bl	128d0 <__errno_location@plt>
   14478:	ldr	r0, [r0]
   1447c:	movw	r1, #40	; 0x28
   14480:	cmp	r1, r0
   14484:	movw	r0, #0
   14488:	moveq	r0, #1
   1448c:	str	r0, [sp, #4]
   14490:	ldr	r0, [sp, #4]
   14494:	and	r0, r0, #1
   14498:	mov	sp, fp
   1449c:	pop	{fp, pc}
   144a0:	push	{fp, lr}
   144a4:	mov	fp, sp
   144a8:	sub	sp, sp, #24
   144ac:	str	r0, [fp, #-4]
   144b0:	str	r1, [fp, #-8]
   144b4:	str	r2, [sp, #12]
   144b8:	ldr	r0, [fp, #-8]
   144bc:	ldrh	r0, [r0, #56]	; 0x38
   144c0:	cmp	r0, #10
   144c4:	movw	r0, #0
   144c8:	str	r0, [sp, #4]
   144cc:	beq	144e8 <__assert_fail@plt+0x1930>
   144d0:	ldr	r0, [fp, #-8]
   144d4:	ldrh	r0, [r0, #56]	; 0x38
   144d8:	cmp	r0, #11
   144dc:	movw	r0, #0
   144e0:	movne	r0, #1
   144e4:	str	r0, [sp, #4]
   144e8:	ldr	r0, [sp, #4]
   144ec:	and	r0, r0, #1
   144f0:	movw	r1, #57436	; 0xe05c
   144f4:	movt	r1, #8
   144f8:	strb	r0, [r1, #4]
   144fc:	ldr	r0, [fp, #-8]
   14500:	ldr	r0, [r0, #24]
   14504:	str	r0, [r1, #12]
   14508:	ldr	r0, [fp, #-4]
   1450c:	ldr	r0, [r0, #32]
   14510:	str	r0, [r1, #16]
   14514:	bl	18320 <__assert_fail@plt+0x5768>
   14518:	str	r0, [sp, #8]
   1451c:	ldr	r0, [fp, #-8]
   14520:	ldr	r0, [r0, #28]
   14524:	ldr	r1, [sp, #12]
   14528:	ldr	r2, [sp, #8]
   1452c:	bl	1d708 <__assert_fail@plt+0xab50>
   14530:	movw	r1, #57436	; 0xe05c
   14534:	movt	r1, #8
   14538:	ldrb	r1, [r1, #24]
   1453c:	tst	r1, #1
   14540:	beq	14554 <__assert_fail@plt+0x199c>
   14544:	ldr	r0, [fp, #-4]
   14548:	ldr	r1, [fp, #-8]
   1454c:	movw	r2, #4
   14550:	bl	51c70 <__assert_fail@plt+0x3f0b8>
   14554:	mov	sp, fp
   14558:	pop	{fp, pc}
   1455c:	push	{fp, lr}
   14560:	mov	fp, sp
   14564:	sub	sp, sp, #32
   14568:	str	r0, [fp, #-8]
   1456c:	str	r1, [fp, #-12]
   14570:	str	r2, [sp, #16]
   14574:	str	r3, [sp, #12]
   14578:	ldr	r0, [sp, #16]
   1457c:	movw	r1, #0
   14580:	cmp	r1, r0
   14584:	bne	145a4 <__assert_fail@plt+0x19ec>
   14588:	ldr	r0, [fp, #-8]
   1458c:	ldr	r1, [sp, #12]
   14590:	movw	r2, #29909	; 0x74d5
   14594:	movt	r2, #7
   14598:	bl	487d0 <__assert_fail@plt+0x35c18>
   1459c:	str	r0, [fp, #-4]
   145a0:	b	145fc <__assert_fail@plt+0x1a44>
   145a4:	ldr	r0, [fp, #-12]
   145a8:	ldr	r1, [sp, #16]
   145ac:	add	r0, r0, r1
   145b0:	ldrb	r0, [r0]
   145b4:	strb	r0, [sp, #11]
   145b8:	ldr	r0, [fp, #-12]
   145bc:	ldr	r1, [sp, #16]
   145c0:	add	r0, r0, r1
   145c4:	movw	r1, #0
   145c8:	strb	r1, [r0]
   145cc:	ldr	r0, [fp, #-8]
   145d0:	ldr	r1, [sp, #12]
   145d4:	ldr	r2, [fp, #-12]
   145d8:	bl	487d0 <__assert_fail@plt+0x35c18>
   145dc:	str	r0, [sp, #4]
   145e0:	ldrb	r0, [sp, #11]
   145e4:	ldr	r1, [fp, #-12]
   145e8:	ldr	r2, [sp, #16]
   145ec:	add	r1, r1, r2
   145f0:	strb	r0, [r1]
   145f4:	ldr	r0, [sp, #4]
   145f8:	str	r0, [fp, #-4]
   145fc:	ldr	r0, [fp, #-4]
   14600:	mov	sp, fp
   14604:	pop	{fp, pc}
   14608:	push	{fp, lr}
   1460c:	mov	fp, sp
   14610:	sub	sp, sp, #24
   14614:	str	r0, [fp, #-4]
   14618:	str	r1, [fp, #-8]
   1461c:	str	r2, [sp, #12]
   14620:	ldr	r1, [fp, #-8]
   14624:	add	r0, sp, #4
   14628:	bl	49880 <__assert_fail@plt+0x36cc8>
   1462c:	ldr	r2, [sp, #12]
   14630:	ldr	r0, [sp, #4]
   14634:	ldr	r1, [sp, #8]
   14638:	mov	r3, #60	; 0x3c
   1463c:	bl	1464c <__assert_fail@plt+0x1a94>
   14640:	and	r0, r0, #1
   14644:	mov	sp, fp
   14648:	pop	{fp, pc}
   1464c:	push	{fp, lr}
   14650:	mov	fp, sp
   14654:	sub	sp, sp, #56	; 0x38
   14658:	str	r0, [fp, #-12]
   1465c:	str	r1, [fp, #-8]
   14660:	str	r2, [fp, #-16]
   14664:	str	r3, [fp, #-20]	; 0xffffffec
   14668:	ldr	r0, [fp, #-16]
   1466c:	ldr	r0, [r0, #44]	; 0x2c
   14670:	cmp	r0, #0
   14674:	str	r0, [sp, #20]
   14678:	beq	146a0 <__assert_fail@plt+0x1ae8>
   1467c:	b	14680 <__assert_fail@plt+0x1ac8>
   14680:	ldr	r0, [sp, #20]
   14684:	cmp	r0, #1
   14688:	beq	146e4 <__assert_fail@plt+0x1b2c>
   1468c:	b	14690 <__assert_fail@plt+0x1ad8>
   14690:	ldr	r0, [sp, #20]
   14694:	cmp	r0, #2
   14698:	beq	14728 <__assert_fail@plt+0x1b70>
   1469c:	b	147a4 <__assert_fail@plt+0x1bec>
   146a0:	ldr	r0, [fp, #-16]
   146a4:	ldr	r1, [fp, #-12]
   146a8:	ldr	r2, [fp, #-8]
   146ac:	ldr	r3, [r0, #48]	; 0x30
   146b0:	ldr	r0, [r0, #52]	; 0x34
   146b4:	str	r0, [sp, #16]
   146b8:	mov	r0, r1
   146bc:	mov	r1, r2
   146c0:	mov	r2, r3
   146c4:	ldr	r3, [sp, #16]
   146c8:	bl	148f8 <__assert_fail@plt+0x1d40>
   146cc:	cmp	r0, #0
   146d0:	movw	r0, #0
   146d4:	movgt	r0, #1
   146d8:	and	r0, r0, #1
   146dc:	strb	r0, [fp, #-1]
   146e0:	b	147c4 <__assert_fail@plt+0x1c0c>
   146e4:	ldr	r0, [fp, #-16]
   146e8:	ldr	r1, [fp, #-12]
   146ec:	ldr	r2, [fp, #-8]
   146f0:	ldr	r3, [r0, #48]	; 0x30
   146f4:	ldr	r0, [r0, #52]	; 0x34
   146f8:	str	r0, [sp, #12]
   146fc:	mov	r0, r1
   14700:	mov	r1, r2
   14704:	mov	r2, r3
   14708:	ldr	r3, [sp, #12]
   1470c:	bl	148f8 <__assert_fail@plt+0x1d40>
   14710:	cmp	r0, #0
   14714:	movw	r0, #0
   14718:	movlt	r0, #1
   1471c:	and	r0, r0, #1
   14720:	strb	r0, [fp, #-1]
   14724:	b	147c4 <__assert_fail@plt+0x1c0c>
   14728:	ldr	r0, [fp, #-16]
   1472c:	ldr	r1, [fp, #-12]
   14730:	ldr	r2, [fp, #-8]
   14734:	ldr	r3, [r0, #48]	; 0x30
   14738:	ldr	r0, [r0, #52]	; 0x34
   1473c:	str	r0, [sp, #8]
   14740:	mov	r0, r1
   14744:	mov	r1, r2
   14748:	mov	r2, r3
   1474c:	ldr	r3, [sp, #8]
   14750:	bl	17550 <__assert_fail@plt+0x4998>
   14754:	vstr	d0, [sp, #24]
   14758:	vldr	d16, [sp, #24]
   1475c:	vcmpe.f64	d16, #0.0
   14760:	vmrs	APSR_nzcv, fpscr
   14764:	movw	r0, #0
   14768:	str	r0, [sp, #4]
   1476c:	ble	14794 <__assert_fail@plt+0x1bdc>
   14770:	vldr	d16, [sp, #24]
   14774:	ldr	r0, [fp, #-20]	; 0xffffffec
   14778:	vmov	s0, r0
   1477c:	vcvt.f64.s32	d17, s0
   14780:	vcmpe.f64	d16, d17
   14784:	vmrs	APSR_nzcv, fpscr
   14788:	movw	r0, #0
   1478c:	movls	r0, #1
   14790:	str	r0, [sp, #4]
   14794:	ldr	r0, [sp, #4]
   14798:	and	r0, r0, #1
   1479c:	strb	r0, [fp, #-1]
   147a0:	b	147c4 <__assert_fail@plt+0x1c0c>
   147a4:	movw	r0, #27249	; 0x6a71
   147a8:	movt	r0, #7
   147ac:	movw	r1, #23677	; 0x5c7d
   147b0:	movt	r1, #7
   147b4:	movw	r2, #138	; 0x8a
   147b8:	movw	r3, #24656	; 0x6050
   147bc:	movt	r3, #7
   147c0:	bl	12bb8 <__assert_fail@plt>
   147c4:	ldrb	r0, [fp, #-1]
   147c8:	and	r0, r0, #1
   147cc:	mov	sp, fp
   147d0:	pop	{fp, pc}
   147d4:	push	{fp, lr}
   147d8:	mov	fp, sp
   147dc:	sub	sp, sp, #16
   147e0:	str	r0, [sp, #8]
   147e4:	str	r1, [sp, #4]
   147e8:	str	r2, [sp]
   147ec:	ldr	r0, [sp]
   147f0:	ldr	r0, [r0, #156]	; 0x9c
   147f4:	movw	r1, #0
   147f8:	cmp	r0, r1
   147fc:	beq	1481c <__assert_fail@plt+0x1c64>
   14800:	ldr	r0, [sp, #8]
   14804:	ldr	r1, [sp, #4]
   14808:	ldr	r2, [sp]
   1480c:	ldr	r2, [r2, #156]	; 0x9c
   14810:	bl	1d708 <__assert_fail@plt+0xab50>
   14814:	tst	r0, #1
   14818:	beq	1483c <__assert_fail@plt+0x1c84>
   1481c:	ldr	r0, [sp, #8]
   14820:	ldr	r1, [sp, #4]
   14824:	ldr	r2, [sp]
   14828:	ldr	r2, [r2, #160]	; 0xa0
   1482c:	bl	1d708 <__assert_fail@plt+0xab50>
   14830:	and	r0, r0, #1
   14834:	strb	r0, [fp, #-1]
   14838:	b	14848 <__assert_fail@plt+0x1c90>
   1483c:	movw	r0, #0
   14840:	and	r0, r0, #1
   14844:	strb	r0, [fp, #-1]
   14848:	ldrb	r0, [fp, #-1]
   1484c:	and	r0, r0, #1
   14850:	mov	sp, fp
   14854:	pop	{fp, pc}
   14858:	push	{fp, lr}
   1485c:	mov	fp, sp
   14860:	sub	sp, sp, #24
   14864:	str	r0, [fp, #-4]
   14868:	str	r1, [fp, #-8]
   1486c:	str	r2, [sp, #12]
   14870:	ldr	r0, [sp, #12]
   14874:	ldr	r0, [r0, #44]	; 0x2c
   14878:	movw	r1, #0
   1487c:	cmp	r1, r0
   14880:	bne	14888 <__assert_fail@plt+0x1cd0>
   14884:	b	148a8 <__assert_fail@plt+0x1cf0>
   14888:	movw	r0, #23638	; 0x5c56
   1488c:	movt	r0, #7
   14890:	movw	r1, #23677	; 0x5c7d
   14894:	movt	r1, #7
   14898:	movw	r2, #166	; 0xa6
   1489c:	movw	r3, #23684	; 0x5c84
   148a0:	movt	r3, #7
   148a4:	bl	12bb8 <__assert_fail@plt>
   148a8:	ldr	r1, [fp, #-8]
   148ac:	add	r0, sp, #4
   148b0:	bl	49880 <__assert_fail@plt+0x36cc8>
   148b4:	ldr	r0, [sp, #12]
   148b8:	ldr	r1, [sp, #4]
   148bc:	ldr	r2, [sp, #8]
   148c0:	ldr	r3, [r0, #48]	; 0x30
   148c4:	ldr	r0, [r0, #52]	; 0x34
   148c8:	str	r0, [sp]
   148cc:	mov	r0, r1
   148d0:	mov	r1, r2
   148d4:	mov	r2, r3
   148d8:	ldr	r3, [sp]
   148dc:	bl	148f8 <__assert_fail@plt+0x1d40>
   148e0:	cmp	r0, #0
   148e4:	movw	r0, #0
   148e8:	movgt	r0, #1
   148ec:	and	r0, r0, #1
   148f0:	mov	sp, fp
   148f4:	pop	{fp, pc}
   148f8:	push	{fp, lr}
   148fc:	mov	fp, sp
   14900:	sub	sp, sp, #32
   14904:	str	r0, [fp, #-12]
   14908:	str	r1, [fp, #-8]
   1490c:	str	r3, [sp, #16]
   14910:	str	r2, [sp, #12]
   14914:	ldr	r0, [fp, #-12]
   14918:	ldr	r1, [sp, #12]
   1491c:	cmp	r0, r1
   14920:	bne	14940 <__assert_fail@plt+0x1d88>
   14924:	ldr	r0, [fp, #-8]
   14928:	ldr	r1, [sp, #16]
   1492c:	cmp	r0, r1
   14930:	bne	14940 <__assert_fail@plt+0x1d88>
   14934:	movw	r0, #0
   14938:	str	r0, [fp, #-4]
   1493c:	b	1497c <__assert_fail@plt+0x1dc4>
   14940:	ldr	r0, [fp, #-12]
   14944:	ldr	r1, [fp, #-8]
   14948:	ldr	r2, [sp, #12]
   1494c:	ldr	r3, [sp, #16]
   14950:	bl	17550 <__assert_fail@plt+0x4998>
   14954:	vstr	d0, [sp]
   14958:	vldr	d16, [sp]
   1495c:	vcmpe.f64	d16, #0.0
   14960:	vmrs	APSR_nzcv, fpscr
   14964:	movw	r0, #0
   14968:	movmi	r0, #1
   1496c:	tst	r0, #1
   14970:	mvn	r0, #0
   14974:	moveq	r0, #1
   14978:	str	r0, [fp, #-4]
   1497c:	ldr	r0, [fp, #-4]
   14980:	mov	sp, fp
   14984:	pop	{fp, pc}
   14988:	push	{fp, lr}
   1498c:	mov	fp, sp
   14990:	sub	sp, sp, #24
   14994:	str	r0, [fp, #-4]
   14998:	str	r1, [fp, #-8]
   1499c:	str	r2, [sp, #12]
   149a0:	ldr	r1, [fp, #-8]
   149a4:	add	r0, sp, #4
   149a8:	bl	49880 <__assert_fail@plt+0x36cc8>
   149ac:	ldr	r2, [sp, #12]
   149b0:	ldr	r0, [sp, #4]
   149b4:	ldr	r1, [sp, #8]
   149b8:	movw	r3, #20864	; 0x5180
   149bc:	movt	r3, #1
   149c0:	bl	1464c <__assert_fail@plt+0x1a94>
   149c4:	and	r0, r0, #1
   149c8:	mov	sp, fp
   149cc:	pop	{fp, pc}
   149d0:	sub	sp, sp, #12
   149d4:	str	r0, [sp, #8]
   149d8:	str	r1, [sp, #4]
   149dc:	str	r2, [sp]
   149e0:	movw	r0, #1
   149e4:	and	r0, r0, #1
   149e8:	add	sp, sp, #12
   149ec:	bx	lr
   149f0:	push	{fp, lr}
   149f4:	mov	fp, sp
   149f8:	sub	sp, sp, #24
   149fc:	str	r0, [fp, #-4]
   14a00:	str	r1, [fp, #-8]
   14a04:	str	r2, [sp, #12]
   14a08:	ldr	r1, [fp, #-8]
   14a0c:	add	r0, sp, #4
   14a10:	bl	498a4 <__assert_fail@plt+0x36cec>
   14a14:	ldr	r2, [sp, #12]
   14a18:	ldr	r0, [sp, #4]
   14a1c:	ldr	r1, [sp, #8]
   14a20:	mov	r3, #60	; 0x3c
   14a24:	bl	1464c <__assert_fail@plt+0x1a94>
   14a28:	and	r0, r0, #1
   14a2c:	mov	sp, fp
   14a30:	pop	{fp, pc}
   14a34:	push	{fp, lr}
   14a38:	mov	fp, sp
   14a3c:	sub	sp, sp, #24
   14a40:	str	r0, [fp, #-4]
   14a44:	str	r1, [fp, #-8]
   14a48:	str	r2, [sp, #12]
   14a4c:	ldr	r0, [sp, #12]
   14a50:	ldr	r0, [r0, #44]	; 0x2c
   14a54:	movw	r1, #0
   14a58:	cmp	r1, r0
   14a5c:	bne	14a64 <__assert_fail@plt+0x1eac>
   14a60:	b	14a84 <__assert_fail@plt+0x1ecc>
   14a64:	movw	r0, #23638	; 0x5c56
   14a68:	movt	r0, #7
   14a6c:	movw	r1, #23677	; 0x5c7d
   14a70:	movt	r1, #7
   14a74:	movw	r2, #199	; 0xc7
   14a78:	movw	r3, #23751	; 0x5cc7
   14a7c:	movt	r3, #7
   14a80:	bl	12bb8 <__assert_fail@plt>
   14a84:	ldr	r1, [fp, #-8]
   14a88:	add	r0, sp, #4
   14a8c:	bl	498a4 <__assert_fail@plt+0x36cec>
   14a90:	ldr	r0, [sp, #12]
   14a94:	ldr	r1, [sp, #4]
   14a98:	ldr	r2, [sp, #8]
   14a9c:	ldr	r3, [r0, #48]	; 0x30
   14aa0:	ldr	r0, [r0, #52]	; 0x34
   14aa4:	str	r0, [sp]
   14aa8:	mov	r0, r1
   14aac:	mov	r1, r2
   14ab0:	mov	r2, r3
   14ab4:	ldr	r3, [sp]
   14ab8:	bl	148f8 <__assert_fail@plt+0x1d40>
   14abc:	cmp	r0, #0
   14ac0:	movw	r0, #0
   14ac4:	movgt	r0, #1
   14ac8:	and	r0, r0, #1
   14acc:	mov	sp, fp
   14ad0:	pop	{fp, pc}
   14ad4:	push	{fp, lr}
   14ad8:	mov	fp, sp
   14adc:	sub	sp, sp, #16
   14ae0:	str	r0, [fp, #-4]
   14ae4:	str	r1, [sp, #8]
   14ae8:	str	r2, [sp, #4]
   14aec:	ldr	r0, [sp, #4]
   14af0:	ldr	r0, [r0, #156]	; 0x9c
   14af4:	movw	r1, #0
   14af8:	cmp	r0, r1
   14afc:	beq	14b14 <__assert_fail@plt+0x1f5c>
   14b00:	ldr	r0, [fp, #-4]
   14b04:	ldr	r1, [sp, #8]
   14b08:	ldr	r2, [sp, #4]
   14b0c:	ldr	r2, [r2, #156]	; 0x9c
   14b10:	bl	1d708 <__assert_fail@plt+0xab50>
   14b14:	ldr	r0, [fp, #-4]
   14b18:	ldr	r1, [sp, #8]
   14b1c:	ldr	r2, [sp, #4]
   14b20:	ldr	r2, [r2, #160]	; 0xa0
   14b24:	bl	1d708 <__assert_fail@plt+0xab50>
   14b28:	and	r0, r0, #1
   14b2c:	mov	sp, fp
   14b30:	pop	{fp, pc}
   14b34:	push	{fp, lr}
   14b38:	mov	fp, sp
   14b3c:	sub	sp, sp, #24
   14b40:	str	r0, [fp, #-4]
   14b44:	str	r1, [fp, #-8]
   14b48:	str	r2, [sp, #12]
   14b4c:	ldr	r1, [fp, #-8]
   14b50:	add	r0, sp, #4
   14b54:	bl	498a4 <__assert_fail@plt+0x36cec>
   14b58:	ldr	r2, [sp, #12]
   14b5c:	ldr	r0, [sp, #4]
   14b60:	ldr	r1, [sp, #8]
   14b64:	movw	r3, #20864	; 0x5180
   14b68:	movt	r3, #1
   14b6c:	bl	1464c <__assert_fail@plt+0x1a94>
   14b70:	and	r0, r0, #1
   14b74:	mov	sp, fp
   14b78:	pop	{fp, pc}
   14b7c:	push	{fp, lr}
   14b80:	mov	fp, sp
   14b84:	sub	sp, sp, #32
   14b88:	str	r0, [fp, #-8]
   14b8c:	str	r1, [fp, #-12]
   14b90:	str	r2, [sp, #16]
   14b94:	movw	r0, #57436	; 0xe05c
   14b98:	movt	r0, #8
   14b9c:	ldr	r0, [r0, #12]
   14ba0:	movw	r1, #26652	; 0x681c
   14ba4:	movt	r1, #7
   14ba8:	bl	124c8 <strcmp@plt>
   14bac:	cmp	r0, #0
   14bb0:	beq	14d18 <__assert_fail@plt+0x2160>
   14bb4:	movw	r0, #0
   14bb8:	str	r0, [sp, #12]
   14bbc:	movw	r0, #57436	; 0xe05c
   14bc0:	movt	r0, #8
   14bc4:	ldrb	r0, [r0, #4]
   14bc8:	tst	r0, #1
   14bcc:	beq	14bf0 <__assert_fail@plt+0x2038>
   14bd0:	ldr	r0, [fp, #-12]
   14bd4:	ldr	r0, [r0, #16]
   14bd8:	and	r0, r0, #61440	; 0xf000
   14bdc:	cmp	r0, #16384	; 0x4000
   14be0:	bne	14bf0 <__assert_fail@plt+0x2038>
   14be4:	ldr	r0, [sp, #12]
   14be8:	orr	r0, r0, #512	; 0x200
   14bec:	str	r0, [sp, #12]
   14bf0:	ldr	r0, [sp, #12]
   14bf4:	bl	14d34 <__assert_fail@plt+0x217c>
   14bf8:	tst	r0, #1
   14bfc:	beq	14c10 <__assert_fail@plt+0x2058>
   14c00:	movw	r0, #1
   14c04:	and	r0, r0, #1
   14c08:	strb	r0, [fp, #-1]
   14c0c:	b	14d24 <__assert_fail@plt+0x216c>
   14c10:	bl	128d0 <__errno_location@plt>
   14c14:	ldr	r0, [r0]
   14c18:	movw	r1, #2
   14c1c:	cmp	r1, r0
   14c20:	bne	14c54 <__assert_fail@plt+0x209c>
   14c24:	movw	r0, #57480	; 0xe088
   14c28:	movt	r0, #8
   14c2c:	ldrb	r0, [r0, #14]
   14c30:	tst	r0, #1
   14c34:	beq	14c54 <__assert_fail@plt+0x209c>
   14c38:	bl	128d0 <__errno_location@plt>
   14c3c:	movw	r1, #0
   14c40:	str	r1, [r0]
   14c44:	movw	r0, #1
   14c48:	and	r0, r0, #1
   14c4c:	strb	r0, [fp, #-1]
   14c50:	b	14d24 <__assert_fail@plt+0x216c>
   14c54:	bl	128d0 <__errno_location@plt>
   14c58:	ldr	r0, [r0]
   14c5c:	movw	r1, #21
   14c60:	cmp	r1, r0
   14c64:	bne	14cac <__assert_fail@plt+0x20f4>
   14c68:	ldr	r0, [sp, #12]
   14c6c:	and	r0, r0, #512	; 0x200
   14c70:	cmp	r0, #0
   14c74:	bne	14ca8 <__assert_fail@plt+0x20f0>
   14c78:	ldr	r0, [sp, #12]
   14c7c:	orr	r0, r0, #512	; 0x200
   14c80:	str	r0, [sp, #12]
   14c84:	ldr	r0, [sp, #12]
   14c88:	bl	14d34 <__assert_fail@plt+0x217c>
   14c8c:	tst	r0, #1
   14c90:	beq	14ca4 <__assert_fail@plt+0x20ec>
   14c94:	movw	r0, #1
   14c98:	and	r0, r0, #1
   14c9c:	strb	r0, [fp, #-1]
   14ca0:	b	14d24 <__assert_fail@plt+0x216c>
   14ca4:	b	14ca8 <__assert_fail@plt+0x20f0>
   14ca8:	b	14cac <__assert_fail@plt+0x20f4>
   14cac:	b	14cb0 <__assert_fail@plt+0x20f8>
   14cb0:	bl	128d0 <__errno_location@plt>
   14cb4:	ldr	r1, [r0]
   14cb8:	movw	r0, #23818	; 0x5d0a
   14cbc:	movt	r0, #7
   14cc0:	str	r1, [sp, #8]
   14cc4:	bl	12864 <gettext@plt>
   14cc8:	ldr	r1, [fp, #-8]
   14ccc:	movw	r2, #0
   14cd0:	str	r0, [sp, #4]
   14cd4:	mov	r0, r2
   14cd8:	bl	1d994 <__assert_fail@plt+0xaddc>
   14cdc:	movw	r1, #0
   14ce0:	str	r0, [sp]
   14ce4:	mov	r0, r1
   14ce8:	ldr	r1, [sp, #8]
   14cec:	ldr	r2, [sp, #4]
   14cf0:	ldr	r3, [sp]
   14cf4:	bl	12780 <error@plt>
   14cf8:	movw	r0, #57436	; 0xe05c
   14cfc:	movt	r0, #8
   14d00:	movw	r1, #1
   14d04:	str	r1, [r0, #28]
   14d08:	movw	r0, #0
   14d0c:	and	r0, r0, #1
   14d10:	strb	r0, [fp, #-1]
   14d14:	b	14d24 <__assert_fail@plt+0x216c>
   14d18:	movw	r0, #1
   14d1c:	and	r0, r0, #1
   14d20:	strb	r0, [fp, #-1]
   14d24:	ldrb	r0, [fp, #-1]
   14d28:	and	r0, r0, #1
   14d2c:	mov	sp, fp
   14d30:	pop	{fp, pc}
   14d34:	push	{fp, lr}
   14d38:	mov	fp, sp
   14d3c:	sub	sp, sp, #8
   14d40:	str	r0, [sp, #4]
   14d44:	movw	r0, #57436	; 0xe05c
   14d48:	movt	r0, #8
   14d4c:	ldr	r1, [r0, #16]
   14d50:	ldr	r0, [r0, #12]
   14d54:	ldr	r2, [sp, #4]
   14d58:	str	r0, [sp]
   14d5c:	mov	r0, r1
   14d60:	ldr	r1, [sp]
   14d64:	bl	12534 <unlinkat@plt>
   14d68:	movw	r1, #0
   14d6c:	cmp	r1, r0
   14d70:	movw	r0, #0
   14d74:	moveq	r0, #1
   14d78:	and	r0, r0, #1
   14d7c:	mov	sp, fp
   14d80:	pop	{fp, pc}
   14d84:	push	{fp, lr}
   14d88:	mov	fp, sp
   14d8c:	sub	sp, sp, #88	; 0x58
   14d90:	str	r0, [fp, #-8]
   14d94:	str	r1, [fp, #-12]
   14d98:	str	r2, [fp, #-16]
   14d9c:	ldr	r0, [fp, #-12]
   14da0:	ldr	r0, [r0, #16]
   14da4:	and	r0, r0, #61440	; 0xf000
   14da8:	cmp	r0, #16384	; 0x4000
   14dac:	bne	15078 <__assert_fail@plt+0x24c0>
   14db0:	movw	r0, #1
   14db4:	strb	r0, [fp, #-29]	; 0xffffffe3
   14db8:	bl	128d0 <__errno_location@plt>
   14dbc:	ldr	r2, [pc, #776]	; 150cc <__assert_fail@plt+0x2514>
   14dc0:	movw	r1, #0
   14dc4:	str	r1, [r0]
   14dc8:	movw	r0, #57436	; 0xe05c
   14dcc:	movt	r0, #8
   14dd0:	ldr	r1, [r0, #16]
   14dd4:	ldr	r0, [r0, #12]
   14dd8:	str	r0, [fp, #-36]	; 0xffffffdc
   14ddc:	mov	r0, r1
   14de0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14de4:	bl	32480 <__assert_fail@plt+0x1f8c8>
   14de8:	str	r0, [fp, #-20]	; 0xffffffec
   14dec:	cmp	r0, #0
   14df0:	bge	14e5c <__assert_fail@plt+0x22a4>
   14df4:	bl	128d0 <__errno_location@plt>
   14df8:	ldr	r1, [r0]
   14dfc:	ldr	r0, [fp, #-8]
   14e00:	movw	r2, #0
   14e04:	str	r0, [fp, #-40]	; 0xffffffd8
   14e08:	mov	r0, r2
   14e0c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14e10:	str	r1, [sp, #44]	; 0x2c
   14e14:	mov	r1, r2
   14e18:	bl	1d994 <__assert_fail@plt+0xaddc>
   14e1c:	movw	r1, #0
   14e20:	str	r0, [sp, #40]	; 0x28
   14e24:	mov	r0, r1
   14e28:	ldr	r1, [sp, #44]	; 0x2c
   14e2c:	movw	r2, #50143	; 0xc3df
   14e30:	movt	r2, #7
   14e34:	ldr	r3, [sp, #40]	; 0x28
   14e38:	bl	12780 <error@plt>
   14e3c:	movw	r0, #57436	; 0xe05c
   14e40:	movt	r0, #8
   14e44:	movw	r1, #1
   14e48:	str	r1, [r0, #28]
   14e4c:	movw	r0, #0
   14e50:	and	r0, r0, #1
   14e54:	strb	r0, [fp, #-1]
   14e58:	b	150bc <__assert_fail@plt+0x2504>
   14e5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14e60:	bl	12a74 <fdopendir@plt>
   14e64:	str	r0, [fp, #-24]	; 0xffffffe8
   14e68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14e6c:	movw	r1, #0
   14e70:	cmp	r0, r1
   14e74:	bne	14ee8 <__assert_fail@plt+0x2330>
   14e78:	bl	128d0 <__errno_location@plt>
   14e7c:	ldr	r1, [r0]
   14e80:	ldr	r0, [fp, #-8]
   14e84:	movw	r2, #0
   14e88:	str	r0, [sp, #36]	; 0x24
   14e8c:	mov	r0, r2
   14e90:	ldr	r2, [sp, #36]	; 0x24
   14e94:	str	r1, [sp, #32]
   14e98:	mov	r1, r2
   14e9c:	bl	1d994 <__assert_fail@plt+0xaddc>
   14ea0:	movw	r1, #0
   14ea4:	str	r0, [sp, #28]
   14ea8:	mov	r0, r1
   14eac:	ldr	r1, [sp, #32]
   14eb0:	movw	r2, #50143	; 0xc3df
   14eb4:	movt	r2, #7
   14eb8:	ldr	r3, [sp, #28]
   14ebc:	bl	12780 <error@plt>
   14ec0:	movw	r0, #57436	; 0xe05c
   14ec4:	movt	r0, #8
   14ec8:	movw	r1, #1
   14ecc:	str	r1, [r0, #28]
   14ed0:	ldr	r0, [fp, #-20]	; 0xffffffec
   14ed4:	bl	12b70 <close@plt>
   14ed8:	movw	r1, #0
   14edc:	and	r1, r1, #1
   14ee0:	strb	r1, [fp, #-1]
   14ee4:	b	150bc <__assert_fail@plt+0x2504>
   14ee8:	bl	128d0 <__errno_location@plt>
   14eec:	movw	r1, #0
   14ef0:	str	r1, [r0]
   14ef4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14ef8:	bl	12a68 <readdir64@plt>
   14efc:	str	r0, [fp, #-28]	; 0xffffffe4
   14f00:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14f04:	movw	r1, #0
   14f08:	cmp	r0, r1
   14f0c:	beq	14f70 <__assert_fail@plt+0x23b8>
   14f10:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14f14:	ldrb	r0, [r0, #19]
   14f18:	cmp	r0, #46	; 0x2e
   14f1c:	bne	14f50 <__assert_fail@plt+0x2398>
   14f20:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14f24:	ldrb	r0, [r0, #20]
   14f28:	cmp	r0, #0
   14f2c:	beq	14f5c <__assert_fail@plt+0x23a4>
   14f30:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14f34:	ldrb	r0, [r0, #20]
   14f38:	cmp	r0, #46	; 0x2e
   14f3c:	bne	14f50 <__assert_fail@plt+0x2398>
   14f40:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14f44:	ldrb	r0, [r0, #21]
   14f48:	cmp	r0, #0
   14f4c:	beq	14f5c <__assert_fail@plt+0x23a4>
   14f50:	movw	r0, #0
   14f54:	strb	r0, [fp, #-29]	; 0xffffffe3
   14f58:	b	14f70 <__assert_fail@plt+0x23b8>
   14f5c:	b	14f60 <__assert_fail@plt+0x23a8>
   14f60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14f64:	bl	12a68 <readdir64@plt>
   14f68:	str	r0, [fp, #-28]	; 0xffffffe4
   14f6c:	b	14f00 <__assert_fail@plt+0x2348>
   14f70:	bl	128d0 <__errno_location@plt>
   14f74:	ldr	r0, [r0]
   14f78:	cmp	r0, #0
   14f7c:	beq	14ff0 <__assert_fail@plt+0x2438>
   14f80:	bl	128d0 <__errno_location@plt>
   14f84:	ldr	r1, [r0]
   14f88:	ldr	r0, [fp, #-8]
   14f8c:	movw	r2, #0
   14f90:	str	r0, [sp, #24]
   14f94:	mov	r0, r2
   14f98:	ldr	r2, [sp, #24]
   14f9c:	str	r1, [sp, #20]
   14fa0:	mov	r1, r2
   14fa4:	bl	1d994 <__assert_fail@plt+0xaddc>
   14fa8:	movw	r1, #0
   14fac:	str	r0, [sp, #16]
   14fb0:	mov	r0, r1
   14fb4:	ldr	r1, [sp, #20]
   14fb8:	movw	r2, #50143	; 0xc3df
   14fbc:	movt	r2, #7
   14fc0:	ldr	r3, [sp, #16]
   14fc4:	bl	12780 <error@plt>
   14fc8:	movw	r0, #57436	; 0xe05c
   14fcc:	movt	r0, #8
   14fd0:	movw	r1, #1
   14fd4:	str	r1, [r0, #28]
   14fd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14fdc:	bl	12b88 <closedir@plt>
   14fe0:	movw	r1, #0
   14fe4:	and	r1, r1, #1
   14fe8:	strb	r1, [fp, #-1]
   14fec:	b	150bc <__assert_fail@plt+0x2504>
   14ff0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14ff4:	bl	12b88 <closedir@plt>
   14ff8:	cmp	r0, #0
   14ffc:	beq	15068 <__assert_fail@plt+0x24b0>
   15000:	bl	128d0 <__errno_location@plt>
   15004:	ldr	r1, [r0]
   15008:	ldr	r0, [fp, #-8]
   1500c:	movw	r2, #0
   15010:	str	r0, [sp, #12]
   15014:	mov	r0, r2
   15018:	ldr	r2, [sp, #12]
   1501c:	str	r1, [sp, #8]
   15020:	mov	r1, r2
   15024:	bl	1d994 <__assert_fail@plt+0xaddc>
   15028:	movw	r1, #0
   1502c:	str	r0, [sp, #4]
   15030:	mov	r0, r1
   15034:	ldr	r1, [sp, #8]
   15038:	movw	r2, #50143	; 0xc3df
   1503c:	movt	r2, #7
   15040:	ldr	r3, [sp, #4]
   15044:	bl	12780 <error@plt>
   15048:	movw	r0, #57436	; 0xe05c
   1504c:	movt	r0, #8
   15050:	movw	r1, #1
   15054:	str	r1, [r0, #28]
   15058:	movw	r0, #0
   1505c:	and	r0, r0, #1
   15060:	strb	r0, [fp, #-1]
   15064:	b	150bc <__assert_fail@plt+0x2504>
   15068:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   1506c:	and	r0, r0, #1
   15070:	strb	r0, [fp, #-1]
   15074:	b	150bc <__assert_fail@plt+0x2504>
   15078:	ldr	r0, [fp, #-12]
   1507c:	ldr	r0, [r0, #16]
   15080:	and	r0, r0, #61440	; 0xf000
   15084:	cmp	r0, #32768	; 0x8000
   15088:	bne	150b0 <__assert_fail@plt+0x24f8>
   1508c:	ldr	r0, [fp, #-12]
   15090:	ldr	r1, [r0, #48]	; 0x30
   15094:	ldr	r0, [r0, #52]	; 0x34
   15098:	orr	r0, r1, r0
   1509c:	clz	r0, r0
   150a0:	lsr	r0, r0, #5
   150a4:	and	r0, r0, #1
   150a8:	strb	r0, [fp, #-1]
   150ac:	b	150bc <__assert_fail@plt+0x2504>
   150b0:	movw	r0, #0
   150b4:	and	r0, r0, #1
   150b8:	strb	r0, [fp, #-1]
   150bc:	ldrb	r0, [fp, #-1]
   150c0:	and	r0, r0, #1
   150c4:	mov	sp, fp
   150c8:	pop	{fp, pc}
   150cc:	andeq	r4, sl, r0, lsl #18
   150d0:	push	{fp, lr}
   150d4:	mov	fp, sp
   150d8:	sub	sp, sp, #16
   150dc:	str	r0, [fp, #-4]
   150e0:	str	r1, [sp, #8]
   150e4:	str	r2, [sp, #4]
   150e8:	ldr	r0, [fp, #-4]
   150ec:	ldr	r1, [sp, #8]
   150f0:	ldr	r2, [sp, #4]
   150f4:	bl	175b0 <__assert_fail@plt+0x49f8>
   150f8:	and	r0, r0, #1
   150fc:	mov	sp, fp
   15100:	pop	{fp, pc}
   15104:	push	{fp, lr}
   15108:	mov	fp, sp
   1510c:	sub	sp, sp, #16
   15110:	str	r0, [fp, #-4]
   15114:	str	r1, [sp, #8]
   15118:	str	r2, [sp, #4]
   1511c:	movw	r0, #57436	; 0xe05c
   15120:	movt	r0, #8
   15124:	ldr	r0, [r0, #12]
   15128:	ldr	r1, [sp, #8]
   1512c:	ldr	r2, [sp, #4]
   15130:	bl	175b0 <__assert_fail@plt+0x49f8>
   15134:	and	r0, r0, #1
   15138:	mov	sp, fp
   1513c:	pop	{fp, pc}
   15140:	sub	sp, sp, #12
   15144:	str	r0, [sp, #8]
   15148:	str	r1, [sp, #4]
   1514c:	str	r2, [sp]
   15150:	movw	r0, #0
   15154:	and	r0, r0, #1
   15158:	add	sp, sp, #12
   1515c:	bx	lr
   15160:	push	{r4, r5, fp, lr}
   15164:	add	fp, sp, #8
   15168:	sub	sp, sp, #40	; 0x28
   1516c:	str	r0, [fp, #-12]
   15170:	str	r1, [fp, #-16]
   15174:	str	r2, [fp, #-20]	; 0xffffffec
   15178:	ldr	r0, [fp, #-20]	; 0xffffffec
   1517c:	ldr	r0, [r0, #44]	; 0x2c
   15180:	str	r0, [sp, #24]
   15184:	ldr	r0, [fp, #-12]
   15188:	movw	r1, #57436	; 0xe05c
   1518c:	movt	r1, #8
   15190:	ldr	r2, [r1, #16]
   15194:	ldr	r1, [r1, #12]
   15198:	ldr	r3, [fp, #-16]
   1519c:	movw	ip, #57480	; 0xe088
   151a0:	movt	ip, #8
   151a4:	ldr	lr, [ip, #20]
   151a8:	ldr	ip, [ip, #40]	; 0x28
   151ac:	ldr	r4, [fp, #-20]	; 0xffffffec
   151b0:	ldrb	r4, [r4, #32]
   151b4:	and	r4, r4, #1
   151b8:	ldr	r5, [sp, #24]
   151bc:	str	r1, [sp, #20]
   151c0:	mov	r1, r2
   151c4:	ldr	r2, [sp, #20]
   151c8:	str	lr, [sp]
   151cc:	str	ip, [sp, #4]
   151d0:	str	r4, [sp, #8]
   151d4:	str	r5, [sp, #12]
   151d8:	bl	29bb0 <__assert_fail@plt+0x16ff8>
   151dc:	movw	r0, #1
   151e0:	and	r0, r0, #1
   151e4:	sub	sp, fp, #8
   151e8:	pop	{r4, r5, fp, pc}
   151ec:	push	{fp, lr}
   151f0:	mov	fp, sp
   151f4:	sub	sp, sp, #24
   151f8:	str	r0, [fp, #-4]
   151fc:	str	r1, [fp, #-8]
   15200:	str	r2, [sp, #12]
   15204:	ldr	r0, [sp, #12]
   15208:	ldr	r0, [r0, #44]	; 0x2c
   1520c:	ldr	r1, [sp, #12]
   15210:	ldr	r1, [r1, #56]	; 0x38
   15214:	ldr	r2, [sp, #12]
   15218:	ldrb	r2, [r2, #52]	; 0x34
   1521c:	ldr	r3, [fp, #-4]
   15220:	and	r2, r2, #1
   15224:	movw	ip, #47760	; 0xba90
   15228:	movt	ip, #7
   1522c:	str	r3, [sp, #8]
   15230:	mov	r3, ip
   15234:	ldr	ip, [sp, #8]
   15238:	str	ip, [sp]
   1523c:	bl	2abcc <__assert_fail@plt+0x18014>
   15240:	movw	r1, #1
   15244:	and	r1, r1, #1
   15248:	str	r0, [sp, #4]
   1524c:	mov	r0, r1
   15250:	mov	sp, fp
   15254:	pop	{fp, pc}
   15258:	push	{fp, lr}
   1525c:	mov	fp, sp
   15260:	sub	sp, sp, #24
   15264:	str	r0, [fp, #-4]
   15268:	str	r1, [fp, #-8]
   1526c:	str	r2, [sp, #12]
   15270:	ldr	r0, [sp, #12]
   15274:	ldr	r0, [r0, #44]	; 0x2c
   15278:	str	r0, [sp, #8]
   1527c:	ldr	r0, [fp, #-4]
   15280:	ldr	r1, [sp, #8]
   15284:	bl	12b4c <fputs@plt>
   15288:	ldr	r1, [sp, #8]
   1528c:	movw	r2, #0
   15290:	str	r0, [sp, #4]
   15294:	mov	r0, r2
   15298:	bl	12a8c <putc@plt>
   1529c:	movw	r1, #1
   152a0:	and	r1, r1, #1
   152a4:	str	r0, [sp]
   152a8:	mov	r0, r1
   152ac:	mov	sp, fp
   152b0:	pop	{fp, pc}
   152b4:	push	{fp, lr}
   152b8:	mov	fp, sp
   152bc:	sub	sp, sp, #16
   152c0:	str	r0, [sp, #8]
   152c4:	str	r1, [sp, #4]
   152c8:	str	r2, [sp]
   152cc:	ldr	r0, [sp, #4]
   152d0:	ldr	r1, [sp, #8]
   152d4:	bl	21244 <__assert_fail@plt+0xe68c>
   152d8:	ldr	r1, [sp]
   152dc:	ldr	r1, [r1, #40]	; 0x28
   152e0:	bl	124c8 <strcmp@plt>
   152e4:	cmp	r0, #0
   152e8:	bne	152fc <__assert_fail@plt+0x2744>
   152ec:	movw	r0, #1
   152f0:	and	r0, r0, #1
   152f4:	strb	r0, [fp, #-1]
   152f8:	b	15308 <__assert_fail@plt+0x2750>
   152fc:	movw	r0, #0
   15300:	and	r0, r0, #1
   15304:	strb	r0, [fp, #-1]
   15308:	ldrb	r0, [fp, #-1]
   1530c:	and	r0, r0, #1
   15310:	mov	sp, fp
   15314:	pop	{fp, pc}
   15318:	sub	sp, sp, #20
   1531c:	str	r0, [sp, #12]
   15320:	str	r1, [sp, #8]
   15324:	str	r2, [sp, #4]
   15328:	ldr	r0, [sp, #4]
   1532c:	ldr	r0, [r0, #40]	; 0x28
   15330:	cmp	r0, #0
   15334:	str	r0, [sp]
   15338:	beq	15360 <__assert_fail@plt+0x27a8>
   1533c:	b	15340 <__assert_fail@plt+0x2788>
   15340:	ldr	r0, [sp]
   15344:	cmp	r0, #1
   15348:	beq	15398 <__assert_fail@plt+0x27e0>
   1534c:	b	15350 <__assert_fail@plt+0x2798>
   15350:	ldr	r0, [sp]
   15354:	cmp	r0, #2
   15358:	beq	153d0 <__assert_fail@plt+0x2818>
   1535c:	b	1540c <__assert_fail@plt+0x2854>
   15360:	ldr	r0, [sp, #8]
   15364:	ldr	r0, [r0, #28]
   15368:	ldr	r1, [sp, #4]
   1536c:	ldr	r2, [r1, #48]	; 0x30
   15370:	ldr	r1, [r1, #52]	; 0x34
   15374:	subs	r0, r2, r0
   15378:	sbcs	r1, r1, #0
   1537c:	bcs	15394 <__assert_fail@plt+0x27dc>
   15380:	b	15384 <__assert_fail@plt+0x27cc>
   15384:	movw	r0, #1
   15388:	and	r0, r0, #1
   1538c:	strb	r0, [sp, #19]
   15390:	b	15418 <__assert_fail@plt+0x2860>
   15394:	b	1540c <__assert_fail@plt+0x2854>
   15398:	ldr	r0, [sp, #8]
   1539c:	ldr	r0, [r0, #28]
   153a0:	ldr	r1, [sp, #4]
   153a4:	ldr	r2, [r1, #48]	; 0x30
   153a8:	ldr	r1, [r1, #52]	; 0x34
   153ac:	subs	r0, r0, r2
   153b0:	rscs	r1, r1, #0
   153b4:	bcs	153cc <__assert_fail@plt+0x2814>
   153b8:	b	153bc <__assert_fail@plt+0x2804>
   153bc:	movw	r0, #1
   153c0:	and	r0, r0, #1
   153c4:	strb	r0, [sp, #19]
   153c8:	b	15418 <__assert_fail@plt+0x2860>
   153cc:	b	1540c <__assert_fail@plt+0x2854>
   153d0:	ldr	r0, [sp, #8]
   153d4:	ldr	r0, [r0, #28]
   153d8:	ldr	r1, [sp, #4]
   153dc:	ldr	r2, [r1, #48]	; 0x30
   153e0:	ldr	r1, [r1, #52]	; 0x34
   153e4:	eor	r0, r0, r2
   153e8:	orr	r0, r0, r1
   153ec:	cmp	r0, #0
   153f0:	bne	15408 <__assert_fail@plt+0x2850>
   153f4:	b	153f8 <__assert_fail@plt+0x2840>
   153f8:	movw	r0, #1
   153fc:	and	r0, r0, #1
   15400:	strb	r0, [sp, #19]
   15404:	b	15418 <__assert_fail@plt+0x2860>
   15408:	b	1540c <__assert_fail@plt+0x2854>
   1540c:	movw	r0, #0
   15410:	and	r0, r0, #1
   15414:	strb	r0, [sp, #19]
   15418:	ldrb	r0, [sp, #19]
   1541c:	and	r0, r0, #1
   15420:	add	sp, sp, #20
   15424:	bx	lr
   15428:	sub	sp, sp, #16
   1542c:	str	r0, [sp, #8]
   15430:	str	r1, [sp, #4]
   15434:	str	r2, [sp]
   15438:	ldr	r0, [sp]
   1543c:	ldr	r0, [r0, #40]	; 0x28
   15440:	ldr	r1, [sp, #4]
   15444:	ldr	r1, [r1, #28]
   15448:	cmp	r0, r1
   1544c:	bne	15460 <__assert_fail@plt+0x28a8>
   15450:	movw	r0, #1
   15454:	and	r0, r0, #1
   15458:	strb	r0, [sp, #15]
   1545c:	b	1546c <__assert_fail@plt+0x28b4>
   15460:	movw	r0, #0
   15464:	and	r0, r0, #1
   15468:	strb	r0, [sp, #15]
   1546c:	ldrb	r0, [sp, #15]
   15470:	and	r0, r0, #1
   15474:	add	sp, sp, #16
   15478:	bx	lr
   1547c:	push	{fp, lr}
   15480:	mov	fp, sp
   15484:	sub	sp, sp, #16
   15488:	str	r0, [fp, #-4]
   1548c:	str	r1, [sp, #8]
   15490:	str	r2, [sp, #4]
   15494:	ldr	r0, [fp, #-4]
   15498:	ldr	r1, [sp, #8]
   1549c:	ldr	r2, [sp, #4]
   154a0:	movw	r3, #1
   154a4:	and	r3, r3, #1
   154a8:	bl	154b8 <__assert_fail@plt+0x2900>
   154ac:	and	r0, r0, #1
   154b0:	mov	sp, fp
   154b4:	pop	{fp, pc}
   154b8:	push	{fp, lr}
   154bc:	mov	fp, sp
   154c0:	sub	sp, sp, #24
   154c4:	str	r0, [fp, #-4]
   154c8:	str	r1, [fp, #-8]
   154cc:	str	r2, [sp, #12]
   154d0:	and	r0, r3, #1
   154d4:	strb	r0, [sp, #11]
   154d8:	movw	r0, #0
   154dc:	strb	r0, [sp, #10]
   154e0:	ldr	r0, [fp, #-8]
   154e4:	ldr	r0, [r0, #16]
   154e8:	and	r0, r0, #61440	; 0xf000
   154ec:	cmp	r0, #40960	; 0xa000
   154f0:	bne	15584 <__assert_fail@plt+0x29cc>
   154f4:	movw	r0, #57436	; 0xe05c
   154f8:	movt	r0, #8
   154fc:	ldr	r1, [r0, #16]
   15500:	ldr	r0, [r0, #12]
   15504:	str	r0, [sp]
   15508:	mov	r0, r1
   1550c:	ldr	r1, [sp]
   15510:	bl	2b888 <__assert_fail@plt+0x18cd0>
   15514:	str	r0, [sp, #4]
   15518:	ldr	r0, [sp, #4]
   1551c:	movw	r1, #0
   15520:	cmp	r0, r1
   15524:	beq	1555c <__assert_fail@plt+0x29a4>
   15528:	ldr	r0, [sp, #12]
   1552c:	ldr	r0, [r0, #40]	; 0x28
   15530:	ldr	r1, [sp, #4]
   15534:	ldrb	r2, [sp, #11]
   15538:	tst	r2, #1
   1553c:	movw	r2, #16
   15540:	moveq	r2, #0
   15544:	bl	127a4 <fnmatch@plt>
   15548:	cmp	r0, #0
   1554c:	bne	15558 <__assert_fail@plt+0x29a0>
   15550:	movw	r0, #1
   15554:	strb	r0, [sp, #10]
   15558:	b	1557c <__assert_fail@plt+0x29c4>
   1555c:	bl	128d0 <__errno_location@plt>
   15560:	ldr	r0, [r0]
   15564:	ldr	r1, [fp, #-4]
   15568:	bl	1bf18 <__assert_fail@plt+0x9360>
   1556c:	movw	r0, #57436	; 0xe05c
   15570:	movt	r0, #8
   15574:	movw	r1, #1
   15578:	str	r1, [r0, #28]
   1557c:	ldr	r0, [sp, #4]
   15580:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   15584:	ldrb	r0, [sp, #10]
   15588:	and	r0, r0, #1
   1558c:	mov	sp, fp
   15590:	pop	{fp, pc}
   15594:	push	{fp, lr}
   15598:	mov	fp, sp
   1559c:	sub	sp, sp, #16
   155a0:	str	r0, [fp, #-4]
   155a4:	str	r1, [sp, #8]
   155a8:	str	r2, [sp, #4]
   155ac:	ldr	r0, [fp, #-4]
   155b0:	ldr	r1, [sp, #4]
   155b4:	ldr	r1, [r1, #40]	; 0x28
   155b8:	movw	r2, #16
   155bc:	bl	155cc <__assert_fail@plt+0x2a14>
   155c0:	and	r0, r0, #1
   155c4:	mov	sp, fp
   155c8:	pop	{fp, pc}
   155cc:	push	{fp, lr}
   155d0:	mov	fp, sp
   155d4:	sub	sp, sp, #24
   155d8:	str	r0, [fp, #-4]
   155dc:	str	r1, [fp, #-8]
   155e0:	str	r2, [sp, #12]
   155e4:	ldr	r0, [fp, #-4]
   155e8:	bl	2c264 <__assert_fail@plt+0x196ac>
   155ec:	str	r0, [sp, #4]
   155f0:	ldr	r0, [sp, #4]
   155f4:	bl	2c518 <__assert_fail@plt+0x19960>
   155f8:	ldr	r1, [fp, #-8]
   155fc:	ldr	r2, [sp, #4]
   15600:	ldr	r3, [sp, #12]
   15604:	str	r0, [sp]
   15608:	mov	r0, r1
   1560c:	mov	r1, r2
   15610:	mov	r2, r3
   15614:	bl	127a4 <fnmatch@plt>
   15618:	cmp	r0, #0
   1561c:	movw	r0, #0
   15620:	moveq	r0, #1
   15624:	and	r0, r0, #1
   15628:	strb	r0, [sp, #11]
   1562c:	ldr	r0, [sp, #4]
   15630:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   15634:	ldrb	r0, [sp, #11]
   15638:	and	r0, r0, #1
   1563c:	mov	sp, fp
   15640:	pop	{fp, pc}
   15644:	sub	sp, sp, #20
   15648:	str	r0, [sp, #12]
   1564c:	str	r1, [sp, #8]
   15650:	str	r2, [sp, #4]
   15654:	ldr	r0, [sp, #4]
   15658:	ldr	r0, [r0, #40]	; 0x28
   1565c:	cmp	r0, #0
   15660:	str	r0, [sp]
   15664:	beq	1568c <__assert_fail@plt+0x2ad4>
   15668:	b	1566c <__assert_fail@plt+0x2ab4>
   1566c:	ldr	r0, [sp]
   15670:	cmp	r0, #1
   15674:	beq	156c8 <__assert_fail@plt+0x2b10>
   15678:	b	1567c <__assert_fail@plt+0x2ac4>
   1567c:	ldr	r0, [sp]
   15680:	cmp	r0, #2
   15684:	beq	15704 <__assert_fail@plt+0x2b4c>
   15688:	b	15748 <__assert_fail@plt+0x2b90>
   1568c:	ldr	r0, [sp, #8]
   15690:	ldr	r1, [r0, #96]	; 0x60
   15694:	ldr	r0, [r0, #100]	; 0x64
   15698:	ldr	r2, [sp, #4]
   1569c:	ldr	r3, [r2, #48]	; 0x30
   156a0:	ldr	r2, [r2, #52]	; 0x34
   156a4:	subs	r1, r3, r1
   156a8:	sbcs	r0, r2, r0
   156ac:	bcs	156c4 <__assert_fail@plt+0x2b0c>
   156b0:	b	156b4 <__assert_fail@plt+0x2afc>
   156b4:	movw	r0, #1
   156b8:	and	r0, r0, #1
   156bc:	strb	r0, [sp, #19]
   156c0:	b	15754 <__assert_fail@plt+0x2b9c>
   156c4:	b	15748 <__assert_fail@plt+0x2b90>
   156c8:	ldr	r0, [sp, #8]
   156cc:	ldr	r1, [r0, #96]	; 0x60
   156d0:	ldr	r0, [r0, #100]	; 0x64
   156d4:	ldr	r2, [sp, #4]
   156d8:	ldr	r3, [r2, #48]	; 0x30
   156dc:	ldr	r2, [r2, #52]	; 0x34
   156e0:	subs	r1, r1, r3
   156e4:	sbcs	r0, r0, r2
   156e8:	bcs	15700 <__assert_fail@plt+0x2b48>
   156ec:	b	156f0 <__assert_fail@plt+0x2b38>
   156f0:	movw	r0, #1
   156f4:	and	r0, r0, #1
   156f8:	strb	r0, [sp, #19]
   156fc:	b	15754 <__assert_fail@plt+0x2b9c>
   15700:	b	15748 <__assert_fail@plt+0x2b90>
   15704:	ldr	r0, [sp, #8]
   15708:	ldr	r1, [r0, #96]	; 0x60
   1570c:	ldr	r0, [r0, #100]	; 0x64
   15710:	ldr	r2, [sp, #4]
   15714:	ldr	r3, [r2, #48]	; 0x30
   15718:	ldr	r2, [r2, #52]	; 0x34
   1571c:	eor	r0, r0, r2
   15720:	eor	r1, r1, r3
   15724:	orr	r0, r1, r0
   15728:	cmp	r0, #0
   1572c:	bne	15744 <__assert_fail@plt+0x2b8c>
   15730:	b	15734 <__assert_fail@plt+0x2b7c>
   15734:	movw	r0, #1
   15738:	and	r0, r0, #1
   1573c:	strb	r0, [sp, #19]
   15740:	b	15754 <__assert_fail@plt+0x2b9c>
   15744:	b	15748 <__assert_fail@plt+0x2b90>
   15748:	movw	r0, #0
   1574c:	and	r0, r0, #1
   15750:	strb	r0, [sp, #19]
   15754:	ldrb	r0, [sp, #19]
   15758:	and	r0, r0, #1
   1575c:	add	sp, sp, #20
   15760:	bx	lr
   15764:	push	{fp, lr}
   15768:	mov	fp, sp
   1576c:	sub	sp, sp, #16
   15770:	str	r0, [sp, #8]
   15774:	str	r1, [sp, #4]
   15778:	str	r2, [sp]
   1577c:	ldr	r0, [sp]
   15780:	ldr	r0, [r0, #40]	; 0x28
   15784:	ldr	r1, [sp, #8]
   15788:	movw	r2, #16
   1578c:	bl	127a4 <fnmatch@plt>
   15790:	cmp	r0, #0
   15794:	bne	157a8 <__assert_fail@plt+0x2bf0>
   15798:	movw	r0, #1
   1579c:	and	r0, r0, #1
   157a0:	strb	r0, [fp, #-1]
   157a4:	b	157b4 <__assert_fail@plt+0x2bfc>
   157a8:	movw	r0, #0
   157ac:	and	r0, r0, #1
   157b0:	strb	r0, [fp, #-1]
   157b4:	ldrb	r0, [fp, #-1]
   157b8:	and	r0, r0, #1
   157bc:	mov	sp, fp
   157c0:	pop	{fp, pc}
   157c4:	sub	sp, sp, #20
   157c8:	str	r0, [sp, #12]
   157cc:	str	r1, [sp, #8]
   157d0:	str	r2, [sp, #4]
   157d4:	ldr	r0, [sp, #4]
   157d8:	ldr	r0, [r0, #40]	; 0x28
   157dc:	cmp	r0, #0
   157e0:	str	r0, [sp]
   157e4:	beq	1580c <__assert_fail@plt+0x2c54>
   157e8:	b	157ec <__assert_fail@plt+0x2c34>
   157ec:	ldr	r0, [sp]
   157f0:	cmp	r0, #1
   157f4:	beq	15844 <__assert_fail@plt+0x2c8c>
   157f8:	b	157fc <__assert_fail@plt+0x2c44>
   157fc:	ldr	r0, [sp]
   15800:	cmp	r0, #2
   15804:	beq	1587c <__assert_fail@plt+0x2cc4>
   15808:	b	158b8 <__assert_fail@plt+0x2d00>
   1580c:	ldr	r0, [sp, #8]
   15810:	ldr	r0, [r0, #20]
   15814:	ldr	r1, [sp, #4]
   15818:	ldr	r2, [r1, #48]	; 0x30
   1581c:	ldr	r1, [r1, #52]	; 0x34
   15820:	subs	r0, r2, r0
   15824:	sbcs	r1, r1, #0
   15828:	bcs	15840 <__assert_fail@plt+0x2c88>
   1582c:	b	15830 <__assert_fail@plt+0x2c78>
   15830:	movw	r0, #1
   15834:	and	r0, r0, #1
   15838:	strb	r0, [sp, #19]
   1583c:	b	158c4 <__assert_fail@plt+0x2d0c>
   15840:	b	158b8 <__assert_fail@plt+0x2d00>
   15844:	ldr	r0, [sp, #8]
   15848:	ldr	r0, [r0, #20]
   1584c:	ldr	r1, [sp, #4]
   15850:	ldr	r2, [r1, #48]	; 0x30
   15854:	ldr	r1, [r1, #52]	; 0x34
   15858:	subs	r0, r0, r2
   1585c:	rscs	r1, r1, #0
   15860:	bcs	15878 <__assert_fail@plt+0x2cc0>
   15864:	b	15868 <__assert_fail@plt+0x2cb0>
   15868:	movw	r0, #1
   1586c:	and	r0, r0, #1
   15870:	strb	r0, [sp, #19]
   15874:	b	158c4 <__assert_fail@plt+0x2d0c>
   15878:	b	158b8 <__assert_fail@plt+0x2d00>
   1587c:	ldr	r0, [sp, #8]
   15880:	ldr	r0, [r0, #20]
   15884:	ldr	r1, [sp, #4]
   15888:	ldr	r2, [r1, #48]	; 0x30
   1588c:	ldr	r1, [r1, #52]	; 0x34
   15890:	eor	r0, r0, r2
   15894:	orr	r0, r0, r1
   15898:	cmp	r0, #0
   1589c:	bne	158b4 <__assert_fail@plt+0x2cfc>
   158a0:	b	158a4 <__assert_fail@plt+0x2cec>
   158a4:	movw	r0, #1
   158a8:	and	r0, r0, #1
   158ac:	strb	r0, [sp, #19]
   158b0:	b	158c4 <__assert_fail@plt+0x2d0c>
   158b4:	b	158b8 <__assert_fail@plt+0x2d00>
   158b8:	movw	r0, #0
   158bc:	and	r0, r0, #1
   158c0:	strb	r0, [sp, #19]
   158c4:	ldrb	r0, [sp, #19]
   158c8:	and	r0, r0, #1
   158cc:	add	sp, sp, #20
   158d0:	bx	lr
   158d4:	push	{fp, lr}
   158d8:	mov	fp, sp
   158dc:	sub	sp, sp, #16
   158e0:	str	r0, [fp, #-4]
   158e4:	str	r1, [sp, #8]
   158e8:	str	r2, [sp, #4]
   158ec:	ldr	r0, [fp, #-4]
   158f0:	ldr	r1, [sp, #8]
   158f4:	ldr	r2, [sp, #4]
   158f8:	movw	r3, #0
   158fc:	and	r3, r3, #1
   15900:	bl	154b8 <__assert_fail@plt+0x2900>
   15904:	and	r0, r0, #1
   15908:	mov	sp, fp
   1590c:	pop	{fp, pc}
   15910:	push	{fp, lr}
   15914:	mov	fp, sp
   15918:	sub	sp, sp, #16
   1591c:	str	r0, [fp, #-4]
   15920:	str	r1, [sp, #8]
   15924:	str	r2, [sp, #4]
   15928:	ldr	r0, [fp, #-4]
   1592c:	ldr	r1, [sp, #8]
   15930:	ldr	r2, [sp, #4]
   15934:	bl	15160 <__assert_fail@plt+0x25a8>
   15938:	and	r0, r0, #1
   1593c:	mov	sp, fp
   15940:	pop	{fp, pc}
   15944:	push	{fp, lr}
   15948:	mov	fp, sp
   1594c:	sub	sp, sp, #24
   15950:	str	r0, [fp, #-4]
   15954:	str	r1, [fp, #-8]
   15958:	str	r2, [sp, #12]
   1595c:	ldr	r1, [fp, #-8]
   15960:	add	r0, sp, #4
   15964:	bl	498c8 <__assert_fail@plt+0x36d10>
   15968:	ldr	r2, [sp, #12]
   1596c:	ldr	r0, [sp, #4]
   15970:	ldr	r1, [sp, #8]
   15974:	mov	r3, #60	; 0x3c
   15978:	bl	1464c <__assert_fail@plt+0x1a94>
   1597c:	and	r0, r0, #1
   15980:	mov	sp, fp
   15984:	pop	{fp, pc}
   15988:	push	{fp, lr}
   1598c:	mov	fp, sp
   15990:	sub	sp, sp, #24
   15994:	str	r0, [fp, #-4]
   15998:	str	r1, [fp, #-8]
   1599c:	str	r2, [sp, #12]
   159a0:	ldr	r1, [fp, #-8]
   159a4:	add	r0, sp, #4
   159a8:	bl	498c8 <__assert_fail@plt+0x36d10>
   159ac:	ldr	r2, [sp, #12]
   159b0:	ldr	r0, [sp, #4]
   159b4:	ldr	r1, [sp, #8]
   159b8:	movw	r3, #20864	; 0x5180
   159bc:	movt	r3, #1
   159c0:	bl	1464c <__assert_fail@plt+0x1a94>
   159c4:	and	r0, r0, #1
   159c8:	mov	sp, fp
   159cc:	pop	{fp, pc}
   159d0:	push	{fp, lr}
   159d4:	mov	fp, sp
   159d8:	sub	sp, sp, #16
   159dc:	str	r0, [fp, #-4]
   159e0:	str	r1, [sp, #8]
   159e4:	str	r2, [sp, #4]
   159e8:	ldr	r0, [fp, #-4]
   159ec:	ldr	r1, [sp, #4]
   159f0:	ldr	r1, [r1, #40]	; 0x28
   159f4:	movw	r2, #0
   159f8:	bl	155cc <__assert_fail@plt+0x2a14>
   159fc:	and	r0, r0, #1
   15a00:	mov	sp, fp
   15a04:	pop	{fp, pc}
   15a08:	push	{fp, lr}
   15a0c:	mov	fp, sp
   15a10:	sub	sp, sp, #16
   15a14:	str	r0, [fp, #-4]
   15a18:	str	r1, [sp, #8]
   15a1c:	str	r2, [sp, #4]
   15a20:	ldr	r0, [fp, #-4]
   15a24:	ldr	r1, [sp, #8]
   15a28:	ldr	r2, [sp, #4]
   15a2c:	ldr	r2, [r2, #160]	; 0xa0
   15a30:	bl	1d708 <__assert_fail@plt+0xab50>
   15a34:	mvn	r1, #0
   15a38:	eor	r0, r0, r1
   15a3c:	and	r0, r0, #1
   15a40:	mov	sp, fp
   15a44:	pop	{fp, pc}
   15a48:	push	{fp, lr}
   15a4c:	mov	fp, sp
   15a50:	sub	sp, sp, #24
   15a54:	str	r0, [fp, #-4]
   15a58:	str	r1, [fp, #-8]
   15a5c:	str	r2, [sp, #12]
   15a60:	ldr	r0, [sp, #12]
   15a64:	ldr	r0, [r0, #44]	; 0x2c
   15a68:	movw	r1, #0
   15a6c:	cmp	r1, r0
   15a70:	bne	15a78 <__assert_fail@plt+0x2ec0>
   15a74:	b	15a98 <__assert_fail@plt+0x2ee0>
   15a78:	movw	r0, #23638	; 0x5c56
   15a7c:	movt	r0, #7
   15a80:	movw	r1, #23677	; 0x5c7d
   15a84:	movt	r1, #7
   15a88:	movw	r2, #621	; 0x26d
   15a8c:	movw	r3, #23835	; 0x5d1b
   15a90:	movt	r3, #7
   15a94:	bl	12bb8 <__assert_fail@plt>
   15a98:	ldr	r1, [fp, #-8]
   15a9c:	add	r0, sp, #4
   15aa0:	bl	498c8 <__assert_fail@plt+0x36d10>
   15aa4:	ldr	r0, [sp, #12]
   15aa8:	ldr	r1, [sp, #4]
   15aac:	ldr	r2, [sp, #8]
   15ab0:	ldr	r3, [r0, #48]	; 0x30
   15ab4:	ldr	r0, [r0, #52]	; 0x34
   15ab8:	str	r0, [sp]
   15abc:	mov	r0, r1
   15ac0:	mov	r1, r2
   15ac4:	mov	r2, r3
   15ac8:	ldr	r3, [sp]
   15acc:	bl	148f8 <__assert_fail@plt+0x1d40>
   15ad0:	cmp	r0, #0
   15ad4:	movw	r0, #0
   15ad8:	movgt	r0, #1
   15adc:	and	r0, r0, #1
   15ae0:	mov	sp, fp
   15ae4:	pop	{fp, pc}
   15ae8:	push	{fp, lr}
   15aec:	mov	fp, sp
   15af0:	sub	sp, sp, #80	; 0x50
   15af4:	str	r0, [fp, #-8]
   15af8:	str	r1, [fp, #-12]
   15afc:	str	r2, [fp, #-16]
   15b00:	movw	r0, #0
   15b04:	strb	r0, [fp, #-25]	; 0xffffffe7
   15b08:	ldr	r0, [fp, #-16]
   15b0c:	ldr	r0, [r0, #44]	; 0x2c
   15b10:	movw	r1, #0
   15b14:	cmp	r1, r0
   15b18:	bne	15b20 <__assert_fail@plt+0x2f68>
   15b1c:	b	15b40 <__assert_fail@plt+0x2f88>
   15b20:	movw	r0, #23638	; 0x5c56
   15b24:	movt	r0, #7
   15b28:	movw	r1, #23677	; 0x5c7d
   15b2c:	movt	r1, #7
   15b30:	movw	r2, #631	; 0x277
   15b34:	movw	r3, #23901	; 0x5d5d
   15b38:	movt	r3, #7
   15b3c:	bl	12bb8 <__assert_fail@plt>
   15b40:	ldr	r0, [fp, #-16]
   15b44:	ldr	r0, [r0, #40]	; 0x28
   15b48:	cmp	r0, #4
   15b4c:	str	r0, [sp, #16]
   15b50:	bhi	15cac <__assert_fail@plt+0x30f4>
   15b54:	add	r0, pc, #8
   15b58:	ldr	r1, [sp, #16]
   15b5c:	ldr	r0, [r0, r1, lsl #2]
   15b60:	mov	pc, r0
   15b64:			; <UNDEFINED> instruction: 0x00015bbc
   15b68:	andeq	r5, r1, r4, ror #23
   15b6c:	andeq	r5, r1, r0, ror #24
   15b70:	andeq	r5, r1, r8, lsl #25
   15b74:	andeq	r5, r1, r8, ror fp
   15b78:	ldr	r0, [fp, #-16]
   15b7c:	ldr	r0, [r0, #40]	; 0x28
   15b80:	cmp	r0, #4
   15b84:	beq	15b8c <__assert_fail@plt+0x2fd4>
   15b88:	b	15bac <__assert_fail@plt+0x2ff4>
   15b8c:	movw	r0, #23969	; 0x5da1
   15b90:	movt	r0, #7
   15b94:	movw	r1, #23677	; 0x5c7d
   15b98:	movt	r1, #7
   15b9c:	movw	r2, #636	; 0x27c
   15ba0:	movw	r3, #23901	; 0x5d5d
   15ba4:	movt	r3, #7
   15ba8:	bl	12bb8 <__assert_fail@plt>
   15bac:	movw	r0, #0
   15bb0:	and	r0, r0, #1
   15bb4:	strb	r0, [fp, #-1]
   15bb8:	b	15d1c <__assert_fail@plt+0x3164>
   15bbc:	ldr	r1, [fp, #-12]
   15bc0:	sub	r0, fp, #36	; 0x24
   15bc4:	bl	49880 <__assert_fail@plt+0x36cc8>
   15bc8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15bcc:	str	r0, [fp, #-24]	; 0xffffffe8
   15bd0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15bd4:	str	r0, [fp, #-20]	; 0xffffffec
   15bd8:	movw	r0, #1
   15bdc:	strb	r0, [fp, #-25]	; 0xffffffe7
   15be0:	b	15cac <__assert_fail@plt+0x30f4>
   15be4:	ldr	r1, [fp, #-12]
   15be8:	add	r0, sp, #36	; 0x24
   15bec:	bl	498ec <__assert_fail@plt+0x36d34>
   15bf0:	ldr	r0, [sp, #36]	; 0x24
   15bf4:	str	r0, [fp, #-24]	; 0xffffffe8
   15bf8:	ldr	r0, [sp, #40]	; 0x28
   15bfc:	str	r0, [fp, #-20]	; 0xffffffec
   15c00:	movw	r0, #1
   15c04:	strb	r0, [fp, #-25]	; 0xffffffe7
   15c08:	ldr	r0, [fp, #-20]	; 0xffffffec
   15c0c:	cmp	r0, #0
   15c10:	bge	15c5c <__assert_fail@plt+0x30a4>
   15c14:	movw	r0, #24010	; 0x5dca
   15c18:	movt	r0, #7
   15c1c:	bl	12864 <gettext@plt>
   15c20:	ldr	r1, [fp, #-8]
   15c24:	movw	r2, #0
   15c28:	str	r0, [sp, #12]
   15c2c:	mov	r0, r2
   15c30:	bl	1d994 <__assert_fail@plt+0xaddc>
   15c34:	movw	r1, #0
   15c38:	str	r0, [sp, #8]
   15c3c:	mov	r0, r1
   15c40:	ldr	r2, [sp, #12]
   15c44:	ldr	r3, [sp, #8]
   15c48:	bl	12780 <error@plt>
   15c4c:	movw	r0, #0
   15c50:	and	r0, r0, #1
   15c54:	strb	r0, [fp, #-1]
   15c58:	b	15d1c <__assert_fail@plt+0x3164>
   15c5c:	b	15cac <__assert_fail@plt+0x30f4>
   15c60:	ldr	r1, [fp, #-12]
   15c64:	add	r0, sp, #28
   15c68:	bl	498a4 <__assert_fail@plt+0x36cec>
   15c6c:	ldr	r0, [sp, #28]
   15c70:	str	r0, [fp, #-24]	; 0xffffffe8
   15c74:	ldr	r0, [sp, #32]
   15c78:	str	r0, [fp, #-20]	; 0xffffffec
   15c7c:	movw	r0, #1
   15c80:	strb	r0, [fp, #-25]	; 0xffffffe7
   15c84:	b	15cac <__assert_fail@plt+0x30f4>
   15c88:	ldr	r1, [fp, #-12]
   15c8c:	add	r0, sp, #20
   15c90:	bl	498c8 <__assert_fail@plt+0x36d10>
   15c94:	ldr	r0, [sp, #20]
   15c98:	str	r0, [fp, #-24]	; 0xffffffe8
   15c9c:	ldr	r0, [sp, #24]
   15ca0:	str	r0, [fp, #-20]	; 0xffffffec
   15ca4:	movw	r0, #1
   15ca8:	strb	r0, [fp, #-25]	; 0xffffffe7
   15cac:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   15cb0:	tst	r0, #1
   15cb4:	beq	15cbc <__assert_fail@plt+0x3104>
   15cb8:	b	15cdc <__assert_fail@plt+0x3124>
   15cbc:	movw	r0, #24058	; 0x5dfa
   15cc0:	movt	r0, #7
   15cc4:	movw	r1, #23677	; 0x5c7d
   15cc8:	movt	r1, #7
   15ccc:	movw	r2, #667	; 0x29b
   15cd0:	movw	r3, #23901	; 0x5d5d
   15cd4:	movt	r3, #7
   15cd8:	bl	12bb8 <__assert_fail@plt>
   15cdc:	ldr	r0, [fp, #-16]
   15ce0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15ce4:	ldr	r2, [fp, #-20]	; 0xffffffec
   15ce8:	ldr	r3, [r0, #48]	; 0x30
   15cec:	ldr	r0, [r0, #52]	; 0x34
   15cf0:	str	r0, [sp, #4]
   15cf4:	mov	r0, r1
   15cf8:	mov	r1, r2
   15cfc:	mov	r2, r3
   15d00:	ldr	r3, [sp, #4]
   15d04:	bl	148f8 <__assert_fail@plt+0x1d40>
   15d08:	cmp	r0, #0
   15d0c:	movw	r0, #0
   15d10:	movgt	r0, #1
   15d14:	and	r0, r0, #1
   15d18:	strb	r0, [fp, #-1]
   15d1c:	ldrb	r0, [fp, #-1]
   15d20:	and	r0, r0, #1
   15d24:	mov	sp, fp
   15d28:	pop	{fp, pc}
   15d2c:	push	{fp, lr}
   15d30:	mov	fp, sp
   15d34:	sub	sp, sp, #16
   15d38:	str	r0, [fp, #-4]
   15d3c:	str	r1, [sp, #8]
   15d40:	str	r2, [sp, #4]
   15d44:	ldr	r0, [sp, #8]
   15d48:	ldr	r0, [r0, #28]
   15d4c:	bl	12b94 <getgrgid@plt>
   15d50:	movw	r1, #0
   15d54:	cmp	r0, r1
   15d58:	movw	r0, #0
   15d5c:	moveq	r0, #1
   15d60:	and	r0, r0, #1
   15d64:	mov	sp, fp
   15d68:	pop	{fp, pc}
   15d6c:	push	{fp, lr}
   15d70:	mov	fp, sp
   15d74:	sub	sp, sp, #16
   15d78:	str	r0, [fp, #-4]
   15d7c:	str	r1, [sp, #8]
   15d80:	str	r2, [sp, #4]
   15d84:	ldr	r0, [sp, #8]
   15d88:	ldr	r0, [r0, #24]
   15d8c:	bl	124e0 <getpwuid@plt>
   15d90:	movw	r1, #0
   15d94:	cmp	r0, r1
   15d98:	movw	r0, #0
   15d9c:	moveq	r0, #1
   15da0:	and	r0, r0, #1
   15da4:	mov	sp, fp
   15da8:	pop	{fp, pc}
   15dac:	push	{fp, lr}
   15db0:	mov	fp, sp
   15db4:	sub	sp, sp, #16
   15db8:	str	r0, [sp, #8]
   15dbc:	str	r1, [sp, #4]
   15dc0:	str	r2, [sp]
   15dc4:	ldr	r0, [sp]
   15dc8:	ldr	r0, [r0, #132]	; 0x84
   15dcc:	ldr	r0, [r0]
   15dd0:	ldr	r1, [sp, #8]
   15dd4:	bl	15e18 <__assert_fail@plt+0x3260>
   15dd8:	tst	r0, #1
   15ddc:	beq	15dfc <__assert_fail@plt+0x3244>
   15de0:	ldr	r0, [sp, #8]
   15de4:	ldr	r1, [sp, #4]
   15de8:	ldr	r2, [sp]
   15dec:	bl	175b0 <__assert_fail@plt+0x49f8>
   15df0:	and	r0, r0, #1
   15df4:	strb	r0, [fp, #-1]
   15df8:	b	15e08 <__assert_fail@plt+0x3250>
   15dfc:	movw	r0, #0
   15e00:	and	r0, r0, #1
   15e04:	strb	r0, [fp, #-1]
   15e08:	ldrb	r0, [fp, #-1]
   15e0c:	and	r0, r0, #1
   15e10:	mov	sp, fp
   15e14:	pop	{fp, pc}
   15e18:	push	{fp, lr}
   15e1c:	mov	fp, sp
   15e20:	sub	sp, sp, #32
   15e24:	str	r0, [fp, #-4]
   15e28:	str	r1, [fp, #-8]
   15e2c:	movw	r0, #55092	; 0xd734
   15e30:	movt	r0, #8
   15e34:	ldr	r0, [r0]
   15e38:	bl	4ea58 <__assert_fail@plt+0x3bea0>
   15e3c:	movw	r1, #55080	; 0xd728
   15e40:	movt	r1, #8
   15e44:	ldr	r1, [r1]
   15e48:	movw	r2, #24726	; 0x6096
   15e4c:	movt	r2, #7
   15e50:	str	r0, [fp, #-12]
   15e54:	mov	r0, r2
   15e58:	str	r1, [sp, #16]
   15e5c:	bl	12864 <gettext@plt>
   15e60:	ldr	r2, [fp, #-4]
   15e64:	ldr	r3, [fp, #-8]
   15e68:	ldr	r1, [sp, #16]
   15e6c:	str	r0, [sp, #12]
   15e70:	mov	r0, r1
   15e74:	ldr	r1, [sp, #12]
   15e78:	bl	128c4 <fprintf@plt>
   15e7c:	cmp	r0, #0
   15e80:	bge	15eb4 <__assert_fail@plt+0x32fc>
   15e84:	bl	128d0 <__errno_location@plt>
   15e88:	ldr	r1, [r0]
   15e8c:	movw	r0, #24743	; 0x60a7
   15e90:	movt	r0, #7
   15e94:	str	r1, [sp, #8]
   15e98:	bl	12864 <gettext@plt>
   15e9c:	movw	r1, #1
   15ea0:	str	r0, [sp, #4]
   15ea4:	mov	r0, r1
   15ea8:	ldr	r1, [sp, #8]
   15eac:	ldr	r2, [sp, #4]
   15eb0:	bl	12780 <error@plt>
   15eb4:	movw	r0, #55080	; 0xd728
   15eb8:	movt	r0, #8
   15ebc:	ldr	r0, [r0]
   15ec0:	bl	4ea58 <__assert_fail@plt+0x3bea0>
   15ec4:	str	r0, [sp]
   15ec8:	bl	4e028 <__assert_fail@plt+0x3b470>
   15ecc:	and	r0, r0, #1
   15ed0:	mov	sp, fp
   15ed4:	pop	{fp, pc}
   15ed8:	push	{fp, lr}
   15edc:	mov	fp, sp
   15ee0:	sub	sp, sp, #16
   15ee4:	str	r0, [sp, #8]
   15ee8:	str	r1, [sp, #4]
   15eec:	str	r2, [sp]
   15ef0:	ldr	r0, [sp]
   15ef4:	ldr	r0, [r0, #132]	; 0x84
   15ef8:	ldr	r0, [r0]
   15efc:	ldr	r1, [sp, #8]
   15f00:	bl	15e18 <__assert_fail@plt+0x3260>
   15f04:	tst	r0, #1
   15f08:	beq	15f30 <__assert_fail@plt+0x3378>
   15f0c:	movw	r0, #57436	; 0xe05c
   15f10:	movt	r0, #8
   15f14:	ldr	r0, [r0, #12]
   15f18:	ldr	r1, [sp, #4]
   15f1c:	ldr	r2, [sp]
   15f20:	bl	175b0 <__assert_fail@plt+0x49f8>
   15f24:	and	r0, r0, #1
   15f28:	strb	r0, [fp, #-1]
   15f2c:	b	15f3c <__assert_fail@plt+0x3384>
   15f30:	movw	r0, #0
   15f34:	and	r0, r0, #1
   15f38:	strb	r0, [fp, #-1]
   15f3c:	ldrb	r0, [fp, #-1]
   15f40:	and	r0, r0, #1
   15f44:	mov	sp, fp
   15f48:	pop	{fp, pc}
   15f4c:	sub	sp, sp, #12
   15f50:	str	r0, [sp, #8]
   15f54:	str	r1, [sp, #4]
   15f58:	str	r2, [sp]
   15f5c:	movw	r0, #1
   15f60:	and	r0, r0, #1
   15f64:	add	sp, sp, #12
   15f68:	bx	lr
   15f6c:	push	{fp, lr}
   15f70:	mov	fp, sp
   15f74:	sub	sp, sp, #16
   15f78:	str	r0, [sp, #8]
   15f7c:	str	r1, [sp, #4]
   15f80:	str	r2, [sp]
   15f84:	ldr	r0, [sp]
   15f88:	ldr	r0, [r0, #156]	; 0x9c
   15f8c:	movw	r1, #0
   15f90:	cmp	r0, r1
   15f94:	beq	15fb4 <__assert_fail@plt+0x33fc>
   15f98:	ldr	r0, [sp, #8]
   15f9c:	ldr	r1, [sp, #4]
   15fa0:	ldr	r2, [sp]
   15fa4:	ldr	r2, [r2, #156]	; 0x9c
   15fa8:	bl	1d708 <__assert_fail@plt+0xab50>
   15fac:	tst	r0, #1
   15fb0:	bne	15fd4 <__assert_fail@plt+0x341c>
   15fb4:	ldr	r0, [sp, #8]
   15fb8:	ldr	r1, [sp, #4]
   15fbc:	ldr	r2, [sp]
   15fc0:	ldr	r2, [r2, #160]	; 0xa0
   15fc4:	bl	1d708 <__assert_fail@plt+0xab50>
   15fc8:	and	r0, r0, #1
   15fcc:	strb	r0, [fp, #-1]
   15fd0:	b	15fe0 <__assert_fail@plt+0x3428>
   15fd4:	movw	r0, #1
   15fd8:	and	r0, r0, #1
   15fdc:	strb	r0, [fp, #-1]
   15fe0:	ldrb	r0, [fp, #-1]
   15fe4:	and	r0, r0, #1
   15fe8:	mov	sp, fp
   15fec:	pop	{fp, pc}
   15ff0:	push	{fp, lr}
   15ff4:	mov	fp, sp
   15ff8:	sub	sp, sp, #16
   15ffc:	str	r0, [sp, #8]
   16000:	str	r1, [sp, #4]
   16004:	str	r2, [sp]
   16008:	ldr	r0, [sp]
   1600c:	ldr	r0, [r0, #40]	; 0x28
   16010:	ldr	r1, [sp, #8]
   16014:	movw	r2, #0
   16018:	bl	127a4 <fnmatch@plt>
   1601c:	cmp	r0, #0
   16020:	bne	16034 <__assert_fail@plt+0x347c>
   16024:	movw	r0, #1
   16028:	and	r0, r0, #1
   1602c:	strb	r0, [fp, #-1]
   16030:	b	16040 <__assert_fail@plt+0x3488>
   16034:	movw	r0, #0
   16038:	and	r0, r0, #1
   1603c:	strb	r0, [fp, #-1]
   16040:	ldrb	r0, [fp, #-1]
   16044:	and	r0, r0, #1
   16048:	mov	sp, fp
   1604c:	pop	{fp, pc}
   16050:	push	{fp, lr}
   16054:	mov	fp, sp
   16058:	sub	sp, sp, #32
   1605c:	str	r0, [fp, #-8]
   16060:	str	r1, [fp, #-12]
   16064:	str	r2, [sp, #16]
   16068:	ldr	r0, [fp, #-12]
   1606c:	ldr	r0, [r0, #16]
   16070:	str	r0, [sp, #12]
   16074:	ldr	r0, [sp, #16]
   16078:	ldr	r1, [sp, #12]
   1607c:	and	r1, r1, #61440	; 0xf000
   16080:	sub	r1, r1, #16384	; 0x4000
   16084:	clz	r1, r1
   16088:	lsr	r1, r1, #5
   1608c:	add	r0, r0, r1, lsl #2
   16090:	ldr	r0, [r0, #44]	; 0x2c
   16094:	str	r0, [sp, #8]
   16098:	ldr	r0, [sp, #16]
   1609c:	ldr	r0, [r0, #40]	; 0x28
   160a0:	cmp	r0, #0
   160a4:	str	r0, [sp, #4]
   160a8:	beq	160d0 <__assert_fail@plt+0x3518>
   160ac:	b	160b0 <__assert_fail@plt+0x34f8>
   160b0:	ldr	r0, [sp, #4]
   160b4:	cmp	r0, #1
   160b8:	beq	160f8 <__assert_fail@plt+0x3540>
   160bc:	b	160c0 <__assert_fail@plt+0x3508>
   160c0:	ldr	r0, [sp, #4]
   160c4:	cmp	r0, #2
   160c8:	beq	1613c <__assert_fail@plt+0x3584>
   160cc:	b	16164 <__assert_fail@plt+0x35ac>
   160d0:	ldr	r0, [sp, #12]
   160d4:	ldr	r1, [sp, #8]
   160d8:	and	r0, r0, r1
   160dc:	ldr	r1, [sp, #8]
   160e0:	cmp	r0, r1
   160e4:	movw	r0, #0
   160e8:	moveq	r0, #1
   160ec:	and	r0, r0, #1
   160f0:	strb	r0, [fp, #-1]
   160f4:	b	16168 <__assert_fail@plt+0x35b0>
   160f8:	ldr	r0, [sp, #8]
   160fc:	movw	r1, #0
   16100:	cmp	r1, r0
   16104:	bne	16118 <__assert_fail@plt+0x3560>
   16108:	movw	r0, #1
   1610c:	and	r0, r0, #1
   16110:	strb	r0, [fp, #-1]
   16114:	b	16168 <__assert_fail@plt+0x35b0>
   16118:	ldr	r0, [sp, #12]
   1611c:	ldr	r1, [sp, #8]
   16120:	and	r0, r0, r1
   16124:	cmp	r0, #0
   16128:	movw	r0, #0
   1612c:	movne	r0, #1
   16130:	and	r0, r0, #1
   16134:	strb	r0, [fp, #-1]
   16138:	b	16168 <__assert_fail@plt+0x35b0>
   1613c:	ldr	r0, [sp, #12]
   16140:	movw	r1, #4095	; 0xfff
   16144:	and	r0, r0, r1
   16148:	ldr	r1, [sp, #8]
   1614c:	cmp	r0, r1
   16150:	movw	r0, #0
   16154:	moveq	r0, #1
   16158:	and	r0, r0, #1
   1615c:	strb	r0, [fp, #-1]
   16160:	b	16168 <__assert_fail@plt+0x35b0>
   16164:	bl	12b64 <abort@plt>
   16168:	ldrb	r0, [fp, #-1]
   1616c:	and	r0, r0, #1
   16170:	mov	sp, fp
   16174:	pop	{fp, pc}
   16178:	push	{fp, lr}
   1617c:	mov	fp, sp
   16180:	sub	sp, sp, #16
   16184:	str	r0, [fp, #-4]
   16188:	str	r1, [sp, #8]
   1618c:	str	r2, [sp, #4]
   16190:	movw	r0, #57436	; 0xe05c
   16194:	movt	r0, #8
   16198:	ldr	r1, [r0, #16]
   1619c:	ldr	r0, [r0, #12]
   161a0:	str	r0, [sp]
   161a4:	mov	r0, r1
   161a8:	ldr	r1, [sp]
   161ac:	movw	r2, #1
   161b0:	movw	r3, #0
   161b4:	bl	1257c <faccessat@plt>
   161b8:	movw	r1, #0
   161bc:	cmp	r1, r0
   161c0:	movw	r0, #0
   161c4:	moveq	r0, #1
   161c8:	and	r0, r0, #1
   161cc:	mov	sp, fp
   161d0:	pop	{fp, pc}
   161d4:	push	{fp, lr}
   161d8:	mov	fp, sp
   161dc:	sub	sp, sp, #16
   161e0:	str	r0, [fp, #-4]
   161e4:	str	r1, [sp, #8]
   161e8:	str	r2, [sp, #4]
   161ec:	movw	r0, #57436	; 0xe05c
   161f0:	movt	r0, #8
   161f4:	ldr	r1, [r0, #16]
   161f8:	ldr	r0, [r0, #12]
   161fc:	str	r0, [sp]
   16200:	mov	r0, r1
   16204:	ldr	r1, [sp]
   16208:	movw	r2, #4
   1620c:	movw	r3, #0
   16210:	bl	1257c <faccessat@plt>
   16214:	movw	r1, #0
   16218:	cmp	r1, r0
   1621c:	movw	r0, #0
   16220:	moveq	r0, #1
   16224:	and	r0, r0, #1
   16228:	mov	sp, fp
   1622c:	pop	{fp, pc}
   16230:	push	{fp, lr}
   16234:	mov	fp, sp
   16238:	sub	sp, sp, #16
   1623c:	str	r0, [fp, #-4]
   16240:	str	r1, [sp, #8]
   16244:	str	r2, [sp, #4]
   16248:	movw	r0, #57436	; 0xe05c
   1624c:	movt	r0, #8
   16250:	ldr	r1, [r0, #16]
   16254:	ldr	r0, [r0, #12]
   16258:	str	r0, [sp]
   1625c:	mov	r0, r1
   16260:	ldr	r1, [sp]
   16264:	movw	r2, #2
   16268:	movw	r3, #0
   1626c:	bl	1257c <faccessat@plt>
   16270:	movw	r1, #0
   16274:	cmp	r1, r0
   16278:	movw	r0, #0
   1627c:	moveq	r0, #1
   16280:	and	r0, r0, #1
   16284:	mov	sp, fp
   16288:	pop	{fp, pc}
   1628c:	push	{fp, lr}
   16290:	mov	fp, sp
   16294:	sub	sp, sp, #24
   16298:	str	r0, [fp, #-4]
   1629c:	str	r1, [fp, #-8]
   162a0:	str	r2, [sp, #12]
   162a4:	ldr	r0, [sp, #12]
   162a8:	ldr	r0, [r0, #44]	; 0x2c
   162ac:	ldr	r1, [sp, #12]
   162b0:	ldr	r1, [r1, #56]	; 0x38
   162b4:	ldr	r2, [sp, #12]
   162b8:	ldrb	r2, [r2, #52]	; 0x34
   162bc:	ldr	r3, [fp, #-4]
   162c0:	and	r2, r2, #1
   162c4:	movw	ip, #47760	; 0xba90
   162c8:	movt	ip, #7
   162cc:	str	r3, [sp, #8]
   162d0:	mov	r3, ip
   162d4:	ldr	ip, [sp, #8]
   162d8:	str	ip, [sp]
   162dc:	bl	2abcc <__assert_fail@plt+0x18014>
   162e0:	movw	r1, #1
   162e4:	and	r1, r1, #1
   162e8:	str	r0, [sp, #4]
   162ec:	mov	r0, r1
   162f0:	mov	sp, fp
   162f4:	pop	{fp, pc}
   162f8:	push	{fp, lr}
   162fc:	mov	fp, sp
   16300:	sub	sp, sp, #16
   16304:	str	r0, [fp, #-4]
   16308:	str	r1, [sp, #8]
   1630c:	str	r2, [sp, #4]
   16310:	ldr	r0, [fp, #-4]
   16314:	ldr	r1, [sp, #8]
   16318:	ldr	r2, [sp, #4]
   1631c:	bl	15258 <__assert_fail@plt+0x26a0>
   16320:	and	r0, r0, #1
   16324:	mov	sp, fp
   16328:	pop	{fp, pc}
   1632c:	push	{fp, lr}
   16330:	mov	fp, sp
   16334:	sub	sp, sp, #16
   16338:	str	r0, [fp, #-4]
   1633c:	str	r1, [sp, #8]
   16340:	str	r2, [sp, #4]
   16344:	movw	r0, #57480	; 0xe088
   16348:	movt	r0, #8
   1634c:	ldrb	r0, [r0]
   16350:	and	r0, r0, #1
   16354:	cmp	r0, #1
   16358:	bne	163cc <__assert_fail@plt+0x3814>
   1635c:	movw	r0, #57436	; 0xe05c
   16360:	movt	r0, #8
   16364:	ldrb	r0, [r0, #4]
   16368:	tst	r0, #1
   1636c:	beq	16374 <__assert_fail@plt+0x37bc>
   16370:	b	16394 <__assert_fail@plt+0x37dc>
   16374:	movw	r0, #23091	; 0x5a33
   16378:	movt	r0, #7
   1637c:	movw	r1, #23677	; 0x5c7d
   16380:	movt	r1, #7
   16384:	movw	r2, #853	; 0x355
   16388:	movw	r3, #24068	; 0x5e04
   1638c:	movt	r3, #7
   16390:	bl	12bb8 <__assert_fail@plt>
   16394:	ldr	r0, [sp, #8]
   16398:	movw	r1, #0
   1639c:	cmp	r0, r1
   163a0:	beq	163c8 <__assert_fail@plt+0x3810>
   163a4:	ldr	r0, [sp, #8]
   163a8:	ldr	r0, [r0, #16]
   163ac:	and	r0, r0, #61440	; 0xf000
   163b0:	cmp	r0, #16384	; 0x4000
   163b4:	bne	163c8 <__assert_fail@plt+0x3810>
   163b8:	movw	r0, #57436	; 0xe05c
   163bc:	movt	r0, #8
   163c0:	movw	r1, #1
   163c4:	strb	r1, [r0, #24]
   163c8:	b	163cc <__assert_fail@plt+0x3814>
   163cc:	movw	r0, #1
   163d0:	and	r0, r0, #1
   163d4:	mov	sp, fp
   163d8:	pop	{fp, pc}
   163dc:	push	{fp, lr}
   163e0:	mov	fp, sp
   163e4:	sub	sp, sp, #16
   163e8:	str	r0, [fp, #-4]
   163ec:	str	r1, [sp, #8]
   163f0:	str	r2, [sp, #4]
   163f4:	bl	1c348 <__assert_fail@plt+0x9790>
   163f8:	movw	r0, #57436	; 0xe05c
   163fc:	movt	r0, #8
   16400:	ldr	r0, [r0, #28]
   16404:	bl	1284c <exit@plt>
   16408:	push	{fp, lr}
   1640c:	mov	fp, sp
   16410:	sub	sp, sp, #32
   16414:	str	r0, [fp, #-8]
   16418:	str	r1, [fp, #-12]
   1641c:	str	r2, [sp, #16]
   16420:	ldr	r0, [fp, #-8]
   16424:	bl	12888 <strlen@plt>
   16428:	str	r0, [sp, #12]
   1642c:	ldr	r0, [sp, #16]
   16430:	ldr	r0, [r0, #40]	; 0x28
   16434:	ldr	r1, [fp, #-8]
   16438:	ldr	r2, [sp, #12]
   1643c:	movw	r3, #0
   16440:	str	r3, [sp, #8]
   16444:	ldr	ip, [sp, #8]
   16448:	str	ip, [sp]
   1644c:	bl	570b8 <__assert_fail@plt+0x44500>
   16450:	ldr	r1, [sp, #12]
   16454:	cmp	r0, r1
   16458:	bne	1646c <__assert_fail@plt+0x38b4>
   1645c:	movw	r0, #1
   16460:	and	r0, r0, #1
   16464:	strb	r0, [fp, #-1]
   16468:	b	16478 <__assert_fail@plt+0x38c0>
   1646c:	movw	r0, #0
   16470:	and	r0, r0, #1
   16474:	strb	r0, [fp, #-1]
   16478:	ldrb	r0, [fp, #-1]
   1647c:	and	r0, r0, #1
   16480:	mov	sp, fp
   16484:	pop	{fp, pc}
   16488:	push	{fp, lr}
   1648c:	mov	fp, sp
   16490:	sub	sp, sp, #32
   16494:	str	r0, [fp, #-8]
   16498:	str	r1, [fp, #-12]
   1649c:	str	r2, [sp, #16]
   164a0:	ldr	r0, [fp, #-12]
   164a4:	ldr	r1, [r0, #48]	; 0x30
   164a8:	ldr	r0, [r0, #52]	; 0x34
   164ac:	ldr	r2, [sp, #16]
   164b0:	ldr	r2, [r2, #44]	; 0x2c
   164b4:	asr	r3, r2, #31
   164b8:	str	r0, [sp, #4]
   164bc:	mov	r0, r1
   164c0:	ldr	r1, [sp, #4]
   164c4:	bl	75338 <__assert_fail@plt+0x62780>
   164c8:	orr	r2, r2, r3
   164cc:	adds	r3, r0, #1
   164d0:	adc	ip, r1, #0
   164d4:	cmp	r2, #0
   164d8:	movne	r0, r3
   164dc:	cmp	r2, #0
   164e0:	movne	r1, ip
   164e4:	str	r0, [sp, #8]
   164e8:	str	r1, [sp, #12]
   164ec:	ldr	r0, [sp, #16]
   164f0:	ldr	r0, [r0, #40]	; 0x28
   164f4:	cmp	r0, #0
   164f8:	str	r0, [sp]
   164fc:	beq	16524 <__assert_fail@plt+0x396c>
   16500:	b	16504 <__assert_fail@plt+0x394c>
   16504:	ldr	r0, [sp]
   16508:	cmp	r0, #1
   1650c:	beq	1655c <__assert_fail@plt+0x39a4>
   16510:	b	16514 <__assert_fail@plt+0x395c>
   16514:	ldr	r0, [sp]
   16518:	cmp	r0, #2
   1651c:	beq	16594 <__assert_fail@plt+0x39dc>
   16520:	b	165d4 <__assert_fail@plt+0x3a1c>
   16524:	ldr	r0, [sp, #8]
   16528:	ldr	r1, [sp, #12]
   1652c:	ldr	r2, [sp, #16]
   16530:	ldr	r3, [r2, #48]	; 0x30
   16534:	ldr	r2, [r2, #52]	; 0x34
   16538:	subs	r0, r3, r0
   1653c:	sbcs	r1, r2, r1
   16540:	bcs	16558 <__assert_fail@plt+0x39a0>
   16544:	b	16548 <__assert_fail@plt+0x3990>
   16548:	movw	r0, #1
   1654c:	and	r0, r0, #1
   16550:	strb	r0, [fp, #-1]
   16554:	b	165e0 <__assert_fail@plt+0x3a28>
   16558:	b	165d4 <__assert_fail@plt+0x3a1c>
   1655c:	ldr	r0, [sp, #8]
   16560:	ldr	r1, [sp, #12]
   16564:	ldr	r2, [sp, #16]
   16568:	ldr	r3, [r2, #48]	; 0x30
   1656c:	ldr	r2, [r2, #52]	; 0x34
   16570:	subs	r0, r0, r3
   16574:	sbcs	r1, r1, r2
   16578:	bcs	16590 <__assert_fail@plt+0x39d8>
   1657c:	b	16580 <__assert_fail@plt+0x39c8>
   16580:	movw	r0, #1
   16584:	and	r0, r0, #1
   16588:	strb	r0, [fp, #-1]
   1658c:	b	165e0 <__assert_fail@plt+0x3a28>
   16590:	b	165d4 <__assert_fail@plt+0x3a1c>
   16594:	ldr	r0, [sp, #8]
   16598:	ldr	r1, [sp, #12]
   1659c:	ldr	r2, [sp, #16]
   165a0:	ldr	r3, [r2, #48]	; 0x30
   165a4:	ldr	r2, [r2, #52]	; 0x34
   165a8:	eor	r1, r1, r2
   165ac:	eor	r0, r0, r3
   165b0:	orr	r0, r0, r1
   165b4:	cmp	r0, #0
   165b8:	bne	165d0 <__assert_fail@plt+0x3a18>
   165bc:	b	165c0 <__assert_fail@plt+0x3a08>
   165c0:	movw	r0, #1
   165c4:	and	r0, r0, #1
   165c8:	strb	r0, [fp, #-1]
   165cc:	b	165e0 <__assert_fail@plt+0x3a28>
   165d0:	b	165d4 <__assert_fail@plt+0x3a1c>
   165d4:	movw	r0, #0
   165d8:	and	r0, r0, #1
   165dc:	strb	r0, [fp, #-1]
   165e0:	ldrb	r0, [fp, #-1]
   165e4:	and	r0, r0, #1
   165e8:	mov	sp, fp
   165ec:	pop	{fp, pc}
   165f0:	push	{fp, lr}
   165f4:	mov	fp, sp
   165f8:	sub	sp, sp, #24
   165fc:	str	r0, [fp, #-8]
   16600:	str	r1, [sp, #12]
   16604:	str	r2, [sp, #8]
   16608:	ldr	r0, [sp, #12]
   1660c:	ldr	r1, [r0, #96]	; 0x60
   16610:	ldr	r0, [r0, #100]	; 0x64
   16614:	orr	r0, r1, r0
   16618:	cmp	r0, #0
   1661c:	beq	16668 <__assert_fail@plt+0x3ab0>
   16620:	b	16624 <__assert_fail@plt+0x3a6c>
   16624:	ldr	r0, [sp, #12]
   16628:	ldr	r1, [r0, #96]	; 0x60
   1662c:	ldr	r0, [r0, #100]	; 0x64
   16630:	ldr	r2, [sp, #8]
   16634:	ldr	r3, [r2, #40]	; 0x28
   16638:	ldr	r2, [r2, #44]	; 0x2c
   1663c:	eor	r0, r0, r2
   16640:	eor	r1, r1, r3
   16644:	orr	r0, r1, r0
   16648:	cmp	r0, #0
   1664c:	beq	16664 <__assert_fail@plt+0x3aac>
   16650:	b	16654 <__assert_fail@plt+0x3a9c>
   16654:	movw	r0, #0
   16658:	and	r0, r0, #1
   1665c:	strb	r0, [fp, #-1]
   16660:	b	16710 <__assert_fail@plt+0x3b58>
   16664:	b	16668 <__assert_fail@plt+0x3ab0>
   16668:	ldr	r0, [fp, #-8]
   1666c:	movw	r1, #57436	; 0xe05c
   16670:	movt	r1, #8
   16674:	ldr	r1, [r1, #12]
   16678:	ldr	r2, [sp, #12]
   1667c:	bl	1bdcc <__assert_fail@plt+0x9214>
   16680:	movw	r1, #0
   16684:	cmp	r1, r0
   16688:	bne	16704 <__assert_fail@plt+0x3b4c>
   1668c:	ldr	r0, [sp, #12]
   16690:	ldr	r1, [r0, #96]	; 0x60
   16694:	ldr	r0, [r0, #100]	; 0x64
   16698:	ldr	r2, [sp, #8]
   1669c:	ldr	r3, [r2, #40]	; 0x28
   166a0:	ldr	r2, [r2, #44]	; 0x2c
   166a4:	eor	r0, r0, r2
   166a8:	eor	r1, r1, r3
   166ac:	orr	r0, r1, r0
   166b0:	mov	r1, #0
   166b4:	cmp	r0, #0
   166b8:	str	r1, [sp, #4]
   166bc:	bne	166f4 <__assert_fail@plt+0x3b3c>
   166c0:	b	166c4 <__assert_fail@plt+0x3b0c>
   166c4:	ldr	r0, [sp, #12]
   166c8:	ldr	r1, [r0]
   166cc:	ldr	r0, [r0, #4]
   166d0:	ldr	r2, [sp, #8]
   166d4:	ldr	r3, [r2, #48]	; 0x30
   166d8:	ldr	r2, [r2, #52]	; 0x34
   166dc:	eor	r0, r0, r2
   166e0:	eor	r1, r1, r3
   166e4:	orr	r0, r1, r0
   166e8:	clz	r0, r0
   166ec:	lsr	r0, r0, #5
   166f0:	str	r0, [sp, #4]
   166f4:	ldr	r0, [sp, #4]
   166f8:	and	r0, r0, #1
   166fc:	strb	r0, [fp, #-1]
   16700:	b	16710 <__assert_fail@plt+0x3b58>
   16704:	movw	r0, #0
   16708:	and	r0, r0, #1
   1670c:	strb	r0, [fp, #-1]
   16710:	ldrb	r0, [fp, #-1]
   16714:	and	r0, r0, #1
   16718:	mov	sp, fp
   1671c:	pop	{fp, pc}
   16720:	sub	sp, sp, #12
   16724:	str	r0, [sp, #8]
   16728:	str	r1, [sp, #4]
   1672c:	str	r2, [sp]
   16730:	movw	r0, #1
   16734:	and	r0, r0, #1
   16738:	add	sp, sp, #12
   1673c:	bx	lr
   16740:	push	{fp, lr}
   16744:	mov	fp, sp
   16748:	sub	sp, sp, #32
   1674c:	str	r0, [fp, #-8]
   16750:	str	r1, [fp, #-12]
   16754:	str	r2, [sp, #16]
   16758:	movw	r0, #7
   1675c:	str	r0, [sp, #8]
   16760:	movw	r0, #57436	; 0xe05c
   16764:	movt	r0, #8
   16768:	ldrb	r0, [r0, #5]
   1676c:	tst	r0, #1
   16770:	beq	16778 <__assert_fail@plt+0x3bc0>
   16774:	b	16798 <__assert_fail@plt+0x3be0>
   16778:	movw	r0, #24134	; 0x5e46
   1677c:	movt	r0, #7
   16780:	movw	r1, #23677	; 0x5c7d
   16784:	movt	r1, #7
   16788:	movw	r2, #977	; 0x3d1
   1678c:	movw	r3, #24150	; 0x5e56
   16790:	movt	r3, #7
   16794:	bl	12bb8 <__assert_fail@plt>
   16798:	movw	r0, #57436	; 0xe05c
   1679c:	movt	r0, #8
   167a0:	ldr	r0, [r0, #8]
   167a4:	movw	r1, #0
   167a8:	cmp	r1, r0
   167ac:	bne	167c0 <__assert_fail@plt+0x3c08>
   167b0:	movw	r0, #0
   167b4:	and	r0, r0, #1
   167b8:	strb	r0, [fp, #-1]
   167bc:	b	16900 <__assert_fail@plt+0x3d48>
   167c0:	movw	r0, #57436	; 0xe05c
   167c4:	movt	r0, #8
   167c8:	ldrb	r0, [r0, #4]
   167cc:	tst	r0, #1
   167d0:	beq	167e4 <__assert_fail@plt+0x3c2c>
   167d4:	ldr	r0, [fp, #-12]
   167d8:	ldr	r0, [r0, #16]
   167dc:	str	r0, [sp, #12]
   167e0:	b	167f4 <__assert_fail@plt+0x3c3c>
   167e4:	movw	r0, #57436	; 0xe05c
   167e8:	movt	r0, #8
   167ec:	ldr	r0, [r0, #8]
   167f0:	str	r0, [sp, #12]
   167f4:	ldr	r0, [sp, #12]
   167f8:	and	r0, r0, #61440	; 0xf000
   167fc:	cmp	r0, #4096	; 0x1000
   16800:	str	r0, [sp, #4]
   16804:	beq	168b4 <__assert_fail@plt+0x3cfc>
   16808:	b	1680c <__assert_fail@plt+0x3c54>
   1680c:	ldr	r0, [sp, #4]
   16810:	cmp	r0, #8192	; 0x2000
   16814:	beq	1689c <__assert_fail@plt+0x3ce4>
   16818:	b	1681c <__assert_fail@plt+0x3c64>
   1681c:	ldr	r0, [sp, #4]
   16820:	cmp	r0, #16384	; 0x4000
   16824:	beq	16878 <__assert_fail@plt+0x3cc0>
   16828:	b	1682c <__assert_fail@plt+0x3c74>
   1682c:	ldr	r0, [sp, #4]
   16830:	cmp	r0, #24576	; 0x6000
   16834:	beq	16890 <__assert_fail@plt+0x3cd8>
   16838:	b	1683c <__assert_fail@plt+0x3c84>
   1683c:	ldr	r0, [sp, #4]
   16840:	cmp	r0, #32768	; 0x8000
   16844:	beq	1686c <__assert_fail@plt+0x3cb4>
   16848:	b	1684c <__assert_fail@plt+0x3c94>
   1684c:	ldr	r0, [sp, #4]
   16850:	cmp	r0, #40960	; 0xa000
   16854:	beq	16884 <__assert_fail@plt+0x3ccc>
   16858:	b	1685c <__assert_fail@plt+0x3ca4>
   1685c:	ldr	r0, [sp, #4]
   16860:	cmp	r0, #49152	; 0xc000
   16864:	beq	168a8 <__assert_fail@plt+0x3cf0>
   16868:	b	168bc <__assert_fail@plt+0x3d04>
   1686c:	movw	r0, #3
   16870:	str	r0, [sp, #8]
   16874:	b	168bc <__assert_fail@plt+0x3d04>
   16878:	movw	r0, #2
   1687c:	str	r0, [sp, #8]
   16880:	b	168bc <__assert_fail@plt+0x3d04>
   16884:	movw	r0, #4
   16888:	str	r0, [sp, #8]
   1688c:	b	168bc <__assert_fail@plt+0x3d04>
   16890:	movw	r0, #0
   16894:	str	r0, [sp, #8]
   16898:	b	168bc <__assert_fail@plt+0x3d04>
   1689c:	movw	r0, #1
   168a0:	str	r0, [sp, #8]
   168a4:	b	168bc <__assert_fail@plt+0x3d04>
   168a8:	movw	r0, #6
   168ac:	str	r0, [sp, #8]
   168b0:	b	168bc <__assert_fail@plt+0x3d04>
   168b4:	movw	r0, #5
   168b8:	str	r0, [sp, #8]
   168bc:	ldr	r0, [sp, #8]
   168c0:	cmp	r0, #7
   168c4:	beq	168f4 <__assert_fail@plt+0x3d3c>
   168c8:	ldr	r0, [sp, #16]
   168cc:	add	r0, r0, #40	; 0x28
   168d0:	ldr	r1, [sp, #8]
   168d4:	add	r0, r0, r1
   168d8:	ldrb	r0, [r0]
   168dc:	tst	r0, #1
   168e0:	beq	168f4 <__assert_fail@plt+0x3d3c>
   168e4:	movw	r0, #1
   168e8:	and	r0, r0, #1
   168ec:	strb	r0, [fp, #-1]
   168f0:	b	16900 <__assert_fail@plt+0x3d48>
   168f4:	movw	r0, #0
   168f8:	and	r0, r0, #1
   168fc:	strb	r0, [fp, #-1]
   16900:	ldrb	r0, [fp, #-1]
   16904:	and	r0, r0, #1
   16908:	mov	sp, fp
   1690c:	pop	{fp, pc}
   16910:	sub	sp, sp, #20
   16914:	str	r0, [sp, #12]
   16918:	str	r1, [sp, #8]
   1691c:	str	r2, [sp, #4]
   16920:	ldr	r0, [sp, #4]
   16924:	ldr	r0, [r0, #40]	; 0x28
   16928:	cmp	r0, #0
   1692c:	str	r0, [sp]
   16930:	beq	16958 <__assert_fail@plt+0x3da0>
   16934:	b	16938 <__assert_fail@plt+0x3d80>
   16938:	ldr	r0, [sp]
   1693c:	cmp	r0, #1
   16940:	beq	16990 <__assert_fail@plt+0x3dd8>
   16944:	b	16948 <__assert_fail@plt+0x3d90>
   16948:	ldr	r0, [sp]
   1694c:	cmp	r0, #2
   16950:	beq	169c8 <__assert_fail@plt+0x3e10>
   16954:	b	16a04 <__assert_fail@plt+0x3e4c>
   16958:	ldr	r0, [sp, #8]
   1695c:	ldr	r0, [r0, #24]
   16960:	ldr	r1, [sp, #4]
   16964:	ldr	r2, [r1, #48]	; 0x30
   16968:	ldr	r1, [r1, #52]	; 0x34
   1696c:	subs	r0, r2, r0
   16970:	sbcs	r1, r1, #0
   16974:	bcs	1698c <__assert_fail@plt+0x3dd4>
   16978:	b	1697c <__assert_fail@plt+0x3dc4>
   1697c:	movw	r0, #1
   16980:	and	r0, r0, #1
   16984:	strb	r0, [sp, #19]
   16988:	b	16a10 <__assert_fail@plt+0x3e58>
   1698c:	b	16a04 <__assert_fail@plt+0x3e4c>
   16990:	ldr	r0, [sp, #8]
   16994:	ldr	r0, [r0, #24]
   16998:	ldr	r1, [sp, #4]
   1699c:	ldr	r2, [r1, #48]	; 0x30
   169a0:	ldr	r1, [r1, #52]	; 0x34
   169a4:	subs	r0, r0, r2
   169a8:	rscs	r1, r1, #0
   169ac:	bcs	169c4 <__assert_fail@plt+0x3e0c>
   169b0:	b	169b4 <__assert_fail@plt+0x3dfc>
   169b4:	movw	r0, #1
   169b8:	and	r0, r0, #1
   169bc:	strb	r0, [sp, #19]
   169c0:	b	16a10 <__assert_fail@plt+0x3e58>
   169c4:	b	16a04 <__assert_fail@plt+0x3e4c>
   169c8:	ldr	r0, [sp, #8]
   169cc:	ldr	r0, [r0, #24]
   169d0:	ldr	r1, [sp, #4]
   169d4:	ldr	r2, [r1, #48]	; 0x30
   169d8:	ldr	r1, [r1, #52]	; 0x34
   169dc:	eor	r0, r0, r2
   169e0:	orr	r0, r0, r1
   169e4:	cmp	r0, #0
   169e8:	bne	16a00 <__assert_fail@plt+0x3e48>
   169ec:	b	169f0 <__assert_fail@plt+0x3e38>
   169f0:	movw	r0, #1
   169f4:	and	r0, r0, #1
   169f8:	strb	r0, [sp, #19]
   169fc:	b	16a10 <__assert_fail@plt+0x3e58>
   16a00:	b	16a04 <__assert_fail@plt+0x3e4c>
   16a04:	movw	r0, #0
   16a08:	and	r0, r0, #1
   16a0c:	strb	r0, [sp, #19]
   16a10:	ldrb	r0, [sp, #19]
   16a14:	and	r0, r0, #1
   16a18:	add	sp, sp, #20
   16a1c:	bx	lr
   16a20:	push	{fp, lr}
   16a24:	mov	fp, sp
   16a28:	sub	sp, sp, #56	; 0x38
   16a2c:	str	r0, [fp, #-8]
   16a30:	str	r1, [fp, #-12]
   16a34:	str	r2, [fp, #-16]
   16a38:	ldr	r1, [fp, #-12]
   16a3c:	add	r0, sp, #8
   16a40:	bl	49880 <__assert_fail@plt+0x36cc8>
   16a44:	vldr	d16, [sp, #8]
   16a48:	vstr	d16, [sp, #24]
   16a4c:	ldr	r1, [fp, #-12]
   16a50:	mov	r0, sp
   16a54:	bl	498a4 <__assert_fail@plt+0x36cec>
   16a58:	vldr	d16, [sp]
   16a5c:	vstr	d16, [sp, #16]
   16a60:	ldr	r0, [sp, #24]
   16a64:	ldr	r1, [sp, #28]
   16a68:	ldr	r2, [sp, #16]
   16a6c:	ldr	r3, [sp, #20]
   16a70:	bl	148f8 <__assert_fail@plt+0x1d40>
   16a74:	cmp	r0, #0
   16a78:	bge	16a8c <__assert_fail@plt+0x3ed4>
   16a7c:	movw	r0, #0
   16a80:	and	r0, r0, #1
   16a84:	strb	r0, [fp, #-1]
   16a88:	b	16af4 <__assert_fail@plt+0x3f3c>
   16a8c:	ldr	r0, [sp, #16]
   16a90:	ldr	r1, [sp, #24]
   16a94:	sub	r0, r0, r1
   16a98:	str	r0, [fp, #-24]	; 0xffffffe8
   16a9c:	ldr	r0, [sp, #20]
   16aa0:	ldr	r1, [sp, #28]
   16aa4:	sub	r0, r0, r1
   16aa8:	str	r0, [fp, #-20]	; 0xffffffec
   16aac:	ldr	r0, [fp, #-20]	; 0xffffffec
   16ab0:	cmp	r0, #0
   16ab4:	bge	16ad4 <__assert_fail@plt+0x3f1c>
   16ab8:	ldr	r0, [pc, #68]	; 16b04 <__assert_fail@plt+0x3f4c>
   16abc:	ldr	r1, [fp, #-20]	; 0xffffffec
   16ac0:	add	r0, r1, r0
   16ac4:	str	r0, [fp, #-20]	; 0xffffffec
   16ac8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16acc:	sub	r0, r0, #1
   16ad0:	str	r0, [fp, #-24]	; 0xffffffe8
   16ad4:	ldr	r2, [fp, #-16]
   16ad8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16adc:	ldr	r1, [fp, #-20]	; 0xffffffec
   16ae0:	movw	r3, #20864	; 0x5180
   16ae4:	movt	r3, #1
   16ae8:	bl	1464c <__assert_fail@plt+0x1a94>
   16aec:	and	r0, r0, #1
   16af0:	strb	r0, [fp, #-1]
   16af4:	ldrb	r0, [fp, #-1]
   16af8:	and	r0, r0, #1
   16afc:	mov	sp, fp
   16b00:	pop	{fp, pc}
   16b04:	blcc	fe6c930c <stdout@@GLIBC_2.4+0xfe63bbd8>
   16b08:	sub	sp, sp, #16
   16b0c:	str	r0, [sp, #8]
   16b10:	str	r1, [sp, #4]
   16b14:	str	r2, [sp]
   16b18:	ldr	r0, [sp]
   16b1c:	ldr	r0, [r0, #40]	; 0x28
   16b20:	ldr	r1, [sp, #4]
   16b24:	ldr	r1, [r1, #24]
   16b28:	cmp	r0, r1
   16b2c:	bne	16b40 <__assert_fail@plt+0x3f88>
   16b30:	movw	r0, #1
   16b34:	and	r0, r0, #1
   16b38:	strb	r0, [sp, #15]
   16b3c:	b	16b4c <__assert_fail@plt+0x3f94>
   16b40:	movw	r0, #0
   16b44:	and	r0, r0, #1
   16b48:	strb	r0, [sp, #15]
   16b4c:	ldrb	r0, [sp, #15]
   16b50:	and	r0, r0, #1
   16b54:	add	sp, sp, #16
   16b58:	bx	lr
   16b5c:	push	{fp, lr}
   16b60:	mov	fp, sp
   16b64:	sub	sp, sp, #144	; 0x90
   16b68:	str	r0, [fp, #-8]
   16b6c:	str	r1, [fp, #-12]
   16b70:	str	r2, [fp, #-16]
   16b74:	bl	1caec <__assert_fail@plt+0x9f34>
   16b78:	tst	r0, #1
   16b7c:	beq	16b90 <__assert_fail@plt+0x3fd8>
   16b80:	movw	r0, #51564	; 0xc96c
   16b84:	movt	r0, #1
   16b88:	str	r0, [sp, #20]
   16b8c:	b	16b9c <__assert_fail@plt+0x3fe4>
   16b90:	movw	r0, #51360	; 0xc8a0
   16b94:	movt	r0, #1
   16b98:	str	r0, [sp, #20]
   16b9c:	add	r0, sp, #24
   16ba0:	bl	1bdbc <__assert_fail@plt+0x9204>
   16ba4:	ldr	r0, [sp, #20]
   16ba8:	movw	r1, #57436	; 0xe05c
   16bac:	movt	r1, #8
   16bb0:	ldr	r1, [r1, #12]
   16bb4:	str	r0, [sp, #16]
   16bb8:	mov	r0, r1
   16bbc:	add	r1, sp, #24
   16bc0:	ldr	r2, [sp, #16]
   16bc4:	blx	r2
   16bc8:	cmp	r0, #0
   16bcc:	beq	16c70 <__assert_fail@plt+0x40b8>
   16bd0:	bl	1caec <__assert_fail@plt+0x9f34>
   16bd4:	tst	r0, #1
   16bd8:	beq	16c08 <__assert_fail@plt+0x4050>
   16bdc:	bl	128d0 <__errno_location@plt>
   16be0:	ldr	r0, [r0]
   16be4:	cmp	r0, #2
   16be8:	bne	16c08 <__assert_fail@plt+0x4050>
   16bec:	ldr	r0, [fp, #-8]
   16bf0:	ldr	r1, [fp, #-12]
   16bf4:	ldr	r2, [fp, #-16]
   16bf8:	bl	16740 <__assert_fail@plt+0x3b88>
   16bfc:	and	r0, r0, #1
   16c00:	strb	r0, [fp, #-1]
   16c04:	b	16c88 <__assert_fail@plt+0x40d0>
   16c08:	bl	128d0 <__errno_location@plt>
   16c0c:	ldr	r1, [r0]
   16c10:	ldr	r0, [fp, #-8]
   16c14:	movw	r2, #0
   16c18:	str	r0, [sp, #12]
   16c1c:	mov	r0, r2
   16c20:	ldr	r2, [sp, #12]
   16c24:	str	r1, [sp, #8]
   16c28:	mov	r1, r2
   16c2c:	bl	1d994 <__assert_fail@plt+0xaddc>
   16c30:	movw	r1, #0
   16c34:	str	r0, [sp, #4]
   16c38:	mov	r0, r1
   16c3c:	ldr	r1, [sp, #8]
   16c40:	movw	r2, #50143	; 0xc3df
   16c44:	movt	r2, #7
   16c48:	ldr	r3, [sp, #4]
   16c4c:	bl	12780 <error@plt>
   16c50:	movw	r0, #57436	; 0xe05c
   16c54:	movt	r0, #8
   16c58:	movw	r1, #1
   16c5c:	str	r1, [r0, #28]
   16c60:	movw	r0, #0
   16c64:	and	r0, r0, #1
   16c68:	strb	r0, [fp, #-1]
   16c6c:	b	16c88 <__assert_fail@plt+0x40d0>
   16c70:	ldr	r0, [fp, #-8]
   16c74:	ldr	r2, [fp, #-16]
   16c78:	add	r1, sp, #24
   16c7c:	bl	16740 <__assert_fail@plt+0x3b88>
   16c80:	and	r0, r0, #1
   16c84:	strb	r0, [fp, #-1]
   16c88:	ldrb	r0, [fp, #-1]
   16c8c:	and	r0, r0, #1
   16c90:	mov	sp, fp
   16c94:	pop	{fp, pc}
   16c98:	push	{fp, lr}
   16c9c:	mov	fp, sp
   16ca0:	sub	sp, sp, #40	; 0x28
   16ca4:	str	r0, [fp, #-8]
   16ca8:	str	r1, [fp, #-12]
   16cac:	str	r2, [fp, #-16]
   16cb0:	movw	r0, #57480	; 0xe088
   16cb4:	movt	r0, #8
   16cb8:	ldr	r0, [r0, #64]	; 0x40
   16cbc:	movw	r1, #57436	; 0xe05c
   16cc0:	movt	r1, #8
   16cc4:	ldr	r2, [r1, #16]
   16cc8:	ldr	r1, [r1, #12]
   16ccc:	str	r0, [sp, #12]
   16cd0:	mov	r0, r2
   16cd4:	add	r2, sp, #20
   16cd8:	ldr	r3, [sp, #12]
   16cdc:	blx	r3
   16ce0:	str	r0, [sp, #16]
   16ce4:	ldr	r0, [sp, #16]
   16ce8:	cmp	r0, #0
   16cec:	bge	16d48 <__assert_fail@plt+0x4190>
   16cf0:	bl	128d0 <__errno_location@plt>
   16cf4:	ldr	r1, [r0]
   16cf8:	movw	r0, #24215	; 0x5e97
   16cfc:	movt	r0, #7
   16d00:	str	r1, [sp, #8]
   16d04:	bl	12864 <gettext@plt>
   16d08:	ldr	r1, [fp, #-8]
   16d0c:	movw	r2, #0
   16d10:	str	r0, [sp, #4]
   16d14:	mov	r0, r2
   16d18:	bl	1d994 <__assert_fail@plt+0xaddc>
   16d1c:	movw	r1, #0
   16d20:	str	r0, [sp]
   16d24:	mov	r0, r1
   16d28:	ldr	r1, [sp, #8]
   16d2c:	ldr	r2, [sp, #4]
   16d30:	ldr	r3, [sp]
   16d34:	bl	12780 <error@plt>
   16d38:	movw	r0, #0
   16d3c:	and	r0, r0, #1
   16d40:	strb	r0, [fp, #-1]
   16d44:	b	16d90 <__assert_fail@plt+0x41d8>
   16d48:	ldr	r0, [fp, #-16]
   16d4c:	ldr	r0, [r0, #40]	; 0x28
   16d50:	ldr	r1, [sp, #20]
   16d54:	movw	r2, #0
   16d58:	bl	127a4 <fnmatch@plt>
   16d5c:	cmp	r0, #0
   16d60:	movw	r0, #0
   16d64:	moveq	r0, #1
   16d68:	and	r0, r0, #1
   16d6c:	str	r0, [sp, #16]
   16d70:	ldr	r0, [sp, #20]
   16d74:	bl	12ac8 <freecon@plt>
   16d78:	ldr	r0, [sp, #16]
   16d7c:	cmp	r0, #0
   16d80:	movw	r0, #0
   16d84:	movne	r0, #1
   16d88:	and	r0, r0, #1
   16d8c:	strb	r0, [fp, #-1]
   16d90:	ldrb	r0, [fp, #-1]
   16d94:	and	r0, r0, #1
   16d98:	mov	sp, fp
   16d9c:	pop	{fp, pc}
   16da0:	push	{r4, r5, fp, lr}
   16da4:	add	fp, sp, #8
   16da8:	sub	sp, sp, #280	; 0x118
   16dac:	str	r0, [fp, #-12]
   16db0:	str	r1, [fp, #-16]
   16db4:	ldr	r0, [fp, #-16]
   16db8:	str	r0, [fp, #-20]	; 0xffffffec
   16dbc:	ldr	r0, [fp, #-20]	; 0xffffffec
   16dc0:	movw	r1, #0
   16dc4:	cmp	r0, r1
   16dc8:	beq	16e14 <__assert_fail@plt+0x425c>
   16dcc:	add	r1, sp, #12
   16dd0:	ldr	r0, [fp, #-12]
   16dd4:	ldr	r2, [fp, #-20]	; 0xffffffec
   16dd8:	ldr	r2, [r2, #4]
   16ddc:	str	r0, [sp, #8]
   16de0:	mov	r0, r2
   16de4:	bl	16e2c <__assert_fail@plt+0x4274>
   16de8:	ldr	r1, [sp, #8]
   16dec:	str	r0, [sp, #4]
   16df0:	mov	r0, r1
   16df4:	movw	r1, #24237	; 0x5ead
   16df8:	movt	r1, #7
   16dfc:	ldr	r2, [sp, #4]
   16e00:	bl	128c4 <fprintf@plt>
   16e04:	ldr	r1, [fp, #-20]	; 0xffffffec
   16e08:	ldr	r1, [r1, #152]	; 0x98
   16e0c:	str	r1, [fp, #-20]	; 0xffffffec
   16e10:	b	16dbc <__assert_fail@plt+0x4204>
   16e14:	ldr	r0, [fp, #-12]
   16e18:	movw	r1, #29908	; 0x74d4
   16e1c:	movt	r1, #7
   16e20:	bl	128c4 <fprintf@plt>
   16e24:	sub	sp, fp, #8
   16e28:	pop	{r4, r5, fp, pc}
   16e2c:	push	{fp, lr}
   16e30:	mov	fp, sp
   16e34:	sub	sp, sp, #32
   16e38:	str	r0, [fp, #-8]
   16e3c:	str	r1, [fp, #-12]
   16e40:	ldr	r0, [fp, #-8]
   16e44:	movw	r1, #0
   16e48:	cmp	r0, r1
   16e4c:	bne	16e5c <__assert_fail@plt+0x42a4>
   16e50:	movw	r0, #0
   16e54:	str	r0, [fp, #-4]
   16e58:	b	16f20 <__assert_fail@plt+0x4368>
   16e5c:	ldr	r0, [fp, #-12]
   16e60:	ldr	r1, [fp, #-8]
   16e64:	bl	12738 <strcpy@plt>
   16e68:	ldr	r1, [fp, #-12]
   16e6c:	str	r0, [sp, #12]
   16e70:	mov	r0, r1
   16e74:	bl	12888 <strlen@plt>
   16e78:	sub	r0, r0, #1
   16e7c:	str	r0, [sp, #16]
   16e80:	ldr	r0, [sp, #16]
   16e84:	cmp	r0, #0
   16e88:	movw	r0, #0
   16e8c:	str	r0, [sp, #8]
   16e90:	blt	16edc <__assert_fail@plt+0x4324>
   16e94:	ldr	r0, [fp, #-12]
   16e98:	ldr	r1, [sp, #16]
   16e9c:	add	r0, r0, r1
   16ea0:	ldrb	r0, [r0]
   16ea4:	cmp	r0, #32
   16ea8:	movw	r0, #1
   16eac:	str	r0, [sp, #4]
   16eb0:	beq	16ed4 <__assert_fail@plt+0x431c>
   16eb4:	ldr	r0, [fp, #-12]
   16eb8:	ldr	r1, [sp, #16]
   16ebc:	add	r0, r0, r1
   16ec0:	ldrb	r0, [r0]
   16ec4:	cmp	r0, #9
   16ec8:	movw	r0, #0
   16ecc:	moveq	r0, #1
   16ed0:	str	r0, [sp, #4]
   16ed4:	ldr	r0, [sp, #4]
   16ed8:	str	r0, [sp, #8]
   16edc:	ldr	r0, [sp, #8]
   16ee0:	tst	r0, #1
   16ee4:	beq	16efc <__assert_fail@plt+0x4344>
   16ee8:	ldr	r0, [sp, #16]
   16eec:	mvn	r1, #0
   16ef0:	add	r0, r0, r1
   16ef4:	str	r0, [sp, #16]
   16ef8:	b	16e80 <__assert_fail@plt+0x42c8>
   16efc:	ldr	r0, [fp, #-12]
   16f00:	ldr	r1, [sp, #16]
   16f04:	add	r1, r1, #1
   16f08:	str	r1, [sp, #16]
   16f0c:	add	r0, r0, r1
   16f10:	movw	r1, #0
   16f14:	strb	r1, [r0]
   16f18:	ldr	r0, [fp, #-12]
   16f1c:	str	r0, [fp, #-4]
   16f20:	ldr	r0, [fp, #-4]
   16f24:	mov	sp, fp
   16f28:	pop	{fp, pc}
   16f2c:	push	{fp, lr}
   16f30:	mov	fp, sp
   16f34:	sub	sp, sp, #32
   16f38:	str	r0, [fp, #-4]
   16f3c:	str	r1, [fp, #-8]
   16f40:	ldr	r0, [fp, #-8]
   16f44:	movw	r1, #0
   16f48:	cmp	r0, r1
   16f4c:	beq	170c4 <__assert_fail@plt+0x450c>
   16f50:	ldr	r0, [fp, #-4]
   16f54:	ldr	r1, [fp, #-8]
   16f58:	ldr	r1, [r1, #156]	; 0x9c
   16f5c:	bl	170cc <__assert_fail@plt+0x4514>
   16f60:	ldr	r0, [fp, #-4]
   16f64:	ldr	r1, [fp, #-8]
   16f68:	ldrb	r1, [r1, #18]
   16f6c:	tst	r1, #1
   16f70:	movw	r1, #24250	; 0x5eba
   16f74:	movt	r1, #7
   16f78:	movw	r2, #29909	; 0x74d5
   16f7c:	movt	r2, #7
   16f80:	mov	r3, r2
   16f84:	movne	r3, r1
   16f88:	ldr	r1, [fp, #-8]
   16f8c:	ldrb	r1, [r1, #19]
   16f90:	tst	r1, #1
   16f94:	movw	r1, #24263	; 0x5ec7
   16f98:	movt	r1, #7
   16f9c:	mov	ip, r2
   16fa0:	movne	ip, r1
   16fa4:	ldr	r1, [fp, #-8]
   16fa8:	ldrb	r1, [r1, #20]
   16fac:	tst	r1, #1
   16fb0:	movw	r1, #24276	; 0x5ed4
   16fb4:	movt	r1, #7
   16fb8:	movne	r2, r1
   16fbc:	movw	r1, #24243	; 0x5eb3
   16fc0:	movt	r1, #7
   16fc4:	str	r2, [sp, #12]
   16fc8:	mov	r2, r3
   16fcc:	mov	r3, ip
   16fd0:	ldr	ip, [sp, #12]
   16fd4:	str	ip, [sp]
   16fd8:	bl	128c4 <fprintf@plt>
   16fdc:	ldr	r1, [fp, #-4]
   16fe0:	ldr	r2, [fp, #-8]
   16fe4:	str	r0, [sp, #8]
   16fe8:	mov	r0, r1
   16fec:	mov	r1, r2
   16ff0:	bl	182b4 <__assert_fail@plt+0x56fc>
   16ff4:	ldr	r0, [fp, #-4]
   16ff8:	ldr	r1, [fp, #-8]
   16ffc:	vldr	s0, [r1, #28]
   17000:	vcvt.f64.f32	d16, s0
   17004:	movw	r1, #24289	; 0x5ee1
   17008:	movt	r1, #7
   1700c:	vmov	r2, r3, d16
   17010:	bl	128c4 <fprintf@plt>
   17014:	movw	r1, #57480	; 0xe088
   17018:	movt	r1, #8
   1701c:	ldr	r1, [r1, #44]	; 0x2c
   17020:	and	r1, r1, #64	; 0x40
   17024:	cmp	r1, #0
   17028:	beq	170b4 <__assert_fail@plt+0x44fc>
   1702c:	ldr	r0, [fp, #-4]
   17030:	ldr	r1, [fp, #-8]
   17034:	ldr	r2, [r1, #168]	; 0xa8
   17038:	ldr	r1, [fp, #-8]
   1703c:	ldr	r3, [r1, #164]	; 0xa4
   17040:	movw	r1, #24315	; 0x5efb
   17044:	movt	r1, #7
   17048:	bl	128c4 <fprintf@plt>
   1704c:	ldr	r1, [fp, #-8]
   17050:	ldr	r1, [r1, #164]	; 0xa4
   17054:	cmp	r1, #0
   17058:	beq	170a0 <__assert_fail@plt+0x44e8>
   1705c:	ldr	r0, [fp, #-8]
   17060:	ldr	r0, [r0, #168]	; 0xa8
   17064:	vmov	s0, r0
   17068:	vcvt.f64.u32	d16, s0
   1706c:	ldr	r0, [fp, #-8]
   17070:	ldr	r0, [r0, #164]	; 0xa4
   17074:	vmov	s0, r0
   17078:	vcvt.f64.u32	d17, s0
   1707c:	vdiv.f64	d16, d16, d17
   17080:	vstr	d16, [sp, #16]
   17084:	ldr	r0, [fp, #-4]
   17088:	vldr	d16, [sp, #16]
   1708c:	movw	r1, #24342	; 0x5f16
   17090:	movt	r1, #7
   17094:	vmov	r2, r3, d16
   17098:	bl	128c4 <fprintf@plt>
   1709c:	b	170b0 <__assert_fail@plt+0x44f8>
   170a0:	ldr	r0, [fp, #-4]
   170a4:	movw	r1, #24350	; 0x5f1e
   170a8:	movt	r1, #7
   170ac:	bl	128c4 <fprintf@plt>
   170b0:	b	170b4 <__assert_fail@plt+0x44fc>
   170b4:	ldr	r0, [fp, #-4]
   170b8:	ldr	r1, [fp, #-8]
   170bc:	ldr	r1, [r1, #160]	; 0xa0
   170c0:	bl	170cc <__assert_fail@plt+0x4514>
   170c4:	mov	sp, fp
   170c8:	pop	{fp, pc}
   170cc:	push	{fp, lr}
   170d0:	mov	fp, sp
   170d4:	sub	sp, sp, #16
   170d8:	str	r0, [fp, #-4]
   170dc:	str	r1, [sp, #8]
   170e0:	movw	r0, #0
   170e4:	str	r0, [sp, #4]
   170e8:	ldr	r1, [sp, #8]
   170ec:	cmp	r1, r0
   170f0:	beq	171d8 <__assert_fail@plt+0x4620>
   170f4:	ldr	r0, [sp, #8]
   170f8:	ldr	r0, [r0]
   170fc:	movw	r1, #24428	; 0x5f6c
   17100:	movt	r1, #1
   17104:	cmp	r0, r1
   17108:	beq	17124 <__assert_fail@plt+0x456c>
   1710c:	ldr	r0, [sp, #8]
   17110:	ldr	r0, [r0]
   17114:	movw	r1, #18388	; 0x47d4
   17118:	movt	r1, #1
   1711c:	cmp	r0, r1
   17120:	bne	1714c <__assert_fail@plt+0x4594>
   17124:	ldr	r0, [sp, #8]
   17128:	ldr	r0, [r0, #156]	; 0x9c
   1712c:	movw	r1, #0
   17130:	cmp	r0, r1
   17134:	bne	1714c <__assert_fail@plt+0x4594>
   17138:	ldr	r0, [fp, #-4]
   1713c:	ldr	r1, [sp, #8]
   17140:	ldr	r1, [r1, #160]	; 0xa0
   17144:	bl	170cc <__assert_fail@plt+0x4514>
   17148:	b	171d4 <__assert_fail@plt+0x461c>
   1714c:	ldr	r0, [sp, #8]
   17150:	ldr	r0, [r0, #156]	; 0x9c
   17154:	movw	r1, #0
   17158:	cmp	r0, r1
   1715c:	bne	17174 <__assert_fail@plt+0x45bc>
   17160:	ldr	r0, [sp, #8]
   17164:	ldr	r0, [r0, #160]	; 0xa0
   17168:	movw	r1, #0
   1716c:	cmp	r0, r1
   17170:	beq	1717c <__assert_fail@plt+0x45c4>
   17174:	movw	r0, #1
   17178:	str	r0, [sp, #4]
   1717c:	ldr	r0, [sp, #4]
   17180:	cmp	r0, #0
   17184:	beq	171a0 <__assert_fail@plt+0x45e8>
   17188:	ldr	r0, [fp, #-4]
   1718c:	movw	r1, #50143	; 0xc3df
   17190:	movt	r1, #7
   17194:	movw	r2, #24774	; 0x60c6
   17198:	movt	r2, #7
   1719c:	bl	128c4 <fprintf@plt>
   171a0:	ldr	r0, [fp, #-4]
   171a4:	ldr	r1, [sp, #8]
   171a8:	bl	16f2c <__assert_fail@plt+0x4374>
   171ac:	ldr	r0, [sp, #4]
   171b0:	cmp	r0, #0
   171b4:	beq	171d0 <__assert_fail@plt+0x4618>
   171b8:	ldr	r0, [fp, #-4]
   171bc:	movw	r1, #50143	; 0xc3df
   171c0:	movt	r1, #7
   171c4:	movw	r2, #24778	; 0x60ca
   171c8:	movt	r2, #7
   171cc:	bl	128c4 <fprintf@plt>
   171d0:	b	171d4 <__assert_fail@plt+0x461c>
   171d4:	b	171d8 <__assert_fail@plt+0x4620>
   171d8:	mov	sp, fp
   171dc:	pop	{fp, pc}
   171e0:	push	{fp, lr}
   171e4:	mov	fp, sp
   171e8:	sub	sp, sp, #8
   171ec:	str	r0, [sp, #4]
   171f0:	movw	r0, #57480	; 0xe088
   171f4:	movt	r0, #8
   171f8:	ldr	r0, [r0, #44]	; 0x2c
   171fc:	and	r0, r0, #64	; 0x40
   17200:	cmp	r0, #0
   17204:	beq	17258 <__assert_fail@plt+0x46a0>
   17208:	movw	r0, #55080	; 0xd728
   1720c:	movt	r0, #8
   17210:	ldr	r0, [r0]
   17214:	movw	r1, #24355	; 0x5f23
   17218:	movt	r1, #7
   1721c:	bl	128c4 <fprintf@plt>
   17220:	movw	r1, #55080	; 0xd728
   17224:	movt	r1, #8
   17228:	ldr	r1, [r1]
   1722c:	ldr	r2, [sp, #4]
   17230:	str	r0, [sp]
   17234:	mov	r0, r1
   17238:	mov	r1, r2
   1723c:	bl	16f2c <__assert_fail@plt+0x4374>
   17240:	movw	r0, #55080	; 0xd728
   17244:	movt	r0, #8
   17248:	ldr	r0, [r0]
   1724c:	movw	r1, #29908	; 0x74d4
   17250:	movt	r1, #7
   17254:	bl	128c4 <fprintf@plt>
   17258:	mov	sp, fp
   1725c:	pop	{fp, pc}
   17260:	push	{fp, lr}
   17264:	mov	fp, sp
   17268:	sub	sp, sp, #16
   1726c:	str	r0, [fp, #-4]
   17270:	ldr	r0, [fp, #-4]
   17274:	str	r0, [sp, #8]
   17278:	ldr	r0, [sp, #8]
   1727c:	movw	r1, #0
   17280:	cmp	r0, r1
   17284:	beq	17548 <__assert_fail@plt+0x4990>
   17288:	ldr	r0, [sp, #8]
   1728c:	ldr	r0, [r0]
   17290:	movw	r1, #0
   17294:	cmp	r0, r1
   17298:	beq	172a0 <__assert_fail@plt+0x46e8>
   1729c:	b	172c0 <__assert_fail@plt+0x4708>
   172a0:	movw	r0, #24398	; 0x5f4e
   172a4:	movt	r0, #7
   172a8:	movw	r1, #23677	; 0x5c7d
   172ac:	movt	r1, #7
   172b0:	movw	r2, #1310	; 0x51e
   172b4:	movw	r3, #24419	; 0x5f63
   172b8:	movt	r3, #7
   172bc:	bl	12bb8 <__assert_fail@plt>
   172c0:	ldr	r0, [sp, #8]
   172c4:	ldr	r0, [r0, #172]	; 0xac
   172c8:	movw	r1, #0
   172cc:	cmp	r0, r1
   172d0:	beq	172d8 <__assert_fail@plt+0x4720>
   172d4:	b	172f8 <__assert_fail@plt+0x4740>
   172d8:	movw	r0, #24468	; 0x5f94
   172dc:	movt	r0, #7
   172e0:	movw	r1, #23677	; 0x5c7d
   172e4:	movt	r1, #7
   172e8:	movw	r2, #1313	; 0x521
   172ec:	movw	r3, #24419	; 0x5f63
   172f0:	movt	r3, #7
   172f4:	bl	12bb8 <__assert_fail@plt>
   172f8:	ldr	r0, [sp, #8]
   172fc:	ldr	r0, [r0, #172]	; 0xac
   17300:	ldr	r0, [r0, #12]
   17304:	movw	r1, #0
   17308:	cmp	r0, r1
   1730c:	beq	17354 <__assert_fail@plt+0x479c>
   17310:	ldr	r0, [sp, #8]
   17314:	ldr	r0, [r0, #172]	; 0xac
   17318:	ldr	r0, [r0, #12]
   1731c:	ldr	r1, [sp, #8]
   17320:	ldr	r1, [r1]
   17324:	cmp	r0, r1
   17328:	bne	17330 <__assert_fail@plt+0x4778>
   1732c:	b	17350 <__assert_fail@plt+0x4798>
   17330:	movw	r0, #24492	; 0x5fac
   17334:	movt	r0, #7
   17338:	movw	r1, #23677	; 0x5c7d
   1733c:	movt	r1, #7
   17340:	movw	r2, #1322	; 0x52a
   17344:	movw	r3, #24419	; 0x5f63
   17348:	movt	r3, #7
   1734c:	bl	12bb8 <__assert_fail@plt>
   17350:	b	17354 <__assert_fail@plt+0x479c>
   17354:	ldr	r0, [sp, #8]
   17358:	ldr	r0, [r0, #172]	; 0xac
   1735c:	ldr	r0, [r0]
   17360:	cmp	r0, #0
   17364:	str	r0, [sp, #4]
   17368:	beq	173b4 <__assert_fail@plt+0x47fc>
   1736c:	b	17370 <__assert_fail@plt+0x47b8>
   17370:	ldr	r0, [sp, #4]
   17374:	cmp	r0, #1
   17378:	beq	174c8 <__assert_fail@plt+0x4910>
   1737c:	b	17380 <__assert_fail@plt+0x47c8>
   17380:	ldr	r0, [sp, #4]
   17384:	cmp	r0, #2
   17388:	beq	173b4 <__assert_fail@plt+0x47fc>
   1738c:	b	17390 <__assert_fail@plt+0x47d8>
   17390:	ldr	r0, [sp, #4]
   17394:	sub	r1, r0, #3
   17398:	cmp	r1, #3
   1739c:	bcc	174c8 <__assert_fail@plt+0x4910>
   173a0:	b	173a4 <__assert_fail@plt+0x47ec>
   173a4:	ldr	r0, [sp, #4]
   173a8:	cmp	r0, #6
   173ac:	beq	17428 <__assert_fail@plt+0x4870>
   173b0:	b	17534 <__assert_fail@plt+0x497c>
   173b4:	ldr	r0, [sp, #8]
   173b8:	ldr	r0, [r0, #172]	; 0xac
   173bc:	ldr	r0, [r0]
   173c0:	cmp	r0, #0
   173c4:	beq	173cc <__assert_fail@plt+0x4814>
   173c8:	b	173ec <__assert_fail@plt+0x4834>
   173cc:	movw	r0, #24535	; 0x5fd7
   173d0:	movt	r0, #7
   173d4:	movw	r1, #23677	; 0x5c7d
   173d8:	movt	r1, #7
   173dc:	movw	r2, #1338	; 0x53a
   173e0:	movw	r3, #24419	; 0x5f63
   173e4:	movt	r3, #7
   173e8:	bl	12bb8 <__assert_fail@plt>
   173ec:	ldr	r0, [sp, #8]
   173f0:	ldr	r0, [r0, #172]	; 0xac
   173f4:	ldr	r0, [r0]
   173f8:	cmp	r0, #2
   173fc:	beq	17404 <__assert_fail@plt+0x484c>
   17400:	b	17424 <__assert_fail@plt+0x486c>
   17404:	movw	r0, #24571	; 0x5ffb
   17408:	movt	r0, #7
   1740c:	movw	r1, #23677	; 0x5c7d
   17410:	movt	r1, #7
   17414:	movw	r2, #1339	; 0x53b
   17418:	movw	r3, #24419	; 0x5f63
   1741c:	movt	r3, #7
   17420:	bl	12bb8 <__assert_fail@plt>
   17424:	b	17534 <__assert_fail@plt+0x497c>
   17428:	ldr	r0, [sp, #8]
   1742c:	ldrb	r0, [r0, #16]
   17430:	tst	r0, #1
   17434:	beq	1743c <__assert_fail@plt+0x4884>
   17438:	b	1745c <__assert_fail@plt+0x48a4>
   1743c:	movw	r0, #24640	; 0x6040
   17440:	movt	r0, #7
   17444:	movw	r1, #23677	; 0x5c7d
   17448:	movt	r1, #7
   1744c:	movw	r2, #1343	; 0x53f
   17450:	movw	r3, #24419	; 0x5f63
   17454:	movt	r3, #7
   17458:	bl	12bb8 <__assert_fail@plt>
   1745c:	ldr	r0, [sp, #8]
   17460:	ldr	r0, [r0]
   17464:	movw	r1, #25388	; 0x632c
   17468:	movt	r1, #1
   1746c:	cmp	r0, r1
   17470:	beq	174c4 <__assert_fail@plt+0x490c>
   17474:	ldr	r0, [sp, #8]
   17478:	ldr	r0, [r0]
   1747c:	movw	r1, #25564	; 0x63dc
   17480:	movt	r1, #1
   17484:	cmp	r0, r1
   17488:	beq	174c4 <__assert_fail@plt+0x490c>
   1748c:	ldr	r0, [sp, #8]
   17490:	ldrb	r0, [r0, #17]
   17494:	tst	r0, #1
   17498:	beq	174a0 <__assert_fail@plt+0x48e8>
   1749c:	b	174c0 <__assert_fail@plt+0x4908>
   174a0:	movw	r0, #24619	; 0x602b
   174a4:	movt	r0, #7
   174a8:	movw	r1, #23677	; 0x5c7d
   174ac:	movt	r1, #7
   174b0:	movw	r2, #1349	; 0x545
   174b4:	movw	r3, #24419	; 0x5f63
   174b8:	movt	r3, #7
   174bc:	bl	12bb8 <__assert_fail@plt>
   174c0:	b	174c4 <__assert_fail@plt+0x490c>
   174c4:	b	17534 <__assert_fail@plt+0x497c>
   174c8:	ldr	r0, [sp, #8]
   174cc:	ldrb	r0, [r0, #17]
   174d0:	tst	r0, #1
   174d4:	bne	174dc <__assert_fail@plt+0x4924>
   174d8:	b	174fc <__assert_fail@plt+0x4944>
   174dc:	movw	r0, #24618	; 0x602a
   174e0:	movt	r0, #7
   174e4:	movw	r1, #23677	; 0x5c7d
   174e8:	movt	r1, #7
   174ec:	movw	r2, #1363	; 0x553
   174f0:	movw	r3, #24419	; 0x5f63
   174f4:	movt	r3, #7
   174f8:	bl	12bb8 <__assert_fail@plt>
   174fc:	ldr	r0, [sp, #8]
   17500:	ldrb	r0, [r0, #16]
   17504:	tst	r0, #1
   17508:	bne	17510 <__assert_fail@plt+0x4958>
   1750c:	b	17530 <__assert_fail@plt+0x4978>
   17510:	movw	r0, #24639	; 0x603f
   17514:	movt	r0, #7
   17518:	movw	r1, #23677	; 0x5c7d
   1751c:	movt	r1, #7
   17520:	movw	r2, #1364	; 0x554
   17524:	movw	r3, #24419	; 0x5f63
   17528:	movt	r3, #7
   1752c:	bl	12bb8 <__assert_fail@plt>
   17530:	b	17534 <__assert_fail@plt+0x497c>
   17534:	b	17538 <__assert_fail@plt+0x4980>
   17538:	ldr	r0, [sp, #8]
   1753c:	ldr	r0, [r0, #152]	; 0x98
   17540:	str	r0, [sp, #8]
   17544:	b	17278 <__assert_fail@plt+0x46c0>
   17548:	mov	sp, fp
   1754c:	pop	{fp, pc}
   17550:	push	{fp, lr}
   17554:	mov	fp, sp
   17558:	sub	sp, sp, #24
   1755c:	str	r0, [fp, #-8]
   17560:	str	r1, [fp, #-4]
   17564:	str	r3, [sp, #12]
   17568:	str	r2, [sp, #8]
   1756c:	ldr	r0, [fp, #-8]
   17570:	ldr	r1, [sp, #8]
   17574:	bl	12954 <difftime@plt>
   17578:	vldr	d16, [pc, #40]	; 175a8 <__assert_fail@plt+0x49f0>
   1757c:	ldr	r0, [fp, #-4]
   17580:	ldr	r1, [sp, #12]
   17584:	sub	r0, r0, r1
   17588:	vmov	s2, r0
   1758c:	vcvt.f64.s32	d17, s2
   17590:	vmul.f64	d16, d16, d17
   17594:	vadd.f64	d16, d0, d16
   17598:	vstr	d16, [sp]
   1759c:	vldr	d0, [sp]
   175a0:	mov	sp, fp
   175a4:	pop	{fp, pc}
   175a8:	stmda	r6!, {r0, r2, r4, r7, r9, sl, ip, lr, pc}
   175ac:	cdpcc	14, 1, cr2, cr1, cr11, {0}
   175b0:	push	{r4, r5, r6, sl, fp, lr}
   175b4:	add	fp, sp, #16
   175b8:	sub	sp, sp, #128	; 0x80
   175bc:	str	r0, [fp, #-20]	; 0xffffffec
   175c0:	str	r1, [fp, #-24]	; 0xffffffe8
   175c4:	str	r2, [fp, #-28]	; 0xffffffe4
   175c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   175cc:	add	r0, r0, #40	; 0x28
   175d0:	str	r0, [fp, #-32]	; 0xffffffe0
   175d4:	movw	r0, #0
   175d8:	str	r0, [fp, #-36]	; 0xffffffdc
   175dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   175e0:	ldr	r0, [r0]
   175e4:	bl	1d944 <__assert_fail@plt+0xad8c>
   175e8:	and	r0, r0, #1
   175ec:	strb	r0, [fp, #-42]	; 0xffffffd6
   175f0:	ldrb	r0, [fp, #-42]	; 0xffffffd6
   175f4:	tst	r0, #1
   175f8:	beq	176a8 <__assert_fail@plt+0x4af0>
   175fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17600:	bl	17944 <__assert_fail@plt+0x4d8c>
   17604:	tst	r0, #1
   17608:	bne	17654 <__assert_fail@plt+0x4a9c>
   1760c:	bl	128d0 <__errno_location@plt>
   17610:	ldr	r1, [r0]
   17614:	movw	r0, #24782	; 0x60ce
   17618:	movt	r0, #7
   1761c:	str	r1, [fp, #-60]	; 0xffffffc4
   17620:	bl	12864 <gettext@plt>
   17624:	ldr	r1, [fp, #-20]	; 0xffffffec
   17628:	movw	r2, #0
   1762c:	str	r0, [fp, #-64]	; 0xffffffc0
   17630:	mov	r0, r2
   17634:	bl	1d994 <__assert_fail@plt+0xaddc>
   17638:	movw	r1, #1
   1763c:	str	r0, [fp, #-68]	; 0xffffffbc
   17640:	mov	r0, r1
   17644:	ldr	r1, [fp, #-60]	; 0xffffffc4
   17648:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1764c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   17650:	bl	12780 <error@plt>
   17654:	movw	r0, #57436	; 0xe05c
   17658:	movt	r0, #8
   1765c:	ldr	r0, [r0, #12]
   17660:	bl	2c264 <__assert_fail@plt+0x196ac>
   17664:	str	r0, [fp, #-36]	; 0xffffffdc
   17668:	str	r0, [fp, #-40]	; 0xffffffd8
   1766c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17670:	ldrb	r0, [r0]
   17674:	movw	r1, #47	; 0x2f
   17678:	cmp	r1, r0
   1767c:	bne	17690 <__assert_fail@plt+0x4ad8>
   17680:	movw	r0, #0
   17684:	str	r0, [fp, #-48]	; 0xffffffd0
   17688:	str	r0, [fp, #-52]	; 0xffffffcc
   1768c:	b	176a4 <__assert_fail@plt+0x4aec>
   17690:	movw	r0, #24847	; 0x610f
   17694:	movt	r0, #7
   17698:	str	r0, [fp, #-48]	; 0xffffffd0
   1769c:	movw	r0, #2
   176a0:	str	r0, [fp, #-52]	; 0xffffffcc
   176a4:	b	176fc <__assert_fail@plt+0x4b44>
   176a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   176ac:	ldr	r0, [r0, #104]	; 0x68
   176b0:	movw	r1, #55112	; 0xd748
   176b4:	movt	r1, #8
   176b8:	ldr	r1, [r1]
   176bc:	cmp	r0, r1
   176c0:	bne	176c8 <__assert_fail@plt+0x4b10>
   176c4:	b	176e8 <__assert_fail@plt+0x4b30>
   176c8:	movw	r0, #24850	; 0x6112
   176cc:	movt	r0, #7
   176d0:	movw	r1, #24883	; 0x6133
   176d4:	movt	r1, #7
   176d8:	movw	r2, #148	; 0x94
   176dc:	movw	r3, #24890	; 0x613a
   176e0:	movt	r3, #7
   176e4:	bl	12bb8 <__assert_fail@plt>
   176e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   176ec:	str	r0, [fp, #-40]	; 0xffffffd8
   176f0:	movw	r0, #0
   176f4:	str	r0, [fp, #-48]	; 0xffffffd0
   176f8:	str	r0, [fp, #-52]	; 0xffffffcc
   176fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17700:	ldrb	r0, [r0]
   17704:	tst	r0, #1
   17708:	beq	177a8 <__assert_fail@plt+0x4bf0>
   1770c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17710:	add	r0, r0, #4
   17714:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17718:	add	r1, r1, #48	; 0x30
   1771c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17720:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17724:	str	r0, [sp, #72]	; 0x48
   17728:	mov	r0, r3
   1772c:	str	r1, [sp, #68]	; 0x44
   17730:	str	r2, [sp, #64]	; 0x40
   17734:	bl	12888 <strlen@plt>
   17738:	add	r3, r0, #1
   1773c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17740:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17744:	ldr	r2, [sp, #72]	; 0x48
   17748:	str	r0, [sp, #60]	; 0x3c
   1774c:	mov	r0, r2
   17750:	ldr	ip, [sp, #68]	; 0x44
   17754:	str	r1, [sp, #56]	; 0x38
   17758:	mov	r1, ip
   1775c:	ldr	r2, [sp, #64]	; 0x40
   17760:	ldr	lr, [sp, #60]	; 0x3c
   17764:	str	lr, [sp]
   17768:	ldr	r4, [sp, #56]	; 0x38
   1776c:	str	r4, [sp, #4]
   17770:	movw	r5, #0
   17774:	str	r5, [sp, #8]
   17778:	bl	27e84 <__assert_fail@plt+0x152cc>
   1777c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17780:	ldr	r0, [r0, #76]	; 0x4c
   17784:	cmp	r0, #0
   17788:	beq	1779c <__assert_fail@plt+0x4be4>
   1778c:	movw	r0, #57436	; 0xe05c
   17790:	movt	r0, #8
   17794:	movw	r1, #1
   17798:	strb	r1, [r0, #32]
   1779c:	movw	r0, #1
   177a0:	strb	r0, [fp, #-41]	; 0xffffffd7
   177a4:	b	178ec <__assert_fail@plt+0x4d34>
   177a8:	movw	r0, #0
   177ac:	str	r0, [fp, #-56]	; 0xffffffc8
   177b0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   177b4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   177b8:	ldr	r1, [r1, #96]	; 0x60
   177bc:	cmp	r0, r1
   177c0:	bge	1786c <__assert_fail@plt+0x4cb4>
   177c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   177c8:	add	r1, r0, #4
   177cc:	add	r2, r0, #48	; 0x30
   177d0:	ldr	r0, [r0, #92]	; 0x5c
   177d4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   177d8:	ldr	r3, [r0, r3, lsl #2]!
   177dc:	ldr	r0, [r0]
   177e0:	str	r1, [sp, #52]	; 0x34
   177e4:	str	r2, [sp, #48]	; 0x30
   177e8:	str	r3, [sp, #44]	; 0x2c
   177ec:	bl	12888 <strlen@plt>
   177f0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   177f4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   177f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   177fc:	ldr	ip, [fp, #-40]	; 0xffffffd8
   17800:	str	r0, [sp, #40]	; 0x28
   17804:	mov	r0, ip
   17808:	str	r1, [sp, #36]	; 0x24
   1780c:	str	r2, [sp, #32]
   17810:	str	r3, [sp, #28]
   17814:	bl	12888 <strlen@plt>
   17818:	ldr	r1, [sp, #52]	; 0x34
   1781c:	str	r0, [sp, #24]
   17820:	mov	r0, r1
   17824:	ldr	r1, [sp, #48]	; 0x30
   17828:	ldr	r2, [sp, #44]	; 0x2c
   1782c:	ldr	r3, [sp, #40]	; 0x28
   17830:	ldr	ip, [sp, #36]	; 0x24
   17834:	str	ip, [sp]
   17838:	ldr	lr, [sp, #32]
   1783c:	str	lr, [sp, #4]
   17840:	ldr	r4, [sp, #28]
   17844:	str	r4, [sp, #8]
   17848:	ldr	r5, [sp, #24]
   1784c:	str	r5, [sp, #12]
   17850:	movw	r6, #0
   17854:	str	r6, [sp, #16]
   17858:	bl	27c00 <__assert_fail@plt+0x15048>
   1785c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17860:	add	r0, r0, #1
   17864:	str	r0, [fp, #-56]	; 0xffffffc8
   17868:	b	177b0 <__assert_fail@plt+0x4bf8>
   1786c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17870:	add	r0, r0, #4
   17874:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17878:	add	r1, r1, #48	; 0x30
   1787c:	bl	281e8 <__assert_fail@plt+0x15630>
   17880:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17884:	ldr	r0, [r0, #108]	; 0x6c
   17888:	and	r0, r0, #127	; 0x7f
   1788c:	cmp	r0, #0
   17890:	bne	178c8 <__assert_fail@plt+0x4d10>
   17894:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17898:	ldr	r0, [r0, #108]	; 0x6c
   1789c:	and	r0, r0, #65280	; 0xff00
   178a0:	asr	r0, r0, #8
   178a4:	movw	r1, #0
   178a8:	cmp	r1, r0
   178ac:	bne	178bc <__assert_fail@plt+0x4d04>
   178b0:	movw	r0, #1
   178b4:	strb	r0, [fp, #-41]	; 0xffffffd7
   178b8:	b	178c4 <__assert_fail@plt+0x4d0c>
   178bc:	movw	r0, #0
   178c0:	strb	r0, [fp, #-41]	; 0xffffffd7
   178c4:	b	178d0 <__assert_fail@plt+0x4d18>
   178c8:	movw	r0, #0
   178cc:	strb	r0, [fp, #-41]	; 0xffffffd7
   178d0:	ldrb	r0, [fp, #-42]	; 0xffffffd6
   178d4:	tst	r0, #1
   178d8:	beq	178e8 <__assert_fail@plt+0x4d30>
   178dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   178e0:	ldr	r0, [r0, #104]	; 0x68
   178e4:	bl	48e64 <__assert_fail@plt+0x362ac>
   178e8:	b	178ec <__assert_fail@plt+0x4d34>
   178ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   178f0:	movw	r1, #0
   178f4:	cmp	r0, r1
   178f8:	beq	17934 <__assert_fail@plt+0x4d7c>
   178fc:	ldrb	r0, [fp, #-42]	; 0xffffffd6
   17900:	tst	r0, #1
   17904:	beq	1790c <__assert_fail@plt+0x4d54>
   17908:	b	1792c <__assert_fail@plt+0x4d74>
   1790c:	movw	r0, #24960	; 0x6180
   17910:	movt	r0, #7
   17914:	movw	r1, #24883	; 0x6133
   17918:	movt	r1, #7
   1791c:	movw	r2, #208	; 0xd0
   17920:	movw	r3, #24890	; 0x613a
   17924:	movt	r3, #7
   17928:	bl	12bb8 <__assert_fail@plt>
   1792c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17930:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   17934:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   17938:	and	r0, r0, #1
   1793c:	sub	sp, fp, #16
   17940:	pop	{r4, r5, r6, sl, fp, pc}
   17944:	push	{fp, lr}
   17948:	mov	fp, sp
   1794c:	sub	sp, sp, #16
   17950:	str	r0, [sp, #8]
   17954:	ldr	r0, [sp, #8]
   17958:	ldr	r0, [r0, #76]	; 0x4c
   1795c:	cmp	r0, #0
   17960:	bne	17a2c <__assert_fail@plt+0x4e74>
   17964:	ldr	r0, [sp, #8]
   17968:	ldr	r0, [r0, #76]	; 0x4c
   1796c:	cmp	r0, #0
   17970:	bne	17978 <__assert_fail@plt+0x4dc0>
   17974:	b	17998 <__assert_fail@plt+0x4de0>
   17978:	movw	r0, #25217	; 0x6281
   1797c:	movt	r0, #7
   17980:	movw	r1, #24883	; 0x6133
   17984:	movt	r1, #7
   17988:	movw	r2, #71	; 0x47
   1798c:	movw	r3, #25236	; 0x6294
   17990:	movt	r3, #7
   17994:	bl	12bb8 <__assert_fail@plt>
   17998:	movw	r0, #57436	; 0xe05c
   1799c:	movt	r0, #8
   179a0:	ldr	r0, [r0, #12]
   179a4:	movw	r1, #47	; 0x2f
   179a8:	bl	12894 <strchr@plt>
   179ac:	movw	r1, #0
   179b0:	cmp	r0, r1
   179b4:	beq	17a04 <__assert_fail@plt+0x4e4c>
   179b8:	movw	r0, #57436	; 0xe05c
   179bc:	movt	r0, #8
   179c0:	ldr	r0, [r0, #12]
   179c4:	bl	2c438 <__assert_fail@plt+0x19880>
   179c8:	str	r0, [sp, #4]
   179cc:	ldr	r0, [sp, #8]
   179d0:	movw	r1, #57436	; 0xe05c
   179d4:	movt	r1, #8
   179d8:	ldr	r1, [r1, #16]
   179dc:	ldr	r2, [sp, #4]
   179e0:	bl	180fc <__assert_fail@plt+0x5544>
   179e4:	and	r0, r0, #1
   179e8:	strb	r0, [sp, #3]
   179ec:	ldr	r0, [sp, #4]
   179f0:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   179f4:	ldrb	r0, [sp, #3]
   179f8:	and	r0, r0, #1
   179fc:	strb	r0, [fp, #-1]
   17a00:	b	17a38 <__assert_fail@plt+0x4e80>
   17a04:	ldr	r0, [sp, #8]
   17a08:	movw	r1, #57436	; 0xe05c
   17a0c:	movt	r1, #8
   17a10:	ldr	r1, [r1, #16]
   17a14:	movw	r2, #26652	; 0x681c
   17a18:	movt	r2, #7
   17a1c:	bl	180fc <__assert_fail@plt+0x5544>
   17a20:	and	r0, r0, #1
   17a24:	strb	r0, [fp, #-1]
   17a28:	b	17a38 <__assert_fail@plt+0x4e80>
   17a2c:	movw	r0, #1
   17a30:	and	r0, r0, #1
   17a34:	strb	r0, [fp, #-1]
   17a38:	ldrb	r0, [fp, #-1]
   17a3c:	and	r0, r0, #1
   17a40:	mov	sp, fp
   17a44:	pop	{fp, pc}
   17a48:	push	{fp, lr}
   17a4c:	mov	fp, sp
   17a50:	sub	sp, sp, #96	; 0x60
   17a54:	str	r0, [fp, #-8]
   17a58:	str	r1, [fp, #-12]
   17a5c:	str	r2, [fp, #-16]
   17a60:	str	r3, [fp, #-20]	; 0xffffffec
   17a64:	ldr	r0, [fp, #-12]
   17a68:	str	r0, [fp, #-28]	; 0xffffffe4
   17a6c:	movw	r0, #57480	; 0xe088
   17a70:	movt	r0, #8
   17a74:	ldr	r0, [r0, #44]	; 0x2c
   17a78:	and	r0, r0, #32
   17a7c:	cmp	r0, #0
   17a80:	beq	17b44 <__assert_fail@plt+0x4f8c>
   17a84:	movw	r0, #55080	; 0xd728
   17a88:	movt	r0, #8
   17a8c:	ldr	r0, [r0]
   17a90:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17a94:	ldr	r1, [r1, #48]	; 0x30
   17a98:	subs	r2, r1, #1
   17a9c:	mov	r1, #0
   17aa0:	sbc	r3, r1, #0
   17aa4:	movw	r1, #24966	; 0x6186
   17aa8:	movt	r1, #7
   17aac:	bl	128c4 <fprintf@plt>
   17ab0:	movw	r1, #0
   17ab4:	str	r1, [fp, #-32]	; 0xffffffe0
   17ab8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17abc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17ac0:	ldr	r1, [r1, #48]	; 0x30
   17ac4:	sub	r1, r1, #1
   17ac8:	cmp	r0, r1
   17acc:	bcs	17b2c <__assert_fail@plt+0x4f74>
   17ad0:	movw	r0, #55080	; 0xd728
   17ad4:	movt	r0, #8
   17ad8:	ldr	r0, [r0]
   17adc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17ae0:	ldr	r1, [r1, #52]	; 0x34
   17ae4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17ae8:	add	r1, r1, r2, lsl #2
   17aec:	ldr	r1, [r1]
   17af0:	movw	r2, #0
   17af4:	str	r0, [fp, #-40]	; 0xffffffd8
   17af8:	mov	r0, r2
   17afc:	bl	1d994 <__assert_fail@plt+0xaddc>
   17b00:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17b04:	str	r0, [fp, #-44]	; 0xffffffd4
   17b08:	mov	r0, r1
   17b0c:	movw	r1, #50142	; 0xc3de
   17b10:	movt	r1, #7
   17b14:	ldr	r2, [fp, #-44]	; 0xffffffd4
   17b18:	bl	128c4 <fprintf@plt>
   17b1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17b20:	add	r0, r0, #1
   17b24:	str	r0, [fp, #-32]	; 0xffffffe0
   17b28:	b	17ab8 <__assert_fail@plt+0x4f00>
   17b2c:	movw	r0, #55080	; 0xd728
   17b30:	movt	r0, #8
   17b34:	ldr	r0, [r0]
   17b38:	movw	r1, #29908	; 0x74d4
   17b3c:	movt	r1, #7
   17b40:	bl	128c4 <fprintf@plt>
   17b44:	movw	r0, #55092	; 0xd734
   17b48:	movt	r0, #8
   17b4c:	ldr	r0, [r0]
   17b50:	bl	4ea58 <__assert_fail@plt+0x3bea0>
   17b54:	movw	r1, #55080	; 0xd728
   17b58:	movt	r1, #8
   17b5c:	ldr	r1, [r1]
   17b60:	str	r0, [sp, #48]	; 0x30
   17b64:	mov	r0, r1
   17b68:	bl	4ea58 <__assert_fail@plt+0x3bea0>
   17b6c:	movw	r1, #53932	; 0xd2ac
   17b70:	movt	r1, #8
   17b74:	ldr	r1, [r1]
   17b78:	cmp	r1, #0
   17b7c:	beq	17b98 <__assert_fail@plt+0x4fe0>
   17b80:	movw	r0, #53932	; 0xd2ac
   17b84:	movt	r0, #8
   17b88:	movw	r1, #0
   17b8c:	str	r1, [r0]
   17b90:	movw	r0, #17
   17b94:	bl	1260c <signal@plt>
   17b98:	bl	129f0 <fork@plt>
   17b9c:	str	r0, [fp, #-24]	; 0xffffffe8
   17ba0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ba4:	cmn	r0, #1
   17ba8:	bne	17bdc <__assert_fail@plt+0x5024>
   17bac:	bl	128d0 <__errno_location@plt>
   17bb0:	ldr	r1, [r0]
   17bb4:	movw	r0, #25008	; 0x61b0
   17bb8:	movt	r0, #7
   17bbc:	str	r1, [sp, #44]	; 0x2c
   17bc0:	bl	12864 <gettext@plt>
   17bc4:	movw	r1, #1
   17bc8:	str	r0, [sp, #40]	; 0x28
   17bcc:	mov	r0, r1
   17bd0:	ldr	r1, [sp, #44]	; 0x2c
   17bd4:	ldr	r2, [sp, #40]	; 0x28
   17bd8:	bl	12780 <error@plt>
   17bdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17be0:	cmp	r0, #0
   17be4:	bne	17ce0 <__assert_fail@plt+0x5128>
   17be8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17bec:	ldr	r0, [r0, #104]	; 0x68
   17bf0:	movw	r1, #0
   17bf4:	cmp	r1, r0
   17bf8:	beq	17c00 <__assert_fail@plt+0x5048>
   17bfc:	b	17c20 <__assert_fail@plt+0x5068>
   17c00:	movw	r0, #25020	; 0x61bc
   17c04:	movt	r0, #7
   17c08:	movw	r1, #24883	; 0x6133
   17c0c:	movt	r1, #7
   17c10:	movw	r2, #321	; 0x141
   17c14:	movw	r3, #25047	; 0x61d7
   17c18:	movt	r3, #7
   17c1c:	bl	12bb8 <__assert_fail@plt>
   17c20:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17c24:	ldrb	r0, [r0, #100]	; 0x64
   17c28:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17c2c:	ldr	r1, [r1, #104]	; 0x68
   17c30:	and	r0, r0, #1
   17c34:	bl	17ec8 <__assert_fail@plt+0x5310>
   17c38:	tst	r0, #1
   17c3c:	bne	17c48 <__assert_fail@plt+0x5090>
   17c40:	movw	r0, #1
   17c44:	bl	125b8 <_exit@plt>
   17c48:	bl	296e0 <__assert_fail@plt+0x16b28>
   17c4c:	tst	r0, #1
   17c50:	beq	17c58 <__assert_fail@plt+0x50a0>
   17c54:	bl	29730 <__assert_fail@plt+0x16b78>
   17c58:	b	17c5c <__assert_fail@plt+0x50a4>
   17c5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   17c60:	bl	28bac <__assert_fail@plt+0x15ff4>
   17c64:	tst	r0, #1
   17c68:	beq	17c7c <__assert_fail@plt+0x50c4>
   17c6c:	bl	128d0 <__errno_location@plt>
   17c70:	movw	r1, #7
   17c74:	str	r1, [r0]
   17c78:	b	17c8c <__assert_fail@plt+0x50d4>
   17c7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   17c80:	ldr	r0, [r0]
   17c84:	ldr	r1, [fp, #-20]	; 0xffffffec
   17c88:	bl	125d0 <execvp@plt>
   17c8c:	bl	128d0 <__errno_location@plt>
   17c90:	ldr	r1, [r0]
   17c94:	ldr	r0, [fp, #-20]	; 0xffffffec
   17c98:	ldr	r0, [r0]
   17c9c:	movw	r2, #0
   17ca0:	str	r0, [sp, #36]	; 0x24
   17ca4:	mov	r0, r2
   17ca8:	ldr	r2, [sp, #36]	; 0x24
   17cac:	str	r1, [sp, #32]
   17cb0:	mov	r1, r2
   17cb4:	bl	1d994 <__assert_fail@plt+0xaddc>
   17cb8:	movw	r1, #0
   17cbc:	str	r0, [sp, #28]
   17cc0:	mov	r0, r1
   17cc4:	ldr	r1, [sp, #32]
   17cc8:	movw	r2, #50143	; 0xc3df
   17ccc:	movt	r2, #7
   17cd0:	ldr	r3, [sp, #28]
   17cd4:	bl	12780 <error@plt>
   17cd8:	movw	r0, #1
   17cdc:	bl	125b8 <_exit@plt>
   17ce0:	b	17ce4 <__assert_fail@plt+0x512c>
   17ce4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ce8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17cec:	add	r1, r1, #108	; 0x6c
   17cf0:	movw	r2, #0
   17cf4:	bl	12714 <waitpid@plt>
   17cf8:	cmn	r0, #1
   17cfc:	bne	17d7c <__assert_fail@plt+0x51c4>
   17d00:	bl	128d0 <__errno_location@plt>
   17d04:	ldr	r0, [r0]
   17d08:	cmp	r0, #4
   17d0c:	beq	17d78 <__assert_fail@plt+0x51c0>
   17d10:	bl	128d0 <__errno_location@plt>
   17d14:	ldr	r1, [r0]
   17d18:	movw	r0, #25107	; 0x6213
   17d1c:	movt	r0, #7
   17d20:	str	r1, [sp, #24]
   17d24:	bl	12864 <gettext@plt>
   17d28:	ldr	r1, [fp, #-20]	; 0xffffffec
   17d2c:	ldr	r1, [r1]
   17d30:	movw	r2, #0
   17d34:	str	r0, [sp, #20]
   17d38:	mov	r0, r2
   17d3c:	bl	1d994 <__assert_fail@plt+0xaddc>
   17d40:	movw	r1, #0
   17d44:	str	r0, [sp, #16]
   17d48:	mov	r0, r1
   17d4c:	ldr	r1, [sp, #24]
   17d50:	ldr	r2, [sp, #20]
   17d54:	ldr	r3, [sp, #16]
   17d58:	bl	12780 <error@plt>
   17d5c:	movw	r0, #57436	; 0xe05c
   17d60:	movt	r0, #8
   17d64:	movw	r1, #1
   17d68:	str	r1, [r0, #28]
   17d6c:	movw	r0, #0
   17d70:	str	r0, [fp, #-4]
   17d74:	b	17ebc <__assert_fail@plt+0x5304>
   17d78:	b	17ce4 <__assert_fail@plt+0x512c>
   17d7c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17d80:	ldr	r0, [r0, #108]	; 0x6c
   17d84:	and	r0, r0, #127	; 0x7f
   17d88:	add	r0, r0, #1
   17d8c:	sxtb	r0, r0
   17d90:	asr	r0, r0, #1
   17d94:	cmp	r0, #0
   17d98:	ble	17e2c <__assert_fail@plt+0x5274>
   17d9c:	movw	r0, #25128	; 0x6228
   17da0:	movt	r0, #7
   17da4:	bl	12864 <gettext@plt>
   17da8:	movw	r1, #57480	; 0xe088
   17dac:	movt	r1, #8
   17db0:	ldr	r1, [r1, #72]	; 0x48
   17db4:	ldr	r2, [fp, #-20]	; 0xffffffec
   17db8:	ldr	r2, [r2]
   17dbc:	movw	r3, #0
   17dc0:	str	r0, [sp, #12]
   17dc4:	mov	r0, r3
   17dc8:	bl	487d0 <__assert_fail@plt+0x35c18>
   17dcc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17dd0:	ldr	r1, [r1, #108]	; 0x6c
   17dd4:	and	r1, r1, #127	; 0x7f
   17dd8:	movw	r2, #0
   17ddc:	str	r0, [sp, #8]
   17de0:	mov	r0, r2
   17de4:	str	r1, [sp, #4]
   17de8:	mov	r1, r2
   17dec:	ldr	r2, [sp, #12]
   17df0:	ldr	r3, [sp, #8]
   17df4:	ldr	ip, [sp, #4]
   17df8:	str	ip, [sp]
   17dfc:	bl	12780 <error@plt>
   17e00:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17e04:	ldrb	r0, [r0]
   17e08:	tst	r0, #1
   17e0c:	beq	17e20 <__assert_fail@plt+0x5268>
   17e10:	movw	r0, #57436	; 0xe05c
   17e14:	movt	r0, #8
   17e18:	movw	r1, #1
   17e1c:	str	r1, [r0, #28]
   17e20:	movw	r0, #1
   17e24:	str	r0, [fp, #-4]
   17e28:	b	17ebc <__assert_fail@plt+0x5304>
   17e2c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17e30:	ldr	r0, [r0, #108]	; 0x6c
   17e34:	and	r0, r0, #65280	; 0xff00
   17e38:	asr	r0, r0, #8
   17e3c:	str	r0, [fp, #-36]	; 0xffffffdc
   17e40:	movw	r0, #57480	; 0xe088
   17e44:	movt	r0, #8
   17e48:	ldr	r0, [r0, #44]	; 0x2c
   17e4c:	and	r0, r0, #32
   17e50:	cmp	r0, #0
   17e54:	beq	17e78 <__assert_fail@plt+0x52c0>
   17e58:	movw	r0, #55080	; 0xd728
   17e5c:	movt	r0, #8
   17e60:	ldr	r0, [r0]
   17e64:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17e68:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17e6c:	movw	r1, #25155	; 0x6243
   17e70:	movt	r1, #7
   17e74:	bl	128c4 <fprintf@plt>
   17e78:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17e7c:	movw	r1, #0
   17e80:	cmp	r1, r0
   17e84:	bne	17e94 <__assert_fail@plt+0x52dc>
   17e88:	movw	r0, #1
   17e8c:	str	r0, [fp, #-4]
   17e90:	b	17ebc <__assert_fail@plt+0x5304>
   17e94:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17e98:	ldrb	r0, [r0]
   17e9c:	tst	r0, #1
   17ea0:	beq	17eb4 <__assert_fail@plt+0x52fc>
   17ea4:	movw	r0, #57436	; 0xe05c
   17ea8:	movt	r0, #8
   17eac:	movw	r1, #1
   17eb0:	str	r1, [r0, #28]
   17eb4:	movw	r0, #1
   17eb8:	str	r0, [fp, #-4]
   17ebc:	ldr	r0, [fp, #-4]
   17ec0:	mov	sp, fp
   17ec4:	pop	{fp, pc}
   17ec8:	push	{fp, lr}
   17ecc:	mov	fp, sp
   17ed0:	sub	sp, sp, #64	; 0x40
   17ed4:	and	r0, r0, #1
   17ed8:	strb	r0, [fp, #-1]
   17edc:	str	r1, [fp, #-8]
   17ee0:	movw	r0, #1
   17ee4:	strb	r0, [fp, #-9]
   17ee8:	ldrb	r0, [fp, #-1]
   17eec:	tst	r0, #1
   17ef0:	beq	17ff0 <__assert_fail@plt+0x5438>
   17ef4:	movw	r0, #25277	; 0x62bd
   17ef8:	movt	r0, #7
   17efc:	ldrb	r1, [r0]
   17f00:	strb	r1, [fp, #-19]	; 0xffffffed
   17f04:	ldrb	r1, [r0, #1]
   17f08:	strb	r1, [fp, #-18]	; 0xffffffee
   17f0c:	ldrb	r1, [r0, #2]
   17f10:	strb	r1, [fp, #-17]	; 0xffffffef
   17f14:	ldrb	r1, [r0, #3]
   17f18:	strb	r1, [fp, #-16]
   17f1c:	ldrb	r1, [r0, #4]
   17f20:	strb	r1, [fp, #-15]
   17f24:	ldrb	r1, [r0, #5]
   17f28:	strb	r1, [fp, #-14]
   17f2c:	ldrb	r1, [r0, #6]
   17f30:	strb	r1, [fp, #-13]
   17f34:	ldrb	r1, [r0, #7]
   17f38:	strb	r1, [fp, #-12]
   17f3c:	ldrb	r1, [r0, #8]
   17f40:	strb	r1, [fp, #-11]
   17f44:	ldrb	r0, [r0, #9]
   17f48:	strb	r0, [fp, #-10]
   17f4c:	movw	r0, #0
   17f50:	bl	12b70 <close@plt>
   17f54:	cmp	r0, #0
   17f58:	bge	17f98 <__assert_fail@plt+0x53e0>
   17f5c:	bl	128d0 <__errno_location@plt>
   17f60:	ldr	r1, [r0]
   17f64:	movw	r0, #25287	; 0x62c7
   17f68:	movt	r0, #7
   17f6c:	str	r1, [fp, #-24]	; 0xffffffe8
   17f70:	bl	12864 <gettext@plt>
   17f74:	movw	r1, #0
   17f78:	str	r0, [fp, #-28]	; 0xffffffe4
   17f7c:	mov	r0, r1
   17f80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17f84:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17f88:	bl	12780 <error@plt>
   17f8c:	movw	r0, #0
   17f90:	strb	r0, [fp, #-9]
   17f94:	b	17fec <__assert_fail@plt+0x5434>
   17f98:	ldr	r1, [pc, #344]	; 180f8 <__assert_fail@plt+0x5540>
   17f9c:	sub	r0, fp, #19
   17fa0:	bl	2c5a4 <__assert_fail@plt+0x199ec>
   17fa4:	cmp	r0, #0
   17fa8:	bge	17fe8 <__assert_fail@plt+0x5430>
   17fac:	bl	128d0 <__errno_location@plt>
   17fb0:	sub	r1, fp, #19
   17fb4:	ldr	r0, [r0]
   17fb8:	movw	r2, #0
   17fbc:	str	r0, [sp, #32]
   17fc0:	mov	r0, r2
   17fc4:	bl	1d994 <__assert_fail@plt+0xaddc>
   17fc8:	movw	r1, #0
   17fcc:	str	r0, [sp, #28]
   17fd0:	mov	r0, r1
   17fd4:	ldr	r1, [sp, #32]
   17fd8:	movw	r2, #50143	; 0xc3df
   17fdc:	movt	r2, #7
   17fe0:	ldr	r3, [sp, #28]
   17fe4:	bl	12780 <error@plt>
   17fe8:	b	17fec <__assert_fail@plt+0x5434>
   17fec:	b	17ff0 <__assert_fail@plt+0x5438>
   17ff0:	ldr	r0, [fp, #-8]
   17ff4:	bl	48e10 <__assert_fail@plt+0x36258>
   17ff8:	movw	r1, #0
   17ffc:	cmp	r1, r0
   18000:	beq	180e8 <__assert_fail@plt+0x5530>
   18004:	bl	128d0 <__errno_location@plt>
   18008:	ldr	r1, [r0]
   1800c:	movw	r0, #25315	; 0x62e3
   18010:	movt	r0, #7
   18014:	str	r1, [sp, #24]
   18018:	bl	12864 <gettext@plt>
   1801c:	ldr	r1, [fp, #-8]
   18020:	ldr	r1, [r1]
   18024:	cmp	r1, #0
   18028:	movw	r1, #0
   1802c:	str	r0, [sp, #20]
   18030:	str	r1, [sp, #16]
   18034:	bge	18054 <__assert_fail@plt+0x549c>
   18038:	ldr	r0, [fp, #-8]
   1803c:	ldr	r0, [r0, #4]
   18040:	movw	r1, #0
   18044:	cmp	r0, r1
   18048:	movw	r0, #0
   1804c:	movne	r0, #1
   18050:	str	r0, [sp, #16]
   18054:	ldr	r0, [sp, #16]
   18058:	tst	r0, #1
   1805c:	movw	r0, #29909	; 0x74d5
   18060:	movt	r0, #7
   18064:	movw	r1, #37345	; 0x91e1
   18068:	movt	r1, #7
   1806c:	movne	r0, r1
   18070:	ldr	r1, [fp, #-8]
   18074:	ldr	r1, [r1]
   18078:	cmp	r1, #0
   1807c:	str	r0, [sp, #12]
   18080:	bge	180a8 <__assert_fail@plt+0x54f0>
   18084:	ldr	r0, [fp, #-8]
   18088:	ldr	r0, [r0, #4]
   1808c:	movw	r1, #0
   18090:	cmp	r0, r1
   18094:	beq	180a8 <__assert_fail@plt+0x54f0>
   18098:	ldr	r0, [fp, #-8]
   1809c:	ldr	r0, [r0, #4]
   180a0:	str	r0, [sp, #8]
   180a4:	b	180b8 <__assert_fail@plt+0x5500>
   180a8:	movw	r0, #29909	; 0x74d5
   180ac:	movt	r0, #7
   180b0:	str	r0, [sp, #8]
   180b4:	b	180b8 <__assert_fail@plt+0x5500>
   180b8:	ldr	r0, [sp, #8]
   180bc:	movw	r1, #0
   180c0:	str	r0, [sp, #4]
   180c4:	mov	r0, r1
   180c8:	ldr	r1, [sp, #24]
   180cc:	ldr	r2, [sp, #20]
   180d0:	ldr	r3, [sp, #12]
   180d4:	ldr	ip, [sp, #4]
   180d8:	str	ip, [sp]
   180dc:	bl	12780 <error@plt>
   180e0:	movw	r0, #0
   180e4:	strb	r0, [fp, #-9]
   180e8:	ldrb	r0, [fp, #-9]
   180ec:	and	r0, r0, #1
   180f0:	mov	sp, fp
   180f4:	pop	{fp, pc}
   180f8:	andeq	r0, r2, r0
   180fc:	push	{fp, lr}
   18100:	mov	fp, sp
   18104:	sub	sp, sp, #24
   18108:	str	r0, [fp, #-8]
   1810c:	str	r1, [sp, #12]
   18110:	str	r2, [sp, #8]
   18114:	movw	r0, #8
   18118:	bl	4a2f0 <__assert_fail@plt+0x37738>
   1811c:	ldr	r1, [fp, #-8]
   18120:	str	r0, [r1, #104]	; 0x68
   18124:	ldr	r0, [fp, #-8]
   18128:	ldr	r0, [r0, #104]	; 0x68
   1812c:	movw	r1, #0
   18130:	str	r1, [r0, #4]
   18134:	ldr	r0, [sp, #12]
   18138:	ldr	r2, [sp, #8]
   1813c:	str	r1, [sp, #4]
   18140:	mov	r1, r2
   18144:	ldr	r2, [sp, #4]
   18148:	bl	32480 <__assert_fail@plt+0x1f8c8>
   1814c:	ldr	r1, [fp, #-8]
   18150:	ldr	r1, [r1, #104]	; 0x68
   18154:	str	r0, [r1]
   18158:	ldr	r0, [fp, #-8]
   1815c:	ldr	r0, [r0, #104]	; 0x68
   18160:	ldr	r0, [r0]
   18164:	cmp	r0, #0
   18168:	bge	1817c <__assert_fail@plt+0x55c4>
   1816c:	movw	r0, #0
   18170:	and	r0, r0, #1
   18174:	strb	r0, [fp, #-1]
   18178:	b	181a0 <__assert_fail@plt+0x55e8>
   1817c:	ldr	r0, [fp, #-8]
   18180:	ldr	r0, [r0, #104]	; 0x68
   18184:	ldr	r0, [r0]
   18188:	movw	r1, #1
   1818c:	and	r1, r1, #1
   18190:	bl	2bf20 <__assert_fail@plt+0x19368>
   18194:	movw	r1, #1
   18198:	and	r1, r1, #1
   1819c:	strb	r1, [fp, #-1]
   181a0:	ldrb	r0, [fp, #-1]
   181a4:	and	r0, r0, #1
   181a8:	mov	sp, fp
   181ac:	pop	{fp, pc}
   181b0:	push	{fp, lr}
   181b4:	mov	fp, sp
   181b8:	sub	sp, sp, #24
   181bc:	str	r0, [fp, #-8]
   181c0:	and	r0, r1, #1
   181c4:	strb	r0, [fp, #-9]
   181c8:	movw	r0, #0
   181cc:	str	r0, [sp, #8]
   181d0:	ldrb	r0, [fp, #-9]
   181d4:	tst	r0, #1
   181d8:	beq	181e8 <__assert_fail@plt+0x5630>
   181dc:	ldr	r0, [sp, #8]
   181e0:	orr	r0, r0, #16
   181e4:	str	r0, [sp, #8]
   181e8:	movw	r0, #55116	; 0xd74c
   181ec:	movt	r0, #8
   181f0:	ldr	r0, [r0]
   181f4:	cmp	r0, #0
   181f8:	beq	1827c <__assert_fail@plt+0x56c4>
   181fc:	movw	r0, #0
   18200:	str	r0, [sp, #4]
   18204:	ldr	r0, [sp, #4]
   18208:	movw	r1, #55116	; 0xd74c
   1820c:	movt	r1, #8
   18210:	ldr	r1, [r1]
   18214:	cmp	r0, r1
   18218:	bcs	1826c <__assert_fail@plt+0x56b4>
   1821c:	ldr	r0, [fp, #-8]
   18220:	movw	r1, #55120	; 0xd750
   18224:	movt	r1, #8
   18228:	ldr	r1, [r1]
   1822c:	ldr	r2, [sp, #4]
   18230:	add	r1, r1, r2, lsl #2
   18234:	ldr	r1, [r1]
   18238:	ldr	r2, [sp, #8]
   1823c:	bl	127a4 <fnmatch@plt>
   18240:	cmp	r0, #0
   18244:	bne	18258 <__assert_fail@plt+0x56a0>
   18248:	movw	r0, #1
   1824c:	and	r0, r0, #1
   18250:	strb	r0, [fp, #-1]
   18254:	b	182a4 <__assert_fail@plt+0x56ec>
   18258:	b	1825c <__assert_fail@plt+0x56a4>
   1825c:	ldr	r0, [sp, #4]
   18260:	add	r0, r0, #1
   18264:	str	r0, [sp, #4]
   18268:	b	18204 <__assert_fail@plt+0x564c>
   1826c:	movw	r0, #0
   18270:	and	r0, r0, #1
   18274:	strb	r0, [fp, #-1]
   18278:	b	182a4 <__assert_fail@plt+0x56ec>
   1827c:	ldr	r0, [fp, #-8]
   18280:	ldr	r2, [sp, #8]
   18284:	movw	r1, #26652	; 0x681c
   18288:	movt	r1, #7
   1828c:	bl	127a4 <fnmatch@plt>
   18290:	cmp	r0, #0
   18294:	movw	r0, #0
   18298:	moveq	r0, #1
   1829c:	and	r0, r0, #1
   182a0:	strb	r0, [fp, #-1]
   182a4:	ldrb	r0, [fp, #-1]
   182a8:	and	r0, r0, #1
   182ac:	mov	sp, fp
   182b0:	pop	{fp, pc}
   182b4:	push	{fp, lr}
   182b8:	mov	fp, sp
   182bc:	sub	sp, sp, #8
   182c0:	str	r0, [sp, #4]
   182c4:	str	r1, [sp]
   182c8:	ldr	r0, [sp]
   182cc:	ldr	r0, [r0, #36]	; 0x24
   182d0:	movw	r1, #0
   182d4:	cmp	r0, r1
   182d8:	beq	18300 <__assert_fail@plt+0x5748>
   182dc:	ldr	r0, [sp, #4]
   182e0:	ldr	r1, [sp]
   182e4:	ldr	r2, [r1, #4]
   182e8:	ldr	r1, [sp]
   182ec:	ldr	r3, [r1, #36]	; 0x24
   182f0:	movw	r1, #25346	; 0x6302
   182f4:	movt	r1, #7
   182f8:	bl	128c4 <fprintf@plt>
   182fc:	b	18318 <__assert_fail@plt+0x5760>
   18300:	ldr	r0, [sp, #4]
   18304:	ldr	r1, [sp]
   18308:	ldr	r2, [r1, #4]
   1830c:	movw	r1, #50143	; 0xc3df
   18310:	movt	r1, #7
   18314:	bl	128c4 <fprintf@plt>
   18318:	mov	sp, fp
   1831c:	pop	{fp, pc}
   18320:	movw	r0, #55124	; 0xd754
   18324:	movt	r0, #8
   18328:	ldr	r0, [r0]
   1832c:	bx	lr
   18330:	push	{fp, lr}
   18334:	mov	fp, sp
   18338:	sub	sp, sp, #24
   1833c:	str	r0, [fp, #-8]
   18340:	ldr	r0, [fp, #-8]
   18344:	movw	r1, #0
   18348:	cmp	r1, r0
   1834c:	beq	18354 <__assert_fail@plt+0x579c>
   18350:	b	18374 <__assert_fail@plt+0x57bc>
   18354:	movw	r0, #25352	; 0x6308
   18358:	movt	r0, #7
   1835c:	movw	r1, #25362	; 0x6312
   18360:	movt	r1, #7
   18364:	movw	r2, #1156	; 0x484
   18368:	movw	r3, #25369	; 0x6319
   1836c:	movt	r3, #7
   18370:	bl	12bb8 <__assert_fail@plt>
   18374:	ldr	r0, [fp, #-8]
   18378:	ldr	r0, [r0, #160]	; 0xa0
   1837c:	movw	r1, #0
   18380:	cmp	r0, r1
   18384:	beq	18394 <__assert_fail@plt+0x57dc>
   18388:	ldr	r0, [fp, #-8]
   1838c:	ldr	r0, [r0, #160]	; 0xa0
   18390:	bl	18330 <__assert_fail@plt+0x5778>
   18394:	ldr	r0, [fp, #-8]
   18398:	ldr	r0, [r0, #156]	; 0x9c
   1839c:	movw	r1, #0
   183a0:	cmp	r0, r1
   183a4:	beq	183b4 <__assert_fail@plt+0x57fc>
   183a8:	ldr	r0, [fp, #-8]
   183ac:	ldr	r0, [r0, #156]	; 0x9c
   183b0:	bl	18330 <__assert_fail@plt+0x5778>
   183b4:	ldr	r0, [fp, #-8]
   183b8:	ldr	r0, [r0, #8]
   183bc:	cmp	r0, #5
   183c0:	beq	183c8 <__assert_fail@plt+0x5810>
   183c4:	b	183e8 <__assert_fail@plt+0x5830>
   183c8:	movw	r0, #25419	; 0x634b
   183cc:	movt	r0, #7
   183d0:	movw	r1, #25362	; 0x6312
   183d4:	movt	r1, #7
   183d8:	movw	r2, #1163	; 0x48b
   183dc:	movw	r3, #25369	; 0x6319
   183e0:	movt	r3, #7
   183e4:	bl	12bb8 <__assert_fail@plt>
   183e8:	ldr	r0, [fp, #-8]
   183ec:	ldr	r0, [r0, #8]
   183f0:	cmp	r0, #4
   183f4:	beq	183fc <__assert_fail@plt+0x5844>
   183f8:	b	1841c <__assert_fail@plt+0x5864>
   183fc:	movw	r0, #25444	; 0x6364
   18400:	movt	r0, #7
   18404:	movw	r1, #25362	; 0x6312
   18408:	movt	r1, #7
   1840c:	movw	r2, #1164	; 0x48c
   18410:	movw	r3, #25369	; 0x6319
   18414:	movt	r3, #7
   18418:	bl	12bb8 <__assert_fail@plt>
   1841c:	ldr	r0, [fp, #-8]
   18420:	ldr	r0, [r0, #8]
   18424:	cmp	r0, #5
   18428:	str	r0, [sp, #8]
   1842c:	bhi	18710 <__assert_fail@plt+0x5b58>
   18430:	add	r0, pc, #8
   18434:	ldr	r1, [sp, #8]
   18438:	ldr	r0, [r0, r1, lsl #2]
   1843c:	mov	pc, r0
   18440:	andeq	r8, r1, r8, asr r4
   18444:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   18448:	andeq	r8, r1, r8, asr r5
   1844c:	andeq	r8, r1, r0, lsl #12
   18450:	strdeq	r8, [r1], -r4
   18454:	strdeq	r8, [r1], -r4
   18458:	ldr	r0, [fp, #-8]
   1845c:	ldr	r0, [r0, #160]	; 0xa0
   18460:	movw	r1, #0
   18464:	cmp	r1, r0
   18468:	bne	18470 <__assert_fail@plt+0x58b8>
   1846c:	b	18490 <__assert_fail@plt+0x58d8>
   18470:	movw	r0, #25468	; 0x637c
   18474:	movt	r0, #7
   18478:	movw	r1, #25362	; 0x6312
   1847c:	movt	r1, #7
   18480:	movw	r2, #1169	; 0x491
   18484:	movw	r3, #25369	; 0x6319
   18488:	movt	r3, #7
   1848c:	bl	12bb8 <__assert_fail@plt>
   18490:	ldr	r0, [fp, #-8]
   18494:	ldr	r0, [r0, #156]	; 0x9c
   18498:	movw	r1, #0
   1849c:	cmp	r1, r0
   184a0:	bne	184a8 <__assert_fail@plt+0x58f0>
   184a4:	b	184c8 <__assert_fail@plt+0x5910>
   184a8:	movw	r0, #25490	; 0x6392
   184ac:	movt	r0, #7
   184b0:	movw	r1, #25362	; 0x6312
   184b4:	movt	r1, #7
   184b8:	movw	r2, #1170	; 0x492
   184bc:	movw	r3, #25369	; 0x6319
   184c0:	movt	r3, #7
   184c4:	bl	12bb8 <__assert_fail@plt>
   184c8:	ldr	r0, [fp, #-8]
   184cc:	vldr	s0, [r0, #28]
   184d0:	vstr	s0, [fp, #-4]
   184d4:	b	18730 <__assert_fail@plt+0x5b78>
   184d8:	ldr	r0, [fp, #-8]
   184dc:	ldr	r0, [r0, #160]	; 0xa0
   184e0:	movw	r1, #0
   184e4:	cmp	r1, r0
   184e8:	bne	184f0 <__assert_fail@plt+0x5938>
   184ec:	b	18510 <__assert_fail@plt+0x5958>
   184f0:	movw	r0, #25468	; 0x637c
   184f4:	movt	r0, #7
   184f8:	movw	r1, #25362	; 0x6312
   184fc:	movt	r1, #7
   18500:	movw	r2, #1174	; 0x496
   18504:	movw	r3, #25369	; 0x6319
   18508:	movt	r3, #7
   1850c:	bl	12bb8 <__assert_fail@plt>
   18510:	ldr	r0, [fp, #-8]
   18514:	ldr	r0, [r0, #156]	; 0x9c
   18518:	movw	r1, #0
   1851c:	cmp	r1, r0
   18520:	bne	18528 <__assert_fail@plt+0x5970>
   18524:	b	18548 <__assert_fail@plt+0x5990>
   18528:	movw	r0, #25490	; 0x6392
   1852c:	movt	r0, #7
   18530:	movw	r1, #25362	; 0x6312
   18534:	movt	r1, #7
   18538:	movw	r2, #1175	; 0x497
   1853c:	movw	r3, #25369	; 0x6319
   18540:	movt	r3, #7
   18544:	bl	12bb8 <__assert_fail@plt>
   18548:	ldr	r0, [fp, #-8]
   1854c:	vldr	s0, [r0, #28]
   18550:	vstr	s0, [fp, #-4]
   18554:	b	18730 <__assert_fail@plt+0x5b78>
   18558:	ldr	r0, [fp, #-8]
   1855c:	ldr	r0, [r0]
   18560:	movw	r1, #23048	; 0x5a08
   18564:	movt	r1, #1
   18568:	cmp	r0, r1
   1856c:	bne	18574 <__assert_fail@plt+0x59bc>
   18570:	b	18594 <__assert_fail@plt+0x59dc>
   18574:	movw	r0, #25511	; 0x63a7
   18578:	movt	r0, #7
   1857c:	movw	r1, #25362	; 0x6312
   18580:	movt	r1, #7
   18584:	movw	r2, #1180	; 0x49c
   18588:	movw	r3, #25369	; 0x6319
   1858c:	movt	r3, #7
   18590:	bl	12bb8 <__assert_fail@plt>
   18594:	ldr	r0, [fp, #-8]
   18598:	ldr	r0, [r0, #156]	; 0x9c
   1859c:	movw	r1, #0
   185a0:	cmp	r1, r0
   185a4:	bne	185ac <__assert_fail@plt+0x59f4>
   185a8:	b	185cc <__assert_fail@plt+0x5a14>
   185ac:	movw	r0, #25490	; 0x6392
   185b0:	movt	r0, #7
   185b4:	movw	r1, #25362	; 0x6312
   185b8:	movt	r1, #7
   185bc:	movw	r2, #1181	; 0x49d
   185c0:	movw	r3, #25369	; 0x6319
   185c4:	movt	r3, #7
   185c8:	bl	12bb8 <__assert_fail@plt>
   185cc:	ldr	r0, [fp, #-8]
   185d0:	ldr	r0, [r0, #160]	; 0xa0
   185d4:	vldr	s0, [r0, #28]
   185d8:	vcvt.f64.f32	d16, s0
   185dc:	vmov.f64	d17, #112	; 0x3f800000  1.0
   185e0:	vsub.f64	d16, d17, d16
   185e4:	vcvt.f32.f64	s0, d16
   185e8:	ldr	r0, [fp, #-8]
   185ec:	vstr	s0, [r0, #28]
   185f0:	ldr	r0, [fp, #-8]
   185f4:	vldr	s0, [r0, #28]
   185f8:	vstr	s0, [fp, #-4]
   185fc:	b	18730 <__assert_fail@plt+0x5b78>
   18600:	ldr	r0, [fp, #-8]
   18604:	ldr	r0, [r0]
   18608:	movw	r1, #18388	; 0x47d4
   1860c:	movt	r1, #1
   18610:	cmp	r0, r1
   18614:	bne	18644 <__assert_fail@plt+0x5a8c>
   18618:	ldr	r0, [fp, #-8]
   1861c:	ldr	r0, [r0, #160]	; 0xa0
   18620:	bl	1873c <__assert_fail@plt+0x5b84>
   18624:	ldr	r0, [fp, #-8]
   18628:	ldr	r0, [r0, #156]	; 0x9c
   1862c:	vstr	s0, [sp, #4]
   18630:	bl	1873c <__assert_fail@plt+0x5b84>
   18634:	vldr	s2, [sp, #4]
   18638:	vmul.f32	s0, s2, s0
   1863c:	vstr	s0, [sp, #12]
   18640:	b	186d4 <__assert_fail@plt+0x5b1c>
   18644:	ldr	r0, [fp, #-8]
   18648:	ldr	r0, [r0]
   1864c:	movw	r1, #19156	; 0x4ad4
   18650:	movt	r1, #1
   18654:	cmp	r0, r1
   18658:	bne	18668 <__assert_fail@plt+0x5ab0>
   1865c:	vmov.f32	s0, #112	; 0x3f800000  1.0
   18660:	vstr	s0, [sp, #12]
   18664:	b	186d0 <__assert_fail@plt+0x5b18>
   18668:	ldr	r0, [fp, #-8]
   1866c:	ldr	r0, [r0]
   18670:	movw	r1, #24428	; 0x5f6c
   18674:	movt	r1, #1
   18678:	cmp	r0, r1
   1867c:	bne	186ac <__assert_fail@plt+0x5af4>
   18680:	ldr	r0, [fp, #-8]
   18684:	ldr	r0, [r0, #160]	; 0xa0
   18688:	bl	1873c <__assert_fail@plt+0x5b84>
   1868c:	ldr	r0, [fp, #-8]
   18690:	ldr	r0, [r0, #156]	; 0x9c
   18694:	vstr	s0, [sp]
   18698:	bl	1873c <__assert_fail@plt+0x5b84>
   1869c:	vldr	s2, [sp]
   186a0:	vadd.f32	s0, s2, s0
   186a4:	vstr	s0, [sp, #12]
   186a8:	b	186cc <__assert_fail@plt+0x5b14>
   186ac:	movw	r0, #27249	; 0x6a71
   186b0:	movt	r0, #7
   186b4:	movw	r1, #25362	; 0x6312
   186b8:	movt	r1, #7
   186bc:	movw	r2, #1204	; 0x4b4
   186c0:	movw	r3, #25369	; 0x6319
   186c4:	movt	r3, #7
   186c8:	bl	12bb8 <__assert_fail@plt>
   186cc:	b	186d0 <__assert_fail@plt+0x5b18>
   186d0:	b	186d4 <__assert_fail@plt+0x5b1c>
   186d4:	vldr	s0, [sp, #12]
   186d8:	bl	18778 <__assert_fail@plt+0x5bc0>
   186dc:	ldr	r0, [fp, #-8]
   186e0:	vstr	s0, [r0, #28]
   186e4:	ldr	r0, [fp, #-8]
   186e8:	vldr	s0, [r0, #28]
   186ec:	vstr	s0, [fp, #-4]
   186f0:	b	18730 <__assert_fail@plt+0x5b78>
   186f4:	ldr	r0, [fp, #-8]
   186f8:	vmov.f32	s0, #112	; 0x3f800000  1.0
   186fc:	vstr	s0, [r0, #28]
   18700:	ldr	r0, [fp, #-8]
   18704:	vldr	s0, [r0, #28]
   18708:	vstr	s0, [fp, #-4]
   1870c:	b	18730 <__assert_fail@plt+0x5b78>
   18710:	movw	r0, #27249	; 0x6a71
   18714:	movt	r0, #7
   18718:	movw	r1, #25362	; 0x6312
   1871c:	movt	r1, #7
   18720:	movw	r2, #1216	; 0x4c0
   18724:	movw	r3, #25369	; 0x6319
   18728:	movt	r3, #7
   1872c:	bl	12bb8 <__assert_fail@plt>
   18730:	vldr	s0, [fp, #-4]
   18734:	mov	sp, fp
   18738:	pop	{fp, pc}
   1873c:	sub	sp, sp, #8
   18740:	str	r0, [sp]
   18744:	ldr	r0, [sp]
   18748:	movw	r1, #0
   1874c:	cmp	r0, r1
   18750:	beq	18764 <__assert_fail@plt+0x5bac>
   18754:	ldr	r0, [sp]
   18758:	vldr	s0, [r0, #28]
   1875c:	vstr	s0, [sp, #4]
   18760:	b	1876c <__assert_fail@plt+0x5bb4>
   18764:	vmov.f32	s0, #112	; 0x3f800000  1.0
   18768:	vstr	s0, [sp, #4]
   1876c:	vldr	s0, [sp, #4]
   18770:	add	sp, sp, #8
   18774:	bx	lr
   18778:	sub	sp, sp, #8
   1877c:	vstr	s0, [sp]
   18780:	vldr	s0, [sp]
   18784:	vmov.f32	s2, #112	; 0x3f800000  1.0
   18788:	vcmpe.f32	s0, s2
   1878c:	vmrs	APSR_nzcv, fpscr
   18790:	ble	187a0 <__assert_fail@plt+0x5be8>
   18794:	vmov.f32	s0, #112	; 0x3f800000  1.0
   18798:	vstr	s0, [sp, #4]
   1879c:	b	187c8 <__assert_fail@plt+0x5c10>
   187a0:	vldr	s0, [sp]
   187a4:	vcvt.f64.f32	d16, s0
   187a8:	vcmpe.f64	d16, #0.0
   187ac:	vmrs	APSR_nzcv, fpscr
   187b0:	bpl	187c0 <__assert_fail@plt+0x5c08>
   187b4:	vldr	s0, [pc, #24]	; 187d4 <__assert_fail@plt+0x5c1c>
   187b8:	vstr	s0, [sp, #4]
   187bc:	b	187c8 <__assert_fail@plt+0x5c10>
   187c0:	vldr	s0, [sp]
   187c4:	vstr	s0, [sp, #4]
   187c8:	vldr	s0, [sp, #4]
   187cc:	add	sp, sp, #8
   187d0:	bx	lr
   187d4:	andeq	r0, r0, r0
   187d8:	push	{fp, lr}
   187dc:	mov	fp, sp
   187e0:	sub	sp, sp, #144	; 0x90
   187e4:	str	r0, [fp, #-4]
   187e8:	str	r1, [fp, #-8]
   187ec:	str	r2, [fp, #-12]
   187f0:	movw	r0, #55128	; 0xd758
   187f4:	movt	r0, #8
   187f8:	mov	r1, #0
   187fc:	str	r1, [r0]
   18800:	ldr	r0, [fp, #-8]
   18804:	ldr	r1, [fp, #-12]
   18808:	add	r0, r0, r1, lsl #2
   1880c:	movw	r1, #55120	; 0xd750
   18810:	movt	r1, #8
   18814:	str	r0, [r1]
   18818:	ldr	r0, [fp, #-12]
   1881c:	str	r0, [fp, #-40]	; 0xffffffd8
   18820:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18824:	ldr	r1, [fp, #-4]
   18828:	cmp	r0, r1
   1882c:	movw	r0, #0
   18830:	str	r0, [fp, #-48]	; 0xffffffd0
   18834:	bge	18860 <__assert_fail@plt+0x5ca8>
   18838:	ldr	r0, [fp, #-8]
   1883c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18840:	add	r0, r0, r1, lsl #2
   18844:	ldr	r0, [r0]
   18848:	movw	r1, #1
   1884c:	and	r1, r1, #1
   18850:	bl	1cd4c <__assert_fail@plt+0xa194>
   18854:	mvn	r1, #0
   18858:	eor	r0, r0, r1
   1885c:	str	r0, [fp, #-48]	; 0xffffffd0
   18860:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18864:	tst	r0, #1
   18868:	beq	18890 <__assert_fail@plt+0x5cd8>
   1886c:	movw	r0, #55116	; 0xd74c
   18870:	movt	r0, #8
   18874:	ldr	r1, [r0]
   18878:	add	r1, r1, #1
   1887c:	str	r1, [r0]
   18880:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18884:	add	r0, r0, #1
   18888:	str	r0, [fp, #-40]	; 0xffffffd8
   1888c:	b	18820 <__assert_fail@plt+0x5c68>
   18890:	movw	r0, #37420	; 0x922c
   18894:	movt	r0, #7
   18898:	bl	21bb4 <__assert_fail@plt+0xeffc>
   1889c:	str	r0, [fp, #-36]	; 0xffffffdc
   188a0:	movw	r0, #27329	; 0x6ac1
   188a4:	movt	r0, #7
   188a8:	bl	21bb4 <__assert_fail@plt+0xeffc>
   188ac:	str	r0, [fp, #-28]	; 0xffffffe4
   188b0:	movw	r0, #25840	; 0x64f0
   188b4:	movt	r0, #7
   188b8:	bl	21bb4 <__assert_fail@plt+0xeffc>
   188bc:	str	r0, [fp, #-32]	; 0xffffffe0
   188c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   188c4:	movw	r1, #0
   188c8:	cmp	r0, r1
   188cc:	beq	188d4 <__assert_fail@plt+0x5d1c>
   188d0:	b	188f4 <__assert_fail@plt+0x5d3c>
   188d4:	movw	r0, #25536	; 0x63c0
   188d8:	movt	r0, #7
   188dc:	movw	r1, #25362	; 0x6312
   188e0:	movt	r1, #7
   188e4:	movw	r2, #1270	; 0x4f6
   188e8:	movw	r3, #25555	; 0x63d3
   188ec:	movt	r3, #7
   188f0:	bl	12bb8 <__assert_fail@plt>
   188f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   188f8:	movw	r1, #0
   188fc:	cmp	r0, r1
   18900:	beq	18908 <__assert_fail@plt+0x5d50>
   18904:	b	18928 <__assert_fail@plt+0x5d70>
   18908:	movw	r0, #25614	; 0x640e
   1890c:	movt	r0, #7
   18910:	movw	r1, #25362	; 0x6312
   18914:	movt	r1, #7
   18918:	movw	r2, #1271	; 0x4f7
   1891c:	movw	r3, #25555	; 0x63d3
   18920:	movt	r3, #7
   18924:	bl	12bb8 <__assert_fail@plt>
   18928:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1892c:	movw	r1, #0
   18930:	cmp	r0, r1
   18934:	beq	1893c <__assert_fail@plt+0x5d84>
   18938:	b	1895c <__assert_fail@plt+0x5da4>
   1893c:	movw	r0, #25634	; 0x6422
   18940:	movt	r0, #7
   18944:	movw	r1, #25362	; 0x6312
   18948:	movt	r1, #7
   1894c:	movw	r2, #1272	; 0x4f8
   18950:	movw	r3, #25555	; 0x63d3
   18954:	movt	r3, #7
   18958:	bl	12bb8 <__assert_fail@plt>
   1895c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18960:	ldr	r1, [fp, #-8]
   18964:	sub	r2, fp, #4
   18968:	bl	21e48 <__assert_fail@plt+0xf290>
   1896c:	movw	r1, #55132	; 0xd75c
   18970:	movt	r1, #8
   18974:	ldr	r2, [r1]
   18978:	movw	r3, #37420	; 0x922c
   1897c:	movt	r3, #7
   18980:	str	r3, [r2, #4]
   18984:	movw	r2, #55128	; 0xd758
   18988:	movt	r2, #8
   1898c:	ldr	r3, [r2]
   18990:	movw	ip, #1
   18994:	strb	ip, [r3, #33]	; 0x21
   18998:	ldr	r3, [fp, #-8]
   1899c:	ldr	ip, [fp, #-4]
   189a0:	ldr	r1, [r1]
   189a4:	ldr	r2, [r2]
   189a8:	str	r0, [fp, #-52]	; 0xffffffcc
   189ac:	mov	r0, r3
   189b0:	str	r1, [fp, #-56]	; 0xffffffc8
   189b4:	mov	r1, ip
   189b8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   189bc:	str	r2, [fp, #-60]	; 0xffffffc4
   189c0:	mov	r2, r3
   189c4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   189c8:	bl	21b6c <__assert_fail@plt+0xefb4>
   189cc:	movw	r0, #55132	; 0xd75c
   189d0:	movt	r0, #8
   189d4:	ldr	r0, [r0]
   189d8:	bl	17260 <__assert_fail@plt+0x46a8>
   189dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   189e0:	ldr	r1, [fp, #-4]
   189e4:	cmp	r0, r1
   189e8:	bge	18cac <__assert_fail@plt+0x60f4>
   189ec:	movw	r0, #57436	; 0xe05c
   189f0:	movt	r0, #8
   189f4:	mov	r1, #0
   189f8:	strb	r1, [r0, #40]	; 0x28
   189fc:	ldr	r0, [fp, #-8]
   18a00:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18a04:	add	r0, r0, r1, lsl #2
   18a08:	ldr	r0, [r0]
   18a0c:	movw	r1, #0
   18a10:	and	r1, r1, #1
   18a14:	bl	1cd4c <__assert_fail@plt+0xa194>
   18a18:	tst	r0, #1
   18a1c:	bne	18aa4 <__assert_fail@plt+0x5eec>
   18a20:	movw	r0, #25654	; 0x6436
   18a24:	movt	r0, #7
   18a28:	bl	12864 <gettext@plt>
   18a2c:	ldr	r1, [fp, #-8]
   18a30:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18a34:	ldr	r3, [r1, r2, lsl #2]
   18a38:	mov	r1, #0
   18a3c:	str	r0, [fp, #-64]	; 0xffffffc0
   18a40:	mov	r0, r1
   18a44:	ldr	r2, [fp, #-64]	; 0xffffffc0
   18a48:	bl	12780 <error@plt>
   18a4c:	ldr	r0, [fp, #-8]
   18a50:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18a54:	add	r0, r0, r1, lsl #2
   18a58:	ldr	r0, [r0]
   18a5c:	movw	r1, #0
   18a60:	bl	12984 <access@plt>
   18a64:	cmp	r0, #0
   18a68:	bne	18a9c <__assert_fail@plt+0x5ee4>
   18a6c:	movw	r0, #25690	; 0x645a
   18a70:	movt	r0, #7
   18a74:	bl	12864 <gettext@plt>
   18a78:	movw	r1, #55132	; 0xd75c
   18a7c:	movt	r1, #8
   18a80:	ldr	r1, [r1]
   18a84:	ldr	r3, [r1, #4]
   18a88:	movw	r1, #0
   18a8c:	str	r0, [fp, #-68]	; 0xffffffbc
   18a90:	mov	r0, r1
   18a94:	ldr	r2, [fp, #-68]	; 0xffffffbc
   18a98:	bl	12780 <error@plt>
   18a9c:	movw	r0, #1
   18aa0:	bl	1284c <exit@plt>
   18aa4:	ldr	r0, [fp, #-8]
   18aa8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18aac:	add	r0, r0, r1, lsl #2
   18ab0:	ldr	r0, [r0]
   18ab4:	str	r0, [fp, #-20]	; 0xffffffec
   18ab8:	ldr	r0, [fp, #-20]	; 0xffffffec
   18abc:	bl	21bb4 <__assert_fail@plt+0xeffc>
   18ac0:	str	r0, [fp, #-16]
   18ac4:	ldr	r0, [fp, #-16]
   18ac8:	movw	r1, #0
   18acc:	cmp	r0, r1
   18ad0:	bne	18afc <__assert_fail@plt+0x5f44>
   18ad4:	movw	r0, #25738	; 0x648a
   18ad8:	movt	r0, #7
   18adc:	bl	12864 <gettext@plt>
   18ae0:	ldr	r3, [fp, #-20]	; 0xffffffec
   18ae4:	movw	r1, #1
   18ae8:	str	r0, [sp, #72]	; 0x48
   18aec:	mov	r0, r1
   18af0:	movw	r1, #0
   18af4:	ldr	r2, [sp, #72]	; 0x48
   18af8:	bl	12780 <error@plt>
   18afc:	ldr	r0, [fp, #-16]
   18b00:	ldr	r0, [r0]
   18b04:	cmp	r0, #4
   18b08:	beq	18b18 <__assert_fail@plt+0x5f60>
   18b0c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18b10:	add	r0, r0, #1
   18b14:	str	r0, [fp, #-40]	; 0xffffffd8
   18b18:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18b1c:	str	r0, [fp, #-44]	; 0xffffffd4
   18b20:	ldr	r0, [fp, #-16]
   18b24:	ldr	r0, [r0, #8]
   18b28:	ldr	r1, [fp, #-16]
   18b2c:	ldr	r2, [fp, #-8]
   18b30:	str	r0, [sp, #68]	; 0x44
   18b34:	mov	r0, r1
   18b38:	mov	r1, r2
   18b3c:	sub	r2, fp, #40	; 0x28
   18b40:	ldr	r3, [sp, #68]	; 0x44
   18b44:	blx	r3
   18b48:	tst	r0, #1
   18b4c:	bne	18c28 <__assert_fail@plt+0x6070>
   18b50:	ldr	r0, [fp, #-8]
   18b54:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18b58:	add	r0, r0, r1, lsl #2
   18b5c:	ldr	r0, [r0]
   18b60:	movw	r1, #0
   18b64:	cmp	r0, r1
   18b68:	beq	18c00 <__assert_fail@plt+0x6048>
   18b6c:	ldr	r0, [fp, #-16]
   18b70:	ldr	r0, [r0]
   18b74:	movw	r1, #4
   18b78:	cmp	r1, r0
   18b7c:	bne	18bb8 <__assert_fail@plt+0x6000>
   18b80:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18b84:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18b88:	cmp	r0, r1
   18b8c:	bne	18bb8 <__assert_fail@plt+0x6000>
   18b90:	movw	r0, #25761	; 0x64a1
   18b94:	movt	r0, #7
   18b98:	bl	12864 <gettext@plt>
   18b9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18ba0:	movw	r1, #1
   18ba4:	str	r0, [sp, #64]	; 0x40
   18ba8:	mov	r0, r1
   18bac:	movw	r1, #0
   18bb0:	ldr	r2, [sp, #64]	; 0x40
   18bb4:	bl	12780 <error@plt>
   18bb8:	movw	r0, #25784	; 0x64b8
   18bbc:	movt	r0, #7
   18bc0:	bl	12864 <gettext@plt>
   18bc4:	ldr	r1, [fp, #-8]
   18bc8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18bcc:	add	r1, r1, r2, lsl #2
   18bd0:	ldr	r3, [r1]
   18bd4:	ldr	r1, [fp, #-20]	; 0xffffffec
   18bd8:	movw	r2, #1
   18bdc:	str	r0, [sp, #60]	; 0x3c
   18be0:	mov	r0, r2
   18be4:	movw	r2, #0
   18be8:	str	r1, [sp, #56]	; 0x38
   18bec:	mov	r1, r2
   18bf0:	ldr	r2, [sp, #60]	; 0x3c
   18bf4:	ldr	ip, [sp, #56]	; 0x38
   18bf8:	str	ip, [sp]
   18bfc:	bl	12780 <error@plt>
   18c00:	movw	r0, #25814	; 0x64d6
   18c04:	movt	r0, #7
   18c08:	bl	12864 <gettext@plt>
   18c0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18c10:	movw	r1, #1
   18c14:	str	r0, [sp, #52]	; 0x34
   18c18:	mov	r0, r1
   18c1c:	movw	r1, #0
   18c20:	ldr	r2, [sp, #52]	; 0x34
   18c24:	bl	12780 <error@plt>
   18c28:	ldr	r0, [fp, #-20]	; 0xffffffec
   18c2c:	movw	r1, #55132	; 0xd75c
   18c30:	movt	r1, #8
   18c34:	ldr	r1, [r1]
   18c38:	str	r0, [r1, #4]
   18c3c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18c40:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18c44:	cmp	r0, r1
   18c48:	beq	18c70 <__assert_fail@plt+0x60b8>
   18c4c:	ldr	r0, [fp, #-8]
   18c50:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18c54:	add	r0, r0, r1, lsl #2
   18c58:	ldr	r0, [r0]
   18c5c:	movw	r1, #55132	; 0xd75c
   18c60:	movt	r1, #8
   18c64:	ldr	r1, [r1]
   18c68:	str	r0, [r1, #36]	; 0x24
   18c6c:	b	18c84 <__assert_fail@plt+0x60cc>
   18c70:	movw	r0, #55132	; 0xd75c
   18c74:	movt	r0, #8
   18c78:	ldr	r0, [r0]
   18c7c:	movw	r1, #0
   18c80:	str	r1, [r0, #36]	; 0x24
   18c84:	b	18c88 <__assert_fail@plt+0x60d0>
   18c88:	movw	r0, #55132	; 0xd75c
   18c8c:	movt	r0, #8
   18c90:	ldr	r0, [r0]
   18c94:	bl	17260 <__assert_fail@plt+0x46a8>
   18c98:	movw	r0, #55128	; 0xd758
   18c9c:	movt	r0, #8
   18ca0:	ldr	r0, [r0]
   18ca4:	bl	17260 <__assert_fail@plt+0x46a8>
   18ca8:	b	189dc <__assert_fail@plt+0x5e24>
   18cac:	ldr	r0, [fp, #-8]
   18cb0:	ldr	r1, [fp, #-4]
   18cb4:	movw	r2, #55132	; 0xd75c
   18cb8:	movt	r2, #8
   18cbc:	ldr	r2, [r2]
   18cc0:	movw	r3, #55128	; 0xd758
   18cc4:	movt	r3, #8
   18cc8:	ldr	r3, [r3]
   18ccc:	bl	21b98 <__assert_fail@plt+0xefe0>
   18cd0:	movw	r0, #55128	; 0xd758
   18cd4:	movt	r0, #8
   18cd8:	ldr	r0, [r0]
   18cdc:	ldr	r0, [r0, #152]	; 0x98
   18ce0:	movw	r1, #0
   18ce4:	cmp	r0, r1
   18ce8:	bne	18d68 <__assert_fail@plt+0x61b0>
   18cec:	movw	r0, #55128	; 0xd758
   18cf0:	movt	r0, #8
   18cf4:	ldr	r1, [r0]
   18cf8:	str	r1, [fp, #-24]	; 0xffffffe8
   18cfc:	ldr	r1, [r0]
   18d00:	ldr	r1, [r1, #152]	; 0x98
   18d04:	movw	r2, #55132	; 0xd75c
   18d08:	movt	r2, #8
   18d0c:	str	r1, [r2]
   18d10:	str	r1, [r0]
   18d14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d18:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   18d1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18d20:	ldr	r1, [fp, #-8]
   18d24:	sub	r2, fp, #4
   18d28:	bl	21ebc <__assert_fail@plt+0xf304>
   18d2c:	movw	r1, #55132	; 0xd75c
   18d30:	movt	r1, #8
   18d34:	ldr	r2, [r1]
   18d38:	movw	r3, #25839	; 0x64ef
   18d3c:	movt	r3, #7
   18d40:	str	r3, [r2, #4]
   18d44:	ldr	r1, [r1]
   18d48:	str	r0, [sp, #48]	; 0x30
   18d4c:	mov	r0, r1
   18d50:	bl	17260 <__assert_fail@plt+0x46a8>
   18d54:	movw	r0, #55128	; 0xd758
   18d58:	movt	r0, #8
   18d5c:	ldr	r0, [r0]
   18d60:	bl	17260 <__assert_fail@plt+0x46a8>
   18d64:	b	18e50 <__assert_fail@plt+0x6298>
   18d68:	movw	r0, #55128	; 0xd758
   18d6c:	movt	r0, #8
   18d70:	ldr	r0, [r0]
   18d74:	ldr	r0, [r0, #152]	; 0x98
   18d78:	bl	1cce8 <__assert_fail@plt+0xa130>
   18d7c:	tst	r0, #1
   18d80:	bne	18db4 <__assert_fail@plt+0x61fc>
   18d84:	movw	r0, #55128	; 0xd758
   18d88:	movt	r0, #8
   18d8c:	ldr	r1, [r0]
   18d90:	str	r1, [fp, #-24]	; 0xffffffe8
   18d94:	ldr	r1, [r0]
   18d98:	ldr	r1, [r1, #152]	; 0x98
   18d9c:	str	r1, [r0]
   18da0:	ldr	r0, [r0]
   18da4:	bl	17260 <__assert_fail@plt+0x46a8>
   18da8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18dac:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   18db0:	b	18e4c <__assert_fail@plt+0x6294>
   18db4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18db8:	ldr	r1, [fp, #-8]
   18dbc:	sub	r2, fp, #4
   18dc0:	bl	21dd8 <__assert_fail@plt+0xf220>
   18dc4:	movw	r1, #55132	; 0xd75c
   18dc8:	movt	r1, #8
   18dcc:	ldr	r2, [r1]
   18dd0:	movw	r3, #27329	; 0x6ac1
   18dd4:	movt	r3, #7
   18dd8:	str	r3, [r2, #4]
   18ddc:	ldr	r2, [r1]
   18de0:	movw	r3, #1
   18de4:	strb	r3, [r2, #33]	; 0x21
   18de8:	ldr	r1, [r1]
   18dec:	str	r0, [sp, #44]	; 0x2c
   18df0:	mov	r0, r1
   18df4:	bl	17260 <__assert_fail@plt+0x46a8>
   18df8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18dfc:	ldr	r1, [fp, #-8]
   18e00:	sub	r2, fp, #4
   18e04:	bl	21ebc <__assert_fail@plt+0xf304>
   18e08:	movw	r1, #55132	; 0xd75c
   18e0c:	movt	r1, #8
   18e10:	ldr	r2, [r1]
   18e14:	movw	r3, #25839	; 0x64ef
   18e18:	movt	r3, #7
   18e1c:	str	r3, [r2, #4]
   18e20:	ldr	r2, [r1]
   18e24:	movw	r3, #1
   18e28:	strb	r3, [r2, #33]	; 0x21
   18e2c:	ldr	r1, [r1]
   18e30:	str	r0, [sp, #40]	; 0x28
   18e34:	mov	r0, r1
   18e38:	bl	17260 <__assert_fail@plt+0x46a8>
   18e3c:	movw	r0, #55128	; 0xd758
   18e40:	movt	r0, #8
   18e44:	ldr	r0, [r0]
   18e48:	bl	17260 <__assert_fail@plt+0x46a8>
   18e4c:	b	18e50 <__assert_fail@plt+0x6298>
   18e50:	movw	r0, #57480	; 0xe088
   18e54:	movt	r0, #8
   18e58:	ldr	r0, [r0, #44]	; 0x2c
   18e5c:	and	r0, r0, #9
   18e60:	cmp	r0, #0
   18e64:	beq	18ea8 <__assert_fail@plt+0x62f0>
   18e68:	movw	r0, #55080	; 0xd728
   18e6c:	movt	r0, #8
   18e70:	ldr	r0, [r0]
   18e74:	movw	r1, #25846	; 0x64f6
   18e78:	movt	r1, #7
   18e7c:	bl	128c4 <fprintf@plt>
   18e80:	movw	r1, #55080	; 0xd728
   18e84:	movt	r1, #8
   18e88:	ldr	r1, [r1]
   18e8c:	movw	r2, #55128	; 0xd758
   18e90:	movt	r2, #8
   18e94:	ldr	r2, [r2]
   18e98:	str	r0, [sp, #36]	; 0x24
   18e9c:	mov	r0, r1
   18ea0:	mov	r1, r2
   18ea4:	bl	16da0 <__assert_fail@plt+0x41e8>
   18ea8:	movw	r0, #55128	; 0xd758
   18eac:	movt	r0, #8
   18eb0:	ldr	r0, [r0]
   18eb4:	bl	21858 <__assert_fail@plt+0xeca0>
   18eb8:	movw	r0, #55128	; 0xd758
   18ebc:	movt	r0, #8
   18ec0:	ldr	r0, [r0]
   18ec4:	bl	17260 <__assert_fail@plt+0x46a8>
   18ec8:	movw	r0, #55128	; 0xd758
   18ecc:	movt	r0, #8
   18ed0:	ldr	r0, [r0]
   18ed4:	str	r0, [fp, #-24]	; 0xffffffe8
   18ed8:	sub	r0, fp, #24
   18edc:	movw	r1, #0
   18ee0:	sxth	r1, r1
   18ee4:	movw	r2, #0
   18ee8:	bl	19140 <__assert_fail@plt+0x6588>
   18eec:	movw	r1, #55124	; 0xd754
   18ef0:	movt	r1, #8
   18ef4:	str	r0, [r1]
   18ef8:	ldr	r0, [r1]
   18efc:	bl	18330 <__assert_fail@plt+0x5778>
   18f00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f04:	movw	r1, #0
   18f08:	cmp	r0, r1
   18f0c:	beq	18fb0 <__assert_fail@plt+0x63f8>
   18f10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f14:	ldr	r0, [r0]
   18f18:	movw	r1, #18896	; 0x49d0
   18f1c:	movt	r1, #1
   18f20:	cmp	r0, r1
   18f24:	bne	18f4c <__assert_fail@plt+0x6394>
   18f28:	movw	r0, #26752	; 0x6880
   18f2c:	movt	r0, #7
   18f30:	bl	12864 <gettext@plt>
   18f34:	movw	r1, #1
   18f38:	str	r0, [sp, #32]
   18f3c:	mov	r0, r1
   18f40:	movw	r1, #0
   18f44:	ldr	r2, [sp, #32]
   18f48:	bl	12780 <error@plt>
   18f4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f50:	ldr	r0, [r0, #4]
   18f54:	movw	r1, #0
   18f58:	cmp	r0, r1
   18f5c:	beq	18f8c <__assert_fail@plt+0x63d4>
   18f60:	movw	r0, #25863	; 0x6507
   18f64:	movt	r0, #7
   18f68:	bl	12864 <gettext@plt>
   18f6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18f70:	ldr	r3, [r1, #4]
   18f74:	movw	r1, #1
   18f78:	str	r0, [sp, #28]
   18f7c:	mov	r0, r1
   18f80:	movw	r1, #0
   18f84:	ldr	r2, [sp, #28]
   18f88:	bl	12780 <error@plt>
   18f8c:	movw	r0, #25895	; 0x6527
   18f90:	movt	r0, #7
   18f94:	bl	12864 <gettext@plt>
   18f98:	movw	r1, #1
   18f9c:	str	r0, [sp, #24]
   18fa0:	mov	r0, r1
   18fa4:	movw	r1, #0
   18fa8:	ldr	r2, [sp, #24]
   18fac:	bl	12780 <error@plt>
   18fb0:	movw	r0, #57480	; 0xe088
   18fb4:	movt	r0, #8
   18fb8:	ldr	r0, [r0, #44]	; 0x2c
   18fbc:	and	r0, r0, #9
   18fc0:	cmp	r0, #0
   18fc4:	beq	1900c <__assert_fail@plt+0x6454>
   18fc8:	movw	r0, #55080	; 0xd728
   18fcc:	movt	r0, #8
   18fd0:	ldr	r0, [r0]
   18fd4:	movw	r1, #27342	; 0x6ace
   18fd8:	movt	r1, #7
   18fdc:	bl	128c4 <fprintf@plt>
   18fe0:	movw	r1, #55080	; 0xd728
   18fe4:	movt	r1, #8
   18fe8:	ldr	r1, [r1]
   18fec:	movw	r2, #55124	; 0xd754
   18ff0:	movt	r2, #8
   18ff4:	ldr	r2, [r2]
   18ff8:	str	r0, [sp, #20]
   18ffc:	mov	r0, r1
   19000:	mov	r1, r2
   19004:	movw	r2, #0
   19008:	bl	195c4 <__assert_fail@plt+0x6a0c>
   1900c:	movw	r0, #55124	; 0xd754
   19010:	movt	r0, #8
   19014:	ldr	r0, [r0]
   19018:	bl	199c8 <__assert_fail@plt+0x6e10>
   1901c:	movw	r0, #55124	; 0xd754
   19020:	movt	r0, #8
   19024:	bl	19a18 <__assert_fail@plt+0x6e60>
   19028:	movw	r1, #55124	; 0xd754
   1902c:	movt	r1, #8
   19030:	ldr	r1, [r1]
   19034:	str	r0, [sp, #16]
   19038:	mov	r0, r1
   1903c:	movw	r1, #1
   19040:	and	r1, r1, #1
   19044:	bl	19fec <__assert_fail@plt+0x7434>
   19048:	movw	r0, #55124	; 0xd754
   1904c:	movt	r0, #8
   19050:	ldr	r0, [r0]
   19054:	bl	1a0e0 <__assert_fail@plt+0x7528>
   19058:	movw	r1, #55124	; 0xd754
   1905c:	movt	r1, #8
   19060:	ldr	r1, [r1]
   19064:	str	r0, [sp, #12]
   19068:	mov	r0, r1
   1906c:	movw	r1, #1
   19070:	and	r1, r1, #1
   19074:	bl	19fec <__assert_fail@plt+0x7434>
   19078:	movw	r0, #57480	; 0xe088
   1907c:	movt	r0, #8
   19080:	ldr	r0, [r0, #44]	; 0x2c
   19084:	and	r0, r0, #9
   19088:	cmp	r0, #0
   1908c:	beq	1912c <__assert_fail@plt+0x6574>
   19090:	movw	r0, #55080	; 0xd728
   19094:	movt	r0, #8
   19098:	ldr	r0, [r0]
   1909c:	movw	r1, #25922	; 0x6542
   190a0:	movt	r1, #7
   190a4:	bl	128c4 <fprintf@plt>
   190a8:	movw	r1, #55080	; 0xd728
   190ac:	movt	r1, #8
   190b0:	ldr	r1, [r1]
   190b4:	movw	r2, #55124	; 0xd754
   190b8:	movt	r2, #8
   190bc:	ldr	r2, [r2]
   190c0:	str	r0, [sp, #8]
   190c4:	mov	r0, r1
   190c8:	mov	r1, r2
   190cc:	movw	r2, #0
   190d0:	bl	195c4 <__assert_fail@plt+0x6a0c>
   190d4:	movw	r0, #55080	; 0xd728
   190d8:	movt	r0, #8
   190dc:	ldr	r0, [r0]
   190e0:	movw	r1, #25944	; 0x6558
   190e4:	movt	r1, #7
   190e8:	bl	128c4 <fprintf@plt>
   190ec:	movw	r1, #55080	; 0xd728
   190f0:	movt	r1, #8
   190f4:	ldr	r1, [r1]
   190f8:	movw	r2, #55124	; 0xd754
   190fc:	movt	r2, #8
   19100:	ldr	r2, [r2]
   19104:	str	r0, [sp, #4]
   19108:	mov	r0, r1
   1910c:	mov	r1, r2
   19110:	bl	16f2c <__assert_fail@plt+0x4374>
   19114:	movw	r0, #55080	; 0xd728
   19118:	movt	r0, #8
   1911c:	ldr	r0, [r0]
   19120:	movw	r1, #29908	; 0x74d4
   19124:	movt	r1, #7
   19128:	bl	128c4 <fprintf@plt>
   1912c:	movw	r0, #55124	; 0xd754
   19130:	movt	r0, #8
   19134:	ldr	r0, [r0]
   19138:	mov	sp, fp
   1913c:	pop	{fp, pc}
   19140:	push	{fp, lr}
   19144:	mov	fp, sp
   19148:	sub	sp, sp, #80	; 0x50
   1914c:	str	r0, [fp, #-8]
   19150:	strh	r1, [fp, #-10]
   19154:	str	r2, [fp, #-16]
   19158:	movw	r0, #0
   1915c:	str	r0, [fp, #-20]	; 0xffffffec
   19160:	ldr	r1, [fp, #-8]
   19164:	ldr	r1, [r1]
   19168:	str	r1, [fp, #-24]	; 0xffffffe8
   1916c:	ldr	r1, [fp, #-8]
   19170:	ldr	r1, [r1]
   19174:	cmp	r1, r0
   19178:	bne	191a0 <__assert_fail@plt+0x65e8>
   1917c:	movw	r0, #26481	; 0x6771
   19180:	movt	r0, #7
   19184:	bl	12864 <gettext@plt>
   19188:	movw	r1, #1
   1918c:	str	r0, [fp, #-28]	; 0xffffffe4
   19190:	mov	r0, r1
   19194:	movw	r1, #0
   19198:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1919c:	bl	12780 <error@plt>
   191a0:	ldr	r0, [fp, #-8]
   191a4:	ldr	r0, [r0]
   191a8:	ldr	r0, [r0, #8]
   191ac:	cmp	r0, #5
   191b0:	str	r0, [fp, #-32]	; 0xffffffe0
   191b4:	bhi	19508 <__assert_fail@plt+0x6950>
   191b8:	add	r0, pc, #8
   191bc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   191c0:	ldr	r0, [r0, r1, lsl #2]
   191c4:	mov	pc, r0
   191c8:	andeq	r9, r1, r0, ror #3
   191cc:	andeq	r9, r1, r4, lsr r3
   191d0:	andeq	r9, r1, r8, asr r3
   191d4:	andeq	r9, r1, r4, lsl #4
   191d8:	muleq	r1, r8, r3
   191dc:	andeq	r9, r1, r0, lsr r2
   191e0:	movw	r0, #26481	; 0x6771
   191e4:	movt	r0, #7
   191e8:	bl	12864 <gettext@plt>
   191ec:	movw	r1, #1
   191f0:	str	r0, [fp, #-36]	; 0xffffffdc
   191f4:	mov	r0, r1
   191f8:	movw	r1, #0
   191fc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   19200:	bl	12780 <error@plt>
   19204:	movw	r0, #26500	; 0x6784
   19208:	movt	r0, #7
   1920c:	bl	12864 <gettext@plt>
   19210:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19214:	ldr	r3, [r1, #4]
   19218:	movw	r1, #1
   1921c:	str	r0, [sp, #40]	; 0x28
   19220:	mov	r0, r1
   19224:	movw	r1, #0
   19228:	ldr	r2, [sp, #40]	; 0x28
   1922c:	bl	12780 <error@plt>
   19230:	ldr	r0, [fp, #-16]
   19234:	movw	r1, #0
   19238:	cmp	r0, r1
   1923c:	bne	1926c <__assert_fail@plt+0x66b4>
   19240:	movw	r0, #26581	; 0x67d5
   19244:	movt	r0, #7
   19248:	bl	12864 <gettext@plt>
   1924c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19250:	ldr	r3, [r1, #4]
   19254:	movw	r1, #1
   19258:	str	r0, [sp, #36]	; 0x24
   1925c:	mov	r0, r1
   19260:	movw	r1, #0
   19264:	ldr	r2, [sp, #36]	; 0x24
   19268:	bl	12780 <error@plt>
   1926c:	ldr	r0, [fp, #-16]
   19270:	ldr	r0, [r0, #8]
   19274:	movw	r1, #2
   19278:	cmp	r1, r0
   1927c:	beq	19294 <__assert_fail@plt+0x66dc>
   19280:	ldr	r0, [fp, #-16]
   19284:	ldr	r0, [r0, #8]
   19288:	movw	r1, #3
   1928c:	cmp	r1, r0
   19290:	bne	192d0 <__assert_fail@plt+0x6718>
   19294:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19298:	ldrb	r0, [r0, #33]	; 0x21
   1929c:	tst	r0, #1
   192a0:	bne	192d0 <__assert_fail@plt+0x6718>
   192a4:	movw	r0, #26654	; 0x681e
   192a8:	movt	r0, #7
   192ac:	bl	12864 <gettext@plt>
   192b0:	ldr	r1, [fp, #-16]
   192b4:	ldr	r3, [r1, #4]
   192b8:	movw	r1, #1
   192bc:	str	r0, [sp, #32]
   192c0:	mov	r0, r1
   192c4:	movw	r1, #0
   192c8:	ldr	r2, [sp, #32]
   192cc:	bl	12780 <error@plt>
   192d0:	ldr	r0, [fp, #-8]
   192d4:	ldr	r0, [r0]
   192d8:	ldrb	r0, [r0, #33]	; 0x21
   192dc:	tst	r0, #1
   192e0:	beq	19310 <__assert_fail@plt+0x6758>
   192e4:	movw	r0, #26698	; 0x684a
   192e8:	movt	r0, #7
   192ec:	bl	12864 <gettext@plt>
   192f0:	ldr	r1, [fp, #-16]
   192f4:	ldr	r3, [r1, #4]
   192f8:	movw	r1, #1
   192fc:	str	r0, [sp, #28]
   19300:	mov	r0, r1
   19304:	movw	r1, #0
   19308:	ldr	r2, [sp, #28]
   1930c:	bl	12780 <error@plt>
   19310:	movw	r0, #26732	; 0x686c
   19314:	movt	r0, #7
   19318:	bl	12864 <gettext@plt>
   1931c:	movw	r1, #1
   19320:	str	r0, [sp, #24]
   19324:	mov	r0, r1
   19328:	movw	r1, #0
   1932c:	ldr	r2, [sp, #24]
   19330:	bl	12780 <error@plt>
   19334:	ldr	r0, [fp, #-8]
   19338:	ldr	r0, [r0]
   1933c:	str	r0, [fp, #-20]	; 0xffffffec
   19340:	ldr	r0, [fp, #-8]
   19344:	ldr	r0, [r0]
   19348:	ldr	r0, [r0, #152]	; 0x98
   1934c:	ldr	r1, [fp, #-8]
   19350:	str	r0, [r1]
   19354:	b	1952c <__assert_fail@plt+0x6974>
   19358:	ldr	r0, [fp, #-8]
   1935c:	ldr	r0, [r0]
   19360:	str	r0, [fp, #-20]	; 0xffffffec
   19364:	ldr	r0, [fp, #-8]
   19368:	ldr	r0, [r0]
   1936c:	ldr	r0, [r0, #152]	; 0x98
   19370:	ldr	r1, [fp, #-8]
   19374:	str	r0, [r1]
   19378:	ldr	r0, [fp, #-8]
   1937c:	ldr	r2, [fp, #-20]	; 0xffffffec
   19380:	movw	r1, #4
   19384:	sxth	r1, r1
   19388:	bl	19140 <__assert_fail@plt+0x6588>
   1938c:	ldr	r1, [fp, #-20]	; 0xffffffec
   19390:	str	r0, [r1, #160]	; 0xa0
   19394:	b	1952c <__assert_fail@plt+0x6974>
   19398:	ldr	r0, [fp, #-8]
   1939c:	ldr	r0, [r0]
   193a0:	ldr	r0, [r0, #152]	; 0x98
   193a4:	movw	r1, #0
   193a8:	cmp	r1, r0
   193ac:	beq	193c8 <__assert_fail@plt+0x6810>
   193b0:	ldr	r0, [fp, #-8]
   193b4:	ldr	r0, [r0]
   193b8:	ldr	r0, [r0, #152]	; 0x98
   193bc:	ldrb	r0, [r0, #33]	; 0x21
   193c0:	tst	r0, #1
   193c4:	beq	193f4 <__assert_fail@plt+0x683c>
   193c8:	movw	r0, #26774	; 0x6896
   193cc:	movt	r0, #7
   193d0:	bl	12864 <gettext@plt>
   193d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   193d8:	ldr	r3, [r1, #4]
   193dc:	movw	r1, #1
   193e0:	str	r0, [sp, #20]
   193e4:	mov	r0, r1
   193e8:	movw	r1, #0
   193ec:	ldr	r2, [sp, #20]
   193f0:	bl	12780 <error@plt>
   193f4:	ldr	r0, [fp, #-8]
   193f8:	ldr	r0, [r0]
   193fc:	str	r0, [fp, #-16]
   19400:	ldr	r0, [fp, #-8]
   19404:	ldr	r0, [r0]
   19408:	ldr	r0, [r0, #152]	; 0x98
   1940c:	ldr	r1, [fp, #-8]
   19410:	str	r0, [r1]
   19414:	ldr	r0, [fp, #-8]
   19418:	ldr	r0, [r0]
   1941c:	ldr	r0, [r0, #8]
   19420:	cmp	r0, #5
   19424:	bne	1948c <__assert_fail@plt+0x68d4>
   19428:	ldr	r0, [fp, #-16]
   1942c:	ldrb	r0, [r0, #33]	; 0x21
   19430:	tst	r0, #1
   19434:	beq	19468 <__assert_fail@plt+0x68b0>
   19438:	movw	r0, #26581	; 0x67d5
   1943c:	movt	r0, #7
   19440:	bl	12864 <gettext@plt>
   19444:	ldr	r1, [fp, #-8]
   19448:	ldr	r1, [r1]
   1944c:	ldr	r3, [r1, #4]
   19450:	movw	r1, #1
   19454:	str	r0, [sp, #16]
   19458:	mov	r0, r1
   1945c:	movw	r1, #0
   19460:	ldr	r2, [sp, #16]
   19464:	bl	12780 <error@plt>
   19468:	movw	r0, #26884	; 0x6904
   1946c:	movt	r0, #7
   19470:	bl	12864 <gettext@plt>
   19474:	movw	r1, #1
   19478:	str	r0, [sp, #12]
   1947c:	mov	r0, r1
   19480:	movw	r1, #0
   19484:	ldr	r2, [sp, #12]
   19488:	bl	12780 <error@plt>
   1948c:	ldr	r0, [fp, #-8]
   19490:	ldr	r2, [fp, #-16]
   19494:	movw	r1, #0
   19498:	sxth	r1, r1
   1949c:	bl	19140 <__assert_fail@plt+0x6588>
   194a0:	str	r0, [fp, #-20]	; 0xffffffec
   194a4:	ldr	r0, [fp, #-8]
   194a8:	ldr	r0, [r0]
   194ac:	movw	r1, #0
   194b0:	cmp	r0, r1
   194b4:	beq	194cc <__assert_fail@plt+0x6914>
   194b8:	ldr	r0, [fp, #-8]
   194bc:	ldr	r0, [r0]
   194c0:	ldr	r0, [r0, #8]
   194c4:	cmp	r0, #5
   194c8:	beq	194f0 <__assert_fail@plt+0x6938>
   194cc:	movw	r0, #26939	; 0x693b
   194d0:	movt	r0, #7
   194d4:	bl	12864 <gettext@plt>
   194d8:	movw	r1, #1
   194dc:	str	r0, [sp, #8]
   194e0:	mov	r0, r1
   194e4:	movw	r1, #0
   194e8:	ldr	r2, [sp, #8]
   194ec:	bl	12780 <error@plt>
   194f0:	ldr	r0, [fp, #-8]
   194f4:	ldr	r0, [r0]
   194f8:	ldr	r0, [r0, #152]	; 0x98
   194fc:	ldr	r1, [fp, #-8]
   19500:	str	r0, [r1]
   19504:	b	1952c <__assert_fail@plt+0x6974>
   19508:	movw	r0, #27020	; 0x698c
   1950c:	movt	r0, #7
   19510:	bl	12864 <gettext@plt>
   19514:	movw	r1, #1
   19518:	str	r0, [sp, #4]
   1951c:	mov	r0, r1
   19520:	movw	r1, #0
   19524:	ldr	r2, [sp, #4]
   19528:	bl	12780 <error@plt>
   1952c:	ldr	r0, [fp, #-8]
   19530:	ldr	r0, [r0]
   19534:	movw	r1, #0
   19538:	cmp	r0, r1
   1953c:	bne	1954c <__assert_fail@plt+0x6994>
   19540:	ldr	r0, [fp, #-20]	; 0xffffffec
   19544:	str	r0, [fp, #-4]
   19548:	b	195b8 <__assert_fail@plt+0x6a00>
   1954c:	ldr	r0, [fp, #-8]
   19550:	ldr	r0, [r0]
   19554:	ldr	r0, [r0, #12]
   19558:	ldrsh	r1, [fp, #-10]
   1955c:	cmp	r0, r1
   19560:	ble	195b0 <__assert_fail@plt+0x69f8>
   19564:	ldr	r0, [fp, #-8]
   19568:	ldr	r1, [fp, #-20]	; 0xffffffec
   1956c:	ldrsh	r2, [fp, #-10]
   19570:	bl	1a6bc <__assert_fail@plt+0x7b04>
   19574:	str	r0, [fp, #-20]	; 0xffffffec
   19578:	ldr	r0, [fp, #-20]	; 0xffffffec
   1957c:	movw	r1, #0
   19580:	cmp	r0, r1
   19584:	bne	195ac <__assert_fail@plt+0x69f4>
   19588:	movw	r0, #26481	; 0x6771
   1958c:	movt	r0, #7
   19590:	bl	12864 <gettext@plt>
   19594:	movw	r1, #1
   19598:	str	r0, [sp]
   1959c:	mov	r0, r1
   195a0:	movw	r1, #0
   195a4:	ldr	r2, [sp]
   195a8:	bl	12780 <error@plt>
   195ac:	b	195b0 <__assert_fail@plt+0x69f8>
   195b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   195b4:	str	r0, [fp, #-4]
   195b8:	ldr	r0, [fp, #-4]
   195bc:	mov	sp, fp
   195c0:	pop	{fp, pc}
   195c4:	push	{fp, lr}
   195c8:	mov	fp, sp
   195cc:	sub	sp, sp, #80	; 0x50
   195d0:	str	r0, [fp, #-4]
   195d4:	str	r1, [fp, #-8]
   195d8:	str	r2, [fp, #-12]
   195dc:	ldr	r0, [fp, #-8]
   195e0:	movw	r1, #0
   195e4:	cmp	r0, r1
   195e8:	bne	195f0 <__assert_fail@plt+0x6a38>
   195ec:	b	199c0 <__assert_fail@plt+0x6e08>
   195f0:	movw	r0, #0
   195f4:	str	r0, [fp, #-16]
   195f8:	ldr	r0, [fp, #-16]
   195fc:	ldr	r1, [fp, #-12]
   19600:	cmp	r0, r1
   19604:	bge	19628 <__assert_fail@plt+0x6a70>
   19608:	ldr	r0, [fp, #-4]
   1960c:	movw	r1, #26325	; 0x66d5
   19610:	movt	r1, #7
   19614:	bl	128c4 <fprintf@plt>
   19618:	ldr	r0, [fp, #-16]
   1961c:	add	r0, r0, #1
   19620:	str	r0, [fp, #-16]
   19624:	b	195f8 <__assert_fail@plt+0x6a40>
   19628:	ldr	r0, [fp, #-4]
   1962c:	movw	r1, #26330	; 0x66da
   19630:	movt	r1, #7
   19634:	bl	128c4 <fprintf@plt>
   19638:	ldr	r1, [fp, #-4]
   1963c:	ldr	r2, [fp, #-8]
   19640:	str	r0, [fp, #-24]	; 0xffffffe8
   19644:	mov	r0, r1
   19648:	mov	r1, r2
   1964c:	bl	182b4 <__assert_fail@plt+0x56fc>
   19650:	ldr	r0, [fp, #-4]
   19654:	ldr	r1, [fp, #-8]
   19658:	ldr	r1, [r1, #8]
   1965c:	sxth	r1, r1
   19660:	str	r0, [fp, #-28]	; 0xffffffe4
   19664:	mov	r0, r1
   19668:	bl	1a52c <__assert_fail@plt+0x7974>
   1966c:	ldr	r1, [fp, #-8]
   19670:	ldr	r1, [r1, #12]
   19674:	sxth	r1, r1
   19678:	str	r0, [fp, #-32]	; 0xffffffe0
   1967c:	mov	r0, r1
   19680:	bl	1a5ac <__assert_fail@plt+0x79f4>
   19684:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19688:	str	r0, [fp, #-36]	; 0xffffffdc
   1968c:	mov	r0, r1
   19690:	movw	r1, #26337	; 0x66e1
   19694:	movt	r1, #7
   19698:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1969c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   196a0:	bl	128c4 <fprintf@plt>
   196a4:	ldr	r1, [fp, #-4]
   196a8:	ldr	r2, [fp, #-8]
   196ac:	ldr	r2, [r2, #24]
   196b0:	str	r0, [sp, #40]	; 0x28
   196b4:	mov	r0, r2
   196b8:	str	r1, [sp, #36]	; 0x24
   196bc:	bl	1a62c <__assert_fail@plt+0x7a74>
   196c0:	ldr	r1, [fp, #-8]
   196c4:	vldr	s0, [r1, #28]
   196c8:	vcvt.f64.f32	d16, s0
   196cc:	ldr	r1, [fp, #-8]
   196d0:	ldrb	r1, [r1, #16]
   196d4:	tst	r1, #1
   196d8:	movw	r1, #26403	; 0x6723
   196dc:	movt	r1, #7
   196e0:	movw	r2, #29909	; 0x74d5
   196e4:	movt	r2, #7
   196e8:	movne	r1, r2
   196ec:	ldr	r2, [sp, #36]	; 0x24
   196f0:	str	r0, [sp, #32]
   196f4:	mov	r0, r2
   196f8:	movw	r3, #26355	; 0x66f3
   196fc:	movt	r3, #7
   19700:	str	r1, [sp, #28]
   19704:	mov	r1, r3
   19708:	ldr	r2, [sp, #32]
   1970c:	vstr	d16, [sp]
   19710:	ldr	r3, [sp, #28]
   19714:	str	r3, [sp, #8]
   19718:	bl	128c4 <fprintf@plt>
   1971c:	ldr	r1, [fp, #-8]
   19720:	ldrb	r1, [r1, #18]
   19724:	tst	r1, #1
   19728:	bne	1974c <__assert_fail@plt+0x6b94>
   1972c:	ldr	r0, [fp, #-8]
   19730:	ldrb	r0, [r0, #19]
   19734:	tst	r0, #1
   19738:	bne	1974c <__assert_fail@plt+0x6b94>
   1973c:	ldr	r0, [fp, #-8]
   19740:	ldrb	r0, [r0, #20]
   19744:	tst	r0, #1
   19748:	beq	19840 <__assert_fail@plt+0x6c88>
   1974c:	movw	r0, #0
   19750:	str	r0, [fp, #-20]	; 0xffffffec
   19754:	ldr	r0, [fp, #-4]
   19758:	movw	r1, #26407	; 0x6727
   1975c:	movt	r1, #7
   19760:	bl	128c4 <fprintf@plt>
   19764:	ldr	r1, [fp, #-8]
   19768:	ldrb	r1, [r1, #18]
   1976c:	tst	r1, #1
   19770:	beq	1978c <__assert_fail@plt+0x6bd4>
   19774:	ldr	r0, [fp, #-4]
   19778:	movw	r1, #33828	; 0x8424
   1977c:	movt	r1, #7
   19780:	bl	128c4 <fprintf@plt>
   19784:	movw	r1, #1
   19788:	str	r1, [fp, #-20]	; 0xffffffec
   1978c:	ldr	r0, [fp, #-8]
   19790:	ldrb	r0, [r0, #20]
   19794:	tst	r0, #1
   19798:	beq	197e8 <__assert_fail@plt+0x6c30>
   1979c:	ldr	r0, [fp, #-4]
   197a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   197a4:	cmp	r1, #0
   197a8:	movw	r1, #0
   197ac:	movne	r1, #1
   197b0:	tst	r1, #1
   197b4:	movw	r1, #29909	; 0x74d5
   197b8:	movt	r1, #7
   197bc:	movw	r2, #26422	; 0x6736
   197c0:	movt	r2, #7
   197c4:	movne	r1, r2
   197c8:	movw	r2, #26414	; 0x672e
   197cc:	movt	r2, #7
   197d0:	str	r1, [sp, #24]
   197d4:	mov	r1, r2
   197d8:	ldr	r2, [sp, #24]
   197dc:	bl	128c4 <fprintf@plt>
   197e0:	movw	r1, #1
   197e4:	str	r1, [fp, #-20]	; 0xffffffec
   197e8:	ldr	r0, [fp, #-8]
   197ec:	ldrb	r0, [r0, #19]
   197f0:	tst	r0, #1
   197f4:	beq	1983c <__assert_fail@plt+0x6c84>
   197f8:	ldr	r0, [fp, #-4]
   197fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   19800:	cmp	r1, #0
   19804:	movw	r1, #0
   19808:	movne	r1, #1
   1980c:	tst	r1, #1
   19810:	movw	r1, #29909	; 0x74d5
   19814:	movt	r1, #7
   19818:	movw	r2, #26422	; 0x6736
   1981c:	movt	r2, #7
   19820:	movne	r1, r2
   19824:	movw	r2, #26424	; 0x6738
   19828:	movt	r2, #7
   1982c:	str	r1, [sp, #20]
   19830:	mov	r1, r2
   19834:	ldr	r2, [sp, #20]
   19838:	bl	128c4 <fprintf@plt>
   1983c:	b	19840 <__assert_fail@plt+0x6c88>
   19840:	ldr	r0, [fp, #-4]
   19844:	movw	r1, #29908	; 0x74d4
   19848:	movt	r1, #7
   1984c:	bl	128c4 <fprintf@plt>
   19850:	movw	r1, #0
   19854:	str	r1, [fp, #-16]
   19858:	ldr	r0, [fp, #-16]
   1985c:	ldr	r1, [fp, #-12]
   19860:	cmp	r0, r1
   19864:	bge	19888 <__assert_fail@plt+0x6cd0>
   19868:	ldr	r0, [fp, #-4]
   1986c:	movw	r1, #26325	; 0x66d5
   19870:	movt	r1, #7
   19874:	bl	128c4 <fprintf@plt>
   19878:	ldr	r0, [fp, #-16]
   1987c:	add	r0, r0, #1
   19880:	str	r0, [fp, #-16]
   19884:	b	19858 <__assert_fail@plt+0x6ca0>
   19888:	ldr	r0, [fp, #-8]
   1988c:	ldr	r0, [r0, #156]	; 0x9c
   19890:	movw	r1, #0
   19894:	cmp	r1, r0
   19898:	bne	198c4 <__assert_fail@plt+0x6d0c>
   1989c:	ldr	r0, [fp, #-8]
   198a0:	ldr	r0, [r0, #160]	; 0xa0
   198a4:	movw	r1, #0
   198a8:	cmp	r1, r0
   198ac:	bne	198c4 <__assert_fail@plt+0x6d0c>
   198b0:	ldr	r0, [fp, #-4]
   198b4:	movw	r1, #26431	; 0x673f
   198b8:	movt	r1, #7
   198bc:	bl	128c4 <fprintf@plt>
   198c0:	b	199c0 <__assert_fail@plt+0x6e08>
   198c4:	ldr	r0, [fp, #-8]
   198c8:	ldr	r0, [r0, #156]	; 0x9c
   198cc:	movw	r1, #0
   198d0:	cmp	r0, r1
   198d4:	beq	19914 <__assert_fail@plt+0x6d5c>
   198d8:	ldr	r0, [fp, #-4]
   198dc:	movw	r1, #26445	; 0x674d
   198e0:	movt	r1, #7
   198e4:	bl	128c4 <fprintf@plt>
   198e8:	ldr	r1, [fp, #-4]
   198ec:	ldr	r2, [fp, #-8]
   198f0:	ldr	r2, [r2, #156]	; 0x9c
   198f4:	ldr	r3, [fp, #-12]
   198f8:	add	r3, r3, #1
   198fc:	str	r0, [sp, #16]
   19900:	mov	r0, r1
   19904:	mov	r1, r2
   19908:	mov	r2, r3
   1990c:	bl	195c4 <__assert_fail@plt+0x6a0c>
   19910:	b	19924 <__assert_fail@plt+0x6d6c>
   19914:	ldr	r0, [fp, #-4]
   19918:	movw	r1, #26452	; 0x6754
   1991c:	movt	r1, #7
   19920:	bl	128c4 <fprintf@plt>
   19924:	movw	r0, #0
   19928:	str	r0, [fp, #-16]
   1992c:	ldr	r0, [fp, #-16]
   19930:	ldr	r1, [fp, #-12]
   19934:	cmp	r0, r1
   19938:	bge	1995c <__assert_fail@plt+0x6da4>
   1993c:	ldr	r0, [fp, #-4]
   19940:	movw	r1, #26325	; 0x66d5
   19944:	movt	r1, #7
   19948:	bl	128c4 <fprintf@plt>
   1994c:	ldr	r0, [fp, #-16]
   19950:	add	r0, r0, #1
   19954:	str	r0, [fp, #-16]
   19958:	b	1992c <__assert_fail@plt+0x6d74>
   1995c:	ldr	r0, [fp, #-8]
   19960:	ldr	r0, [r0, #160]	; 0xa0
   19964:	movw	r1, #0
   19968:	cmp	r0, r1
   1996c:	beq	199ac <__assert_fail@plt+0x6df4>
   19970:	ldr	r0, [fp, #-4]
   19974:	movw	r1, #26462	; 0x675e
   19978:	movt	r1, #7
   1997c:	bl	128c4 <fprintf@plt>
   19980:	ldr	r1, [fp, #-4]
   19984:	ldr	r2, [fp, #-8]
   19988:	ldr	r2, [r2, #160]	; 0xa0
   1998c:	ldr	r3, [fp, #-12]
   19990:	add	r3, r3, #1
   19994:	str	r0, [sp, #12]
   19998:	mov	r0, r1
   1999c:	mov	r1, r2
   199a0:	mov	r2, r3
   199a4:	bl	195c4 <__assert_fail@plt+0x6a0c>
   199a8:	b	199bc <__assert_fail@plt+0x6e04>
   199ac:	ldr	r0, [fp, #-4]
   199b0:	movw	r1, #26470	; 0x6766
   199b4:	movt	r1, #7
   199b8:	bl	128c4 <fprintf@plt>
   199bc:	b	199c0 <__assert_fail@plt+0x6e08>
   199c0:	mov	sp, fp
   199c4:	pop	{fp, pc}
   199c8:	push	{fp, lr}
   199cc:	mov	fp, sp
   199d0:	sub	sp, sp, #8
   199d4:	str	r0, [sp, #4]
   199d8:	ldr	r0, [sp, #4]
   199dc:	movw	r1, #0
   199e0:	cmp	r0, r1
   199e4:	beq	19a10 <__assert_fail@plt+0x6e58>
   199e8:	ldr	r0, [sp, #4]
   199ec:	ldr	r0, [r0, #160]	; 0xa0
   199f0:	bl	199c8 <__assert_fail@plt+0x6e10>
   199f4:	ldr	r0, [sp, #4]
   199f8:	ldr	r0, [r0, #156]	; 0x9c
   199fc:	bl	199c8 <__assert_fail@plt+0x6e10>
   19a00:	ldr	r0, [sp, #4]
   19a04:	bl	1a870 <__assert_fail@plt+0x7cb8>
   19a08:	ldr	r1, [sp, #4]
   19a0c:	str	r0, [r1, #24]
   19a10:	mov	sp, fp
   19a14:	pop	{fp, pc}
   19a18:	push	{fp, lr}
   19a1c:	mov	fp, sp
   19a20:	sub	sp, sp, #208	; 0xd0
   19a24:	str	r0, [fp, #-8]
   19a28:	sub	r0, fp, #16
   19a2c:	movw	r1, #0
   19a30:	and	r2, r1, #255	; 0xff
   19a34:	str	r1, [sp, #52]	; 0x34
   19a38:	mov	r1, r2
   19a3c:	movw	r2, #8
   19a40:	str	r2, [sp, #48]	; 0x30
   19a44:	bl	12900 <memset@plt>
   19a48:	sub	r0, fp, #24
   19a4c:	ldr	r1, [sp, #52]	; 0x34
   19a50:	and	r1, r1, #255	; 0xff
   19a54:	ldr	r2, [sp, #48]	; 0x30
   19a58:	bl	12900 <memset@plt>
   19a5c:	ldr	r0, [sp, #52]	; 0x34
   19a60:	strb	r0, [sp, #71]	; 0x47
   19a64:	ldr	r1, [fp, #-8]
   19a68:	movw	r2, #0
   19a6c:	cmp	r1, r2
   19a70:	beq	19a88 <__assert_fail@plt+0x6ed0>
   19a74:	ldr	r0, [fp, #-8]
   19a78:	ldr	r0, [r0]
   19a7c:	movw	r1, #0
   19a80:	cmp	r0, r1
   19a84:	bne	19a98 <__assert_fail@plt+0x6ee0>
   19a88:	movw	r0, #0
   19a8c:	and	r0, r0, #1
   19a90:	strb	r0, [fp, #-1]
   19a94:	b	19fdc <__assert_fail@plt+0x7424>
   19a98:	movw	r0, #0
   19a9c:	str	r0, [sp, #92]	; 0x5c
   19aa0:	ldr	r0, [sp, #92]	; 0x5c
   19aa4:	cmp	r0, #11
   19aa8:	bge	19acc <__assert_fail@plt+0x6f14>
   19aac:	ldr	r0, [sp, #92]	; 0x5c
   19ab0:	add	r1, sp, #96	; 0x60
   19ab4:	add	r0, r1, r0, lsl #3
   19ab8:	bl	1ac50 <__assert_fail@plt+0x8098>
   19abc:	ldr	r0, [sp, #92]	; 0x5c
   19ac0:	add	r0, r0, #1
   19ac4:	str	r0, [sp, #92]	; 0x5c
   19ac8:	b	19aa0 <__assert_fail@plt+0x6ee8>
   19acc:	ldr	r0, [fp, #-8]
   19ad0:	str	r0, [sp, #84]	; 0x54
   19ad4:	movw	r0, #3
   19ad8:	str	r0, [sp, #64]	; 0x40
   19adc:	ldr	r0, [sp, #84]	; 0x54
   19ae0:	ldr	r0, [r0]
   19ae4:	str	r0, [sp, #88]	; 0x58
   19ae8:	ldr	r0, [sp, #88]	; 0x58
   19aec:	ldr	r0, [r0, #156]	; 0x9c
   19af0:	movw	r1, #0
   19af4:	cmp	r0, r1
   19af8:	beq	19b24 <__assert_fail@plt+0x6f6c>
   19afc:	ldr	r0, [sp, #88]	; 0x58
   19b00:	add	r0, r0, #156	; 0x9c
   19b04:	str	r0, [sp, #84]	; 0x54
   19b08:	ldr	r0, [sp, #88]	; 0x58
   19b0c:	ldr	r0, [r0, #12]
   19b10:	str	r0, [sp, #64]	; 0x40
   19b14:	ldr	r0, [sp, #88]	; 0x58
   19b18:	ldr	r0, [r0, #156]	; 0x9c
   19b1c:	str	r0, [sp, #88]	; 0x58
   19b20:	b	19ae8 <__assert_fail@plt+0x6f30>
   19b24:	ldr	r0, [sp, #88]	; 0x58
   19b28:	ldr	r0, [r0, #8]
   19b2c:	cmp	r0, #3
   19b30:	beq	19b44 <__assert_fail@plt+0x6f8c>
   19b34:	ldr	r0, [sp, #88]	; 0x58
   19b38:	ldr	r1, [sp, #64]	; 0x40
   19b3c:	ldr	r2, [sp, #84]	; 0x54
   19b40:	bl	1ac74 <__assert_fail@plt+0x80bc>
   19b44:	movw	r0, #57480	; 0xe088
   19b48:	movt	r0, #8
   19b4c:	ldr	r0, [r0, #44]	; 0x2c
   19b50:	and	r0, r0, #9
   19b54:	cmp	r0, #0
   19b58:	beq	19b9c <__assert_fail@plt+0x6fe4>
   19b5c:	movw	r0, #55080	; 0xd728
   19b60:	movt	r0, #8
   19b64:	ldr	r0, [r0]
   19b68:	movw	r1, #27331	; 0x6ac3
   19b6c:	movt	r1, #7
   19b70:	bl	128c4 <fprintf@plt>
   19b74:	movw	r1, #55080	; 0xd728
   19b78:	movt	r1, #8
   19b7c:	ldr	r1, [r1]
   19b80:	ldr	r2, [fp, #-8]
   19b84:	ldr	r2, [r2]
   19b88:	str	r0, [sp, #44]	; 0x2c
   19b8c:	mov	r0, r1
   19b90:	mov	r1, r2
   19b94:	movw	r2, #0
   19b98:	bl	195c4 <__assert_fail@plt+0x6a0c>
   19b9c:	ldr	r0, [fp, #-8]
   19ba0:	str	r0, [sp, #84]	; 0x54
   19ba4:	movw	r0, #0
   19ba8:	str	r0, [sp, #60]	; 0x3c
   19bac:	ldr	r1, [sp, #84]	; 0x54
   19bb0:	ldr	r1, [r1]
   19bb4:	cmp	r1, r0
   19bb8:	beq	19be0 <__assert_fail@plt+0x7028>
   19bbc:	ldr	r0, [sp, #84]	; 0x54
   19bc0:	ldr	r0, [r0]
   19bc4:	ldr	r0, [r0, #8]
   19bc8:	cmp	r0, #3
   19bcc:	bne	19be0 <__assert_fail@plt+0x7028>
   19bd0:	ldr	r0, [sp, #84]	; 0x54
   19bd4:	ldr	r0, [r0]
   19bd8:	ldr	r0, [r0, #12]
   19bdc:	str	r0, [sp, #60]	; 0x3c
   19be0:	b	19be4 <__assert_fail@plt+0x702c>
   19be4:	ldr	r0, [sp, #84]	; 0x54
   19be8:	ldr	r0, [r0]
   19bec:	str	r0, [sp, #88]	; 0x58
   19bf0:	movw	r1, #0
   19bf4:	cmp	r0, r1
   19bf8:	beq	19fa0 <__assert_fail@plt+0x73e8>
   19bfc:	ldr	r0, [sp, #88]	; 0x58
   19c00:	ldr	r0, [r0, #8]
   19c04:	cmp	r0, #3
   19c08:	bne	19c38 <__assert_fail@plt+0x7080>
   19c0c:	ldr	r0, [sp, #88]	; 0x58
   19c10:	ldr	r0, [r0, #12]
   19c14:	ldr	r1, [sp, #60]	; 0x3c
   19c18:	cmp	r0, r1
   19c1c:	beq	19c34 <__assert_fail@plt+0x707c>
   19c20:	ldr	r0, [sp, #88]	; 0x58
   19c24:	ldr	r1, [sp, #60]	; 0x3c
   19c28:	ldr	r2, [sp, #84]	; 0x54
   19c2c:	bl	1ac74 <__assert_fail@plt+0x80bc>
   19c30:	str	r0, [sp, #88]	; 0x58
   19c34:	b	19c38 <__assert_fail@plt+0x7080>
   19c38:	ldr	r0, [sp, #88]	; 0x58
   19c3c:	ldr	r0, [r0, #160]	; 0xa0
   19c40:	ldr	r0, [r0, #8]
   19c44:	str	r0, [sp, #72]	; 0x48
   19c48:	ldr	r0, [sp, #88]	; 0x58
   19c4c:	ldr	r0, [r0, #160]	; 0xa0
   19c50:	ldr	r0, [r0]
   19c54:	str	r0, [sp, #76]	; 0x4c
   19c58:	ldr	r0, [sp, #72]	; 0x48
   19c5c:	cmp	r0, #2
   19c60:	str	r0, [sp, #40]	; 0x28
   19c64:	bcc	19c8c <__assert_fail@plt+0x70d4>
   19c68:	b	19c6c <__assert_fail@plt+0x70b4>
   19c6c:	ldr	r0, [sp, #40]	; 0x28
   19c70:	cmp	r0, #2
   19c74:	beq	19ed8 <__assert_fail@plt+0x7320>
   19c78:	b	19c7c <__assert_fail@plt+0x70c4>
   19c7c:	ldr	r0, [sp, #40]	; 0x28
   19c80:	cmp	r0, #3
   19c84:	beq	19efc <__assert_fail@plt+0x7344>
   19c88:	b	19f1c <__assert_fail@plt+0x7364>
   19c8c:	ldr	r0, [sp, #60]	; 0x3c
   19c90:	cmp	r0, #1
   19c94:	bne	19c9c <__assert_fail@plt+0x70e4>
   19c98:	b	19f40 <__assert_fail@plt+0x7388>
   19c9c:	ldr	r0, [sp, #88]	; 0x58
   19ca0:	ldr	r0, [r0, #160]	; 0xa0
   19ca4:	ldrb	r0, [r0, #16]
   19ca8:	tst	r0, #1
   19cac:	bne	19ed4 <__assert_fail@plt+0x731c>
   19cb0:	ldr	r0, [sp, #88]	; 0x58
   19cb4:	ldr	r0, [r0, #160]	; 0xa0
   19cb8:	bl	1adb8 <__assert_fail@plt+0x8200>
   19cbc:	tst	r0, #1
   19cc0:	beq	19d50 <__assert_fail@plt+0x7198>
   19cc4:	movw	r0, #57480	; 0xe088
   19cc8:	movt	r0, #8
   19ccc:	ldr	r0, [r0, #44]	; 0x2c
   19cd0:	and	r0, r0, #8
   19cd4:	cmp	r0, #0
   19cd8:	beq	19d3c <__assert_fail@plt+0x7184>
   19cdc:	movw	r0, #55080	; 0xd728
   19ce0:	movt	r0, #8
   19ce4:	ldr	r0, [r0]
   19ce8:	movw	r1, #57480	; 0xe088
   19cec:	movt	r1, #8
   19cf0:	ldrh	r2, [r1, #68]	; 0x44
   19cf4:	movw	r1, #27354	; 0x6ada
   19cf8:	movt	r1, #7
   19cfc:	bl	128c4 <fprintf@plt>
   19d00:	movw	r1, #55080	; 0xd728
   19d04:	movt	r1, #8
   19d08:	ldr	r1, [r1]
   19d0c:	ldr	r2, [sp, #88]	; 0x58
   19d10:	ldr	r2, [r2, #160]	; 0xa0
   19d14:	str	r0, [sp, #36]	; 0x24
   19d18:	mov	r0, r1
   19d1c:	mov	r1, r2
   19d20:	bl	182b4 <__assert_fail@plt+0x56fc>
   19d24:	movw	r0, #55080	; 0xd728
   19d28:	movt	r0, #8
   19d2c:	ldr	r0, [r0]
   19d30:	movw	r1, #27387	; 0x6afb
   19d34:	movt	r1, #7
   19d38:	bl	128c4 <fprintf@plt>
   19d3c:	ldr	r1, [sp, #88]	; 0x58
   19d40:	ldr	r2, [sp, #84]	; 0x54
   19d44:	sub	r0, fp, #24
   19d48:	bl	1aef4 <__assert_fail@plt+0x833c>
   19d4c:	b	19be4 <__assert_fail@plt+0x702c>
   19d50:	ldr	r0, [sp, #76]	; 0x4c
   19d54:	movw	r1, #25608	; 0x6408
   19d58:	movt	r1, #1
   19d5c:	cmp	r0, r1
   19d60:	bne	19d78 <__assert_fail@plt+0x71c0>
   19d64:	ldr	r1, [sp, #88]	; 0x58
   19d68:	ldr	r2, [sp, #84]	; 0x54
   19d6c:	sub	r0, fp, #16
   19d70:	bl	1aef4 <__assert_fail@plt+0x833c>
   19d74:	b	19be4 <__assert_fail@plt+0x702c>
   19d78:	movw	r0, #57480	; 0xe088
   19d7c:	movt	r0, #8
   19d80:	ldrh	r0, [r0, #68]	; 0x44
   19d84:	cmp	r0, #1
   19d88:	ble	19dd8 <__assert_fail@plt+0x7220>
   19d8c:	ldr	r0, [sp, #88]	; 0x58
   19d90:	ldr	r0, [r0, #160]	; 0xa0
   19d94:	ldr	r0, [r0, #24]
   19d98:	movw	r1, #2
   19d9c:	cmp	r1, r0
   19da0:	beq	19dbc <__assert_fail@plt+0x7204>
   19da4:	ldr	r0, [sp, #88]	; 0x58
   19da8:	ldr	r0, [r0, #160]	; 0xa0
   19dac:	ldr	r0, [r0, #24]
   19db0:	movw	r1, #1
   19db4:	cmp	r1, r0
   19db8:	bne	19dd8 <__assert_fail@plt+0x7220>
   19dbc:	ldr	r0, [sp, #88]	; 0x58
   19dc0:	ldr	r0, [r0, #160]	; 0xa0
   19dc4:	ldrb	r0, [r0, #18]
   19dc8:	tst	r0, #1
   19dcc:	movw	r0, #1
   19dd0:	str	r0, [sp, #32]
   19dd4:	beq	19df4 <__assert_fail@plt+0x723c>
   19dd8:	movw	r0, #57480	; 0xe088
   19ddc:	movt	r0, #8
   19de0:	ldrh	r0, [r0, #68]	; 0x44
   19de4:	cmp	r0, #2
   19de8:	movw	r0, #0
   19dec:	movgt	r0, #1
   19df0:	str	r0, [sp, #32]
   19df4:	ldr	r0, [sp, #32]
   19df8:	and	r0, r0, #1
   19dfc:	strb	r0, [sp, #59]	; 0x3b
   19e00:	ldrb	r0, [sp, #59]	; 0x3b
   19e04:	tst	r0, #1
   19e08:	beq	19ed0 <__assert_fail@plt+0x7318>
   19e0c:	movw	r0, #57480	; 0xe088
   19e10:	movt	r0, #8
   19e14:	ldr	r0, [r0, #44]	; 0x2c
   19e18:	and	r0, r0, #8
   19e1c:	cmp	r0, #0
   19e20:	beq	19eac <__assert_fail@plt+0x72f4>
   19e24:	movw	r0, #55080	; 0xd728
   19e28:	movt	r0, #8
   19e2c:	ldr	r0, [r0]
   19e30:	movw	r1, #57480	; 0xe088
   19e34:	movt	r1, #8
   19e38:	ldrh	r2, [r1, #68]	; 0x44
   19e3c:	movw	r1, #27404	; 0x6b0c
   19e40:	movt	r1, #7
   19e44:	bl	128c4 <fprintf@plt>
   19e48:	movw	r1, #55080	; 0xd728
   19e4c:	movt	r1, #8
   19e50:	ldr	r1, [r1]
   19e54:	ldr	r2, [sp, #88]	; 0x58
   19e58:	ldr	r2, [r2, #160]	; 0xa0
   19e5c:	str	r0, [sp, #28]
   19e60:	mov	r0, r1
   19e64:	mov	r1, r2
   19e68:	bl	182b4 <__assert_fail@plt+0x56fc>
   19e6c:	movw	r0, #55080	; 0xd728
   19e70:	movt	r0, #8
   19e74:	ldr	r0, [r0]
   19e78:	ldr	r1, [sp, #88]	; 0x58
   19e7c:	ldr	r1, [r1, #160]	; 0xa0
   19e80:	ldr	r1, [r1, #24]
   19e84:	str	r0, [sp, #24]
   19e88:	mov	r0, r1
   19e8c:	bl	1a62c <__assert_fail@plt+0x7a74>
   19e90:	ldr	r1, [sp, #24]
   19e94:	str	r0, [sp, #20]
   19e98:	mov	r0, r1
   19e9c:	movw	r1, #27434	; 0x6b2a
   19ea0:	movt	r1, #7
   19ea4:	ldr	r2, [sp, #20]
   19ea8:	bl	128c4 <fprintf@plt>
   19eac:	ldr	r0, [sp, #88]	; 0x58
   19eb0:	ldr	r0, [r0, #160]	; 0xa0
   19eb4:	ldr	r0, [r0, #24]
   19eb8:	add	r1, sp, #96	; 0x60
   19ebc:	add	r0, r1, r0, lsl #3
   19ec0:	ldr	r1, [sp, #88]	; 0x58
   19ec4:	ldr	r2, [sp, #84]	; 0x54
   19ec8:	bl	1aef4 <__assert_fail@plt+0x833c>
   19ecc:	b	19be4 <__assert_fail@plt+0x702c>
   19ed0:	b	19ed4 <__assert_fail@plt+0x731c>
   19ed4:	b	19f40 <__assert_fail@plt+0x7388>
   19ed8:	ldr	r0, [sp, #88]	; 0x58
   19edc:	ldr	r0, [r0, #160]	; 0xa0
   19ee0:	add	r0, r0, #160	; 0xa0
   19ee4:	bl	19a18 <__assert_fail@plt+0x6e60>
   19ee8:	ldr	r1, [sp, #88]	; 0x58
   19eec:	ldr	r1, [r1, #160]	; 0xa0
   19ef0:	and	r0, r0, #1
   19ef4:	strb	r0, [r1, #16]
   19ef8:	b	19f40 <__assert_fail@plt+0x7388>
   19efc:	ldr	r0, [sp, #88]	; 0x58
   19f00:	add	r0, r0, #160	; 0xa0
   19f04:	bl	19a18 <__assert_fail@plt+0x6e60>
   19f08:	ldr	r1, [sp, #88]	; 0x58
   19f0c:	ldr	r1, [r1, #160]	; 0xa0
   19f10:	and	r0, r0, #1
   19f14:	strb	r0, [r1, #16]
   19f18:	b	19f40 <__assert_fail@plt+0x7388>
   19f1c:	movw	r0, #27020	; 0x698c
   19f20:	movt	r0, #7
   19f24:	bl	12864 <gettext@plt>
   19f28:	movw	r1, #1
   19f2c:	str	r0, [sp, #16]
   19f30:	mov	r0, r1
   19f34:	movw	r1, #0
   19f38:	ldr	r2, [sp, #16]
   19f3c:	bl	12780 <error@plt>
   19f40:	ldr	r0, [sp, #88]	; 0x58
   19f44:	ldr	r0, [r0, #160]	; 0xa0
   19f48:	ldrb	r0, [r0, #16]
   19f4c:	and	r0, r0, #1
   19f50:	cmp	r0, #1
   19f54:	bne	19f90 <__assert_fail@plt+0x73d8>
   19f58:	add	r0, sp, #96	; 0x60
   19f5c:	ldr	r1, [sp, #84]	; 0x54
   19f60:	str	r1, [sp, #80]	; 0x50
   19f64:	ldr	r1, [sp, #80]	; 0x50
   19f68:	movw	r2, #11
   19f6c:	str	r1, [sp, #12]
   19f70:	mov	r1, r2
   19f74:	sub	r2, fp, #24
   19f78:	sub	r3, fp, #16
   19f7c:	ldr	ip, [sp, #12]
   19f80:	str	ip, [sp]
   19f84:	bl	1af64 <__assert_fail@plt+0x83ac>
   19f88:	movw	r0, #1
   19f8c:	strb	r0, [sp, #71]	; 0x47
   19f90:	ldr	r0, [sp, #88]	; 0x58
   19f94:	add	r0, r0, #156	; 0x9c
   19f98:	str	r0, [sp, #84]	; 0x54
   19f9c:	b	19be4 <__assert_fail@plt+0x702c>
   19fa0:	add	r0, sp, #96	; 0x60
   19fa4:	ldr	r1, [sp, #84]	; 0x54
   19fa8:	str	r1, [sp, #80]	; 0x50
   19fac:	ldr	r1, [sp, #80]	; 0x50
   19fb0:	movw	r2, #11
   19fb4:	str	r1, [sp, #8]
   19fb8:	mov	r1, r2
   19fbc:	sub	r2, fp, #24
   19fc0:	sub	r3, fp, #16
   19fc4:	ldr	ip, [sp, #8]
   19fc8:	str	ip, [sp]
   19fcc:	bl	1af64 <__assert_fail@plt+0x83ac>
   19fd0:	ldrb	r0, [sp, #71]	; 0x47
   19fd4:	and	r0, r0, #1
   19fd8:	strb	r0, [fp, #-1]
   19fdc:	ldrb	r0, [fp, #-1]
   19fe0:	and	r0, r0, #1
   19fe4:	mov	sp, fp
   19fe8:	pop	{fp, pc}
   19fec:	push	{fp, lr}
   19ff0:	mov	fp, sp
   19ff4:	sub	sp, sp, #8
   19ff8:	str	r0, [sp, #4]
   19ffc:	and	r0, r1, #1
   1a000:	strb	r0, [sp, #3]
   1a004:	ldrb	r0, [sp, #3]
   1a008:	tst	r0, #1
   1a00c:	beq	1a04c <__assert_fail@plt+0x7494>
   1a010:	ldr	r0, [sp, #4]
   1a014:	ldr	r0, [r0, #8]
   1a018:	movw	r1, #3
   1a01c:	cmp	r1, r0
   1a020:	bne	1a028 <__assert_fail@plt+0x7470>
   1a024:	b	1a048 <__assert_fail@plt+0x7490>
   1a028:	movw	r0, #27510	; 0x6b76
   1a02c:	movt	r0, #7
   1a030:	movw	r1, #25362	; 0x6312
   1a034:	movt	r1, #7
   1a038:	movw	r2, #1230	; 0x4ce
   1a03c:	movw	r3, #27529	; 0x6b89
   1a040:	movt	r3, #7
   1a044:	bl	12bb8 <__assert_fail@plt>
   1a048:	b	1a04c <__assert_fail@plt+0x7494>
   1a04c:	ldr	r0, [sp, #4]
   1a050:	ldr	r0, [r0, #156]	; 0x9c
   1a054:	movw	r1, #0
   1a058:	cmp	r0, r1
   1a05c:	beq	1a0b0 <__assert_fail@plt+0x74f8>
   1a060:	ldr	r0, [sp, #4]
   1a064:	ldr	r0, [r0, #156]	; 0x9c
   1a068:	ldr	r0, [r0, #8]
   1a06c:	movw	r1, #3
   1a070:	cmp	r1, r0
   1a074:	bne	1a07c <__assert_fail@plt+0x74c4>
   1a078:	b	1a09c <__assert_fail@plt+0x74e4>
   1a07c:	movw	r0, #27581	; 0x6bbd
   1a080:	movt	r0, #7
   1a084:	movw	r1, #25362	; 0x6312
   1a088:	movt	r1, #7
   1a08c:	movw	r2, #1235	; 0x4d3
   1a090:	movw	r3, #27529	; 0x6b89
   1a094:	movt	r3, #7
   1a098:	bl	12bb8 <__assert_fail@plt>
   1a09c:	ldr	r0, [sp, #4]
   1a0a0:	ldr	r0, [r0, #156]	; 0x9c
   1a0a4:	movw	r1, #0
   1a0a8:	and	r1, r1, #1
   1a0ac:	bl	19fec <__assert_fail@plt+0x7434>
   1a0b0:	ldr	r0, [sp, #4]
   1a0b4:	ldr	r0, [r0, #160]	; 0xa0
   1a0b8:	movw	r1, #0
   1a0bc:	cmp	r0, r1
   1a0c0:	beq	1a0d8 <__assert_fail@plt+0x7520>
   1a0c4:	ldr	r0, [sp, #4]
   1a0c8:	ldr	r0, [r0, #160]	; 0xa0
   1a0cc:	movw	r1, #0
   1a0d0:	and	r1, r1, #1
   1a0d4:	bl	19fec <__assert_fail@plt+0x7434>
   1a0d8:	mov	sp, fp
   1a0dc:	pop	{fp, pc}
   1a0e0:	push	{fp, lr}
   1a0e4:	mov	fp, sp
   1a0e8:	sub	sp, sp, #16
   1a0ec:	str	r0, [sp, #8]
   1a0f0:	ldr	r0, [sp, #8]
   1a0f4:	movw	r1, #0
   1a0f8:	cmp	r0, r1
   1a0fc:	beq	1a16c <__assert_fail@plt+0x75b4>
   1a100:	b	1a104 <__assert_fail@plt+0x754c>
   1a104:	movw	r0, #0
   1a108:	strb	r0, [sp, #7]
   1a10c:	ldr	r0, [sp, #8]
   1a110:	bl	1b3d8 <__assert_fail@plt+0x8820>
   1a114:	tst	r0, #1
   1a118:	bne	1a144 <__assert_fail@plt+0x758c>
   1a11c:	ldr	r0, [sp, #8]
   1a120:	ldr	r0, [r0, #156]	; 0x9c
   1a124:	bl	1a0e0 <__assert_fail@plt+0x7528>
   1a128:	tst	r0, #1
   1a12c:	bne	1a144 <__assert_fail@plt+0x758c>
   1a130:	ldr	r0, [sp, #8]
   1a134:	ldr	r0, [r0, #160]	; 0xa0
   1a138:	bl	1a0e0 <__assert_fail@plt+0x7528>
   1a13c:	tst	r0, #1
   1a140:	beq	1a14c <__assert_fail@plt+0x7594>
   1a144:	movw	r0, #1
   1a148:	strb	r0, [sp, #7]
   1a14c:	b	1a150 <__assert_fail@plt+0x7598>
   1a150:	ldrb	r0, [sp, #7]
   1a154:	tst	r0, #1
   1a158:	bne	1a104 <__assert_fail@plt+0x754c>
   1a15c:	ldrb	r0, [sp, #7]
   1a160:	and	r0, r0, #1
   1a164:	strb	r0, [fp, #-1]
   1a168:	b	1a178 <__assert_fail@plt+0x75c0>
   1a16c:	movw	r0, #0
   1a170:	and	r0, r0, #1
   1a174:	strb	r0, [fp, #-1]
   1a178:	ldrb	r0, [fp, #-1]
   1a17c:	and	r0, r0, #1
   1a180:	mov	sp, fp
   1a184:	pop	{fp, pc}
   1a188:	push	{fp, lr}
   1a18c:	mov	fp, sp
   1a190:	sub	sp, sp, #8
   1a194:	str	r0, [sp, #4]
   1a198:	ldr	r0, [sp, #4]
   1a19c:	bl	1a1cc <__assert_fail@plt+0x7614>
   1a1a0:	str	r0, [sp]
   1a1a4:	ldr	r0, [sp]
   1a1a8:	movw	r1, #0
   1a1ac:	cmp	r0, r1
   1a1b0:	beq	1a1c0 <__assert_fail@plt+0x7608>
   1a1b4:	ldr	r0, [sp]
   1a1b8:	movw	r1, #0
   1a1bc:	str	r1, [r0, #36]	; 0x24
   1a1c0:	ldr	r0, [sp]
   1a1c4:	mov	sp, fp
   1a1c8:	pop	{fp, pc}
   1a1cc:	push	{fp, lr}
   1a1d0:	mov	fp, sp
   1a1d4:	sub	sp, sp, #8
   1a1d8:	str	r0, [sp, #4]
   1a1dc:	ldr	r0, [sp, #4]
   1a1e0:	ldr	r0, [r0]
   1a1e4:	cmp	r0, #0
   1a1e8:	beq	1a1f0 <__assert_fail@plt+0x7638>
   1a1ec:	b	1a210 <__assert_fail@plt+0x7658>
   1a1f0:	movw	r0, #24545	; 0x5fe1
   1a1f4:	movt	r0, #7
   1a1f8:	movw	r1, #25362	; 0x6312
   1a1fc:	movt	r1, #7
   1a200:	movw	r2, #1485	; 0x5cd
   1a204:	movw	r3, #25969	; 0x6571
   1a208:	movt	r3, #7
   1a20c:	bl	12bb8 <__assert_fail@plt>
   1a210:	ldr	r0, [sp, #4]
   1a214:	ldr	r0, [r0]
   1a218:	cmp	r0, #2
   1a21c:	beq	1a224 <__assert_fail@plt+0x766c>
   1a220:	b	1a244 <__assert_fail@plt+0x768c>
   1a224:	movw	r0, #24581	; 0x6005
   1a228:	movt	r0, #7
   1a22c:	movw	r1, #25362	; 0x6312
   1a230:	movt	r1, #7
   1a234:	movw	r2, #1486	; 0x5ce
   1a238:	movw	r3, #25969	; 0x6571
   1a23c:	movt	r3, #7
   1a240:	bl	12bb8 <__assert_fail@plt>
   1a244:	movw	r0, #176	; 0xb0
   1a248:	bl	4ce88 <__assert_fail@plt+0x3a2d0>
   1a24c:	str	r0, [sp]
   1a250:	movw	r0, #55128	; 0xd758
   1a254:	movt	r0, #8
   1a258:	ldr	r0, [r0]
   1a25c:	movw	r1, #0
   1a260:	cmp	r0, r1
   1a264:	bne	1a288 <__assert_fail@plt+0x76d0>
   1a268:	ldr	r0, [sp]
   1a26c:	movw	r1, #55128	; 0xd758
   1a270:	movt	r1, #8
   1a274:	str	r0, [r1]
   1a278:	movw	r1, #55132	; 0xd75c
   1a27c:	movt	r1, #8
   1a280:	str	r0, [r1]
   1a284:	b	1a2a4 <__assert_fail@plt+0x76ec>
   1a288:	ldr	r0, [sp]
   1a28c:	movw	r1, #55132	; 0xd75c
   1a290:	movt	r1, #8
   1a294:	ldr	r2, [r1]
   1a298:	str	r0, [r2, #152]	; 0x98
   1a29c:	ldr	r0, [sp]
   1a2a0:	str	r0, [r1]
   1a2a4:	ldr	r0, [sp, #4]
   1a2a8:	movw	r1, #55132	; 0xd75c
   1a2ac:	movt	r1, #8
   1a2b0:	ldr	r2, [r1]
   1a2b4:	str	r0, [r2, #172]	; 0xac
   1a2b8:	ldr	r0, [r1]
   1a2bc:	movw	r2, #0
   1a2c0:	str	r2, [r0, #8]
   1a2c4:	ldr	r0, [r1]
   1a2c8:	str	r2, [r0, #12]
   1a2cc:	ldr	r0, [r1]
   1a2d0:	movw	r2, #1
   1a2d4:	strb	r2, [r0, #18]
   1a2d8:	ldr	r0, [r1]
   1a2dc:	strb	r2, [r0, #19]
   1a2e0:	ldr	r0, [r1]
   1a2e4:	movw	r2, #10
   1a2e8:	str	r2, [r0, #24]
   1a2ec:	ldr	r0, [r1]
   1a2f0:	movw	r2, #26029	; 0x65ad
   1a2f4:	movt	r2, #7
   1a2f8:	str	r2, [r0, #36]	; 0x24
   1a2fc:	movw	r0, #57480	; 0xe088
   1a300:	movt	r0, #8
   1a304:	ldrb	r0, [r0, #15]
   1a308:	ldr	r2, [r1]
   1a30c:	and	r0, r0, #1
   1a310:	strb	r0, [r2, #32]
   1a314:	ldr	r0, [r1]
   1a318:	vmov.f32	s0, #112	; 0x3f800000  1.0
   1a31c:	vstr	s0, [r0, #28]
   1a320:	ldr	r0, [r1]
   1a324:	bl	1a33c <__assert_fail@plt+0x7784>
   1a328:	movw	r0, #55132	; 0xd75c
   1a32c:	movt	r0, #8
   1a330:	ldr	r0, [r0]
   1a334:	mov	sp, fp
   1a338:	pop	{fp, pc}
   1a33c:	sub	sp, sp, #8
   1a340:	str	r0, [sp, #4]
   1a344:	ldr	r0, [sp, #4]
   1a348:	add	r0, r0, #164	; 0xa4
   1a34c:	str	r0, [sp]
   1a350:	ldr	r0, [sp]
   1a354:	movw	r1, #0
   1a358:	str	r1, [r0, #4]
   1a35c:	ldr	r0, [sp]
   1a360:	str	r1, [r0]
   1a364:	add	sp, sp, #8
   1a368:	bx	lr
   1a36c:	push	{fp, lr}
   1a370:	mov	fp, sp
   1a374:	sub	sp, sp, #24
   1a378:	str	r0, [fp, #-4]
   1a37c:	str	r1, [fp, #-8]
   1a380:	movw	r0, #55136	; 0xd760
   1a384:	movt	r0, #8
   1a388:	ldr	r0, [r0]
   1a38c:	movw	r1, #0
   1a390:	cmp	r1, r0
   1a394:	bne	1a3b0 <__assert_fail@plt+0x77f8>
   1a398:	movw	r0, #26060	; 0x65cc
   1a39c:	movt	r0, #7
   1a3a0:	bl	21bb4 <__assert_fail@plt+0xeffc>
   1a3a4:	movw	r1, #55136	; 0xd760
   1a3a8:	movt	r1, #8
   1a3ac:	str	r0, [r1]
   1a3b0:	movw	r0, #55136	; 0xd760
   1a3b4:	movt	r0, #8
   1a3b8:	ldr	r0, [r0]
   1a3bc:	movw	r1, #0
   1a3c0:	cmp	r0, r1
   1a3c4:	beq	1a3cc <__assert_fail@plt+0x7814>
   1a3c8:	b	1a3ec <__assert_fail@plt+0x7834>
   1a3cc:	movw	r0, #26064	; 0x65d0
   1a3d0:	movt	r0, #7
   1a3d4:	movw	r1, #25362	; 0x6312
   1a3d8:	movt	r1, #7
   1a3dc:	movw	r2, #1528	; 0x5f8
   1a3e0:	movw	r3, #26082	; 0x65e2
   1a3e4:	movt	r3, #7
   1a3e8:	bl	12bb8 <__assert_fail@plt>
   1a3ec:	movw	r0, #55132	; 0xd75c
   1a3f0:	movt	r0, #8
   1a3f4:	ldr	r0, [r0]
   1a3f8:	movw	r1, #0
   1a3fc:	cmp	r0, r1
   1a400:	beq	1a4fc <__assert_fail@plt+0x7944>
   1a404:	movw	r0, #55132	; 0xd75c
   1a408:	movt	r0, #8
   1a40c:	ldr	r0, [r0]
   1a410:	ldr	r0, [r0, #8]
   1a414:	cmp	r0, #0
   1a418:	str	r0, [sp, #8]
   1a41c:	beq	1a444 <__assert_fail@plt+0x788c>
   1a420:	b	1a424 <__assert_fail@plt+0x786c>
   1a424:	ldr	r0, [sp, #8]
   1a428:	cmp	r0, #1
   1a42c:	beq	1a468 <__assert_fail@plt+0x78b0>
   1a430:	b	1a434 <__assert_fail@plt+0x787c>
   1a434:	ldr	r0, [sp, #8]
   1a438:	cmp	r0, #5
   1a43c:	beq	1a468 <__assert_fail@plt+0x78b0>
   1a440:	b	1a4f4 <__assert_fail@plt+0x793c>
   1a444:	movw	r0, #26163	; 0x6633
   1a448:	movt	r0, #7
   1a44c:	bl	12864 <gettext@plt>
   1a450:	movw	r1, #1
   1a454:	str	r0, [sp, #4]
   1a458:	mov	r0, r1
   1a45c:	movw	r1, #0
   1a460:	ldr	r2, [sp, #4]
   1a464:	bl	12780 <error@plt>
   1a468:	movw	r0, #55136	; 0xd760
   1a46c:	movt	r0, #8
   1a470:	ldr	r0, [r0]
   1a474:	bl	1a188 <__assert_fail@plt+0x75d0>
   1a478:	str	r0, [sp, #12]
   1a47c:	ldr	r0, [sp, #12]
   1a480:	movw	r1, #18388	; 0x47d4
   1a484:	movt	r1, #1
   1a488:	str	r1, [r0]
   1a48c:	ldr	r0, [sp, #12]
   1a490:	movw	r1, #26205	; 0x665d
   1a494:	movt	r1, #7
   1a498:	str	r1, [r0, #4]
   1a49c:	ldr	r0, [sp, #12]
   1a4a0:	movw	r1, #3
   1a4a4:	str	r1, [r0, #8]
   1a4a8:	ldr	r0, [sp, #12]
   1a4ac:	str	r1, [r0, #12]
   1a4b0:	ldr	r0, [sp, #12]
   1a4b4:	movw	r1, #0
   1a4b8:	strb	r1, [r0, #18]
   1a4bc:	ldr	r0, [sp, #12]
   1a4c0:	strb	r1, [r0, #19]
   1a4c4:	ldr	r0, [sp, #12]
   1a4c8:	strb	r1, [r0, #20]
   1a4cc:	ldr	r0, [sp, #12]
   1a4d0:	movw	r2, #0
   1a4d4:	str	r2, [r0, #36]	; 0x24
   1a4d8:	ldr	r0, [sp, #12]
   1a4dc:	str	r2, [r0, #40]	; 0x28
   1a4e0:	ldr	r0, [sp, #12]
   1a4e4:	strb	r1, [r0, #16]
   1a4e8:	ldr	r0, [sp, #12]
   1a4ec:	strb	r1, [r0, #17]
   1a4f0:	b	1a4f8 <__assert_fail@plt+0x7940>
   1a4f4:	b	1a4f8 <__assert_fail@plt+0x7940>
   1a4f8:	b	1a4fc <__assert_fail@plt+0x7944>
   1a4fc:	ldr	r0, [fp, #-4]
   1a500:	bl	1a1cc <__assert_fail@plt+0x7614>
   1a504:	str	r0, [sp, #12]
   1a508:	ldr	r0, [fp, #-8]
   1a50c:	ldr	r1, [sp, #12]
   1a510:	str	r0, [r1, #36]	; 0x24
   1a514:	ldr	r0, [fp, #-4]
   1a518:	ldr	r1, [sp, #12]
   1a51c:	str	r0, [r1, #172]	; 0xac
   1a520:	ldr	r0, [sp, #12]
   1a524:	mov	sp, fp
   1a528:	pop	{fp, pc}
   1a52c:	sub	sp, sp, #8
   1a530:	strh	r0, [sp, #6]
   1a534:	movw	r0, #0
   1a538:	str	r0, [sp]
   1a53c:	ldr	r0, [sp]
   1a540:	movw	r1, #54496	; 0xd4e0
   1a544:	movt	r1, #8
   1a548:	add	r0, r1, r0, lsl #3
   1a54c:	ldrsh	r0, [r0]
   1a550:	cmn	r0, #1
   1a554:	beq	1a590 <__assert_fail@plt+0x79d8>
   1a558:	ldr	r0, [sp]
   1a55c:	movw	r1, #54496	; 0xd4e0
   1a560:	movt	r1, #8
   1a564:	add	r0, r1, r0, lsl #3
   1a568:	ldrsh	r0, [r0]
   1a56c:	ldrsh	r1, [sp, #6]
   1a570:	cmp	r0, r1
   1a574:	bne	1a57c <__assert_fail@plt+0x79c4>
   1a578:	b	1a590 <__assert_fail@plt+0x79d8>
   1a57c:	b	1a580 <__assert_fail@plt+0x79c8>
   1a580:	ldr	r0, [sp]
   1a584:	add	r0, r0, #1
   1a588:	str	r0, [sp]
   1a58c:	b	1a53c <__assert_fail@plt+0x7984>
   1a590:	ldr	r0, [sp]
   1a594:	movw	r1, #54496	; 0xd4e0
   1a598:	movt	r1, #8
   1a59c:	add	r0, r1, r0, lsl #3
   1a5a0:	ldr	r0, [r0, #4]
   1a5a4:	add	sp, sp, #8
   1a5a8:	bx	lr
   1a5ac:	sub	sp, sp, #8
   1a5b0:	strh	r0, [sp, #6]
   1a5b4:	movw	r0, #0
   1a5b8:	str	r0, [sp]
   1a5bc:	ldr	r0, [sp]
   1a5c0:	movw	r1, #54552	; 0xd518
   1a5c4:	movt	r1, #8
   1a5c8:	add	r0, r1, r0, lsl #3
   1a5cc:	ldrsh	r0, [r0]
   1a5d0:	cmn	r0, #1
   1a5d4:	beq	1a610 <__assert_fail@plt+0x7a58>
   1a5d8:	ldr	r0, [sp]
   1a5dc:	movw	r1, #54552	; 0xd518
   1a5e0:	movt	r1, #8
   1a5e4:	add	r0, r1, r0, lsl #3
   1a5e8:	ldrsh	r0, [r0]
   1a5ec:	ldrsh	r1, [sp, #6]
   1a5f0:	cmp	r0, r1
   1a5f4:	bne	1a5fc <__assert_fail@plt+0x7a44>
   1a5f8:	b	1a610 <__assert_fail@plt+0x7a58>
   1a5fc:	b	1a600 <__assert_fail@plt+0x7a48>
   1a600:	ldr	r0, [sp]
   1a604:	add	r0, r0, #1
   1a608:	str	r0, [sp]
   1a60c:	b	1a5bc <__assert_fail@plt+0x7a04>
   1a610:	ldr	r0, [sp]
   1a614:	movw	r1, #54552	; 0xd518
   1a618:	movt	r1, #8
   1a61c:	add	r0, r1, r0, lsl #3
   1a620:	ldr	r0, [r0, #4]
   1a624:	add	sp, sp, #8
   1a628:	bx	lr
   1a62c:	sub	sp, sp, #16
   1a630:	str	r0, [sp, #8]
   1a634:	movw	r0, #11
   1a638:	str	r0, [sp]
   1a63c:	movw	r0, #0
   1a640:	str	r0, [sp, #4]
   1a644:	ldr	r0, [sp, #4]
   1a648:	ldr	r1, [sp]
   1a64c:	cmp	r0, r1
   1a650:	bcs	1a6a4 <__assert_fail@plt+0x7aec>
   1a654:	ldr	r0, [sp, #4]
   1a658:	movw	r1, #53936	; 0xd2b0
   1a65c:	movt	r1, #8
   1a660:	add	r0, r1, r0, lsl #3
   1a664:	ldr	r0, [r0]
   1a668:	ldr	r1, [sp, #8]
   1a66c:	cmp	r0, r1
   1a670:	bne	1a690 <__assert_fail@plt+0x7ad8>
   1a674:	ldr	r0, [sp, #4]
   1a678:	movw	r1, #53936	; 0xd2b0
   1a67c:	movt	r1, #8
   1a680:	add	r0, r1, r0, lsl #3
   1a684:	ldr	r0, [r0, #4]
   1a688:	str	r0, [sp, #12]
   1a68c:	b	1a6b0 <__assert_fail@plt+0x7af8>
   1a690:	b	1a694 <__assert_fail@plt+0x7adc>
   1a694:	ldr	r0, [sp, #4]
   1a698:	add	r0, r0, #1
   1a69c:	str	r0, [sp, #4]
   1a6a0:	b	1a644 <__assert_fail@plt+0x7a8c>
   1a6a4:	movw	r0, #28004	; 0x6d64
   1a6a8:	movt	r0, #7
   1a6ac:	str	r0, [sp, #12]
   1a6b0:	ldr	r0, [sp, #12]
   1a6b4:	add	sp, sp, #16
   1a6b8:	bx	lr
   1a6bc:	push	{fp, lr}
   1a6c0:	mov	fp, sp
   1a6c4:	sub	sp, sp, #40	; 0x28
   1a6c8:	str	r0, [fp, #-8]
   1a6cc:	str	r1, [fp, #-12]
   1a6d0:	strh	r2, [fp, #-14]
   1a6d4:	ldr	r0, [fp, #-8]
   1a6d8:	ldr	r0, [r0]
   1a6dc:	movw	r1, #0
   1a6e0:	cmp	r0, r1
   1a6e4:	beq	1a6fc <__assert_fail@plt+0x7b44>
   1a6e8:	ldr	r0, [fp, #-8]
   1a6ec:	ldr	r0, [r0]
   1a6f0:	ldr	r0, [r0, #8]
   1a6f4:	cmp	r0, #5
   1a6f8:	bne	1a708 <__assert_fail@plt+0x7b50>
   1a6fc:	movw	r0, #0
   1a700:	str	r0, [fp, #-4]
   1a704:	b	1a864 <__assert_fail@plt+0x7cac>
   1a708:	ldr	r0, [fp, #-12]
   1a70c:	str	r0, [sp, #20]
   1a710:	ldr	r0, [fp, #-8]
   1a714:	ldr	r0, [r0]
   1a718:	movw	r1, #0
   1a71c:	cmp	r0, r1
   1a720:	movw	r0, #0
   1a724:	str	r0, [sp, #12]
   1a728:	beq	1a74c <__assert_fail@plt+0x7b94>
   1a72c:	ldr	r0, [fp, #-8]
   1a730:	ldr	r0, [r0]
   1a734:	ldr	r0, [r0, #12]
   1a738:	ldrsh	r1, [fp, #-14]
   1a73c:	cmp	r0, r1
   1a740:	movw	r0, #0
   1a744:	movgt	r0, #1
   1a748:	str	r0, [sp, #12]
   1a74c:	ldr	r0, [sp, #12]
   1a750:	tst	r0, #1
   1a754:	beq	1a85c <__assert_fail@plt+0x7ca4>
   1a758:	ldr	r0, [fp, #-8]
   1a75c:	ldr	r0, [r0]
   1a760:	ldr	r0, [r0, #8]
   1a764:	cmp	r0, #5
   1a768:	str	r0, [sp, #8]
   1a76c:	bhi	1a828 <__assert_fail@plt+0x7c70>
   1a770:	add	r0, pc, #8
   1a774:	ldr	r1, [sp, #8]
   1a778:	ldr	r0, [r0, r1, lsl #2]
   1a77c:	mov	pc, r0
   1a780:	muleq	r1, r8, r7
   1a784:	muleq	r1, r8, r7
   1a788:	muleq	r1, r8, r7
   1a78c:			; <UNDEFINED> instruction: 0x0001a7bc
   1a790:	muleq	r1, r8, r7
   1a794:	andeq	sl, r1, ip, lsl r8
   1a798:	movw	r0, #26481	; 0x6771
   1a79c:	movt	r0, #7
   1a7a0:	bl	12864 <gettext@plt>
   1a7a4:	movw	r1, #1
   1a7a8:	str	r0, [sp, #4]
   1a7ac:	mov	r0, r1
   1a7b0:	movw	r1, #0
   1a7b4:	ldr	r2, [sp, #4]
   1a7b8:	bl	12780 <error@plt>
   1a7bc:	ldr	r0, [fp, #-8]
   1a7c0:	ldr	r0, [r0]
   1a7c4:	str	r0, [sp, #16]
   1a7c8:	ldr	r0, [sp, #20]
   1a7cc:	ldr	r1, [fp, #-8]
   1a7d0:	ldr	r1, [r1]
   1a7d4:	str	r0, [r1, #156]	; 0x9c
   1a7d8:	ldr	r0, [fp, #-8]
   1a7dc:	ldr	r0, [r0]
   1a7e0:	str	r0, [sp, #20]
   1a7e4:	ldr	r0, [fp, #-8]
   1a7e8:	ldr	r0, [r0]
   1a7ec:	ldr	r0, [r0, #152]	; 0x98
   1a7f0:	ldr	r1, [fp, #-8]
   1a7f4:	str	r0, [r1]
   1a7f8:	ldr	r0, [fp, #-8]
   1a7fc:	ldr	r1, [sp, #20]
   1a800:	ldr	r1, [r1, #12]
   1a804:	ldr	r2, [sp, #16]
   1a808:	sxth	r1, r1
   1a80c:	bl	19140 <__assert_fail@plt+0x6588>
   1a810:	ldr	r1, [sp, #20]
   1a814:	str	r0, [r1, #160]	; 0xa0
   1a818:	b	1a858 <__assert_fail@plt+0x7ca0>
   1a81c:	ldr	r0, [sp, #20]
   1a820:	str	r0, [fp, #-4]
   1a824:	b	1a864 <__assert_fail@plt+0x7cac>
   1a828:	movw	r0, #27053	; 0x69ad
   1a82c:	movt	r0, #7
   1a830:	bl	12864 <gettext@plt>
   1a834:	ldr	r1, [fp, #-8]
   1a838:	ldr	r1, [r1]
   1a83c:	ldr	r3, [r1, #8]
   1a840:	movw	r1, #1
   1a844:	str	r0, [sp]
   1a848:	mov	r0, r1
   1a84c:	movw	r1, #0
   1a850:	ldr	r2, [sp]
   1a854:	bl	12780 <error@plt>
   1a858:	b	1a710 <__assert_fail@plt+0x7b58>
   1a85c:	ldr	r0, [sp, #20]
   1a860:	str	r0, [fp, #-4]
   1a864:	ldr	r0, [fp, #-4]
   1a868:	mov	sp, fp
   1a86c:	pop	{fp, pc}
   1a870:	push	{fp, lr}
   1a874:	mov	fp, sp
   1a878:	sub	sp, sp, #40	; 0x28
   1a87c:	str	r0, [fp, #-8]
   1a880:	movw	r0, #0
   1a884:	str	r0, [fp, #-12]
   1a888:	movw	r0, #10
   1a88c:	str	r0, [fp, #-16]
   1a890:	ldr	r0, [fp, #-8]
   1a894:	ldrb	r0, [r0, #18]
   1a898:	tst	r0, #1
   1a89c:	beq	1a8ac <__assert_fail@plt+0x7cf4>
   1a8a0:	movw	r0, #3
   1a8a4:	str	r0, [fp, #-12]
   1a8a8:	b	1a8f4 <__assert_fail@plt+0x7d3c>
   1a8ac:	ldr	r0, [fp, #-8]
   1a8b0:	ldrb	r0, [r0, #20]
   1a8b4:	tst	r0, #1
   1a8b8:	beq	1a8c8 <__assert_fail@plt+0x7d10>
   1a8bc:	movw	r0, #1
   1a8c0:	str	r0, [fp, #-12]
   1a8c4:	b	1a8f0 <__assert_fail@plt+0x7d38>
   1a8c8:	ldr	r0, [fp, #-8]
   1a8cc:	ldrb	r0, [r0, #19]
   1a8d0:	tst	r0, #1
   1a8d4:	beq	1a8e4 <__assert_fail@plt+0x7d2c>
   1a8d8:	movw	r0, #2
   1a8dc:	str	r0, [fp, #-12]
   1a8e0:	b	1a8ec <__assert_fail@plt+0x7d34>
   1a8e4:	movw	r0, #0
   1a8e8:	str	r0, [fp, #-12]
   1a8ec:	b	1a8f0 <__assert_fail@plt+0x7d38>
   1a8f0:	b	1a8f4 <__assert_fail@plt+0x7d3c>
   1a8f4:	ldr	r0, [fp, #-8]
   1a8f8:	ldr	r0, [r0]
   1a8fc:	movw	r1, #20688	; 0x50d0
   1a900:	movt	r1, #1
   1a904:	cmp	r0, r1
   1a908:	beq	1a924 <__assert_fail@plt+0x7d6c>
   1a90c:	ldr	r0, [fp, #-8]
   1a910:	ldr	r0, [r0]
   1a914:	movw	r1, #20740	; 0x5104
   1a918:	movt	r1, #1
   1a91c:	cmp	r0, r1
   1a920:	bne	1a94c <__assert_fail@plt+0x7d94>
   1a924:	ldr	r0, [fp, #-8]
   1a928:	ldrb	r0, [r0, #40]	; 0x28
   1a92c:	tst	r0, #1
   1a930:	beq	1a940 <__assert_fail@plt+0x7d88>
   1a934:	movw	r0, #7
   1a938:	str	r0, [fp, #-16]
   1a93c:	b	1a948 <__assert_fail@plt+0x7d90>
   1a940:	movw	r0, #8
   1a944:	str	r0, [fp, #-16]
   1a948:	b	1aa84 <__assert_fail@plt+0x7ecc>
   1a94c:	ldr	r0, [fp, #-8]
   1a950:	ldr	r0, [r0]
   1a954:	movw	r1, #60408	; 0xebf8
   1a958:	movt	r1, #1
   1a95c:	cmp	r0, r1
   1a960:	bne	1a974 <__assert_fail@plt+0x7dbc>
   1a964:	ldr	r0, [fp, #-8]
   1a968:	ldr	r0, [r0, #24]
   1a96c:	str	r0, [fp, #-16]
   1a970:	b	1aa80 <__assert_fail@plt+0x7ec8>
   1a974:	movw	r0, #55140	; 0xd764
   1a978:	movt	r0, #8
   1a97c:	ldr	r0, [r0]
   1a980:	cmp	r0, #0
   1a984:	bne	1a9ec <__assert_fail@plt+0x7e34>
   1a988:	movw	r0, #54024	; 0xd308
   1a98c:	movt	r0, #8
   1a990:	movw	r1, #59	; 0x3b
   1a994:	movw	r2, #8
   1a998:	movw	r3, #43700	; 0xaab4
   1a99c:	movt	r3, #1
   1a9a0:	bl	12abc <qsort@plt>
   1a9a4:	movw	r0, #54024	; 0xd308
   1a9a8:	movt	r0, #8
   1a9ac:	movw	r1, #59	; 0x3b
   1a9b0:	movw	r2, #8
   1a9b4:	movw	r3, #43700	; 0xaab4
   1a9b8:	movt	r3, #1
   1a9bc:	bl	1ab08 <__assert_fail@plt+0x7f50>
   1a9c0:	tst	r0, #1
   1a9c4:	bne	1a9dc <__assert_fail@plt+0x7e24>
   1a9c8:	movw	r0, #1
   1a9cc:	movw	r1, #0
   1a9d0:	movw	r2, #27091	; 0x69d3
   1a9d4:	movt	r2, #7
   1a9d8:	bl	12780 <error@plt>
   1a9dc:	movw	r0, #55140	; 0xd764
   1a9e0:	movt	r0, #8
   1a9e4:	movw	r1, #1
   1a9e8:	str	r1, [r0]
   1a9ec:	movw	r0, #54024	; 0xd308
   1a9f0:	movt	r0, #8
   1a9f4:	ldr	r1, [fp, #-8]
   1a9f8:	ldr	r1, [r1]
   1a9fc:	str	r1, [sp, #16]
   1aa00:	add	r1, sp, #16
   1aa04:	str	r0, [sp, #8]
   1aa08:	mov	r0, r1
   1aa0c:	ldr	r1, [sp, #8]
   1aa10:	movw	r2, #59	; 0x3b
   1aa14:	movw	r3, #8
   1aa18:	movw	ip, #43700	; 0xaab4
   1aa1c:	movt	ip, #1
   1aa20:	str	ip, [sp]
   1aa24:	bl	1290c <bsearch@plt>
   1aa28:	str	r0, [sp, #12]
   1aa2c:	ldr	r0, [sp, #12]
   1aa30:	movw	r1, #0
   1aa34:	cmp	r0, r1
   1aa38:	beq	1aa4c <__assert_fail@plt+0x7e94>
   1aa3c:	ldr	r0, [sp, #12]
   1aa40:	ldr	r0, [r0, #4]
   1aa44:	str	r0, [fp, #-16]
   1aa48:	b	1aa7c <__assert_fail@plt+0x7ec4>
   1aa4c:	movw	r0, #27127	; 0x69f7
   1aa50:	movt	r0, #7
   1aa54:	bl	12864 <gettext@plt>
   1aa58:	ldr	r1, [fp, #-8]
   1aa5c:	ldr	r3, [r1, #4]
   1aa60:	movw	r1, #0
   1aa64:	str	r0, [sp, #4]
   1aa68:	mov	r0, r1
   1aa6c:	ldr	r2, [sp, #4]
   1aa70:	bl	12780 <error@plt>
   1aa74:	movw	r0, #10
   1aa78:	str	r0, [fp, #-16]
   1aa7c:	b	1aa80 <__assert_fail@plt+0x7ec8>
   1aa80:	b	1aa84 <__assert_fail@plt+0x7ecc>
   1aa84:	ldr	r0, [fp, #-16]
   1aa88:	ldr	r1, [fp, #-12]
   1aa8c:	cmp	r0, r1
   1aa90:	bls	1aaa0 <__assert_fail@plt+0x7ee8>
   1aa94:	ldr	r0, [fp, #-16]
   1aa98:	str	r0, [fp, #-4]
   1aa9c:	b	1aaa8 <__assert_fail@plt+0x7ef0>
   1aaa0:	ldr	r0, [fp, #-12]
   1aaa4:	str	r0, [fp, #-4]
   1aaa8:	ldr	r0, [fp, #-4]
   1aaac:	mov	sp, fp
   1aab0:	pop	{fp, pc}
   1aab4:	push	{fp, lr}
   1aab8:	mov	fp, sp
   1aabc:	sub	sp, sp, #24
   1aac0:	str	r0, [fp, #-4]
   1aac4:	str	r1, [fp, #-8]
   1aac8:	ldr	r0, [fp, #-4]
   1aacc:	str	r0, [sp, #12]
   1aad0:	ldr	r0, [fp, #-8]
   1aad4:	str	r0, [sp, #8]
   1aad8:	ldr	r0, [sp, #12]
   1aadc:	ldr	r0, [r0]
   1aae0:	str	r0, [sp, #4]
   1aae4:	ldr	r0, [sp, #8]
   1aae8:	ldr	r0, [r0]
   1aaec:	str	r0, [sp]
   1aaf0:	add	r0, sp, #4
   1aaf4:	mov	r1, sp
   1aaf8:	mov	r2, #4
   1aafc:	bl	12624 <memcmp@plt>
   1ab00:	mov	sp, fp
   1ab04:	pop	{fp, pc}
   1ab08:	push	{fp, lr}
   1ab0c:	mov	fp, sp
   1ab10:	sub	sp, sp, #40	; 0x28
   1ab14:	str	r0, [fp, #-8]
   1ab18:	str	r1, [fp, #-12]
   1ab1c:	str	r2, [fp, #-16]
   1ab20:	str	r3, [sp, #20]
   1ab24:	ldr	r0, [fp, #-8]
   1ab28:	str	r0, [sp, #16]
   1ab2c:	movw	r0, #1
   1ab30:	str	r0, [sp, #12]
   1ab34:	ldr	r0, [sp, #12]
   1ab38:	ldr	r1, [fp, #-12]
   1ab3c:	cmp	r0, r1
   1ab40:	bcs	1ac34 <__assert_fail@plt+0x807c>
   1ab44:	ldr	r0, [sp, #20]
   1ab48:	ldr	r1, [sp, #16]
   1ab4c:	ldr	r2, [sp, #12]
   1ab50:	ldr	r3, [fp, #-16]
   1ab54:	mul	r2, r2, r3
   1ab58:	add	r1, r1, r2
   1ab5c:	ldr	r2, [sp, #16]
   1ab60:	ldr	r3, [sp, #12]
   1ab64:	sub	r3, r3, #1
   1ab68:	ldr	ip, [fp, #-16]
   1ab6c:	mul	r3, r3, ip
   1ab70:	add	r2, r2, r3
   1ab74:	str	r0, [sp, #4]
   1ab78:	mov	r0, r1
   1ab7c:	mov	r1, r2
   1ab80:	ldr	r2, [sp, #4]
   1ab84:	blx	r2
   1ab88:	str	r0, [sp, #8]
   1ab8c:	ldr	r0, [sp, #8]
   1ab90:	cmp	r0, #0
   1ab94:	bge	1aba8 <__assert_fail@plt+0x7ff0>
   1ab98:	movw	r0, #0
   1ab9c:	and	r0, r0, #1
   1aba0:	strb	r0, [fp, #-1]
   1aba4:	b	1ac40 <__assert_fail@plt+0x8088>
   1aba8:	ldr	r0, [sp, #20]
   1abac:	ldr	r1, [sp, #16]
   1abb0:	ldr	r2, [sp, #12]
   1abb4:	sub	r2, r2, #1
   1abb8:	ldr	r3, [fp, #-16]
   1abbc:	mul	r2, r2, r3
   1abc0:	add	r1, r1, r2
   1abc4:	ldr	r2, [sp, #16]
   1abc8:	ldr	r3, [sp, #12]
   1abcc:	ldr	ip, [fp, #-16]
   1abd0:	mul	r3, r3, ip
   1abd4:	add	r2, r2, r3
   1abd8:	str	r0, [sp]
   1abdc:	mov	r0, r1
   1abe0:	mov	r1, r2
   1abe4:	ldr	r2, [sp]
   1abe8:	blx	r2
   1abec:	str	r0, [sp, #8]
   1abf0:	ldr	r0, [sp, #8]
   1abf4:	cmp	r0, #0
   1abf8:	bgt	1ac00 <__assert_fail@plt+0x8048>
   1abfc:	b	1ac20 <__assert_fail@plt+0x8068>
   1ac00:	movw	r0, #27239	; 0x6a67
   1ac04:	movt	r0, #7
   1ac08:	movw	r1, #25362	; 0x6312
   1ac0c:	movt	r1, #7
   1ac10:	movw	r2, #1013	; 0x3f5
   1ac14:	movw	r3, #27251	; 0x6a73
   1ac18:	movt	r3, #7
   1ac1c:	bl	12bb8 <__assert_fail@plt>
   1ac20:	b	1ac24 <__assert_fail@plt+0x806c>
   1ac24:	ldr	r0, [sp, #12]
   1ac28:	add	r0, r0, #1
   1ac2c:	str	r0, [sp, #12]
   1ac30:	b	1ab34 <__assert_fail@plt+0x7f7c>
   1ac34:	movw	r0, #1
   1ac38:	and	r0, r0, #1
   1ac3c:	strb	r0, [fp, #-1]
   1ac40:	ldrb	r0, [fp, #-1]
   1ac44:	and	r0, r0, #1
   1ac48:	mov	sp, fp
   1ac4c:	pop	{fp, pc}
   1ac50:	sub	sp, sp, #4
   1ac54:	str	r0, [sp]
   1ac58:	ldr	r0, [sp]
   1ac5c:	movw	r1, #0
   1ac60:	str	r1, [r0, #4]
   1ac64:	ldr	r0, [sp]
   1ac68:	str	r1, [r0]
   1ac6c:	add	sp, sp, #4
   1ac70:	bx	lr
   1ac74:	push	{fp, lr}
   1ac78:	mov	fp, sp
   1ac7c:	sub	sp, sp, #24
   1ac80:	str	r0, [fp, #-4]
   1ac84:	str	r1, [fp, #-8]
   1ac88:	str	r2, [sp, #12]
   1ac8c:	mov	r0, #176	; 0xb0
   1ac90:	bl	4ce88 <__assert_fail@plt+0x3a2d0>
   1ac94:	str	r0, [sp, #8]
   1ac98:	ldr	r0, [sp, #8]
   1ac9c:	mov	r1, #3
   1aca0:	str	r1, [r0, #8]
   1aca4:	ldr	r0, [fp, #-8]
   1aca8:	ldr	r1, [sp, #8]
   1acac:	str	r0, [r1, #12]
   1acb0:	ldr	r0, [sp, #8]
   1acb4:	mov	r1, #0
   1acb8:	str	r1, [r0, #24]
   1acbc:	ldr	r0, [fp, #-8]
   1acc0:	cmp	r0, #1
   1acc4:	str	r0, [sp, #4]
   1acc8:	beq	1acf0 <__assert_fail@plt+0x8138>
   1accc:	b	1acd0 <__assert_fail@plt+0x8118>
   1acd0:	ldr	r0, [sp, #4]
   1acd4:	cmp	r0, #2
   1acd8:	beq	1ad20 <__assert_fail@plt+0x8168>
   1acdc:	b	1ace0 <__assert_fail@plt+0x8128>
   1ace0:	ldr	r0, [sp, #4]
   1ace4:	cmp	r0, #3
   1ace8:	beq	1ad58 <__assert_fail@plt+0x81a0>
   1acec:	b	1ad90 <__assert_fail@plt+0x81d8>
   1acf0:	ldr	r0, [sp, #8]
   1acf4:	movw	r1, #19156	; 0x4ad4
   1acf8:	movt	r1, #1
   1acfc:	str	r1, [r0]
   1ad00:	ldr	r0, [sp, #8]
   1ad04:	movw	r1, #26422	; 0x6736
   1ad08:	movt	r1, #7
   1ad0c:	str	r1, [r0, #4]
   1ad10:	ldr	r0, [sp, #8]
   1ad14:	vmov.f32	s0, #112	; 0x3f800000  1.0
   1ad18:	vstr	s0, [r0, #28]
   1ad1c:	b	1ad94 <__assert_fail@plt+0x81dc>
   1ad20:	ldr	r0, [sp, #8]
   1ad24:	movw	r1, #24428	; 0x5f6c
   1ad28:	movt	r1, #1
   1ad2c:	str	r1, [r0]
   1ad30:	ldr	r0, [sp, #8]
   1ad34:	movw	r1, #27449	; 0x6b39
   1ad38:	movt	r1, #7
   1ad3c:	str	r1, [r0, #4]
   1ad40:	ldr	r0, [fp, #-4]
   1ad44:	vldr	s0, [r0, #28]
   1ad48:	bl	18778 <__assert_fail@plt+0x5bc0>
   1ad4c:	ldr	r0, [sp, #8]
   1ad50:	vstr	s0, [r0, #28]
   1ad54:	b	1ad94 <__assert_fail@plt+0x81dc>
   1ad58:	ldr	r0, [sp, #8]
   1ad5c:	movw	r1, #18388	; 0x47d4
   1ad60:	movt	r1, #1
   1ad64:	str	r1, [r0]
   1ad68:	ldr	r0, [sp, #8]
   1ad6c:	movw	r1, #26205	; 0x665d
   1ad70:	movt	r1, #7
   1ad74:	str	r1, [r0, #4]
   1ad78:	ldr	r0, [fp, #-4]
   1ad7c:	vldr	s0, [r0, #28]
   1ad80:	bl	18778 <__assert_fail@plt+0x5bc0>
   1ad84:	ldr	r0, [sp, #8]
   1ad88:	vstr	s0, [r0, #28]
   1ad8c:	b	1ad94 <__assert_fail@plt+0x81dc>
   1ad90:	b	1ad94 <__assert_fail@plt+0x81dc>
   1ad94:	ldr	r0, [fp, #-4]
   1ad98:	ldr	r1, [sp, #8]
   1ad9c:	str	r0, [r1, #160]	; 0xa0
   1ada0:	ldr	r0, [sp, #8]
   1ada4:	ldr	r1, [sp, #12]
   1ada8:	str	r0, [r1]
   1adac:	ldr	r0, [sp, #8]
   1adb0:	mov	sp, fp
   1adb4:	pop	{fp, pc}
   1adb8:	sub	sp, sp, #8
   1adbc:	str	r0, [sp]
   1adc0:	ldr	r0, [sp]
   1adc4:	ldr	r0, [r0]
   1adc8:	movw	r1, #22992	; 0x59d0
   1adcc:	movt	r1, #1
   1add0:	cmp	r0, r1
   1add4:	beq	1ae20 <__assert_fail@plt+0x8268>
   1add8:	ldr	r0, [sp]
   1addc:	ldr	r0, [r0]
   1ade0:	movw	r1, #24560	; 0x5ff0
   1ade4:	movt	r1, #1
   1ade8:	cmp	r0, r1
   1adec:	beq	1ae20 <__assert_fail@plt+0x8268>
   1adf0:	ldr	r0, [sp]
   1adf4:	ldr	r0, [r0]
   1adf8:	movw	r1, #21908	; 0x5594
   1adfc:	movt	r1, #1
   1ae00:	cmp	r0, r1
   1ae04:	beq	1ae20 <__assert_fail@plt+0x8268>
   1ae08:	ldr	r0, [sp]
   1ae0c:	ldr	r0, [r0]
   1ae10:	movw	r1, #22372	; 0x5764
   1ae14:	movt	r1, #1
   1ae18:	cmp	r0, r1
   1ae1c:	bne	1ae30 <__assert_fail@plt+0x8278>
   1ae20:	movw	r0, #1
   1ae24:	and	r0, r0, #1
   1ae28:	strb	r0, [sp, #7]
   1ae2c:	b	1aee4 <__assert_fail@plt+0x832c>
   1ae30:	movw	r0, #57480	; 0xe088
   1ae34:	movt	r0, #8
   1ae38:	ldrh	r0, [r0, #68]	; 0x44
   1ae3c:	cmp	r0, #0
   1ae40:	ble	1aed8 <__assert_fail@plt+0x8320>
   1ae44:	ldr	r0, [sp]
   1ae48:	ldr	r0, [r0]
   1ae4c:	movw	r1, #18388	; 0x47d4
   1ae50:	movt	r1, #1
   1ae54:	cmp	r0, r1
   1ae58:	beq	1aea4 <__assert_fail@plt+0x82ec>
   1ae5c:	ldr	r0, [sp]
   1ae60:	ldr	r0, [r0]
   1ae64:	movw	r1, #23048	; 0x5a08
   1ae68:	movt	r1, #1
   1ae6c:	cmp	r0, r1
   1ae70:	beq	1aea4 <__assert_fail@plt+0x82ec>
   1ae74:	ldr	r0, [sp]
   1ae78:	ldr	r0, [r0]
   1ae7c:	movw	r1, #19156	; 0x4ad4
   1ae80:	movt	r1, #1
   1ae84:	cmp	r0, r1
   1ae88:	beq	1aea4 <__assert_fail@plt+0x82ec>
   1ae8c:	ldr	r0, [sp]
   1ae90:	ldr	r0, [r0]
   1ae94:	movw	r1, #24428	; 0x5f6c
   1ae98:	movt	r1, #1
   1ae9c:	cmp	r0, r1
   1aea0:	bne	1aeb4 <__assert_fail@plt+0x82fc>
   1aea4:	movw	r0, #0
   1aea8:	and	r0, r0, #1
   1aeac:	strb	r0, [sp, #7]
   1aeb0:	b	1aee4 <__assert_fail@plt+0x832c>
   1aeb4:	ldr	r0, [sp]
   1aeb8:	ldr	r0, [r0, #24]
   1aebc:	movw	r1, #0
   1aec0:	cmp	r1, r0
   1aec4:	movw	r0, #0
   1aec8:	moveq	r0, #1
   1aecc:	and	r0, r0, #1
   1aed0:	strb	r0, [sp, #7]
   1aed4:	b	1aee4 <__assert_fail@plt+0x832c>
   1aed8:	movw	r0, #0
   1aedc:	and	r0, r0, #1
   1aee0:	strb	r0, [sp, #7]
   1aee4:	ldrb	r0, [sp, #7]
   1aee8:	and	r0, r0, #1
   1aeec:	add	sp, sp, #8
   1aef0:	bx	lr
   1aef4:	sub	sp, sp, #16
   1aef8:	str	r0, [sp, #12]
   1aefc:	str	r1, [sp, #8]
   1af00:	str	r2, [sp, #4]
   1af04:	ldr	r0, [sp, #12]
   1af08:	str	r0, [sp]
   1af0c:	ldr	r0, [sp, #8]
   1af10:	ldr	r0, [r0, #156]	; 0x9c
   1af14:	ldr	r1, [sp, #4]
   1af18:	str	r0, [r1]
   1af1c:	ldr	r0, [sp]
   1af20:	ldr	r0, [r0]
   1af24:	ldr	r1, [sp, #8]
   1af28:	str	r0, [r1, #156]	; 0x9c
   1af2c:	ldr	r0, [sp, #8]
   1af30:	ldr	r1, [sp]
   1af34:	str	r0, [r1]
   1af38:	ldr	r0, [sp, #12]
   1af3c:	ldr	r0, [r0, #4]
   1af40:	movw	r1, #0
   1af44:	cmp	r1, r0
   1af48:	bne	1af5c <__assert_fail@plt+0x83a4>
   1af4c:	ldr	r0, [sp, #12]
   1af50:	ldr	r0, [r0]
   1af54:	ldr	r1, [sp, #12]
   1af58:	str	r0, [r1, #4]
   1af5c:	add	sp, sp, #16
   1af60:	bx	lr
   1af64:	push	{fp, lr}
   1af68:	mov	fp, sp
   1af6c:	sub	sp, sp, #40	; 0x28
   1af70:	ldr	ip, [fp, #8]
   1af74:	str	r0, [fp, #-4]
   1af78:	str	r1, [fp, #-8]
   1af7c:	str	r2, [fp, #-12]
   1af80:	str	r3, [fp, #-16]
   1af84:	movw	r0, #45124	; 0xb044
   1af88:	movt	r0, #1
   1af8c:	movw	r1, #55144	; 0xd768
   1af90:	movt	r1, #8
   1af94:	str	r0, [r1]
   1af98:	ldr	r0, [r1]
   1af9c:	ldr	r1, [fp, #-12]
   1afa0:	ldr	r2, [fp, #8]
   1afa4:	str	r0, [sp, #16]
   1afa8:	mov	r0, r1
   1afac:	mov	r1, r2
   1afb0:	ldr	r2, [sp, #16]
   1afb4:	str	ip, [sp, #12]
   1afb8:	blx	r2
   1afbc:	movw	r0, #55144	; 0xd768
   1afc0:	movt	r0, #8
   1afc4:	ldr	r0, [r0]
   1afc8:	ldr	r1, [fp, #-16]
   1afcc:	ldr	r2, [fp, #8]
   1afd0:	str	r0, [sp, #8]
   1afd4:	mov	r0, r1
   1afd8:	mov	r1, r2
   1afdc:	ldr	r2, [sp, #8]
   1afe0:	blx	r2
   1afe4:	movw	r0, #0
   1afe8:	str	r0, [sp, #20]
   1afec:	ldr	r0, [sp, #20]
   1aff0:	ldr	r1, [fp, #-8]
   1aff4:	cmp	r0, r1
   1aff8:	bge	1b03c <__assert_fail@plt+0x8484>
   1affc:	movw	r0, #55144	; 0xd768
   1b000:	movt	r0, #8
   1b004:	ldr	r0, [r0]
   1b008:	ldr	r1, [fp, #-4]
   1b00c:	ldr	r2, [sp, #20]
   1b010:	add	r1, r1, r2, lsl #3
   1b014:	ldr	r2, [fp, #8]
   1b018:	str	r0, [sp, #4]
   1b01c:	mov	r0, r1
   1b020:	mov	r1, r2
   1b024:	ldr	r2, [sp, #4]
   1b028:	blx	r2
   1b02c:	ldr	r0, [sp, #20]
   1b030:	add	r0, r0, #1
   1b034:	str	r0, [sp, #20]
   1b038:	b	1afec <__assert_fail@plt+0x8434>
   1b03c:	mov	sp, fp
   1b040:	pop	{fp, pc}
   1b044:	push	{fp, lr}
   1b048:	mov	fp, sp
   1b04c:	sub	sp, sp, #48	; 0x30
   1b050:	str	r0, [fp, #-4]
   1b054:	str	r1, [fp, #-8]
   1b058:	ldr	r0, [fp, #-4]
   1b05c:	ldr	r0, [r0]
   1b060:	movw	r1, #0
   1b064:	cmp	r1, r0
   1b068:	bne	1b070 <__assert_fail@plt+0x84b8>
   1b06c:	b	1b29c <__assert_fail@plt+0x86e4>
   1b070:	movw	r0, #57480	; 0xe088
   1b074:	movt	r0, #8
   1b078:	ldr	r0, [r0, #44]	; 0x2c
   1b07c:	and	r0, r0, #8
   1b080:	cmp	r0, #0
   1b084:	beq	1b0d0 <__assert_fail@plt+0x8518>
   1b088:	movw	r0, #55080	; 0xd728
   1b08c:	movt	r0, #8
   1b090:	ldr	r0, [r0]
   1b094:	movw	r1, #27452	; 0x6b3c
   1b098:	movt	r1, #7
   1b09c:	movw	r2, #27457	; 0x6b41
   1b0a0:	movt	r2, #7
   1b0a4:	bl	128c4 <fprintf@plt>
   1b0a8:	movw	r1, #55080	; 0xd728
   1b0ac:	movt	r1, #8
   1b0b0:	ldr	r1, [r1]
   1b0b4:	ldr	r2, [fp, #-4]
   1b0b8:	ldr	r2, [r2]
   1b0bc:	str	r0, [sp, #16]
   1b0c0:	mov	r0, r1
   1b0c4:	mov	r1, r2
   1b0c8:	movw	r2, #2
   1b0cc:	bl	195c4 <__assert_fail@plt+0x6a0c>
   1b0d0:	ldr	r0, [fp, #-4]
   1b0d4:	ldr	r0, [r0]
   1b0d8:	bl	18330 <__assert_fail@plt+0x5778>
   1b0dc:	sub	r0, fp, #16
   1b0e0:	vstr	s0, [sp, #12]
   1b0e4:	bl	1ac50 <__assert_fail@plt+0x8098>
   1b0e8:	ldr	r0, [fp, #-4]
   1b0ec:	ldr	r0, [r0]
   1b0f0:	movw	r1, #0
   1b0f4:	cmp	r0, r1
   1b0f8:	beq	1b21c <__assert_fail@plt+0x8664>
   1b0fc:	ldr	r0, [fp, #-4]
   1b100:	ldr	r0, [r0]
   1b104:	str	r0, [sp, #24]
   1b108:	ldr	r0, [fp, #-4]
   1b10c:	ldr	r0, [r0]
   1b110:	ldr	r0, [r0, #156]	; 0x9c
   1b114:	ldr	r1, [fp, #-4]
   1b118:	str	r0, [r1]
   1b11c:	ldr	r0, [sp, #24]
   1b120:	movw	r1, #0
   1b124:	str	r1, [r0, #156]	; 0x9c
   1b128:	ldr	r0, [fp, #-16]
   1b12c:	str	r0, [fp, #-20]	; 0xffffffec
   1b130:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b134:	movw	r1, #0
   1b138:	cmp	r0, r1
   1b13c:	beq	1b19c <__assert_fail@plt+0x85e4>
   1b140:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b144:	ldr	r0, [r0, #12]
   1b148:	movw	r1, #2
   1b14c:	cmp	r1, r0
   1b150:	movw	r0, #0
   1b154:	movne	r0, #1
   1b158:	and	r0, r0, #1
   1b15c:	strb	r0, [sp, #23]
   1b160:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b164:	ldr	r0, [r0, #160]	; 0xa0
   1b168:	ldr	r1, [sp, #24]
   1b16c:	ldr	r1, [r1, #160]	; 0xa0
   1b170:	ldrb	r2, [sp, #23]
   1b174:	and	r2, r2, #1
   1b178:	bl	1b2a4 <__assert_fail@plt+0x86ec>
   1b17c:	cmp	r0, #0
   1b180:	blt	1b188 <__assert_fail@plt+0x85d0>
   1b184:	b	1b19c <__assert_fail@plt+0x85e4>
   1b188:	b	1b18c <__assert_fail@plt+0x85d4>
   1b18c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b190:	ldr	r0, [r0, #156]	; 0x9c
   1b194:	str	r0, [fp, #-20]	; 0xffffffec
   1b198:	b	1b130 <__assert_fail@plt+0x8578>
   1b19c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b1a0:	movw	r1, #0
   1b1a4:	cmp	r0, r1
   1b1a8:	beq	1b1e8 <__assert_fail@plt+0x8630>
   1b1ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b1b0:	ldr	r0, [r0, #156]	; 0x9c
   1b1b4:	ldr	r1, [sp, #24]
   1b1b8:	str	r0, [r1, #156]	; 0x9c
   1b1bc:	ldr	r0, [sp, #24]
   1b1c0:	ldr	r0, [r0, #156]	; 0x9c
   1b1c4:	movw	r1, #0
   1b1c8:	cmp	r1, r0
   1b1cc:	bne	1b1d8 <__assert_fail@plt+0x8620>
   1b1d0:	ldr	r0, [sp, #24]
   1b1d4:	str	r0, [fp, #-12]
   1b1d8:	ldr	r0, [sp, #24]
   1b1dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b1e0:	str	r0, [r1, #156]	; 0x9c
   1b1e4:	b	1b218 <__assert_fail@plt+0x8660>
   1b1e8:	ldr	r0, [fp, #-16]
   1b1ec:	ldr	r1, [sp, #24]
   1b1f0:	str	r0, [r1, #156]	; 0x9c
   1b1f4:	ldr	r0, [sp, #24]
   1b1f8:	str	r0, [fp, #-16]
   1b1fc:	ldr	r0, [fp, #-12]
   1b200:	movw	r1, #0
   1b204:	cmp	r1, r0
   1b208:	bne	1b214 <__assert_fail@plt+0x865c>
   1b20c:	ldr	r0, [sp, #24]
   1b210:	str	r0, [fp, #-12]
   1b214:	b	1b218 <__assert_fail@plt+0x8660>
   1b218:	b	1b0e8 <__assert_fail@plt+0x8530>
   1b21c:	movw	r0, #57480	; 0xe088
   1b220:	movt	r0, #8
   1b224:	ldr	r0, [r0, #44]	; 0x2c
   1b228:	and	r0, r0, #8
   1b22c:	cmp	r0, #0
   1b230:	beq	1b278 <__assert_fail@plt+0x86c0>
   1b234:	movw	r0, #55080	; 0xd728
   1b238:	movt	r0, #8
   1b23c:	ldr	r0, [r0]
   1b240:	movw	r1, #27452	; 0x6b3c
   1b244:	movt	r1, #7
   1b248:	movw	r2, #27484	; 0x6b5c
   1b24c:	movt	r2, #7
   1b250:	bl	128c4 <fprintf@plt>
   1b254:	movw	r1, #55080	; 0xd728
   1b258:	movt	r1, #8
   1b25c:	ldr	r1, [r1]
   1b260:	ldr	r2, [fp, #-16]
   1b264:	str	r0, [sp, #8]
   1b268:	mov	r0, r1
   1b26c:	mov	r1, r2
   1b270:	movw	r2, #2
   1b274:	bl	195c4 <__assert_fail@plt+0x6a0c>
   1b278:	ldr	r0, [fp, #-16]
   1b27c:	bl	18330 <__assert_fail@plt+0x5778>
   1b280:	ldr	r0, [fp, #-16]
   1b284:	ldr	r1, [fp, #-12]
   1b288:	ldr	r2, [fp, #-8]
   1b28c:	vstr	s0, [sp, #4]
   1b290:	bl	1b3a4 <__assert_fail@plt+0x87ec>
   1b294:	ldr	r0, [fp, #-4]
   1b298:	bl	1ac50 <__assert_fail@plt+0x8098>
   1b29c:	mov	sp, fp
   1b2a0:	pop	{fp, pc}
   1b2a4:	sub	sp, sp, #16
   1b2a8:	str	r0, [sp, #8]
   1b2ac:	str	r1, [sp, #4]
   1b2b0:	and	r0, r2, #1
   1b2b4:	strb	r0, [sp, #3]
   1b2b8:	ldr	r0, [sp, #8]
   1b2bc:	ldr	r0, [r0, #24]
   1b2c0:	ldr	r1, [sp, #4]
   1b2c4:	ldr	r1, [r1, #24]
   1b2c8:	cmp	r0, r1
   1b2cc:	bne	1b36c <__assert_fail@plt+0x87b4>
   1b2d0:	ldr	r0, [sp, #8]
   1b2d4:	vldr	s0, [r0, #28]
   1b2d8:	ldr	r0, [sp, #4]
   1b2dc:	vldr	s2, [r0, #28]
   1b2e0:	vcmp.f32	s0, s2
   1b2e4:	vmrs	APSR_nzcv, fpscr
   1b2e8:	bne	1b2f8 <__assert_fail@plt+0x8740>
   1b2ec:	movw	r0, #0
   1b2f0:	str	r0, [sp, #12]
   1b2f4:	b	1b398 <__assert_fail@plt+0x87e0>
   1b2f8:	ldrb	r0, [sp, #3]
   1b2fc:	tst	r0, #1
   1b300:	beq	1b338 <__assert_fail@plt+0x8780>
   1b304:	ldr	r0, [sp, #8]
   1b308:	vldr	s0, [r0, #28]
   1b30c:	ldr	r0, [sp, #4]
   1b310:	vldr	s2, [r0, #28]
   1b314:	vcmpe.f32	s0, s2
   1b318:	vmrs	APSR_nzcv, fpscr
   1b31c:	movw	r0, #0
   1b320:	movmi	r0, #1
   1b324:	tst	r0, #1
   1b328:	mvn	r0, #0
   1b32c:	moveq	r0, #1
   1b330:	str	r0, [sp, #12]
   1b334:	b	1b398 <__assert_fail@plt+0x87e0>
   1b338:	ldr	r0, [sp, #8]
   1b33c:	vldr	s0, [r0, #28]
   1b340:	ldr	r0, [sp, #4]
   1b344:	vldr	s2, [r0, #28]
   1b348:	vcmpe.f32	s0, s2
   1b34c:	vmrs	APSR_nzcv, fpscr
   1b350:	movw	r0, #0
   1b354:	movmi	r0, #1
   1b358:	tst	r0, #1
   1b35c:	movw	r0, #1
   1b360:	mvneq	r0, #0
   1b364:	str	r0, [sp, #12]
   1b368:	b	1b398 <__assert_fail@plt+0x87e0>
   1b36c:	ldr	r0, [sp, #8]
   1b370:	ldr	r0, [r0, #24]
   1b374:	ldr	r1, [sp, #4]
   1b378:	ldr	r1, [r1, #24]
   1b37c:	cmp	r0, r1
   1b380:	movw	r0, #0
   1b384:	movcc	r0, #1
   1b388:	tst	r0, #1
   1b38c:	mvn	r0, #0
   1b390:	moveq	r0, #1
   1b394:	str	r0, [sp, #12]
   1b398:	ldr	r0, [sp, #12]
   1b39c:	add	sp, sp, #16
   1b3a0:	bx	lr
   1b3a4:	sub	sp, sp, #12
   1b3a8:	str	r0, [sp, #8]
   1b3ac:	str	r1, [sp, #4]
   1b3b0:	str	r2, [sp]
   1b3b4:	ldr	r0, [sp]
   1b3b8:	ldr	r0, [r0]
   1b3bc:	ldr	r1, [sp, #4]
   1b3c0:	str	r0, [r1, #156]	; 0x9c
   1b3c4:	ldr	r0, [sp, #8]
   1b3c8:	ldr	r1, [sp]
   1b3cc:	str	r0, [r1]
   1b3d0:	add	sp, sp, #12
   1b3d4:	bx	lr
   1b3d8:	push	{fp, lr}
   1b3dc:	mov	fp, sp
   1b3e0:	sub	sp, sp, #56	; 0x38
   1b3e4:	str	r0, [fp, #-8]
   1b3e8:	movw	r0, #0
   1b3ec:	str	r0, [fp, #-20]	; 0xffffffec
   1b3f0:	ldr	r0, [fp, #-8]
   1b3f4:	ldr	r0, [r0, #8]
   1b3f8:	movw	r1, #3
   1b3fc:	cmp	r1, r0
   1b400:	beq	1b410 <__assert_fail@plt+0x8858>
   1b404:	movw	r0, #27611	; 0x6bdb
   1b408:	movt	r0, #7
   1b40c:	str	r0, [fp, #-20]	; 0xffffffec
   1b410:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b414:	movw	r1, #0
   1b418:	cmp	r0, r1
   1b41c:	bne	1b458 <__assert_fail@plt+0x88a0>
   1b420:	ldr	r0, [fp, #-8]
   1b424:	ldr	r0, [r0, #156]	; 0x9c
   1b428:	movw	r1, #0
   1b42c:	cmp	r1, r0
   1b430:	beq	1b448 <__assert_fail@plt+0x8890>
   1b434:	ldr	r0, [fp, #-8]
   1b438:	ldr	r0, [r0, #160]	; 0xa0
   1b43c:	movw	r1, #0
   1b440:	cmp	r1, r0
   1b444:	bne	1b454 <__assert_fail@plt+0x889c>
   1b448:	movw	r0, #27634	; 0x6bf2
   1b44c:	movt	r0, #7
   1b450:	str	r0, [fp, #-20]	; 0xffffffec
   1b454:	b	1b458 <__assert_fail@plt+0x88a0>
   1b458:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b45c:	movw	r1, #0
   1b460:	cmp	r0, r1
   1b464:	bne	1b490 <__assert_fail@plt+0x88d8>
   1b468:	ldr	r0, [fp, #-8]
   1b46c:	ldr	r0, [r0, #156]	; 0x9c
   1b470:	ldr	r0, [r0, #160]	; 0xa0
   1b474:	movw	r1, #0
   1b478:	cmp	r1, r0
   1b47c:	bne	1b48c <__assert_fail@plt+0x88d4>
   1b480:	movw	r0, #27656	; 0x6c08
   1b484:	movt	r0, #7
   1b488:	str	r0, [fp, #-20]	; 0xffffffec
   1b48c:	b	1b490 <__assert_fail@plt+0x88d8>
   1b490:	ldr	r0, [fp, #-8]
   1b494:	add	r0, r0, #160	; 0xa0
   1b498:	str	r0, [sp, #28]
   1b49c:	ldr	r0, [fp, #-8]
   1b4a0:	ldr	r0, [r0, #156]	; 0x9c
   1b4a4:	add	r0, r0, #160	; 0xa0
   1b4a8:	str	r0, [fp, #-24]	; 0xffffffe8
   1b4ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b4b0:	movw	r1, #0
   1b4b4:	cmp	r0, r1
   1b4b8:	bne	1b4e0 <__assert_fail@plt+0x8928>
   1b4bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b4c0:	ldr	r0, [r0]
   1b4c4:	bl	1b7a8 <__assert_fail@plt+0x8bf0>
   1b4c8:	tst	r0, #1
   1b4cc:	beq	1b4dc <__assert_fail@plt+0x8924>
   1b4d0:	movw	r0, #27685	; 0x6c25
   1b4d4:	movt	r0, #7
   1b4d8:	str	r0, [fp, #-20]	; 0xffffffec
   1b4dc:	b	1b4e0 <__assert_fail@plt+0x8928>
   1b4e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b4e4:	movw	r1, #0
   1b4e8:	cmp	r0, r1
   1b4ec:	bne	1b514 <__assert_fail@plt+0x895c>
   1b4f0:	ldr	r0, [sp, #28]
   1b4f4:	ldr	r0, [r0]
   1b4f8:	bl	1b7a8 <__assert_fail@plt+0x8bf0>
   1b4fc:	tst	r0, #1
   1b500:	beq	1b510 <__assert_fail@plt+0x8958>
   1b504:	movw	r0, #27715	; 0x6c43
   1b508:	movt	r0, #7
   1b50c:	str	r0, [fp, #-20]	; 0xffffffec
   1b510:	b	1b514 <__assert_fail@plt+0x895c>
   1b514:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b518:	movw	r1, #0
   1b51c:	cmp	r0, r1
   1b520:	bne	1b564 <__assert_fail@plt+0x89ac>
   1b524:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b528:	ldr	r0, [r0]
   1b52c:	bl	1b838 <__assert_fail@plt+0x8c80>
   1b530:	str	r0, [fp, #-12]
   1b534:	ldr	r0, [sp, #28]
   1b538:	ldr	r0, [r0]
   1b53c:	bl	1b838 <__assert_fail@plt+0x8c80>
   1b540:	str	r0, [fp, #-16]
   1b544:	ldr	r0, [fp, #-12]
   1b548:	ldr	r1, [fp, #-16]
   1b54c:	cmp	r0, r1
   1b550:	bge	1b560 <__assert_fail@plt+0x89a8>
   1b554:	movw	r0, #27746	; 0x6c62
   1b558:	movt	r0, #7
   1b55c:	str	r0, [fp, #-20]	; 0xffffffec
   1b560:	b	1b564 <__assert_fail@plt+0x89ac>
   1b564:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b568:	movw	r1, #0
   1b56c:	cmp	r0, r1
   1b570:	bne	1b734 <__assert_fail@plt+0x8b7c>
   1b574:	ldr	r0, [fp, #-12]
   1b578:	ldr	r1, [fp, #-16]
   1b57c:	cmp	r0, r1
   1b580:	bne	1b6b0 <__assert_fail@plt+0x8af8>
   1b584:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b588:	ldr	r0, [r0]
   1b58c:	vldr	s0, [r0, #28]
   1b590:	vstr	s0, [sp, #20]
   1b594:	ldr	r0, [sp, #28]
   1b598:	ldr	r0, [r0]
   1b59c:	vldr	s0, [r0, #28]
   1b5a0:	vstr	s0, [sp, #16]
   1b5a4:	movw	r0, #57480	; 0xe088
   1b5a8:	movt	r0, #8
   1b5ac:	ldr	r0, [r0, #44]	; 0x2c
   1b5b0:	and	r0, r0, #8
   1b5b4:	cmp	r0, #0
   1b5b8:	beq	1b5ec <__assert_fail@plt+0x8a34>
   1b5bc:	movw	r0, #55080	; 0xd728
   1b5c0:	movt	r0, #8
   1b5c4:	ldr	r0, [r0]
   1b5c8:	vldr	s0, [sp, #20]
   1b5cc:	vcvt.f64.f32	d16, s0
   1b5d0:	vldr	s0, [sp, #16]
   1b5d4:	vcvt.f64.f32	d17, s0
   1b5d8:	movw	r1, #27762	; 0x6c72
   1b5dc:	movt	r1, #7
   1b5e0:	vmov	r2, r3, d16
   1b5e4:	vstr	d17, [sp]
   1b5e8:	bl	128c4 <fprintf@plt>
   1b5ec:	ldr	r0, [fp, #-8]
   1b5f0:	ldr	r0, [r0]
   1b5f4:	movw	r1, #24428	; 0x5f6c
   1b5f8:	movt	r1, #1
   1b5fc:	cmp	r0, r1
   1b600:	bne	1b640 <__assert_fail@plt+0x8a88>
   1b604:	vldr	s0, [sp, #16]
   1b608:	vldr	s2, [sp, #20]
   1b60c:	vcmpe.f32	s0, s2
   1b610:	vmrs	APSR_nzcv, fpscr
   1b614:	movw	r0, #0
   1b618:	movmi	r0, #1
   1b61c:	and	r0, r0, #1
   1b620:	strb	r0, [sp, #27]
   1b624:	ldrb	r0, [sp, #27]
   1b628:	tst	r0, #1
   1b62c:	bne	1b63c <__assert_fail@plt+0x8a84>
   1b630:	movw	r0, #27789	; 0x6c8d
   1b634:	movt	r0, #7
   1b638:	str	r0, [fp, #-20]	; 0xffffffec
   1b63c:	b	1b6ac <__assert_fail@plt+0x8af4>
   1b640:	ldr	r0, [fp, #-8]
   1b644:	ldr	r0, [r0]
   1b648:	movw	r1, #18388	; 0x47d4
   1b64c:	movt	r1, #1
   1b650:	cmp	r0, r1
   1b654:	bne	1b694 <__assert_fail@plt+0x8adc>
   1b658:	vldr	s0, [sp, #16]
   1b65c:	vldr	s2, [sp, #20]
   1b660:	vcmpe.f32	s0, s2
   1b664:	vmrs	APSR_nzcv, fpscr
   1b668:	movw	r0, #0
   1b66c:	movgt	r0, #1
   1b670:	and	r0, r0, #1
   1b674:	strb	r0, [sp, #27]
   1b678:	ldrb	r0, [sp, #27]
   1b67c:	tst	r0, #1
   1b680:	bne	1b690 <__assert_fail@plt+0x8ad8>
   1b684:	movw	r0, #27833	; 0x6cb9
   1b688:	movt	r0, #7
   1b68c:	str	r0, [fp, #-20]	; 0xffffffec
   1b690:	b	1b6a8 <__assert_fail@plt+0x8af0>
   1b694:	movw	r0, #0
   1b698:	strb	r0, [sp, #27]
   1b69c:	movw	r0, #27878	; 0x6ce6
   1b6a0:	movt	r0, #7
   1b6a4:	str	r0, [fp, #-20]	; 0xffffffec
   1b6a8:	b	1b6ac <__assert_fail@plt+0x8af4>
   1b6ac:	b	1b6b8 <__assert_fail@plt+0x8b00>
   1b6b0:	movw	r0, #1
   1b6b4:	strb	r0, [sp, #27]
   1b6b8:	ldrb	r0, [sp, #27]
   1b6bc:	tst	r0, #1
   1b6c0:	beq	1b730 <__assert_fail@plt+0x8b78>
   1b6c4:	movw	r0, #57480	; 0xe088
   1b6c8:	movt	r0, #8
   1b6cc:	ldr	r0, [r0, #44]	; 0x2c
   1b6d0:	and	r0, r0, #8
   1b6d4:	cmp	r0, #0
   1b6d8:	beq	1b718 <__assert_fail@plt+0x8b60>
   1b6dc:	movw	r0, #55080	; 0xd728
   1b6e0:	movt	r0, #8
   1b6e4:	ldr	r0, [r0]
   1b6e8:	movw	r1, #27896	; 0x6cf8
   1b6ec:	movt	r1, #7
   1b6f0:	bl	128c4 <fprintf@plt>
   1b6f4:	movw	r1, #55080	; 0xd728
   1b6f8:	movt	r1, #8
   1b6fc:	ldr	r1, [r1]
   1b700:	ldr	r2, [fp, #-8]
   1b704:	str	r0, [sp, #12]
   1b708:	mov	r0, r1
   1b70c:	mov	r1, r2
   1b710:	movw	r2, #0
   1b714:	bl	195c4 <__assert_fail@plt+0x6a0c>
   1b718:	ldr	r0, [fp, #-8]
   1b71c:	bl	1b8e4 <__assert_fail@plt+0x8d2c>
   1b720:	movw	r0, #1
   1b724:	and	r0, r0, #1
   1b728:	strb	r0, [fp, #-1]
   1b72c:	b	1b798 <__assert_fail@plt+0x8be0>
   1b730:	b	1b734 <__assert_fail@plt+0x8b7c>
   1b734:	movw	r0, #57480	; 0xe088
   1b738:	movt	r0, #8
   1b73c:	ldr	r0, [r0, #44]	; 0x2c
   1b740:	and	r0, r0, #8
   1b744:	cmp	r0, #0
   1b748:	beq	1b78c <__assert_fail@plt+0x8bd4>
   1b74c:	movw	r0, #55080	; 0xd728
   1b750:	movt	r0, #8
   1b754:	ldr	r0, [r0]
   1b758:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b75c:	movw	r1, #27921	; 0x6d11
   1b760:	movt	r1, #7
   1b764:	bl	128c4 <fprintf@plt>
   1b768:	movw	r1, #55080	; 0xd728
   1b76c:	movt	r1, #8
   1b770:	ldr	r1, [r1]
   1b774:	ldr	r2, [fp, #-8]
   1b778:	str	r0, [sp, #8]
   1b77c:	mov	r0, r1
   1b780:	mov	r1, r2
   1b784:	movw	r2, #0
   1b788:	bl	195c4 <__assert_fail@plt+0x6a0c>
   1b78c:	movw	r0, #0
   1b790:	and	r0, r0, #1
   1b794:	strb	r0, [fp, #-1]
   1b798:	ldrb	r0, [fp, #-1]
   1b79c:	and	r0, r0, #1
   1b7a0:	mov	sp, fp
   1b7a4:	pop	{fp, pc}
   1b7a8:	push	{fp, lr}
   1b7ac:	mov	fp, sp
   1b7b0:	sub	sp, sp, #16
   1b7b4:	str	r0, [sp, #8]
   1b7b8:	ldr	r0, [sp, #8]
   1b7bc:	movw	r1, #0
   1b7c0:	cmp	r0, r1
   1b7c4:	beq	1b81c <__assert_fail@plt+0x8c64>
   1b7c8:	ldr	r0, [sp, #8]
   1b7cc:	ldrb	r0, [r0, #16]
   1b7d0:	tst	r0, #1
   1b7d4:	movw	r0, #1
   1b7d8:	str	r0, [sp, #4]
   1b7dc:	bne	1b80c <__assert_fail@plt+0x8c54>
   1b7e0:	ldr	r0, [sp, #8]
   1b7e4:	ldr	r0, [r0, #156]	; 0x9c
   1b7e8:	bl	1b7a8 <__assert_fail@plt+0x8bf0>
   1b7ec:	tst	r0, #1
   1b7f0:	movw	r0, #1
   1b7f4:	str	r0, [sp, #4]
   1b7f8:	bne	1b80c <__assert_fail@plt+0x8c54>
   1b7fc:	ldr	r0, [sp, #8]
   1b800:	ldr	r0, [r0, #160]	; 0xa0
   1b804:	bl	1b7a8 <__assert_fail@plt+0x8bf0>
   1b808:	str	r0, [sp, #4]
   1b80c:	ldr	r0, [sp, #4]
   1b810:	and	r0, r0, #1
   1b814:	strb	r0, [fp, #-1]
   1b818:	b	1b828 <__assert_fail@plt+0x8c70>
   1b81c:	movw	r0, #0
   1b820:	and	r0, r0, #1
   1b824:	strb	r0, [fp, #-1]
   1b828:	ldrb	r0, [fp, #-1]
   1b82c:	and	r0, r0, #1
   1b830:	mov	sp, fp
   1b834:	pop	{fp, pc}
   1b838:	push	{fp, lr}
   1b83c:	mov	fp, sp
   1b840:	sub	sp, sp, #24
   1b844:	str	r0, [fp, #-8]
   1b848:	ldr	r0, [fp, #-8]
   1b84c:	movw	r1, #0
   1b850:	cmp	r0, r1
   1b854:	beq	1b8d0 <__assert_fail@plt+0x8d18>
   1b858:	ldr	r0, [fp, #-8]
   1b85c:	ldr	r0, [r0, #156]	; 0x9c
   1b860:	bl	1b838 <__assert_fail@plt+0x8c80>
   1b864:	str	r0, [sp, #8]
   1b868:	ldr	r0, [fp, #-8]
   1b86c:	ldr	r0, [r0, #160]	; 0xa0
   1b870:	bl	1b838 <__assert_fail@plt+0x8c80>
   1b874:	str	r0, [sp, #12]
   1b878:	ldr	r0, [sp, #8]
   1b87c:	ldr	r1, [sp, #12]
   1b880:	cmp	r0, r1
   1b884:	bls	1b894 <__assert_fail@plt+0x8cdc>
   1b888:	ldr	r0, [sp, #8]
   1b88c:	str	r0, [sp]
   1b890:	b	1b89c <__assert_fail@plt+0x8ce4>
   1b894:	ldr	r0, [sp, #12]
   1b898:	str	r0, [sp]
   1b89c:	ldr	r0, [sp]
   1b8a0:	str	r0, [sp, #4]
   1b8a4:	ldr	r0, [sp, #4]
   1b8a8:	ldr	r1, [fp, #-8]
   1b8ac:	ldr	r1, [r1, #24]
   1b8b0:	cmp	r0, r1
   1b8b4:	bcs	1b8c4 <__assert_fail@plt+0x8d0c>
   1b8b8:	ldr	r0, [fp, #-8]
   1b8bc:	ldr	r0, [r0, #24]
   1b8c0:	str	r0, [sp, #4]
   1b8c4:	ldr	r0, [sp, #4]
   1b8c8:	str	r0, [fp, #-4]
   1b8cc:	b	1b8d8 <__assert_fail@plt+0x8d20>
   1b8d0:	movw	r0, #0
   1b8d4:	str	r0, [fp, #-4]
   1b8d8:	ldr	r0, [fp, #-4]
   1b8dc:	mov	sp, fp
   1b8e0:	pop	{fp, pc}
   1b8e4:	sub	sp, sp, #8
   1b8e8:	str	r0, [sp, #4]
   1b8ec:	ldr	r0, [sp, #4]
   1b8f0:	ldr	r0, [r0, #156]	; 0x9c
   1b8f4:	ldr	r0, [r0, #160]	; 0xa0
   1b8f8:	str	r0, [sp]
   1b8fc:	ldr	r0, [sp, #4]
   1b900:	ldr	r0, [r0, #160]	; 0xa0
   1b904:	ldr	r1, [sp, #4]
   1b908:	ldr	r1, [r1, #156]	; 0x9c
   1b90c:	str	r0, [r1, #160]	; 0xa0
   1b910:	ldr	r0, [sp]
   1b914:	ldr	r1, [sp, #4]
   1b918:	str	r0, [r1, #160]	; 0xa0
   1b91c:	add	sp, sp, #8
   1b920:	bx	lr
   1b924:	push	{fp, lr}
   1b928:	mov	fp, sp
   1b92c:	sub	sp, sp, #16
   1b930:	str	r0, [fp, #-4]
   1b934:	str	r1, [sp, #8]
   1b938:	str	r2, [sp, #4]
   1b93c:	ldr	r0, [fp, #-4]
   1b940:	ldr	r1, [sp, #4]
   1b944:	bl	1a36c <__assert_fail@plt+0x77b4>
   1b948:	str	r0, [sp]
   1b94c:	ldr	r0, [sp, #8]
   1b950:	ldr	r1, [sp]
   1b954:	str	r0, [r1]
   1b958:	ldr	r0, [fp, #-4]
   1b95c:	ldr	r0, [r0, #4]
   1b960:	ldr	r1, [sp]
   1b964:	str	r0, [r1, #4]
   1b968:	ldr	r0, [sp]
   1b96c:	movw	r1, #0
   1b970:	str	r1, [r0, #40]	; 0x28
   1b974:	ldr	r0, [sp]
   1b978:	movw	r2, #1
   1b97c:	str	r2, [r0, #8]
   1b980:	ldr	r0, [sp]
   1b984:	str	r1, [r0, #12]
   1b988:	ldr	r0, [sp]
   1b98c:	mov	sp, fp
   1b990:	pop	{fp, pc}
   1b994:	push	{fp, lr}
   1b998:	mov	fp, sp
   1b99c:	sub	sp, sp, #8
   1b9a0:	str	r0, [sp, #4]
   1b9a4:	str	r1, [sp]
   1b9a8:	ldr	r0, [sp, #4]
   1b9ac:	ldr	r0, [r0, #12]
   1b9b0:	movw	r1, #0
   1b9b4:	cmp	r0, r1
   1b9b8:	beq	1b9c0 <__assert_fail@plt+0x8e08>
   1b9bc:	b	1b9e0 <__assert_fail@plt+0x8e28>
   1b9c0:	movw	r0, #28038	; 0x6d86
   1b9c4:	movt	r0, #7
   1b9c8:	movw	r1, #28063	; 0x6d9f
   1b9cc:	movt	r1, #7
   1b9d0:	movw	r2, #123	; 0x7b
   1b9d4:	movw	r3, #28070	; 0x6da6
   1b9d8:	movt	r3, #7
   1b9dc:	bl	12bb8 <__assert_fail@plt>
   1b9e0:	ldr	r0, [sp, #4]
   1b9e4:	ldr	r1, [sp, #4]
   1b9e8:	ldr	r1, [r1, #12]
   1b9ec:	ldr	r2, [sp]
   1b9f0:	bl	1b924 <__assert_fail@plt+0x8d6c>
   1b9f4:	mov	sp, fp
   1b9f8:	pop	{fp, pc}
   1b9fc:	push	{fp, lr}
   1ba00:	mov	fp, sp
   1ba04:	sub	sp, sp, #8
   1ba08:	str	r0, [sp, #4]
   1ba0c:	ldr	r0, [sp, #4]
   1ba10:	movw	r1, #0
   1ba14:	bl	1b994 <__assert_fail@plt+0x8ddc>
   1ba18:	mov	sp, fp
   1ba1c:	pop	{fp, pc}
   1ba20:	push	{fp, lr}
   1ba24:	mov	fp, sp
   1ba28:	sub	sp, sp, #72	; 0x48
   1ba2c:	str	r0, [fp, #-4]
   1ba30:	ldr	r0, [fp, #-4]
   1ba34:	cmp	r0, #0
   1ba38:	beq	1ba8c <__assert_fail@plt+0x8ed4>
   1ba3c:	movw	r0, #55080	; 0xd728
   1ba40:	movt	r0, #8
   1ba44:	ldr	r0, [r0]
   1ba48:	movw	r1, #28146	; 0x6df2
   1ba4c:	movt	r1, #7
   1ba50:	str	r0, [fp, #-8]
   1ba54:	mov	r0, r1
   1ba58:	bl	12864 <gettext@plt>
   1ba5c:	movw	r1, #57120	; 0xdf20
   1ba60:	movt	r1, #8
   1ba64:	ldr	r2, [r1]
   1ba68:	ldr	r1, [fp, #-8]
   1ba6c:	str	r0, [fp, #-12]
   1ba70:	mov	r0, r1
   1ba74:	ldr	r1, [fp, #-12]
   1ba78:	bl	128c4 <fprintf@plt>
   1ba7c:	ldr	r1, [fp, #-4]
   1ba80:	str	r0, [fp, #-16]
   1ba84:	mov	r0, r1
   1ba88:	bl	1284c <exit@plt>
   1ba8c:	movw	r0, #55092	; 0xd734
   1ba90:	movt	r0, #8
   1ba94:	ldr	r0, [r0]
   1ba98:	movw	r1, #28185	; 0x6e19
   1ba9c:	movt	r1, #7
   1baa0:	str	r0, [fp, #-20]	; 0xffffffec
   1baa4:	mov	r0, r1
   1baa8:	bl	12864 <gettext@plt>
   1baac:	movw	r1, #57120	; 0xdf20
   1bab0:	movt	r1, #8
   1bab4:	ldr	r2, [r1]
   1bab8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1babc:	str	r0, [fp, #-24]	; 0xffffffe8
   1bac0:	mov	r0, r1
   1bac4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bac8:	bl	128c4 <fprintf@plt>
   1bacc:	movw	r1, #28259	; 0x6e63
   1bad0:	movt	r1, #7
   1bad4:	str	r0, [fp, #-28]	; 0xffffffe4
   1bad8:	mov	r0, r1
   1badc:	bl	12864 <gettext@plt>
   1bae0:	movw	r1, #55092	; 0xd734
   1bae4:	movt	r1, #8
   1bae8:	ldr	r1, [r1]
   1baec:	bl	12b4c <fputs@plt>
   1baf0:	movw	r1, #28397	; 0x6eed
   1baf4:	movt	r1, #7
   1baf8:	str	r0, [fp, #-32]	; 0xffffffe0
   1bafc:	mov	r0, r1
   1bb00:	bl	12864 <gettext@plt>
   1bb04:	movw	r1, #55092	; 0xd734
   1bb08:	movt	r1, #8
   1bb0c:	ldr	r1, [r1]
   1bb10:	bl	12b4c <fputs@plt>
   1bb14:	movw	r1, #28605	; 0x6fbd
   1bb18:	movt	r1, #7
   1bb1c:	str	r0, [sp, #36]	; 0x24
   1bb20:	mov	r0, r1
   1bb24:	bl	12864 <gettext@plt>
   1bb28:	movw	r1, #55092	; 0xd734
   1bb2c:	movt	r1, #8
   1bb30:	ldr	r1, [r1]
   1bb34:	bl	12b4c <fputs@plt>
   1bb38:	movw	r1, #28690	; 0x7012
   1bb3c:	movt	r1, #7
   1bb40:	str	r0, [sp, #32]
   1bb44:	mov	r0, r1
   1bb48:	bl	12864 <gettext@plt>
   1bb4c:	movw	r1, #55092	; 0xd734
   1bb50:	movt	r1, #8
   1bb54:	ldr	r1, [r1]
   1bb58:	bl	12b4c <fputs@plt>
   1bb5c:	movw	r1, #28895	; 0x70df
   1bb60:	movt	r1, #7
   1bb64:	str	r0, [sp, #28]
   1bb68:	mov	r0, r1
   1bb6c:	bl	12864 <gettext@plt>
   1bb70:	movw	r1, #55092	; 0xd734
   1bb74:	movt	r1, #8
   1bb78:	ldr	r1, [r1]
   1bb7c:	bl	12b4c <fputs@plt>
   1bb80:	movw	r1, #29436	; 0x72fc
   1bb84:	movt	r1, #7
   1bb88:	str	r0, [sp, #24]
   1bb8c:	mov	r0, r1
   1bb90:	bl	12864 <gettext@plt>
   1bb94:	movw	r1, #55092	; 0xd734
   1bb98:	movt	r1, #8
   1bb9c:	ldr	r1, [r1]
   1bba0:	bl	12b4c <fputs@plt>
   1bba4:	movw	r1, #29692	; 0x73fc
   1bba8:	movt	r1, #7
   1bbac:	str	r0, [sp, #20]
   1bbb0:	mov	r0, r1
   1bbb4:	bl	12864 <gettext@plt>
   1bbb8:	movw	r1, #55092	; 0xd734
   1bbbc:	movt	r1, #8
   1bbc0:	ldr	r1, [r1]
   1bbc4:	bl	12b4c <fputs@plt>
   1bbc8:	movw	r1, #29716	; 0x7414
   1bbcc:	movt	r1, #7
   1bbd0:	str	r0, [sp, #16]
   1bbd4:	mov	r0, r1
   1bbd8:	bl	12864 <gettext@plt>
   1bbdc:	movw	r1, #55092	; 0xd734
   1bbe0:	movt	r1, #8
   1bbe4:	ldr	r1, [r1]
   1bbe8:	bl	12b4c <fputs@plt>
   1bbec:	movw	r1, #29775	; 0x744f
   1bbf0:	movt	r1, #7
   1bbf4:	str	r0, [sp, #12]
   1bbf8:	mov	r0, r1
   1bbfc:	bl	12864 <gettext@plt>
   1bc00:	movw	r1, #55092	; 0xd734
   1bc04:	movt	r1, #8
   1bc08:	ldr	r1, [r1]
   1bc0c:	bl	12b4c <fputs@plt>
   1bc10:	movw	r1, #0
   1bc14:	str	r0, [sp, #8]
   1bc18:	mov	r0, r1
   1bc1c:	bl	1bc74 <__assert_fail@plt+0x90bc>
   1bc20:	movw	r0, #29844	; 0x7494
   1bc24:	movt	r0, #7
   1bc28:	bl	12864 <gettext@plt>
   1bc2c:	movw	r1, #55092	; 0xd734
   1bc30:	movt	r1, #8
   1bc34:	ldr	r1, [r1]
   1bc38:	bl	12b4c <fputs@plt>
   1bc3c:	movw	r1, #55092	; 0xd734
   1bc40:	movt	r1, #8
   1bc44:	ldr	r1, [r1]
   1bc48:	movw	r2, #57120	; 0xdf20
   1bc4c:	movt	r2, #8
   1bc50:	ldr	r2, [r2]
   1bc54:	str	r0, [sp, #4]
   1bc58:	mov	r0, r1
   1bc5c:	mov	r1, r2
   1bc60:	bl	2b810 <__assert_fail@plt+0x18c58>
   1bc64:	ldr	r1, [fp, #-4]
   1bc68:	str	r0, [sp]
   1bc6c:	mov	r0, r1
   1bc70:	bl	1284c <exit@plt>
   1bc74:	push	{fp, lr}
   1bc78:	mov	fp, sp
   1bc7c:	sub	sp, sp, #16
   1bc80:	str	r0, [fp, #-4]
   1bc84:	movw	r0, #30490	; 0x771a
   1bc88:	movt	r0, #7
   1bc8c:	bl	12864 <gettext@plt>
   1bc90:	movw	r1, #55092	; 0xd734
   1bc94:	movt	r1, #8
   1bc98:	ldr	r1, [r1]
   1bc9c:	bl	12b4c <fputs@plt>
   1bca0:	ldr	r1, [fp, #-4]
   1bca4:	cmp	r1, #0
   1bca8:	beq	1bd24 <__assert_fail@plt+0x916c>
   1bcac:	movw	r0, #0
   1bcb0:	str	r0, [sp, #8]
   1bcb4:	ldr	r0, [sp, #8]
   1bcb8:	cmp	r0, #9
   1bcbc:	bcs	1bd20 <__assert_fail@plt+0x9168>
   1bcc0:	movw	r0, #55092	; 0xd734
   1bcc4:	movt	r0, #8
   1bcc8:	ldr	r0, [r0]
   1bccc:	ldr	r1, [sp, #8]
   1bcd0:	movw	r2, #12
   1bcd4:	mul	r1, r1, r2
   1bcd8:	movw	r3, #54608	; 0xd550
   1bcdc:	movt	r3, #8
   1bce0:	add	r1, r3, r1
   1bce4:	ldr	r1, [r1]
   1bce8:	ldr	ip, [sp, #8]
   1bcec:	mul	r2, ip, r2
   1bcf0:	add	r2, r3, r2
   1bcf4:	ldr	r3, [r2, #8]
   1bcf8:	movw	r2, #30515	; 0x7733
   1bcfc:	movt	r2, #7
   1bd00:	str	r1, [sp, #4]
   1bd04:	mov	r1, r2
   1bd08:	ldr	r2, [sp, #4]
   1bd0c:	bl	128c4 <fprintf@plt>
   1bd10:	ldr	r0, [sp, #8]
   1bd14:	add	r0, r0, #1
   1bd18:	str	r0, [sp, #8]
   1bd1c:	b	1bcb4 <__assert_fail@plt+0x90fc>
   1bd20:	b	1bdb4 <__assert_fail@plt+0x91fc>
   1bd24:	movw	r0, #0
   1bd28:	str	r0, [sp, #8]
   1bd2c:	ldr	r0, [sp, #8]
   1bd30:	cmp	r0, #9
   1bd34:	bcs	1bdb0 <__assert_fail@plt+0x91f8>
   1bd38:	movw	r0, #55092	; 0xd734
   1bd3c:	movt	r0, #8
   1bd40:	ldr	r0, [r0]
   1bd44:	ldr	r1, [sp, #8]
   1bd48:	cmp	r1, #0
   1bd4c:	movw	r1, #0
   1bd50:	movhi	r1, #1
   1bd54:	tst	r1, #1
   1bd58:	movw	r1, #29909	; 0x74d5
   1bd5c:	movt	r1, #7
   1bd60:	movw	r2, #30525	; 0x773d
   1bd64:	movt	r2, #7
   1bd68:	movne	r1, r2
   1bd6c:	ldr	r2, [sp, #8]
   1bd70:	movw	r3, #12
   1bd74:	mul	r2, r2, r3
   1bd78:	movw	r3, #54608	; 0xd550
   1bd7c:	movt	r3, #8
   1bd80:	add	r2, r3, r2
   1bd84:	ldr	r3, [r2]
   1bd88:	movw	r2, #24245	; 0x5eb5
   1bd8c:	movt	r2, #7
   1bd90:	str	r1, [sp]
   1bd94:	mov	r1, r2
   1bd98:	ldr	r2, [sp]
   1bd9c:	bl	128c4 <fprintf@plt>
   1bda0:	ldr	r0, [sp, #8]
   1bda4:	add	r0, r0, #1
   1bda8:	str	r0, [sp, #8]
   1bdac:	b	1bd2c <__assert_fail@plt+0x9174>
   1bdb0:	b	1bdb4 <__assert_fail@plt+0x91fc>
   1bdb4:	mov	sp, fp
   1bdb8:	pop	{fp, pc}
   1bdbc:	sub	sp, sp, #4
   1bdc0:	str	r0, [sp]
   1bdc4:	add	sp, sp, #4
   1bdc8:	bx	lr
   1bdcc:	push	{fp, lr}
   1bdd0:	mov	fp, sp
   1bdd4:	sub	sp, sp, #32
   1bdd8:	str	r0, [fp, #-8]
   1bddc:	str	r1, [fp, #-12]
   1bde0:	str	r2, [sp, #16]
   1bde4:	movw	r0, #57436	; 0xe05c
   1bde8:	movt	r0, #8
   1bdec:	ldrb	r0, [r0, #4]
   1bdf0:	tst	r0, #1
   1bdf4:	bne	1bee4 <__assert_fail@plt+0x932c>
   1bdf8:	ldr	r0, [sp, #16]
   1bdfc:	bl	1bdbc <__assert_fail@plt+0x9204>
   1be00:	movw	r0, #57480	; 0xe088
   1be04:	movt	r0, #8
   1be08:	ldr	r0, [r0, #52]	; 0x34
   1be0c:	ldr	r1, [fp, #-12]
   1be10:	ldr	r2, [sp, #16]
   1be14:	str	r0, [sp, #12]
   1be18:	mov	r0, r1
   1be1c:	mov	r1, r2
   1be20:	ldr	r2, [sp, #12]
   1be24:	blx	r2
   1be28:	movw	r1, #0
   1be2c:	cmp	r1, r0
   1be30:	bne	1bea0 <__assert_fail@plt+0x92e8>
   1be34:	ldr	r0, [sp, #16]
   1be38:	ldr	r0, [r0, #16]
   1be3c:	movw	r1, #0
   1be40:	cmp	r1, r0
   1be44:	bne	1be9c <__assert_fail@plt+0x92e4>
   1be48:	movw	r0, #23192	; 0x5a98
   1be4c:	movt	r0, #7
   1be50:	bl	12864 <gettext@plt>
   1be54:	movw	r1, #57480	; 0xe088
   1be58:	movt	r1, #8
   1be5c:	ldr	r1, [r1, #72]	; 0x48
   1be60:	ldr	r2, [fp, #-12]
   1be64:	movw	r3, #0
   1be68:	str	r0, [sp, #8]
   1be6c:	mov	r0, r3
   1be70:	bl	487d0 <__assert_fail@plt+0x35c18>
   1be74:	movw	r1, #0
   1be78:	str	r0, [sp, #4]
   1be7c:	mov	r0, r1
   1be80:	ldr	r2, [sp, #8]
   1be84:	ldr	r3, [sp, #4]
   1be88:	bl	12780 <error@plt>
   1be8c:	movw	r0, #57436	; 0xe05c
   1be90:	movt	r0, #8
   1be94:	movw	r1, #1
   1be98:	str	r1, [r0, #28]
   1be9c:	b	1bee0 <__assert_fail@plt+0x9328>
   1bea0:	movw	r0, #57480	; 0xe088
   1bea4:	movt	r0, #8
   1bea8:	ldrb	r0, [r0, #14]
   1beac:	tst	r0, #1
   1beb0:	beq	1bec4 <__assert_fail@plt+0x930c>
   1beb4:	bl	128d0 <__errno_location@plt>
   1beb8:	ldr	r0, [r0]
   1bebc:	cmp	r0, #2
   1bec0:	beq	1bed4 <__assert_fail@plt+0x931c>
   1bec4:	bl	128d0 <__errno_location@plt>
   1bec8:	ldr	r0, [r0]
   1becc:	ldr	r1, [fp, #-8]
   1bed0:	bl	1bf18 <__assert_fail@plt+0x9360>
   1bed4:	mvn	r0, #0
   1bed8:	str	r0, [fp, #-4]
   1bedc:	b	1bf0c <__assert_fail@plt+0x9354>
   1bee0:	b	1bee4 <__assert_fail@plt+0x932c>
   1bee4:	movw	r0, #1
   1bee8:	movw	r1, #57436	; 0xe05c
   1beec:	movt	r1, #8
   1bef0:	strb	r0, [r1, #4]
   1bef4:	strb	r0, [r1, #5]
   1bef8:	ldr	r0, [sp, #16]
   1befc:	ldr	r0, [r0, #16]
   1bf00:	str	r0, [r1, #8]
   1bf04:	movw	r0, #0
   1bf08:	str	r0, [fp, #-4]
   1bf0c:	ldr	r0, [fp, #-4]
   1bf10:	mov	sp, fp
   1bf14:	pop	{fp, pc}
   1bf18:	push	{fp, lr}
   1bf1c:	mov	fp, sp
   1bf20:	sub	sp, sp, #8
   1bf24:	str	r0, [sp, #4]
   1bf28:	str	r1, [sp]
   1bf2c:	ldr	r1, [sp, #4]
   1bf30:	ldr	r3, [sp]
   1bf34:	movw	r0, #0
   1bf38:	movw	r2, #1
   1bf3c:	and	r2, r2, #1
   1bf40:	bl	1d9c8 <__assert_fail@plt+0xae10>
   1bf44:	mov	sp, fp
   1bf48:	pop	{fp, pc}
   1bf4c:	push	{r4, r5, fp, lr}
   1bf50:	add	fp, sp, #8
   1bf54:	sub	sp, sp, #408	; 0x198
   1bf58:	add	r0, sp, #16
   1bf5c:	bl	12630 <uname@plt>
   1bf60:	movw	r1, #0
   1bf64:	cmp	r1, r0
   1bf68:	bne	1c024 <__assert_fail@plt+0x946c>
   1bf6c:	movw	r0, #11000	; 0x2af8
   1bf70:	movt	r0, #1
   1bf74:	str	r0, [sp, #8]
   1bf78:	ldr	r0, [sp, #8]
   1bf7c:	add	r1, sp, #16
   1bf80:	add	r1, r1, #130	; 0x82
   1bf84:	str	r0, [sp, #4]
   1bf88:	mov	r0, r1
   1bf8c:	ldr	r1, [sp, #4]
   1bf90:	blx	r1
   1bf94:	add	r1, sp, #16
   1bf98:	vcvt.f32.f64	s2, d0
   1bf9c:	vstr	s2, [sp, #12]
   1bfa0:	movw	r0, #29910	; 0x74d6
   1bfa4:	movt	r0, #7
   1bfa8:	bl	124c8 <strcmp@plt>
   1bfac:	movw	r1, #0
   1bfb0:	cmp	r1, r0
   1bfb4:	bne	1bfdc <__assert_fail@plt+0x9424>
   1bfb8:	vldr	s0, [pc, #132]	; 1c044 <__assert_fail@plt+0x948c>
   1bfbc:	vldr	s2, [sp, #12]
   1bfc0:	vcmpe.f32	s2, s0
   1bfc4:	vmrs	APSR_nzcv, fpscr
   1bfc8:	movw	r0, #0
   1bfcc:	movge	r0, #1
   1bfd0:	and	r0, r0, #1
   1bfd4:	strb	r0, [fp, #-9]
   1bfd8:	b	1c030 <__assert_fail@plt+0x9478>
   1bfdc:	add	r1, sp, #16
   1bfe0:	movw	r0, #29916	; 0x74dc
   1bfe4:	movt	r0, #7
   1bfe8:	bl	124c8 <strcmp@plt>
   1bfec:	movw	r1, #0
   1bff0:	cmp	r1, r0
   1bff4:	bne	1c01c <__assert_fail@plt+0x9464>
   1bff8:	vldr	s0, [pc, #64]	; 1c040 <__assert_fail@plt+0x9488>
   1bffc:	vldr	s2, [sp, #12]
   1c000:	vcmpe.f32	s2, s0
   1c004:	vmrs	APSR_nzcv, fpscr
   1c008:	movw	r0, #0
   1c00c:	movge	r0, #1
   1c010:	and	r0, r0, #1
   1c014:	strb	r0, [fp, #-9]
   1c018:	b	1c030 <__assert_fail@plt+0x9478>
   1c01c:	b	1c020 <__assert_fail@plt+0x9468>
   1c020:	b	1c024 <__assert_fail@plt+0x946c>
   1c024:	movw	r0, #1
   1c028:	and	r0, r0, #1
   1c02c:	strb	r0, [fp, #-9]
   1c030:	ldrb	r0, [fp, #-9]
   1c034:	and	r0, r0, #1
   1c038:	sub	sp, fp, #8
   1c03c:	pop	{r4, r5, fp, pc}
   1c040:	submi	r6, r6, r6, ror #12
   1c044:	andmi	ip, ip, sp, asr #25
   1c048:	push	{fp, lr}
   1c04c:	mov	fp, sp
   1c050:	movw	r0, #57436	; 0xe05c
   1c054:	movt	r0, #8
   1c058:	ldrb	r0, [r0, #32]
   1c05c:	tst	r0, #1
   1c060:	beq	1c07c <__assert_fail@plt+0x94c4>
   1c064:	bl	18320 <__assert_fail@plt+0x5768>
   1c068:	bl	1c080 <__assert_fail@plt+0x94c8>
   1c06c:	movw	r0, #57436	; 0xe05c
   1c070:	movt	r0, #8
   1c074:	movw	r1, #0
   1c078:	strb	r1, [r0, #32]
   1c07c:	pop	{fp, pc}
   1c080:	push	{fp, lr}
   1c084:	mov	fp, sp
   1c088:	sub	sp, sp, #8
   1c08c:	str	r0, [sp, #4]
   1c090:	ldr	r0, [sp, #4]
   1c094:	movw	r1, #0
   1c098:	cmp	r1, r0
   1c09c:	bne	1c0a4 <__assert_fail@plt+0x94ec>
   1c0a0:	b	1c160 <__assert_fail@plt+0x95a8>
   1c0a4:	movw	r0, #57436	; 0xe05c
   1c0a8:	movt	r0, #8
   1c0ac:	ldrb	r0, [r0, #32]
   1c0b0:	tst	r0, #1
   1c0b4:	beq	1c0bc <__assert_fail@plt+0x9504>
   1c0b8:	b	1c0dc <__assert_fail@plt+0x9524>
   1c0bc:	movw	r0, #30963	; 0x78f3
   1c0c0:	movt	r0, #7
   1c0c4:	movw	r1, #28063	; 0x6d9f
   1c0c8:	movt	r1, #7
   1c0cc:	movw	r2, #396	; 0x18c
   1c0d0:	movw	r3, #30990	; 0x790e
   1c0d4:	movt	r3, #7
   1c0d8:	bl	12bb8 <__assert_fail@plt>
   1c0dc:	ldr	r0, [sp, #4]
   1c0e0:	ldr	r0, [r0, #156]	; 0x9c
   1c0e4:	bl	1c080 <__assert_fail@plt+0x94c8>
   1c0e8:	ldr	r0, [sp, #4]
   1c0ec:	ldr	r0, [r0]
   1c0f0:	movw	r1, #20740	; 0x5104
   1c0f4:	movt	r1, #1
   1c0f8:	cmp	r0, r1
   1c0fc:	beq	1c118 <__assert_fail@plt+0x9560>
   1c100:	ldr	r0, [sp, #4]
   1c104:	ldr	r0, [r0]
   1c108:	movw	r1, #24280	; 0x5ed8
   1c10c:	movt	r1, #1
   1c110:	cmp	r0, r1
   1c114:	bne	1c154 <__assert_fail@plt+0x959c>
   1c118:	ldr	r0, [sp, #4]
   1c11c:	ldrb	r0, [r0, #40]	; 0x28
   1c120:	tst	r0, #1
   1c124:	beq	1c150 <__assert_fail@plt+0x9598>
   1c128:	ldr	r0, [sp, #4]
   1c12c:	add	r0, r0, #40	; 0x28
   1c130:	str	r0, [sp]
   1c134:	ldr	r0, [sp]
   1c138:	ldr	r0, [r0, #76]	; 0x4c
   1c13c:	cmp	r0, #0
   1c140:	beq	1c14c <__assert_fail@plt+0x9594>
   1c144:	ldr	r0, [sp]
   1c148:	bl	1daf0 <__assert_fail@plt+0xaf38>
   1c14c:	b	1c150 <__assert_fail@plt+0x9598>
   1c150:	b	1c154 <__assert_fail@plt+0x959c>
   1c154:	ldr	r0, [sp, #4]
   1c158:	ldr	r0, [r0, #160]	; 0xa0
   1c15c:	bl	1c080 <__assert_fail@plt+0x94c8>
   1c160:	mov	sp, fp
   1c164:	pop	{fp, pc}
   1c168:	push	{fp, lr}
   1c16c:	mov	fp, sp
   1c170:	sub	sp, sp, #8
   1c174:	str	r0, [sp, #4]
   1c178:	ldr	r0, [sp, #4]
   1c17c:	movw	r1, #0
   1c180:	cmp	r1, r0
   1c184:	bne	1c18c <__assert_fail@plt+0x95d4>
   1c188:	b	1c200 <__assert_fail@plt+0x9648>
   1c18c:	ldr	r0, [sp, #4]
   1c190:	ldr	r0, [r0, #156]	; 0x9c
   1c194:	bl	1c168 <__assert_fail@plt+0x95b0>
   1c198:	ldr	r0, [sp, #4]
   1c19c:	ldr	r0, [r0]
   1c1a0:	movw	r1, #20688	; 0x50d0
   1c1a4:	movt	r1, #1
   1c1a8:	cmp	r0, r1
   1c1ac:	bne	1c1f4 <__assert_fail@plt+0x963c>
   1c1b0:	ldr	r0, [sp, #4]
   1c1b4:	ldrb	r0, [r0, #40]	; 0x28
   1c1b8:	tst	r0, #1
   1c1bc:	beq	1c1f4 <__assert_fail@plt+0x963c>
   1c1c0:	ldr	r0, [sp, #4]
   1c1c4:	add	r0, r0, #40	; 0x28
   1c1c8:	str	r0, [sp]
   1c1cc:	ldr	r0, [sp]
   1c1d0:	ldr	r0, [r0, #76]	; 0x4c
   1c1d4:	cmp	r0, #0
   1c1d8:	beq	1c1f0 <__assert_fail@plt+0x9638>
   1c1dc:	ldr	r0, [sp]
   1c1e0:	add	r0, r0, #4
   1c1e4:	ldr	r1, [sp]
   1c1e8:	add	r1, r1, #48	; 0x30
   1c1ec:	bl	281e8 <__assert_fail@plt+0x15630>
   1c1f0:	b	1c1f4 <__assert_fail@plt+0x963c>
   1c1f4:	ldr	r0, [sp, #4]
   1c1f8:	ldr	r0, [r0, #160]	; 0xa0
   1c1fc:	bl	1c168 <__assert_fail@plt+0x95b0>
   1c200:	mov	sp, fp
   1c204:	pop	{fp, pc}
   1c208:	push	{fp, lr}
   1c20c:	mov	fp, sp
   1c210:	sub	sp, sp, #32
   1c214:	movw	r0, #8
   1c218:	bl	4a2f0 <__assert_fail@plt+0x37738>
   1c21c:	movw	r1, #55112	; 0xd748
   1c220:	movt	r1, #8
   1c224:	str	r0, [r1]
   1c228:	ldr	r0, [r1]
   1c22c:	bl	48d74 <__assert_fail@plt+0x361bc>
   1c230:	movw	r1, #0
   1c234:	cmp	r1, r0
   1c238:	beq	1c340 <__assert_fail@plt+0x9788>
   1c23c:	bl	128d0 <__errno_location@plt>
   1c240:	ldr	r1, [r0]
   1c244:	movw	r0, #29924	; 0x74e4
   1c248:	movt	r0, #7
   1c24c:	str	r1, [fp, #-4]
   1c250:	bl	12864 <gettext@plt>
   1c254:	movw	r1, #55112	; 0xd748
   1c258:	movt	r1, #8
   1c25c:	ldr	r1, [r1]
   1c260:	ldr	r1, [r1]
   1c264:	cmp	r1, #0
   1c268:	movw	r1, #0
   1c26c:	str	r0, [fp, #-8]
   1c270:	str	r1, [fp, #-12]
   1c274:	bge	1c29c <__assert_fail@plt+0x96e4>
   1c278:	movw	r0, #55112	; 0xd748
   1c27c:	movt	r0, #8
   1c280:	ldr	r0, [r0]
   1c284:	ldr	r0, [r0, #4]
   1c288:	movw	r1, #0
   1c28c:	cmp	r0, r1
   1c290:	movw	r0, #0
   1c294:	movne	r0, #1
   1c298:	str	r0, [fp, #-12]
   1c29c:	ldr	r0, [fp, #-12]
   1c2a0:	tst	r0, #1
   1c2a4:	movw	r0, #29909	; 0x74d5
   1c2a8:	movt	r0, #7
   1c2ac:	movw	r1, #37345	; 0x91e1
   1c2b0:	movt	r1, #7
   1c2b4:	movne	r0, r1
   1c2b8:	movw	r1, #55112	; 0xd748
   1c2bc:	movt	r1, #8
   1c2c0:	ldr	r1, [r1]
   1c2c4:	ldr	r1, [r1]
   1c2c8:	cmp	r1, #0
   1c2cc:	str	r0, [sp, #16]
   1c2d0:	bge	1c308 <__assert_fail@plt+0x9750>
   1c2d4:	movw	r0, #55112	; 0xd748
   1c2d8:	movt	r0, #8
   1c2dc:	ldr	r0, [r0]
   1c2e0:	ldr	r0, [r0, #4]
   1c2e4:	movw	r1, #0
   1c2e8:	cmp	r0, r1
   1c2ec:	beq	1c308 <__assert_fail@plt+0x9750>
   1c2f0:	movw	r0, #55112	; 0xd748
   1c2f4:	movt	r0, #8
   1c2f8:	ldr	r0, [r0]
   1c2fc:	ldr	r0, [r0, #4]
   1c300:	str	r0, [sp, #12]
   1c304:	b	1c318 <__assert_fail@plt+0x9760>
   1c308:	movw	r0, #29909	; 0x74d5
   1c30c:	movt	r0, #7
   1c310:	str	r0, [sp, #12]
   1c314:	b	1c318 <__assert_fail@plt+0x9760>
   1c318:	ldr	r0, [sp, #12]
   1c31c:	movw	r1, #1
   1c320:	str	r0, [sp, #8]
   1c324:	mov	r0, r1
   1c328:	ldr	r1, [fp, #-4]
   1c32c:	ldr	r2, [fp, #-8]
   1c330:	ldr	r3, [sp, #16]
   1c334:	ldr	ip, [sp, #8]
   1c338:	str	ip, [sp]
   1c33c:	bl	12780 <error@plt>
   1c340:	mov	sp, fp
   1c344:	pop	{fp, pc}
   1c348:	push	{fp, lr}
   1c34c:	mov	fp, sp
   1c350:	sub	sp, sp, #8
   1c354:	bl	18320 <__assert_fail@plt+0x5768>
   1c358:	str	r0, [sp, #4]
   1c35c:	ldr	r0, [sp, #4]
   1c360:	movw	r1, #0
   1c364:	cmp	r0, r1
   1c368:	beq	1c380 <__assert_fail@plt+0x97c8>
   1c36c:	ldr	r0, [sp, #4]
   1c370:	movw	r1, #49512	; 0xc168
   1c374:	movt	r1, #1
   1c378:	bl	1c3fc <__assert_fail@plt+0x9844>
   1c37c:	bl	1c048 <__assert_fail@plt+0x9490>
   1c380:	movw	r0, #57436	; 0xe05c
   1c384:	movt	r0, #8
   1c388:	ldr	r0, [r0, #36]	; 0x24
   1c38c:	bl	1dde8 <__assert_fail@plt+0xb230>
   1c390:	ldr	r0, [sp, #4]
   1c394:	movw	r1, #0
   1c398:	cmp	r0, r1
   1c39c:	beq	1c3b0 <__assert_fail@plt+0x97f8>
   1c3a0:	ldr	r0, [sp, #4]
   1c3a4:	movw	r1, #50296	; 0xc478
   1c3a8:	movt	r1, #1
   1c3ac:	bl	1c3fc <__assert_fail@plt+0x9844>
   1c3b0:	bl	1c4f4 <__assert_fail@plt+0x993c>
   1c3b4:	bl	296e0 <__assert_fail@plt+0x16b28>
   1c3b8:	tst	r0, #1
   1c3bc:	beq	1c3c8 <__assert_fail@plt+0x9810>
   1c3c0:	bl	29730 <__assert_fail@plt+0x16b78>
   1c3c4:	bl	296a8 <__assert_fail@plt+0x16af0>
   1c3c8:	movw	r0, #55092	; 0xd734
   1c3cc:	movt	r0, #8
   1c3d0:	ldr	r0, [r0]
   1c3d4:	bl	4ea58 <__assert_fail@plt+0x3bea0>
   1c3d8:	cmn	r0, #1
   1c3dc:	bne	1c3f4 <__assert_fail@plt+0x983c>
   1c3e0:	bl	128d0 <__errno_location@plt>
   1c3e4:	ldr	r0, [r0]
   1c3e8:	movw	r1, #29969	; 0x7511
   1c3ec:	movt	r1, #7
   1c3f0:	bl	1c664 <__assert_fail@plt+0x9aac>
   1c3f4:	mov	sp, fp
   1c3f8:	pop	{fp, pc}
   1c3fc:	push	{fp, lr}
   1c400:	mov	fp, sp
   1c404:	sub	sp, sp, #16
   1c408:	str	r0, [fp, #-4]
   1c40c:	str	r1, [sp, #8]
   1c410:	ldr	r0, [fp, #-4]
   1c414:	ldr	r0, [r0, #156]	; 0x9c
   1c418:	movw	r1, #0
   1c41c:	cmp	r0, r1
   1c420:	beq	1c434 <__assert_fail@plt+0x987c>
   1c424:	ldr	r0, [fp, #-4]
   1c428:	ldr	r0, [r0, #156]	; 0x9c
   1c42c:	ldr	r1, [sp, #8]
   1c430:	bl	1c3fc <__assert_fail@plt+0x9844>
   1c434:	ldr	r0, [sp, #8]
   1c438:	ldr	r1, [fp, #-4]
   1c43c:	str	r0, [sp, #4]
   1c440:	mov	r0, r1
   1c444:	ldr	r1, [sp, #4]
   1c448:	blx	r1
   1c44c:	ldr	r0, [fp, #-4]
   1c450:	ldr	r0, [r0, #160]	; 0xa0
   1c454:	movw	r1, #0
   1c458:	cmp	r0, r1
   1c45c:	beq	1c470 <__assert_fail@plt+0x98b8>
   1c460:	ldr	r0, [fp, #-4]
   1c464:	ldr	r0, [r0, #160]	; 0xa0
   1c468:	ldr	r1, [sp, #8]
   1c46c:	bl	1c3fc <__assert_fail@plt+0x9844>
   1c470:	mov	sp, fp
   1c474:	pop	{fp, pc}
   1c478:	sub	sp, sp, #4
   1c47c:	str	r0, [sp]
   1c480:	ldr	r0, [sp]
   1c484:	ldr	r0, [r0]
   1c488:	movw	r1, #20972	; 0x51ec
   1c48c:	movt	r1, #1
   1c490:	cmp	r0, r1
   1c494:	beq	1c4e0 <__assert_fail@plt+0x9928>
   1c498:	ldr	r0, [sp]
   1c49c:	ldr	r0, [r0]
   1c4a0:	movw	r1, #60408	; 0xebf8
   1c4a4:	movt	r1, #1
   1c4a8:	cmp	r0, r1
   1c4ac:	beq	1c4e0 <__assert_fail@plt+0x9928>
   1c4b0:	ldr	r0, [sp]
   1c4b4:	ldr	r0, [r0]
   1c4b8:	movw	r1, #20832	; 0x5160
   1c4bc:	movt	r1, #1
   1c4c0:	cmp	r0, r1
   1c4c4:	beq	1c4e0 <__assert_fail@plt+0x9928>
   1c4c8:	ldr	r0, [sp]
   1c4cc:	ldr	r0, [r0]
   1c4d0:	movw	r1, #21080	; 0x5258
   1c4d4:	movt	r1, #1
   1c4d8:	cmp	r0, r1
   1c4dc:	bne	1c4ec <__assert_fail@plt+0x9934>
   1c4e0:	ldr	r0, [sp]
   1c4e4:	movw	r1, #0
   1c4e8:	str	r1, [r0, #44]	; 0x2c
   1c4ec:	add	sp, sp, #4
   1c4f0:	bx	lr
   1c4f4:	push	{fp, lr}
   1c4f8:	mov	fp, sp
   1c4fc:	sub	sp, sp, #32
   1c500:	movw	r0, #55112	; 0xd748
   1c504:	movt	r0, #8
   1c508:	ldr	r0, [r0]
   1c50c:	bl	48e10 <__assert_fail@plt+0x36258>
   1c510:	movw	r1, #0
   1c514:	cmp	r1, r0
   1c518:	bne	1c550 <__assert_fail@plt+0x9998>
   1c51c:	movw	r0, #55112	; 0xd748
   1c520:	movt	r0, #8
   1c524:	ldr	r0, [r0]
   1c528:	bl	48e64 <__assert_fail@plt+0x362ac>
   1c52c:	movw	r0, #55112	; 0xd748
   1c530:	movt	r0, #8
   1c534:	ldr	r0, [r0]
   1c538:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   1c53c:	movw	r0, #55112	; 0xd748
   1c540:	movt	r0, #8
   1c544:	movw	r1, #0
   1c548:	str	r1, [r0]
   1c54c:	b	1c65c <__assert_fail@plt+0x9aa4>
   1c550:	bl	128d0 <__errno_location@plt>
   1c554:	ldr	r1, [r0]
   1c558:	movw	r0, #31044	; 0x7944
   1c55c:	movt	r0, #7
   1c560:	str	r1, [fp, #-4]
   1c564:	bl	12864 <gettext@plt>
   1c568:	movw	r1, #55112	; 0xd748
   1c56c:	movt	r1, #8
   1c570:	ldr	r1, [r1]
   1c574:	ldr	r1, [r1]
   1c578:	cmp	r1, #0
   1c57c:	movw	r1, #0
   1c580:	str	r0, [fp, #-8]
   1c584:	str	r1, [fp, #-12]
   1c588:	bge	1c5b0 <__assert_fail@plt+0x99f8>
   1c58c:	movw	r0, #55112	; 0xd748
   1c590:	movt	r0, #8
   1c594:	ldr	r0, [r0]
   1c598:	ldr	r0, [r0, #4]
   1c59c:	movw	r1, #0
   1c5a0:	cmp	r0, r1
   1c5a4:	movw	r0, #0
   1c5a8:	movne	r0, #1
   1c5ac:	str	r0, [fp, #-12]
   1c5b0:	ldr	r0, [fp, #-12]
   1c5b4:	tst	r0, #1
   1c5b8:	movw	r0, #29909	; 0x74d5
   1c5bc:	movt	r0, #7
   1c5c0:	movw	r1, #37345	; 0x91e1
   1c5c4:	movt	r1, #7
   1c5c8:	movne	r0, r1
   1c5cc:	movw	r1, #55112	; 0xd748
   1c5d0:	movt	r1, #8
   1c5d4:	ldr	r1, [r1]
   1c5d8:	ldr	r1, [r1]
   1c5dc:	cmp	r1, #0
   1c5e0:	str	r0, [sp, #16]
   1c5e4:	bge	1c61c <__assert_fail@plt+0x9a64>
   1c5e8:	movw	r0, #55112	; 0xd748
   1c5ec:	movt	r0, #8
   1c5f0:	ldr	r0, [r0]
   1c5f4:	ldr	r0, [r0, #4]
   1c5f8:	movw	r1, #0
   1c5fc:	cmp	r0, r1
   1c600:	beq	1c61c <__assert_fail@plt+0x9a64>
   1c604:	movw	r0, #55112	; 0xd748
   1c608:	movt	r0, #8
   1c60c:	ldr	r0, [r0]
   1c610:	ldr	r0, [r0, #4]
   1c614:	str	r0, [sp, #12]
   1c618:	b	1c62c <__assert_fail@plt+0x9a74>
   1c61c:	movw	r0, #29909	; 0x74d5
   1c620:	movt	r0, #7
   1c624:	str	r0, [sp, #12]
   1c628:	b	1c62c <__assert_fail@plt+0x9a74>
   1c62c:	ldr	r0, [sp, #12]
   1c630:	movw	r1, #0
   1c634:	str	r0, [sp, #8]
   1c638:	mov	r0, r1
   1c63c:	ldr	r1, [fp, #-4]
   1c640:	ldr	r2, [fp, #-8]
   1c644:	ldr	r3, [sp, #16]
   1c648:	ldr	ip, [sp, #8]
   1c64c:	str	ip, [sp]
   1c650:	bl	12780 <error@plt>
   1c654:	movw	r0, #1
   1c658:	bl	125b8 <_exit@plt>
   1c65c:	mov	sp, fp
   1c660:	pop	{fp, pc}
   1c664:	push	{fp, lr}
   1c668:	mov	fp, sp
   1c66c:	sub	sp, sp, #8
   1c670:	str	r0, [sp, #4]
   1c674:	str	r1, [sp]
   1c678:	ldr	r1, [sp, #4]
   1c67c:	ldr	r3, [sp]
   1c680:	movw	r0, #0
   1c684:	movw	r2, #0
   1c688:	and	r2, r2, #1
   1c68c:	bl	1d9c8 <__assert_fail@plt+0xae10>
   1c690:	mov	sp, fp
   1c694:	pop	{fp, pc}
   1c698:	push	{fp, lr}
   1c69c:	mov	fp, sp
   1c6a0:	sub	sp, sp, #16
   1c6a4:	str	r0, [sp, #8]
   1c6a8:	str	r1, [sp, #4]
   1c6ac:	movw	r0, #57436	; 0xe05c
   1c6b0:	movt	r0, #8
   1c6b4:	ldr	r0, [r0, #16]
   1c6b8:	mvn	r1, #99	; 0x63
   1c6bc:	cmp	r1, r0
   1c6c0:	beq	1c700 <__assert_fail@plt+0x9b48>
   1c6c4:	movw	r0, #57436	; 0xe05c
   1c6c8:	movt	r0, #8
   1c6cc:	ldr	r0, [r0, #16]
   1c6d0:	cmp	r0, #0
   1c6d4:	blt	1c6dc <__assert_fail@plt+0x9b24>
   1c6d8:	b	1c6fc <__assert_fail@plt+0x9b44>
   1c6dc:	movw	r0, #29985	; 0x7521
   1c6e0:	movt	r0, #7
   1c6e4:	movw	r1, #28063	; 0x6d9f
   1c6e8:	movt	r1, #7
   1c6ec:	movw	r2, #605	; 0x25d
   1c6f0:	movw	r3, #30007	; 0x7537
   1c6f4:	movt	r3, #7
   1c6f8:	bl	12bb8 <__assert_fail@plt>
   1c6fc:	b	1c700 <__assert_fail@plt+0x9b48>
   1c700:	ldr	r0, [sp, #4]
   1c704:	bl	1bdbc <__assert_fail@plt+0x9204>
   1c708:	movw	r0, #57436	; 0xe05c
   1c70c:	movt	r0, #8
   1c710:	ldr	r0, [r0]
   1c714:	movw	r1, #0
   1c718:	cmp	r1, r0
   1c71c:	bne	1c774 <__assert_fail@plt+0x9bbc>
   1c720:	movw	r0, #57436	; 0xe05c
   1c724:	movt	r0, #8
   1c728:	ldr	r0, [r0, #16]
   1c72c:	ldr	r1, [sp, #8]
   1c730:	ldr	r2, [sp, #4]
   1c734:	movw	r3, #0
   1c738:	bl	7566c <__assert_fail@plt+0x62ab4>
   1c73c:	str	r0, [sp]
   1c740:	ldr	r0, [sp]
   1c744:	movw	r1, #0
   1c748:	cmp	r1, r0
   1c74c:	bne	1c75c <__assert_fail@plt+0x9ba4>
   1c750:	movw	r0, #0
   1c754:	str	r0, [fp, #-4]
   1c758:	b	1c794 <__assert_fail@plt+0x9bdc>
   1c75c:	ldr	r0, [sp, #8]
   1c760:	ldr	r1, [sp, #4]
   1c764:	ldr	r2, [sp]
   1c768:	bl	1c7a0 <__assert_fail@plt+0x9be8>
   1c76c:	str	r0, [fp, #-4]
   1c770:	b	1c794 <__assert_fail@plt+0x9bdc>
   1c774:	movw	r0, #57436	; 0xe05c
   1c778:	movt	r0, #8
   1c77c:	ldr	r0, [r0, #16]
   1c780:	ldr	r1, [sp, #8]
   1c784:	ldr	r2, [sp, #4]
   1c788:	movw	r3, #256	; 0x100
   1c78c:	bl	7566c <__assert_fail@plt+0x62ab4>
   1c790:	str	r0, [fp, #-4]
   1c794:	ldr	r0, [fp, #-4]
   1c798:	mov	sp, fp
   1c79c:	pop	{fp, pc}
   1c7a0:	push	{fp, lr}
   1c7a4:	mov	fp, sp
   1c7a8:	sub	sp, sp, #24
   1c7ac:	str	r0, [fp, #-8]
   1c7b0:	str	r1, [sp, #12]
   1c7b4:	str	r2, [sp, #8]
   1c7b8:	bl	128d0 <__errno_location@plt>
   1c7bc:	ldr	r0, [r0]
   1c7c0:	cmp	r0, #2
   1c7c4:	str	r0, [sp, #4]
   1c7c8:	beq	1c830 <__assert_fail@plt+0x9c78>
   1c7cc:	b	1c7d0 <__assert_fail@plt+0x9c18>
   1c7d0:	ldr	r0, [sp, #4]
   1c7d4:	cmp	r0, #5
   1c7d8:	beq	1c888 <__assert_fail@plt+0x9cd0>
   1c7dc:	b	1c7e0 <__assert_fail@plt+0x9c28>
   1c7e0:	ldr	r0, [sp, #4]
   1c7e4:	cmp	r0, #13
   1c7e8:	beq	1c888 <__assert_fail@plt+0x9cd0>
   1c7ec:	b	1c7f0 <__assert_fail@plt+0x9c38>
   1c7f0:	ldr	r0, [sp, #4]
   1c7f4:	cmp	r0, #20
   1c7f8:	beq	1c830 <__assert_fail@plt+0x9c78>
   1c7fc:	b	1c800 <__assert_fail@plt+0x9c48>
   1c800:	ldr	r0, [sp, #4]
   1c804:	cmp	r0, #36	; 0x24
   1c808:	beq	1c888 <__assert_fail@plt+0x9cd0>
   1c80c:	b	1c810 <__assert_fail@plt+0x9c58>
   1c810:	ldr	r0, [sp, #4]
   1c814:	cmp	r0, #40	; 0x28
   1c818:	beq	1c888 <__assert_fail@plt+0x9cd0>
   1c81c:	b	1c820 <__assert_fail@plt+0x9c68>
   1c820:	ldr	r0, [sp, #4]
   1c824:	cmp	r0, #75	; 0x4b
   1c828:	beq	1c888 <__assert_fail@plt+0x9cd0>
   1c82c:	b	1c88c <__assert_fail@plt+0x9cd4>
   1c830:	movw	r0, #57480	; 0xe088
   1c834:	movt	r0, #8
   1c838:	ldr	r0, [r0, #44]	; 0x2c
   1c83c:	and	r0, r0, #2
   1c840:	cmp	r0, #0
   1c844:	beq	1c864 <__assert_fail@plt+0x9cac>
   1c848:	movw	r0, #55080	; 0xd728
   1c84c:	movt	r0, #8
   1c850:	ldr	r0, [r0]
   1c854:	ldr	r2, [fp, #-8]
   1c858:	movw	r1, #31092	; 0x7974
   1c85c:	movt	r1, #7
   1c860:	bl	128c4 <fprintf@plt>
   1c864:	movw	r0, #57436	; 0xe05c
   1c868:	movt	r0, #8
   1c86c:	ldr	r0, [r0, #16]
   1c870:	ldr	r1, [fp, #-8]
   1c874:	ldr	r2, [sp, #12]
   1c878:	movw	r3, #256	; 0x100
   1c87c:	bl	7566c <__assert_fail@plt+0x62ab4>
   1c880:	str	r0, [fp, #-4]
   1c884:	b	1c894 <__assert_fail@plt+0x9cdc>
   1c888:	b	1c88c <__assert_fail@plt+0x9cd4>
   1c88c:	ldr	r0, [sp, #8]
   1c890:	str	r0, [fp, #-4]
   1c894:	ldr	r0, [fp, #-4]
   1c898:	mov	sp, fp
   1c89c:	pop	{fp, pc}
   1c8a0:	push	{fp, lr}
   1c8a4:	mov	fp, sp
   1c8a8:	sub	sp, sp, #16
   1c8ac:	str	r0, [sp, #8]
   1c8b0:	str	r1, [sp, #4]
   1c8b4:	movw	r0, #57436	; 0xe05c
   1c8b8:	movt	r0, #8
   1c8bc:	ldr	r0, [r0, #16]
   1c8c0:	mvn	r1, #99	; 0x63
   1c8c4:	cmp	r1, r0
   1c8c8:	beq	1c908 <__assert_fail@plt+0x9d50>
   1c8cc:	movw	r0, #57436	; 0xe05c
   1c8d0:	movt	r0, #8
   1c8d4:	ldr	r0, [r0, #16]
   1c8d8:	cmp	r0, #0
   1c8dc:	blt	1c8e4 <__assert_fail@plt+0x9d2c>
   1c8e0:	b	1c904 <__assert_fail@plt+0x9d4c>
   1c8e4:	movw	r0, #29985	; 0x7521
   1c8e8:	movt	r0, #7
   1c8ec:	movw	r1, #28063	; 0x6d9f
   1c8f0:	movt	r1, #7
   1c8f4:	movw	r2, #636	; 0x27c
   1c8f8:	movw	r3, #30053	; 0x7565
   1c8fc:	movt	r3, #7
   1c900:	bl	12bb8 <__assert_fail@plt>
   1c904:	b	1c908 <__assert_fail@plt+0x9d50>
   1c908:	ldr	r0, [sp, #4]
   1c90c:	bl	1bdbc <__assert_fail@plt+0x9204>
   1c910:	movw	r0, #57436	; 0xe05c
   1c914:	movt	r0, #8
   1c918:	ldr	r0, [r0, #16]
   1c91c:	ldr	r1, [sp, #8]
   1c920:	ldr	r2, [sp, #4]
   1c924:	movw	r3, #0
   1c928:	bl	7566c <__assert_fail@plt+0x62ab4>
   1c92c:	str	r0, [sp]
   1c930:	ldr	r0, [sp]
   1c934:	movw	r1, #0
   1c938:	cmp	r1, r0
   1c93c:	bne	1c94c <__assert_fail@plt+0x9d94>
   1c940:	movw	r0, #0
   1c944:	str	r0, [fp, #-4]
   1c948:	b	1c960 <__assert_fail@plt+0x9da8>
   1c94c:	ldr	r0, [sp, #8]
   1c950:	ldr	r1, [sp, #4]
   1c954:	ldr	r2, [sp]
   1c958:	bl	1c7a0 <__assert_fail@plt+0x9be8>
   1c95c:	str	r0, [fp, #-4]
   1c960:	ldr	r0, [fp, #-4]
   1c964:	mov	sp, fp
   1c968:	pop	{fp, pc}
   1c96c:	push	{fp, lr}
   1c970:	mov	fp, sp
   1c974:	sub	sp, sp, #8
   1c978:	str	r0, [sp, #4]
   1c97c:	str	r1, [sp]
   1c980:	movw	r0, #57436	; 0xe05c
   1c984:	movt	r0, #8
   1c988:	ldr	r0, [r0, #16]
   1c98c:	cmp	r0, #0
   1c990:	bge	1c9a8 <__assert_fail@plt+0x9df0>
   1c994:	movw	r0, #57436	; 0xe05c
   1c998:	movt	r0, #8
   1c99c:	ldr	r0, [r0, #16]
   1c9a0:	cmn	r0, #100	; 0x64
   1c9a4:	bne	1c9ac <__assert_fail@plt+0x9df4>
   1c9a8:	b	1c9cc <__assert_fail@plt+0x9e14>
   1c9ac:	movw	r0, #30099	; 0x7593
   1c9b0:	movt	r0, #7
   1c9b4:	movw	r1, #28063	; 0x6d9f
   1c9b8:	movt	r1, #7
   1c9bc:	movw	r2, #653	; 0x28d
   1c9c0:	movw	r3, #30155	; 0x75cb
   1c9c4:	movt	r3, #7
   1c9c8:	bl	12bb8 <__assert_fail@plt>
   1c9cc:	ldr	r0, [sp]
   1c9d0:	bl	1bdbc <__assert_fail@plt+0x9204>
   1c9d4:	movw	r0, #57436	; 0xe05c
   1c9d8:	movt	r0, #8
   1c9dc:	ldr	r0, [r0, #16]
   1c9e0:	ldr	r1, [sp, #4]
   1c9e4:	ldr	r2, [sp]
   1c9e8:	movw	r3, #256	; 0x100
   1c9ec:	bl	7566c <__assert_fail@plt+0x62ab4>
   1c9f0:	mov	sp, fp
   1c9f4:	pop	{fp, pc}
   1c9f8:	push	{fp, lr}
   1c9fc:	mov	fp, sp
   1ca00:	sub	sp, sp, #16
   1ca04:	str	r0, [sp, #8]
   1ca08:	str	r1, [sp, #4]
   1ca0c:	movw	r0, #55152	; 0xd770
   1ca10:	movt	r0, #8
   1ca14:	ldr	r1, [r0]
   1ca18:	ldr	r2, [r0, #4]
   1ca1c:	adds	r1, r1, #1
   1ca20:	adc	r2, r2, #0
   1ca24:	str	r1, [r0]
   1ca28:	str	r2, [r0, #4]
   1ca2c:	movw	r0, #55080	; 0xd728
   1ca30:	movt	r0, #8
   1ca34:	ldr	r0, [r0]
   1ca38:	ldr	r2, [sp, #8]
   1ca3c:	movw	r1, #30201	; 0x75f9
   1ca40:	movt	r1, #7
   1ca44:	bl	128c4 <fprintf@plt>
   1ca48:	movw	r1, #57480	; 0xe088
   1ca4c:	movt	r1, #8
   1ca50:	ldr	r1, [r1, #48]	; 0x30
   1ca54:	cmp	r1, #0
   1ca58:	str	r1, [sp]
   1ca5c:	beq	1caac <__assert_fail@plt+0x9ef4>
   1ca60:	b	1ca64 <__assert_fail@plt+0x9eac>
   1ca64:	ldr	r0, [sp]
   1ca68:	cmp	r0, #1
   1ca6c:	beq	1ca84 <__assert_fail@plt+0x9ecc>
   1ca70:	b	1ca74 <__assert_fail@plt+0x9ebc>
   1ca74:	ldr	r0, [sp]
   1ca78:	cmp	r0, #2
   1ca7c:	beq	1ca98 <__assert_fail@plt+0x9ee0>
   1ca80:	b	1cac0 <__assert_fail@plt+0x9f08>
   1ca84:	ldr	r0, [sp, #8]
   1ca88:	ldr	r1, [sp, #4]
   1ca8c:	bl	1c8a0 <__assert_fail@plt+0x9ce8>
   1ca90:	str	r0, [fp, #-4]
   1ca94:	b	1cae0 <__assert_fail@plt+0x9f28>
   1ca98:	ldr	r0, [sp, #8]
   1ca9c:	ldr	r1, [sp, #4]
   1caa0:	bl	1c698 <__assert_fail@plt+0x9ae0>
   1caa4:	str	r0, [fp, #-4]
   1caa8:	b	1cae0 <__assert_fail@plt+0x9f28>
   1caac:	ldr	r0, [sp, #8]
   1cab0:	ldr	r1, [sp, #4]
   1cab4:	bl	1c96c <__assert_fail@plt+0x9db4>
   1cab8:	str	r0, [fp, #-4]
   1cabc:	b	1cae0 <__assert_fail@plt+0x9f28>
   1cac0:	movw	r0, #27249	; 0x6a71
   1cac4:	movt	r0, #7
   1cac8:	movw	r1, #28063	; 0x6d9f
   1cacc:	movt	r1, #7
   1cad0:	movw	r2, #677	; 0x2a5
   1cad4:	movw	r3, #30218	; 0x760a
   1cad8:	movt	r3, #7
   1cadc:	bl	12bb8 <__assert_fail@plt>
   1cae0:	ldr	r0, [fp, #-4]
   1cae4:	mov	sp, fp
   1cae8:	pop	{fp, pc}
   1caec:	sub	sp, sp, #8
   1caf0:	movw	r0, #57480	; 0xe088
   1caf4:	movt	r0, #8
   1caf8:	ldr	r0, [r0, #48]	; 0x30
   1cafc:	cmp	r0, #0
   1cb00:	str	r0, [sp]
   1cb04:	beq	1cb60 <__assert_fail@plt+0x9fa8>
   1cb08:	b	1cb0c <__assert_fail@plt+0x9f54>
   1cb0c:	ldr	r0, [sp]
   1cb10:	cmp	r0, #1
   1cb14:	beq	1cb2c <__assert_fail@plt+0x9f74>
   1cb18:	b	1cb1c <__assert_fail@plt+0x9f64>
   1cb1c:	ldr	r0, [sp]
   1cb20:	cmp	r0, #2
   1cb24:	beq	1cb3c <__assert_fail@plt+0x9f84>
   1cb28:	b	1cb64 <__assert_fail@plt+0x9fac>
   1cb2c:	movw	r0, #1
   1cb30:	and	r0, r0, #1
   1cb34:	strb	r0, [sp, #7]
   1cb38:	b	1cb70 <__assert_fail@plt+0x9fb8>
   1cb3c:	movw	r0, #57436	; 0xe05c
   1cb40:	movt	r0, #8
   1cb44:	ldr	r0, [r0]
   1cb48:	cmp	r0, #0
   1cb4c:	movw	r0, #0
   1cb50:	moveq	r0, #1
   1cb54:	and	r0, r0, #1
   1cb58:	strb	r0, [sp, #7]
   1cb5c:	b	1cb70 <__assert_fail@plt+0x9fb8>
   1cb60:	b	1cb64 <__assert_fail@plt+0x9fac>
   1cb64:	movw	r0, #0
   1cb68:	and	r0, r0, #1
   1cb6c:	strb	r0, [sp, #7]
   1cb70:	ldrb	r0, [sp, #7]
   1cb74:	and	r0, r0, #1
   1cb78:	add	sp, sp, #8
   1cb7c:	bx	lr
   1cb80:	push	{fp, lr}
   1cb84:	mov	fp, sp
   1cb88:	sub	sp, sp, #24
   1cb8c:	ldr	ip, [fp, #8]
   1cb90:	str	r0, [fp, #-8]
   1cb94:	str	r1, [sp, #12]
   1cb98:	str	r2, [sp, #8]
   1cb9c:	str	r3, [sp, #4]
   1cba0:	and	r0, ip, #1
   1cba4:	strb	r0, [sp, #3]
   1cba8:	ldr	r0, [fp, #-8]
   1cbac:	ldr	r0, [r0]
   1cbb0:	cmp	r0, #0
   1cbb4:	beq	1cc50 <__assert_fail@plt+0xa098>
   1cbb8:	ldr	r0, [fp, #-8]
   1cbbc:	ldr	r0, [r0]
   1cbc0:	and	r0, r0, #61440	; 0xf000
   1cbc4:	cmp	r0, #40960	; 0xa000
   1cbc8:	bne	1cc28 <__assert_fail@plt+0xa070>
   1cbcc:	bl	1caec <__assert_fail@plt+0x9f34>
   1cbd0:	tst	r0, #1
   1cbd4:	beq	1cc28 <__assert_fail@plt+0xa070>
   1cbd8:	ldr	r0, [sp, #12]
   1cbdc:	ldr	r1, [sp, #8]
   1cbe0:	ldr	r2, [sp, #4]
   1cbe4:	bl	1bdcc <__assert_fail@plt+0x9214>
   1cbe8:	cmp	r0, #0
   1cbec:	beq	1cc00 <__assert_fail@plt+0xa048>
   1cbf0:	movw	r0, #0
   1cbf4:	and	r0, r0, #1
   1cbf8:	strb	r0, [fp, #-1]
   1cbfc:	b	1ccd8 <__assert_fail@plt+0xa120>
   1cc00:	ldr	r0, [sp, #4]
   1cc04:	ldr	r0, [r0, #16]
   1cc08:	movw	r1, #57436	; 0xe05c
   1cc0c:	movt	r1, #8
   1cc10:	str	r0, [r1, #8]
   1cc14:	ldr	r2, [fp, #-8]
   1cc18:	str	r0, [r2]
   1cc1c:	movw	r0, #1
   1cc20:	strb	r0, [r1, #5]
   1cc24:	b	1cc4c <__assert_fail@plt+0xa094>
   1cc28:	movw	r0, #1
   1cc2c:	movw	r1, #57436	; 0xe05c
   1cc30:	movt	r1, #8
   1cc34:	strb	r0, [r1, #5]
   1cc38:	ldr	r0, [fp, #-8]
   1cc3c:	ldr	r0, [r0]
   1cc40:	str	r0, [r1, #8]
   1cc44:	ldr	r1, [sp, #4]
   1cc48:	str	r0, [r1, #16]
   1cc4c:	b	1cccc <__assert_fail@plt+0xa114>
   1cc50:	ldrb	r0, [sp, #3]
   1cc54:	tst	r0, #1
   1cc58:	beq	1cc7c <__assert_fail@plt+0xa0c4>
   1cc5c:	movw	r0, #0
   1cc60:	movw	r1, #57436	; 0xe05c
   1cc64:	movt	r1, #8
   1cc68:	strb	r0, [r1, #4]
   1cc6c:	strb	r0, [r1, #5]
   1cc70:	movw	r0, #0
   1cc74:	str	r0, [r1, #8]
   1cc78:	b	1ccc8 <__assert_fail@plt+0xa110>
   1cc7c:	ldr	r0, [sp, #12]
   1cc80:	ldr	r1, [sp, #8]
   1cc84:	ldr	r2, [sp, #4]
   1cc88:	bl	1bdcc <__assert_fail@plt+0x9214>
   1cc8c:	cmp	r0, #0
   1cc90:	beq	1cca4 <__assert_fail@plt+0xa0ec>
   1cc94:	movw	r0, #0
   1cc98:	and	r0, r0, #1
   1cc9c:	strb	r0, [fp, #-1]
   1cca0:	b	1ccd8 <__assert_fail@plt+0xa120>
   1cca4:	ldr	r0, [sp, #4]
   1cca8:	ldr	r0, [r0, #16]
   1ccac:	ldr	r1, [fp, #-8]
   1ccb0:	str	r0, [r1]
   1ccb4:	movw	r1, #57436	; 0xe05c
   1ccb8:	movt	r1, #8
   1ccbc:	str	r0, [r1, #8]
   1ccc0:	movw	r0, #1
   1ccc4:	strb	r0, [r1, #5]
   1ccc8:	b	1cccc <__assert_fail@plt+0xa114>
   1cccc:	movw	r0, #1
   1ccd0:	and	r0, r0, #1
   1ccd4:	strb	r0, [fp, #-1]
   1ccd8:	ldrb	r0, [fp, #-1]
   1ccdc:	and	r0, r0, #1
   1cce0:	mov	sp, fp
   1cce4:	pop	{fp, pc}
   1cce8:	sub	sp, sp, #8
   1ccec:	str	r0, [sp]
   1ccf0:	ldr	r0, [sp]
   1ccf4:	movw	r1, #0
   1ccf8:	cmp	r0, r1
   1ccfc:	beq	1cd30 <__assert_fail@plt+0xa178>
   1cd00:	ldr	r0, [sp]
   1cd04:	ldrb	r0, [r0, #17]
   1cd08:	tst	r0, #1
   1cd0c:	beq	1cd20 <__assert_fail@plt+0xa168>
   1cd10:	movw	r0, #0
   1cd14:	and	r0, r0, #1
   1cd18:	strb	r0, [sp, #7]
   1cd1c:	b	1cd3c <__assert_fail@plt+0xa184>
   1cd20:	ldr	r0, [sp]
   1cd24:	ldr	r0, [r0, #152]	; 0x98
   1cd28:	str	r0, [sp]
   1cd2c:	b	1ccf0 <__assert_fail@plt+0xa138>
   1cd30:	movw	r0, #1
   1cd34:	and	r0, r0, #1
   1cd38:	strb	r0, [sp, #7]
   1cd3c:	ldrb	r0, [sp, #7]
   1cd40:	and	r0, r0, #1
   1cd44:	add	sp, sp, #8
   1cd48:	bx	lr
   1cd4c:	sub	sp, sp, #16
   1cd50:	str	r0, [sp, #8]
   1cd54:	and	r0, r1, #1
   1cd58:	strb	r0, [sp, #7]
   1cd5c:	ldr	r0, [sp, #8]
   1cd60:	ldrb	r0, [r0]
   1cd64:	sub	r0, r0, #33	; 0x21
   1cd68:	cmp	r0, #12
   1cd6c:	str	r0, [sp]
   1cd70:	bhi	1ce50 <__assert_fail@plt+0xa298>
   1cd74:	add	r0, pc, #8
   1cd78:	ldr	r1, [sp]
   1cd7c:	ldr	r0, [r0, r1, lsl #2]
   1cd80:	mov	pc, r0
   1cd84:	andeq	ip, r1, r0, lsr #28
   1cd88:	andeq	ip, r1, r0, asr lr
   1cd8c:	andeq	ip, r1, r0, asr lr
   1cd90:	andeq	ip, r1, r0, asr lr
   1cd94:	andeq	ip, r1, r0, asr lr
   1cd98:	andeq	ip, r1, r0, asr lr
   1cd9c:	andeq	ip, r1, r0, asr lr
   1cda0:	andeq	ip, r1, r0, lsr #28
   1cda4:	andeq	ip, r1, r8, ror #27
   1cda8:	andeq	ip, r1, r0, asr lr
   1cdac:	andeq	ip, r1, r0, asr lr
   1cdb0:	andeq	ip, r1, r8, ror #27
   1cdb4:			; <UNDEFINED> instruction: 0x0001cdb8
   1cdb8:	ldr	r0, [sp, #8]
   1cdbc:	ldrsb	r0, [r0, #1]
   1cdc0:	cmp	r0, #0
   1cdc4:	beq	1cdd8 <__assert_fail@plt+0xa220>
   1cdc8:	movw	r0, #1
   1cdcc:	and	r0, r0, #1
   1cdd0:	strb	r0, [sp, #15]
   1cdd4:	b	1ce5c <__assert_fail@plt+0xa2a4>
   1cdd8:	movw	r0, #0
   1cddc:	and	r0, r0, #1
   1cde0:	strb	r0, [sp, #15]
   1cde4:	b	1ce5c <__assert_fail@plt+0xa2a4>
   1cde8:	ldr	r0, [sp, #8]
   1cdec:	ldrsb	r0, [r0, #1]
   1cdf0:	cmp	r0, #0
   1cdf4:	beq	1ce08 <__assert_fail@plt+0xa250>
   1cdf8:	movw	r0, #0
   1cdfc:	and	r0, r0, #1
   1ce00:	strb	r0, [sp, #15]
   1ce04:	b	1ce5c <__assert_fail@plt+0xa2a4>
   1ce08:	ldrb	r0, [sp, #7]
   1ce0c:	mvn	r1, #0
   1ce10:	eor	r0, r0, r1
   1ce14:	and	r0, r0, #1
   1ce18:	strb	r0, [sp, #15]
   1ce1c:	b	1ce5c <__assert_fail@plt+0xa2a4>
   1ce20:	ldr	r0, [sp, #8]
   1ce24:	ldrsb	r0, [r0, #1]
   1ce28:	cmp	r0, #0
   1ce2c:	beq	1ce40 <__assert_fail@plt+0xa288>
   1ce30:	movw	r0, #0
   1ce34:	and	r0, r0, #1
   1ce38:	strb	r0, [sp, #15]
   1ce3c:	b	1ce5c <__assert_fail@plt+0xa2a4>
   1ce40:	movw	r0, #1
   1ce44:	and	r0, r0, #1
   1ce48:	strb	r0, [sp, #15]
   1ce4c:	b	1ce5c <__assert_fail@plt+0xa2a4>
   1ce50:	movw	r0, #0
   1ce54:	and	r0, r0, #1
   1ce58:	strb	r0, [sp, #15]
   1ce5c:	ldrb	r0, [sp, #15]
   1ce60:	and	r0, r0, #1
   1ce64:	add	sp, sp, #16
   1ce68:	bx	lr
   1ce6c:	push	{fp, lr}
   1ce70:	mov	fp, sp
   1ce74:	sub	sp, sp, #24
   1ce78:	str	r0, [fp, #-4]
   1ce7c:	str	r1, [fp, #-8]
   1ce80:	movw	r0, #1
   1ce84:	str	r0, [sp, #12]
   1ce88:	ldr	r0, [sp, #12]
   1ce8c:	str	r0, [sp, #8]
   1ce90:	ldr	r1, [fp, #-4]
   1ce94:	cmp	r0, r1
   1ce98:	bge	1d078 <__assert_fail@plt+0xa4c0>
   1ce9c:	ldr	r0, [fp, #-8]
   1cea0:	ldr	r1, [sp, #12]
   1cea4:	add	r0, r0, r1, lsl #2
   1cea8:	ldr	r1, [r0]
   1ceac:	movw	r0, #30262	; 0x7636
   1ceb0:	movt	r0, #7
   1ceb4:	bl	124c8 <strcmp@plt>
   1ceb8:	movw	r1, #0
   1cebc:	cmp	r1, r0
   1cec0:	bne	1ced0 <__assert_fail@plt+0xa318>
   1cec4:	movw	r0, #2
   1cec8:	bl	21944 <__assert_fail@plt+0xed8c>
   1cecc:	b	1d064 <__assert_fail@plt+0xa4ac>
   1ced0:	ldr	r0, [fp, #-8]
   1ced4:	ldr	r1, [sp, #12]
   1ced8:	add	r0, r0, r1, lsl #2
   1cedc:	ldr	r1, [r0]
   1cee0:	movw	r0, #30265	; 0x7639
   1cee4:	movt	r0, #7
   1cee8:	bl	124c8 <strcmp@plt>
   1ceec:	movw	r1, #0
   1cef0:	cmp	r1, r0
   1cef4:	bne	1cf04 <__assert_fail@plt+0xa34c>
   1cef8:	movw	r0, #1
   1cefc:	bl	21944 <__assert_fail@plt+0xed8c>
   1cf00:	b	1d060 <__assert_fail@plt+0xa4a8>
   1cf04:	ldr	r0, [fp, #-8]
   1cf08:	ldr	r1, [sp, #12]
   1cf0c:	add	r0, r0, r1, lsl #2
   1cf10:	ldr	r1, [r0]
   1cf14:	movw	r0, #30268	; 0x763c
   1cf18:	movt	r0, #7
   1cf1c:	bl	124c8 <strcmp@plt>
   1cf20:	movw	r1, #0
   1cf24:	cmp	r1, r0
   1cf28:	bne	1cf38 <__assert_fail@plt+0xa380>
   1cf2c:	movw	r0, #0
   1cf30:	bl	21944 <__assert_fail@plt+0xed8c>
   1cf34:	b	1d05c <__assert_fail@plt+0xa4a4>
   1cf38:	ldr	r0, [fp, #-8]
   1cf3c:	ldr	r1, [sp, #12]
   1cf40:	add	r0, r0, r1, lsl #2
   1cf44:	ldr	r1, [r0]
   1cf48:	movw	r0, #47604	; 0xb9f4
   1cf4c:	movt	r0, #7
   1cf50:	bl	124c8 <strcmp@plt>
   1cf54:	movw	r1, #0
   1cf58:	cmp	r1, r0
   1cf5c:	bne	1cf70 <__assert_fail@plt+0xa3b8>
   1cf60:	ldr	r0, [sp, #12]
   1cf64:	add	r0, r0, #1
   1cf68:	str	r0, [sp, #8]
   1cf6c:	b	1d078 <__assert_fail@plt+0xa4c0>
   1cf70:	ldr	r0, [fp, #-8]
   1cf74:	ldr	r1, [sp, #12]
   1cf78:	add	r0, r0, r1, lsl #2
   1cf7c:	ldr	r1, [r0]
   1cf80:	movw	r0, #30271	; 0x763f
   1cf84:	movt	r0, #7
   1cf88:	bl	124c8 <strcmp@plt>
   1cf8c:	movw	r1, #0
   1cf90:	cmp	r1, r0
   1cf94:	bne	1cffc <__assert_fail@plt+0xa444>
   1cf98:	ldr	r0, [fp, #-4]
   1cf9c:	ldr	r1, [sp, #12]
   1cfa0:	add	r1, r1, #1
   1cfa4:	cmp	r0, r1
   1cfa8:	bgt	1cfd4 <__assert_fail@plt+0xa41c>
   1cfac:	movw	r0, #30274	; 0x7642
   1cfb0:	movt	r0, #7
   1cfb4:	bl	12864 <gettext@plt>
   1cfb8:	movw	r1, #0
   1cfbc:	str	r0, [sp, #4]
   1cfc0:	mov	r0, r1
   1cfc4:	ldr	r2, [sp, #4]
   1cfc8:	bl	12780 <error@plt>
   1cfcc:	movw	r0, #1
   1cfd0:	bl	1ba20 <__assert_fail@plt+0x8e68>
   1cfd4:	ldr	r0, [fp, #-8]
   1cfd8:	ldr	r1, [sp, #12]
   1cfdc:	add	r1, r1, #1
   1cfe0:	add	r0, r0, r1, lsl #2
   1cfe4:	ldr	r0, [r0]
   1cfe8:	bl	1d084 <__assert_fail@plt+0xa4cc>
   1cfec:	ldr	r0, [sp, #12]
   1cff0:	add	r0, r0, #1
   1cff4:	str	r0, [sp, #12]
   1cff8:	b	1d054 <__assert_fail@plt+0xa49c>
   1cffc:	ldr	r0, [fp, #-8]
   1d000:	ldr	r1, [sp, #12]
   1d004:	add	r0, r0, r1, lsl #2
   1d008:	ldr	r1, [r0]
   1d00c:	movw	r0, #31334	; 0x7a66
   1d010:	movt	r0, #7
   1d014:	movw	r2, #2
   1d018:	bl	12b58 <strncmp@plt>
   1d01c:	movw	r1, #0
   1d020:	cmp	r1, r0
   1d024:	bne	1d044 <__assert_fail@plt+0xa48c>
   1d028:	ldr	r0, [fp, #-8]
   1d02c:	ldr	r1, [sp, #12]
   1d030:	add	r0, r0, r1, lsl #2
   1d034:	ldr	r0, [r0]
   1d038:	add	r0, r0, #2
   1d03c:	bl	1d244 <__assert_fail@plt+0xa68c>
   1d040:	b	1d050 <__assert_fail@plt+0xa498>
   1d044:	ldr	r0, [sp, #12]
   1d048:	str	r0, [sp, #8]
   1d04c:	b	1d078 <__assert_fail@plt+0xa4c0>
   1d050:	b	1d054 <__assert_fail@plt+0xa49c>
   1d054:	b	1d058 <__assert_fail@plt+0xa4a0>
   1d058:	b	1d05c <__assert_fail@plt+0xa4a4>
   1d05c:	b	1d060 <__assert_fail@plt+0xa4a8>
   1d060:	b	1d064 <__assert_fail@plt+0xa4ac>
   1d064:	b	1d068 <__assert_fail@plt+0xa4b0>
   1d068:	ldr	r0, [sp, #12]
   1d06c:	add	r0, r0, #1
   1d070:	str	r0, [sp, #12]
   1d074:	b	1ce88 <__assert_fail@plt+0xa2d0>
   1d078:	ldr	r0, [sp, #8]
   1d07c:	mov	sp, fp
   1d080:	pop	{fp, pc}
   1d084:	push	{fp, lr}
   1d088:	mov	fp, sp
   1d08c:	sub	sp, sp, #32
   1d090:	sub	r1, fp, #14
   1d094:	str	r0, [fp, #-4]
   1d098:	movw	r0, #0
   1d09c:	str	r0, [fp, #-12]
   1d0a0:	movw	r0, #26422	; 0x6736
   1d0a4:	movt	r0, #7
   1d0a8:	ldrb	r2, [r0]
   1d0ac:	strb	r2, [fp, #-14]
   1d0b0:	ldrb	r0, [r0, #1]
   1d0b4:	strb	r0, [fp, #-13]
   1d0b8:	movw	r0, #1
   1d0bc:	strb	r0, [fp, #-15]
   1d0c0:	ldr	r0, [fp, #-4]
   1d0c4:	sub	r2, fp, #12
   1d0c8:	bl	12774 <strtok_r@plt>
   1d0cc:	str	r0, [fp, #-8]
   1d0d0:	ldr	r0, [fp, #-8]
   1d0d4:	movw	r1, #0
   1d0d8:	cmp	r0, r1
   1d0dc:	beq	1d1dc <__assert_fail@plt+0xa624>
   1d0e0:	movw	r0, #0
   1d0e4:	strb	r0, [fp, #-15]
   1d0e8:	movw	r0, #0
   1d0ec:	str	r0, [sp, #12]
   1d0f0:	ldr	r0, [sp, #12]
   1d0f4:	cmp	r0, #9
   1d0f8:	bcs	1d174 <__assert_fail@plt+0xa5bc>
   1d0fc:	ldr	r0, [sp, #12]
   1d100:	movw	r1, #12
   1d104:	mul	r0, r0, r1
   1d108:	movw	r1, #54608	; 0xd550
   1d10c:	movt	r1, #8
   1d110:	add	r0, r1, r0
   1d114:	ldr	r0, [r0]
   1d118:	ldr	r1, [fp, #-8]
   1d11c:	bl	124c8 <strcmp@plt>
   1d120:	movw	r1, #0
   1d124:	cmp	r1, r0
   1d128:	bne	1d160 <__assert_fail@plt+0xa5a8>
   1d12c:	ldr	r0, [sp, #12]
   1d130:	movw	r1, #12
   1d134:	mul	r0, r0, r1
   1d138:	movw	r1, #54608	; 0xd550
   1d13c:	movt	r1, #8
   1d140:	add	r0, r1, r0
   1d144:	ldr	r0, [r0, #4]
   1d148:	movw	r1, #57480	; 0xe088
   1d14c:	movt	r1, #8
   1d150:	ldr	r2, [r1, #44]	; 0x2c
   1d154:	orr	r0, r2, r0
   1d158:	str	r0, [r1, #44]	; 0x2c
   1d15c:	b	1d174 <__assert_fail@plt+0xa5bc>
   1d160:	b	1d164 <__assert_fail@plt+0xa5ac>
   1d164:	ldr	r0, [sp, #12]
   1d168:	add	r0, r0, #1
   1d16c:	str	r0, [sp, #12]
   1d170:	b	1d0f0 <__assert_fail@plt+0xa538>
   1d174:	ldr	r0, [sp, #12]
   1d178:	cmp	r0, #9
   1d17c:	bcc	1d1c4 <__assert_fail@plt+0xa60c>
   1d180:	movw	r0, #31151	; 0x79af
   1d184:	movt	r0, #7
   1d188:	bl	12864 <gettext@plt>
   1d18c:	movw	r1, #57480	; 0xe088
   1d190:	movt	r1, #8
   1d194:	ldr	r1, [r1, #72]	; 0x48
   1d198:	ldr	r2, [fp, #-4]
   1d19c:	movw	r3, #0
   1d1a0:	str	r0, [sp, #8]
   1d1a4:	mov	r0, r3
   1d1a8:	bl	487d0 <__assert_fail@plt+0x35c18>
   1d1ac:	movw	r1, #0
   1d1b0:	str	r0, [sp, #4]
   1d1b4:	mov	r0, r1
   1d1b8:	ldr	r2, [sp, #8]
   1d1bc:	ldr	r3, [sp, #4]
   1d1c0:	bl	12780 <error@plt>
   1d1c4:	sub	r1, fp, #14
   1d1c8:	movw	r0, #0
   1d1cc:	sub	r2, fp, #12
   1d1d0:	bl	12774 <strtok_r@plt>
   1d1d4:	str	r0, [fp, #-8]
   1d1d8:	b	1d0d0 <__assert_fail@plt+0xa518>
   1d1dc:	ldrb	r0, [fp, #-15]
   1d1e0:	tst	r0, #1
   1d1e4:	beq	1d210 <__assert_fail@plt+0xa658>
   1d1e8:	movw	r0, #31187	; 0x79d3
   1d1ec:	movt	r0, #7
   1d1f0:	bl	12864 <gettext@plt>
   1d1f4:	movw	r1, #0
   1d1f8:	str	r0, [sp]
   1d1fc:	mov	r0, r1
   1d200:	ldr	r2, [sp]
   1d204:	bl	12780 <error@plt>
   1d208:	movw	r0, #1
   1d20c:	bl	1ba20 <__assert_fail@plt+0x8e68>
   1d210:	movw	r0, #57480	; 0xe088
   1d214:	movt	r0, #8
   1d218:	ldr	r0, [r0, #44]	; 0x2c
   1d21c:	and	r0, r0, #16
   1d220:	cmp	r0, #0
   1d224:	beq	1d238 <__assert_fail@plt+0xa680>
   1d228:	movw	r0, #1
   1d22c:	bl	1bc74 <__assert_fail@plt+0x90bc>
   1d230:	movw	r0, #0
   1d234:	bl	1284c <exit@plt>
   1d238:	b	1d23c <__assert_fail@plt+0xa684>
   1d23c:	mov	sp, fp
   1d240:	pop	{fp, pc}
   1d244:	push	{fp, lr}
   1d248:	mov	fp, sp
   1d24c:	sub	sp, sp, #48	; 0x30
   1d250:	str	r0, [fp, #-4]
   1d254:	ldr	r0, [fp, #-4]
   1d258:	ldrb	r0, [r0]
   1d25c:	movw	r1, #0
   1d260:	cmp	r1, r0
   1d264:	bne	1d28c <__assert_fail@plt+0xa6d4>
   1d268:	movw	r0, #31220	; 0x79f4
   1d26c:	movt	r0, #7
   1d270:	bl	12864 <gettext@plt>
   1d274:	movw	r1, #1
   1d278:	str	r0, [fp, #-20]	; 0xffffffec
   1d27c:	mov	r0, r1
   1d280:	movw	r1, #0
   1d284:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d288:	bl	12780 <error@plt>
   1d28c:	bl	12834 <__ctype_b_loc@plt>
   1d290:	ldr	r0, [r0]
   1d294:	ldr	r1, [fp, #-4]
   1d298:	ldrb	r1, [r1]
   1d29c:	mov	r2, r1
   1d2a0:	add	r0, r0, r1, lsl #1
   1d2a4:	ldrh	r0, [r0]
   1d2a8:	and	r0, r0, #2048	; 0x800
   1d2ac:	cmp	r0, #0
   1d2b0:	bne	1d2d8 <__assert_fail@plt+0xa720>
   1d2b4:	movw	r0, #31284	; 0x7a34
   1d2b8:	movt	r0, #7
   1d2bc:	bl	12864 <gettext@plt>
   1d2c0:	movw	r1, #1
   1d2c4:	str	r0, [sp, #24]
   1d2c8:	mov	r0, r1
   1d2cc:	movw	r1, #0
   1d2d0:	ldr	r2, [sp, #24]
   1d2d4:	bl	12780 <error@plt>
   1d2d8:	bl	128d0 <__errno_location@plt>
   1d2dc:	ldr	r0, [r0]
   1d2e0:	str	r0, [fp, #-16]
   1d2e4:	bl	128d0 <__errno_location@plt>
   1d2e8:	movw	r1, #0
   1d2ec:	str	r1, [r0]
   1d2f0:	ldr	r0, [fp, #-4]
   1d2f4:	sub	r1, fp, #12
   1d2f8:	movw	r2, #10
   1d2fc:	bl	1287c <strtoul@plt>
   1d300:	str	r0, [fp, #-8]
   1d304:	ldr	r0, [fp, #-8]
   1d308:	movw	r1, #0
   1d30c:	cmp	r1, r0
   1d310:	bne	1d348 <__assert_fail@plt+0xa790>
   1d314:	ldr	r0, [fp, #-12]
   1d318:	ldr	r1, [fp, #-4]
   1d31c:	cmp	r0, r1
   1d320:	bne	1d348 <__assert_fail@plt+0xa790>
   1d324:	movw	r0, #31284	; 0x7a34
   1d328:	movt	r0, #7
   1d32c:	bl	12864 <gettext@plt>
   1d330:	movw	r1, #1
   1d334:	str	r0, [sp, #20]
   1d338:	mov	r0, r1
   1d33c:	movw	r1, #0
   1d340:	ldr	r2, [sp, #20]
   1d344:	bl	12780 <error@plt>
   1d348:	ldr	r0, [fp, #-12]
   1d34c:	ldrsb	r0, [r0]
   1d350:	cmp	r0, #0
   1d354:	beq	1d380 <__assert_fail@plt+0xa7c8>
   1d358:	movw	r0, #31337	; 0x7a69
   1d35c:	movt	r0, #7
   1d360:	bl	12864 <gettext@plt>
   1d364:	ldr	r3, [fp, #-4]
   1d368:	movw	r1, #1
   1d36c:	str	r0, [sp, #16]
   1d370:	mov	r0, r1
   1d374:	movw	r1, #0
   1d378:	ldr	r2, [sp, #16]
   1d37c:	bl	12780 <error@plt>
   1d380:	ldr	r0, [fp, #-8]
   1d384:	mvn	r1, #0
   1d388:	cmp	r1, r0
   1d38c:	bne	1d3d4 <__assert_fail@plt+0xa81c>
   1d390:	bl	128d0 <__errno_location@plt>
   1d394:	ldr	r0, [r0]
   1d398:	cmp	r0, #0
   1d39c:	beq	1d3d4 <__assert_fail@plt+0xa81c>
   1d3a0:	bl	128d0 <__errno_location@plt>
   1d3a4:	ldr	r1, [r0]
   1d3a8:	movw	r0, #31337	; 0x7a69
   1d3ac:	movt	r0, #7
   1d3b0:	str	r1, [sp, #12]
   1d3b4:	bl	12864 <gettext@plt>
   1d3b8:	ldr	r3, [fp, #-4]
   1d3bc:	movw	r1, #1
   1d3c0:	str	r0, [sp, #8]
   1d3c4:	mov	r0, r1
   1d3c8:	ldr	r1, [sp, #12]
   1d3cc:	ldr	r2, [sp, #8]
   1d3d0:	bl	12780 <error@plt>
   1d3d4:	ldr	r0, [fp, #-8]
   1d3d8:	movw	r1, #65535	; 0xffff
   1d3dc:	cmp	r0, r1
   1d3e0:	bls	1d40c <__assert_fail@plt+0xa854>
   1d3e4:	movw	r0, #31367	; 0x7a87
   1d3e8:	movt	r0, #7
   1d3ec:	bl	12864 <gettext@plt>
   1d3f0:	ldr	r3, [fp, #-8]
   1d3f4:	movw	r1, #1
   1d3f8:	str	r0, [sp, #4]
   1d3fc:	mov	r0, r1
   1d400:	movw	r1, #0
   1d404:	ldr	r2, [sp, #4]
   1d408:	bl	12780 <error@plt>
   1d40c:	ldr	r0, [fp, #-8]
   1d410:	movw	r1, #57480	; 0xe088
   1d414:	movt	r1, #8
   1d418:	strh	r0, [r1, #68]	; 0x44
   1d41c:	ldr	r0, [fp, #-16]
   1d420:	str	r0, [sp]
   1d424:	bl	128d0 <__errno_location@plt>
   1d428:	ldr	r1, [sp]
   1d42c:	str	r1, [r0]
   1d430:	b	1d434 <__assert_fail@plt+0xa87c>
   1d434:	b	1d438 <__assert_fail@plt+0xa880>
   1d438:	b	1d43c <__assert_fail@plt+0xa884>
   1d43c:	b	1d440 <__assert_fail@plt+0xa888>
   1d440:	b	1d444 <__assert_fail@plt+0xa88c>
   1d444:	mov	sp, fp
   1d448:	pop	{fp, pc}
   1d44c:	push	{fp, lr}
   1d450:	mov	fp, sp
   1d454:	sub	sp, sp, #24
   1d458:	str	r0, [fp, #-4]
   1d45c:	movw	r0, #30312	; 0x7668
   1d460:	movt	r0, #7
   1d464:	bl	127bc <getenv@plt>
   1d468:	movw	r1, #0
   1d46c:	cmp	r0, r1
   1d470:	beq	1d484 <__assert_fail@plt+0xa8cc>
   1d474:	ldr	r0, [fp, #-4]
   1d478:	movw	r1, #1
   1d47c:	strb	r1, [r0, #17]
   1d480:	b	1d490 <__assert_fail@plt+0xa8d8>
   1d484:	ldr	r0, [fp, #-4]
   1d488:	movw	r1, #0
   1d48c:	strb	r1, [r0, #17]
   1d490:	bl	1bf4c <__assert_fail@plt+0x9394>
   1d494:	ldr	r1, [fp, #-4]
   1d498:	and	r0, r0, #1
   1d49c:	strb	r0, [r1, #56]	; 0x38
   1d4a0:	ldr	r0, [fp, #-4]
   1d4a4:	movw	r1, #0
   1d4a8:	str	r1, [r0, #60]	; 0x3c
   1d4ac:	mov	r0, r1
   1d4b0:	bl	12b28 <isatty@plt>
   1d4b4:	cmp	r0, #0
   1d4b8:	beq	1d4d8 <__assert_fail@plt+0xa920>
   1d4bc:	ldr	r0, [fp, #-4]
   1d4c0:	movw	r1, #1
   1d4c4:	strb	r1, [r0, #16]
   1d4c8:	ldr	r0, [fp, #-4]
   1d4cc:	movw	r1, #0
   1d4d0:	strb	r1, [r0, #15]
   1d4d4:	b	1d4ec <__assert_fail@plt+0xa934>
   1d4d8:	ldr	r0, [fp, #-4]
   1d4dc:	movw	r1, #0
   1d4e0:	strb	r1, [r0, #16]
   1d4e4:	ldr	r0, [fp, #-4]
   1d4e8:	strb	r1, [r0, #15]
   1d4ec:	ldr	r0, [fp, #-4]
   1d4f0:	ldrb	r0, [r0, #17]
   1d4f4:	tst	r0, #1
   1d4f8:	beq	1d508 <__assert_fail@plt+0xa950>
   1d4fc:	ldr	r0, [fp, #-4]
   1d500:	movw	r1, #0
   1d504:	strb	r1, [r0, #16]
   1d508:	ldr	r0, [fp, #-4]
   1d50c:	movw	r1, #1
   1d510:	strb	r1, [r0]
   1d514:	ldr	r0, [fp, #-4]
   1d518:	movw	r1, #0
   1d51c:	strb	r1, [r0, #1]
   1d520:	ldr	r0, [fp, #-4]
   1d524:	mvn	r1, #0
   1d528:	str	r1, [r0, #8]
   1d52c:	ldr	r0, [fp, #-4]
   1d530:	str	r1, [r0, #4]
   1d534:	ldr	r0, [fp, #-4]
   1d538:	add	r1, sp, #12
   1d53c:	str	r0, [sp, #8]
   1d540:	mov	r0, r1
   1d544:	bl	1d664 <__assert_fail@plt+0xaaac>
   1d548:	ldr	r0, [pc, #272]	; 1d660 <__assert_fail@plt+0xaaa8>
   1d54c:	ldr	r1, [sp, #12]
   1d550:	ldr	r2, [sp, #8]
   1d554:	str	r1, [r2, #20]
   1d558:	ldr	r1, [sp, #16]
   1d55c:	str	r1, [r2, #24]
   1d560:	ldr	r1, [fp, #-4]
   1d564:	ldr	r1, [r1, #20]
   1d568:	sub	r0, r1, r0
   1d56c:	ldr	r1, [fp, #-4]
   1d570:	str	r0, [r1, #28]
   1d574:	ldr	r0, [fp, #-4]
   1d578:	ldr	r0, [r0, #24]
   1d57c:	ldr	r1, [fp, #-4]
   1d580:	str	r0, [r1, #32]
   1d584:	ldr	r0, [fp, #-4]
   1d588:	movw	r1, #0
   1d58c:	strb	r1, [r0, #36]	; 0x24
   1d590:	ldr	r0, [fp, #-4]
   1d594:	strb	r1, [r0, #13]
   1d598:	ldr	r0, [fp, #-4]
   1d59c:	strb	r1, [r0, #14]
   1d5a0:	ldr	r0, [fp, #-4]
   1d5a4:	ldrb	r0, [r0, #17]
   1d5a8:	tst	r0, #1
   1d5ac:	beq	1d5c0 <__assert_fail@plt+0xaa08>
   1d5b0:	ldr	r0, [fp, #-4]
   1d5b4:	movw	r1, #512	; 0x200
   1d5b8:	str	r1, [r0, #40]	; 0x28
   1d5bc:	b	1d5cc <__assert_fail@plt+0xaa14>
   1d5c0:	ldr	r0, [fp, #-4]
   1d5c4:	movw	r1, #1024	; 0x400
   1d5c8:	str	r1, [r0, #40]	; 0x28
   1d5cc:	ldr	r0, [fp, #-4]
   1d5d0:	movw	r1, #0
   1d5d4:	str	r1, [r0, #44]	; 0x2c
   1d5d8:	ldr	r0, [fp, #-4]
   1d5dc:	movw	r1, #2
   1d5e0:	strh	r1, [r0, #68]	; 0x44
   1d5e4:	movw	r0, #30328	; 0x7678
   1d5e8:	movt	r0, #7
   1d5ec:	bl	127bc <getenv@plt>
   1d5f0:	movw	r1, #0
   1d5f4:	cmp	r0, r1
   1d5f8:	beq	1d620 <__assert_fail@plt+0xaa68>
   1d5fc:	movw	r0, #30344	; 0x7688
   1d600:	movt	r0, #7
   1d604:	bl	12864 <gettext@plt>
   1d608:	movw	r1, #1
   1d60c:	str	r0, [sp, #4]
   1d610:	mov	r0, r1
   1d614:	movw	r1, #0
   1d618:	ldr	r2, [sp, #4]
   1d61c:	bl	12780 <error@plt>
   1d620:	ldr	r0, [fp, #-4]
   1d624:	movw	r1, #0
   1d628:	strb	r1, [r0, #12]
   1d62c:	movw	r0, #0
   1d630:	bl	21944 <__assert_fail@plt+0xed8c>
   1d634:	ldr	r0, [fp, #-4]
   1d638:	movw	r1, #8
   1d63c:	str	r1, [r0, #72]	; 0x48
   1d640:	ldr	r0, [fp, #-4]
   1d644:	movw	r1, #0
   1d648:	str	r1, [r0, #76]	; 0x4c
   1d64c:	ldr	r0, [fp, #-4]
   1d650:	movw	r1, #0
   1d654:	strb	r1, [r0, #80]	; 0x50
   1d658:	mov	sp, fp
   1d65c:	pop	{fp, pc}
   1d660:	andeq	r5, r1, r0, lsl #3
   1d664:	push	{fp, lr}
   1d668:	mov	fp, sp
   1d66c:	sub	sp, sp, #16
   1d670:	add	r1, sp, #8
   1d674:	str	r0, [sp]
   1d678:	mov	r0, r1
   1d67c:	movw	r1, #0
   1d680:	bl	12744 <gettimeofday@plt>
   1d684:	movw	r1, #0
   1d688:	cmp	r1, r0
   1d68c:	bne	1d6b0 <__assert_fail@plt+0xaaf8>
   1d690:	ldr	r0, [sp, #8]
   1d694:	ldr	r1, [sp]
   1d698:	str	r0, [r1]
   1d69c:	ldr	r0, [sp, #12]
   1d6a0:	movw	r2, #1000	; 0x3e8
   1d6a4:	mul	r0, r0, r2
   1d6a8:	str	r0, [r1, #4]
   1d6ac:	b	1d700 <__assert_fail@plt+0xab48>
   1d6b0:	movw	r0, #0
   1d6b4:	bl	12618 <time@plt>
   1d6b8:	str	r0, [sp, #4]
   1d6bc:	ldr	r0, [sp, #4]
   1d6c0:	cmn	r0, #1
   1d6c4:	beq	1d6cc <__assert_fail@plt+0xab14>
   1d6c8:	b	1d6ec <__assert_fail@plt+0xab34>
   1d6cc:	movw	r0, #31471	; 0x7aef
   1d6d0:	movt	r0, #7
   1d6d4:	movw	r1, #28063	; 0x6d9f
   1d6d8:	movt	r1, #7
   1d6dc:	movw	r2, #978	; 0x3d2
   1d6e0:	movw	r3, #31487	; 0x7aff
   1d6e4:	movt	r3, #7
   1d6e8:	bl	12bb8 <__assert_fail@plt>
   1d6ec:	ldr	r0, [sp, #4]
   1d6f0:	ldr	r1, [sp]
   1d6f4:	str	r0, [r1]
   1d6f8:	movw	r0, #0
   1d6fc:	str	r0, [r1, #4]
   1d700:	mov	sp, fp
   1d704:	pop	{fp, pc}
   1d708:	push	{fp, lr}
   1d70c:	mov	fp, sp
   1d710:	sub	sp, sp, #24
   1d714:	str	r0, [fp, #-8]
   1d718:	str	r1, [sp, #12]
   1d71c:	str	r2, [sp, #8]
   1d720:	ldr	r0, [sp, #8]
   1d724:	ldr	r1, [r0, #164]	; 0xa4
   1d728:	add	r1, r1, #1
   1d72c:	str	r1, [r0, #164]	; 0xa4
   1d730:	ldr	r0, [sp, #8]
   1d734:	ldrb	r0, [r0, #18]
   1d738:	tst	r0, #1
   1d73c:	bne	1d760 <__assert_fail@plt+0xaba8>
   1d740:	ldr	r0, [sp, #8]
   1d744:	ldrb	r0, [r0, #19]
   1d748:	tst	r0, #1
   1d74c:	bne	1d760 <__assert_fail@plt+0xaba8>
   1d750:	ldr	r0, [sp, #8]
   1d754:	ldrb	r0, [r0, #20]
   1d758:	tst	r0, #1
   1d75c:	beq	1d78c <__assert_fail@plt+0xabd4>
   1d760:	ldr	r0, [fp, #-8]
   1d764:	ldr	r1, [sp, #12]
   1d768:	ldr	r2, [sp, #8]
   1d76c:	bl	1d7fc <__assert_fail@plt+0xac44>
   1d770:	cmp	r0, #0
   1d774:	beq	1d788 <__assert_fail@plt+0xabd0>
   1d778:	movw	r0, #0
   1d77c:	and	r0, r0, #1
   1d780:	strb	r0, [fp, #-1]
   1d784:	b	1d7ec <__assert_fail@plt+0xac34>
   1d788:	b	1d78c <__assert_fail@plt+0xabd4>
   1d78c:	ldr	r0, [sp, #8]
   1d790:	ldr	r0, [r0]
   1d794:	ldr	r1, [fp, #-8]
   1d798:	ldr	r2, [sp, #12]
   1d79c:	ldr	r3, [sp, #8]
   1d7a0:	str	r0, [sp, #4]
   1d7a4:	mov	r0, r1
   1d7a8:	mov	r1, r2
   1d7ac:	mov	r2, r3
   1d7b0:	ldr	r3, [sp, #4]
   1d7b4:	blx	r3
   1d7b8:	tst	r0, #1
   1d7bc:	beq	1d7e0 <__assert_fail@plt+0xac28>
   1d7c0:	ldr	r0, [sp, #8]
   1d7c4:	ldr	r1, [r0, #168]	; 0xa8
   1d7c8:	add	r1, r1, #1
   1d7cc:	str	r1, [r0, #168]	; 0xa8
   1d7d0:	movw	r0, #1
   1d7d4:	and	r0, r0, #1
   1d7d8:	strb	r0, [fp, #-1]
   1d7dc:	b	1d7ec <__assert_fail@plt+0xac34>
   1d7e0:	movw	r0, #0
   1d7e4:	and	r0, r0, #1
   1d7e8:	strb	r0, [fp, #-1]
   1d7ec:	ldrb	r0, [fp, #-1]
   1d7f0:	and	r0, r0, #1
   1d7f4:	mov	sp, fp
   1d7f8:	pop	{fp, pc}
   1d7fc:	push	{fp, lr}
   1d800:	mov	fp, sp
   1d804:	sub	sp, sp, #24
   1d808:	str	r0, [fp, #-8]
   1d80c:	str	r1, [sp, #12]
   1d810:	str	r2, [sp, #8]
   1d814:	movw	r0, #0
   1d818:	strb	r0, [sp, #7]
   1d81c:	ldr	r0, [sp, #8]
   1d820:	ldrb	r0, [r0, #18]
   1d824:	tst	r0, #1
   1d828:	beq	1d84c <__assert_fail@plt+0xac94>
   1d82c:	movw	r0, #57436	; 0xe05c
   1d830:	movt	r0, #8
   1d834:	ldrb	r0, [r0, #4]
   1d838:	tst	r0, #1
   1d83c:	bne	1d84c <__assert_fail@plt+0xac94>
   1d840:	movw	r0, #1
   1d844:	strb	r0, [sp, #7]
   1d848:	b	1d8f4 <__assert_fail@plt+0xad3c>
   1d84c:	ldr	r0, [sp, #8]
   1d850:	ldrb	r0, [r0, #19]
   1d854:	tst	r0, #1
   1d858:	beq	1d87c <__assert_fail@plt+0xacc4>
   1d85c:	movw	r0, #57436	; 0xe05c
   1d860:	movt	r0, #8
   1d864:	ldrb	r0, [r0, #5]
   1d868:	tst	r0, #1
   1d86c:	bne	1d87c <__assert_fail@plt+0xacc4>
   1d870:	movw	r0, #1
   1d874:	strb	r0, [sp, #7]
   1d878:	b	1d8f0 <__assert_fail@plt+0xad38>
   1d87c:	ldr	r0, [sp, #8]
   1d880:	ldrb	r0, [r0, #20]
   1d884:	tst	r0, #1
   1d888:	beq	1d8ec <__assert_fail@plt+0xad34>
   1d88c:	ldr	r0, [sp, #12]
   1d890:	ldr	r1, [r0, #96]	; 0x60
   1d894:	ldr	r0, [r0, #100]	; 0x64
   1d898:	orr	r0, r1, r0
   1d89c:	cmp	r0, #0
   1d8a0:	bne	1d8b4 <__assert_fail@plt+0xacfc>
   1d8a4:	b	1d8a8 <__assert_fail@plt+0xacf0>
   1d8a8:	movw	r0, #1
   1d8ac:	strb	r0, [sp, #7]
   1d8b0:	b	1d8e8 <__assert_fail@plt+0xad30>
   1d8b4:	movw	r0, #57436	; 0xe05c
   1d8b8:	movt	r0, #8
   1d8bc:	ldrb	r0, [r0, #5]
   1d8c0:	tst	r0, #1
   1d8c4:	beq	1d8dc <__assert_fail@plt+0xad24>
   1d8c8:	ldr	r0, [sp, #12]
   1d8cc:	ldr	r0, [r0, #16]
   1d8d0:	and	r0, r0, #61440	; 0xf000
   1d8d4:	cmp	r0, #16384	; 0x4000
   1d8d8:	bne	1d8e4 <__assert_fail@plt+0xad2c>
   1d8dc:	movw	r0, #1
   1d8e0:	strb	r0, [sp, #7]
   1d8e4:	b	1d8e8 <__assert_fail@plt+0xad30>
   1d8e8:	b	1d8ec <__assert_fail@plt+0xad34>
   1d8ec:	b	1d8f0 <__assert_fail@plt+0xad38>
   1d8f0:	b	1d8f4 <__assert_fail@plt+0xad3c>
   1d8f4:	ldrb	r0, [sp, #7]
   1d8f8:	tst	r0, #1
   1d8fc:	beq	1d930 <__assert_fail@plt+0xad78>
   1d900:	ldr	r0, [fp, #-8]
   1d904:	movw	r1, #57436	; 0xe05c
   1d908:	movt	r1, #8
   1d90c:	ldr	r1, [r1, #12]
   1d910:	ldr	r2, [sp, #12]
   1d914:	bl	1bdcc <__assert_fail@plt+0x9214>
   1d918:	cmp	r0, #0
   1d91c:	beq	1d92c <__assert_fail@plt+0xad74>
   1d920:	mvn	r0, #0
   1d924:	str	r0, [fp, #-4]
   1d928:	b	1d938 <__assert_fail@plt+0xad80>
   1d92c:	b	1d930 <__assert_fail@plt+0xad78>
   1d930:	movw	r0, #0
   1d934:	str	r0, [fp, #-4]
   1d938:	ldr	r0, [fp, #-4]
   1d93c:	mov	sp, fp
   1d940:	pop	{fp, pc}
   1d944:	sub	sp, sp, #8
   1d948:	str	r0, [sp, #4]
   1d94c:	ldr	r0, [sp, #4]
   1d950:	movw	r1, #20740	; 0x5104
   1d954:	movt	r1, #1
   1d958:	cmp	r1, r0
   1d95c:	movw	r0, #1
   1d960:	str	r0, [sp]
   1d964:	beq	1d984 <__assert_fail@plt+0xadcc>
   1d968:	ldr	r0, [sp, #4]
   1d96c:	movw	r1, #24280	; 0x5ed8
   1d970:	movt	r1, #1
   1d974:	cmp	r1, r0
   1d978:	movw	r0, #0
   1d97c:	moveq	r0, #1
   1d980:	str	r0, [sp]
   1d984:	ldr	r0, [sp]
   1d988:	and	r0, r0, #1
   1d98c:	add	sp, sp, #8
   1d990:	bx	lr
   1d994:	push	{fp, lr}
   1d998:	mov	fp, sp
   1d99c:	sub	sp, sp, #8
   1d9a0:	str	r0, [sp, #4]
   1d9a4:	str	r1, [sp]
   1d9a8:	ldr	r0, [sp, #4]
   1d9ac:	movw	r1, #57480	; 0xe088
   1d9b0:	movt	r1, #8
   1d9b4:	ldr	r1, [r1, #72]	; 0x48
   1d9b8:	ldr	r2, [sp]
   1d9bc:	bl	487d0 <__assert_fail@plt+0x35c18>
   1d9c0:	mov	sp, fp
   1d9c4:	pop	{fp, pc}
   1d9c8:	push	{fp, lr}
   1d9cc:	mov	fp, sp
   1d9d0:	sub	sp, sp, #32
   1d9d4:	str	r0, [fp, #-4]
   1d9d8:	str	r1, [fp, #-8]
   1d9dc:	and	r0, r2, #1
   1d9e0:	strb	r0, [fp, #-9]
   1d9e4:	str	r3, [sp, #16]
   1d9e8:	ldrb	r0, [fp, #-9]
   1d9ec:	tst	r0, #1
   1d9f0:	beq	1da08 <__assert_fail@plt+0xae50>
   1d9f4:	movw	r0, #57436	; 0xe05c
   1d9f8:	movt	r0, #8
   1d9fc:	ldrb	r0, [r0, #40]	; 0x28
   1da00:	tst	r0, #1
   1da04:	bne	1da5c <__assert_fail@plt+0xaea4>
   1da08:	ldr	r0, [fp, #-4]
   1da0c:	ldr	r1, [fp, #-8]
   1da10:	ldr	r2, [sp, #16]
   1da14:	movw	r3, #0
   1da18:	str	r0, [sp, #12]
   1da1c:	mov	r0, r3
   1da20:	str	r1, [sp, #8]
   1da24:	mov	r1, r2
   1da28:	bl	1d994 <__assert_fail@plt+0xaddc>
   1da2c:	ldr	r1, [sp, #12]
   1da30:	str	r0, [sp, #4]
   1da34:	mov	r0, r1
   1da38:	ldr	r1, [sp, #8]
   1da3c:	movw	r2, #50143	; 0xc3df
   1da40:	movt	r2, #7
   1da44:	ldr	r3, [sp, #4]
   1da48:	bl	12780 <error@plt>
   1da4c:	movw	r0, #57436	; 0xe05c
   1da50:	movt	r0, #8
   1da54:	movw	r1, #1
   1da58:	str	r1, [r0, #28]
   1da5c:	ldrb	r0, [fp, #-9]
   1da60:	tst	r0, #1
   1da64:	beq	1da78 <__assert_fail@plt+0xaec0>
   1da68:	movw	r0, #57436	; 0xe05c
   1da6c:	movt	r0, #8
   1da70:	movw	r1, #1
   1da74:	strb	r1, [r0, #40]	; 0x28
   1da78:	mov	sp, fp
   1da7c:	pop	{fp, pc}
   1da80:	push	{fp, lr}
   1da84:	mov	fp, sp
   1da88:	sub	sp, sp, #8
   1da8c:	str	r0, [sp, #4]
   1da90:	str	r1, [sp]
   1da94:	ldr	r1, [sp, #4]
   1da98:	ldr	r3, [sp]
   1da9c:	movw	r0, #1
   1daa0:	movw	r2, #1
   1daa4:	and	r2, r2, #1
   1daa8:	bl	1d9c8 <__assert_fail@plt+0xae10>
   1daac:	bl	12b64 <abort@plt>
   1dab0:	push	{fp, lr}
   1dab4:	mov	fp, sp
   1dab8:	sub	sp, sp, #8
   1dabc:	str	r0, [sp, #4]
   1dac0:	str	r1, [sp]
   1dac4:	movw	r0, #57436	; 0xe05c
   1dac8:	movt	r0, #8
   1dacc:	movw	r1, #0
   1dad0:	strb	r1, [r0, #40]	; 0x28
   1dad4:	ldr	r1, [sp, #4]
   1dad8:	ldr	r3, [sp]
   1dadc:	movw	r0, #1
   1dae0:	movw	r2, #0
   1dae4:	and	r2, r2, #1
   1dae8:	bl	1d9c8 <__assert_fail@plt+0xae10>
   1daec:	bl	12b64 <abort@plt>
   1daf0:	push	{fp, lr}
   1daf4:	mov	fp, sp
   1daf8:	sub	sp, sp, #8
   1dafc:	str	r0, [sp, #4]
   1db00:	ldr	r0, [sp, #4]
   1db04:	ldr	r0, [r0, #104]	; 0x68
   1db08:	ldr	r1, [sp, #4]
   1db0c:	movw	r2, #56172	; 0xdb6c
   1db10:	movt	r2, #1
   1db14:	str	r1, [sp]
   1db18:	mov	r1, r2
   1db1c:	ldr	r2, [sp]
   1db20:	bl	28d20 <__assert_fail@plt+0x16168>
   1db24:	ldr	r1, [sp, #4]
   1db28:	ldr	r1, [r1, #104]	; 0x68
   1db2c:	movw	r2, #55112	; 0xd748
   1db30:	movt	r2, #8
   1db34:	ldr	r2, [r2]
   1db38:	cmp	r1, r2
   1db3c:	beq	1db64 <__assert_fail@plt+0xafac>
   1db40:	ldr	r0, [sp, #4]
   1db44:	ldr	r0, [r0, #104]	; 0x68
   1db48:	bl	48e64 <__assert_fail@plt+0x362ac>
   1db4c:	ldr	r0, [sp, #4]
   1db50:	ldr	r0, [r0, #104]	; 0x68
   1db54:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   1db58:	ldr	r0, [sp, #4]
   1db5c:	movw	r1, #0
   1db60:	str	r1, [r0, #104]	; 0x68
   1db64:	mov	sp, fp
   1db68:	pop	{fp, pc}
   1db6c:	push	{fp, lr}
   1db70:	mov	fp, sp
   1db74:	sub	sp, sp, #8
   1db78:	str	r0, [sp, #4]
   1db7c:	ldr	r0, [sp, #4]
   1db80:	str	r0, [sp]
   1db84:	ldr	r0, [sp]
   1db88:	add	r0, r0, #4
   1db8c:	ldr	r1, [sp]
   1db90:	add	r1, r1, #48	; 0x30
   1db94:	bl	281e8 <__assert_fail@plt+0x15630>
   1db98:	movw	r0, #0
   1db9c:	mov	sp, fp
   1dba0:	pop	{fp, pc}
   1dba4:	push	{fp, lr}
   1dba8:	mov	fp, sp
   1dbac:	sub	sp, sp, #16
   1dbb0:	str	r0, [sp, #8]
   1dbb4:	movw	r0, #8
   1dbb8:	bl	527f0 <__assert_fail@plt+0x3fc38>
   1dbbc:	str	r0, [sp, #4]
   1dbc0:	ldr	r0, [sp, #4]
   1dbc4:	movw	r1, #0
   1dbc8:	cmp	r0, r1
   1dbcc:	beq	1dc68 <__assert_fail@plt+0xb0b0>
   1dbd0:	ldr	r0, [sp, #8]
   1dbd4:	bl	12648 <strdup@plt>
   1dbd8:	ldr	r1, [sp, #4]
   1dbdc:	str	r0, [r1]
   1dbe0:	ldr	r0, [sp, #4]
   1dbe4:	ldr	r0, [r0]
   1dbe8:	movw	r1, #0
   1dbec:	cmp	r0, r1
   1dbf0:	beq	1dc5c <__assert_fail@plt+0xb0a4>
   1dbf4:	movw	r0, #11
   1dbf8:	movw	r1, #0
   1dbfc:	movw	r2, #56444	; 0xdc7c
   1dc00:	movt	r2, #1
   1dc04:	movw	r3, #56540	; 0xdcdc
   1dc08:	movt	r3, #1
   1dc0c:	movw	ip, #56688	; 0xdd70
   1dc10:	movt	ip, #1
   1dc14:	str	ip, [sp]
   1dc18:	bl	2d364 <__assert_fail@plt+0x1a7ac>
   1dc1c:	ldr	r1, [sp, #4]
   1dc20:	str	r0, [r1, #4]
   1dc24:	ldr	r0, [sp, #4]
   1dc28:	ldr	r0, [r0, #4]
   1dc2c:	movw	r1, #0
   1dc30:	cmp	r0, r1
   1dc34:	beq	1dc44 <__assert_fail@plt+0xb08c>
   1dc38:	ldr	r0, [sp, #4]
   1dc3c:	str	r0, [fp, #-4]
   1dc40:	b	1dc70 <__assert_fail@plt+0xb0b8>
   1dc44:	ldr	r0, [sp, #4]
   1dc48:	ldr	r0, [r0]
   1dc4c:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   1dc50:	ldr	r0, [sp, #4]
   1dc54:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   1dc58:	b	1dc64 <__assert_fail@plt+0xb0ac>
   1dc5c:	ldr	r0, [sp, #4]
   1dc60:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   1dc64:	b	1dc68 <__assert_fail@plt+0xb0b0>
   1dc68:	movw	r0, #0
   1dc6c:	str	r0, [fp, #-4]
   1dc70:	ldr	r0, [fp, #-4]
   1dc74:	mov	sp, fp
   1dc78:	pop	{fp, pc}
   1dc7c:	push	{fp, lr}
   1dc80:	mov	fp, sp
   1dc84:	sub	sp, sp, #24
   1dc88:	str	r0, [fp, #-4]
   1dc8c:	str	r1, [fp, #-8]
   1dc90:	ldr	r0, [fp, #-4]
   1dc94:	str	r0, [sp, #12]
   1dc98:	ldr	r0, [sp, #12]
   1dc9c:	ldr	r1, [r0]
   1dca0:	ldr	r2, [r0, #4]
   1dca4:	ldr	r3, [r0, #8]
   1dca8:	ldr	r0, [r0, #12]
   1dcac:	eor	r1, r1, r3
   1dcb0:	eor	r0, r2, r0
   1dcb4:	ldr	r2, [fp, #-8]
   1dcb8:	mov	r3, #0
   1dcbc:	str	r0, [sp, #8]
   1dcc0:	mov	r0, r1
   1dcc4:	ldr	r1, [sp, #8]
   1dcc8:	bl	7540c <__assert_fail@plt+0x62854>
   1dccc:	str	r0, [sp, #4]
   1dcd0:	mov	r0, r2
   1dcd4:	mov	sp, fp
   1dcd8:	pop	{fp, pc}
   1dcdc:	sub	sp, sp, #20
   1dce0:	str	r0, [sp, #16]
   1dce4:	str	r1, [sp, #12]
   1dce8:	ldr	r0, [sp, #16]
   1dcec:	str	r0, [sp, #8]
   1dcf0:	ldr	r0, [sp, #12]
   1dcf4:	str	r0, [sp, #4]
   1dcf8:	ldr	r0, [sp, #8]
   1dcfc:	ldr	r1, [r0, #8]
   1dd00:	ldr	r0, [r0, #12]
   1dd04:	ldr	r2, [sp, #4]
   1dd08:	ldr	r3, [r2, #8]
   1dd0c:	ldr	r2, [r2, #12]
   1dd10:	eor	r0, r0, r2
   1dd14:	eor	r1, r1, r3
   1dd18:	orr	r0, r1, r0
   1dd1c:	mov	r1, #0
   1dd20:	cmp	r0, #0
   1dd24:	str	r1, [sp]
   1dd28:	bne	1dd60 <__assert_fail@plt+0xb1a8>
   1dd2c:	b	1dd30 <__assert_fail@plt+0xb178>
   1dd30:	ldr	r0, [sp, #8]
   1dd34:	ldr	r1, [r0]
   1dd38:	ldr	r0, [r0, #4]
   1dd3c:	ldr	r2, [sp, #4]
   1dd40:	ldr	r3, [r2]
   1dd44:	ldr	r2, [r2, #4]
   1dd48:	eor	r0, r0, r2
   1dd4c:	eor	r1, r1, r3
   1dd50:	orr	r0, r1, r0
   1dd54:	clz	r0, r0
   1dd58:	lsr	r0, r0, #5
   1dd5c:	str	r0, [sp]
   1dd60:	ldr	r0, [sp]
   1dd64:	and	r0, r0, #1
   1dd68:	add	sp, sp, #20
   1dd6c:	bx	lr
   1dd70:	push	{fp, lr}
   1dd74:	mov	fp, sp
   1dd78:	sub	sp, sp, #8
   1dd7c:	str	r0, [sp, #4]
   1dd80:	ldr	r0, [sp, #4]
   1dd84:	str	r0, [sp]
   1dd88:	ldr	r0, [sp]
   1dd8c:	ldr	r0, [r0, #20]
   1dd90:	movw	r1, #0
   1dd94:	cmp	r0, r1
   1dd98:	beq	1ddcc <__assert_fail@plt+0xb214>
   1dd9c:	ldr	r0, [sp]
   1dda0:	ldr	r0, [r0, #20]
   1dda4:	bl	12990 <fclose@plt>
   1dda8:	movw	r1, #0
   1ddac:	cmp	r1, r0
   1ddb0:	beq	1ddc8 <__assert_fail@plt+0xb210>
   1ddb4:	bl	128d0 <__errno_location@plt>
   1ddb8:	ldr	r0, [r0]
   1ddbc:	ldr	r1, [sp]
   1ddc0:	ldr	r1, [r1, #16]
   1ddc4:	bl	1dab0 <__assert_fail@plt+0xaef8>
   1ddc8:	b	1ddcc <__assert_fail@plt+0xb214>
   1ddcc:	ldr	r0, [sp]
   1ddd0:	ldr	r0, [r0, #16]
   1ddd4:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   1ddd8:	ldr	r0, [sp]
   1dddc:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   1dde0:	mov	sp, fp
   1dde4:	pop	{fp, pc}
   1dde8:	push	{fp, lr}
   1ddec:	mov	fp, sp
   1ddf0:	sub	sp, sp, #8
   1ddf4:	str	r0, [sp, #4]
   1ddf8:	ldr	r0, [sp, #4]
   1ddfc:	str	r0, [sp]
   1de00:	ldr	r0, [sp]
   1de04:	ldr	r0, [r0]
   1de08:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   1de0c:	ldr	r0, [sp]
   1de10:	ldr	r0, [r0, #4]
   1de14:	bl	2d8b4 <__assert_fail@plt+0x1acfc>
   1de18:	mov	sp, fp
   1de1c:	pop	{fp, pc}
   1de20:	push	{fp, lr}
   1de24:	mov	fp, sp
   1de28:	sub	sp, sp, #152	; 0x98
   1de2c:	str	r0, [fp, #-8]
   1de30:	str	r1, [fp, #-12]
   1de34:	ldr	r0, [fp, #-8]
   1de38:	str	r0, [fp, #-16]
   1de3c:	movw	r0, #24
   1de40:	bl	527f0 <__assert_fail@plt+0x3fc38>
   1de44:	str	r0, [fp, #-20]	; 0xffffffec
   1de48:	ldr	r0, [fp, #-20]	; 0xffffffec
   1de4c:	movw	r1, #0
   1de50:	cmp	r0, r1
   1de54:	bne	1de64 <__assert_fail@plt+0xb2ac>
   1de58:	movw	r0, #0
   1de5c:	str	r0, [fp, #-4]
   1de60:	b	1e014 <__assert_fail@plt+0xb45c>
   1de64:	ldr	r0, [fp, #-12]
   1de68:	bl	12648 <strdup@plt>
   1de6c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1de70:	str	r0, [r1, #16]
   1de74:	ldr	r0, [fp, #-20]	; 0xffffffec
   1de78:	ldr	r0, [r0, #16]
   1de7c:	movw	r1, #0
   1de80:	cmp	r1, r0
   1de84:	bne	1de9c <__assert_fail@plt+0xb2e4>
   1de88:	ldr	r0, [fp, #-20]	; 0xffffffec
   1de8c:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   1de90:	movw	r0, #0
   1de94:	str	r0, [fp, #-4]
   1de98:	b	1e014 <__assert_fail@plt+0xb45c>
   1de9c:	ldr	r0, [fp, #-12]
   1dea0:	ldr	r1, [fp, #-16]
   1dea4:	ldr	r1, [r1]
   1dea8:	bl	2ca2c <__assert_fail@plt+0x19e74>
   1deac:	ldr	r1, [fp, #-20]	; 0xffffffec
   1deb0:	str	r0, [r1, #20]
   1deb4:	movw	r1, #0
   1deb8:	cmp	r1, r0
   1debc:	bne	1ded4 <__assert_fail@plt+0xb31c>
   1dec0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1dec4:	bl	1dd70 <__assert_fail@plt+0xb1b8>
   1dec8:	movw	r0, #0
   1decc:	str	r0, [fp, #-4]
   1ded0:	b	1e014 <__assert_fail@plt+0xb45c>
   1ded4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ded8:	ldr	r0, [r0, #20]
   1dedc:	bl	12948 <fileno@plt>
   1dee0:	str	r0, [sp, #20]
   1dee4:	ldr	r0, [sp, #20]
   1dee8:	cmp	r0, #0
   1deec:	blt	1def4 <__assert_fail@plt+0xb33c>
   1def0:	b	1df14 <__assert_fail@plt+0xb35c>
   1def4:	movw	r0, #22978	; 0x59c2
   1def8:	movt	r0, #7
   1defc:	movw	r1, #31513	; 0x7b19
   1df00:	movt	r1, #7
   1df04:	movw	r2, #166	; 0xa6
   1df08:	movw	r3, #31525	; 0x7b25
   1df0c:	movt	r3, #7
   1df10:	bl	12bb8 <__assert_fail@plt>
   1df14:	ldr	r0, [sp, #20]
   1df18:	movw	r1, #1
   1df1c:	and	r1, r1, #1
   1df20:	bl	2bf20 <__assert_fail@plt+0x19368>
   1df24:	ldr	r1, [sp, #20]
   1df28:	str	r0, [sp, #8]
   1df2c:	mov	r0, r1
   1df30:	add	r1, sp, #24
   1df34:	bl	7564c <__assert_fail@plt+0x62a94>
   1df38:	cmp	r0, #0
   1df3c:	bge	1df54 <__assert_fail@plt+0xb39c>
   1df40:	ldr	r0, [fp, #-20]	; 0xffffffec
   1df44:	bl	1dd70 <__assert_fail@plt+0xb1b8>
   1df48:	movw	r0, #0
   1df4c:	str	r0, [fp, #-4]
   1df50:	b	1e014 <__assert_fail@plt+0xb45c>
   1df54:	ldr	r0, [sp, #24]
   1df58:	ldr	r1, [sp, #28]
   1df5c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1df60:	str	r1, [r2, #4]
   1df64:	str	r0, [r2]
   1df68:	ldr	r0, [sp, #120]	; 0x78
   1df6c:	ldr	r1, [sp, #124]	; 0x7c
   1df70:	ldr	r2, [fp, #-20]	; 0xffffffec
   1df74:	str	r1, [r2, #12]
   1df78:	str	r0, [r2, #8]
   1df7c:	ldr	r0, [fp, #-16]
   1df80:	ldr	r0, [r0, #4]
   1df84:	ldr	r1, [fp, #-20]	; 0xffffffec
   1df88:	bl	2ce48 <__assert_fail@plt+0x1a290>
   1df8c:	str	r0, [sp, #16]
   1df90:	ldr	r0, [sp, #16]
   1df94:	movw	r1, #0
   1df98:	cmp	r0, r1
   1df9c:	beq	1dfb8 <__assert_fail@plt+0xb400>
   1dfa0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1dfa4:	bl	1dd70 <__assert_fail@plt+0xb1b8>
   1dfa8:	ldr	r0, [sp, #16]
   1dfac:	ldr	r0, [r0, #20]
   1dfb0:	str	r0, [fp, #-4]
   1dfb4:	b	1e014 <__assert_fail@plt+0xb45c>
   1dfb8:	ldr	r0, [fp, #-16]
   1dfbc:	ldr	r0, [r0, #4]
   1dfc0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1dfc4:	bl	2e388 <__assert_fail@plt+0x1b7d0>
   1dfc8:	movw	r1, #0
   1dfcc:	cmp	r0, r1
   1dfd0:	beq	1dfe4 <__assert_fail@plt+0xb42c>
   1dfd4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1dfd8:	ldr	r0, [r0, #20]
   1dfdc:	str	r0, [fp, #-4]
   1dfe0:	b	1e014 <__assert_fail@plt+0xb45c>
   1dfe4:	bl	128d0 <__errno_location@plt>
   1dfe8:	ldr	r0, [r0]
   1dfec:	str	r0, [sp, #12]
   1dff0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1dff4:	bl	1dd70 <__assert_fail@plt+0xb1b8>
   1dff8:	ldr	r0, [sp, #12]
   1dffc:	str	r0, [sp, #4]
   1e000:	bl	128d0 <__errno_location@plt>
   1e004:	ldr	r1, [sp, #4]
   1e008:	str	r1, [r0]
   1e00c:	movw	r0, #0
   1e010:	str	r0, [fp, #-4]
   1e014:	ldr	r0, [fp, #-4]
   1e018:	mov	sp, fp
   1e01c:	pop	{fp, pc}
   1e020:	push	{r4, sl, fp, lr}
   1e024:	add	fp, sp, #8
   1e028:	sub	sp, sp, #40	; 0x28
   1e02c:	ldr	ip, [fp, #16]
   1e030:	ldr	lr, [fp, #12]
   1e034:	ldr	r4, [fp, #8]
   1e038:	str	r0, [fp, #-16]
   1e03c:	str	r1, [fp, #-20]	; 0xffffffec
   1e040:	str	r2, [sp, #24]
   1e044:	str	r3, [sp, #20]
   1e048:	strb	r4, [sp, #19]
   1e04c:	strb	lr, [sp, #18]
   1e050:	movw	r0, #0
   1e054:	str	r0, [sp, #12]
   1e058:	ldrb	r0, [sp, #19]
   1e05c:	cmp	r0, #123	; 0x7b
   1e060:	beq	1e068 <__assert_fail@plt+0xb4b0>
   1e064:	b	1e088 <__assert_fail@plt+0xb4d0>
   1e068:	movw	r0, #31579	; 0x7b5b
   1e06c:	movt	r0, #7
   1e070:	movw	r1, #31598	; 0x7b6e
   1e074:	movt	r1, #7
   1e078:	movw	r2, #78	; 0x4e
   1e07c:	movw	r3, #31606	; 0x7b76
   1e080:	movt	r3, #7
   1e084:	bl	12bb8 <__assert_fail@plt>
   1e088:	ldrb	r0, [sp, #19]
   1e08c:	cmp	r0, #91	; 0x5b
   1e090:	beq	1e098 <__assert_fail@plt+0xb4e0>
   1e094:	b	1e0b8 <__assert_fail@plt+0xb500>
   1e098:	movw	r0, #31705	; 0x7bd9
   1e09c:	movt	r0, #7
   1e0a0:	movw	r1, #31598	; 0x7b6e
   1e0a4:	movt	r1, #7
   1e0a8:	movw	r2, #79	; 0x4f
   1e0ac:	movw	r3, #31606	; 0x7b76
   1e0b0:	movt	r3, #7
   1e0b4:	bl	12bb8 <__assert_fail@plt>
   1e0b8:	ldrb	r0, [sp, #19]
   1e0bc:	cmp	r0, #40	; 0x28
   1e0c0:	beq	1e0c8 <__assert_fail@plt+0xb510>
   1e0c4:	b	1e0e8 <__assert_fail@plt+0xb530>
   1e0c8:	movw	r0, #31724	; 0x7bec
   1e0cc:	movt	r0, #7
   1e0d0:	movw	r1, #31598	; 0x7b6e
   1e0d4:	movt	r1, #7
   1e0d8:	movw	r2, #80	; 0x50
   1e0dc:	movw	r3, #31606	; 0x7b76
   1e0e0:	movt	r3, #7
   1e0e4:	bl	12bb8 <__assert_fail@plt>
   1e0e8:	movw	r0, #20
   1e0ec:	bl	4a2f0 <__assert_fail@plt+0x37738>
   1e0f0:	ldr	r1, [fp, #-16]
   1e0f4:	str	r0, [r1]
   1e0f8:	ldr	r0, [sp, #20]
   1e0fc:	ldr	r1, [fp, #-16]
   1e100:	ldr	r1, [r1]
   1e104:	str	r0, [r1]
   1e108:	ldrb	r0, [sp, #19]
   1e10c:	ldr	r1, [fp, #-16]
   1e110:	ldr	r1, [r1]
   1e114:	strb	r0, [r1, #4]
   1e118:	ldrb	r0, [sp, #18]
   1e11c:	ldr	r1, [fp, #-16]
   1e120:	ldr	r1, [r1]
   1e124:	strb	r0, [r1, #5]
   1e128:	ldr	r0, [fp, #-16]
   1e12c:	ldr	r0, [r0]
   1e130:	movw	r1, #0
   1e134:	str	r1, [r0, #16]
   1e138:	ldr	r0, [sp, #24]
   1e13c:	ldr	r1, [fp, #-16]
   1e140:	ldr	r1, [r1]
   1e144:	str	r0, [r1, #12]
   1e148:	ldr	r0, [sp, #24]
   1e14c:	add	r0, r0, #2
   1e150:	bl	4a2f0 <__assert_fail@plt+0x37738>
   1e154:	ldr	r1, [fp, #-16]
   1e158:	ldr	r1, [r1]
   1e15c:	str	r0, [r1, #8]
   1e160:	str	r0, [sp, #8]
   1e164:	ldr	r0, [sp, #8]
   1e168:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e16c:	ldr	r2, [sp, #24]
   1e170:	bl	12918 <strncpy@plt>
   1e174:	ldr	r1, [sp, #24]
   1e178:	ldr	r2, [sp, #8]
   1e17c:	add	r1, r2, r1
   1e180:	str	r1, [sp, #8]
   1e184:	ldr	r1, [sp, #20]
   1e188:	cmp	r1, #0
   1e18c:	beq	1e19c <__assert_fail@plt+0xb5e4>
   1e190:	ldr	r0, [sp, #20]
   1e194:	cmp	r0, #1
   1e198:	bne	1e244 <__assert_fail@plt+0xb68c>
   1e19c:	ldrb	r0, [sp, #19]
   1e1a0:	movw	r1, #0
   1e1a4:	cmp	r1, r0
   1e1a8:	bne	1e1b0 <__assert_fail@plt+0xb5f8>
   1e1ac:	b	1e1d0 <__assert_fail@plt+0xb618>
   1e1b0:	movw	r0, #31743	; 0x7bff
   1e1b4:	movt	r0, #7
   1e1b8:	movw	r1, #31598	; 0x7b6e
   1e1bc:	movt	r1, #7
   1e1c0:	movw	r2, #97	; 0x61
   1e1c4:	movw	r3, #31606	; 0x7b76
   1e1c8:	movt	r3, #7
   1e1cc:	bl	12bb8 <__assert_fail@plt>
   1e1d0:	ldrb	r0, [sp, #18]
   1e1d4:	movw	r1, #0
   1e1d8:	cmp	r1, r0
   1e1dc:	bne	1e1e4 <__assert_fail@plt+0xb62c>
   1e1e0:	b	1e204 <__assert_fail@plt+0xb64c>
   1e1e4:	movw	r0, #31760	; 0x7c10
   1e1e8:	movt	r0, #7
   1e1ec:	movw	r1, #31598	; 0x7b6e
   1e1f0:	movt	r1, #7
   1e1f4:	movw	r2, #98	; 0x62
   1e1f8:	movw	r3, #31606	; 0x7b76
   1e1fc:	movt	r3, #7
   1e200:	bl	12bb8 <__assert_fail@plt>
   1e204:	ldr	r0, [sp, #8]
   1e208:	movw	r1, #0
   1e20c:	strb	r1, [r0]
   1e210:	ldr	r0, [sp, #12]
   1e214:	ldr	r1, [fp, #16]
   1e218:	ldr	r1, [r1, #24]
   1e21c:	cmp	r0, r1
   1e220:	bls	1e230 <__assert_fail@plt+0xb678>
   1e224:	ldr	r0, [fp, #16]
   1e228:	movw	r1, #0
   1e22c:	str	r1, [r0, #24]
   1e230:	ldr	r0, [fp, #-16]
   1e234:	ldr	r0, [r0]
   1e238:	add	r0, r0, #16
   1e23c:	str	r0, [fp, #-12]
   1e240:	b	1e604 <__assert_fail@plt+0xba4c>
   1e244:	ldr	r0, [sp, #20]
   1e248:	cmp	r0, #2
   1e24c:	bne	1e254 <__assert_fail@plt+0xb69c>
   1e250:	b	1e274 <__assert_fail@plt+0xb6bc>
   1e254:	movw	r0, #31781	; 0x7c25
   1e258:	movt	r0, #7
   1e25c:	movw	r1, #31598	; 0x7b6e
   1e260:	movt	r1, #7
   1e264:	movw	r2, #105	; 0x69
   1e268:	movw	r3, #31606	; 0x7b76
   1e26c:	movt	r3, #7
   1e270:	bl	12bb8 <__assert_fail@plt>
   1e274:	ldrb	r0, [sp, #19]
   1e278:	sub	r0, r0, #37	; 0x25
   1e27c:	cmp	r0, #84	; 0x54
   1e280:	str	r0, [sp, #4]
   1e284:	bhi	1e5c8 <__assert_fail@plt+0xba10>
   1e288:	add	r0, pc, #8
   1e28c:	ldr	r1, [sp, #4]
   1e290:	ldr	r0, [r0, r1, lsl #2]
   1e294:	mov	pc, r0
   1e298:	andeq	lr, r1, ip, ror #7
   1e29c:	andeq	lr, r1, r8, asr #11
   1e2a0:	andeq	lr, r1, r8, asr #11
   1e2a4:	andeq	lr, r1, r8, asr #11
   1e2a8:	andeq	lr, r1, r8, asr #11
   1e2ac:	andeq	lr, r1, r8, asr #11
   1e2b0:	andeq	lr, r1, r8, asr #11
   1e2b4:	andeq	lr, r1, r8, asr #11
   1e2b8:	andeq	lr, r1, r8, asr #11
   1e2bc:	andeq	lr, r1, r8, asr #11
   1e2c0:	andeq	lr, r1, r8, asr #11
   1e2c4:	andeq	lr, r1, r8, asr #11
   1e2c8:	andeq	lr, r1, r8, asr #11
   1e2cc:	andeq	lr, r1, r8, asr #11
   1e2d0:	andeq	lr, r1, r8, asr #11
   1e2d4:	andeq	lr, r1, r8, asr #11
   1e2d8:	andeq	lr, r1, r8, asr #11
   1e2dc:	andeq	lr, r1, r8, asr #11
   1e2e0:	andeq	lr, r1, r8, asr #11
   1e2e4:	andeq	lr, r1, r8, asr #11
   1e2e8:	andeq	lr, r1, r8, asr #11
   1e2ec:	andeq	lr, r1, r8, asr #11
   1e2f0:	andeq	lr, r1, r8, asr #11
   1e2f4:	andeq	lr, r1, r8, asr #11
   1e2f8:	andeq	lr, r1, r8, asr #11
   1e2fc:	andeq	lr, r1, r8, asr #11
   1e300:	andeq	lr, r1, r8, asr #11
   1e304:	andeq	lr, r1, r8, asr #11
   1e308:	andeq	lr, r1, r8, lsl #9
   1e30c:	andeq	lr, r1, r8, lsl #9
   1e310:	andeq	lr, r1, r8, lsl #9
   1e314:	andeq	lr, r1, ip, asr r5
   1e318:	andeq	lr, r1, r8, asr #11
   1e31c:	andeq	lr, r1, r8, lsl #9
   1e320:	andeq	lr, r1, ip, asr r5
   1e324:	andeq	lr, r1, r4, asr #10
   1e328:	andeq	lr, r1, r8, asr #11
   1e32c:	andeq	lr, r1, r8, asr #11
   1e330:	andeq	lr, r1, r8, asr #11
   1e334:	andeq	lr, r1, r8, asr #11
   1e338:	andeq	lr, r1, r8, lsl #9
   1e33c:	andeq	lr, r1, r8, asr #11
   1e340:	andeq	lr, r1, r8, asr #11
   1e344:	andeq	lr, r1, ip, lsl #10
   1e348:	andeq	lr, r1, r8, asr #11
   1e34c:	andeq	lr, r1, r8, asr #11
   1e350:			; <UNDEFINED> instruction: 0x0001e4b4
   1e354:	andeq	lr, r1, r8, lsl #9
   1e358:	andeq	lr, r1, ip, asr r5
   1e35c:	andeq	lr, r1, r8, asr #11
   1e360:	andeq	lr, r1, r8, asr #11
   1e364:	andeq	lr, r1, r8, asr #11
   1e368:	andeq	lr, r1, r0, ror #9
   1e36c:	andeq	lr, r1, r4, lsr #10
   1e370:	andeq	lr, r1, r8, asr #11
   1e374:	andeq	lr, r1, r8, asr #11
   1e378:	andeq	lr, r1, r8, asr #11
   1e37c:	andeq	lr, r1, r8, asr #11
   1e380:	andeq	lr, r1, r8, asr #11
   1e384:	andeq	lr, r1, r8, asr #11
   1e388:	andeq	lr, r1, r8, lsl #9
   1e38c:	andeq	lr, r1, ip, asr r5
   1e390:	andeq	lr, r1, r8, lsl #9
   1e394:	andeq	lr, r1, r8, lsl #11
   1e398:	andeq	lr, r1, r8, asr #11
   1e39c:	andeq	lr, r1, ip, lsl #10
   1e3a0:	andeq	lr, r1, r8, lsl #9
   1e3a4:	andeq	lr, r1, ip, lsl #10
   1e3a8:	andeq	lr, r1, ip, asr r4
   1e3ac:	andeq	lr, r1, r8, asr #11
   1e3b0:	andeq	lr, r1, ip, asr r5
   1e3b4:	andeq	lr, r1, r4, lsl #8
   1e3b8:	andeq	lr, r1, r0, lsr #11
   1e3bc:	andeq	lr, r1, ip, asr r5
   1e3c0:	andeq	lr, r1, r8, asr #11
   1e3c4:	andeq	lr, r1, ip, lsl #10
   1e3c8:	andeq	lr, r1, r8, asr #11
   1e3cc:	andeq	lr, r1, r8, asr #11
   1e3d0:	andeq	lr, r1, r8, lsl #9
   1e3d4:	andeq	lr, r1, r8, lsl #9
   1e3d8:	andeq	lr, r1, r8, lsl #9
   1e3dc:	andeq	lr, r1, r8, asr #11
   1e3e0:	andeq	lr, r1, r8, asr #11
   1e3e4:	andeq	lr, r1, r8, asr #11
   1e3e8:	andeq	lr, r1, r0, lsr r4
   1e3ec:	ldr	r0, [sp, #8]
   1e3f0:	add	r1, r0, #1
   1e3f4:	str	r1, [sp, #8]
   1e3f8:	movw	r1, #37	; 0x25
   1e3fc:	strb	r1, [r0]
   1e400:	b	1e5c8 <__assert_fail@plt+0xba10>
   1e404:	ldr	r0, [fp, #16]
   1e408:	movw	r1, #1
   1e40c:	strb	r1, [r0, #18]
   1e410:	movw	r0, #4
   1e414:	str	r0, [sp, #12]
   1e418:	ldr	r0, [sp, #8]
   1e41c:	add	r1, r0, #1
   1e420:	str	r1, [sp, #8]
   1e424:	movw	r1, #115	; 0x73
   1e428:	strb	r1, [r0]
   1e42c:	b	1e5c8 <__assert_fail@plt+0xba10>
   1e430:	ldr	r0, [fp, #16]
   1e434:	movw	r1, #1
   1e438:	strb	r1, [r0, #19]
   1e43c:	movw	r0, #2
   1e440:	str	r0, [sp, #12]
   1e444:	ldr	r0, [sp, #8]
   1e448:	add	r1, r0, #1
   1e44c:	str	r1, [sp, #8]
   1e450:	movw	r1, #115	; 0x73
   1e454:	strb	r1, [r0]
   1e458:	b	1e5c8 <__assert_fail@plt+0xba10>
   1e45c:	ldr	r0, [fp, #16]
   1e460:	movw	r1, #1
   1e464:	strb	r1, [r0, #20]
   1e468:	movw	r0, #1
   1e46c:	str	r0, [sp, #12]
   1e470:	ldr	r0, [sp, #8]
   1e474:	add	r1, r0, #1
   1e478:	str	r1, [sp, #8]
   1e47c:	movw	r1, #115	; 0x73
   1e480:	strb	r1, [r0]
   1e484:	b	1e5c8 <__assert_fail@plt+0xba10>
   1e488:	ldr	r0, [fp, #16]
   1e48c:	movw	r1, #1
   1e490:	strb	r1, [r0, #18]
   1e494:	movw	r0, #3
   1e498:	str	r0, [sp, #12]
   1e49c:	ldr	r0, [sp, #8]
   1e4a0:	add	r1, r0, #1
   1e4a4:	str	r1, [sp, #8]
   1e4a8:	movw	r1, #115	; 0x73
   1e4ac:	strb	r1, [r0]
   1e4b0:	b	1e5c8 <__assert_fail@plt+0xba10>
   1e4b4:	ldr	r0, [fp, #16]
   1e4b8:	movw	r1, #1
   1e4bc:	strb	r1, [r0, #18]
   1e4c0:	movw	r0, #3
   1e4c4:	str	r0, [sp, #12]
   1e4c8:	ldr	r0, [sp, #8]
   1e4cc:	add	r1, r0, #1
   1e4d0:	str	r1, [sp, #8]
   1e4d4:	movw	r1, #103	; 0x67
   1e4d8:	strb	r1, [r0]
   1e4dc:	b	1e5c8 <__assert_fail@plt+0xba10>
   1e4e0:	ldr	r0, [fp, #16]
   1e4e4:	movw	r1, #1
   1e4e8:	strb	r1, [r0, #18]
   1e4ec:	movw	r0, #2
   1e4f0:	str	r0, [sp, #12]
   1e4f4:	ldr	r0, [sp, #8]
   1e4f8:	add	r1, r0, #1
   1e4fc:	str	r1, [sp, #8]
   1e500:	movw	r1, #115	; 0x73
   1e504:	strb	r1, [r0]
   1e508:	b	1e5c8 <__assert_fail@plt+0xba10>
   1e50c:	ldr	r0, [sp, #8]
   1e510:	add	r1, r0, #1
   1e514:	str	r1, [sp, #8]
   1e518:	movw	r1, #115	; 0x73
   1e51c:	strb	r1, [r0]
   1e520:	b	1e5c8 <__assert_fail@plt+0xba10>
   1e524:	movw	r0, #5
   1e528:	str	r0, [sp, #12]
   1e52c:	ldr	r0, [sp, #8]
   1e530:	add	r1, r0, #1
   1e534:	str	r1, [sp, #8]
   1e538:	movw	r1, #115	; 0x73
   1e53c:	strb	r1, [r0]
   1e540:	b	1e5c8 <__assert_fail@plt+0xba10>
   1e544:	ldr	r0, [sp, #8]
   1e548:	add	r1, r0, #1
   1e54c:	str	r1, [sp, #8]
   1e550:	movw	r1, #115	; 0x73
   1e554:	strb	r1, [r0]
   1e558:	b	1e5c8 <__assert_fail@plt+0xba10>
   1e55c:	ldr	r0, [fp, #16]
   1e560:	movw	r1, #1
   1e564:	strb	r1, [r0, #18]
   1e568:	movw	r0, #3
   1e56c:	str	r0, [sp, #12]
   1e570:	ldr	r0, [sp, #8]
   1e574:	add	r1, r0, #1
   1e578:	str	r1, [sp, #8]
   1e57c:	movw	r1, #115	; 0x73
   1e580:	strb	r1, [r0]
   1e584:	b	1e5c8 <__assert_fail@plt+0xba10>
   1e588:	ldr	r0, [sp, #8]
   1e58c:	add	r1, r0, #1
   1e590:	str	r1, [sp, #8]
   1e594:	movw	r1, #100	; 0x64
   1e598:	strb	r1, [r0]
   1e59c:	b	1e5c8 <__assert_fail@plt+0xba10>
   1e5a0:	ldr	r0, [sp, #8]
   1e5a4:	add	r1, r0, #1
   1e5a8:	str	r1, [sp, #8]
   1e5ac:	movw	r1, #111	; 0x6f
   1e5b0:	strb	r1, [r0]
   1e5b4:	ldr	r0, [fp, #16]
   1e5b8:	movw	r1, #1
   1e5bc:	strb	r1, [r0, #18]
   1e5c0:	movw	r0, #3
   1e5c4:	str	r0, [sp, #12]
   1e5c8:	ldr	r0, [sp, #8]
   1e5cc:	movw	r1, #0
   1e5d0:	strb	r1, [r0]
   1e5d4:	ldr	r0, [sp, #12]
   1e5d8:	ldr	r1, [fp, #16]
   1e5dc:	ldr	r1, [r1, #24]
   1e5e0:	cmp	r0, r1
   1e5e4:	bls	1e5f4 <__assert_fail@plt+0xba3c>
   1e5e8:	ldr	r0, [sp, #12]
   1e5ec:	ldr	r1, [fp, #16]
   1e5f0:	str	r0, [r1, #24]
   1e5f4:	ldr	r0, [fp, #-16]
   1e5f8:	ldr	r0, [r0]
   1e5fc:	add	r0, r0, #16
   1e600:	str	r0, [fp, #-12]
   1e604:	ldr	r0, [fp, #-12]
   1e608:	sub	sp, fp, #8
   1e60c:	pop	{r4, sl, fp, pc}
   1e610:	push	{r4, r5, fp, lr}
   1e614:	add	fp, sp, #8
   1e618:	sub	sp, sp, #112	; 0x70
   1e61c:	str	r0, [fp, #-16]
   1e620:	str	r1, [fp, #-20]	; 0xffffffec
   1e624:	str	r2, [fp, #-24]	; 0xffffffe8
   1e628:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e62c:	str	r0, [fp, #-28]	; 0xffffffe4
   1e630:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e634:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e638:	movw	r1, #60408	; 0xebf8
   1e63c:	movt	r1, #1
   1e640:	bl	1b924 <__assert_fail@plt+0x8d6c>
   1e644:	str	r0, [fp, #-40]	; 0xffffffd8
   1e648:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e64c:	movw	r1, #1
   1e650:	strb	r1, [r0, #17]
   1e654:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e658:	strb	r1, [r0, #16]
   1e65c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e660:	add	r0, r0, #40	; 0x28
   1e664:	ldr	r1, [fp, #-16]
   1e668:	movw	r2, #20
   1e66c:	bl	125c4 <memcpy@plt>
   1e670:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e674:	movw	r1, #0
   1e678:	strb	r1, [r0, #19]
   1e67c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e680:	strb	r1, [r0, #18]
   1e684:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e688:	movw	r1, #0
   1e68c:	str	r1, [r0, #24]
   1e690:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e694:	add	r0, r0, #40	; 0x28
   1e698:	str	r0, [fp, #-36]	; 0xffffffdc
   1e69c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e6a0:	str	r1, [r0]
   1e6a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e6a8:	str	r0, [fp, #-32]	; 0xffffffe0
   1e6ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e6b0:	ldrsb	r0, [r0]
   1e6b4:	cmp	r0, #0
   1e6b8:	beq	1eb88 <__assert_fail@plt+0xbfd0>
   1e6bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e6c0:	ldrb	r0, [r0]
   1e6c4:	cmp	r0, #92	; 0x5c
   1e6c8:	bne	1e75c <__assert_fail@plt+0xbba4>
   1e6cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e6d0:	ldrb	r0, [r0, #1]
   1e6d4:	cmp	r0, #99	; 0x63
   1e6d8:	bne	1e75c <__assert_fail@plt+0xbba4>
   1e6dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e6e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e6e4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e6e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e6ec:	sub	r2, r2, r3
   1e6f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e6f4:	movw	ip, #1
   1e6f8:	str	r3, [sp, #56]	; 0x38
   1e6fc:	mov	r3, ip
   1e700:	movw	ip, #0
   1e704:	and	lr, ip, #255	; 0xff
   1e708:	str	lr, [sp]
   1e70c:	and	ip, ip, #255	; 0xff
   1e710:	str	ip, [sp, #4]
   1e714:	ldr	ip, [sp, #56]	; 0x38
   1e718:	str	ip, [sp, #8]
   1e71c:	bl	1e020 <__assert_fail@plt+0xb468>
   1e720:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1e724:	ldrb	r1, [r1, #18]
   1e728:	tst	r1, #1
   1e72c:	beq	1e74c <__assert_fail@plt+0xbb94>
   1e730:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e734:	ldr	r0, [r0, #24]
   1e738:	cmp	r0, #3
   1e73c:	bcs	1e74c <__assert_fail@plt+0xbb94>
   1e740:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e744:	movw	r1, #3
   1e748:	str	r1, [r0, #24]
   1e74c:	movw	r0, #1
   1e750:	and	r0, r0, #1
   1e754:	strb	r0, [fp, #-9]
   1e758:	b	1ebe8 <__assert_fail@plt+0xc030>
   1e75c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e760:	ldrb	r0, [r0]
   1e764:	cmp	r0, #92	; 0x5c
   1e768:	bne	1e908 <__assert_fail@plt+0xbd50>
   1e76c:	movw	r0, #1
   1e770:	str	r0, [fp, #-44]	; 0xffffffd4
   1e774:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e778:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1e77c:	add	r0, r0, r1
   1e780:	ldrsb	r0, [r0]
   1e784:	cmp	r0, #0
   1e788:	bne	1e7c0 <__assert_fail@plt+0xbc08>
   1e78c:	movw	r0, #31801	; 0x7c39
   1e790:	movt	r0, #7
   1e794:	bl	12864 <gettext@plt>
   1e798:	movw	r1, #0
   1e79c:	str	r0, [sp, #52]	; 0x34
   1e7a0:	mov	r0, r1
   1e7a4:	ldr	r2, [sp, #52]	; 0x34
   1e7a8:	bl	12780 <error@plt>
   1e7ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1e7b0:	mvn	r1, #0
   1e7b4:	add	r0, r0, r1
   1e7b8:	str	r0, [fp, #-44]	; 0xffffffd4
   1e7bc:	b	1e894 <__assert_fail@plt+0xbcdc>
   1e7c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e7c4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1e7c8:	add	r0, r0, r1
   1e7cc:	ldrb	r0, [r0]
   1e7d0:	bl	1ee80 <__assert_fail@plt+0xc2c8>
   1e7d4:	tst	r0, #1
   1e7d8:	beq	1e814 <__assert_fail@plt+0xbc5c>
   1e7dc:	movw	r0, #0
   1e7e0:	str	r0, [fp, #-48]	; 0xffffffd0
   1e7e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e7e8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1e7ec:	add	r0, r0, r1
   1e7f0:	sub	r1, fp, #48	; 0x30
   1e7f4:	bl	1eec0 <__assert_fail@plt+0xc308>
   1e7f8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1e7fc:	strb	r0, [r1]
   1e800:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1e804:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1e808:	add	r0, r1, r0
   1e80c:	str	r0, [fp, #-44]	; 0xffffffd4
   1e810:	b	1e890 <__assert_fail@plt+0xbcd8>
   1e814:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e818:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1e81c:	add	r0, r0, r1
   1e820:	ldrb	r0, [r0]
   1e824:	bl	1ef88 <__assert_fail@plt+0xc3d0>
   1e828:	strb	r0, [fp, #-49]	; 0xffffffcf
   1e82c:	ldrsb	r0, [fp, #-49]	; 0xffffffcf
   1e830:	cmp	r0, #0
   1e834:	beq	1e848 <__assert_fail@plt+0xbc90>
   1e838:	ldrb	r0, [fp, #-49]	; 0xffffffcf
   1e83c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1e840:	strb	r0, [r1]
   1e844:	b	1e88c <__assert_fail@plt+0xbcd4>
   1e848:	movw	r0, #31848	; 0x7c68
   1e84c:	movt	r0, #7
   1e850:	bl	12864 <gettext@plt>
   1e854:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1e858:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1e85c:	add	r1, r1, r2
   1e860:	ldrb	r3, [r1]
   1e864:	movw	r1, #0
   1e868:	str	r0, [sp, #48]	; 0x30
   1e86c:	mov	r0, r1
   1e870:	ldr	r2, [sp, #48]	; 0x30
   1e874:	bl	12780 <error@plt>
   1e878:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1e87c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1e880:	add	r0, r1, r0
   1e884:	str	r0, [fp, #-32]	; 0xffffffe0
   1e888:	b	1eb78 <__assert_fail@plt+0xbfc0>
   1e88c:	b	1e890 <__assert_fail@plt+0xbcd8>
   1e890:	b	1e894 <__assert_fail@plt+0xbcdc>
   1e894:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e898:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e89c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e8a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e8a4:	sub	r2, r2, r3
   1e8a8:	add	r2, r2, #1
   1e8ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e8b0:	movw	ip, #0
   1e8b4:	str	r3, [sp, #44]	; 0x2c
   1e8b8:	mov	r3, ip
   1e8bc:	movw	ip, #0
   1e8c0:	and	lr, ip, #255	; 0xff
   1e8c4:	str	lr, [sp]
   1e8c8:	and	ip, ip, #255	; 0xff
   1e8cc:	str	ip, [sp, #4]
   1e8d0:	ldr	ip, [sp, #44]	; 0x2c
   1e8d4:	str	ip, [sp, #8]
   1e8d8:	bl	1e020 <__assert_fail@plt+0xb468>
   1e8dc:	str	r0, [fp, #-36]	; 0xffffffdc
   1e8e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e8e4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1e8e8:	add	r0, r0, r1
   1e8ec:	add	r0, r0, #1
   1e8f0:	str	r0, [fp, #-28]	; 0xffffffe4
   1e8f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1e8f8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1e8fc:	add	r0, r1, r0
   1e900:	str	r0, [fp, #-32]	; 0xffffffe0
   1e904:	b	1eb70 <__assert_fail@plt+0xbfb8>
   1e908:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e90c:	ldrb	r0, [r0]
   1e910:	cmp	r0, #37	; 0x25
   1e914:	bne	1eb6c <__assert_fail@plt+0xbfb4>
   1e918:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e91c:	ldrb	r0, [r0, #1]
   1e920:	cmp	r0, #0
   1e924:	bne	1e950 <__assert_fail@plt+0xbd98>
   1e928:	movw	r0, #31883	; 0x7c8b
   1e92c:	movt	r0, #7
   1e930:	bl	12864 <gettext@plt>
   1e934:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e938:	movw	r1, #1
   1e93c:	str	r0, [sp, #40]	; 0x28
   1e940:	mov	r0, r1
   1e944:	movw	r1, #0
   1e948:	ldr	r2, [sp, #40]	; 0x28
   1e94c:	bl	12780 <error@plt>
   1e950:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e954:	ldrb	r0, [r0, #1]
   1e958:	cmp	r0, #37	; 0x25
   1e95c:	bne	1e96c <__assert_fail@plt+0xbdb4>
   1e960:	movw	r0, #1
   1e964:	str	r0, [fp, #-56]	; 0xffffffc8
   1e968:	b	1e978 <__assert_fail@plt+0xbdc0>
   1e96c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e970:	bl	1f090 <__assert_fail@plt+0xc4d8>
   1e974:	str	r0, [fp, #-56]	; 0xffffffc8
   1e978:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e97c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1e980:	add	r0, r1, r0
   1e984:	str	r0, [fp, #-32]	; 0xffffffe0
   1e988:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e98c:	ldrb	r0, [r0]
   1e990:	bl	1f1c4 <__assert_fail@plt+0xc60c>
   1e994:	str	r0, [fp, #-56]	; 0xffffffc8
   1e998:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e99c:	cmp	r0, #0
   1e9a0:	beq	1ea58 <__assert_fail@plt+0xbea0>
   1e9a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e9a8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1e9ac:	sub	r1, r1, #1
   1e9b0:	add	r0, r0, r1
   1e9b4:	ldrb	r0, [r0]
   1e9b8:	cmp	r0, #0
   1e9bc:	beq	1ea58 <__assert_fail@plt+0xbea0>
   1e9c0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e9c4:	cmp	r0, #2
   1e9c8:	bne	1e9dc <__assert_fail@plt+0xbe24>
   1e9cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e9d0:	ldrb	r0, [r0, #1]
   1e9d4:	str	r0, [sp, #36]	; 0x24
   1e9d8:	b	1e9e8 <__assert_fail@plt+0xbe30>
   1e9dc:	movw	r0, #0
   1e9e0:	str	r0, [sp, #36]	; 0x24
   1e9e4:	b	1e9e8 <__assert_fail@plt+0xbe30>
   1e9e8:	ldr	r0, [sp, #36]	; 0x24
   1e9ec:	strb	r0, [fp, #-57]	; 0xffffffc7
   1e9f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e9f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e9f8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e9fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ea00:	sub	r2, r2, r3
   1ea04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ea08:	ldrb	r3, [r3]
   1ea0c:	ldrb	ip, [fp, #-57]	; 0xffffffc7
   1ea10:	ldr	lr, [fp, #-40]	; 0xffffffd8
   1ea14:	movw	r4, #2
   1ea18:	str	r3, [sp, #32]
   1ea1c:	mov	r3, r4
   1ea20:	ldr	r4, [sp, #32]
   1ea24:	and	r5, r4, #255	; 0xff
   1ea28:	str	r5, [sp]
   1ea2c:	and	ip, ip, #255	; 0xff
   1ea30:	str	ip, [sp, #4]
   1ea34:	str	lr, [sp, #8]
   1ea38:	bl	1e020 <__assert_fail@plt+0xb468>
   1ea3c:	str	r0, [fp, #-36]	; 0xffffffdc
   1ea40:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ea44:	sub	r0, r0, #1
   1ea48:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1ea4c:	add	r0, r1, r0
   1ea50:	str	r0, [fp, #-32]	; 0xffffffe0
   1ea54:	b	1eb60 <__assert_fail@plt+0xbfa8>
   1ea58:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ea5c:	ldrb	r1, [r0]
   1ea60:	movw	r0, #31917	; 0x7cad
   1ea64:	movt	r0, #7
   1ea68:	bl	12894 <strchr@plt>
   1ea6c:	movw	r1, #0
   1ea70:	cmp	r0, r1
   1ea74:	beq	1eaa4 <__assert_fail@plt+0xbeec>
   1ea78:	movw	r0, #31921	; 0x7cb1
   1ea7c:	movt	r0, #7
   1ea80:	bl	12864 <gettext@plt>
   1ea84:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1ea88:	ldrb	r3, [r1]
   1ea8c:	movw	r1, #1
   1ea90:	str	r0, [sp, #28]
   1ea94:	mov	r0, r1
   1ea98:	movw	r1, #0
   1ea9c:	ldr	r2, [sp, #28]
   1eaa0:	bl	12780 <error@plt>
   1eaa4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1eaa8:	cmp	r0, #2
   1eaac:	bne	1eaec <__assert_fail@plt+0xbf34>
   1eab0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1eab4:	ldrsb	r0, [r0, #1]
   1eab8:	cmp	r0, #0
   1eabc:	bne	1eaec <__assert_fail@plt+0xbf34>
   1eac0:	movw	r0, #31983	; 0x7cef
   1eac4:	movt	r0, #7
   1eac8:	bl	12864 <gettext@plt>
   1eacc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1ead0:	ldrb	r3, [r1]
   1ead4:	movw	r1, #0
   1ead8:	str	r0, [sp, #24]
   1eadc:	mov	r0, r1
   1eae0:	ldr	r2, [sp, #24]
   1eae4:	bl	12780 <error@plt>
   1eae8:	b	1eb14 <__assert_fail@plt+0xbf5c>
   1eaec:	movw	r0, #32056	; 0x7d38
   1eaf0:	movt	r0, #7
   1eaf4:	bl	12864 <gettext@plt>
   1eaf8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1eafc:	ldrb	r3, [r1]
   1eb00:	movw	r1, #0
   1eb04:	str	r0, [sp, #20]
   1eb08:	mov	r0, r1
   1eb0c:	ldr	r2, [sp, #20]
   1eb10:	bl	12780 <error@plt>
   1eb14:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1eb18:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1eb1c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1eb20:	add	r2, r2, #1
   1eb24:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1eb28:	sub	r2, r2, r3
   1eb2c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1eb30:	movw	ip, #0
   1eb34:	str	r3, [sp, #16]
   1eb38:	mov	r3, ip
   1eb3c:	movw	ip, #0
   1eb40:	and	lr, ip, #255	; 0xff
   1eb44:	str	lr, [sp]
   1eb48:	and	ip, ip, #255	; 0xff
   1eb4c:	str	ip, [sp, #4]
   1eb50:	ldr	ip, [sp, #16]
   1eb54:	str	ip, [sp, #8]
   1eb58:	bl	1e020 <__assert_fail@plt+0xb468>
   1eb5c:	str	r0, [fp, #-36]	; 0xffffffdc
   1eb60:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1eb64:	add	r0, r0, #1
   1eb68:	str	r0, [fp, #-28]	; 0xffffffe4
   1eb6c:	b	1eb70 <__assert_fail@plt+0xbfb8>
   1eb70:	b	1eb74 <__assert_fail@plt+0xbfbc>
   1eb74:	b	1eb78 <__assert_fail@plt+0xbfc0>
   1eb78:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1eb7c:	add	r0, r0, #1
   1eb80:	str	r0, [fp, #-32]	; 0xffffffe0
   1eb84:	b	1e6ac <__assert_fail@plt+0xbaf4>
   1eb88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1eb8c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1eb90:	cmp	r0, r1
   1eb94:	bls	1ebdc <__assert_fail@plt+0xc024>
   1eb98:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1eb9c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1eba0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1eba4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1eba8:	sub	r2, r2, r3
   1ebac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ebb0:	movw	ip, #0
   1ebb4:	str	r3, [sp, #12]
   1ebb8:	mov	r3, ip
   1ebbc:	movw	ip, #0
   1ebc0:	and	lr, ip, #255	; 0xff
   1ebc4:	str	lr, [sp]
   1ebc8:	and	ip, ip, #255	; 0xff
   1ebcc:	str	ip, [sp, #4]
   1ebd0:	ldr	ip, [sp, #12]
   1ebd4:	str	ip, [sp, #8]
   1ebd8:	bl	1e020 <__assert_fail@plt+0xb468>
   1ebdc:	movw	r0, #1
   1ebe0:	and	r0, r0, #1
   1ebe4:	strb	r0, [fp, #-9]
   1ebe8:	ldrb	r0, [fp, #-9]
   1ebec:	and	r0, r0, #1
   1ebf0:	sub	sp, fp, #8
   1ebf4:	pop	{r4, r5, fp, pc}
   1ebf8:	push	{fp, lr}
   1ebfc:	mov	fp, sp
   1ec00:	sub	sp, sp, #88	; 0x58
   1ec04:	str	r0, [fp, #-4]
   1ec08:	str	r1, [fp, #-8]
   1ec0c:	str	r2, [fp, #-12]
   1ec10:	ldr	r0, [fp, #-12]
   1ec14:	add	r0, r0, #40	; 0x28
   1ec18:	str	r0, [fp, #-16]
   1ec1c:	ldr	r0, [fp, #-16]
   1ec20:	ldr	r0, [r0]
   1ec24:	str	r0, [fp, #-20]	; 0xffffffec
   1ec28:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ec2c:	movw	r1, #0
   1ec30:	cmp	r0, r1
   1ec34:	beq	1ee70 <__assert_fail@plt+0xc2b8>
   1ec38:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ec3c:	ldr	r0, [r0]
   1ec40:	movw	r1, #2
   1ec44:	cmp	r1, r0
   1ec48:	bne	1ee48 <__assert_fail@plt+0xc290>
   1ec4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ec50:	ldrb	r0, [r0, #5]
   1ec54:	cmp	r0, #0
   1ec58:	beq	1ee48 <__assert_fail@plt+0xc290>
   1ec5c:	mov	r0, #0
   1ec60:	str	r0, [fp, #-32]	; 0xffffffe0
   1ec64:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ec68:	ldrb	r0, [r0, #4]
   1ec6c:	sub	r0, r0, #65	; 0x41
   1ec70:	cmp	r0, #19
   1ec74:	str	r0, [sp, #20]
   1ec78:	bhi	1edac <__assert_fail@plt+0xc1f4>
   1ec7c:	add	r0, pc, #8
   1ec80:	ldr	r1, [sp, #20]
   1ec84:	ldr	r0, [r0, r1, lsl #2]
   1ec88:	mov	pc, r0
   1ec8c:	ldrdeq	lr, [r1], -ip
   1ec90:	andeq	lr, r1, r4, lsl #26
   1ec94:	andeq	lr, r1, ip, asr sp
   1ec98:	andeq	lr, r1, ip, lsr #27
   1ec9c:	andeq	lr, r1, ip, lsr #27
   1eca0:	andeq	lr, r1, ip, lsr #27
   1eca4:	andeq	lr, r1, ip, lsr #27
   1eca8:	andeq	lr, r1, ip, lsr #27
   1ecac:	andeq	lr, r1, ip, lsr #27
   1ecb0:	andeq	lr, r1, ip, lsr #27
   1ecb4:	andeq	lr, r1, ip, lsr #27
   1ecb8:	andeq	lr, r1, ip, lsr #27
   1ecbc:	andeq	lr, r1, ip, lsr #27
   1ecc0:	andeq	lr, r1, ip, lsr #27
   1ecc4:	andeq	lr, r1, ip, lsr #27
   1ecc8:	andeq	lr, r1, ip, lsr #27
   1eccc:	andeq	lr, r1, ip, lsr #27
   1ecd0:	andeq	lr, r1, ip, lsr #27
   1ecd4:	andeq	lr, r1, ip, lsr #27
   1ecd8:	andeq	lr, r1, r4, lsl #27
   1ecdc:	ldr	r1, [fp, #-8]
   1ece0:	sub	r0, fp, #40	; 0x28
   1ece4:	bl	49880 <__assert_fail@plt+0x36cc8>
   1ece8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ecec:	str	r0, [fp, #-28]	; 0xffffffe4
   1ecf0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ecf4:	str	r0, [fp, #-24]	; 0xffffffe8
   1ecf8:	movw	r0, #1
   1ecfc:	str	r0, [fp, #-32]	; 0xffffffe0
   1ed00:	b	1edcc <__assert_fail@plt+0xc214>
   1ed04:	ldr	r1, [fp, #-8]
   1ed08:	add	r0, sp, #40	; 0x28
   1ed0c:	bl	498ec <__assert_fail@plt+0x36d34>
   1ed10:	ldr	r0, [sp, #40]	; 0x28
   1ed14:	str	r0, [fp, #-28]	; 0xffffffe4
   1ed18:	ldr	r0, [sp, #44]	; 0x2c
   1ed1c:	str	r0, [fp, #-24]	; 0xffffffe8
   1ed20:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ed24:	ldrb	r0, [r0, #5]
   1ed28:	movw	r1, #64	; 0x40
   1ed2c:	cmp	r1, r0
   1ed30:	bne	1ed40 <__assert_fail@plt+0xc188>
   1ed34:	movw	r0, #1
   1ed38:	str	r0, [fp, #-32]	; 0xffffffe0
   1ed3c:	b	1ed58 <__assert_fail@plt+0xc1a0>
   1ed40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ed44:	cmp	r0, #0
   1ed48:	movw	r0, #0
   1ed4c:	movge	r0, #1
   1ed50:	and	r0, r0, #1
   1ed54:	str	r0, [fp, #-32]	; 0xffffffe0
   1ed58:	b	1edcc <__assert_fail@plt+0xc214>
   1ed5c:	ldr	r1, [fp, #-8]
   1ed60:	add	r0, sp, #32
   1ed64:	bl	498a4 <__assert_fail@plt+0x36cec>
   1ed68:	ldr	r0, [sp, #32]
   1ed6c:	str	r0, [fp, #-28]	; 0xffffffe4
   1ed70:	ldr	r0, [sp, #36]	; 0x24
   1ed74:	str	r0, [fp, #-24]	; 0xffffffe8
   1ed78:	movw	r0, #1
   1ed7c:	str	r0, [fp, #-32]	; 0xffffffe0
   1ed80:	b	1edcc <__assert_fail@plt+0xc214>
   1ed84:	ldr	r1, [fp, #-8]
   1ed88:	add	r0, sp, #24
   1ed8c:	bl	498c8 <__assert_fail@plt+0x36d10>
   1ed90:	ldr	r0, [sp, #24]
   1ed94:	str	r0, [fp, #-28]	; 0xffffffe4
   1ed98:	ldr	r0, [sp, #28]
   1ed9c:	str	r0, [fp, #-24]	; 0xffffffe8
   1eda0:	movw	r0, #1
   1eda4:	str	r0, [fp, #-32]	; 0xffffffe0
   1eda8:	b	1edcc <__assert_fail@plt+0xc214>
   1edac:	movw	r0, #27249	; 0x6a71
   1edb0:	movt	r0, #7
   1edb4:	movw	r1, #31598	; 0x7b6e
   1edb8:	movt	r1, #7
   1edbc:	movw	r2, #1304	; 0x518
   1edc0:	movw	r3, #32102	; 0x7d66
   1edc4:	movt	r3, #7
   1edc8:	bl	12bb8 <__assert_fail@plt>
   1edcc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1edd0:	cmp	r0, #0
   1edd4:	beq	1ee2c <__assert_fail@plt+0xc274>
   1edd8:	ldr	r0, [fp, #-16]
   1eddc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ede0:	ldr	r2, [r1, #8]
   1ede4:	ldrb	r1, [r1, #5]
   1ede8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1edec:	ldr	ip, [fp, #-24]	; 0xffffffe8
   1edf0:	str	r0, [sp, #16]
   1edf4:	mov	r0, r3
   1edf8:	str	r1, [sp, #12]
   1edfc:	mov	r1, ip
   1ee00:	ldr	r3, [sp, #12]
   1ee04:	str	r2, [sp, #8]
   1ee08:	mov	r2, r3
   1ee0c:	bl	1f2ac <__assert_fail@plt+0xc6f4>
   1ee10:	ldr	r1, [sp, #16]
   1ee14:	str	r0, [sp, #4]
   1ee18:	mov	r0, r1
   1ee1c:	ldr	r1, [sp, #8]
   1ee20:	ldr	r2, [sp, #4]
   1ee24:	bl	1f238 <__assert_fail@plt+0xc680>
   1ee28:	b	1ee44 <__assert_fail@plt+0xc28c>
   1ee2c:	ldr	r0, [fp, #-16]
   1ee30:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ee34:	ldr	r1, [r1, #8]
   1ee38:	movw	r2, #29909	; 0x74d5
   1ee3c:	movt	r2, #7
   1ee40:	bl	1f238 <__assert_fail@plt+0xc680>
   1ee44:	b	1ee5c <__assert_fail@plt+0xc2a4>
   1ee48:	ldr	r0, [fp, #-16]
   1ee4c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ee50:	ldr	r2, [fp, #-4]
   1ee54:	ldr	r3, [fp, #-8]
   1ee58:	bl	1f684 <__assert_fail@plt+0xcacc>
   1ee5c:	b	1ee60 <__assert_fail@plt+0xc2a8>
   1ee60:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ee64:	ldr	r0, [r0, #16]
   1ee68:	str	r0, [fp, #-20]	; 0xffffffec
   1ee6c:	b	1ec28 <__assert_fail@plt+0xc070>
   1ee70:	movw	r0, #1
   1ee74:	and	r0, r0, #1
   1ee78:	mov	sp, fp
   1ee7c:	pop	{fp, pc}
   1ee80:	sub	sp, sp, #8
   1ee84:	strb	r0, [sp, #7]
   1ee88:	ldrb	r0, [sp, #7]
   1ee8c:	cmp	r0, #48	; 0x30
   1ee90:	movw	r0, #0
   1ee94:	str	r0, [sp]
   1ee98:	blt	1eeb0 <__assert_fail@plt+0xc2f8>
   1ee9c:	ldrb	r0, [sp, #7]
   1eea0:	cmp	r0, #55	; 0x37
   1eea4:	movw	r0, #0
   1eea8:	movle	r0, #1
   1eeac:	str	r0, [sp]
   1eeb0:	ldr	r0, [sp]
   1eeb4:	and	r0, r0, #1
   1eeb8:	add	sp, sp, #8
   1eebc:	bx	lr
   1eec0:	push	{fp, lr}
   1eec4:	mov	fp, sp
   1eec8:	sub	sp, sp, #24
   1eecc:	str	r0, [fp, #-4]
   1eed0:	str	r1, [fp, #-8]
   1eed4:	movw	r0, #0
   1eed8:	str	r0, [sp, #4]
   1eedc:	str	r0, [sp, #12]
   1eee0:	str	r0, [sp, #8]
   1eee4:	ldr	r0, [sp, #8]
   1eee8:	cmp	r0, #3
   1eeec:	movw	r0, #0
   1eef0:	str	r0, [sp]
   1eef4:	bge	1ef10 <__assert_fail@plt+0xc358>
   1eef8:	ldr	r0, [fp, #-4]
   1eefc:	ldr	r1, [sp, #4]
   1ef00:	add	r0, r0, r1
   1ef04:	ldrb	r0, [r0]
   1ef08:	bl	1ee80 <__assert_fail@plt+0xc2c8>
   1ef0c:	str	r0, [sp]
   1ef10:	ldr	r0, [sp]
   1ef14:	tst	r0, #1
   1ef18:	beq	1ef5c <__assert_fail@plt+0xc3a4>
   1ef1c:	ldr	r0, [sp, #12]
   1ef20:	lsl	r0, r0, #3
   1ef24:	ldr	r1, [fp, #-4]
   1ef28:	ldr	r2, [sp, #4]
   1ef2c:	add	r1, r1, r2
   1ef30:	ldrb	r1, [r1]
   1ef34:	add	r0, r0, r1
   1ef38:	sub	r0, r0, #48	; 0x30
   1ef3c:	str	r0, [sp, #12]
   1ef40:	ldr	r0, [sp, #8]
   1ef44:	add	r0, r0, #1
   1ef48:	str	r0, [sp, #8]
   1ef4c:	ldr	r0, [sp, #4]
   1ef50:	add	r0, r0, #1
   1ef54:	str	r0, [sp, #4]
   1ef58:	b	1eee4 <__assert_fail@plt+0xc32c>
   1ef5c:	ldr	r0, [sp, #4]
   1ef60:	mvn	r1, #0
   1ef64:	add	r0, r0, r1
   1ef68:	str	r0, [sp, #4]
   1ef6c:	ldr	r0, [sp, #4]
   1ef70:	ldr	r1, [fp, #-8]
   1ef74:	str	r0, [r1]
   1ef78:	ldr	r0, [sp, #12]
   1ef7c:	and	r0, r0, #255	; 0xff
   1ef80:	mov	sp, fp
   1ef84:	pop	{fp, pc}
   1ef88:	sub	sp, sp, #8
   1ef8c:	strb	r0, [sp, #7]
   1ef90:	mov	r0, #0
   1ef94:	strb	r0, [sp, #6]
   1ef98:	ldrb	r0, [sp, #7]
   1ef9c:	sub	r0, r0, #92	; 0x5c
   1efa0:	cmp	r0, #26
   1efa4:	str	r0, [sp]
   1efa8:	bhi	1f084 <__assert_fail@plt+0xc4cc>
   1efac:	add	r0, pc, #8
   1efb0:	ldr	r1, [sp]
   1efb4:	ldr	r0, [r0, r1, lsl #2]
   1efb8:	mov	pc, r0
   1efbc:	andeq	pc, r1, ip, ror r0	; <UNPREDICTABLE>
   1efc0:	andeq	pc, r1, r4, lsl #1
   1efc4:	andeq	pc, r1, r4, lsl #1
   1efc8:	andeq	pc, r1, r4, lsl #1
   1efcc:	andeq	pc, r1, r4, lsl #1
   1efd0:	andeq	pc, r1, r8, lsr #32
   1efd4:	andeq	pc, r1, r4, lsr r0	; <UNPREDICTABLE>
   1efd8:	andeq	pc, r1, r4, lsl #1
   1efdc:	andeq	pc, r1, r4, lsl #1
   1efe0:	andeq	pc, r1, r4, lsl #1
   1efe4:	andeq	pc, r1, r0, asr #32
   1efe8:	andeq	pc, r1, r4, lsl #1
   1efec:	andeq	pc, r1, r4, lsl #1
   1eff0:	andeq	pc, r1, r4, lsl #1
   1eff4:	andeq	pc, r1, r4, lsl #1
   1eff8:	andeq	pc, r1, r4, lsl #1
   1effc:	andeq	pc, r1, r4, lsl #1
   1f000:	andeq	pc, r1, r4, lsl #1
   1f004:	andeq	pc, r1, ip, asr #32
   1f008:	andeq	pc, r1, r4, lsl #1
   1f00c:	andeq	pc, r1, r4, lsl #1
   1f010:	andeq	pc, r1, r4, lsl #1
   1f014:	andeq	pc, r1, r8, asr r0	; <UNPREDICTABLE>
   1f018:	andeq	pc, r1, r4, lsl #1
   1f01c:	andeq	pc, r1, r4, rrx
   1f020:	andeq	pc, r1, r4, lsl #1
   1f024:	andeq	pc, r1, r0, ror r0	; <UNPREDICTABLE>
   1f028:	movw	r0, #7
   1f02c:	strb	r0, [sp, #6]
   1f030:	b	1f084 <__assert_fail@plt+0xc4cc>
   1f034:	movw	r0, #8
   1f038:	strb	r0, [sp, #6]
   1f03c:	b	1f084 <__assert_fail@plt+0xc4cc>
   1f040:	movw	r0, #12
   1f044:	strb	r0, [sp, #6]
   1f048:	b	1f084 <__assert_fail@plt+0xc4cc>
   1f04c:	movw	r0, #10
   1f050:	strb	r0, [sp, #6]
   1f054:	b	1f084 <__assert_fail@plt+0xc4cc>
   1f058:	movw	r0, #13
   1f05c:	strb	r0, [sp, #6]
   1f060:	b	1f084 <__assert_fail@plt+0xc4cc>
   1f064:	movw	r0, #9
   1f068:	strb	r0, [sp, #6]
   1f06c:	b	1f084 <__assert_fail@plt+0xc4cc>
   1f070:	movw	r0, #11
   1f074:	strb	r0, [sp, #6]
   1f078:	b	1f084 <__assert_fail@plt+0xc4cc>
   1f07c:	movw	r0, #92	; 0x5c
   1f080:	strb	r0, [sp, #6]
   1f084:	ldrb	r0, [sp, #6]
   1f088:	add	sp, sp, #8
   1f08c:	bx	lr
   1f090:	push	{fp, lr}
   1f094:	mov	fp, sp
   1f098:	sub	sp, sp, #16
   1f09c:	str	r0, [fp, #-4]
   1f0a0:	movw	r0, #0
   1f0a4:	str	r0, [sp, #8]
   1f0a8:	ldr	r0, [fp, #-4]
   1f0ac:	ldr	r1, [sp, #8]
   1f0b0:	add	r1, r1, #1
   1f0b4:	str	r1, [sp, #8]
   1f0b8:	add	r0, r0, r1
   1f0bc:	ldrb	r0, [r0]
   1f0c0:	cmp	r0, #0
   1f0c4:	movw	r0, #0
   1f0c8:	str	r0, [sp, #4]
   1f0cc:	beq	1f100 <__assert_fail@plt+0xc548>
   1f0d0:	ldr	r0, [fp, #-4]
   1f0d4:	ldr	r1, [sp, #8]
   1f0d8:	add	r0, r0, r1
   1f0dc:	ldrb	r1, [r0]
   1f0e0:	movw	r0, #32170	; 0x7daa
   1f0e4:	movt	r0, #7
   1f0e8:	bl	12894 <strchr@plt>
   1f0ec:	movw	r1, #0
   1f0f0:	cmp	r0, r1
   1f0f4:	movw	r0, #0
   1f0f8:	movne	r0, #1
   1f0fc:	str	r0, [sp, #4]
   1f100:	ldr	r0, [sp, #4]
   1f104:	tst	r0, #1
   1f108:	beq	1f110 <__assert_fail@plt+0xc558>
   1f10c:	b	1f0a8 <__assert_fail@plt+0xc4f0>
   1f110:	b	1f114 <__assert_fail@plt+0xc55c>
   1f114:	bl	12834 <__ctype_b_loc@plt>
   1f118:	ldr	r0, [r0]
   1f11c:	ldr	r1, [fp, #-4]
   1f120:	ldr	r2, [sp, #8]
   1f124:	ldrb	r1, [r1, r2]
   1f128:	mov	r2, r1
   1f12c:	add	r0, r0, r1, lsl #1
   1f130:	ldrh	r0, [r0]
   1f134:	and	r0, r0, #2048	; 0x800
   1f138:	cmp	r0, #0
   1f13c:	beq	1f150 <__assert_fail@plt+0xc598>
   1f140:	ldr	r0, [sp, #8]
   1f144:	add	r0, r0, #1
   1f148:	str	r0, [sp, #8]
   1f14c:	b	1f114 <__assert_fail@plt+0xc55c>
   1f150:	ldr	r0, [fp, #-4]
   1f154:	ldr	r1, [sp, #8]
   1f158:	add	r0, r0, r1
   1f15c:	ldrb	r0, [r0]
   1f160:	cmp	r0, #46	; 0x2e
   1f164:	bne	1f1b8 <__assert_fail@plt+0xc600>
   1f168:	ldr	r0, [sp, #8]
   1f16c:	add	r0, r0, #1
   1f170:	str	r0, [sp, #8]
   1f174:	bl	12834 <__ctype_b_loc@plt>
   1f178:	ldr	r0, [r0]
   1f17c:	ldr	r1, [fp, #-4]
   1f180:	ldr	r2, [sp, #8]
   1f184:	ldrb	r1, [r1, r2]
   1f188:	mov	r2, r1
   1f18c:	add	r0, r0, r1, lsl #1
   1f190:	ldrh	r0, [r0]
   1f194:	and	r0, r0, #2048	; 0x800
   1f198:	cmp	r0, #0
   1f19c:	beq	1f1b4 <__assert_fail@plt+0xc5fc>
   1f1a0:	b	1f1a4 <__assert_fail@plt+0xc5ec>
   1f1a4:	ldr	r0, [sp, #8]
   1f1a8:	add	r0, r0, #1
   1f1ac:	str	r0, [sp, #8]
   1f1b0:	b	1f174 <__assert_fail@plt+0xc5bc>
   1f1b4:	b	1f1b8 <__assert_fail@plt+0xc600>
   1f1b8:	ldr	r0, [sp, #8]
   1f1bc:	mov	sp, fp
   1f1c0:	pop	{fp, pc}
   1f1c4:	push	{fp, lr}
   1f1c8:	mov	fp, sp
   1f1cc:	sub	sp, sp, #8
   1f1d0:	strb	r0, [sp, #3]
   1f1d4:	ldrb	r1, [sp, #3]
   1f1d8:	movw	r0, #32175	; 0x7daf
   1f1dc:	movt	r0, #7
   1f1e0:	bl	12894 <strchr@plt>
   1f1e4:	movw	r1, #0
   1f1e8:	cmp	r0, r1
   1f1ec:	beq	1f1fc <__assert_fail@plt+0xc644>
   1f1f0:	movw	r0, #1
   1f1f4:	str	r0, [sp, #4]
   1f1f8:	b	1f22c <__assert_fail@plt+0xc674>
   1f1fc:	ldrb	r1, [sp, #3]
   1f200:	movw	r0, #32204	; 0x7dcc
   1f204:	movt	r0, #7
   1f208:	bl	12894 <strchr@plt>
   1f20c:	movw	r1, #0
   1f210:	cmp	r0, r1
   1f214:	beq	1f224 <__assert_fail@plt+0xc66c>
   1f218:	movw	r0, #2
   1f21c:	str	r0, [sp, #4]
   1f220:	b	1f22c <__assert_fail@plt+0xc674>
   1f224:	movw	r0, #0
   1f228:	str	r0, [sp, #4]
   1f22c:	ldr	r0, [sp, #4]
   1f230:	mov	sp, fp
   1f234:	pop	{fp, pc}
   1f238:	sub	sp, sp, #8
   1f23c:	push	{fp, lr}
   1f240:	mov	fp, sp
   1f244:	sub	sp, sp, #16
   1f248:	str	r3, [fp, #12]
   1f24c:	str	r2, [fp, #8]
   1f250:	str	r0, [fp, #-4]
   1f254:	str	r1, [sp, #8]
   1f258:	add	r0, fp, #8
   1f25c:	str	r0, [sp]
   1f260:	ldr	r0, [fp, #-4]
   1f264:	ldr	r0, [r0, #4]
   1f268:	ldr	r1, [sp, #8]
   1f26c:	ldr	r2, [sp]
   1f270:	bl	12a20 <vfprintf@plt>
   1f274:	str	r0, [sp, #4]
   1f278:	mov	r0, sp
   1f27c:	ldr	r1, [sp, #4]
   1f280:	cmp	r1, #0
   1f284:	bge	1f29c <__assert_fail@plt+0xc6e4>
   1f288:	bl	128d0 <__errno_location@plt>
   1f28c:	ldr	r0, [r0]
   1f290:	ldr	r1, [fp, #-4]
   1f294:	ldr	r1, [r1, #8]
   1f298:	bl	1c664 <__assert_fail@plt+0x9aac>
   1f29c:	mov	sp, fp
   1f2a0:	pop	{fp, lr}
   1f2a4:	add	sp, sp, #8
   1f2a8:	bx	lr
   1f2ac:	push	{fp, lr}
   1f2b0:	mov	fp, sp
   1f2b4:	sub	sp, sp, #144	; 0x90
   1f2b8:	str	r0, [fp, #-12]
   1f2bc:	str	r1, [fp, #-8]
   1f2c0:	str	r2, [fp, #-16]
   1f2c4:	movw	r0, #0
   1f2c8:	str	r0, [fp, #-52]	; 0xffffffcc
   1f2cc:	str	r0, [fp, #-56]	; 0xffffffc8
   1f2d0:	ldr	r0, [fp, #-16]
   1f2d4:	cmp	r0, #43	; 0x2b
   1f2d8:	bne	1f2f8 <__assert_fail@plt+0xc740>
   1f2dc:	add	r0, sp, #72	; 0x48
   1f2e0:	movw	r1, #32209	; 0x7dd1
   1f2e4:	movt	r1, #7
   1f2e8:	bl	12738 <strcpy@plt>
   1f2ec:	movw	r1, #1
   1f2f0:	str	r1, [fp, #-56]	; 0xffffffc8
   1f2f4:	b	1f360 <__assert_fail@plt+0xc7a8>
   1f2f8:	mov	r0, #37	; 0x25
   1f2fc:	strb	r0, [sp, #72]	; 0x48
   1f300:	ldr	r0, [fp, #-16]
   1f304:	strb	r0, [sp, #73]	; 0x49
   1f308:	mov	r0, #0
   1f30c:	strb	r0, [sp, #74]	; 0x4a
   1f310:	ldr	r0, [fp, #-16]
   1f314:	cmp	r0, #64	; 0x40
   1f318:	str	r0, [sp, #36]	; 0x24
   1f31c:	beq	1f348 <__assert_fail@plt+0xc790>
   1f320:	b	1f324 <__assert_fail@plt+0xc76c>
   1f324:	ldr	r0, [sp, #36]	; 0x24
   1f328:	sub	r1, r0, #83	; 0x53
   1f32c:	cmp	r1, #2
   1f330:	bcc	1f348 <__assert_fail@plt+0xc790>
   1f334:	b	1f338 <__assert_fail@plt+0xc780>
   1f338:	ldr	r0, [sp, #36]	; 0x24
   1f33c:	cmp	r0, #88	; 0x58
   1f340:	bne	1f354 <__assert_fail@plt+0xc79c>
   1f344:	b	1f348 <__assert_fail@plt+0xc790>
   1f348:	movw	r0, #1
   1f34c:	str	r0, [fp, #-56]	; 0xffffffc8
   1f350:	b	1f35c <__assert_fail@plt+0xc7a4>
   1f354:	movw	r0, #0
   1f358:	str	r0, [fp, #-56]	; 0xffffffc8
   1f35c:	b	1f360 <__assert_fail@plt+0xc7a8>
   1f360:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1f364:	cmp	r0, #0
   1f368:	beq	1f3bc <__assert_fail@plt+0xc804>
   1f36c:	sub	r0, fp, #48	; 0x30
   1f370:	ldr	r3, [fp, #-8]
   1f374:	movw	r1, #32
   1f378:	movw	r2, #32221	; 0x7ddd
   1f37c:	movt	r2, #7
   1f380:	bl	128e8 <snprintf@plt>
   1f384:	str	r0, [fp, #-52]	; 0xffffffcc
   1f388:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1f38c:	cmp	r0, #32
   1f390:	bge	1f398 <__assert_fail@plt+0xc7e0>
   1f394:	b	1f3b8 <__assert_fail@plt+0xc800>
   1f398:	movw	r0, #32229	; 0x7de5
   1f39c:	movt	r0, #7
   1f3a0:	movw	r1, #31598	; 0x7b6e
   1f3a4:	movt	r1, #7
   1f3a8:	movw	r2, #665	; 0x299
   1f3ac:	movw	r3, #32255	; 0x7dff
   1f3b0:	movt	r3, #7
   1f3b4:	bl	12bb8 <__assert_fail@plt>
   1f3b8:	b	1f3cc <__assert_fail@plt+0xc814>
   1f3bc:	movw	r0, #0
   1f3c0:	str	r0, [fp, #-52]	; 0xffffffcc
   1f3c4:	movw	r0, #0
   1f3c8:	strb	r0, [fp, #-48]	; 0xffffffd0
   1f3cc:	ldr	r0, [fp, #-16]
   1f3d0:	cmp	r0, #64	; 0x40
   1f3d4:	beq	1f430 <__assert_fail@plt+0xc878>
   1f3d8:	sub	r0, fp, #12
   1f3dc:	bl	12810 <localtime@plt>
   1f3e0:	str	r0, [fp, #-60]	; 0xffffffc4
   1f3e4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1f3e8:	movw	r1, #0
   1f3ec:	cmp	r0, r1
   1f3f0:	beq	1f42c <__assert_fail@plt+0xc874>
   1f3f4:	sub	r2, fp, #48	; 0x30
   1f3f8:	add	r0, sp, #72	; 0x48
   1f3fc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1f400:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f404:	bl	20708 <__assert_fail@plt+0xdb50>
   1f408:	str	r0, [sp, #68]	; 0x44
   1f40c:	ldr	r0, [sp, #68]	; 0x44
   1f410:	movw	r1, #0
   1f414:	cmp	r0, r1
   1f418:	beq	1f428 <__assert_fail@plt+0xc870>
   1f41c:	ldr	r0, [sp, #68]	; 0x44
   1f420:	str	r0, [fp, #-4]
   1f424:	b	1f678 <__assert_fail@plt+0xcac0>
   1f428:	b	1f42c <__assert_fail@plt+0xc874>
   1f42c:	b	1f430 <__assert_fail@plt+0xc878>
   1f430:	ldr	r0, [fp, #-12]
   1f434:	asr	r1, r0, #31
   1f438:	str	r0, [sp, #56]	; 0x38
   1f43c:	str	r1, [sp, #60]	; 0x3c
   1f440:	ldr	r0, [fp, #-12]
   1f444:	cmp	r0, #0
   1f448:	bge	1f468 <__assert_fail@plt+0xc8b0>
   1f44c:	ldr	r0, [sp, #56]	; 0x38
   1f450:	ldr	r1, [sp, #60]	; 0x3c
   1f454:	rsbs	r0, r0, #0
   1f458:	rsc	r1, r1, #0
   1f45c:	str	r0, [sp, #32]
   1f460:	str	r1, [sp, #28]
   1f464:	b	1f47c <__assert_fail@plt+0xc8c4>
   1f468:	ldr	r0, [sp, #56]	; 0x38
   1f46c:	ldr	r1, [sp, #60]	; 0x3c
   1f470:	str	r0, [sp, #32]
   1f474:	str	r1, [sp, #28]
   1f478:	b	1f47c <__assert_fail@plt+0xc8c4>
   1f47c:	ldr	r0, [sp, #28]
   1f480:	ldr	r1, [sp, #32]
   1f484:	mov	r2, sp
   1f488:	mov	r3, #0
   1f48c:	str	r3, [r2, #12]
   1f490:	mov	ip, #1
   1f494:	str	ip, [r2, #8]
   1f498:	str	r3, [r2, #4]
   1f49c:	str	ip, [r2]
   1f4a0:	movw	r2, #55160	; 0xd778
   1f4a4:	movt	r2, #8
   1f4a8:	add	r2, r2, #1
   1f4ac:	str	r0, [sp, #24]
   1f4b0:	mov	r0, r1
   1f4b4:	ldr	r1, [sp, #24]
   1f4b8:	bl	2e7b8 <__assert_fail@plt+0x1bc00>
   1f4bc:	str	r0, [sp, #40]	; 0x28
   1f4c0:	ldr	r0, [sp, #40]	; 0x28
   1f4c4:	movw	r1, #55160	; 0xd778
   1f4c8:	movt	r1, #8
   1f4cc:	cmp	r0, r1
   1f4d0:	bls	1f4d8 <__assert_fail@plt+0xc920>
   1f4d4:	b	1f4f8 <__assert_fail@plt+0xc940>
   1f4d8:	movw	r0, #32295	; 0x7e27
   1f4dc:	movt	r0, #7
   1f4e0:	movw	r1, #31598	; 0x7b6e
   1f4e4:	movt	r1, #7
   1f4e8:	movw	r2, #697	; 0x2b9
   1f4ec:	movw	r3, #32255	; 0x7dff
   1f4f0:	movt	r3, #7
   1f4f4:	bl	12bb8 <__assert_fail@plt>
   1f4f8:	movw	r0, #791	; 0x317
   1f4fc:	movw	r1, #55160	; 0xd778
   1f500:	movt	r1, #8
   1f504:	add	r0, r1, r0
   1f508:	ldr	r1, [sp, #40]	; 0x28
   1f50c:	cmp	r1, r0
   1f510:	bcs	1f518 <__assert_fail@plt+0xc960>
   1f514:	b	1f538 <__assert_fail@plt+0xc980>
   1f518:	movw	r0, #32303	; 0x7e2f
   1f51c:	movt	r0, #7
   1f520:	movw	r1, #31598	; 0x7b6e
   1f524:	movt	r1, #7
   1f528:	movw	r2, #698	; 0x2ba
   1f52c:	movw	r3, #32255	; 0x7dff
   1f530:	movt	r3, #7
   1f534:	bl	12bb8 <__assert_fail@plt>
   1f538:	ldr	r0, [fp, #-12]
   1f53c:	cmp	r0, #0
   1f540:	bge	1f560 <__assert_fail@plt+0xc9a8>
   1f544:	ldr	r0, [sp, #40]	; 0x28
   1f548:	mvn	r1, #0
   1f54c:	add	r2, r0, r1
   1f550:	str	r2, [sp, #40]	; 0x28
   1f554:	add	r0, r0, r1
   1f558:	movw	r1, #45	; 0x2d
   1f55c:	strb	r1, [r0]
   1f560:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1f564:	cmp	r0, #0
   1f568:	beq	1f670 <__assert_fail@plt+0xcab8>
   1f56c:	ldr	r0, [sp, #40]	; 0x28
   1f570:	bl	12888 <strlen@plt>
   1f574:	str	r0, [sp, #48]	; 0x30
   1f578:	ldr	r0, [sp, #40]	; 0x28
   1f57c:	movw	r1, #55160	; 0xd778
   1f580:	movt	r1, #8
   1f584:	sub	r0, r0, r1
   1f588:	ldr	r1, [sp, #48]	; 0x30
   1f58c:	add	r0, r0, r1
   1f590:	str	r0, [sp, #52]	; 0x34
   1f594:	ldr	r0, [sp, #52]	; 0x34
   1f598:	movw	r1, #791	; 0x317
   1f59c:	cmp	r1, r0
   1f5a0:	bls	1f5a8 <__assert_fail@plt+0xc9f0>
   1f5a4:	b	1f5c8 <__assert_fail@plt+0xca10>
   1f5a8:	movw	r0, #32328	; 0x7e48
   1f5ac:	movt	r0, #7
   1f5b0:	movw	r1, #31598	; 0x7b6e
   1f5b4:	movt	r1, #7
   1f5b8:	movw	r2, #711	; 0x2c7
   1f5bc:	movw	r3, #32255	; 0x7dff
   1f5c0:	movt	r3, #7
   1f5c4:	bl	12bb8 <__assert_fail@plt>
   1f5c8:	sub	r0, fp, #48	; 0x30
   1f5cc:	ldr	r1, [sp, #52]	; 0x34
   1f5d0:	movw	r2, #791	; 0x317
   1f5d4:	sub	r1, r2, r1
   1f5d8:	sub	r1, r1, #1
   1f5dc:	str	r1, [sp, #44]	; 0x2c
   1f5e0:	bl	12888 <strlen@plt>
   1f5e4:	ldr	r1, [sp, #44]	; 0x2c
   1f5e8:	cmp	r0, r1
   1f5ec:	bcc	1f62c <__assert_fail@plt+0xca74>
   1f5f0:	sub	r0, fp, #48	; 0x30
   1f5f4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f5f8:	ldr	r1, [sp, #44]	; 0x2c
   1f5fc:	movw	r2, #0
   1f600:	str	r0, [sp, #20]
   1f604:	mov	r0, r2
   1f608:	str	r1, [sp, #16]
   1f60c:	mov	r1, r2
   1f610:	movw	r2, #32346	; 0x7e5a
   1f614:	movt	r2, #7
   1f618:	ldr	ip, [sp, #16]
   1f61c:	str	ip, [sp]
   1f620:	ldr	lr, [sp, #20]
   1f624:	str	lr, [sp, #4]
   1f628:	bl	12780 <error@plt>
   1f62c:	sub	r0, fp, #48	; 0x30
   1f630:	bl	12888 <strlen@plt>
   1f634:	ldr	r1, [sp, #44]	; 0x2c
   1f638:	cmp	r0, r1
   1f63c:	bcs	1f644 <__assert_fail@plt+0xca8c>
   1f640:	b	1f664 <__assert_fail@plt+0xcaac>
   1f644:	movw	r0, #32392	; 0x7e88
   1f648:	movt	r0, #7
   1f64c:	movw	r1, #31598	; 0x7b6e
   1f650:	movt	r1, #7
   1f654:	movw	r2, #720	; 0x2d0
   1f658:	movw	r3, #32255	; 0x7dff
   1f65c:	movt	r3, #7
   1f660:	bl	12bb8 <__assert_fail@plt>
   1f664:	sub	r1, fp, #48	; 0x30
   1f668:	ldr	r0, [sp, #40]	; 0x28
   1f66c:	bl	126fc <strcat@plt>
   1f670:	ldr	r0, [sp, #40]	; 0x28
   1f674:	str	r0, [fp, #-4]
   1f678:	ldr	r0, [fp, #-4]
   1f67c:	mov	sp, fp
   1f680:	pop	{fp, pc}
   1f684:	push	{r4, r5, r6, r7, fp, lr}
   1f688:	add	fp, sp, #16
   1f68c:	sub	sp, sp, #120	; 0x78
   1f690:	sub	sp, sp, #1024	; 0x400
   1f694:	str	r0, [fp, #-20]	; 0xffffffec
   1f698:	str	r1, [fp, #-24]	; 0xffffffe8
   1f69c:	str	r2, [fp, #-28]	; 0xffffffe4
   1f6a0:	str	r3, [fp, #-32]	; 0xffffffe0
   1f6a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f6a8:	ldr	r0, [r0]
   1f6ac:	cmp	r0, #0
   1f6b0:	str	r0, [sp, #276]	; 0x114
   1f6b4:	beq	1f6dc <__assert_fail@plt+0xcb24>
   1f6b8:	b	1f6bc <__assert_fail@plt+0xcb04>
   1f6bc:	ldr	r0, [sp, #276]	; 0x114
   1f6c0:	cmp	r0, #1
   1f6c4:	beq	1f6fc <__assert_fail@plt+0xcb44>
   1f6c8:	b	1f6cc <__assert_fail@plt+0xcb14>
   1f6cc:	ldr	r0, [sp, #276]	; 0x114
   1f6d0:	cmp	r0, #2
   1f6d4:	beq	1f724 <__assert_fail@plt+0xcb6c>
   1f6d8:	b	20700 <__assert_fail@plt+0xdb48>
   1f6dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f6e0:	ldr	r0, [r0, #8]
   1f6e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f6e8:	ldr	r2, [r1, #12]
   1f6ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f6f0:	movw	r1, #1
   1f6f4:	bl	20c5c <__assert_fail@plt+0xe0a4>
   1f6f8:	b	20700 <__assert_fail@plt+0xdb48>
   1f6fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f700:	ldr	r0, [r0, #8]
   1f704:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f708:	ldr	r2, [r1, #12]
   1f70c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f710:	movw	r1, #1
   1f714:	bl	20c5c <__assert_fail@plt+0xe0a4>
   1f718:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f71c:	bl	20cc0 <__assert_fail@plt+0xe108>
   1f720:	b	20700 <__assert_fail@plt+0xdb48>
   1f724:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f728:	ldrb	r0, [r0, #4]
   1f72c:	mov	r1, r0
   1f730:	cmp	r0, #121	; 0x79
   1f734:	str	r1, [sp, #272]	; 0x110
   1f738:	bhi	206fc <__assert_fail@plt+0xdb44>
   1f73c:	add	r0, pc, #8
   1f740:	ldr	r1, [sp, #272]	; 0x110
   1f744:	ldr	r0, [r0, r1, lsl #2]
   1f748:	mov	pc, r0
   1f74c:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   1f750:	strdeq	r0, [r2], -ip
   1f754:	strdeq	r0, [r2], -ip
   1f758:	strdeq	r0, [r2], -ip
   1f75c:	strdeq	r0, [r2], -ip
   1f760:	strdeq	r0, [r2], -ip
   1f764:	strdeq	r0, [r2], -ip
   1f768:	strdeq	r0, [r2], -ip
   1f76c:	strdeq	r0, [r2], -ip
   1f770:	strdeq	r0, [r2], -ip
   1f774:	strdeq	r0, [r2], -ip
   1f778:	strdeq	r0, [r2], -ip
   1f77c:	strdeq	r0, [r2], -ip
   1f780:	strdeq	r0, [r2], -ip
   1f784:	strdeq	r0, [r2], -ip
   1f788:	strdeq	r0, [r2], -ip
   1f78c:	strdeq	r0, [r2], -ip
   1f790:	strdeq	r0, [r2], -ip
   1f794:	strdeq	r0, [r2], -ip
   1f798:	strdeq	r0, [r2], -ip
   1f79c:	strdeq	r0, [r2], -ip
   1f7a0:	strdeq	r0, [r2], -ip
   1f7a4:	strdeq	r0, [r2], -ip
   1f7a8:	strdeq	r0, [r2], -ip
   1f7ac:	strdeq	r0, [r2], -ip
   1f7b0:	strdeq	r0, [r2], -ip
   1f7b4:	strdeq	r0, [r2], -ip
   1f7b8:	strdeq	r0, [r2], -ip
   1f7bc:	strdeq	r0, [r2], -ip
   1f7c0:	strdeq	r0, [r2], -ip
   1f7c4:	strdeq	r0, [r2], -ip
   1f7c8:	strdeq	r0, [r2], -ip
   1f7cc:	strdeq	r0, [r2], -ip
   1f7d0:	strdeq	r0, [r2], -ip
   1f7d4:	strdeq	r0, [r2], -ip
   1f7d8:	strdeq	r0, [r2], -ip
   1f7dc:	strdeq	r0, [r2], -ip
   1f7e0:			; <UNDEFINED> instruction: 0x000206b0
   1f7e4:	strdeq	r0, [r2], -ip
   1f7e8:	strdeq	r0, [r2], -ip
   1f7ec:	strdeq	r0, [r2], -ip
   1f7f0:	strdeq	r0, [r2], -ip
   1f7f4:	strdeq	r0, [r2], -ip
   1f7f8:	strdeq	r0, [r2], -ip
   1f7fc:	strdeq	r0, [r2], -ip
   1f800:	strdeq	r0, [r2], -ip
   1f804:	strdeq	r0, [r2], -ip
   1f808:	strdeq	r0, [r2], -ip
   1f80c:	strdeq	r0, [r2], -ip
   1f810:	strdeq	r0, [r2], -ip
   1f814:	strdeq	r0, [r2], -ip
   1f818:	strdeq	r0, [r2], -ip
   1f81c:	strdeq	r0, [r2], -ip
   1f820:	strdeq	r0, [r2], -ip
   1f824:	strdeq	r0, [r2], -ip
   1f828:	strdeq	r0, [r2], -ip
   1f82c:	strdeq	r0, [r2], -ip
   1f830:	strdeq	r0, [r2], -ip
   1f834:	strdeq	r0, [r2], -ip
   1f838:	strdeq	r0, [r2], -ip
   1f83c:	strdeq	r0, [r2], -ip
   1f840:	strdeq	r0, [r2], -ip
   1f844:	strdeq	r0, [r2], -ip
   1f848:	strdeq	r0, [r2], -ip
   1f84c:	strdeq	r0, [r2], -ip
   1f850:	strdeq	r0, [r2], -ip
   1f854:	strdeq	r0, [r2], -ip
   1f858:	strdeq	r0, [r2], -ip
   1f85c:	andeq	pc, r1, r0, ror #20
   1f860:	strdeq	r0, [r2], -ip
   1f864:	strdeq	pc, [r1], -r8
   1f868:	muleq	r1, r8, fp
   1f86c:	andeq	pc, r1, r8, lsl #26
   1f870:	strdeq	r0, [r2], -ip
   1f874:	strdeq	r0, [r2], -ip
   1f878:	strdeq	r0, [r2], -ip
   1f87c:	strdeq	r0, [r2], -ip
   1f880:	andeq	pc, r1, r4, lsl pc	; <UNPREDICTABLE>
   1f884:	strdeq	r0, [r2], -ip
   1f888:	strdeq	r0, [r2], -ip
   1f88c:	ldrdeq	r0, [r2], -ip
   1f890:	strdeq	r0, [r2], -ip
   1f894:	strdeq	r0, [r2], -ip
   1f898:			; <UNDEFINED> instruction: 0x000202b8
   1f89c:	strdeq	r0, [r2], -ip
   1f8a0:	muleq	r2, r8, r3
   1f8a4:	strdeq	r0, [r2], -ip
   1f8a8:	strdeq	r0, [r2], -ip
   1f8ac:	strdeq	r0, [r2], -ip
   1f8b0:	andeq	r0, r2, r4, lsl #8
   1f8b4:	ldrdeq	r0, [r2], -ip
   1f8b8:	strdeq	r0, [r2], -ip
   1f8bc:	strdeq	r0, [r2], -ip
   1f8c0:	strdeq	r0, [r2], -ip
   1f8c4:	strdeq	r0, [r2], -ip
   1f8c8:	strdeq	r0, [r2], -ip
   1f8cc:	strdeq	r0, [r2], -ip
   1f8d0:	andeq	pc, r1, r4, lsr r9	; <UNPREDICTABLE>
   1f8d4:	andeq	pc, r1, r4, lsl #19
   1f8d8:	strdeq	pc, [r1], -r0
   1f8dc:	andeq	pc, r1, r0, asr #20
   1f8e0:	strdeq	r0, [r2], -ip
   1f8e4:	andeq	pc, r1, ip, asr #21
   1f8e8:	andeq	pc, r1, ip, lsr fp	; <UNPREDICTABLE>
   1f8ec:	andeq	pc, r1, r4, lsl #24
   1f8f0:	andeq	pc, r1, r8, ror sp	; <UNPREDICTABLE>
   1f8f4:	strdeq	r0, [r2], -ip
   1f8f8:	andeq	pc, r1, r4, ror #27
   1f8fc:	andeq	pc, r1, r4, asr lr	; <UNPREDICTABLE>
   1f900:	andeq	pc, r1, r0, asr #30
   1f904:	andeq	r0, r2, r8, asr r1
   1f908:	strdeq	r0, [r2], -ip
   1f90c:	andeq	r0, r2, r4, asr #3
   1f910:	strdeq	r0, [r2], -ip
   1f914:	strdeq	r0, [r2], -ip
   1f918:	andeq	r0, r2, ip, asr #4
   1f91c:	andeq	r0, r2, ip, ror #5
   1f920:	andeq	r0, r2, ip, lsr r3
   1f924:	strdeq	r0, [r2], -ip
   1f928:	strdeq	r0, [r2], -ip
   1f92c:	strdeq	r0, [r2], -ip
   1f930:	muleq	r2, r8, r5
   1f934:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f938:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f93c:	ldr	r1, [r1, #8]
   1f940:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f944:	add	r3, sp, #464	; 0x1d0
   1f948:	str	r0, [sp, #268]	; 0x10c
   1f94c:	mov	r0, r3
   1f950:	str	r1, [sp, #264]	; 0x108
   1f954:	mov	r1, r2
   1f958:	bl	49880 <__assert_fail@plt+0x36cc8>
   1f95c:	ldr	r0, [sp, #464]	; 0x1d0
   1f960:	ldr	r1, [sp, #468]	; 0x1d4
   1f964:	bl	20d04 <__assert_fail@plt+0xe14c>
   1f968:	ldr	r1, [sp, #268]	; 0x10c
   1f96c:	str	r0, [sp, #260]	; 0x104
   1f970:	mov	r0, r1
   1f974:	ldr	r1, [sp, #264]	; 0x108
   1f978:	ldr	r2, [sp, #260]	; 0x104
   1f97c:	bl	1f238 <__assert_fail@plt+0xc680>
   1f980:	b	206fc <__assert_fail@plt+0xdb44>
   1f984:	add	r2, sp, #476	; 0x1dc
   1f988:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f98c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f990:	ldr	r1, [r1, #8]
   1f994:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f998:	ldr	ip, [r3, #64]	; 0x40
   1f99c:	ldr	r3, [r3, #68]	; 0x44
   1f9a0:	mov	lr, sp
   1f9a4:	mov	r4, #0
   1f9a8:	str	r4, [lr, #12]
   1f9ac:	mov	r5, #512	; 0x200
   1f9b0:	str	r5, [lr, #8]
   1f9b4:	str	r4, [lr, #4]
   1f9b8:	str	r5, [lr]
   1f9bc:	str	r0, [sp, #256]	; 0x100
   1f9c0:	mov	r0, ip
   1f9c4:	str	r1, [sp, #252]	; 0xfc
   1f9c8:	mov	r1, r3
   1f9cc:	mov	r3, r4
   1f9d0:	bl	2e7b8 <__assert_fail@plt+0x1bc00>
   1f9d4:	ldr	r1, [sp, #256]	; 0x100
   1f9d8:	str	r0, [sp, #248]	; 0xf8
   1f9dc:	mov	r0, r1
   1f9e0:	ldr	r1, [sp, #252]	; 0xfc
   1f9e4:	ldr	r2, [sp, #248]	; 0xf8
   1f9e8:	bl	1f238 <__assert_fail@plt+0xc680>
   1f9ec:	b	206fc <__assert_fail@plt+0xdb44>
   1f9f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f9f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f9f8:	ldr	r1, [r1, #8]
   1f9fc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1fa00:	add	r3, sp, #456	; 0x1c8
   1fa04:	str	r0, [sp, #244]	; 0xf4
   1fa08:	mov	r0, r3
   1fa0c:	str	r1, [sp, #240]	; 0xf0
   1fa10:	mov	r1, r2
   1fa14:	bl	498a4 <__assert_fail@plt+0x36cec>
   1fa18:	ldr	r0, [sp, #456]	; 0x1c8
   1fa1c:	ldr	r1, [sp, #460]	; 0x1cc
   1fa20:	bl	20d04 <__assert_fail@plt+0xe14c>
   1fa24:	ldr	r1, [sp, #244]	; 0xf4
   1fa28:	str	r0, [sp, #236]	; 0xec
   1fa2c:	mov	r0, r1
   1fa30:	ldr	r1, [sp, #240]	; 0xf0
   1fa34:	ldr	r2, [sp, #236]	; 0xec
   1fa38:	bl	1f238 <__assert_fail@plt+0xc680>
   1fa3c:	b	206fc <__assert_fail@plt+0xdb44>
   1fa40:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fa44:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1fa48:	ldr	r1, [r1, #8]
   1fa4c:	movw	r2, #57436	; 0xe05c
   1fa50:	movt	r2, #8
   1fa54:	ldr	r2, [r2]
   1fa58:	bl	1f238 <__assert_fail@plt+0xc680>
   1fa5c:	b	206fc <__assert_fail@plt+0xdb44>
   1fa60:	add	r2, sp, #476	; 0x1dc
   1fa64:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fa68:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1fa6c:	ldr	r1, [r1, #8]
   1fa70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fa74:	ldr	ip, [r3]
   1fa78:	ldr	r3, [r3, #4]
   1fa7c:	mov	lr, sp
   1fa80:	mov	r4, #0
   1fa84:	str	r4, [lr, #12]
   1fa88:	mov	r5, #1
   1fa8c:	str	r5, [lr, #8]
   1fa90:	str	r4, [lr, #4]
   1fa94:	str	r5, [lr]
   1fa98:	str	r0, [sp, #232]	; 0xe8
   1fa9c:	mov	r0, ip
   1faa0:	str	r1, [sp, #228]	; 0xe4
   1faa4:	mov	r1, r3
   1faa8:	mov	r3, r4
   1faac:	bl	2e7b8 <__assert_fail@plt+0x1bc00>
   1fab0:	ldr	r1, [sp, #232]	; 0xe8
   1fab4:	str	r0, [sp, #224]	; 0xe0
   1fab8:	mov	r0, r1
   1fabc:	ldr	r1, [sp, #228]	; 0xe4
   1fac0:	ldr	r2, [sp, #224]	; 0xe0
   1fac4:	bl	1f238 <__assert_fail@plt+0xc680>
   1fac8:	b	206fc <__assert_fail@plt+0xdb44>
   1facc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fad0:	bl	2c264 <__assert_fail@plt+0x196ac>
   1fad4:	str	r0, [sp, #452]	; 0x1c4
   1fad8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fadc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1fae0:	ldr	r1, [r1, #8]
   1fae4:	ldr	r2, [sp, #452]	; 0x1c4
   1fae8:	bl	20ff0 <__assert_fail@plt+0xe438>
   1faec:	ldr	r0, [sp, #452]	; 0x1c4
   1faf0:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   1faf4:	b	206fc <__assert_fail@plt+0xdb44>
   1faf8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fafc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1fb00:	ldr	r1, [r1, #8]
   1fb04:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1fb08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fb0c:	str	r0, [sp, #220]	; 0xdc
   1fb10:	mov	r0, r2
   1fb14:	str	r1, [sp, #216]	; 0xd8
   1fb18:	mov	r1, r3
   1fb1c:	bl	21244 <__assert_fail@plt+0xe68c>
   1fb20:	ldr	r1, [sp, #220]	; 0xdc
   1fb24:	str	r0, [sp, #212]	; 0xd4
   1fb28:	mov	r0, r1
   1fb2c:	ldr	r1, [sp, #216]	; 0xd8
   1fb30:	ldr	r2, [sp, #212]	; 0xd4
   1fb34:	bl	20ff0 <__assert_fail@plt+0xe438>
   1fb38:	b	206fc <__assert_fail@plt+0xdb44>
   1fb3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1fb40:	ldr	r0, [r0, #28]
   1fb44:	bl	12b94 <getgrgid@plt>
   1fb48:	str	r0, [sp, #448]	; 0x1c0
   1fb4c:	ldr	r0, [sp, #448]	; 0x1c0
   1fb50:	movw	r1, #0
   1fb54:	cmp	r0, r1
   1fb58:	beq	1fb94 <__assert_fail@plt+0xcfdc>
   1fb5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fb60:	ldr	r0, [r0, #8]
   1fb64:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1fb68:	ldr	r1, [r1, #12]
   1fb6c:	add	r0, r0, r1
   1fb70:	movw	r1, #115	; 0x73
   1fb74:	strb	r1, [r0]
   1fb78:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fb7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1fb80:	ldr	r1, [r1, #8]
   1fb84:	ldr	r2, [sp, #448]	; 0x1c0
   1fb88:	ldr	r2, [r2]
   1fb8c:	bl	1f238 <__assert_fail@plt+0xc680>
   1fb90:	b	206fc <__assert_fail@plt+0xdb44>
   1fb94:	b	1fb98 <__assert_fail@plt+0xcfe0>
   1fb98:	add	r2, sp, #476	; 0x1dc
   1fb9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fba0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1fba4:	ldr	r1, [r1, #8]
   1fba8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fbac:	ldr	r3, [r3, #28]
   1fbb0:	mov	ip, #0
   1fbb4:	mov	lr, sp
   1fbb8:	mov	r4, #0
   1fbbc:	str	r4, [lr, #12]
   1fbc0:	mov	r5, #1
   1fbc4:	str	r5, [lr, #8]
   1fbc8:	str	r4, [lr, #4]
   1fbcc:	str	r5, [lr]
   1fbd0:	str	r0, [sp, #208]	; 0xd0
   1fbd4:	mov	r0, r3
   1fbd8:	str	r1, [sp, #204]	; 0xcc
   1fbdc:	mov	r1, ip
   1fbe0:	mov	r3, r4
   1fbe4:	bl	2e7b8 <__assert_fail@plt+0x1bc00>
   1fbe8:	ldr	r1, [sp, #208]	; 0xd0
   1fbec:	str	r0, [sp, #200]	; 0xc8
   1fbf0:	mov	r0, r1
   1fbf4:	ldr	r1, [sp, #204]	; 0xcc
   1fbf8:	ldr	r2, [sp, #200]	; 0xc8
   1fbfc:	bl	1f238 <__assert_fail@plt+0xc680>
   1fc00:	b	206fc <__assert_fail@plt+0xdb44>
   1fc04:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fc08:	bl	4cff0 <__assert_fail@plt+0x3a438>
   1fc0c:	str	r0, [sp, #444]	; 0x1bc
   1fc10:	ldr	r0, [sp, #444]	; 0x1bc
   1fc14:	ldr	r1, [sp, #444]	; 0x1bc
   1fc18:	str	r0, [sp, #196]	; 0xc4
   1fc1c:	mov	r0, r1
   1fc20:	bl	12888 <strlen@plt>
   1fc24:	ldr	r1, [sp, #196]	; 0xc4
   1fc28:	add	r0, r1, r0
   1fc2c:	mvn	r1, #0
   1fc30:	add	r0, r0, r1
   1fc34:	str	r0, [sp, #440]	; 0x1b8
   1fc38:	ldr	r0, [sp, #444]	; 0x1bc
   1fc3c:	ldr	r1, [sp, #440]	; 0x1b8
   1fc40:	cmp	r0, r1
   1fc44:	bhi	1fc74 <__assert_fail@plt+0xd0bc>
   1fc48:	ldr	r0, [sp, #440]	; 0x1b8
   1fc4c:	ldrb	r0, [r0]
   1fc50:	cmp	r0, #47	; 0x2f
   1fc54:	beq	1fc5c <__assert_fail@plt+0xd0a4>
   1fc58:	b	1fc74 <__assert_fail@plt+0xd0bc>
   1fc5c:	b	1fc60 <__assert_fail@plt+0xd0a8>
   1fc60:	ldr	r0, [sp, #440]	; 0x1b8
   1fc64:	mvn	r1, #0
   1fc68:	add	r0, r0, r1
   1fc6c:	str	r0, [sp, #440]	; 0x1b8
   1fc70:	b	1fc38 <__assert_fail@plt+0xd080>
   1fc74:	ldr	r0, [sp, #444]	; 0x1bc
   1fc78:	ldr	r1, [sp, #440]	; 0x1b8
   1fc7c:	cmp	r0, r1
   1fc80:	bcs	1fca0 <__assert_fail@plt+0xd0e8>
   1fc84:	ldr	r0, [sp, #440]	; 0x1b8
   1fc88:	ldrb	r0, [r0, #1]
   1fc8c:	cmp	r0, #47	; 0x2f
   1fc90:	bne	1fca0 <__assert_fail@plt+0xd0e8>
   1fc94:	ldr	r0, [sp, #440]	; 0x1b8
   1fc98:	movw	r1, #0
   1fc9c:	strb	r1, [r0, #1]
   1fca0:	ldr	r0, [sp, #444]	; 0x1bc
   1fca4:	movw	r1, #47	; 0x2f
   1fca8:	bl	12a14 <strrchr@plt>
   1fcac:	str	r0, [sp, #440]	; 0x1b8
   1fcb0:	ldr	r0, [sp, #440]	; 0x1b8
   1fcb4:	movw	r1, #0
   1fcb8:	cmp	r0, r1
   1fcbc:	bne	1fcdc <__assert_fail@plt+0xd124>
   1fcc0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fcc4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1fcc8:	ldr	r1, [r1, #8]
   1fccc:	movw	r2, #26652	; 0x681c
   1fcd0:	movt	r2, #7
   1fcd4:	bl	20ff0 <__assert_fail@plt+0xe438>
   1fcd8:	b	1fcfc <__assert_fail@plt+0xd144>
   1fcdc:	ldr	r0, [sp, #440]	; 0x1b8
   1fce0:	movw	r1, #0
   1fce4:	strb	r1, [r0]
   1fce8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fcec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1fcf0:	ldr	r1, [r1, #8]
   1fcf4:	ldr	r2, [sp, #444]	; 0x1bc
   1fcf8:	bl	20ff0 <__assert_fail@plt+0xe438>
   1fcfc:	ldr	r0, [sp, #444]	; 0x1bc
   1fd00:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   1fd04:	b	206fc <__assert_fail@plt+0xdb44>
   1fd08:	movw	r0, #57436	; 0xe05c
   1fd0c:	movt	r0, #8
   1fd10:	ldr	r0, [r0, #20]
   1fd14:	add	r0, r0, #1
   1fd18:	bl	4a2f0 <__assert_fail@plt+0x37738>
   1fd1c:	str	r0, [sp, #436]	; 0x1b4
   1fd20:	ldr	r0, [sp, #436]	; 0x1b4
   1fd24:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1fd28:	movw	r2, #57436	; 0xe05c
   1fd2c:	movt	r2, #8
   1fd30:	ldr	r3, [r2, #20]
   1fd34:	str	r2, [sp, #192]	; 0xc0
   1fd38:	mov	r2, r3
   1fd3c:	bl	125c4 <memcpy@plt>
   1fd40:	ldr	r0, [sp, #436]	; 0x1b4
   1fd44:	ldr	r1, [sp, #192]	; 0xc0
   1fd48:	ldr	r2, [r1, #20]
   1fd4c:	add	r0, r0, r2
   1fd50:	movw	r2, #0
   1fd54:	strb	r2, [r0]
   1fd58:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fd5c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1fd60:	ldr	r1, [r2, #8]
   1fd64:	ldr	r2, [sp, #436]	; 0x1b4
   1fd68:	bl	1f238 <__assert_fail@plt+0xc680>
   1fd6c:	ldr	r0, [sp, #436]	; 0x1b4
   1fd70:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   1fd74:	b	206fc <__assert_fail@plt+0xdb44>
   1fd78:	add	r2, sp, #476	; 0x1dc
   1fd7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fd80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1fd84:	ldr	r1, [r1, #8]
   1fd88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fd8c:	ldr	ip, [r3, #96]	; 0x60
   1fd90:	ldr	r3, [r3, #100]	; 0x64
   1fd94:	mov	lr, sp
   1fd98:	mov	r4, #0
   1fd9c:	str	r4, [lr, #12]
   1fda0:	mov	r5, #1
   1fda4:	str	r5, [lr, #8]
   1fda8:	str	r4, [lr, #4]
   1fdac:	str	r5, [lr]
   1fdb0:	str	r0, [sp, #188]	; 0xbc
   1fdb4:	mov	r0, ip
   1fdb8:	str	r1, [sp, #184]	; 0xb8
   1fdbc:	mov	r1, r3
   1fdc0:	mov	r3, r4
   1fdc4:	bl	2e7b8 <__assert_fail@plt+0x1bc00>
   1fdc8:	ldr	r1, [sp, #188]	; 0xbc
   1fdcc:	str	r0, [sp, #180]	; 0xb4
   1fdd0:	mov	r0, r1
   1fdd4:	ldr	r1, [sp, #184]	; 0xb8
   1fdd8:	ldr	r2, [sp, #180]	; 0xb4
   1fddc:	bl	1f238 <__assert_fail@plt+0xc680>
   1fde0:	b	206fc <__assert_fail@plt+0xdb44>
   1fde4:	add	r2, sp, #476	; 0x1dc
   1fde8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fdec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1fdf0:	ldr	r1, [r1, #8]
   1fdf4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fdf8:	ldr	ip, [r3, #64]	; 0x40
   1fdfc:	ldr	r3, [r3, #68]	; 0x44
   1fe00:	mov	lr, sp
   1fe04:	mov	r4, #0
   1fe08:	str	r4, [lr, #12]
   1fe0c:	mov	r5, #1024	; 0x400
   1fe10:	str	r5, [lr, #8]
   1fe14:	str	r4, [lr, #4]
   1fe18:	mov	r5, #512	; 0x200
   1fe1c:	str	r5, [lr]
   1fe20:	str	r0, [sp, #176]	; 0xb0
   1fe24:	mov	r0, ip
   1fe28:	str	r1, [sp, #172]	; 0xac
   1fe2c:	mov	r1, r3
   1fe30:	mov	r3, r4
   1fe34:	bl	2e7b8 <__assert_fail@plt+0x1bc00>
   1fe38:	ldr	r1, [sp, #176]	; 0xb0
   1fe3c:	str	r0, [sp, #168]	; 0xa8
   1fe40:	mov	r0, r1
   1fe44:	ldr	r1, [sp, #172]	; 0xac
   1fe48:	ldr	r2, [sp, #168]	; 0xa8
   1fe4c:	bl	1f238 <__assert_fail@plt+0xc680>
   1fe50:	b	206fc <__assert_fail@plt+0xdb44>
   1fe54:	movw	r0, #0
   1fe58:	str	r0, [sp, #432]	; 0x1b0
   1fe5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1fe60:	ldr	r0, [r0, #16]
   1fe64:	and	r0, r0, #61440	; 0xf000
   1fe68:	cmp	r0, #40960	; 0xa000
   1fe6c:	bne	1fec8 <__assert_fail@plt+0xd310>
   1fe70:	movw	r0, #57436	; 0xe05c
   1fe74:	movt	r0, #8
   1fe78:	ldr	r1, [r0, #16]
   1fe7c:	ldr	r0, [r0, #12]
   1fe80:	str	r0, [sp, #164]	; 0xa4
   1fe84:	mov	r0, r1
   1fe88:	ldr	r1, [sp, #164]	; 0xa4
   1fe8c:	bl	2b888 <__assert_fail@plt+0x18cd0>
   1fe90:	str	r0, [sp, #432]	; 0x1b0
   1fe94:	ldr	r0, [sp, #432]	; 0x1b0
   1fe98:	movw	r1, #0
   1fe9c:	cmp	r0, r1
   1fea0:	bne	1fec4 <__assert_fail@plt+0xd30c>
   1fea4:	bl	128d0 <__errno_location@plt>
   1fea8:	ldr	r0, [r0]
   1feac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1feb0:	bl	1bf18 <__assert_fail@plt+0x9360>
   1feb4:	movw	r0, #57436	; 0xe05c
   1feb8:	movt	r0, #8
   1febc:	movw	r1, #1
   1fec0:	str	r1, [r0, #28]
   1fec4:	b	1fec8 <__assert_fail@plt+0xd310>
   1fec8:	ldr	r0, [sp, #432]	; 0x1b0
   1fecc:	movw	r1, #0
   1fed0:	cmp	r0, r1
   1fed4:	beq	1fef0 <__assert_fail@plt+0xd338>
   1fed8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fedc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1fee0:	ldr	r1, [r1, #8]
   1fee4:	ldr	r2, [sp, #432]	; 0x1b0
   1fee8:	bl	20ff0 <__assert_fail@plt+0xe438>
   1feec:	b	1ff08 <__assert_fail@plt+0xd350>
   1fef0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fef4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1fef8:	ldr	r1, [r1, #8]
   1fefc:	movw	r2, #29909	; 0x74d5
   1ff00:	movt	r2, #7
   1ff04:	bl	20ff0 <__assert_fail@plt+0xe438>
   1ff08:	ldr	r0, [sp, #432]	; 0x1b0
   1ff0c:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   1ff10:	b	206fc <__assert_fail@plt+0xdb44>
   1ff14:	add	r1, sp, #416	; 0x1a0
   1ff18:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ff1c:	bl	2c970 <__assert_fail@plt+0x19db8>
   1ff20:	add	r2, sp, #416	; 0x1a0
   1ff24:	movw	r0, #0
   1ff28:	strb	r0, [sp, #426]	; 0x1aa
   1ff2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ff30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ff34:	ldr	r1, [r1, #8]
   1ff38:	bl	1f238 <__assert_fail@plt+0xc680>
   1ff3c:	b	206fc <__assert_fail@plt+0xdb44>
   1ff40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ff44:	ldr	r0, [r0, #16]
   1ff48:	str	r0, [sp, #412]	; 0x19c
   1ff4c:	movw	r0, #1
   1ff50:	strb	r0, [sp, #411]	; 0x19b
   1ff54:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ff58:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ff5c:	ldr	r1, [r1, #8]
   1ff60:	ldrb	r2, [sp, #411]	; 0x19b
   1ff64:	tst	r2, #1
   1ff68:	str	r0, [sp, #160]	; 0xa0
   1ff6c:	str	r1, [sp, #156]	; 0x9c
   1ff70:	beq	1ff88 <__assert_fail@plt+0xd3d0>
   1ff74:	ldr	r0, [sp, #412]	; 0x19c
   1ff78:	movw	r1, #4095	; 0xfff
   1ff7c:	and	r0, r0, r1
   1ff80:	str	r0, [sp, #152]	; 0x98
   1ff84:	b	20138 <__assert_fail@plt+0xd580>
   1ff88:	ldr	r0, [sp, #412]	; 0x19c
   1ff8c:	and	r0, r0, #2048	; 0x800
   1ff90:	cmp	r0, #0
   1ff94:	movw	r0, #0
   1ff98:	movne	r0, #1
   1ff9c:	tst	r0, #1
   1ffa0:	movw	r0, #2048	; 0x800
   1ffa4:	moveq	r0, #0
   1ffa8:	ldr	r1, [sp, #412]	; 0x19c
   1ffac:	and	r1, r1, #1024	; 0x400
   1ffb0:	cmp	r1, #0
   1ffb4:	movw	r1, #0
   1ffb8:	movne	r1, #1
   1ffbc:	tst	r1, #1
   1ffc0:	movw	r1, #1024	; 0x400
   1ffc4:	moveq	r1, #0
   1ffc8:	orr	r0, r0, r1
   1ffcc:	ldr	r1, [sp, #412]	; 0x19c
   1ffd0:	and	r1, r1, #512	; 0x200
   1ffd4:	cmp	r1, #0
   1ffd8:	movw	r1, #0
   1ffdc:	movne	r1, #1
   1ffe0:	tst	r1, #1
   1ffe4:	movw	r1, #512	; 0x200
   1ffe8:	moveq	r1, #0
   1ffec:	orr	r0, r0, r1
   1fff0:	ldr	r1, [sp, #412]	; 0x19c
   1fff4:	and	r1, r1, #256	; 0x100
   1fff8:	cmp	r1, #0
   1fffc:	movw	r1, #0
   20000:	movne	r1, #1
   20004:	tst	r1, #1
   20008:	movw	r1, #256	; 0x100
   2000c:	moveq	r1, #0
   20010:	orr	r0, r0, r1
   20014:	ldr	r1, [sp, #412]	; 0x19c
   20018:	and	r1, r1, #128	; 0x80
   2001c:	cmp	r1, #0
   20020:	movw	r1, #0
   20024:	movne	r1, #1
   20028:	tst	r1, #1
   2002c:	movw	r1, #128	; 0x80
   20030:	moveq	r1, #0
   20034:	orr	r0, r0, r1
   20038:	ldr	r1, [sp, #412]	; 0x19c
   2003c:	and	r1, r1, #64	; 0x40
   20040:	cmp	r1, #0
   20044:	movw	r1, #0
   20048:	movne	r1, #1
   2004c:	tst	r1, #1
   20050:	movw	r1, #64	; 0x40
   20054:	moveq	r1, #0
   20058:	orr	r0, r0, r1
   2005c:	ldr	r1, [sp, #412]	; 0x19c
   20060:	and	r1, r1, #32
   20064:	cmp	r1, #0
   20068:	movw	r1, #0
   2006c:	movne	r1, #1
   20070:	tst	r1, #1
   20074:	movw	r1, #32
   20078:	moveq	r1, #0
   2007c:	orr	r0, r0, r1
   20080:	ldr	r1, [sp, #412]	; 0x19c
   20084:	and	r1, r1, #16
   20088:	cmp	r1, #0
   2008c:	movw	r1, #0
   20090:	movne	r1, #1
   20094:	tst	r1, #1
   20098:	movw	r1, #16
   2009c:	moveq	r1, #0
   200a0:	orr	r0, r0, r1
   200a4:	ldr	r1, [sp, #412]	; 0x19c
   200a8:	and	r1, r1, #8
   200ac:	cmp	r1, #0
   200b0:	movw	r1, #0
   200b4:	movne	r1, #1
   200b8:	tst	r1, #1
   200bc:	movw	r1, #8
   200c0:	moveq	r1, #0
   200c4:	orr	r0, r0, r1
   200c8:	ldr	r1, [sp, #412]	; 0x19c
   200cc:	and	r1, r1, #4
   200d0:	cmp	r1, #0
   200d4:	movw	r1, #0
   200d8:	movne	r1, #1
   200dc:	tst	r1, #1
   200e0:	movw	r1, #4
   200e4:	moveq	r1, #0
   200e8:	orr	r0, r0, r1
   200ec:	ldr	r1, [sp, #412]	; 0x19c
   200f0:	and	r1, r1, #2
   200f4:	cmp	r1, #0
   200f8:	movw	r1, #0
   200fc:	movne	r1, #1
   20100:	tst	r1, #1
   20104:	movw	r1, #2
   20108:	moveq	r1, #0
   2010c:	orr	r0, r0, r1
   20110:	ldr	r1, [sp, #412]	; 0x19c
   20114:	and	r1, r1, #1
   20118:	cmp	r1, #0
   2011c:	movw	r1, #0
   20120:	movne	r1, #1
   20124:	tst	r1, #1
   20128:	movw	r1, #1
   2012c:	moveq	r1, #0
   20130:	orr	r0, r0, r1
   20134:	str	r0, [sp, #152]	; 0x98
   20138:	ldr	r0, [sp, #152]	; 0x98
   2013c:	ldr	r1, [sp, #160]	; 0xa0
   20140:	str	r0, [sp, #148]	; 0x94
   20144:	mov	r0, r1
   20148:	ldr	r1, [sp, #156]	; 0x9c
   2014c:	ldr	r2, [sp, #148]	; 0x94
   20150:	bl	1f238 <__assert_fail@plt+0xc680>
   20154:	b	206fc <__assert_fail@plt+0xdb44>
   20158:	add	r2, sp, #476	; 0x1dc
   2015c:	ldr	r0, [fp, #-20]	; 0xffffffec
   20160:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20164:	ldr	r1, [r1, #8]
   20168:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2016c:	ldr	r3, [r3, #20]
   20170:	mov	ip, #0
   20174:	mov	lr, sp
   20178:	mov	r4, #0
   2017c:	str	r4, [lr, #12]
   20180:	mov	r5, #1
   20184:	str	r5, [lr, #8]
   20188:	str	r4, [lr, #4]
   2018c:	str	r5, [lr]
   20190:	str	r0, [sp, #144]	; 0x90
   20194:	mov	r0, r3
   20198:	str	r1, [sp, #140]	; 0x8c
   2019c:	mov	r1, ip
   201a0:	mov	r3, r4
   201a4:	bl	2e7b8 <__assert_fail@plt+0x1bc00>
   201a8:	ldr	r1, [sp, #144]	; 0x90
   201ac:	str	r0, [sp, #136]	; 0x88
   201b0:	mov	r0, r1
   201b4:	ldr	r1, [sp, #140]	; 0x8c
   201b8:	ldr	r2, [sp, #136]	; 0x88
   201bc:	bl	1f238 <__assert_fail@plt+0xc680>
   201c0:	b	206fc <__assert_fail@plt+0xdb44>
   201c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   201c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   201cc:	ldr	r1, [r1, #8]
   201d0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   201d4:	bl	20ff0 <__assert_fail@plt+0xe438>
   201d8:	b	206fc <__assert_fail@plt+0xdb44>
   201dc:	movw	r0, #57436	; 0xe05c
   201e0:	movt	r0, #8
   201e4:	ldr	r0, [r0]
   201e8:	cmp	r0, #0
   201ec:	ble	20228 <__assert_fail@plt+0xd670>
   201f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   201f4:	movw	r1, #57436	; 0xe05c
   201f8:	movt	r1, #8
   201fc:	ldr	r1, [r1, #20]
   20200:	add	r0, r0, r1
   20204:	str	r0, [sp, #472]	; 0x1d8
   20208:	ldr	r0, [sp, #472]	; 0x1d8
   2020c:	ldrb	r0, [r0]
   20210:	cmp	r0, #47	; 0x2f
   20214:	bne	20224 <__assert_fail@plt+0xd66c>
   20218:	ldr	r0, [sp, #472]	; 0x1d8
   2021c:	add	r0, r0, #1
   20220:	str	r0, [sp, #472]	; 0x1d8
   20224:	b	20234 <__assert_fail@plt+0xd67c>
   20228:	movw	r0, #29909	; 0x74d5
   2022c:	movt	r0, #7
   20230:	str	r0, [sp, #472]	; 0x1d8
   20234:	ldr	r0, [fp, #-20]	; 0xffffffec
   20238:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2023c:	ldr	r1, [r1, #8]
   20240:	ldr	r2, [sp, #472]	; 0x1d8
   20244:	bl	20ff0 <__assert_fail@plt+0xe438>
   20248:	b	206fc <__assert_fail@plt+0xdb44>
   2024c:	add	r2, sp, #476	; 0x1dc
   20250:	ldr	r0, [fp, #-20]	; 0xffffffec
   20254:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20258:	ldr	r1, [r1, #8]
   2025c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20260:	ldr	ip, [r3, #48]	; 0x30
   20264:	ldr	r3, [r3, #52]	; 0x34
   20268:	mov	lr, sp
   2026c:	mov	r4, #0
   20270:	str	r4, [lr, #12]
   20274:	mov	r5, #1
   20278:	str	r5, [lr, #8]
   2027c:	str	r4, [lr, #4]
   20280:	str	r5, [lr]
   20284:	str	r0, [sp, #132]	; 0x84
   20288:	mov	r0, ip
   2028c:	str	r1, [sp, #128]	; 0x80
   20290:	mov	r1, r3
   20294:	mov	r3, r4
   20298:	bl	2e7b8 <__assert_fail@plt+0x1bc00>
   2029c:	ldr	r1, [sp, #132]	; 0x84
   202a0:	str	r0, [sp, #124]	; 0x7c
   202a4:	mov	r0, r1
   202a8:	ldr	r1, [sp, #128]	; 0x80
   202ac:	ldr	r2, [sp, #124]	; 0x7c
   202b0:	bl	1f238 <__assert_fail@plt+0xc680>
   202b4:	b	206fc <__assert_fail@plt+0xdb44>
   202b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   202bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   202c0:	ldr	r1, [r1, #8]
   202c4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   202c8:	str	r0, [sp, #120]	; 0x78
   202cc:	mov	r0, r2
   202d0:	str	r1, [sp, #116]	; 0x74
   202d4:	bl	21060 <__assert_fail@plt+0xe4a8>
   202d8:	ldr	r0, [sp, #120]	; 0x78
   202dc:	ldr	r1, [sp, #116]	; 0x74
   202e0:	vmov	r2, r3, d0
   202e4:	bl	1f238 <__assert_fail@plt+0xc680>
   202e8:	b	206fc <__assert_fail@plt+0xdb44>
   202ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   202f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   202f4:	ldr	r1, [r1, #8]
   202f8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   202fc:	add	r3, sp, #400	; 0x190
   20300:	str	r0, [sp, #112]	; 0x70
   20304:	mov	r0, r3
   20308:	str	r1, [sp, #108]	; 0x6c
   2030c:	mov	r1, r2
   20310:	bl	498c8 <__assert_fail@plt+0x36d10>
   20314:	ldr	r0, [sp, #400]	; 0x190
   20318:	ldr	r1, [sp, #404]	; 0x194
   2031c:	bl	20d04 <__assert_fail@plt+0xe14c>
   20320:	ldr	r1, [sp, #112]	; 0x70
   20324:	str	r0, [sp, #104]	; 0x68
   20328:	mov	r0, r1
   2032c:	ldr	r1, [sp, #108]	; 0x6c
   20330:	ldr	r2, [sp, #104]	; 0x68
   20334:	bl	1f238 <__assert_fail@plt+0xc680>
   20338:	b	206fc <__assert_fail@plt+0xdb44>
   2033c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20340:	ldr	r0, [r0, #24]
   20344:	bl	124e0 <getpwuid@plt>
   20348:	str	r0, [sp, #396]	; 0x18c
   2034c:	ldr	r0, [sp, #396]	; 0x18c
   20350:	movw	r1, #0
   20354:	cmp	r0, r1
   20358:	beq	20394 <__assert_fail@plt+0xd7dc>
   2035c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20360:	ldr	r0, [r0, #8]
   20364:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20368:	ldr	r1, [r1, #12]
   2036c:	add	r0, r0, r1
   20370:	movw	r1, #115	; 0x73
   20374:	strb	r1, [r0]
   20378:	ldr	r0, [fp, #-20]	; 0xffffffec
   2037c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20380:	ldr	r1, [r1, #8]
   20384:	ldr	r2, [sp, #396]	; 0x18c
   20388:	ldr	r2, [r2]
   2038c:	bl	1f238 <__assert_fail@plt+0xc680>
   20390:	b	206fc <__assert_fail@plt+0xdb44>
   20394:	b	20398 <__assert_fail@plt+0xd7e0>
   20398:	add	r2, sp, #476	; 0x1dc
   2039c:	ldr	r0, [fp, #-20]	; 0xffffffec
   203a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   203a4:	ldr	r1, [r1, #8]
   203a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   203ac:	ldr	r3, [r3, #24]
   203b0:	mov	ip, #0
   203b4:	mov	lr, sp
   203b8:	mov	r4, #0
   203bc:	str	r4, [lr, #12]
   203c0:	mov	r5, #1
   203c4:	str	r5, [lr, #8]
   203c8:	str	r4, [lr, #4]
   203cc:	str	r5, [lr]
   203d0:	str	r0, [sp, #100]	; 0x64
   203d4:	mov	r0, r3
   203d8:	str	r1, [sp, #96]	; 0x60
   203dc:	mov	r1, ip
   203e0:	mov	r3, r4
   203e4:	bl	2e7b8 <__assert_fail@plt+0x1bc00>
   203e8:	ldr	r1, [sp, #100]	; 0x64
   203ec:	str	r0, [sp, #92]	; 0x5c
   203f0:	mov	r0, r1
   203f4:	ldr	r1, [sp, #96]	; 0x60
   203f8:	ldr	r2, [sp, #92]	; 0x5c
   203fc:	bl	1f238 <__assert_fail@plt+0xc680>
   20400:	b	206fc <__assert_fail@plt+0xdb44>
   20404:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20408:	ldr	r0, [r0, #16]
   2040c:	and	r0, r0, #61440	; 0xf000
   20410:	cmp	r0, #40960	; 0xa000
   20414:	bne	20554 <__assert_fail@plt+0xd99c>
   20418:	movw	r0, #57436	; 0xe05c
   2041c:	movt	r0, #8
   20420:	ldr	r1, [r0, #16]
   20424:	ldr	r0, [r0, #12]
   20428:	str	r0, [sp, #88]	; 0x58
   2042c:	mov	r0, r1
   20430:	ldr	r1, [sp, #88]	; 0x58
   20434:	add	r2, sp, #288	; 0x120
   20438:	movw	r3, #0
   2043c:	bl	7566c <__assert_fail@plt+0x62ab4>
   20440:	cmp	r0, #0
   20444:	beq	20514 <__assert_fail@plt+0xd95c>
   20448:	bl	128d0 <__errno_location@plt>
   2044c:	ldr	r0, [r0]
   20450:	cmp	r0, #2
   20454:	beq	20468 <__assert_fail@plt+0xd8b0>
   20458:	bl	128d0 <__errno_location@plt>
   2045c:	ldr	r0, [r0]
   20460:	cmp	r0, #20
   20464:	bne	20484 <__assert_fail@plt+0xd8cc>
   20468:	ldr	r0, [fp, #-20]	; 0xffffffec
   2046c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20470:	ldr	r1, [r1, #8]
   20474:	movw	r2, #32780	; 0x800c
   20478:	movt	r2, #7
   2047c:	bl	1f238 <__assert_fail@plt+0xc680>
   20480:	b	206fc <__assert_fail@plt+0xdb44>
   20484:	bl	128d0 <__errno_location@plt>
   20488:	ldr	r0, [r0]
   2048c:	cmp	r0, #40	; 0x28
   20490:	bne	204b0 <__assert_fail@plt+0xd8f8>
   20494:	ldr	r0, [fp, #-20]	; 0xffffffec
   20498:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2049c:	ldr	r1, [r1, #8]
   204a0:	movw	r2, #30266	; 0x763a
   204a4:	movt	r2, #7
   204a8:	bl	1f238 <__assert_fail@plt+0xc680>
   204ac:	b	206fc <__assert_fail@plt+0xdb44>
   204b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   204b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   204b8:	ldr	r1, [r1, #8]
   204bc:	movw	r2, #34600	; 0x8728
   204c0:	movt	r2, #7
   204c4:	bl	1f238 <__assert_fail@plt+0xc680>
   204c8:	bl	128d0 <__errno_location@plt>
   204cc:	ldr	r1, [r0]
   204d0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   204d4:	movw	r2, #0
   204d8:	str	r0, [sp, #84]	; 0x54
   204dc:	mov	r0, r2
   204e0:	ldr	r2, [sp, #84]	; 0x54
   204e4:	str	r1, [sp, #80]	; 0x50
   204e8:	mov	r1, r2
   204ec:	bl	1d994 <__assert_fail@plt+0xaddc>
   204f0:	movw	r1, #0
   204f4:	str	r0, [sp, #76]	; 0x4c
   204f8:	mov	r0, r1
   204fc:	ldr	r1, [sp, #80]	; 0x50
   20500:	movw	r2, #50143	; 0xc3df
   20504:	movt	r2, #7
   20508:	ldr	r3, [sp, #76]	; 0x4c
   2050c:	bl	12780 <error@plt>
   20510:	b	206fc <__assert_fail@plt+0xdb44>
   20514:	ldr	r0, [fp, #-20]	; 0xffffffec
   20518:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2051c:	ldr	r1, [r1, #8]
   20520:	ldr	r2, [sp, #304]	; 0x130
   20524:	and	r2, r2, #61440	; 0xf000
   20528:	str	r0, [sp, #72]	; 0x48
   2052c:	mov	r0, r2
   20530:	str	r1, [sp, #68]	; 0x44
   20534:	bl	21160 <__assert_fail@plt+0xe5a8>
   20538:	ldr	r1, [sp, #72]	; 0x48
   2053c:	str	r0, [sp, #64]	; 0x40
   20540:	mov	r0, r1
   20544:	ldr	r1, [sp, #68]	; 0x44
   20548:	ldr	r2, [sp, #64]	; 0x40
   2054c:	bl	1f238 <__assert_fail@plt+0xc680>
   20550:	b	20594 <__assert_fail@plt+0xd9dc>
   20554:	ldr	r0, [fp, #-20]	; 0xffffffec
   20558:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2055c:	ldr	r1, [r1, #8]
   20560:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20564:	ldr	r2, [r2, #16]
   20568:	and	r2, r2, #61440	; 0xf000
   2056c:	str	r0, [sp, #60]	; 0x3c
   20570:	mov	r0, r2
   20574:	str	r1, [sp, #56]	; 0x38
   20578:	bl	21160 <__assert_fail@plt+0xe5a8>
   2057c:	ldr	r1, [sp, #60]	; 0x3c
   20580:	str	r0, [sp, #52]	; 0x34
   20584:	mov	r0, r1
   20588:	ldr	r1, [sp, #56]	; 0x38
   2058c:	ldr	r2, [sp, #52]	; 0x34
   20590:	bl	1f238 <__assert_fail@plt+0xc680>
   20594:	b	206fc <__assert_fail@plt+0xdb44>
   20598:	ldr	r0, [fp, #-20]	; 0xffffffec
   2059c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   205a0:	ldr	r1, [r1, #8]
   205a4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   205a8:	ldr	r2, [r2, #16]
   205ac:	and	r2, r2, #61440	; 0xf000
   205b0:	str	r0, [sp, #48]	; 0x30
   205b4:	mov	r0, r2
   205b8:	str	r1, [sp, #44]	; 0x2c
   205bc:	bl	21160 <__assert_fail@plt+0xe5a8>
   205c0:	ldr	r1, [sp, #48]	; 0x30
   205c4:	str	r0, [sp, #40]	; 0x28
   205c8:	mov	r0, r1
   205cc:	ldr	r1, [sp, #44]	; 0x2c
   205d0:	ldr	r2, [sp, #40]	; 0x28
   205d4:	bl	1f238 <__assert_fail@plt+0xc680>
   205d8:	b	206fc <__assert_fail@plt+0xdb44>
   205dc:	movw	r0, #57480	; 0xe088
   205e0:	movt	r0, #8
   205e4:	ldr	r0, [r0, #64]	; 0x40
   205e8:	movw	r1, #57436	; 0xe05c
   205ec:	movt	r1, #8
   205f0:	ldr	r2, [r1, #16]
   205f4:	ldr	r1, [r1, #12]
   205f8:	str	r0, [sp, #36]	; 0x24
   205fc:	mov	r0, r2
   20600:	add	r2, sp, #284	; 0x11c
   20604:	ldr	r3, [sp, #36]	; 0x24
   20608:	blx	r3
   2060c:	str	r0, [sp, #280]	; 0x118
   20610:	ldr	r0, [sp, #280]	; 0x118
   20614:	cmp	r0, #0
   20618:	bge	20690 <__assert_fail@plt+0xdad8>
   2061c:	ldr	r0, [fp, #-20]	; 0xffffffec
   20620:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20624:	ldr	r1, [r1, #8]
   20628:	movw	r2, #29909	; 0x74d5
   2062c:	movt	r2, #7
   20630:	bl	1f238 <__assert_fail@plt+0xc680>
   20634:	bl	128d0 <__errno_location@plt>
   20638:	ldr	r1, [r0]
   2063c:	movw	r0, #24215	; 0x5e97
   20640:	movt	r0, #7
   20644:	str	r1, [sp, #32]
   20648:	bl	12864 <gettext@plt>
   2064c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20650:	movw	r2, #0
   20654:	str	r0, [sp, #28]
   20658:	mov	r0, r2
   2065c:	bl	1d994 <__assert_fail@plt+0xaddc>
   20660:	movw	r1, #0
   20664:	str	r0, [sp, #24]
   20668:	mov	r0, r1
   2066c:	ldr	r1, [sp, #32]
   20670:	ldr	r2, [sp, #28]
   20674:	ldr	r3, [sp, #24]
   20678:	bl	12780 <error@plt>
   2067c:	movw	r0, #57436	; 0xe05c
   20680:	movt	r0, #8
   20684:	movw	r1, #1
   20688:	str	r1, [r0, #28]
   2068c:	b	206ac <__assert_fail@plt+0xdaf4>
   20690:	ldr	r0, [fp, #-20]	; 0xffffffec
   20694:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20698:	ldr	r1, [r1, #8]
   2069c:	ldr	r2, [sp, #284]	; 0x11c
   206a0:	bl	1f238 <__assert_fail@plt+0xc680>
   206a4:	ldr	r0, [sp, #284]	; 0x11c
   206a8:	bl	12ac8 <freecon@plt>
   206ac:	b	206fc <__assert_fail@plt+0xdb44>
   206b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   206b4:	ldr	r0, [r0, #8]
   206b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   206bc:	ldr	r2, [r1, #12]
   206c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   206c4:	movw	r1, #1
   206c8:	bl	20c5c <__assert_fail@plt+0xe0a4>
   206cc:	b	206fc <__assert_fail@plt+0xdb44>
   206d0:	movw	r0, #31883	; 0x7c8b
   206d4:	movt	r0, #7
   206d8:	bl	12864 <gettext@plt>
   206dc:	movw	r1, #1
   206e0:	str	r0, [sp, #20]
   206e4:	mov	r0, r1
   206e8:	movw	r1, #0
   206ec:	ldr	r2, [sp, #20]
   206f0:	movw	r3, #32202	; 0x7dca
   206f4:	movt	r3, #7
   206f8:	bl	12780 <error@plt>
   206fc:	b	20700 <__assert_fail@plt+0xdb48>
   20700:	sub	sp, fp, #16
   20704:	pop	{r4, r5, r6, r7, fp, pc}
   20708:	push	{fp, lr}
   2070c:	mov	fp, sp
   20710:	sub	sp, sp, #112	; 0x70
   20714:	str	r0, [fp, #-4]
   20718:	str	r1, [fp, #-8]
   2071c:	str	r2, [fp, #-12]
   20720:	str	r3, [fp, #-16]
   20724:	movw	r0, #0
   20728:	str	r0, [fp, #-20]	; 0xffffffec
   2072c:	ldr	r0, [fp, #-4]
   20730:	bl	12888 <strlen@plt>
   20734:	add	r0, r0, #2
   20738:	bl	4a2f0 <__assert_fail@plt+0x37738>
   2073c:	str	r0, [fp, #-20]	; 0xffffffec
   20740:	ldr	r0, [fp, #-20]	; 0xffffffec
   20744:	movw	r1, #95	; 0x5f
   20748:	strb	r1, [r0]
   2074c:	ldr	r0, [fp, #-20]	; 0xffffffec
   20750:	add	r0, r0, #1
   20754:	ldr	r1, [fp, #-4]
   20758:	ldr	r2, [fp, #-4]
   2075c:	str	r0, [sp, #16]
   20760:	mov	r0, r2
   20764:	str	r1, [sp, #12]
   20768:	bl	12888 <strlen@plt>
   2076c:	add	r2, r0, #1
   20770:	ldr	r0, [sp, #16]
   20774:	ldr	r1, [sp, #12]
   20778:	bl	125c4 <memcpy@plt>
   2077c:	ldr	r0, [fp, #-8]
   20780:	add	r1, sp, #48	; 0x30
   20784:	str	r0, [sp, #8]
   20788:	mov	r0, r1
   2078c:	ldr	r1, [sp, #8]
   20790:	movw	r2, #44	; 0x2c
   20794:	bl	125c4 <memcpy@plt>
   20798:	ldr	r0, [sp, #48]	; 0x30
   2079c:	cmp	r0, #11
   207a0:	blt	207b4 <__assert_fail@plt+0xdbfc>
   207a4:	ldr	r0, [sp, #48]	; 0x30
   207a8:	sub	r0, r0, #11
   207ac:	str	r0, [sp, #48]	; 0x30
   207b0:	b	207c0 <__assert_fail@plt+0xdc08>
   207b4:	ldr	r0, [sp, #48]	; 0x30
   207b8:	add	r0, r0, #11
   207bc:	str	r0, [sp, #48]	; 0x30
   207c0:	movw	r0, #55952	; 0xda90
   207c4:	movt	r0, #8
   207c8:	ldr	r0, [r0]
   207cc:	movw	r1, #0
   207d0:	cmp	r0, r1
   207d4:	bne	207fc <__assert_fail@plt+0xdc44>
   207d8:	movw	r0, #1
   207dc:	movw	r1, #55956	; 0xda94
   207e0:	movt	r1, #8
   207e4:	str	r0, [r1]
   207e8:	ldr	r0, [r1]
   207ec:	bl	4a2f0 <__assert_fail@plt+0x37738>
   207f0:	movw	r1, #55952	; 0xda90
   207f4:	movt	r1, #8
   207f8:	str	r0, [r1]
   207fc:	b	20800 <__assert_fail@plt+0xdc48>
   20800:	movw	r0, #55952	; 0xda90
   20804:	movt	r0, #8
   20808:	ldr	r0, [r0]
   2080c:	movw	r1, #55956	; 0xda94
   20810:	movt	r1, #8
   20814:	ldr	r1, [r1]
   20818:	ldr	r2, [fp, #-20]	; 0xffffffec
   2081c:	ldr	r3, [fp, #-8]
   20820:	bl	127f8 <strftime@plt>
   20824:	str	r0, [sp, #44]	; 0x2c
   20828:	ldr	r0, [sp, #44]	; 0x2c
   2082c:	cmp	r0, #0
   20830:	beq	20a3c <__assert_fail@plt+0xde84>
   20834:	ldr	r0, [sp, #44]	; 0x2c
   20838:	movw	r1, #55956	; 0xda94
   2083c:	movt	r1, #8
   20840:	ldr	r1, [r1]
   20844:	cmp	r0, r1
   20848:	bcs	20a3c <__assert_fail@plt+0xde84>
   2084c:	movw	r0, #0
   20850:	str	r0, [sp, #36]	; 0x24
   20854:	str	r0, [sp, #32]
   20858:	ldr	r0, [sp, #44]	; 0x2c
   2085c:	add	r0, r0, #1
   20860:	ldr	r1, [fp, #-16]
   20864:	add	r0, r0, r1
   20868:	str	r0, [sp, #28]
   2086c:	movw	r0, #55952	; 0xda90
   20870:	movt	r0, #8
   20874:	ldr	r0, [r0]
   20878:	ldr	r1, [sp, #28]
   2087c:	bl	4a388 <__assert_fail@plt+0x377d0>
   20880:	movw	r1, #55952	; 0xda90
   20884:	movt	r1, #8
   20888:	str	r0, [r1]
   2088c:	ldr	r0, [sp, #28]
   20890:	movw	r1, #55956	; 0xda94
   20894:	movt	r1, #8
   20898:	str	r0, [r1]
   2089c:	ldr	r0, [sp, #28]
   208a0:	bl	4a2f0 <__assert_fail@plt+0x37738>
   208a4:	str	r0, [sp, #40]	; 0x28
   208a8:	ldr	r0, [sp, #40]	; 0x28
   208ac:	movw	r1, #55956	; 0xda94
   208b0:	movt	r1, #8
   208b4:	ldr	r1, [r1]
   208b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   208bc:	add	r3, sp, #48	; 0x30
   208c0:	bl	127f8 <strftime@plt>
   208c4:	movw	r1, #55952	; 0xda90
   208c8:	movt	r1, #8
   208cc:	ldr	r1, [r1]
   208d0:	ldr	r2, [sp, #40]	; 0x28
   208d4:	str	r0, [sp, #4]
   208d8:	mov	r0, r1
   208dc:	mov	r1, r2
   208e0:	add	r2, sp, #36	; 0x24
   208e4:	add	r3, sp, #32
   208e8:	bl	20a68 <__assert_fail@plt+0xdeb0>
   208ec:	tst	r0, #1
   208f0:	beq	20a10 <__assert_fail@plt+0xde58>
   208f4:	ldr	r0, [sp, #32]
   208f8:	movw	r1, #2
   208fc:	cmp	r1, r0
   20900:	bne	20a10 <__assert_fail@plt+0xde58>
   20904:	bl	12834 <__ctype_b_loc@plt>
   20908:	ldr	r0, [r0]
   2090c:	movw	r1, #55952	; 0xda90
   20910:	movt	r1, #8
   20914:	ldr	r1, [r1]
   20918:	ldr	r2, [sp, #36]	; 0x24
   2091c:	ldr	r3, [sp, #32]
   20920:	add	r2, r2, r3
   20924:	ldrb	r1, [r1, r2]
   20928:	mov	r2, r1
   2092c:	add	r0, r0, r1, lsl #1
   20930:	ldrh	r0, [r0]
   20934:	and	r0, r0, #2048	; 0x800
   20938:	cmp	r0, #0
   2093c:	bne	20a10 <__assert_fail@plt+0xde58>
   20940:	ldr	r0, [sp, #36]	; 0x24
   20944:	ldr	r1, [sp, #32]
   20948:	add	r0, r0, r1
   2094c:	str	r0, [sp, #24]
   20950:	ldr	r0, [sp, #44]	; 0x2c
   20954:	ldr	r1, [sp, #24]
   20958:	sub	r0, r0, r1
   2095c:	add	r0, r0, #1
   20960:	str	r0, [sp, #20]
   20964:	ldr	r0, [sp, #24]
   20968:	ldr	r1, [fp, #-16]
   2096c:	add	r0, r0, r1
   20970:	ldr	r1, [sp, #20]
   20974:	add	r0, r0, r1
   20978:	ldr	r1, [sp, #28]
   2097c:	cmp	r0, r1
   20980:	bne	20988 <__assert_fail@plt+0xddd0>
   20984:	b	209a8 <__assert_fail@plt+0xddf0>
   20988:	movw	r0, #32420	; 0x7ea4
   2098c:	movt	r0, #7
   20990:	movw	r1, #31598	; 0x7b6e
   20994:	movt	r1, #7
   20998:	movw	r2, #549	; 0x225
   2099c:	movw	r3, #32471	; 0x7ed7
   209a0:	movt	r3, #7
   209a4:	bl	12bb8 <__assert_fail@plt>
   209a8:	movw	r0, #55952	; 0xda90
   209ac:	movt	r0, #8
   209b0:	ldr	r1, [r0]
   209b4:	ldr	r2, [sp, #24]
   209b8:	add	r1, r1, r2
   209bc:	ldr	r2, [fp, #-16]
   209c0:	add	r1, r1, r2
   209c4:	ldr	r2, [r0]
   209c8:	ldr	r3, [sp, #24]
   209cc:	add	r2, r2, r3
   209d0:	ldr	r3, [sp, #20]
   209d4:	str	r0, [sp]
   209d8:	mov	r0, r1
   209dc:	mov	r1, r2
   209e0:	mov	r2, r3
   209e4:	bl	12558 <memmove@plt>
   209e8:	ldr	r0, [sp]
   209ec:	ldr	r1, [r0]
   209f0:	ldr	r2, [sp, #36]	; 0x24
   209f4:	add	r1, r1, r2
   209f8:	ldr	r2, [sp, #32]
   209fc:	add	r0, r1, r2
   20a00:	ldr	r1, [fp, #-12]
   20a04:	ldr	r2, [fp, #-16]
   20a08:	bl	125c4 <memcpy@plt>
   20a0c:	b	20a14 <__assert_fail@plt+0xde5c>
   20a10:	b	20a14 <__assert_fail@plt+0xde5c>
   20a14:	ldr	r0, [fp, #-20]	; 0xffffffec
   20a18:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   20a1c:	ldr	r0, [sp, #40]	; 0x28
   20a20:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   20a24:	movw	r0, #55952	; 0xda90
   20a28:	movt	r0, #8
   20a2c:	ldr	r0, [r0]
   20a30:	add	r0, r0, #1
   20a34:	mov	sp, fp
   20a38:	pop	{fp, pc}
   20a3c:	movw	r0, #55952	; 0xda90
   20a40:	movt	r0, #8
   20a44:	ldr	r0, [r0]
   20a48:	movw	r1, #55956	; 0xda94
   20a4c:	movt	r1, #8
   20a50:	movw	r2, #1
   20a54:	bl	4a4cc <__assert_fail@plt+0x37914>
   20a58:	movw	r1, #55952	; 0xda90
   20a5c:	movt	r1, #8
   20a60:	str	r0, [r1]
   20a64:	b	20800 <__assert_fail@plt+0xdc48>
   20a68:	push	{fp, lr}
   20a6c:	mov	fp, sp
   20a70:	sub	sp, sp, #32
   20a74:	str	r0, [fp, #-8]
   20a78:	str	r1, [fp, #-12]
   20a7c:	str	r2, [sp, #16]
   20a80:	str	r3, [sp, #12]
   20a84:	movw	r0, #0
   20a88:	strb	r0, [sp, #11]
   20a8c:	movw	r0, #0
   20a90:	str	r0, [sp, #4]
   20a94:	ldr	r0, [fp, #-8]
   20a98:	ldr	r1, [sp, #4]
   20a9c:	add	r0, r0, r1
   20aa0:	ldrb	r0, [r0]
   20aa4:	cmp	r0, #0
   20aa8:	movw	r0, #0
   20aac:	str	r0, [sp]
   20ab0:	beq	20ad4 <__assert_fail@plt+0xdf1c>
   20ab4:	ldr	r0, [fp, #-12]
   20ab8:	ldr	r1, [sp, #4]
   20abc:	add	r0, r0, r1
   20ac0:	ldrb	r0, [r0]
   20ac4:	cmp	r0, #0
   20ac8:	movw	r0, #0
   20acc:	movne	r0, #1
   20ad0:	str	r0, [sp]
   20ad4:	ldr	r0, [sp]
   20ad8:	tst	r0, #1
   20adc:	beq	20c00 <__assert_fail@plt+0xe048>
   20ae0:	ldr	r0, [fp, #-8]
   20ae4:	ldr	r1, [sp, #4]
   20ae8:	add	r0, r0, r1
   20aec:	ldrb	r0, [r0]
   20af0:	ldr	r1, [fp, #-12]
   20af4:	ldr	r2, [sp, #4]
   20af8:	add	r1, r1, r2
   20afc:	ldrb	r1, [r1]
   20b00:	cmp	r0, r1
   20b04:	beq	20bec <__assert_fail@plt+0xe034>
   20b08:	bl	12834 <__ctype_b_loc@plt>
   20b0c:	ldr	r0, [r0]
   20b10:	ldr	r1, [fp, #-8]
   20b14:	ldr	r2, [sp, #4]
   20b18:	ldrb	r1, [r1, r2]
   20b1c:	mov	r2, r1
   20b20:	add	r0, r0, r1, lsl #1
   20b24:	ldrh	r0, [r0]
   20b28:	and	r0, r0, #2048	; 0x800
   20b2c:	cmp	r0, #0
   20b30:	beq	20b60 <__assert_fail@plt+0xdfa8>
   20b34:	bl	12834 <__ctype_b_loc@plt>
   20b38:	ldr	r0, [r0]
   20b3c:	ldr	r1, [fp, #-12]
   20b40:	ldr	r2, [sp, #4]
   20b44:	ldrb	r1, [r1, r2]
   20b48:	mov	r2, r1
   20b4c:	add	r0, r0, r1, lsl #1
   20b50:	ldrh	r0, [r0]
   20b54:	and	r0, r0, #2048	; 0x800
   20b58:	cmp	r0, #0
   20b5c:	bne	20b70 <__assert_fail@plt+0xdfb8>
   20b60:	movw	r0, #0
   20b64:	and	r0, r0, #1
   20b68:	strb	r0, [fp, #-1]
   20b6c:	b	20c4c <__assert_fail@plt+0xe094>
   20b70:	ldrb	r0, [sp, #11]
   20b74:	tst	r0, #1
   20b78:	bne	20ba0 <__assert_fail@plt+0xdfe8>
   20b7c:	ldr	r0, [sp, #4]
   20b80:	ldr	r1, [sp, #16]
   20b84:	str	r0, [r1]
   20b88:	ldr	r0, [sp, #12]
   20b8c:	movw	r1, #1
   20b90:	str	r1, [r0]
   20b94:	movw	r0, #1
   20b98:	strb	r0, [sp, #11]
   20b9c:	b	20be8 <__assert_fail@plt+0xe030>
   20ba0:	ldr	r0, [sp, #4]
   20ba4:	ldr	r1, [sp, #16]
   20ba8:	ldr	r1, [r1]
   20bac:	sub	r0, r0, r1
   20bb0:	ldr	r1, [sp, #12]
   20bb4:	ldr	r1, [r1]
   20bb8:	cmp	r0, r1
   20bbc:	bne	20bd4 <__assert_fail@plt+0xe01c>
   20bc0:	ldr	r0, [sp, #12]
   20bc4:	ldr	r1, [r0]
   20bc8:	add	r1, r1, #1
   20bcc:	str	r1, [r0]
   20bd0:	b	20be4 <__assert_fail@plt+0xe02c>
   20bd4:	movw	r0, #0
   20bd8:	and	r0, r0, #1
   20bdc:	strb	r0, [fp, #-1]
   20be0:	b	20c4c <__assert_fail@plt+0xe094>
   20be4:	b	20be8 <__assert_fail@plt+0xe030>
   20be8:	b	20bec <__assert_fail@plt+0xe034>
   20bec:	b	20bf0 <__assert_fail@plt+0xe038>
   20bf0:	ldr	r0, [sp, #4]
   20bf4:	add	r0, r0, #1
   20bf8:	str	r0, [sp, #4]
   20bfc:	b	20a94 <__assert_fail@plt+0xdedc>
   20c00:	ldr	r0, [fp, #-8]
   20c04:	ldr	r1, [sp, #4]
   20c08:	add	r0, r0, r1
   20c0c:	ldrb	r0, [r0]
   20c10:	cmp	r0, #0
   20c14:	bne	20c30 <__assert_fail@plt+0xe078>
   20c18:	ldr	r0, [fp, #-12]
   20c1c:	ldr	r1, [sp, #4]
   20c20:	add	r0, r0, r1
   20c24:	ldrb	r0, [r0]
   20c28:	cmp	r0, #0
   20c2c:	beq	20c40 <__assert_fail@plt+0xe088>
   20c30:	movw	r0, #0
   20c34:	and	r0, r0, #1
   20c38:	strb	r0, [fp, #-1]
   20c3c:	b	20c4c <__assert_fail@plt+0xe094>
   20c40:	movw	r0, #1
   20c44:	and	r0, r0, #1
   20c48:	strb	r0, [fp, #-1]
   20c4c:	ldrb	r0, [fp, #-1]
   20c50:	and	r0, r0, #1
   20c54:	mov	sp, fp
   20c58:	pop	{fp, pc}
   20c5c:	push	{fp, lr}
   20c60:	mov	fp, sp
   20c64:	sub	sp, sp, #24
   20c68:	str	r0, [fp, #-4]
   20c6c:	str	r1, [fp, #-8]
   20c70:	str	r2, [sp, #12]
   20c74:	str	r3, [sp, #8]
   20c78:	ldr	r0, [fp, #-4]
   20c7c:	ldr	r1, [fp, #-8]
   20c80:	ldr	r2, [sp, #12]
   20c84:	ldr	r3, [sp, #8]
   20c88:	ldr	r3, [r3, #4]
   20c8c:	bl	126f0 <fwrite@plt>
   20c90:	str	r0, [sp, #4]
   20c94:	ldr	r0, [sp, #4]
   20c98:	ldr	r1, [sp, #12]
   20c9c:	cmp	r0, r1
   20ca0:	bcs	20cb8 <__assert_fail@plt+0xe100>
   20ca4:	bl	128d0 <__errno_location@plt>
   20ca8:	ldr	r0, [r0]
   20cac:	ldr	r1, [sp, #8]
   20cb0:	ldr	r1, [r1, #8]
   20cb4:	bl	1c664 <__assert_fail@plt+0x9aac>
   20cb8:	mov	sp, fp
   20cbc:	pop	{fp, pc}
   20cc0:	push	{fp, lr}
   20cc4:	mov	fp, sp
   20cc8:	sub	sp, sp, #8
   20ccc:	str	r0, [sp, #4]
   20cd0:	ldr	r0, [sp, #4]
   20cd4:	ldr	r0, [r0, #4]
   20cd8:	bl	4ea58 <__assert_fail@plt+0x3bea0>
   20cdc:	movw	r1, #0
   20ce0:	cmp	r1, r0
   20ce4:	beq	20cfc <__assert_fail@plt+0xe144>
   20ce8:	bl	128d0 <__errno_location@plt>
   20cec:	ldr	r0, [r0]
   20cf0:	ldr	r1, [sp, #4]
   20cf4:	ldr	r1, [r1, #8]
   20cf8:	bl	1c664 <__assert_fail@plt+0x9aac>
   20cfc:	mov	sp, fp
   20d00:	pop	{fp, pc}
   20d04:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   20d08:	add	fp, sp, #24
   20d0c:	sub	sp, sp, #64	; 0x40
   20d10:	sub	r2, fp, #36	; 0x24
   20d14:	str	r0, [fp, #-36]	; 0xffffffdc
   20d18:	str	r1, [fp, #-32]	; 0xffffffe0
   20d1c:	mov	r0, r2
   20d20:	bl	12810 <localtime@plt>
   20d24:	str	r0, [fp, #-40]	; 0xffffffd8
   20d28:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20d2c:	movw	r1, #0
   20d30:	cmp	r0, r1
   20d34:	beq	20fd0 <__assert_fail@plt+0xe418>
   20d38:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20d3c:	ldr	r0, [r0, #24]
   20d40:	cmp	r0, #0
   20d44:	blt	20d4c <__assert_fail@plt+0xe194>
   20d48:	b	20d6c <__assert_fail@plt+0xe1b4>
   20d4c:	movw	r0, #32547	; 0x7f23
   20d50:	movt	r0, #7
   20d54:	movw	r1, #31598	; 0x7b6e
   20d58:	movt	r1, #7
   20d5c:	movw	r2, #749	; 0x2ed
   20d60:	movw	r3, #32565	; 0x7f35
   20d64:	movt	r3, #7
   20d68:	bl	12bb8 <__assert_fail@plt>
   20d6c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20d70:	ldr	r0, [r0, #24]
   20d74:	cmp	r0, #7
   20d78:	bge	20d80 <__assert_fail@plt+0xe1c8>
   20d7c:	b	20da0 <__assert_fail@plt+0xe1e8>
   20d80:	movw	r0, #32601	; 0x7f59
   20d84:	movt	r0, #7
   20d88:	movw	r1, #31598	; 0x7b6e
   20d8c:	movt	r1, #7
   20d90:	movw	r2, #750	; 0x2ee
   20d94:	movw	r3, #32565	; 0x7f35
   20d98:	movt	r3, #7
   20d9c:	bl	12bb8 <__assert_fail@plt>
   20da0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20da4:	ldr	r0, [r0, #16]
   20da8:	cmp	r0, #0
   20dac:	blt	20db4 <__assert_fail@plt+0xe1fc>
   20db0:	b	20dd4 <__assert_fail@plt+0xe21c>
   20db4:	movw	r0, #32618	; 0x7f6a
   20db8:	movt	r0, #7
   20dbc:	movw	r1, #31598	; 0x7b6e
   20dc0:	movt	r1, #7
   20dc4:	movw	r2, #751	; 0x2ef
   20dc8:	movw	r3, #32565	; 0x7f35
   20dcc:	movt	r3, #7
   20dd0:	bl	12bb8 <__assert_fail@plt>
   20dd4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20dd8:	ldr	r0, [r0, #16]
   20ddc:	cmp	r0, #12
   20de0:	bge	20de8 <__assert_fail@plt+0xe230>
   20de4:	b	20e08 <__assert_fail@plt+0xe250>
   20de8:	movw	r0, #32635	; 0x7f7b
   20dec:	movt	r0, #7
   20df0:	movw	r1, #31598	; 0x7b6e
   20df4:	movt	r1, #7
   20df8:	movw	r2, #752	; 0x2f0
   20dfc:	movw	r3, #32565	; 0x7f35
   20e00:	movt	r3, #7
   20e04:	bl	12bb8 <__assert_fail@plt>
   20e08:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20e0c:	ldr	r0, [r0, #8]
   20e10:	cmp	r0, #0
   20e14:	blt	20e1c <__assert_fail@plt+0xe264>
   20e18:	b	20e3c <__assert_fail@plt+0xe284>
   20e1c:	movw	r0, #32652	; 0x7f8c
   20e20:	movt	r0, #7
   20e24:	movw	r1, #31598	; 0x7b6e
   20e28:	movt	r1, #7
   20e2c:	movw	r2, #753	; 0x2f1
   20e30:	movw	r3, #32565	; 0x7f35
   20e34:	movt	r3, #7
   20e38:	bl	12bb8 <__assert_fail@plt>
   20e3c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20e40:	ldr	r0, [r0, #8]
   20e44:	cmp	r0, #24
   20e48:	bge	20e50 <__assert_fail@plt+0xe298>
   20e4c:	b	20e70 <__assert_fail@plt+0xe2b8>
   20e50:	movw	r0, #32670	; 0x7f9e
   20e54:	movt	r0, #7
   20e58:	movw	r1, #31598	; 0x7b6e
   20e5c:	movt	r1, #7
   20e60:	movw	r2, #754	; 0x2f2
   20e64:	movw	r3, #32565	; 0x7f35
   20e68:	movt	r3, #7
   20e6c:	bl	12bb8 <__assert_fail@plt>
   20e70:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20e74:	ldr	r0, [r0, #4]
   20e78:	cmp	r0, #60	; 0x3c
   20e7c:	bge	20e84 <__assert_fail@plt+0xe2cc>
   20e80:	b	20ea4 <__assert_fail@plt+0xe2ec>
   20e84:	movw	r0, #32688	; 0x7fb0
   20e88:	movt	r0, #7
   20e8c:	movw	r1, #31598	; 0x7b6e
   20e90:	movt	r1, #7
   20e94:	movw	r2, #755	; 0x2f3
   20e98:	movw	r3, #32565	; 0x7f35
   20e9c:	movt	r3, #7
   20ea0:	bl	12bb8 <__assert_fail@plt>
   20ea4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20ea8:	ldr	r0, [r0]
   20eac:	cmp	r0, #61	; 0x3d
   20eb0:	bgt	20eb8 <__assert_fail@plt+0xe300>
   20eb4:	b	20ed8 <__assert_fail@plt+0xe320>
   20eb8:	movw	r0, #32705	; 0x7fc1
   20ebc:	movt	r0, #7
   20ec0:	movw	r1, #31598	; 0x7b6e
   20ec4:	movt	r1, #7
   20ec8:	movw	r2, #756	; 0x2f4
   20ecc:	movw	r3, #32565	; 0x7f35
   20ed0:	movt	r3, #7
   20ed4:	bl	12bb8 <__assert_fail@plt>
   20ed8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20edc:	ldr	r1, [r0, #16]
   20ee0:	ldr	r0, [r0, #24]
   20ee4:	movw	r2, #54716	; 0xd5bc
   20ee8:	movt	r2, #8
   20eec:	ldr	r3, [r2, r0, lsl #2]
   20ef0:	movw	r0, #54744	; 0xd5d8
   20ef4:	movt	r0, #8
   20ef8:	add	r0, r0, r1, lsl #2
   20efc:	ldr	r0, [r0]
   20f00:	ldr	r1, [fp, #-40]	; 0xffffffd8
   20f04:	ldr	r1, [r1, #12]
   20f08:	ldr	r2, [fp, #-40]	; 0xffffffd8
   20f0c:	ldr	r2, [r2, #8]
   20f10:	ldr	ip, [fp, #-40]	; 0xffffffd8
   20f14:	ldr	ip, [ip, #4]
   20f18:	ldr	lr, [fp, #-40]	; 0xffffffd8
   20f1c:	ldr	lr, [lr]
   20f20:	ldr	r4, [fp, #-32]	; 0xffffffe0
   20f24:	ldr	r5, [fp, #-40]	; 0xffffffd8
   20f28:	ldr	r5, [r5, #20]
   20f2c:	movw	r6, #1900	; 0x76c
   20f30:	add	r5, r5, r6
   20f34:	movw	r6, #55960	; 0xda98
   20f38:	movt	r6, #8
   20f3c:	str	r0, [sp, #40]	; 0x28
   20f40:	mov	r0, r6
   20f44:	movw	r6, #1024	; 0x400
   20f48:	str	r1, [sp, #36]	; 0x24
   20f4c:	mov	r1, r6
   20f50:	movw	r6, #32723	; 0x7fd3
   20f54:	movt	r6, #7
   20f58:	str	r2, [sp, #32]
   20f5c:	mov	r2, r6
   20f60:	ldr	r6, [sp, #40]	; 0x28
   20f64:	str	r6, [sp]
   20f68:	ldr	r7, [sp, #36]	; 0x24
   20f6c:	str	r7, [sp, #4]
   20f70:	ldr	r8, [sp, #32]
   20f74:	str	r8, [sp, #8]
   20f78:	str	ip, [sp, #12]
   20f7c:	str	lr, [sp, #16]
   20f80:	str	r4, [sp, #20]
   20f84:	str	r5, [sp, #24]
   20f88:	bl	128e8 <snprintf@plt>
   20f8c:	str	r0, [sp, #44]	; 0x2c
   20f90:	ldr	r0, [sp, #44]	; 0x2c
   20f94:	cmp	r0, #1024	; 0x400
   20f98:	bge	20fa0 <__assert_fail@plt+0xe3e8>
   20f9c:	b	20fc0 <__assert_fail@plt+0xe408>
   20fa0:	movw	r0, #32762	; 0x7ffa
   20fa4:	movt	r0, #7
   20fa8:	movw	r1, #31598	; 0x7b6e
   20fac:	movt	r1, #7
   20fb0:	movw	r2, #770	; 0x302
   20fb4:	movw	r3, #32565	; 0x7f35
   20fb8:	movt	r3, #7
   20fbc:	bl	12bb8 <__assert_fail@plt>
   20fc0:	movw	r0, #55960	; 0xda98
   20fc4:	movt	r0, #8
   20fc8:	str	r0, [fp, #-28]	; 0xffffffe4
   20fcc:	b	20fe4 <__assert_fail@plt+0xe42c>
   20fd0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   20fd4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20fd8:	mov	r2, #64	; 0x40
   20fdc:	bl	1f2ac <__assert_fail@plt+0xc6f4>
   20fe0:	str	r0, [fp, #-28]	; 0xffffffe4
   20fe4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20fe8:	sub	sp, fp, #24
   20fec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   20ff0:	push	{fp, lr}
   20ff4:	mov	fp, sp
   20ff8:	sub	sp, sp, #24
   20ffc:	str	r0, [fp, #-4]
   21000:	str	r1, [fp, #-8]
   21004:	str	r2, [sp, #12]
   21008:	ldr	r0, [fp, #-4]
   2100c:	ldr	r0, [r0, #4]
   21010:	ldr	r1, [fp, #-4]
   21014:	ldr	r1, [r1, #16]
   21018:	ldr	r2, [fp, #-4]
   2101c:	ldrb	r2, [r2, #12]
   21020:	ldr	r3, [fp, #-8]
   21024:	ldr	ip, [sp, #12]
   21028:	and	r2, r2, #1
   2102c:	str	ip, [sp]
   21030:	bl	2abcc <__assert_fail@plt+0x18014>
   21034:	str	r0, [sp, #8]
   21038:	ldr	r0, [sp, #8]
   2103c:	cmp	r0, #0
   21040:	bge	21058 <__assert_fail@plt+0xe4a0>
   21044:	bl	128d0 <__errno_location@plt>
   21048:	ldr	r0, [r0]
   2104c:	ldr	r1, [fp, #-4]
   21050:	ldr	r1, [r1, #8]
   21054:	bl	1c664 <__assert_fail@plt+0x9aac>
   21058:	mov	sp, fp
   2105c:	pop	{fp, pc}
   21060:	push	{fp, lr}
   21064:	mov	fp, sp
   21068:	sub	sp, sp, #40	; 0x28
   2106c:	str	r0, [fp, #-12]
   21070:	ldr	r0, [fp, #-12]
   21074:	ldr	r1, [r0, #48]	; 0x30
   21078:	ldr	r0, [r0, #52]	; 0x34
   2107c:	orr	r0, r1, r0
   21080:	cmp	r0, #0
   21084:	bne	210d8 <__assert_fail@plt+0xe520>
   21088:	b	2108c <__assert_fail@plt+0xe4d4>
   2108c:	ldr	r0, [fp, #-12]
   21090:	ldr	r1, [r0, #64]	; 0x40
   21094:	ldr	r0, [r0, #68]	; 0x44
   21098:	orr	r0, r1, r0
   2109c:	cmp	r0, #0
   210a0:	bne	210b4 <__assert_fail@plt+0xe4fc>
   210a4:	b	210a8 <__assert_fail@plt+0xe4f0>
   210a8:	vmov.f64	d16, #112	; 0x3f800000  1.0
   210ac:	vstr	d16, [fp, #-8]
   210b0:	b	21138 <__assert_fail@plt+0xe580>
   210b4:	ldr	r0, [fp, #-12]
   210b8:	ldr	r0, [r0, #68]	; 0x44
   210bc:	add	r1, pc, #140	; 0x8c
   210c0:	add	r2, r1, #8
   210c4:	cmp	r0, #0
   210c8:	movmi	r1, r2
   210cc:	vldr	d16, [r1]
   210d0:	vstr	d16, [fp, #-8]
   210d4:	b	21138 <__assert_fail@plt+0xe580>
   210d8:	ldr	r0, [fp, #-12]
   210dc:	ldr	r1, [r0, #64]	; 0x40
   210e0:	ldr	r0, [r0, #68]	; 0x44
   210e4:	str	r0, [sp, #12]
   210e8:	mov	r0, r1
   210ec:	ldr	r1, [sp, #12]
   210f0:	bl	752d8 <__assert_fail@plt+0x62720>
   210f4:	vmov	d16, r0, r1
   210f8:	vldr	d17, [pc, #72]	; 21148 <__assert_fail@plt+0xe590>
   210fc:	vmul.f64	d16, d16, d17
   21100:	vstr	d16, [sp, #16]
   21104:	vldr	d16, [sp, #16]
   21108:	ldr	r0, [fp, #-12]
   2110c:	ldr	r1, [r0, #48]	; 0x30
   21110:	ldr	r0, [r0, #52]	; 0x34
   21114:	str	r0, [sp, #8]
   21118:	mov	r0, r1
   2111c:	ldr	r1, [sp, #8]
   21120:	vstr	d16, [sp]
   21124:	bl	752d8 <__assert_fail@plt+0x62720>
   21128:	vmov	d16, r0, r1
   2112c:	vldr	d17, [sp]
   21130:	vdiv.f64	d16, d17, d16
   21134:	vstr	d16, [fp, #-8]
   21138:	vldr	d0, [fp, #-8]
   2113c:	mov	sp, fp
   21140:	pop	{fp, pc}
   21144:	nop	{0}
   21148:	andeq	r0, r0, r0
   2114c:	addmi	r0, r0, r0
   21150:	andeq	r0, r0, r0
   21154:	svcvc	0x00f00000	; IMB
   21158:	andeq	r0, r0, r0
   2115c:			; <UNDEFINED> instruction: 0xfff00000	; IMB
   21160:	sub	sp, sp, #8
   21164:	str	r0, [sp]
   21168:	ldr	r0, [sp]
   2116c:	cmp	r0, #32768	; 0x8000
   21170:	bne	21184 <__assert_fail@plt+0xe5cc>
   21174:	movw	r0, #40984	; 0xa018
   21178:	movt	r0, #7
   2117c:	str	r0, [sp, #4]
   21180:	b	21238 <__assert_fail@plt+0xe680>
   21184:	ldr	r0, [sp]
   21188:	cmp	r0, #16384	; 0x4000
   2118c:	bne	211a0 <__assert_fail@plt+0xe5e8>
   21190:	movw	r0, #25153	; 0x6241
   21194:	movt	r0, #7
   21198:	str	r0, [sp, #4]
   2119c:	b	21238 <__assert_fail@plt+0xe680>
   211a0:	ldr	r0, [sp]
   211a4:	cmp	r0, #40960	; 0xa000
   211a8:	bne	211bc <__assert_fail@plt+0xe604>
   211ac:	movw	r0, #24964	; 0x6184
   211b0:	movt	r0, #7
   211b4:	str	r0, [sp, #4]
   211b8:	b	21238 <__assert_fail@plt+0xe680>
   211bc:	ldr	r0, [sp]
   211c0:	cmp	r0, #49152	; 0xc000
   211c4:	bne	211d8 <__assert_fail@plt+0xe620>
   211c8:	movw	r0, #50144	; 0xc3e0
   211cc:	movt	r0, #7
   211d0:	str	r0, [sp, #4]
   211d4:	b	21238 <__assert_fail@plt+0xe680>
   211d8:	ldr	r0, [sp]
   211dc:	cmp	r0, #24576	; 0x6000
   211e0:	bne	211f4 <__assert_fail@plt+0xe63c>
   211e4:	movw	r0, #40289	; 0x9d61
   211e8:	movt	r0, #7
   211ec:	str	r0, [sp, #4]
   211f0:	b	21238 <__assert_fail@plt+0xe680>
   211f4:	ldr	r0, [sp]
   211f8:	cmp	r0, #8192	; 0x2000
   211fc:	bne	21210 <__assert_fail@plt+0xe658>
   21200:	movw	r0, #37039	; 0x90af
   21204:	movt	r0, #7
   21208:	str	r0, [sp, #4]
   2120c:	b	21238 <__assert_fail@plt+0xe680>
   21210:	ldr	r0, [sp]
   21214:	cmp	r0, #4096	; 0x1000
   21218:	bne	2122c <__assert_fail@plt+0xe674>
   2121c:	movw	r0, #25360	; 0x6310
   21220:	movt	r0, #7
   21224:	str	r0, [sp, #4]
   21228:	b	21238 <__assert_fail@plt+0xe680>
   2122c:	movw	r0, #32858	; 0x805a
   21230:	movt	r0, #7
   21234:	str	r0, [sp, #4]
   21238:	ldr	r0, [sp, #4]
   2123c:	add	sp, sp, #8
   21240:	bx	lr
   21244:	push	{fp, lr}
   21248:	mov	fp, sp
   2124c:	sub	sp, sp, #16
   21250:	str	r0, [sp, #8]
   21254:	str	r1, [sp, #4]
   21258:	movw	r0, #56988	; 0xde9c
   2125c:	movt	r0, #8
   21260:	ldr	r0, [r0]
   21264:	movw	r1, #0
   21268:	cmp	r0, r1
   2126c:	beq	212dc <__assert_fail@plt+0xe724>
   21270:	movw	r0, #56984	; 0xde98
   21274:	movt	r0, #8
   21278:	ldrb	r0, [r0]
   2127c:	tst	r0, #1
   21280:	beq	212cc <__assert_fail@plt+0xe714>
   21284:	ldr	r0, [sp, #8]
   21288:	ldr	r1, [r0]
   2128c:	ldr	r0, [r0, #4]
   21290:	movw	r2, #56992	; 0xdea0
   21294:	movt	r2, #8
   21298:	ldr	r3, [r2]
   2129c:	ldr	r2, [r2, #4]
   212a0:	eor	r0, r0, r2
   212a4:	eor	r1, r1, r3
   212a8:	orr	r0, r1, r0
   212ac:	cmp	r0, #0
   212b0:	bne	212cc <__assert_fail@plt+0xe714>
   212b4:	b	212b8 <__assert_fail@plt+0xe700>
   212b8:	movw	r0, #56988	; 0xde9c
   212bc:	movt	r0, #8
   212c0:	ldr	r0, [r0]
   212c4:	str	r0, [fp, #-4]
   212c8:	b	21320 <__assert_fail@plt+0xe768>
   212cc:	movw	r0, #56988	; 0xde9c
   212d0:	movt	r0, #8
   212d4:	ldr	r0, [r0]
   212d8:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   212dc:	ldr	r0, [sp, #8]
   212e0:	ldr	r1, [r0]
   212e4:	ldr	r0, [r0, #4]
   212e8:	movw	r2, #56992	; 0xdea0
   212ec:	movt	r2, #8
   212f0:	str	r0, [r2, #4]
   212f4:	str	r1, [r2]
   212f8:	ldr	r0, [sp, #8]
   212fc:	ldr	r1, [sp, #4]
   21300:	movw	r2, #56984	; 0xde98
   21304:	movt	r2, #8
   21308:	bl	2132c <__assert_fail@plt+0xe774>
   2130c:	movw	r1, #56988	; 0xde9c
   21310:	movt	r1, #8
   21314:	str	r0, [r1]
   21318:	ldr	r0, [r1]
   2131c:	str	r0, [fp, #-4]
   21320:	ldr	r0, [fp, #-4]
   21324:	mov	sp, fp
   21328:	pop	{fp, pc}
   2132c:	push	{fp, lr}
   21330:	mov	fp, sp
   21334:	sub	sp, sp, #40	; 0x28
   21338:	str	r0, [fp, #-4]
   2133c:	str	r1, [fp, #-8]
   21340:	str	r2, [fp, #-12]
   21344:	movw	r0, #0
   21348:	str	r0, [sp, #16]
   2134c:	movw	r0, #1
   21350:	and	r0, r0, #1
   21354:	bl	21594 <__assert_fail@plt+0xe9dc>
   21358:	str	r0, [fp, #-16]
   2135c:	ldr	r0, [fp, #-16]
   21360:	movw	r1, #0
   21364:	cmp	r1, r0
   21368:	bne	21390 <__assert_fail@plt+0xe7d8>
   2136c:	movw	r0, #32864	; 0x8060
   21370:	movt	r0, #7
   21374:	bl	12864 <gettext@plt>
   21378:	movw	r1, #1
   2137c:	str	r0, [sp, #8]
   21380:	mov	r0, r1
   21384:	movw	r1, #0
   21388:	ldr	r2, [sp, #8]
   2138c:	bl	12780 <error@plt>
   21390:	movw	r0, #0
   21394:	str	r0, [sp, #12]
   21398:	ldr	r0, [fp, #-16]
   2139c:	str	r0, [sp, #20]
   213a0:	ldr	r0, [sp, #20]
   213a4:	movw	r1, #0
   213a8:	cmp	r0, r1
   213ac:	beq	21434 <__assert_fail@plt+0xe87c>
   213b0:	ldr	r0, [sp, #20]
   213b4:	ldr	r0, [r0, #12]
   213b8:	movw	r1, #32901	; 0x8085
   213bc:	movt	r1, #7
   213c0:	bl	124c8 <strcmp@plt>
   213c4:	cmp	r0, #0
   213c8:	bne	213d0 <__assert_fail@plt+0xe818>
   213cc:	b	21424 <__assert_fail@plt+0xe86c>
   213d0:	ldr	r0, [sp, #20]
   213d4:	bl	21764 <__assert_fail@plt+0xebac>
   213d8:	movw	r1, #0
   213dc:	cmp	r1, r0
   213e0:	bne	21420 <__assert_fail@plt+0xe868>
   213e4:	ldr	r0, [sp, #20]
   213e8:	ldr	r1, [r0, #16]
   213ec:	ldr	r0, [r0, #20]
   213f0:	ldr	r2, [fp, #-4]
   213f4:	ldr	r3, [r2]
   213f8:	ldr	r2, [r2, #4]
   213fc:	eor	r0, r0, r2
   21400:	eor	r1, r1, r3
   21404:	orr	r0, r1, r0
   21408:	cmp	r0, #0
   2140c:	bne	2141c <__assert_fail@plt+0xe864>
   21410:	b	21414 <__assert_fail@plt+0xe85c>
   21414:	ldr	r0, [sp, #20]
   21418:	str	r0, [sp, #16]
   2141c:	b	21420 <__assert_fail@plt+0xe868>
   21420:	b	21424 <__assert_fail@plt+0xe86c>
   21424:	ldr	r0, [sp, #20]
   21428:	ldr	r0, [r0, #28]
   2142c:	str	r0, [sp, #20]
   21430:	b	213a0 <__assert_fail@plt+0xe7e8>
   21434:	ldr	r0, [sp, #16]
   21438:	movw	r1, #0
   2143c:	cmp	r0, r1
   21440:	beq	21454 <__assert_fail@plt+0xe89c>
   21444:	ldr	r0, [sp, #16]
   21448:	ldr	r0, [r0, #12]
   2144c:	bl	4cff0 <__assert_fail@plt+0x3a438>
   21450:	str	r0, [sp, #12]
   21454:	ldr	r0, [sp, #12]
   21458:	movw	r1, #0
   2145c:	cmp	r0, r1
   21460:	movw	r0, #0
   21464:	movne	r0, #1
   21468:	ldr	r2, [fp, #-12]
   2146c:	and	r0, r0, #1
   21470:	strb	r0, [r2]
   21474:	ldr	r0, [sp, #12]
   21478:	cmp	r0, r1
   2147c:	beq	2148c <__assert_fail@plt+0xe8d4>
   21480:	ldr	r0, [sp, #12]
   21484:	str	r0, [sp, #4]
   21488:	b	214a0 <__assert_fail@plt+0xe8e8>
   2148c:	movw	r0, #28004	; 0x6d64
   21490:	movt	r0, #7
   21494:	bl	12864 <gettext@plt>
   21498:	bl	4cff0 <__assert_fail@plt+0x3a438>
   2149c:	str	r0, [sp, #4]
   214a0:	ldr	r0, [sp, #4]
   214a4:	mov	sp, fp
   214a8:	pop	{fp, pc}
   214ac:	push	{fp, lr}
   214b0:	mov	fp, sp
   214b4:	sub	sp, sp, #16
   214b8:	str	r0, [sp, #8]
   214bc:	ldr	r1, [sp, #8]
   214c0:	movw	r0, #32860	; 0x805c
   214c4:	movt	r0, #7
   214c8:	bl	124c8 <strcmp@plt>
   214cc:	movw	r1, #0
   214d0:	cmp	r1, r0
   214d4:	bne	214e8 <__assert_fail@plt+0xe930>
   214d8:	movw	r0, #1
   214dc:	and	r0, r0, #1
   214e0:	strb	r0, [fp, #-1]
   214e4:	b	21584 <__assert_fail@plt+0xe9cc>
   214e8:	movw	r0, #0
   214ec:	and	r0, r0, #1
   214f0:	bl	21594 <__assert_fail@plt+0xe9dc>
   214f4:	str	r0, [sp, #4]
   214f8:	ldr	r0, [sp, #4]
   214fc:	movw	r1, #0
   21500:	cmp	r0, r1
   21504:	beq	21564 <__assert_fail@plt+0xe9ac>
   21508:	ldr	r0, [sp, #4]
   2150c:	str	r0, [sp]
   21510:	ldr	r0, [sp]
   21514:	movw	r1, #0
   21518:	cmp	r0, r1
   2151c:	beq	21560 <__assert_fail@plt+0xe9a8>
   21520:	ldr	r0, [sp, #8]
   21524:	ldr	r1, [sp]
   21528:	ldr	r1, [r1, #12]
   2152c:	bl	124c8 <strcmp@plt>
   21530:	movw	r1, #0
   21534:	cmp	r1, r0
   21538:	bne	2154c <__assert_fail@plt+0xe994>
   2153c:	movw	r0, #1
   21540:	and	r0, r0, #1
   21544:	strb	r0, [fp, #-1]
   21548:	b	21584 <__assert_fail@plt+0xe9cc>
   2154c:	b	21550 <__assert_fail@plt+0xe998>
   21550:	ldr	r0, [sp]
   21554:	ldr	r0, [r0, #28]
   21558:	str	r0, [sp]
   2155c:	b	21510 <__assert_fail@plt+0xe958>
   21560:	b	21574 <__assert_fail@plt+0xe9bc>
   21564:	movw	r0, #1
   21568:	and	r0, r0, #1
   2156c:	strb	r0, [fp, #-1]
   21570:	b	21584 <__assert_fail@plt+0xe9cc>
   21574:	b	21578 <__assert_fail@plt+0xe9c0>
   21578:	movw	r0, #0
   2157c:	and	r0, r0, #1
   21580:	strb	r0, [fp, #-1]
   21584:	ldrb	r0, [fp, #-1]
   21588:	and	r0, r0, #1
   2158c:	mov	sp, fp
   21590:	pop	{fp, pc}
   21594:	push	{fp, lr}
   21598:	mov	fp, sp
   2159c:	sub	sp, sp, #8
   215a0:	and	r0, r0, #1
   215a4:	strb	r0, [fp, #-1]
   215a8:	movw	r0, #57000	; 0xdea8
   215ac:	movt	r0, #8
   215b0:	ldr	r0, [r0]
   215b4:	movw	r1, #0
   215b8:	cmp	r0, r1
   215bc:	beq	21600 <__assert_fail@plt+0xea48>
   215c0:	movw	r0, #57004	; 0xdeac
   215c4:	movt	r0, #8
   215c8:	ldrb	r0, [r0]
   215cc:	tst	r0, #1
   215d0:	bne	21600 <__assert_fail@plt+0xea48>
   215d4:	ldrb	r0, [fp, #-1]
   215d8:	tst	r0, #1
   215dc:	beq	21600 <__assert_fail@plt+0xea48>
   215e0:	movw	r0, #57000	; 0xdea8
   215e4:	movt	r0, #8
   215e8:	ldr	r0, [r0]
   215ec:	bl	2180c <__assert_fail@plt+0xec54>
   215f0:	movw	r0, #57000	; 0xdea8
   215f4:	movt	r0, #8
   215f8:	movw	r1, #0
   215fc:	str	r1, [r0]
   21600:	movw	r0, #57000	; 0xdea8
   21604:	movt	r0, #8
   21608:	ldr	r0, [r0]
   2160c:	movw	r1, #0
   21610:	cmp	r0, r1
   21614:	bne	21644 <__assert_fail@plt+0xea8c>
   21618:	ldrb	r0, [fp, #-1]
   2161c:	and	r0, r0, #1
   21620:	bl	52910 <__assert_fail@plt+0x3fd58>
   21624:	movw	r1, #57000	; 0xdea8
   21628:	movt	r1, #8
   2162c:	str	r0, [r1]
   21630:	ldrb	r0, [fp, #-1]
   21634:	and	r0, r0, #1
   21638:	movw	r1, #57004	; 0xdeac
   2163c:	movt	r1, #8
   21640:	strb	r0, [r1]
   21644:	movw	r0, #57000	; 0xdea8
   21648:	movt	r0, #8
   2164c:	ldr	r0, [r0]
   21650:	mov	sp, fp
   21654:	pop	{fp, pc}
   21658:	push	{fp, lr}
   2165c:	mov	fp, sp
   21660:	sub	sp, sp, #32
   21664:	str	r0, [fp, #-4]
   21668:	movw	r0, #0
   2166c:	str	r0, [fp, #-8]
   21670:	str	r0, [fp, #-12]
   21674:	str	r0, [sp, #8]
   21678:	movw	r0, #0
   2167c:	and	r0, r0, #1
   21680:	bl	52910 <__assert_fail@plt+0x3fd58>
   21684:	str	r0, [sp, #16]
   21688:	str	r0, [sp, #12]
   2168c:	ldr	r0, [sp, #12]
   21690:	movw	r1, #0
   21694:	cmp	r0, r1
   21698:	beq	21734 <__assert_fail@plt+0xeb7c>
   2169c:	ldr	r0, [sp, #8]
   216a0:	ldr	r1, [fp, #-12]
   216a4:	add	r1, r1, #1
   216a8:	lsl	r1, r1, #3
   216ac:	sub	r2, fp, #8
   216b0:	bl	28f74 <__assert_fail@plt+0x163bc>
   216b4:	str	r0, [sp, #4]
   216b8:	ldr	r0, [sp, #4]
   216bc:	movw	r1, #0
   216c0:	cmp	r0, r1
   216c4:	beq	21710 <__assert_fail@plt+0xeb58>
   216c8:	ldr	r0, [sp, #4]
   216cc:	str	r0, [sp, #8]
   216d0:	ldr	r0, [sp, #12]
   216d4:	bl	21764 <__assert_fail@plt+0xebac>
   216d8:	movw	r1, #0
   216dc:	cmp	r1, r0
   216e0:	bne	2170c <__assert_fail@plt+0xeb54>
   216e4:	ldr	r0, [sp, #12]
   216e8:	ldr	r1, [r0, #16]
   216ec:	ldr	r0, [r0, #20]
   216f0:	ldr	r2, [sp, #8]
   216f4:	ldr	r3, [fp, #-12]
   216f8:	str	r1, [r2, r3, lsl #3]!
   216fc:	str	r0, [r2, #4]
   21700:	ldr	r0, [fp, #-12]
   21704:	add	r0, r0, #1
   21708:	str	r0, [fp, #-12]
   2170c:	b	21720 <__assert_fail@plt+0xeb68>
   21710:	ldr	r0, [sp, #8]
   21714:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   21718:	movw	r0, #0
   2171c:	str	r0, [sp, #8]
   21720:	b	21724 <__assert_fail@plt+0xeb6c>
   21724:	ldr	r0, [sp, #12]
   21728:	ldr	r0, [r0, #28]
   2172c:	str	r0, [sp, #12]
   21730:	b	2168c <__assert_fail@plt+0xead4>
   21734:	ldr	r0, [sp, #16]
   21738:	bl	2180c <__assert_fail@plt+0xec54>
   2173c:	ldr	r0, [sp, #8]
   21740:	movw	r1, #0
   21744:	cmp	r0, r1
   21748:	beq	21758 <__assert_fail@plt+0xeba0>
   2174c:	ldr	r0, [fp, #-12]
   21750:	ldr	r1, [fp, #-4]
   21754:	str	r0, [r1]
   21758:	ldr	r0, [sp, #8]
   2175c:	mov	sp, fp
   21760:	pop	{fp, pc}
   21764:	push	{fp, lr}
   21768:	mov	fp, sp
   2176c:	sub	sp, sp, #120	; 0x78
   21770:	str	r0, [fp, #-8]
   21774:	ldr	r0, [fp, #-8]
   21778:	ldr	r1, [r0, #16]
   2177c:	ldr	r0, [r0, #20]
   21780:	and	r0, r1, r0
   21784:	cmn	r0, #1
   21788:	bne	217f8 <__assert_fail@plt+0xec40>
   2178c:	b	21790 <__assert_fail@plt+0xebd8>
   21790:	add	r0, sp, #8
   21794:	bl	1bdbc <__assert_fail@plt+0x9204>
   21798:	movw	r0, #57480	; 0xe088
   2179c:	movt	r0, #8
   217a0:	ldr	r0, [r0, #52]	; 0x34
   217a4:	ldr	r1, [fp, #-8]
   217a8:	ldr	r1, [r1, #4]
   217ac:	str	r0, [sp, #4]
   217b0:	mov	r0, r1
   217b4:	add	r1, sp, #8
   217b8:	ldr	r2, [sp, #4]
   217bc:	blx	r2
   217c0:	movw	r1, #0
   217c4:	cmp	r1, r0
   217c8:	bne	217ec <__assert_fail@plt+0xec34>
   217cc:	ldr	r0, [sp, #8]
   217d0:	ldr	r1, [sp, #12]
   217d4:	ldr	r2, [fp, #-8]
   217d8:	str	r1, [r2, #20]
   217dc:	str	r0, [r2, #16]
   217e0:	movw	r0, #0
   217e4:	str	r0, [fp, #-4]
   217e8:	b	21800 <__assert_fail@plt+0xec48>
   217ec:	mvn	r0, #0
   217f0:	str	r0, [fp, #-4]
   217f4:	b	21800 <__assert_fail@plt+0xec48>
   217f8:	movw	r0, #0
   217fc:	str	r0, [fp, #-4]
   21800:	ldr	r0, [fp, #-4]
   21804:	mov	sp, fp
   21808:	pop	{fp, pc}
   2180c:	push	{fp, lr}
   21810:	mov	fp, sp
   21814:	sub	sp, sp, #8
   21818:	str	r0, [sp, #4]
   2181c:	ldr	r0, [sp, #4]
   21820:	movw	r1, #0
   21824:	cmp	r0, r1
   21828:	beq	2184c <__assert_fail@plt+0xec94>
   2182c:	ldr	r0, [sp, #4]
   21830:	ldr	r0, [r0, #28]
   21834:	str	r0, [sp]
   21838:	ldr	r0, [sp, #4]
   2183c:	bl	53860 <__assert_fail@plt+0x40ca8>
   21840:	ldr	r0, [sp]
   21844:	str	r0, [sp, #4]
   21848:	b	2181c <__assert_fail@plt+0xec64>
   2184c:	mov	sp, fp
   21850:	pop	{fp, pc}
   21854:	andeq	r0, r0, r0
   21858:	push	{fp, lr}
   2185c:	mov	fp, sp
   21860:	sub	sp, sp, #16
   21864:	str	r0, [fp, #-4]
   21868:	movw	r0, #0
   2186c:	str	r0, [sp, #8]
   21870:	ldr	r0, [fp, #-4]
   21874:	movw	r1, #0
   21878:	cmp	r0, r1
   2187c:	beq	218e0 <__assert_fail@plt+0xed28>
   21880:	ldr	r0, [fp, #-4]
   21884:	ldr	r0, [r0]
   21888:	movw	r1, #19324	; 0x4b7c
   2188c:	movt	r1, #1
   21890:	cmp	r0, r1
   21894:	bne	218a8 <__assert_fail@plt+0xecf0>
   21898:	ldr	r0, [sp, #8]
   2189c:	orr	r0, r0, #1
   218a0:	str	r0, [sp, #8]
   218a4:	b	218d0 <__assert_fail@plt+0xed18>
   218a8:	ldr	r0, [fp, #-4]
   218ac:	ldr	r0, [r0]
   218b0:	movw	r1, #25388	; 0x632c
   218b4:	movt	r1, #1
   218b8:	cmp	r0, r1
   218bc:	bne	218cc <__assert_fail@plt+0xed14>
   218c0:	ldr	r0, [sp, #8]
   218c4:	orr	r0, r0, #2
   218c8:	str	r0, [sp, #8]
   218cc:	b	218d0 <__assert_fail@plt+0xed18>
   218d0:	ldr	r0, [fp, #-4]
   218d4:	ldr	r0, [r0, #152]	; 0x98
   218d8:	str	r0, [fp, #-4]
   218dc:	b	21870 <__assert_fail@plt+0xecb8>
   218e0:	ldr	r0, [sp, #8]
   218e4:	and	r0, r0, #2
   218e8:	cmp	r0, #0
   218ec:	beq	2193c <__assert_fail@plt+0xed84>
   218f0:	ldr	r0, [sp, #8]
   218f4:	and	r0, r0, #1
   218f8:	cmp	r0, #0
   218fc:	beq	2193c <__assert_fail@plt+0xed84>
   21900:	movw	r0, #57480	; 0xe088
   21904:	movt	r0, #8
   21908:	ldrb	r0, [r0, #1]
   2190c:	tst	r0, #1
   21910:	bne	21938 <__assert_fail@plt+0xed80>
   21914:	movw	r0, #32908	; 0x808c
   21918:	movt	r0, #7
   2191c:	bl	12864 <gettext@plt>
   21920:	movw	r1, #1
   21924:	str	r0, [sp, #4]
   21928:	mov	r0, r1
   2192c:	movw	r1, #0
   21930:	ldr	r2, [sp, #4]
   21934:	bl	12780 <error@plt>
   21938:	b	2193c <__assert_fail@plt+0xed84>
   2193c:	mov	sp, fp
   21940:	pop	{fp, pc}
   21944:	sub	sp, sp, #8
   21948:	str	r0, [sp, #4]
   2194c:	ldr	r0, [sp, #4]
   21950:	cmp	r0, #0
   21954:	str	r0, [sp]
   21958:	beq	219ac <__assert_fail@plt+0xedf4>
   2195c:	b	21960 <__assert_fail@plt+0xeda8>
   21960:	ldr	r0, [sp]
   21964:	cmp	r0, #1
   21968:	beq	21980 <__assert_fail@plt+0xedc8>
   2196c:	b	21970 <__assert_fail@plt+0xedb8>
   21970:	ldr	r0, [sp]
   21974:	cmp	r0, #2
   21978:	beq	219d0 <__assert_fail@plt+0xee18>
   2197c:	b	219f8 <__assert_fail@plt+0xee40>
   21980:	movw	r0, #51360	; 0xc8a0
   21984:	movt	r0, #1
   21988:	movw	r1, #57480	; 0xe088
   2198c:	movt	r1, #8
   21990:	str	r0, [r1, #52]	; 0x34
   21994:	movw	r0, #6708	; 0x1a34
   21998:	movt	r0, #2
   2199c:	str	r0, [r1, #64]	; 0x40
   219a0:	movw	r0, #1
   219a4:	strb	r0, [r1, #12]
   219a8:	b	219f8 <__assert_fail@plt+0xee40>
   219ac:	movw	r0, #51564	; 0xc96c
   219b0:	movt	r0, #1
   219b4:	movw	r1, #57480	; 0xe088
   219b8:	movt	r1, #8
   219bc:	str	r0, [r1, #52]	; 0x34
   219c0:	movw	r0, #6816	; 0x1aa0
   219c4:	movt	r0, #2
   219c8:	str	r0, [r1, #64]	; 0x40
   219cc:	b	219f8 <__assert_fail@plt+0xee40>
   219d0:	movw	r0, #50840	; 0xc698
   219d4:	movt	r0, #1
   219d8:	movw	r1, #57480	; 0xe088
   219dc:	movt	r1, #8
   219e0:	str	r0, [r1, #52]	; 0x34
   219e4:	movw	r0, #6864	; 0x1ad0
   219e8:	movt	r0, #2
   219ec:	str	r0, [r1, #64]	; 0x40
   219f0:	movw	r0, #1
   219f4:	strb	r0, [r1, #12]
   219f8:	ldr	r0, [sp, #4]
   219fc:	movw	r1, #57480	; 0xe088
   21a00:	movt	r1, #8
   21a04:	str	r0, [r1, #48]	; 0x30
   21a08:	ldr	r0, [r1, #44]	; 0x2c
   21a0c:	and	r0, r0, #2
   21a10:	cmp	r0, #0
   21a14:	beq	21a2c <__assert_fail@plt+0xee74>
   21a18:	movw	r0, #57480	; 0xe088
   21a1c:	movt	r0, #8
   21a20:	movw	r1, #51704	; 0xc9f8
   21a24:	movt	r1, #1
   21a28:	str	r1, [r0, #52]	; 0x34
   21a2c:	add	sp, sp, #8
   21a30:	bx	lr
   21a34:	push	{fp, lr}
   21a38:	mov	fp, sp
   21a3c:	sub	sp, sp, #24
   21a40:	str	r0, [fp, #-8]
   21a44:	str	r1, [sp, #12]
   21a48:	str	r2, [sp, #8]
   21a4c:	ldr	r0, [fp, #-8]
   21a50:	ldr	r1, [sp, #12]
   21a54:	ldr	r2, [sp, #8]
   21a58:	bl	48ea4 <__assert_fail@plt+0x362ec>
   21a5c:	str	r0, [sp, #4]
   21a60:	ldr	r0, [sp, #4]
   21a64:	movw	r1, #0
   21a68:	cmp	r1, r0
   21a6c:	bne	21a7c <__assert_fail@plt+0xeec4>
   21a70:	movw	r0, #0
   21a74:	str	r0, [fp, #-4]
   21a78:	b	21a94 <__assert_fail@plt+0xeedc>
   21a7c:	ldr	r0, [fp, #-8]
   21a80:	ldr	r1, [sp, #12]
   21a84:	ldr	r2, [sp, #8]
   21a88:	ldr	r3, [sp, #4]
   21a8c:	bl	21f4c <__assert_fail@plt+0xf394>
   21a90:	str	r0, [fp, #-4]
   21a94:	ldr	r0, [fp, #-4]
   21a98:	mov	sp, fp
   21a9c:	pop	{fp, pc}
   21aa0:	push	{fp, lr}
   21aa4:	mov	fp, sp
   21aa8:	sub	sp, sp, #16
   21aac:	str	r0, [fp, #-4]
   21ab0:	str	r1, [sp, #8]
   21ab4:	str	r2, [sp, #4]
   21ab8:	ldr	r0, [fp, #-4]
   21abc:	ldr	r1, [sp, #8]
   21ac0:	ldr	r2, [sp, #4]
   21ac4:	bl	49104 <__assert_fail@plt+0x3654c>
   21ac8:	mov	sp, fp
   21acc:	pop	{fp, pc}
   21ad0:	push	{fp, lr}
   21ad4:	mov	fp, sp
   21ad8:	sub	sp, sp, #24
   21adc:	str	r0, [fp, #-8]
   21ae0:	str	r1, [sp, #12]
   21ae4:	str	r2, [sp, #8]
   21ae8:	movw	r0, #57436	; 0xe05c
   21aec:	movt	r0, #8
   21af0:	ldr	r0, [r0]
   21af4:	movw	r1, #0
   21af8:	cmp	r1, r0
   21afc:	bne	21b4c <__assert_fail@plt+0xef94>
   21b00:	ldr	r0, [fp, #-8]
   21b04:	ldr	r1, [sp, #12]
   21b08:	ldr	r2, [sp, #8]
   21b0c:	bl	48ea4 <__assert_fail@plt+0x362ec>
   21b10:	str	r0, [sp, #4]
   21b14:	ldr	r0, [sp, #4]
   21b18:	movw	r1, #0
   21b1c:	cmp	r1, r0
   21b20:	bne	21b30 <__assert_fail@plt+0xef78>
   21b24:	movw	r0, #0
   21b28:	str	r0, [fp, #-4]
   21b2c:	b	21b60 <__assert_fail@plt+0xefa8>
   21b30:	ldr	r0, [fp, #-8]
   21b34:	ldr	r1, [sp, #12]
   21b38:	ldr	r2, [sp, #8]
   21b3c:	ldr	r3, [sp, #4]
   21b40:	bl	21f4c <__assert_fail@plt+0xf394>
   21b44:	str	r0, [fp, #-4]
   21b48:	b	21b60 <__assert_fail@plt+0xefa8>
   21b4c:	ldr	r0, [fp, #-8]
   21b50:	ldr	r1, [sp, #12]
   21b54:	ldr	r2, [sp, #8]
   21b58:	bl	49104 <__assert_fail@plt+0x3654c>
   21b5c:	str	r0, [fp, #-4]
   21b60:	ldr	r0, [fp, #-4]
   21b64:	mov	sp, fp
   21b68:	pop	{fp, pc}
   21b6c:	sub	sp, sp, #16
   21b70:	str	r0, [sp, #12]
   21b74:	str	r1, [sp, #8]
   21b78:	str	r2, [sp, #4]
   21b7c:	str	r3, [sp]
   21b80:	movw	r0, #57008	; 0xdeb0
   21b84:	movt	r0, #8
   21b88:	movw	r1, #0
   21b8c:	str	r1, [r0]
   21b90:	add	sp, sp, #16
   21b94:	bx	lr
   21b98:	sub	sp, sp, #16
   21b9c:	str	r0, [sp, #12]
   21ba0:	str	r1, [sp, #8]
   21ba4:	str	r2, [sp, #4]
   21ba8:	str	r3, [sp]
   21bac:	add	sp, sp, #16
   21bb0:	bx	lr
   21bb4:	push	{fp, lr}
   21bb8:	mov	fp, sp
   21bbc:	sub	sp, sp, #16
   21bc0:	str	r0, [sp, #8]
   21bc4:	ldr	r0, [sp, #8]
   21bc8:	str	r0, [sp]
   21bcc:	ldr	r1, [sp, #8]
   21bd0:	movw	r0, #33080	; 0x8138
   21bd4:	movt	r0, #7
   21bd8:	movw	r2, #6
   21bdc:	bl	12b58 <strncmp@plt>
   21be0:	movw	r1, #0
   21be4:	cmp	r1, r0
   21be8:	bne	21c18 <__assert_fail@plt+0xf060>
   21bec:	ldr	r0, [sp, #8]
   21bf0:	bl	12888 <strlen@plt>
   21bf4:	movw	r1, #8
   21bf8:	cmp	r1, r0
   21bfc:	bne	21c18 <__assert_fail@plt+0xf060>
   21c00:	ldr	r0, [sp]
   21c04:	movw	r1, #37452	; 0x924c
   21c08:	movt	r1, #7
   21c0c:	bl	21cc8 <__assert_fail@plt+0xf110>
   21c10:	str	r0, [fp, #-4]
   21c14:	b	21cbc <__assert_fail@plt+0xf104>
   21c18:	ldr	r0, [sp, #8]
   21c1c:	ldrb	r0, [r0]
   21c20:	cmp	r0, #45	; 0x2d
   21c24:	bne	21c34 <__assert_fail@plt+0xf07c>
   21c28:	ldr	r0, [sp, #8]
   21c2c:	add	r0, r0, #1
   21c30:	str	r0, [sp, #8]
   21c34:	movw	r0, #0
   21c38:	str	r0, [sp, #4]
   21c3c:	ldr	r0, [sp, #4]
   21c40:	movw	r1, #37468	; 0x925c
   21c44:	movt	r1, #7
   21c48:	add	r0, r1, r0, lsl #4
   21c4c:	ldr	r0, [r0, #4]
   21c50:	movw	r1, #0
   21c54:	cmp	r0, r1
   21c58:	beq	21cb4 <__assert_fail@plt+0xf0fc>
   21c5c:	ldr	r0, [sp, #4]
   21c60:	movw	r1, #37468	; 0x925c
   21c64:	movt	r1, #7
   21c68:	add	r0, r1, r0, lsl #4
   21c6c:	ldr	r0, [r0, #4]
   21c70:	ldr	r1, [sp, #8]
   21c74:	bl	124c8 <strcmp@plt>
   21c78:	cmp	r0, #0
   21c7c:	bne	21ca0 <__assert_fail@plt+0xf0e8>
   21c80:	ldr	r0, [sp]
   21c84:	ldr	r1, [sp, #4]
   21c88:	movw	r2, #37468	; 0x925c
   21c8c:	movt	r2, #7
   21c90:	add	r1, r2, r1, lsl #4
   21c94:	bl	21cc8 <__assert_fail@plt+0xf110>
   21c98:	str	r0, [fp, #-4]
   21c9c:	b	21cbc <__assert_fail@plt+0xf104>
   21ca0:	b	21ca4 <__assert_fail@plt+0xf0ec>
   21ca4:	ldr	r0, [sp, #4]
   21ca8:	add	r0, r0, #1
   21cac:	str	r0, [sp, #4]
   21cb0:	b	21c3c <__assert_fail@plt+0xf084>
   21cb4:	movw	r0, #0
   21cb8:	str	r0, [fp, #-4]
   21cbc:	ldr	r0, [fp, #-4]
   21cc0:	mov	sp, fp
   21cc4:	pop	{fp, pc}
   21cc8:	push	{r4, sl, fp, lr}
   21ccc:	add	fp, sp, #8
   21cd0:	sub	sp, sp, #32
   21cd4:	str	r0, [fp, #-16]
   21cd8:	str	r1, [sp, #20]
   21cdc:	ldr	r0, [sp, #20]
   21ce0:	ldr	r0, [r0]
   21ce4:	cmp	r0, #2
   21ce8:	beq	21dc4 <__assert_fail@plt+0xf20c>
   21cec:	ldr	r0, [sp, #20]
   21cf0:	ldr	r0, [r0]
   21cf4:	cmp	r0, #1
   21cf8:	bne	21d08 <__assert_fail@plt+0xf150>
   21cfc:	movw	r0, #0
   21d00:	str	r0, [fp, #-12]
   21d04:	b	21dcc <__assert_fail@plt+0xf214>
   21d08:	ldr	r0, [sp, #20]
   21d0c:	ldr	r0, [r0]
   21d10:	cmp	r0, #0
   21d14:	bne	21d94 <__assert_fail@plt+0xf1dc>
   21d18:	movw	r0, #57008	; 0xdeb0
   21d1c:	movt	r0, #8
   21d20:	ldr	r0, [r0]
   21d24:	movw	r1, #0
   21d28:	cmp	r0, r1
   21d2c:	beq	21d90 <__assert_fail@plt+0xf1d8>
   21d30:	bl	22044 <__assert_fail@plt+0xf48c>
   21d34:	tst	r0, #1
   21d38:	beq	21d90 <__assert_fail@plt+0xf1d8>
   21d3c:	movw	r0, #33164	; 0x818c
   21d40:	movt	r0, #7
   21d44:	bl	12864 <gettext@plt>
   21d48:	ldr	r3, [fp, #-16]
   21d4c:	movw	r1, #57008	; 0xdeb0
   21d50:	movt	r1, #8
   21d54:	ldr	r1, [r1]
   21d58:	ldr	r2, [fp, #-16]
   21d5c:	movw	ip, #0
   21d60:	str	r0, [sp, #16]
   21d64:	mov	r0, ip
   21d68:	str	r1, [sp, #12]
   21d6c:	mov	r1, ip
   21d70:	ldr	ip, [sp, #16]
   21d74:	str	r2, [sp, #8]
   21d78:	mov	r2, ip
   21d7c:	ldr	lr, [sp, #12]
   21d80:	str	lr, [sp]
   21d84:	ldr	r4, [sp, #8]
   21d88:	str	r4, [sp, #4]
   21d8c:	bl	12780 <error@plt>
   21d90:	b	21dc0 <__assert_fail@plt+0xf208>
   21d94:	movw	r0, #57008	; 0xdeb0
   21d98:	movt	r0, #8
   21d9c:	ldr	r0, [r0]
   21da0:	movw	r1, #0
   21da4:	cmp	r0, r1
   21da8:	bne	21dbc <__assert_fail@plt+0xf204>
   21dac:	ldr	r0, [fp, #-16]
   21db0:	movw	r1, #57008	; 0xdeb0
   21db4:	movt	r1, #8
   21db8:	str	r0, [r1]
   21dbc:	b	21dc0 <__assert_fail@plt+0xf208>
   21dc0:	b	21dc4 <__assert_fail@plt+0xf20c>
   21dc4:	ldr	r0, [sp, #20]
   21dc8:	str	r0, [fp, #-12]
   21dcc:	ldr	r0, [fp, #-12]
   21dd0:	sub	sp, fp, #8
   21dd4:	pop	{r4, sl, fp, pc}
   21dd8:	push	{fp, lr}
   21ddc:	mov	fp, sp
   21de0:	sub	sp, sp, #16
   21de4:	str	r0, [fp, #-4]
   21de8:	str	r1, [sp, #8]
   21dec:	str	r2, [sp, #4]
   21df0:	ldr	r0, [fp, #-4]
   21df4:	bl	1a188 <__assert_fail@plt+0x75d0>
   21df8:	str	r0, [sp]
   21dfc:	ldr	r0, [sp]
   21e00:	movw	r1, #18896	; 0x49d0
   21e04:	movt	r1, #1
   21e08:	str	r1, [r0]
   21e0c:	ldr	r0, [sp]
   21e10:	movw	r1, #5
   21e14:	str	r1, [r0, #8]
   21e18:	ldr	r0, [sp]
   21e1c:	movw	r1, #0
   21e20:	str	r1, [r0, #12]
   21e24:	ldr	r0, [sp]
   21e28:	movw	r1, #0
   21e2c:	strb	r1, [r0, #19]
   21e30:	ldr	r0, [sp]
   21e34:	strb	r1, [r0, #18]
   21e38:	movw	r0, #1
   21e3c:	and	r0, r0, #1
   21e40:	mov	sp, fp
   21e44:	pop	{fp, pc}
   21e48:	push	{fp, lr}
   21e4c:	mov	fp, sp
   21e50:	sub	sp, sp, #16
   21e54:	str	r0, [fp, #-4]
   21e58:	str	r1, [sp, #8]
   21e5c:	str	r2, [sp, #4]
   21e60:	ldr	r0, [fp, #-4]
   21e64:	movw	r1, #0
   21e68:	bl	1a36c <__assert_fail@plt+0x77b4>
   21e6c:	str	r0, [sp]
   21e70:	ldr	r0, [sp]
   21e74:	movw	r1, #24396	; 0x5f4c
   21e78:	movt	r1, #1
   21e7c:	str	r1, [r0]
   21e80:	ldr	r0, [sp]
   21e84:	movw	r1, #4
   21e88:	str	r1, [r0, #8]
   21e8c:	ldr	r0, [sp]
   21e90:	movw	r1, #0
   21e94:	str	r1, [r0, #12]
   21e98:	ldr	r0, [sp]
   21e9c:	movw	r1, #0
   21ea0:	strb	r1, [r0, #19]
   21ea4:	ldr	r0, [sp]
   21ea8:	strb	r1, [r0, #18]
   21eac:	movw	r0, #1
   21eb0:	and	r0, r0, #1
   21eb4:	mov	sp, fp
   21eb8:	pop	{fp, pc}
   21ebc:	push	{fp, lr}
   21ec0:	mov	fp, sp
   21ec4:	sub	sp, sp, #16
   21ec8:	str	r0, [fp, #-4]
   21ecc:	str	r1, [sp, #8]
   21ed0:	str	r2, [sp, #4]
   21ed4:	ldr	r0, [fp, #-4]
   21ed8:	bl	1b9fc <__assert_fail@plt+0x8e44>
   21edc:	str	r0, [sp]
   21ee0:	ldr	r0, [sp]
   21ee4:	movw	r1, #1
   21ee8:	strb	r1, [r0, #17]
   21eec:	ldr	r0, [sp]
   21ef0:	strb	r1, [r0, #16]
   21ef4:	ldr	r0, [sp]
   21ef8:	movw	r1, #0
   21efc:	strb	r1, [r0, #19]
   21f00:	ldr	r0, [sp]
   21f04:	strb	r1, [r0, #18]
   21f08:	ldr	r0, [sp]
   21f0c:	add	r0, r0, #40	; 0x28
   21f10:	bl	21f24 <__assert_fail@plt+0xf36c>
   21f14:	movw	r0, #1
   21f18:	and	r0, r0, #1
   21f1c:	mov	sp, fp
   21f20:	pop	{fp, pc}
   21f24:	push	{fp, lr}
   21f28:	mov	fp, sp
   21f2c:	sub	sp, sp, #8
   21f30:	str	r0, [sp, #4]
   21f34:	ldr	r1, [sp, #4]
   21f38:	movw	r0, #35686	; 0x8b66
   21f3c:	movt	r0, #7
   21f40:	bl	26a78 <__assert_fail@plt+0x13ec0>
   21f44:	mov	sp, fp
   21f48:	pop	{fp, pc}
   21f4c:	push	{fp, lr}
   21f50:	mov	fp, sp
   21f54:	sub	sp, sp, #24
   21f58:	str	r0, [fp, #-8]
   21f5c:	str	r1, [sp, #12]
   21f60:	str	r2, [sp, #8]
   21f64:	str	r3, [sp, #4]
   21f68:	bl	128d0 <__errno_location@plt>
   21f6c:	ldr	r0, [r0]
   21f70:	cmp	r0, #2
   21f74:	str	r0, [sp]
   21f78:	beq	21fe0 <__assert_fail@plt+0xf428>
   21f7c:	b	21f80 <__assert_fail@plt+0xf3c8>
   21f80:	ldr	r0, [sp]
   21f84:	cmp	r0, #5
   21f88:	beq	2202c <__assert_fail@plt+0xf474>
   21f8c:	b	21f90 <__assert_fail@plt+0xf3d8>
   21f90:	ldr	r0, [sp]
   21f94:	cmp	r0, #13
   21f98:	beq	2202c <__assert_fail@plt+0xf474>
   21f9c:	b	21fa0 <__assert_fail@plt+0xf3e8>
   21fa0:	ldr	r0, [sp]
   21fa4:	cmp	r0, #20
   21fa8:	beq	21fe0 <__assert_fail@plt+0xf428>
   21fac:	b	21fb0 <__assert_fail@plt+0xf3f8>
   21fb0:	ldr	r0, [sp]
   21fb4:	cmp	r0, #36	; 0x24
   21fb8:	beq	2202c <__assert_fail@plt+0xf474>
   21fbc:	b	21fc0 <__assert_fail@plt+0xf408>
   21fc0:	ldr	r0, [sp]
   21fc4:	cmp	r0, #40	; 0x28
   21fc8:	beq	2202c <__assert_fail@plt+0xf474>
   21fcc:	b	21fd0 <__assert_fail@plt+0xf418>
   21fd0:	ldr	r0, [sp]
   21fd4:	cmp	r0, #75	; 0x4b
   21fd8:	beq	2202c <__assert_fail@plt+0xf474>
   21fdc:	b	22030 <__assert_fail@plt+0xf478>
   21fe0:	movw	r0, #57480	; 0xe088
   21fe4:	movt	r0, #8
   21fe8:	ldr	r0, [r0, #44]	; 0x2c
   21fec:	and	r0, r0, #2
   21ff0:	cmp	r0, #0
   21ff4:	beq	22014 <__assert_fail@plt+0xf45c>
   21ff8:	movw	r0, #55080	; 0xd728
   21ffc:	movt	r0, #8
   22000:	ldr	r0, [r0]
   22004:	ldr	r2, [sp, #12]
   22008:	movw	r1, #33087	; 0x813f
   2200c:	movt	r1, #7
   22010:	bl	128c4 <fprintf@plt>
   22014:	ldr	r0, [fp, #-8]
   22018:	ldr	r1, [sp, #12]
   2201c:	ldr	r2, [sp, #8]
   22020:	bl	49104 <__assert_fail@plt+0x3654c>
   22024:	str	r0, [fp, #-4]
   22028:	b	22038 <__assert_fail@plt+0xf480>
   2202c:	b	22030 <__assert_fail@plt+0xf478>
   22030:	ldr	r0, [sp, #4]
   22034:	str	r0, [fp, #-4]
   22038:	ldr	r0, [fp, #-4]
   2203c:	mov	sp, fp
   22040:	pop	{fp, pc}
   22044:	sub	sp, sp, #4
   22048:	movw	r0, #57480	; 0xe088
   2204c:	movt	r0, #8
   22050:	ldrb	r0, [r0, #17]
   22054:	tst	r0, #1
   22058:	beq	2206c <__assert_fail@plt+0xf4b4>
   2205c:	movw	r0, #0
   22060:	and	r0, r0, #1
   22064:	strb	r0, [sp, #3]
   22068:	b	22080 <__assert_fail@plt+0xf4c8>
   2206c:	movw	r0, #57480	; 0xe088
   22070:	movt	r0, #8
   22074:	ldrb	r0, [r0, #16]
   22078:	and	r0, r0, #1
   2207c:	strb	r0, [sp, #3]
   22080:	ldrb	r0, [sp, #3]
   22084:	and	r0, r0, #1
   22088:	add	sp, sp, #4
   2208c:	bx	lr
   22090:	push	{fp, lr}
   22094:	mov	fp, sp
   22098:	sub	sp, sp, #176	; 0xb0
   2209c:	str	r0, [fp, #-8]
   220a0:	str	r1, [fp, #-12]
   220a4:	str	r2, [fp, #-16]
   220a8:	ldr	r0, [fp, #-12]
   220ac:	movw	r1, #0
   220b0:	cmp	r0, r1
   220b4:	beq	220d8 <__assert_fail@plt+0xf520>
   220b8:	ldr	r0, [fp, #-12]
   220bc:	ldr	r1, [fp, #-16]
   220c0:	ldr	r1, [r1]
   220c4:	add	r0, r0, r1, lsl #2
   220c8:	ldr	r0, [r0]
   220cc:	movw	r1, #0
   220d0:	cmp	r0, r1
   220d4:	bne	220e8 <__assert_fail@plt+0xf530>
   220d8:	movw	r0, #0
   220dc:	and	r0, r0, #1
   220e0:	strb	r0, [fp, #-1]
   220e4:	b	22648 <__assert_fail@plt+0xfa90>
   220e8:	ldr	r0, [fp, #-12]
   220ec:	ldr	r1, [fp, #-16]
   220f0:	ldr	r1, [r1]
   220f4:	add	r0, r0, r1, lsl #2
   220f8:	ldr	r0, [r0]
   220fc:	bl	12888 <strlen@plt>
   22100:	movw	r1, #8
   22104:	cmp	r1, r0
   22108:	beq	2211c <__assert_fail@plt+0xf564>
   2210c:	movw	r0, #0
   22110:	and	r0, r0, #1
   22114:	strb	r0, [fp, #-1]
   22118:	b	22648 <__assert_fail@plt+0xfa90>
   2211c:	mov	r0, #116	; 0x74
   22120:	strh	r0, [fp, #-20]	; 0xffffffec
   22124:	movw	r0, #16993	; 0x4261
   22128:	movt	r0, #28003	; 0x6d63
   2212c:	str	r0, [fp, #-24]	; 0xffffffe8
   22130:	ldr	r0, [fp, #-12]
   22134:	ldr	r1, [fp, #-16]
   22138:	ldr	r1, [r1]
   2213c:	add	r0, r0, r1, lsl #2
   22140:	ldr	r1, [r0]
   22144:	movw	r0, #33080	; 0x8138
   22148:	movt	r0, #7
   2214c:	movw	r2, #6
   22150:	bl	12b58 <strncmp@plt>
   22154:	movw	r1, #0
   22158:	cmp	r1, r0
   2215c:	bne	22164 <__assert_fail@plt+0xf5ac>
   22160:	b	22184 <__assert_fail@plt+0xf5cc>
   22164:	movw	r0, #33416	; 0x8288
   22168:	movt	r0, #7
   2216c:	movw	r1, #33459	; 0x82b3
   22170:	movt	r1, #7
   22174:	movw	r2, #1555	; 0x613
   22178:	movw	r3, #33468	; 0x82bc
   2217c:	movt	r3, #7
   22180:	bl	12bb8 <__assert_fail@plt>
   22184:	ldr	r0, [fp, #-12]
   22188:	ldr	r1, [fp, #-16]
   2218c:	ldr	r1, [r1]
   22190:	ldr	r0, [r0, r1, lsl #2]
   22194:	ldrb	r0, [r0, #6]
   22198:	strb	r0, [fp, #-17]	; 0xffffffef
   2219c:	ldr	r0, [fp, #-12]
   221a0:	ldr	r1, [fp, #-16]
   221a4:	ldr	r1, [r1]
   221a8:	add	r0, r0, r1, lsl #2
   221ac:	ldr	r0, [r0]
   221b0:	ldrb	r0, [r0, #7]
   221b4:	strb	r0, [fp, #-18]	; 0xffffffee
   221b8:	ldrb	r0, [fp, #-17]	; 0xffffffef
   221bc:	movw	r1, #66	; 0x42
   221c0:	cmp	r1, r0
   221c4:	beq	221d8 <__assert_fail@plt+0xf620>
   221c8:	ldrb	r0, [fp, #-18]	; 0xffffffee
   221cc:	movw	r1, #66	; 0x42
   221d0:	cmp	r1, r0
   221d4:	bne	22208 <__assert_fail@plt+0xf650>
   221d8:	movw	r0, #33533	; 0x82fd
   221dc:	movt	r0, #7
   221e0:	bl	12864 <gettext@plt>
   221e4:	movw	r1, #0
   221e8:	str	r0, [sp, #36]	; 0x24
   221ec:	mov	r0, r1
   221f0:	ldr	r2, [sp, #36]	; 0x24
   221f4:	bl	12780 <error@plt>
   221f8:	movw	r0, #0
   221fc:	and	r0, r0, #1
   22200:	strb	r0, [fp, #-1]
   22204:	b	22648 <__assert_fail@plt+0xfa90>
   22208:	ldrb	r0, [fp, #-17]	; 0xffffffef
   2220c:	cmp	r0, #116	; 0x74
   22210:	beq	22244 <__assert_fail@plt+0xf68c>
   22214:	sub	r0, fp, #24
   22218:	ldrb	r1, [fp, #-17]	; 0xffffffef
   2221c:	bl	12894 <strchr@plt>
   22220:	movw	r1, #0
   22224:	cmp	r1, r0
   22228:	beq	22244 <__assert_fail@plt+0xf68c>
   2222c:	sub	r0, fp, #24
   22230:	ldrb	r1, [fp, #-18]	; 0xffffffee
   22234:	bl	12894 <strchr@plt>
   22238:	movw	r1, #0
   2223c:	cmp	r1, r0
   22240:	bne	22254 <__assert_fail@plt+0xf69c>
   22244:	movw	r0, #0
   22248:	and	r0, r0, #1
   2224c:	strb	r0, [fp, #-1]
   22250:	b	22648 <__assert_fail@plt+0xfa90>
   22254:	ldr	r0, [fp, #-12]
   22258:	ldr	r1, [fp, #-16]
   2225c:	ldr	r1, [r1]
   22260:	add	r1, r1, #1
   22264:	add	r0, r0, r1, lsl #2
   22268:	ldr	r0, [r0]
   2226c:	movw	r1, #0
   22270:	cmp	r0, r1
   22274:	bne	222d0 <__assert_fail@plt+0xf718>
   22278:	movw	r0, #33602	; 0x8342
   2227c:	movt	r0, #7
   22280:	bl	12864 <gettext@plt>
   22284:	movw	r1, #57480	; 0xe088
   22288:	movt	r1, #8
   2228c:	ldr	r1, [r1, #72]	; 0x48
   22290:	ldr	r2, [fp, #-12]
   22294:	ldr	r3, [fp, #-16]
   22298:	ldr	r3, [r3]
   2229c:	add	r2, r2, r3, lsl #2
   222a0:	ldr	r2, [r2]
   222a4:	movw	r3, #0
   222a8:	str	r0, [sp, #32]
   222ac:	mov	r0, r3
   222b0:	bl	487d0 <__assert_fail@plt+0x35c18>
   222b4:	movw	r1, #1
   222b8:	str	r0, [sp, #28]
   222bc:	mov	r0, r1
   222c0:	movw	r1, #0
   222c4:	ldr	r2, [sp, #32]
   222c8:	ldr	r3, [sp, #28]
   222cc:	bl	12780 <error@plt>
   222d0:	ldr	r0, [fp, #-16]
   222d4:	ldr	r1, [r0]
   222d8:	add	r1, r1, #1
   222dc:	str	r1, [r0]
   222e0:	ldr	r0, [fp, #-8]
   222e4:	ldr	r1, [fp, #-12]
   222e8:	ldr	r2, [fp, #-16]
   222ec:	ldr	r2, [r2]
   222f0:	ldr	r1, [r1, r2, lsl #2]
   222f4:	bl	1b994 <__assert_fail@plt+0x8ddc>
   222f8:	str	r0, [fp, #-28]	; 0xffffffe4
   222fc:	ldrb	r0, [fp, #-17]	; 0xffffffef
   22300:	mov	r1, r0
   22304:	cmp	r0, #66	; 0x42
   22308:	str	r1, [sp, #24]
   2230c:	beq	22354 <__assert_fail@plt+0xf79c>
   22310:	b	22314 <__assert_fail@plt+0xf75c>
   22314:	ldr	r0, [sp, #24]
   22318:	cmp	r0, #97	; 0x61
   2231c:	beq	22344 <__assert_fail@plt+0xf78c>
   22320:	b	22324 <__assert_fail@plt+0xf76c>
   22324:	ldr	r0, [sp, #24]
   22328:	cmp	r0, #99	; 0x63
   2232c:	beq	22364 <__assert_fail@plt+0xf7ac>
   22330:	b	22334 <__assert_fail@plt+0xf77c>
   22334:	ldr	r0, [sp, #24]
   22338:	cmp	r0, #109	; 0x6d
   2233c:	beq	22374 <__assert_fail@plt+0xf7bc>
   22340:	b	22384 <__assert_fail@plt+0xf7cc>
   22344:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22348:	movw	r1, #0
   2234c:	str	r1, [r0, #40]	; 0x28
   22350:	b	223e0 <__assert_fail@plt+0xf828>
   22354:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22358:	movw	r1, #1
   2235c:	str	r1, [r0, #40]	; 0x28
   22360:	b	223e0 <__assert_fail@plt+0xf828>
   22364:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22368:	movw	r1, #2
   2236c:	str	r1, [r0, #40]	; 0x28
   22370:	b	223e0 <__assert_fail@plt+0xf828>
   22374:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22378:	movw	r1, #3
   2237c:	str	r1, [r0, #40]	; 0x28
   22380:	b	223e0 <__assert_fail@plt+0xf828>
   22384:	sub	r0, fp, #24
   22388:	ldrb	r1, [fp, #-17]	; 0xffffffef
   2238c:	bl	12894 <strchr@plt>
   22390:	movw	r1, #0
   22394:	cmp	r0, r1
   22398:	beq	223a0 <__assert_fail@plt+0xf7e8>
   2239c:	b	223c0 <__assert_fail@plt+0xf808>
   223a0:	movw	r0, #33632	; 0x8360
   223a4:	movt	r0, #7
   223a8:	movw	r1, #33459	; 0x82b3
   223ac:	movt	r1, #7
   223b0:	movw	r2, #1611	; 0x64b
   223b4:	movw	r3, #33468	; 0x82bc
   223b8:	movt	r3, #7
   223bc:	bl	12bb8 <__assert_fail@plt>
   223c0:	movw	r0, #27249	; 0x6a71
   223c4:	movt	r0, #7
   223c8:	movw	r1, #33459	; 0x82b3
   223cc:	movt	r1, #7
   223d0:	movw	r2, #1612	; 0x64c
   223d4:	movw	r3, #33468	; 0x82bc
   223d8:	movt	r3, #7
   223dc:	bl	12bb8 <__assert_fail@plt>
   223e0:	ldrb	r0, [fp, #-18]	; 0xffffffee
   223e4:	movw	r1, #116	; 0x74
   223e8:	cmp	r1, r0
   223ec:	bne	22480 <__assert_fail@plt+0xf8c8>
   223f0:	movw	r0, #57480	; 0xe088
   223f4:	movt	r0, #8
   223f8:	add	r2, r0, #20
   223fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22400:	add	r0, r0, #48	; 0x30
   22404:	ldr	r1, [fp, #-12]
   22408:	ldr	r3, [fp, #-16]
   2240c:	ldr	r3, [r3]
   22410:	add	r1, r1, r3, lsl #2
   22414:	ldr	r1, [r1]
   22418:	bl	3dad0 <__assert_fail@plt+0x2af18>
   2241c:	tst	r0, #1
   22420:	bne	2247c <__assert_fail@plt+0xf8c4>
   22424:	movw	r0, #33655	; 0x8377
   22428:	movt	r0, #7
   2242c:	bl	12864 <gettext@plt>
   22430:	movw	r1, #57480	; 0xe088
   22434:	movt	r1, #8
   22438:	ldr	r1, [r1, #72]	; 0x48
   2243c:	ldr	r2, [fp, #-12]
   22440:	ldr	r3, [fp, #-16]
   22444:	ldr	r3, [r3]
   22448:	add	r2, r2, r3, lsl #2
   2244c:	ldr	r2, [r2]
   22450:	movw	r3, #0
   22454:	str	r0, [sp, #20]
   22458:	mov	r0, r3
   2245c:	bl	487d0 <__assert_fail@plt+0x35c18>
   22460:	movw	r1, #1
   22464:	str	r0, [sp, #16]
   22468:	mov	r0, r1
   2246c:	movw	r1, #0
   22470:	ldr	r2, [sp, #20]
   22474:	ldr	r3, [sp, #16]
   22478:	bl	12780 <error@plt>
   2247c:	b	22564 <__assert_fail@plt+0xf9ac>
   22480:	add	r0, sp, #40	; 0x28
   22484:	bl	1bdbc <__assert_fail@plt+0x9204>
   22488:	movw	r0, #57480	; 0xe088
   2248c:	movt	r0, #8
   22490:	ldr	r0, [r0, #52]	; 0x34
   22494:	ldr	r1, [fp, #-12]
   22498:	ldr	r2, [fp, #-16]
   2249c:	ldr	r2, [r2]
   224a0:	add	r1, r1, r2, lsl #2
   224a4:	ldr	r1, [r1]
   224a8:	str	r0, [sp, #12]
   224ac:	mov	r0, r1
   224b0:	add	r1, sp, #40	; 0x28
   224b4:	ldr	r2, [sp, #12]
   224b8:	blx	r2
   224bc:	cmp	r0, #0
   224c0:	beq	224e4 <__assert_fail@plt+0xf92c>
   224c4:	bl	128d0 <__errno_location@plt>
   224c8:	ldr	r0, [r0]
   224cc:	ldr	r1, [fp, #-12]
   224d0:	ldr	r2, [fp, #-16]
   224d4:	ldr	r2, [r2]
   224d8:	add	r1, r1, r2, lsl #2
   224dc:	ldr	r1, [r1]
   224e0:	bl	1da80 <__assert_fail@plt+0xaec8>
   224e4:	ldrb	r0, [fp, #-18]	; 0xffffffee
   224e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   224ec:	add	r1, r1, #40	; 0x28
   224f0:	add	r2, r1, #8
   224f4:	add	r1, sp, #40	; 0x28
   224f8:	str	r0, [sp, #8]
   224fc:	mov	r0, r1
   22500:	ldr	r1, [sp, #8]
   22504:	and	r1, r1, #255	; 0xff
   22508:	bl	22658 <__assert_fail@plt+0xfaa0>
   2250c:	cmp	r0, #0
   22510:	bne	22560 <__assert_fail@plt+0xf9a8>
   22514:	movw	r0, #33713	; 0x83b1
   22518:	movt	r0, #7
   2251c:	bl	12864 <gettext@plt>
   22520:	ldr	r1, [fp, #-12]
   22524:	ldr	r2, [fp, #-16]
   22528:	ldr	r2, [r2]
   2252c:	add	r1, r1, r2, lsl #2
   22530:	ldr	r1, [r1]
   22534:	movw	r2, #0
   22538:	str	r0, [sp, #4]
   2253c:	mov	r0, r2
   22540:	bl	1d994 <__assert_fail@plt+0xaddc>
   22544:	movw	r1, #1
   22548:	str	r0, [sp]
   2254c:	mov	r0, r1
   22550:	movw	r1, #0
   22554:	ldr	r2, [sp, #4]
   22558:	ldr	r3, [sp]
   2255c:	bl	12780 <error@plt>
   22560:	b	22564 <__assert_fail@plt+0xf9ac>
   22564:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22568:	movw	r1, #0
   2256c:	str	r1, [r0, #44]	; 0x2c
   22570:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22574:	ldr	r0, [r0, #48]	; 0x30
   22578:	bl	227d8 <__assert_fail@plt+0xfc20>
   2257c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22580:	vstr	s0, [r0, #28]
   22584:	ldr	r0, [fp, #-16]
   22588:	ldr	r1, [r0]
   2258c:	add	r1, r1, #1
   22590:	str	r1, [r0]
   22594:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22598:	ldr	r0, [r0]
   2259c:	movw	r1, #0
   225a0:	cmp	r0, r1
   225a4:	beq	225ac <__assert_fail@plt+0xf9f4>
   225a8:	b	225cc <__assert_fail@plt+0xfa14>
   225ac:	movw	r0, #33749	; 0x83d5
   225b0:	movt	r0, #7
   225b4:	movw	r1, #33459	; 0x82b3
   225b8:	movt	r1, #7
   225bc:	movw	r2, #1647	; 0x66f
   225c0:	movw	r3, #33468	; 0x82bc
   225c4:	movt	r3, #7
   225c8:	bl	12bb8 <__assert_fail@plt>
   225cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   225d0:	ldr	r0, [r0]
   225d4:	movw	r1, #23272	; 0x5ae8
   225d8:	movt	r1, #1
   225dc:	cmp	r0, r1
   225e0:	bne	225e8 <__assert_fail@plt+0xfa30>
   225e4:	b	22608 <__assert_fail@plt+0xfa50>
   225e8:	movw	r0, #33777	; 0x83f1
   225ec:	movt	r0, #7
   225f0:	movw	r1, #33459	; 0x82b3
   225f4:	movt	r1, #7
   225f8:	movw	r2, #1648	; 0x670
   225fc:	movw	r3, #33468	; 0x82bc
   22600:	movt	r3, #7
   22604:	bl	12bb8 <__assert_fail@plt>
   22608:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2260c:	ldrb	r0, [r0, #18]
   22610:	tst	r0, #1
   22614:	beq	2261c <__assert_fail@plt+0xfa64>
   22618:	b	2263c <__assert_fail@plt+0xfa84>
   2261c:	movw	r0, #33813	; 0x8415
   22620:	movt	r0, #7
   22624:	movw	r1, #33459	; 0x82b3
   22628:	movt	r1, #7
   2262c:	movw	r2, #1649	; 0x671
   22630:	movw	r3, #33468	; 0x82bc
   22634:	movt	r3, #7
   22638:	bl	12bb8 <__assert_fail@plt>
   2263c:	movw	r0, #1
   22640:	and	r0, r0, #1
   22644:	strb	r0, [fp, #-1]
   22648:	ldrb	r0, [fp, #-1]
   2264c:	and	r0, r0, #1
   22650:	mov	sp, fp
   22654:	pop	{fp, pc}
   22658:	push	{fp, lr}
   2265c:	mov	fp, sp
   22660:	sub	sp, sp, #72	; 0x48
   22664:	str	r0, [fp, #-8]
   22668:	strb	r1, [fp, #-9]
   2266c:	str	r2, [fp, #-16]
   22670:	ldrb	r0, [fp, #-9]
   22674:	mov	r1, r0
   22678:	cmp	r0, #66	; 0x42
   2267c:	str	r1, [sp, #20]
   22680:	beq	226f0 <__assert_fail@plt+0xfb38>
   22684:	b	22688 <__assert_fail@plt+0xfad0>
   22688:	ldr	r0, [sp, #20]
   2268c:	cmp	r0, #97	; 0x61
   22690:	beq	226b8 <__assert_fail@plt+0xfb00>
   22694:	b	22698 <__assert_fail@plt+0xfae0>
   22698:	ldr	r0, [sp, #20]
   2269c:	cmp	r0, #99	; 0x63
   226a0:	beq	2273c <__assert_fail@plt+0xfb84>
   226a4:	b	226a8 <__assert_fail@plt+0xfaf0>
   226a8:	ldr	r0, [sp, #20]
   226ac:	cmp	r0, #109	; 0x6d
   226b0:	beq	22774 <__assert_fail@plt+0xfbbc>
   226b4:	b	227ac <__assert_fail@plt+0xfbf4>
   226b8:	ldr	r0, [fp, #-16]
   226bc:	ldr	r1, [fp, #-8]
   226c0:	sub	r2, fp, #24
   226c4:	str	r0, [sp, #16]
   226c8:	mov	r0, r2
   226cc:	bl	49880 <__assert_fail@plt+0x36cc8>
   226d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   226d4:	ldr	r1, [sp, #16]
   226d8:	str	r0, [r1]
   226dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   226e0:	str	r0, [r1, #4]
   226e4:	movw	r0, #1
   226e8:	str	r0, [fp, #-4]
   226ec:	b	227cc <__assert_fail@plt+0xfc14>
   226f0:	ldr	r0, [fp, #-16]
   226f4:	ldr	r1, [fp, #-8]
   226f8:	sub	r2, fp, #32
   226fc:	str	r0, [sp, #12]
   22700:	mov	r0, r2
   22704:	bl	498ec <__assert_fail@plt+0x36d34>
   22708:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2270c:	ldr	r1, [sp, #12]
   22710:	str	r0, [r1]
   22714:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22718:	str	r0, [r1, #4]
   2271c:	ldr	r0, [fp, #-16]
   22720:	ldr	r0, [r0, #4]
   22724:	cmp	r0, #0
   22728:	movw	r0, #0
   2272c:	movge	r0, #1
   22730:	and	r0, r0, #1
   22734:	str	r0, [fp, #-4]
   22738:	b	227cc <__assert_fail@plt+0xfc14>
   2273c:	ldr	r0, [fp, #-16]
   22740:	ldr	r1, [fp, #-8]
   22744:	add	r2, sp, #32
   22748:	str	r0, [sp, #8]
   2274c:	mov	r0, r2
   22750:	bl	498a4 <__assert_fail@plt+0x36cec>
   22754:	ldr	r0, [sp, #32]
   22758:	ldr	r1, [sp, #8]
   2275c:	str	r0, [r1]
   22760:	ldr	r0, [sp, #36]	; 0x24
   22764:	str	r0, [r1, #4]
   22768:	movw	r0, #1
   2276c:	str	r0, [fp, #-4]
   22770:	b	227cc <__assert_fail@plt+0xfc14>
   22774:	ldr	r0, [fp, #-16]
   22778:	ldr	r1, [fp, #-8]
   2277c:	add	r2, sp, #24
   22780:	str	r0, [sp, #4]
   22784:	mov	r0, r2
   22788:	bl	498c8 <__assert_fail@plt+0x36d10>
   2278c:	ldr	r0, [sp, #24]
   22790:	ldr	r1, [sp, #4]
   22794:	str	r0, [r1]
   22798:	ldr	r0, [sp, #28]
   2279c:	str	r0, [r1, #4]
   227a0:	movw	r0, #1
   227a4:	str	r0, [fp, #-4]
   227a8:	b	227cc <__assert_fail@plt+0xfc14>
   227ac:	movw	r0, #27249	; 0x6a71
   227b0:	movt	r0, #7
   227b4:	movw	r1, #33459	; 0x82b3
   227b8:	movt	r1, #7
   227bc:	movw	r2, #498	; 0x1f2
   227c0:	movw	r3, #33833	; 0x8429
   227c4:	movt	r3, #7
   227c8:	bl	12bb8 <__assert_fail@plt>
   227cc:	ldr	r0, [fp, #-4]
   227d0:	mov	sp, fp
   227d4:	pop	{fp, pc}
   227d8:	push	{fp, lr}
   227dc:	mov	fp, sp
   227e0:	sub	sp, sp, #8
   227e4:	ldr	r1, [pc, #52]	; 22820 <__assert_fail@plt+0xfc68>
   227e8:	str	r0, [sp, #4]
   227ec:	movw	r0, #57480	; 0xe088
   227f0:	movt	r0, #8
   227f4:	ldr	r0, [r0, #28]
   227f8:	ldr	r2, [sp, #4]
   227fc:	sub	r0, r0, r2
   22800:	sdiv	r0, r0, r1
   22804:	str	r0, [sp]
   22808:	ldr	r0, [sp]
   2280c:	vmov	s0, r0
   22810:	vcvt.f32.s32	s0, s0
   22814:	bl	22824 <__assert_fail@plt+0xfc6c>
   22818:	mov	sp, fp
   2281c:	pop	{fp, pc}
   22820:	andeq	r5, r1, r0, lsl #3
   22824:	sub	sp, sp, #8
   22828:	vldr	s2, [pc, #112]	; 228a0 <__assert_fail@plt+0xfce8>
   2282c:	vstr	s0, [sp]
   22830:	vldr	s0, [sp]
   22834:	vcmpe.f32	s0, s2
   22838:	vmrs	APSR_nzcv, fpscr
   2283c:	bpl	2284c <__assert_fail@plt+0xfc94>
   22840:	vldr	s0, [pc, #104]	; 228b0 <__assert_fail@plt+0xfcf8>
   22844:	vstr	s0, [sp, #4]
   22848:	b	22894 <__assert_fail@plt+0xfcdc>
   2284c:	vldr	s0, [sp]
   22850:	vmov.f32	s2, #112	; 0x3f800000  1.0
   22854:	vcmpe.f32	s0, s2
   22858:	vmrs	APSR_nzcv, fpscr
   2285c:	bpl	2286c <__assert_fail@plt+0xfcb4>
   22860:	vldr	s0, [pc, #68]	; 228ac <__assert_fail@plt+0xfcf4>
   22864:	vstr	s0, [sp, #4]
   22868:	b	22894 <__assert_fail@plt+0xfcdc>
   2286c:	vldr	s0, [pc, #48]	; 228a4 <__assert_fail@plt+0xfcec>
   22870:	vldr	s2, [sp]
   22874:	vcmpe.f32	s2, s0
   22878:	vmrs	APSR_nzcv, fpscr
   2287c:	ble	2288c <__assert_fail@plt+0xfcd4>
   22880:	vldr	s0, [pc, #36]	; 228ac <__assert_fail@plt+0xfcf4>
   22884:	vstr	s0, [sp, #4]
   22888:	b	22894 <__assert_fail@plt+0xfcdc>
   2288c:	vldr	s0, [pc, #20]	; 228a8 <__assert_fail@plt+0xfcf0>
   22890:	vstr	s0, [sp, #4]
   22894:	vldr	s0, [sp, #4]
   22898:	add	sp, sp, #8
   2289c:	bx	lr
   228a0:	stclcc	12, cr12, [ip, #820]	; 0x334
   228a4:	sbcmi	r0, r8, #0
   228a8:	mcrcc	14, 6, sl, cr7, cr4, {0}
   228ac:			; <UNDEFINED> instruction: 0x3e99999a
   228b0:	stccc	7, cr13, [r3], #-40	; 0xffffffd8
   228b4:	push	{fp, lr}
   228b8:	mov	fp, sp
   228bc:	sub	sp, sp, #16
   228c0:	str	r0, [fp, #-4]
   228c4:	str	r1, [sp, #8]
   228c8:	str	r2, [sp, #4]
   228cc:	ldr	r0, [fp, #-4]
   228d0:	movw	r1, #0
   228d4:	bl	1a36c <__assert_fail@plt+0x77b4>
   228d8:	str	r0, [sp]
   228dc:	ldr	r0, [sp]
   228e0:	movw	r1, #23048	; 0x5a08
   228e4:	movt	r1, #1
   228e8:	str	r1, [r0]
   228ec:	ldr	r0, [sp]
   228f0:	movw	r1, #2
   228f4:	str	r1, [r0, #8]
   228f8:	ldr	r0, [sp]
   228fc:	movw	r1, #4
   22900:	str	r1, [r0, #12]
   22904:	ldr	r0, [sp]
   22908:	movw	r1, #0
   2290c:	strb	r1, [r0, #19]
   22910:	ldr	r0, [sp]
   22914:	strb	r1, [r0, #18]
   22918:	movw	r0, #1
   2291c:	and	r0, r0, #1
   22920:	mov	sp, fp
   22924:	pop	{fp, pc}
   22928:	push	{fp, lr}
   2292c:	mov	fp, sp
   22930:	sub	sp, sp, #16
   22934:	str	r0, [fp, #-4]
   22938:	str	r1, [sp, #8]
   2293c:	str	r2, [sp, #4]
   22940:	ldr	r0, [fp, #-4]
   22944:	bl	1a188 <__assert_fail@plt+0x75d0>
   22948:	str	r0, [sp]
   2294c:	ldr	r0, [sp]
   22950:	movw	r1, #19156	; 0x4ad4
   22954:	movt	r1, #1
   22958:	str	r1, [r0]
   2295c:	ldr	r0, [sp]
   22960:	movw	r1, #3
   22964:	str	r1, [r0, #8]
   22968:	ldr	r0, [sp]
   2296c:	movw	r1, #1
   22970:	str	r1, [r0, #12]
   22974:	ldr	r0, [sp]
   22978:	movw	r1, #0
   2297c:	strb	r1, [r0, #19]
   22980:	ldr	r0, [sp]
   22984:	strb	r1, [r0, #18]
   22988:	ldr	r0, [sp]
   2298c:	vmov.f32	s0, #112	; 0x3f800000  1.0
   22990:	vstr	s0, [r0, #28]
   22994:	movw	r0, #1
   22998:	and	r0, r0, #1
   2299c:	mov	sp, fp
   229a0:	pop	{fp, pc}
   229a4:	push	{fp, lr}
   229a8:	mov	fp, sp
   229ac:	sub	sp, sp, #16
   229b0:	str	r0, [fp, #-4]
   229b4:	str	r1, [sp, #8]
   229b8:	str	r2, [sp, #4]
   229bc:	ldr	r0, [fp, #-4]
   229c0:	bl	1a188 <__assert_fail@plt+0x75d0>
   229c4:	str	r0, [sp]
   229c8:	ldr	r0, [sp]
   229cc:	movw	r1, #18388	; 0x47d4
   229d0:	movt	r1, #1
   229d4:	str	r1, [r0]
   229d8:	ldr	r0, [sp]
   229dc:	movw	r1, #3
   229e0:	str	r1, [r0, #8]
   229e4:	ldr	r0, [sp]
   229e8:	str	r1, [r0, #12]
   229ec:	ldr	r0, [sp]
   229f0:	movw	r1, #0
   229f4:	strb	r1, [r0, #19]
   229f8:	ldr	r0, [sp]
   229fc:	strb	r1, [r0, #18]
   22a00:	movw	r0, #1
   22a04:	and	r0, r0, #1
   22a08:	mov	sp, fp
   22a0c:	pop	{fp, pc}
   22a10:	push	{fp, lr}
   22a14:	mov	fp, sp
   22a18:	sub	sp, sp, #16
   22a1c:	str	r0, [fp, #-4]
   22a20:	str	r1, [sp, #8]
   22a24:	str	r2, [sp, #4]
   22a28:	ldr	r0, [fp, #-4]
   22a2c:	ldr	r1, [sp, #8]
   22a30:	ldr	r2, [sp, #4]
   22a34:	movw	r3, #0
   22a38:	bl	259c0 <__assert_fail@plt+0x12e08>
   22a3c:	and	r0, r0, #1
   22a40:	mov	sp, fp
   22a44:	pop	{fp, pc}
   22a48:	push	{fp, lr}
   22a4c:	mov	fp, sp
   22a50:	sub	sp, sp, #144	; 0x90
   22a54:	str	r0, [fp, #-8]
   22a58:	str	r1, [fp, #-12]
   22a5c:	str	r2, [fp, #-16]
   22a60:	add	r0, sp, #24
   22a64:	bl	1bdbc <__assert_fail@plt+0x9204>
   22a68:	ldr	r0, [fp, #-12]
   22a6c:	ldr	r1, [fp, #-16]
   22a70:	add	r2, sp, #24
   22a74:	add	r3, sp, #20
   22a78:	bl	25eb0 <__assert_fail@plt+0x132f8>
   22a7c:	tst	r0, #1
   22a80:	beq	22afc <__assert_fail@plt+0xff44>
   22a84:	ldr	r0, [fp, #-8]
   22a88:	ldr	r1, [sp, #20]
   22a8c:	bl	1b994 <__assert_fail@plt+0x8ddc>
   22a90:	str	r0, [sp, #16]
   22a94:	ldr	r0, [sp, #16]
   22a98:	movw	r1, #0
   22a9c:	str	r1, [r0, #40]	; 0x28
   22aa0:	ldr	r0, [sp, #16]
   22aa4:	add	r1, sp, #8
   22aa8:	add	r2, sp, #24
   22aac:	str	r0, [sp, #4]
   22ab0:	mov	r0, r1
   22ab4:	mov	r1, r2
   22ab8:	bl	498c8 <__assert_fail@plt+0x36d10>
   22abc:	ldr	r0, [sp, #8]
   22ac0:	ldr	r1, [sp, #4]
   22ac4:	str	r0, [r1, #48]	; 0x30
   22ac8:	ldr	r0, [sp, #12]
   22acc:	str	r0, [r1, #52]	; 0x34
   22ad0:	ldr	r0, [sp, #16]
   22ad4:	movw	r2, #0
   22ad8:	str	r2, [r0, #44]	; 0x2c
   22adc:	ldr	r0, [sp, #104]	; 0x68
   22ae0:	bl	227d8 <__assert_fail@plt+0xfc20>
   22ae4:	ldr	r0, [sp, #16]
   22ae8:	vstr	s0, [r0, #28]
   22aec:	movw	r0, #1
   22af0:	and	r0, r0, #1
   22af4:	strb	r0, [fp, #-1]
   22af8:	b	22b08 <__assert_fail@plt+0xff50>
   22afc:	movw	r0, #0
   22b00:	and	r0, r0, #1
   22b04:	strb	r0, [fp, #-1]
   22b08:	ldrb	r0, [fp, #-1]
   22b0c:	and	r0, r0, #1
   22b10:	mov	sp, fp
   22b14:	pop	{fp, pc}
   22b18:	push	{fp, lr}
   22b1c:	mov	fp, sp
   22b20:	sub	sp, sp, #144	; 0x90
   22b24:	str	r0, [fp, #-8]
   22b28:	str	r1, [fp, #-12]
   22b2c:	str	r2, [fp, #-16]
   22b30:	movw	r0, #34419	; 0x8673
   22b34:	movt	r0, #7
   22b38:	bl	12864 <gettext@plt>
   22b3c:	str	r0, [fp, #-52]	; 0xffffffcc
   22b40:	ldr	r0, [fp, #-16]
   22b44:	ldr	r0, [r0]
   22b48:	str	r0, [fp, #-64]	; 0xffffffc0
   22b4c:	ldr	r0, [fp, #-12]
   22b50:	ldr	r1, [fp, #-16]
   22b54:	sub	r2, fp, #44	; 0x2c
   22b58:	bl	25ae8 <__assert_fail@plt+0x12f30>
   22b5c:	tst	r0, #1
   22b60:	bne	22b74 <__assert_fail@plt+0xffbc>
   22b64:	movw	r0, #0
   22b68:	and	r0, r0, #1
   22b6c:	strb	r0, [fp, #-1]
   22b70:	b	22ef0 <__assert_fail@plt+0x10338>
   22b74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22b78:	str	r0, [fp, #-48]	; 0xffffffd0
   22b7c:	movw	r0, #57480	; 0xe088
   22b80:	movt	r0, #8
   22b84:	ldr	r1, [r0, #28]
   22b88:	str	r1, [fp, #-60]	; 0xffffffc4
   22b8c:	ldr	r0, [r0, #32]
   22b90:	str	r0, [fp, #-56]	; 0xffffffc8
   22b94:	sub	r0, fp, #44	; 0x2c
   22b98:	sub	r1, fp, #40	; 0x28
   22b9c:	bl	25e18 <__assert_fail@plt+0x13260>
   22ba0:	tst	r0, #1
   22ba4:	beq	22c30 <__assert_fail@plt+0x10078>
   22ba8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   22bac:	movw	r1, #1
   22bb0:	cmp	r1, r0
   22bb4:	bne	22c2c <__assert_fail@plt+0x10074>
   22bb8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   22bbc:	movw	r1, #20863	; 0x517f
   22bc0:	movt	r1, #1
   22bc4:	add	r0, r0, r1
   22bc8:	asr	r2, r0, #31
   22bcc:	str	r0, [sp, #72]	; 0x48
   22bd0:	str	r2, [sp, #76]	; 0x4c
   22bd4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   22bd8:	add	r0, r0, r1
   22bdc:	str	r0, [fp, #-60]	; 0xffffffc4
   22be0:	ldr	r0, [sp, #72]	; 0x48
   22be4:	ldr	r1, [sp, #76]	; 0x4c
   22be8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   22bec:	eor	r1, r1, r2, asr #31
   22bf0:	eor	r0, r0, r2
   22bf4:	orr	r0, r0, r1
   22bf8:	cmp	r0, #0
   22bfc:	beq	22c28 <__assert_fail@plt+0x10070>
   22c00:	b	22c04 <__assert_fail@plt+0x1004c>
   22c04:	movw	r0, #34487	; 0x86b7
   22c08:	movt	r0, #7
   22c0c:	bl	12864 <gettext@plt>
   22c10:	movw	r1, #1
   22c14:	str	r0, [sp, #64]	; 0x40
   22c18:	mov	r0, r1
   22c1c:	movw	r1, #0
   22c20:	ldr	r2, [sp, #64]	; 0x40
   22c24:	bl	12780 <error@plt>
   22c28:	b	22c2c <__assert_fail@plt+0x10074>
   22c2c:	b	22c30 <__assert_fail@plt+0x10078>
   22c30:	ldr	r0, [fp, #-48]	; 0xffffffd0
   22c34:	str	r0, [fp, #-44]	; 0xffffffd4
   22c38:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22c3c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   22c40:	ldr	r2, [fp, #-60]	; 0xffffffc4
   22c44:	ldr	r3, [fp, #-56]	; 0xffffffc8
   22c48:	mov	ip, sp
   22c4c:	str	r1, [ip]
   22c50:	sub	r1, fp, #36	; 0x24
   22c54:	vldr	d0, [pc, #676]	; 22f00 <__assert_fail@plt+0x10348>
   22c58:	bl	25b38 <__assert_fail@plt+0x12f80>
   22c5c:	tst	r0, #1
   22c60:	bne	22c80 <__assert_fail@plt+0x100c8>
   22c64:	ldr	r0, [fp, #-64]	; 0xffffffc0
   22c68:	ldr	r1, [fp, #-16]
   22c6c:	str	r0, [r1]
   22c70:	movw	r0, #0
   22c74:	and	r0, r0, #1
   22c78:	strb	r0, [fp, #-1]
   22c7c:	b	22ef0 <__assert_fail@plt+0x10338>
   22c80:	ldr	r0, [fp, #-8]
   22c84:	ldr	r1, [fp, #-48]	; 0xffffffd0
   22c88:	bl	1b994 <__assert_fail@plt+0x8ddc>
   22c8c:	str	r0, [fp, #-20]	; 0xffffffec
   22c90:	ldr	r0, [fp, #-20]	; 0xffffffec
   22c94:	ldr	r1, [fp, #-36]	; 0xffffffdc
   22c98:	str	r1, [r0, #40]	; 0x28
   22c9c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   22ca0:	str	r1, [r0, #44]	; 0x2c
   22ca4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22ca8:	str	r1, [r0, #48]	; 0x30
   22cac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22cb0:	str	r1, [r0, #52]	; 0x34
   22cb4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22cb8:	bl	227d8 <__assert_fail@plt+0xfc20>
   22cbc:	ldr	r0, [fp, #-20]	; 0xffffffec
   22cc0:	vstr	s0, [r0, #28]
   22cc4:	movw	r0, #57480	; 0xe088
   22cc8:	movt	r0, #8
   22ccc:	ldr	r0, [r0, #44]	; 0x2c
   22cd0:	and	r0, r0, #1
   22cd4:	cmp	r0, #0
   22cd8:	beq	22ee4 <__assert_fail@plt+0x1032c>
   22cdc:	movw	r0, #55080	; 0xd728
   22ce0:	movt	r0, #8
   22ce4:	ldr	r0, [r0]
   22ce8:	ldr	r1, [fp, #-20]	; 0xffffffec
   22cec:	ldr	r2, [r1, #4]
   22cf0:	movw	r1, #34549	; 0x86f5
   22cf4:	movt	r1, #7
   22cf8:	bl	128c4 <fprintf@plt>
   22cfc:	movw	r1, #55080	; 0xd728
   22d00:	movt	r1, #8
   22d04:	ldr	r1, [r1]
   22d08:	ldr	r2, [fp, #-32]	; 0xffffffe0
   22d0c:	cmp	r2, #0
   22d10:	str	r1, [sp, #60]	; 0x3c
   22d14:	bne	22d28 <__assert_fail@plt+0x10170>
   22d18:	movw	r0, #34584	; 0x8718
   22d1c:	movt	r0, #7
   22d20:	str	r0, [sp, #56]	; 0x38
   22d24:	b	22d78 <__assert_fail@plt+0x101c0>
   22d28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22d2c:	cmp	r0, #1
   22d30:	bne	22d44 <__assert_fail@plt+0x1018c>
   22d34:	movw	r0, #45660	; 0xb25c
   22d38:	movt	r0, #7
   22d3c:	str	r0, [sp, #52]	; 0x34
   22d40:	b	22d70 <__assert_fail@plt+0x101b8>
   22d44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22d48:	cmp	r0, #2
   22d4c:	movw	r0, #0
   22d50:	moveq	r0, #1
   22d54:	tst	r0, #1
   22d58:	movw	r0, #34600	; 0x8728
   22d5c:	movt	r0, #7
   22d60:	movw	r1, #34587	; 0x871b
   22d64:	movt	r1, #7
   22d68:	movne	r0, r1
   22d6c:	str	r0, [sp, #52]	; 0x34
   22d70:	ldr	r0, [sp, #52]	; 0x34
   22d74:	str	r0, [sp, #56]	; 0x38
   22d78:	ldr	r0, [sp, #56]	; 0x38
   22d7c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   22d80:	cmp	r1, #0
   22d84:	str	r0, [sp, #48]	; 0x30
   22d88:	bne	22d9c <__assert_fail@plt+0x101e4>
   22d8c:	movw	r0, #34590	; 0x871e
   22d90:	movt	r0, #7
   22d94:	str	r0, [sp, #44]	; 0x2c
   22d98:	b	22dec <__assert_fail@plt+0x10234>
   22d9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22da0:	cmp	r0, #1
   22da4:	bne	22db8 <__assert_fail@plt+0x10200>
   22da8:	movw	r0, #34593	; 0x8721
   22dac:	movt	r0, #7
   22db0:	str	r0, [sp, #40]	; 0x28
   22db4:	b	22de4 <__assert_fail@plt+0x1022c>
   22db8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22dbc:	cmp	r0, #2
   22dc0:	movw	r0, #0
   22dc4:	moveq	r0, #1
   22dc8:	tst	r0, #1
   22dcc:	movw	r0, #34599	; 0x8727
   22dd0:	movt	r0, #7
   22dd4:	movw	r1, #34596	; 0x8724
   22dd8:	movt	r1, #7
   22ddc:	movne	r0, r1
   22de0:	str	r0, [sp, #40]	; 0x28
   22de4:	ldr	r0, [sp, #40]	; 0x28
   22de8:	str	r0, [sp, #44]	; 0x2c
   22dec:	ldr	r0, [sp, #44]	; 0x2c
   22df0:	movw	r1, #34563	; 0x8703
   22df4:	movt	r1, #7
   22df8:	ldr	r2, [sp, #60]	; 0x3c
   22dfc:	str	r0, [sp, #36]	; 0x24
   22e00:	mov	r0, r2
   22e04:	ldr	r2, [sp, #48]	; 0x30
   22e08:	ldr	r3, [sp, #36]	; 0x24
   22e0c:	bl	128c4 <fprintf@plt>
   22e10:	ldr	r1, [fp, #-20]	; 0xffffffec
   22e14:	ldr	r1, [r1, #48]	; 0x30
   22e18:	str	r1, [sp, #68]	; 0x44
   22e1c:	movw	r1, #55080	; 0xd728
   22e20:	movt	r1, #8
   22e24:	ldr	r1, [r1]
   22e28:	ldr	r2, [fp, #-20]	; 0xffffffec
   22e2c:	ldr	r2, [r2, #48]	; 0x30
   22e30:	asr	r3, r2, #31
   22e34:	add	ip, sp, #68	; 0x44
   22e38:	str	r0, [sp, #32]
   22e3c:	mov	r0, ip
   22e40:	str	r1, [sp, #28]
   22e44:	str	r3, [sp, #24]
   22e48:	str	r2, [sp, #20]
   22e4c:	bl	1263c <ctime@plt>
   22e50:	mov	r1, sp
   22e54:	str	r0, [r1]
   22e58:	movw	r1, #34622	; 0x873e
   22e5c:	movt	r1, #7
   22e60:	ldr	r0, [sp, #28]
   22e64:	ldr	r2, [sp, #20]
   22e68:	ldr	r3, [sp, #24]
   22e6c:	bl	128c4 <fprintf@plt>
   22e70:	ldr	r1, [fp, #-32]	; 0xffffffe0
   22e74:	cmp	r1, #2
   22e78:	bne	22ee0 <__assert_fail@plt+0x10328>
   22e7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   22e80:	ldr	r0, [r0, #48]	; 0x30
   22e84:	movw	r1, #20864	; 0x5180
   22e88:	movt	r1, #1
   22e8c:	add	r0, r0, r1
   22e90:	str	r0, [sp, #68]	; 0x44
   22e94:	movw	r0, #55080	; 0xd728
   22e98:	movt	r0, #8
   22e9c:	ldr	r0, [r0]
   22ea0:	ldr	r1, [sp, #68]	; 0x44
   22ea4:	asr	r3, r1, #31
   22ea8:	add	r2, sp, #68	; 0x44
   22eac:	str	r0, [sp, #16]
   22eb0:	mov	r0, r2
   22eb4:	str	r3, [sp, #12]
   22eb8:	str	r1, [sp, #8]
   22ebc:	bl	1263c <ctime@plt>
   22ec0:	mov	r1, sp
   22ec4:	str	r0, [r1]
   22ec8:	movw	r1, #34602	; 0x872a
   22ecc:	movt	r1, #7
   22ed0:	ldr	r0, [sp, #16]
   22ed4:	ldr	r2, [sp, #8]
   22ed8:	ldr	r3, [sp, #12]
   22edc:	bl	128c4 <fprintf@plt>
   22ee0:	b	22ee4 <__assert_fail@plt+0x1032c>
   22ee4:	movw	r0, #1
   22ee8:	and	r0, r0, #1
   22eec:	strb	r0, [fp, #-1]
   22ef0:	ldrb	r0, [fp, #-1]
   22ef4:	and	r0, r0, #1
   22ef8:	mov	sp, fp
   22efc:	pop	{fp, pc}
   22f00:	andeq	r0, r0, r0
   22f04:	rscsmi	r1, r5, r0, lsl #16
   22f08:	push	{fp, lr}
   22f0c:	mov	fp, sp
   22f10:	sub	sp, sp, #16
   22f14:	str	r0, [fp, #-4]
   22f18:	str	r1, [sp, #8]
   22f1c:	str	r2, [sp, #4]
   22f20:	ldr	r0, [fp, #-4]
   22f24:	ldr	r1, [sp, #8]
   22f28:	ldr	r2, [sp, #4]
   22f2c:	movw	r3, #2
   22f30:	bl	259c0 <__assert_fail@plt+0x12e08>
   22f34:	and	r0, r0, #1
   22f38:	mov	sp, fp
   22f3c:	pop	{fp, pc}
   22f40:	push	{fp, lr}
   22f44:	mov	fp, sp
   22f48:	sub	sp, sp, #144	; 0x90
   22f4c:	str	r0, [fp, #-8]
   22f50:	str	r1, [fp, #-12]
   22f54:	str	r2, [fp, #-16]
   22f58:	add	r0, sp, #24
   22f5c:	bl	1bdbc <__assert_fail@plt+0x9204>
   22f60:	ldr	r0, [fp, #-12]
   22f64:	ldr	r1, [fp, #-16]
   22f68:	add	r2, sp, #24
   22f6c:	add	r3, sp, #20
   22f70:	bl	25eb0 <__assert_fail@plt+0x132f8>
   22f74:	tst	r0, #1
   22f78:	beq	22ff4 <__assert_fail@plt+0x1043c>
   22f7c:	ldr	r0, [fp, #-8]
   22f80:	ldr	r1, [sp, #20]
   22f84:	bl	1b994 <__assert_fail@plt+0x8ddc>
   22f88:	str	r0, [sp, #16]
   22f8c:	ldr	r0, [sp, #16]
   22f90:	movw	r1, #2
   22f94:	str	r1, [r0, #40]	; 0x28
   22f98:	ldr	r0, [sp, #16]
   22f9c:	add	r1, sp, #8
   22fa0:	add	r2, sp, #24
   22fa4:	str	r0, [sp, #4]
   22fa8:	mov	r0, r1
   22fac:	mov	r1, r2
   22fb0:	bl	498c8 <__assert_fail@plt+0x36d10>
   22fb4:	ldr	r0, [sp, #8]
   22fb8:	ldr	r1, [sp, #4]
   22fbc:	str	r0, [r1, #48]	; 0x30
   22fc0:	ldr	r0, [sp, #12]
   22fc4:	str	r0, [r1, #52]	; 0x34
   22fc8:	ldr	r0, [sp, #16]
   22fcc:	movw	r2, #0
   22fd0:	str	r2, [r0, #44]	; 0x2c
   22fd4:	ldr	r0, [sp, #104]	; 0x68
   22fd8:	bl	227d8 <__assert_fail@plt+0xfc20>
   22fdc:	ldr	r0, [sp, #16]
   22fe0:	vstr	s0, [r0, #28]
   22fe4:	movw	r0, #1
   22fe8:	and	r0, r0, #1
   22fec:	strb	r0, [fp, #-1]
   22ff0:	b	23000 <__assert_fail@plt+0x10448>
   22ff4:	movw	r0, #0
   22ff8:	and	r0, r0, #1
   22ffc:	strb	r0, [fp, #-1]
   23000:	ldrb	r0, [fp, #-1]
   23004:	and	r0, r0, #1
   23008:	mov	sp, fp
   2300c:	pop	{fp, pc}
   23010:	push	{fp, lr}
   23014:	mov	fp, sp
   23018:	sub	sp, sp, #32
   2301c:	str	r0, [fp, #-8]
   23020:	str	r1, [fp, #-12]
   23024:	str	r2, [sp, #16]
   23028:	ldr	r0, [fp, #-12]
   2302c:	movw	r1, #0
   23030:	cmp	r0, r1
   23034:	beq	23058 <__assert_fail@plt+0x104a0>
   23038:	ldr	r0, [fp, #-12]
   2303c:	ldr	r1, [sp, #16]
   23040:	ldr	r1, [r1]
   23044:	add	r0, r0, r1, lsl #2
   23048:	ldr	r0, [r0]
   2304c:	movw	r1, #0
   23050:	cmp	r0, r1
   23054:	bne	23068 <__assert_fail@plt+0x104b0>
   23058:	movw	r0, #0
   2305c:	and	r0, r0, #1
   23060:	strb	r0, [fp, #-1]
   23064:	b	23100 <__assert_fail@plt+0x10548>
   23068:	bl	124b0 <is_selinux_enabled@plt>
   2306c:	cmp	r0, #0
   23070:	bgt	23098 <__assert_fail@plt+0x104e0>
   23074:	movw	r0, #34630	; 0x8746
   23078:	movt	r0, #7
   2307c:	bl	12864 <gettext@plt>
   23080:	movw	r1, #1
   23084:	str	r0, [sp, #8]
   23088:	mov	r0, r1
   2308c:	movw	r1, #0
   23090:	ldr	r2, [sp, #8]
   23094:	bl	12780 <error@plt>
   23098:	ldr	r0, [fp, #-8]
   2309c:	mov	r1, #0
   230a0:	str	r1, [sp, #4]
   230a4:	bl	1b994 <__assert_fail@plt+0x8ddc>
   230a8:	str	r0, [sp, #12]
   230ac:	ldr	r0, [sp, #12]
   230b0:	movw	r1, #55050	; 0xd70a
   230b4:	movt	r1, #15395	; 0x3c23
   230b8:	str	r1, [r0, #28]
   230bc:	ldr	r0, [sp, #12]
   230c0:	ldr	r1, [sp, #4]
   230c4:	strb	r1, [r0, #18]
   230c8:	ldr	r0, [fp, #-12]
   230cc:	ldr	r2, [sp, #16]
   230d0:	ldr	r2, [r2]
   230d4:	add	r0, r0, r2, lsl #2
   230d8:	ldr	r0, [r0]
   230dc:	ldr	r2, [sp, #12]
   230e0:	str	r0, [r2, #40]	; 0x28
   230e4:	ldr	r0, [sp, #16]
   230e8:	ldr	r2, [r0]
   230ec:	add	r2, r2, #1
   230f0:	str	r2, [r0]
   230f4:	movw	r0, #1
   230f8:	and	r0, r0, #1
   230fc:	strb	r0, [fp, #-1]
   23100:	ldrb	r0, [fp, #-1]
   23104:	and	r0, r0, #1
   23108:	mov	sp, fp
   2310c:	pop	{fp, pc}
   23110:	push	{fp, lr}
   23114:	mov	fp, sp
   23118:	sub	sp, sp, #24
   2311c:	str	r0, [fp, #-4]
   23120:	str	r1, [fp, #-8]
   23124:	str	r2, [sp, #12]
   23128:	movw	r0, #57480	; 0xe088
   2312c:	movt	r0, #8
   23130:	ldrb	r0, [r0, #36]	; 0x24
   23134:	and	r0, r0, #1
   23138:	cmp	r0, #0
   2313c:	bne	2320c <__assert_fail@plt+0x10654>
   23140:	movw	r0, #57480	; 0xe088
   23144:	movt	r0, #8
   23148:	add	r1, r0, #28
   2314c:	ldr	r2, [pc, #200]	; 2321c <__assert_fail@plt+0x10664>
   23150:	ldr	r3, [r0, #28]
   23154:	add	r2, r3, r2
   23158:	str	r2, [r0, #28]
   2315c:	movw	r2, #0
   23160:	str	r2, [r0, #32]
   23164:	mov	r0, r1
   23168:	bl	12810 <localtime@plt>
   2316c:	str	r0, [sp, #8]
   23170:	ldr	r0, [sp, #8]
   23174:	movw	r1, #0
   23178:	cmp	r0, r1
   2317c:	beq	231b8 <__assert_fail@plt+0x10600>
   23180:	ldr	r0, [sp, #8]
   23184:	ldr	r0, [r0]
   23188:	ldr	r1, [sp, #8]
   2318c:	ldr	r1, [r1, #4]
   23190:	movw	r2, #60	; 0x3c
   23194:	mul	r1, r1, r2
   23198:	add	r0, r0, r1
   2319c:	ldr	r1, [sp, #8]
   231a0:	ldr	r1, [r1, #8]
   231a4:	movw	r2, #3600	; 0xe10
   231a8:	mul	r1, r1, r2
   231ac:	add	r0, r0, r1
   231b0:	str	r0, [sp, #4]
   231b4:	b	231ec <__assert_fail@plt+0x10634>
   231b8:	ldr	r0, [pc, #92]	; 2321c <__assert_fail@plt+0x10664>
   231bc:	movw	r1, #57480	; 0xe088
   231c0:	movt	r1, #8
   231c4:	ldr	r1, [r1, #28]
   231c8:	movw	r2, #17671	; 0x4507
   231cc:	movt	r2, #49710	; 0xc22e
   231d0:	smmla	r2, r1, r2, r1
   231d4:	asr	r3, r2, #16
   231d8:	add	r2, r3, r2, lsr #31
   231dc:	movw	r3, #675	; 0x2a3
   231e0:	mul	r2, r2, r3
   231e4:	sub	r1, r1, r2, lsl #7
   231e8:	str	r1, [sp, #4]
   231ec:	ldr	r0, [sp, #4]
   231f0:	movw	r1, #57480	; 0xe088
   231f4:	movt	r1, #8
   231f8:	ldr	r2, [r1, #28]
   231fc:	sub	r0, r2, r0
   23200:	str	r0, [r1, #28]
   23204:	movw	r0, #1
   23208:	strb	r0, [r1, #36]	; 0x24
   2320c:	movw	r0, #1
   23210:	and	r0, r0, #1
   23214:	mov	sp, fp
   23218:	pop	{fp, pc}
   2321c:	andeq	r5, r1, r0, lsl #3
   23220:	push	{fp, lr}
   23224:	mov	fp, sp
   23228:	sub	sp, sp, #16
   2322c:	str	r0, [fp, #-4]
   23230:	str	r1, [sp, #8]
   23234:	str	r2, [sp, #4]
   23238:	ldr	r0, [fp, #-4]
   2323c:	bl	1b9fc <__assert_fail@plt+0x8e44>
   23240:	str	r0, [sp]
   23244:	ldr	r0, [sp]
   23248:	movw	r1, #1
   2324c:	strb	r1, [r0, #17]
   23250:	ldr	r0, [sp]
   23254:	strb	r1, [r0, #16]
   23258:	movw	r0, #57480	; 0xe088
   2325c:	movt	r0, #8
   23260:	movw	r1, #0
   23264:	strb	r1, [r0]
   23268:	ldr	r0, [sp]
   2326c:	strb	r1, [r0, #19]
   23270:	ldr	r0, [sp]
   23274:	strb	r1, [r0, #18]
   23278:	ldr	r0, [sp]
   2327c:	vmov.f32	s0, #112	; 0x3f800000  1.0
   23280:	vstr	s0, [r0, #28]
   23284:	movw	r0, #1
   23288:	and	r0, r0, #1
   2328c:	mov	sp, fp
   23290:	pop	{fp, pc}
   23294:	push	{fp, lr}
   23298:	mov	fp, sp
   2329c:	sub	sp, sp, #16
   232a0:	str	r0, [fp, #-4]
   232a4:	str	r1, [sp, #8]
   232a8:	str	r2, [sp, #4]
   232ac:	bl	22044 <__assert_fail@plt+0xf48c>
   232b0:	tst	r0, #1
   232b4:	beq	232d8 <__assert_fail@plt+0x10720>
   232b8:	movw	r0, #34682	; 0x877a
   232bc:	movt	r0, #7
   232c0:	bl	12864 <gettext@plt>
   232c4:	movw	r1, #0
   232c8:	str	r0, [sp]
   232cc:	mov	r0, r1
   232d0:	ldr	r2, [sp]
   232d4:	bl	12780 <error@plt>
   232d8:	ldr	r0, [fp, #-4]
   232dc:	ldr	r1, [sp, #8]
   232e0:	ldr	r2, [sp, #4]
   232e4:	bl	232f4 <__assert_fail@plt+0x1073c>
   232e8:	and	r0, r0, #1
   232ec:	mov	sp, fp
   232f0:	pop	{fp, pc}
   232f4:	push	{fp, lr}
   232f8:	mov	fp, sp
   232fc:	sub	sp, sp, #16
   23300:	str	r0, [fp, #-4]
   23304:	str	r1, [sp, #8]
   23308:	str	r2, [sp, #4]
   2330c:	movw	r0, #0
   23310:	movw	r1, #57480	; 0xe088
   23314:	movt	r1, #8
   23318:	strb	r0, [r1]
   2331c:	movw	r0, #1
   23320:	strb	r0, [r1, #1]
   23324:	ldr	r0, [fp, #-4]
   23328:	ldr	r1, [sp, #8]
   2332c:	ldr	r2, [sp, #4]
   23330:	bl	25f6c <__assert_fail@plt+0x133b4>
   23334:	and	r0, r0, #1
   23338:	mov	sp, fp
   2333c:	pop	{fp, pc}
   23340:	push	{fp, lr}
   23344:	mov	fp, sp
   23348:	sub	sp, sp, #16
   2334c:	str	r0, [fp, #-4]
   23350:	str	r1, [sp, #8]
   23354:	str	r2, [sp, #4]
   23358:	ldr	r0, [fp, #-4]
   2335c:	bl	1b9fc <__assert_fail@plt+0x8e44>
   23360:	vldr	s0, [pc, #24]	; 23380 <__assert_fail@plt+0x107c8>
   23364:	str	r0, [sp]
   23368:	ldr	r0, [sp]
   2336c:	vstr	s0, [r0, #28]
   23370:	movw	r0, #1
   23374:	and	r0, r0, #1
   23378:	mov	sp, fp
   2337c:	pop	{fp, pc}
   23380:	stccc	7, cr13, [r3], #-40	; 0xffffffd8
   23384:	push	{fp, lr}
   23388:	mov	fp, sp
   2338c:	sub	sp, sp, #16
   23390:	str	r0, [fp, #-4]
   23394:	str	r1, [sp, #8]
   23398:	str	r2, [sp, #4]
   2339c:	ldr	r1, [fp, #-4]
   233a0:	ldr	r2, [sp, #8]
   233a4:	ldr	r3, [sp, #4]
   233a8:	movw	r0, #34796	; 0x87ec
   233ac:	movt	r0, #7
   233b0:	bl	26050 <__assert_fail@plt+0x13498>
   233b4:	and	r0, r0, #1
   233b8:	mov	sp, fp
   233bc:	pop	{fp, pc}
   233c0:	push	{fp, lr}
   233c4:	mov	fp, sp
   233c8:	sub	sp, sp, #16
   233cc:	str	r0, [fp, #-4]
   233d0:	str	r1, [sp, #8]
   233d4:	str	r2, [sp, #4]
   233d8:	ldr	r0, [fp, #-4]
   233dc:	bl	1b9fc <__assert_fail@plt+0x8e44>
   233e0:	str	r0, [sp]
   233e4:	ldr	r0, [sp]
   233e8:	movw	r1, #0
   233ec:	strb	r1, [r0, #19]
   233f0:	ldr	r0, [sp]
   233f4:	strb	r1, [r0, #18]
   233f8:	ldr	r0, [sp]
   233fc:	strb	r1, [r0, #17]
   23400:	ldr	r0, [sp]
   23404:	strb	r1, [r0, #16]
   23408:	ldr	r0, [sp]
   2340c:	ldr	r0, [r0]
   23410:	movw	r1, #24952	; 0x6178
   23414:	movt	r1, #1
   23418:	cmp	r0, r1
   2341c:	bne	23430 <__assert_fail@plt+0x10878>
   23420:	vldr	s0, [pc, #40]	; 23450 <__assert_fail@plt+0x10898>
   23424:	ldr	r0, [sp]
   23428:	vstr	s0, [r0, #28]
   2342c:	b	2343c <__assert_fail@plt+0x10884>
   23430:	vldr	s0, [pc, #20]	; 2344c <__assert_fail@plt+0x10894>
   23434:	ldr	r0, [sp]
   23438:	vstr	s0, [r0, #28]
   2343c:	movw	r0, #1
   23440:	and	r0, r0, #1
   23444:	mov	sp, fp
   23448:	pop	{fp, pc}
   2344c:	svccc	0x00666666
   23450:	cdpcc	12, 4, cr12, cr12, cr13, {6}
   23454:	push	{fp, lr}
   23458:	mov	fp, sp
   2345c:	sub	sp, sp, #16
   23460:	str	r0, [fp, #-4]
   23464:	str	r1, [sp, #8]
   23468:	str	r2, [sp, #4]
   2346c:	ldr	r1, [fp, #-4]
   23470:	ldr	r2, [sp, #8]
   23474:	ldr	r3, [sp, #4]
   23478:	movw	r0, #35650	; 0x8b42
   2347c:	movt	r0, #7
   23480:	bl	26050 <__assert_fail@plt+0x13498>
   23484:	and	r0, r0, #1
   23488:	mov	sp, fp
   2348c:	pop	{fp, pc}
   23490:	push	{fp, lr}
   23494:	mov	fp, sp
   23498:	sub	sp, sp, #24
   2349c:	str	r0, [fp, #-8]
   234a0:	str	r1, [sp, #12]
   234a4:	str	r2, [sp, #8]
   234a8:	ldr	r0, [sp, #12]
   234ac:	ldr	r1, [sp, #8]
   234b0:	add	r2, sp, #4
   234b4:	bl	25ae8 <__assert_fail@plt+0x12f30>
   234b8:	tst	r0, #1
   234bc:	beq	234e0 <__assert_fail@plt+0x10928>
   234c0:	ldr	r0, [sp, #4]
   234c4:	movw	r1, #57480	; 0xe088
   234c8:	movt	r1, #8
   234cc:	str	r0, [r1, #76]	; 0x4c
   234d0:	movw	r0, #1
   234d4:	and	r0, r0, #1
   234d8:	strb	r0, [fp, #-1]
   234dc:	b	234ec <__assert_fail@plt+0x10934>
   234e0:	movw	r0, #0
   234e4:	and	r0, r0, #1
   234e8:	strb	r0, [fp, #-1]
   234ec:	ldrb	r0, [fp, #-1]
   234f0:	and	r0, r0, #1
   234f4:	mov	sp, fp
   234f8:	pop	{fp, pc}
   234fc:	push	{fp, lr}
   23500:	mov	fp, sp
   23504:	sub	sp, sp, #24
   23508:	str	r0, [fp, #-8]
   2350c:	str	r1, [sp, #12]
   23510:	str	r2, [sp, #8]
   23514:	ldr	r0, [sp, #12]
   23518:	ldr	r1, [sp, #8]
   2351c:	add	r2, sp, #4
   23520:	bl	25ae8 <__assert_fail@plt+0x12f30>
   23524:	tst	r0, #1
   23528:	beq	23568 <__assert_fail@plt+0x109b0>
   2352c:	ldr	r0, [fp, #-8]
   23530:	ldr	r1, [sp, #4]
   23534:	bl	269f8 <__assert_fail@plt+0x13e40>
   23538:	tst	r0, #1
   2353c:	beq	23550 <__assert_fail@plt+0x10998>
   23540:	movw	r0, #1
   23544:	and	r0, r0, #1
   23548:	strb	r0, [fp, #-1]
   2354c:	b	23574 <__assert_fail@plt+0x109bc>
   23550:	ldr	r0, [sp, #8]
   23554:	ldr	r1, [r0]
   23558:	mvn	r2, #0
   2355c:	add	r1, r1, r2
   23560:	str	r1, [r0]
   23564:	b	23568 <__assert_fail@plt+0x109b0>
   23568:	movw	r0, #0
   2356c:	and	r0, r0, #1
   23570:	strb	r0, [fp, #-1]
   23574:	ldrb	r0, [fp, #-1]
   23578:	and	r0, r0, #1
   2357c:	mov	sp, fp
   23580:	pop	{fp, pc}
   23584:	push	{fp, lr}
   23588:	mov	fp, sp
   2358c:	sub	sp, sp, #16
   23590:	str	r0, [fp, #-4]
   23594:	str	r1, [sp, #8]
   23598:	str	r2, [sp, #4]
   2359c:	movw	r0, #1
   235a0:	bl	21944 <__assert_fail@plt+0xed8c>
   235a4:	ldr	r0, [fp, #-4]
   235a8:	ldr	r1, [sp, #8]
   235ac:	ldr	r2, [sp, #4]
   235b0:	bl	25f6c <__assert_fail@plt+0x133b4>
   235b4:	and	r0, r0, #1
   235b8:	mov	sp, fp
   235bc:	pop	{fp, pc}
   235c0:	push	{fp, lr}
   235c4:	mov	fp, sp
   235c8:	sub	sp, sp, #24
   235cc:	str	r0, [fp, #-8]
   235d0:	str	r1, [sp, #12]
   235d4:	str	r2, [sp, #8]
   235d8:	ldr	r0, [sp, #12]
   235dc:	ldr	r1, [sp, #8]
   235e0:	mov	r2, sp
   235e4:	bl	25ae8 <__assert_fail@plt+0x12f30>
   235e8:	tst	r0, #1
   235ec:	beq	23654 <__assert_fail@plt+0x10a9c>
   235f0:	ldr	r0, [fp, #-8]
   235f4:	ldr	r1, [sp]
   235f8:	bl	1b994 <__assert_fail@plt+0x8ddc>
   235fc:	str	r0, [sp, #4]
   23600:	ldr	r0, [sp]
   23604:	ldr	r1, [sp, #4]
   23608:	add	r1, r1, #40	; 0x28
   2360c:	bl	26a78 <__assert_fail@plt+0x13ec0>
   23610:	ldr	r0, [sp, #4]
   23614:	movw	r1, #1
   23618:	strb	r1, [r0, #17]
   2361c:	ldr	r0, [sp, #4]
   23620:	strb	r1, [r0, #16]
   23624:	ldr	r0, [sp, #4]
   23628:	movw	r1, #0
   2362c:	strb	r1, [r0, #19]
   23630:	ldr	r0, [sp, #4]
   23634:	strb	r1, [r0, #18]
   23638:	ldr	r0, [sp, #4]
   2363c:	vmov.f32	s0, #112	; 0x3f800000  1.0
   23640:	vstr	s0, [r0, #28]
   23644:	movw	r0, #1
   23648:	and	r0, r0, #1
   2364c:	strb	r0, [fp, #-1]
   23650:	b	23660 <__assert_fail@plt+0x10aa8>
   23654:	movw	r0, #0
   23658:	and	r0, r0, #1
   2365c:	strb	r0, [fp, #-1]
   23660:	ldrb	r0, [fp, #-1]
   23664:	and	r0, r0, #1
   23668:	mov	sp, fp
   2366c:	pop	{fp, pc}
   23670:	push	{fp, lr}
   23674:	mov	fp, sp
   23678:	sub	sp, sp, #24
   2367c:	str	r0, [fp, #-8]
   23680:	str	r1, [sp, #12]
   23684:	str	r2, [sp, #8]
   23688:	ldr	r0, [sp, #12]
   2368c:	ldr	r1, [sp, #8]
   23690:	add	r2, sp, #4
   23694:	bl	25ae8 <__assert_fail@plt+0x12f30>
   23698:	tst	r0, #1
   2369c:	beq	236dc <__assert_fail@plt+0x10b24>
   236a0:	ldr	r0, [fp, #-8]
   236a4:	ldr	r1, [sp, #4]
   236a8:	bl	26c24 <__assert_fail@plt+0x1406c>
   236ac:	tst	r0, #1
   236b0:	beq	236c4 <__assert_fail@plt+0x10b0c>
   236b4:	movw	r0, #1
   236b8:	and	r0, r0, #1
   236bc:	strb	r0, [fp, #-1]
   236c0:	b	236e8 <__assert_fail@plt+0x10b30>
   236c4:	ldr	r0, [sp, #8]
   236c8:	ldr	r1, [r0]
   236cc:	mvn	r2, #0
   236d0:	add	r1, r1, r2
   236d4:	str	r1, [r0]
   236d8:	b	236dc <__assert_fail@plt+0x10b24>
   236dc:	movw	r0, #0
   236e0:	and	r0, r0, #1
   236e4:	strb	r0, [fp, #-1]
   236e8:	ldrb	r0, [fp, #-1]
   236ec:	and	r0, r0, #1
   236f0:	mov	sp, fp
   236f4:	pop	{fp, pc}
   236f8:	push	{fp, lr}
   236fc:	mov	fp, sp
   23700:	sub	sp, sp, #48	; 0x30
   23704:	str	r0, [fp, #-8]
   23708:	str	r1, [fp, #-12]
   2370c:	str	r2, [fp, #-16]
   23710:	ldr	r0, [fp, #-16]
   23714:	ldr	r0, [r0]
   23718:	str	r0, [sp, #20]
   2371c:	ldr	r0, [fp, #-12]
   23720:	ldr	r1, [fp, #-16]
   23724:	sub	r2, fp, #20
   23728:	bl	25ae8 <__assert_fail@plt+0x12f30>
   2372c:	tst	r0, #1
   23730:	beq	23794 <__assert_fail@plt+0x10bdc>
   23734:	ldr	r0, [fp, #-12]
   23738:	ldr	r1, [fp, #-16]
   2373c:	add	r2, sp, #24
   23740:	bl	25d74 <__assert_fail@plt+0x131bc>
   23744:	tst	r0, #1
   23748:	beq	23790 <__assert_fail@plt+0x10bd8>
   2374c:	ldr	r0, [fp, #-20]	; 0xffffffec
   23750:	mov	r1, sp
   23754:	bl	26a78 <__assert_fail@plt+0x13ec0>
   23758:	ldr	r0, [fp, #-16]
   2375c:	ldr	r0, [r0]
   23760:	str	r0, [sp, #20]
   23764:	ldr	r1, [fp, #-8]
   23768:	ldr	r2, [sp, #24]
   2376c:	mov	r0, sp
   23770:	bl	1e610 <__assert_fail@plt+0xba58>
   23774:	tst	r0, #1
   23778:	beq	2378c <__assert_fail@plt+0x10bd4>
   2377c:	movw	r0, #1
   23780:	and	r0, r0, #1
   23784:	strb	r0, [fp, #-1]
   23788:	b	237ac <__assert_fail@plt+0x10bf4>
   2378c:	b	23790 <__assert_fail@plt+0x10bd8>
   23790:	b	23794 <__assert_fail@plt+0x10bdc>
   23794:	ldr	r0, [sp, #20]
   23798:	ldr	r1, [fp, #-16]
   2379c:	str	r0, [r1]
   237a0:	movw	r0, #0
   237a4:	and	r0, r0, #1
   237a8:	strb	r0, [fp, #-1]
   237ac:	ldrb	r0, [fp, #-1]
   237b0:	and	r0, r0, #1
   237b4:	mov	sp, fp
   237b8:	pop	{fp, pc}
   237bc:	push	{fp, lr}
   237c0:	mov	fp, sp
   237c4:	sub	sp, sp, #24
   237c8:	str	r0, [fp, #-8]
   237cc:	str	r1, [sp, #12]
   237d0:	str	r2, [sp, #8]
   237d4:	ldr	r0, [sp, #12]
   237d8:	ldr	r1, [sp, #8]
   237dc:	add	r2, sp, #4
   237e0:	bl	25ae8 <__assert_fail@plt+0x12f30>
   237e4:	tst	r0, #1
   237e8:	beq	23890 <__assert_fail@plt+0x10cd8>
   237ec:	movw	r0, #57480	; 0xe088
   237f0:	movt	r0, #8
   237f4:	ldrh	r0, [r0, #68]	; 0x44
   237f8:	cmp	r0, #2
   237fc:	blt	23810 <__assert_fail@plt+0x10c58>
   23800:	ldr	r0, [sp, #4]
   23804:	bl	214ac <__assert_fail@plt+0xe8f4>
   23808:	tst	r0, #1
   2380c:	beq	2384c <__assert_fail@plt+0x10c94>
   23810:	ldr	r0, [fp, #-8]
   23814:	ldr	r1, [sp, #4]
   23818:	bl	1b994 <__assert_fail@plt+0x8ddc>
   2381c:	str	r0, [sp]
   23820:	ldr	r0, [sp, #4]
   23824:	ldr	r1, [sp]
   23828:	str	r0, [r1, #40]	; 0x28
   2382c:	ldr	r0, [sp, #4]
   23830:	bl	26cbc <__assert_fail@plt+0x14104>
   23834:	ldr	r0, [sp]
   23838:	vstr	s0, [r0, #28]
   2383c:	movw	r0, #1
   23840:	and	r0, r0, #1
   23844:	strb	r0, [fp, #-1]
   23848:	b	2389c <__assert_fail@plt+0x10ce4>
   2384c:	movw	r0, #57480	; 0xe088
   23850:	movt	r0, #8
   23854:	ldr	r0, [r0, #44]	; 0x2c
   23858:	and	r0, r0, #8
   2385c:	cmp	r0, #0
   23860:	beq	23880 <__assert_fail@plt+0x10cc8>
   23864:	movw	r0, #55080	; 0xd728
   23868:	movt	r0, #8
   2386c:	ldr	r0, [r0]
   23870:	ldr	r2, [sp, #4]
   23874:	movw	r1, #35698	; 0x8b72
   23878:	movt	r1, #7
   2387c:	bl	128c4 <fprintf@plt>
   23880:	bl	26d4c <__assert_fail@plt+0x14194>
   23884:	and	r0, r0, #1
   23888:	strb	r0, [fp, #-1]
   2388c:	b	2389c <__assert_fail@plt+0x10ce4>
   23890:	movw	r0, #0
   23894:	and	r0, r0, #1
   23898:	strb	r0, [fp, #-1]
   2389c:	ldrb	r0, [fp, #-1]
   238a0:	and	r0, r0, #1
   238a4:	mov	sp, fp
   238a8:	pop	{fp, pc}
   238ac:	nop	{0}
   238b0:	push	{fp, lr}
   238b4:	mov	fp, sp
   238b8:	sub	sp, sp, #24
   238bc:	str	r0, [fp, #-8]
   238c0:	str	r1, [sp, #12]
   238c4:	str	r2, [sp, #8]
   238c8:	ldr	r0, [sp, #12]
   238cc:	ldr	r1, [sp, #8]
   238d0:	ldr	r2, [fp, #-8]
   238d4:	bl	26db8 <__assert_fail@plt+0x14200>
   238d8:	str	r0, [sp, #4]
   238dc:	ldr	r0, [sp, #4]
   238e0:	movw	r1, #0
   238e4:	cmp	r0, r1
   238e8:	beq	2392c <__assert_fail@plt+0x10d74>
   238ec:	ldr	r0, [sp, #4]
   238f0:	ldr	r1, [r0, #48]	; 0x30
   238f4:	ldr	r0, [r0, #52]	; 0x34
   238f8:	add	r2, pc, #96	; 0x60
   238fc:	add	r3, r2, #8
   23900:	subs	r1, r1, #100	; 0x64
   23904:	sbcs	r0, r0, #0
   23908:	movcc	r2, r3
   2390c:	vldr	d16, [r2]
   23910:	vcvt.f32.f64	s0, d16
   23914:	ldr	r2, [sp, #4]
   23918:	vstr	s0, [r2, #28]
   2391c:	movw	r2, #1
   23920:	and	r2, r2, #1
   23924:	strb	r2, [fp, #-1]
   23928:	b	2394c <__assert_fail@plt+0x10d94>
   2392c:	ldr	r0, [sp, #8]
   23930:	ldr	r1, [r0]
   23934:	mvn	r2, #0
   23938:	add	r1, r1, r2
   2393c:	str	r1, [r0]
   23940:	movw	r0, #0
   23944:	and	r0, r0, #1
   23948:	strb	r0, [fp, #-1]
   2394c:	ldrb	r0, [fp, #-1]
   23950:	and	r0, r0, #1
   23954:	mov	sp, fp
   23958:	pop	{fp, pc}
   2395c:	nop	{0}
   23960:	ldmibls	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
   23964:	svccc	0x00c99999
   23968:	bvc	ff875828 <stdout@@GLIBC_2.4+0xff7e80f4>
   2396c:	svccc	0x00efae14
   23970:	push	{fp, lr}
   23974:	mov	fp, sp
   23978:	sub	sp, sp, #72	; 0x48
   2397c:	str	r0, [fp, #-8]
   23980:	str	r1, [fp, #-12]
   23984:	str	r2, [fp, #-16]
   23988:	ldr	r0, [fp, #-16]
   2398c:	ldr	r0, [r0]
   23990:	str	r0, [fp, #-24]	; 0xffffffe8
   23994:	ldr	r0, [fp, #-12]
   23998:	ldr	r1, [fp, #-16]
   2399c:	sub	r2, fp, #20
   239a0:	bl	25ae8 <__assert_fail@plt+0x12f30>
   239a4:	tst	r0, #1
   239a8:	beq	23b88 <__assert_fail@plt+0x10fd0>
   239ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   239b0:	bl	12ba0 <getgrnam@plt>
   239b4:	str	r0, [sp, #36]	; 0x24
   239b8:	bl	1245c <endgrent@plt>
   239bc:	ldr	r0, [sp, #36]	; 0x24
   239c0:	movw	r1, #0
   239c4:	cmp	r0, r1
   239c8:	beq	239dc <__assert_fail@plt+0x10e24>
   239cc:	ldr	r0, [sp, #36]	; 0x24
   239d0:	ldr	r0, [r0, #8]
   239d4:	str	r0, [fp, #-28]	; 0xffffffe4
   239d8:	b	23b2c <__assert_fail@plt+0x10f74>
   239dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   239e0:	movw	r1, #35758	; 0x8bae
   239e4:	movt	r1, #7
   239e8:	bl	12bac <strspn@plt>
   239ec:	str	r0, [sp, #32]
   239f0:	ldr	r0, [sp, #32]
   239f4:	cmp	r0, #0
   239f8:	beq	23aac <__assert_fail@plt+0x10ef4>
   239fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   23a00:	ldr	r1, [sp, #32]
   23a04:	add	r0, r0, r1
   23a08:	ldrb	r0, [r0]
   23a0c:	cmp	r0, #0
   23a10:	bne	23a30 <__assert_fail@plt+0x10e78>
   23a14:	ldr	r0, [fp, #-20]	; 0xffffffec
   23a18:	movw	r1, #57480	; 0xe088
   23a1c:	movt	r1, #8
   23a20:	ldr	r1, [r1, #72]	; 0x48
   23a24:	bl	2b4e8 <__assert_fail@plt+0x18930>
   23a28:	str	r0, [fp, #-28]	; 0xffffffe4
   23a2c:	b	23aa8 <__assert_fail@plt+0x10ef0>
   23a30:	movw	r0, #35769	; 0x8bb9
   23a34:	movt	r0, #7
   23a38:	bl	12864 <gettext@plt>
   23a3c:	movw	r1, #57480	; 0xe088
   23a40:	movt	r1, #8
   23a44:	ldr	r1, [r1, #72]	; 0x48
   23a48:	ldr	r2, [fp, #-20]	; 0xffffffec
   23a4c:	movw	r3, #0
   23a50:	str	r0, [sp, #28]
   23a54:	mov	r0, r3
   23a58:	bl	487d0 <__assert_fail@plt+0x35c18>
   23a5c:	movw	r1, #57480	; 0xe088
   23a60:	movt	r1, #8
   23a64:	ldr	r1, [r1, #72]	; 0x48
   23a68:	ldr	r2, [fp, #-20]	; 0xffffffec
   23a6c:	ldr	r3, [sp, #32]
   23a70:	add	r2, r2, r3
   23a74:	movw	r3, #1
   23a78:	str	r0, [sp, #24]
   23a7c:	mov	r0, r3
   23a80:	bl	487d0 <__assert_fail@plt+0x35c18>
   23a84:	movw	r1, #1
   23a88:	str	r0, [sp, #20]
   23a8c:	mov	r0, r1
   23a90:	movw	r1, #0
   23a94:	ldr	r2, [sp, #28]
   23a98:	ldr	r3, [sp, #24]
   23a9c:	ldr	ip, [sp, #20]
   23aa0:	str	ip, [sp]
   23aa4:	bl	12780 <error@plt>
   23aa8:	b	23b28 <__assert_fail@plt+0x10f70>
   23aac:	ldr	r0, [fp, #-20]	; 0xffffffec
   23ab0:	ldrsb	r0, [r0]
   23ab4:	cmp	r0, #0
   23ab8:	beq	23b04 <__assert_fail@plt+0x10f4c>
   23abc:	movw	r0, #35894	; 0x8c36
   23ac0:	movt	r0, #7
   23ac4:	bl	12864 <gettext@plt>
   23ac8:	movw	r1, #57480	; 0xe088
   23acc:	movt	r1, #8
   23ad0:	ldr	r1, [r1, #72]	; 0x48
   23ad4:	ldr	r2, [fp, #-20]	; 0xffffffec
   23ad8:	movw	r3, #0
   23adc:	str	r0, [sp, #16]
   23ae0:	mov	r0, r3
   23ae4:	bl	487d0 <__assert_fail@plt+0x35c18>
   23ae8:	movw	r1, #1
   23aec:	str	r0, [sp, #12]
   23af0:	mov	r0, r1
   23af4:	movw	r1, #0
   23af8:	ldr	r2, [sp, #16]
   23afc:	ldr	r3, [sp, #12]
   23b00:	bl	12780 <error@plt>
   23b04:	movw	r0, #35934	; 0x8c5e
   23b08:	movt	r0, #7
   23b0c:	bl	12864 <gettext@plt>
   23b10:	movw	r1, #1
   23b14:	str	r0, [sp, #8]
   23b18:	mov	r0, r1
   23b1c:	movw	r1, #0
   23b20:	ldr	r2, [sp, #8]
   23b24:	bl	12780 <error@plt>
   23b28:	b	23b2c <__assert_fail@plt+0x10f74>
   23b2c:	ldr	r0, [fp, #-8]
   23b30:	ldr	r1, [fp, #-20]	; 0xffffffec
   23b34:	bl	1b994 <__assert_fail@plt+0x8ddc>
   23b38:	str	r0, [fp, #-32]	; 0xffffffe0
   23b3c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   23b40:	ldr	r1, [fp, #-32]	; 0xffffffe0
   23b44:	str	r0, [r1, #40]	; 0x28
   23b48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23b4c:	ldr	r1, [r0, #48]	; 0x30
   23b50:	ldr	r0, [r0, #52]	; 0x34
   23b54:	add	r2, pc, #76	; 0x4c
   23b58:	add	r3, r2, #8
   23b5c:	subs	r1, r1, #100	; 0x64
   23b60:	sbcs	r0, r0, #0
   23b64:	movcc	r2, r3
   23b68:	vldr	d16, [r2]
   23b6c:	vcvt.f32.f64	s0, d16
   23b70:	ldr	r2, [fp, #-32]	; 0xffffffe0
   23b74:	vstr	s0, [r2, #28]
   23b78:	movw	r2, #1
   23b7c:	and	r2, r2, #1
   23b80:	strb	r2, [fp, #-1]
   23b84:	b	23b94 <__assert_fail@plt+0x10fdc>
   23b88:	movw	r0, #0
   23b8c:	and	r0, r0, #1
   23b90:	strb	r0, [fp, #-1]
   23b94:	ldrb	r0, [fp, #-1]
   23b98:	and	r0, r0, #1
   23b9c:	mov	sp, fp
   23ba0:	pop	{fp, pc}
   23ba4:	nop	{0}
   23ba8:	ldmibls	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
   23bac:	svccc	0x00c99999
   23bb0:	bvc	ff875a70 <stdout@@GLIBC_2.4+0xff7e833c>
   23bb4:	svccc	0x00efae14
   23bb8:	push	{fp, lr}
   23bbc:	mov	fp, sp
   23bc0:	sub	sp, sp, #16
   23bc4:	str	r0, [fp, #-4]
   23bc8:	str	r1, [sp, #8]
   23bcc:	str	r2, [sp, #4]
   23bd0:	movw	r0, #57480	; 0xe088
   23bd4:	movt	r0, #8
   23bd8:	movw	r1, #1
   23bdc:	strb	r1, [r0, #14]
   23be0:	ldr	r0, [fp, #-4]
   23be4:	ldr	r1, [sp, #8]
   23be8:	ldr	r2, [sp, #4]
   23bec:	bl	25f6c <__assert_fail@plt+0x133b4>
   23bf0:	and	r0, r0, #1
   23bf4:	mov	sp, fp
   23bf8:	pop	{fp, pc}
   23bfc:	push	{fp, lr}
   23c00:	mov	fp, sp
   23c04:	sub	sp, sp, #24
   23c08:	str	r0, [fp, #-8]
   23c0c:	str	r1, [sp, #12]
   23c10:	str	r2, [sp, #8]
   23c14:	ldr	r0, [sp, #12]
   23c18:	ldr	r1, [sp, #8]
   23c1c:	add	r2, sp, #4
   23c20:	bl	25ae8 <__assert_fail@plt+0x12f30>
   23c24:	tst	r0, #1
   23c28:	beq	23c74 <__assert_fail@plt+0x110bc>
   23c2c:	ldr	r0, [fp, #-8]
   23c30:	ldr	r1, [sp, #4]
   23c34:	bl	1b994 <__assert_fail@plt+0x8ddc>
   23c38:	str	r0, [sp]
   23c3c:	ldr	r0, [sp, #4]
   23c40:	ldr	r1, [sp]
   23c44:	str	r0, [r1, #40]	; 0x28
   23c48:	ldr	r0, [sp, #4]
   23c4c:	movw	r1, #0
   23c50:	bl	27090 <__assert_fail@plt+0x144d8>
   23c54:	vldr	s2, [pc, #52]	; 23c90 <__assert_fail@plt+0x110d8>
   23c58:	vmul.f32	s0, s2, s0
   23c5c:	ldr	r0, [sp]
   23c60:	vstr	s0, [r0, #28]
   23c64:	movw	r0, #1
   23c68:	and	r0, r0, #1
   23c6c:	strb	r0, [fp, #-1]
   23c70:	b	23c80 <__assert_fail@plt+0x110c8>
   23c74:	movw	r0, #0
   23c78:	and	r0, r0, #1
   23c7c:	strb	r0, [fp, #-1]
   23c80:	ldrb	r0, [fp, #-1]
   23c84:	and	r0, r0, #1
   23c88:	mov	sp, fp
   23c8c:	pop	{fp, pc}
   23c90:	stclcc	12, cr12, [ip, #820]	; 0x334
   23c94:	push	{fp, lr}
   23c98:	mov	fp, sp
   23c9c:	sub	sp, sp, #32
   23ca0:	str	r0, [fp, #-8]
   23ca4:	str	r1, [fp, #-12]
   23ca8:	str	r2, [sp, #16]
   23cac:	bl	27110 <__assert_fail@plt+0x14558>
   23cb0:	ldr	r1, [fp, #-12]
   23cb4:	ldr	r2, [sp, #16]
   23cb8:	str	r0, [sp, #4]
   23cbc:	mov	r0, r1
   23cc0:	mov	r1, r2
   23cc4:	add	r2, sp, #12
   23cc8:	bl	25ae8 <__assert_fail@plt+0x12f30>
   23ccc:	tst	r0, #1
   23cd0:	beq	23d4c <__assert_fail@plt+0x11194>
   23cd4:	ldr	r2, [sp, #12]
   23cd8:	movw	r0, #35994	; 0x8c9a
   23cdc:	movt	r0, #7
   23ce0:	movw	r1, #36001	; 0x8ca1
   23ce4:	movt	r1, #7
   23ce8:	bl	271e8 <__assert_fail@plt+0x14630>
   23cec:	tst	r0, #1
   23cf0:	beq	23d48 <__assert_fail@plt+0x11190>
   23cf4:	ldr	r0, [fp, #-8]
   23cf8:	ldr	r1, [sp, #12]
   23cfc:	bl	1b994 <__assert_fail@plt+0x8ddc>
   23d00:	str	r0, [sp, #8]
   23d04:	ldr	r0, [sp, #8]
   23d08:	movw	r1, #0
   23d0c:	strb	r1, [r0, #19]
   23d10:	ldr	r0, [sp, #8]
   23d14:	strb	r1, [r0, #18]
   23d18:	ldr	r0, [sp, #12]
   23d1c:	ldr	r1, [sp, #8]
   23d20:	str	r0, [r1, #40]	; 0x28
   23d24:	ldr	r0, [sp, #12]
   23d28:	movw	r1, #0
   23d2c:	bl	27090 <__assert_fail@plt+0x144d8>
   23d30:	ldr	r0, [sp, #8]
   23d34:	vstr	s0, [r0, #28]
   23d38:	movw	r0, #1
   23d3c:	and	r0, r0, #1
   23d40:	strb	r0, [fp, #-1]
   23d44:	b	23d58 <__assert_fail@plt+0x111a0>
   23d48:	b	23d4c <__assert_fail@plt+0x11194>
   23d4c:	movw	r0, #0
   23d50:	and	r0, r0, #1
   23d54:	strb	r0, [fp, #-1]
   23d58:	ldrb	r0, [fp, #-1]
   23d5c:	and	r0, r0, #1
   23d60:	mov	sp, fp
   23d64:	pop	{fp, pc}
   23d68:	push	{fp, lr}
   23d6c:	mov	fp, sp
   23d70:	sub	sp, sp, #24
   23d74:	str	r0, [fp, #-8]
   23d78:	str	r1, [sp, #12]
   23d7c:	str	r2, [sp, #8]
   23d80:	ldr	r0, [sp, #12]
   23d84:	ldr	r1, [sp, #8]
   23d88:	ldr	r2, [fp, #-8]
   23d8c:	bl	26db8 <__assert_fail@plt+0x14200>
   23d90:	str	r0, [sp, #4]
   23d94:	ldr	r0, [sp, #4]
   23d98:	movw	r1, #0
   23d9c:	cmp	r0, r1
   23da0:	beq	23de0 <__assert_fail@plt+0x11228>
   23da4:	vldr	s0, [pc, #100]	; 23e10 <__assert_fail@plt+0x11258>
   23da8:	ldr	r0, [sp, #4]
   23dac:	vstr	s0, [r0, #28]
   23db0:	ldr	r0, [sp, #4]
   23db4:	movw	r1, #1
   23db8:	strb	r1, [r0, #20]
   23dbc:	ldr	r0, [sp, #4]
   23dc0:	movw	r1, #0
   23dc4:	strb	r1, [r0, #18]
   23dc8:	ldr	r0, [sp, #4]
   23dcc:	strb	r1, [r0, #19]
   23dd0:	movw	r0, #1
   23dd4:	and	r0, r0, #1
   23dd8:	strb	r0, [fp, #-1]
   23ddc:	b	23e00 <__assert_fail@plt+0x11248>
   23de0:	ldr	r0, [sp, #8]
   23de4:	ldr	r1, [r0]
   23de8:	mvn	r2, #0
   23dec:	add	r1, r1, r2
   23df0:	str	r1, [r0]
   23df4:	movw	r0, #0
   23df8:	and	r0, r0, #1
   23dfc:	strb	r0, [fp, #-1]
   23e00:	ldrb	r0, [fp, #-1]
   23e04:	and	r0, r0, #1
   23e08:	mov	sp, fp
   23e0c:	pop	{fp, pc}
   23e10:	strcc	r3, [r6, #1981]	; 0x7bd
   23e14:	push	{fp, lr}
   23e18:	mov	fp, sp
   23e1c:	sub	sp, sp, #16
   23e20:	str	r0, [fp, #-4]
   23e24:	str	r1, [sp, #8]
   23e28:	str	r2, [sp, #4]
   23e2c:	ldr	r0, [fp, #-4]
   23e30:	ldr	r1, [sp, #8]
   23e34:	ldr	r2, [sp, #4]
   23e38:	movw	r3, #34030	; 0x84ee
   23e3c:	movt	r3, #7
   23e40:	movw	ip, #22372	; 0x5764
   23e44:	movt	ip, #1
   23e48:	str	ip, [sp]
   23e4c:	bl	272a8 <__assert_fail@plt+0x146f0>
   23e50:	and	r0, r0, #1
   23e54:	mov	sp, fp
   23e58:	pop	{fp, pc}
   23e5c:	push	{fp, lr}
   23e60:	mov	fp, sp
   23e64:	sub	sp, sp, #16
   23e68:	str	r0, [fp, #-4]
   23e6c:	str	r1, [sp, #8]
   23e70:	str	r2, [sp, #4]
   23e74:	ldr	r0, [sp, #8]
   23e78:	ldr	r1, [sp, #4]
   23e7c:	ldr	r2, [fp, #-4]
   23e80:	movw	r3, #57480	; 0xe088
   23e84:	movt	r3, #8
   23e88:	ldr	r3, [r3, #60]	; 0x3c
   23e8c:	orr	r3, r3, #4194304	; 0x400000
   23e90:	bl	27498 <__assert_fail@plt+0x148e0>
   23e94:	and	r0, r0, #1
   23e98:	mov	sp, fp
   23e9c:	pop	{fp, pc}
   23ea0:	push	{fp, lr}
   23ea4:	mov	fp, sp
   23ea8:	sub	sp, sp, #16
   23eac:	str	r0, [fp, #-4]
   23eb0:	str	r1, [sp, #8]
   23eb4:	str	r2, [sp, #4]
   23eb8:	ldr	r0, [fp, #-4]
   23ebc:	ldr	r1, [sp, #8]
   23ec0:	ldr	r2, [sp, #4]
   23ec4:	movw	r3, #36002	; 0x8ca2
   23ec8:	movt	r3, #7
   23ecc:	movw	ip, #22372	; 0x5764
   23ed0:	movt	ip, #1
   23ed4:	str	ip, [sp]
   23ed8:	bl	272a8 <__assert_fail@plt+0x146f0>
   23edc:	and	r0, r0, #1
   23ee0:	mov	sp, fp
   23ee4:	pop	{fp, pc}
   23ee8:	push	{fp, lr}
   23eec:	mov	fp, sp
   23ef0:	sub	sp, sp, #24
   23ef4:	str	r0, [fp, #-8]
   23ef8:	str	r1, [sp, #12]
   23efc:	str	r2, [sp, #8]
   23f00:	ldr	r0, [sp, #12]
   23f04:	ldr	r1, [sp, #8]
   23f08:	ldr	r2, [fp, #-8]
   23f0c:	bl	26db8 <__assert_fail@plt+0x14200>
   23f10:	str	r0, [sp, #4]
   23f14:	ldr	r0, [sp, #4]
   23f18:	movw	r1, #0
   23f1c:	cmp	r0, r1
   23f20:	beq	23fa4 <__assert_fail@plt+0x113ec>
   23f24:	ldr	r0, [sp, #4]
   23f28:	ldr	r1, [r0, #48]	; 0x30
   23f2c:	ldr	r0, [r0, #52]	; 0x34
   23f30:	eor	r1, r1, #1
   23f34:	orr	r0, r1, r0
   23f38:	cmp	r0, #0
   23f3c:	bne	23f54 <__assert_fail@plt+0x1139c>
   23f40:	b	23f44 <__assert_fail@plt+0x1138c>
   23f44:	vldr	s0, [pc, #144]	; 23fdc <__assert_fail@plt+0x11424>
   23f48:	ldr	r0, [sp, #4]
   23f4c:	vstr	s0, [r0, #28]
   23f50:	b	23f94 <__assert_fail@plt+0x113dc>
   23f54:	ldr	r0, [sp, #4]
   23f58:	ldr	r1, [r0, #48]	; 0x30
   23f5c:	ldr	r0, [r0, #52]	; 0x34
   23f60:	eor	r1, r1, #2
   23f64:	orr	r0, r1, r0
   23f68:	cmp	r0, #0
   23f6c:	bne	23f84 <__assert_fail@plt+0x113cc>
   23f70:	b	23f74 <__assert_fail@plt+0x113bc>
   23f74:	vldr	s0, [pc, #92]	; 23fd8 <__assert_fail@plt+0x11420>
   23f78:	ldr	r0, [sp, #4]
   23f7c:	vstr	s0, [r0, #28]
   23f80:	b	23f90 <__assert_fail@plt+0x113d8>
   23f84:	vldr	s0, [pc, #72]	; 23fd4 <__assert_fail@plt+0x1141c>
   23f88:	ldr	r0, [sp, #4]
   23f8c:	vstr	s0, [r0, #28]
   23f90:	b	23f94 <__assert_fail@plt+0x113dc>
   23f94:	movw	r0, #1
   23f98:	and	r0, r0, #1
   23f9c:	strb	r0, [fp, #-1]
   23fa0:	b	23fc4 <__assert_fail@plt+0x1140c>
   23fa4:	ldr	r0, [sp, #8]
   23fa8:	ldr	r1, [r0]
   23fac:	mvn	r2, #0
   23fb0:	add	r1, r1, r2
   23fb4:	str	r1, [r0]
   23fb8:	movw	r0, #0
   23fbc:	and	r0, r0, #1
   23fc0:	strb	r0, [fp, #-1]
   23fc4:	ldrb	r0, [fp, #-1]
   23fc8:	and	r0, r0, #1
   23fcc:	mov	sp, fp
   23fd0:	pop	{fp, pc}
   23fd4:	bcc	fe0e8998 <stdout@@GLIBC_2.4+0xfe05b264>
   23fd8:	stccc	7, cr13, [r3], #-40	; 0xffffffd8
   23fdc:	svccc	0x007d70a4
   23fe0:	push	{fp, lr}
   23fe4:	mov	fp, sp
   23fe8:	sub	sp, sp, #32
   23fec:	str	r0, [fp, #-8]
   23ff0:	str	r1, [fp, #-12]
   23ff4:	str	r2, [sp, #16]
   23ff8:	bl	27110 <__assert_fail@plt+0x14558>
   23ffc:	ldr	r1, [fp, #-12]
   24000:	ldr	r2, [sp, #16]
   24004:	str	r0, [sp, #4]
   24008:	mov	r0, r1
   2400c:	mov	r1, r2
   24010:	add	r2, sp, #12
   24014:	bl	25ae8 <__assert_fail@plt+0x12f30>
   24018:	tst	r0, #1
   2401c:	beq	24068 <__assert_fail@plt+0x114b0>
   24020:	ldr	r0, [fp, #-8]
   24024:	ldr	r1, [sp, #12]
   24028:	bl	1b994 <__assert_fail@plt+0x8ddc>
   2402c:	str	r0, [sp, #8]
   24030:	ldr	r0, [sp, #12]
   24034:	ldr	r1, [sp, #8]
   24038:	str	r0, [r1, #40]	; 0x28
   2403c:	ldr	r0, [sp, #12]
   24040:	movw	r1, #0
   24044:	bl	27090 <__assert_fail@plt+0x144d8>
   24048:	vldr	s2, [pc, #52]	; 24084 <__assert_fail@plt+0x114cc>
   2404c:	vmul.f32	s0, s2, s0
   24050:	ldr	r0, [sp, #8]
   24054:	vstr	s0, [r0, #28]
   24058:	movw	r0, #1
   2405c:	and	r0, r0, #1
   24060:	strb	r0, [fp, #-1]
   24064:	b	24074 <__assert_fail@plt+0x114bc>
   24068:	movw	r0, #0
   2406c:	and	r0, r0, #1
   24070:	strb	r0, [fp, #-1]
   24074:	ldrb	r0, [fp, #-1]
   24078:	and	r0, r0, #1
   2407c:	mov	sp, fp
   24080:	pop	{fp, pc}
   24084:	stclcc	12, cr12, [ip, #820]	; 0x334
   24088:	push	{fp, lr}
   2408c:	mov	fp, sp
   24090:	sub	sp, sp, #16
   24094:	str	r0, [fp, #-4]
   24098:	str	r1, [sp, #8]
   2409c:	str	r2, [sp, #4]
   240a0:	ldr	r0, [fp, #-4]
   240a4:	movw	r1, #0
   240a8:	bl	269f8 <__assert_fail@plt+0x13e40>
   240ac:	and	r0, r0, #1
   240b0:	mov	sp, fp
   240b4:	pop	{fp, pc}
   240b8:	push	{fp, lr}
   240bc:	mov	fp, sp
   240c0:	sub	sp, sp, #16
   240c4:	movw	r3, #57480	; 0xe088
   240c8:	movt	r3, #8
   240cc:	add	r3, r3, #4
   240d0:	str	r0, [fp, #-4]
   240d4:	str	r1, [sp, #8]
   240d8:	str	r2, [sp, #4]
   240dc:	ldr	r0, [fp, #-4]
   240e0:	ldr	r1, [sp, #8]
   240e4:	ldr	r2, [sp, #4]
   240e8:	bl	2761c <__assert_fail@plt+0x14a64>
   240ec:	and	r0, r0, #1
   240f0:	mov	sp, fp
   240f4:	pop	{fp, pc}
   240f8:	push	{fp, lr}
   240fc:	mov	fp, sp
   24100:	sub	sp, sp, #16
   24104:	movw	r3, #57480	; 0xe088
   24108:	movt	r3, #8
   2410c:	add	r3, r3, #8
   24110:	str	r0, [fp, #-4]
   24114:	str	r1, [sp, #8]
   24118:	str	r2, [sp, #4]
   2411c:	ldr	r0, [fp, #-4]
   24120:	ldr	r1, [sp, #8]
   24124:	ldr	r2, [sp, #4]
   24128:	bl	2761c <__assert_fail@plt+0x14a64>
   2412c:	and	r0, r0, #1
   24130:	mov	sp, fp
   24134:	pop	{fp, pc}
   24138:	push	{fp, lr}
   2413c:	mov	fp, sp
   24140:	sub	sp, sp, #16
   24144:	str	r0, [fp, #-4]
   24148:	str	r1, [sp, #8]
   2414c:	str	r2, [sp, #4]
   24150:	ldr	r0, [fp, #-4]
   24154:	ldr	r1, [sp, #8]
   24158:	ldr	r2, [sp, #4]
   2415c:	movw	r3, #3
   24160:	bl	259c0 <__assert_fail@plt+0x12e08>
   24164:	and	r0, r0, #1
   24168:	mov	sp, fp
   2416c:	pop	{fp, pc}
   24170:	push	{fp, lr}
   24174:	mov	fp, sp
   24178:	sub	sp, sp, #16
   2417c:	str	r0, [fp, #-4]
   24180:	str	r1, [sp, #8]
   24184:	str	r2, [sp, #4]
   24188:	movw	r0, #57480	; 0xe088
   2418c:	movt	r0, #8
   24190:	movw	r1, #1
   24194:	strb	r1, [r0, #13]
   24198:	ldr	r0, [fp, #-4]
   2419c:	ldr	r1, [sp, #8]
   241a0:	ldr	r2, [sp, #4]
   241a4:	bl	25f6c <__assert_fail@plt+0x133b4>
   241a8:	and	r0, r0, #1
   241ac:	mov	sp, fp
   241b0:	pop	{fp, pc}
   241b4:	push	{fp, lr}
   241b8:	mov	fp, sp
   241bc:	sub	sp, sp, #32
   241c0:	str	r0, [fp, #-8]
   241c4:	str	r1, [fp, #-12]
   241c8:	str	r2, [sp, #16]
   241cc:	ldr	r0, [sp, #16]
   241d0:	ldr	r0, [r0]
   241d4:	str	r0, [sp, #8]
   241d8:	ldr	r0, [fp, #-12]
   241dc:	ldr	r1, [sp, #16]
   241e0:	add	r2, sp, #12
   241e4:	bl	25ae8 <__assert_fail@plt+0x12f30>
   241e8:	tst	r0, #1
   241ec:	beq	24280 <__assert_fail@plt+0x116c8>
   241f0:	bl	27110 <__assert_fail@plt+0x14558>
   241f4:	ldr	r2, [sp, #12]
   241f8:	movw	r1, #36427	; 0x8e4b
   241fc:	movt	r1, #7
   24200:	str	r0, [sp]
   24204:	mov	r0, r1
   24208:	movw	r1, #36433	; 0x8e51
   2420c:	movt	r1, #7
   24210:	bl	271e8 <__assert_fail@plt+0x14630>
   24214:	tst	r0, #1
   24218:	beq	24270 <__assert_fail@plt+0x116b8>
   2421c:	ldr	r0, [fp, #-8]
   24220:	ldr	r1, [sp, #12]
   24224:	bl	1b994 <__assert_fail@plt+0x8ddc>
   24228:	str	r0, [sp, #4]
   2422c:	ldr	r0, [sp, #4]
   24230:	movw	r1, #0
   24234:	strb	r1, [r0, #19]
   24238:	ldr	r0, [sp, #4]
   2423c:	strb	r1, [r0, #18]
   24240:	ldr	r0, [sp, #12]
   24244:	ldr	r1, [sp, #4]
   24248:	str	r0, [r1, #40]	; 0x28
   2424c:	ldr	r0, [sp, #12]
   24250:	movw	r1, #0
   24254:	bl	27090 <__assert_fail@plt+0x144d8>
   24258:	ldr	r0, [sp, #4]
   2425c:	vstr	s0, [r0, #28]
   24260:	movw	r0, #1
   24264:	and	r0, r0, #1
   24268:	strb	r0, [fp, #-1]
   2426c:	b	2428c <__assert_fail@plt+0x116d4>
   24270:	ldr	r0, [sp, #8]
   24274:	ldr	r1, [sp, #16]
   24278:	str	r0, [r1]
   2427c:	b	24280 <__assert_fail@plt+0x116c8>
   24280:	movw	r0, #0
   24284:	and	r0, r0, #1
   24288:	strb	r0, [fp, #-1]
   2428c:	ldrb	r0, [fp, #-1]
   24290:	and	r0, r0, #1
   24294:	mov	sp, fp
   24298:	pop	{fp, pc}
   2429c:	push	{fp, lr}
   242a0:	mov	fp, sp
   242a4:	sub	sp, sp, #144	; 0x90
   242a8:	str	r0, [fp, #-8]
   242ac:	str	r1, [fp, #-12]
   242b0:	str	r2, [fp, #-16]
   242b4:	add	r0, sp, #16
   242b8:	bl	1bdbc <__assert_fail@plt+0x9204>
   242bc:	ldr	r0, [fp, #-12]
   242c0:	ldr	r1, [fp, #-16]
   242c4:	add	r2, sp, #16
   242c8:	add	r3, sp, #12
   242cc:	bl	25eb0 <__assert_fail@plt+0x132f8>
   242d0:	tst	r0, #1
   242d4:	beq	24350 <__assert_fail@plt+0x11798>
   242d8:	ldr	r0, [fp, #-8]
   242dc:	ldr	r1, [sp, #12]
   242e0:	bl	1b994 <__assert_fail@plt+0x8ddc>
   242e4:	str	r0, [fp, #-20]	; 0xffffffec
   242e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   242ec:	add	r1, sp, #4
   242f0:	add	r2, sp, #16
   242f4:	str	r0, [sp]
   242f8:	mov	r0, r1
   242fc:	mov	r1, r2
   24300:	bl	498c8 <__assert_fail@plt+0x36d10>
   24304:	ldr	r0, [sp, #4]
   24308:	ldr	r1, [sp]
   2430c:	str	r0, [r1, #48]	; 0x30
   24310:	ldr	r0, [sp, #8]
   24314:	str	r0, [r1, #52]	; 0x34
   24318:	ldr	r0, [fp, #-20]	; 0xffffffec
   2431c:	movw	r2, #3
   24320:	str	r2, [r0, #40]	; 0x28
   24324:	ldr	r0, [fp, #-20]	; 0xffffffec
   24328:	movw	r2, #0
   2432c:	str	r2, [r0, #44]	; 0x2c
   24330:	ldr	r0, [sp, #96]	; 0x60
   24334:	bl	227d8 <__assert_fail@plt+0xfc20>
   24338:	ldr	r0, [fp, #-20]	; 0xffffffec
   2433c:	vstr	s0, [r0, #28]
   24340:	movw	r0, #1
   24344:	and	r0, r0, #1
   24348:	strb	r0, [fp, #-1]
   2434c:	b	2435c <__assert_fail@plt+0x117a4>
   24350:	movw	r0, #0
   24354:	and	r0, r0, #1
   24358:	strb	r0, [fp, #-1]
   2435c:	ldrb	r0, [fp, #-1]
   24360:	and	r0, r0, #1
   24364:	mov	sp, fp
   24368:	pop	{fp, pc}
   2436c:	push	{fp, lr}
   24370:	mov	fp, sp
   24374:	sub	sp, sp, #16
   24378:	str	r0, [fp, #-4]
   2437c:	str	r1, [sp, #8]
   24380:	str	r2, [sp, #4]
   24384:	movw	r0, #57480	; 0xe088
   24388:	movt	r0, #8
   2438c:	movw	r1, #1
   24390:	strb	r1, [r0, #12]
   24394:	ldr	r0, [fp, #-4]
   24398:	ldr	r1, [sp, #8]
   2439c:	ldr	r2, [sp, #4]
   243a0:	bl	25f6c <__assert_fail@plt+0x133b4>
   243a4:	and	r0, r0, #1
   243a8:	mov	sp, fp
   243ac:	pop	{fp, pc}
   243b0:	push	{fp, lr}
   243b4:	mov	fp, sp
   243b8:	sub	sp, sp, #16
   243bc:	str	r0, [fp, #-4]
   243c0:	str	r1, [sp, #8]
   243c4:	str	r2, [sp, #4]
   243c8:	ldr	r0, [fp, #-4]
   243cc:	movw	r1, #0
   243d0:	bl	1b994 <__assert_fail@plt+0x8ddc>
   243d4:	vldr	s0, [pc, #24]	; 243f4 <__assert_fail@plt+0x1183c>
   243d8:	str	r0, [sp]
   243dc:	ldr	r0, [sp]
   243e0:	vstr	s0, [r0, #28]
   243e4:	movw	r0, #1
   243e8:	and	r0, r0, #1
   243ec:	mov	sp, fp
   243f0:	pop	{fp, pc}
   243f4:	ldmcc	r1, {r0, r1, r2, r4, r8, r9, sl, ip, sp, pc}^
   243f8:	push	{fp, lr}
   243fc:	mov	fp, sp
   24400:	sub	sp, sp, #16
   24404:	str	r0, [fp, #-4]
   24408:	str	r1, [sp, #8]
   2440c:	str	r2, [sp, #4]
   24410:	ldr	r0, [fp, #-4]
   24414:	bl	1b9fc <__assert_fail@plt+0x8e44>
   24418:	vldr	s0, [pc, #24]	; 24438 <__assert_fail@plt+0x11880>
   2441c:	str	r0, [sp]
   24420:	ldr	r0, [sp]
   24424:	vstr	s0, [r0, #28]
   24428:	movw	r0, #1
   2442c:	and	r0, r0, #1
   24430:	mov	sp, fp
   24434:	pop	{fp, pc}
   24438:	bcc	fe0e8dfc <stdout@@GLIBC_2.4+0xfe05b6c8>
   2443c:	push	{fp, lr}
   24440:	mov	fp, sp
   24444:	sub	sp, sp, #16
   24448:	str	r0, [fp, #-4]
   2444c:	str	r1, [sp, #8]
   24450:	str	r2, [sp, #4]
   24454:	movw	r0, #57480	; 0xe088
   24458:	movt	r0, #8
   2445c:	movw	r1, #0
   24460:	strb	r1, [r0, #14]
   24464:	ldr	r0, [fp, #-4]
   24468:	ldr	r1, [sp, #8]
   2446c:	ldr	r2, [sp, #4]
   24470:	bl	25f6c <__assert_fail@plt+0x133b4>
   24474:	and	r0, r0, #1
   24478:	mov	sp, fp
   2447c:	pop	{fp, pc}
   24480:	push	{fp, lr}
   24484:	mov	fp, sp
   24488:	sub	sp, sp, #16
   2448c:	str	r0, [fp, #-4]
   24490:	str	r1, [sp, #8]
   24494:	str	r2, [sp, #4]
   24498:	movw	r0, #57480	; 0xe088
   2449c:	movt	r0, #8
   244a0:	movw	r1, #0
   244a4:	strb	r1, [r0, #16]
   244a8:	ldr	r0, [fp, #-4]
   244ac:	ldr	r1, [sp, #8]
   244b0:	ldr	r2, [sp, #4]
   244b4:	bl	25f6c <__assert_fail@plt+0x133b4>
   244b8:	and	r0, r0, #1
   244bc:	mov	sp, fp
   244c0:	pop	{fp, pc}
   244c4:	push	{fp, lr}
   244c8:	mov	fp, sp
   244cc:	sub	sp, sp, #16
   244d0:	str	r0, [fp, #-4]
   244d4:	str	r1, [sp, #8]
   244d8:	str	r2, [sp, #4]
   244dc:	movw	r0, #57480	; 0xe088
   244e0:	movt	r0, #8
   244e4:	movw	r1, #1
   244e8:	strb	r1, [r0, #16]
   244ec:	ldr	r0, [fp, #-4]
   244f0:	ldr	r1, [sp, #8]
   244f4:	ldr	r2, [sp, #4]
   244f8:	bl	25f6c <__assert_fail@plt+0x133b4>
   244fc:	and	r0, r0, #1
   24500:	mov	sp, fp
   24504:	pop	{fp, pc}
   24508:	push	{fp, lr}
   2450c:	mov	fp, sp
   24510:	sub	sp, sp, #16
   24514:	str	r0, [fp, #-4]
   24518:	str	r1, [sp, #8]
   2451c:	str	r2, [sp, #4]
   24520:	ldr	r0, [fp, #-4]
   24524:	bl	1a188 <__assert_fail@plt+0x75d0>
   24528:	str	r0, [sp]
   2452c:	ldr	r0, [sp]
   24530:	movw	r1, #24428	; 0x5f6c
   24534:	movt	r1, #1
   24538:	str	r1, [r0]
   2453c:	ldr	r0, [sp]
   24540:	movw	r1, #3
   24544:	str	r1, [r0, #8]
   24548:	ldr	r0, [sp]
   2454c:	movw	r1, #2
   24550:	str	r1, [r0, #12]
   24554:	ldr	r0, [sp]
   24558:	movw	r1, #0
   2455c:	strb	r1, [r0, #19]
   24560:	ldr	r0, [sp]
   24564:	strb	r1, [r0, #18]
   24568:	movw	r0, #1
   2456c:	and	r0, r0, #1
   24570:	mov	sp, fp
   24574:	pop	{fp, pc}
   24578:	push	{fp, lr}
   2457c:	mov	fp, sp
   24580:	sub	sp, sp, #16
   24584:	str	r0, [fp, #-4]
   24588:	str	r1, [sp, #8]
   2458c:	str	r2, [sp, #4]
   24590:	ldr	r1, [fp, #-4]
   24594:	ldr	r2, [sp, #8]
   24598:	ldr	r3, [sp, #4]
   2459c:	movw	r0, #24770	; 0x60c2
   245a0:	movt	r0, #7
   245a4:	bl	26050 <__assert_fail@plt+0x13498>
   245a8:	and	r0, r0, #1
   245ac:	mov	sp, fp
   245b0:	pop	{fp, pc}
   245b4:	push	{fp, lr}
   245b8:	mov	fp, sp
   245bc:	sub	sp, sp, #16
   245c0:	str	r0, [fp, #-4]
   245c4:	str	r1, [sp, #8]
   245c8:	str	r2, [sp, #4]
   245cc:	ldr	r1, [fp, #-4]
   245d0:	ldr	r2, [sp, #8]
   245d4:	ldr	r3, [sp, #4]
   245d8:	movw	r0, #22448	; 0x57b0
   245dc:	movt	r0, #7
   245e0:	bl	26050 <__assert_fail@plt+0x13498>
   245e4:	and	r0, r0, #1
   245e8:	mov	sp, fp
   245ec:	pop	{fp, pc}
   245f0:	push	{fp, lr}
   245f4:	mov	fp, sp
   245f8:	sub	sp, sp, #16
   245fc:	str	r0, [fp, #-4]
   24600:	str	r1, [sp, #8]
   24604:	str	r2, [sp, #4]
   24608:	ldr	r0, [fp, #-4]
   2460c:	ldr	r1, [sp, #8]
   24610:	ldr	r2, [sp, #4]
   24614:	movw	r3, #34031	; 0x84ef
   24618:	movt	r3, #7
   2461c:	movw	ip, #24560	; 0x5ff0
   24620:	movt	ip, #1
   24624:	str	ip, [sp]
   24628:	bl	272a8 <__assert_fail@plt+0x146f0>
   2462c:	and	r0, r0, #1
   24630:	mov	sp, fp
   24634:	pop	{fp, pc}
   24638:	push	{fp, lr}
   2463c:	mov	fp, sp
   24640:	sub	sp, sp, #80	; 0x50
   24644:	str	r0, [fp, #-8]
   24648:	str	r1, [fp, #-12]
   2464c:	str	r2, [fp, #-16]
   24650:	movw	r0, #0
   24654:	str	r0, [fp, #-32]	; 0xffffffe0
   24658:	movw	r0, #2
   2465c:	str	r0, [fp, #-36]	; 0xffffffdc
   24660:	ldr	r0, [fp, #-12]
   24664:	ldr	r1, [fp, #-16]
   24668:	add	r2, sp, #32
   2466c:	bl	25ae8 <__assert_fail@plt+0x12f30>
   24670:	tst	r0, #1
   24674:	bne	24688 <__assert_fail@plt+0x11ad0>
   24678:	movw	r0, #0
   2467c:	and	r0, r0, #1
   24680:	strb	r0, [fp, #-1]
   24684:	b	248a8 <__assert_fail@plt+0x11cf0>
   24688:	ldr	r0, [sp, #32]
   2468c:	ldrb	r0, [r0]
   24690:	mov	r1, r0
   24694:	cmp	r0, #45	; 0x2d
   24698:	str	r1, [sp, #28]
   2469c:	beq	246b4 <__assert_fail@plt+0x11afc>
   246a0:	b	246a4 <__assert_fail@plt+0x11aec>
   246a4:	ldr	r0, [sp, #28]
   246a8:	cmp	r0, #47	; 0x2f
   246ac:	beq	246d0 <__assert_fail@plt+0x11b18>
   246b0:	b	246e8 <__assert_fail@plt+0x11b30>
   246b4:	vldr	s0, [pc, #512]	; 248bc <__assert_fail@plt+0x11d04>
   246b8:	movw	r0, #1
   246bc:	str	r0, [fp, #-32]	; 0xffffffe0
   246c0:	movw	r0, #0
   246c4:	str	r0, [fp, #-36]	; 0xffffffdc
   246c8:	vstr	s0, [fp, #-28]	; 0xffffffe4
   246cc:	b	24700 <__assert_fail@plt+0x11b48>
   246d0:	vldr	s0, [pc, #480]	; 248b8 <__assert_fail@plt+0x11d00>
   246d4:	movw	r0, #1
   246d8:	str	r0, [fp, #-32]	; 0xffffffe0
   246dc:	str	r0, [fp, #-36]	; 0xffffffdc
   246e0:	vstr	s0, [fp, #-28]	; 0xffffffe4
   246e4:	b	24700 <__assert_fail@plt+0x11b48>
   246e8:	vldr	s0, [pc, #464]	; 248c0 <__assert_fail@plt+0x11d08>
   246ec:	movw	r0, #0
   246f0:	str	r0, [fp, #-32]	; 0xffffffe0
   246f4:	movw	r0, #2
   246f8:	str	r0, [fp, #-36]	; 0xffffffdc
   246fc:	vstr	s0, [fp, #-28]	; 0xffffffe4
   24700:	ldr	r0, [sp, #32]
   24704:	ldr	r1, [fp, #-32]	; 0xffffffe0
   24708:	add	r0, r0, r1
   2470c:	bl	31814 <__assert_fail@plt+0x1ec5c>
   24710:	str	r0, [sp, #40]	; 0x28
   24714:	ldr	r0, [sp, #40]	; 0x28
   24718:	movw	r1, #0
   2471c:	cmp	r1, r0
   24720:	beq	24758 <__assert_fail@plt+0x11ba0>
   24724:	ldr	r0, [sp, #32]
   24728:	ldrb	r0, [r0]
   2472c:	cmp	r0, #43	; 0x2b
   24730:	bne	247a0 <__assert_fail@plt+0x11be8>
   24734:	ldr	r0, [sp, #32]
   24738:	ldrb	r0, [r0, #1]
   2473c:	movw	r1, #48	; 0x30
   24740:	cmp	r1, r0
   24744:	bgt	247a0 <__assert_fail@plt+0x11be8>
   24748:	ldr	r0, [sp, #32]
   2474c:	ldrb	r0, [r0, #1]
   24750:	cmp	r0, #56	; 0x38
   24754:	bge	247a0 <__assert_fail@plt+0x11be8>
   24758:	movw	r0, #36444	; 0x8e5c
   2475c:	movt	r0, #7
   24760:	bl	12864 <gettext@plt>
   24764:	movw	r1, #57480	; 0xe088
   24768:	movt	r1, #8
   2476c:	ldr	r1, [r1, #72]	; 0x48
   24770:	ldr	r2, [sp, #32]
   24774:	movw	r3, #0
   24778:	str	r0, [sp, #24]
   2477c:	mov	r0, r3
   24780:	bl	487d0 <__assert_fail@plt+0x35c18>
   24784:	movw	r1, #1
   24788:	str	r0, [sp, #20]
   2478c:	mov	r0, r1
   24790:	movw	r1, #0
   24794:	ldr	r2, [sp, #24]
   24798:	ldr	r3, [sp, #20]
   2479c:	bl	12780 <error@plt>
   247a0:	ldr	r3, [sp, #40]	; 0x28
   247a4:	movw	r0, #0
   247a8:	str	r0, [sp, #16]
   247ac:	movw	r1, #0
   247b0:	and	r1, r1, #1
   247b4:	ldr	r2, [sp, #16]
   247b8:	ldr	ip, [sp, #16]
   247bc:	str	ip, [sp]
   247c0:	bl	320ec <__assert_fail@plt+0x1f534>
   247c4:	str	r0, [fp, #-24]	; 0xffffffe8
   247c8:	ldr	r3, [sp, #40]	; 0x28
   247cc:	movw	r0, #0
   247d0:	str	r0, [sp, #12]
   247d4:	movw	r1, #1
   247d8:	and	r1, r1, #1
   247dc:	ldr	r2, [sp, #12]
   247e0:	ldr	ip, [sp, #12]
   247e4:	str	ip, [sp]
   247e8:	bl	320ec <__assert_fail@plt+0x1f534>
   247ec:	str	r0, [fp, #-20]	; 0xffffffec
   247f0:	ldr	r0, [sp, #40]	; 0x28
   247f4:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   247f8:	ldr	r0, [sp, #32]
   247fc:	ldrb	r0, [r0]
   24800:	movw	r1, #47	; 0x2f
   24804:	cmp	r1, r0
   24808:	bne	24860 <__assert_fail@plt+0x11ca8>
   2480c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24810:	movw	r1, #0
   24814:	cmp	r1, r0
   24818:	bne	24860 <__assert_fail@plt+0x11ca8>
   2481c:	ldr	r0, [fp, #-20]	; 0xffffffec
   24820:	movw	r1, #0
   24824:	cmp	r1, r0
   24828:	bne	24860 <__assert_fail@plt+0x11ca8>
   2482c:	movw	r0, #36460	; 0x8e6c
   24830:	movt	r0, #7
   24834:	bl	12864 <gettext@plt>
   24838:	ldr	r3, [sp, #32]
   2483c:	movw	r1, #0
   24840:	str	r0, [sp, #8]
   24844:	mov	r0, r1
   24848:	ldr	r2, [sp, #8]
   2484c:	bl	12780 <error@plt>
   24850:	vldr	s0, [pc, #108]	; 248c4 <__assert_fail@plt+0x11d0c>
   24854:	movw	r0, #0
   24858:	str	r0, [fp, #-36]	; 0xffffffdc
   2485c:	vstr	s0, [fp, #-28]	; 0xffffffe4
   24860:	ldr	r0, [fp, #-8]
   24864:	ldr	r1, [sp, #32]
   24868:	bl	1b994 <__assert_fail@plt+0x8ddc>
   2486c:	str	r0, [sp, #36]	; 0x24
   24870:	vldr	s0, [fp, #-28]	; 0xffffffe4
   24874:	ldr	r0, [sp, #36]	; 0x24
   24878:	vstr	s0, [r0, #28]
   2487c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24880:	ldr	r1, [sp, #36]	; 0x24
   24884:	str	r0, [r1, #40]	; 0x28
   24888:	ldr	r0, [sp, #36]	; 0x24
   2488c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24890:	str	r1, [r0, #44]	; 0x2c
   24894:	ldr	r1, [fp, #-20]	; 0xffffffec
   24898:	str	r1, [r0, #48]	; 0x30
   2489c:	movw	r0, #1
   248a0:	and	r0, r0, #1
   248a4:	strb	r0, [fp, #-1]
   248a8:	ldrb	r0, [fp, #-1]
   248ac:	and	r0, r0, #1
   248b0:	mov	sp, fp
   248b4:	pop	{fp, pc}
   248b8:			; <UNDEFINED> instruction: 0x3e99999a
   248bc:	cdpcc	12, 4, cr12, cr12, cr13, {6}
   248c0:	stccc	7, cr13, [r3], #-40	; 0xffffffd8
   248c4:	svccc	0x007fa440
   248c8:	push	{fp, lr}
   248cc:	mov	fp, sp
   248d0:	sub	sp, sp, #16
   248d4:	str	r0, [fp, #-4]
   248d8:	str	r1, [sp, #8]
   248dc:	str	r2, [sp, #4]
   248e0:	ldr	r0, [fp, #-4]
   248e4:	movw	r1, #0
   248e8:	bl	26c24 <__assert_fail@plt+0x1406c>
   248ec:	and	r0, r0, #1
   248f0:	mov	sp, fp
   248f4:	pop	{fp, pc}
   248f8:	push	{fp, lr}
   248fc:	mov	fp, sp
   24900:	sub	sp, sp, #48	; 0x30
   24904:	str	r0, [fp, #-8]
   24908:	str	r1, [fp, #-12]
   2490c:	str	r2, [fp, #-16]
   24910:	ldr	r0, [fp, #-16]
   24914:	ldr	r0, [r0]
   24918:	str	r0, [sp, #24]
   2491c:	ldr	r0, [fp, #-12]
   24920:	ldr	r1, [fp, #-16]
   24924:	sub	r2, fp, #20
   24928:	bl	25d74 <__assert_fail@plt+0x131bc>
   2492c:	tst	r0, #1
   24930:	beq	24980 <__assert_fail@plt+0x11dc8>
   24934:	add	r0, sp, #4
   24938:	bl	21f24 <__assert_fail@plt+0xf36c>
   2493c:	ldr	r1, [fp, #-8]
   24940:	ldr	r2, [fp, #-20]	; 0xffffffec
   24944:	add	r0, sp, #4
   24948:	bl	1e610 <__assert_fail@plt+0xba58>
   2494c:	tst	r0, #1
   24950:	beq	24964 <__assert_fail@plt+0x11dac>
   24954:	movw	r0, #1
   24958:	and	r0, r0, #1
   2495c:	strb	r0, [fp, #-1]
   24960:	b	2498c <__assert_fail@plt+0x11dd4>
   24964:	ldr	r0, [sp, #24]
   24968:	ldr	r1, [fp, #-16]
   2496c:	str	r0, [r1]
   24970:	movw	r0, #0
   24974:	and	r0, r0, #1
   24978:	strb	r0, [fp, #-1]
   2497c:	b	2498c <__assert_fail@plt+0x11dd4>
   24980:	movw	r0, #0
   24984:	and	r0, r0, #1
   24988:	strb	r0, [fp, #-1]
   2498c:	ldrb	r0, [fp, #-1]
   24990:	and	r0, r0, #1
   24994:	mov	sp, fp
   24998:	pop	{fp, pc}
   2499c:	push	{fp, lr}
   249a0:	mov	fp, sp
   249a4:	sub	sp, sp, #16
   249a8:	str	r0, [fp, #-4]
   249ac:	str	r1, [sp, #8]
   249b0:	str	r2, [sp, #4]
   249b4:	ldr	r0, [fp, #-4]
   249b8:	bl	1b9fc <__assert_fail@plt+0x8e44>
   249bc:	str	r0, [sp]
   249c0:	movw	r0, #57480	; 0xe088
   249c4:	movt	r0, #8
   249c8:	ldrb	r0, [r0]
   249cc:	and	r0, r0, #1
   249d0:	cmp	r0, #0
   249d4:	bne	249ec <__assert_fail@plt+0x11e34>
   249d8:	ldr	r0, [sp]
   249dc:	movw	r1, #0
   249e0:	strb	r1, [r0, #19]
   249e4:	ldr	r0, [sp]
   249e8:	strb	r1, [r0, #18]
   249ec:	ldr	r0, [sp]
   249f0:	movw	r1, #1
   249f4:	strb	r1, [r0, #16]
   249f8:	ldr	r0, [sp]
   249fc:	movw	r1, #0
   24a00:	strb	r1, [r0, #17]
   24a04:	movw	r0, #1
   24a08:	and	r0, r0, #1
   24a0c:	mov	sp, fp
   24a10:	pop	{fp, pc}
   24a14:	push	{fp, lr}
   24a18:	mov	fp, sp
   24a1c:	sub	sp, sp, #16
   24a20:	str	r0, [fp, #-4]
   24a24:	str	r1, [sp, #8]
   24a28:	str	r2, [sp, #4]
   24a2c:	ldr	r0, [fp, #-4]
   24a30:	bl	1b9fc <__assert_fail@plt+0x8e44>
   24a34:	str	r0, [sp]
   24a38:	ldr	r0, [sp]
   24a3c:	movw	r1, #0
   24a40:	strb	r1, [r0, #19]
   24a44:	ldr	r0, [sp]
   24a48:	strb	r1, [r0, #18]
   24a4c:	ldr	r0, [sp]
   24a50:	movw	r2, #1
   24a54:	strb	r2, [r0, #16]
   24a58:	ldr	r0, [sp]
   24a5c:	strb	r1, [r0, #17]
   24a60:	ldr	r0, [sp]
   24a64:	vmov.f32	s0, #112	; 0x3f800000  1.0
   24a68:	vstr	s0, [r0, #28]
   24a6c:	movw	r0, #1
   24a70:	and	r0, r0, #1
   24a74:	mov	sp, fp
   24a78:	pop	{fp, pc}
   24a7c:	push	{fp, lr}
   24a80:	mov	fp, sp
   24a84:	sub	sp, sp, #16
   24a88:	str	r0, [fp, #-4]
   24a8c:	str	r1, [sp, #8]
   24a90:	str	r2, [sp, #4]
   24a94:	ldr	r0, [sp, #8]
   24a98:	ldr	r1, [sp, #4]
   24a9c:	ldr	r2, [fp, #-4]
   24aa0:	movw	r3, #57480	; 0xe088
   24aa4:	movt	r3, #8
   24aa8:	ldr	r3, [r3, #60]	; 0x3c
   24aac:	bl	27498 <__assert_fail@plt+0x148e0>
   24ab0:	and	r0, r0, #1
   24ab4:	mov	sp, fp
   24ab8:	pop	{fp, pc}
   24abc:	push	{fp, lr}
   24ac0:	mov	fp, sp
   24ac4:	sub	sp, sp, #24
   24ac8:	str	r0, [fp, #-8]
   24acc:	str	r1, [sp, #12]
   24ad0:	str	r2, [sp, #8]
   24ad4:	ldr	r0, [sp, #12]
   24ad8:	ldr	r1, [sp, #8]
   24adc:	add	r2, sp, #4
   24ae0:	bl	25ae8 <__assert_fail@plt+0x12f30>
   24ae4:	tst	r0, #1
   24ae8:	beq	24b1c <__assert_fail@plt+0x11f64>
   24aec:	ldr	r0, [sp, #4]
   24af0:	bl	2b154 <__assert_fail@plt+0x1859c>
   24af4:	movw	r1, #57480	; 0xe088
   24af8:	movt	r1, #8
   24afc:	str	r0, [r1, #60]	; 0x3c
   24b00:	ldr	r0, [fp, #-8]
   24b04:	ldr	r1, [sp, #12]
   24b08:	ldr	r2, [sp, #8]
   24b0c:	bl	25f6c <__assert_fail@plt+0x133b4>
   24b10:	and	r0, r0, #1
   24b14:	strb	r0, [fp, #-1]
   24b18:	b	24b28 <__assert_fail@plt+0x11f70>
   24b1c:	movw	r0, #0
   24b20:	and	r0, r0, #1
   24b24:	strb	r0, [fp, #-1]
   24b28:	ldrb	r0, [fp, #-1]
   24b2c:	and	r0, r0, #1
   24b30:	mov	sp, fp
   24b34:	pop	{fp, pc}
   24b38:	push	{r4, r5, fp, lr}
   24b3c:	add	fp, sp, #8
   24b40:	sub	sp, sp, #256	; 0x100
   24b44:	str	r0, [fp, #-16]
   24b48:	str	r1, [fp, #-20]	; 0xffffffec
   24b4c:	str	r2, [fp, #-24]	; 0xffffffe8
   24b50:	add	r0, sp, #128	; 0x80
   24b54:	bl	1bdbc <__assert_fail@plt+0x9204>
   24b58:	ldr	r0, [fp, #-20]	; 0xffffffec
   24b5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24b60:	add	r2, sp, #128	; 0x80
   24b64:	add	r3, sp, #12
   24b68:	bl	25eb0 <__assert_fail@plt+0x132f8>
   24b6c:	tst	r0, #1
   24b70:	bne	24b84 <__assert_fail@plt+0x11fcc>
   24b74:	movw	r0, #0
   24b78:	and	r0, r0, #1
   24b7c:	strb	r0, [fp, #-9]
   24b80:	b	24e1c <__assert_fail@plt+0x12264>
   24b84:	add	r0, sp, #24
   24b88:	bl	1bdbc <__assert_fail@plt+0x9204>
   24b8c:	mvn	r0, #2
   24b90:	str	r0, [sp, #20]
   24b94:	movw	r0, #0
   24b98:	str	r0, [sp, #16]
   24b9c:	movw	r0, #57480	; 0xe088
   24ba0:	movt	r0, #8
   24ba4:	ldr	r0, [r0, #48]	; 0x30
   24ba8:	cmp	r0, #0
   24bac:	bne	24c08 <__assert_fail@plt+0x12050>
   24bb0:	movw	r0, #57480	; 0xe088
   24bb4:	movt	r0, #8
   24bb8:	ldrb	r0, [r0, #56]	; 0x38
   24bbc:	tst	r0, #1
   24bc0:	beq	24bdc <__assert_fail@plt+0x12024>
   24bc4:	ldr	r0, [sp, #16]
   24bc8:	orr	r0, r0, #32768	; 0x8000
   24bcc:	str	r0, [sp, #16]
   24bd0:	mvn	r0, #0
   24bd4:	str	r0, [sp, #20]
   24bd8:	b	24c04 <__assert_fail@plt+0x1204c>
   24bdc:	ldr	r0, [sp, #144]	; 0x90
   24be0:	and	r0, r0, #61440	; 0xf000
   24be4:	cmp	r0, #40960	; 0xa000
   24be8:	bne	24bf8 <__assert_fail@plt+0x12040>
   24bec:	mvn	r0, #1
   24bf0:	str	r0, [sp, #20]
   24bf4:	b	24c00 <__assert_fail@plt+0x12048>
   24bf8:	mvn	r0, #0
   24bfc:	str	r0, [sp, #20]
   24c00:	b	24c04 <__assert_fail@plt+0x1204c>
   24c04:	b	24c10 <__assert_fail@plt+0x12058>
   24c08:	mvn	r0, #0
   24c0c:	str	r0, [sp, #20]
   24c10:	ldr	r0, [sp, #20]
   24c14:	cmn	r0, #3
   24c18:	beq	24c20 <__assert_fail@plt+0x12068>
   24c1c:	b	24c40 <__assert_fail@plt+0x12088>
   24c20:	movw	r0, #36686	; 0x8f4e
   24c24:	movt	r0, #7
   24c28:	movw	r1, #33459	; 0x82b3
   24c2c:	movt	r1, #7
   24c30:	movw	r2, #2239	; 0x8bf
   24c34:	movw	r3, #36695	; 0x8f57
   24c38:	movt	r3, #7
   24c3c:	bl	12bb8 <__assert_fail@plt>
   24c40:	ldr	r0, [sp, #20]
   24c44:	cmn	r0, #1
   24c48:	bne	24da0 <__assert_fail@plt+0x121e8>
   24c4c:	ldr	r0, [sp, #12]
   24c50:	ldr	r1, [sp, #16]
   24c54:	bl	2954c <__assert_fail@plt+0x16994>
   24c58:	str	r0, [sp, #20]
   24c5c:	ldr	r0, [sp, #20]
   24c60:	cmp	r0, #0
   24c64:	blt	24d9c <__assert_fail@plt+0x121e4>
   24c68:	ldr	r0, [sp, #20]
   24c6c:	add	r1, sp, #24
   24c70:	bl	7564c <__assert_fail@plt+0x62a94>
   24c74:	movw	r1, #0
   24c78:	cmp	r1, r0
   24c7c:	beq	24c90 <__assert_fail@plt+0x120d8>
   24c80:	bl	128d0 <__errno_location@plt>
   24c84:	ldr	r0, [r0]
   24c88:	ldr	r1, [sp, #12]
   24c8c:	bl	1da80 <__assert_fail@plt+0xaec8>
   24c90:	movw	r0, #57480	; 0xe088
   24c94:	movt	r0, #8
   24c98:	ldr	r0, [r0, #52]	; 0x34
   24c9c:	ldr	r1, [sp, #12]
   24ca0:	str	r0, [sp, #8]
   24ca4:	mov	r0, r1
   24ca8:	add	r1, sp, #128	; 0x80
   24cac:	ldr	r2, [sp, #8]
   24cb0:	blx	r2
   24cb4:	cmp	r0, #0
   24cb8:	beq	24ccc <__assert_fail@plt+0x12114>
   24cbc:	bl	128d0 <__errno_location@plt>
   24cc0:	ldr	r0, [r0]
   24cc4:	ldr	r1, [sp, #12]
   24cc8:	bl	1da80 <__assert_fail@plt+0xaec8>
   24ccc:	movw	r0, #57480	; 0xe088
   24cd0:	movt	r0, #8
   24cd4:	ldr	r0, [r0, #48]	; 0x30
   24cd8:	cmp	r0, #0
   24cdc:	bne	24d84 <__assert_fail@plt+0x121cc>
   24ce0:	movw	r0, #57480	; 0xe088
   24ce4:	movt	r0, #8
   24ce8:	ldrb	r0, [r0, #56]	; 0x38
   24cec:	tst	r0, #1
   24cf0:	bne	24d84 <__assert_fail@plt+0x121cc>
   24cf4:	ldr	r0, [sp, #144]	; 0x90
   24cf8:	and	r0, r0, #61440	; 0xf000
   24cfc:	cmp	r0, #40960	; 0xa000
   24d00:	bne	24d18 <__assert_fail@plt+0x12160>
   24d04:	ldr	r0, [sp, #20]
   24d08:	bl	12b70 <close@plt>
   24d0c:	mvn	r1, #0
   24d10:	str	r1, [sp, #20]
   24d14:	b	24d80 <__assert_fail@plt+0x121c8>
   24d18:	ldr	r0, [sp, #128]	; 0x80
   24d1c:	ldr	r1, [sp, #132]	; 0x84
   24d20:	ldr	r2, [sp, #24]
   24d24:	ldr	r3, [sp, #28]
   24d28:	eor	r1, r1, r3
   24d2c:	eor	r0, r0, r2
   24d30:	orr	r0, r0, r1
   24d34:	cmp	r0, #0
   24d38:	bne	24d6c <__assert_fail@plt+0x121b4>
   24d3c:	b	24d40 <__assert_fail@plt+0x12188>
   24d40:	ldr	r0, [sp, #224]	; 0xe0
   24d44:	ldr	r1, [sp, #228]	; 0xe4
   24d48:	ldr	r2, [sp, #120]	; 0x78
   24d4c:	ldr	r3, [sp, #124]	; 0x7c
   24d50:	eor	r1, r1, r3
   24d54:	eor	r0, r0, r2
   24d58:	orr	r0, r0, r1
   24d5c:	cmp	r0, #0
   24d60:	bne	24d6c <__assert_fail@plt+0x121b4>
   24d64:	b	24d68 <__assert_fail@plt+0x121b0>
   24d68:	b	24d7c <__assert_fail@plt+0x121c4>
   24d6c:	ldr	r0, [sp, #20]
   24d70:	bl	12b70 <close@plt>
   24d74:	mvn	r1, #0
   24d78:	str	r1, [sp, #20]
   24d7c:	b	24d80 <__assert_fail@plt+0x121c8>
   24d80:	b	24d94 <__assert_fail@plt+0x121dc>
   24d84:	add	r0, sp, #128	; 0x80
   24d88:	add	r1, sp, #24
   24d8c:	movw	r2, #104	; 0x68
   24d90:	bl	125c4 <memcpy@plt>
   24d94:	b	24d98 <__assert_fail@plt+0x121e0>
   24d98:	b	24d9c <__assert_fail@plt+0x121e4>
   24d9c:	b	24da0 <__assert_fail@plt+0x121e8>
   24da0:	vldr	s0, [pc, #132]	; 24e2c <__assert_fail@plt+0x12274>
   24da4:	ldr	r0, [fp, #-16]
   24da8:	ldr	r1, [sp, #12]
   24dac:	vstr	s0, [sp, #4]
   24db0:	bl	1b994 <__assert_fail@plt+0x8ddc>
   24db4:	str	r0, [fp, #-28]	; 0xffffffe4
   24db8:	ldr	r0, [sp, #224]	; 0xe0
   24dbc:	ldr	r1, [sp, #228]	; 0xe4
   24dc0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   24dc4:	str	r1, [r2, #44]	; 0x2c
   24dc8:	str	r0, [r2, #40]	; 0x28
   24dcc:	ldr	r0, [sp, #128]	; 0x80
   24dd0:	ldr	r1, [sp, #132]	; 0x84
   24dd4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   24dd8:	str	r1, [r2, #52]	; 0x34
   24ddc:	str	r0, [r2, #48]	; 0x30
   24de0:	ldr	r0, [sp, #20]
   24de4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   24de8:	str	r0, [r1, #56]	; 0x38
   24dec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   24df0:	movw	r1, #0
   24df4:	strb	r1, [r0, #19]
   24df8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   24dfc:	movw	r1, #1
   24e00:	strb	r1, [r0, #18]
   24e04:	ldr	r0, [fp, #-28]	; 0xffffffe4
   24e08:	vldr	s0, [sp, #4]
   24e0c:	vstr	s0, [r0, #28]
   24e10:	movw	r0, #1
   24e14:	and	r0, r0, #1
   24e18:	strb	r0, [fp, #-9]
   24e1c:	ldrb	r0, [fp, #-9]
   24e20:	and	r0, r0, #1
   24e24:	sub	sp, fp, #8
   24e28:	pop	{r4, r5, fp, pc}
   24e2c:	stccc	7, cr13, [r3], #-40	; 0xffffffd8
   24e30:	push	{fp, lr}
   24e34:	mov	fp, sp
   24e38:	sub	sp, sp, #80	; 0x50
   24e3c:	str	r0, [fp, #-8]
   24e40:	str	r1, [fp, #-12]
   24e44:	str	r2, [fp, #-16]
   24e48:	movw	r0, #512	; 0x200
   24e4c:	str	r0, [sp, #36]	; 0x24
   24e50:	ldr	r0, [fp, #-12]
   24e54:	movw	r1, #0
   24e58:	cmp	r0, r1
   24e5c:	beq	24e80 <__assert_fail@plt+0x122c8>
   24e60:	ldr	r0, [fp, #-12]
   24e64:	ldr	r1, [fp, #-16]
   24e68:	ldr	r1, [r1]
   24e6c:	add	r0, r0, r1, lsl #2
   24e70:	ldr	r0, [r0]
   24e74:	movw	r1, #0
   24e78:	cmp	r0, r1
   24e7c:	bne	24e90 <__assert_fail@plt+0x122d8>
   24e80:	movw	r0, #0
   24e84:	and	r0, r0, #1
   24e88:	strb	r0, [fp, #-1]
   24e8c:	b	252f4 <__assert_fail@plt+0x1273c>
   24e90:	ldr	r0, [fp, #-12]
   24e94:	ldr	r1, [fp, #-16]
   24e98:	ldr	r1, [r1]
   24e9c:	add	r0, r0, r1, lsl #2
   24ea0:	ldr	r0, [r0]
   24ea4:	str	r0, [fp, #-24]	; 0xffffffe8
   24ea8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24eac:	bl	12888 <strlen@plt>
   24eb0:	str	r0, [sp, #32]
   24eb4:	ldr	r0, [sp, #32]
   24eb8:	cmp	r0, #0
   24ebc:	bne	24ee4 <__assert_fail@plt+0x1232c>
   24ec0:	movw	r0, #36761	; 0x8f99
   24ec4:	movt	r0, #7
   24ec8:	bl	12864 <gettext@plt>
   24ecc:	movw	r1, #1
   24ed0:	str	r0, [sp, #24]
   24ed4:	mov	r0, r1
   24ed8:	movw	r1, #0
   24edc:	ldr	r2, [sp, #24]
   24ee0:	bl	12780 <error@plt>
   24ee4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24ee8:	ldr	r1, [sp, #32]
   24eec:	add	r0, r1, r0
   24ef0:	ldrb	r0, [r0, #-1]
   24ef4:	strb	r0, [fp, #-33]	; 0xffffffdf
   24ef8:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   24efc:	sub	r0, r0, #48	; 0x30
   24f00:	cmp	r0, #71	; 0x47
   24f04:	str	r0, [sp, #20]
   24f08:	bhi	25120 <__assert_fail@plt+0x12568>
   24f0c:	add	r0, pc, #8
   24f10:	ldr	r1, [sp, #20]
   24f14:	ldr	r0, [r0, r1, lsl #2]
   24f18:	mov	pc, r0
   24f1c:	andeq	r5, r2, r4, lsl r1
   24f20:	andeq	r5, r2, r4, lsl r1
   24f24:	andeq	r5, r2, r4, lsl r1
   24f28:	andeq	r5, r2, r4, lsl r1
   24f2c:	andeq	r5, r2, r4, lsl r1
   24f30:	andeq	r5, r2, r4, lsl r1
   24f34:	andeq	r5, r2, r4, lsl r1
   24f38:	andeq	r5, r2, r4, lsl r1
   24f3c:	andeq	r5, r2, r4, lsl r1
   24f40:	andeq	r5, r2, r4, lsl r1
   24f44:	andeq	r5, r2, r0, lsr #2
   24f48:	andeq	r5, r2, r0, lsr #2
   24f4c:	andeq	r5, r2, r0, lsr #2
   24f50:	andeq	r5, r2, r0, lsr #2
   24f54:	andeq	r5, r2, r0, lsr #2
   24f58:	andeq	r5, r2, r0, lsr #2
   24f5c:	andeq	r5, r2, r0, lsr #2
   24f60:	andeq	r5, r2, r0, lsr #2
   24f64:	andeq	r5, r2, r0, lsr #2
   24f68:	andeq	r5, r2, r0, lsr #2
   24f6c:	andeq	r5, r2, r0, lsr #2
   24f70:	andeq	r5, r2, r0, lsr #2
   24f74:	andeq	r5, r2, r0, lsr #2
   24f78:	andeq	r5, r2, ip, asr #1
   24f7c:	andeq	r5, r2, r0, lsr #2
   24f80:	andeq	r5, r2, r0, lsr #2
   24f84:	andeq	r5, r2, r0, lsr #2
   24f88:	andeq	r5, r2, r0, lsr #2
   24f8c:	andeq	r5, r2, r0, lsr #2
   24f90:	andeq	r5, r2, r8, lsr #1
   24f94:	andeq	r5, r2, r0, lsr #2
   24f98:	andeq	r5, r2, r0, lsr #2
   24f9c:	andeq	r5, r2, r0, lsr #2
   24fa0:	andeq	r5, r2, r0, lsr #2
   24fa4:	andeq	r5, r2, r0, lsr #2
   24fa8:	andeq	r5, r2, r0, lsr #2
   24fac:	andeq	r5, r2, r0, lsr #2
   24fb0:	andeq	r5, r2, r0, lsr #2
   24fb4:	andeq	r5, r2, r0, lsr #2
   24fb8:	andeq	r5, r2, r0, lsr #2
   24fbc:	andeq	r5, r2, r0, lsr #2
   24fc0:	andeq	r5, r2, r0, lsr #2
   24fc4:	andeq	r5, r2, r0, lsr #2
   24fc8:	andeq	r5, r2, r0, lsr #2
   24fcc:	andeq	r5, r2, r0, lsr #2
   24fd0:	andeq	r5, r2, r0, lsr #2
   24fd4:	andeq	r5, r2, r0, lsr #2
   24fd8:	andeq	r5, r2, r0, lsr #2
   24fdc:	andeq	r5, r2, r0, lsr #2
   24fe0:	andeq	r5, r2, r0, lsr #2
   24fe4:	andeq	r5, r2, ip, lsr r0
   24fe8:	andeq	r5, r2, r0, rrx
   24fec:	andeq	r5, r2, r0, lsr #2
   24ff0:	andeq	r5, r2, r0, lsr #2
   24ff4:	andeq	r5, r2, r0, lsr #2
   24ff8:	andeq	r5, r2, r0, lsr #2
   24ffc:	andeq	r5, r2, r0, lsr #2
   25000:	andeq	r5, r2, r0, lsr #2
   25004:	andeq	r5, r2, r0, lsr #2
   25008:	andeq	r5, r2, r4, lsl #1
   2500c:	andeq	r5, r2, r0, lsr #2
   25010:	andeq	r5, r2, r0, lsr #2
   25014:	andeq	r5, r2, r0, lsr #2
   25018:	andeq	r5, r2, r0, lsr #2
   2501c:	andeq	r5, r2, r0, lsr #2
   25020:	andeq	r5, r2, r0, lsr #2
   25024:	andeq	r5, r2, r0, lsr #2
   25028:	andeq	r5, r2, r0, lsr #2
   2502c:	andeq	r5, r2, r0, lsr #2
   25030:	andeq	r5, r2, r0, lsr #2
   25034:	andeq	r5, r2, r0, lsr #2
   25038:	strdeq	r5, [r2], -r0
   2503c:	movw	r0, #512	; 0x200
   25040:	str	r0, [sp, #36]	; 0x24
   25044:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25048:	ldr	r1, [sp, #32]
   2504c:	sub	r1, r1, #1
   25050:	add	r0, r0, r1
   25054:	movw	r1, #0
   25058:	strb	r1, [r0]
   2505c:	b	25168 <__assert_fail@plt+0x125b0>
   25060:	movw	r0, #1
   25064:	str	r0, [sp, #36]	; 0x24
   25068:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2506c:	ldr	r1, [sp, #32]
   25070:	sub	r1, r1, #1
   25074:	add	r0, r0, r1
   25078:	movw	r1, #0
   2507c:	strb	r1, [r0]
   25080:	b	25168 <__assert_fail@plt+0x125b0>
   25084:	movw	r0, #1024	; 0x400
   25088:	str	r0, [sp, #36]	; 0x24
   2508c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25090:	ldr	r1, [sp, #32]
   25094:	sub	r1, r1, #1
   25098:	add	r0, r0, r1
   2509c:	movw	r1, #0
   250a0:	strb	r1, [r0]
   250a4:	b	25168 <__assert_fail@plt+0x125b0>
   250a8:	ldr	r0, [pc, #636]	; 2532c <__assert_fail@plt+0x12774>
   250ac:	str	r0, [sp, #36]	; 0x24
   250b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   250b4:	ldr	r1, [sp, #32]
   250b8:	sub	r1, r1, #1
   250bc:	add	r0, r0, r1
   250c0:	movw	r1, #0
   250c4:	strb	r1, [r0]
   250c8:	b	25168 <__assert_fail@plt+0x125b0>
   250cc:	ldr	r0, [pc, #596]	; 25328 <__assert_fail@plt+0x12770>
   250d0:	str	r0, [sp, #36]	; 0x24
   250d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   250d8:	ldr	r1, [sp, #32]
   250dc:	sub	r1, r1, #1
   250e0:	add	r0, r0, r1
   250e4:	movw	r1, #0
   250e8:	strb	r1, [r0]
   250ec:	b	25168 <__assert_fail@plt+0x125b0>
   250f0:	movw	r0, #2
   250f4:	str	r0, [sp, #36]	; 0x24
   250f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   250fc:	ldr	r1, [sp, #32]
   25100:	sub	r1, r1, #1
   25104:	add	r0, r0, r1
   25108:	movw	r1, #0
   2510c:	strb	r1, [r0]
   25110:	b	25168 <__assert_fail@plt+0x125b0>
   25114:	movw	r0, #0
   25118:	strb	r0, [fp, #-33]	; 0xffffffdf
   2511c:	b	25168 <__assert_fail@plt+0x125b0>
   25120:	movw	r0, #36792	; 0x8fb8
   25124:	movt	r0, #7
   25128:	bl	12864 <gettext@plt>
   2512c:	ldr	r1, [fp, #-12]
   25130:	ldr	r2, [fp, #-16]
   25134:	ldr	r2, [r2]
   25138:	add	r1, r1, r2, lsl #2
   2513c:	ldr	r1, [r1]
   25140:	ldr	r2, [sp, #32]
   25144:	sub	r2, r2, #1
   25148:	add	r1, r1, r2
   2514c:	ldrb	r3, [r1]
   25150:	movw	r1, #1
   25154:	str	r0, [sp, #16]
   25158:	mov	r0, r1
   2515c:	movw	r1, #0
   25160:	ldr	r2, [sp, #16]
   25164:	bl	12780 <error@plt>
   25168:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2516c:	sub	r1, fp, #32
   25170:	add	r2, sp, #40	; 0x28
   25174:	bl	26fdc <__assert_fail@plt+0x14424>
   25178:	tst	r0, #1
   2517c:	bne	251cc <__assert_fail@plt+0x12614>
   25180:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   25184:	strb	r0, [sp, #30]
   25188:	movw	r0, #0
   2518c:	strb	r0, [sp, #31]
   25190:	movw	r0, #36816	; 0x8fd0
   25194:	movt	r0, #7
   25198:	bl	12864 <gettext@plt>
   2519c:	add	r1, sp, #30
   251a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   251a4:	movw	r2, #1
   251a8:	str	r0, [sp, #12]
   251ac:	mov	r0, r2
   251b0:	movw	r2, #0
   251b4:	str	r1, [sp, #8]
   251b8:	mov	r1, r2
   251bc:	ldr	r2, [sp, #12]
   251c0:	ldr	ip, [sp, #8]
   251c4:	str	ip, [sp]
   251c8:	bl	12780 <error@plt>
   251cc:	ldr	r0, [fp, #-8]
   251d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   251d4:	bl	1b994 <__assert_fail@plt+0x8ddc>
   251d8:	str	r0, [fp, #-20]	; 0xffffffec
   251dc:	ldr	r0, [sp, #40]	; 0x28
   251e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   251e4:	str	r0, [r1, #40]	; 0x28
   251e8:	ldr	r0, [sp, #36]	; 0x24
   251ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   251f0:	str	r0, [r1, #44]	; 0x2c
   251f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   251f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   251fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   25200:	str	r1, [r2, #52]	; 0x34
   25204:	str	r0, [r2, #48]	; 0x30
   25208:	ldr	r0, [fp, #-20]	; 0xffffffec
   2520c:	movw	r1, #1
   25210:	strb	r1, [r0, #18]
   25214:	ldr	r0, [fp, #-20]	; 0xffffffec
   25218:	movw	r1, #0
   2521c:	strb	r1, [r0, #19]
   25220:	ldr	r0, [sp, #40]	; 0x28
   25224:	movw	r1, #0
   25228:	cmp	r1, r0
   2522c:	bne	25274 <__assert_fail@plt+0x126bc>
   25230:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25234:	ldr	r1, [fp, #-28]	; 0xffffffe4
   25238:	ldr	r2, [sp, #36]	; 0x24
   2523c:	asr	r3, r2, #31
   25240:	umull	ip, lr, r0, r2
   25244:	mla	r0, r0, r3, lr
   25248:	mla	r0, r1, r2, r0
   2524c:	add	r1, pc, #196	; 0xc4
   25250:	add	r2, r1, #8
   25254:	rsbs	r3, ip, #20480	; 0x5000
   25258:	rscs	r0, r0, #0
   2525c:	movcc	r1, r2
   25260:	vldr	d16, [r1]
   25264:	vcvt.f32.f64	s0, d16
   25268:	ldr	r1, [fp, #-20]	; 0xffffffec
   2526c:	vstr	s0, [r1, #28]
   25270:	b	252d8 <__assert_fail@plt+0x12720>
   25274:	ldr	r0, [sp, #40]	; 0x28
   25278:	movw	r1, #1
   2527c:	cmp	r1, r0
   25280:	bne	252c8 <__assert_fail@plt+0x12710>
   25284:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25288:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2528c:	ldr	r2, [sp, #36]	; 0x24
   25290:	asr	r3, r2, #31
   25294:	umull	ip, lr, r0, r2
   25298:	mla	r0, r0, r3, lr
   2529c:	mla	r0, r1, r2, r0
   252a0:	add	r1, pc, #96	; 0x60
   252a4:	add	r2, r1, #8
   252a8:	rsbs	r3, ip, #20480	; 0x5000
   252ac:	rscs	r0, r0, #0
   252b0:	movcc	r1, r2
   252b4:	vldr	d16, [r1]
   252b8:	vcvt.f32.f64	s0, d16
   252bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   252c0:	vstr	s0, [r1, #28]
   252c4:	b	252d4 <__assert_fail@plt+0x1271c>
   252c8:	vldr	s0, [pc, #96]	; 25330 <__assert_fail@plt+0x12778>
   252cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   252d0:	vstr	s0, [r0, #28]
   252d4:	b	252d8 <__assert_fail@plt+0x12720>
   252d8:	ldr	r0, [fp, #-16]
   252dc:	ldr	r1, [r0]
   252e0:	add	r1, r1, #1
   252e4:	str	r1, [r0]
   252e8:	movw	r0, #1
   252ec:	and	r0, r0, #1
   252f0:	strb	r0, [fp, #-1]
   252f4:	ldrb	r0, [fp, #-1]
   252f8:	and	r0, r0, #1
   252fc:	mov	sp, fp
   25300:	pop	{fp, pc}
   25304:	nop	{0}
   25308:	ldmibls	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
   2530c:	svccc	0x00b99999
   25310:	stclgt	12, cr12, [ip], {205}	; 0xcd
   25314:	svccc	0x00eccccc
   25318:	stclgt	12, cr12, [ip], {205}	; 0xcd
   2531c:	svccc	0x00eccccc
   25320:	ldmibls	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
   25324:	svccc	0x00b99999
   25328:	andmi	r0, r0, r0
   2532c:	andseq	r0, r0, r0
   25330:	stccc	7, cr13, [r3], #-40	; 0xffffffd8
   25334:	push	{fp, lr}
   25338:	mov	fp, sp
   2533c:	sub	sp, sp, #16
   25340:	str	r0, [fp, #-4]
   25344:	str	r1, [sp, #8]
   25348:	str	r2, [sp, #4]
   2534c:	ldr	r0, [sp, #8]
   25350:	ldr	r1, [sp, #4]
   25354:	ldr	r2, [fp, #-4]
   25358:	movw	r3, #26432	; 0x6740
   2535c:	movt	r3, #1
   25360:	bl	27764 <__assert_fail@plt+0x14bac>
   25364:	and	r0, r0, #1
   25368:	mov	sp, fp
   2536c:	pop	{fp, pc}
   25370:	push	{fp, lr}
   25374:	mov	fp, sp
   25378:	sub	sp, sp, #24
   2537c:	str	r0, [fp, #-8]
   25380:	str	r1, [sp, #12]
   25384:	str	r2, [sp, #8]
   25388:	ldr	r0, [sp, #12]
   2538c:	ldr	r1, [sp, #8]
   25390:	ldr	r2, [fp, #-8]
   25394:	bl	26db8 <__assert_fail@plt+0x14200>
   25398:	str	r0, [sp, #4]
   2539c:	ldr	r0, [sp, #4]
   253a0:	movw	r1, #0
   253a4:	cmp	r0, r1
   253a8:	beq	253ec <__assert_fail@plt+0x12834>
   253ac:	ldr	r0, [sp, #4]
   253b0:	ldr	r1, [r0, #48]	; 0x30
   253b4:	ldr	r0, [r0, #52]	; 0x34
   253b8:	add	r2, pc, #96	; 0x60
   253bc:	add	r3, r2, #8
   253c0:	subs	r1, r1, #100	; 0x64
   253c4:	sbcs	r0, r0, #0
   253c8:	movcc	r2, r3
   253cc:	vldr	d16, [r2]
   253d0:	vcvt.f32.f64	s0, d16
   253d4:	ldr	r2, [sp, #4]
   253d8:	vstr	s0, [r2, #28]
   253dc:	movw	r2, #1
   253e0:	and	r2, r2, #1
   253e4:	strb	r2, [fp, #-1]
   253e8:	b	2540c <__assert_fail@plt+0x12854>
   253ec:	ldr	r0, [sp, #8]
   253f0:	ldr	r1, [r0]
   253f4:	mvn	r2, #0
   253f8:	add	r1, r1, r2
   253fc:	str	r1, [r0]
   25400:	movw	r0, #0
   25404:	and	r0, r0, #1
   25408:	strb	r0, [fp, #-1]
   2540c:	ldrb	r0, [fp, #-1]
   25410:	and	r0, r0, #1
   25414:	mov	sp, fp
   25418:	pop	{fp, pc}
   2541c:	nop	{0}
   25420:	ldmibls	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
   25424:	svccc	0x00c99999
   25428:	bvc	ff8772e8 <stdout@@GLIBC_2.4+0xff7e9bb4>
   2542c:	svccc	0x00efae14
   25430:	push	{fp, lr}
   25434:	mov	fp, sp
   25438:	sub	sp, sp, #64	; 0x40
   2543c:	str	r0, [fp, #-8]
   25440:	str	r1, [fp, #-12]
   25444:	str	r2, [fp, #-16]
   25448:	movw	r0, #34419	; 0x8673
   2544c:	movt	r0, #7
   25450:	str	r0, [sp, #20]
   25454:	ldr	r0, [fp, #-12]
   25458:	ldr	r1, [fp, #-16]
   2545c:	add	r2, sp, #24
   25460:	bl	25ae8 <__assert_fail@plt+0x12f30>
   25464:	tst	r0, #1
   25468:	beq	25530 <__assert_fail@plt+0x12978>
   2546c:	mov	r0, #0
   25470:	str	r0, [sp, #12]
   25474:	str	r0, [sp, #8]
   25478:	ldr	r0, [sp, #24]
   2547c:	ldr	r1, [sp, #20]
   25480:	ldr	r2, [sp, #8]
   25484:	ldr	r3, [sp, #12]
   25488:	mov	ip, sp
   2548c:	str	r1, [ip]
   25490:	add	r1, sp, #28
   25494:	vldr	d0, [pc, #180]	; 25550 <__assert_fail@plt+0x12998>
   25498:	bl	25b38 <__assert_fail@plt+0x12f80>
   2549c:	tst	r0, #1
   254a0:	beq	25508 <__assert_fail@plt+0x12950>
   254a4:	ldr	r0, [fp, #-8]
   254a8:	ldr	r1, [sp, #24]
   254ac:	bl	1b994 <__assert_fail@plt+0x8ddc>
   254b0:	ldr	r1, [pc, #160]	; 25558 <__assert_fail@plt+0x129a0>
   254b4:	str	r0, [fp, #-20]	; 0xffffffec
   254b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   254bc:	ldr	r2, [sp, #28]
   254c0:	str	r2, [r0, #40]	; 0x28
   254c4:	ldr	r2, [sp, #32]
   254c8:	str	r2, [r0, #44]	; 0x2c
   254cc:	ldr	r2, [sp, #36]	; 0x24
   254d0:	str	r2, [r0, #48]	; 0x30
   254d4:	ldr	r2, [sp, #40]	; 0x28
   254d8:	str	r2, [r0, #52]	; 0x34
   254dc:	ldr	r0, [sp, #36]	; 0x24
   254e0:	sdiv	r0, r0, r1
   254e4:	vmov	s0, r0
   254e8:	vcvt.f32.s32	s0, s0
   254ec:	bl	22824 <__assert_fail@plt+0xfc6c>
   254f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   254f4:	vstr	s0, [r0, #28]
   254f8:	movw	r0, #1
   254fc:	and	r0, r0, #1
   25500:	strb	r0, [fp, #-1]
   25504:	b	2553c <__assert_fail@plt+0x12984>
   25508:	movw	r0, #37223	; 0x9167
   2550c:	movt	r0, #7
   25510:	bl	12864 <gettext@plt>
   25514:	ldr	r3, [sp, #24]
   25518:	movw	r1, #1
   2551c:	str	r0, [sp, #4]
   25520:	mov	r0, r1
   25524:	movw	r1, #0
   25528:	ldr	r2, [sp, #4]
   2552c:	bl	12780 <error@plt>
   25530:	movw	r0, #0
   25534:	and	r0, r0, #1
   25538:	strb	r0, [fp, #-1]
   2553c:	ldrb	r0, [fp, #-1]
   25540:	and	r0, r0, #1
   25544:	mov	sp, fp
   25548:	pop	{fp, pc}
   2554c:	nop	{0}
   25550:	andeq	r0, r0, r0
   25554:	rscsmi	r1, r5, r0, lsl #16
   25558:	andeq	r5, r1, r0, lsl #3
   2555c:	nop	{0}
   25560:	push	{fp, lr}
   25564:	mov	fp, sp
   25568:	sub	sp, sp, #48	; 0x30
   2556c:	str	r0, [fp, #-8]
   25570:	str	r1, [fp, #-12]
   25574:	str	r2, [fp, #-16]
   25578:	ldr	r0, [fp, #-12]
   2557c:	ldr	r1, [fp, #-16]
   25580:	sub	r2, fp, #20
   25584:	bl	25ae8 <__assert_fail@plt+0x12f30>
   25588:	tst	r0, #1
   2558c:	beq	256e8 <__assert_fail@plt+0x12b30>
   25590:	ldr	r0, [fp, #-20]	; 0xffffffec
   25594:	bl	124a4 <getpwnam@plt>
   25598:	str	r0, [sp, #16]
   2559c:	bl	129fc <endpwent@plt>
   255a0:	ldr	r0, [sp, #16]
   255a4:	movw	r1, #0
   255a8:	cmp	r0, r1
   255ac:	beq	255c0 <__assert_fail@plt+0x12a08>
   255b0:	ldr	r0, [sp, #16]
   255b4:	ldr	r0, [r0, #8]
   255b8:	str	r0, [sp, #20]
   255bc:	b	25694 <__assert_fail@plt+0x12adc>
   255c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   255c4:	movw	r1, #35758	; 0x8bae
   255c8:	movt	r1, #7
   255cc:	bl	12bac <strspn@plt>
   255d0:	str	r0, [sp, #12]
   255d4:	ldr	r0, [sp, #12]
   255d8:	cmp	r0, #0
   255dc:	beq	25614 <__assert_fail@plt+0x12a5c>
   255e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   255e4:	ldr	r1, [sp, #12]
   255e8:	add	r0, r0, r1
   255ec:	ldrb	r0, [r0]
   255f0:	cmp	r0, #0
   255f4:	bne	25614 <__assert_fail@plt+0x12a5c>
   255f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   255fc:	movw	r1, #57480	; 0xe088
   25600:	movt	r1, #8
   25604:	ldr	r1, [r1, #72]	; 0x48
   25608:	bl	2b4e8 <__assert_fail@plt+0x18930>
   2560c:	str	r0, [sp, #20]
   25610:	b	25690 <__assert_fail@plt+0x12ad8>
   25614:	ldr	r0, [fp, #-20]	; 0xffffffec
   25618:	ldrsb	r0, [r0]
   2561c:	cmp	r0, #0
   25620:	beq	2566c <__assert_fail@plt+0x12ab4>
   25624:	movw	r0, #37252	; 0x9184
   25628:	movt	r0, #7
   2562c:	bl	12864 <gettext@plt>
   25630:	movw	r1, #57480	; 0xe088
   25634:	movt	r1, #8
   25638:	ldr	r1, [r1, #72]	; 0x48
   2563c:	ldr	r2, [fp, #-20]	; 0xffffffec
   25640:	movw	r3, #0
   25644:	str	r0, [sp, #8]
   25648:	mov	r0, r3
   2564c:	bl	487d0 <__assert_fail@plt+0x35c18>
   25650:	movw	r1, #1
   25654:	str	r0, [sp, #4]
   25658:	mov	r0, r1
   2565c:	movw	r1, #0
   25660:	ldr	r2, [sp, #8]
   25664:	ldr	r3, [sp, #4]
   25668:	bl	12780 <error@plt>
   2566c:	movw	r0, #37287	; 0x91a7
   25670:	movt	r0, #7
   25674:	bl	12864 <gettext@plt>
   25678:	movw	r1, #1
   2567c:	str	r0, [sp]
   25680:	mov	r0, r1
   25684:	movw	r1, #0
   25688:	ldr	r2, [sp]
   2568c:	bl	12780 <error@plt>
   25690:	b	25694 <__assert_fail@plt+0x12adc>
   25694:	ldr	r0, [fp, #-8]
   25698:	ldr	r1, [fp, #-20]	; 0xffffffec
   2569c:	bl	1b994 <__assert_fail@plt+0x8ddc>
   256a0:	str	r0, [sp, #24]
   256a4:	ldr	r0, [sp, #20]
   256a8:	ldr	r1, [sp, #24]
   256ac:	str	r0, [r1, #40]	; 0x28
   256b0:	ldr	r0, [sp, #24]
   256b4:	ldr	r0, [r0, #40]	; 0x28
   256b8:	add	r1, pc, #72	; 0x48
   256bc:	add	r2, r1, #8
   256c0:	cmp	r0, #100	; 0x64
   256c4:	movcc	r1, r2
   256c8:	vldr	d16, [r1]
   256cc:	vcvt.f32.f64	s0, d16
   256d0:	ldr	r0, [sp, #24]
   256d4:	vstr	s0, [r0, #28]
   256d8:	movw	r0, #1
   256dc:	and	r0, r0, #1
   256e0:	strb	r0, [fp, #-1]
   256e4:	b	256f4 <__assert_fail@plt+0x12b3c>
   256e8:	movw	r0, #0
   256ec:	and	r0, r0, #1
   256f0:	strb	r0, [fp, #-1]
   256f4:	ldrb	r0, [fp, #-1]
   256f8:	and	r0, r0, #1
   256fc:	mov	sp, fp
   25700:	pop	{fp, pc}
   25704:	nop	{0}
   25708:	ldmibls	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
   2570c:	svccc	0x00c99999
   25710:	bvc	ff8775d0 <stdout@@GLIBC_2.4+0xff7e9e9c>
   25714:	svccc	0x00efae14
   25718:	push	{fp, lr}
   2571c:	mov	fp, sp
   25720:	sub	sp, sp, #16
   25724:	str	r0, [fp, #-4]
   25728:	str	r1, [sp, #8]
   2572c:	str	r2, [sp, #4]
   25730:	ldr	r0, [fp, #-4]
   25734:	ldr	r1, [sp, #8]
   25738:	ldr	r2, [sp, #4]
   2573c:	movw	r3, #36434	; 0x8e52
   25740:	movt	r3, #7
   25744:	movw	ip, #24560	; 0x5ff0
   25748:	movt	ip, #1
   2574c:	str	ip, [sp]
   25750:	bl	272a8 <__assert_fail@plt+0x146f0>
   25754:	and	r0, r0, #1
   25758:	mov	sp, fp
   2575c:	pop	{fp, pc}
   25760:	push	{fp, lr}
   25764:	mov	fp, sp
   25768:	sub	sp, sp, #16
   2576c:	str	r0, [fp, #-4]
   25770:	str	r1, [sp, #8]
   25774:	str	r2, [sp, #4]
   25778:	ldr	r0, [sp, #8]
   2577c:	ldr	r1, [sp, #4]
   25780:	ldr	r2, [fp, #-4]
   25784:	movw	r3, #27484	; 0x6b5c
   25788:	movt	r3, #1
   2578c:	bl	27764 <__assert_fail@plt+0x14bac>
   25790:	and	r0, r0, #1
   25794:	mov	sp, fp
   25798:	pop	{fp, pc}
   2579c:	push	{fp, lr}
   257a0:	mov	fp, sp
   257a4:	sub	sp, sp, #16
   257a8:	str	r0, [fp, #-4]
   257ac:	str	r1, [sp, #8]
   257b0:	str	r2, [sp, #4]
   257b4:	bl	26d4c <__assert_fail@plt+0x14194>
   257b8:	and	r0, r0, #1
   257bc:	mov	sp, fp
   257c0:	pop	{fp, pc}
   257c4:	push	{fp, lr}
   257c8:	mov	fp, sp
   257cc:	sub	sp, sp, #16
   257d0:	str	r0, [fp, #-4]
   257d4:	str	r1, [sp, #8]
   257d8:	str	r2, [sp, #4]
   257dc:	ldr	r0, [fp, #-4]
   257e0:	bl	1b9fc <__assert_fail@plt+0x8e44>
   257e4:	str	r0, [sp]
   257e8:	ldr	r0, [sp]
   257ec:	movw	r1, #0
   257f0:	strb	r1, [r0, #19]
   257f4:	ldr	r0, [sp]
   257f8:	strb	r1, [r0, #18]
   257fc:	ldr	r0, [sp]
   25800:	vmov.f32	s0, #112	; 0x3f800000  1.0
   25804:	vstr	s0, [r0, #28]
   25808:	movw	r0, #1
   2580c:	and	r0, r0, #1
   25810:	mov	sp, fp
   25814:	pop	{fp, pc}
   25818:	push	{fp, lr}
   2581c:	mov	fp, sp
   25820:	sub	sp, sp, #16
   25824:	str	r0, [fp, #-4]
   25828:	str	r1, [sp, #8]
   2582c:	str	r2, [sp, #4]
   25830:	movw	r0, #0
   25834:	bl	1ba20 <__assert_fail@plt+0x8e68>
   25838:	push	{fp, lr}
   2583c:	mov	fp, sp
   25840:	sub	sp, sp, #40	; 0x28
   25844:	str	r0, [fp, #-4]
   25848:	str	r1, [fp, #-8]
   2584c:	str	r2, [fp, #-12]
   25850:	movw	r0, #0
   25854:	strb	r0, [fp, #-13]
   25858:	movw	r0, #22176	; 0x56a0
   2585c:	movt	r0, #7
   25860:	bl	29ae4 <__assert_fail@plt+0x16f2c>
   25864:	movw	r0, #37329	; 0x91d1
   25868:	movt	r0, #7
   2586c:	bl	12864 <gettext@plt>
   25870:	bl	124f8 <printf@plt>
   25874:	movw	r1, #37348	; 0x91e4
   25878:	movt	r1, #7
   2587c:	str	r0, [sp, #16]
   25880:	mov	r0, r1
   25884:	bl	124f8 <printf@plt>
   25888:	movw	r1, #1
   2588c:	strb	r1, [fp, #-13]
   25890:	movw	r1, #57480	; 0xe088
   25894:	movt	r1, #8
   25898:	ldrb	r1, [r1, #56]	; 0x38
   2589c:	tst	r1, #1
   258a0:	movw	r1, #37380	; 0x9204
   258a4:	movt	r1, #7
   258a8:	movw	r2, #37372	; 0x91fc
   258ac:	movt	r2, #7
   258b0:	movne	r1, r2
   258b4:	movw	r2, #37356	; 0x91ec
   258b8:	movt	r2, #7
   258bc:	str	r0, [sp, #12]
   258c0:	mov	r0, r2
   258c4:	bl	124f8 <printf@plt>
   258c8:	movw	r1, #1
   258cc:	strb	r1, [fp, #-13]
   258d0:	movw	r1, #37389	; 0x920d
   258d4:	movt	r1, #7
   258d8:	str	r0, [sp, #8]
   258dc:	mov	r0, r1
   258e0:	bl	124f8 <printf@plt>
   258e4:	movw	r1, #1
   258e8:	strb	r1, [fp, #-13]
   258ec:	str	r0, [sp, #4]
   258f0:	bl	124b0 <is_selinux_enabled@plt>
   258f4:	movw	r1, #0
   258f8:	cmp	r1, r0
   258fc:	bge	25914 <__assert_fail@plt+0x12d5c>
   25900:	movw	r0, #37408	; 0x9220
   25904:	movt	r0, #7
   25908:	bl	124f8 <printf@plt>
   2590c:	movw	r1, #1
   25910:	strb	r1, [fp, #-13]
   25914:	movw	r0, #0
   25918:	str	r0, [sp, #20]
   2591c:	add	r0, sp, #20
   25920:	bl	13548 <__assert_fail@plt+0x990>
   25924:	tst	r0, #1
   25928:	beq	25968 <__assert_fail@plt+0x12db0>
   2592c:	movw	r0, #37417	; 0x9229
   25930:	movt	r0, #7
   25934:	bl	124f8 <printf@plt>
   25938:	movw	r1, #1
   2593c:	strb	r1, [fp, #-13]
   25940:	ldr	r1, [sp, #20]
   25944:	and	r1, r1, #512	; 0x200
   25948:	cmp	r1, #0
   2594c:	beq	2595c <__assert_fail@plt+0x12da4>
   25950:	movw	r0, #37422	; 0x922e
   25954:	movt	r0, #7
   25958:	bl	124f8 <printf@plt>
   2595c:	movw	r0, #24779	; 0x60cb
   25960:	movt	r0, #7
   25964:	bl	124f8 <printf@plt>
   25968:	movw	r0, #57480	; 0xe088
   2596c:	movt	r0, #8
   25970:	ldrh	r1, [r0, #68]	; 0x44
   25974:	movw	r0, #37432	; 0x9238
   25978:	movt	r0, #7
   2597c:	bl	124f8 <printf@plt>
   25980:	movw	r1, #1
   25984:	strb	r1, [fp, #-13]
   25988:	ldrb	r1, [fp, #-13]
   2598c:	tst	r1, #1
   25990:	bne	259a0 <__assert_fail@plt+0x12de8>
   25994:	movw	r0, #37447	; 0x9247
   25998:	movt	r0, #7
   2599c:	bl	124f8 <printf@plt>
   259a0:	movw	r0, #29908	; 0x74d4
   259a4:	movt	r0, #7
   259a8:	bl	124f8 <printf@plt>
   259ac:	movw	r1, #0
   259b0:	str	r0, [sp]
   259b4:	mov	r0, r1
   259b8:	bl	1284c <exit@plt>
   259bc:	nop	{0}
   259c0:	push	{fp, lr}
   259c4:	mov	fp, sp
   259c8:	sub	sp, sp, #64	; 0x40
   259cc:	str	r0, [fp, #-8]
   259d0:	str	r1, [fp, #-12]
   259d4:	str	r2, [fp, #-16]
   259d8:	str	r3, [fp, #-20]	; 0xffffffec
   259dc:	ldr	r0, [fp, #-16]
   259e0:	ldr	r0, [r0]
   259e4:	str	r0, [fp, #-28]	; 0xffffffe4
   259e8:	ldr	r0, [fp, #-12]
   259ec:	ldr	r1, [fp, #-16]
   259f0:	sub	r2, fp, #24
   259f4:	bl	25ae8 <__assert_fail@plt+0x12f30>
   259f8:	tst	r0, #1
   259fc:	beq	25ac0 <__assert_fail@plt+0x12f08>
   25a00:	movw	r0, #57480	; 0xe088
   25a04:	movt	r0, #8
   25a08:	vldr	d16, [r0, #28]
   25a0c:	vstr	d16, [sp, #8]
   25a10:	ldr	r0, [fp, #-20]	; 0xffffffec
   25a14:	str	r0, [sp, #20]
   25a18:	ldr	r0, [sp, #8]
   25a1c:	movw	r1, #20864	; 0x5180
   25a20:	movt	r1, #1
   25a24:	add	r0, r0, r1
   25a28:	str	r0, [sp, #8]
   25a2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25a30:	ldr	r2, [sp, #8]
   25a34:	ldr	r3, [sp, #12]
   25a38:	movw	r1, #34221	; 0x85ad
   25a3c:	movt	r1, #7
   25a40:	mov	ip, sp
   25a44:	str	r1, [ip]
   25a48:	add	r1, sp, #20
   25a4c:	vldr	d0, [pc, #140]	; 25ae0 <__assert_fail@plt+0x12f28>
   25a50:	bl	25b38 <__assert_fail@plt+0x12f80>
   25a54:	tst	r0, #1
   25a58:	beq	25ab0 <__assert_fail@plt+0x12ef8>
   25a5c:	ldr	r0, [fp, #-8]
   25a60:	ldr	r1, [fp, #-24]	; 0xffffffe8
   25a64:	bl	1b994 <__assert_fail@plt+0x8ddc>
   25a68:	str	r0, [sp, #4]
   25a6c:	ldr	r0, [sp, #4]
   25a70:	ldr	r1, [sp, #20]
   25a74:	str	r1, [r0, #40]	; 0x28
   25a78:	ldr	r1, [sp, #24]
   25a7c:	str	r1, [r0, #44]	; 0x2c
   25a80:	ldr	r1, [sp, #28]
   25a84:	str	r1, [r0, #48]	; 0x30
   25a88:	ldr	r1, [sp, #32]
   25a8c:	str	r1, [r0, #52]	; 0x34
   25a90:	ldr	r0, [sp, #28]
   25a94:	bl	227d8 <__assert_fail@plt+0xfc20>
   25a98:	ldr	r0, [sp, #4]
   25a9c:	vstr	s0, [r0, #28]
   25aa0:	movw	r0, #1
   25aa4:	and	r0, r0, #1
   25aa8:	strb	r0, [fp, #-1]
   25aac:	b	25acc <__assert_fail@plt+0x12f14>
   25ab0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   25ab4:	ldr	r1, [fp, #-16]
   25ab8:	str	r0, [r1]
   25abc:	b	25ac0 <__assert_fail@plt+0x12f08>
   25ac0:	movw	r0, #0
   25ac4:	and	r0, r0, #1
   25ac8:	strb	r0, [fp, #-1]
   25acc:	ldrb	r0, [fp, #-1]
   25ad0:	and	r0, r0, #1
   25ad4:	mov	sp, fp
   25ad8:	pop	{fp, pc}
   25adc:	nop	{0}
   25ae0:	andeq	r0, r0, r0
   25ae4:	submi	r0, lr, r0
   25ae8:	push	{fp, lr}
   25aec:	mov	fp, sp
   25af0:	sub	sp, sp, #24
   25af4:	str	r0, [fp, #-4]
   25af8:	str	r1, [fp, #-8]
   25afc:	str	r2, [sp, #12]
   25b00:	ldr	r0, [fp, #-4]
   25b04:	ldr	r1, [fp, #-8]
   25b08:	add	r2, sp, #8
   25b0c:	bl	25d74 <__assert_fail@plt+0x131bc>
   25b10:	and	r0, r0, #1
   25b14:	strb	r0, [sp, #7]
   25b18:	ldr	r0, [sp, #8]
   25b1c:	ldr	r1, [sp, #12]
   25b20:	str	r0, [r1]
   25b24:	ldrb	r0, [sp, #7]
   25b28:	and	r0, r0, #1
   25b2c:	mov	sp, fp
   25b30:	pop	{fp, pc}
   25b34:	nop	{0}
   25b38:	push	{fp, lr}
   25b3c:	mov	fp, sp
   25b40:	sub	sp, sp, #64	; 0x40
   25b44:	ldr	ip, [fp, #8]
   25b48:	str	r2, [fp, #-12]
   25b4c:	str	r3, [fp, #-8]
   25b50:	str	r0, [fp, #-16]
   25b54:	str	r1, [fp, #-20]	; 0xffffffec
   25b58:	vstr	d0, [sp, #32]
   25b5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   25b60:	add	r1, r0, #4
   25b64:	sub	r0, fp, #16
   25b68:	str	ip, [sp, #4]
   25b6c:	bl	25e18 <__assert_fail@plt+0x13260>
   25b70:	tst	r0, #1
   25b74:	beq	25d48 <__assert_fail@plt+0x13190>
   25b78:	ldr	r0, [fp, #-20]	; 0xffffffec
   25b7c:	ldr	r0, [r0, #4]
   25b80:	cmp	r0, #0
   25b84:	str	r0, [sp]
   25b88:	beq	25bc0 <__assert_fail@plt+0x13008>
   25b8c:	b	25b90 <__assert_fail@plt+0x12fd8>
   25b90:	ldr	r0, [sp]
   25b94:	cmp	r0, #1
   25b98:	beq	25bb0 <__assert_fail@plt+0x12ff8>
   25b9c:	b	25ba0 <__assert_fail@plt+0x12fe8>
   25ba0:	ldr	r0, [sp]
   25ba4:	cmp	r0, #2
   25ba8:	beq	25bd0 <__assert_fail@plt+0x13018>
   25bac:	b	25bd4 <__assert_fail@plt+0x1301c>
   25bb0:	ldr	r0, [fp, #-20]	; 0xffffffec
   25bb4:	movw	r1, #0
   25bb8:	str	r1, [r0, #4]
   25bbc:	b	25bd4 <__assert_fail@plt+0x1301c>
   25bc0:	ldr	r0, [fp, #-20]	; 0xffffffec
   25bc4:	movw	r1, #1
   25bc8:	str	r1, [r0, #4]
   25bcc:	b	25bd4 <__assert_fail@plt+0x1301c>
   25bd0:	b	25bd4 <__assert_fail@plt+0x1301c>
   25bd4:	ldr	r0, [fp, #-16]
   25bd8:	movw	r1, #0
   25bdc:	add	r2, sp, #24
   25be0:	movw	r3, #10556	; 0x293c
   25be4:	movt	r3, #1
   25be8:	bl	4d078 <__assert_fail@plt+0x3a4c0>
   25bec:	tst	r0, #1
   25bf0:	beq	25d38 <__assert_fail@plt+0x13180>
   25bf4:	vldr	d16, [sp, #24]
   25bf8:	vldr	d17, [sp, #32]
   25bfc:	vmul.f64	d0, d16, d17
   25c00:	add	r0, sp, #16
   25c04:	bl	1281c <modf@plt>
   25c08:	vldr	d16, [pc, #344]	; 25d68 <__assert_fail@plt+0x131b0>
   25c0c:	vstr	d0, [sp, #8]
   25c10:	vldr	d17, [sp, #8]
   25c14:	vmul.f64	d17, d17, d16
   25c18:	vstr	d17, [sp, #8]
   25c1c:	vldr	d17, [sp, #8]
   25c20:	vcmpe.f64	d17, d16
   25c24:	vmrs	APSR_nzcv, fpscr
   25c28:	bpl	25c30 <__assert_fail@plt+0x13078>
   25c2c:	b	25c50 <__assert_fail@plt+0x13098>
   25c30:	movw	r0, #34292	; 0x85f4
   25c34:	movt	r0, #7
   25c38:	movw	r1, #33459	; 0x82b3
   25c3c:	movt	r1, #7
   25c40:	movw	r2, #3149	; 0xc4d
   25c44:	movw	r3, #34318	; 0x860e
   25c48:	movt	r3, #7
   25c4c:	bl	12bb8 <__assert_fail@plt>
   25c50:	ldr	r0, [fp, #-12]
   25c54:	vmov	s0, r0
   25c58:	vcvt.f64.s32	d16, s0
   25c5c:	vldr	d17, [sp, #16]
   25c60:	vsub.f64	d16, d16, d17
   25c64:	vcvt.s32.f64	s0, d16
   25c68:	vmov	r0, s0
   25c6c:	ldr	r1, [fp, #-20]	; 0xffffffec
   25c70:	str	r0, [r1, #8]
   25c74:	ldr	r0, [fp, #-12]
   25c78:	ldr	r1, [fp, #-20]	; 0xffffffec
   25c7c:	ldr	r1, [r1, #8]
   25c80:	cmp	r0, r1
   25c84:	movw	r0, #0
   25c88:	movlt	r0, #1
   25c8c:	and	r0, r0, #1
   25c90:	vldr	d16, [sp, #16]
   25c94:	vcmpe.f64	d16, #0.0
   25c98:	vmrs	APSR_nzcv, fpscr
   25c9c:	movw	r1, #0
   25ca0:	movmi	r1, #1
   25ca4:	and	r1, r1, #1
   25ca8:	cmp	r0, r1
   25cac:	beq	25cc4 <__assert_fail@plt+0x1310c>
   25cb0:	ldr	r2, [fp, #8]
   25cb4:	ldr	r3, [fp, #-16]
   25cb8:	movw	r0, #1
   25cbc:	movw	r1, #0
   25cc0:	bl	12780 <error@plt>
   25cc4:	ldr	r0, [fp, #-8]
   25cc8:	vmov	s0, r0
   25ccc:	vcvt.f64.s32	d16, s0
   25cd0:	vldr	d17, [sp, #8]
   25cd4:	vsub.f64	d16, d16, d17
   25cd8:	vcvt.s32.f64	s0, d16
   25cdc:	vmov	r0, s0
   25ce0:	ldr	r1, [fp, #-20]	; 0xffffffec
   25ce4:	str	r0, [r1, #12]
   25ce8:	ldr	r0, [fp, #-8]
   25cec:	vmov	s0, r0
   25cf0:	vcvt.f64.s32	d16, s0
   25cf4:	vldr	d17, [sp, #8]
   25cf8:	vcmpe.f64	d16, d17
   25cfc:	vmrs	APSR_nzcv, fpscr
   25d00:	bpl	25d28 <__assert_fail@plt+0x13170>
   25d04:	ldr	r0, [pc, #100]	; 25d70 <__assert_fail@plt+0x131b8>
   25d08:	ldr	r1, [fp, #-20]	; 0xffffffec
   25d0c:	ldr	r2, [r1, #12]
   25d10:	add	r0, r2, r0
   25d14:	str	r0, [r1, #12]
   25d18:	ldr	r0, [fp, #-20]	; 0xffffffec
   25d1c:	ldr	r1, [r0, #8]
   25d20:	sub	r1, r1, #1
   25d24:	str	r1, [r0, #8]
   25d28:	movw	r0, #1
   25d2c:	and	r0, r0, #1
   25d30:	strb	r0, [fp, #-1]
   25d34:	b	25d54 <__assert_fail@plt+0x1319c>
   25d38:	movw	r0, #0
   25d3c:	and	r0, r0, #1
   25d40:	strb	r0, [fp, #-1]
   25d44:	b	25d54 <__assert_fail@plt+0x1319c>
   25d48:	movw	r0, #0
   25d4c:	and	r0, r0, #1
   25d50:	strb	r0, [fp, #-1]
   25d54:	ldrb	r0, [fp, #-1]
   25d58:	and	r0, r0, #1
   25d5c:	mov	sp, fp
   25d60:	pop	{fp, pc}
   25d64:	nop	{0}
   25d68:	andeq	r0, r0, r0
   25d6c:	bicmi	ip, sp, r5, ror #26
   25d70:	blcc	fe6d8578 <stdout@@GLIBC_2.4+0xfe64ae44>
   25d74:	sub	sp, sp, #16
   25d78:	str	r0, [sp, #8]
   25d7c:	str	r1, [sp, #4]
   25d80:	str	r2, [sp]
   25d84:	ldr	r0, [sp, #8]
   25d88:	movw	r1, #0
   25d8c:	cmp	r0, r1
   25d90:	beq	25db4 <__assert_fail@plt+0x131fc>
   25d94:	ldr	r0, [sp, #8]
   25d98:	ldr	r1, [sp, #4]
   25d9c:	ldr	r1, [r1]
   25da0:	add	r0, r0, r1, lsl #2
   25da4:	ldr	r0, [r0]
   25da8:	movw	r1, #0
   25dac:	cmp	r0, r1
   25db0:	bne	25dd0 <__assert_fail@plt+0x13218>
   25db4:	ldr	r0, [sp]
   25db8:	movw	r1, #0
   25dbc:	str	r1, [r0]
   25dc0:	movw	r0, #0
   25dc4:	and	r0, r0, #1
   25dc8:	strb	r0, [sp, #15]
   25dcc:	b	25e08 <__assert_fail@plt+0x13250>
   25dd0:	ldr	r0, [sp, #8]
   25dd4:	ldr	r1, [sp, #4]
   25dd8:	ldr	r1, [r1]
   25ddc:	add	r0, r0, r1, lsl #2
   25de0:	ldr	r0, [r0]
   25de4:	ldr	r1, [sp]
   25de8:	str	r0, [r1]
   25dec:	ldr	r0, [sp, #4]
   25df0:	ldr	r1, [r0]
   25df4:	add	r1, r1, #1
   25df8:	str	r1, [r0]
   25dfc:	movw	r0, #1
   25e00:	and	r0, r0, #1
   25e04:	strb	r0, [sp, #15]
   25e08:	ldrb	r0, [sp, #15]
   25e0c:	and	r0, r0, #1
   25e10:	add	sp, sp, #16
   25e14:	bx	lr
   25e18:	sub	sp, sp, #12
   25e1c:	str	r0, [sp, #8]
   25e20:	str	r1, [sp, #4]
   25e24:	ldr	r0, [sp, #8]
   25e28:	ldr	r0, [r0]
   25e2c:	ldrb	r0, [r0]
   25e30:	mov	r1, r0
   25e34:	cmp	r0, #43	; 0x2b
   25e38:	str	r1, [sp]
   25e3c:	beq	25e54 <__assert_fail@plt+0x1329c>
   25e40:	b	25e44 <__assert_fail@plt+0x1328c>
   25e44:	ldr	r0, [sp]
   25e48:	cmp	r0, #45	; 0x2d
   25e4c:	beq	25e74 <__assert_fail@plt+0x132bc>
   25e50:	b	25e94 <__assert_fail@plt+0x132dc>
   25e54:	ldr	r0, [sp, #4]
   25e58:	movw	r1, #0
   25e5c:	str	r1, [r0]
   25e60:	ldr	r0, [sp, #8]
   25e64:	ldr	r1, [r0]
   25e68:	add	r1, r1, #1
   25e6c:	str	r1, [r0]
   25e70:	b	25ea0 <__assert_fail@plt+0x132e8>
   25e74:	ldr	r0, [sp, #4]
   25e78:	movw	r1, #1
   25e7c:	str	r1, [r0]
   25e80:	ldr	r0, [sp, #8]
   25e84:	ldr	r1, [r0]
   25e88:	add	r1, r1, #1
   25e8c:	str	r1, [r0]
   25e90:	b	25ea0 <__assert_fail@plt+0x132e8>
   25e94:	ldr	r0, [sp, #4]
   25e98:	movw	r1, #2
   25e9c:	str	r1, [r0]
   25ea0:	movw	r0, #1
   25ea4:	and	r0, r0, #1
   25ea8:	add	sp, sp, #12
   25eac:	bx	lr
   25eb0:	push	{fp, lr}
   25eb4:	mov	fp, sp
   25eb8:	sub	sp, sp, #32
   25ebc:	str	r0, [fp, #-8]
   25ec0:	str	r1, [fp, #-12]
   25ec4:	str	r2, [sp, #16]
   25ec8:	str	r3, [sp, #12]
   25ecc:	ldr	r0, [fp, #-8]
   25ed0:	ldr	r1, [fp, #-12]
   25ed4:	add	r2, sp, #8
   25ed8:	bl	25ae8 <__assert_fail@plt+0x12f30>
   25edc:	tst	r0, #1
   25ee0:	beq	25f44 <__assert_fail@plt+0x1338c>
   25ee4:	ldr	r0, [sp, #8]
   25ee8:	ldr	r1, [sp, #12]
   25eec:	str	r0, [r1]
   25ef0:	movw	r0, #57480	; 0xe088
   25ef4:	movt	r0, #8
   25ef8:	ldr	r0, [r0, #52]	; 0x34
   25efc:	ldr	r1, [sp, #8]
   25f00:	ldr	r2, [sp, #16]
   25f04:	str	r0, [sp, #4]
   25f08:	mov	r0, r1
   25f0c:	mov	r1, r2
   25f10:	ldr	r2, [sp, #4]
   25f14:	blx	r2
   25f18:	movw	r1, #0
   25f1c:	cmp	r1, r0
   25f20:	beq	25f34 <__assert_fail@plt+0x1337c>
   25f24:	bl	128d0 <__errno_location@plt>
   25f28:	ldr	r0, [r0]
   25f2c:	ldr	r1, [sp, #8]
   25f30:	bl	1da80 <__assert_fail@plt+0xaec8>
   25f34:	movw	r0, #1
   25f38:	and	r0, r0, #1
   25f3c:	strb	r0, [fp, #-1]
   25f40:	b	25f5c <__assert_fail@plt+0x133a4>
   25f44:	ldr	r0, [sp, #12]
   25f48:	movw	r1, #0
   25f4c:	str	r1, [r0]
   25f50:	movw	r0, #0
   25f54:	and	r0, r0, #1
   25f58:	strb	r0, [fp, #-1]
   25f5c:	ldrb	r0, [fp, #-1]
   25f60:	and	r0, r0, #1
   25f64:	mov	sp, fp
   25f68:	pop	{fp, pc}
   25f6c:	push	{fp, lr}
   25f70:	mov	fp, sp
   25f74:	sub	sp, sp, #16
   25f78:	str	r0, [fp, #-4]
   25f7c:	str	r1, [sp, #8]
   25f80:	str	r2, [sp, #4]
   25f84:	bl	25fa0 <__assert_fail@plt+0x133e8>
   25f88:	ldr	r1, [sp, #8]
   25f8c:	ldr	r2, [sp, #4]
   25f90:	bl	257c4 <__assert_fail@plt+0x12c0c>
   25f94:	and	r0, r0, #1
   25f98:	mov	sp, fp
   25f9c:	pop	{fp, pc}
   25fa0:	sub	sp, sp, #4
   25fa4:	movw	r0, #57012	; 0xdeb4
   25fa8:	movt	r0, #8
   25fac:	ldr	r0, [r0]
   25fb0:	movw	r1, #0
   25fb4:	cmp	r1, r0
   25fb8:	bne	2603c <__assert_fail@plt+0x13484>
   25fbc:	movw	r0, #0
   25fc0:	str	r0, [sp]
   25fc4:	ldr	r0, [sp]
   25fc8:	movw	r1, #37468	; 0x925c
   25fcc:	movt	r1, #7
   25fd0:	add	r0, r1, r0, lsl #4
   25fd4:	ldr	r0, [r0, #4]
   25fd8:	movw	r1, #0
   25fdc:	cmp	r0, r1
   25fe0:	beq	26038 <__assert_fail@plt+0x13480>
   25fe4:	ldr	r0, [sp]
   25fe8:	movw	r1, #37468	; 0x925c
   25fec:	movt	r1, #7
   25ff0:	add	r0, r1, r0, lsl #4
   25ff4:	ldr	r0, [r0]
   25ff8:	movw	r1, #1
   25ffc:	cmp	r1, r0
   26000:	bne	26024 <__assert_fail@plt+0x1346c>
   26004:	ldr	r0, [sp]
   26008:	movw	r1, #37468	; 0x925c
   2600c:	movt	r1, #7
   26010:	add	r0, r1, r0, lsl #4
   26014:	movw	r1, #57012	; 0xdeb4
   26018:	movt	r1, #8
   2601c:	str	r0, [r1]
   26020:	b	26038 <__assert_fail@plt+0x13480>
   26024:	b	26028 <__assert_fail@plt+0x13470>
   26028:	ldr	r0, [sp]
   2602c:	add	r0, r0, #1
   26030:	str	r0, [sp]
   26034:	b	25fc4 <__assert_fail@plt+0x1340c>
   26038:	b	2603c <__assert_fail@plt+0x13484>
   2603c:	movw	r0, #57012	; 0xdeb4
   26040:	movt	r0, #8
   26044:	ldr	r0, [r0]
   26048:	add	sp, sp, #4
   2604c:	bx	lr
   26050:	push	{fp, lr}
   26054:	mov	fp, sp
   26058:	sub	sp, sp, #160	; 0xa0
   2605c:	str	r0, [fp, #-8]
   26060:	str	r1, [fp, #-12]
   26064:	str	r2, [fp, #-16]
   26068:	str	r3, [fp, #-20]	; 0xffffffec
   2606c:	ldr	r0, [fp, #-12]
   26070:	ldr	r0, [r0, #12]
   26074:	str	r0, [fp, #-52]	; 0xffffffcc
   26078:	ldr	r0, [fp, #-16]
   2607c:	movw	r1, #0
   26080:	cmp	r0, r1
   26084:	beq	260a8 <__assert_fail@plt+0x134f0>
   26088:	ldr	r0, [fp, #-16]
   2608c:	ldr	r1, [fp, #-20]	; 0xffffffec
   26090:	ldr	r1, [r1]
   26094:	add	r0, r0, r1, lsl #2
   26098:	ldr	r0, [r0]
   2609c:	movw	r1, #0
   260a0:	cmp	r0, r1
   260a4:	bne	260b8 <__assert_fail@plt+0x13500>
   260a8:	movw	r0, #0
   260ac:	and	r0, r0, #1
   260b0:	strb	r0, [fp, #-1]
   260b4:	b	2683c <__assert_fail@plt+0x13c84>
   260b8:	ldr	r0, [fp, #-12]
   260bc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   260c0:	movw	r2, #34802	; 0x87f2
   260c4:	movt	r2, #7
   260c8:	bl	1b924 <__assert_fail@plt+0x8d6c>
   260cc:	str	r0, [fp, #-60]	; 0xffffffc4
   260d0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   260d4:	movw	r1, #1
   260d8:	strb	r1, [r0, #17]
   260dc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   260e0:	strb	r1, [r0, #16]
   260e4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   260e8:	movw	r1, #0
   260ec:	strb	r1, [r0, #18]
   260f0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   260f4:	strb	r1, [r0, #19]
   260f8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   260fc:	add	r0, r0, #40	; 0x28
   26100:	str	r0, [fp, #-64]	; 0xffffffc0
   26104:	ldr	r0, [fp, #-64]	; 0xffffffc0
   26108:	movw	r1, #0
   2610c:	str	r1, [r0, #104]	; 0x68
   26110:	ldr	r0, [fp, #-52]	; 0xffffffcc
   26114:	movw	r1, #24280	; 0x5ed8
   26118:	movt	r1, #1
   2611c:	cmp	r0, r1
   26120:	beq	26150 <__assert_fail@plt+0x13598>
   26124:	ldr	r0, [fp, #-52]	; 0xffffffcc
   26128:	movw	r1, #23980	; 0x5dac
   2612c:	movt	r1, #1
   26130:	cmp	r0, r1
   26134:	beq	26150 <__assert_fail@plt+0x13598>
   26138:	movw	r0, #1
   2613c:	strb	r0, [fp, #-37]	; 0xffffffdb
   26140:	ldr	r0, [fp, #-64]	; 0xffffffc0
   26144:	movw	r1, #0
   26148:	strb	r1, [r0, #100]	; 0x64
   2614c:	b	26170 <__assert_fail@plt+0x135b8>
   26150:	movw	r0, #0
   26154:	strb	r0, [fp, #-37]	; 0xffffffdb
   26158:	movw	r0, #57480	; 0xe088
   2615c:	movt	r0, #8
   26160:	movw	r1, #1
   26164:	strb	r1, [r0, #80]	; 0x50
   26168:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2616c:	strb	r1, [r0, #100]	; 0x64
   26170:	ldr	r0, [fp, #-52]	; 0xffffffcc
   26174:	movw	r1, #20740	; 0x5104
   26178:	movt	r1, #1
   2617c:	cmp	r0, r1
   26180:	beq	26198 <__assert_fail@plt+0x135e0>
   26184:	ldr	r0, [fp, #-52]	; 0xffffffcc
   26188:	movw	r1, #24280	; 0x5ed8
   2618c:	movt	r1, #1
   26190:	cmp	r0, r1
   26194:	bne	261c0 <__assert_fail@plt+0x13608>
   26198:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2619c:	movw	r1, #0
   261a0:	str	r1, [r0, #104]	; 0x68
   261a4:	movw	r0, #57480	; 0xe088
   261a8:	movt	r0, #8
   261ac:	movw	r1, #0
   261b0:	strb	r1, [r0, #14]
   261b4:	ldr	r0, [fp, #-8]
   261b8:	bl	2684c <__assert_fail@plt+0x13c94>
   261bc:	b	26210 <__assert_fail@plt+0x13658>
   261c0:	movw	r0, #55112	; 0xd748
   261c4:	movt	r0, #8
   261c8:	ldr	r0, [r0]
   261cc:	movw	r1, #0
   261d0:	cmp	r1, r0
   261d4:	beq	261dc <__assert_fail@plt+0x13624>
   261d8:	b	261fc <__assert_fail@plt+0x13644>
   261dc:	movw	r0, #34826	; 0x880a
   261e0:	movt	r0, #7
   261e4:	movw	r1, #33459	; 0x82b3
   261e8:	movt	r1, #7
   261ec:	movw	r2, #2937	; 0xb79
   261f0:	movw	r3, #34845	; 0x881d
   261f4:	movt	r3, #7
   261f8:	bl	12bb8 <__assert_fail@plt>
   261fc:	movw	r0, #55112	; 0xd748
   26200:	movt	r0, #8
   26204:	ldr	r0, [r0]
   26208:	ldr	r1, [fp, #-64]	; 0xffffffc0
   2620c:	str	r0, [r1, #104]	; 0x68
   26210:	ldr	r0, [fp, #-60]	; 0xffffffc4
   26214:	movw	r1, #0
   26218:	strb	r1, [r0, #40]	; 0x28
   2621c:	ldr	r0, [fp, #-20]	; 0xffffffec
   26220:	ldr	r0, [r0]
   26224:	str	r0, [fp, #-24]	; 0xffffffe8
   26228:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2622c:	str	r0, [fp, #-28]	; 0xffffffe4
   26230:	movw	r0, #0
   26234:	str	r0, [fp, #-36]	; 0xffffffdc
   26238:	str	r0, [fp, #-44]	; 0xffffffd4
   2623c:	str	r0, [fp, #-48]	; 0xffffffd0
   26240:	ldr	r0, [fp, #-16]
   26244:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26248:	add	r0, r0, r1, lsl #2
   2624c:	ldr	r0, [r0]
   26250:	movw	r1, #0
   26254:	cmp	r0, r1
   26258:	movw	r0, #0
   2625c:	str	r0, [sp, #64]	; 0x40
   26260:	beq	262b4 <__assert_fail@plt+0x136fc>
   26264:	ldr	r0, [fp, #-16]
   26268:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2626c:	add	r0, r0, r1, lsl #2
   26270:	ldr	r0, [r0]
   26274:	ldrb	r0, [r0]
   26278:	cmp	r0, #59	; 0x3b
   2627c:	movw	r0, #1
   26280:	str	r0, [sp, #60]	; 0x3c
   26284:	bne	262ac <__assert_fail@plt+0x136f4>
   26288:	ldr	r0, [fp, #-16]
   2628c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26290:	add	r0, r0, r1, lsl #2
   26294:	ldr	r0, [r0]
   26298:	ldrb	r0, [r0, #1]
   2629c:	cmp	r0, #0
   262a0:	movw	r0, #0
   262a4:	movne	r0, #1
   262a8:	str	r0, [sp, #60]	; 0x3c
   262ac:	ldr	r0, [sp, #60]	; 0x3c
   262b0:	str	r0, [sp, #64]	; 0x40
   262b4:	ldr	r0, [sp, #64]	; 0x40
   262b8:	tst	r0, #1
   262bc:	beq	263ec <__assert_fail@plt+0x13834>
   262c0:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   262c4:	tst	r0, #1
   262c8:	beq	26320 <__assert_fail@plt+0x13768>
   262cc:	ldr	r0, [fp, #-16]
   262d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   262d4:	add	r0, r0, r1, lsl #2
   262d8:	ldr	r0, [r0]
   262dc:	ldrb	r0, [r0]
   262e0:	cmp	r0, #43	; 0x2b
   262e4:	bne	26320 <__assert_fail@plt+0x13768>
   262e8:	ldr	r0, [fp, #-16]
   262ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   262f0:	add	r0, r0, r1, lsl #2
   262f4:	ldr	r0, [r0]
   262f8:	ldrb	r0, [r0, #1]
   262fc:	cmp	r0, #0
   26300:	bne	26320 <__assert_fail@plt+0x13768>
   26304:	ldr	r0, [fp, #-36]	; 0xffffffdc
   26308:	cmp	r0, #0
   2630c:	beq	26320 <__assert_fail@plt+0x13768>
   26310:	ldr	r0, [fp, #-60]	; 0xffffffc4
   26314:	movw	r1, #1
   26318:	strb	r1, [r0, #40]	; 0x28
   2631c:	b	263ec <__assert_fail@plt+0x13834>
   26320:	mov	r0, #0
   26324:	str	r0, [fp, #-36]	; 0xffffffdc
   26328:	ldr	r0, [fp, #-16]
   2632c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26330:	add	r0, r0, r1, lsl #2
   26334:	ldr	r0, [r0]
   26338:	movw	r1, #34925	; 0x886d
   2633c:	movt	r1, #7
   26340:	bl	2ff20 <__assert_fail@plt+0x1d368>
   26344:	movw	r1, #0
   26348:	cmp	r0, r1
   2634c:	beq	263d8 <__assert_fail@plt+0x13820>
   26350:	mov	r0, #1
   26354:	str	r0, [fp, #-36]	; 0xffffffdc
   26358:	ldr	r0, [fp, #-16]
   2635c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26360:	add	r0, r0, r1, lsl #2
   26364:	ldr	r0, [r0]
   26368:	str	r0, [fp, #-48]	; 0xffffffd0
   2636c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   26370:	add	r0, r0, #1
   26374:	str	r0, [fp, #-44]	; 0xffffffd4
   26378:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2637c:	movw	r1, #0
   26380:	cmp	r1, r0
   26384:	bne	263d4 <__assert_fail@plt+0x1381c>
   26388:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2638c:	movw	r1, #20740	; 0x5104
   26390:	movt	r1, #1
   26394:	cmp	r0, r1
   26398:	beq	263b0 <__assert_fail@plt+0x137f8>
   2639c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   263a0:	movw	r1, #24280	; 0x5ed8
   263a4:	movt	r1, #1
   263a8:	cmp	r0, r1
   263ac:	bne	263d4 <__assert_fail@plt+0x1381c>
   263b0:	movw	r0, #34928	; 0x8870
   263b4:	movt	r0, #7
   263b8:	bl	12864 <gettext@plt>
   263bc:	movw	r1, #1
   263c0:	str	r0, [sp, #56]	; 0x38
   263c4:	mov	r0, r1
   263c8:	movw	r1, #0
   263cc:	ldr	r2, [sp, #56]	; 0x38
   263d0:	bl	12780 <error@plt>
   263d4:	b	263d8 <__assert_fail@plt+0x13820>
   263d8:	b	263dc <__assert_fail@plt+0x13824>
   263dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   263e0:	add	r0, r0, #1
   263e4:	str	r0, [fp, #-28]	; 0xffffffe4
   263e8:	b	26240 <__assert_fail@plt+0x13688>
   263ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   263f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   263f4:	cmp	r0, r1
   263f8:	beq	26418 <__assert_fail@plt+0x13860>
   263fc:	ldr	r0, [fp, #-16]
   26400:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26404:	add	r0, r0, r1, lsl #2
   26408:	ldr	r0, [r0]
   2640c:	movw	r1, #0
   26410:	cmp	r0, r1
   26414:	bne	2643c <__assert_fail@plt+0x13884>
   26418:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2641c:	ldr	r1, [fp, #-20]	; 0xffffffec
   26420:	str	r0, [r1]
   26424:	ldr	r0, [fp, #-60]	; 0xffffffc4
   26428:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   2642c:	movw	r0, #0
   26430:	and	r0, r0, #1
   26434:	strb	r0, [fp, #-1]
   26438:	b	2683c <__assert_fail@plt+0x13c84>
   2643c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   26440:	ldrb	r0, [r0, #40]	; 0x28
   26444:	tst	r0, #1
   26448:	beq	265b0 <__assert_fail@plt+0x139f8>
   2644c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   26450:	movw	r1, #20740	; 0x5104
   26454:	movt	r1, #1
   26458:	cmp	r0, r1
   2645c:	bne	26470 <__assert_fail@plt+0x138b8>
   26460:	movw	r0, #35655	; 0x8b47
   26464:	movt	r0, #7
   26468:	str	r0, [fp, #-68]	; 0xffffffbc
   2646c:	b	2647c <__assert_fail@plt+0x138c4>
   26470:	movw	r0, #29909	; 0x74d5
   26474:	movt	r0, #7
   26478:	str	r0, [fp, #-68]	; 0xffffffbc
   2647c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   26480:	cmp	r0, #1
   26484:	ble	264b0 <__assert_fail@plt+0x138f8>
   26488:	movw	r0, #35042	; 0x88e2
   2648c:	movt	r0, #7
   26490:	bl	12864 <gettext@plt>
   26494:	ldr	r3, [fp, #-68]	; 0xffffffbc
   26498:	movw	r1, #1
   2649c:	str	r0, [sp, #52]	; 0x34
   264a0:	mov	r0, r1
   264a4:	movw	r1, #0
   264a8:	ldr	r2, [sp, #52]	; 0x34
   264ac:	bl	12780 <error@plt>
   264b0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   264b4:	bl	12888 <strlen@plt>
   264b8:	cmp	r0, #2
   264bc:	beq	265a8 <__assert_fail@plt+0x139f0>
   264c0:	add	r0, sp, #73	; 0x49
   264c4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   264c8:	movw	r1, #19
   264cc:	movw	r2, #35098	; 0x891a
   264d0:	movt	r2, #7
   264d4:	bl	128e8 <snprintf@plt>
   264d8:	str	r0, [sp, #68]	; 0x44
   264dc:	ldr	r0, [sp, #68]	; 0x44
   264e0:	cmp	r0, #19
   264e4:	bhi	264ec <__assert_fail@plt+0x13934>
   264e8:	b	2650c <__assert_fail@plt+0x13954>
   264ec:	movw	r0, #35115	; 0x892b
   264f0:	movt	r0, #7
   264f4:	movw	r1, #33459	; 0x82b3
   264f8:	movt	r1, #7
   264fc:	movw	r2, #3014	; 0xbc6
   26500:	movw	r3, #34845	; 0x881d
   26504:	movt	r3, #7
   26508:	bl	12bb8 <__assert_fail@plt>
   2650c:	movw	r0, #35136	; 0x8940
   26510:	movt	r0, #7
   26514:	bl	12864 <gettext@plt>
   26518:	add	r2, sp, #73	; 0x49
   2651c:	movw	r1, #57480	; 0xe088
   26520:	movt	r1, #8
   26524:	ldr	r1, [r1, #72]	; 0x48
   26528:	movw	r3, #0
   2652c:	str	r0, [sp, #48]	; 0x30
   26530:	mov	r0, r3
   26534:	bl	487d0 <__assert_fail@plt+0x35c18>
   26538:	movw	r1, #57480	; 0xe088
   2653c:	movt	r1, #8
   26540:	ldr	r1, [r1, #72]	; 0x48
   26544:	movw	r2, #1
   26548:	str	r0, [sp, #44]	; 0x2c
   2654c:	mov	r0, r2
   26550:	movw	r2, #34925	; 0x886d
   26554:	movt	r2, #7
   26558:	bl	487d0 <__assert_fail@plt+0x35c18>
   2655c:	movw	r1, #57480	; 0xe088
   26560:	movt	r1, #8
   26564:	ldr	r1, [r1, #72]	; 0x48
   26568:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2656c:	movw	r3, #2
   26570:	str	r0, [sp, #40]	; 0x28
   26574:	mov	r0, r3
   26578:	bl	487d0 <__assert_fail@plt+0x35c18>
   2657c:	movw	r1, #1
   26580:	str	r0, [sp, #36]	; 0x24
   26584:	mov	r0, r1
   26588:	movw	r1, #0
   2658c:	ldr	r2, [sp, #48]	; 0x30
   26590:	ldr	r3, [sp, #44]	; 0x2c
   26594:	ldr	ip, [sp, #40]	; 0x28
   26598:	str	ip, [sp]
   2659c:	ldr	lr, [sp, #36]	; 0x24
   265a0:	str	lr, [sp, #4]
   265a4:	bl	12780 <error@plt>
   265a8:	b	265ac <__assert_fail@plt+0x139f4>
   265ac:	b	265b0 <__assert_fail@plt+0x139f8>
   265b0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   265b4:	add	r0, r0, #4
   265b8:	mov	r1, #2048	; 0x800
   265bc:	bl	288e0 <__assert_fail@plt+0x15d28>
   265c0:	str	r0, [fp, #-56]	; 0xffffffc8
   265c4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   265c8:	cmp	r0, #0
   265cc:	str	r0, [sp, #32]
   265d0:	beq	26610 <__assert_fail@plt+0x13a58>
   265d4:	b	265d8 <__assert_fail@plt+0x13a20>
   265d8:	ldr	r0, [sp, #32]
   265dc:	sub	r1, r0, #1
   265e0:	cmp	r1, #1
   265e4:	bhi	26614 <__assert_fail@plt+0x13a5c>
   265e8:	b	265ec <__assert_fail@plt+0x13a34>
   265ec:	movw	r0, #35193	; 0x8979
   265f0:	movt	r0, #7
   265f4:	bl	12864 <gettext@plt>
   265f8:	movw	r1, #1
   265fc:	str	r0, [sp, #28]
   26600:	mov	r0, r1
   26604:	movw	r1, #0
   26608:	ldr	r2, [sp, #28]
   2660c:	bl	12780 <error@plt>
   26610:	b	26614 <__assert_fail@plt+0x13a5c>
   26614:	ldr	r0, [fp, #-64]	; 0xffffffc0
   26618:	add	r0, r0, #4
   2661c:	bl	28a5c <__assert_fail@plt+0x15ea4>
   26620:	ldr	r0, [fp, #-64]	; 0xffffffc0
   26624:	movw	r1, #31304	; 0x7a48
   26628:	movt	r1, #1
   2662c:	str	r1, [r0, #36]	; 0x24
   26630:	ldr	r0, [fp, #-60]	; 0xffffffc4
   26634:	ldrb	r0, [r0, #40]	; 0x28
   26638:	tst	r0, #1
   2663c:	beq	26724 <__assert_fail@plt+0x13b6c>
   26640:	ldr	r0, [fp, #-64]	; 0xffffffc0
   26644:	movw	r1, #0
   26648:	str	r1, [r0, #92]	; 0x5c
   2664c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   26650:	str	r1, [r0, #28]
   26654:	ldr	r0, [fp, #-64]	; 0xffffffc0
   26658:	str	r1, [r0, #24]
   2665c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   26660:	str	r1, [r0, #40]	; 0x28
   26664:	ldr	r0, [fp, #-64]	; 0xffffffc0
   26668:	str	r1, [r0, #44]	; 0x2c
   2666c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   26670:	ldr	r1, [fp, #-24]	; 0xffffffe8
   26674:	sub	r0, r0, r1
   26678:	sub	r0, r0, #1
   2667c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   26680:	str	r0, [r1, #32]
   26684:	ldr	r0, [fp, #-64]	; 0xffffffc0
   26688:	add	r0, r0, #4
   2668c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   26690:	add	r1, r1, #48	; 0x30
   26694:	ldr	r2, [fp, #-64]	; 0xffffffc0
   26698:	bl	28ad0 <__assert_fail@plt+0x15f18>
   2669c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   266a0:	str	r0, [fp, #-32]	; 0xffffffe0
   266a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   266a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   266ac:	sub	r1, r1, #1
   266b0:	cmp	r0, r1
   266b4:	bge	26720 <__assert_fail@plt+0x13b68>
   266b8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   266bc:	add	r1, r0, #4
   266c0:	add	r0, r0, #48	; 0x30
   266c4:	ldr	r2, [fp, #-16]
   266c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   266cc:	ldr	r3, [r2, r3, lsl #2]!
   266d0:	ldr	r2, [r2]
   266d4:	str	r0, [sp, #24]
   266d8:	mov	r0, r2
   266dc:	str	r1, [sp, #20]
   266e0:	str	r3, [sp, #16]
   266e4:	bl	12888 <strlen@plt>
   266e8:	add	r3, r0, #1
   266ec:	ldr	r0, [sp, #20]
   266f0:	ldr	r1, [sp, #24]
   266f4:	ldr	r2, [sp, #16]
   266f8:	movw	ip, #0
   266fc:	str	ip, [sp]
   26700:	str	ip, [sp, #4]
   26704:	movw	ip, #1
   26708:	str	ip, [sp, #8]
   2670c:	bl	27e84 <__assert_fail@plt+0x152cc>
   26710:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26714:	add	r0, r0, #1
   26718:	str	r0, [fp, #-32]	; 0xffffffe0
   2671c:	b	266a4 <__assert_fail@plt+0x13aec>
   26720:	b	267f4 <__assert_fail@plt+0x13c3c>
   26724:	ldr	r0, [fp, #-28]	; 0xffffffe4
   26728:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2672c:	sub	r0, r0, r1
   26730:	ldr	r1, [fp, #-64]	; 0xffffffc0
   26734:	str	r0, [r1, #96]	; 0x60
   26738:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2673c:	movw	r1, #34925	; 0x886d
   26740:	movt	r1, #7
   26744:	str	r1, [r0, #28]
   26748:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2674c:	ldr	r0, [r0, #28]
   26750:	bl	12888 <strlen@plt>
   26754:	ldr	r1, [fp, #-64]	; 0xffffffc0
   26758:	str	r0, [r1, #24]
   2675c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   26760:	mov	r1, #0
   26764:	str	r1, [r0, #40]	; 0x28
   26768:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2676c:	str	r1, [r0, #44]	; 0x2c
   26770:	ldr	r0, [fp, #-64]	; 0xffffffc0
   26774:	ldr	r0, [r0, #96]	; 0x60
   26778:	lsl	r0, r0, #2
   2677c:	bl	4a2f0 <__assert_fail@plt+0x37738>
   26780:	ldr	r1, [fp, #-64]	; 0xffffffc0
   26784:	str	r0, [r1, #92]	; 0x5c
   26788:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2678c:	add	r0, r0, #4
   26790:	ldr	r1, [fp, #-64]	; 0xffffffc0
   26794:	add	r1, r1, #48	; 0x30
   26798:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2679c:	bl	28ad0 <__assert_fail@plt+0x15f18>
   267a0:	movw	r0, #0
   267a4:	str	r0, [fp, #-32]	; 0xffffffe0
   267a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   267ac:	ldr	r1, [fp, #-64]	; 0xffffffc0
   267b0:	ldr	r1, [r1, #96]	; 0x60
   267b4:	cmp	r0, r1
   267b8:	bge	267f0 <__assert_fail@plt+0x13c38>
   267bc:	ldr	r0, [fp, #-16]
   267c0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   267c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   267c8:	add	r2, r1, r2
   267cc:	ldr	r0, [r0, r2, lsl #2]
   267d0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   267d4:	ldr	r2, [r2, #92]	; 0x5c
   267d8:	add	r1, r2, r1, lsl #2
   267dc:	str	r0, [r1]
   267e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   267e4:	add	r0, r0, #1
   267e8:	str	r0, [fp, #-32]	; 0xffffffe0
   267ec:	b	267a8 <__assert_fail@plt+0x13bf0>
   267f0:	b	267f4 <__assert_fail@plt+0x13c3c>
   267f4:	ldr	r0, [fp, #-16]
   267f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   267fc:	add	r0, r0, r1, lsl #2
   26800:	ldr	r0, [r0]
   26804:	movw	r1, #0
   26808:	cmp	r0, r1
   2680c:	bne	26820 <__assert_fail@plt+0x13c68>
   26810:	ldr	r0, [fp, #-28]	; 0xffffffe4
   26814:	ldr	r1, [fp, #-20]	; 0xffffffec
   26818:	str	r0, [r1]
   2681c:	b	26830 <__assert_fail@plt+0x13c78>
   26820:	ldr	r0, [fp, #-28]	; 0xffffffe4
   26824:	add	r0, r0, #1
   26828:	ldr	r1, [fp, #-20]	; 0xffffffec
   2682c:	str	r0, [r1]
   26830:	movw	r0, #1
   26834:	and	r0, r0, #1
   26838:	strb	r0, [fp, #-1]
   2683c:	ldrb	r0, [fp, #-1]
   26840:	and	r0, r0, #1
   26844:	mov	sp, fp
   26848:	pop	{fp, pc}
   2684c:	push	{fp, lr}
   26850:	mov	fp, sp
   26854:	sub	sp, sp, #56	; 0x38
   26858:	str	r0, [fp, #-4]
   2685c:	movw	r0, #35645	; 0x8b3d
   26860:	movt	r0, #7
   26864:	bl	127bc <getenv@plt>
   26868:	str	r0, [fp, #-8]
   2686c:	movw	r0, #25006	; 0x61ae
   26870:	movt	r0, #7
   26874:	str	r0, [fp, #-12]
   26878:	ldr	r0, [fp, #-8]
   2687c:	movw	r1, #0
   26880:	cmp	r1, r0
   26884:	bne	2688c <__assert_fail@plt+0x13cd4>
   26888:	b	269f0 <__assert_fail@plt+0x13e38>
   2688c:	ldr	r0, [fp, #-8]
   26890:	ldr	r1, [fp, #-12]
   26894:	movw	r2, #1
   26898:	and	r2, r2, #1
   2689c:	sub	r3, fp, #16
   268a0:	sub	ip, fp, #20
   268a4:	str	ip, [sp]
   268a8:	bl	2b6bc <__assert_fail@plt+0x18b04>
   268ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   268b0:	movw	r1, #0
   268b4:	cmp	r1, r0
   268b8:	beq	268e4 <__assert_fail@plt+0x13d2c>
   268bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   268c0:	movw	r1, #1
   268c4:	cmp	r1, r0
   268c8:	bne	2690c <__assert_fail@plt+0x13d54>
   268cc:	ldr	r0, [fp, #-8]
   268d0:	ldr	r1, [fp, #-16]
   268d4:	add	r0, r0, r1
   268d8:	ldrb	r0, [r0]
   268dc:	cmp	r0, #46	; 0x2e
   268e0:	bne	2690c <__assert_fail@plt+0x13d54>
   268e4:	movw	r0, #35234	; 0x89a2
   268e8:	movt	r0, #7
   268ec:	bl	12864 <gettext@plt>
   268f0:	ldr	r3, [fp, #-4]
   268f4:	movw	r1, #1
   268f8:	str	r0, [sp, #28]
   268fc:	mov	r0, r1
   26900:	movw	r1, #0
   26904:	ldr	r2, [sp, #28]
   26908:	bl	12780 <error@plt>
   2690c:	ldr	r0, [fp, #-8]
   26910:	ldr	r1, [fp, #-16]
   26914:	add	r0, r0, r1
   26918:	ldrb	r0, [r0]
   2691c:	cmp	r0, #47	; 0x2f
   26920:	beq	269c0 <__assert_fail@plt+0x13e08>
   26924:	ldr	r0, [fp, #-8]
   26928:	ldr	r1, [fp, #-16]
   2692c:	add	r0, r0, r1
   26930:	ldr	r1, [fp, #-20]	; 0xffffffec
   26934:	bl	125a0 <strndup@plt>
   26938:	str	r0, [fp, #-24]	; 0xffffffe8
   2693c:	movw	r0, #35485	; 0x8a9d
   26940:	movt	r0, #7
   26944:	bl	12864 <gettext@plt>
   26948:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2694c:	movw	r2, #0
   26950:	cmp	r1, r2
   26954:	str	r0, [sp, #24]
   26958:	beq	26968 <__assert_fail@plt+0x13db0>
   2695c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26960:	str	r0, [sp, #20]
   26964:	b	26978 <__assert_fail@plt+0x13dc0>
   26968:	ldr	r0, [fp, #-8]
   2696c:	ldr	r1, [fp, #-16]
   26970:	add	r0, r0, r1
   26974:	str	r0, [sp, #20]
   26978:	ldr	r0, [sp, #20]
   2697c:	movw	r1, #0
   26980:	str	r0, [sp, #16]
   26984:	mov	r0, r1
   26988:	ldr	r1, [sp, #16]
   2698c:	bl	1d994 <__assert_fail@plt+0xaddc>
   26990:	ldr	r1, [fp, #-4]
   26994:	movw	r2, #1
   26998:	str	r0, [sp, #12]
   2699c:	mov	r0, r2
   269a0:	movw	r2, #0
   269a4:	str	r1, [sp, #8]
   269a8:	mov	r1, r2
   269ac:	ldr	r2, [sp, #24]
   269b0:	ldr	r3, [sp, #12]
   269b4:	ldr	ip, [sp, #8]
   269b8:	str	ip, [sp]
   269bc:	bl	12780 <error@plt>
   269c0:	b	269c4 <__assert_fail@plt+0x13e0c>
   269c4:	b	269c8 <__assert_fail@plt+0x13e10>
   269c8:	ldr	r0, [fp, #-8]
   269cc:	ldr	r1, [fp, #-12]
   269d0:	movw	r2, #0
   269d4:	and	r2, r2, #1
   269d8:	sub	r3, fp, #16
   269dc:	sub	ip, fp, #20
   269e0:	str	ip, [sp]
   269e4:	bl	2b6bc <__assert_fail@plt+0x18b04>
   269e8:	tst	r0, #1
   269ec:	bne	268ac <__assert_fail@plt+0x13cf4>
   269f0:	mov	sp, fp
   269f4:	pop	{fp, pc}
   269f8:	push	{fp, lr}
   269fc:	mov	fp, sp
   26a00:	sub	sp, sp, #16
   26a04:	str	r0, [fp, #-4]
   26a08:	str	r1, [sp, #8]
   26a0c:	ldr	r0, [fp, #-4]
   26a10:	bl	1b9fc <__assert_fail@plt+0x8e44>
   26a14:	str	r0, [sp, #4]
   26a18:	ldr	r0, [sp, #8]
   26a1c:	movw	r1, #0
   26a20:	cmp	r0, r1
   26a24:	beq	26a3c <__assert_fail@plt+0x13e84>
   26a28:	ldr	r0, [sp, #8]
   26a2c:	ldr	r1, [sp, #4]
   26a30:	add	r1, r1, #40	; 0x28
   26a34:	bl	26a78 <__assert_fail@plt+0x13ec0>
   26a38:	b	26a48 <__assert_fail@plt+0x13e90>
   26a3c:	ldr	r0, [sp, #4]
   26a40:	add	r0, r0, #40	; 0x28
   26a44:	bl	21f24 <__assert_fail@plt+0xf36c>
   26a48:	ldr	r0, [sp, #4]
   26a4c:	movw	r1, #1
   26a50:	strb	r1, [r0, #17]
   26a54:	ldr	r0, [sp, #4]
   26a58:	strb	r1, [r0, #16]
   26a5c:	ldr	r0, [sp, #4]
   26a60:	vmov.f32	s0, #112	; 0x3f800000  1.0
   26a64:	vstr	s0, [r0, #28]
   26a68:	movw	r0, #1
   26a6c:	and	r0, r0, #1
   26a70:	mov	sp, fp
   26a74:	pop	{fp, pc}
   26a78:	push	{fp, lr}
   26a7c:	mov	fp, sp
   26a80:	sub	sp, sp, #8
   26a84:	str	r0, [sp, #4]
   26a88:	str	r1, [sp]
   26a8c:	ldr	r0, [sp]
   26a90:	movw	r1, #0
   26a94:	str	r1, [r0]
   26a98:	mov	r0, r1
   26a9c:	bl	46704 <__assert_fail@plt+0x33b4c>
   26aa0:	ldr	r1, [sp]
   26aa4:	str	r0, [r1, #16]
   26aa8:	ldr	r0, [sp, #4]
   26aac:	movw	r1, #35659	; 0x8b4b
   26ab0:	movt	r1, #7
   26ab4:	bl	124c8 <strcmp@plt>
   26ab8:	cmp	r0, #0
   26abc:	bne	26aec <__assert_fail@plt+0x13f34>
   26ac0:	movw	r0, #55080	; 0xd728
   26ac4:	movt	r0, #8
   26ac8:	ldr	r0, [r0]
   26acc:	ldr	r1, [sp]
   26ad0:	str	r0, [r1, #4]
   26ad4:	movw	r0, #35671	; 0x8b57
   26ad8:	movt	r0, #7
   26adc:	bl	12864 <gettext@plt>
   26ae0:	ldr	r1, [sp]
   26ae4:	str	r0, [r1, #8]
   26ae8:	b	26b84 <__assert_fail@plt+0x13fcc>
   26aec:	ldr	r0, [sp, #4]
   26af0:	movw	r1, #35686	; 0x8b66
   26af4:	movt	r1, #7
   26af8:	bl	124c8 <strcmp@plt>
   26afc:	cmp	r0, #0
   26b00:	bne	26b30 <__assert_fail@plt+0x13f78>
   26b04:	movw	r0, #55092	; 0xd734
   26b08:	movt	r0, #8
   26b0c:	ldr	r0, [r0]
   26b10:	ldr	r1, [sp]
   26b14:	str	r0, [r1, #4]
   26b18:	movw	r0, #29969	; 0x7511
   26b1c:	movt	r0, #7
   26b20:	bl	12864 <gettext@plt>
   26b24:	ldr	r1, [sp]
   26b28:	str	r0, [r1, #8]
   26b2c:	b	26b80 <__assert_fail@plt+0x13fc8>
   26b30:	movw	r0, #57436	; 0xe05c
   26b34:	movt	r0, #8
   26b38:	ldr	r0, [r0, #36]	; 0x24
   26b3c:	ldr	r1, [sp, #4]
   26b40:	bl	1de20 <__assert_fail@plt+0xb268>
   26b44:	ldr	r1, [sp]
   26b48:	str	r0, [r1, #4]
   26b4c:	ldr	r0, [sp, #4]
   26b50:	ldr	r1, [sp]
   26b54:	str	r0, [r1, #8]
   26b58:	ldr	r0, [sp]
   26b5c:	ldr	r0, [r0, #4]
   26b60:	movw	r1, #0
   26b64:	cmp	r0, r1
   26b68:	bne	26b7c <__assert_fail@plt+0x13fc4>
   26b6c:	bl	128d0 <__errno_location@plt>
   26b70:	ldr	r0, [r0]
   26b74:	ldr	r1, [sp, #4]
   26b78:	bl	1dab0 <__assert_fail@plt+0xaef8>
   26b7c:	b	26b80 <__assert_fail@plt+0x13fc8>
   26b80:	b	26b84 <__assert_fail@plt+0x13fcc>
   26b84:	ldr	r0, [sp]
   26b88:	ldr	r0, [r0, #4]
   26b8c:	bl	26ba4 <__assert_fail@plt+0x13fec>
   26b90:	ldr	r1, [sp]
   26b94:	and	r0, r0, #1
   26b98:	strb	r0, [r1, #12]
   26b9c:	mov	sp, fp
   26ba0:	pop	{fp, pc}
   26ba4:	push	{fp, lr}
   26ba8:	mov	fp, sp
   26bac:	sub	sp, sp, #16
   26bb0:	str	r0, [sp, #8]
   26bb4:	ldr	r0, [sp, #8]
   26bb8:	bl	12948 <fileno@plt>
   26bbc:	str	r0, [sp, #4]
   26bc0:	ldr	r0, [sp, #4]
   26bc4:	mvn	r1, #0
   26bc8:	cmp	r1, r0
   26bcc:	bne	26be0 <__assert_fail@plt+0x14028>
   26bd0:	movw	r0, #0
   26bd4:	and	r0, r0, #1
   26bd8:	strb	r0, [fp, #-1]
   26bdc:	b	26c14 <__assert_fail@plt+0x1405c>
   26be0:	ldr	r0, [sp, #4]
   26be4:	bl	12b28 <isatty@plt>
   26be8:	cmp	r0, #0
   26bec:	movw	r0, #0
   26bf0:	movne	r0, #1
   26bf4:	tst	r0, #1
   26bf8:	movw	r0, #1
   26bfc:	moveq	r0, #0
   26c00:	cmp	r0, #0
   26c04:	movw	r0, #0
   26c08:	movne	r0, #1
   26c0c:	and	r0, r0, #1
   26c10:	strb	r0, [fp, #-1]
   26c14:	ldrb	r0, [fp, #-1]
   26c18:	and	r0, r0, #1
   26c1c:	mov	sp, fp
   26c20:	pop	{fp, pc}
   26c24:	push	{fp, lr}
   26c28:	mov	fp, sp
   26c2c:	sub	sp, sp, #16
   26c30:	str	r0, [fp, #-4]
   26c34:	str	r1, [sp, #8]
   26c38:	ldr	r0, [fp, #-4]
   26c3c:	ldr	r1, [sp, #8]
   26c40:	bl	1b994 <__assert_fail@plt+0x8ddc>
   26c44:	str	r0, [sp, #4]
   26c48:	ldr	r0, [sp, #8]
   26c4c:	movw	r1, #0
   26c50:	cmp	r0, r1
   26c54:	beq	26c6c <__assert_fail@plt+0x140b4>
   26c58:	ldr	r0, [sp, #8]
   26c5c:	ldr	r1, [sp, #4]
   26c60:	add	r1, r1, #40	; 0x28
   26c64:	bl	26a78 <__assert_fail@plt+0x13ec0>
   26c68:	b	26c78 <__assert_fail@plt+0x140c0>
   26c6c:	ldr	r0, [sp, #4]
   26c70:	add	r0, r0, #40	; 0x28
   26c74:	bl	21f24 <__assert_fail@plt+0xf36c>
   26c78:	ldr	r0, [sp, #4]
   26c7c:	movw	r1, #1
   26c80:	strb	r1, [r0, #17]
   26c84:	ldr	r0, [sp, #4]
   26c88:	strb	r1, [r0, #16]
   26c8c:	ldr	r0, [sp, #4]
   26c90:	movw	r1, #0
   26c94:	strb	r1, [r0, #19]
   26c98:	ldr	r0, [sp, #4]
   26c9c:	strb	r1, [r0, #18]
   26ca0:	ldr	r0, [sp, #4]
   26ca4:	vmov.f32	s0, #112	; 0x3f800000  1.0
   26ca8:	vstr	s0, [r0, #28]
   26cac:	movw	r0, #1
   26cb0:	and	r0, r0, #1
   26cb4:	mov	sp, fp
   26cb8:	pop	{fp, pc}
   26cbc:	push	{fp, lr}
   26cc0:	mov	fp, sp
   26cc4:	sub	sp, sp, #120	; 0x78
   26cc8:	str	r0, [fp, #-8]
   26ccc:	movw	r0, #24848	; 0x6110
   26cd0:	movt	r0, #7
   26cd4:	str	r0, [sp, #4]
   26cd8:	ldr	r0, [sp, #4]
   26cdc:	add	r1, sp, #8
   26ce0:	bl	7563c <__assert_fail@plt+0x62a84>
   26ce4:	movw	r1, #0
   26ce8:	cmp	r1, r0
   26cec:	bne	26d30 <__assert_fail@plt+0x14178>
   26cf0:	ldr	r1, [sp, #4]
   26cf4:	add	r0, sp, #8
   26cf8:	bl	21244 <__assert_fail@plt+0xe68c>
   26cfc:	str	r0, [sp]
   26d00:	ldr	r0, [fp, #-8]
   26d04:	ldr	r1, [sp]
   26d08:	bl	124c8 <strcmp@plt>
   26d0c:	movw	r1, #0
   26d10:	cmp	r1, r0
   26d14:	bne	26d24 <__assert_fail@plt+0x1416c>
   26d18:	vldr	s0, [pc, #40]	; 26d48 <__assert_fail@plt+0x14190>
   26d1c:	vstr	s0, [fp, #-4]
   26d20:	b	26d38 <__assert_fail@plt+0x14180>
   26d24:	vldr	s0, [pc, #24]	; 26d44 <__assert_fail@plt+0x1418c>
   26d28:	vstr	s0, [fp, #-4]
   26d2c:	b	26d38 <__assert_fail@plt+0x14180>
   26d30:	vmov.f32	s0, #112	; 0x3f800000  1.0
   26d34:	vstr	s0, [fp, #-4]
   26d38:	vldr	s0, [fp, #-4]
   26d3c:	mov	sp, fp
   26d40:	pop	{fp, pc}
   26d44:			; <UNDEFINED> instruction: 0x3e99999a
   26d48:	svccc	0x00333333
   26d4c:	push	{fp, lr}
   26d50:	mov	fp, sp
   26d54:	sub	sp, sp, #8
   26d58:	movw	r0, #34188	; 0x858c
   26d5c:	movt	r0, #7
   26d60:	bl	21bb4 <__assert_fail@plt+0xeffc>
   26d64:	str	r0, [sp]
   26d68:	ldr	r0, [sp]
   26d6c:	bl	1b9fc <__assert_fail@plt+0x8e44>
   26d70:	vldr	s0, [pc, #60]	; 26db4 <__assert_fail@plt+0x141fc>
   26d74:	str	r0, [sp, #4]
   26d78:	ldr	r0, [sp, #4]
   26d7c:	movw	r1, #0
   26d80:	strb	r1, [r0, #19]
   26d84:	ldr	r0, [sp, #4]
   26d88:	strb	r1, [r0, #18]
   26d8c:	ldr	r0, [sp, #4]
   26d90:	strb	r1, [r0, #17]
   26d94:	ldr	r0, [sp, #4]
   26d98:	strb	r1, [r0, #16]
   26d9c:	ldr	r0, [sp, #4]
   26da0:	vstr	s0, [r0, #28]
   26da4:	movw	r0, #1
   26da8:	and	r0, r0, #1
   26dac:	mov	sp, fp
   26db0:	pop	{fp, pc}
   26db4:	andeq	r0, r0, r0
   26db8:	push	{fp, lr}
   26dbc:	mov	fp, sp
   26dc0:	sub	sp, sp, #80	; 0x50
   26dc4:	str	r0, [fp, #-8]
   26dc8:	str	r1, [fp, #-12]
   26dcc:	str	r2, [fp, #-16]
   26dd0:	ldr	r0, [fp, #-8]
   26dd4:	ldr	r1, [fp, #-12]
   26dd8:	sub	r2, fp, #20
   26ddc:	bl	25ae8 <__assert_fail@plt+0x12f30>
   26de0:	tst	r0, #1
   26de4:	beq	26fc8 <__assert_fail@plt+0x14410>
   26de8:	ldr	r0, [fp, #-20]	; 0xffffffec
   26dec:	sub	r1, fp, #32
   26df0:	sub	r2, fp, #36	; 0x24
   26df4:	bl	26fdc <__assert_fail@plt+0x14424>
   26df8:	tst	r0, #1
   26dfc:	beq	26fc4 <__assert_fail@plt+0x1440c>
   26e00:	ldr	r0, [fp, #-16]
   26e04:	ldr	r1, [fp, #-20]	; 0xffffffec
   26e08:	bl	1b994 <__assert_fail@plt+0x8ddc>
   26e0c:	str	r0, [sp, #40]	; 0x28
   26e10:	ldr	r0, [fp, #-36]	; 0xffffffdc
   26e14:	ldr	r1, [sp, #40]	; 0x28
   26e18:	str	r0, [r1, #40]	; 0x28
   26e1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26e20:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26e24:	ldr	r2, [sp, #40]	; 0x28
   26e28:	str	r1, [r2, #52]	; 0x34
   26e2c:	str	r0, [r2, #48]	; 0x30
   26e30:	movw	r0, #57480	; 0xe088
   26e34:	movt	r0, #8
   26e38:	ldr	r0, [r0, #44]	; 0x2c
   26e3c:	and	r0, r0, #1
   26e40:	cmp	r0, #0
   26e44:	beq	26fb8 <__assert_fail@plt+0x14400>
   26e48:	movw	r0, #55080	; 0xd728
   26e4c:	movt	r0, #8
   26e50:	ldr	r0, [r0]
   26e54:	ldr	r1, [sp, #40]	; 0x28
   26e58:	ldr	r2, [r1, #4]
   26e5c:	movw	r1, #34549	; 0x86f5
   26e60:	movt	r1, #7
   26e64:	bl	128c4 <fprintf@plt>
   26e68:	movw	r1, #55080	; 0xd728
   26e6c:	movt	r1, #8
   26e70:	ldr	r1, [r1]
   26e74:	ldr	r2, [fp, #-36]	; 0xffffffdc
   26e78:	cmp	r2, #0
   26e7c:	str	r1, [sp, #36]	; 0x24
   26e80:	bne	26e94 <__assert_fail@plt+0x142dc>
   26e84:	movw	r0, #34584	; 0x8718
   26e88:	movt	r0, #7
   26e8c:	str	r0, [sp, #32]
   26e90:	b	26ee4 <__assert_fail@plt+0x1432c>
   26e94:	ldr	r0, [fp, #-36]	; 0xffffffdc
   26e98:	cmp	r0, #1
   26e9c:	bne	26eb0 <__assert_fail@plt+0x142f8>
   26ea0:	movw	r0, #45660	; 0xb25c
   26ea4:	movt	r0, #7
   26ea8:	str	r0, [sp, #28]
   26eac:	b	26edc <__assert_fail@plt+0x14324>
   26eb0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   26eb4:	cmp	r0, #2
   26eb8:	movw	r0, #0
   26ebc:	moveq	r0, #1
   26ec0:	tst	r0, #1
   26ec4:	movw	r0, #34600	; 0x8728
   26ec8:	movt	r0, #7
   26ecc:	movw	r1, #34587	; 0x871b
   26ed0:	movt	r1, #7
   26ed4:	movne	r0, r1
   26ed8:	str	r0, [sp, #28]
   26edc:	ldr	r0, [sp, #28]
   26ee0:	str	r0, [sp, #32]
   26ee4:	ldr	r0, [sp, #32]
   26ee8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   26eec:	cmp	r1, #0
   26ef0:	str	r0, [sp, #24]
   26ef4:	bne	26f08 <__assert_fail@plt+0x14350>
   26ef8:	movw	r0, #34590	; 0x871e
   26efc:	movt	r0, #7
   26f00:	str	r0, [sp, #20]
   26f04:	b	26f58 <__assert_fail@plt+0x143a0>
   26f08:	ldr	r0, [fp, #-36]	; 0xffffffdc
   26f0c:	cmp	r0, #1
   26f10:	bne	26f24 <__assert_fail@plt+0x1436c>
   26f14:	movw	r0, #34593	; 0x8721
   26f18:	movt	r0, #7
   26f1c:	str	r0, [sp, #16]
   26f20:	b	26f50 <__assert_fail@plt+0x14398>
   26f24:	ldr	r0, [fp, #-36]	; 0xffffffdc
   26f28:	cmp	r0, #2
   26f2c:	movw	r0, #0
   26f30:	moveq	r0, #1
   26f34:	tst	r0, #1
   26f38:	movw	r0, #34599	; 0x8727
   26f3c:	movt	r0, #7
   26f40:	movw	r1, #35749	; 0x8ba5
   26f44:	movt	r1, #7
   26f48:	movne	r0, r1
   26f4c:	str	r0, [sp, #16]
   26f50:	ldr	r0, [sp, #16]
   26f54:	str	r0, [sp, #20]
   26f58:	ldr	r0, [sp, #20]
   26f5c:	movw	r1, #34563	; 0x8703
   26f60:	movt	r1, #7
   26f64:	ldr	r2, [sp, #36]	; 0x24
   26f68:	str	r0, [sp, #12]
   26f6c:	mov	r0, r2
   26f70:	ldr	r2, [sp, #24]
   26f74:	ldr	r3, [sp, #12]
   26f78:	bl	128c4 <fprintf@plt>
   26f7c:	movw	r1, #55080	; 0xd728
   26f80:	movt	r1, #8
   26f84:	ldr	r1, [r1]
   26f88:	ldr	r2, [sp, #40]	; 0x28
   26f8c:	ldr	r3, [r2, #48]	; 0x30
   26f90:	ldr	r2, [r2, #52]	; 0x34
   26f94:	movw	ip, #35752	; 0x8ba8
   26f98:	movt	ip, #7
   26f9c:	str	r0, [sp, #8]
   26fa0:	mov	r0, r1
   26fa4:	mov	r1, ip
   26fa8:	str	r2, [sp, #4]
   26fac:	mov	r2, r3
   26fb0:	ldr	r3, [sp, #4]
   26fb4:	bl	128c4 <fprintf@plt>
   26fb8:	ldr	r0, [sp, #40]	; 0x28
   26fbc:	str	r0, [fp, #-4]
   26fc0:	b	26fd0 <__assert_fail@plt+0x14418>
   26fc4:	b	26fc8 <__assert_fail@plt+0x14410>
   26fc8:	movw	r0, #0
   26fcc:	str	r0, [fp, #-4]
   26fd0:	ldr	r0, [fp, #-4]
   26fd4:	mov	sp, fp
   26fd8:	pop	{fp, pc}
   26fdc:	push	{fp, lr}
   26fe0:	mov	fp, sp
   26fe4:	sub	sp, sp, #24
   26fe8:	str	r0, [fp, #-8]
   26fec:	str	r1, [sp, #12]
   26ff0:	str	r2, [sp, #8]
   26ff4:	ldr	r0, [fp, #-8]
   26ff8:	movw	r1, #0
   26ffc:	cmp	r0, r1
   27000:	bne	27014 <__assert_fail@plt+0x1445c>
   27004:	movw	r0, #0
   27008:	and	r0, r0, #1
   2700c:	strb	r0, [fp, #-1]
   27010:	b	27080 <__assert_fail@plt+0x144c8>
   27014:	ldr	r0, [sp, #8]
   27018:	movw	r1, #0
   2701c:	cmp	r0, r1
   27020:	beq	2704c <__assert_fail@plt+0x14494>
   27024:	ldr	r1, [sp, #8]
   27028:	sub	r0, fp, #8
   2702c:	bl	25e18 <__assert_fail@plt+0x13260>
   27030:	tst	r0, #1
   27034:	bne	27048 <__assert_fail@plt+0x14490>
   27038:	movw	r0, #0
   2703c:	and	r0, r0, #1
   27040:	strb	r0, [fp, #-1]
   27044:	b	27080 <__assert_fail@plt+0x144c8>
   27048:	b	2704c <__assert_fail@plt+0x14494>
   2704c:	ldr	r0, [fp, #-8]
   27050:	ldr	r3, [sp, #12]
   27054:	add	r1, sp, #4
   27058:	movw	r2, #10
   2705c:	movw	ip, #29909	; 0x74d5
   27060:	movt	ip, #7
   27064:	str	ip, [sp]
   27068:	bl	4d894 <__assert_fail@plt+0x3acdc>
   2706c:	cmp	r0, #0
   27070:	movw	r0, #0
   27074:	moveq	r0, #1
   27078:	and	r0, r0, #1
   2707c:	strb	r0, [fp, #-1]
   27080:	ldrb	r0, [fp, #-1]
   27084:	and	r0, r0, #1
   27088:	mov	sp, fp
   2708c:	pop	{fp, pc}
   27090:	push	{fp, lr}
   27094:	mov	fp, sp
   27098:	sub	sp, sp, #16
   2709c:	str	r0, [sp, #8]
   270a0:	str	r1, [sp, #4]
   270a4:	ldr	r0, [sp, #8]
   270a8:	movw	r1, #35990	; 0x8c96
   270ac:	movt	r1, #7
   270b0:	bl	12ad4 <strpbrk@plt>
   270b4:	movw	r1, #0
   270b8:	cmp	r0, r1
   270bc:	bne	270e8 <__assert_fail@plt+0x14530>
   270c0:	ldr	r0, [sp, #4]
   270c4:	cmp	r0, #0
   270c8:	beq	270f4 <__assert_fail@plt+0x1453c>
   270cc:	ldr	r0, [sp, #8]
   270d0:	movw	r1, #26652	; 0x681c
   270d4:	movt	r1, #7
   270d8:	bl	12ad4 <strpbrk@plt>
   270dc:	movw	r1, #0
   270e0:	cmp	r0, r1
   270e4:	beq	270f4 <__assert_fail@plt+0x1453c>
   270e8:	vldr	s0, [pc, #28]	; 2710c <__assert_fail@plt+0x14554>
   270ec:	vstr	s0, [fp, #-4]
   270f0:	b	270fc <__assert_fail@plt+0x14544>
   270f4:	vldr	s0, [pc, #12]	; 27108 <__assert_fail@plt+0x14550>
   270f8:	vstr	s0, [fp, #-4]
   270fc:	vldr	s0, [fp, #-4]
   27100:	mov	sp, fp
   27104:	pop	{fp, pc}
   27108:	stclcc	12, cr12, [ip, #820]	; 0x334
   2710c:	svccc	0x004ccccd
   27110:	push	{fp, lr}
   27114:	mov	fp, sp
   27118:	sub	sp, sp, #8
   2711c:	movw	r0, #57016	; 0xdeb8
   27120:	movt	r0, #8
   27124:	ldrb	r0, [r0]
   27128:	tst	r0, #1
   2712c:	bne	271d0 <__assert_fail@plt+0x14618>
   27130:	movw	r0, #36013	; 0x8cad
   27134:	movt	r0, #7
   27138:	str	r0, [sp, #4]
   2713c:	ldr	r1, [sp, #4]
   27140:	movw	r2, #0
   27144:	bl	127a4 <fnmatch@plt>
   27148:	movw	r1, #0
   2714c:	cmp	r1, r0
   27150:	bne	2719c <__assert_fail@plt+0x145e4>
   27154:	movw	r0, #36017	; 0x8cb1
   27158:	movt	r0, #7
   2715c:	movw	r1, #36013	; 0x8cad
   27160:	movt	r1, #7
   27164:	movw	r2, #0
   27168:	bl	127a4 <fnmatch@plt>
   2716c:	movw	r1, #0
   27170:	cmp	r1, r0
   27174:	beq	2719c <__assert_fail@plt+0x145e4>
   27178:	movw	r0, #36017	; 0x8cb1
   2717c:	movt	r0, #7
   27180:	movw	r1, #36013	; 0x8cad
   27184:	movt	r1, #7
   27188:	movw	r2, #16
   2718c:	bl	127a4 <fnmatch@plt>
   27190:	movw	r1, #0
   27194:	cmp	r1, r0
   27198:	beq	271c0 <__assert_fail@plt+0x14608>
   2719c:	movw	r0, #36021	; 0x8cb5
   271a0:	movt	r0, #7
   271a4:	bl	12864 <gettext@plt>
   271a8:	movw	r1, #1
   271ac:	str	r0, [sp]
   271b0:	mov	r0, r1
   271b4:	movw	r1, #0
   271b8:	ldr	r2, [sp]
   271bc:	bl	12780 <error@plt>
   271c0:	movw	r0, #57016	; 0xdeb8
   271c4:	movt	r0, #8
   271c8:	movw	r1, #1
   271cc:	strb	r1, [r0]
   271d0:	movw	r0, #57016	; 0xdeb8
   271d4:	movt	r0, #8
   271d8:	ldrb	r0, [r0]
   271dc:	and	r0, r0, #1
   271e0:	mov	sp, fp
   271e4:	pop	{fp, pc}
   271e8:	push	{fp, lr}
   271ec:	mov	fp, sp
   271f0:	sub	sp, sp, #40	; 0x28
   271f4:	str	r0, [fp, #-4]
   271f8:	str	r1, [fp, #-8]
   271fc:	str	r2, [fp, #-12]
   27200:	bl	22044 <__assert_fail@plt+0xf48c>
   27204:	tst	r0, #1
   27208:	beq	27298 <__assert_fail@plt+0x146e0>
   2720c:	ldr	r0, [fp, #-12]
   27210:	movw	r1, #47	; 0x2f
   27214:	bl	12894 <strchr@plt>
   27218:	movw	r1, #0
   2721c:	cmp	r0, r1
   27220:	beq	27298 <__assert_fail@plt+0x146e0>
   27224:	movw	r0, #36076	; 0x8cec
   27228:	movt	r0, #7
   2722c:	bl	12864 <gettext@plt>
   27230:	ldr	r1, [fp, #-4]
   27234:	movw	r2, #0
   27238:	str	r0, [fp, #-16]
   2723c:	mov	r0, r2
   27240:	bl	1d994 <__assert_fail@plt+0xaddc>
   27244:	movw	r1, #1
   27248:	str	r0, [sp, #20]
   2724c:	mov	r0, r1
   27250:	movw	r1, #24848	; 0x6110
   27254:	movt	r1, #7
   27258:	bl	1d994 <__assert_fail@plt+0xaddc>
   2725c:	ldr	r1, [fp, #-8]
   27260:	movw	r2, #2
   27264:	str	r0, [sp, #16]
   27268:	mov	r0, r2
   2726c:	bl	1d994 <__assert_fail@plt+0xaddc>
   27270:	movw	r1, #0
   27274:	str	r0, [sp, #12]
   27278:	mov	r0, r1
   2727c:	ldr	r2, [fp, #-16]
   27280:	ldr	r3, [sp, #20]
   27284:	ldr	ip, [sp, #16]
   27288:	str	ip, [sp]
   2728c:	ldr	lr, [sp, #12]
   27290:	str	lr, [sp, #4]
   27294:	bl	12780 <error@plt>
   27298:	movw	r0, #1
   2729c:	and	r0, r0, #1
   272a0:	mov	sp, fp
   272a4:	pop	{fp, pc}
   272a8:	push	{fp, lr}
   272ac:	mov	fp, sp
   272b0:	sub	sp, sp, #48	; 0x30
   272b4:	ldr	ip, [fp, #8]
   272b8:	str	r0, [fp, #-8]
   272bc:	str	r1, [fp, #-12]
   272c0:	str	r2, [fp, #-16]
   272c4:	str	r3, [fp, #-20]	; 0xffffffec
   272c8:	movw	r0, #0
   272cc:	strb	r0, [sp, #23]
   272d0:	ldr	r0, [fp, #8]
   272d4:	movw	r1, #22372	; 0x5764
   272d8:	movt	r1, #1
   272dc:	cmp	r0, r1
   272e0:	bne	272ec <__assert_fail@plt+0x14734>
   272e4:	movw	r0, #1
   272e8:	strb	r0, [sp, #23]
   272ec:	bl	27110 <__assert_fail@plt+0x14558>
   272f0:	ldr	r1, [fp, #-12]
   272f4:	ldr	r2, [fp, #-16]
   272f8:	str	r0, [sp, #12]
   272fc:	mov	r0, r1
   27300:	mov	r1, r2
   27304:	add	r2, sp, #24
   27308:	bl	25ae8 <__assert_fail@plt+0x12f30>
   2730c:	tst	r0, #1
   27310:	beq	273dc <__assert_fail@plt+0x14824>
   27314:	ldr	r0, [fp, #-8]
   27318:	ldr	r1, [fp, #8]
   2731c:	ldr	r2, [sp, #24]
   27320:	bl	1b924 <__assert_fail@plt+0x8d6c>
   27324:	str	r0, [sp, #16]
   27328:	ldr	r0, [sp, #16]
   2732c:	movw	r1, #0
   27330:	strb	r1, [r0, #19]
   27334:	ldr	r0, [sp, #16]
   27338:	strb	r1, [r0, #18]
   2733c:	ldr	r0, [sp, #24]
   27340:	ldr	r1, [sp, #16]
   27344:	str	r0, [r1, #40]	; 0x28
   27348:	ldr	r0, [sp, #24]
   2734c:	movw	r1, #0
   27350:	bl	27090 <__assert_fail@plt+0x144d8>
   27354:	ldr	r0, [sp, #16]
   27358:	vstr	s0, [r0, #28]
   2735c:	movw	r0, #57480	; 0xe088
   27360:	movt	r0, #8
   27364:	ldrb	r0, [r0, #17]
   27368:	tst	r0, #1
   2736c:	bne	273cc <__assert_fail@plt+0x14814>
   27370:	ldr	r0, [sp, #24]
   27374:	ldrb	r1, [sp, #23]
   27378:	and	r1, r1, #1
   2737c:	bl	273fc <__assert_fail@plt+0x14844>
   27380:	tst	r0, #1
   27384:	bne	273cc <__assert_fail@plt+0x14814>
   27388:	movw	r0, #36254	; 0x8d9e
   2738c:	movt	r0, #7
   27390:	bl	12864 <gettext@plt>
   27394:	ldr	r3, [fp, #-20]	; 0xffffffec
   27398:	ldr	r1, [sp, #24]
   2739c:	movw	r2, #0
   273a0:	str	r0, [sp, #8]
   273a4:	mov	r0, r2
   273a8:	str	r1, [sp, #4]
   273ac:	mov	r1, r2
   273b0:	ldr	r2, [sp, #8]
   273b4:	ldr	ip, [sp, #4]
   273b8:	str	ip, [sp]
   273bc:	bl	12780 <error@plt>
   273c0:	vldr	s0, [pc, #48]	; 273f8 <__assert_fail@plt+0x14840>
   273c4:	ldr	r0, [sp, #16]
   273c8:	vstr	s0, [r0, #28]
   273cc:	movw	r0, #1
   273d0:	and	r0, r0, #1
   273d4:	strb	r0, [fp, #-1]
   273d8:	b	273e8 <__assert_fail@plt+0x14830>
   273dc:	movw	r0, #0
   273e0:	and	r0, r0, #1
   273e4:	strb	r0, [fp, #-1]
   273e8:	ldrb	r0, [fp, #-1]
   273ec:	and	r0, r0, #1
   273f0:	mov	sp, fp
   273f4:	pop	{fp, pc}
   273f8:	eorcc	ip, fp, #30464	; 0x7700
   273fc:	push	{fp, lr}
   27400:	mov	fp, sp
   27404:	sub	sp, sp, #16
   27408:	str	r0, [sp, #8]
   2740c:	and	r0, r1, #1
   27410:	strb	r0, [sp, #7]
   27414:	ldr	r0, [sp, #8]
   27418:	movw	r1, #47	; 0x2f
   2741c:	bl	12a14 <strrchr@plt>
   27420:	str	r0, [sp]
   27424:	ldr	r0, [sp]
   27428:	movw	r1, #0
   2742c:	cmp	r0, r1
   27430:	beq	2747c <__assert_fail@plt+0x148c4>
   27434:	ldr	r0, [sp]
   27438:	ldrsb	r0, [r0, #1]
   2743c:	cmp	r0, #0
   27440:	bne	2747c <__assert_fail@plt+0x148c4>
   27444:	ldr	r0, [sp, #8]
   27448:	ldrb	r1, [sp, #7]
   2744c:	and	r1, r1, #1
   27450:	bl	181b0 <__assert_fail@plt+0x55f8>
   27454:	tst	r0, #1
   27458:	beq	2746c <__assert_fail@plt+0x148b4>
   2745c:	movw	r0, #1
   27460:	and	r0, r0, #1
   27464:	strb	r0, [fp, #-1]
   27468:	b	27488 <__assert_fail@plt+0x148d0>
   2746c:	movw	r0, #0
   27470:	and	r0, r0, #1
   27474:	strb	r0, [fp, #-1]
   27478:	b	27488 <__assert_fail@plt+0x148d0>
   2747c:	movw	r0, #1
   27480:	and	r0, r0, #1
   27484:	strb	r0, [fp, #-1]
   27488:	ldrb	r0, [fp, #-1]
   2748c:	and	r0, r0, #1
   27490:	mov	sp, fp
   27494:	pop	{fp, pc}
   27498:	push	{fp, lr}
   2749c:	mov	fp, sp
   274a0:	sub	sp, sp, #64	; 0x40
   274a4:	str	r0, [fp, #-8]
   274a8:	str	r1, [fp, #-12]
   274ac:	str	r2, [fp, #-16]
   274b0:	str	r3, [fp, #-20]	; 0xffffffec
   274b4:	ldr	r0, [fp, #-8]
   274b8:	ldr	r1, [fp, #-12]
   274bc:	sub	r2, fp, #24
   274c0:	bl	25ae8 <__assert_fail@plt+0x12f30>
   274c4:	tst	r0, #1
   274c8:	beq	27600 <__assert_fail@plt+0x14a48>
   274cc:	ldr	r0, [fp, #-16]
   274d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   274d4:	movw	r1, #25608	; 0x6408
   274d8:	movt	r1, #1
   274dc:	bl	1b924 <__assert_fail@plt+0x8d6c>
   274e0:	str	r0, [sp, #28]
   274e4:	ldr	r0, [sp, #28]
   274e8:	movw	r1, #0
   274ec:	strb	r1, [r0, #19]
   274f0:	ldr	r0, [sp, #28]
   274f4:	strb	r1, [r0, #18]
   274f8:	movw	r0, #32
   274fc:	bl	4a2f0 <__assert_fail@plt+0x37738>
   27500:	str	r0, [fp, #-28]	; 0xffffffe4
   27504:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27508:	ldr	r1, [sp, #28]
   2750c:	str	r0, [r1, #40]	; 0x28
   27510:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27514:	movw	r1, #100	; 0x64
   27518:	str	r1, [r0, #4]
   2751c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27520:	ldr	r0, [r0, #4]
   27524:	bl	4a2f0 <__assert_fail@plt+0x37738>
   27528:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2752c:	str	r0, [r1]
   27530:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27534:	movw	r1, #0
   27538:	str	r1, [r0, #16]
   2753c:	ldr	r0, [fp, #-20]	; 0xffffffec
   27540:	bl	5513c <__assert_fail@plt+0x42584>
   27544:	ldr	r1, [fp, #-20]	; 0xffffffec
   27548:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2754c:	str	r1, [r2, #12]
   27550:	ldr	r1, [fp, #-28]	; 0xffffffe4
   27554:	movw	r2, #0
   27558:	str	r2, [r1, #20]
   2755c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   27560:	ldr	r2, [fp, #-24]	; 0xffffffe8
   27564:	str	r0, [sp, #24]
   27568:	mov	r0, r2
   2756c:	str	r1, [sp, #20]
   27570:	bl	12888 <strlen@plt>
   27574:	ldr	r2, [fp, #-28]	; 0xffffffe4
   27578:	ldr	r1, [sp, #20]
   2757c:	str	r0, [sp, #16]
   27580:	mov	r0, r1
   27584:	ldr	r1, [sp, #16]
   27588:	bl	54cac <__assert_fail@plt+0x420f4>
   2758c:	str	r0, [sp, #32]
   27590:	ldr	r0, [sp, #32]
   27594:	movw	r1, #0
   27598:	cmp	r0, r1
   2759c:	beq	275dc <__assert_fail@plt+0x14a24>
   275a0:	movw	r0, #36318	; 0x8dde
   275a4:	movt	r0, #7
   275a8:	bl	12864 <gettext@plt>
   275ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   275b0:	ldr	r1, [sp, #32]
   275b4:	movw	r2, #1
   275b8:	str	r0, [sp, #12]
   275bc:	mov	r0, r2
   275c0:	movw	r2, #0
   275c4:	str	r1, [sp, #8]
   275c8:	mov	r1, r2
   275cc:	ldr	r2, [sp, #12]
   275d0:	ldr	ip, [sp, #8]
   275d4:	str	ip, [sp]
   275d8:	bl	12780 <error@plt>
   275dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   275e0:	movw	r1, #1
   275e4:	bl	27090 <__assert_fail@plt+0x144d8>
   275e8:	ldr	r0, [sp, #28]
   275ec:	vstr	s0, [r0, #28]
   275f0:	movw	r0, #1
   275f4:	and	r0, r0, #1
   275f8:	strb	r0, [fp, #-1]
   275fc:	b	2760c <__assert_fail@plt+0x14a54>
   27600:	movw	r0, #0
   27604:	and	r0, r0, #1
   27608:	strb	r0, [fp, #-1]
   2760c:	ldrb	r0, [fp, #-1]
   27610:	and	r0, r0, #1
   27614:	mov	sp, fp
   27618:	pop	{fp, pc}
   2761c:	push	{fp, lr}
   27620:	mov	fp, sp
   27624:	sub	sp, sp, #48	; 0x30
   27628:	str	r0, [fp, #-8]
   2762c:	str	r1, [fp, #-12]
   27630:	str	r2, [fp, #-16]
   27634:	str	r3, [fp, #-20]	; 0xffffffec
   27638:	ldr	r0, [fp, #-12]
   2763c:	ldr	r1, [fp, #-16]
   27640:	ldr	r1, [r1]
   27644:	sub	r1, r1, #1
   27648:	add	r0, r0, r1, lsl #2
   2764c:	ldr	r0, [r0]
   27650:	str	r0, [sp, #16]
   27654:	ldr	r0, [fp, #-12]
   27658:	ldr	r1, [fp, #-16]
   2765c:	add	r2, sp, #24
   27660:	bl	25ae8 <__assert_fail@plt+0x12f30>
   27664:	tst	r0, #1
   27668:	beq	27748 <__assert_fail@plt+0x14b90>
   2766c:	ldr	r0, [sp, #24]
   27670:	movw	r1, #35758	; 0x8bae
   27674:	movt	r1, #7
   27678:	bl	12bac <strspn@plt>
   2767c:	str	r0, [sp, #20]
   27680:	ldr	r0, [sp, #20]
   27684:	cmp	r0, #0
   27688:	ble	276f0 <__assert_fail@plt+0x14b38>
   2768c:	ldr	r0, [sp, #24]
   27690:	ldr	r1, [sp, #20]
   27694:	add	r0, r0, r1
   27698:	ldrb	r0, [r0]
   2769c:	cmp	r0, #0
   276a0:	bne	276f0 <__assert_fail@plt+0x14b38>
   276a4:	ldr	r0, [sp, #24]
   276a8:	movw	r1, #57480	; 0xe088
   276ac:	movt	r1, #8
   276b0:	ldr	r1, [r1, #72]	; 0x48
   276b4:	bl	2b4e8 <__assert_fail@plt+0x18930>
   276b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   276bc:	str	r0, [r1]
   276c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   276c4:	ldr	r0, [r0]
   276c8:	cmp	r0, #0
   276cc:	blt	276ec <__assert_fail@plt+0x14b34>
   276d0:	ldr	r0, [fp, #-8]
   276d4:	ldr	r1, [fp, #-12]
   276d8:	ldr	r2, [fp, #-16]
   276dc:	bl	25f6c <__assert_fail@plt+0x133b4>
   276e0:	and	r0, r0, #1
   276e4:	strb	r0, [fp, #-1]
   276e8:	b	27754 <__assert_fail@plt+0x14b9c>
   276ec:	b	276f0 <__assert_fail@plt+0x14b38>
   276f0:	movw	r0, #36364	; 0x8e0c
   276f4:	movt	r0, #7
   276f8:	bl	12864 <gettext@plt>
   276fc:	ldr	r3, [sp, #16]
   27700:	movw	r1, #57480	; 0xe088
   27704:	movt	r1, #8
   27708:	ldr	r1, [r1, #72]	; 0x48
   2770c:	ldr	r2, [sp, #24]
   27710:	movw	ip, #0
   27714:	str	r0, [sp, #12]
   27718:	mov	r0, ip
   2771c:	str	r3, [sp, #8]
   27720:	bl	487d0 <__assert_fail@plt+0x35c18>
   27724:	movw	r1, #1
   27728:	str	r0, [sp, #4]
   2772c:	mov	r0, r1
   27730:	movw	r1, #0
   27734:	ldr	r2, [sp, #12]
   27738:	ldr	r3, [sp, #8]
   2773c:	ldr	ip, [sp, #4]
   27740:	str	ip, [sp]
   27744:	bl	12780 <error@plt>
   27748:	movw	r0, #0
   2774c:	and	r0, r0, #1
   27750:	strb	r0, [fp, #-1]
   27754:	ldrb	r0, [fp, #-1]
   27758:	and	r0, r0, #1
   2775c:	mov	sp, fp
   27760:	pop	{fp, pc}
   27764:	push	{fp, lr}
   27768:	mov	fp, sp
   2776c:	sub	sp, sp, #88	; 0x58
   27770:	str	r0, [fp, #-8]
   27774:	str	r1, [fp, #-12]
   27778:	str	r2, [fp, #-16]
   2777c:	str	r3, [fp, #-20]	; 0xffffffec
   27780:	ldr	r0, [fp, #-20]	; 0xffffffec
   27784:	movw	r1, #27484	; 0x6b5c
   27788:	movt	r1, #1
   2778c:	cmp	r0, r1
   27790:	movw	r0, #0
   27794:	moveq	r0, #1
   27798:	tst	r0, #1
   2779c:	movw	r0, #36856	; 0x8ff8
   277a0:	movt	r0, #7
   277a4:	movw	r1, #36849	; 0x8ff1
   277a8:	movt	r1, #7
   277ac:	movne	r0, r1
   277b0:	str	r0, [fp, #-32]	; 0xffffffe0
   277b4:	ldr	r0, [fp, #-8]
   277b8:	ldr	r1, [fp, #-12]
   277bc:	sub	r2, fp, #28
   277c0:	bl	25ae8 <__assert_fail@plt+0x12f30>
   277c4:	tst	r0, #1
   277c8:	bne	277dc <__assert_fail@plt+0x14c24>
   277cc:	movw	r0, #0
   277d0:	and	r0, r0, #1
   277d4:	strb	r0, [fp, #-1]
   277d8:	b	27bd4 <__assert_fail@plt+0x1501c>
   277dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   277e0:	ldrsb	r0, [r0]
   277e4:	cmp	r0, #0
   277e8:	bne	27814 <__assert_fail@plt+0x14c5c>
   277ec:	movw	r0, #36862	; 0x8ffe
   277f0:	movt	r0, #7
   277f4:	bl	12864 <gettext@plt>
   277f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   277fc:	movw	r1, #1
   27800:	str	r0, [sp, #44]	; 0x2c
   27804:	mov	r0, r1
   27808:	movw	r1, #0
   2780c:	ldr	r2, [sp, #44]	; 0x2c
   27810:	bl	12780 <error@plt>
   27814:	ldr	r0, [fp, #-16]
   27818:	ldr	r1, [fp, #-20]	; 0xffffffec
   2781c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   27820:	bl	1b924 <__assert_fail@plt+0x8d6c>
   27824:	vldr	s0, [pc, #952]	; 27be4 <__assert_fail@plt+0x1502c>
   27828:	str	r0, [fp, #-24]	; 0xffffffe8
   2782c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27830:	vstr	s0, [r0, #28]
   27834:	ldr	r0, [fp, #-20]	; 0xffffffec
   27838:	movw	r1, #27484	; 0x6b5c
   2783c:	movt	r1, #1
   27840:	cmp	r0, r1
   27844:	bne	27864 <__assert_fail@plt+0x14cac>
   27848:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2784c:	movw	r1, #1
   27850:	strb	r1, [r0, #18]
   27854:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27858:	movw	r1, #0
   2785c:	strb	r1, [r0, #19]
   27860:	b	2787c <__assert_fail@plt+0x14cc4>
   27864:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27868:	movw	r1, #0
   2786c:	strb	r1, [r0, #18]
   27870:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27874:	movw	r1, #1
   27878:	strb	r1, [r0, #19]
   2787c:	b	27880 <__assert_fail@plt+0x14cc8>
   27880:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27884:	ldrsb	r0, [r0]
   27888:	cmp	r0, #0
   2788c:	beq	27bc8 <__assert_fail@plt+0x15010>
   27890:	movw	r0, #55050	; 0xd70a
   27894:	movt	r0, #15395	; 0x3c23
   27898:	str	r0, [fp, #-40]	; 0xffffffd8
   2789c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   278a0:	ldrb	r0, [r0]
   278a4:	sub	r0, r0, #68	; 0x44
   278a8:	cmp	r0, #47	; 0x2f
   278ac:	str	r0, [sp, #40]	; 0x28
   278b0:	bhi	27a58 <__assert_fail@plt+0x14ea0>
   278b4:	add	r0, pc, #8
   278b8:	ldr	r1, [sp, #40]	; 0x28
   278bc:	ldr	r0, [r0, r1, lsl #2]
   278c0:	mov	pc, r0
   278c4:	andeq	r7, r2, r0, lsl sl
   278c8:	andeq	r7, r2, r8, asr sl
   278cc:	andeq	r7, r2, r8, asr sl
   278d0:	andeq	r7, r2, r8, asr sl
   278d4:	andeq	r7, r2, r8, asr sl
   278d8:	andeq	r7, r2, r8, asr sl
   278dc:	andeq	r7, r2, r8, asr sl
   278e0:	andeq	r7, r2, r8, asr sl
   278e4:	andeq	r7, r2, r8, asr sl
   278e8:	andeq	r7, r2, r8, asr sl
   278ec:	andeq	r7, r2, r8, asr sl
   278f0:	andeq	r7, r2, r8, asr sl
   278f4:	andeq	r7, r2, r8, asr sl
   278f8:	andeq	r7, r2, r8, asr sl
   278fc:	andeq	r7, r2, r8, asr sl
   27900:	andeq	r7, r2, r8, asr sl
   27904:	andeq	r7, r2, r8, asr sl
   27908:	andeq	r7, r2, r8, asr sl
   2790c:	andeq	r7, r2, r8, asr sl
   27910:	andeq	r7, r2, r8, asr sl
   27914:	andeq	r7, r2, r8, asr sl
   27918:	andeq	r7, r2, r8, asr sl
   2791c:	andeq	r7, r2, r8, asr sl
   27920:	andeq	r7, r2, r8, asr sl
   27924:	andeq	r7, r2, r8, asr sl
   27928:	andeq	r7, r2, r8, asr sl
   2792c:	andeq	r7, r2, r8, asr sl
   27930:	andeq	r7, r2, r8, asr sl
   27934:	andeq	r7, r2, r8, asr sl
   27938:	andeq	r7, r2, r8, asr sl
   2793c:	andeq	r7, r2, r4, lsl #19
   27940:	muleq	r2, r8, r9
   27944:	andeq	r7, r2, ip, lsr #19
   27948:	andeq	r7, r2, r8, asr sl
   2794c:	andeq	r7, r2, r0, asr #19
   27950:	andeq	r7, r2, r8, asr sl
   27954:	andeq	r7, r2, r8, asr sl
   27958:	andeq	r7, r2, r8, asr sl
   2795c:	andeq	r7, r2, r8, asr sl
   27960:	andeq	r7, r2, r8, asr sl
   27964:	ldrdeq	r7, [r2], -r4
   27968:	andeq	r7, r2, r8, asr sl
   2796c:	andeq	r7, r2, r8, asr sl
   27970:	andeq	r7, r2, r8, asr sl
   27974:	andeq	r7, r2, r8, ror #19
   27978:	andeq	r7, r2, r8, asr sl
   2797c:	andeq	r7, r2, r8, asr sl
   27980:	strdeq	r7, [r2], -ip
   27984:	vldr	s0, [pc, #624]	; 27bfc <__assert_fail@plt+0x15044>
   27988:	movw	r0, #0
   2798c:	str	r0, [fp, #-36]	; 0xffffffdc
   27990:	vstr	s0, [fp, #-40]	; 0xffffffd8
   27994:	b	27aa0 <__assert_fail@plt+0x14ee8>
   27998:	vldr	s0, [pc, #600]	; 27bf8 <__assert_fail@plt+0x15040>
   2799c:	movw	r0, #1
   279a0:	str	r0, [fp, #-36]	; 0xffffffdc
   279a4:	vstr	s0, [fp, #-40]	; 0xffffffd8
   279a8:	b	27aa0 <__assert_fail@plt+0x14ee8>
   279ac:	vldr	s0, [pc, #576]	; 27bf4 <__assert_fail@plt+0x1503c>
   279b0:	movw	r0, #2
   279b4:	str	r0, [fp, #-36]	; 0xffffffdc
   279b8:	vstr	s0, [fp, #-40]	; 0xffffffd8
   279bc:	b	27aa0 <__assert_fail@plt+0x14ee8>
   279c0:	movw	r0, #3
   279c4:	str	r0, [fp, #-36]	; 0xffffffdc
   279c8:	vmov.f32	s0, #108	; 0x3f600000  0.875
   279cc:	vstr	s0, [fp, #-40]	; 0xffffffd8
   279d0:	b	27aa0 <__assert_fail@plt+0x14ee8>
   279d4:	vldr	s0, [pc, #532]	; 27bf0 <__assert_fail@plt+0x15038>
   279d8:	movw	r0, #4
   279dc:	str	r0, [fp, #-36]	; 0xffffffdc
   279e0:	vstr	s0, [fp, #-40]	; 0xffffffd8
   279e4:	b	27aa0 <__assert_fail@plt+0x14ee8>
   279e8:	vldr	s0, [pc, #508]	; 27bec <__assert_fail@plt+0x15034>
   279ec:	movw	r0, #5
   279f0:	str	r0, [fp, #-36]	; 0xffffffdc
   279f4:	vstr	s0, [fp, #-40]	; 0xffffffd8
   279f8:	b	27aa0 <__assert_fail@plt+0x14ee8>
   279fc:	vldr	s0, [pc, #484]	; 27be8 <__assert_fail@plt+0x15030>
   27a00:	movw	r0, #6
   27a04:	str	r0, [fp, #-36]	; 0xffffffdc
   27a08:	vstr	s0, [fp, #-40]	; 0xffffffd8
   27a0c:	b	27aa0 <__assert_fail@plt+0x14ee8>
   27a10:	movw	r0, #0
   27a14:	str	r0, [fp, #-36]	; 0xffffffdc
   27a18:	movw	r0, #36913	; 0x9031
   27a1c:	movt	r0, #7
   27a20:	bl	12864 <gettext@plt>
   27a24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27a28:	ldr	r1, [fp, #-28]	; 0xffffffe4
   27a2c:	ldrb	r1, [r1]
   27a30:	movw	r2, #1
   27a34:	str	r0, [sp, #36]	; 0x24
   27a38:	mov	r0, r2
   27a3c:	movw	r2, #0
   27a40:	str	r1, [sp, #32]
   27a44:	mov	r1, r2
   27a48:	ldr	r2, [sp, #36]	; 0x24
   27a4c:	ldr	ip, [sp, #32]
   27a50:	str	ip, [sp]
   27a54:	bl	12780 <error@plt>
   27a58:	movw	r0, #0
   27a5c:	str	r0, [fp, #-36]	; 0xffffffdc
   27a60:	movw	r0, #37014	; 0x9096
   27a64:	movt	r0, #7
   27a68:	bl	12864 <gettext@plt>
   27a6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27a70:	ldr	r1, [fp, #-28]	; 0xffffffe4
   27a74:	ldrb	r1, [r1]
   27a78:	movw	r2, #1
   27a7c:	str	r0, [sp, #28]
   27a80:	mov	r0, r2
   27a84:	movw	r2, #0
   27a88:	str	r1, [sp, #24]
   27a8c:	mov	r1, r2
   27a90:	ldr	r2, [sp, #28]
   27a94:	ldr	ip, [sp, #24]
   27a98:	str	ip, [sp]
   27a9c:	bl	12780 <error@plt>
   27aa0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27aa4:	add	r0, r0, #40	; 0x28
   27aa8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   27aac:	add	r0, r0, r1
   27ab0:	ldrb	r0, [r0]
   27ab4:	tst	r0, #1
   27ab8:	beq	27afc <__assert_fail@plt+0x14f44>
   27abc:	movw	r0, #37041	; 0x90b1
   27ac0:	movt	r0, #7
   27ac4:	bl	12864 <gettext@plt>
   27ac8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   27acc:	ldrb	r3, [r1]
   27ad0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   27ad4:	movw	r2, #1
   27ad8:	str	r0, [sp, #20]
   27adc:	mov	r0, r2
   27ae0:	movw	r2, #0
   27ae4:	str	r1, [sp, #16]
   27ae8:	mov	r1, r2
   27aec:	ldr	r2, [sp, #20]
   27af0:	ldr	ip, [sp, #16]
   27af4:	str	ip, [sp]
   27af8:	bl	12780 <error@plt>
   27afc:	vldr	s0, [fp, #-40]	; 0xffffffd8
   27b00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27b04:	vldr	s2, [r0, #28]
   27b08:	vadd.f32	s0, s2, s0
   27b0c:	vstr	s0, [r0, #28]
   27b10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27b14:	add	r0, r0, #40	; 0x28
   27b18:	ldr	r1, [fp, #-36]	; 0xffffffdc
   27b1c:	add	r0, r0, r1
   27b20:	movw	r1, #1
   27b24:	strb	r1, [r0]
   27b28:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27b2c:	add	r0, r0, #1
   27b30:	str	r0, [fp, #-28]	; 0xffffffe4
   27b34:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27b38:	ldrsb	r0, [r0]
   27b3c:	cmp	r0, #0
   27b40:	beq	27bc4 <__assert_fail@plt+0x1500c>
   27b44:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27b48:	ldrb	r0, [r0]
   27b4c:	cmp	r0, #44	; 0x2c
   27b50:	beq	27b7c <__assert_fail@plt+0x14fc4>
   27b54:	movw	r0, #37094	; 0x90e6
   27b58:	movt	r0, #7
   27b5c:	bl	12864 <gettext@plt>
   27b60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27b64:	movw	r1, #1
   27b68:	str	r0, [sp, #12]
   27b6c:	mov	r0, r1
   27b70:	movw	r1, #0
   27b74:	ldr	r2, [sp, #12]
   27b78:	bl	12780 <error@plt>
   27b7c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27b80:	add	r0, r0, #1
   27b84:	str	r0, [fp, #-28]	; 0xffffffe4
   27b88:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27b8c:	ldrsb	r0, [r0]
   27b90:	cmp	r0, #0
   27b94:	bne	27bc0 <__assert_fail@plt+0x15008>
   27b98:	movw	r0, #37144	; 0x9118
   27b9c:	movt	r0, #7
   27ba0:	bl	12864 <gettext@plt>
   27ba4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27ba8:	movw	r1, #1
   27bac:	str	r0, [sp, #8]
   27bb0:	mov	r0, r1
   27bb4:	movw	r1, #0
   27bb8:	ldr	r2, [sp, #8]
   27bbc:	bl	12780 <error@plt>
   27bc0:	b	27bc4 <__assert_fail@plt+0x1500c>
   27bc4:	b	27880 <__assert_fail@plt+0x14cc8>
   27bc8:	movw	r0, #1
   27bcc:	and	r0, r0, #1
   27bd0:	strb	r0, [fp, #-1]
   27bd4:	ldrb	r0, [fp, #-1]
   27bd8:	and	r0, r0, #1
   27bdc:	mov	sp, fp
   27be0:	pop	{fp, pc}
   27be4:	andeq	r0, r0, r0
   27be8:			; <UNDEFINED> instruction: 0x378560fd
   27bec:	usatcc	r7, #29, lr, asr #16
   27bf0:	cfldr64cc	mvdx12, [lr], #436	; 0x1b4
   27bf4:	ldccc	3, cr13, [ip, #364]!	; 0x16c
   27bf8:	stmibcc	r8!, {r2, r4, r5, r6, r9, lr}^
   27bfc:	bcc	1a59eb4 <stdout@@GLIBC_2.4+0x19cc780>
   27c00:	push	{r4, r5, r6, sl, fp, lr}
   27c04:	add	fp, sp, #16
   27c08:	sub	sp, sp, #56	; 0x38
   27c0c:	ldr	ip, [fp, #24]
   27c10:	ldr	lr, [fp, #20]
   27c14:	ldr	r4, [fp, #16]
   27c18:	ldr	r5, [fp, #12]
   27c1c:	ldr	r6, [fp, #8]
   27c20:	str	r0, [fp, #-20]	; 0xffffffec
   27c24:	str	r1, [fp, #-24]	; 0xffffffe8
   27c28:	str	r2, [fp, #-28]	; 0xffffffe4
   27c2c:	str	r3, [fp, #-32]	; 0xffffffe0
   27c30:	ldr	r0, [fp, #-20]	; 0xffffffec
   27c34:	ldr	r0, [r0, #12]
   27c38:	sub	r0, r0, #1
   27c3c:	str	r0, [sp, #32]
   27c40:	movw	r0, #57020	; 0xdebc
   27c44:	movt	r0, #8
   27c48:	ldr	r0, [r0]
   27c4c:	movw	r1, #0
   27c50:	cmp	r0, r1
   27c54:	bne	27c74 <__assert_fail@plt+0x150bc>
   27c58:	ldr	r0, [fp, #-20]	; 0xffffffec
   27c5c:	ldr	r0, [r0, #12]
   27c60:	add	r0, r0, #1
   27c64:	bl	4a2f0 <__assert_fail@plt+0x37738>
   27c68:	movw	r1, #57020	; 0xdebc
   27c6c:	movt	r1, #8
   27c70:	str	r0, [r1]
   27c74:	movw	r0, #57020	; 0xdebc
   27c78:	movt	r0, #8
   27c7c:	ldr	r0, [r0]
   27c80:	str	r0, [sp, #36]	; 0x24
   27c84:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27c88:	ldr	r1, [fp, #-20]	; 0xffffffec
   27c8c:	ldr	r1, [r1, #24]
   27c90:	bl	2ff20 <__assert_fail@plt+0x1d368>
   27c94:	str	r0, [sp, #24]
   27c98:	ldr	r0, [sp, #24]
   27c9c:	movw	r1, #0
   27ca0:	cmp	r0, r1
   27ca4:	beq	27cbc <__assert_fail@plt+0x15104>
   27ca8:	ldr	r0, [sp, #24]
   27cac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   27cb0:	sub	r0, r0, r1
   27cb4:	str	r0, [sp, #28]
   27cb8:	b	27cc4 <__assert_fail@plt+0x1510c>
   27cbc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27cc0:	str	r0, [sp, #28]
   27cc4:	ldr	r0, [sp, #32]
   27cc8:	ldr	r1, [sp, #28]
   27ccc:	cmp	r0, r1
   27cd0:	bhi	27cd8 <__assert_fail@plt+0x15120>
   27cd4:	b	27df0 <__assert_fail@plt+0x15238>
   27cd8:	ldr	r0, [sp, #28]
   27cdc:	ldr	r1, [sp, #32]
   27ce0:	sub	r0, r1, r0
   27ce4:	str	r0, [sp, #32]
   27ce8:	ldr	r0, [sp, #36]	; 0x24
   27cec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   27cf0:	ldr	r2, [sp, #28]
   27cf4:	bl	12918 <strncpy@plt>
   27cf8:	ldr	r1, [sp, #28]
   27cfc:	ldr	r2, [sp, #36]	; 0x24
   27d00:	add	r1, r2, r1
   27d04:	str	r1, [sp, #36]	; 0x24
   27d08:	ldr	r1, [sp, #28]
   27d0c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   27d10:	add	r1, r2, r1
   27d14:	str	r1, [fp, #-28]	; 0xffffffe4
   27d18:	ldr	r1, [sp, #28]
   27d1c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   27d20:	sub	r1, r2, r1
   27d24:	str	r1, [fp, #-32]	; 0xffffffe0
   27d28:	ldr	r1, [sp, #24]
   27d2c:	movw	r2, #0
   27d30:	cmp	r1, r2
   27d34:	beq	27ddc <__assert_fail@plt+0x15224>
   27d38:	ldr	r0, [sp, #32]
   27d3c:	ldr	r1, [fp, #20]
   27d40:	ldr	r2, [fp, #12]
   27d44:	add	r1, r1, r2
   27d48:	cmp	r0, r1
   27d4c:	bhi	27d54 <__assert_fail@plt+0x1519c>
   27d50:	b	27df0 <__assert_fail@plt+0x15238>
   27d54:	ldr	r0, [fp, #20]
   27d58:	ldr	r1, [fp, #12]
   27d5c:	add	r0, r0, r1
   27d60:	ldr	r1, [sp, #32]
   27d64:	sub	r0, r1, r0
   27d68:	str	r0, [sp, #32]
   27d6c:	ldr	r0, [fp, #8]
   27d70:	movw	r1, #0
   27d74:	cmp	r0, r1
   27d78:	beq	27d98 <__assert_fail@plt+0x151e0>
   27d7c:	ldr	r0, [sp, #36]	; 0x24
   27d80:	ldr	r1, [fp, #8]
   27d84:	bl	12738 <strcpy@plt>
   27d88:	ldr	r1, [fp, #12]
   27d8c:	ldr	r2, [sp, #36]	; 0x24
   27d90:	add	r1, r2, r1
   27d94:	str	r1, [sp, #36]	; 0x24
   27d98:	ldr	r0, [sp, #36]	; 0x24
   27d9c:	ldr	r1, [fp, #16]
   27da0:	bl	12738 <strcpy@plt>
   27da4:	ldr	r1, [fp, #20]
   27da8:	ldr	r2, [sp, #36]	; 0x24
   27dac:	add	r1, r2, r1
   27db0:	str	r1, [sp, #36]	; 0x24
   27db4:	ldr	r1, [fp, #-20]	; 0xffffffec
   27db8:	ldr	r1, [r1, #20]
   27dbc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   27dc0:	add	r1, r2, r1
   27dc4:	str	r1, [fp, #-28]	; 0xffffffe4
   27dc8:	ldr	r1, [fp, #-20]	; 0xffffffec
   27dcc:	ldr	r1, [r1, #20]
   27dd0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   27dd4:	sub	r1, r2, r1
   27dd8:	str	r1, [fp, #-32]	; 0xffffffe0
   27ddc:	b	27de0 <__assert_fail@plt+0x15228>
   27de0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27de4:	ldrsb	r0, [r0]
   27de8:	cmp	r0, #0
   27dec:	bne	27c84 <__assert_fail@plt+0x150cc>
   27df0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27df4:	ldrsb	r0, [r0]
   27df8:	cmp	r0, #0
   27dfc:	beq	27e24 <__assert_fail@plt+0x1526c>
   27e00:	movw	r0, #38864	; 0x97d0
   27e04:	movt	r0, #7
   27e08:	bl	12864 <gettext@plt>
   27e0c:	movw	r1, #1
   27e10:	str	r0, [sp, #20]
   27e14:	mov	r0, r1
   27e18:	movw	r1, #0
   27e1c:	ldr	r2, [sp, #20]
   27e20:	bl	12780 <error@plt>
   27e24:	ldr	r0, [sp, #36]	; 0x24
   27e28:	add	r1, r0, #1
   27e2c:	str	r1, [sp, #36]	; 0x24
   27e30:	movw	r1, #0
   27e34:	strb	r1, [r0]
   27e38:	ldr	r0, [fp, #-20]	; 0xffffffec
   27e3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   27e40:	movw	r2, #57020	; 0xdebc
   27e44:	movt	r2, #8
   27e48:	ldr	r3, [r2]
   27e4c:	ldr	ip, [sp, #36]	; 0x24
   27e50:	ldr	r2, [r2]
   27e54:	sub	r2, ip, r2
   27e58:	ldr	ip, [fp, #24]
   27e5c:	str	r2, [sp, #16]
   27e60:	mov	r2, r3
   27e64:	ldr	r3, [sp, #16]
   27e68:	movw	lr, #0
   27e6c:	str	lr, [sp]
   27e70:	str	lr, [sp, #4]
   27e74:	str	ip, [sp, #8]
   27e78:	bl	27e84 <__assert_fail@plt+0x152cc>
   27e7c:	sub	sp, fp, #16
   27e80:	pop	{r4, r5, r6, sl, fp, pc}
   27e84:	push	{r4, sl, fp, lr}
   27e88:	add	fp, sp, #8
   27e8c:	sub	sp, sp, #40	; 0x28
   27e90:	ldr	ip, [fp, #16]
   27e94:	ldr	lr, [fp, #12]
   27e98:	ldr	r4, [fp, #8]
   27e9c:	str	r0, [fp, #-12]
   27ea0:	str	r1, [fp, #-16]
   27ea4:	str	r2, [fp, #-20]	; 0xffffffec
   27ea8:	str	r3, [sp, #24]
   27eac:	ldr	r0, [fp, #-20]	; 0xffffffec
   27eb0:	movw	r1, #54792	; 0xd608
   27eb4:	movt	r1, #8
   27eb8:	ldr	r1, [r1]
   27ebc:	cmp	r0, r1
   27ec0:	movw	r0, #0
   27ec4:	moveq	r0, #1
   27ec8:	and	r0, r0, #1
   27ecc:	str	r0, [sp, #20]
   27ed0:	ldr	r0, [fp, #-20]	; 0xffffffec
   27ed4:	movw	r1, #0
   27ed8:	cmp	r0, r1
   27edc:	beq	27ee4 <__assert_fail@plt+0x1532c>
   27ee0:	b	27f04 <__assert_fail@plt+0x1534c>
   27ee4:	movw	r0, #39075	; 0x98a3
   27ee8:	movt	r0, #7
   27eec:	movw	r1, #38901	; 0x97f5
   27ef0:	movt	r1, #7
   27ef4:	movw	r2, #341	; 0x155
   27ef8:	movw	r3, #39087	; 0x98af
   27efc:	movt	r3, #7
   27f00:	bl	12bb8 <__assert_fail@plt>
   27f04:	ldr	r0, [sp, #20]
   27f08:	cmp	r0, #0
   27f0c:	bne	2801c <__assert_fail@plt+0x15464>
   27f10:	ldr	r0, [fp, #-16]
   27f14:	ldr	r0, [r0, #16]
   27f18:	ldr	r1, [sp, #24]
   27f1c:	add	r0, r0, r1
   27f20:	ldr	r1, [fp, #12]
   27f24:	add	r0, r0, r1
   27f28:	ldr	r1, [fp, #-12]
   27f2c:	ldr	r1, [r1, #12]
   27f30:	cmp	r0, r1
   27f34:	bls	27ff4 <__assert_fail@plt+0x1543c>
   27f38:	ldr	r0, [fp, #16]
   27f3c:	cmp	r0, #0
   27f40:	bne	27f5c <__assert_fail@plt+0x153a4>
   27f44:	ldr	r0, [fp, #-16]
   27f48:	ldr	r0, [r0]
   27f4c:	ldr	r1, [fp, #-12]
   27f50:	ldr	r1, [r1, #28]
   27f54:	cmp	r0, r1
   27f58:	bne	27f80 <__assert_fail@plt+0x153c8>
   27f5c:	movw	r0, #39205	; 0x9925
   27f60:	movt	r0, #7
   27f64:	bl	12864 <gettext@plt>
   27f68:	movw	r1, #1
   27f6c:	str	r0, [sp, #16]
   27f70:	mov	r0, r1
   27f74:	movw	r1, #0
   27f78:	ldr	r2, [sp, #16]
   27f7c:	bl	12780 <error@plt>
   27f80:	ldr	r0, [fp, #-12]
   27f84:	ldr	r0, [r0, #24]
   27f88:	movw	r1, #0
   27f8c:	cmp	r0, r1
   27f90:	bne	27fc4 <__assert_fail@plt+0x1540c>
   27f94:	ldr	r0, [fp, #-12]
   27f98:	ldr	r0, [r0]
   27f9c:	cmp	r0, #0
   27fa0:	beq	27fe8 <__assert_fail@plt+0x15430>
   27fa4:	ldr	r0, [fp, #-12]
   27fa8:	ldr	r0, [r0, #36]	; 0x24
   27fac:	cmp	r0, #0
   27fb0:	bne	27fc4 <__assert_fail@plt+0x1540c>
   27fb4:	ldr	r0, [fp, #-12]
   27fb8:	ldr	r0, [r0, #40]	; 0x28
   27fbc:	cmp	r0, #0
   27fc0:	beq	27fe8 <__assert_fail@plt+0x15430>
   27fc4:	movw	r0, #39264	; 0x9960
   27fc8:	movt	r0, #7
   27fcc:	bl	12864 <gettext@plt>
   27fd0:	movw	r1, #1
   27fd4:	str	r0, [sp, #12]
   27fd8:	mov	r0, r1
   27fdc:	movw	r1, #0
   27fe0:	ldr	r2, [sp, #12]
   27fe4:	bl	12780 <error@plt>
   27fe8:	ldr	r0, [fp, #-12]
   27fec:	ldr	r1, [fp, #-16]
   27ff0:	bl	281e8 <__assert_fail@plt+0x15630>
   27ff4:	ldr	r0, [fp, #16]
   27ff8:	ldr	r1, [fp, #-12]
   27ffc:	ldr	r2, [fp, #-16]
   28000:	bl	287a0 <__assert_fail@plt+0x15be8>
   28004:	cmp	r0, #0
   28008:	beq	28018 <__assert_fail@plt+0x15460>
   2800c:	ldr	r0, [fp, #-12]
   28010:	ldr	r1, [fp, #-16]
   28014:	bl	281e8 <__assert_fail@plt+0x15630>
   28018:	b	2801c <__assert_fail@plt+0x15464>
   2801c:	ldr	r0, [fp, #16]
   28020:	cmp	r0, #0
   28024:	bne	28034 <__assert_fail@plt+0x1547c>
   28028:	ldr	r0, [fp, #-16]
   2802c:	movw	r1, #1
   28030:	str	r1, [r0, #28]
   28034:	ldr	r0, [fp, #-16]
   28038:	ldr	r0, [r0]
   2803c:	ldr	r1, [fp, #-16]
   28040:	ldr	r1, [r1, #8]
   28044:	cmp	r0, r1
   28048:	bcc	280c4 <__assert_fail@plt+0x1550c>
   2804c:	ldr	r0, [fp, #-16]
   28050:	ldr	r0, [r0, #4]
   28054:	movw	r1, #0
   28058:	cmp	r0, r1
   2805c:	bne	28088 <__assert_fail@plt+0x154d0>
   28060:	ldr	r0, [fp, #-16]
   28064:	mov	r1, #64	; 0x40
   28068:	str	r1, [r0, #8]
   2806c:	ldr	r0, [fp, #-16]
   28070:	ldr	r0, [r0, #8]
   28074:	lsl	r0, r0, #2
   28078:	bl	4a2f0 <__assert_fail@plt+0x37738>
   2807c:	ldr	r1, [fp, #-16]
   28080:	str	r0, [r1, #4]
   28084:	b	280c0 <__assert_fail@plt+0x15508>
   28088:	ldr	r0, [fp, #-16]
   2808c:	ldr	r1, [r0, #8]
   28090:	lsl	r1, r1, #1
   28094:	str	r1, [r0, #8]
   28098:	ldr	r0, [fp, #-16]
   2809c:	ldr	r1, [r0, #4]
   280a0:	ldr	r0, [r0, #8]
   280a4:	lsl	r0, r0, #2
   280a8:	str	r0, [sp, #8]
   280ac:	mov	r0, r1
   280b0:	ldr	r1, [sp, #8]
   280b4:	bl	4a388 <__assert_fail@plt+0x377d0>
   280b8:	ldr	r1, [fp, #-16]
   280bc:	str	r0, [r1, #4]
   280c0:	b	280c4 <__assert_fail@plt+0x1550c>
   280c4:	ldr	r0, [sp, #20]
   280c8:	cmp	r0, #0
   280cc:	beq	280f4 <__assert_fail@plt+0x1553c>
   280d0:	ldr	r0, [fp, #-16]
   280d4:	ldr	r1, [r0]
   280d8:	ldr	r2, [r0, #4]
   280dc:	add	r3, r1, #1
   280e0:	str	r3, [r0]
   280e4:	add	r0, r2, r1, lsl #2
   280e8:	movw	r1, #0
   280ec:	str	r1, [r0]
   280f0:	b	281c4 <__assert_fail@plt+0x1560c>
   280f4:	ldr	r0, [fp, #-16]
   280f8:	ldr	r1, [r0]
   280fc:	ldr	r2, [r0, #4]
   28100:	ldr	r3, [r0, #12]
   28104:	ldr	ip, [r0, #16]
   28108:	add	r3, r3, ip
   2810c:	add	ip, r1, #1
   28110:	str	ip, [r0]
   28114:	add	r0, r2, r1, lsl #2
   28118:	str	r3, [r0]
   2811c:	ldr	r0, [fp, #8]
   28120:	movw	r1, #0
   28124:	cmp	r0, r1
   28128:	beq	2815c <__assert_fail@plt+0x155a4>
   2812c:	ldr	r0, [fp, #-16]
   28130:	ldr	r0, [r0, #12]
   28134:	ldr	r1, [fp, #-16]
   28138:	ldr	r1, [r1, #16]
   2813c:	add	r0, r0, r1
   28140:	ldr	r1, [fp, #8]
   28144:	bl	12738 <strcpy@plt>
   28148:	ldr	r1, [fp, #12]
   2814c:	ldr	r2, [fp, #-16]
   28150:	ldr	r3, [r2, #16]
   28154:	add	r1, r3, r1
   28158:	str	r1, [r2, #16]
   2815c:	ldr	r0, [fp, #-16]
   28160:	ldr	r0, [r0, #12]
   28164:	ldr	r1, [fp, #-16]
   28168:	ldr	r1, [r1, #16]
   2816c:	add	r0, r0, r1
   28170:	ldr	r1, [fp, #-20]	; 0xffffffec
   28174:	bl	12738 <strcpy@plt>
   28178:	ldr	r1, [sp, #24]
   2817c:	ldr	r2, [fp, #-16]
   28180:	ldr	r3, [r2, #16]
   28184:	add	r1, r3, r1
   28188:	str	r1, [r2, #16]
   2818c:	ldr	r1, [fp, #16]
   28190:	ldr	r2, [fp, #-12]
   28194:	ldr	r3, [fp, #-16]
   28198:	str	r0, [sp, #4]
   2819c:	mov	r0, r1
   281a0:	mov	r1, r2
   281a4:	mov	r2, r3
   281a8:	bl	287a0 <__assert_fail@plt+0x15be8>
   281ac:	cmp	r0, #0
   281b0:	beq	281c0 <__assert_fail@plt+0x15608>
   281b4:	ldr	r0, [fp, #-12]
   281b8:	ldr	r1, [fp, #-16]
   281bc:	bl	281e8 <__assert_fail@plt+0x15630>
   281c0:	b	281c4 <__assert_fail@plt+0x1560c>
   281c4:	ldr	r0, [fp, #16]
   281c8:	cmp	r0, #0
   281cc:	beq	281e0 <__assert_fail@plt+0x15628>
   281d0:	ldr	r0, [fp, #-16]
   281d4:	ldr	r0, [r0, #16]
   281d8:	ldr	r1, [fp, #-16]
   281dc:	str	r0, [r1, #20]
   281e0:	sub	sp, fp, #8
   281e4:	pop	{r4, sl, fp, pc}
   281e8:	push	{fp, lr}
   281ec:	mov	fp, sp
   281f0:	sub	sp, sp, #40	; 0x28
   281f4:	str	r0, [fp, #-4]
   281f8:	str	r1, [fp, #-8]
   281fc:	ldr	r0, [fp, #-4]
   28200:	ldr	r1, [fp, #-8]
   28204:	bl	283ec <__assert_fail@plt+0x15834>
   28208:	ldr	r0, [fp, #-8]
   2820c:	ldr	r0, [r0]
   28210:	cmp	r0, #0
   28214:	bls	2821c <__assert_fail@plt+0x15664>
   28218:	b	2823c <__assert_fail@plt+0x15684>
   2821c:	movw	r0, #38881	; 0x97e1
   28220:	movt	r0, #7
   28224:	movw	r1, #38901	; 0x97f5
   28228:	movt	r1, #7
   2822c:	movw	r2, #261	; 0x105
   28230:	movw	r3, #38912	; 0x9800
   28234:	movt	r3, #7
   28238:	bl	12bb8 <__assert_fail@plt>
   2823c:	ldr	r0, [fp, #-8]
   28240:	ldr	r1, [r0]
   28244:	ldr	r0, [r0, #4]
   28248:	sub	r1, r1, #1
   2824c:	add	r0, r0, r1, lsl #2
   28250:	ldr	r0, [r0]
   28254:	movw	r1, #0
   28258:	cmp	r0, r1
   2825c:	bne	28264 <__assert_fail@plt+0x156ac>
   28260:	b	28284 <__assert_fail@plt+0x156cc>
   28264:	movw	r0, #38980	; 0x9844
   28268:	movt	r0, #7
   2826c:	movw	r1, #38901	; 0x97f5
   28270:	movt	r1, #7
   28274:	movw	r2, #262	; 0x106
   28278:	movw	r3, #38912	; 0x9800
   2827c:	movt	r3, #7
   28280:	bl	12bb8 <__assert_fail@plt>
   28284:	ldr	r0, [fp, #-8]
   28288:	ldr	r0, [r0]
   2828c:	add	r0, r0, #1
   28290:	lsl	r0, r0, #2
   28294:	bl	4a2f0 <__assert_fail@plt+0x37738>
   28298:	str	r0, [fp, #-12]
   2829c:	movw	r0, #0
   282a0:	str	r0, [sp, #20]
   282a4:	ldr	r0, [fp, #-8]
   282a8:	ldr	r0, [r0]
   282ac:	str	r0, [fp, #-16]
   282b0:	ldr	r0, [fp, #-4]
   282b4:	ldr	r1, [fp, #-8]
   282b8:	ldr	r2, [fp, #-12]
   282bc:	ldr	r3, [fp, #-16]
   282c0:	ldr	ip, [sp, #20]
   282c4:	str	ip, [sp]
   282c8:	bl	28438 <__assert_fail@plt+0x15880>
   282cc:	str	r0, [sp, #16]
   282d0:	ldr	r0, [fp, #-4]
   282d4:	ldr	r0, [r0, #32]
   282d8:	ldr	r1, [fp, #-4]
   282dc:	ldr	r2, [fp, #-8]
   282e0:	ldr	r2, [r2, #24]
   282e4:	ldr	r3, [sp, #16]
   282e8:	ldr	ip, [fp, #-12]
   282ec:	str	r0, [sp, #12]
   282f0:	mov	r0, r1
   282f4:	mov	r1, r2
   282f8:	mov	r2, r3
   282fc:	mov	r3, ip
   28300:	ldr	ip, [sp, #12]
   28304:	blx	ip
   28308:	cmp	r0, #0
   2830c:	beq	2834c <__assert_fail@plt+0x15794>
   28310:	ldr	r0, [fp, #-4]
   28314:	ldr	r1, [fp, #-8]
   28318:	ldr	r3, [fp, #-16]
   2831c:	movw	r2, #1
   28320:	and	r2, r2, #1
   28324:	bl	28588 <__assert_fail@plt+0x159d0>
   28328:	str	r0, [fp, #-16]
   2832c:	ldr	r0, [sp, #16]
   28330:	ldr	r1, [fp, #-4]
   28334:	ldr	r1, [r1, #28]
   28338:	sub	r0, r0, r1
   2833c:	ldr	r1, [sp, #20]
   28340:	add	r0, r1, r0
   28344:	str	r0, [sp, #20]
   28348:	b	283a8 <__assert_fail@plt+0x157f0>
   2834c:	ldr	r0, [fp, #-16]
   28350:	ldr	r1, [fp, #-4]
   28354:	ldr	r1, [r1, #28]
   28358:	add	r1, r1, #1
   2835c:	cmp	r0, r1
   28360:	bhi	28388 <__assert_fail@plt+0x157d0>
   28364:	movw	r0, #39023	; 0x986f
   28368:	movt	r0, #7
   2836c:	bl	12864 <gettext@plt>
   28370:	movw	r1, #1
   28374:	str	r0, [sp, #8]
   28378:	mov	r0, r1
   2837c:	movw	r1, #0
   28380:	ldr	r2, [sp, #8]
   28384:	bl	12780 <error@plt>
   28388:	ldr	r0, [fp, #-4]
   2838c:	ldr	r1, [fp, #-8]
   28390:	ldr	r3, [fp, #-16]
   28394:	movw	r2, #0
   28398:	and	r2, r2, #1
   2839c:	bl	28588 <__assert_fail@plt+0x159d0>
   283a0:	str	r0, [fp, #-16]
   283a4:	b	283a8 <__assert_fail@plt+0x157f0>
   283a8:	b	283ac <__assert_fail@plt+0x157f4>
   283ac:	ldr	r0, [sp, #20]
   283b0:	add	r0, r0, #1
   283b4:	ldr	r1, [fp, #-8]
   283b8:	ldr	r1, [r1]
   283bc:	ldr	r2, [fp, #-4]
   283c0:	ldr	r2, [r2, #28]
   283c4:	sub	r1, r1, r2
   283c8:	cmp	r0, r1
   283cc:	bcc	282b0 <__assert_fail@plt+0x156f8>
   283d0:	ldr	r0, [fp, #-12]
   283d4:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   283d8:	ldr	r0, [fp, #-4]
   283dc:	ldr	r1, [fp, #-8]
   283e0:	bl	28754 <__assert_fail@plt+0x15b9c>
   283e4:	mov	sp, fp
   283e8:	pop	{fp, pc}
   283ec:	push	{fp, lr}
   283f0:	mov	fp, sp
   283f4:	sub	sp, sp, #24
   283f8:	str	r0, [fp, #-4]
   283fc:	str	r1, [fp, #-8]
   28400:	ldr	r0, [fp, #-4]
   28404:	ldr	r1, [fp, #-8]
   28408:	movw	r2, #54792	; 0xd608
   2840c:	movt	r2, #8
   28410:	ldr	r2, [r2]
   28414:	movw	r3, #0
   28418:	str	r3, [sp, #12]
   2841c:	ldr	ip, [sp, #12]
   28420:	str	ip, [sp]
   28424:	str	ip, [sp, #4]
   28428:	str	ip, [sp, #8]
   2842c:	bl	27e84 <__assert_fail@plt+0x152cc>
   28430:	mov	sp, fp
   28434:	pop	{fp, pc}
   28438:	push	{fp, lr}
   2843c:	mov	fp, sp
   28440:	sub	sp, sp, #32
   28444:	ldr	ip, [fp, #8]
   28448:	str	r0, [fp, #-4]
   2844c:	str	r1, [fp, #-8]
   28450:	str	r2, [fp, #-12]
   28454:	str	r3, [sp, #16]
   28458:	movw	r0, #0
   2845c:	str	r0, [sp, #12]
   28460:	str	r0, [sp, #8]
   28464:	ldr	r0, [sp, #8]
   28468:	ldr	r1, [fp, #-4]
   2846c:	ldr	r1, [r1, #28]
   28470:	cmp	r0, r1
   28474:	bcs	284ac <__assert_fail@plt+0x158f4>
   28478:	ldr	r0, [fp, #-8]
   2847c:	ldr	r0, [r0, #4]
   28480:	ldr	r1, [sp, #8]
   28484:	add	r2, r1, #1
   28488:	str	r2, [sp, #8]
   2848c:	ldr	r0, [r0, r1, lsl #2]
   28490:	ldr	r1, [fp, #-12]
   28494:	ldr	r2, [sp, #12]
   28498:	add	r3, r2, #1
   2849c:	str	r3, [sp, #12]
   284a0:	add	r1, r1, r2, lsl #2
   284a4:	str	r0, [r1]
   284a8:	b	28464 <__assert_fail@plt+0x158ac>
   284ac:	ldr	r0, [fp, #8]
   284b0:	ldr	r1, [sp, #8]
   284b4:	add	r0, r1, r0
   284b8:	str	r0, [sp, #8]
   284bc:	ldr	r0, [sp, #8]
   284c0:	ldr	r1, [fp, #-8]
   284c4:	ldr	r1, [r1]
   284c8:	cmp	r0, r1
   284cc:	movw	r0, #0
   284d0:	str	r0, [sp, #4]
   284d4:	bcs	284f0 <__assert_fail@plt+0x15938>
   284d8:	ldr	r0, [sp, #12]
   284dc:	ldr	r1, [sp, #16]
   284e0:	cmp	r0, r1
   284e4:	movw	r0, #0
   284e8:	movcc	r0, #1
   284ec:	str	r0, [sp, #4]
   284f0:	ldr	r0, [sp, #4]
   284f4:	tst	r0, #1
   284f8:	beq	28530 <__assert_fail@plt+0x15978>
   284fc:	ldr	r0, [fp, #-8]
   28500:	ldr	r0, [r0, #4]
   28504:	ldr	r1, [sp, #8]
   28508:	add	r2, r1, #1
   2850c:	str	r2, [sp, #8]
   28510:	ldr	r0, [r0, r1, lsl #2]
   28514:	ldr	r1, [fp, #-12]
   28518:	ldr	r2, [sp, #12]
   2851c:	add	r3, r2, #1
   28520:	str	r3, [sp, #12]
   28524:	add	r1, r1, r2, lsl #2
   28528:	str	r0, [r1]
   2852c:	b	284bc <__assert_fail@plt+0x15904>
   28530:	ldr	r0, [sp, #12]
   28534:	ldr	r1, [fp, #-4]
   28538:	ldr	r1, [r1, #28]
   2853c:	cmp	r0, r1
   28540:	bcc	28548 <__assert_fail@plt+0x15990>
   28544:	b	28568 <__assert_fail@plt+0x159b0>
   28548:	movw	r0, #39580	; 0x9a9c
   2854c:	movt	r0, #7
   28550:	movw	r1, #38901	; 0x97f5
   28554:	movt	r1, #7
   28558:	movw	r2, #242	; 0xf2
   2855c:	movw	r3, #39609	; 0x9ab9
   28560:	movt	r3, #7
   28564:	bl	12bb8 <__assert_fail@plt>
   28568:	ldr	r0, [fp, #-12]
   2856c:	ldr	r1, [sp, #12]
   28570:	add	r0, r0, r1, lsl #2
   28574:	movw	r1, #0
   28578:	str	r1, [r0]
   2857c:	ldr	r0, [sp, #12]
   28580:	mov	sp, fp
   28584:	pop	{fp, pc}
   28588:	sub	sp, sp, #20
   2858c:	str	r0, [sp, #16]
   28590:	str	r1, [sp, #12]
   28594:	and	r0, r2, #1
   28598:	strb	r0, [sp, #11]
   2859c:	str	r3, [sp, #4]
   285a0:	ldrb	r0, [sp, #11]
   285a4:	tst	r0, #1
   285a8:	beq	285d0 <__assert_fail@plt+0x15a18>
   285ac:	ldr	r0, [sp, #4]
   285b0:	ldr	r1, [sp, #12]
   285b4:	ldr	r1, [r1, #36]	; 0x24
   285b8:	cmp	r0, r1
   285bc:	bls	285cc <__assert_fail@plt+0x15a14>
   285c0:	ldr	r0, [sp, #4]
   285c4:	ldr	r1, [sp, #12]
   285c8:	str	r0, [r1, #36]	; 0x24
   285cc:	b	28608 <__assert_fail@plt+0x15a50>
   285d0:	ldr	r0, [sp, #4]
   285d4:	ldr	r1, [sp, #12]
   285d8:	ldr	r1, [r1, #40]	; 0x28
   285dc:	cmp	r0, r1
   285e0:	bcc	285f8 <__assert_fail@plt+0x15a40>
   285e4:	ldr	r0, [sp, #12]
   285e8:	ldr	r0, [r0, #40]	; 0x28
   285ec:	movw	r1, #0
   285f0:	cmp	r1, r0
   285f4:	bne	28604 <__assert_fail@plt+0x15a4c>
   285f8:	ldr	r0, [sp, #4]
   285fc:	ldr	r1, [sp, #12]
   28600:	str	r0, [r1, #40]	; 0x28
   28604:	b	28608 <__assert_fail@plt+0x15a50>
   28608:	ldr	r0, [sp, #12]
   2860c:	ldr	r0, [r0, #36]	; 0x24
   28610:	movw	r1, #0
   28614:	cmp	r1, r0
   28618:	beq	28634 <__assert_fail@plt+0x15a7c>
   2861c:	ldr	r0, [sp, #12]
   28620:	ldr	r0, [r0, #40]	; 0x28
   28624:	ldr	r1, [sp, #12]
   28628:	ldr	r1, [r1, #36]	; 0x24
   2862c:	cmp	r0, r1
   28630:	bhi	2866c <__assert_fail@plt+0x15ab4>
   28634:	ldrb	r0, [sp, #11]
   28638:	tst	r0, #1
   2863c:	beq	2865c <__assert_fail@plt+0x15aa4>
   28640:	ldr	r0, [sp, #4]
   28644:	cmn	r0, #1
   28648:	bcs	28658 <__assert_fail@plt+0x15aa0>
   2864c:	ldr	r0, [sp, #4]
   28650:	add	r0, r0, #1
   28654:	str	r0, [sp, #4]
   28658:	b	28668 <__assert_fail@plt+0x15ab0>
   2865c:	ldr	r0, [sp, #4]
   28660:	lsr	r0, r0, #1
   28664:	str	r0, [sp, #4]
   28668:	b	286f8 <__assert_fail@plt+0x15b40>
   2866c:	ldr	r0, [sp, #12]
   28670:	ldr	r1, [r0, #36]	; 0x24
   28674:	ldr	r0, [r0, #40]	; 0x28
   28678:	sub	r0, r0, r1
   2867c:	lsr	r0, r0, #1
   28680:	str	r0, [sp]
   28684:	ldrb	r0, [sp, #11]
   28688:	tst	r0, #1
   2868c:	beq	286c0 <__assert_fail@plt+0x15b08>
   28690:	ldr	r0, [sp]
   28694:	cmp	r0, #0
   28698:	beq	286b0 <__assert_fail@plt+0x15af8>
   2869c:	ldr	r0, [sp]
   286a0:	ldr	r1, [sp, #4]
   286a4:	add	r0, r1, r0
   286a8:	str	r0, [sp, #4]
   286ac:	b	286bc <__assert_fail@plt+0x15b04>
   286b0:	ldr	r0, [sp, #4]
   286b4:	add	r0, r0, #1
   286b8:	str	r0, [sp, #4]
   286bc:	b	286f4 <__assert_fail@plt+0x15b3c>
   286c0:	ldr	r0, [sp]
   286c4:	cmp	r0, #0
   286c8:	beq	286e0 <__assert_fail@plt+0x15b28>
   286cc:	ldr	r0, [sp]
   286d0:	ldr	r1, [sp, #4]
   286d4:	sub	r0, r1, r0
   286d8:	str	r0, [sp, #4]
   286dc:	b	286f0 <__assert_fail@plt+0x15b38>
   286e0:	ldr	r0, [sp, #4]
   286e4:	mvn	r1, #0
   286e8:	add	r0, r0, r1
   286ec:	str	r0, [sp, #4]
   286f0:	b	286f4 <__assert_fail@plt+0x15b3c>
   286f4:	b	286f8 <__assert_fail@plt+0x15b40>
   286f8:	ldr	r0, [sp, #16]
   286fc:	ldr	r0, [r0, #28]
   28700:	cmp	r0, #0
   28704:	beq	28730 <__assert_fail@plt+0x15b78>
   28708:	ldr	r0, [sp, #4]
   2870c:	ldr	r1, [sp, #16]
   28710:	ldr	r1, [r1, #28]
   28714:	add	r1, r1, #1
   28718:	cmp	r0, r1
   2871c:	bhi	28730 <__assert_fail@plt+0x15b78>
   28720:	ldr	r0, [sp, #16]
   28724:	ldr	r0, [r0, #28]
   28728:	add	r0, r0, #1
   2872c:	str	r0, [sp, #4]
   28730:	ldr	r0, [sp, #4]
   28734:	movw	r1, #0
   28738:	cmp	r1, r0
   2873c:	bne	28748 <__assert_fail@plt+0x15b90>
   28740:	movw	r0, #1
   28744:	str	r0, [sp, #4]
   28748:	ldr	r0, [sp, #4]
   2874c:	add	sp, sp, #20
   28750:	bx	lr
   28754:	sub	sp, sp, #8
   28758:	str	r0, [sp, #4]
   2875c:	str	r1, [sp]
   28760:	ldr	r0, [sp, #4]
   28764:	ldr	r0, [r0, #28]
   28768:	ldr	r1, [sp]
   2876c:	str	r0, [r1]
   28770:	ldr	r0, [sp]
   28774:	ldr	r0, [r0, #20]
   28778:	ldr	r1, [sp]
   2877c:	str	r0, [r1, #16]
   28780:	ldr	r0, [sp]
   28784:	movw	r1, #0
   28788:	str	r1, [r0, #28]
   2878c:	ldr	r0, [sp]
   28790:	mvn	r1, #0
   28794:	str	r1, [r0, #32]
   28798:	add	sp, sp, #8
   2879c:	bx	lr
   287a0:	sub	sp, sp, #16
   287a4:	str	r0, [sp, #8]
   287a8:	str	r1, [sp, #4]
   287ac:	str	r2, [sp]
   287b0:	ldr	r0, [sp, #8]
   287b4:	cmp	r0, #0
   287b8:	bne	287fc <__assert_fail@plt+0x15c44>
   287bc:	ldr	r0, [sp, #4]
   287c0:	ldr	r0, [r0, #40]	; 0x28
   287c4:	cmp	r0, #0
   287c8:	beq	287fc <__assert_fail@plt+0x15c44>
   287cc:	ldr	r0, [sp]
   287d0:	ldr	r0, [r0]
   287d4:	ldr	r1, [sp, #4]
   287d8:	ldr	r1, [r1, #28]
   287dc:	sub	r0, r0, r1
   287e0:	ldr	r1, [sp, #4]
   287e4:	ldr	r1, [r1, #40]	; 0x28
   287e8:	cmp	r0, r1
   287ec:	bne	287fc <__assert_fail@plt+0x15c44>
   287f0:	movw	r0, #1
   287f4:	str	r0, [sp, #12]
   287f8:	b	28820 <__assert_fail@plt+0x15c68>
   287fc:	ldr	r0, [sp]
   28800:	ldr	r0, [r0]
   28804:	ldr	r1, [sp, #4]
   28808:	ldr	r1, [r1, #16]
   2880c:	cmp	r0, r1
   28810:	movw	r0, #0
   28814:	moveq	r0, #1
   28818:	and	r0, r0, #1
   2881c:	str	r0, [sp, #12]
   28820:	ldr	r0, [sp, #12]
   28824:	add	sp, sp, #16
   28828:	bx	lr
   2882c:	push	{fp, lr}
   28830:	mov	fp, sp
   28834:	sub	sp, sp, #8
   28838:	movw	r0, #0
   2883c:	bl	12654 <sysconf@plt>
   28840:	str	r0, [sp]
   28844:	ldr	r0, [sp]
   28848:	cmp	r0, #0
   2884c:	ble	2885c <__assert_fail@plt+0x15ca4>
   28850:	ldr	r0, [sp]
   28854:	str	r0, [sp, #4]
   28858:	b	28864 <__assert_fail@plt+0x15cac>
   2885c:	ldr	r0, [pc, #12]	; 28870 <__assert_fail@plt+0x15cb8>
   28860:	str	r0, [sp, #4]
   28864:	ldr	r0, [sp, #4]
   28868:	mov	sp, fp
   2886c:	pop	{fp, pc}
   28870:	svcvc	0x00ffffff
   28874:	push	{fp, lr}
   28878:	mov	fp, sp
   2887c:	sub	sp, sp, #8
   28880:	movw	r0, #0
   28884:	str	r0, [sp, #4]
   28888:	movw	r0, #55068	; 0xd71c
   2888c:	movt	r0, #8
   28890:	ldr	r0, [r0]
   28894:	str	r0, [sp]
   28898:	ldr	r0, [sp]
   2889c:	ldr	r0, [r0]
   288a0:	movw	r1, #0
   288a4:	cmp	r0, r1
   288a8:	beq	288d4 <__assert_fail@plt+0x15d1c>
   288ac:	ldr	r0, [sp]
   288b0:	add	r1, r0, #4
   288b4:	str	r1, [sp]
   288b8:	ldr	r0, [r0]
   288bc:	bl	12888 <strlen@plt>
   288c0:	add	r0, r0, #1
   288c4:	ldr	r1, [sp, #4]
   288c8:	add	r0, r1, r0
   288cc:	str	r0, [sp, #4]
   288d0:	b	28898 <__assert_fail@plt+0x15ce0>
   288d4:	ldr	r0, [sp, #4]
   288d8:	mov	sp, fp
   288dc:	pop	{fp, pc}
   288e0:	push	{fp, lr}
   288e4:	mov	fp, sp
   288e8:	sub	sp, sp, #16
   288ec:	str	r0, [sp, #8]
   288f0:	str	r1, [sp, #4]
   288f4:	bl	28874 <__assert_fail@plt+0x15cbc>
   288f8:	str	r0, [sp]
   288fc:	ldr	r0, [sp, #8]
   28900:	movw	r1, #4096	; 0x1000
   28904:	str	r1, [r0, #8]
   28908:	bl	2882c <__assert_fail@plt+0x15c74>
   2890c:	ldr	r1, [sp, #8]
   28910:	str	r0, [r1, #4]
   28914:	ldr	r0, [sp, #8]
   28918:	movw	r1, #0
   2891c:	str	r1, [r0]
   28920:	ldr	r0, [sp]
   28924:	ldr	r1, [sp, #8]
   28928:	ldr	r1, [r1, #4]
   2892c:	cmp	r0, r1
   28930:	bls	28940 <__assert_fail@plt+0x15d88>
   28934:	movw	r0, #1
   28938:	str	r0, [fp, #-4]
   2893c:	b	28a30 <__assert_fail@plt+0x15e78>
   28940:	ldr	r0, [sp, #4]
   28944:	ldr	r1, [sp]
   28948:	add	r0, r0, r1
   2894c:	ldr	r1, [sp, #8]
   28950:	ldr	r1, [r1, #4]
   28954:	cmp	r0, r1
   28958:	bcc	28968 <__assert_fail@plt+0x15db0>
   2895c:	movw	r0, #2
   28960:	str	r0, [fp, #-4]
   28964:	b	28a30 <__assert_fail@plt+0x15e78>
   28968:	ldr	r0, [sp]
   2896c:	ldr	r1, [sp, #8]
   28970:	ldr	r2, [r1, #4]
   28974:	sub	r0, r2, r0
   28978:	str	r0, [r1, #4]
   2897c:	ldr	r0, [sp, #4]
   28980:	ldr	r1, [sp, #8]
   28984:	ldr	r2, [r1, #4]
   28988:	sub	r0, r2, r0
   2898c:	str	r0, [r1, #4]
   28990:	b	28994 <__assert_fail@plt+0x15ddc>
   28994:	ldr	r0, [sp, #8]
   28998:	ldr	r0, [r0, #4]
   2899c:	lsr	r0, r0, #2
   289a0:	sub	r0, r0, #2
   289a4:	ldr	r1, [sp, #8]
   289a8:	str	r0, [r1, #16]
   289ac:	ldr	r0, [sp, #8]
   289b0:	ldr	r0, [r0, #16]
   289b4:	cmp	r0, #0
   289b8:	bls	289c0 <__assert_fail@plt+0x15e08>
   289bc:	b	289e0 <__assert_fail@plt+0x15e28>
   289c0:	movw	r0, #39287	; 0x9977
   289c4:	movt	r0, #7
   289c8:	movw	r1, #38901	; 0x97f5
   289cc:	movt	r1, #7
   289d0:	movw	r2, #518	; 0x206
   289d4:	movw	r3, #39310	; 0x998e
   289d8:	movt	r3, #7
   289dc:	bl	12bb8 <__assert_fail@plt>
   289e0:	ldr	r0, [sp, #8]
   289e4:	movw	r1, #0
   289e8:	str	r1, [r0, #20]
   289ec:	ldr	r0, [sp, #8]
   289f0:	str	r1, [r0, #24]
   289f4:	ldr	r0, [sp, #8]
   289f8:	str	r1, [r0, #28]
   289fc:	ldr	r0, [sp, #8]
   28a00:	movw	r2, #35388	; 0x8a3c
   28a04:	movt	r2, #2
   28a08:	str	r2, [r0, #32]
   28a0c:	ldr	r0, [sp, #8]
   28a10:	str	r1, [r0, #36]	; 0x24
   28a14:	ldr	r0, [sp, #8]
   28a18:	str	r1, [r0, #40]	; 0x28
   28a1c:	ldr	r0, [sp, #8]
   28a20:	ldr	r0, [r0, #4]
   28a24:	ldr	r2, [sp, #8]
   28a28:	str	r0, [r2, #12]
   28a2c:	str	r1, [fp, #-4]
   28a30:	ldr	r0, [fp, #-4]
   28a34:	mov	sp, fp
   28a38:	pop	{fp, pc}
   28a3c:	sub	sp, sp, #16
   28a40:	str	r0, [sp, #12]
   28a44:	str	r1, [sp, #8]
   28a48:	str	r2, [sp, #4]
   28a4c:	str	r3, [sp]
   28a50:	movw	r0, #0
   28a54:	add	sp, sp, #16
   28a58:	bx	lr
   28a5c:	sub	sp, sp, #4
   28a60:	ldr	r1, [pc, #100]	; 28acc <__assert_fail@plt+0x15f14>
   28a64:	str	r0, [sp]
   28a68:	ldr	r0, [sp]
   28a6c:	ldr	r0, [r0, #4]
   28a70:	cmp	r1, r0
   28a74:	bls	28a8c <__assert_fail@plt+0x15ed4>
   28a78:	ldr	r0, [sp]
   28a7c:	ldr	r0, [r0, #4]
   28a80:	ldr	r1, [sp]
   28a84:	str	r0, [r1, #12]
   28a88:	b	28ac4 <__assert_fail@plt+0x15f0c>
   28a8c:	ldr	r0, [pc, #56]	; 28acc <__assert_fail@plt+0x15f14>
   28a90:	ldr	r1, [sp]
   28a94:	ldr	r1, [r1, #8]
   28a98:	cmp	r0, r1
   28a9c:	bcs	28ab4 <__assert_fail@plt+0x15efc>
   28aa0:	ldr	r0, [sp]
   28aa4:	ldr	r0, [r0, #8]
   28aa8:	ldr	r1, [sp]
   28aac:	str	r0, [r1, #12]
   28ab0:	b	28ac0 <__assert_fail@plt+0x15f08>
   28ab4:	ldr	r0, [pc, #16]	; 28acc <__assert_fail@plt+0x15f14>
   28ab8:	ldr	r1, [sp]
   28abc:	str	r0, [r1, #12]
   28ac0:	b	28ac4 <__assert_fail@plt+0x15f0c>
   28ac4:	add	sp, sp, #4
   28ac8:	bx	lr
   28acc:	andeq	r0, r2, r0
   28ad0:	push	{fp, lr}
   28ad4:	mov	fp, sp
   28ad8:	sub	sp, sp, #16
   28adc:	ldr	r3, [pc, #196]	; 28ba8 <__assert_fail@plt+0x15ff0>
   28ae0:	str	r0, [fp, #-4]
   28ae4:	str	r1, [sp, #8]
   28ae8:	str	r2, [sp, #4]
   28aec:	ldr	r0, [sp, #8]
   28af0:	movw	r1, #0
   28af4:	str	r1, [r0]
   28af8:	ldr	r0, [sp, #8]
   28afc:	str	r1, [r0, #16]
   28b00:	ldr	r0, [sp, #8]
   28b04:	str	r1, [r0, #4]
   28b08:	ldr	r0, [sp, #8]
   28b0c:	str	r1, [r0, #8]
   28b10:	ldr	r0, [sp, #8]
   28b14:	str	r1, [r0, #36]	; 0x24
   28b18:	ldr	r0, [sp, #8]
   28b1c:	str	r1, [r0, #40]	; 0x28
   28b20:	ldr	r0, [fp, #-4]
   28b24:	ldr	r0, [r0, #12]
   28b28:	cmp	r0, r3
   28b2c:	bhi	28b34 <__assert_fail@plt+0x15f7c>
   28b30:	b	28b54 <__assert_fail@plt+0x15f9c>
   28b34:	movw	r0, #39385	; 0x99d9
   28b38:	movt	r0, #7
   28b3c:	movw	r1, #38901	; 0x97f5
   28b40:	movt	r1, #7
   28b44:	movw	r2, #572	; 0x23c
   28b48:	movw	r3, #39420	; 0x99fc
   28b4c:	movt	r3, #7
   28b50:	bl	12bb8 <__assert_fail@plt>
   28b54:	ldr	r0, [fp, #-4]
   28b58:	ldr	r0, [r0, #12]
   28b5c:	add	r0, r0, #1
   28b60:	bl	4a2f0 <__assert_fail@plt+0x37738>
   28b64:	ldr	r1, [sp, #8]
   28b68:	str	r0, [r1, #12]
   28b6c:	ldr	r0, [sp, #8]
   28b70:	movw	r1, #0
   28b74:	str	r1, [r0, #20]
   28b78:	ldr	r0, [sp, #8]
   28b7c:	str	r1, [r0, #16]
   28b80:	ldr	r0, [sp, #8]
   28b84:	str	r1, [r0, #28]
   28b88:	ldr	r0, [sp, #8]
   28b8c:	mvn	r1, #0
   28b90:	str	r1, [r0, #32]
   28b94:	ldr	r0, [sp, #4]
   28b98:	ldr	r1, [sp, #8]
   28b9c:	str	r0, [r1, #24]
   28ba0:	mov	sp, fp
   28ba4:	pop	{fp, pc}
   28ba8:	svcvc	0x00fff7ff
   28bac:	push	{fp, lr}
   28bb0:	mov	fp, sp
   28bb4:	sub	sp, sp, #16
   28bb8:	str	r0, [fp, #-4]
   28bbc:	movw	r0, #0
   28bc0:	str	r0, [sp, #4]
   28bc4:	str	r0, [sp, #8]
   28bc8:	ldr	r0, [fp, #-4]
   28bcc:	ldr	r0, [r0]
   28bd0:	movw	r1, #0
   28bd4:	cmp	r0, r1
   28bd8:	beq	28c10 <__assert_fail@plt+0x16058>
   28bdc:	ldr	r0, [sp, #4]
   28be0:	add	r0, r0, #1
   28be4:	str	r0, [sp, #4]
   28be8:	ldr	r0, [fp, #-4]
   28bec:	ldr	r0, [r0]
   28bf0:	bl	12888 <strlen@plt>
   28bf4:	ldr	r1, [sp, #8]
   28bf8:	add	r0, r1, r0
   28bfc:	str	r0, [sp, #8]
   28c00:	ldr	r0, [fp, #-4]
   28c04:	add	r0, r0, #4
   28c08:	str	r0, [fp, #-4]
   28c0c:	b	28bc8 <__assert_fail@plt+0x16010>
   28c10:	ldr	r1, [sp, #4]
   28c14:	movw	r0, #39505	; 0x9a51
   28c18:	movt	r0, #7
   28c1c:	bl	28c60 <__assert_fail@plt+0x160a8>
   28c20:	cmp	r0, #0
   28c24:	movw	r0, #1
   28c28:	str	r0, [sp]
   28c2c:	bne	28c50 <__assert_fail@plt+0x16098>
   28c30:	ldr	r1, [sp, #8]
   28c34:	movw	r0, #39542	; 0x9a76
   28c38:	movt	r0, #7
   28c3c:	bl	28c60 <__assert_fail@plt+0x160a8>
   28c40:	cmp	r0, #0
   28c44:	movw	r0, #0
   28c48:	movne	r0, #1
   28c4c:	str	r0, [sp]
   28c50:	ldr	r0, [sp]
   28c54:	and	r0, r0, #1
   28c58:	mov	sp, fp
   28c5c:	pop	{fp, pc}
   28c60:	push	{fp, lr}
   28c64:	mov	fp, sp
   28c68:	sub	sp, sp, #40	; 0x28
   28c6c:	str	r0, [fp, #-8]
   28c70:	str	r1, [fp, #-12]
   28c74:	ldr	r0, [fp, #-8]
   28c78:	bl	127bc <getenv@plt>
   28c7c:	str	r0, [fp, #-16]
   28c80:	ldr	r0, [fp, #-16]
   28c84:	movw	r1, #0
   28c88:	cmp	r0, r1
   28c8c:	beq	28d0c <__assert_fail@plt+0x16154>
   28c90:	ldr	r0, [fp, #-16]
   28c94:	add	r1, sp, #20
   28c98:	movw	r2, #10
   28c9c:	add	r3, sp, #16
   28ca0:	movw	ip, #0
   28ca4:	str	ip, [sp]
   28ca8:	bl	4d168 <__assert_fail@plt+0x3a5b0>
   28cac:	cmp	r0, #0
   28cb0:	bne	28cd4 <__assert_fail@plt+0x1611c>
   28cb4:	ldr	r0, [fp, #-12]
   28cb8:	ldr	r1, [sp, #16]
   28cbc:	cmp	r0, r1
   28cc0:	bls	28cd0 <__assert_fail@plt+0x16118>
   28cc4:	movw	r0, #1
   28cc8:	str	r0, [fp, #-4]
   28ccc:	b	28d14 <__assert_fail@plt+0x1615c>
   28cd0:	b	28d08 <__assert_fail@plt+0x16150>
   28cd4:	bl	128d0 <__errno_location@plt>
   28cd8:	ldr	r1, [r0]
   28cdc:	movw	r0, #39715	; 0x9b23
   28ce0:	movt	r0, #7
   28ce4:	str	r1, [sp, #12]
   28ce8:	bl	12864 <gettext@plt>
   28cec:	ldr	r3, [fp, #-8]
   28cf0:	movw	r1, #1
   28cf4:	str	r0, [sp, #8]
   28cf8:	mov	r0, r1
   28cfc:	ldr	r1, [sp, #12]
   28d00:	ldr	r2, [sp, #8]
   28d04:	bl	12780 <error@plt>
   28d08:	b	28d0c <__assert_fail@plt+0x16154>
   28d0c:	movw	r0, #0
   28d10:	str	r0, [fp, #-4]
   28d14:	ldr	r0, [fp, #-4]
   28d18:	mov	sp, fp
   28d1c:	pop	{fp, pc}
   28d20:	push	{fp, lr}
   28d24:	mov	fp, sp
   28d28:	sub	sp, sp, #40	; 0x28
   28d2c:	str	r0, [fp, #-4]
   28d30:	str	r1, [fp, #-8]
   28d34:	str	r2, [fp, #-12]
   28d38:	mvn	r0, #0
   28d3c:	str	r0, [fp, #-16]
   28d40:	movw	r0, #0
   28d44:	str	r0, [sp, #20]
   28d48:	add	r0, sp, #12
   28d4c:	bl	48d74 <__assert_fail@plt+0x361bc>
   28d50:	movw	r1, #0
   28d54:	cmp	r1, r0
   28d58:	bne	28df4 <__assert_fail@plt+0x1623c>
   28d5c:	ldr	r0, [fp, #-4]
   28d60:	bl	48e10 <__assert_fail@plt+0x36258>
   28d64:	movw	r1, #0
   28d68:	cmp	r1, r0
   28d6c:	bne	28dc0 <__assert_fail@plt+0x16208>
   28d70:	ldr	r0, [fp, #-8]
   28d74:	ldr	r1, [fp, #-12]
   28d78:	str	r0, [sp, #8]
   28d7c:	mov	r0, r1
   28d80:	ldr	r1, [sp, #8]
   28d84:	blx	r1
   28d88:	str	r0, [fp, #-16]
   28d8c:	ldr	r0, [fp, #-16]
   28d90:	cmp	r0, #0
   28d94:	bge	28da8 <__assert_fail@plt+0x161f0>
   28d98:	bl	128d0 <__errno_location@plt>
   28d9c:	ldr	r0, [r0]
   28da0:	str	r0, [sp, #4]
   28da4:	b	28db4 <__assert_fail@plt+0x161fc>
   28da8:	movw	r0, #0
   28dac:	str	r0, [sp, #4]
   28db0:	b	28db4 <__assert_fail@plt+0x161fc>
   28db4:	ldr	r0, [sp, #4]
   28db8:	str	r0, [sp, #20]
   28dbc:	b	28dcc <__assert_fail@plt+0x16214>
   28dc0:	bl	128d0 <__errno_location@plt>
   28dc4:	ldr	r0, [r0]
   28dc8:	bl	3242c <__assert_fail@plt+0x1f874>
   28dcc:	add	r0, sp, #12
   28dd0:	bl	48e10 <__assert_fail@plt+0x36258>
   28dd4:	cmp	r0, #0
   28dd8:	beq	28de8 <__assert_fail@plt+0x16230>
   28ddc:	bl	128d0 <__errno_location@plt>
   28de0:	ldr	r0, [r0]
   28de4:	bl	3242c <__assert_fail@plt+0x1f874>
   28de8:	add	r0, sp, #12
   28dec:	bl	48e64 <__assert_fail@plt+0x362ac>
   28df0:	b	28e00 <__assert_fail@plt+0x16248>
   28df4:	bl	128d0 <__errno_location@plt>
   28df8:	ldr	r0, [r0]
   28dfc:	bl	323d8 <__assert_fail@plt+0x1f820>
   28e00:	ldr	r0, [sp, #20]
   28e04:	cmp	r0, #0
   28e08:	beq	28e20 <__assert_fail@plt+0x16268>
   28e0c:	ldr	r0, [sp, #20]
   28e10:	str	r0, [sp]
   28e14:	bl	128d0 <__errno_location@plt>
   28e18:	ldr	r1, [sp]
   28e1c:	str	r1, [r0]
   28e20:	ldr	r0, [fp, #-16]
   28e24:	mov	sp, fp
   28e28:	pop	{fp, pc}
   28e2c:	push	{fp, lr}
   28e30:	mov	fp, sp
   28e34:	sub	sp, sp, #56	; 0x38
   28e38:	str	r0, [fp, #-8]
   28e3c:	str	r1, [fp, #-12]
   28e40:	str	r2, [fp, #-16]
   28e44:	ldr	r0, [fp, #-8]
   28e48:	cmn	r0, #100	; 0x64
   28e4c:	bne	28e70 <__assert_fail@plt+0x162b8>
   28e50:	ldr	r0, [fp, #-12]
   28e54:	ldr	r1, [fp, #-16]
   28e58:	str	r0, [sp, #20]
   28e5c:	mov	r0, r1
   28e60:	ldr	r1, [sp, #20]
   28e64:	blx	r1
   28e68:	str	r0, [fp, #-4]
   28e6c:	b	28f68 <__assert_fail@plt+0x163b0>
   28e70:	sub	r0, fp, #24
   28e74:	bl	48d74 <__assert_fail@plt+0x361bc>
   28e78:	cmp	r0, #0
   28e7c:	beq	28e8c <__assert_fail@plt+0x162d4>
   28e80:	bl	128d0 <__errno_location@plt>
   28e84:	ldr	r0, [r0]
   28e88:	bl	323d8 <__assert_fail@plt+0x1f820>
   28e8c:	ldr	r0, [fp, #-8]
   28e90:	bl	12aa4 <fchdir@plt>
   28e94:	cmp	r0, #0
   28e98:	beq	28ed0 <__assert_fail@plt+0x16318>
   28e9c:	bl	128d0 <__errno_location@plt>
   28ea0:	ldr	r0, [r0]
   28ea4:	str	r0, [sp, #28]
   28ea8:	sub	r0, fp, #24
   28eac:	bl	48e64 <__assert_fail@plt+0x362ac>
   28eb0:	ldr	r0, [sp, #28]
   28eb4:	str	r0, [sp, #16]
   28eb8:	bl	128d0 <__errno_location@plt>
   28ebc:	ldr	r1, [sp, #16]
   28ec0:	str	r1, [r0]
   28ec4:	mvn	r0, #0
   28ec8:	str	r0, [fp, #-4]
   28ecc:	b	28f68 <__assert_fail@plt+0x163b0>
   28ed0:	ldr	r0, [fp, #-12]
   28ed4:	ldr	r1, [fp, #-16]
   28ed8:	str	r0, [sp, #12]
   28edc:	mov	r0, r1
   28ee0:	ldr	r1, [sp, #12]
   28ee4:	blx	r1
   28ee8:	str	r0, [sp, #24]
   28eec:	ldr	r0, [sp, #24]
   28ef0:	cmp	r0, #0
   28ef4:	bge	28f08 <__assert_fail@plt+0x16350>
   28ef8:	bl	128d0 <__errno_location@plt>
   28efc:	ldr	r0, [r0]
   28f00:	str	r0, [sp, #8]
   28f04:	b	28f14 <__assert_fail@plt+0x1635c>
   28f08:	movw	r0, #0
   28f0c:	str	r0, [sp, #8]
   28f10:	b	28f14 <__assert_fail@plt+0x1635c>
   28f14:	ldr	r0, [sp, #8]
   28f18:	str	r0, [sp, #28]
   28f1c:	sub	r0, fp, #24
   28f20:	bl	48e10 <__assert_fail@plt+0x36258>
   28f24:	cmp	r0, #0
   28f28:	beq	28f38 <__assert_fail@plt+0x16380>
   28f2c:	bl	128d0 <__errno_location@plt>
   28f30:	ldr	r0, [r0]
   28f34:	bl	3242c <__assert_fail@plt+0x1f874>
   28f38:	sub	r0, fp, #24
   28f3c:	bl	48e64 <__assert_fail@plt+0x362ac>
   28f40:	ldr	r0, [sp, #28]
   28f44:	cmp	r0, #0
   28f48:	beq	28f60 <__assert_fail@plt+0x163a8>
   28f4c:	ldr	r0, [sp, #28]
   28f50:	str	r0, [sp, #4]
   28f54:	bl	128d0 <__errno_location@plt>
   28f58:	ldr	r1, [sp, #4]
   28f5c:	str	r1, [r0]
   28f60:	ldr	r0, [sp, #24]
   28f64:	str	r0, [fp, #-4]
   28f68:	ldr	r0, [fp, #-4]
   28f6c:	mov	sp, fp
   28f70:	pop	{fp, pc}
   28f74:	push	{fp, lr}
   28f78:	mov	fp, sp
   28f7c:	sub	sp, sp, #32
   28f80:	str	r0, [fp, #-4]
   28f84:	str	r1, [fp, #-8]
   28f88:	str	r2, [fp, #-12]
   28f8c:	bl	128d0 <__errno_location@plt>
   28f90:	ldr	r0, [r0]
   28f94:	str	r0, [sp, #16]
   28f98:	ldr	r0, [fp, #-8]
   28f9c:	cmp	r0, #0
   28fa0:	bls	28fa8 <__assert_fail@plt+0x163f0>
   28fa4:	b	28fc8 <__assert_fail@plt+0x16410>
   28fa8:	movw	r0, #39776	; 0x9b60
   28fac:	movt	r0, #7
   28fb0:	movw	r1, #39788	; 0x9b6c
   28fb4:	movt	r1, #7
   28fb8:	movw	r2, #71	; 0x47
   28fbc:	movw	r3, #39800	; 0x9b78
   28fc0:	movt	r3, #7
   28fc4:	bl	12bb8 <__assert_fail@plt>
   28fc8:	ldr	r0, [fp, #-12]
   28fcc:	ldr	r0, [r0]
   28fd0:	ldr	r1, [fp, #-8]
   28fd4:	bl	290c8 <__assert_fail@plt+0x16510>
   28fd8:	str	r0, [sp, #12]
   28fdc:	ldr	r0, [fp, #-12]
   28fe0:	ldr	r0, [r0]
   28fe4:	cmp	r0, #0
   28fe8:	bne	2903c <__assert_fail@plt+0x16484>
   28fec:	ldr	r0, [fp, #-4]
   28ff0:	movw	r1, #0
   28ff4:	cmp	r1, r0
   28ff8:	bne	29000 <__assert_fail@plt+0x16448>
   28ffc:	b	29020 <__assert_fail@plt+0x16468>
   29000:	movw	r0, #39842	; 0x9ba2
   29004:	movt	r0, #7
   29008:	movw	r1, #39788	; 0x9b6c
   2900c:	movt	r1, #7
   29010:	movw	r2, #79	; 0x4f
   29014:	movw	r3, #39800	; 0x9b78
   29018:	movt	r3, #7
   2901c:	bl	12bb8 <__assert_fail@plt>
   29020:	ldr	r0, [sp, #12]
   29024:	ldr	r1, [fp, #-12]
   29028:	str	r0, [r1]
   2902c:	ldr	r0, [sp, #12]
   29030:	bl	527f0 <__assert_fail@plt+0x3fc38>
   29034:	str	r0, [sp, #8]
   29038:	b	29098 <__assert_fail@plt+0x164e0>
   2903c:	ldr	r0, [sp, #12]
   29040:	ldr	r1, [fp, #-12]
   29044:	ldr	r1, [r1]
   29048:	cmp	r0, r1
   2904c:	beq	2908c <__assert_fail@plt+0x164d4>
   29050:	ldr	r0, [sp, #12]
   29054:	ldr	r1, [fp, #-12]
   29058:	str	r0, [r1]
   2905c:	ldr	r0, [fp, #-4]
   29060:	ldr	r1, [sp, #12]
   29064:	bl	538c8 <__assert_fail@plt+0x40d10>
   29068:	str	r0, [sp, #8]
   2906c:	ldr	r0, [sp, #8]
   29070:	movw	r1, #0
   29074:	cmp	r1, r0
   29078:	bne	29088 <__assert_fail@plt+0x164d0>
   2907c:	bl	128d0 <__errno_location@plt>
   29080:	ldr	r0, [r0]
   29084:	str	r0, [sp, #16]
   29088:	b	29094 <__assert_fail@plt+0x164dc>
   2908c:	ldr	r0, [fp, #-4]
   29090:	str	r0, [sp, #8]
   29094:	b	29098 <__assert_fail@plt+0x164e0>
   29098:	ldr	r0, [sp, #8]
   2909c:	movw	r1, #0
   290a0:	cmp	r0, r1
   290a4:	beq	290bc <__assert_fail@plt+0x16504>
   290a8:	ldr	r0, [sp, #16]
   290ac:	str	r0, [sp, #4]
   290b0:	bl	128d0 <__errno_location@plt>
   290b4:	ldr	r1, [sp, #4]
   290b8:	str	r1, [r0]
   290bc:	ldr	r0, [sp, #8]
   290c0:	mov	sp, fp
   290c4:	pop	{fp, pc}
   290c8:	sub	sp, sp, #16
   290cc:	str	r0, [sp, #8]
   290d0:	str	r1, [sp, #4]
   290d4:	ldr	r0, [sp, #8]
   290d8:	movw	r1, #0
   290dc:	cmp	r1, r0
   290e0:	bne	290f0 <__assert_fail@plt+0x16538>
   290e4:	movw	r0, #16
   290e8:	str	r0, [sp]
   290ec:	b	290f8 <__assert_fail@plt+0x16540>
   290f0:	ldr	r0, [sp, #8]
   290f4:	str	r0, [sp]
   290f8:	b	290fc <__assert_fail@plt+0x16544>
   290fc:	ldr	r0, [sp]
   29100:	ldr	r1, [sp, #4]
   29104:	cmp	r0, r1
   29108:	bcs	2913c <__assert_fail@plt+0x16584>
   2910c:	ldr	r0, [sp]
   29110:	lsl	r0, r0, #1
   29114:	ldr	r1, [sp]
   29118:	cmp	r0, r1
   2911c:	bcs	2912c <__assert_fail@plt+0x16574>
   29120:	ldr	r0, [sp, #4]
   29124:	str	r0, [sp, #12]
   29128:	b	29144 <__assert_fail@plt+0x1658c>
   2912c:	ldr	r0, [sp]
   29130:	lsl	r0, r0, #1
   29134:	str	r0, [sp]
   29138:	b	290fc <__assert_fail@plt+0x16544>
   2913c:	ldr	r0, [sp]
   29140:	str	r0, [sp, #12]
   29144:	ldr	r0, [sp, #12]
   29148:	add	sp, sp, #16
   2914c:	bx	lr
   29150:	push	{fp, lr}
   29154:	mov	fp, sp
   29158:	sub	sp, sp, #16
   2915c:	str	r0, [fp, #-4]
   29160:	str	r1, [sp, #8]
   29164:	str	r2, [sp, #4]
   29168:	ldr	r0, [fp, #-4]
   2916c:	ldr	r1, [sp, #8]
   29170:	ldr	r2, [sp, #4]
   29174:	bl	28f74 <__assert_fail@plt+0x163bc>
   29178:	str	r0, [sp]
   2917c:	ldr	r0, [sp]
   29180:	movw	r1, #0
   29184:	cmp	r1, r0
   29188:	bne	29198 <__assert_fail@plt+0x165e0>
   2918c:	ldr	r0, [fp, #-4]
   29190:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   29194:	bl	4d028 <__assert_fail@plt+0x3a470>
   29198:	ldr	r0, [sp]
   2919c:	mov	sp, fp
   291a0:	pop	{fp, pc}
   291a4:	push	{fp, lr}
   291a8:	mov	fp, sp
   291ac:	sub	sp, sp, #24
   291b0:	bl	29234 <__assert_fail@plt+0x1667c>
   291b4:	ldr	r1, [pc, #116]	; 29230 <__assert_fail@plt+0x16678>
   291b8:	str	r0, [fp, #-4]
   291bc:	movw	r0, #0
   291c0:	str	r0, [sp, #8]
   291c4:	str	r0, [sp, #16]
   291c8:	str	r0, [sp, #12]
   291cc:	ldr	r0, [fp, #-4]
   291d0:	cmp	r0, r1
   291d4:	bge	291e4 <__assert_fail@plt+0x1662c>
   291d8:	ldr	r0, [fp, #-4]
   291dc:	add	r0, r0, #1
   291e0:	str	r0, [fp, #-4]
   291e4:	ldr	r1, [fp, #-4]
   291e8:	add	r0, sp, #8
   291ec:	movw	r2, #0
   291f0:	str	r0, [sp, #4]
   291f4:	mov	r0, r2
   291f8:	movw	r2, #38016	; 0x9480
   291fc:	movt	r2, #2
   29200:	ldr	r3, [sp, #4]
   29204:	bl	292dc <__assert_fail@plt+0x16724>
   29208:	ldr	r1, [sp, #8]
   2920c:	movw	r2, #57024	; 0xdec0
   29210:	movt	r2, #8
   29214:	str	r1, [r2]
   29218:	ldr	r1, [sp, #12]
   2921c:	movw	r2, #57028	; 0xdec4
   29220:	movt	r2, #8
   29224:	str	r1, [r2]
   29228:	mov	sp, fp
   2922c:	pop	{fp, pc}
   29230:	svcvc	0x00ffffff
   29234:	push	{fp, lr}
   29238:	mov	fp, sp
   2923c:	sub	sp, sp, #24
   29240:	bl	29864 <__assert_fail@plt+0x16cac>
   29244:	str	r0, [fp, #-8]
   29248:	ldr	r0, [fp, #-8]
   2924c:	cmp	r0, #0
   29250:	blt	29260 <__assert_fail@plt+0x166a8>
   29254:	ldr	r0, [fp, #-8]
   29258:	str	r0, [fp, #-4]
   2925c:	b	292d0 <__assert_fail@plt+0x16718>
   29260:	movw	r0, #4
   29264:	bl	12654 <sysconf@plt>
   29268:	str	r0, [fp, #-8]
   2926c:	ldr	r0, [fp, #-8]
   29270:	cmn	r0, #1
   29274:	bne	29280 <__assert_fail@plt+0x166c8>
   29278:	movw	r0, #20
   2927c:	str	r0, [fp, #-8]
   29280:	movw	r0, #7
   29284:	mov	r1, sp
   29288:	bl	12660 <getrlimit64@plt>
   2928c:	movw	r1, #0
   29290:	cmp	r1, r0
   29294:	bne	292c8 <__assert_fail@plt+0x16710>
   29298:	ldr	r0, [sp]
   2929c:	ldr	r1, [sp, #4]
   292a0:	and	r0, r0, r1
   292a4:	cmn	r0, #1
   292a8:	bne	292bc <__assert_fail@plt+0x16704>
   292ac:	b	292b0 <__assert_fail@plt+0x166f8>
   292b0:	ldr	r0, [fp, #-8]
   292b4:	str	r0, [fp, #-4]
   292b8:	b	292d0 <__assert_fail@plt+0x16718>
   292bc:	ldr	r0, [sp]
   292c0:	str	r0, [fp, #-4]
   292c4:	b	292d0 <__assert_fail@plt+0x16718>
   292c8:	ldr	r0, [fp, #-8]
   292cc:	str	r0, [fp, #-4]
   292d0:	ldr	r0, [fp, #-4]
   292d4:	mov	sp, fp
   292d8:	pop	{fp, pc}
   292dc:	push	{r4, r5, fp, lr}
   292e0:	add	fp, sp, #8
   292e4:	sub	sp, sp, #552	; 0x228
   292e8:	str	r0, [fp, #-16]
   292ec:	str	r1, [fp, #-20]	; 0xffffffec
   292f0:	str	r2, [fp, #-24]	; 0xffffffe8
   292f4:	str	r3, [fp, #-28]	; 0xffffffe4
   292f8:	movw	r0, #0
   292fc:	str	r0, [sp, #16]
   29300:	ldr	r0, [fp, #-16]
   29304:	ldr	r1, [fp, #-20]	; 0xffffffec
   29308:	cmp	r0, r1
   2930c:	bge	2946c <__assert_fail@plt+0x168b4>
   29310:	ldr	r0, [fp, #-20]	; 0xffffffec
   29314:	ldr	r1, [fp, #-16]
   29318:	sub	r0, r0, r1
   2931c:	str	r0, [sp, #8]
   29320:	ldr	r0, [sp, #8]
   29324:	cmp	r0, #64	; 0x40
   29328:	ble	29334 <__assert_fail@plt+0x1677c>
   2932c:	movw	r0, #64	; 0x40
   29330:	str	r0, [sp, #8]
   29334:	movw	r0, #0
   29338:	str	r0, [sp, #12]
   2933c:	ldr	r0, [sp, #12]
   29340:	ldr	r1, [sp, #8]
   29344:	cmp	r0, r1
   29348:	bge	29394 <__assert_fail@plt+0x167dc>
   2934c:	ldr	r0, [sp, #12]
   29350:	add	r1, sp, #20
   29354:	add	r0, r1, r0, lsl #3
   29358:	mov	r2, #5
   2935c:	strh	r2, [r0, #4]
   29360:	ldr	r0, [sp, #12]
   29364:	add	r0, r1, r0, lsl #3
   29368:	mov	r2, #0
   2936c:	strh	r2, [r0, #6]
   29370:	ldr	r0, [fp, #-16]
   29374:	ldr	r2, [sp, #12]
   29378:	add	r0, r0, r2
   2937c:	add	r1, r1, r2, lsl #3
   29380:	str	r0, [r1]
   29384:	ldr	r0, [sp, #12]
   29388:	add	r0, r0, #1
   2938c:	str	r0, [sp, #12]
   29390:	b	2933c <__assert_fail@plt+0x16784>
   29394:	add	r0, sp, #20
   29398:	ldr	r1, [sp, #8]
   2939c:	movw	r2, #0
   293a0:	bl	126d8 <poll@plt>
   293a4:	str	r0, [sp, #16]
   293a8:	ldr	r0, [sp, #16]
   293ac:	mvn	r1, #0
   293b0:	cmp	r1, r0
   293b4:	bne	293c4 <__assert_fail@plt+0x1680c>
   293b8:	mvn	r0, #0
   293bc:	str	r0, [fp, #-12]
   293c0:	b	29474 <__assert_fail@plt+0x168bc>
   293c4:	movw	r0, #0
   293c8:	str	r0, [sp, #4]
   293cc:	ldr	r0, [sp, #4]
   293d0:	ldr	r1, [sp, #8]
   293d4:	cmp	r0, r1
   293d8:	bge	29454 <__assert_fail@plt+0x1689c>
   293dc:	ldr	r0, [sp, #4]
   293e0:	add	r1, sp, #20
   293e4:	add	r0, r1, r0, lsl #3
   293e8:	ldrsh	r0, [r0, #6]
   293ec:	cmp	r0, #32
   293f0:	beq	29440 <__assert_fail@plt+0x16888>
   293f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   293f8:	ldr	r1, [sp, #4]
   293fc:	add	r2, sp, #20
   29400:	add	r1, r2, r1, lsl #3
   29404:	ldr	r1, [r1]
   29408:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2940c:	str	r0, [sp]
   29410:	mov	r0, r1
   29414:	mov	r1, r2
   29418:	ldr	r2, [sp]
   2941c:	blx	r2
   29420:	str	r0, [sp, #16]
   29424:	movw	r1, #0
   29428:	cmp	r1, r0
   2942c:	beq	2943c <__assert_fail@plt+0x16884>
   29430:	ldr	r0, [sp, #16]
   29434:	str	r0, [fp, #-12]
   29438:	b	29474 <__assert_fail@plt+0x168bc>
   2943c:	b	29440 <__assert_fail@plt+0x16888>
   29440:	b	29444 <__assert_fail@plt+0x1688c>
   29444:	ldr	r0, [sp, #4]
   29448:	add	r0, r0, #1
   2944c:	str	r0, [sp, #4]
   29450:	b	293cc <__assert_fail@plt+0x16814>
   29454:	b	29458 <__assert_fail@plt+0x168a0>
   29458:	ldr	r0, [sp, #8]
   2945c:	ldr	r1, [fp, #-16]
   29460:	add	r0, r1, r0
   29464:	str	r0, [fp, #-16]
   29468:	b	29300 <__assert_fail@plt+0x16748>
   2946c:	movw	r0, #0
   29470:	str	r0, [fp, #-12]
   29474:	ldr	r0, [fp, #-12]
   29478:	sub	sp, fp, #8
   2947c:	pop	{r4, r5, fp, pc}
   29480:	push	{fp, lr}
   29484:	mov	fp, sp
   29488:	sub	sp, sp, #24
   2948c:	str	r0, [fp, #-8]
   29490:	str	r1, [sp, #12]
   29494:	ldr	r0, [fp, #-8]
   29498:	bl	299dc <__assert_fail@plt+0x16e24>
   2949c:	cmp	r0, #0
   294a0:	beq	294b0 <__assert_fail@plt+0x168f8>
   294a4:	movw	r0, #0
   294a8:	str	r0, [fp, #-4]
   294ac:	b	29540 <__assert_fail@plt+0x16988>
   294b0:	ldr	r0, [sp, #12]
   294b4:	str	r0, [sp, #8]
   294b8:	ldr	r0, [sp, #8]
   294bc:	ldr	r1, [r0]
   294c0:	ldr	r0, [r0, #4]
   294c4:	add	r0, r0, #1
   294c8:	lsl	r0, r0, #2
   294cc:	ldr	r2, [sp, #8]
   294d0:	add	r2, r2, #8
   294d4:	str	r0, [sp]
   294d8:	mov	r0, r1
   294dc:	ldr	r1, [sp]
   294e0:	bl	28f74 <__assert_fail@plt+0x163bc>
   294e4:	str	r0, [sp, #4]
   294e8:	ldr	r0, [sp, #4]
   294ec:	movw	r1, #0
   294f0:	cmp	r0, r1
   294f4:	beq	29538 <__assert_fail@plt+0x16980>
   294f8:	ldr	r0, [sp, #4]
   294fc:	ldr	r1, [sp, #8]
   29500:	str	r0, [r1]
   29504:	ldr	r0, [fp, #-8]
   29508:	ldr	r1, [sp, #8]
   2950c:	ldr	r2, [r1]
   29510:	ldr	r1, [r1, #4]
   29514:	add	r1, r2, r1, lsl #2
   29518:	str	r0, [r1]
   2951c:	ldr	r0, [sp, #8]
   29520:	ldr	r1, [r0, #4]
   29524:	add	r1, r1, #1
   29528:	str	r1, [r0, #4]
   2952c:	movw	r0, #0
   29530:	str	r0, [fp, #-4]
   29534:	b	29540 <__assert_fail@plt+0x16988>
   29538:	mvn	r0, #0
   2953c:	str	r0, [fp, #-4]
   29540:	ldr	r0, [fp, #-4]
   29544:	mov	sp, fp
   29548:	pop	{fp, pc}
   2954c:	sub	sp, sp, #8
   29550:	push	{fp, lr}
   29554:	mov	fp, sp
   29558:	sub	sp, sp, #24
   2955c:	str	r3, [fp, #12]
   29560:	str	r2, [fp, #8]
   29564:	str	r0, [fp, #-4]
   29568:	str	r1, [fp, #-8]
   2956c:	movw	r0, #0
   29570:	str	r0, [sp, #8]
   29574:	ldr	r0, [fp, #-8]
   29578:	and	r0, r0, #64	; 0x40
   2957c:	cmp	r0, #0
   29580:	beq	295a8 <__assert_fail@plt+0x169f0>
   29584:	add	r0, sp, #4
   29588:	mov	r1, r0
   2958c:	add	r2, fp, #8
   29590:	str	r2, [r1]
   29594:	ldr	r1, [sp, #4]
   29598:	add	r2, r1, #4
   2959c:	str	r2, [sp, #4]
   295a0:	ldr	r1, [r1]
   295a4:	str	r1, [sp, #8]
   295a8:	movw	r0, #57033	; 0xdec9
   295ac:	movt	r0, #8
   295b0:	ldrb	r0, [r0]
   295b4:	tst	r0, #1
   295b8:	bne	295e0 <__assert_fail@plt+0x16a28>
   295bc:	bl	2963c <__assert_fail@plt+0x16a84>
   295c0:	and	r0, r0, #1
   295c4:	movw	r1, #57032	; 0xdec8
   295c8:	movt	r1, #8
   295cc:	strb	r0, [r1]
   295d0:	movw	r0, #57033	; 0xdec9
   295d4:	movt	r0, #8
   295d8:	movw	r1, #1
   295dc:	strb	r1, [r0]
   295e0:	ldr	r0, [fp, #-4]
   295e4:	ldr	r1, [fp, #-8]
   295e8:	orr	r1, r1, #524288	; 0x80000
   295ec:	ldr	r2, [sp, #8]
   295f0:	bl	2c5a4 <__assert_fail@plt+0x199ec>
   295f4:	str	r0, [sp, #12]
   295f8:	ldr	r0, [sp, #12]
   295fc:	cmp	r0, #0
   29600:	blt	29628 <__assert_fail@plt+0x16a70>
   29604:	movw	r0, #57032	; 0xdec8
   29608:	movt	r0, #8
   2960c:	ldrb	r0, [r0]
   29610:	tst	r0, #1
   29614:	bne	29628 <__assert_fail@plt+0x16a70>
   29618:	ldr	r0, [sp, #12]
   2961c:	movw	r1, #1
   29620:	and	r1, r1, #1
   29624:	bl	2bf20 <__assert_fail@plt+0x19368>
   29628:	ldr	r0, [sp, #12]
   2962c:	mov	sp, fp
   29630:	pop	{fp, lr}
   29634:	add	sp, sp, #8
   29638:	bx	lr
   2963c:	push	{fp, lr}
   29640:	mov	fp, sp
   29644:	sub	sp, sp, #8
   29648:	ldr	r1, [pc, #84]	; 296a4 <__assert_fail@plt+0x16aec>
   2964c:	movw	r0, #0
   29650:	strb	r0, [fp, #-1]
   29654:	movw	r0, #24848	; 0x6110
   29658:	movt	r0, #7
   2965c:	bl	2c5a4 <__assert_fail@plt+0x199ec>
   29660:	str	r0, [sp]
   29664:	ldr	r0, [sp]
   29668:	cmp	r0, #0
   2966c:	blt	29694 <__assert_fail@plt+0x16adc>
   29670:	ldr	r0, [sp]
   29674:	bl	299dc <__assert_fail@plt+0x16e24>
   29678:	cmp	r0, #0
   2967c:	movw	r0, #0
   29680:	movne	r0, #1
   29684:	and	r0, r0, #1
   29688:	strb	r0, [fp, #-1]
   2968c:	ldr	r0, [sp]
   29690:	bl	12b70 <close@plt>
   29694:	ldrb	r0, [fp, #-1]
   29698:	and	r0, r0, #1
   2969c:	mov	sp, fp
   296a0:	pop	{fp, pc}
   296a4:	andeq	r0, r8, r0
   296a8:	push	{fp, lr}
   296ac:	mov	fp, sp
   296b0:	movw	r0, #57024	; 0xdec0
   296b4:	movt	r0, #8
   296b8:	ldr	r0, [r0]
   296bc:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   296c0:	movw	r0, #57024	; 0xdec0
   296c4:	movt	r0, #8
   296c8:	movw	r1, #0
   296cc:	str	r1, [r0]
   296d0:	movw	r0, #57028	; 0xdec4
   296d4:	movt	r0, #8
   296d8:	str	r1, [r0]
   296dc:	pop	{fp, pc}
   296e0:	push	{fp, lr}
   296e4:	mov	fp, sp
   296e8:	sub	sp, sp, #8
   296ec:	movw	r0, #39859	; 0x9bb3
   296f0:	movt	r0, #7
   296f4:	bl	127bc <getenv@plt>
   296f8:	movw	r1, #0
   296fc:	cmp	r0, r1
   29700:	beq	29714 <__assert_fail@plt+0x16b5c>
   29704:	movw	r0, #1
   29708:	and	r0, r0, #1
   2970c:	strb	r0, [fp, #-1]
   29710:	b	29720 <__assert_fail@plt+0x16b68>
   29714:	movw	r0, #0
   29718:	and	r0, r0, #1
   2971c:	strb	r0, [fp, #-1]
   29720:	ldrb	r0, [fp, #-1]
   29724:	and	r0, r0, #1
   29728:	mov	sp, fp
   2972c:	pop	{fp, pc}
   29730:	push	{fp, lr}
   29734:	mov	fp, sp
   29738:	sub	sp, sp, #16
   2973c:	movw	r0, #1
   29740:	str	r0, [fp, #-4]
   29744:	movw	r0, #57024	; 0xdec0
   29748:	movt	r0, #8
   2974c:	ldr	r0, [r0]
   29750:	movw	r1, #57028	; 0xdec4
   29754:	movt	r1, #8
   29758:	ldr	r1, [r1]
   2975c:	bl	297d4 <__assert_fail@plt+0x16c1c>
   29760:	str	r0, [sp, #8]
   29764:	ldr	r0, [sp, #8]
   29768:	cmp	r0, #0
   2976c:	blt	2979c <__assert_fail@plt+0x16be4>
   29770:	movw	r0, #0
   29774:	str	r0, [fp, #-4]
   29778:	movw	r0, #39887	; 0x9bcf
   2977c:	movt	r0, #7
   29780:	bl	12864 <gettext@plt>
   29784:	ldr	r3, [sp, #8]
   29788:	movw	r1, #0
   2978c:	str	r0, [sp, #4]
   29790:	mov	r0, r1
   29794:	ldr	r2, [sp, #4]
   29798:	bl	12780 <error@plt>
   2979c:	ldr	r0, [fp, #-4]
   297a0:	cmp	r0, #0
   297a4:	beq	297ac <__assert_fail@plt+0x16bf4>
   297a8:	b	297cc <__assert_fail@plt+0x16c14>
   297ac:	movw	r0, #40039	; 0x9c67
   297b0:	movt	r0, #7
   297b4:	movw	r1, #40048	; 0x9c70
   297b8:	movt	r1, #7
   297bc:	movw	r2, #396	; 0x18c
   297c0:	movw	r3, #40057	; 0x9c79
   297c4:	movt	r3, #7
   297c8:	bl	12bb8 <__assert_fail@plt>
   297cc:	mov	sp, fp
   297d0:	pop	{fp, pc}
   297d4:	push	{fp, lr}
   297d8:	mov	fp, sp
   297dc:	sub	sp, sp, #40	; 0x28
   297e0:	str	r0, [fp, #-4]
   297e4:	str	r1, [fp, #-8]
   297e8:	bl	29234 <__assert_fail@plt+0x1667c>
   297ec:	ldr	r1, [pc, #108]	; 29860 <__assert_fail@plt+0x16ca8>
   297f0:	str	r0, [sp, #12]
   297f4:	ldr	r0, [sp, #12]
   297f8:	cmp	r0, r1
   297fc:	bge	2980c <__assert_fail@plt+0x16c54>
   29800:	ldr	r0, [sp, #12]
   29804:	add	r0, r0, #1
   29808:	str	r0, [sp, #12]
   2980c:	ldr	r0, [fp, #-4]
   29810:	str	r0, [sp, #16]
   29814:	ldr	r0, [fp, #-8]
   29818:	str	r0, [sp, #20]
   2981c:	movw	r0, #0
   29820:	str	r0, [sp, #24]
   29824:	mvn	r1, #0
   29828:	str	r1, [sp, #28]
   2982c:	ldr	r1, [sp, #12]
   29830:	add	r2, sp, #16
   29834:	movw	r3, #39436	; 0x9a0c
   29838:	movt	r3, #2
   2983c:	str	r2, [sp, #8]
   29840:	mov	r2, r3
   29844:	ldr	r3, [sp, #8]
   29848:	bl	292dc <__assert_fail@plt+0x16724>
   2984c:	ldr	r1, [sp, #28]
   29850:	str	r0, [sp, #4]
   29854:	mov	r0, r1
   29858:	mov	sp, fp
   2985c:	pop	{fp, pc}
   29860:	svcvc	0x00ffffff
   29864:	push	{fp, lr}
   29868:	mov	fp, sp
   2986c:	sub	sp, sp, #40	; 0x28
   29870:	movw	r0, #40093	; 0x9c9d
   29874:	movt	r0, #7
   29878:	str	r0, [fp, #-8]
   2987c:	mvn	r0, #0
   29880:	str	r0, [fp, #-12]
   29884:	ldr	r0, [fp, #-8]
   29888:	bl	2c16c <__assert_fail@plt+0x195b4>
   2988c:	str	r0, [fp, #-16]
   29890:	ldr	r0, [fp, #-16]
   29894:	movw	r1, #0
   29898:	cmp	r0, r1
   2989c:	beq	299c8 <__assert_fail@plt+0x16e10>
   298a0:	movw	r0, #0
   298a4:	str	r0, [sp, #20]
   298a8:	bl	128d0 <__errno_location@plt>
   298ac:	movw	r1, #0
   298b0:	str	r1, [r0]
   298b4:	ldr	r0, [fp, #-16]
   298b8:	bl	12a68 <readdir64@plt>
   298bc:	str	r0, [sp, #16]
   298c0:	ldr	r0, [sp, #16]
   298c4:	movw	r1, #0
   298c8:	cmp	r1, r0
   298cc:	bne	2992c <__assert_fail@plt+0x16d74>
   298d0:	bl	128d0 <__errno_location@plt>
   298d4:	ldr	r0, [r0]
   298d8:	cmp	r0, #0
   298dc:	beq	29928 <__assert_fail@plt+0x16d70>
   298e0:	bl	128d0 <__errno_location@plt>
   298e4:	ldr	r1, [r0]
   298e8:	ldr	r2, [fp, #-8]
   298ec:	movw	r0, #0
   298f0:	movw	r3, #8
   298f4:	str	r1, [sp, #8]
   298f8:	mov	r1, r3
   298fc:	bl	487d0 <__assert_fail@plt+0x35c18>
   29900:	movw	r1, #0
   29904:	str	r0, [sp, #4]
   29908:	mov	r0, r1
   2990c:	ldr	r1, [sp, #8]
   29910:	movw	r2, #50143	; 0xc3df
   29914:	movt	r2, #7
   29918:	ldr	r3, [sp, #4]
   2991c:	bl	12780 <error@plt>
   29920:	movw	r0, #0
   29924:	str	r0, [sp, #20]
   29928:	b	299a4 <__assert_fail@plt+0x16dec>
   2992c:	ldr	r0, [sp, #16]
   29930:	ldrb	r0, [r0, #19]
   29934:	cmp	r0, #46	; 0x2e
   29938:	bne	2996c <__assert_fail@plt+0x16db4>
   2993c:	ldr	r0, [sp, #16]
   29940:	ldrb	r0, [r0, #20]
   29944:	cmp	r0, #0
   29948:	beq	299a0 <__assert_fail@plt+0x16de8>
   2994c:	ldr	r0, [sp, #16]
   29950:	ldrb	r0, [r0, #20]
   29954:	cmp	r0, #46	; 0x2e
   29958:	bne	2996c <__assert_fail@plt+0x16db4>
   2995c:	ldr	r0, [sp, #16]
   29960:	ldrb	r0, [r0, #21]
   29964:	cmp	r0, #0
   29968:	beq	299a0 <__assert_fail@plt+0x16de8>
   2996c:	ldr	r0, [sp, #16]
   29970:	add	r0, r0, #19
   29974:	movw	r1, #0
   29978:	bl	2b4e8 <__assert_fail@plt+0x18930>
   2997c:	str	r0, [sp, #12]
   29980:	ldr	r0, [sp, #12]
   29984:	ldr	r1, [fp, #-12]
   29988:	cmp	r0, r1
   2998c:	ble	29998 <__assert_fail@plt+0x16de0>
   29990:	ldr	r0, [sp, #12]
   29994:	str	r0, [fp, #-12]
   29998:	movw	r0, #1
   2999c:	str	r0, [sp, #20]
   299a0:	b	298a8 <__assert_fail@plt+0x16cf0>
   299a4:	ldr	r0, [fp, #-16]
   299a8:	bl	12b88 <closedir@plt>
   299ac:	ldr	r1, [sp, #20]
   299b0:	cmp	r1, #0
   299b4:	beq	299c4 <__assert_fail@plt+0x16e0c>
   299b8:	ldr	r0, [fp, #-12]
   299bc:	str	r0, [fp, #-4]
   299c0:	b	299d0 <__assert_fail@plt+0x16e18>
   299c4:	b	299c8 <__assert_fail@plt+0x16e10>
   299c8:	mvn	r0, #0
   299cc:	str	r0, [fp, #-4]
   299d0:	ldr	r0, [fp, #-4]
   299d4:	mov	sp, fp
   299d8:	pop	{fp, pc}
   299dc:	push	{fp, lr}
   299e0:	mov	fp, sp
   299e4:	sub	sp, sp, #8
   299e8:	str	r0, [sp, #4]
   299ec:	ldr	r0, [sp, #4]
   299f0:	movw	r1, #1
   299f4:	bl	4e678 <__assert_fail@plt+0x3bac0>
   299f8:	str	r0, [sp]
   299fc:	ldr	r0, [sp]
   29a00:	and	r0, r0, #1
   29a04:	mov	sp, fp
   29a08:	pop	{fp, pc}
   29a0c:	push	{fp, lr}
   29a10:	mov	fp, sp
   29a14:	sub	sp, sp, #16
   29a18:	str	r0, [sp, #8]
   29a1c:	str	r1, [sp, #4]
   29a20:	ldr	r0, [sp, #8]
   29a24:	bl	299dc <__assert_fail@plt+0x16e24>
   29a28:	cmp	r0, #0
   29a2c:	bne	29ad0 <__assert_fail@plt+0x16f18>
   29a30:	ldr	r0, [sp, #4]
   29a34:	str	r0, [sp]
   29a38:	ldr	r0, [sp]
   29a3c:	ldr	r0, [r0, #8]
   29a40:	ldr	r1, [sp]
   29a44:	ldr	r1, [r1, #4]
   29a48:	cmp	r0, r1
   29a4c:	bcs	29ab8 <__assert_fail@plt+0x16f00>
   29a50:	ldr	r0, [sp]
   29a54:	ldr	r1, [r0]
   29a58:	ldr	r0, [r0, #8]
   29a5c:	add	r0, r1, r0, lsl #2
   29a60:	ldr	r0, [r0]
   29a64:	ldr	r1, [sp, #8]
   29a68:	cmp	r0, r1
   29a6c:	bge	29a84 <__assert_fail@plt+0x16ecc>
   29a70:	ldr	r0, [sp]
   29a74:	ldr	r1, [r0, #8]
   29a78:	add	r1, r1, #1
   29a7c:	str	r1, [r0, #8]
   29a80:	b	29ab4 <__assert_fail@plt+0x16efc>
   29a84:	ldr	r0, [sp]
   29a88:	ldr	r1, [r0]
   29a8c:	ldr	r0, [r0, #8]
   29a90:	add	r0, r1, r0, lsl #2
   29a94:	ldr	r0, [r0]
   29a98:	ldr	r1, [sp, #8]
   29a9c:	cmp	r0, r1
   29aa0:	bne	29ab0 <__assert_fail@plt+0x16ef8>
   29aa4:	movw	r0, #0
   29aa8:	str	r0, [fp, #-4]
   29aac:	b	29ad8 <__assert_fail@plt+0x16f20>
   29ab0:	b	29ab8 <__assert_fail@plt+0x16f00>
   29ab4:	b	29a38 <__assert_fail@plt+0x16e80>
   29ab8:	ldr	r0, [sp, #8]
   29abc:	ldr	r1, [sp]
   29ac0:	str	r0, [r1, #12]
   29ac4:	mvn	r0, #0
   29ac8:	str	r0, [fp, #-4]
   29acc:	b	29ad8 <__assert_fail@plt+0x16f20>
   29ad0:	movw	r0, #0
   29ad4:	str	r0, [fp, #-4]
   29ad8:	ldr	r0, [fp, #-4]
   29adc:	mov	sp, fp
   29ae0:	pop	{fp, pc}
   29ae4:	push	{r4, r5, fp, lr}
   29ae8:	add	fp, sp, #8
   29aec:	sub	sp, sp, #48	; 0x30
   29af0:	str	r0, [fp, #-12]
   29af4:	movw	r0, #55080	; 0xd728
   29af8:	movt	r0, #8
   29afc:	ldr	r0, [r0]
   29b00:	bl	4ea58 <__assert_fail@plt+0x3bea0>
   29b04:	movw	r1, #55092	; 0xd734
   29b08:	movt	r1, #8
   29b0c:	ldr	r1, [r1]
   29b10:	ldr	r2, [fp, #-12]
   29b14:	movw	r3, #54796	; 0xd60c
   29b18:	movt	r3, #8
   29b1c:	ldr	r3, [r3]
   29b20:	movw	ip, #40135	; 0x9cc7
   29b24:	movt	ip, #7
   29b28:	str	r0, [fp, #-16]
   29b2c:	mov	r0, ip
   29b30:	str	r1, [fp, #-20]	; 0xffffffec
   29b34:	str	r2, [fp, #-24]	; 0xffffffe8
   29b38:	str	r3, [sp, #28]
   29b3c:	bl	12864 <gettext@plt>
   29b40:	movw	r1, #40150	; 0x9cd6
   29b44:	movt	r1, #7
   29b48:	str	r0, [sp, #24]
   29b4c:	mov	r0, r1
   29b50:	bl	12864 <gettext@plt>
   29b54:	movw	r1, #40165	; 0x9ce5
   29b58:	movt	r1, #7
   29b5c:	str	r0, [sp, #20]
   29b60:	mov	r0, r1
   29b64:	bl	12864 <gettext@plt>
   29b68:	ldr	r1, [fp, #-20]	; 0xffffffec
   29b6c:	str	r0, [sp, #16]
   29b70:	mov	r0, r1
   29b74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   29b78:	movw	r2, #40121	; 0x9cb9
   29b7c:	movt	r2, #7
   29b80:	ldr	r3, [sp, #28]
   29b84:	ldr	ip, [sp, #24]
   29b88:	str	ip, [sp]
   29b8c:	ldr	lr, [sp, #20]
   29b90:	str	lr, [sp, #4]
   29b94:	ldr	r4, [sp, #16]
   29b98:	str	r4, [sp, #8]
   29b9c:	movw	r5, #0
   29ba0:	str	r5, [sp, #12]
   29ba4:	bl	4a168 <__assert_fail@plt+0x375b0>
   29ba8:	sub	sp, fp, #8
   29bac:	pop	{r4, r5, fp, pc}
   29bb0:	push	{r4, r5, r6, sl, fp, lr}
   29bb4:	add	fp, sp, #16
   29bb8:	sub	sp, sp, #104	; 0x68
   29bbc:	sub	sp, sp, #1024	; 0x400
   29bc0:	ldr	ip, [fp, #20]
   29bc4:	ldr	lr, [fp, #16]
   29bc8:	ldr	r4, [fp, #12]
   29bcc:	ldr	r5, [fp, #8]
   29bd0:	sub	r6, fp, #708	; 0x2c4
   29bd4:	str	r0, [fp, #-20]	; 0xffffffec
   29bd8:	str	r1, [fp, #-24]	; 0xffffffe8
   29bdc:	str	r2, [fp, #-28]	; 0xffffffe4
   29be0:	str	r3, [fp, #-32]	; 0xffffffe0
   29be4:	mov	r0, #1
   29be8:	strb	r0, [fp, #-709]	; 0xfffffd3b
   29bec:	mov	r0, #0
   29bf0:	str	r0, [fp, #-720]	; 0xfffffd30
   29bf4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29bf8:	ldr	r0, [r0, #16]
   29bfc:	sub	r1, fp, #44	; 0x2c
   29c00:	str	ip, [fp, #-1020]	; 0xfffffc04
   29c04:	str	lr, [fp, #-1024]	; 0xfffffc00
   29c08:	str	r4, [fp, #-1028]	; 0xfffffbfc
   29c0c:	str	r5, [fp, #-1032]	; 0xfffffbf8
   29c10:	str	r6, [fp, #-1036]	; 0xfffffbf4
   29c14:	bl	2c624 <__assert_fail@plt+0x19a6c>
   29c18:	ldr	r0, [fp, #20]
   29c1c:	movw	r1, #54800	; 0xd610
   29c20:	movt	r1, #8
   29c24:	ldr	r2, [r1]
   29c28:	ldr	r1, [fp, #-32]	; 0xffffffe0
   29c2c:	ldr	r3, [r1, #96]	; 0x60
   29c30:	ldr	r1, [r1, #100]	; 0x64
   29c34:	sub	sp, sp, #16
   29c38:	mov	ip, sp
   29c3c:	mov	lr, #0
   29c40:	str	lr, [ip, #12]
   29c44:	mov	r4, #1
   29c48:	str	r4, [ip, #8]
   29c4c:	str	lr, [ip, #4]
   29c50:	str	r4, [ip]
   29c54:	str	r0, [fp, #-1040]	; 0xfffffbf0
   29c58:	mov	r0, r3
   29c5c:	ldr	r3, [fp, #-1036]	; 0xfffffbf4
   29c60:	str	r2, [fp, #-1044]	; 0xfffffbec
   29c64:	mov	r2, r3
   29c68:	mov	r3, lr
   29c6c:	bl	2e7b8 <__assert_fail@plt+0x1bc00>
   29c70:	add	sp, sp, #16
   29c74:	ldr	r1, [fp, #-1040]	; 0xfffffbf0
   29c78:	str	r0, [fp, #-1048]	; 0xfffffbe8
   29c7c:	mov	r0, r1
   29c80:	movw	r1, #40178	; 0x9cf2
   29c84:	movt	r1, #7
   29c88:	ldr	r2, [fp, #-1044]	; 0xfffffbec
   29c8c:	ldr	r3, [fp, #-1048]	; 0xfffffbe8
   29c90:	bl	128c4 <fprintf@plt>
   29c94:	str	r0, [fp, #-716]	; 0xfffffd34
   29c98:	ldr	r0, [fp, #-716]	; 0xfffffd34
   29c9c:	cmp	r0, #0
   29ca0:	bge	29cb8 <__assert_fail@plt+0x17100>
   29ca4:	movw	r0, #0
   29ca8:	strb	r0, [fp, #-709]	; 0xfffffd3b
   29cac:	movw	r0, #100	; 0x64
   29cb0:	str	r0, [fp, #-720]	; 0xfffffd30
   29cb4:	b	29ce4 <__assert_fail@plt+0x1712c>
   29cb8:	ldr	r0, [fp, #-716]	; 0xfffffd34
   29cbc:	movw	r1, #54800	; 0xd610
   29cc0:	movt	r1, #8
   29cc4:	ldr	r1, [r1]
   29cc8:	cmp	r0, r1
   29ccc:	ble	29ce0 <__assert_fail@plt+0x17128>
   29cd0:	ldr	r0, [fp, #-716]	; 0xfffffd34
   29cd4:	movw	r1, #54800	; 0xd610
   29cd8:	movt	r1, #8
   29cdc:	str	r0, [r1]
   29ce0:	b	29ce4 <__assert_fail@plt+0x1712c>
   29ce4:	ldrb	r0, [fp, #-709]	; 0xfffffd3b
   29ce8:	tst	r0, #1
   29cec:	beq	29df0 <__assert_fail@plt+0x17238>
   29cf0:	ldr	r1, [fp, #20]
   29cf4:	movw	r0, #32
   29cf8:	bl	12a8c <putc@plt>
   29cfc:	mvn	r1, #0
   29d00:	cmp	r1, r0
   29d04:	bne	29d18 <__assert_fail@plt+0x17160>
   29d08:	movw	r0, #0
   29d0c:	strb	r0, [fp, #-709]	; 0xfffffd3b
   29d10:	movw	r0, #150	; 0x96
   29d14:	str	r0, [fp, #-720]	; 0xfffffd30
   29d18:	ldr	r0, [fp, #20]
   29d1c:	movw	r1, #54804	; 0xd614
   29d20:	movt	r1, #8
   29d24:	ldr	r2, [r1]
   29d28:	ldr	r1, [fp, #-32]	; 0xffffffe0
   29d2c:	ldr	r3, [r1, #64]	; 0x40
   29d30:	ldr	r1, [r1, #68]	; 0x44
   29d34:	sub	ip, fp, #708	; 0x2c4
   29d38:	ldr	lr, [fp, #12]
   29d3c:	asr	r4, lr, #31
   29d40:	sub	sp, sp, #16
   29d44:	mov	r5, sp
   29d48:	str	r4, [r5, #12]
   29d4c:	str	lr, [r5, #8]
   29d50:	mov	lr, #0
   29d54:	str	lr, [r5, #4]
   29d58:	mov	r4, #512	; 0x200
   29d5c:	str	r4, [r5]
   29d60:	str	r0, [fp, #-1052]	; 0xfffffbe4
   29d64:	mov	r0, r3
   29d68:	str	r2, [fp, #-1056]	; 0xfffffbe0
   29d6c:	mov	r2, ip
   29d70:	mov	r3, lr
   29d74:	bl	2e7b8 <__assert_fail@plt+0x1bc00>
   29d78:	add	sp, sp, #16
   29d7c:	ldr	r1, [fp, #-1052]	; 0xfffffbe4
   29d80:	str	r0, [fp, #-1060]	; 0xfffffbdc
   29d84:	mov	r0, r1
   29d88:	movw	r1, #40178	; 0x9cf2
   29d8c:	movt	r1, #7
   29d90:	ldr	r2, [fp, #-1056]	; 0xfffffbe0
   29d94:	ldr	r3, [fp, #-1060]	; 0xfffffbdc
   29d98:	bl	128c4 <fprintf@plt>
   29d9c:	str	r0, [fp, #-716]	; 0xfffffd34
   29da0:	ldr	r0, [fp, #-716]	; 0xfffffd34
   29da4:	cmp	r0, #0
   29da8:	bge	29dc0 <__assert_fail@plt+0x17208>
   29dac:	movw	r0, #0
   29db0:	strb	r0, [fp, #-709]	; 0xfffffd3b
   29db4:	movw	r0, #200	; 0xc8
   29db8:	str	r0, [fp, #-720]	; 0xfffffd30
   29dbc:	b	29dec <__assert_fail@plt+0x17234>
   29dc0:	ldr	r0, [fp, #-716]	; 0xfffffd34
   29dc4:	movw	r1, #54804	; 0xd614
   29dc8:	movt	r1, #8
   29dcc:	ldr	r1, [r1]
   29dd0:	cmp	r0, r1
   29dd4:	ble	29de8 <__assert_fail@plt+0x17230>
   29dd8:	ldr	r0, [fp, #-716]	; 0xfffffd34
   29ddc:	movw	r1, #54804	; 0xd614
   29de0:	movt	r1, #8
   29de4:	str	r0, [r1]
   29de8:	b	29dec <__assert_fail@plt+0x17234>
   29dec:	b	29df0 <__assert_fail@plt+0x17238>
   29df0:	ldrb	r0, [fp, #-709]	; 0xfffffd3b
   29df4:	tst	r0, #1
   29df8:	beq	29e28 <__assert_fail@plt+0x17270>
   29dfc:	ldr	r1, [fp, #20]
   29e00:	movw	r0, #32
   29e04:	bl	12a8c <putc@plt>
   29e08:	mvn	r1, #0
   29e0c:	cmp	r1, r0
   29e10:	bne	29e24 <__assert_fail@plt+0x1726c>
   29e14:	movw	r0, #0
   29e18:	strb	r0, [fp, #-709]	; 0xfffffd3b
   29e1c:	movw	r0, #250	; 0xfa
   29e20:	str	r0, [fp, #-720]	; 0xfffffd30
   29e24:	b	29e28 <__assert_fail@plt+0x17270>
   29e28:	ldrb	r0, [fp, #-709]	; 0xfffffd3b
   29e2c:	tst	r0, #1
   29e30:	beq	29e5c <__assert_fail@plt+0x172a4>
   29e34:	sub	r0, fp, #44	; 0x2c
   29e38:	ldr	r1, [fp, #20]
   29e3c:	bl	12b4c <fputs@plt>
   29e40:	cmp	r0, #0
   29e44:	bge	29e58 <__assert_fail@plt+0x172a0>
   29e48:	movw	r0, #0
   29e4c:	strb	r0, [fp, #-709]	; 0xfffffd3b
   29e50:	movw	r0, #275	; 0x113
   29e54:	str	r0, [fp, #-720]	; 0xfffffd30
   29e58:	b	29e5c <__assert_fail@plt+0x172a4>
   29e5c:	ldrb	r0, [fp, #-709]	; 0xfffffd3b
   29e60:	tst	r0, #1
   29e64:	beq	29ee0 <__assert_fail@plt+0x17328>
   29e68:	ldr	r0, [fp, #20]
   29e6c:	movw	r1, #54808	; 0xd618
   29e70:	movt	r1, #8
   29e74:	ldr	r2, [r1]
   29e78:	ldr	r1, [fp, #-32]	; 0xffffffe0
   29e7c:	ldr	r3, [r1, #20]
   29e80:	movw	r1, #40182	; 0x9cf6
   29e84:	movt	r1, #7
   29e88:	bl	128c4 <fprintf@plt>
   29e8c:	str	r0, [fp, #-716]	; 0xfffffd34
   29e90:	ldr	r0, [fp, #-716]	; 0xfffffd34
   29e94:	cmp	r0, #0
   29e98:	bge	29eb0 <__assert_fail@plt+0x172f8>
   29e9c:	movw	r0, #0
   29ea0:	strb	r0, [fp, #-709]	; 0xfffffd3b
   29ea4:	movw	r0, #300	; 0x12c
   29ea8:	str	r0, [fp, #-720]	; 0xfffffd30
   29eac:	b	29edc <__assert_fail@plt+0x17324>
   29eb0:	ldr	r0, [fp, #-716]	; 0xfffffd34
   29eb4:	movw	r1, #54808	; 0xd618
   29eb8:	movt	r1, #8
   29ebc:	ldr	r1, [r1]
   29ec0:	cmp	r0, r1
   29ec4:	ble	29ed8 <__assert_fail@plt+0x17320>
   29ec8:	ldr	r0, [fp, #-716]	; 0xfffffd34
   29ecc:	movw	r1, #54808	; 0xd618
   29ed0:	movt	r1, #8
   29ed4:	str	r0, [r1]
   29ed8:	b	29edc <__assert_fail@plt+0x17324>
   29edc:	b	29ee0 <__assert_fail@plt+0x17328>
   29ee0:	ldrb	r0, [fp, #-709]	; 0xfffffd3b
   29ee4:	tst	r0, #1
   29ee8:	beq	2a030 <__assert_fail@plt+0x17478>
   29eec:	ldr	r1, [fp, #20]
   29ef0:	movw	r0, #32
   29ef4:	bl	12a8c <putc@plt>
   29ef8:	mvn	r1, #0
   29efc:	cmp	r1, r0
   29f00:	bne	29f14 <__assert_fail@plt+0x1735c>
   29f04:	movw	r0, #0
   29f08:	strb	r0, [fp, #-709]	; 0xfffffd3b
   29f0c:	movw	r0, #250	; 0xfa
   29f10:	str	r0, [fp, #-720]	; 0xfffffd30
   29f14:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29f18:	ldr	r0, [r0, #24]
   29f1c:	bl	2f938 <__assert_fail@plt+0x1cd80>
   29f20:	str	r0, [fp, #-52]	; 0xffffffcc
   29f24:	ldr	r0, [fp, #-52]	; 0xffffffcc
   29f28:	movw	r1, #0
   29f2c:	cmp	r0, r1
   29f30:	beq	29fb8 <__assert_fail@plt+0x17400>
   29f34:	ldr	r0, [fp, #-52]	; 0xffffffcc
   29f38:	movw	r1, #0
   29f3c:	bl	30fe4 <__assert_fail@plt+0x1e42c>
   29f40:	str	r0, [fp, #-724]	; 0xfffffd2c
   29f44:	ldr	r0, [fp, #-724]	; 0xfffffd2c
   29f48:	movw	r1, #54812	; 0xd61c
   29f4c:	movt	r1, #8
   29f50:	ldr	r1, [r1]
   29f54:	cmp	r0, r1
   29f58:	ble	29f6c <__assert_fail@plt+0x173b4>
   29f5c:	ldr	r0, [fp, #-724]	; 0xfffffd2c
   29f60:	movw	r1, #54812	; 0xd61c
   29f64:	movt	r1, #8
   29f68:	str	r0, [r1]
   29f6c:	ldr	r0, [fp, #20]
   29f70:	movw	r1, #54812	; 0xd61c
   29f74:	movt	r1, #8
   29f78:	ldr	r2, [r1]
   29f7c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   29f80:	movw	r1, #40187	; 0x9cfb
   29f84:	movt	r1, #7
   29f88:	bl	128c4 <fprintf@plt>
   29f8c:	cmp	r0, #0
   29f90:	movw	r0, #0
   29f94:	movge	r0, #1
   29f98:	and	r0, r0, #1
   29f9c:	strb	r0, [fp, #-709]	; 0xfffffd3b
   29fa0:	ldrb	r0, [fp, #-709]	; 0xfffffd3b
   29fa4:	tst	r0, #1
   29fa8:	bne	29fb4 <__assert_fail@plt+0x173fc>
   29fac:	movw	r0, #400	; 0x190
   29fb0:	str	r0, [fp, #-720]	; 0xfffffd30
   29fb4:	b	2a02c <__assert_fail@plt+0x17474>
   29fb8:	ldr	r0, [fp, #20]
   29fbc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   29fc0:	ldr	r2, [r1, #24]
   29fc4:	movw	r1, #40193	; 0x9d01
   29fc8:	movt	r1, #7
   29fcc:	bl	128c4 <fprintf@plt>
   29fd0:	str	r0, [fp, #-716]	; 0xfffffd34
   29fd4:	ldr	r0, [fp, #-716]	; 0xfffffd34
   29fd8:	movw	r1, #54812	; 0xd61c
   29fdc:	movt	r1, #8
   29fe0:	ldr	r1, [r1]
   29fe4:	cmp	r0, r1
   29fe8:	ble	29ffc <__assert_fail@plt+0x17444>
   29fec:	ldr	r0, [fp, #-716]	; 0xfffffd34
   29ff0:	movw	r1, #54812	; 0xd61c
   29ff4:	movt	r1, #8
   29ff8:	str	r0, [r1]
   29ffc:	ldr	r0, [fp, #-716]	; 0xfffffd34
   2a000:	cmp	r0, #0
   2a004:	movw	r0, #0
   2a008:	movgt	r0, #1
   2a00c:	and	r0, r0, #1
   2a010:	strb	r0, [fp, #-709]	; 0xfffffd3b
   2a014:	ldrb	r0, [fp, #-709]	; 0xfffffd3b
   2a018:	tst	r0, #1
   2a01c:	bne	2a028 <__assert_fail@plt+0x17470>
   2a020:	movw	r0, #450	; 0x1c2
   2a024:	str	r0, [fp, #-720]	; 0xfffffd30
   2a028:	b	2a02c <__assert_fail@plt+0x17474>
   2a02c:	b	2a030 <__assert_fail@plt+0x17478>
   2a030:	ldrb	r0, [fp, #-709]	; 0xfffffd3b
   2a034:	tst	r0, #1
   2a038:	beq	2a1a0 <__assert_fail@plt+0x175e8>
   2a03c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a040:	ldr	r0, [r0, #28]
   2a044:	bl	2fc2c <__assert_fail@plt+0x1d074>
   2a048:	str	r0, [fp, #-56]	; 0xffffffc8
   2a04c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2a050:	movw	r1, #0
   2a054:	cmp	r0, r1
   2a058:	beq	2a0e0 <__assert_fail@plt+0x17528>
   2a05c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2a060:	movw	r1, #0
   2a064:	bl	30fe4 <__assert_fail@plt+0x1e42c>
   2a068:	str	r0, [fp, #-728]	; 0xfffffd28
   2a06c:	ldr	r0, [fp, #-728]	; 0xfffffd28
   2a070:	movw	r1, #54816	; 0xd620
   2a074:	movt	r1, #8
   2a078:	ldr	r1, [r1]
   2a07c:	cmp	r0, r1
   2a080:	ble	2a094 <__assert_fail@plt+0x174dc>
   2a084:	ldr	r0, [fp, #-728]	; 0xfffffd28
   2a088:	movw	r1, #54816	; 0xd620
   2a08c:	movt	r1, #8
   2a090:	str	r0, [r1]
   2a094:	ldr	r0, [fp, #20]
   2a098:	movw	r1, #54816	; 0xd620
   2a09c:	movt	r1, #8
   2a0a0:	ldr	r2, [r1]
   2a0a4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2a0a8:	movw	r1, #40187	; 0x9cfb
   2a0ac:	movt	r1, #7
   2a0b0:	bl	128c4 <fprintf@plt>
   2a0b4:	cmp	r0, #0
   2a0b8:	movw	r0, #0
   2a0bc:	movge	r0, #1
   2a0c0:	and	r0, r0, #1
   2a0c4:	strb	r0, [fp, #-709]	; 0xfffffd3b
   2a0c8:	ldrb	r0, [fp, #-709]	; 0xfffffd3b
   2a0cc:	tst	r0, #1
   2a0d0:	bne	2a0dc <__assert_fail@plt+0x17524>
   2a0d4:	movw	r0, #500	; 0x1f4
   2a0d8:	str	r0, [fp, #-720]	; 0xfffffd30
   2a0dc:	b	2a19c <__assert_fail@plt+0x175e4>
   2a0e0:	ldr	r0, [fp, #20]
   2a0e4:	movw	r1, #54816	; 0xd620
   2a0e8:	movt	r1, #8
   2a0ec:	ldr	r2, [r1]
   2a0f0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2a0f4:	ldr	r3, [r1, #28]
   2a0f8:	movw	r1, #40200	; 0x9d08
   2a0fc:	movt	r1, #7
   2a100:	bl	128c4 <fprintf@plt>
   2a104:	str	r0, [fp, #-716]	; 0xfffffd34
   2a108:	ldr	r0, [fp, #-716]	; 0xfffffd34
   2a10c:	movw	r1, #54816	; 0xd620
   2a110:	movt	r1, #8
   2a114:	ldr	r1, [r1]
   2a118:	cmp	r0, r1
   2a11c:	ble	2a130 <__assert_fail@plt+0x17578>
   2a120:	ldr	r0, [fp, #-716]	; 0xfffffd34
   2a124:	movw	r1, #54816	; 0xd620
   2a128:	movt	r1, #8
   2a12c:	str	r0, [r1]
   2a130:	ldr	r0, [fp, #-716]	; 0xfffffd34
   2a134:	cmp	r0, #0
   2a138:	movw	r0, #0
   2a13c:	movge	r0, #1
   2a140:	and	r0, r0, #1
   2a144:	strb	r0, [fp, #-709]	; 0xfffffd3b
   2a148:	ldrb	r0, [fp, #-709]	; 0xfffffd3b
   2a14c:	tst	r0, #1
   2a150:	beq	2a180 <__assert_fail@plt+0x175c8>
   2a154:	ldr	r1, [fp, #20]
   2a158:	movw	r0, #32
   2a15c:	bl	12a8c <putc@plt>
   2a160:	mvn	r1, #0
   2a164:	cmp	r1, r0
   2a168:	bne	2a17c <__assert_fail@plt+0x175c4>
   2a16c:	movw	r0, #0
   2a170:	strb	r0, [fp, #-709]	; 0xfffffd3b
   2a174:	movw	r0, #525	; 0x20d
   2a178:	str	r0, [fp, #-720]	; 0xfffffd30
   2a17c:	b	2a198 <__assert_fail@plt+0x175e0>
   2a180:	ldrb	r0, [fp, #-709]	; 0xfffffd3b
   2a184:	tst	r0, #1
   2a188:	bne	2a194 <__assert_fail@plt+0x175dc>
   2a18c:	movw	r0, #550	; 0x226
   2a190:	str	r0, [fp, #-720]	; 0xfffffd30
   2a194:	b	2a198 <__assert_fail@plt+0x175e0>
   2a198:	b	2a19c <__assert_fail@plt+0x175e4>
   2a19c:	b	2a1a0 <__assert_fail@plt+0x175e8>
   2a1a0:	ldrb	r0, [fp, #-709]	; 0xfffffd3b
   2a1a4:	tst	r0, #1
   2a1a8:	beq	2a3c8 <__assert_fail@plt+0x17810>
   2a1ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a1b0:	ldr	r0, [r0, #16]
   2a1b4:	and	r0, r0, #61440	; 0xf000
   2a1b8:	cmp	r0, #8192	; 0x2000
   2a1bc:	beq	2a1d4 <__assert_fail@plt+0x1761c>
   2a1c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a1c4:	ldr	r0, [r0, #16]
   2a1c8:	and	r0, r0, #61440	; 0xf000
   2a1cc:	cmp	r0, #24576	; 0x6000
   2a1d0:	bne	2a2c0 <__assert_fail@plt+0x17708>
   2a1d4:	ldr	r0, [fp, #20]
   2a1d8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2a1dc:	ldr	r2, [r1, #32]
   2a1e0:	ldr	r1, [r1, #36]	; 0x24
   2a1e4:	str	r0, [fp, #-1064]	; 0xfffffbd8
   2a1e8:	mov	r0, r2
   2a1ec:	bl	12474 <gnu_dev_major@plt>
   2a1f0:	ldr	r1, [fp, #-1064]	; 0xfffffbd8
   2a1f4:	str	r0, [fp, #-1068]	; 0xfffffbd4
   2a1f8:	mov	r0, r1
   2a1fc:	ldr	r1, [fp, #-1068]	; 0xfffffbd4
   2a200:	movw	r2, #54820	; 0xd624
   2a204:	movt	r2, #8
   2a208:	bl	2a874 <__assert_fail@plt+0x17cbc>
   2a20c:	tst	r0, #1
   2a210:	bne	2a224 <__assert_fail@plt+0x1766c>
   2a214:	movw	r0, #0
   2a218:	strb	r0, [fp, #-709]	; 0xfffffd3b
   2a21c:	movw	r0, #600	; 0x258
   2a220:	str	r0, [fp, #-720]	; 0xfffffd30
   2a224:	ldrb	r0, [fp, #-709]	; 0xfffffd3b
   2a228:	tst	r0, #1
   2a22c:	beq	2a25c <__assert_fail@plt+0x176a4>
   2a230:	ldr	r0, [fp, #20]
   2a234:	movw	r1, #30525	; 0x773d
   2a238:	movt	r1, #7
   2a23c:	bl	128c4 <fprintf@plt>
   2a240:	cmp	r0, #0
   2a244:	bge	2a258 <__assert_fail@plt+0x176a0>
   2a248:	movw	r0, #0
   2a24c:	strb	r0, [fp, #-709]	; 0xfffffd3b
   2a250:	movw	r0, #625	; 0x271
   2a254:	str	r0, [fp, #-720]	; 0xfffffd30
   2a258:	b	2a25c <__assert_fail@plt+0x176a4>
   2a25c:	ldrb	r0, [fp, #-709]	; 0xfffffd3b
   2a260:	tst	r0, #1
   2a264:	beq	2a2bc <__assert_fail@plt+0x17704>
   2a268:	ldr	r0, [fp, #20]
   2a26c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2a270:	ldr	r2, [r1, #32]
   2a274:	ldr	r1, [r1, #36]	; 0x24
   2a278:	str	r0, [fp, #-1072]	; 0xfffffbd0
   2a27c:	mov	r0, r2
   2a280:	bl	12504 <gnu_dev_minor@plt>
   2a284:	ldr	r1, [fp, #-1072]	; 0xfffffbd0
   2a288:	str	r0, [fp, #-1076]	; 0xfffffbcc
   2a28c:	mov	r0, r1
   2a290:	ldr	r1, [fp, #-1076]	; 0xfffffbcc
   2a294:	movw	r2, #54824	; 0xd628
   2a298:	movt	r2, #8
   2a29c:	bl	2a874 <__assert_fail@plt+0x17cbc>
   2a2a0:	tst	r0, #1
   2a2a4:	bne	2a2b8 <__assert_fail@plt+0x17700>
   2a2a8:	movw	r0, #0
   2a2ac:	strb	r0, [fp, #-709]	; 0xfffffd3b
   2a2b0:	movw	r0, #650	; 0x28a
   2a2b4:	str	r0, [fp, #-720]	; 0xfffffd30
   2a2b8:	b	2a2bc <__assert_fail@plt+0x17704>
   2a2bc:	b	2a3c4 <__assert_fail@plt+0x1780c>
   2a2c0:	ldr	r0, [fp, #12]
   2a2c4:	cmp	r0, #0
   2a2c8:	bge	2a2d8 <__assert_fail@plt+0x17720>
   2a2cc:	ldr	r0, [fp, #12]
   2a2d0:	str	r0, [fp, #-1080]	; 0xfffffbc8
   2a2d4:	b	2a2e4 <__assert_fail@plt+0x1772c>
   2a2d8:	movw	r0, #1
   2a2dc:	str	r0, [fp, #-1080]	; 0xfffffbc8
   2a2e0:	b	2a2e4 <__assert_fail@plt+0x1772c>
   2a2e4:	ldr	r0, [fp, #-1080]	; 0xfffffbc8
   2a2e8:	str	r0, [fp, #-732]	; 0xfffffd24
   2a2ec:	ldr	r0, [fp, #20]
   2a2f0:	movw	r1, #54828	; 0xd62c
   2a2f4:	movt	r1, #8
   2a2f8:	ldr	r2, [r1]
   2a2fc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2a300:	ldr	r3, [r1, #48]	; 0x30
   2a304:	ldr	r1, [r1, #52]	; 0x34
   2a308:	sub	ip, fp, #708	; 0x2c4
   2a30c:	ldr	lr, [fp, #-732]	; 0xfffffd24
   2a310:	asr	r4, lr, #31
   2a314:	sub	sp, sp, #16
   2a318:	mov	r5, sp
   2a31c:	str	r4, [r5, #12]
   2a320:	str	lr, [r5, #8]
   2a324:	mov	lr, #0
   2a328:	str	lr, [r5, #4]
   2a32c:	mov	r4, #1
   2a330:	str	r4, [r5]
   2a334:	str	r0, [fp, #-1084]	; 0xfffffbc4
   2a338:	mov	r0, r3
   2a33c:	str	r2, [fp, #-1088]	; 0xfffffbc0
   2a340:	mov	r2, ip
   2a344:	mov	r3, lr
   2a348:	bl	2e7b8 <__assert_fail@plt+0x1bc00>
   2a34c:	add	sp, sp, #16
   2a350:	ldr	r1, [fp, #-1084]	; 0xfffffbc4
   2a354:	str	r0, [fp, #-1092]	; 0xfffffbbc
   2a358:	mov	r0, r1
   2a35c:	movw	r1, #40178	; 0x9cf2
   2a360:	movt	r1, #7
   2a364:	ldr	r2, [fp, #-1088]	; 0xfffffbc0
   2a368:	ldr	r3, [fp, #-1092]	; 0xfffffbbc
   2a36c:	bl	128c4 <fprintf@plt>
   2a370:	str	r0, [fp, #-716]	; 0xfffffd34
   2a374:	ldr	r0, [fp, #-716]	; 0xfffffd34
   2a378:	cmp	r0, #0
   2a37c:	bge	2a394 <__assert_fail@plt+0x177dc>
   2a380:	movw	r0, #0
   2a384:	strb	r0, [fp, #-709]	; 0xfffffd3b
   2a388:	movw	r0, #800	; 0x320
   2a38c:	str	r0, [fp, #-720]	; 0xfffffd30
   2a390:	b	2a3c0 <__assert_fail@plt+0x17808>
   2a394:	ldr	r0, [fp, #-716]	; 0xfffffd34
   2a398:	movw	r1, #54828	; 0xd62c
   2a39c:	movt	r1, #8
   2a3a0:	ldr	r1, [r1]
   2a3a4:	cmp	r0, r1
   2a3a8:	ble	2a3bc <__assert_fail@plt+0x17804>
   2a3ac:	ldr	r0, [fp, #-716]	; 0xfffffd34
   2a3b0:	movw	r1, #54828	; 0xd62c
   2a3b4:	movt	r1, #8
   2a3b8:	str	r0, [r1]
   2a3bc:	b	2a3c0 <__assert_fail@plt+0x17808>
   2a3c0:	b	2a3c4 <__assert_fail@plt+0x1780c>
   2a3c4:	b	2a3c8 <__assert_fail@plt+0x17810>
   2a3c8:	ldrb	r0, [fp, #-709]	; 0xfffffd3b
   2a3cc:	tst	r0, #1
   2a3d0:	beq	2a400 <__assert_fail@plt+0x17848>
   2a3d4:	ldr	r1, [fp, #20]
   2a3d8:	movw	r0, #32
   2a3dc:	bl	12a8c <putc@plt>
   2a3e0:	mvn	r1, #0
   2a3e4:	cmp	r1, r0
   2a3e8:	bne	2a3fc <__assert_fail@plt+0x17844>
   2a3ec:	movw	r0, #0
   2a3f0:	strb	r0, [fp, #-709]	; 0xfffffd3b
   2a3f4:	movw	r0, #850	; 0x352
   2a3f8:	str	r0, [fp, #-720]	; 0xfffffd30
   2a3fc:	b	2a400 <__assert_fail@plt+0x17848>
   2a400:	ldrb	r0, [fp, #-709]	; 0xfffffd3b
   2a404:	tst	r0, #1
   2a408:	beq	2a6d4 <__assert_fail@plt+0x17b1c>
   2a40c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a410:	add	r0, r0, #80	; 0x50
   2a414:	bl	12810 <localtime@plt>
   2a418:	str	r0, [fp, #-48]	; 0xffffffd0
   2a41c:	movw	r1, #0
   2a420:	cmp	r0, r1
   2a424:	beq	2a528 <__assert_fail@plt+0x17970>
   2a428:	ldr	r0, [pc, #1088]	; 2a870 <__assert_fail@plt+0x17cb8>
   2a42c:	sub	r1, fp, #988	; 0x3dc
   2a430:	str	r1, [fp, #-992]	; 0xfffffc20
   2a434:	movw	r1, #256	; 0x100
   2a438:	str	r1, [fp, #-996]	; 0xfffffc1c
   2a43c:	ldr	r1, [fp, #8]
   2a440:	sub	r0, r1, r0
   2a444:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2a448:	ldr	r1, [r1, #80]	; 0x50
   2a44c:	cmp	r0, r1
   2a450:	movw	r0, #0
   2a454:	str	r0, [fp, #-1096]	; 0xfffffbb8
   2a458:	bgt	2a47c <__assert_fail@plt+0x178c4>
   2a45c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a460:	ldr	r0, [r0, #80]	; 0x50
   2a464:	ldr	r1, [fp, #8]
   2a468:	add	r1, r1, #3600	; 0xe10
   2a46c:	cmp	r0, r1
   2a470:	movw	r0, #0
   2a474:	movle	r0, #1
   2a478:	str	r0, [fp, #-1096]	; 0xfffffbb8
   2a47c:	ldr	r0, [fp, #-1096]	; 0xfffffbb8
   2a480:	tst	r0, #1
   2a484:	movw	r0, #40218	; 0x9d1a
   2a488:	movt	r0, #7
   2a48c:	movw	r1, #40206	; 0x9d0e
   2a490:	movt	r1, #7
   2a494:	movne	r0, r1
   2a498:	str	r0, [fp, #-1000]	; 0xfffffc18
   2a49c:	ldr	r0, [fp, #-992]	; 0xfffffc20
   2a4a0:	ldr	r1, [fp, #-996]	; 0xfffffc1c
   2a4a4:	ldr	r2, [fp, #-1000]	; 0xfffffc18
   2a4a8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2a4ac:	bl	127f8 <strftime@plt>
   2a4b0:	cmp	r0, #0
   2a4b4:	movw	r0, #0
   2a4b8:	movne	r0, #1
   2a4bc:	mvn	r1, #0
   2a4c0:	eor	r0, r0, r1
   2a4c4:	tst	r0, #1
   2a4c8:	beq	2a4f8 <__assert_fail@plt+0x17940>
   2a4cc:	ldr	r0, [fp, #-996]	; 0xfffffc1c
   2a4d0:	lsl	r1, r0, #1
   2a4d4:	str	r1, [fp, #-996]	; 0xfffffc1c
   2a4d8:	mov	r1, #7
   2a4dc:	add	r0, r1, r0, lsl #1
   2a4e0:	bic	r0, r0, #7
   2a4e4:	mov	r1, sp
   2a4e8:	sub	r0, r1, r0
   2a4ec:	mov	sp, r0
   2a4f0:	str	r0, [fp, #-992]	; 0xfffffc20
   2a4f4:	b	2a49c <__assert_fail@plt+0x178e4>
   2a4f8:	ldr	r0, [fp, #20]
   2a4fc:	ldr	r2, [fp, #-992]	; 0xfffffc20
   2a500:	movw	r1, #40231	; 0x9d27
   2a504:	movt	r1, #7
   2a508:	bl	128c4 <fprintf@plt>
   2a50c:	cmp	r0, #0
   2a510:	bge	2a524 <__assert_fail@plt+0x1796c>
   2a514:	movw	r0, #0
   2a518:	strb	r0, [fp, #-709]	; 0xfffffd3b
   2a51c:	movw	r0, #900	; 0x384
   2a520:	str	r0, [fp, #-720]	; 0xfffffd30
   2a524:	b	2a6d0 <__assert_fail@plt+0x17b18>
   2a528:	movw	r0, #12
   2a52c:	str	r0, [fp, #-1004]	; 0xfffffc14
   2a530:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a534:	ldr	r0, [r0, #80]	; 0x50
   2a538:	cmp	r0, #0
   2a53c:	bge	2a63c <__assert_fail@plt+0x17a84>
   2a540:	sub	r2, fp, #708	; 0x2c4
   2a544:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a548:	ldr	r0, [r0, #80]	; 0x50
   2a54c:	rsbs	r1, r0, #0
   2a550:	mov	r3, #0
   2a554:	sbc	r0, r3, r0, asr #31
   2a558:	sub	sp, sp, #16
   2a55c:	mov	r3, sp
   2a560:	mov	ip, #0
   2a564:	str	ip, [r3, #12]
   2a568:	mov	lr, #1
   2a56c:	str	lr, [r3, #8]
   2a570:	str	ip, [r3, #4]
   2a574:	str	lr, [r3]
   2a578:	str	r0, [fp, #-1100]	; 0xfffffbb4
   2a57c:	mov	r0, r1
   2a580:	ldr	r1, [fp, #-1100]	; 0xfffffbb4
   2a584:	mov	r3, ip
   2a588:	bl	2e7b8 <__assert_fail@plt+0x1bc00>
   2a58c:	add	sp, sp, #16
   2a590:	str	r0, [fp, #-1008]	; 0xfffffc10
   2a594:	ldr	r0, [fp, #-1004]	; 0xfffffc14
   2a598:	ldr	r1, [fp, #-1008]	; 0xfffffc10
   2a59c:	str	r0, [fp, #-1104]	; 0xfffffbb0
   2a5a0:	mov	r0, r1
   2a5a4:	bl	12888 <strlen@plt>
   2a5a8:	ldr	r1, [fp, #-1104]	; 0xfffffbb0
   2a5ac:	sub	r0, r1, r0
   2a5b0:	str	r0, [fp, #-1012]	; 0xfffffc0c
   2a5b4:	ldr	r0, [fp, #20]
   2a5b8:	ldr	r1, [fp, #-1012]	; 0xfffffc0c
   2a5bc:	cmp	r1, #0
   2a5c0:	str	r0, [fp, #-1108]	; 0xfffffbac
   2a5c4:	bge	2a5d4 <__assert_fail@plt+0x17a1c>
   2a5c8:	movw	r0, #0
   2a5cc:	str	r0, [fp, #-1112]	; 0xfffffba8
   2a5d0:	b	2a5dc <__assert_fail@plt+0x17a24>
   2a5d4:	ldr	r0, [fp, #-1012]	; 0xfffffc0c
   2a5d8:	str	r0, [fp, #-1112]	; 0xfffffba8
   2a5dc:	ldr	r0, [fp, #-1112]	; 0xfffffba8
   2a5e0:	ldr	r1, [fp, #-1008]	; 0xfffffc10
   2a5e4:	sub	sp, sp, #8
   2a5e8:	ldr	r2, [fp, #-1108]	; 0xfffffbac
   2a5ec:	str	r0, [fp, #-1116]	; 0xfffffba4
   2a5f0:	mov	r0, r2
   2a5f4:	movw	r3, #40228	; 0x9d24
   2a5f8:	movt	r3, #7
   2a5fc:	str	r1, [fp, #-1120]	; 0xfffffba0
   2a600:	mov	r1, r3
   2a604:	ldr	r2, [fp, #-1116]	; 0xfffffba4
   2a608:	movw	r3, #47605	; 0xb9f5
   2a60c:	movt	r3, #7
   2a610:	ldr	ip, [fp, #-1120]	; 0xfffffba0
   2a614:	str	ip, [sp]
   2a618:	bl	128c4 <fprintf@plt>
   2a61c:	add	sp, sp, #8
   2a620:	cmp	r0, #0
   2a624:	bge	2a638 <__assert_fail@plt+0x17a80>
   2a628:	movw	r0, #0
   2a62c:	strb	r0, [fp, #-709]	; 0xfffffd3b
   2a630:	movw	r0, #1000	; 0x3e8
   2a634:	str	r0, [fp, #-720]	; 0xfffffd30
   2a638:	b	2a6cc <__assert_fail@plt+0x17b14>
   2a63c:	sub	r2, fp, #708	; 0x2c4
   2a640:	ldr	r0, [fp, #20]
   2a644:	ldr	r1, [fp, #-1004]	; 0xfffffc14
   2a648:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a64c:	ldr	r3, [r3, #80]	; 0x50
   2a650:	asr	ip, r3, #31
   2a654:	sub	sp, sp, #16
   2a658:	mov	lr, sp
   2a65c:	mov	r4, #0
   2a660:	str	r4, [lr, #12]
   2a664:	mov	r5, #1
   2a668:	str	r5, [lr, #8]
   2a66c:	str	r4, [lr, #4]
   2a670:	str	r5, [lr]
   2a674:	str	r0, [fp, #-1124]	; 0xfffffb9c
   2a678:	mov	r0, r3
   2a67c:	str	r1, [fp, #-1128]	; 0xfffffb98
   2a680:	mov	r1, ip
   2a684:	mov	r3, r4
   2a688:	bl	2e7b8 <__assert_fail@plt+0x1bc00>
   2a68c:	add	sp, sp, #16
   2a690:	ldr	r1, [fp, #-1124]	; 0xfffffb9c
   2a694:	str	r0, [fp, #-1132]	; 0xfffffb94
   2a698:	mov	r0, r1
   2a69c:	movw	r1, #40235	; 0x9d2b
   2a6a0:	movt	r1, #7
   2a6a4:	ldr	r2, [fp, #-1128]	; 0xfffffb98
   2a6a8:	ldr	r3, [fp, #-1132]	; 0xfffffb94
   2a6ac:	bl	128c4 <fprintf@plt>
   2a6b0:	cmp	r0, #0
   2a6b4:	bge	2a6c8 <__assert_fail@plt+0x17b10>
   2a6b8:	movw	r0, #0
   2a6bc:	strb	r0, [fp, #-709]	; 0xfffffd3b
   2a6c0:	movw	r0, #1100	; 0x44c
   2a6c4:	str	r0, [fp, #-720]	; 0xfffffd30
   2a6c8:	b	2a6cc <__assert_fail@plt+0x17b14>
   2a6cc:	b	2a6d0 <__assert_fail@plt+0x17b18>
   2a6d0:	b	2a6d4 <__assert_fail@plt+0x17b1c>
   2a6d4:	ldrb	r0, [fp, #-709]	; 0xfffffd3b
   2a6d8:	tst	r0, #1
   2a6dc:	beq	2a710 <__assert_fail@plt+0x17b58>
   2a6e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   2a6e4:	ldr	r1, [fp, #20]
   2a6e8:	ldr	r2, [fp, #16]
   2a6ec:	bl	2a904 <__assert_fail@plt+0x17d4c>
   2a6f0:	and	r0, r0, #1
   2a6f4:	strb	r0, [fp, #-709]	; 0xfffffd3b
   2a6f8:	ldrb	r0, [fp, #-709]	; 0xfffffd3b
   2a6fc:	tst	r0, #1
   2a700:	bne	2a70c <__assert_fail@plt+0x17b54>
   2a704:	movw	r0, #1200	; 0x4b0
   2a708:	str	r0, [fp, #-720]	; 0xfffffd30
   2a70c:	b	2a710 <__assert_fail@plt+0x17b58>
   2a710:	ldrb	r0, [fp, #-709]	; 0xfffffd3b
   2a714:	tst	r0, #1
   2a718:	beq	2a828 <__assert_fail@plt+0x17c70>
   2a71c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a720:	ldr	r0, [r0, #16]
   2a724:	and	r0, r0, #61440	; 0xf000
   2a728:	cmp	r0, #40960	; 0xa000
   2a72c:	bne	2a7dc <__assert_fail@plt+0x17c24>
   2a730:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a734:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a738:	bl	2b888 <__assert_fail@plt+0x18cd0>
   2a73c:	str	r0, [fp, #-1016]	; 0xfffffc08
   2a740:	ldr	r0, [fp, #-1016]	; 0xfffffc08
   2a744:	movw	r1, #0
   2a748:	cmp	r0, r1
   2a74c:	beq	2a7b8 <__assert_fail@plt+0x17c00>
   2a750:	ldr	r1, [fp, #20]
   2a754:	movw	r0, #40240	; 0x9d30
   2a758:	movt	r0, #7
   2a75c:	bl	12b4c <fputs@plt>
   2a760:	cmp	r0, #0
   2a764:	bge	2a778 <__assert_fail@plt+0x17bc0>
   2a768:	movw	r0, #0
   2a76c:	strb	r0, [fp, #-709]	; 0xfffffd3b
   2a770:	movw	r0, #1300	; 0x514
   2a774:	str	r0, [fp, #-720]	; 0xfffffd30
   2a778:	ldrb	r0, [fp, #-709]	; 0xfffffd3b
   2a77c:	tst	r0, #1
   2a780:	beq	2a7b4 <__assert_fail@plt+0x17bfc>
   2a784:	ldr	r0, [fp, #-1016]	; 0xfffffc08
   2a788:	ldr	r1, [fp, #20]
   2a78c:	ldr	r2, [fp, #16]
   2a790:	bl	2a904 <__assert_fail@plt+0x17d4c>
   2a794:	and	r0, r0, #1
   2a798:	strb	r0, [fp, #-709]	; 0xfffffd3b
   2a79c:	ldrb	r0, [fp, #-709]	; 0xfffffd3b
   2a7a0:	tst	r0, #1
   2a7a4:	bne	2a7b0 <__assert_fail@plt+0x17bf8>
   2a7a8:	movw	r0, #1350	; 0x546
   2a7ac:	str	r0, [fp, #-720]	; 0xfffffd30
   2a7b0:	b	2a7b4 <__assert_fail@plt+0x17bfc>
   2a7b4:	b	2a7d4 <__assert_fail@plt+0x17c1c>
   2a7b8:	bl	128d0 <__errno_location@plt>
   2a7bc:	ldr	r1, [r0]
   2a7c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a7c4:	movw	r0, #0
   2a7c8:	movw	r2, #50143	; 0xc3df
   2a7cc:	movt	r2, #7
   2a7d0:	bl	12780 <error@plt>
   2a7d4:	ldr	r0, [fp, #-1016]	; 0xfffffc08
   2a7d8:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   2a7dc:	ldrb	r0, [fp, #-709]	; 0xfffffd3b
   2a7e0:	tst	r0, #1
   2a7e4:	beq	2a824 <__assert_fail@plt+0x17c6c>
   2a7e8:	ldr	r1, [fp, #20]
   2a7ec:	movw	r0, #10
   2a7f0:	bl	12a8c <putc@plt>
   2a7f4:	mvn	r1, #0
   2a7f8:	cmp	r1, r0
   2a7fc:	bne	2a820 <__assert_fail@plt+0x17c68>
   2a800:	movw	r0, #0
   2a804:	strb	r0, [fp, #-709]	; 0xfffffd3b
   2a808:	ldrb	r0, [fp, #-709]	; 0xfffffd3b
   2a80c:	tst	r0, #1
   2a810:	bne	2a81c <__assert_fail@plt+0x17c64>
   2a814:	movw	r0, #1400	; 0x578
   2a818:	str	r0, [fp, #-720]	; 0xfffffd30
   2a81c:	b	2a820 <__assert_fail@plt+0x17c68>
   2a820:	b	2a824 <__assert_fail@plt+0x17c6c>
   2a824:	b	2a828 <__assert_fail@plt+0x17c70>
   2a828:	ldrb	r0, [fp, #-709]	; 0xfffffd3b
   2a82c:	tst	r0, #1
   2a830:	bne	2a868 <__assert_fail@plt+0x17cb0>
   2a834:	bl	128d0 <__errno_location@plt>
   2a838:	ldr	r1, [r0]
   2a83c:	movw	r0, #40245	; 0x9d35
   2a840:	movt	r0, #7
   2a844:	str	r1, [fp, #-1136]	; 0xfffffb90
   2a848:	bl	12864 <gettext@plt>
   2a84c:	ldr	r3, [fp, #-720]	; 0xfffffd30
   2a850:	movw	r1, #1
   2a854:	str	r0, [fp, #-1140]	; 0xfffffb8c
   2a858:	mov	r0, r1
   2a85c:	ldr	r1, [fp, #-1136]	; 0xfffffb90
   2a860:	ldr	r2, [fp, #-1140]	; 0xfffffb8c
   2a864:	bl	12780 <error@plt>
   2a868:	sub	sp, fp, #16
   2a86c:	pop	{r4, r5, r6, sl, fp, pc}
   2a870:	rsceq	r4, sp, r0, lsl #28
   2a874:	push	{fp, lr}
   2a878:	mov	fp, sp
   2a87c:	sub	sp, sp, #24
   2a880:	str	r0, [fp, #-8]
   2a884:	str	r1, [sp, #12]
   2a888:	str	r2, [sp, #8]
   2a88c:	ldr	r0, [fp, #-8]
   2a890:	ldr	r1, [sp, #8]
   2a894:	ldr	r2, [r1]
   2a898:	ldr	r3, [sp, #12]
   2a89c:	movw	r1, #40182	; 0x9cf6
   2a8a0:	movt	r1, #7
   2a8a4:	bl	128c4 <fprintf@plt>
   2a8a8:	str	r0, [sp, #4]
   2a8ac:	ldr	r0, [sp, #4]
   2a8b0:	cmp	r0, #0
   2a8b4:	blt	2a8e8 <__assert_fail@plt+0x17d30>
   2a8b8:	ldr	r0, [sp, #8]
   2a8bc:	ldr	r0, [r0]
   2a8c0:	ldr	r1, [sp, #4]
   2a8c4:	cmp	r0, r1
   2a8c8:	bge	2a8d8 <__assert_fail@plt+0x17d20>
   2a8cc:	ldr	r0, [sp, #4]
   2a8d0:	ldr	r1, [sp, #8]
   2a8d4:	str	r0, [r1]
   2a8d8:	movw	r0, #1
   2a8dc:	and	r0, r0, #1
   2a8e0:	strb	r0, [fp, #-1]
   2a8e4:	b	2a8f4 <__assert_fail@plt+0x17d3c>
   2a8e8:	movw	r0, #0
   2a8ec:	and	r0, r0, #1
   2a8f0:	strb	r0, [fp, #-1]
   2a8f4:	ldrb	r0, [fp, #-1]
   2a8f8:	and	r0, r0, #1
   2a8fc:	mov	sp, fp
   2a900:	pop	{fp, pc}
   2a904:	push	{fp, lr}
   2a908:	mov	fp, sp
   2a90c:	sub	sp, sp, #16
   2a910:	str	r0, [sp, #8]
   2a914:	str	r1, [sp, #4]
   2a918:	str	r2, [sp]
   2a91c:	ldr	r0, [sp]
   2a920:	cmp	r0, #0
   2a924:	beq	2a940 <__assert_fail@plt+0x17d88>
   2a928:	ldr	r0, [sp, #8]
   2a92c:	ldr	r1, [sp, #4]
   2a930:	bl	2a964 <__assert_fail@plt+0x17dac>
   2a934:	and	r0, r0, #1
   2a938:	strb	r0, [fp, #-1]
   2a93c:	b	2a954 <__assert_fail@plt+0x17d9c>
   2a940:	ldr	r0, [sp, #8]
   2a944:	ldr	r1, [sp, #4]
   2a948:	bl	2a9a4 <__assert_fail@plt+0x17dec>
   2a94c:	and	r0, r0, #1
   2a950:	strb	r0, [fp, #-1]
   2a954:	ldrb	r0, [fp, #-1]
   2a958:	and	r0, r0, #1
   2a95c:	mov	sp, fp
   2a960:	pop	{fp, pc}
   2a964:	push	{fp, lr}
   2a968:	mov	fp, sp
   2a96c:	sub	sp, sp, #8
   2a970:	str	r0, [sp, #4]
   2a974:	str	r1, [sp]
   2a978:	ldr	r0, [sp]
   2a97c:	ldr	r2, [sp, #4]
   2a980:	movw	r1, #50143	; 0xc3df
   2a984:	movt	r1, #7
   2a988:	bl	128c4 <fprintf@plt>
   2a98c:	cmp	r0, #0
   2a990:	movw	r0, #0
   2a994:	movge	r0, #1
   2a998:	and	r0, r0, #1
   2a99c:	mov	sp, fp
   2a9a0:	pop	{fp, pc}
   2a9a4:	push	{fp, lr}
   2a9a8:	mov	fp, sp
   2a9ac:	sub	sp, sp, #24
   2a9b0:	str	r0, [fp, #-8]
   2a9b4:	str	r1, [sp, #12]
   2a9b8:	ldr	r0, [fp, #-8]
   2a9bc:	add	r1, r0, #1
   2a9c0:	str	r1, [fp, #-8]
   2a9c4:	ldrb	r0, [r0]
   2a9c8:	strb	r0, [sp, #11]
   2a9cc:	and	r0, r0, #255	; 0xff
   2a9d0:	cmp	r0, #0
   2a9d4:	beq	2abb0 <__assert_fail@plt+0x17ff8>
   2a9d8:	mvn	r0, #0
   2a9dc:	str	r0, [sp, #4]
   2a9e0:	ldrb	r0, [sp, #11]
   2a9e4:	mov	r1, r0
   2a9e8:	cmp	r0, #8
   2a9ec:	str	r1, [sp]
   2a9f0:	beq	2aa98 <__assert_fail@plt+0x17ee0>
   2a9f4:	b	2a9f8 <__assert_fail@plt+0x17e40>
   2a9f8:	ldr	r0, [sp]
   2a9fc:	cmp	r0, #9
   2aa00:	beq	2aac8 <__assert_fail@plt+0x17f10>
   2aa04:	b	2aa08 <__assert_fail@plt+0x17e50>
   2aa08:	ldr	r0, [sp]
   2aa0c:	cmp	r0, #10
   2aa10:	beq	2aa80 <__assert_fail@plt+0x17ec8>
   2aa14:	b	2aa18 <__assert_fail@plt+0x17e60>
   2aa18:	ldr	r0, [sp]
   2aa1c:	cmp	r0, #12
   2aa20:	beq	2aae0 <__assert_fail@plt+0x17f28>
   2aa24:	b	2aa28 <__assert_fail@plt+0x17e70>
   2aa28:	ldr	r0, [sp]
   2aa2c:	cmp	r0, #13
   2aa30:	beq	2aab0 <__assert_fail@plt+0x17ef8>
   2aa34:	b	2aa38 <__assert_fail@plt+0x17e80>
   2aa38:	ldr	r0, [sp]
   2aa3c:	cmp	r0, #32
   2aa40:	beq	2aaf8 <__assert_fail@plt+0x17f40>
   2aa44:	b	2aa48 <__assert_fail@plt+0x17e90>
   2aa48:	ldr	r0, [sp]
   2aa4c:	cmp	r0, #34	; 0x22
   2aa50:	beq	2ab10 <__assert_fail@plt+0x17f58>
   2aa54:	b	2aa58 <__assert_fail@plt+0x17ea0>
   2aa58:	ldr	r0, [sp]
   2aa5c:	cmp	r0, #92	; 0x5c
   2aa60:	bne	2ab28 <__assert_fail@plt+0x17f70>
   2aa64:	b	2aa68 <__assert_fail@plt+0x17eb0>
   2aa68:	ldr	r0, [sp, #12]
   2aa6c:	movw	r1, #40282	; 0x9d5a
   2aa70:	movt	r1, #7
   2aa74:	bl	128c4 <fprintf@plt>
   2aa78:	str	r0, [sp, #4]
   2aa7c:	b	2ab90 <__assert_fail@plt+0x17fd8>
   2aa80:	ldr	r0, [sp, #12]
   2aa84:	movw	r1, #40285	; 0x9d5d
   2aa88:	movt	r1, #7
   2aa8c:	bl	128c4 <fprintf@plt>
   2aa90:	str	r0, [sp, #4]
   2aa94:	b	2ab90 <__assert_fail@plt+0x17fd8>
   2aa98:	ldr	r0, [sp, #12]
   2aa9c:	movw	r1, #40288	; 0x9d60
   2aaa0:	movt	r1, #7
   2aaa4:	bl	128c4 <fprintf@plt>
   2aaa8:	str	r0, [sp, #4]
   2aaac:	b	2ab90 <__assert_fail@plt+0x17fd8>
   2aab0:	ldr	r0, [sp, #12]
   2aab4:	movw	r1, #40291	; 0x9d63
   2aab8:	movt	r1, #7
   2aabc:	bl	128c4 <fprintf@plt>
   2aac0:	str	r0, [sp, #4]
   2aac4:	b	2ab90 <__assert_fail@plt+0x17fd8>
   2aac8:	ldr	r0, [sp, #12]
   2aacc:	movw	r1, #40294	; 0x9d66
   2aad0:	movt	r1, #7
   2aad4:	bl	128c4 <fprintf@plt>
   2aad8:	str	r0, [sp, #4]
   2aadc:	b	2ab90 <__assert_fail@plt+0x17fd8>
   2aae0:	ldr	r0, [sp, #12]
   2aae4:	movw	r1, #40297	; 0x9d69
   2aae8:	movt	r1, #7
   2aaec:	bl	128c4 <fprintf@plt>
   2aaf0:	str	r0, [sp, #4]
   2aaf4:	b	2ab90 <__assert_fail@plt+0x17fd8>
   2aaf8:	ldr	r0, [sp, #12]
   2aafc:	movw	r1, #40300	; 0x9d6c
   2ab00:	movt	r1, #7
   2ab04:	bl	128c4 <fprintf@plt>
   2ab08:	str	r0, [sp, #4]
   2ab0c:	b	2ab90 <__assert_fail@plt+0x17fd8>
   2ab10:	ldr	r0, [sp, #12]
   2ab14:	movw	r1, #40303	; 0x9d6f
   2ab18:	movt	r1, #7
   2ab1c:	bl	128c4 <fprintf@plt>
   2ab20:	str	r0, [sp, #4]
   2ab24:	b	2ab90 <__assert_fail@plt+0x17fd8>
   2ab28:	ldrb	r0, [sp, #11]
   2ab2c:	cmp	r0, #32
   2ab30:	ble	2ab74 <__assert_fail@plt+0x17fbc>
   2ab34:	ldrb	r0, [sp, #11]
   2ab38:	cmp	r0, #127	; 0x7f
   2ab3c:	bge	2ab74 <__assert_fail@plt+0x17fbc>
   2ab40:	ldrb	r0, [sp, #11]
   2ab44:	ldr	r1, [sp, #12]
   2ab48:	bl	12a8c <putc@plt>
   2ab4c:	mvn	r1, #0
   2ab50:	cmp	r1, r0
   2ab54:	bne	2ab68 <__assert_fail@plt+0x17fb0>
   2ab58:	movw	r0, #0
   2ab5c:	and	r0, r0, #1
   2ab60:	strb	r0, [fp, #-1]
   2ab64:	b	2abbc <__assert_fail@plt+0x18004>
   2ab68:	movw	r0, #1
   2ab6c:	str	r0, [sp, #4]
   2ab70:	b	2ab8c <__assert_fail@plt+0x17fd4>
   2ab74:	ldr	r0, [sp, #12]
   2ab78:	ldrb	r2, [sp, #11]
   2ab7c:	movw	r1, #40306	; 0x9d72
   2ab80:	movt	r1, #7
   2ab84:	bl	128c4 <fprintf@plt>
   2ab88:	str	r0, [sp, #4]
   2ab8c:	b	2ab90 <__assert_fail@plt+0x17fd8>
   2ab90:	ldr	r0, [sp, #4]
   2ab94:	cmp	r0, #0
   2ab98:	bge	2abac <__assert_fail@plt+0x17ff4>
   2ab9c:	movw	r0, #0
   2aba0:	and	r0, r0, #1
   2aba4:	strb	r0, [fp, #-1]
   2aba8:	b	2abbc <__assert_fail@plt+0x18004>
   2abac:	b	2a9b8 <__assert_fail@plt+0x17e00>
   2abb0:	movw	r0, #1
   2abb4:	and	r0, r0, #1
   2abb8:	strb	r0, [fp, #-1]
   2abbc:	ldrb	r0, [fp, #-1]
   2abc0:	and	r0, r0, #1
   2abc4:	mov	sp, fp
   2abc8:	pop	{fp, pc}
   2abcc:	push	{r4, r5, fp, lr}
   2abd0:	add	fp, sp, #8
   2abd4:	sub	sp, sp, #40	; 0x28
   2abd8:	sub	sp, sp, #8192	; 0x2000
   2abdc:	ldr	ip, [fp, #8]
   2abe0:	str	r0, [fp, #-12]
   2abe4:	str	r1, [fp, #-16]
   2abe8:	and	r0, r2, #1
   2abec:	strb	r0, [fp, #-17]	; 0xffffffef
   2abf0:	str	r3, [fp, #-24]	; 0xffffffe8
   2abf4:	ldrb	r0, [fp, #-17]	; 0xffffffef
   2abf8:	tst	r0, #1
   2abfc:	beq	2acdc <__assert_fail@plt+0x18124>
   2ac00:	add	r0, sp, #20
   2ac04:	ldr	r2, [fp, #8]
   2ac08:	ldr	r1, [fp, #-16]
   2ac0c:	movw	r3, #8192	; 0x2000
   2ac10:	str	r1, [sp, #8]
   2ac14:	mov	r1, r3
   2ac18:	mvn	r3, #0
   2ac1c:	ldr	ip, [sp, #8]
   2ac20:	str	ip, [sp]
   2ac24:	bl	46998 <__assert_fail@plt+0x33de0>
   2ac28:	str	r0, [sp, #16]
   2ac2c:	ldr	r0, [sp, #16]
   2ac30:	cmp	r0, #8192	; 0x2000
   2ac34:	bcs	2ac44 <__assert_fail@plt+0x1808c>
   2ac38:	add	r0, sp, #20
   2ac3c:	str	r0, [sp, #12]
   2ac40:	b	2ac80 <__assert_fail@plt+0x180c8>
   2ac44:	ldr	r0, [sp, #16]
   2ac48:	add	r0, r0, #1
   2ac4c:	bl	4a2f0 <__assert_fail@plt+0x37738>
   2ac50:	str	r0, [sp, #12]
   2ac54:	ldr	r0, [sp, #12]
   2ac58:	ldr	r1, [sp, #16]
   2ac5c:	add	r1, r1, #1
   2ac60:	ldr	r2, [fp, #8]
   2ac64:	ldr	r3, [fp, #-16]
   2ac68:	mvn	ip, #0
   2ac6c:	str	r3, [sp, #4]
   2ac70:	mov	r3, ip
   2ac74:	ldr	ip, [sp, #4]
   2ac78:	str	ip, [sp]
   2ac7c:	bl	46998 <__assert_fail@plt+0x33de0>
   2ac80:	ldr	r0, [sp, #12]
   2ac84:	ldr	r1, [sp, #16]
   2ac88:	bl	2acfc <__assert_fail@plt+0x18144>
   2ac8c:	str	r0, [sp, #16]
   2ac90:	ldr	r0, [sp, #12]
   2ac94:	ldr	r1, [sp, #16]
   2ac98:	add	r0, r0, r1
   2ac9c:	movw	r1, #0
   2aca0:	strb	r1, [r0]
   2aca4:	ldr	r0, [fp, #-12]
   2aca8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2acac:	ldr	r2, [sp, #12]
   2acb0:	bl	128c4 <fprintf@plt>
   2acb4:	add	r1, sp, #20
   2acb8:	str	r0, [fp, #-28]	; 0xffffffe4
   2acbc:	ldr	r0, [sp, #12]
   2acc0:	cmp	r0, r1
   2acc4:	beq	2acd8 <__assert_fail@plt+0x18120>
   2acc8:	ldr	r0, [sp, #12]
   2accc:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   2acd0:	movw	r0, #0
   2acd4:	str	r0, [sp, #12]
   2acd8:	b	2acf0 <__assert_fail@plt+0x18138>
   2acdc:	ldr	r0, [fp, #-12]
   2ace0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ace4:	ldr	r2, [fp, #8]
   2ace8:	bl	128c4 <fprintf@plt>
   2acec:	str	r0, [fp, #-28]	; 0xffffffe4
   2acf0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2acf4:	sub	sp, fp, #8
   2acf8:	pop	{r4, r5, fp, pc}
   2acfc:	push	{fp, lr}
   2ad00:	mov	fp, sp
   2ad04:	sub	sp, sp, #48	; 0x30
   2ad08:	str	r0, [fp, #-8]
   2ad0c:	str	r1, [fp, #-12]
   2ad10:	bl	12720 <__ctype_get_mb_cur_max@plt>
   2ad14:	cmp	r0, #1
   2ad18:	bhi	2ad30 <__assert_fail@plt+0x18178>
   2ad1c:	ldr	r0, [fp, #-8]
   2ad20:	ldr	r1, [fp, #-12]
   2ad24:	bl	2b0a4 <__assert_fail@plt+0x184ec>
   2ad28:	str	r0, [fp, #-4]
   2ad2c:	b	2b098 <__assert_fail@plt+0x184e0>
   2ad30:	ldr	r0, [fp, #-8]
   2ad34:	str	r0, [fp, #-16]
   2ad38:	ldr	r0, [fp, #-8]
   2ad3c:	ldr	r1, [fp, #-12]
   2ad40:	add	r0, r0, r1
   2ad44:	str	r0, [fp, #-20]	; 0xffffffec
   2ad48:	ldr	r0, [fp, #-8]
   2ad4c:	str	r0, [sp, #24]
   2ad50:	ldr	r0, [fp, #-16]
   2ad54:	ldr	r1, [fp, #-20]	; 0xffffffec
   2ad58:	cmp	r0, r1
   2ad5c:	bcs	2b080 <__assert_fail@plt+0x184c8>
   2ad60:	ldr	r0, [fp, #-16]
   2ad64:	ldrb	r0, [r0]
   2ad68:	sub	r0, r0, #32
   2ad6c:	cmp	r0, #94	; 0x5e
   2ad70:	str	r0, [sp]
   2ad74:	bhi	2af28 <__assert_fail@plt+0x18370>
   2ad78:	add	r0, pc, #8
   2ad7c:	ldr	r1, [sp]
   2ad80:	ldr	r0, [r0, r1, lsl #2]
   2ad84:	mov	pc, r0
   2ad88:	andeq	sl, r2, r4, lsl #30
   2ad8c:	andeq	sl, r2, r4, lsl #30
   2ad90:	andeq	sl, r2, r4, lsl #30
   2ad94:	andeq	sl, r2, r4, lsl #30
   2ad98:	andeq	sl, r2, r8, lsr #30
   2ad9c:	andeq	sl, r2, r4, lsl #30
   2ada0:	andeq	sl, r2, r4, lsl #30
   2ada4:	andeq	sl, r2, r4, lsl #30
   2ada8:	andeq	sl, r2, r4, lsl #30
   2adac:	andeq	sl, r2, r4, lsl #30
   2adb0:	andeq	sl, r2, r4, lsl #30
   2adb4:	andeq	sl, r2, r4, lsl #30
   2adb8:	andeq	sl, r2, r4, lsl #30
   2adbc:	andeq	sl, r2, r4, lsl #30
   2adc0:	andeq	sl, r2, r4, lsl #30
   2adc4:	andeq	sl, r2, r4, lsl #30
   2adc8:	andeq	sl, r2, r4, lsl #30
   2adcc:	andeq	sl, r2, r4, lsl #30
   2add0:	andeq	sl, r2, r4, lsl #30
   2add4:	andeq	sl, r2, r4, lsl #30
   2add8:	andeq	sl, r2, r4, lsl #30
   2addc:	andeq	sl, r2, r4, lsl #30
   2ade0:	andeq	sl, r2, r4, lsl #30
   2ade4:	andeq	sl, r2, r4, lsl #30
   2ade8:	andeq	sl, r2, r4, lsl #30
   2adec:	andeq	sl, r2, r4, lsl #30
   2adf0:	andeq	sl, r2, r4, lsl #30
   2adf4:	andeq	sl, r2, r4, lsl #30
   2adf8:	andeq	sl, r2, r4, lsl #30
   2adfc:	andeq	sl, r2, r4, lsl #30
   2ae00:	andeq	sl, r2, r4, lsl #30
   2ae04:	andeq	sl, r2, r4, lsl #30
   2ae08:	andeq	sl, r2, r8, lsr #30
   2ae0c:	andeq	sl, r2, r4, lsl #30
   2ae10:	andeq	sl, r2, r4, lsl #30
   2ae14:	andeq	sl, r2, r4, lsl #30
   2ae18:	andeq	sl, r2, r4, lsl #30
   2ae1c:	andeq	sl, r2, r4, lsl #30
   2ae20:	andeq	sl, r2, r4, lsl #30
   2ae24:	andeq	sl, r2, r4, lsl #30
   2ae28:	andeq	sl, r2, r4, lsl #30
   2ae2c:	andeq	sl, r2, r4, lsl #30
   2ae30:	andeq	sl, r2, r4, lsl #30
   2ae34:	andeq	sl, r2, r4, lsl #30
   2ae38:	andeq	sl, r2, r4, lsl #30
   2ae3c:	andeq	sl, r2, r4, lsl #30
   2ae40:	andeq	sl, r2, r4, lsl #30
   2ae44:	andeq	sl, r2, r4, lsl #30
   2ae48:	andeq	sl, r2, r4, lsl #30
   2ae4c:	andeq	sl, r2, r4, lsl #30
   2ae50:	andeq	sl, r2, r4, lsl #30
   2ae54:	andeq	sl, r2, r4, lsl #30
   2ae58:	andeq	sl, r2, r4, lsl #30
   2ae5c:	andeq	sl, r2, r4, lsl #30
   2ae60:	andeq	sl, r2, r4, lsl #30
   2ae64:	andeq	sl, r2, r4, lsl #30
   2ae68:	andeq	sl, r2, r4, lsl #30
   2ae6c:	andeq	sl, r2, r4, lsl #30
   2ae70:	andeq	sl, r2, r4, lsl #30
   2ae74:	andeq	sl, r2, r4, lsl #30
   2ae78:	andeq	sl, r2, r4, lsl #30
   2ae7c:	andeq	sl, r2, r4, lsl #30
   2ae80:	andeq	sl, r2, r4, lsl #30
   2ae84:	andeq	sl, r2, r4, lsl #30
   2ae88:	andeq	sl, r2, r8, lsr #30
   2ae8c:	andeq	sl, r2, r4, lsl #30
   2ae90:	andeq	sl, r2, r4, lsl #30
   2ae94:	andeq	sl, r2, r4, lsl #30
   2ae98:	andeq	sl, r2, r4, lsl #30
   2ae9c:	andeq	sl, r2, r4, lsl #30
   2aea0:	andeq	sl, r2, r4, lsl #30
   2aea4:	andeq	sl, r2, r4, lsl #30
   2aea8:	andeq	sl, r2, r4, lsl #30
   2aeac:	andeq	sl, r2, r4, lsl #30
   2aeb0:	andeq	sl, r2, r4, lsl #30
   2aeb4:	andeq	sl, r2, r4, lsl #30
   2aeb8:	andeq	sl, r2, r4, lsl #30
   2aebc:	andeq	sl, r2, r4, lsl #30
   2aec0:	andeq	sl, r2, r4, lsl #30
   2aec4:	andeq	sl, r2, r4, lsl #30
   2aec8:	andeq	sl, r2, r4, lsl #30
   2aecc:	andeq	sl, r2, r4, lsl #30
   2aed0:	andeq	sl, r2, r4, lsl #30
   2aed4:	andeq	sl, r2, r4, lsl #30
   2aed8:	andeq	sl, r2, r4, lsl #30
   2aedc:	andeq	sl, r2, r4, lsl #30
   2aee0:	andeq	sl, r2, r4, lsl #30
   2aee4:	andeq	sl, r2, r4, lsl #30
   2aee8:	andeq	sl, r2, r4, lsl #30
   2aeec:	andeq	sl, r2, r4, lsl #30
   2aef0:	andeq	sl, r2, r4, lsl #30
   2aef4:	andeq	sl, r2, r4, lsl #30
   2aef8:	andeq	sl, r2, r4, lsl #30
   2aefc:	andeq	sl, r2, r4, lsl #30
   2af00:	andeq	sl, r2, r4, lsl #30
   2af04:	ldr	r0, [fp, #-16]
   2af08:	add	r1, r0, #1
   2af0c:	str	r1, [fp, #-16]
   2af10:	ldrb	r0, [r0]
   2af14:	ldr	r1, [sp, #24]
   2af18:	add	r2, r1, #1
   2af1c:	str	r2, [sp, #24]
   2af20:	strb	r0, [r1]
   2af24:	b	2b07c <__assert_fail@plt+0x184c4>
   2af28:	add	r0, sp, #16
   2af2c:	movw	r1, #0
   2af30:	and	r1, r1, #255	; 0xff
   2af34:	movw	r2, #8
   2af38:	bl	12900 <memset@plt>
   2af3c:	ldr	r1, [fp, #-16]
   2af40:	ldr	r0, [fp, #-20]	; 0xffffffec
   2af44:	ldr	r2, [fp, #-16]
   2af48:	sub	r2, r0, r2
   2af4c:	add	r0, sp, #12
   2af50:	add	r3, sp, #16
   2af54:	bl	52860 <__assert_fail@plt+0x3fca8>
   2af58:	str	r0, [sp, #8]
   2af5c:	ldr	r0, [sp, #8]
   2af60:	cmn	r0, #1
   2af64:	bne	2af8c <__assert_fail@plt+0x183d4>
   2af68:	ldr	r0, [fp, #-16]
   2af6c:	add	r0, r0, #1
   2af70:	str	r0, [fp, #-16]
   2af74:	ldr	r0, [sp, #24]
   2af78:	add	r1, r0, #1
   2af7c:	str	r1, [sp, #24]
   2af80:	movw	r1, #63	; 0x3f
   2af84:	strb	r1, [r0]
   2af88:	b	2b078 <__assert_fail@plt+0x184c0>
   2af8c:	ldr	r0, [sp, #8]
   2af90:	cmn	r0, #2
   2af94:	bne	2afb8 <__assert_fail@plt+0x18400>
   2af98:	ldr	r0, [fp, #-20]	; 0xffffffec
   2af9c:	str	r0, [fp, #-16]
   2afa0:	ldr	r0, [sp, #24]
   2afa4:	add	r1, r0, #1
   2afa8:	str	r1, [sp, #24]
   2afac:	movw	r1, #63	; 0x3f
   2afb0:	strb	r1, [r0]
   2afb4:	b	2b078 <__assert_fail@plt+0x184c0>
   2afb8:	ldr	r0, [sp, #8]
   2afbc:	cmp	r0, #0
   2afc0:	bne	2afcc <__assert_fail@plt+0x18414>
   2afc4:	movw	r0, #1
   2afc8:	str	r0, [sp, #8]
   2afcc:	ldr	r0, [sp, #12]
   2afd0:	bl	12540 <wcwidth@plt>
   2afd4:	str	r0, [sp, #4]
   2afd8:	ldr	r0, [sp, #4]
   2afdc:	cmp	r0, #0
   2afe0:	blt	2b02c <__assert_fail@plt+0x18474>
   2afe4:	b	2afe8 <__assert_fail@plt+0x18430>
   2afe8:	ldr	r0, [sp, #8]
   2afec:	cmp	r0, #0
   2aff0:	bls	2b028 <__assert_fail@plt+0x18470>
   2aff4:	ldr	r0, [fp, #-16]
   2aff8:	add	r1, r0, #1
   2affc:	str	r1, [fp, #-16]
   2b000:	ldrb	r0, [r0]
   2b004:	ldr	r1, [sp, #24]
   2b008:	add	r2, r1, #1
   2b00c:	str	r2, [sp, #24]
   2b010:	strb	r0, [r1]
   2b014:	ldr	r0, [sp, #8]
   2b018:	mvn	r1, #0
   2b01c:	add	r0, r0, r1
   2b020:	str	r0, [sp, #8]
   2b024:	b	2afe8 <__assert_fail@plt+0x18430>
   2b028:	b	2b050 <__assert_fail@plt+0x18498>
   2b02c:	ldr	r0, [sp, #8]
   2b030:	ldr	r1, [fp, #-16]
   2b034:	add	r0, r1, r0
   2b038:	str	r0, [fp, #-16]
   2b03c:	ldr	r0, [sp, #24]
   2b040:	add	r1, r0, #1
   2b044:	str	r1, [sp, #24]
   2b048:	movw	r1, #63	; 0x3f
   2b04c:	strb	r1, [r0]
   2b050:	b	2b054 <__assert_fail@plt+0x1849c>
   2b054:	add	r0, sp, #16
   2b058:	bl	12600 <mbsinit@plt>
   2b05c:	cmp	r0, #0
   2b060:	movw	r0, #0
   2b064:	movne	r0, #1
   2b068:	mvn	r1, #0
   2b06c:	eor	r0, r0, r1
   2b070:	tst	r0, #1
   2b074:	bne	2af3c <__assert_fail@plt+0x18384>
   2b078:	b	2b07c <__assert_fail@plt+0x184c4>
   2b07c:	b	2ad50 <__assert_fail@plt+0x18198>
   2b080:	ldr	r0, [sp, #24]
   2b084:	ldr	r1, [fp, #-8]
   2b088:	sub	r0, r0, r1
   2b08c:	str	r0, [fp, #-12]
   2b090:	ldr	r0, [fp, #-12]
   2b094:	str	r0, [fp, #-4]
   2b098:	ldr	r0, [fp, #-4]
   2b09c:	mov	sp, fp
   2b0a0:	pop	{fp, pc}
   2b0a4:	push	{fp, lr}
   2b0a8:	mov	fp, sp
   2b0ac:	sub	sp, sp, #24
   2b0b0:	str	r0, [fp, #-4]
   2b0b4:	str	r1, [fp, #-8]
   2b0b8:	ldr	r0, [fp, #-4]
   2b0bc:	str	r0, [sp, #12]
   2b0c0:	ldr	r0, [fp, #-4]
   2b0c4:	ldr	r1, [fp, #-8]
   2b0c8:	add	r0, r0, r1
   2b0cc:	str	r0, [sp, #8]
   2b0d0:	ldr	r0, [sp, #12]
   2b0d4:	ldr	r1, [sp, #8]
   2b0d8:	cmp	r0, r1
   2b0dc:	bcs	2b134 <__assert_fail@plt+0x1857c>
   2b0e0:	bl	12834 <__ctype_b_loc@plt>
   2b0e4:	ldr	r0, [r0]
   2b0e8:	ldr	r1, [sp, #12]
   2b0ec:	ldrb	r1, [r1]
   2b0f0:	str	r0, [sp, #4]
   2b0f4:	mov	r0, r1
   2b0f8:	bl	2b140 <__assert_fail@plt+0x18588>
   2b0fc:	mov	r1, r0
   2b100:	ldr	r2, [sp, #4]
   2b104:	add	r0, r2, r0, lsl #1
   2b108:	ldrh	r0, [r0]
   2b10c:	and	r0, r0, #16384	; 0x4000
   2b110:	cmp	r0, #0
   2b114:	bne	2b124 <__assert_fail@plt+0x1856c>
   2b118:	ldr	r0, [sp, #12]
   2b11c:	movw	r1, #63	; 0x3f
   2b120:	strb	r1, [r0]
   2b124:	ldr	r0, [sp, #12]
   2b128:	add	r0, r0, #1
   2b12c:	str	r0, [sp, #12]
   2b130:	b	2b0d0 <__assert_fail@plt+0x18518>
   2b134:	ldr	r0, [fp, #-8]
   2b138:	mov	sp, fp
   2b13c:	pop	{fp, pc}
   2b140:	sub	sp, sp, #4
   2b144:	strb	r0, [sp, #3]
   2b148:	ldrb	r0, [sp, #3]
   2b14c:	add	sp, sp, #4
   2b150:	bx	lr
   2b154:	push	{fp, lr}
   2b158:	mov	fp, sp
   2b15c:	sub	sp, sp, #48	; 0x30
   2b160:	str	r0, [fp, #-4]
   2b164:	movw	r0, #0
   2b168:	str	r0, [fp, #-12]
   2b16c:	str	r0, [fp, #-8]
   2b170:	ldr	r0, [fp, #-8]
   2b174:	cmp	r0, #13
   2b178:	bcs	2b218 <__assert_fail@plt+0x18660>
   2b17c:	ldr	r0, [fp, #-8]
   2b180:	movw	r1, #12
   2b184:	mul	r0, r0, r1
   2b188:	movw	r1, #54832	; 0xd630
   2b18c:	movt	r1, #8
   2b190:	add	r0, r1, r0
   2b194:	ldr	r0, [r0]
   2b198:	ldr	r1, [fp, #-4]
   2b19c:	bl	124c8 <strcmp@plt>
   2b1a0:	movw	r1, #0
   2b1a4:	cmp	r1, r0
   2b1a8:	bne	2b1d0 <__assert_fail@plt+0x18618>
   2b1ac:	ldr	r0, [fp, #-8]
   2b1b0:	movw	r1, #12
   2b1b4:	mul	r0, r0, r1
   2b1b8:	movw	r1, #54832	; 0xd630
   2b1bc:	movt	r1, #8
   2b1c0:	add	r0, r1, r0
   2b1c4:	ldr	r0, [r0, #8]
   2b1c8:	mov	sp, fp
   2b1cc:	pop	{fp, pc}
   2b1d0:	ldr	r0, [fp, #-8]
   2b1d4:	movw	r1, #12
   2b1d8:	mul	r0, r0, r1
   2b1dc:	movw	r1, #54832	; 0xd630
   2b1e0:	movt	r1, #8
   2b1e4:	add	r0, r1, r0
   2b1e8:	ldr	r0, [r0]
   2b1ec:	bl	48c3c <__assert_fail@plt+0x36084>
   2b1f0:	bl	12888 <strlen@plt>
   2b1f4:	add	r0, r0, #2
   2b1f8:	ldr	r1, [fp, #-12]
   2b1fc:	add	r0, r1, r0
   2b200:	str	r0, [fp, #-12]
   2b204:	b	2b208 <__assert_fail@plt+0x18650>
   2b208:	ldr	r0, [fp, #-8]
   2b20c:	add	r0, r0, #1
   2b210:	str	r0, [fp, #-8]
   2b214:	b	2b170 <__assert_fail@plt+0x185b8>
   2b218:	ldr	r0, [fp, #-12]
   2b21c:	add	r0, r0, #1
   2b220:	bl	4a2f0 <__assert_fail@plt+0x37738>
   2b224:	str	r0, [fp, #-16]
   2b228:	str	r0, [fp, #-20]	; 0xffffffec
   2b22c:	movw	r0, #0
   2b230:	str	r0, [fp, #-8]
   2b234:	ldr	r0, [fp, #-8]
   2b238:	cmp	r0, #13
   2b23c:	bcs	2b2cc <__assert_fail@plt+0x18714>
   2b240:	ldr	r0, [fp, #-8]
   2b244:	cmp	r0, #0
   2b248:	bls	2b268 <__assert_fail@plt+0x186b0>
   2b24c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2b250:	movw	r1, #30525	; 0x773d
   2b254:	movt	r1, #7
   2b258:	bl	12738 <strcpy@plt>
   2b25c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2b260:	add	r1, r1, #2
   2b264:	str	r1, [fp, #-20]	; 0xffffffec
   2b268:	ldr	r0, [fp, #-20]	; 0xffffffec
   2b26c:	ldr	r1, [fp, #-8]
   2b270:	movw	r2, #12
   2b274:	mul	r1, r1, r2
   2b278:	movw	r2, #54832	; 0xd630
   2b27c:	movt	r2, #8
   2b280:	add	r1, r2, r1
   2b284:	ldr	r1, [r1]
   2b288:	str	r0, [sp, #24]
   2b28c:	mov	r0, r1
   2b290:	bl	48c3c <__assert_fail@plt+0x36084>
   2b294:	ldr	r1, [sp, #24]
   2b298:	str	r0, [sp, #20]
   2b29c:	mov	r0, r1
   2b2a0:	movw	r1, #50143	; 0xc3df
   2b2a4:	movt	r1, #7
   2b2a8:	ldr	r2, [sp, #20]
   2b2ac:	bl	12a5c <sprintf@plt>
   2b2b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   2b2b4:	add	r0, r1, r0
   2b2b8:	str	r0, [fp, #-20]	; 0xffffffec
   2b2bc:	ldr	r0, [fp, #-8]
   2b2c0:	add	r0, r0, #1
   2b2c4:	str	r0, [fp, #-8]
   2b2c8:	b	2b234 <__assert_fail@plt+0x1867c>
   2b2cc:	movw	r0, #40312	; 0x9d78
   2b2d0:	movt	r0, #7
   2b2d4:	bl	12864 <gettext@plt>
   2b2d8:	ldr	r1, [fp, #-4]
   2b2dc:	str	r0, [sp, #16]
   2b2e0:	mov	r0, r1
   2b2e4:	bl	48c3c <__assert_fail@plt+0x36084>
   2b2e8:	ldr	r1, [fp, #-16]
   2b2ec:	movw	r2, #1
   2b2f0:	str	r0, [sp, #12]
   2b2f4:	mov	r0, r2
   2b2f8:	movw	r2, #0
   2b2fc:	str	r1, [sp, #8]
   2b300:	mov	r1, r2
   2b304:	ldr	r2, [sp, #16]
   2b308:	ldr	r3, [sp, #12]
   2b30c:	ldr	ip, [sp, #8]
   2b310:	str	ip, [sp]
   2b314:	bl	12780 <error@plt>
   2b318:	sub	sp, sp, #8
   2b31c:	str	r0, [sp]
   2b320:	ldr	r0, [sp]
   2b324:	cmp	r0, #13
   2b328:	bcs	2b350 <__assert_fail@plt+0x18798>
   2b32c:	ldr	r0, [sp]
   2b330:	movw	r1, #12
   2b334:	mul	r0, r0, r1
   2b338:	movw	r1, #54832	; 0xd630
   2b33c:	movt	r1, #8
   2b340:	add	r0, r1, r0
   2b344:	ldr	r0, [r0]
   2b348:	str	r0, [sp, #4]
   2b34c:	b	2b358 <__assert_fail@plt+0x187a0>
   2b350:	movw	r0, #0
   2b354:	str	r0, [sp, #4]
   2b358:	ldr	r0, [sp, #4]
   2b35c:	add	sp, sp, #8
   2b360:	bx	lr
   2b364:	sub	sp, sp, #8
   2b368:	str	r0, [sp]
   2b36c:	ldr	r0, [sp]
   2b370:	cmp	r0, #13
   2b374:	bcs	2b39c <__assert_fail@plt+0x187e4>
   2b378:	ldr	r0, [sp]
   2b37c:	movw	r1, #12
   2b380:	mul	r0, r0, r1
   2b384:	movw	r1, #54832	; 0xd630
   2b388:	movt	r1, #8
   2b38c:	add	r0, r1, r0
   2b390:	ldr	r0, [r0, #8]
   2b394:	str	r0, [sp, #4]
   2b398:	b	2b3a4 <__assert_fail@plt+0x187ec>
   2b39c:	mvn	r0, #0
   2b3a0:	str	r0, [sp, #4]
   2b3a4:	ldr	r0, [sp, #4]
   2b3a8:	add	sp, sp, #8
   2b3ac:	bx	lr
   2b3b0:	sub	sp, sp, #8
   2b3b4:	str	r0, [sp]
   2b3b8:	ldr	r0, [sp]
   2b3bc:	cmp	r0, #13
   2b3c0:	bcs	2b3e8 <__assert_fail@plt+0x18830>
   2b3c4:	ldr	r0, [sp]
   2b3c8:	movw	r1, #12
   2b3cc:	mul	r0, r0, r1
   2b3d0:	movw	r1, #54832	; 0xd630
   2b3d4:	movt	r1, #8
   2b3d8:	add	r0, r1, r0
   2b3dc:	ldr	r0, [r0, #4]
   2b3e0:	str	r0, [sp, #4]
   2b3e4:	b	2b3f0 <__assert_fail@plt+0x18838>
   2b3e8:	movw	r0, #0
   2b3ec:	str	r0, [sp, #4]
   2b3f0:	ldr	r0, [sp, #4]
   2b3f4:	add	sp, sp, #8
   2b3f8:	bx	lr
   2b3fc:	sub	sp, sp, #20
   2b400:	str	r0, [sp, #12]
   2b404:	str	r1, [sp, #8]
   2b408:	ldr	r0, [sp, #12]
   2b40c:	cmp	r0, #13
   2b410:	bcc	2b420 <__assert_fail@plt+0x18868>
   2b414:	mvn	r0, #0
   2b418:	str	r0, [sp, #16]
   2b41c:	b	2b4dc <__assert_fail@plt+0x18924>
   2b420:	ldr	r0, [sp, #12]
   2b424:	movw	r1, #12
   2b428:	mul	r0, r0, r1
   2b42c:	movw	r1, #54832	; 0xd630
   2b430:	movt	r1, #8
   2b434:	add	r0, r1, r0
   2b438:	ldr	r0, [r0, #8]
   2b43c:	str	r0, [sp]
   2b440:	movw	r0, #0
   2b444:	str	r0, [sp, #4]
   2b448:	ldr	r0, [sp, #4]
   2b44c:	ldr	r1, [sp, #12]
   2b450:	cmp	r0, r1
   2b454:	bcs	2b4d4 <__assert_fail@plt+0x1891c>
   2b458:	ldr	r0, [sp, #4]
   2b45c:	movw	r1, #12
   2b460:	mul	r0, r0, r1
   2b464:	movw	r1, #54832	; 0xd630
   2b468:	movt	r1, #8
   2b46c:	add	r0, r1, r0
   2b470:	ldr	r0, [r0, #4]
   2b474:	ldr	r1, [sp, #8]
   2b478:	and	r0, r0, r1
   2b47c:	cmp	r0, #0
   2b480:	bne	2b488 <__assert_fail@plt+0x188d0>
   2b484:	b	2b4c4 <__assert_fail@plt+0x1890c>
   2b488:	ldr	r0, [sp]
   2b48c:	ldr	r1, [sp, #4]
   2b490:	movw	r2, #12
   2b494:	mul	r1, r1, r2
   2b498:	movw	r2, #54832	; 0xd630
   2b49c:	movt	r2, #8
   2b4a0:	add	r1, r2, r1
   2b4a4:	ldr	r1, [r1, #8]
   2b4a8:	cmp	r0, r1
   2b4ac:	bne	2b4bc <__assert_fail@plt+0x18904>
   2b4b0:	ldr	r0, [sp, #4]
   2b4b4:	str	r0, [sp, #16]
   2b4b8:	b	2b4dc <__assert_fail@plt+0x18924>
   2b4bc:	b	2b4c0 <__assert_fail@plt+0x18908>
   2b4c0:	b	2b4c4 <__assert_fail@plt+0x1890c>
   2b4c4:	ldr	r0, [sp, #4]
   2b4c8:	add	r0, r0, #1
   2b4cc:	str	r0, [sp, #4]
   2b4d0:	b	2b448 <__assert_fail@plt+0x18890>
   2b4d4:	mvn	r0, #0
   2b4d8:	str	r0, [sp, #16]
   2b4dc:	ldr	r0, [sp, #16]
   2b4e0:	add	sp, sp, #20
   2b4e4:	bx	lr
   2b4e8:	push	{fp, lr}
   2b4ec:	mov	fp, sp
   2b4f0:	sub	sp, sp, #48	; 0x30
   2b4f4:	str	r0, [fp, #-4]
   2b4f8:	str	r1, [fp, #-8]
   2b4fc:	bl	128d0 <__errno_location@plt>
   2b500:	movw	r1, #0
   2b504:	str	r1, [r0]
   2b508:	ldr	r0, [fp, #-4]
   2b50c:	sub	r1, fp, #16
   2b510:	movw	r2, #10
   2b514:	bl	124d4 <strtol@plt>
   2b518:	ldr	r1, [pc, #404]	; 2b6b4 <__assert_fail@plt+0x18afc>
   2b51c:	str	r0, [fp, #-12]
   2b520:	ldr	r0, [fp, #-12]
   2b524:	cmp	r1, r0
   2b528:	beq	2b53c <__assert_fail@plt+0x18984>
   2b52c:	ldr	r0, [pc, #388]	; 2b6b8 <__assert_fail@plt+0x18b00>
   2b530:	ldr	r1, [fp, #-12]
   2b534:	cmp	r0, r1
   2b538:	bne	2b584 <__assert_fail@plt+0x189cc>
   2b53c:	bl	128d0 <__errno_location@plt>
   2b540:	ldr	r0, [r0]
   2b544:	cmp	r0, #34	; 0x22
   2b548:	bne	2b568 <__assert_fail@plt+0x189b0>
   2b54c:	bl	128d0 <__errno_location@plt>
   2b550:	ldr	r1, [r0]
   2b554:	ldr	r3, [fp, #-4]
   2b558:	movw	r0, #1
   2b55c:	movw	r2, #50143	; 0xc3df
   2b560:	movt	r2, #7
   2b564:	bl	12780 <error@plt>
   2b568:	bl	128d0 <__errno_location@plt>
   2b56c:	ldr	r1, [r0]
   2b570:	ldr	r3, [fp, #-4]
   2b574:	movw	r0, #1
   2b578:	movw	r2, #50143	; 0xc3df
   2b57c:	movt	r2, #7
   2b580:	bl	12780 <error@plt>
   2b584:	ldr	r0, [pc, #296]	; 2b6b4 <__assert_fail@plt+0x18afc>
   2b588:	ldr	r1, [fp, #-12]
   2b58c:	cmp	r1, r0
   2b590:	bgt	2b5a0 <__assert_fail@plt+0x189e8>
   2b594:	ldr	r0, [fp, #-12]
   2b598:	cmp	r0, #-2147483648	; 0x80000000
   2b59c:	bge	2b5c8 <__assert_fail@plt+0x18a10>
   2b5a0:	bl	128d0 <__errno_location@plt>
   2b5a4:	movw	r1, #34	; 0x22
   2b5a8:	str	r1, [r0]
   2b5ac:	bl	128d0 <__errno_location@plt>
   2b5b0:	ldr	r1, [r0]
   2b5b4:	ldr	r3, [fp, #-4]
   2b5b8:	movw	r0, #1
   2b5bc:	movw	r2, #50143	; 0xc3df
   2b5c0:	movt	r2, #7
   2b5c4:	bl	12780 <error@plt>
   2b5c8:	ldr	r0, [fp, #-16]
   2b5cc:	ldrsb	r0, [r0]
   2b5d0:	cmp	r0, #0
   2b5d4:	beq	2b644 <__assert_fail@plt+0x18a8c>
   2b5d8:	bl	128d0 <__errno_location@plt>
   2b5dc:	ldr	r1, [r0]
   2b5e0:	movw	r0, #40469	; 0x9e15
   2b5e4:	movt	r0, #7
   2b5e8:	str	r1, [fp, #-20]	; 0xffffffec
   2b5ec:	bl	12864 <gettext@plt>
   2b5f0:	ldr	r1, [fp, #-8]
   2b5f4:	ldr	r2, [fp, #-16]
   2b5f8:	movw	r3, #0
   2b5fc:	str	r0, [sp, #24]
   2b600:	mov	r0, r3
   2b604:	bl	487d0 <__assert_fail@plt+0x35c18>
   2b608:	ldr	r1, [fp, #-8]
   2b60c:	ldr	r2, [fp, #-4]
   2b610:	movw	r3, #1
   2b614:	str	r0, [sp, #20]
   2b618:	mov	r0, r3
   2b61c:	bl	487d0 <__assert_fail@plt+0x35c18>
   2b620:	movw	r1, #1
   2b624:	str	r0, [sp, #16]
   2b628:	mov	r0, r1
   2b62c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2b630:	ldr	r2, [sp, #24]
   2b634:	ldr	r3, [sp, #20]
   2b638:	ldr	ip, [sp, #16]
   2b63c:	str	ip, [sp]
   2b640:	bl	12780 <error@plt>
   2b644:	ldr	r0, [fp, #-16]
   2b648:	ldr	r1, [fp, #-4]
   2b64c:	cmp	r0, r1
   2b650:	bne	2b6a0 <__assert_fail@plt+0x18ae8>
   2b654:	bl	128d0 <__errno_location@plt>
   2b658:	ldr	r1, [r0]
   2b65c:	movw	r0, #40496	; 0x9e30
   2b660:	movt	r0, #7
   2b664:	str	r1, [sp, #12]
   2b668:	bl	12864 <gettext@plt>
   2b66c:	ldr	r1, [fp, #-8]
   2b670:	ldr	r2, [fp, #-4]
   2b674:	movw	r3, #0
   2b678:	str	r0, [sp, #8]
   2b67c:	mov	r0, r3
   2b680:	bl	487d0 <__assert_fail@plt+0x35c18>
   2b684:	movw	r1, #1
   2b688:	str	r0, [sp, #4]
   2b68c:	mov	r0, r1
   2b690:	ldr	r1, [sp, #12]
   2b694:	ldr	r2, [sp, #8]
   2b698:	ldr	r3, [sp, #4]
   2b69c:	bl	12780 <error@plt>
   2b6a0:	b	2b6a4 <__assert_fail@plt+0x18aec>
   2b6a4:	b	2b6a8 <__assert_fail@plt+0x18af0>
   2b6a8:	ldr	r0, [fp, #-12]
   2b6ac:	mov	sp, fp
   2b6b0:	pop	{fp, pc}
   2b6b4:	svcvc	0x00ffffff
   2b6b8:	andhi	r0, r0, r0
   2b6bc:	push	{fp, lr}
   2b6c0:	mov	fp, sp
   2b6c4:	sub	sp, sp, #24
   2b6c8:	ldr	ip, [fp, #8]
   2b6cc:	str	r0, [fp, #-8]
   2b6d0:	str	r1, [sp, #12]
   2b6d4:	and	r0, r2, #1
   2b6d8:	strb	r0, [sp, #11]
   2b6dc:	str	r3, [sp, #4]
   2b6e0:	ldrb	r0, [sp, #11]
   2b6e4:	tst	r0, #1
   2b6e8:	beq	2b704 <__assert_fail@plt+0x18b4c>
   2b6ec:	ldr	r0, [sp, #4]
   2b6f0:	movw	r1, #0
   2b6f4:	str	r1, [r0]
   2b6f8:	ldr	r0, [fp, #8]
   2b6fc:	str	r1, [r0]
   2b700:	b	2b760 <__assert_fail@plt+0x18ba8>
   2b704:	ldr	r0, [fp, #8]
   2b708:	ldr	r0, [r0]
   2b70c:	ldr	r1, [sp, #4]
   2b710:	ldr	r2, [r1]
   2b714:	add	r0, r2, r0
   2b718:	str	r0, [r1]
   2b71c:	ldr	r0, [fp, #-8]
   2b720:	ldr	r1, [sp, #4]
   2b724:	ldr	r1, [r1]
   2b728:	add	r0, r0, r1
   2b72c:	ldrsb	r0, [r0]
   2b730:	cmp	r0, #0
   2b734:	beq	2b74c <__assert_fail@plt+0x18b94>
   2b738:	ldr	r0, [sp, #4]
   2b73c:	ldr	r1, [r0]
   2b740:	add	r1, r1, #1
   2b744:	str	r1, [r0]
   2b748:	b	2b75c <__assert_fail@plt+0x18ba4>
   2b74c:	movw	r0, #0
   2b750:	and	r0, r0, #1
   2b754:	strb	r0, [fp, #-1]
   2b758:	b	2b78c <__assert_fail@plt+0x18bd4>
   2b75c:	b	2b760 <__assert_fail@plt+0x18ba8>
   2b760:	ldr	r0, [fp, #-8]
   2b764:	ldr	r1, [sp, #4]
   2b768:	ldr	r1, [r1]
   2b76c:	add	r0, r0, r1
   2b770:	ldr	r1, [sp, #12]
   2b774:	bl	2b79c <__assert_fail@plt+0x18be4>
   2b778:	ldr	r1, [fp, #8]
   2b77c:	str	r0, [r1]
   2b780:	movw	r0, #1
   2b784:	and	r0, r0, #1
   2b788:	strb	r0, [fp, #-1]
   2b78c:	ldrb	r0, [fp, #-1]
   2b790:	and	r0, r0, #1
   2b794:	mov	sp, fp
   2b798:	pop	{fp, pc}
   2b79c:	push	{fp, lr}
   2b7a0:	mov	fp, sp
   2b7a4:	sub	sp, sp, #16
   2b7a8:	str	r0, [sp, #8]
   2b7ac:	str	r1, [sp, #4]
   2b7b0:	ldr	r0, [sp, #4]
   2b7b4:	ldrsb	r0, [r0]
   2b7b8:	cmp	r0, #0
   2b7bc:	beq	2b7f8 <__assert_fail@plt+0x18c40>
   2b7c0:	ldr	r0, [sp, #8]
   2b7c4:	ldr	r1, [sp, #4]
   2b7c8:	bl	12ad4 <strpbrk@plt>
   2b7cc:	str	r0, [sp]
   2b7d0:	ldr	r0, [sp]
   2b7d4:	movw	r1, #0
   2b7d8:	cmp	r0, r1
   2b7dc:	beq	2b7f4 <__assert_fail@plt+0x18c3c>
   2b7e0:	ldr	r0, [sp]
   2b7e4:	ldr	r1, [sp, #8]
   2b7e8:	sub	r0, r0, r1
   2b7ec:	str	r0, [fp, #-4]
   2b7f0:	b	2b804 <__assert_fail@plt+0x18c4c>
   2b7f4:	b	2b7f8 <__assert_fail@plt+0x18c40>
   2b7f8:	ldr	r0, [sp, #8]
   2b7fc:	bl	12888 <strlen@plt>
   2b800:	str	r0, [fp, #-4]
   2b804:	ldr	r0, [fp, #-4]
   2b808:	mov	sp, fp
   2b80c:	pop	{fp, pc}
   2b810:	push	{fp, lr}
   2b814:	mov	fp, sp
   2b818:	sub	sp, sp, #32
   2b81c:	str	r0, [fp, #-4]
   2b820:	str	r1, [fp, #-8]
   2b824:	ldr	r0, [fp, #-4]
   2b828:	movw	r1, #40520	; 0x9e48
   2b82c:	movt	r1, #7
   2b830:	str	r0, [fp, #-12]
   2b834:	mov	r0, r1
   2b838:	bl	12864 <gettext@plt>
   2b83c:	ldr	r3, [fp, #-8]
   2b840:	ldr	r1, [fp, #-12]
   2b844:	str	r0, [sp, #16]
   2b848:	mov	r0, r1
   2b84c:	ldr	r1, [sp, #16]
   2b850:	movw	r2, #40726	; 0x9f16
   2b854:	movt	r2, #7
   2b858:	movw	ip, #40121	; 0x9cb9
   2b85c:	movt	ip, #7
   2b860:	str	ip, [sp]
   2b864:	movw	ip, #40765	; 0x9f3d
   2b868:	movt	ip, #7
   2b86c:	str	ip, [sp, #4]
   2b870:	movw	ip, #40812	; 0x9f6c
   2b874:	movt	ip, #7
   2b878:	str	ip, [sp, #8]
   2b87c:	bl	128c4 <fprintf@plt>
   2b880:	mov	sp, fp
   2b884:	pop	{fp, pc}
   2b888:	push	{fp, lr}
   2b88c:	mov	fp, sp
   2b890:	sub	sp, sp, #24
   2b894:	str	r0, [fp, #-4]
   2b898:	str	r1, [fp, #-8]
   2b89c:	ldr	r0, [fp, #-4]
   2b8a0:	ldr	r1, [fp, #-8]
   2b8a4:	movw	r2, #0
   2b8a8:	str	r2, [sp, #12]
   2b8ac:	ldr	r3, [sp, #12]
   2b8b0:	ldr	ip, [sp, #12]
   2b8b4:	str	ip, [sp]
   2b8b8:	movw	lr, #10220	; 0x27ec
   2b8bc:	movt	lr, #1
   2b8c0:	str	lr, [sp, #4]
   2b8c4:	bl	2bb68 <__assert_fail@plt+0x18fb0>
   2b8c8:	mov	sp, fp
   2b8cc:	pop	{fp, pc}
   2b8d0:	push	{fp, lr}
   2b8d4:	mov	fp, sp
   2b8d8:	sub	sp, sp, #16
   2b8dc:	str	r0, [sp, #8]
   2b8e0:	movw	r0, #24
   2b8e4:	bl	527f0 <__assert_fail@plt+0x3fc38>
   2b8e8:	str	r0, [sp, #4]
   2b8ec:	ldr	r0, [sp, #4]
   2b8f0:	movw	r1, #0
   2b8f4:	cmp	r0, r1
   2b8f8:	bne	2b908 <__assert_fail@plt+0x18d50>
   2b8fc:	movw	r0, #0
   2b900:	str	r0, [fp, #-4]
   2b904:	b	2b934 <__assert_fail@plt+0x18d7c>
   2b908:	ldr	r0, [sp, #4]
   2b90c:	movw	r1, #0
   2b910:	str	r1, [r0]
   2b914:	ldr	r0, [sp, #8]
   2b918:	ldr	r1, [sp, #4]
   2b91c:	str	r0, [r1, #16]
   2b920:	ldr	r0, [sp, #8]
   2b924:	ldr	r1, [sp, #4]
   2b928:	str	r0, [r1, #20]
   2b92c:	ldr	r0, [sp, #4]
   2b930:	str	r0, [fp, #-4]
   2b934:	ldr	r0, [fp, #-4]
   2b938:	mov	sp, fp
   2b93c:	pop	{fp, pc}
   2b940:	push	{fp, lr}
   2b944:	mov	fp, sp
   2b948:	sub	sp, sp, #16
   2b94c:	str	r0, [sp, #8]
   2b950:	movw	r0, #24
   2b954:	bl	527f0 <__assert_fail@plt+0x3fc38>
   2b958:	str	r0, [sp, #4]
   2b95c:	ldr	r0, [sp, #4]
   2b960:	movw	r1, #0
   2b964:	cmp	r0, r1
   2b968:	bne	2b978 <__assert_fail@plt+0x18dc0>
   2b96c:	movw	r0, #0
   2b970:	str	r0, [fp, #-4]
   2b974:	b	2b9b0 <__assert_fail@plt+0x18df8>
   2b978:	ldr	r0, [sp, #8]
   2b97c:	ldr	r1, [sp, #4]
   2b980:	str	r0, [r1]
   2b984:	ldr	r0, [sp, #4]
   2b988:	movw	r1, #0
   2b98c:	str	r1, [r0, #8]
   2b990:	ldr	r0, [sp, #4]
   2b994:	str	r1, [r0, #12]
   2b998:	ldr	r0, [sp, #4]
   2b99c:	str	r1, [r0, #4]
   2b9a0:	ldr	r0, [sp, #4]
   2b9a4:	str	r1, [r0, #16]
   2b9a8:	ldr	r0, [sp, #4]
   2b9ac:	str	r0, [fp, #-4]
   2b9b0:	ldr	r0, [fp, #-4]
   2b9b4:	mov	sp, fp
   2b9b8:	pop	{fp, pc}
   2b9bc:	push	{fp, lr}
   2b9c0:	mov	fp, sp
   2b9c4:	sub	sp, sp, #16
   2b9c8:	str	r0, [sp, #8]
   2b9cc:	str	r1, [sp, #4]
   2b9d0:	ldr	r0, [sp, #8]
   2b9d4:	ldr	r0, [r0]
   2b9d8:	movw	r1, #0
   2b9dc:	cmp	r0, r1
   2b9e0:	beq	2ba78 <__assert_fail@plt+0x18ec0>
   2b9e4:	ldr	r0, [sp, #8]
   2b9e8:	add	r0, r0, #8
   2b9ec:	ldr	r1, [sp, #8]
   2b9f0:	add	r1, r1, #12
   2b9f4:	ldr	r2, [sp, #8]
   2b9f8:	ldr	r3, [r2]
   2b9fc:	movw	r2, #0
   2ba00:	bl	12b10 <getdelim@plt>
   2ba04:	str	r0, [sp]
   2ba08:	ldr	r0, [sp]
   2ba0c:	cmp	r0, #0
   2ba10:	bge	2ba4c <__assert_fail@plt+0x18e94>
   2ba14:	ldr	r0, [sp, #8]
   2ba18:	ldr	r0, [r0]
   2ba1c:	bl	12858 <feof@plt>
   2ba20:	cmp	r0, #0
   2ba24:	movw	r0, #0
   2ba28:	movne	r0, #1
   2ba2c:	tst	r0, #1
   2ba30:	movw	r0, #2
   2ba34:	moveq	r0, #4
   2ba38:	ldr	r1, [sp, #4]
   2ba3c:	str	r0, [r1]
   2ba40:	movw	r0, #0
   2ba44:	str	r0, [fp, #-4]
   2ba48:	b	2bacc <__assert_fail@plt+0x18f14>
   2ba4c:	ldr	r0, [sp, #4]
   2ba50:	movw	r1, #1
   2ba54:	str	r1, [r0]
   2ba58:	ldr	r0, [sp, #8]
   2ba5c:	ldr	r1, [r0, #4]
   2ba60:	add	r1, r1, #1
   2ba64:	str	r1, [r0, #4]
   2ba68:	ldr	r0, [sp, #8]
   2ba6c:	ldr	r0, [r0, #8]
   2ba70:	str	r0, [fp, #-4]
   2ba74:	b	2bacc <__assert_fail@plt+0x18f14>
   2ba78:	ldr	r0, [sp, #8]
   2ba7c:	ldr	r0, [r0, #20]
   2ba80:	ldr	r0, [r0]
   2ba84:	movw	r1, #0
   2ba88:	cmp	r0, r1
   2ba8c:	bne	2baa8 <__assert_fail@plt+0x18ef0>
   2ba90:	ldr	r0, [sp, #4]
   2ba94:	movw	r1, #2
   2ba98:	str	r1, [r0]
   2ba9c:	movw	r0, #0
   2baa0:	str	r0, [fp, #-4]
   2baa4:	b	2bacc <__assert_fail@plt+0x18f14>
   2baa8:	ldr	r0, [sp, #4]
   2baac:	movw	r1, #1
   2bab0:	str	r1, [r0]
   2bab4:	ldr	r0, [sp, #8]
   2bab8:	ldr	r1, [r0, #20]
   2babc:	add	r2, r1, #4
   2bac0:	str	r2, [r0, #20]
   2bac4:	ldr	r0, [r1]
   2bac8:	str	r0, [fp, #-4]
   2bacc:	ldr	r0, [fp, #-4]
   2bad0:	mov	sp, fp
   2bad4:	pop	{fp, pc}
   2bad8:	sub	sp, sp, #8
   2badc:	str	r0, [sp, #4]
   2bae0:	ldr	r0, [sp, #4]
   2bae4:	ldr	r0, [r0]
   2bae8:	movw	r1, #0
   2baec:	cmp	r0, r1
   2baf0:	beq	2bb04 <__assert_fail@plt+0x18f4c>
   2baf4:	ldr	r0, [sp, #4]
   2baf8:	ldr	r0, [r0, #4]
   2bafc:	str	r0, [sp]
   2bb00:	b	2bb1c <__assert_fail@plt+0x18f64>
   2bb04:	ldr	r0, [sp, #4]
   2bb08:	ldr	r1, [r0, #16]
   2bb0c:	ldr	r0, [r0, #20]
   2bb10:	sub	r0, r0, r1
   2bb14:	asr	r0, r0, #2
   2bb18:	str	r0, [sp]
   2bb1c:	ldr	r0, [sp]
   2bb20:	add	sp, sp, #8
   2bb24:	bx	lr
   2bb28:	push	{fp, lr}
   2bb2c:	mov	fp, sp
   2bb30:	sub	sp, sp, #8
   2bb34:	str	r0, [sp, #4]
   2bb38:	ldr	r0, [sp, #4]
   2bb3c:	ldr	r0, [r0]
   2bb40:	movw	r1, #0
   2bb44:	cmp	r0, r1
   2bb48:	beq	2bb58 <__assert_fail@plt+0x18fa0>
   2bb4c:	ldr	r0, [sp, #4]
   2bb50:	ldr	r0, [r0, #8]
   2bb54:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   2bb58:	ldr	r0, [sp, #4]
   2bb5c:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   2bb60:	mov	sp, fp
   2bb64:	pop	{fp, pc}
   2bb68:	push	{r4, r5, r6, sl, fp, lr}
   2bb6c:	add	fp, sp, #16
   2bb70:	sub	sp, sp, #40	; 0x28
   2bb74:	sub	sp, sp, #1024	; 0x400
   2bb78:	ldr	ip, [fp, #12]
   2bb7c:	ldr	lr, [fp, #8]
   2bb80:	add	r4, sp, #24
   2bb84:	str	r0, [fp, #-20]	; 0xffffffec
   2bb88:	str	r1, [fp, #-24]	; 0xffffffe8
   2bb8c:	str	r2, [fp, #-28]	; 0xffffffe4
   2bb90:	str	r3, [fp, #-32]	; 0xffffffe0
   2bb94:	ldr	r0, [fp, #-20]	; 0xffffffec
   2bb98:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2bb9c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2bba0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2bba4:	ldr	r5, [fp, #8]
   2bba8:	ldr	r6, [fp, #12]
   2bbac:	str	r5, [sp]
   2bbb0:	str	r6, [sp, #4]
   2bbb4:	str	r4, [sp, #8]
   2bbb8:	str	ip, [sp, #20]
   2bbbc:	str	lr, [sp, #16]
   2bbc0:	bl	2bbcc <__assert_fail@plt+0x19014>
   2bbc4:	sub	sp, fp, #16
   2bbc8:	pop	{r4, r5, r6, sl, fp, pc}
   2bbcc:	push	{r4, sl, fp, lr}
   2bbd0:	add	fp, sp, #8
   2bbd4:	sub	sp, sp, #96	; 0x60
   2bbd8:	ldr	ip, [fp, #16]
   2bbdc:	ldr	lr, [fp, #12]
   2bbe0:	ldr	r4, [fp, #8]
   2bbe4:	str	r0, [fp, #-16]
   2bbe8:	str	r1, [fp, #-20]	; 0xffffffec
   2bbec:	str	r2, [fp, #-24]	; 0xffffffe8
   2bbf0:	str	r3, [fp, #-28]	; 0xffffffe4
   2bbf4:	ldr	r0, [fp, #8]
   2bbf8:	movw	r1, #0
   2bbfc:	cmp	r0, r1
   2bc00:	bne	2bc10 <__assert_fail@plt+0x19058>
   2bc04:	movw	r0, #50040	; 0xc378
   2bc08:	movt	r0, #7
   2bc0c:	str	r0, [fp, #8]
   2bc10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2bc14:	movw	r1, #0
   2bc18:	cmp	r0, r1
   2bc1c:	bne	2bc30 <__assert_fail@plt+0x19078>
   2bc20:	ldr	r0, [fp, #16]
   2bc24:	str	r0, [fp, #-24]	; 0xffffffe8
   2bc28:	movw	r0, #1024	; 0x400
   2bc2c:	str	r0, [fp, #-28]	; 0xffffffe4
   2bc30:	ldr	r0, [pc, #740]	; 2bf1c <__assert_fail@plt+0x19364>
   2bc34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2bc38:	str	r1, [fp, #-32]	; 0xffffffe0
   2bc3c:	str	r0, [fp, #-36]	; 0xffffffdc
   2bc40:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2bc44:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2bc48:	cmp	r0, r1
   2bc4c:	bcs	2bc5c <__assert_fail@plt+0x190a4>
   2bc50:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2bc54:	str	r0, [sp, #40]	; 0x28
   2bc58:	b	2bc64 <__assert_fail@plt+0x190ac>
   2bc5c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2bc60:	str	r0, [sp, #40]	; 0x28
   2bc64:	ldr	r0, [sp, #40]	; 0x28
   2bc68:	str	r0, [fp, #-40]	; 0xffffffd8
   2bc6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2bc70:	movw	r1, #0
   2bc74:	cmp	r0, r1
   2bc78:	beq	2becc <__assert_fail@plt+0x19314>
   2bc7c:	ldr	r0, [fp, #12]
   2bc80:	ldr	r1, [fp, #-16]
   2bc84:	ldr	r2, [fp, #-20]	; 0xffffffec
   2bc88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2bc8c:	ldr	ip, [fp, #-40]	; 0xffffffd8
   2bc90:	str	r0, [sp, #36]	; 0x24
   2bc94:	mov	r0, r1
   2bc98:	mov	r1, r2
   2bc9c:	mov	r2, r3
   2bca0:	mov	r3, ip
   2bca4:	ldr	ip, [sp, #36]	; 0x24
   2bca8:	blx	ip
   2bcac:	str	r0, [fp, #-44]	; 0xffffffd4
   2bcb0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2bcb4:	cmp	r0, #0
   2bcb8:	bge	2bd14 <__assert_fail@plt+0x1915c>
   2bcbc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2bcc0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2bcc4:	cmp	r0, r1
   2bcc8:	beq	2bd08 <__assert_fail@plt+0x19150>
   2bccc:	bl	128d0 <__errno_location@plt>
   2bcd0:	ldr	r0, [r0]
   2bcd4:	str	r0, [fp, #-48]	; 0xffffffd0
   2bcd8:	ldr	r0, [fp, #8]
   2bcdc:	ldr	r0, [r0, #8]
   2bce0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2bce4:	str	r0, [sp, #32]
   2bce8:	mov	r0, r1
   2bcec:	ldr	r1, [sp, #32]
   2bcf0:	blx	r1
   2bcf4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2bcf8:	str	r0, [sp, #28]
   2bcfc:	bl	128d0 <__errno_location@plt>
   2bd00:	ldr	r1, [sp, #28]
   2bd04:	str	r1, [r0]
   2bd08:	movw	r0, #0
   2bd0c:	str	r0, [fp, #-12]
   2bd10:	b	2bf10 <__assert_fail@plt+0x19358>
   2bd14:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2bd18:	str	r0, [sp, #52]	; 0x34
   2bd1c:	ldr	r0, [sp, #52]	; 0x34
   2bd20:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2bd24:	cmp	r0, r1
   2bd28:	bge	2be3c <__assert_fail@plt+0x19284>
   2bd2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2bd30:	ldr	r1, [sp, #52]	; 0x34
   2bd34:	add	r2, r1, #1
   2bd38:	str	r2, [sp, #52]	; 0x34
   2bd3c:	add	r0, r0, r1
   2bd40:	movw	r1, #0
   2bd44:	strb	r1, [r0]
   2bd48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2bd4c:	ldr	r1, [fp, #16]
   2bd50:	cmp	r0, r1
   2bd54:	bne	2bdb4 <__assert_fail@plt+0x191fc>
   2bd58:	ldr	r0, [fp, #8]
   2bd5c:	ldr	r0, [r0]
   2bd60:	ldr	r1, [sp, #52]	; 0x34
   2bd64:	str	r0, [sp, #24]
   2bd68:	mov	r0, r1
   2bd6c:	ldr	r1, [sp, #24]
   2bd70:	blx	r1
   2bd74:	str	r0, [sp, #48]	; 0x30
   2bd78:	ldr	r0, [sp, #52]	; 0x34
   2bd7c:	str	r0, [fp, #-40]	; 0xffffffd8
   2bd80:	ldr	r0, [sp, #48]	; 0x30
   2bd84:	movw	r1, #0
   2bd88:	cmp	r0, r1
   2bd8c:	bne	2bd94 <__assert_fail@plt+0x191dc>
   2bd90:	b	2becc <__assert_fail@plt+0x19314>
   2bd94:	ldr	r0, [sp, #48]	; 0x30
   2bd98:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2bd9c:	ldr	r2, [sp, #52]	; 0x34
   2bda0:	str	r0, [sp, #20]
   2bda4:	bl	125c4 <memcpy@plt>
   2bda8:	ldr	r0, [sp, #20]
   2bdac:	str	r0, [fp, #-12]
   2bdb0:	b	2bf10 <__assert_fail@plt+0x19358>
   2bdb4:	ldr	r0, [sp, #52]	; 0x34
   2bdb8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2bdbc:	cmp	r0, r1
   2bdc0:	bge	2be30 <__assert_fail@plt+0x19278>
   2bdc4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2bdc8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2bdcc:	cmp	r0, r1
   2bdd0:	beq	2be30 <__assert_fail@plt+0x19278>
   2bdd4:	ldr	r0, [fp, #8]
   2bdd8:	ldr	r0, [r0, #4]
   2bddc:	movw	r1, #0
   2bde0:	cmp	r0, r1
   2bde4:	beq	2be30 <__assert_fail@plt+0x19278>
   2bde8:	ldr	r0, [fp, #8]
   2bdec:	ldr	r0, [r0, #4]
   2bdf0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2bdf4:	ldr	r2, [sp, #52]	; 0x34
   2bdf8:	str	r0, [sp, #16]
   2bdfc:	mov	r0, r1
   2be00:	mov	r1, r2
   2be04:	ldr	r2, [sp, #16]
   2be08:	blx	r2
   2be0c:	str	r0, [sp, #44]	; 0x2c
   2be10:	ldr	r0, [sp, #44]	; 0x2c
   2be14:	movw	r1, #0
   2be18:	cmp	r0, r1
   2be1c:	beq	2be2c <__assert_fail@plt+0x19274>
   2be20:	ldr	r0, [sp, #44]	; 0x2c
   2be24:	str	r0, [fp, #-12]
   2be28:	b	2bf10 <__assert_fail@plt+0x19358>
   2be2c:	b	2be30 <__assert_fail@plt+0x19278>
   2be30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2be34:	str	r0, [fp, #-12]
   2be38:	b	2bf10 <__assert_fail@plt+0x19358>
   2be3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2be40:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2be44:	cmp	r0, r1
   2be48:	beq	2be68 <__assert_fail@plt+0x192b0>
   2be4c:	ldr	r0, [fp, #8]
   2be50:	ldr	r0, [r0, #8]
   2be54:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2be58:	str	r0, [sp, #12]
   2be5c:	mov	r0, r1
   2be60:	ldr	r1, [sp, #12]
   2be64:	blx	r1
   2be68:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2be6c:	movw	r1, #2
   2be70:	sdiv	r0, r0, r1
   2be74:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2be78:	cmp	r0, r1
   2be7c:	bgt	2be98 <__assert_fail@plt+0x192e0>
   2be80:	bl	128d0 <__errno_location@plt>
   2be84:	movw	r1, #36	; 0x24
   2be88:	str	r1, [r0]
   2be8c:	movw	r0, #0
   2be90:	str	r0, [fp, #-12]
   2be94:	b	2bf10 <__assert_fail@plt+0x19358>
   2be98:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2be9c:	lsl	r0, r0, #1
   2bea0:	add	r0, r0, #1
   2bea4:	str	r0, [fp, #-40]	; 0xffffffd8
   2bea8:	ldr	r0, [fp, #8]
   2beac:	ldr	r0, [r0]
   2beb0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2beb4:	str	r0, [sp, #8]
   2beb8:	mov	r0, r1
   2bebc:	ldr	r1, [sp, #8]
   2bec0:	blx	r1
   2bec4:	str	r0, [fp, #-32]	; 0xffffffe0
   2bec8:	b	2bc6c <__assert_fail@plt+0x190b4>
   2becc:	ldr	r0, [fp, #8]
   2bed0:	ldr	r0, [r0, #12]
   2bed4:	movw	r1, #0
   2bed8:	cmp	r0, r1
   2bedc:	beq	2befc <__assert_fail@plt+0x19344>
   2bee0:	ldr	r0, [fp, #8]
   2bee4:	ldr	r0, [r0, #12]
   2bee8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2beec:	str	r0, [sp, #4]
   2bef0:	mov	r0, r1
   2bef4:	ldr	r1, [sp, #4]
   2bef8:	blx	r1
   2befc:	bl	128d0 <__errno_location@plt>
   2bf00:	movw	r1, #12
   2bf04:	str	r1, [r0]
   2bf08:	movw	r0, #0
   2bf0c:	str	r0, [fp, #-12]
   2bf10:	ldr	r0, [fp, #-12]
   2bf14:	sub	sp, fp, #8
   2bf18:	pop	{r4, sl, fp, pc}
   2bf1c:	svcvc	0x00ffffff
   2bf20:	push	{fp, lr}
   2bf24:	mov	fp, sp
   2bf28:	sub	sp, sp, #24
   2bf2c:	str	r0, [fp, #-8]
   2bf30:	and	r0, r1, #1
   2bf34:	strb	r0, [fp, #-9]
   2bf38:	ldr	r0, [fp, #-8]
   2bf3c:	movw	r1, #1
   2bf40:	movw	r2, #0
   2bf44:	bl	4e678 <__assert_fail@plt+0x3bac0>
   2bf48:	str	r0, [sp, #8]
   2bf4c:	ldr	r0, [sp, #8]
   2bf50:	movw	r1, #0
   2bf54:	cmp	r1, r0
   2bf58:	bgt	2bfc8 <__assert_fail@plt+0x19410>
   2bf5c:	ldrb	r0, [fp, #-9]
   2bf60:	tst	r0, #1
   2bf64:	beq	2bf78 <__assert_fail@plt+0x193c0>
   2bf68:	ldr	r0, [sp, #8]
   2bf6c:	orr	r0, r0, #1
   2bf70:	str	r0, [sp]
   2bf74:	b	2bf88 <__assert_fail@plt+0x193d0>
   2bf78:	ldr	r0, [sp, #8]
   2bf7c:	mvn	r1, #1
   2bf80:	and	r0, r0, r1
   2bf84:	str	r0, [sp]
   2bf88:	ldr	r0, [sp]
   2bf8c:	str	r0, [sp, #4]
   2bf90:	ldr	r0, [sp, #8]
   2bf94:	ldr	r1, [sp, #4]
   2bf98:	cmp	r0, r1
   2bf9c:	beq	2bfb8 <__assert_fail@plt+0x19400>
   2bfa0:	ldr	r0, [fp, #-8]
   2bfa4:	ldr	r2, [sp, #4]
   2bfa8:	movw	r1, #2
   2bfac:	bl	4e678 <__assert_fail@plt+0x3bac0>
   2bfb0:	cmn	r0, #1
   2bfb4:	beq	2bfc4 <__assert_fail@plt+0x1940c>
   2bfb8:	movw	r0, #0
   2bfbc:	str	r0, [fp, #-4]
   2bfc0:	b	2bfd0 <__assert_fail@plt+0x19418>
   2bfc4:	b	2bfc8 <__assert_fail@plt+0x19410>
   2bfc8:	mvn	r0, #0
   2bfcc:	str	r0, [fp, #-4]
   2bfd0:	ldr	r0, [fp, #-4]
   2bfd4:	mov	sp, fp
   2bfd8:	pop	{fp, pc}
   2bfdc:	push	{fp, lr}
   2bfe0:	mov	fp, sp
   2bfe4:	sub	sp, sp, #8
   2bfe8:	str	r0, [sp, #4]
   2bfec:	ldr	r0, [sp, #4]
   2bff0:	movw	r1, #1030	; 0x406
   2bff4:	movw	r2, #0
   2bff8:	bl	4e678 <__assert_fail@plt+0x3bac0>
   2bffc:	mov	sp, fp
   2c000:	pop	{fp, pc}
   2c004:	sub	sp, sp, #4
   2c008:	str	r0, [sp]
   2c00c:	ldr	r0, [sp]
   2c010:	movw	r1, #57036	; 0xdecc
   2c014:	movt	r1, #8
   2c018:	str	r0, [r1]
   2c01c:	add	sp, sp, #4
   2c020:	bx	lr
   2c024:	sub	sp, sp, #4
   2c028:	and	r0, r0, #1
   2c02c:	strb	r0, [sp, #3]
   2c030:	ldrb	r0, [sp, #3]
   2c034:	and	r0, r0, #1
   2c038:	movw	r1, #57040	; 0xded0
   2c03c:	movt	r1, #8
   2c040:	strb	r0, [r1]
   2c044:	add	sp, sp, #4
   2c048:	bx	lr
   2c04c:	push	{fp, lr}
   2c050:	mov	fp, sp
   2c054:	sub	sp, sp, #24
   2c058:	movw	r0, #55092	; 0xd734
   2c05c:	movt	r0, #8
   2c060:	ldr	r0, [r0]
   2c064:	bl	6f3e0 <__assert_fail@plt+0x5c828>
   2c068:	cmp	r0, #0
   2c06c:	beq	2c13c <__assert_fail@plt+0x19584>
   2c070:	movw	r0, #57040	; 0xded0
   2c074:	movt	r0, #8
   2c078:	ldrb	r0, [r0]
   2c07c:	tst	r0, #1
   2c080:	beq	2c094 <__assert_fail@plt+0x194dc>
   2c084:	bl	128d0 <__errno_location@plt>
   2c088:	ldr	r0, [r0]
   2c08c:	cmp	r0, #32
   2c090:	beq	2c13c <__assert_fail@plt+0x19584>
   2c094:	movw	r0, #40834	; 0x9f82
   2c098:	movt	r0, #7
   2c09c:	bl	12864 <gettext@plt>
   2c0a0:	str	r0, [fp, #-4]
   2c0a4:	movw	r0, #57036	; 0xdecc
   2c0a8:	movt	r0, #8
   2c0ac:	ldr	r0, [r0]
   2c0b0:	movw	r1, #0
   2c0b4:	cmp	r0, r1
   2c0b8:	beq	2c110 <__assert_fail@plt+0x19558>
   2c0bc:	bl	128d0 <__errno_location@plt>
   2c0c0:	ldr	r1, [r0]
   2c0c4:	movw	r0, #57036	; 0xdecc
   2c0c8:	movt	r0, #8
   2c0cc:	ldr	r0, [r0]
   2c0d0:	str	r1, [fp, #-8]
   2c0d4:	bl	489a0 <__assert_fail@plt+0x35de8>
   2c0d8:	ldr	r1, [fp, #-4]
   2c0dc:	movw	r2, #0
   2c0e0:	str	r0, [sp, #12]
   2c0e4:	mov	r0, r2
   2c0e8:	ldr	r2, [fp, #-8]
   2c0ec:	str	r1, [sp, #8]
   2c0f0:	mov	r1, r2
   2c0f4:	movw	r2, #40846	; 0x9f8e
   2c0f8:	movt	r2, #7
   2c0fc:	ldr	r3, [sp, #12]
   2c100:	ldr	ip, [sp, #8]
   2c104:	str	ip, [sp]
   2c108:	bl	12780 <error@plt>
   2c10c:	b	2c12c <__assert_fail@plt+0x19574>
   2c110:	bl	128d0 <__errno_location@plt>
   2c114:	ldr	r1, [r0]
   2c118:	ldr	r3, [fp, #-4]
   2c11c:	movw	r0, #0
   2c120:	movw	r2, #50143	; 0xc3df
   2c124:	movt	r2, #7
   2c128:	bl	12780 <error@plt>
   2c12c:	movw	r0, #54988	; 0xd6cc
   2c130:	movt	r0, #8
   2c134:	ldr	r0, [r0]
   2c138:	bl	125b8 <_exit@plt>
   2c13c:	movw	r0, #55080	; 0xd728
   2c140:	movt	r0, #8
   2c144:	ldr	r0, [r0]
   2c148:	bl	6f3e0 <__assert_fail@plt+0x5c828>
   2c14c:	cmp	r0, #0
   2c150:	beq	2c164 <__assert_fail@plt+0x195ac>
   2c154:	movw	r0, #54988	; 0xd6cc
   2c158:	movt	r0, #8
   2c15c:	ldr	r0, [r0]
   2c160:	bl	125b8 <_exit@plt>
   2c164:	mov	sp, fp
   2c168:	pop	{fp, pc}
   2c16c:	push	{fp, lr}
   2c170:	mov	fp, sp
   2c174:	sub	sp, sp, #32
   2c178:	str	r0, [fp, #-4]
   2c17c:	ldr	r0, [fp, #-4]
   2c180:	bl	12798 <opendir@plt>
   2c184:	str	r0, [fp, #-8]
   2c188:	ldr	r0, [fp, #-8]
   2c18c:	movw	r1, #0
   2c190:	cmp	r0, r1
   2c194:	beq	2c258 <__assert_fail@plt+0x196a0>
   2c198:	ldr	r0, [fp, #-8]
   2c19c:	bl	12a98 <dirfd@plt>
   2c1a0:	str	r0, [fp, #-12]
   2c1a4:	ldr	r0, [fp, #-12]
   2c1a8:	movw	r1, #0
   2c1ac:	cmp	r1, r0
   2c1b0:	bgt	2c254 <__assert_fail@plt+0x1969c>
   2c1b4:	ldr	r0, [fp, #-12]
   2c1b8:	cmp	r0, #2
   2c1bc:	bgt	2c254 <__assert_fail@plt+0x1969c>
   2c1c0:	ldr	r0, [fp, #-12]
   2c1c4:	movw	r1, #1030	; 0x406
   2c1c8:	movw	r2, #3
   2c1cc:	bl	4e678 <__assert_fail@plt+0x3bac0>
   2c1d0:	str	r0, [sp, #8]
   2c1d4:	ldr	r0, [sp, #8]
   2c1d8:	cmp	r0, #0
   2c1dc:	bge	2c1f8 <__assert_fail@plt+0x19640>
   2c1e0:	bl	128d0 <__errno_location@plt>
   2c1e4:	ldr	r0, [r0]
   2c1e8:	str	r0, [sp, #12]
   2c1ec:	movw	r0, #0
   2c1f0:	str	r0, [sp, #16]
   2c1f4:	b	2c22c <__assert_fail@plt+0x19674>
   2c1f8:	ldr	r0, [sp, #8]
   2c1fc:	bl	12a74 <fdopendir@plt>
   2c200:	str	r0, [sp, #16]
   2c204:	bl	128d0 <__errno_location@plt>
   2c208:	ldr	r0, [r0]
   2c20c:	str	r0, [sp, #12]
   2c210:	ldr	r0, [sp, #16]
   2c214:	movw	r1, #0
   2c218:	cmp	r0, r1
   2c21c:	bne	2c228 <__assert_fail@plt+0x19670>
   2c220:	ldr	r0, [sp, #8]
   2c224:	bl	12b70 <close@plt>
   2c228:	b	2c22c <__assert_fail@plt+0x19674>
   2c22c:	ldr	r0, [fp, #-8]
   2c230:	bl	12b88 <closedir@plt>
   2c234:	ldr	r1, [sp, #12]
   2c238:	str	r0, [sp, #4]
   2c23c:	str	r1, [sp]
   2c240:	bl	128d0 <__errno_location@plt>
   2c244:	ldr	r1, [sp]
   2c248:	str	r1, [r0]
   2c24c:	ldr	r0, [sp, #16]
   2c250:	str	r0, [fp, #-8]
   2c254:	b	2c258 <__assert_fail@plt+0x196a0>
   2c258:	ldr	r0, [fp, #-8]
   2c25c:	mov	sp, fp
   2c260:	pop	{fp, pc}
   2c264:	push	{fp, lr}
   2c268:	mov	fp, sp
   2c26c:	sub	sp, sp, #24
   2c270:	str	r0, [fp, #-4]
   2c274:	ldr	r0, [fp, #-4]
   2c278:	bl	6e8cc <__assert_fail@plt+0x5bd14>
   2c27c:	str	r0, [fp, #-8]
   2c280:	ldr	r0, [fp, #-8]
   2c284:	ldrsb	r0, [r0]
   2c288:	cmp	r0, #0
   2c28c:	beq	2c2d4 <__assert_fail@plt+0x1971c>
   2c290:	ldr	r0, [fp, #-8]
   2c294:	bl	6e978 <__assert_fail@plt+0x5bdc0>
   2c298:	str	r0, [sp, #12]
   2c29c:	ldr	r0, [fp, #-8]
   2c2a0:	ldr	r1, [sp, #12]
   2c2a4:	add	r0, r0, r1
   2c2a8:	ldrb	r0, [r0]
   2c2ac:	cmp	r0, #47	; 0x2f
   2c2b0:	movw	r0, #0
   2c2b4:	moveq	r0, #1
   2c2b8:	and	r0, r0, #1
   2c2bc:	ldr	r1, [sp, #12]
   2c2c0:	add	r0, r1, r0
   2c2c4:	str	r0, [sp, #12]
   2c2c8:	movw	r0, #0
   2c2cc:	str	r0, [sp, #8]
   2c2d0:	b	2c2f0 <__assert_fail@plt+0x19738>
   2c2d4:	ldr	r0, [fp, #-4]
   2c2d8:	str	r0, [fp, #-8]
   2c2dc:	ldr	r0, [fp, #-8]
   2c2e0:	bl	6e978 <__assert_fail@plt+0x5bdc0>
   2c2e4:	str	r0, [sp, #12]
   2c2e8:	movw	r0, #0
   2c2ec:	str	r0, [sp, #8]
   2c2f0:	ldr	r0, [sp, #8]
   2c2f4:	ldr	r1, [sp, #12]
   2c2f8:	add	r0, r0, r1
   2c2fc:	add	r0, r0, #1
   2c300:	bl	4a344 <__assert_fail@plt+0x3778c>
   2c304:	str	r0, [sp, #4]
   2c308:	ldr	r0, [sp, #8]
   2c30c:	cmp	r0, #0
   2c310:	beq	2c32c <__assert_fail@plt+0x19774>
   2c314:	ldr	r0, [sp, #4]
   2c318:	movw	r1, #46	; 0x2e
   2c31c:	strb	r1, [r0]
   2c320:	ldr	r0, [sp, #4]
   2c324:	movw	r1, #47	; 0x2f
   2c328:	strb	r1, [r0, #1]
   2c32c:	ldr	r0, [sp, #4]
   2c330:	ldr	r1, [sp, #8]
   2c334:	add	r0, r0, r1
   2c338:	ldr	r1, [fp, #-8]
   2c33c:	ldr	r2, [sp, #12]
   2c340:	bl	125c4 <memcpy@plt>
   2c344:	ldr	r0, [sp, #4]
   2c348:	ldr	r1, [sp, #8]
   2c34c:	ldr	r2, [sp, #12]
   2c350:	add	r1, r1, r2
   2c354:	add	r0, r0, r1
   2c358:	movw	r1, #0
   2c35c:	strb	r1, [r0]
   2c360:	ldr	r0, [sp, #4]
   2c364:	mov	sp, fp
   2c368:	pop	{fp, pc}
   2c36c:	push	{fp, lr}
   2c370:	mov	fp, sp
   2c374:	sub	sp, sp, #16
   2c378:	str	r0, [fp, #-4]
   2c37c:	movw	r0, #0
   2c380:	str	r0, [sp, #8]
   2c384:	ldr	r0, [sp, #8]
   2c388:	cmp	r0, #0
   2c38c:	beq	2c39c <__assert_fail@plt+0x197e4>
   2c390:	movw	r0, #0
   2c394:	str	r0, [sp]
   2c398:	b	2c3c0 <__assert_fail@plt+0x19808>
   2c39c:	ldr	r0, [fp, #-4]
   2c3a0:	ldrb	r0, [r0]
   2c3a4:	cmp	r0, #47	; 0x2f
   2c3a8:	movw	r0, #0
   2c3ac:	moveq	r0, #1
   2c3b0:	tst	r0, #1
   2c3b4:	movw	r0, #1
   2c3b8:	moveq	r0, #0
   2c3bc:	str	r0, [sp]
   2c3c0:	ldr	r0, [sp]
   2c3c4:	ldr	r1, [sp, #8]
   2c3c8:	add	r0, r1, r0
   2c3cc:	str	r0, [sp, #8]
   2c3d0:	ldr	r0, [fp, #-4]
   2c3d4:	bl	6e8cc <__assert_fail@plt+0x5bd14>
   2c3d8:	ldr	r1, [fp, #-4]
   2c3dc:	sub	r0, r0, r1
   2c3e0:	str	r0, [sp, #4]
   2c3e4:	ldr	r0, [sp, #8]
   2c3e8:	ldr	r1, [sp, #4]
   2c3ec:	cmp	r0, r1
   2c3f0:	bcs	2c42c <__assert_fail@plt+0x19874>
   2c3f4:	ldr	r0, [fp, #-4]
   2c3f8:	ldr	r1, [sp, #4]
   2c3fc:	sub	r1, r1, #1
   2c400:	add	r0, r0, r1
   2c404:	ldrb	r0, [r0]
   2c408:	cmp	r0, #47	; 0x2f
   2c40c:	beq	2c414 <__assert_fail@plt+0x1985c>
   2c410:	b	2c42c <__assert_fail@plt+0x19874>
   2c414:	b	2c418 <__assert_fail@plt+0x19860>
   2c418:	ldr	r0, [sp, #4]
   2c41c:	mvn	r1, #0
   2c420:	add	r0, r0, r1
   2c424:	str	r0, [sp, #4]
   2c428:	b	2c3e4 <__assert_fail@plt+0x1982c>
   2c42c:	ldr	r0, [sp, #4]
   2c430:	mov	sp, fp
   2c434:	pop	{fp, pc}
   2c438:	push	{fp, lr}
   2c43c:	mov	fp, sp
   2c440:	sub	sp, sp, #24
   2c444:	str	r0, [fp, #-8]
   2c448:	ldr	r0, [fp, #-8]
   2c44c:	bl	2c36c <__assert_fail@plt+0x197b4>
   2c450:	str	r0, [sp, #12]
   2c454:	ldr	r0, [sp, #12]
   2c458:	cmp	r0, #0
   2c45c:	movw	r0, #1
   2c460:	str	r0, [sp]
   2c464:	beq	2c474 <__assert_fail@plt+0x198bc>
   2c468:	movw	r0, #0
   2c46c:	str	r0, [sp]
   2c470:	b	2c474 <__assert_fail@plt+0x198bc>
   2c474:	ldr	r0, [sp]
   2c478:	and	r0, r0, #1
   2c47c:	strb	r0, [sp, #11]
   2c480:	ldr	r0, [sp, #12]
   2c484:	ldrb	r1, [sp, #11]
   2c488:	and	r1, r1, #1
   2c48c:	add	r0, r0, r1
   2c490:	add	r0, r0, #1
   2c494:	bl	527f0 <__assert_fail@plt+0x3fc38>
   2c498:	str	r0, [sp, #4]
   2c49c:	ldr	r0, [sp, #4]
   2c4a0:	movw	r1, #0
   2c4a4:	cmp	r0, r1
   2c4a8:	bne	2c4b8 <__assert_fail@plt+0x19900>
   2c4ac:	movw	r0, #0
   2c4b0:	str	r0, [fp, #-4]
   2c4b4:	b	2c50c <__assert_fail@plt+0x19954>
   2c4b8:	ldr	r0, [sp, #4]
   2c4bc:	ldr	r1, [fp, #-8]
   2c4c0:	ldr	r2, [sp, #12]
   2c4c4:	bl	125c4 <memcpy@plt>
   2c4c8:	ldrb	r0, [sp, #11]
   2c4cc:	tst	r0, #1
   2c4d0:	beq	2c4f0 <__assert_fail@plt+0x19938>
   2c4d4:	ldr	r0, [sp, #4]
   2c4d8:	ldr	r1, [sp, #12]
   2c4dc:	add	r2, r1, #1
   2c4e0:	str	r2, [sp, #12]
   2c4e4:	add	r0, r0, r1
   2c4e8:	movw	r1, #46	; 0x2e
   2c4ec:	strb	r1, [r0]
   2c4f0:	ldr	r0, [sp, #4]
   2c4f4:	ldr	r1, [sp, #12]
   2c4f8:	add	r0, r0, r1
   2c4fc:	movw	r1, #0
   2c500:	strb	r1, [r0]
   2c504:	ldr	r0, [sp, #4]
   2c508:	str	r0, [fp, #-4]
   2c50c:	ldr	r0, [fp, #-4]
   2c510:	mov	sp, fp
   2c514:	pop	{fp, pc}
   2c518:	push	{fp, lr}
   2c51c:	mov	fp, sp
   2c520:	sub	sp, sp, #24
   2c524:	str	r0, [fp, #-4]
   2c528:	ldr	r0, [fp, #-4]
   2c52c:	bl	6e8cc <__assert_fail@plt+0x5bd14>
   2c530:	str	r0, [fp, #-8]
   2c534:	ldr	r0, [fp, #-8]
   2c538:	ldrsb	r0, [r0]
   2c53c:	cmp	r0, #0
   2c540:	bne	2c54c <__assert_fail@plt+0x19994>
   2c544:	ldr	r0, [fp, #-4]
   2c548:	str	r0, [fp, #-8]
   2c54c:	ldr	r0, [fp, #-8]
   2c550:	ldr	r1, [fp, #-8]
   2c554:	str	r0, [sp, #4]
   2c558:	mov	r0, r1
   2c55c:	bl	6e978 <__assert_fail@plt+0x5bdc0>
   2c560:	ldr	r1, [sp, #4]
   2c564:	add	r0, r1, r0
   2c568:	str	r0, [sp, #12]
   2c56c:	ldr	r0, [sp, #12]
   2c570:	ldrb	r0, [r0]
   2c574:	cmp	r0, #0
   2c578:	movw	r0, #0
   2c57c:	movne	r0, #1
   2c580:	and	r0, r0, #1
   2c584:	strb	r0, [sp, #11]
   2c588:	ldr	r0, [sp, #12]
   2c58c:	movw	r1, #0
   2c590:	strb	r1, [r0]
   2c594:	ldrb	r0, [sp, #11]
   2c598:	and	r0, r0, #1
   2c59c:	mov	sp, fp
   2c5a0:	pop	{fp, pc}
   2c5a4:	sub	sp, sp, #8
   2c5a8:	push	{fp, lr}
   2c5ac:	mov	fp, sp
   2c5b0:	sub	sp, sp, #16
   2c5b4:	str	r3, [fp, #12]
   2c5b8:	str	r2, [fp, #8]
   2c5bc:	str	r0, [fp, #-4]
   2c5c0:	str	r1, [sp, #8]
   2c5c4:	movw	r0, #0
   2c5c8:	str	r0, [sp, #4]
   2c5cc:	ldr	r0, [sp, #8]
   2c5d0:	and	r0, r0, #64	; 0x40
   2c5d4:	cmp	r0, #0
   2c5d8:	beq	2c600 <__assert_fail@plt+0x19a48>
   2c5dc:	mov	r0, sp
   2c5e0:	mov	r1, r0
   2c5e4:	add	r2, fp, #8
   2c5e8:	str	r2, [r1]
   2c5ec:	ldr	r1, [sp]
   2c5f0:	add	r2, r1, #4
   2c5f4:	str	r2, [sp]
   2c5f8:	ldr	r1, [r1]
   2c5fc:	str	r1, [sp, #4]
   2c600:	ldr	r0, [fp, #-4]
   2c604:	ldr	r1, [sp, #8]
   2c608:	ldr	r2, [sp, #4]
   2c60c:	bl	127b0 <open64@plt>
   2c610:	bl	499ac <__assert_fail@plt+0x36df4>
   2c614:	mov	sp, fp
   2c618:	pop	{fp, lr}
   2c61c:	add	sp, sp, #8
   2c620:	bx	lr
   2c624:	push	{fp, lr}
   2c628:	mov	fp, sp
   2c62c:	sub	sp, sp, #24
   2c630:	str	r0, [fp, #-4]
   2c634:	str	r1, [fp, #-8]
   2c638:	ldr	r0, [fp, #-4]
   2c63c:	bl	2c890 <__assert_fail@plt+0x19cd8>
   2c640:	ldr	r1, [fp, #-8]
   2c644:	strb	r0, [r1]
   2c648:	ldr	r0, [fp, #-4]
   2c64c:	and	r0, r0, #256	; 0x100
   2c650:	cmp	r0, #0
   2c654:	movw	r0, #0
   2c658:	movne	r0, #1
   2c65c:	tst	r0, #1
   2c660:	movw	r0, #114	; 0x72
   2c664:	moveq	r0, #45	; 0x2d
   2c668:	ldr	r1, [fp, #-8]
   2c66c:	strb	r0, [r1, #1]
   2c670:	ldr	r0, [fp, #-4]
   2c674:	and	r0, r0, #128	; 0x80
   2c678:	cmp	r0, #0
   2c67c:	movw	r0, #0
   2c680:	movne	r0, #1
   2c684:	tst	r0, #1
   2c688:	movw	r0, #119	; 0x77
   2c68c:	moveq	r0, #45	; 0x2d
   2c690:	ldr	r1, [fp, #-8]
   2c694:	strb	r0, [r1, #2]
   2c698:	ldr	r0, [fp, #-4]
   2c69c:	and	r0, r0, #2048	; 0x800
   2c6a0:	cmp	r0, #0
   2c6a4:	beq	2c6d0 <__assert_fail@plt+0x19b18>
   2c6a8:	ldr	r0, [fp, #-4]
   2c6ac:	and	r0, r0, #64	; 0x40
   2c6b0:	cmp	r0, #0
   2c6b4:	movw	r0, #0
   2c6b8:	movne	r0, #1
   2c6bc:	tst	r0, #1
   2c6c0:	movw	r0, #115	; 0x73
   2c6c4:	moveq	r0, #83	; 0x53
   2c6c8:	str	r0, [sp, #12]
   2c6cc:	b	2c6f4 <__assert_fail@plt+0x19b3c>
   2c6d0:	ldr	r0, [fp, #-4]
   2c6d4:	and	r0, r0, #64	; 0x40
   2c6d8:	cmp	r0, #0
   2c6dc:	movw	r0, #0
   2c6e0:	movne	r0, #1
   2c6e4:	tst	r0, #1
   2c6e8:	movw	r0, #120	; 0x78
   2c6ec:	moveq	r0, #45	; 0x2d
   2c6f0:	str	r0, [sp, #12]
   2c6f4:	ldr	r0, [sp, #12]
   2c6f8:	ldr	r1, [fp, #-8]
   2c6fc:	strb	r0, [r1, #3]
   2c700:	ldr	r0, [fp, #-4]
   2c704:	and	r0, r0, #32
   2c708:	cmp	r0, #0
   2c70c:	movw	r0, #0
   2c710:	movne	r0, #1
   2c714:	tst	r0, #1
   2c718:	movw	r0, #114	; 0x72
   2c71c:	moveq	r0, #45	; 0x2d
   2c720:	ldr	r1, [fp, #-8]
   2c724:	strb	r0, [r1, #4]
   2c728:	ldr	r0, [fp, #-4]
   2c72c:	and	r0, r0, #16
   2c730:	cmp	r0, #0
   2c734:	movw	r0, #0
   2c738:	movne	r0, #1
   2c73c:	tst	r0, #1
   2c740:	movw	r0, #119	; 0x77
   2c744:	moveq	r0, #45	; 0x2d
   2c748:	ldr	r1, [fp, #-8]
   2c74c:	strb	r0, [r1, #5]
   2c750:	ldr	r0, [fp, #-4]
   2c754:	and	r0, r0, #1024	; 0x400
   2c758:	cmp	r0, #0
   2c75c:	beq	2c788 <__assert_fail@plt+0x19bd0>
   2c760:	ldr	r0, [fp, #-4]
   2c764:	and	r0, r0, #8
   2c768:	cmp	r0, #0
   2c76c:	movw	r0, #0
   2c770:	movne	r0, #1
   2c774:	tst	r0, #1
   2c778:	movw	r0, #115	; 0x73
   2c77c:	moveq	r0, #83	; 0x53
   2c780:	str	r0, [sp, #8]
   2c784:	b	2c7ac <__assert_fail@plt+0x19bf4>
   2c788:	ldr	r0, [fp, #-4]
   2c78c:	and	r0, r0, #8
   2c790:	cmp	r0, #0
   2c794:	movw	r0, #0
   2c798:	movne	r0, #1
   2c79c:	tst	r0, #1
   2c7a0:	movw	r0, #120	; 0x78
   2c7a4:	moveq	r0, #45	; 0x2d
   2c7a8:	str	r0, [sp, #8]
   2c7ac:	ldr	r0, [sp, #8]
   2c7b0:	ldr	r1, [fp, #-8]
   2c7b4:	strb	r0, [r1, #6]
   2c7b8:	ldr	r0, [fp, #-4]
   2c7bc:	and	r0, r0, #4
   2c7c0:	cmp	r0, #0
   2c7c4:	movw	r0, #0
   2c7c8:	movne	r0, #1
   2c7cc:	tst	r0, #1
   2c7d0:	movw	r0, #114	; 0x72
   2c7d4:	moveq	r0, #45	; 0x2d
   2c7d8:	ldr	r1, [fp, #-8]
   2c7dc:	strb	r0, [r1, #7]
   2c7e0:	ldr	r0, [fp, #-4]
   2c7e4:	and	r0, r0, #2
   2c7e8:	cmp	r0, #0
   2c7ec:	movw	r0, #0
   2c7f0:	movne	r0, #1
   2c7f4:	tst	r0, #1
   2c7f8:	movw	r0, #119	; 0x77
   2c7fc:	moveq	r0, #45	; 0x2d
   2c800:	ldr	r1, [fp, #-8]
   2c804:	strb	r0, [r1, #8]
   2c808:	ldr	r0, [fp, #-4]
   2c80c:	and	r0, r0, #512	; 0x200
   2c810:	cmp	r0, #0
   2c814:	beq	2c840 <__assert_fail@plt+0x19c88>
   2c818:	ldr	r0, [fp, #-4]
   2c81c:	and	r0, r0, #1
   2c820:	cmp	r0, #0
   2c824:	movw	r0, #0
   2c828:	movne	r0, #1
   2c82c:	tst	r0, #1
   2c830:	movw	r0, #116	; 0x74
   2c834:	moveq	r0, #84	; 0x54
   2c838:	str	r0, [sp, #4]
   2c83c:	b	2c864 <__assert_fail@plt+0x19cac>
   2c840:	ldr	r0, [fp, #-4]
   2c844:	and	r0, r0, #1
   2c848:	cmp	r0, #0
   2c84c:	movw	r0, #0
   2c850:	movne	r0, #1
   2c854:	tst	r0, #1
   2c858:	movw	r0, #120	; 0x78
   2c85c:	moveq	r0, #45	; 0x2d
   2c860:	str	r0, [sp, #4]
   2c864:	ldr	r0, [sp, #4]
   2c868:	ldr	r1, [fp, #-8]
   2c86c:	strb	r0, [r1, #9]
   2c870:	ldr	r0, [fp, #-8]
   2c874:	movw	r1, #32
   2c878:	strb	r1, [r0, #10]
   2c87c:	ldr	r0, [fp, #-8]
   2c880:	movw	r1, #0
   2c884:	strb	r1, [r0, #11]
   2c888:	mov	sp, fp
   2c88c:	pop	{fp, pc}
   2c890:	sub	sp, sp, #8
   2c894:	str	r0, [sp]
   2c898:	ldr	r0, [sp]
   2c89c:	and	r0, r0, #61440	; 0xf000
   2c8a0:	cmp	r0, #32768	; 0x8000
   2c8a4:	bne	2c8b4 <__assert_fail@plt+0x19cfc>
   2c8a8:	movw	r0, #45	; 0x2d
   2c8ac:	strb	r0, [sp, #7]
   2c8b0:	b	2c964 <__assert_fail@plt+0x19dac>
   2c8b4:	ldr	r0, [sp]
   2c8b8:	and	r0, r0, #61440	; 0xf000
   2c8bc:	cmp	r0, #16384	; 0x4000
   2c8c0:	bne	2c8d0 <__assert_fail@plt+0x19d18>
   2c8c4:	movw	r0, #100	; 0x64
   2c8c8:	strb	r0, [sp, #7]
   2c8cc:	b	2c964 <__assert_fail@plt+0x19dac>
   2c8d0:	ldr	r0, [sp]
   2c8d4:	and	r0, r0, #61440	; 0xf000
   2c8d8:	cmp	r0, #24576	; 0x6000
   2c8dc:	bne	2c8ec <__assert_fail@plt+0x19d34>
   2c8e0:	movw	r0, #98	; 0x62
   2c8e4:	strb	r0, [sp, #7]
   2c8e8:	b	2c964 <__assert_fail@plt+0x19dac>
   2c8ec:	ldr	r0, [sp]
   2c8f0:	and	r0, r0, #61440	; 0xf000
   2c8f4:	cmp	r0, #8192	; 0x2000
   2c8f8:	bne	2c908 <__assert_fail@plt+0x19d50>
   2c8fc:	movw	r0, #99	; 0x63
   2c900:	strb	r0, [sp, #7]
   2c904:	b	2c964 <__assert_fail@plt+0x19dac>
   2c908:	ldr	r0, [sp]
   2c90c:	and	r0, r0, #61440	; 0xf000
   2c910:	cmp	r0, #40960	; 0xa000
   2c914:	bne	2c924 <__assert_fail@plt+0x19d6c>
   2c918:	movw	r0, #108	; 0x6c
   2c91c:	strb	r0, [sp, #7]
   2c920:	b	2c964 <__assert_fail@plt+0x19dac>
   2c924:	ldr	r0, [sp]
   2c928:	and	r0, r0, #61440	; 0xf000
   2c92c:	cmp	r0, #4096	; 0x1000
   2c930:	bne	2c940 <__assert_fail@plt+0x19d88>
   2c934:	movw	r0, #112	; 0x70
   2c938:	strb	r0, [sp, #7]
   2c93c:	b	2c964 <__assert_fail@plt+0x19dac>
   2c940:	ldr	r0, [sp]
   2c944:	and	r0, r0, #61440	; 0xf000
   2c948:	cmp	r0, #49152	; 0xc000
   2c94c:	bne	2c95c <__assert_fail@plt+0x19da4>
   2c950:	movw	r0, #115	; 0x73
   2c954:	strb	r0, [sp, #7]
   2c958:	b	2c964 <__assert_fail@plt+0x19dac>
   2c95c:	movw	r0, #63	; 0x3f
   2c960:	strb	r0, [sp, #7]
   2c964:	ldrb	r0, [sp, #7]
   2c968:	add	sp, sp, #8
   2c96c:	bx	lr
   2c970:	push	{fp, lr}
   2c974:	mov	fp, sp
   2c978:	sub	sp, sp, #8
   2c97c:	str	r0, [sp, #4]
   2c980:	str	r1, [sp]
   2c984:	ldr	r0, [sp, #4]
   2c988:	ldr	r0, [r0, #16]
   2c98c:	ldr	r1, [sp]
   2c990:	bl	2c624 <__assert_fail@plt+0x19a6c>
   2c994:	ldr	r0, [sp, #4]
   2c998:	ldr	r0, [r0, #16]
   2c99c:	ldr	r1, [sp, #4]
   2c9a0:	ldr	r1, [r1, #16]
   2c9a4:	sub	r0, r0, r1
   2c9a8:	cmp	r0, #0
   2c9ac:	beq	2c9c0 <__assert_fail@plt+0x19e08>
   2c9b0:	ldr	r0, [sp]
   2c9b4:	movw	r1, #70	; 0x46
   2c9b8:	strb	r1, [r0]
   2c9bc:	b	2ca24 <__assert_fail@plt+0x19e6c>
   2c9c0:	ldr	r0, [sp, #4]
   2c9c4:	ldr	r0, [r0, #16]
   2c9c8:	ldr	r1, [sp, #4]
   2c9cc:	ldr	r1, [r1, #16]
   2c9d0:	sub	r0, r0, r1
   2c9d4:	cmp	r0, #0
   2c9d8:	beq	2c9ec <__assert_fail@plt+0x19e34>
   2c9dc:	ldr	r0, [sp]
   2c9e0:	movw	r1, #81	; 0x51
   2c9e4:	strb	r1, [r0]
   2c9e8:	b	2ca20 <__assert_fail@plt+0x19e68>
   2c9ec:	ldr	r0, [sp, #4]
   2c9f0:	ldr	r0, [r0, #16]
   2c9f4:	ldr	r1, [sp, #4]
   2c9f8:	ldr	r1, [r1, #16]
   2c9fc:	sub	r0, r0, r1
   2ca00:	cmp	r0, #0
   2ca04:	beq	2ca18 <__assert_fail@plt+0x19e60>
   2ca08:	ldr	r0, [sp]
   2ca0c:	movw	r1, #83	; 0x53
   2ca10:	strb	r1, [r0]
   2ca14:	b	2ca1c <__assert_fail@plt+0x19e64>
   2ca18:	b	2ca1c <__assert_fail@plt+0x19e64>
   2ca1c:	b	2ca20 <__assert_fail@plt+0x19e68>
   2ca20:	b	2ca24 <__assert_fail@plt+0x19e6c>
   2ca24:	mov	sp, fp
   2ca28:	pop	{fp, pc}
   2ca2c:	push	{fp, lr}
   2ca30:	mov	fp, sp
   2ca34:	sub	sp, sp, #48	; 0x30
   2ca38:	str	r0, [fp, #-8]
   2ca3c:	str	r1, [fp, #-12]
   2ca40:	ldr	r0, [fp, #-8]
   2ca44:	ldr	r1, [fp, #-12]
   2ca48:	bl	12ab0 <fopen64@plt>
   2ca4c:	str	r0, [fp, #-16]
   2ca50:	ldr	r0, [fp, #-16]
   2ca54:	movw	r1, #0
   2ca58:	cmp	r0, r1
   2ca5c:	beq	2cb44 <__assert_fail@plt+0x19f8c>
   2ca60:	ldr	r0, [fp, #-16]
   2ca64:	bl	12948 <fileno@plt>
   2ca68:	str	r0, [fp, #-20]	; 0xffffffec
   2ca6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ca70:	movw	r1, #0
   2ca74:	cmp	r1, r0
   2ca78:	bgt	2cb40 <__assert_fail@plt+0x19f88>
   2ca7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ca80:	cmp	r0, #2
   2ca84:	bgt	2cb40 <__assert_fail@plt+0x19f88>
   2ca88:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ca8c:	bl	49984 <__assert_fail@plt+0x36dcc>
   2ca90:	str	r0, [sp, #24]
   2ca94:	ldr	r0, [sp, #24]
   2ca98:	cmp	r0, #0
   2ca9c:	bge	2cad8 <__assert_fail@plt+0x19f20>
   2caa0:	bl	128d0 <__errno_location@plt>
   2caa4:	ldr	r0, [r0]
   2caa8:	str	r0, [sp, #20]
   2caac:	ldr	r0, [fp, #-16]
   2cab0:	bl	12990 <fclose@plt>
   2cab4:	ldr	r1, [sp, #20]
   2cab8:	str	r0, [sp, #12]
   2cabc:	str	r1, [sp, #8]
   2cac0:	bl	128d0 <__errno_location@plt>
   2cac4:	ldr	r1, [sp, #8]
   2cac8:	str	r1, [r0]
   2cacc:	movw	r0, #0
   2cad0:	str	r0, [fp, #-4]
   2cad4:	b	2cb4c <__assert_fail@plt+0x19f94>
   2cad8:	ldr	r0, [fp, #-16]
   2cadc:	bl	12990 <fclose@plt>
   2cae0:	cmp	r0, #0
   2cae4:	bne	2cb04 <__assert_fail@plt+0x19f4c>
   2cae8:	ldr	r0, [sp, #24]
   2caec:	ldr	r1, [fp, #-12]
   2caf0:	bl	12438 <fdopen@plt>
   2caf4:	str	r0, [fp, #-16]
   2caf8:	movw	r1, #0
   2cafc:	cmp	r0, r1
   2cb00:	bne	2cb3c <__assert_fail@plt+0x19f84>
   2cb04:	bl	128d0 <__errno_location@plt>
   2cb08:	ldr	r0, [r0]
   2cb0c:	str	r0, [sp, #16]
   2cb10:	ldr	r0, [sp, #24]
   2cb14:	bl	12b70 <close@plt>
   2cb18:	ldr	r1, [sp, #16]
   2cb1c:	str	r0, [sp, #4]
   2cb20:	str	r1, [sp]
   2cb24:	bl	128d0 <__errno_location@plt>
   2cb28:	ldr	r1, [sp]
   2cb2c:	str	r1, [r0]
   2cb30:	movw	r0, #0
   2cb34:	str	r0, [fp, #-4]
   2cb38:	b	2cb4c <__assert_fail@plt+0x19f94>
   2cb3c:	b	2cb40 <__assert_fail@plt+0x19f88>
   2cb40:	b	2cb44 <__assert_fail@plt+0x19f8c>
   2cb44:	ldr	r0, [fp, #-16]
   2cb48:	str	r0, [fp, #-4]
   2cb4c:	ldr	r0, [fp, #-4]
   2cb50:	mov	sp, fp
   2cb54:	pop	{fp, pc}
   2cb58:	sub	sp, sp, #4
   2cb5c:	str	r0, [sp]
   2cb60:	ldr	r0, [sp]
   2cb64:	ldr	r0, [r0, #8]
   2cb68:	add	sp, sp, #4
   2cb6c:	bx	lr
   2cb70:	sub	sp, sp, #4
   2cb74:	str	r0, [sp]
   2cb78:	ldr	r0, [sp]
   2cb7c:	ldr	r0, [r0, #12]
   2cb80:	add	sp, sp, #4
   2cb84:	bx	lr
   2cb88:	sub	sp, sp, #4
   2cb8c:	str	r0, [sp]
   2cb90:	ldr	r0, [sp]
   2cb94:	ldr	r0, [r0, #16]
   2cb98:	add	sp, sp, #4
   2cb9c:	bx	lr
   2cba0:	sub	sp, sp, #20
   2cba4:	str	r0, [sp, #16]
   2cba8:	movw	r0, #0
   2cbac:	str	r0, [sp, #8]
   2cbb0:	ldr	r0, [sp, #16]
   2cbb4:	ldr	r0, [r0]
   2cbb8:	str	r0, [sp, #12]
   2cbbc:	ldr	r0, [sp, #12]
   2cbc0:	ldr	r1, [sp, #16]
   2cbc4:	ldr	r1, [r1, #4]
   2cbc8:	cmp	r0, r1
   2cbcc:	bcs	2cc50 <__assert_fail@plt+0x1a098>
   2cbd0:	ldr	r0, [sp, #12]
   2cbd4:	ldr	r0, [r0]
   2cbd8:	movw	r1, #0
   2cbdc:	cmp	r0, r1
   2cbe0:	beq	2cc3c <__assert_fail@plt+0x1a084>
   2cbe4:	ldr	r0, [sp, #12]
   2cbe8:	str	r0, [sp, #4]
   2cbec:	movw	r0, #1
   2cbf0:	str	r0, [sp]
   2cbf4:	ldr	r0, [sp, #4]
   2cbf8:	ldr	r0, [r0, #4]
   2cbfc:	str	r0, [sp, #4]
   2cc00:	ldr	r0, [sp, #4]
   2cc04:	movw	r1, #0
   2cc08:	cmp	r0, r1
   2cc0c:	beq	2cc20 <__assert_fail@plt+0x1a068>
   2cc10:	ldr	r0, [sp]
   2cc14:	add	r0, r0, #1
   2cc18:	str	r0, [sp]
   2cc1c:	b	2cbf4 <__assert_fail@plt+0x1a03c>
   2cc20:	ldr	r0, [sp]
   2cc24:	ldr	r1, [sp, #8]
   2cc28:	cmp	r0, r1
   2cc2c:	bls	2cc38 <__assert_fail@plt+0x1a080>
   2cc30:	ldr	r0, [sp]
   2cc34:	str	r0, [sp, #8]
   2cc38:	b	2cc3c <__assert_fail@plt+0x1a084>
   2cc3c:	b	2cc40 <__assert_fail@plt+0x1a088>
   2cc40:	ldr	r0, [sp, #12]
   2cc44:	add	r0, r0, #8
   2cc48:	str	r0, [sp, #12]
   2cc4c:	b	2cbbc <__assert_fail@plt+0x1a004>
   2cc50:	ldr	r0, [sp, #8]
   2cc54:	add	sp, sp, #20
   2cc58:	bx	lr
   2cc5c:	sub	sp, sp, #24
   2cc60:	str	r0, [sp, #16]
   2cc64:	movw	r0, #0
   2cc68:	str	r0, [sp, #8]
   2cc6c:	str	r0, [sp, #4]
   2cc70:	ldr	r0, [sp, #16]
   2cc74:	ldr	r0, [r0]
   2cc78:	str	r0, [sp, #12]
   2cc7c:	ldr	r0, [sp, #12]
   2cc80:	ldr	r1, [sp, #16]
   2cc84:	ldr	r1, [r1, #4]
   2cc88:	cmp	r0, r1
   2cc8c:	bcs	2cd08 <__assert_fail@plt+0x1a150>
   2cc90:	ldr	r0, [sp, #12]
   2cc94:	ldr	r0, [r0]
   2cc98:	movw	r1, #0
   2cc9c:	cmp	r0, r1
   2cca0:	beq	2ccf4 <__assert_fail@plt+0x1a13c>
   2cca4:	ldr	r0, [sp, #12]
   2cca8:	str	r0, [sp]
   2ccac:	ldr	r0, [sp, #8]
   2ccb0:	add	r0, r0, #1
   2ccb4:	str	r0, [sp, #8]
   2ccb8:	ldr	r0, [sp, #4]
   2ccbc:	add	r0, r0, #1
   2ccc0:	str	r0, [sp, #4]
   2ccc4:	ldr	r0, [sp]
   2ccc8:	ldr	r0, [r0, #4]
   2cccc:	str	r0, [sp]
   2ccd0:	ldr	r0, [sp]
   2ccd4:	movw	r1, #0
   2ccd8:	cmp	r0, r1
   2ccdc:	beq	2ccf0 <__assert_fail@plt+0x1a138>
   2cce0:	ldr	r0, [sp, #4]
   2cce4:	add	r0, r0, #1
   2cce8:	str	r0, [sp, #4]
   2ccec:	b	2ccc4 <__assert_fail@plt+0x1a10c>
   2ccf0:	b	2ccf4 <__assert_fail@plt+0x1a13c>
   2ccf4:	b	2ccf8 <__assert_fail@plt+0x1a140>
   2ccf8:	ldr	r0, [sp, #12]
   2ccfc:	add	r0, r0, #8
   2cd00:	str	r0, [sp, #12]
   2cd04:	b	2cc7c <__assert_fail@plt+0x1a0c4>
   2cd08:	ldr	r0, [sp, #8]
   2cd0c:	ldr	r1, [sp, #16]
   2cd10:	ldr	r1, [r1, #12]
   2cd14:	cmp	r0, r1
   2cd18:	bne	2cd40 <__assert_fail@plt+0x1a188>
   2cd1c:	ldr	r0, [sp, #4]
   2cd20:	ldr	r1, [sp, #16]
   2cd24:	ldr	r1, [r1, #16]
   2cd28:	cmp	r0, r1
   2cd2c:	bne	2cd40 <__assert_fail@plt+0x1a188>
   2cd30:	movw	r0, #1
   2cd34:	and	r0, r0, #1
   2cd38:	strb	r0, [sp, #23]
   2cd3c:	b	2cd4c <__assert_fail@plt+0x1a194>
   2cd40:	movw	r0, #0
   2cd44:	and	r0, r0, #1
   2cd48:	strb	r0, [sp, #23]
   2cd4c:	ldrb	r0, [sp, #23]
   2cd50:	and	r0, r0, #1
   2cd54:	add	sp, sp, #24
   2cd58:	bx	lr
   2cd5c:	nop	{0}
   2cd60:	push	{fp, lr}
   2cd64:	mov	fp, sp
   2cd68:	sub	sp, sp, #48	; 0x30
   2cd6c:	str	r0, [fp, #-4]
   2cd70:	str	r1, [fp, #-8]
   2cd74:	ldr	r0, [fp, #-4]
   2cd78:	bl	2cb88 <__assert_fail@plt+0x19fd0>
   2cd7c:	str	r0, [fp, #-12]
   2cd80:	ldr	r0, [fp, #-4]
   2cd84:	bl	2cb58 <__assert_fail@plt+0x19fa0>
   2cd88:	str	r0, [fp, #-16]
   2cd8c:	ldr	r0, [fp, #-4]
   2cd90:	bl	2cb70 <__assert_fail@plt+0x19fb8>
   2cd94:	str	r0, [fp, #-20]	; 0xffffffec
   2cd98:	ldr	r0, [fp, #-4]
   2cd9c:	bl	2cba0 <__assert_fail@plt+0x19fe8>
   2cda0:	str	r0, [sp, #24]
   2cda4:	ldr	r0, [fp, #-8]
   2cda8:	ldr	r2, [fp, #-12]
   2cdac:	movw	r1, #40853	; 0x9f95
   2cdb0:	movt	r1, #7
   2cdb4:	bl	128c4 <fprintf@plt>
   2cdb8:	ldr	r1, [fp, #-8]
   2cdbc:	ldr	r2, [fp, #-16]
   2cdc0:	str	r0, [sp, #20]
   2cdc4:	mov	r0, r1
   2cdc8:	movw	r1, #40877	; 0x9fad
   2cdcc:	movt	r1, #7
   2cdd0:	bl	128c4 <fprintf@plt>
   2cdd4:	vldr	d16, [pc, #100]	; 2ce40 <__assert_fail@plt+0x1a288>
   2cdd8:	ldr	r1, [fp, #-8]
   2cddc:	ldr	r2, [fp, #-20]	; 0xffffffec
   2cde0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cde4:	vmov	s0, r3
   2cde8:	vcvt.f64.u32	d17, s0
   2cdec:	vmul.f64	d16, d16, d17
   2cdf0:	ldr	r3, [fp, #-16]
   2cdf4:	vmov	s0, r3
   2cdf8:	vcvt.f64.u32	d17, s0
   2cdfc:	vdiv.f64	d16, d16, d17
   2ce00:	str	r0, [sp, #16]
   2ce04:	mov	r0, r1
   2ce08:	movw	r1, #40901	; 0x9fc5
   2ce0c:	movt	r1, #7
   2ce10:	vstr	d16, [sp]
   2ce14:	bl	128c4 <fprintf@plt>
   2ce18:	ldr	r1, [fp, #-8]
   2ce1c:	ldr	r2, [sp, #24]
   2ce20:	str	r0, [sp, #12]
   2ce24:	mov	r0, r1
   2ce28:	movw	r1, #40934	; 0x9fe6
   2ce2c:	movt	r1, #7
   2ce30:	bl	128c4 <fprintf@plt>
   2ce34:	mov	sp, fp
   2ce38:	pop	{fp, pc}
   2ce3c:	nop	{0}
   2ce40:	andeq	r0, r0, r0
   2ce44:	subsmi	r0, r9, r0
   2ce48:	push	{fp, lr}
   2ce4c:	mov	fp, sp
   2ce50:	sub	sp, sp, #24
   2ce54:	str	r0, [fp, #-8]
   2ce58:	str	r1, [sp, #12]
   2ce5c:	ldr	r0, [fp, #-8]
   2ce60:	ldr	r1, [sp, #12]
   2ce64:	bl	2cf20 <__assert_fail@plt+0x1a368>
   2ce68:	str	r0, [sp, #8]
   2ce6c:	ldr	r0, [sp, #8]
   2ce70:	ldr	r0, [r0]
   2ce74:	movw	r1, #0
   2ce78:	cmp	r0, r1
   2ce7c:	bne	2ce8c <__assert_fail@plt+0x1a2d4>
   2ce80:	movw	r0, #0
   2ce84:	str	r0, [fp, #-4]
   2ce88:	b	2cf14 <__assert_fail@plt+0x1a35c>
   2ce8c:	ldr	r0, [sp, #8]
   2ce90:	str	r0, [sp, #4]
   2ce94:	ldr	r0, [sp, #4]
   2ce98:	movw	r1, #0
   2ce9c:	cmp	r0, r1
   2cea0:	beq	2cf0c <__assert_fail@plt+0x1a354>
   2cea4:	ldr	r0, [sp, #12]
   2cea8:	ldr	r1, [sp, #4]
   2ceac:	ldr	r1, [r1]
   2ceb0:	cmp	r0, r1
   2ceb4:	beq	2cee8 <__assert_fail@plt+0x1a330>
   2ceb8:	ldr	r0, [fp, #-8]
   2cebc:	ldr	r0, [r0, #28]
   2cec0:	ldr	r1, [sp, #12]
   2cec4:	ldr	r2, [sp, #4]
   2cec8:	ldr	r2, [r2]
   2cecc:	str	r0, [sp]
   2ced0:	mov	r0, r1
   2ced4:	mov	r1, r2
   2ced8:	ldr	r2, [sp]
   2cedc:	blx	r2
   2cee0:	tst	r0, #1
   2cee4:	beq	2cef8 <__assert_fail@plt+0x1a340>
   2cee8:	ldr	r0, [sp, #4]
   2ceec:	ldr	r0, [r0]
   2cef0:	str	r0, [fp, #-4]
   2cef4:	b	2cf14 <__assert_fail@plt+0x1a35c>
   2cef8:	b	2cefc <__assert_fail@plt+0x1a344>
   2cefc:	ldr	r0, [sp, #4]
   2cf00:	ldr	r0, [r0, #4]
   2cf04:	str	r0, [sp, #4]
   2cf08:	b	2ce94 <__assert_fail@plt+0x1a2dc>
   2cf0c:	movw	r0, #0
   2cf10:	str	r0, [fp, #-4]
   2cf14:	ldr	r0, [fp, #-4]
   2cf18:	mov	sp, fp
   2cf1c:	pop	{fp, pc}
   2cf20:	push	{fp, lr}
   2cf24:	mov	fp, sp
   2cf28:	sub	sp, sp, #16
   2cf2c:	str	r0, [fp, #-4]
   2cf30:	str	r1, [sp, #8]
   2cf34:	ldr	r0, [fp, #-4]
   2cf38:	ldr	r0, [r0, #24]
   2cf3c:	ldr	r1, [sp, #8]
   2cf40:	ldr	r2, [fp, #-4]
   2cf44:	ldr	r2, [r2, #8]
   2cf48:	str	r0, [sp]
   2cf4c:	mov	r0, r1
   2cf50:	mov	r1, r2
   2cf54:	ldr	r2, [sp]
   2cf58:	blx	r2
   2cf5c:	str	r0, [sp, #4]
   2cf60:	ldr	r0, [sp, #4]
   2cf64:	ldr	r1, [fp, #-4]
   2cf68:	ldr	r1, [r1, #8]
   2cf6c:	cmp	r0, r1
   2cf70:	bcc	2cf78 <__assert_fail@plt+0x1a3c0>
   2cf74:	bl	12b64 <abort@plt>
   2cf78:	ldr	r0, [fp, #-4]
   2cf7c:	ldr	r0, [r0]
   2cf80:	ldr	r1, [sp, #4]
   2cf84:	add	r0, r0, r1, lsl #3
   2cf88:	mov	sp, fp
   2cf8c:	pop	{fp, pc}
   2cf90:	push	{fp, lr}
   2cf94:	mov	fp, sp
   2cf98:	sub	sp, sp, #16
   2cf9c:	str	r0, [sp, #8]
   2cfa0:	ldr	r0, [sp, #8]
   2cfa4:	ldr	r0, [r0, #16]
   2cfa8:	cmp	r0, #0
   2cfac:	bne	2cfbc <__assert_fail@plt+0x1a404>
   2cfb0:	movw	r0, #0
   2cfb4:	str	r0, [fp, #-4]
   2cfb8:	b	2d01c <__assert_fail@plt+0x1a464>
   2cfbc:	ldr	r0, [sp, #8]
   2cfc0:	ldr	r0, [r0]
   2cfc4:	str	r0, [sp, #4]
   2cfc8:	ldr	r0, [sp, #4]
   2cfcc:	ldr	r1, [sp, #8]
   2cfd0:	ldr	r1, [r1, #4]
   2cfd4:	cmp	r0, r1
   2cfd8:	bcc	2cfe0 <__assert_fail@plt+0x1a428>
   2cfdc:	bl	12b64 <abort@plt>
   2cfe0:	ldr	r0, [sp, #4]
   2cfe4:	ldr	r0, [r0]
   2cfe8:	movw	r1, #0
   2cfec:	cmp	r0, r1
   2cff0:	beq	2d004 <__assert_fail@plt+0x1a44c>
   2cff4:	ldr	r0, [sp, #4]
   2cff8:	ldr	r0, [r0]
   2cffc:	str	r0, [fp, #-4]
   2d000:	b	2d01c <__assert_fail@plt+0x1a464>
   2d004:	b	2d008 <__assert_fail@plt+0x1a450>
   2d008:	b	2d00c <__assert_fail@plt+0x1a454>
   2d00c:	ldr	r0, [sp, #4]
   2d010:	add	r0, r0, #8
   2d014:	str	r0, [sp, #4]
   2d018:	b	2cfc8 <__assert_fail@plt+0x1a410>
   2d01c:	ldr	r0, [fp, #-4]
   2d020:	mov	sp, fp
   2d024:	pop	{fp, pc}
   2d028:	push	{fp, lr}
   2d02c:	mov	fp, sp
   2d030:	sub	sp, sp, #24
   2d034:	str	r0, [fp, #-8]
   2d038:	str	r1, [sp, #12]
   2d03c:	ldr	r0, [fp, #-8]
   2d040:	ldr	r1, [sp, #12]
   2d044:	bl	2cf20 <__assert_fail@plt+0x1a368>
   2d048:	str	r0, [sp, #8]
   2d04c:	ldr	r0, [sp, #8]
   2d050:	str	r0, [sp, #4]
   2d054:	ldr	r0, [sp, #4]
   2d058:	ldr	r0, [r0]
   2d05c:	ldr	r1, [sp, #12]
   2d060:	cmp	r0, r1
   2d064:	bne	2d090 <__assert_fail@plt+0x1a4d8>
   2d068:	ldr	r0, [sp, #4]
   2d06c:	ldr	r0, [r0, #4]
   2d070:	movw	r1, #0
   2d074:	cmp	r0, r1
   2d078:	beq	2d090 <__assert_fail@plt+0x1a4d8>
   2d07c:	ldr	r0, [sp, #4]
   2d080:	ldr	r0, [r0, #4]
   2d084:	ldr	r0, [r0]
   2d088:	str	r0, [fp, #-4]
   2d08c:	b	2d0fc <__assert_fail@plt+0x1a544>
   2d090:	ldr	r0, [sp, #4]
   2d094:	ldr	r0, [r0, #4]
   2d098:	str	r0, [sp, #4]
   2d09c:	ldr	r0, [sp, #4]
   2d0a0:	movw	r1, #0
   2d0a4:	cmp	r0, r1
   2d0a8:	bne	2d054 <__assert_fail@plt+0x1a49c>
   2d0ac:	b	2d0b0 <__assert_fail@plt+0x1a4f8>
   2d0b0:	ldr	r0, [sp, #8]
   2d0b4:	add	r0, r0, #8
   2d0b8:	str	r0, [sp, #8]
   2d0bc:	ldr	r1, [fp, #-8]
   2d0c0:	ldr	r1, [r1, #4]
   2d0c4:	cmp	r0, r1
   2d0c8:	bcs	2d0f4 <__assert_fail@plt+0x1a53c>
   2d0cc:	ldr	r0, [sp, #8]
   2d0d0:	ldr	r0, [r0]
   2d0d4:	movw	r1, #0
   2d0d8:	cmp	r0, r1
   2d0dc:	beq	2d0f0 <__assert_fail@plt+0x1a538>
   2d0e0:	ldr	r0, [sp, #8]
   2d0e4:	ldr	r0, [r0]
   2d0e8:	str	r0, [fp, #-4]
   2d0ec:	b	2d0fc <__assert_fail@plt+0x1a544>
   2d0f0:	b	2d0b0 <__assert_fail@plt+0x1a4f8>
   2d0f4:	movw	r0, #0
   2d0f8:	str	r0, [fp, #-4]
   2d0fc:	ldr	r0, [fp, #-4]
   2d100:	mov	sp, fp
   2d104:	pop	{fp, pc}
   2d108:	sub	sp, sp, #28
   2d10c:	str	r0, [sp, #20]
   2d110:	str	r1, [sp, #16]
   2d114:	str	r2, [sp, #12]
   2d118:	movw	r0, #0
   2d11c:	str	r0, [sp, #8]
   2d120:	ldr	r0, [sp, #20]
   2d124:	ldr	r0, [r0]
   2d128:	str	r0, [sp, #4]
   2d12c:	ldr	r0, [sp, #4]
   2d130:	ldr	r1, [sp, #20]
   2d134:	ldr	r1, [r1, #4]
   2d138:	cmp	r0, r1
   2d13c:	bcs	2d1d0 <__assert_fail@plt+0x1a618>
   2d140:	ldr	r0, [sp, #4]
   2d144:	ldr	r0, [r0]
   2d148:	movw	r1, #0
   2d14c:	cmp	r0, r1
   2d150:	beq	2d1bc <__assert_fail@plt+0x1a604>
   2d154:	ldr	r0, [sp, #4]
   2d158:	str	r0, [sp]
   2d15c:	ldr	r0, [sp]
   2d160:	movw	r1, #0
   2d164:	cmp	r0, r1
   2d168:	beq	2d1b8 <__assert_fail@plt+0x1a600>
   2d16c:	ldr	r0, [sp, #8]
   2d170:	ldr	r1, [sp, #12]
   2d174:	cmp	r0, r1
   2d178:	bcc	2d188 <__assert_fail@plt+0x1a5d0>
   2d17c:	ldr	r0, [sp, #8]
   2d180:	str	r0, [sp, #24]
   2d184:	b	2d1d8 <__assert_fail@plt+0x1a620>
   2d188:	ldr	r0, [sp]
   2d18c:	ldr	r0, [r0]
   2d190:	ldr	r1, [sp, #16]
   2d194:	ldr	r2, [sp, #8]
   2d198:	add	r3, r2, #1
   2d19c:	str	r3, [sp, #8]
   2d1a0:	add	r1, r1, r2, lsl #2
   2d1a4:	str	r0, [r1]
   2d1a8:	ldr	r0, [sp]
   2d1ac:	ldr	r0, [r0, #4]
   2d1b0:	str	r0, [sp]
   2d1b4:	b	2d15c <__assert_fail@plt+0x1a5a4>
   2d1b8:	b	2d1bc <__assert_fail@plt+0x1a604>
   2d1bc:	b	2d1c0 <__assert_fail@plt+0x1a608>
   2d1c0:	ldr	r0, [sp, #4]
   2d1c4:	add	r0, r0, #8
   2d1c8:	str	r0, [sp, #4]
   2d1cc:	b	2d12c <__assert_fail@plt+0x1a574>
   2d1d0:	ldr	r0, [sp, #8]
   2d1d4:	str	r0, [sp, #24]
   2d1d8:	ldr	r0, [sp, #24]
   2d1dc:	add	sp, sp, #28
   2d1e0:	bx	lr
   2d1e4:	push	{fp, lr}
   2d1e8:	mov	fp, sp
   2d1ec:	sub	sp, sp, #32
   2d1f0:	str	r0, [fp, #-8]
   2d1f4:	str	r1, [fp, #-12]
   2d1f8:	str	r2, [sp, #16]
   2d1fc:	movw	r0, #0
   2d200:	str	r0, [sp, #12]
   2d204:	ldr	r0, [fp, #-8]
   2d208:	ldr	r0, [r0]
   2d20c:	str	r0, [sp, #8]
   2d210:	ldr	r0, [sp, #8]
   2d214:	ldr	r1, [fp, #-8]
   2d218:	ldr	r1, [r1, #4]
   2d21c:	cmp	r0, r1
   2d220:	bcs	2d2bc <__assert_fail@plt+0x1a704>
   2d224:	ldr	r0, [sp, #8]
   2d228:	ldr	r0, [r0]
   2d22c:	movw	r1, #0
   2d230:	cmp	r0, r1
   2d234:	beq	2d2a8 <__assert_fail@plt+0x1a6f0>
   2d238:	ldr	r0, [sp, #8]
   2d23c:	str	r0, [sp, #4]
   2d240:	ldr	r0, [sp, #4]
   2d244:	movw	r1, #0
   2d248:	cmp	r0, r1
   2d24c:	beq	2d2a4 <__assert_fail@plt+0x1a6ec>
   2d250:	ldr	r0, [fp, #-12]
   2d254:	ldr	r1, [sp, #4]
   2d258:	ldr	r1, [r1]
   2d25c:	ldr	r2, [sp, #16]
   2d260:	str	r0, [sp]
   2d264:	mov	r0, r1
   2d268:	mov	r1, r2
   2d26c:	ldr	r2, [sp]
   2d270:	blx	r2
   2d274:	tst	r0, #1
   2d278:	bne	2d288 <__assert_fail@plt+0x1a6d0>
   2d27c:	ldr	r0, [sp, #12]
   2d280:	str	r0, [fp, #-4]
   2d284:	b	2d2c4 <__assert_fail@plt+0x1a70c>
   2d288:	ldr	r0, [sp, #12]
   2d28c:	add	r0, r0, #1
   2d290:	str	r0, [sp, #12]
   2d294:	ldr	r0, [sp, #4]
   2d298:	ldr	r0, [r0, #4]
   2d29c:	str	r0, [sp, #4]
   2d2a0:	b	2d240 <__assert_fail@plt+0x1a688>
   2d2a4:	b	2d2a8 <__assert_fail@plt+0x1a6f0>
   2d2a8:	b	2d2ac <__assert_fail@plt+0x1a6f4>
   2d2ac:	ldr	r0, [sp, #8]
   2d2b0:	add	r0, r0, #8
   2d2b4:	str	r0, [sp, #8]
   2d2b8:	b	2d210 <__assert_fail@plt+0x1a658>
   2d2bc:	ldr	r0, [sp, #12]
   2d2c0:	str	r0, [fp, #-4]
   2d2c4:	ldr	r0, [fp, #-4]
   2d2c8:	mov	sp, fp
   2d2cc:	pop	{fp, pc}
   2d2d0:	sub	sp, sp, #16
   2d2d4:	str	r0, [sp, #12]
   2d2d8:	str	r1, [sp, #8]
   2d2dc:	movw	r0, #0
   2d2e0:	str	r0, [sp, #4]
   2d2e4:	ldr	r0, [sp, #12]
   2d2e8:	ldrb	r0, [r0]
   2d2ec:	strb	r0, [sp, #3]
   2d2f0:	sxtb	r0, r0
   2d2f4:	cmp	r0, #0
   2d2f8:	beq	2d32c <__assert_fail@plt+0x1a774>
   2d2fc:	ldr	r0, [sp, #4]
   2d300:	rsb	r0, r0, r0, lsl #5
   2d304:	ldrb	r1, [sp, #3]
   2d308:	add	r0, r0, r1
   2d30c:	ldr	r1, [sp, #8]
   2d310:	udiv	r2, r0, r1
   2d314:	mls	r0, r2, r1, r0
   2d318:	str	r0, [sp, #4]
   2d31c:	ldr	r0, [sp, #12]
   2d320:	add	r0, r0, #1
   2d324:	str	r0, [sp, #12]
   2d328:	b	2d2e4 <__assert_fail@plt+0x1a72c>
   2d32c:	ldr	r0, [sp, #4]
   2d330:	add	sp, sp, #16
   2d334:	bx	lr
   2d338:	push	{fp, lr}
   2d33c:	mov	fp, sp
   2d340:	sub	sp, sp, #8
   2d344:	movw	r1, #40960	; 0xa000
   2d348:	movt	r1, #7
   2d34c:	str	r0, [sp, #4]
   2d350:	ldr	r0, [sp, #4]
   2d354:	movw	r2, #20
   2d358:	bl	125c4 <memcpy@plt>
   2d35c:	mov	sp, fp
   2d360:	pop	{fp, pc}
   2d364:	push	{fp, lr}
   2d368:	mov	fp, sp
   2d36c:	sub	sp, sp, #24
   2d370:	ldr	ip, [fp, #8]
   2d374:	str	r0, [fp, #-8]
   2d378:	str	r1, [sp, #12]
   2d37c:	str	r2, [sp, #8]
   2d380:	str	r3, [sp, #4]
   2d384:	ldr	r0, [sp, #8]
   2d388:	movw	r1, #0
   2d38c:	cmp	r0, r1
   2d390:	bne	2d3a0 <__assert_fail@plt+0x1a7e8>
   2d394:	movw	r0, #54520	; 0xd4f8
   2d398:	movt	r0, #2
   2d39c:	str	r0, [sp, #8]
   2d3a0:	ldr	r0, [sp, #4]
   2d3a4:	movw	r1, #0
   2d3a8:	cmp	r0, r1
   2d3ac:	bne	2d3bc <__assert_fail@plt+0x1a804>
   2d3b0:	movw	r0, #54580	; 0xd534
   2d3b4:	movt	r0, #2
   2d3b8:	str	r0, [sp, #4]
   2d3bc:	movw	r0, #40	; 0x28
   2d3c0:	bl	527f0 <__assert_fail@plt+0x3fc38>
   2d3c4:	str	r0, [sp]
   2d3c8:	ldr	r0, [sp]
   2d3cc:	movw	r1, #0
   2d3d0:	cmp	r0, r1
   2d3d4:	bne	2d3e4 <__assert_fail@plt+0x1a82c>
   2d3d8:	movw	r0, #0
   2d3dc:	str	r0, [fp, #-4]
   2d3e0:	b	2d4ec <__assert_fail@plt+0x1a934>
   2d3e4:	ldr	r0, [sp, #12]
   2d3e8:	movw	r1, #0
   2d3ec:	cmp	r0, r1
   2d3f0:	bne	2d400 <__assert_fail@plt+0x1a848>
   2d3f4:	movw	r0, #40960	; 0xa000
   2d3f8:	movt	r0, #7
   2d3fc:	str	r0, [sp, #12]
   2d400:	ldr	r0, [sp, #12]
   2d404:	ldr	r1, [sp]
   2d408:	str	r0, [r1, #20]
   2d40c:	ldr	r0, [sp]
   2d410:	bl	2d560 <__assert_fail@plt+0x1a9a8>
   2d414:	tst	r0, #1
   2d418:	bne	2d420 <__assert_fail@plt+0x1a868>
   2d41c:	b	2d4dc <__assert_fail@plt+0x1a924>
   2d420:	ldr	r0, [fp, #-8]
   2d424:	ldr	r1, [sp, #12]
   2d428:	bl	2d6b4 <__assert_fail@plt+0x1aafc>
   2d42c:	ldr	r1, [sp]
   2d430:	str	r0, [r1, #8]
   2d434:	ldr	r0, [sp]
   2d438:	ldr	r0, [r0, #8]
   2d43c:	cmp	r0, #0
   2d440:	bne	2d448 <__assert_fail@plt+0x1a890>
   2d444:	b	2d4dc <__assert_fail@plt+0x1a924>
   2d448:	ldr	r0, [sp]
   2d44c:	ldr	r0, [r0, #8]
   2d450:	movw	r1, #8
   2d454:	bl	4e0e0 <__assert_fail@plt+0x3b528>
   2d458:	ldr	r1, [sp]
   2d45c:	str	r0, [r1]
   2d460:	ldr	r0, [sp]
   2d464:	ldr	r0, [r0]
   2d468:	movw	r1, #0
   2d46c:	cmp	r0, r1
   2d470:	bne	2d478 <__assert_fail@plt+0x1a8c0>
   2d474:	b	2d4dc <__assert_fail@plt+0x1a924>
   2d478:	ldr	r0, [sp]
   2d47c:	ldr	r1, [r0]
   2d480:	ldr	r0, [r0, #8]
   2d484:	add	r0, r1, r0, lsl #3
   2d488:	ldr	r1, [sp]
   2d48c:	str	r0, [r1, #4]
   2d490:	ldr	r0, [sp]
   2d494:	movw	r1, #0
   2d498:	str	r1, [r0, #12]
   2d49c:	ldr	r0, [sp]
   2d4a0:	str	r1, [r0, #16]
   2d4a4:	ldr	r0, [sp, #8]
   2d4a8:	ldr	r2, [sp]
   2d4ac:	str	r0, [r2, #24]
   2d4b0:	ldr	r0, [sp, #4]
   2d4b4:	ldr	r2, [sp]
   2d4b8:	str	r0, [r2, #28]
   2d4bc:	ldr	r0, [fp, #8]
   2d4c0:	ldr	r2, [sp]
   2d4c4:	str	r0, [r2, #32]
   2d4c8:	ldr	r0, [sp]
   2d4cc:	str	r1, [r0, #36]	; 0x24
   2d4d0:	ldr	r0, [sp]
   2d4d4:	str	r0, [fp, #-4]
   2d4d8:	b	2d4ec <__assert_fail@plt+0x1a934>
   2d4dc:	ldr	r0, [sp]
   2d4e0:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   2d4e4:	movw	r0, #0
   2d4e8:	str	r0, [fp, #-4]
   2d4ec:	ldr	r0, [fp, #-4]
   2d4f0:	mov	sp, fp
   2d4f4:	pop	{fp, pc}
   2d4f8:	push	{fp, lr}
   2d4fc:	mov	fp, sp
   2d500:	sub	sp, sp, #16
   2d504:	str	r0, [fp, #-4]
   2d508:	str	r1, [sp, #8]
   2d50c:	ldr	r0, [fp, #-4]
   2d510:	mov	r1, #3
   2d514:	bl	6eba8 <__assert_fail@plt+0x5bff0>
   2d518:	str	r0, [sp, #4]
   2d51c:	ldr	r0, [sp, #4]
   2d520:	ldr	r1, [sp, #8]
   2d524:	udiv	r2, r0, r1
   2d528:	mls	r0, r2, r1, r0
   2d52c:	mov	sp, fp
   2d530:	pop	{fp, pc}
   2d534:	sub	sp, sp, #8
   2d538:	str	r0, [sp, #4]
   2d53c:	str	r1, [sp]
   2d540:	ldr	r0, [sp, #4]
   2d544:	ldr	r1, [sp]
   2d548:	cmp	r0, r1
   2d54c:	movw	r0, #0
   2d550:	moveq	r0, #1
   2d554:	and	r0, r0, #1
   2d558:	add	sp, sp, #8
   2d55c:	bx	lr
   2d560:	sub	sp, sp, #16
   2d564:	str	r0, [sp, #8]
   2d568:	ldr	r0, [sp, #8]
   2d56c:	ldr	r0, [r0, #20]
   2d570:	str	r0, [sp, #4]
   2d574:	ldr	r0, [sp, #4]
   2d578:	movw	r1, #40960	; 0xa000
   2d57c:	movt	r1, #7
   2d580:	cmp	r0, r1
   2d584:	bne	2d598 <__assert_fail@plt+0x1a9e0>
   2d588:	movw	r0, #1
   2d58c:	and	r0, r0, #1
   2d590:	strb	r0, [sp, #15]
   2d594:	b	2d69c <__assert_fail@plt+0x1aae4>
   2d598:	vldr	s0, [pc, #268]	; 2d6ac <__assert_fail@plt+0x1aaf4>
   2d59c:	vstr	s0, [sp]
   2d5a0:	vldr	s0, [sp]
   2d5a4:	ldr	r0, [sp, #4]
   2d5a8:	vldr	s2, [r0, #8]
   2d5ac:	vcmpe.f32	s0, s2
   2d5b0:	vmrs	APSR_nzcv, fpscr
   2d5b4:	bpl	2d680 <__assert_fail@plt+0x1aac8>
   2d5b8:	ldr	r0, [sp, #4]
   2d5bc:	vldr	s0, [r0, #8]
   2d5c0:	vldr	s2, [sp]
   2d5c4:	vmov.f32	s4, #112	; 0x3f800000  1.0
   2d5c8:	vsub.f32	s2, s4, s2
   2d5cc:	vcmpe.f32	s0, s2
   2d5d0:	vmrs	APSR_nzcv, fpscr
   2d5d4:	bpl	2d680 <__assert_fail@plt+0x1aac8>
   2d5d8:	vldr	s0, [sp]
   2d5dc:	vmov.f32	s2, #112	; 0x3f800000  1.0
   2d5e0:	vadd.f32	s0, s2, s0
   2d5e4:	ldr	r0, [sp, #4]
   2d5e8:	vldr	s2, [r0, #12]
   2d5ec:	vcmpe.f32	s0, s2
   2d5f0:	vmrs	APSR_nzcv, fpscr
   2d5f4:	bpl	2d680 <__assert_fail@plt+0x1aac8>
   2d5f8:	vldr	s0, [pc, #176]	; 2d6b0 <__assert_fail@plt+0x1aaf8>
   2d5fc:	ldr	r0, [sp, #4]
   2d600:	vldr	s2, [r0]
   2d604:	vcmpe.f32	s0, s2
   2d608:	vmrs	APSR_nzcv, fpscr
   2d60c:	bhi	2d680 <__assert_fail@plt+0x1aac8>
   2d610:	ldr	r0, [sp, #4]
   2d614:	vldr	s0, [r0]
   2d618:	vldr	s2, [sp]
   2d61c:	vadd.f32	s0, s0, s2
   2d620:	ldr	r0, [sp, #4]
   2d624:	vldr	s2, [r0, #4]
   2d628:	vcmpe.f32	s0, s2
   2d62c:	vmrs	APSR_nzcv, fpscr
   2d630:	bpl	2d680 <__assert_fail@plt+0x1aac8>
   2d634:	ldr	r0, [sp, #4]
   2d638:	vldr	s0, [r0, #4]
   2d63c:	vmov.f32	s2, #112	; 0x3f800000  1.0
   2d640:	vcmpe.f32	s0, s2
   2d644:	vmrs	APSR_nzcv, fpscr
   2d648:	bhi	2d680 <__assert_fail@plt+0x1aac8>
   2d64c:	ldr	r0, [sp, #4]
   2d650:	vldr	s0, [r0]
   2d654:	vldr	s2, [sp]
   2d658:	vadd.f32	s0, s0, s2
   2d65c:	ldr	r0, [sp, #4]
   2d660:	vldr	s2, [r0, #8]
   2d664:	vcmpe.f32	s0, s2
   2d668:	vmrs	APSR_nzcv, fpscr
   2d66c:	bpl	2d680 <__assert_fail@plt+0x1aac8>
   2d670:	movw	r0, #1
   2d674:	and	r0, r0, #1
   2d678:	strb	r0, [sp, #15]
   2d67c:	b	2d69c <__assert_fail@plt+0x1aae4>
   2d680:	ldr	r0, [sp, #8]
   2d684:	movw	r1, #40960	; 0xa000
   2d688:	movt	r1, #7
   2d68c:	str	r1, [r0, #20]
   2d690:	movw	r0, #0
   2d694:	and	r0, r0, #1
   2d698:	strb	r0, [sp, #15]
   2d69c:	ldrb	r0, [sp, #15]
   2d6a0:	and	r0, r0, #1
   2d6a4:	add	sp, sp, #16
   2d6a8:	bx	lr
   2d6ac:	stclcc	12, cr12, [ip, #820]	; 0x334
   2d6b0:	andeq	r0, r0, r0
   2d6b4:	push	{fp, lr}
   2d6b8:	mov	fp, sp
   2d6bc:	sub	sp, sp, #16
   2d6c0:	str	r0, [sp, #8]
   2d6c4:	str	r1, [sp, #4]
   2d6c8:	ldr	r0, [sp, #4]
   2d6cc:	ldrb	r0, [r0, #16]
   2d6d0:	tst	r0, #1
   2d6d4:	bne	2d724 <__assert_fail@plt+0x1ab6c>
   2d6d8:	vldr	s0, [pc, #128]	; 2d760 <__assert_fail@plt+0x1aba8>
   2d6dc:	ldr	r0, [sp, #8]
   2d6e0:	vmov	s2, r0
   2d6e4:	vcvt.f32.u32	s2, s2
   2d6e8:	ldr	r0, [sp, #4]
   2d6ec:	vldr	s4, [r0, #8]
   2d6f0:	vdiv.f32	s2, s2, s4
   2d6f4:	vstr	s2, [sp]
   2d6f8:	vldr	s2, [sp]
   2d6fc:	vcmpe.f32	s0, s2
   2d700:	vmrs	APSR_nzcv, fpscr
   2d704:	bhi	2d714 <__assert_fail@plt+0x1ab5c>
   2d708:	movw	r0, #0
   2d70c:	str	r0, [fp, #-4]
   2d710:	b	2d754 <__assert_fail@plt+0x1ab9c>
   2d714:	vldr	s0, [sp]
   2d718:	vcvt.u32.f32	s0, s0
   2d71c:	vmov	r0, s0
   2d720:	str	r0, [sp, #8]
   2d724:	ldr	r0, [sp, #8]
   2d728:	bl	2e624 <__assert_fail@plt+0x1ba6c>
   2d72c:	ldr	r1, [pc, #48]	; 2d764 <__assert_fail@plt+0x1abac>
   2d730:	str	r0, [sp, #8]
   2d734:	ldr	r0, [sp, #8]
   2d738:	cmp	r1, r0
   2d73c:	bcs	2d74c <__assert_fail@plt+0x1ab94>
   2d740:	movw	r0, #0
   2d744:	str	r0, [fp, #-4]
   2d748:	b	2d754 <__assert_fail@plt+0x1ab9c>
   2d74c:	ldr	r0, [sp, #8]
   2d750:	str	r0, [fp, #-4]
   2d754:	ldr	r0, [fp, #-4]
   2d758:	mov	sp, fp
   2d75c:	pop	{fp, pc}
   2d760:	svcmi	0x00800000
   2d764:	svcne	0x00ffffff
   2d768:	push	{fp, lr}
   2d76c:	mov	fp, sp
   2d770:	sub	sp, sp, #24
   2d774:	str	r0, [fp, #-4]
   2d778:	ldr	r0, [fp, #-4]
   2d77c:	ldr	r0, [r0]
   2d780:	str	r0, [fp, #-8]
   2d784:	ldr	r0, [fp, #-8]
   2d788:	ldr	r1, [fp, #-4]
   2d78c:	ldr	r1, [r1, #4]
   2d790:	cmp	r0, r1
   2d794:	bcs	2d898 <__assert_fail@plt+0x1ace0>
   2d798:	ldr	r0, [fp, #-8]
   2d79c:	ldr	r0, [r0]
   2d7a0:	movw	r1, #0
   2d7a4:	cmp	r0, r1
   2d7a8:	beq	2d884 <__assert_fail@plt+0x1accc>
   2d7ac:	ldr	r0, [fp, #-8]
   2d7b0:	ldr	r0, [r0, #4]
   2d7b4:	str	r0, [sp, #12]
   2d7b8:	ldr	r0, [sp, #12]
   2d7bc:	movw	r1, #0
   2d7c0:	cmp	r0, r1
   2d7c4:	beq	2d83c <__assert_fail@plt+0x1ac84>
   2d7c8:	ldr	r0, [fp, #-4]
   2d7cc:	ldr	r0, [r0, #32]
   2d7d0:	movw	r1, #0
   2d7d4:	cmp	r0, r1
   2d7d8:	beq	2d7fc <__assert_fail@plt+0x1ac44>
   2d7dc:	ldr	r0, [fp, #-4]
   2d7e0:	ldr	r0, [r0, #32]
   2d7e4:	ldr	r1, [sp, #12]
   2d7e8:	ldr	r1, [r1]
   2d7ec:	str	r0, [sp, #4]
   2d7f0:	mov	r0, r1
   2d7f4:	ldr	r1, [sp, #4]
   2d7f8:	blx	r1
   2d7fc:	ldr	r0, [sp, #12]
   2d800:	movw	r1, #0
   2d804:	str	r1, [r0]
   2d808:	ldr	r0, [sp, #12]
   2d80c:	ldr	r0, [r0, #4]
   2d810:	str	r0, [sp, #8]
   2d814:	ldr	r0, [fp, #-4]
   2d818:	ldr	r0, [r0, #36]	; 0x24
   2d81c:	ldr	r1, [sp, #12]
   2d820:	str	r0, [r1, #4]
   2d824:	ldr	r0, [sp, #12]
   2d828:	ldr	r1, [fp, #-4]
   2d82c:	str	r0, [r1, #36]	; 0x24
   2d830:	ldr	r0, [sp, #8]
   2d834:	str	r0, [sp, #12]
   2d838:	b	2d7b8 <__assert_fail@plt+0x1ac00>
   2d83c:	ldr	r0, [fp, #-4]
   2d840:	ldr	r0, [r0, #32]
   2d844:	movw	r1, #0
   2d848:	cmp	r0, r1
   2d84c:	beq	2d870 <__assert_fail@plt+0x1acb8>
   2d850:	ldr	r0, [fp, #-4]
   2d854:	ldr	r0, [r0, #32]
   2d858:	ldr	r1, [fp, #-8]
   2d85c:	ldr	r1, [r1]
   2d860:	str	r0, [sp]
   2d864:	mov	r0, r1
   2d868:	ldr	r1, [sp]
   2d86c:	blx	r1
   2d870:	ldr	r0, [fp, #-8]
   2d874:	movw	r1, #0
   2d878:	str	r1, [r0]
   2d87c:	ldr	r0, [fp, #-8]
   2d880:	str	r1, [r0, #4]
   2d884:	b	2d888 <__assert_fail@plt+0x1acd0>
   2d888:	ldr	r0, [fp, #-8]
   2d88c:	add	r0, r0, #8
   2d890:	str	r0, [fp, #-8]
   2d894:	b	2d784 <__assert_fail@plt+0x1abcc>
   2d898:	ldr	r0, [fp, #-4]
   2d89c:	movw	r1, #0
   2d8a0:	str	r1, [r0, #12]
   2d8a4:	ldr	r0, [fp, #-4]
   2d8a8:	str	r1, [r0, #16]
   2d8ac:	mov	sp, fp
   2d8b0:	pop	{fp, pc}
   2d8b4:	push	{fp, lr}
   2d8b8:	mov	fp, sp
   2d8bc:	sub	sp, sp, #24
   2d8c0:	str	r0, [fp, #-4]
   2d8c4:	ldr	r0, [fp, #-4]
   2d8c8:	ldr	r0, [r0, #32]
   2d8cc:	movw	r1, #0
   2d8d0:	cmp	r0, r1
   2d8d4:	beq	2d980 <__assert_fail@plt+0x1adc8>
   2d8d8:	ldr	r0, [fp, #-4]
   2d8dc:	ldr	r0, [r0, #16]
   2d8e0:	cmp	r0, #0
   2d8e4:	beq	2d980 <__assert_fail@plt+0x1adc8>
   2d8e8:	ldr	r0, [fp, #-4]
   2d8ec:	ldr	r0, [r0]
   2d8f0:	str	r0, [fp, #-8]
   2d8f4:	ldr	r0, [fp, #-8]
   2d8f8:	ldr	r1, [fp, #-4]
   2d8fc:	ldr	r1, [r1, #4]
   2d900:	cmp	r0, r1
   2d904:	bcs	2d97c <__assert_fail@plt+0x1adc4>
   2d908:	ldr	r0, [fp, #-8]
   2d90c:	ldr	r0, [r0]
   2d910:	movw	r1, #0
   2d914:	cmp	r0, r1
   2d918:	beq	2d968 <__assert_fail@plt+0x1adb0>
   2d91c:	ldr	r0, [fp, #-8]
   2d920:	str	r0, [sp, #12]
   2d924:	ldr	r0, [sp, #12]
   2d928:	movw	r1, #0
   2d92c:	cmp	r0, r1
   2d930:	beq	2d964 <__assert_fail@plt+0x1adac>
   2d934:	ldr	r0, [fp, #-4]
   2d938:	ldr	r0, [r0, #32]
   2d93c:	ldr	r1, [sp, #12]
   2d940:	ldr	r1, [r1]
   2d944:	str	r0, [sp, #4]
   2d948:	mov	r0, r1
   2d94c:	ldr	r1, [sp, #4]
   2d950:	blx	r1
   2d954:	ldr	r0, [sp, #12]
   2d958:	ldr	r0, [r0, #4]
   2d95c:	str	r0, [sp, #12]
   2d960:	b	2d924 <__assert_fail@plt+0x1ad6c>
   2d964:	b	2d968 <__assert_fail@plt+0x1adb0>
   2d968:	b	2d96c <__assert_fail@plt+0x1adb4>
   2d96c:	ldr	r0, [fp, #-8]
   2d970:	add	r0, r0, #8
   2d974:	str	r0, [fp, #-8]
   2d978:	b	2d8f4 <__assert_fail@plt+0x1ad3c>
   2d97c:	b	2d980 <__assert_fail@plt+0x1adc8>
   2d980:	ldr	r0, [fp, #-4]
   2d984:	ldr	r0, [r0]
   2d988:	str	r0, [fp, #-8]
   2d98c:	ldr	r0, [fp, #-8]
   2d990:	ldr	r1, [fp, #-4]
   2d994:	ldr	r1, [r1, #4]
   2d998:	cmp	r0, r1
   2d99c:	bcs	2d9f0 <__assert_fail@plt+0x1ae38>
   2d9a0:	ldr	r0, [fp, #-8]
   2d9a4:	ldr	r0, [r0, #4]
   2d9a8:	str	r0, [sp, #12]
   2d9ac:	ldr	r0, [sp, #12]
   2d9b0:	movw	r1, #0
   2d9b4:	cmp	r0, r1
   2d9b8:	beq	2d9dc <__assert_fail@plt+0x1ae24>
   2d9bc:	ldr	r0, [sp, #12]
   2d9c0:	ldr	r0, [r0, #4]
   2d9c4:	str	r0, [sp, #8]
   2d9c8:	ldr	r0, [sp, #12]
   2d9cc:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   2d9d0:	ldr	r0, [sp, #8]
   2d9d4:	str	r0, [sp, #12]
   2d9d8:	b	2d9ac <__assert_fail@plt+0x1adf4>
   2d9dc:	b	2d9e0 <__assert_fail@plt+0x1ae28>
   2d9e0:	ldr	r0, [fp, #-8]
   2d9e4:	add	r0, r0, #8
   2d9e8:	str	r0, [fp, #-8]
   2d9ec:	b	2d98c <__assert_fail@plt+0x1add4>
   2d9f0:	ldr	r0, [fp, #-4]
   2d9f4:	ldr	r0, [r0, #36]	; 0x24
   2d9f8:	str	r0, [sp, #12]
   2d9fc:	ldr	r0, [sp, #12]
   2da00:	movw	r1, #0
   2da04:	cmp	r0, r1
   2da08:	beq	2da2c <__assert_fail@plt+0x1ae74>
   2da0c:	ldr	r0, [sp, #12]
   2da10:	ldr	r0, [r0, #4]
   2da14:	str	r0, [sp, #8]
   2da18:	ldr	r0, [sp, #12]
   2da1c:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   2da20:	ldr	r0, [sp, #8]
   2da24:	str	r0, [sp, #12]
   2da28:	b	2d9fc <__assert_fail@plt+0x1ae44>
   2da2c:	ldr	r0, [fp, #-4]
   2da30:	ldr	r0, [r0]
   2da34:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   2da38:	ldr	r0, [fp, #-4]
   2da3c:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   2da40:	mov	sp, fp
   2da44:	pop	{fp, pc}
   2da48:	push	{fp, lr}
   2da4c:	mov	fp, sp
   2da50:	sub	sp, sp, #64	; 0x40
   2da54:	str	r0, [fp, #-8]
   2da58:	str	r1, [fp, #-12]
   2da5c:	ldr	r0, [fp, #-12]
   2da60:	ldr	r1, [fp, #-8]
   2da64:	ldr	r1, [r1, #20]
   2da68:	bl	2d6b4 <__assert_fail@plt+0x1aafc>
   2da6c:	str	r0, [sp, #4]
   2da70:	ldr	r0, [sp, #4]
   2da74:	cmp	r0, #0
   2da78:	bne	2da8c <__assert_fail@plt+0x1aed4>
   2da7c:	movw	r0, #0
   2da80:	and	r0, r0, #1
   2da84:	strb	r0, [fp, #-1]
   2da88:	b	2dc64 <__assert_fail@plt+0x1b0ac>
   2da8c:	ldr	r0, [sp, #4]
   2da90:	ldr	r1, [fp, #-8]
   2da94:	ldr	r1, [r1, #8]
   2da98:	cmp	r0, r1
   2da9c:	bne	2dab0 <__assert_fail@plt+0x1aef8>
   2daa0:	movw	r0, #1
   2daa4:	and	r0, r0, #1
   2daa8:	strb	r0, [fp, #-1]
   2daac:	b	2dc64 <__assert_fail@plt+0x1b0ac>
   2dab0:	add	r0, sp, #12
   2dab4:	str	r0, [sp, #8]
   2dab8:	ldr	r0, [sp, #4]
   2dabc:	movw	r1, #8
   2dac0:	bl	4e0e0 <__assert_fail@plt+0x3b528>
   2dac4:	ldr	r1, [sp, #8]
   2dac8:	str	r0, [r1]
   2dacc:	ldr	r0, [sp, #8]
   2dad0:	ldr	r0, [r0]
   2dad4:	movw	r1, #0
   2dad8:	cmp	r0, r1
   2dadc:	bne	2daf0 <__assert_fail@plt+0x1af38>
   2dae0:	movw	r0, #0
   2dae4:	and	r0, r0, #1
   2dae8:	strb	r0, [fp, #-1]
   2daec:	b	2dc64 <__assert_fail@plt+0x1b0ac>
   2daf0:	ldr	r0, [sp, #4]
   2daf4:	ldr	r1, [sp, #8]
   2daf8:	str	r0, [r1, #8]
   2dafc:	ldr	r0, [sp, #8]
   2db00:	ldr	r0, [r0]
   2db04:	ldr	r1, [sp, #4]
   2db08:	add	r0, r0, r1, lsl #3
   2db0c:	ldr	r1, [sp, #8]
   2db10:	str	r0, [r1, #4]
   2db14:	ldr	r0, [sp, #8]
   2db18:	movw	r1, #0
   2db1c:	str	r1, [r0, #12]
   2db20:	ldr	r0, [sp, #8]
   2db24:	str	r1, [r0, #16]
   2db28:	ldr	r0, [fp, #-8]
   2db2c:	ldr	r0, [r0, #20]
   2db30:	ldr	r1, [sp, #8]
   2db34:	str	r0, [r1, #20]
   2db38:	ldr	r0, [fp, #-8]
   2db3c:	ldr	r0, [r0, #24]
   2db40:	ldr	r1, [sp, #8]
   2db44:	str	r0, [r1, #24]
   2db48:	ldr	r0, [fp, #-8]
   2db4c:	ldr	r0, [r0, #28]
   2db50:	ldr	r1, [sp, #8]
   2db54:	str	r0, [r1, #28]
   2db58:	ldr	r0, [fp, #-8]
   2db5c:	ldr	r0, [r0, #32]
   2db60:	ldr	r1, [sp, #8]
   2db64:	str	r0, [r1, #32]
   2db68:	ldr	r0, [fp, #-8]
   2db6c:	ldr	r0, [r0, #36]	; 0x24
   2db70:	ldr	r1, [sp, #8]
   2db74:	str	r0, [r1, #36]	; 0x24
   2db78:	ldr	r0, [sp, #8]
   2db7c:	ldr	r1, [fp, #-8]
   2db80:	movw	r2, #0
   2db84:	and	r2, r2, #1
   2db88:	bl	2dc74 <__assert_fail@plt+0x1b0bc>
   2db8c:	tst	r0, #1
   2db90:	beq	2dc00 <__assert_fail@plt+0x1b048>
   2db94:	ldr	r0, [fp, #-8]
   2db98:	ldr	r0, [r0]
   2db9c:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   2dba0:	ldr	r0, [sp, #8]
   2dba4:	ldr	r0, [r0]
   2dba8:	ldr	r1, [fp, #-8]
   2dbac:	str	r0, [r1]
   2dbb0:	ldr	r0, [sp, #8]
   2dbb4:	ldr	r0, [r0, #4]
   2dbb8:	ldr	r1, [fp, #-8]
   2dbbc:	str	r0, [r1, #4]
   2dbc0:	ldr	r0, [sp, #8]
   2dbc4:	ldr	r0, [r0, #8]
   2dbc8:	ldr	r1, [fp, #-8]
   2dbcc:	str	r0, [r1, #8]
   2dbd0:	ldr	r0, [sp, #8]
   2dbd4:	ldr	r0, [r0, #12]
   2dbd8:	ldr	r1, [fp, #-8]
   2dbdc:	str	r0, [r1, #12]
   2dbe0:	ldr	r0, [sp, #8]
   2dbe4:	ldr	r0, [r0, #36]	; 0x24
   2dbe8:	ldr	r1, [fp, #-8]
   2dbec:	str	r0, [r1, #36]	; 0x24
   2dbf0:	movw	r0, #1
   2dbf4:	and	r0, r0, #1
   2dbf8:	strb	r0, [fp, #-1]
   2dbfc:	b	2dc64 <__assert_fail@plt+0x1b0ac>
   2dc00:	ldr	r0, [sp, #8]
   2dc04:	ldr	r0, [r0, #36]	; 0x24
   2dc08:	ldr	r1, [fp, #-8]
   2dc0c:	str	r0, [r1, #36]	; 0x24
   2dc10:	ldr	r0, [fp, #-8]
   2dc14:	ldr	r1, [sp, #8]
   2dc18:	movw	r2, #1
   2dc1c:	and	r2, r2, #1
   2dc20:	bl	2dc74 <__assert_fail@plt+0x1b0bc>
   2dc24:	tst	r0, #1
   2dc28:	beq	2dc48 <__assert_fail@plt+0x1b090>
   2dc2c:	ldr	r0, [fp, #-8]
   2dc30:	ldr	r1, [sp, #8]
   2dc34:	movw	r2, #0
   2dc38:	and	r2, r2, #1
   2dc3c:	bl	2dc74 <__assert_fail@plt+0x1b0bc>
   2dc40:	tst	r0, #1
   2dc44:	bne	2dc4c <__assert_fail@plt+0x1b094>
   2dc48:	bl	12b64 <abort@plt>
   2dc4c:	ldr	r0, [sp, #8]
   2dc50:	ldr	r0, [r0]
   2dc54:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   2dc58:	movw	r0, #0
   2dc5c:	and	r0, r0, #1
   2dc60:	strb	r0, [fp, #-1]
   2dc64:	ldrb	r0, [fp, #-1]
   2dc68:	and	r0, r0, #1
   2dc6c:	mov	sp, fp
   2dc70:	pop	{fp, pc}
   2dc74:	push	{fp, lr}
   2dc78:	mov	fp, sp
   2dc7c:	sub	sp, sp, #40	; 0x28
   2dc80:	str	r0, [fp, #-8]
   2dc84:	str	r1, [fp, #-12]
   2dc88:	and	r0, r2, #1
   2dc8c:	strb	r0, [fp, #-13]
   2dc90:	ldr	r0, [fp, #-12]
   2dc94:	ldr	r0, [r0]
   2dc98:	str	r0, [sp, #20]
   2dc9c:	ldr	r0, [sp, #20]
   2dca0:	ldr	r1, [fp, #-12]
   2dca4:	ldr	r1, [r1, #4]
   2dca8:	cmp	r0, r1
   2dcac:	bcs	2de68 <__assert_fail@plt+0x1b2b0>
   2dcb0:	ldr	r0, [sp, #20]
   2dcb4:	ldr	r0, [r0]
   2dcb8:	movw	r1, #0
   2dcbc:	cmp	r0, r1
   2dcc0:	beq	2de54 <__assert_fail@plt+0x1b29c>
   2dcc4:	ldr	r0, [sp, #20]
   2dcc8:	ldr	r0, [r0, #4]
   2dccc:	str	r0, [sp, #16]
   2dcd0:	ldr	r0, [sp, #16]
   2dcd4:	movw	r1, #0
   2dcd8:	cmp	r0, r1
   2dcdc:	beq	2dd74 <__assert_fail@plt+0x1b1bc>
   2dce0:	ldr	r0, [sp, #16]
   2dce4:	ldr	r0, [r0]
   2dce8:	str	r0, [sp, #8]
   2dcec:	ldr	r0, [fp, #-8]
   2dcf0:	ldr	r1, [sp, #8]
   2dcf4:	bl	2cf20 <__assert_fail@plt+0x1a368>
   2dcf8:	str	r0, [sp, #4]
   2dcfc:	ldr	r0, [sp, #16]
   2dd00:	ldr	r0, [r0, #4]
   2dd04:	str	r0, [sp, #12]
   2dd08:	ldr	r0, [sp, #4]
   2dd0c:	ldr	r0, [r0]
   2dd10:	movw	r1, #0
   2dd14:	cmp	r0, r1
   2dd18:	beq	2dd3c <__assert_fail@plt+0x1b184>
   2dd1c:	ldr	r0, [sp, #4]
   2dd20:	ldr	r0, [r0, #4]
   2dd24:	ldr	r1, [sp, #16]
   2dd28:	str	r0, [r1, #4]
   2dd2c:	ldr	r0, [sp, #16]
   2dd30:	ldr	r1, [sp, #4]
   2dd34:	str	r0, [r1, #4]
   2dd38:	b	2dd64 <__assert_fail@plt+0x1b1ac>
   2dd3c:	ldr	r0, [sp, #8]
   2dd40:	ldr	r1, [sp, #4]
   2dd44:	str	r0, [r1]
   2dd48:	ldr	r0, [fp, #-8]
   2dd4c:	ldr	r1, [r0, #12]
   2dd50:	add	r1, r1, #1
   2dd54:	str	r1, [r0, #12]
   2dd58:	ldr	r0, [fp, #-8]
   2dd5c:	ldr	r1, [sp, #16]
   2dd60:	bl	2e77c <__assert_fail@plt+0x1bbc4>
   2dd64:	b	2dd68 <__assert_fail@plt+0x1b1b0>
   2dd68:	ldr	r0, [sp, #12]
   2dd6c:	str	r0, [sp, #16]
   2dd70:	b	2dcd0 <__assert_fail@plt+0x1b118>
   2dd74:	ldr	r0, [sp, #20]
   2dd78:	ldr	r0, [r0]
   2dd7c:	str	r0, [sp, #8]
   2dd80:	ldr	r0, [sp, #20]
   2dd84:	movw	r1, #0
   2dd88:	str	r1, [r0, #4]
   2dd8c:	ldrb	r0, [fp, #-13]
   2dd90:	tst	r0, #1
   2dd94:	beq	2dd9c <__assert_fail@plt+0x1b1e4>
   2dd98:	b	2de58 <__assert_fail@plt+0x1b2a0>
   2dd9c:	ldr	r0, [fp, #-8]
   2dda0:	ldr	r1, [sp, #8]
   2dda4:	bl	2cf20 <__assert_fail@plt+0x1a368>
   2dda8:	str	r0, [sp, #4]
   2ddac:	ldr	r0, [sp, #4]
   2ddb0:	ldr	r0, [r0]
   2ddb4:	movw	r1, #0
   2ddb8:	cmp	r0, r1
   2ddbc:	beq	2de18 <__assert_fail@plt+0x1b260>
   2ddc0:	ldr	r0, [fp, #-8]
   2ddc4:	bl	2e32c <__assert_fail@plt+0x1b774>
   2ddc8:	str	r0, [sp]
   2ddcc:	ldr	r0, [sp]
   2ddd0:	movw	r1, #0
   2ddd4:	cmp	r0, r1
   2ddd8:	bne	2ddec <__assert_fail@plt+0x1b234>
   2dddc:	movw	r0, #0
   2dde0:	and	r0, r0, #1
   2dde4:	strb	r0, [fp, #-1]
   2dde8:	b	2de74 <__assert_fail@plt+0x1b2bc>
   2ddec:	ldr	r0, [sp, #8]
   2ddf0:	ldr	r1, [sp]
   2ddf4:	str	r0, [r1]
   2ddf8:	ldr	r0, [sp, #4]
   2ddfc:	ldr	r0, [r0, #4]
   2de00:	ldr	r1, [sp]
   2de04:	str	r0, [r1, #4]
   2de08:	ldr	r0, [sp]
   2de0c:	ldr	r1, [sp, #4]
   2de10:	str	r0, [r1, #4]
   2de14:	b	2de34 <__assert_fail@plt+0x1b27c>
   2de18:	ldr	r0, [sp, #8]
   2de1c:	ldr	r1, [sp, #4]
   2de20:	str	r0, [r1]
   2de24:	ldr	r0, [fp, #-8]
   2de28:	ldr	r1, [r0, #12]
   2de2c:	add	r1, r1, #1
   2de30:	str	r1, [r0, #12]
   2de34:	ldr	r0, [sp, #20]
   2de38:	movw	r1, #0
   2de3c:	str	r1, [r0]
   2de40:	ldr	r0, [fp, #-12]
   2de44:	ldr	r1, [r0, #12]
   2de48:	mvn	r2, #0
   2de4c:	add	r1, r1, r2
   2de50:	str	r1, [r0, #12]
   2de54:	b	2de58 <__assert_fail@plt+0x1b2a0>
   2de58:	ldr	r0, [sp, #20]
   2de5c:	add	r0, r0, #8
   2de60:	str	r0, [sp, #20]
   2de64:	b	2dc9c <__assert_fail@plt+0x1b0e4>
   2de68:	movw	r0, #1
   2de6c:	and	r0, r0, #1
   2de70:	strb	r0, [fp, #-1]
   2de74:	ldrb	r0, [fp, #-1]
   2de78:	and	r0, r0, #1
   2de7c:	mov	sp, fp
   2de80:	pop	{fp, pc}
   2de84:	push	{fp, lr}
   2de88:	mov	fp, sp
   2de8c:	sub	sp, sp, #40	; 0x28
   2de90:	str	r0, [fp, #-8]
   2de94:	str	r1, [fp, #-12]
   2de98:	str	r2, [fp, #-16]
   2de9c:	ldr	r0, [fp, #-12]
   2dea0:	movw	r1, #0
   2dea4:	cmp	r0, r1
   2dea8:	bne	2deb0 <__assert_fail@plt+0x1b2f8>
   2deac:	bl	12b64 <abort@plt>
   2deb0:	ldr	r0, [fp, #-8]
   2deb4:	ldr	r1, [fp, #-12]
   2deb8:	add	r2, sp, #16
   2debc:	movw	r3, #0
   2dec0:	and	r3, r3, #1
   2dec4:	bl	2e130 <__assert_fail@plt+0x1b578>
   2dec8:	str	r0, [sp, #20]
   2decc:	movw	r1, #0
   2ded0:	cmp	r0, r1
   2ded4:	beq	2df00 <__assert_fail@plt+0x1b348>
   2ded8:	ldr	r0, [fp, #-16]
   2dedc:	movw	r1, #0
   2dee0:	cmp	r0, r1
   2dee4:	beq	2def4 <__assert_fail@plt+0x1b33c>
   2dee8:	ldr	r0, [sp, #20]
   2deec:	ldr	r1, [fp, #-16]
   2def0:	str	r0, [r1]
   2def4:	movw	r0, #0
   2def8:	str	r0, [fp, #-4]
   2defc:	b	2e120 <__assert_fail@plt+0x1b568>
   2df00:	ldr	r0, [fp, #-8]
   2df04:	ldr	r0, [r0, #12]
   2df08:	vmov	s0, r0
   2df0c:	vcvt.f32.u32	s0, s0
   2df10:	ldr	r0, [fp, #-8]
   2df14:	ldr	r0, [r0, #20]
   2df18:	vldr	s2, [r0, #8]
   2df1c:	ldr	r0, [fp, #-8]
   2df20:	ldr	r0, [r0, #8]
   2df24:	vmov	s4, r0
   2df28:	vcvt.f32.u32	s4, s4
   2df2c:	vmul.f32	s2, s2, s4
   2df30:	vcmpe.f32	s0, s2
   2df34:	vmrs	APSR_nzcv, fpscr
   2df38:	ble	2e06c <__assert_fail@plt+0x1b4b4>
   2df3c:	ldr	r0, [fp, #-8]
   2df40:	bl	2d560 <__assert_fail@plt+0x1a9a8>
   2df44:	ldr	r1, [fp, #-8]
   2df48:	ldr	r1, [r1, #12]
   2df4c:	vmov	s0, r1
   2df50:	vcvt.f32.u32	s0, s0
   2df54:	ldr	r1, [fp, #-8]
   2df58:	ldr	r1, [r1, #20]
   2df5c:	vldr	s2, [r1, #8]
   2df60:	ldr	r1, [fp, #-8]
   2df64:	ldr	r1, [r1, #8]
   2df68:	vmov	s4, r1
   2df6c:	vcvt.f32.u32	s4, s4
   2df70:	vmul.f32	s2, s2, s4
   2df74:	vcmpe.f32	s0, s2
   2df78:	vmrs	APSR_nzcv, fpscr
   2df7c:	ble	2e068 <__assert_fail@plt+0x1b4b0>
   2df80:	ldr	r0, [fp, #-8]
   2df84:	ldr	r0, [r0, #20]
   2df88:	str	r0, [sp, #12]
   2df8c:	ldr	r0, [sp, #12]
   2df90:	ldrb	r0, [r0, #16]
   2df94:	tst	r0, #1
   2df98:	beq	2dfc0 <__assert_fail@plt+0x1b408>
   2df9c:	ldr	r0, [fp, #-8]
   2dfa0:	ldr	r0, [r0, #8]
   2dfa4:	vmov	s0, r0
   2dfa8:	vcvt.f32.u32	s0, s0
   2dfac:	ldr	r0, [sp, #12]
   2dfb0:	vldr	s2, [r0, #12]
   2dfb4:	vmul.f32	s0, s0, s2
   2dfb8:	vstr	s0, [sp]
   2dfbc:	b	2dfec <__assert_fail@plt+0x1b434>
   2dfc0:	ldr	r0, [fp, #-8]
   2dfc4:	ldr	r0, [r0, #8]
   2dfc8:	vmov	s0, r0
   2dfcc:	vcvt.f32.u32	s0, s0
   2dfd0:	ldr	r0, [sp, #12]
   2dfd4:	vldr	s2, [r0, #12]
   2dfd8:	vmul.f32	s0, s0, s2
   2dfdc:	ldr	r0, [sp, #12]
   2dfe0:	vldr	s2, [r0, #8]
   2dfe4:	vmul.f32	s0, s0, s2
   2dfe8:	vstr	s0, [sp]
   2dfec:	vldr	s0, [sp]
   2dff0:	vldr	s2, [pc, #308]	; 2e12c <__assert_fail@plt+0x1b574>
   2dff4:	vstr	s0, [sp, #8]
   2dff8:	vldr	s0, [sp, #8]
   2dffc:	vcmpe.f32	s2, s0
   2e000:	vmrs	APSR_nzcv, fpscr
   2e004:	bhi	2e014 <__assert_fail@plt+0x1b45c>
   2e008:	mvn	r0, #0
   2e00c:	str	r0, [fp, #-4]
   2e010:	b	2e120 <__assert_fail@plt+0x1b568>
   2e014:	ldr	r0, [fp, #-8]
   2e018:	vldr	s0, [sp, #8]
   2e01c:	vcvt.u32.f32	s0, s0
   2e020:	vmov	r1, s0
   2e024:	bl	2da48 <__assert_fail@plt+0x1ae90>
   2e028:	tst	r0, #1
   2e02c:	bne	2e03c <__assert_fail@plt+0x1b484>
   2e030:	mvn	r0, #0
   2e034:	str	r0, [fp, #-4]
   2e038:	b	2e120 <__assert_fail@plt+0x1b568>
   2e03c:	ldr	r0, [fp, #-8]
   2e040:	ldr	r1, [fp, #-12]
   2e044:	add	r2, sp, #16
   2e048:	movw	r3, #0
   2e04c:	and	r3, r3, #1
   2e050:	bl	2e130 <__assert_fail@plt+0x1b578>
   2e054:	movw	r1, #0
   2e058:	cmp	r0, r1
   2e05c:	beq	2e064 <__assert_fail@plt+0x1b4ac>
   2e060:	bl	12b64 <abort@plt>
   2e064:	b	2e068 <__assert_fail@plt+0x1b4b0>
   2e068:	b	2e06c <__assert_fail@plt+0x1b4b4>
   2e06c:	ldr	r0, [sp, #16]
   2e070:	ldr	r0, [r0]
   2e074:	movw	r1, #0
   2e078:	cmp	r0, r1
   2e07c:	beq	2e0ec <__assert_fail@plt+0x1b534>
   2e080:	ldr	r0, [fp, #-8]
   2e084:	bl	2e32c <__assert_fail@plt+0x1b774>
   2e088:	str	r0, [sp, #4]
   2e08c:	ldr	r0, [sp, #4]
   2e090:	movw	r1, #0
   2e094:	cmp	r0, r1
   2e098:	bne	2e0a8 <__assert_fail@plt+0x1b4f0>
   2e09c:	mvn	r0, #0
   2e0a0:	str	r0, [fp, #-4]
   2e0a4:	b	2e120 <__assert_fail@plt+0x1b568>
   2e0a8:	ldr	r0, [fp, #-12]
   2e0ac:	ldr	r1, [sp, #4]
   2e0b0:	str	r0, [r1]
   2e0b4:	ldr	r0, [sp, #16]
   2e0b8:	ldr	r0, [r0, #4]
   2e0bc:	ldr	r1, [sp, #4]
   2e0c0:	str	r0, [r1, #4]
   2e0c4:	ldr	r0, [sp, #4]
   2e0c8:	ldr	r1, [sp, #16]
   2e0cc:	str	r0, [r1, #4]
   2e0d0:	ldr	r0, [fp, #-8]
   2e0d4:	ldr	r1, [r0, #16]
   2e0d8:	add	r1, r1, #1
   2e0dc:	str	r1, [r0, #16]
   2e0e0:	movw	r0, #1
   2e0e4:	str	r0, [fp, #-4]
   2e0e8:	b	2e120 <__assert_fail@plt+0x1b568>
   2e0ec:	ldr	r0, [fp, #-12]
   2e0f0:	ldr	r1, [sp, #16]
   2e0f4:	str	r0, [r1]
   2e0f8:	ldr	r0, [fp, #-8]
   2e0fc:	ldr	r1, [r0, #16]
   2e100:	add	r1, r1, #1
   2e104:	str	r1, [r0, #16]
   2e108:	ldr	r0, [fp, #-8]
   2e10c:	ldr	r1, [r0, #12]
   2e110:	add	r1, r1, #1
   2e114:	str	r1, [r0, #12]
   2e118:	movw	r0, #1
   2e11c:	str	r0, [fp, #-4]
   2e120:	ldr	r0, [fp, #-4]
   2e124:	mov	sp, fp
   2e128:	pop	{fp, pc}
   2e12c:	svcmi	0x00800000
   2e130:	push	{fp, lr}
   2e134:	mov	fp, sp
   2e138:	sub	sp, sp, #56	; 0x38
   2e13c:	str	r0, [fp, #-8]
   2e140:	str	r1, [fp, #-12]
   2e144:	str	r2, [fp, #-16]
   2e148:	and	r0, r3, #1
   2e14c:	strb	r0, [fp, #-17]	; 0xffffffef
   2e150:	ldr	r0, [fp, #-8]
   2e154:	ldr	r1, [fp, #-12]
   2e158:	bl	2cf20 <__assert_fail@plt+0x1a368>
   2e15c:	str	r0, [fp, #-24]	; 0xffffffe8
   2e160:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e164:	ldr	r1, [fp, #-16]
   2e168:	str	r0, [r1]
   2e16c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e170:	ldr	r0, [r0]
   2e174:	movw	r1, #0
   2e178:	cmp	r0, r1
   2e17c:	bne	2e18c <__assert_fail@plt+0x1b5d4>
   2e180:	movw	r0, #0
   2e184:	str	r0, [fp, #-4]
   2e188:	b	2e320 <__assert_fail@plt+0x1b768>
   2e18c:	ldr	r0, [fp, #-12]
   2e190:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e194:	ldr	r1, [r1]
   2e198:	cmp	r0, r1
   2e19c:	beq	2e1d0 <__assert_fail@plt+0x1b618>
   2e1a0:	ldr	r0, [fp, #-8]
   2e1a4:	ldr	r0, [r0, #28]
   2e1a8:	ldr	r1, [fp, #-12]
   2e1ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e1b0:	ldr	r2, [r2]
   2e1b4:	str	r0, [sp, #8]
   2e1b8:	mov	r0, r1
   2e1bc:	mov	r1, r2
   2e1c0:	ldr	r2, [sp, #8]
   2e1c4:	blx	r2
   2e1c8:	tst	r0, #1
   2e1cc:	beq	2e24c <__assert_fail@plt+0x1b694>
   2e1d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e1d4:	ldr	r0, [r0]
   2e1d8:	str	r0, [sp, #24]
   2e1dc:	ldrb	r0, [fp, #-17]	; 0xffffffef
   2e1e0:	tst	r0, #1
   2e1e4:	beq	2e240 <__assert_fail@plt+0x1b688>
   2e1e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e1ec:	ldr	r0, [r0, #4]
   2e1f0:	movw	r1, #0
   2e1f4:	cmp	r0, r1
   2e1f8:	beq	2e230 <__assert_fail@plt+0x1b678>
   2e1fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e200:	ldr	r0, [r0, #4]
   2e204:	str	r0, [sp, #20]
   2e208:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e20c:	ldr	r1, [sp, #20]
   2e210:	ldr	r2, [r1]
   2e214:	str	r2, [r0]
   2e218:	ldr	r1, [r1, #4]
   2e21c:	str	r1, [r0, #4]
   2e220:	ldr	r0, [fp, #-8]
   2e224:	ldr	r1, [sp, #20]
   2e228:	bl	2e77c <__assert_fail@plt+0x1bbc4>
   2e22c:	b	2e23c <__assert_fail@plt+0x1b684>
   2e230:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e234:	movw	r1, #0
   2e238:	str	r1, [r0]
   2e23c:	b	2e240 <__assert_fail@plt+0x1b688>
   2e240:	ldr	r0, [sp, #24]
   2e244:	str	r0, [fp, #-4]
   2e248:	b	2e320 <__assert_fail@plt+0x1b768>
   2e24c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e250:	str	r0, [sp, #28]
   2e254:	ldr	r0, [sp, #28]
   2e258:	ldr	r0, [r0, #4]
   2e25c:	movw	r1, #0
   2e260:	cmp	r0, r1
   2e264:	beq	2e318 <__assert_fail@plt+0x1b760>
   2e268:	ldr	r0, [fp, #-12]
   2e26c:	ldr	r1, [sp, #28]
   2e270:	ldr	r1, [r1, #4]
   2e274:	ldr	r1, [r1]
   2e278:	cmp	r0, r1
   2e27c:	beq	2e2b4 <__assert_fail@plt+0x1b6fc>
   2e280:	ldr	r0, [fp, #-8]
   2e284:	ldr	r0, [r0, #28]
   2e288:	ldr	r1, [fp, #-12]
   2e28c:	ldr	r2, [sp, #28]
   2e290:	ldr	r2, [r2, #4]
   2e294:	ldr	r2, [r2]
   2e298:	str	r0, [sp, #4]
   2e29c:	mov	r0, r1
   2e2a0:	mov	r1, r2
   2e2a4:	ldr	r2, [sp, #4]
   2e2a8:	blx	r2
   2e2ac:	tst	r0, #1
   2e2b0:	beq	2e304 <__assert_fail@plt+0x1b74c>
   2e2b4:	ldr	r0, [sp, #28]
   2e2b8:	ldr	r0, [r0, #4]
   2e2bc:	ldr	r0, [r0]
   2e2c0:	str	r0, [sp, #16]
   2e2c4:	ldrb	r0, [fp, #-17]	; 0xffffffef
   2e2c8:	tst	r0, #1
   2e2cc:	beq	2e2f8 <__assert_fail@plt+0x1b740>
   2e2d0:	ldr	r0, [sp, #28]
   2e2d4:	ldr	r0, [r0, #4]
   2e2d8:	str	r0, [sp, #12]
   2e2dc:	ldr	r0, [sp, #12]
   2e2e0:	ldr	r0, [r0, #4]
   2e2e4:	ldr	r1, [sp, #28]
   2e2e8:	str	r0, [r1, #4]
   2e2ec:	ldr	r0, [fp, #-8]
   2e2f0:	ldr	r1, [sp, #12]
   2e2f4:	bl	2e77c <__assert_fail@plt+0x1bbc4>
   2e2f8:	ldr	r0, [sp, #16]
   2e2fc:	str	r0, [fp, #-4]
   2e300:	b	2e320 <__assert_fail@plt+0x1b768>
   2e304:	b	2e308 <__assert_fail@plt+0x1b750>
   2e308:	ldr	r0, [sp, #28]
   2e30c:	ldr	r0, [r0, #4]
   2e310:	str	r0, [sp, #28]
   2e314:	b	2e254 <__assert_fail@plt+0x1b69c>
   2e318:	movw	r0, #0
   2e31c:	str	r0, [fp, #-4]
   2e320:	ldr	r0, [fp, #-4]
   2e324:	mov	sp, fp
   2e328:	pop	{fp, pc}
   2e32c:	push	{fp, lr}
   2e330:	mov	fp, sp
   2e334:	sub	sp, sp, #8
   2e338:	str	r0, [sp, #4]
   2e33c:	ldr	r0, [sp, #4]
   2e340:	ldr	r0, [r0, #36]	; 0x24
   2e344:	movw	r1, #0
   2e348:	cmp	r0, r1
   2e34c:	beq	2e370 <__assert_fail@plt+0x1b7b8>
   2e350:	ldr	r0, [sp, #4]
   2e354:	ldr	r0, [r0, #36]	; 0x24
   2e358:	str	r0, [sp]
   2e35c:	ldr	r0, [sp]
   2e360:	ldr	r0, [r0, #4]
   2e364:	ldr	r1, [sp, #4]
   2e368:	str	r0, [r1, #36]	; 0x24
   2e36c:	b	2e37c <__assert_fail@plt+0x1b7c4>
   2e370:	movw	r0, #8
   2e374:	bl	527f0 <__assert_fail@plt+0x3fc38>
   2e378:	str	r0, [sp]
   2e37c:	ldr	r0, [sp]
   2e380:	mov	sp, fp
   2e384:	pop	{fp, pc}
   2e388:	push	{fp, lr}
   2e38c:	mov	fp, sp
   2e390:	sub	sp, sp, #24
   2e394:	str	r0, [fp, #-4]
   2e398:	str	r1, [fp, #-8]
   2e39c:	ldr	r0, [fp, #-4]
   2e3a0:	ldr	r1, [fp, #-8]
   2e3a4:	add	r2, sp, #12
   2e3a8:	bl	2de84 <__assert_fail@plt+0x1b2cc>
   2e3ac:	str	r0, [sp, #8]
   2e3b0:	ldr	r0, [sp, #8]
   2e3b4:	cmn	r0, #1
   2e3b8:	bne	2e3c8 <__assert_fail@plt+0x1b810>
   2e3bc:	movw	r0, #0
   2e3c0:	str	r0, [sp, #4]
   2e3c4:	b	2e3f0 <__assert_fail@plt+0x1b838>
   2e3c8:	ldr	r0, [sp, #8]
   2e3cc:	cmp	r0, #0
   2e3d0:	bne	2e3e0 <__assert_fail@plt+0x1b828>
   2e3d4:	ldr	r0, [sp, #12]
   2e3d8:	str	r0, [sp]
   2e3dc:	b	2e3e8 <__assert_fail@plt+0x1b830>
   2e3e0:	ldr	r0, [fp, #-8]
   2e3e4:	str	r0, [sp]
   2e3e8:	ldr	r0, [sp]
   2e3ec:	str	r0, [sp, #4]
   2e3f0:	ldr	r0, [sp, #4]
   2e3f4:	mov	sp, fp
   2e3f8:	pop	{fp, pc}
   2e3fc:	push	{fp, lr}
   2e400:	mov	fp, sp
   2e404:	sub	sp, sp, #40	; 0x28
   2e408:	str	r0, [fp, #-8]
   2e40c:	str	r1, [fp, #-12]
   2e410:	ldr	r0, [fp, #-8]
   2e414:	ldr	r1, [fp, #-12]
   2e418:	add	r2, sp, #20
   2e41c:	movw	r3, #1
   2e420:	and	r3, r3, #1
   2e424:	bl	2e130 <__assert_fail@plt+0x1b578>
   2e428:	str	r0, [fp, #-16]
   2e42c:	ldr	r0, [fp, #-16]
   2e430:	movw	r1, #0
   2e434:	cmp	r0, r1
   2e438:	bne	2e448 <__assert_fail@plt+0x1b890>
   2e43c:	movw	r0, #0
   2e440:	str	r0, [fp, #-4]
   2e444:	b	2e5f0 <__assert_fail@plt+0x1ba38>
   2e448:	ldr	r0, [fp, #-8]
   2e44c:	ldr	r1, [r0, #16]
   2e450:	mvn	r2, #0
   2e454:	add	r1, r1, r2
   2e458:	str	r1, [r0, #16]
   2e45c:	ldr	r0, [sp, #20]
   2e460:	ldr	r0, [r0]
   2e464:	movw	r1, #0
   2e468:	cmp	r0, r1
   2e46c:	bne	2e5e8 <__assert_fail@plt+0x1ba30>
   2e470:	ldr	r0, [fp, #-8]
   2e474:	ldr	r1, [r0, #12]
   2e478:	mvn	r2, #0
   2e47c:	add	r1, r1, r2
   2e480:	str	r1, [r0, #12]
   2e484:	ldr	r0, [fp, #-8]
   2e488:	ldr	r0, [r0, #12]
   2e48c:	vmov	s0, r0
   2e490:	vcvt.f32.u32	s0, s0
   2e494:	ldr	r0, [fp, #-8]
   2e498:	ldr	r0, [r0, #20]
   2e49c:	vldr	s2, [r0]
   2e4a0:	ldr	r0, [fp, #-8]
   2e4a4:	ldr	r0, [r0, #8]
   2e4a8:	vmov	s4, r0
   2e4ac:	vcvt.f32.u32	s4, s4
   2e4b0:	vmul.f32	s2, s2, s4
   2e4b4:	vcmpe.f32	s0, s2
   2e4b8:	vmrs	APSR_nzcv, fpscr
   2e4bc:	bpl	2e5e4 <__assert_fail@plt+0x1ba2c>
   2e4c0:	ldr	r0, [fp, #-8]
   2e4c4:	bl	2d560 <__assert_fail@plt+0x1a9a8>
   2e4c8:	ldr	r1, [fp, #-8]
   2e4cc:	ldr	r1, [r1, #12]
   2e4d0:	vmov	s0, r1
   2e4d4:	vcvt.f32.u32	s0, s0
   2e4d8:	ldr	r1, [fp, #-8]
   2e4dc:	ldr	r1, [r1, #20]
   2e4e0:	vldr	s2, [r1]
   2e4e4:	ldr	r1, [fp, #-8]
   2e4e8:	ldr	r1, [r1, #8]
   2e4ec:	vmov	s4, r1
   2e4f0:	vcvt.f32.u32	s4, s4
   2e4f4:	vmul.f32	s2, s2, s4
   2e4f8:	vcmpe.f32	s0, s2
   2e4fc:	vmrs	APSR_nzcv, fpscr
   2e500:	bpl	2e5e0 <__assert_fail@plt+0x1ba28>
   2e504:	ldr	r0, [fp, #-8]
   2e508:	ldr	r0, [r0, #20]
   2e50c:	str	r0, [sp, #16]
   2e510:	ldr	r0, [sp, #16]
   2e514:	ldrb	r0, [r0, #16]
   2e518:	tst	r0, #1
   2e51c:	beq	2e544 <__assert_fail@plt+0x1b98c>
   2e520:	ldr	r0, [fp, #-8]
   2e524:	ldr	r0, [r0, #8]
   2e528:	vmov	s0, r0
   2e52c:	vcvt.f32.u32	s0, s0
   2e530:	ldr	r0, [sp, #16]
   2e534:	vldr	s2, [r0, #4]
   2e538:	vmul.f32	s0, s0, s2
   2e53c:	vstr	s0, [sp]
   2e540:	b	2e570 <__assert_fail@plt+0x1b9b8>
   2e544:	ldr	r0, [fp, #-8]
   2e548:	ldr	r0, [r0, #8]
   2e54c:	vmov	s0, r0
   2e550:	vcvt.f32.u32	s0, s0
   2e554:	ldr	r0, [sp, #16]
   2e558:	vldr	s2, [r0, #4]
   2e55c:	vmul.f32	s0, s0, s2
   2e560:	ldr	r0, [sp, #16]
   2e564:	vldr	s2, [r0, #8]
   2e568:	vmul.f32	s0, s0, s2
   2e56c:	vstr	s0, [sp]
   2e570:	vldr	s0, [sp]
   2e574:	vcvt.u32.f32	s0, s0
   2e578:	vmov	r0, s0
   2e57c:	str	r0, [sp, #12]
   2e580:	ldr	r0, [fp, #-8]
   2e584:	ldr	r1, [sp, #12]
   2e588:	bl	2da48 <__assert_fail@plt+0x1ae90>
   2e58c:	tst	r0, #1
   2e590:	bne	2e5dc <__assert_fail@plt+0x1ba24>
   2e594:	ldr	r0, [fp, #-8]
   2e598:	ldr	r0, [r0, #36]	; 0x24
   2e59c:	str	r0, [sp, #8]
   2e5a0:	ldr	r0, [sp, #8]
   2e5a4:	movw	r1, #0
   2e5a8:	cmp	r0, r1
   2e5ac:	beq	2e5d0 <__assert_fail@plt+0x1ba18>
   2e5b0:	ldr	r0, [sp, #8]
   2e5b4:	ldr	r0, [r0, #4]
   2e5b8:	str	r0, [sp, #4]
   2e5bc:	ldr	r0, [sp, #8]
   2e5c0:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   2e5c4:	ldr	r0, [sp, #4]
   2e5c8:	str	r0, [sp, #8]
   2e5cc:	b	2e5a0 <__assert_fail@plt+0x1b9e8>
   2e5d0:	ldr	r0, [fp, #-8]
   2e5d4:	movw	r1, #0
   2e5d8:	str	r1, [r0, #36]	; 0x24
   2e5dc:	b	2e5e0 <__assert_fail@plt+0x1ba28>
   2e5e0:	b	2e5e4 <__assert_fail@plt+0x1ba2c>
   2e5e4:	b	2e5e8 <__assert_fail@plt+0x1ba30>
   2e5e8:	ldr	r0, [fp, #-16]
   2e5ec:	str	r0, [fp, #-4]
   2e5f0:	ldr	r0, [fp, #-4]
   2e5f4:	mov	sp, fp
   2e5f8:	pop	{fp, pc}
   2e5fc:	push	{fp, lr}
   2e600:	mov	fp, sp
   2e604:	sub	sp, sp, #8
   2e608:	str	r0, [sp, #4]
   2e60c:	str	r1, [sp]
   2e610:	ldr	r0, [sp, #4]
   2e614:	ldr	r1, [sp]
   2e618:	bl	2e3fc <__assert_fail@plt+0x1b844>
   2e61c:	mov	sp, fp
   2e620:	pop	{fp, pc}
   2e624:	push	{fp, lr}
   2e628:	mov	fp, sp
   2e62c:	sub	sp, sp, #8
   2e630:	str	r0, [sp, #4]
   2e634:	ldr	r0, [sp, #4]
   2e638:	cmp	r0, #10
   2e63c:	bcs	2e648 <__assert_fail@plt+0x1ba90>
   2e640:	movw	r0, #10
   2e644:	str	r0, [sp, #4]
   2e648:	ldr	r0, [sp, #4]
   2e64c:	orr	r0, r0, #1
   2e650:	str	r0, [sp, #4]
   2e654:	ldr	r0, [sp, #4]
   2e658:	mvn	r1, #0
   2e65c:	cmp	r1, r0
   2e660:	movw	r0, #0
   2e664:	str	r0, [sp]
   2e668:	beq	2e680 <__assert_fail@plt+0x1bac8>
   2e66c:	ldr	r0, [sp, #4]
   2e670:	bl	2e6a8 <__assert_fail@plt+0x1baf0>
   2e674:	mvn	r1, #0
   2e678:	eor	r0, r0, r1
   2e67c:	str	r0, [sp]
   2e680:	ldr	r0, [sp]
   2e684:	tst	r0, #1
   2e688:	beq	2e69c <__assert_fail@plt+0x1bae4>
   2e68c:	ldr	r0, [sp, #4]
   2e690:	add	r0, r0, #2
   2e694:	str	r0, [sp, #4]
   2e698:	b	2e654 <__assert_fail@plt+0x1ba9c>
   2e69c:	ldr	r0, [sp, #4]
   2e6a0:	mov	sp, fp
   2e6a4:	pop	{fp, pc}
   2e6a8:	sub	sp, sp, #16
   2e6ac:	str	r0, [sp, #12]
   2e6b0:	movw	r0, #3
   2e6b4:	str	r0, [sp, #8]
   2e6b8:	ldr	r0, [sp, #8]
   2e6bc:	ldr	r1, [sp, #8]
   2e6c0:	mul	r0, r0, r1
   2e6c4:	str	r0, [sp, #4]
   2e6c8:	ldr	r0, [sp, #4]
   2e6cc:	ldr	r1, [sp, #12]
   2e6d0:	cmp	r0, r1
   2e6d4:	movw	r0, #0
   2e6d8:	str	r0, [sp]
   2e6dc:	bcs	2e700 <__assert_fail@plt+0x1bb48>
   2e6e0:	ldr	r0, [sp, #12]
   2e6e4:	ldr	r1, [sp, #8]
   2e6e8:	udiv	r2, r0, r1
   2e6ec:	mls	r0, r2, r1, r0
   2e6f0:	cmp	r0, #0
   2e6f4:	movw	r0, #0
   2e6f8:	movne	r0, #1
   2e6fc:	str	r0, [sp]
   2e700:	ldr	r0, [sp]
   2e704:	tst	r0, #1
   2e708:	beq	2e73c <__assert_fail@plt+0x1bb84>
   2e70c:	ldr	r0, [sp, #8]
   2e710:	add	r0, r0, #1
   2e714:	str	r0, [sp, #8]
   2e718:	ldr	r0, [sp, #8]
   2e71c:	lsl	r0, r0, #2
   2e720:	ldr	r1, [sp, #4]
   2e724:	add	r0, r1, r0
   2e728:	str	r0, [sp, #4]
   2e72c:	ldr	r0, [sp, #8]
   2e730:	add	r0, r0, #1
   2e734:	str	r0, [sp, #8]
   2e738:	b	2e6c8 <__assert_fail@plt+0x1bb10>
   2e73c:	ldr	r0, [sp, #12]
   2e740:	ldr	r1, [sp, #8]
   2e744:	udiv	r2, r0, r1
   2e748:	mls	r0, r2, r1, r0
   2e74c:	cmp	r0, #0
   2e750:	movw	r0, #0
   2e754:	movne	r0, #1
   2e758:	tst	r0, #1
   2e75c:	movw	r0, #1
   2e760:	moveq	r0, #0
   2e764:	cmp	r0, #0
   2e768:	movw	r0, #0
   2e76c:	movne	r0, #1
   2e770:	and	r0, r0, #1
   2e774:	add	sp, sp, #16
   2e778:	bx	lr
   2e77c:	sub	sp, sp, #8
   2e780:	str	r0, [sp, #4]
   2e784:	str	r1, [sp]
   2e788:	ldr	r0, [sp]
   2e78c:	movw	r1, #0
   2e790:	str	r1, [r0]
   2e794:	ldr	r0, [sp, #4]
   2e798:	ldr	r0, [r0, #36]	; 0x24
   2e79c:	ldr	r1, [sp]
   2e7a0:	str	r0, [r1, #4]
   2e7a4:	ldr	r0, [sp]
   2e7a8:	ldr	r1, [sp, #4]
   2e7ac:	str	r0, [r1, #36]	; 0x24
   2e7b0:	add	sp, sp, #8
   2e7b4:	bx	lr
   2e7b8:	push	{r4, r5, fp, lr}
   2e7bc:	add	fp, sp, #8
   2e7c0:	sub	sp, sp, #288	; 0x120
   2e7c4:	ldr	ip, [fp, #20]
   2e7c8:	ldr	lr, [fp, #16]
   2e7cc:	ldr	r4, [fp, #12]
   2e7d0:	ldr	r5, [fp, #8]
   2e7d4:	str	r0, [fp, #-16]
   2e7d8:	str	r1, [fp, #-12]
   2e7dc:	str	r2, [fp, #-20]	; 0xffffffec
   2e7e0:	str	r3, [fp, #-24]	; 0xffffffe8
   2e7e4:	str	r4, [fp, #-28]	; 0xffffffe4
   2e7e8:	str	r5, [fp, #-32]	; 0xffffffe0
   2e7ec:	str	ip, [fp, #-36]	; 0xffffffdc
   2e7f0:	str	lr, [fp, #-40]	; 0xffffffd8
   2e7f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e7f8:	and	r0, r0, #3
   2e7fc:	str	r0, [fp, #-44]	; 0xffffffd4
   2e800:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e804:	and	r0, r0, #32
   2e808:	cmp	r0, #0
   2e80c:	movw	r0, #0
   2e810:	movne	r0, #1
   2e814:	tst	r0, #1
   2e818:	movw	r0, #1024	; 0x400
   2e81c:	moveq	r0, #1000	; 0x3e8
   2e820:	str	r0, [fp, #-48]	; 0xffffffd0
   2e824:	mvn	r0, #0
   2e828:	str	r0, [fp, #-64]	; 0xffffffc0
   2e82c:	movw	r0, #8
   2e830:	str	r0, [fp, #-68]	; 0xffffffbc
   2e834:	movw	r0, #26652	; 0x681c
   2e838:	movt	r0, #7
   2e83c:	str	r0, [fp, #-88]	; 0xffffffa8
   2e840:	movw	r0, #1
   2e844:	str	r0, [fp, #-92]	; 0xffffffa4
   2e848:	movw	r0, #29909	; 0x74d5
   2e84c:	movt	r0, #7
   2e850:	str	r0, [fp, #-96]	; 0xffffffa0
   2e854:	str	r0, [fp, #-100]	; 0xffffff9c
   2e858:	bl	12a50 <localeconv@plt>
   2e85c:	str	r0, [fp, #-104]	; 0xffffff98
   2e860:	ldr	r0, [fp, #-104]	; 0xffffff98
   2e864:	ldr	r0, [r0]
   2e868:	bl	12888 <strlen@plt>
   2e86c:	str	r0, [fp, #-108]	; 0xffffff94
   2e870:	ldr	r0, [fp, #-108]	; 0xffffff94
   2e874:	movw	r1, #0
   2e878:	cmp	r1, r0
   2e87c:	bcs	2e8a0 <__assert_fail@plt+0x1bce8>
   2e880:	ldr	r0, [fp, #-108]	; 0xffffff94
   2e884:	cmp	r0, #16
   2e888:	bhi	2e8a0 <__assert_fail@plt+0x1bce8>
   2e88c:	ldr	r0, [fp, #-104]	; 0xffffff98
   2e890:	ldr	r0, [r0]
   2e894:	str	r0, [fp, #-88]	; 0xffffffa8
   2e898:	ldr	r0, [fp, #-108]	; 0xffffff94
   2e89c:	str	r0, [fp, #-92]	; 0xffffffa4
   2e8a0:	ldr	r0, [fp, #-104]	; 0xffffff98
   2e8a4:	ldr	r0, [r0, #8]
   2e8a8:	str	r0, [fp, #-96]	; 0xffffffa0
   2e8ac:	ldr	r0, [fp, #-104]	; 0xffffff98
   2e8b0:	ldr	r0, [r0, #4]
   2e8b4:	bl	12888 <strlen@plt>
   2e8b8:	cmp	r0, #16
   2e8bc:	bhi	2e8cc <__assert_fail@plt+0x1bd14>
   2e8c0:	ldr	r0, [fp, #-104]	; 0xffffff98
   2e8c4:	ldr	r0, [r0, #4]
   2e8c8:	str	r0, [fp, #-100]	; 0xffffff9c
   2e8cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   2e8d0:	movw	r1, #647	; 0x287
   2e8d4:	add	r0, r0, r1
   2e8d8:	str	r0, [fp, #-76]	; 0xffffffb4
   2e8dc:	ldr	r0, [fp, #-76]	; 0xffffffb4
   2e8e0:	str	r0, [fp, #-72]	; 0xffffffb8
   2e8e4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2e8e8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2e8ec:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2e8f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e8f4:	subs	r0, r2, r0
   2e8f8:	sbcs	r1, r3, r1
   2e8fc:	bcc	2e9b4 <__assert_fail@plt+0x1bdfc>
   2e900:	b	2e904 <__assert_fail@plt+0x1bd4c>
   2e904:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2e908:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2e90c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2e910:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2e914:	bl	7540c <__assert_fail@plt+0x62854>
   2e918:	orr	r2, r2, r3
   2e91c:	cmp	r2, #0
   2e920:	bne	2e9b0 <__assert_fail@plt+0x1bdf8>
   2e924:	b	2e928 <__assert_fail@plt+0x1bd70>
   2e928:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2e92c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2e930:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2e934:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2e938:	bl	7540c <__assert_fail@plt+0x62854>
   2e93c:	str	r1, [fp, #-116]	; 0xffffff8c
   2e940:	str	r0, [fp, #-120]	; 0xffffff88
   2e944:	ldr	r0, [fp, #-16]
   2e948:	ldr	r1, [fp, #-12]
   2e94c:	ldr	r2, [fp, #-120]	; 0xffffff88
   2e950:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2e954:	umull	ip, lr, r0, r2
   2e958:	mla	r0, r0, r3, lr
   2e95c:	mla	r0, r1, r2, r0
   2e960:	str	ip, [fp, #-56]	; 0xffffffc8
   2e964:	str	r0, [fp, #-52]	; 0xffffffcc
   2e968:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2e96c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2e970:	ldr	r2, [fp, #-120]	; 0xffffff88
   2e974:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2e978:	bl	7540c <__assert_fail@plt+0x62854>
   2e97c:	ldr	r2, [fp, #-16]
   2e980:	ldr	r3, [fp, #-12]
   2e984:	eor	r1, r1, r3
   2e988:	eor	r0, r0, r2
   2e98c:	orr	r0, r0, r1
   2e990:	cmp	r0, #0
   2e994:	bne	2e9ac <__assert_fail@plt+0x1bdf4>
   2e998:	b	2e99c <__assert_fail@plt+0x1bde4>
   2e99c:	movw	r0, #0
   2e9a0:	str	r0, [fp, #-60]	; 0xffffffc4
   2e9a4:	str	r0, [fp, #-84]	; 0xffffffac
   2e9a8:	b	2eddc <__assert_fail@plt+0x1c224>
   2e9ac:	b	2e9b0 <__assert_fail@plt+0x1bdf8>
   2e9b0:	b	2eb40 <__assert_fail@plt+0x1bf88>
   2e9b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2e9b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2e9bc:	orr	r0, r0, r1
   2e9c0:	cmp	r0, #0
   2e9c4:	beq	2eb3c <__assert_fail@plt+0x1bf84>
   2e9c8:	b	2e9cc <__assert_fail@plt+0x1be14>
   2e9cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2e9d0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2e9d4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2e9d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e9dc:	bl	7540c <__assert_fail@plt+0x62854>
   2e9e0:	orr	r2, r2, r3
   2e9e4:	cmp	r2, #0
   2e9e8:	bne	2eb3c <__assert_fail@plt+0x1bf84>
   2e9ec:	b	2e9f0 <__assert_fail@plt+0x1be38>
   2e9f0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2e9f4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2e9f8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2e9fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ea00:	bl	7540c <__assert_fail@plt+0x62854>
   2ea04:	str	r1, [fp, #-124]	; 0xffffff84
   2ea08:	str	r0, [fp, #-128]	; 0xffffff80
   2ea0c:	ldr	r0, [fp, #-16]
   2ea10:	ldr	r1, [fp, #-12]
   2ea14:	ldr	r2, [fp, #-128]	; 0xffffff80
   2ea18:	ldr	r3, [fp, #-124]	; 0xffffff84
   2ea1c:	bl	7540c <__assert_fail@plt+0x62854>
   2ea20:	mov	ip, #10
   2ea24:	umull	r2, ip, r2, ip
   2ea28:	add	r3, r3, r3, lsl #2
   2ea2c:	add	r3, ip, r3, lsl #1
   2ea30:	str	r2, [fp, #-136]	; 0xffffff78
   2ea34:	str	r3, [fp, #-132]	; 0xffffff7c
   2ea38:	ldr	r2, [fp, #-136]	; 0xffffff78
   2ea3c:	ldr	r3, [fp, #-132]	; 0xffffff7c
   2ea40:	ldr	ip, [fp, #-128]	; 0xffffff80
   2ea44:	ldr	lr, [fp, #-124]	; 0xffffff84
   2ea48:	str	r0, [sp, #92]	; 0x5c
   2ea4c:	mov	r0, r2
   2ea50:	str	r1, [sp, #88]	; 0x58
   2ea54:	mov	r1, r3
   2ea58:	mov	r2, ip
   2ea5c:	mov	r3, lr
   2ea60:	bl	7540c <__assert_fail@plt+0x62854>
   2ea64:	lsl	r3, r3, #1
   2ea68:	orr	r3, r3, r2, lsr #31
   2ea6c:	lsl	r2, r2, #1
   2ea70:	str	r2, [fp, #-144]	; 0xffffff70
   2ea74:	str	r3, [fp, #-140]	; 0xffffff74
   2ea78:	ldr	r2, [fp, #-16]
   2ea7c:	ldr	r3, [fp, #-12]
   2ea80:	ldr	ip, [fp, #-128]	; 0xffffff80
   2ea84:	ldr	lr, [fp, #-124]	; 0xffffff84
   2ea88:	str	r0, [sp, #84]	; 0x54
   2ea8c:	mov	r0, r2
   2ea90:	str	r1, [sp, #80]	; 0x50
   2ea94:	mov	r1, r3
   2ea98:	mov	r2, ip
   2ea9c:	mov	r3, lr
   2eaa0:	bl	7540c <__assert_fail@plt+0x62854>
   2eaa4:	str	r1, [fp, #-52]	; 0xffffffcc
   2eaa8:	str	r0, [fp, #-56]	; 0xffffffc8
   2eaac:	ldr	r0, [fp, #-136]	; 0xffffff78
   2eab0:	ldr	r1, [fp, #-132]	; 0xffffff7c
   2eab4:	ldr	r2, [fp, #-128]	; 0xffffff80
   2eab8:	ldr	r3, [fp, #-124]	; 0xffffff84
   2eabc:	bl	7540c <__assert_fail@plt+0x62854>
   2eac0:	str	r0, [fp, #-60]	; 0xffffffc4
   2eac4:	ldr	r0, [fp, #-144]	; 0xffffff70
   2eac8:	ldr	r1, [fp, #-140]	; 0xffffff74
   2eacc:	ldr	r2, [fp, #-128]	; 0xffffff80
   2ead0:	ldr	r3, [fp, #-124]	; 0xffffff84
   2ead4:	subs	r0, r0, r2
   2ead8:	sbcs	r1, r1, r3
   2eadc:	bcs	2eb04 <__assert_fail@plt+0x1bf4c>
   2eae0:	b	2eae4 <__assert_fail@plt+0x1bf2c>
   2eae4:	ldr	r0, [fp, #-144]	; 0xffffff70
   2eae8:	ldr	r1, [fp, #-140]	; 0xffffff74
   2eaec:	orr	r0, r0, r1
   2eaf0:	cmp	r0, #0
   2eaf4:	movwne	r0, #1
   2eaf8:	and	r0, r0, #1
   2eafc:	str	r0, [sp, #76]	; 0x4c
   2eb00:	b	2eb30 <__assert_fail@plt+0x1bf78>
   2eb04:	ldr	r0, [fp, #-128]	; 0xffffff80
   2eb08:	ldr	r1, [fp, #-124]	; 0xffffff84
   2eb0c:	ldr	r2, [fp, #-144]	; 0xffffff70
   2eb10:	ldr	r3, [fp, #-140]	; 0xffffff74
   2eb14:	subs	r0, r0, r2
   2eb18:	sbcs	r1, r1, r3
   2eb1c:	mov	r2, #0
   2eb20:	movwcc	r2, #1
   2eb24:	and	r2, r2, #1
   2eb28:	add	r2, r2, #2
   2eb2c:	str	r2, [sp, #76]	; 0x4c
   2eb30:	ldr	r0, [sp, #76]	; 0x4c
   2eb34:	str	r0, [fp, #-84]	; 0xffffffac
   2eb38:	b	2eddc <__assert_fail@plt+0x1c224>
   2eb3c:	b	2eb40 <__assert_fail@plt+0x1bf88>
   2eb40:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2eb44:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2eb48:	bl	752c4 <__assert_fail@plt+0x6270c>
   2eb4c:	str	r0, [sp, #144]	; 0x90
   2eb50:	str	r1, [sp, #148]	; 0x94
   2eb54:	ldr	r0, [fp, #-16]
   2eb58:	ldr	r1, [fp, #-12]
   2eb5c:	bl	752c4 <__assert_fail@plt+0x6270c>
   2eb60:	vmov	d16, r0, r1
   2eb64:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2eb68:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2eb6c:	vstr	d16, [sp, #64]	; 0x40
   2eb70:	bl	752c4 <__assert_fail@plt+0x6270c>
   2eb74:	vmov	d16, r0, r1
   2eb78:	vldr	d17, [sp, #144]	; 0x90
   2eb7c:	vdiv.f64	d16, d16, d17
   2eb80:	vldr	d17, [sp, #64]	; 0x40
   2eb84:	vmul.f64	d16, d17, d16
   2eb88:	vstr	d16, [sp, #136]	; 0x88
   2eb8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2eb90:	and	r0, r0, #16
   2eb94:	cmp	r0, #0
   2eb98:	bne	2ebe8 <__assert_fail@plt+0x1c030>
   2eb9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2eba0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2eba4:	vldr	d0, [sp, #136]	; 0x88
   2eba8:	str	r0, [sp, #60]	; 0x3c
   2ebac:	mov	r0, r1
   2ebb0:	bl	2f410 <__assert_fail@plt+0x1c858>
   2ebb4:	ldr	r0, [sp, #60]	; 0x3c
   2ebb8:	movw	r1, #40980	; 0xa014
   2ebbc:	movt	r1, #7
   2ebc0:	vmov	r2, r3, d0
   2ebc4:	bl	12a5c <sprintf@plt>
   2ebc8:	ldr	r1, [fp, #-20]	; 0xffffffec
   2ebcc:	str	r0, [sp, #56]	; 0x38
   2ebd0:	mov	r0, r1
   2ebd4:	bl	12888 <strlen@plt>
   2ebd8:	str	r0, [sp, #132]	; 0x84
   2ebdc:	movw	r0, #0
   2ebe0:	str	r0, [sp, #128]	; 0x80
   2ebe4:	b	2ed88 <__assert_fail@plt+0x1c1d0>
   2ebe8:	vmov.f64	d16, #112	; 0x3f800000  1.0
   2ebec:	vstr	d16, [sp, #120]	; 0x78
   2ebf0:	movw	r0, #0
   2ebf4:	str	r0, [fp, #-64]	; 0xffffffc0
   2ebf8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2ebfc:	vmov	s0, r0
   2ec00:	vcvt.f64.u32	d16, s0
   2ec04:	vldr	d17, [sp, #120]	; 0x78
   2ec08:	vmul.f64	d16, d17, d16
   2ec0c:	vstr	d16, [sp, #120]	; 0x78
   2ec10:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2ec14:	add	r0, r0, #1
   2ec18:	str	r0, [fp, #-64]	; 0xffffffc0
   2ec1c:	vldr	d16, [sp, #120]	; 0x78
   2ec20:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2ec24:	vmov	s0, r0
   2ec28:	vcvt.f64.u32	d17, s0
   2ec2c:	vmul.f64	d16, d16, d17
   2ec30:	vldr	d17, [sp, #136]	; 0x88
   2ec34:	vcmpe.f64	d16, d17
   2ec38:	vmrs	APSR_nzcv, fpscr
   2ec3c:	movw	r0, #0
   2ec40:	str	r0, [sp, #52]	; 0x34
   2ec44:	bhi	2ec60 <__assert_fail@plt+0x1c0a8>
   2ec48:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2ec4c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   2ec50:	cmp	r0, r1
   2ec54:	movw	r0, #0
   2ec58:	movlt	r0, #1
   2ec5c:	str	r0, [sp, #52]	; 0x34
   2ec60:	ldr	r0, [sp, #52]	; 0x34
   2ec64:	tst	r0, #1
   2ec68:	bne	2ebf8 <__assert_fail@plt+0x1c040>
   2ec6c:	vldr	d16, [sp, #120]	; 0x78
   2ec70:	vldr	d17, [sp, #136]	; 0x88
   2ec74:	vdiv.f64	d16, d17, d16
   2ec78:	vstr	d16, [sp, #136]	; 0x88
   2ec7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ec80:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2ec84:	vldr	d0, [sp, #136]	; 0x88
   2ec88:	str	r0, [sp, #48]	; 0x30
   2ec8c:	mov	r0, r1
   2ec90:	bl	2f410 <__assert_fail@plt+0x1c858>
   2ec94:	ldr	r0, [sp, #48]	; 0x30
   2ec98:	movw	r1, #40986	; 0xa01a
   2ec9c:	movt	r1, #7
   2eca0:	vmov	r2, r3, d0
   2eca4:	bl	12a5c <sprintf@plt>
   2eca8:	ldr	r1, [fp, #-20]	; 0xffffffec
   2ecac:	str	r0, [sp, #44]	; 0x2c
   2ecb0:	mov	r0, r1
   2ecb4:	bl	12888 <strlen@plt>
   2ecb8:	str	r0, [sp, #132]	; 0x84
   2ecbc:	ldr	r0, [fp, #-92]	; 0xffffffa4
   2ecc0:	add	r0, r0, #1
   2ecc4:	str	r0, [sp, #128]	; 0x80
   2ecc8:	ldr	r0, [sp, #128]	; 0x80
   2eccc:	add	r0, r0, #1
   2ecd0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ecd4:	and	r1, r1, #32
   2ecd8:	cmp	r1, #0
   2ecdc:	movw	r1, #0
   2ece0:	movne	r1, #1
   2ece4:	mvn	r2, #0
   2ece8:	eor	r1, r1, r2
   2ecec:	and	r1, r1, #1
   2ecf0:	add	r0, r0, r1
   2ecf4:	ldr	r1, [sp, #132]	; 0x84
   2ecf8:	cmp	r0, r1
   2ecfc:	bcc	2ed2c <__assert_fail@plt+0x1c174>
   2ed00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ed04:	and	r0, r0, #8
   2ed08:	cmp	r0, #0
   2ed0c:	beq	2ed84 <__assert_fail@plt+0x1c1cc>
   2ed10:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ed14:	ldr	r1, [sp, #132]	; 0x84
   2ed18:	sub	r1, r1, #1
   2ed1c:	add	r0, r0, r1
   2ed20:	ldrb	r0, [r0]
   2ed24:	cmp	r0, #48	; 0x30
   2ed28:	bne	2ed84 <__assert_fail@plt+0x1c1cc>
   2ed2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ed30:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2ed34:	vldr	d16, [sp, #136]	; 0x88
   2ed38:	vmov.f64	d17, #36	; 0x41200000  10.0
   2ed3c:	vmul.f64	d0, d16, d17
   2ed40:	str	r0, [sp, #40]	; 0x28
   2ed44:	mov	r0, r1
   2ed48:	bl	2f410 <__assert_fail@plt+0x1c858>
   2ed4c:	vmov.f64	d16, #36	; 0x41200000  10.0
   2ed50:	vdiv.f64	d16, d0, d16
   2ed54:	ldr	r0, [sp, #40]	; 0x28
   2ed58:	movw	r1, #40980	; 0xa014
   2ed5c:	movt	r1, #7
   2ed60:	vmov	r2, r3, d16
   2ed64:	bl	12a5c <sprintf@plt>
   2ed68:	ldr	r1, [fp, #-20]	; 0xffffffec
   2ed6c:	str	r0, [sp, #36]	; 0x24
   2ed70:	mov	r0, r1
   2ed74:	bl	12888 <strlen@plt>
   2ed78:	str	r0, [sp, #132]	; 0x84
   2ed7c:	movw	r0, #0
   2ed80:	str	r0, [sp, #128]	; 0x80
   2ed84:	b	2ed88 <__assert_fail@plt+0x1c1d0>
   2ed88:	ldr	r0, [fp, #-76]	; 0xffffffb4
   2ed8c:	ldr	r1, [sp, #132]	; 0x84
   2ed90:	movw	r2, #0
   2ed94:	sub	r1, r2, r1
   2ed98:	add	r0, r0, r1
   2ed9c:	str	r0, [fp, #-72]	; 0xffffffb8
   2eda0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2eda4:	ldr	r1, [fp, #-20]	; 0xffffffec
   2eda8:	ldr	r3, [sp, #132]	; 0x84
   2edac:	str	r2, [sp, #32]
   2edb0:	mov	r2, r3
   2edb4:	bl	12558 <memmove@plt>
   2edb8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2edbc:	ldr	r1, [sp, #132]	; 0x84
   2edc0:	add	r0, r0, r1
   2edc4:	ldr	r1, [sp, #128]	; 0x80
   2edc8:	ldr	r2, [sp, #32]
   2edcc:	sub	r1, r2, r1
   2edd0:	add	r0, r0, r1
   2edd4:	str	r0, [fp, #-80]	; 0xffffffb0
   2edd8:	b	2f23c <__assert_fail@plt+0x1c684>
   2eddc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ede0:	and	r0, r0, #16
   2ede4:	cmp	r0, #0
   2ede8:	beq	2f090 <__assert_fail@plt+0x1c4d8>
   2edec:	mov	r0, #0
   2edf0:	str	r0, [fp, #-64]	; 0xffffffc0
   2edf4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2edf8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2edfc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2ee00:	subs	r0, r1, r0
   2ee04:	sbcs	r1, r2, #0
   2ee08:	bcc	2f08c <__assert_fail@plt+0x1c4d4>
   2ee0c:	b	2ee10 <__assert_fail@plt+0x1c258>
   2ee10:	b	2ee14 <__assert_fail@plt+0x1c25c>
   2ee14:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2ee18:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2ee1c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2ee20:	mov	r3, #0
   2ee24:	str	r3, [sp, #28]
   2ee28:	bl	7540c <__assert_fail@plt+0x62854>
   2ee2c:	add	r2, r2, r2, lsl #2
   2ee30:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2ee34:	add	r2, r3, r2, lsl #1
   2ee38:	str	r2, [sp, #116]	; 0x74
   2ee3c:	ldr	r2, [sp, #116]	; 0x74
   2ee40:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2ee44:	udiv	ip, r2, r3
   2ee48:	mls	r2, ip, r3, r2
   2ee4c:	lsl	r2, r2, #1
   2ee50:	ldr	r3, [fp, #-84]	; 0xffffffac
   2ee54:	add	r2, r2, r3, asr #1
   2ee58:	str	r2, [sp, #112]	; 0x70
   2ee5c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2ee60:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2ee64:	ldr	ip, [fp, #-52]	; 0xffffffcc
   2ee68:	str	r0, [sp, #24]
   2ee6c:	mov	r0, r3
   2ee70:	str	r1, [sp, #20]
   2ee74:	mov	r1, ip
   2ee78:	ldr	r3, [sp, #28]
   2ee7c:	bl	7540c <__assert_fail@plt+0x62854>
   2ee80:	str	r1, [fp, #-52]	; 0xffffffcc
   2ee84:	str	r0, [fp, #-56]	; 0xffffffc8
   2ee88:	ldr	r0, [sp, #116]	; 0x74
   2ee8c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2ee90:	udiv	r0, r0, r1
   2ee94:	str	r0, [fp, #-60]	; 0xffffffc4
   2ee98:	ldr	r0, [sp, #112]	; 0x70
   2ee9c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2eea0:	cmp	r0, r1
   2eea4:	bcs	2eecc <__assert_fail@plt+0x1c314>
   2eea8:	ldr	r0, [sp, #112]	; 0x70
   2eeac:	ldr	r1, [fp, #-84]	; 0xffffffac
   2eeb0:	add	r0, r0, r1
   2eeb4:	cmp	r0, #0
   2eeb8:	movw	r0, #0
   2eebc:	movne	r0, #1
   2eec0:	and	r0, r0, #1
   2eec4:	str	r0, [sp, #16]
   2eec8:	b	2eef4 <__assert_fail@plt+0x1c33c>
   2eecc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2eed0:	ldr	r1, [sp, #112]	; 0x70
   2eed4:	ldr	r2, [fp, #-84]	; 0xffffffac
   2eed8:	add	r1, r1, r2
   2eedc:	cmp	r0, r1
   2eee0:	movw	r0, #0
   2eee4:	movcc	r0, #1
   2eee8:	and	r0, r0, #1
   2eeec:	add	r0, r0, #2
   2eef0:	str	r0, [sp, #16]
   2eef4:	ldr	r0, [sp, #16]
   2eef8:	str	r0, [fp, #-84]	; 0xffffffac
   2eefc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2ef00:	add	r0, r0, #1
   2ef04:	str	r0, [fp, #-64]	; 0xffffffc0
   2ef08:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2ef0c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2ef10:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2ef14:	mov	r3, #0
   2ef18:	subs	r0, r1, r0
   2ef1c:	sbcs	r1, r2, #0
   2ef20:	str	r3, [sp, #12]
   2ef24:	bcc	2ef44 <__assert_fail@plt+0x1c38c>
   2ef28:	b	2ef2c <__assert_fail@plt+0x1c374>
   2ef2c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2ef30:	ldr	r1, [fp, #-68]	; 0xffffffbc
   2ef34:	cmp	r0, r1
   2ef38:	movw	r0, #0
   2ef3c:	movlt	r0, #1
   2ef40:	str	r0, [sp, #12]
   2ef44:	ldr	r0, [sp, #12]
   2ef48:	tst	r0, #1
   2ef4c:	bne	2ee14 <__assert_fail@plt+0x1c25c>
   2ef50:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2ef54:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2ef58:	rsbs	r0, r0, #9
   2ef5c:	rscs	r1, r1, #0
   2ef60:	bcc	2f088 <__assert_fail@plt+0x1c4d0>
   2ef64:	b	2ef68 <__assert_fail@plt+0x1c3b0>
   2ef68:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2ef6c:	cmp	r0, #1
   2ef70:	bne	2ef94 <__assert_fail@plt+0x1c3dc>
   2ef74:	ldr	r0, [fp, #-84]	; 0xffffffac
   2ef78:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2ef7c:	and	r1, r1, #1
   2ef80:	add	r0, r0, r1
   2ef84:	movw	r1, #2
   2ef88:	cmp	r1, r0
   2ef8c:	blt	2efb0 <__assert_fail@plt+0x1c3f8>
   2ef90:	b	2eff4 <__assert_fail@plt+0x1c43c>
   2ef94:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2ef98:	cmp	r0, #0
   2ef9c:	bne	2eff4 <__assert_fail@plt+0x1c43c>
   2efa0:	ldr	r0, [fp, #-84]	; 0xffffffac
   2efa4:	movw	r1, #0
   2efa8:	cmp	r1, r0
   2efac:	bge	2eff4 <__assert_fail@plt+0x1c43c>
   2efb0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2efb4:	add	r0, r0, #1
   2efb8:	str	r0, [fp, #-60]	; 0xffffffc4
   2efbc:	movw	r0, #0
   2efc0:	str	r0, [fp, #-84]	; 0xffffffac
   2efc4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2efc8:	cmp	r0, #10
   2efcc:	bne	2eff0 <__assert_fail@plt+0x1c438>
   2efd0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2efd4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2efd8:	adds	r0, r0, #1
   2efdc:	adc	r1, r1, #0
   2efe0:	str	r0, [fp, #-56]	; 0xffffffc8
   2efe4:	str	r1, [fp, #-52]	; 0xffffffcc
   2efe8:	movw	r0, #0
   2efec:	str	r0, [fp, #-60]	; 0xffffffc4
   2eff0:	b	2eff4 <__assert_fail@plt+0x1c43c>
   2eff4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2eff8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2effc:	rsbs	r0, r0, #9
   2f000:	rscs	r1, r1, #0
   2f004:	bcc	2f084 <__assert_fail@plt+0x1c4cc>
   2f008:	b	2f00c <__assert_fail@plt+0x1c454>
   2f00c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2f010:	cmp	r0, #0
   2f014:	bne	2f028 <__assert_fail@plt+0x1c470>
   2f018:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f01c:	and	r0, r0, #8
   2f020:	cmp	r0, #0
   2f024:	bne	2f084 <__assert_fail@plt+0x1c4cc>
   2f028:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2f02c:	add	r0, r0, #48	; 0x30
   2f030:	ldr	r1, [fp, #-72]	; 0xffffffb8
   2f034:	mvn	r2, #0
   2f038:	add	r3, r1, r2
   2f03c:	str	r3, [fp, #-72]	; 0xffffffb8
   2f040:	add	r1, r1, r2
   2f044:	strb	r0, [r1]
   2f048:	ldr	r0, [fp, #-92]	; 0xffffffa4
   2f04c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   2f050:	movw	r2, #0
   2f054:	sub	r0, r2, r0
   2f058:	add	r0, r1, r0
   2f05c:	str	r0, [fp, #-72]	; 0xffffffb8
   2f060:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2f064:	ldr	r1, [fp, #-88]	; 0xffffffa8
   2f068:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2f06c:	str	r2, [sp, #8]
   2f070:	mov	r2, r3
   2f074:	bl	125c4 <memcpy@plt>
   2f078:	ldr	r0, [sp, #8]
   2f07c:	str	r0, [fp, #-84]	; 0xffffffac
   2f080:	str	r0, [fp, #-60]	; 0xffffffc4
   2f084:	b	2f088 <__assert_fail@plt+0x1c4d0>
   2f088:	b	2f08c <__assert_fail@plt+0x1c4d4>
   2f08c:	b	2f090 <__assert_fail@plt+0x1c4d8>
   2f090:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2f094:	cmp	r0, #1
   2f098:	bne	2f0dc <__assert_fail@plt+0x1c524>
   2f09c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2f0a0:	ldr	r1, [fp, #-84]	; 0xffffffac
   2f0a4:	asr	r2, r1, #31
   2f0a8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2f0ac:	and	r3, r3, #1
   2f0b0:	adds	r1, r1, r3
   2f0b4:	adc	r2, r2, #0
   2f0b8:	orr	r1, r1, r2
   2f0bc:	cmp	r1, #0
   2f0c0:	movwne	r1, #1
   2f0c4:	and	r1, r1, #1
   2f0c8:	add	r0, r0, r1
   2f0cc:	movw	r1, #5
   2f0d0:	cmp	r1, r0
   2f0d4:	blt	2f100 <__assert_fail@plt+0x1c548>
   2f0d8:	b	2f1cc <__assert_fail@plt+0x1c614>
   2f0dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2f0e0:	cmp	r0, #0
   2f0e4:	bne	2f1cc <__assert_fail@plt+0x1c614>
   2f0e8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2f0ec:	ldr	r1, [fp, #-84]	; 0xffffffac
   2f0f0:	add	r0, r0, r1
   2f0f4:	movw	r1, #0
   2f0f8:	cmp	r1, r0
   2f0fc:	bge	2f1cc <__assert_fail@plt+0x1c614>
   2f100:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2f104:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2f108:	adds	r0, r0, #1
   2f10c:	adc	r1, r1, #0
   2f110:	str	r0, [fp, #-56]	; 0xffffffc8
   2f114:	str	r1, [fp, #-52]	; 0xffffffcc
   2f118:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f11c:	and	r0, r0, #16
   2f120:	cmp	r0, #0
   2f124:	beq	2f1c8 <__assert_fail@plt+0x1c610>
   2f128:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2f12c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2f130:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2f134:	eor	r0, r0, r2
   2f138:	orr	r0, r0, r1
   2f13c:	cmp	r0, #0
   2f140:	bne	2f1c8 <__assert_fail@plt+0x1c610>
   2f144:	b	2f148 <__assert_fail@plt+0x1c590>
   2f148:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2f14c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   2f150:	cmp	r0, r1
   2f154:	bge	2f1c8 <__assert_fail@plt+0x1c610>
   2f158:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2f15c:	add	r0, r0, #1
   2f160:	str	r0, [fp, #-64]	; 0xffffffc0
   2f164:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f168:	and	r0, r0, #8
   2f16c:	cmp	r0, #0
   2f170:	bne	2f1b8 <__assert_fail@plt+0x1c600>
   2f174:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2f178:	mvn	r1, #0
   2f17c:	add	r2, r0, r1
   2f180:	str	r2, [fp, #-72]	; 0xffffffb8
   2f184:	add	r0, r0, r1
   2f188:	movw	r1, #48	; 0x30
   2f18c:	strb	r1, [r0]
   2f190:	ldr	r0, [fp, #-92]	; 0xffffffa4
   2f194:	ldr	r1, [fp, #-72]	; 0xffffffb8
   2f198:	movw	r2, #0
   2f19c:	sub	r0, r2, r0
   2f1a0:	add	r0, r1, r0
   2f1a4:	str	r0, [fp, #-72]	; 0xffffffb8
   2f1a8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2f1ac:	ldr	r1, [fp, #-88]	; 0xffffffa8
   2f1b0:	ldr	r2, [fp, #-92]	; 0xffffffa4
   2f1b4:	bl	125c4 <memcpy@plt>
   2f1b8:	mov	r0, #0
   2f1bc:	str	r0, [fp, #-52]	; 0xffffffcc
   2f1c0:	mov	r0, #1
   2f1c4:	str	r0, [fp, #-56]	; 0xffffffc8
   2f1c8:	b	2f1cc <__assert_fail@plt+0x1c614>
   2f1cc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2f1d0:	str	r0, [fp, #-80]	; 0xffffffb0
   2f1d4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2f1d8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2f1dc:	mov	r2, #10
   2f1e0:	mov	r3, #0
   2f1e4:	bl	7540c <__assert_fail@plt+0x62854>
   2f1e8:	str	r2, [sp, #108]	; 0x6c
   2f1ec:	ldr	r2, [sp, #108]	; 0x6c
   2f1f0:	add	r2, r2, #48	; 0x30
   2f1f4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2f1f8:	mvn	ip, #0
   2f1fc:	add	lr, r3, ip
   2f200:	str	lr, [fp, #-72]	; 0xffffffb8
   2f204:	add	r3, r3, ip
   2f208:	strb	r2, [r3]
   2f20c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2f210:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2f214:	mov	r2, #10
   2f218:	mov	r3, #0
   2f21c:	bl	7540c <__assert_fail@plt+0x62854>
   2f220:	str	r1, [fp, #-52]	; 0xffffffcc
   2f224:	str	r0, [fp, #-56]	; 0xffffffc8
   2f228:	orr	r0, r0, r1
   2f22c:	cmp	r0, #0
   2f230:	bne	2f1d4 <__assert_fail@plt+0x1c61c>
   2f234:	b	2f238 <__assert_fail@plt+0x1c680>
   2f238:	b	2f23c <__assert_fail@plt+0x1c684>
   2f23c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f240:	and	r0, r0, #4
   2f244:	cmp	r0, #0
   2f248:	beq	2f26c <__assert_fail@plt+0x1c6b4>
   2f24c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2f250:	ldr	r1, [fp, #-80]	; 0xffffffb0
   2f254:	ldr	r2, [fp, #-72]	; 0xffffffb8
   2f258:	sub	r1, r1, r2
   2f25c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   2f260:	ldr	r3, [fp, #-100]	; 0xffffff9c
   2f264:	bl	2f4e0 <__assert_fail@plt+0x1c928>
   2f268:	str	r0, [fp, #-72]	; 0xffffffb8
   2f26c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f270:	and	r0, r0, #128	; 0x80
   2f274:	cmp	r0, #0
   2f278:	beq	2f3f4 <__assert_fail@plt+0x1c83c>
   2f27c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2f280:	cmp	r0, #0
   2f284:	bge	2f300 <__assert_fail@plt+0x1c748>
   2f288:	mov	r0, #0
   2f28c:	str	r0, [fp, #-64]	; 0xffffffc0
   2f290:	str	r0, [sp, #100]	; 0x64
   2f294:	mov	r0, #1
   2f298:	str	r0, [sp, #96]	; 0x60
   2f29c:	ldr	r0, [sp, #96]	; 0x60
   2f2a0:	ldr	r1, [sp, #100]	; 0x64
   2f2a4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2f2a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2f2ac:	subs	r0, r0, r2
   2f2b0:	sbcs	r1, r1, r3
   2f2b4:	bcs	2f2fc <__assert_fail@plt+0x1c744>
   2f2b8:	b	2f2bc <__assert_fail@plt+0x1c704>
   2f2bc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2f2c0:	add	r0, r0, #1
   2f2c4:	str	r0, [fp, #-64]	; 0xffffffc0
   2f2c8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   2f2cc:	cmp	r0, r1
   2f2d0:	bne	2f2d8 <__assert_fail@plt+0x1c720>
   2f2d4:	b	2f2fc <__assert_fail@plt+0x1c744>
   2f2d8:	b	2f2dc <__assert_fail@plt+0x1c724>
   2f2dc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2f2e0:	ldr	r1, [sp, #96]	; 0x60
   2f2e4:	ldr	r2, [sp, #100]	; 0x64
   2f2e8:	umull	r1, r3, r1, r0
   2f2ec:	mla	r0, r2, r0, r3
   2f2f0:	str	r1, [sp, #96]	; 0x60
   2f2f4:	str	r0, [sp, #100]	; 0x64
   2f2f8:	b	2f29c <__assert_fail@plt+0x1c6e4>
   2f2fc:	b	2f300 <__assert_fail@plt+0x1c748>
   2f300:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2f304:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f308:	and	r1, r1, #256	; 0x100
   2f30c:	orr	r0, r0, r1
   2f310:	cmp	r0, #0
   2f314:	beq	2f33c <__assert_fail@plt+0x1c784>
   2f318:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f31c:	and	r0, r0, #64	; 0x40
   2f320:	cmp	r0, #0
   2f324:	beq	2f33c <__assert_fail@plt+0x1c784>
   2f328:	ldr	r0, [fp, #-76]	; 0xffffffb4
   2f32c:	add	r1, r0, #1
   2f330:	str	r1, [fp, #-76]	; 0xffffffb4
   2f334:	movw	r1, #32
   2f338:	strb	r1, [r0]
   2f33c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2f340:	cmp	r0, #0
   2f344:	beq	2f39c <__assert_fail@plt+0x1c7e4>
   2f348:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f34c:	and	r0, r0, #32
   2f350:	cmp	r0, #0
   2f354:	bne	2f370 <__assert_fail@plt+0x1c7b8>
   2f358:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2f35c:	cmp	r0, #1
   2f360:	bne	2f370 <__assert_fail@plt+0x1c7b8>
   2f364:	movw	r0, #107	; 0x6b
   2f368:	str	r0, [sp, #4]
   2f36c:	b	2f388 <__assert_fail@plt+0x1c7d0>
   2f370:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2f374:	movw	r1, #41040	; 0xa050
   2f378:	movt	r1, #7
   2f37c:	add	r0, r1, r0
   2f380:	ldrb	r0, [r0]
   2f384:	str	r0, [sp, #4]
   2f388:	ldr	r0, [sp, #4]
   2f38c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   2f390:	add	r2, r1, #1
   2f394:	str	r2, [fp, #-76]	; 0xffffffb4
   2f398:	strb	r0, [r1]
   2f39c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f3a0:	and	r0, r0, #256	; 0x100
   2f3a4:	cmp	r0, #0
   2f3a8:	beq	2f3f0 <__assert_fail@plt+0x1c838>
   2f3ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f3b0:	and	r0, r0, #32
   2f3b4:	cmp	r0, #0
   2f3b8:	beq	2f3dc <__assert_fail@plt+0x1c824>
   2f3bc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2f3c0:	cmp	r0, #0
   2f3c4:	beq	2f3dc <__assert_fail@plt+0x1c824>
   2f3c8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   2f3cc:	add	r1, r0, #1
   2f3d0:	str	r1, [fp, #-76]	; 0xffffffb4
   2f3d4:	movw	r1, #105	; 0x69
   2f3d8:	strb	r1, [r0]
   2f3dc:	ldr	r0, [fp, #-76]	; 0xffffffb4
   2f3e0:	add	r1, r0, #1
   2f3e4:	str	r1, [fp, #-76]	; 0xffffffb4
   2f3e8:	movw	r1, #66	; 0x42
   2f3ec:	strb	r1, [r0]
   2f3f0:	b	2f3f4 <__assert_fail@plt+0x1c83c>
   2f3f4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   2f3f8:	movw	r1, #0
   2f3fc:	strb	r1, [r0]
   2f400:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2f404:	sub	sp, fp, #8
   2f408:	pop	{r4, r5, fp, pc}
   2f40c:	nop	{0}
   2f410:	push	{fp, lr}
   2f414:	mov	fp, sp
   2f418:	sub	sp, sp, #40	; 0x28
   2f41c:	str	r0, [fp, #-4]
   2f420:	vstr	d0, [fp, #-16]
   2f424:	ldr	r0, [fp, #-4]
   2f428:	cmp	r0, #1
   2f42c:	beq	2f4c8 <__assert_fail@plt+0x1c910>
   2f430:	vldr	d16, [pc, #160]	; 2f4d8 <__assert_fail@plt+0x1c920>
   2f434:	vldr	d17, [fp, #-16]
   2f438:	vcmpe.f64	d17, d16
   2f43c:	vmrs	APSR_nzcv, fpscr
   2f440:	bpl	2f4c8 <__assert_fail@plt+0x1c910>
   2f444:	vldr	d16, [fp, #-16]
   2f448:	vmov	r0, r1, d16
   2f44c:	bl	75458 <__assert_fail@plt+0x628a0>
   2f450:	str	r1, [sp, #20]
   2f454:	str	r0, [sp, #16]
   2f458:	ldr	r0, [sp, #16]
   2f45c:	ldr	r1, [sp, #20]
   2f460:	ldr	r2, [fp, #-4]
   2f464:	cmp	r2, #0
   2f468:	movw	r2, #0
   2f46c:	str	r0, [sp, #12]
   2f470:	str	r1, [sp, #8]
   2f474:	str	r2, [sp, #4]
   2f478:	bne	2f4a4 <__assert_fail@plt+0x1c8ec>
   2f47c:	ldr	r0, [sp, #16]
   2f480:	ldr	r1, [sp, #20]
   2f484:	bl	752c4 <__assert_fail@plt+0x6270c>
   2f488:	vmov	d16, r0, r1
   2f48c:	vldr	d17, [fp, #-16]
   2f490:	vcmp.f64	d16, d17
   2f494:	vmrs	APSR_nzcv, fpscr
   2f498:	movw	r0, #0
   2f49c:	movne	r0, #1
   2f4a0:	str	r0, [sp, #4]
   2f4a4:	ldr	r0, [sp, #4]
   2f4a8:	and	r0, r0, #1
   2f4ac:	ldr	r1, [sp, #12]
   2f4b0:	adds	r0, r1, r0
   2f4b4:	ldr	r2, [sp, #8]
   2f4b8:	adc	r1, r2, #0
   2f4bc:	bl	752c4 <__assert_fail@plt+0x6270c>
   2f4c0:	vmov	d16, r0, r1
   2f4c4:	vstr	d16, [fp, #-16]
   2f4c8:	vldr	d0, [fp, #-16]
   2f4cc:	mov	sp, fp
   2f4d0:	pop	{fp, pc}
   2f4d4:	nop	{0}
   2f4d8:	andeq	r0, r0, r0
   2f4dc:	mvnsmi	r0, #0
   2f4e0:	push	{fp, lr}
   2f4e4:	mov	fp, sp
   2f4e8:	sub	sp, sp, #88	; 0x58
   2f4ec:	add	ip, sp, #15
   2f4f0:	str	r0, [fp, #-4]
   2f4f4:	str	r1, [fp, #-8]
   2f4f8:	str	r2, [fp, #-12]
   2f4fc:	str	r3, [fp, #-16]
   2f500:	mvn	r0, #0
   2f504:	str	r0, [fp, #-24]	; 0xffffffe8
   2f508:	ldr	r0, [fp, #-16]
   2f50c:	str	ip, [sp, #8]
   2f510:	bl	12888 <strlen@plt>
   2f514:	str	r0, [fp, #-28]	; 0xffffffe4
   2f518:	ldr	r0, [fp, #-8]
   2f51c:	str	r0, [fp, #-32]	; 0xffffffe0
   2f520:	ldr	r1, [fp, #-4]
   2f524:	ldr	r2, [fp, #-8]
   2f528:	ldr	r0, [sp, #8]
   2f52c:	bl	125c4 <memcpy@plt>
   2f530:	ldr	r0, [fp, #-4]
   2f534:	ldr	r1, [fp, #-8]
   2f538:	add	r0, r0, r1
   2f53c:	str	r0, [fp, #-20]	; 0xffffffec
   2f540:	ldr	r0, [fp, #-12]
   2f544:	ldrb	r0, [r0]
   2f548:	strb	r0, [sp, #14]
   2f54c:	ldrsb	r0, [sp, #14]
   2f550:	cmp	r0, #0
   2f554:	beq	2f58c <__assert_fail@plt+0x1c9d4>
   2f558:	ldrb	r0, [sp, #14]
   2f55c:	cmp	r0, #255	; 0xff
   2f560:	bge	2f570 <__assert_fail@plt+0x1c9b8>
   2f564:	ldrb	r0, [sp, #14]
   2f568:	str	r0, [sp, #4]
   2f56c:	b	2f578 <__assert_fail@plt+0x1c9c0>
   2f570:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2f574:	str	r0, [sp, #4]
   2f578:	ldr	r0, [sp, #4]
   2f57c:	str	r0, [fp, #-24]	; 0xffffffe8
   2f580:	ldr	r0, [fp, #-12]
   2f584:	add	r0, r0, #1
   2f588:	str	r0, [fp, #-12]
   2f58c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2f590:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f594:	cmp	r0, r1
   2f598:	bcs	2f5a4 <__assert_fail@plt+0x1c9ec>
   2f59c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2f5a0:	str	r0, [fp, #-24]	; 0xffffffe8
   2f5a4:	add	r0, sp, #15
   2f5a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f5ac:	ldr	r2, [fp, #-20]	; 0xffffffec
   2f5b0:	movw	r3, #0
   2f5b4:	sub	r1, r3, r1
   2f5b8:	add	r1, r2, r1
   2f5bc:	str	r1, [fp, #-20]	; 0xffffffec
   2f5c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f5c4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2f5c8:	sub	r1, r2, r1
   2f5cc:	str	r1, [fp, #-32]	; 0xffffffe0
   2f5d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f5d4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2f5d8:	add	r0, r0, r2
   2f5dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2f5e0:	str	r0, [sp]
   2f5e4:	mov	r0, r1
   2f5e8:	ldr	r1, [sp]
   2f5ec:	bl	125c4 <memcpy@plt>
   2f5f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2f5f4:	cmp	r0, #0
   2f5f8:	bne	2f608 <__assert_fail@plt+0x1ca50>
   2f5fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   2f600:	mov	sp, fp
   2f604:	pop	{fp, pc}
   2f608:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2f60c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f610:	movw	r2, #0
   2f614:	sub	r0, r2, r0
   2f618:	add	r0, r1, r0
   2f61c:	str	r0, [fp, #-20]	; 0xffffffec
   2f620:	ldr	r0, [fp, #-20]	; 0xffffffec
   2f624:	ldr	r1, [fp, #-16]
   2f628:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2f62c:	bl	125c4 <memcpy@plt>
   2f630:	b	2f540 <__assert_fail@plt+0x1c988>
   2f634:	push	{fp, lr}
   2f638:	mov	fp, sp
   2f63c:	sub	sp, sp, #16
   2f640:	str	r0, [fp, #-4]
   2f644:	str	r1, [sp, #8]
   2f648:	str	r2, [sp, #4]
   2f64c:	ldr	r0, [fp, #-4]
   2f650:	ldr	r1, [sp, #4]
   2f654:	ldr	r2, [sp, #8]
   2f658:	bl	2f6a0 <__assert_fail@plt+0x1cae8>
   2f65c:	str	r0, [sp]
   2f660:	ldr	r0, [sp, #4]
   2f664:	ldr	r1, [r0]
   2f668:	ldr	r0, [r0, #4]
   2f66c:	orr	r0, r1, r0
   2f670:	cmp	r0, #0
   2f674:	bne	2f694 <__assert_fail@plt+0x1cadc>
   2f678:	b	2f67c <__assert_fail@plt+0x1cac4>
   2f67c:	bl	2f8fc <__assert_fail@plt+0x1cd44>
   2f680:	ldr	r2, [sp, #4]
   2f684:	str	r1, [r2, #4]
   2f688:	str	r0, [r2]
   2f68c:	movw	r0, #4
   2f690:	str	r0, [sp]
   2f694:	ldr	r0, [sp]
   2f698:	mov	sp, fp
   2f69c:	pop	{fp, pc}
   2f6a0:	push	{fp, lr}
   2f6a4:	mov	fp, sp
   2f6a8:	sub	sp, sp, #48	; 0x30
   2f6ac:	str	r0, [fp, #-8]
   2f6b0:	str	r1, [fp, #-12]
   2f6b4:	str	r2, [fp, #-16]
   2f6b8:	movw	r0, #0
   2f6bc:	str	r0, [sp, #24]
   2f6c0:	ldr	r1, [fp, #-8]
   2f6c4:	cmp	r1, r0
   2f6c8:	bne	2f718 <__assert_fail@plt+0x1cb60>
   2f6cc:	movw	r0, #30333	; 0x767d
   2f6d0:	movt	r0, #7
   2f6d4:	bl	127bc <getenv@plt>
   2f6d8:	str	r0, [fp, #-8]
   2f6dc:	movw	r1, #0
   2f6e0:	cmp	r0, r1
   2f6e4:	bne	2f718 <__assert_fail@plt+0x1cb60>
   2f6e8:	movw	r0, #40992	; 0xa020
   2f6ec:	movt	r0, #7
   2f6f0:	bl	127bc <getenv@plt>
   2f6f4:	str	r0, [fp, #-8]
   2f6f8:	movw	r1, #0
   2f6fc:	cmp	r0, r1
   2f700:	bne	2f718 <__assert_fail@plt+0x1cb60>
   2f704:	bl	2f8fc <__assert_fail@plt+0x1cd44>
   2f708:	ldr	r2, [fp, #-12]
   2f70c:	str	r1, [r2, #4]
   2f710:	str	r0, [r2]
   2f714:	b	2f8dc <__assert_fail@plt+0x1cd24>
   2f718:	ldr	r0, [fp, #-8]
   2f71c:	ldrb	r0, [r0]
   2f720:	cmp	r0, #39	; 0x27
   2f724:	bne	2f740 <__assert_fail@plt+0x1cb88>
   2f728:	ldr	r0, [sp, #24]
   2f72c:	orr	r0, r0, #4
   2f730:	str	r0, [sp, #24]
   2f734:	ldr	r0, [fp, #-8]
   2f738:	add	r0, r0, #1
   2f73c:	str	r0, [fp, #-8]
   2f740:	movw	r0, #41064	; 0xa068
   2f744:	movt	r0, #7
   2f748:	ldr	r1, [fp, #-8]
   2f74c:	str	r0, [sp, #12]
   2f750:	mov	r0, r1
   2f754:	movw	r1, #41052	; 0xa05c
   2f758:	movt	r1, #7
   2f75c:	ldr	r2, [sp, #12]
   2f760:	movw	r3, #4
   2f764:	bl	6e278 <__assert_fail@plt+0x5b6c0>
   2f768:	str	r0, [fp, #-20]	; 0xffffffec
   2f76c:	movw	r1, #0
   2f770:	cmp	r1, r0
   2f774:	bgt	2f7ac <__assert_fail@plt+0x1cbf4>
   2f778:	ldr	r0, [fp, #-20]	; 0xffffffec
   2f77c:	movw	r1, #41064	; 0xa068
   2f780:	movt	r1, #7
   2f784:	ldr	r0, [r1, r0, lsl #2]
   2f788:	ldr	r1, [sp, #24]
   2f78c:	orr	r0, r1, r0
   2f790:	str	r0, [sp, #24]
   2f794:	ldr	r0, [fp, #-12]
   2f798:	mov	r1, #0
   2f79c:	str	r1, [r0, #4]
   2f7a0:	mov	r1, #1
   2f7a4:	str	r1, [r0]
   2f7a8:	b	2f8d8 <__assert_fail@plt+0x1cd20>
   2f7ac:	ldr	r0, [fp, #-8]
   2f7b0:	ldr	r3, [fp, #-12]
   2f7b4:	add	r1, sp, #20
   2f7b8:	movw	r2, #0
   2f7bc:	movw	ip, #41002	; 0xa02a
   2f7c0:	movt	ip, #7
   2f7c4:	str	ip, [sp]
   2f7c8:	bl	4d894 <__assert_fail@plt+0x3acdc>
   2f7cc:	str	r0, [sp, #16]
   2f7d0:	ldr	r0, [sp, #16]
   2f7d4:	cmp	r0, #0
   2f7d8:	beq	2f7f4 <__assert_fail@plt+0x1cc3c>
   2f7dc:	ldr	r0, [fp, #-16]
   2f7e0:	movw	r1, #0
   2f7e4:	str	r1, [r0]
   2f7e8:	ldr	r0, [sp, #16]
   2f7ec:	str	r0, [fp, #-4]
   2f7f0:	b	2f8f0 <__assert_fail@plt+0x1cd38>
   2f7f4:	b	2f7f8 <__assert_fail@plt+0x1cc40>
   2f7f8:	ldr	r0, [fp, #-8]
   2f7fc:	ldrb	r0, [r0]
   2f800:	movw	r1, #48	; 0x30
   2f804:	cmp	r1, r0
   2f808:	movw	r0, #0
   2f80c:	str	r0, [sp, #8]
   2f810:	bgt	2f82c <__assert_fail@plt+0x1cc74>
   2f814:	ldr	r0, [fp, #-8]
   2f818:	ldrb	r0, [r0]
   2f81c:	cmp	r0, #57	; 0x39
   2f820:	movw	r0, #0
   2f824:	movle	r0, #1
   2f828:	str	r0, [sp, #8]
   2f82c:	ldr	r0, [sp, #8]
   2f830:	mvn	r1, #0
   2f834:	eor	r0, r0, r1
   2f838:	tst	r0, #1
   2f83c:	beq	2f8d4 <__assert_fail@plt+0x1cd1c>
   2f840:	ldr	r0, [fp, #-8]
   2f844:	ldr	r1, [sp, #20]
   2f848:	cmp	r0, r1
   2f84c:	bne	2f8c0 <__assert_fail@plt+0x1cd08>
   2f850:	ldr	r0, [sp, #24]
   2f854:	orr	r0, r0, #128	; 0x80
   2f858:	str	r0, [sp, #24]
   2f85c:	ldr	r0, [sp, #20]
   2f860:	mvn	r1, #0
   2f864:	add	r0, r0, r1
   2f868:	ldrb	r0, [r0]
   2f86c:	cmp	r0, #66	; 0x42
   2f870:	bne	2f880 <__assert_fail@plt+0x1ccc8>
   2f874:	ldr	r0, [sp, #24]
   2f878:	orr	r0, r0, #256	; 0x100
   2f87c:	str	r0, [sp, #24]
   2f880:	ldr	r0, [sp, #20]
   2f884:	mvn	r1, #0
   2f888:	add	r0, r0, r1
   2f88c:	ldrb	r0, [r0]
   2f890:	cmp	r0, #66	; 0x42
   2f894:	bne	2f8b0 <__assert_fail@plt+0x1ccf8>
   2f898:	ldr	r0, [sp, #20]
   2f89c:	mvn	r1, #1
   2f8a0:	add	r0, r0, r1
   2f8a4:	ldrb	r0, [r0]
   2f8a8:	cmp	r0, #105	; 0x69
   2f8ac:	bne	2f8bc <__assert_fail@plt+0x1cd04>
   2f8b0:	ldr	r0, [sp, #24]
   2f8b4:	orr	r0, r0, #32
   2f8b8:	str	r0, [sp, #24]
   2f8bc:	b	2f8d4 <__assert_fail@plt+0x1cd1c>
   2f8c0:	b	2f8c4 <__assert_fail@plt+0x1cd0c>
   2f8c4:	ldr	r0, [fp, #-8]
   2f8c8:	add	r0, r0, #1
   2f8cc:	str	r0, [fp, #-8]
   2f8d0:	b	2f7f8 <__assert_fail@plt+0x1cc40>
   2f8d4:	b	2f8d8 <__assert_fail@plt+0x1cd20>
   2f8d8:	b	2f8dc <__assert_fail@plt+0x1cd24>
   2f8dc:	ldr	r0, [sp, #24]
   2f8e0:	ldr	r1, [fp, #-16]
   2f8e4:	str	r0, [r1]
   2f8e8:	movw	r0, #0
   2f8ec:	str	r0, [fp, #-4]
   2f8f0:	ldr	r0, [fp, #-4]
   2f8f4:	mov	sp, fp
   2f8f8:	pop	{fp, pc}
   2f8fc:	push	{fp, lr}
   2f900:	mov	fp, sp
   2f904:	sub	sp, sp, #8
   2f908:	movw	r0, #30312	; 0x7668
   2f90c:	movt	r0, #7
   2f910:	bl	127bc <getenv@plt>
   2f914:	mov	r1, #1024	; 0x400
   2f918:	cmp	r0, #0
   2f91c:	movwne	r1, #512	; 0x200
   2f920:	mov	r0, #0
   2f924:	str	r0, [sp, #4]
   2f928:	mov	r0, r1
   2f92c:	ldr	r1, [sp, #4]
   2f930:	mov	sp, fp
   2f934:	pop	{fp, pc}
   2f938:	push	{fp, lr}
   2f93c:	mov	fp, sp
   2f940:	sub	sp, sp, #32
   2f944:	str	r0, [fp, #-4]
   2f948:	movw	r0, #0
   2f94c:	str	r0, [fp, #-12]
   2f950:	movw	r0, #57044	; 0xded4
   2f954:	movt	r0, #8
   2f958:	ldr	r0, [r0]
   2f95c:	str	r0, [fp, #-8]
   2f960:	ldr	r0, [fp, #-8]
   2f964:	movw	r1, #0
   2f968:	cmp	r0, r1
   2f96c:	beq	2f9a4 <__assert_fail@plt+0x1cdec>
   2f970:	ldr	r0, [fp, #-8]
   2f974:	ldr	r0, [r0]
   2f978:	ldr	r1, [fp, #-4]
   2f97c:	cmp	r0, r1
   2f980:	bne	2f990 <__assert_fail@plt+0x1cdd8>
   2f984:	ldr	r0, [fp, #-8]
   2f988:	str	r0, [fp, #-12]
   2f98c:	b	2f9a4 <__assert_fail@plt+0x1cdec>
   2f990:	b	2f994 <__assert_fail@plt+0x1cddc>
   2f994:	ldr	r0, [fp, #-8]
   2f998:	ldr	r0, [r0, #4]
   2f99c:	str	r0, [fp, #-8]
   2f9a0:	b	2f960 <__assert_fail@plt+0x1cda8>
   2f9a4:	ldr	r0, [fp, #-12]
   2f9a8:	movw	r1, #0
   2f9ac:	cmp	r0, r1
   2f9b0:	bne	2fa50 <__assert_fail@plt+0x1ce98>
   2f9b4:	ldr	r0, [fp, #-4]
   2f9b8:	bl	124e0 <getpwuid@plt>
   2f9bc:	str	r0, [sp, #16]
   2f9c0:	ldr	r0, [sp, #16]
   2f9c4:	movw	r1, #0
   2f9c8:	cmp	r0, r1
   2f9cc:	beq	2f9e0 <__assert_fail@plt+0x1ce28>
   2f9d0:	ldr	r0, [sp, #16]
   2f9d4:	ldr	r0, [r0]
   2f9d8:	str	r0, [sp, #8]
   2f9dc:	b	2f9f0 <__assert_fail@plt+0x1ce38>
   2f9e0:	movw	r0, #29909	; 0x74d5
   2f9e4:	movt	r0, #7
   2f9e8:	str	r0, [sp, #8]
   2f9ec:	b	2f9f0 <__assert_fail@plt+0x1ce38>
   2f9f0:	ldr	r0, [sp, #8]
   2f9f4:	str	r0, [sp, #12]
   2f9f8:	ldr	r0, [sp, #12]
   2f9fc:	bl	12888 <strlen@plt>
   2fa00:	add	r0, r0, #1
   2fa04:	add	r0, r0, #11
   2fa08:	mvn	r1, #3
   2fa0c:	and	r0, r0, r1
   2fa10:	bl	4a2f0 <__assert_fail@plt+0x37738>
   2fa14:	str	r0, [fp, #-12]
   2fa18:	ldr	r0, [fp, #-4]
   2fa1c:	ldr	r1, [fp, #-12]
   2fa20:	str	r0, [r1]
   2fa24:	ldr	r0, [fp, #-12]
   2fa28:	add	r0, r0, #8
   2fa2c:	ldr	r1, [sp, #12]
   2fa30:	bl	12738 <strcpy@plt>
   2fa34:	movw	r1, #57044	; 0xded4
   2fa38:	movt	r1, #8
   2fa3c:	ldr	r2, [r1]
   2fa40:	ldr	r3, [fp, #-12]
   2fa44:	str	r2, [r3, #4]
   2fa48:	ldr	r2, [fp, #-12]
   2fa4c:	str	r2, [r1]
   2fa50:	ldr	r0, [fp, #-12]
   2fa54:	ldrb	r0, [r0, #8]
   2fa58:	cmp	r0, #0
   2fa5c:	beq	2fa70 <__assert_fail@plt+0x1ceb8>
   2fa60:	ldr	r0, [fp, #-12]
   2fa64:	add	r0, r0, #8
   2fa68:	str	r0, [sp, #4]
   2fa6c:	b	2fa7c <__assert_fail@plt+0x1cec4>
   2fa70:	movw	r0, #0
   2fa74:	str	r0, [sp, #4]
   2fa78:	b	2fa7c <__assert_fail@plt+0x1cec4>
   2fa7c:	ldr	r0, [sp, #4]
   2fa80:	mov	sp, fp
   2fa84:	pop	{fp, pc}
   2fa88:	push	{fp, lr}
   2fa8c:	mov	fp, sp
   2fa90:	sub	sp, sp, #16
   2fa94:	str	r0, [sp, #8]
   2fa98:	movw	r0, #57044	; 0xded4
   2fa9c:	movt	r0, #8
   2faa0:	ldr	r0, [r0]
   2faa4:	str	r0, [sp, #4]
   2faa8:	ldr	r0, [sp, #4]
   2faac:	movw	r1, #0
   2fab0:	cmp	r0, r1
   2fab4:	beq	2fb08 <__assert_fail@plt+0x1cf50>
   2fab8:	ldr	r0, [sp, #4]
   2fabc:	ldrb	r0, [r0, #8]
   2fac0:	ldr	r1, [sp, #8]
   2fac4:	ldrb	r1, [r1]
   2fac8:	cmp	r0, r1
   2facc:	bne	2faf4 <__assert_fail@plt+0x1cf3c>
   2fad0:	ldr	r0, [sp, #4]
   2fad4:	add	r0, r0, #8
   2fad8:	ldr	r1, [sp, #8]
   2fadc:	bl	124c8 <strcmp@plt>
   2fae0:	cmp	r0, #0
   2fae4:	bne	2faf4 <__assert_fail@plt+0x1cf3c>
   2fae8:	ldr	r0, [sp, #4]
   2faec:	str	r0, [fp, #-4]
   2faf0:	b	2fc20 <__assert_fail@plt+0x1d068>
   2faf4:	b	2faf8 <__assert_fail@plt+0x1cf40>
   2faf8:	ldr	r0, [sp, #4]
   2fafc:	ldr	r0, [r0, #4]
   2fb00:	str	r0, [sp, #4]
   2fb04:	b	2faa8 <__assert_fail@plt+0x1cef0>
   2fb08:	movw	r0, #57048	; 0xded8
   2fb0c:	movt	r0, #8
   2fb10:	ldr	r0, [r0]
   2fb14:	str	r0, [sp, #4]
   2fb18:	ldr	r0, [sp, #4]
   2fb1c:	movw	r1, #0
   2fb20:	cmp	r0, r1
   2fb24:	beq	2fb78 <__assert_fail@plt+0x1cfc0>
   2fb28:	ldr	r0, [sp, #4]
   2fb2c:	ldrb	r0, [r0, #8]
   2fb30:	ldr	r1, [sp, #8]
   2fb34:	ldrb	r1, [r1]
   2fb38:	cmp	r0, r1
   2fb3c:	bne	2fb64 <__assert_fail@plt+0x1cfac>
   2fb40:	ldr	r0, [sp, #4]
   2fb44:	add	r0, r0, #8
   2fb48:	ldr	r1, [sp, #8]
   2fb4c:	bl	124c8 <strcmp@plt>
   2fb50:	cmp	r0, #0
   2fb54:	bne	2fb64 <__assert_fail@plt+0x1cfac>
   2fb58:	movw	r0, #0
   2fb5c:	str	r0, [fp, #-4]
   2fb60:	b	2fc20 <__assert_fail@plt+0x1d068>
   2fb64:	b	2fb68 <__assert_fail@plt+0x1cfb0>
   2fb68:	ldr	r0, [sp, #4]
   2fb6c:	ldr	r0, [r0, #4]
   2fb70:	str	r0, [sp, #4]
   2fb74:	b	2fb18 <__assert_fail@plt+0x1cf60>
   2fb78:	ldr	r0, [sp, #8]
   2fb7c:	bl	124a4 <getpwnam@plt>
   2fb80:	str	r0, [sp]
   2fb84:	ldr	r0, [sp, #8]
   2fb88:	bl	12888 <strlen@plt>
   2fb8c:	add	r0, r0, #1
   2fb90:	add	r0, r0, #11
   2fb94:	mvn	r1, #3
   2fb98:	and	r0, r0, r1
   2fb9c:	bl	4a2f0 <__assert_fail@plt+0x37738>
   2fba0:	str	r0, [sp, #4]
   2fba4:	ldr	r0, [sp, #4]
   2fba8:	add	r0, r0, #8
   2fbac:	ldr	r1, [sp, #8]
   2fbb0:	bl	12738 <strcpy@plt>
   2fbb4:	ldr	r1, [sp]
   2fbb8:	movw	r2, #0
   2fbbc:	cmp	r1, r2
   2fbc0:	beq	2fbfc <__assert_fail@plt+0x1d044>
   2fbc4:	ldr	r0, [sp]
   2fbc8:	ldr	r0, [r0, #8]
   2fbcc:	ldr	r1, [sp, #4]
   2fbd0:	str	r0, [r1]
   2fbd4:	movw	r0, #57044	; 0xded4
   2fbd8:	movt	r0, #8
   2fbdc:	ldr	r1, [r0]
   2fbe0:	ldr	r2, [sp, #4]
   2fbe4:	str	r1, [r2, #4]
   2fbe8:	ldr	r1, [sp, #4]
   2fbec:	str	r1, [r0]
   2fbf0:	ldr	r0, [sp, #4]
   2fbf4:	str	r0, [fp, #-4]
   2fbf8:	b	2fc20 <__assert_fail@plt+0x1d068>
   2fbfc:	movw	r0, #57048	; 0xded8
   2fc00:	movt	r0, #8
   2fc04:	ldr	r1, [r0]
   2fc08:	ldr	r2, [sp, #4]
   2fc0c:	str	r1, [r2, #4]
   2fc10:	ldr	r1, [sp, #4]
   2fc14:	str	r1, [r0]
   2fc18:	movw	r0, #0
   2fc1c:	str	r0, [fp, #-4]
   2fc20:	ldr	r0, [fp, #-4]
   2fc24:	mov	sp, fp
   2fc28:	pop	{fp, pc}
   2fc2c:	push	{fp, lr}
   2fc30:	mov	fp, sp
   2fc34:	sub	sp, sp, #32
   2fc38:	str	r0, [fp, #-4]
   2fc3c:	movw	r0, #0
   2fc40:	str	r0, [fp, #-12]
   2fc44:	movw	r0, #57052	; 0xdedc
   2fc48:	movt	r0, #8
   2fc4c:	ldr	r0, [r0]
   2fc50:	str	r0, [fp, #-8]
   2fc54:	ldr	r0, [fp, #-8]
   2fc58:	movw	r1, #0
   2fc5c:	cmp	r0, r1
   2fc60:	beq	2fc98 <__assert_fail@plt+0x1d0e0>
   2fc64:	ldr	r0, [fp, #-8]
   2fc68:	ldr	r0, [r0]
   2fc6c:	ldr	r1, [fp, #-4]
   2fc70:	cmp	r0, r1
   2fc74:	bne	2fc84 <__assert_fail@plt+0x1d0cc>
   2fc78:	ldr	r0, [fp, #-8]
   2fc7c:	str	r0, [fp, #-12]
   2fc80:	b	2fc98 <__assert_fail@plt+0x1d0e0>
   2fc84:	b	2fc88 <__assert_fail@plt+0x1d0d0>
   2fc88:	ldr	r0, [fp, #-8]
   2fc8c:	ldr	r0, [r0, #4]
   2fc90:	str	r0, [fp, #-8]
   2fc94:	b	2fc54 <__assert_fail@plt+0x1d09c>
   2fc98:	ldr	r0, [fp, #-12]
   2fc9c:	movw	r1, #0
   2fca0:	cmp	r0, r1
   2fca4:	bne	2fd44 <__assert_fail@plt+0x1d18c>
   2fca8:	ldr	r0, [fp, #-4]
   2fcac:	bl	12b94 <getgrgid@plt>
   2fcb0:	str	r0, [sp, #16]
   2fcb4:	ldr	r0, [sp, #16]
   2fcb8:	movw	r1, #0
   2fcbc:	cmp	r0, r1
   2fcc0:	beq	2fcd4 <__assert_fail@plt+0x1d11c>
   2fcc4:	ldr	r0, [sp, #16]
   2fcc8:	ldr	r0, [r0]
   2fccc:	str	r0, [sp, #8]
   2fcd0:	b	2fce4 <__assert_fail@plt+0x1d12c>
   2fcd4:	movw	r0, #29909	; 0x74d5
   2fcd8:	movt	r0, #7
   2fcdc:	str	r0, [sp, #8]
   2fce0:	b	2fce4 <__assert_fail@plt+0x1d12c>
   2fce4:	ldr	r0, [sp, #8]
   2fce8:	str	r0, [sp, #12]
   2fcec:	ldr	r0, [sp, #12]
   2fcf0:	bl	12888 <strlen@plt>
   2fcf4:	add	r0, r0, #1
   2fcf8:	add	r0, r0, #11
   2fcfc:	mvn	r1, #3
   2fd00:	and	r0, r0, r1
   2fd04:	bl	4a2f0 <__assert_fail@plt+0x37738>
   2fd08:	str	r0, [fp, #-12]
   2fd0c:	ldr	r0, [fp, #-4]
   2fd10:	ldr	r1, [fp, #-12]
   2fd14:	str	r0, [r1]
   2fd18:	ldr	r0, [fp, #-12]
   2fd1c:	add	r0, r0, #8
   2fd20:	ldr	r1, [sp, #12]
   2fd24:	bl	12738 <strcpy@plt>
   2fd28:	movw	r1, #57052	; 0xdedc
   2fd2c:	movt	r1, #8
   2fd30:	ldr	r2, [r1]
   2fd34:	ldr	r3, [fp, #-12]
   2fd38:	str	r2, [r3, #4]
   2fd3c:	ldr	r2, [fp, #-12]
   2fd40:	str	r2, [r1]
   2fd44:	ldr	r0, [fp, #-12]
   2fd48:	ldrb	r0, [r0, #8]
   2fd4c:	cmp	r0, #0
   2fd50:	beq	2fd64 <__assert_fail@plt+0x1d1ac>
   2fd54:	ldr	r0, [fp, #-12]
   2fd58:	add	r0, r0, #8
   2fd5c:	str	r0, [sp, #4]
   2fd60:	b	2fd70 <__assert_fail@plt+0x1d1b8>
   2fd64:	movw	r0, #0
   2fd68:	str	r0, [sp, #4]
   2fd6c:	b	2fd70 <__assert_fail@plt+0x1d1b8>
   2fd70:	ldr	r0, [sp, #4]
   2fd74:	mov	sp, fp
   2fd78:	pop	{fp, pc}
   2fd7c:	push	{fp, lr}
   2fd80:	mov	fp, sp
   2fd84:	sub	sp, sp, #16
   2fd88:	str	r0, [sp, #8]
   2fd8c:	movw	r0, #57052	; 0xdedc
   2fd90:	movt	r0, #8
   2fd94:	ldr	r0, [r0]
   2fd98:	str	r0, [sp, #4]
   2fd9c:	ldr	r0, [sp, #4]
   2fda0:	movw	r1, #0
   2fda4:	cmp	r0, r1
   2fda8:	beq	2fdfc <__assert_fail@plt+0x1d244>
   2fdac:	ldr	r0, [sp, #4]
   2fdb0:	ldrb	r0, [r0, #8]
   2fdb4:	ldr	r1, [sp, #8]
   2fdb8:	ldrb	r1, [r1]
   2fdbc:	cmp	r0, r1
   2fdc0:	bne	2fde8 <__assert_fail@plt+0x1d230>
   2fdc4:	ldr	r0, [sp, #4]
   2fdc8:	add	r0, r0, #8
   2fdcc:	ldr	r1, [sp, #8]
   2fdd0:	bl	124c8 <strcmp@plt>
   2fdd4:	cmp	r0, #0
   2fdd8:	bne	2fde8 <__assert_fail@plt+0x1d230>
   2fddc:	ldr	r0, [sp, #4]
   2fde0:	str	r0, [fp, #-4]
   2fde4:	b	2ff14 <__assert_fail@plt+0x1d35c>
   2fde8:	b	2fdec <__assert_fail@plt+0x1d234>
   2fdec:	ldr	r0, [sp, #4]
   2fdf0:	ldr	r0, [r0, #4]
   2fdf4:	str	r0, [sp, #4]
   2fdf8:	b	2fd9c <__assert_fail@plt+0x1d1e4>
   2fdfc:	movw	r0, #57056	; 0xdee0
   2fe00:	movt	r0, #8
   2fe04:	ldr	r0, [r0]
   2fe08:	str	r0, [sp, #4]
   2fe0c:	ldr	r0, [sp, #4]
   2fe10:	movw	r1, #0
   2fe14:	cmp	r0, r1
   2fe18:	beq	2fe6c <__assert_fail@plt+0x1d2b4>
   2fe1c:	ldr	r0, [sp, #4]
   2fe20:	ldrb	r0, [r0, #8]
   2fe24:	ldr	r1, [sp, #8]
   2fe28:	ldrb	r1, [r1]
   2fe2c:	cmp	r0, r1
   2fe30:	bne	2fe58 <__assert_fail@plt+0x1d2a0>
   2fe34:	ldr	r0, [sp, #4]
   2fe38:	add	r0, r0, #8
   2fe3c:	ldr	r1, [sp, #8]
   2fe40:	bl	124c8 <strcmp@plt>
   2fe44:	cmp	r0, #0
   2fe48:	bne	2fe58 <__assert_fail@plt+0x1d2a0>
   2fe4c:	movw	r0, #0
   2fe50:	str	r0, [fp, #-4]
   2fe54:	b	2ff14 <__assert_fail@plt+0x1d35c>
   2fe58:	b	2fe5c <__assert_fail@plt+0x1d2a4>
   2fe5c:	ldr	r0, [sp, #4]
   2fe60:	ldr	r0, [r0, #4]
   2fe64:	str	r0, [sp, #4]
   2fe68:	b	2fe0c <__assert_fail@plt+0x1d254>
   2fe6c:	ldr	r0, [sp, #8]
   2fe70:	bl	12ba0 <getgrnam@plt>
   2fe74:	str	r0, [sp]
   2fe78:	ldr	r0, [sp, #8]
   2fe7c:	bl	12888 <strlen@plt>
   2fe80:	add	r0, r0, #1
   2fe84:	add	r0, r0, #11
   2fe88:	mvn	r1, #3
   2fe8c:	and	r0, r0, r1
   2fe90:	bl	4a2f0 <__assert_fail@plt+0x37738>
   2fe94:	str	r0, [sp, #4]
   2fe98:	ldr	r0, [sp, #4]
   2fe9c:	add	r0, r0, #8
   2fea0:	ldr	r1, [sp, #8]
   2fea4:	bl	12738 <strcpy@plt>
   2fea8:	ldr	r1, [sp]
   2feac:	movw	r2, #0
   2feb0:	cmp	r1, r2
   2feb4:	beq	2fef0 <__assert_fail@plt+0x1d338>
   2feb8:	ldr	r0, [sp]
   2febc:	ldr	r0, [r0, #8]
   2fec0:	ldr	r1, [sp, #4]
   2fec4:	str	r0, [r1]
   2fec8:	movw	r0, #57052	; 0xdedc
   2fecc:	movt	r0, #8
   2fed0:	ldr	r1, [r0]
   2fed4:	ldr	r2, [sp, #4]
   2fed8:	str	r1, [r2, #4]
   2fedc:	ldr	r1, [sp, #4]
   2fee0:	str	r1, [r0]
   2fee4:	ldr	r0, [sp, #4]
   2fee8:	str	r0, [fp, #-4]
   2feec:	b	2ff14 <__assert_fail@plt+0x1d35c>
   2fef0:	movw	r0, #57056	; 0xdee0
   2fef4:	movt	r0, #8
   2fef8:	ldr	r1, [r0]
   2fefc:	ldr	r2, [sp, #4]
   2ff00:	str	r1, [r2, #4]
   2ff04:	ldr	r1, [sp, #4]
   2ff08:	str	r1, [r0]
   2ff0c:	movw	r0, #0
   2ff10:	str	r0, [fp, #-4]
   2ff14:	ldr	r0, [fp, #-4]
   2ff18:	mov	sp, fp
   2ff1c:	pop	{fp, pc}
   2ff20:	push	{r4, r5, fp, lr}
   2ff24:	add	fp, sp, #8
   2ff28:	sub	sp, sp, #432	; 0x1b0
   2ff2c:	str	r0, [fp, #-16]
   2ff30:	str	r1, [fp, #-20]	; 0xffffffec
   2ff34:	bl	12720 <__ctype_get_mb_cur_max@plt>
   2ff38:	cmp	r0, #1
   2ff3c:	bls	30484 <__assert_fail@plt+0x1d8cc>
   2ff40:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ff44:	str	r0, [fp, #-60]	; 0xffffffc4
   2ff48:	movw	r0, #0
   2ff4c:	strb	r0, [fp, #-76]	; 0xffffffb4
   2ff50:	sub	r1, fp, #76	; 0x4c
   2ff54:	add	r2, r1, #4
   2ff58:	str	r0, [sp, #68]	; 0x44
   2ff5c:	mov	r0, r2
   2ff60:	ldr	r2, [sp, #68]	; 0x44
   2ff64:	and	r3, r2, #255	; 0xff
   2ff68:	str	r1, [sp, #64]	; 0x40
   2ff6c:	mov	r1, r3
   2ff70:	movw	r2, #8
   2ff74:	bl	12900 <memset@plt>
   2ff78:	ldr	r0, [sp, #68]	; 0x44
   2ff7c:	strb	r0, [fp, #-64]	; 0xffffffc0
   2ff80:	ldr	r0, [sp, #64]	; 0x40
   2ff84:	bl	314f4 <__assert_fail@plt+0x1e93c>
   2ff88:	ldrb	r0, [fp, #-52]	; 0xffffffcc
   2ff8c:	tst	r0, #1
   2ff90:	movw	r0, #0
   2ff94:	str	r0, [sp, #60]	; 0x3c
   2ff98:	beq	2ffb0 <__assert_fail@plt+0x1d3f8>
   2ff9c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2ffa0:	cmp	r0, #0
   2ffa4:	movw	r0, #0
   2ffa8:	moveq	r0, #1
   2ffac:	str	r0, [sp, #60]	; 0x3c
   2ffb0:	ldr	r0, [sp, #60]	; 0x3c
   2ffb4:	mvn	r1, #0
   2ffb8:	eor	r0, r0, r1
   2ffbc:	tst	r0, #1
   2ffc0:	beq	30478 <__assert_fail@plt+0x1d8c0>
   2ffc4:	movw	r0, #1
   2ffc8:	strb	r0, [fp, #-77]	; 0xffffffb3
   2ffcc:	movw	r0, #0
   2ffd0:	str	r0, [fp, #-84]	; 0xffffffac
   2ffd4:	str	r0, [fp, #-88]	; 0xffffffa8
   2ffd8:	str	r0, [fp, #-92]	; 0xffffffa4
   2ffdc:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ffe0:	str	r0, [fp, #-132]	; 0xffffff7c
   2ffe4:	movw	r0, #0
   2ffe8:	strb	r0, [fp, #-148]	; 0xffffff6c
   2ffec:	sub	r1, fp, #148	; 0x94
   2fff0:	add	r1, r1, #4
   2fff4:	str	r0, [sp, #56]	; 0x38
   2fff8:	mov	r0, r1
   2fffc:	ldr	r1, [sp, #56]	; 0x38
   30000:	and	r1, r1, #255	; 0xff
   30004:	movw	r2, #8
   30008:	str	r2, [sp, #52]	; 0x34
   3000c:	bl	12900 <memset@plt>
   30010:	ldr	r0, [sp, #56]	; 0x38
   30014:	strb	r0, [fp, #-136]	; 0xffffff78
   30018:	ldr	r1, [fp, #-16]
   3001c:	str	r1, [fp, #-188]	; 0xffffff44
   30020:	strb	r0, [fp, #-204]	; 0xffffff34
   30024:	sub	r1, fp, #204	; 0xcc
   30028:	add	r1, r1, #4
   3002c:	mov	r0, r1
   30030:	ldr	r1, [sp, #56]	; 0x38
   30034:	and	r1, r1, #255	; 0xff
   30038:	ldr	r2, [sp, #52]	; 0x34
   3003c:	bl	12900 <memset@plt>
   30040:	ldr	r0, [sp, #56]	; 0x38
   30044:	strb	r0, [fp, #-192]	; 0xffffff40
   30048:	sub	r0, fp, #204	; 0xcc
   3004c:	bl	314f4 <__assert_fail@plt+0x1e93c>
   30050:	ldrb	r0, [fp, #-180]	; 0xffffff4c
   30054:	tst	r0, #1
   30058:	movw	r0, #0
   3005c:	str	r0, [sp, #48]	; 0x30
   30060:	beq	30078 <__assert_fail@plt+0x1d4c0>
   30064:	ldr	r0, [fp, #-176]	; 0xffffff50
   30068:	cmp	r0, #0
   3006c:	movw	r0, #0
   30070:	moveq	r0, #1
   30074:	str	r0, [sp, #48]	; 0x30
   30078:	ldr	r0, [sp, #48]	; 0x30
   3007c:	mvn	r1, #0
   30080:	eor	r0, r0, r1
   30084:	tst	r0, #1
   30088:	bne	30098 <__assert_fail@plt+0x1d4e0>
   3008c:	movw	r0, #0
   30090:	str	r0, [fp, #-12]
   30094:	b	306c4 <__assert_fail@plt+0x1db0c>
   30098:	ldrb	r0, [fp, #-77]	; 0xffffffb3
   3009c:	tst	r0, #1
   300a0:	beq	301ec <__assert_fail@plt+0x1d634>
   300a4:	ldr	r0, [fp, #-84]	; 0xffffffac
   300a8:	cmp	r0, #10
   300ac:	bcc	301ec <__assert_fail@plt+0x1d634>
   300b0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   300b4:	ldr	r1, [fp, #-84]	; 0xffffffac
   300b8:	movw	r2, #5
   300bc:	mul	r1, r1, r2
   300c0:	cmp	r0, r1
   300c4:	bcc	301ec <__assert_fail@plt+0x1d634>
   300c8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   300cc:	ldr	r1, [fp, #-92]	; 0xffffffa4
   300d0:	sub	r0, r0, r1
   300d4:	str	r0, [fp, #-208]	; 0xffffff30
   300d8:	ldr	r0, [fp, #-208]	; 0xffffff30
   300dc:	cmp	r0, #0
   300e0:	movw	r0, #0
   300e4:	str	r0, [sp, #44]	; 0x2c
   300e8:	bls	3012c <__assert_fail@plt+0x1d574>
   300ec:	sub	r0, fp, #148	; 0x94
   300f0:	bl	314f4 <__assert_fail@plt+0x1e93c>
   300f4:	ldrb	r0, [fp, #-124]	; 0xffffff84
   300f8:	tst	r0, #1
   300fc:	movw	r0, #0
   30100:	str	r0, [sp, #40]	; 0x28
   30104:	beq	3011c <__assert_fail@plt+0x1d564>
   30108:	ldr	r0, [fp, #-120]	; 0xffffff88
   3010c:	cmp	r0, #0
   30110:	movw	r0, #0
   30114:	moveq	r0, #1
   30118:	str	r0, [sp, #40]	; 0x28
   3011c:	ldr	r0, [sp, #40]	; 0x28
   30120:	mvn	r1, #0
   30124:	eor	r0, r0, r1
   30128:	str	r0, [sp, #44]	; 0x2c
   3012c:	ldr	r0, [sp, #44]	; 0x2c
   30130:	tst	r0, #1
   30134:	beq	30164 <__assert_fail@plt+0x1d5ac>
   30138:	ldr	r0, [fp, #-128]	; 0xffffff80
   3013c:	ldr	r1, [fp, #-132]	; 0xffffff7c
   30140:	add	r0, r1, r0
   30144:	str	r0, [fp, #-132]	; 0xffffff7c
   30148:	movw	r0, #0
   3014c:	strb	r0, [fp, #-136]	; 0xffffff78
   30150:	ldr	r0, [fp, #-208]	; 0xffffff30
   30154:	mvn	r1, #0
   30158:	add	r0, r0, r1
   3015c:	str	r0, [fp, #-208]	; 0xffffff30
   30160:	b	300d8 <__assert_fail@plt+0x1d520>
   30164:	ldr	r0, [fp, #-88]	; 0xffffffa8
   30168:	str	r0, [fp, #-92]	; 0xffffffa4
   3016c:	sub	r0, fp, #148	; 0x94
   30170:	bl	314f4 <__assert_fail@plt+0x1e93c>
   30174:	ldrb	r0, [fp, #-124]	; 0xffffff84
   30178:	tst	r0, #1
   3017c:	movw	r0, #0
   30180:	str	r0, [sp, #36]	; 0x24
   30184:	beq	3019c <__assert_fail@plt+0x1d5e4>
   30188:	ldr	r0, [fp, #-120]	; 0xffffff88
   3018c:	cmp	r0, #0
   30190:	movw	r0, #0
   30194:	moveq	r0, #1
   30198:	str	r0, [sp, #36]	; 0x24
   3019c:	ldr	r0, [sp, #36]	; 0x24
   301a0:	mvn	r1, #0
   301a4:	eor	r0, r0, r1
   301a8:	tst	r0, #1
   301ac:	bne	301e8 <__assert_fail@plt+0x1d630>
   301b0:	ldr	r0, [fp, #-16]
   301b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   301b8:	sub	r2, fp, #212	; 0xd4
   301bc:	bl	306d0 <__assert_fail@plt+0x1db18>
   301c0:	and	r0, r0, #1
   301c4:	strb	r0, [fp, #-213]	; 0xffffff2b
   301c8:	ldrb	r0, [fp, #-213]	; 0xffffff2b
   301cc:	tst	r0, #1
   301d0:	beq	301e0 <__assert_fail@plt+0x1d628>
   301d4:	ldr	r0, [fp, #-212]	; 0xffffff2c
   301d8:	str	r0, [fp, #-12]
   301dc:	b	306c4 <__assert_fail@plt+0x1db0c>
   301e0:	movw	r0, #0
   301e4:	strb	r0, [fp, #-77]	; 0xffffffb3
   301e8:	b	301ec <__assert_fail@plt+0x1d634>
   301ec:	ldr	r0, [fp, #-84]	; 0xffffffac
   301f0:	add	r0, r0, #1
   301f4:	str	r0, [fp, #-84]	; 0xffffffac
   301f8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   301fc:	add	r0, r0, #1
   30200:	str	r0, [fp, #-88]	; 0xffffffa8
   30204:	ldrb	r0, [fp, #-180]	; 0xffffff4c
   30208:	tst	r0, #1
   3020c:	beq	30230 <__assert_fail@plt+0x1d678>
   30210:	ldrb	r0, [fp, #-52]	; 0xffffffcc
   30214:	tst	r0, #1
   30218:	beq	30230 <__assert_fail@plt+0x1d678>
   3021c:	ldr	r0, [fp, #-176]	; 0xffffff50
   30220:	ldr	r1, [fp, #-48]	; 0xffffffd0
   30224:	cmp	r0, r1
   30228:	beq	30258 <__assert_fail@plt+0x1d6a0>
   3022c:	b	30458 <__assert_fail@plt+0x1d8a0>
   30230:	ldr	r0, [fp, #-184]	; 0xffffff48
   30234:	ldr	r1, [fp, #-56]	; 0xffffffc8
   30238:	cmp	r0, r1
   3023c:	bne	30458 <__assert_fail@plt+0x1d8a0>
   30240:	ldr	r0, [fp, #-188]	; 0xffffff44
   30244:	ldr	r1, [fp, #-60]	; 0xffffffc4
   30248:	ldr	r2, [fp, #-184]	; 0xffffff48
   3024c:	bl	12624 <memcmp@plt>
   30250:	cmp	r0, #0
   30254:	bne	30458 <__assert_fail@plt+0x1d8a0>
   30258:	add	r0, sp, #168	; 0xa8
   3025c:	sub	r1, fp, #204	; 0xcc
   30260:	movw	r2, #56	; 0x38
   30264:	bl	125c4 <memcpy@plt>
   30268:	ldr	r0, [sp, #188]	; 0xbc
   3026c:	ldr	r1, [sp, #184]	; 0xb8
   30270:	add	r0, r1, r0
   30274:	str	r0, [sp, #184]	; 0xb8
   30278:	movw	r0, #0
   3027c:	strb	r0, [sp, #180]	; 0xb4
   30280:	ldr	r1, [fp, #-20]	; 0xffffffec
   30284:	str	r1, [sp, #128]	; 0x80
   30288:	strb	r0, [sp, #112]	; 0x70
   3028c:	add	r1, sp, #112	; 0x70
   30290:	add	r2, r1, #4
   30294:	str	r0, [sp, #32]
   30298:	mov	r0, r2
   3029c:	ldr	r2, [sp, #32]
   302a0:	and	r3, r2, #255	; 0xff
   302a4:	str	r1, [sp, #28]
   302a8:	mov	r1, r3
   302ac:	movw	r2, #8
   302b0:	bl	12900 <memset@plt>
   302b4:	ldr	r0, [sp, #32]
   302b8:	strb	r0, [sp, #124]	; 0x7c
   302bc:	ldr	r0, [sp, #28]
   302c0:	bl	314f4 <__assert_fail@plt+0x1e93c>
   302c4:	ldrb	r0, [sp, #136]	; 0x88
   302c8:	tst	r0, #1
   302cc:	movw	r0, #0
   302d0:	str	r0, [sp, #24]
   302d4:	beq	302ec <__assert_fail@plt+0x1d734>
   302d8:	ldr	r0, [sp, #140]	; 0x8c
   302dc:	cmp	r0, #0
   302e0:	movw	r0, #0
   302e4:	moveq	r0, #1
   302e8:	str	r0, [sp, #24]
   302ec:	ldr	r0, [sp, #24]
   302f0:	mvn	r1, #0
   302f4:	eor	r0, r0, r1
   302f8:	tst	r0, #1
   302fc:	bne	30304 <__assert_fail@plt+0x1d74c>
   30300:	bl	12b64 <abort@plt>
   30304:	ldr	r0, [sp, #132]	; 0x84
   30308:	ldr	r1, [sp, #128]	; 0x80
   3030c:	add	r0, r1, r0
   30310:	str	r0, [sp, #128]	; 0x80
   30314:	movw	r0, #0
   30318:	strb	r0, [sp, #124]	; 0x7c
   3031c:	add	r0, sp, #112	; 0x70
   30320:	bl	314f4 <__assert_fail@plt+0x1e93c>
   30324:	ldrb	r0, [sp, #136]	; 0x88
   30328:	tst	r0, #1
   3032c:	movw	r0, #0
   30330:	str	r0, [sp, #20]
   30334:	beq	3034c <__assert_fail@plt+0x1d794>
   30338:	ldr	r0, [sp, #140]	; 0x8c
   3033c:	cmp	r0, #0
   30340:	movw	r0, #0
   30344:	moveq	r0, #1
   30348:	str	r0, [sp, #20]
   3034c:	ldr	r0, [sp, #20]
   30350:	mvn	r1, #0
   30354:	eor	r0, r0, r1
   30358:	tst	r0, #1
   3035c:	bne	3036c <__assert_fail@plt+0x1d7b4>
   30360:	ldr	r0, [fp, #-188]	; 0xffffff44
   30364:	str	r0, [fp, #-12]
   30368:	b	306c4 <__assert_fail@plt+0x1db0c>
   3036c:	add	r0, sp, #168	; 0xa8
   30370:	bl	314f4 <__assert_fail@plt+0x1e93c>
   30374:	ldrb	r0, [sp, #192]	; 0xc0
   30378:	tst	r0, #1
   3037c:	movw	r0, #0
   30380:	str	r0, [sp, #16]
   30384:	beq	3039c <__assert_fail@plt+0x1d7e4>
   30388:	ldr	r0, [sp, #196]	; 0xc4
   3038c:	cmp	r0, #0
   30390:	movw	r0, #0
   30394:	moveq	r0, #1
   30398:	str	r0, [sp, #16]
   3039c:	ldr	r0, [sp, #16]
   303a0:	mvn	r1, #0
   303a4:	eor	r0, r0, r1
   303a8:	tst	r0, #1
   303ac:	bne	303bc <__assert_fail@plt+0x1d804>
   303b0:	movw	r0, #0
   303b4:	str	r0, [fp, #-12]
   303b8:	b	306c4 <__assert_fail@plt+0x1db0c>
   303bc:	ldr	r0, [fp, #-88]	; 0xffffffa8
   303c0:	add	r0, r0, #1
   303c4:	str	r0, [fp, #-88]	; 0xffffffa8
   303c8:	ldrb	r0, [sp, #192]	; 0xc0
   303cc:	tst	r0, #1
   303d0:	beq	303f4 <__assert_fail@plt+0x1d83c>
   303d4:	ldrb	r0, [sp, #136]	; 0x88
   303d8:	tst	r0, #1
   303dc:	beq	303f4 <__assert_fail@plt+0x1d83c>
   303e0:	ldr	r0, [sp, #196]	; 0xc4
   303e4:	ldr	r1, [sp, #140]	; 0x8c
   303e8:	cmp	r0, r1
   303ec:	beq	30420 <__assert_fail@plt+0x1d868>
   303f0:	b	3041c <__assert_fail@plt+0x1d864>
   303f4:	ldr	r0, [sp, #188]	; 0xbc
   303f8:	ldr	r1, [sp, #132]	; 0x84
   303fc:	cmp	r0, r1
   30400:	bne	3041c <__assert_fail@plt+0x1d864>
   30404:	ldr	r0, [sp, #184]	; 0xb8
   30408:	ldr	r1, [sp, #128]	; 0x80
   3040c:	ldr	r2, [sp, #188]	; 0xbc
   30410:	bl	12624 <memcmp@plt>
   30414:	cmp	r0, #0
   30418:	beq	30420 <__assert_fail@plt+0x1d868>
   3041c:	b	30454 <__assert_fail@plt+0x1d89c>
   30420:	b	30424 <__assert_fail@plt+0x1d86c>
   30424:	ldr	r0, [sp, #188]	; 0xbc
   30428:	ldr	r1, [sp, #184]	; 0xb8
   3042c:	add	r0, r1, r0
   30430:	str	r0, [sp, #184]	; 0xb8
   30434:	movw	r0, #0
   30438:	strb	r0, [sp, #180]	; 0xb4
   3043c:	ldr	r1, [sp, #132]	; 0x84
   30440:	ldr	r2, [sp, #128]	; 0x80
   30444:	add	r1, r2, r1
   30448:	str	r1, [sp, #128]	; 0x80
   3044c:	strb	r0, [sp, #124]	; 0x7c
   30450:	b	3031c <__assert_fail@plt+0x1d764>
   30454:	b	30458 <__assert_fail@plt+0x1d8a0>
   30458:	b	3045c <__assert_fail@plt+0x1d8a4>
   3045c:	ldr	r0, [fp, #-184]	; 0xffffff48
   30460:	ldr	r1, [fp, #-188]	; 0xffffff44
   30464:	add	r0, r1, r0
   30468:	str	r0, [fp, #-188]	; 0xffffff44
   3046c:	movw	r0, #0
   30470:	strb	r0, [fp, #-192]	; 0xffffff40
   30474:	b	30048 <__assert_fail@plt+0x1d490>
   30478:	ldr	r0, [fp, #-16]
   3047c:	str	r0, [fp, #-12]
   30480:	b	306c4 <__assert_fail@plt+0x1db0c>
   30484:	ldr	r0, [fp, #-20]	; 0xffffffec
   30488:	ldrb	r0, [r0]
   3048c:	cmp	r0, #0
   30490:	beq	306bc <__assert_fail@plt+0x1db04>
   30494:	movw	r0, #1
   30498:	strb	r0, [sp, #111]	; 0x6f
   3049c:	movw	r0, #0
   304a0:	str	r0, [sp, #104]	; 0x68
   304a4:	str	r0, [sp, #100]	; 0x64
   304a8:	str	r0, [sp, #96]	; 0x60
   304ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   304b0:	str	r0, [sp, #92]	; 0x5c
   304b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   304b8:	add	r1, r0, #1
   304bc:	str	r1, [fp, #-20]	; 0xffffffec
   304c0:	ldrb	r0, [r0]
   304c4:	strb	r0, [sp, #91]	; 0x5b
   304c8:	ldr	r0, [fp, #-16]
   304cc:	ldrb	r0, [r0]
   304d0:	cmp	r0, #0
   304d4:	bne	304e4 <__assert_fail@plt+0x1d92c>
   304d8:	movw	r0, #0
   304dc:	str	r0, [fp, #-12]
   304e0:	b	306c4 <__assert_fail@plt+0x1db0c>
   304e4:	ldrb	r0, [sp, #111]	; 0x6f
   304e8:	tst	r0, #1
   304ec:	beq	305e4 <__assert_fail@plt+0x1da2c>
   304f0:	ldr	r0, [sp, #104]	; 0x68
   304f4:	cmp	r0, #10
   304f8:	bcc	305e4 <__assert_fail@plt+0x1da2c>
   304fc:	ldr	r0, [sp, #100]	; 0x64
   30500:	ldr	r1, [sp, #104]	; 0x68
   30504:	movw	r2, #5
   30508:	mul	r1, r1, r2
   3050c:	cmp	r0, r1
   30510:	bcc	305e4 <__assert_fail@plt+0x1da2c>
   30514:	ldr	r0, [sp, #92]	; 0x5c
   30518:	movw	r1, #0
   3051c:	cmp	r0, r1
   30520:	beq	30564 <__assert_fail@plt+0x1d9ac>
   30524:	ldr	r0, [sp, #92]	; 0x5c
   30528:	ldr	r1, [sp, #100]	; 0x64
   3052c:	ldr	r2, [sp, #96]	; 0x60
   30530:	sub	r1, r1, r2
   30534:	bl	1299c <strnlen@plt>
   30538:	ldr	r1, [sp, #92]	; 0x5c
   3053c:	add	r0, r1, r0
   30540:	str	r0, [sp, #92]	; 0x5c
   30544:	ldr	r0, [sp, #92]	; 0x5c
   30548:	ldrb	r0, [r0]
   3054c:	cmp	r0, #0
   30550:	bne	3055c <__assert_fail@plt+0x1d9a4>
   30554:	movw	r0, #0
   30558:	str	r0, [sp, #92]	; 0x5c
   3055c:	ldr	r0, [sp, #100]	; 0x64
   30560:	str	r0, [sp, #96]	; 0x60
   30564:	ldr	r0, [sp, #92]	; 0x5c
   30568:	movw	r1, #0
   3056c:	cmp	r0, r1
   30570:	bne	305e0 <__assert_fail@plt+0x1da28>
   30574:	ldr	r0, [fp, #-16]
   30578:	ldr	r1, [fp, #-20]	; 0xffffffec
   3057c:	mvn	r2, #0
   30580:	add	r1, r1, r2
   30584:	ldr	r3, [fp, #-20]	; 0xffffffec
   30588:	add	r2, r3, r2
   3058c:	str	r0, [sp, #12]
   30590:	mov	r0, r2
   30594:	str	r1, [sp, #8]
   30598:	bl	12888 <strlen@plt>
   3059c:	ldr	r1, [sp, #12]
   305a0:	str	r0, [sp, #4]
   305a4:	mov	r0, r1
   305a8:	ldr	r1, [sp, #8]
   305ac:	ldr	r2, [sp, #4]
   305b0:	add	r3, sp, #84	; 0x54
   305b4:	bl	30d28 <__assert_fail@plt+0x1e170>
   305b8:	and	r0, r0, #1
   305bc:	strb	r0, [sp, #83]	; 0x53
   305c0:	ldrb	r0, [sp, #83]	; 0x53
   305c4:	tst	r0, #1
   305c8:	beq	305d8 <__assert_fail@plt+0x1da20>
   305cc:	ldr	r0, [sp, #84]	; 0x54
   305d0:	str	r0, [fp, #-12]
   305d4:	b	306c4 <__assert_fail@plt+0x1db0c>
   305d8:	movw	r0, #0
   305dc:	strb	r0, [sp, #111]	; 0x6f
   305e0:	b	305e4 <__assert_fail@plt+0x1da2c>
   305e4:	ldr	r0, [sp, #104]	; 0x68
   305e8:	add	r0, r0, #1
   305ec:	str	r0, [sp, #104]	; 0x68
   305f0:	ldr	r0, [sp, #100]	; 0x64
   305f4:	add	r0, r0, #1
   305f8:	str	r0, [sp, #100]	; 0x64
   305fc:	ldr	r0, [fp, #-16]
   30600:	ldrb	r0, [r0]
   30604:	ldrb	r1, [sp, #91]	; 0x5b
   30608:	cmp	r0, r1
   3060c:	bne	306a8 <__assert_fail@plt+0x1daf0>
   30610:	ldr	r0, [fp, #-16]
   30614:	add	r0, r0, #1
   30618:	str	r0, [sp, #76]	; 0x4c
   3061c:	ldr	r0, [fp, #-20]	; 0xffffffec
   30620:	str	r0, [sp, #72]	; 0x48
   30624:	ldr	r0, [sp, #72]	; 0x48
   30628:	ldrb	r0, [r0]
   3062c:	cmp	r0, #0
   30630:	bne	30640 <__assert_fail@plt+0x1da88>
   30634:	ldr	r0, [fp, #-16]
   30638:	str	r0, [fp, #-12]
   3063c:	b	306c4 <__assert_fail@plt+0x1db0c>
   30640:	ldr	r0, [sp, #76]	; 0x4c
   30644:	ldrb	r0, [r0]
   30648:	cmp	r0, #0
   3064c:	bne	3065c <__assert_fail@plt+0x1daa4>
   30650:	movw	r0, #0
   30654:	str	r0, [fp, #-12]
   30658:	b	306c4 <__assert_fail@plt+0x1db0c>
   3065c:	ldr	r0, [sp, #100]	; 0x64
   30660:	add	r0, r0, #1
   30664:	str	r0, [sp, #100]	; 0x64
   30668:	ldr	r0, [sp, #76]	; 0x4c
   3066c:	ldrb	r0, [r0]
   30670:	ldr	r1, [sp, #72]	; 0x48
   30674:	ldrb	r1, [r1]
   30678:	cmp	r0, r1
   3067c:	beq	30684 <__assert_fail@plt+0x1dacc>
   30680:	b	306a4 <__assert_fail@plt+0x1daec>
   30684:	b	30688 <__assert_fail@plt+0x1dad0>
   30688:	ldr	r0, [sp, #76]	; 0x4c
   3068c:	add	r0, r0, #1
   30690:	str	r0, [sp, #76]	; 0x4c
   30694:	ldr	r0, [sp, #72]	; 0x48
   30698:	add	r0, r0, #1
   3069c:	str	r0, [sp, #72]	; 0x48
   306a0:	b	30624 <__assert_fail@plt+0x1da6c>
   306a4:	b	306a8 <__assert_fail@plt+0x1daf0>
   306a8:	b	306ac <__assert_fail@plt+0x1daf4>
   306ac:	ldr	r0, [fp, #-16]
   306b0:	add	r0, r0, #1
   306b4:	str	r0, [fp, #-16]
   306b8:	b	304c8 <__assert_fail@plt+0x1d910>
   306bc:	ldr	r0, [fp, #-16]
   306c0:	str	r0, [fp, #-12]
   306c4:	ldr	r0, [fp, #-12]
   306c8:	sub	sp, fp, #8
   306cc:	pop	{r4, r5, fp, pc}
   306d0:	push	{r4, r5, fp, lr}
   306d4:	add	fp, sp, #8
   306d8:	sub	sp, sp, #264	; 0x108
   306dc:	str	r0, [fp, #-16]
   306e0:	str	r1, [fp, #-20]	; 0xffffffec
   306e4:	str	r2, [fp, #-24]	; 0xffffffe8
   306e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   306ec:	bl	712a4 <__assert_fail@plt+0x5e6ec>
   306f0:	ldr	r1, [pc, #1580]	; 30d24 <__assert_fail@plt+0x1e16c>
   306f4:	str	r0, [fp, #-28]	; 0xffffffe4
   306f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   306fc:	cmp	r1, r0
   30700:	bcs	30710 <__assert_fail@plt+0x1db58>
   30704:	movw	r0, #0
   30708:	str	r0, [fp, #-240]	; 0xffffff10
   3070c:	b	30778 <__assert_fail@plt+0x1dbc0>
   30710:	ldr	r0, [fp, #-28]	; 0xffffffe4
   30714:	movw	r1, #44	; 0x2c
   30718:	mul	r0, r0, r1
   3071c:	movw	r1, #4017	; 0xfb1
   30720:	cmp	r0, r1
   30724:	bcs	3075c <__assert_fail@plt+0x1dba4>
   30728:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3072c:	mov	r1, #44	; 0x2c
   30730:	mul	r0, r0, r1
   30734:	add	r0, r0, #22
   30738:	bic	r0, r0, #6
   3073c:	mov	r1, sp
   30740:	sub	r0, r1, r0
   30744:	mov	sp, r0
   30748:	add	r0, r0, #15
   3074c:	mvn	r1, #15
   30750:	and	r0, r0, r1
   30754:	str	r0, [fp, #-244]	; 0xffffff0c
   30758:	b	30770 <__assert_fail@plt+0x1dbb8>
   3075c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   30760:	movw	r1, #44	; 0x2c
   30764:	mul	r0, r0, r1
   30768:	bl	70fb4 <__assert_fail@plt+0x5e3fc>
   3076c:	str	r0, [fp, #-244]	; 0xffffff0c
   30770:	ldr	r0, [fp, #-244]	; 0xffffff0c
   30774:	str	r0, [fp, #-240]	; 0xffffff10
   30778:	ldr	r0, [fp, #-240]	; 0xffffff10
   3077c:	str	r0, [fp, #-40]	; 0xffffffd8
   30780:	ldr	r0, [fp, #-40]	; 0xffffffd8
   30784:	movw	r1, #0
   30788:	cmp	r0, r1
   3078c:	bne	307a0 <__assert_fail@plt+0x1dbe8>
   30790:	movw	r0, #0
   30794:	and	r0, r0, #1
   30798:	strb	r0, [fp, #-9]
   3079c:	b	30d14 <__assert_fail@plt+0x1e15c>
   307a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   307a4:	str	r0, [fp, #-32]	; 0xffffffe0
   307a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   307ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   307b0:	movw	r2, #40	; 0x28
   307b4:	mul	r1, r1, r2
   307b8:	add	r0, r0, r1
   307bc:	str	r0, [fp, #-44]	; 0xffffffd4
   307c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   307c4:	str	r0, [fp, #-36]	; 0xffffffdc
   307c8:	movw	r0, #0
   307cc:	str	r0, [fp, #-104]	; 0xffffff98
   307d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   307d4:	str	r0, [fp, #-84]	; 0xffffffac
   307d8:	movw	r0, #0
   307dc:	strb	r0, [fp, #-100]	; 0xffffff9c
   307e0:	sub	r1, fp, #100	; 0x64
   307e4:	add	r1, r1, #4
   307e8:	str	r0, [fp, #-248]	; 0xffffff08
   307ec:	mov	r0, r1
   307f0:	ldr	r1, [fp, #-248]	; 0xffffff08
   307f4:	and	r1, r1, #255	; 0xff
   307f8:	movw	r2, #8
   307fc:	bl	12900 <memset@plt>
   30800:	ldr	r0, [fp, #-248]	; 0xffffff08
   30804:	strb	r0, [fp, #-88]	; 0xffffffa8
   30808:	sub	r0, fp, #100	; 0x64
   3080c:	bl	314f4 <__assert_fail@plt+0x1e93c>
   30810:	ldrb	r0, [fp, #-76]	; 0xffffffb4
   30814:	tst	r0, #1
   30818:	movw	r0, #0
   3081c:	str	r0, [fp, #-252]	; 0xffffff04
   30820:	beq	30838 <__assert_fail@plt+0x1dc80>
   30824:	ldr	r0, [fp, #-72]	; 0xffffffb8
   30828:	cmp	r0, #0
   3082c:	movw	r0, #0
   30830:	moveq	r0, #1
   30834:	str	r0, [fp, #-252]	; 0xffffff04
   30838:	ldr	r0, [fp, #-252]	; 0xffffff04
   3083c:	mvn	r1, #0
   30840:	eor	r0, r0, r1
   30844:	tst	r0, #1
   30848:	beq	30894 <__assert_fail@plt+0x1dcdc>
   3084c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30850:	ldr	r1, [fp, #-104]	; 0xffffff98
   30854:	movw	r2, #40	; 0x28
   30858:	mul	r1, r1, r2
   3085c:	add	r0, r0, r1
   30860:	sub	r1, fp, #100	; 0x64
   30864:	add	r1, r1, #16
   30868:	bl	711a4 <__assert_fail@plt+0x5e5ec>
   3086c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   30870:	ldr	r1, [fp, #-84]	; 0xffffffac
   30874:	add	r0, r1, r0
   30878:	str	r0, [fp, #-84]	; 0xffffffac
   3087c:	movw	r0, #0
   30880:	strb	r0, [fp, #-88]	; 0xffffffa8
   30884:	ldr	r0, [fp, #-104]	; 0xffffff98
   30888:	add	r0, r0, #1
   3088c:	str	r0, [fp, #-104]	; 0xffffff98
   30890:	b	30808 <__assert_fail@plt+0x1dc50>
   30894:	ldr	r0, [fp, #-36]	; 0xffffffdc
   30898:	movw	r1, #1
   3089c:	str	r1, [r0, #4]
   308a0:	movw	r0, #0
   308a4:	str	r0, [fp, #-112]	; 0xffffff90
   308a8:	movw	r0, #2
   308ac:	str	r0, [fp, #-108]	; 0xffffff94
   308b0:	ldr	r0, [fp, #-108]	; 0xffffff94
   308b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   308b8:	cmp	r0, r1
   308bc:	bcs	30a14 <__assert_fail@plt+0x1de5c>
   308c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   308c4:	ldr	r1, [fp, #-108]	; 0xffffff94
   308c8:	sub	r1, r1, #1
   308cc:	movw	r2, #40	; 0x28
   308d0:	mul	r1, r1, r2
   308d4:	add	r0, r0, r1
   308d8:	str	r0, [fp, #-116]	; 0xffffff8c
   308dc:	ldr	r0, [fp, #-116]	; 0xffffff8c
   308e0:	ldrb	r0, [r0, #8]
   308e4:	tst	r0, #1
   308e8:	beq	30938 <__assert_fail@plt+0x1dd80>
   308ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   308f0:	ldr	r1, [fp, #-112]	; 0xffffff90
   308f4:	movw	r2, #40	; 0x28
   308f8:	mul	r1, r1, r2
   308fc:	add	r0, r0, r1
   30900:	ldrb	r0, [r0, #8]
   30904:	tst	r0, #1
   30908:	beq	30938 <__assert_fail@plt+0x1dd80>
   3090c:	ldr	r0, [fp, #-116]	; 0xffffff8c
   30910:	ldr	r0, [r0, #12]
   30914:	ldr	r1, [fp, #-32]	; 0xffffffe0
   30918:	ldr	r2, [fp, #-112]	; 0xffffff90
   3091c:	movw	r3, #40	; 0x28
   30920:	mul	r2, r2, r3
   30924:	add	r1, r1, r2
   30928:	ldr	r1, [r1, #12]
   3092c:	cmp	r0, r1
   30930:	beq	30994 <__assert_fail@plt+0x1dddc>
   30934:	b	309bc <__assert_fail@plt+0x1de04>
   30938:	ldr	r0, [fp, #-116]	; 0xffffff8c
   3093c:	ldr	r0, [r0, #4]
   30940:	ldr	r1, [fp, #-32]	; 0xffffffe0
   30944:	ldr	r2, [fp, #-112]	; 0xffffff90
   30948:	movw	r3, #40	; 0x28
   3094c:	mul	r2, r2, r3
   30950:	add	r1, r1, r2
   30954:	ldr	r1, [r1, #4]
   30958:	cmp	r0, r1
   3095c:	bne	309bc <__assert_fail@plt+0x1de04>
   30960:	ldr	r0, [fp, #-116]	; 0xffffff8c
   30964:	ldr	r0, [r0]
   30968:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3096c:	ldr	r2, [fp, #-112]	; 0xffffff90
   30970:	movw	r3, #40	; 0x28
   30974:	mul	r2, r2, r3
   30978:	add	r1, r1, r2
   3097c:	ldr	r1, [r1]
   30980:	ldr	r2, [fp, #-116]	; 0xffffff8c
   30984:	ldr	r2, [r2, #4]
   30988:	bl	12624 <memcmp@plt>
   3098c:	cmp	r0, #0
   30990:	bne	309bc <__assert_fail@plt+0x1de04>
   30994:	ldr	r0, [fp, #-108]	; 0xffffff94
   30998:	ldr	r1, [fp, #-112]	; 0xffffff90
   3099c:	add	r1, r1, #1
   309a0:	str	r1, [fp, #-112]	; 0xffffff90
   309a4:	sub	r0, r0, r1
   309a8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   309ac:	ldr	r2, [fp, #-108]	; 0xffffff94
   309b0:	add	r1, r1, r2, lsl #2
   309b4:	str	r0, [r1]
   309b8:	b	30a00 <__assert_fail@plt+0x1de48>
   309bc:	ldr	r0, [fp, #-112]	; 0xffffff90
   309c0:	cmp	r0, #0
   309c4:	bne	309e0 <__assert_fail@plt+0x1de28>
   309c8:	ldr	r0, [fp, #-108]	; 0xffffff94
   309cc:	mov	r1, r0
   309d0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   309d4:	add	r0, r2, r0, lsl #2
   309d8:	str	r1, [r0]
   309dc:	b	30a00 <__assert_fail@plt+0x1de48>
   309e0:	ldr	r0, [fp, #-112]	; 0xffffff90
   309e4:	mov	r1, r0
   309e8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   309ec:	add	r0, r2, r0, lsl #2
   309f0:	ldr	r0, [r0]
   309f4:	sub	r0, r1, r0
   309f8:	str	r0, [fp, #-112]	; 0xffffff90
   309fc:	b	308dc <__assert_fail@plt+0x1dd24>
   30a00:	b	30a04 <__assert_fail@plt+0x1de4c>
   30a04:	ldr	r0, [fp, #-108]	; 0xffffff94
   30a08:	add	r0, r0, #1
   30a0c:	str	r0, [fp, #-108]	; 0xffffff94
   30a10:	b	308b0 <__assert_fail@plt+0x1dcf8>
   30a14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30a18:	movw	r1, #0
   30a1c:	str	r1, [r0]
   30a20:	str	r1, [fp, #-120]	; 0xffffff88
   30a24:	ldr	r0, [fp, #-16]
   30a28:	str	r0, [fp, #-160]	; 0xffffff60
   30a2c:	movw	r0, #0
   30a30:	strb	r0, [fp, #-176]	; 0xffffff50
   30a34:	sub	r1, fp, #176	; 0xb0
   30a38:	add	r1, r1, #4
   30a3c:	str	r0, [fp, #-256]	; 0xffffff00
   30a40:	mov	r0, r1
   30a44:	ldr	r1, [fp, #-256]	; 0xffffff00
   30a48:	and	r1, r1, #255	; 0xff
   30a4c:	movw	r2, #8
   30a50:	str	r2, [fp, #-260]	; 0xfffffefc
   30a54:	bl	12900 <memset@plt>
   30a58:	ldr	r0, [fp, #-256]	; 0xffffff00
   30a5c:	strb	r0, [fp, #-164]	; 0xffffff5c
   30a60:	ldr	r1, [fp, #-16]
   30a64:	str	r1, [fp, #-216]	; 0xffffff28
   30a68:	strb	r0, [fp, #-232]	; 0xffffff18
   30a6c:	sub	r1, fp, #232	; 0xe8
   30a70:	add	r1, r1, #4
   30a74:	mov	r0, r1
   30a78:	ldr	r1, [fp, #-256]	; 0xffffff00
   30a7c:	and	r1, r1, #255	; 0xff
   30a80:	ldr	r2, [fp, #-260]	; 0xfffffefc
   30a84:	bl	12900 <memset@plt>
   30a88:	ldr	r0, [fp, #-256]	; 0xffffff00
   30a8c:	strb	r0, [fp, #-220]	; 0xffffff24
   30a90:	sub	r0, fp, #232	; 0xe8
   30a94:	bl	314f4 <__assert_fail@plt+0x1e93c>
   30a98:	ldrb	r0, [fp, #-208]	; 0xffffff30
   30a9c:	tst	r0, #1
   30aa0:	movw	r0, #0
   30aa4:	str	r0, [fp, #-264]	; 0xfffffef8
   30aa8:	beq	30ac0 <__assert_fail@plt+0x1df08>
   30aac:	ldr	r0, [fp, #-204]	; 0xffffff34
   30ab0:	cmp	r0, #0
   30ab4:	movw	r0, #0
   30ab8:	moveq	r0, #1
   30abc:	str	r0, [fp, #-264]	; 0xfffffef8
   30ac0:	ldr	r0, [fp, #-264]	; 0xfffffef8
   30ac4:	mvn	r1, #0
   30ac8:	eor	r0, r0, r1
   30acc:	tst	r0, #1
   30ad0:	beq	30d00 <__assert_fail@plt+0x1e148>
   30ad4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30ad8:	ldr	r1, [fp, #-120]	; 0xffffff88
   30adc:	movw	r2, #40	; 0x28
   30ae0:	mul	r1, r1, r2
   30ae4:	add	r0, r0, r1
   30ae8:	ldrb	r0, [r0, #8]
   30aec:	tst	r0, #1
   30af0:	beq	30b28 <__assert_fail@plt+0x1df70>
   30af4:	ldrb	r0, [fp, #-208]	; 0xffffff30
   30af8:	tst	r0, #1
   30afc:	beq	30b28 <__assert_fail@plt+0x1df70>
   30b00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30b04:	ldr	r1, [fp, #-120]	; 0xffffff88
   30b08:	movw	r2, #40	; 0x28
   30b0c:	mul	r1, r1, r2
   30b10:	add	r0, r0, r1
   30b14:	ldr	r0, [r0, #12]
   30b18:	ldr	r1, [fp, #-204]	; 0xffffff34
   30b1c:	cmp	r0, r1
   30b20:	beq	30b88 <__assert_fail@plt+0x1dfd0>
   30b24:	b	30bd0 <__assert_fail@plt+0x1e018>
   30b28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30b2c:	ldr	r1, [fp, #-120]	; 0xffffff88
   30b30:	movw	r2, #40	; 0x28
   30b34:	mul	r1, r1, r2
   30b38:	add	r0, r0, r1
   30b3c:	ldr	r0, [r0, #4]
   30b40:	ldr	r1, [fp, #-212]	; 0xffffff2c
   30b44:	cmp	r0, r1
   30b48:	bne	30bd0 <__assert_fail@plt+0x1e018>
   30b4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30b50:	ldr	r1, [fp, #-120]	; 0xffffff88
   30b54:	movw	r2, #40	; 0x28
   30b58:	mul	r1, r1, r2
   30b5c:	add	r0, r0, r1
   30b60:	ldr	r0, [r0]
   30b64:	ldr	r1, [fp, #-216]	; 0xffffff28
   30b68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30b6c:	ldr	ip, [fp, #-120]	; 0xffffff88
   30b70:	mul	r2, ip, r2
   30b74:	add	r2, r3, r2
   30b78:	ldr	r2, [r2, #4]
   30b7c:	bl	12624 <memcmp@plt>
   30b80:	cmp	r0, #0
   30b84:	bne	30bd0 <__assert_fail@plt+0x1e018>
   30b88:	ldr	r0, [fp, #-120]	; 0xffffff88
   30b8c:	add	r0, r0, #1
   30b90:	str	r0, [fp, #-120]	; 0xffffff88
   30b94:	ldr	r0, [fp, #-212]	; 0xffffff2c
   30b98:	ldr	r1, [fp, #-216]	; 0xffffff28
   30b9c:	add	r0, r1, r0
   30ba0:	str	r0, [fp, #-216]	; 0xffffff28
   30ba4:	movw	r0, #0
   30ba8:	strb	r0, [fp, #-220]	; 0xffffff24
   30bac:	ldr	r0, [fp, #-120]	; 0xffffff88
   30bb0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   30bb4:	cmp	r0, r1
   30bb8:	bne	30bcc <__assert_fail@plt+0x1e014>
   30bbc:	ldr	r0, [fp, #-160]	; 0xffffff60
   30bc0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30bc4:	str	r0, [r1]
   30bc8:	b	30d00 <__assert_fail@plt+0x1e148>
   30bcc:	b	30cfc <__assert_fail@plt+0x1e144>
   30bd0:	ldr	r0, [fp, #-120]	; 0xffffff88
   30bd4:	cmp	r0, #0
   30bd8:	bls	30c84 <__assert_fail@plt+0x1e0cc>
   30bdc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   30be0:	ldr	r1, [fp, #-120]	; 0xffffff88
   30be4:	add	r0, r0, r1, lsl #2
   30be8:	ldr	r0, [r0]
   30bec:	str	r0, [fp, #-236]	; 0xffffff14
   30bf0:	ldr	r0, [fp, #-236]	; 0xffffff14
   30bf4:	ldr	r1, [fp, #-120]	; 0xffffff88
   30bf8:	sub	r0, r1, r0
   30bfc:	str	r0, [fp, #-120]	; 0xffffff88
   30c00:	ldr	r0, [fp, #-236]	; 0xffffff14
   30c04:	cmp	r0, #0
   30c08:	bls	30c80 <__assert_fail@plt+0x1e0c8>
   30c0c:	sub	r0, fp, #176	; 0xb0
   30c10:	bl	314f4 <__assert_fail@plt+0x1e93c>
   30c14:	ldrb	r0, [fp, #-152]	; 0xffffff68
   30c18:	tst	r0, #1
   30c1c:	movw	r0, #0
   30c20:	str	r0, [fp, #-268]	; 0xfffffef4
   30c24:	beq	30c3c <__assert_fail@plt+0x1e084>
   30c28:	ldr	r0, [fp, #-148]	; 0xffffff6c
   30c2c:	cmp	r0, #0
   30c30:	movw	r0, #0
   30c34:	moveq	r0, #1
   30c38:	str	r0, [fp, #-268]	; 0xfffffef4
   30c3c:	ldr	r0, [fp, #-268]	; 0xfffffef4
   30c40:	mvn	r1, #0
   30c44:	eor	r0, r0, r1
   30c48:	tst	r0, #1
   30c4c:	bne	30c54 <__assert_fail@plt+0x1e09c>
   30c50:	bl	12b64 <abort@plt>
   30c54:	ldr	r0, [fp, #-156]	; 0xffffff64
   30c58:	ldr	r1, [fp, #-160]	; 0xffffff60
   30c5c:	add	r0, r1, r0
   30c60:	str	r0, [fp, #-160]	; 0xffffff60
   30c64:	movw	r0, #0
   30c68:	strb	r0, [fp, #-164]	; 0xffffff5c
   30c6c:	ldr	r0, [fp, #-236]	; 0xffffff14
   30c70:	mvn	r1, #0
   30c74:	add	r0, r0, r1
   30c78:	str	r0, [fp, #-236]	; 0xffffff14
   30c7c:	b	30c00 <__assert_fail@plt+0x1e048>
   30c80:	b	30cf8 <__assert_fail@plt+0x1e140>
   30c84:	sub	r0, fp, #176	; 0xb0
   30c88:	bl	314f4 <__assert_fail@plt+0x1e93c>
   30c8c:	ldrb	r0, [fp, #-152]	; 0xffffff68
   30c90:	tst	r0, #1
   30c94:	movw	r0, #0
   30c98:	str	r0, [fp, #-272]	; 0xfffffef0
   30c9c:	beq	30cb4 <__assert_fail@plt+0x1e0fc>
   30ca0:	ldr	r0, [fp, #-148]	; 0xffffff6c
   30ca4:	cmp	r0, #0
   30ca8:	movw	r0, #0
   30cac:	moveq	r0, #1
   30cb0:	str	r0, [fp, #-272]	; 0xfffffef0
   30cb4:	ldr	r0, [fp, #-272]	; 0xfffffef0
   30cb8:	mvn	r1, #0
   30cbc:	eor	r0, r0, r1
   30cc0:	tst	r0, #1
   30cc4:	bne	30ccc <__assert_fail@plt+0x1e114>
   30cc8:	bl	12b64 <abort@plt>
   30ccc:	ldr	r0, [fp, #-156]	; 0xffffff64
   30cd0:	ldr	r1, [fp, #-160]	; 0xffffff60
   30cd4:	add	r0, r1, r0
   30cd8:	str	r0, [fp, #-160]	; 0xffffff60
   30cdc:	movw	r0, #0
   30ce0:	strb	r0, [fp, #-164]	; 0xffffff5c
   30ce4:	ldr	r1, [fp, #-212]	; 0xffffff2c
   30ce8:	ldr	r2, [fp, #-216]	; 0xffffff28
   30cec:	add	r1, r2, r1
   30cf0:	str	r1, [fp, #-216]	; 0xffffff28
   30cf4:	strb	r0, [fp, #-220]	; 0xffffff24
   30cf8:	b	30cfc <__assert_fail@plt+0x1e144>
   30cfc:	b	30a90 <__assert_fail@plt+0x1ded8>
   30d00:	ldr	r0, [fp, #-40]	; 0xffffffd8
   30d04:	bl	710d8 <__assert_fail@plt+0x5e520>
   30d08:	movw	r0, #1
   30d0c:	and	r0, r0, #1
   30d10:	strb	r0, [fp, #-9]
   30d14:	ldrb	r0, [fp, #-9]
   30d18:	and	r0, r0, #1
   30d1c:	sub	sp, fp, #8
   30d20:	pop	{r4, r5, fp, pc}
   30d24:	rsceq	fp, r8, #188416	; 0x2e000
   30d28:	push	{r4, r5, fp, lr}
   30d2c:	add	fp, sp, #8
   30d30:	sub	sp, sp, #64	; 0x40
   30d34:	ldr	ip, [pc, #676]	; 30fe0 <__assert_fail@plt+0x1e428>
   30d38:	str	r0, [fp, #-16]
   30d3c:	str	r1, [fp, #-20]	; 0xffffffec
   30d40:	str	r2, [fp, #-24]	; 0xffffffe8
   30d44:	str	r3, [fp, #-28]	; 0xffffffe4
   30d48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30d4c:	str	r0, [fp, #-32]	; 0xffffffe0
   30d50:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30d54:	cmp	ip, r0
   30d58:	bcs	30d68 <__assert_fail@plt+0x1e1b0>
   30d5c:	movw	r0, #0
   30d60:	str	r0, [fp, #-64]	; 0xffffffc0
   30d64:	b	30dc4 <__assert_fail@plt+0x1e20c>
   30d68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30d6c:	lsl	r0, r0, #2
   30d70:	movw	r1, #4017	; 0xfb1
   30d74:	cmp	r0, r1
   30d78:	bcs	30dac <__assert_fail@plt+0x1e1f4>
   30d7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30d80:	mov	r1, #22
   30d84:	add	r0, r1, r0, lsl #2
   30d88:	bic	r0, r0, #6
   30d8c:	mov	r1, sp
   30d90:	sub	r0, r1, r0
   30d94:	mov	sp, r0
   30d98:	add	r0, r0, #15
   30d9c:	mvn	r1, #15
   30da0:	and	r0, r0, r1
   30da4:	str	r0, [fp, #-68]	; 0xffffffbc
   30da8:	b	30dbc <__assert_fail@plt+0x1e204>
   30dac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30db0:	lsl	r0, r0, #2
   30db4:	bl	70fb4 <__assert_fail@plt+0x5e3fc>
   30db8:	str	r0, [fp, #-68]	; 0xffffffbc
   30dbc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   30dc0:	str	r0, [fp, #-64]	; 0xffffffc0
   30dc4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   30dc8:	str	r0, [fp, #-36]	; 0xffffffdc
   30dcc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   30dd0:	movw	r1, #0
   30dd4:	cmp	r0, r1
   30dd8:	bne	30dec <__assert_fail@plt+0x1e234>
   30ddc:	movw	r0, #0
   30de0:	and	r0, r0, #1
   30de4:	strb	r0, [fp, #-9]
   30de8:	b	30fd0 <__assert_fail@plt+0x1e418>
   30dec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   30df0:	movw	r1, #1
   30df4:	str	r1, [r0, #4]
   30df8:	movw	r0, #0
   30dfc:	str	r0, [fp, #-44]	; 0xffffffd4
   30e00:	movw	r0, #2
   30e04:	str	r0, [fp, #-40]	; 0xffffffd8
   30e08:	ldr	r0, [fp, #-40]	; 0xffffffd8
   30e0c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   30e10:	cmp	r0, r1
   30e14:	bcs	30ecc <__assert_fail@plt+0x1e314>
   30e18:	ldr	r0, [fp, #-20]	; 0xffffffec
   30e1c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   30e20:	sub	r1, r1, #1
   30e24:	add	r0, r0, r1
   30e28:	ldrb	r0, [r0]
   30e2c:	strb	r0, [fp, #-45]	; 0xffffffd3
   30e30:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   30e34:	ldr	r1, [fp, #-20]	; 0xffffffec
   30e38:	ldr	r2, [fp, #-44]	; 0xffffffd4
   30e3c:	add	r1, r1, r2
   30e40:	ldrb	r1, [r1]
   30e44:	cmp	r0, r1
   30e48:	bne	30e74 <__assert_fail@plt+0x1e2bc>
   30e4c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   30e50:	ldr	r1, [fp, #-44]	; 0xffffffd4
   30e54:	add	r1, r1, #1
   30e58:	str	r1, [fp, #-44]	; 0xffffffd4
   30e5c:	sub	r0, r0, r1
   30e60:	ldr	r1, [fp, #-36]	; 0xffffffdc
   30e64:	ldr	r2, [fp, #-40]	; 0xffffffd8
   30e68:	add	r1, r1, r2, lsl #2
   30e6c:	str	r0, [r1]
   30e70:	b	30eb8 <__assert_fail@plt+0x1e300>
   30e74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   30e78:	cmp	r0, #0
   30e7c:	bne	30e98 <__assert_fail@plt+0x1e2e0>
   30e80:	ldr	r0, [fp, #-40]	; 0xffffffd8
   30e84:	mov	r1, r0
   30e88:	ldr	r2, [fp, #-36]	; 0xffffffdc
   30e8c:	add	r0, r2, r0, lsl #2
   30e90:	str	r1, [r0]
   30e94:	b	30eb8 <__assert_fail@plt+0x1e300>
   30e98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   30e9c:	mov	r1, r0
   30ea0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   30ea4:	add	r0, r2, r0, lsl #2
   30ea8:	ldr	r0, [r0]
   30eac:	sub	r0, r1, r0
   30eb0:	str	r0, [fp, #-44]	; 0xffffffd4
   30eb4:	b	30e30 <__assert_fail@plt+0x1e278>
   30eb8:	b	30ebc <__assert_fail@plt+0x1e304>
   30ebc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   30ec0:	add	r0, r0, #1
   30ec4:	str	r0, [fp, #-40]	; 0xffffffd8
   30ec8:	b	30e08 <__assert_fail@plt+0x1e250>
   30ecc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   30ed0:	movw	r1, #0
   30ed4:	str	r1, [r0]
   30ed8:	str	r1, [fp, #-52]	; 0xffffffcc
   30edc:	ldr	r0, [fp, #-16]
   30ee0:	str	r0, [fp, #-56]	; 0xffffffc8
   30ee4:	ldr	r0, [fp, #-16]
   30ee8:	str	r0, [fp, #-60]	; 0xffffffc4
   30eec:	ldr	r0, [fp, #-60]	; 0xffffffc4
   30ef0:	ldrb	r0, [r0]
   30ef4:	cmp	r0, #0
   30ef8:	beq	30fbc <__assert_fail@plt+0x1e404>
   30efc:	ldr	r0, [fp, #-20]	; 0xffffffec
   30f00:	ldr	r1, [fp, #-52]	; 0xffffffcc
   30f04:	add	r0, r0, r1
   30f08:	ldrb	r0, [r0]
   30f0c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   30f10:	ldrb	r1, [r1]
   30f14:	cmp	r0, r1
   30f18:	bne	30f58 <__assert_fail@plt+0x1e3a0>
   30f1c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   30f20:	add	r0, r0, #1
   30f24:	str	r0, [fp, #-52]	; 0xffffffcc
   30f28:	ldr	r0, [fp, #-60]	; 0xffffffc4
   30f2c:	add	r0, r0, #1
   30f30:	str	r0, [fp, #-60]	; 0xffffffc4
   30f34:	ldr	r0, [fp, #-52]	; 0xffffffcc
   30f38:	ldr	r1, [fp, #-32]	; 0xffffffe0
   30f3c:	cmp	r0, r1
   30f40:	bne	30f54 <__assert_fail@plt+0x1e39c>
   30f44:	ldr	r0, [fp, #-56]	; 0xffffffc8
   30f48:	ldr	r1, [fp, #-28]	; 0xffffffe4
   30f4c:	str	r0, [r1]
   30f50:	b	30fbc <__assert_fail@plt+0x1e404>
   30f54:	b	30fb8 <__assert_fail@plt+0x1e400>
   30f58:	ldr	r0, [fp, #-52]	; 0xffffffcc
   30f5c:	cmp	r0, #0
   30f60:	bls	30f9c <__assert_fail@plt+0x1e3e4>
   30f64:	ldr	r0, [fp, #-36]	; 0xffffffdc
   30f68:	ldr	r1, [fp, #-52]	; 0xffffffcc
   30f6c:	ldr	r0, [r0, r1, lsl #2]
   30f70:	ldr	r1, [fp, #-56]	; 0xffffffc8
   30f74:	add	r0, r1, r0
   30f78:	str	r0, [fp, #-56]	; 0xffffffc8
   30f7c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   30f80:	ldr	r1, [fp, #-52]	; 0xffffffcc
   30f84:	add	r0, r0, r1, lsl #2
   30f88:	ldr	r0, [r0]
   30f8c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   30f90:	sub	r0, r1, r0
   30f94:	str	r0, [fp, #-52]	; 0xffffffcc
   30f98:	b	30fb4 <__assert_fail@plt+0x1e3fc>
   30f9c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   30fa0:	add	r0, r0, #1
   30fa4:	str	r0, [fp, #-56]	; 0xffffffc8
   30fa8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   30fac:	add	r0, r0, #1
   30fb0:	str	r0, [fp, #-60]	; 0xffffffc4
   30fb4:	b	30fb8 <__assert_fail@plt+0x1e400>
   30fb8:	b	30eec <__assert_fail@plt+0x1e334>
   30fbc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   30fc0:	bl	710d8 <__assert_fail@plt+0x5e520>
   30fc4:	movw	r0, #1
   30fc8:	and	r0, r0, #1
   30fcc:	strb	r0, [fp, #-9]
   30fd0:	ldrb	r0, [fp, #-9]
   30fd4:	and	r0, r0, #1
   30fd8:	sub	sp, fp, #8
   30fdc:	pop	{r4, r5, fp, pc}
   30fe0:	svcne	0x00ffffff
   30fe4:	push	{fp, lr}
   30fe8:	mov	fp, sp
   30fec:	sub	sp, sp, #16
   30ff0:	str	r0, [fp, #-4]
   30ff4:	str	r1, [sp, #8]
   30ff8:	ldr	r0, [fp, #-4]
   30ffc:	ldr	r1, [fp, #-4]
   31000:	str	r0, [sp, #4]
   31004:	mov	r0, r1
   31008:	bl	12888 <strlen@plt>
   3100c:	ldr	r2, [sp, #8]
   31010:	ldr	r1, [sp, #4]
   31014:	str	r0, [sp]
   31018:	mov	r0, r1
   3101c:	ldr	r1, [sp]
   31020:	bl	3102c <__assert_fail@plt+0x1e474>
   31024:	mov	sp, fp
   31028:	pop	{fp, pc}
   3102c:	push	{fp, lr}
   31030:	mov	fp, sp
   31034:	sub	sp, sp, #56	; 0x38
   31038:	str	r0, [fp, #-8]
   3103c:	str	r1, [fp, #-12]
   31040:	str	r2, [fp, #-16]
   31044:	ldr	r0, [fp, #-8]
   31048:	str	r0, [fp, #-20]	; 0xffffffec
   3104c:	ldr	r0, [fp, #-20]	; 0xffffffec
   31050:	ldr	r1, [fp, #-12]
   31054:	add	r0, r0, r1
   31058:	str	r0, [fp, #-24]	; 0xffffffe8
   3105c:	movw	r0, #0
   31060:	str	r0, [sp, #28]
   31064:	bl	12720 <__ctype_get_mb_cur_max@plt>
   31068:	cmp	r0, #1
   3106c:	bls	313f4 <__assert_fail@plt+0x1e83c>
   31070:	b	31074 <__assert_fail@plt+0x1e4bc>
   31074:	ldr	r0, [fp, #-20]	; 0xffffffec
   31078:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3107c:	cmp	r0, r1
   31080:	bcs	313e8 <__assert_fail@plt+0x1e830>
   31084:	ldr	r0, [fp, #-20]	; 0xffffffec
   31088:	ldrb	r0, [r0]
   3108c:	sub	r0, r0, #32
   31090:	cmp	r0, #94	; 0x5e
   31094:	str	r0, [sp]
   31098:	bhi	31244 <__assert_fail@plt+0x1e68c>
   3109c:	add	r0, pc, #8
   310a0:	ldr	r1, [sp]
   310a4:	ldr	r0, [r0, r1, lsl #2]
   310a8:	mov	pc, r0
   310ac:	andeq	r1, r3, r8, lsr #4
   310b0:	andeq	r1, r3, r8, lsr #4
   310b4:	andeq	r1, r3, r8, lsr #4
   310b8:	andeq	r1, r3, r8, lsr #4
   310bc:	andeq	r1, r3, r4, asr #4
   310c0:	andeq	r1, r3, r8, lsr #4
   310c4:	andeq	r1, r3, r8, lsr #4
   310c8:	andeq	r1, r3, r8, lsr #4
   310cc:	andeq	r1, r3, r8, lsr #4
   310d0:	andeq	r1, r3, r8, lsr #4
   310d4:	andeq	r1, r3, r8, lsr #4
   310d8:	andeq	r1, r3, r8, lsr #4
   310dc:	andeq	r1, r3, r8, lsr #4
   310e0:	andeq	r1, r3, r8, lsr #4
   310e4:	andeq	r1, r3, r8, lsr #4
   310e8:	andeq	r1, r3, r8, lsr #4
   310ec:	andeq	r1, r3, r8, lsr #4
   310f0:	andeq	r1, r3, r8, lsr #4
   310f4:	andeq	r1, r3, r8, lsr #4
   310f8:	andeq	r1, r3, r8, lsr #4
   310fc:	andeq	r1, r3, r8, lsr #4
   31100:	andeq	r1, r3, r8, lsr #4
   31104:	andeq	r1, r3, r8, lsr #4
   31108:	andeq	r1, r3, r8, lsr #4
   3110c:	andeq	r1, r3, r8, lsr #4
   31110:	andeq	r1, r3, r8, lsr #4
   31114:	andeq	r1, r3, r8, lsr #4
   31118:	andeq	r1, r3, r8, lsr #4
   3111c:	andeq	r1, r3, r8, lsr #4
   31120:	andeq	r1, r3, r8, lsr #4
   31124:	andeq	r1, r3, r8, lsr #4
   31128:	andeq	r1, r3, r8, lsr #4
   3112c:	andeq	r1, r3, r4, asr #4
   31130:	andeq	r1, r3, r8, lsr #4
   31134:	andeq	r1, r3, r8, lsr #4
   31138:	andeq	r1, r3, r8, lsr #4
   3113c:	andeq	r1, r3, r8, lsr #4
   31140:	andeq	r1, r3, r8, lsr #4
   31144:	andeq	r1, r3, r8, lsr #4
   31148:	andeq	r1, r3, r8, lsr #4
   3114c:	andeq	r1, r3, r8, lsr #4
   31150:	andeq	r1, r3, r8, lsr #4
   31154:	andeq	r1, r3, r8, lsr #4
   31158:	andeq	r1, r3, r8, lsr #4
   3115c:	andeq	r1, r3, r8, lsr #4
   31160:	andeq	r1, r3, r8, lsr #4
   31164:	andeq	r1, r3, r8, lsr #4
   31168:	andeq	r1, r3, r8, lsr #4
   3116c:	andeq	r1, r3, r8, lsr #4
   31170:	andeq	r1, r3, r8, lsr #4
   31174:	andeq	r1, r3, r8, lsr #4
   31178:	andeq	r1, r3, r8, lsr #4
   3117c:	andeq	r1, r3, r8, lsr #4
   31180:	andeq	r1, r3, r8, lsr #4
   31184:	andeq	r1, r3, r8, lsr #4
   31188:	andeq	r1, r3, r8, lsr #4
   3118c:	andeq	r1, r3, r8, lsr #4
   31190:	andeq	r1, r3, r8, lsr #4
   31194:	andeq	r1, r3, r8, lsr #4
   31198:	andeq	r1, r3, r8, lsr #4
   3119c:	andeq	r1, r3, r8, lsr #4
   311a0:	andeq	r1, r3, r8, lsr #4
   311a4:	andeq	r1, r3, r8, lsr #4
   311a8:	andeq	r1, r3, r8, lsr #4
   311ac:	andeq	r1, r3, r4, asr #4
   311b0:	andeq	r1, r3, r8, lsr #4
   311b4:	andeq	r1, r3, r8, lsr #4
   311b8:	andeq	r1, r3, r8, lsr #4
   311bc:	andeq	r1, r3, r8, lsr #4
   311c0:	andeq	r1, r3, r8, lsr #4
   311c4:	andeq	r1, r3, r8, lsr #4
   311c8:	andeq	r1, r3, r8, lsr #4
   311cc:	andeq	r1, r3, r8, lsr #4
   311d0:	andeq	r1, r3, r8, lsr #4
   311d4:	andeq	r1, r3, r8, lsr #4
   311d8:	andeq	r1, r3, r8, lsr #4
   311dc:	andeq	r1, r3, r8, lsr #4
   311e0:	andeq	r1, r3, r8, lsr #4
   311e4:	andeq	r1, r3, r8, lsr #4
   311e8:	andeq	r1, r3, r8, lsr #4
   311ec:	andeq	r1, r3, r8, lsr #4
   311f0:	andeq	r1, r3, r8, lsr #4
   311f4:	andeq	r1, r3, r8, lsr #4
   311f8:	andeq	r1, r3, r8, lsr #4
   311fc:	andeq	r1, r3, r8, lsr #4
   31200:	andeq	r1, r3, r8, lsr #4
   31204:	andeq	r1, r3, r8, lsr #4
   31208:	andeq	r1, r3, r8, lsr #4
   3120c:	andeq	r1, r3, r8, lsr #4
   31210:	andeq	r1, r3, r8, lsr #4
   31214:	andeq	r1, r3, r8, lsr #4
   31218:	andeq	r1, r3, r8, lsr #4
   3121c:	andeq	r1, r3, r8, lsr #4
   31220:	andeq	r1, r3, r8, lsr #4
   31224:	andeq	r1, r3, r8, lsr #4
   31228:	ldr	r0, [fp, #-20]	; 0xffffffec
   3122c:	add	r0, r0, #1
   31230:	str	r0, [fp, #-20]	; 0xffffffec
   31234:	ldr	r0, [sp, #28]
   31238:	add	r0, r0, #1
   3123c:	str	r0, [sp, #28]
   31240:	b	313e4 <__assert_fail@plt+0x1e82c>
   31244:	add	r0, sp, #20
   31248:	movw	r1, #0
   3124c:	and	r1, r1, #255	; 0xff
   31250:	movw	r2, #8
   31254:	bl	12900 <memset@plt>
   31258:	ldr	r1, [fp, #-20]	; 0xffffffec
   3125c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31260:	ldr	r2, [fp, #-20]	; 0xffffffec
   31264:	sub	r2, r0, r2
   31268:	add	r0, sp, #16
   3126c:	add	r3, sp, #20
   31270:	bl	52860 <__assert_fail@plt+0x3fca8>
   31274:	str	r0, [sp, #12]
   31278:	ldr	r0, [sp, #12]
   3127c:	cmn	r0, #1
   31280:	bne	312bc <__assert_fail@plt+0x1e704>
   31284:	ldr	r0, [fp, #-16]
   31288:	and	r0, r0, #1
   3128c:	cmp	r0, #0
   31290:	bne	312b0 <__assert_fail@plt+0x1e6f8>
   31294:	ldr	r0, [fp, #-20]	; 0xffffffec
   31298:	add	r0, r0, #1
   3129c:	str	r0, [fp, #-20]	; 0xffffffec
   312a0:	ldr	r0, [sp, #28]
   312a4:	add	r0, r0, #1
   312a8:	str	r0, [sp, #28]
   312ac:	b	313e0 <__assert_fail@plt+0x1e828>
   312b0:	mvn	r0, #0
   312b4:	str	r0, [fp, #-4]
   312b8:	b	314e4 <__assert_fail@plt+0x1e92c>
   312bc:	ldr	r0, [sp, #12]
   312c0:	cmn	r0, #2
   312c4:	bne	312fc <__assert_fail@plt+0x1e744>
   312c8:	ldr	r0, [fp, #-16]
   312cc:	and	r0, r0, #1
   312d0:	cmp	r0, #0
   312d4:	bne	312f0 <__assert_fail@plt+0x1e738>
   312d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   312dc:	str	r0, [fp, #-20]	; 0xffffffec
   312e0:	ldr	r0, [sp, #28]
   312e4:	add	r0, r0, #1
   312e8:	str	r0, [sp, #28]
   312ec:	b	313e0 <__assert_fail@plt+0x1e828>
   312f0:	mvn	r0, #0
   312f4:	str	r0, [fp, #-4]
   312f8:	b	314e4 <__assert_fail@plt+0x1e92c>
   312fc:	ldr	r0, [sp, #12]
   31300:	cmp	r0, #0
   31304:	bne	31310 <__assert_fail@plt+0x1e758>
   31308:	movw	r0, #1
   3130c:	str	r0, [sp, #12]
   31310:	ldr	r0, [sp, #16]
   31314:	bl	12540 <wcwidth@plt>
   31318:	str	r0, [sp, #8]
   3131c:	ldr	r0, [sp, #8]
   31320:	cmp	r0, #0
   31324:	blt	31358 <__assert_fail@plt+0x1e7a0>
   31328:	ldr	r0, [pc, #448]	; 314f0 <__assert_fail@plt+0x1e938>
   3132c:	ldr	r1, [sp, #8]
   31330:	ldr	r2, [sp, #28]
   31334:	sub	r0, r0, r2
   31338:	cmp	r1, r0
   3133c:	ble	31344 <__assert_fail@plt+0x1e78c>
   31340:	b	314dc <__assert_fail@plt+0x1e924>
   31344:	ldr	r0, [sp, #8]
   31348:	ldr	r1, [sp, #28]
   3134c:	add	r0, r1, r0
   31350:	str	r0, [sp, #28]
   31354:	b	313ac <__assert_fail@plt+0x1e7f4>
   31358:	ldr	r0, [fp, #-16]
   3135c:	and	r0, r0, #2
   31360:	cmp	r0, #0
   31364:	bne	3139c <__assert_fail@plt+0x1e7e4>
   31368:	ldr	r0, [sp, #16]
   3136c:	bl	1269c <iswcntrl@plt>
   31370:	cmp	r0, #0
   31374:	bne	31398 <__assert_fail@plt+0x1e7e0>
   31378:	ldr	r0, [pc, #368]	; 314f0 <__assert_fail@plt+0x1e938>
   3137c:	ldr	r1, [sp, #28]
   31380:	cmp	r1, r0
   31384:	bne	3138c <__assert_fail@plt+0x1e7d4>
   31388:	b	314dc <__assert_fail@plt+0x1e924>
   3138c:	ldr	r0, [sp, #28]
   31390:	add	r0, r0, #1
   31394:	str	r0, [sp, #28]
   31398:	b	313a8 <__assert_fail@plt+0x1e7f0>
   3139c:	mvn	r0, #0
   313a0:	str	r0, [fp, #-4]
   313a4:	b	314e4 <__assert_fail@plt+0x1e92c>
   313a8:	b	313ac <__assert_fail@plt+0x1e7f4>
   313ac:	ldr	r0, [sp, #12]
   313b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   313b4:	add	r0, r1, r0
   313b8:	str	r0, [fp, #-20]	; 0xffffffec
   313bc:	add	r0, sp, #20
   313c0:	bl	12600 <mbsinit@plt>
   313c4:	cmp	r0, #0
   313c8:	movw	r0, #0
   313cc:	movne	r0, #1
   313d0:	mvn	r1, #0
   313d4:	eor	r0, r0, r1
   313d8:	tst	r0, #1
   313dc:	bne	31258 <__assert_fail@plt+0x1e6a0>
   313e0:	b	313e4 <__assert_fail@plt+0x1e82c>
   313e4:	b	31074 <__assert_fail@plt+0x1e4bc>
   313e8:	ldr	r0, [sp, #28]
   313ec:	str	r0, [fp, #-4]
   313f0:	b	314e4 <__assert_fail@plt+0x1e92c>
   313f4:	b	313f8 <__assert_fail@plt+0x1e840>
   313f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   313fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31400:	cmp	r0, r1
   31404:	bcs	314d0 <__assert_fail@plt+0x1e918>
   31408:	ldr	r0, [fp, #-20]	; 0xffffffec
   3140c:	add	r1, r0, #1
   31410:	str	r1, [fp, #-20]	; 0xffffffec
   31414:	ldrb	r0, [r0]
   31418:	strb	r0, [sp, #7]
   3141c:	bl	12834 <__ctype_b_loc@plt>
   31420:	ldr	r0, [r0]
   31424:	ldrb	r1, [sp, #7]
   31428:	mov	r2, r1
   3142c:	add	r0, r0, r1, lsl #1
   31430:	ldrh	r0, [r0]
   31434:	and	r0, r0, #16384	; 0x4000
   31438:	cmp	r0, #0
   3143c:	beq	31464 <__assert_fail@plt+0x1e8ac>
   31440:	ldr	r0, [pc, #168]	; 314f0 <__assert_fail@plt+0x1e938>
   31444:	ldr	r1, [sp, #28]
   31448:	cmp	r1, r0
   3144c:	bne	31454 <__assert_fail@plt+0x1e89c>
   31450:	b	314dc <__assert_fail@plt+0x1e924>
   31454:	ldr	r0, [sp, #28]
   31458:	add	r0, r0, #1
   3145c:	str	r0, [sp, #28]
   31460:	b	314cc <__assert_fail@plt+0x1e914>
   31464:	ldr	r0, [fp, #-16]
   31468:	and	r0, r0, #2
   3146c:	cmp	r0, #0
   31470:	bne	314bc <__assert_fail@plt+0x1e904>
   31474:	bl	12834 <__ctype_b_loc@plt>
   31478:	ldr	r0, [r0]
   3147c:	ldrb	r1, [sp, #7]
   31480:	mov	r2, r1
   31484:	add	r0, r0, r1, lsl #1
   31488:	ldrh	r0, [r0]
   3148c:	and	r0, r0, #2
   31490:	cmp	r0, #0
   31494:	bne	314b8 <__assert_fail@plt+0x1e900>
   31498:	ldr	r0, [pc, #80]	; 314f0 <__assert_fail@plt+0x1e938>
   3149c:	ldr	r1, [sp, #28]
   314a0:	cmp	r1, r0
   314a4:	bne	314ac <__assert_fail@plt+0x1e8f4>
   314a8:	b	314dc <__assert_fail@plt+0x1e924>
   314ac:	ldr	r0, [sp, #28]
   314b0:	add	r0, r0, #1
   314b4:	str	r0, [sp, #28]
   314b8:	b	314c8 <__assert_fail@plt+0x1e910>
   314bc:	mvn	r0, #0
   314c0:	str	r0, [fp, #-4]
   314c4:	b	314e4 <__assert_fail@plt+0x1e92c>
   314c8:	b	314cc <__assert_fail@plt+0x1e914>
   314cc:	b	313f8 <__assert_fail@plt+0x1e840>
   314d0:	ldr	r0, [sp, #28]
   314d4:	str	r0, [fp, #-4]
   314d8:	b	314e4 <__assert_fail@plt+0x1e92c>
   314dc:	ldr	r0, [pc, #12]	; 314f0 <__assert_fail@plt+0x1e938>
   314e0:	str	r0, [fp, #-4]
   314e4:	ldr	r0, [fp, #-4]
   314e8:	mov	sp, fp
   314ec:	pop	{fp, pc}
   314f0:	svcvc	0x00ffffff
   314f4:	push	{fp, lr}
   314f8:	mov	fp, sp
   314fc:	sub	sp, sp, #24
   31500:	str	r0, [fp, #-4]
   31504:	ldr	r0, [fp, #-4]
   31508:	ldrb	r0, [r0, #12]
   3150c:	tst	r0, #1
   31510:	beq	31518 <__assert_fail@plt+0x1e960>
   31514:	b	31750 <__assert_fail@plt+0x1eb98>
   31518:	ldr	r0, [fp, #-4]
   3151c:	ldrb	r0, [r0]
   31520:	tst	r0, #1
   31524:	beq	3152c <__assert_fail@plt+0x1e974>
   31528:	b	315b8 <__assert_fail@plt+0x1ea00>
   3152c:	ldr	r0, [fp, #-4]
   31530:	ldr	r0, [r0, #16]
   31534:	ldrb	r0, [r0]
   31538:	bl	71254 <__assert_fail@plt+0x5e69c>
   3153c:	tst	r0, #1
   31540:	beq	31574 <__assert_fail@plt+0x1e9bc>
   31544:	ldr	r0, [fp, #-4]
   31548:	movw	r1, #1
   3154c:	str	r1, [r0, #20]
   31550:	ldr	r0, [fp, #-4]
   31554:	ldr	r0, [r0, #16]
   31558:	ldrb	r0, [r0]
   3155c:	ldr	r1, [fp, #-4]
   31560:	str	r0, [r1, #28]
   31564:	ldr	r0, [fp, #-4]
   31568:	movw	r1, #1
   3156c:	strb	r1, [r0, #24]
   31570:	b	31744 <__assert_fail@plt+0x1eb8c>
   31574:	ldr	r0, [fp, #-4]
   31578:	add	r0, r0, #4
   3157c:	bl	12600 <mbsinit@plt>
   31580:	cmp	r0, #0
   31584:	beq	3158c <__assert_fail@plt+0x1e9d4>
   31588:	b	315ac <__assert_fail@plt+0x1e9f4>
   3158c:	movw	r0, #41072	; 0xa070
   31590:	movt	r0, #7
   31594:	movw	r1, #41095	; 0xa087
   31598:	movt	r1, #7
   3159c:	movw	r2, #143	; 0x8f
   315a0:	movw	r3, #41107	; 0xa093
   315a4:	movt	r3, #7
   315a8:	bl	12bb8 <__assert_fail@plt>
   315ac:	ldr	r0, [fp, #-4]
   315b0:	movw	r1, #1
   315b4:	strb	r1, [r0]
   315b8:	ldr	r0, [fp, #-4]
   315bc:	add	r0, r0, #16
   315c0:	add	r0, r0, #12
   315c4:	ldr	r1, [fp, #-4]
   315c8:	ldr	r1, [r1, #16]
   315cc:	ldr	r2, [fp, #-4]
   315d0:	ldr	r2, [r2, #16]
   315d4:	str	r0, [fp, #-8]
   315d8:	str	r1, [sp, #12]
   315dc:	str	r2, [sp, #8]
   315e0:	bl	12720 <__ctype_get_mb_cur_max@plt>
   315e4:	ldr	r1, [sp, #8]
   315e8:	str	r0, [sp, #4]
   315ec:	mov	r0, r1
   315f0:	ldr	r1, [sp, #4]
   315f4:	bl	49920 <__assert_fail@plt+0x36d68>
   315f8:	ldr	r1, [fp, #-4]
   315fc:	add	r3, r1, #4
   31600:	ldr	r1, [fp, #-8]
   31604:	str	r0, [sp]
   31608:	mov	r0, r1
   3160c:	ldr	r1, [sp, #12]
   31610:	ldr	r2, [sp]
   31614:	bl	52860 <__assert_fail@plt+0x3fca8>
   31618:	ldr	r1, [fp, #-4]
   3161c:	str	r0, [r1, #20]
   31620:	ldr	r0, [fp, #-4]
   31624:	ldr	r0, [r0, #20]
   31628:	cmn	r0, #1
   3162c:	bne	3164c <__assert_fail@plt+0x1ea94>
   31630:	ldr	r0, [fp, #-4]
   31634:	movw	r1, #1
   31638:	str	r1, [r0, #20]
   3163c:	ldr	r0, [fp, #-4]
   31640:	movw	r1, #0
   31644:	strb	r1, [r0, #24]
   31648:	b	31740 <__assert_fail@plt+0x1eb88>
   3164c:	ldr	r0, [fp, #-4]
   31650:	ldr	r0, [r0, #20]
   31654:	cmn	r0, #2
   31658:	bne	31680 <__assert_fail@plt+0x1eac8>
   3165c:	ldr	r0, [fp, #-4]
   31660:	ldr	r0, [r0, #16]
   31664:	bl	12888 <strlen@plt>
   31668:	ldr	r1, [fp, #-4]
   3166c:	str	r0, [r1, #20]
   31670:	ldr	r0, [fp, #-4]
   31674:	movw	r1, #0
   31678:	strb	r1, [r0, #24]
   3167c:	b	3173c <__assert_fail@plt+0x1eb84>
   31680:	ldr	r0, [fp, #-4]
   31684:	ldr	r0, [r0, #20]
   31688:	cmp	r0, #0
   3168c:	bne	3170c <__assert_fail@plt+0x1eb54>
   31690:	ldr	r0, [fp, #-4]
   31694:	movw	r1, #1
   31698:	str	r1, [r0, #20]
   3169c:	ldr	r0, [fp, #-4]
   316a0:	ldr	r0, [r0, #16]
   316a4:	ldrb	r0, [r0]
   316a8:	cmp	r0, #0
   316ac:	bne	316b4 <__assert_fail@plt+0x1eafc>
   316b0:	b	316d4 <__assert_fail@plt+0x1eb1c>
   316b4:	movw	r0, #41155	; 0xa0c3
   316b8:	movt	r0, #7
   316bc:	movw	r1, #41095	; 0xa087
   316c0:	movt	r1, #7
   316c4:	movw	r2, #171	; 0xab
   316c8:	movw	r3, #41107	; 0xa093
   316cc:	movt	r3, #7
   316d0:	bl	12bb8 <__assert_fail@plt>
   316d4:	ldr	r0, [fp, #-4]
   316d8:	ldr	r0, [r0, #28]
   316dc:	cmp	r0, #0
   316e0:	bne	316e8 <__assert_fail@plt+0x1eb30>
   316e4:	b	31708 <__assert_fail@plt+0x1eb50>
   316e8:	movw	r0, #41178	; 0xa0da
   316ec:	movt	r0, #7
   316f0:	movw	r1, #41095	; 0xa087
   316f4:	movt	r1, #7
   316f8:	movw	r2, #172	; 0xac
   316fc:	movw	r3, #41107	; 0xa093
   31700:	movt	r3, #7
   31704:	bl	12bb8 <__assert_fail@plt>
   31708:	b	3170c <__assert_fail@plt+0x1eb54>
   3170c:	ldr	r0, [fp, #-4]
   31710:	movw	r1, #1
   31714:	strb	r1, [r0, #24]
   31718:	ldr	r0, [fp, #-4]
   3171c:	add	r0, r0, #4
   31720:	bl	12600 <mbsinit@plt>
   31724:	cmp	r0, #0
   31728:	beq	31738 <__assert_fail@plt+0x1eb80>
   3172c:	ldr	r0, [fp, #-4]
   31730:	movw	r1, #0
   31734:	strb	r1, [r0]
   31738:	b	3173c <__assert_fail@plt+0x1eb84>
   3173c:	b	31740 <__assert_fail@plt+0x1eb88>
   31740:	b	31744 <__assert_fail@plt+0x1eb8c>
   31744:	ldr	r0, [fp, #-4]
   31748:	movw	r1, #1
   3174c:	strb	r1, [r0, #12]
   31750:	mov	sp, fp
   31754:	pop	{fp, pc}
   31758:	sub	sp, sp, #8
   3175c:	str	r0, [sp, #4]
   31760:	str	r1, [sp]
   31764:	ldr	r0, [sp]
   31768:	ldr	r1, [sp, #4]
   3176c:	ldr	r2, [r1, #16]
   31770:	add	r0, r2, r0
   31774:	str	r0, [r1, #16]
   31778:	add	sp, sp, #8
   3177c:	bx	lr
   31780:	push	{fp, lr}
   31784:	mov	fp, sp
   31788:	sub	sp, sp, #8
   3178c:	str	r0, [sp, #4]
   31790:	str	r1, [sp]
   31794:	ldr	r0, [sp]
   31798:	ldrb	r0, [r0]
   3179c:	ldr	r1, [sp, #4]
   317a0:	and	r2, r0, #1
   317a4:	strb	r2, [r1]
   317a8:	tst	r0, #1
   317ac:	beq	317cc <__assert_fail@plt+0x1ec14>
   317b0:	ldr	r0, [sp, #4]
   317b4:	ldr	r1, [sp]
   317b8:	ldr	r2, [r1, #4]
   317bc:	str	r2, [r0, #4]
   317c0:	ldr	r1, [r1, #8]
   317c4:	str	r1, [r0, #8]
   317c8:	b	317e4 <__assert_fail@plt+0x1ec2c>
   317cc:	ldr	r0, [sp, #4]
   317d0:	add	r0, r0, #4
   317d4:	movw	r1, #0
   317d8:	and	r1, r1, #255	; 0xff
   317dc:	movw	r2, #8
   317e0:	bl	12900 <memset@plt>
   317e4:	ldr	r0, [sp]
   317e8:	ldrb	r0, [r0, #12]
   317ec:	ldr	r1, [sp, #4]
   317f0:	and	r0, r0, #1
   317f4:	strb	r0, [r1, #12]
   317f8:	ldr	r0, [sp, #4]
   317fc:	add	r0, r0, #16
   31800:	ldr	r1, [sp]
   31804:	add	r1, r1, #16
   31808:	bl	711a4 <__assert_fail@plt+0x5e5ec>
   3180c:	mov	sp, fp
   31810:	pop	{fp, pc}
   31814:	push	{fp, lr}
   31818:	mov	fp, sp
   3181c:	sub	sp, sp, #104	; 0x68
   31820:	str	r0, [fp, #-8]
   31824:	movw	r0, #0
   31828:	str	r0, [fp, #-16]
   3182c:	ldr	r0, [fp, #-8]
   31830:	ldrb	r0, [r0]
   31834:	movw	r1, #48	; 0x30
   31838:	cmp	r1, r0
   3183c:	bgt	31964 <__assert_fail@plt+0x1edac>
   31840:	ldr	r0, [fp, #-8]
   31844:	ldrb	r0, [r0]
   31848:	cmp	r0, #56	; 0x38
   3184c:	bge	31964 <__assert_fail@plt+0x1edac>
   31850:	movw	r0, #0
   31854:	str	r0, [fp, #-24]	; 0xffffffe8
   31858:	ldr	r0, [fp, #-8]
   3185c:	str	r0, [fp, #-20]	; 0xffffffec
   31860:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31864:	lsl	r0, r0, #3
   31868:	ldr	r1, [fp, #-20]	; 0xffffffec
   3186c:	add	r2, r1, #1
   31870:	str	r2, [fp, #-20]	; 0xffffffec
   31874:	ldrb	r1, [r1]
   31878:	add	r0, r0, r1
   3187c:	sub	r0, r0, #48	; 0x30
   31880:	str	r0, [fp, #-24]	; 0xffffffe8
   31884:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31888:	movw	r1, #4095	; 0xfff
   3188c:	cmp	r1, r0
   31890:	bcs	318a0 <__assert_fail@plt+0x1ece8>
   31894:	movw	r0, #0
   31898:	str	r0, [fp, #-4]
   3189c:	b	3200c <__assert_fail@plt+0x1f454>
   318a0:	b	318a4 <__assert_fail@plt+0x1ecec>
   318a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   318a8:	ldrb	r0, [r0]
   318ac:	movw	r1, #48	; 0x30
   318b0:	cmp	r1, r0
   318b4:	movw	r0, #0
   318b8:	str	r0, [sp, #36]	; 0x24
   318bc:	bgt	318d8 <__assert_fail@plt+0x1ed20>
   318c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   318c4:	ldrb	r0, [r0]
   318c8:	cmp	r0, #56	; 0x38
   318cc:	movw	r0, #0
   318d0:	movlt	r0, #1
   318d4:	str	r0, [sp, #36]	; 0x24
   318d8:	ldr	r0, [sp, #36]	; 0x24
   318dc:	tst	r0, #1
   318e0:	bne	31860 <__assert_fail@plt+0x1eca8>
   318e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   318e8:	ldrsb	r0, [r0]
   318ec:	cmp	r0, #0
   318f0:	beq	31900 <__assert_fail@plt+0x1ed48>
   318f4:	movw	r0, #0
   318f8:	str	r0, [fp, #-4]
   318fc:	b	3200c <__assert_fail@plt+0x1f454>
   31900:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31904:	bl	32018 <__assert_fail@plt+0x1f460>
   31908:	str	r0, [fp, #-28]	; 0xffffffe4
   3190c:	ldr	r0, [fp, #-20]	; 0xffffffec
   31910:	ldr	r1, [fp, #-8]
   31914:	sub	r0, r0, r1
   31918:	cmp	r0, #5
   3191c:	bge	3193c <__assert_fail@plt+0x1ed84>
   31920:	ldr	r0, [fp, #-28]	; 0xffffffe4
   31924:	and	r0, r0, #3072	; 0xc00
   31928:	orr	r0, r0, #512	; 0x200
   3192c:	movw	r1, #511	; 0x1ff
   31930:	orr	r0, r0, r1
   31934:	str	r0, [sp, #32]
   31938:	b	31948 <__assert_fail@plt+0x1ed90>
   3193c:	movw	r0, #4095	; 0xfff
   31940:	str	r0, [sp, #32]
   31944:	b	31948 <__assert_fail@plt+0x1ed90>
   31948:	ldr	r0, [sp, #32]
   3194c:	str	r0, [fp, #-32]	; 0xffffffe0
   31950:	ldr	r0, [fp, #-28]	; 0xffffffe4
   31954:	ldr	r1, [fp, #-32]	; 0xffffffe0
   31958:	bl	3202c <__assert_fail@plt+0x1f474>
   3195c:	str	r0, [fp, #-4]
   31960:	b	3200c <__assert_fail@plt+0x1f454>
   31964:	movw	r0, #1
   31968:	str	r0, [fp, #-36]	; 0xffffffdc
   3196c:	ldr	r0, [fp, #-8]
   31970:	str	r0, [fp, #-20]	; 0xffffffec
   31974:	ldr	r0, [fp, #-20]	; 0xffffffec
   31978:	ldrsb	r0, [r0]
   3197c:	cmp	r0, #0
   31980:	beq	319f0 <__assert_fail@plt+0x1ee38>
   31984:	ldr	r0, [fp, #-20]	; 0xffffffec
   31988:	ldrb	r0, [r0]
   3198c:	cmp	r0, #61	; 0x3d
   31990:	movw	r0, #1
   31994:	str	r0, [sp, #28]
   31998:	beq	319cc <__assert_fail@plt+0x1ee14>
   3199c:	ldr	r0, [fp, #-20]	; 0xffffffec
   319a0:	ldrb	r0, [r0]
   319a4:	cmp	r0, #43	; 0x2b
   319a8:	movw	r0, #1
   319ac:	str	r0, [sp, #28]
   319b0:	beq	319cc <__assert_fail@plt+0x1ee14>
   319b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   319b8:	ldrb	r0, [r0]
   319bc:	cmp	r0, #45	; 0x2d
   319c0:	movw	r0, #0
   319c4:	moveq	r0, #1
   319c8:	str	r0, [sp, #28]
   319cc:	ldr	r0, [sp, #28]
   319d0:	and	r0, r0, #1
   319d4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   319d8:	add	r0, r1, r0
   319dc:	str	r0, [fp, #-36]	; 0xffffffdc
   319e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   319e4:	add	r0, r0, #1
   319e8:	str	r0, [fp, #-20]	; 0xffffffec
   319ec:	b	31974 <__assert_fail@plt+0x1edbc>
   319f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   319f4:	movw	r1, #16
   319f8:	bl	4a448 <__assert_fail@plt+0x37890>
   319fc:	str	r0, [fp, #-12]
   31a00:	ldr	r0, [fp, #-8]
   31a04:	str	r0, [fp, #-20]	; 0xffffffec
   31a08:	movw	r0, #0
   31a0c:	str	r0, [fp, #-40]	; 0xffffffd8
   31a10:	ldr	r0, [fp, #-20]	; 0xffffffec
   31a14:	ldrb	r0, [r0]
   31a18:	mov	r1, r0
   31a1c:	cmp	r0, #43	; 0x2b
   31a20:	str	r1, [sp, #24]
   31a24:	beq	31adc <__assert_fail@plt+0x1ef24>
   31a28:	b	31a2c <__assert_fail@plt+0x1ee74>
   31a2c:	ldr	r0, [sp, #24]
   31a30:	cmp	r0, #45	; 0x2d
   31a34:	beq	31adc <__assert_fail@plt+0x1ef24>
   31a38:	b	31a3c <__assert_fail@plt+0x1ee84>
   31a3c:	ldr	r0, [sp, #24]
   31a40:	cmp	r0, #61	; 0x3d
   31a44:	beq	31adc <__assert_fail@plt+0x1ef24>
   31a48:	b	31a4c <__assert_fail@plt+0x1ee94>
   31a4c:	ldr	r0, [sp, #24]
   31a50:	cmp	r0, #97	; 0x61
   31a54:	beq	31ac8 <__assert_fail@plt+0x1ef10>
   31a58:	b	31a5c <__assert_fail@plt+0x1eea4>
   31a5c:	ldr	r0, [sp, #24]
   31a60:	cmp	r0, #103	; 0x67
   31a64:	beq	31aa0 <__assert_fail@plt+0x1eee8>
   31a68:	b	31a6c <__assert_fail@plt+0x1eeb4>
   31a6c:	ldr	r0, [sp, #24]
   31a70:	cmp	r0, #111	; 0x6f
   31a74:	beq	31ab4 <__assert_fail@plt+0x1eefc>
   31a78:	b	31a7c <__assert_fail@plt+0x1eec4>
   31a7c:	ldr	r0, [sp, #24]
   31a80:	cmp	r0, #117	; 0x75
   31a84:	beq	31a90 <__assert_fail@plt+0x1eed8>
   31a88:	b	31a8c <__assert_fail@plt+0x1eed4>
   31a8c:	b	31ffc <__assert_fail@plt+0x1f444>
   31a90:	ldr	r0, [fp, #-40]	; 0xffffffd8
   31a94:	orr	r0, r0, #2496	; 0x9c0
   31a98:	str	r0, [fp, #-40]	; 0xffffffd8
   31a9c:	b	31ae0 <__assert_fail@plt+0x1ef28>
   31aa0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   31aa4:	movw	r1, #1080	; 0x438
   31aa8:	orr	r0, r0, r1
   31aac:	str	r0, [fp, #-40]	; 0xffffffd8
   31ab0:	b	31ae0 <__assert_fail@plt+0x1ef28>
   31ab4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   31ab8:	movw	r1, #519	; 0x207
   31abc:	orr	r0, r0, r1
   31ac0:	str	r0, [fp, #-40]	; 0xffffffd8
   31ac4:	b	31ae0 <__assert_fail@plt+0x1ef28>
   31ac8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   31acc:	movw	r1, #4095	; 0xfff
   31ad0:	orr	r0, r0, r1
   31ad4:	str	r0, [fp, #-40]	; 0xffffffd8
   31ad8:	b	31ae0 <__assert_fail@plt+0x1ef28>
   31adc:	b	31af4 <__assert_fail@plt+0x1ef3c>
   31ae0:	b	31ae4 <__assert_fail@plt+0x1ef2c>
   31ae4:	ldr	r0, [fp, #-20]	; 0xffffffec
   31ae8:	add	r0, r0, #1
   31aec:	str	r0, [fp, #-20]	; 0xffffffec
   31af0:	b	31a10 <__assert_fail@plt+0x1ee58>
   31af4:	b	31af8 <__assert_fail@plt+0x1ef40>
   31af8:	ldr	r0, [fp, #-20]	; 0xffffffec
   31afc:	add	r1, r0, #1
   31b00:	str	r1, [fp, #-20]	; 0xffffffec
   31b04:	ldrb	r0, [r0]
   31b08:	strb	r0, [fp, #-41]	; 0xffffffd7
   31b0c:	mov	r0, #0
   31b10:	str	r0, [sp, #52]	; 0x34
   31b14:	mov	r0, #3
   31b18:	strb	r0, [sp, #51]	; 0x33
   31b1c:	ldr	r0, [fp, #-20]	; 0xffffffec
   31b20:	ldrb	r0, [r0]
   31b24:	sub	r0, r0, #48	; 0x30
   31b28:	cmp	r0, #69	; 0x45
   31b2c:	str	r0, [sp, #20]
   31b30:	bhi	31d7c <__assert_fail@plt+0x1f1c4>
   31b34:	add	r0, pc, #8
   31b38:	ldr	r1, [sp, #20]
   31b3c:	ldr	r0, [r0, r1, lsl #2]
   31b40:	mov	pc, r0
   31b44:	andeq	r1, r3, ip, asr ip
   31b48:	andeq	r1, r3, ip, asr ip
   31b4c:	andeq	r1, r3, ip, asr ip
   31b50:	andeq	r1, r3, ip, asr ip
   31b54:	andeq	r1, r3, ip, asr ip
   31b58:	andeq	r1, r3, ip, asr ip
   31b5c:	andeq	r1, r3, ip, asr ip
   31b60:	andeq	r1, r3, ip, asr ip
   31b64:	andeq	r1, r3, ip, ror sp
   31b68:	andeq	r1, r3, ip, ror sp
   31b6c:	andeq	r1, r3, ip, ror sp
   31b70:	andeq	r1, r3, ip, ror sp
   31b74:	andeq	r1, r3, ip, ror sp
   31b78:	andeq	r1, r3, ip, ror sp
   31b7c:	andeq	r1, r3, ip, ror sp
   31b80:	andeq	r1, r3, ip, ror sp
   31b84:	andeq	r1, r3, ip, ror sp
   31b88:	andeq	r1, r3, ip, ror sp
   31b8c:	andeq	r1, r3, ip, ror sp
   31b90:	andeq	r1, r3, ip, ror sp
   31b94:	andeq	r1, r3, ip, ror sp
   31b98:	andeq	r1, r3, ip, ror sp
   31b9c:	andeq	r1, r3, ip, ror sp
   31ba0:	andeq	r1, r3, ip, ror sp
   31ba4:	andeq	r1, r3, ip, ror sp
   31ba8:	andeq	r1, r3, ip, ror sp
   31bac:	andeq	r1, r3, ip, ror sp
   31bb0:	andeq	r1, r3, ip, ror sp
   31bb4:	andeq	r1, r3, ip, ror sp
   31bb8:	andeq	r1, r3, ip, ror sp
   31bbc:	andeq	r1, r3, ip, ror sp
   31bc0:	andeq	r1, r3, ip, ror sp
   31bc4:	andeq	r1, r3, ip, ror sp
   31bc8:	andeq	r1, r3, ip, ror sp
   31bcc:	andeq	r1, r3, ip, ror sp
   31bd0:	andeq	r1, r3, ip, ror sp
   31bd4:	andeq	r1, r3, ip, ror sp
   31bd8:	andeq	r1, r3, ip, ror sp
   31bdc:	andeq	r1, r3, ip, ror sp
   31be0:	andeq	r1, r3, ip, ror sp
   31be4:	andeq	r1, r3, ip, ror sp
   31be8:	andeq	r1, r3, ip, ror sp
   31bec:	andeq	r1, r3, ip, ror sp
   31bf0:	andeq	r1, r3, ip, ror sp
   31bf4:	andeq	r1, r3, ip, ror sp
   31bf8:	andeq	r1, r3, ip, ror sp
   31bfc:	andeq	r1, r3, ip, ror sp
   31c00:	andeq	r1, r3, ip, ror sp
   31c04:	andeq	r1, r3, ip, ror sp
   31c08:	andeq	r1, r3, ip, ror sp
   31c0c:	andeq	r1, r3, ip, ror sp
   31c10:	andeq	r1, r3, ip, ror sp
   31c14:	andeq	r1, r3, ip, ror sp
   31c18:	andeq	r1, r3, ip, ror sp
   31c1c:	andeq	r1, r3, ip, ror sp
   31c20:	andeq	r1, r3, ip, asr #26
   31c24:	andeq	r1, r3, ip, ror sp
   31c28:	andeq	r1, r3, ip, ror sp
   31c2c:	andeq	r1, r3, ip, ror sp
   31c30:	andeq	r1, r3, ip, ror sp
   31c34:	andeq	r1, r3, ip, ror sp
   31c38:	andeq	r1, r3, ip, ror sp
   31c3c:	andeq	r1, r3, ip, ror sp
   31c40:	andeq	r1, r3, r4, ror #26
   31c44:	andeq	r1, r3, ip, ror sp
   31c48:	andeq	r1, r3, ip, ror sp
   31c4c:	andeq	r1, r3, ip, ror sp
   31c50:	andeq	r1, r3, ip, ror sp
   31c54:	andeq	r1, r3, ip, ror sp
   31c58:	andeq	r1, r3, r4, lsr sp
   31c5c:	movw	r0, #0
   31c60:	str	r0, [sp, #40]	; 0x28
   31c64:	ldr	r0, [sp, #40]	; 0x28
   31c68:	lsl	r0, r0, #3
   31c6c:	ldr	r1, [fp, #-20]	; 0xffffffec
   31c70:	add	r2, r1, #1
   31c74:	str	r2, [fp, #-20]	; 0xffffffec
   31c78:	ldrb	r1, [r1]
   31c7c:	add	r0, r0, r1
   31c80:	sub	r0, r0, #48	; 0x30
   31c84:	str	r0, [sp, #40]	; 0x28
   31c88:	ldr	r0, [sp, #40]	; 0x28
   31c8c:	movw	r1, #4095	; 0xfff
   31c90:	cmp	r1, r0
   31c94:	bcs	31c9c <__assert_fail@plt+0x1f0e4>
   31c98:	b	31ffc <__assert_fail@plt+0x1f444>
   31c9c:	b	31ca0 <__assert_fail@plt+0x1f0e8>
   31ca0:	ldr	r0, [fp, #-20]	; 0xffffffec
   31ca4:	ldrb	r0, [r0]
   31ca8:	movw	r1, #48	; 0x30
   31cac:	cmp	r1, r0
   31cb0:	movw	r0, #0
   31cb4:	str	r0, [sp, #16]
   31cb8:	bgt	31cd4 <__assert_fail@plt+0x1f11c>
   31cbc:	ldr	r0, [fp, #-20]	; 0xffffffec
   31cc0:	ldrb	r0, [r0]
   31cc4:	cmp	r0, #56	; 0x38
   31cc8:	movw	r0, #0
   31ccc:	movlt	r0, #1
   31cd0:	str	r0, [sp, #16]
   31cd4:	ldr	r0, [sp, #16]
   31cd8:	tst	r0, #1
   31cdc:	bne	31c64 <__assert_fail@plt+0x1f0ac>
   31ce0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   31ce4:	cmp	r0, #0
   31ce8:	bne	31d0c <__assert_fail@plt+0x1f154>
   31cec:	ldr	r0, [fp, #-20]	; 0xffffffec
   31cf0:	ldrb	r0, [r0]
   31cf4:	cmp	r0, #0
   31cf8:	beq	31d10 <__assert_fail@plt+0x1f158>
   31cfc:	ldr	r0, [fp, #-20]	; 0xffffffec
   31d00:	ldrb	r0, [r0]
   31d04:	cmp	r0, #44	; 0x2c
   31d08:	beq	31d10 <__assert_fail@plt+0x1f158>
   31d0c:	b	31ffc <__assert_fail@plt+0x1f444>
   31d10:	movw	r0, #4095	; 0xfff
   31d14:	str	r0, [sp, #52]	; 0x34
   31d18:	str	r0, [fp, #-40]	; 0xffffffd8
   31d1c:	ldr	r0, [sp, #40]	; 0x28
   31d20:	bl	32018 <__assert_fail@plt+0x1f460>
   31d24:	str	r0, [fp, #-48]	; 0xffffffd0
   31d28:	movw	r0, #1
   31d2c:	strb	r0, [sp, #51]	; 0x33
   31d30:	b	31eb0 <__assert_fail@plt+0x1f2f8>
   31d34:	movw	r0, #448	; 0x1c0
   31d38:	str	r0, [fp, #-48]	; 0xffffffd0
   31d3c:	ldr	r0, [fp, #-20]	; 0xffffffec
   31d40:	add	r0, r0, #1
   31d44:	str	r0, [fp, #-20]	; 0xffffffec
   31d48:	b	31eb0 <__assert_fail@plt+0x1f2f8>
   31d4c:	movw	r0, #56	; 0x38
   31d50:	str	r0, [fp, #-48]	; 0xffffffd0
   31d54:	ldr	r0, [fp, #-20]	; 0xffffffec
   31d58:	add	r0, r0, #1
   31d5c:	str	r0, [fp, #-20]	; 0xffffffec
   31d60:	b	31eb0 <__assert_fail@plt+0x1f2f8>
   31d64:	movw	r0, #7
   31d68:	str	r0, [fp, #-48]	; 0xffffffd0
   31d6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   31d70:	add	r0, r0, #1
   31d74:	str	r0, [fp, #-20]	; 0xffffffec
   31d78:	b	31eb0 <__assert_fail@plt+0x1f2f8>
   31d7c:	movw	r0, #0
   31d80:	str	r0, [fp, #-48]	; 0xffffffd0
   31d84:	movw	r0, #1
   31d88:	strb	r0, [sp, #51]	; 0x33
   31d8c:	ldr	r0, [fp, #-20]	; 0xffffffec
   31d90:	ldrb	r0, [r0]
   31d94:	sub	r0, r0, #88	; 0x58
   31d98:	cmp	r0, #32
   31d9c:	str	r0, [sp, #12]
   31da0:	bhi	31e94 <__assert_fail@plt+0x1f2dc>
   31da4:	add	r0, pc, #8
   31da8:	ldr	r1, [sp, #12]
   31dac:	ldr	r0, [r0, r1, lsl #2]
   31db0:	mov	pc, r0
   31db4:	andeq	r1, r3, r8, ror #28
   31db8:	muleq	r3, r4, lr
   31dbc:	muleq	r3, r4, lr
   31dc0:	muleq	r3, r4, lr
   31dc4:	muleq	r3, r4, lr
   31dc8:	muleq	r3, r4, lr
   31dcc:	muleq	r3, r4, lr
   31dd0:	muleq	r3, r4, lr
   31dd4:	muleq	r3, r4, lr
   31dd8:	muleq	r3, r4, lr
   31ddc:	muleq	r3, r4, lr
   31de0:	muleq	r3, r4, lr
   31de4:	muleq	r3, r4, lr
   31de8:	muleq	r3, r4, lr
   31dec:	muleq	r3, r4, lr
   31df0:	muleq	r3, r4, lr
   31df4:	muleq	r3, r4, lr
   31df8:	muleq	r3, r4, lr
   31dfc:	muleq	r3, r4, lr
   31e00:	muleq	r3, r4, lr
   31e04:	muleq	r3, r4, lr
   31e08:	muleq	r3, r4, lr
   31e0c:	muleq	r3, r4, lr
   31e10:	muleq	r3, r4, lr
   31e14:	muleq	r3, r4, lr
   31e18:	muleq	r3, r4, lr
   31e1c:	andeq	r1, r3, r8, lsr lr
   31e20:	andeq	r1, r3, r4, ror lr
   31e24:	andeq	r1, r3, r4, lsl #29
   31e28:	muleq	r3, r4, lr
   31e2c:	muleq	r3, r4, lr
   31e30:	andeq	r1, r3, r8, asr #28
   31e34:	andeq	r1, r3, r8, asr lr
   31e38:	ldr	r0, [fp, #-48]	; 0xffffffd0
   31e3c:	orr	r0, r0, #292	; 0x124
   31e40:	str	r0, [fp, #-48]	; 0xffffffd0
   31e44:	b	31e98 <__assert_fail@plt+0x1f2e0>
   31e48:	ldr	r0, [fp, #-48]	; 0xffffffd0
   31e4c:	orr	r0, r0, #146	; 0x92
   31e50:	str	r0, [fp, #-48]	; 0xffffffd0
   31e54:	b	31e98 <__assert_fail@plt+0x1f2e0>
   31e58:	ldr	r0, [fp, #-48]	; 0xffffffd0
   31e5c:	orr	r0, r0, #73	; 0x49
   31e60:	str	r0, [fp, #-48]	; 0xffffffd0
   31e64:	b	31e98 <__assert_fail@plt+0x1f2e0>
   31e68:	movw	r0, #2
   31e6c:	strb	r0, [sp, #51]	; 0x33
   31e70:	b	31e98 <__assert_fail@plt+0x1f2e0>
   31e74:	ldr	r0, [fp, #-48]	; 0xffffffd0
   31e78:	orr	r0, r0, #3072	; 0xc00
   31e7c:	str	r0, [fp, #-48]	; 0xffffffd0
   31e80:	b	31e98 <__assert_fail@plt+0x1f2e0>
   31e84:	ldr	r0, [fp, #-48]	; 0xffffffd0
   31e88:	orr	r0, r0, #512	; 0x200
   31e8c:	str	r0, [fp, #-48]	; 0xffffffd0
   31e90:	b	31e98 <__assert_fail@plt+0x1f2e0>
   31e94:	b	31eac <__assert_fail@plt+0x1f2f4>
   31e98:	b	31e9c <__assert_fail@plt+0x1f2e4>
   31e9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   31ea0:	add	r0, r0, #1
   31ea4:	str	r0, [fp, #-20]	; 0xffffffec
   31ea8:	b	31d8c <__assert_fail@plt+0x1f1d4>
   31eac:	b	31eb0 <__assert_fail@plt+0x1f2f8>
   31eb0:	ldr	r0, [fp, #-12]
   31eb4:	ldr	r1, [fp, #-16]
   31eb8:	add	r2, r1, #1
   31ebc:	str	r2, [fp, #-16]
   31ec0:	add	r0, r0, r1, lsl #4
   31ec4:	str	r0, [sp, #44]	; 0x2c
   31ec8:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   31ecc:	ldr	r1, [sp, #44]	; 0x2c
   31ed0:	strb	r0, [r1]
   31ed4:	ldrb	r0, [sp, #51]	; 0x33
   31ed8:	ldr	r1, [sp, #44]	; 0x2c
   31edc:	strb	r0, [r1, #1]
   31ee0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   31ee4:	ldr	r1, [sp, #44]	; 0x2c
   31ee8:	str	r0, [r1, #4]
   31eec:	ldr	r0, [fp, #-48]	; 0xffffffd0
   31ef0:	ldr	r1, [sp, #44]	; 0x2c
   31ef4:	str	r0, [r1, #8]
   31ef8:	ldr	r0, [sp, #52]	; 0x34
   31efc:	cmp	r0, #0
   31f00:	beq	31f10 <__assert_fail@plt+0x1f358>
   31f04:	ldr	r0, [sp, #52]	; 0x34
   31f08:	str	r0, [sp, #8]
   31f0c:	b	31f40 <__assert_fail@plt+0x1f388>
   31f10:	ldr	r0, [fp, #-40]	; 0xffffffd8
   31f14:	cmp	r0, #0
   31f18:	beq	31f30 <__assert_fail@plt+0x1f378>
   31f1c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   31f20:	ldr	r1, [fp, #-48]	; 0xffffffd0
   31f24:	and	r0, r0, r1
   31f28:	str	r0, [sp, #4]
   31f2c:	b	31f38 <__assert_fail@plt+0x1f380>
   31f30:	ldr	r0, [fp, #-48]	; 0xffffffd0
   31f34:	str	r0, [sp, #4]
   31f38:	ldr	r0, [sp, #4]
   31f3c:	str	r0, [sp, #8]
   31f40:	ldr	r0, [sp, #8]
   31f44:	ldr	r1, [sp, #44]	; 0x2c
   31f48:	str	r0, [r1, #12]
   31f4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   31f50:	ldrb	r0, [r0]
   31f54:	cmp	r0, #61	; 0x3d
   31f58:	movw	r0, #1
   31f5c:	str	r0, [sp]
   31f60:	beq	31f94 <__assert_fail@plt+0x1f3dc>
   31f64:	ldr	r0, [fp, #-20]	; 0xffffffec
   31f68:	ldrb	r0, [r0]
   31f6c:	cmp	r0, #43	; 0x2b
   31f70:	movw	r0, #1
   31f74:	str	r0, [sp]
   31f78:	beq	31f94 <__assert_fail@plt+0x1f3dc>
   31f7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   31f80:	ldrb	r0, [r0]
   31f84:	cmp	r0, #45	; 0x2d
   31f88:	movw	r0, #0
   31f8c:	moveq	r0, #1
   31f90:	str	r0, [sp]
   31f94:	ldr	r0, [sp]
   31f98:	tst	r0, #1
   31f9c:	bne	31af8 <__assert_fail@plt+0x1ef40>
   31fa0:	ldr	r0, [fp, #-20]	; 0xffffffec
   31fa4:	ldrb	r0, [r0]
   31fa8:	cmp	r0, #44	; 0x2c
   31fac:	beq	31fb4 <__assert_fail@plt+0x1f3fc>
   31fb0:	b	31fc8 <__assert_fail@plt+0x1f410>
   31fb4:	b	31fb8 <__assert_fail@plt+0x1f400>
   31fb8:	ldr	r0, [fp, #-20]	; 0xffffffec
   31fbc:	add	r0, r0, #1
   31fc0:	str	r0, [fp, #-20]	; 0xffffffec
   31fc4:	b	31a08 <__assert_fail@plt+0x1ee50>
   31fc8:	ldr	r0, [fp, #-20]	; 0xffffffec
   31fcc:	ldrb	r0, [r0]
   31fd0:	cmp	r0, #0
   31fd4:	bne	31ff8 <__assert_fail@plt+0x1f440>
   31fd8:	ldr	r0, [fp, #-12]
   31fdc:	ldr	r1, [fp, #-16]
   31fe0:	add	r0, r0, r1, lsl #4
   31fe4:	movw	r1, #0
   31fe8:	strb	r1, [r0, #1]
   31fec:	ldr	r0, [fp, #-12]
   31ff0:	str	r0, [fp, #-4]
   31ff4:	b	3200c <__assert_fail@plt+0x1f454>
   31ff8:	b	31ffc <__assert_fail@plt+0x1f444>
   31ffc:	ldr	r0, [fp, #-12]
   32000:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   32004:	movw	r0, #0
   32008:	str	r0, [fp, #-4]
   3200c:	ldr	r0, [fp, #-4]
   32010:	mov	sp, fp
   32014:	pop	{fp, pc}
   32018:	sub	sp, sp, #4
   3201c:	str	r0, [sp]
   32020:	ldr	r0, [sp]
   32024:	add	sp, sp, #4
   32028:	bx	lr
   3202c:	push	{fp, lr}
   32030:	mov	fp, sp
   32034:	sub	sp, sp, #16
   32038:	str	r0, [fp, #-4]
   3203c:	str	r1, [sp, #8]
   32040:	movw	r0, #32
   32044:	bl	4a2f0 <__assert_fail@plt+0x37738>
   32048:	str	r0, [sp, #4]
   3204c:	ldr	r0, [sp, #4]
   32050:	movw	r1, #61	; 0x3d
   32054:	strb	r1, [r0]
   32058:	ldr	r0, [sp, #4]
   3205c:	movw	r1, #1
   32060:	strb	r1, [r0, #1]
   32064:	ldr	r0, [sp, #4]
   32068:	movw	r1, #4095	; 0xfff
   3206c:	str	r1, [r0, #4]
   32070:	ldr	r0, [fp, #-4]
   32074:	ldr	r1, [sp, #4]
   32078:	str	r0, [r1, #8]
   3207c:	ldr	r0, [sp, #8]
   32080:	ldr	r1, [sp, #4]
   32084:	str	r0, [r1, #12]
   32088:	ldr	r0, [sp, #4]
   3208c:	movw	r1, #0
   32090:	strb	r1, [r0, #17]
   32094:	ldr	r0, [sp, #4]
   32098:	mov	sp, fp
   3209c:	pop	{fp, pc}
   320a0:	push	{fp, lr}
   320a4:	mov	fp, sp
   320a8:	sub	sp, sp, #112	; 0x70
   320ac:	str	r0, [fp, #-8]
   320b0:	ldr	r0, [fp, #-8]
   320b4:	mov	r1, sp
   320b8:	bl	7563c <__assert_fail@plt+0x62a84>
   320bc:	cmp	r0, #0
   320c0:	beq	320d0 <__assert_fail@plt+0x1f518>
   320c4:	movw	r0, #0
   320c8:	str	r0, [fp, #-4]
   320cc:	b	320e0 <__assert_fail@plt+0x1f528>
   320d0:	ldr	r0, [sp, #16]
   320d4:	movw	r1, #4095	; 0xfff
   320d8:	bl	3202c <__assert_fail@plt+0x1f474>
   320dc:	str	r0, [fp, #-4]
   320e0:	ldr	r0, [fp, #-4]
   320e4:	mov	sp, fp
   320e8:	pop	{fp, pc}
   320ec:	sub	sp, sp, #56	; 0x38
   320f0:	ldr	ip, [sp, #56]	; 0x38
   320f4:	str	r0, [sp, #52]	; 0x34
   320f8:	and	r0, r1, #1
   320fc:	strb	r0, [sp, #51]	; 0x33
   32100:	str	r2, [sp, #44]	; 0x2c
   32104:	str	r3, [sp, #40]	; 0x28
   32108:	ldr	r0, [sp, #52]	; 0x34
   3210c:	movw	r1, #4095	; 0xfff
   32110:	and	r0, r0, r1
   32114:	str	r0, [sp, #36]	; 0x24
   32118:	movw	r0, #0
   3211c:	str	r0, [sp, #32]
   32120:	ldr	r0, [sp, #40]	; 0x28
   32124:	ldrb	r0, [r0, #1]
   32128:	cmp	r0, #0
   3212c:	beq	323b0 <__assert_fail@plt+0x1f7f8>
   32130:	ldr	r0, [sp, #40]	; 0x28
   32134:	ldr	r0, [r0, #4]
   32138:	str	r0, [sp, #28]
   3213c:	ldrb	r0, [sp, #51]	; 0x33
   32140:	and	r0, r0, #1
   32144:	cmp	r0, #0
   32148:	movwne	r0, #3072	; 0xc00
   3214c:	ldr	r1, [sp, #40]	; 0x28
   32150:	ldr	r1, [r1, #12]
   32154:	bic	r0, r0, r1
   32158:	str	r0, [sp, #24]
   3215c:	ldr	r0, [sp, #40]	; 0x28
   32160:	ldr	r0, [r0, #8]
   32164:	str	r0, [sp, #20]
   32168:	ldr	r0, [sp, #40]	; 0x28
   3216c:	ldrb	r0, [r0, #1]
   32170:	mov	r1, r0
   32174:	cmp	r0, #1
   32178:	str	r1, [sp, #12]
   3217c:	beq	321a4 <__assert_fail@plt+0x1f5ec>
   32180:	b	32184 <__assert_fail@plt+0x1f5cc>
   32184:	ldr	r0, [sp, #12]
   32188:	cmp	r0, #2
   3218c:	beq	32230 <__assert_fail@plt+0x1f678>
   32190:	b	32194 <__assert_fail@plt+0x1f5dc>
   32194:	ldr	r0, [sp, #12]
   32198:	cmp	r0, #3
   3219c:	beq	321a8 <__assert_fail@plt+0x1f5f0>
   321a0:	b	3225c <__assert_fail@plt+0x1f6a4>
   321a4:	b	3225c <__assert_fail@plt+0x1f6a4>
   321a8:	ldr	r0, [sp, #36]	; 0x24
   321ac:	ldr	r1, [sp, #20]
   321b0:	and	r0, r1, r0
   321b4:	str	r0, [sp, #20]
   321b8:	ldr	r0, [sp, #20]
   321bc:	and	r0, r0, #292	; 0x124
   321c0:	cmp	r0, #0
   321c4:	movw	r0, #0
   321c8:	movne	r0, #1
   321cc:	tst	r0, #1
   321d0:	movw	r0, #292	; 0x124
   321d4:	moveq	r0, #0
   321d8:	ldr	r1, [sp, #20]
   321dc:	and	r1, r1, #146	; 0x92
   321e0:	cmp	r1, #0
   321e4:	movw	r1, #0
   321e8:	movne	r1, #1
   321ec:	tst	r1, #1
   321f0:	movw	r1, #146	; 0x92
   321f4:	moveq	r1, #0
   321f8:	orr	r0, r0, r1
   321fc:	ldr	r1, [sp, #20]
   32200:	and	r1, r1, #73	; 0x49
   32204:	cmp	r1, #0
   32208:	movw	r1, #0
   3220c:	movne	r1, #1
   32210:	tst	r1, #1
   32214:	movw	r1, #73	; 0x49
   32218:	moveq	r1, #0
   3221c:	orr	r0, r0, r1
   32220:	ldr	r1, [sp, #20]
   32224:	orr	r0, r1, r0
   32228:	str	r0, [sp, #20]
   3222c:	b	3225c <__assert_fail@plt+0x1f6a4>
   32230:	ldr	r0, [sp, #36]	; 0x24
   32234:	and	r0, r0, #73	; 0x49
   32238:	ldrb	r1, [sp, #51]	; 0x33
   3223c:	and	r1, r1, #1
   32240:	orr	r0, r0, r1
   32244:	cmp	r0, #0
   32248:	beq	32258 <__assert_fail@plt+0x1f6a0>
   3224c:	ldr	r0, [sp, #20]
   32250:	orr	r0, r0, #73	; 0x49
   32254:	str	r0, [sp, #20]
   32258:	b	3225c <__assert_fail@plt+0x1f6a4>
   3225c:	ldr	r0, [sp, #28]
   32260:	cmp	r0, #0
   32264:	beq	32274 <__assert_fail@plt+0x1f6bc>
   32268:	ldr	r0, [sp, #28]
   3226c:	str	r0, [sp, #8]
   32270:	b	32284 <__assert_fail@plt+0x1f6cc>
   32274:	ldr	r0, [sp, #44]	; 0x2c
   32278:	mvn	r1, #0
   3227c:	eor	r0, r0, r1
   32280:	str	r0, [sp, #8]
   32284:	ldr	r0, [sp, #8]
   32288:	ldr	r1, [sp, #24]
   3228c:	bic	r0, r0, r1
   32290:	ldr	r1, [sp, #20]
   32294:	and	r0, r1, r0
   32298:	str	r0, [sp, #20]
   3229c:	ldr	r0, [sp, #40]	; 0x28
   322a0:	ldrb	r0, [r0]
   322a4:	mov	r1, r0
   322a8:	cmp	r0, #43	; 0x2b
   322ac:	str	r1, [sp, #4]
   322b0:	beq	32350 <__assert_fail@plt+0x1f798>
   322b4:	b	322b8 <__assert_fail@plt+0x1f700>
   322b8:	ldr	r0, [sp, #4]
   322bc:	cmp	r0, #45	; 0x2d
   322c0:	beq	32374 <__assert_fail@plt+0x1f7bc>
   322c4:	b	322c8 <__assert_fail@plt+0x1f710>
   322c8:	ldr	r0, [sp, #4]
   322cc:	cmp	r0, #61	; 0x3d
   322d0:	bne	3239c <__assert_fail@plt+0x1f7e4>
   322d4:	b	322d8 <__assert_fail@plt+0x1f720>
   322d8:	ldr	r0, [sp, #28]
   322dc:	cmp	r0, #0
   322e0:	beq	322f8 <__assert_fail@plt+0x1f740>
   322e4:	ldr	r0, [sp, #28]
   322e8:	mvn	r1, #0
   322ec:	eor	r0, r0, r1
   322f0:	str	r0, [sp]
   322f4:	b	32304 <__assert_fail@plt+0x1f74c>
   322f8:	movw	r0, #0
   322fc:	str	r0, [sp]
   32300:	b	32304 <__assert_fail@plt+0x1f74c>
   32304:	ldr	r0, [sp]
   32308:	ldr	r1, [sp, #24]
   3230c:	orr	r0, r0, r1
   32310:	str	r0, [sp, #16]
   32314:	ldr	r0, [sp, #16]
   32318:	mvn	r1, #0
   3231c:	eor	r0, r0, r1
   32320:	movw	r1, #4095	; 0xfff
   32324:	and	r0, r0, r1
   32328:	ldr	r1, [sp, #32]
   3232c:	orr	r0, r1, r0
   32330:	str	r0, [sp, #32]
   32334:	ldr	r0, [sp, #36]	; 0x24
   32338:	ldr	r1, [sp, #16]
   3233c:	and	r0, r0, r1
   32340:	ldr	r1, [sp, #20]
   32344:	orr	r0, r0, r1
   32348:	str	r0, [sp, #36]	; 0x24
   3234c:	b	3239c <__assert_fail@plt+0x1f7e4>
   32350:	ldr	r0, [sp, #20]
   32354:	ldr	r1, [sp, #32]
   32358:	orr	r0, r1, r0
   3235c:	str	r0, [sp, #32]
   32360:	ldr	r0, [sp, #20]
   32364:	ldr	r1, [sp, #36]	; 0x24
   32368:	orr	r0, r1, r0
   3236c:	str	r0, [sp, #36]	; 0x24
   32370:	b	3239c <__assert_fail@plt+0x1f7e4>
   32374:	ldr	r0, [sp, #20]
   32378:	ldr	r1, [sp, #32]
   3237c:	orr	r0, r1, r0
   32380:	str	r0, [sp, #32]
   32384:	ldr	r0, [sp, #20]
   32388:	mvn	r1, #0
   3238c:	eor	r0, r0, r1
   32390:	ldr	r1, [sp, #36]	; 0x24
   32394:	and	r0, r1, r0
   32398:	str	r0, [sp, #36]	; 0x24
   3239c:	b	323a0 <__assert_fail@plt+0x1f7e8>
   323a0:	ldr	r0, [sp, #40]	; 0x28
   323a4:	add	r0, r0, #16
   323a8:	str	r0, [sp, #40]	; 0x28
   323ac:	b	32120 <__assert_fail@plt+0x1f568>
   323b0:	ldr	r0, [sp, #56]	; 0x38
   323b4:	movw	r1, #0
   323b8:	cmp	r0, r1
   323bc:	beq	323cc <__assert_fail@plt+0x1f814>
   323c0:	ldr	r0, [sp, #32]
   323c4:	ldr	r1, [sp, #56]	; 0x38
   323c8:	str	r0, [r1]
   323cc:	ldr	r0, [sp, #36]	; 0x24
   323d0:	add	sp, sp, #56	; 0x38
   323d4:	bx	lr
   323d8:	push	{fp, lr}
   323dc:	mov	fp, sp
   323e0:	sub	sp, sp, #16
   323e4:	str	r0, [fp, #-4]
   323e8:	movw	r0, #54988	; 0xd6cc
   323ec:	movt	r0, #8
   323f0:	ldr	r0, [r0]
   323f4:	ldr	r1, [fp, #-4]
   323f8:	movw	r2, #41196	; 0xa0ec
   323fc:	movt	r2, #7
   32400:	str	r0, [sp, #8]
   32404:	mov	r0, r2
   32408:	str	r1, [sp, #4]
   3240c:	bl	12864 <gettext@plt>
   32410:	ldr	r1, [sp, #8]
   32414:	str	r0, [sp]
   32418:	mov	r0, r1
   3241c:	ldr	r1, [sp, #4]
   32420:	ldr	r2, [sp]
   32424:	bl	12780 <error@plt>
   32428:	bl	12b64 <abort@plt>
   3242c:	push	{fp, lr}
   32430:	mov	fp, sp
   32434:	sub	sp, sp, #16
   32438:	str	r0, [fp, #-4]
   3243c:	movw	r0, #54988	; 0xd6cc
   32440:	movt	r0, #8
   32444:	ldr	r0, [r0]
   32448:	ldr	r1, [fp, #-4]
   3244c:	movw	r2, #41239	; 0xa117
   32450:	movt	r2, #7
   32454:	str	r0, [sp, #8]
   32458:	mov	r0, r2
   3245c:	str	r1, [sp, #4]
   32460:	bl	12864 <gettext@plt>
   32464:	ldr	r1, [sp, #8]
   32468:	str	r0, [sp]
   3246c:	mov	r0, r1
   32470:	ldr	r1, [sp, #4]
   32474:	ldr	r2, [sp]
   32478:	bl	12780 <error@plt>
   3247c:	bl	12b64 <abort@plt>
   32480:	sub	sp, sp, #4
   32484:	push	{fp, lr}
   32488:	mov	fp, sp
   3248c:	sub	sp, sp, #20
   32490:	str	r3, [fp, #8]
   32494:	str	r0, [fp, #-4]
   32498:	str	r1, [fp, #-8]
   3249c:	str	r2, [sp, #8]
   324a0:	movw	r0, #0
   324a4:	str	r0, [sp, #4]
   324a8:	ldr	r0, [sp, #8]
   324ac:	and	r0, r0, #64	; 0x40
   324b0:	cmp	r0, #0
   324b4:	beq	324dc <__assert_fail@plt+0x1f924>
   324b8:	mov	r0, sp
   324bc:	mov	r1, r0
   324c0:	add	r2, fp, #8
   324c4:	str	r2, [r1]
   324c8:	ldr	r1, [sp]
   324cc:	add	r2, r1, #4
   324d0:	str	r2, [sp]
   324d4:	ldr	r1, [r1]
   324d8:	str	r1, [sp, #4]
   324dc:	ldr	r0, [fp, #-4]
   324e0:	ldr	r1, [fp, #-8]
   324e4:	ldr	r2, [sp, #8]
   324e8:	ldr	r3, [sp, #4]
   324ec:	bl	128ac <openat64@plt>
   324f0:	bl	499ac <__assert_fail@plt+0x36df4>
   324f4:	mov	sp, fp
   324f8:	pop	{fp, lr}
   324fc:	add	sp, sp, #4
   32500:	bx	lr
   32504:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32508:	add	fp, sp, #28
   3250c:	sub	sp, sp, #292	; 0x124
   32510:	sub	sp, sp, #4096	; 0x1000
   32514:	sub	r1, fp, #2016	; 0x7e0
   32518:	sub	r2, fp, #1280	; 0x500
   3251c:	sub	r3, fp, #148	; 0x94
   32520:	movw	ip, #57064	; 0xdee8
   32524:	movt	ip, #8
   32528:	str	r0, [fp, #-36]	; 0xffffffdc
   3252c:	sub	r0, fp, #96	; 0x60
   32530:	str	r1, [sp, #1500]	; 0x5dc
   32534:	mov	r1, ip
   32538:	movw	ip, #56	; 0x38
   3253c:	str	r2, [sp, #1496]	; 0x5d8
   32540:	mov	r2, ip
   32544:	str	r3, [sp, #1492]	; 0x5d4
   32548:	bl	125c4 <memcpy@plt>
   3254c:	movw	r0, #0
   32550:	str	r0, [fp, #-1304]	; 0xfffffae8
   32554:	str	r0, [fp, #-1364]	; 0xfffffaac
   32558:	ldr	r1, [sp, #1492]	; 0x5d4
   3255c:	str	r1, [fp, #-152]	; 0xffffff68
   32560:	str	r1, [fp, #-156]	; 0xffffff64
   32564:	ldr	r2, [sp, #1496]	; 0x5d8
   32568:	str	r2, [fp, #-1284]	; 0xfffffafc
   3256c:	str	r2, [fp, #-1288]	; 0xfffffaf8
   32570:	movw	r3, #20
   32574:	str	r3, [fp, #-1292]	; 0xfffffaf4
   32578:	str	r0, [fp, #-104]	; 0xffffff98
   3257c:	str	r0, [fp, #-108]	; 0xffffff94
   32580:	str	r0, [fp, #-100]	; 0xffffff9c
   32584:	mvn	r0, #1
   32588:	str	r0, [fp, #-40]	; 0xffffffd8
   3258c:	b	3259c <__assert_fail@plt+0x1f9e4>
   32590:	ldr	r0, [fp, #-156]	; 0xffffff64
   32594:	add	r0, r0, #2
   32598:	str	r0, [fp, #-156]	; 0xffffff64
   3259c:	ldr	r0, [fp, #-104]	; 0xffffff98
   325a0:	ldr	r1, [fp, #-156]	; 0xffffff64
   325a4:	strh	r0, [r1]
   325a8:	ldr	r0, [fp, #-152]	; 0xffffff68
   325ac:	ldr	r1, [fp, #-1292]	; 0xfffffaf4
   325b0:	add	r0, r0, r1, lsl #1
   325b4:	mvn	r1, #1
   325b8:	add	r0, r0, r1
   325bc:	ldr	r1, [fp, #-156]	; 0xffffff64
   325c0:	cmp	r0, r1
   325c4:	bhi	32758 <__assert_fail@plt+0x1fba0>
   325c8:	ldr	r0, [fp, #-156]	; 0xffffff64
   325cc:	ldr	r1, [fp, #-152]	; 0xffffff68
   325d0:	sub	r0, r0, r1
   325d4:	asr	r0, r0, #1
   325d8:	add	r0, r0, #1
   325dc:	str	r0, [fp, #-1368]	; 0xfffffaa8
   325e0:	ldr	r0, [fp, #-1292]	; 0xfffffaf4
   325e4:	movw	r1, #20
   325e8:	cmp	r1, r0
   325ec:	bhi	325f4 <__assert_fail@plt+0x1fa3c>
   325f0:	b	3b1c4 <__assert_fail@plt+0x2860c>
   325f4:	ldr	r0, [fp, #-1292]	; 0xfffffaf4
   325f8:	lsl	r0, r0, #1
   325fc:	str	r0, [fp, #-1292]	; 0xfffffaf4
   32600:	ldr	r0, [fp, #-1292]	; 0xfffffaf4
   32604:	movw	r1, #20
   32608:	cmp	r1, r0
   3260c:	bcs	32618 <__assert_fail@plt+0x1fa60>
   32610:	movw	r0, #20
   32614:	str	r0, [fp, #-1292]	; 0xfffffaf4
   32618:	ldr	r0, [fp, #-152]	; 0xffffff68
   3261c:	str	r0, [fp, #-1372]	; 0xfffffaa4
   32620:	ldr	r0, [fp, #-1292]	; 0xfffffaf4
   32624:	movw	r1, #58	; 0x3a
   32628:	mul	r0, r0, r1
   3262c:	add	r0, r0, #55	; 0x37
   32630:	bl	527f0 <__assert_fail@plt+0x3fc38>
   32634:	str	r0, [fp, #-1376]	; 0xfffffaa0
   32638:	ldr	r0, [fp, #-1376]	; 0xfffffaa0
   3263c:	movw	r1, #0
   32640:	cmp	r0, r1
   32644:	bne	3264c <__assert_fail@plt+0x1fa94>
   32648:	b	3b1c4 <__assert_fail@plt+0x2860c>
   3264c:	b	32650 <__assert_fail@plt+0x1fa98>
   32650:	ldr	r0, [fp, #-1376]	; 0xfffffaa0
   32654:	ldr	r1, [fp, #-152]	; 0xffffff68
   32658:	ldr	r2, [fp, #-1368]	; 0xfffffaa8
   3265c:	lsl	r2, r2, #1
   32660:	bl	125c4 <memcpy@plt>
   32664:	ldr	r1, [fp, #-1376]	; 0xfffffaa0
   32668:	str	r1, [fp, #-152]	; 0xffffff68
   3266c:	ldr	r1, [fp, #-1292]	; 0xfffffaf4
   32670:	lsl	r1, r1, #1
   32674:	add	r1, r1, #55	; 0x37
   32678:	str	r1, [fp, #-1380]	; 0xfffffa9c
   3267c:	ldr	r1, [fp, #-1380]	; 0xfffffa9c
   32680:	movw	r2, #56	; 0x38
   32684:	udiv	r1, r1, r2
   32688:	ldr	r3, [fp, #-1376]	; 0xfffffaa0
   3268c:	mul	r1, r1, r2
   32690:	add	r1, r3, r1
   32694:	str	r1, [fp, #-1376]	; 0xfffffaa0
   32698:	b	3269c <__assert_fail@plt+0x1fae4>
   3269c:	ldr	r0, [fp, #-1376]	; 0xfffffaa0
   326a0:	ldr	r1, [fp, #-1284]	; 0xfffffafc
   326a4:	ldr	r2, [fp, #-1368]	; 0xfffffaa8
   326a8:	movw	r3, #56	; 0x38
   326ac:	mul	r2, r2, r3
   326b0:	str	r3, [sp, #1488]	; 0x5d0
   326b4:	bl	125c4 <memcpy@plt>
   326b8:	ldr	r0, [fp, #-1376]	; 0xfffffaa0
   326bc:	str	r0, [fp, #-1284]	; 0xfffffafc
   326c0:	ldr	r0, [fp, #-1292]	; 0xfffffaf4
   326c4:	ldr	r1, [sp, #1488]	; 0x5d0
   326c8:	mul	r0, r0, r1
   326cc:	add	r0, r0, #55	; 0x37
   326d0:	str	r0, [fp, #-1384]	; 0xfffffa98
   326d4:	ldr	r0, [fp, #-1384]	; 0xfffffa98
   326d8:	udiv	r0, r0, r1
   326dc:	ldr	r2, [fp, #-1376]	; 0xfffffaa0
   326e0:	mul	r0, r0, r1
   326e4:	add	r0, r2, r0
   326e8:	str	r0, [fp, #-1376]	; 0xfffffaa0
   326ec:	sub	r0, fp, #148	; 0x94
   326f0:	ldr	r1, [fp, #-1372]	; 0xfffffaa4
   326f4:	cmp	r1, r0
   326f8:	beq	32704 <__assert_fail@plt+0x1fb4c>
   326fc:	ldr	r0, [fp, #-1372]	; 0xfffffaa4
   32700:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   32704:	ldr	r0, [fp, #-152]	; 0xffffff68
   32708:	ldr	r1, [fp, #-1368]	; 0xfffffaa8
   3270c:	add	r0, r0, r1, lsl #1
   32710:	sub	r0, r0, #2
   32714:	str	r0, [fp, #-156]	; 0xffffff64
   32718:	ldr	r0, [fp, #-1284]	; 0xfffffafc
   3271c:	ldr	r1, [fp, #-1368]	; 0xfffffaa8
   32720:	rsb	r1, r1, r1, lsl #3
   32724:	add	r0, r0, r1, lsl #3
   32728:	sub	r0, r0, #56	; 0x38
   3272c:	str	r0, [fp, #-1288]	; 0xfffffaf8
   32730:	ldr	r0, [fp, #-152]	; 0xffffff68
   32734:	ldr	r1, [fp, #-1292]	; 0xfffffaf4
   32738:	add	r0, r0, r1, lsl #1
   3273c:	mvn	r1, #1
   32740:	add	r0, r0, r1
   32744:	ldr	r1, [fp, #-156]	; 0xffffff64
   32748:	cmp	r0, r1
   3274c:	bhi	32754 <__assert_fail@plt+0x1fb9c>
   32750:	b	3b1b8 <__assert_fail@plt+0x28600>
   32754:	b	32758 <__assert_fail@plt+0x1fba0>
   32758:	ldr	r0, [fp, #-104]	; 0xffffff98
   3275c:	cmp	r0, #12
   32760:	bne	32768 <__assert_fail@plt+0x1fbb0>
   32764:	b	3b1ac <__assert_fail@plt+0x285f4>
   32768:	b	3276c <__assert_fail@plt+0x1fbb4>
   3276c:	ldr	r0, [fp, #-104]	; 0xffffff98
   32770:	movw	r1, #41288	; 0xa148
   32774:	movt	r1, #7
   32778:	add	r0, r1, r0
   3277c:	ldrsb	r0, [r0]
   32780:	str	r0, [fp, #-1296]	; 0xfffffaf0
   32784:	ldr	r0, [fp, #-1296]	; 0xfffffaf0
   32788:	cmn	r0, #93	; 0x5d
   3278c:	bne	32794 <__assert_fail@plt+0x1fbdc>
   32790:	b	328dc <__assert_fail@plt+0x1fd24>
   32794:	ldr	r0, [fp, #-40]	; 0xffffffd8
   32798:	cmn	r0, #2
   3279c:	bne	327b0 <__assert_fail@plt+0x1fbf8>
   327a0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   327a4:	sub	r0, fp, #96	; 0x60
   327a8:	bl	3b2f0 <__assert_fail@plt+0x28738>
   327ac:	str	r0, [fp, #-40]	; 0xffffffd8
   327b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   327b4:	cmp	r0, #0
   327b8:	bgt	327cc <__assert_fail@plt+0x1fc14>
   327bc:	movw	r0, #0
   327c0:	str	r0, [fp, #-1304]	; 0xfffffae8
   327c4:	str	r0, [fp, #-40]	; 0xffffffd8
   327c8:	b	3280c <__assert_fail@plt+0x1fc54>
   327cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   327d0:	movw	r1, #277	; 0x115
   327d4:	cmp	r0, r1
   327d8:	bhi	327f8 <__assert_fail@plt+0x1fc40>
   327dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   327e0:	movw	r1, #41402	; 0xa1ba
   327e4:	movt	r1, #7
   327e8:	add	r0, r1, r0
   327ec:	ldrb	r0, [r0]
   327f0:	str	r0, [sp, #1484]	; 0x5cc
   327f4:	b	32804 <__assert_fail@plt+0x1fc4c>
   327f8:	movw	r0, #2
   327fc:	str	r0, [sp, #1484]	; 0x5cc
   32800:	b	32804 <__assert_fail@plt+0x1fc4c>
   32804:	ldr	r0, [sp, #1484]	; 0x5cc
   32808:	str	r0, [fp, #-1304]	; 0xfffffae8
   3280c:	ldr	r0, [fp, #-1304]	; 0xfffffae8
   32810:	ldr	r1, [fp, #-1296]	; 0xfffffaf0
   32814:	add	r0, r1, r0
   32818:	str	r0, [fp, #-1296]	; 0xfffffaf0
   3281c:	ldr	r0, [fp, #-1296]	; 0xfffffaf0
   32820:	cmp	r0, #0
   32824:	blt	32858 <__assert_fail@plt+0x1fca0>
   32828:	ldr	r0, [fp, #-1296]	; 0xfffffaf0
   3282c:	movw	r1, #112	; 0x70
   32830:	cmp	r1, r0
   32834:	blt	32858 <__assert_fail@plt+0x1fca0>
   32838:	ldr	r0, [fp, #-1296]	; 0xfffffaf0
   3283c:	movw	r1, #41680	; 0xa2d0
   32840:	movt	r1, #7
   32844:	add	r0, r1, r0
   32848:	ldrsb	r0, [r0]
   3284c:	ldr	r1, [fp, #-1304]	; 0xfffffae8
   32850:	cmp	r0, r1
   32854:	beq	3285c <__assert_fail@plt+0x1fca4>
   32858:	b	328dc <__assert_fail@plt+0x1fd24>
   3285c:	ldr	r0, [fp, #-1296]	; 0xfffffaf0
   32860:	movw	r1, #41793	; 0xa341
   32864:	movt	r1, #7
   32868:	add	r0, r1, r0
   3286c:	ldrb	r0, [r0]
   32870:	str	r0, [fp, #-1296]	; 0xfffffaf0
   32874:	ldr	r0, [fp, #-1296]	; 0xfffffaf0
   32878:	cmp	r0, #0
   3287c:	bgt	32894 <__assert_fail@plt+0x1fcdc>
   32880:	ldr	r0, [fp, #-1296]	; 0xfffffaf0
   32884:	movw	r1, #0
   32888:	sub	r0, r1, r0
   3288c:	str	r0, [fp, #-1296]	; 0xfffffaf0
   32890:	b	32908 <__assert_fail@plt+0x1fd50>
   32894:	ldr	r0, [fp, #-108]	; 0xffffff94
   32898:	cmp	r0, #0
   3289c:	beq	328b0 <__assert_fail@plt+0x1fcf8>
   328a0:	ldr	r0, [fp, #-108]	; 0xffffff94
   328a4:	mvn	r1, #0
   328a8:	add	r0, r0, r1
   328ac:	str	r0, [fp, #-108]	; 0xffffff94
   328b0:	mvn	r0, #1
   328b4:	str	r0, [fp, #-40]	; 0xffffffd8
   328b8:	ldr	r0, [fp, #-1296]	; 0xfffffaf0
   328bc:	str	r0, [fp, #-104]	; 0xffffff98
   328c0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   328c4:	add	r0, r0, #56	; 0x38
   328c8:	str	r0, [fp, #-1288]	; 0xfffffaf8
   328cc:	sub	r1, fp, #96	; 0x60
   328d0:	movw	r2, #56	; 0x38
   328d4:	bl	125c4 <memcpy@plt>
   328d8:	b	32590 <__assert_fail@plt+0x1f9d8>
   328dc:	ldr	r0, [fp, #-104]	; 0xffffff98
   328e0:	movw	r1, #41906	; 0xa3b2
   328e4:	movt	r1, #7
   328e8:	add	r0, r1, r0
   328ec:	ldrb	r0, [r0]
   328f0:	str	r0, [fp, #-1296]	; 0xfffffaf0
   328f4:	ldr	r0, [fp, #-1296]	; 0xfffffaf0
   328f8:	cmp	r0, #0
   328fc:	bne	32904 <__assert_fail@plt+0x1fd4c>
   32900:	b	3af9c <__assert_fail@plt+0x283e4>
   32904:	b	32908 <__assert_fail@plt+0x1fd50>
   32908:	ldr	r0, [fp, #-1296]	; 0xfffffaf0
   3290c:	movw	r1, #42020	; 0xa424
   32910:	movt	r1, #7
   32914:	ldrb	r0, [r1, r0]
   32918:	str	r0, [fp, #-1364]	; 0xfffffaac
   3291c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   32920:	ldr	r1, [fp, #-1364]	; 0xfffffaac
   32924:	rsb	r1, r1, #1
   32928:	rsb	r1, r1, r1, lsl #3
   3292c:	add	r0, r0, r1, lsl #3
   32930:	mov	r1, #48	; 0x30
   32934:	mov	r2, r0
   32938:	vld1.64	{d16-d17}, [r2], r1
   3293c:	sub	r3, fp, #1360	; 0x550
   32940:	mov	ip, r3
   32944:	vst1.64	{d16-d17}, [ip], r1
   32948:	vldr	d18, [r2]
   3294c:	vstr	d18, [ip]
   32950:	add	r1, r0, #32
   32954:	vld1.64	{d16-d17}, [r1]
   32958:	add	r1, r3, #32
   3295c:	vst1.64	{d16-d17}, [r1]
   32960:	add	r0, r0, #16
   32964:	vld1.64	{d16-d17}, [r0]
   32968:	add	r0, r3, #16
   3296c:	vst1.64	{d16-d17}, [r0]
   32970:	ldr	r0, [fp, #-1296]	; 0xfffffaf0
   32974:	sub	r0, r0, #4
   32978:	cmp	r0, #87	; 0x57
   3297c:	str	r0, [sp, #1480]	; 0x5c8
   32980:	bhi	3ae78 <__assert_fail@plt+0x282c0>
   32984:	add	r0, pc, #8
   32988:	ldr	r1, [sp, #1480]	; 0x5c8
   3298c:	ldr	r0, [r0, r1, lsl #2]
   32990:	mov	pc, r0
   32994:	strdeq	r2, [r3], -r4
   32998:	andeq	sl, r3, r8, ror lr
   3299c:	andeq	sl, r3, r8, ror lr
   329a0:	andeq	r2, r3, r0, lsr fp
   329a4:	andeq	r2, r3, r8, ror #22
   329a8:	muleq	r3, r0, fp
   329ac:			; <UNDEFINED> instruction: 0x00032bb8
   329b0:	andeq	r2, r3, r0, ror #23
   329b4:	andeq	r2, r3, r8, lsl #24
   329b8:	andeq	r2, r3, r0, lsr ip
   329bc:	andeq	r2, r3, r8, asr #24
   329c0:	andeq	r2, r3, r0, ror #24
   329c4:	andeq	sl, r3, r8, ror lr
   329c8:	andeq	sl, r3, r8, ror lr
   329cc:	andeq	r2, r3, r8, ror ip
   329d0:			; <UNDEFINED> instruction: 0x00032cb8
   329d4:	andeq	r2, r3, r0, lsl #26
   329d8:	andeq	sl, r3, r8, ror lr
   329dc:	andeq	r2, r3, ip, asr #26
   329e0:	andeq	r2, r3, r8, lsl #27
   329e4:	andeq	r2, r3, ip, asr #27
   329e8:	andeq	sl, r3, r8, ror lr
   329ec:	andeq	sl, r3, r8, ror lr
   329f0:	andeq	r2, r3, ip, lsr #28
   329f4:	muleq	r3, ip, lr
   329f8:			; <UNDEFINED> instruction: 0x00032eb0
   329fc:	ldrdeq	r2, [r3], -r0
   32a00:	andeq	r2, r3, r4, ror #29
   32a04:	strdeq	r2, [r3], -r4
   32a08:	ldrdeq	r2, [r3], -r4
   32a0c:	strheq	r3, [r3], -r4
   32a10:	muleq	r3, r0, r1
   32a14:	andeq	r3, r3, r8, lsr #3
   32a18:	andeq	r3, r3, r0, asr #3
   32a1c:	andeq	r3, r3, r4, ror #3
   32a20:	andeq	r3, r3, r8, lsl #4
   32a24:	andeq	r3, r3, r0, asr #4
   32a28:	andeq	r3, r3, r8, ror r2
   32a2c:	andeq	r3, r3, ip, lsr #5
   32a30:	andeq	r3, r3, r4, ror #7
   32a34:	andeq	r3, r3, r4, ror #8
   32a38:	andeq	r3, r3, r8, lsl #10
   32a3c:	andeq	r3, r3, ip, lsr r5
   32a40:	andeq	r3, r3, r4, lsl #11
   32a44:			; <UNDEFINED> instruction: 0x000335b8
   32a48:	andeq	sl, r3, r8, ror lr
   32a4c:	andeq	r3, r3, r0, lsl #12
   32a50:	muleq	r3, ip, r6
   32a54:	andeq	r3, r3, ip, asr r7
   32a58:	andeq	r3, r3, r8, lsl r8
   32a5c:	ldrdeq	r3, [r3], -r4
   32a60:	andeq	r3, r3, r8, ror #18
   32a64:	strdeq	r3, [r3], -r8
   32a68:	andeq	r3, r3, r4, lsl #21
   32a6c:	andeq	r3, r3, r4, lsl fp
   32a70:	andeq	r3, r3, r8, lsr #23
   32a74:	andeq	r3, r3, r0, lsr ip
   32a78:	andeq	r5, r3, r0, lsr lr
   32a7c:	andeq	r8, r3, r8, lsr #32
   32a80:	strheq	r8, [r3], -ip
   32a84:	andeq	r8, r3, ip, asr #2
   32a88:	andeq	r8, r3, r0, ror #3
   32a8c:	andeq	r8, r3, r8, ror #4
   32a90:	strdeq	r8, [r3], -ip
   32a94:	andeq	r8, r3, ip, lsl #7
   32a98:	andeq	r8, r3, r8, lsl r4
   32a9c:	andeq	r8, r3, ip, lsr #9
   32aa0:	andeq	r8, r3, r4, asr #10
   32aa4:	andeq	r8, r3, ip, ror #11
   32aa8:	muleq	r3, r8, r6
   32aac:	andeq	sl, r3, r8, ror lr
   32ab0:	andeq	r8, r3, r4, lsr #14
   32ab4:			; <UNDEFINED> instruction: 0x000387b8
   32ab8:	andeq	r8, r3, ip, asr #16
   32abc:	andeq	sl, r3, r8, asr #20
   32ac0:	ldrdeq	sl, [r3], -ip
   32ac4:	andeq	sl, r3, r0, ror fp
   32ac8:	andeq	sl, r3, r4, lsl #24
   32acc:	andeq	sl, r3, r8, ror lr
   32ad0:	andeq	sl, r3, r8, ror lr
   32ad4:	andeq	sl, r3, r8, ror lr
   32ad8:	muleq	r3, r8, ip
   32adc:	andeq	sl, r3, r8, ror lr
   32ae0:	ldrdeq	sl, [r3], -r8
   32ae4:	andeq	sl, r3, r8, lsl sp
   32ae8:	andeq	sl, r3, ip, asr sp
   32aec:	andeq	sl, r3, r0, asr lr
   32af0:	andeq	sl, r3, r0, ror #28
   32af4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32af8:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   32afc:	ldr	r2, [r1]
   32b00:	str	r2, [r0, #88]	; 0x58
   32b04:	ldr	r1, [r1, #4]
   32b08:	str	r1, [r0, #92]	; 0x5c
   32b0c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32b10:	movw	r1, #1
   32b14:	strb	r1, [r0, #152]	; 0x98
   32b18:	movw	r0, #34274	; 0x85e2
   32b1c:	movt	r0, #7
   32b20:	bl	12864 <gettext@plt>
   32b24:	ldr	r1, [fp, #-36]	; 0xffffffdc
   32b28:	bl	3c564 <__assert_fail@plt+0x299ac>
   32b2c:	b	3ae7c <__assert_fail@plt+0x282c4>
   32b30:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32b34:	ldr	r1, [r0, #172]	; 0xac
   32b38:	add	r1, r1, #1
   32b3c:	str	r1, [r0, #172]	; 0xac
   32b40:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32b44:	ldr	r1, [r0, #156]	; 0x9c
   32b48:	add	r1, r1, #1
   32b4c:	str	r1, [r0, #156]	; 0x9c
   32b50:	movw	r0, #44244	; 0xacd4
   32b54:	movt	r0, #7
   32b58:	bl	12864 <gettext@plt>
   32b5c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   32b60:	bl	3c564 <__assert_fail@plt+0x299ac>
   32b64:	b	3ae7c <__assert_fail@plt+0x282c4>
   32b68:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32b6c:	ldr	r1, [r0, #172]	; 0xac
   32b70:	add	r1, r1, #1
   32b74:	str	r1, [r0, #172]	; 0xac
   32b78:	movw	r0, #33708	; 0x83ac
   32b7c:	movt	r0, #7
   32b80:	bl	12864 <gettext@plt>
   32b84:	ldr	r1, [fp, #-36]	; 0xffffffdc
   32b88:	bl	3c564 <__assert_fail@plt+0x299ac>
   32b8c:	b	3ae7c <__assert_fail@plt+0x282c4>
   32b90:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32b94:	ldr	r1, [r0, #164]	; 0xa4
   32b98:	add	r1, r1, #1
   32b9c:	str	r1, [r0, #164]	; 0xa4
   32ba0:	movw	r0, #44253	; 0xacdd
   32ba4:	movt	r0, #7
   32ba8:	bl	12864 <gettext@plt>
   32bac:	ldr	r1, [fp, #-36]	; 0xffffffdc
   32bb0:	bl	3c564 <__assert_fail@plt+0x299ac>
   32bb4:	b	3ae7c <__assert_fail@plt+0x282c4>
   32bb8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32bbc:	ldr	r1, [r0, #176]	; 0xb0
   32bc0:	add	r1, r1, #1
   32bc4:	str	r1, [r0, #176]	; 0xb0
   32bc8:	movw	r0, #44259	; 0xace3
   32bcc:	movt	r0, #7
   32bd0:	bl	12864 <gettext@plt>
   32bd4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   32bd8:	bl	3c564 <__assert_fail@plt+0x299ac>
   32bdc:	b	3ae7c <__assert_fail@plt+0x282c4>
   32be0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32be4:	ldr	r1, [r0, #156]	; 0x9c
   32be8:	add	r1, r1, #1
   32bec:	str	r1, [r0, #156]	; 0x9c
   32bf0:	movw	r0, #44264	; 0xace8
   32bf4:	movt	r0, #7
   32bf8:	bl	12864 <gettext@plt>
   32bfc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   32c00:	bl	3c564 <__assert_fail@plt+0x299ac>
   32c04:	b	3ae7c <__assert_fail@plt+0x282c4>
   32c08:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32c0c:	ldr	r1, [r0, #160]	; 0xa0
   32c10:	add	r1, r1, #1
   32c14:	str	r1, [r0, #160]	; 0xa0
   32c18:	movw	r0, #34545	; 0x86f1
   32c1c:	movt	r0, #7
   32c20:	bl	12864 <gettext@plt>
   32c24:	ldr	r1, [fp, #-36]	; 0xffffffdc
   32c28:	bl	3c564 <__assert_fail@plt+0x299ac>
   32c2c:	b	3ae7c <__assert_fail@plt+0x282c4>
   32c30:	movw	r0, #44269	; 0xaced
   32c34:	movt	r0, #7
   32c38:	bl	12864 <gettext@plt>
   32c3c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   32c40:	bl	3ca44 <__assert_fail@plt+0x29e8c>
   32c44:	b	3ae7c <__assert_fail@plt+0x282c4>
   32c48:	movw	r0, #39769	; 0x9b59
   32c4c:	movt	r0, #7
   32c50:	bl	12864 <gettext@plt>
   32c54:	ldr	r1, [fp, #-36]	; 0xffffffdc
   32c58:	bl	3c564 <__assert_fail@plt+0x299ac>
   32c5c:	b	3ae7c <__assert_fail@plt+0x282c4>
   32c60:	movw	r0, #44278	; 0xacf6
   32c64:	movt	r0, #7
   32c68:	bl	12864 <gettext@plt>
   32c6c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   32c70:	bl	3ca44 <__assert_fail@plt+0x29e8c>
   32c74:	b	3ae7c <__assert_fail@plt+0x282c4>
   32c78:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32c7c:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   32c80:	ldr	r2, [r1, #-48]	; 0xffffffd0
   32c84:	ldr	r3, [r1, #-44]	; 0xffffffd4
   32c88:	mov	r1, sp
   32c8c:	mov	ip, #0
   32c90:	str	ip, [r1, #12]
   32c94:	str	ip, [r1, #8]
   32c98:	str	ip, [r1, #4]
   32c9c:	str	ip, [r1]
   32ca0:	bl	3ccb8 <__assert_fail@plt+0x2a100>
   32ca4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   32ca8:	ldr	r0, [r0]
   32cac:	ldr	r1, [fp, #-36]	; 0xffffffdc
   32cb0:	str	r0, [r1, #28]
   32cb4:	b	3ae7c <__assert_fail@plt+0x282c4>
   32cb8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32cbc:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   32cc0:	ldr	r2, [r1, #-160]	; 0xffffff60
   32cc4:	ldr	r3, [r1, #-156]	; 0xffffff64
   32cc8:	ldr	ip, [r1, #-48]	; 0xffffffd0
   32ccc:	ldr	r1, [r1, #-44]	; 0xffffffd4
   32cd0:	mov	lr, sp
   32cd4:	mov	r4, #0
   32cd8:	str	r4, [lr, #12]
   32cdc:	str	r4, [lr, #8]
   32ce0:	str	r1, [lr, #4]
   32ce4:	str	ip, [lr]
   32ce8:	bl	3ccb8 <__assert_fail@plt+0x2a100>
   32cec:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   32cf0:	ldr	r0, [r0]
   32cf4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   32cf8:	str	r0, [r1, #28]
   32cfc:	b	3ae7c <__assert_fail@plt+0x282c4>
   32d00:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32d04:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   32d08:	ldr	r2, [r1, #-272]	; 0xfffffef0
   32d0c:	ldr	r3, [r1, #-268]	; 0xfffffef4
   32d10:	ldr	ip, [r1, #-160]	; 0xffffff60
   32d14:	ldr	lr, [r1, #-156]	; 0xffffff64
   32d18:	ldr	r4, [r1, #-56]	; 0xffffffc8
   32d1c:	ldr	r1, [r1, #-52]	; 0xffffffcc
   32d20:	mov	r5, sp
   32d24:	str	r1, [r5, #12]
   32d28:	str	r4, [r5, #8]
   32d2c:	str	lr, [r5, #4]
   32d30:	str	ip, [r5]
   32d34:	bl	3ccb8 <__assert_fail@plt+0x2a100>
   32d38:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   32d3c:	ldr	r0, [r0]
   32d40:	ldr	r1, [fp, #-36]	; 0xffffffdc
   32d44:	str	r0, [r1, #28]
   32d48:	b	3ae7c <__assert_fail@plt+0x282c4>
   32d4c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32d50:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   32d54:	ldr	r2, [r1, #-48]	; 0xffffffd0
   32d58:	ldr	r3, [r1, #-44]	; 0xffffffd4
   32d5c:	mov	r1, sp
   32d60:	mov	ip, #0
   32d64:	str	ip, [r1, #12]
   32d68:	str	ip, [r1, #8]
   32d6c:	str	ip, [r1, #4]
   32d70:	str	ip, [r1]
   32d74:	bl	3ccb8 <__assert_fail@plt+0x2a100>
   32d78:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32d7c:	movw	r1, #2
   32d80:	str	r1, [r0, #28]
   32d84:	b	3ae7c <__assert_fail@plt+0x282c4>
   32d88:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32d8c:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   32d90:	ldr	r2, [r1, #-160]	; 0xffffff60
   32d94:	ldr	r3, [r1, #-156]	; 0xffffff64
   32d98:	ldr	ip, [r1, #-48]	; 0xffffffd0
   32d9c:	ldr	r1, [r1, #-44]	; 0xffffffd4
   32da0:	mov	lr, sp
   32da4:	mov	r4, #0
   32da8:	str	r4, [lr, #12]
   32dac:	str	r4, [lr, #8]
   32db0:	str	r1, [lr, #4]
   32db4:	str	ip, [lr]
   32db8:	bl	3ccb8 <__assert_fail@plt+0x2a100>
   32dbc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32dc0:	movw	r1, #2
   32dc4:	str	r1, [r0, #28]
   32dc8:	b	3ae7c <__assert_fail@plt+0x282c4>
   32dcc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32dd0:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   32dd4:	ldr	r2, [r1, #-272]	; 0xfffffef0
   32dd8:	ldr	r3, [r1, #-268]	; 0xfffffef4
   32ddc:	ldr	ip, [r1, #-160]	; 0xffffff60
   32de0:	ldr	r1, [r1, #-156]	; 0xffffff64
   32de4:	ldr	lr, [fp, #-1288]	; 0xfffffaf8
   32de8:	mvn	r4, #55	; 0x37
   32dec:	add	lr, lr, r4
   32df0:	ldr	lr, [lr]
   32df4:	ldr	r4, [fp, #-1288]	; 0xfffffaf8
   32df8:	mvn	r5, #51	; 0x33
   32dfc:	add	r4, r4, r5
   32e00:	ldr	r4, [r4]
   32e04:	mov	r5, sp
   32e08:	str	r4, [r5, #12]
   32e0c:	str	lr, [r5, #8]
   32e10:	str	r1, [r5, #4]
   32e14:	str	ip, [r5]
   32e18:	bl	3ccb8 <__assert_fail@plt+0x2a100>
   32e1c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32e20:	movw	r1, #2
   32e24:	str	r1, [r0, #28]
   32e28:	b	3ae7c <__assert_fail@plt+0x282c4>
   32e2c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32e30:	ldr	r1, [r0, #176]	; 0xb0
   32e34:	add	r1, r1, #1
   32e38:	str	r1, [r0, #176]	; 0xb0
   32e3c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32e40:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   32e44:	ldr	r2, [r1, #4]
   32e48:	ldr	r3, [r1]
   32e4c:	ldr	ip, [r1, #-36]	; 0xffffffdc
   32e50:	ldr	lr, [r1, #-40]	; 0xffffffd8
   32e54:	ldr	r4, [r1, #-56]	; 0xffffffc8
   32e58:	ldr	r5, [r1, #-52]	; 0xffffffcc
   32e5c:	ldr	r6, [r1, #-48]	; 0xffffffd0
   32e60:	ldr	r1, [r1, #-44]	; 0xffffffd4
   32e64:	mov	r7, sp
   32e68:	str	r2, [r7, #20]
   32e6c:	str	r3, [r7, #16]
   32e70:	str	r6, [r7]
   32e74:	str	r1, [r7, #4]
   32e78:	str	lr, [r7, #8]
   32e7c:	str	ip, [r7, #12]
   32e80:	mov	r2, r4
   32e84:	mov	r3, r5
   32e88:	bl	3cd30 <__assert_fail@plt+0x2a178>
   32e8c:	tst	r0, #1
   32e90:	bne	32e98 <__assert_fail@plt+0x202e0>
   32e94:	b	3b1b8 <__assert_fail@plt+0x28600>
   32e98:	b	3ae7c <__assert_fail@plt+0x282c4>
   32e9c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   32ea0:	ldr	r0, [r0]
   32ea4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   32ea8:	str	r0, [r1, #20]
   32eac:	b	3ae7c <__assert_fail@plt+0x282c4>
   32eb0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32eb4:	movw	r1, #1
   32eb8:	str	r1, [r0, #20]
   32ebc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32ec0:	ldr	r1, [r0, #168]	; 0xa8
   32ec4:	add	r1, r1, #1
   32ec8:	str	r1, [r0, #168]	; 0xa8
   32ecc:	b	3ae7c <__assert_fail@plt+0x282c4>
   32ed0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   32ed4:	ldr	r0, [r0]
   32ed8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   32edc:	str	r0, [r1, #24]
   32ee0:	b	3ae7c <__assert_fail@plt+0x282c4>
   32ee4:	ldr	r0, [pc, #4076]	; 33ed8 <__assert_fail@plt+0x21320>
   32ee8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   32eec:	str	r0, [r1, #24]
   32ef0:	b	3ae7c <__assert_fail@plt+0x282c4>
   32ef4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   32ef8:	ldr	r0, [r0, #-56]	; 0xffffffc8
   32efc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   32f00:	str	r0, [r1, #24]
   32f04:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32f08:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   32f0c:	ldr	r2, [r1, #52]	; 0x34
   32f10:	ldr	r3, [r1, #48]	; 0x30
   32f14:	ldr	ip, [r1, #44]	; 0x2c
   32f18:	ldr	lr, [r1, #40]	; 0x28
   32f1c:	ldr	r4, [r1, #36]	; 0x24
   32f20:	ldr	r5, [r1, #32]
   32f24:	ldr	r6, [r1, #28]
   32f28:	ldr	r7, [r1, #24]
   32f2c:	ldr	r8, [r1, #20]
   32f30:	ldr	r9, [r1, #16]
   32f34:	ldr	sl, [r1]
   32f38:	str	r3, [sp, #1476]	; 0x5c4
   32f3c:	ldr	r3, [r1, #4]
   32f40:	str	r0, [sp, #1472]	; 0x5c0
   32f44:	ldr	r0, [r1, #8]
   32f48:	ldr	r1, [r1, #12]
   32f4c:	str	r0, [sp, #1468]	; 0x5bc
   32f50:	mov	r0, sp
   32f54:	str	r0, [sp, #1464]	; 0x5b8
   32f58:	mov	r0, #1
   32f5c:	str	r1, [sp, #1460]	; 0x5b4
   32f60:	ldr	r1, [sp, #1464]	; 0x5b8
   32f64:	str	r0, [r1, #48]	; 0x30
   32f68:	ldr	r0, [sp, #1468]	; 0x5bc
   32f6c:	str	r0, [r1]
   32f70:	ldr	r0, [sp, #1460]	; 0x5b4
   32f74:	str	r0, [r1, #4]
   32f78:	str	r9, [r1, #8]
   32f7c:	str	r8, [r1, #12]
   32f80:	str	r7, [r1, #16]
   32f84:	str	r6, [r1, #20]
   32f88:	str	r5, [r1, #24]
   32f8c:	str	r4, [r1, #28]
   32f90:	str	lr, [r1, #32]
   32f94:	str	ip, [r1, #36]	; 0x24
   32f98:	ldr	ip, [sp, #1476]	; 0x5c4
   32f9c:	str	ip, [r1, #40]	; 0x28
   32fa0:	str	r2, [r1, #44]	; 0x2c
   32fa4:	ldr	r0, [sp, #1472]	; 0x5c0
   32fa8:	mov	r2, sl
   32fac:	bl	3d168 <__assert_fail@plt+0x2a5b0>
   32fb0:	tst	r0, #1
   32fb4:	bne	32fbc <__assert_fail@plt+0x20404>
   32fb8:	b	3b1b8 <__assert_fail@plt+0x28600>
   32fbc:	movw	r0, #44269	; 0xaced
   32fc0:	movt	r0, #7
   32fc4:	bl	12864 <gettext@plt>
   32fc8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   32fcc:	bl	3ca44 <__assert_fail@plt+0x29e8c>
   32fd0:	b	3ae7c <__assert_fail@plt+0x282c4>
   32fd4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32fd8:	movw	r1, #40336	; 0x9d90
   32fdc:	movt	r1, #65535	; 0xffff
   32fe0:	str	r1, [r0, #24]
   32fe4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32fe8:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   32fec:	ldr	r2, [r1, #52]	; 0x34
   32ff0:	ldr	r3, [r1, #48]	; 0x30
   32ff4:	ldr	ip, [r1, #44]	; 0x2c
   32ff8:	ldr	lr, [r1, #40]	; 0x28
   32ffc:	ldr	r4, [r1, #36]	; 0x24
   33000:	ldr	r5, [r1, #32]
   33004:	ldr	r6, [r1, #28]
   33008:	ldr	r7, [r1, #24]
   3300c:	ldr	r8, [r1, #20]
   33010:	ldr	r9, [r1, #16]
   33014:	ldr	sl, [r1]
   33018:	str	r3, [sp, #1456]	; 0x5b0
   3301c:	ldr	r3, [r1, #4]
   33020:	str	r0, [sp, #1452]	; 0x5ac
   33024:	ldr	r0, [r1, #8]
   33028:	ldr	r1, [r1, #12]
   3302c:	str	r0, [sp, #1448]	; 0x5a8
   33030:	mov	r0, sp
   33034:	str	r0, [sp, #1444]	; 0x5a4
   33038:	mov	r0, #1
   3303c:	str	r1, [sp, #1440]	; 0x5a0
   33040:	ldr	r1, [sp, #1444]	; 0x5a4
   33044:	str	r0, [r1, #48]	; 0x30
   33048:	ldr	r0, [sp, #1448]	; 0x5a8
   3304c:	str	r0, [r1]
   33050:	ldr	r0, [sp, #1440]	; 0x5a0
   33054:	str	r0, [r1, #4]
   33058:	str	r9, [r1, #8]
   3305c:	str	r8, [r1, #12]
   33060:	str	r7, [r1, #16]
   33064:	str	r6, [r1, #20]
   33068:	str	r5, [r1, #24]
   3306c:	str	r4, [r1, #28]
   33070:	str	lr, [r1, #32]
   33074:	str	ip, [r1, #36]	; 0x24
   33078:	ldr	ip, [sp, #1456]	; 0x5b0
   3307c:	str	ip, [r1, #40]	; 0x28
   33080:	str	r2, [r1, #44]	; 0x2c
   33084:	ldr	r0, [sp, #1452]	; 0x5ac
   33088:	mov	r2, sl
   3308c:	bl	3d168 <__assert_fail@plt+0x2a5b0>
   33090:	tst	r0, #1
   33094:	bne	3309c <__assert_fail@plt+0x204e4>
   33098:	b	3b1b8 <__assert_fail@plt+0x28600>
   3309c:	movw	r0, #44269	; 0xaced
   330a0:	movt	r0, #7
   330a4:	bl	12864 <gettext@plt>
   330a8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   330ac:	bl	3ca44 <__assert_fail@plt+0x29e8c>
   330b0:	b	3ae7c <__assert_fail@plt+0x282c4>
   330b4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   330b8:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   330bc:	ldr	r2, [r1, #4]
   330c0:	ldr	r3, [r1]
   330c4:	ldr	ip, [r1, #-36]	; 0xffffffdc
   330c8:	ldr	lr, [r1, #-40]	; 0xffffffd8
   330cc:	ldr	r4, [r1, #-56]	; 0xffffffc8
   330d0:	ldr	r5, [r1, #-52]	; 0xffffffcc
   330d4:	ldr	r6, [r1, #-48]	; 0xffffffd0
   330d8:	ldr	r1, [r1, #-44]	; 0xffffffd4
   330dc:	mov	r7, sp
   330e0:	str	r2, [r7, #20]
   330e4:	str	r3, [r7, #16]
   330e8:	str	r6, [r7]
   330ec:	str	r1, [r7, #4]
   330f0:	str	lr, [r7, #8]
   330f4:	str	ip, [r7, #12]
   330f8:	mov	r2, r4
   330fc:	mov	r3, r5
   33100:	bl	3cd30 <__assert_fail@plt+0x2a178>
   33104:	tst	r0, #1
   33108:	bne	33110 <__assert_fail@plt+0x20558>
   3310c:	b	3b1b8 <__assert_fail@plt+0x28600>
   33110:	ldr	r0, [fp, #-36]	; 0xffffffdc
   33114:	ldr	r1, [r0, #24]
   33118:	asr	r2, r1, #31
   3311c:	ldr	r3, [fp, #-1288]	; 0xfffffaf8
   33120:	ldr	ip, [r3, #-112]	; 0xffffff90
   33124:	ldr	r3, [r3, #-108]	; 0xffffff94
   33128:	mov	lr, #0
   3312c:	cmn	r2, #1
   33130:	mov	r4, lr
   33134:	movwgt	r4, #1
   33138:	adds	r1, r1, ip
   3313c:	adc	r2, r2, r3
   33140:	cmn	r2, #1
   33144:	mov	ip, lr
   33148:	movwgt	ip, #1
   3314c:	subs	ip, r4, ip
   33150:	movwne	ip, #1
   33154:	cmn	r3, #1
   33158:	movwgt	lr, #1
   3315c:	sub	r3, r4, lr
   33160:	clz	r3, r3
   33164:	lsr	r3, r3, #5
   33168:	and	r3, r3, ip
   3316c:	eor	r2, r2, r1, asr #31
   33170:	cmp	r2, #0
   33174:	movwne	r2, #1
   33178:	orr	r2, r3, r2
   3317c:	str	r1, [r0, #24]
   33180:	tst	r2, #1
   33184:	beq	3318c <__assert_fail@plt+0x205d4>
   33188:	b	3b1b8 <__assert_fail@plt+0x28600>
   3318c:	b	3ae7c <__assert_fail@plt+0x282c4>
   33190:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33194:	ldr	r0, [r0]
   33198:	add	r0, r0, #3600	; 0xe10
   3319c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   331a0:	str	r0, [r1, #24]
   331a4:	b	3ae7c <__assert_fail@plt+0x282c4>
   331a8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   331ac:	ldr	r0, [r0, #-56]	; 0xffffffc8
   331b0:	add	r0, r0, #3600	; 0xe10
   331b4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   331b8:	str	r0, [r1, #24]
   331bc:	b	3ae7c <__assert_fail@plt+0x282c4>
   331c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   331c4:	mov	r1, #0
   331c8:	str	r1, [r0, #12]
   331cc:	str	r1, [r0, #8]
   331d0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   331d4:	ldr	r0, [r0]
   331d8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   331dc:	str	r0, [r1, #16]
   331e0:	b	3ae7c <__assert_fail@plt+0x282c4>
   331e4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   331e8:	mov	r1, #0
   331ec:	str	r1, [r0, #12]
   331f0:	str	r1, [r0, #8]
   331f4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   331f8:	ldr	r0, [r0, #-56]	; 0xffffffc8
   331fc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   33200:	str	r0, [r1, #16]
   33204:	b	3ae7c <__assert_fail@plt+0x282c4>
   33208:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3320c:	ldr	r1, [r0, #-56]	; 0xffffffc8
   33210:	ldr	r0, [r0, #-52]	; 0xffffffcc
   33214:	ldr	r2, [fp, #-36]	; 0xffffffdc
   33218:	str	r0, [r2, #12]
   3321c:	str	r1, [r2, #8]
   33220:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33224:	ldr	r0, [r0]
   33228:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3322c:	str	r0, [r1, #16]
   33230:	ldr	r0, [fp, #-36]	; 0xffffffdc
   33234:	movw	r1, #1
   33238:	strb	r1, [r0, #187]	; 0xbb
   3323c:	b	3ae7c <__assert_fail@plt+0x282c4>
   33240:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33244:	ldr	r1, [r0, #-48]	; 0xffffffd0
   33248:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3324c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   33250:	str	r0, [r2, #12]
   33254:	str	r1, [r2, #8]
   33258:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3325c:	ldr	r0, [r0]
   33260:	ldr	r1, [fp, #-36]	; 0xffffffdc
   33264:	str	r0, [r1, #16]
   33268:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3326c:	movw	r1, #1
   33270:	strb	r1, [r0, #187]	; 0xbb
   33274:	b	3ae7c <__assert_fail@plt+0x282c4>
   33278:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3327c:	ldr	r1, [r0, #-104]	; 0xffffff98
   33280:	ldr	r0, [r0, #-100]	; 0xffffff9c
   33284:	ldr	r2, [fp, #-36]	; 0xffffffdc
   33288:	str	r0, [r2, #60]	; 0x3c
   3328c:	str	r1, [r2, #56]	; 0x38
   33290:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33294:	ldr	r1, [r0, #8]
   33298:	ldr	r0, [r0, #12]
   3329c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   332a0:	str	r0, [r2, #68]	; 0x44
   332a4:	str	r1, [r2, #64]	; 0x40
   332a8:	b	3ae7c <__assert_fail@plt+0x282c4>
   332ac:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   332b0:	mvn	r1, #207	; 0xcf
   332b4:	add	r0, r0, r1
   332b8:	ldr	r0, [r0]
   332bc:	movw	r1, #4
   332c0:	cmp	r1, r0
   332c4:	bgt	33370 <__assert_fail@plt+0x207b8>
   332c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   332cc:	bl	3d73c <__assert_fail@plt+0x2ab84>
   332d0:	tst	r0, #1
   332d4:	beq	3331c <__assert_fail@plt+0x20764>
   332d8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   332dc:	ldr	r0, [r0, #-208]	; 0xffffff30
   332e0:	asr	r1, r0, #31
   332e4:	str	r0, [fp, #-1392]	; 0xfffffa90
   332e8:	str	r1, [fp, #-1388]	; 0xfffffa94
   332ec:	movw	r0, #44285	; 0xacfd
   332f0:	movt	r0, #7
   332f4:	bl	12864 <gettext@plt>
   332f8:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   332fc:	ldr	r2, [r1, #-216]	; 0xffffff28
   33300:	ldr	r3, [r1, #-212]	; 0xffffff2c
   33304:	ldr	r1, [fp, #-1392]	; 0xfffffa90
   33308:	ldr	ip, [fp, #-1388]	; 0xfffffa94
   3330c:	mov	lr, sp
   33310:	str	ip, [lr, #4]
   33314:	str	r1, [lr]
   33318:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   3331c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   33320:	add	r1, r0, #32
   33324:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   33328:	sub	r3, r2, #224	; 0xe0
   3332c:	vldr	d16, [r2, #-208]	; 0xffffff30
   33330:	vstr	d16, [r0, #48]	; 0x30
   33334:	vld1.64	{d18-d19}, [r3]
   33338:	vst1.64	{d18-d19}, [r1]
   3333c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33340:	ldr	r1, [r0, #-104]	; 0xffffff98
   33344:	ldr	r0, [r0, #-100]	; 0xffffff9c
   33348:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3334c:	str	r0, [r2, #60]	; 0x3c
   33350:	str	r1, [r2, #56]	; 0x38
   33354:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33358:	ldr	r1, [r0, #8]
   3335c:	ldr	r0, [r0, #12]
   33360:	ldr	r2, [fp, #-36]	; 0xffffffdc
   33364:	str	r0, [r2, #68]	; 0x44
   33368:	str	r1, [r2, #64]	; 0x40
   3336c:	b	333e0 <__assert_fail@plt+0x20828>
   33370:	ldr	r0, [fp, #-36]	; 0xffffffdc
   33374:	bl	3d73c <__assert_fail@plt+0x2ab84>
   33378:	tst	r0, #1
   3337c:	beq	3339c <__assert_fail@plt+0x207e4>
   33380:	movw	r0, #44343	; 0xad37
   33384:	movt	r0, #7
   33388:	bl	12864 <gettext@plt>
   3338c:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   33390:	ldr	r2, [r1, #-216]	; 0xffffff28
   33394:	ldr	r3, [r1, #-212]	; 0xffffff2c
   33398:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   3339c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   333a0:	ldr	r1, [r0, #-216]	; 0xffffff28
   333a4:	ldr	r0, [r0, #-212]	; 0xffffff2c
   333a8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   333ac:	str	r0, [r2, #60]	; 0x3c
   333b0:	str	r1, [r2, #56]	; 0x38
   333b4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   333b8:	ldr	r1, [r0, #-104]	; 0xffffff98
   333bc:	ldr	r0, [r0, #-100]	; 0xffffff9c
   333c0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   333c4:	str	r0, [r2, #68]	; 0x44
   333c8:	str	r1, [r2, #64]	; 0x40
   333cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   333d0:	add	r0, r0, #32
   333d4:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   333d8:	movw	r2, #24
   333dc:	bl	125c4 <memcpy@plt>
   333e0:	b	3ae7c <__assert_fail@plt+0x282c4>
   333e4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   333e8:	ldr	r1, [r0, #-104]	; 0xffffff98
   333ec:	ldr	r0, [r0, #-100]	; 0xffffff9c
   333f0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   333f4:	str	r0, [r2, #68]	; 0x44
   333f8:	str	r1, [r2, #64]	; 0x40
   333fc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33400:	ldr	r1, [r0, #-56]	; 0xffffffc8
   33404:	ldr	r0, [r0, #-52]	; 0xffffffcc
   33408:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3340c:	str	r0, [r2, #60]	; 0x3c
   33410:	str	r1, [r2, #56]	; 0x38
   33414:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33418:	ldr	r1, [r0, #8]
   3341c:	ldr	r0, [r0, #12]
   33420:	ldr	r2, [fp, #-36]	; 0xffffffdc
   33424:	rsbs	r1, r1, #0
   33428:	rsc	r3, r0, #0
   3342c:	and	r0, r0, r3
   33430:	mov	ip, #0
   33434:	cmp	r0, #0
   33438:	movwmi	ip, #1
   3343c:	str	r1, [r2, #40]	; 0x28
   33440:	str	r3, [r2, #44]	; 0x2c
   33444:	tst	ip, #1
   33448:	beq	33450 <__assert_fail@plt+0x20898>
   3344c:	b	3b1b8 <__assert_fail@plt+0x28600>
   33450:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33454:	ldr	r0, [r0, #16]
   33458:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3345c:	str	r0, [r1, #48]	; 0x30
   33460:	b	3ae7c <__assert_fail@plt+0x282c4>
   33464:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33468:	ldr	r1, [r0, #-112]	; 0xffffff90
   3346c:	ldr	r0, [r0, #-108]	; 0xffffff94
   33470:	ldr	r2, [fp, #-36]	; 0xffffffdc
   33474:	str	r0, [r2, #60]	; 0x3c
   33478:	str	r1, [r2, #56]	; 0x38
   3347c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33480:	ldr	r1, [r0, #-48]	; 0xffffffd0
   33484:	ldr	r0, [r0, #-44]	; 0xffffffd4
   33488:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3348c:	rsbs	r1, r1, #0
   33490:	rsc	r3, r0, #0
   33494:	and	r0, r0, r3
   33498:	mov	ip, #0
   3349c:	cmp	r0, #0
   334a0:	movwmi	ip, #1
   334a4:	str	r1, [r2, #64]	; 0x40
   334a8:	str	r3, [r2, #68]	; 0x44
   334ac:	tst	ip, #1
   334b0:	beq	334b8 <__assert_fail@plt+0x20900>
   334b4:	b	3b1b8 <__assert_fail@plt+0x28600>
   334b8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   334bc:	ldr	r1, [r0, #8]
   334c0:	ldr	r0, [r0, #12]
   334c4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   334c8:	rsbs	r1, r1, #0
   334cc:	rsc	r3, r0, #0
   334d0:	and	r0, r0, r3
   334d4:	mov	ip, #0
   334d8:	cmp	r0, #0
   334dc:	movwmi	ip, #1
   334e0:	str	r1, [r2, #40]	; 0x28
   334e4:	str	r3, [r2, #44]	; 0x2c
   334e8:	tst	ip, #1
   334ec:	beq	334f4 <__assert_fail@plt+0x2093c>
   334f0:	b	3b1b8 <__assert_fail@plt+0x28600>
   334f4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   334f8:	ldr	r0, [r0, #16]
   334fc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   33500:	str	r0, [r1, #48]	; 0x30
   33504:	b	3ae7c <__assert_fail@plt+0x282c4>
   33508:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3350c:	ldr	r1, [r0, #-56]	; 0xffffffc8
   33510:	ldr	r0, [r0, #-52]	; 0xffffffcc
   33514:	ldr	r2, [fp, #-36]	; 0xffffffdc
   33518:	str	r0, [r2, #60]	; 0x3c
   3351c:	str	r1, [r2, #56]	; 0x38
   33520:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33524:	ldr	r1, [r0, #8]
   33528:	ldr	r0, [r0, #12]
   3352c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   33530:	str	r0, [r2, #68]	; 0x44
   33534:	str	r1, [r2, #64]	; 0x40
   33538:	b	3ae7c <__assert_fail@plt+0x282c4>
   3353c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33540:	ldr	r1, [r0, #-168]	; 0xffffff58
   33544:	ldr	r0, [r0, #-164]	; 0xffffff5c
   33548:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3354c:	str	r0, [r2, #60]	; 0x3c
   33550:	str	r1, [r2, #56]	; 0x38
   33554:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33558:	ldr	r1, [r0, #-104]	; 0xffffff98
   3355c:	ldr	r0, [r0, #-100]	; 0xffffff9c
   33560:	ldr	r2, [fp, #-36]	; 0xffffffdc
   33564:	str	r0, [r2, #68]	; 0x44
   33568:	str	r1, [r2, #64]	; 0x40
   3356c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   33570:	add	r0, r0, #32
   33574:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   33578:	movw	r2, #24
   3357c:	bl	125c4 <memcpy@plt>
   33580:	b	3ae7c <__assert_fail@plt+0x282c4>
   33584:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33588:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3358c:	ldr	r0, [r0, #-44]	; 0xffffffd4
   33590:	ldr	r2, [fp, #-36]	; 0xffffffdc
   33594:	str	r0, [r2, #68]	; 0x44
   33598:	str	r1, [r2, #64]	; 0x40
   3359c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   335a0:	ldr	r1, [r0]
   335a4:	ldr	r0, [r0, #4]
   335a8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   335ac:	str	r0, [r2, #60]	; 0x3c
   335b0:	str	r1, [r2, #56]	; 0x38
   335b4:	b	3ae7c <__assert_fail@plt+0x282c4>
   335b8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   335bc:	ldr	r1, [r0, #-104]	; 0xffffff98
   335c0:	ldr	r0, [r0, #-100]	; 0xffffff9c
   335c4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   335c8:	str	r0, [r2, #68]	; 0x44
   335cc:	str	r1, [r2, #64]	; 0x40
   335d0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   335d4:	ldr	r1, [r0, #-56]	; 0xffffffc8
   335d8:	ldr	r0, [r0, #-52]	; 0xffffffcc
   335dc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   335e0:	str	r0, [r2, #60]	; 0x3c
   335e4:	str	r1, [r2, #56]	; 0x38
   335e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   335ec:	add	r0, r0, #32
   335f0:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   335f4:	movw	r2, #24
   335f8:	bl	125c4 <memcpy@plt>
   335fc:	b	3ae7c <__assert_fail@plt+0x282c4>
   33600:	ldr	r0, [fp, #-36]	; 0xffffffdc
   33604:	add	r1, r0, #32
   33608:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   3360c:	sub	r3, r2, #112	; 0x70
   33610:	vldr	d16, [r2, #-96]	; 0xffffffa0
   33614:	vstr	d16, [r0, #48]	; 0x30
   33618:	vld1.64	{d18-d19}, [r3]
   3361c:	vst1.64	{d18-d19}, [r1]
   33620:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33624:	ldr	r1, [r0, #-48]	; 0xffffffd0
   33628:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3362c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   33630:	rsbs	r1, r1, #0
   33634:	rsc	r3, r0, #0
   33638:	and	r0, r0, r3
   3363c:	mov	ip, #0
   33640:	cmp	r0, #0
   33644:	movwmi	ip, #1
   33648:	str	r1, [r2, #56]	; 0x38
   3364c:	str	r3, [r2, #60]	; 0x3c
   33650:	tst	ip, #1
   33654:	beq	3365c <__assert_fail@plt+0x20aa4>
   33658:	b	3b1b8 <__assert_fail@plt+0x28600>
   3365c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33660:	ldr	r1, [r0, #8]
   33664:	ldr	r0, [r0, #12]
   33668:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3366c:	rsbs	r1, r1, #0
   33670:	rsc	r3, r0, #0
   33674:	and	r0, r0, r3
   33678:	mov	ip, #0
   3367c:	cmp	r0, #0
   33680:	movwmi	ip, #1
   33684:	str	r1, [r2, #64]	; 0x40
   33688:	str	r3, [r2, #68]	; 0x44
   3368c:	tst	ip, #1
   33690:	beq	33698 <__assert_fail@plt+0x20ae0>
   33694:	b	3b1b8 <__assert_fail@plt+0x28600>
   33698:	b	3ae7c <__assert_fail@plt+0x282c4>
   3369c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   336a0:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   336a4:	ldr	r2, [r1]
   336a8:	ldr	r3, [r1, #-4]
   336ac:	ldr	ip, [r1, #-8]
   336b0:	ldr	lr, [r1, #-12]
   336b4:	ldr	r4, [r1, #-16]
   336b8:	ldr	r5, [r1, #-20]	; 0xffffffec
   336bc:	ldr	r6, [r1, #-24]	; 0xffffffe8
   336c0:	ldr	r7, [r1, #-28]	; 0xffffffe4
   336c4:	ldr	r8, [r1, #-32]	; 0xffffffe0
   336c8:	ldr	r9, [r1, #-36]	; 0xffffffdc
   336cc:	ldr	sl, [r1, #-40]	; 0xffffffd8
   336d0:	str	r2, [sp, #1436]	; 0x59c
   336d4:	ldr	r2, [r1, #-56]	; 0xffffffc8
   336d8:	str	r3, [sp, #1432]	; 0x598
   336dc:	ldr	r3, [r1, #-52]	; 0xffffffcc
   336e0:	str	r0, [sp, #1428]	; 0x594
   336e4:	ldr	r0, [r1, #-48]	; 0xffffffd0
   336e8:	ldr	r1, [r1, #-44]	; 0xffffffd4
   336ec:	str	r0, [sp, #1424]	; 0x590
   336f0:	mov	r0, sp
   336f4:	str	r0, [sp, #1420]	; 0x58c
   336f8:	ldr	r0, [sp, #1436]	; 0x59c
   336fc:	str	r1, [sp, #1416]	; 0x588
   33700:	ldr	r1, [sp, #1420]	; 0x58c
   33704:	str	r0, [r1, #48]	; 0x30
   33708:	ldr	r0, [sp, #1424]	; 0x590
   3370c:	str	r0, [r1]
   33710:	ldr	r0, [sp, #1416]	; 0x588
   33714:	str	r0, [r1, #4]
   33718:	str	sl, [r1, #8]
   3371c:	str	r9, [r1, #12]
   33720:	str	r8, [r1, #16]
   33724:	str	r7, [r1, #20]
   33728:	str	r6, [r1, #24]
   3372c:	str	r5, [r1, #28]
   33730:	str	r4, [r1, #32]
   33734:	str	lr, [r1, #36]	; 0x24
   33738:	str	ip, [r1, #40]	; 0x28
   3373c:	ldr	ip, [sp, #1432]	; 0x598
   33740:	str	ip, [r1, #44]	; 0x2c
   33744:	ldr	r0, [sp, #1428]	; 0x594
   33748:	bl	3d168 <__assert_fail@plt+0x2a5b0>
   3374c:	tst	r0, #1
   33750:	bne	33758 <__assert_fail@plt+0x20ba0>
   33754:	b	3b1b8 <__assert_fail@plt+0x28600>
   33758:	b	3ae7c <__assert_fail@plt+0x282c4>
   3375c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   33760:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   33764:	ldr	r2, [r1, #52]	; 0x34
   33768:	ldr	r3, [r1, #48]	; 0x30
   3376c:	ldr	ip, [r1, #44]	; 0x2c
   33770:	ldr	lr, [r1, #40]	; 0x28
   33774:	ldr	r4, [r1, #36]	; 0x24
   33778:	ldr	r5, [r1, #32]
   3377c:	ldr	r6, [r1, #28]
   33780:	ldr	r7, [r1, #24]
   33784:	ldr	r8, [r1, #20]
   33788:	ldr	r9, [r1, #16]
   3378c:	ldr	sl, [r1]
   33790:	str	r3, [sp, #1412]	; 0x584
   33794:	ldr	r3, [r1, #4]
   33798:	str	r0, [sp, #1408]	; 0x580
   3379c:	ldr	r0, [r1, #8]
   337a0:	ldr	r1, [r1, #12]
   337a4:	str	r0, [sp, #1404]	; 0x57c
   337a8:	mov	r0, sp
   337ac:	str	r0, [sp, #1400]	; 0x578
   337b0:	mov	r0, #1
   337b4:	str	r1, [sp, #1396]	; 0x574
   337b8:	ldr	r1, [sp, #1400]	; 0x578
   337bc:	str	r0, [r1, #48]	; 0x30
   337c0:	ldr	r0, [sp, #1404]	; 0x57c
   337c4:	str	r0, [r1]
   337c8:	ldr	r0, [sp, #1396]	; 0x574
   337cc:	str	r0, [r1, #4]
   337d0:	str	r9, [r1, #8]
   337d4:	str	r8, [r1, #12]
   337d8:	str	r7, [r1, #16]
   337dc:	str	r6, [r1, #20]
   337e0:	str	r5, [r1, #24]
   337e4:	str	r4, [r1, #28]
   337e8:	str	lr, [r1, #32]
   337ec:	str	ip, [r1, #36]	; 0x24
   337f0:	ldr	ip, [sp, #1412]	; 0x584
   337f4:	str	ip, [r1, #40]	; 0x28
   337f8:	str	r2, [r1, #44]	; 0x2c
   337fc:	ldr	r0, [sp, #1408]	; 0x580
   33800:	mov	r2, sl
   33804:	bl	3d168 <__assert_fail@plt+0x2a5b0>
   33808:	tst	r0, #1
   3380c:	bne	33814 <__assert_fail@plt+0x20c5c>
   33810:	b	3b1b8 <__assert_fail@plt+0x28600>
   33814:	b	3ae7c <__assert_fail@plt+0x282c4>
   33818:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3381c:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   33820:	ldr	r2, [r1, #52]	; 0x34
   33824:	ldr	r3, [r1, #48]	; 0x30
   33828:	ldr	ip, [r1, #44]	; 0x2c
   3382c:	ldr	lr, [r1, #40]	; 0x28
   33830:	ldr	r4, [r1, #36]	; 0x24
   33834:	ldr	r5, [r1, #32]
   33838:	ldr	r6, [r1, #28]
   3383c:	ldr	r7, [r1, #24]
   33840:	ldr	r8, [r1, #20]
   33844:	ldr	r9, [r1, #16]
   33848:	ldr	sl, [r1]
   3384c:	str	r3, [sp, #1392]	; 0x570
   33850:	ldr	r3, [r1, #4]
   33854:	str	r0, [sp, #1388]	; 0x56c
   33858:	ldr	r0, [r1, #8]
   3385c:	ldr	r1, [r1, #12]
   33860:	str	r0, [sp, #1384]	; 0x568
   33864:	mov	r0, sp
   33868:	str	r0, [sp, #1380]	; 0x564
   3386c:	mov	r0, #1
   33870:	str	r1, [sp, #1376]	; 0x560
   33874:	ldr	r1, [sp, #1380]	; 0x564
   33878:	str	r0, [r1, #48]	; 0x30
   3387c:	ldr	r0, [sp, #1384]	; 0x568
   33880:	str	r0, [r1]
   33884:	ldr	r0, [sp, #1376]	; 0x560
   33888:	str	r0, [r1, #4]
   3388c:	str	r9, [r1, #8]
   33890:	str	r8, [r1, #12]
   33894:	str	r7, [r1, #16]
   33898:	str	r6, [r1, #20]
   3389c:	str	r5, [r1, #24]
   338a0:	str	r4, [r1, #28]
   338a4:	str	lr, [r1, #32]
   338a8:	str	ip, [r1, #36]	; 0x24
   338ac:	ldr	ip, [sp, #1392]	; 0x570
   338b0:	str	ip, [r1, #40]	; 0x28
   338b4:	str	r2, [r1, #44]	; 0x2c
   338b8:	ldr	r0, [sp, #1388]	; 0x56c
   338bc:	mov	r2, sl
   338c0:	bl	3d168 <__assert_fail@plt+0x2a5b0>
   338c4:	tst	r0, #1
   338c8:	bne	338d0 <__assert_fail@plt+0x20d18>
   338cc:	b	3b1b8 <__assert_fail@plt+0x28600>
   338d0:	b	3ae7c <__assert_fail@plt+0x282c4>
   338d4:	mov	r0, #0
   338d8:	str	r0, [fp, #-1444]	; 0xfffffa5c
   338dc:	str	r0, [fp, #-1448]	; 0xfffffa58
   338e0:	str	r0, [fp, #-1436]	; 0xfffffa64
   338e4:	str	r0, [fp, #-1440]	; 0xfffffa60
   338e8:	sub	lr, fp, #1024	; 0x400
   338ec:	sub	r1, lr, #424	; 0x1a8
   338f0:	add	r2, r1, #16
   338f4:	str	r0, [fp, #-1428]	; 0xfffffa6c
   338f8:	str	r0, [fp, #-1432]	; 0xfffffa68
   338fc:	str	r0, [fp, #-1420]	; 0xfffffa74
   33900:	str	r0, [fp, #-1424]	; 0xfffffa70
   33904:	add	r3, r1, #32
   33908:	str	r0, [fp, #-1412]	; 0xfffffa7c
   3390c:	str	r0, [fp, #-1416]	; 0xfffffa78
   33910:	str	r0, [fp, #-1404]	; 0xfffffa84
   33914:	str	r0, [fp, #-1408]	; 0xfffffa80
   33918:	str	r0, [fp, #-1400]	; 0xfffffa88
   3391c:	sub	r0, fp, #1360	; 0x550
   33920:	add	ip, r0, #32
   33924:	vld1.64	{d16-d17}, [r3]
   33928:	vst1.64	{d16-d17}, [ip]
   3392c:	add	r3, r0, #16
   33930:	vld1.64	{d16-d17}, [r2]
   33934:	vst1.64	{d16-d17}, [r3]
   33938:	vld1.64	{d16-d17}, [r1]
   3393c:	mov	r1, #48	; 0x30
   33940:	vst1.64	{d16-d17}, [r0], r1
   33944:	ldr	r1, [sp, #1500]	; 0x5dc
   33948:	vldr	d18, [r1, #616]	; 0x268
   3394c:	vstr	d18, [r0]
   33950:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33954:	ldr	r2, [r0, #-56]	; 0xffffffc8
   33958:	ldr	r0, [r0, #-52]	; 0xffffffcc
   3395c:	str	r0, [fp, #-1356]	; 0xfffffab4
   33960:	str	r2, [fp, #-1360]	; 0xfffffab0
   33964:	b	3ae7c <__assert_fail@plt+0x282c4>
   33968:	mov	r0, #0
   3396c:	str	r0, [fp, #-1500]	; 0xfffffa24
   33970:	str	r0, [fp, #-1504]	; 0xfffffa20
   33974:	str	r0, [fp, #-1492]	; 0xfffffa2c
   33978:	str	r0, [fp, #-1496]	; 0xfffffa28
   3397c:	sub	r1, fp, #1504	; 0x5e0
   33980:	add	r2, r1, #16
   33984:	str	r0, [fp, #-1484]	; 0xfffffa34
   33988:	str	r0, [fp, #-1488]	; 0xfffffa30
   3398c:	str	r0, [fp, #-1476]	; 0xfffffa3c
   33990:	str	r0, [fp, #-1480]	; 0xfffffa38
   33994:	add	r3, r1, #32
   33998:	str	r0, [fp, #-1468]	; 0xfffffa44
   3399c:	str	r0, [fp, #-1472]	; 0xfffffa40
   339a0:	str	r0, [fp, #-1460]	; 0xfffffa4c
   339a4:	str	r0, [fp, #-1464]	; 0xfffffa48
   339a8:	str	r0, [fp, #-1456]	; 0xfffffa50
   339ac:	sub	r0, fp, #1360	; 0x550
   339b0:	add	ip, r0, #32
   339b4:	vld1.64	{d16-d17}, [r3]
   339b8:	vst1.64	{d16-d17}, [ip]
   339bc:	add	r3, r0, #16
   339c0:	vld1.64	{d16-d17}, [r2]
   339c4:	vst1.64	{d16-d17}, [r3]
   339c8:	vld1.64	{d16-d17}, [r1]
   339cc:	mov	r1, #48	; 0x30
   339d0:	vst1.64	{d16-d17}, [r0], r1
   339d4:	ldr	r1, [sp, #1500]	; 0x5dc
   339d8:	vldr	d18, [r1, #560]	; 0x230
   339dc:	vstr	d18, [r0]
   339e0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   339e4:	ldr	r2, [r0, #-48]	; 0xffffffd0
   339e8:	ldr	r0, [r0, #-44]	; 0xffffffd4
   339ec:	str	r0, [fp, #-1356]	; 0xfffffab4
   339f0:	str	r2, [fp, #-1360]	; 0xfffffab0
   339f4:	b	3ae7c <__assert_fail@plt+0x282c4>
   339f8:	mov	r0, #0
   339fc:	str	r0, [fp, #-1556]	; 0xfffff9ec
   33a00:	str	r0, [fp, #-1560]	; 0xfffff9e8
   33a04:	str	r0, [fp, #-1548]	; 0xfffff9f4
   33a08:	str	r0, [fp, #-1552]	; 0xfffff9f0
   33a0c:	sub	lr, fp, #1024	; 0x400
   33a10:	sub	r1, lr, #536	; 0x218
   33a14:	add	r2, r1, #16
   33a18:	str	r0, [fp, #-1540]	; 0xfffff9fc
   33a1c:	str	r0, [fp, #-1544]	; 0xfffff9f8
   33a20:	str	r0, [fp, #-1532]	; 0xfffffa04
   33a24:	str	r0, [fp, #-1536]	; 0xfffffa00
   33a28:	add	r3, r1, #32
   33a2c:	str	r0, [fp, #-1524]	; 0xfffffa0c
   33a30:	str	r0, [fp, #-1528]	; 0xfffffa08
   33a34:	str	r0, [fp, #-1516]	; 0xfffffa14
   33a38:	str	r0, [fp, #-1520]	; 0xfffffa10
   33a3c:	str	r0, [fp, #-1512]	; 0xfffffa18
   33a40:	sub	ip, fp, #1360	; 0x550
   33a44:	add	lr, ip, #32
   33a48:	vld1.64	{d16-d17}, [r3]
   33a4c:	vst1.64	{d16-d17}, [lr]
   33a50:	add	r3, ip, #16
   33a54:	vld1.64	{d16-d17}, [r2]
   33a58:	vst1.64	{d16-d17}, [r3]
   33a5c:	vld1.64	{d16-d17}, [r1]
   33a60:	mov	r1, #48	; 0x30
   33a64:	vst1.64	{d16-d17}, [ip], r1
   33a68:	ldr	r1, [sp, #1500]	; 0x5dc
   33a6c:	vldr	d18, [r1, #504]	; 0x1f8
   33a70:	vstr	d18, [ip]
   33a74:	str	r0, [fp, #-1356]	; 0xfffffab4
   33a78:	mov	r0, #1
   33a7c:	str	r0, [fp, #-1360]	; 0xfffffab0
   33a80:	b	3ae7c <__assert_fail@plt+0x282c4>
   33a84:	mov	r0, #0
   33a88:	str	r0, [fp, #-1612]	; 0xfffff9b4
   33a8c:	str	r0, [fp, #-1616]	; 0xfffff9b0
   33a90:	str	r0, [fp, #-1604]	; 0xfffff9bc
   33a94:	str	r0, [fp, #-1608]	; 0xfffff9b8
   33a98:	sub	r1, fp, #1616	; 0x650
   33a9c:	add	r2, r1, #16
   33aa0:	str	r0, [fp, #-1596]	; 0xfffff9c4
   33aa4:	str	r0, [fp, #-1600]	; 0xfffff9c0
   33aa8:	str	r0, [fp, #-1588]	; 0xfffff9cc
   33aac:	str	r0, [fp, #-1592]	; 0xfffff9c8
   33ab0:	add	r3, r1, #32
   33ab4:	str	r0, [fp, #-1580]	; 0xfffff9d4
   33ab8:	str	r0, [fp, #-1584]	; 0xfffff9d0
   33abc:	str	r0, [fp, #-1572]	; 0xfffff9dc
   33ac0:	str	r0, [fp, #-1576]	; 0xfffff9d8
   33ac4:	str	r0, [fp, #-1568]	; 0xfffff9e0
   33ac8:	sub	r0, fp, #1360	; 0x550
   33acc:	add	ip, r0, #32
   33ad0:	vld1.64	{d16-d17}, [r3]
   33ad4:	vst1.64	{d16-d17}, [ip]
   33ad8:	add	r3, r0, #16
   33adc:	vld1.64	{d16-d17}, [r2]
   33ae0:	vst1.64	{d16-d17}, [r3]
   33ae4:	ldr	r2, [sp, #1500]	; 0x5dc
   33ae8:	vldr	d18, [r2, #448]	; 0x1c0
   33aec:	vstr	d18, [r2, #704]	; 0x2c0
   33af0:	vld1.64	{d16-d17}, [r1]
   33af4:	mov	r1, #8
   33af8:	vst1.64	{d16-d17}, [r0], r1
   33afc:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   33b00:	ldr	r3, [r1, #-56]	; 0xffffffc8
   33b04:	ldr	r1, [r1, #-52]	; 0xffffffcc
   33b08:	str	r1, [r0, #4]
   33b0c:	str	r3, [r0]
   33b10:	b	3ae7c <__assert_fail@plt+0x282c4>
   33b14:	mov	r0, #0
   33b18:	str	r0, [fp, #-1668]	; 0xfffff97c
   33b1c:	str	r0, [fp, #-1672]	; 0xfffff978
   33b20:	str	r0, [fp, #-1660]	; 0xfffff984
   33b24:	str	r0, [fp, #-1664]	; 0xfffff980
   33b28:	sub	lr, fp, #1024	; 0x400
   33b2c:	sub	r1, lr, #648	; 0x288
   33b30:	add	r2, r1, #16
   33b34:	str	r0, [fp, #-1652]	; 0xfffff98c
   33b38:	str	r0, [fp, #-1656]	; 0xfffff988
   33b3c:	str	r0, [fp, #-1644]	; 0xfffff994
   33b40:	str	r0, [fp, #-1648]	; 0xfffff990
   33b44:	add	r3, r1, #32
   33b48:	str	r0, [fp, #-1636]	; 0xfffff99c
   33b4c:	str	r0, [fp, #-1640]	; 0xfffff998
   33b50:	str	r0, [fp, #-1628]	; 0xfffff9a4
   33b54:	str	r0, [fp, #-1632]	; 0xfffff9a0
   33b58:	str	r0, [fp, #-1624]	; 0xfffff9a8
   33b5c:	sub	r0, fp, #1360	; 0x550
   33b60:	add	ip, r0, #32
   33b64:	vld1.64	{d16-d17}, [r3]
   33b68:	vst1.64	{d16-d17}, [ip]
   33b6c:	add	r3, r0, #16
   33b70:	vld1.64	{d16-d17}, [r2]
   33b74:	vst1.64	{d16-d17}, [r3]
   33b78:	ldr	r2, [sp, #1500]	; 0x5dc
   33b7c:	vldr	d18, [r2, #392]	; 0x188
   33b80:	vstr	d18, [r2, #704]	; 0x2c0
   33b84:	vld1.64	{d16-d17}, [r1]
   33b88:	mov	r1, #8
   33b8c:	vst1.64	{d16-d17}, [r0], r1
   33b90:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   33b94:	ldr	r3, [r1, #-48]	; 0xffffffd0
   33b98:	ldr	r1, [r1, #-44]	; 0xffffffd4
   33b9c:	str	r1, [r0, #4]
   33ba0:	str	r3, [r0]
   33ba4:	b	3ae7c <__assert_fail@plt+0x282c4>
   33ba8:	mov	r0, #0
   33bac:	str	r0, [fp, #-1724]	; 0xfffff944
   33bb0:	str	r0, [fp, #-1728]	; 0xfffff940
   33bb4:	str	r0, [fp, #-1716]	; 0xfffff94c
   33bb8:	str	r0, [fp, #-1720]	; 0xfffff948
   33bbc:	sub	r1, fp, #1728	; 0x6c0
   33bc0:	add	r2, r1, #16
   33bc4:	str	r0, [fp, #-1708]	; 0xfffff954
   33bc8:	str	r0, [fp, #-1712]	; 0xfffff950
   33bcc:	str	r0, [fp, #-1700]	; 0xfffff95c
   33bd0:	str	r0, [fp, #-1704]	; 0xfffff958
   33bd4:	add	r3, r1, #32
   33bd8:	str	r0, [fp, #-1692]	; 0xfffff964
   33bdc:	str	r0, [fp, #-1696]	; 0xfffff960
   33be0:	str	r0, [fp, #-1684]	; 0xfffff96c
   33be4:	str	r0, [fp, #-1688]	; 0xfffff968
   33be8:	str	r0, [fp, #-1680]	; 0xfffff970
   33bec:	sub	ip, fp, #1360	; 0x550
   33bf0:	add	lr, ip, #32
   33bf4:	vld1.64	{d16-d17}, [r3]
   33bf8:	vst1.64	{d16-d17}, [lr]
   33bfc:	add	r3, ip, #16
   33c00:	vld1.64	{d16-d17}, [r2]
   33c04:	vst1.64	{d16-d17}, [r3]
   33c08:	ldr	r2, [sp, #1500]	; 0x5dc
   33c0c:	vldr	d18, [r2, #336]	; 0x150
   33c10:	vstr	d18, [r2, #704]	; 0x2c0
   33c14:	vld1.64	{d16-d17}, [r1]
   33c18:	mov	r1, #8
   33c1c:	vst1.64	{d16-d17}, [ip], r1
   33c20:	str	r0, [ip, #4]
   33c24:	mov	r0, #1
   33c28:	str	r0, [ip]
   33c2c:	b	3ae7c <__assert_fail@plt+0x282c4>
   33c30:	sub	r0, fp, #1360	; 0x550
   33c34:	mov	r1, #0
   33c38:	str	r1, [fp, #-1780]	; 0xfffff90c
   33c3c:	str	r1, [fp, #-1784]	; 0xfffff908
   33c40:	str	r1, [fp, #-1772]	; 0xfffff914
   33c44:	str	r1, [fp, #-1776]	; 0xfffff910
   33c48:	str	r1, [fp, #-1764]	; 0xfffff91c
   33c4c:	str	r1, [fp, #-1768]	; 0xfffff918
   33c50:	str	r1, [fp, #-1756]	; 0xfffff924
   33c54:	str	r1, [fp, #-1760]	; 0xfffff920
   33c58:	str	r1, [fp, #-1748]	; 0xfffff92c
   33c5c:	str	r1, [fp, #-1752]	; 0xfffff928
   33c60:	str	r1, [fp, #-1740]	; 0xfffff934
   33c64:	str	r1, [fp, #-1744]	; 0xfffff930
   33c68:	movw	r1, #0
   33c6c:	str	r1, [fp, #-1736]	; 0xfffff938
   33c70:	sub	lr, fp, #1024	; 0x400
   33c74:	sub	r1, lr, #760	; 0x2f8
   33c78:	movw	r2, #56	; 0x38
   33c7c:	bl	125c4 <memcpy@plt>
   33c80:	b	34348 <__assert_fail@plt+0x21790>
   33c84:	b	33c88 <__assert_fail@plt+0x210d0>
   33c88:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33c8c:	ldr	r0, [r0, #4]
   33c90:	cmn	r0, #1
   33c94:	bgt	33e98 <__assert_fail@plt+0x212e0>
   33c98:	b	33c9c <__assert_fail@plt+0x210e4>
   33c9c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33ca0:	ldr	r0, [r0, #-52]	; 0xffffffcc
   33ca4:	cmn	r0, #1
   33ca8:	bgt	33db4 <__assert_fail@plt+0x211fc>
   33cac:	b	33cb0 <__assert_fail@plt+0x210f8>
   33cb0:	b	33cb4 <__assert_fail@plt+0x210fc>
   33cb4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33cb8:	ldr	r1, [r0, #-56]	; 0xffffffc8
   33cbc:	ldr	r2, [r0, #-52]	; 0xffffffcc
   33cc0:	ldr	r3, [r0]
   33cc4:	ldr	r0, [r0, #4]
   33cc8:	mov	ip, #127	; 0x7f
   33ccc:	mov	lr, #0
   33cd0:	str	r0, [sp, #1372]	; 0x55c
   33cd4:	mov	r0, ip
   33cd8:	str	r1, [sp, #1368]	; 0x558
   33cdc:	mov	r1, lr
   33ce0:	str	r2, [sp, #1364]	; 0x554
   33ce4:	mov	r2, r3
   33ce8:	ldr	r3, [sp, #1372]	; 0x55c
   33cec:	bl	75338 <__assert_fail@plt+0x62780>
   33cf0:	ldr	r2, [sp, #1368]	; 0x558
   33cf4:	subs	r0, r2, r0
   33cf8:	ldr	r2, [sp, #1364]	; 0x554
   33cfc:	sbcs	r1, r2, r1
   33d00:	blt	33fe0 <__assert_fail@plt+0x21428>
   33d04:	b	34004 <__assert_fail@plt+0x2144c>
   33d08:	b	33d0c <__assert_fail@plt+0x21154>
   33d0c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33d10:	ldr	r1, [r0]
   33d14:	ldr	r0, [r0, #4]
   33d18:	eor	r0, r0, #-2147483648	; 0x80000000
   33d1c:	orr	r0, r1, r0
   33d20:	cmp	r0, #0
   33d24:	beq	33d48 <__assert_fail@plt+0x21190>
   33d28:	b	33d5c <__assert_fail@plt+0x211a4>
   33d2c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33d30:	ldr	r1, [r0]
   33d34:	ldr	r0, [r0, #4]
   33d38:	subs	r1, r1, #1
   33d3c:	sbcs	r0, r0, #0
   33d40:	blt	33d5c <__assert_fail@plt+0x211a4>
   33d44:	b	33d48 <__assert_fail@plt+0x21190>
   33d48:	mov	r0, #0
   33d4c:	mov	r1, r0
   33d50:	str	r1, [sp, #1360]	; 0x550
   33d54:	str	r0, [sp, #1356]	; 0x54c
   33d58:	b	33d88 <__assert_fail@plt+0x211d0>
   33d5c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33d60:	ldr	r1, [r0]
   33d64:	ldr	r0, [r0, #4]
   33d68:	rsbs	r2, r1, #0
   33d6c:	rsc	r3, r0, #0
   33d70:	mov	r0, #127	; 0x7f
   33d74:	mov	r1, #0
   33d78:	bl	75338 <__assert_fail@plt+0x62780>
   33d7c:	str	r0, [sp, #1360]	; 0x550
   33d80:	str	r1, [sp, #1356]	; 0x54c
   33d84:	b	33d88 <__assert_fail@plt+0x211d0>
   33d88:	ldr	r0, [sp, #1356]	; 0x54c
   33d8c:	ldr	r1, [sp, #1360]	; 0x550
   33d90:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   33d94:	ldr	r3, [r2, #-56]	; 0xffffffc8
   33d98:	ldr	r2, [r2, #-52]	; 0xffffffcc
   33d9c:	mvn	r2, r2
   33da0:	mvn	r3, r3
   33da4:	subs	r1, r3, r1
   33da8:	sbcs	r0, r2, r0
   33dac:	bge	33fe0 <__assert_fail@plt+0x21428>
   33db0:	b	34004 <__assert_fail@plt+0x2144c>
   33db4:	b	33db8 <__assert_fail@plt+0x21200>
   33db8:	b	33e44 <__assert_fail@plt+0x2128c>
   33dbc:	b	33e44 <__assert_fail@plt+0x2128c>
   33dc0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33dc4:	ldr	r1, [r0]
   33dc8:	ldr	r0, [r0, #4]
   33dcc:	and	r0, r1, r0
   33dd0:	cmn	r0, #1
   33dd4:	bne	33e44 <__assert_fail@plt+0x2128c>
   33dd8:	b	33ddc <__assert_fail@plt+0x21224>
   33ddc:	b	33de0 <__assert_fail@plt+0x21228>
   33de0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33de4:	ldr	r1, [r0, #-56]	; 0xffffffc8
   33de8:	ldr	r0, [r0, #-52]	; 0xffffffcc
   33dec:	subs	r1, r1, #128	; 0x80
   33df0:	sbc	r0, r0, #0
   33df4:	rsbs	r1, r1, #0
   33df8:	rscs	r0, r0, #0
   33dfc:	blt	33fe0 <__assert_fail@plt+0x21428>
   33e00:	b	34004 <__assert_fail@plt+0x2144c>
   33e04:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33e08:	ldr	r1, [r0, #-56]	; 0xffffffc8
   33e0c:	ldr	r0, [r0, #-52]	; 0xffffffcc
   33e10:	subs	r1, r1, #1
   33e14:	sbcs	r0, r0, #0
   33e18:	blt	34004 <__assert_fail@plt+0x2144c>
   33e1c:	b	33e20 <__assert_fail@plt+0x21268>
   33e20:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33e24:	ldr	r1, [r0, #-56]	; 0xffffffc8
   33e28:	ldr	r0, [r0, #-52]	; 0xffffffcc
   33e2c:	subs	r1, r1, #1
   33e30:	sbc	r0, r0, #0
   33e34:	rsbs	r1, r1, #127	; 0x7f
   33e38:	rscs	r0, r0, #0
   33e3c:	blt	33fe0 <__assert_fail@plt+0x21428>
   33e40:	b	34004 <__assert_fail@plt+0x2144c>
   33e44:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33e48:	ldr	r1, [r0, #-56]	; 0xffffffc8
   33e4c:	ldr	r2, [r0, #-52]	; 0xffffffcc
   33e50:	ldr	r3, [r0]
   33e54:	ldr	r0, [r0, #4]
   33e58:	mvn	ip, #127	; 0x7f
   33e5c:	mvn	lr, #0
   33e60:	str	r0, [sp, #1352]	; 0x548
   33e64:	mov	r0, ip
   33e68:	str	r1, [sp, #1348]	; 0x544
   33e6c:	mov	r1, lr
   33e70:	str	r2, [sp, #1344]	; 0x540
   33e74:	mov	r2, r3
   33e78:	ldr	r3, [sp, #1352]	; 0x548
   33e7c:	bl	75338 <__assert_fail@plt+0x62780>
   33e80:	ldr	r2, [sp, #1348]	; 0x544
   33e84:	subs	r0, r0, r2
   33e88:	ldr	r2, [sp, #1344]	; 0x540
   33e8c:	sbcs	r1, r1, r2
   33e90:	blt	33fe0 <__assert_fail@plt+0x21428>
   33e94:	b	34004 <__assert_fail@plt+0x2144c>
   33e98:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33e9c:	ldr	r1, [r0]
   33ea0:	ldr	r0, [r0, #4]
   33ea4:	orr	r0, r1, r0
   33ea8:	cmp	r0, #0
   33eac:	bne	33eb8 <__assert_fail@plt+0x21300>
   33eb0:	b	33eb4 <__assert_fail@plt+0x212fc>
   33eb4:	b	34004 <__assert_fail@plt+0x2144c>
   33eb8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33ebc:	ldr	r0, [r0, #-52]	; 0xffffffcc
   33ec0:	cmn	r0, #1
   33ec4:	bgt	33f8c <__assert_fail@plt+0x213d4>
   33ec8:	b	33ecc <__assert_fail@plt+0x21314>
   33ecc:	b	33ed0 <__assert_fail@plt+0x21318>
   33ed0:	b	33f44 <__assert_fail@plt+0x2138c>
   33ed4:	b	33f44 <__assert_fail@plt+0x2138c>
   33ed8:			; <UNDEFINED> instruction: 0xffff9d90
   33edc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33ee0:	ldr	r1, [r0, #-56]	; 0xffffffc8
   33ee4:	ldr	r0, [r0, #-52]	; 0xffffffcc
   33ee8:	and	r0, r1, r0
   33eec:	cmn	r0, #1
   33ef0:	bne	33f44 <__assert_fail@plt+0x2138c>
   33ef4:	b	33ef8 <__assert_fail@plt+0x21340>
   33ef8:	b	33efc <__assert_fail@plt+0x21344>
   33efc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33f00:	ldr	r1, [r0]
   33f04:	ldr	r0, [r0, #4]
   33f08:	subs	r1, r1, #128	; 0x80
   33f0c:	sbc	r0, r0, #0
   33f10:	rsbs	r1, r1, #0
   33f14:	rscs	r0, r0, #0
   33f18:	blt	33fe0 <__assert_fail@plt+0x21428>
   33f1c:	b	34004 <__assert_fail@plt+0x2144c>
   33f20:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33f24:	ldr	r1, [r0]
   33f28:	ldr	r0, [r0, #4]
   33f2c:	subs	r1, r1, #1
   33f30:	sbc	r0, r0, #0
   33f34:	rsbs	r1, r1, #127	; 0x7f
   33f38:	rscs	r0, r0, #0
   33f3c:	blt	33fe0 <__assert_fail@plt+0x21428>
   33f40:	b	34004 <__assert_fail@plt+0x2144c>
   33f44:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33f48:	ldr	r2, [r0, #-56]	; 0xffffffc8
   33f4c:	ldr	r3, [r0, #-52]	; 0xffffffcc
   33f50:	ldr	r1, [r0]
   33f54:	ldr	r0, [r0, #4]
   33f58:	mvn	ip, #127	; 0x7f
   33f5c:	mvn	lr, #0
   33f60:	str	r0, [sp, #1340]	; 0x53c
   33f64:	mov	r0, ip
   33f68:	str	r1, [sp, #1336]	; 0x538
   33f6c:	mov	r1, lr
   33f70:	bl	75338 <__assert_fail@plt+0x62780>
   33f74:	ldr	r2, [sp, #1336]	; 0x538
   33f78:	subs	r0, r0, r2
   33f7c:	ldr	r2, [sp, #1340]	; 0x53c
   33f80:	sbcs	r1, r1, r2
   33f84:	blt	33fe0 <__assert_fail@plt+0x21428>
   33f88:	b	34004 <__assert_fail@plt+0x2144c>
   33f8c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33f90:	ldr	r1, [r0, #-56]	; 0xffffffc8
   33f94:	ldr	r2, [r0, #-52]	; 0xffffffcc
   33f98:	ldr	r3, [r0]
   33f9c:	ldr	r0, [r0, #4]
   33fa0:	mov	ip, #127	; 0x7f
   33fa4:	mov	lr, #0
   33fa8:	str	r0, [sp, #1332]	; 0x534
   33fac:	mov	r0, ip
   33fb0:	str	r1, [sp, #1328]	; 0x530
   33fb4:	mov	r1, lr
   33fb8:	str	r2, [sp, #1324]	; 0x52c
   33fbc:	mov	r2, r3
   33fc0:	ldr	r3, [sp, #1332]	; 0x534
   33fc4:	bl	75338 <__assert_fail@plt+0x62780>
   33fc8:	ldr	r2, [sp, #1328]	; 0x530
   33fcc:	subs	r0, r0, r2
   33fd0:	ldr	r2, [sp, #1324]	; 0x52c
   33fd4:	sbcs	r1, r1, r2
   33fd8:	bge	34004 <__assert_fail@plt+0x2144c>
   33fdc:	b	33fe0 <__assert_fail@plt+0x21428>
   33fe0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33fe4:	ldr	r1, [r0, #-56]	; 0xffffffc8
   33fe8:	ldr	r0, [r0]
   33fec:	mul	r0, r1, r0
   33ff0:	sxtb	r0, r0
   33ff4:	asr	r1, r0, #31
   33ff8:	str	r0, [fp, #-1344]	; 0xfffffac0
   33ffc:	str	r1, [fp, #-1340]	; 0xfffffac4
   34000:	b	35e28 <__assert_fail@plt+0x23270>
   34004:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34008:	ldr	r1, [r0, #-56]	; 0xffffffc8
   3400c:	ldr	r0, [r0]
   34010:	mul	r0, r1, r0
   34014:	sxtb	r0, r0
   34018:	asr	r1, r0, #31
   3401c:	str	r0, [fp, #-1344]	; 0xfffffac0
   34020:	str	r1, [fp, #-1340]	; 0xfffffac4
   34024:	b	35e2c <__assert_fail@plt+0x23274>
   34028:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3402c:	ldr	r0, [r0, #4]
   34030:	cmn	r0, #1
   34034:	bgt	341f4 <__assert_fail@plt+0x2163c>
   34038:	b	3403c <__assert_fail@plt+0x21484>
   3403c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34040:	ldr	r0, [r0, #-52]	; 0xffffffcc
   34044:	cmn	r0, #1
   34048:	bgt	34154 <__assert_fail@plt+0x2159c>
   3404c:	b	34050 <__assert_fail@plt+0x21498>
   34050:	b	34054 <__assert_fail@plt+0x2149c>
   34054:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34058:	ldr	r1, [r0, #-56]	; 0xffffffc8
   3405c:	ldr	r2, [r0, #-52]	; 0xffffffcc
   34060:	ldr	r3, [r0]
   34064:	ldr	r0, [r0, #4]
   34068:	mov	ip, #255	; 0xff
   3406c:	mov	lr, #0
   34070:	str	r0, [sp, #1320]	; 0x528
   34074:	mov	r0, ip
   34078:	str	r1, [sp, #1316]	; 0x524
   3407c:	mov	r1, lr
   34080:	str	r2, [sp, #1312]	; 0x520
   34084:	mov	r2, r3
   34088:	ldr	r3, [sp, #1320]	; 0x528
   3408c:	bl	75338 <__assert_fail@plt+0x62780>
   34090:	ldr	r2, [sp, #1316]	; 0x524
   34094:	subs	r0, r2, r0
   34098:	ldr	r2, [sp, #1312]	; 0x520
   3409c:	sbcs	r1, r2, r1
   340a0:	blt	34300 <__assert_fail@plt+0x21748>
   340a4:	b	34324 <__assert_fail@plt+0x2176c>
   340a8:	b	340ac <__assert_fail@plt+0x214f4>
   340ac:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   340b0:	ldr	r1, [r0]
   340b4:	ldr	r0, [r0, #4]
   340b8:	eor	r0, r0, #-2147483648	; 0x80000000
   340bc:	orr	r0, r1, r0
   340c0:	cmp	r0, #0
   340c4:	beq	340e8 <__assert_fail@plt+0x21530>
   340c8:	b	340fc <__assert_fail@plt+0x21544>
   340cc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   340d0:	ldr	r1, [r0]
   340d4:	ldr	r0, [r0, #4]
   340d8:	subs	r1, r1, #1
   340dc:	sbcs	r0, r0, #0
   340e0:	blt	340fc <__assert_fail@plt+0x21544>
   340e4:	b	340e8 <__assert_fail@plt+0x21530>
   340e8:	mov	r0, #0
   340ec:	mov	r1, r0
   340f0:	str	r1, [sp, #1308]	; 0x51c
   340f4:	str	r0, [sp, #1304]	; 0x518
   340f8:	b	34128 <__assert_fail@plt+0x21570>
   340fc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34100:	ldr	r1, [r0]
   34104:	ldr	r0, [r0, #4]
   34108:	rsbs	r2, r1, #0
   3410c:	rsc	r3, r0, #0
   34110:	mov	r0, #255	; 0xff
   34114:	mov	r1, #0
   34118:	bl	75338 <__assert_fail@plt+0x62780>
   3411c:	str	r0, [sp, #1308]	; 0x51c
   34120:	str	r1, [sp, #1304]	; 0x518
   34124:	b	34128 <__assert_fail@plt+0x21570>
   34128:	ldr	r0, [sp, #1304]	; 0x518
   3412c:	ldr	r1, [sp, #1308]	; 0x51c
   34130:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   34134:	ldr	r3, [r2, #-56]	; 0xffffffc8
   34138:	ldr	r2, [r2, #-52]	; 0xffffffcc
   3413c:	mvn	r2, r2
   34140:	mvn	r3, r3
   34144:	subs	r1, r3, r1
   34148:	sbcs	r0, r2, r0
   3414c:	bge	34300 <__assert_fail@plt+0x21748>
   34150:	b	34324 <__assert_fail@plt+0x2176c>
   34154:	b	34158 <__assert_fail@plt+0x215a0>
   34158:	b	341d8 <__assert_fail@plt+0x21620>
   3415c:	b	341d8 <__assert_fail@plt+0x21620>
   34160:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34164:	ldr	r1, [r0]
   34168:	ldr	r0, [r0, #4]
   3416c:	and	r0, r1, r0
   34170:	cmn	r0, #1
   34174:	bne	341d8 <__assert_fail@plt+0x21620>
   34178:	b	3417c <__assert_fail@plt+0x215c4>
   3417c:	b	34180 <__assert_fail@plt+0x215c8>
   34180:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34184:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34188:	ldr	r0, [r0, #-52]	; 0xffffffcc
   3418c:	rsbs	r1, r1, #0
   34190:	rscs	r0, r0, #0
   34194:	blt	34300 <__assert_fail@plt+0x21748>
   34198:	b	34324 <__assert_fail@plt+0x2176c>
   3419c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   341a0:	ldr	r1, [r0, #-56]	; 0xffffffc8
   341a4:	ldr	r0, [r0, #-52]	; 0xffffffcc
   341a8:	subs	r1, r1, #1
   341ac:	sbcs	r0, r0, #0
   341b0:	blt	34324 <__assert_fail@plt+0x2176c>
   341b4:	b	341b8 <__assert_fail@plt+0x21600>
   341b8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   341bc:	ldr	r1, [r0, #-56]	; 0xffffffc8
   341c0:	ldr	r0, [r0, #-52]	; 0xffffffcc
   341c4:	subs	r1, r1, #1
   341c8:	sbc	r0, r0, #0
   341cc:	cmn	r0, #1
   341d0:	bgt	34300 <__assert_fail@plt+0x21748>
   341d4:	b	34324 <__assert_fail@plt+0x2176c>
   341d8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   341dc:	ldr	r1, [r0, #-56]	; 0xffffffc8
   341e0:	ldr	r0, [r0, #-52]	; 0xffffffcc
   341e4:	rsbs	r1, r1, #0
   341e8:	rscs	r0, r0, #0
   341ec:	blt	34300 <__assert_fail@plt+0x21748>
   341f0:	b	34324 <__assert_fail@plt+0x2176c>
   341f4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   341f8:	ldr	r1, [r0]
   341fc:	ldr	r0, [r0, #4]
   34200:	orr	r0, r1, r0
   34204:	cmp	r0, #0
   34208:	bne	34214 <__assert_fail@plt+0x2165c>
   3420c:	b	34210 <__assert_fail@plt+0x21658>
   34210:	b	34324 <__assert_fail@plt+0x2176c>
   34214:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34218:	ldr	r0, [r0, #-52]	; 0xffffffcc
   3421c:	cmn	r0, #1
   34220:	bgt	342ac <__assert_fail@plt+0x216f4>
   34224:	b	34228 <__assert_fail@plt+0x21670>
   34228:	b	3422c <__assert_fail@plt+0x21674>
   3422c:	b	34290 <__assert_fail@plt+0x216d8>
   34230:	b	34290 <__assert_fail@plt+0x216d8>
   34234:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34238:	ldr	r1, [r0, #-56]	; 0xffffffc8
   3423c:	ldr	r0, [r0, #-52]	; 0xffffffcc
   34240:	and	r0, r1, r0
   34244:	cmn	r0, #1
   34248:	bne	34290 <__assert_fail@plt+0x216d8>
   3424c:	b	34250 <__assert_fail@plt+0x21698>
   34250:	b	34254 <__assert_fail@plt+0x2169c>
   34254:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34258:	ldr	r1, [r0]
   3425c:	ldr	r0, [r0, #4]
   34260:	rsbs	r1, r1, #0
   34264:	rscs	r0, r0, #0
   34268:	blt	34300 <__assert_fail@plt+0x21748>
   3426c:	b	34324 <__assert_fail@plt+0x2176c>
   34270:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34274:	ldr	r1, [r0]
   34278:	ldr	r0, [r0, #4]
   3427c:	subs	r1, r1, #1
   34280:	sbc	r0, r0, #0
   34284:	cmn	r0, #1
   34288:	bgt	34300 <__assert_fail@plt+0x21748>
   3428c:	b	34324 <__assert_fail@plt+0x2176c>
   34290:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34294:	ldr	r1, [r0]
   34298:	ldr	r0, [r0, #4]
   3429c:	rsbs	r1, r1, #0
   342a0:	rscs	r0, r0, #0
   342a4:	blt	34300 <__assert_fail@plt+0x21748>
   342a8:	b	34324 <__assert_fail@plt+0x2176c>
   342ac:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   342b0:	ldr	r1, [r0, #-56]	; 0xffffffc8
   342b4:	ldr	r2, [r0, #-52]	; 0xffffffcc
   342b8:	ldr	r3, [r0]
   342bc:	ldr	r0, [r0, #4]
   342c0:	mov	ip, #255	; 0xff
   342c4:	mov	lr, #0
   342c8:	str	r0, [sp, #1300]	; 0x514
   342cc:	mov	r0, ip
   342d0:	str	r1, [sp, #1296]	; 0x510
   342d4:	mov	r1, lr
   342d8:	str	r2, [sp, #1292]	; 0x50c
   342dc:	mov	r2, r3
   342e0:	ldr	r3, [sp, #1300]	; 0x514
   342e4:	bl	75338 <__assert_fail@plt+0x62780>
   342e8:	ldr	r2, [sp, #1296]	; 0x510
   342ec:	subs	r0, r0, r2
   342f0:	ldr	r2, [sp, #1292]	; 0x50c
   342f4:	sbcs	r1, r1, r2
   342f8:	bge	34324 <__assert_fail@plt+0x2176c>
   342fc:	b	34300 <__assert_fail@plt+0x21748>
   34300:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34304:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34308:	ldr	r0, [r0]
   3430c:	mul	r0, r1, r0
   34310:	uxtb	r0, r0
   34314:	mov	r1, #0
   34318:	str	r1, [fp, #-1340]	; 0xfffffac4
   3431c:	str	r0, [fp, #-1344]	; 0xfffffac0
   34320:	b	35e28 <__assert_fail@plt+0x23270>
   34324:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34328:	ldr	r1, [r0, #-56]	; 0xffffffc8
   3432c:	ldr	r0, [r0]
   34330:	mul	r0, r1, r0
   34334:	uxtb	r0, r0
   34338:	mov	r1, #0
   3433c:	str	r1, [fp, #-1340]	; 0xfffffac4
   34340:	str	r0, [fp, #-1344]	; 0xfffffac0
   34344:	b	35e2c <__assert_fail@plt+0x23274>
   34348:	b	34a1c <__assert_fail@plt+0x21e64>
   3434c:	b	34350 <__assert_fail@plt+0x21798>
   34350:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34354:	ldr	r0, [r0, #4]
   34358:	cmn	r0, #1
   3435c:	bgt	34568 <__assert_fail@plt+0x219b0>
   34360:	b	34364 <__assert_fail@plt+0x217ac>
   34364:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34368:	ldr	r0, [r0, #-52]	; 0xffffffcc
   3436c:	cmn	r0, #1
   34370:	bgt	3447c <__assert_fail@plt+0x218c4>
   34374:	b	34378 <__assert_fail@plt+0x217c0>
   34378:	b	3437c <__assert_fail@plt+0x217c4>
   3437c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34380:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34384:	ldr	r2, [r0, #-52]	; 0xffffffcc
   34388:	ldr	r3, [r0]
   3438c:	ldr	r0, [r0, #4]
   34390:	movw	ip, #32767	; 0x7fff
   34394:	mov	lr, #0
   34398:	str	r0, [sp, #1288]	; 0x508
   3439c:	mov	r0, ip
   343a0:	str	r1, [sp, #1284]	; 0x504
   343a4:	mov	r1, lr
   343a8:	str	r2, [sp, #1280]	; 0x500
   343ac:	mov	r2, r3
   343b0:	ldr	r3, [sp, #1288]	; 0x508
   343b4:	bl	75338 <__assert_fail@plt+0x62780>
   343b8:	ldr	r2, [sp, #1284]	; 0x504
   343bc:	subs	r0, r2, r0
   343c0:	ldr	r2, [sp, #1280]	; 0x500
   343c4:	sbcs	r1, r2, r1
   343c8:	blt	346b4 <__assert_fail@plt+0x21afc>
   343cc:	b	346d8 <__assert_fail@plt+0x21b20>
   343d0:	b	343d4 <__assert_fail@plt+0x2181c>
   343d4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   343d8:	ldr	r1, [r0]
   343dc:	ldr	r0, [r0, #4]
   343e0:	eor	r0, r0, #-2147483648	; 0x80000000
   343e4:	orr	r0, r1, r0
   343e8:	cmp	r0, #0
   343ec:	beq	34410 <__assert_fail@plt+0x21858>
   343f0:	b	34424 <__assert_fail@plt+0x2186c>
   343f4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   343f8:	ldr	r1, [r0]
   343fc:	ldr	r0, [r0, #4]
   34400:	subs	r1, r1, #1
   34404:	sbcs	r0, r0, #0
   34408:	blt	34424 <__assert_fail@plt+0x2186c>
   3440c:	b	34410 <__assert_fail@plt+0x21858>
   34410:	mov	r0, #0
   34414:	mov	r1, r0
   34418:	str	r1, [sp, #1276]	; 0x4fc
   3441c:	str	r0, [sp, #1272]	; 0x4f8
   34420:	b	34450 <__assert_fail@plt+0x21898>
   34424:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34428:	ldr	r1, [r0]
   3442c:	ldr	r0, [r0, #4]
   34430:	rsbs	r2, r1, #0
   34434:	rsc	r3, r0, #0
   34438:	movw	r0, #32767	; 0x7fff
   3443c:	mov	r1, #0
   34440:	bl	75338 <__assert_fail@plt+0x62780>
   34444:	str	r0, [sp, #1276]	; 0x4fc
   34448:	str	r1, [sp, #1272]	; 0x4f8
   3444c:	b	34450 <__assert_fail@plt+0x21898>
   34450:	ldr	r0, [sp, #1272]	; 0x4f8
   34454:	ldr	r1, [sp, #1276]	; 0x4fc
   34458:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   3445c:	ldr	r3, [r2, #-56]	; 0xffffffc8
   34460:	ldr	r2, [r2, #-52]	; 0xffffffcc
   34464:	mvn	r2, r2
   34468:	mvn	r3, r3
   3446c:	subs	r1, r3, r1
   34470:	sbcs	r0, r2, r0
   34474:	bge	346b4 <__assert_fail@plt+0x21afc>
   34478:	b	346d8 <__assert_fail@plt+0x21b20>
   3447c:	b	34480 <__assert_fail@plt+0x218c8>
   34480:	b	34510 <__assert_fail@plt+0x21958>
   34484:	b	34510 <__assert_fail@plt+0x21958>
   34488:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3448c:	ldr	r1, [r0]
   34490:	ldr	r0, [r0, #4]
   34494:	and	r0, r1, r0
   34498:	cmn	r0, #1
   3449c:	bne	34510 <__assert_fail@plt+0x21958>
   344a0:	b	344a4 <__assert_fail@plt+0x218ec>
   344a4:	b	344a8 <__assert_fail@plt+0x218f0>
   344a8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   344ac:	ldr	r1, [r0, #-56]	; 0xffffffc8
   344b0:	ldr	r0, [r0, #-52]	; 0xffffffcc
   344b4:	subs	r1, r1, #32768	; 0x8000
   344b8:	sbc	r0, r0, #0
   344bc:	rsbs	r1, r1, #0
   344c0:	rscs	r0, r0, #0
   344c4:	blt	346b4 <__assert_fail@plt+0x21afc>
   344c8:	b	346d8 <__assert_fail@plt+0x21b20>
   344cc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   344d0:	ldr	r1, [r0, #-56]	; 0xffffffc8
   344d4:	ldr	r0, [r0, #-52]	; 0xffffffcc
   344d8:	subs	r1, r1, #1
   344dc:	sbcs	r0, r0, #0
   344e0:	blt	346d8 <__assert_fail@plt+0x21b20>
   344e4:	b	344e8 <__assert_fail@plt+0x21930>
   344e8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   344ec:	ldr	r1, [r0, #-56]	; 0xffffffc8
   344f0:	ldr	r0, [r0, #-52]	; 0xffffffcc
   344f4:	subs	r1, r1, #1
   344f8:	sbc	r0, r0, #0
   344fc:	movw	r2, #32767	; 0x7fff
   34500:	subs	r1, r2, r1
   34504:	rscs	r0, r0, #0
   34508:	blt	346b4 <__assert_fail@plt+0x21afc>
   3450c:	b	346d8 <__assert_fail@plt+0x21b20>
   34510:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34514:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34518:	ldr	r2, [r0, #-52]	; 0xffffffcc
   3451c:	ldr	r3, [r0]
   34520:	ldr	r0, [r0, #4]
   34524:	movw	ip, #32768	; 0x8000
   34528:	movt	ip, #65535	; 0xffff
   3452c:	mvn	lr, #0
   34530:	str	r0, [sp, #1268]	; 0x4f4
   34534:	mov	r0, ip
   34538:	str	r1, [sp, #1264]	; 0x4f0
   3453c:	mov	r1, lr
   34540:	str	r2, [sp, #1260]	; 0x4ec
   34544:	mov	r2, r3
   34548:	ldr	r3, [sp, #1268]	; 0x4f4
   3454c:	bl	75338 <__assert_fail@plt+0x62780>
   34550:	ldr	r2, [sp, #1264]	; 0x4f0
   34554:	subs	r0, r0, r2
   34558:	ldr	r2, [sp, #1260]	; 0x4ec
   3455c:	sbcs	r1, r1, r2
   34560:	blt	346b4 <__assert_fail@plt+0x21afc>
   34564:	b	346d8 <__assert_fail@plt+0x21b20>
   34568:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3456c:	ldr	r1, [r0]
   34570:	ldr	r0, [r0, #4]
   34574:	orr	r0, r1, r0
   34578:	cmp	r0, #0
   3457c:	bne	34588 <__assert_fail@plt+0x219d0>
   34580:	b	34584 <__assert_fail@plt+0x219cc>
   34584:	b	346d8 <__assert_fail@plt+0x21b20>
   34588:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3458c:	ldr	r0, [r0, #-52]	; 0xffffffcc
   34590:	cmn	r0, #1
   34594:	bgt	34660 <__assert_fail@plt+0x21aa8>
   34598:	b	3459c <__assert_fail@plt+0x219e4>
   3459c:	b	345a0 <__assert_fail@plt+0x219e8>
   345a0:	b	34614 <__assert_fail@plt+0x21a5c>
   345a4:	b	34614 <__assert_fail@plt+0x21a5c>
   345a8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   345ac:	ldr	r1, [r0, #-56]	; 0xffffffc8
   345b0:	ldr	r0, [r0, #-52]	; 0xffffffcc
   345b4:	and	r0, r1, r0
   345b8:	cmn	r0, #1
   345bc:	bne	34614 <__assert_fail@plt+0x21a5c>
   345c0:	b	345c4 <__assert_fail@plt+0x21a0c>
   345c4:	b	345c8 <__assert_fail@plt+0x21a10>
   345c8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   345cc:	ldr	r1, [r0]
   345d0:	ldr	r0, [r0, #4]
   345d4:	subs	r1, r1, #32768	; 0x8000
   345d8:	sbc	r0, r0, #0
   345dc:	rsbs	r1, r1, #0
   345e0:	rscs	r0, r0, #0
   345e4:	blt	346b4 <__assert_fail@plt+0x21afc>
   345e8:	b	346d8 <__assert_fail@plt+0x21b20>
   345ec:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   345f0:	ldr	r1, [r0]
   345f4:	ldr	r0, [r0, #4]
   345f8:	subs	r1, r1, #1
   345fc:	sbc	r0, r0, #0
   34600:	movw	r2, #32767	; 0x7fff
   34604:	subs	r1, r2, r1
   34608:	rscs	r0, r0, #0
   3460c:	blt	346b4 <__assert_fail@plt+0x21afc>
   34610:	b	346d8 <__assert_fail@plt+0x21b20>
   34614:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34618:	ldr	r2, [r0, #-56]	; 0xffffffc8
   3461c:	ldr	r3, [r0, #-52]	; 0xffffffcc
   34620:	ldr	r1, [r0]
   34624:	ldr	r0, [r0, #4]
   34628:	movw	ip, #32768	; 0x8000
   3462c:	movt	ip, #65535	; 0xffff
   34630:	mvn	lr, #0
   34634:	str	r0, [sp, #1256]	; 0x4e8
   34638:	mov	r0, ip
   3463c:	str	r1, [sp, #1252]	; 0x4e4
   34640:	mov	r1, lr
   34644:	bl	75338 <__assert_fail@plt+0x62780>
   34648:	ldr	r2, [sp, #1252]	; 0x4e4
   3464c:	subs	r0, r0, r2
   34650:	ldr	r2, [sp, #1256]	; 0x4e8
   34654:	sbcs	r1, r1, r2
   34658:	blt	346b4 <__assert_fail@plt+0x21afc>
   3465c:	b	346d8 <__assert_fail@plt+0x21b20>
   34660:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34664:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34668:	ldr	r2, [r0, #-52]	; 0xffffffcc
   3466c:	ldr	r3, [r0]
   34670:	ldr	r0, [r0, #4]
   34674:	movw	ip, #32767	; 0x7fff
   34678:	mov	lr, #0
   3467c:	str	r0, [sp, #1248]	; 0x4e0
   34680:	mov	r0, ip
   34684:	str	r1, [sp, #1244]	; 0x4dc
   34688:	mov	r1, lr
   3468c:	str	r2, [sp, #1240]	; 0x4d8
   34690:	mov	r2, r3
   34694:	ldr	r3, [sp, #1248]	; 0x4e0
   34698:	bl	75338 <__assert_fail@plt+0x62780>
   3469c:	ldr	r2, [sp, #1244]	; 0x4dc
   346a0:	subs	r0, r0, r2
   346a4:	ldr	r2, [sp, #1240]	; 0x4d8
   346a8:	sbcs	r1, r1, r2
   346ac:	bge	346d8 <__assert_fail@plt+0x21b20>
   346b0:	b	346b4 <__assert_fail@plt+0x21afc>
   346b4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   346b8:	ldr	r1, [r0, #-56]	; 0xffffffc8
   346bc:	ldr	r0, [r0]
   346c0:	mul	r0, r1, r0
   346c4:	sxth	r0, r0
   346c8:	asr	r1, r0, #31
   346cc:	str	r0, [fp, #-1344]	; 0xfffffac0
   346d0:	str	r1, [fp, #-1340]	; 0xfffffac4
   346d4:	b	35e28 <__assert_fail@plt+0x23270>
   346d8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   346dc:	ldr	r1, [r0, #-56]	; 0xffffffc8
   346e0:	ldr	r0, [r0]
   346e4:	mul	r0, r1, r0
   346e8:	sxth	r0, r0
   346ec:	asr	r1, r0, #31
   346f0:	str	r0, [fp, #-1344]	; 0xfffffac0
   346f4:	str	r1, [fp, #-1340]	; 0xfffffac4
   346f8:	b	35e2c <__assert_fail@plt+0x23274>
   346fc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34700:	ldr	r0, [r0, #4]
   34704:	cmn	r0, #1
   34708:	bgt	348c8 <__assert_fail@plt+0x21d10>
   3470c:	b	34710 <__assert_fail@plt+0x21b58>
   34710:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34714:	ldr	r0, [r0, #-52]	; 0xffffffcc
   34718:	cmn	r0, #1
   3471c:	bgt	34828 <__assert_fail@plt+0x21c70>
   34720:	b	34724 <__assert_fail@plt+0x21b6c>
   34724:	b	34728 <__assert_fail@plt+0x21b70>
   34728:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3472c:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34730:	ldr	r2, [r0, #-52]	; 0xffffffcc
   34734:	ldr	r3, [r0]
   34738:	ldr	r0, [r0, #4]
   3473c:	movw	ip, #65535	; 0xffff
   34740:	mov	lr, #0
   34744:	str	r0, [sp, #1236]	; 0x4d4
   34748:	mov	r0, ip
   3474c:	str	r1, [sp, #1232]	; 0x4d0
   34750:	mov	r1, lr
   34754:	str	r2, [sp, #1228]	; 0x4cc
   34758:	mov	r2, r3
   3475c:	ldr	r3, [sp, #1236]	; 0x4d4
   34760:	bl	75338 <__assert_fail@plt+0x62780>
   34764:	ldr	r2, [sp, #1232]	; 0x4d0
   34768:	subs	r0, r2, r0
   3476c:	ldr	r2, [sp, #1228]	; 0x4cc
   34770:	sbcs	r1, r2, r1
   34774:	blt	349d4 <__assert_fail@plt+0x21e1c>
   34778:	b	349f8 <__assert_fail@plt+0x21e40>
   3477c:	b	34780 <__assert_fail@plt+0x21bc8>
   34780:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34784:	ldr	r1, [r0]
   34788:	ldr	r0, [r0, #4]
   3478c:	eor	r0, r0, #-2147483648	; 0x80000000
   34790:	orr	r0, r1, r0
   34794:	cmp	r0, #0
   34798:	beq	347bc <__assert_fail@plt+0x21c04>
   3479c:	b	347d0 <__assert_fail@plt+0x21c18>
   347a0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   347a4:	ldr	r1, [r0]
   347a8:	ldr	r0, [r0, #4]
   347ac:	subs	r1, r1, #1
   347b0:	sbcs	r0, r0, #0
   347b4:	blt	347d0 <__assert_fail@plt+0x21c18>
   347b8:	b	347bc <__assert_fail@plt+0x21c04>
   347bc:	mov	r0, #0
   347c0:	mov	r1, r0
   347c4:	str	r1, [sp, #1224]	; 0x4c8
   347c8:	str	r0, [sp, #1220]	; 0x4c4
   347cc:	b	347fc <__assert_fail@plt+0x21c44>
   347d0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   347d4:	ldr	r1, [r0]
   347d8:	ldr	r0, [r0, #4]
   347dc:	rsbs	r2, r1, #0
   347e0:	rsc	r3, r0, #0
   347e4:	movw	r0, #65535	; 0xffff
   347e8:	mov	r1, #0
   347ec:	bl	75338 <__assert_fail@plt+0x62780>
   347f0:	str	r0, [sp, #1224]	; 0x4c8
   347f4:	str	r1, [sp, #1220]	; 0x4c4
   347f8:	b	347fc <__assert_fail@plt+0x21c44>
   347fc:	ldr	r0, [sp, #1220]	; 0x4c4
   34800:	ldr	r1, [sp, #1224]	; 0x4c8
   34804:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   34808:	ldr	r3, [r2, #-56]	; 0xffffffc8
   3480c:	ldr	r2, [r2, #-52]	; 0xffffffcc
   34810:	mvn	r2, r2
   34814:	mvn	r3, r3
   34818:	subs	r1, r3, r1
   3481c:	sbcs	r0, r2, r0
   34820:	bge	349d4 <__assert_fail@plt+0x21e1c>
   34824:	b	349f8 <__assert_fail@plt+0x21e40>
   34828:	b	3482c <__assert_fail@plt+0x21c74>
   3482c:	b	348ac <__assert_fail@plt+0x21cf4>
   34830:	b	348ac <__assert_fail@plt+0x21cf4>
   34834:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34838:	ldr	r1, [r0]
   3483c:	ldr	r0, [r0, #4]
   34840:	and	r0, r1, r0
   34844:	cmn	r0, #1
   34848:	bne	348ac <__assert_fail@plt+0x21cf4>
   3484c:	b	34850 <__assert_fail@plt+0x21c98>
   34850:	b	34854 <__assert_fail@plt+0x21c9c>
   34854:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34858:	ldr	r1, [r0, #-56]	; 0xffffffc8
   3485c:	ldr	r0, [r0, #-52]	; 0xffffffcc
   34860:	rsbs	r1, r1, #0
   34864:	rscs	r0, r0, #0
   34868:	blt	349d4 <__assert_fail@plt+0x21e1c>
   3486c:	b	349f8 <__assert_fail@plt+0x21e40>
   34870:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34874:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34878:	ldr	r0, [r0, #-52]	; 0xffffffcc
   3487c:	subs	r1, r1, #1
   34880:	sbcs	r0, r0, #0
   34884:	blt	349f8 <__assert_fail@plt+0x21e40>
   34888:	b	3488c <__assert_fail@plt+0x21cd4>
   3488c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34890:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34894:	ldr	r0, [r0, #-52]	; 0xffffffcc
   34898:	subs	r1, r1, #1
   3489c:	sbc	r0, r0, #0
   348a0:	cmn	r0, #1
   348a4:	bgt	349d4 <__assert_fail@plt+0x21e1c>
   348a8:	b	349f8 <__assert_fail@plt+0x21e40>
   348ac:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   348b0:	ldr	r1, [r0, #-56]	; 0xffffffc8
   348b4:	ldr	r0, [r0, #-52]	; 0xffffffcc
   348b8:	rsbs	r1, r1, #0
   348bc:	rscs	r0, r0, #0
   348c0:	blt	349d4 <__assert_fail@plt+0x21e1c>
   348c4:	b	349f8 <__assert_fail@plt+0x21e40>
   348c8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   348cc:	ldr	r1, [r0]
   348d0:	ldr	r0, [r0, #4]
   348d4:	orr	r0, r1, r0
   348d8:	cmp	r0, #0
   348dc:	bne	348e8 <__assert_fail@plt+0x21d30>
   348e0:	b	348e4 <__assert_fail@plt+0x21d2c>
   348e4:	b	349f8 <__assert_fail@plt+0x21e40>
   348e8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   348ec:	ldr	r0, [r0, #-52]	; 0xffffffcc
   348f0:	cmn	r0, #1
   348f4:	bgt	34980 <__assert_fail@plt+0x21dc8>
   348f8:	b	348fc <__assert_fail@plt+0x21d44>
   348fc:	b	34900 <__assert_fail@plt+0x21d48>
   34900:	b	34964 <__assert_fail@plt+0x21dac>
   34904:	b	34964 <__assert_fail@plt+0x21dac>
   34908:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3490c:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34910:	ldr	r0, [r0, #-52]	; 0xffffffcc
   34914:	and	r0, r1, r0
   34918:	cmn	r0, #1
   3491c:	bne	34964 <__assert_fail@plt+0x21dac>
   34920:	b	34924 <__assert_fail@plt+0x21d6c>
   34924:	b	34928 <__assert_fail@plt+0x21d70>
   34928:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3492c:	ldr	r1, [r0]
   34930:	ldr	r0, [r0, #4]
   34934:	rsbs	r1, r1, #0
   34938:	rscs	r0, r0, #0
   3493c:	blt	349d4 <__assert_fail@plt+0x21e1c>
   34940:	b	349f8 <__assert_fail@plt+0x21e40>
   34944:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34948:	ldr	r1, [r0]
   3494c:	ldr	r0, [r0, #4]
   34950:	subs	r1, r1, #1
   34954:	sbc	r0, r0, #0
   34958:	cmn	r0, #1
   3495c:	bgt	349d4 <__assert_fail@plt+0x21e1c>
   34960:	b	349f8 <__assert_fail@plt+0x21e40>
   34964:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34968:	ldr	r1, [r0]
   3496c:	ldr	r0, [r0, #4]
   34970:	rsbs	r1, r1, #0
   34974:	rscs	r0, r0, #0
   34978:	blt	349d4 <__assert_fail@plt+0x21e1c>
   3497c:	b	349f8 <__assert_fail@plt+0x21e40>
   34980:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34984:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34988:	ldr	r2, [r0, #-52]	; 0xffffffcc
   3498c:	ldr	r3, [r0]
   34990:	ldr	r0, [r0, #4]
   34994:	movw	ip, #65535	; 0xffff
   34998:	mov	lr, #0
   3499c:	str	r0, [sp, #1216]	; 0x4c0
   349a0:	mov	r0, ip
   349a4:	str	r1, [sp, #1212]	; 0x4bc
   349a8:	mov	r1, lr
   349ac:	str	r2, [sp, #1208]	; 0x4b8
   349b0:	mov	r2, r3
   349b4:	ldr	r3, [sp, #1216]	; 0x4c0
   349b8:	bl	75338 <__assert_fail@plt+0x62780>
   349bc:	ldr	r2, [sp, #1212]	; 0x4bc
   349c0:	subs	r0, r0, r2
   349c4:	ldr	r2, [sp, #1208]	; 0x4b8
   349c8:	sbcs	r1, r1, r2
   349cc:	bge	349f8 <__assert_fail@plt+0x21e40>
   349d0:	b	349d4 <__assert_fail@plt+0x21e1c>
   349d4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   349d8:	ldr	r1, [r0, #-56]	; 0xffffffc8
   349dc:	ldr	r0, [r0]
   349e0:	mul	r0, r1, r0
   349e4:	uxth	r0, r0
   349e8:	mov	r1, #0
   349ec:	str	r1, [fp, #-1340]	; 0xfffffac4
   349f0:	str	r0, [fp, #-1344]	; 0xfffffac0
   349f4:	b	35e28 <__assert_fail@plt+0x23270>
   349f8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   349fc:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34a00:	ldr	r0, [r0]
   34a04:	mul	r0, r1, r0
   34a08:	uxth	r0, r0
   34a0c:	mov	r1, #0
   34a10:	str	r1, [fp, #-1340]	; 0xfffffac4
   34a14:	str	r0, [fp, #-1344]	; 0xfffffac0
   34a18:	b	35e2c <__assert_fail@plt+0x23274>
   34a1c:	b	350d8 <__assert_fail@plt+0x22520>
   34a20:	b	34a24 <__assert_fail@plt+0x21e6c>
   34a24:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34a28:	ldr	r0, [r0, #4]
   34a2c:	cmn	r0, #1
   34a30:	bgt	34c38 <__assert_fail@plt+0x22080>
   34a34:	b	34a38 <__assert_fail@plt+0x21e80>
   34a38:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34a3c:	ldr	r0, [r0, #-52]	; 0xffffffcc
   34a40:	cmn	r0, #1
   34a44:	bgt	34b50 <__assert_fail@plt+0x21f98>
   34a48:	b	34a4c <__assert_fail@plt+0x21e94>
   34a4c:	b	34a50 <__assert_fail@plt+0x21e98>
   34a50:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34a54:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34a58:	ldr	r2, [r0, #-52]	; 0xffffffcc
   34a5c:	ldr	r3, [r0]
   34a60:	ldr	r0, [r0, #4]
   34a64:	mvn	ip, #-2147483648	; 0x80000000
   34a68:	mov	lr, #0
   34a6c:	str	r0, [sp, #1204]	; 0x4b4
   34a70:	mov	r0, ip
   34a74:	str	r1, [sp, #1200]	; 0x4b0
   34a78:	mov	r1, lr
   34a7c:	str	r2, [sp, #1196]	; 0x4ac
   34a80:	mov	r2, r3
   34a84:	ldr	r3, [sp, #1204]	; 0x4b4
   34a88:	bl	75338 <__assert_fail@plt+0x62780>
   34a8c:	ldr	r2, [sp, #1200]	; 0x4b0
   34a90:	subs	r0, r2, r0
   34a94:	ldr	r2, [sp, #1196]	; 0x4ac
   34a98:	sbcs	r1, r2, r1
   34a9c:	blt	34d80 <__assert_fail@plt+0x221c8>
   34aa0:	b	34da0 <__assert_fail@plt+0x221e8>
   34aa4:	b	34aa8 <__assert_fail@plt+0x21ef0>
   34aa8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34aac:	ldr	r1, [r0]
   34ab0:	ldr	r0, [r0, #4]
   34ab4:	eor	r0, r0, #-2147483648	; 0x80000000
   34ab8:	orr	r0, r1, r0
   34abc:	cmp	r0, #0
   34ac0:	beq	34ae4 <__assert_fail@plt+0x21f2c>
   34ac4:	b	34af8 <__assert_fail@plt+0x21f40>
   34ac8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34acc:	ldr	r1, [r0]
   34ad0:	ldr	r0, [r0, #4]
   34ad4:	subs	r1, r1, #1
   34ad8:	sbcs	r0, r0, #0
   34adc:	blt	34af8 <__assert_fail@plt+0x21f40>
   34ae0:	b	34ae4 <__assert_fail@plt+0x21f2c>
   34ae4:	mov	r0, #0
   34ae8:	mov	r1, r0
   34aec:	str	r1, [sp, #1192]	; 0x4a8
   34af0:	str	r0, [sp, #1188]	; 0x4a4
   34af4:	b	34b24 <__assert_fail@plt+0x21f6c>
   34af8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34afc:	ldr	r1, [r0]
   34b00:	ldr	r0, [r0, #4]
   34b04:	rsbs	r2, r1, #0
   34b08:	rsc	r3, r0, #0
   34b0c:	mvn	r0, #-2147483648	; 0x80000000
   34b10:	mov	r1, #0
   34b14:	bl	75338 <__assert_fail@plt+0x62780>
   34b18:	str	r0, [sp, #1192]	; 0x4a8
   34b1c:	str	r1, [sp, #1188]	; 0x4a4
   34b20:	b	34b24 <__assert_fail@plt+0x21f6c>
   34b24:	ldr	r0, [sp, #1188]	; 0x4a4
   34b28:	ldr	r1, [sp, #1192]	; 0x4a8
   34b2c:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   34b30:	ldr	r3, [r2, #-56]	; 0xffffffc8
   34b34:	ldr	r2, [r2, #-52]	; 0xffffffcc
   34b38:	mvn	r2, r2
   34b3c:	mvn	r3, r3
   34b40:	subs	r1, r3, r1
   34b44:	sbcs	r0, r2, r0
   34b48:	bge	34d80 <__assert_fail@plt+0x221c8>
   34b4c:	b	34da0 <__assert_fail@plt+0x221e8>
   34b50:	b	34b54 <__assert_fail@plt+0x21f9c>
   34b54:	b	34be4 <__assert_fail@plt+0x2202c>
   34b58:	b	34be4 <__assert_fail@plt+0x2202c>
   34b5c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34b60:	ldr	r1, [r0]
   34b64:	ldr	r0, [r0, #4]
   34b68:	and	r0, r1, r0
   34b6c:	cmn	r0, #1
   34b70:	bne	34be4 <__assert_fail@plt+0x2202c>
   34b74:	b	34b78 <__assert_fail@plt+0x21fc0>
   34b78:	b	34b7c <__assert_fail@plt+0x21fc4>
   34b7c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34b80:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34b84:	ldr	r0, [r0, #-52]	; 0xffffffcc
   34b88:	adds	r1, r1, #-2147483648	; 0x80000000
   34b8c:	sbc	r0, r0, #0
   34b90:	rsbs	r1, r1, #0
   34b94:	rscs	r0, r0, #0
   34b98:	blt	34d80 <__assert_fail@plt+0x221c8>
   34b9c:	b	34da0 <__assert_fail@plt+0x221e8>
   34ba0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34ba4:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34ba8:	ldr	r0, [r0, #-52]	; 0xffffffcc
   34bac:	subs	r1, r1, #1
   34bb0:	sbcs	r0, r0, #0
   34bb4:	blt	34da0 <__assert_fail@plt+0x221e8>
   34bb8:	b	34bbc <__assert_fail@plt+0x22004>
   34bbc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34bc0:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34bc4:	ldr	r0, [r0, #-52]	; 0xffffffcc
   34bc8:	subs	r1, r1, #1
   34bcc:	sbc	r0, r0, #0
   34bd0:	mvn	r2, #-2147483648	; 0x80000000
   34bd4:	subs	r1, r2, r1
   34bd8:	rscs	r0, r0, #0
   34bdc:	blt	34d80 <__assert_fail@plt+0x221c8>
   34be0:	b	34da0 <__assert_fail@plt+0x221e8>
   34be4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34be8:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34bec:	ldr	r2, [r0, #-52]	; 0xffffffcc
   34bf0:	ldr	r3, [r0]
   34bf4:	ldr	r0, [r0, #4]
   34bf8:	mov	ip, #-2147483648	; 0x80000000
   34bfc:	mvn	lr, #0
   34c00:	str	r0, [sp, #1184]	; 0x4a0
   34c04:	mov	r0, ip
   34c08:	str	r1, [sp, #1180]	; 0x49c
   34c0c:	mov	r1, lr
   34c10:	str	r2, [sp, #1176]	; 0x498
   34c14:	mov	r2, r3
   34c18:	ldr	r3, [sp, #1184]	; 0x4a0
   34c1c:	bl	75338 <__assert_fail@plt+0x62780>
   34c20:	ldr	r2, [sp, #1180]	; 0x49c
   34c24:	subs	r0, r0, r2
   34c28:	ldr	r2, [sp, #1176]	; 0x498
   34c2c:	sbcs	r1, r1, r2
   34c30:	blt	34d80 <__assert_fail@plt+0x221c8>
   34c34:	b	34da0 <__assert_fail@plt+0x221e8>
   34c38:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34c3c:	ldr	r1, [r0]
   34c40:	ldr	r0, [r0, #4]
   34c44:	orr	r0, r1, r0
   34c48:	cmp	r0, #0
   34c4c:	bne	34c58 <__assert_fail@plt+0x220a0>
   34c50:	b	34c54 <__assert_fail@plt+0x2209c>
   34c54:	b	34da0 <__assert_fail@plt+0x221e8>
   34c58:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34c5c:	ldr	r0, [r0, #-52]	; 0xffffffcc
   34c60:	cmn	r0, #1
   34c64:	bgt	34d2c <__assert_fail@plt+0x22174>
   34c68:	b	34c6c <__assert_fail@plt+0x220b4>
   34c6c:	b	34c70 <__assert_fail@plt+0x220b8>
   34c70:	b	34ce4 <__assert_fail@plt+0x2212c>
   34c74:	b	34ce4 <__assert_fail@plt+0x2212c>
   34c78:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34c7c:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34c80:	ldr	r0, [r0, #-52]	; 0xffffffcc
   34c84:	and	r0, r1, r0
   34c88:	cmn	r0, #1
   34c8c:	bne	34ce4 <__assert_fail@plt+0x2212c>
   34c90:	b	34c94 <__assert_fail@plt+0x220dc>
   34c94:	b	34c98 <__assert_fail@plt+0x220e0>
   34c98:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34c9c:	ldr	r1, [r0]
   34ca0:	ldr	r0, [r0, #4]
   34ca4:	adds	r1, r1, #-2147483648	; 0x80000000
   34ca8:	sbc	r0, r0, #0
   34cac:	rsbs	r1, r1, #0
   34cb0:	rscs	r0, r0, #0
   34cb4:	blt	34d80 <__assert_fail@plt+0x221c8>
   34cb8:	b	34da0 <__assert_fail@plt+0x221e8>
   34cbc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34cc0:	ldr	r1, [r0]
   34cc4:	ldr	r0, [r0, #4]
   34cc8:	subs	r1, r1, #1
   34ccc:	sbc	r0, r0, #0
   34cd0:	mvn	r2, #-2147483648	; 0x80000000
   34cd4:	subs	r1, r2, r1
   34cd8:	rscs	r0, r0, #0
   34cdc:	blt	34d80 <__assert_fail@plt+0x221c8>
   34ce0:	b	34da0 <__assert_fail@plt+0x221e8>
   34ce4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34ce8:	ldr	r2, [r0, #-56]	; 0xffffffc8
   34cec:	ldr	r3, [r0, #-52]	; 0xffffffcc
   34cf0:	ldr	r1, [r0]
   34cf4:	ldr	r0, [r0, #4]
   34cf8:	mov	ip, #-2147483648	; 0x80000000
   34cfc:	mvn	lr, #0
   34d00:	str	r0, [sp, #1172]	; 0x494
   34d04:	mov	r0, ip
   34d08:	str	r1, [sp, #1168]	; 0x490
   34d0c:	mov	r1, lr
   34d10:	bl	75338 <__assert_fail@plt+0x62780>
   34d14:	ldr	r2, [sp, #1168]	; 0x490
   34d18:	subs	r0, r0, r2
   34d1c:	ldr	r2, [sp, #1172]	; 0x494
   34d20:	sbcs	r1, r1, r2
   34d24:	blt	34d80 <__assert_fail@plt+0x221c8>
   34d28:	b	34da0 <__assert_fail@plt+0x221e8>
   34d2c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34d30:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34d34:	ldr	r2, [r0, #-52]	; 0xffffffcc
   34d38:	ldr	r3, [r0]
   34d3c:	ldr	r0, [r0, #4]
   34d40:	mvn	ip, #-2147483648	; 0x80000000
   34d44:	mov	lr, #0
   34d48:	str	r0, [sp, #1164]	; 0x48c
   34d4c:	mov	r0, ip
   34d50:	str	r1, [sp, #1160]	; 0x488
   34d54:	mov	r1, lr
   34d58:	str	r2, [sp, #1156]	; 0x484
   34d5c:	mov	r2, r3
   34d60:	ldr	r3, [sp, #1164]	; 0x48c
   34d64:	bl	75338 <__assert_fail@plt+0x62780>
   34d68:	ldr	r2, [sp, #1160]	; 0x488
   34d6c:	subs	r0, r0, r2
   34d70:	ldr	r2, [sp, #1156]	; 0x484
   34d74:	sbcs	r1, r1, r2
   34d78:	bge	34da0 <__assert_fail@plt+0x221e8>
   34d7c:	b	34d80 <__assert_fail@plt+0x221c8>
   34d80:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34d84:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34d88:	ldr	r0, [r0]
   34d8c:	mul	r0, r1, r0
   34d90:	asr	r1, r0, #31
   34d94:	str	r0, [fp, #-1344]	; 0xfffffac0
   34d98:	str	r1, [fp, #-1340]	; 0xfffffac4
   34d9c:	b	35e28 <__assert_fail@plt+0x23270>
   34da0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34da4:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34da8:	ldr	r0, [r0]
   34dac:	mul	r0, r1, r0
   34db0:	asr	r1, r0, #31
   34db4:	str	r0, [fp, #-1344]	; 0xfffffac0
   34db8:	str	r1, [fp, #-1340]	; 0xfffffac4
   34dbc:	b	35e2c <__assert_fail@plt+0x23274>
   34dc0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34dc4:	ldr	r0, [r0, #4]
   34dc8:	cmn	r0, #1
   34dcc:	bgt	34f8c <__assert_fail@plt+0x223d4>
   34dd0:	b	34dd4 <__assert_fail@plt+0x2221c>
   34dd4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34dd8:	ldr	r0, [r0, #-52]	; 0xffffffcc
   34ddc:	cmn	r0, #1
   34de0:	bgt	34eec <__assert_fail@plt+0x22334>
   34de4:	b	34de8 <__assert_fail@plt+0x22230>
   34de8:	b	34dec <__assert_fail@plt+0x22234>
   34dec:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34df0:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34df4:	ldr	r2, [r0, #-52]	; 0xffffffcc
   34df8:	ldr	r3, [r0]
   34dfc:	ldr	r0, [r0, #4]
   34e00:	mvn	ip, #0
   34e04:	mov	lr, #0
   34e08:	str	r0, [sp, #1152]	; 0x480
   34e0c:	mov	r0, ip
   34e10:	str	r1, [sp, #1148]	; 0x47c
   34e14:	mov	r1, lr
   34e18:	str	r2, [sp, #1144]	; 0x478
   34e1c:	mov	r2, r3
   34e20:	ldr	r3, [sp, #1152]	; 0x480
   34e24:	bl	75338 <__assert_fail@plt+0x62780>
   34e28:	ldr	r2, [sp, #1148]	; 0x47c
   34e2c:	subs	r0, r2, r0
   34e30:	ldr	r2, [sp, #1144]	; 0x478
   34e34:	sbcs	r1, r2, r1
   34e38:	blt	35098 <__assert_fail@plt+0x224e0>
   34e3c:	b	350b8 <__assert_fail@plt+0x22500>
   34e40:	b	34e44 <__assert_fail@plt+0x2228c>
   34e44:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34e48:	ldr	r1, [r0]
   34e4c:	ldr	r0, [r0, #4]
   34e50:	eor	r0, r0, #-2147483648	; 0x80000000
   34e54:	orr	r0, r1, r0
   34e58:	cmp	r0, #0
   34e5c:	beq	34e80 <__assert_fail@plt+0x222c8>
   34e60:	b	34e94 <__assert_fail@plt+0x222dc>
   34e64:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34e68:	ldr	r1, [r0]
   34e6c:	ldr	r0, [r0, #4]
   34e70:	subs	r1, r1, #1
   34e74:	sbcs	r0, r0, #0
   34e78:	blt	34e94 <__assert_fail@plt+0x222dc>
   34e7c:	b	34e80 <__assert_fail@plt+0x222c8>
   34e80:	mov	r0, #0
   34e84:	mov	r1, r0
   34e88:	str	r1, [sp, #1140]	; 0x474
   34e8c:	str	r0, [sp, #1136]	; 0x470
   34e90:	b	34ec0 <__assert_fail@plt+0x22308>
   34e94:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34e98:	ldr	r1, [r0]
   34e9c:	ldr	r0, [r0, #4]
   34ea0:	rsbs	r2, r1, #0
   34ea4:	rsc	r3, r0, #0
   34ea8:	mvn	r0, #0
   34eac:	mov	r1, #0
   34eb0:	bl	75338 <__assert_fail@plt+0x62780>
   34eb4:	str	r0, [sp, #1140]	; 0x474
   34eb8:	str	r1, [sp, #1136]	; 0x470
   34ebc:	b	34ec0 <__assert_fail@plt+0x22308>
   34ec0:	ldr	r0, [sp, #1136]	; 0x470
   34ec4:	ldr	r1, [sp, #1140]	; 0x474
   34ec8:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   34ecc:	ldr	r3, [r2, #-56]	; 0xffffffc8
   34ed0:	ldr	r2, [r2, #-52]	; 0xffffffcc
   34ed4:	mvn	r2, r2
   34ed8:	mvn	r3, r3
   34edc:	subs	r1, r3, r1
   34ee0:	sbcs	r0, r2, r0
   34ee4:	bge	35098 <__assert_fail@plt+0x224e0>
   34ee8:	b	350b8 <__assert_fail@plt+0x22500>
   34eec:	b	34ef0 <__assert_fail@plt+0x22338>
   34ef0:	b	34f70 <__assert_fail@plt+0x223b8>
   34ef4:	b	34f70 <__assert_fail@plt+0x223b8>
   34ef8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34efc:	ldr	r1, [r0]
   34f00:	ldr	r0, [r0, #4]
   34f04:	and	r0, r1, r0
   34f08:	cmn	r0, #1
   34f0c:	bne	34f70 <__assert_fail@plt+0x223b8>
   34f10:	b	34f14 <__assert_fail@plt+0x2235c>
   34f14:	b	34f18 <__assert_fail@plt+0x22360>
   34f18:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34f1c:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34f20:	ldr	r0, [r0, #-52]	; 0xffffffcc
   34f24:	rsbs	r1, r1, #0
   34f28:	rscs	r0, r0, #0
   34f2c:	blt	35098 <__assert_fail@plt+0x224e0>
   34f30:	b	350b8 <__assert_fail@plt+0x22500>
   34f34:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34f38:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34f3c:	ldr	r0, [r0, #-52]	; 0xffffffcc
   34f40:	subs	r1, r1, #1
   34f44:	sbcs	r0, r0, #0
   34f48:	blt	350b8 <__assert_fail@plt+0x22500>
   34f4c:	b	34f50 <__assert_fail@plt+0x22398>
   34f50:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34f54:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34f58:	ldr	r0, [r0, #-52]	; 0xffffffcc
   34f5c:	subs	r1, r1, #1
   34f60:	sbc	r0, r0, #0
   34f64:	cmn	r0, #1
   34f68:	bgt	35098 <__assert_fail@plt+0x224e0>
   34f6c:	b	350b8 <__assert_fail@plt+0x22500>
   34f70:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34f74:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34f78:	ldr	r0, [r0, #-52]	; 0xffffffcc
   34f7c:	rsbs	r1, r1, #0
   34f80:	rscs	r0, r0, #0
   34f84:	blt	35098 <__assert_fail@plt+0x224e0>
   34f88:	b	350b8 <__assert_fail@plt+0x22500>
   34f8c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34f90:	ldr	r1, [r0]
   34f94:	ldr	r0, [r0, #4]
   34f98:	orr	r0, r1, r0
   34f9c:	cmp	r0, #0
   34fa0:	bne	34fac <__assert_fail@plt+0x223f4>
   34fa4:	b	34fa8 <__assert_fail@plt+0x223f0>
   34fa8:	b	350b8 <__assert_fail@plt+0x22500>
   34fac:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34fb0:	ldr	r0, [r0, #-52]	; 0xffffffcc
   34fb4:	cmn	r0, #1
   34fb8:	bgt	35044 <__assert_fail@plt+0x2248c>
   34fbc:	b	34fc0 <__assert_fail@plt+0x22408>
   34fc0:	b	34fc4 <__assert_fail@plt+0x2240c>
   34fc4:	b	35028 <__assert_fail@plt+0x22470>
   34fc8:	b	35028 <__assert_fail@plt+0x22470>
   34fcc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34fd0:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34fd4:	ldr	r0, [r0, #-52]	; 0xffffffcc
   34fd8:	and	r0, r1, r0
   34fdc:	cmn	r0, #1
   34fe0:	bne	35028 <__assert_fail@plt+0x22470>
   34fe4:	b	34fe8 <__assert_fail@plt+0x22430>
   34fe8:	b	34fec <__assert_fail@plt+0x22434>
   34fec:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34ff0:	ldr	r1, [r0]
   34ff4:	ldr	r0, [r0, #4]
   34ff8:	rsbs	r1, r1, #0
   34ffc:	rscs	r0, r0, #0
   35000:	blt	35098 <__assert_fail@plt+0x224e0>
   35004:	b	350b8 <__assert_fail@plt+0x22500>
   35008:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3500c:	ldr	r1, [r0]
   35010:	ldr	r0, [r0, #4]
   35014:	subs	r1, r1, #1
   35018:	sbc	r0, r0, #0
   3501c:	cmn	r0, #1
   35020:	bgt	35098 <__assert_fail@plt+0x224e0>
   35024:	b	350b8 <__assert_fail@plt+0x22500>
   35028:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3502c:	ldr	r1, [r0]
   35030:	ldr	r0, [r0, #4]
   35034:	rsbs	r1, r1, #0
   35038:	rscs	r0, r0, #0
   3503c:	blt	35098 <__assert_fail@plt+0x224e0>
   35040:	b	350b8 <__assert_fail@plt+0x22500>
   35044:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35048:	ldr	r1, [r0, #-56]	; 0xffffffc8
   3504c:	ldr	r2, [r0, #-52]	; 0xffffffcc
   35050:	ldr	r3, [r0]
   35054:	ldr	r0, [r0, #4]
   35058:	mvn	ip, #0
   3505c:	mov	lr, #0
   35060:	str	r0, [sp, #1132]	; 0x46c
   35064:	mov	r0, ip
   35068:	str	r1, [sp, #1128]	; 0x468
   3506c:	mov	r1, lr
   35070:	str	r2, [sp, #1124]	; 0x464
   35074:	mov	r2, r3
   35078:	ldr	r3, [sp, #1132]	; 0x46c
   3507c:	bl	75338 <__assert_fail@plt+0x62780>
   35080:	ldr	r2, [sp, #1128]	; 0x468
   35084:	subs	r0, r0, r2
   35088:	ldr	r2, [sp, #1124]	; 0x464
   3508c:	sbcs	r1, r1, r2
   35090:	bge	350b8 <__assert_fail@plt+0x22500>
   35094:	b	35098 <__assert_fail@plt+0x224e0>
   35098:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3509c:	ldr	r1, [r0, #-56]	; 0xffffffc8
   350a0:	ldr	r0, [r0]
   350a4:	mul	r0, r1, r0
   350a8:	mov	r1, #0
   350ac:	str	r1, [fp, #-1340]	; 0xfffffac4
   350b0:	str	r0, [fp, #-1344]	; 0xfffffac0
   350b4:	b	35e28 <__assert_fail@plt+0x23270>
   350b8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   350bc:	ldr	r1, [r0, #-56]	; 0xffffffc8
   350c0:	ldr	r0, [r0]
   350c4:	mul	r0, r1, r0
   350c8:	mov	r1, #0
   350cc:	str	r1, [fp, #-1340]	; 0xfffffac4
   350d0:	str	r0, [fp, #-1344]	; 0xfffffac0
   350d4:	b	35e2c <__assert_fail@plt+0x23274>
   350d8:	b	35794 <__assert_fail@plt+0x22bdc>
   350dc:	b	350e0 <__assert_fail@plt+0x22528>
   350e0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   350e4:	ldr	r0, [r0, #4]
   350e8:	cmn	r0, #1
   350ec:	bgt	352f4 <__assert_fail@plt+0x2273c>
   350f0:	b	350f4 <__assert_fail@plt+0x2253c>
   350f4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   350f8:	ldr	r0, [r0, #-52]	; 0xffffffcc
   350fc:	cmn	r0, #1
   35100:	bgt	3520c <__assert_fail@plt+0x22654>
   35104:	b	35108 <__assert_fail@plt+0x22550>
   35108:	b	3510c <__assert_fail@plt+0x22554>
   3510c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35110:	ldr	r1, [r0, #-56]	; 0xffffffc8
   35114:	ldr	r2, [r0, #-52]	; 0xffffffcc
   35118:	ldr	r3, [r0]
   3511c:	ldr	r0, [r0, #4]
   35120:	mvn	ip, #-2147483648	; 0x80000000
   35124:	mov	lr, #0
   35128:	str	r0, [sp, #1120]	; 0x460
   3512c:	mov	r0, ip
   35130:	str	r1, [sp, #1116]	; 0x45c
   35134:	mov	r1, lr
   35138:	str	r2, [sp, #1112]	; 0x458
   3513c:	mov	r2, r3
   35140:	ldr	r3, [sp, #1120]	; 0x460
   35144:	bl	75338 <__assert_fail@plt+0x62780>
   35148:	ldr	r2, [sp, #1116]	; 0x45c
   3514c:	subs	r0, r2, r0
   35150:	ldr	r2, [sp, #1112]	; 0x458
   35154:	sbcs	r1, r2, r1
   35158:	blt	3543c <__assert_fail@plt+0x22884>
   3515c:	b	3545c <__assert_fail@plt+0x228a4>
   35160:	b	35164 <__assert_fail@plt+0x225ac>
   35164:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35168:	ldr	r1, [r0]
   3516c:	ldr	r0, [r0, #4]
   35170:	eor	r0, r0, #-2147483648	; 0x80000000
   35174:	orr	r0, r1, r0
   35178:	cmp	r0, #0
   3517c:	beq	351a0 <__assert_fail@plt+0x225e8>
   35180:	b	351b4 <__assert_fail@plt+0x225fc>
   35184:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35188:	ldr	r1, [r0]
   3518c:	ldr	r0, [r0, #4]
   35190:	subs	r1, r1, #1
   35194:	sbcs	r0, r0, #0
   35198:	blt	351b4 <__assert_fail@plt+0x225fc>
   3519c:	b	351a0 <__assert_fail@plt+0x225e8>
   351a0:	mov	r0, #0
   351a4:	mov	r1, r0
   351a8:	str	r1, [sp, #1108]	; 0x454
   351ac:	str	r0, [sp, #1104]	; 0x450
   351b0:	b	351e0 <__assert_fail@plt+0x22628>
   351b4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   351b8:	ldr	r1, [r0]
   351bc:	ldr	r0, [r0, #4]
   351c0:	rsbs	r2, r1, #0
   351c4:	rsc	r3, r0, #0
   351c8:	mvn	r0, #-2147483648	; 0x80000000
   351cc:	mov	r1, #0
   351d0:	bl	75338 <__assert_fail@plt+0x62780>
   351d4:	str	r0, [sp, #1108]	; 0x454
   351d8:	str	r1, [sp, #1104]	; 0x450
   351dc:	b	351e0 <__assert_fail@plt+0x22628>
   351e0:	ldr	r0, [sp, #1104]	; 0x450
   351e4:	ldr	r1, [sp, #1108]	; 0x454
   351e8:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   351ec:	ldr	r3, [r2, #-56]	; 0xffffffc8
   351f0:	ldr	r2, [r2, #-52]	; 0xffffffcc
   351f4:	mvn	r2, r2
   351f8:	mvn	r3, r3
   351fc:	subs	r1, r3, r1
   35200:	sbcs	r0, r2, r0
   35204:	bge	3543c <__assert_fail@plt+0x22884>
   35208:	b	3545c <__assert_fail@plt+0x228a4>
   3520c:	b	35210 <__assert_fail@plt+0x22658>
   35210:	b	352a0 <__assert_fail@plt+0x226e8>
   35214:	b	352a0 <__assert_fail@plt+0x226e8>
   35218:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3521c:	ldr	r1, [r0]
   35220:	ldr	r0, [r0, #4]
   35224:	and	r0, r1, r0
   35228:	cmn	r0, #1
   3522c:	bne	352a0 <__assert_fail@plt+0x226e8>
   35230:	b	35234 <__assert_fail@plt+0x2267c>
   35234:	b	35238 <__assert_fail@plt+0x22680>
   35238:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3523c:	ldr	r1, [r0, #-56]	; 0xffffffc8
   35240:	ldr	r0, [r0, #-52]	; 0xffffffcc
   35244:	adds	r1, r1, #-2147483648	; 0x80000000
   35248:	sbc	r0, r0, #0
   3524c:	rsbs	r1, r1, #0
   35250:	rscs	r0, r0, #0
   35254:	blt	3543c <__assert_fail@plt+0x22884>
   35258:	b	3545c <__assert_fail@plt+0x228a4>
   3525c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35260:	ldr	r1, [r0, #-56]	; 0xffffffc8
   35264:	ldr	r0, [r0, #-52]	; 0xffffffcc
   35268:	subs	r1, r1, #1
   3526c:	sbcs	r0, r0, #0
   35270:	blt	3545c <__assert_fail@plt+0x228a4>
   35274:	b	35278 <__assert_fail@plt+0x226c0>
   35278:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3527c:	ldr	r1, [r0, #-56]	; 0xffffffc8
   35280:	ldr	r0, [r0, #-52]	; 0xffffffcc
   35284:	subs	r1, r1, #1
   35288:	sbc	r0, r0, #0
   3528c:	mvn	r2, #-2147483648	; 0x80000000
   35290:	subs	r1, r2, r1
   35294:	rscs	r0, r0, #0
   35298:	blt	3543c <__assert_fail@plt+0x22884>
   3529c:	b	3545c <__assert_fail@plt+0x228a4>
   352a0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   352a4:	ldr	r1, [r0, #-56]	; 0xffffffc8
   352a8:	ldr	r2, [r0, #-52]	; 0xffffffcc
   352ac:	ldr	r3, [r0]
   352b0:	ldr	r0, [r0, #4]
   352b4:	mov	ip, #-2147483648	; 0x80000000
   352b8:	mvn	lr, #0
   352bc:	str	r0, [sp, #1100]	; 0x44c
   352c0:	mov	r0, ip
   352c4:	str	r1, [sp, #1096]	; 0x448
   352c8:	mov	r1, lr
   352cc:	str	r2, [sp, #1092]	; 0x444
   352d0:	mov	r2, r3
   352d4:	ldr	r3, [sp, #1100]	; 0x44c
   352d8:	bl	75338 <__assert_fail@plt+0x62780>
   352dc:	ldr	r2, [sp, #1096]	; 0x448
   352e0:	subs	r0, r0, r2
   352e4:	ldr	r2, [sp, #1092]	; 0x444
   352e8:	sbcs	r1, r1, r2
   352ec:	blt	3543c <__assert_fail@plt+0x22884>
   352f0:	b	3545c <__assert_fail@plt+0x228a4>
   352f4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   352f8:	ldr	r1, [r0]
   352fc:	ldr	r0, [r0, #4]
   35300:	orr	r0, r1, r0
   35304:	cmp	r0, #0
   35308:	bne	35314 <__assert_fail@plt+0x2275c>
   3530c:	b	35310 <__assert_fail@plt+0x22758>
   35310:	b	3545c <__assert_fail@plt+0x228a4>
   35314:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35318:	ldr	r0, [r0, #-52]	; 0xffffffcc
   3531c:	cmn	r0, #1
   35320:	bgt	353e8 <__assert_fail@plt+0x22830>
   35324:	b	35328 <__assert_fail@plt+0x22770>
   35328:	b	3532c <__assert_fail@plt+0x22774>
   3532c:	b	353a0 <__assert_fail@plt+0x227e8>
   35330:	b	353a0 <__assert_fail@plt+0x227e8>
   35334:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35338:	ldr	r1, [r0, #-56]	; 0xffffffc8
   3533c:	ldr	r0, [r0, #-52]	; 0xffffffcc
   35340:	and	r0, r1, r0
   35344:	cmn	r0, #1
   35348:	bne	353a0 <__assert_fail@plt+0x227e8>
   3534c:	b	35350 <__assert_fail@plt+0x22798>
   35350:	b	35354 <__assert_fail@plt+0x2279c>
   35354:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35358:	ldr	r1, [r0]
   3535c:	ldr	r0, [r0, #4]
   35360:	adds	r1, r1, #-2147483648	; 0x80000000
   35364:	sbc	r0, r0, #0
   35368:	rsbs	r1, r1, #0
   3536c:	rscs	r0, r0, #0
   35370:	blt	3543c <__assert_fail@plt+0x22884>
   35374:	b	3545c <__assert_fail@plt+0x228a4>
   35378:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3537c:	ldr	r1, [r0]
   35380:	ldr	r0, [r0, #4]
   35384:	subs	r1, r1, #1
   35388:	sbc	r0, r0, #0
   3538c:	mvn	r2, #-2147483648	; 0x80000000
   35390:	subs	r1, r2, r1
   35394:	rscs	r0, r0, #0
   35398:	blt	3543c <__assert_fail@plt+0x22884>
   3539c:	b	3545c <__assert_fail@plt+0x228a4>
   353a0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   353a4:	ldr	r2, [r0, #-56]	; 0xffffffc8
   353a8:	ldr	r3, [r0, #-52]	; 0xffffffcc
   353ac:	ldr	r1, [r0]
   353b0:	ldr	r0, [r0, #4]
   353b4:	mov	ip, #-2147483648	; 0x80000000
   353b8:	mvn	lr, #0
   353bc:	str	r0, [sp, #1088]	; 0x440
   353c0:	mov	r0, ip
   353c4:	str	r1, [sp, #1084]	; 0x43c
   353c8:	mov	r1, lr
   353cc:	bl	75338 <__assert_fail@plt+0x62780>
   353d0:	ldr	r2, [sp, #1084]	; 0x43c
   353d4:	subs	r0, r0, r2
   353d8:	ldr	r2, [sp, #1088]	; 0x440
   353dc:	sbcs	r1, r1, r2
   353e0:	blt	3543c <__assert_fail@plt+0x22884>
   353e4:	b	3545c <__assert_fail@plt+0x228a4>
   353e8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   353ec:	ldr	r1, [r0, #-56]	; 0xffffffc8
   353f0:	ldr	r2, [r0, #-52]	; 0xffffffcc
   353f4:	ldr	r3, [r0]
   353f8:	ldr	r0, [r0, #4]
   353fc:	mvn	ip, #-2147483648	; 0x80000000
   35400:	mov	lr, #0
   35404:	str	r0, [sp, #1080]	; 0x438
   35408:	mov	r0, ip
   3540c:	str	r1, [sp, #1076]	; 0x434
   35410:	mov	r1, lr
   35414:	str	r2, [sp, #1072]	; 0x430
   35418:	mov	r2, r3
   3541c:	ldr	r3, [sp, #1080]	; 0x438
   35420:	bl	75338 <__assert_fail@plt+0x62780>
   35424:	ldr	r2, [sp, #1076]	; 0x434
   35428:	subs	r0, r0, r2
   3542c:	ldr	r2, [sp, #1072]	; 0x430
   35430:	sbcs	r1, r1, r2
   35434:	bge	3545c <__assert_fail@plt+0x228a4>
   35438:	b	3543c <__assert_fail@plt+0x22884>
   3543c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35440:	ldr	r1, [r0, #-56]	; 0xffffffc8
   35444:	ldr	r0, [r0]
   35448:	mul	r0, r1, r0
   3544c:	asr	r1, r0, #31
   35450:	str	r0, [fp, #-1344]	; 0xfffffac0
   35454:	str	r1, [fp, #-1340]	; 0xfffffac4
   35458:	b	35e28 <__assert_fail@plt+0x23270>
   3545c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35460:	ldr	r1, [r0, #-56]	; 0xffffffc8
   35464:	ldr	r0, [r0]
   35468:	mul	r0, r1, r0
   3546c:	asr	r1, r0, #31
   35470:	str	r0, [fp, #-1344]	; 0xfffffac0
   35474:	str	r1, [fp, #-1340]	; 0xfffffac4
   35478:	b	35e2c <__assert_fail@plt+0x23274>
   3547c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35480:	ldr	r0, [r0, #4]
   35484:	cmn	r0, #1
   35488:	bgt	35648 <__assert_fail@plt+0x22a90>
   3548c:	b	35490 <__assert_fail@plt+0x228d8>
   35490:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35494:	ldr	r0, [r0, #-52]	; 0xffffffcc
   35498:	cmn	r0, #1
   3549c:	bgt	355a8 <__assert_fail@plt+0x229f0>
   354a0:	b	354a4 <__assert_fail@plt+0x228ec>
   354a4:	b	354a8 <__assert_fail@plt+0x228f0>
   354a8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   354ac:	ldr	r1, [r0, #-56]	; 0xffffffc8
   354b0:	ldr	r2, [r0, #-52]	; 0xffffffcc
   354b4:	ldr	r3, [r0]
   354b8:	ldr	r0, [r0, #4]
   354bc:	mvn	ip, #0
   354c0:	mov	lr, #0
   354c4:	str	r0, [sp, #1068]	; 0x42c
   354c8:	mov	r0, ip
   354cc:	str	r1, [sp, #1064]	; 0x428
   354d0:	mov	r1, lr
   354d4:	str	r2, [sp, #1060]	; 0x424
   354d8:	mov	r2, r3
   354dc:	ldr	r3, [sp, #1068]	; 0x42c
   354e0:	bl	75338 <__assert_fail@plt+0x62780>
   354e4:	ldr	r2, [sp, #1064]	; 0x428
   354e8:	subs	r0, r2, r0
   354ec:	ldr	r2, [sp, #1060]	; 0x424
   354f0:	sbcs	r1, r2, r1
   354f4:	blt	35754 <__assert_fail@plt+0x22b9c>
   354f8:	b	35774 <__assert_fail@plt+0x22bbc>
   354fc:	b	35500 <__assert_fail@plt+0x22948>
   35500:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35504:	ldr	r1, [r0]
   35508:	ldr	r0, [r0, #4]
   3550c:	eor	r0, r0, #-2147483648	; 0x80000000
   35510:	orr	r0, r1, r0
   35514:	cmp	r0, #0
   35518:	beq	3553c <__assert_fail@plt+0x22984>
   3551c:	b	35550 <__assert_fail@plt+0x22998>
   35520:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35524:	ldr	r1, [r0]
   35528:	ldr	r0, [r0, #4]
   3552c:	subs	r1, r1, #1
   35530:	sbcs	r0, r0, #0
   35534:	blt	35550 <__assert_fail@plt+0x22998>
   35538:	b	3553c <__assert_fail@plt+0x22984>
   3553c:	mov	r0, #0
   35540:	mov	r1, r0
   35544:	str	r1, [sp, #1056]	; 0x420
   35548:	str	r0, [sp, #1052]	; 0x41c
   3554c:	b	3557c <__assert_fail@plt+0x229c4>
   35550:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35554:	ldr	r1, [r0]
   35558:	ldr	r0, [r0, #4]
   3555c:	rsbs	r2, r1, #0
   35560:	rsc	r3, r0, #0
   35564:	mvn	r0, #0
   35568:	mov	r1, #0
   3556c:	bl	75338 <__assert_fail@plt+0x62780>
   35570:	str	r0, [sp, #1056]	; 0x420
   35574:	str	r1, [sp, #1052]	; 0x41c
   35578:	b	3557c <__assert_fail@plt+0x229c4>
   3557c:	ldr	r0, [sp, #1052]	; 0x41c
   35580:	ldr	r1, [sp, #1056]	; 0x420
   35584:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   35588:	ldr	r3, [r2, #-56]	; 0xffffffc8
   3558c:	ldr	r2, [r2, #-52]	; 0xffffffcc
   35590:	mvn	r2, r2
   35594:	mvn	r3, r3
   35598:	subs	r1, r3, r1
   3559c:	sbcs	r0, r2, r0
   355a0:	bge	35754 <__assert_fail@plt+0x22b9c>
   355a4:	b	35774 <__assert_fail@plt+0x22bbc>
   355a8:	b	355ac <__assert_fail@plt+0x229f4>
   355ac:	b	3562c <__assert_fail@plt+0x22a74>
   355b0:	b	3562c <__assert_fail@plt+0x22a74>
   355b4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   355b8:	ldr	r1, [r0]
   355bc:	ldr	r0, [r0, #4]
   355c0:	and	r0, r1, r0
   355c4:	cmn	r0, #1
   355c8:	bne	3562c <__assert_fail@plt+0x22a74>
   355cc:	b	355d0 <__assert_fail@plt+0x22a18>
   355d0:	b	355d4 <__assert_fail@plt+0x22a1c>
   355d4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   355d8:	ldr	r1, [r0, #-56]	; 0xffffffc8
   355dc:	ldr	r0, [r0, #-52]	; 0xffffffcc
   355e0:	rsbs	r1, r1, #0
   355e4:	rscs	r0, r0, #0
   355e8:	blt	35754 <__assert_fail@plt+0x22b9c>
   355ec:	b	35774 <__assert_fail@plt+0x22bbc>
   355f0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   355f4:	ldr	r1, [r0, #-56]	; 0xffffffc8
   355f8:	ldr	r0, [r0, #-52]	; 0xffffffcc
   355fc:	subs	r1, r1, #1
   35600:	sbcs	r0, r0, #0
   35604:	blt	35774 <__assert_fail@plt+0x22bbc>
   35608:	b	3560c <__assert_fail@plt+0x22a54>
   3560c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35610:	ldr	r1, [r0, #-56]	; 0xffffffc8
   35614:	ldr	r0, [r0, #-52]	; 0xffffffcc
   35618:	subs	r1, r1, #1
   3561c:	sbc	r0, r0, #0
   35620:	cmn	r0, #1
   35624:	bgt	35754 <__assert_fail@plt+0x22b9c>
   35628:	b	35774 <__assert_fail@plt+0x22bbc>
   3562c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35630:	ldr	r1, [r0, #-56]	; 0xffffffc8
   35634:	ldr	r0, [r0, #-52]	; 0xffffffcc
   35638:	rsbs	r1, r1, #0
   3563c:	rscs	r0, r0, #0
   35640:	blt	35754 <__assert_fail@plt+0x22b9c>
   35644:	b	35774 <__assert_fail@plt+0x22bbc>
   35648:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3564c:	ldr	r1, [r0]
   35650:	ldr	r0, [r0, #4]
   35654:	orr	r0, r1, r0
   35658:	cmp	r0, #0
   3565c:	bne	35668 <__assert_fail@plt+0x22ab0>
   35660:	b	35664 <__assert_fail@plt+0x22aac>
   35664:	b	35774 <__assert_fail@plt+0x22bbc>
   35668:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3566c:	ldr	r0, [r0, #-52]	; 0xffffffcc
   35670:	cmn	r0, #1
   35674:	bgt	35700 <__assert_fail@plt+0x22b48>
   35678:	b	3567c <__assert_fail@plt+0x22ac4>
   3567c:	b	35680 <__assert_fail@plt+0x22ac8>
   35680:	b	356e4 <__assert_fail@plt+0x22b2c>
   35684:	b	356e4 <__assert_fail@plt+0x22b2c>
   35688:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3568c:	ldr	r1, [r0, #-56]	; 0xffffffc8
   35690:	ldr	r0, [r0, #-52]	; 0xffffffcc
   35694:	and	r0, r1, r0
   35698:	cmn	r0, #1
   3569c:	bne	356e4 <__assert_fail@plt+0x22b2c>
   356a0:	b	356a4 <__assert_fail@plt+0x22aec>
   356a4:	b	356a8 <__assert_fail@plt+0x22af0>
   356a8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   356ac:	ldr	r1, [r0]
   356b0:	ldr	r0, [r0, #4]
   356b4:	rsbs	r1, r1, #0
   356b8:	rscs	r0, r0, #0
   356bc:	blt	35754 <__assert_fail@plt+0x22b9c>
   356c0:	b	35774 <__assert_fail@plt+0x22bbc>
   356c4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   356c8:	ldr	r1, [r0]
   356cc:	ldr	r0, [r0, #4]
   356d0:	subs	r1, r1, #1
   356d4:	sbc	r0, r0, #0
   356d8:	cmn	r0, #1
   356dc:	bgt	35754 <__assert_fail@plt+0x22b9c>
   356e0:	b	35774 <__assert_fail@plt+0x22bbc>
   356e4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   356e8:	ldr	r1, [r0]
   356ec:	ldr	r0, [r0, #4]
   356f0:	rsbs	r1, r1, #0
   356f4:	rscs	r0, r0, #0
   356f8:	blt	35754 <__assert_fail@plt+0x22b9c>
   356fc:	b	35774 <__assert_fail@plt+0x22bbc>
   35700:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35704:	ldr	r1, [r0, #-56]	; 0xffffffc8
   35708:	ldr	r2, [r0, #-52]	; 0xffffffcc
   3570c:	ldr	r3, [r0]
   35710:	ldr	r0, [r0, #4]
   35714:	mvn	ip, #0
   35718:	mov	lr, #0
   3571c:	str	r0, [sp, #1048]	; 0x418
   35720:	mov	r0, ip
   35724:	str	r1, [sp, #1044]	; 0x414
   35728:	mov	r1, lr
   3572c:	str	r2, [sp, #1040]	; 0x410
   35730:	mov	r2, r3
   35734:	ldr	r3, [sp, #1048]	; 0x418
   35738:	bl	75338 <__assert_fail@plt+0x62780>
   3573c:	ldr	r2, [sp, #1044]	; 0x414
   35740:	subs	r0, r0, r2
   35744:	ldr	r2, [sp, #1040]	; 0x410
   35748:	sbcs	r1, r1, r2
   3574c:	bge	35774 <__assert_fail@plt+0x22bbc>
   35750:	b	35754 <__assert_fail@plt+0x22b9c>
   35754:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35758:	ldr	r1, [r0, #-56]	; 0xffffffc8
   3575c:	ldr	r0, [r0]
   35760:	mul	r0, r1, r0
   35764:	mov	r1, #0
   35768:	str	r1, [fp, #-1340]	; 0xfffffac4
   3576c:	str	r0, [fp, #-1344]	; 0xfffffac0
   35770:	b	35e28 <__assert_fail@plt+0x23270>
   35774:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35778:	ldr	r1, [r0, #-56]	; 0xffffffc8
   3577c:	ldr	r0, [r0]
   35780:	mul	r0, r1, r0
   35784:	mov	r1, #0
   35788:	str	r1, [fp, #-1340]	; 0xfffffac4
   3578c:	str	r0, [fp, #-1344]	; 0xfffffac0
   35790:	b	35e2c <__assert_fail@plt+0x23274>
   35794:	b	35798 <__assert_fail@plt+0x22be0>
   35798:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3579c:	ldr	r0, [r0, #4]
   357a0:	cmn	r0, #1
   357a4:	bgt	35984 <__assert_fail@plt+0x22dcc>
   357a8:	b	357ac <__assert_fail@plt+0x22bf4>
   357ac:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   357b0:	ldr	r0, [r0, #-52]	; 0xffffffcc
   357b4:	cmn	r0, #1
   357b8:	bgt	358c4 <__assert_fail@plt+0x22d0c>
   357bc:	b	357c0 <__assert_fail@plt+0x22c08>
   357c0:	b	357c4 <__assert_fail@plt+0x22c0c>
   357c4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   357c8:	ldr	r1, [r0, #-56]	; 0xffffffc8
   357cc:	ldr	r2, [r0, #-52]	; 0xffffffcc
   357d0:	ldr	r3, [r0]
   357d4:	ldr	r0, [r0, #4]
   357d8:	mvn	ip, #0
   357dc:	mvn	lr, #-2147483648	; 0x80000000
   357e0:	str	r0, [sp, #1036]	; 0x40c
   357e4:	mov	r0, ip
   357e8:	str	r1, [sp, #1032]	; 0x408
   357ec:	mov	r1, lr
   357f0:	str	r2, [sp, #1028]	; 0x404
   357f4:	mov	r2, r3
   357f8:	ldr	r3, [sp, #1036]	; 0x40c
   357fc:	bl	75338 <__assert_fail@plt+0x62780>
   35800:	ldr	r2, [sp, #1032]	; 0x408
   35804:	subs	r0, r2, r0
   35808:	ldr	r2, [sp, #1028]	; 0x404
   3580c:	sbcs	r1, r2, r1
   35810:	blt	35aa4 <__assert_fail@plt+0x22eec>
   35814:	b	35ad0 <__assert_fail@plt+0x22f18>
   35818:	b	3581c <__assert_fail@plt+0x22c64>
   3581c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35820:	ldr	r1, [r0]
   35824:	ldr	r0, [r0, #4]
   35828:	eor	r0, r0, #-2147483648	; 0x80000000
   3582c:	orr	r0, r1, r0
   35830:	cmp	r0, #0
   35834:	beq	35858 <__assert_fail@plt+0x22ca0>
   35838:	b	3586c <__assert_fail@plt+0x22cb4>
   3583c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35840:	ldr	r1, [r0]
   35844:	ldr	r0, [r0, #4]
   35848:	subs	r1, r1, #1
   3584c:	sbcs	r0, r0, #0
   35850:	blt	3586c <__assert_fail@plt+0x22cb4>
   35854:	b	35858 <__assert_fail@plt+0x22ca0>
   35858:	mov	r0, #0
   3585c:	mov	r1, r0
   35860:	str	r1, [sp, #1024]	; 0x400
   35864:	str	r0, [sp, #1020]	; 0x3fc
   35868:	b	35898 <__assert_fail@plt+0x22ce0>
   3586c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35870:	ldr	r1, [r0]
   35874:	ldr	r0, [r0, #4]
   35878:	rsbs	r2, r1, #0
   3587c:	rsc	r3, r0, #0
   35880:	mvn	r0, #0
   35884:	mvn	r1, #-2147483648	; 0x80000000
   35888:	bl	75338 <__assert_fail@plt+0x62780>
   3588c:	str	r0, [sp, #1024]	; 0x400
   35890:	str	r1, [sp, #1020]	; 0x3fc
   35894:	b	35898 <__assert_fail@plt+0x22ce0>
   35898:	ldr	r0, [sp, #1020]	; 0x3fc
   3589c:	ldr	r1, [sp, #1024]	; 0x400
   358a0:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   358a4:	ldr	r3, [r2, #-56]	; 0xffffffc8
   358a8:	ldr	r2, [r2, #-52]	; 0xffffffcc
   358ac:	mvn	r2, r2
   358b0:	mvn	r3, r3
   358b4:	subs	r1, r3, r1
   358b8:	sbcs	r0, r2, r0
   358bc:	bge	35aa4 <__assert_fail@plt+0x22eec>
   358c0:	b	35ad0 <__assert_fail@plt+0x22f18>
   358c4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   358c8:	ldr	r1, [r0]
   358cc:	ldr	r0, [r0, #4]
   358d0:	and	r0, r1, r0
   358d4:	cmn	r0, #1
   358d8:	bne	35930 <__assert_fail@plt+0x22d78>
   358dc:	b	358e0 <__assert_fail@plt+0x22d28>
   358e0:	b	358e4 <__assert_fail@plt+0x22d2c>
   358e4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   358e8:	ldr	r1, [r0, #-56]	; 0xffffffc8
   358ec:	ldr	r0, [r0, #-52]	; 0xffffffcc
   358f0:	add	r0, r0, #-2147483648	; 0x80000000
   358f4:	rsbs	r1, r1, #0
   358f8:	rscs	r0, r0, #0
   358fc:	blt	35aa4 <__assert_fail@plt+0x22eec>
   35900:	b	35ad0 <__assert_fail@plt+0x22f18>
   35904:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35908:	ldr	r1, [r0, #-56]	; 0xffffffc8
   3590c:	ldr	r0, [r0, #-52]	; 0xffffffcc
   35910:	subs	r1, r1, #1
   35914:	sbcs	r0, r0, #0
   35918:	blt	35ad0 <__assert_fail@plt+0x22f18>
   3591c:	b	35920 <__assert_fail@plt+0x22d68>
   35920:	mov	r0, #0
   35924:	cmp	r0, #0
   35928:	bne	35aa4 <__assert_fail@plt+0x22eec>
   3592c:	b	35ad0 <__assert_fail@plt+0x22f18>
   35930:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35934:	ldr	r1, [r0, #-56]	; 0xffffffc8
   35938:	ldr	r2, [r0, #-52]	; 0xffffffcc
   3593c:	ldr	r3, [r0]
   35940:	ldr	r0, [r0, #4]
   35944:	mov	ip, #0
   35948:	mov	lr, #-2147483648	; 0x80000000
   3594c:	str	r0, [sp, #1016]	; 0x3f8
   35950:	mov	r0, ip
   35954:	str	r1, [sp, #1012]	; 0x3f4
   35958:	mov	r1, lr
   3595c:	str	r2, [sp, #1008]	; 0x3f0
   35960:	mov	r2, r3
   35964:	ldr	r3, [sp, #1016]	; 0x3f8
   35968:	bl	75338 <__assert_fail@plt+0x62780>
   3596c:	ldr	r2, [sp, #1012]	; 0x3f4
   35970:	subs	r0, r0, r2
   35974:	ldr	r2, [sp, #1008]	; 0x3f0
   35978:	sbcs	r1, r1, r2
   3597c:	blt	35aa4 <__assert_fail@plt+0x22eec>
   35980:	b	35ad0 <__assert_fail@plt+0x22f18>
   35984:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35988:	ldr	r1, [r0]
   3598c:	ldr	r0, [r0, #4]
   35990:	orr	r0, r1, r0
   35994:	cmp	r0, #0
   35998:	bne	359a4 <__assert_fail@plt+0x22dec>
   3599c:	b	359a0 <__assert_fail@plt+0x22de8>
   359a0:	b	35ad0 <__assert_fail@plt+0x22f18>
   359a4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   359a8:	ldr	r0, [r0, #-52]	; 0xffffffcc
   359ac:	cmn	r0, #1
   359b0:	bgt	35a50 <__assert_fail@plt+0x22e98>
   359b4:	b	359b8 <__assert_fail@plt+0x22e00>
   359b8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   359bc:	ldr	r1, [r0, #-56]	; 0xffffffc8
   359c0:	ldr	r0, [r0, #-52]	; 0xffffffcc
   359c4:	and	r0, r1, r0
   359c8:	cmn	r0, #1
   359cc:	bne	35a08 <__assert_fail@plt+0x22e50>
   359d0:	b	359d4 <__assert_fail@plt+0x22e1c>
   359d4:	b	359d8 <__assert_fail@plt+0x22e20>
   359d8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   359dc:	ldr	r1, [r0]
   359e0:	ldr	r0, [r0, #4]
   359e4:	add	r0, r0, #-2147483648	; 0x80000000
   359e8:	rsbs	r1, r1, #0
   359ec:	rscs	r0, r0, #0
   359f0:	blt	35aa4 <__assert_fail@plt+0x22eec>
   359f4:	b	35ad0 <__assert_fail@plt+0x22f18>
   359f8:	mov	r0, #0
   359fc:	cmp	r0, #0
   35a00:	bne	35aa4 <__assert_fail@plt+0x22eec>
   35a04:	b	35ad0 <__assert_fail@plt+0x22f18>
   35a08:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35a0c:	ldr	r2, [r0, #-56]	; 0xffffffc8
   35a10:	ldr	r3, [r0, #-52]	; 0xffffffcc
   35a14:	ldr	r1, [r0]
   35a18:	ldr	r0, [r0, #4]
   35a1c:	mov	ip, #0
   35a20:	mov	lr, #-2147483648	; 0x80000000
   35a24:	str	r0, [sp, #1004]	; 0x3ec
   35a28:	mov	r0, ip
   35a2c:	str	r1, [sp, #1000]	; 0x3e8
   35a30:	mov	r1, lr
   35a34:	bl	75338 <__assert_fail@plt+0x62780>
   35a38:	ldr	r2, [sp, #1000]	; 0x3e8
   35a3c:	subs	r0, r0, r2
   35a40:	ldr	r2, [sp, #1004]	; 0x3ec
   35a44:	sbcs	r1, r1, r2
   35a48:	blt	35aa4 <__assert_fail@plt+0x22eec>
   35a4c:	b	35ad0 <__assert_fail@plt+0x22f18>
   35a50:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35a54:	ldr	r1, [r0, #-56]	; 0xffffffc8
   35a58:	ldr	r2, [r0, #-52]	; 0xffffffcc
   35a5c:	ldr	r3, [r0]
   35a60:	ldr	r0, [r0, #4]
   35a64:	mvn	ip, #0
   35a68:	mvn	lr, #-2147483648	; 0x80000000
   35a6c:	str	r0, [sp, #996]	; 0x3e4
   35a70:	mov	r0, ip
   35a74:	str	r1, [sp, #992]	; 0x3e0
   35a78:	mov	r1, lr
   35a7c:	str	r2, [sp, #988]	; 0x3dc
   35a80:	mov	r2, r3
   35a84:	ldr	r3, [sp, #996]	; 0x3e4
   35a88:	bl	75338 <__assert_fail@plt+0x62780>
   35a8c:	ldr	r2, [sp, #992]	; 0x3e0
   35a90:	subs	r0, r0, r2
   35a94:	ldr	r2, [sp, #988]	; 0x3dc
   35a98:	sbcs	r1, r1, r2
   35a9c:	bge	35ad0 <__assert_fail@plt+0x22f18>
   35aa0:	b	35aa4 <__assert_fail@plt+0x22eec>
   35aa4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35aa8:	ldr	r1, [r0, #-56]	; 0xffffffc8
   35aac:	ldr	r2, [r0, #-52]	; 0xffffffcc
   35ab0:	ldr	r3, [r0]
   35ab4:	ldr	r0, [r0, #4]
   35ab8:	umull	ip, lr, r1, r3
   35abc:	mla	r0, r1, r0, lr
   35ac0:	mla	r0, r2, r3, r0
   35ac4:	str	ip, [fp, #-1344]	; 0xfffffac0
   35ac8:	str	r0, [fp, #-1340]	; 0xfffffac4
   35acc:	b	35e28 <__assert_fail@plt+0x23270>
   35ad0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35ad4:	ldr	r1, [r0, #-56]	; 0xffffffc8
   35ad8:	ldr	r2, [r0, #-52]	; 0xffffffcc
   35adc:	ldr	r3, [r0]
   35ae0:	ldr	r0, [r0, #4]
   35ae4:	umull	ip, lr, r1, r3
   35ae8:	mla	r0, r1, r0, lr
   35aec:	mla	r0, r2, r3, r0
   35af0:	str	ip, [fp, #-1344]	; 0xfffffac0
   35af4:	str	r0, [fp, #-1340]	; 0xfffffac4
   35af8:	b	35e2c <__assert_fail@plt+0x23274>
   35afc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35b00:	ldr	r0, [r0, #4]
   35b04:	cmn	r0, #1
   35b08:	bgt	35cc8 <__assert_fail@plt+0x23110>
   35b0c:	b	35b10 <__assert_fail@plt+0x22f58>
   35b10:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35b14:	ldr	r0, [r0, #-52]	; 0xffffffcc
   35b18:	cmn	r0, #1
   35b1c:	bgt	35c28 <__assert_fail@plt+0x23070>
   35b20:	b	35b24 <__assert_fail@plt+0x22f6c>
   35b24:	b	35b78 <__assert_fail@plt+0x22fc0>
   35b28:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35b2c:	ldr	r1, [r0, #-56]	; 0xffffffc8
   35b30:	ldr	r2, [r0, #-52]	; 0xffffffcc
   35b34:	ldr	r3, [r0]
   35b38:	ldr	r0, [r0, #4]
   35b3c:	mvn	ip, #0
   35b40:	str	r0, [sp, #984]	; 0x3d8
   35b44:	mov	r0, ip
   35b48:	str	r1, [sp, #980]	; 0x3d4
   35b4c:	mov	r1, ip
   35b50:	str	r2, [sp, #976]	; 0x3d0
   35b54:	mov	r2, r3
   35b58:	ldr	r3, [sp, #984]	; 0x3d8
   35b5c:	bl	7540c <__assert_fail@plt+0x62854>
   35b60:	ldr	r2, [sp, #980]	; 0x3d4
   35b64:	subs	r0, r2, r0
   35b68:	ldr	r2, [sp, #976]	; 0x3d0
   35b6c:	sbcs	r1, r2, r1
   35b70:	bcc	35dd0 <__assert_fail@plt+0x23218>
   35b74:	b	35dfc <__assert_fail@plt+0x23244>
   35b78:	b	35b7c <__assert_fail@plt+0x22fc4>
   35b7c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35b80:	ldr	r1, [r0]
   35b84:	ldr	r0, [r0, #4]
   35b88:	eor	r0, r0, #-2147483648	; 0x80000000
   35b8c:	orr	r0, r1, r0
   35b90:	cmp	r0, #0
   35b94:	beq	35bb8 <__assert_fail@plt+0x23000>
   35b98:	b	35bcc <__assert_fail@plt+0x23014>
   35b9c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35ba0:	ldr	r1, [r0]
   35ba4:	ldr	r0, [r0, #4]
   35ba8:	subs	r1, r1, #1
   35bac:	sbcs	r0, r0, #0
   35bb0:	blt	35bcc <__assert_fail@plt+0x23014>
   35bb4:	b	35bb8 <__assert_fail@plt+0x23000>
   35bb8:	mov	r0, #0
   35bbc:	mov	r1, #1
   35bc0:	str	r1, [sp, #972]	; 0x3cc
   35bc4:	str	r0, [sp, #968]	; 0x3c8
   35bc8:	b	35bfc <__assert_fail@plt+0x23044>
   35bcc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35bd0:	ldr	r1, [r0]
   35bd4:	ldr	r0, [r0, #4]
   35bd8:	rsbs	r2, r1, #0
   35bdc:	rsc	r3, r0, #0
   35be0:	mvn	r0, #0
   35be4:	str	r0, [sp, #964]	; 0x3c4
   35be8:	ldr	r1, [sp, #964]	; 0x3c4
   35bec:	bl	7540c <__assert_fail@plt+0x62854>
   35bf0:	str	r0, [sp, #972]	; 0x3cc
   35bf4:	str	r1, [sp, #968]	; 0x3c8
   35bf8:	b	35bfc <__assert_fail@plt+0x23044>
   35bfc:	ldr	r0, [sp, #968]	; 0x3c8
   35c00:	ldr	r1, [sp, #972]	; 0x3cc
   35c04:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   35c08:	ldr	r3, [r2, #-56]	; 0xffffffc8
   35c0c:	ldr	r2, [r2, #-52]	; 0xffffffcc
   35c10:	mvn	r2, r2
   35c14:	mvn	r3, r3
   35c18:	subs	r1, r3, r1
   35c1c:	sbcs	r0, r2, r0
   35c20:	bcs	35dd0 <__assert_fail@plt+0x23218>
   35c24:	b	35dfc <__assert_fail@plt+0x23244>
   35c28:	b	35c2c <__assert_fail@plt+0x23074>
   35c2c:	b	35cac <__assert_fail@plt+0x230f4>
   35c30:	b	35cac <__assert_fail@plt+0x230f4>
   35c34:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35c38:	ldr	r1, [r0]
   35c3c:	ldr	r0, [r0, #4]
   35c40:	and	r0, r1, r0
   35c44:	cmn	r0, #1
   35c48:	bne	35cac <__assert_fail@plt+0x230f4>
   35c4c:	b	35c50 <__assert_fail@plt+0x23098>
   35c50:	b	35c54 <__assert_fail@plt+0x2309c>
   35c54:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35c58:	ldr	r1, [r0, #-56]	; 0xffffffc8
   35c5c:	ldr	r0, [r0, #-52]	; 0xffffffcc
   35c60:	rsbs	r1, r1, #0
   35c64:	rscs	r0, r0, #0
   35c68:	blt	35dd0 <__assert_fail@plt+0x23218>
   35c6c:	b	35dfc <__assert_fail@plt+0x23244>
   35c70:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35c74:	ldr	r1, [r0, #-56]	; 0xffffffc8
   35c78:	ldr	r0, [r0, #-52]	; 0xffffffcc
   35c7c:	subs	r1, r1, #1
   35c80:	sbcs	r0, r0, #0
   35c84:	blt	35dfc <__assert_fail@plt+0x23244>
   35c88:	b	35c8c <__assert_fail@plt+0x230d4>
   35c8c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35c90:	ldr	r1, [r0, #-56]	; 0xffffffc8
   35c94:	ldr	r0, [r0, #-52]	; 0xffffffcc
   35c98:	subs	r1, r1, #1
   35c9c:	sbc	r0, r0, #0
   35ca0:	cmn	r0, #1
   35ca4:	bgt	35dd0 <__assert_fail@plt+0x23218>
   35ca8:	b	35dfc <__assert_fail@plt+0x23244>
   35cac:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35cb0:	ldr	r1, [r0, #-56]	; 0xffffffc8
   35cb4:	ldr	r0, [r0, #-52]	; 0xffffffcc
   35cb8:	rsbs	r1, r1, #0
   35cbc:	rscs	r0, r0, #0
   35cc0:	blt	35dd0 <__assert_fail@plt+0x23218>
   35cc4:	b	35dfc <__assert_fail@plt+0x23244>
   35cc8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35ccc:	ldr	r1, [r0]
   35cd0:	ldr	r0, [r0, #4]
   35cd4:	orr	r0, r1, r0
   35cd8:	cmp	r0, #0
   35cdc:	bne	35ce8 <__assert_fail@plt+0x23130>
   35ce0:	b	35ce4 <__assert_fail@plt+0x2312c>
   35ce4:	b	35dfc <__assert_fail@plt+0x23244>
   35ce8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35cec:	ldr	r0, [r0, #-52]	; 0xffffffcc
   35cf0:	cmn	r0, #1
   35cf4:	bgt	35d80 <__assert_fail@plt+0x231c8>
   35cf8:	b	35cfc <__assert_fail@plt+0x23144>
   35cfc:	b	35d00 <__assert_fail@plt+0x23148>
   35d00:	b	35d64 <__assert_fail@plt+0x231ac>
   35d04:	b	35d64 <__assert_fail@plt+0x231ac>
   35d08:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35d0c:	ldr	r1, [r0, #-56]	; 0xffffffc8
   35d10:	ldr	r0, [r0, #-52]	; 0xffffffcc
   35d14:	and	r0, r1, r0
   35d18:	cmn	r0, #1
   35d1c:	bne	35d64 <__assert_fail@plt+0x231ac>
   35d20:	b	35d24 <__assert_fail@plt+0x2316c>
   35d24:	b	35d28 <__assert_fail@plt+0x23170>
   35d28:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35d2c:	ldr	r1, [r0]
   35d30:	ldr	r0, [r0, #4]
   35d34:	rsbs	r1, r1, #0
   35d38:	rscs	r0, r0, #0
   35d3c:	blt	35dd0 <__assert_fail@plt+0x23218>
   35d40:	b	35dfc <__assert_fail@plt+0x23244>
   35d44:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35d48:	ldr	r1, [r0]
   35d4c:	ldr	r0, [r0, #4]
   35d50:	subs	r1, r1, #1
   35d54:	sbc	r0, r0, #0
   35d58:	cmn	r0, #1
   35d5c:	bgt	35dd0 <__assert_fail@plt+0x23218>
   35d60:	b	35dfc <__assert_fail@plt+0x23244>
   35d64:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35d68:	ldr	r1, [r0]
   35d6c:	ldr	r0, [r0, #4]
   35d70:	rsbs	r1, r1, #0
   35d74:	rscs	r0, r0, #0
   35d78:	blt	35dd0 <__assert_fail@plt+0x23218>
   35d7c:	b	35dfc <__assert_fail@plt+0x23244>
   35d80:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35d84:	ldr	r1, [r0, #-56]	; 0xffffffc8
   35d88:	ldr	r2, [r0, #-52]	; 0xffffffcc
   35d8c:	ldr	r3, [r0]
   35d90:	ldr	r0, [r0, #4]
   35d94:	mvn	ip, #0
   35d98:	str	r0, [sp, #960]	; 0x3c0
   35d9c:	mov	r0, ip
   35da0:	str	r1, [sp, #956]	; 0x3bc
   35da4:	mov	r1, ip
   35da8:	str	r2, [sp, #952]	; 0x3b8
   35dac:	mov	r2, r3
   35db0:	ldr	r3, [sp, #960]	; 0x3c0
   35db4:	bl	7540c <__assert_fail@plt+0x62854>
   35db8:	ldr	r2, [sp, #956]	; 0x3bc
   35dbc:	subs	r0, r0, r2
   35dc0:	ldr	r2, [sp, #952]	; 0x3b8
   35dc4:	sbcs	r1, r1, r2
   35dc8:	bcs	35dfc <__assert_fail@plt+0x23244>
   35dcc:	b	35dd0 <__assert_fail@plt+0x23218>
   35dd0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35dd4:	ldr	r1, [r0, #-56]	; 0xffffffc8
   35dd8:	ldr	r2, [r0, #-52]	; 0xffffffcc
   35ddc:	ldr	r3, [r0]
   35de0:	ldr	r0, [r0, #4]
   35de4:	umull	ip, lr, r1, r3
   35de8:	mla	r0, r1, r0, lr
   35dec:	mla	r0, r2, r3, r0
   35df0:	str	ip, [fp, #-1344]	; 0xfffffac0
   35df4:	str	r0, [fp, #-1340]	; 0xfffffac4
   35df8:	b	35e28 <__assert_fail@plt+0x23270>
   35dfc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35e00:	ldr	r1, [r0, #-56]	; 0xffffffc8
   35e04:	ldr	r2, [r0, #-52]	; 0xffffffcc
   35e08:	ldr	r3, [r0]
   35e0c:	ldr	r0, [r0, #4]
   35e10:	umull	ip, lr, r1, r3
   35e14:	mla	r0, r1, r0, lr
   35e18:	mla	r0, r2, r3, r0
   35e1c:	str	ip, [fp, #-1344]	; 0xfffffac0
   35e20:	str	r0, [fp, #-1340]	; 0xfffffac4
   35e24:	b	35e2c <__assert_fail@plt+0x23274>
   35e28:	b	3b1b8 <__assert_fail@plt+0x28600>
   35e2c:	b	3ae7c <__assert_fail@plt+0x282c4>
   35e30:	sub	r0, fp, #1360	; 0x550
   35e34:	mov	r1, #0
   35e38:	str	r1, [fp, #-1836]	; 0xfffff8d4
   35e3c:	str	r1, [fp, #-1840]	; 0xfffff8d0
   35e40:	str	r1, [fp, #-1828]	; 0xfffff8dc
   35e44:	str	r1, [fp, #-1832]	; 0xfffff8d8
   35e48:	str	r1, [fp, #-1820]	; 0xfffff8e4
   35e4c:	str	r1, [fp, #-1824]	; 0xfffff8e0
   35e50:	str	r1, [fp, #-1812]	; 0xfffff8ec
   35e54:	str	r1, [fp, #-1816]	; 0xfffff8e8
   35e58:	str	r1, [fp, #-1804]	; 0xfffff8f4
   35e5c:	str	r1, [fp, #-1808]	; 0xfffff8f0
   35e60:	str	r1, [fp, #-1796]	; 0xfffff8fc
   35e64:	str	r1, [fp, #-1800]	; 0xfffff8f8
   35e68:	movw	r1, #0
   35e6c:	str	r1, [fp, #-1792]	; 0xfffff900
   35e70:	sub	r1, fp, #1840	; 0x730
   35e74:	movw	r2, #56	; 0x38
   35e78:	bl	125c4 <memcpy@plt>
   35e7c:	b	36540 <__assert_fail@plt+0x23988>
   35e80:	b	35e84 <__assert_fail@plt+0x232cc>
   35e84:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35e88:	ldr	r0, [r0, #4]
   35e8c:	cmn	r0, #1
   35e90:	bgt	36094 <__assert_fail@plt+0x234dc>
   35e94:	b	35e98 <__assert_fail@plt+0x232e0>
   35e98:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35e9c:	ldr	r0, [r0, #-44]	; 0xffffffd4
   35ea0:	cmn	r0, #1
   35ea4:	bgt	35fb0 <__assert_fail@plt+0x233f8>
   35ea8:	b	35eac <__assert_fail@plt+0x232f4>
   35eac:	b	35eb0 <__assert_fail@plt+0x232f8>
   35eb0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35eb4:	ldr	r1, [r0, #-48]	; 0xffffffd0
   35eb8:	ldr	r2, [r0, #-44]	; 0xffffffd4
   35ebc:	ldr	r3, [r0]
   35ec0:	ldr	r0, [r0, #4]
   35ec4:	mov	ip, #127	; 0x7f
   35ec8:	mov	lr, #0
   35ecc:	str	r0, [sp, #948]	; 0x3b4
   35ed0:	mov	r0, ip
   35ed4:	str	r1, [sp, #944]	; 0x3b0
   35ed8:	mov	r1, lr
   35edc:	str	r2, [sp, #940]	; 0x3ac
   35ee0:	mov	r2, r3
   35ee4:	ldr	r3, [sp, #948]	; 0x3b4
   35ee8:	bl	75338 <__assert_fail@plt+0x62780>
   35eec:	ldr	r2, [sp, #944]	; 0x3b0
   35ef0:	subs	r0, r2, r0
   35ef4:	ldr	r2, [sp, #940]	; 0x3ac
   35ef8:	sbcs	r1, r2, r1
   35efc:	blt	361d8 <__assert_fail@plt+0x23620>
   35f00:	b	361fc <__assert_fail@plt+0x23644>
   35f04:	b	35f08 <__assert_fail@plt+0x23350>
   35f08:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35f0c:	ldr	r1, [r0]
   35f10:	ldr	r0, [r0, #4]
   35f14:	eor	r0, r0, #-2147483648	; 0x80000000
   35f18:	orr	r0, r1, r0
   35f1c:	cmp	r0, #0
   35f20:	beq	35f44 <__assert_fail@plt+0x2338c>
   35f24:	b	35f58 <__assert_fail@plt+0x233a0>
   35f28:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35f2c:	ldr	r1, [r0]
   35f30:	ldr	r0, [r0, #4]
   35f34:	subs	r1, r1, #1
   35f38:	sbcs	r0, r0, #0
   35f3c:	blt	35f58 <__assert_fail@plt+0x233a0>
   35f40:	b	35f44 <__assert_fail@plt+0x2338c>
   35f44:	mov	r0, #0
   35f48:	mov	r1, r0
   35f4c:	str	r1, [sp, #936]	; 0x3a8
   35f50:	str	r0, [sp, #932]	; 0x3a4
   35f54:	b	35f84 <__assert_fail@plt+0x233cc>
   35f58:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35f5c:	ldr	r1, [r0]
   35f60:	ldr	r0, [r0, #4]
   35f64:	rsbs	r2, r1, #0
   35f68:	rsc	r3, r0, #0
   35f6c:	mov	r0, #127	; 0x7f
   35f70:	mov	r1, #0
   35f74:	bl	75338 <__assert_fail@plt+0x62780>
   35f78:	str	r0, [sp, #936]	; 0x3a8
   35f7c:	str	r1, [sp, #932]	; 0x3a4
   35f80:	b	35f84 <__assert_fail@plt+0x233cc>
   35f84:	ldr	r0, [sp, #932]	; 0x3a4
   35f88:	ldr	r1, [sp, #936]	; 0x3a8
   35f8c:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   35f90:	ldr	r3, [r2, #-48]	; 0xffffffd0
   35f94:	ldr	r2, [r2, #-44]	; 0xffffffd4
   35f98:	mvn	r2, r2
   35f9c:	mvn	r3, r3
   35fa0:	subs	r1, r3, r1
   35fa4:	sbcs	r0, r2, r0
   35fa8:	bge	361d8 <__assert_fail@plt+0x23620>
   35fac:	b	361fc <__assert_fail@plt+0x23644>
   35fb0:	b	35fb4 <__assert_fail@plt+0x233fc>
   35fb4:	b	36040 <__assert_fail@plt+0x23488>
   35fb8:	b	36040 <__assert_fail@plt+0x23488>
   35fbc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35fc0:	ldr	r1, [r0]
   35fc4:	ldr	r0, [r0, #4]
   35fc8:	and	r0, r1, r0
   35fcc:	cmn	r0, #1
   35fd0:	bne	36040 <__assert_fail@plt+0x23488>
   35fd4:	b	35fd8 <__assert_fail@plt+0x23420>
   35fd8:	b	35fdc <__assert_fail@plt+0x23424>
   35fdc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35fe0:	ldr	r1, [r0, #-48]	; 0xffffffd0
   35fe4:	ldr	r0, [r0, #-44]	; 0xffffffd4
   35fe8:	subs	r1, r1, #128	; 0x80
   35fec:	sbc	r0, r0, #0
   35ff0:	rsbs	r1, r1, #0
   35ff4:	rscs	r0, r0, #0
   35ff8:	blt	361d8 <__assert_fail@plt+0x23620>
   35ffc:	b	361fc <__assert_fail@plt+0x23644>
   36000:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36004:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36008:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3600c:	subs	r1, r1, #1
   36010:	sbcs	r0, r0, #0
   36014:	blt	361fc <__assert_fail@plt+0x23644>
   36018:	b	3601c <__assert_fail@plt+0x23464>
   3601c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36020:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36024:	ldr	r0, [r0, #-44]	; 0xffffffd4
   36028:	subs	r1, r1, #1
   3602c:	sbc	r0, r0, #0
   36030:	rsbs	r1, r1, #127	; 0x7f
   36034:	rscs	r0, r0, #0
   36038:	blt	361d8 <__assert_fail@plt+0x23620>
   3603c:	b	361fc <__assert_fail@plt+0x23644>
   36040:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36044:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36048:	ldr	r2, [r0, #-44]	; 0xffffffd4
   3604c:	ldr	r3, [r0]
   36050:	ldr	r0, [r0, #4]
   36054:	mvn	ip, #127	; 0x7f
   36058:	mvn	lr, #0
   3605c:	str	r0, [sp, #928]	; 0x3a0
   36060:	mov	r0, ip
   36064:	str	r1, [sp, #924]	; 0x39c
   36068:	mov	r1, lr
   3606c:	str	r2, [sp, #920]	; 0x398
   36070:	mov	r2, r3
   36074:	ldr	r3, [sp, #928]	; 0x3a0
   36078:	bl	75338 <__assert_fail@plt+0x62780>
   3607c:	ldr	r2, [sp, #924]	; 0x39c
   36080:	subs	r0, r0, r2
   36084:	ldr	r2, [sp, #920]	; 0x398
   36088:	sbcs	r1, r1, r2
   3608c:	blt	361d8 <__assert_fail@plt+0x23620>
   36090:	b	361fc <__assert_fail@plt+0x23644>
   36094:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36098:	ldr	r1, [r0]
   3609c:	ldr	r0, [r0, #4]
   360a0:	orr	r0, r1, r0
   360a4:	cmp	r0, #0
   360a8:	bne	360b4 <__assert_fail@plt+0x234fc>
   360ac:	b	360b0 <__assert_fail@plt+0x234f8>
   360b0:	b	361fc <__assert_fail@plt+0x23644>
   360b4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   360b8:	ldr	r0, [r0, #-44]	; 0xffffffd4
   360bc:	cmn	r0, #1
   360c0:	bgt	36184 <__assert_fail@plt+0x235cc>
   360c4:	b	360c8 <__assert_fail@plt+0x23510>
   360c8:	b	360cc <__assert_fail@plt+0x23514>
   360cc:	b	3613c <__assert_fail@plt+0x23584>
   360d0:	b	3613c <__assert_fail@plt+0x23584>
   360d4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   360d8:	ldr	r1, [r0, #-48]	; 0xffffffd0
   360dc:	ldr	r0, [r0, #-44]	; 0xffffffd4
   360e0:	and	r0, r1, r0
   360e4:	cmn	r0, #1
   360e8:	bne	3613c <__assert_fail@plt+0x23584>
   360ec:	b	360f0 <__assert_fail@plt+0x23538>
   360f0:	b	360f4 <__assert_fail@plt+0x2353c>
   360f4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   360f8:	ldr	r1, [r0]
   360fc:	ldr	r0, [r0, #4]
   36100:	subs	r1, r1, #128	; 0x80
   36104:	sbc	r0, r0, #0
   36108:	rsbs	r1, r1, #0
   3610c:	rscs	r0, r0, #0
   36110:	blt	361d8 <__assert_fail@plt+0x23620>
   36114:	b	361fc <__assert_fail@plt+0x23644>
   36118:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3611c:	ldr	r1, [r0]
   36120:	ldr	r0, [r0, #4]
   36124:	subs	r1, r1, #1
   36128:	sbc	r0, r0, #0
   3612c:	rsbs	r1, r1, #127	; 0x7f
   36130:	rscs	r0, r0, #0
   36134:	blt	361d8 <__assert_fail@plt+0x23620>
   36138:	b	361fc <__assert_fail@plt+0x23644>
   3613c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36140:	ldr	r2, [r0, #-48]	; 0xffffffd0
   36144:	ldr	r3, [r0, #-44]	; 0xffffffd4
   36148:	ldr	r1, [r0]
   3614c:	ldr	r0, [r0, #4]
   36150:	mvn	ip, #127	; 0x7f
   36154:	mvn	lr, #0
   36158:	str	r0, [sp, #916]	; 0x394
   3615c:	mov	r0, ip
   36160:	str	r1, [sp, #912]	; 0x390
   36164:	mov	r1, lr
   36168:	bl	75338 <__assert_fail@plt+0x62780>
   3616c:	ldr	r2, [sp, #912]	; 0x390
   36170:	subs	r0, r0, r2
   36174:	ldr	r2, [sp, #916]	; 0x394
   36178:	sbcs	r1, r1, r2
   3617c:	blt	361d8 <__assert_fail@plt+0x23620>
   36180:	b	361fc <__assert_fail@plt+0x23644>
   36184:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36188:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3618c:	ldr	r2, [r0, #-44]	; 0xffffffd4
   36190:	ldr	r3, [r0]
   36194:	ldr	r0, [r0, #4]
   36198:	mov	ip, #127	; 0x7f
   3619c:	mov	lr, #0
   361a0:	str	r0, [sp, #908]	; 0x38c
   361a4:	mov	r0, ip
   361a8:	str	r1, [sp, #904]	; 0x388
   361ac:	mov	r1, lr
   361b0:	str	r2, [sp, #900]	; 0x384
   361b4:	mov	r2, r3
   361b8:	ldr	r3, [sp, #908]	; 0x38c
   361bc:	bl	75338 <__assert_fail@plt+0x62780>
   361c0:	ldr	r2, [sp, #904]	; 0x388
   361c4:	subs	r0, r0, r2
   361c8:	ldr	r2, [sp, #900]	; 0x384
   361cc:	sbcs	r1, r1, r2
   361d0:	bge	361fc <__assert_fail@plt+0x23644>
   361d4:	b	361d8 <__assert_fail@plt+0x23620>
   361d8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   361dc:	ldr	r1, [r0, #-48]	; 0xffffffd0
   361e0:	ldr	r0, [r0]
   361e4:	mul	r0, r1, r0
   361e8:	sxtb	r0, r0
   361ec:	asr	r1, r0, #31
   361f0:	str	r0, [fp, #-1344]	; 0xfffffac0
   361f4:	str	r1, [fp, #-1340]	; 0xfffffac4
   361f8:	b	38020 <__assert_fail@plt+0x25468>
   361fc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36200:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36204:	ldr	r0, [r0]
   36208:	mul	r0, r1, r0
   3620c:	sxtb	r0, r0
   36210:	asr	r1, r0, #31
   36214:	str	r0, [fp, #-1344]	; 0xfffffac0
   36218:	str	r1, [fp, #-1340]	; 0xfffffac4
   3621c:	b	38024 <__assert_fail@plt+0x2546c>
   36220:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36224:	ldr	r0, [r0, #4]
   36228:	cmn	r0, #1
   3622c:	bgt	363ec <__assert_fail@plt+0x23834>
   36230:	b	36234 <__assert_fail@plt+0x2367c>
   36234:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36238:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3623c:	cmn	r0, #1
   36240:	bgt	3634c <__assert_fail@plt+0x23794>
   36244:	b	36248 <__assert_fail@plt+0x23690>
   36248:	b	3624c <__assert_fail@plt+0x23694>
   3624c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36250:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36254:	ldr	r2, [r0, #-44]	; 0xffffffd4
   36258:	ldr	r3, [r0]
   3625c:	ldr	r0, [r0, #4]
   36260:	mov	ip, #255	; 0xff
   36264:	mov	lr, #0
   36268:	str	r0, [sp, #896]	; 0x380
   3626c:	mov	r0, ip
   36270:	str	r1, [sp, #892]	; 0x37c
   36274:	mov	r1, lr
   36278:	str	r2, [sp, #888]	; 0x378
   3627c:	mov	r2, r3
   36280:	ldr	r3, [sp, #896]	; 0x380
   36284:	bl	75338 <__assert_fail@plt+0x62780>
   36288:	ldr	r2, [sp, #892]	; 0x37c
   3628c:	subs	r0, r2, r0
   36290:	ldr	r2, [sp, #888]	; 0x378
   36294:	sbcs	r1, r2, r1
   36298:	blt	364f8 <__assert_fail@plt+0x23940>
   3629c:	b	3651c <__assert_fail@plt+0x23964>
   362a0:	b	362a4 <__assert_fail@plt+0x236ec>
   362a4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   362a8:	ldr	r1, [r0]
   362ac:	ldr	r0, [r0, #4]
   362b0:	eor	r0, r0, #-2147483648	; 0x80000000
   362b4:	orr	r0, r1, r0
   362b8:	cmp	r0, #0
   362bc:	beq	362e0 <__assert_fail@plt+0x23728>
   362c0:	b	362f4 <__assert_fail@plt+0x2373c>
   362c4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   362c8:	ldr	r1, [r0]
   362cc:	ldr	r0, [r0, #4]
   362d0:	subs	r1, r1, #1
   362d4:	sbcs	r0, r0, #0
   362d8:	blt	362f4 <__assert_fail@plt+0x2373c>
   362dc:	b	362e0 <__assert_fail@plt+0x23728>
   362e0:	mov	r0, #0
   362e4:	mov	r1, r0
   362e8:	str	r1, [sp, #884]	; 0x374
   362ec:	str	r0, [sp, #880]	; 0x370
   362f0:	b	36320 <__assert_fail@plt+0x23768>
   362f4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   362f8:	ldr	r1, [r0]
   362fc:	ldr	r0, [r0, #4]
   36300:	rsbs	r2, r1, #0
   36304:	rsc	r3, r0, #0
   36308:	mov	r0, #255	; 0xff
   3630c:	mov	r1, #0
   36310:	bl	75338 <__assert_fail@plt+0x62780>
   36314:	str	r0, [sp, #884]	; 0x374
   36318:	str	r1, [sp, #880]	; 0x370
   3631c:	b	36320 <__assert_fail@plt+0x23768>
   36320:	ldr	r0, [sp, #880]	; 0x370
   36324:	ldr	r1, [sp, #884]	; 0x374
   36328:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   3632c:	ldr	r3, [r2, #-48]	; 0xffffffd0
   36330:	ldr	r2, [r2, #-44]	; 0xffffffd4
   36334:	mvn	r2, r2
   36338:	mvn	r3, r3
   3633c:	subs	r1, r3, r1
   36340:	sbcs	r0, r2, r0
   36344:	bge	364f8 <__assert_fail@plt+0x23940>
   36348:	b	3651c <__assert_fail@plt+0x23964>
   3634c:	b	36350 <__assert_fail@plt+0x23798>
   36350:	b	363d0 <__assert_fail@plt+0x23818>
   36354:	b	363d0 <__assert_fail@plt+0x23818>
   36358:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3635c:	ldr	r1, [r0]
   36360:	ldr	r0, [r0, #4]
   36364:	and	r0, r1, r0
   36368:	cmn	r0, #1
   3636c:	bne	363d0 <__assert_fail@plt+0x23818>
   36370:	b	36374 <__assert_fail@plt+0x237bc>
   36374:	b	36378 <__assert_fail@plt+0x237c0>
   36378:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3637c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36380:	ldr	r0, [r0, #-44]	; 0xffffffd4
   36384:	rsbs	r1, r1, #0
   36388:	rscs	r0, r0, #0
   3638c:	blt	364f8 <__assert_fail@plt+0x23940>
   36390:	b	3651c <__assert_fail@plt+0x23964>
   36394:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36398:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3639c:	ldr	r0, [r0, #-44]	; 0xffffffd4
   363a0:	subs	r1, r1, #1
   363a4:	sbcs	r0, r0, #0
   363a8:	blt	3651c <__assert_fail@plt+0x23964>
   363ac:	b	363b0 <__assert_fail@plt+0x237f8>
   363b0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   363b4:	ldr	r1, [r0, #-48]	; 0xffffffd0
   363b8:	ldr	r0, [r0, #-44]	; 0xffffffd4
   363bc:	subs	r1, r1, #1
   363c0:	sbc	r0, r0, #0
   363c4:	cmn	r0, #1
   363c8:	bgt	364f8 <__assert_fail@plt+0x23940>
   363cc:	b	3651c <__assert_fail@plt+0x23964>
   363d0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   363d4:	ldr	r1, [r0, #-48]	; 0xffffffd0
   363d8:	ldr	r0, [r0, #-44]	; 0xffffffd4
   363dc:	rsbs	r1, r1, #0
   363e0:	rscs	r0, r0, #0
   363e4:	blt	364f8 <__assert_fail@plt+0x23940>
   363e8:	b	3651c <__assert_fail@plt+0x23964>
   363ec:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   363f0:	ldr	r1, [r0]
   363f4:	ldr	r0, [r0, #4]
   363f8:	orr	r0, r1, r0
   363fc:	cmp	r0, #0
   36400:	bne	3640c <__assert_fail@plt+0x23854>
   36404:	b	36408 <__assert_fail@plt+0x23850>
   36408:	b	3651c <__assert_fail@plt+0x23964>
   3640c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36410:	ldr	r0, [r0, #-44]	; 0xffffffd4
   36414:	cmn	r0, #1
   36418:	bgt	364a4 <__assert_fail@plt+0x238ec>
   3641c:	b	36420 <__assert_fail@plt+0x23868>
   36420:	b	36424 <__assert_fail@plt+0x2386c>
   36424:	b	36488 <__assert_fail@plt+0x238d0>
   36428:	b	36488 <__assert_fail@plt+0x238d0>
   3642c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36430:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36434:	ldr	r0, [r0, #-44]	; 0xffffffd4
   36438:	and	r0, r1, r0
   3643c:	cmn	r0, #1
   36440:	bne	36488 <__assert_fail@plt+0x238d0>
   36444:	b	36448 <__assert_fail@plt+0x23890>
   36448:	b	3644c <__assert_fail@plt+0x23894>
   3644c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36450:	ldr	r1, [r0]
   36454:	ldr	r0, [r0, #4]
   36458:	rsbs	r1, r1, #0
   3645c:	rscs	r0, r0, #0
   36460:	blt	364f8 <__assert_fail@plt+0x23940>
   36464:	b	3651c <__assert_fail@plt+0x23964>
   36468:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3646c:	ldr	r1, [r0]
   36470:	ldr	r0, [r0, #4]
   36474:	subs	r1, r1, #1
   36478:	sbc	r0, r0, #0
   3647c:	cmn	r0, #1
   36480:	bgt	364f8 <__assert_fail@plt+0x23940>
   36484:	b	3651c <__assert_fail@plt+0x23964>
   36488:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3648c:	ldr	r1, [r0]
   36490:	ldr	r0, [r0, #4]
   36494:	rsbs	r1, r1, #0
   36498:	rscs	r0, r0, #0
   3649c:	blt	364f8 <__assert_fail@plt+0x23940>
   364a0:	b	3651c <__assert_fail@plt+0x23964>
   364a4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   364a8:	ldr	r1, [r0, #-48]	; 0xffffffd0
   364ac:	ldr	r2, [r0, #-44]	; 0xffffffd4
   364b0:	ldr	r3, [r0]
   364b4:	ldr	r0, [r0, #4]
   364b8:	mov	ip, #255	; 0xff
   364bc:	mov	lr, #0
   364c0:	str	r0, [sp, #876]	; 0x36c
   364c4:	mov	r0, ip
   364c8:	str	r1, [sp, #872]	; 0x368
   364cc:	mov	r1, lr
   364d0:	str	r2, [sp, #868]	; 0x364
   364d4:	mov	r2, r3
   364d8:	ldr	r3, [sp, #876]	; 0x36c
   364dc:	bl	75338 <__assert_fail@plt+0x62780>
   364e0:	ldr	r2, [sp, #872]	; 0x368
   364e4:	subs	r0, r0, r2
   364e8:	ldr	r2, [sp, #868]	; 0x364
   364ec:	sbcs	r1, r1, r2
   364f0:	bge	3651c <__assert_fail@plt+0x23964>
   364f4:	b	364f8 <__assert_fail@plt+0x23940>
   364f8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   364fc:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36500:	ldr	r0, [r0]
   36504:	mul	r0, r1, r0
   36508:	uxtb	r0, r0
   3650c:	mov	r1, #0
   36510:	str	r1, [fp, #-1340]	; 0xfffffac4
   36514:	str	r0, [fp, #-1344]	; 0xfffffac0
   36518:	b	38020 <__assert_fail@plt+0x25468>
   3651c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36520:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36524:	ldr	r0, [r0]
   36528:	mul	r0, r1, r0
   3652c:	uxtb	r0, r0
   36530:	mov	r1, #0
   36534:	str	r1, [fp, #-1340]	; 0xfffffac4
   36538:	str	r0, [fp, #-1344]	; 0xfffffac0
   3653c:	b	38024 <__assert_fail@plt+0x2546c>
   36540:	b	36c14 <__assert_fail@plt+0x2405c>
   36544:	b	36548 <__assert_fail@plt+0x23990>
   36548:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3654c:	ldr	r0, [r0, #4]
   36550:	cmn	r0, #1
   36554:	bgt	36760 <__assert_fail@plt+0x23ba8>
   36558:	b	3655c <__assert_fail@plt+0x239a4>
   3655c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36560:	ldr	r0, [r0, #-44]	; 0xffffffd4
   36564:	cmn	r0, #1
   36568:	bgt	36674 <__assert_fail@plt+0x23abc>
   3656c:	b	36570 <__assert_fail@plt+0x239b8>
   36570:	b	36574 <__assert_fail@plt+0x239bc>
   36574:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36578:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3657c:	ldr	r2, [r0, #-44]	; 0xffffffd4
   36580:	ldr	r3, [r0]
   36584:	ldr	r0, [r0, #4]
   36588:	movw	ip, #32767	; 0x7fff
   3658c:	mov	lr, #0
   36590:	str	r0, [sp, #864]	; 0x360
   36594:	mov	r0, ip
   36598:	str	r1, [sp, #860]	; 0x35c
   3659c:	mov	r1, lr
   365a0:	str	r2, [sp, #856]	; 0x358
   365a4:	mov	r2, r3
   365a8:	ldr	r3, [sp, #864]	; 0x360
   365ac:	bl	75338 <__assert_fail@plt+0x62780>
   365b0:	ldr	r2, [sp, #860]	; 0x35c
   365b4:	subs	r0, r2, r0
   365b8:	ldr	r2, [sp, #856]	; 0x358
   365bc:	sbcs	r1, r2, r1
   365c0:	blt	368ac <__assert_fail@plt+0x23cf4>
   365c4:	b	368d0 <__assert_fail@plt+0x23d18>
   365c8:	b	365cc <__assert_fail@plt+0x23a14>
   365cc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   365d0:	ldr	r1, [r0]
   365d4:	ldr	r0, [r0, #4]
   365d8:	eor	r0, r0, #-2147483648	; 0x80000000
   365dc:	orr	r0, r1, r0
   365e0:	cmp	r0, #0
   365e4:	beq	36608 <__assert_fail@plt+0x23a50>
   365e8:	b	3661c <__assert_fail@plt+0x23a64>
   365ec:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   365f0:	ldr	r1, [r0]
   365f4:	ldr	r0, [r0, #4]
   365f8:	subs	r1, r1, #1
   365fc:	sbcs	r0, r0, #0
   36600:	blt	3661c <__assert_fail@plt+0x23a64>
   36604:	b	36608 <__assert_fail@plt+0x23a50>
   36608:	mov	r0, #0
   3660c:	mov	r1, r0
   36610:	str	r1, [sp, #852]	; 0x354
   36614:	str	r0, [sp, #848]	; 0x350
   36618:	b	36648 <__assert_fail@plt+0x23a90>
   3661c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36620:	ldr	r1, [r0]
   36624:	ldr	r0, [r0, #4]
   36628:	rsbs	r2, r1, #0
   3662c:	rsc	r3, r0, #0
   36630:	movw	r0, #32767	; 0x7fff
   36634:	mov	r1, #0
   36638:	bl	75338 <__assert_fail@plt+0x62780>
   3663c:	str	r0, [sp, #852]	; 0x354
   36640:	str	r1, [sp, #848]	; 0x350
   36644:	b	36648 <__assert_fail@plt+0x23a90>
   36648:	ldr	r0, [sp, #848]	; 0x350
   3664c:	ldr	r1, [sp, #852]	; 0x354
   36650:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   36654:	ldr	r3, [r2, #-48]	; 0xffffffd0
   36658:	ldr	r2, [r2, #-44]	; 0xffffffd4
   3665c:	mvn	r2, r2
   36660:	mvn	r3, r3
   36664:	subs	r1, r3, r1
   36668:	sbcs	r0, r2, r0
   3666c:	bge	368ac <__assert_fail@plt+0x23cf4>
   36670:	b	368d0 <__assert_fail@plt+0x23d18>
   36674:	b	36678 <__assert_fail@plt+0x23ac0>
   36678:	b	36708 <__assert_fail@plt+0x23b50>
   3667c:	b	36708 <__assert_fail@plt+0x23b50>
   36680:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36684:	ldr	r1, [r0]
   36688:	ldr	r0, [r0, #4]
   3668c:	and	r0, r1, r0
   36690:	cmn	r0, #1
   36694:	bne	36708 <__assert_fail@plt+0x23b50>
   36698:	b	3669c <__assert_fail@plt+0x23ae4>
   3669c:	b	366a0 <__assert_fail@plt+0x23ae8>
   366a0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   366a4:	ldr	r1, [r0, #-48]	; 0xffffffd0
   366a8:	ldr	r0, [r0, #-44]	; 0xffffffd4
   366ac:	subs	r1, r1, #32768	; 0x8000
   366b0:	sbc	r0, r0, #0
   366b4:	rsbs	r1, r1, #0
   366b8:	rscs	r0, r0, #0
   366bc:	blt	368ac <__assert_fail@plt+0x23cf4>
   366c0:	b	368d0 <__assert_fail@plt+0x23d18>
   366c4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   366c8:	ldr	r1, [r0, #-48]	; 0xffffffd0
   366cc:	ldr	r0, [r0, #-44]	; 0xffffffd4
   366d0:	subs	r1, r1, #1
   366d4:	sbcs	r0, r0, #0
   366d8:	blt	368d0 <__assert_fail@plt+0x23d18>
   366dc:	b	366e0 <__assert_fail@plt+0x23b28>
   366e0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   366e4:	ldr	r1, [r0, #-48]	; 0xffffffd0
   366e8:	ldr	r0, [r0, #-44]	; 0xffffffd4
   366ec:	subs	r1, r1, #1
   366f0:	sbc	r0, r0, #0
   366f4:	movw	r2, #32767	; 0x7fff
   366f8:	subs	r1, r2, r1
   366fc:	rscs	r0, r0, #0
   36700:	blt	368ac <__assert_fail@plt+0x23cf4>
   36704:	b	368d0 <__assert_fail@plt+0x23d18>
   36708:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3670c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36710:	ldr	r2, [r0, #-44]	; 0xffffffd4
   36714:	ldr	r3, [r0]
   36718:	ldr	r0, [r0, #4]
   3671c:	movw	ip, #32768	; 0x8000
   36720:	movt	ip, #65535	; 0xffff
   36724:	mvn	lr, #0
   36728:	str	r0, [sp, #844]	; 0x34c
   3672c:	mov	r0, ip
   36730:	str	r1, [sp, #840]	; 0x348
   36734:	mov	r1, lr
   36738:	str	r2, [sp, #836]	; 0x344
   3673c:	mov	r2, r3
   36740:	ldr	r3, [sp, #844]	; 0x34c
   36744:	bl	75338 <__assert_fail@plt+0x62780>
   36748:	ldr	r2, [sp, #840]	; 0x348
   3674c:	subs	r0, r0, r2
   36750:	ldr	r2, [sp, #836]	; 0x344
   36754:	sbcs	r1, r1, r2
   36758:	blt	368ac <__assert_fail@plt+0x23cf4>
   3675c:	b	368d0 <__assert_fail@plt+0x23d18>
   36760:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36764:	ldr	r1, [r0]
   36768:	ldr	r0, [r0, #4]
   3676c:	orr	r0, r1, r0
   36770:	cmp	r0, #0
   36774:	bne	36780 <__assert_fail@plt+0x23bc8>
   36778:	b	3677c <__assert_fail@plt+0x23bc4>
   3677c:	b	368d0 <__assert_fail@plt+0x23d18>
   36780:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36784:	ldr	r0, [r0, #-44]	; 0xffffffd4
   36788:	cmn	r0, #1
   3678c:	bgt	36858 <__assert_fail@plt+0x23ca0>
   36790:	b	36794 <__assert_fail@plt+0x23bdc>
   36794:	b	36798 <__assert_fail@plt+0x23be0>
   36798:	b	3680c <__assert_fail@plt+0x23c54>
   3679c:	b	3680c <__assert_fail@plt+0x23c54>
   367a0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   367a4:	ldr	r1, [r0, #-48]	; 0xffffffd0
   367a8:	ldr	r0, [r0, #-44]	; 0xffffffd4
   367ac:	and	r0, r1, r0
   367b0:	cmn	r0, #1
   367b4:	bne	3680c <__assert_fail@plt+0x23c54>
   367b8:	b	367bc <__assert_fail@plt+0x23c04>
   367bc:	b	367c0 <__assert_fail@plt+0x23c08>
   367c0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   367c4:	ldr	r1, [r0]
   367c8:	ldr	r0, [r0, #4]
   367cc:	subs	r1, r1, #32768	; 0x8000
   367d0:	sbc	r0, r0, #0
   367d4:	rsbs	r1, r1, #0
   367d8:	rscs	r0, r0, #0
   367dc:	blt	368ac <__assert_fail@plt+0x23cf4>
   367e0:	b	368d0 <__assert_fail@plt+0x23d18>
   367e4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   367e8:	ldr	r1, [r0]
   367ec:	ldr	r0, [r0, #4]
   367f0:	subs	r1, r1, #1
   367f4:	sbc	r0, r0, #0
   367f8:	movw	r2, #32767	; 0x7fff
   367fc:	subs	r1, r2, r1
   36800:	rscs	r0, r0, #0
   36804:	blt	368ac <__assert_fail@plt+0x23cf4>
   36808:	b	368d0 <__assert_fail@plt+0x23d18>
   3680c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36810:	ldr	r2, [r0, #-48]	; 0xffffffd0
   36814:	ldr	r3, [r0, #-44]	; 0xffffffd4
   36818:	ldr	r1, [r0]
   3681c:	ldr	r0, [r0, #4]
   36820:	movw	ip, #32768	; 0x8000
   36824:	movt	ip, #65535	; 0xffff
   36828:	mvn	lr, #0
   3682c:	str	r0, [sp, #832]	; 0x340
   36830:	mov	r0, ip
   36834:	str	r1, [sp, #828]	; 0x33c
   36838:	mov	r1, lr
   3683c:	bl	75338 <__assert_fail@plt+0x62780>
   36840:	ldr	r2, [sp, #828]	; 0x33c
   36844:	subs	r0, r0, r2
   36848:	ldr	r2, [sp, #832]	; 0x340
   3684c:	sbcs	r1, r1, r2
   36850:	blt	368ac <__assert_fail@plt+0x23cf4>
   36854:	b	368d0 <__assert_fail@plt+0x23d18>
   36858:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3685c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36860:	ldr	r2, [r0, #-44]	; 0xffffffd4
   36864:	ldr	r3, [r0]
   36868:	ldr	r0, [r0, #4]
   3686c:	movw	ip, #32767	; 0x7fff
   36870:	mov	lr, #0
   36874:	str	r0, [sp, #824]	; 0x338
   36878:	mov	r0, ip
   3687c:	str	r1, [sp, #820]	; 0x334
   36880:	mov	r1, lr
   36884:	str	r2, [sp, #816]	; 0x330
   36888:	mov	r2, r3
   3688c:	ldr	r3, [sp, #824]	; 0x338
   36890:	bl	75338 <__assert_fail@plt+0x62780>
   36894:	ldr	r2, [sp, #820]	; 0x334
   36898:	subs	r0, r0, r2
   3689c:	ldr	r2, [sp, #816]	; 0x330
   368a0:	sbcs	r1, r1, r2
   368a4:	bge	368d0 <__assert_fail@plt+0x23d18>
   368a8:	b	368ac <__assert_fail@plt+0x23cf4>
   368ac:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   368b0:	ldr	r1, [r0, #-48]	; 0xffffffd0
   368b4:	ldr	r0, [r0]
   368b8:	mul	r0, r1, r0
   368bc:	sxth	r0, r0
   368c0:	asr	r1, r0, #31
   368c4:	str	r0, [fp, #-1344]	; 0xfffffac0
   368c8:	str	r1, [fp, #-1340]	; 0xfffffac4
   368cc:	b	38020 <__assert_fail@plt+0x25468>
   368d0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   368d4:	ldr	r1, [r0, #-48]	; 0xffffffd0
   368d8:	ldr	r0, [r0]
   368dc:	mul	r0, r1, r0
   368e0:	sxth	r0, r0
   368e4:	asr	r1, r0, #31
   368e8:	str	r0, [fp, #-1344]	; 0xfffffac0
   368ec:	str	r1, [fp, #-1340]	; 0xfffffac4
   368f0:	b	38024 <__assert_fail@plt+0x2546c>
   368f4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   368f8:	ldr	r0, [r0, #4]
   368fc:	cmn	r0, #1
   36900:	bgt	36ac0 <__assert_fail@plt+0x23f08>
   36904:	b	36908 <__assert_fail@plt+0x23d50>
   36908:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3690c:	ldr	r0, [r0, #-44]	; 0xffffffd4
   36910:	cmn	r0, #1
   36914:	bgt	36a20 <__assert_fail@plt+0x23e68>
   36918:	b	3691c <__assert_fail@plt+0x23d64>
   3691c:	b	36920 <__assert_fail@plt+0x23d68>
   36920:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36924:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36928:	ldr	r2, [r0, #-44]	; 0xffffffd4
   3692c:	ldr	r3, [r0]
   36930:	ldr	r0, [r0, #4]
   36934:	movw	ip, #65535	; 0xffff
   36938:	mov	lr, #0
   3693c:	str	r0, [sp, #812]	; 0x32c
   36940:	mov	r0, ip
   36944:	str	r1, [sp, #808]	; 0x328
   36948:	mov	r1, lr
   3694c:	str	r2, [sp, #804]	; 0x324
   36950:	mov	r2, r3
   36954:	ldr	r3, [sp, #812]	; 0x32c
   36958:	bl	75338 <__assert_fail@plt+0x62780>
   3695c:	ldr	r2, [sp, #808]	; 0x328
   36960:	subs	r0, r2, r0
   36964:	ldr	r2, [sp, #804]	; 0x324
   36968:	sbcs	r1, r2, r1
   3696c:	blt	36bcc <__assert_fail@plt+0x24014>
   36970:	b	36bf0 <__assert_fail@plt+0x24038>
   36974:	b	36978 <__assert_fail@plt+0x23dc0>
   36978:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3697c:	ldr	r1, [r0]
   36980:	ldr	r0, [r0, #4]
   36984:	eor	r0, r0, #-2147483648	; 0x80000000
   36988:	orr	r0, r1, r0
   3698c:	cmp	r0, #0
   36990:	beq	369b4 <__assert_fail@plt+0x23dfc>
   36994:	b	369c8 <__assert_fail@plt+0x23e10>
   36998:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3699c:	ldr	r1, [r0]
   369a0:	ldr	r0, [r0, #4]
   369a4:	subs	r1, r1, #1
   369a8:	sbcs	r0, r0, #0
   369ac:	blt	369c8 <__assert_fail@plt+0x23e10>
   369b0:	b	369b4 <__assert_fail@plt+0x23dfc>
   369b4:	mov	r0, #0
   369b8:	mov	r1, r0
   369bc:	str	r1, [sp, #800]	; 0x320
   369c0:	str	r0, [sp, #796]	; 0x31c
   369c4:	b	369f4 <__assert_fail@plt+0x23e3c>
   369c8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   369cc:	ldr	r1, [r0]
   369d0:	ldr	r0, [r0, #4]
   369d4:	rsbs	r2, r1, #0
   369d8:	rsc	r3, r0, #0
   369dc:	movw	r0, #65535	; 0xffff
   369e0:	mov	r1, #0
   369e4:	bl	75338 <__assert_fail@plt+0x62780>
   369e8:	str	r0, [sp, #800]	; 0x320
   369ec:	str	r1, [sp, #796]	; 0x31c
   369f0:	b	369f4 <__assert_fail@plt+0x23e3c>
   369f4:	ldr	r0, [sp, #796]	; 0x31c
   369f8:	ldr	r1, [sp, #800]	; 0x320
   369fc:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   36a00:	ldr	r3, [r2, #-48]	; 0xffffffd0
   36a04:	ldr	r2, [r2, #-44]	; 0xffffffd4
   36a08:	mvn	r2, r2
   36a0c:	mvn	r3, r3
   36a10:	subs	r1, r3, r1
   36a14:	sbcs	r0, r2, r0
   36a18:	bge	36bcc <__assert_fail@plt+0x24014>
   36a1c:	b	36bf0 <__assert_fail@plt+0x24038>
   36a20:	b	36a24 <__assert_fail@plt+0x23e6c>
   36a24:	b	36aa4 <__assert_fail@plt+0x23eec>
   36a28:	b	36aa4 <__assert_fail@plt+0x23eec>
   36a2c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36a30:	ldr	r1, [r0]
   36a34:	ldr	r0, [r0, #4]
   36a38:	and	r0, r1, r0
   36a3c:	cmn	r0, #1
   36a40:	bne	36aa4 <__assert_fail@plt+0x23eec>
   36a44:	b	36a48 <__assert_fail@plt+0x23e90>
   36a48:	b	36a4c <__assert_fail@plt+0x23e94>
   36a4c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36a50:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36a54:	ldr	r0, [r0, #-44]	; 0xffffffd4
   36a58:	rsbs	r1, r1, #0
   36a5c:	rscs	r0, r0, #0
   36a60:	blt	36bcc <__assert_fail@plt+0x24014>
   36a64:	b	36bf0 <__assert_fail@plt+0x24038>
   36a68:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36a6c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36a70:	ldr	r0, [r0, #-44]	; 0xffffffd4
   36a74:	subs	r1, r1, #1
   36a78:	sbcs	r0, r0, #0
   36a7c:	blt	36bf0 <__assert_fail@plt+0x24038>
   36a80:	b	36a84 <__assert_fail@plt+0x23ecc>
   36a84:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36a88:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36a8c:	ldr	r0, [r0, #-44]	; 0xffffffd4
   36a90:	subs	r1, r1, #1
   36a94:	sbc	r0, r0, #0
   36a98:	cmn	r0, #1
   36a9c:	bgt	36bcc <__assert_fail@plt+0x24014>
   36aa0:	b	36bf0 <__assert_fail@plt+0x24038>
   36aa4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36aa8:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36aac:	ldr	r0, [r0, #-44]	; 0xffffffd4
   36ab0:	rsbs	r1, r1, #0
   36ab4:	rscs	r0, r0, #0
   36ab8:	blt	36bcc <__assert_fail@plt+0x24014>
   36abc:	b	36bf0 <__assert_fail@plt+0x24038>
   36ac0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36ac4:	ldr	r1, [r0]
   36ac8:	ldr	r0, [r0, #4]
   36acc:	orr	r0, r1, r0
   36ad0:	cmp	r0, #0
   36ad4:	bne	36ae0 <__assert_fail@plt+0x23f28>
   36ad8:	b	36adc <__assert_fail@plt+0x23f24>
   36adc:	b	36bf0 <__assert_fail@plt+0x24038>
   36ae0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36ae4:	ldr	r0, [r0, #-44]	; 0xffffffd4
   36ae8:	cmn	r0, #1
   36aec:	bgt	36b78 <__assert_fail@plt+0x23fc0>
   36af0:	b	36af4 <__assert_fail@plt+0x23f3c>
   36af4:	b	36af8 <__assert_fail@plt+0x23f40>
   36af8:	b	36b5c <__assert_fail@plt+0x23fa4>
   36afc:	b	36b5c <__assert_fail@plt+0x23fa4>
   36b00:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36b04:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36b08:	ldr	r0, [r0, #-44]	; 0xffffffd4
   36b0c:	and	r0, r1, r0
   36b10:	cmn	r0, #1
   36b14:	bne	36b5c <__assert_fail@plt+0x23fa4>
   36b18:	b	36b1c <__assert_fail@plt+0x23f64>
   36b1c:	b	36b20 <__assert_fail@plt+0x23f68>
   36b20:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36b24:	ldr	r1, [r0]
   36b28:	ldr	r0, [r0, #4]
   36b2c:	rsbs	r1, r1, #0
   36b30:	rscs	r0, r0, #0
   36b34:	blt	36bcc <__assert_fail@plt+0x24014>
   36b38:	b	36bf0 <__assert_fail@plt+0x24038>
   36b3c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36b40:	ldr	r1, [r0]
   36b44:	ldr	r0, [r0, #4]
   36b48:	subs	r1, r1, #1
   36b4c:	sbc	r0, r0, #0
   36b50:	cmn	r0, #1
   36b54:	bgt	36bcc <__assert_fail@plt+0x24014>
   36b58:	b	36bf0 <__assert_fail@plt+0x24038>
   36b5c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36b60:	ldr	r1, [r0]
   36b64:	ldr	r0, [r0, #4]
   36b68:	rsbs	r1, r1, #0
   36b6c:	rscs	r0, r0, #0
   36b70:	blt	36bcc <__assert_fail@plt+0x24014>
   36b74:	b	36bf0 <__assert_fail@plt+0x24038>
   36b78:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36b7c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36b80:	ldr	r2, [r0, #-44]	; 0xffffffd4
   36b84:	ldr	r3, [r0]
   36b88:	ldr	r0, [r0, #4]
   36b8c:	movw	ip, #65535	; 0xffff
   36b90:	mov	lr, #0
   36b94:	str	r0, [sp, #792]	; 0x318
   36b98:	mov	r0, ip
   36b9c:	str	r1, [sp, #788]	; 0x314
   36ba0:	mov	r1, lr
   36ba4:	str	r2, [sp, #784]	; 0x310
   36ba8:	mov	r2, r3
   36bac:	ldr	r3, [sp, #792]	; 0x318
   36bb0:	bl	75338 <__assert_fail@plt+0x62780>
   36bb4:	ldr	r2, [sp, #788]	; 0x314
   36bb8:	subs	r0, r0, r2
   36bbc:	ldr	r2, [sp, #784]	; 0x310
   36bc0:	sbcs	r1, r1, r2
   36bc4:	bge	36bf0 <__assert_fail@plt+0x24038>
   36bc8:	b	36bcc <__assert_fail@plt+0x24014>
   36bcc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36bd0:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36bd4:	ldr	r0, [r0]
   36bd8:	mul	r0, r1, r0
   36bdc:	uxth	r0, r0
   36be0:	mov	r1, #0
   36be4:	str	r1, [fp, #-1340]	; 0xfffffac4
   36be8:	str	r0, [fp, #-1344]	; 0xfffffac0
   36bec:	b	38020 <__assert_fail@plt+0x25468>
   36bf0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36bf4:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36bf8:	ldr	r0, [r0]
   36bfc:	mul	r0, r1, r0
   36c00:	uxth	r0, r0
   36c04:	mov	r1, #0
   36c08:	str	r1, [fp, #-1340]	; 0xfffffac4
   36c0c:	str	r0, [fp, #-1344]	; 0xfffffac0
   36c10:	b	38024 <__assert_fail@plt+0x2546c>
   36c14:	b	372d0 <__assert_fail@plt+0x24718>
   36c18:	b	36c1c <__assert_fail@plt+0x24064>
   36c1c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36c20:	ldr	r0, [r0, #4]
   36c24:	cmn	r0, #1
   36c28:	bgt	36e30 <__assert_fail@plt+0x24278>
   36c2c:	b	36c30 <__assert_fail@plt+0x24078>
   36c30:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36c34:	ldr	r0, [r0, #-44]	; 0xffffffd4
   36c38:	cmn	r0, #1
   36c3c:	bgt	36d48 <__assert_fail@plt+0x24190>
   36c40:	b	36c44 <__assert_fail@plt+0x2408c>
   36c44:	b	36c48 <__assert_fail@plt+0x24090>
   36c48:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36c4c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36c50:	ldr	r2, [r0, #-44]	; 0xffffffd4
   36c54:	ldr	r3, [r0]
   36c58:	ldr	r0, [r0, #4]
   36c5c:	mvn	ip, #-2147483648	; 0x80000000
   36c60:	mov	lr, #0
   36c64:	str	r0, [sp, #780]	; 0x30c
   36c68:	mov	r0, ip
   36c6c:	str	r1, [sp, #776]	; 0x308
   36c70:	mov	r1, lr
   36c74:	str	r2, [sp, #772]	; 0x304
   36c78:	mov	r2, r3
   36c7c:	ldr	r3, [sp, #780]	; 0x30c
   36c80:	bl	75338 <__assert_fail@plt+0x62780>
   36c84:	ldr	r2, [sp, #776]	; 0x308
   36c88:	subs	r0, r2, r0
   36c8c:	ldr	r2, [sp, #772]	; 0x304
   36c90:	sbcs	r1, r2, r1
   36c94:	blt	36f78 <__assert_fail@plt+0x243c0>
   36c98:	b	36f98 <__assert_fail@plt+0x243e0>
   36c9c:	b	36ca0 <__assert_fail@plt+0x240e8>
   36ca0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36ca4:	ldr	r1, [r0]
   36ca8:	ldr	r0, [r0, #4]
   36cac:	eor	r0, r0, #-2147483648	; 0x80000000
   36cb0:	orr	r0, r1, r0
   36cb4:	cmp	r0, #0
   36cb8:	beq	36cdc <__assert_fail@plt+0x24124>
   36cbc:	b	36cf0 <__assert_fail@plt+0x24138>
   36cc0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36cc4:	ldr	r1, [r0]
   36cc8:	ldr	r0, [r0, #4]
   36ccc:	subs	r1, r1, #1
   36cd0:	sbcs	r0, r0, #0
   36cd4:	blt	36cf0 <__assert_fail@plt+0x24138>
   36cd8:	b	36cdc <__assert_fail@plt+0x24124>
   36cdc:	mov	r0, #0
   36ce0:	mov	r1, r0
   36ce4:	str	r1, [sp, #768]	; 0x300
   36ce8:	str	r0, [sp, #764]	; 0x2fc
   36cec:	b	36d1c <__assert_fail@plt+0x24164>
   36cf0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36cf4:	ldr	r1, [r0]
   36cf8:	ldr	r0, [r0, #4]
   36cfc:	rsbs	r2, r1, #0
   36d00:	rsc	r3, r0, #0
   36d04:	mvn	r0, #-2147483648	; 0x80000000
   36d08:	mov	r1, #0
   36d0c:	bl	75338 <__assert_fail@plt+0x62780>
   36d10:	str	r0, [sp, #768]	; 0x300
   36d14:	str	r1, [sp, #764]	; 0x2fc
   36d18:	b	36d1c <__assert_fail@plt+0x24164>
   36d1c:	ldr	r0, [sp, #764]	; 0x2fc
   36d20:	ldr	r1, [sp, #768]	; 0x300
   36d24:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   36d28:	ldr	r3, [r2, #-48]	; 0xffffffd0
   36d2c:	ldr	r2, [r2, #-44]	; 0xffffffd4
   36d30:	mvn	r2, r2
   36d34:	mvn	r3, r3
   36d38:	subs	r1, r3, r1
   36d3c:	sbcs	r0, r2, r0
   36d40:	bge	36f78 <__assert_fail@plt+0x243c0>
   36d44:	b	36f98 <__assert_fail@plt+0x243e0>
   36d48:	b	36d4c <__assert_fail@plt+0x24194>
   36d4c:	b	36ddc <__assert_fail@plt+0x24224>
   36d50:	b	36ddc <__assert_fail@plt+0x24224>
   36d54:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36d58:	ldr	r1, [r0]
   36d5c:	ldr	r0, [r0, #4]
   36d60:	and	r0, r1, r0
   36d64:	cmn	r0, #1
   36d68:	bne	36ddc <__assert_fail@plt+0x24224>
   36d6c:	b	36d70 <__assert_fail@plt+0x241b8>
   36d70:	b	36d74 <__assert_fail@plt+0x241bc>
   36d74:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36d78:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36d7c:	ldr	r0, [r0, #-44]	; 0xffffffd4
   36d80:	adds	r1, r1, #-2147483648	; 0x80000000
   36d84:	sbc	r0, r0, #0
   36d88:	rsbs	r1, r1, #0
   36d8c:	rscs	r0, r0, #0
   36d90:	blt	36f78 <__assert_fail@plt+0x243c0>
   36d94:	b	36f98 <__assert_fail@plt+0x243e0>
   36d98:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36d9c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36da0:	ldr	r0, [r0, #-44]	; 0xffffffd4
   36da4:	subs	r1, r1, #1
   36da8:	sbcs	r0, r0, #0
   36dac:	blt	36f98 <__assert_fail@plt+0x243e0>
   36db0:	b	36db4 <__assert_fail@plt+0x241fc>
   36db4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36db8:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36dbc:	ldr	r0, [r0, #-44]	; 0xffffffd4
   36dc0:	subs	r1, r1, #1
   36dc4:	sbc	r0, r0, #0
   36dc8:	mvn	r2, #-2147483648	; 0x80000000
   36dcc:	subs	r1, r2, r1
   36dd0:	rscs	r0, r0, #0
   36dd4:	blt	36f78 <__assert_fail@plt+0x243c0>
   36dd8:	b	36f98 <__assert_fail@plt+0x243e0>
   36ddc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36de0:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36de4:	ldr	r2, [r0, #-44]	; 0xffffffd4
   36de8:	ldr	r3, [r0]
   36dec:	ldr	r0, [r0, #4]
   36df0:	mov	ip, #-2147483648	; 0x80000000
   36df4:	mvn	lr, #0
   36df8:	str	r0, [sp, #760]	; 0x2f8
   36dfc:	mov	r0, ip
   36e00:	str	r1, [sp, #756]	; 0x2f4
   36e04:	mov	r1, lr
   36e08:	str	r2, [sp, #752]	; 0x2f0
   36e0c:	mov	r2, r3
   36e10:	ldr	r3, [sp, #760]	; 0x2f8
   36e14:	bl	75338 <__assert_fail@plt+0x62780>
   36e18:	ldr	r2, [sp, #756]	; 0x2f4
   36e1c:	subs	r0, r0, r2
   36e20:	ldr	r2, [sp, #752]	; 0x2f0
   36e24:	sbcs	r1, r1, r2
   36e28:	blt	36f78 <__assert_fail@plt+0x243c0>
   36e2c:	b	36f98 <__assert_fail@plt+0x243e0>
   36e30:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36e34:	ldr	r1, [r0]
   36e38:	ldr	r0, [r0, #4]
   36e3c:	orr	r0, r1, r0
   36e40:	cmp	r0, #0
   36e44:	bne	36e50 <__assert_fail@plt+0x24298>
   36e48:	b	36e4c <__assert_fail@plt+0x24294>
   36e4c:	b	36f98 <__assert_fail@plt+0x243e0>
   36e50:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36e54:	ldr	r0, [r0, #-44]	; 0xffffffd4
   36e58:	cmn	r0, #1
   36e5c:	bgt	36f24 <__assert_fail@plt+0x2436c>
   36e60:	b	36e64 <__assert_fail@plt+0x242ac>
   36e64:	b	36e68 <__assert_fail@plt+0x242b0>
   36e68:	b	36edc <__assert_fail@plt+0x24324>
   36e6c:	b	36edc <__assert_fail@plt+0x24324>
   36e70:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36e74:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36e78:	ldr	r0, [r0, #-44]	; 0xffffffd4
   36e7c:	and	r0, r1, r0
   36e80:	cmn	r0, #1
   36e84:	bne	36edc <__assert_fail@plt+0x24324>
   36e88:	b	36e8c <__assert_fail@plt+0x242d4>
   36e8c:	b	36e90 <__assert_fail@plt+0x242d8>
   36e90:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36e94:	ldr	r1, [r0]
   36e98:	ldr	r0, [r0, #4]
   36e9c:	adds	r1, r1, #-2147483648	; 0x80000000
   36ea0:	sbc	r0, r0, #0
   36ea4:	rsbs	r1, r1, #0
   36ea8:	rscs	r0, r0, #0
   36eac:	blt	36f78 <__assert_fail@plt+0x243c0>
   36eb0:	b	36f98 <__assert_fail@plt+0x243e0>
   36eb4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36eb8:	ldr	r1, [r0]
   36ebc:	ldr	r0, [r0, #4]
   36ec0:	subs	r1, r1, #1
   36ec4:	sbc	r0, r0, #0
   36ec8:	mvn	r2, #-2147483648	; 0x80000000
   36ecc:	subs	r1, r2, r1
   36ed0:	rscs	r0, r0, #0
   36ed4:	blt	36f78 <__assert_fail@plt+0x243c0>
   36ed8:	b	36f98 <__assert_fail@plt+0x243e0>
   36edc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36ee0:	ldr	r2, [r0, #-48]	; 0xffffffd0
   36ee4:	ldr	r3, [r0, #-44]	; 0xffffffd4
   36ee8:	ldr	r1, [r0]
   36eec:	ldr	r0, [r0, #4]
   36ef0:	mov	ip, #-2147483648	; 0x80000000
   36ef4:	mvn	lr, #0
   36ef8:	str	r0, [sp, #748]	; 0x2ec
   36efc:	mov	r0, ip
   36f00:	str	r1, [sp, #744]	; 0x2e8
   36f04:	mov	r1, lr
   36f08:	bl	75338 <__assert_fail@plt+0x62780>
   36f0c:	ldr	r2, [sp, #744]	; 0x2e8
   36f10:	subs	r0, r0, r2
   36f14:	ldr	r2, [sp, #748]	; 0x2ec
   36f18:	sbcs	r1, r1, r2
   36f1c:	blt	36f78 <__assert_fail@plt+0x243c0>
   36f20:	b	36f98 <__assert_fail@plt+0x243e0>
   36f24:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36f28:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36f2c:	ldr	r2, [r0, #-44]	; 0xffffffd4
   36f30:	ldr	r3, [r0]
   36f34:	ldr	r0, [r0, #4]
   36f38:	mvn	ip, #-2147483648	; 0x80000000
   36f3c:	mov	lr, #0
   36f40:	str	r0, [sp, #740]	; 0x2e4
   36f44:	mov	r0, ip
   36f48:	str	r1, [sp, #736]	; 0x2e0
   36f4c:	mov	r1, lr
   36f50:	str	r2, [sp, #732]	; 0x2dc
   36f54:	mov	r2, r3
   36f58:	ldr	r3, [sp, #740]	; 0x2e4
   36f5c:	bl	75338 <__assert_fail@plt+0x62780>
   36f60:	ldr	r2, [sp, #736]	; 0x2e0
   36f64:	subs	r0, r0, r2
   36f68:	ldr	r2, [sp, #732]	; 0x2dc
   36f6c:	sbcs	r1, r1, r2
   36f70:	bge	36f98 <__assert_fail@plt+0x243e0>
   36f74:	b	36f78 <__assert_fail@plt+0x243c0>
   36f78:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36f7c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36f80:	ldr	r0, [r0]
   36f84:	mul	r0, r1, r0
   36f88:	asr	r1, r0, #31
   36f8c:	str	r0, [fp, #-1344]	; 0xfffffac0
   36f90:	str	r1, [fp, #-1340]	; 0xfffffac4
   36f94:	b	38020 <__assert_fail@plt+0x25468>
   36f98:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36f9c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36fa0:	ldr	r0, [r0]
   36fa4:	mul	r0, r1, r0
   36fa8:	asr	r1, r0, #31
   36fac:	str	r0, [fp, #-1344]	; 0xfffffac0
   36fb0:	str	r1, [fp, #-1340]	; 0xfffffac4
   36fb4:	b	38024 <__assert_fail@plt+0x2546c>
   36fb8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36fbc:	ldr	r0, [r0, #4]
   36fc0:	cmn	r0, #1
   36fc4:	bgt	37184 <__assert_fail@plt+0x245cc>
   36fc8:	b	36fcc <__assert_fail@plt+0x24414>
   36fcc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36fd0:	ldr	r0, [r0, #-44]	; 0xffffffd4
   36fd4:	cmn	r0, #1
   36fd8:	bgt	370e4 <__assert_fail@plt+0x2452c>
   36fdc:	b	36fe0 <__assert_fail@plt+0x24428>
   36fe0:	b	36fe4 <__assert_fail@plt+0x2442c>
   36fe4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36fe8:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36fec:	ldr	r2, [r0, #-44]	; 0xffffffd4
   36ff0:	ldr	r3, [r0]
   36ff4:	ldr	r0, [r0, #4]
   36ff8:	mvn	ip, #0
   36ffc:	mov	lr, #0
   37000:	str	r0, [sp, #728]	; 0x2d8
   37004:	mov	r0, ip
   37008:	str	r1, [sp, #724]	; 0x2d4
   3700c:	mov	r1, lr
   37010:	str	r2, [sp, #720]	; 0x2d0
   37014:	mov	r2, r3
   37018:	ldr	r3, [sp, #728]	; 0x2d8
   3701c:	bl	75338 <__assert_fail@plt+0x62780>
   37020:	ldr	r2, [sp, #724]	; 0x2d4
   37024:	subs	r0, r2, r0
   37028:	ldr	r2, [sp, #720]	; 0x2d0
   3702c:	sbcs	r1, r2, r1
   37030:	blt	37290 <__assert_fail@plt+0x246d8>
   37034:	b	372b0 <__assert_fail@plt+0x246f8>
   37038:	b	3703c <__assert_fail@plt+0x24484>
   3703c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37040:	ldr	r1, [r0]
   37044:	ldr	r0, [r0, #4]
   37048:	eor	r0, r0, #-2147483648	; 0x80000000
   3704c:	orr	r0, r1, r0
   37050:	cmp	r0, #0
   37054:	beq	37078 <__assert_fail@plt+0x244c0>
   37058:	b	3708c <__assert_fail@plt+0x244d4>
   3705c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37060:	ldr	r1, [r0]
   37064:	ldr	r0, [r0, #4]
   37068:	subs	r1, r1, #1
   3706c:	sbcs	r0, r0, #0
   37070:	blt	3708c <__assert_fail@plt+0x244d4>
   37074:	b	37078 <__assert_fail@plt+0x244c0>
   37078:	mov	r0, #0
   3707c:	mov	r1, r0
   37080:	str	r1, [sp, #716]	; 0x2cc
   37084:	str	r0, [sp, #712]	; 0x2c8
   37088:	b	370b8 <__assert_fail@plt+0x24500>
   3708c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37090:	ldr	r1, [r0]
   37094:	ldr	r0, [r0, #4]
   37098:	rsbs	r2, r1, #0
   3709c:	rsc	r3, r0, #0
   370a0:	mvn	r0, #0
   370a4:	mov	r1, #0
   370a8:	bl	75338 <__assert_fail@plt+0x62780>
   370ac:	str	r0, [sp, #716]	; 0x2cc
   370b0:	str	r1, [sp, #712]	; 0x2c8
   370b4:	b	370b8 <__assert_fail@plt+0x24500>
   370b8:	ldr	r0, [sp, #712]	; 0x2c8
   370bc:	ldr	r1, [sp, #716]	; 0x2cc
   370c0:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   370c4:	ldr	r3, [r2, #-48]	; 0xffffffd0
   370c8:	ldr	r2, [r2, #-44]	; 0xffffffd4
   370cc:	mvn	r2, r2
   370d0:	mvn	r3, r3
   370d4:	subs	r1, r3, r1
   370d8:	sbcs	r0, r2, r0
   370dc:	bge	37290 <__assert_fail@plt+0x246d8>
   370e0:	b	372b0 <__assert_fail@plt+0x246f8>
   370e4:	b	370e8 <__assert_fail@plt+0x24530>
   370e8:	b	37168 <__assert_fail@plt+0x245b0>
   370ec:	b	37168 <__assert_fail@plt+0x245b0>
   370f0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   370f4:	ldr	r1, [r0]
   370f8:	ldr	r0, [r0, #4]
   370fc:	and	r0, r1, r0
   37100:	cmn	r0, #1
   37104:	bne	37168 <__assert_fail@plt+0x245b0>
   37108:	b	3710c <__assert_fail@plt+0x24554>
   3710c:	b	37110 <__assert_fail@plt+0x24558>
   37110:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37114:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37118:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3711c:	rsbs	r1, r1, #0
   37120:	rscs	r0, r0, #0
   37124:	blt	37290 <__assert_fail@plt+0x246d8>
   37128:	b	372b0 <__assert_fail@plt+0x246f8>
   3712c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37130:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37134:	ldr	r0, [r0, #-44]	; 0xffffffd4
   37138:	subs	r1, r1, #1
   3713c:	sbcs	r0, r0, #0
   37140:	blt	372b0 <__assert_fail@plt+0x246f8>
   37144:	b	37148 <__assert_fail@plt+0x24590>
   37148:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3714c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37150:	ldr	r0, [r0, #-44]	; 0xffffffd4
   37154:	subs	r1, r1, #1
   37158:	sbc	r0, r0, #0
   3715c:	cmn	r0, #1
   37160:	bgt	37290 <__assert_fail@plt+0x246d8>
   37164:	b	372b0 <__assert_fail@plt+0x246f8>
   37168:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3716c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37170:	ldr	r0, [r0, #-44]	; 0xffffffd4
   37174:	rsbs	r1, r1, #0
   37178:	rscs	r0, r0, #0
   3717c:	blt	37290 <__assert_fail@plt+0x246d8>
   37180:	b	372b0 <__assert_fail@plt+0x246f8>
   37184:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37188:	ldr	r1, [r0]
   3718c:	ldr	r0, [r0, #4]
   37190:	orr	r0, r1, r0
   37194:	cmp	r0, #0
   37198:	bne	371a4 <__assert_fail@plt+0x245ec>
   3719c:	b	371a0 <__assert_fail@plt+0x245e8>
   371a0:	b	372b0 <__assert_fail@plt+0x246f8>
   371a4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   371a8:	ldr	r0, [r0, #-44]	; 0xffffffd4
   371ac:	cmn	r0, #1
   371b0:	bgt	3723c <__assert_fail@plt+0x24684>
   371b4:	b	371b8 <__assert_fail@plt+0x24600>
   371b8:	b	371bc <__assert_fail@plt+0x24604>
   371bc:	b	37220 <__assert_fail@plt+0x24668>
   371c0:	b	37220 <__assert_fail@plt+0x24668>
   371c4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   371c8:	ldr	r1, [r0, #-48]	; 0xffffffd0
   371cc:	ldr	r0, [r0, #-44]	; 0xffffffd4
   371d0:	and	r0, r1, r0
   371d4:	cmn	r0, #1
   371d8:	bne	37220 <__assert_fail@plt+0x24668>
   371dc:	b	371e0 <__assert_fail@plt+0x24628>
   371e0:	b	371e4 <__assert_fail@plt+0x2462c>
   371e4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   371e8:	ldr	r1, [r0]
   371ec:	ldr	r0, [r0, #4]
   371f0:	rsbs	r1, r1, #0
   371f4:	rscs	r0, r0, #0
   371f8:	blt	37290 <__assert_fail@plt+0x246d8>
   371fc:	b	372b0 <__assert_fail@plt+0x246f8>
   37200:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37204:	ldr	r1, [r0]
   37208:	ldr	r0, [r0, #4]
   3720c:	subs	r1, r1, #1
   37210:	sbc	r0, r0, #0
   37214:	cmn	r0, #1
   37218:	bgt	37290 <__assert_fail@plt+0x246d8>
   3721c:	b	372b0 <__assert_fail@plt+0x246f8>
   37220:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37224:	ldr	r1, [r0]
   37228:	ldr	r0, [r0, #4]
   3722c:	rsbs	r1, r1, #0
   37230:	rscs	r0, r0, #0
   37234:	blt	37290 <__assert_fail@plt+0x246d8>
   37238:	b	372b0 <__assert_fail@plt+0x246f8>
   3723c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37240:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37244:	ldr	r2, [r0, #-44]	; 0xffffffd4
   37248:	ldr	r3, [r0]
   3724c:	ldr	r0, [r0, #4]
   37250:	mvn	ip, #0
   37254:	mov	lr, #0
   37258:	str	r0, [sp, #708]	; 0x2c4
   3725c:	mov	r0, ip
   37260:	str	r1, [sp, #704]	; 0x2c0
   37264:	mov	r1, lr
   37268:	str	r2, [sp, #700]	; 0x2bc
   3726c:	mov	r2, r3
   37270:	ldr	r3, [sp, #708]	; 0x2c4
   37274:	bl	75338 <__assert_fail@plt+0x62780>
   37278:	ldr	r2, [sp, #704]	; 0x2c0
   3727c:	subs	r0, r0, r2
   37280:	ldr	r2, [sp, #700]	; 0x2bc
   37284:	sbcs	r1, r1, r2
   37288:	bge	372b0 <__assert_fail@plt+0x246f8>
   3728c:	b	37290 <__assert_fail@plt+0x246d8>
   37290:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37294:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37298:	ldr	r0, [r0]
   3729c:	mul	r0, r1, r0
   372a0:	mov	r1, #0
   372a4:	str	r1, [fp, #-1340]	; 0xfffffac4
   372a8:	str	r0, [fp, #-1344]	; 0xfffffac0
   372ac:	b	38020 <__assert_fail@plt+0x25468>
   372b0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   372b4:	ldr	r1, [r0, #-48]	; 0xffffffd0
   372b8:	ldr	r0, [r0]
   372bc:	mul	r0, r1, r0
   372c0:	mov	r1, #0
   372c4:	str	r1, [fp, #-1340]	; 0xfffffac4
   372c8:	str	r0, [fp, #-1344]	; 0xfffffac0
   372cc:	b	38024 <__assert_fail@plt+0x2546c>
   372d0:	b	3798c <__assert_fail@plt+0x24dd4>
   372d4:	b	372d8 <__assert_fail@plt+0x24720>
   372d8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   372dc:	ldr	r0, [r0, #4]
   372e0:	cmn	r0, #1
   372e4:	bgt	374ec <__assert_fail@plt+0x24934>
   372e8:	b	372ec <__assert_fail@plt+0x24734>
   372ec:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   372f0:	ldr	r0, [r0, #-44]	; 0xffffffd4
   372f4:	cmn	r0, #1
   372f8:	bgt	37404 <__assert_fail@plt+0x2484c>
   372fc:	b	37300 <__assert_fail@plt+0x24748>
   37300:	b	37304 <__assert_fail@plt+0x2474c>
   37304:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37308:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3730c:	ldr	r2, [r0, #-44]	; 0xffffffd4
   37310:	ldr	r3, [r0]
   37314:	ldr	r0, [r0, #4]
   37318:	mvn	ip, #-2147483648	; 0x80000000
   3731c:	mov	lr, #0
   37320:	str	r0, [sp, #696]	; 0x2b8
   37324:	mov	r0, ip
   37328:	str	r1, [sp, #692]	; 0x2b4
   3732c:	mov	r1, lr
   37330:	str	r2, [sp, #688]	; 0x2b0
   37334:	mov	r2, r3
   37338:	ldr	r3, [sp, #696]	; 0x2b8
   3733c:	bl	75338 <__assert_fail@plt+0x62780>
   37340:	ldr	r2, [sp, #692]	; 0x2b4
   37344:	subs	r0, r2, r0
   37348:	ldr	r2, [sp, #688]	; 0x2b0
   3734c:	sbcs	r1, r2, r1
   37350:	blt	37634 <__assert_fail@plt+0x24a7c>
   37354:	b	37654 <__assert_fail@plt+0x24a9c>
   37358:	b	3735c <__assert_fail@plt+0x247a4>
   3735c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37360:	ldr	r1, [r0]
   37364:	ldr	r0, [r0, #4]
   37368:	eor	r0, r0, #-2147483648	; 0x80000000
   3736c:	orr	r0, r1, r0
   37370:	cmp	r0, #0
   37374:	beq	37398 <__assert_fail@plt+0x247e0>
   37378:	b	373ac <__assert_fail@plt+0x247f4>
   3737c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37380:	ldr	r1, [r0]
   37384:	ldr	r0, [r0, #4]
   37388:	subs	r1, r1, #1
   3738c:	sbcs	r0, r0, #0
   37390:	blt	373ac <__assert_fail@plt+0x247f4>
   37394:	b	37398 <__assert_fail@plt+0x247e0>
   37398:	mov	r0, #0
   3739c:	mov	r1, r0
   373a0:	str	r1, [sp, #684]	; 0x2ac
   373a4:	str	r0, [sp, #680]	; 0x2a8
   373a8:	b	373d8 <__assert_fail@plt+0x24820>
   373ac:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   373b0:	ldr	r1, [r0]
   373b4:	ldr	r0, [r0, #4]
   373b8:	rsbs	r2, r1, #0
   373bc:	rsc	r3, r0, #0
   373c0:	mvn	r0, #-2147483648	; 0x80000000
   373c4:	mov	r1, #0
   373c8:	bl	75338 <__assert_fail@plt+0x62780>
   373cc:	str	r0, [sp, #684]	; 0x2ac
   373d0:	str	r1, [sp, #680]	; 0x2a8
   373d4:	b	373d8 <__assert_fail@plt+0x24820>
   373d8:	ldr	r0, [sp, #680]	; 0x2a8
   373dc:	ldr	r1, [sp, #684]	; 0x2ac
   373e0:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   373e4:	ldr	r3, [r2, #-48]	; 0xffffffd0
   373e8:	ldr	r2, [r2, #-44]	; 0xffffffd4
   373ec:	mvn	r2, r2
   373f0:	mvn	r3, r3
   373f4:	subs	r1, r3, r1
   373f8:	sbcs	r0, r2, r0
   373fc:	bge	37634 <__assert_fail@plt+0x24a7c>
   37400:	b	37654 <__assert_fail@plt+0x24a9c>
   37404:	b	37408 <__assert_fail@plt+0x24850>
   37408:	b	37498 <__assert_fail@plt+0x248e0>
   3740c:	b	37498 <__assert_fail@plt+0x248e0>
   37410:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37414:	ldr	r1, [r0]
   37418:	ldr	r0, [r0, #4]
   3741c:	and	r0, r1, r0
   37420:	cmn	r0, #1
   37424:	bne	37498 <__assert_fail@plt+0x248e0>
   37428:	b	3742c <__assert_fail@plt+0x24874>
   3742c:	b	37430 <__assert_fail@plt+0x24878>
   37430:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37434:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37438:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3743c:	adds	r1, r1, #-2147483648	; 0x80000000
   37440:	sbc	r0, r0, #0
   37444:	rsbs	r1, r1, #0
   37448:	rscs	r0, r0, #0
   3744c:	blt	37634 <__assert_fail@plt+0x24a7c>
   37450:	b	37654 <__assert_fail@plt+0x24a9c>
   37454:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37458:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3745c:	ldr	r0, [r0, #-44]	; 0xffffffd4
   37460:	subs	r1, r1, #1
   37464:	sbcs	r0, r0, #0
   37468:	blt	37654 <__assert_fail@plt+0x24a9c>
   3746c:	b	37470 <__assert_fail@plt+0x248b8>
   37470:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37474:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37478:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3747c:	subs	r1, r1, #1
   37480:	sbc	r0, r0, #0
   37484:	mvn	r2, #-2147483648	; 0x80000000
   37488:	subs	r1, r2, r1
   3748c:	rscs	r0, r0, #0
   37490:	blt	37634 <__assert_fail@plt+0x24a7c>
   37494:	b	37654 <__assert_fail@plt+0x24a9c>
   37498:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3749c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   374a0:	ldr	r2, [r0, #-44]	; 0xffffffd4
   374a4:	ldr	r3, [r0]
   374a8:	ldr	r0, [r0, #4]
   374ac:	mov	ip, #-2147483648	; 0x80000000
   374b0:	mvn	lr, #0
   374b4:	str	r0, [sp, #676]	; 0x2a4
   374b8:	mov	r0, ip
   374bc:	str	r1, [sp, #672]	; 0x2a0
   374c0:	mov	r1, lr
   374c4:	str	r2, [sp, #668]	; 0x29c
   374c8:	mov	r2, r3
   374cc:	ldr	r3, [sp, #676]	; 0x2a4
   374d0:	bl	75338 <__assert_fail@plt+0x62780>
   374d4:	ldr	r2, [sp, #672]	; 0x2a0
   374d8:	subs	r0, r0, r2
   374dc:	ldr	r2, [sp, #668]	; 0x29c
   374e0:	sbcs	r1, r1, r2
   374e4:	blt	37634 <__assert_fail@plt+0x24a7c>
   374e8:	b	37654 <__assert_fail@plt+0x24a9c>
   374ec:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   374f0:	ldr	r1, [r0]
   374f4:	ldr	r0, [r0, #4]
   374f8:	orr	r0, r1, r0
   374fc:	cmp	r0, #0
   37500:	bne	3750c <__assert_fail@plt+0x24954>
   37504:	b	37508 <__assert_fail@plt+0x24950>
   37508:	b	37654 <__assert_fail@plt+0x24a9c>
   3750c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37510:	ldr	r0, [r0, #-44]	; 0xffffffd4
   37514:	cmn	r0, #1
   37518:	bgt	375e0 <__assert_fail@plt+0x24a28>
   3751c:	b	37520 <__assert_fail@plt+0x24968>
   37520:	b	37524 <__assert_fail@plt+0x2496c>
   37524:	b	37598 <__assert_fail@plt+0x249e0>
   37528:	b	37598 <__assert_fail@plt+0x249e0>
   3752c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37530:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37534:	ldr	r0, [r0, #-44]	; 0xffffffd4
   37538:	and	r0, r1, r0
   3753c:	cmn	r0, #1
   37540:	bne	37598 <__assert_fail@plt+0x249e0>
   37544:	b	37548 <__assert_fail@plt+0x24990>
   37548:	b	3754c <__assert_fail@plt+0x24994>
   3754c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37550:	ldr	r1, [r0]
   37554:	ldr	r0, [r0, #4]
   37558:	adds	r1, r1, #-2147483648	; 0x80000000
   3755c:	sbc	r0, r0, #0
   37560:	rsbs	r1, r1, #0
   37564:	rscs	r0, r0, #0
   37568:	blt	37634 <__assert_fail@plt+0x24a7c>
   3756c:	b	37654 <__assert_fail@plt+0x24a9c>
   37570:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37574:	ldr	r1, [r0]
   37578:	ldr	r0, [r0, #4]
   3757c:	subs	r1, r1, #1
   37580:	sbc	r0, r0, #0
   37584:	mvn	r2, #-2147483648	; 0x80000000
   37588:	subs	r1, r2, r1
   3758c:	rscs	r0, r0, #0
   37590:	blt	37634 <__assert_fail@plt+0x24a7c>
   37594:	b	37654 <__assert_fail@plt+0x24a9c>
   37598:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3759c:	ldr	r2, [r0, #-48]	; 0xffffffd0
   375a0:	ldr	r3, [r0, #-44]	; 0xffffffd4
   375a4:	ldr	r1, [r0]
   375a8:	ldr	r0, [r0, #4]
   375ac:	mov	ip, #-2147483648	; 0x80000000
   375b0:	mvn	lr, #0
   375b4:	str	r0, [sp, #664]	; 0x298
   375b8:	mov	r0, ip
   375bc:	str	r1, [sp, #660]	; 0x294
   375c0:	mov	r1, lr
   375c4:	bl	75338 <__assert_fail@plt+0x62780>
   375c8:	ldr	r2, [sp, #660]	; 0x294
   375cc:	subs	r0, r0, r2
   375d0:	ldr	r2, [sp, #664]	; 0x298
   375d4:	sbcs	r1, r1, r2
   375d8:	blt	37634 <__assert_fail@plt+0x24a7c>
   375dc:	b	37654 <__assert_fail@plt+0x24a9c>
   375e0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   375e4:	ldr	r1, [r0, #-48]	; 0xffffffd0
   375e8:	ldr	r2, [r0, #-44]	; 0xffffffd4
   375ec:	ldr	r3, [r0]
   375f0:	ldr	r0, [r0, #4]
   375f4:	mvn	ip, #-2147483648	; 0x80000000
   375f8:	mov	lr, #0
   375fc:	str	r0, [sp, #656]	; 0x290
   37600:	mov	r0, ip
   37604:	str	r1, [sp, #652]	; 0x28c
   37608:	mov	r1, lr
   3760c:	str	r2, [sp, #648]	; 0x288
   37610:	mov	r2, r3
   37614:	ldr	r3, [sp, #656]	; 0x290
   37618:	bl	75338 <__assert_fail@plt+0x62780>
   3761c:	ldr	r2, [sp, #652]	; 0x28c
   37620:	subs	r0, r0, r2
   37624:	ldr	r2, [sp, #648]	; 0x288
   37628:	sbcs	r1, r1, r2
   3762c:	bge	37654 <__assert_fail@plt+0x24a9c>
   37630:	b	37634 <__assert_fail@plt+0x24a7c>
   37634:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37638:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3763c:	ldr	r0, [r0]
   37640:	mul	r0, r1, r0
   37644:	asr	r1, r0, #31
   37648:	str	r0, [fp, #-1344]	; 0xfffffac0
   3764c:	str	r1, [fp, #-1340]	; 0xfffffac4
   37650:	b	38020 <__assert_fail@plt+0x25468>
   37654:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37658:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3765c:	ldr	r0, [r0]
   37660:	mul	r0, r1, r0
   37664:	asr	r1, r0, #31
   37668:	str	r0, [fp, #-1344]	; 0xfffffac0
   3766c:	str	r1, [fp, #-1340]	; 0xfffffac4
   37670:	b	38024 <__assert_fail@plt+0x2546c>
   37674:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37678:	ldr	r0, [r0, #4]
   3767c:	cmn	r0, #1
   37680:	bgt	37840 <__assert_fail@plt+0x24c88>
   37684:	b	37688 <__assert_fail@plt+0x24ad0>
   37688:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3768c:	ldr	r0, [r0, #-44]	; 0xffffffd4
   37690:	cmn	r0, #1
   37694:	bgt	377a0 <__assert_fail@plt+0x24be8>
   37698:	b	3769c <__assert_fail@plt+0x24ae4>
   3769c:	b	376a0 <__assert_fail@plt+0x24ae8>
   376a0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   376a4:	ldr	r1, [r0, #-48]	; 0xffffffd0
   376a8:	ldr	r2, [r0, #-44]	; 0xffffffd4
   376ac:	ldr	r3, [r0]
   376b0:	ldr	r0, [r0, #4]
   376b4:	mvn	ip, #0
   376b8:	mov	lr, #0
   376bc:	str	r0, [sp, #644]	; 0x284
   376c0:	mov	r0, ip
   376c4:	str	r1, [sp, #640]	; 0x280
   376c8:	mov	r1, lr
   376cc:	str	r2, [sp, #636]	; 0x27c
   376d0:	mov	r2, r3
   376d4:	ldr	r3, [sp, #644]	; 0x284
   376d8:	bl	75338 <__assert_fail@plt+0x62780>
   376dc:	ldr	r2, [sp, #640]	; 0x280
   376e0:	subs	r0, r2, r0
   376e4:	ldr	r2, [sp, #636]	; 0x27c
   376e8:	sbcs	r1, r2, r1
   376ec:	blt	3794c <__assert_fail@plt+0x24d94>
   376f0:	b	3796c <__assert_fail@plt+0x24db4>
   376f4:	b	376f8 <__assert_fail@plt+0x24b40>
   376f8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   376fc:	ldr	r1, [r0]
   37700:	ldr	r0, [r0, #4]
   37704:	eor	r0, r0, #-2147483648	; 0x80000000
   37708:	orr	r0, r1, r0
   3770c:	cmp	r0, #0
   37710:	beq	37734 <__assert_fail@plt+0x24b7c>
   37714:	b	37748 <__assert_fail@plt+0x24b90>
   37718:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3771c:	ldr	r1, [r0]
   37720:	ldr	r0, [r0, #4]
   37724:	subs	r1, r1, #1
   37728:	sbcs	r0, r0, #0
   3772c:	blt	37748 <__assert_fail@plt+0x24b90>
   37730:	b	37734 <__assert_fail@plt+0x24b7c>
   37734:	mov	r0, #0
   37738:	mov	r1, r0
   3773c:	str	r1, [sp, #632]	; 0x278
   37740:	str	r0, [sp, #628]	; 0x274
   37744:	b	37774 <__assert_fail@plt+0x24bbc>
   37748:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3774c:	ldr	r1, [r0]
   37750:	ldr	r0, [r0, #4]
   37754:	rsbs	r2, r1, #0
   37758:	rsc	r3, r0, #0
   3775c:	mvn	r0, #0
   37760:	mov	r1, #0
   37764:	bl	75338 <__assert_fail@plt+0x62780>
   37768:	str	r0, [sp, #632]	; 0x278
   3776c:	str	r1, [sp, #628]	; 0x274
   37770:	b	37774 <__assert_fail@plt+0x24bbc>
   37774:	ldr	r0, [sp, #628]	; 0x274
   37778:	ldr	r1, [sp, #632]	; 0x278
   3777c:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   37780:	ldr	r3, [r2, #-48]	; 0xffffffd0
   37784:	ldr	r2, [r2, #-44]	; 0xffffffd4
   37788:	mvn	r2, r2
   3778c:	mvn	r3, r3
   37790:	subs	r1, r3, r1
   37794:	sbcs	r0, r2, r0
   37798:	bge	3794c <__assert_fail@plt+0x24d94>
   3779c:	b	3796c <__assert_fail@plt+0x24db4>
   377a0:	b	377a4 <__assert_fail@plt+0x24bec>
   377a4:	b	37824 <__assert_fail@plt+0x24c6c>
   377a8:	b	37824 <__assert_fail@plt+0x24c6c>
   377ac:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   377b0:	ldr	r1, [r0]
   377b4:	ldr	r0, [r0, #4]
   377b8:	and	r0, r1, r0
   377bc:	cmn	r0, #1
   377c0:	bne	37824 <__assert_fail@plt+0x24c6c>
   377c4:	b	377c8 <__assert_fail@plt+0x24c10>
   377c8:	b	377cc <__assert_fail@plt+0x24c14>
   377cc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   377d0:	ldr	r1, [r0, #-48]	; 0xffffffd0
   377d4:	ldr	r0, [r0, #-44]	; 0xffffffd4
   377d8:	rsbs	r1, r1, #0
   377dc:	rscs	r0, r0, #0
   377e0:	blt	3794c <__assert_fail@plt+0x24d94>
   377e4:	b	3796c <__assert_fail@plt+0x24db4>
   377e8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   377ec:	ldr	r1, [r0, #-48]	; 0xffffffd0
   377f0:	ldr	r0, [r0, #-44]	; 0xffffffd4
   377f4:	subs	r1, r1, #1
   377f8:	sbcs	r0, r0, #0
   377fc:	blt	3796c <__assert_fail@plt+0x24db4>
   37800:	b	37804 <__assert_fail@plt+0x24c4c>
   37804:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37808:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3780c:	ldr	r0, [r0, #-44]	; 0xffffffd4
   37810:	subs	r1, r1, #1
   37814:	sbc	r0, r0, #0
   37818:	cmn	r0, #1
   3781c:	bgt	3794c <__assert_fail@plt+0x24d94>
   37820:	b	3796c <__assert_fail@plt+0x24db4>
   37824:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37828:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3782c:	ldr	r0, [r0, #-44]	; 0xffffffd4
   37830:	rsbs	r1, r1, #0
   37834:	rscs	r0, r0, #0
   37838:	blt	3794c <__assert_fail@plt+0x24d94>
   3783c:	b	3796c <__assert_fail@plt+0x24db4>
   37840:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37844:	ldr	r1, [r0]
   37848:	ldr	r0, [r0, #4]
   3784c:	orr	r0, r1, r0
   37850:	cmp	r0, #0
   37854:	bne	37860 <__assert_fail@plt+0x24ca8>
   37858:	b	3785c <__assert_fail@plt+0x24ca4>
   3785c:	b	3796c <__assert_fail@plt+0x24db4>
   37860:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37864:	ldr	r0, [r0, #-44]	; 0xffffffd4
   37868:	cmn	r0, #1
   3786c:	bgt	378f8 <__assert_fail@plt+0x24d40>
   37870:	b	37874 <__assert_fail@plt+0x24cbc>
   37874:	b	37878 <__assert_fail@plt+0x24cc0>
   37878:	b	378dc <__assert_fail@plt+0x24d24>
   3787c:	b	378dc <__assert_fail@plt+0x24d24>
   37880:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37884:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37888:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3788c:	and	r0, r1, r0
   37890:	cmn	r0, #1
   37894:	bne	378dc <__assert_fail@plt+0x24d24>
   37898:	b	3789c <__assert_fail@plt+0x24ce4>
   3789c:	b	378a0 <__assert_fail@plt+0x24ce8>
   378a0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   378a4:	ldr	r1, [r0]
   378a8:	ldr	r0, [r0, #4]
   378ac:	rsbs	r1, r1, #0
   378b0:	rscs	r0, r0, #0
   378b4:	blt	3794c <__assert_fail@plt+0x24d94>
   378b8:	b	3796c <__assert_fail@plt+0x24db4>
   378bc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   378c0:	ldr	r1, [r0]
   378c4:	ldr	r0, [r0, #4]
   378c8:	subs	r1, r1, #1
   378cc:	sbc	r0, r0, #0
   378d0:	cmn	r0, #1
   378d4:	bgt	3794c <__assert_fail@plt+0x24d94>
   378d8:	b	3796c <__assert_fail@plt+0x24db4>
   378dc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   378e0:	ldr	r1, [r0]
   378e4:	ldr	r0, [r0, #4]
   378e8:	rsbs	r1, r1, #0
   378ec:	rscs	r0, r0, #0
   378f0:	blt	3794c <__assert_fail@plt+0x24d94>
   378f4:	b	3796c <__assert_fail@plt+0x24db4>
   378f8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   378fc:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37900:	ldr	r2, [r0, #-44]	; 0xffffffd4
   37904:	ldr	r3, [r0]
   37908:	ldr	r0, [r0, #4]
   3790c:	mvn	ip, #0
   37910:	mov	lr, #0
   37914:	str	r0, [sp, #624]	; 0x270
   37918:	mov	r0, ip
   3791c:	str	r1, [sp, #620]	; 0x26c
   37920:	mov	r1, lr
   37924:	str	r2, [sp, #616]	; 0x268
   37928:	mov	r2, r3
   3792c:	ldr	r3, [sp, #624]	; 0x270
   37930:	bl	75338 <__assert_fail@plt+0x62780>
   37934:	ldr	r2, [sp, #620]	; 0x26c
   37938:	subs	r0, r0, r2
   3793c:	ldr	r2, [sp, #616]	; 0x268
   37940:	sbcs	r1, r1, r2
   37944:	bge	3796c <__assert_fail@plt+0x24db4>
   37948:	b	3794c <__assert_fail@plt+0x24d94>
   3794c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37950:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37954:	ldr	r0, [r0]
   37958:	mul	r0, r1, r0
   3795c:	mov	r1, #0
   37960:	str	r1, [fp, #-1340]	; 0xfffffac4
   37964:	str	r0, [fp, #-1344]	; 0xfffffac0
   37968:	b	38020 <__assert_fail@plt+0x25468>
   3796c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37970:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37974:	ldr	r0, [r0]
   37978:	mul	r0, r1, r0
   3797c:	mov	r1, #0
   37980:	str	r1, [fp, #-1340]	; 0xfffffac4
   37984:	str	r0, [fp, #-1344]	; 0xfffffac0
   37988:	b	38024 <__assert_fail@plt+0x2546c>
   3798c:	b	37990 <__assert_fail@plt+0x24dd8>
   37990:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37994:	ldr	r0, [r0, #4]
   37998:	cmn	r0, #1
   3799c:	bgt	37b7c <__assert_fail@plt+0x24fc4>
   379a0:	b	379a4 <__assert_fail@plt+0x24dec>
   379a4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   379a8:	ldr	r0, [r0, #-44]	; 0xffffffd4
   379ac:	cmn	r0, #1
   379b0:	bgt	37abc <__assert_fail@plt+0x24f04>
   379b4:	b	379b8 <__assert_fail@plt+0x24e00>
   379b8:	b	379bc <__assert_fail@plt+0x24e04>
   379bc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   379c0:	ldr	r1, [r0, #-48]	; 0xffffffd0
   379c4:	ldr	r2, [r0, #-44]	; 0xffffffd4
   379c8:	ldr	r3, [r0]
   379cc:	ldr	r0, [r0, #4]
   379d0:	mvn	ip, #0
   379d4:	mvn	lr, #-2147483648	; 0x80000000
   379d8:	str	r0, [sp, #612]	; 0x264
   379dc:	mov	r0, ip
   379e0:	str	r1, [sp, #608]	; 0x260
   379e4:	mov	r1, lr
   379e8:	str	r2, [sp, #604]	; 0x25c
   379ec:	mov	r2, r3
   379f0:	ldr	r3, [sp, #612]	; 0x264
   379f4:	bl	75338 <__assert_fail@plt+0x62780>
   379f8:	ldr	r2, [sp, #608]	; 0x260
   379fc:	subs	r0, r2, r0
   37a00:	ldr	r2, [sp, #604]	; 0x25c
   37a04:	sbcs	r1, r2, r1
   37a08:	blt	37c9c <__assert_fail@plt+0x250e4>
   37a0c:	b	37cc8 <__assert_fail@plt+0x25110>
   37a10:	b	37a14 <__assert_fail@plt+0x24e5c>
   37a14:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37a18:	ldr	r1, [r0]
   37a1c:	ldr	r0, [r0, #4]
   37a20:	eor	r0, r0, #-2147483648	; 0x80000000
   37a24:	orr	r0, r1, r0
   37a28:	cmp	r0, #0
   37a2c:	beq	37a50 <__assert_fail@plt+0x24e98>
   37a30:	b	37a64 <__assert_fail@plt+0x24eac>
   37a34:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37a38:	ldr	r1, [r0]
   37a3c:	ldr	r0, [r0, #4]
   37a40:	subs	r1, r1, #1
   37a44:	sbcs	r0, r0, #0
   37a48:	blt	37a64 <__assert_fail@plt+0x24eac>
   37a4c:	b	37a50 <__assert_fail@plt+0x24e98>
   37a50:	mov	r0, #0
   37a54:	mov	r1, r0
   37a58:	str	r1, [sp, #600]	; 0x258
   37a5c:	str	r0, [sp, #596]	; 0x254
   37a60:	b	37a90 <__assert_fail@plt+0x24ed8>
   37a64:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37a68:	ldr	r1, [r0]
   37a6c:	ldr	r0, [r0, #4]
   37a70:	rsbs	r2, r1, #0
   37a74:	rsc	r3, r0, #0
   37a78:	mvn	r0, #0
   37a7c:	mvn	r1, #-2147483648	; 0x80000000
   37a80:	bl	75338 <__assert_fail@plt+0x62780>
   37a84:	str	r0, [sp, #600]	; 0x258
   37a88:	str	r1, [sp, #596]	; 0x254
   37a8c:	b	37a90 <__assert_fail@plt+0x24ed8>
   37a90:	ldr	r0, [sp, #596]	; 0x254
   37a94:	ldr	r1, [sp, #600]	; 0x258
   37a98:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   37a9c:	ldr	r3, [r2, #-48]	; 0xffffffd0
   37aa0:	ldr	r2, [r2, #-44]	; 0xffffffd4
   37aa4:	mvn	r2, r2
   37aa8:	mvn	r3, r3
   37aac:	subs	r1, r3, r1
   37ab0:	sbcs	r0, r2, r0
   37ab4:	bge	37c9c <__assert_fail@plt+0x250e4>
   37ab8:	b	37cc8 <__assert_fail@plt+0x25110>
   37abc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37ac0:	ldr	r1, [r0]
   37ac4:	ldr	r0, [r0, #4]
   37ac8:	and	r0, r1, r0
   37acc:	cmn	r0, #1
   37ad0:	bne	37b28 <__assert_fail@plt+0x24f70>
   37ad4:	b	37ad8 <__assert_fail@plt+0x24f20>
   37ad8:	b	37adc <__assert_fail@plt+0x24f24>
   37adc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37ae0:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37ae4:	ldr	r0, [r0, #-44]	; 0xffffffd4
   37ae8:	add	r0, r0, #-2147483648	; 0x80000000
   37aec:	rsbs	r1, r1, #0
   37af0:	rscs	r0, r0, #0
   37af4:	blt	37c9c <__assert_fail@plt+0x250e4>
   37af8:	b	37cc8 <__assert_fail@plt+0x25110>
   37afc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37b00:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37b04:	ldr	r0, [r0, #-44]	; 0xffffffd4
   37b08:	subs	r1, r1, #1
   37b0c:	sbcs	r0, r0, #0
   37b10:	blt	37cc8 <__assert_fail@plt+0x25110>
   37b14:	b	37b18 <__assert_fail@plt+0x24f60>
   37b18:	mov	r0, #0
   37b1c:	cmp	r0, #0
   37b20:	bne	37c9c <__assert_fail@plt+0x250e4>
   37b24:	b	37cc8 <__assert_fail@plt+0x25110>
   37b28:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37b2c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37b30:	ldr	r2, [r0, #-44]	; 0xffffffd4
   37b34:	ldr	r3, [r0]
   37b38:	ldr	r0, [r0, #4]
   37b3c:	mov	ip, #0
   37b40:	mov	lr, #-2147483648	; 0x80000000
   37b44:	str	r0, [sp, #592]	; 0x250
   37b48:	mov	r0, ip
   37b4c:	str	r1, [sp, #588]	; 0x24c
   37b50:	mov	r1, lr
   37b54:	str	r2, [sp, #584]	; 0x248
   37b58:	mov	r2, r3
   37b5c:	ldr	r3, [sp, #592]	; 0x250
   37b60:	bl	75338 <__assert_fail@plt+0x62780>
   37b64:	ldr	r2, [sp, #588]	; 0x24c
   37b68:	subs	r0, r0, r2
   37b6c:	ldr	r2, [sp, #584]	; 0x248
   37b70:	sbcs	r1, r1, r2
   37b74:	blt	37c9c <__assert_fail@plt+0x250e4>
   37b78:	b	37cc8 <__assert_fail@plt+0x25110>
   37b7c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37b80:	ldr	r1, [r0]
   37b84:	ldr	r0, [r0, #4]
   37b88:	orr	r0, r1, r0
   37b8c:	cmp	r0, #0
   37b90:	bne	37b9c <__assert_fail@plt+0x24fe4>
   37b94:	b	37b98 <__assert_fail@plt+0x24fe0>
   37b98:	b	37cc8 <__assert_fail@plt+0x25110>
   37b9c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37ba0:	ldr	r0, [r0, #-44]	; 0xffffffd4
   37ba4:	cmn	r0, #1
   37ba8:	bgt	37c48 <__assert_fail@plt+0x25090>
   37bac:	b	37bb0 <__assert_fail@plt+0x24ff8>
   37bb0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37bb4:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37bb8:	ldr	r0, [r0, #-44]	; 0xffffffd4
   37bbc:	and	r0, r1, r0
   37bc0:	cmn	r0, #1
   37bc4:	bne	37c00 <__assert_fail@plt+0x25048>
   37bc8:	b	37bcc <__assert_fail@plt+0x25014>
   37bcc:	b	37bd0 <__assert_fail@plt+0x25018>
   37bd0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37bd4:	ldr	r1, [r0]
   37bd8:	ldr	r0, [r0, #4]
   37bdc:	add	r0, r0, #-2147483648	; 0x80000000
   37be0:	rsbs	r1, r1, #0
   37be4:	rscs	r0, r0, #0
   37be8:	blt	37c9c <__assert_fail@plt+0x250e4>
   37bec:	b	37cc8 <__assert_fail@plt+0x25110>
   37bf0:	mov	r0, #0
   37bf4:	cmp	r0, #0
   37bf8:	bne	37c9c <__assert_fail@plt+0x250e4>
   37bfc:	b	37cc8 <__assert_fail@plt+0x25110>
   37c00:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37c04:	ldr	r2, [r0, #-48]	; 0xffffffd0
   37c08:	ldr	r3, [r0, #-44]	; 0xffffffd4
   37c0c:	ldr	r1, [r0]
   37c10:	ldr	r0, [r0, #4]
   37c14:	mov	ip, #0
   37c18:	mov	lr, #-2147483648	; 0x80000000
   37c1c:	str	r0, [sp, #580]	; 0x244
   37c20:	mov	r0, ip
   37c24:	str	r1, [sp, #576]	; 0x240
   37c28:	mov	r1, lr
   37c2c:	bl	75338 <__assert_fail@plt+0x62780>
   37c30:	ldr	r2, [sp, #576]	; 0x240
   37c34:	subs	r0, r0, r2
   37c38:	ldr	r2, [sp, #580]	; 0x244
   37c3c:	sbcs	r1, r1, r2
   37c40:	blt	37c9c <__assert_fail@plt+0x250e4>
   37c44:	b	37cc8 <__assert_fail@plt+0x25110>
   37c48:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37c4c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37c50:	ldr	r2, [r0, #-44]	; 0xffffffd4
   37c54:	ldr	r3, [r0]
   37c58:	ldr	r0, [r0, #4]
   37c5c:	mvn	ip, #0
   37c60:	mvn	lr, #-2147483648	; 0x80000000
   37c64:	str	r0, [sp, #572]	; 0x23c
   37c68:	mov	r0, ip
   37c6c:	str	r1, [sp, #568]	; 0x238
   37c70:	mov	r1, lr
   37c74:	str	r2, [sp, #564]	; 0x234
   37c78:	mov	r2, r3
   37c7c:	ldr	r3, [sp, #572]	; 0x23c
   37c80:	bl	75338 <__assert_fail@plt+0x62780>
   37c84:	ldr	r2, [sp, #568]	; 0x238
   37c88:	subs	r0, r0, r2
   37c8c:	ldr	r2, [sp, #564]	; 0x234
   37c90:	sbcs	r1, r1, r2
   37c94:	bge	37cc8 <__assert_fail@plt+0x25110>
   37c98:	b	37c9c <__assert_fail@plt+0x250e4>
   37c9c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37ca0:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37ca4:	ldr	r2, [r0, #-44]	; 0xffffffd4
   37ca8:	ldr	r3, [r0]
   37cac:	ldr	r0, [r0, #4]
   37cb0:	umull	ip, lr, r1, r3
   37cb4:	mla	r0, r1, r0, lr
   37cb8:	mla	r0, r2, r3, r0
   37cbc:	str	ip, [fp, #-1344]	; 0xfffffac0
   37cc0:	str	r0, [fp, #-1340]	; 0xfffffac4
   37cc4:	b	38020 <__assert_fail@plt+0x25468>
   37cc8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37ccc:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37cd0:	ldr	r2, [r0, #-44]	; 0xffffffd4
   37cd4:	ldr	r3, [r0]
   37cd8:	ldr	r0, [r0, #4]
   37cdc:	umull	ip, lr, r1, r3
   37ce0:	mla	r0, r1, r0, lr
   37ce4:	mla	r0, r2, r3, r0
   37ce8:	str	ip, [fp, #-1344]	; 0xfffffac0
   37cec:	str	r0, [fp, #-1340]	; 0xfffffac4
   37cf0:	b	38024 <__assert_fail@plt+0x2546c>
   37cf4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37cf8:	ldr	r0, [r0, #4]
   37cfc:	cmn	r0, #1
   37d00:	bgt	37ec0 <__assert_fail@plt+0x25308>
   37d04:	b	37d08 <__assert_fail@plt+0x25150>
   37d08:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37d0c:	ldr	r0, [r0, #-44]	; 0xffffffd4
   37d10:	cmn	r0, #1
   37d14:	bgt	37e20 <__assert_fail@plt+0x25268>
   37d18:	b	37d1c <__assert_fail@plt+0x25164>
   37d1c:	b	37d70 <__assert_fail@plt+0x251b8>
   37d20:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37d24:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37d28:	ldr	r2, [r0, #-44]	; 0xffffffd4
   37d2c:	ldr	r3, [r0]
   37d30:	ldr	r0, [r0, #4]
   37d34:	mvn	ip, #0
   37d38:	str	r0, [sp, #560]	; 0x230
   37d3c:	mov	r0, ip
   37d40:	str	r1, [sp, #556]	; 0x22c
   37d44:	mov	r1, ip
   37d48:	str	r2, [sp, #552]	; 0x228
   37d4c:	mov	r2, r3
   37d50:	ldr	r3, [sp, #560]	; 0x230
   37d54:	bl	7540c <__assert_fail@plt+0x62854>
   37d58:	ldr	r2, [sp, #556]	; 0x22c
   37d5c:	subs	r0, r2, r0
   37d60:	ldr	r2, [sp, #552]	; 0x228
   37d64:	sbcs	r1, r2, r1
   37d68:	bcc	37fc8 <__assert_fail@plt+0x25410>
   37d6c:	b	37ff4 <__assert_fail@plt+0x2543c>
   37d70:	b	37d74 <__assert_fail@plt+0x251bc>
   37d74:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37d78:	ldr	r1, [r0]
   37d7c:	ldr	r0, [r0, #4]
   37d80:	eor	r0, r0, #-2147483648	; 0x80000000
   37d84:	orr	r0, r1, r0
   37d88:	cmp	r0, #0
   37d8c:	beq	37db0 <__assert_fail@plt+0x251f8>
   37d90:	b	37dc4 <__assert_fail@plt+0x2520c>
   37d94:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37d98:	ldr	r1, [r0]
   37d9c:	ldr	r0, [r0, #4]
   37da0:	subs	r1, r1, #1
   37da4:	sbcs	r0, r0, #0
   37da8:	blt	37dc4 <__assert_fail@plt+0x2520c>
   37dac:	b	37db0 <__assert_fail@plt+0x251f8>
   37db0:	mov	r0, #0
   37db4:	mov	r1, #1
   37db8:	str	r1, [sp, #548]	; 0x224
   37dbc:	str	r0, [sp, #544]	; 0x220
   37dc0:	b	37df4 <__assert_fail@plt+0x2523c>
   37dc4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37dc8:	ldr	r1, [r0]
   37dcc:	ldr	r0, [r0, #4]
   37dd0:	rsbs	r2, r1, #0
   37dd4:	rsc	r3, r0, #0
   37dd8:	mvn	r0, #0
   37ddc:	str	r0, [sp, #540]	; 0x21c
   37de0:	ldr	r1, [sp, #540]	; 0x21c
   37de4:	bl	7540c <__assert_fail@plt+0x62854>
   37de8:	str	r0, [sp, #548]	; 0x224
   37dec:	str	r1, [sp, #544]	; 0x220
   37df0:	b	37df4 <__assert_fail@plt+0x2523c>
   37df4:	ldr	r0, [sp, #544]	; 0x220
   37df8:	ldr	r1, [sp, #548]	; 0x224
   37dfc:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   37e00:	ldr	r3, [r2, #-48]	; 0xffffffd0
   37e04:	ldr	r2, [r2, #-44]	; 0xffffffd4
   37e08:	mvn	r2, r2
   37e0c:	mvn	r3, r3
   37e10:	subs	r1, r3, r1
   37e14:	sbcs	r0, r2, r0
   37e18:	bcs	37fc8 <__assert_fail@plt+0x25410>
   37e1c:	b	37ff4 <__assert_fail@plt+0x2543c>
   37e20:	b	37e24 <__assert_fail@plt+0x2526c>
   37e24:	b	37ea4 <__assert_fail@plt+0x252ec>
   37e28:	b	37ea4 <__assert_fail@plt+0x252ec>
   37e2c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37e30:	ldr	r1, [r0]
   37e34:	ldr	r0, [r0, #4]
   37e38:	and	r0, r1, r0
   37e3c:	cmn	r0, #1
   37e40:	bne	37ea4 <__assert_fail@plt+0x252ec>
   37e44:	b	37e48 <__assert_fail@plt+0x25290>
   37e48:	b	37e4c <__assert_fail@plt+0x25294>
   37e4c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37e50:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37e54:	ldr	r0, [r0, #-44]	; 0xffffffd4
   37e58:	rsbs	r1, r1, #0
   37e5c:	rscs	r0, r0, #0
   37e60:	blt	37fc8 <__assert_fail@plt+0x25410>
   37e64:	b	37ff4 <__assert_fail@plt+0x2543c>
   37e68:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37e6c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37e70:	ldr	r0, [r0, #-44]	; 0xffffffd4
   37e74:	subs	r1, r1, #1
   37e78:	sbcs	r0, r0, #0
   37e7c:	blt	37ff4 <__assert_fail@plt+0x2543c>
   37e80:	b	37e84 <__assert_fail@plt+0x252cc>
   37e84:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37e88:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37e8c:	ldr	r0, [r0, #-44]	; 0xffffffd4
   37e90:	subs	r1, r1, #1
   37e94:	sbc	r0, r0, #0
   37e98:	cmn	r0, #1
   37e9c:	bgt	37fc8 <__assert_fail@plt+0x25410>
   37ea0:	b	37ff4 <__assert_fail@plt+0x2543c>
   37ea4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37ea8:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37eac:	ldr	r0, [r0, #-44]	; 0xffffffd4
   37eb0:	rsbs	r1, r1, #0
   37eb4:	rscs	r0, r0, #0
   37eb8:	blt	37fc8 <__assert_fail@plt+0x25410>
   37ebc:	b	37ff4 <__assert_fail@plt+0x2543c>
   37ec0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37ec4:	ldr	r1, [r0]
   37ec8:	ldr	r0, [r0, #4]
   37ecc:	orr	r0, r1, r0
   37ed0:	cmp	r0, #0
   37ed4:	bne	37ee0 <__assert_fail@plt+0x25328>
   37ed8:	b	37edc <__assert_fail@plt+0x25324>
   37edc:	b	37ff4 <__assert_fail@plt+0x2543c>
   37ee0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37ee4:	ldr	r0, [r0, #-44]	; 0xffffffd4
   37ee8:	cmn	r0, #1
   37eec:	bgt	37f78 <__assert_fail@plt+0x253c0>
   37ef0:	b	37ef4 <__assert_fail@plt+0x2533c>
   37ef4:	b	37ef8 <__assert_fail@plt+0x25340>
   37ef8:	b	37f5c <__assert_fail@plt+0x253a4>
   37efc:	b	37f5c <__assert_fail@plt+0x253a4>
   37f00:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37f04:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37f08:	ldr	r0, [r0, #-44]	; 0xffffffd4
   37f0c:	and	r0, r1, r0
   37f10:	cmn	r0, #1
   37f14:	bne	37f5c <__assert_fail@plt+0x253a4>
   37f18:	b	37f1c <__assert_fail@plt+0x25364>
   37f1c:	b	37f20 <__assert_fail@plt+0x25368>
   37f20:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37f24:	ldr	r1, [r0]
   37f28:	ldr	r0, [r0, #4]
   37f2c:	rsbs	r1, r1, #0
   37f30:	rscs	r0, r0, #0
   37f34:	blt	37fc8 <__assert_fail@plt+0x25410>
   37f38:	b	37ff4 <__assert_fail@plt+0x2543c>
   37f3c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37f40:	ldr	r1, [r0]
   37f44:	ldr	r0, [r0, #4]
   37f48:	subs	r1, r1, #1
   37f4c:	sbc	r0, r0, #0
   37f50:	cmn	r0, #1
   37f54:	bgt	37fc8 <__assert_fail@plt+0x25410>
   37f58:	b	37ff4 <__assert_fail@plt+0x2543c>
   37f5c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37f60:	ldr	r1, [r0]
   37f64:	ldr	r0, [r0, #4]
   37f68:	rsbs	r1, r1, #0
   37f6c:	rscs	r0, r0, #0
   37f70:	blt	37fc8 <__assert_fail@plt+0x25410>
   37f74:	b	37ff4 <__assert_fail@plt+0x2543c>
   37f78:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37f7c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37f80:	ldr	r2, [r0, #-44]	; 0xffffffd4
   37f84:	ldr	r3, [r0]
   37f88:	ldr	r0, [r0, #4]
   37f8c:	mvn	ip, #0
   37f90:	str	r0, [sp, #536]	; 0x218
   37f94:	mov	r0, ip
   37f98:	str	r1, [sp, #532]	; 0x214
   37f9c:	mov	r1, ip
   37fa0:	str	r2, [sp, #528]	; 0x210
   37fa4:	mov	r2, r3
   37fa8:	ldr	r3, [sp, #536]	; 0x218
   37fac:	bl	7540c <__assert_fail@plt+0x62854>
   37fb0:	ldr	r2, [sp, #532]	; 0x214
   37fb4:	subs	r0, r0, r2
   37fb8:	ldr	r2, [sp, #528]	; 0x210
   37fbc:	sbcs	r1, r1, r2
   37fc0:	bcs	37ff4 <__assert_fail@plt+0x2543c>
   37fc4:	b	37fc8 <__assert_fail@plt+0x25410>
   37fc8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37fcc:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37fd0:	ldr	r2, [r0, #-44]	; 0xffffffd4
   37fd4:	ldr	r3, [r0]
   37fd8:	ldr	r0, [r0, #4]
   37fdc:	umull	ip, lr, r1, r3
   37fe0:	mla	r0, r1, r0, lr
   37fe4:	mla	r0, r2, r3, r0
   37fe8:	str	ip, [fp, #-1344]	; 0xfffffac0
   37fec:	str	r0, [fp, #-1340]	; 0xfffffac4
   37ff0:	b	38020 <__assert_fail@plt+0x25468>
   37ff4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37ff8:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37ffc:	ldr	r2, [r0, #-44]	; 0xffffffd4
   38000:	ldr	r3, [r0]
   38004:	ldr	r0, [r0, #4]
   38008:	umull	ip, lr, r1, r3
   3800c:	mla	r0, r1, r0, lr
   38010:	mla	r0, r2, r3, r0
   38014:	str	ip, [fp, #-1344]	; 0xfffffac0
   38018:	str	r0, [fp, #-1340]	; 0xfffffac4
   3801c:	b	38024 <__assert_fail@plt+0x2546c>
   38020:	b	3b1b8 <__assert_fail@plt+0x28600>
   38024:	b	3ae7c <__assert_fail@plt+0x282c4>
   38028:	mov	r0, #0
   3802c:	str	r0, [fp, #-1892]	; 0xfffff89c
   38030:	str	r0, [fp, #-1896]	; 0xfffff898
   38034:	str	r0, [fp, #-1884]	; 0xfffff8a4
   38038:	str	r0, [fp, #-1888]	; 0xfffff8a0
   3803c:	sub	lr, fp, #1024	; 0x400
   38040:	sub	r1, lr, #872	; 0x368
   38044:	add	r2, r1, #16
   38048:	str	r0, [fp, #-1876]	; 0xfffff8ac
   3804c:	str	r0, [fp, #-1880]	; 0xfffff8a8
   38050:	str	r0, [fp, #-1868]	; 0xfffff8b4
   38054:	str	r0, [fp, #-1872]	; 0xfffff8b0
   38058:	add	r3, r1, #32
   3805c:	str	r0, [fp, #-1860]	; 0xfffff8bc
   38060:	str	r0, [fp, #-1864]	; 0xfffff8b8
   38064:	str	r0, [fp, #-1852]	; 0xfffff8c4
   38068:	str	r0, [fp, #-1856]	; 0xfffff8c0
   3806c:	str	r0, [fp, #-1848]	; 0xfffff8c8
   38070:	sub	r0, fp, #1360	; 0x550
   38074:	add	ip, r0, #32
   38078:	vld1.64	{d16-d17}, [r3]
   3807c:	vst1.64	{d16-d17}, [ip]
   38080:	add	r3, r0, #16
   38084:	vld1.64	{d16-d17}, [r2]
   38088:	vst1.64	{d16-d17}, [r3]
   3808c:	vld1.64	{d16-d17}, [r1]
   38090:	mov	r1, #48	; 0x30
   38094:	vst1.64	{d16-d17}, [r0], r1
   38098:	ldr	r1, [sp, #1500]	; 0x5dc
   3809c:	vldr	d18, [r1, #168]	; 0xa8
   380a0:	vstr	d18, [r0]
   380a4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   380a8:	ldr	r2, [r0]
   380ac:	ldr	r0, [r0, #4]
   380b0:	str	r0, [fp, #-1340]	; 0xfffffac4
   380b4:	str	r2, [fp, #-1344]	; 0xfffffac0
   380b8:	b	3ae7c <__assert_fail@plt+0x282c4>
   380bc:	mov	r0, #0
   380c0:	str	r0, [fp, #-1948]	; 0xfffff864
   380c4:	str	r0, [fp, #-1952]	; 0xfffff860
   380c8:	str	r0, [fp, #-1940]	; 0xfffff86c
   380cc:	str	r0, [fp, #-1944]	; 0xfffff868
   380d0:	sub	r1, fp, #1952	; 0x7a0
   380d4:	add	r2, r1, #16
   380d8:	str	r0, [fp, #-1932]	; 0xfffff874
   380dc:	str	r0, [fp, #-1936]	; 0xfffff870
   380e0:	str	r0, [fp, #-1924]	; 0xfffff87c
   380e4:	str	r0, [fp, #-1928]	; 0xfffff878
   380e8:	add	r3, r1, #32
   380ec:	str	r0, [fp, #-1916]	; 0xfffff884
   380f0:	str	r0, [fp, #-1920]	; 0xfffff880
   380f4:	str	r0, [fp, #-1908]	; 0xfffff88c
   380f8:	str	r0, [fp, #-1912]	; 0xfffff888
   380fc:	str	r0, [fp, #-1904]	; 0xfffff890
   38100:	sub	r0, fp, #1360	; 0x550
   38104:	add	ip, r0, #32
   38108:	vld1.64	{d16-d17}, [r3]
   3810c:	vst1.64	{d16-d17}, [ip]
   38110:	add	r3, r0, #16
   38114:	vld1.64	{d16-d17}, [r2]
   38118:	vst1.64	{d16-d17}, [r3]
   3811c:	ldr	r2, [sp, #1500]	; 0x5dc
   38120:	vldr	d18, [r2, #112]	; 0x70
   38124:	vstr	d18, [r2, #704]	; 0x2c0
   38128:	vld1.64	{d16-d17}, [r1]
   3812c:	mov	r1, #24
   38130:	vst1.64	{d16-d17}, [r0], r1
   38134:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   38138:	ldr	r3, [r1, #-56]	; 0xffffffc8
   3813c:	ldr	r1, [r1, #-52]	; 0xffffffcc
   38140:	str	r1, [r0, #4]
   38144:	str	r3, [r0]
   38148:	b	3ae7c <__assert_fail@plt+0x282c4>
   3814c:	mov	r0, #0
   38150:	str	r0, [fp, #-2004]	; 0xfffff82c
   38154:	str	r0, [fp, #-2008]	; 0xfffff828
   38158:	str	r0, [fp, #-1996]	; 0xfffff834
   3815c:	str	r0, [fp, #-2000]	; 0xfffff830
   38160:	sub	lr, fp, #1024	; 0x400
   38164:	sub	r1, lr, #984	; 0x3d8
   38168:	add	r2, r1, #16
   3816c:	str	r0, [fp, #-1988]	; 0xfffff83c
   38170:	str	r0, [fp, #-1992]	; 0xfffff838
   38174:	str	r0, [fp, #-1980]	; 0xfffff844
   38178:	str	r0, [fp, #-1984]	; 0xfffff840
   3817c:	add	r3, r1, #32
   38180:	str	r0, [fp, #-1972]	; 0xfffff84c
   38184:	str	r0, [fp, #-1976]	; 0xfffff848
   38188:	str	r0, [fp, #-1964]	; 0xfffff854
   3818c:	str	r0, [fp, #-1968]	; 0xfffff850
   38190:	str	r0, [fp, #-1960]	; 0xfffff858
   38194:	sub	r0, fp, #1360	; 0x550
   38198:	add	ip, r0, #32
   3819c:	vld1.64	{d16-d17}, [r3]
   381a0:	vst1.64	{d16-d17}, [ip]
   381a4:	add	r3, r0, #16
   381a8:	vld1.64	{d16-d17}, [r2]
   381ac:	vst1.64	{d16-d17}, [r3]
   381b0:	ldr	r2, [sp, #1500]	; 0x5dc
   381b4:	vldr	d18, [r2, #56]	; 0x38
   381b8:	vstr	d18, [r2, #704]	; 0x2c0
   381bc:	vld1.64	{d16-d17}, [r1]
   381c0:	mov	r1, #24
   381c4:	vst1.64	{d16-d17}, [r0], r1
   381c8:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   381cc:	ldr	r3, [r1, #-48]	; 0xffffffd0
   381d0:	ldr	r1, [r1, #-44]	; 0xffffffd4
   381d4:	str	r1, [r0, #4]
   381d8:	str	r3, [r0]
   381dc:	b	3ae7c <__assert_fail@plt+0x282c4>
   381e0:	mov	r0, #0
   381e4:	str	r0, [fp, #-2060]	; 0xfffff7f4
   381e8:	str	r0, [fp, #-2064]	; 0xfffff7f0
   381ec:	str	r0, [fp, #-2052]	; 0xfffff7fc
   381f0:	str	r0, [fp, #-2056]	; 0xfffff7f8
   381f4:	sub	r1, fp, #2064	; 0x810
   381f8:	add	r2, r1, #16
   381fc:	str	r0, [fp, #-2044]	; 0xfffff804
   38200:	str	r0, [fp, #-2048]	; 0xfffff800
   38204:	str	r0, [fp, #-2036]	; 0xfffff80c
   38208:	str	r0, [fp, #-2040]	; 0xfffff808
   3820c:	add	r3, r1, #32
   38210:	str	r0, [fp, #-2028]	; 0xfffff814
   38214:	str	r0, [fp, #-2032]	; 0xfffff810
   38218:	str	r0, [fp, #-2020]	; 0xfffff81c
   3821c:	str	r0, [fp, #-2024]	; 0xfffff818
   38220:	str	r0, [fp, #-2016]	; 0xfffff820
   38224:	sub	ip, fp, #1360	; 0x550
   38228:	add	lr, ip, #32
   3822c:	vld1.64	{d16-d17}, [r3]
   38230:	vst1.64	{d16-d17}, [lr]
   38234:	add	r3, ip, #16
   38238:	vld1.64	{d16-d17}, [r2]
   3823c:	vst1.64	{d16-d17}, [r3]
   38240:	ldr	r2, [sp, #1500]	; 0x5dc
   38244:	vldr	d18, [r2]
   38248:	vstr	d18, [r2, #704]	; 0x2c0
   3824c:	vld1.64	{d16-d17}, [r1]
   38250:	mov	r1, #24
   38254:	vst1.64	{d16-d17}, [ip], r1
   38258:	str	r0, [ip, #4]
   3825c:	mov	r0, #1
   38260:	str	r0, [ip]
   38264:	b	3ae7c <__assert_fail@plt+0x282c4>
   38268:	mov	r0, #0
   3826c:	str	r0, [fp, #-2116]	; 0xfffff7bc
   38270:	str	r0, [fp, #-2120]	; 0xfffff7b8
   38274:	str	r0, [fp, #-2108]	; 0xfffff7c4
   38278:	str	r0, [fp, #-2112]	; 0xfffff7c0
   3827c:	sub	lr, fp, #2048	; 0x800
   38280:	sub	r1, lr, #72	; 0x48
   38284:	add	r2, r1, #16
   38288:	str	r0, [fp, #-2100]	; 0xfffff7cc
   3828c:	str	r0, [fp, #-2104]	; 0xfffff7c8
   38290:	str	r0, [fp, #-2092]	; 0xfffff7d4
   38294:	str	r0, [fp, #-2096]	; 0xfffff7d0
   38298:	add	r3, r1, #32
   3829c:	str	r0, [fp, #-2084]	; 0xfffff7dc
   382a0:	str	r0, [fp, #-2088]	; 0xfffff7d8
   382a4:	str	r0, [fp, #-2076]	; 0xfffff7e4
   382a8:	str	r0, [fp, #-2080]	; 0xfffff7e0
   382ac:	str	r0, [fp, #-2072]	; 0xfffff7e8
   382b0:	sub	r0, fp, #1360	; 0x550
   382b4:	add	ip, r0, #32
   382b8:	vld1.64	{d16-d17}, [r3]
   382bc:	vst1.64	{d16-d17}, [ip]
   382c0:	add	r3, r0, #16
   382c4:	vld1.64	{d16-d17}, [r2]
   382c8:	vst1.64	{d16-d17}, [r3]
   382cc:	vld1.64	{d16-d17}, [r1]
   382d0:	mov	r1, #48	; 0x30
   382d4:	vst1.64	{d16-d17}, [r0], r1
   382d8:	sub	lr, fp, #2048	; 0x800
   382dc:	vldr	d18, [lr, #-24]	; 0xffffffe8
   382e0:	vstr	d18, [r0]
   382e4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   382e8:	ldr	r1, [r0, #-56]	; 0xffffffc8
   382ec:	ldr	r0, [r0, #-52]	; 0xffffffcc
   382f0:	str	r0, [fp, #-1324]	; 0xfffffad4
   382f4:	str	r1, [fp, #-1328]	; 0xfffffad0
   382f8:	b	3ae7c <__assert_fail@plt+0x282c4>
   382fc:	mov	r0, #0
   38300:	str	r0, [fp, #-2172]	; 0xfffff784
   38304:	str	r0, [fp, #-2176]	; 0xfffff780
   38308:	str	r0, [fp, #-2164]	; 0xfffff78c
   3830c:	str	r0, [fp, #-2168]	; 0xfffff788
   38310:	sub	r1, fp, #2176	; 0x880
   38314:	add	r2, r1, #16
   38318:	str	r0, [fp, #-2156]	; 0xfffff794
   3831c:	str	r0, [fp, #-2160]	; 0xfffff790
   38320:	str	r0, [fp, #-2148]	; 0xfffff79c
   38324:	str	r0, [fp, #-2152]	; 0xfffff798
   38328:	add	r3, r1, #32
   3832c:	str	r0, [fp, #-2140]	; 0xfffff7a4
   38330:	str	r0, [fp, #-2144]	; 0xfffff7a0
   38334:	str	r0, [fp, #-2132]	; 0xfffff7ac
   38338:	str	r0, [fp, #-2136]	; 0xfffff7a8
   3833c:	str	r0, [fp, #-2128]	; 0xfffff7b0
   38340:	sub	r0, fp, #1360	; 0x550
   38344:	add	ip, r0, #32
   38348:	vld1.64	{d16-d17}, [r3]
   3834c:	vst1.64	{d16-d17}, [ip]
   38350:	add	r3, r0, #16
   38354:	vld1.64	{d16-d17}, [r2]
   38358:	vst1.64	{d16-d17}, [r3]
   3835c:	vld1.64	{d16-d17}, [r1]
   38360:	mov	r1, #48	; 0x30
   38364:	vst1.64	{d16-d17}, [r0], r1
   38368:	sub	lr, fp, #2048	; 0x800
   3836c:	vldr	d18, [lr, #-80]	; 0xffffffb0
   38370:	vstr	d18, [r0]
   38374:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38378:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3837c:	ldr	r0, [r0, #-44]	; 0xffffffd4
   38380:	str	r0, [fp, #-1324]	; 0xfffffad4
   38384:	str	r1, [fp, #-1328]	; 0xfffffad0
   38388:	b	3ae7c <__assert_fail@plt+0x282c4>
   3838c:	mov	r0, #0
   38390:	str	r0, [sp, #2188]	; 0x88c
   38394:	str	r0, [sp, #2184]	; 0x888
   38398:	str	r0, [sp, #2196]	; 0x894
   3839c:	str	r0, [sp, #2192]	; 0x890
   383a0:	add	lr, sp, #2048	; 0x800
   383a4:	add	r1, lr, #136	; 0x88
   383a8:	add	r2, r1, #16
   383ac:	str	r0, [sp, #2204]	; 0x89c
   383b0:	str	r0, [sp, #2200]	; 0x898
   383b4:	str	r0, [sp, #2212]	; 0x8a4
   383b8:	str	r0, [sp, #2208]	; 0x8a0
   383bc:	add	r3, r1, #32
   383c0:	str	r0, [sp, #2220]	; 0x8ac
   383c4:	str	r0, [sp, #2216]	; 0x8a8
   383c8:	str	r0, [sp, #2228]	; 0x8b4
   383cc:	str	r0, [sp, #2224]	; 0x8b0
   383d0:	str	r0, [sp, #2232]	; 0x8b8
   383d4:	sub	ip, fp, #1360	; 0x550
   383d8:	add	lr, ip, #32
   383dc:	vld1.64	{d16-d17}, [r3]
   383e0:	vst1.64	{d16-d17}, [lr]
   383e4:	add	r3, ip, #16
   383e8:	vld1.64	{d16-d17}, [r2]
   383ec:	vst1.64	{d16-d17}, [r3]
   383f0:	vld1.64	{d16-d17}, [r1]
   383f4:	mov	r1, #48	; 0x30
   383f8:	vst1.64	{d16-d17}, [ip], r1
   383fc:	add	lr, sp, #2048	; 0x800
   38400:	vldr	d18, [lr, #184]	; 0xb8
   38404:	vstr	d18, [ip]
   38408:	str	r0, [fp, #-1324]	; 0xfffffad4
   3840c:	mov	r0, #1
   38410:	str	r0, [fp, #-1328]	; 0xfffffad0
   38414:	b	3ae7c <__assert_fail@plt+0x282c4>
   38418:	mov	r0, #0
   3841c:	str	r0, [sp, #2132]	; 0x854
   38420:	str	r0, [sp, #2128]	; 0x850
   38424:	str	r0, [sp, #2140]	; 0x85c
   38428:	str	r0, [sp, #2136]	; 0x858
   3842c:	add	r1, sp, #2128	; 0x850
   38430:	add	r2, r1, #16
   38434:	str	r0, [sp, #2148]	; 0x864
   38438:	str	r0, [sp, #2144]	; 0x860
   3843c:	str	r0, [sp, #2156]	; 0x86c
   38440:	str	r0, [sp, #2152]	; 0x868
   38444:	add	r3, r1, #32
   38448:	str	r0, [sp, #2164]	; 0x874
   3844c:	str	r0, [sp, #2160]	; 0x870
   38450:	str	r0, [sp, #2172]	; 0x87c
   38454:	str	r0, [sp, #2168]	; 0x878
   38458:	str	r0, [sp, #2176]	; 0x880
   3845c:	sub	r0, fp, #1360	; 0x550
   38460:	add	ip, r0, #32
   38464:	vld1.64	{d16-d17}, [r3]
   38468:	vst1.64	{d16-d17}, [ip]
   3846c:	add	r3, r0, #16
   38470:	vld1.64	{d16-d17}, [r2]
   38474:	vst1.64	{d16-d17}, [r3]
   38478:	add	lr, sp, #2048	; 0x800
   3847c:	vldr	d18, [lr, #128]	; 0x80
   38480:	ldr	r2, [sp, #1500]	; 0x5dc
   38484:	vstr	d18, [r2, #704]	; 0x2c0
   38488:	vld1.64	{d16-d17}, [r1]
   3848c:	mov	r1, #40	; 0x28
   38490:	vst1.64	{d16-d17}, [r0], r1
   38494:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   38498:	ldr	r3, [r1, #-56]	; 0xffffffc8
   3849c:	ldr	r1, [r1, #-52]	; 0xffffffcc
   384a0:	str	r1, [r0, #4]
   384a4:	str	r3, [r0]
   384a8:	b	3ae7c <__assert_fail@plt+0x282c4>
   384ac:	mov	r0, #0
   384b0:	str	r0, [sp, #2076]	; 0x81c
   384b4:	str	r0, [sp, #2072]	; 0x818
   384b8:	str	r0, [sp, #2084]	; 0x824
   384bc:	str	r0, [sp, #2080]	; 0x820
   384c0:	add	lr, sp, #2048	; 0x800
   384c4:	add	r1, lr, #24
   384c8:	add	r2, r1, #16
   384cc:	str	r0, [sp, #2092]	; 0x82c
   384d0:	str	r0, [sp, #2088]	; 0x828
   384d4:	str	r0, [sp, #2100]	; 0x834
   384d8:	str	r0, [sp, #2096]	; 0x830
   384dc:	add	r3, r1, #32
   384e0:	str	r0, [sp, #2108]	; 0x83c
   384e4:	str	r0, [sp, #2104]	; 0x838
   384e8:	str	r0, [sp, #2116]	; 0x844
   384ec:	str	r0, [sp, #2112]	; 0x840
   384f0:	str	r0, [sp, #2120]	; 0x848
   384f4:	sub	r0, fp, #1360	; 0x550
   384f8:	add	ip, r0, #32
   384fc:	vld1.64	{d16-d17}, [r3]
   38500:	vst1.64	{d16-d17}, [ip]
   38504:	add	r3, r0, #16
   38508:	vld1.64	{d16-d17}, [r2]
   3850c:	vst1.64	{d16-d17}, [r3]
   38510:	add	lr, sp, #2048	; 0x800
   38514:	vldr	d18, [lr, #72]	; 0x48
   38518:	ldr	r2, [sp, #1500]	; 0x5dc
   3851c:	vstr	d18, [r2, #704]	; 0x2c0
   38520:	vld1.64	{d16-d17}, [r1]
   38524:	mov	r1, #40	; 0x28
   38528:	vst1.64	{d16-d17}, [r0], r1
   3852c:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   38530:	ldr	r3, [r1, #-48]	; 0xffffffd0
   38534:	ldr	r1, [r1, #-44]	; 0xffffffd4
   38538:	str	r1, [r0, #4]
   3853c:	str	r3, [r0]
   38540:	b	3ae7c <__assert_fail@plt+0x282c4>
   38544:	mov	r0, #0
   38548:	str	r0, [sp, #2020]	; 0x7e4
   3854c:	str	r0, [sp, #2016]	; 0x7e0
   38550:	str	r0, [sp, #2028]	; 0x7ec
   38554:	str	r0, [sp, #2024]	; 0x7e8
   38558:	add	r1, sp, #2016	; 0x7e0
   3855c:	add	r2, r1, #16
   38560:	str	r0, [sp, #2036]	; 0x7f4
   38564:	str	r0, [sp, #2032]	; 0x7f0
   38568:	str	r0, [sp, #2044]	; 0x7fc
   3856c:	str	r0, [sp, #2040]	; 0x7f8
   38570:	add	r3, r1, #32
   38574:	str	r0, [sp, #2052]	; 0x804
   38578:	str	r0, [sp, #2048]	; 0x800
   3857c:	str	r0, [sp, #2060]	; 0x80c
   38580:	str	r0, [sp, #2056]	; 0x808
   38584:	str	r0, [sp, #2064]	; 0x810
   38588:	sub	r0, fp, #1360	; 0x550
   3858c:	add	ip, r0, #32
   38590:	vld1.64	{d16-d17}, [r3]
   38594:	vst1.64	{d16-d17}, [ip]
   38598:	add	r3, r0, #16
   3859c:	vld1.64	{d16-d17}, [r2]
   385a0:	vst1.64	{d16-d17}, [r3]
   385a4:	add	lr, sp, #2048	; 0x800
   385a8:	vldr	d18, [lr, #16]
   385ac:	ldr	r2, [sp, #1500]	; 0x5dc
   385b0:	vstr	d18, [r2, #704]	; 0x2c0
   385b4:	vld1.64	{d16-d17}, [r1]
   385b8:	mov	r1, #40	; 0x28
   385bc:	vst1.64	{d16-d17}, [r0], r1
   385c0:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   385c4:	ldr	r1, [r1, #-56]	; 0xffffffc8
   385c8:	asr	r3, r1, #31
   385cc:	str	r1, [r0]
   385d0:	str	r3, [r0, #4]
   385d4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   385d8:	mvn	r1, #51	; 0x33
   385dc:	add	r0, r0, r1
   385e0:	ldr	r0, [r0]
   385e4:	str	r0, [fp, #-1312]	; 0xfffffae0
   385e8:	b	3ae7c <__assert_fail@plt+0x282c4>
   385ec:	mov	r0, #0
   385f0:	str	r0, [sp, #1964]	; 0x7ac
   385f4:	str	r0, [sp, #1960]	; 0x7a8
   385f8:	str	r0, [sp, #1972]	; 0x7b4
   385fc:	str	r0, [sp, #1968]	; 0x7b0
   38600:	add	lr, sp, #1024	; 0x400
   38604:	add	r1, lr, #936	; 0x3a8
   38608:	add	r2, r1, #16
   3860c:	str	r0, [sp, #1980]	; 0x7bc
   38610:	str	r0, [sp, #1976]	; 0x7b8
   38614:	str	r0, [sp, #1988]	; 0x7c4
   38618:	str	r0, [sp, #1984]	; 0x7c0
   3861c:	add	r3, r1, #32
   38620:	str	r0, [sp, #1996]	; 0x7cc
   38624:	str	r0, [sp, #1992]	; 0x7c8
   38628:	str	r0, [sp, #2004]	; 0x7d4
   3862c:	str	r0, [sp, #2000]	; 0x7d0
   38630:	str	r0, [sp, #2008]	; 0x7d8
   38634:	sub	r0, fp, #1360	; 0x550
   38638:	add	ip, r0, #32
   3863c:	vld1.64	{d16-d17}, [r3]
   38640:	vst1.64	{d16-d17}, [ip]
   38644:	add	r3, r0, #16
   38648:	vld1.64	{d16-d17}, [r2]
   3864c:	vst1.64	{d16-d17}, [r3]
   38650:	add	lr, sp, #1024	; 0x400
   38654:	vldr	d18, [lr, #984]	; 0x3d8
   38658:	ldr	r2, [sp, #1500]	; 0x5dc
   3865c:	vstr	d18, [r2, #704]	; 0x2c0
   38660:	vld1.64	{d16-d17}, [r1]
   38664:	mov	r1, #40	; 0x28
   38668:	vst1.64	{d16-d17}, [r0], r1
   3866c:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   38670:	ldr	r1, [r1, #-56]	; 0xffffffc8
   38674:	asr	r3, r1, #31
   38678:	str	r1, [r0]
   3867c:	str	r3, [r0, #4]
   38680:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38684:	mvn	r1, #51	; 0x33
   38688:	add	r0, r0, r1
   3868c:	ldr	r0, [r0]
   38690:	str	r0, [fp, #-1312]	; 0xfffffae0
   38694:	b	3ae7c <__assert_fail@plt+0x282c4>
   38698:	mov	r0, #0
   3869c:	str	r0, [sp, #1908]	; 0x774
   386a0:	str	r0, [sp, #1904]	; 0x770
   386a4:	str	r0, [sp, #1916]	; 0x77c
   386a8:	str	r0, [sp, #1912]	; 0x778
   386ac:	add	r1, sp, #1904	; 0x770
   386b0:	add	r2, r1, #16
   386b4:	str	r0, [sp, #1924]	; 0x784
   386b8:	str	r0, [sp, #1920]	; 0x780
   386bc:	str	r0, [sp, #1932]	; 0x78c
   386c0:	str	r0, [sp, #1928]	; 0x788
   386c4:	add	r3, r1, #32
   386c8:	str	r0, [sp, #1940]	; 0x794
   386cc:	str	r0, [sp, #1936]	; 0x790
   386d0:	str	r0, [sp, #1948]	; 0x79c
   386d4:	str	r0, [sp, #1944]	; 0x798
   386d8:	str	r0, [sp, #1952]	; 0x7a0
   386dc:	sub	ip, fp, #1360	; 0x550
   386e0:	add	lr, ip, #32
   386e4:	vld1.64	{d16-d17}, [r3]
   386e8:	vst1.64	{d16-d17}, [lr]
   386ec:	add	r3, ip, #16
   386f0:	vld1.64	{d16-d17}, [r2]
   386f4:	vst1.64	{d16-d17}, [r3]
   386f8:	add	lr, sp, #1024	; 0x400
   386fc:	vldr	d18, [lr, #928]	; 0x3a0
   38700:	ldr	r2, [sp, #1500]	; 0x5dc
   38704:	vstr	d18, [r2, #704]	; 0x2c0
   38708:	vld1.64	{d16-d17}, [r1]
   3870c:	mov	r1, #40	; 0x28
   38710:	vst1.64	{d16-d17}, [ip], r1
   38714:	str	r0, [ip, #4]
   38718:	mov	r0, #1
   3871c:	str	r0, [ip]
   38720:	b	3ae7c <__assert_fail@plt+0x282c4>
   38724:	mov	r0, #0
   38728:	str	r0, [sp, #1852]	; 0x73c
   3872c:	str	r0, [sp, #1848]	; 0x738
   38730:	str	r0, [sp, #1860]	; 0x744
   38734:	str	r0, [sp, #1856]	; 0x740
   38738:	add	lr, sp, #1024	; 0x400
   3873c:	add	r1, lr, #824	; 0x338
   38740:	add	r2, r1, #16
   38744:	str	r0, [sp, #1868]	; 0x74c
   38748:	str	r0, [sp, #1864]	; 0x748
   3874c:	str	r0, [sp, #1876]	; 0x754
   38750:	str	r0, [sp, #1872]	; 0x750
   38754:	add	r3, r1, #32
   38758:	str	r0, [sp, #1884]	; 0x75c
   3875c:	str	r0, [sp, #1880]	; 0x758
   38760:	str	r0, [sp, #1892]	; 0x764
   38764:	str	r0, [sp, #1888]	; 0x760
   38768:	str	r0, [sp, #1896]	; 0x768
   3876c:	sub	r0, fp, #1360	; 0x550
   38770:	add	ip, r0, #32
   38774:	vld1.64	{d16-d17}, [r3]
   38778:	vst1.64	{d16-d17}, [ip]
   3877c:	add	r3, r0, #16
   38780:	vld1.64	{d16-d17}, [r2]
   38784:	vst1.64	{d16-d17}, [r3]
   38788:	vld1.64	{d16-d17}, [r1]
   3878c:	mov	r1, #48	; 0x30
   38790:	vst1.64	{d16-d17}, [r0], r1
   38794:	add	lr, sp, #1024	; 0x400
   38798:	vldr	d18, [lr, #872]	; 0x368
   3879c:	vstr	d18, [r0]
   387a0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   387a4:	ldr	r1, [r0, #-48]	; 0xffffffd0
   387a8:	ldr	r0, [r0, #-44]	; 0xffffffd4
   387ac:	str	r0, [fp, #-1356]	; 0xfffffab4
   387b0:	str	r1, [fp, #-1360]	; 0xfffffab0
   387b4:	b	3ae7c <__assert_fail@plt+0x282c4>
   387b8:	mov	r0, #0
   387bc:	str	r0, [sp, #1796]	; 0x704
   387c0:	str	r0, [sp, #1792]	; 0x700
   387c4:	str	r0, [sp, #1804]	; 0x70c
   387c8:	str	r0, [sp, #1800]	; 0x708
   387cc:	add	r1, sp, #1792	; 0x700
   387d0:	add	r2, r1, #16
   387d4:	str	r0, [sp, #1812]	; 0x714
   387d8:	str	r0, [sp, #1808]	; 0x710
   387dc:	str	r0, [sp, #1820]	; 0x71c
   387e0:	str	r0, [sp, #1816]	; 0x718
   387e4:	add	r3, r1, #32
   387e8:	str	r0, [sp, #1828]	; 0x724
   387ec:	str	r0, [sp, #1824]	; 0x720
   387f0:	str	r0, [sp, #1836]	; 0x72c
   387f4:	str	r0, [sp, #1832]	; 0x728
   387f8:	str	r0, [sp, #1840]	; 0x730
   387fc:	sub	r0, fp, #1360	; 0x550
   38800:	add	ip, r0, #32
   38804:	vld1.64	{d16-d17}, [r3]
   38808:	vst1.64	{d16-d17}, [ip]
   3880c:	add	r3, r0, #16
   38810:	vld1.64	{d16-d17}, [r2]
   38814:	vst1.64	{d16-d17}, [r3]
   38818:	add	lr, sp, #1024	; 0x400
   3881c:	vldr	d18, [lr, #816]	; 0x330
   38820:	ldr	r2, [sp, #1500]	; 0x5dc
   38824:	vstr	d18, [r2, #704]	; 0x2c0
   38828:	vld1.64	{d16-d17}, [r1]
   3882c:	mov	r1, #8
   38830:	vst1.64	{d16-d17}, [r0], r1
   38834:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   38838:	ldr	r3, [r1, #-48]	; 0xffffffd0
   3883c:	ldr	r1, [r1, #-44]	; 0xffffffd4
   38840:	str	r1, [r0, #4]
   38844:	str	r3, [r0]
   38848:	b	3ae7c <__assert_fail@plt+0x282c4>
   3884c:	sub	r0, fp, #1360	; 0x550
   38850:	mov	r1, #0
   38854:	str	r1, [sp, #1740]	; 0x6cc
   38858:	str	r1, [sp, #1736]	; 0x6c8
   3885c:	str	r1, [sp, #1748]	; 0x6d4
   38860:	str	r1, [sp, #1744]	; 0x6d0
   38864:	str	r1, [sp, #1756]	; 0x6dc
   38868:	str	r1, [sp, #1752]	; 0x6d8
   3886c:	str	r1, [sp, #1764]	; 0x6e4
   38870:	str	r1, [sp, #1760]	; 0x6e0
   38874:	str	r1, [sp, #1772]	; 0x6ec
   38878:	str	r1, [sp, #1768]	; 0x6e8
   3887c:	str	r1, [sp, #1780]	; 0x6f4
   38880:	str	r1, [sp, #1776]	; 0x6f0
   38884:	movw	r1, #0
   38888:	str	r1, [sp, #1784]	; 0x6f8
   3888c:	add	lr, sp, #1024	; 0x400
   38890:	add	r1, lr, #712	; 0x2c8
   38894:	movw	r2, #56	; 0x38
   38898:	bl	125c4 <memcpy@plt>
   3889c:	b	38f60 <__assert_fail@plt+0x263a8>
   388a0:	b	388a4 <__assert_fail@plt+0x25cec>
   388a4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   388a8:	ldr	r0, [r0, #4]
   388ac:	cmn	r0, #1
   388b0:	bgt	38ab4 <__assert_fail@plt+0x25efc>
   388b4:	b	388b8 <__assert_fail@plt+0x25d00>
   388b8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   388bc:	ldr	r0, [r0, #-44]	; 0xffffffd4
   388c0:	cmn	r0, #1
   388c4:	bgt	389d0 <__assert_fail@plt+0x25e18>
   388c8:	b	388cc <__assert_fail@plt+0x25d14>
   388cc:	b	388d0 <__assert_fail@plt+0x25d18>
   388d0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   388d4:	ldr	r1, [r0, #-48]	; 0xffffffd0
   388d8:	ldr	r2, [r0, #-44]	; 0xffffffd4
   388dc:	ldr	r3, [r0]
   388e0:	ldr	r0, [r0, #4]
   388e4:	mov	ip, #127	; 0x7f
   388e8:	mov	lr, #0
   388ec:	str	r0, [sp, #524]	; 0x20c
   388f0:	mov	r0, ip
   388f4:	str	r1, [sp, #520]	; 0x208
   388f8:	mov	r1, lr
   388fc:	str	r2, [sp, #516]	; 0x204
   38900:	mov	r2, r3
   38904:	ldr	r3, [sp, #524]	; 0x20c
   38908:	bl	75338 <__assert_fail@plt+0x62780>
   3890c:	ldr	r2, [sp, #520]	; 0x208
   38910:	subs	r0, r2, r0
   38914:	ldr	r2, [sp, #516]	; 0x204
   38918:	sbcs	r1, r2, r1
   3891c:	blt	38bf8 <__assert_fail@plt+0x26040>
   38920:	b	38c1c <__assert_fail@plt+0x26064>
   38924:	b	38928 <__assert_fail@plt+0x25d70>
   38928:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3892c:	ldr	r1, [r0]
   38930:	ldr	r0, [r0, #4]
   38934:	eor	r0, r0, #-2147483648	; 0x80000000
   38938:	orr	r0, r1, r0
   3893c:	cmp	r0, #0
   38940:	beq	38964 <__assert_fail@plt+0x25dac>
   38944:	b	38978 <__assert_fail@plt+0x25dc0>
   38948:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3894c:	ldr	r1, [r0]
   38950:	ldr	r0, [r0, #4]
   38954:	subs	r1, r1, #1
   38958:	sbcs	r0, r0, #0
   3895c:	blt	38978 <__assert_fail@plt+0x25dc0>
   38960:	b	38964 <__assert_fail@plt+0x25dac>
   38964:	mov	r0, #0
   38968:	mov	r1, r0
   3896c:	str	r1, [sp, #512]	; 0x200
   38970:	str	r0, [sp, #508]	; 0x1fc
   38974:	b	389a4 <__assert_fail@plt+0x25dec>
   38978:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3897c:	ldr	r1, [r0]
   38980:	ldr	r0, [r0, #4]
   38984:	rsbs	r2, r1, #0
   38988:	rsc	r3, r0, #0
   3898c:	mov	r0, #127	; 0x7f
   38990:	mov	r1, #0
   38994:	bl	75338 <__assert_fail@plt+0x62780>
   38998:	str	r0, [sp, #512]	; 0x200
   3899c:	str	r1, [sp, #508]	; 0x1fc
   389a0:	b	389a4 <__assert_fail@plt+0x25dec>
   389a4:	ldr	r0, [sp, #508]	; 0x1fc
   389a8:	ldr	r1, [sp, #512]	; 0x200
   389ac:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   389b0:	ldr	r3, [r2, #-48]	; 0xffffffd0
   389b4:	ldr	r2, [r2, #-44]	; 0xffffffd4
   389b8:	mvn	r2, r2
   389bc:	mvn	r3, r3
   389c0:	subs	r1, r3, r1
   389c4:	sbcs	r0, r2, r0
   389c8:	bge	38bf8 <__assert_fail@plt+0x26040>
   389cc:	b	38c1c <__assert_fail@plt+0x26064>
   389d0:	b	389d4 <__assert_fail@plt+0x25e1c>
   389d4:	b	38a60 <__assert_fail@plt+0x25ea8>
   389d8:	b	38a60 <__assert_fail@plt+0x25ea8>
   389dc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   389e0:	ldr	r1, [r0]
   389e4:	ldr	r0, [r0, #4]
   389e8:	and	r0, r1, r0
   389ec:	cmn	r0, #1
   389f0:	bne	38a60 <__assert_fail@plt+0x25ea8>
   389f4:	b	389f8 <__assert_fail@plt+0x25e40>
   389f8:	b	389fc <__assert_fail@plt+0x25e44>
   389fc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38a00:	ldr	r1, [r0, #-48]	; 0xffffffd0
   38a04:	ldr	r0, [r0, #-44]	; 0xffffffd4
   38a08:	subs	r1, r1, #128	; 0x80
   38a0c:	sbc	r0, r0, #0
   38a10:	rsbs	r1, r1, #0
   38a14:	rscs	r0, r0, #0
   38a18:	blt	38bf8 <__assert_fail@plt+0x26040>
   38a1c:	b	38c1c <__assert_fail@plt+0x26064>
   38a20:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38a24:	ldr	r1, [r0, #-48]	; 0xffffffd0
   38a28:	ldr	r0, [r0, #-44]	; 0xffffffd4
   38a2c:	subs	r1, r1, #1
   38a30:	sbcs	r0, r0, #0
   38a34:	blt	38c1c <__assert_fail@plt+0x26064>
   38a38:	b	38a3c <__assert_fail@plt+0x25e84>
   38a3c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38a40:	ldr	r1, [r0, #-48]	; 0xffffffd0
   38a44:	ldr	r0, [r0, #-44]	; 0xffffffd4
   38a48:	subs	r1, r1, #1
   38a4c:	sbc	r0, r0, #0
   38a50:	rsbs	r1, r1, #127	; 0x7f
   38a54:	rscs	r0, r0, #0
   38a58:	blt	38bf8 <__assert_fail@plt+0x26040>
   38a5c:	b	38c1c <__assert_fail@plt+0x26064>
   38a60:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38a64:	ldr	r1, [r0, #-48]	; 0xffffffd0
   38a68:	ldr	r2, [r0, #-44]	; 0xffffffd4
   38a6c:	ldr	r3, [r0]
   38a70:	ldr	r0, [r0, #4]
   38a74:	mvn	ip, #127	; 0x7f
   38a78:	mvn	lr, #0
   38a7c:	str	r0, [sp, #504]	; 0x1f8
   38a80:	mov	r0, ip
   38a84:	str	r1, [sp, #500]	; 0x1f4
   38a88:	mov	r1, lr
   38a8c:	str	r2, [sp, #496]	; 0x1f0
   38a90:	mov	r2, r3
   38a94:	ldr	r3, [sp, #504]	; 0x1f8
   38a98:	bl	75338 <__assert_fail@plt+0x62780>
   38a9c:	ldr	r2, [sp, #500]	; 0x1f4
   38aa0:	subs	r0, r0, r2
   38aa4:	ldr	r2, [sp, #496]	; 0x1f0
   38aa8:	sbcs	r1, r1, r2
   38aac:	blt	38bf8 <__assert_fail@plt+0x26040>
   38ab0:	b	38c1c <__assert_fail@plt+0x26064>
   38ab4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38ab8:	ldr	r1, [r0]
   38abc:	ldr	r0, [r0, #4]
   38ac0:	orr	r0, r1, r0
   38ac4:	cmp	r0, #0
   38ac8:	bne	38ad4 <__assert_fail@plt+0x25f1c>
   38acc:	b	38ad0 <__assert_fail@plt+0x25f18>
   38ad0:	b	38c1c <__assert_fail@plt+0x26064>
   38ad4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38ad8:	ldr	r0, [r0, #-44]	; 0xffffffd4
   38adc:	cmn	r0, #1
   38ae0:	bgt	38ba4 <__assert_fail@plt+0x25fec>
   38ae4:	b	38ae8 <__assert_fail@plt+0x25f30>
   38ae8:	b	38aec <__assert_fail@plt+0x25f34>
   38aec:	b	38b5c <__assert_fail@plt+0x25fa4>
   38af0:	b	38b5c <__assert_fail@plt+0x25fa4>
   38af4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38af8:	ldr	r1, [r0, #-48]	; 0xffffffd0
   38afc:	ldr	r0, [r0, #-44]	; 0xffffffd4
   38b00:	and	r0, r1, r0
   38b04:	cmn	r0, #1
   38b08:	bne	38b5c <__assert_fail@plt+0x25fa4>
   38b0c:	b	38b10 <__assert_fail@plt+0x25f58>
   38b10:	b	38b14 <__assert_fail@plt+0x25f5c>
   38b14:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38b18:	ldr	r1, [r0]
   38b1c:	ldr	r0, [r0, #4]
   38b20:	subs	r1, r1, #128	; 0x80
   38b24:	sbc	r0, r0, #0
   38b28:	rsbs	r1, r1, #0
   38b2c:	rscs	r0, r0, #0
   38b30:	blt	38bf8 <__assert_fail@plt+0x26040>
   38b34:	b	38c1c <__assert_fail@plt+0x26064>
   38b38:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38b3c:	ldr	r1, [r0]
   38b40:	ldr	r0, [r0, #4]
   38b44:	subs	r1, r1, #1
   38b48:	sbc	r0, r0, #0
   38b4c:	rsbs	r1, r1, #127	; 0x7f
   38b50:	rscs	r0, r0, #0
   38b54:	blt	38bf8 <__assert_fail@plt+0x26040>
   38b58:	b	38c1c <__assert_fail@plt+0x26064>
   38b5c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38b60:	ldr	r2, [r0, #-48]	; 0xffffffd0
   38b64:	ldr	r3, [r0, #-44]	; 0xffffffd4
   38b68:	ldr	r1, [r0]
   38b6c:	ldr	r0, [r0, #4]
   38b70:	mvn	ip, #127	; 0x7f
   38b74:	mvn	lr, #0
   38b78:	str	r0, [sp, #492]	; 0x1ec
   38b7c:	mov	r0, ip
   38b80:	str	r1, [sp, #488]	; 0x1e8
   38b84:	mov	r1, lr
   38b88:	bl	75338 <__assert_fail@plt+0x62780>
   38b8c:	ldr	r2, [sp, #488]	; 0x1e8
   38b90:	subs	r0, r0, r2
   38b94:	ldr	r2, [sp, #492]	; 0x1ec
   38b98:	sbcs	r1, r1, r2
   38b9c:	blt	38bf8 <__assert_fail@plt+0x26040>
   38ba0:	b	38c1c <__assert_fail@plt+0x26064>
   38ba4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38ba8:	ldr	r1, [r0, #-48]	; 0xffffffd0
   38bac:	ldr	r2, [r0, #-44]	; 0xffffffd4
   38bb0:	ldr	r3, [r0]
   38bb4:	ldr	r0, [r0, #4]
   38bb8:	mov	ip, #127	; 0x7f
   38bbc:	mov	lr, #0
   38bc0:	str	r0, [sp, #484]	; 0x1e4
   38bc4:	mov	r0, ip
   38bc8:	str	r1, [sp, #480]	; 0x1e0
   38bcc:	mov	r1, lr
   38bd0:	str	r2, [sp, #476]	; 0x1dc
   38bd4:	mov	r2, r3
   38bd8:	ldr	r3, [sp, #484]	; 0x1e4
   38bdc:	bl	75338 <__assert_fail@plt+0x62780>
   38be0:	ldr	r2, [sp, #480]	; 0x1e0
   38be4:	subs	r0, r0, r2
   38be8:	ldr	r2, [sp, #476]	; 0x1dc
   38bec:	sbcs	r1, r1, r2
   38bf0:	bge	38c1c <__assert_fail@plt+0x26064>
   38bf4:	b	38bf8 <__assert_fail@plt+0x26040>
   38bf8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38bfc:	ldr	r1, [r0, #-48]	; 0xffffffd0
   38c00:	ldr	r0, [r0]
   38c04:	mul	r0, r1, r0
   38c08:	sxtb	r0, r0
   38c0c:	asr	r1, r0, #31
   38c10:	str	r0, [fp, #-1344]	; 0xfffffac0
   38c14:	str	r1, [fp, #-1340]	; 0xfffffac4
   38c18:	b	3aa40 <__assert_fail@plt+0x27e88>
   38c1c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38c20:	ldr	r1, [r0, #-48]	; 0xffffffd0
   38c24:	ldr	r0, [r0]
   38c28:	mul	r0, r1, r0
   38c2c:	sxtb	r0, r0
   38c30:	asr	r1, r0, #31
   38c34:	str	r0, [fp, #-1344]	; 0xfffffac0
   38c38:	str	r1, [fp, #-1340]	; 0xfffffac4
   38c3c:	b	3aa44 <__assert_fail@plt+0x27e8c>
   38c40:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38c44:	ldr	r0, [r0, #4]
   38c48:	cmn	r0, #1
   38c4c:	bgt	38e0c <__assert_fail@plt+0x26254>
   38c50:	b	38c54 <__assert_fail@plt+0x2609c>
   38c54:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38c58:	ldr	r0, [r0, #-44]	; 0xffffffd4
   38c5c:	cmn	r0, #1
   38c60:	bgt	38d6c <__assert_fail@plt+0x261b4>
   38c64:	b	38c68 <__assert_fail@plt+0x260b0>
   38c68:	b	38c6c <__assert_fail@plt+0x260b4>
   38c6c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38c70:	ldr	r1, [r0, #-48]	; 0xffffffd0
   38c74:	ldr	r2, [r0, #-44]	; 0xffffffd4
   38c78:	ldr	r3, [r0]
   38c7c:	ldr	r0, [r0, #4]
   38c80:	mov	ip, #255	; 0xff
   38c84:	mov	lr, #0
   38c88:	str	r0, [sp, #472]	; 0x1d8
   38c8c:	mov	r0, ip
   38c90:	str	r1, [sp, #468]	; 0x1d4
   38c94:	mov	r1, lr
   38c98:	str	r2, [sp, #464]	; 0x1d0
   38c9c:	mov	r2, r3
   38ca0:	ldr	r3, [sp, #472]	; 0x1d8
   38ca4:	bl	75338 <__assert_fail@plt+0x62780>
   38ca8:	ldr	r2, [sp, #468]	; 0x1d4
   38cac:	subs	r0, r2, r0
   38cb0:	ldr	r2, [sp, #464]	; 0x1d0
   38cb4:	sbcs	r1, r2, r1
   38cb8:	blt	38f18 <__assert_fail@plt+0x26360>
   38cbc:	b	38f3c <__assert_fail@plt+0x26384>
   38cc0:	b	38cc4 <__assert_fail@plt+0x2610c>
   38cc4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38cc8:	ldr	r1, [r0]
   38ccc:	ldr	r0, [r0, #4]
   38cd0:	eor	r0, r0, #-2147483648	; 0x80000000
   38cd4:	orr	r0, r1, r0
   38cd8:	cmp	r0, #0
   38cdc:	beq	38d00 <__assert_fail@plt+0x26148>
   38ce0:	b	38d14 <__assert_fail@plt+0x2615c>
   38ce4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38ce8:	ldr	r1, [r0]
   38cec:	ldr	r0, [r0, #4]
   38cf0:	subs	r1, r1, #1
   38cf4:	sbcs	r0, r0, #0
   38cf8:	blt	38d14 <__assert_fail@plt+0x2615c>
   38cfc:	b	38d00 <__assert_fail@plt+0x26148>
   38d00:	mov	r0, #0
   38d04:	mov	r1, r0
   38d08:	str	r1, [sp, #460]	; 0x1cc
   38d0c:	str	r0, [sp, #456]	; 0x1c8
   38d10:	b	38d40 <__assert_fail@plt+0x26188>
   38d14:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38d18:	ldr	r1, [r0]
   38d1c:	ldr	r0, [r0, #4]
   38d20:	rsbs	r2, r1, #0
   38d24:	rsc	r3, r0, #0
   38d28:	mov	r0, #255	; 0xff
   38d2c:	mov	r1, #0
   38d30:	bl	75338 <__assert_fail@plt+0x62780>
   38d34:	str	r0, [sp, #460]	; 0x1cc
   38d38:	str	r1, [sp, #456]	; 0x1c8
   38d3c:	b	38d40 <__assert_fail@plt+0x26188>
   38d40:	ldr	r0, [sp, #456]	; 0x1c8
   38d44:	ldr	r1, [sp, #460]	; 0x1cc
   38d48:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   38d4c:	ldr	r3, [r2, #-48]	; 0xffffffd0
   38d50:	ldr	r2, [r2, #-44]	; 0xffffffd4
   38d54:	mvn	r2, r2
   38d58:	mvn	r3, r3
   38d5c:	subs	r1, r3, r1
   38d60:	sbcs	r0, r2, r0
   38d64:	bge	38f18 <__assert_fail@plt+0x26360>
   38d68:	b	38f3c <__assert_fail@plt+0x26384>
   38d6c:	b	38d70 <__assert_fail@plt+0x261b8>
   38d70:	b	38df0 <__assert_fail@plt+0x26238>
   38d74:	b	38df0 <__assert_fail@plt+0x26238>
   38d78:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38d7c:	ldr	r1, [r0]
   38d80:	ldr	r0, [r0, #4]
   38d84:	and	r0, r1, r0
   38d88:	cmn	r0, #1
   38d8c:	bne	38df0 <__assert_fail@plt+0x26238>
   38d90:	b	38d94 <__assert_fail@plt+0x261dc>
   38d94:	b	38d98 <__assert_fail@plt+0x261e0>
   38d98:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38d9c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   38da0:	ldr	r0, [r0, #-44]	; 0xffffffd4
   38da4:	rsbs	r1, r1, #0
   38da8:	rscs	r0, r0, #0
   38dac:	blt	38f18 <__assert_fail@plt+0x26360>
   38db0:	b	38f3c <__assert_fail@plt+0x26384>
   38db4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38db8:	ldr	r1, [r0, #-48]	; 0xffffffd0
   38dbc:	ldr	r0, [r0, #-44]	; 0xffffffd4
   38dc0:	subs	r1, r1, #1
   38dc4:	sbcs	r0, r0, #0
   38dc8:	blt	38f3c <__assert_fail@plt+0x26384>
   38dcc:	b	38dd0 <__assert_fail@plt+0x26218>
   38dd0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38dd4:	ldr	r1, [r0, #-48]	; 0xffffffd0
   38dd8:	ldr	r0, [r0, #-44]	; 0xffffffd4
   38ddc:	subs	r1, r1, #1
   38de0:	sbc	r0, r0, #0
   38de4:	cmn	r0, #1
   38de8:	bgt	38f18 <__assert_fail@plt+0x26360>
   38dec:	b	38f3c <__assert_fail@plt+0x26384>
   38df0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38df4:	ldr	r1, [r0, #-48]	; 0xffffffd0
   38df8:	ldr	r0, [r0, #-44]	; 0xffffffd4
   38dfc:	rsbs	r1, r1, #0
   38e00:	rscs	r0, r0, #0
   38e04:	blt	38f18 <__assert_fail@plt+0x26360>
   38e08:	b	38f3c <__assert_fail@plt+0x26384>
   38e0c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38e10:	ldr	r1, [r0]
   38e14:	ldr	r0, [r0, #4]
   38e18:	orr	r0, r1, r0
   38e1c:	cmp	r0, #0
   38e20:	bne	38e2c <__assert_fail@plt+0x26274>
   38e24:	b	38e28 <__assert_fail@plt+0x26270>
   38e28:	b	38f3c <__assert_fail@plt+0x26384>
   38e2c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38e30:	ldr	r0, [r0, #-44]	; 0xffffffd4
   38e34:	cmn	r0, #1
   38e38:	bgt	38ec4 <__assert_fail@plt+0x2630c>
   38e3c:	b	38e40 <__assert_fail@plt+0x26288>
   38e40:	b	38e44 <__assert_fail@plt+0x2628c>
   38e44:	b	38ea8 <__assert_fail@plt+0x262f0>
   38e48:	b	38ea8 <__assert_fail@plt+0x262f0>
   38e4c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38e50:	ldr	r1, [r0, #-48]	; 0xffffffd0
   38e54:	ldr	r0, [r0, #-44]	; 0xffffffd4
   38e58:	and	r0, r1, r0
   38e5c:	cmn	r0, #1
   38e60:	bne	38ea8 <__assert_fail@plt+0x262f0>
   38e64:	b	38e68 <__assert_fail@plt+0x262b0>
   38e68:	b	38e6c <__assert_fail@plt+0x262b4>
   38e6c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38e70:	ldr	r1, [r0]
   38e74:	ldr	r0, [r0, #4]
   38e78:	rsbs	r1, r1, #0
   38e7c:	rscs	r0, r0, #0
   38e80:	blt	38f18 <__assert_fail@plt+0x26360>
   38e84:	b	38f3c <__assert_fail@plt+0x26384>
   38e88:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38e8c:	ldr	r1, [r0]
   38e90:	ldr	r0, [r0, #4]
   38e94:	subs	r1, r1, #1
   38e98:	sbc	r0, r0, #0
   38e9c:	cmn	r0, #1
   38ea0:	bgt	38f18 <__assert_fail@plt+0x26360>
   38ea4:	b	38f3c <__assert_fail@plt+0x26384>
   38ea8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38eac:	ldr	r1, [r0]
   38eb0:	ldr	r0, [r0, #4]
   38eb4:	rsbs	r1, r1, #0
   38eb8:	rscs	r0, r0, #0
   38ebc:	blt	38f18 <__assert_fail@plt+0x26360>
   38ec0:	b	38f3c <__assert_fail@plt+0x26384>
   38ec4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38ec8:	ldr	r1, [r0, #-48]	; 0xffffffd0
   38ecc:	ldr	r2, [r0, #-44]	; 0xffffffd4
   38ed0:	ldr	r3, [r0]
   38ed4:	ldr	r0, [r0, #4]
   38ed8:	mov	ip, #255	; 0xff
   38edc:	mov	lr, #0
   38ee0:	str	r0, [sp, #452]	; 0x1c4
   38ee4:	mov	r0, ip
   38ee8:	str	r1, [sp, #448]	; 0x1c0
   38eec:	mov	r1, lr
   38ef0:	str	r2, [sp, #444]	; 0x1bc
   38ef4:	mov	r2, r3
   38ef8:	ldr	r3, [sp, #452]	; 0x1c4
   38efc:	bl	75338 <__assert_fail@plt+0x62780>
   38f00:	ldr	r2, [sp, #448]	; 0x1c0
   38f04:	subs	r0, r0, r2
   38f08:	ldr	r2, [sp, #444]	; 0x1bc
   38f0c:	sbcs	r1, r1, r2
   38f10:	bge	38f3c <__assert_fail@plt+0x26384>
   38f14:	b	38f18 <__assert_fail@plt+0x26360>
   38f18:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38f1c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   38f20:	ldr	r0, [r0]
   38f24:	mul	r0, r1, r0
   38f28:	uxtb	r0, r0
   38f2c:	mov	r1, #0
   38f30:	str	r1, [fp, #-1340]	; 0xfffffac4
   38f34:	str	r0, [fp, #-1344]	; 0xfffffac0
   38f38:	b	3aa40 <__assert_fail@plt+0x27e88>
   38f3c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38f40:	ldr	r1, [r0, #-48]	; 0xffffffd0
   38f44:	ldr	r0, [r0]
   38f48:	mul	r0, r1, r0
   38f4c:	uxtb	r0, r0
   38f50:	mov	r1, #0
   38f54:	str	r1, [fp, #-1340]	; 0xfffffac4
   38f58:	str	r0, [fp, #-1344]	; 0xfffffac0
   38f5c:	b	3aa44 <__assert_fail@plt+0x27e8c>
   38f60:	b	39634 <__assert_fail@plt+0x26a7c>
   38f64:	b	38f68 <__assert_fail@plt+0x263b0>
   38f68:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38f6c:	ldr	r0, [r0, #4]
   38f70:	cmn	r0, #1
   38f74:	bgt	39180 <__assert_fail@plt+0x265c8>
   38f78:	b	38f7c <__assert_fail@plt+0x263c4>
   38f7c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38f80:	ldr	r0, [r0, #-44]	; 0xffffffd4
   38f84:	cmn	r0, #1
   38f88:	bgt	39094 <__assert_fail@plt+0x264dc>
   38f8c:	b	38f90 <__assert_fail@plt+0x263d8>
   38f90:	b	38f94 <__assert_fail@plt+0x263dc>
   38f94:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38f98:	ldr	r1, [r0, #-48]	; 0xffffffd0
   38f9c:	ldr	r2, [r0, #-44]	; 0xffffffd4
   38fa0:	ldr	r3, [r0]
   38fa4:	ldr	r0, [r0, #4]
   38fa8:	movw	ip, #32767	; 0x7fff
   38fac:	mov	lr, #0
   38fb0:	str	r0, [sp, #440]	; 0x1b8
   38fb4:	mov	r0, ip
   38fb8:	str	r1, [sp, #436]	; 0x1b4
   38fbc:	mov	r1, lr
   38fc0:	str	r2, [sp, #432]	; 0x1b0
   38fc4:	mov	r2, r3
   38fc8:	ldr	r3, [sp, #440]	; 0x1b8
   38fcc:	bl	75338 <__assert_fail@plt+0x62780>
   38fd0:	ldr	r2, [sp, #436]	; 0x1b4
   38fd4:	subs	r0, r2, r0
   38fd8:	ldr	r2, [sp, #432]	; 0x1b0
   38fdc:	sbcs	r1, r2, r1
   38fe0:	blt	392cc <__assert_fail@plt+0x26714>
   38fe4:	b	392f0 <__assert_fail@plt+0x26738>
   38fe8:	b	38fec <__assert_fail@plt+0x26434>
   38fec:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38ff0:	ldr	r1, [r0]
   38ff4:	ldr	r0, [r0, #4]
   38ff8:	eor	r0, r0, #-2147483648	; 0x80000000
   38ffc:	orr	r0, r1, r0
   39000:	cmp	r0, #0
   39004:	beq	39028 <__assert_fail@plt+0x26470>
   39008:	b	3903c <__assert_fail@plt+0x26484>
   3900c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39010:	ldr	r1, [r0]
   39014:	ldr	r0, [r0, #4]
   39018:	subs	r1, r1, #1
   3901c:	sbcs	r0, r0, #0
   39020:	blt	3903c <__assert_fail@plt+0x26484>
   39024:	b	39028 <__assert_fail@plt+0x26470>
   39028:	mov	r0, #0
   3902c:	mov	r1, r0
   39030:	str	r1, [sp, #428]	; 0x1ac
   39034:	str	r0, [sp, #424]	; 0x1a8
   39038:	b	39068 <__assert_fail@plt+0x264b0>
   3903c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39040:	ldr	r1, [r0]
   39044:	ldr	r0, [r0, #4]
   39048:	rsbs	r2, r1, #0
   3904c:	rsc	r3, r0, #0
   39050:	movw	r0, #32767	; 0x7fff
   39054:	mov	r1, #0
   39058:	bl	75338 <__assert_fail@plt+0x62780>
   3905c:	str	r0, [sp, #428]	; 0x1ac
   39060:	str	r1, [sp, #424]	; 0x1a8
   39064:	b	39068 <__assert_fail@plt+0x264b0>
   39068:	ldr	r0, [sp, #424]	; 0x1a8
   3906c:	ldr	r1, [sp, #428]	; 0x1ac
   39070:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   39074:	ldr	r3, [r2, #-48]	; 0xffffffd0
   39078:	ldr	r2, [r2, #-44]	; 0xffffffd4
   3907c:	mvn	r2, r2
   39080:	mvn	r3, r3
   39084:	subs	r1, r3, r1
   39088:	sbcs	r0, r2, r0
   3908c:	bge	392cc <__assert_fail@plt+0x26714>
   39090:	b	392f0 <__assert_fail@plt+0x26738>
   39094:	b	39098 <__assert_fail@plt+0x264e0>
   39098:	b	39128 <__assert_fail@plt+0x26570>
   3909c:	b	39128 <__assert_fail@plt+0x26570>
   390a0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   390a4:	ldr	r1, [r0]
   390a8:	ldr	r0, [r0, #4]
   390ac:	and	r0, r1, r0
   390b0:	cmn	r0, #1
   390b4:	bne	39128 <__assert_fail@plt+0x26570>
   390b8:	b	390bc <__assert_fail@plt+0x26504>
   390bc:	b	390c0 <__assert_fail@plt+0x26508>
   390c0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   390c4:	ldr	r1, [r0, #-48]	; 0xffffffd0
   390c8:	ldr	r0, [r0, #-44]	; 0xffffffd4
   390cc:	subs	r1, r1, #32768	; 0x8000
   390d0:	sbc	r0, r0, #0
   390d4:	rsbs	r1, r1, #0
   390d8:	rscs	r0, r0, #0
   390dc:	blt	392cc <__assert_fail@plt+0x26714>
   390e0:	b	392f0 <__assert_fail@plt+0x26738>
   390e4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   390e8:	ldr	r1, [r0, #-48]	; 0xffffffd0
   390ec:	ldr	r0, [r0, #-44]	; 0xffffffd4
   390f0:	subs	r1, r1, #1
   390f4:	sbcs	r0, r0, #0
   390f8:	blt	392f0 <__assert_fail@plt+0x26738>
   390fc:	b	39100 <__assert_fail@plt+0x26548>
   39100:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39104:	ldr	r1, [r0, #-48]	; 0xffffffd0
   39108:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3910c:	subs	r1, r1, #1
   39110:	sbc	r0, r0, #0
   39114:	movw	r2, #32767	; 0x7fff
   39118:	subs	r1, r2, r1
   3911c:	rscs	r0, r0, #0
   39120:	blt	392cc <__assert_fail@plt+0x26714>
   39124:	b	392f0 <__assert_fail@plt+0x26738>
   39128:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3912c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   39130:	ldr	r2, [r0, #-44]	; 0xffffffd4
   39134:	ldr	r3, [r0]
   39138:	ldr	r0, [r0, #4]
   3913c:	movw	ip, #32768	; 0x8000
   39140:	movt	ip, #65535	; 0xffff
   39144:	mvn	lr, #0
   39148:	str	r0, [sp, #420]	; 0x1a4
   3914c:	mov	r0, ip
   39150:	str	r1, [sp, #416]	; 0x1a0
   39154:	mov	r1, lr
   39158:	str	r2, [sp, #412]	; 0x19c
   3915c:	mov	r2, r3
   39160:	ldr	r3, [sp, #420]	; 0x1a4
   39164:	bl	75338 <__assert_fail@plt+0x62780>
   39168:	ldr	r2, [sp, #416]	; 0x1a0
   3916c:	subs	r0, r0, r2
   39170:	ldr	r2, [sp, #412]	; 0x19c
   39174:	sbcs	r1, r1, r2
   39178:	blt	392cc <__assert_fail@plt+0x26714>
   3917c:	b	392f0 <__assert_fail@plt+0x26738>
   39180:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39184:	ldr	r1, [r0]
   39188:	ldr	r0, [r0, #4]
   3918c:	orr	r0, r1, r0
   39190:	cmp	r0, #0
   39194:	bne	391a0 <__assert_fail@plt+0x265e8>
   39198:	b	3919c <__assert_fail@plt+0x265e4>
   3919c:	b	392f0 <__assert_fail@plt+0x26738>
   391a0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   391a4:	ldr	r0, [r0, #-44]	; 0xffffffd4
   391a8:	cmn	r0, #1
   391ac:	bgt	39278 <__assert_fail@plt+0x266c0>
   391b0:	b	391b4 <__assert_fail@plt+0x265fc>
   391b4:	b	391b8 <__assert_fail@plt+0x26600>
   391b8:	b	3922c <__assert_fail@plt+0x26674>
   391bc:	b	3922c <__assert_fail@plt+0x26674>
   391c0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   391c4:	ldr	r1, [r0, #-48]	; 0xffffffd0
   391c8:	ldr	r0, [r0, #-44]	; 0xffffffd4
   391cc:	and	r0, r1, r0
   391d0:	cmn	r0, #1
   391d4:	bne	3922c <__assert_fail@plt+0x26674>
   391d8:	b	391dc <__assert_fail@plt+0x26624>
   391dc:	b	391e0 <__assert_fail@plt+0x26628>
   391e0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   391e4:	ldr	r1, [r0]
   391e8:	ldr	r0, [r0, #4]
   391ec:	subs	r1, r1, #32768	; 0x8000
   391f0:	sbc	r0, r0, #0
   391f4:	rsbs	r1, r1, #0
   391f8:	rscs	r0, r0, #0
   391fc:	blt	392cc <__assert_fail@plt+0x26714>
   39200:	b	392f0 <__assert_fail@plt+0x26738>
   39204:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39208:	ldr	r1, [r0]
   3920c:	ldr	r0, [r0, #4]
   39210:	subs	r1, r1, #1
   39214:	sbc	r0, r0, #0
   39218:	movw	r2, #32767	; 0x7fff
   3921c:	subs	r1, r2, r1
   39220:	rscs	r0, r0, #0
   39224:	blt	392cc <__assert_fail@plt+0x26714>
   39228:	b	392f0 <__assert_fail@plt+0x26738>
   3922c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39230:	ldr	r2, [r0, #-48]	; 0xffffffd0
   39234:	ldr	r3, [r0, #-44]	; 0xffffffd4
   39238:	ldr	r1, [r0]
   3923c:	ldr	r0, [r0, #4]
   39240:	movw	ip, #32768	; 0x8000
   39244:	movt	ip, #65535	; 0xffff
   39248:	mvn	lr, #0
   3924c:	str	r0, [sp, #408]	; 0x198
   39250:	mov	r0, ip
   39254:	str	r1, [sp, #404]	; 0x194
   39258:	mov	r1, lr
   3925c:	bl	75338 <__assert_fail@plt+0x62780>
   39260:	ldr	r2, [sp, #404]	; 0x194
   39264:	subs	r0, r0, r2
   39268:	ldr	r2, [sp, #408]	; 0x198
   3926c:	sbcs	r1, r1, r2
   39270:	blt	392cc <__assert_fail@plt+0x26714>
   39274:	b	392f0 <__assert_fail@plt+0x26738>
   39278:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3927c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   39280:	ldr	r2, [r0, #-44]	; 0xffffffd4
   39284:	ldr	r3, [r0]
   39288:	ldr	r0, [r0, #4]
   3928c:	movw	ip, #32767	; 0x7fff
   39290:	mov	lr, #0
   39294:	str	r0, [sp, #400]	; 0x190
   39298:	mov	r0, ip
   3929c:	str	r1, [sp, #396]	; 0x18c
   392a0:	mov	r1, lr
   392a4:	str	r2, [sp, #392]	; 0x188
   392a8:	mov	r2, r3
   392ac:	ldr	r3, [sp, #400]	; 0x190
   392b0:	bl	75338 <__assert_fail@plt+0x62780>
   392b4:	ldr	r2, [sp, #396]	; 0x18c
   392b8:	subs	r0, r0, r2
   392bc:	ldr	r2, [sp, #392]	; 0x188
   392c0:	sbcs	r1, r1, r2
   392c4:	bge	392f0 <__assert_fail@plt+0x26738>
   392c8:	b	392cc <__assert_fail@plt+0x26714>
   392cc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   392d0:	ldr	r1, [r0, #-48]	; 0xffffffd0
   392d4:	ldr	r0, [r0]
   392d8:	mul	r0, r1, r0
   392dc:	sxth	r0, r0
   392e0:	asr	r1, r0, #31
   392e4:	str	r0, [fp, #-1344]	; 0xfffffac0
   392e8:	str	r1, [fp, #-1340]	; 0xfffffac4
   392ec:	b	3aa40 <__assert_fail@plt+0x27e88>
   392f0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   392f4:	ldr	r1, [r0, #-48]	; 0xffffffd0
   392f8:	ldr	r0, [r0]
   392fc:	mul	r0, r1, r0
   39300:	sxth	r0, r0
   39304:	asr	r1, r0, #31
   39308:	str	r0, [fp, #-1344]	; 0xfffffac0
   3930c:	str	r1, [fp, #-1340]	; 0xfffffac4
   39310:	b	3aa44 <__assert_fail@plt+0x27e8c>
   39314:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39318:	ldr	r0, [r0, #4]
   3931c:	cmn	r0, #1
   39320:	bgt	394e0 <__assert_fail@plt+0x26928>
   39324:	b	39328 <__assert_fail@plt+0x26770>
   39328:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3932c:	ldr	r0, [r0, #-44]	; 0xffffffd4
   39330:	cmn	r0, #1
   39334:	bgt	39440 <__assert_fail@plt+0x26888>
   39338:	b	3933c <__assert_fail@plt+0x26784>
   3933c:	b	39340 <__assert_fail@plt+0x26788>
   39340:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39344:	ldr	r1, [r0, #-48]	; 0xffffffd0
   39348:	ldr	r2, [r0, #-44]	; 0xffffffd4
   3934c:	ldr	r3, [r0]
   39350:	ldr	r0, [r0, #4]
   39354:	movw	ip, #65535	; 0xffff
   39358:	mov	lr, #0
   3935c:	str	r0, [sp, #388]	; 0x184
   39360:	mov	r0, ip
   39364:	str	r1, [sp, #384]	; 0x180
   39368:	mov	r1, lr
   3936c:	str	r2, [sp, #380]	; 0x17c
   39370:	mov	r2, r3
   39374:	ldr	r3, [sp, #388]	; 0x184
   39378:	bl	75338 <__assert_fail@plt+0x62780>
   3937c:	ldr	r2, [sp, #384]	; 0x180
   39380:	subs	r0, r2, r0
   39384:	ldr	r2, [sp, #380]	; 0x17c
   39388:	sbcs	r1, r2, r1
   3938c:	blt	395ec <__assert_fail@plt+0x26a34>
   39390:	b	39610 <__assert_fail@plt+0x26a58>
   39394:	b	39398 <__assert_fail@plt+0x267e0>
   39398:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3939c:	ldr	r1, [r0]
   393a0:	ldr	r0, [r0, #4]
   393a4:	eor	r0, r0, #-2147483648	; 0x80000000
   393a8:	orr	r0, r1, r0
   393ac:	cmp	r0, #0
   393b0:	beq	393d4 <__assert_fail@plt+0x2681c>
   393b4:	b	393e8 <__assert_fail@plt+0x26830>
   393b8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   393bc:	ldr	r1, [r0]
   393c0:	ldr	r0, [r0, #4]
   393c4:	subs	r1, r1, #1
   393c8:	sbcs	r0, r0, #0
   393cc:	blt	393e8 <__assert_fail@plt+0x26830>
   393d0:	b	393d4 <__assert_fail@plt+0x2681c>
   393d4:	mov	r0, #0
   393d8:	mov	r1, r0
   393dc:	str	r1, [sp, #376]	; 0x178
   393e0:	str	r0, [sp, #372]	; 0x174
   393e4:	b	39414 <__assert_fail@plt+0x2685c>
   393e8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   393ec:	ldr	r1, [r0]
   393f0:	ldr	r0, [r0, #4]
   393f4:	rsbs	r2, r1, #0
   393f8:	rsc	r3, r0, #0
   393fc:	movw	r0, #65535	; 0xffff
   39400:	mov	r1, #0
   39404:	bl	75338 <__assert_fail@plt+0x62780>
   39408:	str	r0, [sp, #376]	; 0x178
   3940c:	str	r1, [sp, #372]	; 0x174
   39410:	b	39414 <__assert_fail@plt+0x2685c>
   39414:	ldr	r0, [sp, #372]	; 0x174
   39418:	ldr	r1, [sp, #376]	; 0x178
   3941c:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   39420:	ldr	r3, [r2, #-48]	; 0xffffffd0
   39424:	ldr	r2, [r2, #-44]	; 0xffffffd4
   39428:	mvn	r2, r2
   3942c:	mvn	r3, r3
   39430:	subs	r1, r3, r1
   39434:	sbcs	r0, r2, r0
   39438:	bge	395ec <__assert_fail@plt+0x26a34>
   3943c:	b	39610 <__assert_fail@plt+0x26a58>
   39440:	b	39444 <__assert_fail@plt+0x2688c>
   39444:	b	394c4 <__assert_fail@plt+0x2690c>
   39448:	b	394c4 <__assert_fail@plt+0x2690c>
   3944c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39450:	ldr	r1, [r0]
   39454:	ldr	r0, [r0, #4]
   39458:	and	r0, r1, r0
   3945c:	cmn	r0, #1
   39460:	bne	394c4 <__assert_fail@plt+0x2690c>
   39464:	b	39468 <__assert_fail@plt+0x268b0>
   39468:	b	3946c <__assert_fail@plt+0x268b4>
   3946c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39470:	ldr	r1, [r0, #-48]	; 0xffffffd0
   39474:	ldr	r0, [r0, #-44]	; 0xffffffd4
   39478:	rsbs	r1, r1, #0
   3947c:	rscs	r0, r0, #0
   39480:	blt	395ec <__assert_fail@plt+0x26a34>
   39484:	b	39610 <__assert_fail@plt+0x26a58>
   39488:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3948c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   39490:	ldr	r0, [r0, #-44]	; 0xffffffd4
   39494:	subs	r1, r1, #1
   39498:	sbcs	r0, r0, #0
   3949c:	blt	39610 <__assert_fail@plt+0x26a58>
   394a0:	b	394a4 <__assert_fail@plt+0x268ec>
   394a4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   394a8:	ldr	r1, [r0, #-48]	; 0xffffffd0
   394ac:	ldr	r0, [r0, #-44]	; 0xffffffd4
   394b0:	subs	r1, r1, #1
   394b4:	sbc	r0, r0, #0
   394b8:	cmn	r0, #1
   394bc:	bgt	395ec <__assert_fail@plt+0x26a34>
   394c0:	b	39610 <__assert_fail@plt+0x26a58>
   394c4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   394c8:	ldr	r1, [r0, #-48]	; 0xffffffd0
   394cc:	ldr	r0, [r0, #-44]	; 0xffffffd4
   394d0:	rsbs	r1, r1, #0
   394d4:	rscs	r0, r0, #0
   394d8:	blt	395ec <__assert_fail@plt+0x26a34>
   394dc:	b	39610 <__assert_fail@plt+0x26a58>
   394e0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   394e4:	ldr	r1, [r0]
   394e8:	ldr	r0, [r0, #4]
   394ec:	orr	r0, r1, r0
   394f0:	cmp	r0, #0
   394f4:	bne	39500 <__assert_fail@plt+0x26948>
   394f8:	b	394fc <__assert_fail@plt+0x26944>
   394fc:	b	39610 <__assert_fail@plt+0x26a58>
   39500:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39504:	ldr	r0, [r0, #-44]	; 0xffffffd4
   39508:	cmn	r0, #1
   3950c:	bgt	39598 <__assert_fail@plt+0x269e0>
   39510:	b	39514 <__assert_fail@plt+0x2695c>
   39514:	b	39518 <__assert_fail@plt+0x26960>
   39518:	b	3957c <__assert_fail@plt+0x269c4>
   3951c:	b	3957c <__assert_fail@plt+0x269c4>
   39520:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39524:	ldr	r1, [r0, #-48]	; 0xffffffd0
   39528:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3952c:	and	r0, r1, r0
   39530:	cmn	r0, #1
   39534:	bne	3957c <__assert_fail@plt+0x269c4>
   39538:	b	3953c <__assert_fail@plt+0x26984>
   3953c:	b	39540 <__assert_fail@plt+0x26988>
   39540:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39544:	ldr	r1, [r0]
   39548:	ldr	r0, [r0, #4]
   3954c:	rsbs	r1, r1, #0
   39550:	rscs	r0, r0, #0
   39554:	blt	395ec <__assert_fail@plt+0x26a34>
   39558:	b	39610 <__assert_fail@plt+0x26a58>
   3955c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39560:	ldr	r1, [r0]
   39564:	ldr	r0, [r0, #4]
   39568:	subs	r1, r1, #1
   3956c:	sbc	r0, r0, #0
   39570:	cmn	r0, #1
   39574:	bgt	395ec <__assert_fail@plt+0x26a34>
   39578:	b	39610 <__assert_fail@plt+0x26a58>
   3957c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39580:	ldr	r1, [r0]
   39584:	ldr	r0, [r0, #4]
   39588:	rsbs	r1, r1, #0
   3958c:	rscs	r0, r0, #0
   39590:	blt	395ec <__assert_fail@plt+0x26a34>
   39594:	b	39610 <__assert_fail@plt+0x26a58>
   39598:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3959c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   395a0:	ldr	r2, [r0, #-44]	; 0xffffffd4
   395a4:	ldr	r3, [r0]
   395a8:	ldr	r0, [r0, #4]
   395ac:	movw	ip, #65535	; 0xffff
   395b0:	mov	lr, #0
   395b4:	str	r0, [sp, #368]	; 0x170
   395b8:	mov	r0, ip
   395bc:	str	r1, [sp, #364]	; 0x16c
   395c0:	mov	r1, lr
   395c4:	str	r2, [sp, #360]	; 0x168
   395c8:	mov	r2, r3
   395cc:	ldr	r3, [sp, #368]	; 0x170
   395d0:	bl	75338 <__assert_fail@plt+0x62780>
   395d4:	ldr	r2, [sp, #364]	; 0x16c
   395d8:	subs	r0, r0, r2
   395dc:	ldr	r2, [sp, #360]	; 0x168
   395e0:	sbcs	r1, r1, r2
   395e4:	bge	39610 <__assert_fail@plt+0x26a58>
   395e8:	b	395ec <__assert_fail@plt+0x26a34>
   395ec:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   395f0:	ldr	r1, [r0, #-48]	; 0xffffffd0
   395f4:	ldr	r0, [r0]
   395f8:	mul	r0, r1, r0
   395fc:	uxth	r0, r0
   39600:	mov	r1, #0
   39604:	str	r1, [fp, #-1340]	; 0xfffffac4
   39608:	str	r0, [fp, #-1344]	; 0xfffffac0
   3960c:	b	3aa40 <__assert_fail@plt+0x27e88>
   39610:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39614:	ldr	r1, [r0, #-48]	; 0xffffffd0
   39618:	ldr	r0, [r0]
   3961c:	mul	r0, r1, r0
   39620:	uxth	r0, r0
   39624:	mov	r1, #0
   39628:	str	r1, [fp, #-1340]	; 0xfffffac4
   3962c:	str	r0, [fp, #-1344]	; 0xfffffac0
   39630:	b	3aa44 <__assert_fail@plt+0x27e8c>
   39634:	b	39cf0 <__assert_fail@plt+0x27138>
   39638:	b	3963c <__assert_fail@plt+0x26a84>
   3963c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39640:	ldr	r0, [r0, #4]
   39644:	cmn	r0, #1
   39648:	bgt	39850 <__assert_fail@plt+0x26c98>
   3964c:	b	39650 <__assert_fail@plt+0x26a98>
   39650:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39654:	ldr	r0, [r0, #-44]	; 0xffffffd4
   39658:	cmn	r0, #1
   3965c:	bgt	39768 <__assert_fail@plt+0x26bb0>
   39660:	b	39664 <__assert_fail@plt+0x26aac>
   39664:	b	39668 <__assert_fail@plt+0x26ab0>
   39668:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3966c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   39670:	ldr	r2, [r0, #-44]	; 0xffffffd4
   39674:	ldr	r3, [r0]
   39678:	ldr	r0, [r0, #4]
   3967c:	mvn	ip, #-2147483648	; 0x80000000
   39680:	mov	lr, #0
   39684:	str	r0, [sp, #356]	; 0x164
   39688:	mov	r0, ip
   3968c:	str	r1, [sp, #352]	; 0x160
   39690:	mov	r1, lr
   39694:	str	r2, [sp, #348]	; 0x15c
   39698:	mov	r2, r3
   3969c:	ldr	r3, [sp, #356]	; 0x164
   396a0:	bl	75338 <__assert_fail@plt+0x62780>
   396a4:	ldr	r2, [sp, #352]	; 0x160
   396a8:	subs	r0, r2, r0
   396ac:	ldr	r2, [sp, #348]	; 0x15c
   396b0:	sbcs	r1, r2, r1
   396b4:	blt	39998 <__assert_fail@plt+0x26de0>
   396b8:	b	399b8 <__assert_fail@plt+0x26e00>
   396bc:	b	396c0 <__assert_fail@plt+0x26b08>
   396c0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   396c4:	ldr	r1, [r0]
   396c8:	ldr	r0, [r0, #4]
   396cc:	eor	r0, r0, #-2147483648	; 0x80000000
   396d0:	orr	r0, r1, r0
   396d4:	cmp	r0, #0
   396d8:	beq	396fc <__assert_fail@plt+0x26b44>
   396dc:	b	39710 <__assert_fail@plt+0x26b58>
   396e0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   396e4:	ldr	r1, [r0]
   396e8:	ldr	r0, [r0, #4]
   396ec:	subs	r1, r1, #1
   396f0:	sbcs	r0, r0, #0
   396f4:	blt	39710 <__assert_fail@plt+0x26b58>
   396f8:	b	396fc <__assert_fail@plt+0x26b44>
   396fc:	mov	r0, #0
   39700:	mov	r1, r0
   39704:	str	r1, [sp, #344]	; 0x158
   39708:	str	r0, [sp, #340]	; 0x154
   3970c:	b	3973c <__assert_fail@plt+0x26b84>
   39710:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39714:	ldr	r1, [r0]
   39718:	ldr	r0, [r0, #4]
   3971c:	rsbs	r2, r1, #0
   39720:	rsc	r3, r0, #0
   39724:	mvn	r0, #-2147483648	; 0x80000000
   39728:	mov	r1, #0
   3972c:	bl	75338 <__assert_fail@plt+0x62780>
   39730:	str	r0, [sp, #344]	; 0x158
   39734:	str	r1, [sp, #340]	; 0x154
   39738:	b	3973c <__assert_fail@plt+0x26b84>
   3973c:	ldr	r0, [sp, #340]	; 0x154
   39740:	ldr	r1, [sp, #344]	; 0x158
   39744:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   39748:	ldr	r3, [r2, #-48]	; 0xffffffd0
   3974c:	ldr	r2, [r2, #-44]	; 0xffffffd4
   39750:	mvn	r2, r2
   39754:	mvn	r3, r3
   39758:	subs	r1, r3, r1
   3975c:	sbcs	r0, r2, r0
   39760:	bge	39998 <__assert_fail@plt+0x26de0>
   39764:	b	399b8 <__assert_fail@plt+0x26e00>
   39768:	b	3976c <__assert_fail@plt+0x26bb4>
   3976c:	b	397fc <__assert_fail@plt+0x26c44>
   39770:	b	397fc <__assert_fail@plt+0x26c44>
   39774:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39778:	ldr	r1, [r0]
   3977c:	ldr	r0, [r0, #4]
   39780:	and	r0, r1, r0
   39784:	cmn	r0, #1
   39788:	bne	397fc <__assert_fail@plt+0x26c44>
   3978c:	b	39790 <__assert_fail@plt+0x26bd8>
   39790:	b	39794 <__assert_fail@plt+0x26bdc>
   39794:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39798:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3979c:	ldr	r0, [r0, #-44]	; 0xffffffd4
   397a0:	adds	r1, r1, #-2147483648	; 0x80000000
   397a4:	sbc	r0, r0, #0
   397a8:	rsbs	r1, r1, #0
   397ac:	rscs	r0, r0, #0
   397b0:	blt	39998 <__assert_fail@plt+0x26de0>
   397b4:	b	399b8 <__assert_fail@plt+0x26e00>
   397b8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   397bc:	ldr	r1, [r0, #-48]	; 0xffffffd0
   397c0:	ldr	r0, [r0, #-44]	; 0xffffffd4
   397c4:	subs	r1, r1, #1
   397c8:	sbcs	r0, r0, #0
   397cc:	blt	399b8 <__assert_fail@plt+0x26e00>
   397d0:	b	397d4 <__assert_fail@plt+0x26c1c>
   397d4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   397d8:	ldr	r1, [r0, #-48]	; 0xffffffd0
   397dc:	ldr	r0, [r0, #-44]	; 0xffffffd4
   397e0:	subs	r1, r1, #1
   397e4:	sbc	r0, r0, #0
   397e8:	mvn	r2, #-2147483648	; 0x80000000
   397ec:	subs	r1, r2, r1
   397f0:	rscs	r0, r0, #0
   397f4:	blt	39998 <__assert_fail@plt+0x26de0>
   397f8:	b	399b8 <__assert_fail@plt+0x26e00>
   397fc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39800:	ldr	r1, [r0, #-48]	; 0xffffffd0
   39804:	ldr	r2, [r0, #-44]	; 0xffffffd4
   39808:	ldr	r3, [r0]
   3980c:	ldr	r0, [r0, #4]
   39810:	mov	ip, #-2147483648	; 0x80000000
   39814:	mvn	lr, #0
   39818:	str	r0, [sp, #336]	; 0x150
   3981c:	mov	r0, ip
   39820:	str	r1, [sp, #332]	; 0x14c
   39824:	mov	r1, lr
   39828:	str	r2, [sp, #328]	; 0x148
   3982c:	mov	r2, r3
   39830:	ldr	r3, [sp, #336]	; 0x150
   39834:	bl	75338 <__assert_fail@plt+0x62780>
   39838:	ldr	r2, [sp, #332]	; 0x14c
   3983c:	subs	r0, r0, r2
   39840:	ldr	r2, [sp, #328]	; 0x148
   39844:	sbcs	r1, r1, r2
   39848:	blt	39998 <__assert_fail@plt+0x26de0>
   3984c:	b	399b8 <__assert_fail@plt+0x26e00>
   39850:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39854:	ldr	r1, [r0]
   39858:	ldr	r0, [r0, #4]
   3985c:	orr	r0, r1, r0
   39860:	cmp	r0, #0
   39864:	bne	39870 <__assert_fail@plt+0x26cb8>
   39868:	b	3986c <__assert_fail@plt+0x26cb4>
   3986c:	b	399b8 <__assert_fail@plt+0x26e00>
   39870:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39874:	ldr	r0, [r0, #-44]	; 0xffffffd4
   39878:	cmn	r0, #1
   3987c:	bgt	39944 <__assert_fail@plt+0x26d8c>
   39880:	b	39884 <__assert_fail@plt+0x26ccc>
   39884:	b	39888 <__assert_fail@plt+0x26cd0>
   39888:	b	398fc <__assert_fail@plt+0x26d44>
   3988c:	b	398fc <__assert_fail@plt+0x26d44>
   39890:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39894:	ldr	r1, [r0, #-48]	; 0xffffffd0
   39898:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3989c:	and	r0, r1, r0
   398a0:	cmn	r0, #1
   398a4:	bne	398fc <__assert_fail@plt+0x26d44>
   398a8:	b	398ac <__assert_fail@plt+0x26cf4>
   398ac:	b	398b0 <__assert_fail@plt+0x26cf8>
   398b0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   398b4:	ldr	r1, [r0]
   398b8:	ldr	r0, [r0, #4]
   398bc:	adds	r1, r1, #-2147483648	; 0x80000000
   398c0:	sbc	r0, r0, #0
   398c4:	rsbs	r1, r1, #0
   398c8:	rscs	r0, r0, #0
   398cc:	blt	39998 <__assert_fail@plt+0x26de0>
   398d0:	b	399b8 <__assert_fail@plt+0x26e00>
   398d4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   398d8:	ldr	r1, [r0]
   398dc:	ldr	r0, [r0, #4]
   398e0:	subs	r1, r1, #1
   398e4:	sbc	r0, r0, #0
   398e8:	mvn	r2, #-2147483648	; 0x80000000
   398ec:	subs	r1, r2, r1
   398f0:	rscs	r0, r0, #0
   398f4:	blt	39998 <__assert_fail@plt+0x26de0>
   398f8:	b	399b8 <__assert_fail@plt+0x26e00>
   398fc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39900:	ldr	r2, [r0, #-48]	; 0xffffffd0
   39904:	ldr	r3, [r0, #-44]	; 0xffffffd4
   39908:	ldr	r1, [r0]
   3990c:	ldr	r0, [r0, #4]
   39910:	mov	ip, #-2147483648	; 0x80000000
   39914:	mvn	lr, #0
   39918:	str	r0, [sp, #324]	; 0x144
   3991c:	mov	r0, ip
   39920:	str	r1, [sp, #320]	; 0x140
   39924:	mov	r1, lr
   39928:	bl	75338 <__assert_fail@plt+0x62780>
   3992c:	ldr	r2, [sp, #320]	; 0x140
   39930:	subs	r0, r0, r2
   39934:	ldr	r2, [sp, #324]	; 0x144
   39938:	sbcs	r1, r1, r2
   3993c:	blt	39998 <__assert_fail@plt+0x26de0>
   39940:	b	399b8 <__assert_fail@plt+0x26e00>
   39944:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39948:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3994c:	ldr	r2, [r0, #-44]	; 0xffffffd4
   39950:	ldr	r3, [r0]
   39954:	ldr	r0, [r0, #4]
   39958:	mvn	ip, #-2147483648	; 0x80000000
   3995c:	mov	lr, #0
   39960:	str	r0, [sp, #316]	; 0x13c
   39964:	mov	r0, ip
   39968:	str	r1, [sp, #312]	; 0x138
   3996c:	mov	r1, lr
   39970:	str	r2, [sp, #308]	; 0x134
   39974:	mov	r2, r3
   39978:	ldr	r3, [sp, #316]	; 0x13c
   3997c:	bl	75338 <__assert_fail@plt+0x62780>
   39980:	ldr	r2, [sp, #312]	; 0x138
   39984:	subs	r0, r0, r2
   39988:	ldr	r2, [sp, #308]	; 0x134
   3998c:	sbcs	r1, r1, r2
   39990:	bge	399b8 <__assert_fail@plt+0x26e00>
   39994:	b	39998 <__assert_fail@plt+0x26de0>
   39998:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3999c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   399a0:	ldr	r0, [r0]
   399a4:	mul	r0, r1, r0
   399a8:	asr	r1, r0, #31
   399ac:	str	r0, [fp, #-1344]	; 0xfffffac0
   399b0:	str	r1, [fp, #-1340]	; 0xfffffac4
   399b4:	b	3aa40 <__assert_fail@plt+0x27e88>
   399b8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   399bc:	ldr	r1, [r0, #-48]	; 0xffffffd0
   399c0:	ldr	r0, [r0]
   399c4:	mul	r0, r1, r0
   399c8:	asr	r1, r0, #31
   399cc:	str	r0, [fp, #-1344]	; 0xfffffac0
   399d0:	str	r1, [fp, #-1340]	; 0xfffffac4
   399d4:	b	3aa44 <__assert_fail@plt+0x27e8c>
   399d8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   399dc:	ldr	r0, [r0, #4]
   399e0:	cmn	r0, #1
   399e4:	bgt	39ba4 <__assert_fail@plt+0x26fec>
   399e8:	b	399ec <__assert_fail@plt+0x26e34>
   399ec:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   399f0:	ldr	r0, [r0, #-44]	; 0xffffffd4
   399f4:	cmn	r0, #1
   399f8:	bgt	39b04 <__assert_fail@plt+0x26f4c>
   399fc:	b	39a00 <__assert_fail@plt+0x26e48>
   39a00:	b	39a04 <__assert_fail@plt+0x26e4c>
   39a04:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39a08:	ldr	r1, [r0, #-48]	; 0xffffffd0
   39a0c:	ldr	r2, [r0, #-44]	; 0xffffffd4
   39a10:	ldr	r3, [r0]
   39a14:	ldr	r0, [r0, #4]
   39a18:	mvn	ip, #0
   39a1c:	mov	lr, #0
   39a20:	str	r0, [sp, #304]	; 0x130
   39a24:	mov	r0, ip
   39a28:	str	r1, [sp, #300]	; 0x12c
   39a2c:	mov	r1, lr
   39a30:	str	r2, [sp, #296]	; 0x128
   39a34:	mov	r2, r3
   39a38:	ldr	r3, [sp, #304]	; 0x130
   39a3c:	bl	75338 <__assert_fail@plt+0x62780>
   39a40:	ldr	r2, [sp, #300]	; 0x12c
   39a44:	subs	r0, r2, r0
   39a48:	ldr	r2, [sp, #296]	; 0x128
   39a4c:	sbcs	r1, r2, r1
   39a50:	blt	39cb0 <__assert_fail@plt+0x270f8>
   39a54:	b	39cd0 <__assert_fail@plt+0x27118>
   39a58:	b	39a5c <__assert_fail@plt+0x26ea4>
   39a5c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39a60:	ldr	r1, [r0]
   39a64:	ldr	r0, [r0, #4]
   39a68:	eor	r0, r0, #-2147483648	; 0x80000000
   39a6c:	orr	r0, r1, r0
   39a70:	cmp	r0, #0
   39a74:	beq	39a98 <__assert_fail@plt+0x26ee0>
   39a78:	b	39aac <__assert_fail@plt+0x26ef4>
   39a7c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39a80:	ldr	r1, [r0]
   39a84:	ldr	r0, [r0, #4]
   39a88:	subs	r1, r1, #1
   39a8c:	sbcs	r0, r0, #0
   39a90:	blt	39aac <__assert_fail@plt+0x26ef4>
   39a94:	b	39a98 <__assert_fail@plt+0x26ee0>
   39a98:	mov	r0, #0
   39a9c:	mov	r1, r0
   39aa0:	str	r1, [sp, #292]	; 0x124
   39aa4:	str	r0, [sp, #288]	; 0x120
   39aa8:	b	39ad8 <__assert_fail@plt+0x26f20>
   39aac:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39ab0:	ldr	r1, [r0]
   39ab4:	ldr	r0, [r0, #4]
   39ab8:	rsbs	r2, r1, #0
   39abc:	rsc	r3, r0, #0
   39ac0:	mvn	r0, #0
   39ac4:	mov	r1, #0
   39ac8:	bl	75338 <__assert_fail@plt+0x62780>
   39acc:	str	r0, [sp, #292]	; 0x124
   39ad0:	str	r1, [sp, #288]	; 0x120
   39ad4:	b	39ad8 <__assert_fail@plt+0x26f20>
   39ad8:	ldr	r0, [sp, #288]	; 0x120
   39adc:	ldr	r1, [sp, #292]	; 0x124
   39ae0:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   39ae4:	ldr	r3, [r2, #-48]	; 0xffffffd0
   39ae8:	ldr	r2, [r2, #-44]	; 0xffffffd4
   39aec:	mvn	r2, r2
   39af0:	mvn	r3, r3
   39af4:	subs	r1, r3, r1
   39af8:	sbcs	r0, r2, r0
   39afc:	bge	39cb0 <__assert_fail@plt+0x270f8>
   39b00:	b	39cd0 <__assert_fail@plt+0x27118>
   39b04:	b	39b08 <__assert_fail@plt+0x26f50>
   39b08:	b	39b88 <__assert_fail@plt+0x26fd0>
   39b0c:	b	39b88 <__assert_fail@plt+0x26fd0>
   39b10:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39b14:	ldr	r1, [r0]
   39b18:	ldr	r0, [r0, #4]
   39b1c:	and	r0, r1, r0
   39b20:	cmn	r0, #1
   39b24:	bne	39b88 <__assert_fail@plt+0x26fd0>
   39b28:	b	39b2c <__assert_fail@plt+0x26f74>
   39b2c:	b	39b30 <__assert_fail@plt+0x26f78>
   39b30:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39b34:	ldr	r1, [r0, #-48]	; 0xffffffd0
   39b38:	ldr	r0, [r0, #-44]	; 0xffffffd4
   39b3c:	rsbs	r1, r1, #0
   39b40:	rscs	r0, r0, #0
   39b44:	blt	39cb0 <__assert_fail@plt+0x270f8>
   39b48:	b	39cd0 <__assert_fail@plt+0x27118>
   39b4c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39b50:	ldr	r1, [r0, #-48]	; 0xffffffd0
   39b54:	ldr	r0, [r0, #-44]	; 0xffffffd4
   39b58:	subs	r1, r1, #1
   39b5c:	sbcs	r0, r0, #0
   39b60:	blt	39cd0 <__assert_fail@plt+0x27118>
   39b64:	b	39b68 <__assert_fail@plt+0x26fb0>
   39b68:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39b6c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   39b70:	ldr	r0, [r0, #-44]	; 0xffffffd4
   39b74:	subs	r1, r1, #1
   39b78:	sbc	r0, r0, #0
   39b7c:	cmn	r0, #1
   39b80:	bgt	39cb0 <__assert_fail@plt+0x270f8>
   39b84:	b	39cd0 <__assert_fail@plt+0x27118>
   39b88:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39b8c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   39b90:	ldr	r0, [r0, #-44]	; 0xffffffd4
   39b94:	rsbs	r1, r1, #0
   39b98:	rscs	r0, r0, #0
   39b9c:	blt	39cb0 <__assert_fail@plt+0x270f8>
   39ba0:	b	39cd0 <__assert_fail@plt+0x27118>
   39ba4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39ba8:	ldr	r1, [r0]
   39bac:	ldr	r0, [r0, #4]
   39bb0:	orr	r0, r1, r0
   39bb4:	cmp	r0, #0
   39bb8:	bne	39bc4 <__assert_fail@plt+0x2700c>
   39bbc:	b	39bc0 <__assert_fail@plt+0x27008>
   39bc0:	b	39cd0 <__assert_fail@plt+0x27118>
   39bc4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39bc8:	ldr	r0, [r0, #-44]	; 0xffffffd4
   39bcc:	cmn	r0, #1
   39bd0:	bgt	39c5c <__assert_fail@plt+0x270a4>
   39bd4:	b	39bd8 <__assert_fail@plt+0x27020>
   39bd8:	b	39bdc <__assert_fail@plt+0x27024>
   39bdc:	b	39c40 <__assert_fail@plt+0x27088>
   39be0:	b	39c40 <__assert_fail@plt+0x27088>
   39be4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39be8:	ldr	r1, [r0, #-48]	; 0xffffffd0
   39bec:	ldr	r0, [r0, #-44]	; 0xffffffd4
   39bf0:	and	r0, r1, r0
   39bf4:	cmn	r0, #1
   39bf8:	bne	39c40 <__assert_fail@plt+0x27088>
   39bfc:	b	39c00 <__assert_fail@plt+0x27048>
   39c00:	b	39c04 <__assert_fail@plt+0x2704c>
   39c04:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39c08:	ldr	r1, [r0]
   39c0c:	ldr	r0, [r0, #4]
   39c10:	rsbs	r1, r1, #0
   39c14:	rscs	r0, r0, #0
   39c18:	blt	39cb0 <__assert_fail@plt+0x270f8>
   39c1c:	b	39cd0 <__assert_fail@plt+0x27118>
   39c20:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39c24:	ldr	r1, [r0]
   39c28:	ldr	r0, [r0, #4]
   39c2c:	subs	r1, r1, #1
   39c30:	sbc	r0, r0, #0
   39c34:	cmn	r0, #1
   39c38:	bgt	39cb0 <__assert_fail@plt+0x270f8>
   39c3c:	b	39cd0 <__assert_fail@plt+0x27118>
   39c40:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39c44:	ldr	r1, [r0]
   39c48:	ldr	r0, [r0, #4]
   39c4c:	rsbs	r1, r1, #0
   39c50:	rscs	r0, r0, #0
   39c54:	blt	39cb0 <__assert_fail@plt+0x270f8>
   39c58:	b	39cd0 <__assert_fail@plt+0x27118>
   39c5c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39c60:	ldr	r1, [r0, #-48]	; 0xffffffd0
   39c64:	ldr	r2, [r0, #-44]	; 0xffffffd4
   39c68:	ldr	r3, [r0]
   39c6c:	ldr	r0, [r0, #4]
   39c70:	mvn	ip, #0
   39c74:	mov	lr, #0
   39c78:	str	r0, [sp, #284]	; 0x11c
   39c7c:	mov	r0, ip
   39c80:	str	r1, [sp, #280]	; 0x118
   39c84:	mov	r1, lr
   39c88:	str	r2, [sp, #276]	; 0x114
   39c8c:	mov	r2, r3
   39c90:	ldr	r3, [sp, #284]	; 0x11c
   39c94:	bl	75338 <__assert_fail@plt+0x62780>
   39c98:	ldr	r2, [sp, #280]	; 0x118
   39c9c:	subs	r0, r0, r2
   39ca0:	ldr	r2, [sp, #276]	; 0x114
   39ca4:	sbcs	r1, r1, r2
   39ca8:	bge	39cd0 <__assert_fail@plt+0x27118>
   39cac:	b	39cb0 <__assert_fail@plt+0x270f8>
   39cb0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39cb4:	ldr	r1, [r0, #-48]	; 0xffffffd0
   39cb8:	ldr	r0, [r0]
   39cbc:	mul	r0, r1, r0
   39cc0:	mov	r1, #0
   39cc4:	str	r1, [fp, #-1340]	; 0xfffffac4
   39cc8:	str	r0, [fp, #-1344]	; 0xfffffac0
   39ccc:	b	3aa40 <__assert_fail@plt+0x27e88>
   39cd0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39cd4:	ldr	r1, [r0, #-48]	; 0xffffffd0
   39cd8:	ldr	r0, [r0]
   39cdc:	mul	r0, r1, r0
   39ce0:	mov	r1, #0
   39ce4:	str	r1, [fp, #-1340]	; 0xfffffac4
   39ce8:	str	r0, [fp, #-1344]	; 0xfffffac0
   39cec:	b	3aa44 <__assert_fail@plt+0x27e8c>
   39cf0:	b	3a3ac <__assert_fail@plt+0x277f4>
   39cf4:	b	39cf8 <__assert_fail@plt+0x27140>
   39cf8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39cfc:	ldr	r0, [r0, #4]
   39d00:	cmn	r0, #1
   39d04:	bgt	39f0c <__assert_fail@plt+0x27354>
   39d08:	b	39d0c <__assert_fail@plt+0x27154>
   39d0c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39d10:	ldr	r0, [r0, #-44]	; 0xffffffd4
   39d14:	cmn	r0, #1
   39d18:	bgt	39e24 <__assert_fail@plt+0x2726c>
   39d1c:	b	39d20 <__assert_fail@plt+0x27168>
   39d20:	b	39d24 <__assert_fail@plt+0x2716c>
   39d24:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39d28:	ldr	r1, [r0, #-48]	; 0xffffffd0
   39d2c:	ldr	r2, [r0, #-44]	; 0xffffffd4
   39d30:	ldr	r3, [r0]
   39d34:	ldr	r0, [r0, #4]
   39d38:	mvn	ip, #-2147483648	; 0x80000000
   39d3c:	mov	lr, #0
   39d40:	str	r0, [sp, #272]	; 0x110
   39d44:	mov	r0, ip
   39d48:	str	r1, [sp, #268]	; 0x10c
   39d4c:	mov	r1, lr
   39d50:	str	r2, [sp, #264]	; 0x108
   39d54:	mov	r2, r3
   39d58:	ldr	r3, [sp, #272]	; 0x110
   39d5c:	bl	75338 <__assert_fail@plt+0x62780>
   39d60:	ldr	r2, [sp, #268]	; 0x10c
   39d64:	subs	r0, r2, r0
   39d68:	ldr	r2, [sp, #264]	; 0x108
   39d6c:	sbcs	r1, r2, r1
   39d70:	blt	3a054 <__assert_fail@plt+0x2749c>
   39d74:	b	3a074 <__assert_fail@plt+0x274bc>
   39d78:	b	39d7c <__assert_fail@plt+0x271c4>
   39d7c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39d80:	ldr	r1, [r0]
   39d84:	ldr	r0, [r0, #4]
   39d88:	eor	r0, r0, #-2147483648	; 0x80000000
   39d8c:	orr	r0, r1, r0
   39d90:	cmp	r0, #0
   39d94:	beq	39db8 <__assert_fail@plt+0x27200>
   39d98:	b	39dcc <__assert_fail@plt+0x27214>
   39d9c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39da0:	ldr	r1, [r0]
   39da4:	ldr	r0, [r0, #4]
   39da8:	subs	r1, r1, #1
   39dac:	sbcs	r0, r0, #0
   39db0:	blt	39dcc <__assert_fail@plt+0x27214>
   39db4:	b	39db8 <__assert_fail@plt+0x27200>
   39db8:	mov	r0, #0
   39dbc:	mov	r1, r0
   39dc0:	str	r1, [sp, #260]	; 0x104
   39dc4:	str	r0, [sp, #256]	; 0x100
   39dc8:	b	39df8 <__assert_fail@plt+0x27240>
   39dcc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39dd0:	ldr	r1, [r0]
   39dd4:	ldr	r0, [r0, #4]
   39dd8:	rsbs	r2, r1, #0
   39ddc:	rsc	r3, r0, #0
   39de0:	mvn	r0, #-2147483648	; 0x80000000
   39de4:	mov	r1, #0
   39de8:	bl	75338 <__assert_fail@plt+0x62780>
   39dec:	str	r0, [sp, #260]	; 0x104
   39df0:	str	r1, [sp, #256]	; 0x100
   39df4:	b	39df8 <__assert_fail@plt+0x27240>
   39df8:	ldr	r0, [sp, #256]	; 0x100
   39dfc:	ldr	r1, [sp, #260]	; 0x104
   39e00:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   39e04:	ldr	r3, [r2, #-48]	; 0xffffffd0
   39e08:	ldr	r2, [r2, #-44]	; 0xffffffd4
   39e0c:	mvn	r2, r2
   39e10:	mvn	r3, r3
   39e14:	subs	r1, r3, r1
   39e18:	sbcs	r0, r2, r0
   39e1c:	bge	3a054 <__assert_fail@plt+0x2749c>
   39e20:	b	3a074 <__assert_fail@plt+0x274bc>
   39e24:	b	39e28 <__assert_fail@plt+0x27270>
   39e28:	b	39eb8 <__assert_fail@plt+0x27300>
   39e2c:	b	39eb8 <__assert_fail@plt+0x27300>
   39e30:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39e34:	ldr	r1, [r0]
   39e38:	ldr	r0, [r0, #4]
   39e3c:	and	r0, r1, r0
   39e40:	cmn	r0, #1
   39e44:	bne	39eb8 <__assert_fail@plt+0x27300>
   39e48:	b	39e4c <__assert_fail@plt+0x27294>
   39e4c:	b	39e50 <__assert_fail@plt+0x27298>
   39e50:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39e54:	ldr	r1, [r0, #-48]	; 0xffffffd0
   39e58:	ldr	r0, [r0, #-44]	; 0xffffffd4
   39e5c:	adds	r1, r1, #-2147483648	; 0x80000000
   39e60:	sbc	r0, r0, #0
   39e64:	rsbs	r1, r1, #0
   39e68:	rscs	r0, r0, #0
   39e6c:	blt	3a054 <__assert_fail@plt+0x2749c>
   39e70:	b	3a074 <__assert_fail@plt+0x274bc>
   39e74:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39e78:	ldr	r1, [r0, #-48]	; 0xffffffd0
   39e7c:	ldr	r0, [r0, #-44]	; 0xffffffd4
   39e80:	subs	r1, r1, #1
   39e84:	sbcs	r0, r0, #0
   39e88:	blt	3a074 <__assert_fail@plt+0x274bc>
   39e8c:	b	39e90 <__assert_fail@plt+0x272d8>
   39e90:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39e94:	ldr	r1, [r0, #-48]	; 0xffffffd0
   39e98:	ldr	r0, [r0, #-44]	; 0xffffffd4
   39e9c:	subs	r1, r1, #1
   39ea0:	sbc	r0, r0, #0
   39ea4:	mvn	r2, #-2147483648	; 0x80000000
   39ea8:	subs	r1, r2, r1
   39eac:	rscs	r0, r0, #0
   39eb0:	blt	3a054 <__assert_fail@plt+0x2749c>
   39eb4:	b	3a074 <__assert_fail@plt+0x274bc>
   39eb8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39ebc:	ldr	r1, [r0, #-48]	; 0xffffffd0
   39ec0:	ldr	r2, [r0, #-44]	; 0xffffffd4
   39ec4:	ldr	r3, [r0]
   39ec8:	ldr	r0, [r0, #4]
   39ecc:	mov	ip, #-2147483648	; 0x80000000
   39ed0:	mvn	lr, #0
   39ed4:	str	r0, [sp, #252]	; 0xfc
   39ed8:	mov	r0, ip
   39edc:	str	r1, [sp, #248]	; 0xf8
   39ee0:	mov	r1, lr
   39ee4:	str	r2, [sp, #244]	; 0xf4
   39ee8:	mov	r2, r3
   39eec:	ldr	r3, [sp, #252]	; 0xfc
   39ef0:	bl	75338 <__assert_fail@plt+0x62780>
   39ef4:	ldr	r2, [sp, #248]	; 0xf8
   39ef8:	subs	r0, r0, r2
   39efc:	ldr	r2, [sp, #244]	; 0xf4
   39f00:	sbcs	r1, r1, r2
   39f04:	blt	3a054 <__assert_fail@plt+0x2749c>
   39f08:	b	3a074 <__assert_fail@plt+0x274bc>
   39f0c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39f10:	ldr	r1, [r0]
   39f14:	ldr	r0, [r0, #4]
   39f18:	orr	r0, r1, r0
   39f1c:	cmp	r0, #0
   39f20:	bne	39f2c <__assert_fail@plt+0x27374>
   39f24:	b	39f28 <__assert_fail@plt+0x27370>
   39f28:	b	3a074 <__assert_fail@plt+0x274bc>
   39f2c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39f30:	ldr	r0, [r0, #-44]	; 0xffffffd4
   39f34:	cmn	r0, #1
   39f38:	bgt	3a000 <__assert_fail@plt+0x27448>
   39f3c:	b	39f40 <__assert_fail@plt+0x27388>
   39f40:	b	39f44 <__assert_fail@plt+0x2738c>
   39f44:	b	39fb8 <__assert_fail@plt+0x27400>
   39f48:	b	39fb8 <__assert_fail@plt+0x27400>
   39f4c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39f50:	ldr	r1, [r0, #-48]	; 0xffffffd0
   39f54:	ldr	r0, [r0, #-44]	; 0xffffffd4
   39f58:	and	r0, r1, r0
   39f5c:	cmn	r0, #1
   39f60:	bne	39fb8 <__assert_fail@plt+0x27400>
   39f64:	b	39f68 <__assert_fail@plt+0x273b0>
   39f68:	b	39f6c <__assert_fail@plt+0x273b4>
   39f6c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39f70:	ldr	r1, [r0]
   39f74:	ldr	r0, [r0, #4]
   39f78:	adds	r1, r1, #-2147483648	; 0x80000000
   39f7c:	sbc	r0, r0, #0
   39f80:	rsbs	r1, r1, #0
   39f84:	rscs	r0, r0, #0
   39f88:	blt	3a054 <__assert_fail@plt+0x2749c>
   39f8c:	b	3a074 <__assert_fail@plt+0x274bc>
   39f90:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39f94:	ldr	r1, [r0]
   39f98:	ldr	r0, [r0, #4]
   39f9c:	subs	r1, r1, #1
   39fa0:	sbc	r0, r0, #0
   39fa4:	mvn	r2, #-2147483648	; 0x80000000
   39fa8:	subs	r1, r2, r1
   39fac:	rscs	r0, r0, #0
   39fb0:	blt	3a054 <__assert_fail@plt+0x2749c>
   39fb4:	b	3a074 <__assert_fail@plt+0x274bc>
   39fb8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39fbc:	ldr	r2, [r0, #-48]	; 0xffffffd0
   39fc0:	ldr	r3, [r0, #-44]	; 0xffffffd4
   39fc4:	ldr	r1, [r0]
   39fc8:	ldr	r0, [r0, #4]
   39fcc:	mov	ip, #-2147483648	; 0x80000000
   39fd0:	mvn	lr, #0
   39fd4:	str	r0, [sp, #240]	; 0xf0
   39fd8:	mov	r0, ip
   39fdc:	str	r1, [sp, #236]	; 0xec
   39fe0:	mov	r1, lr
   39fe4:	bl	75338 <__assert_fail@plt+0x62780>
   39fe8:	ldr	r2, [sp, #236]	; 0xec
   39fec:	subs	r0, r0, r2
   39ff0:	ldr	r2, [sp, #240]	; 0xf0
   39ff4:	sbcs	r1, r1, r2
   39ff8:	blt	3a054 <__assert_fail@plt+0x2749c>
   39ffc:	b	3a074 <__assert_fail@plt+0x274bc>
   3a000:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a004:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a008:	ldr	r2, [r0, #-44]	; 0xffffffd4
   3a00c:	ldr	r3, [r0]
   3a010:	ldr	r0, [r0, #4]
   3a014:	mvn	ip, #-2147483648	; 0x80000000
   3a018:	mov	lr, #0
   3a01c:	str	r0, [sp, #232]	; 0xe8
   3a020:	mov	r0, ip
   3a024:	str	r1, [sp, #228]	; 0xe4
   3a028:	mov	r1, lr
   3a02c:	str	r2, [sp, #224]	; 0xe0
   3a030:	mov	r2, r3
   3a034:	ldr	r3, [sp, #232]	; 0xe8
   3a038:	bl	75338 <__assert_fail@plt+0x62780>
   3a03c:	ldr	r2, [sp, #228]	; 0xe4
   3a040:	subs	r0, r0, r2
   3a044:	ldr	r2, [sp, #224]	; 0xe0
   3a048:	sbcs	r1, r1, r2
   3a04c:	bge	3a074 <__assert_fail@plt+0x274bc>
   3a050:	b	3a054 <__assert_fail@plt+0x2749c>
   3a054:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a058:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a05c:	ldr	r0, [r0]
   3a060:	mul	r0, r1, r0
   3a064:	asr	r1, r0, #31
   3a068:	str	r0, [fp, #-1344]	; 0xfffffac0
   3a06c:	str	r1, [fp, #-1340]	; 0xfffffac4
   3a070:	b	3aa40 <__assert_fail@plt+0x27e88>
   3a074:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a078:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a07c:	ldr	r0, [r0]
   3a080:	mul	r0, r1, r0
   3a084:	asr	r1, r0, #31
   3a088:	str	r0, [fp, #-1344]	; 0xfffffac0
   3a08c:	str	r1, [fp, #-1340]	; 0xfffffac4
   3a090:	b	3aa44 <__assert_fail@plt+0x27e8c>
   3a094:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a098:	ldr	r0, [r0, #4]
   3a09c:	cmn	r0, #1
   3a0a0:	bgt	3a260 <__assert_fail@plt+0x276a8>
   3a0a4:	b	3a0a8 <__assert_fail@plt+0x274f0>
   3a0a8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a0ac:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3a0b0:	cmn	r0, #1
   3a0b4:	bgt	3a1c0 <__assert_fail@plt+0x27608>
   3a0b8:	b	3a0bc <__assert_fail@plt+0x27504>
   3a0bc:	b	3a0c0 <__assert_fail@plt+0x27508>
   3a0c0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a0c4:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a0c8:	ldr	r2, [r0, #-44]	; 0xffffffd4
   3a0cc:	ldr	r3, [r0]
   3a0d0:	ldr	r0, [r0, #4]
   3a0d4:	mvn	ip, #0
   3a0d8:	mov	lr, #0
   3a0dc:	str	r0, [sp, #220]	; 0xdc
   3a0e0:	mov	r0, ip
   3a0e4:	str	r1, [sp, #216]	; 0xd8
   3a0e8:	mov	r1, lr
   3a0ec:	str	r2, [sp, #212]	; 0xd4
   3a0f0:	mov	r2, r3
   3a0f4:	ldr	r3, [sp, #220]	; 0xdc
   3a0f8:	bl	75338 <__assert_fail@plt+0x62780>
   3a0fc:	ldr	r2, [sp, #216]	; 0xd8
   3a100:	subs	r0, r2, r0
   3a104:	ldr	r2, [sp, #212]	; 0xd4
   3a108:	sbcs	r1, r2, r1
   3a10c:	blt	3a36c <__assert_fail@plt+0x277b4>
   3a110:	b	3a38c <__assert_fail@plt+0x277d4>
   3a114:	b	3a118 <__assert_fail@plt+0x27560>
   3a118:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a11c:	ldr	r1, [r0]
   3a120:	ldr	r0, [r0, #4]
   3a124:	eor	r0, r0, #-2147483648	; 0x80000000
   3a128:	orr	r0, r1, r0
   3a12c:	cmp	r0, #0
   3a130:	beq	3a154 <__assert_fail@plt+0x2759c>
   3a134:	b	3a168 <__assert_fail@plt+0x275b0>
   3a138:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a13c:	ldr	r1, [r0]
   3a140:	ldr	r0, [r0, #4]
   3a144:	subs	r1, r1, #1
   3a148:	sbcs	r0, r0, #0
   3a14c:	blt	3a168 <__assert_fail@plt+0x275b0>
   3a150:	b	3a154 <__assert_fail@plt+0x2759c>
   3a154:	mov	r0, #0
   3a158:	mov	r1, r0
   3a15c:	str	r1, [sp, #208]	; 0xd0
   3a160:	str	r0, [sp, #204]	; 0xcc
   3a164:	b	3a194 <__assert_fail@plt+0x275dc>
   3a168:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a16c:	ldr	r1, [r0]
   3a170:	ldr	r0, [r0, #4]
   3a174:	rsbs	r2, r1, #0
   3a178:	rsc	r3, r0, #0
   3a17c:	mvn	r0, #0
   3a180:	mov	r1, #0
   3a184:	bl	75338 <__assert_fail@plt+0x62780>
   3a188:	str	r0, [sp, #208]	; 0xd0
   3a18c:	str	r1, [sp, #204]	; 0xcc
   3a190:	b	3a194 <__assert_fail@plt+0x275dc>
   3a194:	ldr	r0, [sp, #204]	; 0xcc
   3a198:	ldr	r1, [sp, #208]	; 0xd0
   3a19c:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   3a1a0:	ldr	r3, [r2, #-48]	; 0xffffffd0
   3a1a4:	ldr	r2, [r2, #-44]	; 0xffffffd4
   3a1a8:	mvn	r2, r2
   3a1ac:	mvn	r3, r3
   3a1b0:	subs	r1, r3, r1
   3a1b4:	sbcs	r0, r2, r0
   3a1b8:	bge	3a36c <__assert_fail@plt+0x277b4>
   3a1bc:	b	3a38c <__assert_fail@plt+0x277d4>
   3a1c0:	b	3a1c4 <__assert_fail@plt+0x2760c>
   3a1c4:	b	3a244 <__assert_fail@plt+0x2768c>
   3a1c8:	b	3a244 <__assert_fail@plt+0x2768c>
   3a1cc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a1d0:	ldr	r1, [r0]
   3a1d4:	ldr	r0, [r0, #4]
   3a1d8:	and	r0, r1, r0
   3a1dc:	cmn	r0, #1
   3a1e0:	bne	3a244 <__assert_fail@plt+0x2768c>
   3a1e4:	b	3a1e8 <__assert_fail@plt+0x27630>
   3a1e8:	b	3a1ec <__assert_fail@plt+0x27634>
   3a1ec:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a1f0:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a1f4:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3a1f8:	rsbs	r1, r1, #0
   3a1fc:	rscs	r0, r0, #0
   3a200:	blt	3a36c <__assert_fail@plt+0x277b4>
   3a204:	b	3a38c <__assert_fail@plt+0x277d4>
   3a208:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a20c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a210:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3a214:	subs	r1, r1, #1
   3a218:	sbcs	r0, r0, #0
   3a21c:	blt	3a38c <__assert_fail@plt+0x277d4>
   3a220:	b	3a224 <__assert_fail@plt+0x2766c>
   3a224:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a228:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a22c:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3a230:	subs	r1, r1, #1
   3a234:	sbc	r0, r0, #0
   3a238:	cmn	r0, #1
   3a23c:	bgt	3a36c <__assert_fail@plt+0x277b4>
   3a240:	b	3a38c <__assert_fail@plt+0x277d4>
   3a244:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a248:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a24c:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3a250:	rsbs	r1, r1, #0
   3a254:	rscs	r0, r0, #0
   3a258:	blt	3a36c <__assert_fail@plt+0x277b4>
   3a25c:	b	3a38c <__assert_fail@plt+0x277d4>
   3a260:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a264:	ldr	r1, [r0]
   3a268:	ldr	r0, [r0, #4]
   3a26c:	orr	r0, r1, r0
   3a270:	cmp	r0, #0
   3a274:	bne	3a280 <__assert_fail@plt+0x276c8>
   3a278:	b	3a27c <__assert_fail@plt+0x276c4>
   3a27c:	b	3a38c <__assert_fail@plt+0x277d4>
   3a280:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a284:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3a288:	cmn	r0, #1
   3a28c:	bgt	3a318 <__assert_fail@plt+0x27760>
   3a290:	b	3a294 <__assert_fail@plt+0x276dc>
   3a294:	b	3a298 <__assert_fail@plt+0x276e0>
   3a298:	b	3a2fc <__assert_fail@plt+0x27744>
   3a29c:	b	3a2fc <__assert_fail@plt+0x27744>
   3a2a0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a2a4:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a2a8:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3a2ac:	and	r0, r1, r0
   3a2b0:	cmn	r0, #1
   3a2b4:	bne	3a2fc <__assert_fail@plt+0x27744>
   3a2b8:	b	3a2bc <__assert_fail@plt+0x27704>
   3a2bc:	b	3a2c0 <__assert_fail@plt+0x27708>
   3a2c0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a2c4:	ldr	r1, [r0]
   3a2c8:	ldr	r0, [r0, #4]
   3a2cc:	rsbs	r1, r1, #0
   3a2d0:	rscs	r0, r0, #0
   3a2d4:	blt	3a36c <__assert_fail@plt+0x277b4>
   3a2d8:	b	3a38c <__assert_fail@plt+0x277d4>
   3a2dc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a2e0:	ldr	r1, [r0]
   3a2e4:	ldr	r0, [r0, #4]
   3a2e8:	subs	r1, r1, #1
   3a2ec:	sbc	r0, r0, #0
   3a2f0:	cmn	r0, #1
   3a2f4:	bgt	3a36c <__assert_fail@plt+0x277b4>
   3a2f8:	b	3a38c <__assert_fail@plt+0x277d4>
   3a2fc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a300:	ldr	r1, [r0]
   3a304:	ldr	r0, [r0, #4]
   3a308:	rsbs	r1, r1, #0
   3a30c:	rscs	r0, r0, #0
   3a310:	blt	3a36c <__assert_fail@plt+0x277b4>
   3a314:	b	3a38c <__assert_fail@plt+0x277d4>
   3a318:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a31c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a320:	ldr	r2, [r0, #-44]	; 0xffffffd4
   3a324:	ldr	r3, [r0]
   3a328:	ldr	r0, [r0, #4]
   3a32c:	mvn	ip, #0
   3a330:	mov	lr, #0
   3a334:	str	r0, [sp, #200]	; 0xc8
   3a338:	mov	r0, ip
   3a33c:	str	r1, [sp, #196]	; 0xc4
   3a340:	mov	r1, lr
   3a344:	str	r2, [sp, #192]	; 0xc0
   3a348:	mov	r2, r3
   3a34c:	ldr	r3, [sp, #200]	; 0xc8
   3a350:	bl	75338 <__assert_fail@plt+0x62780>
   3a354:	ldr	r2, [sp, #196]	; 0xc4
   3a358:	subs	r0, r0, r2
   3a35c:	ldr	r2, [sp, #192]	; 0xc0
   3a360:	sbcs	r1, r1, r2
   3a364:	bge	3a38c <__assert_fail@plt+0x277d4>
   3a368:	b	3a36c <__assert_fail@plt+0x277b4>
   3a36c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a370:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a374:	ldr	r0, [r0]
   3a378:	mul	r0, r1, r0
   3a37c:	mov	r1, #0
   3a380:	str	r1, [fp, #-1340]	; 0xfffffac4
   3a384:	str	r0, [fp, #-1344]	; 0xfffffac0
   3a388:	b	3aa40 <__assert_fail@plt+0x27e88>
   3a38c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a390:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a394:	ldr	r0, [r0]
   3a398:	mul	r0, r1, r0
   3a39c:	mov	r1, #0
   3a3a0:	str	r1, [fp, #-1340]	; 0xfffffac4
   3a3a4:	str	r0, [fp, #-1344]	; 0xfffffac0
   3a3a8:	b	3aa44 <__assert_fail@plt+0x27e8c>
   3a3ac:	b	3a3b0 <__assert_fail@plt+0x277f8>
   3a3b0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a3b4:	ldr	r0, [r0, #4]
   3a3b8:	cmn	r0, #1
   3a3bc:	bgt	3a59c <__assert_fail@plt+0x279e4>
   3a3c0:	b	3a3c4 <__assert_fail@plt+0x2780c>
   3a3c4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a3c8:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3a3cc:	cmn	r0, #1
   3a3d0:	bgt	3a4dc <__assert_fail@plt+0x27924>
   3a3d4:	b	3a3d8 <__assert_fail@plt+0x27820>
   3a3d8:	b	3a3dc <__assert_fail@plt+0x27824>
   3a3dc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a3e0:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a3e4:	ldr	r2, [r0, #-44]	; 0xffffffd4
   3a3e8:	ldr	r3, [r0]
   3a3ec:	ldr	r0, [r0, #4]
   3a3f0:	mvn	ip, #0
   3a3f4:	mvn	lr, #-2147483648	; 0x80000000
   3a3f8:	str	r0, [sp, #188]	; 0xbc
   3a3fc:	mov	r0, ip
   3a400:	str	r1, [sp, #184]	; 0xb8
   3a404:	mov	r1, lr
   3a408:	str	r2, [sp, #180]	; 0xb4
   3a40c:	mov	r2, r3
   3a410:	ldr	r3, [sp, #188]	; 0xbc
   3a414:	bl	75338 <__assert_fail@plt+0x62780>
   3a418:	ldr	r2, [sp, #184]	; 0xb8
   3a41c:	subs	r0, r2, r0
   3a420:	ldr	r2, [sp, #180]	; 0xb4
   3a424:	sbcs	r1, r2, r1
   3a428:	blt	3a6bc <__assert_fail@plt+0x27b04>
   3a42c:	b	3a6e8 <__assert_fail@plt+0x27b30>
   3a430:	b	3a434 <__assert_fail@plt+0x2787c>
   3a434:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a438:	ldr	r1, [r0]
   3a43c:	ldr	r0, [r0, #4]
   3a440:	eor	r0, r0, #-2147483648	; 0x80000000
   3a444:	orr	r0, r1, r0
   3a448:	cmp	r0, #0
   3a44c:	beq	3a470 <__assert_fail@plt+0x278b8>
   3a450:	b	3a484 <__assert_fail@plt+0x278cc>
   3a454:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a458:	ldr	r1, [r0]
   3a45c:	ldr	r0, [r0, #4]
   3a460:	subs	r1, r1, #1
   3a464:	sbcs	r0, r0, #0
   3a468:	blt	3a484 <__assert_fail@plt+0x278cc>
   3a46c:	b	3a470 <__assert_fail@plt+0x278b8>
   3a470:	mov	r0, #0
   3a474:	mov	r1, r0
   3a478:	str	r1, [sp, #176]	; 0xb0
   3a47c:	str	r0, [sp, #172]	; 0xac
   3a480:	b	3a4b0 <__assert_fail@plt+0x278f8>
   3a484:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a488:	ldr	r1, [r0]
   3a48c:	ldr	r0, [r0, #4]
   3a490:	rsbs	r2, r1, #0
   3a494:	rsc	r3, r0, #0
   3a498:	mvn	r0, #0
   3a49c:	mvn	r1, #-2147483648	; 0x80000000
   3a4a0:	bl	75338 <__assert_fail@plt+0x62780>
   3a4a4:	str	r0, [sp, #176]	; 0xb0
   3a4a8:	str	r1, [sp, #172]	; 0xac
   3a4ac:	b	3a4b0 <__assert_fail@plt+0x278f8>
   3a4b0:	ldr	r0, [sp, #172]	; 0xac
   3a4b4:	ldr	r1, [sp, #176]	; 0xb0
   3a4b8:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   3a4bc:	ldr	r3, [r2, #-48]	; 0xffffffd0
   3a4c0:	ldr	r2, [r2, #-44]	; 0xffffffd4
   3a4c4:	mvn	r2, r2
   3a4c8:	mvn	r3, r3
   3a4cc:	subs	r1, r3, r1
   3a4d0:	sbcs	r0, r2, r0
   3a4d4:	bge	3a6bc <__assert_fail@plt+0x27b04>
   3a4d8:	b	3a6e8 <__assert_fail@plt+0x27b30>
   3a4dc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a4e0:	ldr	r1, [r0]
   3a4e4:	ldr	r0, [r0, #4]
   3a4e8:	and	r0, r1, r0
   3a4ec:	cmn	r0, #1
   3a4f0:	bne	3a548 <__assert_fail@plt+0x27990>
   3a4f4:	b	3a4f8 <__assert_fail@plt+0x27940>
   3a4f8:	b	3a4fc <__assert_fail@plt+0x27944>
   3a4fc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a500:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a504:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3a508:	add	r0, r0, #-2147483648	; 0x80000000
   3a50c:	rsbs	r1, r1, #0
   3a510:	rscs	r0, r0, #0
   3a514:	blt	3a6bc <__assert_fail@plt+0x27b04>
   3a518:	b	3a6e8 <__assert_fail@plt+0x27b30>
   3a51c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a520:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a524:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3a528:	subs	r1, r1, #1
   3a52c:	sbcs	r0, r0, #0
   3a530:	blt	3a6e8 <__assert_fail@plt+0x27b30>
   3a534:	b	3a538 <__assert_fail@plt+0x27980>
   3a538:	mov	r0, #0
   3a53c:	cmp	r0, #0
   3a540:	bne	3a6bc <__assert_fail@plt+0x27b04>
   3a544:	b	3a6e8 <__assert_fail@plt+0x27b30>
   3a548:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a54c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a550:	ldr	r2, [r0, #-44]	; 0xffffffd4
   3a554:	ldr	r3, [r0]
   3a558:	ldr	r0, [r0, #4]
   3a55c:	mov	ip, #0
   3a560:	mov	lr, #-2147483648	; 0x80000000
   3a564:	str	r0, [sp, #168]	; 0xa8
   3a568:	mov	r0, ip
   3a56c:	str	r1, [sp, #164]	; 0xa4
   3a570:	mov	r1, lr
   3a574:	str	r2, [sp, #160]	; 0xa0
   3a578:	mov	r2, r3
   3a57c:	ldr	r3, [sp, #168]	; 0xa8
   3a580:	bl	75338 <__assert_fail@plt+0x62780>
   3a584:	ldr	r2, [sp, #164]	; 0xa4
   3a588:	subs	r0, r0, r2
   3a58c:	ldr	r2, [sp, #160]	; 0xa0
   3a590:	sbcs	r1, r1, r2
   3a594:	blt	3a6bc <__assert_fail@plt+0x27b04>
   3a598:	b	3a6e8 <__assert_fail@plt+0x27b30>
   3a59c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a5a0:	ldr	r1, [r0]
   3a5a4:	ldr	r0, [r0, #4]
   3a5a8:	orr	r0, r1, r0
   3a5ac:	cmp	r0, #0
   3a5b0:	bne	3a5bc <__assert_fail@plt+0x27a04>
   3a5b4:	b	3a5b8 <__assert_fail@plt+0x27a00>
   3a5b8:	b	3a6e8 <__assert_fail@plt+0x27b30>
   3a5bc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a5c0:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3a5c4:	cmn	r0, #1
   3a5c8:	bgt	3a668 <__assert_fail@plt+0x27ab0>
   3a5cc:	b	3a5d0 <__assert_fail@plt+0x27a18>
   3a5d0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a5d4:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a5d8:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3a5dc:	and	r0, r1, r0
   3a5e0:	cmn	r0, #1
   3a5e4:	bne	3a620 <__assert_fail@plt+0x27a68>
   3a5e8:	b	3a5ec <__assert_fail@plt+0x27a34>
   3a5ec:	b	3a5f0 <__assert_fail@plt+0x27a38>
   3a5f0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a5f4:	ldr	r1, [r0]
   3a5f8:	ldr	r0, [r0, #4]
   3a5fc:	add	r0, r0, #-2147483648	; 0x80000000
   3a600:	rsbs	r1, r1, #0
   3a604:	rscs	r0, r0, #0
   3a608:	blt	3a6bc <__assert_fail@plt+0x27b04>
   3a60c:	b	3a6e8 <__assert_fail@plt+0x27b30>
   3a610:	mov	r0, #0
   3a614:	cmp	r0, #0
   3a618:	bne	3a6bc <__assert_fail@plt+0x27b04>
   3a61c:	b	3a6e8 <__assert_fail@plt+0x27b30>
   3a620:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a624:	ldr	r2, [r0, #-48]	; 0xffffffd0
   3a628:	ldr	r3, [r0, #-44]	; 0xffffffd4
   3a62c:	ldr	r1, [r0]
   3a630:	ldr	r0, [r0, #4]
   3a634:	mov	ip, #0
   3a638:	mov	lr, #-2147483648	; 0x80000000
   3a63c:	str	r0, [sp, #156]	; 0x9c
   3a640:	mov	r0, ip
   3a644:	str	r1, [sp, #152]	; 0x98
   3a648:	mov	r1, lr
   3a64c:	bl	75338 <__assert_fail@plt+0x62780>
   3a650:	ldr	r2, [sp, #152]	; 0x98
   3a654:	subs	r0, r0, r2
   3a658:	ldr	r2, [sp, #156]	; 0x9c
   3a65c:	sbcs	r1, r1, r2
   3a660:	blt	3a6bc <__assert_fail@plt+0x27b04>
   3a664:	b	3a6e8 <__assert_fail@plt+0x27b30>
   3a668:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a66c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a670:	ldr	r2, [r0, #-44]	; 0xffffffd4
   3a674:	ldr	r3, [r0]
   3a678:	ldr	r0, [r0, #4]
   3a67c:	mvn	ip, #0
   3a680:	mvn	lr, #-2147483648	; 0x80000000
   3a684:	str	r0, [sp, #148]	; 0x94
   3a688:	mov	r0, ip
   3a68c:	str	r1, [sp, #144]	; 0x90
   3a690:	mov	r1, lr
   3a694:	str	r2, [sp, #140]	; 0x8c
   3a698:	mov	r2, r3
   3a69c:	ldr	r3, [sp, #148]	; 0x94
   3a6a0:	bl	75338 <__assert_fail@plt+0x62780>
   3a6a4:	ldr	r2, [sp, #144]	; 0x90
   3a6a8:	subs	r0, r0, r2
   3a6ac:	ldr	r2, [sp, #140]	; 0x8c
   3a6b0:	sbcs	r1, r1, r2
   3a6b4:	bge	3a6e8 <__assert_fail@plt+0x27b30>
   3a6b8:	b	3a6bc <__assert_fail@plt+0x27b04>
   3a6bc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a6c0:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a6c4:	ldr	r2, [r0, #-44]	; 0xffffffd4
   3a6c8:	ldr	r3, [r0]
   3a6cc:	ldr	r0, [r0, #4]
   3a6d0:	umull	ip, lr, r1, r3
   3a6d4:	mla	r0, r1, r0, lr
   3a6d8:	mla	r0, r2, r3, r0
   3a6dc:	str	ip, [fp, #-1344]	; 0xfffffac0
   3a6e0:	str	r0, [fp, #-1340]	; 0xfffffac4
   3a6e4:	b	3aa40 <__assert_fail@plt+0x27e88>
   3a6e8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a6ec:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a6f0:	ldr	r2, [r0, #-44]	; 0xffffffd4
   3a6f4:	ldr	r3, [r0]
   3a6f8:	ldr	r0, [r0, #4]
   3a6fc:	umull	ip, lr, r1, r3
   3a700:	mla	r0, r1, r0, lr
   3a704:	mla	r0, r2, r3, r0
   3a708:	str	ip, [fp, #-1344]	; 0xfffffac0
   3a70c:	str	r0, [fp, #-1340]	; 0xfffffac4
   3a710:	b	3aa44 <__assert_fail@plt+0x27e8c>
   3a714:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a718:	ldr	r0, [r0, #4]
   3a71c:	cmn	r0, #1
   3a720:	bgt	3a8e0 <__assert_fail@plt+0x27d28>
   3a724:	b	3a728 <__assert_fail@plt+0x27b70>
   3a728:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a72c:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3a730:	cmn	r0, #1
   3a734:	bgt	3a840 <__assert_fail@plt+0x27c88>
   3a738:	b	3a73c <__assert_fail@plt+0x27b84>
   3a73c:	b	3a790 <__assert_fail@plt+0x27bd8>
   3a740:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a744:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a748:	ldr	r2, [r0, #-44]	; 0xffffffd4
   3a74c:	ldr	r3, [r0]
   3a750:	ldr	r0, [r0, #4]
   3a754:	mvn	ip, #0
   3a758:	str	r0, [sp, #136]	; 0x88
   3a75c:	mov	r0, ip
   3a760:	str	r1, [sp, #132]	; 0x84
   3a764:	mov	r1, ip
   3a768:	str	r2, [sp, #128]	; 0x80
   3a76c:	mov	r2, r3
   3a770:	ldr	r3, [sp, #136]	; 0x88
   3a774:	bl	7540c <__assert_fail@plt+0x62854>
   3a778:	ldr	r2, [sp, #132]	; 0x84
   3a77c:	subs	r0, r2, r0
   3a780:	ldr	r2, [sp, #128]	; 0x80
   3a784:	sbcs	r1, r2, r1
   3a788:	bcc	3a9e8 <__assert_fail@plt+0x27e30>
   3a78c:	b	3aa14 <__assert_fail@plt+0x27e5c>
   3a790:	b	3a794 <__assert_fail@plt+0x27bdc>
   3a794:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a798:	ldr	r1, [r0]
   3a79c:	ldr	r0, [r0, #4]
   3a7a0:	eor	r0, r0, #-2147483648	; 0x80000000
   3a7a4:	orr	r0, r1, r0
   3a7a8:	cmp	r0, #0
   3a7ac:	beq	3a7d0 <__assert_fail@plt+0x27c18>
   3a7b0:	b	3a7e4 <__assert_fail@plt+0x27c2c>
   3a7b4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a7b8:	ldr	r1, [r0]
   3a7bc:	ldr	r0, [r0, #4]
   3a7c0:	subs	r1, r1, #1
   3a7c4:	sbcs	r0, r0, #0
   3a7c8:	blt	3a7e4 <__assert_fail@plt+0x27c2c>
   3a7cc:	b	3a7d0 <__assert_fail@plt+0x27c18>
   3a7d0:	mov	r0, #0
   3a7d4:	mov	r1, #1
   3a7d8:	str	r1, [sp, #124]	; 0x7c
   3a7dc:	str	r0, [sp, #120]	; 0x78
   3a7e0:	b	3a814 <__assert_fail@plt+0x27c5c>
   3a7e4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a7e8:	ldr	r1, [r0]
   3a7ec:	ldr	r0, [r0, #4]
   3a7f0:	rsbs	r2, r1, #0
   3a7f4:	rsc	r3, r0, #0
   3a7f8:	mvn	r0, #0
   3a7fc:	str	r0, [sp, #116]	; 0x74
   3a800:	ldr	r1, [sp, #116]	; 0x74
   3a804:	bl	7540c <__assert_fail@plt+0x62854>
   3a808:	str	r0, [sp, #124]	; 0x7c
   3a80c:	str	r1, [sp, #120]	; 0x78
   3a810:	b	3a814 <__assert_fail@plt+0x27c5c>
   3a814:	ldr	r0, [sp, #120]	; 0x78
   3a818:	ldr	r1, [sp, #124]	; 0x7c
   3a81c:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   3a820:	ldr	r3, [r2, #-48]	; 0xffffffd0
   3a824:	ldr	r2, [r2, #-44]	; 0xffffffd4
   3a828:	mvn	r2, r2
   3a82c:	mvn	r3, r3
   3a830:	subs	r1, r3, r1
   3a834:	sbcs	r0, r2, r0
   3a838:	bcs	3a9e8 <__assert_fail@plt+0x27e30>
   3a83c:	b	3aa14 <__assert_fail@plt+0x27e5c>
   3a840:	b	3a844 <__assert_fail@plt+0x27c8c>
   3a844:	b	3a8c4 <__assert_fail@plt+0x27d0c>
   3a848:	b	3a8c4 <__assert_fail@plt+0x27d0c>
   3a84c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a850:	ldr	r1, [r0]
   3a854:	ldr	r0, [r0, #4]
   3a858:	and	r0, r1, r0
   3a85c:	cmn	r0, #1
   3a860:	bne	3a8c4 <__assert_fail@plt+0x27d0c>
   3a864:	b	3a868 <__assert_fail@plt+0x27cb0>
   3a868:	b	3a86c <__assert_fail@plt+0x27cb4>
   3a86c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a870:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a874:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3a878:	rsbs	r1, r1, #0
   3a87c:	rscs	r0, r0, #0
   3a880:	blt	3a9e8 <__assert_fail@plt+0x27e30>
   3a884:	b	3aa14 <__assert_fail@plt+0x27e5c>
   3a888:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a88c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a890:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3a894:	subs	r1, r1, #1
   3a898:	sbcs	r0, r0, #0
   3a89c:	blt	3aa14 <__assert_fail@plt+0x27e5c>
   3a8a0:	b	3a8a4 <__assert_fail@plt+0x27cec>
   3a8a4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a8a8:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a8ac:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3a8b0:	subs	r1, r1, #1
   3a8b4:	sbc	r0, r0, #0
   3a8b8:	cmn	r0, #1
   3a8bc:	bgt	3a9e8 <__assert_fail@plt+0x27e30>
   3a8c0:	b	3aa14 <__assert_fail@plt+0x27e5c>
   3a8c4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a8c8:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a8cc:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3a8d0:	rsbs	r1, r1, #0
   3a8d4:	rscs	r0, r0, #0
   3a8d8:	blt	3a9e8 <__assert_fail@plt+0x27e30>
   3a8dc:	b	3aa14 <__assert_fail@plt+0x27e5c>
   3a8e0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a8e4:	ldr	r1, [r0]
   3a8e8:	ldr	r0, [r0, #4]
   3a8ec:	orr	r0, r1, r0
   3a8f0:	cmp	r0, #0
   3a8f4:	bne	3a900 <__assert_fail@plt+0x27d48>
   3a8f8:	b	3a8fc <__assert_fail@plt+0x27d44>
   3a8fc:	b	3aa14 <__assert_fail@plt+0x27e5c>
   3a900:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a904:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3a908:	cmn	r0, #1
   3a90c:	bgt	3a998 <__assert_fail@plt+0x27de0>
   3a910:	b	3a914 <__assert_fail@plt+0x27d5c>
   3a914:	b	3a918 <__assert_fail@plt+0x27d60>
   3a918:	b	3a97c <__assert_fail@plt+0x27dc4>
   3a91c:	b	3a97c <__assert_fail@plt+0x27dc4>
   3a920:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a924:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a928:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3a92c:	and	r0, r1, r0
   3a930:	cmn	r0, #1
   3a934:	bne	3a97c <__assert_fail@plt+0x27dc4>
   3a938:	b	3a93c <__assert_fail@plt+0x27d84>
   3a93c:	b	3a940 <__assert_fail@plt+0x27d88>
   3a940:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a944:	ldr	r1, [r0]
   3a948:	ldr	r0, [r0, #4]
   3a94c:	rsbs	r1, r1, #0
   3a950:	rscs	r0, r0, #0
   3a954:	blt	3a9e8 <__assert_fail@plt+0x27e30>
   3a958:	b	3aa14 <__assert_fail@plt+0x27e5c>
   3a95c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a960:	ldr	r1, [r0]
   3a964:	ldr	r0, [r0, #4]
   3a968:	subs	r1, r1, #1
   3a96c:	sbc	r0, r0, #0
   3a970:	cmn	r0, #1
   3a974:	bgt	3a9e8 <__assert_fail@plt+0x27e30>
   3a978:	b	3aa14 <__assert_fail@plt+0x27e5c>
   3a97c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a980:	ldr	r1, [r0]
   3a984:	ldr	r0, [r0, #4]
   3a988:	rsbs	r1, r1, #0
   3a98c:	rscs	r0, r0, #0
   3a990:	blt	3a9e8 <__assert_fail@plt+0x27e30>
   3a994:	b	3aa14 <__assert_fail@plt+0x27e5c>
   3a998:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a99c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a9a0:	ldr	r2, [r0, #-44]	; 0xffffffd4
   3a9a4:	ldr	r3, [r0]
   3a9a8:	ldr	r0, [r0, #4]
   3a9ac:	mvn	ip, #0
   3a9b0:	str	r0, [sp, #112]	; 0x70
   3a9b4:	mov	r0, ip
   3a9b8:	str	r1, [sp, #108]	; 0x6c
   3a9bc:	mov	r1, ip
   3a9c0:	str	r2, [sp, #104]	; 0x68
   3a9c4:	mov	r2, r3
   3a9c8:	ldr	r3, [sp, #112]	; 0x70
   3a9cc:	bl	7540c <__assert_fail@plt+0x62854>
   3a9d0:	ldr	r2, [sp, #108]	; 0x6c
   3a9d4:	subs	r0, r0, r2
   3a9d8:	ldr	r2, [sp, #104]	; 0x68
   3a9dc:	sbcs	r1, r1, r2
   3a9e0:	bcs	3aa14 <__assert_fail@plt+0x27e5c>
   3a9e4:	b	3a9e8 <__assert_fail@plt+0x27e30>
   3a9e8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a9ec:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a9f0:	ldr	r2, [r0, #-44]	; 0xffffffd4
   3a9f4:	ldr	r3, [r0]
   3a9f8:	ldr	r0, [r0, #4]
   3a9fc:	umull	ip, lr, r1, r3
   3aa00:	mla	r0, r1, r0, lr
   3aa04:	mla	r0, r2, r3, r0
   3aa08:	str	ip, [fp, #-1344]	; 0xfffffac0
   3aa0c:	str	r0, [fp, #-1340]	; 0xfffffac4
   3aa10:	b	3aa40 <__assert_fail@plt+0x27e88>
   3aa14:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3aa18:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3aa1c:	ldr	r2, [r0, #-44]	; 0xffffffd4
   3aa20:	ldr	r3, [r0]
   3aa24:	ldr	r0, [r0, #4]
   3aa28:	umull	ip, lr, r1, r3
   3aa2c:	mla	r0, r1, r0, lr
   3aa30:	mla	r0, r2, r3, r0
   3aa34:	str	ip, [fp, #-1344]	; 0xfffffac0
   3aa38:	str	r0, [fp, #-1340]	; 0xfffffac4
   3aa3c:	b	3aa44 <__assert_fail@plt+0x27e8c>
   3aa40:	b	3b1b8 <__assert_fail@plt+0x28600>
   3aa44:	b	3ae7c <__assert_fail@plt+0x282c4>
   3aa48:	mov	r0, #0
   3aa4c:	str	r0, [sp, #1684]	; 0x694
   3aa50:	str	r0, [sp, #1680]	; 0x690
   3aa54:	str	r0, [sp, #1692]	; 0x69c
   3aa58:	str	r0, [sp, #1688]	; 0x698
   3aa5c:	add	r1, sp, #1680	; 0x690
   3aa60:	add	r2, r1, #16
   3aa64:	str	r0, [sp, #1700]	; 0x6a4
   3aa68:	str	r0, [sp, #1696]	; 0x6a0
   3aa6c:	str	r0, [sp, #1708]	; 0x6ac
   3aa70:	str	r0, [sp, #1704]	; 0x6a8
   3aa74:	add	r3, r1, #32
   3aa78:	str	r0, [sp, #1716]	; 0x6b4
   3aa7c:	str	r0, [sp, #1712]	; 0x6b0
   3aa80:	str	r0, [sp, #1724]	; 0x6bc
   3aa84:	str	r0, [sp, #1720]	; 0x6b8
   3aa88:	str	r0, [sp, #1728]	; 0x6c0
   3aa8c:	sub	r0, fp, #1360	; 0x550
   3aa90:	add	ip, r0, #32
   3aa94:	vld1.64	{d16-d17}, [r3]
   3aa98:	vst1.64	{d16-d17}, [ip]
   3aa9c:	add	r3, r0, #16
   3aaa0:	vld1.64	{d16-d17}, [r2]
   3aaa4:	vst1.64	{d16-d17}, [r3]
   3aaa8:	add	lr, sp, #1024	; 0x400
   3aaac:	vldr	d18, [lr, #704]	; 0x2c0
   3aab0:	ldr	r2, [sp, #1500]	; 0x5dc
   3aab4:	vstr	d18, [r2, #704]	; 0x2c0
   3aab8:	vld1.64	{d16-d17}, [r1]
   3aabc:	mov	r1, #24
   3aac0:	vst1.64	{d16-d17}, [r0], r1
   3aac4:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   3aac8:	ldr	r3, [r1, #-48]	; 0xffffffd0
   3aacc:	ldr	r1, [r1, #-44]	; 0xffffffd4
   3aad0:	str	r1, [r0, #4]
   3aad4:	str	r3, [r0]
   3aad8:	b	3ae7c <__assert_fail@plt+0x282c4>
   3aadc:	mov	r0, #0
   3aae0:	str	r0, [sp, #1628]	; 0x65c
   3aae4:	str	r0, [sp, #1624]	; 0x658
   3aae8:	str	r0, [sp, #1636]	; 0x664
   3aaec:	str	r0, [sp, #1632]	; 0x660
   3aaf0:	add	lr, sp, #1024	; 0x400
   3aaf4:	add	r1, lr, #600	; 0x258
   3aaf8:	add	r2, r1, #16
   3aafc:	str	r0, [sp, #1644]	; 0x66c
   3ab00:	str	r0, [sp, #1640]	; 0x668
   3ab04:	str	r0, [sp, #1652]	; 0x674
   3ab08:	str	r0, [sp, #1648]	; 0x670
   3ab0c:	add	r3, r1, #32
   3ab10:	str	r0, [sp, #1660]	; 0x67c
   3ab14:	str	r0, [sp, #1656]	; 0x678
   3ab18:	str	r0, [sp, #1668]	; 0x684
   3ab1c:	str	r0, [sp, #1664]	; 0x680
   3ab20:	str	r0, [sp, #1672]	; 0x688
   3ab24:	sub	r0, fp, #1360	; 0x550
   3ab28:	add	ip, r0, #32
   3ab2c:	vld1.64	{d16-d17}, [r3]
   3ab30:	vst1.64	{d16-d17}, [ip]
   3ab34:	add	r3, r0, #16
   3ab38:	vld1.64	{d16-d17}, [r2]
   3ab3c:	vst1.64	{d16-d17}, [r3]
   3ab40:	vld1.64	{d16-d17}, [r1]
   3ab44:	mov	r1, #48	; 0x30
   3ab48:	vst1.64	{d16-d17}, [r0], r1
   3ab4c:	add	lr, sp, #1024	; 0x400
   3ab50:	vldr	d18, [lr, #648]	; 0x288
   3ab54:	vstr	d18, [r0]
   3ab58:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3ab5c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3ab60:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3ab64:	str	r0, [fp, #-1324]	; 0xfffffad4
   3ab68:	str	r1, [fp, #-1328]	; 0xfffffad0
   3ab6c:	b	3ae7c <__assert_fail@plt+0x282c4>
   3ab70:	mov	r0, #0
   3ab74:	str	r0, [sp, #1572]	; 0x624
   3ab78:	str	r0, [sp, #1568]	; 0x620
   3ab7c:	str	r0, [sp, #1580]	; 0x62c
   3ab80:	str	r0, [sp, #1576]	; 0x628
   3ab84:	add	r1, sp, #1568	; 0x620
   3ab88:	add	r2, r1, #16
   3ab8c:	str	r0, [sp, #1588]	; 0x634
   3ab90:	str	r0, [sp, #1584]	; 0x630
   3ab94:	str	r0, [sp, #1596]	; 0x63c
   3ab98:	str	r0, [sp, #1592]	; 0x638
   3ab9c:	add	r3, r1, #32
   3aba0:	str	r0, [sp, #1604]	; 0x644
   3aba4:	str	r0, [sp, #1600]	; 0x640
   3aba8:	str	r0, [sp, #1612]	; 0x64c
   3abac:	str	r0, [sp, #1608]	; 0x648
   3abb0:	str	r0, [sp, #1616]	; 0x650
   3abb4:	sub	r0, fp, #1360	; 0x550
   3abb8:	add	ip, r0, #32
   3abbc:	vld1.64	{d16-d17}, [r3]
   3abc0:	vst1.64	{d16-d17}, [ip]
   3abc4:	add	r3, r0, #16
   3abc8:	vld1.64	{d16-d17}, [r2]
   3abcc:	vst1.64	{d16-d17}, [r3]
   3abd0:	add	lr, sp, #1024	; 0x400
   3abd4:	vldr	d18, [lr, #592]	; 0x250
   3abd8:	ldr	r2, [sp, #1500]	; 0x5dc
   3abdc:	vstr	d18, [r2, #704]	; 0x2c0
   3abe0:	vld1.64	{d16-d17}, [r1]
   3abe4:	mov	r1, #40	; 0x28
   3abe8:	vst1.64	{d16-d17}, [r0], r1
   3abec:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   3abf0:	ldr	r3, [r1, #-48]	; 0xffffffd0
   3abf4:	ldr	r1, [r1, #-44]	; 0xffffffd4
   3abf8:	str	r1, [r0, #4]
   3abfc:	str	r3, [r0]
   3ac00:	b	3ae7c <__assert_fail@plt+0x282c4>
   3ac04:	mov	r0, #0
   3ac08:	str	r0, [sp, #1516]	; 0x5ec
   3ac0c:	str	r0, [sp, #1512]	; 0x5e8
   3ac10:	str	r0, [sp, #1524]	; 0x5f4
   3ac14:	str	r0, [sp, #1520]	; 0x5f0
   3ac18:	add	lr, sp, #1024	; 0x400
   3ac1c:	add	r1, lr, #488	; 0x1e8
   3ac20:	add	r2, r1, #16
   3ac24:	str	r0, [sp, #1532]	; 0x5fc
   3ac28:	str	r0, [sp, #1528]	; 0x5f8
   3ac2c:	str	r0, [sp, #1540]	; 0x604
   3ac30:	str	r0, [sp, #1536]	; 0x600
   3ac34:	add	r3, r1, #32
   3ac38:	str	r0, [sp, #1548]	; 0x60c
   3ac3c:	str	r0, [sp, #1544]	; 0x608
   3ac40:	str	r0, [sp, #1556]	; 0x614
   3ac44:	str	r0, [sp, #1552]	; 0x610
   3ac48:	str	r0, [sp, #1560]	; 0x618
   3ac4c:	sub	r0, fp, #1360	; 0x550
   3ac50:	add	ip, r0, #32
   3ac54:	vld1.64	{d16-d17}, [r3]
   3ac58:	vst1.64	{d16-d17}, [ip]
   3ac5c:	add	r3, r0, #16
   3ac60:	vld1.64	{d16-d17}, [r2]
   3ac64:	vst1.64	{d16-d17}, [r3]
   3ac68:	vld1.64	{d16-d17}, [r1]
   3ac6c:	mov	r1, #48	; 0x30
   3ac70:	vst1.64	{d16-d17}, [r0], r1
   3ac74:	add	lr, sp, #1024	; 0x400
   3ac78:	vldr	d18, [lr, #536]	; 0x218
   3ac7c:	vstr	d18, [r0]
   3ac80:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3ac84:	ldr	r1, [r0]
   3ac88:	ldr	r0, [r0, #4]
   3ac8c:	str	r0, [fp, #-1340]	; 0xfffffac4
   3ac90:	str	r1, [fp, #-1344]	; 0xfffffac0
   3ac94:	b	3ae7c <__assert_fail@plt+0x282c4>
   3ac98:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3ac9c:	ldr	r1, [r0, #8]
   3aca0:	ldr	r0, [r0, #12]
   3aca4:	str	r0, [sp, #100]	; 0x64
   3aca8:	mov	r0, r1
   3acac:	ldr	r1, [sp, #100]	; 0x64
   3acb0:	bl	3d7d0 <__assert_fail@plt+0x2ac18>
   3acb4:	tst	r0, #1
   3acb8:	beq	3acc0 <__assert_fail@plt+0x28108>
   3acbc:	b	3b1b8 <__assert_fail@plt+0x28600>
   3acc0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3acc4:	ldr	r0, [r0, #8]
   3acc8:	str	r0, [fp, #-1360]	; 0xfffffab0
   3accc:	movw	r0, #0
   3acd0:	str	r0, [fp, #-1356]	; 0xfffffab4
   3acd4:	b	3ae7c <__assert_fail@plt+0x282c4>
   3acd8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3acdc:	ldr	r1, [r0, #8]
   3ace0:	ldr	r0, [r0, #12]
   3ace4:	str	r0, [sp, #96]	; 0x60
   3ace8:	mov	r0, r1
   3acec:	ldr	r1, [sp, #96]	; 0x60
   3acf0:	bl	3d7d0 <__assert_fail@plt+0x2ac18>
   3acf4:	tst	r0, #1
   3acf8:	beq	3ad00 <__assert_fail@plt+0x28148>
   3acfc:	b	3b1b8 <__assert_fail@plt+0x28600>
   3ad00:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3ad04:	ldr	r0, [r0, #8]
   3ad08:	str	r0, [fp, #-1360]	; 0xfffffab0
   3ad0c:	movw	r0, #0
   3ad10:	str	r0, [fp, #-1356]	; 0xfffffab4
   3ad14:	b	3ae7c <__assert_fail@plt+0x282c4>
   3ad18:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3ad1c:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   3ad20:	ldr	r2, [r1, #20]
   3ad24:	ldr	r3, [r1, #16]
   3ad28:	ldr	ip, [r1]
   3ad2c:	ldr	lr, [r1, #4]
   3ad30:	ldr	r4, [r1, #8]
   3ad34:	ldr	r1, [r1, #12]
   3ad38:	mov	r5, sp
   3ad3c:	str	r4, [r5]
   3ad40:	str	r1, [r5, #4]
   3ad44:	str	r3, [r5, #8]
   3ad48:	str	r2, [r5, #12]
   3ad4c:	mov	r2, ip
   3ad50:	mov	r3, lr
   3ad54:	bl	3d850 <__assert_fail@plt+0x2ac98>
   3ad58:	b	3ae7c <__assert_fail@plt+0x282c4>
   3ad5c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3ad60:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   3ad64:	ldr	r2, [r1, #-56]	; 0xffffffc8
   3ad68:	ldr	r3, [r1, #-52]	; 0xffffffcc
   3ad6c:	ldr	ip, [r1, #-48]	; 0xffffffd0
   3ad70:	ldr	lr, [r1, #-44]	; 0xffffffd4
   3ad74:	ldr	r4, [r1, #-40]	; 0xffffffd8
   3ad78:	ldr	r1, [r1, #-36]	; 0xffffffdc
   3ad7c:	mov	r5, sp
   3ad80:	str	r1, [r5, #12]
   3ad84:	str	r4, [r5, #8]
   3ad88:	str	lr, [r5, #4]
   3ad8c:	str	ip, [r5]
   3ad90:	bl	3d850 <__assert_fail@plt+0x2ac98>
   3ad94:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3ad98:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   3ad9c:	ldr	r2, [r1, #52]	; 0x34
   3ada0:	ldr	r3, [r1, #48]	; 0x30
   3ada4:	ldr	ip, [r1, #44]	; 0x2c
   3ada8:	ldr	lr, [r1, #40]	; 0x28
   3adac:	ldr	r4, [r1, #36]	; 0x24
   3adb0:	ldr	r5, [r1, #32]
   3adb4:	ldr	r6, [r1, #28]
   3adb8:	ldr	r7, [r1, #24]
   3adbc:	ldr	r8, [r1, #20]
   3adc0:	ldr	r9, [r1, #16]
   3adc4:	ldr	sl, [r1]
   3adc8:	str	r3, [sp, #92]	; 0x5c
   3adcc:	ldr	r3, [r1, #4]
   3add0:	str	r0, [sp, #88]	; 0x58
   3add4:	ldr	r0, [r1, #8]
   3add8:	ldr	r1, [r1, #12]
   3addc:	str	r0, [sp, #84]	; 0x54
   3ade0:	mov	r0, sp
   3ade4:	str	r0, [sp, #80]	; 0x50
   3ade8:	mov	r0, #1
   3adec:	str	r1, [sp, #76]	; 0x4c
   3adf0:	ldr	r1, [sp, #80]	; 0x50
   3adf4:	str	r0, [r1, #48]	; 0x30
   3adf8:	ldr	r0, [sp, #84]	; 0x54
   3adfc:	str	r0, [r1]
   3ae00:	ldr	r0, [sp, #76]	; 0x4c
   3ae04:	str	r0, [r1, #4]
   3ae08:	str	r9, [r1, #8]
   3ae0c:	str	r8, [r1, #12]
   3ae10:	str	r7, [r1, #16]
   3ae14:	str	r6, [r1, #20]
   3ae18:	str	r5, [r1, #24]
   3ae1c:	str	r4, [r1, #28]
   3ae20:	str	lr, [r1, #32]
   3ae24:	str	ip, [r1, #36]	; 0x24
   3ae28:	ldr	ip, [sp, #92]	; 0x5c
   3ae2c:	str	ip, [r1, #40]	; 0x28
   3ae30:	str	r2, [r1, #44]	; 0x2c
   3ae34:	ldr	r0, [sp, #88]	; 0x58
   3ae38:	mov	r2, sl
   3ae3c:	bl	3d168 <__assert_fail@plt+0x2a5b0>
   3ae40:	tst	r0, #1
   3ae44:	bne	3ae4c <__assert_fail@plt+0x28294>
   3ae48:	b	3b1b8 <__assert_fail@plt+0x28600>
   3ae4c:	b	3ae7c <__assert_fail@plt+0x282c4>
   3ae50:	mvn	r0, #0
   3ae54:	str	r0, [fp, #-1356]	; 0xfffffab4
   3ae58:	str	r0, [fp, #-1360]	; 0xfffffab0
   3ae5c:	b	3ae7c <__assert_fail@plt+0x282c4>
   3ae60:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3ae64:	ldr	r1, [r0, #8]
   3ae68:	ldr	r0, [r0, #12]
   3ae6c:	str	r0, [fp, #-1356]	; 0xfffffab4
   3ae70:	str	r1, [fp, #-1360]	; 0xfffffab0
   3ae74:	b	3ae7c <__assert_fail@plt+0x282c4>
   3ae78:	b	3ae7c <__assert_fail@plt+0x282c4>
   3ae7c:	ldr	r0, [fp, #-1364]	; 0xfffffaac
   3ae80:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   3ae84:	rsb	r0, r0, #0
   3ae88:	rsb	r0, r0, r0, lsl #3
   3ae8c:	add	r0, r1, r0, lsl #3
   3ae90:	str	r0, [fp, #-1288]	; 0xfffffaf8
   3ae94:	ldr	r0, [fp, #-1364]	; 0xfffffaac
   3ae98:	ldr	r1, [fp, #-156]	; 0xffffff64
   3ae9c:	rsb	r2, r0, #0
   3aea0:	sub	r0, r1, r0, lsl #1
   3aea4:	str	r0, [fp, #-156]	; 0xffffff64
   3aea8:	movw	r0, #0
   3aeac:	str	r0, [fp, #-1364]	; 0xfffffaac
   3aeb0:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   3aeb4:	add	r1, r1, #56	; 0x38
   3aeb8:	str	r1, [fp, #-1288]	; 0xfffffaf8
   3aebc:	sub	r3, fp, #1360	; 0x550
   3aec0:	str	r0, [sp, #72]	; 0x48
   3aec4:	mov	r0, r1
   3aec8:	mov	r1, r3
   3aecc:	movw	r3, #56	; 0x38
   3aed0:	str	r2, [sp, #68]	; 0x44
   3aed4:	mov	r2, r3
   3aed8:	bl	125c4 <memcpy@plt>
   3aedc:	ldr	r0, [fp, #-1296]	; 0xfffffaf0
   3aee0:	movw	r1, #42112	; 0xa480
   3aee4:	movt	r1, #7
   3aee8:	add	r0, r1, r0
   3aeec:	ldrb	r0, [r0]
   3aef0:	sub	r0, r0, #28
   3aef4:	str	r0, [sp, #1508]	; 0x5e4
   3aef8:	ldr	r0, [sp, #1508]	; 0x5e4
   3aefc:	movw	r1, #42204	; 0xa4dc
   3af00:	movt	r1, #7
   3af04:	add	r0, r1, r0
   3af08:	ldrsb	r0, [r0]
   3af0c:	ldr	r1, [fp, #-156]	; 0xffffff64
   3af10:	ldrsh	r1, [r1]
   3af14:	add	r0, r0, r1
   3af18:	str	r0, [sp, #1504]	; 0x5e0
   3af1c:	ldr	r0, [sp, #1504]	; 0x5e0
   3af20:	ldr	r1, [sp, #72]	; 0x48
   3af24:	cmp	r1, r0
   3af28:	bgt	3af78 <__assert_fail@plt+0x283c0>
   3af2c:	ldr	r0, [sp, #1504]	; 0x5e0
   3af30:	cmp	r0, #112	; 0x70
   3af34:	bgt	3af78 <__assert_fail@plt+0x283c0>
   3af38:	ldr	r0, [sp, #1504]	; 0x5e0
   3af3c:	movw	r1, #41680	; 0xa2d0
   3af40:	movt	r1, #7
   3af44:	add	r0, r1, r0
   3af48:	ldrsb	r0, [r0]
   3af4c:	ldr	r1, [fp, #-156]	; 0xffffff64
   3af50:	ldrsh	r1, [r1]
   3af54:	cmp	r0, r1
   3af58:	bne	3af78 <__assert_fail@plt+0x283c0>
   3af5c:	ldr	r0, [sp, #1504]	; 0x5e0
   3af60:	movw	r1, #41793	; 0xa341
   3af64:	movt	r1, #7
   3af68:	add	r0, r1, r0
   3af6c:	ldrb	r0, [r0]
   3af70:	str	r0, [sp, #64]	; 0x40
   3af74:	b	3af90 <__assert_fail@plt+0x283d8>
   3af78:	ldr	r0, [sp, #1508]	; 0x5e4
   3af7c:	movw	r1, #42230	; 0xa4f6
   3af80:	movt	r1, #7
   3af84:	add	r0, r1, r0
   3af88:	ldrsb	r0, [r0]
   3af8c:	str	r0, [sp, #64]	; 0x40
   3af90:	ldr	r0, [sp, #64]	; 0x40
   3af94:	str	r0, [fp, #-104]	; 0xffffff98
   3af98:	b	32590 <__assert_fail@plt+0x1f9d8>
   3af9c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3afa0:	cmn	r0, #2
   3afa4:	bne	3afb4 <__assert_fail@plt+0x283fc>
   3afa8:	mvn	r0, #1
   3afac:	str	r0, [sp, #60]	; 0x3c
   3afb0:	b	3aff4 <__assert_fail@plt+0x2843c>
   3afb4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3afb8:	movw	r1, #277	; 0x115
   3afbc:	cmp	r0, r1
   3afc0:	bhi	3afe0 <__assert_fail@plt+0x28428>
   3afc4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3afc8:	movw	r1, #41402	; 0xa1ba
   3afcc:	movt	r1, #7
   3afd0:	add	r0, r1, r0
   3afd4:	ldrb	r0, [r0]
   3afd8:	str	r0, [sp, #56]	; 0x38
   3afdc:	b	3afec <__assert_fail@plt+0x28434>
   3afe0:	movw	r0, #2
   3afe4:	str	r0, [sp, #56]	; 0x38
   3afe8:	b	3afec <__assert_fail@plt+0x28434>
   3afec:	ldr	r0, [sp, #56]	; 0x38
   3aff0:	str	r0, [sp, #60]	; 0x3c
   3aff4:	ldr	r0, [sp, #60]	; 0x3c
   3aff8:	str	r0, [fp, #-1304]	; 0xfffffae8
   3affc:	ldr	r0, [fp, #-108]	; 0xffffff94
   3b000:	cmp	r0, #0
   3b004:	bne	3b024 <__assert_fail@plt+0x2846c>
   3b008:	ldr	r0, [fp, #-100]	; 0xffffff9c
   3b00c:	add	r0, r0, #1
   3b010:	str	r0, [fp, #-100]	; 0xffffff9c
   3b014:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3b018:	movw	r1, #44410	; 0xad7a
   3b01c:	movt	r1, #7
   3b020:	bl	3da80 <__assert_fail@plt+0x2aec8>
   3b024:	ldr	r0, [fp, #-108]	; 0xffffff94
   3b028:	cmp	r0, #3
   3b02c:	bne	3b074 <__assert_fail@plt+0x284bc>
   3b030:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3b034:	cmp	r0, #0
   3b038:	bgt	3b050 <__assert_fail@plt+0x28498>
   3b03c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3b040:	cmp	r0, #0
   3b044:	bne	3b04c <__assert_fail@plt+0x28494>
   3b048:	b	3b1b8 <__assert_fail@plt+0x28600>
   3b04c:	b	3b070 <__assert_fail@plt+0x284b8>
   3b050:	ldr	r1, [fp, #-1304]	; 0xfffffae8
   3b054:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3b058:	movw	r0, #44423	; 0xad87
   3b05c:	movt	r0, #7
   3b060:	sub	r2, fp, #96	; 0x60
   3b064:	bl	3da98 <__assert_fail@plt+0x2aee0>
   3b068:	mvn	r0, #1
   3b06c:	str	r0, [fp, #-40]	; 0xffffffd8
   3b070:	b	3b074 <__assert_fail@plt+0x284bc>
   3b074:	b	3b078 <__assert_fail@plt+0x284c0>
   3b078:	movw	r0, #3
   3b07c:	str	r0, [fp, #-108]	; 0xffffff94
   3b080:	ldr	r0, [fp, #-104]	; 0xffffff98
   3b084:	movw	r1, #41288	; 0xa148
   3b088:	movt	r1, #7
   3b08c:	add	r0, r1, r0
   3b090:	ldrsb	r0, [r0]
   3b094:	str	r0, [fp, #-1296]	; 0xfffffaf0
   3b098:	ldr	r0, [fp, #-1296]	; 0xfffffaf0
   3b09c:	cmn	r0, #93	; 0x5d
   3b0a0:	beq	3b11c <__assert_fail@plt+0x28564>
   3b0a4:	ldr	r0, [fp, #-1296]	; 0xfffffaf0
   3b0a8:	add	r0, r0, #1
   3b0ac:	str	r0, [fp, #-1296]	; 0xfffffaf0
   3b0b0:	ldr	r0, [fp, #-1296]	; 0xfffffaf0
   3b0b4:	movw	r1, #0
   3b0b8:	cmp	r1, r0
   3b0bc:	bgt	3b118 <__assert_fail@plt+0x28560>
   3b0c0:	ldr	r0, [fp, #-1296]	; 0xfffffaf0
   3b0c4:	cmp	r0, #112	; 0x70
   3b0c8:	bgt	3b118 <__assert_fail@plt+0x28560>
   3b0cc:	ldr	r0, [fp, #-1296]	; 0xfffffaf0
   3b0d0:	movw	r1, #41680	; 0xa2d0
   3b0d4:	movt	r1, #7
   3b0d8:	add	r0, r1, r0
   3b0dc:	ldrsb	r0, [r0]
   3b0e0:	cmp	r0, #1
   3b0e4:	bne	3b118 <__assert_fail@plt+0x28560>
   3b0e8:	ldr	r0, [fp, #-1296]	; 0xfffffaf0
   3b0ec:	movw	r1, #41793	; 0xa341
   3b0f0:	movt	r1, #7
   3b0f4:	add	r0, r1, r0
   3b0f8:	ldrb	r0, [r0]
   3b0fc:	str	r0, [fp, #-1296]	; 0xfffffaf0
   3b100:	ldr	r0, [fp, #-1296]	; 0xfffffaf0
   3b104:	movw	r1, #0
   3b108:	cmp	r1, r0
   3b10c:	bge	3b114 <__assert_fail@plt+0x2855c>
   3b110:	b	3b188 <__assert_fail@plt+0x285d0>
   3b114:	b	3b118 <__assert_fail@plt+0x28560>
   3b118:	b	3b11c <__assert_fail@plt+0x28564>
   3b11c:	ldr	r0, [fp, #-156]	; 0xffffff64
   3b120:	ldr	r1, [fp, #-152]	; 0xffffff68
   3b124:	cmp	r0, r1
   3b128:	bne	3b130 <__assert_fail@plt+0x28578>
   3b12c:	b	3b1b8 <__assert_fail@plt+0x28600>
   3b130:	ldr	r0, [fp, #-104]	; 0xffffff98
   3b134:	movw	r1, #42256	; 0xa510
   3b138:	movt	r1, #7
   3b13c:	add	r0, r1, r0
   3b140:	ldrb	r1, [r0]
   3b144:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   3b148:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3b14c:	movw	r0, #44441	; 0xad99
   3b150:	movt	r0, #7
   3b154:	bl	3da98 <__assert_fail@plt+0x2aee0>
   3b158:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b15c:	mvn	r1, #55	; 0x37
   3b160:	add	r0, r0, r1
   3b164:	str	r0, [fp, #-1288]	; 0xfffffaf8
   3b168:	ldr	r0, [fp, #-156]	; 0xffffff64
   3b16c:	mvn	r1, #1
   3b170:	add	r0, r0, r1
   3b174:	str	r0, [fp, #-156]	; 0xffffff64
   3b178:	ldr	r0, [fp, #-156]	; 0xffffff64
   3b17c:	ldrsh	r0, [r0]
   3b180:	str	r0, [fp, #-104]	; 0xffffff98
   3b184:	b	3b080 <__assert_fail@plt+0x284c8>
   3b188:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b18c:	add	r0, r0, #56	; 0x38
   3b190:	str	r0, [fp, #-1288]	; 0xfffffaf8
   3b194:	sub	r1, fp, #96	; 0x60
   3b198:	movw	r2, #56	; 0x38
   3b19c:	bl	125c4 <memcpy@plt>
   3b1a0:	ldr	r0, [fp, #-1296]	; 0xfffffaf0
   3b1a4:	str	r0, [fp, #-104]	; 0xffffff98
   3b1a8:	b	32590 <__assert_fail@plt+0x1f9d8>
   3b1ac:	movw	r0, #0
   3b1b0:	str	r0, [fp, #-1300]	; 0xfffffaec
   3b1b4:	b	3b1dc <__assert_fail@plt+0x28624>
   3b1b8:	movw	r0, #1
   3b1bc:	str	r0, [fp, #-1300]	; 0xfffffaec
   3b1c0:	b	3b1dc <__assert_fail@plt+0x28624>
   3b1c4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3b1c8:	movw	r1, #44456	; 0xada8
   3b1cc:	movt	r1, #7
   3b1d0:	bl	3da80 <__assert_fail@plt+0x2aec8>
   3b1d4:	movw	r1, #2
   3b1d8:	str	r1, [fp, #-1300]	; 0xfffffaec
   3b1dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3b1e0:	cmn	r0, #2
   3b1e4:	beq	3b240 <__assert_fail@plt+0x28688>
   3b1e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3b1ec:	movw	r1, #277	; 0x115
   3b1f0:	cmp	r0, r1
   3b1f4:	bhi	3b214 <__assert_fail@plt+0x2865c>
   3b1f8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3b1fc:	movw	r1, #41402	; 0xa1ba
   3b200:	movt	r1, #7
   3b204:	add	r0, r1, r0
   3b208:	ldrb	r0, [r0]
   3b20c:	str	r0, [sp, #52]	; 0x34
   3b210:	b	3b220 <__assert_fail@plt+0x28668>
   3b214:	movw	r0, #2
   3b218:	str	r0, [sp, #52]	; 0x34
   3b21c:	b	3b220 <__assert_fail@plt+0x28668>
   3b220:	ldr	r0, [sp, #52]	; 0x34
   3b224:	str	r0, [fp, #-1304]	; 0xfffffae8
   3b228:	ldr	r1, [fp, #-1304]	; 0xfffffae8
   3b22c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3b230:	movw	r0, #44473	; 0xadb9
   3b234:	movt	r0, #7
   3b238:	sub	r2, fp, #96	; 0x60
   3b23c:	bl	3da98 <__assert_fail@plt+0x2aee0>
   3b240:	ldr	r0, [fp, #-1364]	; 0xfffffaac
   3b244:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   3b248:	rsb	r0, r0, #0
   3b24c:	rsb	r0, r0, r0, lsl #3
   3b250:	add	r0, r1, r0, lsl #3
   3b254:	str	r0, [fp, #-1288]	; 0xfffffaf8
   3b258:	ldr	r0, [fp, #-1364]	; 0xfffffaac
   3b25c:	ldr	r1, [fp, #-156]	; 0xffffff64
   3b260:	rsb	r2, r0, #0
   3b264:	sub	r0, r1, r0, lsl #1
   3b268:	str	r0, [fp, #-156]	; 0xffffff64
   3b26c:	ldr	r0, [fp, #-156]	; 0xffffff64
   3b270:	ldr	r1, [fp, #-152]	; 0xffffff68
   3b274:	cmp	r0, r1
   3b278:	beq	3b2cc <__assert_fail@plt+0x28714>
   3b27c:	ldr	r0, [fp, #-156]	; 0xffffff64
   3b280:	ldrsh	r0, [r0]
   3b284:	movw	r1, #42256	; 0xa510
   3b288:	movt	r1, #7
   3b28c:	add	r0, r1, r0
   3b290:	ldrb	r1, [r0]
   3b294:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   3b298:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3b29c:	movw	r0, #44503	; 0xadd7
   3b2a0:	movt	r0, #7
   3b2a4:	bl	3da98 <__assert_fail@plt+0x2aee0>
   3b2a8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b2ac:	mvn	r1, #55	; 0x37
   3b2b0:	add	r0, r0, r1
   3b2b4:	str	r0, [fp, #-1288]	; 0xfffffaf8
   3b2b8:	ldr	r0, [fp, #-156]	; 0xffffff64
   3b2bc:	mvn	r1, #1
   3b2c0:	add	r0, r0, r1
   3b2c4:	str	r0, [fp, #-156]	; 0xffffff64
   3b2c8:	b	3b26c <__assert_fail@plt+0x286b4>
   3b2cc:	sub	r0, fp, #148	; 0x94
   3b2d0:	ldr	r1, [fp, #-152]	; 0xffffff68
   3b2d4:	cmp	r1, r0
   3b2d8:	beq	3b2e4 <__assert_fail@plt+0x2872c>
   3b2dc:	ldr	r0, [fp, #-152]	; 0xffffff68
   3b2e0:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   3b2e4:	ldr	r0, [fp, #-1300]	; 0xfffffaec
   3b2e8:	sub	sp, fp, #28
   3b2ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3b2f0:	push	{fp, lr}
   3b2f4:	mov	fp, sp
   3b2f8:	sub	sp, sp, #88	; 0x58
   3b2fc:	str	r0, [fp, #-8]
   3b300:	str	r1, [fp, #-12]
   3b304:	b	3b308 <__assert_fail@plt+0x28750>
   3b308:	ldr	r0, [fp, #-12]
   3b30c:	ldr	r0, [r0]
   3b310:	ldrb	r0, [r0]
   3b314:	strb	r0, [fp, #-13]
   3b318:	ldrb	r0, [fp, #-13]
   3b31c:	bl	6f188 <__assert_fail@plt+0x5c5d0>
   3b320:	tst	r0, #1
   3b324:	beq	3b33c <__assert_fail@plt+0x28784>
   3b328:	ldr	r0, [fp, #-12]
   3b32c:	ldr	r1, [r0]
   3b330:	add	r1, r1, #1
   3b334:	str	r1, [r0]
   3b338:	b	3b308 <__assert_fail@plt+0x28750>
   3b33c:	ldrb	r0, [fp, #-13]
   3b340:	bl	6ee98 <__assert_fail@plt+0x5c2e0>
   3b344:	tst	r0, #1
   3b348:	bne	3b364 <__assert_fail@plt+0x287ac>
   3b34c:	ldrb	r0, [fp, #-13]
   3b350:	cmp	r0, #45	; 0x2d
   3b354:	beq	3b364 <__assert_fail@plt+0x287ac>
   3b358:	ldrb	r0, [fp, #-13]
   3b35c:	cmp	r0, #43	; 0x2b
   3b360:	bne	3c360 <__assert_fail@plt+0x297a8>
   3b364:	ldr	r0, [fp, #-12]
   3b368:	ldr	r0, [r0]
   3b36c:	str	r0, [fp, #-20]	; 0xffffffec
   3b370:	ldrb	r0, [fp, #-13]
   3b374:	cmp	r0, #45	; 0x2d
   3b378:	beq	3b388 <__assert_fail@plt+0x287d0>
   3b37c:	ldrb	r0, [fp, #-13]
   3b380:	cmp	r0, #43	; 0x2b
   3b384:	bne	3b3f0 <__assert_fail@plt+0x28838>
   3b388:	ldrb	r0, [fp, #-13]
   3b38c:	cmp	r0, #45	; 0x2d
   3b390:	movw	r0, #0
   3b394:	moveq	r0, #1
   3b398:	tst	r0, #1
   3b39c:	mvn	r0, #0
   3b3a0:	moveq	r0, #1
   3b3a4:	str	r0, [fp, #-24]	; 0xffffffe8
   3b3a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   3b3ac:	add	r1, r0, #1
   3b3b0:	str	r1, [fp, #-20]	; 0xffffffec
   3b3b4:	ldr	r2, [fp, #-12]
   3b3b8:	str	r1, [r2]
   3b3bc:	ldrb	r0, [r0, #1]
   3b3c0:	strb	r0, [fp, #-13]
   3b3c4:	ldrb	r0, [fp, #-13]
   3b3c8:	bl	6f188 <__assert_fail@plt+0x5c5d0>
   3b3cc:	tst	r0, #1
   3b3d0:	beq	3b3d8 <__assert_fail@plt+0x28820>
   3b3d4:	b	3b3a8 <__assert_fail@plt+0x287f0>
   3b3d8:	ldrb	r0, [fp, #-13]
   3b3dc:	bl	6ee98 <__assert_fail@plt+0x5c2e0>
   3b3e0:	tst	r0, #1
   3b3e4:	bne	3b3ec <__assert_fail@plt+0x28834>
   3b3e8:	b	3b304 <__assert_fail@plt+0x2874c>
   3b3ec:	b	3b3f8 <__assert_fail@plt+0x28840>
   3b3f0:	movw	r0, #0
   3b3f4:	str	r0, [fp, #-24]	; 0xffffffe8
   3b3f8:	movw	r0, #0
   3b3fc:	str	r0, [fp, #-28]	; 0xffffffe4
   3b400:	b	3b67c <__assert_fail@plt+0x28ac4>
   3b404:	b	3b408 <__assert_fail@plt+0x28850>
   3b408:	b	3b4b4 <__assert_fail@plt+0x288fc>
   3b40c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b410:	cmp	r0, #0
   3b414:	bge	3b448 <__assert_fail@plt+0x28890>
   3b418:	b	3b41c <__assert_fail@plt+0x28864>
   3b41c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b420:	cmp	r0, #12
   3b424:	blt	3b514 <__assert_fail@plt+0x2895c>
   3b428:	b	3b52c <__assert_fail@plt+0x28974>
   3b42c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b430:	mvn	r1, #0
   3b434:	sub	r0, r1, r0
   3b438:	mvn	r1, #11
   3b43c:	cmp	r1, r0
   3b440:	ble	3b514 <__assert_fail@plt+0x2895c>
   3b444:	b	3b52c <__assert_fail@plt+0x28974>
   3b448:	b	3b44c <__assert_fail@plt+0x28894>
   3b44c:	b	3b4a0 <__assert_fail@plt+0x288e8>
   3b450:	b	3b4a0 <__assert_fail@plt+0x288e8>
   3b454:	b	3b4a0 <__assert_fail@plt+0x288e8>
   3b458:	b	3b45c <__assert_fail@plt+0x288a4>
   3b45c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b460:	mvn	r1, #127	; 0x7f
   3b464:	add	r0, r0, r1
   3b468:	movw	r1, #0
   3b46c:	cmp	r1, r0
   3b470:	blt	3b514 <__assert_fail@plt+0x2895c>
   3b474:	b	3b52c <__assert_fail@plt+0x28974>
   3b478:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b47c:	movw	r1, #0
   3b480:	cmp	r1, r0
   3b484:	bge	3b52c <__assert_fail@plt+0x28974>
   3b488:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b48c:	sub	r0, r0, #1
   3b490:	movw	r1, #127	; 0x7f
   3b494:	cmp	r1, r0
   3b498:	blt	3b514 <__assert_fail@plt+0x2895c>
   3b49c:	b	3b52c <__assert_fail@plt+0x28974>
   3b4a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b4a4:	mvn	r1, #11
   3b4a8:	cmp	r1, r0
   3b4ac:	blt	3b514 <__assert_fail@plt+0x2895c>
   3b4b0:	b	3b52c <__assert_fail@plt+0x28974>
   3b4b4:	b	3b4bc <__assert_fail@plt+0x28904>
   3b4b8:	b	3b52c <__assert_fail@plt+0x28974>
   3b4bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b4c0:	cmp	r0, #0
   3b4c4:	bge	3b504 <__assert_fail@plt+0x2894c>
   3b4c8:	b	3b4cc <__assert_fail@plt+0x28914>
   3b4cc:	b	3b4ec <__assert_fail@plt+0x28934>
   3b4d0:	b	3b4ec <__assert_fail@plt+0x28934>
   3b4d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b4d8:	cmn	r0, #1
   3b4dc:	bne	3b4ec <__assert_fail@plt+0x28934>
   3b4e0:	b	3b4e4 <__assert_fail@plt+0x2892c>
   3b4e4:	b	3b52c <__assert_fail@plt+0x28974>
   3b4e8:	b	3b52c <__assert_fail@plt+0x28974>
   3b4ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b4f0:	mvn	r1, #127	; 0x7f
   3b4f4:	sdiv	r0, r1, r0
   3b4f8:	cmp	r0, #10
   3b4fc:	blt	3b514 <__assert_fail@plt+0x2895c>
   3b500:	b	3b52c <__assert_fail@plt+0x28974>
   3b504:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b508:	movw	r1, #12
   3b50c:	cmp	r1, r0
   3b510:	bge	3b52c <__assert_fail@plt+0x28974>
   3b514:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b518:	movw	r1, #10
   3b51c:	mul	r0, r0, r1
   3b520:	sxtb	r0, r0
   3b524:	str	r0, [fp, #-28]	; 0xffffffe4
   3b528:	b	3c074 <__assert_fail@plt+0x294bc>
   3b52c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b530:	movw	r1, #10
   3b534:	mul	r0, r0, r1
   3b538:	sxtb	r0, r0
   3b53c:	str	r0, [fp, #-28]	; 0xffffffe4
   3b540:	b	3c080 <__assert_fail@plt+0x294c8>
   3b544:	b	3b5ec <__assert_fail@plt+0x28a34>
   3b548:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b54c:	cmp	r0, #0
   3b550:	bge	3b584 <__assert_fail@plt+0x289cc>
   3b554:	b	3b558 <__assert_fail@plt+0x289a0>
   3b558:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b55c:	cmp	r0, #25
   3b560:	blt	3b64c <__assert_fail@plt+0x28a94>
   3b564:	b	3b664 <__assert_fail@plt+0x28aac>
   3b568:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b56c:	mvn	r1, #0
   3b570:	sub	r0, r1, r0
   3b574:	mvn	r1, #24
   3b578:	cmp	r1, r0
   3b57c:	ble	3b64c <__assert_fail@plt+0x28a94>
   3b580:	b	3b664 <__assert_fail@plt+0x28aac>
   3b584:	b	3b588 <__assert_fail@plt+0x289d0>
   3b588:	b	3b5d8 <__assert_fail@plt+0x28a20>
   3b58c:	b	3b5d8 <__assert_fail@plt+0x28a20>
   3b590:	b	3b5d8 <__assert_fail@plt+0x28a20>
   3b594:	b	3b598 <__assert_fail@plt+0x289e0>
   3b598:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b59c:	add	r0, r0, #0
   3b5a0:	movw	r1, #0
   3b5a4:	cmp	r1, r0
   3b5a8:	blt	3b64c <__assert_fail@plt+0x28a94>
   3b5ac:	b	3b664 <__assert_fail@plt+0x28aac>
   3b5b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b5b4:	movw	r1, #0
   3b5b8:	cmp	r1, r0
   3b5bc:	bge	3b664 <__assert_fail@plt+0x28aac>
   3b5c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b5c4:	sub	r0, r0, #1
   3b5c8:	mvn	r1, #0
   3b5cc:	cmp	r1, r0
   3b5d0:	blt	3b64c <__assert_fail@plt+0x28a94>
   3b5d4:	b	3b664 <__assert_fail@plt+0x28aac>
   3b5d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b5dc:	movw	r1, #0
   3b5e0:	cmp	r1, r0
   3b5e4:	blt	3b64c <__assert_fail@plt+0x28a94>
   3b5e8:	b	3b664 <__assert_fail@plt+0x28aac>
   3b5ec:	b	3b5f4 <__assert_fail@plt+0x28a3c>
   3b5f0:	b	3b664 <__assert_fail@plt+0x28aac>
   3b5f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b5f8:	cmp	r0, #0
   3b5fc:	bge	3b63c <__assert_fail@plt+0x28a84>
   3b600:	b	3b604 <__assert_fail@plt+0x28a4c>
   3b604:	b	3b624 <__assert_fail@plt+0x28a6c>
   3b608:	b	3b624 <__assert_fail@plt+0x28a6c>
   3b60c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b610:	cmn	r0, #1
   3b614:	bne	3b624 <__assert_fail@plt+0x28a6c>
   3b618:	b	3b61c <__assert_fail@plt+0x28a64>
   3b61c:	b	3b64c <__assert_fail@plt+0x28a94>
   3b620:	b	3b64c <__assert_fail@plt+0x28a94>
   3b624:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b628:	movw	r1, #0
   3b62c:	sdiv	r0, r1, r0
   3b630:	cmp	r0, #10
   3b634:	blt	3b64c <__assert_fail@plt+0x28a94>
   3b638:	b	3b664 <__assert_fail@plt+0x28aac>
   3b63c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b640:	movw	r1, #25
   3b644:	cmp	r1, r0
   3b648:	bge	3b664 <__assert_fail@plt+0x28aac>
   3b64c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b650:	movw	r1, #10
   3b654:	mul	r0, r0, r1
   3b658:	and	r0, r0, #255	; 0xff
   3b65c:	str	r0, [fp, #-28]	; 0xffffffe4
   3b660:	b	3c074 <__assert_fail@plt+0x294bc>
   3b664:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b668:	movw	r1, #10
   3b66c:	mul	r0, r0, r1
   3b670:	and	r0, r0, #255	; 0xff
   3b674:	str	r0, [fp, #-28]	; 0xffffffe4
   3b678:	b	3c080 <__assert_fail@plt+0x294c8>
   3b67c:	b	3b900 <__assert_fail@plt+0x28d48>
   3b680:	b	3b684 <__assert_fail@plt+0x28acc>
   3b684:	b	3b734 <__assert_fail@plt+0x28b7c>
   3b688:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b68c:	cmp	r0, #0
   3b690:	bge	3b6c8 <__assert_fail@plt+0x28b10>
   3b694:	b	3b698 <__assert_fail@plt+0x28ae0>
   3b698:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b69c:	movw	r1, #3276	; 0xccc
   3b6a0:	cmp	r0, r1
   3b6a4:	blt	3b794 <__assert_fail@plt+0x28bdc>
   3b6a8:	b	3b7ac <__assert_fail@plt+0x28bf4>
   3b6ac:	ldr	r0, [pc, #3748]	; 3c558 <__assert_fail@plt+0x299a0>
   3b6b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3b6b4:	mvn	r2, #0
   3b6b8:	sub	r1, r2, r1
   3b6bc:	cmp	r0, r1
   3b6c0:	ble	3b794 <__assert_fail@plt+0x28bdc>
   3b6c4:	b	3b7ac <__assert_fail@plt+0x28bf4>
   3b6c8:	b	3b6cc <__assert_fail@plt+0x28b14>
   3b6cc:	b	3b720 <__assert_fail@plt+0x28b68>
   3b6d0:	b	3b720 <__assert_fail@plt+0x28b68>
   3b6d4:	b	3b720 <__assert_fail@plt+0x28b68>
   3b6d8:	b	3b6dc <__assert_fail@plt+0x28b24>
   3b6dc:	ldr	r0, [pc, #3696]	; 3c554 <__assert_fail@plt+0x2999c>
   3b6e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3b6e4:	add	r0, r1, r0
   3b6e8:	movw	r1, #0
   3b6ec:	cmp	r1, r0
   3b6f0:	blt	3b794 <__assert_fail@plt+0x28bdc>
   3b6f4:	b	3b7ac <__assert_fail@plt+0x28bf4>
   3b6f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b6fc:	movw	r1, #0
   3b700:	cmp	r1, r0
   3b704:	bge	3b7ac <__assert_fail@plt+0x28bf4>
   3b708:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b70c:	sub	r0, r0, #1
   3b710:	movw	r1, #32767	; 0x7fff
   3b714:	cmp	r1, r0
   3b718:	blt	3b794 <__assert_fail@plt+0x28bdc>
   3b71c:	b	3b7ac <__assert_fail@plt+0x28bf4>
   3b720:	ldr	r0, [pc, #3632]	; 3c558 <__assert_fail@plt+0x299a0>
   3b724:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3b728:	cmp	r0, r1
   3b72c:	blt	3b794 <__assert_fail@plt+0x28bdc>
   3b730:	b	3b7ac <__assert_fail@plt+0x28bf4>
   3b734:	b	3b73c <__assert_fail@plt+0x28b84>
   3b738:	b	3b7ac <__assert_fail@plt+0x28bf4>
   3b73c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b740:	cmp	r0, #0
   3b744:	bge	3b784 <__assert_fail@plt+0x28bcc>
   3b748:	b	3b74c <__assert_fail@plt+0x28b94>
   3b74c:	b	3b76c <__assert_fail@plt+0x28bb4>
   3b750:	b	3b76c <__assert_fail@plt+0x28bb4>
   3b754:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b758:	cmn	r0, #1
   3b75c:	bne	3b76c <__assert_fail@plt+0x28bb4>
   3b760:	b	3b764 <__assert_fail@plt+0x28bac>
   3b764:	b	3b7ac <__assert_fail@plt+0x28bf4>
   3b768:	b	3b7ac <__assert_fail@plt+0x28bf4>
   3b76c:	ldr	r0, [pc, #3552]	; 3c554 <__assert_fail@plt+0x2999c>
   3b770:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3b774:	sdiv	r0, r0, r1
   3b778:	cmp	r0, #10
   3b77c:	blt	3b794 <__assert_fail@plt+0x28bdc>
   3b780:	b	3b7ac <__assert_fail@plt+0x28bf4>
   3b784:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b788:	movw	r1, #3276	; 0xccc
   3b78c:	cmp	r1, r0
   3b790:	bge	3b7ac <__assert_fail@plt+0x28bf4>
   3b794:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b798:	movw	r1, #10
   3b79c:	mul	r0, r0, r1
   3b7a0:	sxth	r0, r0
   3b7a4:	str	r0, [fp, #-28]	; 0xffffffe4
   3b7a8:	b	3c074 <__assert_fail@plt+0x294bc>
   3b7ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b7b0:	movw	r1, #10
   3b7b4:	mul	r0, r0, r1
   3b7b8:	sxth	r0, r0
   3b7bc:	str	r0, [fp, #-28]	; 0xffffffe4
   3b7c0:	b	3c080 <__assert_fail@plt+0x294c8>
   3b7c4:	b	3b870 <__assert_fail@plt+0x28cb8>
   3b7c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b7cc:	cmp	r0, #0
   3b7d0:	bge	3b808 <__assert_fail@plt+0x28c50>
   3b7d4:	b	3b7d8 <__assert_fail@plt+0x28c20>
   3b7d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b7dc:	movw	r1, #6553	; 0x1999
   3b7e0:	cmp	r0, r1
   3b7e4:	blt	3b8d0 <__assert_fail@plt+0x28d18>
   3b7e8:	b	3b8e8 <__assert_fail@plt+0x28d30>
   3b7ec:	ldr	r0, [pc, #3432]	; 3c55c <__assert_fail@plt+0x299a4>
   3b7f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3b7f4:	mvn	r2, #0
   3b7f8:	sub	r1, r2, r1
   3b7fc:	cmp	r0, r1
   3b800:	ble	3b8d0 <__assert_fail@plt+0x28d18>
   3b804:	b	3b8e8 <__assert_fail@plt+0x28d30>
   3b808:	b	3b80c <__assert_fail@plt+0x28c54>
   3b80c:	b	3b85c <__assert_fail@plt+0x28ca4>
   3b810:	b	3b85c <__assert_fail@plt+0x28ca4>
   3b814:	b	3b85c <__assert_fail@plt+0x28ca4>
   3b818:	b	3b81c <__assert_fail@plt+0x28c64>
   3b81c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b820:	add	r0, r0, #0
   3b824:	movw	r1, #0
   3b828:	cmp	r1, r0
   3b82c:	blt	3b8d0 <__assert_fail@plt+0x28d18>
   3b830:	b	3b8e8 <__assert_fail@plt+0x28d30>
   3b834:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b838:	movw	r1, #0
   3b83c:	cmp	r1, r0
   3b840:	bge	3b8e8 <__assert_fail@plt+0x28d30>
   3b844:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b848:	sub	r0, r0, #1
   3b84c:	mvn	r1, #0
   3b850:	cmp	r1, r0
   3b854:	blt	3b8d0 <__assert_fail@plt+0x28d18>
   3b858:	b	3b8e8 <__assert_fail@plt+0x28d30>
   3b85c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b860:	movw	r1, #0
   3b864:	cmp	r1, r0
   3b868:	blt	3b8d0 <__assert_fail@plt+0x28d18>
   3b86c:	b	3b8e8 <__assert_fail@plt+0x28d30>
   3b870:	b	3b878 <__assert_fail@plt+0x28cc0>
   3b874:	b	3b8e8 <__assert_fail@plt+0x28d30>
   3b878:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b87c:	cmp	r0, #0
   3b880:	bge	3b8c0 <__assert_fail@plt+0x28d08>
   3b884:	b	3b888 <__assert_fail@plt+0x28cd0>
   3b888:	b	3b8a8 <__assert_fail@plt+0x28cf0>
   3b88c:	b	3b8a8 <__assert_fail@plt+0x28cf0>
   3b890:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b894:	cmn	r0, #1
   3b898:	bne	3b8a8 <__assert_fail@plt+0x28cf0>
   3b89c:	b	3b8a0 <__assert_fail@plt+0x28ce8>
   3b8a0:	b	3b8d0 <__assert_fail@plt+0x28d18>
   3b8a4:	b	3b8d0 <__assert_fail@plt+0x28d18>
   3b8a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b8ac:	movw	r1, #0
   3b8b0:	sdiv	r0, r1, r0
   3b8b4:	cmp	r0, #10
   3b8b8:	blt	3b8d0 <__assert_fail@plt+0x28d18>
   3b8bc:	b	3b8e8 <__assert_fail@plt+0x28d30>
   3b8c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b8c4:	movw	r1, #6553	; 0x1999
   3b8c8:	cmp	r1, r0
   3b8cc:	bge	3b8e8 <__assert_fail@plt+0x28d30>
   3b8d0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b8d4:	movw	r1, #10
   3b8d8:	mul	r0, r0, r1
   3b8dc:	uxth	r0, r0
   3b8e0:	str	r0, [fp, #-28]	; 0xffffffe4
   3b8e4:	b	3c074 <__assert_fail@plt+0x294bc>
   3b8e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b8ec:	movw	r1, #10
   3b8f0:	mul	r0, r0, r1
   3b8f4:	uxth	r0, r0
   3b8f8:	str	r0, [fp, #-28]	; 0xffffffe4
   3b8fc:	b	3c080 <__assert_fail@plt+0x294c8>
   3b900:	b	3b904 <__assert_fail@plt+0x28d4c>
   3b904:	b	3b908 <__assert_fail@plt+0x28d50>
   3b908:	b	3b9a8 <__assert_fail@plt+0x28df0>
   3b90c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b910:	cmp	r0, #0
   3b914:	bge	3b94c <__assert_fail@plt+0x28d94>
   3b918:	b	3b91c <__assert_fail@plt+0x28d64>
   3b91c:	ldr	r0, [pc, #3104]	; 3c544 <__assert_fail@plt+0x2998c>
   3b920:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3b924:	cmp	r1, r0
   3b928:	blt	3b9fc <__assert_fail@plt+0x28e44>
   3b92c:	b	3ba10 <__assert_fail@plt+0x28e58>
   3b930:	ldr	r0, [pc, #3092]	; 3c54c <__assert_fail@plt+0x29994>
   3b934:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3b938:	mvn	r2, #0
   3b93c:	sub	r1, r2, r1
   3b940:	cmp	r0, r1
   3b944:	ble	3b9fc <__assert_fail@plt+0x28e44>
   3b948:	b	3ba10 <__assert_fail@plt+0x28e58>
   3b94c:	b	3b994 <__assert_fail@plt+0x28ddc>
   3b950:	b	3b954 <__assert_fail@plt+0x28d9c>
   3b954:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b958:	add	r0, r0, #-2147483648	; 0x80000000
   3b95c:	movw	r1, #0
   3b960:	cmp	r1, r0
   3b964:	blt	3b9fc <__assert_fail@plt+0x28e44>
   3b968:	b	3ba10 <__assert_fail@plt+0x28e58>
   3b96c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b970:	movw	r1, #0
   3b974:	cmp	r1, r0
   3b978:	bge	3ba10 <__assert_fail@plt+0x28e58>
   3b97c:	ldr	r0, [pc, #3020]	; 3c550 <__assert_fail@plt+0x29998>
   3b980:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3b984:	sub	r1, r1, #1
   3b988:	cmp	r0, r1
   3b98c:	blt	3b9fc <__assert_fail@plt+0x28e44>
   3b990:	b	3ba10 <__assert_fail@plt+0x28e58>
   3b994:	ldr	r0, [pc, #2992]	; 3c54c <__assert_fail@plt+0x29994>
   3b998:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3b99c:	cmp	r0, r1
   3b9a0:	blt	3b9fc <__assert_fail@plt+0x28e44>
   3b9a4:	b	3ba10 <__assert_fail@plt+0x28e58>
   3b9a8:	b	3b9b0 <__assert_fail@plt+0x28df8>
   3b9ac:	b	3ba10 <__assert_fail@plt+0x28e58>
   3b9b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b9b4:	cmp	r0, #0
   3b9b8:	bge	3b9ec <__assert_fail@plt+0x28e34>
   3b9bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3b9c0:	cmn	r0, #1
   3b9c4:	bne	3b9d4 <__assert_fail@plt+0x28e1c>
   3b9c8:	b	3b9cc <__assert_fail@plt+0x28e14>
   3b9cc:	b	3ba10 <__assert_fail@plt+0x28e58>
   3b9d0:	b	3ba10 <__assert_fail@plt+0x28e58>
   3b9d4:	ldr	r0, [pc, #2924]	; 3c548 <__assert_fail@plt+0x29990>
   3b9d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3b9dc:	sdiv	r0, r0, r1
   3b9e0:	cmp	r0, #10
   3b9e4:	blt	3b9fc <__assert_fail@plt+0x28e44>
   3b9e8:	b	3ba10 <__assert_fail@plt+0x28e58>
   3b9ec:	ldr	r0, [pc, #2896]	; 3c544 <__assert_fail@plt+0x2998c>
   3b9f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3b9f4:	cmp	r0, r1
   3b9f8:	bge	3ba10 <__assert_fail@plt+0x28e58>
   3b9fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3ba00:	movw	r1, #10
   3ba04:	mul	r0, r0, r1
   3ba08:	str	r0, [fp, #-28]	; 0xffffffe4
   3ba0c:	b	3c074 <__assert_fail@plt+0x294bc>
   3ba10:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3ba14:	movw	r1, #10
   3ba18:	mul	r0, r0, r1
   3ba1c:	str	r0, [fp, #-28]	; 0xffffffe4
   3ba20:	b	3c080 <__assert_fail@plt+0x294c8>
   3ba24:	b	3bad0 <__assert_fail@plt+0x28f18>
   3ba28:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3ba2c:	cmp	r0, #0
   3ba30:	bge	3ba68 <__assert_fail@plt+0x28eb0>
   3ba34:	b	3ba4c <__assert_fail@plt+0x28e94>
   3ba38:	ldr	r0, [pc, #2816]	; 3c540 <__assert_fail@plt+0x29988>
   3ba3c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3ba40:	cmp	r1, r0
   3ba44:	bcc	3bb30 <__assert_fail@plt+0x28f78>
   3ba48:	b	3bb44 <__assert_fail@plt+0x28f8c>
   3ba4c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3ba50:	mvn	r1, #0
   3ba54:	sub	r0, r1, r0
   3ba58:	movw	r1, #1
   3ba5c:	cmp	r1, r0
   3ba60:	bls	3bb30 <__assert_fail@plt+0x28f78>
   3ba64:	b	3bb44 <__assert_fail@plt+0x28f8c>
   3ba68:	b	3ba6c <__assert_fail@plt+0x28eb4>
   3ba6c:	b	3babc <__assert_fail@plt+0x28f04>
   3ba70:	b	3babc <__assert_fail@plt+0x28f04>
   3ba74:	b	3babc <__assert_fail@plt+0x28f04>
   3ba78:	b	3ba7c <__assert_fail@plt+0x28ec4>
   3ba7c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3ba80:	add	r0, r0, #0
   3ba84:	movw	r1, #0
   3ba88:	cmp	r1, r0
   3ba8c:	blt	3bb30 <__assert_fail@plt+0x28f78>
   3ba90:	b	3bb44 <__assert_fail@plt+0x28f8c>
   3ba94:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3ba98:	movw	r1, #0
   3ba9c:	cmp	r1, r0
   3baa0:	bge	3bb44 <__assert_fail@plt+0x28f8c>
   3baa4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3baa8:	sub	r0, r0, #1
   3baac:	mvn	r1, #0
   3bab0:	cmp	r1, r0
   3bab4:	blt	3bb30 <__assert_fail@plt+0x28f78>
   3bab8:	b	3bb44 <__assert_fail@plt+0x28f8c>
   3babc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3bac0:	movw	r1, #0
   3bac4:	cmp	r1, r0
   3bac8:	blt	3bb30 <__assert_fail@plt+0x28f78>
   3bacc:	b	3bb44 <__assert_fail@plt+0x28f8c>
   3bad0:	b	3bad8 <__assert_fail@plt+0x28f20>
   3bad4:	b	3bb44 <__assert_fail@plt+0x28f8c>
   3bad8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3badc:	cmp	r0, #0
   3bae0:	bge	3bb20 <__assert_fail@plt+0x28f68>
   3bae4:	b	3bae8 <__assert_fail@plt+0x28f30>
   3bae8:	b	3bb08 <__assert_fail@plt+0x28f50>
   3baec:	b	3bb08 <__assert_fail@plt+0x28f50>
   3baf0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3baf4:	cmn	r0, #1
   3baf8:	bne	3bb08 <__assert_fail@plt+0x28f50>
   3bafc:	b	3bb00 <__assert_fail@plt+0x28f48>
   3bb00:	b	3bb30 <__assert_fail@plt+0x28f78>
   3bb04:	b	3bb30 <__assert_fail@plt+0x28f78>
   3bb08:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3bb0c:	movw	r1, #0
   3bb10:	sdiv	r0, r1, r0
   3bb14:	cmp	r0, #10
   3bb18:	blt	3bb30 <__assert_fail@plt+0x28f78>
   3bb1c:	b	3bb44 <__assert_fail@plt+0x28f8c>
   3bb20:	ldr	r0, [pc, #2584]	; 3c540 <__assert_fail@plt+0x29988>
   3bb24:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3bb28:	cmp	r0, r1
   3bb2c:	bcs	3bb44 <__assert_fail@plt+0x28f8c>
   3bb30:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3bb34:	movw	r1, #10
   3bb38:	mul	r0, r0, r1
   3bb3c:	str	r0, [fp, #-28]	; 0xffffffe4
   3bb40:	b	3c074 <__assert_fail@plt+0x294bc>
   3bb44:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3bb48:	movw	r1, #10
   3bb4c:	mul	r0, r0, r1
   3bb50:	str	r0, [fp, #-28]	; 0xffffffe4
   3bb54:	b	3c080 <__assert_fail@plt+0x294c8>
   3bb58:	b	3bb5c <__assert_fail@plt+0x28fa4>
   3bb5c:	b	3bb60 <__assert_fail@plt+0x28fa8>
   3bb60:	b	3bc00 <__assert_fail@plt+0x29048>
   3bb64:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3bb68:	cmp	r0, #0
   3bb6c:	bge	3bba4 <__assert_fail@plt+0x28fec>
   3bb70:	b	3bb74 <__assert_fail@plt+0x28fbc>
   3bb74:	ldr	r0, [pc, #2504]	; 3c544 <__assert_fail@plt+0x2998c>
   3bb78:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3bb7c:	cmp	r1, r0
   3bb80:	blt	3bc54 <__assert_fail@plt+0x2909c>
   3bb84:	b	3bc68 <__assert_fail@plt+0x290b0>
   3bb88:	ldr	r0, [pc, #2492]	; 3c54c <__assert_fail@plt+0x29994>
   3bb8c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3bb90:	mvn	r2, #0
   3bb94:	sub	r1, r2, r1
   3bb98:	cmp	r0, r1
   3bb9c:	ble	3bc54 <__assert_fail@plt+0x2909c>
   3bba0:	b	3bc68 <__assert_fail@plt+0x290b0>
   3bba4:	b	3bbec <__assert_fail@plt+0x29034>
   3bba8:	b	3bbac <__assert_fail@plt+0x28ff4>
   3bbac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3bbb0:	add	r0, r0, #-2147483648	; 0x80000000
   3bbb4:	movw	r1, #0
   3bbb8:	cmp	r1, r0
   3bbbc:	blt	3bc54 <__assert_fail@plt+0x2909c>
   3bbc0:	b	3bc68 <__assert_fail@plt+0x290b0>
   3bbc4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3bbc8:	movw	r1, #0
   3bbcc:	cmp	r1, r0
   3bbd0:	bge	3bc68 <__assert_fail@plt+0x290b0>
   3bbd4:	ldr	r0, [pc, #2420]	; 3c550 <__assert_fail@plt+0x29998>
   3bbd8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3bbdc:	sub	r1, r1, #1
   3bbe0:	cmp	r0, r1
   3bbe4:	blt	3bc54 <__assert_fail@plt+0x2909c>
   3bbe8:	b	3bc68 <__assert_fail@plt+0x290b0>
   3bbec:	ldr	r0, [pc, #2392]	; 3c54c <__assert_fail@plt+0x29994>
   3bbf0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3bbf4:	cmp	r0, r1
   3bbf8:	blt	3bc54 <__assert_fail@plt+0x2909c>
   3bbfc:	b	3bc68 <__assert_fail@plt+0x290b0>
   3bc00:	b	3bc08 <__assert_fail@plt+0x29050>
   3bc04:	b	3bc68 <__assert_fail@plt+0x290b0>
   3bc08:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3bc0c:	cmp	r0, #0
   3bc10:	bge	3bc44 <__assert_fail@plt+0x2908c>
   3bc14:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3bc18:	cmn	r0, #1
   3bc1c:	bne	3bc2c <__assert_fail@plt+0x29074>
   3bc20:	b	3bc24 <__assert_fail@plt+0x2906c>
   3bc24:	b	3bc68 <__assert_fail@plt+0x290b0>
   3bc28:	b	3bc68 <__assert_fail@plt+0x290b0>
   3bc2c:	ldr	r0, [pc, #2324]	; 3c548 <__assert_fail@plt+0x29990>
   3bc30:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3bc34:	sdiv	r0, r0, r1
   3bc38:	cmp	r0, #10
   3bc3c:	blt	3bc54 <__assert_fail@plt+0x2909c>
   3bc40:	b	3bc68 <__assert_fail@plt+0x290b0>
   3bc44:	ldr	r0, [pc, #2296]	; 3c544 <__assert_fail@plt+0x2998c>
   3bc48:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3bc4c:	cmp	r0, r1
   3bc50:	bge	3bc68 <__assert_fail@plt+0x290b0>
   3bc54:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3bc58:	movw	r1, #10
   3bc5c:	mul	r0, r0, r1
   3bc60:	str	r0, [fp, #-28]	; 0xffffffe4
   3bc64:	b	3c074 <__assert_fail@plt+0x294bc>
   3bc68:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3bc6c:	movw	r1, #10
   3bc70:	mul	r0, r0, r1
   3bc74:	str	r0, [fp, #-28]	; 0xffffffe4
   3bc78:	b	3c080 <__assert_fail@plt+0x294c8>
   3bc7c:	b	3bd28 <__assert_fail@plt+0x29170>
   3bc80:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3bc84:	cmp	r0, #0
   3bc88:	bge	3bcc0 <__assert_fail@plt+0x29108>
   3bc8c:	b	3bca4 <__assert_fail@plt+0x290ec>
   3bc90:	ldr	r0, [pc, #2216]	; 3c540 <__assert_fail@plt+0x29988>
   3bc94:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3bc98:	cmp	r1, r0
   3bc9c:	bcc	3bd88 <__assert_fail@plt+0x291d0>
   3bca0:	b	3bd9c <__assert_fail@plt+0x291e4>
   3bca4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3bca8:	mvn	r1, #0
   3bcac:	sub	r0, r1, r0
   3bcb0:	movw	r1, #1
   3bcb4:	cmp	r1, r0
   3bcb8:	bls	3bd88 <__assert_fail@plt+0x291d0>
   3bcbc:	b	3bd9c <__assert_fail@plt+0x291e4>
   3bcc0:	b	3bcc4 <__assert_fail@plt+0x2910c>
   3bcc4:	b	3bd14 <__assert_fail@plt+0x2915c>
   3bcc8:	b	3bd14 <__assert_fail@plt+0x2915c>
   3bccc:	b	3bd14 <__assert_fail@plt+0x2915c>
   3bcd0:	b	3bcd4 <__assert_fail@plt+0x2911c>
   3bcd4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3bcd8:	add	r0, r0, #0
   3bcdc:	movw	r1, #0
   3bce0:	cmp	r1, r0
   3bce4:	blt	3bd88 <__assert_fail@plt+0x291d0>
   3bce8:	b	3bd9c <__assert_fail@plt+0x291e4>
   3bcec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3bcf0:	movw	r1, #0
   3bcf4:	cmp	r1, r0
   3bcf8:	bge	3bd9c <__assert_fail@plt+0x291e4>
   3bcfc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3bd00:	sub	r0, r0, #1
   3bd04:	mvn	r1, #0
   3bd08:	cmp	r1, r0
   3bd0c:	blt	3bd88 <__assert_fail@plt+0x291d0>
   3bd10:	b	3bd9c <__assert_fail@plt+0x291e4>
   3bd14:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3bd18:	movw	r1, #0
   3bd1c:	cmp	r1, r0
   3bd20:	blt	3bd88 <__assert_fail@plt+0x291d0>
   3bd24:	b	3bd9c <__assert_fail@plt+0x291e4>
   3bd28:	b	3bd30 <__assert_fail@plt+0x29178>
   3bd2c:	b	3bd9c <__assert_fail@plt+0x291e4>
   3bd30:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3bd34:	cmp	r0, #0
   3bd38:	bge	3bd78 <__assert_fail@plt+0x291c0>
   3bd3c:	b	3bd40 <__assert_fail@plt+0x29188>
   3bd40:	b	3bd60 <__assert_fail@plt+0x291a8>
   3bd44:	b	3bd60 <__assert_fail@plt+0x291a8>
   3bd48:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3bd4c:	cmn	r0, #1
   3bd50:	bne	3bd60 <__assert_fail@plt+0x291a8>
   3bd54:	b	3bd58 <__assert_fail@plt+0x291a0>
   3bd58:	b	3bd88 <__assert_fail@plt+0x291d0>
   3bd5c:	b	3bd88 <__assert_fail@plt+0x291d0>
   3bd60:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3bd64:	movw	r1, #0
   3bd68:	sdiv	r0, r1, r0
   3bd6c:	cmp	r0, #10
   3bd70:	blt	3bd88 <__assert_fail@plt+0x291d0>
   3bd74:	b	3bd9c <__assert_fail@plt+0x291e4>
   3bd78:	ldr	r0, [pc, #1984]	; 3c540 <__assert_fail@plt+0x29988>
   3bd7c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3bd80:	cmp	r0, r1
   3bd84:	bcs	3bd9c <__assert_fail@plt+0x291e4>
   3bd88:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3bd8c:	movw	r1, #10
   3bd90:	mul	r0, r0, r1
   3bd94:	str	r0, [fp, #-28]	; 0xffffffe4
   3bd98:	b	3c074 <__assert_fail@plt+0x294bc>
   3bd9c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3bda0:	movw	r1, #10
   3bda4:	mul	r0, r0, r1
   3bda8:	str	r0, [fp, #-28]	; 0xffffffe4
   3bdac:	b	3c080 <__assert_fail@plt+0x294c8>
   3bdb0:	b	3bdb4 <__assert_fail@plt+0x291fc>
   3bdb4:	b	3be7c <__assert_fail@plt+0x292c4>
   3bdb8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3bdbc:	cmp	r0, #0
   3bdc0:	bge	3be14 <__assert_fail@plt+0x2925c>
   3bdc4:	b	3bdc8 <__assert_fail@plt+0x29210>
   3bdc8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3bdcc:	movw	r1, #52428	; 0xcccc
   3bdd0:	movt	r1, #52428	; 0xcccc
   3bdd4:	subs	r1, r0, r1
   3bdd8:	movw	r2, #52428	; 0xcccc
   3bddc:	movt	r2, #3276	; 0xccc
   3bde0:	rscs	r0, r2, r0, asr #31
   3bde4:	blt	3bf00 <__assert_fail@plt+0x29348>
   3bde8:	b	3bf14 <__assert_fail@plt+0x2935c>
   3bdec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3bdf0:	mvn	r0, r0
   3bdf4:	movw	r1, #13107	; 0x3333
   3bdf8:	movt	r1, #13107	; 0x3333
   3bdfc:	subs	r1, r1, r0
   3be00:	movw	r2, #13107	; 0x3333
   3be04:	movt	r2, #62259	; 0xf333
   3be08:	sbcs	r0, r2, r0, asr #31
   3be0c:	blt	3bf00 <__assert_fail@plt+0x29348>
   3be10:	b	3bf14 <__assert_fail@plt+0x2935c>
   3be14:	b	3be58 <__assert_fail@plt+0x292a0>
   3be18:	b	3be1c <__assert_fail@plt+0x29264>
   3be1c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3be20:	mov	r1, #-2147483648	; 0x80000000
   3be24:	add	r1, r1, r0, asr #31
   3be28:	rsbs	r0, r0, #0
   3be2c:	rscs	r1, r1, #0
   3be30:	blt	3bf00 <__assert_fail@plt+0x29348>
   3be34:	b	3bf14 <__assert_fail@plt+0x2935c>
   3be38:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3be3c:	movw	r1, #0
   3be40:	cmp	r1, r0
   3be44:	bge	3bf14 <__assert_fail@plt+0x2935c>
   3be48:	mov	r0, #0
   3be4c:	cmp	r0, #0
   3be50:	bne	3bf00 <__assert_fail@plt+0x29348>
   3be54:	b	3bf14 <__assert_fail@plt+0x2935c>
   3be58:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3be5c:	movw	r1, #13108	; 0x3334
   3be60:	movt	r1, #13107	; 0x3333
   3be64:	subs	r1, r1, r0
   3be68:	movw	r2, #13107	; 0x3333
   3be6c:	movt	r2, #62259	; 0xf333
   3be70:	sbcs	r0, r2, r0, asr #31
   3be74:	blt	3bf00 <__assert_fail@plt+0x29348>
   3be78:	b	3bf14 <__assert_fail@plt+0x2935c>
   3be7c:	b	3be84 <__assert_fail@plt+0x292cc>
   3be80:	b	3bf14 <__assert_fail@plt+0x2935c>
   3be84:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3be88:	cmp	r0, #0
   3be8c:	bge	3bedc <__assert_fail@plt+0x29324>
   3be90:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3be94:	cmn	r0, #1
   3be98:	bne	3bea8 <__assert_fail@plt+0x292f0>
   3be9c:	b	3bea0 <__assert_fail@plt+0x292e8>
   3bea0:	b	3bf14 <__assert_fail@plt+0x2935c>
   3bea4:	b	3bf14 <__assert_fail@plt+0x2935c>
   3bea8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3beac:	asr	r3, r0, #31
   3beb0:	mov	r1, #0
   3beb4:	mov	r2, #-2147483648	; 0x80000000
   3beb8:	str	r0, [sp, #12]
   3bebc:	mov	r0, r1
   3bec0:	mov	r1, r2
   3bec4:	ldr	r2, [sp, #12]
   3bec8:	bl	75338 <__assert_fail@plt+0x62780>
   3becc:	subs	r0, r0, #10
   3bed0:	sbcs	r1, r1, #0
   3bed4:	blt	3bf00 <__assert_fail@plt+0x29348>
   3bed8:	b	3bf14 <__assert_fail@plt+0x2935c>
   3bedc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3bee0:	movw	r1, #52429	; 0xcccd
   3bee4:	movt	r1, #52428	; 0xcccc
   3bee8:	subs	r1, r0, r1
   3beec:	movw	r2, #52428	; 0xcccc
   3bef0:	movt	r2, #3276	; 0xccc
   3bef4:	rscs	r0, r2, r0, asr #31
   3bef8:	blt	3bf14 <__assert_fail@plt+0x2935c>
   3befc:	b	3bf00 <__assert_fail@plt+0x29348>
   3bf00:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3bf04:	add	r0, r0, r0, lsl #2
   3bf08:	lsl	r0, r0, #1
   3bf0c:	str	r0, [fp, #-28]	; 0xffffffe4
   3bf10:	b	3c074 <__assert_fail@plt+0x294bc>
   3bf14:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3bf18:	add	r0, r0, r0, lsl #2
   3bf1c:	lsl	r0, r0, #1
   3bf20:	str	r0, [fp, #-28]	; 0xffffffe4
   3bf24:	b	3c080 <__assert_fail@plt+0x294c8>
   3bf28:	b	3bfd8 <__assert_fail@plt+0x29420>
   3bf2c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3bf30:	cmp	r0, #0
   3bf34:	bge	3bf70 <__assert_fail@plt+0x293b8>
   3bf38:	b	3bf60 <__assert_fail@plt+0x293a8>
   3bf3c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3bf40:	movw	r1, #39321	; 0x9999
   3bf44:	movt	r1, #39321	; 0x9999
   3bf48:	subs	r1, r0, r1
   3bf4c:	movw	r2, #39321	; 0x9999
   3bf50:	movt	r2, #6553	; 0x1999
   3bf54:	rscs	r0, r2, r0, asr #31
   3bf58:	bcc	3c04c <__assert_fail@plt+0x29494>
   3bf5c:	b	3c060 <__assert_fail@plt+0x294a8>
   3bf60:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3bf64:	cmn	r0, #1
   3bf68:	bne	3c04c <__assert_fail@plt+0x29494>
   3bf6c:	b	3c060 <__assert_fail@plt+0x294a8>
   3bf70:	b	3bf74 <__assert_fail@plt+0x293bc>
   3bf74:	b	3bfc4 <__assert_fail@plt+0x2940c>
   3bf78:	b	3bfc4 <__assert_fail@plt+0x2940c>
   3bf7c:	b	3bfc4 <__assert_fail@plt+0x2940c>
   3bf80:	b	3bf84 <__assert_fail@plt+0x293cc>
   3bf84:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3bf88:	add	r0, r0, #0
   3bf8c:	movw	r1, #0
   3bf90:	cmp	r1, r0
   3bf94:	blt	3c04c <__assert_fail@plt+0x29494>
   3bf98:	b	3c060 <__assert_fail@plt+0x294a8>
   3bf9c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3bfa0:	movw	r1, #0
   3bfa4:	cmp	r1, r0
   3bfa8:	bge	3c060 <__assert_fail@plt+0x294a8>
   3bfac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3bfb0:	sub	r0, r0, #1
   3bfb4:	mvn	r1, #0
   3bfb8:	cmp	r1, r0
   3bfbc:	blt	3c04c <__assert_fail@plt+0x29494>
   3bfc0:	b	3c060 <__assert_fail@plt+0x294a8>
   3bfc4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3bfc8:	movw	r1, #0
   3bfcc:	cmp	r1, r0
   3bfd0:	blt	3c04c <__assert_fail@plt+0x29494>
   3bfd4:	b	3c060 <__assert_fail@plt+0x294a8>
   3bfd8:	b	3bfe0 <__assert_fail@plt+0x29428>
   3bfdc:	b	3c060 <__assert_fail@plt+0x294a8>
   3bfe0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3bfe4:	cmp	r0, #0
   3bfe8:	bge	3c028 <__assert_fail@plt+0x29470>
   3bfec:	b	3bff0 <__assert_fail@plt+0x29438>
   3bff0:	b	3c010 <__assert_fail@plt+0x29458>
   3bff4:	b	3c010 <__assert_fail@plt+0x29458>
   3bff8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3bffc:	cmn	r0, #1
   3c000:	bne	3c010 <__assert_fail@plt+0x29458>
   3c004:	b	3c008 <__assert_fail@plt+0x29450>
   3c008:	b	3c04c <__assert_fail@plt+0x29494>
   3c00c:	b	3c04c <__assert_fail@plt+0x29494>
   3c010:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c014:	movw	r1, #0
   3c018:	sdiv	r0, r1, r0
   3c01c:	cmp	r0, #10
   3c020:	blt	3c04c <__assert_fail@plt+0x29494>
   3c024:	b	3c060 <__assert_fail@plt+0x294a8>
   3c028:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c02c:	movw	r1, #39322	; 0x999a
   3c030:	movt	r1, #39321	; 0x9999
   3c034:	subs	r1, r0, r1
   3c038:	movw	r2, #39321	; 0x9999
   3c03c:	movt	r2, #6553	; 0x1999
   3c040:	rscs	r0, r2, r0, asr #31
   3c044:	bcc	3c060 <__assert_fail@plt+0x294a8>
   3c048:	b	3c04c <__assert_fail@plt+0x29494>
   3c04c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c050:	add	r0, r0, r0, lsl #2
   3c054:	lsl	r0, r0, #1
   3c058:	str	r0, [fp, #-28]	; 0xffffffe4
   3c05c:	b	3c074 <__assert_fail@plt+0x294bc>
   3c060:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c064:	add	r0, r0, r0, lsl #2
   3c068:	lsl	r0, r0, #1
   3c06c:	str	r0, [fp, #-28]	; 0xffffffe4
   3c070:	b	3c080 <__assert_fail@plt+0x294c8>
   3c074:	movw	r0, #63	; 0x3f
   3c078:	str	r0, [fp, #-4]
   3c07c:	b	3c534 <__assert_fail@plt+0x2997c>
   3c080:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c084:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3c088:	cmp	r1, #0
   3c08c:	str	r0, [sp, #8]
   3c090:	bge	3c0a8 <__assert_fail@plt+0x294f0>
   3c094:	ldrb	r0, [fp, #-13]
   3c098:	movw	r1, #48	; 0x30
   3c09c:	sub	r0, r1, r0
   3c0a0:	str	r0, [sp, #4]
   3c0a4:	b	3c0b4 <__assert_fail@plt+0x294fc>
   3c0a8:	ldrb	r0, [fp, #-13]
   3c0ac:	sub	r0, r0, #48	; 0x30
   3c0b0:	str	r0, [sp, #4]
   3c0b4:	ldr	r0, [sp, #4]
   3c0b8:	ldr	r1, [sp, #8]
   3c0bc:	add	r0, r1, r0
   3c0c0:	mov	r2, #1
   3c0c4:	cmp	r0, r1
   3c0c8:	movwvc	r2, #0
   3c0cc:	str	r0, [fp, #-28]	; 0xffffffe4
   3c0d0:	tst	r2, #1
   3c0d4:	beq	3c0e4 <__assert_fail@plt+0x2952c>
   3c0d8:	movw	r0, #63	; 0x3f
   3c0dc:	str	r0, [fp, #-4]
   3c0e0:	b	3c534 <__assert_fail@plt+0x2997c>
   3c0e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   3c0e8:	add	r1, r0, #1
   3c0ec:	str	r1, [fp, #-20]	; 0xffffffec
   3c0f0:	ldrb	r0, [r0, #1]
   3c0f4:	strb	r0, [fp, #-13]
   3c0f8:	ldrb	r0, [fp, #-13]
   3c0fc:	bl	6ee98 <__assert_fail@plt+0x5c2e0>
   3c100:	tst	r0, #1
   3c104:	bne	3b400 <__assert_fail@plt+0x28848>
   3c108:	ldrb	r0, [fp, #-13]
   3c10c:	cmp	r0, #46	; 0x2e
   3c110:	beq	3c120 <__assert_fail@plt+0x29568>
   3c114:	ldrb	r0, [fp, #-13]
   3c118:	cmp	r0, #44	; 0x2c
   3c11c:	bne	3c2f0 <__assert_fail@plt+0x29738>
   3c120:	ldr	r0, [fp, #-20]	; 0xffffffec
   3c124:	ldrb	r0, [r0, #1]
   3c128:	bl	6ee98 <__assert_fail@plt+0x5c2e0>
   3c12c:	tst	r0, #1
   3c130:	beq	3c2f0 <__assert_fail@plt+0x29738>
   3c134:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c138:	str	r0, [fp, #-32]	; 0xffffffe0
   3c13c:	ldr	r0, [fp, #-20]	; 0xffffffec
   3c140:	add	r0, r0, #1
   3c144:	str	r0, [fp, #-20]	; 0xffffffec
   3c148:	ldr	r0, [fp, #-20]	; 0xffffffec
   3c14c:	add	r1, r0, #1
   3c150:	str	r1, [fp, #-20]	; 0xffffffec
   3c154:	ldrb	r0, [r0]
   3c158:	sub	r0, r0, #48	; 0x30
   3c15c:	str	r0, [fp, #-40]	; 0xffffffd8
   3c160:	movw	r0, #2
   3c164:	str	r0, [fp, #-36]	; 0xffffffdc
   3c168:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3c16c:	cmp	r0, #9
   3c170:	bgt	3c1cc <__assert_fail@plt+0x29614>
   3c174:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3c178:	movw	r1, #10
   3c17c:	mul	r0, r0, r1
   3c180:	str	r0, [fp, #-40]	; 0xffffffd8
   3c184:	ldr	r0, [fp, #-20]	; 0xffffffec
   3c188:	ldrb	r0, [r0]
   3c18c:	bl	6ee98 <__assert_fail@plt+0x5c2e0>
   3c190:	tst	r0, #1
   3c194:	beq	3c1b8 <__assert_fail@plt+0x29600>
   3c198:	ldr	r0, [fp, #-20]	; 0xffffffec
   3c19c:	add	r1, r0, #1
   3c1a0:	str	r1, [fp, #-20]	; 0xffffffec
   3c1a4:	ldrb	r0, [r0]
   3c1a8:	sub	r0, r0, #48	; 0x30
   3c1ac:	ldr	r1, [fp, #-40]	; 0xffffffd8
   3c1b0:	add	r0, r1, r0
   3c1b4:	str	r0, [fp, #-40]	; 0xffffffd8
   3c1b8:	b	3c1bc <__assert_fail@plt+0x29604>
   3c1bc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3c1c0:	add	r0, r0, #1
   3c1c4:	str	r0, [fp, #-36]	; 0xffffffdc
   3c1c8:	b	3c168 <__assert_fail@plt+0x295b0>
   3c1cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3c1d0:	cmp	r0, #0
   3c1d4:	bge	3c228 <__assert_fail@plt+0x29670>
   3c1d8:	b	3c1dc <__assert_fail@plt+0x29624>
   3c1dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   3c1e0:	ldrb	r0, [r0]
   3c1e4:	bl	6ee98 <__assert_fail@plt+0x5c2e0>
   3c1e8:	tst	r0, #1
   3c1ec:	beq	3c224 <__assert_fail@plt+0x2966c>
   3c1f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   3c1f4:	ldrb	r0, [r0]
   3c1f8:	cmp	r0, #48	; 0x30
   3c1fc:	beq	3c210 <__assert_fail@plt+0x29658>
   3c200:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3c204:	add	r0, r0, #1
   3c208:	str	r0, [fp, #-40]	; 0xffffffd8
   3c20c:	b	3c224 <__assert_fail@plt+0x2966c>
   3c210:	b	3c214 <__assert_fail@plt+0x2965c>
   3c214:	ldr	r0, [fp, #-20]	; 0xffffffec
   3c218:	add	r0, r0, #1
   3c21c:	str	r0, [fp, #-20]	; 0xffffffec
   3c220:	b	3c1dc <__assert_fail@plt+0x29624>
   3c224:	b	3c228 <__assert_fail@plt+0x29670>
   3c228:	b	3c22c <__assert_fail@plt+0x29674>
   3c22c:	ldr	r0, [fp, #-20]	; 0xffffffec
   3c230:	ldrb	r0, [r0]
   3c234:	bl	6ee98 <__assert_fail@plt+0x5c2e0>
   3c238:	tst	r0, #1
   3c23c:	beq	3c250 <__assert_fail@plt+0x29698>
   3c240:	ldr	r0, [fp, #-20]	; 0xffffffec
   3c244:	add	r0, r0, #1
   3c248:	str	r0, [fp, #-20]	; 0xffffffec
   3c24c:	b	3c22c <__assert_fail@plt+0x29674>
   3c250:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3c254:	cmp	r0, #0
   3c258:	bge	3c2a4 <__assert_fail@plt+0x296ec>
   3c25c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3c260:	cmp	r0, #0
   3c264:	beq	3c2a4 <__assert_fail@plt+0x296ec>
   3c268:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3c26c:	sub	r1, r0, #1
   3c270:	mov	r2, #1
   3c274:	cmp	r1, r0
   3c278:	movwvc	r2, #0
   3c27c:	str	r1, [fp, #-32]	; 0xffffffe0
   3c280:	tst	r2, #1
   3c284:	beq	3c294 <__assert_fail@plt+0x296dc>
   3c288:	movw	r0, #63	; 0x3f
   3c28c:	str	r0, [fp, #-4]
   3c290:	b	3c534 <__assert_fail@plt+0x2997c>
   3c294:	ldr	r0, [pc, #708]	; 3c560 <__assert_fail@plt+0x299a8>
   3c298:	ldr	r1, [fp, #-40]	; 0xffffffd8
   3c29c:	sub	r0, r0, r1
   3c2a0:	str	r0, [fp, #-40]	; 0xffffffd8
   3c2a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3c2a8:	ldr	r1, [fp, #-8]
   3c2ac:	str	r0, [r1]
   3c2b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3c2b4:	ldr	r1, [fp, #-8]
   3c2b8:	str	r0, [r1, #4]
   3c2bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   3c2c0:	ldr	r1, [fp, #-12]
   3c2c4:	str	r0, [r1]
   3c2c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3c2cc:	cmp	r0, #0
   3c2d0:	movw	r0, #0
   3c2d4:	movne	r0, #1
   3c2d8:	tst	r0, #1
   3c2dc:	movw	r0, #277	; 0x115
   3c2e0:	movw	r1, #276	; 0x114
   3c2e4:	movne	r0, r1
   3c2e8:	str	r0, [fp, #-4]
   3c2ec:	b	3c534 <__assert_fail@plt+0x2997c>
   3c2f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3c2f4:	ldr	r1, [fp, #-8]
   3c2f8:	lsr	r0, r0, #31
   3c2fc:	strb	r0, [r1]
   3c300:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c304:	asr	r1, r0, #31
   3c308:	ldr	r2, [fp, #-8]
   3c30c:	str	r0, [r2, #8]
   3c310:	str	r1, [r2, #12]
   3c314:	ldr	r0, [fp, #-20]	; 0xffffffec
   3c318:	ldr	r1, [fp, #-12]
   3c31c:	ldr	r1, [r1]
   3c320:	sub	r0, r0, r1
   3c324:	ldr	r1, [fp, #-8]
   3c328:	str	r0, [r1, #16]
   3c32c:	ldr	r0, [fp, #-20]	; 0xffffffec
   3c330:	ldr	r1, [fp, #-12]
   3c334:	str	r0, [r1]
   3c338:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3c33c:	cmp	r0, #0
   3c340:	movw	r0, #0
   3c344:	movne	r0, #1
   3c348:	tst	r0, #1
   3c34c:	movw	r0, #275	; 0x113
   3c350:	movw	r1, #274	; 0x112
   3c354:	movne	r0, r1
   3c358:	str	r0, [fp, #-4]
   3c35c:	b	3c534 <__assert_fail@plt+0x2997c>
   3c360:	ldrb	r0, [fp, #-13]
   3c364:	bl	6ed5c <__assert_fail@plt+0x5c1a4>
   3c368:	tst	r0, #1
   3c36c:	beq	3c47c <__assert_fail@plt+0x298c4>
   3c370:	add	r0, sp, #28
   3c374:	str	r0, [sp, #24]
   3c378:	add	r0, sp, #28
   3c37c:	ldr	r1, [sp, #24]
   3c380:	add	r0, r0, #20
   3c384:	mvn	r2, #0
   3c388:	add	r0, r0, r2
   3c38c:	cmp	r1, r0
   3c390:	bcs	3c3a8 <__assert_fail@plt+0x297f0>
   3c394:	ldrb	r0, [fp, #-13]
   3c398:	ldr	r1, [sp, #24]
   3c39c:	add	r2, r1, #1
   3c3a0:	str	r2, [sp, #24]
   3c3a4:	strb	r0, [r1]
   3c3a8:	ldr	r0, [fp, #-12]
   3c3ac:	ldr	r1, [r0]
   3c3b0:	add	r2, r1, #1
   3c3b4:	str	r2, [r0]
   3c3b8:	ldrb	r0, [r1, #1]
   3c3bc:	strb	r0, [fp, #-13]
   3c3c0:	ldrb	r0, [fp, #-13]
   3c3c4:	bl	6ed5c <__assert_fail@plt+0x5c1a4>
   3c3c8:	tst	r0, #1
   3c3cc:	movw	r0, #1
   3c3d0:	str	r0, [sp]
   3c3d4:	bne	3c3ec <__assert_fail@plt+0x29834>
   3c3d8:	ldrb	r0, [fp, #-13]
   3c3dc:	cmp	r0, #46	; 0x2e
   3c3e0:	movw	r0, #0
   3c3e4:	moveq	r0, #1
   3c3e8:	str	r0, [sp]
   3c3ec:	ldr	r0, [sp]
   3c3f0:	tst	r0, #1
   3c3f4:	bne	3c378 <__assert_fail@plt+0x297c0>
   3c3f8:	add	r1, sp, #28
   3c3fc:	ldr	r0, [sp, #24]
   3c400:	movw	r2, #0
   3c404:	strb	r2, [r0]
   3c408:	ldr	r0, [fp, #-12]
   3c40c:	bl	4549c <__assert_fail@plt+0x328e4>
   3c410:	str	r0, [sp, #20]
   3c414:	ldr	r0, [sp, #20]
   3c418:	movw	r1, #0
   3c41c:	cmp	r0, r1
   3c420:	bne	3c454 <__assert_fail@plt+0x2989c>
   3c424:	ldr	r0, [fp, #-12]
   3c428:	bl	3d73c <__assert_fail@plt+0x2ab84>
   3c42c:	tst	r0, #1
   3c430:	beq	3c448 <__assert_fail@plt+0x29890>
   3c434:	movw	r0, #44794	; 0xaefa
   3c438:	movt	r0, #7
   3c43c:	bl	12864 <gettext@plt>
   3c440:	add	r1, sp, #28
   3c444:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   3c448:	movw	r0, #63	; 0x3f
   3c44c:	str	r0, [fp, #-4]
   3c450:	b	3c534 <__assert_fail@plt+0x2997c>
   3c454:	ldr	r0, [sp, #20]
   3c458:	ldr	r0, [r0, #8]
   3c45c:	asr	r1, r0, #31
   3c460:	ldr	r2, [fp, #-8]
   3c464:	str	r0, [r2]
   3c468:	str	r1, [r2, #4]
   3c46c:	ldr	r0, [sp, #20]
   3c470:	ldr	r0, [r0, #4]
   3c474:	str	r0, [fp, #-4]
   3c478:	b	3c534 <__assert_fail@plt+0x2997c>
   3c47c:	ldrb	r0, [fp, #-13]
   3c480:	cmp	r0, #40	; 0x28
   3c484:	beq	3c4ac <__assert_fail@plt+0x298f4>
   3c488:	ldr	r0, [fp, #-12]
   3c48c:	ldr	r1, [r0]
   3c490:	add	r2, r1, #1
   3c494:	str	r2, [r0]
   3c498:	ldrb	r0, [r1]
   3c49c:	bl	458fc <__assert_fail@plt+0x32d44>
   3c4a0:	and	r0, r0, #255	; 0xff
   3c4a4:	str	r0, [fp, #-4]
   3c4a8:	b	3c534 <__assert_fail@plt+0x2997c>
   3c4ac:	movw	r0, #0
   3c4b0:	str	r0, [sp, #16]
   3c4b4:	ldr	r0, [fp, #-12]
   3c4b8:	ldr	r1, [r0]
   3c4bc:	add	r2, r1, #1
   3c4c0:	str	r2, [r0]
   3c4c4:	ldrb	r0, [r1]
   3c4c8:	strb	r0, [fp, #-13]
   3c4cc:	ldrb	r0, [fp, #-13]
   3c4d0:	cmp	r0, #0
   3c4d4:	bne	3c4e4 <__assert_fail@plt+0x2992c>
   3c4d8:	ldrb	r0, [fp, #-13]
   3c4dc:	str	r0, [fp, #-4]
   3c4e0:	b	3c534 <__assert_fail@plt+0x2997c>
   3c4e4:	ldrb	r0, [fp, #-13]
   3c4e8:	cmp	r0, #40	; 0x28
   3c4ec:	bne	3c500 <__assert_fail@plt+0x29948>
   3c4f0:	ldr	r0, [sp, #16]
   3c4f4:	add	r0, r0, #1
   3c4f8:	str	r0, [sp, #16]
   3c4fc:	b	3c520 <__assert_fail@plt+0x29968>
   3c500:	ldrb	r0, [fp, #-13]
   3c504:	cmp	r0, #41	; 0x29
   3c508:	bne	3c51c <__assert_fail@plt+0x29964>
   3c50c:	ldr	r0, [sp, #16]
   3c510:	mvn	r1, #0
   3c514:	add	r0, r0, r1
   3c518:	str	r0, [sp, #16]
   3c51c:	b	3c520 <__assert_fail@plt+0x29968>
   3c520:	b	3c524 <__assert_fail@plt+0x2996c>
   3c524:	ldr	r0, [sp, #16]
   3c528:	cmp	r0, #0
   3c52c:	bne	3c4b4 <__assert_fail@plt+0x298fc>
   3c530:	b	3b304 <__assert_fail@plt+0x2874c>
   3c534:	ldr	r0, [fp, #-4]
   3c538:	mov	sp, fp
   3c53c:	pop	{fp, pc}
   3c540:	ldmibne	r9, {r0, r3, r4, r7, r8, fp, ip, pc}
   3c544:	stcleq	12, cr12, [ip], {204}	; 0xcc
   3c548:	andhi	r0, r0, r0
   3c54c:	vcge.u<illegal width 64>	d3, d3, d20
   3c550:	svcvc	0x00ffffff
   3c554:			; <UNDEFINED> instruction: 0xffff8000
   3c558:			; <UNDEFINED> instruction: 0xfffff334
   3c55c:			; <UNDEFINED> instruction: 0xffffe667
   3c560:	blcc	fe6eed68 <stdout@@GLIBC_2.4+0xfe661634>
   3c564:	push	{r4, r5, r6, sl, fp, lr}
   3c568:	add	fp, sp, #16
   3c56c:	sub	sp, sp, #224	; 0xe0
   3c570:	str	r0, [fp, #-20]	; 0xffffffec
   3c574:	str	r1, [fp, #-24]	; 0xffffffe8
   3c578:	movw	r0, #0
   3c57c:	strb	r0, [fp, #-25]	; 0xffffffe7
   3c580:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3c584:	bl	3d73c <__assert_fail@plt+0x2ab84>
   3c588:	tst	r0, #1
   3c58c:	bne	3c594 <__assert_fail@plt+0x299dc>
   3c590:	b	3ca3c <__assert_fail@plt+0x29e84>
   3c594:	movw	r0, #44523	; 0xadeb
   3c598:	movt	r0, #7
   3c59c:	bl	12864 <gettext@plt>
   3c5a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   3c5a4:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   3c5a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3c5ac:	ldr	r0, [r0, #156]	; 0x9c
   3c5b0:	cmp	r0, #0
   3c5b4:	beq	3c620 <__assert_fail@plt+0x29a68>
   3c5b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3c5bc:	ldrb	r0, [r0, #181]	; 0xb5
   3c5c0:	tst	r0, #1
   3c5c4:	bne	3c620 <__assert_fail@plt+0x29a68>
   3c5c8:	movw	r0, #55080	; 0xd728
   3c5cc:	movt	r0, #8
   3c5d0:	ldr	r0, [r0]
   3c5d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3c5d8:	ldr	r2, [r1, #40]	; 0x28
   3c5dc:	ldr	r3, [r1, #44]	; 0x2c
   3c5e0:	ldr	ip, [r1, #56]	; 0x38
   3c5e4:	ldr	lr, [r1, #60]	; 0x3c
   3c5e8:	ldr	r4, [r1, #68]	; 0x44
   3c5ec:	ldr	r1, [r1, #64]	; 0x40
   3c5f0:	mov	r5, sp
   3c5f4:	str	r4, [r5, #12]
   3c5f8:	str	r1, [r5, #8]
   3c5fc:	str	lr, [r5, #4]
   3c600:	str	ip, [r5]
   3c604:	movw	r1, #44540	; 0xadfc
   3c608:	movt	r1, #7
   3c60c:	bl	128c4 <fprintf@plt>
   3c610:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3c614:	movw	r2, #1
   3c618:	strb	r2, [r1, #181]	; 0xb5
   3c61c:	strb	r2, [fp, #-25]	; 0xffffffe7
   3c620:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3c624:	ldrb	r0, [r0, #180]	; 0xb4
   3c628:	and	r0, r0, #1
   3c62c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3c630:	ldrb	r1, [r1, #186]	; 0xba
   3c634:	and	r1, r1, #1
   3c638:	cmp	r0, r1
   3c63c:	beq	3c6bc <__assert_fail@plt+0x29b04>
   3c640:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   3c644:	tst	r0, #1
   3c648:	beq	3c660 <__assert_fail@plt+0x29aa8>
   3c64c:	movw	r0, #55080	; 0xd728
   3c650:	movt	r0, #8
   3c654:	ldr	r1, [r0]
   3c658:	movw	r0, #32
   3c65c:	bl	12a38 <fputc@plt>
   3c660:	movw	r0, #55080	; 0xd728
   3c664:	movt	r0, #8
   3c668:	ldr	r0, [r0]
   3c66c:	movw	r1, #44569	; 0xae19
   3c670:	movt	r1, #7
   3c674:	str	r0, [sp, #52]	; 0x34
   3c678:	mov	r0, r1
   3c67c:	bl	12864 <gettext@plt>
   3c680:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3c684:	ldr	r2, [r1, #40]	; 0x28
   3c688:	ldr	r3, [r1, #44]	; 0x2c
   3c68c:	ldr	r1, [sp, #52]	; 0x34
   3c690:	str	r0, [sp, #48]	; 0x30
   3c694:	mov	r0, r1
   3c698:	ldr	r1, [sp, #48]	; 0x30
   3c69c:	bl	128c4 <fprintf@plt>
   3c6a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3c6a4:	ldrb	r1, [r1, #180]	; 0xb4
   3c6a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3c6ac:	and	r1, r1, #1
   3c6b0:	strb	r1, [r2, #186]	; 0xba
   3c6b4:	movw	r1, #1
   3c6b8:	strb	r1, [fp, #-25]	; 0xffffffe7
   3c6bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3c6c0:	ldr	r0, [r0, #172]	; 0xac
   3c6c4:	cmp	r0, #0
   3c6c8:	beq	3c7c0 <__assert_fail@plt+0x29c08>
   3c6cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3c6d0:	ldrb	r0, [r0, #184]	; 0xb8
   3c6d4:	tst	r0, #1
   3c6d8:	bne	3c7c0 <__assert_fail@plt+0x29c08>
   3c6dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3c6e0:	ldr	r0, [r0, #88]	; 0x58
   3c6e4:	asr	r1, r0, #31
   3c6e8:	str	r0, [fp, #-40]	; 0xffffffd8
   3c6ec:	str	r1, [fp, #-36]	; 0xffffffdc
   3c6f0:	movw	r0, #55080	; 0xd728
   3c6f4:	movt	r0, #8
   3c6f8:	ldr	r0, [r0]
   3c6fc:	ldrb	r1, [fp, #-25]	; 0xffffffe7
   3c700:	mov	r2, #1
   3c704:	bic	r1, r2, r1
   3c708:	movw	r2, #44582	; 0xae26
   3c70c:	movt	r2, #7
   3c710:	add	r1, r2, r1
   3c714:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3c718:	ldr	r3, [r2, #72]	; 0x48
   3c71c:	ldr	ip, [r2, #76]	; 0x4c
   3c720:	ldr	lr, [r2, #80]	; 0x50
   3c724:	ldr	r2, [r2, #84]	; 0x54
   3c728:	ldr	r4, [fp, #-40]	; 0xffffffd8
   3c72c:	ldr	r5, [fp, #-36]	; 0xffffffdc
   3c730:	mov	r6, sp
   3c734:	str	r5, [r6, #12]
   3c738:	str	r4, [r6, #8]
   3c73c:	str	r2, [r6, #4]
   3c740:	str	lr, [r6]
   3c744:	mov	r2, r3
   3c748:	mov	r3, ip
   3c74c:	bl	128c4 <fprintf@plt>
   3c750:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3c754:	ldr	r1, [r1, #92]	; 0x5c
   3c758:	cmp	r1, #0
   3c75c:	beq	3c788 <__assert_fail@plt+0x29bd0>
   3c760:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3c764:	ldr	r0, [r0, #92]	; 0x5c
   3c768:	str	r0, [fp, #-44]	; 0xffffffd4
   3c76c:	movw	r0, #55080	; 0xd728
   3c770:	movt	r0, #8
   3c774:	ldr	r0, [r0]
   3c778:	ldr	r2, [fp, #-44]	; 0xffffffd4
   3c77c:	movw	r1, #44604	; 0xae3c
   3c780:	movt	r1, #7
   3c784:	bl	128c4 <fprintf@plt>
   3c788:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3c78c:	ldr	r0, [r0, #28]
   3c790:	cmp	r0, #1
   3c794:	bne	3c7b0 <__assert_fail@plt+0x29bf8>
   3c798:	movw	r0, #55080	; 0xd728
   3c79c:	movt	r0, #8
   3c7a0:	ldr	r1, [r0]
   3c7a4:	movw	r0, #44610	; 0xae42
   3c7a8:	movt	r0, #7
   3c7ac:	bl	12b4c <fputs@plt>
   3c7b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3c7b4:	movw	r1, #1
   3c7b8:	strb	r1, [r0, #184]	; 0xb8
   3c7bc:	strb	r1, [fp, #-25]	; 0xffffffe7
   3c7c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3c7c4:	ldr	r0, [r0, #160]	; 0xa0
   3c7c8:	cmp	r0, #0
   3c7cc:	beq	3c88c <__assert_fail@plt+0x29cd4>
   3c7d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3c7d4:	ldrb	r0, [r0, #182]	; 0xb6
   3c7d8:	tst	r0, #1
   3c7dc:	bne	3c88c <__assert_fail@plt+0x29cd4>
   3c7e0:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   3c7e4:	tst	r0, #1
   3c7e8:	beq	3c800 <__assert_fail@plt+0x29c48>
   3c7ec:	movw	r0, #55080	; 0xd728
   3c7f0:	movt	r0, #8
   3c7f4:	ldr	r1, [r0]
   3c7f8:	movw	r0, #32
   3c7fc:	bl	12a38 <fputc@plt>
   3c800:	movw	r0, #55080	; 0xd728
   3c804:	movt	r0, #8
   3c808:	ldr	r0, [r0]
   3c80c:	movw	r1, #44613	; 0xae45
   3c810:	movt	r1, #7
   3c814:	str	r0, [sp, #44]	; 0x2c
   3c818:	mov	r0, r1
   3c81c:	bl	12864 <gettext@plt>
   3c820:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3c824:	add	r2, sp, #96	; 0x60
   3c828:	mov	r3, #100	; 0x64
   3c82c:	str	r0, [sp, #40]	; 0x28
   3c830:	mov	r0, r1
   3c834:	mov	r1, r2
   3c838:	mov	r2, r3
   3c83c:	bl	45088 <__assert_fail@plt+0x324d0>
   3c840:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3c844:	ldr	r2, [r1, #8]
   3c848:	ldr	r1, [r1, #12]
   3c84c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c850:	ldr	r3, [r3, #16]
   3c854:	mov	ip, sp
   3c858:	str	r3, [ip, #8]
   3c85c:	str	r1, [ip, #4]
   3c860:	str	r2, [ip]
   3c864:	ldr	r1, [sp, #44]	; 0x2c
   3c868:	str	r0, [sp, #36]	; 0x24
   3c86c:	mov	r0, r1
   3c870:	ldr	r1, [sp, #40]	; 0x28
   3c874:	ldr	r2, [sp, #36]	; 0x24
   3c878:	bl	128c4 <fprintf@plt>
   3c87c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3c880:	movw	r2, #1
   3c884:	strb	r2, [r1, #182]	; 0xb6
   3c888:	strb	r2, [fp, #-25]	; 0xffffffe7
   3c88c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3c890:	ldr	r0, [r0, #164]	; 0xa4
   3c894:	cmp	r0, #0
   3c898:	beq	3c91c <__assert_fail@plt+0x29d64>
   3c89c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3c8a0:	ldrb	r0, [r0, #183]	; 0xb7
   3c8a4:	tst	r0, #1
   3c8a8:	bne	3c91c <__assert_fail@plt+0x29d64>
   3c8ac:	movw	r0, #55080	; 0xd728
   3c8b0:	movt	r0, #8
   3c8b4:	ldr	r0, [r0]
   3c8b8:	ldrb	r1, [fp, #-25]	; 0xffffffe7
   3c8bc:	mvn	r2, #0
   3c8c0:	eor	r1, r1, r2
   3c8c4:	and	r1, r1, #1
   3c8c8:	movw	r2, #44645	; 0xae65
   3c8cc:	movt	r2, #7
   3c8d0:	add	r1, r2, r1
   3c8d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3c8d8:	ldr	r2, [r2, #20]
   3c8dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c8e0:	ldr	r3, [r3, #168]	; 0xa8
   3c8e4:	cmp	r3, #0
   3c8e8:	movw	r3, #0
   3c8ec:	movne	r3, #1
   3c8f0:	tst	r3, #1
   3c8f4:	movw	r3, #29909	; 0x74d5
   3c8f8:	movt	r3, #7
   3c8fc:	movw	ip, #44657	; 0xae71
   3c900:	movt	ip, #7
   3c904:	movne	r3, ip
   3c908:	bl	128c4 <fprintf@plt>
   3c90c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3c910:	movw	r2, #1
   3c914:	strb	r2, [r1, #183]	; 0xb7
   3c918:	strb	r2, [fp, #-25]	; 0xffffffe7
   3c91c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3c920:	ldr	r0, [r0, #176]	; 0xb0
   3c924:	cmp	r0, #0
   3c928:	beq	3c9a8 <__assert_fail@plt+0x29df0>
   3c92c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3c930:	ldrb	r0, [r0, #185]	; 0xb9
   3c934:	tst	r0, #1
   3c938:	bne	3c9a8 <__assert_fail@plt+0x29df0>
   3c93c:	add	r1, sp, #69	; 0x45
   3c940:	movw	r0, #55080	; 0xd728
   3c944:	movt	r0, #8
   3c948:	ldr	r0, [r0]
   3c94c:	ldrb	r2, [fp, #-25]	; 0xffffffe7
   3c950:	mvn	r3, #0
   3c954:	eor	r2, r2, r3
   3c958:	and	r2, r2, #1
   3c95c:	movw	r3, #44662	; 0xae76
   3c960:	movt	r3, #7
   3c964:	add	r2, r3, r2
   3c968:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c96c:	ldr	r3, [r3, #24]
   3c970:	str	r0, [sp, #32]
   3c974:	mov	r0, r3
   3c978:	str	r2, [sp, #28]
   3c97c:	bl	45220 <__assert_fail@plt+0x32668>
   3c980:	ldr	r1, [sp, #32]
   3c984:	str	r0, [sp, #24]
   3c988:	mov	r0, r1
   3c98c:	ldr	r1, [sp, #28]
   3c990:	ldr	r2, [sp, #24]
   3c994:	bl	128c4 <fprintf@plt>
   3c998:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3c99c:	movw	r2, #1
   3c9a0:	strb	r2, [r1, #185]	; 0xb9
   3c9a4:	strb	r2, [fp, #-25]	; 0xffffffe7
   3c9a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3c9ac:	ldrb	r0, [r0, #152]	; 0x98
   3c9b0:	tst	r0, #1
   3c9b4:	beq	3ca28 <__assert_fail@plt+0x29e70>
   3c9b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3c9bc:	ldr	r0, [r0, #88]	; 0x58
   3c9c0:	asr	r1, r0, #31
   3c9c4:	str	r0, [sp, #56]	; 0x38
   3c9c8:	str	r1, [sp, #60]	; 0x3c
   3c9cc:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   3c9d0:	tst	r0, #1
   3c9d4:	beq	3c9ec <__assert_fail@plt+0x29e34>
   3c9d8:	movw	r0, #55080	; 0xd728
   3c9dc:	movt	r0, #8
   3c9e0:	ldr	r1, [r0]
   3c9e4:	movw	r0, #32
   3c9e8:	bl	12a38 <fputc@plt>
   3c9ec:	movw	r0, #55080	; 0xd728
   3c9f0:	movt	r0, #8
   3c9f4:	ldr	r0, [r0]
   3c9f8:	movw	r1, #44669	; 0xae7d
   3c9fc:	movt	r1, #7
   3ca00:	str	r0, [sp, #20]
   3ca04:	mov	r0, r1
   3ca08:	bl	12864 <gettext@plt>
   3ca0c:	ldr	r2, [sp, #56]	; 0x38
   3ca10:	ldr	r3, [sp, #60]	; 0x3c
   3ca14:	ldr	r1, [sp, #20]
   3ca18:	str	r0, [sp, #16]
   3ca1c:	mov	r0, r1
   3ca20:	ldr	r1, [sp, #16]
   3ca24:	bl	128c4 <fprintf@plt>
   3ca28:	movw	r0, #55080	; 0xd728
   3ca2c:	movt	r0, #8
   3ca30:	ldr	r1, [r0]
   3ca34:	movw	r0, #10
   3ca38:	bl	12a38 <fputc@plt>
   3ca3c:	sub	sp, fp, #16
   3ca40:	pop	{r4, r5, r6, sl, fp, pc}
   3ca44:	push	{fp, lr}
   3ca48:	mov	fp, sp
   3ca4c:	sub	sp, sp, #24
   3ca50:	str	r0, [fp, #-4]
   3ca54:	str	r1, [fp, #-8]
   3ca58:	movw	r0, #0
   3ca5c:	strb	r0, [fp, #-9]
   3ca60:	ldr	r0, [fp, #-8]
   3ca64:	bl	3d73c <__assert_fail@plt+0x2ab84>
   3ca68:	tst	r0, #1
   3ca6c:	bne	3ca74 <__assert_fail@plt+0x29ebc>
   3ca70:	b	3ccb0 <__assert_fail@plt+0x2a0f8>
   3ca74:	movw	r0, #44523	; 0xadeb
   3ca78:	movt	r0, #7
   3ca7c:	bl	12864 <gettext@plt>
   3ca80:	ldr	r1, [fp, #-4]
   3ca84:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   3ca88:	ldr	r0, [fp, #-8]
   3ca8c:	ldr	r1, [r0, #96]	; 0x60
   3ca90:	ldr	r0, [r0, #100]	; 0x64
   3ca94:	orr	r0, r1, r0
   3ca98:	cmp	r0, #0
   3ca9c:	bne	3cb60 <__assert_fail@plt+0x29fa8>
   3caa0:	b	3caa4 <__assert_fail@plt+0x29eec>
   3caa4:	ldr	r0, [fp, #-8]
   3caa8:	ldr	r1, [r0, #104]	; 0x68
   3caac:	ldr	r0, [r0, #108]	; 0x6c
   3cab0:	orr	r0, r1, r0
   3cab4:	cmp	r0, #0
   3cab8:	bne	3cb60 <__assert_fail@plt+0x29fa8>
   3cabc:	b	3cac0 <__assert_fail@plt+0x29f08>
   3cac0:	ldr	r0, [fp, #-8]
   3cac4:	ldr	r1, [r0, #112]	; 0x70
   3cac8:	ldr	r0, [r0, #116]	; 0x74
   3cacc:	orr	r0, r1, r0
   3cad0:	cmp	r0, #0
   3cad4:	bne	3cb60 <__assert_fail@plt+0x29fa8>
   3cad8:	b	3cadc <__assert_fail@plt+0x29f24>
   3cadc:	ldr	r0, [fp, #-8]
   3cae0:	ldr	r1, [r0, #120]	; 0x78
   3cae4:	ldr	r0, [r0, #124]	; 0x7c
   3cae8:	orr	r0, r1, r0
   3caec:	cmp	r0, #0
   3caf0:	bne	3cb60 <__assert_fail@plt+0x29fa8>
   3caf4:	b	3caf8 <__assert_fail@plt+0x29f40>
   3caf8:	ldr	r0, [fp, #-8]
   3cafc:	ldr	r1, [r0, #128]	; 0x80
   3cb00:	ldr	r0, [r0, #132]	; 0x84
   3cb04:	orr	r0, r1, r0
   3cb08:	cmp	r0, #0
   3cb0c:	bne	3cb60 <__assert_fail@plt+0x29fa8>
   3cb10:	b	3cb14 <__assert_fail@plt+0x29f5c>
   3cb14:	ldr	r0, [fp, #-8]
   3cb18:	ldr	r1, [r0, #136]	; 0x88
   3cb1c:	ldr	r0, [r0, #140]	; 0x8c
   3cb20:	orr	r0, r1, r0
   3cb24:	cmp	r0, #0
   3cb28:	bne	3cb60 <__assert_fail@plt+0x29fa8>
   3cb2c:	b	3cb30 <__assert_fail@plt+0x29f78>
   3cb30:	ldr	r0, [fp, #-8]
   3cb34:	ldr	r0, [r0, #144]	; 0x90
   3cb38:	cmp	r0, #0
   3cb3c:	bne	3cb60 <__assert_fail@plt+0x29fa8>
   3cb40:	movw	r0, #44700	; 0xae9c
   3cb44:	movt	r0, #7
   3cb48:	bl	12864 <gettext@plt>
   3cb4c:	movw	r1, #55080	; 0xd728
   3cb50:	movt	r1, #8
   3cb54:	ldr	r1, [r1]
   3cb58:	bl	12b4c <fputs@plt>
   3cb5c:	b	3ccb0 <__assert_fail@plt+0x2a0f8>
   3cb60:	ldr	r0, [fp, #-8]
   3cb64:	ldr	r2, [r0, #96]	; 0x60
   3cb68:	ldr	r3, [r0, #100]	; 0x64
   3cb6c:	ldrb	r0, [fp, #-9]
   3cb70:	movw	r1, #44716	; 0xaeac
   3cb74:	movt	r1, #7
   3cb78:	mov	ip, sp
   3cb7c:	str	r1, [ip]
   3cb80:	and	r0, r0, #1
   3cb84:	bl	453fc <__assert_fail@plt+0x32844>
   3cb88:	strb	r0, [fp, #-9]
   3cb8c:	ldr	r0, [fp, #-8]
   3cb90:	ldr	r2, [r0, #104]	; 0x68
   3cb94:	ldr	r3, [r0, #108]	; 0x6c
   3cb98:	ldrb	r0, [fp, #-9]
   3cb9c:	movw	r1, #44724	; 0xaeb4
   3cba0:	movt	r1, #7
   3cba4:	mov	ip, sp
   3cba8:	str	r1, [ip]
   3cbac:	and	r0, r0, #1
   3cbb0:	bl	453fc <__assert_fail@plt+0x32844>
   3cbb4:	strb	r0, [fp, #-9]
   3cbb8:	ldr	r0, [fp, #-8]
   3cbbc:	ldr	r2, [r0, #112]	; 0x70
   3cbc0:	ldr	r3, [r0, #116]	; 0x74
   3cbc4:	ldrb	r0, [fp, #-9]
   3cbc8:	movw	r1, #44733	; 0xaebd
   3cbcc:	movt	r1, #7
   3cbd0:	mov	ip, sp
   3cbd4:	str	r1, [ip]
   3cbd8:	and	r0, r0, #1
   3cbdc:	bl	453fc <__assert_fail@plt+0x32844>
   3cbe0:	strb	r0, [fp, #-9]
   3cbe4:	ldr	r0, [fp, #-8]
   3cbe8:	ldr	r2, [r0, #120]	; 0x78
   3cbec:	ldr	r3, [r0, #124]	; 0x7c
   3cbf0:	ldrb	r0, [fp, #-9]
   3cbf4:	movw	r1, #44740	; 0xaec4
   3cbf8:	movt	r1, #7
   3cbfc:	mov	ip, sp
   3cc00:	str	r1, [ip]
   3cc04:	and	r0, r0, #1
   3cc08:	bl	453fc <__assert_fail@plt+0x32844>
   3cc0c:	strb	r0, [fp, #-9]
   3cc10:	ldr	r0, [fp, #-8]
   3cc14:	ldr	r2, [r0, #128]	; 0x80
   3cc18:	ldr	r3, [r0, #132]	; 0x84
   3cc1c:	ldrb	r0, [fp, #-9]
   3cc20:	movw	r1, #44748	; 0xaecc
   3cc24:	movt	r1, #7
   3cc28:	mov	ip, sp
   3cc2c:	str	r1, [ip]
   3cc30:	and	r0, r0, #1
   3cc34:	bl	453fc <__assert_fail@plt+0x32844>
   3cc38:	strb	r0, [fp, #-9]
   3cc3c:	ldr	r0, [fp, #-8]
   3cc40:	ldr	r2, [r0, #136]	; 0x88
   3cc44:	ldr	r3, [r0, #140]	; 0x8c
   3cc48:	ldrb	r0, [fp, #-9]
   3cc4c:	movw	r1, #34284	; 0x85ec
   3cc50:	movt	r1, #7
   3cc54:	mov	ip, sp
   3cc58:	str	r1, [ip]
   3cc5c:	and	r0, r0, #1
   3cc60:	bl	453fc <__assert_fail@plt+0x32844>
   3cc64:	strb	r0, [fp, #-9]
   3cc68:	ldrb	r0, [fp, #-9]
   3cc6c:	ldr	r1, [fp, #-8]
   3cc70:	ldr	r1, [r1, #144]	; 0x90
   3cc74:	asr	r3, r1, #31
   3cc78:	movw	r2, #44756	; 0xaed4
   3cc7c:	movt	r2, #7
   3cc80:	mov	ip, sp
   3cc84:	str	r2, [ip]
   3cc88:	and	r0, r0, #1
   3cc8c:	mov	r2, r1
   3cc90:	bl	453fc <__assert_fail@plt+0x32844>
   3cc94:	movw	r1, #55080	; 0xd728
   3cc98:	movt	r1, #8
   3cc9c:	ldr	r1, [r1]
   3cca0:	movw	r2, #10
   3cca4:	str	r0, [sp, #8]
   3cca8:	mov	r0, r2
   3ccac:	bl	12a38 <fputc@plt>
   3ccb0:	mov	sp, fp
   3ccb4:	pop	{fp, pc}
   3ccb8:	push	{r4, sl, fp, lr}
   3ccbc:	add	fp, sp, #8
   3ccc0:	sub	sp, sp, #24
   3ccc4:	ldr	r1, [fp, #12]
   3ccc8:	ldr	ip, [fp, #8]
   3cccc:	ldr	lr, [fp, #20]
   3ccd0:	ldr	r4, [fp, #16]
   3ccd4:	str	r0, [fp, #-12]
   3ccd8:	str	r3, [sp, #12]
   3ccdc:	str	r2, [sp, #8]
   3cce0:	str	r1, [sp, #4]
   3cce4:	str	ip, [sp]
   3cce8:	ldr	r0, [sp, #8]
   3ccec:	ldr	r1, [sp, #12]
   3ccf0:	ldr	r2, [fp, #-12]
   3ccf4:	str	r1, [r2, #76]	; 0x4c
   3ccf8:	str	r0, [r2, #72]	; 0x48
   3ccfc:	ldr	r0, [sp]
   3cd00:	ldr	r1, [sp, #4]
   3cd04:	ldr	r2, [fp, #-12]
   3cd08:	str	r1, [r2, #84]	; 0x54
   3cd0c:	str	r0, [r2, #80]	; 0x50
   3cd10:	ldr	r0, [fp, #16]
   3cd14:	ldr	r1, [fp, #-12]
   3cd18:	str	r0, [r1, #88]	; 0x58
   3cd1c:	ldr	r0, [fp, #20]
   3cd20:	ldr	r1, [fp, #-12]
   3cd24:	str	r0, [r1, #92]	; 0x5c
   3cd28:	sub	sp, fp, #8
   3cd2c:	pop	{r4, sl, fp, pc}
   3cd30:	push	{r4, r5, r6, sl, fp, lr}
   3cd34:	add	fp, sp, #16
   3cd38:	sub	sp, sp, #72	; 0x48
   3cd3c:	ldr	r1, [fp, #28]
   3cd40:	ldr	ip, [fp, #24]
   3cd44:	ldr	lr, [fp, #20]
   3cd48:	ldr	r4, [fp, #16]
   3cd4c:	ldr	r5, [fp, #12]
   3cd50:	ldr	r6, [fp, #8]
   3cd54:	str	r2, [sp, #40]	; 0x28
   3cd58:	str	r3, [sp, #44]	; 0x2c
   3cd5c:	str	r6, [sp, #48]	; 0x30
   3cd60:	str	r5, [sp, #52]	; 0x34
   3cd64:	str	r4, [sp, #56]	; 0x38
   3cd68:	str	lr, [sp, #60]	; 0x3c
   3cd6c:	str	r0, [sp, #36]	; 0x24
   3cd70:	str	r1, [sp, #28]
   3cd74:	str	ip, [sp, #24]
   3cd78:	movw	r0, #0
   3cd7c:	strb	r0, [sp, #15]
   3cd80:	ldr	r0, [sp, #56]	; 0x38
   3cd84:	cmp	r0, #2
   3cd88:	bgt	3cdb8 <__assert_fail@plt+0x2a200>
   3cd8c:	ldr	r0, [sp, #28]
   3cd90:	cmn	r0, #1
   3cd94:	bgt	3cdb8 <__assert_fail@plt+0x2a200>
   3cd98:	b	3cd9c <__assert_fail@plt+0x2a1e4>
   3cd9c:	ldr	r0, [sp, #48]	; 0x30
   3cda0:	ldr	r1, [sp, #52]	; 0x34
   3cda4:	mov	r2, #100	; 0x64
   3cda8:	umull	r0, r3, r0, r2
   3cdac:	mla	r1, r1, r2, r3
   3cdb0:	str	r0, [sp, #48]	; 0x30
   3cdb4:	str	r1, [sp, #52]	; 0x34
   3cdb8:	ldr	r0, [sp, #28]
   3cdbc:	cmn	r0, #1
   3cdc0:	bgt	3ce00 <__assert_fail@plt+0x2a248>
   3cdc4:	b	3cdc8 <__assert_fail@plt+0x2a210>
   3cdc8:	ldr	r0, [sp, #48]	; 0x30
   3cdcc:	ldr	r1, [sp, #52]	; 0x34
   3cdd0:	mov	r2, #100	; 0x64
   3cdd4:	mov	r3, #0
   3cdd8:	bl	75338 <__assert_fail@plt+0x62780>
   3cddc:	mov	ip, #60	; 0x3c
   3cde0:	umull	r0, ip, r0, ip
   3cde4:	rsb	r1, r1, r1, lsl #4
   3cde8:	add	r1, ip, r1, lsl #2
   3cdec:	adds	r0, r0, r2
   3cdf0:	adc	r1, r1, r3
   3cdf4:	str	r0, [sp, #16]
   3cdf8:	str	r1, [sp, #20]
   3cdfc:	b	3d0dc <__assert_fail@plt+0x2a524>
   3ce00:	b	3cee4 <__assert_fail@plt+0x2a32c>
   3ce04:	ldr	r0, [sp, #52]	; 0x34
   3ce08:	cmn	r0, #1
   3ce0c:	bgt	3ce70 <__assert_fail@plt+0x2a2b8>
   3ce10:	b	3ce14 <__assert_fail@plt+0x2a25c>
   3ce14:	b	3ce18 <__assert_fail@plt+0x2a260>
   3ce18:	ldr	r0, [sp, #48]	; 0x30
   3ce1c:	ldr	r1, [sp, #52]	; 0x34
   3ce20:	movw	r2, #8738	; 0x2222
   3ce24:	movt	r2, #8738	; 0x2222
   3ce28:	subs	r0, r0, r2
   3ce2c:	movw	r2, #8738	; 0x2222
   3ce30:	movt	r2, #546	; 0x222
   3ce34:	sbcs	r1, r1, r2
   3ce38:	blt	3cf6c <__assert_fail@plt+0x2a3b4>
   3ce3c:	b	3cf98 <__assert_fail@plt+0x2a3e0>
   3ce40:	ldr	r0, [sp, #48]	; 0x30
   3ce44:	ldr	r1, [sp, #52]	; 0x34
   3ce48:	mvn	r1, r1
   3ce4c:	mvn	r0, r0
   3ce50:	movw	r2, #56797	; 0xdddd
   3ce54:	movt	r2, #56797	; 0xdddd
   3ce58:	subs	r0, r2, r0
   3ce5c:	movw	r2, #56797	; 0xdddd
   3ce60:	movt	r2, #64989	; 0xfddd
   3ce64:	sbcs	r1, r2, r1
   3ce68:	blt	3cf6c <__assert_fail@plt+0x2a3b4>
   3ce6c:	b	3cf98 <__assert_fail@plt+0x2a3e0>
   3ce70:	b	3cebc <__assert_fail@plt+0x2a304>
   3ce74:	b	3ce78 <__assert_fail@plt+0x2a2c0>
   3ce78:	ldr	r0, [sp, #48]	; 0x30
   3ce7c:	ldr	r1, [sp, #52]	; 0x34
   3ce80:	add	r1, r1, #-2147483648	; 0x80000000
   3ce84:	rsbs	r0, r0, #0
   3ce88:	rscs	r1, r1, #0
   3ce8c:	blt	3cf6c <__assert_fail@plt+0x2a3b4>
   3ce90:	b	3cf98 <__assert_fail@plt+0x2a3e0>
   3ce94:	ldr	r0, [sp, #48]	; 0x30
   3ce98:	ldr	r1, [sp, #52]	; 0x34
   3ce9c:	subs	r0, r0, #1
   3cea0:	sbcs	r1, r1, #0
   3cea4:	blt	3cf98 <__assert_fail@plt+0x2a3e0>
   3cea8:	b	3ceac <__assert_fail@plt+0x2a2f4>
   3ceac:	mov	r0, #0
   3ceb0:	cmp	r0, #0
   3ceb4:	bne	3cf6c <__assert_fail@plt+0x2a3b4>
   3ceb8:	b	3cf98 <__assert_fail@plt+0x2a3e0>
   3cebc:	ldr	r0, [sp, #48]	; 0x30
   3cec0:	ldr	r1, [sp, #52]	; 0x34
   3cec4:	movw	r2, #56798	; 0xddde
   3cec8:	movt	r2, #56797	; 0xdddd
   3cecc:	subs	r0, r2, r0
   3ced0:	movw	r2, #56797	; 0xdddd
   3ced4:	movt	r2, #64989	; 0xfddd
   3ced8:	sbcs	r1, r2, r1
   3cedc:	blt	3cf6c <__assert_fail@plt+0x2a3b4>
   3cee0:	b	3cf98 <__assert_fail@plt+0x2a3e0>
   3cee4:	b	3ceec <__assert_fail@plt+0x2a334>
   3cee8:	b	3cf98 <__assert_fail@plt+0x2a3e0>
   3ceec:	ldr	r0, [sp, #52]	; 0x34
   3cef0:	cmn	r0, #1
   3cef4:	bgt	3cf44 <__assert_fail@plt+0x2a38c>
   3cef8:	b	3cefc <__assert_fail@plt+0x2a344>
   3cefc:	ldr	r0, [sp, #48]	; 0x30
   3cf00:	ldr	r1, [sp, #52]	; 0x34
   3cf04:	and	r0, r0, r1
   3cf08:	cmn	r0, #1
   3cf0c:	bne	3cf20 <__assert_fail@plt+0x2a368>
   3cf10:	b	3cf14 <__assert_fail@plt+0x2a35c>
   3cf14:	b	3cf18 <__assert_fail@plt+0x2a360>
   3cf18:	b	3cf98 <__assert_fail@plt+0x2a3e0>
   3cf1c:	b	3cf98 <__assert_fail@plt+0x2a3e0>
   3cf20:	ldr	r2, [sp, #48]	; 0x30
   3cf24:	ldr	r3, [sp, #52]	; 0x34
   3cf28:	mov	r0, #0
   3cf2c:	mov	r1, #-2147483648	; 0x80000000
   3cf30:	bl	75338 <__assert_fail@plt+0x62780>
   3cf34:	subs	r0, r0, #60	; 0x3c
   3cf38:	sbcs	r1, r1, #0
   3cf3c:	blt	3cf6c <__assert_fail@plt+0x2a3b4>
   3cf40:	b	3cf98 <__assert_fail@plt+0x2a3e0>
   3cf44:	ldr	r0, [sp, #48]	; 0x30
   3cf48:	ldr	r1, [sp, #52]	; 0x34
   3cf4c:	movw	r2, #8739	; 0x2223
   3cf50:	movt	r2, #8738	; 0x2222
   3cf54:	subs	r0, r0, r2
   3cf58:	movw	r2, #8738	; 0x2222
   3cf5c:	movt	r2, #546	; 0x222
   3cf60:	sbcs	r1, r1, r2
   3cf64:	blt	3cf98 <__assert_fail@plt+0x2a3e0>
   3cf68:	b	3cf6c <__assert_fail@plt+0x2a3b4>
   3cf6c:	ldr	r0, [sp, #48]	; 0x30
   3cf70:	ldr	r1, [sp, #52]	; 0x34
   3cf74:	mov	r2, #60	; 0x3c
   3cf78:	umull	r0, r2, r0, r2
   3cf7c:	rsb	r1, r1, r1, lsl #4
   3cf80:	add	r1, r2, r1, lsl #2
   3cf84:	str	r0, [sp, #16]
   3cf88:	str	r1, [sp, #20]
   3cf8c:	movw	r0, #1
   3cf90:	str	r0, [sp, #8]
   3cf94:	b	3cfc0 <__assert_fail@plt+0x2a408>
   3cf98:	ldr	r0, [sp, #48]	; 0x30
   3cf9c:	ldr	r1, [sp, #52]	; 0x34
   3cfa0:	mov	r2, #60	; 0x3c
   3cfa4:	umull	r0, r2, r0, r2
   3cfa8:	rsb	r1, r1, r1, lsl #4
   3cfac:	add	r1, r2, r1, lsl #2
   3cfb0:	str	r0, [sp, #16]
   3cfb4:	str	r1, [sp, #20]
   3cfb8:	movw	r0, #0
   3cfbc:	str	r0, [sp, #8]
   3cfc0:	ldr	r0, [sp, #8]
   3cfc4:	ldrb	r1, [sp, #15]
   3cfc8:	and	r1, r1, #1
   3cfcc:	orr	r0, r1, r0
   3cfd0:	cmp	r0, #0
   3cfd4:	movw	r0, #0
   3cfd8:	movne	r0, #1
   3cfdc:	and	r0, r0, #1
   3cfe0:	strb	r0, [sp, #15]
   3cfe4:	ldrb	r0, [sp, #40]	; 0x28
   3cfe8:	tst	r0, #1
   3cfec:	beq	3d054 <__assert_fail@plt+0x2a49c>
   3cff0:	ldr	r0, [sp, #16]
   3cff4:	ldr	r1, [sp, #20]
   3cff8:	ldr	r2, [sp, #24]
   3cffc:	ldr	r3, [sp, #28]
   3d000:	mov	ip, #0
   3d004:	cmn	r3, #1
   3d008:	mov	lr, ip
   3d00c:	movwgt	lr, #1
   3d010:	cmn	r1, #1
   3d014:	mov	r4, ip
   3d018:	movwgt	r4, #1
   3d01c:	subs	lr, r4, lr
   3d020:	movwne	lr, #1
   3d024:	subs	r0, r0, r2
   3d028:	sbc	r1, r1, r3
   3d02c:	cmn	r1, #1
   3d030:	movwgt	ip, #1
   3d034:	subs	r2, r4, ip
   3d038:	movwne	r2, #1
   3d03c:	and	r2, lr, r2
   3d040:	str	r0, [sp, #16]
   3d044:	str	r1, [sp, #20]
   3d048:	and	r0, r2, #1
   3d04c:	str	r0, [sp, #4]
   3d050:	b	3d0b8 <__assert_fail@plt+0x2a500>
   3d054:	ldr	r0, [sp, #16]
   3d058:	ldr	r1, [sp, #20]
   3d05c:	ldr	r2, [sp, #24]
   3d060:	ldr	r3, [sp, #28]
   3d064:	mov	ip, #0
   3d068:	cmn	r1, #1
   3d06c:	mov	lr, ip
   3d070:	movwgt	lr, #1
   3d074:	adds	r0, r0, r2
   3d078:	adc	r1, r1, r3
   3d07c:	cmn	r1, #1
   3d080:	mov	r2, ip
   3d084:	movwgt	r2, #1
   3d088:	subs	r2, lr, r2
   3d08c:	movwne	r2, #1
   3d090:	cmn	r3, #1
   3d094:	movwgt	ip, #1
   3d098:	sub	r3, lr, ip
   3d09c:	clz	r3, r3
   3d0a0:	lsr	r3, r3, #5
   3d0a4:	and	r2, r3, r2
   3d0a8:	str	r0, [sp, #16]
   3d0ac:	str	r1, [sp, #20]
   3d0b0:	and	r0, r2, #1
   3d0b4:	str	r0, [sp, #4]
   3d0b8:	ldr	r0, [sp, #4]
   3d0bc:	ldrb	r1, [sp, #15]
   3d0c0:	and	r1, r1, #1
   3d0c4:	orr	r0, r1, r0
   3d0c8:	cmp	r0, #0
   3d0cc:	movw	r0, #0
   3d0d0:	movne	r0, #1
   3d0d4:	and	r0, r0, #1
   3d0d8:	strb	r0, [sp, #15]
   3d0dc:	ldrb	r0, [sp, #15]
   3d0e0:	tst	r0, #1
   3d0e4:	bne	3d128 <__assert_fail@plt+0x2a570>
   3d0e8:	ldr	r0, [sp, #16]
   3d0ec:	ldr	r1, [sp, #20]
   3d0f0:	movw	r2, #64096	; 0xfa60
   3d0f4:	movt	r2, #65535	; 0xffff
   3d0f8:	subs	r0, r0, r2
   3d0fc:	mvn	r2, #0
   3d100:	sbcs	r1, r1, r2
   3d104:	blt	3d128 <__assert_fail@plt+0x2a570>
   3d108:	b	3d10c <__assert_fail@plt+0x2a554>
   3d10c:	ldr	r0, [sp, #16]
   3d110:	ldr	r1, [sp, #20]
   3d114:	movw	r2, #1441	; 0x5a1
   3d118:	subs	r0, r0, r2
   3d11c:	sbcs	r1, r1, #0
   3d120:	blt	3d138 <__assert_fail@plt+0x2a580>
   3d124:	b	3d128 <__assert_fail@plt+0x2a570>
   3d128:	movw	r0, #0
   3d12c:	and	r0, r0, #1
   3d130:	strb	r0, [fp, #-17]	; 0xffffffef
   3d134:	b	3d158 <__assert_fail@plt+0x2a5a0>
   3d138:	ldr	r0, [sp, #16]
   3d13c:	rsb	r0, r0, r0, lsl #4
   3d140:	lsl	r0, r0, #2
   3d144:	ldr	r1, [sp, #36]	; 0x24
   3d148:	str	r0, [r1, #24]
   3d14c:	movw	r0, #1
   3d150:	and	r0, r0, #1
   3d154:	strb	r0, [fp, #-17]	; 0xffffffef
   3d158:	ldrb	r0, [fp, #-17]	; 0xffffffef
   3d15c:	and	r0, r0, #1
   3d160:	sub	sp, fp, #16
   3d164:	pop	{r4, r5, r6, sl, fp, pc}
   3d168:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3d16c:	add	fp, sp, #28
   3d170:	sub	sp, sp, #76	; 0x4c
   3d174:	ldr	r1, [fp, #52]	; 0x34
   3d178:	ldr	ip, [fp, #48]	; 0x30
   3d17c:	ldr	lr, [fp, #44]	; 0x2c
   3d180:	ldr	r4, [fp, #40]	; 0x28
   3d184:	ldr	r5, [fp, #36]	; 0x24
   3d188:	ldr	r6, [fp, #32]
   3d18c:	ldr	r7, [fp, #28]
   3d190:	ldr	r8, [fp, #24]
   3d194:	ldr	r9, [fp, #20]
   3d198:	ldr	sl, [fp, #16]
   3d19c:	str	r0, [sp, #8]
   3d1a0:	ldr	r0, [fp, #12]
   3d1a4:	str	r0, [sp, #4]
   3d1a8:	ldr	r0, [fp, #8]
   3d1ac:	str	r0, [sp]
   3d1b0:	ldr	r0, [fp, #56]	; 0x38
   3d1b4:	str	r2, [sp, #16]
   3d1b8:	str	r3, [sp, #20]
   3d1bc:	ldr	r2, [sp]
   3d1c0:	str	r2, [sp, #24]
   3d1c4:	ldr	r3, [sp, #4]
   3d1c8:	str	r3, [sp, #28]
   3d1cc:	str	sl, [sp, #32]
   3d1d0:	str	r9, [sp, #36]	; 0x24
   3d1d4:	str	r8, [sp, #40]	; 0x28
   3d1d8:	str	r7, [sp, #44]	; 0x2c
   3d1dc:	str	r6, [sp, #48]	; 0x30
   3d1e0:	str	r5, [sp, #52]	; 0x34
   3d1e4:	str	r4, [sp, #56]	; 0x38
   3d1e8:	str	lr, [sp, #60]	; 0x3c
   3d1ec:	str	ip, [sp, #64]	; 0x40
   3d1f0:	str	r1, [sp, #68]	; 0x44
   3d1f4:	ldr	r1, [sp, #8]
   3d1f8:	str	r1, [sp, #12]
   3d1fc:	ldr	ip, [fp, #56]	; 0x38
   3d200:	cmp	ip, #0
   3d204:	bge	3d47c <__assert_fail@plt+0x2a8c4>
   3d208:	ldr	r0, [sp, #12]
   3d20c:	ldr	r1, [r0, #144]	; 0x90
   3d210:	ldr	r2, [sp, #64]	; 0x40
   3d214:	mov	r3, #1
   3d218:	cmp	r1, r2
   3d21c:	movwvc	r3, #0
   3d220:	sub	r1, r1, r2
   3d224:	str	r1, [r0, #144]	; 0x90
   3d228:	ldr	r0, [sp, #12]
   3d22c:	ldr	r1, [r0, #136]	; 0x88
   3d230:	ldr	r2, [r0, #140]	; 0x8c
   3d234:	ldr	ip, [sp, #56]	; 0x38
   3d238:	ldr	lr, [sp, #60]	; 0x3c
   3d23c:	mov	r4, #0
   3d240:	cmn	lr, #1
   3d244:	mov	r5, r4
   3d248:	movwgt	r5, #1
   3d24c:	cmn	r2, #1
   3d250:	mov	r6, r4
   3d254:	movwgt	r6, #1
   3d258:	subs	r5, r6, r5
   3d25c:	movwne	r5, #1
   3d260:	subs	r1, r1, ip
   3d264:	sbc	r2, r2, lr
   3d268:	cmn	r2, #1
   3d26c:	mov	ip, r4
   3d270:	movwgt	ip, #1
   3d274:	subs	ip, r6, ip
   3d278:	movwne	ip, #1
   3d27c:	and	ip, r5, ip
   3d280:	str	r1, [r0, #136]	; 0x88
   3d284:	str	r2, [r0, #140]	; 0x8c
   3d288:	orr	r0, r3, ip
   3d28c:	ldr	r1, [sp, #12]
   3d290:	ldr	r2, [r1, #128]	; 0x80
   3d294:	ldr	r3, [r1, #132]	; 0x84
   3d298:	ldr	ip, [sp, #48]	; 0x30
   3d29c:	ldr	lr, [sp, #52]	; 0x34
   3d2a0:	cmn	lr, #1
   3d2a4:	mov	r5, r4
   3d2a8:	movwgt	r5, #1
   3d2ac:	cmn	r3, #1
   3d2b0:	mov	r6, r4
   3d2b4:	movwgt	r6, #1
   3d2b8:	subs	r5, r6, r5
   3d2bc:	movwne	r5, #1
   3d2c0:	subs	r2, r2, ip
   3d2c4:	sbc	r3, r3, lr
   3d2c8:	cmn	r3, #1
   3d2cc:	mov	ip, r4
   3d2d0:	movwgt	ip, #1
   3d2d4:	subs	ip, r6, ip
   3d2d8:	movwne	ip, #1
   3d2dc:	and	ip, r5, ip
   3d2e0:	str	r2, [r1, #128]	; 0x80
   3d2e4:	str	r3, [r1, #132]	; 0x84
   3d2e8:	orr	r0, r0, ip
   3d2ec:	ldr	r1, [sp, #12]
   3d2f0:	ldr	r2, [r1, #120]	; 0x78
   3d2f4:	ldr	r3, [r1, #124]	; 0x7c
   3d2f8:	ldr	ip, [sp, #40]	; 0x28
   3d2fc:	ldr	lr, [sp, #44]	; 0x2c
   3d300:	cmn	lr, #1
   3d304:	mov	r5, r4
   3d308:	movwgt	r5, #1
   3d30c:	cmn	r3, #1
   3d310:	mov	r6, r4
   3d314:	movwgt	r6, #1
   3d318:	subs	r5, r6, r5
   3d31c:	movwne	r5, #1
   3d320:	subs	r2, r2, ip
   3d324:	sbc	r3, r3, lr
   3d328:	cmn	r3, #1
   3d32c:	mov	ip, r4
   3d330:	movwgt	ip, #1
   3d334:	subs	ip, r6, ip
   3d338:	movwne	ip, #1
   3d33c:	and	ip, r5, ip
   3d340:	str	r2, [r1, #120]	; 0x78
   3d344:	str	r3, [r1, #124]	; 0x7c
   3d348:	orr	r0, r0, ip
   3d34c:	ldr	r1, [sp, #12]
   3d350:	ldr	r2, [r1, #112]	; 0x70
   3d354:	ldr	r3, [r1, #116]	; 0x74
   3d358:	ldr	ip, [sp, #32]
   3d35c:	ldr	lr, [sp, #36]	; 0x24
   3d360:	cmn	lr, #1
   3d364:	mov	r5, r4
   3d368:	movwgt	r5, #1
   3d36c:	cmn	r3, #1
   3d370:	mov	r6, r4
   3d374:	movwgt	r6, #1
   3d378:	subs	r5, r6, r5
   3d37c:	movwne	r5, #1
   3d380:	subs	r2, r2, ip
   3d384:	sbc	r3, r3, lr
   3d388:	cmn	r3, #1
   3d38c:	mov	ip, r4
   3d390:	movwgt	ip, #1
   3d394:	subs	ip, r6, ip
   3d398:	movwne	ip, #1
   3d39c:	and	ip, r5, ip
   3d3a0:	str	r2, [r1, #112]	; 0x70
   3d3a4:	str	r3, [r1, #116]	; 0x74
   3d3a8:	orr	r0, r0, ip
   3d3ac:	ldr	r1, [sp, #12]
   3d3b0:	ldr	r2, [r1, #104]	; 0x68
   3d3b4:	ldr	r3, [r1, #108]	; 0x6c
   3d3b8:	ldr	ip, [sp, #24]
   3d3bc:	ldr	lr, [sp, #28]
   3d3c0:	cmn	lr, #1
   3d3c4:	mov	r5, r4
   3d3c8:	movwgt	r5, #1
   3d3cc:	cmn	r3, #1
   3d3d0:	mov	r6, r4
   3d3d4:	movwgt	r6, #1
   3d3d8:	subs	r5, r6, r5
   3d3dc:	movwne	r5, #1
   3d3e0:	subs	r2, r2, ip
   3d3e4:	sbc	r3, r3, lr
   3d3e8:	cmn	r3, #1
   3d3ec:	mov	ip, r4
   3d3f0:	movwgt	ip, #1
   3d3f4:	subs	ip, r6, ip
   3d3f8:	movwne	ip, #1
   3d3fc:	and	ip, r5, ip
   3d400:	str	r2, [r1, #104]	; 0x68
   3d404:	str	r3, [r1, #108]	; 0x6c
   3d408:	orr	r0, r0, ip
   3d40c:	and	r0, r0, #1
   3d410:	ldr	r1, [sp, #12]
   3d414:	ldr	r2, [r1, #96]	; 0x60
   3d418:	ldr	r3, [r1, #100]	; 0x64
   3d41c:	ldr	ip, [sp, #16]
   3d420:	ldr	lr, [sp, #20]
   3d424:	cmn	lr, #1
   3d428:	mov	r5, r4
   3d42c:	movwgt	r5, #1
   3d430:	cmn	r3, #1
   3d434:	mov	r6, r4
   3d438:	movwgt	r6, #1
   3d43c:	subs	r5, r6, r5
   3d440:	movwne	r5, #1
   3d444:	subs	r2, r2, ip
   3d448:	sbc	r3, r3, lr
   3d44c:	cmn	r3, #1
   3d450:	movwgt	r4, #1
   3d454:	subs	ip, r6, r4
   3d458:	movwne	ip, #1
   3d45c:	and	ip, r5, ip
   3d460:	str	r2, [r1, #96]	; 0x60
   3d464:	str	r3, [r1, #100]	; 0x64
   3d468:	and	r1, ip, #1
   3d46c:	orr	r0, r0, r1
   3d470:	cmp	r0, #0
   3d474:	bne	3d704 <__assert_fail@plt+0x2ab4c>
   3d478:	b	3d714 <__assert_fail@plt+0x2ab5c>
   3d47c:	ldr	r0, [sp, #12]
   3d480:	ldr	r1, [r0, #144]	; 0x90
   3d484:	ldr	r2, [sp, #64]	; 0x40
   3d488:	add	r2, r1, r2
   3d48c:	mov	r3, #1
   3d490:	cmp	r2, r1
   3d494:	movwvc	r3, #0
   3d498:	str	r2, [r0, #144]	; 0x90
   3d49c:	ldr	r0, [sp, #12]
   3d4a0:	ldr	r1, [r0, #136]	; 0x88
   3d4a4:	ldr	r2, [r0, #140]	; 0x8c
   3d4a8:	ldr	ip, [sp, #56]	; 0x38
   3d4ac:	ldr	lr, [sp, #60]	; 0x3c
   3d4b0:	mov	r4, #0
   3d4b4:	cmn	r2, #1
   3d4b8:	mov	r5, r4
   3d4bc:	movwgt	r5, #1
   3d4c0:	adds	r1, r1, ip
   3d4c4:	adc	r2, r2, lr
   3d4c8:	cmn	r2, #1
   3d4cc:	mov	ip, r4
   3d4d0:	movwgt	ip, #1
   3d4d4:	subs	ip, r5, ip
   3d4d8:	movwne	ip, #1
   3d4dc:	cmn	lr, #1
   3d4e0:	mov	lr, r4
   3d4e4:	movwgt	lr, #1
   3d4e8:	sub	lr, r5, lr
   3d4ec:	clz	lr, lr
   3d4f0:	lsr	lr, lr, #5
   3d4f4:	and	ip, lr, ip
   3d4f8:	str	r1, [r0, #136]	; 0x88
   3d4fc:	str	r2, [r0, #140]	; 0x8c
   3d500:	orr	r0, r3, ip
   3d504:	ldr	r1, [sp, #12]
   3d508:	ldr	r2, [r1, #128]	; 0x80
   3d50c:	ldr	r3, [r1, #132]	; 0x84
   3d510:	ldr	ip, [sp, #48]	; 0x30
   3d514:	ldr	lr, [sp, #52]	; 0x34
   3d518:	cmn	r3, #1
   3d51c:	mov	r5, r4
   3d520:	movwgt	r5, #1
   3d524:	adds	r2, r2, ip
   3d528:	adc	r3, r3, lr
   3d52c:	cmn	r3, #1
   3d530:	mov	ip, r4
   3d534:	movwgt	ip, #1
   3d538:	subs	ip, r5, ip
   3d53c:	movwne	ip, #1
   3d540:	cmn	lr, #1
   3d544:	mov	lr, r4
   3d548:	movwgt	lr, #1
   3d54c:	sub	lr, r5, lr
   3d550:	clz	lr, lr
   3d554:	lsr	lr, lr, #5
   3d558:	and	ip, lr, ip
   3d55c:	str	r2, [r1, #128]	; 0x80
   3d560:	str	r3, [r1, #132]	; 0x84
   3d564:	orr	r0, r0, ip
   3d568:	ldr	r1, [sp, #12]
   3d56c:	ldr	r2, [r1, #120]	; 0x78
   3d570:	ldr	r3, [r1, #124]	; 0x7c
   3d574:	ldr	ip, [sp, #40]	; 0x28
   3d578:	ldr	lr, [sp, #44]	; 0x2c
   3d57c:	cmn	r3, #1
   3d580:	mov	r5, r4
   3d584:	movwgt	r5, #1
   3d588:	adds	r2, r2, ip
   3d58c:	adc	r3, r3, lr
   3d590:	cmn	r3, #1
   3d594:	mov	ip, r4
   3d598:	movwgt	ip, #1
   3d59c:	subs	ip, r5, ip
   3d5a0:	movwne	ip, #1
   3d5a4:	cmn	lr, #1
   3d5a8:	mov	lr, r4
   3d5ac:	movwgt	lr, #1
   3d5b0:	sub	lr, r5, lr
   3d5b4:	clz	lr, lr
   3d5b8:	lsr	lr, lr, #5
   3d5bc:	and	ip, lr, ip
   3d5c0:	str	r2, [r1, #120]	; 0x78
   3d5c4:	str	r3, [r1, #124]	; 0x7c
   3d5c8:	orr	r0, r0, ip
   3d5cc:	ldr	r1, [sp, #12]
   3d5d0:	ldr	r2, [r1, #112]	; 0x70
   3d5d4:	ldr	r3, [r1, #116]	; 0x74
   3d5d8:	ldr	ip, [sp, #32]
   3d5dc:	ldr	lr, [sp, #36]	; 0x24
   3d5e0:	cmn	r3, #1
   3d5e4:	mov	r5, r4
   3d5e8:	movwgt	r5, #1
   3d5ec:	adds	r2, r2, ip
   3d5f0:	adc	r3, r3, lr
   3d5f4:	cmn	r3, #1
   3d5f8:	mov	ip, r4
   3d5fc:	movwgt	ip, #1
   3d600:	subs	ip, r5, ip
   3d604:	movwne	ip, #1
   3d608:	cmn	lr, #1
   3d60c:	mov	lr, r4
   3d610:	movwgt	lr, #1
   3d614:	sub	lr, r5, lr
   3d618:	clz	lr, lr
   3d61c:	lsr	lr, lr, #5
   3d620:	and	ip, lr, ip
   3d624:	str	r2, [r1, #112]	; 0x70
   3d628:	str	r3, [r1, #116]	; 0x74
   3d62c:	orr	r0, r0, ip
   3d630:	ldr	r1, [sp, #12]
   3d634:	ldr	r2, [r1, #104]	; 0x68
   3d638:	ldr	r3, [r1, #108]	; 0x6c
   3d63c:	ldr	ip, [sp, #24]
   3d640:	ldr	lr, [sp, #28]
   3d644:	cmn	r3, #1
   3d648:	mov	r5, r4
   3d64c:	movwgt	r5, #1
   3d650:	adds	r2, r2, ip
   3d654:	adc	r3, r3, lr
   3d658:	cmn	r3, #1
   3d65c:	mov	ip, r4
   3d660:	movwgt	ip, #1
   3d664:	subs	ip, r5, ip
   3d668:	movwne	ip, #1
   3d66c:	cmn	lr, #1
   3d670:	mov	lr, r4
   3d674:	movwgt	lr, #1
   3d678:	sub	lr, r5, lr
   3d67c:	clz	lr, lr
   3d680:	lsr	lr, lr, #5
   3d684:	and	ip, lr, ip
   3d688:	str	r2, [r1, #104]	; 0x68
   3d68c:	str	r3, [r1, #108]	; 0x6c
   3d690:	orr	r0, r0, ip
   3d694:	and	r0, r0, #1
   3d698:	ldr	r1, [sp, #12]
   3d69c:	ldr	r2, [r1, #96]	; 0x60
   3d6a0:	ldr	r3, [r1, #100]	; 0x64
   3d6a4:	ldr	ip, [sp, #16]
   3d6a8:	ldr	lr, [sp, #20]
   3d6ac:	cmn	r3, #1
   3d6b0:	mov	r5, r4
   3d6b4:	movwgt	r5, #1
   3d6b8:	adds	r2, r2, ip
   3d6bc:	adc	r3, r3, lr
   3d6c0:	cmn	r3, #1
   3d6c4:	mov	ip, r4
   3d6c8:	movwgt	ip, #1
   3d6cc:	subs	ip, r5, ip
   3d6d0:	movwne	ip, #1
   3d6d4:	cmn	lr, #1
   3d6d8:	movwgt	r4, #1
   3d6dc:	sub	lr, r5, r4
   3d6e0:	clz	lr, lr
   3d6e4:	lsr	lr, lr, #5
   3d6e8:	and	ip, lr, ip
   3d6ec:	str	r2, [r1, #96]	; 0x60
   3d6f0:	str	r3, [r1, #100]	; 0x64
   3d6f4:	and	r1, ip, #1
   3d6f8:	orr	r0, r0, r1
   3d6fc:	cmp	r0, #0
   3d700:	beq	3d714 <__assert_fail@plt+0x2ab5c>
   3d704:	movw	r0, #0
   3d708:	and	r0, r0, #1
   3d70c:	strb	r0, [fp, #-29]	; 0xffffffe3
   3d710:	b	3d72c <__assert_fail@plt+0x2ab74>
   3d714:	ldr	r0, [sp, #12]
   3d718:	movw	r1, #1
   3d71c:	strb	r1, [r0, #153]	; 0x99
   3d720:	movw	r0, #1
   3d724:	and	r0, r0, #1
   3d728:	strb	r0, [fp, #-29]	; 0xffffffe3
   3d72c:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   3d730:	and	r0, r0, #1
   3d734:	sub	sp, fp, #28
   3d738:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3d73c:	sub	sp, sp, #4
   3d740:	str	r0, [sp]
   3d744:	movw	r0, #0
   3d748:	and	r0, r0, #1
   3d74c:	add	sp, sp, #4
   3d750:	bx	lr
   3d754:	sub	sp, sp, #12
   3d758:	push	{fp, lr}
   3d75c:	mov	fp, sp
   3d760:	sub	sp, sp, #20
   3d764:	str	r3, [fp, #16]
   3d768:	str	r2, [fp, #12]
   3d76c:	str	r1, [fp, #8]
   3d770:	str	r0, [fp, #-4]
   3d774:	movw	r0, #55080	; 0xd728
   3d778:	movt	r0, #8
   3d77c:	ldr	r1, [r0]
   3d780:	movw	r2, #44778	; 0xaeea
   3d784:	movt	r2, #7
   3d788:	str	r0, [sp, #8]
   3d78c:	mov	r0, r2
   3d790:	bl	12b4c <fputs@plt>
   3d794:	add	r1, fp, #8
   3d798:	str	r1, [fp, #-8]
   3d79c:	ldr	r1, [sp, #8]
   3d7a0:	ldr	r2, [r1]
   3d7a4:	ldr	r1, [fp, #-4]
   3d7a8:	ldr	r3, [fp, #-8]
   3d7ac:	str	r0, [sp, #4]
   3d7b0:	mov	r0, r2
   3d7b4:	mov	r2, r3
   3d7b8:	bl	12a20 <vfprintf@plt>
   3d7bc:	sub	r1, fp, #8
   3d7c0:	mov	sp, fp
   3d7c4:	pop	{fp, lr}
   3d7c8:	add	sp, sp, #12
   3d7cc:	bx	lr
   3d7d0:	sub	sp, sp, #16
   3d7d4:	str	r0, [sp, #8]
   3d7d8:	str	r1, [sp, #12]
   3d7dc:	ldr	r0, [sp, #8]
   3d7e0:	ldr	r1, [sp, #12]
   3d7e4:	mov	r2, #0
   3d7e8:	mvn	r3, #-2147483648	; 0x80000000
   3d7ec:	subs	r0, r3, r0
   3d7f0:	mvn	r3, #0
   3d7f4:	sbcs	r1, r3, r1
   3d7f8:	str	r2, [sp, #4]
   3d7fc:	blt	3d81c <__assert_fail@plt+0x2ac64>
   3d800:	b	3d838 <__assert_fail@plt+0x2ac80>
   3d804:	ldr	r0, [sp, #12]
   3d808:	mov	r1, #0
   3d80c:	cmp	r0, #0
   3d810:	str	r1, [sp, #4]
   3d814:	bmi	3d838 <__assert_fail@plt+0x2ac80>
   3d818:	b	3d81c <__assert_fail@plt+0x2ac64>
   3d81c:	ldr	r0, [sp, #8]
   3d820:	ldr	r1, [sp, #12]
   3d824:	subs	r0, r0, #-2147483648	; 0x80000000
   3d828:	sbcs	r1, r1, #0
   3d82c:	mov	r2, #0
   3d830:	movwlt	r2, #1
   3d834:	str	r2, [sp, #4]
   3d838:	ldr	r0, [sp, #4]
   3d83c:	mvn	r1, #0
   3d840:	eor	r0, r0, r1
   3d844:	and	r0, r0, #1
   3d848:	add	sp, sp, #16
   3d84c:	bx	lr
   3d850:	push	{r4, sl, fp, lr}
   3d854:	add	fp, sp, #8
   3d858:	sub	sp, sp, #64	; 0x40
   3d85c:	ldr	r1, [fp, #20]
   3d860:	ldr	ip, [fp, #16]
   3d864:	ldr	lr, [fp, #12]
   3d868:	ldr	r4, [fp, #8]
   3d86c:	str	r2, [fp, #-32]	; 0xffffffe0
   3d870:	str	r3, [fp, #-28]	; 0xffffffe4
   3d874:	str	r4, [fp, #-24]	; 0xffffffe8
   3d878:	str	lr, [fp, #-20]	; 0xffffffec
   3d87c:	str	ip, [fp, #-16]
   3d880:	str	r1, [fp, #-12]
   3d884:	str	r0, [sp, #36]	; 0x24
   3d888:	ldr	r0, [sp, #36]	; 0x24
   3d88c:	ldr	r0, [r0, #156]	; 0x9c
   3d890:	cmp	r0, #0
   3d894:	beq	3d8fc <__assert_fail@plt+0x2ad44>
   3d898:	ldr	r0, [sp, #36]	; 0x24
   3d89c:	ldr	r0, [r0, #48]	; 0x30
   3d8a0:	cmp	r0, #0
   3d8a4:	bne	3d8fc <__assert_fail@plt+0x2ad44>
   3d8a8:	ldr	r0, [sp, #36]	; 0x24
   3d8ac:	ldrb	r0, [r0, #153]	; 0x99
   3d8b0:	tst	r0, #1
   3d8b4:	bne	3d8fc <__assert_fail@plt+0x2ad44>
   3d8b8:	ldr	r0, [sp, #36]	; 0x24
   3d8bc:	ldr	r0, [r0, #172]	; 0xac
   3d8c0:	cmp	r0, #0
   3d8c4:	bne	3d8d8 <__assert_fail@plt+0x2ad20>
   3d8c8:	ldr	r0, [fp, #-16]
   3d8cc:	movw	r1, #2
   3d8d0:	cmp	r1, r0
   3d8d4:	bge	3d8fc <__assert_fail@plt+0x2ad44>
   3d8d8:	ldr	r0, [sp, #36]	; 0x24
   3d8dc:	movw	r1, #1
   3d8e0:	strb	r1, [r0, #180]	; 0xb4
   3d8e4:	ldr	r0, [sp, #36]	; 0x24
   3d8e8:	add	r0, r0, #32
   3d8ec:	sub	r1, fp, #32
   3d8f0:	movw	r2, #24
   3d8f4:	bl	125c4 <memcpy@plt>
   3d8f8:	b	3da78 <__assert_fail@plt+0x2aec0>
   3d8fc:	ldr	r0, [fp, #-16]
   3d900:	movw	r1, #4
   3d904:	cmp	r1, r0
   3d908:	bge	3d9c8 <__assert_fail@plt+0x2ae10>
   3d90c:	ldr	r0, [sp, #36]	; 0x24
   3d910:	ldr	r1, [r0, #156]	; 0x9c
   3d914:	add	r1, r1, #1
   3d918:	str	r1, [r0, #156]	; 0x9c
   3d91c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d920:	ldr	r1, [fp, #-20]	; 0xffffffec
   3d924:	mov	r2, #100	; 0x64
   3d928:	mov	r3, #0
   3d92c:	str	r2, [sp, #32]
   3d930:	str	r3, [sp, #28]
   3d934:	bl	75338 <__assert_fail@plt+0x62780>
   3d938:	ldr	ip, [sp, #36]	; 0x24
   3d93c:	str	r3, [ip, #68]	; 0x44
   3d940:	str	r2, [ip, #64]	; 0x40
   3d944:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3d948:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d94c:	str	r0, [sp, #24]
   3d950:	mov	r0, r2
   3d954:	str	r1, [sp, #20]
   3d958:	mov	r1, r3
   3d95c:	ldr	r2, [sp, #32]
   3d960:	ldr	r3, [sp, #28]
   3d964:	bl	75338 <__assert_fail@plt+0x62780>
   3d968:	ldr	r2, [sp, #32]
   3d96c:	ldr	r3, [sp, #28]
   3d970:	bl	75338 <__assert_fail@plt+0x62780>
   3d974:	ldr	ip, [sp, #36]	; 0x24
   3d978:	str	r3, [ip, #60]	; 0x3c
   3d97c:	str	r2, [ip, #56]	; 0x38
   3d980:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3d984:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d988:	movw	ip, #10000	; 0x2710
   3d98c:	str	r0, [sp, #16]
   3d990:	mov	r0, r2
   3d994:	str	r1, [sp, #12]
   3d998:	mov	r1, r3
   3d99c:	mov	r2, ip
   3d9a0:	ldr	r3, [sp, #28]
   3d9a4:	bl	75338 <__assert_fail@plt+0x62780>
   3d9a8:	ldr	r2, [sp, #36]	; 0x24
   3d9ac:	str	r1, [r2, #44]	; 0x2c
   3d9b0:	str	r0, [r2, #40]	; 0x28
   3d9b4:	ldr	r0, [fp, #-16]
   3d9b8:	sub	r0, r0, #4
   3d9bc:	ldr	r1, [sp, #36]	; 0x24
   3d9c0:	str	r0, [r1, #48]	; 0x30
   3d9c4:	b	3da74 <__assert_fail@plt+0x2aebc>
   3d9c8:	ldr	r0, [sp, #36]	; 0x24
   3d9cc:	ldr	r1, [r0, #172]	; 0xac
   3d9d0:	add	r1, r1, #1
   3d9d4:	str	r1, [r0, #172]	; 0xac
   3d9d8:	ldr	r0, [fp, #-16]
   3d9dc:	cmp	r0, #2
   3d9e0:	bgt	3da0c <__assert_fail@plt+0x2ae54>
   3d9e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d9e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   3d9ec:	ldr	r2, [sp, #36]	; 0x24
   3d9f0:	str	r1, [r2, #76]	; 0x4c
   3d9f4:	str	r0, [r2, #72]	; 0x48
   3d9f8:	ldr	r0, [sp, #36]	; 0x24
   3d9fc:	mov	r1, #0
   3da00:	str	r1, [r0, #84]	; 0x54
   3da04:	str	r1, [r0, #80]	; 0x50
   3da08:	b	3da54 <__assert_fail@plt+0x2ae9c>
   3da0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3da10:	ldr	r1, [fp, #-20]	; 0xffffffec
   3da14:	mov	r2, #100	; 0x64
   3da18:	mov	r3, #0
   3da1c:	str	r2, [sp, #8]
   3da20:	str	r3, [sp, #4]
   3da24:	bl	75338 <__assert_fail@plt+0x62780>
   3da28:	ldr	r2, [sp, #36]	; 0x24
   3da2c:	str	r1, [r2, #76]	; 0x4c
   3da30:	str	r0, [r2, #72]	; 0x48
   3da34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3da38:	ldr	r1, [fp, #-20]	; 0xffffffec
   3da3c:	ldr	r2, [sp, #8]
   3da40:	ldr	r3, [sp, #4]
   3da44:	bl	75338 <__assert_fail@plt+0x62780>
   3da48:	ldr	ip, [sp, #36]	; 0x24
   3da4c:	str	r3, [ip, #84]	; 0x54
   3da50:	str	r2, [ip, #80]	; 0x50
   3da54:	ldr	r0, [sp, #36]	; 0x24
   3da58:	movw	r1, #0
   3da5c:	str	r1, [r0, #88]	; 0x58
   3da60:	ldr	r0, [sp, #36]	; 0x24
   3da64:	str	r1, [r0, #92]	; 0x5c
   3da68:	ldr	r0, [sp, #36]	; 0x24
   3da6c:	movw	r1, #2
   3da70:	str	r1, [r0, #28]
   3da74:	b	3da78 <__assert_fail@plt+0x2aec0>
   3da78:	sub	sp, fp, #8
   3da7c:	pop	{r4, sl, fp, pc}
   3da80:	sub	sp, sp, #8
   3da84:	str	r0, [sp, #4]
   3da88:	str	r1, [sp]
   3da8c:	movw	r0, #0
   3da90:	add	sp, sp, #8
   3da94:	bx	lr
   3da98:	sub	sp, sp, #16
   3da9c:	str	r0, [sp, #12]
   3daa0:	str	r1, [sp, #8]
   3daa4:	str	r2, [sp, #4]
   3daa8:	str	r3, [sp]
   3daac:	ldr	r0, [sp, #12]
   3dab0:	movw	r1, #0
   3dab4:	cmp	r0, r1
   3dab8:	bne	3dac8 <__assert_fail@plt+0x2af10>
   3dabc:	movw	r0, #44785	; 0xaef1
   3dac0:	movt	r0, #7
   3dac4:	str	r0, [sp, #12]
   3dac8:	add	sp, sp, #16
   3dacc:	bx	lr
   3dad0:	push	{fp, lr}
   3dad4:	mov	fp, sp
   3dad8:	sub	sp, sp, #40	; 0x28
   3dadc:	str	r0, [fp, #-8]
   3dae0:	str	r1, [fp, #-12]
   3dae4:	str	r2, [fp, #-16]
   3dae8:	movw	r0, #44520	; 0xade8
   3daec:	movt	r0, #7
   3daf0:	bl	127bc <getenv@plt>
   3daf4:	str	r0, [sp, #20]
   3daf8:	ldr	r0, [sp, #20]
   3dafc:	bl	6da20 <__assert_fail@plt+0x5ae68>
   3db00:	str	r0, [sp, #16]
   3db04:	ldr	r0, [sp, #16]
   3db08:	movw	r1, #0
   3db0c:	cmp	r0, r1
   3db10:	bne	3db24 <__assert_fail@plt+0x2af6c>
   3db14:	movw	r0, #0
   3db18:	and	r0, r0, #1
   3db1c:	strb	r0, [fp, #-1]
   3db20:	b	3db70 <__assert_fail@plt+0x2afb8>
   3db24:	ldr	r0, [fp, #-8]
   3db28:	ldr	r1, [fp, #-12]
   3db2c:	ldr	r2, [fp, #-16]
   3db30:	ldr	r3, [sp, #16]
   3db34:	ldr	ip, [sp, #20]
   3db38:	movw	lr, #0
   3db3c:	str	r3, [sp, #8]
   3db40:	mov	r3, lr
   3db44:	ldr	lr, [sp, #8]
   3db48:	str	lr, [sp]
   3db4c:	str	ip, [sp, #4]
   3db50:	bl	3db80 <__assert_fail@plt+0x2afc8>
   3db54:	and	r0, r0, #1
   3db58:	strb	r0, [sp, #15]
   3db5c:	ldr	r0, [sp, #16]
   3db60:	bl	6db70 <__assert_fail@plt+0x5afb8>
   3db64:	ldrb	r0, [sp, #15]
   3db68:	and	r0, r0, #1
   3db6c:	strb	r0, [fp, #-1]
   3db70:	ldrb	r0, [fp, #-1]
   3db74:	and	r0, r0, #1
   3db78:	mov	sp, fp
   3db7c:	pop	{fp, pc}
   3db80:	push	{r4, r5, r6, sl, fp, lr}
   3db84:	add	fp, sp, #16
   3db88:	sub	sp, sp, #2928	; 0xb70
   3db8c:	ldr	ip, [fp, #12]
   3db90:	ldr	lr, [fp, #8]
   3db94:	str	r0, [fp, #-20]	; 0xffffffec
   3db98:	str	r1, [fp, #-24]	; 0xffffffe8
   3db9c:	str	r2, [fp, #-28]	; 0xffffffe4
   3dba0:	str	r3, [fp, #-32]	; 0xffffffe0
   3dba4:	movw	r0, #0
   3dba8:	strb	r0, [fp, #-248]	; 0xffffff08
   3dbac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3dbb0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3dbb4:	str	r0, [fp, #-1232]	; 0xfffffb30
   3dbb8:	mov	r0, r1
   3dbbc:	str	ip, [fp, #-1236]	; 0xfffffb2c
   3dbc0:	str	lr, [fp, #-1240]	; 0xfffffb28
   3dbc4:	bl	12888 <strlen@plt>
   3dbc8:	ldr	r1, [fp, #-1232]	; 0xfffffb30
   3dbcc:	add	r0, r1, r0
   3dbd0:	str	r0, [fp, #-252]	; 0xffffff04
   3dbd4:	movw	r0, #0
   3dbd8:	str	r0, [fp, #-256]	; 0xffffff00
   3dbdc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3dbe0:	cmp	r1, r0
   3dbe4:	bne	3dbf8 <__assert_fail@plt+0x2b040>
   3dbe8:	sub	r0, fp, #364	; 0x16c
   3dbec:	bl	70ad8 <__assert_fail@plt+0x5df20>
   3dbf0:	sub	r0, fp, #364	; 0x16c
   3dbf4:	str	r0, [fp, #-28]	; 0xffffffe4
   3dbf8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3dbfc:	ldr	r0, [r0]
   3dc00:	str	r0, [fp, #-368]	; 0xfffffe90
   3dc04:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3dc08:	ldr	r0, [r0, #4]
   3dc0c:	str	r0, [fp, #-372]	; 0xfffffe8c
   3dc10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3dc14:	ldrb	r0, [r0]
   3dc18:	strb	r0, [fp, #-373]	; 0xfffffe8b
   3dc1c:	ldrb	r0, [fp, #-373]	; 0xfffffe8b
   3dc20:	bl	6f188 <__assert_fail@plt+0x5c5d0>
   3dc24:	tst	r0, #1
   3dc28:	beq	3dc3c <__assert_fail@plt+0x2b084>
   3dc2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3dc30:	add	r0, r0, #1
   3dc34:	str	r0, [fp, #-24]	; 0xffffffe8
   3dc38:	b	3dc10 <__assert_fail@plt+0x2b058>
   3dc3c:	ldr	r0, [fp, #8]
   3dc40:	str	r0, [fp, #-380]	; 0xfffffe84
   3dc44:	sub	r0, fp, #440	; 0x1b8
   3dc48:	movw	r1, #0
   3dc4c:	and	r1, r1, #255	; 0xff
   3dc50:	movw	r2, #56	; 0x38
   3dc54:	bl	12900 <memset@plt>
   3dc58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3dc5c:	movw	r1, #45392	; 0xb150
   3dc60:	movt	r1, #7
   3dc64:	movw	r2, #4
   3dc68:	bl	12b58 <strncmp@plt>
   3dc6c:	cmp	r0, #0
   3dc70:	bne	3de3c <__assert_fail@plt+0x2b284>
   3dc74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3dc78:	add	r0, r0, #4
   3dc7c:	str	r0, [fp, #-444]	; 0xfffffe44
   3dc80:	movw	r0, #1
   3dc84:	str	r0, [fp, #-448]	; 0xfffffe40
   3dc88:	ldr	r0, [fp, #-444]	; 0xfffffe44
   3dc8c:	str	r0, [fp, #-452]	; 0xfffffe3c
   3dc90:	ldr	r0, [fp, #-452]	; 0xfffffe3c
   3dc94:	ldrsb	r0, [r0]
   3dc98:	cmp	r0, #0
   3dc9c:	beq	3de38 <__assert_fail@plt+0x2b280>
   3dca0:	ldr	r0, [fp, #-452]	; 0xfffffe3c
   3dca4:	ldrb	r0, [r0]
   3dca8:	cmp	r0, #92	; 0x5c
   3dcac:	bne	3dce4 <__assert_fail@plt+0x2b12c>
   3dcb0:	ldr	r0, [fp, #-452]	; 0xfffffe3c
   3dcb4:	add	r0, r0, #1
   3dcb8:	str	r0, [fp, #-452]	; 0xfffffe3c
   3dcbc:	ldr	r0, [fp, #-452]	; 0xfffffe3c
   3dcc0:	ldrb	r0, [r0]
   3dcc4:	cmp	r0, #92	; 0x5c
   3dcc8:	beq	3dce0 <__assert_fail@plt+0x2b128>
   3dccc:	ldr	r0, [fp, #-452]	; 0xfffffe3c
   3dcd0:	ldrb	r0, [r0]
   3dcd4:	cmp	r0, #34	; 0x22
   3dcd8:	beq	3dce0 <__assert_fail@plt+0x2b128>
   3dcdc:	b	3de38 <__assert_fail@plt+0x2b280>
   3dce0:	b	3de18 <__assert_fail@plt+0x2b260>
   3dce4:	ldr	r0, [fp, #-452]	; 0xfffffe3c
   3dce8:	ldrb	r0, [r0]
   3dcec:	cmp	r0, #34	; 0x22
   3dcf0:	bne	3de14 <__assert_fail@plt+0x2b25c>
   3dcf4:	sub	r0, fp, #356	; 0x164
   3dcf8:	str	r0, [fp, #-460]	; 0xfffffe34
   3dcfc:	ldr	r0, [fp, #-448]	; 0xfffffe40
   3dd00:	movw	r1, #100	; 0x64
   3dd04:	cmp	r1, r0
   3dd08:	bge	3dd34 <__assert_fail@plt+0x2b17c>
   3dd0c:	ldr	r0, [fp, #-448]	; 0xfffffe40
   3dd10:	bl	527f0 <__assert_fail@plt+0x3fc38>
   3dd14:	str	r0, [fp, #-256]	; 0xffffff00
   3dd18:	ldr	r0, [fp, #-256]	; 0xffffff00
   3dd1c:	movw	r1, #0
   3dd20:	cmp	r0, r1
   3dd24:	bne	3dd2c <__assert_fail@plt+0x2b174>
   3dd28:	b	45058 <__assert_fail@plt+0x324a0>
   3dd2c:	ldr	r0, [fp, #-256]	; 0xffffff00
   3dd30:	str	r0, [fp, #-460]	; 0xfffffe34
   3dd34:	ldr	r0, [fp, #-460]	; 0xfffffe34
   3dd38:	str	r0, [fp, #-464]	; 0xfffffe30
   3dd3c:	ldr	r0, [fp, #-444]	; 0xfffffe44
   3dd40:	str	r0, [fp, #-452]	; 0xfffffe3c
   3dd44:	ldr	r0, [fp, #-452]	; 0xfffffe3c
   3dd48:	ldrb	r0, [r0]
   3dd4c:	cmp	r0, #34	; 0x22
   3dd50:	beq	3dd9c <__assert_fail@plt+0x2b1e4>
   3dd54:	ldr	r0, [fp, #-452]	; 0xfffffe3c
   3dd58:	ldrb	r0, [r0]
   3dd5c:	cmp	r0, #92	; 0x5c
   3dd60:	movw	r0, #0
   3dd64:	moveq	r0, #1
   3dd68:	and	r0, r0, #1
   3dd6c:	ldr	r1, [fp, #-452]	; 0xfffffe3c
   3dd70:	add	r0, r1, r0
   3dd74:	str	r0, [fp, #-452]	; 0xfffffe3c
   3dd78:	ldrb	r0, [r0]
   3dd7c:	ldr	r1, [fp, #-464]	; 0xfffffe30
   3dd80:	add	r2, r1, #1
   3dd84:	str	r2, [fp, #-464]	; 0xfffffe30
   3dd88:	strb	r0, [r1]
   3dd8c:	ldr	r0, [fp, #-452]	; 0xfffffe3c
   3dd90:	add	r0, r0, #1
   3dd94:	str	r0, [fp, #-452]	; 0xfffffe3c
   3dd98:	b	3dd44 <__assert_fail@plt+0x2b18c>
   3dd9c:	ldr	r0, [fp, #-464]	; 0xfffffe30
   3dda0:	movw	r1, #0
   3dda4:	strb	r1, [r0]
   3dda8:	ldr	r0, [fp, #-460]	; 0xfffffe34
   3ddac:	bl	6da20 <__assert_fail@plt+0x5ae68>
   3ddb0:	str	r0, [fp, #-456]	; 0xfffffe38
   3ddb4:	ldr	r0, [fp, #-456]	; 0xfffffe38
   3ddb8:	movw	r1, #0
   3ddbc:	cmp	r0, r1
   3ddc0:	bne	3ddc8 <__assert_fail@plt+0x2b210>
   3ddc4:	b	45058 <__assert_fail@plt+0x324a0>
   3ddc8:	ldr	r0, [fp, #-456]	; 0xfffffe38
   3ddcc:	str	r0, [fp, #-380]	; 0xfffffe84
   3ddd0:	ldr	r0, [fp, #-460]	; 0xfffffe34
   3ddd4:	str	r0, [fp, #12]
   3ddd8:	ldr	r0, [fp, #-452]	; 0xfffffe3c
   3dddc:	add	r0, r0, #1
   3dde0:	str	r0, [fp, #-24]	; 0xffffffe8
   3dde4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3dde8:	ldrb	r0, [r0]
   3ddec:	strb	r0, [fp, #-373]	; 0xfffffe8b
   3ddf0:	ldrb	r0, [fp, #-373]	; 0xfffffe8b
   3ddf4:	bl	6f188 <__assert_fail@plt+0x5c5d0>
   3ddf8:	tst	r0, #1
   3ddfc:	beq	3de10 <__assert_fail@plt+0x2b258>
   3de00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3de04:	add	r0, r0, #1
   3de08:	str	r0, [fp, #-24]	; 0xffffffe8
   3de0c:	b	3dde4 <__assert_fail@plt+0x2b22c>
   3de10:	b	3de38 <__assert_fail@plt+0x2b280>
   3de14:	b	3de18 <__assert_fail@plt+0x2b260>
   3de18:	b	3de1c <__assert_fail@plt+0x2b264>
   3de1c:	ldr	r0, [fp, #-452]	; 0xfffffe3c
   3de20:	add	r0, r0, #1
   3de24:	str	r0, [fp, #-452]	; 0xfffffe3c
   3de28:	ldr	r0, [fp, #-448]	; 0xfffffe40
   3de2c:	add	r0, r0, #1
   3de30:	str	r0, [fp, #-448]	; 0xfffffe40
   3de34:	b	3dc90 <__assert_fail@plt+0x2b0d8>
   3de38:	b	3de3c <__assert_fail@plt+0x2b284>
   3de3c:	ldr	r0, [fp, #-380]	; 0xfffffe84
   3de40:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3de44:	sub	r2, fp, #508	; 0x1fc
   3de48:	bl	6dbd0 <__assert_fail@plt+0x5b018>
   3de4c:	movw	r1, #0
   3de50:	cmp	r0, r1
   3de54:	bne	3de5c <__assert_fail@plt+0x2b2a4>
   3de58:	b	45058 <__assert_fail@plt+0x324a0>
   3de5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3de60:	ldrb	r0, [r0]
   3de64:	cmp	r0, #0
   3de68:	bne	3de78 <__assert_fail@plt+0x2b2c0>
   3de6c:	movw	r0, #27249	; 0x6a71
   3de70:	movt	r0, #7
   3de74:	str	r0, [fp, #-24]	; 0xffffffe8
   3de78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3de7c:	str	r0, [fp, #-736]	; 0xfffffd20
   3de80:	ldr	r0, [fp, #-488]	; 0xfffffe18
   3de84:	asr	r1, r0, #31
   3de88:	mov	r2, #0
   3de8c:	cmn	r1, #1
   3de90:	mov	r3, r2
   3de94:	movwgt	r3, #1
   3de98:	movw	ip, #1900	; 0x76c
   3de9c:	adds	r0, r0, ip
   3dea0:	adc	r1, r1, #0
   3dea4:	cmn	r1, #1
   3dea8:	movwgt	r2, #1
   3deac:	subs	r2, r3, r2
   3deb0:	movwne	r2, #1
   3deb4:	and	r2, r3, r2
   3deb8:	str	r0, [fp, #-696]	; 0xfffffd48
   3debc:	str	r1, [fp, #-692]	; 0xfffffd4c
   3dec0:	tst	r2, #1
   3dec4:	beq	3deec <__assert_fail@plt+0x2b334>
   3dec8:	sub	r0, fp, #736	; 0x2e0
   3decc:	bl	3d73c <__assert_fail@plt+0x2ab84>
   3ded0:	tst	r0, #1
   3ded4:	beq	3dee8 <__assert_fail@plt+0x2b330>
   3ded8:	movw	r0, #45397	; 0xb155
   3dedc:	movt	r0, #7
   3dee0:	bl	12864 <gettext@plt>
   3dee4:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   3dee8:	b	45058 <__assert_fail@plt+0x324a0>
   3deec:	mov	r0, #0
   3def0:	str	r0, [fp, #-688]	; 0xfffffd50
   3def4:	ldr	r0, [fp, #-492]	; 0xfffffe14
   3def8:	add	r0, r0, #1
   3defc:	asr	r1, r0, #31
   3df00:	str	r0, [fp, #-680]	; 0xfffffd58
   3df04:	str	r1, [fp, #-676]	; 0xfffffd5c
   3df08:	ldr	r0, [fp, #-496]	; 0xfffffe10
   3df0c:	asr	r1, r0, #31
   3df10:	str	r0, [fp, #-672]	; 0xfffffd60
   3df14:	str	r1, [fp, #-668]	; 0xfffffd64
   3df18:	ldr	r0, [fp, #-500]	; 0xfffffe0c
   3df1c:	asr	r1, r0, #31
   3df20:	str	r0, [fp, #-664]	; 0xfffffd68
   3df24:	str	r1, [fp, #-660]	; 0xfffffd6c
   3df28:	ldr	r0, [fp, #-504]	; 0xfffffe08
   3df2c:	asr	r1, r0, #31
   3df30:	str	r0, [fp, #-656]	; 0xfffffd70
   3df34:	str	r1, [fp, #-652]	; 0xfffffd74
   3df38:	ldr	r0, [fp, #-508]	; 0xfffffe04
   3df3c:	str	r0, [fp, #-648]	; 0xfffffd78
   3df40:	ldr	r0, [fp, #-372]	; 0xfffffe8c
   3df44:	str	r0, [fp, #-644]	; 0xfffffd7c
   3df48:	ldr	r0, [fp, #-476]	; 0xfffffe24
   3df4c:	str	r0, [fp, #-44]	; 0xffffffd4
   3df50:	movw	r0, #2
   3df54:	str	r0, [fp, #-708]	; 0xfffffd3c
   3df58:	sub	r0, fp, #736	; 0x2e0
   3df5c:	add	r0, r0, #96	; 0x60
   3df60:	sub	r1, fp, #440	; 0x1b8
   3df64:	movw	r2, #56	; 0x38
   3df68:	bl	125c4 <memcpy@plt>
   3df6c:	movw	r0, #0
   3df70:	strb	r0, [fp, #-584]	; 0xfffffdb8
   3df74:	strb	r0, [fp, #-583]	; 0xfffffdb9
   3df78:	movw	r1, #0
   3df7c:	str	r1, [fp, #-580]	; 0xfffffdbc
   3df80:	str	r1, [fp, #-576]	; 0xfffffdc0
   3df84:	str	r1, [fp, #-564]	; 0xfffffdcc
   3df88:	str	r1, [fp, #-572]	; 0xfffffdc4
   3df8c:	str	r1, [fp, #-568]	; 0xfffffdc8
   3df90:	str	r1, [fp, #-560]	; 0xfffffdd0
   3df94:	strb	r0, [fp, #-556]	; 0xfffffdd4
   3df98:	strb	r0, [fp, #-555]	; 0xfffffdd5
   3df9c:	strb	r0, [fp, #-554]	; 0xfffffdd6
   3dfa0:	strb	r0, [fp, #-552]	; 0xfffffdd8
   3dfa4:	strb	r0, [fp, #-553]	; 0xfffffdd7
   3dfa8:	strb	r0, [fp, #-551]	; 0xfffffdd9
   3dfac:	strb	r0, [fp, #-550]	; 0xfffffdda
   3dfb0:	strb	r0, [fp, #-549]	; 0xfffffddb
   3dfb4:	ldr	r0, [fp, #-468]	; 0xfffffe2c
   3dfb8:	str	r0, [fp, #-548]	; 0xfffffddc
   3dfbc:	movw	r0, #269	; 0x10d
   3dfc0:	str	r0, [fp, #-544]	; 0xfffffde0
   3dfc4:	ldr	r0, [fp, #-476]	; 0xfffffe24
   3dfc8:	str	r0, [fp, #-540]	; 0xfffffde4
   3dfcc:	str	r1, [fp, #-536]	; 0xfffffde8
   3dfd0:	movw	r0, #1
   3dfd4:	str	r0, [fp, #-740]	; 0xfffffd1c
   3dfd8:	ldr	r0, [fp, #-740]	; 0xfffffd1c
   3dfdc:	cmp	r0, #3
   3dfe0:	bgt	3e088 <__assert_fail@plt+0x2b4d0>
   3dfe4:	ldr	r0, [pc, #4052]	; 3efc0 <__assert_fail@plt+0x2c408>
   3dfe8:	ldr	r1, [fp, #-368]	; 0xfffffe90
   3dfec:	ldr	r2, [fp, #-740]	; 0xfffffd1c
   3dff0:	mul	r0, r2, r0
   3dff4:	add	r0, r1, r0
   3dff8:	mov	r2, #1
   3dffc:	cmp	r0, r1
   3e000:	movwvc	r2, #0
   3e004:	str	r0, [fp, #-744]	; 0xfffffd18
   3e008:	tst	r2, #1
   3e00c:	beq	3e014 <__assert_fail@plt+0x2b45c>
   3e010:	b	3e088 <__assert_fail@plt+0x2b4d0>
   3e014:	ldr	r0, [fp, #-380]	; 0xfffffe84
   3e018:	sub	r1, fp, #744	; 0x2e8
   3e01c:	sub	r2, fp, #788	; 0x314
   3e020:	bl	6dbd0 <__assert_fail@plt+0x5b018>
   3e024:	movw	r1, #0
   3e028:	cmp	r0, r1
   3e02c:	beq	3e074 <__assert_fail@plt+0x2b4bc>
   3e030:	ldr	r0, [fp, #-748]	; 0xfffffd14
   3e034:	movw	r1, #0
   3e038:	cmp	r0, r1
   3e03c:	beq	3e074 <__assert_fail@plt+0x2b4bc>
   3e040:	ldr	r0, [fp, #-756]	; 0xfffffd0c
   3e044:	ldr	r1, [fp, #-540]	; 0xfffffde4
   3e048:	cmp	r0, r1
   3e04c:	beq	3e074 <__assert_fail@plt+0x2b4bc>
   3e050:	ldr	r0, [fp, #-748]	; 0xfffffd14
   3e054:	str	r0, [fp, #-536]	; 0xfffffde8
   3e058:	movw	r0, #269	; 0x10d
   3e05c:	str	r0, [fp, #-532]	; 0xfffffdec
   3e060:	ldr	r0, [fp, #-756]	; 0xfffffd0c
   3e064:	str	r0, [fp, #-528]	; 0xfffffdf0
   3e068:	movw	r0, #0
   3e06c:	str	r0, [fp, #-524]	; 0xfffffdf4
   3e070:	b	3e088 <__assert_fail@plt+0x2b4d0>
   3e074:	b	3e078 <__assert_fail@plt+0x2b4c0>
   3e078:	ldr	r0, [fp, #-740]	; 0xfffffd1c
   3e07c:	add	r0, r0, #1
   3e080:	str	r0, [fp, #-740]	; 0xfffffd1c
   3e084:	b	3dfd8 <__assert_fail@plt+0x2b420>
   3e088:	ldr	r0, [fp, #-548]	; 0xfffffddc
   3e08c:	movw	r1, #0
   3e090:	cmp	r0, r1
   3e094:	beq	3e0cc <__assert_fail@plt+0x2b514>
   3e098:	ldr	r0, [fp, #-536]	; 0xfffffde8
   3e09c:	movw	r1, #0
   3e0a0:	cmp	r0, r1
   3e0a4:	beq	3e0cc <__assert_fail@plt+0x2b514>
   3e0a8:	ldr	r0, [fp, #-548]	; 0xfffffddc
   3e0ac:	ldr	r1, [fp, #-536]	; 0xfffffde8
   3e0b0:	bl	124c8 <strcmp@plt>
   3e0b4:	cmp	r0, #0
   3e0b8:	bne	3e0cc <__assert_fail@plt+0x2b514>
   3e0bc:	mvn	r0, #0
   3e0c0:	str	r0, [fp, #-540]	; 0xfffffde4
   3e0c4:	movw	r0, #0
   3e0c8:	str	r0, [fp, #-536]	; 0xfffffde8
   3e0cc:	sub	r0, fp, #736	; 0x2e0
   3e0d0:	bl	32504 <__assert_fail@plt+0x1f94c>
   3e0d4:	cmp	r0, #0
   3e0d8:	beq	3e130 <__assert_fail@plt+0x2b578>
   3e0dc:	sub	r0, fp, #736	; 0x2e0
   3e0e0:	bl	3d73c <__assert_fail@plt+0x2ab84>
   3e0e4:	tst	r0, #1
   3e0e8:	beq	3e12c <__assert_fail@plt+0x2b574>
   3e0ec:	ldr	r0, [fp, #-252]	; 0xffffff04
   3e0f0:	ldr	r1, [fp, #-736]	; 0xfffffd20
   3e0f4:	cmp	r0, r1
   3e0f8:	bhi	3e110 <__assert_fail@plt+0x2b558>
   3e0fc:	movw	r0, #45431	; 0xb177
   3e100:	movt	r0, #7
   3e104:	bl	12864 <gettext@plt>
   3e108:	str	r0, [fp, #-1244]	; 0xfffffb24
   3e10c:	b	3e120 <__assert_fail@plt+0x2b568>
   3e110:	movw	r0, #45454	; 0xb18e
   3e114:	movt	r0, #7
   3e118:	bl	12864 <gettext@plt>
   3e11c:	str	r0, [fp, #-1244]	; 0xfffffb24
   3e120:	ldr	r0, [fp, #-1244]	; 0xfffffb24
   3e124:	ldr	r1, [fp, #-736]	; 0xfffffd20
   3e128:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   3e12c:	b	45058 <__assert_fail@plt+0x324a0>
   3e130:	sub	r0, fp, #736	; 0x2e0
   3e134:	bl	3d73c <__assert_fail@plt+0x2ab84>
   3e138:	tst	r0, #1
   3e13c:	beq	3e39c <__assert_fail@plt+0x2b7e4>
   3e140:	movw	r0, #45494	; 0xb1b6
   3e144:	movt	r0, #7
   3e148:	bl	12864 <gettext@plt>
   3e14c:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   3e150:	ldrb	r0, [fp, #-584]	; 0xfffffdb8
   3e154:	tst	r0, #1
   3e158:	beq	3e194 <__assert_fail@plt+0x2b5dc>
   3e15c:	movw	r0, #55080	; 0xd728
   3e160:	movt	r0, #8
   3e164:	ldr	r0, [r0]
   3e168:	movw	r1, #45511	; 0xb1c7
   3e16c:	movt	r1, #7
   3e170:	str	r0, [fp, #-1248]	; 0xfffffb20
   3e174:	mov	r0, r1
   3e178:	bl	12864 <gettext@plt>
   3e17c:	ldr	r1, [fp, #-1248]	; 0xfffffb20
   3e180:	str	r0, [fp, #-1252]	; 0xfffffb1c
   3e184:	mov	r0, r1
   3e188:	ldr	r1, [fp, #-1252]	; 0xfffffb1c
   3e18c:	bl	128c4 <fprintf@plt>
   3e190:	b	3e300 <__assert_fail@plt+0x2b748>
   3e194:	ldr	r0, [fp, #-560]	; 0xfffffdd0
   3e198:	cmp	r0, #0
   3e19c:	beq	3e1d8 <__assert_fail@plt+0x2b620>
   3e1a0:	movw	r0, #55080	; 0xd728
   3e1a4:	movt	r0, #8
   3e1a8:	ldr	r0, [r0]
   3e1ac:	movw	r1, #45536	; 0xb1e0
   3e1b0:	movt	r1, #7
   3e1b4:	str	r0, [fp, #-1256]	; 0xfffffb18
   3e1b8:	mov	r0, r1
   3e1bc:	bl	12864 <gettext@plt>
   3e1c0:	ldr	r1, [fp, #-1256]	; 0xfffffb18
   3e1c4:	str	r0, [fp, #-1260]	; 0xfffffb14
   3e1c8:	mov	r0, r1
   3e1cc:	ldr	r1, [fp, #-1260]	; 0xfffffb14
   3e1d0:	bl	128c4 <fprintf@plt>
   3e1d4:	b	3e2fc <__assert_fail@plt+0x2b744>
   3e1d8:	ldr	r0, [fp, #12]
   3e1dc:	movw	r1, #0
   3e1e0:	cmp	r0, r1
   3e1e4:	beq	3e2c4 <__assert_fail@plt+0x2b70c>
   3e1e8:	ldr	r0, [fp, #-380]	; 0xfffffe84
   3e1ec:	ldr	r1, [fp, #8]
   3e1f0:	cmp	r0, r1
   3e1f4:	beq	3e234 <__assert_fail@plt+0x2b67c>
   3e1f8:	movw	r0, #55080	; 0xd728
   3e1fc:	movt	r0, #8
   3e200:	ldr	r0, [r0]
   3e204:	movw	r1, #45560	; 0xb1f8
   3e208:	movt	r1, #7
   3e20c:	str	r0, [fp, #-1264]	; 0xfffffb10
   3e210:	mov	r0, r1
   3e214:	bl	12864 <gettext@plt>
   3e218:	ldr	r2, [fp, #12]
   3e21c:	ldr	r1, [fp, #-1264]	; 0xfffffb10
   3e220:	str	r0, [fp, #-1268]	; 0xfffffb0c
   3e224:	mov	r0, r1
   3e228:	ldr	r1, [fp, #-1268]	; 0xfffffb0c
   3e22c:	bl	128c4 <fprintf@plt>
   3e230:	b	3e2c0 <__assert_fail@plt+0x2b708>
   3e234:	ldr	r0, [fp, #12]
   3e238:	movw	r1, #45583	; 0xb20f
   3e23c:	movt	r1, #7
   3e240:	bl	124c8 <strcmp@plt>
   3e244:	cmp	r0, #0
   3e248:	bne	3e284 <__assert_fail@plt+0x2b6cc>
   3e24c:	movw	r0, #55080	; 0xd728
   3e250:	movt	r0, #8
   3e254:	ldr	r0, [r0]
   3e258:	movw	r1, #45588	; 0xb214
   3e25c:	movt	r1, #7
   3e260:	str	r0, [fp, #-1272]	; 0xfffffb08
   3e264:	mov	r0, r1
   3e268:	bl	12864 <gettext@plt>
   3e26c:	ldr	r1, [fp, #-1272]	; 0xfffffb08
   3e270:	str	r0, [fp, #-1276]	; 0xfffffb04
   3e274:	mov	r0, r1
   3e278:	ldr	r1, [fp, #-1276]	; 0xfffffb04
   3e27c:	bl	128c4 <fprintf@plt>
   3e280:	b	3e2bc <__assert_fail@plt+0x2b704>
   3e284:	movw	r0, #55080	; 0xd728
   3e288:	movt	r0, #8
   3e28c:	ldr	r0, [r0]
   3e290:	movw	r1, #45622	; 0xb236
   3e294:	movt	r1, #7
   3e298:	str	r0, [fp, #-1280]	; 0xfffffb00
   3e29c:	mov	r0, r1
   3e2a0:	bl	12864 <gettext@plt>
   3e2a4:	ldr	r2, [fp, #12]
   3e2a8:	ldr	r1, [fp, #-1280]	; 0xfffffb00
   3e2ac:	str	r0, [fp, #-1284]	; 0xfffffafc
   3e2b0:	mov	r0, r1
   3e2b4:	ldr	r1, [fp, #-1284]	; 0xfffffafc
   3e2b8:	bl	128c4 <fprintf@plt>
   3e2bc:	b	3e2c0 <__assert_fail@plt+0x2b708>
   3e2c0:	b	3e2f8 <__assert_fail@plt+0x2b740>
   3e2c4:	movw	r0, #55080	; 0xd728
   3e2c8:	movt	r0, #8
   3e2cc:	ldr	r0, [r0]
   3e2d0:	movw	r1, #45648	; 0xb250
   3e2d4:	movt	r1, #7
   3e2d8:	str	r0, [fp, #-1288]	; 0xfffffaf8
   3e2dc:	mov	r0, r1
   3e2e0:	bl	12864 <gettext@plt>
   3e2e4:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   3e2e8:	str	r0, [fp, #-1292]	; 0xfffffaf4
   3e2ec:	mov	r0, r1
   3e2f0:	ldr	r1, [fp, #-1292]	; 0xfffffaf4
   3e2f4:	bl	128c4 <fprintf@plt>
   3e2f8:	b	3e2fc <__assert_fail@plt+0x2b744>
   3e2fc:	b	3e300 <__assert_fail@plt+0x2b748>
   3e300:	ldr	r0, [fp, #-572]	; 0xfffffdc4
   3e304:	cmp	r0, #0
   3e308:	beq	3e340 <__assert_fail@plt+0x2b788>
   3e30c:	ldr	r0, [fp, #-560]	; 0xfffffdd0
   3e310:	cmp	r0, #0
   3e314:	bne	3e340 <__assert_fail@plt+0x2b788>
   3e318:	ldr	r0, [fp, #-716]	; 0xfffffd34
   3e31c:	movw	r1, #0
   3e320:	cmp	r1, r0
   3e324:	bge	3e340 <__assert_fail@plt+0x2b788>
   3e328:	movw	r0, #55080	; 0xd728
   3e32c:	movt	r0, #8
   3e330:	ldr	r0, [r0]
   3e334:	movw	r1, #45663	; 0xb25f
   3e338:	movt	r1, #7
   3e33c:	bl	128c4 <fprintf@plt>
   3e340:	ldr	r0, [fp, #-560]	; 0xfffffdd0
   3e344:	cmp	r0, #0
   3e348:	beq	3e388 <__assert_fail@plt+0x2b7d0>
   3e34c:	sub	r1, fp, #147	; 0x93
   3e350:	movw	r0, #55080	; 0xd728
   3e354:	movt	r0, #8
   3e358:	ldr	r0, [r0]
   3e35c:	ldr	r2, [fp, #-712]	; 0xfffffd38
   3e360:	str	r0, [fp, #-1296]	; 0xfffffaf0
   3e364:	mov	r0, r2
   3e368:	bl	45220 <__assert_fail@plt+0x32668>
   3e36c:	ldr	r1, [fp, #-1296]	; 0xfffffaf0
   3e370:	str	r0, [fp, #-1300]	; 0xfffffaec
   3e374:	mov	r0, r1
   3e378:	movw	r1, #45669	; 0xb265
   3e37c:	movt	r1, #7
   3e380:	ldr	r2, [fp, #-1300]	; 0xfffffaec
   3e384:	bl	128c4 <fprintf@plt>
   3e388:	movw	r0, #55080	; 0xd728
   3e38c:	movt	r0, #8
   3e390:	ldr	r1, [r0]
   3e394:	movw	r0, #10
   3e398:	bl	12a38 <fputc@plt>
   3e39c:	ldrb	r0, [fp, #-584]	; 0xfffffdb8
   3e3a0:	tst	r0, #1
   3e3a4:	beq	3e3c0 <__assert_fail@plt+0x2b808>
   3e3a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   3e3ac:	ldr	r1, [fp, #-648]	; 0xfffffd78
   3e3b0:	str	r1, [r0]
   3e3b4:	ldr	r1, [fp, #-644]	; 0xfffffd7c
   3e3b8:	str	r1, [r0, #4]
   3e3bc:	b	44e34 <__assert_fail@plt+0x3227c>
   3e3c0:	ldr	r0, [fp, #-564]	; 0xfffffdcc
   3e3c4:	ldr	r1, [fp, #-580]	; 0xfffffdbc
   3e3c8:	orr	r0, r0, r1
   3e3cc:	ldr	r1, [fp, #-576]	; 0xfffffdc0
   3e3d0:	orr	r0, r0, r1
   3e3d4:	ldr	r1, [fp, #-568]	; 0xfffffdc8
   3e3d8:	orr	r0, r0, r1
   3e3dc:	ldr	r1, [fp, #-572]	; 0xfffffdc4
   3e3e0:	ldr	r2, [fp, #-560]	; 0xfffffdd0
   3e3e4:	add	r1, r1, r2
   3e3e8:	orr	r0, r0, r1
   3e3ec:	movw	r1, #1
   3e3f0:	cmp	r1, r0
   3e3f4:	bge	3e490 <__assert_fail@plt+0x2b8d8>
   3e3f8:	sub	r0, fp, #736	; 0x2e0
   3e3fc:	bl	3d73c <__assert_fail@plt+0x2ab84>
   3e400:	tst	r0, #1
   3e404:	beq	3e48c <__assert_fail@plt+0x2b8d4>
   3e408:	ldr	r0, [fp, #-564]	; 0xfffffdcc
   3e40c:	cmp	r0, #1
   3e410:	ble	3e420 <__assert_fail@plt+0x2b868>
   3e414:	movw	r0, #45675	; 0xb26b
   3e418:	movt	r0, #7
   3e41c:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   3e420:	ldr	r0, [fp, #-580]	; 0xfffffdbc
   3e424:	cmp	r0, #1
   3e428:	ble	3e438 <__assert_fail@plt+0x2b880>
   3e42c:	movw	r0, #45708	; 0xb28c
   3e430:	movt	r0, #7
   3e434:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   3e438:	ldr	r0, [fp, #-576]	; 0xfffffdc0
   3e43c:	cmp	r0, #1
   3e440:	ble	3e450 <__assert_fail@plt+0x2b898>
   3e444:	movw	r0, #45741	; 0xb2ad
   3e448:	movt	r0, #7
   3e44c:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   3e450:	ldr	r0, [fp, #-568]	; 0xfffffdc8
   3e454:	cmp	r0, #1
   3e458:	ble	3e468 <__assert_fail@plt+0x2b8b0>
   3e45c:	movw	r0, #45774	; 0xb2ce
   3e460:	movt	r0, #7
   3e464:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   3e468:	ldr	r0, [fp, #-572]	; 0xfffffdc4
   3e46c:	ldr	r1, [fp, #-560]	; 0xfffffdd0
   3e470:	add	r0, r0, r1
   3e474:	cmp	r0, #1
   3e478:	ble	3e488 <__assert_fail@plt+0x2b8d0>
   3e47c:	movw	r0, #45818	; 0xb2fa
   3e480:	movt	r0, #7
   3e484:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   3e488:	b	3e48c <__assert_fail@plt+0x2b8d4>
   3e48c:	b	45058 <__assert_fail@plt+0x324a0>
   3e490:	sub	r0, fp, #736	; 0x2e0
   3e494:	bl	3d73c <__assert_fail@plt+0x2ab84>
   3e498:	sub	r1, fp, #76	; 0x4c
   3e49c:	add	r1, r1, #20
   3e4a0:	ldr	r2, [fp, #-684]	; 0xfffffd54
   3e4a4:	ldr	r3, [fp, #-688]	; 0xfffffd50
   3e4a8:	ldr	ip, [fp, #-704]	; 0xfffffd40
   3e4ac:	ldr	lr, [fp, #-700]	; 0xfffffd44
   3e4b0:	ldr	r4, [fp, #-696]	; 0xfffffd48
   3e4b4:	ldr	r5, [fp, #-692]	; 0xfffffd4c
   3e4b8:	mov	r6, sp
   3e4bc:	str	r1, [r6, #12]
   3e4c0:	and	r0, r0, #1
   3e4c4:	str	r0, [r6, #8]
   3e4c8:	str	r3, [r6]
   3e4cc:	str	r2, [r6, #4]
   3e4d0:	mov	r0, ip
   3e4d4:	mov	r1, lr
   3e4d8:	mov	r2, r4
   3e4dc:	mov	r3, r5
   3e4e0:	bl	45a40 <__assert_fail@plt+0x32e88>
   3e4e4:	tst	r0, #1
   3e4e8:	beq	3e570 <__assert_fail@plt+0x2b9b8>
   3e4ec:	ldr	r0, [fp, #-680]	; 0xfffffd58
   3e4f0:	ldr	r1, [fp, #-676]	; 0xfffffd5c
   3e4f4:	mov	r2, #0
   3e4f8:	cmn	r1, #1
   3e4fc:	mov	r3, r2
   3e500:	movwgt	r3, #1
   3e504:	subs	r0, r0, #1
   3e508:	sbc	ip, r1, #0
   3e50c:	cmn	ip, #1
   3e510:	mov	lr, r2
   3e514:	movwgt	lr, #1
   3e518:	subs	r3, r3, lr
   3e51c:	movwne	r3, #1
   3e520:	cmp	r1, #0
   3e524:	movwmi	r2, #1
   3e528:	and	r1, r2, r3
   3e52c:	eor	r2, ip, r0, asr #31
   3e530:	cmp	r2, #0
   3e534:	movwne	r2, #1
   3e538:	orr	r1, r1, r2
   3e53c:	str	r0, [fp, #-60]	; 0xffffffc4
   3e540:	tst	r1, #1
   3e544:	bne	3e570 <__assert_fail@plt+0x2b9b8>
   3e548:	ldr	r0, [fp, #-672]	; 0xfffffd60
   3e54c:	ldr	r1, [fp, #-668]	; 0xfffffd64
   3e550:	mov	r2, #0
   3e554:	eor	r1, r1, r0, asr #31
   3e558:	cmp	r1, #0
   3e55c:	movwne	r1, #1
   3e560:	orr	r1, r2, r1
   3e564:	str	r0, [fp, #-64]	; 0xffffffc0
   3e568:	tst	r1, #1
   3e56c:	beq	3e594 <__assert_fail@plt+0x2b9dc>
   3e570:	sub	r0, fp, #736	; 0x2e0
   3e574:	bl	3d73c <__assert_fail@plt+0x2ab84>
   3e578:	tst	r0, #1
   3e57c:	beq	3e590 <__assert_fail@plt+0x2b9d8>
   3e580:	movw	r0, #45856	; 0xb320
   3e584:	movt	r0, #7
   3e588:	bl	12864 <gettext@plt>
   3e58c:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   3e590:	b	45058 <__assert_fail@plt+0x324a0>
   3e594:	ldr	r0, [fp, #-564]	; 0xfffffdcc
   3e598:	cmp	r0, #0
   3e59c:	bne	3e5c4 <__assert_fail@plt+0x2ba0c>
   3e5a0:	ldrb	r0, [fp, #-583]	; 0xfffffdb9
   3e5a4:	tst	r0, #1
   3e5a8:	beq	3e6f0 <__assert_fail@plt+0x2bb38>
   3e5ac:	ldr	r0, [fp, #-580]	; 0xfffffdbc
   3e5b0:	cmp	r0, #0
   3e5b4:	bne	3e6f0 <__assert_fail@plt+0x2bb38>
   3e5b8:	ldr	r0, [fp, #-576]	; 0xfffffdc0
   3e5bc:	cmp	r0, #0
   3e5c0:	bne	3e6f0 <__assert_fail@plt+0x2bb38>
   3e5c4:	ldr	r0, [fp, #-664]	; 0xfffffd68
   3e5c8:	ldr	r1, [fp, #-660]	; 0xfffffd6c
   3e5cc:	ldr	r2, [fp, #-708]	; 0xfffffd3c
   3e5d0:	bl	45c2c <__assert_fail@plt+0x33074>
   3e5d4:	str	r0, [fp, #-68]	; 0xffffffbc
   3e5d8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   3e5dc:	cmp	r0, #0
   3e5e0:	bge	3e66c <__assert_fail@plt+0x2bab4>
   3e5e4:	ldr	r0, [fp, #-708]	; 0xfffffd3c
   3e5e8:	cmp	r0, #0
   3e5ec:	bne	3e600 <__assert_fail@plt+0x2ba48>
   3e5f0:	movw	r0, #45893	; 0xb345
   3e5f4:	movt	r0, #7
   3e5f8:	str	r0, [fp, #-1304]	; 0xfffffae8
   3e5fc:	b	3e62c <__assert_fail@plt+0x2ba74>
   3e600:	ldr	r0, [fp, #-708]	; 0xfffffd3c
   3e604:	cmp	r0, #1
   3e608:	movw	r0, #0
   3e60c:	moveq	r0, #1
   3e610:	tst	r0, #1
   3e614:	movw	r0, #29909	; 0x74d5
   3e618:	movt	r0, #7
   3e61c:	movw	r1, #44610	; 0xae42
   3e620:	movt	r1, #7
   3e624:	movne	r0, r1
   3e628:	str	r0, [fp, #-1304]	; 0xfffffae8
   3e62c:	ldr	r0, [fp, #-1304]	; 0xfffffae8
   3e630:	str	r0, [fp, #-792]	; 0xfffffce8
   3e634:	sub	r0, fp, #736	; 0x2e0
   3e638:	bl	3d73c <__assert_fail@plt+0x2ab84>
   3e63c:	tst	r0, #1
   3e640:	beq	3e668 <__assert_fail@plt+0x2bab0>
   3e644:	movw	r0, #45896	; 0xb348
   3e648:	movt	r0, #7
   3e64c:	bl	12864 <gettext@plt>
   3e650:	ldr	r2, [fp, #-664]	; 0xfffffd68
   3e654:	ldr	r3, [fp, #-660]	; 0xfffffd6c
   3e658:	ldr	r1, [fp, #-792]	; 0xfffffce8
   3e65c:	mov	ip, sp
   3e660:	str	r1, [ip]
   3e664:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   3e668:	b	45058 <__assert_fail@plt+0x324a0>
   3e66c:	ldr	r0, [fp, #-656]	; 0xfffffd70
   3e670:	str	r0, [fp, #-72]	; 0xffffffb8
   3e674:	ldr	r0, [fp, #-648]	; 0xfffffd78
   3e678:	str	r0, [fp, #-76]	; 0xffffffb4
   3e67c:	sub	r0, fp, #736	; 0x2e0
   3e680:	bl	3d73c <__assert_fail@plt+0x2ab84>
   3e684:	tst	r0, #1
   3e688:	beq	3e6ec <__assert_fail@plt+0x2bb34>
   3e68c:	ldr	r0, [fp, #-564]	; 0xfffffdcc
   3e690:	cmp	r0, #0
   3e694:	beq	3e6ac <__assert_fail@plt+0x2baf4>
   3e698:	movw	r0, #45924	; 0xb364
   3e69c:	movt	r0, #7
   3e6a0:	bl	12864 <gettext@plt>
   3e6a4:	str	r0, [fp, #-1308]	; 0xfffffae4
   3e6a8:	b	3e6bc <__assert_fail@plt+0x2bb04>
   3e6ac:	movw	r0, #45970	; 0xb392
   3e6b0:	movt	r0, #7
   3e6b4:	bl	12864 <gettext@plt>
   3e6b8:	str	r0, [fp, #-1308]	; 0xfffffae4
   3e6bc:	ldr	r0, [fp, #-1308]	; 0xfffffae4
   3e6c0:	sub	r1, fp, #247	; 0xf7
   3e6c4:	sub	r2, fp, #76	; 0x4c
   3e6c8:	str	r0, [fp, #-1312]	; 0xfffffae0
   3e6cc:	mov	r0, r2
   3e6d0:	movw	r2, #100	; 0x64
   3e6d4:	bl	45de4 <__assert_fail@plt+0x3322c>
   3e6d8:	ldr	r1, [fp, #-1312]	; 0xfffffae0
   3e6dc:	str	r0, [fp, #-1316]	; 0xfffffadc
   3e6e0:	mov	r0, r1
   3e6e4:	ldr	r1, [fp, #-1316]	; 0xfffffadc
   3e6e8:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   3e6ec:	b	3e724 <__assert_fail@plt+0x2bb6c>
   3e6f0:	movw	r0, #0
   3e6f4:	str	r0, [fp, #-76]	; 0xffffffb4
   3e6f8:	str	r0, [fp, #-72]	; 0xffffffb8
   3e6fc:	str	r0, [fp, #-68]	; 0xffffffbc
   3e700:	str	r0, [fp, #-644]	; 0xfffffd7c
   3e704:	sub	r0, fp, #736	; 0x2e0
   3e708:	bl	3d73c <__assert_fail@plt+0x2ab84>
   3e70c:	tst	r0, #1
   3e710:	beq	3e720 <__assert_fail@plt+0x2bb68>
   3e714:	movw	r0, #46014	; 0xb3be
   3e718:	movt	r0, #7
   3e71c:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   3e720:	b	3e724 <__assert_fail@plt+0x2bb6c>
   3e724:	ldr	r0, [fp, #-580]	; 0xfffffdbc
   3e728:	ldr	r1, [fp, #-576]	; 0xfffffdc0
   3e72c:	orr	r0, r0, r1
   3e730:	ldr	r1, [fp, #-564]	; 0xfffffdcc
   3e734:	orr	r0, r0, r1
   3e738:	cmp	r0, #0
   3e73c:	beq	3e748 <__assert_fail@plt+0x2bb90>
   3e740:	mvn	r0, #0
   3e744:	str	r0, [fp, #-44]	; 0xffffffd4
   3e748:	ldr	r0, [fp, #-572]	; 0xfffffdc4
   3e74c:	cmp	r0, #0
   3e750:	beq	3e75c <__assert_fail@plt+0x2bba4>
   3e754:	ldr	r0, [fp, #-716]	; 0xfffffd34
   3e758:	str	r0, [fp, #-44]	; 0xffffffd4
   3e75c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   3e760:	str	r0, [fp, #-120]	; 0xffffff88
   3e764:	ldr	r0, [fp, #-72]	; 0xffffffb8
   3e768:	str	r0, [fp, #-116]	; 0xffffff8c
   3e76c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   3e770:	str	r0, [fp, #-112]	; 0xffffff90
   3e774:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3e778:	str	r0, [fp, #-108]	; 0xffffff94
   3e77c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   3e780:	str	r0, [fp, #-104]	; 0xffffff98
   3e784:	ldr	r0, [fp, #-56]	; 0xffffffc8
   3e788:	str	r0, [fp, #-100]	; 0xffffff9c
   3e78c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   3e790:	str	r0, [fp, #-88]	; 0xffffffa8
   3e794:	mvn	r0, #0
   3e798:	str	r0, [fp, #-52]	; 0xffffffcc
   3e79c:	ldr	r0, [fp, #-380]	; 0xfffffe84
   3e7a0:	sub	r1, fp, #76	; 0x4c
   3e7a4:	bl	6e020 <__assert_fail@plt+0x5b468>
   3e7a8:	str	r0, [fp, #-368]	; 0xfffffe90
   3e7ac:	sub	r0, fp, #120	; 0x78
   3e7b0:	sub	r1, fp, #76	; 0x4c
   3e7b4:	bl	45e50 <__assert_fail@plt+0x33298>
   3e7b8:	tst	r0, #1
   3e7bc:	bne	3e8fc <__assert_fail@plt+0x2bd44>
   3e7c0:	movw	r0, #0
   3e7c4:	strb	r0, [fp, #-793]	; 0xfffffce7
   3e7c8:	ldr	r0, [fp, #-560]	; 0xfffffdd0
   3e7cc:	cmp	r0, #0
   3e7d0:	movw	r0, #0
   3e7d4:	movne	r0, #1
   3e7d8:	and	r0, r0, #1
   3e7dc:	strb	r0, [fp, #-794]	; 0xfffffce6
   3e7e0:	ldrb	r0, [fp, #-794]	; 0xfffffce6
   3e7e4:	tst	r0, #1
   3e7e8:	beq	3e8c4 <__assert_fail@plt+0x2bd0c>
   3e7ec:	movw	r0, #88	; 0x58
   3e7f0:	strb	r0, [fp, #-822]	; 0xfffffcca
   3e7f4:	strb	r0, [fp, #-823]	; 0xfffffcc9
   3e7f8:	strb	r0, [fp, #-824]	; 0xfffffcc8
   3e7fc:	ldr	r0, [fp, #-712]	; 0xfffffd38
   3e800:	sub	r1, fp, #824	; 0x338
   3e804:	add	r1, r1, #3
   3e808:	bl	45220 <__assert_fail@plt+0x32668>
   3e80c:	sub	r1, fp, #824	; 0x338
   3e810:	str	r0, [fp, #-1320]	; 0xfffffad8
   3e814:	mov	r0, r1
   3e818:	bl	6da20 <__assert_fail@plt+0x5ae68>
   3e81c:	str	r0, [fp, #-828]	; 0xfffffcc4
   3e820:	ldr	r0, [fp, #-828]	; 0xfffffcc4
   3e824:	movw	r1, #0
   3e828:	cmp	r0, r1
   3e82c:	bne	3e858 <__assert_fail@plt+0x2bca0>
   3e830:	sub	r0, fp, #736	; 0x2e0
   3e834:	bl	3d73c <__assert_fail@plt+0x2ab84>
   3e838:	tst	r0, #1
   3e83c:	beq	3e854 <__assert_fail@plt+0x2bc9c>
   3e840:	movw	r0, #46066	; 0xb3f2
   3e844:	movt	r0, #7
   3e848:	bl	12864 <gettext@plt>
   3e84c:	sub	r1, fp, #824	; 0x338
   3e850:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   3e854:	b	45058 <__assert_fail@plt+0x324a0>
   3e858:	ldr	r0, [fp, #-120]	; 0xffffff88
   3e85c:	str	r0, [fp, #-76]	; 0xffffffb4
   3e860:	ldr	r0, [fp, #-116]	; 0xffffff8c
   3e864:	str	r0, [fp, #-72]	; 0xffffffb8
   3e868:	ldr	r0, [fp, #-112]	; 0xffffff90
   3e86c:	str	r0, [fp, #-68]	; 0xffffffbc
   3e870:	ldr	r0, [fp, #-108]	; 0xffffff94
   3e874:	str	r0, [fp, #-64]	; 0xffffffc0
   3e878:	ldr	r0, [fp, #-104]	; 0xffffff98
   3e87c:	str	r0, [fp, #-60]	; 0xffffffc4
   3e880:	ldr	r0, [fp, #-100]	; 0xffffff9c
   3e884:	str	r0, [fp, #-56]	; 0xffffffc8
   3e888:	ldr	r0, [fp, #-88]	; 0xffffffa8
   3e88c:	str	r0, [fp, #-44]	; 0xffffffd4
   3e890:	mvn	r0, #0
   3e894:	str	r0, [fp, #-52]	; 0xffffffcc
   3e898:	ldr	r0, [fp, #-828]	; 0xfffffcc4
   3e89c:	sub	r1, fp, #76	; 0x4c
   3e8a0:	bl	6e020 <__assert_fail@plt+0x5b468>
   3e8a4:	str	r0, [fp, #-368]	; 0xfffffe90
   3e8a8:	sub	r0, fp, #120	; 0x78
   3e8ac:	sub	r1, fp, #76	; 0x4c
   3e8b0:	bl	45e50 <__assert_fail@plt+0x33298>
   3e8b4:	and	r0, r0, #1
   3e8b8:	strb	r0, [fp, #-793]	; 0xfffffce7
   3e8bc:	ldr	r0, [fp, #-828]	; 0xfffffcc4
   3e8c0:	bl	6db70 <__assert_fail@plt+0x5afb8>
   3e8c4:	ldrb	r0, [fp, #-793]	; 0xfffffce7
   3e8c8:	tst	r0, #1
   3e8cc:	bne	3e8f8 <__assert_fail@plt+0x2bd40>
   3e8d0:	ldrb	r0, [fp, #-794]	; 0xfffffce6
   3e8d4:	sub	r1, fp, #120	; 0x78
   3e8d8:	str	r0, [fp, #-1324]	; 0xfffffad4
   3e8dc:	mov	r0, r1
   3e8e0:	sub	r1, fp, #76	; 0x4c
   3e8e4:	sub	r2, fp, #736	; 0x2e0
   3e8e8:	ldr	r3, [fp, #-1324]	; 0xfffffad4
   3e8ec:	and	r3, r3, #1
   3e8f0:	bl	45f34 <__assert_fail@plt+0x3337c>
   3e8f4:	b	45058 <__assert_fail@plt+0x324a0>
   3e8f8:	b	3e8fc <__assert_fail@plt+0x2bd44>
   3e8fc:	ldr	r0, [fp, #-576]	; 0xfffffdc0
   3e900:	cmp	r0, #0
   3e904:	beq	42354 <__assert_fail@plt+0x2f79c>
   3e908:	ldr	r0, [fp, #-580]	; 0xfffffdbc
   3e90c:	cmp	r0, #0
   3e910:	bne	42354 <__assert_fail@plt+0x2f79c>
   3e914:	b	3f434 <__assert_fail@plt+0x2c87c>
   3e918:	b	3e91c <__assert_fail@plt+0x2bd64>
   3e91c:	b	3ec34 <__assert_fail@plt+0x2c07c>
   3e920:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3e924:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3e928:	mov	r2, #0
   3e92c:	subs	r3, r0, #1
   3e930:	sbcs	ip, r1, #0
   3e934:	str	r0, [fp, #-1328]	; 0xfffffad0
   3e938:	str	r1, [fp, #-1332]	; 0xfffffacc
   3e93c:	str	r2, [fp, #-1336]	; 0xfffffac8
   3e940:	blt	3e960 <__assert_fail@plt+0x2bda8>
   3e944:	b	3e948 <__assert_fail@plt+0x2bd90>
   3e948:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3e94c:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3e950:	cmp	r0, r1
   3e954:	movw	r0, #0
   3e958:	movne	r0, #1
   3e95c:	str	r0, [fp, #-1336]	; 0xfffffac8
   3e960:	ldr	r0, [fp, #-1336]	; 0xfffffac8
   3e964:	and	r0, r0, #1
   3e968:	ldr	r1, [fp, #-1328]	; 0xfffffad0
   3e96c:	subs	r0, r1, r0
   3e970:	ldr	r2, [fp, #-1332]	; 0xfffffacc
   3e974:	sbc	r3, r2, #0
   3e978:	cmn	r3, #1
   3e97c:	bgt	3ea68 <__assert_fail@plt+0x2beb0>
   3e980:	b	3e984 <__assert_fail@plt+0x2bdcc>
   3e984:	b	3e988 <__assert_fail@plt+0x2bdd0>
   3e988:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3e98c:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3e990:	mov	r2, #0
   3e994:	subs	r3, r0, #1
   3e998:	sbcs	ip, r1, #0
   3e99c:	str	r0, [fp, #-1340]	; 0xfffffac4
   3e9a0:	str	r1, [fp, #-1344]	; 0xfffffac0
   3e9a4:	str	r2, [fp, #-1348]	; 0xfffffabc
   3e9a8:	blt	3e9c8 <__assert_fail@plt+0x2be10>
   3e9ac:	b	3e9b0 <__assert_fail@plt+0x2bdf8>
   3e9b0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3e9b4:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3e9b8:	cmp	r0, r1
   3e9bc:	movw	r0, #0
   3e9c0:	movne	r0, #1
   3e9c4:	str	r0, [fp, #-1348]	; 0xfffffabc
   3e9c8:	ldr	r0, [fp, #-1348]	; 0xfffffabc
   3e9cc:	and	r0, r0, #1
   3e9d0:	ldr	r1, [fp, #-1340]	; 0xfffffac4
   3e9d4:	subs	r0, r1, r0
   3e9d8:	ldr	r2, [fp, #-1344]	; 0xfffffac0
   3e9dc:	sbc	r3, r2, #0
   3e9e0:	subs	r0, r0, #18
   3e9e4:	sbcs	r3, r3, #0
   3e9e8:	blt	3edfc <__assert_fail@plt+0x2c244>
   3e9ec:	b	3ee60 <__assert_fail@plt+0x2c2a8>
   3e9f0:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3e9f4:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3e9f8:	mov	r2, #0
   3e9fc:	subs	r3, r0, #1
   3ea00:	sbcs	ip, r1, #0
   3ea04:	str	r0, [fp, #-1352]	; 0xfffffab8
   3ea08:	str	r1, [fp, #-1356]	; 0xfffffab4
   3ea0c:	str	r2, [fp, #-1360]	; 0xfffffab0
   3ea10:	blt	3ea30 <__assert_fail@plt+0x2be78>
   3ea14:	b	3ea18 <__assert_fail@plt+0x2be60>
   3ea18:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3ea1c:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3ea20:	cmp	r0, r1
   3ea24:	movw	r0, #0
   3ea28:	movne	r0, #1
   3ea2c:	str	r0, [fp, #-1360]	; 0xfffffab0
   3ea30:	ldr	r0, [fp, #-1360]	; 0xfffffab0
   3ea34:	and	r0, r0, #1
   3ea38:	ldr	r1, [fp, #-1352]	; 0xfffffab8
   3ea3c:	subs	r0, r1, r0
   3ea40:	ldr	r2, [fp, #-1356]	; 0xfffffab4
   3ea44:	sbc	r3, r2, #0
   3ea48:	mvn	r3, r3
   3ea4c:	mvn	r0, r0
   3ea50:	mvn	ip, #18
   3ea54:	subs	r0, ip, r0
   3ea58:	mvn	ip, #0
   3ea5c:	sbcs	r3, ip, r3
   3ea60:	blt	3edfc <__assert_fail@plt+0x2c244>
   3ea64:	b	3ee60 <__assert_fail@plt+0x2c2a8>
   3ea68:	b	3ea6c <__assert_fail@plt+0x2beb4>
   3ea6c:	b	3ebc4 <__assert_fail@plt+0x2c00c>
   3ea70:	b	3ebc4 <__assert_fail@plt+0x2c00c>
   3ea74:	b	3ebc4 <__assert_fail@plt+0x2c00c>
   3ea78:	b	3ea7c <__assert_fail@plt+0x2bec4>
   3ea7c:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3ea80:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3ea84:	mov	r2, #0
   3ea88:	subs	r3, r0, #1
   3ea8c:	sbcs	ip, r1, #0
   3ea90:	str	r0, [fp, #-1364]	; 0xfffffaac
   3ea94:	str	r1, [fp, #-1368]	; 0xfffffaa8
   3ea98:	str	r2, [fp, #-1372]	; 0xfffffaa4
   3ea9c:	blt	3eabc <__assert_fail@plt+0x2bf04>
   3eaa0:	b	3eaa4 <__assert_fail@plt+0x2beec>
   3eaa4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3eaa8:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3eaac:	cmp	r0, r1
   3eab0:	movw	r0, #0
   3eab4:	movne	r0, #1
   3eab8:	str	r0, [fp, #-1372]	; 0xfffffaa4
   3eabc:	ldr	r0, [fp, #-1372]	; 0xfffffaa4
   3eac0:	and	r0, r0, #1
   3eac4:	ldr	r1, [fp, #-1364]	; 0xfffffaac
   3eac8:	subs	r0, r1, r0
   3eacc:	ldr	r2, [fp, #-1368]	; 0xfffffaa8
   3ead0:	sbc	r3, r2, #0
   3ead4:	subs	r0, r0, #128	; 0x80
   3ead8:	sbc	r3, r3, #0
   3eadc:	rsbs	r0, r0, #0
   3eae0:	rscs	r3, r3, #0
   3eae4:	blt	3edfc <__assert_fail@plt+0x2c244>
   3eae8:	b	3ee60 <__assert_fail@plt+0x2c2a8>
   3eaec:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3eaf0:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3eaf4:	mov	r2, #0
   3eaf8:	subs	r3, r0, #1
   3eafc:	sbcs	ip, r1, #0
   3eb00:	str	r0, [fp, #-1376]	; 0xfffffaa0
   3eb04:	str	r1, [fp, #-1380]	; 0xfffffa9c
   3eb08:	str	r2, [fp, #-1384]	; 0xfffffa98
   3eb0c:	blt	3eb2c <__assert_fail@plt+0x2bf74>
   3eb10:	b	3eb14 <__assert_fail@plt+0x2bf5c>
   3eb14:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3eb18:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3eb1c:	cmp	r0, r1
   3eb20:	movw	r0, #0
   3eb24:	movne	r0, #1
   3eb28:	str	r0, [fp, #-1384]	; 0xfffffa98
   3eb2c:	ldr	r0, [fp, #-1384]	; 0xfffffa98
   3eb30:	and	r0, r0, #1
   3eb34:	ldr	r1, [fp, #-1376]	; 0xfffffaa0
   3eb38:	subs	r0, r1, r0
   3eb3c:	ldr	r2, [fp, #-1380]	; 0xfffffa9c
   3eb40:	sbc	r3, r2, #0
   3eb44:	subs	r0, r0, #1
   3eb48:	sbcs	r3, r3, #0
   3eb4c:	blt	3ee60 <__assert_fail@plt+0x2c2a8>
   3eb50:	b	3eb54 <__assert_fail@plt+0x2bf9c>
   3eb54:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3eb58:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3eb5c:	mov	r2, #0
   3eb60:	subs	r3, r0, #1
   3eb64:	sbcs	ip, r1, #0
   3eb68:	str	r0, [fp, #-1388]	; 0xfffffa94
   3eb6c:	str	r1, [fp, #-1392]	; 0xfffffa90
   3eb70:	str	r2, [fp, #-1396]	; 0xfffffa8c
   3eb74:	blt	3eb94 <__assert_fail@plt+0x2bfdc>
   3eb78:	b	3eb7c <__assert_fail@plt+0x2bfc4>
   3eb7c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3eb80:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3eb84:	cmp	r0, r1
   3eb88:	movw	r0, #0
   3eb8c:	movne	r0, #1
   3eb90:	str	r0, [fp, #-1396]	; 0xfffffa8c
   3eb94:	ldr	r0, [fp, #-1396]	; 0xfffffa8c
   3eb98:	mvn	r0, r0
   3eb9c:	mvn	r1, #1
   3eba0:	orr	r0, r0, r1
   3eba4:	ldr	r1, [fp, #-1388]	; 0xfffffa94
   3eba8:	adds	r0, r0, r1
   3ebac:	ldr	r2, [fp, #-1392]	; 0xfffffa90
   3ebb0:	sbc	r3, r2, #0
   3ebb4:	rsbs	r0, r0, #127	; 0x7f
   3ebb8:	rscs	r3, r3, #0
   3ebbc:	blt	3edfc <__assert_fail@plt+0x2c244>
   3ebc0:	b	3ee60 <__assert_fail@plt+0x2c2a8>
   3ebc4:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3ebc8:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3ebcc:	mov	r2, #0
   3ebd0:	subs	r3, r0, #1
   3ebd4:	sbcs	ip, r1, #0
   3ebd8:	str	r0, [fp, #-1400]	; 0xfffffa88
   3ebdc:	str	r1, [fp, #-1404]	; 0xfffffa84
   3ebe0:	str	r2, [fp, #-1408]	; 0xfffffa80
   3ebe4:	blt	3ec04 <__assert_fail@plt+0x2c04c>
   3ebe8:	b	3ebec <__assert_fail@plt+0x2c034>
   3ebec:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3ebf0:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3ebf4:	cmp	r0, r1
   3ebf8:	movw	r0, #0
   3ebfc:	movne	r0, #1
   3ec00:	str	r0, [fp, #-1408]	; 0xfffffa80
   3ec04:	ldr	r0, [fp, #-1408]	; 0xfffffa80
   3ec08:	and	r0, r0, #1
   3ec0c:	ldr	r1, [fp, #-1400]	; 0xfffffa88
   3ec10:	subs	r0, r1, r0
   3ec14:	ldr	r2, [fp, #-1404]	; 0xfffffa84
   3ec18:	sbc	r3, r2, #0
   3ec1c:	mvn	ip, #17
   3ec20:	subs	r0, ip, r0
   3ec24:	mvn	ip, #0
   3ec28:	sbcs	r3, ip, r3
   3ec2c:	blt	3edfc <__assert_fail@plt+0x2c244>
   3ec30:	b	3ee60 <__assert_fail@plt+0x2c2a8>
   3ec34:	b	3ec3c <__assert_fail@plt+0x2c084>
   3ec38:	b	3ee60 <__assert_fail@plt+0x2c2a8>
   3ec3c:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3ec40:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3ec44:	mov	r2, #0
   3ec48:	subs	r3, r0, #1
   3ec4c:	sbcs	ip, r1, #0
   3ec50:	str	r0, [fp, #-1412]	; 0xfffffa7c
   3ec54:	str	r1, [fp, #-1416]	; 0xfffffa78
   3ec58:	str	r2, [fp, #-1420]	; 0xfffffa74
   3ec5c:	blt	3ec7c <__assert_fail@plt+0x2c0c4>
   3ec60:	b	3ec64 <__assert_fail@plt+0x2c0ac>
   3ec64:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3ec68:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3ec6c:	cmp	r0, r1
   3ec70:	movw	r0, #0
   3ec74:	movne	r0, #1
   3ec78:	str	r0, [fp, #-1420]	; 0xfffffa74
   3ec7c:	ldr	r0, [fp, #-1420]	; 0xfffffa74
   3ec80:	and	r0, r0, #1
   3ec84:	ldr	r1, [fp, #-1412]	; 0xfffffa7c
   3ec88:	subs	r0, r1, r0
   3ec8c:	ldr	r2, [fp, #-1416]	; 0xfffffa78
   3ec90:	sbc	r3, r2, #0
   3ec94:	cmn	r3, #1
   3ec98:	bgt	3ed94 <__assert_fail@plt+0x2c1dc>
   3ec9c:	b	3eca0 <__assert_fail@plt+0x2c0e8>
   3eca0:	b	3eca4 <__assert_fail@plt+0x2c0ec>
   3eca4:	b	3ed20 <__assert_fail@plt+0x2c168>
   3eca8:	b	3ed20 <__assert_fail@plt+0x2c168>
   3ecac:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3ecb0:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3ecb4:	mov	r2, #0
   3ecb8:	subs	r3, r0, #1
   3ecbc:	sbcs	ip, r1, #0
   3ecc0:	str	r0, [fp, #-1424]	; 0xfffffa70
   3ecc4:	str	r1, [fp, #-1428]	; 0xfffffa6c
   3ecc8:	str	r2, [fp, #-1432]	; 0xfffffa68
   3eccc:	blt	3ecec <__assert_fail@plt+0x2c134>
   3ecd0:	b	3ecd4 <__assert_fail@plt+0x2c11c>
   3ecd4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3ecd8:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3ecdc:	cmp	r0, r1
   3ece0:	movw	r0, #0
   3ece4:	movne	r0, #1
   3ece8:	str	r0, [fp, #-1432]	; 0xfffffa68
   3ecec:	ldr	r0, [fp, #-1432]	; 0xfffffa68
   3ecf0:	and	r0, r0, #1
   3ecf4:	ldr	r1, [fp, #-1424]	; 0xfffffa70
   3ecf8:	subs	r0, r1, r0
   3ecfc:	ldr	r2, [fp, #-1428]	; 0xfffffa6c
   3ed00:	sbc	r3, r2, #0
   3ed04:	and	r0, r0, r3
   3ed08:	cmn	r0, #1
   3ed0c:	bne	3ed20 <__assert_fail@plt+0x2c168>
   3ed10:	b	3ed14 <__assert_fail@plt+0x2c15c>
   3ed14:	b	3ed18 <__assert_fail@plt+0x2c160>
   3ed18:	b	3ee60 <__assert_fail@plt+0x2c2a8>
   3ed1c:	b	3ee60 <__assert_fail@plt+0x2c2a8>
   3ed20:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3ed24:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3ed28:	mov	r2, #0
   3ed2c:	subs	r3, r0, #1
   3ed30:	sbcs	ip, r1, #0
   3ed34:	str	r0, [fp, #-1436]	; 0xfffffa64
   3ed38:	str	r1, [fp, #-1440]	; 0xfffffa60
   3ed3c:	str	r2, [fp, #-1444]	; 0xfffffa5c
   3ed40:	blt	3ed60 <__assert_fail@plt+0x2c1a8>
   3ed44:	b	3ed48 <__assert_fail@plt+0x2c190>
   3ed48:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3ed4c:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3ed50:	cmp	r0, r1
   3ed54:	movw	r0, #0
   3ed58:	movne	r0, #1
   3ed5c:	str	r0, [fp, #-1444]	; 0xfffffa5c
   3ed60:	ldr	r0, [fp, #-1444]	; 0xfffffa5c
   3ed64:	and	r0, r0, #1
   3ed68:	ldr	r1, [fp, #-1436]	; 0xfffffa64
   3ed6c:	subs	r2, r1, r0
   3ed70:	ldr	r0, [fp, #-1440]	; 0xfffffa60
   3ed74:	sbc	r3, r0, #0
   3ed78:	mvn	r0, #127	; 0x7f
   3ed7c:	mvn	r1, #0
   3ed80:	bl	75338 <__assert_fail@plt+0x62780>
   3ed84:	subs	r0, r0, #7
   3ed88:	sbcs	r1, r1, #0
   3ed8c:	blt	3edfc <__assert_fail@plt+0x2c244>
   3ed90:	b	3ee60 <__assert_fail@plt+0x2c2a8>
   3ed94:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3ed98:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3ed9c:	mov	r2, #0
   3eda0:	subs	r3, r0, #1
   3eda4:	sbcs	ip, r1, #0
   3eda8:	str	r0, [fp, #-1448]	; 0xfffffa58
   3edac:	str	r1, [fp, #-1452]	; 0xfffffa54
   3edb0:	str	r2, [fp, #-1456]	; 0xfffffa50
   3edb4:	blt	3edd4 <__assert_fail@plt+0x2c21c>
   3edb8:	b	3edbc <__assert_fail@plt+0x2c204>
   3edbc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3edc0:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3edc4:	cmp	r0, r1
   3edc8:	movw	r0, #0
   3edcc:	movne	r0, #1
   3edd0:	str	r0, [fp, #-1456]	; 0xfffffa50
   3edd4:	ldr	r0, [fp, #-1456]	; 0xfffffa50
   3edd8:	and	r0, r0, #1
   3eddc:	ldr	r1, [fp, #-1448]	; 0xfffffa58
   3ede0:	subs	r0, r1, r0
   3ede4:	ldr	r2, [fp, #-1452]	; 0xfffffa54
   3ede8:	sbc	r3, r2, #0
   3edec:	subs	r0, r0, #19
   3edf0:	sbcs	r3, r3, #0
   3edf4:	blt	3ee60 <__assert_fail@plt+0x2c2a8>
   3edf8:	b	3edfc <__assert_fail@plt+0x2c244>
   3edfc:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3ee00:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3ee04:	mov	r2, #0
   3ee08:	subs	r3, r0, #1
   3ee0c:	sbcs	r1, r1, #0
   3ee10:	str	r0, [fp, #-1460]	; 0xfffffa4c
   3ee14:	str	r2, [fp, #-1464]	; 0xfffffa48
   3ee18:	blt	3ee38 <__assert_fail@plt+0x2c280>
   3ee1c:	b	3ee20 <__assert_fail@plt+0x2c268>
   3ee20:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3ee24:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3ee28:	cmp	r0, r1
   3ee2c:	movw	r0, #0
   3ee30:	movne	r0, #1
   3ee34:	str	r0, [fp, #-1464]	; 0xfffffa48
   3ee38:	ldr	r0, [fp, #-1464]	; 0xfffffa48
   3ee3c:	and	r0, r0, #1
   3ee40:	ldr	r1, [fp, #-1460]	; 0xfffffa4c
   3ee44:	sub	r0, r1, r0
   3ee48:	rsb	r0, r0, r0, lsl #3
   3ee4c:	sxtb	r0, r0
   3ee50:	asr	r2, r0, #31
   3ee54:	str	r0, [fp, #-936]	; 0xfffffc58
   3ee58:	str	r2, [fp, #-932]	; 0xfffffc5c
   3ee5c:	b	4220c <__assert_fail@plt+0x2f654>
   3ee60:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3ee64:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3ee68:	mov	r2, #0
   3ee6c:	subs	r3, r0, #1
   3ee70:	sbcs	r1, r1, #0
   3ee74:	str	r0, [fp, #-1468]	; 0xfffffa44
   3ee78:	str	r2, [sp, #1472]	; 0x5c0
   3ee7c:	blt	3ee9c <__assert_fail@plt+0x2c2e4>
   3ee80:	b	3ee84 <__assert_fail@plt+0x2c2cc>
   3ee84:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3ee88:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3ee8c:	cmp	r0, r1
   3ee90:	movw	r0, #0
   3ee94:	movne	r0, #1
   3ee98:	str	r0, [sp, #1472]	; 0x5c0
   3ee9c:	ldr	r0, [sp, #1472]	; 0x5c0
   3eea0:	and	r0, r0, #1
   3eea4:	ldr	r1, [fp, #-1468]	; 0xfffffa44
   3eea8:	sub	r0, r1, r0
   3eeac:	rsb	r0, r0, r0, lsl #3
   3eeb0:	sxtb	r0, r0
   3eeb4:	asr	r2, r0, #31
   3eeb8:	str	r0, [fp, #-936]	; 0xfffffc58
   3eebc:	str	r2, [fp, #-932]	; 0xfffffc5c
   3eec0:	b	42110 <__assert_fail@plt+0x2f558>
   3eec4:	b	3f1cc <__assert_fail@plt+0x2c614>
   3eec8:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3eecc:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3eed0:	mov	r2, #0
   3eed4:	subs	r3, r0, #1
   3eed8:	sbcs	ip, r1, #0
   3eedc:	str	r0, [sp, #1468]	; 0x5bc
   3eee0:	str	r1, [sp, #1464]	; 0x5b8
   3eee4:	str	r2, [sp, #1460]	; 0x5b4
   3eee8:	blt	3ef08 <__assert_fail@plt+0x2c350>
   3eeec:	b	3eef0 <__assert_fail@plt+0x2c338>
   3eef0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3eef4:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3eef8:	cmp	r0, r1
   3eefc:	movw	r0, #0
   3ef00:	movne	r0, #1
   3ef04:	str	r0, [sp, #1460]	; 0x5b4
   3ef08:	ldr	r0, [sp, #1460]	; 0x5b4
   3ef0c:	and	r0, r0, #1
   3ef10:	ldr	r1, [sp, #1468]	; 0x5bc
   3ef14:	subs	r0, r1, r0
   3ef18:	ldr	r2, [sp, #1464]	; 0x5b8
   3ef1c:	sbc	r3, r2, #0
   3ef20:	cmn	r3, #1
   3ef24:	bgt	3f014 <__assert_fail@plt+0x2c45c>
   3ef28:	b	3ef2c <__assert_fail@plt+0x2c374>
   3ef2c:	b	3ef30 <__assert_fail@plt+0x2c378>
   3ef30:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3ef34:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3ef38:	mov	r2, #0
   3ef3c:	subs	r3, r0, #1
   3ef40:	sbcs	ip, r1, #0
   3ef44:	str	r0, [sp, #1456]	; 0x5b0
   3ef48:	str	r1, [sp, #1452]	; 0x5ac
   3ef4c:	str	r2, [sp, #1448]	; 0x5a8
   3ef50:	blt	3ef70 <__assert_fail@plt+0x2c3b8>
   3ef54:	b	3ef58 <__assert_fail@plt+0x2c3a0>
   3ef58:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3ef5c:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3ef60:	cmp	r0, r1
   3ef64:	movw	r0, #0
   3ef68:	movne	r0, #1
   3ef6c:	str	r0, [sp, #1448]	; 0x5a8
   3ef70:	ldr	r0, [sp, #1448]	; 0x5a8
   3ef74:	and	r0, r0, #1
   3ef78:	ldr	r1, [sp, #1456]	; 0x5b0
   3ef7c:	subs	r0, r1, r0
   3ef80:	ldr	r2, [sp, #1452]	; 0x5ac
   3ef84:	sbc	r3, r2, #0
   3ef88:	subs	r0, r0, #36	; 0x24
   3ef8c:	sbcs	r3, r3, #0
   3ef90:	blt	3f36c <__assert_fail@plt+0x2c7b4>
   3ef94:	b	3f3d0 <__assert_fail@plt+0x2c818>
   3ef98:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3ef9c:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3efa0:	mov	r2, #0
   3efa4:	subs	r3, r0, #1
   3efa8:	sbcs	ip, r1, #0
   3efac:	str	r0, [sp, #1444]	; 0x5a4
   3efb0:	str	r1, [sp, #1440]	; 0x5a0
   3efb4:	str	r2, [sp, #1436]	; 0x59c
   3efb8:	blt	3efdc <__assert_fail@plt+0x2c424>
   3efbc:	b	3efc4 <__assert_fail@plt+0x2c40c>
   3efc0:	rsbseq	sl, r6, r0, lsl #14
   3efc4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3efc8:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3efcc:	cmp	r0, r1
   3efd0:	movw	r0, #0
   3efd4:	movne	r0, #1
   3efd8:	str	r0, [sp, #1436]	; 0x59c
   3efdc:	ldr	r0, [sp, #1436]	; 0x59c
   3efe0:	and	r0, r0, #1
   3efe4:	ldr	r1, [sp, #1444]	; 0x5a4
   3efe8:	subs	r0, r1, r0
   3efec:	ldr	r2, [sp, #1440]	; 0x5a0
   3eff0:	sbc	r3, r2, #0
   3eff4:	mvn	r3, r3
   3eff8:	mvn	r0, r0
   3effc:	mvn	ip, #36	; 0x24
   3f000:	subs	r0, ip, r0
   3f004:	mvn	ip, #0
   3f008:	sbcs	r3, ip, r3
   3f00c:	blt	3f36c <__assert_fail@plt+0x2c7b4>
   3f010:	b	3f3d0 <__assert_fail@plt+0x2c818>
   3f014:	b	3f018 <__assert_fail@plt+0x2c460>
   3f018:	b	3f164 <__assert_fail@plt+0x2c5ac>
   3f01c:	b	3f164 <__assert_fail@plt+0x2c5ac>
   3f020:	b	3f164 <__assert_fail@plt+0x2c5ac>
   3f024:	b	3f028 <__assert_fail@plt+0x2c470>
   3f028:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3f02c:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3f030:	mov	r2, #0
   3f034:	subs	r3, r0, #1
   3f038:	sbcs	ip, r1, #0
   3f03c:	str	r0, [sp, #1432]	; 0x598
   3f040:	str	r1, [sp, #1428]	; 0x594
   3f044:	str	r2, [sp, #1424]	; 0x590
   3f048:	blt	3f068 <__assert_fail@plt+0x2c4b0>
   3f04c:	b	3f050 <__assert_fail@plt+0x2c498>
   3f050:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3f054:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3f058:	cmp	r0, r1
   3f05c:	movw	r0, #0
   3f060:	movne	r0, #1
   3f064:	str	r0, [sp, #1424]	; 0x590
   3f068:	ldr	r0, [sp, #1424]	; 0x590
   3f06c:	and	r0, r0, #1
   3f070:	ldr	r1, [sp, #1432]	; 0x598
   3f074:	subs	r0, r1, r0
   3f078:	ldr	r2, [sp, #1428]	; 0x594
   3f07c:	sbc	r3, r2, #0
   3f080:	rsbs	r0, r0, #0
   3f084:	rscs	r3, r3, #0
   3f088:	blt	3f36c <__assert_fail@plt+0x2c7b4>
   3f08c:	b	3f3d0 <__assert_fail@plt+0x2c818>
   3f090:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3f094:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3f098:	mov	r2, #0
   3f09c:	subs	r3, r0, #1
   3f0a0:	sbcs	ip, r1, #0
   3f0a4:	str	r0, [sp, #1420]	; 0x58c
   3f0a8:	str	r1, [sp, #1416]	; 0x588
   3f0ac:	str	r2, [sp, #1412]	; 0x584
   3f0b0:	blt	3f0d0 <__assert_fail@plt+0x2c518>
   3f0b4:	b	3f0b8 <__assert_fail@plt+0x2c500>
   3f0b8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3f0bc:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3f0c0:	cmp	r0, r1
   3f0c4:	movw	r0, #0
   3f0c8:	movne	r0, #1
   3f0cc:	str	r0, [sp, #1412]	; 0x584
   3f0d0:	ldr	r0, [sp, #1412]	; 0x584
   3f0d4:	and	r0, r0, #1
   3f0d8:	ldr	r1, [sp, #1420]	; 0x58c
   3f0dc:	subs	r0, r1, r0
   3f0e0:	ldr	r2, [sp, #1416]	; 0x588
   3f0e4:	sbc	r3, r2, #0
   3f0e8:	subs	r0, r0, #1
   3f0ec:	sbcs	r3, r3, #0
   3f0f0:	blt	3f3d0 <__assert_fail@plt+0x2c818>
   3f0f4:	b	3f0f8 <__assert_fail@plt+0x2c540>
   3f0f8:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3f0fc:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3f100:	mov	r2, #0
   3f104:	subs	r3, r0, #1
   3f108:	sbcs	ip, r1, #0
   3f10c:	str	r0, [sp, #1408]	; 0x580
   3f110:	str	r1, [sp, #1404]	; 0x57c
   3f114:	str	r2, [sp, #1400]	; 0x578
   3f118:	blt	3f138 <__assert_fail@plt+0x2c580>
   3f11c:	b	3f120 <__assert_fail@plt+0x2c568>
   3f120:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3f124:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3f128:	cmp	r0, r1
   3f12c:	movw	r0, #0
   3f130:	movne	r0, #1
   3f134:	str	r0, [sp, #1400]	; 0x578
   3f138:	ldr	r0, [sp, #1400]	; 0x578
   3f13c:	mvn	r0, r0
   3f140:	mvn	r1, #1
   3f144:	orr	r0, r0, r1
   3f148:	ldr	r1, [sp, #1408]	; 0x580
   3f14c:	adds	r0, r0, r1
   3f150:	ldr	r2, [sp, #1404]	; 0x57c
   3f154:	sbc	r3, r2, #0
   3f158:	cmn	r3, #1
   3f15c:	bgt	3f36c <__assert_fail@plt+0x2c7b4>
   3f160:	b	3f3d0 <__assert_fail@plt+0x2c818>
   3f164:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3f168:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3f16c:	mov	r2, #0
   3f170:	subs	r3, r0, #1
   3f174:	sbcs	ip, r1, #0
   3f178:	str	r0, [sp, #1396]	; 0x574
   3f17c:	str	r1, [sp, #1392]	; 0x570
   3f180:	str	r2, [sp, #1388]	; 0x56c
   3f184:	blt	3f1a4 <__assert_fail@plt+0x2c5ec>
   3f188:	b	3f18c <__assert_fail@plt+0x2c5d4>
   3f18c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3f190:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3f194:	cmp	r0, r1
   3f198:	movw	r0, #0
   3f19c:	movne	r0, #1
   3f1a0:	str	r0, [sp, #1388]	; 0x56c
   3f1a4:	ldr	r0, [sp, #1388]	; 0x56c
   3f1a8:	and	r0, r0, #1
   3f1ac:	ldr	r1, [sp, #1396]	; 0x574
   3f1b0:	subs	r0, r1, r0
   3f1b4:	ldr	r2, [sp, #1392]	; 0x570
   3f1b8:	sbc	r3, r2, #0
   3f1bc:	rsbs	r0, r0, #0
   3f1c0:	rscs	r3, r3, #0
   3f1c4:	blt	3f36c <__assert_fail@plt+0x2c7b4>
   3f1c8:	b	3f3d0 <__assert_fail@plt+0x2c818>
   3f1cc:	b	3f1d4 <__assert_fail@plt+0x2c61c>
   3f1d0:	b	3f3d0 <__assert_fail@plt+0x2c818>
   3f1d4:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3f1d8:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3f1dc:	mov	r2, #0
   3f1e0:	subs	r3, r0, #1
   3f1e4:	sbcs	ip, r1, #0
   3f1e8:	str	r0, [sp, #1384]	; 0x568
   3f1ec:	str	r1, [sp, #1380]	; 0x564
   3f1f0:	str	r2, [sp, #1376]	; 0x560
   3f1f4:	blt	3f214 <__assert_fail@plt+0x2c65c>
   3f1f8:	b	3f1fc <__assert_fail@plt+0x2c644>
   3f1fc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3f200:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3f204:	cmp	r0, r1
   3f208:	movw	r0, #0
   3f20c:	movne	r0, #1
   3f210:	str	r0, [sp, #1376]	; 0x560
   3f214:	ldr	r0, [sp, #1376]	; 0x560
   3f218:	and	r0, r0, #1
   3f21c:	ldr	r1, [sp, #1384]	; 0x568
   3f220:	subs	r0, r1, r0
   3f224:	ldr	r2, [sp, #1380]	; 0x564
   3f228:	sbc	r3, r2, #0
   3f22c:	cmn	r3, #1
   3f230:	bgt	3f304 <__assert_fail@plt+0x2c74c>
   3f234:	b	3f238 <__assert_fail@plt+0x2c680>
   3f238:	b	3f23c <__assert_fail@plt+0x2c684>
   3f23c:	b	3f2b8 <__assert_fail@plt+0x2c700>
   3f240:	b	3f2b8 <__assert_fail@plt+0x2c700>
   3f244:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3f248:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3f24c:	mov	r2, #0
   3f250:	subs	r3, r0, #1
   3f254:	sbcs	ip, r1, #0
   3f258:	str	r0, [sp, #1372]	; 0x55c
   3f25c:	str	r1, [sp, #1368]	; 0x558
   3f260:	str	r2, [sp, #1364]	; 0x554
   3f264:	blt	3f284 <__assert_fail@plt+0x2c6cc>
   3f268:	b	3f26c <__assert_fail@plt+0x2c6b4>
   3f26c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3f270:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3f274:	cmp	r0, r1
   3f278:	movw	r0, #0
   3f27c:	movne	r0, #1
   3f280:	str	r0, [sp, #1364]	; 0x554
   3f284:	ldr	r0, [sp, #1364]	; 0x554
   3f288:	and	r0, r0, #1
   3f28c:	ldr	r1, [sp, #1372]	; 0x55c
   3f290:	subs	r0, r1, r0
   3f294:	ldr	r2, [sp, #1368]	; 0x558
   3f298:	sbc	r3, r2, #0
   3f29c:	and	r0, r0, r3
   3f2a0:	cmn	r0, #1
   3f2a4:	bne	3f2b8 <__assert_fail@plt+0x2c700>
   3f2a8:	b	3f2ac <__assert_fail@plt+0x2c6f4>
   3f2ac:	b	3f2b0 <__assert_fail@plt+0x2c6f8>
   3f2b0:	b	3f36c <__assert_fail@plt+0x2c7b4>
   3f2b4:	b	3f36c <__assert_fail@plt+0x2c7b4>
   3f2b8:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3f2bc:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3f2c0:	mov	r2, #0
   3f2c4:	subs	r0, r0, #1
   3f2c8:	sbcs	r1, r1, #0
   3f2cc:	str	r2, [sp, #1360]	; 0x550
   3f2d0:	blt	3f2f0 <__assert_fail@plt+0x2c738>
   3f2d4:	b	3f2d8 <__assert_fail@plt+0x2c720>
   3f2d8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3f2dc:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3f2e0:	cmp	r0, r1
   3f2e4:	movw	r0, #0
   3f2e8:	movne	r0, #1
   3f2ec:	str	r0, [sp, #1360]	; 0x550
   3f2f0:	ldr	r0, [sp, #1360]	; 0x550
   3f2f4:	mov	r1, #1
   3f2f8:	cmp	r1, #0
   3f2fc:	bne	3f36c <__assert_fail@plt+0x2c7b4>
   3f300:	b	3f3d0 <__assert_fail@plt+0x2c818>
   3f304:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3f308:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3f30c:	mov	r2, #0
   3f310:	subs	r3, r0, #1
   3f314:	sbcs	ip, r1, #0
   3f318:	str	r0, [sp, #1356]	; 0x54c
   3f31c:	str	r1, [sp, #1352]	; 0x548
   3f320:	str	r2, [sp, #1348]	; 0x544
   3f324:	blt	3f344 <__assert_fail@plt+0x2c78c>
   3f328:	b	3f32c <__assert_fail@plt+0x2c774>
   3f32c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3f330:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3f334:	cmp	r0, r1
   3f338:	movw	r0, #0
   3f33c:	movne	r0, #1
   3f340:	str	r0, [sp, #1348]	; 0x544
   3f344:	ldr	r0, [sp, #1348]	; 0x544
   3f348:	and	r0, r0, #1
   3f34c:	ldr	r1, [sp, #1356]	; 0x54c
   3f350:	subs	r0, r1, r0
   3f354:	ldr	r2, [sp, #1352]	; 0x548
   3f358:	sbc	r3, r2, #0
   3f35c:	subs	r0, r0, #37	; 0x25
   3f360:	sbcs	r3, r3, #0
   3f364:	blt	3f3d0 <__assert_fail@plt+0x2c818>
   3f368:	b	3f36c <__assert_fail@plt+0x2c7b4>
   3f36c:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3f370:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3f374:	mov	r2, #0
   3f378:	subs	r3, r0, #1
   3f37c:	sbcs	r1, r1, #0
   3f380:	str	r0, [sp, #1344]	; 0x540
   3f384:	str	r2, [sp, #1340]	; 0x53c
   3f388:	blt	3f3a8 <__assert_fail@plt+0x2c7f0>
   3f38c:	b	3f390 <__assert_fail@plt+0x2c7d8>
   3f390:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3f394:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3f398:	cmp	r0, r1
   3f39c:	movw	r0, #0
   3f3a0:	movne	r0, #1
   3f3a4:	str	r0, [sp, #1340]	; 0x53c
   3f3a8:	ldr	r0, [sp, #1340]	; 0x53c
   3f3ac:	and	r0, r0, #1
   3f3b0:	ldr	r1, [sp, #1344]	; 0x540
   3f3b4:	sub	r0, r1, r0
   3f3b8:	rsb	r0, r0, r0, lsl #3
   3f3bc:	uxtb	r0, r0
   3f3c0:	mov	r2, #0
   3f3c4:	str	r2, [fp, #-932]	; 0xfffffc5c
   3f3c8:	str	r0, [fp, #-936]	; 0xfffffc58
   3f3cc:	b	4220c <__assert_fail@plt+0x2f654>
   3f3d0:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3f3d4:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3f3d8:	mov	r2, #0
   3f3dc:	subs	r3, r0, #1
   3f3e0:	sbcs	r1, r1, #0
   3f3e4:	str	r0, [sp, #1336]	; 0x538
   3f3e8:	str	r2, [sp, #1332]	; 0x534
   3f3ec:	blt	3f40c <__assert_fail@plt+0x2c854>
   3f3f0:	b	3f3f4 <__assert_fail@plt+0x2c83c>
   3f3f4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3f3f8:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3f3fc:	cmp	r0, r1
   3f400:	movw	r0, #0
   3f404:	movne	r0, #1
   3f408:	str	r0, [sp, #1332]	; 0x534
   3f40c:	ldr	r0, [sp, #1332]	; 0x534
   3f410:	and	r0, r0, #1
   3f414:	ldr	r1, [sp, #1336]	; 0x538
   3f418:	sub	r0, r1, r0
   3f41c:	rsb	r0, r0, r0, lsl #3
   3f420:	uxtb	r0, r0
   3f424:	mov	r2, #0
   3f428:	str	r2, [fp, #-932]	; 0xfffffc5c
   3f42c:	str	r0, [fp, #-936]	; 0xfffffc58
   3f430:	b	42110 <__assert_fail@plt+0x2f558>
   3f434:	b	3ff74 <__assert_fail@plt+0x2d3bc>
   3f438:	b	3f43c <__assert_fail@plt+0x2c884>
   3f43c:	b	3f764 <__assert_fail@plt+0x2cbac>
   3f440:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3f444:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3f448:	mov	r2, #0
   3f44c:	subs	r3, r0, #1
   3f450:	sbcs	ip, r1, #0
   3f454:	str	r0, [sp, #1328]	; 0x530
   3f458:	str	r1, [sp, #1324]	; 0x52c
   3f45c:	str	r2, [sp, #1320]	; 0x528
   3f460:	blt	3f480 <__assert_fail@plt+0x2c8c8>
   3f464:	b	3f468 <__assert_fail@plt+0x2c8b0>
   3f468:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3f46c:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3f470:	cmp	r0, r1
   3f474:	movw	r0, #0
   3f478:	movne	r0, #1
   3f47c:	str	r0, [sp, #1320]	; 0x528
   3f480:	ldr	r0, [sp, #1320]	; 0x528
   3f484:	and	r0, r0, #1
   3f488:	ldr	r1, [sp, #1328]	; 0x530
   3f48c:	subs	r0, r1, r0
   3f490:	ldr	r2, [sp, #1324]	; 0x52c
   3f494:	sbc	r3, r2, #0
   3f498:	cmn	r3, #1
   3f49c:	bgt	3f590 <__assert_fail@plt+0x2c9d8>
   3f4a0:	b	3f4a4 <__assert_fail@plt+0x2c8ec>
   3f4a4:	b	3f4a8 <__assert_fail@plt+0x2c8f0>
   3f4a8:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3f4ac:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3f4b0:	mov	r2, #0
   3f4b4:	subs	r3, r0, #1
   3f4b8:	sbcs	ip, r1, #0
   3f4bc:	str	r0, [sp, #1316]	; 0x524
   3f4c0:	str	r1, [sp, #1312]	; 0x520
   3f4c4:	str	r2, [sp, #1308]	; 0x51c
   3f4c8:	blt	3f4e8 <__assert_fail@plt+0x2c930>
   3f4cc:	b	3f4d0 <__assert_fail@plt+0x2c918>
   3f4d0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3f4d4:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3f4d8:	cmp	r0, r1
   3f4dc:	movw	r0, #0
   3f4e0:	movne	r0, #1
   3f4e4:	str	r0, [sp, #1308]	; 0x51c
   3f4e8:	ldr	r0, [sp, #1308]	; 0x51c
   3f4ec:	and	r0, r0, #1
   3f4f0:	ldr	r1, [sp, #1316]	; 0x524
   3f4f4:	subs	r0, r1, r0
   3f4f8:	ldr	r2, [sp, #1312]	; 0x520
   3f4fc:	sbc	r3, r2, #0
   3f500:	movw	ip, #4681	; 0x1249
   3f504:	subs	r0, r0, ip
   3f508:	sbcs	r3, r3, #0
   3f50c:	blt	3f934 <__assert_fail@plt+0x2cd7c>
   3f510:	b	3f998 <__assert_fail@plt+0x2cde0>
   3f514:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3f518:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3f51c:	mov	r2, #0
   3f520:	subs	r3, r0, #1
   3f524:	sbcs	ip, r1, #0
   3f528:	str	r0, [sp, #1304]	; 0x518
   3f52c:	str	r1, [sp, #1300]	; 0x514
   3f530:	str	r2, [sp, #1296]	; 0x510
   3f534:	blt	3f554 <__assert_fail@plt+0x2c99c>
   3f538:	b	3f53c <__assert_fail@plt+0x2c984>
   3f53c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3f540:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3f544:	cmp	r0, r1
   3f548:	movw	r0, #0
   3f54c:	movne	r0, #1
   3f550:	str	r0, [sp, #1296]	; 0x510
   3f554:	ldr	r0, [sp, #1296]	; 0x510
   3f558:	and	r0, r0, #1
   3f55c:	ldr	r1, [sp, #1304]	; 0x518
   3f560:	subs	r0, r1, r0
   3f564:	ldr	r2, [sp, #1300]	; 0x514
   3f568:	sbc	r3, r2, #0
   3f56c:	mvn	r3, r3
   3f570:	mvn	r0, r0
   3f574:	movw	ip, #60854	; 0xedb6
   3f578:	movt	ip, #65535	; 0xffff
   3f57c:	subs	r0, ip, r0
   3f580:	mvn	ip, #0
   3f584:	sbcs	r3, ip, r3
   3f588:	blt	3f934 <__assert_fail@plt+0x2cd7c>
   3f58c:	b	3f998 <__assert_fail@plt+0x2cde0>
   3f590:	b	3f594 <__assert_fail@plt+0x2c9dc>
   3f594:	b	3f6f0 <__assert_fail@plt+0x2cb38>
   3f598:	b	3f6f0 <__assert_fail@plt+0x2cb38>
   3f59c:	b	3f6f0 <__assert_fail@plt+0x2cb38>
   3f5a0:	b	3f5a4 <__assert_fail@plt+0x2c9ec>
   3f5a4:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3f5a8:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3f5ac:	mov	r2, #0
   3f5b0:	subs	r3, r0, #1
   3f5b4:	sbcs	ip, r1, #0
   3f5b8:	str	r0, [sp, #1292]	; 0x50c
   3f5bc:	str	r1, [sp, #1288]	; 0x508
   3f5c0:	str	r2, [sp, #1284]	; 0x504
   3f5c4:	blt	3f5e4 <__assert_fail@plt+0x2ca2c>
   3f5c8:	b	3f5cc <__assert_fail@plt+0x2ca14>
   3f5cc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3f5d0:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3f5d4:	cmp	r0, r1
   3f5d8:	movw	r0, #0
   3f5dc:	movne	r0, #1
   3f5e0:	str	r0, [sp, #1284]	; 0x504
   3f5e4:	ldr	r0, [sp, #1284]	; 0x504
   3f5e8:	and	r0, r0, #1
   3f5ec:	ldr	r1, [sp, #1292]	; 0x50c
   3f5f0:	subs	r0, r1, r0
   3f5f4:	ldr	r2, [sp, #1288]	; 0x508
   3f5f8:	sbc	r3, r2, #0
   3f5fc:	subs	r0, r0, #32768	; 0x8000
   3f600:	sbc	r3, r3, #0
   3f604:	rsbs	r0, r0, #0
   3f608:	rscs	r3, r3, #0
   3f60c:	blt	3f934 <__assert_fail@plt+0x2cd7c>
   3f610:	b	3f998 <__assert_fail@plt+0x2cde0>
   3f614:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3f618:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3f61c:	mov	r2, #0
   3f620:	subs	r3, r0, #1
   3f624:	sbcs	ip, r1, #0
   3f628:	str	r0, [sp, #1280]	; 0x500
   3f62c:	str	r1, [sp, #1276]	; 0x4fc
   3f630:	str	r2, [sp, #1272]	; 0x4f8
   3f634:	blt	3f654 <__assert_fail@plt+0x2ca9c>
   3f638:	b	3f63c <__assert_fail@plt+0x2ca84>
   3f63c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3f640:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3f644:	cmp	r0, r1
   3f648:	movw	r0, #0
   3f64c:	movne	r0, #1
   3f650:	str	r0, [sp, #1272]	; 0x4f8
   3f654:	ldr	r0, [sp, #1272]	; 0x4f8
   3f658:	and	r0, r0, #1
   3f65c:	ldr	r1, [sp, #1280]	; 0x500
   3f660:	subs	r0, r1, r0
   3f664:	ldr	r2, [sp, #1276]	; 0x4fc
   3f668:	sbc	r3, r2, #0
   3f66c:	subs	r0, r0, #1
   3f670:	sbcs	r3, r3, #0
   3f674:	blt	3f998 <__assert_fail@plt+0x2cde0>
   3f678:	b	3f67c <__assert_fail@plt+0x2cac4>
   3f67c:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3f680:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3f684:	mov	r2, #0
   3f688:	subs	r3, r0, #1
   3f68c:	sbcs	ip, r1, #0
   3f690:	str	r0, [sp, #1268]	; 0x4f4
   3f694:	str	r1, [sp, #1264]	; 0x4f0
   3f698:	str	r2, [sp, #1260]	; 0x4ec
   3f69c:	blt	3f6bc <__assert_fail@plt+0x2cb04>
   3f6a0:	b	3f6a4 <__assert_fail@plt+0x2caec>
   3f6a4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3f6a8:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3f6ac:	cmp	r0, r1
   3f6b0:	movw	r0, #0
   3f6b4:	movne	r0, #1
   3f6b8:	str	r0, [sp, #1260]	; 0x4ec
   3f6bc:	ldr	r0, [sp, #1260]	; 0x4ec
   3f6c0:	mvn	r0, r0
   3f6c4:	mvn	r1, #1
   3f6c8:	orr	r0, r0, r1
   3f6cc:	ldr	r1, [sp, #1268]	; 0x4f4
   3f6d0:	adds	r0, r0, r1
   3f6d4:	ldr	r2, [sp, #1264]	; 0x4f0
   3f6d8:	sbc	r3, r2, #0
   3f6dc:	movw	ip, #32767	; 0x7fff
   3f6e0:	subs	r0, ip, r0
   3f6e4:	rscs	r3, r3, #0
   3f6e8:	blt	3f934 <__assert_fail@plt+0x2cd7c>
   3f6ec:	b	3f998 <__assert_fail@plt+0x2cde0>
   3f6f0:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3f6f4:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3f6f8:	mov	r2, #0
   3f6fc:	subs	r3, r0, #1
   3f700:	sbcs	ip, r1, #0
   3f704:	str	r0, [sp, #1256]	; 0x4e8
   3f708:	str	r1, [sp, #1252]	; 0x4e4
   3f70c:	str	r2, [sp, #1248]	; 0x4e0
   3f710:	blt	3f730 <__assert_fail@plt+0x2cb78>
   3f714:	b	3f718 <__assert_fail@plt+0x2cb60>
   3f718:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3f71c:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3f720:	cmp	r0, r1
   3f724:	movw	r0, #0
   3f728:	movne	r0, #1
   3f72c:	str	r0, [sp, #1248]	; 0x4e0
   3f730:	ldr	r0, [sp, #1248]	; 0x4e0
   3f734:	and	r0, r0, #1
   3f738:	ldr	r1, [sp, #1256]	; 0x4e8
   3f73c:	subs	r0, r1, r0
   3f740:	ldr	r2, [sp, #1252]	; 0x4e4
   3f744:	sbc	r3, r2, #0
   3f748:	movw	ip, #60855	; 0xedb7
   3f74c:	movt	ip, #65535	; 0xffff
   3f750:	subs	r0, ip, r0
   3f754:	mvn	ip, #0
   3f758:	sbcs	r3, ip, r3
   3f75c:	blt	3f934 <__assert_fail@plt+0x2cd7c>
   3f760:	b	3f998 <__assert_fail@plt+0x2cde0>
   3f764:	b	3f76c <__assert_fail@plt+0x2cbb4>
   3f768:	b	3f998 <__assert_fail@plt+0x2cde0>
   3f76c:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3f770:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3f774:	mov	r2, #0
   3f778:	subs	r3, r0, #1
   3f77c:	sbcs	ip, r1, #0
   3f780:	str	r0, [sp, #1244]	; 0x4dc
   3f784:	str	r1, [sp, #1240]	; 0x4d8
   3f788:	str	r2, [sp, #1236]	; 0x4d4
   3f78c:	blt	3f7ac <__assert_fail@plt+0x2cbf4>
   3f790:	b	3f794 <__assert_fail@plt+0x2cbdc>
   3f794:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3f798:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3f79c:	cmp	r0, r1
   3f7a0:	movw	r0, #0
   3f7a4:	movne	r0, #1
   3f7a8:	str	r0, [sp, #1236]	; 0x4d4
   3f7ac:	ldr	r0, [sp, #1236]	; 0x4d4
   3f7b0:	and	r0, r0, #1
   3f7b4:	ldr	r1, [sp, #1244]	; 0x4dc
   3f7b8:	subs	r0, r1, r0
   3f7bc:	ldr	r2, [sp, #1240]	; 0x4d8
   3f7c0:	sbc	r3, r2, #0
   3f7c4:	cmn	r3, #1
   3f7c8:	bgt	3f8c8 <__assert_fail@plt+0x2cd10>
   3f7cc:	b	3f7d0 <__assert_fail@plt+0x2cc18>
   3f7d0:	b	3f7d4 <__assert_fail@plt+0x2cc1c>
   3f7d4:	b	3f850 <__assert_fail@plt+0x2cc98>
   3f7d8:	b	3f850 <__assert_fail@plt+0x2cc98>
   3f7dc:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3f7e0:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3f7e4:	mov	r2, #0
   3f7e8:	subs	r3, r0, #1
   3f7ec:	sbcs	ip, r1, #0
   3f7f0:	str	r0, [sp, #1232]	; 0x4d0
   3f7f4:	str	r1, [sp, #1228]	; 0x4cc
   3f7f8:	str	r2, [sp, #1224]	; 0x4c8
   3f7fc:	blt	3f81c <__assert_fail@plt+0x2cc64>
   3f800:	b	3f804 <__assert_fail@plt+0x2cc4c>
   3f804:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3f808:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3f80c:	cmp	r0, r1
   3f810:	movw	r0, #0
   3f814:	movne	r0, #1
   3f818:	str	r0, [sp, #1224]	; 0x4c8
   3f81c:	ldr	r0, [sp, #1224]	; 0x4c8
   3f820:	and	r0, r0, #1
   3f824:	ldr	r1, [sp, #1232]	; 0x4d0
   3f828:	subs	r0, r1, r0
   3f82c:	ldr	r2, [sp, #1228]	; 0x4cc
   3f830:	sbc	r3, r2, #0
   3f834:	and	r0, r0, r3
   3f838:	cmn	r0, #1
   3f83c:	bne	3f850 <__assert_fail@plt+0x2cc98>
   3f840:	b	3f844 <__assert_fail@plt+0x2cc8c>
   3f844:	b	3f848 <__assert_fail@plt+0x2cc90>
   3f848:	b	3f998 <__assert_fail@plt+0x2cde0>
   3f84c:	b	3f998 <__assert_fail@plt+0x2cde0>
   3f850:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3f854:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3f858:	mov	r2, #0
   3f85c:	subs	r3, r0, #1
   3f860:	sbcs	ip, r1, #0
   3f864:	str	r0, [sp, #1220]	; 0x4c4
   3f868:	str	r1, [sp, #1216]	; 0x4c0
   3f86c:	str	r2, [sp, #1212]	; 0x4bc
   3f870:	blt	3f890 <__assert_fail@plt+0x2ccd8>
   3f874:	b	3f878 <__assert_fail@plt+0x2ccc0>
   3f878:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3f87c:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3f880:	cmp	r0, r1
   3f884:	movw	r0, #0
   3f888:	movne	r0, #1
   3f88c:	str	r0, [sp, #1212]	; 0x4bc
   3f890:	ldr	r0, [sp, #1212]	; 0x4bc
   3f894:	and	r0, r0, #1
   3f898:	ldr	r1, [sp, #1220]	; 0x4c4
   3f89c:	subs	r2, r1, r0
   3f8a0:	ldr	r0, [sp, #1216]	; 0x4c0
   3f8a4:	sbc	r3, r0, #0
   3f8a8:	movw	r0, #32768	; 0x8000
   3f8ac:	movt	r0, #65535	; 0xffff
   3f8b0:	mvn	r1, #0
   3f8b4:	bl	75338 <__assert_fail@plt+0x62780>
   3f8b8:	subs	r0, r0, #7
   3f8bc:	sbcs	r1, r1, #0
   3f8c0:	blt	3f934 <__assert_fail@plt+0x2cd7c>
   3f8c4:	b	3f998 <__assert_fail@plt+0x2cde0>
   3f8c8:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3f8cc:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3f8d0:	mov	r2, #0
   3f8d4:	subs	r3, r0, #1
   3f8d8:	sbcs	ip, r1, #0
   3f8dc:	str	r0, [sp, #1208]	; 0x4b8
   3f8e0:	str	r1, [sp, #1204]	; 0x4b4
   3f8e4:	str	r2, [sp, #1200]	; 0x4b0
   3f8e8:	blt	3f908 <__assert_fail@plt+0x2cd50>
   3f8ec:	b	3f8f0 <__assert_fail@plt+0x2cd38>
   3f8f0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3f8f4:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3f8f8:	cmp	r0, r1
   3f8fc:	movw	r0, #0
   3f900:	movne	r0, #1
   3f904:	str	r0, [sp, #1200]	; 0x4b0
   3f908:	ldr	r0, [sp, #1200]	; 0x4b0
   3f90c:	and	r0, r0, #1
   3f910:	ldr	r1, [sp, #1208]	; 0x4b8
   3f914:	subs	r0, r1, r0
   3f918:	ldr	r2, [sp, #1204]	; 0x4b4
   3f91c:	sbc	r3, r2, #0
   3f920:	movw	ip, #4682	; 0x124a
   3f924:	subs	r0, r0, ip
   3f928:	sbcs	r3, r3, #0
   3f92c:	blt	3f998 <__assert_fail@plt+0x2cde0>
   3f930:	b	3f934 <__assert_fail@plt+0x2cd7c>
   3f934:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3f938:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3f93c:	mov	r2, #0
   3f940:	subs	r3, r0, #1
   3f944:	sbcs	r1, r1, #0
   3f948:	str	r0, [sp, #1196]	; 0x4ac
   3f94c:	str	r2, [sp, #1192]	; 0x4a8
   3f950:	blt	3f970 <__assert_fail@plt+0x2cdb8>
   3f954:	b	3f958 <__assert_fail@plt+0x2cda0>
   3f958:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3f95c:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3f960:	cmp	r0, r1
   3f964:	movw	r0, #0
   3f968:	movne	r0, #1
   3f96c:	str	r0, [sp, #1192]	; 0x4a8
   3f970:	ldr	r0, [sp, #1192]	; 0x4a8
   3f974:	and	r0, r0, #1
   3f978:	ldr	r1, [sp, #1196]	; 0x4ac
   3f97c:	sub	r0, r1, r0
   3f980:	rsb	r0, r0, r0, lsl #3
   3f984:	sxth	r0, r0
   3f988:	asr	r2, r0, #31
   3f98c:	str	r0, [fp, #-936]	; 0xfffffc58
   3f990:	str	r2, [fp, #-932]	; 0xfffffc5c
   3f994:	b	4220c <__assert_fail@plt+0x2f654>
   3f998:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3f99c:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3f9a0:	mov	r2, #0
   3f9a4:	subs	r3, r0, #1
   3f9a8:	sbcs	r1, r1, #0
   3f9ac:	str	r0, [sp, #1188]	; 0x4a4
   3f9b0:	str	r2, [sp, #1184]	; 0x4a0
   3f9b4:	blt	3f9d4 <__assert_fail@plt+0x2ce1c>
   3f9b8:	b	3f9bc <__assert_fail@plt+0x2ce04>
   3f9bc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3f9c0:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3f9c4:	cmp	r0, r1
   3f9c8:	movw	r0, #0
   3f9cc:	movne	r0, #1
   3f9d0:	str	r0, [sp, #1184]	; 0x4a0
   3f9d4:	ldr	r0, [sp, #1184]	; 0x4a0
   3f9d8:	and	r0, r0, #1
   3f9dc:	ldr	r1, [sp, #1188]	; 0x4a4
   3f9e0:	sub	r0, r1, r0
   3f9e4:	rsb	r0, r0, r0, lsl #3
   3f9e8:	sxth	r0, r0
   3f9ec:	asr	r2, r0, #31
   3f9f0:	str	r0, [fp, #-936]	; 0xfffffc58
   3f9f4:	str	r2, [fp, #-932]	; 0xfffffc5c
   3f9f8:	b	42110 <__assert_fail@plt+0x2f558>
   3f9fc:	b	3fd08 <__assert_fail@plt+0x2d150>
   3fa00:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3fa04:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3fa08:	mov	r2, #0
   3fa0c:	subs	r3, r0, #1
   3fa10:	sbcs	ip, r1, #0
   3fa14:	str	r0, [sp, #1180]	; 0x49c
   3fa18:	str	r1, [sp, #1176]	; 0x498
   3fa1c:	str	r2, [sp, #1172]	; 0x494
   3fa20:	blt	3fa40 <__assert_fail@plt+0x2ce88>
   3fa24:	b	3fa28 <__assert_fail@plt+0x2ce70>
   3fa28:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3fa2c:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3fa30:	cmp	r0, r1
   3fa34:	movw	r0, #0
   3fa38:	movne	r0, #1
   3fa3c:	str	r0, [sp, #1172]	; 0x494
   3fa40:	ldr	r0, [sp, #1172]	; 0x494
   3fa44:	and	r0, r0, #1
   3fa48:	ldr	r1, [sp, #1180]	; 0x49c
   3fa4c:	subs	r0, r1, r0
   3fa50:	ldr	r2, [sp, #1176]	; 0x498
   3fa54:	sbc	r3, r2, #0
   3fa58:	cmn	r3, #1
   3fa5c:	bgt	3fb50 <__assert_fail@plt+0x2cf98>
   3fa60:	b	3fa64 <__assert_fail@plt+0x2ceac>
   3fa64:	b	3fa68 <__assert_fail@plt+0x2ceb0>
   3fa68:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3fa6c:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3fa70:	mov	r2, #0
   3fa74:	subs	r3, r0, #1
   3fa78:	sbcs	ip, r1, #0
   3fa7c:	str	r0, [sp, #1168]	; 0x490
   3fa80:	str	r1, [sp, #1164]	; 0x48c
   3fa84:	str	r2, [sp, #1160]	; 0x488
   3fa88:	blt	3faa8 <__assert_fail@plt+0x2cef0>
   3fa8c:	b	3fa90 <__assert_fail@plt+0x2ced8>
   3fa90:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3fa94:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3fa98:	cmp	r0, r1
   3fa9c:	movw	r0, #0
   3faa0:	movne	r0, #1
   3faa4:	str	r0, [sp, #1160]	; 0x488
   3faa8:	ldr	r0, [sp, #1160]	; 0x488
   3faac:	and	r0, r0, #1
   3fab0:	ldr	r1, [sp, #1168]	; 0x490
   3fab4:	subs	r0, r1, r0
   3fab8:	ldr	r2, [sp, #1164]	; 0x48c
   3fabc:	sbc	r3, r2, #0
   3fac0:	movw	ip, #9362	; 0x2492
   3fac4:	subs	r0, r0, ip
   3fac8:	sbcs	r3, r3, #0
   3facc:	blt	3feac <__assert_fail@plt+0x2d2f4>
   3fad0:	b	3ff10 <__assert_fail@plt+0x2d358>
   3fad4:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3fad8:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3fadc:	mov	r2, #0
   3fae0:	subs	r3, r0, #1
   3fae4:	sbcs	ip, r1, #0
   3fae8:	str	r0, [sp, #1156]	; 0x484
   3faec:	str	r1, [sp, #1152]	; 0x480
   3faf0:	str	r2, [sp, #1148]	; 0x47c
   3faf4:	blt	3fb14 <__assert_fail@plt+0x2cf5c>
   3faf8:	b	3fafc <__assert_fail@plt+0x2cf44>
   3fafc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3fb00:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3fb04:	cmp	r0, r1
   3fb08:	movw	r0, #0
   3fb0c:	movne	r0, #1
   3fb10:	str	r0, [sp, #1148]	; 0x47c
   3fb14:	ldr	r0, [sp, #1148]	; 0x47c
   3fb18:	and	r0, r0, #1
   3fb1c:	ldr	r1, [sp, #1156]	; 0x484
   3fb20:	subs	r0, r1, r0
   3fb24:	ldr	r2, [sp, #1152]	; 0x480
   3fb28:	sbc	r3, r2, #0
   3fb2c:	mvn	r3, r3
   3fb30:	mvn	r0, r0
   3fb34:	movw	ip, #56173	; 0xdb6d
   3fb38:	movt	ip, #65535	; 0xffff
   3fb3c:	subs	r0, ip, r0
   3fb40:	mvn	ip, #0
   3fb44:	sbcs	r3, ip, r3
   3fb48:	blt	3feac <__assert_fail@plt+0x2d2f4>
   3fb4c:	b	3ff10 <__assert_fail@plt+0x2d358>
   3fb50:	b	3fb54 <__assert_fail@plt+0x2cf9c>
   3fb54:	b	3fca0 <__assert_fail@plt+0x2d0e8>
   3fb58:	b	3fca0 <__assert_fail@plt+0x2d0e8>
   3fb5c:	b	3fca0 <__assert_fail@plt+0x2d0e8>
   3fb60:	b	3fb64 <__assert_fail@plt+0x2cfac>
   3fb64:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3fb68:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3fb6c:	mov	r2, #0
   3fb70:	subs	r3, r0, #1
   3fb74:	sbcs	ip, r1, #0
   3fb78:	str	r0, [sp, #1144]	; 0x478
   3fb7c:	str	r1, [sp, #1140]	; 0x474
   3fb80:	str	r2, [sp, #1136]	; 0x470
   3fb84:	blt	3fba4 <__assert_fail@plt+0x2cfec>
   3fb88:	b	3fb8c <__assert_fail@plt+0x2cfd4>
   3fb8c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3fb90:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3fb94:	cmp	r0, r1
   3fb98:	movw	r0, #0
   3fb9c:	movne	r0, #1
   3fba0:	str	r0, [sp, #1136]	; 0x470
   3fba4:	ldr	r0, [sp, #1136]	; 0x470
   3fba8:	and	r0, r0, #1
   3fbac:	ldr	r1, [sp, #1144]	; 0x478
   3fbb0:	subs	r0, r1, r0
   3fbb4:	ldr	r2, [sp, #1140]	; 0x474
   3fbb8:	sbc	r3, r2, #0
   3fbbc:	rsbs	r0, r0, #0
   3fbc0:	rscs	r3, r3, #0
   3fbc4:	blt	3feac <__assert_fail@plt+0x2d2f4>
   3fbc8:	b	3ff10 <__assert_fail@plt+0x2d358>
   3fbcc:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3fbd0:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3fbd4:	mov	r2, #0
   3fbd8:	subs	r3, r0, #1
   3fbdc:	sbcs	ip, r1, #0
   3fbe0:	str	r0, [sp, #1132]	; 0x46c
   3fbe4:	str	r1, [sp, #1128]	; 0x468
   3fbe8:	str	r2, [sp, #1124]	; 0x464
   3fbec:	blt	3fc0c <__assert_fail@plt+0x2d054>
   3fbf0:	b	3fbf4 <__assert_fail@plt+0x2d03c>
   3fbf4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3fbf8:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3fbfc:	cmp	r0, r1
   3fc00:	movw	r0, #0
   3fc04:	movne	r0, #1
   3fc08:	str	r0, [sp, #1124]	; 0x464
   3fc0c:	ldr	r0, [sp, #1124]	; 0x464
   3fc10:	and	r0, r0, #1
   3fc14:	ldr	r1, [sp, #1132]	; 0x46c
   3fc18:	subs	r0, r1, r0
   3fc1c:	ldr	r2, [sp, #1128]	; 0x468
   3fc20:	sbc	r3, r2, #0
   3fc24:	subs	r0, r0, #1
   3fc28:	sbcs	r3, r3, #0
   3fc2c:	blt	3ff10 <__assert_fail@plt+0x2d358>
   3fc30:	b	3fc34 <__assert_fail@plt+0x2d07c>
   3fc34:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3fc38:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3fc3c:	mov	r2, #0
   3fc40:	subs	r3, r0, #1
   3fc44:	sbcs	ip, r1, #0
   3fc48:	str	r0, [sp, #1120]	; 0x460
   3fc4c:	str	r1, [sp, #1116]	; 0x45c
   3fc50:	str	r2, [sp, #1112]	; 0x458
   3fc54:	blt	3fc74 <__assert_fail@plt+0x2d0bc>
   3fc58:	b	3fc5c <__assert_fail@plt+0x2d0a4>
   3fc5c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3fc60:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3fc64:	cmp	r0, r1
   3fc68:	movw	r0, #0
   3fc6c:	movne	r0, #1
   3fc70:	str	r0, [sp, #1112]	; 0x458
   3fc74:	ldr	r0, [sp, #1112]	; 0x458
   3fc78:	mvn	r0, r0
   3fc7c:	mvn	r1, #1
   3fc80:	orr	r0, r0, r1
   3fc84:	ldr	r1, [sp, #1120]	; 0x460
   3fc88:	adds	r0, r0, r1
   3fc8c:	ldr	r2, [sp, #1116]	; 0x45c
   3fc90:	sbc	r3, r2, #0
   3fc94:	cmn	r3, #1
   3fc98:	bgt	3feac <__assert_fail@plt+0x2d2f4>
   3fc9c:	b	3ff10 <__assert_fail@plt+0x2d358>
   3fca0:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3fca4:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3fca8:	mov	r2, #0
   3fcac:	subs	r3, r0, #1
   3fcb0:	sbcs	ip, r1, #0
   3fcb4:	str	r0, [sp, #1108]	; 0x454
   3fcb8:	str	r1, [sp, #1104]	; 0x450
   3fcbc:	str	r2, [sp, #1100]	; 0x44c
   3fcc0:	blt	3fce0 <__assert_fail@plt+0x2d128>
   3fcc4:	b	3fcc8 <__assert_fail@plt+0x2d110>
   3fcc8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3fccc:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3fcd0:	cmp	r0, r1
   3fcd4:	movw	r0, #0
   3fcd8:	movne	r0, #1
   3fcdc:	str	r0, [sp, #1100]	; 0x44c
   3fce0:	ldr	r0, [sp, #1100]	; 0x44c
   3fce4:	and	r0, r0, #1
   3fce8:	ldr	r1, [sp, #1108]	; 0x454
   3fcec:	subs	r0, r1, r0
   3fcf0:	ldr	r2, [sp, #1104]	; 0x450
   3fcf4:	sbc	r3, r2, #0
   3fcf8:	rsbs	r0, r0, #0
   3fcfc:	rscs	r3, r3, #0
   3fd00:	blt	3feac <__assert_fail@plt+0x2d2f4>
   3fd04:	b	3ff10 <__assert_fail@plt+0x2d358>
   3fd08:	b	3fd10 <__assert_fail@plt+0x2d158>
   3fd0c:	b	3ff10 <__assert_fail@plt+0x2d358>
   3fd10:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3fd14:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3fd18:	mov	r2, #0
   3fd1c:	subs	r3, r0, #1
   3fd20:	sbcs	ip, r1, #0
   3fd24:	str	r0, [sp, #1096]	; 0x448
   3fd28:	str	r1, [sp, #1092]	; 0x444
   3fd2c:	str	r2, [sp, #1088]	; 0x440
   3fd30:	blt	3fd50 <__assert_fail@plt+0x2d198>
   3fd34:	b	3fd38 <__assert_fail@plt+0x2d180>
   3fd38:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3fd3c:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3fd40:	cmp	r0, r1
   3fd44:	movw	r0, #0
   3fd48:	movne	r0, #1
   3fd4c:	str	r0, [sp, #1088]	; 0x440
   3fd50:	ldr	r0, [sp, #1088]	; 0x440
   3fd54:	and	r0, r0, #1
   3fd58:	ldr	r1, [sp, #1096]	; 0x448
   3fd5c:	subs	r0, r1, r0
   3fd60:	ldr	r2, [sp, #1092]	; 0x444
   3fd64:	sbc	r3, r2, #0
   3fd68:	cmn	r3, #1
   3fd6c:	bgt	3fe40 <__assert_fail@plt+0x2d288>
   3fd70:	b	3fd74 <__assert_fail@plt+0x2d1bc>
   3fd74:	b	3fd78 <__assert_fail@plt+0x2d1c0>
   3fd78:	b	3fdf4 <__assert_fail@plt+0x2d23c>
   3fd7c:	b	3fdf4 <__assert_fail@plt+0x2d23c>
   3fd80:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3fd84:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3fd88:	mov	r2, #0
   3fd8c:	subs	r3, r0, #1
   3fd90:	sbcs	ip, r1, #0
   3fd94:	str	r0, [sp, #1084]	; 0x43c
   3fd98:	str	r1, [sp, #1080]	; 0x438
   3fd9c:	str	r2, [sp, #1076]	; 0x434
   3fda0:	blt	3fdc0 <__assert_fail@plt+0x2d208>
   3fda4:	b	3fda8 <__assert_fail@plt+0x2d1f0>
   3fda8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3fdac:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3fdb0:	cmp	r0, r1
   3fdb4:	movw	r0, #0
   3fdb8:	movne	r0, #1
   3fdbc:	str	r0, [sp, #1076]	; 0x434
   3fdc0:	ldr	r0, [sp, #1076]	; 0x434
   3fdc4:	and	r0, r0, #1
   3fdc8:	ldr	r1, [sp, #1084]	; 0x43c
   3fdcc:	subs	r0, r1, r0
   3fdd0:	ldr	r2, [sp, #1080]	; 0x438
   3fdd4:	sbc	r3, r2, #0
   3fdd8:	and	r0, r0, r3
   3fddc:	cmn	r0, #1
   3fde0:	bne	3fdf4 <__assert_fail@plt+0x2d23c>
   3fde4:	b	3fde8 <__assert_fail@plt+0x2d230>
   3fde8:	b	3fdec <__assert_fail@plt+0x2d234>
   3fdec:	b	3feac <__assert_fail@plt+0x2d2f4>
   3fdf0:	b	3feac <__assert_fail@plt+0x2d2f4>
   3fdf4:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3fdf8:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3fdfc:	mov	r2, #0
   3fe00:	subs	r0, r0, #1
   3fe04:	sbcs	r1, r1, #0
   3fe08:	str	r2, [sp, #1072]	; 0x430
   3fe0c:	blt	3fe2c <__assert_fail@plt+0x2d274>
   3fe10:	b	3fe14 <__assert_fail@plt+0x2d25c>
   3fe14:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3fe18:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3fe1c:	cmp	r0, r1
   3fe20:	movw	r0, #0
   3fe24:	movne	r0, #1
   3fe28:	str	r0, [sp, #1072]	; 0x430
   3fe2c:	ldr	r0, [sp, #1072]	; 0x430
   3fe30:	mov	r1, #1
   3fe34:	cmp	r1, #0
   3fe38:	bne	3feac <__assert_fail@plt+0x2d2f4>
   3fe3c:	b	3ff10 <__assert_fail@plt+0x2d358>
   3fe40:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3fe44:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3fe48:	mov	r2, #0
   3fe4c:	subs	r3, r0, #1
   3fe50:	sbcs	ip, r1, #0
   3fe54:	str	r0, [sp, #1068]	; 0x42c
   3fe58:	str	r1, [sp, #1064]	; 0x428
   3fe5c:	str	r2, [sp, #1060]	; 0x424
   3fe60:	blt	3fe80 <__assert_fail@plt+0x2d2c8>
   3fe64:	b	3fe68 <__assert_fail@plt+0x2d2b0>
   3fe68:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3fe6c:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3fe70:	cmp	r0, r1
   3fe74:	movw	r0, #0
   3fe78:	movne	r0, #1
   3fe7c:	str	r0, [sp, #1060]	; 0x424
   3fe80:	ldr	r0, [sp, #1060]	; 0x424
   3fe84:	and	r0, r0, #1
   3fe88:	ldr	r1, [sp, #1068]	; 0x42c
   3fe8c:	subs	r0, r1, r0
   3fe90:	ldr	r2, [sp, #1064]	; 0x428
   3fe94:	sbc	r3, r2, #0
   3fe98:	movw	ip, #9363	; 0x2493
   3fe9c:	subs	r0, r0, ip
   3fea0:	sbcs	r3, r3, #0
   3fea4:	blt	3ff10 <__assert_fail@plt+0x2d358>
   3fea8:	b	3feac <__assert_fail@plt+0x2d2f4>
   3feac:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3feb0:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3feb4:	mov	r2, #0
   3feb8:	subs	r3, r0, #1
   3febc:	sbcs	r1, r1, #0
   3fec0:	str	r0, [sp, #1056]	; 0x420
   3fec4:	str	r2, [sp, #1052]	; 0x41c
   3fec8:	blt	3fee8 <__assert_fail@plt+0x2d330>
   3fecc:	b	3fed0 <__assert_fail@plt+0x2d318>
   3fed0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3fed4:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3fed8:	cmp	r0, r1
   3fedc:	movw	r0, #0
   3fee0:	movne	r0, #1
   3fee4:	str	r0, [sp, #1052]	; 0x41c
   3fee8:	ldr	r0, [sp, #1052]	; 0x41c
   3feec:	and	r0, r0, #1
   3fef0:	ldr	r1, [sp, #1056]	; 0x420
   3fef4:	sub	r0, r1, r0
   3fef8:	rsb	r0, r0, r0, lsl #3
   3fefc:	uxth	r0, r0
   3ff00:	mov	r2, #0
   3ff04:	str	r2, [fp, #-932]	; 0xfffffc5c
   3ff08:	str	r0, [fp, #-936]	; 0xfffffc58
   3ff0c:	b	4220c <__assert_fail@plt+0x2f654>
   3ff10:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3ff14:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3ff18:	mov	r2, #0
   3ff1c:	subs	r3, r0, #1
   3ff20:	sbcs	r1, r1, #0
   3ff24:	str	r0, [sp, #1048]	; 0x418
   3ff28:	str	r2, [sp, #1044]	; 0x414
   3ff2c:	blt	3ff4c <__assert_fail@plt+0x2d394>
   3ff30:	b	3ff34 <__assert_fail@plt+0x2d37c>
   3ff34:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3ff38:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3ff3c:	cmp	r0, r1
   3ff40:	movw	r0, #0
   3ff44:	movne	r0, #1
   3ff48:	str	r0, [sp, #1044]	; 0x414
   3ff4c:	ldr	r0, [sp, #1044]	; 0x414
   3ff50:	and	r0, r0, #1
   3ff54:	ldr	r1, [sp, #1048]	; 0x418
   3ff58:	sub	r0, r1, r0
   3ff5c:	rsb	r0, r0, r0, lsl #3
   3ff60:	uxth	r0, r0
   3ff64:	mov	r2, #0
   3ff68:	str	r2, [fp, #-932]	; 0xfffffc5c
   3ff6c:	str	r0, [fp, #-936]	; 0xfffffc58
   3ff70:	b	42110 <__assert_fail@plt+0x2f558>
   3ff74:	b	40a98 <__assert_fail@plt+0x2dee0>
   3ff78:	b	3ff7c <__assert_fail@plt+0x2d3c4>
   3ff7c:	b	4029c <__assert_fail@plt+0x2d6e4>
   3ff80:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3ff84:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3ff88:	mov	r2, #0
   3ff8c:	subs	r3, r0, #1
   3ff90:	sbcs	ip, r1, #0
   3ff94:	str	r0, [sp, #1040]	; 0x410
   3ff98:	str	r1, [sp, #1036]	; 0x40c
   3ff9c:	str	r2, [sp, #1032]	; 0x408
   3ffa0:	blt	3ffc0 <__assert_fail@plt+0x2d408>
   3ffa4:	b	3ffa8 <__assert_fail@plt+0x2d3f0>
   3ffa8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3ffac:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3ffb0:	cmp	r0, r1
   3ffb4:	movw	r0, #0
   3ffb8:	movne	r0, #1
   3ffbc:	str	r0, [sp, #1032]	; 0x408
   3ffc0:	ldr	r0, [sp, #1032]	; 0x408
   3ffc4:	and	r0, r0, #1
   3ffc8:	ldr	r1, [sp, #1040]	; 0x410
   3ffcc:	subs	r0, r1, r0
   3ffd0:	ldr	r2, [sp, #1036]	; 0x40c
   3ffd4:	sbc	r3, r2, #0
   3ffd8:	cmn	r3, #1
   3ffdc:	bgt	400d4 <__assert_fail@plt+0x2d51c>
   3ffe0:	b	3ffe4 <__assert_fail@plt+0x2d42c>
   3ffe4:	b	3ffe8 <__assert_fail@plt+0x2d430>
   3ffe8:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3ffec:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3fff0:	mov	r2, #0
   3fff4:	subs	r3, r0, #1
   3fff8:	sbcs	ip, r1, #0
   3fffc:	str	r0, [sp, #1028]	; 0x404
   40000:	str	r1, [sp, #1024]	; 0x400
   40004:	str	r2, [sp, #1020]	; 0x3fc
   40008:	blt	40028 <__assert_fail@plt+0x2d470>
   4000c:	b	40010 <__assert_fail@plt+0x2d458>
   40010:	ldr	r0, [fp, #-52]	; 0xffffffcc
   40014:	ldr	r1, [fp, #-720]	; 0xfffffd30
   40018:	cmp	r0, r1
   4001c:	movw	r0, #0
   40020:	movne	r0, #1
   40024:	str	r0, [sp, #1020]	; 0x3fc
   40028:	ldr	r0, [sp, #1020]	; 0x3fc
   4002c:	and	r0, r0, #1
   40030:	ldr	r1, [sp, #1028]	; 0x404
   40034:	subs	r0, r1, r0
   40038:	ldr	r2, [sp, #1024]	; 0x400
   4003c:	sbc	r3, r2, #0
   40040:	movw	ip, #9362	; 0x2492
   40044:	movt	ip, #4681	; 0x1249
   40048:	subs	r0, r0, ip
   4004c:	sbcs	r3, r3, #0
   40050:	blt	4046c <__assert_fail@plt+0x2d8b4>
   40054:	b	404cc <__assert_fail@plt+0x2d914>
   40058:	ldr	r0, [fp, #-728]	; 0xfffffd28
   4005c:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   40060:	mov	r2, #0
   40064:	subs	r3, r0, #1
   40068:	sbcs	ip, r1, #0
   4006c:	str	r0, [sp, #1016]	; 0x3f8
   40070:	str	r1, [sp, #1012]	; 0x3f4
   40074:	str	r2, [sp, #1008]	; 0x3f0
   40078:	blt	40098 <__assert_fail@plt+0x2d4e0>
   4007c:	b	40080 <__assert_fail@plt+0x2d4c8>
   40080:	ldr	r0, [fp, #-52]	; 0xffffffcc
   40084:	ldr	r1, [fp, #-720]	; 0xfffffd30
   40088:	cmp	r0, r1
   4008c:	movw	r0, #0
   40090:	movne	r0, #1
   40094:	str	r0, [sp, #1008]	; 0x3f0
   40098:	ldr	r0, [sp, #1008]	; 0x3f0
   4009c:	and	r0, r0, #1
   400a0:	ldr	r1, [sp, #1016]	; 0x3f8
   400a4:	subs	r0, r1, r0
   400a8:	ldr	r2, [sp, #1012]	; 0x3f4
   400ac:	sbc	r3, r2, #0
   400b0:	mvn	r3, r3
   400b4:	mvn	r0, r0
   400b8:	movw	ip, #56173	; 0xdb6d
   400bc:	movt	ip, #60854	; 0xedb6
   400c0:	subs	r0, ip, r0
   400c4:	mvn	ip, #0
   400c8:	sbcs	r3, ip, r3
   400cc:	blt	4046c <__assert_fail@plt+0x2d8b4>
   400d0:	b	404cc <__assert_fail@plt+0x2d914>
   400d4:	b	40228 <__assert_fail@plt+0x2d670>
   400d8:	b	400dc <__assert_fail@plt+0x2d524>
   400dc:	ldr	r0, [fp, #-728]	; 0xfffffd28
   400e0:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   400e4:	mov	r2, #0
   400e8:	subs	r3, r0, #1
   400ec:	sbcs	ip, r1, #0
   400f0:	str	r0, [sp, #1004]	; 0x3ec
   400f4:	str	r1, [sp, #1000]	; 0x3e8
   400f8:	str	r2, [sp, #996]	; 0x3e4
   400fc:	blt	4011c <__assert_fail@plt+0x2d564>
   40100:	b	40104 <__assert_fail@plt+0x2d54c>
   40104:	ldr	r0, [fp, #-52]	; 0xffffffcc
   40108:	ldr	r1, [fp, #-720]	; 0xfffffd30
   4010c:	cmp	r0, r1
   40110:	movw	r0, #0
   40114:	movne	r0, #1
   40118:	str	r0, [sp, #996]	; 0x3e4
   4011c:	ldr	r0, [sp, #996]	; 0x3e4
   40120:	and	r0, r0, #1
   40124:	ldr	r1, [sp, #1004]	; 0x3ec
   40128:	subs	r0, r1, r0
   4012c:	ldr	r2, [sp, #1000]	; 0x3e8
   40130:	sbc	r3, r2, #0
   40134:	adds	r0, r0, #-2147483648	; 0x80000000
   40138:	sbc	r3, r3, #0
   4013c:	rsbs	r0, r0, #0
   40140:	rscs	r3, r3, #0
   40144:	blt	4046c <__assert_fail@plt+0x2d8b4>
   40148:	b	404cc <__assert_fail@plt+0x2d914>
   4014c:	ldr	r0, [fp, #-728]	; 0xfffffd28
   40150:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   40154:	mov	r2, #0
   40158:	subs	r3, r0, #1
   4015c:	sbcs	ip, r1, #0
   40160:	str	r0, [sp, #992]	; 0x3e0
   40164:	str	r1, [sp, #988]	; 0x3dc
   40168:	str	r2, [sp, #984]	; 0x3d8
   4016c:	blt	4018c <__assert_fail@plt+0x2d5d4>
   40170:	b	40174 <__assert_fail@plt+0x2d5bc>
   40174:	ldr	r0, [fp, #-52]	; 0xffffffcc
   40178:	ldr	r1, [fp, #-720]	; 0xfffffd30
   4017c:	cmp	r0, r1
   40180:	movw	r0, #0
   40184:	movne	r0, #1
   40188:	str	r0, [sp, #984]	; 0x3d8
   4018c:	ldr	r0, [sp, #984]	; 0x3d8
   40190:	and	r0, r0, #1
   40194:	ldr	r1, [sp, #992]	; 0x3e0
   40198:	subs	r0, r1, r0
   4019c:	ldr	r2, [sp, #988]	; 0x3dc
   401a0:	sbc	r3, r2, #0
   401a4:	subs	r0, r0, #1
   401a8:	sbcs	r3, r3, #0
   401ac:	blt	404cc <__assert_fail@plt+0x2d914>
   401b0:	b	401b4 <__assert_fail@plt+0x2d5fc>
   401b4:	ldr	r0, [fp, #-728]	; 0xfffffd28
   401b8:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   401bc:	mov	r2, #0
   401c0:	subs	r3, r0, #1
   401c4:	sbcs	ip, r1, #0
   401c8:	str	r0, [sp, #980]	; 0x3d4
   401cc:	str	r1, [sp, #976]	; 0x3d0
   401d0:	str	r2, [sp, #972]	; 0x3cc
   401d4:	blt	401f4 <__assert_fail@plt+0x2d63c>
   401d8:	b	401dc <__assert_fail@plt+0x2d624>
   401dc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   401e0:	ldr	r1, [fp, #-720]	; 0xfffffd30
   401e4:	cmp	r0, r1
   401e8:	movw	r0, #0
   401ec:	movne	r0, #1
   401f0:	str	r0, [sp, #972]	; 0x3cc
   401f4:	ldr	r0, [sp, #972]	; 0x3cc
   401f8:	mvn	r0, r0
   401fc:	mvn	r1, #1
   40200:	orr	r0, r0, r1
   40204:	ldr	r1, [sp, #980]	; 0x3d4
   40208:	adds	r0, r0, r1
   4020c:	ldr	r2, [sp, #976]	; 0x3d0
   40210:	sbc	r3, r2, #0
   40214:	mvn	ip, #-2147483648	; 0x80000000
   40218:	subs	r0, ip, r0
   4021c:	rscs	r3, r3, #0
   40220:	blt	4046c <__assert_fail@plt+0x2d8b4>
   40224:	b	404cc <__assert_fail@plt+0x2d914>
   40228:	ldr	r0, [fp, #-728]	; 0xfffffd28
   4022c:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   40230:	mov	r2, #0
   40234:	subs	r3, r0, #1
   40238:	sbcs	ip, r1, #0
   4023c:	str	r0, [sp, #968]	; 0x3c8
   40240:	str	r1, [sp, #964]	; 0x3c4
   40244:	str	r2, [sp, #960]	; 0x3c0
   40248:	blt	40268 <__assert_fail@plt+0x2d6b0>
   4024c:	b	40250 <__assert_fail@plt+0x2d698>
   40250:	ldr	r0, [fp, #-52]	; 0xffffffcc
   40254:	ldr	r1, [fp, #-720]	; 0xfffffd30
   40258:	cmp	r0, r1
   4025c:	movw	r0, #0
   40260:	movne	r0, #1
   40264:	str	r0, [sp, #960]	; 0x3c0
   40268:	ldr	r0, [sp, #960]	; 0x3c0
   4026c:	and	r0, r0, #1
   40270:	ldr	r1, [sp, #968]	; 0x3c8
   40274:	subs	r0, r1, r0
   40278:	ldr	r2, [sp, #964]	; 0x3c4
   4027c:	sbc	r3, r2, #0
   40280:	movw	ip, #56174	; 0xdb6e
   40284:	movt	ip, #60854	; 0xedb6
   40288:	subs	r0, ip, r0
   4028c:	mvn	ip, #0
   40290:	sbcs	r3, ip, r3
   40294:	blt	4046c <__assert_fail@plt+0x2d8b4>
   40298:	b	404cc <__assert_fail@plt+0x2d914>
   4029c:	b	402a4 <__assert_fail@plt+0x2d6ec>
   402a0:	b	404cc <__assert_fail@plt+0x2d914>
   402a4:	ldr	r0, [fp, #-728]	; 0xfffffd28
   402a8:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   402ac:	mov	r2, #0
   402b0:	subs	r3, r0, #1
   402b4:	sbcs	ip, r1, #0
   402b8:	str	r0, [sp, #956]	; 0x3bc
   402bc:	str	r1, [sp, #952]	; 0x3b8
   402c0:	str	r2, [sp, #948]	; 0x3b4
   402c4:	blt	402e4 <__assert_fail@plt+0x2d72c>
   402c8:	b	402cc <__assert_fail@plt+0x2d714>
   402cc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   402d0:	ldr	r1, [fp, #-720]	; 0xfffffd30
   402d4:	cmp	r0, r1
   402d8:	movw	r0, #0
   402dc:	movne	r0, #1
   402e0:	str	r0, [sp, #948]	; 0x3b4
   402e4:	ldr	r0, [sp, #948]	; 0x3b4
   402e8:	and	r0, r0, #1
   402ec:	ldr	r1, [sp, #956]	; 0x3bc
   402f0:	subs	r0, r1, r0
   402f4:	ldr	r2, [sp, #952]	; 0x3b8
   402f8:	sbc	r3, r2, #0
   402fc:	cmn	r3, #1
   40300:	bgt	403fc <__assert_fail@plt+0x2d844>
   40304:	b	40308 <__assert_fail@plt+0x2d750>
   40308:	b	4030c <__assert_fail@plt+0x2d754>
   4030c:	b	40388 <__assert_fail@plt+0x2d7d0>
   40310:	b	40388 <__assert_fail@plt+0x2d7d0>
   40314:	ldr	r0, [fp, #-728]	; 0xfffffd28
   40318:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   4031c:	mov	r2, #0
   40320:	subs	r3, r0, #1
   40324:	sbcs	ip, r1, #0
   40328:	str	r0, [sp, #944]	; 0x3b0
   4032c:	str	r1, [sp, #940]	; 0x3ac
   40330:	str	r2, [sp, #936]	; 0x3a8
   40334:	blt	40354 <__assert_fail@plt+0x2d79c>
   40338:	b	4033c <__assert_fail@plt+0x2d784>
   4033c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   40340:	ldr	r1, [fp, #-720]	; 0xfffffd30
   40344:	cmp	r0, r1
   40348:	movw	r0, #0
   4034c:	movne	r0, #1
   40350:	str	r0, [sp, #936]	; 0x3a8
   40354:	ldr	r0, [sp, #936]	; 0x3a8
   40358:	and	r0, r0, #1
   4035c:	ldr	r1, [sp, #944]	; 0x3b0
   40360:	subs	r0, r1, r0
   40364:	ldr	r2, [sp, #940]	; 0x3ac
   40368:	sbc	r3, r2, #0
   4036c:	and	r0, r0, r3
   40370:	cmn	r0, #1
   40374:	bne	40388 <__assert_fail@plt+0x2d7d0>
   40378:	b	4037c <__assert_fail@plt+0x2d7c4>
   4037c:	b	40380 <__assert_fail@plt+0x2d7c8>
   40380:	b	404cc <__assert_fail@plt+0x2d914>
   40384:	b	404cc <__assert_fail@plt+0x2d914>
   40388:	ldr	r0, [fp, #-728]	; 0xfffffd28
   4038c:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   40390:	mov	r2, #0
   40394:	subs	r3, r0, #1
   40398:	sbcs	ip, r1, #0
   4039c:	str	r0, [sp, #932]	; 0x3a4
   403a0:	str	r1, [sp, #928]	; 0x3a0
   403a4:	str	r2, [sp, #924]	; 0x39c
   403a8:	blt	403c8 <__assert_fail@plt+0x2d810>
   403ac:	b	403b0 <__assert_fail@plt+0x2d7f8>
   403b0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   403b4:	ldr	r1, [fp, #-720]	; 0xfffffd30
   403b8:	cmp	r0, r1
   403bc:	movw	r0, #0
   403c0:	movne	r0, #1
   403c4:	str	r0, [sp, #924]	; 0x39c
   403c8:	ldr	r0, [sp, #924]	; 0x39c
   403cc:	and	r0, r0, #1
   403d0:	ldr	r1, [sp, #932]	; 0x3a4
   403d4:	subs	r2, r1, r0
   403d8:	ldr	r0, [sp, #928]	; 0x3a0
   403dc:	sbc	r3, r0, #0
   403e0:	mov	r0, #-2147483648	; 0x80000000
   403e4:	mvn	r1, #0
   403e8:	bl	75338 <__assert_fail@plt+0x62780>
   403ec:	subs	r0, r0, #7
   403f0:	sbcs	r1, r1, #0
   403f4:	blt	4046c <__assert_fail@plt+0x2d8b4>
   403f8:	b	404cc <__assert_fail@plt+0x2d914>
   403fc:	ldr	r0, [fp, #-728]	; 0xfffffd28
   40400:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   40404:	mov	r2, #0
   40408:	subs	r3, r0, #1
   4040c:	sbcs	ip, r1, #0
   40410:	str	r0, [sp, #920]	; 0x398
   40414:	str	r1, [sp, #916]	; 0x394
   40418:	str	r2, [sp, #912]	; 0x390
   4041c:	blt	4043c <__assert_fail@plt+0x2d884>
   40420:	b	40424 <__assert_fail@plt+0x2d86c>
   40424:	ldr	r0, [fp, #-52]	; 0xffffffcc
   40428:	ldr	r1, [fp, #-720]	; 0xfffffd30
   4042c:	cmp	r0, r1
   40430:	movw	r0, #0
   40434:	movne	r0, #1
   40438:	str	r0, [sp, #912]	; 0x390
   4043c:	ldr	r0, [sp, #912]	; 0x390
   40440:	and	r0, r0, #1
   40444:	ldr	r1, [sp, #920]	; 0x398
   40448:	subs	r0, r1, r0
   4044c:	ldr	r2, [sp, #916]	; 0x394
   40450:	sbc	r3, r2, #0
   40454:	movw	ip, #9363	; 0x2493
   40458:	movt	ip, #4681	; 0x1249
   4045c:	subs	r0, r0, ip
   40460:	sbcs	r3, r3, #0
   40464:	blt	404cc <__assert_fail@plt+0x2d914>
   40468:	b	4046c <__assert_fail@plt+0x2d8b4>
   4046c:	ldr	r0, [fp, #-728]	; 0xfffffd28
   40470:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   40474:	mov	r2, #0
   40478:	subs	r3, r0, #1
   4047c:	sbcs	r1, r1, #0
   40480:	str	r0, [sp, #908]	; 0x38c
   40484:	str	r2, [sp, #904]	; 0x388
   40488:	blt	404a8 <__assert_fail@plt+0x2d8f0>
   4048c:	b	40490 <__assert_fail@plt+0x2d8d8>
   40490:	ldr	r0, [fp, #-52]	; 0xffffffcc
   40494:	ldr	r1, [fp, #-720]	; 0xfffffd30
   40498:	cmp	r0, r1
   4049c:	movw	r0, #0
   404a0:	movne	r0, #1
   404a4:	str	r0, [sp, #904]	; 0x388
   404a8:	ldr	r0, [sp, #904]	; 0x388
   404ac:	and	r0, r0, #1
   404b0:	ldr	r1, [sp, #908]	; 0x38c
   404b4:	sub	r0, r1, r0
   404b8:	rsb	r0, r0, r0, lsl #3
   404bc:	asr	r2, r0, #31
   404c0:	str	r0, [fp, #-936]	; 0xfffffc58
   404c4:	str	r2, [fp, #-932]	; 0xfffffc5c
   404c8:	b	4220c <__assert_fail@plt+0x2f654>
   404cc:	ldr	r0, [fp, #-728]	; 0xfffffd28
   404d0:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   404d4:	mov	r2, #0
   404d8:	subs	r3, r0, #1
   404dc:	sbcs	r1, r1, #0
   404e0:	str	r0, [sp, #900]	; 0x384
   404e4:	str	r2, [sp, #896]	; 0x380
   404e8:	blt	40508 <__assert_fail@plt+0x2d950>
   404ec:	b	404f0 <__assert_fail@plt+0x2d938>
   404f0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   404f4:	ldr	r1, [fp, #-720]	; 0xfffffd30
   404f8:	cmp	r0, r1
   404fc:	movw	r0, #0
   40500:	movne	r0, #1
   40504:	str	r0, [sp, #896]	; 0x380
   40508:	ldr	r0, [sp, #896]	; 0x380
   4050c:	and	r0, r0, #1
   40510:	ldr	r1, [sp, #900]	; 0x384
   40514:	sub	r0, r1, r0
   40518:	rsb	r0, r0, r0, lsl #3
   4051c:	asr	r2, r0, #31
   40520:	str	r0, [fp, #-936]	; 0xfffffc58
   40524:	str	r2, [fp, #-932]	; 0xfffffc5c
   40528:	b	42110 <__assert_fail@plt+0x2f558>
   4052c:	b	40830 <__assert_fail@plt+0x2dc78>
   40530:	ldr	r0, [fp, #-728]	; 0xfffffd28
   40534:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   40538:	mov	r2, #0
   4053c:	subs	r3, r0, #1
   40540:	sbcs	ip, r1, #0
   40544:	str	r0, [sp, #892]	; 0x37c
   40548:	str	r1, [sp, #888]	; 0x378
   4054c:	str	r2, [sp, #884]	; 0x374
   40550:	blt	40570 <__assert_fail@plt+0x2d9b8>
   40554:	b	40558 <__assert_fail@plt+0x2d9a0>
   40558:	ldr	r0, [fp, #-52]	; 0xffffffcc
   4055c:	ldr	r1, [fp, #-720]	; 0xfffffd30
   40560:	cmp	r0, r1
   40564:	movw	r0, #0
   40568:	movne	r0, #1
   4056c:	str	r0, [sp, #884]	; 0x374
   40570:	ldr	r0, [sp, #884]	; 0x374
   40574:	and	r0, r0, #1
   40578:	ldr	r1, [sp, #892]	; 0x37c
   4057c:	subs	r0, r1, r0
   40580:	ldr	r2, [sp, #888]	; 0x378
   40584:	sbc	r3, r2, #0
   40588:	cmn	r3, #1
   4058c:	bgt	40678 <__assert_fail@plt+0x2dac0>
   40590:	b	40594 <__assert_fail@plt+0x2d9dc>
   40594:	b	40608 <__assert_fail@plt+0x2da50>
   40598:	ldr	r0, [fp, #-728]	; 0xfffffd28
   4059c:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   405a0:	mov	r2, #0
   405a4:	subs	r3, r0, #1
   405a8:	sbcs	ip, r1, #0
   405ac:	str	r0, [sp, #880]	; 0x370
   405b0:	str	r1, [sp, #876]	; 0x36c
   405b4:	str	r2, [sp, #872]	; 0x368
   405b8:	blt	405d8 <__assert_fail@plt+0x2da20>
   405bc:	b	405c0 <__assert_fail@plt+0x2da08>
   405c0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   405c4:	ldr	r1, [fp, #-720]	; 0xfffffd30
   405c8:	cmp	r0, r1
   405cc:	movw	r0, #0
   405d0:	movne	r0, #1
   405d4:	str	r0, [sp, #872]	; 0x368
   405d8:	ldr	r0, [sp, #872]	; 0x368
   405dc:	and	r0, r0, #1
   405e0:	ldr	r1, [sp, #880]	; 0x370
   405e4:	subs	r0, r1, r0
   405e8:	ldr	r2, [sp, #876]	; 0x36c
   405ec:	sbc	r3, r2, #0
   405f0:	movw	ip, #18724	; 0x4924
   405f4:	movt	ip, #9362	; 0x2492
   405f8:	subs	r0, r0, ip
   405fc:	sbcs	r3, r3, #0
   40600:	blt	409d8 <__assert_fail@plt+0x2de20>
   40604:	b	40a38 <__assert_fail@plt+0x2de80>
   40608:	ldr	r0, [fp, #-728]	; 0xfffffd28
   4060c:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   40610:	mov	r2, #0
   40614:	subs	r3, r0, #1
   40618:	sbcs	ip, r1, #0
   4061c:	str	r0, [sp, #868]	; 0x364
   40620:	str	r1, [sp, #864]	; 0x360
   40624:	str	r2, [sp, #860]	; 0x35c
   40628:	blt	40648 <__assert_fail@plt+0x2da90>
   4062c:	b	40630 <__assert_fail@plt+0x2da78>
   40630:	ldr	r0, [fp, #-52]	; 0xffffffcc
   40634:	ldr	r1, [fp, #-720]	; 0xfffffd30
   40638:	cmp	r0, r1
   4063c:	movw	r0, #0
   40640:	movne	r0, #1
   40644:	str	r0, [sp, #860]	; 0x35c
   40648:	ldr	r0, [sp, #860]	; 0x35c
   4064c:	and	r0, r0, #1
   40650:	ldr	r1, [sp, #868]	; 0x364
   40654:	subs	r0, r1, r0
   40658:	ldr	r2, [sp, #864]	; 0x360
   4065c:	sbc	r3, r2, #0
   40660:	mvn	r3, r3
   40664:	mvn	r0, r0
   40668:	rsbs	r0, r0, #0
   4066c:	rscs	r3, r3, #0
   40670:	blt	409d8 <__assert_fail@plt+0x2de20>
   40674:	b	40a38 <__assert_fail@plt+0x2de80>
   40678:	b	4067c <__assert_fail@plt+0x2dac4>
   4067c:	b	407c8 <__assert_fail@plt+0x2dc10>
   40680:	b	407c8 <__assert_fail@plt+0x2dc10>
   40684:	b	407c8 <__assert_fail@plt+0x2dc10>
   40688:	b	4068c <__assert_fail@plt+0x2dad4>
   4068c:	ldr	r0, [fp, #-728]	; 0xfffffd28
   40690:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   40694:	mov	r2, #0
   40698:	subs	r3, r0, #1
   4069c:	sbcs	ip, r1, #0
   406a0:	str	r0, [sp, #856]	; 0x358
   406a4:	str	r1, [sp, #852]	; 0x354
   406a8:	str	r2, [sp, #848]	; 0x350
   406ac:	blt	406cc <__assert_fail@plt+0x2db14>
   406b0:	b	406b4 <__assert_fail@plt+0x2dafc>
   406b4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   406b8:	ldr	r1, [fp, #-720]	; 0xfffffd30
   406bc:	cmp	r0, r1
   406c0:	movw	r0, #0
   406c4:	movne	r0, #1
   406c8:	str	r0, [sp, #848]	; 0x350
   406cc:	ldr	r0, [sp, #848]	; 0x350
   406d0:	and	r0, r0, #1
   406d4:	ldr	r1, [sp, #856]	; 0x358
   406d8:	subs	r0, r1, r0
   406dc:	ldr	r2, [sp, #852]	; 0x354
   406e0:	sbc	r3, r2, #0
   406e4:	rsbs	r0, r0, #0
   406e8:	rscs	r3, r3, #0
   406ec:	blt	409d8 <__assert_fail@plt+0x2de20>
   406f0:	b	40a38 <__assert_fail@plt+0x2de80>
   406f4:	ldr	r0, [fp, #-728]	; 0xfffffd28
   406f8:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   406fc:	mov	r2, #0
   40700:	subs	r3, r0, #1
   40704:	sbcs	ip, r1, #0
   40708:	str	r0, [sp, #844]	; 0x34c
   4070c:	str	r1, [sp, #840]	; 0x348
   40710:	str	r2, [sp, #836]	; 0x344
   40714:	blt	40734 <__assert_fail@plt+0x2db7c>
   40718:	b	4071c <__assert_fail@plt+0x2db64>
   4071c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   40720:	ldr	r1, [fp, #-720]	; 0xfffffd30
   40724:	cmp	r0, r1
   40728:	movw	r0, #0
   4072c:	movne	r0, #1
   40730:	str	r0, [sp, #836]	; 0x344
   40734:	ldr	r0, [sp, #836]	; 0x344
   40738:	and	r0, r0, #1
   4073c:	ldr	r1, [sp, #844]	; 0x34c
   40740:	subs	r0, r1, r0
   40744:	ldr	r2, [sp, #840]	; 0x348
   40748:	sbc	r3, r2, #0
   4074c:	subs	r0, r0, #1
   40750:	sbcs	r3, r3, #0
   40754:	blt	40a38 <__assert_fail@plt+0x2de80>
   40758:	b	4075c <__assert_fail@plt+0x2dba4>
   4075c:	ldr	r0, [fp, #-728]	; 0xfffffd28
   40760:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   40764:	mov	r2, #0
   40768:	subs	r3, r0, #1
   4076c:	sbcs	ip, r1, #0
   40770:	str	r0, [sp, #832]	; 0x340
   40774:	str	r1, [sp, #828]	; 0x33c
   40778:	str	r2, [sp, #824]	; 0x338
   4077c:	blt	4079c <__assert_fail@plt+0x2dbe4>
   40780:	b	40784 <__assert_fail@plt+0x2dbcc>
   40784:	ldr	r0, [fp, #-52]	; 0xffffffcc
   40788:	ldr	r1, [fp, #-720]	; 0xfffffd30
   4078c:	cmp	r0, r1
   40790:	movw	r0, #0
   40794:	movne	r0, #1
   40798:	str	r0, [sp, #824]	; 0x338
   4079c:	ldr	r0, [sp, #824]	; 0x338
   407a0:	mvn	r0, r0
   407a4:	mvn	r1, #1
   407a8:	orr	r0, r0, r1
   407ac:	ldr	r1, [sp, #832]	; 0x340
   407b0:	adds	r0, r0, r1
   407b4:	ldr	r2, [sp, #828]	; 0x33c
   407b8:	sbc	r3, r2, #0
   407bc:	cmn	r3, #1
   407c0:	bgt	409d8 <__assert_fail@plt+0x2de20>
   407c4:	b	40a38 <__assert_fail@plt+0x2de80>
   407c8:	ldr	r0, [fp, #-728]	; 0xfffffd28
   407cc:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   407d0:	mov	r2, #0
   407d4:	subs	r3, r0, #1
   407d8:	sbcs	ip, r1, #0
   407dc:	str	r0, [sp, #820]	; 0x334
   407e0:	str	r1, [sp, #816]	; 0x330
   407e4:	str	r2, [sp, #812]	; 0x32c
   407e8:	blt	40808 <__assert_fail@plt+0x2dc50>
   407ec:	b	407f0 <__assert_fail@plt+0x2dc38>
   407f0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   407f4:	ldr	r1, [fp, #-720]	; 0xfffffd30
   407f8:	cmp	r0, r1
   407fc:	movw	r0, #0
   40800:	movne	r0, #1
   40804:	str	r0, [sp, #812]	; 0x32c
   40808:	ldr	r0, [sp, #812]	; 0x32c
   4080c:	and	r0, r0, #1
   40810:	ldr	r1, [sp, #820]	; 0x334
   40814:	subs	r0, r1, r0
   40818:	ldr	r2, [sp, #816]	; 0x330
   4081c:	sbc	r3, r2, #0
   40820:	rsbs	r0, r0, #0
   40824:	rscs	r3, r3, #0
   40828:	blt	409d8 <__assert_fail@plt+0x2de20>
   4082c:	b	40a38 <__assert_fail@plt+0x2de80>
   40830:	b	40838 <__assert_fail@plt+0x2dc80>
   40834:	b	40a38 <__assert_fail@plt+0x2de80>
   40838:	ldr	r0, [fp, #-728]	; 0xfffffd28
   4083c:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   40840:	mov	r2, #0
   40844:	subs	r3, r0, #1
   40848:	sbcs	ip, r1, #0
   4084c:	str	r0, [sp, #808]	; 0x328
   40850:	str	r1, [sp, #804]	; 0x324
   40854:	str	r2, [sp, #800]	; 0x320
   40858:	blt	40878 <__assert_fail@plt+0x2dcc0>
   4085c:	b	40860 <__assert_fail@plt+0x2dca8>
   40860:	ldr	r0, [fp, #-52]	; 0xffffffcc
   40864:	ldr	r1, [fp, #-720]	; 0xfffffd30
   40868:	cmp	r0, r1
   4086c:	movw	r0, #0
   40870:	movne	r0, #1
   40874:	str	r0, [sp, #800]	; 0x320
   40878:	ldr	r0, [sp, #800]	; 0x320
   4087c:	and	r0, r0, #1
   40880:	ldr	r1, [sp, #808]	; 0x328
   40884:	subs	r0, r1, r0
   40888:	ldr	r2, [sp, #804]	; 0x324
   4088c:	sbc	r3, r2, #0
   40890:	cmn	r3, #1
   40894:	bgt	40968 <__assert_fail@plt+0x2ddb0>
   40898:	b	4089c <__assert_fail@plt+0x2dce4>
   4089c:	b	408a0 <__assert_fail@plt+0x2dce8>
   408a0:	b	4091c <__assert_fail@plt+0x2dd64>
   408a4:	b	4091c <__assert_fail@plt+0x2dd64>
   408a8:	ldr	r0, [fp, #-728]	; 0xfffffd28
   408ac:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   408b0:	mov	r2, #0
   408b4:	subs	r3, r0, #1
   408b8:	sbcs	ip, r1, #0
   408bc:	str	r0, [sp, #796]	; 0x31c
   408c0:	str	r1, [sp, #792]	; 0x318
   408c4:	str	r2, [sp, #788]	; 0x314
   408c8:	blt	408e8 <__assert_fail@plt+0x2dd30>
   408cc:	b	408d0 <__assert_fail@plt+0x2dd18>
   408d0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   408d4:	ldr	r1, [fp, #-720]	; 0xfffffd30
   408d8:	cmp	r0, r1
   408dc:	movw	r0, #0
   408e0:	movne	r0, #1
   408e4:	str	r0, [sp, #788]	; 0x314
   408e8:	ldr	r0, [sp, #788]	; 0x314
   408ec:	and	r0, r0, #1
   408f0:	ldr	r1, [sp, #796]	; 0x31c
   408f4:	subs	r0, r1, r0
   408f8:	ldr	r2, [sp, #792]	; 0x318
   408fc:	sbc	r3, r2, #0
   40900:	and	r0, r0, r3
   40904:	cmn	r0, #1
   40908:	bne	4091c <__assert_fail@plt+0x2dd64>
   4090c:	b	40910 <__assert_fail@plt+0x2dd58>
   40910:	b	40914 <__assert_fail@plt+0x2dd5c>
   40914:	b	409d8 <__assert_fail@plt+0x2de20>
   40918:	b	409d8 <__assert_fail@plt+0x2de20>
   4091c:	ldr	r0, [fp, #-728]	; 0xfffffd28
   40920:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   40924:	mov	r2, #0
   40928:	subs	r0, r0, #1
   4092c:	sbcs	r1, r1, #0
   40930:	str	r2, [sp, #784]	; 0x310
   40934:	blt	40954 <__assert_fail@plt+0x2dd9c>
   40938:	b	4093c <__assert_fail@plt+0x2dd84>
   4093c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   40940:	ldr	r1, [fp, #-720]	; 0xfffffd30
   40944:	cmp	r0, r1
   40948:	movw	r0, #0
   4094c:	movne	r0, #1
   40950:	str	r0, [sp, #784]	; 0x310
   40954:	ldr	r0, [sp, #784]	; 0x310
   40958:	mov	r1, #1
   4095c:	cmp	r1, #0
   40960:	bne	409d8 <__assert_fail@plt+0x2de20>
   40964:	b	40a38 <__assert_fail@plt+0x2de80>
   40968:	ldr	r0, [fp, #-728]	; 0xfffffd28
   4096c:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   40970:	mov	r2, #0
   40974:	subs	r3, r0, #1
   40978:	sbcs	ip, r1, #0
   4097c:	str	r0, [sp, #780]	; 0x30c
   40980:	str	r1, [sp, #776]	; 0x308
   40984:	str	r2, [sp, #772]	; 0x304
   40988:	blt	409a8 <__assert_fail@plt+0x2ddf0>
   4098c:	b	40990 <__assert_fail@plt+0x2ddd8>
   40990:	ldr	r0, [fp, #-52]	; 0xffffffcc
   40994:	ldr	r1, [fp, #-720]	; 0xfffffd30
   40998:	cmp	r0, r1
   4099c:	movw	r0, #0
   409a0:	movne	r0, #1
   409a4:	str	r0, [sp, #772]	; 0x304
   409a8:	ldr	r0, [sp, #772]	; 0x304
   409ac:	and	r0, r0, #1
   409b0:	ldr	r1, [sp, #780]	; 0x30c
   409b4:	subs	r0, r1, r0
   409b8:	ldr	r2, [sp, #776]	; 0x308
   409bc:	sbc	r3, r2, #0
   409c0:	movw	ip, #18725	; 0x4925
   409c4:	movt	ip, #9362	; 0x2492
   409c8:	subs	r0, r0, ip
   409cc:	sbcs	r3, r3, #0
   409d0:	blt	40a38 <__assert_fail@plt+0x2de80>
   409d4:	b	409d8 <__assert_fail@plt+0x2de20>
   409d8:	ldr	r0, [fp, #-728]	; 0xfffffd28
   409dc:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   409e0:	mov	r2, #0
   409e4:	subs	r3, r0, #1
   409e8:	sbcs	r1, r1, #0
   409ec:	str	r0, [sp, #768]	; 0x300
   409f0:	str	r2, [sp, #764]	; 0x2fc
   409f4:	blt	40a14 <__assert_fail@plt+0x2de5c>
   409f8:	b	409fc <__assert_fail@plt+0x2de44>
   409fc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   40a00:	ldr	r1, [fp, #-720]	; 0xfffffd30
   40a04:	cmp	r0, r1
   40a08:	movw	r0, #0
   40a0c:	movne	r0, #1
   40a10:	str	r0, [sp, #764]	; 0x2fc
   40a14:	ldr	r0, [sp, #764]	; 0x2fc
   40a18:	and	r0, r0, #1
   40a1c:	ldr	r1, [sp, #768]	; 0x300
   40a20:	sub	r0, r1, r0
   40a24:	rsb	r0, r0, r0, lsl #3
   40a28:	mov	r2, #0
   40a2c:	str	r2, [fp, #-932]	; 0xfffffc5c
   40a30:	str	r0, [fp, #-936]	; 0xfffffc58
   40a34:	b	4220c <__assert_fail@plt+0x2f654>
   40a38:	ldr	r0, [fp, #-728]	; 0xfffffd28
   40a3c:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   40a40:	mov	r2, #0
   40a44:	subs	r3, r0, #1
   40a48:	sbcs	r1, r1, #0
   40a4c:	str	r0, [sp, #760]	; 0x2f8
   40a50:	str	r2, [sp, #756]	; 0x2f4
   40a54:	blt	40a74 <__assert_fail@plt+0x2debc>
   40a58:	b	40a5c <__assert_fail@plt+0x2dea4>
   40a5c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   40a60:	ldr	r1, [fp, #-720]	; 0xfffffd30
   40a64:	cmp	r0, r1
   40a68:	movw	r0, #0
   40a6c:	movne	r0, #1
   40a70:	str	r0, [sp, #756]	; 0x2f4
   40a74:	ldr	r0, [sp, #756]	; 0x2f4
   40a78:	and	r0, r0, #1
   40a7c:	ldr	r1, [sp, #760]	; 0x2f8
   40a80:	sub	r0, r1, r0
   40a84:	rsb	r0, r0, r0, lsl #3
   40a88:	mov	r2, #0
   40a8c:	str	r2, [fp, #-932]	; 0xfffffc5c
   40a90:	str	r0, [fp, #-936]	; 0xfffffc58
   40a94:	b	42110 <__assert_fail@plt+0x2f558>
   40a98:	b	415bc <__assert_fail@plt+0x2ea04>
   40a9c:	b	40aa0 <__assert_fail@plt+0x2dee8>
   40aa0:	b	40dc0 <__assert_fail@plt+0x2e208>
   40aa4:	ldr	r0, [fp, #-728]	; 0xfffffd28
   40aa8:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   40aac:	mov	r2, #0
   40ab0:	subs	r3, r0, #1
   40ab4:	sbcs	ip, r1, #0
   40ab8:	str	r0, [sp, #752]	; 0x2f0
   40abc:	str	r1, [sp, #748]	; 0x2ec
   40ac0:	str	r2, [sp, #744]	; 0x2e8
   40ac4:	blt	40ae4 <__assert_fail@plt+0x2df2c>
   40ac8:	b	40acc <__assert_fail@plt+0x2df14>
   40acc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   40ad0:	ldr	r1, [fp, #-720]	; 0xfffffd30
   40ad4:	cmp	r0, r1
   40ad8:	movw	r0, #0
   40adc:	movne	r0, #1
   40ae0:	str	r0, [sp, #744]	; 0x2e8
   40ae4:	ldr	r0, [sp, #744]	; 0x2e8
   40ae8:	and	r0, r0, #1
   40aec:	ldr	r1, [sp, #752]	; 0x2f0
   40af0:	subs	r0, r1, r0
   40af4:	ldr	r2, [sp, #748]	; 0x2ec
   40af8:	sbc	r3, r2, #0
   40afc:	cmn	r3, #1
   40b00:	bgt	40bf8 <__assert_fail@plt+0x2e040>
   40b04:	b	40b08 <__assert_fail@plt+0x2df50>
   40b08:	b	40b0c <__assert_fail@plt+0x2df54>
   40b0c:	ldr	r0, [fp, #-728]	; 0xfffffd28
   40b10:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   40b14:	mov	r2, #0
   40b18:	subs	r3, r0, #1
   40b1c:	sbcs	ip, r1, #0
   40b20:	str	r0, [sp, #740]	; 0x2e4
   40b24:	str	r1, [sp, #736]	; 0x2e0
   40b28:	str	r2, [sp, #732]	; 0x2dc
   40b2c:	blt	40b4c <__assert_fail@plt+0x2df94>
   40b30:	b	40b34 <__assert_fail@plt+0x2df7c>
   40b34:	ldr	r0, [fp, #-52]	; 0xffffffcc
   40b38:	ldr	r1, [fp, #-720]	; 0xfffffd30
   40b3c:	cmp	r0, r1
   40b40:	movw	r0, #0
   40b44:	movne	r0, #1
   40b48:	str	r0, [sp, #732]	; 0x2dc
   40b4c:	ldr	r0, [sp, #732]	; 0x2dc
   40b50:	and	r0, r0, #1
   40b54:	ldr	r1, [sp, #740]	; 0x2e4
   40b58:	subs	r0, r1, r0
   40b5c:	ldr	r2, [sp, #736]	; 0x2e0
   40b60:	sbc	r3, r2, #0
   40b64:	movw	ip, #9362	; 0x2492
   40b68:	movt	ip, #4681	; 0x1249
   40b6c:	subs	r0, r0, ip
   40b70:	sbcs	r3, r3, #0
   40b74:	blt	40f90 <__assert_fail@plt+0x2e3d8>
   40b78:	b	40ff0 <__assert_fail@plt+0x2e438>
   40b7c:	ldr	r0, [fp, #-728]	; 0xfffffd28
   40b80:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   40b84:	mov	r2, #0
   40b88:	subs	r3, r0, #1
   40b8c:	sbcs	ip, r1, #0
   40b90:	str	r0, [sp, #728]	; 0x2d8
   40b94:	str	r1, [sp, #724]	; 0x2d4
   40b98:	str	r2, [sp, #720]	; 0x2d0
   40b9c:	blt	40bbc <__assert_fail@plt+0x2e004>
   40ba0:	b	40ba4 <__assert_fail@plt+0x2dfec>
   40ba4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   40ba8:	ldr	r1, [fp, #-720]	; 0xfffffd30
   40bac:	cmp	r0, r1
   40bb0:	movw	r0, #0
   40bb4:	movne	r0, #1
   40bb8:	str	r0, [sp, #720]	; 0x2d0
   40bbc:	ldr	r0, [sp, #720]	; 0x2d0
   40bc0:	and	r0, r0, #1
   40bc4:	ldr	r1, [sp, #728]	; 0x2d8
   40bc8:	subs	r0, r1, r0
   40bcc:	ldr	r2, [sp, #724]	; 0x2d4
   40bd0:	sbc	r3, r2, #0
   40bd4:	mvn	r3, r3
   40bd8:	mvn	r0, r0
   40bdc:	movw	ip, #56173	; 0xdb6d
   40be0:	movt	ip, #60854	; 0xedb6
   40be4:	subs	r0, ip, r0
   40be8:	mvn	ip, #0
   40bec:	sbcs	r3, ip, r3
   40bf0:	blt	40f90 <__assert_fail@plt+0x2e3d8>
   40bf4:	b	40ff0 <__assert_fail@plt+0x2e438>
   40bf8:	b	40d4c <__assert_fail@plt+0x2e194>
   40bfc:	b	40c00 <__assert_fail@plt+0x2e048>
   40c00:	ldr	r0, [fp, #-728]	; 0xfffffd28
   40c04:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   40c08:	mov	r2, #0
   40c0c:	subs	r3, r0, #1
   40c10:	sbcs	ip, r1, #0
   40c14:	str	r0, [sp, #716]	; 0x2cc
   40c18:	str	r1, [sp, #712]	; 0x2c8
   40c1c:	str	r2, [sp, #708]	; 0x2c4
   40c20:	blt	40c40 <__assert_fail@plt+0x2e088>
   40c24:	b	40c28 <__assert_fail@plt+0x2e070>
   40c28:	ldr	r0, [fp, #-52]	; 0xffffffcc
   40c2c:	ldr	r1, [fp, #-720]	; 0xfffffd30
   40c30:	cmp	r0, r1
   40c34:	movw	r0, #0
   40c38:	movne	r0, #1
   40c3c:	str	r0, [sp, #708]	; 0x2c4
   40c40:	ldr	r0, [sp, #708]	; 0x2c4
   40c44:	and	r0, r0, #1
   40c48:	ldr	r1, [sp, #716]	; 0x2cc
   40c4c:	subs	r0, r1, r0
   40c50:	ldr	r2, [sp, #712]	; 0x2c8
   40c54:	sbc	r3, r2, #0
   40c58:	adds	r0, r0, #-2147483648	; 0x80000000
   40c5c:	sbc	r3, r3, #0
   40c60:	rsbs	r0, r0, #0
   40c64:	rscs	r3, r3, #0
   40c68:	blt	40f90 <__assert_fail@plt+0x2e3d8>
   40c6c:	b	40ff0 <__assert_fail@plt+0x2e438>
   40c70:	ldr	r0, [fp, #-728]	; 0xfffffd28
   40c74:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   40c78:	mov	r2, #0
   40c7c:	subs	r3, r0, #1
   40c80:	sbcs	ip, r1, #0
   40c84:	str	r0, [sp, #704]	; 0x2c0
   40c88:	str	r1, [sp, #700]	; 0x2bc
   40c8c:	str	r2, [sp, #696]	; 0x2b8
   40c90:	blt	40cb0 <__assert_fail@plt+0x2e0f8>
   40c94:	b	40c98 <__assert_fail@plt+0x2e0e0>
   40c98:	ldr	r0, [fp, #-52]	; 0xffffffcc
   40c9c:	ldr	r1, [fp, #-720]	; 0xfffffd30
   40ca0:	cmp	r0, r1
   40ca4:	movw	r0, #0
   40ca8:	movne	r0, #1
   40cac:	str	r0, [sp, #696]	; 0x2b8
   40cb0:	ldr	r0, [sp, #696]	; 0x2b8
   40cb4:	and	r0, r0, #1
   40cb8:	ldr	r1, [sp, #704]	; 0x2c0
   40cbc:	subs	r0, r1, r0
   40cc0:	ldr	r2, [sp, #700]	; 0x2bc
   40cc4:	sbc	r3, r2, #0
   40cc8:	subs	r0, r0, #1
   40ccc:	sbcs	r3, r3, #0
   40cd0:	blt	40ff0 <__assert_fail@plt+0x2e438>
   40cd4:	b	40cd8 <__assert_fail@plt+0x2e120>
   40cd8:	ldr	r0, [fp, #-728]	; 0xfffffd28
   40cdc:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   40ce0:	mov	r2, #0
   40ce4:	subs	r3, r0, #1
   40ce8:	sbcs	ip, r1, #0
   40cec:	str	r0, [sp, #692]	; 0x2b4
   40cf0:	str	r1, [sp, #688]	; 0x2b0
   40cf4:	str	r2, [sp, #684]	; 0x2ac
   40cf8:	blt	40d18 <__assert_fail@plt+0x2e160>
   40cfc:	b	40d00 <__assert_fail@plt+0x2e148>
   40d00:	ldr	r0, [fp, #-52]	; 0xffffffcc
   40d04:	ldr	r1, [fp, #-720]	; 0xfffffd30
   40d08:	cmp	r0, r1
   40d0c:	movw	r0, #0
   40d10:	movne	r0, #1
   40d14:	str	r0, [sp, #684]	; 0x2ac
   40d18:	ldr	r0, [sp, #684]	; 0x2ac
   40d1c:	mvn	r0, r0
   40d20:	mvn	r1, #1
   40d24:	orr	r0, r0, r1
   40d28:	ldr	r1, [sp, #692]	; 0x2b4
   40d2c:	adds	r0, r0, r1
   40d30:	ldr	r2, [sp, #688]	; 0x2b0
   40d34:	sbc	r3, r2, #0
   40d38:	mvn	ip, #-2147483648	; 0x80000000
   40d3c:	subs	r0, ip, r0
   40d40:	rscs	r3, r3, #0
   40d44:	blt	40f90 <__assert_fail@plt+0x2e3d8>
   40d48:	b	40ff0 <__assert_fail@plt+0x2e438>
   40d4c:	ldr	r0, [fp, #-728]	; 0xfffffd28
   40d50:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   40d54:	mov	r2, #0
   40d58:	subs	r3, r0, #1
   40d5c:	sbcs	ip, r1, #0
   40d60:	str	r0, [sp, #680]	; 0x2a8
   40d64:	str	r1, [sp, #676]	; 0x2a4
   40d68:	str	r2, [sp, #672]	; 0x2a0
   40d6c:	blt	40d8c <__assert_fail@plt+0x2e1d4>
   40d70:	b	40d74 <__assert_fail@plt+0x2e1bc>
   40d74:	ldr	r0, [fp, #-52]	; 0xffffffcc
   40d78:	ldr	r1, [fp, #-720]	; 0xfffffd30
   40d7c:	cmp	r0, r1
   40d80:	movw	r0, #0
   40d84:	movne	r0, #1
   40d88:	str	r0, [sp, #672]	; 0x2a0
   40d8c:	ldr	r0, [sp, #672]	; 0x2a0
   40d90:	and	r0, r0, #1
   40d94:	ldr	r1, [sp, #680]	; 0x2a8
   40d98:	subs	r0, r1, r0
   40d9c:	ldr	r2, [sp, #676]	; 0x2a4
   40da0:	sbc	r3, r2, #0
   40da4:	movw	ip, #56174	; 0xdb6e
   40da8:	movt	ip, #60854	; 0xedb6
   40dac:	subs	r0, ip, r0
   40db0:	mvn	ip, #0
   40db4:	sbcs	r3, ip, r3
   40db8:	blt	40f90 <__assert_fail@plt+0x2e3d8>
   40dbc:	b	40ff0 <__assert_fail@plt+0x2e438>
   40dc0:	b	40dc8 <__assert_fail@plt+0x2e210>
   40dc4:	b	40ff0 <__assert_fail@plt+0x2e438>
   40dc8:	ldr	r0, [fp, #-728]	; 0xfffffd28
   40dcc:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   40dd0:	mov	r2, #0
   40dd4:	subs	r3, r0, #1
   40dd8:	sbcs	ip, r1, #0
   40ddc:	str	r0, [sp, #668]	; 0x29c
   40de0:	str	r1, [sp, #664]	; 0x298
   40de4:	str	r2, [sp, #660]	; 0x294
   40de8:	blt	40e08 <__assert_fail@plt+0x2e250>
   40dec:	b	40df0 <__assert_fail@plt+0x2e238>
   40df0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   40df4:	ldr	r1, [fp, #-720]	; 0xfffffd30
   40df8:	cmp	r0, r1
   40dfc:	movw	r0, #0
   40e00:	movne	r0, #1
   40e04:	str	r0, [sp, #660]	; 0x294
   40e08:	ldr	r0, [sp, #660]	; 0x294
   40e0c:	and	r0, r0, #1
   40e10:	ldr	r1, [sp, #668]	; 0x29c
   40e14:	subs	r0, r1, r0
   40e18:	ldr	r2, [sp, #664]	; 0x298
   40e1c:	sbc	r3, r2, #0
   40e20:	cmn	r3, #1
   40e24:	bgt	40f20 <__assert_fail@plt+0x2e368>
   40e28:	b	40e2c <__assert_fail@plt+0x2e274>
   40e2c:	b	40e30 <__assert_fail@plt+0x2e278>
   40e30:	b	40eac <__assert_fail@plt+0x2e2f4>
   40e34:	b	40eac <__assert_fail@plt+0x2e2f4>
   40e38:	ldr	r0, [fp, #-728]	; 0xfffffd28
   40e3c:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   40e40:	mov	r2, #0
   40e44:	subs	r3, r0, #1
   40e48:	sbcs	ip, r1, #0
   40e4c:	str	r0, [sp, #656]	; 0x290
   40e50:	str	r1, [sp, #652]	; 0x28c
   40e54:	str	r2, [sp, #648]	; 0x288
   40e58:	blt	40e78 <__assert_fail@plt+0x2e2c0>
   40e5c:	b	40e60 <__assert_fail@plt+0x2e2a8>
   40e60:	ldr	r0, [fp, #-52]	; 0xffffffcc
   40e64:	ldr	r1, [fp, #-720]	; 0xfffffd30
   40e68:	cmp	r0, r1
   40e6c:	movw	r0, #0
   40e70:	movne	r0, #1
   40e74:	str	r0, [sp, #648]	; 0x288
   40e78:	ldr	r0, [sp, #648]	; 0x288
   40e7c:	and	r0, r0, #1
   40e80:	ldr	r1, [sp, #656]	; 0x290
   40e84:	subs	r0, r1, r0
   40e88:	ldr	r2, [sp, #652]	; 0x28c
   40e8c:	sbc	r3, r2, #0
   40e90:	and	r0, r0, r3
   40e94:	cmn	r0, #1
   40e98:	bne	40eac <__assert_fail@plt+0x2e2f4>
   40e9c:	b	40ea0 <__assert_fail@plt+0x2e2e8>
   40ea0:	b	40ea4 <__assert_fail@plt+0x2e2ec>
   40ea4:	b	40ff0 <__assert_fail@plt+0x2e438>
   40ea8:	b	40ff0 <__assert_fail@plt+0x2e438>
   40eac:	ldr	r0, [fp, #-728]	; 0xfffffd28
   40eb0:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   40eb4:	mov	r2, #0
   40eb8:	subs	r3, r0, #1
   40ebc:	sbcs	ip, r1, #0
   40ec0:	str	r0, [sp, #644]	; 0x284
   40ec4:	str	r1, [sp, #640]	; 0x280
   40ec8:	str	r2, [sp, #636]	; 0x27c
   40ecc:	blt	40eec <__assert_fail@plt+0x2e334>
   40ed0:	b	40ed4 <__assert_fail@plt+0x2e31c>
   40ed4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   40ed8:	ldr	r1, [fp, #-720]	; 0xfffffd30
   40edc:	cmp	r0, r1
   40ee0:	movw	r0, #0
   40ee4:	movne	r0, #1
   40ee8:	str	r0, [sp, #636]	; 0x27c
   40eec:	ldr	r0, [sp, #636]	; 0x27c
   40ef0:	and	r0, r0, #1
   40ef4:	ldr	r1, [sp, #644]	; 0x284
   40ef8:	subs	r2, r1, r0
   40efc:	ldr	r0, [sp, #640]	; 0x280
   40f00:	sbc	r3, r0, #0
   40f04:	mov	r0, #-2147483648	; 0x80000000
   40f08:	mvn	r1, #0
   40f0c:	bl	75338 <__assert_fail@plt+0x62780>
   40f10:	subs	r0, r0, #7
   40f14:	sbcs	r1, r1, #0
   40f18:	blt	40f90 <__assert_fail@plt+0x2e3d8>
   40f1c:	b	40ff0 <__assert_fail@plt+0x2e438>
   40f20:	ldr	r0, [fp, #-728]	; 0xfffffd28
   40f24:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   40f28:	mov	r2, #0
   40f2c:	subs	r3, r0, #1
   40f30:	sbcs	ip, r1, #0
   40f34:	str	r0, [sp, #632]	; 0x278
   40f38:	str	r1, [sp, #628]	; 0x274
   40f3c:	str	r2, [sp, #624]	; 0x270
   40f40:	blt	40f60 <__assert_fail@plt+0x2e3a8>
   40f44:	b	40f48 <__assert_fail@plt+0x2e390>
   40f48:	ldr	r0, [fp, #-52]	; 0xffffffcc
   40f4c:	ldr	r1, [fp, #-720]	; 0xfffffd30
   40f50:	cmp	r0, r1
   40f54:	movw	r0, #0
   40f58:	movne	r0, #1
   40f5c:	str	r0, [sp, #624]	; 0x270
   40f60:	ldr	r0, [sp, #624]	; 0x270
   40f64:	and	r0, r0, #1
   40f68:	ldr	r1, [sp, #632]	; 0x278
   40f6c:	subs	r0, r1, r0
   40f70:	ldr	r2, [sp, #628]	; 0x274
   40f74:	sbc	r3, r2, #0
   40f78:	movw	ip, #9363	; 0x2493
   40f7c:	movt	ip, #4681	; 0x1249
   40f80:	subs	r0, r0, ip
   40f84:	sbcs	r3, r3, #0
   40f88:	blt	40ff0 <__assert_fail@plt+0x2e438>
   40f8c:	b	40f90 <__assert_fail@plt+0x2e3d8>
   40f90:	ldr	r0, [fp, #-728]	; 0xfffffd28
   40f94:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   40f98:	mov	r2, #0
   40f9c:	subs	r3, r0, #1
   40fa0:	sbcs	r1, r1, #0
   40fa4:	str	r0, [sp, #620]	; 0x26c
   40fa8:	str	r2, [sp, #616]	; 0x268
   40fac:	blt	40fcc <__assert_fail@plt+0x2e414>
   40fb0:	b	40fb4 <__assert_fail@plt+0x2e3fc>
   40fb4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   40fb8:	ldr	r1, [fp, #-720]	; 0xfffffd30
   40fbc:	cmp	r0, r1
   40fc0:	movw	r0, #0
   40fc4:	movne	r0, #1
   40fc8:	str	r0, [sp, #616]	; 0x268
   40fcc:	ldr	r0, [sp, #616]	; 0x268
   40fd0:	and	r0, r0, #1
   40fd4:	ldr	r1, [sp, #620]	; 0x26c
   40fd8:	sub	r0, r1, r0
   40fdc:	rsb	r0, r0, r0, lsl #3
   40fe0:	asr	r2, r0, #31
   40fe4:	str	r0, [fp, #-936]	; 0xfffffc58
   40fe8:	str	r2, [fp, #-932]	; 0xfffffc5c
   40fec:	b	4220c <__assert_fail@plt+0x2f654>
   40ff0:	ldr	r0, [fp, #-728]	; 0xfffffd28
   40ff4:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   40ff8:	mov	r2, #0
   40ffc:	subs	r3, r0, #1
   41000:	sbcs	r1, r1, #0
   41004:	str	r0, [sp, #612]	; 0x264
   41008:	str	r2, [sp, #608]	; 0x260
   4100c:	blt	4102c <__assert_fail@plt+0x2e474>
   41010:	b	41014 <__assert_fail@plt+0x2e45c>
   41014:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41018:	ldr	r1, [fp, #-720]	; 0xfffffd30
   4101c:	cmp	r0, r1
   41020:	movw	r0, #0
   41024:	movne	r0, #1
   41028:	str	r0, [sp, #608]	; 0x260
   4102c:	ldr	r0, [sp, #608]	; 0x260
   41030:	and	r0, r0, #1
   41034:	ldr	r1, [sp, #612]	; 0x264
   41038:	sub	r0, r1, r0
   4103c:	rsb	r0, r0, r0, lsl #3
   41040:	asr	r2, r0, #31
   41044:	str	r0, [fp, #-936]	; 0xfffffc58
   41048:	str	r2, [fp, #-932]	; 0xfffffc5c
   4104c:	b	42110 <__assert_fail@plt+0x2f558>
   41050:	b	41354 <__assert_fail@plt+0x2e79c>
   41054:	ldr	r0, [fp, #-728]	; 0xfffffd28
   41058:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   4105c:	mov	r2, #0
   41060:	subs	r3, r0, #1
   41064:	sbcs	ip, r1, #0
   41068:	str	r0, [sp, #604]	; 0x25c
   4106c:	str	r1, [sp, #600]	; 0x258
   41070:	str	r2, [sp, #596]	; 0x254
   41074:	blt	41094 <__assert_fail@plt+0x2e4dc>
   41078:	b	4107c <__assert_fail@plt+0x2e4c4>
   4107c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41080:	ldr	r1, [fp, #-720]	; 0xfffffd30
   41084:	cmp	r0, r1
   41088:	movw	r0, #0
   4108c:	movne	r0, #1
   41090:	str	r0, [sp, #596]	; 0x254
   41094:	ldr	r0, [sp, #596]	; 0x254
   41098:	and	r0, r0, #1
   4109c:	ldr	r1, [sp, #604]	; 0x25c
   410a0:	subs	r0, r1, r0
   410a4:	ldr	r2, [sp, #600]	; 0x258
   410a8:	sbc	r3, r2, #0
   410ac:	cmn	r3, #1
   410b0:	bgt	4119c <__assert_fail@plt+0x2e5e4>
   410b4:	b	410b8 <__assert_fail@plt+0x2e500>
   410b8:	b	4112c <__assert_fail@plt+0x2e574>
   410bc:	ldr	r0, [fp, #-728]	; 0xfffffd28
   410c0:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   410c4:	mov	r2, #0
   410c8:	subs	r3, r0, #1
   410cc:	sbcs	ip, r1, #0
   410d0:	str	r0, [sp, #592]	; 0x250
   410d4:	str	r1, [sp, #588]	; 0x24c
   410d8:	str	r2, [sp, #584]	; 0x248
   410dc:	blt	410fc <__assert_fail@plt+0x2e544>
   410e0:	b	410e4 <__assert_fail@plt+0x2e52c>
   410e4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   410e8:	ldr	r1, [fp, #-720]	; 0xfffffd30
   410ec:	cmp	r0, r1
   410f0:	movw	r0, #0
   410f4:	movne	r0, #1
   410f8:	str	r0, [sp, #584]	; 0x248
   410fc:	ldr	r0, [sp, #584]	; 0x248
   41100:	and	r0, r0, #1
   41104:	ldr	r1, [sp, #592]	; 0x250
   41108:	subs	r0, r1, r0
   4110c:	ldr	r2, [sp, #588]	; 0x24c
   41110:	sbc	r3, r2, #0
   41114:	movw	ip, #18724	; 0x4924
   41118:	movt	ip, #9362	; 0x2492
   4111c:	subs	r0, r0, ip
   41120:	sbcs	r3, r3, #0
   41124:	blt	414fc <__assert_fail@plt+0x2e944>
   41128:	b	4155c <__assert_fail@plt+0x2e9a4>
   4112c:	ldr	r0, [fp, #-728]	; 0xfffffd28
   41130:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   41134:	mov	r2, #0
   41138:	subs	r3, r0, #1
   4113c:	sbcs	ip, r1, #0
   41140:	str	r0, [sp, #580]	; 0x244
   41144:	str	r1, [sp, #576]	; 0x240
   41148:	str	r2, [sp, #572]	; 0x23c
   4114c:	blt	4116c <__assert_fail@plt+0x2e5b4>
   41150:	b	41154 <__assert_fail@plt+0x2e59c>
   41154:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41158:	ldr	r1, [fp, #-720]	; 0xfffffd30
   4115c:	cmp	r0, r1
   41160:	movw	r0, #0
   41164:	movne	r0, #1
   41168:	str	r0, [sp, #572]	; 0x23c
   4116c:	ldr	r0, [sp, #572]	; 0x23c
   41170:	and	r0, r0, #1
   41174:	ldr	r1, [sp, #580]	; 0x244
   41178:	subs	r0, r1, r0
   4117c:	ldr	r2, [sp, #576]	; 0x240
   41180:	sbc	r3, r2, #0
   41184:	mvn	r3, r3
   41188:	mvn	r0, r0
   4118c:	rsbs	r0, r0, #0
   41190:	rscs	r3, r3, #0
   41194:	blt	414fc <__assert_fail@plt+0x2e944>
   41198:	b	4155c <__assert_fail@plt+0x2e9a4>
   4119c:	b	411a0 <__assert_fail@plt+0x2e5e8>
   411a0:	b	412ec <__assert_fail@plt+0x2e734>
   411a4:	b	412ec <__assert_fail@plt+0x2e734>
   411a8:	b	412ec <__assert_fail@plt+0x2e734>
   411ac:	b	411b0 <__assert_fail@plt+0x2e5f8>
   411b0:	ldr	r0, [fp, #-728]	; 0xfffffd28
   411b4:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   411b8:	mov	r2, #0
   411bc:	subs	r3, r0, #1
   411c0:	sbcs	ip, r1, #0
   411c4:	str	r0, [sp, #568]	; 0x238
   411c8:	str	r1, [sp, #564]	; 0x234
   411cc:	str	r2, [sp, #560]	; 0x230
   411d0:	blt	411f0 <__assert_fail@plt+0x2e638>
   411d4:	b	411d8 <__assert_fail@plt+0x2e620>
   411d8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   411dc:	ldr	r1, [fp, #-720]	; 0xfffffd30
   411e0:	cmp	r0, r1
   411e4:	movw	r0, #0
   411e8:	movne	r0, #1
   411ec:	str	r0, [sp, #560]	; 0x230
   411f0:	ldr	r0, [sp, #560]	; 0x230
   411f4:	and	r0, r0, #1
   411f8:	ldr	r1, [sp, #568]	; 0x238
   411fc:	subs	r0, r1, r0
   41200:	ldr	r2, [sp, #564]	; 0x234
   41204:	sbc	r3, r2, #0
   41208:	rsbs	r0, r0, #0
   4120c:	rscs	r3, r3, #0
   41210:	blt	414fc <__assert_fail@plt+0x2e944>
   41214:	b	4155c <__assert_fail@plt+0x2e9a4>
   41218:	ldr	r0, [fp, #-728]	; 0xfffffd28
   4121c:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   41220:	mov	r2, #0
   41224:	subs	r3, r0, #1
   41228:	sbcs	ip, r1, #0
   4122c:	str	r0, [sp, #556]	; 0x22c
   41230:	str	r1, [sp, #552]	; 0x228
   41234:	str	r2, [sp, #548]	; 0x224
   41238:	blt	41258 <__assert_fail@plt+0x2e6a0>
   4123c:	b	41240 <__assert_fail@plt+0x2e688>
   41240:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41244:	ldr	r1, [fp, #-720]	; 0xfffffd30
   41248:	cmp	r0, r1
   4124c:	movw	r0, #0
   41250:	movne	r0, #1
   41254:	str	r0, [sp, #548]	; 0x224
   41258:	ldr	r0, [sp, #548]	; 0x224
   4125c:	and	r0, r0, #1
   41260:	ldr	r1, [sp, #556]	; 0x22c
   41264:	subs	r0, r1, r0
   41268:	ldr	r2, [sp, #552]	; 0x228
   4126c:	sbc	r3, r2, #0
   41270:	subs	r0, r0, #1
   41274:	sbcs	r3, r3, #0
   41278:	blt	4155c <__assert_fail@plt+0x2e9a4>
   4127c:	b	41280 <__assert_fail@plt+0x2e6c8>
   41280:	ldr	r0, [fp, #-728]	; 0xfffffd28
   41284:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   41288:	mov	r2, #0
   4128c:	subs	r3, r0, #1
   41290:	sbcs	ip, r1, #0
   41294:	str	r0, [sp, #544]	; 0x220
   41298:	str	r1, [sp, #540]	; 0x21c
   4129c:	str	r2, [sp, #536]	; 0x218
   412a0:	blt	412c0 <__assert_fail@plt+0x2e708>
   412a4:	b	412a8 <__assert_fail@plt+0x2e6f0>
   412a8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   412ac:	ldr	r1, [fp, #-720]	; 0xfffffd30
   412b0:	cmp	r0, r1
   412b4:	movw	r0, #0
   412b8:	movne	r0, #1
   412bc:	str	r0, [sp, #536]	; 0x218
   412c0:	ldr	r0, [sp, #536]	; 0x218
   412c4:	mvn	r0, r0
   412c8:	mvn	r1, #1
   412cc:	orr	r0, r0, r1
   412d0:	ldr	r1, [sp, #544]	; 0x220
   412d4:	adds	r0, r0, r1
   412d8:	ldr	r2, [sp, #540]	; 0x21c
   412dc:	sbc	r3, r2, #0
   412e0:	cmn	r3, #1
   412e4:	bgt	414fc <__assert_fail@plt+0x2e944>
   412e8:	b	4155c <__assert_fail@plt+0x2e9a4>
   412ec:	ldr	r0, [fp, #-728]	; 0xfffffd28
   412f0:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   412f4:	mov	r2, #0
   412f8:	subs	r3, r0, #1
   412fc:	sbcs	ip, r1, #0
   41300:	str	r0, [sp, #532]	; 0x214
   41304:	str	r1, [sp, #528]	; 0x210
   41308:	str	r2, [sp, #524]	; 0x20c
   4130c:	blt	4132c <__assert_fail@plt+0x2e774>
   41310:	b	41314 <__assert_fail@plt+0x2e75c>
   41314:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41318:	ldr	r1, [fp, #-720]	; 0xfffffd30
   4131c:	cmp	r0, r1
   41320:	movw	r0, #0
   41324:	movne	r0, #1
   41328:	str	r0, [sp, #524]	; 0x20c
   4132c:	ldr	r0, [sp, #524]	; 0x20c
   41330:	and	r0, r0, #1
   41334:	ldr	r1, [sp, #532]	; 0x214
   41338:	subs	r0, r1, r0
   4133c:	ldr	r2, [sp, #528]	; 0x210
   41340:	sbc	r3, r2, #0
   41344:	rsbs	r0, r0, #0
   41348:	rscs	r3, r3, #0
   4134c:	blt	414fc <__assert_fail@plt+0x2e944>
   41350:	b	4155c <__assert_fail@plt+0x2e9a4>
   41354:	b	4135c <__assert_fail@plt+0x2e7a4>
   41358:	b	4155c <__assert_fail@plt+0x2e9a4>
   4135c:	ldr	r0, [fp, #-728]	; 0xfffffd28
   41360:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   41364:	mov	r2, #0
   41368:	subs	r3, r0, #1
   4136c:	sbcs	ip, r1, #0
   41370:	str	r0, [sp, #520]	; 0x208
   41374:	str	r1, [sp, #516]	; 0x204
   41378:	str	r2, [sp, #512]	; 0x200
   4137c:	blt	4139c <__assert_fail@plt+0x2e7e4>
   41380:	b	41384 <__assert_fail@plt+0x2e7cc>
   41384:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41388:	ldr	r1, [fp, #-720]	; 0xfffffd30
   4138c:	cmp	r0, r1
   41390:	movw	r0, #0
   41394:	movne	r0, #1
   41398:	str	r0, [sp, #512]	; 0x200
   4139c:	ldr	r0, [sp, #512]	; 0x200
   413a0:	and	r0, r0, #1
   413a4:	ldr	r1, [sp, #520]	; 0x208
   413a8:	subs	r0, r1, r0
   413ac:	ldr	r2, [sp, #516]	; 0x204
   413b0:	sbc	r3, r2, #0
   413b4:	cmn	r3, #1
   413b8:	bgt	4148c <__assert_fail@plt+0x2e8d4>
   413bc:	b	413c0 <__assert_fail@plt+0x2e808>
   413c0:	b	413c4 <__assert_fail@plt+0x2e80c>
   413c4:	b	41440 <__assert_fail@plt+0x2e888>
   413c8:	b	41440 <__assert_fail@plt+0x2e888>
   413cc:	ldr	r0, [fp, #-728]	; 0xfffffd28
   413d0:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   413d4:	mov	r2, #0
   413d8:	subs	r3, r0, #1
   413dc:	sbcs	ip, r1, #0
   413e0:	str	r0, [sp, #508]	; 0x1fc
   413e4:	str	r1, [sp, #504]	; 0x1f8
   413e8:	str	r2, [sp, #500]	; 0x1f4
   413ec:	blt	4140c <__assert_fail@plt+0x2e854>
   413f0:	b	413f4 <__assert_fail@plt+0x2e83c>
   413f4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   413f8:	ldr	r1, [fp, #-720]	; 0xfffffd30
   413fc:	cmp	r0, r1
   41400:	movw	r0, #0
   41404:	movne	r0, #1
   41408:	str	r0, [sp, #500]	; 0x1f4
   4140c:	ldr	r0, [sp, #500]	; 0x1f4
   41410:	and	r0, r0, #1
   41414:	ldr	r1, [sp, #508]	; 0x1fc
   41418:	subs	r0, r1, r0
   4141c:	ldr	r2, [sp, #504]	; 0x1f8
   41420:	sbc	r3, r2, #0
   41424:	and	r0, r0, r3
   41428:	cmn	r0, #1
   4142c:	bne	41440 <__assert_fail@plt+0x2e888>
   41430:	b	41434 <__assert_fail@plt+0x2e87c>
   41434:	b	41438 <__assert_fail@plt+0x2e880>
   41438:	b	414fc <__assert_fail@plt+0x2e944>
   4143c:	b	414fc <__assert_fail@plt+0x2e944>
   41440:	ldr	r0, [fp, #-728]	; 0xfffffd28
   41444:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   41448:	mov	r2, #0
   4144c:	subs	r0, r0, #1
   41450:	sbcs	r1, r1, #0
   41454:	str	r2, [sp, #496]	; 0x1f0
   41458:	blt	41478 <__assert_fail@plt+0x2e8c0>
   4145c:	b	41460 <__assert_fail@plt+0x2e8a8>
   41460:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41464:	ldr	r1, [fp, #-720]	; 0xfffffd30
   41468:	cmp	r0, r1
   4146c:	movw	r0, #0
   41470:	movne	r0, #1
   41474:	str	r0, [sp, #496]	; 0x1f0
   41478:	ldr	r0, [sp, #496]	; 0x1f0
   4147c:	mov	r1, #1
   41480:	cmp	r1, #0
   41484:	bne	414fc <__assert_fail@plt+0x2e944>
   41488:	b	4155c <__assert_fail@plt+0x2e9a4>
   4148c:	ldr	r0, [fp, #-728]	; 0xfffffd28
   41490:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   41494:	mov	r2, #0
   41498:	subs	r3, r0, #1
   4149c:	sbcs	ip, r1, #0
   414a0:	str	r0, [sp, #492]	; 0x1ec
   414a4:	str	r1, [sp, #488]	; 0x1e8
   414a8:	str	r2, [sp, #484]	; 0x1e4
   414ac:	blt	414cc <__assert_fail@plt+0x2e914>
   414b0:	b	414b4 <__assert_fail@plt+0x2e8fc>
   414b4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   414b8:	ldr	r1, [fp, #-720]	; 0xfffffd30
   414bc:	cmp	r0, r1
   414c0:	movw	r0, #0
   414c4:	movne	r0, #1
   414c8:	str	r0, [sp, #484]	; 0x1e4
   414cc:	ldr	r0, [sp, #484]	; 0x1e4
   414d0:	and	r0, r0, #1
   414d4:	ldr	r1, [sp, #492]	; 0x1ec
   414d8:	subs	r0, r1, r0
   414dc:	ldr	r2, [sp, #488]	; 0x1e8
   414e0:	sbc	r3, r2, #0
   414e4:	movw	ip, #18725	; 0x4925
   414e8:	movt	ip, #9362	; 0x2492
   414ec:	subs	r0, r0, ip
   414f0:	sbcs	r3, r3, #0
   414f4:	blt	4155c <__assert_fail@plt+0x2e9a4>
   414f8:	b	414fc <__assert_fail@plt+0x2e944>
   414fc:	ldr	r0, [fp, #-728]	; 0xfffffd28
   41500:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   41504:	mov	r2, #0
   41508:	subs	r3, r0, #1
   4150c:	sbcs	r1, r1, #0
   41510:	str	r0, [sp, #480]	; 0x1e0
   41514:	str	r2, [sp, #476]	; 0x1dc
   41518:	blt	41538 <__assert_fail@plt+0x2e980>
   4151c:	b	41520 <__assert_fail@plt+0x2e968>
   41520:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41524:	ldr	r1, [fp, #-720]	; 0xfffffd30
   41528:	cmp	r0, r1
   4152c:	movw	r0, #0
   41530:	movne	r0, #1
   41534:	str	r0, [sp, #476]	; 0x1dc
   41538:	ldr	r0, [sp, #476]	; 0x1dc
   4153c:	and	r0, r0, #1
   41540:	ldr	r1, [sp, #480]	; 0x1e0
   41544:	sub	r0, r1, r0
   41548:	rsb	r0, r0, r0, lsl #3
   4154c:	mov	r2, #0
   41550:	str	r2, [fp, #-932]	; 0xfffffc5c
   41554:	str	r0, [fp, #-936]	; 0xfffffc58
   41558:	b	4220c <__assert_fail@plt+0x2f654>
   4155c:	ldr	r0, [fp, #-728]	; 0xfffffd28
   41560:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   41564:	mov	r2, #0
   41568:	subs	r3, r0, #1
   4156c:	sbcs	r1, r1, #0
   41570:	str	r0, [sp, #472]	; 0x1d8
   41574:	str	r2, [sp, #468]	; 0x1d4
   41578:	blt	41598 <__assert_fail@plt+0x2e9e0>
   4157c:	b	41580 <__assert_fail@plt+0x2e9c8>
   41580:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41584:	ldr	r1, [fp, #-720]	; 0xfffffd30
   41588:	cmp	r0, r1
   4158c:	movw	r0, #0
   41590:	movne	r0, #1
   41594:	str	r0, [sp, #468]	; 0x1d4
   41598:	ldr	r0, [sp, #468]	; 0x1d4
   4159c:	and	r0, r0, #1
   415a0:	ldr	r1, [sp, #472]	; 0x1d8
   415a4:	sub	r0, r1, r0
   415a8:	rsb	r0, r0, r0, lsl #3
   415ac:	mov	r2, #0
   415b0:	str	r2, [fp, #-932]	; 0xfffffc5c
   415b4:	str	r0, [fp, #-936]	; 0xfffffc58
   415b8:	b	42110 <__assert_fail@plt+0x2f558>
   415bc:	b	415c0 <__assert_fail@plt+0x2ea08>
   415c0:	b	418c4 <__assert_fail@plt+0x2ed0c>
   415c4:	ldr	r0, [fp, #-728]	; 0xfffffd28
   415c8:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   415cc:	mov	r2, #0
   415d0:	subs	r3, r0, #1
   415d4:	sbcs	ip, r1, #0
   415d8:	str	r0, [sp, #464]	; 0x1d0
   415dc:	str	r1, [sp, #460]	; 0x1cc
   415e0:	str	r2, [sp, #456]	; 0x1c8
   415e4:	blt	41604 <__assert_fail@plt+0x2ea4c>
   415e8:	b	415ec <__assert_fail@plt+0x2ea34>
   415ec:	ldr	r0, [fp, #-52]	; 0xffffffcc
   415f0:	ldr	r1, [fp, #-720]	; 0xfffffd30
   415f4:	cmp	r0, r1
   415f8:	movw	r0, #0
   415fc:	movne	r0, #1
   41600:	str	r0, [sp, #456]	; 0x1c8
   41604:	ldr	r0, [sp, #456]	; 0x1c8
   41608:	and	r0, r0, #1
   4160c:	ldr	r1, [sp, #464]	; 0x1d0
   41610:	subs	r0, r1, r0
   41614:	ldr	r2, [sp, #460]	; 0x1cc
   41618:	sbc	r3, r2, #0
   4161c:	cmn	r3, #1
   41620:	bgt	41724 <__assert_fail@plt+0x2eb6c>
   41624:	b	41628 <__assert_fail@plt+0x2ea70>
   41628:	b	4162c <__assert_fail@plt+0x2ea74>
   4162c:	ldr	r0, [fp, #-728]	; 0xfffffd28
   41630:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   41634:	mov	r2, #0
   41638:	subs	r3, r0, #1
   4163c:	sbcs	ip, r1, #0
   41640:	str	r0, [sp, #452]	; 0x1c4
   41644:	str	r1, [sp, #448]	; 0x1c0
   41648:	str	r2, [sp, #444]	; 0x1bc
   4164c:	blt	4166c <__assert_fail@plt+0x2eab4>
   41650:	b	41654 <__assert_fail@plt+0x2ea9c>
   41654:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41658:	ldr	r1, [fp, #-720]	; 0xfffffd30
   4165c:	cmp	r0, r1
   41660:	movw	r0, #0
   41664:	movne	r0, #1
   41668:	str	r0, [sp, #444]	; 0x1bc
   4166c:	ldr	r0, [sp, #444]	; 0x1bc
   41670:	and	r0, r0, #1
   41674:	ldr	r1, [sp, #452]	; 0x1c4
   41678:	subs	r0, r1, r0
   4167c:	ldr	r2, [sp, #448]	; 0x1c0
   41680:	sbc	r3, r2, #0
   41684:	movw	ip, #37449	; 0x9249
   41688:	movt	ip, #18724	; 0x4924
   4168c:	subs	r0, r0, ip
   41690:	movw	ip, #9362	; 0x2492
   41694:	movt	ip, #4681	; 0x1249
   41698:	sbcs	r3, r3, ip
   4169c:	blt	41a90 <__assert_fail@plt+0x2eed8>
   416a0:	b	41b04 <__assert_fail@plt+0x2ef4c>
   416a4:	ldr	r0, [fp, #-728]	; 0xfffffd28
   416a8:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   416ac:	mov	r2, #0
   416b0:	subs	r3, r0, #1
   416b4:	sbcs	ip, r1, #0
   416b8:	str	r0, [sp, #440]	; 0x1b8
   416bc:	str	r1, [sp, #436]	; 0x1b4
   416c0:	str	r2, [sp, #432]	; 0x1b0
   416c4:	blt	416e4 <__assert_fail@plt+0x2eb2c>
   416c8:	b	416cc <__assert_fail@plt+0x2eb14>
   416cc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   416d0:	ldr	r1, [fp, #-720]	; 0xfffffd30
   416d4:	cmp	r0, r1
   416d8:	movw	r0, #0
   416dc:	movne	r0, #1
   416e0:	str	r0, [sp, #432]	; 0x1b0
   416e4:	ldr	r0, [sp, #432]	; 0x1b0
   416e8:	and	r0, r0, #1
   416ec:	ldr	r1, [sp, #440]	; 0x1b8
   416f0:	subs	r0, r1, r0
   416f4:	ldr	r2, [sp, #436]	; 0x1b4
   416f8:	sbc	r3, r2, #0
   416fc:	mvn	r3, r3
   41700:	mvn	r0, r0
   41704:	movw	ip, #28086	; 0x6db6
   41708:	movt	ip, #46811	; 0xb6db
   4170c:	subs	r0, ip, r0
   41710:	movw	ip, #56173	; 0xdb6d
   41714:	movt	ip, #60854	; 0xedb6
   41718:	sbcs	r3, ip, r3
   4171c:	blt	41a90 <__assert_fail@plt+0x2eed8>
   41720:	b	41b04 <__assert_fail@plt+0x2ef4c>
   41724:	b	4184c <__assert_fail@plt+0x2ec94>
   41728:	b	4172c <__assert_fail@plt+0x2eb74>
   4172c:	ldr	r0, [fp, #-728]	; 0xfffffd28
   41730:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   41734:	mov	r2, #0
   41738:	subs	r3, r0, #1
   4173c:	sbcs	ip, r1, #0
   41740:	str	r0, [sp, #428]	; 0x1ac
   41744:	str	r1, [sp, #424]	; 0x1a8
   41748:	str	r2, [sp, #420]	; 0x1a4
   4174c:	blt	4176c <__assert_fail@plt+0x2ebb4>
   41750:	b	41754 <__assert_fail@plt+0x2eb9c>
   41754:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41758:	ldr	r1, [fp, #-720]	; 0xfffffd30
   4175c:	cmp	r0, r1
   41760:	movw	r0, #0
   41764:	movne	r0, #1
   41768:	str	r0, [sp, #420]	; 0x1a4
   4176c:	ldr	r0, [sp, #420]	; 0x1a4
   41770:	and	r0, r0, #1
   41774:	ldr	r1, [sp, #428]	; 0x1ac
   41778:	subs	r0, r1, r0
   4177c:	ldr	r2, [sp, #424]	; 0x1a8
   41780:	sbc	r3, r2, #0
   41784:	add	r3, r3, #-2147483648	; 0x80000000
   41788:	rsbs	r0, r0, #0
   4178c:	rscs	r3, r3, #0
   41790:	blt	41a90 <__assert_fail@plt+0x2eed8>
   41794:	b	41b04 <__assert_fail@plt+0x2ef4c>
   41798:	ldr	r0, [fp, #-728]	; 0xfffffd28
   4179c:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   417a0:	mov	r2, #0
   417a4:	subs	r3, r0, #1
   417a8:	sbcs	ip, r1, #0
   417ac:	str	r0, [sp, #416]	; 0x1a0
   417b0:	str	r1, [sp, #412]	; 0x19c
   417b4:	str	r2, [sp, #408]	; 0x198
   417b8:	blt	417d8 <__assert_fail@plt+0x2ec20>
   417bc:	b	417c0 <__assert_fail@plt+0x2ec08>
   417c0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   417c4:	ldr	r1, [fp, #-720]	; 0xfffffd30
   417c8:	cmp	r0, r1
   417cc:	movw	r0, #0
   417d0:	movne	r0, #1
   417d4:	str	r0, [sp, #408]	; 0x198
   417d8:	ldr	r0, [sp, #408]	; 0x198
   417dc:	and	r0, r0, #1
   417e0:	ldr	r1, [sp, #416]	; 0x1a0
   417e4:	subs	r0, r1, r0
   417e8:	ldr	r2, [sp, #412]	; 0x19c
   417ec:	sbc	r3, r2, #0
   417f0:	subs	r0, r0, #1
   417f4:	sbcs	r3, r3, #0
   417f8:	blt	41b04 <__assert_fail@plt+0x2ef4c>
   417fc:	b	41800 <__assert_fail@plt+0x2ec48>
   41800:	ldr	r0, [fp, #-728]	; 0xfffffd28
   41804:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   41808:	mov	r2, #0
   4180c:	subs	r0, r0, #1
   41810:	sbcs	r1, r1, #0
   41814:	str	r2, [sp, #404]	; 0x194
   41818:	blt	41838 <__assert_fail@plt+0x2ec80>
   4181c:	b	41820 <__assert_fail@plt+0x2ec68>
   41820:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41824:	ldr	r1, [fp, #-720]	; 0xfffffd30
   41828:	cmp	r0, r1
   4182c:	movw	r0, #0
   41830:	movne	r0, #1
   41834:	str	r0, [sp, #404]	; 0x194
   41838:	ldr	r0, [sp, #404]	; 0x194
   4183c:	mov	r1, #0
   41840:	cmp	r1, #0
   41844:	bne	41a90 <__assert_fail@plt+0x2eed8>
   41848:	b	41b04 <__assert_fail@plt+0x2ef4c>
   4184c:	ldr	r0, [fp, #-728]	; 0xfffffd28
   41850:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   41854:	mov	r2, #0
   41858:	subs	r3, r0, #1
   4185c:	sbcs	ip, r1, #0
   41860:	str	r0, [sp, #400]	; 0x190
   41864:	str	r1, [sp, #396]	; 0x18c
   41868:	str	r2, [sp, #392]	; 0x188
   4186c:	blt	4188c <__assert_fail@plt+0x2ecd4>
   41870:	b	41874 <__assert_fail@plt+0x2ecbc>
   41874:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41878:	ldr	r1, [fp, #-720]	; 0xfffffd30
   4187c:	cmp	r0, r1
   41880:	movw	r0, #0
   41884:	movne	r0, #1
   41888:	str	r0, [sp, #392]	; 0x188
   4188c:	ldr	r0, [sp, #392]	; 0x188
   41890:	and	r0, r0, #1
   41894:	ldr	r1, [sp, #400]	; 0x190
   41898:	subs	r0, r1, r0
   4189c:	ldr	r2, [sp, #396]	; 0x18c
   418a0:	sbc	r3, r2, #0
   418a4:	movw	ip, #28087	; 0x6db7
   418a8:	movt	ip, #46811	; 0xb6db
   418ac:	subs	r0, ip, r0
   418b0:	movw	ip, #56173	; 0xdb6d
   418b4:	movt	ip, #60854	; 0xedb6
   418b8:	sbcs	r3, ip, r3
   418bc:	blt	41a90 <__assert_fail@plt+0x2eed8>
   418c0:	b	41b04 <__assert_fail@plt+0x2ef4c>
   418c4:	b	418cc <__assert_fail@plt+0x2ed14>
   418c8:	b	41b04 <__assert_fail@plt+0x2ef4c>
   418cc:	ldr	r0, [fp, #-728]	; 0xfffffd28
   418d0:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   418d4:	mov	r2, #0
   418d8:	subs	r3, r0, #1
   418dc:	sbcs	ip, r1, #0
   418e0:	str	r0, [sp, #388]	; 0x184
   418e4:	str	r1, [sp, #384]	; 0x180
   418e8:	str	r2, [sp, #380]	; 0x17c
   418ec:	blt	4190c <__assert_fail@plt+0x2ed54>
   418f0:	b	418f4 <__assert_fail@plt+0x2ed3c>
   418f4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   418f8:	ldr	r1, [fp, #-720]	; 0xfffffd30
   418fc:	cmp	r0, r1
   41900:	movw	r0, #0
   41904:	movne	r0, #1
   41908:	str	r0, [sp, #380]	; 0x17c
   4190c:	ldr	r0, [sp, #380]	; 0x17c
   41910:	and	r0, r0, #1
   41914:	ldr	r1, [sp, #388]	; 0x184
   41918:	subs	r0, r1, r0
   4191c:	ldr	r2, [sp, #384]	; 0x180
   41920:	sbc	r3, r2, #0
   41924:	cmn	r3, #1
   41928:	bgt	41a18 <__assert_fail@plt+0x2ee60>
   4192c:	b	41930 <__assert_fail@plt+0x2ed78>
   41930:	ldr	r0, [fp, #-728]	; 0xfffffd28
   41934:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   41938:	mov	r2, #0
   4193c:	subs	r3, r0, #1
   41940:	sbcs	ip, r1, #0
   41944:	str	r0, [sp, #376]	; 0x178
   41948:	str	r1, [sp, #372]	; 0x174
   4194c:	str	r2, [sp, #368]	; 0x170
   41950:	blt	41970 <__assert_fail@plt+0x2edb8>
   41954:	b	41958 <__assert_fail@plt+0x2eda0>
   41958:	ldr	r0, [fp, #-52]	; 0xffffffcc
   4195c:	ldr	r1, [fp, #-720]	; 0xfffffd30
   41960:	cmp	r0, r1
   41964:	movw	r0, #0
   41968:	movne	r0, #1
   4196c:	str	r0, [sp, #368]	; 0x170
   41970:	ldr	r0, [sp, #368]	; 0x170
   41974:	and	r0, r0, #1
   41978:	ldr	r1, [sp, #376]	; 0x178
   4197c:	subs	r0, r1, r0
   41980:	ldr	r2, [sp, #372]	; 0x174
   41984:	sbc	r3, r2, #0
   41988:	and	r0, r0, r3
   4198c:	cmn	r0, #1
   41990:	bne	419a4 <__assert_fail@plt+0x2edec>
   41994:	b	41998 <__assert_fail@plt+0x2ede0>
   41998:	b	4199c <__assert_fail@plt+0x2ede4>
   4199c:	b	41b04 <__assert_fail@plt+0x2ef4c>
   419a0:	b	41b04 <__assert_fail@plt+0x2ef4c>
   419a4:	ldr	r0, [fp, #-728]	; 0xfffffd28
   419a8:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   419ac:	mov	r2, #0
   419b0:	subs	r3, r0, #1
   419b4:	sbcs	ip, r1, #0
   419b8:	str	r0, [sp, #364]	; 0x16c
   419bc:	str	r1, [sp, #360]	; 0x168
   419c0:	str	r2, [sp, #356]	; 0x164
   419c4:	blt	419e4 <__assert_fail@plt+0x2ee2c>
   419c8:	b	419cc <__assert_fail@plt+0x2ee14>
   419cc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   419d0:	ldr	r1, [fp, #-720]	; 0xfffffd30
   419d4:	cmp	r0, r1
   419d8:	movw	r0, #0
   419dc:	movne	r0, #1
   419e0:	str	r0, [sp, #356]	; 0x164
   419e4:	ldr	r0, [sp, #356]	; 0x164
   419e8:	and	r0, r0, #1
   419ec:	ldr	r1, [sp, #364]	; 0x16c
   419f0:	subs	r2, r1, r0
   419f4:	ldr	r0, [sp, #360]	; 0x168
   419f8:	sbc	r3, r0, #0
   419fc:	mov	r0, #0
   41a00:	mov	r1, #-2147483648	; 0x80000000
   41a04:	bl	75338 <__assert_fail@plt+0x62780>
   41a08:	subs	r0, r0, #7
   41a0c:	sbcs	r1, r1, #0
   41a10:	blt	41a90 <__assert_fail@plt+0x2eed8>
   41a14:	b	41b04 <__assert_fail@plt+0x2ef4c>
   41a18:	ldr	r0, [fp, #-728]	; 0xfffffd28
   41a1c:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   41a20:	mov	r2, #0
   41a24:	subs	r3, r0, #1
   41a28:	sbcs	ip, r1, #0
   41a2c:	str	r0, [sp, #352]	; 0x160
   41a30:	str	r1, [sp, #348]	; 0x15c
   41a34:	str	r2, [sp, #344]	; 0x158
   41a38:	blt	41a58 <__assert_fail@plt+0x2eea0>
   41a3c:	b	41a40 <__assert_fail@plt+0x2ee88>
   41a40:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41a44:	ldr	r1, [fp, #-720]	; 0xfffffd30
   41a48:	cmp	r0, r1
   41a4c:	movw	r0, #0
   41a50:	movne	r0, #1
   41a54:	str	r0, [sp, #344]	; 0x158
   41a58:	ldr	r0, [sp, #344]	; 0x158
   41a5c:	and	r0, r0, #1
   41a60:	ldr	r1, [sp, #352]	; 0x160
   41a64:	subs	r0, r1, r0
   41a68:	ldr	r2, [sp, #348]	; 0x15c
   41a6c:	sbc	r3, r2, #0
   41a70:	movw	ip, #37450	; 0x924a
   41a74:	movt	ip, #18724	; 0x4924
   41a78:	subs	r0, r0, ip
   41a7c:	movw	ip, #9362	; 0x2492
   41a80:	movt	ip, #4681	; 0x1249
   41a84:	sbcs	r3, r3, ip
   41a88:	blt	41b04 <__assert_fail@plt+0x2ef4c>
   41a8c:	b	41a90 <__assert_fail@plt+0x2eed8>
   41a90:	ldr	r0, [fp, #-728]	; 0xfffffd28
   41a94:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   41a98:	mov	r2, #0
   41a9c:	subs	r3, r0, #1
   41aa0:	sbcs	ip, r1, #0
   41aa4:	str	r0, [sp, #340]	; 0x154
   41aa8:	str	r1, [sp, #336]	; 0x150
   41aac:	str	r2, [sp, #332]	; 0x14c
   41ab0:	blt	41ad0 <__assert_fail@plt+0x2ef18>
   41ab4:	b	41ab8 <__assert_fail@plt+0x2ef00>
   41ab8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41abc:	ldr	r1, [fp, #-720]	; 0xfffffd30
   41ac0:	cmp	r0, r1
   41ac4:	movw	r0, #0
   41ac8:	movne	r0, #1
   41acc:	str	r0, [sp, #332]	; 0x14c
   41ad0:	ldr	r0, [sp, #332]	; 0x14c
   41ad4:	and	r0, r0, #1
   41ad8:	ldr	r1, [sp, #340]	; 0x154
   41adc:	subs	r0, r1, r0
   41ae0:	ldr	r2, [sp, #336]	; 0x150
   41ae4:	sbc	r3, r2, #0
   41ae8:	mov	ip, #7
   41aec:	umull	r0, ip, r0, ip
   41af0:	rsb	r3, r3, r3, lsl #3
   41af4:	add	r3, ip, r3
   41af8:	str	r0, [fp, #-936]	; 0xfffffc58
   41afc:	str	r3, [fp, #-932]	; 0xfffffc5c
   41b00:	b	4220c <__assert_fail@plt+0x2f654>
   41b04:	ldr	r0, [fp, #-728]	; 0xfffffd28
   41b08:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   41b0c:	mov	r2, #0
   41b10:	subs	r3, r0, #1
   41b14:	sbcs	ip, r1, #0
   41b18:	str	r0, [sp, #328]	; 0x148
   41b1c:	str	r1, [sp, #324]	; 0x144
   41b20:	str	r2, [sp, #320]	; 0x140
   41b24:	blt	41b44 <__assert_fail@plt+0x2ef8c>
   41b28:	b	41b2c <__assert_fail@plt+0x2ef74>
   41b2c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41b30:	ldr	r1, [fp, #-720]	; 0xfffffd30
   41b34:	cmp	r0, r1
   41b38:	movw	r0, #0
   41b3c:	movne	r0, #1
   41b40:	str	r0, [sp, #320]	; 0x140
   41b44:	ldr	r0, [sp, #320]	; 0x140
   41b48:	and	r0, r0, #1
   41b4c:	ldr	r1, [sp, #328]	; 0x148
   41b50:	subs	r0, r1, r0
   41b54:	ldr	r2, [sp, #324]	; 0x144
   41b58:	sbc	r3, r2, #0
   41b5c:	mov	ip, #7
   41b60:	umull	r0, ip, r0, ip
   41b64:	rsb	r3, r3, r3, lsl #3
   41b68:	add	r3, ip, r3
   41b6c:	str	r0, [fp, #-936]	; 0xfffffc58
   41b70:	str	r3, [fp, #-932]	; 0xfffffc5c
   41b74:	b	42110 <__assert_fail@plt+0x2f558>
   41b78:	b	41e7c <__assert_fail@plt+0x2f2c4>
   41b7c:	ldr	r0, [fp, #-728]	; 0xfffffd28
   41b80:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   41b84:	mov	r2, #0
   41b88:	subs	r3, r0, #1
   41b8c:	sbcs	ip, r1, #0
   41b90:	str	r0, [sp, #316]	; 0x13c
   41b94:	str	r1, [sp, #312]	; 0x138
   41b98:	str	r2, [sp, #308]	; 0x134
   41b9c:	blt	41bbc <__assert_fail@plt+0x2f004>
   41ba0:	b	41ba4 <__assert_fail@plt+0x2efec>
   41ba4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41ba8:	ldr	r1, [fp, #-720]	; 0xfffffd30
   41bac:	cmp	r0, r1
   41bb0:	movw	r0, #0
   41bb4:	movne	r0, #1
   41bb8:	str	r0, [sp, #308]	; 0x134
   41bbc:	ldr	r0, [sp, #308]	; 0x134
   41bc0:	and	r0, r0, #1
   41bc4:	ldr	r1, [sp, #316]	; 0x13c
   41bc8:	subs	r0, r1, r0
   41bcc:	ldr	r2, [sp, #312]	; 0x138
   41bd0:	sbc	r3, r2, #0
   41bd4:	cmn	r3, #1
   41bd8:	bgt	41cc4 <__assert_fail@plt+0x2f10c>
   41bdc:	b	41be0 <__assert_fail@plt+0x2f028>
   41be0:	b	41c5c <__assert_fail@plt+0x2f0a4>
   41be4:	ldr	r0, [fp, #-728]	; 0xfffffd28
   41be8:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   41bec:	mov	r2, #0
   41bf0:	subs	r3, r0, #1
   41bf4:	sbcs	ip, r1, #0
   41bf8:	str	r0, [sp, #304]	; 0x130
   41bfc:	str	r1, [sp, #300]	; 0x12c
   41c00:	str	r2, [sp, #296]	; 0x128
   41c04:	blt	41c24 <__assert_fail@plt+0x2f06c>
   41c08:	b	41c0c <__assert_fail@plt+0x2f054>
   41c0c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41c10:	ldr	r1, [fp, #-720]	; 0xfffffd30
   41c14:	cmp	r0, r1
   41c18:	movw	r0, #0
   41c1c:	movne	r0, #1
   41c20:	str	r0, [sp, #296]	; 0x128
   41c24:	ldr	r0, [sp, #296]	; 0x128
   41c28:	and	r0, r0, #1
   41c2c:	ldr	r1, [sp, #304]	; 0x130
   41c30:	subs	r0, r1, r0
   41c34:	ldr	r2, [sp, #300]	; 0x12c
   41c38:	sbc	r3, r2, #0
   41c3c:	movw	ip, #9362	; 0x2492
   41c40:	movt	ip, #37449	; 0x9249
   41c44:	subs	r0, r0, ip
   41c48:	movw	ip, #18724	; 0x4924
   41c4c:	movt	ip, #9362	; 0x2492
   41c50:	sbcs	r3, r3, ip
   41c54:	bcc	4202c <__assert_fail@plt+0x2f474>
   41c58:	b	420a0 <__assert_fail@plt+0x2f4e8>
   41c5c:	ldr	r0, [fp, #-728]	; 0xfffffd28
   41c60:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   41c64:	mov	r2, #0
   41c68:	subs	r3, r0, #1
   41c6c:	sbcs	ip, r1, #0
   41c70:	str	r0, [sp, #292]	; 0x124
   41c74:	str	r1, [sp, #288]	; 0x120
   41c78:	str	r2, [sp, #284]	; 0x11c
   41c7c:	blt	41c9c <__assert_fail@plt+0x2f0e4>
   41c80:	b	41c84 <__assert_fail@plt+0x2f0cc>
   41c84:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41c88:	ldr	r1, [fp, #-720]	; 0xfffffd30
   41c8c:	cmp	r0, r1
   41c90:	movw	r0, #0
   41c94:	movne	r0, #1
   41c98:	str	r0, [sp, #284]	; 0x11c
   41c9c:	ldr	r0, [sp, #284]	; 0x11c
   41ca0:	and	r0, r0, #1
   41ca4:	ldr	r1, [sp, #292]	; 0x124
   41ca8:	subs	r0, r1, r0
   41cac:	ldr	r2, [sp, #288]	; 0x120
   41cb0:	sbc	r3, r2, #0
   41cb4:	and	r0, r0, r3
   41cb8:	cmn	r0, #1
   41cbc:	bne	4202c <__assert_fail@plt+0x2f474>
   41cc0:	b	420a0 <__assert_fail@plt+0x2f4e8>
   41cc4:	b	41cc8 <__assert_fail@plt+0x2f110>
   41cc8:	b	41e14 <__assert_fail@plt+0x2f25c>
   41ccc:	b	41e14 <__assert_fail@plt+0x2f25c>
   41cd0:	b	41e14 <__assert_fail@plt+0x2f25c>
   41cd4:	b	41cd8 <__assert_fail@plt+0x2f120>
   41cd8:	ldr	r0, [fp, #-728]	; 0xfffffd28
   41cdc:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   41ce0:	mov	r2, #0
   41ce4:	subs	r3, r0, #1
   41ce8:	sbcs	ip, r1, #0
   41cec:	str	r0, [sp, #280]	; 0x118
   41cf0:	str	r1, [sp, #276]	; 0x114
   41cf4:	str	r2, [sp, #272]	; 0x110
   41cf8:	blt	41d18 <__assert_fail@plt+0x2f160>
   41cfc:	b	41d00 <__assert_fail@plt+0x2f148>
   41d00:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41d04:	ldr	r1, [fp, #-720]	; 0xfffffd30
   41d08:	cmp	r0, r1
   41d0c:	movw	r0, #0
   41d10:	movne	r0, #1
   41d14:	str	r0, [sp, #272]	; 0x110
   41d18:	ldr	r0, [sp, #272]	; 0x110
   41d1c:	and	r0, r0, #1
   41d20:	ldr	r1, [sp, #280]	; 0x118
   41d24:	subs	r0, r1, r0
   41d28:	ldr	r2, [sp, #276]	; 0x114
   41d2c:	sbc	r3, r2, #0
   41d30:	rsbs	r0, r0, #0
   41d34:	rscs	r3, r3, #0
   41d38:	blt	4202c <__assert_fail@plt+0x2f474>
   41d3c:	b	420a0 <__assert_fail@plt+0x2f4e8>
   41d40:	ldr	r0, [fp, #-728]	; 0xfffffd28
   41d44:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   41d48:	mov	r2, #0
   41d4c:	subs	r3, r0, #1
   41d50:	sbcs	ip, r1, #0
   41d54:	str	r0, [sp, #268]	; 0x10c
   41d58:	str	r1, [sp, #264]	; 0x108
   41d5c:	str	r2, [sp, #260]	; 0x104
   41d60:	blt	41d80 <__assert_fail@plt+0x2f1c8>
   41d64:	b	41d68 <__assert_fail@plt+0x2f1b0>
   41d68:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41d6c:	ldr	r1, [fp, #-720]	; 0xfffffd30
   41d70:	cmp	r0, r1
   41d74:	movw	r0, #0
   41d78:	movne	r0, #1
   41d7c:	str	r0, [sp, #260]	; 0x104
   41d80:	ldr	r0, [sp, #260]	; 0x104
   41d84:	and	r0, r0, #1
   41d88:	ldr	r1, [sp, #268]	; 0x10c
   41d8c:	subs	r0, r1, r0
   41d90:	ldr	r2, [sp, #264]	; 0x108
   41d94:	sbc	r3, r2, #0
   41d98:	subs	r0, r0, #1
   41d9c:	sbcs	r3, r3, #0
   41da0:	blt	420a0 <__assert_fail@plt+0x2f4e8>
   41da4:	b	41da8 <__assert_fail@plt+0x2f1f0>
   41da8:	ldr	r0, [fp, #-728]	; 0xfffffd28
   41dac:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   41db0:	mov	r2, #0
   41db4:	subs	r3, r0, #1
   41db8:	sbcs	ip, r1, #0
   41dbc:	str	r0, [sp, #256]	; 0x100
   41dc0:	str	r1, [sp, #252]	; 0xfc
   41dc4:	str	r2, [sp, #248]	; 0xf8
   41dc8:	blt	41de8 <__assert_fail@plt+0x2f230>
   41dcc:	b	41dd0 <__assert_fail@plt+0x2f218>
   41dd0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41dd4:	ldr	r1, [fp, #-720]	; 0xfffffd30
   41dd8:	cmp	r0, r1
   41ddc:	movw	r0, #0
   41de0:	movne	r0, #1
   41de4:	str	r0, [sp, #248]	; 0xf8
   41de8:	ldr	r0, [sp, #248]	; 0xf8
   41dec:	mvn	r0, r0
   41df0:	mvn	r1, #1
   41df4:	orr	r0, r0, r1
   41df8:	ldr	r1, [sp, #256]	; 0x100
   41dfc:	adds	r0, r0, r1
   41e00:	ldr	r2, [sp, #252]	; 0xfc
   41e04:	sbc	r3, r2, #0
   41e08:	cmn	r3, #1
   41e0c:	bgt	4202c <__assert_fail@plt+0x2f474>
   41e10:	b	420a0 <__assert_fail@plt+0x2f4e8>
   41e14:	ldr	r0, [fp, #-728]	; 0xfffffd28
   41e18:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   41e1c:	mov	r2, #0
   41e20:	subs	r3, r0, #1
   41e24:	sbcs	ip, r1, #0
   41e28:	str	r0, [sp, #244]	; 0xf4
   41e2c:	str	r1, [sp, #240]	; 0xf0
   41e30:	str	r2, [sp, #236]	; 0xec
   41e34:	blt	41e54 <__assert_fail@plt+0x2f29c>
   41e38:	b	41e3c <__assert_fail@plt+0x2f284>
   41e3c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41e40:	ldr	r1, [fp, #-720]	; 0xfffffd30
   41e44:	cmp	r0, r1
   41e48:	movw	r0, #0
   41e4c:	movne	r0, #1
   41e50:	str	r0, [sp, #236]	; 0xec
   41e54:	ldr	r0, [sp, #236]	; 0xec
   41e58:	and	r0, r0, #1
   41e5c:	ldr	r1, [sp, #244]	; 0xf4
   41e60:	subs	r0, r1, r0
   41e64:	ldr	r2, [sp, #240]	; 0xf0
   41e68:	sbc	r3, r2, #0
   41e6c:	rsbs	r0, r0, #0
   41e70:	rscs	r3, r3, #0
   41e74:	blt	4202c <__assert_fail@plt+0x2f474>
   41e78:	b	420a0 <__assert_fail@plt+0x2f4e8>
   41e7c:	b	41e84 <__assert_fail@plt+0x2f2cc>
   41e80:	b	420a0 <__assert_fail@plt+0x2f4e8>
   41e84:	ldr	r0, [fp, #-728]	; 0xfffffd28
   41e88:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   41e8c:	mov	r2, #0
   41e90:	subs	r3, r0, #1
   41e94:	sbcs	ip, r1, #0
   41e98:	str	r0, [sp, #232]	; 0xe8
   41e9c:	str	r1, [sp, #228]	; 0xe4
   41ea0:	str	r2, [sp, #224]	; 0xe0
   41ea4:	blt	41ec4 <__assert_fail@plt+0x2f30c>
   41ea8:	b	41eac <__assert_fail@plt+0x2f2f4>
   41eac:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41eb0:	ldr	r1, [fp, #-720]	; 0xfffffd30
   41eb4:	cmp	r0, r1
   41eb8:	movw	r0, #0
   41ebc:	movne	r0, #1
   41ec0:	str	r0, [sp, #224]	; 0xe0
   41ec4:	ldr	r0, [sp, #224]	; 0xe0
   41ec8:	and	r0, r0, #1
   41ecc:	ldr	r1, [sp, #232]	; 0xe8
   41ed0:	subs	r0, r1, r0
   41ed4:	ldr	r2, [sp, #228]	; 0xe4
   41ed8:	sbc	r3, r2, #0
   41edc:	cmn	r3, #1
   41ee0:	bgt	41fb4 <__assert_fail@plt+0x2f3fc>
   41ee4:	b	41ee8 <__assert_fail@plt+0x2f330>
   41ee8:	b	41eec <__assert_fail@plt+0x2f334>
   41eec:	b	41f68 <__assert_fail@plt+0x2f3b0>
   41ef0:	b	41f68 <__assert_fail@plt+0x2f3b0>
   41ef4:	ldr	r0, [fp, #-728]	; 0xfffffd28
   41ef8:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   41efc:	mov	r2, #0
   41f00:	subs	r3, r0, #1
   41f04:	sbcs	ip, r1, #0
   41f08:	str	r0, [sp, #220]	; 0xdc
   41f0c:	str	r1, [sp, #216]	; 0xd8
   41f10:	str	r2, [sp, #212]	; 0xd4
   41f14:	blt	41f34 <__assert_fail@plt+0x2f37c>
   41f18:	b	41f1c <__assert_fail@plt+0x2f364>
   41f1c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41f20:	ldr	r1, [fp, #-720]	; 0xfffffd30
   41f24:	cmp	r0, r1
   41f28:	movw	r0, #0
   41f2c:	movne	r0, #1
   41f30:	str	r0, [sp, #212]	; 0xd4
   41f34:	ldr	r0, [sp, #212]	; 0xd4
   41f38:	and	r0, r0, #1
   41f3c:	ldr	r1, [sp, #220]	; 0xdc
   41f40:	subs	r0, r1, r0
   41f44:	ldr	r2, [sp, #216]	; 0xd8
   41f48:	sbc	r3, r2, #0
   41f4c:	and	r0, r0, r3
   41f50:	cmn	r0, #1
   41f54:	bne	41f68 <__assert_fail@plt+0x2f3b0>
   41f58:	b	41f5c <__assert_fail@plt+0x2f3a4>
   41f5c:	b	41f60 <__assert_fail@plt+0x2f3a8>
   41f60:	b	4202c <__assert_fail@plt+0x2f474>
   41f64:	b	4202c <__assert_fail@plt+0x2f474>
   41f68:	ldr	r0, [fp, #-728]	; 0xfffffd28
   41f6c:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   41f70:	mov	r2, #0
   41f74:	subs	r0, r0, #1
   41f78:	sbcs	r1, r1, #0
   41f7c:	str	r2, [sp, #208]	; 0xd0
   41f80:	blt	41fa0 <__assert_fail@plt+0x2f3e8>
   41f84:	b	41f88 <__assert_fail@plt+0x2f3d0>
   41f88:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41f8c:	ldr	r1, [fp, #-720]	; 0xfffffd30
   41f90:	cmp	r0, r1
   41f94:	movw	r0, #0
   41f98:	movne	r0, #1
   41f9c:	str	r0, [sp, #208]	; 0xd0
   41fa0:	ldr	r0, [sp, #208]	; 0xd0
   41fa4:	mov	r1, #1
   41fa8:	cmp	r1, #0
   41fac:	bne	4202c <__assert_fail@plt+0x2f474>
   41fb0:	b	420a0 <__assert_fail@plt+0x2f4e8>
   41fb4:	ldr	r0, [fp, #-728]	; 0xfffffd28
   41fb8:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   41fbc:	mov	r2, #0
   41fc0:	subs	r3, r0, #1
   41fc4:	sbcs	ip, r1, #0
   41fc8:	str	r0, [sp, #204]	; 0xcc
   41fcc:	str	r1, [sp, #200]	; 0xc8
   41fd0:	str	r2, [sp, #196]	; 0xc4
   41fd4:	blt	41ff4 <__assert_fail@plt+0x2f43c>
   41fd8:	b	41fdc <__assert_fail@plt+0x2f424>
   41fdc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41fe0:	ldr	r1, [fp, #-720]	; 0xfffffd30
   41fe4:	cmp	r0, r1
   41fe8:	movw	r0, #0
   41fec:	movne	r0, #1
   41ff0:	str	r0, [sp, #196]	; 0xc4
   41ff4:	ldr	r0, [sp, #196]	; 0xc4
   41ff8:	and	r0, r0, #1
   41ffc:	ldr	r1, [sp, #204]	; 0xcc
   42000:	subs	r0, r1, r0
   42004:	ldr	r2, [sp, #200]	; 0xc8
   42008:	sbc	r3, r2, #0
   4200c:	movw	ip, #9363	; 0x2493
   42010:	movt	ip, #37449	; 0x9249
   42014:	subs	r0, r0, ip
   42018:	movw	ip, #18724	; 0x4924
   4201c:	movt	ip, #9362	; 0x2492
   42020:	sbcs	r3, r3, ip
   42024:	bcc	420a0 <__assert_fail@plt+0x2f4e8>
   42028:	b	4202c <__assert_fail@plt+0x2f474>
   4202c:	ldr	r0, [fp, #-728]	; 0xfffffd28
   42030:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   42034:	mov	r2, #0
   42038:	subs	r3, r0, #1
   4203c:	sbcs	ip, r1, #0
   42040:	str	r0, [sp, #192]	; 0xc0
   42044:	str	r1, [sp, #188]	; 0xbc
   42048:	str	r2, [sp, #184]	; 0xb8
   4204c:	blt	4206c <__assert_fail@plt+0x2f4b4>
   42050:	b	42054 <__assert_fail@plt+0x2f49c>
   42054:	ldr	r0, [fp, #-52]	; 0xffffffcc
   42058:	ldr	r1, [fp, #-720]	; 0xfffffd30
   4205c:	cmp	r0, r1
   42060:	movw	r0, #0
   42064:	movne	r0, #1
   42068:	str	r0, [sp, #184]	; 0xb8
   4206c:	ldr	r0, [sp, #184]	; 0xb8
   42070:	and	r0, r0, #1
   42074:	ldr	r1, [sp, #192]	; 0xc0
   42078:	subs	r0, r1, r0
   4207c:	ldr	r2, [sp, #188]	; 0xbc
   42080:	sbc	r3, r2, #0
   42084:	mov	ip, #7
   42088:	umull	r0, ip, r0, ip
   4208c:	rsb	r3, r3, r3, lsl #3
   42090:	add	r3, ip, r3
   42094:	str	r0, [fp, #-936]	; 0xfffffc58
   42098:	str	r3, [fp, #-932]	; 0xfffffc5c
   4209c:	b	4220c <__assert_fail@plt+0x2f654>
   420a0:	ldr	r0, [fp, #-728]	; 0xfffffd28
   420a4:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   420a8:	mov	r2, #0
   420ac:	subs	r3, r0, #1
   420b0:	sbcs	ip, r1, #0
   420b4:	str	r0, [sp, #180]	; 0xb4
   420b8:	str	r1, [sp, #176]	; 0xb0
   420bc:	str	r2, [sp, #172]	; 0xac
   420c0:	blt	420e0 <__assert_fail@plt+0x2f528>
   420c4:	b	420c8 <__assert_fail@plt+0x2f510>
   420c8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   420cc:	ldr	r1, [fp, #-720]	; 0xfffffd30
   420d0:	cmp	r0, r1
   420d4:	movw	r0, #0
   420d8:	movne	r0, #1
   420dc:	str	r0, [sp, #172]	; 0xac
   420e0:	ldr	r0, [sp, #172]	; 0xac
   420e4:	and	r0, r0, #1
   420e8:	ldr	r1, [sp, #180]	; 0xb4
   420ec:	subs	r0, r1, r0
   420f0:	ldr	r2, [sp, #176]	; 0xb0
   420f4:	sbc	r3, r2, #0
   420f8:	mov	ip, #7
   420fc:	umull	r0, ip, r0, ip
   42100:	rsb	r3, r3, r3, lsl #3
   42104:	add	r3, ip, r3
   42108:	str	r0, [fp, #-936]	; 0xfffffc58
   4210c:	str	r3, [fp, #-932]	; 0xfffffc5c
   42110:	ldr	r0, [fp, #-720]	; 0xfffffd30
   42114:	ldr	r1, [fp, #-52]	; 0xffffffcc
   42118:	sub	r0, r0, r1
   4211c:	add	r0, r0, #7
   42120:	movw	r1, #9363	; 0x2493
   42124:	movt	r1, #37449	; 0x9249
   42128:	smmla	r1, r0, r1, r0
   4212c:	asr	r2, r1, #2
   42130:	add	r1, r2, r1, lsr #31
   42134:	sub	r1, r1, r1, lsl #3
   42138:	add	r0, r0, r1
   4213c:	ldr	r1, [fp, #-936]	; 0xfffffc58
   42140:	ldr	r2, [fp, #-932]	; 0xfffffc5c
   42144:	asr	r3, r0, #31
   42148:	adds	r0, r0, r1
   4214c:	adc	r1, r3, r2
   42150:	mov	ip, #0
   42154:	cmn	r1, #1
   42158:	mov	lr, ip
   4215c:	movwgt	lr, #1
   42160:	cmn	r3, #1
   42164:	mov	r3, ip
   42168:	movwgt	r3, #1
   4216c:	subs	lr, r3, lr
   42170:	movwne	lr, #1
   42174:	cmn	r2, #1
   42178:	movwgt	ip, #1
   4217c:	sub	r2, r3, ip
   42180:	clz	r2, r2
   42184:	lsr	r2, r2, #5
   42188:	and	r2, r2, lr
   4218c:	str	r0, [fp, #-936]	; 0xfffffc58
   42190:	str	r1, [fp, #-932]	; 0xfffffc5c
   42194:	tst	r2, #1
   42198:	bne	4220c <__assert_fail@plt+0x2f654>
   4219c:	ldr	r0, [fp, #-936]	; 0xfffffc58
   421a0:	ldr	r1, [fp, #-932]	; 0xfffffc5c
   421a4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   421a8:	asr	r3, r2, #31
   421ac:	mov	ip, #0
   421b0:	cmn	r1, #1
   421b4:	mov	lr, ip
   421b8:	movwgt	lr, #1
   421bc:	adds	r0, r0, r2
   421c0:	adc	r1, r1, r2, asr #31
   421c4:	cmn	r1, #1
   421c8:	mov	r2, ip
   421cc:	movwgt	r2, #1
   421d0:	subs	r2, lr, r2
   421d4:	movwne	r2, #1
   421d8:	cmn	r3, #1
   421dc:	movwgt	ip, #1
   421e0:	sub	r3, lr, ip
   421e4:	clz	r3, r3
   421e8:	lsr	r3, r3, #5
   421ec:	and	r2, r3, r2
   421f0:	eor	r1, r1, r0, asr #31
   421f4:	cmp	r1, #0
   421f8:	movwne	r1, #1
   421fc:	orr	r1, r2, r1
   42200:	str	r0, [fp, #-64]	; 0xffffffc0
   42204:	tst	r1, #1
   42208:	beq	42218 <__assert_fail@plt+0x2f660>
   4220c:	mvn	r0, #0
   42210:	str	r0, [fp, #-368]	; 0xfffffe90
   42214:	b	42230 <__assert_fail@plt+0x2f678>
   42218:	mvn	r0, #0
   4221c:	str	r0, [fp, #-44]	; 0xffffffd4
   42220:	ldr	r0, [fp, #-380]	; 0xfffffe84
   42224:	sub	r1, fp, #76	; 0x4c
   42228:	bl	6e020 <__assert_fail@plt+0x5b468>
   4222c:	str	r0, [fp, #-368]	; 0xfffffe90
   42230:	ldr	r0, [fp, #-368]	; 0xfffffe90
   42234:	cmn	r0, #1
   42238:	bne	422e8 <__assert_fail@plt+0x2f730>
   4223c:	sub	r0, fp, #736	; 0x2e0
   42240:	bl	3d73c <__assert_fail@plt+0x2ab84>
   42244:	tst	r0, #1
   42248:	beq	422e4 <__assert_fail@plt+0x2f72c>
   4224c:	sub	r2, fp, #247	; 0xf7
   42250:	movw	r0, #46096	; 0xb410
   42254:	movt	r0, #7
   42258:	str	r2, [sp, #168]	; 0xa8
   4225c:	bl	12864 <gettext@plt>
   42260:	sub	r1, fp, #736	; 0x2e0
   42264:	sub	r2, fp, #928	; 0x3a0
   42268:	mov	r3, #100	; 0x64
   4226c:	str	r0, [sp, #164]	; 0xa4
   42270:	mov	r0, r1
   42274:	mov	r1, r2
   42278:	mov	r2, r3
   4227c:	bl	45088 <__assert_fail@plt+0x324d0>
   42280:	ldr	r2, [fp, #-728]	; 0xfffffd28
   42284:	ldr	r3, [fp, #-724]	; 0xfffffd2c
   42288:	ldr	r1, [fp, #-720]	; 0xfffffd30
   4228c:	sub	ip, fp, #76	; 0x4c
   42290:	str	r0, [sp, #160]	; 0xa0
   42294:	mov	r0, ip
   42298:	sub	ip, fp, #736	; 0x2e0
   4229c:	str	r1, [sp, #156]	; 0x9c
   422a0:	mov	r1, ip
   422a4:	ldr	ip, [sp, #168]	; 0xa8
   422a8:	str	r2, [sp, #152]	; 0x98
   422ac:	mov	r2, ip
   422b0:	movw	lr, #100	; 0x64
   422b4:	str	r3, [sp, #148]	; 0x94
   422b8:	mov	r3, lr
   422bc:	bl	46360 <__assert_fail@plt+0x337a8>
   422c0:	mov	r1, sp
   422c4:	str	r0, [r1, #4]
   422c8:	ldr	r0, [sp, #156]	; 0x9c
   422cc:	str	r0, [r1]
   422d0:	ldr	r0, [sp, #164]	; 0xa4
   422d4:	ldr	r1, [sp, #160]	; 0xa0
   422d8:	ldr	r2, [sp, #152]	; 0x98
   422dc:	ldr	r3, [sp, #148]	; 0x94
   422e0:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   422e4:	b	45058 <__assert_fail@plt+0x324a0>
   422e8:	sub	r0, fp, #736	; 0x2e0
   422ec:	bl	3d73c <__assert_fail@plt+0x2ab84>
   422f0:	tst	r0, #1
   422f4:	beq	42350 <__assert_fail@plt+0x2f798>
   422f8:	movw	r0, #46176	; 0xb460
   422fc:	movt	r0, #7
   42300:	bl	12864 <gettext@plt>
   42304:	sub	r1, fp, #928	; 0x3a0
   42308:	sub	r2, fp, #736	; 0x2e0
   4230c:	str	r0, [sp, #144]	; 0x90
   42310:	mov	r0, r2
   42314:	movw	r2, #100	; 0x64
   42318:	bl	45088 <__assert_fail@plt+0x324d0>
   4231c:	sub	r2, fp, #247	; 0xf7
   42320:	sub	r1, fp, #76	; 0x4c
   42324:	str	r0, [sp, #140]	; 0x8c
   42328:	mov	r0, r1
   4232c:	sub	r1, fp, #736	; 0x2e0
   42330:	movw	r3, #100	; 0x64
   42334:	bl	46360 <__assert_fail@plt+0x337a8>
   42338:	ldr	r1, [sp, #144]	; 0x90
   4233c:	str	r0, [sp, #136]	; 0x88
   42340:	mov	r0, r1
   42344:	ldr	r1, [sp, #140]	; 0x8c
   42348:	ldr	r2, [sp, #136]	; 0x88
   4234c:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   42350:	b	42354 <__assert_fail@plt+0x2f79c>
   42354:	sub	r0, fp, #736	; 0x2e0
   42358:	bl	3d73c <__assert_fail@plt+0x2ab84>
   4235c:	tst	r0, #1
   42360:	beq	42440 <__assert_fail@plt+0x2f888>
   42364:	ldr	r0, [fp, #-580]	; 0xfffffdbc
   42368:	cmp	r0, #0
   4236c:	bne	423b4 <__assert_fail@plt+0x2f7fc>
   42370:	ldr	r0, [fp, #-576]	; 0xfffffdc0
   42374:	cmp	r0, #0
   42378:	bne	423b4 <__assert_fail@plt+0x2f7fc>
   4237c:	movw	r0, #46206	; 0xb47e
   42380:	movt	r0, #7
   42384:	bl	12864 <gettext@plt>
   42388:	sub	r1, fp, #247	; 0xf7
   4238c:	sub	r2, fp, #76	; 0x4c
   42390:	str	r0, [sp, #132]	; 0x84
   42394:	mov	r0, r2
   42398:	movw	r2, #100	; 0x64
   4239c:	bl	4647c <__assert_fail@plt+0x338c4>
   423a0:	ldr	r1, [sp, #132]	; 0x84
   423a4:	str	r0, [sp, #128]	; 0x80
   423a8:	mov	r0, r1
   423ac:	ldr	r1, [sp, #128]	; 0x80
   423b0:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   423b4:	ldr	r0, [fp, #-576]	; 0xfffffdc0
   423b8:	cmp	r0, #0
   423bc:	beq	42404 <__assert_fail@plt+0x2f84c>
   423c0:	ldr	r0, [fp, #-580]	; 0xfffffdbc
   423c4:	cmp	r0, #0
   423c8:	beq	42404 <__assert_fail@plt+0x2f84c>
   423cc:	movw	r0, #46250	; 0xb4aa
   423d0:	movt	r0, #7
   423d4:	bl	12864 <gettext@plt>
   423d8:	sub	r1, fp, #928	; 0x3a0
   423dc:	sub	r2, fp, #736	; 0x2e0
   423e0:	str	r0, [sp, #124]	; 0x7c
   423e4:	mov	r0, r2
   423e8:	movw	r2, #100	; 0x64
   423ec:	bl	45088 <__assert_fail@plt+0x324d0>
   423f0:	ldr	r1, [sp, #124]	; 0x7c
   423f4:	str	r0, [sp, #120]	; 0x78
   423f8:	mov	r0, r1
   423fc:	ldr	r1, [sp, #120]	; 0x78
   42400:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   42404:	movw	r0, #46307	; 0xb4e3
   42408:	movt	r0, #7
   4240c:	bl	12864 <gettext@plt>
   42410:	sub	r2, fp, #247	; 0xf7
   42414:	sub	r1, fp, #76	; 0x4c
   42418:	str	r0, [sp, #116]	; 0x74
   4241c:	mov	r0, r1
   42420:	sub	r1, fp, #736	; 0x2e0
   42424:	movw	r3, #100	; 0x64
   42428:	bl	46360 <__assert_fail@plt+0x337a8>
   4242c:	ldr	r1, [sp, #116]	; 0x74
   42430:	str	r0, [sp, #112]	; 0x70
   42434:	mov	r0, r1
   42438:	ldr	r1, [sp, #112]	; 0x70
   4243c:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   42440:	ldr	r0, [fp, #-640]	; 0xfffffd80
   42444:	ldr	r1, [fp, #-636]	; 0xfffffd84
   42448:	ldr	r2, [fp, #-632]	; 0xfffffd88
   4244c:	ldr	r3, [fp, #-628]	; 0xfffffd8c
   42450:	orr	r0, r0, r2
   42454:	orr	r1, r1, r3
   42458:	ldr	r2, [fp, #-624]	; 0xfffffd90
   4245c:	ldr	r3, [fp, #-620]	; 0xfffffd94
   42460:	orr	r1, r1, r3
   42464:	orr	r0, r0, r2
   42468:	orr	r0, r0, r1
   4246c:	cmp	r0, #0
   42470:	beq	428d4 <__assert_fail@plt+0x2fd1c>
   42474:	b	42478 <__assert_fail@plt+0x2f8c0>
   42478:	sub	r0, fp, #736	; 0x2e0
   4247c:	bl	3d73c <__assert_fail@plt+0x2ab84>
   42480:	tst	r0, #1
   42484:	beq	4250c <__assert_fail@plt+0x2f954>
   42488:	ldr	r0, [fp, #-640]	; 0xfffffd80
   4248c:	ldr	r1, [fp, #-636]	; 0xfffffd84
   42490:	orr	r0, r0, r1
   42494:	cmp	r0, #0
   42498:	bne	424b8 <__assert_fail@plt+0x2f900>
   4249c:	b	424a0 <__assert_fail@plt+0x2f8e8>
   424a0:	ldr	r0, [fp, #-632]	; 0xfffffd88
   424a4:	ldr	r1, [fp, #-628]	; 0xfffffd8c
   424a8:	orr	r0, r0, r1
   424ac:	cmp	r0, #0
   424b0:	beq	424d4 <__assert_fail@plt+0x2f91c>
   424b4:	b	424b8 <__assert_fail@plt+0x2f900>
   424b8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   424bc:	cmp	r0, #15
   424c0:	beq	424d4 <__assert_fail@plt+0x2f91c>
   424c4:	movw	r0, #46333	; 0xb4fd
   424c8:	movt	r0, #7
   424cc:	bl	12864 <gettext@plt>
   424d0:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   424d4:	ldr	r0, [fp, #-624]	; 0xfffffd90
   424d8:	ldr	r1, [fp, #-620]	; 0xfffffd94
   424dc:	orr	r0, r0, r1
   424e0:	cmp	r0, #0
   424e4:	beq	42508 <__assert_fail@plt+0x2f950>
   424e8:	b	424ec <__assert_fail@plt+0x2f934>
   424ec:	ldr	r0, [fp, #-68]	; 0xffffffbc
   424f0:	cmp	r0, #12
   424f4:	beq	42508 <__assert_fail@plt+0x2f950>
   424f8:	movw	r0, #46430	; 0xb55e
   424fc:	movt	r0, #7
   42500:	bl	12864 <gettext@plt>
   42504:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   42508:	b	4250c <__assert_fail@plt+0x2f954>
   4250c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   42510:	asr	r1, r0, #31
   42514:	ldr	r2, [fp, #-640]	; 0xfffffd80
   42518:	ldr	r3, [fp, #-636]	; 0xfffffd84
   4251c:	mov	ip, #0
   42520:	cmn	r1, #1
   42524:	mov	lr, ip
   42528:	movwgt	lr, #1
   4252c:	adds	r0, r0, r2
   42530:	adc	r1, r1, r3
   42534:	cmn	r1, #1
   42538:	mov	r2, ip
   4253c:	movwgt	r2, #1
   42540:	subs	r2, lr, r2
   42544:	movwne	r2, #1
   42548:	cmn	r3, #1
   4254c:	movwgt	ip, #1
   42550:	sub	r3, lr, ip
   42554:	clz	r3, r3
   42558:	lsr	r3, r3, #5
   4255c:	and	r2, r3, r2
   42560:	eor	r1, r1, r0, asr #31
   42564:	cmp	r1, #0
   42568:	movwne	r1, #1
   4256c:	orr	r1, r2, r1
   42570:	str	r0, [fp, #-940]	; 0xfffffc54
   42574:	tst	r1, #1
   42578:	bne	4265c <__assert_fail@plt+0x2faa4>
   4257c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   42580:	asr	r1, r0, #31
   42584:	ldr	r2, [fp, #-632]	; 0xfffffd88
   42588:	ldr	r3, [fp, #-628]	; 0xfffffd8c
   4258c:	mov	ip, #0
   42590:	cmn	r1, #1
   42594:	mov	lr, ip
   42598:	movwgt	lr, #1
   4259c:	adds	r0, r0, r2
   425a0:	adc	r1, r1, r3
   425a4:	cmn	r1, #1
   425a8:	mov	r2, ip
   425ac:	movwgt	r2, #1
   425b0:	subs	r2, lr, r2
   425b4:	movwne	r2, #1
   425b8:	cmn	r3, #1
   425bc:	movwgt	ip, #1
   425c0:	sub	r3, lr, ip
   425c4:	clz	r3, r3
   425c8:	lsr	r3, r3, #5
   425cc:	and	r2, r3, r2
   425d0:	eor	r1, r1, r0, asr #31
   425d4:	cmp	r1, #0
   425d8:	movwne	r1, #1
   425dc:	orr	r1, r2, r1
   425e0:	str	r0, [fp, #-944]	; 0xfffffc50
   425e4:	tst	r1, #1
   425e8:	bne	4265c <__assert_fail@plt+0x2faa4>
   425ec:	ldr	r0, [fp, #-64]	; 0xffffffc0
   425f0:	asr	r1, r0, #31
   425f4:	ldr	r2, [fp, #-624]	; 0xfffffd90
   425f8:	ldr	r3, [fp, #-620]	; 0xfffffd94
   425fc:	mov	ip, #0
   42600:	cmn	r1, #1
   42604:	mov	lr, ip
   42608:	movwgt	lr, #1
   4260c:	adds	r0, r0, r2
   42610:	adc	r1, r1, r3
   42614:	cmn	r1, #1
   42618:	mov	r2, ip
   4261c:	movwgt	r2, #1
   42620:	subs	r2, lr, r2
   42624:	movwne	r2, #1
   42628:	cmn	r3, #1
   4262c:	movwgt	ip, #1
   42630:	sub	r3, lr, ip
   42634:	clz	r3, r3
   42638:	lsr	r3, r3, #5
   4263c:	and	r2, r3, r2
   42640:	eor	r1, r1, r0, asr #31
   42644:	cmp	r1, #0
   42648:	movwne	r1, #1
   4264c:	orr	r1, r2, r1
   42650:	str	r0, [fp, #-948]	; 0xfffffc4c
   42654:	tst	r1, #1
   42658:	beq	4268c <__assert_fail@plt+0x2fad4>
   4265c:	sub	r0, fp, #736	; 0x2e0
   42660:	bl	3d73c <__assert_fail@plt+0x2ab84>
   42664:	tst	r0, #1
   42668:	beq	42688 <__assert_fail@plt+0x2fad0>
   4266c:	movw	r0, #46501	; 0xb5a5
   42670:	movt	r0, #7
   42674:	bl	12864 <gettext@plt>
   42678:	movw	r1, #46515	; 0xb5b3
   4267c:	movt	r1, #7
   42680:	movw	r2, #2149	; 0x865
   42684:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   42688:	b	45058 <__assert_fail@plt+0x324a0>
   4268c:	ldr	r0, [fp, #-940]	; 0xfffffc54
   42690:	str	r0, [fp, #-56]	; 0xffffffc8
   42694:	ldr	r0, [fp, #-944]	; 0xfffffc50
   42698:	str	r0, [fp, #-60]	; 0xffffffc4
   4269c:	ldr	r0, [fp, #-948]	; 0xfffffc4c
   426a0:	str	r0, [fp, #-64]	; 0xffffffc0
   426a4:	ldr	r0, [fp, #-112]	; 0xffffff90
   426a8:	str	r0, [fp, #-68]	; 0xffffffbc
   426ac:	ldr	r0, [fp, #-116]	; 0xffffff8c
   426b0:	str	r0, [fp, #-72]	; 0xffffffb8
   426b4:	ldr	r0, [fp, #-120]	; 0xffffff88
   426b8:	str	r0, [fp, #-76]	; 0xffffffb4
   426bc:	ldr	r0, [fp, #-88]	; 0xffffffa8
   426c0:	str	r0, [fp, #-44]	; 0xffffffd4
   426c4:	ldr	r0, [fp, #-380]	; 0xfffffe84
   426c8:	sub	r1, fp, #76	; 0x4c
   426cc:	bl	6e020 <__assert_fail@plt+0x5b468>
   426d0:	str	r0, [fp, #-368]	; 0xfffffe90
   426d4:	ldr	r0, [fp, #-368]	; 0xfffffe90
   426d8:	cmn	r0, #1
   426dc:	bne	42730 <__assert_fail@plt+0x2fb78>
   426e0:	sub	r0, fp, #736	; 0x2e0
   426e4:	bl	3d73c <__assert_fail@plt+0x2ab84>
   426e8:	tst	r0, #1
   426ec:	beq	4272c <__assert_fail@plt+0x2fb74>
   426f0:	movw	r0, #46532	; 0xb5c4
   426f4:	movt	r0, #7
   426f8:	bl	12864 <gettext@plt>
   426fc:	sub	r2, fp, #247	; 0xf7
   42700:	sub	r1, fp, #76	; 0x4c
   42704:	str	r0, [sp, #108]	; 0x6c
   42708:	mov	r0, r1
   4270c:	sub	r1, fp, #736	; 0x2e0
   42710:	movw	r3, #100	; 0x64
   42714:	bl	46360 <__assert_fail@plt+0x337a8>
   42718:	ldr	r1, [sp, #108]	; 0x6c
   4271c:	str	r0, [sp, #104]	; 0x68
   42720:	mov	r0, r1
   42724:	ldr	r1, [sp, #104]	; 0x68
   42728:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   4272c:	b	45058 <__assert_fail@plt+0x324a0>
   42730:	sub	r0, fp, #736	; 0x2e0
   42734:	bl	3d73c <__assert_fail@plt+0x2ab84>
   42738:	tst	r0, #1
   4273c:	beq	428d0 <__assert_fail@plt+0x2fd18>
   42740:	movw	r0, #46595	; 0xb603
   42744:	movt	r0, #7
   42748:	bl	12864 <gettext@plt>
   4274c:	ldr	r2, [fp, #-640]	; 0xfffffd80
   42750:	ldr	r3, [fp, #-636]	; 0xfffffd84
   42754:	ldr	r1, [fp, #-632]	; 0xfffffd88
   42758:	ldr	ip, [fp, #-628]	; 0xfffffd8c
   4275c:	ldr	lr, [fp, #-620]	; 0xfffffd94
   42760:	ldr	r4, [fp, #-624]	; 0xfffffd90
   42764:	mov	r5, sp
   42768:	str	lr, [r5, #12]
   4276c:	str	r4, [r5, #8]
   42770:	str	ip, [r5, #4]
   42774:	str	r1, [r5]
   42778:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   4277c:	movw	r0, #46659	; 0xb643
   42780:	movt	r0, #7
   42784:	bl	12864 <gettext@plt>
   42788:	sub	r2, fp, #247	; 0xf7
   4278c:	sub	r1, fp, #76	; 0x4c
   42790:	str	r0, [sp, #100]	; 0x64
   42794:	mov	r0, r1
   42798:	sub	r1, fp, #736	; 0x2e0
   4279c:	movw	r3, #100	; 0x64
   427a0:	bl	46360 <__assert_fail@plt+0x337a8>
   427a4:	ldr	r1, [sp, #100]	; 0x64
   427a8:	str	r0, [sp, #96]	; 0x60
   427ac:	mov	r0, r1
   427b0:	ldr	r1, [sp, #96]	; 0x60
   427b4:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   427b8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   427bc:	cmn	r0, #1
   427c0:	beq	427e4 <__assert_fail@plt+0x2fc2c>
   427c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   427c8:	ldr	r1, [fp, #-88]	; 0xffffffa8
   427cc:	cmp	r0, r1
   427d0:	beq	427e4 <__assert_fail@plt+0x2fc2c>
   427d4:	movw	r0, #46685	; 0xb65d
   427d8:	movt	r0, #7
   427dc:	bl	12864 <gettext@plt>
   427e0:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   427e4:	ldr	r0, [fp, #-624]	; 0xfffffd90
   427e8:	ldr	r1, [fp, #-620]	; 0xfffffd94
   427ec:	orr	r0, r0, r1
   427f0:	cmp	r0, #0
   427f4:	bne	428cc <__assert_fail@plt+0x2fd14>
   427f8:	b	427fc <__assert_fail@plt+0x2fc44>
   427fc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   42800:	ldr	r1, [fp, #-948]	; 0xfffffc4c
   42804:	cmp	r0, r1
   42808:	bne	42834 <__assert_fail@plt+0x2fc7c>
   4280c:	ldr	r0, [fp, #-632]	; 0xfffffd88
   42810:	ldr	r1, [fp, #-628]	; 0xfffffd8c
   42814:	orr	r0, r0, r1
   42818:	cmp	r0, #0
   4281c:	bne	428cc <__assert_fail@plt+0x2fd14>
   42820:	b	42824 <__assert_fail@plt+0x2fc6c>
   42824:	ldr	r0, [fp, #-60]	; 0xffffffc4
   42828:	ldr	r1, [fp, #-944]	; 0xfffffc50
   4282c:	cmp	r0, r1
   42830:	beq	428cc <__assert_fail@plt+0x2fd14>
   42834:	movw	r0, #46746	; 0xb69a
   42838:	movt	r0, #7
   4283c:	bl	12864 <gettext@plt>
   42840:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   42844:	movw	r0, #46805	; 0xb6d5
   42848:	movt	r0, #7
   4284c:	bl	12864 <gettext@plt>
   42850:	sub	lr, fp, #768	; 0x300
   42854:	sub	r1, lr, #193	; 0xc1
   42858:	ldr	r2, [fp, #-940]	; 0xfffffc54
   4285c:	str	r0, [sp, #92]	; 0x5c
   42860:	mov	r0, r2
   42864:	bl	46524 <__assert_fail@plt+0x3396c>
   42868:	ldr	r1, [fp, #-944]	; 0xfffffc50
   4286c:	add	r2, r1, #1
   42870:	ldr	r3, [fp, #-948]	; 0xfffffc4c
   42874:	ldr	r1, [sp, #92]	; 0x5c
   42878:	str	r0, [sp, #88]	; 0x58
   4287c:	mov	r0, r1
   42880:	ldr	r1, [sp, #88]	; 0x58
   42884:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   42888:	movw	r0, #46840	; 0xb6f8
   4288c:	movt	r0, #7
   42890:	bl	12864 <gettext@plt>
   42894:	sub	lr, fp, #768	; 0x300
   42898:	sub	r1, lr, #193	; 0xc1
   4289c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   428a0:	str	r0, [sp, #84]	; 0x54
   428a4:	mov	r0, r2
   428a8:	bl	46524 <__assert_fail@plt+0x3396c>
   428ac:	ldr	r1, [fp, #-60]	; 0xffffffc4
   428b0:	add	r2, r1, #1
   428b4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   428b8:	ldr	r1, [sp, #84]	; 0x54
   428bc:	str	r0, [sp, #80]	; 0x50
   428c0:	mov	r0, r1
   428c4:	ldr	r1, [sp, #80]	; 0x50
   428c8:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   428cc:	b	428d0 <__assert_fail@plt+0x2fd18>
   428d0:	b	428d4 <__assert_fail@plt+0x2fd1c>
   428d4:	ldr	r0, [fp, #-560]	; 0xfffffdd0
   428d8:	cmp	r0, #0
   428dc:	beq	42a18 <__assert_fail@plt+0x2fe60>
   428e0:	mov	r0, #0
   428e4:	strb	r0, [fp, #-962]	; 0xfffffc3e
   428e8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   428ec:	str	r1, [fp, #-968]	; 0xfffffc38
   428f0:	ldr	r1, [fp, #-712]	; 0xfffffd38
   428f4:	asr	r2, r1, #31
   428f8:	ldr	r3, [fp, #-968]	; 0xfffffc38
   428fc:	asr	ip, r3, #31
   42900:	cmn	ip, #1
   42904:	mov	ip, r0
   42908:	movwgt	ip, #1
   4290c:	cmn	r2, #1
   42910:	mov	lr, r0
   42914:	movwgt	lr, #1
   42918:	subs	ip, lr, ip
   4291c:	movwne	ip, #1
   42920:	subs	r1, r1, r3
   42924:	sbc	r2, r2, r3, asr #31
   42928:	cmn	r2, #1
   4292c:	mov	r3, r0
   42930:	movwgt	r3, #1
   42934:	subs	r3, lr, r3
   42938:	movwne	r3, #1
   4293c:	and	r3, ip, r3
   42940:	str	r1, [fp, #-976]	; 0xfffffc30
   42944:	str	r2, [fp, #-972]	; 0xfffffc34
   42948:	ldrb	r1, [fp, #-962]	; 0xfffffc3e
   4294c:	orr	r1, r1, r3
   42950:	and	r1, r1, #1
   42954:	strb	r1, [fp, #-962]	; 0xfffffc3e
   42958:	ldr	r1, [fp, #-368]	; 0xfffffe90
   4295c:	asr	r2, r1, #31
   42960:	ldr	r3, [fp, #-976]	; 0xfffffc30
   42964:	ldr	ip, [fp, #-972]	; 0xfffffc34
   42968:	cmn	ip, #1
   4296c:	mov	lr, r0
   42970:	movwgt	lr, #1
   42974:	cmn	r2, #1
   42978:	mov	r2, r0
   4297c:	movwgt	r2, #1
   42980:	subs	lr, r2, lr
   42984:	movwne	lr, #1
   42988:	subs	r3, r1, r3
   4298c:	rsc	r1, ip, r1, asr #31
   42990:	cmn	r1, #1
   42994:	movwgt	r0, #1
   42998:	subs	r0, r2, r0
   4299c:	movwne	r0, #1
   429a0:	and	r0, lr, r0
   429a4:	eor	r1, r1, r3, asr #31
   429a8:	cmp	r1, #0
   429ac:	movwne	r1, #1
   429b0:	orr	r0, r0, r1
   429b4:	str	r3, [fp, #-980]	; 0xfffffc2c
   429b8:	and	r0, r0, #1
   429bc:	ldrb	r1, [fp, #-962]	; 0xfffffc3e
   429c0:	and	r1, r1, #1
   429c4:	orr	r0, r1, r0
   429c8:	cmp	r0, #0
   429cc:	movw	r0, #0
   429d0:	movne	r0, #1
   429d4:	and	r0, r0, #1
   429d8:	strb	r0, [fp, #-962]	; 0xfffffc3e
   429dc:	ldrb	r0, [fp, #-962]	; 0xfffffc3e
   429e0:	tst	r0, #1
   429e4:	beq	42a10 <__assert_fail@plt+0x2fe58>
   429e8:	sub	r0, fp, #736	; 0x2e0
   429ec:	bl	3d73c <__assert_fail@plt+0x2ab84>
   429f0:	tst	r0, #1
   429f4:	beq	42a0c <__assert_fail@plt+0x2fe54>
   429f8:	movw	r0, #46875	; 0xb71b
   429fc:	movt	r0, #7
   42a00:	bl	12864 <gettext@plt>
   42a04:	ldr	r1, [fp, #-712]	; 0xfffffd38
   42a08:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   42a0c:	b	45058 <__assert_fail@plt+0x324a0>
   42a10:	ldr	r0, [fp, #-980]	; 0xfffffc2c
   42a14:	str	r0, [fp, #-368]	; 0xfffffe90
   42a18:	sub	r0, fp, #736	; 0x2e0
   42a1c:	bl	3d73c <__assert_fail@plt+0x2ab84>
   42a20:	tst	r0, #1
   42a24:	beq	42a88 <__assert_fail@plt+0x2fed0>
   42a28:	ldr	r0, [fp, #-368]	; 0xfffffe90
   42a2c:	asr	r1, r0, #31
   42a30:	str	r0, [fp, #-992]	; 0xfffffc20
   42a34:	str	r1, [fp, #-988]	; 0xfffffc24
   42a38:	movw	r0, #46918	; 0xb746
   42a3c:	movt	r0, #7
   42a40:	bl	12864 <gettext@plt>
   42a44:	sub	r1, fp, #76	; 0x4c
   42a48:	sub	r2, fp, #736	; 0x2e0
   42a4c:	sub	r3, fp, #247	; 0xf7
   42a50:	mov	ip, #100	; 0x64
   42a54:	str	r0, [sp, #76]	; 0x4c
   42a58:	mov	r0, r1
   42a5c:	mov	r1, r2
   42a60:	mov	r2, r3
   42a64:	mov	r3, ip
   42a68:	bl	46360 <__assert_fail@plt+0x337a8>
   42a6c:	ldr	r2, [fp, #-992]	; 0xfffffc20
   42a70:	ldr	r3, [fp, #-988]	; 0xfffffc24
   42a74:	ldr	r1, [sp, #76]	; 0x4c
   42a78:	str	r0, [sp, #72]	; 0x48
   42a7c:	mov	r0, r1
   42a80:	ldr	r1, [sp, #72]	; 0x48
   42a84:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   42a88:	ldr	r0, [fp, #-644]	; 0xfffffd7c
   42a8c:	asr	r1, r0, #31
   42a90:	str	r0, [fp, #-1000]	; 0xfffffc18
   42a94:	str	r1, [fp, #-996]	; 0xfffffc1c
   42a98:	ldr	r0, [fp, #-1000]	; 0xfffffc18
   42a9c:	ldr	r1, [fp, #-996]	; 0xfffffc1c
   42aa0:	ldr	r2, [fp, #-592]	; 0xfffffdb0
   42aa4:	adds	r0, r0, r2
   42aa8:	adc	r1, r1, r2, asr #31
   42aac:	str	r0, [fp, #-1008]	; 0xfffffc10
   42ab0:	str	r1, [fp, #-1004]	; 0xfffffc14
   42ab4:	ldr	r0, [fp, #-1008]	; 0xfffffc10
   42ab8:	ldr	r1, [fp, #-1004]	; 0xfffffc14
   42abc:	movw	r2, #51712	; 0xca00
   42ac0:	movt	r2, #15258	; 0x3b9a
   42ac4:	mov	r3, #0
   42ac8:	str	r2, [sp, #68]	; 0x44
   42acc:	str	r3, [sp, #64]	; 0x40
   42ad0:	bl	75338 <__assert_fail@plt+0x62780>
   42ad4:	ldr	ip, [sp, #68]	; 0x44
   42ad8:	adds	r2, r2, ip
   42adc:	adc	r3, r3, #0
   42ae0:	str	r0, [sp, #60]	; 0x3c
   42ae4:	mov	r0, r2
   42ae8:	str	r1, [sp, #56]	; 0x38
   42aec:	mov	r1, r3
   42af0:	mov	r2, ip
   42af4:	ldr	r3, [sp, #64]	; 0x40
   42af8:	bl	75338 <__assert_fail@plt+0x62780>
   42afc:	str	r2, [fp, #-1012]	; 0xfffffc0c
   42b00:	ldr	r2, [fp, #-1008]	; 0xfffffc10
   42b04:	ldr	r3, [fp, #-1004]	; 0xfffffc14
   42b08:	ldr	ip, [fp, #-1012]	; 0xfffffc0c
   42b0c:	subs	r2, r2, ip
   42b10:	sbc	r3, r3, ip, asr #31
   42b14:	str	r0, [sp, #52]	; 0x34
   42b18:	mov	r0, r2
   42b1c:	str	r1, [sp, #48]	; 0x30
   42b20:	mov	r1, r3
   42b24:	ldr	r2, [sp, #68]	; 0x44
   42b28:	ldr	r3, [sp, #64]	; 0x40
   42b2c:	bl	75338 <__assert_fail@plt+0x62780>
   42b30:	str	r0, [fp, #-1016]	; 0xfffffc08
   42b34:	b	42e24 <__assert_fail@plt+0x3026c>
   42b38:	b	42b3c <__assert_fail@plt+0x2ff84>
   42b3c:	b	42bfc <__assert_fail@plt+0x30044>
   42b40:	ldr	r0, [fp, #-612]	; 0xfffffd9c
   42b44:	cmn	r0, #1
   42b48:	bgt	42b78 <__assert_fail@plt+0x2ffc0>
   42b4c:	b	42b50 <__assert_fail@plt+0x2ff98>
   42b50:	b	42b54 <__assert_fail@plt+0x2ff9c>
   42b54:	ldr	r0, [fp, #-612]	; 0xfffffd9c
   42b58:	cmp	r0, #0
   42b5c:	bmi	42c80 <__assert_fail@plt+0x300c8>
   42b60:	b	42ca0 <__assert_fail@plt+0x300e8>
   42b64:	ldr	r0, [fp, #-612]	; 0xfffffd9c
   42b68:	mvn	r0, r0
   42b6c:	cmn	r0, #1
   42b70:	bgt	42c80 <__assert_fail@plt+0x300c8>
   42b74:	b	42ca0 <__assert_fail@plt+0x300e8>
   42b78:	b	42b7c <__assert_fail@plt+0x2ffc4>
   42b7c:	b	42be4 <__assert_fail@plt+0x3002c>
   42b80:	b	42be4 <__assert_fail@plt+0x3002c>
   42b84:	b	42be4 <__assert_fail@plt+0x3002c>
   42b88:	b	42b8c <__assert_fail@plt+0x2ffd4>
   42b8c:	ldr	r0, [fp, #-616]	; 0xfffffd98
   42b90:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   42b94:	subs	r0, r0, #128	; 0x80
   42b98:	sbc	r1, r1, #0
   42b9c:	rsbs	r0, r0, #0
   42ba0:	rscs	r1, r1, #0
   42ba4:	blt	42c80 <__assert_fail@plt+0x300c8>
   42ba8:	b	42ca0 <__assert_fail@plt+0x300e8>
   42bac:	ldr	r0, [fp, #-616]	; 0xfffffd98
   42bb0:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   42bb4:	subs	r0, r0, #1
   42bb8:	sbcs	r1, r1, #0
   42bbc:	blt	42ca0 <__assert_fail@plt+0x300e8>
   42bc0:	b	42bc4 <__assert_fail@plt+0x3000c>
   42bc4:	ldr	r0, [fp, #-616]	; 0xfffffd98
   42bc8:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   42bcc:	subs	r0, r0, #1
   42bd0:	sbc	r1, r1, #0
   42bd4:	rsbs	r0, r0, #127	; 0x7f
   42bd8:	rscs	r1, r1, #0
   42bdc:	blt	42c80 <__assert_fail@plt+0x300c8>
   42be0:	b	42ca0 <__assert_fail@plt+0x300e8>
   42be4:	ldr	r0, [fp, #-616]	; 0xfffffd98
   42be8:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   42bec:	rsbs	r0, r0, #0
   42bf0:	rscs	r1, r1, #0
   42bf4:	blt	42c80 <__assert_fail@plt+0x300c8>
   42bf8:	b	42ca0 <__assert_fail@plt+0x300e8>
   42bfc:	b	42c04 <__assert_fail@plt+0x3004c>
   42c00:	b	42ca0 <__assert_fail@plt+0x300e8>
   42c04:	ldr	r0, [fp, #-612]	; 0xfffffd9c
   42c08:	cmn	r0, #1
   42c0c:	bgt	42c68 <__assert_fail@plt+0x300b0>
   42c10:	b	42c14 <__assert_fail@plt+0x3005c>
   42c14:	b	42c18 <__assert_fail@plt+0x30060>
   42c18:	b	42c44 <__assert_fail@plt+0x3008c>
   42c1c:	b	42c44 <__assert_fail@plt+0x3008c>
   42c20:	ldr	r0, [fp, #-616]	; 0xfffffd98
   42c24:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   42c28:	and	r0, r0, r1
   42c2c:	cmn	r0, #1
   42c30:	bne	42c44 <__assert_fail@plt+0x3008c>
   42c34:	b	42c38 <__assert_fail@plt+0x30080>
   42c38:	b	42c3c <__assert_fail@plt+0x30084>
   42c3c:	b	42c80 <__assert_fail@plt+0x300c8>
   42c40:	b	42c80 <__assert_fail@plt+0x300c8>
   42c44:	ldr	r2, [fp, #-616]	; 0xfffffd98
   42c48:	ldr	r3, [fp, #-612]	; 0xfffffd9c
   42c4c:	mvn	r0, #127	; 0x7f
   42c50:	mvn	r1, #0
   42c54:	bl	75338 <__assert_fail@plt+0x62780>
   42c58:	subs	r0, r0, #3600	; 0xe10
   42c5c:	sbcs	r1, r1, #0
   42c60:	blt	42c80 <__assert_fail@plt+0x300c8>
   42c64:	b	42ca0 <__assert_fail@plt+0x300e8>
   42c68:	ldr	r0, [fp, #-616]	; 0xfffffd98
   42c6c:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   42c70:	subs	r0, r0, #1
   42c74:	sbcs	r1, r1, #0
   42c78:	blt	42ca0 <__assert_fail@plt+0x300e8>
   42c7c:	b	42c80 <__assert_fail@plt+0x300c8>
   42c80:	ldr	r0, [fp, #-616]	; 0xfffffd98
   42c84:	mov	r1, #3600	; 0xe10
   42c88:	mul	r0, r0, r1
   42c8c:	sxtb	r0, r0
   42c90:	asr	r1, r0, #31
   42c94:	str	r0, [fp, #-1024]	; 0xfffffc00
   42c98:	str	r1, [fp, #-1020]	; 0xfffffc04
   42c9c:	b	44ce4 <__assert_fail@plt+0x3212c>
   42ca0:	ldr	r0, [fp, #-616]	; 0xfffffd98
   42ca4:	mov	r1, #3600	; 0xe10
   42ca8:	mul	r0, r0, r1
   42cac:	sxtb	r0, r0
   42cb0:	asr	r1, r0, #31
   42cb4:	str	r0, [fp, #-1024]	; 0xfffffc00
   42cb8:	str	r1, [fp, #-1020]	; 0xfffffc04
   42cbc:	b	43b08 <__assert_fail@plt+0x30f50>
   42cc0:	b	42d74 <__assert_fail@plt+0x301bc>
   42cc4:	ldr	r0, [fp, #-612]	; 0xfffffd9c
   42cc8:	cmn	r0, #1
   42ccc:	bgt	42cfc <__assert_fail@plt+0x30144>
   42cd0:	b	42cd4 <__assert_fail@plt+0x3011c>
   42cd4:	b	42cd8 <__assert_fail@plt+0x30120>
   42cd8:	ldr	r0, [fp, #-612]	; 0xfffffd9c
   42cdc:	cmp	r0, #0
   42ce0:	bmi	42de4 <__assert_fail@plt+0x3022c>
   42ce4:	b	42e04 <__assert_fail@plt+0x3024c>
   42ce8:	ldr	r0, [fp, #-612]	; 0xfffffd9c
   42cec:	mvn	r0, r0
   42cf0:	cmn	r0, #1
   42cf4:	bgt	42de4 <__assert_fail@plt+0x3022c>
   42cf8:	b	42e04 <__assert_fail@plt+0x3024c>
   42cfc:	b	42d00 <__assert_fail@plt+0x30148>
   42d00:	b	42d5c <__assert_fail@plt+0x301a4>
   42d04:	b	42d5c <__assert_fail@plt+0x301a4>
   42d08:	b	42d5c <__assert_fail@plt+0x301a4>
   42d0c:	b	42d10 <__assert_fail@plt+0x30158>
   42d10:	ldr	r0, [fp, #-616]	; 0xfffffd98
   42d14:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   42d18:	rsbs	r0, r0, #0
   42d1c:	rscs	r1, r1, #0
   42d20:	blt	42de4 <__assert_fail@plt+0x3022c>
   42d24:	b	42e04 <__assert_fail@plt+0x3024c>
   42d28:	ldr	r0, [fp, #-616]	; 0xfffffd98
   42d2c:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   42d30:	subs	r0, r0, #1
   42d34:	sbcs	r1, r1, #0
   42d38:	blt	42e04 <__assert_fail@plt+0x3024c>
   42d3c:	b	42d40 <__assert_fail@plt+0x30188>
   42d40:	ldr	r0, [fp, #-616]	; 0xfffffd98
   42d44:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   42d48:	subs	r0, r0, #1
   42d4c:	sbc	r1, r1, #0
   42d50:	cmn	r1, #1
   42d54:	bgt	42de4 <__assert_fail@plt+0x3022c>
   42d58:	b	42e04 <__assert_fail@plt+0x3024c>
   42d5c:	ldr	r0, [fp, #-616]	; 0xfffffd98
   42d60:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   42d64:	rsbs	r0, r0, #0
   42d68:	rscs	r1, r1, #0
   42d6c:	blt	42de4 <__assert_fail@plt+0x3022c>
   42d70:	b	42e04 <__assert_fail@plt+0x3024c>
   42d74:	b	42d7c <__assert_fail@plt+0x301c4>
   42d78:	b	42e04 <__assert_fail@plt+0x3024c>
   42d7c:	ldr	r0, [fp, #-612]	; 0xfffffd9c
   42d80:	cmn	r0, #1
   42d84:	bgt	42dcc <__assert_fail@plt+0x30214>
   42d88:	b	42d8c <__assert_fail@plt+0x301d4>
   42d8c:	b	42d90 <__assert_fail@plt+0x301d8>
   42d90:	b	42dbc <__assert_fail@plt+0x30204>
   42d94:	b	42dbc <__assert_fail@plt+0x30204>
   42d98:	ldr	r0, [fp, #-616]	; 0xfffffd98
   42d9c:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   42da0:	and	r0, r0, r1
   42da4:	cmn	r0, #1
   42da8:	bne	42dbc <__assert_fail@plt+0x30204>
   42dac:	b	42db0 <__assert_fail@plt+0x301f8>
   42db0:	b	42db4 <__assert_fail@plt+0x301fc>
   42db4:	b	42de4 <__assert_fail@plt+0x3022c>
   42db8:	b	42de4 <__assert_fail@plt+0x3022c>
   42dbc:	mov	r0, #1
   42dc0:	cmp	r0, #0
   42dc4:	bne	42de4 <__assert_fail@plt+0x3022c>
   42dc8:	b	42e04 <__assert_fail@plt+0x3024c>
   42dcc:	ldr	r0, [fp, #-616]	; 0xfffffd98
   42dd0:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   42dd4:	subs	r0, r0, #1
   42dd8:	sbcs	r1, r1, #0
   42ddc:	blt	42e04 <__assert_fail@plt+0x3024c>
   42de0:	b	42de4 <__assert_fail@plt+0x3022c>
   42de4:	ldr	r0, [fp, #-616]	; 0xfffffd98
   42de8:	mov	r1, #3600	; 0xe10
   42dec:	mul	r0, r0, r1
   42df0:	uxtb	r0, r0
   42df4:	mov	r1, #0
   42df8:	str	r1, [fp, #-1020]	; 0xfffffc04
   42dfc:	str	r0, [fp, #-1024]	; 0xfffffc00
   42e00:	b	44ce4 <__assert_fail@plt+0x3212c>
   42e04:	ldr	r0, [fp, #-616]	; 0xfffffd98
   42e08:	mov	r1, #3600	; 0xe10
   42e0c:	mul	r0, r0, r1
   42e10:	uxtb	r0, r0
   42e14:	mov	r1, #0
   42e18:	str	r1, [fp, #-1020]	; 0xfffffc04
   42e1c:	str	r0, [fp, #-1024]	; 0xfffffc00
   42e20:	b	43b08 <__assert_fail@plt+0x30f50>
   42e24:	b	4315c <__assert_fail@plt+0x305a4>
   42e28:	b	42e2c <__assert_fail@plt+0x30274>
   42e2c:	b	42f14 <__assert_fail@plt+0x3035c>
   42e30:	ldr	r0, [fp, #-612]	; 0xfffffd9c
   42e34:	cmn	r0, #1
   42e38:	bgt	42e84 <__assert_fail@plt+0x302cc>
   42e3c:	b	42e40 <__assert_fail@plt+0x30288>
   42e40:	b	42e44 <__assert_fail@plt+0x3028c>
   42e44:	ldr	r0, [fp, #-616]	; 0xfffffd98
   42e48:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   42e4c:	subs	r0, r0, #9
   42e50:	sbcs	r1, r1, #0
   42e54:	blt	42f9c <__assert_fail@plt+0x303e4>
   42e58:	b	42fbc <__assert_fail@plt+0x30404>
   42e5c:	ldr	r0, [fp, #-616]	; 0xfffffd98
   42e60:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   42e64:	mvn	r1, r1
   42e68:	mvn	r0, r0
   42e6c:	mvn	r2, #9
   42e70:	subs	r0, r2, r0
   42e74:	mvn	r2, #0
   42e78:	sbcs	r1, r2, r1
   42e7c:	blt	42f9c <__assert_fail@plt+0x303e4>
   42e80:	b	42fbc <__assert_fail@plt+0x30404>
   42e84:	b	42e88 <__assert_fail@plt+0x302d0>
   42e88:	b	42ef4 <__assert_fail@plt+0x3033c>
   42e8c:	b	42ef4 <__assert_fail@plt+0x3033c>
   42e90:	b	42ef4 <__assert_fail@plt+0x3033c>
   42e94:	b	42e98 <__assert_fail@plt+0x302e0>
   42e98:	ldr	r0, [fp, #-616]	; 0xfffffd98
   42e9c:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   42ea0:	subs	r0, r0, #32768	; 0x8000
   42ea4:	sbc	r1, r1, #0
   42ea8:	rsbs	r0, r0, #0
   42eac:	rscs	r1, r1, #0
   42eb0:	blt	42f9c <__assert_fail@plt+0x303e4>
   42eb4:	b	42fbc <__assert_fail@plt+0x30404>
   42eb8:	ldr	r0, [fp, #-616]	; 0xfffffd98
   42ebc:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   42ec0:	subs	r0, r0, #1
   42ec4:	sbcs	r1, r1, #0
   42ec8:	blt	42fbc <__assert_fail@plt+0x30404>
   42ecc:	b	42ed0 <__assert_fail@plt+0x30318>
   42ed0:	ldr	r0, [fp, #-616]	; 0xfffffd98
   42ed4:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   42ed8:	subs	r0, r0, #1
   42edc:	sbc	r1, r1, #0
   42ee0:	movw	r2, #32767	; 0x7fff
   42ee4:	subs	r0, r2, r0
   42ee8:	rscs	r1, r1, #0
   42eec:	blt	42f9c <__assert_fail@plt+0x303e4>
   42ef0:	b	42fbc <__assert_fail@plt+0x30404>
   42ef4:	ldr	r0, [fp, #-616]	; 0xfffffd98
   42ef8:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   42efc:	mvn	r2, #8
   42f00:	subs	r0, r2, r0
   42f04:	mvn	r2, #0
   42f08:	sbcs	r1, r2, r1
   42f0c:	blt	42f9c <__assert_fail@plt+0x303e4>
   42f10:	b	42fbc <__assert_fail@plt+0x30404>
   42f14:	b	42f1c <__assert_fail@plt+0x30364>
   42f18:	b	42fbc <__assert_fail@plt+0x30404>
   42f1c:	ldr	r0, [fp, #-612]	; 0xfffffd9c
   42f20:	cmn	r0, #1
   42f24:	bgt	42f84 <__assert_fail@plt+0x303cc>
   42f28:	b	42f2c <__assert_fail@plt+0x30374>
   42f2c:	b	42f30 <__assert_fail@plt+0x30378>
   42f30:	b	42f5c <__assert_fail@plt+0x303a4>
   42f34:	b	42f5c <__assert_fail@plt+0x303a4>
   42f38:	ldr	r0, [fp, #-616]	; 0xfffffd98
   42f3c:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   42f40:	and	r0, r0, r1
   42f44:	cmn	r0, #1
   42f48:	bne	42f5c <__assert_fail@plt+0x303a4>
   42f4c:	b	42f50 <__assert_fail@plt+0x30398>
   42f50:	b	42f54 <__assert_fail@plt+0x3039c>
   42f54:	b	42fbc <__assert_fail@plt+0x30404>
   42f58:	b	42fbc <__assert_fail@plt+0x30404>
   42f5c:	ldr	r2, [fp, #-616]	; 0xfffffd98
   42f60:	ldr	r3, [fp, #-612]	; 0xfffffd9c
   42f64:	movw	r0, #32768	; 0x8000
   42f68:	movt	r0, #65535	; 0xffff
   42f6c:	mvn	r1, #0
   42f70:	bl	75338 <__assert_fail@plt+0x62780>
   42f74:	subs	r0, r0, #3600	; 0xe10
   42f78:	sbcs	r1, r1, #0
   42f7c:	blt	42f9c <__assert_fail@plt+0x303e4>
   42f80:	b	42fbc <__assert_fail@plt+0x30404>
   42f84:	ldr	r0, [fp, #-616]	; 0xfffffd98
   42f88:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   42f8c:	subs	r0, r0, #10
   42f90:	sbcs	r1, r1, #0
   42f94:	blt	42fbc <__assert_fail@plt+0x30404>
   42f98:	b	42f9c <__assert_fail@plt+0x303e4>
   42f9c:	ldr	r0, [fp, #-616]	; 0xfffffd98
   42fa0:	mov	r1, #3600	; 0xe10
   42fa4:	mul	r0, r0, r1
   42fa8:	sxth	r0, r0
   42fac:	asr	r1, r0, #31
   42fb0:	str	r0, [fp, #-1024]	; 0xfffffc00
   42fb4:	str	r1, [fp, #-1020]	; 0xfffffc04
   42fb8:	b	44ce4 <__assert_fail@plt+0x3212c>
   42fbc:	ldr	r0, [fp, #-616]	; 0xfffffd98
   42fc0:	mov	r1, #3600	; 0xe10
   42fc4:	mul	r0, r0, r1
   42fc8:	sxth	r0, r0
   42fcc:	asr	r1, r0, #31
   42fd0:	str	r0, [fp, #-1024]	; 0xfffffc00
   42fd4:	str	r1, [fp, #-1020]	; 0xfffffc04
   42fd8:	b	43b08 <__assert_fail@plt+0x30f50>
   42fdc:	b	430ac <__assert_fail@plt+0x304f4>
   42fe0:	ldr	r0, [fp, #-612]	; 0xfffffd9c
   42fe4:	cmn	r0, #1
   42fe8:	bgt	43034 <__assert_fail@plt+0x3047c>
   42fec:	b	42ff0 <__assert_fail@plt+0x30438>
   42ff0:	b	42ff4 <__assert_fail@plt+0x3043c>
   42ff4:	ldr	r0, [fp, #-616]	; 0xfffffd98
   42ff8:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   42ffc:	subs	r0, r0, #18
   43000:	sbcs	r1, r1, #0
   43004:	blt	4311c <__assert_fail@plt+0x30564>
   43008:	b	4313c <__assert_fail@plt+0x30584>
   4300c:	ldr	r0, [fp, #-616]	; 0xfffffd98
   43010:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   43014:	mvn	r1, r1
   43018:	mvn	r0, r0
   4301c:	mvn	r2, #18
   43020:	subs	r0, r2, r0
   43024:	mvn	r2, #0
   43028:	sbcs	r1, r2, r1
   4302c:	blt	4311c <__assert_fail@plt+0x30564>
   43030:	b	4313c <__assert_fail@plt+0x30584>
   43034:	b	43038 <__assert_fail@plt+0x30480>
   43038:	b	43094 <__assert_fail@plt+0x304dc>
   4303c:	b	43094 <__assert_fail@plt+0x304dc>
   43040:	b	43094 <__assert_fail@plt+0x304dc>
   43044:	b	43048 <__assert_fail@plt+0x30490>
   43048:	ldr	r0, [fp, #-616]	; 0xfffffd98
   4304c:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   43050:	rsbs	r0, r0, #0
   43054:	rscs	r1, r1, #0
   43058:	blt	4311c <__assert_fail@plt+0x30564>
   4305c:	b	4313c <__assert_fail@plt+0x30584>
   43060:	ldr	r0, [fp, #-616]	; 0xfffffd98
   43064:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   43068:	subs	r0, r0, #1
   4306c:	sbcs	r1, r1, #0
   43070:	blt	4313c <__assert_fail@plt+0x30584>
   43074:	b	43078 <__assert_fail@plt+0x304c0>
   43078:	ldr	r0, [fp, #-616]	; 0xfffffd98
   4307c:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   43080:	subs	r0, r0, #1
   43084:	sbc	r1, r1, #0
   43088:	cmn	r1, #1
   4308c:	bgt	4311c <__assert_fail@plt+0x30564>
   43090:	b	4313c <__assert_fail@plt+0x30584>
   43094:	ldr	r0, [fp, #-616]	; 0xfffffd98
   43098:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   4309c:	rsbs	r0, r0, #0
   430a0:	rscs	r1, r1, #0
   430a4:	blt	4311c <__assert_fail@plt+0x30564>
   430a8:	b	4313c <__assert_fail@plt+0x30584>
   430ac:	b	430b4 <__assert_fail@plt+0x304fc>
   430b0:	b	4313c <__assert_fail@plt+0x30584>
   430b4:	ldr	r0, [fp, #-612]	; 0xfffffd9c
   430b8:	cmn	r0, #1
   430bc:	bgt	43104 <__assert_fail@plt+0x3054c>
   430c0:	b	430c4 <__assert_fail@plt+0x3050c>
   430c4:	b	430c8 <__assert_fail@plt+0x30510>
   430c8:	b	430f4 <__assert_fail@plt+0x3053c>
   430cc:	b	430f4 <__assert_fail@plt+0x3053c>
   430d0:	ldr	r0, [fp, #-616]	; 0xfffffd98
   430d4:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   430d8:	and	r0, r0, r1
   430dc:	cmn	r0, #1
   430e0:	bne	430f4 <__assert_fail@plt+0x3053c>
   430e4:	b	430e8 <__assert_fail@plt+0x30530>
   430e8:	b	430ec <__assert_fail@plt+0x30534>
   430ec:	b	4311c <__assert_fail@plt+0x30564>
   430f0:	b	4311c <__assert_fail@plt+0x30564>
   430f4:	mov	r0, #1
   430f8:	cmp	r0, #0
   430fc:	bne	4311c <__assert_fail@plt+0x30564>
   43100:	b	4313c <__assert_fail@plt+0x30584>
   43104:	ldr	r0, [fp, #-616]	; 0xfffffd98
   43108:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   4310c:	subs	r0, r0, #19
   43110:	sbcs	r1, r1, #0
   43114:	blt	4313c <__assert_fail@plt+0x30584>
   43118:	b	4311c <__assert_fail@plt+0x30564>
   4311c:	ldr	r0, [fp, #-616]	; 0xfffffd98
   43120:	mov	r1, #3600	; 0xe10
   43124:	mul	r0, r0, r1
   43128:	uxth	r0, r0
   4312c:	mov	r1, #0
   43130:	str	r1, [fp, #-1020]	; 0xfffffc04
   43134:	str	r0, [fp, #-1024]	; 0xfffffc00
   43138:	b	44ce4 <__assert_fail@plt+0x3212c>
   4313c:	ldr	r0, [fp, #-616]	; 0xfffffd98
   43140:	mov	r1, #3600	; 0xe10
   43144:	mul	r0, r0, r1
   43148:	uxth	r0, r0
   4314c:	mov	r1, #0
   43150:	str	r1, [fp, #-1020]	; 0xfffffc04
   43154:	str	r0, [fp, #-1024]	; 0xfffffc00
   43158:	b	43b08 <__assert_fail@plt+0x30f50>
   4315c:	b	43494 <__assert_fail@plt+0x308dc>
   43160:	b	43164 <__assert_fail@plt+0x305ac>
   43164:	b	43250 <__assert_fail@plt+0x30698>
   43168:	ldr	r0, [fp, #-612]	; 0xfffffd9c
   4316c:	cmn	r0, #1
   43170:	bgt	431c8 <__assert_fail@plt+0x30610>
   43174:	b	43178 <__assert_fail@plt+0x305c0>
   43178:	b	4317c <__assert_fail@plt+0x305c4>
   4317c:	ldr	r0, [fp, #-616]	; 0xfffffd98
   43180:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   43184:	movw	r2, #6699	; 0x1a2b
   43188:	movt	r2, #9
   4318c:	subs	r0, r0, r2
   43190:	sbcs	r1, r1, #0
   43194:	blt	432dc <__assert_fail@plt+0x30724>
   43198:	b	432f8 <__assert_fail@plt+0x30740>
   4319c:	ldr	r0, [fp, #-616]	; 0xfffffd98
   431a0:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   431a4:	mvn	r1, r1
   431a8:	mvn	r0, r0
   431ac:	movw	r2, #58836	; 0xe5d4
   431b0:	movt	r2, #65526	; 0xfff6
   431b4:	subs	r0, r2, r0
   431b8:	mvn	r2, #0
   431bc:	sbcs	r1, r2, r1
   431c0:	blt	432dc <__assert_fail@plt+0x30724>
   431c4:	b	432f8 <__assert_fail@plt+0x30740>
   431c8:	b	4322c <__assert_fail@plt+0x30674>
   431cc:	b	431d0 <__assert_fail@plt+0x30618>
   431d0:	ldr	r0, [fp, #-616]	; 0xfffffd98
   431d4:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   431d8:	adds	r0, r0, #-2147483648	; 0x80000000
   431dc:	sbc	r1, r1, #0
   431e0:	rsbs	r0, r0, #0
   431e4:	rscs	r1, r1, #0
   431e8:	blt	432dc <__assert_fail@plt+0x30724>
   431ec:	b	432f8 <__assert_fail@plt+0x30740>
   431f0:	ldr	r0, [fp, #-616]	; 0xfffffd98
   431f4:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   431f8:	subs	r0, r0, #1
   431fc:	sbcs	r1, r1, #0
   43200:	blt	432f8 <__assert_fail@plt+0x30740>
   43204:	b	43208 <__assert_fail@plt+0x30650>
   43208:	ldr	r0, [fp, #-616]	; 0xfffffd98
   4320c:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   43210:	subs	r0, r0, #1
   43214:	sbc	r1, r1, #0
   43218:	mvn	r2, #-2147483648	; 0x80000000
   4321c:	subs	r0, r2, r0
   43220:	rscs	r1, r1, #0
   43224:	blt	432dc <__assert_fail@plt+0x30724>
   43228:	b	432f8 <__assert_fail@plt+0x30740>
   4322c:	ldr	r0, [fp, #-616]	; 0xfffffd98
   43230:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   43234:	movw	r2, #58837	; 0xe5d5
   43238:	movt	r2, #65526	; 0xfff6
   4323c:	subs	r0, r2, r0
   43240:	mvn	r2, #0
   43244:	sbcs	r1, r2, r1
   43248:	blt	432dc <__assert_fail@plt+0x30724>
   4324c:	b	432f8 <__assert_fail@plt+0x30740>
   43250:	b	43258 <__assert_fail@plt+0x306a0>
   43254:	b	432f8 <__assert_fail@plt+0x30740>
   43258:	ldr	r0, [fp, #-612]	; 0xfffffd9c
   4325c:	cmn	r0, #1
   43260:	bgt	432bc <__assert_fail@plt+0x30704>
   43264:	b	43268 <__assert_fail@plt+0x306b0>
   43268:	b	4326c <__assert_fail@plt+0x306b4>
   4326c:	b	43298 <__assert_fail@plt+0x306e0>
   43270:	b	43298 <__assert_fail@plt+0x306e0>
   43274:	ldr	r0, [fp, #-616]	; 0xfffffd98
   43278:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   4327c:	and	r0, r0, r1
   43280:	cmn	r0, #1
   43284:	bne	43298 <__assert_fail@plt+0x306e0>
   43288:	b	4328c <__assert_fail@plt+0x306d4>
   4328c:	b	43290 <__assert_fail@plt+0x306d8>
   43290:	b	432f8 <__assert_fail@plt+0x30740>
   43294:	b	432f8 <__assert_fail@plt+0x30740>
   43298:	ldr	r2, [fp, #-616]	; 0xfffffd98
   4329c:	ldr	r3, [fp, #-612]	; 0xfffffd9c
   432a0:	mov	r0, #-2147483648	; 0x80000000
   432a4:	mvn	r1, #0
   432a8:	bl	75338 <__assert_fail@plt+0x62780>
   432ac:	subs	r0, r0, #3600	; 0xe10
   432b0:	sbcs	r1, r1, #0
   432b4:	blt	432dc <__assert_fail@plt+0x30724>
   432b8:	b	432f8 <__assert_fail@plt+0x30740>
   432bc:	ldr	r0, [fp, #-616]	; 0xfffffd98
   432c0:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   432c4:	movw	r2, #6700	; 0x1a2c
   432c8:	movt	r2, #9
   432cc:	subs	r0, r0, r2
   432d0:	sbcs	r1, r1, #0
   432d4:	blt	432f8 <__assert_fail@plt+0x30740>
   432d8:	b	432dc <__assert_fail@plt+0x30724>
   432dc:	ldr	r0, [fp, #-616]	; 0xfffffd98
   432e0:	mov	r1, #3600	; 0xe10
   432e4:	mul	r0, r0, r1
   432e8:	asr	r1, r0, #31
   432ec:	str	r0, [fp, #-1024]	; 0xfffffc00
   432f0:	str	r1, [fp, #-1020]	; 0xfffffc04
   432f4:	b	44ce4 <__assert_fail@plt+0x3212c>
   432f8:	ldr	r0, [fp, #-616]	; 0xfffffd98
   432fc:	mov	r1, #3600	; 0xe10
   43300:	mul	r0, r0, r1
   43304:	asr	r1, r0, #31
   43308:	str	r0, [fp, #-1024]	; 0xfffffc00
   4330c:	str	r1, [fp, #-1020]	; 0xfffffc04
   43310:	b	43b08 <__assert_fail@plt+0x30f50>
   43314:	b	433e4 <__assert_fail@plt+0x3082c>
   43318:	ldr	r0, [fp, #-612]	; 0xfffffd9c
   4331c:	cmn	r0, #1
   43320:	bgt	4336c <__assert_fail@plt+0x307b4>
   43324:	b	43328 <__assert_fail@plt+0x30770>
   43328:	b	4334c <__assert_fail@plt+0x30794>
   4332c:	ldr	r0, [fp, #-616]	; 0xfffffd98
   43330:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   43334:	movw	r2, #13398	; 0x3456
   43338:	movt	r2, #18
   4333c:	subs	r0, r0, r2
   43340:	sbcs	r1, r1, #0
   43344:	blt	4345c <__assert_fail@plt+0x308a4>
   43348:	b	43478 <__assert_fail@plt+0x308c0>
   4334c:	ldr	r0, [fp, #-616]	; 0xfffffd98
   43350:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   43354:	mvn	r1, r1
   43358:	mvn	r0, r0
   4335c:	rsbs	r0, r0, #0
   43360:	rscs	r1, r1, #0
   43364:	blt	4345c <__assert_fail@plt+0x308a4>
   43368:	b	43478 <__assert_fail@plt+0x308c0>
   4336c:	b	43370 <__assert_fail@plt+0x307b8>
   43370:	b	433cc <__assert_fail@plt+0x30814>
   43374:	b	433cc <__assert_fail@plt+0x30814>
   43378:	b	433cc <__assert_fail@plt+0x30814>
   4337c:	b	43380 <__assert_fail@plt+0x307c8>
   43380:	ldr	r0, [fp, #-616]	; 0xfffffd98
   43384:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   43388:	rsbs	r0, r0, #0
   4338c:	rscs	r1, r1, #0
   43390:	blt	4345c <__assert_fail@plt+0x308a4>
   43394:	b	43478 <__assert_fail@plt+0x308c0>
   43398:	ldr	r0, [fp, #-616]	; 0xfffffd98
   4339c:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   433a0:	subs	r0, r0, #1
   433a4:	sbcs	r1, r1, #0
   433a8:	blt	43478 <__assert_fail@plt+0x308c0>
   433ac:	b	433b0 <__assert_fail@plt+0x307f8>
   433b0:	ldr	r0, [fp, #-616]	; 0xfffffd98
   433b4:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   433b8:	subs	r0, r0, #1
   433bc:	sbc	r1, r1, #0
   433c0:	cmn	r1, #1
   433c4:	bgt	4345c <__assert_fail@plt+0x308a4>
   433c8:	b	43478 <__assert_fail@plt+0x308c0>
   433cc:	ldr	r0, [fp, #-616]	; 0xfffffd98
   433d0:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   433d4:	rsbs	r0, r0, #0
   433d8:	rscs	r1, r1, #0
   433dc:	blt	4345c <__assert_fail@plt+0x308a4>
   433e0:	b	43478 <__assert_fail@plt+0x308c0>
   433e4:	b	433ec <__assert_fail@plt+0x30834>
   433e8:	b	43478 <__assert_fail@plt+0x308c0>
   433ec:	ldr	r0, [fp, #-612]	; 0xfffffd9c
   433f0:	cmn	r0, #1
   433f4:	bgt	4343c <__assert_fail@plt+0x30884>
   433f8:	b	433fc <__assert_fail@plt+0x30844>
   433fc:	b	43400 <__assert_fail@plt+0x30848>
   43400:	b	4342c <__assert_fail@plt+0x30874>
   43404:	b	4342c <__assert_fail@plt+0x30874>
   43408:	ldr	r0, [fp, #-616]	; 0xfffffd98
   4340c:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   43410:	and	r0, r0, r1
   43414:	cmn	r0, #1
   43418:	bne	4342c <__assert_fail@plt+0x30874>
   4341c:	b	43420 <__assert_fail@plt+0x30868>
   43420:	b	43424 <__assert_fail@plt+0x3086c>
   43424:	b	4345c <__assert_fail@plt+0x308a4>
   43428:	b	4345c <__assert_fail@plt+0x308a4>
   4342c:	mov	r0, #1
   43430:	cmp	r0, #0
   43434:	bne	4345c <__assert_fail@plt+0x308a4>
   43438:	b	43478 <__assert_fail@plt+0x308c0>
   4343c:	ldr	r0, [fp, #-616]	; 0xfffffd98
   43440:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   43444:	movw	r2, #13399	; 0x3457
   43448:	movt	r2, #18
   4344c:	subs	r0, r0, r2
   43450:	sbcs	r1, r1, #0
   43454:	blt	43478 <__assert_fail@plt+0x308c0>
   43458:	b	4345c <__assert_fail@plt+0x308a4>
   4345c:	ldr	r0, [fp, #-616]	; 0xfffffd98
   43460:	mov	r1, #3600	; 0xe10
   43464:	mul	r0, r0, r1
   43468:	mov	r1, #0
   4346c:	str	r1, [fp, #-1020]	; 0xfffffc04
   43470:	str	r0, [fp, #-1024]	; 0xfffffc00
   43474:	b	44ce4 <__assert_fail@plt+0x3212c>
   43478:	ldr	r0, [fp, #-616]	; 0xfffffd98
   4347c:	mov	r1, #3600	; 0xe10
   43480:	mul	r0, r0, r1
   43484:	mov	r1, #0
   43488:	str	r1, [fp, #-1020]	; 0xfffffc04
   4348c:	str	r0, [fp, #-1024]	; 0xfffffc00
   43490:	b	43b08 <__assert_fail@plt+0x30f50>
   43494:	b	437cc <__assert_fail@plt+0x30c14>
   43498:	b	4349c <__assert_fail@plt+0x308e4>
   4349c:	b	43588 <__assert_fail@plt+0x309d0>
   434a0:	ldr	r0, [fp, #-612]	; 0xfffffd9c
   434a4:	cmn	r0, #1
   434a8:	bgt	43500 <__assert_fail@plt+0x30948>
   434ac:	b	434b0 <__assert_fail@plt+0x308f8>
   434b0:	b	434b4 <__assert_fail@plt+0x308fc>
   434b4:	ldr	r0, [fp, #-616]	; 0xfffffd98
   434b8:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   434bc:	movw	r2, #6699	; 0x1a2b
   434c0:	movt	r2, #9
   434c4:	subs	r0, r0, r2
   434c8:	sbcs	r1, r1, #0
   434cc:	blt	43614 <__assert_fail@plt+0x30a5c>
   434d0:	b	43630 <__assert_fail@plt+0x30a78>
   434d4:	ldr	r0, [fp, #-616]	; 0xfffffd98
   434d8:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   434dc:	mvn	r1, r1
   434e0:	mvn	r0, r0
   434e4:	movw	r2, #58836	; 0xe5d4
   434e8:	movt	r2, #65526	; 0xfff6
   434ec:	subs	r0, r2, r0
   434f0:	mvn	r2, #0
   434f4:	sbcs	r1, r2, r1
   434f8:	blt	43614 <__assert_fail@plt+0x30a5c>
   434fc:	b	43630 <__assert_fail@plt+0x30a78>
   43500:	b	43564 <__assert_fail@plt+0x309ac>
   43504:	b	43508 <__assert_fail@plt+0x30950>
   43508:	ldr	r0, [fp, #-616]	; 0xfffffd98
   4350c:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   43510:	adds	r0, r0, #-2147483648	; 0x80000000
   43514:	sbc	r1, r1, #0
   43518:	rsbs	r0, r0, #0
   4351c:	rscs	r1, r1, #0
   43520:	blt	43614 <__assert_fail@plt+0x30a5c>
   43524:	b	43630 <__assert_fail@plt+0x30a78>
   43528:	ldr	r0, [fp, #-616]	; 0xfffffd98
   4352c:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   43530:	subs	r0, r0, #1
   43534:	sbcs	r1, r1, #0
   43538:	blt	43630 <__assert_fail@plt+0x30a78>
   4353c:	b	43540 <__assert_fail@plt+0x30988>
   43540:	ldr	r0, [fp, #-616]	; 0xfffffd98
   43544:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   43548:	subs	r0, r0, #1
   4354c:	sbc	r1, r1, #0
   43550:	mvn	r2, #-2147483648	; 0x80000000
   43554:	subs	r0, r2, r0
   43558:	rscs	r1, r1, #0
   4355c:	blt	43614 <__assert_fail@plt+0x30a5c>
   43560:	b	43630 <__assert_fail@plt+0x30a78>
   43564:	ldr	r0, [fp, #-616]	; 0xfffffd98
   43568:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   4356c:	movw	r2, #58837	; 0xe5d5
   43570:	movt	r2, #65526	; 0xfff6
   43574:	subs	r0, r2, r0
   43578:	mvn	r2, #0
   4357c:	sbcs	r1, r2, r1
   43580:	blt	43614 <__assert_fail@plt+0x30a5c>
   43584:	b	43630 <__assert_fail@plt+0x30a78>
   43588:	b	43590 <__assert_fail@plt+0x309d8>
   4358c:	b	43630 <__assert_fail@plt+0x30a78>
   43590:	ldr	r0, [fp, #-612]	; 0xfffffd9c
   43594:	cmn	r0, #1
   43598:	bgt	435f4 <__assert_fail@plt+0x30a3c>
   4359c:	b	435a0 <__assert_fail@plt+0x309e8>
   435a0:	b	435a4 <__assert_fail@plt+0x309ec>
   435a4:	b	435d0 <__assert_fail@plt+0x30a18>
   435a8:	b	435d0 <__assert_fail@plt+0x30a18>
   435ac:	ldr	r0, [fp, #-616]	; 0xfffffd98
   435b0:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   435b4:	and	r0, r0, r1
   435b8:	cmn	r0, #1
   435bc:	bne	435d0 <__assert_fail@plt+0x30a18>
   435c0:	b	435c4 <__assert_fail@plt+0x30a0c>
   435c4:	b	435c8 <__assert_fail@plt+0x30a10>
   435c8:	b	43630 <__assert_fail@plt+0x30a78>
   435cc:	b	43630 <__assert_fail@plt+0x30a78>
   435d0:	ldr	r2, [fp, #-616]	; 0xfffffd98
   435d4:	ldr	r3, [fp, #-612]	; 0xfffffd9c
   435d8:	mov	r0, #-2147483648	; 0x80000000
   435dc:	mvn	r1, #0
   435e0:	bl	75338 <__assert_fail@plt+0x62780>
   435e4:	subs	r0, r0, #3600	; 0xe10
   435e8:	sbcs	r1, r1, #0
   435ec:	blt	43614 <__assert_fail@plt+0x30a5c>
   435f0:	b	43630 <__assert_fail@plt+0x30a78>
   435f4:	ldr	r0, [fp, #-616]	; 0xfffffd98
   435f8:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   435fc:	movw	r2, #6700	; 0x1a2c
   43600:	movt	r2, #9
   43604:	subs	r0, r0, r2
   43608:	sbcs	r1, r1, #0
   4360c:	blt	43630 <__assert_fail@plt+0x30a78>
   43610:	b	43614 <__assert_fail@plt+0x30a5c>
   43614:	ldr	r0, [fp, #-616]	; 0xfffffd98
   43618:	mov	r1, #3600	; 0xe10
   4361c:	mul	r0, r0, r1
   43620:	asr	r1, r0, #31
   43624:	str	r0, [fp, #-1024]	; 0xfffffc00
   43628:	str	r1, [fp, #-1020]	; 0xfffffc04
   4362c:	b	44ce4 <__assert_fail@plt+0x3212c>
   43630:	ldr	r0, [fp, #-616]	; 0xfffffd98
   43634:	mov	r1, #3600	; 0xe10
   43638:	mul	r0, r0, r1
   4363c:	asr	r1, r0, #31
   43640:	str	r0, [fp, #-1024]	; 0xfffffc00
   43644:	str	r1, [fp, #-1020]	; 0xfffffc04
   43648:	b	43b08 <__assert_fail@plt+0x30f50>
   4364c:	b	4371c <__assert_fail@plt+0x30b64>
   43650:	ldr	r0, [fp, #-612]	; 0xfffffd9c
   43654:	cmn	r0, #1
   43658:	bgt	436a4 <__assert_fail@plt+0x30aec>
   4365c:	b	43660 <__assert_fail@plt+0x30aa8>
   43660:	b	43684 <__assert_fail@plt+0x30acc>
   43664:	ldr	r0, [fp, #-616]	; 0xfffffd98
   43668:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   4366c:	movw	r2, #13398	; 0x3456
   43670:	movt	r2, #18
   43674:	subs	r0, r0, r2
   43678:	sbcs	r1, r1, #0
   4367c:	blt	43794 <__assert_fail@plt+0x30bdc>
   43680:	b	437b0 <__assert_fail@plt+0x30bf8>
   43684:	ldr	r0, [fp, #-616]	; 0xfffffd98
   43688:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   4368c:	mvn	r1, r1
   43690:	mvn	r0, r0
   43694:	rsbs	r0, r0, #0
   43698:	rscs	r1, r1, #0
   4369c:	blt	43794 <__assert_fail@plt+0x30bdc>
   436a0:	b	437b0 <__assert_fail@plt+0x30bf8>
   436a4:	b	436a8 <__assert_fail@plt+0x30af0>
   436a8:	b	43704 <__assert_fail@plt+0x30b4c>
   436ac:	b	43704 <__assert_fail@plt+0x30b4c>
   436b0:	b	43704 <__assert_fail@plt+0x30b4c>
   436b4:	b	436b8 <__assert_fail@plt+0x30b00>
   436b8:	ldr	r0, [fp, #-616]	; 0xfffffd98
   436bc:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   436c0:	rsbs	r0, r0, #0
   436c4:	rscs	r1, r1, #0
   436c8:	blt	43794 <__assert_fail@plt+0x30bdc>
   436cc:	b	437b0 <__assert_fail@plt+0x30bf8>
   436d0:	ldr	r0, [fp, #-616]	; 0xfffffd98
   436d4:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   436d8:	subs	r0, r0, #1
   436dc:	sbcs	r1, r1, #0
   436e0:	blt	437b0 <__assert_fail@plt+0x30bf8>
   436e4:	b	436e8 <__assert_fail@plt+0x30b30>
   436e8:	ldr	r0, [fp, #-616]	; 0xfffffd98
   436ec:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   436f0:	subs	r0, r0, #1
   436f4:	sbc	r1, r1, #0
   436f8:	cmn	r1, #1
   436fc:	bgt	43794 <__assert_fail@plt+0x30bdc>
   43700:	b	437b0 <__assert_fail@plt+0x30bf8>
   43704:	ldr	r0, [fp, #-616]	; 0xfffffd98
   43708:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   4370c:	rsbs	r0, r0, #0
   43710:	rscs	r1, r1, #0
   43714:	blt	43794 <__assert_fail@plt+0x30bdc>
   43718:	b	437b0 <__assert_fail@plt+0x30bf8>
   4371c:	b	43724 <__assert_fail@plt+0x30b6c>
   43720:	b	437b0 <__assert_fail@plt+0x30bf8>
   43724:	ldr	r0, [fp, #-612]	; 0xfffffd9c
   43728:	cmn	r0, #1
   4372c:	bgt	43774 <__assert_fail@plt+0x30bbc>
   43730:	b	43734 <__assert_fail@plt+0x30b7c>
   43734:	b	43738 <__assert_fail@plt+0x30b80>
   43738:	b	43764 <__assert_fail@plt+0x30bac>
   4373c:	b	43764 <__assert_fail@plt+0x30bac>
   43740:	ldr	r0, [fp, #-616]	; 0xfffffd98
   43744:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   43748:	and	r0, r0, r1
   4374c:	cmn	r0, #1
   43750:	bne	43764 <__assert_fail@plt+0x30bac>
   43754:	b	43758 <__assert_fail@plt+0x30ba0>
   43758:	b	4375c <__assert_fail@plt+0x30ba4>
   4375c:	b	43794 <__assert_fail@plt+0x30bdc>
   43760:	b	43794 <__assert_fail@plt+0x30bdc>
   43764:	mov	r0, #1
   43768:	cmp	r0, #0
   4376c:	bne	43794 <__assert_fail@plt+0x30bdc>
   43770:	b	437b0 <__assert_fail@plt+0x30bf8>
   43774:	ldr	r0, [fp, #-616]	; 0xfffffd98
   43778:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   4377c:	movw	r2, #13399	; 0x3457
   43780:	movt	r2, #18
   43784:	subs	r0, r0, r2
   43788:	sbcs	r1, r1, #0
   4378c:	blt	437b0 <__assert_fail@plt+0x30bf8>
   43790:	b	43794 <__assert_fail@plt+0x30bdc>
   43794:	ldr	r0, [fp, #-616]	; 0xfffffd98
   43798:	mov	r1, #3600	; 0xe10
   4379c:	mul	r0, r0, r1
   437a0:	mov	r1, #0
   437a4:	str	r1, [fp, #-1020]	; 0xfffffc04
   437a8:	str	r0, [fp, #-1024]	; 0xfffffc00
   437ac:	b	44ce4 <__assert_fail@plt+0x3212c>
   437b0:	ldr	r0, [fp, #-616]	; 0xfffffd98
   437b4:	mov	r1, #3600	; 0xe10
   437b8:	mul	r0, r0, r1
   437bc:	mov	r1, #0
   437c0:	str	r1, [fp, #-1020]	; 0xfffffc04
   437c4:	str	r0, [fp, #-1024]	; 0xfffffc00
   437c8:	b	43b08 <__assert_fail@plt+0x30f50>
   437cc:	b	437d0 <__assert_fail@plt+0x30c18>
   437d0:	b	438b4 <__assert_fail@plt+0x30cfc>
   437d4:	ldr	r0, [fp, #-612]	; 0xfffffd9c
   437d8:	cmn	r0, #1
   437dc:	bgt	43840 <__assert_fail@plt+0x30c88>
   437e0:	b	437e4 <__assert_fail@plt+0x30c2c>
   437e4:	b	437e8 <__assert_fail@plt+0x30c30>
   437e8:	ldr	r0, [fp, #-616]	; 0xfffffd98
   437ec:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   437f0:	movw	r2, #24175	; 0x5e6f
   437f4:	movt	r2, #15437	; 0x3c4d
   437f8:	subs	r0, r0, r2
   437fc:	movw	r2, #6699	; 0x1a2b
   43800:	movt	r2, #9
   43804:	sbcs	r1, r1, r2
   43808:	blt	4393c <__assert_fail@plt+0x30d84>
   4380c:	b	4395c <__assert_fail@plt+0x30da4>
   43810:	ldr	r0, [fp, #-616]	; 0xfffffd98
   43814:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   43818:	mvn	r1, r1
   4381c:	mvn	r0, r0
   43820:	movw	r2, #41360	; 0xa190
   43824:	movt	r2, #50098	; 0xc3b2
   43828:	subs	r0, r2, r0
   4382c:	movw	r2, #58836	; 0xe5d4
   43830:	movt	r2, #65526	; 0xfff6
   43834:	sbcs	r1, r2, r1
   43838:	blt	4393c <__assert_fail@plt+0x30d84>
   4383c:	b	4395c <__assert_fail@plt+0x30da4>
   43840:	b	4388c <__assert_fail@plt+0x30cd4>
   43844:	b	43848 <__assert_fail@plt+0x30c90>
   43848:	ldr	r0, [fp, #-616]	; 0xfffffd98
   4384c:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   43850:	add	r1, r1, #-2147483648	; 0x80000000
   43854:	rsbs	r0, r0, #0
   43858:	rscs	r1, r1, #0
   4385c:	blt	4393c <__assert_fail@plt+0x30d84>
   43860:	b	4395c <__assert_fail@plt+0x30da4>
   43864:	ldr	r0, [fp, #-616]	; 0xfffffd98
   43868:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   4386c:	subs	r0, r0, #1
   43870:	sbcs	r1, r1, #0
   43874:	blt	4395c <__assert_fail@plt+0x30da4>
   43878:	b	4387c <__assert_fail@plt+0x30cc4>
   4387c:	mov	r0, #0
   43880:	cmp	r0, #0
   43884:	bne	4393c <__assert_fail@plt+0x30d84>
   43888:	b	4395c <__assert_fail@plt+0x30da4>
   4388c:	ldr	r0, [fp, #-616]	; 0xfffffd98
   43890:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   43894:	movw	r2, #41361	; 0xa191
   43898:	movt	r2, #50098	; 0xc3b2
   4389c:	subs	r0, r2, r0
   438a0:	movw	r2, #58836	; 0xe5d4
   438a4:	movt	r2, #65526	; 0xfff6
   438a8:	sbcs	r1, r2, r1
   438ac:	blt	4393c <__assert_fail@plt+0x30d84>
   438b0:	b	4395c <__assert_fail@plt+0x30da4>
   438b4:	b	438bc <__assert_fail@plt+0x30d04>
   438b8:	b	4395c <__assert_fail@plt+0x30da4>
   438bc:	ldr	r0, [fp, #-612]	; 0xfffffd9c
   438c0:	cmn	r0, #1
   438c4:	bgt	43914 <__assert_fail@plt+0x30d5c>
   438c8:	b	438cc <__assert_fail@plt+0x30d14>
   438cc:	ldr	r0, [fp, #-616]	; 0xfffffd98
   438d0:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   438d4:	and	r0, r0, r1
   438d8:	cmn	r0, #1
   438dc:	bne	438f0 <__assert_fail@plt+0x30d38>
   438e0:	b	438e4 <__assert_fail@plt+0x30d2c>
   438e4:	b	438e8 <__assert_fail@plt+0x30d30>
   438e8:	b	4395c <__assert_fail@plt+0x30da4>
   438ec:	b	4395c <__assert_fail@plt+0x30da4>
   438f0:	ldr	r2, [fp, #-616]	; 0xfffffd98
   438f4:	ldr	r3, [fp, #-612]	; 0xfffffd9c
   438f8:	mov	r0, #0
   438fc:	mov	r1, #-2147483648	; 0x80000000
   43900:	bl	75338 <__assert_fail@plt+0x62780>
   43904:	subs	r0, r0, #3600	; 0xe10
   43908:	sbcs	r1, r1, #0
   4390c:	blt	4393c <__assert_fail@plt+0x30d84>
   43910:	b	4395c <__assert_fail@plt+0x30da4>
   43914:	ldr	r0, [fp, #-616]	; 0xfffffd98
   43918:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   4391c:	movw	r2, #24176	; 0x5e70
   43920:	movt	r2, #15437	; 0x3c4d
   43924:	subs	r0, r0, r2
   43928:	movw	r2, #6699	; 0x1a2b
   4392c:	movt	r2, #9
   43930:	sbcs	r1, r1, r2
   43934:	blt	4395c <__assert_fail@plt+0x30da4>
   43938:	b	4393c <__assert_fail@plt+0x30d84>
   4393c:	ldr	r0, [fp, #-616]	; 0xfffffd98
   43940:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   43944:	mov	r2, #3600	; 0xe10
   43948:	umull	r0, r3, r0, r2
   4394c:	mla	r1, r1, r2, r3
   43950:	str	r0, [fp, #-1024]	; 0xfffffc00
   43954:	str	r1, [fp, #-1020]	; 0xfffffc04
   43958:	b	44ce4 <__assert_fail@plt+0x3212c>
   4395c:	ldr	r0, [fp, #-616]	; 0xfffffd98
   43960:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   43964:	mov	r2, #3600	; 0xe10
   43968:	umull	r0, r3, r0, r2
   4396c:	mla	r1, r1, r2, r3
   43970:	str	r0, [fp, #-1024]	; 0xfffffc00
   43974:	str	r1, [fp, #-1020]	; 0xfffffc04
   43978:	b	43b08 <__assert_fail@plt+0x30f50>
   4397c:	b	43a4c <__assert_fail@plt+0x30e94>
   43980:	ldr	r0, [fp, #-612]	; 0xfffffd9c
   43984:	cmn	r0, #1
   43988:	bgt	439d4 <__assert_fail@plt+0x30e1c>
   4398c:	b	43990 <__assert_fail@plt+0x30dd8>
   43990:	b	439bc <__assert_fail@plt+0x30e04>
   43994:	ldr	r0, [fp, #-616]	; 0xfffffd98
   43998:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   4399c:	movw	r2, #48351	; 0xbcdf
   439a0:	movt	r2, #30874	; 0x789a
   439a4:	subs	r0, r0, r2
   439a8:	movw	r2, #13398	; 0x3456
   439ac:	movt	r2, #18
   439b0:	sbcs	r1, r1, r2
   439b4:	bcc	43acc <__assert_fail@plt+0x30f14>
   439b8:	b	43aec <__assert_fail@plt+0x30f34>
   439bc:	ldr	r0, [fp, #-616]	; 0xfffffd98
   439c0:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   439c4:	and	r0, r0, r1
   439c8:	cmn	r0, #1
   439cc:	bne	43acc <__assert_fail@plt+0x30f14>
   439d0:	b	43aec <__assert_fail@plt+0x30f34>
   439d4:	b	439d8 <__assert_fail@plt+0x30e20>
   439d8:	b	43a34 <__assert_fail@plt+0x30e7c>
   439dc:	b	43a34 <__assert_fail@plt+0x30e7c>
   439e0:	b	43a34 <__assert_fail@plt+0x30e7c>
   439e4:	b	439e8 <__assert_fail@plt+0x30e30>
   439e8:	ldr	r0, [fp, #-616]	; 0xfffffd98
   439ec:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   439f0:	rsbs	r0, r0, #0
   439f4:	rscs	r1, r1, #0
   439f8:	blt	43acc <__assert_fail@plt+0x30f14>
   439fc:	b	43aec <__assert_fail@plt+0x30f34>
   43a00:	ldr	r0, [fp, #-616]	; 0xfffffd98
   43a04:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   43a08:	subs	r0, r0, #1
   43a0c:	sbcs	r1, r1, #0
   43a10:	blt	43aec <__assert_fail@plt+0x30f34>
   43a14:	b	43a18 <__assert_fail@plt+0x30e60>
   43a18:	ldr	r0, [fp, #-616]	; 0xfffffd98
   43a1c:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   43a20:	subs	r0, r0, #1
   43a24:	sbc	r1, r1, #0
   43a28:	cmn	r1, #1
   43a2c:	bgt	43acc <__assert_fail@plt+0x30f14>
   43a30:	b	43aec <__assert_fail@plt+0x30f34>
   43a34:	ldr	r0, [fp, #-616]	; 0xfffffd98
   43a38:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   43a3c:	rsbs	r0, r0, #0
   43a40:	rscs	r1, r1, #0
   43a44:	blt	43acc <__assert_fail@plt+0x30f14>
   43a48:	b	43aec <__assert_fail@plt+0x30f34>
   43a4c:	b	43a54 <__assert_fail@plt+0x30e9c>
   43a50:	b	43aec <__assert_fail@plt+0x30f34>
   43a54:	ldr	r0, [fp, #-612]	; 0xfffffd9c
   43a58:	cmn	r0, #1
   43a5c:	bgt	43aa4 <__assert_fail@plt+0x30eec>
   43a60:	b	43a64 <__assert_fail@plt+0x30eac>
   43a64:	b	43a68 <__assert_fail@plt+0x30eb0>
   43a68:	b	43a94 <__assert_fail@plt+0x30edc>
   43a6c:	b	43a94 <__assert_fail@plt+0x30edc>
   43a70:	ldr	r0, [fp, #-616]	; 0xfffffd98
   43a74:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   43a78:	and	r0, r0, r1
   43a7c:	cmn	r0, #1
   43a80:	bne	43a94 <__assert_fail@plt+0x30edc>
   43a84:	b	43a88 <__assert_fail@plt+0x30ed0>
   43a88:	b	43a8c <__assert_fail@plt+0x30ed4>
   43a8c:	b	43acc <__assert_fail@plt+0x30f14>
   43a90:	b	43acc <__assert_fail@plt+0x30f14>
   43a94:	mov	r0, #1
   43a98:	cmp	r0, #0
   43a9c:	bne	43acc <__assert_fail@plt+0x30f14>
   43aa0:	b	43aec <__assert_fail@plt+0x30f34>
   43aa4:	ldr	r0, [fp, #-616]	; 0xfffffd98
   43aa8:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   43aac:	movw	r2, #48352	; 0xbce0
   43ab0:	movt	r2, #30874	; 0x789a
   43ab4:	subs	r0, r0, r2
   43ab8:	movw	r2, #13398	; 0x3456
   43abc:	movt	r2, #18
   43ac0:	sbcs	r1, r1, r2
   43ac4:	bcc	43aec <__assert_fail@plt+0x30f34>
   43ac8:	b	43acc <__assert_fail@plt+0x30f14>
   43acc:	ldr	r0, [fp, #-616]	; 0xfffffd98
   43ad0:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   43ad4:	mov	r2, #3600	; 0xe10
   43ad8:	umull	r0, r3, r0, r2
   43adc:	mla	r1, r1, r2, r3
   43ae0:	str	r0, [fp, #-1024]	; 0xfffffc00
   43ae4:	str	r1, [fp, #-1020]	; 0xfffffc04
   43ae8:	b	44ce4 <__assert_fail@plt+0x3212c>
   43aec:	ldr	r0, [fp, #-616]	; 0xfffffd98
   43af0:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   43af4:	mov	r2, #3600	; 0xe10
   43af8:	umull	r0, r3, r0, r2
   43afc:	mla	r1, r1, r2, r3
   43b00:	str	r0, [fp, #-1024]	; 0xfffffc00
   43b04:	str	r1, [fp, #-1020]	; 0xfffffc04
   43b08:	ldr	r0, [fp, #-368]	; 0xfffffe90
   43b0c:	asr	r1, r0, #31
   43b10:	ldr	r2, [fp, #-1024]	; 0xfffffc00
   43b14:	ldr	r3, [fp, #-1020]	; 0xfffffc04
   43b18:	mov	ip, #0
   43b1c:	cmn	r1, #1
   43b20:	mov	lr, ip
   43b24:	movwgt	lr, #1
   43b28:	adds	r0, r0, r2
   43b2c:	adc	r1, r1, r3
   43b30:	cmn	r1, #1
   43b34:	mov	r2, ip
   43b38:	movwgt	r2, #1
   43b3c:	subs	r2, lr, r2
   43b40:	movwne	r2, #1
   43b44:	cmn	r3, #1
   43b48:	movwgt	ip, #1
   43b4c:	sub	r3, lr, ip
   43b50:	clz	r3, r3
   43b54:	lsr	r3, r3, #5
   43b58:	and	r2, r3, r2
   43b5c:	str	r0, [fp, #-1032]	; 0xfffffbf8
   43b60:	str	r1, [fp, #-1028]	; 0xfffffbfc
   43b64:	tst	r2, #1
   43b68:	bne	44ce4 <__assert_fail@plt+0x3212c>
   43b6c:	b	43e9c <__assert_fail@plt+0x312e4>
   43b70:	b	43b74 <__assert_fail@plt+0x30fbc>
   43b74:	b	43c58 <__assert_fail@plt+0x310a0>
   43b78:	ldr	r0, [fp, #-604]	; 0xfffffda4
   43b7c:	cmn	r0, #1
   43b80:	bgt	43bcc <__assert_fail@plt+0x31014>
   43b84:	b	43b88 <__assert_fail@plt+0x30fd0>
   43b88:	b	43b8c <__assert_fail@plt+0x30fd4>
   43b8c:	ldr	r0, [fp, #-608]	; 0xfffffda0
   43b90:	ldr	r1, [fp, #-604]	; 0xfffffda4
   43b94:	subs	r0, r0, #2
   43b98:	sbcs	r1, r1, #0
   43b9c:	blt	43cdc <__assert_fail@plt+0x31124>
   43ba0:	b	43cfc <__assert_fail@plt+0x31144>
   43ba4:	ldr	r0, [fp, #-608]	; 0xfffffda0
   43ba8:	ldr	r1, [fp, #-604]	; 0xfffffda4
   43bac:	mvn	r1, r1
   43bb0:	mvn	r0, r0
   43bb4:	mvn	r2, #2
   43bb8:	subs	r0, r2, r0
   43bbc:	mvn	r2, #0
   43bc0:	sbcs	r1, r2, r1
   43bc4:	blt	43cdc <__assert_fail@plt+0x31124>
   43bc8:	b	43cfc <__assert_fail@plt+0x31144>
   43bcc:	b	43bd0 <__assert_fail@plt+0x31018>
   43bd0:	b	43c38 <__assert_fail@plt+0x31080>
   43bd4:	b	43c38 <__assert_fail@plt+0x31080>
   43bd8:	b	43c38 <__assert_fail@plt+0x31080>
   43bdc:	b	43be0 <__assert_fail@plt+0x31028>
   43be0:	ldr	r0, [fp, #-608]	; 0xfffffda0
   43be4:	ldr	r1, [fp, #-604]	; 0xfffffda4
   43be8:	subs	r0, r0, #128	; 0x80
   43bec:	sbc	r1, r1, #0
   43bf0:	rsbs	r0, r0, #0
   43bf4:	rscs	r1, r1, #0
   43bf8:	blt	43cdc <__assert_fail@plt+0x31124>
   43bfc:	b	43cfc <__assert_fail@plt+0x31144>
   43c00:	ldr	r0, [fp, #-608]	; 0xfffffda0
   43c04:	ldr	r1, [fp, #-604]	; 0xfffffda4
   43c08:	subs	r0, r0, #1
   43c0c:	sbcs	r1, r1, #0
   43c10:	blt	43cfc <__assert_fail@plt+0x31144>
   43c14:	b	43c18 <__assert_fail@plt+0x31060>
   43c18:	ldr	r0, [fp, #-608]	; 0xfffffda0
   43c1c:	ldr	r1, [fp, #-604]	; 0xfffffda4
   43c20:	subs	r0, r0, #1
   43c24:	sbc	r1, r1, #0
   43c28:	rsbs	r0, r0, #127	; 0x7f
   43c2c:	rscs	r1, r1, #0
   43c30:	blt	43cdc <__assert_fail@plt+0x31124>
   43c34:	b	43cfc <__assert_fail@plt+0x31144>
   43c38:	ldr	r0, [fp, #-608]	; 0xfffffda0
   43c3c:	ldr	r1, [fp, #-604]	; 0xfffffda4
   43c40:	mvn	r2, #1
   43c44:	subs	r0, r2, r0
   43c48:	mvn	r2, #0
   43c4c:	sbcs	r1, r2, r1
   43c50:	blt	43cdc <__assert_fail@plt+0x31124>
   43c54:	b	43cfc <__assert_fail@plt+0x31144>
   43c58:	b	43c60 <__assert_fail@plt+0x310a8>
   43c5c:	b	43cfc <__assert_fail@plt+0x31144>
   43c60:	ldr	r0, [fp, #-604]	; 0xfffffda4
   43c64:	cmn	r0, #1
   43c68:	bgt	43cc4 <__assert_fail@plt+0x3110c>
   43c6c:	b	43c70 <__assert_fail@plt+0x310b8>
   43c70:	b	43c74 <__assert_fail@plt+0x310bc>
   43c74:	b	43ca0 <__assert_fail@plt+0x310e8>
   43c78:	b	43ca0 <__assert_fail@plt+0x310e8>
   43c7c:	ldr	r0, [fp, #-608]	; 0xfffffda0
   43c80:	ldr	r1, [fp, #-604]	; 0xfffffda4
   43c84:	and	r0, r0, r1
   43c88:	cmn	r0, #1
   43c8c:	bne	43ca0 <__assert_fail@plt+0x310e8>
   43c90:	b	43c94 <__assert_fail@plt+0x310dc>
   43c94:	b	43c98 <__assert_fail@plt+0x310e0>
   43c98:	b	43cfc <__assert_fail@plt+0x31144>
   43c9c:	b	43cfc <__assert_fail@plt+0x31144>
   43ca0:	ldr	r2, [fp, #-608]	; 0xfffffda0
   43ca4:	ldr	r3, [fp, #-604]	; 0xfffffda4
   43ca8:	mvn	r0, #127	; 0x7f
   43cac:	mvn	r1, #0
   43cb0:	bl	75338 <__assert_fail@plt+0x62780>
   43cb4:	subs	r0, r0, #60	; 0x3c
   43cb8:	sbcs	r1, r1, #0
   43cbc:	blt	43cdc <__assert_fail@plt+0x31124>
   43cc0:	b	43cfc <__assert_fail@plt+0x31144>
   43cc4:	ldr	r0, [fp, #-608]	; 0xfffffda0
   43cc8:	ldr	r1, [fp, #-604]	; 0xfffffda4
   43ccc:	subs	r0, r0, #3
   43cd0:	sbcs	r1, r1, #0
   43cd4:	blt	43cfc <__assert_fail@plt+0x31144>
   43cd8:	b	43cdc <__assert_fail@plt+0x31124>
   43cdc:	ldr	r0, [fp, #-608]	; 0xfffffda0
   43ce0:	rsb	r0, r0, r0, lsl #4
   43ce4:	lsl	r0, r0, #2
   43ce8:	sxtb	r0, r0
   43cec:	asr	r1, r0, #31
   43cf0:	str	r0, [fp, #-1040]	; 0xfffffbf0
   43cf4:	str	r1, [fp, #-1036]	; 0xfffffbf4
   43cf8:	b	44ce4 <__assert_fail@plt+0x3212c>
   43cfc:	ldr	r0, [fp, #-608]	; 0xfffffda0
   43d00:	rsb	r0, r0, r0, lsl #4
   43d04:	lsl	r0, r0, #2
   43d08:	sxtb	r0, r0
   43d0c:	asr	r1, r0, #31
   43d10:	str	r0, [fp, #-1040]	; 0xfffffbf0
   43d14:	str	r1, [fp, #-1036]	; 0xfffffbf4
   43d18:	b	44bac <__assert_fail@plt+0x31ff4>
   43d1c:	b	43dec <__assert_fail@plt+0x31234>
   43d20:	ldr	r0, [fp, #-604]	; 0xfffffda4
   43d24:	cmn	r0, #1
   43d28:	bgt	43d74 <__assert_fail@plt+0x311bc>
   43d2c:	b	43d30 <__assert_fail@plt+0x31178>
   43d30:	b	43d34 <__assert_fail@plt+0x3117c>
   43d34:	ldr	r0, [fp, #-608]	; 0xfffffda0
   43d38:	ldr	r1, [fp, #-604]	; 0xfffffda4
   43d3c:	subs	r0, r0, #4
   43d40:	sbcs	r1, r1, #0
   43d44:	blt	43e5c <__assert_fail@plt+0x312a4>
   43d48:	b	43e7c <__assert_fail@plt+0x312c4>
   43d4c:	ldr	r0, [fp, #-608]	; 0xfffffda0
   43d50:	ldr	r1, [fp, #-604]	; 0xfffffda4
   43d54:	mvn	r1, r1
   43d58:	mvn	r0, r0
   43d5c:	mvn	r2, #4
   43d60:	subs	r0, r2, r0
   43d64:	mvn	r2, #0
   43d68:	sbcs	r1, r2, r1
   43d6c:	blt	43e5c <__assert_fail@plt+0x312a4>
   43d70:	b	43e7c <__assert_fail@plt+0x312c4>
   43d74:	b	43d78 <__assert_fail@plt+0x311c0>
   43d78:	b	43dd4 <__assert_fail@plt+0x3121c>
   43d7c:	b	43dd4 <__assert_fail@plt+0x3121c>
   43d80:	b	43dd4 <__assert_fail@plt+0x3121c>
   43d84:	b	43d88 <__assert_fail@plt+0x311d0>
   43d88:	ldr	r0, [fp, #-608]	; 0xfffffda0
   43d8c:	ldr	r1, [fp, #-604]	; 0xfffffda4
   43d90:	rsbs	r0, r0, #0
   43d94:	rscs	r1, r1, #0
   43d98:	blt	43e5c <__assert_fail@plt+0x312a4>
   43d9c:	b	43e7c <__assert_fail@plt+0x312c4>
   43da0:	ldr	r0, [fp, #-608]	; 0xfffffda0
   43da4:	ldr	r1, [fp, #-604]	; 0xfffffda4
   43da8:	subs	r0, r0, #1
   43dac:	sbcs	r1, r1, #0
   43db0:	blt	43e7c <__assert_fail@plt+0x312c4>
   43db4:	b	43db8 <__assert_fail@plt+0x31200>
   43db8:	ldr	r0, [fp, #-608]	; 0xfffffda0
   43dbc:	ldr	r1, [fp, #-604]	; 0xfffffda4
   43dc0:	subs	r0, r0, #1
   43dc4:	sbc	r1, r1, #0
   43dc8:	cmn	r1, #1
   43dcc:	bgt	43e5c <__assert_fail@plt+0x312a4>
   43dd0:	b	43e7c <__assert_fail@plt+0x312c4>
   43dd4:	ldr	r0, [fp, #-608]	; 0xfffffda0
   43dd8:	ldr	r1, [fp, #-604]	; 0xfffffda4
   43ddc:	rsbs	r0, r0, #0
   43de0:	rscs	r1, r1, #0
   43de4:	blt	43e5c <__assert_fail@plt+0x312a4>
   43de8:	b	43e7c <__assert_fail@plt+0x312c4>
   43dec:	b	43df4 <__assert_fail@plt+0x3123c>
   43df0:	b	43e7c <__assert_fail@plt+0x312c4>
   43df4:	ldr	r0, [fp, #-604]	; 0xfffffda4
   43df8:	cmn	r0, #1
   43dfc:	bgt	43e44 <__assert_fail@plt+0x3128c>
   43e00:	b	43e04 <__assert_fail@plt+0x3124c>
   43e04:	b	43e08 <__assert_fail@plt+0x31250>
   43e08:	b	43e34 <__assert_fail@plt+0x3127c>
   43e0c:	b	43e34 <__assert_fail@plt+0x3127c>
   43e10:	ldr	r0, [fp, #-608]	; 0xfffffda0
   43e14:	ldr	r1, [fp, #-604]	; 0xfffffda4
   43e18:	and	r0, r0, r1
   43e1c:	cmn	r0, #1
   43e20:	bne	43e34 <__assert_fail@plt+0x3127c>
   43e24:	b	43e28 <__assert_fail@plt+0x31270>
   43e28:	b	43e2c <__assert_fail@plt+0x31274>
   43e2c:	b	43e5c <__assert_fail@plt+0x312a4>
   43e30:	b	43e5c <__assert_fail@plt+0x312a4>
   43e34:	mov	r0, #1
   43e38:	cmp	r0, #0
   43e3c:	bne	43e5c <__assert_fail@plt+0x312a4>
   43e40:	b	43e7c <__assert_fail@plt+0x312c4>
   43e44:	ldr	r0, [fp, #-608]	; 0xfffffda0
   43e48:	ldr	r1, [fp, #-604]	; 0xfffffda4
   43e4c:	subs	r0, r0, #5
   43e50:	sbcs	r1, r1, #0
   43e54:	blt	43e7c <__assert_fail@plt+0x312c4>
   43e58:	b	43e5c <__assert_fail@plt+0x312a4>
   43e5c:	ldr	r0, [fp, #-608]	; 0xfffffda0
   43e60:	rsb	r0, r0, r0, lsl #4
   43e64:	lsl	r0, r0, #2
   43e68:	uxtb	r0, r0
   43e6c:	mov	r1, #0
   43e70:	str	r1, [fp, #-1036]	; 0xfffffbf4
   43e74:	str	r0, [fp, #-1040]	; 0xfffffbf0
   43e78:	b	44ce4 <__assert_fail@plt+0x3212c>
   43e7c:	ldr	r0, [fp, #-608]	; 0xfffffda0
   43e80:	rsb	r0, r0, r0, lsl #4
   43e84:	lsl	r0, r0, #2
   43e88:	uxtb	r0, r0
   43e8c:	mov	r1, #0
   43e90:	str	r1, [fp, #-1036]	; 0xfffffbf4
   43e94:	str	r0, [fp, #-1040]	; 0xfffffbf0
   43e98:	b	44bac <__assert_fail@plt+0x31ff4>
   43e9c:	b	441f0 <__assert_fail@plt+0x31638>
   43ea0:	b	43ea4 <__assert_fail@plt+0x312ec>
   43ea4:	b	43f98 <__assert_fail@plt+0x313e0>
   43ea8:	ldr	r0, [fp, #-604]	; 0xfffffda4
   43eac:	cmn	r0, #1
   43eb0:	bgt	43f04 <__assert_fail@plt+0x3134c>
   43eb4:	b	43eb8 <__assert_fail@plt+0x31300>
   43eb8:	b	43ebc <__assert_fail@plt+0x31304>
   43ebc:	ldr	r0, [fp, #-608]	; 0xfffffda0
   43ec0:	ldr	r1, [fp, #-604]	; 0xfffffda4
   43ec4:	movw	r2, #546	; 0x222
   43ec8:	subs	r0, r0, r2
   43ecc:	sbcs	r1, r1, #0
   43ed0:	blt	44024 <__assert_fail@plt+0x3146c>
   43ed4:	b	44044 <__assert_fail@plt+0x3148c>
   43ed8:	ldr	r0, [fp, #-608]	; 0xfffffda0
   43edc:	ldr	r1, [fp, #-604]	; 0xfffffda4
   43ee0:	mvn	r1, r1
   43ee4:	mvn	r0, r0
   43ee8:	movw	r2, #64989	; 0xfddd
   43eec:	movt	r2, #65535	; 0xffff
   43ef0:	subs	r0, r2, r0
   43ef4:	mvn	r2, #0
   43ef8:	sbcs	r1, r2, r1
   43efc:	blt	44024 <__assert_fail@plt+0x3146c>
   43f00:	b	44044 <__assert_fail@plt+0x3148c>
   43f04:	b	43f08 <__assert_fail@plt+0x31350>
   43f08:	b	43f74 <__assert_fail@plt+0x313bc>
   43f0c:	b	43f74 <__assert_fail@plt+0x313bc>
   43f10:	b	43f74 <__assert_fail@plt+0x313bc>
   43f14:	b	43f18 <__assert_fail@plt+0x31360>
   43f18:	ldr	r0, [fp, #-608]	; 0xfffffda0
   43f1c:	ldr	r1, [fp, #-604]	; 0xfffffda4
   43f20:	subs	r0, r0, #32768	; 0x8000
   43f24:	sbc	r1, r1, #0
   43f28:	rsbs	r0, r0, #0
   43f2c:	rscs	r1, r1, #0
   43f30:	blt	44024 <__assert_fail@plt+0x3146c>
   43f34:	b	44044 <__assert_fail@plt+0x3148c>
   43f38:	ldr	r0, [fp, #-608]	; 0xfffffda0
   43f3c:	ldr	r1, [fp, #-604]	; 0xfffffda4
   43f40:	subs	r0, r0, #1
   43f44:	sbcs	r1, r1, #0
   43f48:	blt	44044 <__assert_fail@plt+0x3148c>
   43f4c:	b	43f50 <__assert_fail@plt+0x31398>
   43f50:	ldr	r0, [fp, #-608]	; 0xfffffda0
   43f54:	ldr	r1, [fp, #-604]	; 0xfffffda4
   43f58:	subs	r0, r0, #1
   43f5c:	sbc	r1, r1, #0
   43f60:	movw	r2, #32767	; 0x7fff
   43f64:	subs	r0, r2, r0
   43f68:	rscs	r1, r1, #0
   43f6c:	blt	44024 <__assert_fail@plt+0x3146c>
   43f70:	b	44044 <__assert_fail@plt+0x3148c>
   43f74:	ldr	r0, [fp, #-608]	; 0xfffffda0
   43f78:	ldr	r1, [fp, #-604]	; 0xfffffda4
   43f7c:	movw	r2, #64990	; 0xfdde
   43f80:	movt	r2, #65535	; 0xffff
   43f84:	subs	r0, r2, r0
   43f88:	mvn	r2, #0
   43f8c:	sbcs	r1, r2, r1
   43f90:	blt	44024 <__assert_fail@plt+0x3146c>
   43f94:	b	44044 <__assert_fail@plt+0x3148c>
   43f98:	b	43fa0 <__assert_fail@plt+0x313e8>
   43f9c:	b	44044 <__assert_fail@plt+0x3148c>
   43fa0:	ldr	r0, [fp, #-604]	; 0xfffffda4
   43fa4:	cmn	r0, #1
   43fa8:	bgt	44008 <__assert_fail@plt+0x31450>
   43fac:	b	43fb0 <__assert_fail@plt+0x313f8>
   43fb0:	b	43fb4 <__assert_fail@plt+0x313fc>
   43fb4:	b	43fe0 <__assert_fail@plt+0x31428>
   43fb8:	b	43fe0 <__assert_fail@plt+0x31428>
   43fbc:	ldr	r0, [fp, #-608]	; 0xfffffda0
   43fc0:	ldr	r1, [fp, #-604]	; 0xfffffda4
   43fc4:	and	r0, r0, r1
   43fc8:	cmn	r0, #1
   43fcc:	bne	43fe0 <__assert_fail@plt+0x31428>
   43fd0:	b	43fd4 <__assert_fail@plt+0x3141c>
   43fd4:	b	43fd8 <__assert_fail@plt+0x31420>
   43fd8:	b	44044 <__assert_fail@plt+0x3148c>
   43fdc:	b	44044 <__assert_fail@plt+0x3148c>
   43fe0:	ldr	r2, [fp, #-608]	; 0xfffffda0
   43fe4:	ldr	r3, [fp, #-604]	; 0xfffffda4
   43fe8:	movw	r0, #32768	; 0x8000
   43fec:	movt	r0, #65535	; 0xffff
   43ff0:	mvn	r1, #0
   43ff4:	bl	75338 <__assert_fail@plt+0x62780>
   43ff8:	subs	r0, r0, #60	; 0x3c
   43ffc:	sbcs	r1, r1, #0
   44000:	blt	44024 <__assert_fail@plt+0x3146c>
   44004:	b	44044 <__assert_fail@plt+0x3148c>
   44008:	ldr	r0, [fp, #-608]	; 0xfffffda0
   4400c:	ldr	r1, [fp, #-604]	; 0xfffffda4
   44010:	movw	r2, #547	; 0x223
   44014:	subs	r0, r0, r2
   44018:	sbcs	r1, r1, #0
   4401c:	blt	44044 <__assert_fail@plt+0x3148c>
   44020:	b	44024 <__assert_fail@plt+0x3146c>
   44024:	ldr	r0, [fp, #-608]	; 0xfffffda0
   44028:	rsb	r0, r0, r0, lsl #4
   4402c:	lsl	r0, r0, #2
   44030:	sxth	r0, r0
   44034:	asr	r1, r0, #31
   44038:	str	r0, [fp, #-1040]	; 0xfffffbf0
   4403c:	str	r1, [fp, #-1036]	; 0xfffffbf4
   44040:	b	44ce4 <__assert_fail@plt+0x3212c>
   44044:	ldr	r0, [fp, #-608]	; 0xfffffda0
   44048:	rsb	r0, r0, r0, lsl #4
   4404c:	lsl	r0, r0, #2
   44050:	sxth	r0, r0
   44054:	asr	r1, r0, #31
   44058:	str	r0, [fp, #-1040]	; 0xfffffbf0
   4405c:	str	r1, [fp, #-1036]	; 0xfffffbf4
   44060:	b	44bac <__assert_fail@plt+0x31ff4>
   44064:	b	4413c <__assert_fail@plt+0x31584>
   44068:	ldr	r0, [fp, #-604]	; 0xfffffda4
   4406c:	cmn	r0, #1
   44070:	bgt	440c4 <__assert_fail@plt+0x3150c>
   44074:	b	44078 <__assert_fail@plt+0x314c0>
   44078:	b	4407c <__assert_fail@plt+0x314c4>
   4407c:	ldr	r0, [fp, #-608]	; 0xfffffda0
   44080:	ldr	r1, [fp, #-604]	; 0xfffffda4
   44084:	movw	r2, #1092	; 0x444
   44088:	subs	r0, r0, r2
   4408c:	sbcs	r1, r1, #0
   44090:	blt	441b0 <__assert_fail@plt+0x315f8>
   44094:	b	441d0 <__assert_fail@plt+0x31618>
   44098:	ldr	r0, [fp, #-608]	; 0xfffffda0
   4409c:	ldr	r1, [fp, #-604]	; 0xfffffda4
   440a0:	mvn	r1, r1
   440a4:	mvn	r0, r0
   440a8:	movw	r2, #64443	; 0xfbbb
   440ac:	movt	r2, #65535	; 0xffff
   440b0:	subs	r0, r2, r0
   440b4:	mvn	r2, #0
   440b8:	sbcs	r1, r2, r1
   440bc:	blt	441b0 <__assert_fail@plt+0x315f8>
   440c0:	b	441d0 <__assert_fail@plt+0x31618>
   440c4:	b	440c8 <__assert_fail@plt+0x31510>
   440c8:	b	44124 <__assert_fail@plt+0x3156c>
   440cc:	b	44124 <__assert_fail@plt+0x3156c>
   440d0:	b	44124 <__assert_fail@plt+0x3156c>
   440d4:	b	440d8 <__assert_fail@plt+0x31520>
   440d8:	ldr	r0, [fp, #-608]	; 0xfffffda0
   440dc:	ldr	r1, [fp, #-604]	; 0xfffffda4
   440e0:	rsbs	r0, r0, #0
   440e4:	rscs	r1, r1, #0
   440e8:	blt	441b0 <__assert_fail@plt+0x315f8>
   440ec:	b	441d0 <__assert_fail@plt+0x31618>
   440f0:	ldr	r0, [fp, #-608]	; 0xfffffda0
   440f4:	ldr	r1, [fp, #-604]	; 0xfffffda4
   440f8:	subs	r0, r0, #1
   440fc:	sbcs	r1, r1, #0
   44100:	blt	441d0 <__assert_fail@plt+0x31618>
   44104:	b	44108 <__assert_fail@plt+0x31550>
   44108:	ldr	r0, [fp, #-608]	; 0xfffffda0
   4410c:	ldr	r1, [fp, #-604]	; 0xfffffda4
   44110:	subs	r0, r0, #1
   44114:	sbc	r1, r1, #0
   44118:	cmn	r1, #1
   4411c:	bgt	441b0 <__assert_fail@plt+0x315f8>
   44120:	b	441d0 <__assert_fail@plt+0x31618>
   44124:	ldr	r0, [fp, #-608]	; 0xfffffda0
   44128:	ldr	r1, [fp, #-604]	; 0xfffffda4
   4412c:	rsbs	r0, r0, #0
   44130:	rscs	r1, r1, #0
   44134:	blt	441b0 <__assert_fail@plt+0x315f8>
   44138:	b	441d0 <__assert_fail@plt+0x31618>
   4413c:	b	44144 <__assert_fail@plt+0x3158c>
   44140:	b	441d0 <__assert_fail@plt+0x31618>
   44144:	ldr	r0, [fp, #-604]	; 0xfffffda4
   44148:	cmn	r0, #1
   4414c:	bgt	44194 <__assert_fail@plt+0x315dc>
   44150:	b	44154 <__assert_fail@plt+0x3159c>
   44154:	b	44158 <__assert_fail@plt+0x315a0>
   44158:	b	44184 <__assert_fail@plt+0x315cc>
   4415c:	b	44184 <__assert_fail@plt+0x315cc>
   44160:	ldr	r0, [fp, #-608]	; 0xfffffda0
   44164:	ldr	r1, [fp, #-604]	; 0xfffffda4
   44168:	and	r0, r0, r1
   4416c:	cmn	r0, #1
   44170:	bne	44184 <__assert_fail@plt+0x315cc>
   44174:	b	44178 <__assert_fail@plt+0x315c0>
   44178:	b	4417c <__assert_fail@plt+0x315c4>
   4417c:	b	441b0 <__assert_fail@plt+0x315f8>
   44180:	b	441b0 <__assert_fail@plt+0x315f8>
   44184:	mov	r0, #1
   44188:	cmp	r0, #0
   4418c:	bne	441b0 <__assert_fail@plt+0x315f8>
   44190:	b	441d0 <__assert_fail@plt+0x31618>
   44194:	ldr	r0, [fp, #-608]	; 0xfffffda0
   44198:	ldr	r1, [fp, #-604]	; 0xfffffda4
   4419c:	movw	r2, #1093	; 0x445
   441a0:	subs	r0, r0, r2
   441a4:	sbcs	r1, r1, #0
   441a8:	blt	441d0 <__assert_fail@plt+0x31618>
   441ac:	b	441b0 <__assert_fail@plt+0x315f8>
   441b0:	ldr	r0, [fp, #-608]	; 0xfffffda0
   441b4:	rsb	r0, r0, r0, lsl #4
   441b8:	lsl	r0, r0, #2
   441bc:	uxth	r0, r0
   441c0:	mov	r1, #0
   441c4:	str	r1, [fp, #-1036]	; 0xfffffbf4
   441c8:	str	r0, [fp, #-1040]	; 0xfffffbf0
   441cc:	b	44ce4 <__assert_fail@plt+0x3212c>
   441d0:	ldr	r0, [fp, #-608]	; 0xfffffda0
   441d4:	rsb	r0, r0, r0, lsl #4
   441d8:	lsl	r0, r0, #2
   441dc:	uxth	r0, r0
   441e0:	mov	r1, #0
   441e4:	str	r1, [fp, #-1036]	; 0xfffffbf4
   441e8:	str	r0, [fp, #-1040]	; 0xfffffbf0
   441ec:	b	44bac <__assert_fail@plt+0x31ff4>
   441f0:	b	44528 <__assert_fail@plt+0x31970>
   441f4:	b	441f8 <__assert_fail@plt+0x31640>
   441f8:	b	442e4 <__assert_fail@plt+0x3172c>
   441fc:	ldr	r0, [fp, #-604]	; 0xfffffda4
   44200:	cmn	r0, #1
   44204:	bgt	4425c <__assert_fail@plt+0x316a4>
   44208:	b	4420c <__assert_fail@plt+0x31654>
   4420c:	b	44210 <__assert_fail@plt+0x31658>
   44210:	ldr	r0, [fp, #-608]	; 0xfffffda0
   44214:	ldr	r1, [fp, #-604]	; 0xfffffda4
   44218:	movw	r2, #8738	; 0x2222
   4421c:	movt	r2, #546	; 0x222
   44220:	subs	r0, r0, r2
   44224:	sbcs	r1, r1, #0
   44228:	blt	44370 <__assert_fail@plt+0x317b8>
   4422c:	b	4438c <__assert_fail@plt+0x317d4>
   44230:	ldr	r0, [fp, #-608]	; 0xfffffda0
   44234:	ldr	r1, [fp, #-604]	; 0xfffffda4
   44238:	mvn	r1, r1
   4423c:	mvn	r0, r0
   44240:	movw	r2, #56797	; 0xdddd
   44244:	movt	r2, #64989	; 0xfddd
   44248:	subs	r0, r2, r0
   4424c:	mvn	r2, #0
   44250:	sbcs	r1, r2, r1
   44254:	blt	44370 <__assert_fail@plt+0x317b8>
   44258:	b	4438c <__assert_fail@plt+0x317d4>
   4425c:	b	442c0 <__assert_fail@plt+0x31708>
   44260:	b	44264 <__assert_fail@plt+0x316ac>
   44264:	ldr	r0, [fp, #-608]	; 0xfffffda0
   44268:	ldr	r1, [fp, #-604]	; 0xfffffda4
   4426c:	adds	r0, r0, #-2147483648	; 0x80000000
   44270:	sbc	r1, r1, #0
   44274:	rsbs	r0, r0, #0
   44278:	rscs	r1, r1, #0
   4427c:	blt	44370 <__assert_fail@plt+0x317b8>
   44280:	b	4438c <__assert_fail@plt+0x317d4>
   44284:	ldr	r0, [fp, #-608]	; 0xfffffda0
   44288:	ldr	r1, [fp, #-604]	; 0xfffffda4
   4428c:	subs	r0, r0, #1
   44290:	sbcs	r1, r1, #0
   44294:	blt	4438c <__assert_fail@plt+0x317d4>
   44298:	b	4429c <__assert_fail@plt+0x316e4>
   4429c:	ldr	r0, [fp, #-608]	; 0xfffffda0
   442a0:	ldr	r1, [fp, #-604]	; 0xfffffda4
   442a4:	subs	r0, r0, #1
   442a8:	sbc	r1, r1, #0
   442ac:	mvn	r2, #-2147483648	; 0x80000000
   442b0:	subs	r0, r2, r0
   442b4:	rscs	r1, r1, #0
   442b8:	blt	44370 <__assert_fail@plt+0x317b8>
   442bc:	b	4438c <__assert_fail@plt+0x317d4>
   442c0:	ldr	r0, [fp, #-608]	; 0xfffffda0
   442c4:	ldr	r1, [fp, #-604]	; 0xfffffda4
   442c8:	movw	r2, #56798	; 0xddde
   442cc:	movt	r2, #64989	; 0xfddd
   442d0:	subs	r0, r2, r0
   442d4:	mvn	r2, #0
   442d8:	sbcs	r1, r2, r1
   442dc:	blt	44370 <__assert_fail@plt+0x317b8>
   442e0:	b	4438c <__assert_fail@plt+0x317d4>
   442e4:	b	442ec <__assert_fail@plt+0x31734>
   442e8:	b	4438c <__assert_fail@plt+0x317d4>
   442ec:	ldr	r0, [fp, #-604]	; 0xfffffda4
   442f0:	cmn	r0, #1
   442f4:	bgt	44350 <__assert_fail@plt+0x31798>
   442f8:	b	442fc <__assert_fail@plt+0x31744>
   442fc:	b	44300 <__assert_fail@plt+0x31748>
   44300:	b	4432c <__assert_fail@plt+0x31774>
   44304:	b	4432c <__assert_fail@plt+0x31774>
   44308:	ldr	r0, [fp, #-608]	; 0xfffffda0
   4430c:	ldr	r1, [fp, #-604]	; 0xfffffda4
   44310:	and	r0, r0, r1
   44314:	cmn	r0, #1
   44318:	bne	4432c <__assert_fail@plt+0x31774>
   4431c:	b	44320 <__assert_fail@plt+0x31768>
   44320:	b	44324 <__assert_fail@plt+0x3176c>
   44324:	b	4438c <__assert_fail@plt+0x317d4>
   44328:	b	4438c <__assert_fail@plt+0x317d4>
   4432c:	ldr	r2, [fp, #-608]	; 0xfffffda0
   44330:	ldr	r3, [fp, #-604]	; 0xfffffda4
   44334:	mov	r0, #-2147483648	; 0x80000000
   44338:	mvn	r1, #0
   4433c:	bl	75338 <__assert_fail@plt+0x62780>
   44340:	subs	r0, r0, #60	; 0x3c
   44344:	sbcs	r1, r1, #0
   44348:	blt	44370 <__assert_fail@plt+0x317b8>
   4434c:	b	4438c <__assert_fail@plt+0x317d4>
   44350:	ldr	r0, [fp, #-608]	; 0xfffffda0
   44354:	ldr	r1, [fp, #-604]	; 0xfffffda4
   44358:	movw	r2, #8739	; 0x2223
   4435c:	movt	r2, #546	; 0x222
   44360:	subs	r0, r0, r2
   44364:	sbcs	r1, r1, #0
   44368:	blt	4438c <__assert_fail@plt+0x317d4>
   4436c:	b	44370 <__assert_fail@plt+0x317b8>
   44370:	ldr	r0, [fp, #-608]	; 0xfffffda0
   44374:	rsb	r0, r0, r0, lsl #4
   44378:	lsl	r1, r0, #2
   4437c:	sbfx	r0, r0, #29, #1
   44380:	str	r0, [fp, #-1036]	; 0xfffffbf4
   44384:	str	r1, [fp, #-1040]	; 0xfffffbf0
   44388:	b	44ce4 <__assert_fail@plt+0x3212c>
   4438c:	ldr	r0, [fp, #-608]	; 0xfffffda0
   44390:	rsb	r0, r0, r0, lsl #4
   44394:	lsl	r1, r0, #2
   44398:	sbfx	r0, r0, #29, #1
   4439c:	str	r0, [fp, #-1036]	; 0xfffffbf4
   443a0:	str	r1, [fp, #-1040]	; 0xfffffbf0
   443a4:	b	44bac <__assert_fail@plt+0x31ff4>
   443a8:	b	44478 <__assert_fail@plt+0x318c0>
   443ac:	ldr	r0, [fp, #-604]	; 0xfffffda4
   443b0:	cmn	r0, #1
   443b4:	bgt	44400 <__assert_fail@plt+0x31848>
   443b8:	b	443bc <__assert_fail@plt+0x31804>
   443bc:	b	443e0 <__assert_fail@plt+0x31828>
   443c0:	ldr	r0, [fp, #-608]	; 0xfffffda0
   443c4:	ldr	r1, [fp, #-604]	; 0xfffffda4
   443c8:	movw	r2, #17476	; 0x4444
   443cc:	movt	r2, #1092	; 0x444
   443d0:	subs	r0, r0, r2
   443d4:	sbcs	r1, r1, #0
   443d8:	blt	444f0 <__assert_fail@plt+0x31938>
   443dc:	b	4450c <__assert_fail@plt+0x31954>
   443e0:	ldr	r0, [fp, #-608]	; 0xfffffda0
   443e4:	ldr	r1, [fp, #-604]	; 0xfffffda4
   443e8:	mvn	r1, r1
   443ec:	mvn	r0, r0
   443f0:	rsbs	r0, r0, #0
   443f4:	rscs	r1, r1, #0
   443f8:	blt	444f0 <__assert_fail@plt+0x31938>
   443fc:	b	4450c <__assert_fail@plt+0x31954>
   44400:	b	44404 <__assert_fail@plt+0x3184c>
   44404:	b	44460 <__assert_fail@plt+0x318a8>
   44408:	b	44460 <__assert_fail@plt+0x318a8>
   4440c:	b	44460 <__assert_fail@plt+0x318a8>
   44410:	b	44414 <__assert_fail@plt+0x3185c>
   44414:	ldr	r0, [fp, #-608]	; 0xfffffda0
   44418:	ldr	r1, [fp, #-604]	; 0xfffffda4
   4441c:	rsbs	r0, r0, #0
   44420:	rscs	r1, r1, #0
   44424:	blt	444f0 <__assert_fail@plt+0x31938>
   44428:	b	4450c <__assert_fail@plt+0x31954>
   4442c:	ldr	r0, [fp, #-608]	; 0xfffffda0
   44430:	ldr	r1, [fp, #-604]	; 0xfffffda4
   44434:	subs	r0, r0, #1
   44438:	sbcs	r1, r1, #0
   4443c:	blt	4450c <__assert_fail@plt+0x31954>
   44440:	b	44444 <__assert_fail@plt+0x3188c>
   44444:	ldr	r0, [fp, #-608]	; 0xfffffda0
   44448:	ldr	r1, [fp, #-604]	; 0xfffffda4
   4444c:	subs	r0, r0, #1
   44450:	sbc	r1, r1, #0
   44454:	cmn	r1, #1
   44458:	bgt	444f0 <__assert_fail@plt+0x31938>
   4445c:	b	4450c <__assert_fail@plt+0x31954>
   44460:	ldr	r0, [fp, #-608]	; 0xfffffda0
   44464:	ldr	r1, [fp, #-604]	; 0xfffffda4
   44468:	rsbs	r0, r0, #0
   4446c:	rscs	r1, r1, #0
   44470:	blt	444f0 <__assert_fail@plt+0x31938>
   44474:	b	4450c <__assert_fail@plt+0x31954>
   44478:	b	44480 <__assert_fail@plt+0x318c8>
   4447c:	b	4450c <__assert_fail@plt+0x31954>
   44480:	ldr	r0, [fp, #-604]	; 0xfffffda4
   44484:	cmn	r0, #1
   44488:	bgt	444d0 <__assert_fail@plt+0x31918>
   4448c:	b	44490 <__assert_fail@plt+0x318d8>
   44490:	b	44494 <__assert_fail@plt+0x318dc>
   44494:	b	444c0 <__assert_fail@plt+0x31908>
   44498:	b	444c0 <__assert_fail@plt+0x31908>
   4449c:	ldr	r0, [fp, #-608]	; 0xfffffda0
   444a0:	ldr	r1, [fp, #-604]	; 0xfffffda4
   444a4:	and	r0, r0, r1
   444a8:	cmn	r0, #1
   444ac:	bne	444c0 <__assert_fail@plt+0x31908>
   444b0:	b	444b4 <__assert_fail@plt+0x318fc>
   444b4:	b	444b8 <__assert_fail@plt+0x31900>
   444b8:	b	444f0 <__assert_fail@plt+0x31938>
   444bc:	b	444f0 <__assert_fail@plt+0x31938>
   444c0:	mov	r0, #1
   444c4:	cmp	r0, #0
   444c8:	bne	444f0 <__assert_fail@plt+0x31938>
   444cc:	b	4450c <__assert_fail@plt+0x31954>
   444d0:	ldr	r0, [fp, #-608]	; 0xfffffda0
   444d4:	ldr	r1, [fp, #-604]	; 0xfffffda4
   444d8:	movw	r2, #17477	; 0x4445
   444dc:	movt	r2, #1092	; 0x444
   444e0:	subs	r0, r0, r2
   444e4:	sbcs	r1, r1, #0
   444e8:	blt	4450c <__assert_fail@plt+0x31954>
   444ec:	b	444f0 <__assert_fail@plt+0x31938>
   444f0:	ldr	r0, [fp, #-608]	; 0xfffffda0
   444f4:	rsb	r0, r0, r0, lsl #4
   444f8:	lsl	r0, r0, #2
   444fc:	mov	r1, #0
   44500:	str	r1, [fp, #-1036]	; 0xfffffbf4
   44504:	str	r0, [fp, #-1040]	; 0xfffffbf0
   44508:	b	44ce4 <__assert_fail@plt+0x3212c>
   4450c:	ldr	r0, [fp, #-608]	; 0xfffffda0
   44510:	rsb	r0, r0, r0, lsl #4
   44514:	lsl	r0, r0, #2
   44518:	mov	r1, #0
   4451c:	str	r1, [fp, #-1036]	; 0xfffffbf4
   44520:	str	r0, [fp, #-1040]	; 0xfffffbf0
   44524:	b	44bac <__assert_fail@plt+0x31ff4>
   44528:	b	44860 <__assert_fail@plt+0x31ca8>
   4452c:	b	44530 <__assert_fail@plt+0x31978>
   44530:	b	4461c <__assert_fail@plt+0x31a64>
   44534:	ldr	r0, [fp, #-604]	; 0xfffffda4
   44538:	cmn	r0, #1
   4453c:	bgt	44594 <__assert_fail@plt+0x319dc>
   44540:	b	44544 <__assert_fail@plt+0x3198c>
   44544:	b	44548 <__assert_fail@plt+0x31990>
   44548:	ldr	r0, [fp, #-608]	; 0xfffffda0
   4454c:	ldr	r1, [fp, #-604]	; 0xfffffda4
   44550:	movw	r2, #8738	; 0x2222
   44554:	movt	r2, #546	; 0x222
   44558:	subs	r0, r0, r2
   4455c:	sbcs	r1, r1, #0
   44560:	blt	446a8 <__assert_fail@plt+0x31af0>
   44564:	b	446c4 <__assert_fail@plt+0x31b0c>
   44568:	ldr	r0, [fp, #-608]	; 0xfffffda0
   4456c:	ldr	r1, [fp, #-604]	; 0xfffffda4
   44570:	mvn	r1, r1
   44574:	mvn	r0, r0
   44578:	movw	r2, #56797	; 0xdddd
   4457c:	movt	r2, #64989	; 0xfddd
   44580:	subs	r0, r2, r0
   44584:	mvn	r2, #0
   44588:	sbcs	r1, r2, r1
   4458c:	blt	446a8 <__assert_fail@plt+0x31af0>
   44590:	b	446c4 <__assert_fail@plt+0x31b0c>
   44594:	b	445f8 <__assert_fail@plt+0x31a40>
   44598:	b	4459c <__assert_fail@plt+0x319e4>
   4459c:	ldr	r0, [fp, #-608]	; 0xfffffda0
   445a0:	ldr	r1, [fp, #-604]	; 0xfffffda4
   445a4:	adds	r0, r0, #-2147483648	; 0x80000000
   445a8:	sbc	r1, r1, #0
   445ac:	rsbs	r0, r0, #0
   445b0:	rscs	r1, r1, #0
   445b4:	blt	446a8 <__assert_fail@plt+0x31af0>
   445b8:	b	446c4 <__assert_fail@plt+0x31b0c>
   445bc:	ldr	r0, [fp, #-608]	; 0xfffffda0
   445c0:	ldr	r1, [fp, #-604]	; 0xfffffda4
   445c4:	subs	r0, r0, #1
   445c8:	sbcs	r1, r1, #0
   445cc:	blt	446c4 <__assert_fail@plt+0x31b0c>
   445d0:	b	445d4 <__assert_fail@plt+0x31a1c>
   445d4:	ldr	r0, [fp, #-608]	; 0xfffffda0
   445d8:	ldr	r1, [fp, #-604]	; 0xfffffda4
   445dc:	subs	r0, r0, #1
   445e0:	sbc	r1, r1, #0
   445e4:	mvn	r2, #-2147483648	; 0x80000000
   445e8:	subs	r0, r2, r0
   445ec:	rscs	r1, r1, #0
   445f0:	blt	446a8 <__assert_fail@plt+0x31af0>
   445f4:	b	446c4 <__assert_fail@plt+0x31b0c>
   445f8:	ldr	r0, [fp, #-608]	; 0xfffffda0
   445fc:	ldr	r1, [fp, #-604]	; 0xfffffda4
   44600:	movw	r2, #56798	; 0xddde
   44604:	movt	r2, #64989	; 0xfddd
   44608:	subs	r0, r2, r0
   4460c:	mvn	r2, #0
   44610:	sbcs	r1, r2, r1
   44614:	blt	446a8 <__assert_fail@plt+0x31af0>
   44618:	b	446c4 <__assert_fail@plt+0x31b0c>
   4461c:	b	44624 <__assert_fail@plt+0x31a6c>
   44620:	b	446c4 <__assert_fail@plt+0x31b0c>
   44624:	ldr	r0, [fp, #-604]	; 0xfffffda4
   44628:	cmn	r0, #1
   4462c:	bgt	44688 <__assert_fail@plt+0x31ad0>
   44630:	b	44634 <__assert_fail@plt+0x31a7c>
   44634:	b	44638 <__assert_fail@plt+0x31a80>
   44638:	b	44664 <__assert_fail@plt+0x31aac>
   4463c:	b	44664 <__assert_fail@plt+0x31aac>
   44640:	ldr	r0, [fp, #-608]	; 0xfffffda0
   44644:	ldr	r1, [fp, #-604]	; 0xfffffda4
   44648:	and	r0, r0, r1
   4464c:	cmn	r0, #1
   44650:	bne	44664 <__assert_fail@plt+0x31aac>
   44654:	b	44658 <__assert_fail@plt+0x31aa0>
   44658:	b	4465c <__assert_fail@plt+0x31aa4>
   4465c:	b	446c4 <__assert_fail@plt+0x31b0c>
   44660:	b	446c4 <__assert_fail@plt+0x31b0c>
   44664:	ldr	r2, [fp, #-608]	; 0xfffffda0
   44668:	ldr	r3, [fp, #-604]	; 0xfffffda4
   4466c:	mov	r0, #-2147483648	; 0x80000000
   44670:	mvn	r1, #0
   44674:	bl	75338 <__assert_fail@plt+0x62780>
   44678:	subs	r0, r0, #60	; 0x3c
   4467c:	sbcs	r1, r1, #0
   44680:	blt	446a8 <__assert_fail@plt+0x31af0>
   44684:	b	446c4 <__assert_fail@plt+0x31b0c>
   44688:	ldr	r0, [fp, #-608]	; 0xfffffda0
   4468c:	ldr	r1, [fp, #-604]	; 0xfffffda4
   44690:	movw	r2, #8739	; 0x2223
   44694:	movt	r2, #546	; 0x222
   44698:	subs	r0, r0, r2
   4469c:	sbcs	r1, r1, #0
   446a0:	blt	446c4 <__assert_fail@plt+0x31b0c>
   446a4:	b	446a8 <__assert_fail@plt+0x31af0>
   446a8:	ldr	r0, [fp, #-608]	; 0xfffffda0
   446ac:	rsb	r0, r0, r0, lsl #4
   446b0:	lsl	r1, r0, #2
   446b4:	sbfx	r0, r0, #29, #1
   446b8:	str	r0, [fp, #-1036]	; 0xfffffbf4
   446bc:	str	r1, [fp, #-1040]	; 0xfffffbf0
   446c0:	b	44ce4 <__assert_fail@plt+0x3212c>
   446c4:	ldr	r0, [fp, #-608]	; 0xfffffda0
   446c8:	rsb	r0, r0, r0, lsl #4
   446cc:	lsl	r1, r0, #2
   446d0:	sbfx	r0, r0, #29, #1
   446d4:	str	r0, [fp, #-1036]	; 0xfffffbf4
   446d8:	str	r1, [fp, #-1040]	; 0xfffffbf0
   446dc:	b	44bac <__assert_fail@plt+0x31ff4>
   446e0:	b	447b0 <__assert_fail@plt+0x31bf8>
   446e4:	ldr	r0, [fp, #-604]	; 0xfffffda4
   446e8:	cmn	r0, #1
   446ec:	bgt	44738 <__assert_fail@plt+0x31b80>
   446f0:	b	446f4 <__assert_fail@plt+0x31b3c>
   446f4:	b	44718 <__assert_fail@plt+0x31b60>
   446f8:	ldr	r0, [fp, #-608]	; 0xfffffda0
   446fc:	ldr	r1, [fp, #-604]	; 0xfffffda4
   44700:	movw	r2, #17476	; 0x4444
   44704:	movt	r2, #1092	; 0x444
   44708:	subs	r0, r0, r2
   4470c:	sbcs	r1, r1, #0
   44710:	blt	44828 <__assert_fail@plt+0x31c70>
   44714:	b	44844 <__assert_fail@plt+0x31c8c>
   44718:	ldr	r0, [fp, #-608]	; 0xfffffda0
   4471c:	ldr	r1, [fp, #-604]	; 0xfffffda4
   44720:	mvn	r1, r1
   44724:	mvn	r0, r0
   44728:	rsbs	r0, r0, #0
   4472c:	rscs	r1, r1, #0
   44730:	blt	44828 <__assert_fail@plt+0x31c70>
   44734:	b	44844 <__assert_fail@plt+0x31c8c>
   44738:	b	4473c <__assert_fail@plt+0x31b84>
   4473c:	b	44798 <__assert_fail@plt+0x31be0>
   44740:	b	44798 <__assert_fail@plt+0x31be0>
   44744:	b	44798 <__assert_fail@plt+0x31be0>
   44748:	b	4474c <__assert_fail@plt+0x31b94>
   4474c:	ldr	r0, [fp, #-608]	; 0xfffffda0
   44750:	ldr	r1, [fp, #-604]	; 0xfffffda4
   44754:	rsbs	r0, r0, #0
   44758:	rscs	r1, r1, #0
   4475c:	blt	44828 <__assert_fail@plt+0x31c70>
   44760:	b	44844 <__assert_fail@plt+0x31c8c>
   44764:	ldr	r0, [fp, #-608]	; 0xfffffda0
   44768:	ldr	r1, [fp, #-604]	; 0xfffffda4
   4476c:	subs	r0, r0, #1
   44770:	sbcs	r1, r1, #0
   44774:	blt	44844 <__assert_fail@plt+0x31c8c>
   44778:	b	4477c <__assert_fail@plt+0x31bc4>
   4477c:	ldr	r0, [fp, #-608]	; 0xfffffda0
   44780:	ldr	r1, [fp, #-604]	; 0xfffffda4
   44784:	subs	r0, r0, #1
   44788:	sbc	r1, r1, #0
   4478c:	cmn	r1, #1
   44790:	bgt	44828 <__assert_fail@plt+0x31c70>
   44794:	b	44844 <__assert_fail@plt+0x31c8c>
   44798:	ldr	r0, [fp, #-608]	; 0xfffffda0
   4479c:	ldr	r1, [fp, #-604]	; 0xfffffda4
   447a0:	rsbs	r0, r0, #0
   447a4:	rscs	r1, r1, #0
   447a8:	blt	44828 <__assert_fail@plt+0x31c70>
   447ac:	b	44844 <__assert_fail@plt+0x31c8c>
   447b0:	b	447b8 <__assert_fail@plt+0x31c00>
   447b4:	b	44844 <__assert_fail@plt+0x31c8c>
   447b8:	ldr	r0, [fp, #-604]	; 0xfffffda4
   447bc:	cmn	r0, #1
   447c0:	bgt	44808 <__assert_fail@plt+0x31c50>
   447c4:	b	447c8 <__assert_fail@plt+0x31c10>
   447c8:	b	447cc <__assert_fail@plt+0x31c14>
   447cc:	b	447f8 <__assert_fail@plt+0x31c40>
   447d0:	b	447f8 <__assert_fail@plt+0x31c40>
   447d4:	ldr	r0, [fp, #-608]	; 0xfffffda0
   447d8:	ldr	r1, [fp, #-604]	; 0xfffffda4
   447dc:	and	r0, r0, r1
   447e0:	cmn	r0, #1
   447e4:	bne	447f8 <__assert_fail@plt+0x31c40>
   447e8:	b	447ec <__assert_fail@plt+0x31c34>
   447ec:	b	447f0 <__assert_fail@plt+0x31c38>
   447f0:	b	44828 <__assert_fail@plt+0x31c70>
   447f4:	b	44828 <__assert_fail@plt+0x31c70>
   447f8:	mov	r0, #1
   447fc:	cmp	r0, #0
   44800:	bne	44828 <__assert_fail@plt+0x31c70>
   44804:	b	44844 <__assert_fail@plt+0x31c8c>
   44808:	ldr	r0, [fp, #-608]	; 0xfffffda0
   4480c:	ldr	r1, [fp, #-604]	; 0xfffffda4
   44810:	movw	r2, #17477	; 0x4445
   44814:	movt	r2, #1092	; 0x444
   44818:	subs	r0, r0, r2
   4481c:	sbcs	r1, r1, #0
   44820:	blt	44844 <__assert_fail@plt+0x31c8c>
   44824:	b	44828 <__assert_fail@plt+0x31c70>
   44828:	ldr	r0, [fp, #-608]	; 0xfffffda0
   4482c:	rsb	r0, r0, r0, lsl #4
   44830:	lsl	r0, r0, #2
   44834:	mov	r1, #0
   44838:	str	r1, [fp, #-1036]	; 0xfffffbf4
   4483c:	str	r0, [fp, #-1040]	; 0xfffffbf0
   44840:	b	44ce4 <__assert_fail@plt+0x3212c>
   44844:	ldr	r0, [fp, #-608]	; 0xfffffda0
   44848:	rsb	r0, r0, r0, lsl #4
   4484c:	lsl	r0, r0, #2
   44850:	mov	r1, #0
   44854:	str	r1, [fp, #-1036]	; 0xfffffbf4
   44858:	str	r0, [fp, #-1040]	; 0xfffffbf0
   4485c:	b	44bac <__assert_fail@plt+0x31ff4>
   44860:	b	44864 <__assert_fail@plt+0x31cac>
   44864:	b	44948 <__assert_fail@plt+0x31d90>
   44868:	ldr	r0, [fp, #-604]	; 0xfffffda4
   4486c:	cmn	r0, #1
   44870:	bgt	448d4 <__assert_fail@plt+0x31d1c>
   44874:	b	44878 <__assert_fail@plt+0x31cc0>
   44878:	b	4487c <__assert_fail@plt+0x31cc4>
   4487c:	ldr	r0, [fp, #-608]	; 0xfffffda0
   44880:	ldr	r1, [fp, #-604]	; 0xfffffda4
   44884:	movw	r2, #8738	; 0x2222
   44888:	movt	r2, #8738	; 0x2222
   4488c:	subs	r0, r0, r2
   44890:	movw	r2, #8738	; 0x2222
   44894:	movt	r2, #546	; 0x222
   44898:	sbcs	r1, r1, r2
   4489c:	blt	449d0 <__assert_fail@plt+0x31e18>
   448a0:	b	449f4 <__assert_fail@plt+0x31e3c>
   448a4:	ldr	r0, [fp, #-608]	; 0xfffffda0
   448a8:	ldr	r1, [fp, #-604]	; 0xfffffda4
   448ac:	mvn	r1, r1
   448b0:	mvn	r0, r0
   448b4:	movw	r2, #56797	; 0xdddd
   448b8:	movt	r2, #56797	; 0xdddd
   448bc:	subs	r0, r2, r0
   448c0:	movw	r2, #56797	; 0xdddd
   448c4:	movt	r2, #64989	; 0xfddd
   448c8:	sbcs	r1, r2, r1
   448cc:	blt	449d0 <__assert_fail@plt+0x31e18>
   448d0:	b	449f4 <__assert_fail@plt+0x31e3c>
   448d4:	b	44920 <__assert_fail@plt+0x31d68>
   448d8:	b	448dc <__assert_fail@plt+0x31d24>
   448dc:	ldr	r0, [fp, #-608]	; 0xfffffda0
   448e0:	ldr	r1, [fp, #-604]	; 0xfffffda4
   448e4:	add	r1, r1, #-2147483648	; 0x80000000
   448e8:	rsbs	r0, r0, #0
   448ec:	rscs	r1, r1, #0
   448f0:	blt	449d0 <__assert_fail@plt+0x31e18>
   448f4:	b	449f4 <__assert_fail@plt+0x31e3c>
   448f8:	ldr	r0, [fp, #-608]	; 0xfffffda0
   448fc:	ldr	r1, [fp, #-604]	; 0xfffffda4
   44900:	subs	r0, r0, #1
   44904:	sbcs	r1, r1, #0
   44908:	blt	449f4 <__assert_fail@plt+0x31e3c>
   4490c:	b	44910 <__assert_fail@plt+0x31d58>
   44910:	mov	r0, #0
   44914:	cmp	r0, #0
   44918:	bne	449d0 <__assert_fail@plt+0x31e18>
   4491c:	b	449f4 <__assert_fail@plt+0x31e3c>
   44920:	ldr	r0, [fp, #-608]	; 0xfffffda0
   44924:	ldr	r1, [fp, #-604]	; 0xfffffda4
   44928:	movw	r2, #56798	; 0xddde
   4492c:	movt	r2, #56797	; 0xdddd
   44930:	subs	r0, r2, r0
   44934:	movw	r2, #56797	; 0xdddd
   44938:	movt	r2, #64989	; 0xfddd
   4493c:	sbcs	r1, r2, r1
   44940:	blt	449d0 <__assert_fail@plt+0x31e18>
   44944:	b	449f4 <__assert_fail@plt+0x31e3c>
   44948:	b	44950 <__assert_fail@plt+0x31d98>
   4494c:	b	449f4 <__assert_fail@plt+0x31e3c>
   44950:	ldr	r0, [fp, #-604]	; 0xfffffda4
   44954:	cmn	r0, #1
   44958:	bgt	449a8 <__assert_fail@plt+0x31df0>
   4495c:	b	44960 <__assert_fail@plt+0x31da8>
   44960:	ldr	r0, [fp, #-608]	; 0xfffffda0
   44964:	ldr	r1, [fp, #-604]	; 0xfffffda4
   44968:	and	r0, r0, r1
   4496c:	cmn	r0, #1
   44970:	bne	44984 <__assert_fail@plt+0x31dcc>
   44974:	b	44978 <__assert_fail@plt+0x31dc0>
   44978:	b	4497c <__assert_fail@plt+0x31dc4>
   4497c:	b	449f4 <__assert_fail@plt+0x31e3c>
   44980:	b	449f4 <__assert_fail@plt+0x31e3c>
   44984:	ldr	r2, [fp, #-608]	; 0xfffffda0
   44988:	ldr	r3, [fp, #-604]	; 0xfffffda4
   4498c:	mov	r0, #0
   44990:	mov	r1, #-2147483648	; 0x80000000
   44994:	bl	75338 <__assert_fail@plt+0x62780>
   44998:	subs	r0, r0, #60	; 0x3c
   4499c:	sbcs	r1, r1, #0
   449a0:	blt	449d0 <__assert_fail@plt+0x31e18>
   449a4:	b	449f4 <__assert_fail@plt+0x31e3c>
   449a8:	ldr	r0, [fp, #-608]	; 0xfffffda0
   449ac:	ldr	r1, [fp, #-604]	; 0xfffffda4
   449b0:	movw	r2, #8739	; 0x2223
   449b4:	movt	r2, #8738	; 0x2222
   449b8:	subs	r0, r0, r2
   449bc:	movw	r2, #8738	; 0x2222
   449c0:	movt	r2, #546	; 0x222
   449c4:	sbcs	r1, r1, r2
   449c8:	blt	449f4 <__assert_fail@plt+0x31e3c>
   449cc:	b	449d0 <__assert_fail@plt+0x31e18>
   449d0:	ldr	r0, [fp, #-608]	; 0xfffffda0
   449d4:	ldr	r1, [fp, #-604]	; 0xfffffda4
   449d8:	mov	r2, #60	; 0x3c
   449dc:	umull	r0, r2, r0, r2
   449e0:	rsb	r1, r1, r1, lsl #4
   449e4:	add	r1, r2, r1, lsl #2
   449e8:	str	r0, [fp, #-1040]	; 0xfffffbf0
   449ec:	str	r1, [fp, #-1036]	; 0xfffffbf4
   449f0:	b	44ce4 <__assert_fail@plt+0x3212c>
   449f4:	ldr	r0, [fp, #-608]	; 0xfffffda0
   449f8:	ldr	r1, [fp, #-604]	; 0xfffffda4
   449fc:	mov	r2, #60	; 0x3c
   44a00:	umull	r0, r2, r0, r2
   44a04:	rsb	r1, r1, r1, lsl #4
   44a08:	add	r1, r2, r1, lsl #2
   44a0c:	str	r0, [fp, #-1040]	; 0xfffffbf0
   44a10:	str	r1, [fp, #-1036]	; 0xfffffbf4
   44a14:	b	44bac <__assert_fail@plt+0x31ff4>
   44a18:	b	44ae8 <__assert_fail@plt+0x31f30>
   44a1c:	ldr	r0, [fp, #-604]	; 0xfffffda4
   44a20:	cmn	r0, #1
   44a24:	bgt	44a70 <__assert_fail@plt+0x31eb8>
   44a28:	b	44a2c <__assert_fail@plt+0x31e74>
   44a2c:	b	44a58 <__assert_fail@plt+0x31ea0>
   44a30:	ldr	r0, [fp, #-608]	; 0xfffffda0
   44a34:	ldr	r1, [fp, #-604]	; 0xfffffda4
   44a38:	movw	r2, #17476	; 0x4444
   44a3c:	movt	r2, #17476	; 0x4444
   44a40:	subs	r0, r0, r2
   44a44:	movw	r2, #17476	; 0x4444
   44a48:	movt	r2, #1092	; 0x444
   44a4c:	sbcs	r1, r1, r2
   44a50:	bcc	44b68 <__assert_fail@plt+0x31fb0>
   44a54:	b	44b8c <__assert_fail@plt+0x31fd4>
   44a58:	ldr	r0, [fp, #-608]	; 0xfffffda0
   44a5c:	ldr	r1, [fp, #-604]	; 0xfffffda4
   44a60:	and	r0, r0, r1
   44a64:	cmn	r0, #1
   44a68:	bne	44b68 <__assert_fail@plt+0x31fb0>
   44a6c:	b	44b8c <__assert_fail@plt+0x31fd4>
   44a70:	b	44a74 <__assert_fail@plt+0x31ebc>
   44a74:	b	44ad0 <__assert_fail@plt+0x31f18>
   44a78:	b	44ad0 <__assert_fail@plt+0x31f18>
   44a7c:	b	44ad0 <__assert_fail@plt+0x31f18>
   44a80:	b	44a84 <__assert_fail@plt+0x31ecc>
   44a84:	ldr	r0, [fp, #-608]	; 0xfffffda0
   44a88:	ldr	r1, [fp, #-604]	; 0xfffffda4
   44a8c:	rsbs	r0, r0, #0
   44a90:	rscs	r1, r1, #0
   44a94:	blt	44b68 <__assert_fail@plt+0x31fb0>
   44a98:	b	44b8c <__assert_fail@plt+0x31fd4>
   44a9c:	ldr	r0, [fp, #-608]	; 0xfffffda0
   44aa0:	ldr	r1, [fp, #-604]	; 0xfffffda4
   44aa4:	subs	r0, r0, #1
   44aa8:	sbcs	r1, r1, #0
   44aac:	blt	44b8c <__assert_fail@plt+0x31fd4>
   44ab0:	b	44ab4 <__assert_fail@plt+0x31efc>
   44ab4:	ldr	r0, [fp, #-608]	; 0xfffffda0
   44ab8:	ldr	r1, [fp, #-604]	; 0xfffffda4
   44abc:	subs	r0, r0, #1
   44ac0:	sbc	r1, r1, #0
   44ac4:	cmn	r1, #1
   44ac8:	bgt	44b68 <__assert_fail@plt+0x31fb0>
   44acc:	b	44b8c <__assert_fail@plt+0x31fd4>
   44ad0:	ldr	r0, [fp, #-608]	; 0xfffffda0
   44ad4:	ldr	r1, [fp, #-604]	; 0xfffffda4
   44ad8:	rsbs	r0, r0, #0
   44adc:	rscs	r1, r1, #0
   44ae0:	blt	44b68 <__assert_fail@plt+0x31fb0>
   44ae4:	b	44b8c <__assert_fail@plt+0x31fd4>
   44ae8:	b	44af0 <__assert_fail@plt+0x31f38>
   44aec:	b	44b8c <__assert_fail@plt+0x31fd4>
   44af0:	ldr	r0, [fp, #-604]	; 0xfffffda4
   44af4:	cmn	r0, #1
   44af8:	bgt	44b40 <__assert_fail@plt+0x31f88>
   44afc:	b	44b00 <__assert_fail@plt+0x31f48>
   44b00:	b	44b04 <__assert_fail@plt+0x31f4c>
   44b04:	b	44b30 <__assert_fail@plt+0x31f78>
   44b08:	b	44b30 <__assert_fail@plt+0x31f78>
   44b0c:	ldr	r0, [fp, #-608]	; 0xfffffda0
   44b10:	ldr	r1, [fp, #-604]	; 0xfffffda4
   44b14:	and	r0, r0, r1
   44b18:	cmn	r0, #1
   44b1c:	bne	44b30 <__assert_fail@plt+0x31f78>
   44b20:	b	44b24 <__assert_fail@plt+0x31f6c>
   44b24:	b	44b28 <__assert_fail@plt+0x31f70>
   44b28:	b	44b68 <__assert_fail@plt+0x31fb0>
   44b2c:	b	44b68 <__assert_fail@plt+0x31fb0>
   44b30:	mov	r0, #1
   44b34:	cmp	r0, #0
   44b38:	bne	44b68 <__assert_fail@plt+0x31fb0>
   44b3c:	b	44b8c <__assert_fail@plt+0x31fd4>
   44b40:	ldr	r0, [fp, #-608]	; 0xfffffda0
   44b44:	ldr	r1, [fp, #-604]	; 0xfffffda4
   44b48:	movw	r2, #17477	; 0x4445
   44b4c:	movt	r2, #17476	; 0x4444
   44b50:	subs	r0, r0, r2
   44b54:	movw	r2, #17476	; 0x4444
   44b58:	movt	r2, #1092	; 0x444
   44b5c:	sbcs	r1, r1, r2
   44b60:	bcc	44b8c <__assert_fail@plt+0x31fd4>
   44b64:	b	44b68 <__assert_fail@plt+0x31fb0>
   44b68:	ldr	r0, [fp, #-608]	; 0xfffffda0
   44b6c:	ldr	r1, [fp, #-604]	; 0xfffffda4
   44b70:	mov	r2, #60	; 0x3c
   44b74:	umull	r0, r2, r0, r2
   44b78:	rsb	r1, r1, r1, lsl #4
   44b7c:	add	r1, r2, r1, lsl #2
   44b80:	str	r0, [fp, #-1040]	; 0xfffffbf0
   44b84:	str	r1, [fp, #-1036]	; 0xfffffbf4
   44b88:	b	44ce4 <__assert_fail@plt+0x3212c>
   44b8c:	ldr	r0, [fp, #-608]	; 0xfffffda0
   44b90:	ldr	r1, [fp, #-604]	; 0xfffffda4
   44b94:	mov	r2, #60	; 0x3c
   44b98:	umull	r0, r2, r0, r2
   44b9c:	rsb	r1, r1, r1, lsl #4
   44ba0:	add	r1, r2, r1, lsl #2
   44ba4:	str	r0, [fp, #-1040]	; 0xfffffbf0
   44ba8:	str	r1, [fp, #-1036]	; 0xfffffbf4
   44bac:	ldr	r0, [fp, #-1032]	; 0xfffffbf8
   44bb0:	ldr	r1, [fp, #-1028]	; 0xfffffbfc
   44bb4:	ldr	r2, [fp, #-1040]	; 0xfffffbf0
   44bb8:	ldr	r3, [fp, #-1036]	; 0xfffffbf4
   44bbc:	mov	ip, #0
   44bc0:	cmn	r1, #1
   44bc4:	mov	lr, ip
   44bc8:	movwgt	lr, #1
   44bcc:	adds	r0, r0, r2
   44bd0:	adc	r1, r1, r3
   44bd4:	cmn	r1, #1
   44bd8:	mov	r2, ip
   44bdc:	movwgt	r2, #1
   44be0:	subs	r2, lr, r2
   44be4:	movwne	r2, #1
   44be8:	cmn	r3, #1
   44bec:	movwgt	ip, #1
   44bf0:	sub	r3, lr, ip
   44bf4:	clz	r3, r3
   44bf8:	lsr	r3, r3, #5
   44bfc:	and	r2, r3, r2
   44c00:	str	r0, [fp, #-1048]	; 0xfffffbe8
   44c04:	str	r1, [fp, #-1044]	; 0xfffffbec
   44c08:	tst	r2, #1
   44c0c:	bne	44ce4 <__assert_fail@plt+0x3212c>
   44c10:	ldr	r0, [fp, #-1048]	; 0xfffffbe8
   44c14:	ldr	r1, [fp, #-1044]	; 0xfffffbec
   44c18:	ldr	r2, [fp, #-600]	; 0xfffffda8
   44c1c:	ldr	r3, [fp, #-596]	; 0xfffffdac
   44c20:	mov	ip, #0
   44c24:	cmn	r1, #1
   44c28:	mov	lr, ip
   44c2c:	movwgt	lr, #1
   44c30:	adds	r0, r0, r2
   44c34:	adc	r1, r1, r3
   44c38:	cmn	r1, #1
   44c3c:	mov	r2, ip
   44c40:	movwgt	r2, #1
   44c44:	subs	r2, lr, r2
   44c48:	movwne	r2, #1
   44c4c:	cmn	r3, #1
   44c50:	movwgt	ip, #1
   44c54:	sub	r3, lr, ip
   44c58:	clz	r3, r3
   44c5c:	lsr	r3, r3, #5
   44c60:	and	r2, r3, r2
   44c64:	str	r0, [fp, #-1056]	; 0xfffffbe0
   44c68:	str	r1, [fp, #-1052]	; 0xfffffbe4
   44c6c:	tst	r2, #1
   44c70:	bne	44ce4 <__assert_fail@plt+0x3212c>
   44c74:	ldr	r0, [fp, #-1056]	; 0xfffffbe0
   44c78:	ldr	r1, [fp, #-1052]	; 0xfffffbe4
   44c7c:	ldr	r2, [fp, #-1016]	; 0xfffffc08
   44c80:	asr	r3, r2, #31
   44c84:	mov	ip, #0
   44c88:	cmn	r1, #1
   44c8c:	mov	lr, ip
   44c90:	movwgt	lr, #1
   44c94:	adds	r0, r0, r2
   44c98:	adc	r1, r1, r2, asr #31
   44c9c:	cmn	r1, #1
   44ca0:	mov	r2, ip
   44ca4:	movwgt	r2, #1
   44ca8:	subs	r2, lr, r2
   44cac:	movwne	r2, #1
   44cb0:	cmn	r3, #1
   44cb4:	movwgt	ip, #1
   44cb8:	sub	r3, lr, ip
   44cbc:	clz	r3, r3
   44cc0:	lsr	r3, r3, #5
   44cc4:	and	r2, r3, r2
   44cc8:	eor	r1, r1, r0, asr #31
   44ccc:	cmp	r1, #0
   44cd0:	movwne	r1, #1
   44cd4:	orr	r1, r2, r1
   44cd8:	str	r0, [fp, #-1060]	; 0xfffffbdc
   44cdc:	tst	r1, #1
   44ce0:	beq	44d08 <__assert_fail@plt+0x32150>
   44ce4:	sub	r0, fp, #736	; 0x2e0
   44ce8:	bl	3d73c <__assert_fail@plt+0x2ab84>
   44cec:	tst	r0, #1
   44cf0:	beq	44d04 <__assert_fail@plt+0x3214c>
   44cf4:	movw	r0, #46945	; 0xb761
   44cf8:	movt	r0, #7
   44cfc:	bl	12864 <gettext@plt>
   44d00:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   44d04:	b	45058 <__assert_fail@plt+0x324a0>
   44d08:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   44d0c:	ldr	r1, [fp, #-20]	; 0xffffffec
   44d10:	str	r0, [r1]
   44d14:	ldr	r0, [fp, #-1012]	; 0xfffffc0c
   44d18:	ldr	r1, [fp, #-20]	; 0xffffffec
   44d1c:	str	r0, [r1, #4]
   44d20:	sub	r0, fp, #736	; 0x2e0
   44d24:	bl	3d73c <__assert_fail@plt+0x2ab84>
   44d28:	tst	r0, #1
   44d2c:	beq	44e30 <__assert_fail@plt+0x32278>
   44d30:	ldr	r0, [fp, #-616]	; 0xfffffd98
   44d34:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   44d38:	ldr	r2, [fp, #-608]	; 0xfffffda0
   44d3c:	ldr	r3, [fp, #-604]	; 0xfffffda4
   44d40:	orr	r1, r1, r3
   44d44:	orr	r0, r0, r2
   44d48:	ldr	r2, [fp, #-596]	; 0xfffffdac
   44d4c:	ldr	r3, [fp, #-600]	; 0xfffffda8
   44d50:	orr	r0, r0, r3
   44d54:	orr	r1, r1, r2
   44d58:	ldr	r2, [fp, #-592]	; 0xfffffdb0
   44d5c:	orr	r1, r1, r2, asr #31
   44d60:	orr	r0, r0, r2
   44d64:	orr	r0, r0, r1
   44d68:	cmp	r0, #0
   44d6c:	beq	44e30 <__assert_fail@plt+0x32278>
   44d70:	b	44d74 <__assert_fail@plt+0x321bc>
   44d74:	movw	r0, #46993	; 0xb791
   44d78:	movt	r0, #7
   44d7c:	bl	12864 <gettext@plt>
   44d80:	ldr	r2, [fp, #-616]	; 0xfffffd98
   44d84:	ldr	r3, [fp, #-612]	; 0xfffffd9c
   44d88:	ldr	r1, [fp, #-608]	; 0xfffffda0
   44d8c:	ldr	ip, [fp, #-604]	; 0xfffffda4
   44d90:	ldr	lr, [fp, #-600]	; 0xfffffda8
   44d94:	ldr	r4, [fp, #-596]	; 0xfffffdac
   44d98:	ldr	r5, [fp, #-592]	; 0xfffffdb0
   44d9c:	mov	r6, sp
   44da0:	str	r5, [r6, #16]
   44da4:	str	r4, [r6, #12]
   44da8:	str	lr, [r6, #8]
   44dac:	str	ip, [r6, #4]
   44db0:	str	r1, [r6]
   44db4:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   44db8:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   44dbc:	asr	r1, r0, #31
   44dc0:	str	r0, [fp, #-1072]	; 0xfffffbd0
   44dc4:	str	r1, [fp, #-1068]	; 0xfffffbd4
   44dc8:	movw	r0, #47069	; 0xb7dd
   44dcc:	movt	r0, #7
   44dd0:	bl	12864 <gettext@plt>
   44dd4:	ldr	r2, [fp, #-1072]	; 0xfffffbd0
   44dd8:	ldr	r3, [fp, #-1068]	; 0xfffffbd4
   44ddc:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   44de0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   44de4:	cmn	r0, #1
   44de8:	beq	44e2c <__assert_fail@plt+0x32274>
   44dec:	ldr	r0, [fp, #-380]	; 0xfffffe84
   44df0:	ldr	r1, [fp, #-20]	; 0xffffffec
   44df4:	sub	lr, fp, #1024	; 0x400
   44df8:	sub	r2, lr, #92	; 0x5c
   44dfc:	bl	6dbd0 <__assert_fail@plt+0x5b018>
   44e00:	movw	r1, #0
   44e04:	cmp	r0, r1
   44e08:	beq	44e2c <__assert_fail@plt+0x32274>
   44e0c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   44e10:	ldr	r1, [fp, #-1084]	; 0xfffffbc4
   44e14:	cmp	r0, r1
   44e18:	beq	44e2c <__assert_fail@plt+0x32274>
   44e1c:	movw	r0, #47104	; 0xb800
   44e20:	movt	r0, #7
   44e24:	bl	12864 <gettext@plt>
   44e28:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   44e2c:	b	44e30 <__assert_fail@plt+0x32278>
   44e30:	b	44e34 <__assert_fail@plt+0x3227c>
   44e34:	sub	r0, fp, #736	; 0x2e0
   44e38:	bl	3d73c <__assert_fail@plt+0x2ab84>
   44e3c:	tst	r0, #1
   44e40:	beq	45050 <__assert_fail@plt+0x32498>
   44e44:	ldr	r0, [fp, #12]
   44e48:	movw	r1, #0
   44e4c:	cmp	r0, r1
   44e50:	bne	44e68 <__assert_fail@plt+0x322b0>
   44e54:	movw	r0, #47165	; 0xb83d
   44e58:	movt	r0, #7
   44e5c:	bl	12864 <gettext@plt>
   44e60:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   44e64:	b	44eac <__assert_fail@plt+0x322f4>
   44e68:	ldr	r0, [fp, #12]
   44e6c:	movw	r1, #45583	; 0xb20f
   44e70:	movt	r1, #7
   44e74:	bl	124c8 <strcmp@plt>
   44e78:	cmp	r0, #0
   44e7c:	bne	44e94 <__assert_fail@plt+0x322dc>
   44e80:	movw	r0, #47191	; 0xb857
   44e84:	movt	r0, #7
   44e88:	bl	12864 <gettext@plt>
   44e8c:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   44e90:	b	44ea8 <__assert_fail@plt+0x322f0>
   44e94:	movw	r0, #47217	; 0xb871
   44e98:	movt	r0, #7
   44e9c:	bl	12864 <gettext@plt>
   44ea0:	ldr	r1, [fp, #12]
   44ea4:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   44ea8:	b	44eac <__assert_fail@plt+0x322f4>
   44eac:	ldr	r0, [fp, #-20]	; 0xffffffec
   44eb0:	ldr	r0, [r0]
   44eb4:	asr	r1, r0, #31
   44eb8:	str	r0, [fp, #-1128]	; 0xfffffb98
   44ebc:	str	r1, [fp, #-1124]	; 0xfffffb9c
   44ec0:	ldr	r0, [fp, #-20]	; 0xffffffec
   44ec4:	ldr	r0, [r0, #4]
   44ec8:	str	r0, [fp, #-1132]	; 0xfffffb94
   44ecc:	movw	r0, #47254	; 0xb896
   44ed0:	movt	r0, #7
   44ed4:	bl	12864 <gettext@plt>
   44ed8:	ldr	r2, [fp, #-1128]	; 0xfffffb98
   44edc:	ldr	r3, [fp, #-1124]	; 0xfffffb9c
   44ee0:	ldr	r1, [fp, #-1132]	; 0xfffffb94
   44ee4:	mov	ip, sp
   44ee8:	str	r1, [ip]
   44eec:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   44ef0:	ldr	r0, [fp, #-20]	; 0xffffffec
   44ef4:	sub	lr, fp, #1024	; 0x400
   44ef8:	sub	r1, lr, #152	; 0x98
   44efc:	bl	12498 <gmtime_r@plt>
   44f00:	movw	r1, #0
   44f04:	cmp	r0, r1
   44f08:	movw	r0, #0
   44f0c:	movne	r0, #1
   44f10:	mvn	r1, #0
   44f14:	eor	r0, r0, r1
   44f18:	eor	r0, r0, r1
   44f1c:	and	r0, r0, #1
   44f20:	strb	r0, [fp, #-1221]	; 0xfffffb3b
   44f24:	ldrb	r0, [fp, #-1221]	; 0xfffffb3b
   44f28:	tst	r0, #1
   44f2c:	beq	44f70 <__assert_fail@plt+0x323b8>
   44f30:	movw	r0, #47288	; 0xb8b8
   44f34:	movt	r0, #7
   44f38:	bl	12864 <gettext@plt>
   44f3c:	sub	r2, fp, #247	; 0xf7
   44f40:	sub	lr, fp, #1024	; 0x400
   44f44:	sub	r1, lr, #152	; 0x98
   44f48:	str	r0, [sp, #44]	; 0x2c
   44f4c:	mov	r0, r1
   44f50:	movw	r1, #0
   44f54:	movw	r3, #100	; 0x64
   44f58:	bl	46360 <__assert_fail@plt+0x337a8>
   44f5c:	ldr	r1, [sp, #44]	; 0x2c
   44f60:	str	r0, [sp, #40]	; 0x28
   44f64:	mov	r0, r1
   44f68:	ldr	r1, [sp, #40]	; 0x28
   44f6c:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   44f70:	ldr	r0, [fp, #-380]	; 0xfffffe84
   44f74:	ldr	r1, [fp, #-20]	; 0xffffffec
   44f78:	sub	lr, fp, #1024	; 0x400
   44f7c:	sub	r2, lr, #196	; 0xc4
   44f80:	bl	6dbd0 <__assert_fail@plt+0x5b018>
   44f84:	movw	r1, #0
   44f88:	cmp	r0, r1
   44f8c:	beq	4504c <__assert_fail@plt+0x32494>
   44f90:	movw	r0, #1
   44f94:	strb	r0, [fp, #-1222]	; 0xfffffb3a
   44f98:	ldr	r0, [fp, #-1184]	; 0xfffffb60
   44f9c:	str	r0, [fp, #-1228]	; 0xfffffb34
   44fa0:	ldrb	r0, [fp, #-1222]	; 0xfffffb3a
   44fa4:	tst	r0, #1
   44fa8:	beq	45008 <__assert_fail@plt+0x32450>
   44fac:	movw	r0, #47305	; 0xb8c9
   44fb0:	movt	r0, #7
   44fb4:	bl	12864 <gettext@plt>
   44fb8:	sub	r2, fp, #247	; 0xf7
   44fbc:	sub	lr, fp, #1024	; 0x400
   44fc0:	sub	r1, lr, #196	; 0xc4
   44fc4:	str	r0, [sp, #36]	; 0x24
   44fc8:	mov	r0, r1
   44fcc:	movw	r1, #0
   44fd0:	movw	r3, #100	; 0x64
   44fd4:	bl	46360 <__assert_fail@plt+0x337a8>
   44fd8:	sub	r1, fp, #147	; 0x93
   44fdc:	ldr	r2, [fp, #-1228]	; 0xfffffb34
   44fe0:	str	r0, [sp, #32]
   44fe4:	mov	r0, r2
   44fe8:	bl	45220 <__assert_fail@plt+0x32668>
   44fec:	ldr	r1, [sp, #36]	; 0x24
   44ff0:	str	r0, [sp, #28]
   44ff4:	mov	r0, r1
   44ff8:	ldr	r1, [sp, #32]
   44ffc:	ldr	r2, [sp, #28]
   45000:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   45004:	b	45048 <__assert_fail@plt+0x32490>
   45008:	movw	r0, #47324	; 0xb8dc
   4500c:	movt	r0, #7
   45010:	bl	12864 <gettext@plt>
   45014:	sub	r2, fp, #247	; 0xf7
   45018:	sub	lr, fp, #1024	; 0x400
   4501c:	sub	r1, lr, #196	; 0xc4
   45020:	str	r0, [sp, #24]
   45024:	mov	r0, r1
   45028:	movw	r1, #0
   4502c:	movw	r3, #100	; 0x64
   45030:	bl	46360 <__assert_fail@plt+0x337a8>
   45034:	ldr	r1, [sp, #24]
   45038:	str	r0, [sp, #20]
   4503c:	mov	r0, r1
   45040:	ldr	r1, [sp, #20]
   45044:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   45048:	b	4504c <__assert_fail@plt+0x32494>
   4504c:	b	45050 <__assert_fail@plt+0x32498>
   45050:	movw	r0, #1
   45054:	strb	r0, [fp, #-248]	; 0xffffff08
   45058:	ldr	r0, [fp, #-380]	; 0xfffffe84
   4505c:	ldr	r1, [fp, #8]
   45060:	cmp	r0, r1
   45064:	beq	45070 <__assert_fail@plt+0x324b8>
   45068:	ldr	r0, [fp, #-380]	; 0xfffffe84
   4506c:	bl	6db70 <__assert_fail@plt+0x5afb8>
   45070:	ldr	r0, [fp, #-256]	; 0xffffff00
   45074:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   45078:	ldrb	r0, [fp, #-248]	; 0xffffff08
   4507c:	and	r0, r0, #1
   45080:	sub	sp, fp, #16
   45084:	pop	{r4, r5, r6, sl, fp, pc}
   45088:	push	{fp, lr}
   4508c:	mov	fp, sp
   45090:	sub	sp, sp, #32
   45094:	str	r0, [fp, #-4]
   45098:	str	r1, [fp, #-8]
   4509c:	str	r2, [fp, #-12]
   450a0:	ldr	r0, [fp, #-4]
   450a4:	ldrb	r0, [r0, #187]	; 0xbb
   450a8:	tst	r0, #1
   450ac:	beq	45164 <__assert_fail@plt+0x325ac>
   450b0:	ldr	r0, [fp, #-4]
   450b4:	ldr	r1, [r0, #8]
   450b8:	ldr	r0, [r0, #12]
   450bc:	mvn	r2, #0
   450c0:	subs	r1, r1, r2
   450c4:	sbcs	r0, r0, r2
   450c8:	blt	45128 <__assert_fail@plt+0x32570>
   450cc:	b	450d0 <__assert_fail@plt+0x32518>
   450d0:	ldr	r0, [fp, #-4]
   450d4:	ldr	r1, [r0, #8]
   450d8:	ldr	r0, [r0, #12]
   450dc:	rsbs	r1, r1, #12
   450e0:	rscs	r0, r0, #0
   450e4:	blt	45128 <__assert_fail@plt+0x32570>
   450e8:	b	450ec <__assert_fail@plt+0x32534>
   450ec:	ldr	r0, [fp, #-8]
   450f0:	ldr	r1, [fp, #-12]
   450f4:	ldr	r2, [fp, #-4]
   450f8:	ldr	r2, [r2, #8]
   450fc:	add	r2, r2, #1
   45100:	movw	r3, #11
   45104:	mul	r2, r2, r3
   45108:	movw	r3, #42370	; 0xa582
   4510c:	movt	r3, #7
   45110:	add	r3, r3, r2
   45114:	movw	r2, #50143	; 0xc3df
   45118:	movt	r2, #7
   4511c:	bl	128e8 <snprintf@plt>
   45120:	str	r0, [sp, #12]
   45124:	b	45158 <__assert_fail@plt+0x325a0>
   45128:	ldr	r0, [fp, #-8]
   4512c:	ldr	r1, [fp, #-12]
   45130:	ldr	r2, [fp, #-4]
   45134:	ldr	r3, [r2, #8]
   45138:	ldr	r2, [r2, #12]
   4513c:	mov	ip, sp
   45140:	str	r2, [ip, #4]
   45144:	str	r3, [ip]
   45148:	movw	r2, #44688	; 0xae90
   4514c:	movt	r2, #7
   45150:	bl	128e8 <snprintf@plt>
   45154:	str	r0, [sp, #12]
   45158:	ldr	r0, [sp, #12]
   4515c:	str	r0, [sp, #16]
   45160:	b	45178 <__assert_fail@plt+0x325c0>
   45164:	ldr	r0, [fp, #-8]
   45168:	movw	r1, #0
   4516c:	strb	r1, [r0]
   45170:	movw	r0, #0
   45174:	str	r0, [sp, #16]
   45178:	ldr	r0, [fp, #-4]
   4517c:	ldr	r0, [r0, #16]
   45180:	movw	r1, #0
   45184:	cmp	r1, r0
   45188:	bgt	45210 <__assert_fail@plt+0x32658>
   4518c:	ldr	r0, [fp, #-4]
   45190:	ldr	r0, [r0, #16]
   45194:	cmp	r0, #6
   45198:	bgt	45210 <__assert_fail@plt+0x32658>
   4519c:	ldr	r0, [sp, #16]
   451a0:	movw	r1, #0
   451a4:	cmp	r1, r0
   451a8:	bgt	45210 <__assert_fail@plt+0x32658>
   451ac:	ldr	r0, [sp, #16]
   451b0:	ldr	r1, [fp, #-12]
   451b4:	cmp	r0, r1
   451b8:	bge	45210 <__assert_fail@plt+0x32658>
   451bc:	ldr	r0, [fp, #-8]
   451c0:	ldr	r1, [sp, #16]
   451c4:	add	r0, r0, r1
   451c8:	ldr	r2, [fp, #-12]
   451cc:	sub	r2, r2, r1
   451d0:	movw	r3, #50142	; 0xc3de
   451d4:	movt	r3, #7
   451d8:	add	ip, r3, #1
   451dc:	cmp	r1, #0
   451e0:	moveq	r3, ip
   451e4:	ldr	r1, [fp, #-4]
   451e8:	ldr	r1, [r1, #16]
   451ec:	movw	ip, #42524	; 0xa61c
   451f0:	movt	ip, #7
   451f4:	add	r1, ip, r1, lsl #2
   451f8:	str	r1, [sp, #8]
   451fc:	mov	r1, r2
   45200:	mov	r2, r3
   45204:	ldr	r3, [sp, #8]
   45208:	bl	128e8 <snprintf@plt>
   4520c:	b	45214 <__assert_fail@plt+0x3265c>
   45210:	b	45214 <__assert_fail@plt+0x3265c>
   45214:	ldr	r0, [fp, #-8]
   45218:	mov	sp, fp
   4521c:	pop	{fp, pc}
   45220:	push	{fp, lr}
   45224:	mov	fp, sp
   45228:	sub	sp, sp, #40	; 0x28
   4522c:	str	r0, [fp, #-4]
   45230:	str	r1, [fp, #-8]
   45234:	ldr	r0, [fp, #-8]
   45238:	str	r0, [fp, #-12]
   4523c:	ldr	r0, [fp, #-4]
   45240:	mov	r1, #43	; 0x2b
   45244:	cmp	r0, #0
   45248:	movwmi	r1, #45	; 0x2d
   4524c:	strb	r1, [fp, #-13]
   45250:	ldr	r0, [fp, #-4]
   45254:	movw	r1, #46021	; 0xb3c5
   45258:	movt	r1, #37282	; 0x91a2
   4525c:	smmla	r0, r0, r1, r0
   45260:	asr	r2, r0, #11
   45264:	add	r0, r2, r0, lsr #31
   45268:	str	r1, [sp, #4]
   4526c:	bl	129b4 <abs@plt>
   45270:	str	r0, [sp, #20]
   45274:	ldr	r0, [fp, #-8]
   45278:	ldrb	r2, [fp, #-13]
   4527c:	ldr	r3, [sp, #20]
   45280:	movw	r1, #44693	; 0xae95
   45284:	movt	r1, #7
   45288:	bl	12a5c <sprintf@plt>
   4528c:	ldr	r1, [fp, #-12]
   45290:	add	r0, r1, r0
   45294:	str	r0, [fp, #-12]
   45298:	ldr	r0, [fp, #-4]
   4529c:	ldr	r1, [sp, #4]
   452a0:	smmla	r2, r0, r1, r0
   452a4:	asr	r3, r2, #11
   452a8:	add	r2, r3, r2, lsr #31
   452ac:	mov	r3, #3600	; 0xe10
   452b0:	mls	r0, r2, r3, r0
   452b4:	bl	129b4 <abs@plt>
   452b8:	str	r0, [sp, #16]
   452bc:	ldr	r0, [sp, #16]
   452c0:	cmp	r0, #0
   452c4:	beq	453f0 <__assert_fail@plt+0x32838>
   452c8:	ldr	r0, [sp, #16]
   452cc:	movw	r1, #34953	; 0x8889
   452d0:	movt	r1, #34952	; 0x8888
   452d4:	smmla	r0, r0, r1, r0
   452d8:	asr	r2, r0, #5
   452dc:	add	r0, r2, r0, lsr #31
   452e0:	str	r0, [sp, #12]
   452e4:	ldr	r0, [sp, #16]
   452e8:	smmla	r1, r0, r1, r0
   452ec:	asr	r2, r1, #5
   452f0:	add	r1, r2, r1, lsr #31
   452f4:	rsb	r1, r1, r1, lsl #4
   452f8:	sub	r0, r0, r1, lsl #2
   452fc:	str	r0, [sp, #8]
   45300:	ldr	r0, [fp, #-12]
   45304:	add	r1, r0, #1
   45308:	str	r1, [fp, #-12]
   4530c:	mov	r1, #58	; 0x3a
   45310:	strb	r1, [r0]
   45314:	ldr	r0, [sp, #12]
   45318:	movw	r1, #26215	; 0x6667
   4531c:	movt	r1, #26214	; 0x6666
   45320:	smmul	r0, r0, r1
   45324:	lsr	r2, r0, #2
   45328:	add	r0, r2, r0, lsr #31
   4532c:	add	r0, r0, #48	; 0x30
   45330:	ldr	r2, [fp, #-12]
   45334:	add	r3, r2, #1
   45338:	str	r3, [fp, #-12]
   4533c:	strb	r0, [r2]
   45340:	ldr	r0, [sp, #12]
   45344:	smmul	r1, r0, r1
   45348:	asr	r2, r1, #2
   4534c:	add	r1, r2, r1, lsr #31
   45350:	add	r1, r1, r1, lsl #2
   45354:	sub	r0, r0, r1, lsl #1
   45358:	add	r0, r0, #48	; 0x30
   4535c:	ldr	r1, [fp, #-12]
   45360:	add	r2, r1, #1
   45364:	str	r2, [fp, #-12]
   45368:	strb	r0, [r1]
   4536c:	ldr	r0, [sp, #8]
   45370:	cmp	r0, #0
   45374:	beq	453e4 <__assert_fail@plt+0x3282c>
   45378:	ldr	r0, [fp, #-12]
   4537c:	add	r1, r0, #1
   45380:	str	r1, [fp, #-12]
   45384:	mov	r1, #58	; 0x3a
   45388:	strb	r1, [r0]
   4538c:	ldr	r0, [sp, #8]
   45390:	movw	r1, #26215	; 0x6667
   45394:	movt	r1, #26214	; 0x6666
   45398:	smmul	r0, r0, r1
   4539c:	lsr	r2, r0, #2
   453a0:	add	r0, r2, r0, lsr #31
   453a4:	add	r0, r0, #48	; 0x30
   453a8:	ldr	r2, [fp, #-12]
   453ac:	add	r3, r2, #1
   453b0:	str	r3, [fp, #-12]
   453b4:	strb	r0, [r2]
   453b8:	ldr	r0, [sp, #8]
   453bc:	smmul	r1, r0, r1
   453c0:	asr	r2, r1, #2
   453c4:	add	r1, r2, r1, lsr #31
   453c8:	add	r1, r1, r1, lsl #2
   453cc:	sub	r0, r0, r1, lsl #1
   453d0:	add	r0, r0, #48	; 0x30
   453d4:	ldr	r1, [fp, #-12]
   453d8:	add	r2, r1, #1
   453dc:	str	r2, [fp, #-12]
   453e0:	strb	r0, [r1]
   453e4:	ldr	r0, [fp, #-12]
   453e8:	movw	r1, #0
   453ec:	strb	r1, [r0]
   453f0:	ldr	r0, [fp, #-8]
   453f4:	mov	sp, fp
   453f8:	pop	{fp, pc}
   453fc:	push	{fp, lr}
   45400:	mov	fp, sp
   45404:	sub	sp, sp, #24
   45408:	ldr	r1, [fp, #8]
   4540c:	and	r0, r0, #1
   45410:	strb	r0, [fp, #-2]
   45414:	str	r3, [sp, #12]
   45418:	str	r2, [sp, #8]
   4541c:	ldr	r0, [sp, #8]
   45420:	ldr	r2, [sp, #12]
   45424:	orr	r0, r0, r2
   45428:	cmp	r0, #0
   4542c:	bne	45444 <__assert_fail@plt+0x3288c>
   45430:	b	45434 <__assert_fail@plt+0x3287c>
   45434:	ldrb	r0, [fp, #-2]
   45438:	and	r0, r0, #1
   4543c:	strb	r0, [fp, #-1]
   45440:	b	4548c <__assert_fail@plt+0x328d4>
   45444:	movw	r0, #55080	; 0xd728
   45448:	movt	r0, #8
   4544c:	ldr	r0, [r0]
   45450:	ldrb	r1, [fp, #-2]
   45454:	mov	r2, #1
   45458:	bic	r1, r2, r1
   4545c:	movw	r2, #44768	; 0xaee0
   45460:	movt	r2, #7
   45464:	add	r1, r2, r1
   45468:	ldr	r2, [sp, #8]
   4546c:	ldr	r3, [sp, #12]
   45470:	ldr	ip, [fp, #8]
   45474:	mov	lr, sp
   45478:	str	ip, [lr]
   4547c:	bl	128c4 <fprintf@plt>
   45480:	movw	r1, #1
   45484:	and	r1, r1, #1
   45488:	strb	r1, [fp, #-1]
   4548c:	ldrb	r0, [fp, #-1]
   45490:	and	r0, r0, #1
   45494:	mov	sp, fp
   45498:	pop	{fp, pc}
   4549c:	push	{fp, lr}
   454a0:	mov	fp, sp
   454a4:	sub	sp, sp, #48	; 0x30
   454a8:	str	r0, [fp, #-8]
   454ac:	str	r1, [fp, #-12]
   454b0:	ldr	r0, [fp, #-12]
   454b4:	str	r0, [fp, #-16]
   454b8:	ldr	r0, [fp, #-16]
   454bc:	ldrsb	r0, [r0]
   454c0:	cmp	r0, #0
   454c4:	beq	454f4 <__assert_fail@plt+0x3293c>
   454c8:	ldr	r0, [fp, #-16]
   454cc:	ldrb	r0, [r0]
   454d0:	bl	458fc <__assert_fail@plt+0x32d44>
   454d4:	and	r0, r0, #255	; 0xff
   454d8:	bl	6f2e4 <__assert_fail@plt+0x5c72c>
   454dc:	ldr	r1, [fp, #-16]
   454e0:	strb	r0, [r1]
   454e4:	ldr	r0, [fp, #-16]
   454e8:	add	r0, r0, #1
   454ec:	str	r0, [fp, #-16]
   454f0:	b	454b8 <__assert_fail@plt+0x32900>
   454f4:	movw	r0, #42552	; 0xa638
   454f8:	movt	r0, #7
   454fc:	str	r0, [sp, #20]
   45500:	ldr	r0, [sp, #20]
   45504:	ldr	r0, [r0]
   45508:	movw	r1, #0
   4550c:	cmp	r0, r1
   45510:	beq	4554c <__assert_fail@plt+0x32994>
   45514:	ldr	r0, [fp, #-12]
   45518:	ldr	r1, [sp, #20]
   4551c:	ldr	r1, [r1]
   45520:	bl	124c8 <strcmp@plt>
   45524:	cmp	r0, #0
   45528:	bne	45538 <__assert_fail@plt+0x32980>
   4552c:	ldr	r0, [sp, #20]
   45530:	str	r0, [fp, #-4]
   45534:	b	458f0 <__assert_fail@plt+0x32d38>
   45538:	b	4553c <__assert_fail@plt+0x32984>
   4553c:	ldr	r0, [sp, #20]
   45540:	add	r0, r0, #12
   45544:	str	r0, [sp, #20]
   45548:	b	45500 <__assert_fail@plt+0x32948>
   4554c:	ldr	r0, [fp, #-12]
   45550:	bl	12888 <strlen@plt>
   45554:	str	r0, [sp, #24]
   45558:	ldr	r0, [sp, #24]
   4555c:	cmp	r0, #3
   45560:	movw	r0, #1
   45564:	str	r0, [sp, #12]
   45568:	beq	455a0 <__assert_fail@plt+0x329e8>
   4556c:	ldr	r0, [sp, #24]
   45570:	cmp	r0, #4
   45574:	movw	r0, #0
   45578:	str	r0, [sp, #8]
   4557c:	bne	45598 <__assert_fail@plt+0x329e0>
   45580:	ldr	r0, [fp, #-12]
   45584:	ldrb	r0, [r0, #3]
   45588:	cmp	r0, #46	; 0x2e
   4558c:	movw	r0, #0
   45590:	moveq	r0, #1
   45594:	str	r0, [sp, #8]
   45598:	ldr	r0, [sp, #8]
   4559c:	str	r0, [sp, #12]
   455a0:	ldr	r0, [sp, #12]
   455a4:	and	r0, r0, #1
   455a8:	strb	r0, [sp, #18]
   455ac:	movw	r0, #42612	; 0xa674
   455b0:	movt	r0, #7
   455b4:	str	r0, [sp, #20]
   455b8:	ldr	r0, [sp, #20]
   455bc:	ldr	r0, [r0]
   455c0:	movw	r1, #0
   455c4:	cmp	r0, r1
   455c8:	beq	45634 <__assert_fail@plt+0x32a7c>
   455cc:	ldrb	r0, [sp, #18]
   455d0:	tst	r0, #1
   455d4:	beq	455f4 <__assert_fail@plt+0x32a3c>
   455d8:	ldr	r0, [fp, #-12]
   455dc:	ldr	r1, [sp, #20]
   455e0:	ldr	r1, [r1]
   455e4:	movw	r2, #3
   455e8:	bl	12b58 <strncmp@plt>
   455ec:	str	r0, [sp, #4]
   455f0:	b	45608 <__assert_fail@plt+0x32a50>
   455f4:	ldr	r0, [fp, #-12]
   455f8:	ldr	r1, [sp, #20]
   455fc:	ldr	r1, [r1]
   45600:	bl	124c8 <strcmp@plt>
   45604:	str	r0, [sp, #4]
   45608:	ldr	r0, [sp, #4]
   4560c:	cmp	r0, #0
   45610:	bne	45620 <__assert_fail@plt+0x32a68>
   45614:	ldr	r0, [sp, #20]
   45618:	str	r0, [fp, #-4]
   4561c:	b	458f0 <__assert_fail@plt+0x32d38>
   45620:	b	45624 <__assert_fail@plt+0x32a6c>
   45624:	ldr	r0, [sp, #20]
   45628:	add	r0, r0, #12
   4562c:	str	r0, [sp, #20]
   45630:	b	455b8 <__assert_fail@plt+0x32a00>
   45634:	ldr	r0, [fp, #-8]
   45638:	ldr	r1, [fp, #-12]
   4563c:	bl	45910 <__assert_fail@plt+0x32d58>
   45640:	str	r0, [sp, #20]
   45644:	movw	r1, #0
   45648:	cmp	r0, r1
   4564c:	beq	4565c <__assert_fail@plt+0x32aa4>
   45650:	ldr	r0, [sp, #20]
   45654:	str	r0, [fp, #-4]
   45658:	b	458f0 <__assert_fail@plt+0x32d38>
   4565c:	ldr	r0, [fp, #-12]
   45660:	movw	r1, #42912	; 0xa7a0
   45664:	movt	r1, #7
   45668:	ldr	r1, [r1]
   4566c:	bl	124c8 <strcmp@plt>
   45670:	cmp	r0, #0
   45674:	bne	45688 <__assert_fail@plt+0x32ad0>
   45678:	movw	r0, #42912	; 0xa7a0
   4567c:	movt	r0, #7
   45680:	str	r0, [fp, #-4]
   45684:	b	458f0 <__assert_fail@plt+0x32d38>
   45688:	movw	r0, #42924	; 0xa7ac
   4568c:	movt	r0, #7
   45690:	str	r0, [sp, #20]
   45694:	ldr	r0, [sp, #20]
   45698:	ldr	r0, [r0]
   4569c:	movw	r1, #0
   456a0:	cmp	r0, r1
   456a4:	beq	456e0 <__assert_fail@plt+0x32b28>
   456a8:	ldr	r0, [fp, #-12]
   456ac:	ldr	r1, [sp, #20]
   456b0:	ldr	r1, [r1]
   456b4:	bl	124c8 <strcmp@plt>
   456b8:	cmp	r0, #0
   456bc:	bne	456cc <__assert_fail@plt+0x32b14>
   456c0:	ldr	r0, [sp, #20]
   456c4:	str	r0, [fp, #-4]
   456c8:	b	458f0 <__assert_fail@plt+0x32d38>
   456cc:	b	456d0 <__assert_fail@plt+0x32b18>
   456d0:	ldr	r0, [sp, #20]
   456d4:	add	r0, r0, #12
   456d8:	str	r0, [sp, #20]
   456dc:	b	45694 <__assert_fail@plt+0x32adc>
   456e0:	ldr	r0, [fp, #-12]
   456e4:	ldr	r1, [sp, #24]
   456e8:	sub	r1, r1, #1
   456ec:	add	r0, r0, r1
   456f0:	ldrb	r0, [r0]
   456f4:	cmp	r0, #83	; 0x53
   456f8:	bne	45784 <__assert_fail@plt+0x32bcc>
   456fc:	ldr	r0, [fp, #-12]
   45700:	ldr	r1, [sp, #24]
   45704:	sub	r1, r1, #1
   45708:	add	r0, r0, r1
   4570c:	movw	r1, #0
   45710:	strb	r1, [r0]
   45714:	movw	r0, #42924	; 0xa7ac
   45718:	movt	r0, #7
   4571c:	str	r0, [sp, #20]
   45720:	ldr	r0, [sp, #20]
   45724:	ldr	r0, [r0]
   45728:	movw	r1, #0
   4572c:	cmp	r0, r1
   45730:	beq	4576c <__assert_fail@plt+0x32bb4>
   45734:	ldr	r0, [fp, #-12]
   45738:	ldr	r1, [sp, #20]
   4573c:	ldr	r1, [r1]
   45740:	bl	124c8 <strcmp@plt>
   45744:	cmp	r0, #0
   45748:	bne	45758 <__assert_fail@plt+0x32ba0>
   4574c:	ldr	r0, [sp, #20]
   45750:	str	r0, [fp, #-4]
   45754:	b	458f0 <__assert_fail@plt+0x32d38>
   45758:	b	4575c <__assert_fail@plt+0x32ba4>
   4575c:	ldr	r0, [sp, #20]
   45760:	add	r0, r0, #12
   45764:	str	r0, [sp, #20]
   45768:	b	45720 <__assert_fail@plt+0x32b68>
   4576c:	ldr	r0, [fp, #-12]
   45770:	ldr	r1, [sp, #24]
   45774:	sub	r1, r1, #1
   45778:	add	r0, r0, r1
   4577c:	movw	r1, #83	; 0x53
   45780:	strb	r1, [r0]
   45784:	movw	r0, #43056	; 0xa830
   45788:	movt	r0, #7
   4578c:	str	r0, [sp, #20]
   45790:	ldr	r0, [sp, #20]
   45794:	ldr	r0, [r0]
   45798:	movw	r1, #0
   4579c:	cmp	r0, r1
   457a0:	beq	457dc <__assert_fail@plt+0x32c24>
   457a4:	ldr	r0, [fp, #-12]
   457a8:	ldr	r1, [sp, #20]
   457ac:	ldr	r1, [r1]
   457b0:	bl	124c8 <strcmp@plt>
   457b4:	cmp	r0, #0
   457b8:	bne	457c8 <__assert_fail@plt+0x32c10>
   457bc:	ldr	r0, [sp, #20]
   457c0:	str	r0, [fp, #-4]
   457c4:	b	458f0 <__assert_fail@plt+0x32d38>
   457c8:	b	457cc <__assert_fail@plt+0x32c14>
   457cc:	ldr	r0, [sp, #20]
   457d0:	add	r0, r0, #12
   457d4:	str	r0, [sp, #20]
   457d8:	b	45790 <__assert_fail@plt+0x32bd8>
   457dc:	ldr	r0, [sp, #24]
   457e0:	cmp	r0, #1
   457e4:	bne	45848 <__assert_fail@plt+0x32c90>
   457e8:	movw	r0, #43308	; 0xa92c
   457ec:	movt	r0, #7
   457f0:	str	r0, [sp, #20]
   457f4:	ldr	r0, [sp, #20]
   457f8:	ldr	r0, [r0]
   457fc:	movw	r1, #0
   45800:	cmp	r0, r1
   45804:	beq	45844 <__assert_fail@plt+0x32c8c>
   45808:	ldr	r0, [fp, #-12]
   4580c:	ldrb	r0, [r0]
   45810:	ldr	r1, [sp, #20]
   45814:	ldr	r1, [r1]
   45818:	ldrb	r1, [r1]
   4581c:	cmp	r0, r1
   45820:	bne	45830 <__assert_fail@plt+0x32c78>
   45824:	ldr	r0, [sp, #20]
   45828:	str	r0, [fp, #-4]
   4582c:	b	458f0 <__assert_fail@plt+0x32d38>
   45830:	b	45834 <__assert_fail@plt+0x32c7c>
   45834:	ldr	r0, [sp, #20]
   45838:	add	r0, r0, #12
   4583c:	str	r0, [sp, #20]
   45840:	b	457f4 <__assert_fail@plt+0x32c3c>
   45844:	b	45848 <__assert_fail@plt+0x32c90>
   45848:	movw	r0, #0
   4584c:	strb	r0, [sp, #19]
   45850:	ldr	r0, [fp, #-12]
   45854:	str	r0, [fp, #-20]	; 0xffffffec
   45858:	str	r0, [fp, #-16]
   4585c:	ldr	r0, [fp, #-20]	; 0xffffffec
   45860:	ldrb	r0, [r0]
   45864:	ldr	r1, [fp, #-16]
   45868:	strb	r0, [r1]
   4586c:	sxtb	r0, r0
   45870:	cmp	r0, #0
   45874:	beq	458b4 <__assert_fail@plt+0x32cfc>
   45878:	ldr	r0, [fp, #-20]	; 0xffffffec
   4587c:	ldrb	r0, [r0]
   45880:	cmp	r0, #46	; 0x2e
   45884:	bne	45894 <__assert_fail@plt+0x32cdc>
   45888:	movw	r0, #1
   4588c:	strb	r0, [sp, #19]
   45890:	b	458a0 <__assert_fail@plt+0x32ce8>
   45894:	ldr	r0, [fp, #-16]
   45898:	add	r0, r0, #1
   4589c:	str	r0, [fp, #-16]
   458a0:	b	458a4 <__assert_fail@plt+0x32cec>
   458a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   458a8:	add	r0, r0, #1
   458ac:	str	r0, [fp, #-20]	; 0xffffffec
   458b0:	b	4585c <__assert_fail@plt+0x32ca4>
   458b4:	ldrb	r0, [sp, #19]
   458b8:	tst	r0, #1
   458bc:	beq	458e8 <__assert_fail@plt+0x32d30>
   458c0:	ldr	r0, [fp, #-8]
   458c4:	ldr	r1, [fp, #-12]
   458c8:	bl	45910 <__assert_fail@plt+0x32d58>
   458cc:	str	r0, [sp, #20]
   458d0:	movw	r1, #0
   458d4:	cmp	r0, r1
   458d8:	beq	458e8 <__assert_fail@plt+0x32d30>
   458dc:	ldr	r0, [sp, #20]
   458e0:	str	r0, [fp, #-4]
   458e4:	b	458f0 <__assert_fail@plt+0x32d38>
   458e8:	movw	r0, #0
   458ec:	str	r0, [fp, #-4]
   458f0:	ldr	r0, [fp, #-4]
   458f4:	mov	sp, fp
   458f8:	pop	{fp, pc}
   458fc:	sub	sp, sp, #4
   45900:	strb	r0, [sp, #3]
   45904:	ldrb	r0, [sp, #3]
   45908:	add	sp, sp, #4
   4590c:	bx	lr
   45910:	push	{fp, lr}
   45914:	mov	fp, sp
   45918:	sub	sp, sp, #16
   4591c:	str	r0, [sp, #8]
   45920:	str	r1, [sp, #4]
   45924:	movw	r0, #43620	; 0xaa64
   45928:	movt	r0, #7
   4592c:	str	r0, [sp]
   45930:	ldr	r0, [sp]
   45934:	ldr	r0, [r0]
   45938:	movw	r1, #0
   4593c:	cmp	r0, r1
   45940:	beq	4597c <__assert_fail@plt+0x32dc4>
   45944:	ldr	r0, [sp, #4]
   45948:	ldr	r1, [sp]
   4594c:	ldr	r1, [r1]
   45950:	bl	124c8 <strcmp@plt>
   45954:	cmp	r0, #0
   45958:	bne	45968 <__assert_fail@plt+0x32db0>
   4595c:	ldr	r0, [sp]
   45960:	str	r0, [fp, #-4]
   45964:	b	45a34 <__assert_fail@plt+0x32e7c>
   45968:	b	4596c <__assert_fail@plt+0x32db4>
   4596c:	ldr	r0, [sp]
   45970:	add	r0, r0, #12
   45974:	str	r0, [sp]
   45978:	b	45930 <__assert_fail@plt+0x32d78>
   4597c:	ldr	r0, [sp, #8]
   45980:	add	r0, r0, #188	; 0xbc
   45984:	str	r0, [sp]
   45988:	ldr	r0, [sp]
   4598c:	ldr	r0, [r0]
   45990:	movw	r1, #0
   45994:	cmp	r0, r1
   45998:	beq	459d4 <__assert_fail@plt+0x32e1c>
   4599c:	ldr	r0, [sp, #4]
   459a0:	ldr	r1, [sp]
   459a4:	ldr	r1, [r1]
   459a8:	bl	124c8 <strcmp@plt>
   459ac:	cmp	r0, #0
   459b0:	bne	459c0 <__assert_fail@plt+0x32e08>
   459b4:	ldr	r0, [sp]
   459b8:	str	r0, [fp, #-4]
   459bc:	b	45a34 <__assert_fail@plt+0x32e7c>
   459c0:	b	459c4 <__assert_fail@plt+0x32e0c>
   459c4:	ldr	r0, [sp]
   459c8:	add	r0, r0, #12
   459cc:	str	r0, [sp]
   459d0:	b	45988 <__assert_fail@plt+0x32dd0>
   459d4:	movw	r0, #43668	; 0xaa94
   459d8:	movt	r0, #7
   459dc:	str	r0, [sp]
   459e0:	ldr	r0, [sp]
   459e4:	ldr	r0, [r0]
   459e8:	movw	r1, #0
   459ec:	cmp	r0, r1
   459f0:	beq	45a2c <__assert_fail@plt+0x32e74>
   459f4:	ldr	r0, [sp, #4]
   459f8:	ldr	r1, [sp]
   459fc:	ldr	r1, [r1]
   45a00:	bl	124c8 <strcmp@plt>
   45a04:	cmp	r0, #0
   45a08:	bne	45a18 <__assert_fail@plt+0x32e60>
   45a0c:	ldr	r0, [sp]
   45a10:	str	r0, [fp, #-4]
   45a14:	b	45a34 <__assert_fail@plt+0x32e7c>
   45a18:	b	45a1c <__assert_fail@plt+0x32e64>
   45a1c:	ldr	r0, [sp]
   45a20:	add	r0, r0, #12
   45a24:	str	r0, [sp]
   45a28:	b	459e0 <__assert_fail@plt+0x32e28>
   45a2c:	movw	r0, #0
   45a30:	str	r0, [fp, #-4]
   45a34:	ldr	r0, [fp, #-4]
   45a38:	mov	sp, fp
   45a3c:	pop	{fp, pc}
   45a40:	push	{r4, r5, fp, lr}
   45a44:	add	fp, sp, #8
   45a48:	sub	sp, sp, #56	; 0x38
   45a4c:	ldr	ip, [fp, #12]
   45a50:	ldr	lr, [fp, #8]
   45a54:	ldr	r4, [fp, #20]
   45a58:	ldr	r5, [fp, #16]
   45a5c:	str	r0, [sp, #24]
   45a60:	str	r1, [sp, #28]
   45a64:	str	r2, [sp, #32]
   45a68:	str	r3, [sp, #36]	; 0x24
   45a6c:	str	lr, [sp, #40]	; 0x28
   45a70:	str	ip, [sp, #44]	; 0x2c
   45a74:	and	r0, r5, #1
   45a78:	strb	r0, [sp, #23]
   45a7c:	ldr	r0, [sp, #32]
   45a80:	ldr	r1, [sp, #36]	; 0x24
   45a84:	str	r1, [sp, #12]
   45a88:	str	r0, [sp, #8]
   45a8c:	ldr	r0, [sp, #12]
   45a90:	cmp	r0, #0
   45a94:	bmi	45b18 <__assert_fail@plt+0x32f60>
   45a98:	b	45a9c <__assert_fail@plt+0x32ee4>
   45a9c:	ldr	r0, [sp, #40]	; 0x28
   45aa0:	cmp	r0, #2
   45aa4:	bne	45b18 <__assert_fail@plt+0x32f60>
   45aa8:	ldr	r0, [sp, #8]
   45aac:	ldr	r1, [sp, #12]
   45ab0:	subs	r2, r0, #69	; 0x45
   45ab4:	sbcs	r3, r1, #0
   45ab8:	mov	ip, #0
   45abc:	movwlt	ip, #1
   45ac0:	movw	lr, #1900	; 0x76c
   45ac4:	cmp	ip, #0
   45ac8:	movwne	lr, #2000	; 0x7d0
   45acc:	adds	r0, r0, lr
   45ad0:	adc	r1, r1, #0
   45ad4:	str	r0, [sp, #8]
   45ad8:	str	r1, [sp, #12]
   45adc:	ldrb	r0, [sp, #23]
   45ae0:	tst	r0, #1
   45ae4:	beq	45b14 <__assert_fail@plt+0x32f5c>
   45ae8:	movw	r0, #47362	; 0xb902
   45aec:	movt	r0, #7
   45af0:	bl	12864 <gettext@plt>
   45af4:	ldr	r2, [sp, #32]
   45af8:	ldr	r3, [sp, #36]	; 0x24
   45afc:	ldr	r1, [sp, #8]
   45b00:	ldr	ip, [sp, #12]
   45b04:	mov	lr, sp
   45b08:	str	ip, [lr, #4]
   45b0c:	str	r1, [lr]
   45b10:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   45b14:	b	45b18 <__assert_fail@plt+0x32f60>
   45b18:	ldr	r0, [sp, #12]
   45b1c:	cmn	r0, #1
   45b20:	bgt	45b78 <__assert_fail@plt+0x32fc0>
   45b24:	b	45b28 <__assert_fail@plt+0x32f70>
   45b28:	ldr	r0, [sp, #8]
   45b2c:	ldr	r1, [sp, #12]
   45b30:	ldr	r2, [fp, #20]
   45b34:	movw	r3, #63636	; 0xf894
   45b38:	movt	r3, #65535	; 0xffff
   45b3c:	subs	r0, r3, r0
   45b40:	mvn	r3, #0
   45b44:	sbc	r3, r3, r1
   45b48:	orr	r1, r1, r3
   45b4c:	mov	ip, #0
   45b50:	cmn	r1, #1
   45b54:	movwgt	ip, #1
   45b58:	eor	r1, r3, r0, asr #31
   45b5c:	cmp	r1, #0
   45b60:	movwne	r1, #1
   45b64:	orr	r1, ip, r1
   45b68:	str	r0, [r2]
   45b6c:	tst	r1, #1
   45b70:	bne	45bdc <__assert_fail@plt+0x33024>
   45b74:	b	45c10 <__assert_fail@plt+0x33058>
   45b78:	ldr	r0, [sp, #8]
   45b7c:	ldr	r1, [sp, #12]
   45b80:	ldr	r2, [fp, #20]
   45b84:	mov	r3, #0
   45b88:	cmn	r1, #1
   45b8c:	mov	ip, r3
   45b90:	movwgt	ip, #1
   45b94:	movw	lr, #1900	; 0x76c
   45b98:	subs	r0, r0, lr
   45b9c:	sbc	lr, r1, #0
   45ba0:	cmn	lr, #1
   45ba4:	mov	r4, r3
   45ba8:	movwgt	r4, #1
   45bac:	subs	ip, ip, r4
   45bb0:	movwne	ip, #1
   45bb4:	cmp	r1, #0
   45bb8:	movwmi	r3, #1
   45bbc:	and	r1, r3, ip
   45bc0:	eor	r3, lr, r0, asr #31
   45bc4:	cmp	r3, #0
   45bc8:	movwne	r3, #1
   45bcc:	orr	r1, r1, r3
   45bd0:	str	r0, [r2]
   45bd4:	tst	r1, #1
   45bd8:	beq	45c10 <__assert_fail@plt+0x33058>
   45bdc:	ldrb	r0, [sp, #23]
   45be0:	tst	r0, #1
   45be4:	beq	45c00 <__assert_fail@plt+0x33048>
   45be8:	movw	r0, #47406	; 0xb92e
   45bec:	movt	r0, #7
   45bf0:	bl	12864 <gettext@plt>
   45bf4:	ldr	r2, [sp, #8]
   45bf8:	ldr	r3, [sp, #12]
   45bfc:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   45c00:	movw	r0, #0
   45c04:	and	r0, r0, #1
   45c08:	strb	r0, [fp, #-9]
   45c0c:	b	45c1c <__assert_fail@plt+0x33064>
   45c10:	movw	r0, #1
   45c14:	and	r0, r0, #1
   45c18:	strb	r0, [fp, #-9]
   45c1c:	ldrb	r0, [fp, #-9]
   45c20:	and	r0, r0, #1
   45c24:	sub	sp, fp, #8
   45c28:	pop	{r4, r5, fp, pc}
   45c2c:	sub	sp, sp, #48	; 0x30
   45c30:	str	r0, [sp, #32]
   45c34:	str	r1, [sp, #36]	; 0x24
   45c38:	str	r2, [sp, #28]
   45c3c:	ldr	r0, [sp, #28]
   45c40:	cmp	r0, #0
   45c44:	str	r0, [sp, #24]
   45c48:	beq	45cd4 <__assert_fail@plt+0x3311c>
   45c4c:	b	45c50 <__assert_fail@plt+0x33098>
   45c50:	ldr	r0, [sp, #24]
   45c54:	cmp	r0, #1
   45c58:	beq	45d50 <__assert_fail@plt+0x33198>
   45c5c:	b	45c60 <__assert_fail@plt+0x330a8>
   45c60:	ldr	r0, [sp, #24]
   45c64:	cmp	r0, #2
   45c68:	beq	45c74 <__assert_fail@plt+0x330bc>
   45c6c:	b	45c70 <__assert_fail@plt+0x330b8>
   45c70:	b	45c74 <__assert_fail@plt+0x330bc>
   45c74:	ldr	r0, [sp, #36]	; 0x24
   45c78:	cmp	r0, #0
   45c7c:	bmi	45cb0 <__assert_fail@plt+0x330f8>
   45c80:	b	45c84 <__assert_fail@plt+0x330cc>
   45c84:	ldr	r0, [sp, #32]
   45c88:	ldr	r1, [sp, #36]	; 0x24
   45c8c:	rsbs	r0, r0, #23
   45c90:	rscs	r1, r1, #0
   45c94:	blt	45cb0 <__assert_fail@plt+0x330f8>
   45c98:	b	45c9c <__assert_fail@plt+0x330e4>
   45c9c:	ldr	r0, [sp, #32]
   45ca0:	ldr	r1, [sp, #36]	; 0x24
   45ca4:	str	r0, [sp, #20]
   45ca8:	str	r1, [sp, #16]
   45cac:	b	45cc4 <__assert_fail@plt+0x3310c>
   45cb0:	mvn	r0, #0
   45cb4:	mov	r1, r0
   45cb8:	str	r1, [sp, #20]
   45cbc:	str	r0, [sp, #16]
   45cc0:	b	45cc4 <__assert_fail@plt+0x3310c>
   45cc4:	ldr	r0, [sp, #16]
   45cc8:	ldr	r1, [sp, #20]
   45ccc:	str	r1, [sp, #44]	; 0x2c
   45cd0:	b	45dd8 <__assert_fail@plt+0x33220>
   45cd4:	ldr	r0, [sp, #32]
   45cd8:	ldr	r1, [sp, #36]	; 0x24
   45cdc:	subs	r0, r0, #1
   45ce0:	sbcs	r1, r1, #0
   45ce4:	blt	45d18 <__assert_fail@plt+0x33160>
   45ce8:	b	45cec <__assert_fail@plt+0x33134>
   45cec:	ldr	r0, [sp, #32]
   45cf0:	ldr	r1, [sp, #36]	; 0x24
   45cf4:	rsbs	r0, r0, #11
   45cf8:	rscs	r1, r1, #0
   45cfc:	blt	45d18 <__assert_fail@plt+0x33160>
   45d00:	b	45d04 <__assert_fail@plt+0x3314c>
   45d04:	ldr	r0, [sp, #32]
   45d08:	ldr	r1, [sp, #36]	; 0x24
   45d0c:	str	r0, [sp, #12]
   45d10:	str	r1, [sp, #8]
   45d14:	b	45d40 <__assert_fail@plt+0x33188>
   45d18:	ldr	r0, [sp, #32]
   45d1c:	ldr	r1, [sp, #36]	; 0x24
   45d20:	eor	r0, r0, #12
   45d24:	orr	r0, r0, r1
   45d28:	cmp	r0, #0
   45d2c:	mvnne	r0, #0
   45d30:	mov	r1, r0
   45d34:	str	r0, [sp, #12]
   45d38:	str	r1, [sp, #8]
   45d3c:	b	45d40 <__assert_fail@plt+0x33188>
   45d40:	ldr	r0, [sp, #8]
   45d44:	ldr	r1, [sp, #12]
   45d48:	str	r1, [sp, #44]	; 0x2c
   45d4c:	b	45dd8 <__assert_fail@plt+0x33220>
   45d50:	ldr	r0, [sp, #32]
   45d54:	ldr	r1, [sp, #36]	; 0x24
   45d58:	subs	r0, r0, #1
   45d5c:	sbcs	r1, r1, #0
   45d60:	blt	45d9c <__assert_fail@plt+0x331e4>
   45d64:	b	45d68 <__assert_fail@plt+0x331b0>
   45d68:	ldr	r0, [sp, #32]
   45d6c:	ldr	r1, [sp, #36]	; 0x24
   45d70:	rsbs	r0, r0, #11
   45d74:	rscs	r1, r1, #0
   45d78:	blt	45d9c <__assert_fail@plt+0x331e4>
   45d7c:	b	45d80 <__assert_fail@plt+0x331c8>
   45d80:	ldr	r0, [sp, #32]
   45d84:	ldr	r1, [sp, #36]	; 0x24
   45d88:	adds	r0, r0, #12
   45d8c:	adc	r1, r1, #0
   45d90:	str	r0, [sp, #4]
   45d94:	str	r1, [sp]
   45d98:	b	45dcc <__assert_fail@plt+0x33214>
   45d9c:	ldr	r0, [sp, #32]
   45da0:	ldr	r1, [sp, #36]	; 0x24
   45da4:	eor	r0, r0, #12
   45da8:	orr	r0, r0, r1
   45dac:	mvn	r1, #0
   45db0:	cmp	r0, #0
   45db4:	movweq	r1, #12
   45db8:	cmp	r0, #0
   45dbc:	mvnne	r0, #0
   45dc0:	str	r1, [sp, #4]
   45dc4:	str	r0, [sp]
   45dc8:	b	45dcc <__assert_fail@plt+0x33214>
   45dcc:	ldr	r0, [sp]
   45dd0:	ldr	r1, [sp, #4]
   45dd4:	str	r1, [sp, #44]	; 0x2c
   45dd8:	ldr	r0, [sp, #44]	; 0x2c
   45ddc:	add	sp, sp, #48	; 0x30
   45de0:	bx	lr
   45de4:	push	{fp, lr}
   45de8:	mov	fp, sp
   45dec:	sub	sp, sp, #32
   45df0:	str	r0, [fp, #-4]
   45df4:	str	r1, [fp, #-8]
   45df8:	str	r2, [fp, #-12]
   45dfc:	ldr	r0, [fp, #-8]
   45e00:	ldr	r1, [fp, #-12]
   45e04:	ldr	r2, [fp, #-4]
   45e08:	ldr	r3, [r2, #8]
   45e0c:	ldr	r2, [fp, #-4]
   45e10:	ldr	r2, [r2, #4]
   45e14:	ldr	ip, [fp, #-4]
   45e18:	ldr	ip, [ip]
   45e1c:	movw	lr, #47437	; 0xb94d
   45e20:	movt	lr, #7
   45e24:	str	r2, [sp, #16]
   45e28:	mov	r2, lr
   45e2c:	ldr	lr, [sp, #16]
   45e30:	str	lr, [sp]
   45e34:	str	ip, [sp, #4]
   45e38:	bl	128e8 <snprintf@plt>
   45e3c:	ldr	r1, [fp, #-8]
   45e40:	str	r0, [sp, #12]
   45e44:	mov	r0, r1
   45e48:	mov	sp, fp
   45e4c:	pop	{fp, pc}
   45e50:	sub	sp, sp, #12
   45e54:	str	r0, [sp, #4]
   45e58:	str	r1, [sp]
   45e5c:	ldr	r0, [sp]
   45e60:	ldr	r0, [r0, #24]
   45e64:	cmp	r0, #0
   45e68:	bge	45e7c <__assert_fail@plt+0x332c4>
   45e6c:	movw	r0, #0
   45e70:	and	r0, r0, #1
   45e74:	strb	r0, [sp, #11]
   45e78:	b	45f24 <__assert_fail@plt+0x3336c>
   45e7c:	ldr	r0, [sp, #4]
   45e80:	ldr	r0, [r0]
   45e84:	ldr	r1, [sp]
   45e88:	ldr	r1, [r1]
   45e8c:	eor	r0, r0, r1
   45e90:	ldr	r1, [sp, #4]
   45e94:	ldr	r1, [r1, #4]
   45e98:	ldr	r2, [sp]
   45e9c:	ldr	r2, [r2, #4]
   45ea0:	eor	r1, r1, r2
   45ea4:	orr	r0, r0, r1
   45ea8:	ldr	r1, [sp, #4]
   45eac:	ldr	r1, [r1, #8]
   45eb0:	ldr	r2, [sp]
   45eb4:	ldr	r2, [r2, #8]
   45eb8:	eor	r1, r1, r2
   45ebc:	orr	r0, r0, r1
   45ec0:	ldr	r1, [sp, #4]
   45ec4:	ldr	r1, [r1, #12]
   45ec8:	ldr	r2, [sp]
   45ecc:	ldr	r2, [r2, #12]
   45ed0:	eor	r1, r1, r2
   45ed4:	orr	r0, r0, r1
   45ed8:	ldr	r1, [sp, #4]
   45edc:	ldr	r1, [r1, #16]
   45ee0:	ldr	r2, [sp]
   45ee4:	ldr	r2, [r2, #16]
   45ee8:	eor	r1, r1, r2
   45eec:	orr	r0, r0, r1
   45ef0:	ldr	r1, [sp, #4]
   45ef4:	ldr	r1, [r1, #20]
   45ef8:	ldr	r2, [sp]
   45efc:	ldr	r2, [r2, #20]
   45f00:	eor	r1, r1, r2
   45f04:	orr	r0, r0, r1
   45f08:	cmp	r0, #0
   45f0c:	movw	r0, #0
   45f10:	movne	r0, #1
   45f14:	mvn	r1, #0
   45f18:	eor	r0, r0, r1
   45f1c:	and	r0, r0, #1
   45f20:	strb	r0, [sp, #11]
   45f24:	ldrb	r0, [sp, #11]
   45f28:	and	r0, r0, #1
   45f2c:	add	sp, sp, #12
   45f30:	bx	lr
   45f34:	push	{r4, r5, r6, sl, fp, lr}
   45f38:	add	fp, sp, #16
   45f3c:	sub	sp, sp, #192	; 0xc0
   45f40:	str	r0, [fp, #-20]	; 0xffffffec
   45f44:	str	r1, [fp, #-24]	; 0xffffffe8
   45f48:	str	r2, [fp, #-28]	; 0xffffffe4
   45f4c:	and	r0, r3, #1
   45f50:	strb	r0, [fp, #-29]	; 0xffffffe3
   45f54:	ldr	r0, [fp, #-20]	; 0xffffffec
   45f58:	ldr	r0, [r0]
   45f5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   45f60:	ldr	r1, [r1]
   45f64:	cmp	r0, r1
   45f68:	movw	r0, #0
   45f6c:	moveq	r0, #1
   45f70:	and	r0, r0, #1
   45f74:	strb	r0, [sp, #71]	; 0x47
   45f78:	ldr	r0, [fp, #-20]	; 0xffffffec
   45f7c:	ldr	r0, [r0, #4]
   45f80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   45f84:	ldr	r1, [r1, #4]
   45f88:	cmp	r0, r1
   45f8c:	movw	r0, #0
   45f90:	moveq	r0, #1
   45f94:	and	r0, r0, #1
   45f98:	strb	r0, [sp, #70]	; 0x46
   45f9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   45fa0:	ldr	r0, [r0, #8]
   45fa4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   45fa8:	ldr	r1, [r1, #8]
   45fac:	cmp	r0, r1
   45fb0:	movw	r0, #0
   45fb4:	moveq	r0, #1
   45fb8:	and	r0, r0, #1
   45fbc:	strb	r0, [sp, #69]	; 0x45
   45fc0:	ldr	r0, [fp, #-20]	; 0xffffffec
   45fc4:	ldr	r0, [r0, #12]
   45fc8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   45fcc:	ldr	r1, [r1, #12]
   45fd0:	cmp	r0, r1
   45fd4:	movw	r0, #0
   45fd8:	moveq	r0, #1
   45fdc:	and	r0, r0, #1
   45fe0:	strb	r0, [sp, #68]	; 0x44
   45fe4:	ldr	r0, [fp, #-20]	; 0xffffffec
   45fe8:	ldr	r0, [r0, #16]
   45fec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   45ff0:	ldr	r1, [r1, #16]
   45ff4:	cmp	r0, r1
   45ff8:	movw	r0, #0
   45ffc:	moveq	r0, #1
   46000:	and	r0, r0, #1
   46004:	strb	r0, [sp, #67]	; 0x43
   46008:	ldr	r0, [fp, #-20]	; 0xffffffec
   4600c:	ldr	r0, [r0, #20]
   46010:	ldr	r1, [fp, #-24]	; 0xffffffe8
   46014:	ldr	r1, [r1, #20]
   46018:	cmp	r0, r1
   4601c:	movw	r0, #0
   46020:	moveq	r0, #1
   46024:	and	r0, r0, #1
   46028:	strb	r0, [sp, #66]	; 0x42
   4602c:	ldrb	r0, [sp, #71]	; 0x47
   46030:	tst	r0, #1
   46034:	movw	r0, #0
   46038:	str	r0, [sp, #60]	; 0x3c
   4603c:	beq	46098 <__assert_fail@plt+0x334e0>
   46040:	ldrb	r0, [sp, #70]	; 0x46
   46044:	tst	r0, #1
   46048:	movw	r0, #0
   4604c:	str	r0, [sp, #60]	; 0x3c
   46050:	beq	46098 <__assert_fail@plt+0x334e0>
   46054:	ldrb	r0, [sp, #69]	; 0x45
   46058:	tst	r0, #1
   4605c:	movw	r0, #0
   46060:	str	r0, [sp, #60]	; 0x3c
   46064:	bne	46098 <__assert_fail@plt+0x334e0>
   46068:	ldrb	r0, [sp, #68]	; 0x44
   4606c:	tst	r0, #1
   46070:	movw	r0, #0
   46074:	str	r0, [sp, #60]	; 0x3c
   46078:	beq	46098 <__assert_fail@plt+0x334e0>
   4607c:	ldrb	r0, [sp, #67]	; 0x43
   46080:	tst	r0, #1
   46084:	movw	r0, #0
   46088:	str	r0, [sp, #60]	; 0x3c
   4608c:	beq	46098 <__assert_fail@plt+0x334e0>
   46090:	ldrb	r0, [sp, #66]	; 0x42
   46094:	str	r0, [sp, #60]	; 0x3c
   46098:	ldr	r0, [sp, #60]	; 0x3c
   4609c:	and	r0, r0, #1
   460a0:	strb	r0, [sp, #65]	; 0x41
   460a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   460a8:	bl	3d73c <__assert_fail@plt+0x2ab84>
   460ac:	tst	r0, #1
   460b0:	bne	460b8 <__assert_fail@plt+0x33500>
   460b4:	b	46358 <__assert_fail@plt+0x337a0>
   460b8:	movw	r0, #47452	; 0xb95c
   460bc:	movt	r0, #7
   460c0:	bl	12864 <gettext@plt>
   460c4:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   460c8:	movw	r0, #47485	; 0xb97d
   460cc:	movt	r0, #7
   460d0:	bl	12864 <gettext@plt>
   460d4:	add	r2, sp, #79	; 0x4f
   460d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   460dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   460e0:	str	r0, [sp, #56]	; 0x38
   460e4:	mov	r0, r1
   460e8:	mov	r1, r3
   460ec:	movw	r3, #100	; 0x64
   460f0:	bl	46360 <__assert_fail@plt+0x337a8>
   460f4:	ldr	r1, [sp, #56]	; 0x38
   460f8:	str	r0, [sp, #52]	; 0x34
   460fc:	mov	r0, r1
   46100:	ldr	r1, [sp, #52]	; 0x34
   46104:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   46108:	movw	r0, #47515	; 0xb99b
   4610c:	movt	r0, #7
   46110:	bl	12864 <gettext@plt>
   46114:	add	r2, sp, #79	; 0x4f
   46118:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4611c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   46120:	str	r0, [sp, #48]	; 0x30
   46124:	mov	r0, r1
   46128:	mov	r1, r3
   4612c:	movw	r3, #100	; 0x64
   46130:	bl	46360 <__assert_fail@plt+0x337a8>
   46134:	ldr	r1, [sp, #48]	; 0x30
   46138:	str	r0, [sp, #44]	; 0x2c
   4613c:	mov	r0, r1
   46140:	ldr	r1, [sp, #44]	; 0x2c
   46144:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   46148:	add	r0, sp, #79	; 0x4f
   4614c:	ldrb	r1, [sp, #66]	; 0x42
   46150:	tst	r1, #1
   46154:	movw	r1, #47602	; 0xb9f2
   46158:	movt	r1, #7
   4615c:	movw	r2, #29909	; 0x74d5
   46160:	movt	r2, #7
   46164:	movne	r1, r2
   46168:	ldrb	r3, [sp, #67]	; 0x43
   4616c:	tst	r3, #1
   46170:	movw	r3, #47604	; 0xb9f4
   46174:	movt	r3, #7
   46178:	mov	ip, r3
   4617c:	movne	ip, r2
   46180:	ldrb	lr, [sp, #68]	; 0x44
   46184:	tst	lr, #1
   46188:	mov	lr, r3
   4618c:	movne	lr, r2
   46190:	ldrb	r4, [sp, #69]	; 0x45
   46194:	tst	r4, #1
   46198:	mov	r4, r3
   4619c:	movne	r4, r2
   461a0:	ldrb	r5, [sp, #70]	; 0x46
   461a4:	tst	r5, #1
   461a8:	mov	r5, r3
   461ac:	movne	r5, r2
   461b0:	ldrb	r6, [sp, #71]	; 0x47
   461b4:	tst	r6, #1
   461b8:	movne	r3, r2
   461bc:	movw	r2, #100	; 0x64
   461c0:	str	r1, [sp, #40]	; 0x28
   461c4:	mov	r1, r2
   461c8:	movw	r2, #47545	; 0xb9b9
   461cc:	movt	r2, #7
   461d0:	ldr	r6, [sp, #40]	; 0x28
   461d4:	str	r3, [sp, #36]	; 0x24
   461d8:	mov	r3, r6
   461dc:	str	ip, [sp]
   461e0:	str	lr, [sp, #4]
   461e4:	str	r4, [sp, #8]
   461e8:	str	r5, [sp, #12]
   461ec:	ldr	ip, [sp, #36]	; 0x24
   461f0:	str	ip, [sp, #16]
   461f4:	bl	128e8 <snprintf@plt>
   461f8:	str	r0, [sp, #72]	; 0x48
   461fc:	ldr	r0, [sp, #72]	; 0x48
   46200:	movw	r1, #0
   46204:	cmp	r1, r0
   46208:	bgt	46298 <__assert_fail@plt+0x336e0>
   4620c:	ldr	r0, [sp, #72]	; 0x48
   46210:	movw	r1, #99	; 0x63
   46214:	cmp	r1, r0
   46218:	bcs	46224 <__assert_fail@plt+0x3366c>
   4621c:	movw	r0, #99	; 0x63
   46220:	str	r0, [sp, #72]	; 0x48
   46224:	b	46228 <__assert_fail@plt+0x33670>
   46228:	ldr	r0, [sp, #72]	; 0x48
   4622c:	movw	r1, #0
   46230:	cmp	r1, r0
   46234:	movw	r0, #0
   46238:	str	r0, [sp, #32]
   4623c:	bge	46264 <__assert_fail@plt+0x336ac>
   46240:	ldr	r0, [sp, #72]	; 0x48
   46244:	sub	r0, r0, #1
   46248:	add	r1, sp, #79	; 0x4f
   4624c:	add	r0, r1, r0
   46250:	ldrb	r0, [r0]
   46254:	cmp	r0, #32
   46258:	movw	r0, #0
   4625c:	moveq	r0, #1
   46260:	str	r0, [sp, #32]
   46264:	ldr	r0, [sp, #32]
   46268:	tst	r0, #1
   4626c:	beq	46284 <__assert_fail@plt+0x336cc>
   46270:	ldr	r0, [sp, #72]	; 0x48
   46274:	mvn	r1, #0
   46278:	add	r0, r0, r1
   4627c:	str	r0, [sp, #72]	; 0x48
   46280:	b	46228 <__assert_fail@plt+0x33670>
   46284:	ldr	r0, [sp, #72]	; 0x48
   46288:	add	r1, sp, #79	; 0x4f
   4628c:	add	r0, r1, r0
   46290:	movw	r1, #0
   46294:	strb	r1, [r0]
   46298:	add	r1, sp, #79	; 0x4f
   4629c:	movw	r0, #47760	; 0xba90
   462a0:	movt	r0, #7
   462a4:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   462a8:	movw	r0, #47607	; 0xb9f7
   462ac:	movt	r0, #7
   462b0:	bl	12864 <gettext@plt>
   462b4:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   462b8:	ldrb	r0, [sp, #65]	; 0x41
   462bc:	tst	r0, #1
   462c0:	beq	462d4 <__assert_fail@plt+0x3371c>
   462c4:	movw	r0, #47631	; 0xba0f
   462c8:	movt	r0, #7
   462cc:	bl	12864 <gettext@plt>
   462d0:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   462d4:	ldrb	r0, [sp, #68]	; 0x44
   462d8:	tst	r0, #1
   462dc:	bne	462fc <__assert_fail@plt+0x33744>
   462e0:	ldrb	r0, [sp, #67]	; 0x43
   462e4:	tst	r0, #1
   462e8:	bne	462fc <__assert_fail@plt+0x33744>
   462ec:	movw	r0, #47681	; 0xba41
   462f0:	movt	r0, #7
   462f4:	bl	12864 <gettext@plt>
   462f8:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   462fc:	movw	r0, #47720	; 0xba68
   46300:	movt	r0, #7
   46304:	bl	12864 <gettext@plt>
   46308:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   4630c:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   46310:	tst	r0, #1
   46314:	beq	4632c <__assert_fail@plt+0x33774>
   46318:	movw	r0, #47764	; 0xba94
   4631c:	movt	r0, #7
   46320:	bl	12864 <gettext@plt>
   46324:	str	r0, [sp, #28]
   46328:	b	4633c <__assert_fail@plt+0x33784>
   4632c:	movw	r0, #47783	; 0xbaa7
   46330:	movt	r0, #7
   46334:	bl	12864 <gettext@plt>
   46338:	str	r0, [sp, #28]
   4633c:	ldr	r0, [sp, #28]
   46340:	movw	r1, #47753	; 0xba89
   46344:	movt	r1, #7
   46348:	str	r0, [sp, #24]
   4634c:	mov	r0, r1
   46350:	ldr	r1, [sp, #24]
   46354:	bl	3d754 <__assert_fail@plt+0x2ab9c>
   46358:	sub	sp, fp, #16
   4635c:	pop	{r4, r5, r6, sl, fp, pc}
   46360:	push	{fp, lr}
   46364:	mov	fp, sp
   46368:	sub	sp, sp, #72	; 0x48
   4636c:	str	r0, [fp, #-4]
   46370:	str	r1, [fp, #-8]
   46374:	str	r2, [fp, #-12]
   46378:	str	r3, [fp, #-16]
   4637c:	ldr	r0, [fp, #-12]
   46380:	ldr	r1, [fp, #-16]
   46384:	ldr	r3, [fp, #-4]
   46388:	movw	r2, #47800	; 0xbab8
   4638c:	movt	r2, #7
   46390:	movw	ip, #0
   46394:	str	ip, [sp]
   46398:	str	ip, [sp, #4]
   4639c:	bl	71390 <__assert_fail@plt+0x5e7d8>
   463a0:	str	r0, [fp, #-20]	; 0xffffffec
   463a4:	ldr	r0, [fp, #-8]
   463a8:	movw	r1, #0
   463ac:	cmp	r0, r1
   463b0:	beq	46470 <__assert_fail@plt+0x338b8>
   463b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   463b8:	ldr	r1, [fp, #-16]
   463bc:	cmp	r0, r1
   463c0:	bge	46470 <__assert_fail@plt+0x338b8>
   463c4:	ldr	r0, [fp, #-8]
   463c8:	ldr	r0, [r0, #176]	; 0xb0
   463cc:	cmp	r0, #0
   463d0:	beq	46470 <__assert_fail@plt+0x338b8>
   463d4:	ldr	r0, [fp, #-8]
   463d8:	ldr	r0, [r0, #24]
   463dc:	str	r0, [fp, #-24]	; 0xffffffe8
   463e0:	ldr	r0, [fp, #-8]
   463e4:	ldr	r0, [r0, #164]	; 0xa4
   463e8:	cmp	r0, #0
   463ec:	beq	46420 <__assert_fail@plt+0x33868>
   463f0:	ldr	r0, [fp, #-8]
   463f4:	ldr	r0, [r0, #176]	; 0xb0
   463f8:	cmp	r0, #0
   463fc:	bne	46420 <__assert_fail@plt+0x33868>
   46400:	ldr	r0, [fp, #-8]
   46404:	ldr	r0, [r0, #20]
   46408:	movw	r1, #0
   4640c:	cmp	r1, r0
   46410:	bge	46420 <__assert_fail@plt+0x33868>
   46414:	ldr	r0, [fp, #-24]	; 0xffffffe8
   46418:	add	r0, r0, #3600	; 0xe10
   4641c:	str	r0, [fp, #-24]	; 0xffffffe8
   46420:	add	r1, sp, #21
   46424:	ldr	r0, [fp, #-12]
   46428:	ldr	r2, [fp, #-20]	; 0xffffffec
   4642c:	add	r0, r0, r2
   46430:	ldr	r2, [fp, #-16]
   46434:	ldr	r3, [fp, #-20]	; 0xffffffec
   46438:	sub	r2, r2, r3
   4643c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46440:	str	r0, [sp, #16]
   46444:	mov	r0, r3
   46448:	str	r2, [sp, #12]
   4644c:	bl	45220 <__assert_fail@plt+0x32668>
   46450:	ldr	r1, [sp, #16]
   46454:	str	r0, [sp, #8]
   46458:	mov	r0, r1
   4645c:	ldr	r1, [sp, #12]
   46460:	movw	r2, #47826	; 0xbad2
   46464:	movt	r2, #7
   46468:	ldr	r3, [sp, #8]
   4646c:	bl	128e8 <snprintf@plt>
   46470:	ldr	r0, [fp, #-12]
   46474:	mov	sp, fp
   46478:	pop	{fp, pc}
   4647c:	push	{r4, sl, fp, lr}
   46480:	add	fp, sp, #8
   46484:	sub	sp, sp, #64	; 0x40
   46488:	sub	r3, fp, #33	; 0x21
   4648c:	str	r0, [fp, #-12]
   46490:	str	r1, [fp, #-16]
   46494:	str	r2, [fp, #-20]	; 0xffffffec
   46498:	ldr	r0, [fp, #-16]
   4649c:	ldr	r1, [fp, #-20]	; 0xffffffec
   464a0:	ldr	r2, [fp, #-12]
   464a4:	ldr	r2, [r2, #20]
   464a8:	str	r0, [sp, #32]
   464ac:	mov	r0, r2
   464b0:	str	r1, [sp, #28]
   464b4:	mov	r1, r3
   464b8:	bl	46524 <__assert_fail@plt+0x3396c>
   464bc:	ldr	r1, [fp, #-12]
   464c0:	ldr	r1, [r1, #16]
   464c4:	add	r1, r1, #1
   464c8:	ldr	r2, [fp, #-12]
   464cc:	ldr	r2, [r2, #12]
   464d0:	ldr	r3, [sp, #32]
   464d4:	str	r0, [sp, #24]
   464d8:	mov	r0, r3
   464dc:	ldr	ip, [sp, #28]
   464e0:	str	r1, [sp, #20]
   464e4:	mov	r1, ip
   464e8:	movw	lr, #47833	; 0xbad9
   464ec:	movt	lr, #7
   464f0:	str	r2, [sp, #16]
   464f4:	mov	r2, lr
   464f8:	ldr	r3, [sp, #24]
   464fc:	ldr	lr, [sp, #20]
   46500:	str	lr, [sp]
   46504:	ldr	r4, [sp, #16]
   46508:	str	r4, [sp, #4]
   4650c:	bl	128e8 <snprintf@plt>
   46510:	ldr	r1, [fp, #-16]
   46514:	str	r0, [sp, #12]
   46518:	mov	r0, r1
   4651c:	sub	sp, fp, #8
   46520:	pop	{r4, sl, fp, pc}
   46524:	push	{fp, lr}
   46528:	mov	fp, sp
   4652c:	sub	sp, sp, #32
   46530:	str	r0, [fp, #-4]
   46534:	str	r1, [fp, #-8]
   46538:	ldr	r0, [fp, #-8]
   4653c:	ldr	r1, [fp, #-4]
   46540:	movw	r2, #47854	; 0xbaee
   46544:	movt	r2, #7
   46548:	add	r3, r2, #1
   4654c:	movw	ip, #63635	; 0xf893
   46550:	movt	ip, #65535	; 0xffff
   46554:	cmp	r1, ip
   46558:	movgt	r2, r3
   4655c:	movw	r3, #34079	; 0x851f
   46560:	movt	r3, #20971	; 0x51eb
   46564:	smmul	r1, r1, r3
   46568:	asr	ip, r1, #5
   4656c:	add	r1, ip, r1, lsr #31
   46570:	add	r1, r1, #19
   46574:	str	r0, [fp, #-12]
   46578:	mov	r0, r1
   4657c:	str	r2, [sp, #16]
   46580:	str	r3, [sp, #12]
   46584:	bl	129b4 <abs@plt>
   46588:	ldr	r1, [fp, #-4]
   4658c:	ldr	r2, [sp, #12]
   46590:	smmul	r3, r1, r2
   46594:	asr	ip, r3, #5
   46598:	add	r3, ip, r3, lsr #31
   4659c:	mov	ip, #100	; 0x64
   465a0:	mls	r1, r3, ip, r1
   465a4:	str	r0, [sp, #8]
   465a8:	mov	r0, r1
   465ac:	bl	129b4 <abs@plt>
   465b0:	ldr	r1, [fp, #-12]
   465b4:	str	r0, [sp, #4]
   465b8:	mov	r0, r1
   465bc:	ldr	r1, [sp, #16]
   465c0:	ldr	r2, [sp, #8]
   465c4:	ldr	r3, [sp, #4]
   465c8:	bl	12a5c <sprintf@plt>
   465cc:	ldr	r1, [fp, #-8]
   465d0:	str	r0, [sp]
   465d4:	mov	r0, r1
   465d8:	mov	sp, fp
   465dc:	pop	{fp, pc}
   465e0:	push	{fp, lr}
   465e4:	mov	fp, sp
   465e8:	sub	sp, sp, #24
   465ec:	str	r0, [fp, #-4]
   465f0:	ldr	r0, [fp, #-4]
   465f4:	movw	r1, #0
   465f8:	cmp	r0, r1
   465fc:	bne	46620 <__assert_fail@plt+0x33a68>
   46600:	movw	r0, #55080	; 0xd728
   46604:	movt	r0, #8
   46608:	ldr	r1, [r0]
   4660c:	movw	r0, #47864	; 0xbaf8
   46610:	movt	r0, #7
   46614:	bl	12b4c <fputs@plt>
   46618:	str	r0, [sp, #8]
   4661c:	bl	12b64 <abort@plt>
   46620:	ldr	r0, [fp, #-4]
   46624:	movw	r1, #47	; 0x2f
   46628:	bl	12a14 <strrchr@plt>
   4662c:	str	r0, [fp, #-8]
   46630:	ldr	r0, [fp, #-8]
   46634:	movw	r1, #0
   46638:	cmp	r0, r1
   4663c:	beq	46650 <__assert_fail@plt+0x33a98>
   46640:	ldr	r0, [fp, #-8]
   46644:	add	r0, r0, #1
   46648:	str	r0, [sp, #4]
   4664c:	b	46658 <__assert_fail@plt+0x33aa0>
   46650:	ldr	r0, [fp, #-4]
   46654:	str	r0, [sp, #4]
   46658:	ldr	r0, [sp, #4]
   4665c:	str	r0, [sp, #12]
   46660:	ldr	r0, [sp, #12]
   46664:	ldr	r1, [fp, #-4]
   46668:	sub	r0, r0, r1
   4666c:	cmp	r0, #7
   46670:	blt	466dc <__assert_fail@plt+0x33b24>
   46674:	ldr	r0, [sp, #12]
   46678:	mvn	r1, #6
   4667c:	add	r0, r0, r1
   46680:	movw	r1, #47920	; 0xbb30
   46684:	movt	r1, #7
   46688:	movw	r2, #7
   4668c:	bl	12b58 <strncmp@plt>
   46690:	cmp	r0, #0
   46694:	bne	466dc <__assert_fail@plt+0x33b24>
   46698:	ldr	r0, [sp, #12]
   4669c:	str	r0, [fp, #-4]
   466a0:	ldr	r0, [sp, #12]
   466a4:	movw	r1, #47928	; 0xbb38
   466a8:	movt	r1, #7
   466ac:	movw	r2, #3
   466b0:	bl	12b58 <strncmp@plt>
   466b4:	cmp	r0, #0
   466b8:	bne	466d8 <__assert_fail@plt+0x33b20>
   466bc:	ldr	r0, [sp, #12]
   466c0:	add	r0, r0, #3
   466c4:	str	r0, [fp, #-4]
   466c8:	ldr	r0, [fp, #-4]
   466cc:	movw	r1, #55064	; 0xd718
   466d0:	movt	r1, #8
   466d4:	str	r0, [r1]
   466d8:	b	466dc <__assert_fail@plt+0x33b24>
   466dc:	ldr	r0, [fp, #-4]
   466e0:	movw	r1, #57120	; 0xdf20
   466e4:	movt	r1, #8
   466e8:	str	r0, [r1]
   466ec:	ldr	r0, [fp, #-4]
   466f0:	movw	r1, #55072	; 0xd720
   466f4:	movt	r1, #8
   466f8:	str	r0, [r1]
   466fc:	mov	sp, fp
   46700:	pop	{fp, pc}
   46704:	push	{fp, lr}
   46708:	mov	fp, sp
   4670c:	sub	sp, sp, #24
   46710:	str	r0, [fp, #-4]
   46714:	bl	128d0 <__errno_location@plt>
   46718:	ldr	r0, [r0]
   4671c:	str	r0, [fp, #-8]
   46720:	ldr	r0, [fp, #-4]
   46724:	movw	r1, #0
   46728:	cmp	r0, r1
   4672c:	beq	4673c <__assert_fail@plt+0x33b84>
   46730:	ldr	r0, [fp, #-4]
   46734:	str	r0, [sp, #8]
   46738:	b	4674c <__assert_fail@plt+0x33b94>
   4673c:	movw	r0, #57124	; 0xdf24
   46740:	movt	r0, #8
   46744:	str	r0, [sp, #8]
   46748:	b	4674c <__assert_fail@plt+0x33b94>
   4674c:	ldr	r0, [sp, #8]
   46750:	movw	r1, #48	; 0x30
   46754:	bl	4cf28 <__assert_fail@plt+0x3a370>
   46758:	str	r0, [sp, #12]
   4675c:	ldr	r0, [fp, #-8]
   46760:	str	r0, [sp, #4]
   46764:	bl	128d0 <__errno_location@plt>
   46768:	ldr	r1, [sp, #4]
   4676c:	str	r1, [r0]
   46770:	ldr	r0, [sp, #12]
   46774:	mov	sp, fp
   46778:	pop	{fp, pc}
   4677c:	sub	sp, sp, #8
   46780:	str	r0, [sp, #4]
   46784:	ldr	r0, [sp, #4]
   46788:	movw	r1, #0
   4678c:	cmp	r0, r1
   46790:	beq	467a0 <__assert_fail@plt+0x33be8>
   46794:	ldr	r0, [sp, #4]
   46798:	str	r0, [sp]
   4679c:	b	467b0 <__assert_fail@plt+0x33bf8>
   467a0:	movw	r0, #57124	; 0xdf24
   467a4:	movt	r0, #8
   467a8:	str	r0, [sp]
   467ac:	b	467b0 <__assert_fail@plt+0x33bf8>
   467b0:	ldr	r0, [sp]
   467b4:	ldr	r0, [r0]
   467b8:	add	sp, sp, #8
   467bc:	bx	lr
   467c0:	sub	sp, sp, #16
   467c4:	str	r0, [sp, #12]
   467c8:	str	r1, [sp, #8]
   467cc:	ldr	r0, [sp, #8]
   467d0:	ldr	r1, [sp, #12]
   467d4:	movw	r2, #0
   467d8:	cmp	r1, r2
   467dc:	str	r0, [sp, #4]
   467e0:	beq	467f0 <__assert_fail@plt+0x33c38>
   467e4:	ldr	r0, [sp, #12]
   467e8:	str	r0, [sp]
   467ec:	b	46800 <__assert_fail@plt+0x33c48>
   467f0:	movw	r0, #57124	; 0xdf24
   467f4:	movt	r0, #8
   467f8:	str	r0, [sp]
   467fc:	b	46800 <__assert_fail@plt+0x33c48>
   46800:	ldr	r0, [sp]
   46804:	ldr	r1, [sp, #4]
   46808:	str	r1, [r0]
   4680c:	add	sp, sp, #16
   46810:	bx	lr
   46814:	sub	sp, sp, #32
   46818:	str	r0, [sp, #28]
   4681c:	strb	r1, [sp, #27]
   46820:	str	r2, [sp, #20]
   46824:	ldrb	r0, [sp, #27]
   46828:	strb	r0, [sp, #19]
   4682c:	ldr	r0, [sp, #28]
   46830:	movw	r1, #0
   46834:	cmp	r0, r1
   46838:	beq	46848 <__assert_fail@plt+0x33c90>
   4683c:	ldr	r0, [sp, #28]
   46840:	str	r0, [sp]
   46844:	b	46858 <__assert_fail@plt+0x33ca0>
   46848:	movw	r0, #57124	; 0xdf24
   4684c:	movt	r0, #8
   46850:	str	r0, [sp]
   46854:	b	46858 <__assert_fail@plt+0x33ca0>
   46858:	ldr	r0, [sp]
   4685c:	add	r0, r0, #8
   46860:	ldrb	r1, [sp, #19]
   46864:	lsr	r1, r1, #5
   46868:	add	r0, r0, r1, lsl #2
   4686c:	str	r0, [sp, #12]
   46870:	ldrb	r0, [sp, #19]
   46874:	and	r0, r0, #31
   46878:	str	r0, [sp, #8]
   4687c:	ldr	r0, [sp, #12]
   46880:	ldr	r0, [r0]
   46884:	ldr	r1, [sp, #8]
   46888:	lsr	r0, r0, r1
   4688c:	and	r0, r0, #1
   46890:	str	r0, [sp, #4]
   46894:	ldr	r0, [sp, #20]
   46898:	and	r0, r0, #1
   4689c:	ldr	r1, [sp, #4]
   468a0:	eor	r0, r0, r1
   468a4:	ldr	r1, [sp, #8]
   468a8:	lsl	r0, r0, r1
   468ac:	ldr	r1, [sp, #12]
   468b0:	ldr	r2, [r1]
   468b4:	eor	r0, r2, r0
   468b8:	str	r0, [r1]
   468bc:	ldr	r0, [sp, #4]
   468c0:	add	sp, sp, #32
   468c4:	bx	lr
   468c8:	sub	sp, sp, #12
   468cc:	str	r0, [sp, #8]
   468d0:	str	r1, [sp, #4]
   468d4:	ldr	r0, [sp, #8]
   468d8:	movw	r1, #0
   468dc:	cmp	r0, r1
   468e0:	bne	468f0 <__assert_fail@plt+0x33d38>
   468e4:	movw	r0, #57124	; 0xdf24
   468e8:	movt	r0, #8
   468ec:	str	r0, [sp, #8]
   468f0:	ldr	r0, [sp, #8]
   468f4:	ldr	r0, [r0, #4]
   468f8:	str	r0, [sp]
   468fc:	ldr	r0, [sp, #4]
   46900:	ldr	r1, [sp, #8]
   46904:	str	r0, [r1, #4]
   46908:	ldr	r0, [sp]
   4690c:	add	sp, sp, #12
   46910:	bx	lr
   46914:	push	{fp, lr}
   46918:	mov	fp, sp
   4691c:	sub	sp, sp, #16
   46920:	str	r0, [fp, #-4]
   46924:	str	r1, [sp, #8]
   46928:	str	r2, [sp, #4]
   4692c:	ldr	r0, [fp, #-4]
   46930:	movw	r1, #0
   46934:	cmp	r0, r1
   46938:	bne	46948 <__assert_fail@plt+0x33d90>
   4693c:	movw	r0, #57124	; 0xdf24
   46940:	movt	r0, #8
   46944:	str	r0, [fp, #-4]
   46948:	ldr	r0, [fp, #-4]
   4694c:	movw	r1, #10
   46950:	str	r1, [r0]
   46954:	ldr	r0, [sp, #8]
   46958:	movw	r1, #0
   4695c:	cmp	r0, r1
   46960:	beq	46974 <__assert_fail@plt+0x33dbc>
   46964:	ldr	r0, [sp, #4]
   46968:	movw	r1, #0
   4696c:	cmp	r0, r1
   46970:	bne	46978 <__assert_fail@plt+0x33dc0>
   46974:	bl	12b64 <abort@plt>
   46978:	ldr	r0, [sp, #8]
   4697c:	ldr	r1, [fp, #-4]
   46980:	str	r0, [r1, #40]	; 0x28
   46984:	ldr	r0, [sp, #4]
   46988:	ldr	r1, [fp, #-4]
   4698c:	str	r0, [r1, #44]	; 0x2c
   46990:	mov	sp, fp
   46994:	pop	{fp, pc}
   46998:	push	{r4, r5, r6, sl, fp, lr}
   4699c:	add	fp, sp, #16
   469a0:	sub	sp, sp, #56	; 0x38
   469a4:	ldr	ip, [fp, #8]
   469a8:	str	r0, [fp, #-20]	; 0xffffffec
   469ac:	str	r1, [fp, #-24]	; 0xffffffe8
   469b0:	str	r2, [fp, #-28]	; 0xffffffe4
   469b4:	str	r3, [fp, #-32]	; 0xffffffe0
   469b8:	ldr	r0, [fp, #8]
   469bc:	movw	r1, #0
   469c0:	cmp	r0, r1
   469c4:	beq	469d4 <__assert_fail@plt+0x33e1c>
   469c8:	ldr	r0, [fp, #8]
   469cc:	str	r0, [sp, #24]
   469d0:	b	469e4 <__assert_fail@plt+0x33e2c>
   469d4:	movw	r0, #57124	; 0xdf24
   469d8:	movt	r0, #8
   469dc:	str	r0, [sp, #24]
   469e0:	b	469e4 <__assert_fail@plt+0x33e2c>
   469e4:	ldr	r0, [sp, #24]
   469e8:	str	r0, [sp, #36]	; 0x24
   469ec:	bl	128d0 <__errno_location@plt>
   469f0:	ldr	r0, [r0]
   469f4:	str	r0, [sp, #32]
   469f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   469fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   46a00:	ldr	r2, [fp, #-28]	; 0xffffffe4
   46a04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   46a08:	ldr	ip, [sp, #36]	; 0x24
   46a0c:	ldr	ip, [ip]
   46a10:	ldr	lr, [sp, #36]	; 0x24
   46a14:	ldr	lr, [lr, #4]
   46a18:	ldr	r4, [sp, #36]	; 0x24
   46a1c:	add	r4, r4, #8
   46a20:	ldr	r5, [sp, #36]	; 0x24
   46a24:	ldr	r5, [r5, #40]	; 0x28
   46a28:	ldr	r6, [sp, #36]	; 0x24
   46a2c:	ldr	r6, [r6, #44]	; 0x2c
   46a30:	str	ip, [sp]
   46a34:	str	lr, [sp, #4]
   46a38:	str	r4, [sp, #8]
   46a3c:	str	r5, [sp, #12]
   46a40:	str	r6, [sp, #16]
   46a44:	bl	46a6c <__assert_fail@plt+0x33eb4>
   46a48:	str	r0, [sp, #28]
   46a4c:	ldr	r0, [sp, #32]
   46a50:	str	r0, [sp, #20]
   46a54:	bl	128d0 <__errno_location@plt>
   46a58:	ldr	r1, [sp, #20]
   46a5c:	str	r1, [r0]
   46a60:	ldr	r0, [sp, #28]
   46a64:	sub	sp, fp, #16
   46a68:	pop	{r4, r5, r6, sl, fp, pc}
   46a6c:	push	{r4, r5, r6, sl, fp, lr}
   46a70:	add	fp, sp, #16
   46a74:	sub	sp, sp, #160	; 0xa0
   46a78:	ldr	ip, [fp, #24]
   46a7c:	ldr	lr, [fp, #20]
   46a80:	ldr	r4, [fp, #16]
   46a84:	ldr	r5, [fp, #12]
   46a88:	ldr	r6, [fp, #8]
   46a8c:	str	r0, [fp, #-24]	; 0xffffffe8
   46a90:	str	r1, [fp, #-28]	; 0xffffffe4
   46a94:	str	r2, [fp, #-32]	; 0xffffffe0
   46a98:	str	r3, [fp, #-36]	; 0xffffffdc
   46a9c:	movw	r0, #0
   46aa0:	str	r0, [fp, #-44]	; 0xffffffd4
   46aa4:	str	r0, [fp, #-48]	; 0xffffffd0
   46aa8:	str	r0, [fp, #-52]	; 0xffffffcc
   46aac:	str	r0, [fp, #-56]	; 0xffffffc8
   46ab0:	movw	r0, #0
   46ab4:	strb	r0, [fp, #-57]	; 0xffffffc7
   46ab8:	str	ip, [sp, #72]	; 0x48
   46abc:	str	lr, [sp, #68]	; 0x44
   46ac0:	str	r4, [sp, #64]	; 0x40
   46ac4:	str	r5, [sp, #60]	; 0x3c
   46ac8:	str	r6, [sp, #56]	; 0x38
   46acc:	bl	12720 <__ctype_get_mb_cur_max@plt>
   46ad0:	cmp	r0, #1
   46ad4:	movw	r0, #0
   46ad8:	moveq	r0, #1
   46adc:	and	r0, r0, #1
   46ae0:	strb	r0, [fp, #-58]	; 0xffffffc6
   46ae4:	ldr	r0, [fp, #12]
   46ae8:	and	r0, r0, #2
   46aec:	cmp	r0, #0
   46af0:	movw	r0, #0
   46af4:	movne	r0, #1
   46af8:	and	r0, r0, #1
   46afc:	strb	r0, [fp, #-59]	; 0xffffffc5
   46b00:	movw	r0, #0
   46b04:	strb	r0, [fp, #-60]	; 0xffffffc4
   46b08:	strb	r0, [fp, #-61]	; 0xffffffc3
   46b0c:	movw	r0, #1
   46b10:	strb	r0, [fp, #-62]	; 0xffffffc2
   46b14:	ldr	r0, [fp, #8]
   46b18:	cmp	r0, #10
   46b1c:	str	r0, [sp, #52]	; 0x34
   46b20:	bhi	46d48 <__assert_fail@plt+0x34190>
   46b24:	add	r0, pc, #8
   46b28:	ldr	r1, [sp, #52]	; 0x34
   46b2c:	ldr	r0, [r0, r1, lsl #2]
   46b30:	mov	pc, r0
   46b34:	andeq	r6, r4, ip, lsr sp
   46b38:			; <UNDEFINED> instruction: 0x00046cb8
   46b3c:	ldrdeq	r6, [r4], -r8
   46b40:			; <UNDEFINED> instruction: 0x00046cb0
   46b44:	andeq	r6, r4, r0, asr #25
   46b48:	andeq	r6, r4, r0, ror fp
   46b4c:	andeq	r6, r4, r0, ror #22
   46b50:	ldrdeq	r6, [r4], -r4
   46b54:	andeq	r6, r4, r8, ror #23
   46b58:	andeq	r6, r4, r8, ror #23
   46b5c:	andeq	r6, r4, r8, ror #23
   46b60:	movw	r0, #5
   46b64:	str	r0, [fp, #8]
   46b68:	movw	r0, #1
   46b6c:	strb	r0, [fp, #-59]	; 0xffffffc5
   46b70:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   46b74:	tst	r0, #1
   46b78:	bne	46bb4 <__assert_fail@plt+0x33ffc>
   46b7c:	b	46b80 <__assert_fail@plt+0x33fc8>
   46b80:	ldr	r0, [fp, #-44]	; 0xffffffd4
   46b84:	ldr	r1, [fp, #-28]	; 0xffffffe4
   46b88:	cmp	r0, r1
   46b8c:	bcs	46ba4 <__assert_fail@plt+0x33fec>
   46b90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   46b94:	ldr	r1, [fp, #-44]	; 0xffffffd4
   46b98:	add	r0, r0, r1
   46b9c:	movw	r1, #34	; 0x22
   46ba0:	strb	r1, [r0]
   46ba4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   46ba8:	add	r0, r0, #1
   46bac:	str	r0, [fp, #-44]	; 0xffffffd4
   46bb0:	b	46bb4 <__assert_fail@plt+0x33ffc>
   46bb4:	movw	r0, #1
   46bb8:	strb	r0, [fp, #-57]	; 0xffffffc7
   46bbc:	movw	r0, #45395	; 0xb153
   46bc0:	movt	r0, #7
   46bc4:	str	r0, [fp, #-52]	; 0xffffffcc
   46bc8:	movw	r0, #1
   46bcc:	str	r0, [fp, #-56]	; 0xffffffc8
   46bd0:	b	46d4c <__assert_fail@plt+0x34194>
   46bd4:	movw	r0, #1
   46bd8:	strb	r0, [fp, #-57]	; 0xffffffc7
   46bdc:	movw	r0, #0
   46be0:	strb	r0, [fp, #-59]	; 0xffffffc5
   46be4:	b	46d4c <__assert_fail@plt+0x34194>
   46be8:	ldr	r0, [fp, #8]
   46bec:	cmp	r0, #10
   46bf0:	beq	46c1c <__assert_fail@plt+0x34064>
   46bf4:	ldr	r1, [fp, #8]
   46bf8:	movw	r0, #48008	; 0xbb88
   46bfc:	movt	r0, #7
   46c00:	bl	48c60 <__assert_fail@plt+0x360a8>
   46c04:	str	r0, [fp, #20]
   46c08:	ldr	r1, [fp, #8]
   46c0c:	movw	r0, #31741	; 0x7bfd
   46c10:	movt	r0, #7
   46c14:	bl	48c60 <__assert_fail@plt+0x360a8>
   46c18:	str	r0, [fp, #24]
   46c1c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   46c20:	tst	r0, #1
   46c24:	bne	46c90 <__assert_fail@plt+0x340d8>
   46c28:	ldr	r0, [fp, #20]
   46c2c:	str	r0, [fp, #-52]	; 0xffffffcc
   46c30:	ldr	r0, [fp, #-52]	; 0xffffffcc
   46c34:	ldrsb	r0, [r0]
   46c38:	cmp	r0, #0
   46c3c:	beq	46c8c <__assert_fail@plt+0x340d4>
   46c40:	b	46c44 <__assert_fail@plt+0x3408c>
   46c44:	ldr	r0, [fp, #-44]	; 0xffffffd4
   46c48:	ldr	r1, [fp, #-28]	; 0xffffffe4
   46c4c:	cmp	r0, r1
   46c50:	bcs	46c6c <__assert_fail@plt+0x340b4>
   46c54:	ldr	r0, [fp, #-52]	; 0xffffffcc
   46c58:	ldrb	r0, [r0]
   46c5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   46c60:	ldr	r2, [fp, #-44]	; 0xffffffd4
   46c64:	add	r1, r1, r2
   46c68:	strb	r0, [r1]
   46c6c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   46c70:	add	r0, r0, #1
   46c74:	str	r0, [fp, #-44]	; 0xffffffd4
   46c78:	b	46c7c <__assert_fail@plt+0x340c4>
   46c7c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   46c80:	add	r0, r0, #1
   46c84:	str	r0, [fp, #-52]	; 0xffffffcc
   46c88:	b	46c30 <__assert_fail@plt+0x34078>
   46c8c:	b	46c90 <__assert_fail@plt+0x340d8>
   46c90:	movw	r0, #1
   46c94:	strb	r0, [fp, #-57]	; 0xffffffc7
   46c98:	ldr	r0, [fp, #24]
   46c9c:	str	r0, [fp, #-52]	; 0xffffffcc
   46ca0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   46ca4:	bl	12888 <strlen@plt>
   46ca8:	str	r0, [fp, #-56]	; 0xffffffc8
   46cac:	b	46d4c <__assert_fail@plt+0x34194>
   46cb0:	movw	r0, #1
   46cb4:	strb	r0, [fp, #-57]	; 0xffffffc7
   46cb8:	movw	r0, #1
   46cbc:	strb	r0, [fp, #-59]	; 0xffffffc5
   46cc0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   46cc4:	tst	r0, #1
   46cc8:	bne	46cd4 <__assert_fail@plt+0x3411c>
   46ccc:	movw	r0, #1
   46cd0:	strb	r0, [fp, #-57]	; 0xffffffc7
   46cd4:	b	46cd8 <__assert_fail@plt+0x34120>
   46cd8:	movw	r0, #2
   46cdc:	str	r0, [fp, #8]
   46ce0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   46ce4:	tst	r0, #1
   46ce8:	bne	46d24 <__assert_fail@plt+0x3416c>
   46cec:	b	46cf0 <__assert_fail@plt+0x34138>
   46cf0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   46cf4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   46cf8:	cmp	r0, r1
   46cfc:	bcs	46d14 <__assert_fail@plt+0x3415c>
   46d00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   46d04:	ldr	r1, [fp, #-44]	; 0xffffffd4
   46d08:	add	r0, r0, r1
   46d0c:	movw	r1, #39	; 0x27
   46d10:	strb	r1, [r0]
   46d14:	ldr	r0, [fp, #-44]	; 0xffffffd4
   46d18:	add	r0, r0, #1
   46d1c:	str	r0, [fp, #-44]	; 0xffffffd4
   46d20:	b	46d24 <__assert_fail@plt+0x3416c>
   46d24:	movw	r0, #31741	; 0x7bfd
   46d28:	movt	r0, #7
   46d2c:	str	r0, [fp, #-52]	; 0xffffffcc
   46d30:	movw	r0, #1
   46d34:	str	r0, [fp, #-56]	; 0xffffffc8
   46d38:	b	46d4c <__assert_fail@plt+0x34194>
   46d3c:	movw	r0, #0
   46d40:	strb	r0, [fp, #-59]	; 0xffffffc5
   46d44:	b	46d4c <__assert_fail@plt+0x34194>
   46d48:	bl	12b64 <abort@plt>
   46d4c:	movw	r0, #0
   46d50:	str	r0, [fp, #-40]	; 0xffffffd8
   46d54:	ldr	r0, [fp, #-36]	; 0xffffffdc
   46d58:	cmn	r0, #1
   46d5c:	bne	46d88 <__assert_fail@plt+0x341d0>
   46d60:	ldr	r0, [fp, #-32]	; 0xffffffe0
   46d64:	ldr	r1, [fp, #-40]	; 0xffffffd8
   46d68:	add	r0, r0, r1
   46d6c:	ldrb	r0, [r0]
   46d70:	cmp	r0, #0
   46d74:	movw	r0, #0
   46d78:	moveq	r0, #1
   46d7c:	and	r0, r0, #1
   46d80:	str	r0, [sp, #48]	; 0x30
   46d84:	b	46da4 <__assert_fail@plt+0x341ec>
   46d88:	ldr	r0, [fp, #-40]	; 0xffffffd8
   46d8c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   46d90:	cmp	r0, r1
   46d94:	movw	r0, #0
   46d98:	moveq	r0, #1
   46d9c:	and	r0, r0, #1
   46da0:	str	r0, [sp, #48]	; 0x30
   46da4:	ldr	r0, [sp, #48]	; 0x30
   46da8:	cmp	r0, #0
   46dac:	movw	r0, #0
   46db0:	movne	r0, #1
   46db4:	mvn	r1, #0
   46db8:	eor	r0, r0, r1
   46dbc:	tst	r0, #1
   46dc0:	beq	47fac <__assert_fail@plt+0x353f4>
   46dc4:	movw	r0, #0
   46dc8:	strb	r0, [fp, #-65]	; 0xffffffbf
   46dcc:	strb	r0, [fp, #-66]	; 0xffffffbe
   46dd0:	strb	r0, [fp, #-67]	; 0xffffffbd
   46dd4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   46dd8:	tst	r0, #1
   46ddc:	beq	46e88 <__assert_fail@plt+0x342d0>
   46de0:	ldr	r0, [fp, #8]
   46de4:	cmp	r0, #2
   46de8:	beq	46e88 <__assert_fail@plt+0x342d0>
   46dec:	ldr	r0, [fp, #-56]	; 0xffffffc8
   46df0:	cmp	r0, #0
   46df4:	beq	46e88 <__assert_fail@plt+0x342d0>
   46df8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   46dfc:	ldr	r1, [fp, #-56]	; 0xffffffc8
   46e00:	add	r0, r0, r1
   46e04:	ldr	r1, [fp, #-36]	; 0xffffffdc
   46e08:	cmn	r1, #1
   46e0c:	str	r0, [sp, #44]	; 0x2c
   46e10:	bne	46e38 <__assert_fail@plt+0x34280>
   46e14:	ldr	r0, [fp, #-56]	; 0xffffffc8
   46e18:	movw	r1, #1
   46e1c:	cmp	r1, r0
   46e20:	bcs	46e38 <__assert_fail@plt+0x34280>
   46e24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   46e28:	bl	12888 <strlen@plt>
   46e2c:	str	r0, [fp, #-36]	; 0xffffffdc
   46e30:	str	r0, [sp, #40]	; 0x28
   46e34:	b	46e40 <__assert_fail@plt+0x34288>
   46e38:	ldr	r0, [fp, #-36]	; 0xffffffdc
   46e3c:	str	r0, [sp, #40]	; 0x28
   46e40:	ldr	r0, [sp, #40]	; 0x28
   46e44:	ldr	r1, [sp, #44]	; 0x2c
   46e48:	cmp	r1, r0
   46e4c:	bhi	46e88 <__assert_fail@plt+0x342d0>
   46e50:	ldr	r0, [fp, #-32]	; 0xffffffe0
   46e54:	ldr	r1, [fp, #-40]	; 0xffffffd8
   46e58:	add	r0, r0, r1
   46e5c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   46e60:	ldr	r2, [fp, #-56]	; 0xffffffc8
   46e64:	bl	12624 <memcmp@plt>
   46e68:	cmp	r0, #0
   46e6c:	bne	46e88 <__assert_fail@plt+0x342d0>
   46e70:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   46e74:	tst	r0, #1
   46e78:	beq	46e80 <__assert_fail@plt+0x342c8>
   46e7c:	b	4812c <__assert_fail@plt+0x35574>
   46e80:	movw	r0, #1
   46e84:	strb	r0, [fp, #-65]	; 0xffffffbf
   46e88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   46e8c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   46e90:	ldrb	r0, [r0, r1]
   46e94:	strb	r0, [fp, #-63]	; 0xffffffc1
   46e98:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   46e9c:	mov	r1, r0
   46ea0:	cmp	r0, #126	; 0x7e
   46ea4:	str	r1, [sp, #36]	; 0x24
   46ea8:	bhi	47718 <__assert_fail@plt+0x34b60>
   46eac:	add	r0, pc, #8
   46eb0:	ldr	r1, [sp, #36]	; 0x24
   46eb4:	ldr	r0, [r0, r1, lsl #2]
   46eb8:	mov	pc, r0
   46ebc:	strheq	r7, [r4], -r8
   46ec0:	andeq	r7, r4, r8, lsl r7
   46ec4:	andeq	r7, r4, r8, lsl r7
   46ec8:	andeq	r7, r4, r8, lsl r7
   46ecc:	andeq	r7, r4, r8, lsl r7
   46ed0:	andeq	r7, r4, r8, lsl r7
   46ed4:	andeq	r7, r4, r8, lsl r7
   46ed8:	andeq	r7, r4, r0, asr #9
   46edc:	andeq	r7, r4, ip, asr #9
   46ee0:	strdeq	r7, [r4], -ip
   46ee4:	andeq	r7, r4, r4, ror #9
   46ee8:	andeq	r7, r4, r8, lsl #10
   46eec:	ldrdeq	r7, [r4], -r8
   46ef0:	strdeq	r7, [r4], -r0
   46ef4:	andeq	r7, r4, r8, lsl r7
   46ef8:	andeq	r7, r4, r8, lsl r7
   46efc:	andeq	r7, r4, r8, lsl r7
   46f00:	andeq	r7, r4, r8, lsl r7
   46f04:	andeq	r7, r4, r8, lsl r7
   46f08:	andeq	r7, r4, r8, lsl r7
   46f0c:	andeq	r7, r4, r8, lsl r7
   46f10:	andeq	r7, r4, r8, lsl r7
   46f14:	andeq	r7, r4, r8, lsl r7
   46f18:	andeq	r7, r4, r8, lsl r7
   46f1c:	andeq	r7, r4, r8, lsl r7
   46f20:	andeq	r7, r4, r8, lsl r7
   46f24:	andeq	r7, r4, r8, lsl r7
   46f28:	andeq	r7, r4, r8, lsl r7
   46f2c:	andeq	r7, r4, r8, lsl r7
   46f30:	andeq	r7, r4, r8, lsl r7
   46f34:	andeq	r7, r4, r8, lsl r7
   46f38:	andeq	r7, r4, r8, lsl r7
   46f3c:	andeq	r7, r4, ip, ror #11
   46f40:	strdeq	r7, [r4], -r4
   46f44:	strdeq	r7, [r4], -r4
   46f48:	ldrdeq	r7, [r4], -r8
   46f4c:	strdeq	r7, [r4], -r4
   46f50:	andeq	r7, r4, ip, lsl #14
   46f54:	strdeq	r7, [r4], -r4
   46f58:	andeq	r7, r4, r4, lsl r6
   46f5c:	strdeq	r7, [r4], -r4
   46f60:	strdeq	r7, [r4], -r4
   46f64:	strdeq	r7, [r4], -r4
   46f68:	andeq	r7, r4, ip, lsl #14
   46f6c:	andeq	r7, r4, ip, lsl #14
   46f70:	andeq	r7, r4, ip, lsl #14
   46f74:	andeq	r7, r4, ip, lsl #14
   46f78:	andeq	r7, r4, ip, lsl #14
   46f7c:	andeq	r7, r4, ip, lsl #14
   46f80:	andeq	r7, r4, ip, lsl #14
   46f84:	andeq	r7, r4, ip, lsl #14
   46f88:	andeq	r7, r4, ip, lsl #14
   46f8c:	andeq	r7, r4, ip, lsl #14
   46f90:	andeq	r7, r4, ip, lsl #14
   46f94:	andeq	r7, r4, ip, lsl #14
   46f98:	andeq	r7, r4, ip, lsl #14
   46f9c:	andeq	r7, r4, ip, lsl #14
   46fa0:	andeq	r7, r4, ip, lsl #14
   46fa4:	andeq	r7, r4, ip, lsl #14
   46fa8:	strdeq	r7, [r4], -r4
   46fac:	strdeq	r7, [r4], -r4
   46fb0:	strdeq	r7, [r4], -r4
   46fb4:	strdeq	r7, [r4], -r4
   46fb8:	andeq	r7, r4, r4, asr #5
   46fbc:	andeq	r7, r4, r8, lsl r7
   46fc0:	andeq	r7, r4, ip, lsl #14
   46fc4:	andeq	r7, r4, ip, lsl #14
   46fc8:	andeq	r7, r4, ip, lsl #14
   46fcc:	andeq	r7, r4, ip, lsl #14
   46fd0:	andeq	r7, r4, ip, lsl #14
   46fd4:	andeq	r7, r4, ip, lsl #14
   46fd8:	andeq	r7, r4, ip, lsl #14
   46fdc:	andeq	r7, r4, ip, lsl #14
   46fe0:	andeq	r7, r4, ip, lsl #14
   46fe4:	andeq	r7, r4, ip, lsl #14
   46fe8:	andeq	r7, r4, ip, lsl #14
   46fec:	andeq	r7, r4, ip, lsl #14
   46ff0:	andeq	r7, r4, ip, lsl #14
   46ff4:	andeq	r7, r4, ip, lsl #14
   46ff8:	andeq	r7, r4, ip, lsl #14
   46ffc:	andeq	r7, r4, ip, lsl #14
   47000:	andeq	r7, r4, ip, lsl #14
   47004:	andeq	r7, r4, ip, lsl #14
   47008:	andeq	r7, r4, ip, lsl #14
   4700c:	andeq	r7, r4, ip, lsl #14
   47010:	andeq	r7, r4, ip, lsl #14
   47014:	andeq	r7, r4, ip, lsl #14
   47018:	andeq	r7, r4, ip, lsl #14
   4701c:	andeq	r7, r4, ip, lsl #14
   47020:	andeq	r7, r4, ip, lsl #14
   47024:	andeq	r7, r4, ip, lsl #14
   47028:	strdeq	r7, [r4], -r4
   4702c:	andeq	r7, r4, r4, lsl r5
   47030:	andeq	r7, r4, ip, lsl #14
   47034:	strdeq	r7, [r4], -r4
   47038:	andeq	r7, r4, ip, lsl #14
   4703c:	strdeq	r7, [r4], -r4
   47040:	andeq	r7, r4, ip, lsl #14
   47044:	andeq	r7, r4, ip, lsl #14
   47048:	andeq	r7, r4, ip, lsl #14
   4704c:	andeq	r7, r4, ip, lsl #14
   47050:	andeq	r7, r4, ip, lsl #14
   47054:	andeq	r7, r4, ip, lsl #14
   47058:	andeq	r7, r4, ip, lsl #14
   4705c:	andeq	r7, r4, ip, lsl #14
   47060:	andeq	r7, r4, ip, lsl #14
   47064:	andeq	r7, r4, ip, lsl #14
   47068:	andeq	r7, r4, ip, lsl #14
   4706c:	andeq	r7, r4, ip, lsl #14
   47070:	andeq	r7, r4, ip, lsl #14
   47074:	andeq	r7, r4, ip, lsl #14
   47078:	andeq	r7, r4, ip, lsl #14
   4707c:	andeq	r7, r4, ip, lsl #14
   47080:	andeq	r7, r4, ip, lsl #14
   47084:	andeq	r7, r4, ip, lsl #14
   47088:	andeq	r7, r4, ip, lsl #14
   4708c:	andeq	r7, r4, ip, lsl #14
   47090:	andeq	r7, r4, ip, lsl #14
   47094:	andeq	r7, r4, ip, lsl #14
   47098:	andeq	r7, r4, ip, lsl #14
   4709c:	andeq	r7, r4, ip, lsl #14
   470a0:	andeq	r7, r4, ip, lsl #14
   470a4:	andeq	r7, r4, ip, lsl #14
   470a8:	andeq	r7, r4, r4, lsr #11
   470ac:	strdeq	r7, [r4], -r4
   470b0:	andeq	r7, r4, r4, lsr #11
   470b4:	ldrdeq	r7, [r4], -r8
   470b8:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   470bc:	tst	r0, #1
   470c0:	beq	472a8 <__assert_fail@plt+0x346f0>
   470c4:	b	470c8 <__assert_fail@plt+0x34510>
   470c8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   470cc:	tst	r0, #1
   470d0:	beq	470d8 <__assert_fail@plt+0x34520>
   470d4:	b	4812c <__assert_fail@plt+0x35574>
   470d8:	movw	r0, #1
   470dc:	strb	r0, [fp, #-66]	; 0xffffffbe
   470e0:	ldr	r0, [fp, #8]
   470e4:	cmp	r0, #2
   470e8:	bne	4719c <__assert_fail@plt+0x345e4>
   470ec:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   470f0:	tst	r0, #1
   470f4:	bne	4719c <__assert_fail@plt+0x345e4>
   470f8:	b	470fc <__assert_fail@plt+0x34544>
   470fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   47100:	ldr	r1, [fp, #-28]	; 0xffffffe4
   47104:	cmp	r0, r1
   47108:	bcs	47120 <__assert_fail@plt+0x34568>
   4710c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   47110:	ldr	r1, [fp, #-44]	; 0xffffffd4
   47114:	add	r0, r0, r1
   47118:	movw	r1, #39	; 0x27
   4711c:	strb	r1, [r0]
   47120:	ldr	r0, [fp, #-44]	; 0xffffffd4
   47124:	add	r0, r0, #1
   47128:	str	r0, [fp, #-44]	; 0xffffffd4
   4712c:	b	47130 <__assert_fail@plt+0x34578>
   47130:	ldr	r0, [fp, #-44]	; 0xffffffd4
   47134:	ldr	r1, [fp, #-28]	; 0xffffffe4
   47138:	cmp	r0, r1
   4713c:	bcs	47154 <__assert_fail@plt+0x3459c>
   47140:	ldr	r0, [fp, #-24]	; 0xffffffe8
   47144:	ldr	r1, [fp, #-44]	; 0xffffffd4
   47148:	add	r0, r0, r1
   4714c:	movw	r1, #36	; 0x24
   47150:	strb	r1, [r0]
   47154:	ldr	r0, [fp, #-44]	; 0xffffffd4
   47158:	add	r0, r0, #1
   4715c:	str	r0, [fp, #-44]	; 0xffffffd4
   47160:	b	47164 <__assert_fail@plt+0x345ac>
   47164:	ldr	r0, [fp, #-44]	; 0xffffffd4
   47168:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4716c:	cmp	r0, r1
   47170:	bcs	47188 <__assert_fail@plt+0x345d0>
   47174:	ldr	r0, [fp, #-24]	; 0xffffffe8
   47178:	ldr	r1, [fp, #-44]	; 0xffffffd4
   4717c:	add	r0, r0, r1
   47180:	movw	r1, #39	; 0x27
   47184:	strb	r1, [r0]
   47188:	ldr	r0, [fp, #-44]	; 0xffffffd4
   4718c:	add	r0, r0, #1
   47190:	str	r0, [fp, #-44]	; 0xffffffd4
   47194:	movw	r0, #1
   47198:	strb	r0, [fp, #-60]	; 0xffffffc4
   4719c:	b	471a0 <__assert_fail@plt+0x345e8>
   471a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   471a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   471a8:	cmp	r0, r1
   471ac:	bcs	471c4 <__assert_fail@plt+0x3460c>
   471b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   471b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   471b8:	add	r0, r0, r1
   471bc:	movw	r1, #92	; 0x5c
   471c0:	strb	r1, [r0]
   471c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   471c8:	add	r0, r0, #1
   471cc:	str	r0, [fp, #-44]	; 0xffffffd4
   471d0:	b	471d4 <__assert_fail@plt+0x3461c>
   471d4:	ldr	r0, [fp, #8]
   471d8:	cmp	r0, #2
   471dc:	beq	4729c <__assert_fail@plt+0x346e4>
   471e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   471e4:	add	r0, r0, #1
   471e8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   471ec:	cmp	r0, r1
   471f0:	bcs	4729c <__assert_fail@plt+0x346e4>
   471f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   471f8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   471fc:	add	r1, r1, #1
   47200:	add	r0, r0, r1
   47204:	ldrb	r0, [r0]
   47208:	movw	r1, #48	; 0x30
   4720c:	cmp	r1, r0
   47210:	bgt	4729c <__assert_fail@plt+0x346e4>
   47214:	ldr	r0, [fp, #-32]	; 0xffffffe0
   47218:	ldr	r1, [fp, #-40]	; 0xffffffd8
   4721c:	add	r1, r1, #1
   47220:	add	r0, r0, r1
   47224:	ldrb	r0, [r0]
   47228:	cmp	r0, #57	; 0x39
   4722c:	bgt	4729c <__assert_fail@plt+0x346e4>
   47230:	b	47234 <__assert_fail@plt+0x3467c>
   47234:	ldr	r0, [fp, #-44]	; 0xffffffd4
   47238:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4723c:	cmp	r0, r1
   47240:	bcs	47258 <__assert_fail@plt+0x346a0>
   47244:	ldr	r0, [fp, #-24]	; 0xffffffe8
   47248:	ldr	r1, [fp, #-44]	; 0xffffffd4
   4724c:	add	r0, r0, r1
   47250:	movw	r1, #48	; 0x30
   47254:	strb	r1, [r0]
   47258:	ldr	r0, [fp, #-44]	; 0xffffffd4
   4725c:	add	r0, r0, #1
   47260:	str	r0, [fp, #-44]	; 0xffffffd4
   47264:	b	47268 <__assert_fail@plt+0x346b0>
   47268:	ldr	r0, [fp, #-44]	; 0xffffffd4
   4726c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   47270:	cmp	r0, r1
   47274:	bcs	4728c <__assert_fail@plt+0x346d4>
   47278:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4727c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   47280:	add	r0, r0, r1
   47284:	movw	r1, #48	; 0x30
   47288:	strb	r1, [r0]
   4728c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   47290:	add	r0, r0, #1
   47294:	str	r0, [fp, #-44]	; 0xffffffd4
   47298:	b	4729c <__assert_fail@plt+0x346e4>
   4729c:	movw	r0, #48	; 0x30
   472a0:	strb	r0, [fp, #-63]	; 0xffffffc1
   472a4:	b	472c0 <__assert_fail@plt+0x34708>
   472a8:	ldr	r0, [fp, #12]
   472ac:	and	r0, r0, #1
   472b0:	cmp	r0, #0
   472b4:	beq	472bc <__assert_fail@plt+0x34704>
   472b8:	b	47f9c <__assert_fail@plt+0x353e4>
   472bc:	b	472c0 <__assert_fail@plt+0x34708>
   472c0:	b	47d38 <__assert_fail@plt+0x35180>
   472c4:	ldr	r0, [fp, #8]
   472c8:	cmp	r0, #2
   472cc:	str	r0, [sp, #32]
   472d0:	beq	472e8 <__assert_fail@plt+0x34730>
   472d4:	b	472d8 <__assert_fail@plt+0x34720>
   472d8:	ldr	r0, [sp, #32]
   472dc:	cmp	r0, #5
   472e0:	beq	472fc <__assert_fail@plt+0x34744>
   472e4:	b	474b8 <__assert_fail@plt+0x34900>
   472e8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   472ec:	tst	r0, #1
   472f0:	beq	472f8 <__assert_fail@plt+0x34740>
   472f4:	b	4812c <__assert_fail@plt+0x35574>
   472f8:	b	474bc <__assert_fail@plt+0x34904>
   472fc:	ldr	r0, [fp, #12]
   47300:	and	r0, r0, #4
   47304:	cmp	r0, #0
   47308:	beq	474b4 <__assert_fail@plt+0x348fc>
   4730c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   47310:	add	r0, r0, #2
   47314:	ldr	r1, [fp, #-36]	; 0xffffffdc
   47318:	cmp	r0, r1
   4731c:	bcs	474b4 <__assert_fail@plt+0x348fc>
   47320:	ldr	r0, [fp, #-32]	; 0xffffffe0
   47324:	ldr	r1, [fp, #-40]	; 0xffffffd8
   47328:	add	r1, r1, #1
   4732c:	add	r0, r0, r1
   47330:	ldrb	r0, [r0]
   47334:	cmp	r0, #63	; 0x3f
   47338:	bne	474b4 <__assert_fail@plt+0x348fc>
   4733c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   47340:	ldr	r1, [fp, #-40]	; 0xffffffd8
   47344:	add	r0, r1, r0
   47348:	ldrb	r0, [r0, #2]
   4734c:	mov	r1, r0
   47350:	cmp	r0, #33	; 0x21
   47354:	str	r1, [sp, #28]
   47358:	beq	473a8 <__assert_fail@plt+0x347f0>
   4735c:	b	47360 <__assert_fail@plt+0x347a8>
   47360:	ldr	r0, [sp, #28]
   47364:	sub	r1, r0, #39	; 0x27
   47368:	cmp	r1, #3
   4736c:	bcc	473a8 <__assert_fail@plt+0x347f0>
   47370:	b	47374 <__assert_fail@plt+0x347bc>
   47374:	ldr	r0, [sp, #28]
   47378:	cmp	r0, #45	; 0x2d
   4737c:	beq	473a8 <__assert_fail@plt+0x347f0>
   47380:	b	47384 <__assert_fail@plt+0x347cc>
   47384:	ldr	r0, [sp, #28]
   47388:	cmp	r0, #47	; 0x2f
   4738c:	beq	473a8 <__assert_fail@plt+0x347f0>
   47390:	b	47394 <__assert_fail@plt+0x347dc>
   47394:	ldr	r0, [sp, #28]
   47398:	sub	r1, r0, #60	; 0x3c
   4739c:	cmp	r1, #2
   473a0:	bhi	474ac <__assert_fail@plt+0x348f4>
   473a4:	b	473a8 <__assert_fail@plt+0x347f0>
   473a8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   473ac:	tst	r0, #1
   473b0:	beq	473b8 <__assert_fail@plt+0x34800>
   473b4:	b	4812c <__assert_fail@plt+0x35574>
   473b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   473bc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   473c0:	add	r1, r1, #2
   473c4:	add	r0, r0, r1
   473c8:	ldrb	r0, [r0]
   473cc:	strb	r0, [fp, #-63]	; 0xffffffc1
   473d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   473d4:	add	r0, r0, #2
   473d8:	str	r0, [fp, #-40]	; 0xffffffd8
   473dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   473e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   473e4:	cmp	r0, r1
   473e8:	bcs	47400 <__assert_fail@plt+0x34848>
   473ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   473f0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   473f4:	add	r0, r0, r1
   473f8:	movw	r1, #63	; 0x3f
   473fc:	strb	r1, [r0]
   47400:	ldr	r0, [fp, #-44]	; 0xffffffd4
   47404:	add	r0, r0, #1
   47408:	str	r0, [fp, #-44]	; 0xffffffd4
   4740c:	b	47410 <__assert_fail@plt+0x34858>
   47410:	ldr	r0, [fp, #-44]	; 0xffffffd4
   47414:	ldr	r1, [fp, #-28]	; 0xffffffe4
   47418:	cmp	r0, r1
   4741c:	bcs	47434 <__assert_fail@plt+0x3487c>
   47420:	ldr	r0, [fp, #-24]	; 0xffffffe8
   47424:	ldr	r1, [fp, #-44]	; 0xffffffd4
   47428:	add	r0, r0, r1
   4742c:	movw	r1, #34	; 0x22
   47430:	strb	r1, [r0]
   47434:	ldr	r0, [fp, #-44]	; 0xffffffd4
   47438:	add	r0, r0, #1
   4743c:	str	r0, [fp, #-44]	; 0xffffffd4
   47440:	b	47444 <__assert_fail@plt+0x3488c>
   47444:	ldr	r0, [fp, #-44]	; 0xffffffd4
   47448:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4744c:	cmp	r0, r1
   47450:	bcs	47468 <__assert_fail@plt+0x348b0>
   47454:	ldr	r0, [fp, #-24]	; 0xffffffe8
   47458:	ldr	r1, [fp, #-44]	; 0xffffffd4
   4745c:	add	r0, r0, r1
   47460:	movw	r1, #34	; 0x22
   47464:	strb	r1, [r0]
   47468:	ldr	r0, [fp, #-44]	; 0xffffffd4
   4746c:	add	r0, r0, #1
   47470:	str	r0, [fp, #-44]	; 0xffffffd4
   47474:	b	47478 <__assert_fail@plt+0x348c0>
   47478:	ldr	r0, [fp, #-44]	; 0xffffffd4
   4747c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   47480:	cmp	r0, r1
   47484:	bcs	4749c <__assert_fail@plt+0x348e4>
   47488:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4748c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   47490:	add	r0, r0, r1
   47494:	movw	r1, #63	; 0x3f
   47498:	strb	r1, [r0]
   4749c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   474a0:	add	r0, r0, #1
   474a4:	str	r0, [fp, #-44]	; 0xffffffd4
   474a8:	b	474b0 <__assert_fail@plt+0x348f8>
   474ac:	b	474b0 <__assert_fail@plt+0x348f8>
   474b0:	b	474b4 <__assert_fail@plt+0x348fc>
   474b4:	b	474bc <__assert_fail@plt+0x34904>
   474b8:	b	474bc <__assert_fail@plt+0x34904>
   474bc:	b	47d38 <__assert_fail@plt+0x35180>
   474c0:	movw	r0, #97	; 0x61
   474c4:	strb	r0, [fp, #-64]	; 0xffffffc0
   474c8:	b	47588 <__assert_fail@plt+0x349d0>
   474cc:	movw	r0, #98	; 0x62
   474d0:	strb	r0, [fp, #-64]	; 0xffffffc0
   474d4:	b	47588 <__assert_fail@plt+0x349d0>
   474d8:	movw	r0, #102	; 0x66
   474dc:	strb	r0, [fp, #-64]	; 0xffffffc0
   474e0:	b	47588 <__assert_fail@plt+0x349d0>
   474e4:	movw	r0, #110	; 0x6e
   474e8:	strb	r0, [fp, #-64]	; 0xffffffc0
   474ec:	b	47568 <__assert_fail@plt+0x349b0>
   474f0:	movw	r0, #114	; 0x72
   474f4:	strb	r0, [fp, #-64]	; 0xffffffc0
   474f8:	b	47568 <__assert_fail@plt+0x349b0>
   474fc:	movw	r0, #116	; 0x74
   47500:	strb	r0, [fp, #-64]	; 0xffffffc0
   47504:	b	47568 <__assert_fail@plt+0x349b0>
   47508:	movw	r0, #118	; 0x76
   4750c:	strb	r0, [fp, #-64]	; 0xffffffc0
   47510:	b	47588 <__assert_fail@plt+0x349d0>
   47514:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   47518:	strb	r0, [fp, #-64]	; 0xffffffc0
   4751c:	ldr	r0, [fp, #8]
   47520:	cmp	r0, #2
   47524:	bne	4753c <__assert_fail@plt+0x34984>
   47528:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   4752c:	tst	r0, #1
   47530:	beq	47538 <__assert_fail@plt+0x34980>
   47534:	b	4812c <__assert_fail@plt+0x35574>
   47538:	b	47ec0 <__assert_fail@plt+0x35308>
   4753c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   47540:	tst	r0, #1
   47544:	beq	47564 <__assert_fail@plt+0x349ac>
   47548:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   4754c:	tst	r0, #1
   47550:	beq	47564 <__assert_fail@plt+0x349ac>
   47554:	ldr	r0, [fp, #-56]	; 0xffffffc8
   47558:	cmp	r0, #0
   4755c:	beq	47564 <__assert_fail@plt+0x349ac>
   47560:	b	47ec0 <__assert_fail@plt+0x35308>
   47564:	b	47568 <__assert_fail@plt+0x349b0>
   47568:	ldr	r0, [fp, #8]
   4756c:	cmp	r0, #2
   47570:	bne	47584 <__assert_fail@plt+0x349cc>
   47574:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   47578:	tst	r0, #1
   4757c:	beq	47584 <__assert_fail@plt+0x349cc>
   47580:	b	4812c <__assert_fail@plt+0x35574>
   47584:	b	47588 <__assert_fail@plt+0x349d0>
   47588:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   4758c:	tst	r0, #1
   47590:	beq	475a0 <__assert_fail@plt+0x349e8>
   47594:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   47598:	strb	r0, [fp, #-63]	; 0xffffffc1
   4759c:	b	47dac <__assert_fail@plt+0x351f4>
   475a0:	b	47d38 <__assert_fail@plt+0x35180>
   475a4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   475a8:	cmn	r0, #1
   475ac:	bne	475c4 <__assert_fail@plt+0x34a0c>
   475b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   475b4:	ldrb	r0, [r0, #1]
   475b8:	cmp	r0, #0
   475bc:	beq	475d4 <__assert_fail@plt+0x34a1c>
   475c0:	b	475d0 <__assert_fail@plt+0x34a18>
   475c4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   475c8:	cmp	r0, #1
   475cc:	beq	475d4 <__assert_fail@plt+0x34a1c>
   475d0:	b	47d38 <__assert_fail@plt+0x35180>
   475d4:	b	475d8 <__assert_fail@plt+0x34a20>
   475d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   475dc:	cmp	r0, #0
   475e0:	beq	475e8 <__assert_fail@plt+0x34a30>
   475e4:	b	47d38 <__assert_fail@plt+0x35180>
   475e8:	b	475ec <__assert_fail@plt+0x34a34>
   475ec:	movw	r0, #1
   475f0:	strb	r0, [fp, #-67]	; 0xffffffbd
   475f4:	ldr	r0, [fp, #8]
   475f8:	cmp	r0, #2
   475fc:	bne	47610 <__assert_fail@plt+0x34a58>
   47600:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   47604:	tst	r0, #1
   47608:	beq	47610 <__assert_fail@plt+0x34a58>
   4760c:	b	4812c <__assert_fail@plt+0x35574>
   47610:	b	47d38 <__assert_fail@plt+0x35180>
   47614:	movw	r0, #1
   47618:	strb	r0, [fp, #-61]	; 0xffffffc3
   4761c:	strb	r0, [fp, #-67]	; 0xffffffbd
   47620:	ldr	r0, [fp, #8]
   47624:	cmp	r0, #2
   47628:	bne	47708 <__assert_fail@plt+0x34b50>
   4762c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   47630:	tst	r0, #1
   47634:	beq	4763c <__assert_fail@plt+0x34a84>
   47638:	b	4812c <__assert_fail@plt+0x35574>
   4763c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   47640:	cmp	r0, #0
   47644:	beq	47664 <__assert_fail@plt+0x34aac>
   47648:	ldr	r0, [fp, #-48]	; 0xffffffd0
   4764c:	cmp	r0, #0
   47650:	bne	47664 <__assert_fail@plt+0x34aac>
   47654:	ldr	r0, [fp, #-28]	; 0xffffffe4
   47658:	str	r0, [fp, #-48]	; 0xffffffd0
   4765c:	movw	r0, #0
   47660:	str	r0, [fp, #-28]	; 0xffffffe4
   47664:	b	47668 <__assert_fail@plt+0x34ab0>
   47668:	ldr	r0, [fp, #-44]	; 0xffffffd4
   4766c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   47670:	cmp	r0, r1
   47674:	bcs	4768c <__assert_fail@plt+0x34ad4>
   47678:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4767c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   47680:	add	r0, r0, r1
   47684:	movw	r1, #39	; 0x27
   47688:	strb	r1, [r0]
   4768c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   47690:	add	r0, r0, #1
   47694:	str	r0, [fp, #-44]	; 0xffffffd4
   47698:	b	4769c <__assert_fail@plt+0x34ae4>
   4769c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   476a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   476a4:	cmp	r0, r1
   476a8:	bcs	476c0 <__assert_fail@plt+0x34b08>
   476ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   476b0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   476b4:	add	r0, r0, r1
   476b8:	movw	r1, #92	; 0x5c
   476bc:	strb	r1, [r0]
   476c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   476c4:	add	r0, r0, #1
   476c8:	str	r0, [fp, #-44]	; 0xffffffd4
   476cc:	b	476d0 <__assert_fail@plt+0x34b18>
   476d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   476d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   476d8:	cmp	r0, r1
   476dc:	bcs	476f4 <__assert_fail@plt+0x34b3c>
   476e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   476e4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   476e8:	add	r0, r0, r1
   476ec:	movw	r1, #39	; 0x27
   476f0:	strb	r1, [r0]
   476f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   476f8:	add	r0, r0, #1
   476fc:	str	r0, [fp, #-44]	; 0xffffffd4
   47700:	movw	r0, #0
   47704:	strb	r0, [fp, #-60]	; 0xffffffc4
   47708:	b	47d38 <__assert_fail@plt+0x35180>
   4770c:	movw	r0, #1
   47710:	strb	r0, [fp, #-67]	; 0xffffffbd
   47714:	b	47d38 <__assert_fail@plt+0x35180>
   47718:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   4771c:	tst	r0, #1
   47720:	beq	47760 <__assert_fail@plt+0x34ba8>
   47724:	mov	r0, #1
   47728:	str	r0, [fp, #-72]	; 0xffffffb8
   4772c:	bl	12834 <__ctype_b_loc@plt>
   47730:	ldr	r0, [r0]
   47734:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   47738:	mov	r2, r1
   4773c:	add	r0, r0, r1, lsl #1
   47740:	ldrh	r0, [r0]
   47744:	and	r0, r0, #16384	; 0x4000
   47748:	cmp	r0, #0
   4774c:	movw	r0, #0
   47750:	movne	r0, #1
   47754:	and	r0, r0, #1
   47758:	strb	r0, [fp, #-73]	; 0xffffffb7
   4775c:	b	479ec <__assert_fail@plt+0x34e34>
   47760:	sub	r0, fp, #84	; 0x54
   47764:	movw	r1, #0
   47768:	and	r1, r1, #255	; 0xff
   4776c:	movw	r2, #8
   47770:	bl	12900 <memset@plt>
   47774:	movw	r0, #0
   47778:	str	r0, [fp, #-72]	; 0xffffffb8
   4777c:	movw	r0, #1
   47780:	strb	r0, [fp, #-73]	; 0xffffffb7
   47784:	ldr	r0, [fp, #-36]	; 0xffffffdc
   47788:	cmn	r0, #1
   4778c:	bne	4779c <__assert_fail@plt+0x34be4>
   47790:	ldr	r0, [fp, #-32]	; 0xffffffe0
   47794:	bl	12888 <strlen@plt>
   47798:	str	r0, [fp, #-36]	; 0xffffffdc
   4779c:	b	477a0 <__assert_fail@plt+0x34be8>
   477a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   477a4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   477a8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   477ac:	add	r1, r1, r2
   477b0:	add	r1, r0, r1
   477b4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   477b8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   477bc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   477c0:	add	r2, r2, r3
   477c4:	sub	r2, r0, r2
   477c8:	add	r0, sp, #88	; 0x58
   477cc:	sub	r3, fp, #84	; 0x54
   477d0:	bl	52860 <__assert_fail@plt+0x3fca8>
   477d4:	str	r0, [sp, #84]	; 0x54
   477d8:	ldr	r0, [sp, #84]	; 0x54
   477dc:	cmp	r0, #0
   477e0:	bne	477e8 <__assert_fail@plt+0x34c30>
   477e4:	b	479e8 <__assert_fail@plt+0x34e30>
   477e8:	ldr	r0, [sp, #84]	; 0x54
   477ec:	cmn	r0, #1
   477f0:	bne	47800 <__assert_fail@plt+0x34c48>
   477f4:	movw	r0, #0
   477f8:	strb	r0, [fp, #-73]	; 0xffffffb7
   477fc:	b	479e8 <__assert_fail@plt+0x34e30>
   47800:	ldr	r0, [sp, #84]	; 0x54
   47804:	cmn	r0, #2
   47808:	bne	4787c <__assert_fail@plt+0x34cc4>
   4780c:	movw	r0, #0
   47810:	strb	r0, [fp, #-73]	; 0xffffffb7
   47814:	ldr	r0, [fp, #-40]	; 0xffffffd8
   47818:	ldr	r1, [fp, #-72]	; 0xffffffb8
   4781c:	add	r0, r0, r1
   47820:	ldr	r1, [fp, #-36]	; 0xffffffdc
   47824:	cmp	r0, r1
   47828:	movw	r0, #0
   4782c:	str	r0, [sp, #24]
   47830:	bcs	4785c <__assert_fail@plt+0x34ca4>
   47834:	ldr	r0, [fp, #-32]	; 0xffffffe0
   47838:	ldr	r1, [fp, #-40]	; 0xffffffd8
   4783c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   47840:	add	r1, r1, r2
   47844:	add	r0, r0, r1
   47848:	ldrb	r0, [r0]
   4784c:	cmp	r0, #0
   47850:	movw	r0, #0
   47854:	movne	r0, #1
   47858:	str	r0, [sp, #24]
   4785c:	ldr	r0, [sp, #24]
   47860:	tst	r0, #1
   47864:	beq	47878 <__assert_fail@plt+0x34cc0>
   47868:	ldr	r0, [fp, #-72]	; 0xffffffb8
   4786c:	add	r0, r0, #1
   47870:	str	r0, [fp, #-72]	; 0xffffffb8
   47874:	b	47814 <__assert_fail@plt+0x34c5c>
   47878:	b	479e8 <__assert_fail@plt+0x34e30>
   4787c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   47880:	tst	r0, #1
   47884:	beq	47990 <__assert_fail@plt+0x34dd8>
   47888:	ldr	r0, [fp, #8]
   4788c:	cmp	r0, #2
   47890:	bne	47990 <__assert_fail@plt+0x34dd8>
   47894:	movw	r0, #1
   47898:	str	r0, [sp, #80]	; 0x50
   4789c:	ldr	r0, [sp, #80]	; 0x50
   478a0:	ldr	r1, [sp, #84]	; 0x54
   478a4:	cmp	r0, r1
   478a8:	bcs	4798c <__assert_fail@plt+0x34dd4>
   478ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   478b0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   478b4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   478b8:	add	r1, r1, r2
   478bc:	ldr	r2, [sp, #80]	; 0x50
   478c0:	add	r1, r1, r2
   478c4:	ldrb	r0, [r0, r1]
   478c8:	sub	r0, r0, #91	; 0x5b
   478cc:	cmp	r0, #33	; 0x21
   478d0:	str	r0, [sp, #20]
   478d4:	bhi	47974 <__assert_fail@plt+0x34dbc>
   478d8:	add	r0, pc, #8
   478dc:	ldr	r1, [sp, #20]
   478e0:	ldr	r0, [r0, r1, lsl #2]
   478e4:	mov	pc, r0
   478e8:	andeq	r7, r4, r0, ror r9
   478ec:	andeq	r7, r4, r0, ror r9
   478f0:	andeq	r7, r4, r4, ror r9
   478f4:	andeq	r7, r4, r0, ror r9
   478f8:	andeq	r7, r4, r4, ror r9
   478fc:	andeq	r7, r4, r0, ror r9
   47900:	andeq	r7, r4, r4, ror r9
   47904:	andeq	r7, r4, r4, ror r9
   47908:	andeq	r7, r4, r4, ror r9
   4790c:	andeq	r7, r4, r4, ror r9
   47910:	andeq	r7, r4, r4, ror r9
   47914:	andeq	r7, r4, r4, ror r9
   47918:	andeq	r7, r4, r4, ror r9
   4791c:	andeq	r7, r4, r4, ror r9
   47920:	andeq	r7, r4, r4, ror r9
   47924:	andeq	r7, r4, r4, ror r9
   47928:	andeq	r7, r4, r4, ror r9
   4792c:	andeq	r7, r4, r4, ror r9
   47930:	andeq	r7, r4, r4, ror r9
   47934:	andeq	r7, r4, r4, ror r9
   47938:	andeq	r7, r4, r4, ror r9
   4793c:	andeq	r7, r4, r4, ror r9
   47940:	andeq	r7, r4, r4, ror r9
   47944:	andeq	r7, r4, r4, ror r9
   47948:	andeq	r7, r4, r4, ror r9
   4794c:	andeq	r7, r4, r4, ror r9
   47950:	andeq	r7, r4, r4, ror r9
   47954:	andeq	r7, r4, r4, ror r9
   47958:	andeq	r7, r4, r4, ror r9
   4795c:	andeq	r7, r4, r4, ror r9
   47960:	andeq	r7, r4, r4, ror r9
   47964:	andeq	r7, r4, r4, ror r9
   47968:	andeq	r7, r4, r4, ror r9
   4796c:	andeq	r7, r4, r0, ror r9
   47970:	b	4812c <__assert_fail@plt+0x35574>
   47974:	b	47978 <__assert_fail@plt+0x34dc0>
   47978:	b	4797c <__assert_fail@plt+0x34dc4>
   4797c:	ldr	r0, [sp, #80]	; 0x50
   47980:	add	r0, r0, #1
   47984:	str	r0, [sp, #80]	; 0x50
   47988:	b	4789c <__assert_fail@plt+0x34ce4>
   4798c:	b	47990 <__assert_fail@plt+0x34dd8>
   47990:	ldr	r0, [sp, #88]	; 0x58
   47994:	bl	126c0 <iswprint@plt>
   47998:	cmp	r0, #0
   4799c:	bne	479a8 <__assert_fail@plt+0x34df0>
   479a0:	movw	r0, #0
   479a4:	strb	r0, [fp, #-73]	; 0xffffffb7
   479a8:	ldr	r0, [sp, #84]	; 0x54
   479ac:	ldr	r1, [fp, #-72]	; 0xffffffb8
   479b0:	add	r0, r1, r0
   479b4:	str	r0, [fp, #-72]	; 0xffffffb8
   479b8:	b	479bc <__assert_fail@plt+0x34e04>
   479bc:	b	479c0 <__assert_fail@plt+0x34e08>
   479c0:	b	479c4 <__assert_fail@plt+0x34e0c>
   479c4:	sub	r0, fp, #84	; 0x54
   479c8:	bl	12600 <mbsinit@plt>
   479cc:	cmp	r0, #0
   479d0:	movw	r0, #0
   479d4:	movne	r0, #1
   479d8:	mvn	r1, #0
   479dc:	eor	r0, r0, r1
   479e0:	tst	r0, #1
   479e4:	bne	477a0 <__assert_fail@plt+0x34be8>
   479e8:	b	479ec <__assert_fail@plt+0x34e34>
   479ec:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   479f0:	and	r0, r0, #1
   479f4:	strb	r0, [fp, #-67]	; 0xffffffbd
   479f8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   479fc:	movw	r1, #1
   47a00:	cmp	r1, r0
   47a04:	bcc	47a20 <__assert_fail@plt+0x34e68>
   47a08:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   47a0c:	tst	r0, #1
   47a10:	beq	47d34 <__assert_fail@plt+0x3517c>
   47a14:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   47a18:	tst	r0, #1
   47a1c:	bne	47d34 <__assert_fail@plt+0x3517c>
   47a20:	ldr	r0, [fp, #-40]	; 0xffffffd8
   47a24:	ldr	r1, [fp, #-72]	; 0xffffffb8
   47a28:	add	r0, r0, r1
   47a2c:	str	r0, [sp, #76]	; 0x4c
   47a30:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   47a34:	tst	r0, #1
   47a38:	beq	47be8 <__assert_fail@plt+0x35030>
   47a3c:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   47a40:	tst	r0, #1
   47a44:	bne	47be8 <__assert_fail@plt+0x35030>
   47a48:	b	47a4c <__assert_fail@plt+0x34e94>
   47a4c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   47a50:	tst	r0, #1
   47a54:	beq	47a5c <__assert_fail@plt+0x34ea4>
   47a58:	b	4812c <__assert_fail@plt+0x35574>
   47a5c:	movw	r0, #1
   47a60:	strb	r0, [fp, #-66]	; 0xffffffbe
   47a64:	ldr	r0, [fp, #8]
   47a68:	cmp	r0, #2
   47a6c:	bne	47b20 <__assert_fail@plt+0x34f68>
   47a70:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   47a74:	tst	r0, #1
   47a78:	bne	47b20 <__assert_fail@plt+0x34f68>
   47a7c:	b	47a80 <__assert_fail@plt+0x34ec8>
   47a80:	ldr	r0, [fp, #-44]	; 0xffffffd4
   47a84:	ldr	r1, [fp, #-28]	; 0xffffffe4
   47a88:	cmp	r0, r1
   47a8c:	bcs	47aa4 <__assert_fail@plt+0x34eec>
   47a90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   47a94:	ldr	r1, [fp, #-44]	; 0xffffffd4
   47a98:	add	r0, r0, r1
   47a9c:	movw	r1, #39	; 0x27
   47aa0:	strb	r1, [r0]
   47aa4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   47aa8:	add	r0, r0, #1
   47aac:	str	r0, [fp, #-44]	; 0xffffffd4
   47ab0:	b	47ab4 <__assert_fail@plt+0x34efc>
   47ab4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   47ab8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   47abc:	cmp	r0, r1
   47ac0:	bcs	47ad8 <__assert_fail@plt+0x34f20>
   47ac4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   47ac8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   47acc:	add	r0, r0, r1
   47ad0:	movw	r1, #36	; 0x24
   47ad4:	strb	r1, [r0]
   47ad8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   47adc:	add	r0, r0, #1
   47ae0:	str	r0, [fp, #-44]	; 0xffffffd4
   47ae4:	b	47ae8 <__assert_fail@plt+0x34f30>
   47ae8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   47aec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   47af0:	cmp	r0, r1
   47af4:	bcs	47b0c <__assert_fail@plt+0x34f54>
   47af8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   47afc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   47b00:	add	r0, r0, r1
   47b04:	movw	r1, #39	; 0x27
   47b08:	strb	r1, [r0]
   47b0c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   47b10:	add	r0, r0, #1
   47b14:	str	r0, [fp, #-44]	; 0xffffffd4
   47b18:	movw	r0, #1
   47b1c:	strb	r0, [fp, #-60]	; 0xffffffc4
   47b20:	b	47b24 <__assert_fail@plt+0x34f6c>
   47b24:	ldr	r0, [fp, #-44]	; 0xffffffd4
   47b28:	ldr	r1, [fp, #-28]	; 0xffffffe4
   47b2c:	cmp	r0, r1
   47b30:	bcs	47b48 <__assert_fail@plt+0x34f90>
   47b34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   47b38:	ldr	r1, [fp, #-44]	; 0xffffffd4
   47b3c:	add	r0, r0, r1
   47b40:	movw	r1, #92	; 0x5c
   47b44:	strb	r1, [r0]
   47b48:	ldr	r0, [fp, #-44]	; 0xffffffd4
   47b4c:	add	r0, r0, #1
   47b50:	str	r0, [fp, #-44]	; 0xffffffd4
   47b54:	b	47b58 <__assert_fail@plt+0x34fa0>
   47b58:	b	47b5c <__assert_fail@plt+0x34fa4>
   47b5c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   47b60:	ldr	r1, [fp, #-28]	; 0xffffffe4
   47b64:	cmp	r0, r1
   47b68:	bcs	47b88 <__assert_fail@plt+0x34fd0>
   47b6c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   47b70:	asr	r0, r0, #6
   47b74:	add	r0, r0, #48	; 0x30
   47b78:	ldr	r1, [fp, #-24]	; 0xffffffe8
   47b7c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   47b80:	add	r1, r1, r2
   47b84:	strb	r0, [r1]
   47b88:	ldr	r0, [fp, #-44]	; 0xffffffd4
   47b8c:	add	r0, r0, #1
   47b90:	str	r0, [fp, #-44]	; 0xffffffd4
   47b94:	b	47b98 <__assert_fail@plt+0x34fe0>
   47b98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   47b9c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   47ba0:	cmp	r0, r1
   47ba4:	bcs	47bc8 <__assert_fail@plt+0x35010>
   47ba8:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   47bac:	asr	r0, r0, #3
   47bb0:	and	r0, r0, #7
   47bb4:	add	r0, r0, #48	; 0x30
   47bb8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   47bbc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   47bc0:	add	r1, r1, r2
   47bc4:	strb	r0, [r1]
   47bc8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   47bcc:	add	r0, r0, #1
   47bd0:	str	r0, [fp, #-44]	; 0xffffffd4
   47bd4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   47bd8:	and	r0, r0, #7
   47bdc:	add	r0, r0, #48	; 0x30
   47be0:	strb	r0, [fp, #-63]	; 0xffffffc1
   47be4:	b	47c34 <__assert_fail@plt+0x3507c>
   47be8:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   47bec:	tst	r0, #1
   47bf0:	beq	47c30 <__assert_fail@plt+0x35078>
   47bf4:	b	47bf8 <__assert_fail@plt+0x35040>
   47bf8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   47bfc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   47c00:	cmp	r0, r1
   47c04:	bcs	47c1c <__assert_fail@plt+0x35064>
   47c08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   47c0c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   47c10:	add	r0, r0, r1
   47c14:	movw	r1, #92	; 0x5c
   47c18:	strb	r1, [r0]
   47c1c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   47c20:	add	r0, r0, #1
   47c24:	str	r0, [fp, #-44]	; 0xffffffd4
   47c28:	movw	r0, #0
   47c2c:	strb	r0, [fp, #-65]	; 0xffffffbf
   47c30:	b	47c34 <__assert_fail@plt+0x3507c>
   47c34:	ldr	r0, [sp, #76]	; 0x4c
   47c38:	ldr	r1, [fp, #-40]	; 0xffffffd8
   47c3c:	add	r1, r1, #1
   47c40:	cmp	r0, r1
   47c44:	bhi	47c4c <__assert_fail@plt+0x35094>
   47c48:	b	47d30 <__assert_fail@plt+0x35178>
   47c4c:	b	47c50 <__assert_fail@plt+0x35098>
   47c50:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   47c54:	tst	r0, #1
   47c58:	beq	47cd8 <__assert_fail@plt+0x35120>
   47c5c:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   47c60:	tst	r0, #1
   47c64:	bne	47cd8 <__assert_fail@plt+0x35120>
   47c68:	b	47c6c <__assert_fail@plt+0x350b4>
   47c6c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   47c70:	ldr	r1, [fp, #-28]	; 0xffffffe4
   47c74:	cmp	r0, r1
   47c78:	bcs	47c90 <__assert_fail@plt+0x350d8>
   47c7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   47c80:	ldr	r1, [fp, #-44]	; 0xffffffd4
   47c84:	add	r0, r0, r1
   47c88:	movw	r1, #39	; 0x27
   47c8c:	strb	r1, [r0]
   47c90:	ldr	r0, [fp, #-44]	; 0xffffffd4
   47c94:	add	r0, r0, #1
   47c98:	str	r0, [fp, #-44]	; 0xffffffd4
   47c9c:	b	47ca0 <__assert_fail@plt+0x350e8>
   47ca0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   47ca4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   47ca8:	cmp	r0, r1
   47cac:	bcs	47cc4 <__assert_fail@plt+0x3510c>
   47cb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   47cb4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   47cb8:	add	r0, r0, r1
   47cbc:	movw	r1, #39	; 0x27
   47cc0:	strb	r1, [r0]
   47cc4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   47cc8:	add	r0, r0, #1
   47ccc:	str	r0, [fp, #-44]	; 0xffffffd4
   47cd0:	movw	r0, #0
   47cd4:	strb	r0, [fp, #-60]	; 0xffffffc4
   47cd8:	b	47cdc <__assert_fail@plt+0x35124>
   47cdc:	b	47ce0 <__assert_fail@plt+0x35128>
   47ce0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   47ce4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   47ce8:	cmp	r0, r1
   47cec:	bcs	47d04 <__assert_fail@plt+0x3514c>
   47cf0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   47cf4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   47cf8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   47cfc:	add	r1, r1, r2
   47d00:	strb	r0, [r1]
   47d04:	ldr	r0, [fp, #-44]	; 0xffffffd4
   47d08:	add	r0, r0, #1
   47d0c:	str	r0, [fp, #-44]	; 0xffffffd4
   47d10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   47d14:	ldr	r1, [fp, #-40]	; 0xffffffd8
   47d18:	add	r1, r1, #1
   47d1c:	str	r1, [fp, #-40]	; 0xffffffd8
   47d20:	add	r0, r0, r1
   47d24:	ldrb	r0, [r0]
   47d28:	strb	r0, [fp, #-63]	; 0xffffffc1
   47d2c:	b	47a30 <__assert_fail@plt+0x34e78>
   47d30:	b	47ec0 <__assert_fail@plt+0x35308>
   47d34:	b	47d38 <__assert_fail@plt+0x35180>
   47d38:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   47d3c:	tst	r0, #1
   47d40:	beq	47d50 <__assert_fail@plt+0x35198>
   47d44:	ldr	r0, [fp, #8]
   47d48:	cmp	r0, #2
   47d4c:	bne	47d5c <__assert_fail@plt+0x351a4>
   47d50:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   47d54:	tst	r0, #1
   47d58:	beq	47d98 <__assert_fail@plt+0x351e0>
   47d5c:	ldr	r0, [fp, #16]
   47d60:	movw	r1, #0
   47d64:	cmp	r0, r1
   47d68:	beq	47d98 <__assert_fail@plt+0x351e0>
   47d6c:	ldr	r0, [fp, #16]
   47d70:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   47d74:	lsr	r1, r1, #5
   47d78:	add	r0, r0, r1, lsl #2
   47d7c:	ldr	r0, [r0]
   47d80:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   47d84:	and	r1, r1, #31
   47d88:	lsr	r0, r0, r1
   47d8c:	and	r0, r0, #1
   47d90:	cmp	r0, #0
   47d94:	bne	47da8 <__assert_fail@plt+0x351f0>
   47d98:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   47d9c:	tst	r0, #1
   47da0:	bne	47da8 <__assert_fail@plt+0x351f0>
   47da4:	b	47ec0 <__assert_fail@plt+0x35308>
   47da8:	b	47dac <__assert_fail@plt+0x351f4>
   47dac:	b	47db0 <__assert_fail@plt+0x351f8>
   47db0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   47db4:	tst	r0, #1
   47db8:	beq	47dc0 <__assert_fail@plt+0x35208>
   47dbc:	b	4812c <__assert_fail@plt+0x35574>
   47dc0:	movw	r0, #1
   47dc4:	strb	r0, [fp, #-66]	; 0xffffffbe
   47dc8:	ldr	r0, [fp, #8]
   47dcc:	cmp	r0, #2
   47dd0:	bne	47e84 <__assert_fail@plt+0x352cc>
   47dd4:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   47dd8:	tst	r0, #1
   47ddc:	bne	47e84 <__assert_fail@plt+0x352cc>
   47de0:	b	47de4 <__assert_fail@plt+0x3522c>
   47de4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   47de8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   47dec:	cmp	r0, r1
   47df0:	bcs	47e08 <__assert_fail@plt+0x35250>
   47df4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   47df8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   47dfc:	add	r0, r0, r1
   47e00:	movw	r1, #39	; 0x27
   47e04:	strb	r1, [r0]
   47e08:	ldr	r0, [fp, #-44]	; 0xffffffd4
   47e0c:	add	r0, r0, #1
   47e10:	str	r0, [fp, #-44]	; 0xffffffd4
   47e14:	b	47e18 <__assert_fail@plt+0x35260>
   47e18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   47e1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   47e20:	cmp	r0, r1
   47e24:	bcs	47e3c <__assert_fail@plt+0x35284>
   47e28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   47e2c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   47e30:	add	r0, r0, r1
   47e34:	movw	r1, #36	; 0x24
   47e38:	strb	r1, [r0]
   47e3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   47e40:	add	r0, r0, #1
   47e44:	str	r0, [fp, #-44]	; 0xffffffd4
   47e48:	b	47e4c <__assert_fail@plt+0x35294>
   47e4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   47e50:	ldr	r1, [fp, #-28]	; 0xffffffe4
   47e54:	cmp	r0, r1
   47e58:	bcs	47e70 <__assert_fail@plt+0x352b8>
   47e5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   47e60:	ldr	r1, [fp, #-44]	; 0xffffffd4
   47e64:	add	r0, r0, r1
   47e68:	movw	r1, #39	; 0x27
   47e6c:	strb	r1, [r0]
   47e70:	ldr	r0, [fp, #-44]	; 0xffffffd4
   47e74:	add	r0, r0, #1
   47e78:	str	r0, [fp, #-44]	; 0xffffffd4
   47e7c:	movw	r0, #1
   47e80:	strb	r0, [fp, #-60]	; 0xffffffc4
   47e84:	b	47e88 <__assert_fail@plt+0x352d0>
   47e88:	ldr	r0, [fp, #-44]	; 0xffffffd4
   47e8c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   47e90:	cmp	r0, r1
   47e94:	bcs	47eac <__assert_fail@plt+0x352f4>
   47e98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   47e9c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   47ea0:	add	r0, r0, r1
   47ea4:	movw	r1, #92	; 0x5c
   47ea8:	strb	r1, [r0]
   47eac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   47eb0:	add	r0, r0, #1
   47eb4:	str	r0, [fp, #-44]	; 0xffffffd4
   47eb8:	b	47ebc <__assert_fail@plt+0x35304>
   47ebc:	b	47ec0 <__assert_fail@plt+0x35308>
   47ec0:	b	47ec4 <__assert_fail@plt+0x3530c>
   47ec4:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   47ec8:	tst	r0, #1
   47ecc:	beq	47f4c <__assert_fail@plt+0x35394>
   47ed0:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   47ed4:	tst	r0, #1
   47ed8:	bne	47f4c <__assert_fail@plt+0x35394>
   47edc:	b	47ee0 <__assert_fail@plt+0x35328>
   47ee0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   47ee4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   47ee8:	cmp	r0, r1
   47eec:	bcs	47f04 <__assert_fail@plt+0x3534c>
   47ef0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   47ef4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   47ef8:	add	r0, r0, r1
   47efc:	movw	r1, #39	; 0x27
   47f00:	strb	r1, [r0]
   47f04:	ldr	r0, [fp, #-44]	; 0xffffffd4
   47f08:	add	r0, r0, #1
   47f0c:	str	r0, [fp, #-44]	; 0xffffffd4
   47f10:	b	47f14 <__assert_fail@plt+0x3535c>
   47f14:	ldr	r0, [fp, #-44]	; 0xffffffd4
   47f18:	ldr	r1, [fp, #-28]	; 0xffffffe4
   47f1c:	cmp	r0, r1
   47f20:	bcs	47f38 <__assert_fail@plt+0x35380>
   47f24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   47f28:	ldr	r1, [fp, #-44]	; 0xffffffd4
   47f2c:	add	r0, r0, r1
   47f30:	movw	r1, #39	; 0x27
   47f34:	strb	r1, [r0]
   47f38:	ldr	r0, [fp, #-44]	; 0xffffffd4
   47f3c:	add	r0, r0, #1
   47f40:	str	r0, [fp, #-44]	; 0xffffffd4
   47f44:	movw	r0, #0
   47f48:	strb	r0, [fp, #-60]	; 0xffffffc4
   47f4c:	b	47f50 <__assert_fail@plt+0x35398>
   47f50:	b	47f54 <__assert_fail@plt+0x3539c>
   47f54:	ldr	r0, [fp, #-44]	; 0xffffffd4
   47f58:	ldr	r1, [fp, #-28]	; 0xffffffe4
   47f5c:	cmp	r0, r1
   47f60:	bcs	47f78 <__assert_fail@plt+0x353c0>
   47f64:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   47f68:	ldr	r1, [fp, #-24]	; 0xffffffe8
   47f6c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   47f70:	add	r1, r1, r2
   47f74:	strb	r0, [r1]
   47f78:	ldr	r0, [fp, #-44]	; 0xffffffd4
   47f7c:	add	r0, r0, #1
   47f80:	str	r0, [fp, #-44]	; 0xffffffd4
   47f84:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   47f88:	tst	r0, #1
   47f8c:	bne	47f98 <__assert_fail@plt+0x353e0>
   47f90:	movw	r0, #0
   47f94:	strb	r0, [fp, #-62]	; 0xffffffc2
   47f98:	b	47f9c <__assert_fail@plt+0x353e4>
   47f9c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   47fa0:	add	r0, r0, #1
   47fa4:	str	r0, [fp, #-40]	; 0xffffffd8
   47fa8:	b	46d54 <__assert_fail@plt+0x3419c>
   47fac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   47fb0:	cmp	r0, #0
   47fb4:	bne	47fd4 <__assert_fail@plt+0x3541c>
   47fb8:	ldr	r0, [fp, #8]
   47fbc:	cmp	r0, #2
   47fc0:	bne	47fd4 <__assert_fail@plt+0x3541c>
   47fc4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   47fc8:	tst	r0, #1
   47fcc:	beq	47fd4 <__assert_fail@plt+0x3541c>
   47fd0:	b	4812c <__assert_fail@plt+0x35574>
   47fd4:	ldr	r0, [fp, #8]
   47fd8:	cmp	r0, #2
   47fdc:	bne	4807c <__assert_fail@plt+0x354c4>
   47fe0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   47fe4:	tst	r0, #1
   47fe8:	bne	4807c <__assert_fail@plt+0x354c4>
   47fec:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   47ff0:	tst	r0, #1
   47ff4:	beq	4807c <__assert_fail@plt+0x354c4>
   47ff8:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   47ffc:	tst	r0, #1
   48000:	beq	48048 <__assert_fail@plt+0x35490>
   48004:	ldr	r0, [fp, #-24]	; 0xffffffe8
   48008:	ldr	r1, [fp, #-48]	; 0xffffffd0
   4800c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   48010:	ldr	r3, [fp, #-36]	; 0xffffffdc
   48014:	ldr	ip, [fp, #12]
   48018:	ldr	lr, [fp, #16]
   4801c:	ldr	r4, [fp, #20]
   48020:	ldr	r5, [fp, #24]
   48024:	movw	r6, #5
   48028:	str	r6, [sp]
   4802c:	str	ip, [sp, #4]
   48030:	str	lr, [sp, #8]
   48034:	str	r4, [sp, #12]
   48038:	str	r5, [sp, #16]
   4803c:	bl	46a6c <__assert_fail@plt+0x33eb4>
   48040:	str	r0, [fp, #-20]	; 0xffffffec
   48044:	b	48194 <__assert_fail@plt+0x355dc>
   48048:	ldr	r0, [fp, #-28]	; 0xffffffe4
   4804c:	cmp	r0, #0
   48050:	bne	48074 <__assert_fail@plt+0x354bc>
   48054:	ldr	r0, [fp, #-48]	; 0xffffffd0
   48058:	cmp	r0, #0
   4805c:	beq	48074 <__assert_fail@plt+0x354bc>
   48060:	ldr	r0, [fp, #-48]	; 0xffffffd0
   48064:	str	r0, [fp, #-28]	; 0xffffffe4
   48068:	movw	r0, #0
   4806c:	str	r0, [fp, #-44]	; 0xffffffd4
   48070:	b	46b14 <__assert_fail@plt+0x33f5c>
   48074:	b	48078 <__assert_fail@plt+0x354c0>
   48078:	b	4807c <__assert_fail@plt+0x354c4>
   4807c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   48080:	movw	r1, #0
   48084:	cmp	r0, r1
   48088:	beq	480fc <__assert_fail@plt+0x35544>
   4808c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   48090:	tst	r0, #1
   48094:	bne	480fc <__assert_fail@plt+0x35544>
   48098:	b	4809c <__assert_fail@plt+0x354e4>
   4809c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   480a0:	ldrsb	r0, [r0]
   480a4:	cmp	r0, #0
   480a8:	beq	480f8 <__assert_fail@plt+0x35540>
   480ac:	b	480b0 <__assert_fail@plt+0x354f8>
   480b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   480b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   480b8:	cmp	r0, r1
   480bc:	bcs	480d8 <__assert_fail@plt+0x35520>
   480c0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   480c4:	ldrb	r0, [r0]
   480c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   480cc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   480d0:	add	r1, r1, r2
   480d4:	strb	r0, [r1]
   480d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   480dc:	add	r0, r0, #1
   480e0:	str	r0, [fp, #-44]	; 0xffffffd4
   480e4:	b	480e8 <__assert_fail@plt+0x35530>
   480e8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   480ec:	add	r0, r0, #1
   480f0:	str	r0, [fp, #-52]	; 0xffffffcc
   480f4:	b	4809c <__assert_fail@plt+0x354e4>
   480f8:	b	480fc <__assert_fail@plt+0x35544>
   480fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   48100:	ldr	r1, [fp, #-28]	; 0xffffffe4
   48104:	cmp	r0, r1
   48108:	bcs	48120 <__assert_fail@plt+0x35568>
   4810c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   48110:	ldr	r1, [fp, #-44]	; 0xffffffd4
   48114:	add	r0, r0, r1
   48118:	movw	r1, #0
   4811c:	strb	r1, [r0]
   48120:	ldr	r0, [fp, #-44]	; 0xffffffd4
   48124:	str	r0, [fp, #-20]	; 0xffffffec
   48128:	b	48194 <__assert_fail@plt+0x355dc>
   4812c:	ldr	r0, [fp, #8]
   48130:	cmp	r0, #2
   48134:	bne	4814c <__assert_fail@plt+0x35594>
   48138:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   4813c:	tst	r0, #1
   48140:	beq	4814c <__assert_fail@plt+0x35594>
   48144:	movw	r0, #4
   48148:	str	r0, [fp, #8]
   4814c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   48150:	ldr	r1, [fp, #-28]	; 0xffffffe4
   48154:	ldr	r2, [fp, #-32]	; 0xffffffe0
   48158:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4815c:	ldr	ip, [fp, #8]
   48160:	ldr	lr, [fp, #12]
   48164:	mvn	r4, #2
   48168:	and	lr, lr, r4
   4816c:	ldr	r4, [fp, #20]
   48170:	ldr	r5, [fp, #24]
   48174:	str	ip, [sp]
   48178:	str	lr, [sp, #4]
   4817c:	movw	ip, #0
   48180:	str	ip, [sp, #8]
   48184:	str	r4, [sp, #12]
   48188:	str	r5, [sp, #16]
   4818c:	bl	46a6c <__assert_fail@plt+0x33eb4>
   48190:	str	r0, [fp, #-20]	; 0xffffffec
   48194:	ldr	r0, [fp, #-20]	; 0xffffffec
   48198:	sub	sp, fp, #16
   4819c:	pop	{r4, r5, r6, sl, fp, pc}
   481a0:	push	{fp, lr}
   481a4:	mov	fp, sp
   481a8:	sub	sp, sp, #16
   481ac:	str	r0, [fp, #-4]
   481b0:	str	r1, [sp, #8]
   481b4:	str	r2, [sp, #4]
   481b8:	ldr	r0, [fp, #-4]
   481bc:	ldr	r1, [sp, #8]
   481c0:	ldr	r3, [sp, #4]
   481c4:	movw	r2, #0
   481c8:	bl	481d4 <__assert_fail@plt+0x3561c>
   481cc:	mov	sp, fp
   481d0:	pop	{fp, pc}
   481d4:	push	{r4, r5, r6, sl, fp, lr}
   481d8:	add	fp, sp, #16
   481dc:	sub	sp, sp, #80	; 0x50
   481e0:	str	r0, [fp, #-20]	; 0xffffffec
   481e4:	str	r1, [fp, #-24]	; 0xffffffe8
   481e8:	str	r2, [fp, #-28]	; 0xffffffe4
   481ec:	str	r3, [fp, #-32]	; 0xffffffe0
   481f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   481f4:	movw	r1, #0
   481f8:	cmp	r0, r1
   481fc:	beq	4820c <__assert_fail@plt+0x35654>
   48200:	ldr	r0, [fp, #-32]	; 0xffffffe0
   48204:	str	r0, [sp, #40]	; 0x28
   48208:	b	4821c <__assert_fail@plt+0x35664>
   4820c:	movw	r0, #57124	; 0xdf24
   48210:	movt	r0, #8
   48214:	str	r0, [sp, #40]	; 0x28
   48218:	b	4821c <__assert_fail@plt+0x35664>
   4821c:	ldr	r0, [sp, #40]	; 0x28
   48220:	str	r0, [fp, #-36]	; 0xffffffdc
   48224:	bl	128d0 <__errno_location@plt>
   48228:	ldr	r0, [r0]
   4822c:	str	r0, [fp, #-40]	; 0xffffffd8
   48230:	ldr	r0, [fp, #-36]	; 0xffffffdc
   48234:	ldr	r0, [r0, #4]
   48238:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4823c:	movw	r2, #0
   48240:	cmp	r1, r2
   48244:	movw	r1, #0
   48248:	movne	r1, #1
   4824c:	tst	r1, #1
   48250:	mov	r1, r2
   48254:	moveq	r1, #1
   48258:	orr	r0, r0, r1
   4825c:	str	r0, [fp, #-44]	; 0xffffffd4
   48260:	ldr	r0, [fp, #-20]	; 0xffffffec
   48264:	ldr	r3, [fp, #-24]	; 0xffffffe8
   48268:	ldr	r1, [fp, #-36]	; 0xffffffdc
   4826c:	ldr	r1, [r1]
   48270:	ldr	ip, [fp, #-44]	; 0xffffffd4
   48274:	ldr	lr, [fp, #-36]	; 0xffffffdc
   48278:	add	lr, lr, #8
   4827c:	ldr	r4, [fp, #-36]	; 0xffffffdc
   48280:	ldr	r4, [r4, #40]	; 0x28
   48284:	ldr	r5, [fp, #-36]	; 0xffffffdc
   48288:	ldr	r5, [r5, #44]	; 0x2c
   4828c:	str	r0, [sp, #36]	; 0x24
   48290:	mov	r0, r2
   48294:	str	r1, [sp, #32]
   48298:	mov	r1, r2
   4829c:	ldr	r2, [sp, #36]	; 0x24
   482a0:	ldr	r6, [sp, #32]
   482a4:	str	r6, [sp]
   482a8:	str	ip, [sp, #4]
   482ac:	str	lr, [sp, #8]
   482b0:	str	r4, [sp, #12]
   482b4:	str	r5, [sp, #16]
   482b8:	bl	46a6c <__assert_fail@plt+0x33eb4>
   482bc:	add	r0, r0, #1
   482c0:	str	r0, [sp, #48]	; 0x30
   482c4:	ldr	r0, [sp, #48]	; 0x30
   482c8:	bl	4a368 <__assert_fail@plt+0x377b0>
   482cc:	str	r0, [sp, #44]	; 0x2c
   482d0:	ldr	r0, [sp, #44]	; 0x2c
   482d4:	ldr	r1, [sp, #48]	; 0x30
   482d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   482dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   482e0:	ldr	ip, [fp, #-36]	; 0xffffffdc
   482e4:	ldr	ip, [ip]
   482e8:	ldr	lr, [fp, #-44]	; 0xffffffd4
   482ec:	ldr	r4, [fp, #-36]	; 0xffffffdc
   482f0:	add	r4, r4, #8
   482f4:	ldr	r5, [fp, #-36]	; 0xffffffdc
   482f8:	ldr	r5, [r5, #40]	; 0x28
   482fc:	ldr	r6, [fp, #-36]	; 0xffffffdc
   48300:	ldr	r6, [r6, #44]	; 0x2c
   48304:	str	ip, [sp]
   48308:	str	lr, [sp, #4]
   4830c:	str	r4, [sp, #8]
   48310:	str	r5, [sp, #12]
   48314:	str	r6, [sp, #16]
   48318:	bl	46a6c <__assert_fail@plt+0x33eb4>
   4831c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   48320:	str	r0, [sp, #28]
   48324:	str	r1, [sp, #24]
   48328:	bl	128d0 <__errno_location@plt>
   4832c:	ldr	r1, [sp, #24]
   48330:	str	r1, [r0]
   48334:	ldr	r0, [fp, #-28]	; 0xffffffe4
   48338:	movw	r2, #0
   4833c:	cmp	r0, r2
   48340:	beq	48354 <__assert_fail@plt+0x3579c>
   48344:	ldr	r0, [sp, #48]	; 0x30
   48348:	sub	r0, r0, #1
   4834c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   48350:	str	r0, [r1]
   48354:	ldr	r0, [sp, #44]	; 0x2c
   48358:	sub	sp, fp, #16
   4835c:	pop	{r4, r5, r6, sl, fp, pc}
   48360:	push	{fp, lr}
   48364:	mov	fp, sp
   48368:	sub	sp, sp, #8
   4836c:	movw	r0, #54992	; 0xd6d0
   48370:	movt	r0, #8
   48374:	ldr	r0, [r0]
   48378:	str	r0, [sp, #4]
   4837c:	movw	r0, #1
   48380:	str	r0, [sp]
   48384:	ldr	r0, [sp]
   48388:	movw	r1, #54996	; 0xd6d4
   4838c:	movt	r1, #8
   48390:	ldr	r1, [r1]
   48394:	cmp	r0, r1
   48398:	bge	483c0 <__assert_fail@plt+0x35808>
   4839c:	ldr	r0, [sp, #4]
   483a0:	ldr	r1, [sp]
   483a4:	add	r0, r0, r1, lsl #3
   483a8:	ldr	r0, [r0, #4]
   483ac:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   483b0:	ldr	r0, [sp]
   483b4:	add	r0, r0, #1
   483b8:	str	r0, [sp]
   483bc:	b	48384 <__assert_fail@plt+0x357cc>
   483c0:	ldr	r0, [sp, #4]
   483c4:	ldr	r0, [r0, #4]
   483c8:	movw	r1, #57172	; 0xdf54
   483cc:	movt	r1, #8
   483d0:	cmp	r0, r1
   483d4:	beq	48400 <__assert_fail@plt+0x35848>
   483d8:	ldr	r0, [sp, #4]
   483dc:	ldr	r0, [r0, #4]
   483e0:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   483e4:	movw	r0, #256	; 0x100
   483e8:	movw	r1, #55000	; 0xd6d8
   483ec:	movt	r1, #8
   483f0:	str	r0, [r1]
   483f4:	movw	r0, #57172	; 0xdf54
   483f8:	movt	r0, #8
   483fc:	str	r0, [r1, #4]
   48400:	ldr	r0, [sp, #4]
   48404:	movw	r1, #55000	; 0xd6d8
   48408:	movt	r1, #8
   4840c:	cmp	r0, r1
   48410:	beq	48430 <__assert_fail@plt+0x35878>
   48414:	ldr	r0, [sp, #4]
   48418:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   4841c:	movw	r0, #54992	; 0xd6d0
   48420:	movt	r0, #8
   48424:	movw	r1, #55000	; 0xd6d8
   48428:	movt	r1, #8
   4842c:	str	r1, [r0]
   48430:	movw	r0, #54996	; 0xd6d4
   48434:	movt	r0, #8
   48438:	movw	r1, #1
   4843c:	str	r1, [r0]
   48440:	mov	sp, fp
   48444:	pop	{fp, pc}
   48448:	push	{fp, lr}
   4844c:	mov	fp, sp
   48450:	sub	sp, sp, #8
   48454:	str	r0, [sp, #4]
   48458:	str	r1, [sp]
   4845c:	ldr	r0, [sp, #4]
   48460:	ldr	r1, [sp]
   48464:	mvn	r2, #0
   48468:	movw	r3, #57124	; 0xdf24
   4846c:	movt	r3, #8
   48470:	bl	4847c <__assert_fail@plt+0x358c4>
   48474:	mov	sp, fp
   48478:	pop	{fp, pc}
   4847c:	push	{r4, r5, r6, sl, fp, lr}
   48480:	add	fp, sp, #16
   48484:	sub	sp, sp, #80	; 0x50
   48488:	str	r0, [fp, #-20]	; 0xffffffec
   4848c:	str	r1, [fp, #-24]	; 0xffffffe8
   48490:	str	r2, [fp, #-28]	; 0xffffffe4
   48494:	str	r3, [fp, #-32]	; 0xffffffe0
   48498:	bl	128d0 <__errno_location@plt>
   4849c:	ldr	r1, [pc, #672]	; 48744 <__assert_fail@plt+0x35b8c>
   484a0:	ldr	r0, [r0]
   484a4:	str	r0, [fp, #-36]	; 0xffffffdc
   484a8:	movw	r0, #54992	; 0xd6d0
   484ac:	movt	r0, #8
   484b0:	ldr	r0, [r0]
   484b4:	str	r0, [fp, #-40]	; 0xffffffd8
   484b8:	str	r1, [fp, #-44]	; 0xffffffd4
   484bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   484c0:	movw	r1, #0
   484c4:	cmp	r1, r0
   484c8:	bgt	484dc <__assert_fail@plt+0x35924>
   484cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   484d0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   484d4:	cmp	r0, r1
   484d8:	blt	484e0 <__assert_fail@plt+0x35928>
   484dc:	bl	12b64 <abort@plt>
   484e0:	movw	r0, #54996	; 0xd6d4
   484e4:	movt	r0, #8
   484e8:	ldr	r0, [r0]
   484ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   484f0:	cmp	r0, r1
   484f4:	bgt	485ec <__assert_fail@plt+0x35a34>
   484f8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   484fc:	movw	r1, #55000	; 0xd6d8
   48500:	movt	r1, #8
   48504:	cmp	r0, r1
   48508:	movw	r0, #0
   4850c:	moveq	r0, #1
   48510:	and	r0, r0, #1
   48514:	strb	r0, [fp, #-45]	; 0xffffffd3
   48518:	movw	r0, #54996	; 0xd6d4
   4851c:	movt	r0, #8
   48520:	ldr	r0, [r0]
   48524:	str	r0, [sp, #44]	; 0x2c
   48528:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   4852c:	tst	r0, #1
   48530:	beq	48540 <__assert_fail@plt+0x35988>
   48534:	movw	r0, #0
   48538:	str	r0, [sp, #24]
   4853c:	b	48548 <__assert_fail@plt+0x35990>
   48540:	ldr	r0, [fp, #-40]	; 0xffffffd8
   48544:	str	r0, [sp, #24]
   48548:	ldr	r0, [sp, #24]
   4854c:	ldr	r1, [fp, #-20]	; 0xffffffec
   48550:	movw	r2, #54996	; 0xd6d4
   48554:	movt	r2, #8
   48558:	ldr	r2, [r2]
   4855c:	sub	r1, r1, r2
   48560:	add	r2, r1, #1
   48564:	ldr	r3, [fp, #-44]	; 0xffffffd4
   48568:	add	r1, sp, #44	; 0x2c
   4856c:	movw	ip, #8
   48570:	str	ip, [sp]
   48574:	bl	4a5a4 <__assert_fail@plt+0x379ec>
   48578:	str	r0, [fp, #-40]	; 0xffffffd8
   4857c:	movw	r1, #54992	; 0xd6d0
   48580:	movt	r1, #8
   48584:	str	r0, [r1]
   48588:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   4858c:	tst	r0, #1
   48590:	beq	485b0 <__assert_fail@plt+0x359f8>
   48594:	ldr	r0, [fp, #-40]	; 0xffffffd8
   48598:	movw	r1, #55000	; 0xd6d8
   4859c:	movt	r1, #8
   485a0:	ldr	r2, [r1]
   485a4:	str	r2, [r0]
   485a8:	ldr	r1, [r1, #4]
   485ac:	str	r1, [r0, #4]
   485b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   485b4:	movw	r1, #54996	; 0xd6d4
   485b8:	movt	r1, #8
   485bc:	ldr	r1, [r1]
   485c0:	add	r0, r0, r1, lsl #3
   485c4:	ldr	r2, [sp, #44]	; 0x2c
   485c8:	sub	r1, r2, r1
   485cc:	lsl	r2, r1, #3
   485d0:	movw	r1, #0
   485d4:	and	r1, r1, #255	; 0xff
   485d8:	bl	12900 <memset@plt>
   485dc:	ldr	r0, [sp, #44]	; 0x2c
   485e0:	movw	r1, #54996	; 0xd6d4
   485e4:	movt	r1, #8
   485e8:	str	r0, [r1]
   485ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   485f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   485f4:	ldr	r0, [r0, r1, lsl #3]
   485f8:	str	r0, [sp, #40]	; 0x28
   485fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   48600:	ldr	r1, [fp, #-20]	; 0xffffffec
   48604:	add	r0, r0, r1, lsl #3
   48608:	ldr	r0, [r0, #4]
   4860c:	str	r0, [sp, #36]	; 0x24
   48610:	ldr	r0, [fp, #-32]	; 0xffffffe0
   48614:	ldr	r0, [r0, #4]
   48618:	orr	r0, r0, #1
   4861c:	str	r0, [sp, #32]
   48620:	ldr	r0, [sp, #36]	; 0x24
   48624:	ldr	r1, [sp, #40]	; 0x28
   48628:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4862c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   48630:	ldr	ip, [fp, #-32]	; 0xffffffe0
   48634:	ldr	ip, [ip]
   48638:	ldr	lr, [sp, #32]
   4863c:	ldr	r4, [fp, #-32]	; 0xffffffe0
   48640:	add	r4, r4, #8
   48644:	ldr	r5, [fp, #-32]	; 0xffffffe0
   48648:	ldr	r5, [r5, #40]	; 0x28
   4864c:	ldr	r6, [fp, #-32]	; 0xffffffe0
   48650:	ldr	r6, [r6, #44]	; 0x2c
   48654:	str	ip, [sp]
   48658:	str	lr, [sp, #4]
   4865c:	str	r4, [sp, #8]
   48660:	str	r5, [sp, #12]
   48664:	str	r6, [sp, #16]
   48668:	bl	46a6c <__assert_fail@plt+0x33eb4>
   4866c:	str	r0, [sp, #28]
   48670:	ldr	r0, [sp, #40]	; 0x28
   48674:	ldr	r1, [sp, #28]
   48678:	cmp	r0, r1
   4867c:	bhi	48724 <__assert_fail@plt+0x35b6c>
   48680:	ldr	r0, [sp, #28]
   48684:	add	r0, r0, #1
   48688:	str	r0, [sp, #40]	; 0x28
   4868c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   48690:	ldr	r2, [fp, #-20]	; 0xffffffec
   48694:	add	r1, r1, r2, lsl #3
   48698:	str	r0, [r1]
   4869c:	ldr	r0, [sp, #36]	; 0x24
   486a0:	movw	r1, #57172	; 0xdf54
   486a4:	movt	r1, #8
   486a8:	cmp	r0, r1
   486ac:	beq	486b8 <__assert_fail@plt+0x35b00>
   486b0:	ldr	r0, [sp, #36]	; 0x24
   486b4:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   486b8:	ldr	r0, [sp, #40]	; 0x28
   486bc:	bl	4a368 <__assert_fail@plt+0x377b0>
   486c0:	mov	r1, r0
   486c4:	str	r0, [sp, #36]	; 0x24
   486c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   486cc:	ldr	r2, [fp, #-20]	; 0xffffffec
   486d0:	add	r0, r0, r2, lsl #3
   486d4:	str	r1, [r0, #4]
   486d8:	ldr	r0, [sp, #36]	; 0x24
   486dc:	ldr	r1, [sp, #40]	; 0x28
   486e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   486e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   486e8:	ldr	ip, [fp, #-32]	; 0xffffffe0
   486ec:	ldr	ip, [ip]
   486f0:	ldr	lr, [sp, #32]
   486f4:	ldr	r4, [fp, #-32]	; 0xffffffe0
   486f8:	add	r4, r4, #8
   486fc:	ldr	r5, [fp, #-32]	; 0xffffffe0
   48700:	ldr	r5, [r5, #40]	; 0x28
   48704:	ldr	r6, [fp, #-32]	; 0xffffffe0
   48708:	ldr	r6, [r6, #44]	; 0x2c
   4870c:	str	ip, [sp]
   48710:	str	lr, [sp, #4]
   48714:	str	r4, [sp, #8]
   48718:	str	r5, [sp, #12]
   4871c:	str	r6, [sp, #16]
   48720:	bl	46a6c <__assert_fail@plt+0x33eb4>
   48724:	ldr	r0, [fp, #-36]	; 0xffffffdc
   48728:	str	r0, [sp, #20]
   4872c:	bl	128d0 <__errno_location@plt>
   48730:	ldr	r1, [sp, #20]
   48734:	str	r1, [r0]
   48738:	ldr	r0, [sp, #36]	; 0x24
   4873c:	sub	sp, fp, #16
   48740:	pop	{r4, r5, r6, sl, fp, pc}
   48744:	svcvc	0x00ffffff
   48748:	push	{fp, lr}
   4874c:	mov	fp, sp
   48750:	sub	sp, sp, #16
   48754:	str	r0, [fp, #-4]
   48758:	str	r1, [sp, #8]
   4875c:	str	r2, [sp, #4]
   48760:	ldr	r0, [fp, #-4]
   48764:	ldr	r1, [sp, #8]
   48768:	ldr	r2, [sp, #4]
   4876c:	movw	r3, #57124	; 0xdf24
   48770:	movt	r3, #8
   48774:	bl	4847c <__assert_fail@plt+0x358c4>
   48778:	mov	sp, fp
   4877c:	pop	{fp, pc}
   48780:	push	{fp, lr}
   48784:	mov	fp, sp
   48788:	sub	sp, sp, #8
   4878c:	str	r0, [sp, #4]
   48790:	ldr	r1, [sp, #4]
   48794:	movw	r0, #0
   48798:	bl	48448 <__assert_fail@plt+0x35890>
   4879c:	mov	sp, fp
   487a0:	pop	{fp, pc}
   487a4:	push	{fp, lr}
   487a8:	mov	fp, sp
   487ac:	sub	sp, sp, #8
   487b0:	str	r0, [sp, #4]
   487b4:	str	r1, [sp]
   487b8:	ldr	r1, [sp, #4]
   487bc:	ldr	r2, [sp]
   487c0:	movw	r0, #0
   487c4:	bl	48748 <__assert_fail@plt+0x35b90>
   487c8:	mov	sp, fp
   487cc:	pop	{fp, pc}
   487d0:	push	{fp, lr}
   487d4:	mov	fp, sp
   487d8:	sub	sp, sp, #64	; 0x40
   487dc:	str	r0, [fp, #-4]
   487e0:	str	r1, [fp, #-8]
   487e4:	str	r2, [fp, #-12]
   487e8:	ldr	r1, [fp, #-8]
   487ec:	add	r0, sp, #4
   487f0:	bl	48810 <__assert_fail@plt+0x35c58>
   487f4:	ldr	r0, [fp, #-4]
   487f8:	ldr	r1, [fp, #-12]
   487fc:	mvn	r2, #0
   48800:	add	r3, sp, #4
   48804:	bl	4847c <__assert_fail@plt+0x358c4>
   48808:	mov	sp, fp
   4880c:	pop	{fp, pc}
   48810:	push	{fp, lr}
   48814:	mov	fp, sp
   48818:	sub	sp, sp, #8
   4881c:	str	r1, [sp, #4]
   48820:	mov	r1, r0
   48824:	str	r0, [sp]
   48828:	mov	r0, r1
   4882c:	movw	r1, #0
   48830:	and	r1, r1, #255	; 0xff
   48834:	movw	r2, #48	; 0x30
   48838:	bl	12900 <memset@plt>
   4883c:	ldr	r0, [sp, #4]
   48840:	cmp	r0, #10
   48844:	bne	4884c <__assert_fail@plt+0x35c94>
   48848:	bl	12b64 <abort@plt>
   4884c:	ldr	r0, [sp, #4]
   48850:	ldr	r1, [sp]
   48854:	str	r0, [r1]
   48858:	mov	sp, fp
   4885c:	pop	{fp, pc}
   48860:	push	{fp, lr}
   48864:	mov	fp, sp
   48868:	sub	sp, sp, #64	; 0x40
   4886c:	str	r0, [fp, #-4]
   48870:	str	r1, [fp, #-8]
   48874:	str	r2, [fp, #-12]
   48878:	str	r3, [fp, #-16]
   4887c:	ldr	r1, [fp, #-8]
   48880:	mov	r0, sp
   48884:	bl	48810 <__assert_fail@plt+0x35c58>
   48888:	ldr	r0, [fp, #-4]
   4888c:	ldr	r1, [fp, #-12]
   48890:	ldr	r2, [fp, #-16]
   48894:	mov	r3, sp
   48898:	bl	4847c <__assert_fail@plt+0x358c4>
   4889c:	mov	sp, fp
   488a0:	pop	{fp, pc}
   488a4:	push	{fp, lr}
   488a8:	mov	fp, sp
   488ac:	sub	sp, sp, #8
   488b0:	str	r0, [sp, #4]
   488b4:	str	r1, [sp]
   488b8:	ldr	r1, [sp, #4]
   488bc:	ldr	r2, [sp]
   488c0:	movw	r0, #0
   488c4:	bl	487d0 <__assert_fail@plt+0x35c18>
   488c8:	mov	sp, fp
   488cc:	pop	{fp, pc}
   488d0:	push	{fp, lr}
   488d4:	mov	fp, sp
   488d8:	sub	sp, sp, #16
   488dc:	str	r0, [fp, #-4]
   488e0:	str	r1, [sp, #8]
   488e4:	str	r2, [sp, #4]
   488e8:	ldr	r1, [fp, #-4]
   488ec:	ldr	r2, [sp, #8]
   488f0:	ldr	r3, [sp, #4]
   488f4:	movw	r0, #0
   488f8:	bl	48860 <__assert_fail@plt+0x35ca8>
   488fc:	mov	sp, fp
   48900:	pop	{fp, pc}
   48904:	push	{fp, lr}
   48908:	mov	fp, sp
   4890c:	sub	sp, sp, #72	; 0x48
   48910:	movw	r3, #57124	; 0xdf24
   48914:	movt	r3, #8
   48918:	str	r0, [fp, #-4]
   4891c:	str	r1, [fp, #-8]
   48920:	strb	r2, [fp, #-9]
   48924:	add	r0, sp, #12
   48928:	mov	r1, r0
   4892c:	str	r0, [sp, #8]
   48930:	mov	r0, r1
   48934:	mov	r1, r3
   48938:	movw	r2, #48	; 0x30
   4893c:	bl	125c4 <memcpy@plt>
   48940:	ldr	r0, [sp, #8]
   48944:	ldrb	r1, [fp, #-9]
   48948:	movw	r2, #1
   4894c:	bl	46814 <__assert_fail@plt+0x33c5c>
   48950:	ldr	r1, [fp, #-4]
   48954:	ldr	r2, [fp, #-8]
   48958:	movw	r3, #0
   4895c:	str	r0, [sp, #4]
   48960:	mov	r0, r3
   48964:	add	r3, sp, #12
   48968:	bl	4847c <__assert_fail@plt+0x358c4>
   4896c:	mov	sp, fp
   48970:	pop	{fp, pc}
   48974:	push	{fp, lr}
   48978:	mov	fp, sp
   4897c:	sub	sp, sp, #8
   48980:	str	r0, [sp, #4]
   48984:	strb	r1, [sp, #3]
   48988:	ldr	r0, [sp, #4]
   4898c:	mvn	r1, #0
   48990:	ldrb	r2, [sp, #3]
   48994:	bl	48904 <__assert_fail@plt+0x35d4c>
   48998:	mov	sp, fp
   4899c:	pop	{fp, pc}
   489a0:	push	{fp, lr}
   489a4:	mov	fp, sp
   489a8:	sub	sp, sp, #8
   489ac:	str	r0, [sp, #4]
   489b0:	ldr	r0, [sp, #4]
   489b4:	movw	r1, #58	; 0x3a
   489b8:	and	r1, r1, #255	; 0xff
   489bc:	bl	48974 <__assert_fail@plt+0x35dbc>
   489c0:	mov	sp, fp
   489c4:	pop	{fp, pc}
   489c8:	push	{fp, lr}
   489cc:	mov	fp, sp
   489d0:	sub	sp, sp, #8
   489d4:	str	r0, [sp, #4]
   489d8:	str	r1, [sp]
   489dc:	ldr	r0, [sp, #4]
   489e0:	ldr	r1, [sp]
   489e4:	movw	r2, #58	; 0x3a
   489e8:	and	r2, r2, #255	; 0xff
   489ec:	bl	48904 <__assert_fail@plt+0x35d4c>
   489f0:	mov	sp, fp
   489f4:	pop	{fp, pc}
   489f8:	push	{fp, lr}
   489fc:	mov	fp, sp
   48a00:	sub	sp, sp, #120	; 0x78
   48a04:	str	r0, [fp, #-4]
   48a08:	str	r1, [fp, #-8]
   48a0c:	str	r2, [fp, #-12]
   48a10:	ldr	r1, [fp, #-8]
   48a14:	add	r0, sp, #12
   48a18:	bl	48810 <__assert_fail@plt+0x35c58>
   48a1c:	add	r0, sp, #60	; 0x3c
   48a20:	mov	r1, r0
   48a24:	add	r2, sp, #12
   48a28:	str	r0, [sp, #8]
   48a2c:	mov	r0, r1
   48a30:	mov	r1, r2
   48a34:	movw	r2, #48	; 0x30
   48a38:	bl	125c4 <memcpy@plt>
   48a3c:	ldr	r0, [sp, #8]
   48a40:	movw	r1, #58	; 0x3a
   48a44:	and	r1, r1, #255	; 0xff
   48a48:	movw	r2, #1
   48a4c:	bl	46814 <__assert_fail@plt+0x33c5c>
   48a50:	ldr	r1, [fp, #-4]
   48a54:	ldr	r2, [fp, #-12]
   48a58:	str	r0, [sp, #4]
   48a5c:	mov	r0, r1
   48a60:	mov	r1, r2
   48a64:	mvn	r2, #0
   48a68:	add	r3, sp, #60	; 0x3c
   48a6c:	bl	4847c <__assert_fail@plt+0x358c4>
   48a70:	mov	sp, fp
   48a74:	pop	{fp, pc}
   48a78:	push	{fp, lr}
   48a7c:	mov	fp, sp
   48a80:	sub	sp, sp, #24
   48a84:	str	r0, [fp, #-4]
   48a88:	str	r1, [fp, #-8]
   48a8c:	str	r2, [sp, #12]
   48a90:	str	r3, [sp, #8]
   48a94:	ldr	r0, [fp, #-4]
   48a98:	ldr	r1, [fp, #-8]
   48a9c:	ldr	r2, [sp, #12]
   48aa0:	ldr	r3, [sp, #8]
   48aa4:	mvn	ip, #0
   48aa8:	str	ip, [sp]
   48aac:	bl	48ab8 <__assert_fail@plt+0x35f00>
   48ab0:	mov	sp, fp
   48ab4:	pop	{fp, pc}
   48ab8:	push	{fp, lr}
   48abc:	mov	fp, sp
   48ac0:	sub	sp, sp, #72	; 0x48
   48ac4:	ldr	ip, [fp, #8]
   48ac8:	movw	lr, #57124	; 0xdf24
   48acc:	movt	lr, #8
   48ad0:	str	r0, [fp, #-4]
   48ad4:	str	r1, [fp, #-8]
   48ad8:	str	r2, [fp, #-12]
   48adc:	str	r3, [fp, #-16]
   48ae0:	add	r0, sp, #8
   48ae4:	mov	r1, r0
   48ae8:	str	r0, [sp, #4]
   48aec:	mov	r0, r1
   48af0:	mov	r1, lr
   48af4:	movw	r2, #48	; 0x30
   48af8:	str	ip, [sp]
   48afc:	bl	125c4 <memcpy@plt>
   48b00:	ldr	r1, [fp, #-8]
   48b04:	ldr	r2, [fp, #-12]
   48b08:	ldr	r0, [sp, #4]
   48b0c:	bl	46914 <__assert_fail@plt+0x33d5c>
   48b10:	ldr	r0, [fp, #-4]
   48b14:	ldr	r1, [fp, #-16]
   48b18:	ldr	r2, [fp, #8]
   48b1c:	add	r3, sp, #8
   48b20:	bl	4847c <__assert_fail@plt+0x358c4>
   48b24:	mov	sp, fp
   48b28:	pop	{fp, pc}
   48b2c:	push	{fp, lr}
   48b30:	mov	fp, sp
   48b34:	sub	sp, sp, #16
   48b38:	str	r0, [fp, #-4]
   48b3c:	str	r1, [sp, #8]
   48b40:	str	r2, [sp, #4]
   48b44:	ldr	r1, [fp, #-4]
   48b48:	ldr	r2, [sp, #8]
   48b4c:	ldr	r3, [sp, #4]
   48b50:	movw	r0, #0
   48b54:	bl	48a78 <__assert_fail@plt+0x35ec0>
   48b58:	mov	sp, fp
   48b5c:	pop	{fp, pc}
   48b60:	push	{fp, lr}
   48b64:	mov	fp, sp
   48b68:	sub	sp, sp, #24
   48b6c:	str	r0, [fp, #-4]
   48b70:	str	r1, [fp, #-8]
   48b74:	str	r2, [sp, #12]
   48b78:	str	r3, [sp, #8]
   48b7c:	ldr	r1, [fp, #-4]
   48b80:	ldr	r2, [fp, #-8]
   48b84:	ldr	r3, [sp, #12]
   48b88:	ldr	r0, [sp, #8]
   48b8c:	movw	ip, #0
   48b90:	str	r0, [sp, #4]
   48b94:	mov	r0, ip
   48b98:	ldr	ip, [sp, #4]
   48b9c:	str	ip, [sp]
   48ba0:	bl	48ab8 <__assert_fail@plt+0x35f00>
   48ba4:	mov	sp, fp
   48ba8:	pop	{fp, pc}
   48bac:	push	{fp, lr}
   48bb0:	mov	fp, sp
   48bb4:	sub	sp, sp, #16
   48bb8:	str	r0, [fp, #-4]
   48bbc:	str	r1, [sp, #8]
   48bc0:	str	r2, [sp, #4]
   48bc4:	ldr	r0, [fp, #-4]
   48bc8:	ldr	r1, [sp, #8]
   48bcc:	ldr	r2, [sp, #4]
   48bd0:	movw	r3, #55008	; 0xd6e0
   48bd4:	movt	r3, #8
   48bd8:	bl	4847c <__assert_fail@plt+0x358c4>
   48bdc:	mov	sp, fp
   48be0:	pop	{fp, pc}
   48be4:	push	{fp, lr}
   48be8:	mov	fp, sp
   48bec:	sub	sp, sp, #8
   48bf0:	str	r0, [sp, #4]
   48bf4:	str	r1, [sp]
   48bf8:	ldr	r1, [sp, #4]
   48bfc:	ldr	r2, [sp]
   48c00:	movw	r0, #0
   48c04:	bl	48bac <__assert_fail@plt+0x35ff4>
   48c08:	mov	sp, fp
   48c0c:	pop	{fp, pc}
   48c10:	push	{fp, lr}
   48c14:	mov	fp, sp
   48c18:	sub	sp, sp, #8
   48c1c:	str	r0, [sp, #4]
   48c20:	str	r1, [sp]
   48c24:	ldr	r0, [sp, #4]
   48c28:	ldr	r1, [sp]
   48c2c:	mvn	r2, #0
   48c30:	bl	48bac <__assert_fail@plt+0x35ff4>
   48c34:	mov	sp, fp
   48c38:	pop	{fp, pc}
   48c3c:	push	{fp, lr}
   48c40:	mov	fp, sp
   48c44:	sub	sp, sp, #8
   48c48:	str	r0, [sp, #4]
   48c4c:	ldr	r1, [sp, #4]
   48c50:	movw	r0, #0
   48c54:	bl	48c10 <__assert_fail@plt+0x36058>
   48c58:	mov	sp, fp
   48c5c:	pop	{fp, pc}
   48c60:	push	{fp, lr}
   48c64:	mov	fp, sp
   48c68:	sub	sp, sp, #24
   48c6c:	str	r0, [fp, #-8]
   48c70:	str	r1, [sp, #12]
   48c74:	ldr	r0, [fp, #-8]
   48c78:	bl	12864 <gettext@plt>
   48c7c:	str	r0, [sp, #8]
   48c80:	ldr	r0, [sp, #8]
   48c84:	ldr	r1, [fp, #-8]
   48c88:	cmp	r0, r1
   48c8c:	beq	48c9c <__assert_fail@plt+0x360e4>
   48c90:	ldr	r0, [sp, #8]
   48c94:	str	r0, [fp, #-4]
   48c98:	b	48d68 <__assert_fail@plt+0x361b0>
   48c9c:	bl	70f58 <__assert_fail@plt+0x5e3a0>
   48ca0:	str	r0, [sp, #4]
   48ca4:	ldr	r0, [sp, #4]
   48ca8:	movw	r1, #48010	; 0xbb8a
   48cac:	movt	r1, #7
   48cb0:	bl	6f328 <__assert_fail@plt+0x5c770>
   48cb4:	cmp	r0, #0
   48cb8:	bne	48cf0 <__assert_fail@plt+0x36138>
   48cbc:	ldr	r0, [fp, #-8]
   48cc0:	ldrb	r0, [r0]
   48cc4:	cmp	r0, #96	; 0x60
   48cc8:	movw	r0, #0
   48ccc:	moveq	r0, #1
   48cd0:	tst	r0, #1
   48cd4:	movw	r0, #48020	; 0xbb94
   48cd8:	movt	r0, #7
   48cdc:	movw	r1, #48016	; 0xbb90
   48ce0:	movt	r1, #7
   48ce4:	movne	r0, r1
   48ce8:	str	r0, [fp, #-4]
   48cec:	b	48d68 <__assert_fail@plt+0x361b0>
   48cf0:	ldr	r0, [sp, #4]
   48cf4:	movw	r1, #48024	; 0xbb98
   48cf8:	movt	r1, #7
   48cfc:	bl	6f328 <__assert_fail@plt+0x5c770>
   48d00:	cmp	r0, #0
   48d04:	bne	48d3c <__assert_fail@plt+0x36184>
   48d08:	ldr	r0, [fp, #-8]
   48d0c:	ldrb	r0, [r0]
   48d10:	cmp	r0, #96	; 0x60
   48d14:	movw	r0, #0
   48d18:	moveq	r0, #1
   48d1c:	tst	r0, #1
   48d20:	movw	r0, #48036	; 0xbba4
   48d24:	movt	r0, #7
   48d28:	movw	r1, #48032	; 0xbba0
   48d2c:	movt	r1, #7
   48d30:	movne	r0, r1
   48d34:	str	r0, [fp, #-4]
   48d38:	b	48d68 <__assert_fail@plt+0x361b0>
   48d3c:	ldr	r0, [sp, #12]
   48d40:	cmp	r0, #9
   48d44:	movw	r0, #0
   48d48:	moveq	r0, #1
   48d4c:	tst	r0, #1
   48d50:	movw	r0, #31741	; 0x7bfd
   48d54:	movt	r0, #7
   48d58:	movw	r1, #45395	; 0xb153
   48d5c:	movt	r1, #7
   48d60:	movne	r0, r1
   48d64:	str	r0, [fp, #-4]
   48d68:	ldr	r0, [fp, #-4]
   48d6c:	mov	sp, fp
   48d70:	pop	{fp, pc}
   48d74:	push	{fp, lr}
   48d78:	mov	fp, sp
   48d7c:	sub	sp, sp, #16
   48d80:	ldr	r1, [pc, #132]	; 48e0c <__assert_fail@plt+0x36254>
   48d84:	str	r0, [sp, #8]
   48d88:	ldr	r0, [sp, #8]
   48d8c:	movw	r2, #0
   48d90:	str	r2, [r0, #4]
   48d94:	movw	r0, #26652	; 0x681c
   48d98:	movt	r0, #7
   48d9c:	bl	2c5a4 <__assert_fail@plt+0x199ec>
   48da0:	ldr	r1, [sp, #8]
   48da4:	str	r0, [r1]
   48da8:	ldr	r0, [sp, #8]
   48dac:	ldr	r0, [r0]
   48db0:	cmp	r0, #0
   48db4:	bge	48df8 <__assert_fail@plt+0x36240>
   48db8:	movw	r0, #0
   48dbc:	str	r0, [sp, #4]
   48dc0:	ldr	r1, [sp, #4]
   48dc4:	bl	12840 <getcwd@plt>
   48dc8:	ldr	r1, [sp, #8]
   48dcc:	str	r0, [r1, #4]
   48dd0:	ldr	r0, [sp, #8]
   48dd4:	ldr	r0, [r0, #4]
   48dd8:	movw	r1, #0
   48ddc:	cmp	r0, r1
   48de0:	movw	r0, #0
   48de4:	movne	r0, #1
   48de8:	tst	r0, #1
   48dec:	mvneq	r1, #0
   48df0:	str	r1, [fp, #-4]
   48df4:	b	48e00 <__assert_fail@plt+0x36248>
   48df8:	movw	r0, #0
   48dfc:	str	r0, [fp, #-4]
   48e00:	ldr	r0, [fp, #-4]
   48e04:	mov	sp, fp
   48e08:	pop	{fp, pc}
   48e0c:	andeq	r0, r8, r0
   48e10:	push	{fp, lr}
   48e14:	mov	fp, sp
   48e18:	sub	sp, sp, #8
   48e1c:	str	r0, [sp]
   48e20:	ldr	r0, [sp]
   48e24:	ldr	r0, [r0]
   48e28:	movw	r1, #0
   48e2c:	cmp	r1, r0
   48e30:	bgt	48e48 <__assert_fail@plt+0x36290>
   48e34:	ldr	r0, [sp]
   48e38:	ldr	r0, [r0]
   48e3c:	bl	12aa4 <fchdir@plt>
   48e40:	str	r0, [sp, #4]
   48e44:	b	48e58 <__assert_fail@plt+0x362a0>
   48e48:	ldr	r0, [sp]
   48e4c:	ldr	r0, [r0, #4]
   48e50:	bl	4e17c <__assert_fail@plt+0x3b5c4>
   48e54:	str	r0, [sp, #4]
   48e58:	ldr	r0, [sp, #4]
   48e5c:	mov	sp, fp
   48e60:	pop	{fp, pc}
   48e64:	push	{fp, lr}
   48e68:	mov	fp, sp
   48e6c:	sub	sp, sp, #8
   48e70:	str	r0, [sp, #4]
   48e74:	ldr	r0, [sp, #4]
   48e78:	ldr	r0, [r0]
   48e7c:	cmp	r0, #0
   48e80:	blt	48e90 <__assert_fail@plt+0x362d8>
   48e84:	ldr	r0, [sp, #4]
   48e88:	ldr	r0, [r0]
   48e8c:	bl	12b70 <close@plt>
   48e90:	ldr	r0, [sp, #4]
   48e94:	ldr	r0, [r0, #4]
   48e98:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   48e9c:	mov	sp, fp
   48ea0:	pop	{fp, pc}
   48ea4:	push	{r4, r5, fp, lr}
   48ea8:	add	fp, sp, #8
   48eac:	sub	sp, sp, #4096	; 0x1000
   48eb0:	str	r0, [fp, #-16]
   48eb4:	str	r1, [fp, #-20]	; 0xffffffec
   48eb8:	str	r2, [fp, #-24]	; 0xffffffe8
   48ebc:	ldr	r0, [fp, #-16]
   48ec0:	cmn	r0, #100	; 0x64
   48ec4:	beq	48ed8 <__assert_fail@plt+0x36320>
   48ec8:	ldr	r0, [fp, #-20]	; 0xffffffec
   48ecc:	ldrb	r0, [r0]
   48ed0:	cmp	r0, #47	; 0x2f
   48ed4:	bne	48eec <__assert_fail@plt+0x36334>
   48ed8:	ldr	r0, [fp, #-20]	; 0xffffffec
   48edc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   48ee0:	bl	526a4 <__assert_fail@plt+0x3faec>
   48ee4:	str	r0, [fp, #-12]
   48ee8:	b	490f8 <__assert_fail@plt+0x36540>
   48eec:	add	r0, sp, #32
   48ef0:	ldr	r1, [fp, #-16]
   48ef4:	ldr	r2, [fp, #-20]	; 0xffffffec
   48ef8:	bl	6e734 <__assert_fail@plt+0x5bb7c>
   48efc:	str	r0, [sp, #28]
   48f00:	ldr	r0, [sp, #28]
   48f04:	movw	r1, #0
   48f08:	cmp	r0, r1
   48f0c:	beq	48fcc <__assert_fail@plt+0x36414>
   48f10:	ldr	r0, [sp, #28]
   48f14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   48f18:	bl	526a4 <__assert_fail@plt+0x3faec>
   48f1c:	str	r0, [sp, #24]
   48f20:	bl	128d0 <__errno_location@plt>
   48f24:	add	r1, sp, #32
   48f28:	ldr	r0, [r0]
   48f2c:	str	r0, [sp, #20]
   48f30:	ldr	r0, [sp, #28]
   48f34:	cmp	r0, r1
   48f38:	beq	48f44 <__assert_fail@plt+0x3638c>
   48f3c:	ldr	r0, [sp, #28]
   48f40:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   48f44:	ldr	r0, [sp, #24]
   48f48:	mvn	r1, #0
   48f4c:	cmp	r1, r0
   48f50:	beq	48f60 <__assert_fail@plt+0x363a8>
   48f54:	ldr	r0, [sp, #24]
   48f58:	str	r0, [fp, #-12]
   48f5c:	b	490f8 <__assert_fail@plt+0x36540>
   48f60:	ldr	r0, [sp, #20]
   48f64:	cmp	r0, #20
   48f68:	beq	48fc8 <__assert_fail@plt+0x36410>
   48f6c:	ldr	r0, [sp, #20]
   48f70:	cmp	r0, #2
   48f74:	beq	48fc8 <__assert_fail@plt+0x36410>
   48f78:	ldr	r0, [sp, #20]
   48f7c:	cmp	r0, #1
   48f80:	beq	48fc8 <__assert_fail@plt+0x36410>
   48f84:	ldr	r0, [sp, #20]
   48f88:	cmp	r0, #13
   48f8c:	beq	48fc8 <__assert_fail@plt+0x36410>
   48f90:	ldr	r0, [sp, #20]
   48f94:	cmp	r0, #38	; 0x26
   48f98:	beq	48fc8 <__assert_fail@plt+0x36410>
   48f9c:	ldr	r0, [sp, #20]
   48fa0:	cmp	r0, #95	; 0x5f
   48fa4:	beq	48fc8 <__assert_fail@plt+0x36410>
   48fa8:	ldr	r0, [sp, #20]
   48fac:	str	r0, [sp, #16]
   48fb0:	bl	128d0 <__errno_location@plt>
   48fb4:	ldr	r1, [sp, #16]
   48fb8:	str	r1, [r0]
   48fbc:	ldr	r0, [sp, #24]
   48fc0:	str	r0, [fp, #-12]
   48fc4:	b	490f8 <__assert_fail@plt+0x36540>
   48fc8:	b	48fcc <__assert_fail@plt+0x36414>
   48fcc:	sub	r0, fp, #32
   48fd0:	bl	48d74 <__assert_fail@plt+0x361bc>
   48fd4:	cmp	r0, #0
   48fd8:	beq	48fe8 <__assert_fail@plt+0x36430>
   48fdc:	bl	128d0 <__errno_location@plt>
   48fe0:	ldr	r0, [r0]
   48fe4:	bl	323d8 <__assert_fail@plt+0x1f820>
   48fe8:	ldr	r0, [fp, #-16]
   48fec:	movw	r1, #0
   48ff0:	cmp	r1, r0
   48ff4:	bgt	49028 <__assert_fail@plt+0x36470>
   48ff8:	ldr	r0, [fp, #-16]
   48ffc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   49000:	cmp	r0, r1
   49004:	bne	49028 <__assert_fail@plt+0x36470>
   49008:	sub	r0, fp, #32
   4900c:	bl	48e64 <__assert_fail@plt+0x362ac>
   49010:	bl	128d0 <__errno_location@plt>
   49014:	movw	r1, #9
   49018:	str	r1, [r0]
   4901c:	mvn	r0, #0
   49020:	str	r0, [fp, #-12]
   49024:	b	490f8 <__assert_fail@plt+0x36540>
   49028:	ldr	r0, [fp, #-16]
   4902c:	bl	12aa4 <fchdir@plt>
   49030:	cmp	r0, #0
   49034:	beq	4906c <__assert_fail@plt+0x364b4>
   49038:	bl	128d0 <__errno_location@plt>
   4903c:	ldr	r0, [r0]
   49040:	str	r0, [fp, #-36]	; 0xffffffdc
   49044:	sub	r0, fp, #32
   49048:	bl	48e64 <__assert_fail@plt+0x362ac>
   4904c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   49050:	str	r0, [sp, #12]
   49054:	bl	128d0 <__errno_location@plt>
   49058:	ldr	r1, [sp, #12]
   4905c:	str	r1, [r0]
   49060:	mvn	r0, #0
   49064:	str	r0, [fp, #-12]
   49068:	b	490f8 <__assert_fail@plt+0x36540>
   4906c:	ldr	r0, [fp, #-20]	; 0xffffffec
   49070:	ldr	r1, [fp, #-24]	; 0xffffffe8
   49074:	bl	526a4 <__assert_fail@plt+0x3faec>
   49078:	str	r0, [fp, #-40]	; 0xffffffd8
   4907c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   49080:	cmn	r0, #1
   49084:	bne	49098 <__assert_fail@plt+0x364e0>
   49088:	bl	128d0 <__errno_location@plt>
   4908c:	ldr	r0, [r0]
   49090:	str	r0, [sp, #8]
   49094:	b	490a4 <__assert_fail@plt+0x364ec>
   49098:	movw	r0, #0
   4909c:	str	r0, [sp, #8]
   490a0:	b	490a4 <__assert_fail@plt+0x364ec>
   490a4:	ldr	r0, [sp, #8]
   490a8:	str	r0, [fp, #-36]	; 0xffffffdc
   490ac:	sub	r0, fp, #32
   490b0:	bl	48e10 <__assert_fail@plt+0x36258>
   490b4:	cmp	r0, #0
   490b8:	beq	490c8 <__assert_fail@plt+0x36510>
   490bc:	bl	128d0 <__errno_location@plt>
   490c0:	ldr	r0, [r0]
   490c4:	bl	3242c <__assert_fail@plt+0x1f874>
   490c8:	sub	r0, fp, #32
   490cc:	bl	48e64 <__assert_fail@plt+0x362ac>
   490d0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   490d4:	cmp	r0, #0
   490d8:	beq	490f0 <__assert_fail@plt+0x36538>
   490dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   490e0:	str	r0, [sp, #4]
   490e4:	bl	128d0 <__errno_location@plt>
   490e8:	ldr	r1, [sp, #4]
   490ec:	str	r1, [r0]
   490f0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   490f4:	str	r0, [fp, #-12]
   490f8:	ldr	r0, [fp, #-12]
   490fc:	sub	sp, fp, #8
   49100:	pop	{r4, r5, fp, pc}
   49104:	push	{r4, r5, fp, lr}
   49108:	add	fp, sp, #8
   4910c:	sub	sp, sp, #4096	; 0x1000
   49110:	str	r0, [fp, #-16]
   49114:	str	r1, [fp, #-20]	; 0xffffffec
   49118:	str	r2, [fp, #-24]	; 0xffffffe8
   4911c:	ldr	r0, [fp, #-16]
   49120:	cmn	r0, #100	; 0x64
   49124:	beq	49138 <__assert_fail@plt+0x36580>
   49128:	ldr	r0, [fp, #-20]	; 0xffffffec
   4912c:	ldrb	r0, [r0]
   49130:	cmp	r0, #47	; 0x2f
   49134:	bne	4914c <__assert_fail@plt+0x36594>
   49138:	ldr	r0, [fp, #-20]	; 0xffffffec
   4913c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   49140:	bl	52780 <__assert_fail@plt+0x3fbc8>
   49144:	str	r0, [fp, #-12]
   49148:	b	49358 <__assert_fail@plt+0x367a0>
   4914c:	add	r0, sp, #32
   49150:	ldr	r1, [fp, #-16]
   49154:	ldr	r2, [fp, #-20]	; 0xffffffec
   49158:	bl	6e734 <__assert_fail@plt+0x5bb7c>
   4915c:	str	r0, [sp, #28]
   49160:	ldr	r0, [sp, #28]
   49164:	movw	r1, #0
   49168:	cmp	r0, r1
   4916c:	beq	4922c <__assert_fail@plt+0x36674>
   49170:	ldr	r0, [sp, #28]
   49174:	ldr	r1, [fp, #-24]	; 0xffffffe8
   49178:	bl	52780 <__assert_fail@plt+0x3fbc8>
   4917c:	str	r0, [sp, #24]
   49180:	bl	128d0 <__errno_location@plt>
   49184:	add	r1, sp, #32
   49188:	ldr	r0, [r0]
   4918c:	str	r0, [sp, #20]
   49190:	ldr	r0, [sp, #28]
   49194:	cmp	r0, r1
   49198:	beq	491a4 <__assert_fail@plt+0x365ec>
   4919c:	ldr	r0, [sp, #28]
   491a0:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   491a4:	ldr	r0, [sp, #24]
   491a8:	mvn	r1, #0
   491ac:	cmp	r1, r0
   491b0:	beq	491c0 <__assert_fail@plt+0x36608>
   491b4:	ldr	r0, [sp, #24]
   491b8:	str	r0, [fp, #-12]
   491bc:	b	49358 <__assert_fail@plt+0x367a0>
   491c0:	ldr	r0, [sp, #20]
   491c4:	cmp	r0, #20
   491c8:	beq	49228 <__assert_fail@plt+0x36670>
   491cc:	ldr	r0, [sp, #20]
   491d0:	cmp	r0, #2
   491d4:	beq	49228 <__assert_fail@plt+0x36670>
   491d8:	ldr	r0, [sp, #20]
   491dc:	cmp	r0, #1
   491e0:	beq	49228 <__assert_fail@plt+0x36670>
   491e4:	ldr	r0, [sp, #20]
   491e8:	cmp	r0, #13
   491ec:	beq	49228 <__assert_fail@plt+0x36670>
   491f0:	ldr	r0, [sp, #20]
   491f4:	cmp	r0, #38	; 0x26
   491f8:	beq	49228 <__assert_fail@plt+0x36670>
   491fc:	ldr	r0, [sp, #20]
   49200:	cmp	r0, #95	; 0x5f
   49204:	beq	49228 <__assert_fail@plt+0x36670>
   49208:	ldr	r0, [sp, #20]
   4920c:	str	r0, [sp, #16]
   49210:	bl	128d0 <__errno_location@plt>
   49214:	ldr	r1, [sp, #16]
   49218:	str	r1, [r0]
   4921c:	ldr	r0, [sp, #24]
   49220:	str	r0, [fp, #-12]
   49224:	b	49358 <__assert_fail@plt+0x367a0>
   49228:	b	4922c <__assert_fail@plt+0x36674>
   4922c:	sub	r0, fp, #32
   49230:	bl	48d74 <__assert_fail@plt+0x361bc>
   49234:	cmp	r0, #0
   49238:	beq	49248 <__assert_fail@plt+0x36690>
   4923c:	bl	128d0 <__errno_location@plt>
   49240:	ldr	r0, [r0]
   49244:	bl	323d8 <__assert_fail@plt+0x1f820>
   49248:	ldr	r0, [fp, #-16]
   4924c:	movw	r1, #0
   49250:	cmp	r1, r0
   49254:	bgt	49288 <__assert_fail@plt+0x366d0>
   49258:	ldr	r0, [fp, #-16]
   4925c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   49260:	cmp	r0, r1
   49264:	bne	49288 <__assert_fail@plt+0x366d0>
   49268:	sub	r0, fp, #32
   4926c:	bl	48e64 <__assert_fail@plt+0x362ac>
   49270:	bl	128d0 <__errno_location@plt>
   49274:	movw	r1, #9
   49278:	str	r1, [r0]
   4927c:	mvn	r0, #0
   49280:	str	r0, [fp, #-12]
   49284:	b	49358 <__assert_fail@plt+0x367a0>
   49288:	ldr	r0, [fp, #-16]
   4928c:	bl	12aa4 <fchdir@plt>
   49290:	cmp	r0, #0
   49294:	beq	492cc <__assert_fail@plt+0x36714>
   49298:	bl	128d0 <__errno_location@plt>
   4929c:	ldr	r0, [r0]
   492a0:	str	r0, [fp, #-36]	; 0xffffffdc
   492a4:	sub	r0, fp, #32
   492a8:	bl	48e64 <__assert_fail@plt+0x362ac>
   492ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   492b0:	str	r0, [sp, #12]
   492b4:	bl	128d0 <__errno_location@plt>
   492b8:	ldr	r1, [sp, #12]
   492bc:	str	r1, [r0]
   492c0:	mvn	r0, #0
   492c4:	str	r0, [fp, #-12]
   492c8:	b	49358 <__assert_fail@plt+0x367a0>
   492cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   492d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   492d4:	bl	52780 <__assert_fail@plt+0x3fbc8>
   492d8:	str	r0, [fp, #-40]	; 0xffffffd8
   492dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   492e0:	cmn	r0, #1
   492e4:	bne	492f8 <__assert_fail@plt+0x36740>
   492e8:	bl	128d0 <__errno_location@plt>
   492ec:	ldr	r0, [r0]
   492f0:	str	r0, [sp, #8]
   492f4:	b	49304 <__assert_fail@plt+0x3674c>
   492f8:	movw	r0, #0
   492fc:	str	r0, [sp, #8]
   49300:	b	49304 <__assert_fail@plt+0x3674c>
   49304:	ldr	r0, [sp, #8]
   49308:	str	r0, [fp, #-36]	; 0xffffffdc
   4930c:	sub	r0, fp, #32
   49310:	bl	48e10 <__assert_fail@plt+0x36258>
   49314:	cmp	r0, #0
   49318:	beq	49328 <__assert_fail@plt+0x36770>
   4931c:	bl	128d0 <__errno_location@plt>
   49320:	ldr	r0, [r0]
   49324:	bl	3242c <__assert_fail@plt+0x1f874>
   49328:	sub	r0, fp, #32
   4932c:	bl	48e64 <__assert_fail@plt+0x362ac>
   49330:	ldr	r0, [fp, #-36]	; 0xffffffdc
   49334:	cmp	r0, #0
   49338:	beq	49350 <__assert_fail@plt+0x36798>
   4933c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   49340:	str	r0, [sp, #4]
   49344:	bl	128d0 <__errno_location@plt>
   49348:	ldr	r1, [sp, #4]
   4934c:	str	r1, [r0]
   49350:	ldr	r0, [fp, #-40]	; 0xffffffd8
   49354:	str	r0, [fp, #-12]
   49358:	ldr	r0, [fp, #-12]
   4935c:	sub	sp, fp, #8
   49360:	pop	{r4, r5, fp, pc}
   49364:	push	{r4, r5, fp, lr}
   49368:	add	fp, sp, #8
   4936c:	sub	sp, sp, #4096	; 0x1000
   49370:	str	r0, [fp, #-16]
   49374:	str	r1, [fp, #-20]	; 0xffffffec
   49378:	str	r2, [fp, #-24]	; 0xffffffe8
   4937c:	ldr	r0, [fp, #-16]
   49380:	cmn	r0, #100	; 0x64
   49384:	beq	49398 <__assert_fail@plt+0x367e0>
   49388:	ldr	r0, [fp, #-20]	; 0xffffffec
   4938c:	ldrb	r0, [r0]
   49390:	cmp	r0, #47	; 0x2f
   49394:	bne	493ac <__assert_fail@plt+0x367f4>
   49398:	ldr	r0, [fp, #-20]	; 0xffffffec
   4939c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   493a0:	bl	12978 <setfilecon@plt>
   493a4:	str	r0, [fp, #-12]
   493a8:	b	495b8 <__assert_fail@plt+0x36a00>
   493ac:	add	r0, sp, #32
   493b0:	ldr	r1, [fp, #-16]
   493b4:	ldr	r2, [fp, #-20]	; 0xffffffec
   493b8:	bl	6e734 <__assert_fail@plt+0x5bb7c>
   493bc:	str	r0, [sp, #28]
   493c0:	ldr	r0, [sp, #28]
   493c4:	movw	r1, #0
   493c8:	cmp	r0, r1
   493cc:	beq	4948c <__assert_fail@plt+0x368d4>
   493d0:	ldr	r0, [sp, #28]
   493d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   493d8:	bl	12978 <setfilecon@plt>
   493dc:	str	r0, [sp, #24]
   493e0:	bl	128d0 <__errno_location@plt>
   493e4:	add	r1, sp, #32
   493e8:	ldr	r0, [r0]
   493ec:	str	r0, [sp, #20]
   493f0:	ldr	r0, [sp, #28]
   493f4:	cmp	r0, r1
   493f8:	beq	49404 <__assert_fail@plt+0x3684c>
   493fc:	ldr	r0, [sp, #28]
   49400:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   49404:	ldr	r0, [sp, #24]
   49408:	mvn	r1, #0
   4940c:	cmp	r1, r0
   49410:	beq	49420 <__assert_fail@plt+0x36868>
   49414:	ldr	r0, [sp, #24]
   49418:	str	r0, [fp, #-12]
   4941c:	b	495b8 <__assert_fail@plt+0x36a00>
   49420:	ldr	r0, [sp, #20]
   49424:	cmp	r0, #20
   49428:	beq	49488 <__assert_fail@plt+0x368d0>
   4942c:	ldr	r0, [sp, #20]
   49430:	cmp	r0, #2
   49434:	beq	49488 <__assert_fail@plt+0x368d0>
   49438:	ldr	r0, [sp, #20]
   4943c:	cmp	r0, #1
   49440:	beq	49488 <__assert_fail@plt+0x368d0>
   49444:	ldr	r0, [sp, #20]
   49448:	cmp	r0, #13
   4944c:	beq	49488 <__assert_fail@plt+0x368d0>
   49450:	ldr	r0, [sp, #20]
   49454:	cmp	r0, #38	; 0x26
   49458:	beq	49488 <__assert_fail@plt+0x368d0>
   4945c:	ldr	r0, [sp, #20]
   49460:	cmp	r0, #95	; 0x5f
   49464:	beq	49488 <__assert_fail@plt+0x368d0>
   49468:	ldr	r0, [sp, #20]
   4946c:	str	r0, [sp, #16]
   49470:	bl	128d0 <__errno_location@plt>
   49474:	ldr	r1, [sp, #16]
   49478:	str	r1, [r0]
   4947c:	ldr	r0, [sp, #24]
   49480:	str	r0, [fp, #-12]
   49484:	b	495b8 <__assert_fail@plt+0x36a00>
   49488:	b	4948c <__assert_fail@plt+0x368d4>
   4948c:	sub	r0, fp, #32
   49490:	bl	48d74 <__assert_fail@plt+0x361bc>
   49494:	cmp	r0, #0
   49498:	beq	494a8 <__assert_fail@plt+0x368f0>
   4949c:	bl	128d0 <__errno_location@plt>
   494a0:	ldr	r0, [r0]
   494a4:	bl	323d8 <__assert_fail@plt+0x1f820>
   494a8:	ldr	r0, [fp, #-16]
   494ac:	movw	r1, #0
   494b0:	cmp	r1, r0
   494b4:	bgt	494e8 <__assert_fail@plt+0x36930>
   494b8:	ldr	r0, [fp, #-16]
   494bc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   494c0:	cmp	r0, r1
   494c4:	bne	494e8 <__assert_fail@plt+0x36930>
   494c8:	sub	r0, fp, #32
   494cc:	bl	48e64 <__assert_fail@plt+0x362ac>
   494d0:	bl	128d0 <__errno_location@plt>
   494d4:	movw	r1, #9
   494d8:	str	r1, [r0]
   494dc:	mvn	r0, #0
   494e0:	str	r0, [fp, #-12]
   494e4:	b	495b8 <__assert_fail@plt+0x36a00>
   494e8:	ldr	r0, [fp, #-16]
   494ec:	bl	12aa4 <fchdir@plt>
   494f0:	cmp	r0, #0
   494f4:	beq	4952c <__assert_fail@plt+0x36974>
   494f8:	bl	128d0 <__errno_location@plt>
   494fc:	ldr	r0, [r0]
   49500:	str	r0, [fp, #-36]	; 0xffffffdc
   49504:	sub	r0, fp, #32
   49508:	bl	48e64 <__assert_fail@plt+0x362ac>
   4950c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   49510:	str	r0, [sp, #12]
   49514:	bl	128d0 <__errno_location@plt>
   49518:	ldr	r1, [sp, #12]
   4951c:	str	r1, [r0]
   49520:	mvn	r0, #0
   49524:	str	r0, [fp, #-12]
   49528:	b	495b8 <__assert_fail@plt+0x36a00>
   4952c:	ldr	r0, [fp, #-20]	; 0xffffffec
   49530:	ldr	r1, [fp, #-24]	; 0xffffffe8
   49534:	bl	12978 <setfilecon@plt>
   49538:	str	r0, [fp, #-40]	; 0xffffffd8
   4953c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   49540:	cmn	r0, #1
   49544:	bne	49558 <__assert_fail@plt+0x369a0>
   49548:	bl	128d0 <__errno_location@plt>
   4954c:	ldr	r0, [r0]
   49550:	str	r0, [sp, #8]
   49554:	b	49564 <__assert_fail@plt+0x369ac>
   49558:	movw	r0, #0
   4955c:	str	r0, [sp, #8]
   49560:	b	49564 <__assert_fail@plt+0x369ac>
   49564:	ldr	r0, [sp, #8]
   49568:	str	r0, [fp, #-36]	; 0xffffffdc
   4956c:	sub	r0, fp, #32
   49570:	bl	48e10 <__assert_fail@plt+0x36258>
   49574:	cmp	r0, #0
   49578:	beq	49588 <__assert_fail@plt+0x369d0>
   4957c:	bl	128d0 <__errno_location@plt>
   49580:	ldr	r0, [r0]
   49584:	bl	3242c <__assert_fail@plt+0x1f874>
   49588:	sub	r0, fp, #32
   4958c:	bl	48e64 <__assert_fail@plt+0x362ac>
   49590:	ldr	r0, [fp, #-36]	; 0xffffffdc
   49594:	cmp	r0, #0
   49598:	beq	495b0 <__assert_fail@plt+0x369f8>
   4959c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   495a0:	str	r0, [sp, #4]
   495a4:	bl	128d0 <__errno_location@plt>
   495a8:	ldr	r1, [sp, #4]
   495ac:	str	r1, [r0]
   495b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   495b4:	str	r0, [fp, #-12]
   495b8:	ldr	r0, [fp, #-12]
   495bc:	sub	sp, fp, #8
   495c0:	pop	{r4, r5, fp, pc}
   495c4:	push	{r4, r5, fp, lr}
   495c8:	add	fp, sp, #8
   495cc:	sub	sp, sp, #4096	; 0x1000
   495d0:	str	r0, [fp, #-16]
   495d4:	str	r1, [fp, #-20]	; 0xffffffec
   495d8:	str	r2, [fp, #-24]	; 0xffffffe8
   495dc:	ldr	r0, [fp, #-16]
   495e0:	cmn	r0, #100	; 0x64
   495e4:	beq	495f8 <__assert_fail@plt+0x36a40>
   495e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   495ec:	ldrb	r0, [r0]
   495f0:	cmp	r0, #47	; 0x2f
   495f4:	bne	4960c <__assert_fail@plt+0x36a54>
   495f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   495fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   49600:	bl	1254c <lsetfilecon@plt>
   49604:	str	r0, [fp, #-12]
   49608:	b	49818 <__assert_fail@plt+0x36c60>
   4960c:	add	r0, sp, #32
   49610:	ldr	r1, [fp, #-16]
   49614:	ldr	r2, [fp, #-20]	; 0xffffffec
   49618:	bl	6e734 <__assert_fail@plt+0x5bb7c>
   4961c:	str	r0, [sp, #28]
   49620:	ldr	r0, [sp, #28]
   49624:	movw	r1, #0
   49628:	cmp	r0, r1
   4962c:	beq	496ec <__assert_fail@plt+0x36b34>
   49630:	ldr	r0, [sp, #28]
   49634:	ldr	r1, [fp, #-24]	; 0xffffffe8
   49638:	bl	1254c <lsetfilecon@plt>
   4963c:	str	r0, [sp, #24]
   49640:	bl	128d0 <__errno_location@plt>
   49644:	add	r1, sp, #32
   49648:	ldr	r0, [r0]
   4964c:	str	r0, [sp, #20]
   49650:	ldr	r0, [sp, #28]
   49654:	cmp	r0, r1
   49658:	beq	49664 <__assert_fail@plt+0x36aac>
   4965c:	ldr	r0, [sp, #28]
   49660:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   49664:	ldr	r0, [sp, #24]
   49668:	mvn	r1, #0
   4966c:	cmp	r1, r0
   49670:	beq	49680 <__assert_fail@plt+0x36ac8>
   49674:	ldr	r0, [sp, #24]
   49678:	str	r0, [fp, #-12]
   4967c:	b	49818 <__assert_fail@plt+0x36c60>
   49680:	ldr	r0, [sp, #20]
   49684:	cmp	r0, #20
   49688:	beq	496e8 <__assert_fail@plt+0x36b30>
   4968c:	ldr	r0, [sp, #20]
   49690:	cmp	r0, #2
   49694:	beq	496e8 <__assert_fail@plt+0x36b30>
   49698:	ldr	r0, [sp, #20]
   4969c:	cmp	r0, #1
   496a0:	beq	496e8 <__assert_fail@plt+0x36b30>
   496a4:	ldr	r0, [sp, #20]
   496a8:	cmp	r0, #13
   496ac:	beq	496e8 <__assert_fail@plt+0x36b30>
   496b0:	ldr	r0, [sp, #20]
   496b4:	cmp	r0, #38	; 0x26
   496b8:	beq	496e8 <__assert_fail@plt+0x36b30>
   496bc:	ldr	r0, [sp, #20]
   496c0:	cmp	r0, #95	; 0x5f
   496c4:	beq	496e8 <__assert_fail@plt+0x36b30>
   496c8:	ldr	r0, [sp, #20]
   496cc:	str	r0, [sp, #16]
   496d0:	bl	128d0 <__errno_location@plt>
   496d4:	ldr	r1, [sp, #16]
   496d8:	str	r1, [r0]
   496dc:	ldr	r0, [sp, #24]
   496e0:	str	r0, [fp, #-12]
   496e4:	b	49818 <__assert_fail@plt+0x36c60>
   496e8:	b	496ec <__assert_fail@plt+0x36b34>
   496ec:	sub	r0, fp, #32
   496f0:	bl	48d74 <__assert_fail@plt+0x361bc>
   496f4:	cmp	r0, #0
   496f8:	beq	49708 <__assert_fail@plt+0x36b50>
   496fc:	bl	128d0 <__errno_location@plt>
   49700:	ldr	r0, [r0]
   49704:	bl	323d8 <__assert_fail@plt+0x1f820>
   49708:	ldr	r0, [fp, #-16]
   4970c:	movw	r1, #0
   49710:	cmp	r1, r0
   49714:	bgt	49748 <__assert_fail@plt+0x36b90>
   49718:	ldr	r0, [fp, #-16]
   4971c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   49720:	cmp	r0, r1
   49724:	bne	49748 <__assert_fail@plt+0x36b90>
   49728:	sub	r0, fp, #32
   4972c:	bl	48e64 <__assert_fail@plt+0x362ac>
   49730:	bl	128d0 <__errno_location@plt>
   49734:	movw	r1, #9
   49738:	str	r1, [r0]
   4973c:	mvn	r0, #0
   49740:	str	r0, [fp, #-12]
   49744:	b	49818 <__assert_fail@plt+0x36c60>
   49748:	ldr	r0, [fp, #-16]
   4974c:	bl	12aa4 <fchdir@plt>
   49750:	cmp	r0, #0
   49754:	beq	4978c <__assert_fail@plt+0x36bd4>
   49758:	bl	128d0 <__errno_location@plt>
   4975c:	ldr	r0, [r0]
   49760:	str	r0, [fp, #-36]	; 0xffffffdc
   49764:	sub	r0, fp, #32
   49768:	bl	48e64 <__assert_fail@plt+0x362ac>
   4976c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   49770:	str	r0, [sp, #12]
   49774:	bl	128d0 <__errno_location@plt>
   49778:	ldr	r1, [sp, #12]
   4977c:	str	r1, [r0]
   49780:	mvn	r0, #0
   49784:	str	r0, [fp, #-12]
   49788:	b	49818 <__assert_fail@plt+0x36c60>
   4978c:	ldr	r0, [fp, #-20]	; 0xffffffec
   49790:	ldr	r1, [fp, #-24]	; 0xffffffe8
   49794:	bl	1254c <lsetfilecon@plt>
   49798:	str	r0, [fp, #-40]	; 0xffffffd8
   4979c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   497a0:	cmn	r0, #1
   497a4:	bne	497b8 <__assert_fail@plt+0x36c00>
   497a8:	bl	128d0 <__errno_location@plt>
   497ac:	ldr	r0, [r0]
   497b0:	str	r0, [sp, #8]
   497b4:	b	497c4 <__assert_fail@plt+0x36c0c>
   497b8:	movw	r0, #0
   497bc:	str	r0, [sp, #8]
   497c0:	b	497c4 <__assert_fail@plt+0x36c0c>
   497c4:	ldr	r0, [sp, #8]
   497c8:	str	r0, [fp, #-36]	; 0xffffffdc
   497cc:	sub	r0, fp, #32
   497d0:	bl	48e10 <__assert_fail@plt+0x36258>
   497d4:	cmp	r0, #0
   497d8:	beq	497e8 <__assert_fail@plt+0x36c30>
   497dc:	bl	128d0 <__errno_location@plt>
   497e0:	ldr	r0, [r0]
   497e4:	bl	3242c <__assert_fail@plt+0x1f874>
   497e8:	sub	r0, fp, #32
   497ec:	bl	48e64 <__assert_fail@plt+0x362ac>
   497f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   497f4:	cmp	r0, #0
   497f8:	beq	49810 <__assert_fail@plt+0x36c58>
   497fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   49800:	str	r0, [sp, #4]
   49804:	bl	128d0 <__errno_location@plt>
   49808:	ldr	r1, [sp, #4]
   4980c:	str	r1, [r0]
   49810:	ldr	r0, [fp, #-40]	; 0xffffffd8
   49814:	str	r0, [fp, #-12]
   49818:	ldr	r0, [fp, #-12]
   4981c:	sub	sp, fp, #8
   49820:	pop	{r4, r5, fp, pc}
   49824:	sub	sp, sp, #4
   49828:	str	r0, [sp]
   4982c:	ldr	r0, [sp]
   49830:	ldr	r0, [r0, #76]	; 0x4c
   49834:	add	sp, sp, #4
   49838:	bx	lr
   4983c:	sub	sp, sp, #4
   49840:	str	r0, [sp]
   49844:	ldr	r0, [sp]
   49848:	ldr	r0, [r0, #92]	; 0x5c
   4984c:	add	sp, sp, #4
   49850:	bx	lr
   49854:	sub	sp, sp, #4
   49858:	str	r0, [sp]
   4985c:	ldr	r0, [sp]
   49860:	ldr	r0, [r0, #84]	; 0x54
   49864:	add	sp, sp, #4
   49868:	bx	lr
   4986c:	sub	sp, sp, #4
   49870:	str	r0, [sp]
   49874:	movw	r0, #0
   49878:	add	sp, sp, #4
   4987c:	bx	lr
   49880:	sub	sp, sp, #4
   49884:	str	r1, [sp]
   49888:	ldr	r1, [sp]
   4988c:	ldr	r2, [r1, #72]	; 0x48
   49890:	str	r2, [r0]
   49894:	ldr	r1, [r1, #76]	; 0x4c
   49898:	str	r1, [r0, #4]
   4989c:	add	sp, sp, #4
   498a0:	bx	lr
   498a4:	sub	sp, sp, #4
   498a8:	str	r1, [sp]
   498ac:	ldr	r1, [sp]
   498b0:	ldr	r2, [r1, #88]	; 0x58
   498b4:	str	r2, [r0]
   498b8:	ldr	r1, [r1, #92]	; 0x5c
   498bc:	str	r1, [r0, #4]
   498c0:	add	sp, sp, #4
   498c4:	bx	lr
   498c8:	sub	sp, sp, #4
   498cc:	str	r1, [sp]
   498d0:	ldr	r1, [sp]
   498d4:	ldr	r2, [r1, #80]	; 0x50
   498d8:	str	r2, [r0]
   498dc:	ldr	r1, [r1, #84]	; 0x54
   498e0:	str	r1, [r0, #4]
   498e4:	add	sp, sp, #4
   498e8:	bx	lr
   498ec:	sub	sp, sp, #4
   498f0:	str	r1, [sp]
   498f4:	mvn	r1, #0
   498f8:	str	r1, [r0]
   498fc:	str	r1, [r0, #4]
   49900:	add	sp, sp, #4
   49904:	bx	lr
   49908:	sub	sp, sp, #8
   4990c:	str	r0, [sp, #4]
   49910:	str	r1, [sp]
   49914:	ldr	r0, [sp, #4]
   49918:	add	sp, sp, #8
   4991c:	bx	lr
   49920:	push	{fp, lr}
   49924:	mov	fp, sp
   49928:	sub	sp, sp, #16
   4992c:	str	r0, [sp, #8]
   49930:	str	r1, [sp, #4]
   49934:	ldr	r0, [sp, #8]
   49938:	ldr	r2, [sp, #4]
   4993c:	mov	r1, #0
   49940:	bl	1296c <memchr@plt>
   49944:	str	r0, [sp]
   49948:	ldr	r0, [sp]
   4994c:	movw	r1, #0
   49950:	cmp	r0, r1
   49954:	beq	49970 <__assert_fail@plt+0x36db8>
   49958:	ldr	r0, [sp]
   4995c:	ldr	r1, [sp, #8]
   49960:	sub	r0, r0, r1
   49964:	add	r0, r0, #1
   49968:	str	r0, [fp, #-4]
   4996c:	b	49978 <__assert_fail@plt+0x36dc0>
   49970:	ldr	r0, [sp, #4]
   49974:	str	r0, [fp, #-4]
   49978:	ldr	r0, [fp, #-4]
   4997c:	mov	sp, fp
   49980:	pop	{fp, pc}
   49984:	push	{fp, lr}
   49988:	mov	fp, sp
   4998c:	sub	sp, sp, #8
   49990:	str	r0, [sp, #4]
   49994:	ldr	r0, [sp, #4]
   49998:	movw	r1, #0
   4999c:	movw	r2, #3
   499a0:	bl	4e678 <__assert_fail@plt+0x3bac0>
   499a4:	mov	sp, fp
   499a8:	pop	{fp, pc}
   499ac:	push	{fp, lr}
   499b0:	mov	fp, sp
   499b4:	sub	sp, sp, #24
   499b8:	str	r0, [fp, #-4]
   499bc:	ldr	r0, [fp, #-4]
   499c0:	movw	r1, #0
   499c4:	cmp	r1, r0
   499c8:	bgt	49a18 <__assert_fail@plt+0x36e60>
   499cc:	ldr	r0, [fp, #-4]
   499d0:	cmp	r0, #2
   499d4:	bgt	49a18 <__assert_fail@plt+0x36e60>
   499d8:	ldr	r0, [fp, #-4]
   499dc:	bl	49984 <__assert_fail@plt+0x36dcc>
   499e0:	str	r0, [fp, #-8]
   499e4:	bl	128d0 <__errno_location@plt>
   499e8:	ldr	r0, [r0]
   499ec:	str	r0, [sp, #12]
   499f0:	ldr	r0, [fp, #-4]
   499f4:	bl	12b70 <close@plt>
   499f8:	ldr	r1, [sp, #12]
   499fc:	str	r0, [sp, #8]
   49a00:	str	r1, [sp, #4]
   49a04:	bl	128d0 <__errno_location@plt>
   49a08:	ldr	r1, [sp, #4]
   49a0c:	str	r1, [r0]
   49a10:	ldr	r0, [fp, #-8]
   49a14:	str	r0, [fp, #-4]
   49a18:	ldr	r0, [fp, #-4]
   49a1c:	mov	sp, fp
   49a20:	pop	{fp, pc}
   49a24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   49a28:	add	fp, sp, #28
   49a2c:	sub	sp, sp, #196	; 0xc4
   49a30:	ldr	ip, [fp, #12]
   49a34:	ldr	lr, [fp, #8]
   49a38:	str	r0, [fp, #-32]	; 0xffffffe0
   49a3c:	str	r1, [fp, #-36]	; 0xffffffdc
   49a40:	str	r2, [fp, #-40]	; 0xffffffd8
   49a44:	str	r3, [fp, #-44]	; 0xffffffd4
   49a48:	ldr	r0, [fp, #-36]	; 0xffffffdc
   49a4c:	movw	r1, #0
   49a50:	cmp	r0, r1
   49a54:	beq	49a88 <__assert_fail@plt+0x36ed0>
   49a58:	ldr	r0, [fp, #-32]	; 0xffffffe0
   49a5c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   49a60:	ldr	r3, [fp, #-40]	; 0xffffffd8
   49a64:	ldr	r1, [fp, #-44]	; 0xffffffd4
   49a68:	movw	ip, #48124	; 0xbbfc
   49a6c:	movt	ip, #7
   49a70:	str	r1, [fp, #-48]	; 0xffffffd0
   49a74:	mov	r1, ip
   49a78:	ldr	ip, [fp, #-48]	; 0xffffffd0
   49a7c:	str	ip, [sp]
   49a80:	bl	128c4 <fprintf@plt>
   49a84:	b	49aa0 <__assert_fail@plt+0x36ee8>
   49a88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   49a8c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   49a90:	ldr	r3, [fp, #-44]	; 0xffffffd4
   49a94:	movw	r1, #48136	; 0xbc08
   49a98:	movt	r1, #7
   49a9c:	bl	128c4 <fprintf@plt>
   49aa0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   49aa4:	movw	r1, #48143	; 0xbc0f
   49aa8:	movt	r1, #7
   49aac:	str	r0, [fp, #-52]	; 0xffffffcc
   49ab0:	mov	r0, r1
   49ab4:	bl	12864 <gettext@plt>
   49ab8:	movw	r1, #48839	; 0xbec7
   49abc:	movt	r1, #7
   49ac0:	movw	r3, #2022	; 0x7e6
   49ac4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   49ac8:	str	r0, [fp, #-56]	; 0xffffffc8
   49acc:	mov	r0, r2
   49ad0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   49ad4:	bl	128c4 <fprintf@plt>
   49ad8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   49adc:	movw	r2, #29908	; 0x74d4
   49ae0:	movt	r2, #7
   49ae4:	str	r0, [fp, #-60]	; 0xffffffc4
   49ae8:	mov	r0, r2
   49aec:	str	r2, [fp, #-64]	; 0xffffffc0
   49af0:	bl	12b4c <fputs@plt>
   49af4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   49af8:	movw	r2, #48147	; 0xbc13
   49afc:	movt	r2, #7
   49b00:	str	r0, [fp, #-68]	; 0xffffffbc
   49b04:	mov	r0, r2
   49b08:	str	r1, [fp, #-72]	; 0xffffffb8
   49b0c:	bl	12864 <gettext@plt>
   49b10:	movw	r2, #48318	; 0xbcbe
   49b14:	movt	r2, #7
   49b18:	ldr	r1, [fp, #-72]	; 0xffffffb8
   49b1c:	str	r0, [fp, #-76]	; 0xffffffb4
   49b20:	mov	r0, r1
   49b24:	ldr	r1, [fp, #-76]	; 0xffffffb4
   49b28:	bl	128c4 <fprintf@plt>
   49b2c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   49b30:	ldr	r2, [fp, #-64]	; 0xffffffc0
   49b34:	str	r0, [fp, #-80]	; 0xffffffb0
   49b38:	mov	r0, r2
   49b3c:	bl	12b4c <fputs@plt>
   49b40:	ldr	r1, [fp, #12]
   49b44:	cmp	r1, #9
   49b48:	str	r1, [fp, #-84]	; 0xffffffac
   49b4c:	bhi	49f68 <__assert_fail@plt+0x373b0>
   49b50:	add	r0, pc, #8
   49b54:	ldr	r1, [fp, #-84]	; 0xffffffac
   49b58:	ldr	r0, [r0, r1, lsl #2]
   49b5c:	mov	pc, r0
   49b60:	andeq	r9, r4, r8, lsl #23
   49b64:	andeq	r9, r4, ip, lsl #23
   49b68:	andeq	r9, r4, r4, asr #23
   49b6c:	andeq	r9, r4, r4, lsl #24
   49b70:	andeq	r9, r4, ip, asr ip
   49b74:	andeq	r9, r4, r0, asr #25
   49b78:	andeq	r9, r4, r0, lsr sp
   49b7c:	andeq	r9, r4, ip, lsr #27
   49b80:	andeq	r9, r4, r4, lsr lr
   49b84:	andeq	r9, r4, r8, asr #29
   49b88:	b	4a004 <__assert_fail@plt+0x3744c>
   49b8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   49b90:	movw	r1, #48352	; 0xbce0
   49b94:	movt	r1, #7
   49b98:	str	r0, [fp, #-88]	; 0xffffffa8
   49b9c:	mov	r0, r1
   49ba0:	bl	12864 <gettext@plt>
   49ba4:	ldr	r1, [fp, #8]
   49ba8:	ldr	r2, [r1]
   49bac:	ldr	r1, [fp, #-88]	; 0xffffffa8
   49bb0:	str	r0, [fp, #-92]	; 0xffffffa4
   49bb4:	mov	r0, r1
   49bb8:	ldr	r1, [fp, #-92]	; 0xffffffa4
   49bbc:	bl	128c4 <fprintf@plt>
   49bc0:	b	4a004 <__assert_fail@plt+0x3744c>
   49bc4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   49bc8:	movw	r1, #48368	; 0xbcf0
   49bcc:	movt	r1, #7
   49bd0:	str	r0, [fp, #-96]	; 0xffffffa0
   49bd4:	mov	r0, r1
   49bd8:	bl	12864 <gettext@plt>
   49bdc:	ldr	r1, [fp, #8]
   49be0:	ldr	r2, [r1]
   49be4:	ldr	r1, [fp, #8]
   49be8:	ldr	r3, [r1, #4]
   49bec:	ldr	r1, [fp, #-96]	; 0xffffffa0
   49bf0:	str	r0, [fp, #-100]	; 0xffffff9c
   49bf4:	mov	r0, r1
   49bf8:	ldr	r1, [fp, #-100]	; 0xffffff9c
   49bfc:	bl	128c4 <fprintf@plt>
   49c00:	b	4a004 <__assert_fail@plt+0x3744c>
   49c04:	ldr	r0, [fp, #-32]	; 0xffffffe0
   49c08:	movw	r1, #48391	; 0xbd07
   49c0c:	movt	r1, #7
   49c10:	str	r0, [fp, #-104]	; 0xffffff98
   49c14:	mov	r0, r1
   49c18:	bl	12864 <gettext@plt>
   49c1c:	ldr	r1, [fp, #8]
   49c20:	ldr	r2, [r1]
   49c24:	ldr	r1, [fp, #8]
   49c28:	ldr	r3, [r1, #4]
   49c2c:	ldr	r1, [fp, #8]
   49c30:	ldr	r1, [r1, #8]
   49c34:	ldr	ip, [fp, #-104]	; 0xffffff98
   49c38:	str	r0, [fp, #-108]	; 0xffffff94
   49c3c:	mov	r0, ip
   49c40:	ldr	lr, [fp, #-108]	; 0xffffff94
   49c44:	str	r1, [sp, #112]	; 0x70
   49c48:	mov	r1, lr
   49c4c:	ldr	r4, [sp, #112]	; 0x70
   49c50:	str	r4, [sp]
   49c54:	bl	128c4 <fprintf@plt>
   49c58:	b	4a004 <__assert_fail@plt+0x3744c>
   49c5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   49c60:	movw	r1, #48419	; 0xbd23
   49c64:	movt	r1, #7
   49c68:	str	r0, [sp, #108]	; 0x6c
   49c6c:	mov	r0, r1
   49c70:	bl	12864 <gettext@plt>
   49c74:	ldr	r1, [fp, #8]
   49c78:	ldr	r2, [r1]
   49c7c:	ldr	r1, [fp, #8]
   49c80:	ldr	r3, [r1, #4]
   49c84:	ldr	r1, [fp, #8]
   49c88:	ldr	r1, [r1, #8]
   49c8c:	ldr	ip, [fp, #8]
   49c90:	ldr	ip, [ip, #12]
   49c94:	ldr	lr, [sp, #108]	; 0x6c
   49c98:	str	r0, [sp, #104]	; 0x68
   49c9c:	mov	r0, lr
   49ca0:	ldr	r4, [sp, #104]	; 0x68
   49ca4:	str	r1, [sp, #100]	; 0x64
   49ca8:	mov	r1, r4
   49cac:	ldr	r5, [sp, #100]	; 0x64
   49cb0:	str	r5, [sp]
   49cb4:	str	ip, [sp, #4]
   49cb8:	bl	128c4 <fprintf@plt>
   49cbc:	b	4a004 <__assert_fail@plt+0x3744c>
   49cc0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   49cc4:	movw	r1, #48451	; 0xbd43
   49cc8:	movt	r1, #7
   49ccc:	str	r0, [sp, #96]	; 0x60
   49cd0:	mov	r0, r1
   49cd4:	bl	12864 <gettext@plt>
   49cd8:	ldr	r1, [fp, #8]
   49cdc:	ldr	r2, [r1]
   49ce0:	ldr	r1, [fp, #8]
   49ce4:	ldr	r3, [r1, #4]
   49ce8:	ldr	r1, [fp, #8]
   49cec:	ldr	r1, [r1, #8]
   49cf0:	ldr	ip, [fp, #8]
   49cf4:	ldr	ip, [ip, #12]
   49cf8:	ldr	lr, [fp, #8]
   49cfc:	ldr	lr, [lr, #16]
   49d00:	ldr	r4, [sp, #96]	; 0x60
   49d04:	str	r0, [sp, #92]	; 0x5c
   49d08:	mov	r0, r4
   49d0c:	ldr	r5, [sp, #92]	; 0x5c
   49d10:	str	r1, [sp, #88]	; 0x58
   49d14:	mov	r1, r5
   49d18:	ldr	r6, [sp, #88]	; 0x58
   49d1c:	str	r6, [sp]
   49d20:	str	ip, [sp, #4]
   49d24:	str	lr, [sp, #8]
   49d28:	bl	128c4 <fprintf@plt>
   49d2c:	b	4a004 <__assert_fail@plt+0x3744c>
   49d30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   49d34:	movw	r1, #48487	; 0xbd67
   49d38:	movt	r1, #7
   49d3c:	str	r0, [sp, #84]	; 0x54
   49d40:	mov	r0, r1
   49d44:	bl	12864 <gettext@plt>
   49d48:	ldr	r1, [fp, #8]
   49d4c:	ldr	r2, [r1]
   49d50:	ldr	r1, [fp, #8]
   49d54:	ldr	r3, [r1, #4]
   49d58:	ldr	r1, [fp, #8]
   49d5c:	ldr	r1, [r1, #8]
   49d60:	ldr	ip, [fp, #8]
   49d64:	ldr	ip, [ip, #12]
   49d68:	ldr	lr, [fp, #8]
   49d6c:	ldr	lr, [lr, #16]
   49d70:	ldr	r4, [fp, #8]
   49d74:	ldr	r4, [r4, #20]
   49d78:	ldr	r5, [sp, #84]	; 0x54
   49d7c:	str	r0, [sp, #80]	; 0x50
   49d80:	mov	r0, r5
   49d84:	ldr	r6, [sp, #80]	; 0x50
   49d88:	str	r1, [sp, #76]	; 0x4c
   49d8c:	mov	r1, r6
   49d90:	ldr	r7, [sp, #76]	; 0x4c
   49d94:	str	r7, [sp]
   49d98:	str	ip, [sp, #4]
   49d9c:	str	lr, [sp, #8]
   49da0:	str	r4, [sp, #12]
   49da4:	bl	128c4 <fprintf@plt>
   49da8:	b	4a004 <__assert_fail@plt+0x3744c>
   49dac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   49db0:	movw	r1, #48527	; 0xbd8f
   49db4:	movt	r1, #7
   49db8:	str	r0, [sp, #72]	; 0x48
   49dbc:	mov	r0, r1
   49dc0:	bl	12864 <gettext@plt>
   49dc4:	ldr	r1, [fp, #8]
   49dc8:	ldr	r2, [r1]
   49dcc:	ldr	r1, [fp, #8]
   49dd0:	ldr	r3, [r1, #4]
   49dd4:	ldr	r1, [fp, #8]
   49dd8:	ldr	r1, [r1, #8]
   49ddc:	ldr	ip, [fp, #8]
   49de0:	ldr	ip, [ip, #12]
   49de4:	ldr	lr, [fp, #8]
   49de8:	ldr	lr, [lr, #16]
   49dec:	ldr	r4, [fp, #8]
   49df0:	ldr	r4, [r4, #20]
   49df4:	ldr	r5, [fp, #8]
   49df8:	ldr	r5, [r5, #24]
   49dfc:	ldr	r6, [sp, #72]	; 0x48
   49e00:	str	r0, [sp, #68]	; 0x44
   49e04:	mov	r0, r6
   49e08:	ldr	r7, [sp, #68]	; 0x44
   49e0c:	str	r1, [sp, #64]	; 0x40
   49e10:	mov	r1, r7
   49e14:	ldr	r8, [sp, #64]	; 0x40
   49e18:	str	r8, [sp]
   49e1c:	str	ip, [sp, #4]
   49e20:	str	lr, [sp, #8]
   49e24:	str	r4, [sp, #12]
   49e28:	str	r5, [sp, #16]
   49e2c:	bl	128c4 <fprintf@plt>
   49e30:	b	4a004 <__assert_fail@plt+0x3744c>
   49e34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   49e38:	movw	r1, #48571	; 0xbdbb
   49e3c:	movt	r1, #7
   49e40:	str	r0, [sp, #60]	; 0x3c
   49e44:	mov	r0, r1
   49e48:	bl	12864 <gettext@plt>
   49e4c:	ldr	r1, [fp, #8]
   49e50:	ldr	r2, [r1]
   49e54:	ldr	r1, [fp, #8]
   49e58:	ldr	r3, [r1, #4]
   49e5c:	ldr	r1, [fp, #8]
   49e60:	ldr	r1, [r1, #8]
   49e64:	ldr	ip, [fp, #8]
   49e68:	ldr	ip, [ip, #12]
   49e6c:	ldr	lr, [fp, #8]
   49e70:	ldr	lr, [lr, #16]
   49e74:	ldr	r4, [fp, #8]
   49e78:	ldr	r4, [r4, #20]
   49e7c:	ldr	r5, [fp, #8]
   49e80:	ldr	r5, [r5, #24]
   49e84:	ldr	r6, [fp, #8]
   49e88:	ldr	r6, [r6, #28]
   49e8c:	ldr	r7, [sp, #60]	; 0x3c
   49e90:	str	r0, [sp, #56]	; 0x38
   49e94:	mov	r0, r7
   49e98:	ldr	r8, [sp, #56]	; 0x38
   49e9c:	str	r1, [sp, #52]	; 0x34
   49ea0:	mov	r1, r8
   49ea4:	ldr	r9, [sp, #52]	; 0x34
   49ea8:	str	r9, [sp]
   49eac:	str	ip, [sp, #4]
   49eb0:	str	lr, [sp, #8]
   49eb4:	str	r4, [sp, #12]
   49eb8:	str	r5, [sp, #16]
   49ebc:	str	r6, [sp, #20]
   49ec0:	bl	128c4 <fprintf@plt>
   49ec4:	b	4a004 <__assert_fail@plt+0x3744c>
   49ec8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   49ecc:	movw	r1, #48619	; 0xbdeb
   49ed0:	movt	r1, #7
   49ed4:	str	r0, [sp, #48]	; 0x30
   49ed8:	mov	r0, r1
   49edc:	bl	12864 <gettext@plt>
   49ee0:	ldr	r1, [fp, #8]
   49ee4:	ldr	r2, [r1]
   49ee8:	ldr	r1, [fp, #8]
   49eec:	ldr	r3, [r1, #4]
   49ef0:	ldr	r1, [fp, #8]
   49ef4:	ldr	r1, [r1, #8]
   49ef8:	ldr	ip, [fp, #8]
   49efc:	ldr	ip, [ip, #12]
   49f00:	ldr	lr, [fp, #8]
   49f04:	ldr	lr, [lr, #16]
   49f08:	ldr	r4, [fp, #8]
   49f0c:	ldr	r4, [r4, #20]
   49f10:	ldr	r5, [fp, #8]
   49f14:	ldr	r5, [r5, #24]
   49f18:	ldr	r6, [fp, #8]
   49f1c:	ldr	r6, [r6, #28]
   49f20:	ldr	r7, [fp, #8]
   49f24:	ldr	r7, [r7, #32]
   49f28:	ldr	r8, [sp, #48]	; 0x30
   49f2c:	str	r0, [sp, #44]	; 0x2c
   49f30:	mov	r0, r8
   49f34:	ldr	r9, [sp, #44]	; 0x2c
   49f38:	str	r1, [sp, #40]	; 0x28
   49f3c:	mov	r1, r9
   49f40:	ldr	sl, [sp, #40]	; 0x28
   49f44:	str	sl, [sp]
   49f48:	str	ip, [sp, #4]
   49f4c:	str	lr, [sp, #8]
   49f50:	str	r4, [sp, #12]
   49f54:	str	r5, [sp, #16]
   49f58:	str	r6, [sp, #20]
   49f5c:	str	r7, [sp, #24]
   49f60:	bl	128c4 <fprintf@plt>
   49f64:	b	4a004 <__assert_fail@plt+0x3744c>
   49f68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   49f6c:	movw	r1, #48671	; 0xbe1f
   49f70:	movt	r1, #7
   49f74:	str	r0, [sp, #36]	; 0x24
   49f78:	mov	r0, r1
   49f7c:	bl	12864 <gettext@plt>
   49f80:	ldr	r1, [fp, #8]
   49f84:	ldr	r2, [r1]
   49f88:	ldr	r1, [fp, #8]
   49f8c:	ldr	r3, [r1, #4]
   49f90:	ldr	r1, [fp, #8]
   49f94:	ldr	r1, [r1, #8]
   49f98:	ldr	ip, [fp, #8]
   49f9c:	ldr	ip, [ip, #12]
   49fa0:	ldr	lr, [fp, #8]
   49fa4:	ldr	lr, [lr, #16]
   49fa8:	ldr	r4, [fp, #8]
   49fac:	ldr	r4, [r4, #20]
   49fb0:	ldr	r5, [fp, #8]
   49fb4:	ldr	r5, [r5, #24]
   49fb8:	ldr	r6, [fp, #8]
   49fbc:	ldr	r6, [r6, #28]
   49fc0:	ldr	r7, [fp, #8]
   49fc4:	ldr	r7, [r7, #32]
   49fc8:	ldr	r8, [sp, #36]	; 0x24
   49fcc:	str	r0, [sp, #32]
   49fd0:	mov	r0, r8
   49fd4:	ldr	r9, [sp, #32]
   49fd8:	str	r1, [sp, #28]
   49fdc:	mov	r1, r9
   49fe0:	ldr	sl, [sp, #28]
   49fe4:	str	sl, [sp]
   49fe8:	str	ip, [sp, #4]
   49fec:	str	lr, [sp, #8]
   49ff0:	str	r4, [sp, #12]
   49ff4:	str	r5, [sp, #16]
   49ff8:	str	r6, [sp, #20]
   49ffc:	str	r7, [sp, #24]
   4a000:	bl	128c4 <fprintf@plt>
   4a004:	sub	sp, fp, #28
   4a008:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4a00c:	push	{fp, lr}
   4a010:	mov	fp, sp
   4a014:	sub	sp, sp, #32
   4a018:	ldr	ip, [fp, #8]
   4a01c:	str	r0, [fp, #-4]
   4a020:	str	r1, [fp, #-8]
   4a024:	str	r2, [fp, #-12]
   4a028:	str	r3, [sp, #16]
   4a02c:	movw	r0, #0
   4a030:	str	r0, [sp, #12]
   4a034:	ldr	r0, [fp, #8]
   4a038:	ldr	r1, [sp, #12]
   4a03c:	add	r0, r0, r1, lsl #2
   4a040:	ldr	r0, [r0]
   4a044:	movw	r1, #0
   4a048:	cmp	r0, r1
   4a04c:	beq	4a064 <__assert_fail@plt+0x374ac>
   4a050:	b	4a054 <__assert_fail@plt+0x3749c>
   4a054:	ldr	r0, [sp, #12]
   4a058:	add	r0, r0, #1
   4a05c:	str	r0, [sp, #12]
   4a060:	b	4a034 <__assert_fail@plt+0x3747c>
   4a064:	ldr	r0, [fp, #-4]
   4a068:	ldr	r1, [fp, #-8]
   4a06c:	ldr	r2, [fp, #-12]
   4a070:	ldr	r3, [sp, #16]
   4a074:	ldr	ip, [fp, #8]
   4a078:	ldr	lr, [sp, #12]
   4a07c:	str	ip, [sp]
   4a080:	str	lr, [sp, #4]
   4a084:	bl	49a24 <__assert_fail@plt+0x36e6c>
   4a088:	mov	sp, fp
   4a08c:	pop	{fp, pc}
   4a090:	push	{fp, lr}
   4a094:	mov	fp, sp
   4a098:	sub	sp, sp, #80	; 0x50
   4a09c:	ldr	ip, [fp, #8]
   4a0a0:	str	ip, [fp, #-4]
   4a0a4:	str	r0, [fp, #-8]
   4a0a8:	str	r1, [fp, #-12]
   4a0ac:	str	r2, [fp, #-16]
   4a0b0:	str	r3, [fp, #-20]	; 0xffffffec
   4a0b4:	movw	r0, #0
   4a0b8:	str	r0, [fp, #-24]	; 0xffffffe8
   4a0bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4a0c0:	cmp	r0, #10
   4a0c4:	movw	r0, #0
   4a0c8:	str	r0, [sp, #12]
   4a0cc:	bcs	4a104 <__assert_fail@plt+0x3754c>
   4a0d0:	ldr	r0, [fp, #-4]
   4a0d4:	add	r1, r0, #4
   4a0d8:	str	r1, [fp, #-4]
   4a0dc:	ldr	r0, [r0]
   4a0e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4a0e4:	add	r2, sp, #16
   4a0e8:	add	r1, r2, r1, lsl #2
   4a0ec:	str	r0, [r1]
   4a0f0:	movw	r1, #0
   4a0f4:	cmp	r0, r1
   4a0f8:	movw	r0, #0
   4a0fc:	movne	r0, #1
   4a100:	str	r0, [sp, #12]
   4a104:	ldr	r0, [sp, #12]
   4a108:	tst	r0, #1
   4a10c:	beq	4a124 <__assert_fail@plt+0x3756c>
   4a110:	b	4a114 <__assert_fail@plt+0x3755c>
   4a114:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4a118:	add	r0, r0, #1
   4a11c:	str	r0, [fp, #-24]	; 0xffffffe8
   4a120:	b	4a0bc <__assert_fail@plt+0x37504>
   4a124:	add	r0, sp, #16
   4a128:	ldr	r1, [fp, #-8]
   4a12c:	ldr	r2, [fp, #-12]
   4a130:	ldr	r3, [fp, #-16]
   4a134:	ldr	ip, [fp, #-20]	; 0xffffffec
   4a138:	ldr	lr, [fp, #-24]	; 0xffffffe8
   4a13c:	str	r0, [sp, #8]
   4a140:	mov	r0, r1
   4a144:	mov	r1, r2
   4a148:	mov	r2, r3
   4a14c:	mov	r3, ip
   4a150:	ldr	ip, [sp, #8]
   4a154:	str	ip, [sp]
   4a158:	str	lr, [sp, #4]
   4a15c:	bl	49a24 <__assert_fail@plt+0x36e6c>
   4a160:	mov	sp, fp
   4a164:	pop	{fp, pc}
   4a168:	push	{fp, lr}
   4a16c:	mov	fp, sp
   4a170:	sub	sp, sp, #24
   4a174:	str	r0, [fp, #-4]
   4a178:	str	r1, [fp, #-8]
   4a17c:	str	r2, [sp, #12]
   4a180:	str	r3, [sp, #8]
   4a184:	add	r0, fp, #8
   4a188:	str	r0, [sp, #4]
   4a18c:	ldr	r0, [fp, #-4]
   4a190:	ldr	r1, [fp, #-8]
   4a194:	ldr	r2, [sp, #12]
   4a198:	ldr	r3, [sp, #8]
   4a19c:	ldr	ip, [sp, #4]
   4a1a0:	mov	lr, sp
   4a1a4:	str	ip, [lr]
   4a1a8:	bl	4a090 <__assert_fail@plt+0x374d8>
   4a1ac:	add	r0, sp, #4
   4a1b0:	mov	sp, fp
   4a1b4:	pop	{fp, pc}
   4a1b8:	push	{fp, lr}
   4a1bc:	mov	fp, sp
   4a1c0:	sub	sp, sp, #16
   4a1c4:	movw	r0, #55092	; 0xd734
   4a1c8:	movt	r0, #8
   4a1cc:	ldr	r1, [r0]
   4a1d0:	movw	r0, #29908	; 0x74d4
   4a1d4:	movt	r0, #7
   4a1d8:	bl	12b4c <fputs@plt>
   4a1dc:	movw	r1, #48731	; 0xbe5b
   4a1e0:	movt	r1, #7
   4a1e4:	str	r0, [fp, #-4]
   4a1e8:	mov	r0, r1
   4a1ec:	bl	12864 <gettext@plt>
   4a1f0:	movw	r1, #40812	; 0x9f6c
   4a1f4:	movt	r1, #7
   4a1f8:	bl	124f8 <printf@plt>
   4a1fc:	movw	r1, #48751	; 0xbe6f
   4a200:	movt	r1, #7
   4a204:	str	r0, [sp, #8]
   4a208:	mov	r0, r1
   4a20c:	bl	12864 <gettext@plt>
   4a210:	movw	r1, #40121	; 0x9cb9
   4a214:	movt	r1, #7
   4a218:	movw	r2, #40726	; 0x9f16
   4a21c:	movt	r2, #7
   4a220:	bl	124f8 <printf@plt>
   4a224:	movw	r1, #48771	; 0xbe83
   4a228:	movt	r1, #7
   4a22c:	str	r0, [sp, #4]
   4a230:	mov	r0, r1
   4a234:	bl	12864 <gettext@plt>
   4a238:	movw	r1, #48810	; 0xbeaa
   4a23c:	movt	r1, #7
   4a240:	bl	124f8 <printf@plt>
   4a244:	mov	sp, fp
   4a248:	pop	{fp, pc}
   4a24c:	push	{fp, lr}
   4a250:	mov	fp, sp
   4a254:	sub	sp, sp, #16
   4a258:	str	r0, [fp, #-4]
   4a25c:	str	r1, [sp, #8]
   4a260:	str	r2, [sp, #4]
   4a264:	ldr	r0, [fp, #-4]
   4a268:	ldr	r1, [sp, #8]
   4a26c:	ldr	r2, [sp, #4]
   4a270:	bl	4a27c <__assert_fail@plt+0x376c4>
   4a274:	mov	sp, fp
   4a278:	pop	{fp, pc}
   4a27c:	push	{fp, lr}
   4a280:	mov	fp, sp
   4a284:	sub	sp, sp, #16
   4a288:	str	r0, [fp, #-4]
   4a28c:	str	r1, [sp, #8]
   4a290:	str	r2, [sp, #4]
   4a294:	ldr	r0, [fp, #-4]
   4a298:	ldr	r1, [sp, #8]
   4a29c:	ldr	r2, [sp, #4]
   4a2a0:	bl	5396c <__assert_fail@plt+0x40db4>
   4a2a4:	str	r0, [sp]
   4a2a8:	ldr	r0, [sp]
   4a2ac:	movw	r1, #0
   4a2b0:	cmp	r0, r1
   4a2b4:	bne	4a2e4 <__assert_fail@plt+0x3772c>
   4a2b8:	ldr	r0, [fp, #-4]
   4a2bc:	movw	r1, #0
   4a2c0:	cmp	r0, r1
   4a2c4:	beq	4a2e0 <__assert_fail@plt+0x37728>
   4a2c8:	ldr	r0, [sp, #8]
   4a2cc:	cmp	r0, #0
   4a2d0:	beq	4a2e4 <__assert_fail@plt+0x3772c>
   4a2d4:	ldr	r0, [sp, #4]
   4a2d8:	cmp	r0, #0
   4a2dc:	beq	4a2e4 <__assert_fail@plt+0x3772c>
   4a2e0:	bl	4d028 <__assert_fail@plt+0x3a470>
   4a2e4:	ldr	r0, [sp]
   4a2e8:	mov	sp, fp
   4a2ec:	pop	{fp, pc}
   4a2f0:	push	{fp, lr}
   4a2f4:	mov	fp, sp
   4a2f8:	sub	sp, sp, #8
   4a2fc:	str	r0, [sp, #4]
   4a300:	ldr	r0, [sp, #4]
   4a304:	bl	527f0 <__assert_fail@plt+0x3fc38>
   4a308:	bl	4a314 <__assert_fail@plt+0x3775c>
   4a30c:	mov	sp, fp
   4a310:	pop	{fp, pc}
   4a314:	push	{fp, lr}
   4a318:	mov	fp, sp
   4a31c:	sub	sp, sp, #8
   4a320:	str	r0, [sp, #4]
   4a324:	ldr	r0, [sp, #4]
   4a328:	movw	r1, #0
   4a32c:	cmp	r0, r1
   4a330:	bne	4a338 <__assert_fail@plt+0x37780>
   4a334:	bl	4d028 <__assert_fail@plt+0x3a470>
   4a338:	ldr	r0, [sp, #4]
   4a33c:	mov	sp, fp
   4a340:	pop	{fp, pc}
   4a344:	push	{fp, lr}
   4a348:	mov	fp, sp
   4a34c:	sub	sp, sp, #8
   4a350:	str	r0, [sp, #4]
   4a354:	ldr	r0, [sp, #4]
   4a358:	bl	70da0 <__assert_fail@plt+0x5e1e8>
   4a35c:	bl	4a314 <__assert_fail@plt+0x3775c>
   4a360:	mov	sp, fp
   4a364:	pop	{fp, pc}
   4a368:	push	{fp, lr}
   4a36c:	mov	fp, sp
   4a370:	sub	sp, sp, #8
   4a374:	str	r0, [sp, #4]
   4a378:	ldr	r0, [sp, #4]
   4a37c:	bl	4a2f0 <__assert_fail@plt+0x37738>
   4a380:	mov	sp, fp
   4a384:	pop	{fp, pc}
   4a388:	push	{fp, lr}
   4a38c:	mov	fp, sp
   4a390:	sub	sp, sp, #16
   4a394:	str	r0, [fp, #-4]
   4a398:	str	r1, [sp, #8]
   4a39c:	ldr	r0, [fp, #-4]
   4a3a0:	ldr	r1, [sp, #8]
   4a3a4:	bl	538c8 <__assert_fail@plt+0x40d10>
   4a3a8:	str	r0, [sp, #4]
   4a3ac:	ldr	r0, [sp, #4]
   4a3b0:	movw	r1, #0
   4a3b4:	cmp	r0, r1
   4a3b8:	bne	4a3dc <__assert_fail@plt+0x37824>
   4a3bc:	ldr	r0, [fp, #-4]
   4a3c0:	movw	r1, #0
   4a3c4:	cmp	r0, r1
   4a3c8:	beq	4a3d8 <__assert_fail@plt+0x37820>
   4a3cc:	ldr	r0, [sp, #8]
   4a3d0:	cmp	r0, #0
   4a3d4:	beq	4a3dc <__assert_fail@plt+0x37824>
   4a3d8:	bl	4d028 <__assert_fail@plt+0x3a470>
   4a3dc:	ldr	r0, [sp, #4]
   4a3e0:	mov	sp, fp
   4a3e4:	pop	{fp, pc}
   4a3e8:	push	{fp, lr}
   4a3ec:	mov	fp, sp
   4a3f0:	sub	sp, sp, #8
   4a3f4:	str	r0, [sp, #4]
   4a3f8:	str	r1, [sp]
   4a3fc:	ldr	r0, [sp, #4]
   4a400:	ldr	r1, [sp]
   4a404:	bl	70de0 <__assert_fail@plt+0x5e228>
   4a408:	bl	4a314 <__assert_fail@plt+0x3775c>
   4a40c:	mov	sp, fp
   4a410:	pop	{fp, pc}
   4a414:	push	{fp, lr}
   4a418:	mov	fp, sp
   4a41c:	sub	sp, sp, #16
   4a420:	str	r0, [fp, #-4]
   4a424:	str	r1, [sp, #8]
   4a428:	str	r2, [sp, #4]
   4a42c:	ldr	r0, [fp, #-4]
   4a430:	ldr	r1, [sp, #8]
   4a434:	ldr	r2, [sp, #4]
   4a438:	bl	70ed8 <__assert_fail@plt+0x5e320>
   4a43c:	bl	4a314 <__assert_fail@plt+0x3775c>
   4a440:	mov	sp, fp
   4a444:	pop	{fp, pc}
   4a448:	push	{fp, lr}
   4a44c:	mov	fp, sp
   4a450:	sub	sp, sp, #8
   4a454:	str	r0, [sp, #4]
   4a458:	str	r1, [sp]
   4a45c:	ldr	r1, [sp, #4]
   4a460:	ldr	r2, [sp]
   4a464:	movw	r0, #0
   4a468:	bl	4a27c <__assert_fail@plt+0x376c4>
   4a46c:	mov	sp, fp
   4a470:	pop	{fp, pc}
   4a474:	push	{fp, lr}
   4a478:	mov	fp, sp
   4a47c:	sub	sp, sp, #8
   4a480:	str	r0, [sp, #4]
   4a484:	str	r1, [sp]
   4a488:	ldr	r1, [sp, #4]
   4a48c:	ldr	r2, [sp]
   4a490:	movw	r0, #0
   4a494:	bl	4a414 <__assert_fail@plt+0x3785c>
   4a498:	mov	sp, fp
   4a49c:	pop	{fp, pc}
   4a4a0:	push	{fp, lr}
   4a4a4:	mov	fp, sp
   4a4a8:	sub	sp, sp, #8
   4a4ac:	str	r0, [sp, #4]
   4a4b0:	str	r1, [sp]
   4a4b4:	ldr	r0, [sp, #4]
   4a4b8:	ldr	r1, [sp]
   4a4bc:	movw	r2, #1
   4a4c0:	bl	4a4cc <__assert_fail@plt+0x37914>
   4a4c4:	mov	sp, fp
   4a4c8:	pop	{fp, pc}
   4a4cc:	push	{fp, lr}
   4a4d0:	mov	fp, sp
   4a4d4:	sub	sp, sp, #16
   4a4d8:	str	r0, [fp, #-4]
   4a4dc:	str	r1, [sp, #8]
   4a4e0:	str	r2, [sp, #4]
   4a4e4:	ldr	r0, [sp, #8]
   4a4e8:	ldr	r0, [r0]
   4a4ec:	str	r0, [sp]
   4a4f0:	ldr	r0, [fp, #-4]
   4a4f4:	movw	r1, #0
   4a4f8:	cmp	r0, r1
   4a4fc:	bne	4a548 <__assert_fail@plt+0x37990>
   4a500:	ldr	r0, [sp]
   4a504:	cmp	r0, #0
   4a508:	bne	4a544 <__assert_fail@plt+0x3798c>
   4a50c:	ldr	r0, [sp, #4]
   4a510:	movw	r1, #64	; 0x40
   4a514:	udiv	r0, r1, r0
   4a518:	str	r0, [sp]
   4a51c:	ldr	r0, [sp]
   4a520:	cmp	r0, #0
   4a524:	movw	r0, #0
   4a528:	movne	r0, #1
   4a52c:	mvn	r1, #0
   4a530:	eor	r0, r0, r1
   4a534:	and	r0, r0, #1
   4a538:	ldr	r1, [sp]
   4a53c:	add	r0, r1, r0
   4a540:	str	r0, [sp]
   4a544:	b	4a578 <__assert_fail@plt+0x379c0>
   4a548:	ldr	r0, [sp]
   4a54c:	ldr	r1, [sp]
   4a550:	lsr	r1, r1, #1
   4a554:	add	r1, r1, #1
   4a558:	adds	r0, r0, r1
   4a55c:	mov	r1, #0
   4a560:	adc	r1, r1, #0
   4a564:	str	r0, [sp]
   4a568:	tst	r1, #1
   4a56c:	beq	4a574 <__assert_fail@plt+0x379bc>
   4a570:	bl	4d028 <__assert_fail@plt+0x3a470>
   4a574:	b	4a578 <__assert_fail@plt+0x379c0>
   4a578:	ldr	r0, [fp, #-4]
   4a57c:	ldr	r1, [sp]
   4a580:	ldr	r2, [sp, #4]
   4a584:	bl	4a27c <__assert_fail@plt+0x376c4>
   4a588:	str	r0, [fp, #-4]
   4a58c:	ldr	r0, [sp]
   4a590:	ldr	r1, [sp, #8]
   4a594:	str	r0, [r1]
   4a598:	ldr	r0, [fp, #-4]
   4a59c:	mov	sp, fp
   4a5a0:	pop	{fp, pc}
   4a5a4:	push	{fp, lr}
   4a5a8:	mov	fp, sp
   4a5ac:	sub	sp, sp, #216	; 0xd8
   4a5b0:	ldr	ip, [fp, #8]
   4a5b4:	str	r0, [fp, #-4]
   4a5b8:	str	r1, [fp, #-8]
   4a5bc:	str	r2, [fp, #-12]
   4a5c0:	str	r3, [fp, #-16]
   4a5c4:	ldr	r0, [fp, #-8]
   4a5c8:	ldr	r0, [r0]
   4a5cc:	str	r0, [fp, #-20]	; 0xffffffec
   4a5d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   4a5d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   4a5d8:	asr	r1, r1, #1
   4a5dc:	add	r1, r0, r1
   4a5e0:	mov	r2, #1
   4a5e4:	cmp	r1, r0
   4a5e8:	movwvc	r2, #0
   4a5ec:	str	r1, [fp, #-24]	; 0xffffffe8
   4a5f0:	tst	r2, #1
   4a5f4:	beq	4a600 <__assert_fail@plt+0x37a48>
   4a5f8:	ldr	r0, [pc, #4036]	; 4b5c4 <__assert_fail@plt+0x38a0c>
   4a5fc:	str	r0, [fp, #-24]	; 0xffffffe8
   4a600:	ldr	r0, [fp, #-16]
   4a604:	movw	r1, #0
   4a608:	cmp	r1, r0
   4a60c:	bgt	4a628 <__assert_fail@plt+0x37a70>
   4a610:	ldr	r0, [fp, #-16]
   4a614:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4a618:	cmp	r0, r1
   4a61c:	bge	4a628 <__assert_fail@plt+0x37a70>
   4a620:	ldr	r0, [fp, #-16]
   4a624:	str	r0, [fp, #-24]	; 0xffffffe8
   4a628:	b	4aa00 <__assert_fail@plt+0x37e48>
   4a62c:	b	4a630 <__assert_fail@plt+0x37a78>
   4a630:	ldr	r0, [fp, #8]
   4a634:	cmp	r0, #0
   4a638:	bge	4a74c <__assert_fail@plt+0x37b94>
   4a63c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4a640:	cmp	r0, #0
   4a644:	bge	4a6d0 <__assert_fail@plt+0x37b18>
   4a648:	b	4a64c <__assert_fail@plt+0x37a94>
   4a64c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4a650:	ldr	r1, [fp, #8]
   4a654:	movw	r2, #127	; 0x7f
   4a658:	sdiv	r1, r2, r1
   4a65c:	cmp	r0, r1
   4a660:	blt	4a7ec <__assert_fail@plt+0x37c34>
   4a664:	b	4a804 <__assert_fail@plt+0x37c4c>
   4a668:	b	4a66c <__assert_fail@plt+0x37ab4>
   4a66c:	ldr	r0, [pc, #4084]	; 4b668 <__assert_fail@plt+0x38ab0>
   4a670:	ldr	r1, [fp, #8]
   4a674:	cmp	r1, r0
   4a678:	blt	4a690 <__assert_fail@plt+0x37ad8>
   4a67c:	b	4a69c <__assert_fail@plt+0x37ae4>
   4a680:	ldr	r0, [fp, #8]
   4a684:	movw	r1, #0
   4a688:	cmp	r1, r0
   4a68c:	bge	4a69c <__assert_fail@plt+0x37ae4>
   4a690:	movw	r0, #0
   4a694:	str	r0, [fp, #-36]	; 0xffffffdc
   4a698:	b	4a6b4 <__assert_fail@plt+0x37afc>
   4a69c:	ldr	r0, [fp, #8]
   4a6a0:	movw	r1, #0
   4a6a4:	sub	r0, r1, r0
   4a6a8:	movw	r1, #127	; 0x7f
   4a6ac:	sdiv	r0, r1, r0
   4a6b0:	str	r0, [fp, #-36]	; 0xffffffdc
   4a6b4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   4a6b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4a6bc:	mvn	r2, #0
   4a6c0:	sub	r1, r2, r1
   4a6c4:	cmp	r0, r1
   4a6c8:	ble	4a7ec <__assert_fail@plt+0x37c34>
   4a6cc:	b	4a804 <__assert_fail@plt+0x37c4c>
   4a6d0:	b	4a6d4 <__assert_fail@plt+0x37b1c>
   4a6d4:	b	4a730 <__assert_fail@plt+0x37b78>
   4a6d8:	b	4a730 <__assert_fail@plt+0x37b78>
   4a6dc:	ldr	r0, [fp, #8]
   4a6e0:	cmn	r0, #1
   4a6e4:	bne	4a730 <__assert_fail@plt+0x37b78>
   4a6e8:	b	4a6ec <__assert_fail@plt+0x37b34>
   4a6ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4a6f0:	mvn	r1, #127	; 0x7f
   4a6f4:	add	r0, r0, r1
   4a6f8:	movw	r1, #0
   4a6fc:	cmp	r1, r0
   4a700:	blt	4a7ec <__assert_fail@plt+0x37c34>
   4a704:	b	4a804 <__assert_fail@plt+0x37c4c>
   4a708:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4a70c:	movw	r1, #0
   4a710:	cmp	r1, r0
   4a714:	bge	4a804 <__assert_fail@plt+0x37c4c>
   4a718:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4a71c:	sub	r0, r0, #1
   4a720:	movw	r1, #127	; 0x7f
   4a724:	cmp	r1, r0
   4a728:	blt	4a7ec <__assert_fail@plt+0x37c34>
   4a72c:	b	4a804 <__assert_fail@plt+0x37c4c>
   4a730:	ldr	r0, [fp, #8]
   4a734:	mvn	r1, #127	; 0x7f
   4a738:	sdiv	r0, r1, r0
   4a73c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4a740:	cmp	r0, r1
   4a744:	blt	4a7ec <__assert_fail@plt+0x37c34>
   4a748:	b	4a804 <__assert_fail@plt+0x37c4c>
   4a74c:	ldr	r0, [fp, #8]
   4a750:	cmp	r0, #0
   4a754:	bne	4a75c <__assert_fail@plt+0x37ba4>
   4a758:	b	4a804 <__assert_fail@plt+0x37c4c>
   4a75c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4a760:	cmp	r0, #0
   4a764:	bge	4a7d4 <__assert_fail@plt+0x37c1c>
   4a768:	b	4a76c <__assert_fail@plt+0x37bb4>
   4a76c:	b	4a7b8 <__assert_fail@plt+0x37c00>
   4a770:	b	4a7b8 <__assert_fail@plt+0x37c00>
   4a774:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4a778:	cmn	r0, #1
   4a77c:	bne	4a7b8 <__assert_fail@plt+0x37c00>
   4a780:	b	4a784 <__assert_fail@plt+0x37bcc>
   4a784:	ldr	r0, [fp, #8]
   4a788:	mvn	r1, #127	; 0x7f
   4a78c:	add	r0, r0, r1
   4a790:	movw	r1, #0
   4a794:	cmp	r1, r0
   4a798:	blt	4a7ec <__assert_fail@plt+0x37c34>
   4a79c:	b	4a804 <__assert_fail@plt+0x37c4c>
   4a7a0:	ldr	r0, [fp, #8]
   4a7a4:	sub	r0, r0, #1
   4a7a8:	movw	r1, #127	; 0x7f
   4a7ac:	cmp	r1, r0
   4a7b0:	blt	4a7ec <__assert_fail@plt+0x37c34>
   4a7b4:	b	4a804 <__assert_fail@plt+0x37c4c>
   4a7b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4a7bc:	mvn	r1, #127	; 0x7f
   4a7c0:	sdiv	r0, r1, r0
   4a7c4:	ldr	r1, [fp, #8]
   4a7c8:	cmp	r0, r1
   4a7cc:	blt	4a7ec <__assert_fail@plt+0x37c34>
   4a7d0:	b	4a804 <__assert_fail@plt+0x37c4c>
   4a7d4:	ldr	r0, [fp, #8]
   4a7d8:	movw	r1, #127	; 0x7f
   4a7dc:	sdiv	r0, r1, r0
   4a7e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4a7e4:	cmp	r0, r1
   4a7e8:	bge	4a804 <__assert_fail@plt+0x37c4c>
   4a7ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4a7f0:	ldr	r1, [fp, #8]
   4a7f4:	mul	r0, r0, r1
   4a7f8:	sxtb	r0, r0
   4a7fc:	str	r0, [fp, #-28]	; 0xffffffe4
   4a800:	b	4b9c8 <__assert_fail@plt+0x38e10>
   4a804:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4a808:	ldr	r1, [fp, #8]
   4a80c:	mul	r0, r0, r1
   4a810:	sxtb	r0, r0
   4a814:	str	r0, [fp, #-28]	; 0xffffffe4
   4a818:	b	4b9d4 <__assert_fail@plt+0x38e1c>
   4a81c:	ldr	r0, [fp, #8]
   4a820:	cmp	r0, #0
   4a824:	bge	4a934 <__assert_fail@plt+0x37d7c>
   4a828:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4a82c:	cmp	r0, #0
   4a830:	bge	4a8bc <__assert_fail@plt+0x37d04>
   4a834:	b	4a838 <__assert_fail@plt+0x37c80>
   4a838:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4a83c:	ldr	r1, [fp, #8]
   4a840:	movw	r2, #255	; 0xff
   4a844:	sdiv	r1, r2, r1
   4a848:	cmp	r0, r1
   4a84c:	blt	4a9d0 <__assert_fail@plt+0x37e18>
   4a850:	b	4a9e8 <__assert_fail@plt+0x37e30>
   4a854:	b	4a858 <__assert_fail@plt+0x37ca0>
   4a858:	ldr	r0, [pc, #3592]	; 4b668 <__assert_fail@plt+0x38ab0>
   4a85c:	ldr	r1, [fp, #8]
   4a860:	cmp	r1, r0
   4a864:	blt	4a87c <__assert_fail@plt+0x37cc4>
   4a868:	b	4a888 <__assert_fail@plt+0x37cd0>
   4a86c:	ldr	r0, [fp, #8]
   4a870:	movw	r1, #0
   4a874:	cmp	r1, r0
   4a878:	bge	4a888 <__assert_fail@plt+0x37cd0>
   4a87c:	movw	r0, #0
   4a880:	str	r0, [fp, #-40]	; 0xffffffd8
   4a884:	b	4a8a0 <__assert_fail@plt+0x37ce8>
   4a888:	ldr	r0, [fp, #8]
   4a88c:	movw	r1, #0
   4a890:	sub	r0, r1, r0
   4a894:	movw	r1, #255	; 0xff
   4a898:	sdiv	r0, r1, r0
   4a89c:	str	r0, [fp, #-40]	; 0xffffffd8
   4a8a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   4a8a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4a8a8:	mvn	r2, #0
   4a8ac:	sub	r1, r2, r1
   4a8b0:	cmp	r0, r1
   4a8b4:	ble	4a9d0 <__assert_fail@plt+0x37e18>
   4a8b8:	b	4a9e8 <__assert_fail@plt+0x37e30>
   4a8bc:	b	4a8c0 <__assert_fail@plt+0x37d08>
   4a8c0:	b	4a918 <__assert_fail@plt+0x37d60>
   4a8c4:	b	4a918 <__assert_fail@plt+0x37d60>
   4a8c8:	ldr	r0, [fp, #8]
   4a8cc:	cmn	r0, #1
   4a8d0:	bne	4a918 <__assert_fail@plt+0x37d60>
   4a8d4:	b	4a8d8 <__assert_fail@plt+0x37d20>
   4a8d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4a8dc:	add	r0, r0, #0
   4a8e0:	movw	r1, #0
   4a8e4:	cmp	r1, r0
   4a8e8:	blt	4a9d0 <__assert_fail@plt+0x37e18>
   4a8ec:	b	4a9e8 <__assert_fail@plt+0x37e30>
   4a8f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4a8f4:	movw	r1, #0
   4a8f8:	cmp	r1, r0
   4a8fc:	bge	4a9e8 <__assert_fail@plt+0x37e30>
   4a900:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4a904:	sub	r0, r0, #1
   4a908:	mvn	r1, #0
   4a90c:	cmp	r1, r0
   4a910:	blt	4a9d0 <__assert_fail@plt+0x37e18>
   4a914:	b	4a9e8 <__assert_fail@plt+0x37e30>
   4a918:	ldr	r0, [fp, #8]
   4a91c:	movw	r1, #0
   4a920:	sdiv	r0, r1, r0
   4a924:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4a928:	cmp	r0, r1
   4a92c:	blt	4a9d0 <__assert_fail@plt+0x37e18>
   4a930:	b	4a9e8 <__assert_fail@plt+0x37e30>
   4a934:	ldr	r0, [fp, #8]
   4a938:	cmp	r0, #0
   4a93c:	bne	4a944 <__assert_fail@plt+0x37d8c>
   4a940:	b	4a9e8 <__assert_fail@plt+0x37e30>
   4a944:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4a948:	cmp	r0, #0
   4a94c:	bge	4a9b8 <__assert_fail@plt+0x37e00>
   4a950:	b	4a954 <__assert_fail@plt+0x37d9c>
   4a954:	b	4a99c <__assert_fail@plt+0x37de4>
   4a958:	b	4a99c <__assert_fail@plt+0x37de4>
   4a95c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4a960:	cmn	r0, #1
   4a964:	bne	4a99c <__assert_fail@plt+0x37de4>
   4a968:	b	4a96c <__assert_fail@plt+0x37db4>
   4a96c:	ldr	r0, [fp, #8]
   4a970:	add	r0, r0, #0
   4a974:	movw	r1, #0
   4a978:	cmp	r1, r0
   4a97c:	blt	4a9d0 <__assert_fail@plt+0x37e18>
   4a980:	b	4a9e8 <__assert_fail@plt+0x37e30>
   4a984:	ldr	r0, [fp, #8]
   4a988:	sub	r0, r0, #1
   4a98c:	mvn	r1, #0
   4a990:	cmp	r1, r0
   4a994:	blt	4a9d0 <__assert_fail@plt+0x37e18>
   4a998:	b	4a9e8 <__assert_fail@plt+0x37e30>
   4a99c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4a9a0:	movw	r1, #0
   4a9a4:	sdiv	r0, r1, r0
   4a9a8:	ldr	r1, [fp, #8]
   4a9ac:	cmp	r0, r1
   4a9b0:	blt	4a9d0 <__assert_fail@plt+0x37e18>
   4a9b4:	b	4a9e8 <__assert_fail@plt+0x37e30>
   4a9b8:	ldr	r0, [fp, #8]
   4a9bc:	movw	r1, #255	; 0xff
   4a9c0:	sdiv	r0, r1, r0
   4a9c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4a9c8:	cmp	r0, r1
   4a9cc:	bge	4a9e8 <__assert_fail@plt+0x37e30>
   4a9d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4a9d4:	ldr	r1, [fp, #8]
   4a9d8:	mul	r0, r0, r1
   4a9dc:	and	r0, r0, #255	; 0xff
   4a9e0:	str	r0, [fp, #-28]	; 0xffffffe4
   4a9e4:	b	4b9c8 <__assert_fail@plt+0x38e10>
   4a9e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4a9ec:	ldr	r1, [fp, #8]
   4a9f0:	mul	r0, r0, r1
   4a9f4:	and	r0, r0, #255	; 0xff
   4a9f8:	str	r0, [fp, #-28]	; 0xffffffe4
   4a9fc:	b	4b9d4 <__assert_fail@plt+0x38e1c>
   4aa00:	b	4add8 <__assert_fail@plt+0x38220>
   4aa04:	b	4aa08 <__assert_fail@plt+0x37e50>
   4aa08:	ldr	r0, [fp, #8]
   4aa0c:	cmp	r0, #0
   4aa10:	bge	4ab24 <__assert_fail@plt+0x37f6c>
   4aa14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4aa18:	cmp	r0, #0
   4aa1c:	bge	4aaa8 <__assert_fail@plt+0x37ef0>
   4aa20:	b	4aa24 <__assert_fail@plt+0x37e6c>
   4aa24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4aa28:	ldr	r1, [fp, #8]
   4aa2c:	movw	r2, #32767	; 0x7fff
   4aa30:	sdiv	r1, r2, r1
   4aa34:	cmp	r0, r1
   4aa38:	blt	4abc4 <__assert_fail@plt+0x3800c>
   4aa3c:	b	4abdc <__assert_fail@plt+0x38024>
   4aa40:	b	4aa44 <__assert_fail@plt+0x37e8c>
   4aa44:	ldr	r0, [pc, #3100]	; 4b668 <__assert_fail@plt+0x38ab0>
   4aa48:	ldr	r1, [fp, #8]
   4aa4c:	cmp	r1, r0
   4aa50:	blt	4aa68 <__assert_fail@plt+0x37eb0>
   4aa54:	b	4aa74 <__assert_fail@plt+0x37ebc>
   4aa58:	ldr	r0, [fp, #8]
   4aa5c:	movw	r1, #0
   4aa60:	cmp	r1, r0
   4aa64:	bge	4aa74 <__assert_fail@plt+0x37ebc>
   4aa68:	movw	r0, #0
   4aa6c:	str	r0, [fp, #-44]	; 0xffffffd4
   4aa70:	b	4aa8c <__assert_fail@plt+0x37ed4>
   4aa74:	ldr	r0, [fp, #8]
   4aa78:	movw	r1, #0
   4aa7c:	sub	r0, r1, r0
   4aa80:	movw	r1, #32767	; 0x7fff
   4aa84:	sdiv	r0, r1, r0
   4aa88:	str	r0, [fp, #-44]	; 0xffffffd4
   4aa8c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   4aa90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4aa94:	mvn	r2, #0
   4aa98:	sub	r1, r2, r1
   4aa9c:	cmp	r0, r1
   4aaa0:	ble	4abc4 <__assert_fail@plt+0x3800c>
   4aaa4:	b	4abdc <__assert_fail@plt+0x38024>
   4aaa8:	b	4aaac <__assert_fail@plt+0x37ef4>
   4aaac:	b	4ab08 <__assert_fail@plt+0x37f50>
   4aab0:	b	4ab08 <__assert_fail@plt+0x37f50>
   4aab4:	ldr	r0, [fp, #8]
   4aab8:	cmn	r0, #1
   4aabc:	bne	4ab08 <__assert_fail@plt+0x37f50>
   4aac0:	b	4aac4 <__assert_fail@plt+0x37f0c>
   4aac4:	ldr	r0, [pc, #4068]	; 4bab0 <__assert_fail@plt+0x38ef8>
   4aac8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4aacc:	add	r0, r1, r0
   4aad0:	movw	r1, #0
   4aad4:	cmp	r1, r0
   4aad8:	blt	4abc4 <__assert_fail@plt+0x3800c>
   4aadc:	b	4abdc <__assert_fail@plt+0x38024>
   4aae0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4aae4:	movw	r1, #0
   4aae8:	cmp	r1, r0
   4aaec:	bge	4abdc <__assert_fail@plt+0x38024>
   4aaf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4aaf4:	sub	r0, r0, #1
   4aaf8:	movw	r1, #32767	; 0x7fff
   4aafc:	cmp	r1, r0
   4ab00:	blt	4abc4 <__assert_fail@plt+0x3800c>
   4ab04:	b	4abdc <__assert_fail@plt+0x38024>
   4ab08:	ldr	r0, [pc, #4000]	; 4bab0 <__assert_fail@plt+0x38ef8>
   4ab0c:	ldr	r1, [fp, #8]
   4ab10:	sdiv	r0, r0, r1
   4ab14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4ab18:	cmp	r0, r1
   4ab1c:	blt	4abc4 <__assert_fail@plt+0x3800c>
   4ab20:	b	4abdc <__assert_fail@plt+0x38024>
   4ab24:	ldr	r0, [fp, #8]
   4ab28:	cmp	r0, #0
   4ab2c:	bne	4ab34 <__assert_fail@plt+0x37f7c>
   4ab30:	b	4abdc <__assert_fail@plt+0x38024>
   4ab34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4ab38:	cmp	r0, #0
   4ab3c:	bge	4abac <__assert_fail@plt+0x37ff4>
   4ab40:	b	4ab44 <__assert_fail@plt+0x37f8c>
   4ab44:	b	4ab90 <__assert_fail@plt+0x37fd8>
   4ab48:	b	4ab90 <__assert_fail@plt+0x37fd8>
   4ab4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4ab50:	cmn	r0, #1
   4ab54:	bne	4ab90 <__assert_fail@plt+0x37fd8>
   4ab58:	b	4ab5c <__assert_fail@plt+0x37fa4>
   4ab5c:	ldr	r0, [pc, #3916]	; 4bab0 <__assert_fail@plt+0x38ef8>
   4ab60:	ldr	r1, [fp, #8]
   4ab64:	add	r0, r1, r0
   4ab68:	movw	r1, #0
   4ab6c:	cmp	r1, r0
   4ab70:	blt	4abc4 <__assert_fail@plt+0x3800c>
   4ab74:	b	4abdc <__assert_fail@plt+0x38024>
   4ab78:	ldr	r0, [fp, #8]
   4ab7c:	sub	r0, r0, #1
   4ab80:	movw	r1, #32767	; 0x7fff
   4ab84:	cmp	r1, r0
   4ab88:	blt	4abc4 <__assert_fail@plt+0x3800c>
   4ab8c:	b	4abdc <__assert_fail@plt+0x38024>
   4ab90:	ldr	r0, [pc, #3864]	; 4bab0 <__assert_fail@plt+0x38ef8>
   4ab94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4ab98:	sdiv	r0, r0, r1
   4ab9c:	ldr	r1, [fp, #8]
   4aba0:	cmp	r0, r1
   4aba4:	blt	4abc4 <__assert_fail@plt+0x3800c>
   4aba8:	b	4abdc <__assert_fail@plt+0x38024>
   4abac:	ldr	r0, [fp, #8]
   4abb0:	movw	r1, #32767	; 0x7fff
   4abb4:	sdiv	r0, r1, r0
   4abb8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4abbc:	cmp	r0, r1
   4abc0:	bge	4abdc <__assert_fail@plt+0x38024>
   4abc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4abc8:	ldr	r1, [fp, #8]
   4abcc:	mul	r0, r0, r1
   4abd0:	sxth	r0, r0
   4abd4:	str	r0, [fp, #-28]	; 0xffffffe4
   4abd8:	b	4b9c8 <__assert_fail@plt+0x38e10>
   4abdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4abe0:	ldr	r1, [fp, #8]
   4abe4:	mul	r0, r0, r1
   4abe8:	sxth	r0, r0
   4abec:	str	r0, [fp, #-28]	; 0xffffffe4
   4abf0:	b	4b9d4 <__assert_fail@plt+0x38e1c>
   4abf4:	ldr	r0, [fp, #8]
   4abf8:	cmp	r0, #0
   4abfc:	bge	4ad0c <__assert_fail@plt+0x38154>
   4ac00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4ac04:	cmp	r0, #0
   4ac08:	bge	4ac94 <__assert_fail@plt+0x380dc>
   4ac0c:	b	4ac10 <__assert_fail@plt+0x38058>
   4ac10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4ac14:	ldr	r1, [fp, #8]
   4ac18:	movw	r2, #65535	; 0xffff
   4ac1c:	sdiv	r1, r2, r1
   4ac20:	cmp	r0, r1
   4ac24:	blt	4ada8 <__assert_fail@plt+0x381f0>
   4ac28:	b	4adc0 <__assert_fail@plt+0x38208>
   4ac2c:	b	4ac30 <__assert_fail@plt+0x38078>
   4ac30:	ldr	r0, [pc, #2608]	; 4b668 <__assert_fail@plt+0x38ab0>
   4ac34:	ldr	r1, [fp, #8]
   4ac38:	cmp	r1, r0
   4ac3c:	blt	4ac54 <__assert_fail@plt+0x3809c>
   4ac40:	b	4ac60 <__assert_fail@plt+0x380a8>
   4ac44:	ldr	r0, [fp, #8]
   4ac48:	movw	r1, #0
   4ac4c:	cmp	r1, r0
   4ac50:	bge	4ac60 <__assert_fail@plt+0x380a8>
   4ac54:	movw	r0, #0
   4ac58:	str	r0, [fp, #-48]	; 0xffffffd0
   4ac5c:	b	4ac78 <__assert_fail@plt+0x380c0>
   4ac60:	ldr	r0, [fp, #8]
   4ac64:	movw	r1, #0
   4ac68:	sub	r0, r1, r0
   4ac6c:	movw	r1, #65535	; 0xffff
   4ac70:	sdiv	r0, r1, r0
   4ac74:	str	r0, [fp, #-48]	; 0xffffffd0
   4ac78:	ldr	r0, [fp, #-48]	; 0xffffffd0
   4ac7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4ac80:	mvn	r2, #0
   4ac84:	sub	r1, r2, r1
   4ac88:	cmp	r0, r1
   4ac8c:	ble	4ada8 <__assert_fail@plt+0x381f0>
   4ac90:	b	4adc0 <__assert_fail@plt+0x38208>
   4ac94:	b	4ac98 <__assert_fail@plt+0x380e0>
   4ac98:	b	4acf0 <__assert_fail@plt+0x38138>
   4ac9c:	b	4acf0 <__assert_fail@plt+0x38138>
   4aca0:	ldr	r0, [fp, #8]
   4aca4:	cmn	r0, #1
   4aca8:	bne	4acf0 <__assert_fail@plt+0x38138>
   4acac:	b	4acb0 <__assert_fail@plt+0x380f8>
   4acb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4acb4:	add	r0, r0, #0
   4acb8:	movw	r1, #0
   4acbc:	cmp	r1, r0
   4acc0:	blt	4ada8 <__assert_fail@plt+0x381f0>
   4acc4:	b	4adc0 <__assert_fail@plt+0x38208>
   4acc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4accc:	movw	r1, #0
   4acd0:	cmp	r1, r0
   4acd4:	bge	4adc0 <__assert_fail@plt+0x38208>
   4acd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4acdc:	sub	r0, r0, #1
   4ace0:	mvn	r1, #0
   4ace4:	cmp	r1, r0
   4ace8:	blt	4ada8 <__assert_fail@plt+0x381f0>
   4acec:	b	4adc0 <__assert_fail@plt+0x38208>
   4acf0:	ldr	r0, [fp, #8]
   4acf4:	movw	r1, #0
   4acf8:	sdiv	r0, r1, r0
   4acfc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4ad00:	cmp	r0, r1
   4ad04:	blt	4ada8 <__assert_fail@plt+0x381f0>
   4ad08:	b	4adc0 <__assert_fail@plt+0x38208>
   4ad0c:	ldr	r0, [fp, #8]
   4ad10:	cmp	r0, #0
   4ad14:	bne	4ad1c <__assert_fail@plt+0x38164>
   4ad18:	b	4adc0 <__assert_fail@plt+0x38208>
   4ad1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4ad20:	cmp	r0, #0
   4ad24:	bge	4ad90 <__assert_fail@plt+0x381d8>
   4ad28:	b	4ad2c <__assert_fail@plt+0x38174>
   4ad2c:	b	4ad74 <__assert_fail@plt+0x381bc>
   4ad30:	b	4ad74 <__assert_fail@plt+0x381bc>
   4ad34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4ad38:	cmn	r0, #1
   4ad3c:	bne	4ad74 <__assert_fail@plt+0x381bc>
   4ad40:	b	4ad44 <__assert_fail@plt+0x3818c>
   4ad44:	ldr	r0, [fp, #8]
   4ad48:	add	r0, r0, #0
   4ad4c:	movw	r1, #0
   4ad50:	cmp	r1, r0
   4ad54:	blt	4ada8 <__assert_fail@plt+0x381f0>
   4ad58:	b	4adc0 <__assert_fail@plt+0x38208>
   4ad5c:	ldr	r0, [fp, #8]
   4ad60:	sub	r0, r0, #1
   4ad64:	mvn	r1, #0
   4ad68:	cmp	r1, r0
   4ad6c:	blt	4ada8 <__assert_fail@plt+0x381f0>
   4ad70:	b	4adc0 <__assert_fail@plt+0x38208>
   4ad74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4ad78:	movw	r1, #0
   4ad7c:	sdiv	r0, r1, r0
   4ad80:	ldr	r1, [fp, #8]
   4ad84:	cmp	r0, r1
   4ad88:	blt	4ada8 <__assert_fail@plt+0x381f0>
   4ad8c:	b	4adc0 <__assert_fail@plt+0x38208>
   4ad90:	ldr	r0, [fp, #8]
   4ad94:	movw	r1, #65535	; 0xffff
   4ad98:	sdiv	r0, r1, r0
   4ad9c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4ada0:	cmp	r0, r1
   4ada4:	bge	4adc0 <__assert_fail@plt+0x38208>
   4ada8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4adac:	ldr	r1, [fp, #8]
   4adb0:	mul	r0, r0, r1
   4adb4:	uxth	r0, r0
   4adb8:	str	r0, [fp, #-28]	; 0xffffffe4
   4adbc:	b	4b9c8 <__assert_fail@plt+0x38e10>
   4adc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4adc4:	ldr	r1, [fp, #8]
   4adc8:	mul	r0, r0, r1
   4adcc:	uxth	r0, r0
   4add0:	str	r0, [fp, #-28]	; 0xffffffe4
   4add4:	b	4b9d4 <__assert_fail@plt+0x38e1c>
   4add8:	b	4addc <__assert_fail@plt+0x38224>
   4addc:	b	4ade0 <__assert_fail@plt+0x38228>
   4ade0:	ldr	r0, [fp, #8]
   4ade4:	cmp	r0, #0
   4ade8:	bge	4aeec <__assert_fail@plt+0x38334>
   4adec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4adf0:	cmp	r0, #0
   4adf4:	bge	4ae80 <__assert_fail@plt+0x382c8>
   4adf8:	b	4adfc <__assert_fail@plt+0x38244>
   4adfc:	ldr	r0, [pc, #1984]	; 4b5c4 <__assert_fail@plt+0x38a0c>
   4ae00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4ae04:	ldr	r2, [fp, #8]
   4ae08:	sdiv	r0, r0, r2
   4ae0c:	cmp	r1, r0
   4ae10:	blt	4af7c <__assert_fail@plt+0x383c4>
   4ae14:	b	4af90 <__assert_fail@plt+0x383d8>
   4ae18:	b	4ae1c <__assert_fail@plt+0x38264>
   4ae1c:	ldr	r0, [pc, #2116]	; 4b668 <__assert_fail@plt+0x38ab0>
   4ae20:	ldr	r1, [fp, #8]
   4ae24:	cmp	r1, r0
   4ae28:	blt	4ae40 <__assert_fail@plt+0x38288>
   4ae2c:	b	4ae4c <__assert_fail@plt+0x38294>
   4ae30:	ldr	r0, [fp, #8]
   4ae34:	movw	r1, #0
   4ae38:	cmp	r1, r0
   4ae3c:	bge	4ae4c <__assert_fail@plt+0x38294>
   4ae40:	movw	r0, #0
   4ae44:	str	r0, [fp, #-52]	; 0xffffffcc
   4ae48:	b	4ae64 <__assert_fail@plt+0x382ac>
   4ae4c:	ldr	r0, [pc, #1904]	; 4b5c4 <__assert_fail@plt+0x38a0c>
   4ae50:	ldr	r1, [fp, #8]
   4ae54:	movw	r2, #0
   4ae58:	sub	r1, r2, r1
   4ae5c:	sdiv	r0, r0, r1
   4ae60:	str	r0, [fp, #-52]	; 0xffffffcc
   4ae64:	ldr	r0, [fp, #-52]	; 0xffffffcc
   4ae68:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4ae6c:	mvn	r2, #0
   4ae70:	sub	r1, r2, r1
   4ae74:	cmp	r0, r1
   4ae78:	ble	4af7c <__assert_fail@plt+0x383c4>
   4ae7c:	b	4af90 <__assert_fail@plt+0x383d8>
   4ae80:	ldr	r0, [fp, #8]
   4ae84:	cmn	r0, #1
   4ae88:	bne	4aed0 <__assert_fail@plt+0x38318>
   4ae8c:	b	4ae90 <__assert_fail@plt+0x382d8>
   4ae90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4ae94:	add	r0, r0, #-2147483648	; 0x80000000
   4ae98:	movw	r1, #0
   4ae9c:	cmp	r1, r0
   4aea0:	blt	4af7c <__assert_fail@plt+0x383c4>
   4aea4:	b	4af90 <__assert_fail@plt+0x383d8>
   4aea8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4aeac:	movw	r1, #0
   4aeb0:	cmp	r1, r0
   4aeb4:	bge	4af90 <__assert_fail@plt+0x383d8>
   4aeb8:	ldr	r0, [pc, #1796]	; 4b5c4 <__assert_fail@plt+0x38a0c>
   4aebc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4aec0:	sub	r1, r1, #1
   4aec4:	cmp	r0, r1
   4aec8:	blt	4af7c <__assert_fail@plt+0x383c4>
   4aecc:	b	4af90 <__assert_fail@plt+0x383d8>
   4aed0:	ldr	r0, [pc, #4080]	; 4bec8 <__assert_fail@plt+0x39310>
   4aed4:	ldr	r1, [fp, #8]
   4aed8:	sdiv	r0, r0, r1
   4aedc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4aee0:	cmp	r0, r1
   4aee4:	blt	4af7c <__assert_fail@plt+0x383c4>
   4aee8:	b	4af90 <__assert_fail@plt+0x383d8>
   4aeec:	ldr	r0, [fp, #8]
   4aef0:	cmp	r0, #0
   4aef4:	bne	4aefc <__assert_fail@plt+0x38344>
   4aef8:	b	4af90 <__assert_fail@plt+0x383d8>
   4aefc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4af00:	cmp	r0, #0
   4af04:	bge	4af64 <__assert_fail@plt+0x383ac>
   4af08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4af0c:	cmn	r0, #1
   4af10:	bne	4af48 <__assert_fail@plt+0x38390>
   4af14:	b	4af18 <__assert_fail@plt+0x38360>
   4af18:	ldr	r0, [fp, #8]
   4af1c:	add	r0, r0, #-2147483648	; 0x80000000
   4af20:	movw	r1, #0
   4af24:	cmp	r1, r0
   4af28:	blt	4af7c <__assert_fail@plt+0x383c4>
   4af2c:	b	4af90 <__assert_fail@plt+0x383d8>
   4af30:	ldr	r0, [pc, #1676]	; 4b5c4 <__assert_fail@plt+0x38a0c>
   4af34:	ldr	r1, [fp, #8]
   4af38:	sub	r1, r1, #1
   4af3c:	cmp	r0, r1
   4af40:	blt	4af7c <__assert_fail@plt+0x383c4>
   4af44:	b	4af90 <__assert_fail@plt+0x383d8>
   4af48:	ldr	r0, [pc, #3960]	; 4bec8 <__assert_fail@plt+0x39310>
   4af4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4af50:	sdiv	r0, r0, r1
   4af54:	ldr	r1, [fp, #8]
   4af58:	cmp	r0, r1
   4af5c:	blt	4af7c <__assert_fail@plt+0x383c4>
   4af60:	b	4af90 <__assert_fail@plt+0x383d8>
   4af64:	ldr	r0, [pc, #1624]	; 4b5c4 <__assert_fail@plt+0x38a0c>
   4af68:	ldr	r1, [fp, #8]
   4af6c:	sdiv	r0, r0, r1
   4af70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4af74:	cmp	r0, r1
   4af78:	bge	4af90 <__assert_fail@plt+0x383d8>
   4af7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4af80:	ldr	r1, [fp, #8]
   4af84:	mul	r0, r0, r1
   4af88:	str	r0, [fp, #-28]	; 0xffffffe4
   4af8c:	b	4b9c8 <__assert_fail@plt+0x38e10>
   4af90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4af94:	ldr	r1, [fp, #8]
   4af98:	mul	r0, r0, r1
   4af9c:	str	r0, [fp, #-28]	; 0xffffffe4
   4afa0:	b	4b9d4 <__assert_fail@plt+0x38e1c>
   4afa4:	ldr	r0, [fp, #8]
   4afa8:	cmp	r0, #0
   4afac:	bge	4b0bc <__assert_fail@plt+0x38504>
   4afb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4afb4:	cmp	r0, #0
   4afb8:	bge	4b044 <__assert_fail@plt+0x3848c>
   4afbc:	b	4afdc <__assert_fail@plt+0x38424>
   4afc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4afc4:	ldr	r1, [fp, #8]
   4afc8:	mvn	r2, #0
   4afcc:	udiv	r1, r2, r1
   4afd0:	cmp	r0, r1
   4afd4:	bcc	4b158 <__assert_fail@plt+0x385a0>
   4afd8:	b	4b16c <__assert_fail@plt+0x385b4>
   4afdc:	b	4afe0 <__assert_fail@plt+0x38428>
   4afe0:	ldr	r0, [pc, #1664]	; 4b668 <__assert_fail@plt+0x38ab0>
   4afe4:	ldr	r1, [fp, #8]
   4afe8:	cmp	r1, r0
   4afec:	blt	4b004 <__assert_fail@plt+0x3844c>
   4aff0:	b	4b010 <__assert_fail@plt+0x38458>
   4aff4:	ldr	r0, [fp, #8]
   4aff8:	movw	r1, #0
   4affc:	cmp	r1, r0
   4b000:	bge	4b010 <__assert_fail@plt+0x38458>
   4b004:	movw	r0, #1
   4b008:	str	r0, [fp, #-56]	; 0xffffffc8
   4b00c:	b	4b028 <__assert_fail@plt+0x38470>
   4b010:	ldr	r0, [fp, #8]
   4b014:	movw	r1, #0
   4b018:	sub	r0, r1, r0
   4b01c:	mvn	r1, #0
   4b020:	udiv	r0, r1, r0
   4b024:	str	r0, [fp, #-56]	; 0xffffffc8
   4b028:	ldr	r0, [fp, #-56]	; 0xffffffc8
   4b02c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4b030:	mvn	r2, #0
   4b034:	sub	r1, r2, r1
   4b038:	cmp	r0, r1
   4b03c:	bls	4b158 <__assert_fail@plt+0x385a0>
   4b040:	b	4b16c <__assert_fail@plt+0x385b4>
   4b044:	b	4b048 <__assert_fail@plt+0x38490>
   4b048:	b	4b0a0 <__assert_fail@plt+0x384e8>
   4b04c:	b	4b0a0 <__assert_fail@plt+0x384e8>
   4b050:	ldr	r0, [fp, #8]
   4b054:	cmn	r0, #1
   4b058:	bne	4b0a0 <__assert_fail@plt+0x384e8>
   4b05c:	b	4b060 <__assert_fail@plt+0x384a8>
   4b060:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4b064:	add	r0, r0, #0
   4b068:	movw	r1, #0
   4b06c:	cmp	r1, r0
   4b070:	blt	4b158 <__assert_fail@plt+0x385a0>
   4b074:	b	4b16c <__assert_fail@plt+0x385b4>
   4b078:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4b07c:	movw	r1, #0
   4b080:	cmp	r1, r0
   4b084:	bge	4b16c <__assert_fail@plt+0x385b4>
   4b088:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4b08c:	sub	r0, r0, #1
   4b090:	mvn	r1, #0
   4b094:	cmp	r1, r0
   4b098:	blt	4b158 <__assert_fail@plt+0x385a0>
   4b09c:	b	4b16c <__assert_fail@plt+0x385b4>
   4b0a0:	ldr	r0, [fp, #8]
   4b0a4:	movw	r1, #0
   4b0a8:	sdiv	r0, r1, r0
   4b0ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4b0b0:	cmp	r0, r1
   4b0b4:	blt	4b158 <__assert_fail@plt+0x385a0>
   4b0b8:	b	4b16c <__assert_fail@plt+0x385b4>
   4b0bc:	ldr	r0, [fp, #8]
   4b0c0:	cmp	r0, #0
   4b0c4:	bne	4b0cc <__assert_fail@plt+0x38514>
   4b0c8:	b	4b16c <__assert_fail@plt+0x385b4>
   4b0cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4b0d0:	cmp	r0, #0
   4b0d4:	bge	4b140 <__assert_fail@plt+0x38588>
   4b0d8:	b	4b0dc <__assert_fail@plt+0x38524>
   4b0dc:	b	4b124 <__assert_fail@plt+0x3856c>
   4b0e0:	b	4b124 <__assert_fail@plt+0x3856c>
   4b0e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4b0e8:	cmn	r0, #1
   4b0ec:	bne	4b124 <__assert_fail@plt+0x3856c>
   4b0f0:	b	4b0f4 <__assert_fail@plt+0x3853c>
   4b0f4:	ldr	r0, [fp, #8]
   4b0f8:	add	r0, r0, #0
   4b0fc:	movw	r1, #0
   4b100:	cmp	r1, r0
   4b104:	blt	4b158 <__assert_fail@plt+0x385a0>
   4b108:	b	4b16c <__assert_fail@plt+0x385b4>
   4b10c:	ldr	r0, [fp, #8]
   4b110:	sub	r0, r0, #1
   4b114:	mvn	r1, #0
   4b118:	cmp	r1, r0
   4b11c:	blt	4b158 <__assert_fail@plt+0x385a0>
   4b120:	b	4b16c <__assert_fail@plt+0x385b4>
   4b124:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4b128:	movw	r1, #0
   4b12c:	sdiv	r0, r1, r0
   4b130:	ldr	r1, [fp, #8]
   4b134:	cmp	r0, r1
   4b138:	blt	4b158 <__assert_fail@plt+0x385a0>
   4b13c:	b	4b16c <__assert_fail@plt+0x385b4>
   4b140:	ldr	r0, [fp, #8]
   4b144:	mvn	r1, #0
   4b148:	udiv	r0, r1, r0
   4b14c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4b150:	cmp	r0, r1
   4b154:	bcs	4b16c <__assert_fail@plt+0x385b4>
   4b158:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4b15c:	ldr	r1, [fp, #8]
   4b160:	mul	r0, r0, r1
   4b164:	str	r0, [fp, #-28]	; 0xffffffe4
   4b168:	b	4b9c8 <__assert_fail@plt+0x38e10>
   4b16c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4b170:	ldr	r1, [fp, #8]
   4b174:	mul	r0, r0, r1
   4b178:	str	r0, [fp, #-28]	; 0xffffffe4
   4b17c:	b	4b9d4 <__assert_fail@plt+0x38e1c>
   4b180:	b	4b184 <__assert_fail@plt+0x385cc>
   4b184:	b	4b188 <__assert_fail@plt+0x385d0>
   4b188:	ldr	r0, [fp, #8]
   4b18c:	cmp	r0, #0
   4b190:	bge	4b294 <__assert_fail@plt+0x386dc>
   4b194:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4b198:	cmp	r0, #0
   4b19c:	bge	4b228 <__assert_fail@plt+0x38670>
   4b1a0:	b	4b1a4 <__assert_fail@plt+0x385ec>
   4b1a4:	ldr	r0, [pc, #1048]	; 4b5c4 <__assert_fail@plt+0x38a0c>
   4b1a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4b1ac:	ldr	r2, [fp, #8]
   4b1b0:	sdiv	r0, r0, r2
   4b1b4:	cmp	r1, r0
   4b1b8:	blt	4b324 <__assert_fail@plt+0x3876c>
   4b1bc:	b	4b338 <__assert_fail@plt+0x38780>
   4b1c0:	b	4b1c4 <__assert_fail@plt+0x3860c>
   4b1c4:	ldr	r0, [pc, #1180]	; 4b668 <__assert_fail@plt+0x38ab0>
   4b1c8:	ldr	r1, [fp, #8]
   4b1cc:	cmp	r1, r0
   4b1d0:	blt	4b1e8 <__assert_fail@plt+0x38630>
   4b1d4:	b	4b1f4 <__assert_fail@plt+0x3863c>
   4b1d8:	ldr	r0, [fp, #8]
   4b1dc:	movw	r1, #0
   4b1e0:	cmp	r1, r0
   4b1e4:	bge	4b1f4 <__assert_fail@plt+0x3863c>
   4b1e8:	movw	r0, #0
   4b1ec:	str	r0, [fp, #-60]	; 0xffffffc4
   4b1f0:	b	4b20c <__assert_fail@plt+0x38654>
   4b1f4:	ldr	r0, [pc, #968]	; 4b5c4 <__assert_fail@plt+0x38a0c>
   4b1f8:	ldr	r1, [fp, #8]
   4b1fc:	movw	r2, #0
   4b200:	sub	r1, r2, r1
   4b204:	sdiv	r0, r0, r1
   4b208:	str	r0, [fp, #-60]	; 0xffffffc4
   4b20c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   4b210:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4b214:	mvn	r2, #0
   4b218:	sub	r1, r2, r1
   4b21c:	cmp	r0, r1
   4b220:	ble	4b324 <__assert_fail@plt+0x3876c>
   4b224:	b	4b338 <__assert_fail@plt+0x38780>
   4b228:	ldr	r0, [fp, #8]
   4b22c:	cmn	r0, #1
   4b230:	bne	4b278 <__assert_fail@plt+0x386c0>
   4b234:	b	4b238 <__assert_fail@plt+0x38680>
   4b238:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4b23c:	add	r0, r0, #-2147483648	; 0x80000000
   4b240:	movw	r1, #0
   4b244:	cmp	r1, r0
   4b248:	blt	4b324 <__assert_fail@plt+0x3876c>
   4b24c:	b	4b338 <__assert_fail@plt+0x38780>
   4b250:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4b254:	movw	r1, #0
   4b258:	cmp	r1, r0
   4b25c:	bge	4b338 <__assert_fail@plt+0x38780>
   4b260:	ldr	r0, [pc, #860]	; 4b5c4 <__assert_fail@plt+0x38a0c>
   4b264:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4b268:	sub	r1, r1, #1
   4b26c:	cmp	r0, r1
   4b270:	blt	4b324 <__assert_fail@plt+0x3876c>
   4b274:	b	4b338 <__assert_fail@plt+0x38780>
   4b278:	ldr	r0, [pc, #3144]	; 4bec8 <__assert_fail@plt+0x39310>
   4b27c:	ldr	r1, [fp, #8]
   4b280:	sdiv	r0, r0, r1
   4b284:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4b288:	cmp	r0, r1
   4b28c:	blt	4b324 <__assert_fail@plt+0x3876c>
   4b290:	b	4b338 <__assert_fail@plt+0x38780>
   4b294:	ldr	r0, [fp, #8]
   4b298:	cmp	r0, #0
   4b29c:	bne	4b2a4 <__assert_fail@plt+0x386ec>
   4b2a0:	b	4b338 <__assert_fail@plt+0x38780>
   4b2a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4b2a8:	cmp	r0, #0
   4b2ac:	bge	4b30c <__assert_fail@plt+0x38754>
   4b2b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4b2b4:	cmn	r0, #1
   4b2b8:	bne	4b2f0 <__assert_fail@plt+0x38738>
   4b2bc:	b	4b2c0 <__assert_fail@plt+0x38708>
   4b2c0:	ldr	r0, [fp, #8]
   4b2c4:	add	r0, r0, #-2147483648	; 0x80000000
   4b2c8:	movw	r1, #0
   4b2cc:	cmp	r1, r0
   4b2d0:	blt	4b324 <__assert_fail@plt+0x3876c>
   4b2d4:	b	4b338 <__assert_fail@plt+0x38780>
   4b2d8:	ldr	r0, [pc, #740]	; 4b5c4 <__assert_fail@plt+0x38a0c>
   4b2dc:	ldr	r1, [fp, #8]
   4b2e0:	sub	r1, r1, #1
   4b2e4:	cmp	r0, r1
   4b2e8:	blt	4b324 <__assert_fail@plt+0x3876c>
   4b2ec:	b	4b338 <__assert_fail@plt+0x38780>
   4b2f0:	ldr	r0, [pc, #3024]	; 4bec8 <__assert_fail@plt+0x39310>
   4b2f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4b2f8:	sdiv	r0, r0, r1
   4b2fc:	ldr	r1, [fp, #8]
   4b300:	cmp	r0, r1
   4b304:	blt	4b324 <__assert_fail@plt+0x3876c>
   4b308:	b	4b338 <__assert_fail@plt+0x38780>
   4b30c:	ldr	r0, [pc, #688]	; 4b5c4 <__assert_fail@plt+0x38a0c>
   4b310:	ldr	r1, [fp, #8]
   4b314:	sdiv	r0, r0, r1
   4b318:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4b31c:	cmp	r0, r1
   4b320:	bge	4b338 <__assert_fail@plt+0x38780>
   4b324:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4b328:	ldr	r1, [fp, #8]
   4b32c:	mul	r0, r0, r1
   4b330:	str	r0, [fp, #-28]	; 0xffffffe4
   4b334:	b	4b9c8 <__assert_fail@plt+0x38e10>
   4b338:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4b33c:	ldr	r1, [fp, #8]
   4b340:	mul	r0, r0, r1
   4b344:	str	r0, [fp, #-28]	; 0xffffffe4
   4b348:	b	4b9d4 <__assert_fail@plt+0x38e1c>
   4b34c:	ldr	r0, [fp, #8]
   4b350:	cmp	r0, #0
   4b354:	bge	4b464 <__assert_fail@plt+0x388ac>
   4b358:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4b35c:	cmp	r0, #0
   4b360:	bge	4b3ec <__assert_fail@plt+0x38834>
   4b364:	b	4b384 <__assert_fail@plt+0x387cc>
   4b368:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4b36c:	ldr	r1, [fp, #8]
   4b370:	mvn	r2, #0
   4b374:	udiv	r1, r2, r1
   4b378:	cmp	r0, r1
   4b37c:	bcc	4b500 <__assert_fail@plt+0x38948>
   4b380:	b	4b514 <__assert_fail@plt+0x3895c>
   4b384:	b	4b388 <__assert_fail@plt+0x387d0>
   4b388:	ldr	r0, [pc, #728]	; 4b668 <__assert_fail@plt+0x38ab0>
   4b38c:	ldr	r1, [fp, #8]
   4b390:	cmp	r1, r0
   4b394:	blt	4b3ac <__assert_fail@plt+0x387f4>
   4b398:	b	4b3b8 <__assert_fail@plt+0x38800>
   4b39c:	ldr	r0, [fp, #8]
   4b3a0:	movw	r1, #0
   4b3a4:	cmp	r1, r0
   4b3a8:	bge	4b3b8 <__assert_fail@plt+0x38800>
   4b3ac:	movw	r0, #1
   4b3b0:	str	r0, [fp, #-64]	; 0xffffffc0
   4b3b4:	b	4b3d0 <__assert_fail@plt+0x38818>
   4b3b8:	ldr	r0, [fp, #8]
   4b3bc:	movw	r1, #0
   4b3c0:	sub	r0, r1, r0
   4b3c4:	mvn	r1, #0
   4b3c8:	udiv	r0, r1, r0
   4b3cc:	str	r0, [fp, #-64]	; 0xffffffc0
   4b3d0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   4b3d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4b3d8:	mvn	r2, #0
   4b3dc:	sub	r1, r2, r1
   4b3e0:	cmp	r0, r1
   4b3e4:	bls	4b500 <__assert_fail@plt+0x38948>
   4b3e8:	b	4b514 <__assert_fail@plt+0x3895c>
   4b3ec:	b	4b3f0 <__assert_fail@plt+0x38838>
   4b3f0:	b	4b448 <__assert_fail@plt+0x38890>
   4b3f4:	b	4b448 <__assert_fail@plt+0x38890>
   4b3f8:	ldr	r0, [fp, #8]
   4b3fc:	cmn	r0, #1
   4b400:	bne	4b448 <__assert_fail@plt+0x38890>
   4b404:	b	4b408 <__assert_fail@plt+0x38850>
   4b408:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4b40c:	add	r0, r0, #0
   4b410:	movw	r1, #0
   4b414:	cmp	r1, r0
   4b418:	blt	4b500 <__assert_fail@plt+0x38948>
   4b41c:	b	4b514 <__assert_fail@plt+0x3895c>
   4b420:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4b424:	movw	r1, #0
   4b428:	cmp	r1, r0
   4b42c:	bge	4b514 <__assert_fail@plt+0x3895c>
   4b430:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4b434:	sub	r0, r0, #1
   4b438:	mvn	r1, #0
   4b43c:	cmp	r1, r0
   4b440:	blt	4b500 <__assert_fail@plt+0x38948>
   4b444:	b	4b514 <__assert_fail@plt+0x3895c>
   4b448:	ldr	r0, [fp, #8]
   4b44c:	movw	r1, #0
   4b450:	sdiv	r0, r1, r0
   4b454:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4b458:	cmp	r0, r1
   4b45c:	blt	4b500 <__assert_fail@plt+0x38948>
   4b460:	b	4b514 <__assert_fail@plt+0x3895c>
   4b464:	ldr	r0, [fp, #8]
   4b468:	cmp	r0, #0
   4b46c:	bne	4b474 <__assert_fail@plt+0x388bc>
   4b470:	b	4b514 <__assert_fail@plt+0x3895c>
   4b474:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4b478:	cmp	r0, #0
   4b47c:	bge	4b4e8 <__assert_fail@plt+0x38930>
   4b480:	b	4b484 <__assert_fail@plt+0x388cc>
   4b484:	b	4b4cc <__assert_fail@plt+0x38914>
   4b488:	b	4b4cc <__assert_fail@plt+0x38914>
   4b48c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4b490:	cmn	r0, #1
   4b494:	bne	4b4cc <__assert_fail@plt+0x38914>
   4b498:	b	4b49c <__assert_fail@plt+0x388e4>
   4b49c:	ldr	r0, [fp, #8]
   4b4a0:	add	r0, r0, #0
   4b4a4:	movw	r1, #0
   4b4a8:	cmp	r1, r0
   4b4ac:	blt	4b500 <__assert_fail@plt+0x38948>
   4b4b0:	b	4b514 <__assert_fail@plt+0x3895c>
   4b4b4:	ldr	r0, [fp, #8]
   4b4b8:	sub	r0, r0, #1
   4b4bc:	mvn	r1, #0
   4b4c0:	cmp	r1, r0
   4b4c4:	blt	4b500 <__assert_fail@plt+0x38948>
   4b4c8:	b	4b514 <__assert_fail@plt+0x3895c>
   4b4cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4b4d0:	movw	r1, #0
   4b4d4:	sdiv	r0, r1, r0
   4b4d8:	ldr	r1, [fp, #8]
   4b4dc:	cmp	r0, r1
   4b4e0:	blt	4b500 <__assert_fail@plt+0x38948>
   4b4e4:	b	4b514 <__assert_fail@plt+0x3895c>
   4b4e8:	ldr	r0, [fp, #8]
   4b4ec:	mvn	r1, #0
   4b4f0:	udiv	r0, r1, r0
   4b4f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4b4f8:	cmp	r0, r1
   4b4fc:	bcs	4b514 <__assert_fail@plt+0x3895c>
   4b500:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4b504:	ldr	r1, [fp, #8]
   4b508:	mul	r0, r0, r1
   4b50c:	str	r0, [fp, #-28]	; 0xffffffe4
   4b510:	b	4b9c8 <__assert_fail@plt+0x38e10>
   4b514:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4b518:	ldr	r1, [fp, #8]
   4b51c:	mul	r0, r0, r1
   4b520:	str	r0, [fp, #-28]	; 0xffffffe4
   4b524:	b	4b9d4 <__assert_fail@plt+0x38e1c>
   4b528:	b	4b52c <__assert_fail@plt+0x38974>
   4b52c:	ldr	r0, [fp, #8]
   4b530:	cmp	r0, #0
   4b534:	bge	4b6a4 <__assert_fail@plt+0x38aec>
   4b538:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4b53c:	cmp	r0, #0
   4b540:	bge	4b61c <__assert_fail@plt+0x38a64>
   4b544:	b	4b548 <__assert_fail@plt+0x38990>
   4b548:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4b54c:	ldr	r1, [fp, #8]
   4b550:	asr	r3, r1, #31
   4b554:	mvn	r2, #0
   4b558:	mvn	ip, #-2147483648	; 0x80000000
   4b55c:	str	r0, [fp, #-68]	; 0xffffffbc
   4b560:	mov	r0, r2
   4b564:	str	r1, [fp, #-72]	; 0xffffffb8
   4b568:	mov	r1, ip
   4b56c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   4b570:	bl	75338 <__assert_fail@plt+0x62780>
   4b574:	ldr	r2, [fp, #-68]	; 0xffffffbc
   4b578:	subs	r0, r2, r0
   4b57c:	rscs	r1, r1, r2, asr #31
   4b580:	blt	4b76c <__assert_fail@plt+0x38bb4>
   4b584:	b	4b780 <__assert_fail@plt+0x38bc8>
   4b588:	b	4b58c <__assert_fail@plt+0x389d4>
   4b58c:	ldr	r0, [pc, #212]	; 4b668 <__assert_fail@plt+0x38ab0>
   4b590:	ldr	r1, [fp, #8]
   4b594:	cmp	r1, r0
   4b598:	blt	4b5b0 <__assert_fail@plt+0x389f8>
   4b59c:	b	4b5c8 <__assert_fail@plt+0x38a10>
   4b5a0:	ldr	r0, [fp, #8]
   4b5a4:	movw	r1, #0
   4b5a8:	cmp	r1, r0
   4b5ac:	bge	4b5c8 <__assert_fail@plt+0x38a10>
   4b5b0:	mov	r0, #0
   4b5b4:	mvn	r1, #0
   4b5b8:	str	r1, [fp, #-76]	; 0xffffffb4
   4b5bc:	str	r0, [fp, #-80]	; 0xffffffb0
   4b5c0:	b	4b5fc <__assert_fail@plt+0x38a44>
   4b5c4:	svcvc	0x00ffffff
   4b5c8:	ldr	r0, [fp, #8]
   4b5cc:	rsb	r0, r0, #0
   4b5d0:	asr	r3, r0, #31
   4b5d4:	mvn	r1, #0
   4b5d8:	mvn	r2, #-2147483648	; 0x80000000
   4b5dc:	str	r0, [fp, #-84]	; 0xffffffac
   4b5e0:	mov	r0, r1
   4b5e4:	mov	r1, r2
   4b5e8:	ldr	r2, [fp, #-84]	; 0xffffffac
   4b5ec:	bl	75338 <__assert_fail@plt+0x62780>
   4b5f0:	str	r0, [fp, #-76]	; 0xffffffb4
   4b5f4:	str	r1, [fp, #-80]	; 0xffffffb0
   4b5f8:	b	4b5fc <__assert_fail@plt+0x38a44>
   4b5fc:	ldr	r0, [fp, #-80]	; 0xffffffb0
   4b600:	ldr	r1, [fp, #-76]	; 0xffffffb4
   4b604:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4b608:	mvn	r2, r2
   4b60c:	subs	r1, r2, r1
   4b610:	rscs	r0, r0, r2, asr #31
   4b614:	bge	4b76c <__assert_fail@plt+0x38bb4>
   4b618:	b	4b780 <__assert_fail@plt+0x38bc8>
   4b61c:	ldr	r0, [fp, #8]
   4b620:	cmn	r0, #1
   4b624:	bne	4b66c <__assert_fail@plt+0x38ab4>
   4b628:	b	4b62c <__assert_fail@plt+0x38a74>
   4b62c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4b630:	mov	r1, #-2147483648	; 0x80000000
   4b634:	add	r1, r1, r0, asr #31
   4b638:	rsbs	r0, r0, #0
   4b63c:	rscs	r1, r1, #0
   4b640:	blt	4b76c <__assert_fail@plt+0x38bb4>
   4b644:	b	4b780 <__assert_fail@plt+0x38bc8>
   4b648:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4b64c:	movw	r1, #0
   4b650:	cmp	r1, r0
   4b654:	bge	4b780 <__assert_fail@plt+0x38bc8>
   4b658:	mov	r0, #0
   4b65c:	cmp	r0, #0
   4b660:	bne	4b76c <__assert_fail@plt+0x38bb4>
   4b664:	b	4b780 <__assert_fail@plt+0x38bc8>
   4b668:	andhi	r0, r0, r1
   4b66c:	ldr	r0, [fp, #8]
   4b670:	asr	r3, r0, #31
   4b674:	mov	r1, #0
   4b678:	mov	r2, #-2147483648	; 0x80000000
   4b67c:	str	r0, [fp, #-88]	; 0xffffffa8
   4b680:	mov	r0, r1
   4b684:	mov	r1, r2
   4b688:	ldr	r2, [fp, #-88]	; 0xffffffa8
   4b68c:	bl	75338 <__assert_fail@plt+0x62780>
   4b690:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4b694:	subs	r0, r0, r2
   4b698:	sbcs	r1, r1, r2, asr #31
   4b69c:	blt	4b76c <__assert_fail@plt+0x38bb4>
   4b6a0:	b	4b780 <__assert_fail@plt+0x38bc8>
   4b6a4:	ldr	r0, [fp, #8]
   4b6a8:	cmp	r0, #0
   4b6ac:	bne	4b6b4 <__assert_fail@plt+0x38afc>
   4b6b0:	b	4b780 <__assert_fail@plt+0x38bc8>
   4b6b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4b6b8:	cmp	r0, #0
   4b6bc:	bge	4b734 <__assert_fail@plt+0x38b7c>
   4b6c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4b6c4:	cmn	r0, #1
   4b6c8:	bne	4b6fc <__assert_fail@plt+0x38b44>
   4b6cc:	b	4b6d0 <__assert_fail@plt+0x38b18>
   4b6d0:	ldr	r0, [fp, #8]
   4b6d4:	mov	r1, #-2147483648	; 0x80000000
   4b6d8:	add	r1, r1, r0, asr #31
   4b6dc:	rsbs	r0, r0, #0
   4b6e0:	rscs	r1, r1, #0
   4b6e4:	blt	4b76c <__assert_fail@plt+0x38bb4>
   4b6e8:	b	4b780 <__assert_fail@plt+0x38bc8>
   4b6ec:	mov	r0, #0
   4b6f0:	cmp	r0, #0
   4b6f4:	bne	4b76c <__assert_fail@plt+0x38bb4>
   4b6f8:	b	4b780 <__assert_fail@plt+0x38bc8>
   4b6fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4b700:	asr	r3, r0, #31
   4b704:	mov	r1, #0
   4b708:	mov	r2, #-2147483648	; 0x80000000
   4b70c:	str	r0, [fp, #-92]	; 0xffffffa4
   4b710:	mov	r0, r1
   4b714:	mov	r1, r2
   4b718:	ldr	r2, [fp, #-92]	; 0xffffffa4
   4b71c:	bl	75338 <__assert_fail@plt+0x62780>
   4b720:	ldr	r2, [fp, #8]
   4b724:	subs	r0, r0, r2
   4b728:	sbcs	r1, r1, r2, asr #31
   4b72c:	blt	4b76c <__assert_fail@plt+0x38bb4>
   4b730:	b	4b780 <__assert_fail@plt+0x38bc8>
   4b734:	ldr	r0, [fp, #8]
   4b738:	asr	r3, r0, #31
   4b73c:	mvn	r1, #0
   4b740:	mvn	r2, #-2147483648	; 0x80000000
   4b744:	str	r0, [fp, #-96]	; 0xffffffa0
   4b748:	mov	r0, r1
   4b74c:	mov	r1, r2
   4b750:	ldr	r2, [fp, #-96]	; 0xffffffa0
   4b754:	bl	75338 <__assert_fail@plt+0x62780>
   4b758:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4b75c:	subs	r0, r0, r2
   4b760:	sbcs	r1, r1, r2, asr #31
   4b764:	bge	4b780 <__assert_fail@plt+0x38bc8>
   4b768:	b	4b76c <__assert_fail@plt+0x38bb4>
   4b76c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4b770:	ldr	r1, [fp, #8]
   4b774:	mul	r0, r0, r1
   4b778:	str	r0, [fp, #-28]	; 0xffffffe4
   4b77c:	b	4b9c8 <__assert_fail@plt+0x38e10>
   4b780:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4b784:	ldr	r1, [fp, #8]
   4b788:	mul	r0, r0, r1
   4b78c:	str	r0, [fp, #-28]	; 0xffffffe4
   4b790:	b	4b9d4 <__assert_fail@plt+0x38e1c>
   4b794:	ldr	r0, [fp, #8]
   4b798:	cmp	r0, #0
   4b79c:	bge	4b8ec <__assert_fail@plt+0x38d34>
   4b7a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4b7a4:	cmp	r0, #0
   4b7a8:	bge	4b874 <__assert_fail@plt+0x38cbc>
   4b7ac:	b	4b7ec <__assert_fail@plt+0x38c34>
   4b7b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4b7b4:	ldr	r1, [fp, #8]
   4b7b8:	asr	r3, r1, #31
   4b7bc:	mvn	r2, #0
   4b7c0:	str	r0, [fp, #-100]	; 0xffffff9c
   4b7c4:	mov	r0, r2
   4b7c8:	str	r1, [fp, #-104]	; 0xffffff98
   4b7cc:	mov	r1, r2
   4b7d0:	ldr	r2, [fp, #-104]	; 0xffffff98
   4b7d4:	bl	7540c <__assert_fail@plt+0x62854>
   4b7d8:	ldr	r2, [fp, #-100]	; 0xffffff9c
   4b7dc:	subs	r0, r2, r0
   4b7e0:	rscs	r1, r1, r2, asr #31
   4b7e4:	bcc	4b9a0 <__assert_fail@plt+0x38de8>
   4b7e8:	b	4b9b4 <__assert_fail@plt+0x38dfc>
   4b7ec:	b	4b7f0 <__assert_fail@plt+0x38c38>
   4b7f0:	ldr	r0, [pc, #-400]	; 4b668 <__assert_fail@plt+0x38ab0>
   4b7f4:	ldr	r1, [fp, #8]
   4b7f8:	cmp	r1, r0
   4b7fc:	blt	4b814 <__assert_fail@plt+0x38c5c>
   4b800:	b	4b828 <__assert_fail@plt+0x38c70>
   4b804:	ldr	r0, [fp, #8]
   4b808:	movw	r1, #0
   4b80c:	cmp	r1, r0
   4b810:	bge	4b828 <__assert_fail@plt+0x38c70>
   4b814:	mov	r0, #1
   4b818:	mvn	r1, #0
   4b81c:	str	r1, [sp, #108]	; 0x6c
   4b820:	str	r0, [sp, #104]	; 0x68
   4b824:	b	4b854 <__assert_fail@plt+0x38c9c>
   4b828:	ldr	r0, [fp, #8]
   4b82c:	rsb	r0, r0, #0
   4b830:	asr	r3, r0, #31
   4b834:	mvn	r1, #0
   4b838:	str	r0, [sp, #100]	; 0x64
   4b83c:	mov	r0, r1
   4b840:	ldr	r2, [sp, #100]	; 0x64
   4b844:	bl	7540c <__assert_fail@plt+0x62854>
   4b848:	str	r0, [sp, #108]	; 0x6c
   4b84c:	str	r1, [sp, #104]	; 0x68
   4b850:	b	4b854 <__assert_fail@plt+0x38c9c>
   4b854:	ldr	r0, [sp, #104]	; 0x68
   4b858:	ldr	r1, [sp, #108]	; 0x6c
   4b85c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4b860:	mvn	r2, r2
   4b864:	subs	r1, r2, r1
   4b868:	rscs	r0, r0, r2, asr #31
   4b86c:	bcs	4b9a0 <__assert_fail@plt+0x38de8>
   4b870:	b	4b9b4 <__assert_fail@plt+0x38dfc>
   4b874:	b	4b878 <__assert_fail@plt+0x38cc0>
   4b878:	b	4b8d0 <__assert_fail@plt+0x38d18>
   4b87c:	b	4b8d0 <__assert_fail@plt+0x38d18>
   4b880:	ldr	r0, [fp, #8]
   4b884:	cmn	r0, #1
   4b888:	bne	4b8d0 <__assert_fail@plt+0x38d18>
   4b88c:	b	4b890 <__assert_fail@plt+0x38cd8>
   4b890:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4b894:	add	r0, r0, #0
   4b898:	movw	r1, #0
   4b89c:	cmp	r1, r0
   4b8a0:	blt	4b9a0 <__assert_fail@plt+0x38de8>
   4b8a4:	b	4b9b4 <__assert_fail@plt+0x38dfc>
   4b8a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4b8ac:	movw	r1, #0
   4b8b0:	cmp	r1, r0
   4b8b4:	bge	4b9b4 <__assert_fail@plt+0x38dfc>
   4b8b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4b8bc:	sub	r0, r0, #1
   4b8c0:	mvn	r1, #0
   4b8c4:	cmp	r1, r0
   4b8c8:	blt	4b9a0 <__assert_fail@plt+0x38de8>
   4b8cc:	b	4b9b4 <__assert_fail@plt+0x38dfc>
   4b8d0:	ldr	r0, [fp, #8]
   4b8d4:	movw	r1, #0
   4b8d8:	sdiv	r0, r1, r0
   4b8dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4b8e0:	cmp	r0, r1
   4b8e4:	blt	4b9a0 <__assert_fail@plt+0x38de8>
   4b8e8:	b	4b9b4 <__assert_fail@plt+0x38dfc>
   4b8ec:	ldr	r0, [fp, #8]
   4b8f0:	cmp	r0, #0
   4b8f4:	bne	4b8fc <__assert_fail@plt+0x38d44>
   4b8f8:	b	4b9b4 <__assert_fail@plt+0x38dfc>
   4b8fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4b900:	cmp	r0, #0
   4b904:	bge	4b970 <__assert_fail@plt+0x38db8>
   4b908:	b	4b90c <__assert_fail@plt+0x38d54>
   4b90c:	b	4b954 <__assert_fail@plt+0x38d9c>
   4b910:	b	4b954 <__assert_fail@plt+0x38d9c>
   4b914:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4b918:	cmn	r0, #1
   4b91c:	bne	4b954 <__assert_fail@plt+0x38d9c>
   4b920:	b	4b924 <__assert_fail@plt+0x38d6c>
   4b924:	ldr	r0, [fp, #8]
   4b928:	add	r0, r0, #0
   4b92c:	movw	r1, #0
   4b930:	cmp	r1, r0
   4b934:	blt	4b9a0 <__assert_fail@plt+0x38de8>
   4b938:	b	4b9b4 <__assert_fail@plt+0x38dfc>
   4b93c:	ldr	r0, [fp, #8]
   4b940:	sub	r0, r0, #1
   4b944:	mvn	r1, #0
   4b948:	cmp	r1, r0
   4b94c:	blt	4b9a0 <__assert_fail@plt+0x38de8>
   4b950:	b	4b9b4 <__assert_fail@plt+0x38dfc>
   4b954:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4b958:	movw	r1, #0
   4b95c:	sdiv	r0, r1, r0
   4b960:	ldr	r1, [fp, #8]
   4b964:	cmp	r0, r1
   4b968:	blt	4b9a0 <__assert_fail@plt+0x38de8>
   4b96c:	b	4b9b4 <__assert_fail@plt+0x38dfc>
   4b970:	ldr	r0, [fp, #8]
   4b974:	asr	r3, r0, #31
   4b978:	mvn	r1, #0
   4b97c:	str	r0, [sp, #96]	; 0x60
   4b980:	mov	r0, r1
   4b984:	ldr	r2, [sp, #96]	; 0x60
   4b988:	bl	7540c <__assert_fail@plt+0x62854>
   4b98c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4b990:	subs	r0, r0, r2
   4b994:	sbcs	r1, r1, r2, asr #31
   4b998:	bcs	4b9b4 <__assert_fail@plt+0x38dfc>
   4b99c:	b	4b9a0 <__assert_fail@plt+0x38de8>
   4b9a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4b9a4:	ldr	r1, [fp, #8]
   4b9a8:	mul	r0, r0, r1
   4b9ac:	str	r0, [fp, #-28]	; 0xffffffe4
   4b9b0:	b	4b9c8 <__assert_fail@plt+0x38e10>
   4b9b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4b9b8:	ldr	r1, [fp, #8]
   4b9bc:	mul	r0, r0, r1
   4b9c0:	str	r0, [fp, #-28]	; 0xffffffe4
   4b9c4:	b	4b9d4 <__assert_fail@plt+0x38e1c>
   4b9c8:	ldr	r0, [pc, #-1036]	; 4b5c4 <__assert_fail@plt+0x38a0c>
   4b9cc:	str	r0, [sp, #92]	; 0x5c
   4b9d0:	b	4b9f4 <__assert_fail@plt+0x38e3c>
   4b9d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   4b9d8:	cmp	r0, #64	; 0x40
   4b9dc:	movw	r0, #0
   4b9e0:	movlt	r0, #1
   4b9e4:	tst	r0, #1
   4b9e8:	movw	r0, #64	; 0x40
   4b9ec:	moveq	r0, #0
   4b9f0:	str	r0, [sp, #92]	; 0x5c
   4b9f4:	ldr	r0, [sp, #92]	; 0x5c
   4b9f8:	str	r0, [fp, #-32]	; 0xffffffe0
   4b9fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4ba00:	cmp	r0, #0
   4ba04:	beq	4ba34 <__assert_fail@plt+0x38e7c>
   4ba08:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4ba0c:	ldr	r1, [fp, #8]
   4ba10:	sdiv	r0, r0, r1
   4ba14:	str	r0, [fp, #-24]	; 0xffffffe8
   4ba18:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4ba1c:	mov	r1, r0
   4ba20:	ldr	r2, [fp, #8]
   4ba24:	sdiv	r3, r0, r2
   4ba28:	mls	r0, r3, r2, r0
   4ba2c:	sub	r0, r1, r0
   4ba30:	str	r0, [fp, #-28]	; 0xffffffe4
   4ba34:	ldr	r0, [fp, #-4]
   4ba38:	movw	r1, #0
   4ba3c:	cmp	r0, r1
   4ba40:	bne	4ba50 <__assert_fail@plt+0x38e98>
   4ba44:	ldr	r0, [fp, #-8]
   4ba48:	movw	r1, #0
   4ba4c:	str	r1, [r0]
   4ba50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4ba54:	ldr	r1, [fp, #-20]	; 0xffffffec
   4ba58:	sub	r0, r0, r1
   4ba5c:	ldr	r1, [fp, #-12]
   4ba60:	cmp	r0, r1
   4ba64:	bge	4ce50 <__assert_fail@plt+0x3a298>
   4ba68:	ldr	r0, [fp, #-20]	; 0xffffffec
   4ba6c:	ldr	r1, [fp, #-12]
   4ba70:	add	r1, r0, r1
   4ba74:	mov	r2, #1
   4ba78:	cmp	r1, r0
   4ba7c:	movwvc	r2, #0
   4ba80:	str	r1, [fp, #-24]	; 0xffffffe8
   4ba84:	tst	r2, #1
   4ba88:	bne	4ce4c <__assert_fail@plt+0x3a294>
   4ba8c:	ldr	r0, [fp, #-16]
   4ba90:	movw	r1, #0
   4ba94:	cmp	r1, r0
   4ba98:	bgt	4baac <__assert_fail@plt+0x38ef4>
   4ba9c:	ldr	r0, [fp, #-16]
   4baa0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4baa4:	cmp	r0, r1
   4baa8:	blt	4ce4c <__assert_fail@plt+0x3a294>
   4baac:	b	4be88 <__assert_fail@plt+0x392d0>
   4bab0:			; <UNDEFINED> instruction: 0xffff8000
   4bab4:	b	4bab8 <__assert_fail@plt+0x38f00>
   4bab8:	ldr	r0, [fp, #8]
   4babc:	cmp	r0, #0
   4bac0:	bge	4bbd4 <__assert_fail@plt+0x3901c>
   4bac4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4bac8:	cmp	r0, #0
   4bacc:	bge	4bb58 <__assert_fail@plt+0x38fa0>
   4bad0:	b	4bad4 <__assert_fail@plt+0x38f1c>
   4bad4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4bad8:	ldr	r1, [fp, #8]
   4badc:	movw	r2, #127	; 0x7f
   4bae0:	sdiv	r1, r2, r1
   4bae4:	cmp	r0, r1
   4bae8:	blt	4bc74 <__assert_fail@plt+0x390bc>
   4baec:	b	4bc8c <__assert_fail@plt+0x390d4>
   4baf0:	b	4baf4 <__assert_fail@plt+0x38f3c>
   4baf4:	ldr	r0, [pc, #-1172]	; 4b668 <__assert_fail@plt+0x38ab0>
   4baf8:	ldr	r1, [fp, #8]
   4bafc:	cmp	r1, r0
   4bb00:	blt	4bb18 <__assert_fail@plt+0x38f60>
   4bb04:	b	4bb24 <__assert_fail@plt+0x38f6c>
   4bb08:	ldr	r0, [fp, #8]
   4bb0c:	movw	r1, #0
   4bb10:	cmp	r1, r0
   4bb14:	bge	4bb24 <__assert_fail@plt+0x38f6c>
   4bb18:	movw	r0, #0
   4bb1c:	str	r0, [sp, #88]	; 0x58
   4bb20:	b	4bb3c <__assert_fail@plt+0x38f84>
   4bb24:	ldr	r0, [fp, #8]
   4bb28:	movw	r1, #0
   4bb2c:	sub	r0, r1, r0
   4bb30:	movw	r1, #127	; 0x7f
   4bb34:	sdiv	r0, r1, r0
   4bb38:	str	r0, [sp, #88]	; 0x58
   4bb3c:	ldr	r0, [sp, #88]	; 0x58
   4bb40:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4bb44:	mvn	r2, #0
   4bb48:	sub	r1, r2, r1
   4bb4c:	cmp	r0, r1
   4bb50:	ble	4bc74 <__assert_fail@plt+0x390bc>
   4bb54:	b	4bc8c <__assert_fail@plt+0x390d4>
   4bb58:	b	4bb5c <__assert_fail@plt+0x38fa4>
   4bb5c:	b	4bbb8 <__assert_fail@plt+0x39000>
   4bb60:	b	4bbb8 <__assert_fail@plt+0x39000>
   4bb64:	ldr	r0, [fp, #8]
   4bb68:	cmn	r0, #1
   4bb6c:	bne	4bbb8 <__assert_fail@plt+0x39000>
   4bb70:	b	4bb74 <__assert_fail@plt+0x38fbc>
   4bb74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4bb78:	mvn	r1, #127	; 0x7f
   4bb7c:	add	r0, r0, r1
   4bb80:	movw	r1, #0
   4bb84:	cmp	r1, r0
   4bb88:	blt	4bc74 <__assert_fail@plt+0x390bc>
   4bb8c:	b	4bc8c <__assert_fail@plt+0x390d4>
   4bb90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4bb94:	movw	r1, #0
   4bb98:	cmp	r1, r0
   4bb9c:	bge	4bc8c <__assert_fail@plt+0x390d4>
   4bba0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4bba4:	sub	r0, r0, #1
   4bba8:	movw	r1, #127	; 0x7f
   4bbac:	cmp	r1, r0
   4bbb0:	blt	4bc74 <__assert_fail@plt+0x390bc>
   4bbb4:	b	4bc8c <__assert_fail@plt+0x390d4>
   4bbb8:	ldr	r0, [fp, #8]
   4bbbc:	mvn	r1, #127	; 0x7f
   4bbc0:	sdiv	r0, r1, r0
   4bbc4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4bbc8:	cmp	r0, r1
   4bbcc:	blt	4bc74 <__assert_fail@plt+0x390bc>
   4bbd0:	b	4bc8c <__assert_fail@plt+0x390d4>
   4bbd4:	ldr	r0, [fp, #8]
   4bbd8:	cmp	r0, #0
   4bbdc:	bne	4bbe4 <__assert_fail@plt+0x3902c>
   4bbe0:	b	4bc8c <__assert_fail@plt+0x390d4>
   4bbe4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4bbe8:	cmp	r0, #0
   4bbec:	bge	4bc5c <__assert_fail@plt+0x390a4>
   4bbf0:	b	4bbf4 <__assert_fail@plt+0x3903c>
   4bbf4:	b	4bc40 <__assert_fail@plt+0x39088>
   4bbf8:	b	4bc40 <__assert_fail@plt+0x39088>
   4bbfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4bc00:	cmn	r0, #1
   4bc04:	bne	4bc40 <__assert_fail@plt+0x39088>
   4bc08:	b	4bc0c <__assert_fail@plt+0x39054>
   4bc0c:	ldr	r0, [fp, #8]
   4bc10:	mvn	r1, #127	; 0x7f
   4bc14:	add	r0, r0, r1
   4bc18:	movw	r1, #0
   4bc1c:	cmp	r1, r0
   4bc20:	blt	4bc74 <__assert_fail@plt+0x390bc>
   4bc24:	b	4bc8c <__assert_fail@plt+0x390d4>
   4bc28:	ldr	r0, [fp, #8]
   4bc2c:	sub	r0, r0, #1
   4bc30:	movw	r1, #127	; 0x7f
   4bc34:	cmp	r1, r0
   4bc38:	blt	4bc74 <__assert_fail@plt+0x390bc>
   4bc3c:	b	4bc8c <__assert_fail@plt+0x390d4>
   4bc40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4bc44:	mvn	r1, #127	; 0x7f
   4bc48:	sdiv	r0, r1, r0
   4bc4c:	ldr	r1, [fp, #8]
   4bc50:	cmp	r0, r1
   4bc54:	blt	4bc74 <__assert_fail@plt+0x390bc>
   4bc58:	b	4bc8c <__assert_fail@plt+0x390d4>
   4bc5c:	ldr	r0, [fp, #8]
   4bc60:	movw	r1, #127	; 0x7f
   4bc64:	sdiv	r0, r1, r0
   4bc68:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4bc6c:	cmp	r0, r1
   4bc70:	bge	4bc8c <__assert_fail@plt+0x390d4>
   4bc74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4bc78:	ldr	r1, [fp, #8]
   4bc7c:	mul	r0, r0, r1
   4bc80:	sxtb	r0, r0
   4bc84:	str	r0, [fp, #-28]	; 0xffffffe4
   4bc88:	b	4ce4c <__assert_fail@plt+0x3a294>
   4bc8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4bc90:	ldr	r1, [fp, #8]
   4bc94:	mul	r0, r0, r1
   4bc98:	sxtb	r0, r0
   4bc9c:	str	r0, [fp, #-28]	; 0xffffffe4
   4bca0:	b	4ce50 <__assert_fail@plt+0x3a298>
   4bca4:	ldr	r0, [fp, #8]
   4bca8:	cmp	r0, #0
   4bcac:	bge	4bdbc <__assert_fail@plt+0x39204>
   4bcb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4bcb4:	cmp	r0, #0
   4bcb8:	bge	4bd44 <__assert_fail@plt+0x3918c>
   4bcbc:	b	4bcc0 <__assert_fail@plt+0x39108>
   4bcc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4bcc4:	ldr	r1, [fp, #8]
   4bcc8:	movw	r2, #255	; 0xff
   4bccc:	sdiv	r1, r2, r1
   4bcd0:	cmp	r0, r1
   4bcd4:	blt	4be58 <__assert_fail@plt+0x392a0>
   4bcd8:	b	4be70 <__assert_fail@plt+0x392b8>
   4bcdc:	b	4bce0 <__assert_fail@plt+0x39128>
   4bce0:	ldr	r0, [pc, #-1664]	; 4b668 <__assert_fail@plt+0x38ab0>
   4bce4:	ldr	r1, [fp, #8]
   4bce8:	cmp	r1, r0
   4bcec:	blt	4bd04 <__assert_fail@plt+0x3914c>
   4bcf0:	b	4bd10 <__assert_fail@plt+0x39158>
   4bcf4:	ldr	r0, [fp, #8]
   4bcf8:	movw	r1, #0
   4bcfc:	cmp	r1, r0
   4bd00:	bge	4bd10 <__assert_fail@plt+0x39158>
   4bd04:	movw	r0, #0
   4bd08:	str	r0, [sp, #84]	; 0x54
   4bd0c:	b	4bd28 <__assert_fail@plt+0x39170>
   4bd10:	ldr	r0, [fp, #8]
   4bd14:	movw	r1, #0
   4bd18:	sub	r0, r1, r0
   4bd1c:	movw	r1, #255	; 0xff
   4bd20:	sdiv	r0, r1, r0
   4bd24:	str	r0, [sp, #84]	; 0x54
   4bd28:	ldr	r0, [sp, #84]	; 0x54
   4bd2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4bd30:	mvn	r2, #0
   4bd34:	sub	r1, r2, r1
   4bd38:	cmp	r0, r1
   4bd3c:	ble	4be58 <__assert_fail@plt+0x392a0>
   4bd40:	b	4be70 <__assert_fail@plt+0x392b8>
   4bd44:	b	4bd48 <__assert_fail@plt+0x39190>
   4bd48:	b	4bda0 <__assert_fail@plt+0x391e8>
   4bd4c:	b	4bda0 <__assert_fail@plt+0x391e8>
   4bd50:	ldr	r0, [fp, #8]
   4bd54:	cmn	r0, #1
   4bd58:	bne	4bda0 <__assert_fail@plt+0x391e8>
   4bd5c:	b	4bd60 <__assert_fail@plt+0x391a8>
   4bd60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4bd64:	add	r0, r0, #0
   4bd68:	movw	r1, #0
   4bd6c:	cmp	r1, r0
   4bd70:	blt	4be58 <__assert_fail@plt+0x392a0>
   4bd74:	b	4be70 <__assert_fail@plt+0x392b8>
   4bd78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4bd7c:	movw	r1, #0
   4bd80:	cmp	r1, r0
   4bd84:	bge	4be70 <__assert_fail@plt+0x392b8>
   4bd88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4bd8c:	sub	r0, r0, #1
   4bd90:	mvn	r1, #0
   4bd94:	cmp	r1, r0
   4bd98:	blt	4be58 <__assert_fail@plt+0x392a0>
   4bd9c:	b	4be70 <__assert_fail@plt+0x392b8>
   4bda0:	ldr	r0, [fp, #8]
   4bda4:	movw	r1, #0
   4bda8:	sdiv	r0, r1, r0
   4bdac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4bdb0:	cmp	r0, r1
   4bdb4:	blt	4be58 <__assert_fail@plt+0x392a0>
   4bdb8:	b	4be70 <__assert_fail@plt+0x392b8>
   4bdbc:	ldr	r0, [fp, #8]
   4bdc0:	cmp	r0, #0
   4bdc4:	bne	4bdcc <__assert_fail@plt+0x39214>
   4bdc8:	b	4be70 <__assert_fail@plt+0x392b8>
   4bdcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4bdd0:	cmp	r0, #0
   4bdd4:	bge	4be40 <__assert_fail@plt+0x39288>
   4bdd8:	b	4bddc <__assert_fail@plt+0x39224>
   4bddc:	b	4be24 <__assert_fail@plt+0x3926c>
   4bde0:	b	4be24 <__assert_fail@plt+0x3926c>
   4bde4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4bde8:	cmn	r0, #1
   4bdec:	bne	4be24 <__assert_fail@plt+0x3926c>
   4bdf0:	b	4bdf4 <__assert_fail@plt+0x3923c>
   4bdf4:	ldr	r0, [fp, #8]
   4bdf8:	add	r0, r0, #0
   4bdfc:	movw	r1, #0
   4be00:	cmp	r1, r0
   4be04:	blt	4be58 <__assert_fail@plt+0x392a0>
   4be08:	b	4be70 <__assert_fail@plt+0x392b8>
   4be0c:	ldr	r0, [fp, #8]
   4be10:	sub	r0, r0, #1
   4be14:	mvn	r1, #0
   4be18:	cmp	r1, r0
   4be1c:	blt	4be58 <__assert_fail@plt+0x392a0>
   4be20:	b	4be70 <__assert_fail@plt+0x392b8>
   4be24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4be28:	movw	r1, #0
   4be2c:	sdiv	r0, r1, r0
   4be30:	ldr	r1, [fp, #8]
   4be34:	cmp	r0, r1
   4be38:	blt	4be58 <__assert_fail@plt+0x392a0>
   4be3c:	b	4be70 <__assert_fail@plt+0x392b8>
   4be40:	ldr	r0, [fp, #8]
   4be44:	movw	r1, #255	; 0xff
   4be48:	sdiv	r0, r1, r0
   4be4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4be50:	cmp	r0, r1
   4be54:	bge	4be70 <__assert_fail@plt+0x392b8>
   4be58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4be5c:	ldr	r1, [fp, #8]
   4be60:	mul	r0, r0, r1
   4be64:	and	r0, r0, #255	; 0xff
   4be68:	str	r0, [fp, #-28]	; 0xffffffe4
   4be6c:	b	4ce4c <__assert_fail@plt+0x3a294>
   4be70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4be74:	ldr	r1, [fp, #8]
   4be78:	mul	r0, r0, r1
   4be7c:	and	r0, r0, #255	; 0xff
   4be80:	str	r0, [fp, #-28]	; 0xffffffe4
   4be84:	b	4ce50 <__assert_fail@plt+0x3a298>
   4be88:	b	4c264 <__assert_fail@plt+0x396ac>
   4be8c:	b	4be90 <__assert_fail@plt+0x392d8>
   4be90:	ldr	r0, [fp, #8]
   4be94:	cmp	r0, #0
   4be98:	bge	4bfb0 <__assert_fail@plt+0x393f8>
   4be9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4bea0:	cmp	r0, #0
   4bea4:	bge	4bf34 <__assert_fail@plt+0x3937c>
   4bea8:	b	4beac <__assert_fail@plt+0x392f4>
   4beac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4beb0:	ldr	r1, [fp, #8]
   4beb4:	movw	r2, #32767	; 0x7fff
   4beb8:	sdiv	r1, r2, r1
   4bebc:	cmp	r0, r1
   4bec0:	blt	4c050 <__assert_fail@plt+0x39498>
   4bec4:	b	4c068 <__assert_fail@plt+0x394b0>
   4bec8:	andhi	r0, r0, r0
   4becc:	b	4bed0 <__assert_fail@plt+0x39318>
   4bed0:	ldr	r0, [pc, #4004]	; 4ce7c <__assert_fail@plt+0x3a2c4>
   4bed4:	ldr	r1, [fp, #8]
   4bed8:	cmp	r1, r0
   4bedc:	blt	4bef4 <__assert_fail@plt+0x3933c>
   4bee0:	b	4bf00 <__assert_fail@plt+0x39348>
   4bee4:	ldr	r0, [fp, #8]
   4bee8:	movw	r1, #0
   4beec:	cmp	r1, r0
   4bef0:	bge	4bf00 <__assert_fail@plt+0x39348>
   4bef4:	movw	r0, #0
   4bef8:	str	r0, [sp, #80]	; 0x50
   4befc:	b	4bf18 <__assert_fail@plt+0x39360>
   4bf00:	ldr	r0, [fp, #8]
   4bf04:	movw	r1, #0
   4bf08:	sub	r0, r1, r0
   4bf0c:	movw	r1, #32767	; 0x7fff
   4bf10:	sdiv	r0, r1, r0
   4bf14:	str	r0, [sp, #80]	; 0x50
   4bf18:	ldr	r0, [sp, #80]	; 0x50
   4bf1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4bf20:	mvn	r2, #0
   4bf24:	sub	r1, r2, r1
   4bf28:	cmp	r0, r1
   4bf2c:	ble	4c050 <__assert_fail@plt+0x39498>
   4bf30:	b	4c068 <__assert_fail@plt+0x394b0>
   4bf34:	b	4bf38 <__assert_fail@plt+0x39380>
   4bf38:	b	4bf94 <__assert_fail@plt+0x393dc>
   4bf3c:	b	4bf94 <__assert_fail@plt+0x393dc>
   4bf40:	ldr	r0, [fp, #8]
   4bf44:	cmn	r0, #1
   4bf48:	bne	4bf94 <__assert_fail@plt+0x393dc>
   4bf4c:	b	4bf50 <__assert_fail@plt+0x39398>
   4bf50:	ldr	r0, [pc, #3884]	; 4ce84 <__assert_fail@plt+0x3a2cc>
   4bf54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4bf58:	add	r0, r1, r0
   4bf5c:	movw	r1, #0
   4bf60:	cmp	r1, r0
   4bf64:	blt	4c050 <__assert_fail@plt+0x39498>
   4bf68:	b	4c068 <__assert_fail@plt+0x394b0>
   4bf6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4bf70:	movw	r1, #0
   4bf74:	cmp	r1, r0
   4bf78:	bge	4c068 <__assert_fail@plt+0x394b0>
   4bf7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4bf80:	sub	r0, r0, #1
   4bf84:	movw	r1, #32767	; 0x7fff
   4bf88:	cmp	r1, r0
   4bf8c:	blt	4c050 <__assert_fail@plt+0x39498>
   4bf90:	b	4c068 <__assert_fail@plt+0x394b0>
   4bf94:	ldr	r0, [pc, #3816]	; 4ce84 <__assert_fail@plt+0x3a2cc>
   4bf98:	ldr	r1, [fp, #8]
   4bf9c:	sdiv	r0, r0, r1
   4bfa0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4bfa4:	cmp	r0, r1
   4bfa8:	blt	4c050 <__assert_fail@plt+0x39498>
   4bfac:	b	4c068 <__assert_fail@plt+0x394b0>
   4bfb0:	ldr	r0, [fp, #8]
   4bfb4:	cmp	r0, #0
   4bfb8:	bne	4bfc0 <__assert_fail@plt+0x39408>
   4bfbc:	b	4c068 <__assert_fail@plt+0x394b0>
   4bfc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4bfc4:	cmp	r0, #0
   4bfc8:	bge	4c038 <__assert_fail@plt+0x39480>
   4bfcc:	b	4bfd0 <__assert_fail@plt+0x39418>
   4bfd0:	b	4c01c <__assert_fail@plt+0x39464>
   4bfd4:	b	4c01c <__assert_fail@plt+0x39464>
   4bfd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4bfdc:	cmn	r0, #1
   4bfe0:	bne	4c01c <__assert_fail@plt+0x39464>
   4bfe4:	b	4bfe8 <__assert_fail@plt+0x39430>
   4bfe8:	ldr	r0, [pc, #3732]	; 4ce84 <__assert_fail@plt+0x3a2cc>
   4bfec:	ldr	r1, [fp, #8]
   4bff0:	add	r0, r1, r0
   4bff4:	movw	r1, #0
   4bff8:	cmp	r1, r0
   4bffc:	blt	4c050 <__assert_fail@plt+0x39498>
   4c000:	b	4c068 <__assert_fail@plt+0x394b0>
   4c004:	ldr	r0, [fp, #8]
   4c008:	sub	r0, r0, #1
   4c00c:	movw	r1, #32767	; 0x7fff
   4c010:	cmp	r1, r0
   4c014:	blt	4c050 <__assert_fail@plt+0x39498>
   4c018:	b	4c068 <__assert_fail@plt+0x394b0>
   4c01c:	ldr	r0, [pc, #3680]	; 4ce84 <__assert_fail@plt+0x3a2cc>
   4c020:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4c024:	sdiv	r0, r0, r1
   4c028:	ldr	r1, [fp, #8]
   4c02c:	cmp	r0, r1
   4c030:	blt	4c050 <__assert_fail@plt+0x39498>
   4c034:	b	4c068 <__assert_fail@plt+0x394b0>
   4c038:	ldr	r0, [fp, #8]
   4c03c:	movw	r1, #32767	; 0x7fff
   4c040:	sdiv	r0, r1, r0
   4c044:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4c048:	cmp	r0, r1
   4c04c:	bge	4c068 <__assert_fail@plt+0x394b0>
   4c050:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c054:	ldr	r1, [fp, #8]
   4c058:	mul	r0, r0, r1
   4c05c:	sxth	r0, r0
   4c060:	str	r0, [fp, #-28]	; 0xffffffe4
   4c064:	b	4ce4c <__assert_fail@plt+0x3a294>
   4c068:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c06c:	ldr	r1, [fp, #8]
   4c070:	mul	r0, r0, r1
   4c074:	sxth	r0, r0
   4c078:	str	r0, [fp, #-28]	; 0xffffffe4
   4c07c:	b	4ce50 <__assert_fail@plt+0x3a298>
   4c080:	ldr	r0, [fp, #8]
   4c084:	cmp	r0, #0
   4c088:	bge	4c198 <__assert_fail@plt+0x395e0>
   4c08c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c090:	cmp	r0, #0
   4c094:	bge	4c120 <__assert_fail@plt+0x39568>
   4c098:	b	4c09c <__assert_fail@plt+0x394e4>
   4c09c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c0a0:	ldr	r1, [fp, #8]
   4c0a4:	movw	r2, #65535	; 0xffff
   4c0a8:	sdiv	r1, r2, r1
   4c0ac:	cmp	r0, r1
   4c0b0:	blt	4c234 <__assert_fail@plt+0x3967c>
   4c0b4:	b	4c24c <__assert_fail@plt+0x39694>
   4c0b8:	b	4c0bc <__assert_fail@plt+0x39504>
   4c0bc:	ldr	r0, [pc, #3512]	; 4ce7c <__assert_fail@plt+0x3a2c4>
   4c0c0:	ldr	r1, [fp, #8]
   4c0c4:	cmp	r1, r0
   4c0c8:	blt	4c0e0 <__assert_fail@plt+0x39528>
   4c0cc:	b	4c0ec <__assert_fail@plt+0x39534>
   4c0d0:	ldr	r0, [fp, #8]
   4c0d4:	movw	r1, #0
   4c0d8:	cmp	r1, r0
   4c0dc:	bge	4c0ec <__assert_fail@plt+0x39534>
   4c0e0:	movw	r0, #0
   4c0e4:	str	r0, [sp, #76]	; 0x4c
   4c0e8:	b	4c104 <__assert_fail@plt+0x3954c>
   4c0ec:	ldr	r0, [fp, #8]
   4c0f0:	movw	r1, #0
   4c0f4:	sub	r0, r1, r0
   4c0f8:	movw	r1, #65535	; 0xffff
   4c0fc:	sdiv	r0, r1, r0
   4c100:	str	r0, [sp, #76]	; 0x4c
   4c104:	ldr	r0, [sp, #76]	; 0x4c
   4c108:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4c10c:	mvn	r2, #0
   4c110:	sub	r1, r2, r1
   4c114:	cmp	r0, r1
   4c118:	ble	4c234 <__assert_fail@plt+0x3967c>
   4c11c:	b	4c24c <__assert_fail@plt+0x39694>
   4c120:	b	4c124 <__assert_fail@plt+0x3956c>
   4c124:	b	4c17c <__assert_fail@plt+0x395c4>
   4c128:	b	4c17c <__assert_fail@plt+0x395c4>
   4c12c:	ldr	r0, [fp, #8]
   4c130:	cmn	r0, #1
   4c134:	bne	4c17c <__assert_fail@plt+0x395c4>
   4c138:	b	4c13c <__assert_fail@plt+0x39584>
   4c13c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c140:	add	r0, r0, #0
   4c144:	movw	r1, #0
   4c148:	cmp	r1, r0
   4c14c:	blt	4c234 <__assert_fail@plt+0x3967c>
   4c150:	b	4c24c <__assert_fail@plt+0x39694>
   4c154:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c158:	movw	r1, #0
   4c15c:	cmp	r1, r0
   4c160:	bge	4c24c <__assert_fail@plt+0x39694>
   4c164:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c168:	sub	r0, r0, #1
   4c16c:	mvn	r1, #0
   4c170:	cmp	r1, r0
   4c174:	blt	4c234 <__assert_fail@plt+0x3967c>
   4c178:	b	4c24c <__assert_fail@plt+0x39694>
   4c17c:	ldr	r0, [fp, #8]
   4c180:	movw	r1, #0
   4c184:	sdiv	r0, r1, r0
   4c188:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4c18c:	cmp	r0, r1
   4c190:	blt	4c234 <__assert_fail@plt+0x3967c>
   4c194:	b	4c24c <__assert_fail@plt+0x39694>
   4c198:	ldr	r0, [fp, #8]
   4c19c:	cmp	r0, #0
   4c1a0:	bne	4c1a8 <__assert_fail@plt+0x395f0>
   4c1a4:	b	4c24c <__assert_fail@plt+0x39694>
   4c1a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c1ac:	cmp	r0, #0
   4c1b0:	bge	4c21c <__assert_fail@plt+0x39664>
   4c1b4:	b	4c1b8 <__assert_fail@plt+0x39600>
   4c1b8:	b	4c200 <__assert_fail@plt+0x39648>
   4c1bc:	b	4c200 <__assert_fail@plt+0x39648>
   4c1c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c1c4:	cmn	r0, #1
   4c1c8:	bne	4c200 <__assert_fail@plt+0x39648>
   4c1cc:	b	4c1d0 <__assert_fail@plt+0x39618>
   4c1d0:	ldr	r0, [fp, #8]
   4c1d4:	add	r0, r0, #0
   4c1d8:	movw	r1, #0
   4c1dc:	cmp	r1, r0
   4c1e0:	blt	4c234 <__assert_fail@plt+0x3967c>
   4c1e4:	b	4c24c <__assert_fail@plt+0x39694>
   4c1e8:	ldr	r0, [fp, #8]
   4c1ec:	sub	r0, r0, #1
   4c1f0:	mvn	r1, #0
   4c1f4:	cmp	r1, r0
   4c1f8:	blt	4c234 <__assert_fail@plt+0x3967c>
   4c1fc:	b	4c24c <__assert_fail@plt+0x39694>
   4c200:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c204:	movw	r1, #0
   4c208:	sdiv	r0, r1, r0
   4c20c:	ldr	r1, [fp, #8]
   4c210:	cmp	r0, r1
   4c214:	blt	4c234 <__assert_fail@plt+0x3967c>
   4c218:	b	4c24c <__assert_fail@plt+0x39694>
   4c21c:	ldr	r0, [fp, #8]
   4c220:	movw	r1, #65535	; 0xffff
   4c224:	sdiv	r0, r1, r0
   4c228:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4c22c:	cmp	r0, r1
   4c230:	bge	4c24c <__assert_fail@plt+0x39694>
   4c234:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c238:	ldr	r1, [fp, #8]
   4c23c:	mul	r0, r0, r1
   4c240:	uxth	r0, r0
   4c244:	str	r0, [fp, #-28]	; 0xffffffe4
   4c248:	b	4ce4c <__assert_fail@plt+0x3a294>
   4c24c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c250:	ldr	r1, [fp, #8]
   4c254:	mul	r0, r0, r1
   4c258:	uxth	r0, r0
   4c25c:	str	r0, [fp, #-28]	; 0xffffffe4
   4c260:	b	4ce50 <__assert_fail@plt+0x3a298>
   4c264:	b	4c268 <__assert_fail@plt+0x396b0>
   4c268:	b	4c26c <__assert_fail@plt+0x396b4>
   4c26c:	ldr	r0, [fp, #8]
   4c270:	cmp	r0, #0
   4c274:	bge	4c378 <__assert_fail@plt+0x397c0>
   4c278:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c27c:	cmp	r0, #0
   4c280:	bge	4c30c <__assert_fail@plt+0x39754>
   4c284:	b	4c288 <__assert_fail@plt+0x396d0>
   4c288:	ldr	r0, [pc, #3048]	; 4ce78 <__assert_fail@plt+0x3a2c0>
   4c28c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4c290:	ldr	r2, [fp, #8]
   4c294:	sdiv	r0, r0, r2
   4c298:	cmp	r1, r0
   4c29c:	blt	4c408 <__assert_fail@plt+0x39850>
   4c2a0:	b	4c41c <__assert_fail@plt+0x39864>
   4c2a4:	b	4c2a8 <__assert_fail@plt+0x396f0>
   4c2a8:	ldr	r0, [pc, #3020]	; 4ce7c <__assert_fail@plt+0x3a2c4>
   4c2ac:	ldr	r1, [fp, #8]
   4c2b0:	cmp	r1, r0
   4c2b4:	blt	4c2cc <__assert_fail@plt+0x39714>
   4c2b8:	b	4c2d8 <__assert_fail@plt+0x39720>
   4c2bc:	ldr	r0, [fp, #8]
   4c2c0:	movw	r1, #0
   4c2c4:	cmp	r1, r0
   4c2c8:	bge	4c2d8 <__assert_fail@plt+0x39720>
   4c2cc:	movw	r0, #0
   4c2d0:	str	r0, [sp, #72]	; 0x48
   4c2d4:	b	4c2f0 <__assert_fail@plt+0x39738>
   4c2d8:	ldr	r0, [pc, #2968]	; 4ce78 <__assert_fail@plt+0x3a2c0>
   4c2dc:	ldr	r1, [fp, #8]
   4c2e0:	movw	r2, #0
   4c2e4:	sub	r1, r2, r1
   4c2e8:	sdiv	r0, r0, r1
   4c2ec:	str	r0, [sp, #72]	; 0x48
   4c2f0:	ldr	r0, [sp, #72]	; 0x48
   4c2f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4c2f8:	mvn	r2, #0
   4c2fc:	sub	r1, r2, r1
   4c300:	cmp	r0, r1
   4c304:	ble	4c408 <__assert_fail@plt+0x39850>
   4c308:	b	4c41c <__assert_fail@plt+0x39864>
   4c30c:	ldr	r0, [fp, #8]
   4c310:	cmn	r0, #1
   4c314:	bne	4c35c <__assert_fail@plt+0x397a4>
   4c318:	b	4c31c <__assert_fail@plt+0x39764>
   4c31c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c320:	add	r0, r0, #-2147483648	; 0x80000000
   4c324:	movw	r1, #0
   4c328:	cmp	r1, r0
   4c32c:	blt	4c408 <__assert_fail@plt+0x39850>
   4c330:	b	4c41c <__assert_fail@plt+0x39864>
   4c334:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c338:	movw	r1, #0
   4c33c:	cmp	r1, r0
   4c340:	bge	4c41c <__assert_fail@plt+0x39864>
   4c344:	ldr	r0, [pc, #2860]	; 4ce78 <__assert_fail@plt+0x3a2c0>
   4c348:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4c34c:	sub	r1, r1, #1
   4c350:	cmp	r0, r1
   4c354:	blt	4c408 <__assert_fail@plt+0x39850>
   4c358:	b	4c41c <__assert_fail@plt+0x39864>
   4c35c:	ldr	r0, [pc, #2844]	; 4ce80 <__assert_fail@plt+0x3a2c8>
   4c360:	ldr	r1, [fp, #8]
   4c364:	sdiv	r0, r0, r1
   4c368:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4c36c:	cmp	r0, r1
   4c370:	blt	4c408 <__assert_fail@plt+0x39850>
   4c374:	b	4c41c <__assert_fail@plt+0x39864>
   4c378:	ldr	r0, [fp, #8]
   4c37c:	cmp	r0, #0
   4c380:	bne	4c388 <__assert_fail@plt+0x397d0>
   4c384:	b	4c41c <__assert_fail@plt+0x39864>
   4c388:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c38c:	cmp	r0, #0
   4c390:	bge	4c3f0 <__assert_fail@plt+0x39838>
   4c394:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c398:	cmn	r0, #1
   4c39c:	bne	4c3d4 <__assert_fail@plt+0x3981c>
   4c3a0:	b	4c3a4 <__assert_fail@plt+0x397ec>
   4c3a4:	ldr	r0, [fp, #8]
   4c3a8:	add	r0, r0, #-2147483648	; 0x80000000
   4c3ac:	movw	r1, #0
   4c3b0:	cmp	r1, r0
   4c3b4:	blt	4c408 <__assert_fail@plt+0x39850>
   4c3b8:	b	4c41c <__assert_fail@plt+0x39864>
   4c3bc:	ldr	r0, [pc, #2740]	; 4ce78 <__assert_fail@plt+0x3a2c0>
   4c3c0:	ldr	r1, [fp, #8]
   4c3c4:	sub	r1, r1, #1
   4c3c8:	cmp	r0, r1
   4c3cc:	blt	4c408 <__assert_fail@plt+0x39850>
   4c3d0:	b	4c41c <__assert_fail@plt+0x39864>
   4c3d4:	ldr	r0, [pc, #2724]	; 4ce80 <__assert_fail@plt+0x3a2c8>
   4c3d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4c3dc:	sdiv	r0, r0, r1
   4c3e0:	ldr	r1, [fp, #8]
   4c3e4:	cmp	r0, r1
   4c3e8:	blt	4c408 <__assert_fail@plt+0x39850>
   4c3ec:	b	4c41c <__assert_fail@plt+0x39864>
   4c3f0:	ldr	r0, [pc, #2688]	; 4ce78 <__assert_fail@plt+0x3a2c0>
   4c3f4:	ldr	r1, [fp, #8]
   4c3f8:	sdiv	r0, r0, r1
   4c3fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4c400:	cmp	r0, r1
   4c404:	bge	4c41c <__assert_fail@plt+0x39864>
   4c408:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c40c:	ldr	r1, [fp, #8]
   4c410:	mul	r0, r0, r1
   4c414:	str	r0, [fp, #-28]	; 0xffffffe4
   4c418:	b	4ce4c <__assert_fail@plt+0x3a294>
   4c41c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c420:	ldr	r1, [fp, #8]
   4c424:	mul	r0, r0, r1
   4c428:	str	r0, [fp, #-28]	; 0xffffffe4
   4c42c:	b	4ce50 <__assert_fail@plt+0x3a298>
   4c430:	ldr	r0, [fp, #8]
   4c434:	cmp	r0, #0
   4c438:	bge	4c548 <__assert_fail@plt+0x39990>
   4c43c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c440:	cmp	r0, #0
   4c444:	bge	4c4d0 <__assert_fail@plt+0x39918>
   4c448:	b	4c468 <__assert_fail@plt+0x398b0>
   4c44c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c450:	ldr	r1, [fp, #8]
   4c454:	mvn	r2, #0
   4c458:	udiv	r1, r2, r1
   4c45c:	cmp	r0, r1
   4c460:	bcc	4c5e4 <__assert_fail@plt+0x39a2c>
   4c464:	b	4c5f8 <__assert_fail@plt+0x39a40>
   4c468:	b	4c46c <__assert_fail@plt+0x398b4>
   4c46c:	ldr	r0, [pc, #2568]	; 4ce7c <__assert_fail@plt+0x3a2c4>
   4c470:	ldr	r1, [fp, #8]
   4c474:	cmp	r1, r0
   4c478:	blt	4c490 <__assert_fail@plt+0x398d8>
   4c47c:	b	4c49c <__assert_fail@plt+0x398e4>
   4c480:	ldr	r0, [fp, #8]
   4c484:	movw	r1, #0
   4c488:	cmp	r1, r0
   4c48c:	bge	4c49c <__assert_fail@plt+0x398e4>
   4c490:	movw	r0, #1
   4c494:	str	r0, [sp, #68]	; 0x44
   4c498:	b	4c4b4 <__assert_fail@plt+0x398fc>
   4c49c:	ldr	r0, [fp, #8]
   4c4a0:	movw	r1, #0
   4c4a4:	sub	r0, r1, r0
   4c4a8:	mvn	r1, #0
   4c4ac:	udiv	r0, r1, r0
   4c4b0:	str	r0, [sp, #68]	; 0x44
   4c4b4:	ldr	r0, [sp, #68]	; 0x44
   4c4b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4c4bc:	mvn	r2, #0
   4c4c0:	sub	r1, r2, r1
   4c4c4:	cmp	r0, r1
   4c4c8:	bls	4c5e4 <__assert_fail@plt+0x39a2c>
   4c4cc:	b	4c5f8 <__assert_fail@plt+0x39a40>
   4c4d0:	b	4c4d4 <__assert_fail@plt+0x3991c>
   4c4d4:	b	4c52c <__assert_fail@plt+0x39974>
   4c4d8:	b	4c52c <__assert_fail@plt+0x39974>
   4c4dc:	ldr	r0, [fp, #8]
   4c4e0:	cmn	r0, #1
   4c4e4:	bne	4c52c <__assert_fail@plt+0x39974>
   4c4e8:	b	4c4ec <__assert_fail@plt+0x39934>
   4c4ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c4f0:	add	r0, r0, #0
   4c4f4:	movw	r1, #0
   4c4f8:	cmp	r1, r0
   4c4fc:	blt	4c5e4 <__assert_fail@plt+0x39a2c>
   4c500:	b	4c5f8 <__assert_fail@plt+0x39a40>
   4c504:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c508:	movw	r1, #0
   4c50c:	cmp	r1, r0
   4c510:	bge	4c5f8 <__assert_fail@plt+0x39a40>
   4c514:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c518:	sub	r0, r0, #1
   4c51c:	mvn	r1, #0
   4c520:	cmp	r1, r0
   4c524:	blt	4c5e4 <__assert_fail@plt+0x39a2c>
   4c528:	b	4c5f8 <__assert_fail@plt+0x39a40>
   4c52c:	ldr	r0, [fp, #8]
   4c530:	movw	r1, #0
   4c534:	sdiv	r0, r1, r0
   4c538:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4c53c:	cmp	r0, r1
   4c540:	blt	4c5e4 <__assert_fail@plt+0x39a2c>
   4c544:	b	4c5f8 <__assert_fail@plt+0x39a40>
   4c548:	ldr	r0, [fp, #8]
   4c54c:	cmp	r0, #0
   4c550:	bne	4c558 <__assert_fail@plt+0x399a0>
   4c554:	b	4c5f8 <__assert_fail@plt+0x39a40>
   4c558:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c55c:	cmp	r0, #0
   4c560:	bge	4c5cc <__assert_fail@plt+0x39a14>
   4c564:	b	4c568 <__assert_fail@plt+0x399b0>
   4c568:	b	4c5b0 <__assert_fail@plt+0x399f8>
   4c56c:	b	4c5b0 <__assert_fail@plt+0x399f8>
   4c570:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c574:	cmn	r0, #1
   4c578:	bne	4c5b0 <__assert_fail@plt+0x399f8>
   4c57c:	b	4c580 <__assert_fail@plt+0x399c8>
   4c580:	ldr	r0, [fp, #8]
   4c584:	add	r0, r0, #0
   4c588:	movw	r1, #0
   4c58c:	cmp	r1, r0
   4c590:	blt	4c5e4 <__assert_fail@plt+0x39a2c>
   4c594:	b	4c5f8 <__assert_fail@plt+0x39a40>
   4c598:	ldr	r0, [fp, #8]
   4c59c:	sub	r0, r0, #1
   4c5a0:	mvn	r1, #0
   4c5a4:	cmp	r1, r0
   4c5a8:	blt	4c5e4 <__assert_fail@plt+0x39a2c>
   4c5ac:	b	4c5f8 <__assert_fail@plt+0x39a40>
   4c5b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c5b4:	movw	r1, #0
   4c5b8:	sdiv	r0, r1, r0
   4c5bc:	ldr	r1, [fp, #8]
   4c5c0:	cmp	r0, r1
   4c5c4:	blt	4c5e4 <__assert_fail@plt+0x39a2c>
   4c5c8:	b	4c5f8 <__assert_fail@plt+0x39a40>
   4c5cc:	ldr	r0, [fp, #8]
   4c5d0:	mvn	r1, #0
   4c5d4:	udiv	r0, r1, r0
   4c5d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4c5dc:	cmp	r0, r1
   4c5e0:	bcs	4c5f8 <__assert_fail@plt+0x39a40>
   4c5e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c5e8:	ldr	r1, [fp, #8]
   4c5ec:	mul	r0, r0, r1
   4c5f0:	str	r0, [fp, #-28]	; 0xffffffe4
   4c5f4:	b	4ce4c <__assert_fail@plt+0x3a294>
   4c5f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c5fc:	ldr	r1, [fp, #8]
   4c600:	mul	r0, r0, r1
   4c604:	str	r0, [fp, #-28]	; 0xffffffe4
   4c608:	b	4ce50 <__assert_fail@plt+0x3a298>
   4c60c:	b	4c610 <__assert_fail@plt+0x39a58>
   4c610:	b	4c614 <__assert_fail@plt+0x39a5c>
   4c614:	ldr	r0, [fp, #8]
   4c618:	cmp	r0, #0
   4c61c:	bge	4c720 <__assert_fail@plt+0x39b68>
   4c620:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c624:	cmp	r0, #0
   4c628:	bge	4c6b4 <__assert_fail@plt+0x39afc>
   4c62c:	b	4c630 <__assert_fail@plt+0x39a78>
   4c630:	ldr	r0, [pc, #2112]	; 4ce78 <__assert_fail@plt+0x3a2c0>
   4c634:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4c638:	ldr	r2, [fp, #8]
   4c63c:	sdiv	r0, r0, r2
   4c640:	cmp	r1, r0
   4c644:	blt	4c7b0 <__assert_fail@plt+0x39bf8>
   4c648:	b	4c7c4 <__assert_fail@plt+0x39c0c>
   4c64c:	b	4c650 <__assert_fail@plt+0x39a98>
   4c650:	ldr	r0, [pc, #2084]	; 4ce7c <__assert_fail@plt+0x3a2c4>
   4c654:	ldr	r1, [fp, #8]
   4c658:	cmp	r1, r0
   4c65c:	blt	4c674 <__assert_fail@plt+0x39abc>
   4c660:	b	4c680 <__assert_fail@plt+0x39ac8>
   4c664:	ldr	r0, [fp, #8]
   4c668:	movw	r1, #0
   4c66c:	cmp	r1, r0
   4c670:	bge	4c680 <__assert_fail@plt+0x39ac8>
   4c674:	movw	r0, #0
   4c678:	str	r0, [sp, #64]	; 0x40
   4c67c:	b	4c698 <__assert_fail@plt+0x39ae0>
   4c680:	ldr	r0, [pc, #2032]	; 4ce78 <__assert_fail@plt+0x3a2c0>
   4c684:	ldr	r1, [fp, #8]
   4c688:	movw	r2, #0
   4c68c:	sub	r1, r2, r1
   4c690:	sdiv	r0, r0, r1
   4c694:	str	r0, [sp, #64]	; 0x40
   4c698:	ldr	r0, [sp, #64]	; 0x40
   4c69c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4c6a0:	mvn	r2, #0
   4c6a4:	sub	r1, r2, r1
   4c6a8:	cmp	r0, r1
   4c6ac:	ble	4c7b0 <__assert_fail@plt+0x39bf8>
   4c6b0:	b	4c7c4 <__assert_fail@plt+0x39c0c>
   4c6b4:	ldr	r0, [fp, #8]
   4c6b8:	cmn	r0, #1
   4c6bc:	bne	4c704 <__assert_fail@plt+0x39b4c>
   4c6c0:	b	4c6c4 <__assert_fail@plt+0x39b0c>
   4c6c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c6c8:	add	r0, r0, #-2147483648	; 0x80000000
   4c6cc:	movw	r1, #0
   4c6d0:	cmp	r1, r0
   4c6d4:	blt	4c7b0 <__assert_fail@plt+0x39bf8>
   4c6d8:	b	4c7c4 <__assert_fail@plt+0x39c0c>
   4c6dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c6e0:	movw	r1, #0
   4c6e4:	cmp	r1, r0
   4c6e8:	bge	4c7c4 <__assert_fail@plt+0x39c0c>
   4c6ec:	ldr	r0, [pc, #1924]	; 4ce78 <__assert_fail@plt+0x3a2c0>
   4c6f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4c6f4:	sub	r1, r1, #1
   4c6f8:	cmp	r0, r1
   4c6fc:	blt	4c7b0 <__assert_fail@plt+0x39bf8>
   4c700:	b	4c7c4 <__assert_fail@plt+0x39c0c>
   4c704:	ldr	r0, [pc, #1908]	; 4ce80 <__assert_fail@plt+0x3a2c8>
   4c708:	ldr	r1, [fp, #8]
   4c70c:	sdiv	r0, r0, r1
   4c710:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4c714:	cmp	r0, r1
   4c718:	blt	4c7b0 <__assert_fail@plt+0x39bf8>
   4c71c:	b	4c7c4 <__assert_fail@plt+0x39c0c>
   4c720:	ldr	r0, [fp, #8]
   4c724:	cmp	r0, #0
   4c728:	bne	4c730 <__assert_fail@plt+0x39b78>
   4c72c:	b	4c7c4 <__assert_fail@plt+0x39c0c>
   4c730:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c734:	cmp	r0, #0
   4c738:	bge	4c798 <__assert_fail@plt+0x39be0>
   4c73c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c740:	cmn	r0, #1
   4c744:	bne	4c77c <__assert_fail@plt+0x39bc4>
   4c748:	b	4c74c <__assert_fail@plt+0x39b94>
   4c74c:	ldr	r0, [fp, #8]
   4c750:	add	r0, r0, #-2147483648	; 0x80000000
   4c754:	movw	r1, #0
   4c758:	cmp	r1, r0
   4c75c:	blt	4c7b0 <__assert_fail@plt+0x39bf8>
   4c760:	b	4c7c4 <__assert_fail@plt+0x39c0c>
   4c764:	ldr	r0, [pc, #1804]	; 4ce78 <__assert_fail@plt+0x3a2c0>
   4c768:	ldr	r1, [fp, #8]
   4c76c:	sub	r1, r1, #1
   4c770:	cmp	r0, r1
   4c774:	blt	4c7b0 <__assert_fail@plt+0x39bf8>
   4c778:	b	4c7c4 <__assert_fail@plt+0x39c0c>
   4c77c:	ldr	r0, [pc, #1788]	; 4ce80 <__assert_fail@plt+0x3a2c8>
   4c780:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4c784:	sdiv	r0, r0, r1
   4c788:	ldr	r1, [fp, #8]
   4c78c:	cmp	r0, r1
   4c790:	blt	4c7b0 <__assert_fail@plt+0x39bf8>
   4c794:	b	4c7c4 <__assert_fail@plt+0x39c0c>
   4c798:	ldr	r0, [pc, #1752]	; 4ce78 <__assert_fail@plt+0x3a2c0>
   4c79c:	ldr	r1, [fp, #8]
   4c7a0:	sdiv	r0, r0, r1
   4c7a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4c7a8:	cmp	r0, r1
   4c7ac:	bge	4c7c4 <__assert_fail@plt+0x39c0c>
   4c7b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c7b4:	ldr	r1, [fp, #8]
   4c7b8:	mul	r0, r0, r1
   4c7bc:	str	r0, [fp, #-28]	; 0xffffffe4
   4c7c0:	b	4ce4c <__assert_fail@plt+0x3a294>
   4c7c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c7c8:	ldr	r1, [fp, #8]
   4c7cc:	mul	r0, r0, r1
   4c7d0:	str	r0, [fp, #-28]	; 0xffffffe4
   4c7d4:	b	4ce50 <__assert_fail@plt+0x3a298>
   4c7d8:	ldr	r0, [fp, #8]
   4c7dc:	cmp	r0, #0
   4c7e0:	bge	4c8f0 <__assert_fail@plt+0x39d38>
   4c7e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c7e8:	cmp	r0, #0
   4c7ec:	bge	4c878 <__assert_fail@plt+0x39cc0>
   4c7f0:	b	4c810 <__assert_fail@plt+0x39c58>
   4c7f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c7f8:	ldr	r1, [fp, #8]
   4c7fc:	mvn	r2, #0
   4c800:	udiv	r1, r2, r1
   4c804:	cmp	r0, r1
   4c808:	bcc	4c98c <__assert_fail@plt+0x39dd4>
   4c80c:	b	4c9a0 <__assert_fail@plt+0x39de8>
   4c810:	b	4c814 <__assert_fail@plt+0x39c5c>
   4c814:	ldr	r0, [pc, #1632]	; 4ce7c <__assert_fail@plt+0x3a2c4>
   4c818:	ldr	r1, [fp, #8]
   4c81c:	cmp	r1, r0
   4c820:	blt	4c838 <__assert_fail@plt+0x39c80>
   4c824:	b	4c844 <__assert_fail@plt+0x39c8c>
   4c828:	ldr	r0, [fp, #8]
   4c82c:	movw	r1, #0
   4c830:	cmp	r1, r0
   4c834:	bge	4c844 <__assert_fail@plt+0x39c8c>
   4c838:	movw	r0, #1
   4c83c:	str	r0, [sp, #60]	; 0x3c
   4c840:	b	4c85c <__assert_fail@plt+0x39ca4>
   4c844:	ldr	r0, [fp, #8]
   4c848:	movw	r1, #0
   4c84c:	sub	r0, r1, r0
   4c850:	mvn	r1, #0
   4c854:	udiv	r0, r1, r0
   4c858:	str	r0, [sp, #60]	; 0x3c
   4c85c:	ldr	r0, [sp, #60]	; 0x3c
   4c860:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4c864:	mvn	r2, #0
   4c868:	sub	r1, r2, r1
   4c86c:	cmp	r0, r1
   4c870:	bls	4c98c <__assert_fail@plt+0x39dd4>
   4c874:	b	4c9a0 <__assert_fail@plt+0x39de8>
   4c878:	b	4c87c <__assert_fail@plt+0x39cc4>
   4c87c:	b	4c8d4 <__assert_fail@plt+0x39d1c>
   4c880:	b	4c8d4 <__assert_fail@plt+0x39d1c>
   4c884:	ldr	r0, [fp, #8]
   4c888:	cmn	r0, #1
   4c88c:	bne	4c8d4 <__assert_fail@plt+0x39d1c>
   4c890:	b	4c894 <__assert_fail@plt+0x39cdc>
   4c894:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c898:	add	r0, r0, #0
   4c89c:	movw	r1, #0
   4c8a0:	cmp	r1, r0
   4c8a4:	blt	4c98c <__assert_fail@plt+0x39dd4>
   4c8a8:	b	4c9a0 <__assert_fail@plt+0x39de8>
   4c8ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c8b0:	movw	r1, #0
   4c8b4:	cmp	r1, r0
   4c8b8:	bge	4c9a0 <__assert_fail@plt+0x39de8>
   4c8bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c8c0:	sub	r0, r0, #1
   4c8c4:	mvn	r1, #0
   4c8c8:	cmp	r1, r0
   4c8cc:	blt	4c98c <__assert_fail@plt+0x39dd4>
   4c8d0:	b	4c9a0 <__assert_fail@plt+0x39de8>
   4c8d4:	ldr	r0, [fp, #8]
   4c8d8:	movw	r1, #0
   4c8dc:	sdiv	r0, r1, r0
   4c8e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4c8e4:	cmp	r0, r1
   4c8e8:	blt	4c98c <__assert_fail@plt+0x39dd4>
   4c8ec:	b	4c9a0 <__assert_fail@plt+0x39de8>
   4c8f0:	ldr	r0, [fp, #8]
   4c8f4:	cmp	r0, #0
   4c8f8:	bne	4c900 <__assert_fail@plt+0x39d48>
   4c8fc:	b	4c9a0 <__assert_fail@plt+0x39de8>
   4c900:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c904:	cmp	r0, #0
   4c908:	bge	4c974 <__assert_fail@plt+0x39dbc>
   4c90c:	b	4c910 <__assert_fail@plt+0x39d58>
   4c910:	b	4c958 <__assert_fail@plt+0x39da0>
   4c914:	b	4c958 <__assert_fail@plt+0x39da0>
   4c918:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c91c:	cmn	r0, #1
   4c920:	bne	4c958 <__assert_fail@plt+0x39da0>
   4c924:	b	4c928 <__assert_fail@plt+0x39d70>
   4c928:	ldr	r0, [fp, #8]
   4c92c:	add	r0, r0, #0
   4c930:	movw	r1, #0
   4c934:	cmp	r1, r0
   4c938:	blt	4c98c <__assert_fail@plt+0x39dd4>
   4c93c:	b	4c9a0 <__assert_fail@plt+0x39de8>
   4c940:	ldr	r0, [fp, #8]
   4c944:	sub	r0, r0, #1
   4c948:	mvn	r1, #0
   4c94c:	cmp	r1, r0
   4c950:	blt	4c98c <__assert_fail@plt+0x39dd4>
   4c954:	b	4c9a0 <__assert_fail@plt+0x39de8>
   4c958:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c95c:	movw	r1, #0
   4c960:	sdiv	r0, r1, r0
   4c964:	ldr	r1, [fp, #8]
   4c968:	cmp	r0, r1
   4c96c:	blt	4c98c <__assert_fail@plt+0x39dd4>
   4c970:	b	4c9a0 <__assert_fail@plt+0x39de8>
   4c974:	ldr	r0, [fp, #8]
   4c978:	mvn	r1, #0
   4c97c:	udiv	r0, r1, r0
   4c980:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4c984:	cmp	r0, r1
   4c988:	bcs	4c9a0 <__assert_fail@plt+0x39de8>
   4c98c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c990:	ldr	r1, [fp, #8]
   4c994:	mul	r0, r0, r1
   4c998:	str	r0, [fp, #-28]	; 0xffffffe4
   4c99c:	b	4ce4c <__assert_fail@plt+0x3a294>
   4c9a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c9a4:	ldr	r1, [fp, #8]
   4c9a8:	mul	r0, r0, r1
   4c9ac:	str	r0, [fp, #-28]	; 0xffffffe4
   4c9b0:	b	4ce50 <__assert_fail@plt+0x3a298>
   4c9b4:	b	4c9b8 <__assert_fail@plt+0x39e00>
   4c9b8:	ldr	r0, [fp, #8]
   4c9bc:	cmp	r0, #0
   4c9c0:	bge	4cb28 <__assert_fail@plt+0x39f70>
   4c9c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c9c8:	cmp	r0, #0
   4c9cc:	bge	4caa4 <__assert_fail@plt+0x39eec>
   4c9d0:	b	4c9d4 <__assert_fail@plt+0x39e1c>
   4c9d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c9d8:	ldr	r1, [fp, #8]
   4c9dc:	asr	r3, r1, #31
   4c9e0:	mvn	r2, #0
   4c9e4:	mvn	ip, #-2147483648	; 0x80000000
   4c9e8:	str	r0, [sp, #56]	; 0x38
   4c9ec:	mov	r0, r2
   4c9f0:	str	r1, [sp, #52]	; 0x34
   4c9f4:	mov	r1, ip
   4c9f8:	ldr	r2, [sp, #52]	; 0x34
   4c9fc:	bl	75338 <__assert_fail@plt+0x62780>
   4ca00:	ldr	r2, [sp, #56]	; 0x38
   4ca04:	subs	r0, r2, r0
   4ca08:	rscs	r1, r1, r2, asr #31
   4ca0c:	blt	4cbf0 <__assert_fail@plt+0x3a038>
   4ca10:	b	4cc04 <__assert_fail@plt+0x3a04c>
   4ca14:	b	4ca18 <__assert_fail@plt+0x39e60>
   4ca18:	ldr	r0, [pc, #1116]	; 4ce7c <__assert_fail@plt+0x3a2c4>
   4ca1c:	ldr	r1, [fp, #8]
   4ca20:	cmp	r1, r0
   4ca24:	blt	4ca3c <__assert_fail@plt+0x39e84>
   4ca28:	b	4ca50 <__assert_fail@plt+0x39e98>
   4ca2c:	ldr	r0, [fp, #8]
   4ca30:	movw	r1, #0
   4ca34:	cmp	r1, r0
   4ca38:	bge	4ca50 <__assert_fail@plt+0x39e98>
   4ca3c:	mov	r0, #0
   4ca40:	mvn	r1, #0
   4ca44:	str	r1, [sp, #48]	; 0x30
   4ca48:	str	r0, [sp, #44]	; 0x2c
   4ca4c:	b	4ca84 <__assert_fail@plt+0x39ecc>
   4ca50:	ldr	r0, [fp, #8]
   4ca54:	rsb	r0, r0, #0
   4ca58:	asr	r3, r0, #31
   4ca5c:	mvn	r1, #0
   4ca60:	mvn	r2, #-2147483648	; 0x80000000
   4ca64:	str	r0, [sp, #40]	; 0x28
   4ca68:	mov	r0, r1
   4ca6c:	mov	r1, r2
   4ca70:	ldr	r2, [sp, #40]	; 0x28
   4ca74:	bl	75338 <__assert_fail@plt+0x62780>
   4ca78:	str	r0, [sp, #48]	; 0x30
   4ca7c:	str	r1, [sp, #44]	; 0x2c
   4ca80:	b	4ca84 <__assert_fail@plt+0x39ecc>
   4ca84:	ldr	r0, [sp, #44]	; 0x2c
   4ca88:	ldr	r1, [sp, #48]	; 0x30
   4ca8c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4ca90:	mvn	r2, r2
   4ca94:	subs	r1, r2, r1
   4ca98:	rscs	r0, r0, r2, asr #31
   4ca9c:	bge	4cbf0 <__assert_fail@plt+0x3a038>
   4caa0:	b	4cc04 <__assert_fail@plt+0x3a04c>
   4caa4:	ldr	r0, [fp, #8]
   4caa8:	cmn	r0, #1
   4caac:	bne	4caf0 <__assert_fail@plt+0x39f38>
   4cab0:	b	4cab4 <__assert_fail@plt+0x39efc>
   4cab4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4cab8:	mov	r1, #-2147483648	; 0x80000000
   4cabc:	add	r1, r1, r0, asr #31
   4cac0:	rsbs	r0, r0, #0
   4cac4:	rscs	r1, r1, #0
   4cac8:	blt	4cbf0 <__assert_fail@plt+0x3a038>
   4cacc:	b	4cc04 <__assert_fail@plt+0x3a04c>
   4cad0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4cad4:	movw	r1, #0
   4cad8:	cmp	r1, r0
   4cadc:	bge	4cc04 <__assert_fail@plt+0x3a04c>
   4cae0:	mov	r0, #0
   4cae4:	cmp	r0, #0
   4cae8:	bne	4cbf0 <__assert_fail@plt+0x3a038>
   4caec:	b	4cc04 <__assert_fail@plt+0x3a04c>
   4caf0:	ldr	r0, [fp, #8]
   4caf4:	asr	r3, r0, #31
   4caf8:	mov	r1, #0
   4cafc:	mov	r2, #-2147483648	; 0x80000000
   4cb00:	str	r0, [sp, #36]	; 0x24
   4cb04:	mov	r0, r1
   4cb08:	mov	r1, r2
   4cb0c:	ldr	r2, [sp, #36]	; 0x24
   4cb10:	bl	75338 <__assert_fail@plt+0x62780>
   4cb14:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4cb18:	subs	r0, r0, r2
   4cb1c:	sbcs	r1, r1, r2, asr #31
   4cb20:	blt	4cbf0 <__assert_fail@plt+0x3a038>
   4cb24:	b	4cc04 <__assert_fail@plt+0x3a04c>
   4cb28:	ldr	r0, [fp, #8]
   4cb2c:	cmp	r0, #0
   4cb30:	bne	4cb38 <__assert_fail@plt+0x39f80>
   4cb34:	b	4cc04 <__assert_fail@plt+0x3a04c>
   4cb38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4cb3c:	cmp	r0, #0
   4cb40:	bge	4cbb8 <__assert_fail@plt+0x3a000>
   4cb44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4cb48:	cmn	r0, #1
   4cb4c:	bne	4cb80 <__assert_fail@plt+0x39fc8>
   4cb50:	b	4cb54 <__assert_fail@plt+0x39f9c>
   4cb54:	ldr	r0, [fp, #8]
   4cb58:	mov	r1, #-2147483648	; 0x80000000
   4cb5c:	add	r1, r1, r0, asr #31
   4cb60:	rsbs	r0, r0, #0
   4cb64:	rscs	r1, r1, #0
   4cb68:	blt	4cbf0 <__assert_fail@plt+0x3a038>
   4cb6c:	b	4cc04 <__assert_fail@plt+0x3a04c>
   4cb70:	mov	r0, #0
   4cb74:	cmp	r0, #0
   4cb78:	bne	4cbf0 <__assert_fail@plt+0x3a038>
   4cb7c:	b	4cc04 <__assert_fail@plt+0x3a04c>
   4cb80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4cb84:	asr	r3, r0, #31
   4cb88:	mov	r1, #0
   4cb8c:	mov	r2, #-2147483648	; 0x80000000
   4cb90:	str	r0, [sp, #32]
   4cb94:	mov	r0, r1
   4cb98:	mov	r1, r2
   4cb9c:	ldr	r2, [sp, #32]
   4cba0:	bl	75338 <__assert_fail@plt+0x62780>
   4cba4:	ldr	r2, [fp, #8]
   4cba8:	subs	r0, r0, r2
   4cbac:	sbcs	r1, r1, r2, asr #31
   4cbb0:	blt	4cbf0 <__assert_fail@plt+0x3a038>
   4cbb4:	b	4cc04 <__assert_fail@plt+0x3a04c>
   4cbb8:	ldr	r0, [fp, #8]
   4cbbc:	asr	r3, r0, #31
   4cbc0:	mvn	r1, #0
   4cbc4:	mvn	r2, #-2147483648	; 0x80000000
   4cbc8:	str	r0, [sp, #28]
   4cbcc:	mov	r0, r1
   4cbd0:	mov	r1, r2
   4cbd4:	ldr	r2, [sp, #28]
   4cbd8:	bl	75338 <__assert_fail@plt+0x62780>
   4cbdc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4cbe0:	subs	r0, r0, r2
   4cbe4:	sbcs	r1, r1, r2, asr #31
   4cbe8:	bge	4cc04 <__assert_fail@plt+0x3a04c>
   4cbec:	b	4cbf0 <__assert_fail@plt+0x3a038>
   4cbf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4cbf4:	ldr	r1, [fp, #8]
   4cbf8:	mul	r0, r0, r1
   4cbfc:	str	r0, [fp, #-28]	; 0xffffffe4
   4cc00:	b	4ce4c <__assert_fail@plt+0x3a294>
   4cc04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4cc08:	ldr	r1, [fp, #8]
   4cc0c:	mul	r0, r0, r1
   4cc10:	str	r0, [fp, #-28]	; 0xffffffe4
   4cc14:	b	4ce50 <__assert_fail@plt+0x3a298>
   4cc18:	ldr	r0, [fp, #8]
   4cc1c:	cmp	r0, #0
   4cc20:	bge	4cd70 <__assert_fail@plt+0x3a1b8>
   4cc24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4cc28:	cmp	r0, #0
   4cc2c:	bge	4ccf8 <__assert_fail@plt+0x3a140>
   4cc30:	b	4cc70 <__assert_fail@plt+0x3a0b8>
   4cc34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4cc38:	ldr	r1, [fp, #8]
   4cc3c:	asr	r3, r1, #31
   4cc40:	mvn	r2, #0
   4cc44:	str	r0, [sp, #24]
   4cc48:	mov	r0, r2
   4cc4c:	str	r1, [sp, #20]
   4cc50:	mov	r1, r2
   4cc54:	ldr	r2, [sp, #20]
   4cc58:	bl	7540c <__assert_fail@plt+0x62854>
   4cc5c:	ldr	r2, [sp, #24]
   4cc60:	subs	r0, r2, r0
   4cc64:	rscs	r1, r1, r2, asr #31
   4cc68:	bcc	4ce24 <__assert_fail@plt+0x3a26c>
   4cc6c:	b	4ce38 <__assert_fail@plt+0x3a280>
   4cc70:	b	4cc74 <__assert_fail@plt+0x3a0bc>
   4cc74:	ldr	r0, [pc, #512]	; 4ce7c <__assert_fail@plt+0x3a2c4>
   4cc78:	ldr	r1, [fp, #8]
   4cc7c:	cmp	r1, r0
   4cc80:	blt	4cc98 <__assert_fail@plt+0x3a0e0>
   4cc84:	b	4ccac <__assert_fail@plt+0x3a0f4>
   4cc88:	ldr	r0, [fp, #8]
   4cc8c:	movw	r1, #0
   4cc90:	cmp	r1, r0
   4cc94:	bge	4ccac <__assert_fail@plt+0x3a0f4>
   4cc98:	mov	r0, #1
   4cc9c:	mvn	r1, #0
   4cca0:	str	r1, [sp, #16]
   4cca4:	str	r0, [sp, #12]
   4cca8:	b	4ccd8 <__assert_fail@plt+0x3a120>
   4ccac:	ldr	r0, [fp, #8]
   4ccb0:	rsb	r0, r0, #0
   4ccb4:	asr	r3, r0, #31
   4ccb8:	mvn	r1, #0
   4ccbc:	str	r0, [sp, #8]
   4ccc0:	mov	r0, r1
   4ccc4:	ldr	r2, [sp, #8]
   4ccc8:	bl	7540c <__assert_fail@plt+0x62854>
   4cccc:	str	r0, [sp, #16]
   4ccd0:	str	r1, [sp, #12]
   4ccd4:	b	4ccd8 <__assert_fail@plt+0x3a120>
   4ccd8:	ldr	r0, [sp, #12]
   4ccdc:	ldr	r1, [sp, #16]
   4cce0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4cce4:	mvn	r2, r2
   4cce8:	subs	r1, r2, r1
   4ccec:	rscs	r0, r0, r2, asr #31
   4ccf0:	bcs	4ce24 <__assert_fail@plt+0x3a26c>
   4ccf4:	b	4ce38 <__assert_fail@plt+0x3a280>
   4ccf8:	b	4ccfc <__assert_fail@plt+0x3a144>
   4ccfc:	b	4cd54 <__assert_fail@plt+0x3a19c>
   4cd00:	b	4cd54 <__assert_fail@plt+0x3a19c>
   4cd04:	ldr	r0, [fp, #8]
   4cd08:	cmn	r0, #1
   4cd0c:	bne	4cd54 <__assert_fail@plt+0x3a19c>
   4cd10:	b	4cd14 <__assert_fail@plt+0x3a15c>
   4cd14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4cd18:	add	r0, r0, #0
   4cd1c:	movw	r1, #0
   4cd20:	cmp	r1, r0
   4cd24:	blt	4ce24 <__assert_fail@plt+0x3a26c>
   4cd28:	b	4ce38 <__assert_fail@plt+0x3a280>
   4cd2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4cd30:	movw	r1, #0
   4cd34:	cmp	r1, r0
   4cd38:	bge	4ce38 <__assert_fail@plt+0x3a280>
   4cd3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4cd40:	sub	r0, r0, #1
   4cd44:	mvn	r1, #0
   4cd48:	cmp	r1, r0
   4cd4c:	blt	4ce24 <__assert_fail@plt+0x3a26c>
   4cd50:	b	4ce38 <__assert_fail@plt+0x3a280>
   4cd54:	ldr	r0, [fp, #8]
   4cd58:	movw	r1, #0
   4cd5c:	sdiv	r0, r1, r0
   4cd60:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4cd64:	cmp	r0, r1
   4cd68:	blt	4ce24 <__assert_fail@plt+0x3a26c>
   4cd6c:	b	4ce38 <__assert_fail@plt+0x3a280>
   4cd70:	ldr	r0, [fp, #8]
   4cd74:	cmp	r0, #0
   4cd78:	bne	4cd80 <__assert_fail@plt+0x3a1c8>
   4cd7c:	b	4ce38 <__assert_fail@plt+0x3a280>
   4cd80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4cd84:	cmp	r0, #0
   4cd88:	bge	4cdf4 <__assert_fail@plt+0x3a23c>
   4cd8c:	b	4cd90 <__assert_fail@plt+0x3a1d8>
   4cd90:	b	4cdd8 <__assert_fail@plt+0x3a220>
   4cd94:	b	4cdd8 <__assert_fail@plt+0x3a220>
   4cd98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4cd9c:	cmn	r0, #1
   4cda0:	bne	4cdd8 <__assert_fail@plt+0x3a220>
   4cda4:	b	4cda8 <__assert_fail@plt+0x3a1f0>
   4cda8:	ldr	r0, [fp, #8]
   4cdac:	add	r0, r0, #0
   4cdb0:	movw	r1, #0
   4cdb4:	cmp	r1, r0
   4cdb8:	blt	4ce24 <__assert_fail@plt+0x3a26c>
   4cdbc:	b	4ce38 <__assert_fail@plt+0x3a280>
   4cdc0:	ldr	r0, [fp, #8]
   4cdc4:	sub	r0, r0, #1
   4cdc8:	mvn	r1, #0
   4cdcc:	cmp	r1, r0
   4cdd0:	blt	4ce24 <__assert_fail@plt+0x3a26c>
   4cdd4:	b	4ce38 <__assert_fail@plt+0x3a280>
   4cdd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4cddc:	movw	r1, #0
   4cde0:	sdiv	r0, r1, r0
   4cde4:	ldr	r1, [fp, #8]
   4cde8:	cmp	r0, r1
   4cdec:	blt	4ce24 <__assert_fail@plt+0x3a26c>
   4cdf0:	b	4ce38 <__assert_fail@plt+0x3a280>
   4cdf4:	ldr	r0, [fp, #8]
   4cdf8:	asr	r3, r0, #31
   4cdfc:	mvn	r1, #0
   4ce00:	str	r0, [sp, #4]
   4ce04:	mov	r0, r1
   4ce08:	ldr	r2, [sp, #4]
   4ce0c:	bl	7540c <__assert_fail@plt+0x62854>
   4ce10:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4ce14:	subs	r0, r0, r2
   4ce18:	sbcs	r1, r1, r2, asr #31
   4ce1c:	bcs	4ce38 <__assert_fail@plt+0x3a280>
   4ce20:	b	4ce24 <__assert_fail@plt+0x3a26c>
   4ce24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4ce28:	ldr	r1, [fp, #8]
   4ce2c:	mul	r0, r0, r1
   4ce30:	str	r0, [fp, #-28]	; 0xffffffe4
   4ce34:	b	4ce4c <__assert_fail@plt+0x3a294>
   4ce38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4ce3c:	ldr	r1, [fp, #8]
   4ce40:	mul	r0, r0, r1
   4ce44:	str	r0, [fp, #-28]	; 0xffffffe4
   4ce48:	b	4ce50 <__assert_fail@plt+0x3a298>
   4ce4c:	bl	4d028 <__assert_fail@plt+0x3a470>
   4ce50:	ldr	r0, [fp, #-4]
   4ce54:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4ce58:	bl	4a388 <__assert_fail@plt+0x377d0>
   4ce5c:	str	r0, [fp, #-4]
   4ce60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4ce64:	ldr	r1, [fp, #-8]
   4ce68:	str	r0, [r1]
   4ce6c:	ldr	r0, [fp, #-4]
   4ce70:	mov	sp, fp
   4ce74:	pop	{fp, pc}
   4ce78:	svcvc	0x00ffffff
   4ce7c:	andhi	r0, r0, r1
   4ce80:	andhi	r0, r0, r0
   4ce84:			; <UNDEFINED> instruction: 0xffff8000
   4ce88:	push	{fp, lr}
   4ce8c:	mov	fp, sp
   4ce90:	sub	sp, sp, #8
   4ce94:	str	r0, [sp, #4]
   4ce98:	ldr	r0, [sp, #4]
   4ce9c:	movw	r1, #1
   4cea0:	bl	4ceac <__assert_fail@plt+0x3a2f4>
   4cea4:	mov	sp, fp
   4cea8:	pop	{fp, pc}
   4ceac:	push	{fp, lr}
   4ceb0:	mov	fp, sp
   4ceb4:	sub	sp, sp, #8
   4ceb8:	str	r0, [sp, #4]
   4cebc:	str	r1, [sp]
   4cec0:	ldr	r0, [sp, #4]
   4cec4:	ldr	r1, [sp]
   4cec8:	bl	4e0e0 <__assert_fail@plt+0x3b528>
   4cecc:	bl	4a314 <__assert_fail@plt+0x3775c>
   4ced0:	mov	sp, fp
   4ced4:	pop	{fp, pc}
   4ced8:	push	{fp, lr}
   4cedc:	mov	fp, sp
   4cee0:	sub	sp, sp, #8
   4cee4:	str	r0, [sp, #4]
   4cee8:	ldr	r0, [sp, #4]
   4ceec:	movw	r1, #1
   4cef0:	bl	4cefc <__assert_fail@plt+0x3a344>
   4cef4:	mov	sp, fp
   4cef8:	pop	{fp, pc}
   4cefc:	push	{fp, lr}
   4cf00:	mov	fp, sp
   4cf04:	sub	sp, sp, #8
   4cf08:	str	r0, [sp, #4]
   4cf0c:	str	r1, [sp]
   4cf10:	ldr	r0, [sp, #4]
   4cf14:	ldr	r1, [sp]
   4cf18:	bl	70e48 <__assert_fail@plt+0x5e290>
   4cf1c:	bl	4a314 <__assert_fail@plt+0x3775c>
   4cf20:	mov	sp, fp
   4cf24:	pop	{fp, pc}
   4cf28:	push	{fp, lr}
   4cf2c:	mov	fp, sp
   4cf30:	sub	sp, sp, #16
   4cf34:	str	r0, [fp, #-4]
   4cf38:	str	r1, [sp, #8]
   4cf3c:	ldr	r0, [sp, #8]
   4cf40:	bl	4a2f0 <__assert_fail@plt+0x37738>
   4cf44:	ldr	r1, [fp, #-4]
   4cf48:	ldr	r2, [sp, #8]
   4cf4c:	str	r0, [sp, #4]
   4cf50:	bl	125c4 <memcpy@plt>
   4cf54:	ldr	r0, [sp, #4]
   4cf58:	mov	sp, fp
   4cf5c:	pop	{fp, pc}
   4cf60:	push	{fp, lr}
   4cf64:	mov	fp, sp
   4cf68:	sub	sp, sp, #16
   4cf6c:	str	r0, [fp, #-4]
   4cf70:	str	r1, [sp, #8]
   4cf74:	ldr	r0, [sp, #8]
   4cf78:	bl	4a344 <__assert_fail@plt+0x3778c>
   4cf7c:	ldr	r1, [fp, #-4]
   4cf80:	ldr	r2, [sp, #8]
   4cf84:	str	r0, [sp, #4]
   4cf88:	bl	125c4 <memcpy@plt>
   4cf8c:	ldr	r0, [sp, #4]
   4cf90:	mov	sp, fp
   4cf94:	pop	{fp, pc}
   4cf98:	push	{fp, lr}
   4cf9c:	mov	fp, sp
   4cfa0:	sub	sp, sp, #16
   4cfa4:	str	r0, [fp, #-4]
   4cfa8:	str	r1, [sp, #8]
   4cfac:	ldr	r0, [sp, #8]
   4cfb0:	add	r0, r0, #1
   4cfb4:	bl	4a344 <__assert_fail@plt+0x3778c>
   4cfb8:	str	r0, [sp, #4]
   4cfbc:	ldr	r0, [sp, #4]
   4cfc0:	ldr	r1, [sp, #8]
   4cfc4:	add	r0, r0, r1
   4cfc8:	movw	r1, #0
   4cfcc:	strb	r1, [r0]
   4cfd0:	ldr	r0, [sp, #4]
   4cfd4:	ldr	r1, [fp, #-4]
   4cfd8:	ldr	r2, [sp, #8]
   4cfdc:	str	r0, [sp]
   4cfe0:	bl	125c4 <memcpy@plt>
   4cfe4:	ldr	r0, [sp]
   4cfe8:	mov	sp, fp
   4cfec:	pop	{fp, pc}
   4cff0:	push	{fp, lr}
   4cff4:	mov	fp, sp
   4cff8:	sub	sp, sp, #8
   4cffc:	str	r0, [sp, #4]
   4d000:	ldr	r0, [sp, #4]
   4d004:	ldr	r1, [sp, #4]
   4d008:	str	r0, [sp]
   4d00c:	mov	r0, r1
   4d010:	bl	12888 <strlen@plt>
   4d014:	add	r1, r0, #1
   4d018:	ldr	r0, [sp]
   4d01c:	bl	4cf28 <__assert_fail@plt+0x3a370>
   4d020:	mov	sp, fp
   4d024:	pop	{fp, pc}
   4d028:	push	{fp, lr}
   4d02c:	mov	fp, sp
   4d030:	sub	sp, sp, #8
   4d034:	movw	r0, #54988	; 0xd6cc
   4d038:	movt	r0, #8
   4d03c:	ldr	r0, [r0]
   4d040:	movw	r1, #44456	; 0xada8
   4d044:	movt	r1, #7
   4d048:	str	r0, [sp, #4]
   4d04c:	mov	r0, r1
   4d050:	bl	12864 <gettext@plt>
   4d054:	ldr	r1, [sp, #4]
   4d058:	str	r0, [sp]
   4d05c:	mov	r0, r1
   4d060:	movw	r1, #0
   4d064:	movw	r2, #50143	; 0xc3df
   4d068:	movt	r2, #7
   4d06c:	ldr	r3, [sp]
   4d070:	bl	12780 <error@plt>
   4d074:	bl	12b64 <abort@plt>
   4d078:	push	{fp, lr}
   4d07c:	mov	fp, sp
   4d080:	sub	sp, sp, #40	; 0x28
   4d084:	str	r0, [fp, #-4]
   4d088:	str	r1, [fp, #-8]
   4d08c:	str	r2, [fp, #-12]
   4d090:	str	r3, [fp, #-16]
   4d094:	movw	r0, #1
   4d098:	strb	r0, [sp, #11]
   4d09c:	bl	128d0 <__errno_location@plt>
   4d0a0:	movw	r1, #0
   4d0a4:	str	r1, [r0]
   4d0a8:	ldr	r0, [fp, #-16]
   4d0ac:	ldr	r1, [fp, #-4]
   4d0b0:	str	r0, [sp, #4]
   4d0b4:	mov	r0, r1
   4d0b8:	add	r1, sp, #12
   4d0bc:	ldr	r2, [sp, #4]
   4d0c0:	blx	r2
   4d0c4:	vstr	d0, [sp, #16]
   4d0c8:	ldr	r0, [sp, #12]
   4d0cc:	ldr	r1, [fp, #-4]
   4d0d0:	cmp	r0, r1
   4d0d4:	beq	4d0f8 <__assert_fail@plt+0x3a540>
   4d0d8:	ldr	r0, [fp, #-8]
   4d0dc:	movw	r1, #0
   4d0e0:	cmp	r0, r1
   4d0e4:	bne	4d104 <__assert_fail@plt+0x3a54c>
   4d0e8:	ldr	r0, [sp, #12]
   4d0ec:	ldrb	r0, [r0]
   4d0f0:	cmp	r0, #0
   4d0f4:	beq	4d104 <__assert_fail@plt+0x3a54c>
   4d0f8:	movw	r0, #0
   4d0fc:	strb	r0, [sp, #11]
   4d100:	b	4d130 <__assert_fail@plt+0x3a578>
   4d104:	vldr	d16, [sp, #16]
   4d108:	vcmp.f64	d16, #0.0
   4d10c:	vmrs	APSR_nzcv, fpscr
   4d110:	beq	4d12c <__assert_fail@plt+0x3a574>
   4d114:	bl	128d0 <__errno_location@plt>
   4d118:	ldr	r0, [r0]
   4d11c:	cmp	r0, #34	; 0x22
   4d120:	bne	4d12c <__assert_fail@plt+0x3a574>
   4d124:	movw	r0, #0
   4d128:	strb	r0, [sp, #11]
   4d12c:	b	4d130 <__assert_fail@plt+0x3a578>
   4d130:	ldr	r0, [fp, #-8]
   4d134:	movw	r1, #0
   4d138:	cmp	r0, r1
   4d13c:	beq	4d14c <__assert_fail@plt+0x3a594>
   4d140:	ldr	r0, [sp, #12]
   4d144:	ldr	r1, [fp, #-8]
   4d148:	str	r0, [r1]
   4d14c:	vldr	d16, [sp, #16]
   4d150:	ldr	r0, [fp, #-12]
   4d154:	vstr	d16, [r0]
   4d158:	ldrb	r0, [sp, #11]
   4d15c:	and	r0, r0, #1
   4d160:	mov	sp, fp
   4d164:	pop	{fp, pc}
   4d168:	push	{fp, lr}
   4d16c:	mov	fp, sp
   4d170:	sub	sp, sp, #72	; 0x48
   4d174:	ldr	ip, [fp, #8]
   4d178:	str	r0, [fp, #-8]
   4d17c:	str	r1, [fp, #-12]
   4d180:	str	r2, [fp, #-16]
   4d184:	str	r3, [fp, #-20]	; 0xffffffec
   4d188:	movw	r0, #0
   4d18c:	str	r0, [sp, #36]	; 0x24
   4d190:	ldr	r1, [fp, #-16]
   4d194:	cmp	r0, r1
   4d198:	bgt	4d1ac <__assert_fail@plt+0x3a5f4>
   4d19c:	ldr	r0, [fp, #-16]
   4d1a0:	cmp	r0, #36	; 0x24
   4d1a4:	bgt	4d1ac <__assert_fail@plt+0x3a5f4>
   4d1a8:	b	4d1cc <__assert_fail@plt+0x3a614>
   4d1ac:	movw	r0, #48886	; 0xbef6
   4d1b0:	movt	r0, #7
   4d1b4:	movw	r1, #48924	; 0xbf1c
   4d1b8:	movt	r1, #7
   4d1bc:	movw	r2, #84	; 0x54
   4d1c0:	movw	r3, #48936	; 0xbf28
   4d1c4:	movt	r3, #7
   4d1c8:	bl	12bb8 <__assert_fail@plt>
   4d1cc:	ldr	r0, [fp, #-12]
   4d1d0:	movw	r1, #0
   4d1d4:	cmp	r0, r1
   4d1d8:	beq	4d1e8 <__assert_fail@plt+0x3a630>
   4d1dc:	ldr	r0, [fp, #-12]
   4d1e0:	str	r0, [sp, #12]
   4d1e4:	b	4d1f4 <__assert_fail@plt+0x3a63c>
   4d1e8:	sub	r0, fp, #24
   4d1ec:	str	r0, [sp, #12]
   4d1f0:	b	4d1f4 <__assert_fail@plt+0x3a63c>
   4d1f4:	ldr	r0, [sp, #12]
   4d1f8:	str	r0, [fp, #-28]	; 0xffffffe4
   4d1fc:	bl	128d0 <__errno_location@plt>
   4d200:	movw	r1, #0
   4d204:	str	r1, [r0]
   4d208:	ldr	r0, [fp, #-8]
   4d20c:	str	r0, [sp, #32]
   4d210:	ldr	r0, [sp, #32]
   4d214:	ldrb	r0, [r0]
   4d218:	strb	r0, [sp, #31]
   4d21c:	bl	12834 <__ctype_b_loc@plt>
   4d220:	ldr	r0, [r0]
   4d224:	ldrb	r1, [sp, #31]
   4d228:	mov	r2, r1
   4d22c:	add	r0, r0, r1, lsl #1
   4d230:	ldrh	r0, [r0]
   4d234:	and	r0, r0, #8192	; 0x2000
   4d238:	cmp	r0, #0
   4d23c:	beq	4d258 <__assert_fail@plt+0x3a6a0>
   4d240:	ldr	r0, [sp, #32]
   4d244:	add	r1, r0, #1
   4d248:	str	r1, [sp, #32]
   4d24c:	ldrb	r0, [r0, #1]
   4d250:	strb	r0, [sp, #31]
   4d254:	b	4d21c <__assert_fail@plt+0x3a664>
   4d258:	ldrb	r0, [sp, #31]
   4d25c:	cmp	r0, #45	; 0x2d
   4d260:	bne	4d270 <__assert_fail@plt+0x3a6b8>
   4d264:	movw	r0, #4
   4d268:	str	r0, [fp, #-4]
   4d26c:	b	4d7c0 <__assert_fail@plt+0x3ac08>
   4d270:	ldr	r0, [fp, #-8]
   4d274:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4d278:	ldr	r2, [fp, #-16]
   4d27c:	bl	1287c <strtoul@plt>
   4d280:	str	r0, [fp, #-32]	; 0xffffffe0
   4d284:	ldr	r0, [fp, #-28]	; 0xffffffe4
   4d288:	ldr	r0, [r0]
   4d28c:	ldr	r1, [fp, #-8]
   4d290:	cmp	r0, r1
   4d294:	bne	4d2f8 <__assert_fail@plt+0x3a740>
   4d298:	ldr	r0, [fp, #8]
   4d29c:	movw	r1, #0
   4d2a0:	cmp	r0, r1
   4d2a4:	beq	4d2e8 <__assert_fail@plt+0x3a730>
   4d2a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   4d2ac:	ldr	r0, [r0]
   4d2b0:	ldrb	r0, [r0]
   4d2b4:	cmp	r0, #0
   4d2b8:	beq	4d2e8 <__assert_fail@plt+0x3a730>
   4d2bc:	ldr	r0, [fp, #8]
   4d2c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4d2c4:	ldr	r1, [r1]
   4d2c8:	ldrb	r1, [r1]
   4d2cc:	bl	12894 <strchr@plt>
   4d2d0:	movw	r1, #0
   4d2d4:	cmp	r0, r1
   4d2d8:	beq	4d2e8 <__assert_fail@plt+0x3a730>
   4d2dc:	movw	r0, #1
   4d2e0:	str	r0, [fp, #-32]	; 0xffffffe0
   4d2e4:	b	4d2f4 <__assert_fail@plt+0x3a73c>
   4d2e8:	movw	r0, #4
   4d2ec:	str	r0, [fp, #-4]
   4d2f0:	b	4d7c0 <__assert_fail@plt+0x3ac08>
   4d2f4:	b	4d330 <__assert_fail@plt+0x3a778>
   4d2f8:	bl	128d0 <__errno_location@plt>
   4d2fc:	ldr	r0, [r0]
   4d300:	cmp	r0, #0
   4d304:	beq	4d32c <__assert_fail@plt+0x3a774>
   4d308:	bl	128d0 <__errno_location@plt>
   4d30c:	ldr	r0, [r0]
   4d310:	cmp	r0, #34	; 0x22
   4d314:	beq	4d324 <__assert_fail@plt+0x3a76c>
   4d318:	movw	r0, #4
   4d31c:	str	r0, [fp, #-4]
   4d320:	b	4d7c0 <__assert_fail@plt+0x3ac08>
   4d324:	movw	r0, #1
   4d328:	str	r0, [sp, #36]	; 0x24
   4d32c:	b	4d330 <__assert_fail@plt+0x3a778>
   4d330:	ldr	r0, [fp, #8]
   4d334:	movw	r1, #0
   4d338:	cmp	r0, r1
   4d33c:	bne	4d358 <__assert_fail@plt+0x3a7a0>
   4d340:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4d344:	ldr	r1, [fp, #-20]	; 0xffffffec
   4d348:	str	r0, [r1]
   4d34c:	ldr	r0, [sp, #36]	; 0x24
   4d350:	str	r0, [fp, #-4]
   4d354:	b	4d7c0 <__assert_fail@plt+0x3ac08>
   4d358:	ldr	r0, [fp, #-28]	; 0xffffffe4
   4d35c:	ldr	r0, [r0]
   4d360:	ldrb	r0, [r0]
   4d364:	cmp	r0, #0
   4d368:	beq	4d7ac <__assert_fail@plt+0x3abf4>
   4d36c:	movw	r0, #1024	; 0x400
   4d370:	str	r0, [sp, #24]
   4d374:	movw	r0, #1
   4d378:	str	r0, [sp, #20]
   4d37c:	ldr	r0, [fp, #8]
   4d380:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4d384:	ldr	r1, [r1]
   4d388:	ldrb	r1, [r1]
   4d38c:	bl	12894 <strchr@plt>
   4d390:	movw	r1, #0
   4d394:	cmp	r0, r1
   4d398:	bne	4d3b8 <__assert_fail@plt+0x3a800>
   4d39c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4d3a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   4d3a4:	str	r0, [r1]
   4d3a8:	ldr	r0, [sp, #36]	; 0x24
   4d3ac:	orr	r0, r0, #2
   4d3b0:	str	r0, [fp, #-4]
   4d3b4:	b	4d7c0 <__assert_fail@plt+0x3ac08>
   4d3b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   4d3bc:	ldr	r0, [r0]
   4d3c0:	ldrb	r0, [r0]
   4d3c4:	sub	r0, r0, #69	; 0x45
   4d3c8:	cmp	r0, #47	; 0x2f
   4d3cc:	str	r0, [sp, #8]
   4d3d0:	bhi	4d53c <__assert_fail@plt+0x3a984>
   4d3d4:	add	r0, pc, #8
   4d3d8:	ldr	r1, [sp, #8]
   4d3dc:	ldr	r0, [r0, r1, lsl #2]
   4d3e0:	mov	pc, r0
   4d3e4:	andeq	sp, r4, r4, lsr #9
   4d3e8:	andeq	sp, r4, ip, lsr r5
   4d3ec:	andeq	sp, r4, r4, lsr #9
   4d3f0:	andeq	sp, r4, ip, lsr r5
   4d3f4:	andeq	sp, r4, ip, lsr r5
   4d3f8:	andeq	sp, r4, ip, lsr r5
   4d3fc:	andeq	sp, r4, r4, lsr #9
   4d400:	andeq	sp, r4, ip, lsr r5
   4d404:	andeq	sp, r4, r4, lsr #9
   4d408:	andeq	sp, r4, ip, lsr r5
   4d40c:	andeq	sp, r4, ip, lsr r5
   4d410:	andeq	sp, r4, r4, lsr #9
   4d414:	andeq	sp, r4, ip, lsr r5
   4d418:	andeq	sp, r4, ip, lsr r5
   4d41c:	andeq	sp, r4, ip, lsr r5
   4d420:	andeq	sp, r4, r4, lsr #9
   4d424:	andeq	sp, r4, ip, lsr r5
   4d428:	andeq	sp, r4, ip, lsr r5
   4d42c:	andeq	sp, r4, ip, lsr r5
   4d430:	andeq	sp, r4, ip, lsr r5
   4d434:	andeq	sp, r4, r4, lsr #9
   4d438:	andeq	sp, r4, r4, lsr #9
   4d43c:	andeq	sp, r4, ip, lsr r5
   4d440:	andeq	sp, r4, ip, lsr r5
   4d444:	andeq	sp, r4, ip, lsr r5
   4d448:	andeq	sp, r4, ip, lsr r5
   4d44c:	andeq	sp, r4, ip, lsr r5
   4d450:	andeq	sp, r4, ip, lsr r5
   4d454:	andeq	sp, r4, ip, lsr r5
   4d458:	andeq	sp, r4, ip, lsr r5
   4d45c:	andeq	sp, r4, ip, lsr r5
   4d460:	andeq	sp, r4, ip, lsr r5
   4d464:	andeq	sp, r4, ip, lsr r5
   4d468:	andeq	sp, r4, ip, lsr r5
   4d46c:	andeq	sp, r4, r4, lsr #9
   4d470:	andeq	sp, r4, ip, lsr r5
   4d474:	andeq	sp, r4, ip, lsr r5
   4d478:	andeq	sp, r4, ip, lsr r5
   4d47c:	andeq	sp, r4, r4, lsr #9
   4d480:	andeq	sp, r4, ip, lsr r5
   4d484:	andeq	sp, r4, r4, lsr #9
   4d488:	andeq	sp, r4, ip, lsr r5
   4d48c:	andeq	sp, r4, ip, lsr r5
   4d490:	andeq	sp, r4, ip, lsr r5
   4d494:	andeq	sp, r4, ip, lsr r5
   4d498:	andeq	sp, r4, ip, lsr r5
   4d49c:	andeq	sp, r4, ip, lsr r5
   4d4a0:	andeq	sp, r4, r4, lsr #9
   4d4a4:	ldr	r0, [fp, #8]
   4d4a8:	movw	r1, #48	; 0x30
   4d4ac:	bl	12894 <strchr@plt>
   4d4b0:	movw	r1, #0
   4d4b4:	cmp	r0, r1
   4d4b8:	beq	4d538 <__assert_fail@plt+0x3a980>
   4d4bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   4d4c0:	ldr	r0, [r0]
   4d4c4:	ldrb	r0, [r0, #1]
   4d4c8:	mov	r1, r0
   4d4cc:	cmp	r0, #66	; 0x42
   4d4d0:	str	r1, [sp, #4]
   4d4d4:	beq	4d520 <__assert_fail@plt+0x3a968>
   4d4d8:	b	4d4dc <__assert_fail@plt+0x3a924>
   4d4dc:	ldr	r0, [sp, #4]
   4d4e0:	cmp	r0, #68	; 0x44
   4d4e4:	beq	4d520 <__assert_fail@plt+0x3a968>
   4d4e8:	b	4d4ec <__assert_fail@plt+0x3a934>
   4d4ec:	ldr	r0, [sp, #4]
   4d4f0:	cmp	r0, #105	; 0x69
   4d4f4:	bne	4d534 <__assert_fail@plt+0x3a97c>
   4d4f8:	b	4d4fc <__assert_fail@plt+0x3a944>
   4d4fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   4d500:	ldr	r0, [r0]
   4d504:	ldrb	r0, [r0, #2]
   4d508:	cmp	r0, #66	; 0x42
   4d50c:	bne	4d51c <__assert_fail@plt+0x3a964>
   4d510:	ldr	r0, [sp, #20]
   4d514:	add	r0, r0, #2
   4d518:	str	r0, [sp, #20]
   4d51c:	b	4d534 <__assert_fail@plt+0x3a97c>
   4d520:	movw	r0, #1000	; 0x3e8
   4d524:	str	r0, [sp, #24]
   4d528:	ldr	r0, [sp, #20]
   4d52c:	add	r0, r0, #1
   4d530:	str	r0, [sp, #20]
   4d534:	b	4d538 <__assert_fail@plt+0x3a980>
   4d538:	b	4d53c <__assert_fail@plt+0x3a984>
   4d53c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   4d540:	ldr	r0, [r0]
   4d544:	ldrb	r0, [r0]
   4d548:	sub	r0, r0, #66	; 0x42
   4d54c:	cmp	r0, #53	; 0x35
   4d550:	str	r0, [sp]
   4d554:	bhi	4d748 <__assert_fail@plt+0x3ab90>
   4d558:	add	r0, pc, #8
   4d55c:	ldr	r1, [sp]
   4d560:	ldr	r0, [r0, r1, lsl #2]
   4d564:	mov	pc, r0
   4d568:	andeq	sp, r4, r4, asr r6
   4d56c:	andeq	sp, r4, r8, asr #14
   4d570:	andeq	sp, r4, r8, asr #14
   4d574:	andeq	sp, r4, r4, ror r6
   4d578:	andeq	sp, r4, r8, asr #14
   4d57c:	andeq	sp, r4, ip, lsl #13
   4d580:	andeq	sp, r4, r8, asr #14
   4d584:	andeq	sp, r4, r8, asr #14
   4d588:	andeq	sp, r4, r8, asr #14
   4d58c:	andeq	sp, r4, r4, lsr #13
   4d590:	andeq	sp, r4, r8, asr #14
   4d594:			; <UNDEFINED> instruction: 0x0004d6bc
   4d598:	andeq	sp, r4, r8, asr #14
   4d59c:	andeq	sp, r4, r8, asr #14
   4d5a0:	ldrdeq	sp, [r4], -r4
   4d5a4:	andeq	sp, r4, r8, asr #14
   4d5a8:	andeq	sp, r4, r8, asr #14
   4d5ac:	andeq	sp, r4, r8, asr #14
   4d5b0:	andeq	sp, r4, ip, ror #13
   4d5b4:	andeq	sp, r4, r8, asr #14
   4d5b8:	andeq	sp, r4, r8, asr #14
   4d5bc:	andeq	sp, r4, r8, asr #14
   4d5c0:	andeq	sp, r4, r8, asr #14
   4d5c4:	andeq	sp, r4, r8, lsl r7
   4d5c8:	andeq	sp, r4, r0, lsr r7
   4d5cc:	andeq	sp, r4, r8, asr #14
   4d5d0:	andeq	sp, r4, r8, asr #14
   4d5d4:	andeq	sp, r4, r8, asr #14
   4d5d8:	andeq	sp, r4, r8, asr #14
   4d5dc:	andeq	sp, r4, r8, asr #14
   4d5e0:	andeq	sp, r4, r8, asr #14
   4d5e4:	andeq	sp, r4, r8, asr #14
   4d5e8:	andeq	sp, r4, r0, asr #12
   4d5ec:	andeq	sp, r4, r8, ror #12
   4d5f0:	andeq	sp, r4, r8, asr #14
   4d5f4:	andeq	sp, r4, r8, asr #14
   4d5f8:	andeq	sp, r4, r8, asr #14
   4d5fc:	andeq	sp, r4, ip, lsl #13
   4d600:	andeq	sp, r4, r8, asr #14
   4d604:	andeq	sp, r4, r8, asr #14
   4d608:	andeq	sp, r4, r8, asr #14
   4d60c:	andeq	sp, r4, r4, lsr #13
   4d610:	andeq	sp, r4, r8, asr #14
   4d614:			; <UNDEFINED> instruction: 0x0004d6bc
   4d618:	andeq	sp, r4, r8, asr #14
   4d61c:	andeq	sp, r4, r8, asr #14
   4d620:	andeq	sp, r4, r8, asr #14
   4d624:	andeq	sp, r4, r8, asr #14
   4d628:	andeq	sp, r4, r8, asr #14
   4d62c:	andeq	sp, r4, r8, asr #14
   4d630:	andeq	sp, r4, ip, ror #13
   4d634:	andeq	sp, r4, r8, asr #14
   4d638:	andeq	sp, r4, r8, asr #14
   4d63c:	andeq	sp, r4, r4, lsl #14
   4d640:	sub	r0, fp, #32
   4d644:	movw	r1, #512	; 0x200
   4d648:	bl	4d7cc <__assert_fail@plt+0x3ac14>
   4d64c:	str	r0, [sp, #16]
   4d650:	b	4d764 <__assert_fail@plt+0x3abac>
   4d654:	sub	r0, fp, #32
   4d658:	movw	r1, #1024	; 0x400
   4d65c:	bl	4d7cc <__assert_fail@plt+0x3ac14>
   4d660:	str	r0, [sp, #16]
   4d664:	b	4d764 <__assert_fail@plt+0x3abac>
   4d668:	movw	r0, #0
   4d66c:	str	r0, [sp, #16]
   4d670:	b	4d764 <__assert_fail@plt+0x3abac>
   4d674:	ldr	r1, [sp, #24]
   4d678:	sub	r0, fp, #32
   4d67c:	movw	r2, #6
   4d680:	bl	4d834 <__assert_fail@plt+0x3ac7c>
   4d684:	str	r0, [sp, #16]
   4d688:	b	4d764 <__assert_fail@plt+0x3abac>
   4d68c:	ldr	r1, [sp, #24]
   4d690:	sub	r0, fp, #32
   4d694:	movw	r2, #3
   4d698:	bl	4d834 <__assert_fail@plt+0x3ac7c>
   4d69c:	str	r0, [sp, #16]
   4d6a0:	b	4d764 <__assert_fail@plt+0x3abac>
   4d6a4:	ldr	r1, [sp, #24]
   4d6a8:	sub	r0, fp, #32
   4d6ac:	movw	r2, #1
   4d6b0:	bl	4d834 <__assert_fail@plt+0x3ac7c>
   4d6b4:	str	r0, [sp, #16]
   4d6b8:	b	4d764 <__assert_fail@plt+0x3abac>
   4d6bc:	ldr	r1, [sp, #24]
   4d6c0:	sub	r0, fp, #32
   4d6c4:	movw	r2, #2
   4d6c8:	bl	4d834 <__assert_fail@plt+0x3ac7c>
   4d6cc:	str	r0, [sp, #16]
   4d6d0:	b	4d764 <__assert_fail@plt+0x3abac>
   4d6d4:	ldr	r1, [sp, #24]
   4d6d8:	sub	r0, fp, #32
   4d6dc:	movw	r2, #5
   4d6e0:	bl	4d834 <__assert_fail@plt+0x3ac7c>
   4d6e4:	str	r0, [sp, #16]
   4d6e8:	b	4d764 <__assert_fail@plt+0x3abac>
   4d6ec:	ldr	r1, [sp, #24]
   4d6f0:	sub	r0, fp, #32
   4d6f4:	movw	r2, #4
   4d6f8:	bl	4d834 <__assert_fail@plt+0x3ac7c>
   4d6fc:	str	r0, [sp, #16]
   4d700:	b	4d764 <__assert_fail@plt+0x3abac>
   4d704:	sub	r0, fp, #32
   4d708:	movw	r1, #2
   4d70c:	bl	4d7cc <__assert_fail@plt+0x3ac14>
   4d710:	str	r0, [sp, #16]
   4d714:	b	4d764 <__assert_fail@plt+0x3abac>
   4d718:	ldr	r1, [sp, #24]
   4d71c:	sub	r0, fp, #32
   4d720:	movw	r2, #8
   4d724:	bl	4d834 <__assert_fail@plt+0x3ac7c>
   4d728:	str	r0, [sp, #16]
   4d72c:	b	4d764 <__assert_fail@plt+0x3abac>
   4d730:	ldr	r1, [sp, #24]
   4d734:	sub	r0, fp, #32
   4d738:	movw	r2, #7
   4d73c:	bl	4d834 <__assert_fail@plt+0x3ac7c>
   4d740:	str	r0, [sp, #16]
   4d744:	b	4d764 <__assert_fail@plt+0x3abac>
   4d748:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4d74c:	ldr	r1, [fp, #-20]	; 0xffffffec
   4d750:	str	r0, [r1]
   4d754:	ldr	r0, [sp, #36]	; 0x24
   4d758:	orr	r0, r0, #2
   4d75c:	str	r0, [fp, #-4]
   4d760:	b	4d7c0 <__assert_fail@plt+0x3ac08>
   4d764:	ldr	r0, [sp, #16]
   4d768:	ldr	r1, [sp, #36]	; 0x24
   4d76c:	orr	r0, r1, r0
   4d770:	str	r0, [sp, #36]	; 0x24
   4d774:	ldr	r0, [sp, #20]
   4d778:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4d77c:	ldr	r2, [r1]
   4d780:	add	r0, r2, r0
   4d784:	str	r0, [r1]
   4d788:	ldr	r0, [fp, #-28]	; 0xffffffe4
   4d78c:	ldr	r0, [r0]
   4d790:	ldrsb	r0, [r0]
   4d794:	cmp	r0, #0
   4d798:	beq	4d7a8 <__assert_fail@plt+0x3abf0>
   4d79c:	ldr	r0, [sp, #36]	; 0x24
   4d7a0:	orr	r0, r0, #2
   4d7a4:	str	r0, [sp, #36]	; 0x24
   4d7a8:	b	4d7ac <__assert_fail@plt+0x3abf4>
   4d7ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4d7b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   4d7b4:	str	r0, [r1]
   4d7b8:	ldr	r0, [sp, #36]	; 0x24
   4d7bc:	str	r0, [fp, #-4]
   4d7c0:	ldr	r0, [fp, #-4]
   4d7c4:	mov	sp, fp
   4d7c8:	pop	{fp, pc}
   4d7cc:	sub	sp, sp, #12
   4d7d0:	str	r0, [sp, #4]
   4d7d4:	str	r1, [sp]
   4d7d8:	ldr	r0, [sp]
   4d7dc:	mvn	r1, #0
   4d7e0:	udiv	r0, r1, r0
   4d7e4:	ldr	r1, [sp, #4]
   4d7e8:	ldr	r1, [r1]
   4d7ec:	cmp	r0, r1
   4d7f0:	bcs	4d80c <__assert_fail@plt+0x3ac54>
   4d7f4:	ldr	r0, [sp, #4]
   4d7f8:	mvn	r1, #0
   4d7fc:	str	r1, [r0]
   4d800:	movw	r0, #1
   4d804:	str	r0, [sp, #8]
   4d808:	b	4d828 <__assert_fail@plt+0x3ac70>
   4d80c:	ldr	r0, [sp]
   4d810:	ldr	r1, [sp, #4]
   4d814:	ldr	r2, [r1]
   4d818:	mul	r0, r2, r0
   4d81c:	str	r0, [r1]
   4d820:	movw	r0, #0
   4d824:	str	r0, [sp, #8]
   4d828:	ldr	r0, [sp, #8]
   4d82c:	add	sp, sp, #12
   4d830:	bx	lr
   4d834:	push	{fp, lr}
   4d838:	mov	fp, sp
   4d83c:	sub	sp, sp, #16
   4d840:	str	r0, [fp, #-4]
   4d844:	str	r1, [sp, #8]
   4d848:	str	r2, [sp, #4]
   4d84c:	movw	r0, #0
   4d850:	str	r0, [sp]
   4d854:	ldr	r0, [sp, #4]
   4d858:	mvn	r1, #0
   4d85c:	add	r1, r0, r1
   4d860:	str	r1, [sp, #4]
   4d864:	cmp	r0, #0
   4d868:	beq	4d888 <__assert_fail@plt+0x3acd0>
   4d86c:	ldr	r0, [fp, #-4]
   4d870:	ldr	r1, [sp, #8]
   4d874:	bl	4d7cc <__assert_fail@plt+0x3ac14>
   4d878:	ldr	r1, [sp]
   4d87c:	orr	r0, r1, r0
   4d880:	str	r0, [sp]
   4d884:	b	4d854 <__assert_fail@plt+0x3ac9c>
   4d888:	ldr	r0, [sp]
   4d88c:	mov	sp, fp
   4d890:	pop	{fp, pc}
   4d894:	push	{fp, lr}
   4d898:	mov	fp, sp
   4d89c:	sub	sp, sp, #80	; 0x50
   4d8a0:	ldr	ip, [fp, #8]
   4d8a4:	str	r0, [fp, #-8]
   4d8a8:	str	r1, [fp, #-12]
   4d8ac:	str	r2, [fp, #-16]
   4d8b0:	str	r3, [fp, #-20]	; 0xffffffec
   4d8b4:	movw	r0, #0
   4d8b8:	str	r0, [sp, #36]	; 0x24
   4d8bc:	ldr	r1, [fp, #-16]
   4d8c0:	cmp	r0, r1
   4d8c4:	bgt	4d8d8 <__assert_fail@plt+0x3ad20>
   4d8c8:	ldr	r0, [fp, #-16]
   4d8cc:	cmp	r0, #36	; 0x24
   4d8d0:	bgt	4d8d8 <__assert_fail@plt+0x3ad20>
   4d8d4:	b	4d8f8 <__assert_fail@plt+0x3ad40>
   4d8d8:	movw	r0, #48886	; 0xbef6
   4d8dc:	movt	r0, #7
   4d8e0:	movw	r1, #48924	; 0xbf1c
   4d8e4:	movt	r1, #7
   4d8e8:	movw	r2, #84	; 0x54
   4d8ec:	movw	r3, #49017	; 0xbf79
   4d8f0:	movt	r3, #7
   4d8f4:	bl	12bb8 <__assert_fail@plt>
   4d8f8:	ldr	r0, [fp, #-12]
   4d8fc:	movw	r1, #0
   4d900:	cmp	r0, r1
   4d904:	beq	4d914 <__assert_fail@plt+0x3ad5c>
   4d908:	ldr	r0, [fp, #-12]
   4d90c:	str	r0, [sp, #12]
   4d910:	b	4d920 <__assert_fail@plt+0x3ad68>
   4d914:	sub	r0, fp, #24
   4d918:	str	r0, [sp, #12]
   4d91c:	b	4d920 <__assert_fail@plt+0x3ad68>
   4d920:	ldr	r0, [sp, #12]
   4d924:	str	r0, [fp, #-28]	; 0xffffffe4
   4d928:	bl	128d0 <__errno_location@plt>
   4d92c:	movw	r1, #0
   4d930:	str	r1, [r0]
   4d934:	ldr	r0, [fp, #-8]
   4d938:	str	r0, [sp, #32]
   4d93c:	ldr	r0, [sp, #32]
   4d940:	ldrb	r0, [r0]
   4d944:	strb	r0, [sp, #31]
   4d948:	bl	12834 <__ctype_b_loc@plt>
   4d94c:	ldr	r0, [r0]
   4d950:	ldrb	r1, [sp, #31]
   4d954:	mov	r2, r1
   4d958:	add	r0, r0, r1, lsl #1
   4d95c:	ldrh	r0, [r0]
   4d960:	and	r0, r0, #8192	; 0x2000
   4d964:	cmp	r0, #0
   4d968:	beq	4d984 <__assert_fail@plt+0x3adcc>
   4d96c:	ldr	r0, [sp, #32]
   4d970:	add	r1, r0, #1
   4d974:	str	r1, [sp, #32]
   4d978:	ldrb	r0, [r0, #1]
   4d97c:	strb	r0, [sp, #31]
   4d980:	b	4d948 <__assert_fail@plt+0x3ad90>
   4d984:	ldrb	r0, [sp, #31]
   4d988:	cmp	r0, #45	; 0x2d
   4d98c:	bne	4d99c <__assert_fail@plt+0x3ade4>
   4d990:	movw	r0, #4
   4d994:	str	r0, [fp, #-4]
   4d998:	b	4df18 <__assert_fail@plt+0x3b360>
   4d99c:	ldr	r0, [fp, #-8]
   4d9a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4d9a4:	ldr	r2, [fp, #-16]
   4d9a8:	bl	12960 <strtoumax@plt>
   4d9ac:	str	r1, [sp, #44]	; 0x2c
   4d9b0:	str	r0, [sp, #40]	; 0x28
   4d9b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   4d9b8:	ldr	r0, [r0]
   4d9bc:	ldr	r1, [fp, #-8]
   4d9c0:	cmp	r0, r1
   4d9c4:	bne	4da30 <__assert_fail@plt+0x3ae78>
   4d9c8:	ldr	r0, [fp, #8]
   4d9cc:	movw	r1, #0
   4d9d0:	cmp	r0, r1
   4d9d4:	beq	4da20 <__assert_fail@plt+0x3ae68>
   4d9d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   4d9dc:	ldr	r0, [r0]
   4d9e0:	ldrb	r0, [r0]
   4d9e4:	cmp	r0, #0
   4d9e8:	beq	4da20 <__assert_fail@plt+0x3ae68>
   4d9ec:	ldr	r0, [fp, #8]
   4d9f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4d9f4:	ldr	r1, [r1]
   4d9f8:	ldrb	r1, [r1]
   4d9fc:	bl	12894 <strchr@plt>
   4da00:	movw	r1, #0
   4da04:	cmp	r0, r1
   4da08:	beq	4da20 <__assert_fail@plt+0x3ae68>
   4da0c:	mov	r0, #0
   4da10:	str	r0, [sp, #44]	; 0x2c
   4da14:	mov	r0, #1
   4da18:	str	r0, [sp, #40]	; 0x28
   4da1c:	b	4da2c <__assert_fail@plt+0x3ae74>
   4da20:	movw	r0, #4
   4da24:	str	r0, [fp, #-4]
   4da28:	b	4df18 <__assert_fail@plt+0x3b360>
   4da2c:	b	4da68 <__assert_fail@plt+0x3aeb0>
   4da30:	bl	128d0 <__errno_location@plt>
   4da34:	ldr	r0, [r0]
   4da38:	cmp	r0, #0
   4da3c:	beq	4da64 <__assert_fail@plt+0x3aeac>
   4da40:	bl	128d0 <__errno_location@plt>
   4da44:	ldr	r0, [r0]
   4da48:	cmp	r0, #34	; 0x22
   4da4c:	beq	4da5c <__assert_fail@plt+0x3aea4>
   4da50:	movw	r0, #4
   4da54:	str	r0, [fp, #-4]
   4da58:	b	4df18 <__assert_fail@plt+0x3b360>
   4da5c:	movw	r0, #1
   4da60:	str	r0, [sp, #36]	; 0x24
   4da64:	b	4da68 <__assert_fail@plt+0x3aeb0>
   4da68:	ldr	r0, [fp, #8]
   4da6c:	movw	r1, #0
   4da70:	cmp	r0, r1
   4da74:	bne	4da98 <__assert_fail@plt+0x3aee0>
   4da78:	ldr	r0, [sp, #40]	; 0x28
   4da7c:	ldr	r1, [sp, #44]	; 0x2c
   4da80:	ldr	r2, [fp, #-20]	; 0xffffffec
   4da84:	str	r1, [r2, #4]
   4da88:	str	r0, [r2]
   4da8c:	ldr	r0, [sp, #36]	; 0x24
   4da90:	str	r0, [fp, #-4]
   4da94:	b	4df18 <__assert_fail@plt+0x3b360>
   4da98:	ldr	r0, [fp, #-28]	; 0xffffffe4
   4da9c:	ldr	r0, [r0]
   4daa0:	ldrb	r0, [r0]
   4daa4:	cmp	r0, #0
   4daa8:	beq	4defc <__assert_fail@plt+0x3b344>
   4daac:	movw	r0, #1024	; 0x400
   4dab0:	str	r0, [sp, #24]
   4dab4:	movw	r0, #1
   4dab8:	str	r0, [sp, #20]
   4dabc:	ldr	r0, [fp, #8]
   4dac0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4dac4:	ldr	r1, [r1]
   4dac8:	ldrb	r1, [r1]
   4dacc:	bl	12894 <strchr@plt>
   4dad0:	movw	r1, #0
   4dad4:	cmp	r0, r1
   4dad8:	bne	4db00 <__assert_fail@plt+0x3af48>
   4dadc:	ldr	r0, [sp, #40]	; 0x28
   4dae0:	ldr	r1, [sp, #44]	; 0x2c
   4dae4:	ldr	r2, [fp, #-20]	; 0xffffffec
   4dae8:	str	r1, [r2, #4]
   4daec:	str	r0, [r2]
   4daf0:	ldr	r0, [sp, #36]	; 0x24
   4daf4:	orr	r0, r0, #2
   4daf8:	str	r0, [fp, #-4]
   4dafc:	b	4df18 <__assert_fail@plt+0x3b360>
   4db00:	ldr	r0, [fp, #-28]	; 0xffffffe4
   4db04:	ldr	r0, [r0]
   4db08:	ldrb	r0, [r0]
   4db0c:	sub	r0, r0, #69	; 0x45
   4db10:	cmp	r0, #47	; 0x2f
   4db14:	str	r0, [sp, #8]
   4db18:	bhi	4dc84 <__assert_fail@plt+0x3b0cc>
   4db1c:	add	r0, pc, #8
   4db20:	ldr	r1, [sp, #8]
   4db24:	ldr	r0, [r0, r1, lsl #2]
   4db28:	mov	pc, r0
   4db2c:	andeq	sp, r4, ip, ror #23
   4db30:	andeq	sp, r4, r4, lsl #25
   4db34:	andeq	sp, r4, ip, ror #23
   4db38:	andeq	sp, r4, r4, lsl #25
   4db3c:	andeq	sp, r4, r4, lsl #25
   4db40:	andeq	sp, r4, r4, lsl #25
   4db44:	andeq	sp, r4, ip, ror #23
   4db48:	andeq	sp, r4, r4, lsl #25
   4db4c:	andeq	sp, r4, ip, ror #23
   4db50:	andeq	sp, r4, r4, lsl #25
   4db54:	andeq	sp, r4, r4, lsl #25
   4db58:	andeq	sp, r4, ip, ror #23
   4db5c:	andeq	sp, r4, r4, lsl #25
   4db60:	andeq	sp, r4, r4, lsl #25
   4db64:	andeq	sp, r4, r4, lsl #25
   4db68:	andeq	sp, r4, ip, ror #23
   4db6c:	andeq	sp, r4, r4, lsl #25
   4db70:	andeq	sp, r4, r4, lsl #25
   4db74:	andeq	sp, r4, r4, lsl #25
   4db78:	andeq	sp, r4, r4, lsl #25
   4db7c:	andeq	sp, r4, ip, ror #23
   4db80:	andeq	sp, r4, ip, ror #23
   4db84:	andeq	sp, r4, r4, lsl #25
   4db88:	andeq	sp, r4, r4, lsl #25
   4db8c:	andeq	sp, r4, r4, lsl #25
   4db90:	andeq	sp, r4, r4, lsl #25
   4db94:	andeq	sp, r4, r4, lsl #25
   4db98:	andeq	sp, r4, r4, lsl #25
   4db9c:	andeq	sp, r4, r4, lsl #25
   4dba0:	andeq	sp, r4, r4, lsl #25
   4dba4:	andeq	sp, r4, r4, lsl #25
   4dba8:	andeq	sp, r4, r4, lsl #25
   4dbac:	andeq	sp, r4, r4, lsl #25
   4dbb0:	andeq	sp, r4, r4, lsl #25
   4dbb4:	andeq	sp, r4, ip, ror #23
   4dbb8:	andeq	sp, r4, r4, lsl #25
   4dbbc:	andeq	sp, r4, r4, lsl #25
   4dbc0:	andeq	sp, r4, r4, lsl #25
   4dbc4:	andeq	sp, r4, ip, ror #23
   4dbc8:	andeq	sp, r4, r4, lsl #25
   4dbcc:	andeq	sp, r4, ip, ror #23
   4dbd0:	andeq	sp, r4, r4, lsl #25
   4dbd4:	andeq	sp, r4, r4, lsl #25
   4dbd8:	andeq	sp, r4, r4, lsl #25
   4dbdc:	andeq	sp, r4, r4, lsl #25
   4dbe0:	andeq	sp, r4, r4, lsl #25
   4dbe4:	andeq	sp, r4, r4, lsl #25
   4dbe8:	andeq	sp, r4, ip, ror #23
   4dbec:	ldr	r0, [fp, #8]
   4dbf0:	movw	r1, #48	; 0x30
   4dbf4:	bl	12894 <strchr@plt>
   4dbf8:	movw	r1, #0
   4dbfc:	cmp	r0, r1
   4dc00:	beq	4dc80 <__assert_fail@plt+0x3b0c8>
   4dc04:	ldr	r0, [fp, #-28]	; 0xffffffe4
   4dc08:	ldr	r0, [r0]
   4dc0c:	ldrb	r0, [r0, #1]
   4dc10:	mov	r1, r0
   4dc14:	cmp	r0, #66	; 0x42
   4dc18:	str	r1, [sp, #4]
   4dc1c:	beq	4dc68 <__assert_fail@plt+0x3b0b0>
   4dc20:	b	4dc24 <__assert_fail@plt+0x3b06c>
   4dc24:	ldr	r0, [sp, #4]
   4dc28:	cmp	r0, #68	; 0x44
   4dc2c:	beq	4dc68 <__assert_fail@plt+0x3b0b0>
   4dc30:	b	4dc34 <__assert_fail@plt+0x3b07c>
   4dc34:	ldr	r0, [sp, #4]
   4dc38:	cmp	r0, #105	; 0x69
   4dc3c:	bne	4dc7c <__assert_fail@plt+0x3b0c4>
   4dc40:	b	4dc44 <__assert_fail@plt+0x3b08c>
   4dc44:	ldr	r0, [fp, #-28]	; 0xffffffe4
   4dc48:	ldr	r0, [r0]
   4dc4c:	ldrb	r0, [r0, #2]
   4dc50:	cmp	r0, #66	; 0x42
   4dc54:	bne	4dc64 <__assert_fail@plt+0x3b0ac>
   4dc58:	ldr	r0, [sp, #20]
   4dc5c:	add	r0, r0, #2
   4dc60:	str	r0, [sp, #20]
   4dc64:	b	4dc7c <__assert_fail@plt+0x3b0c4>
   4dc68:	movw	r0, #1000	; 0x3e8
   4dc6c:	str	r0, [sp, #24]
   4dc70:	ldr	r0, [sp, #20]
   4dc74:	add	r0, r0, #1
   4dc78:	str	r0, [sp, #20]
   4dc7c:	b	4dc80 <__assert_fail@plt+0x3b0c8>
   4dc80:	b	4dc84 <__assert_fail@plt+0x3b0cc>
   4dc84:	ldr	r0, [fp, #-28]	; 0xffffffe4
   4dc88:	ldr	r0, [r0]
   4dc8c:	ldrb	r0, [r0]
   4dc90:	sub	r0, r0, #66	; 0x42
   4dc94:	cmp	r0, #53	; 0x35
   4dc98:	str	r0, [sp]
   4dc9c:	bhi	4de90 <__assert_fail@plt+0x3b2d8>
   4dca0:	add	r0, pc, #8
   4dca4:	ldr	r1, [sp]
   4dca8:	ldr	r0, [r0, r1, lsl #2]
   4dcac:	mov	pc, r0
   4dcb0:	muleq	r4, ip, sp
   4dcb4:	muleq	r4, r0, lr
   4dcb8:	muleq	r4, r0, lr
   4dcbc:			; <UNDEFINED> instruction: 0x0004ddbc
   4dcc0:	muleq	r4, r0, lr
   4dcc4:	ldrdeq	sp, [r4], -r4
   4dcc8:	muleq	r4, r0, lr
   4dccc:	muleq	r4, r0, lr
   4dcd0:	muleq	r4, r0, lr
   4dcd4:	andeq	sp, r4, ip, ror #27
   4dcd8:	muleq	r4, r0, lr
   4dcdc:	andeq	sp, r4, r4, lsl #28
   4dce0:	muleq	r4, r0, lr
   4dce4:	muleq	r4, r0, lr
   4dce8:	andeq	sp, r4, ip, lsl lr
   4dcec:	muleq	r4, r0, lr
   4dcf0:	muleq	r4, r0, lr
   4dcf4:	muleq	r4, r0, lr
   4dcf8:	andeq	sp, r4, r4, lsr lr
   4dcfc:	muleq	r4, r0, lr
   4dd00:	muleq	r4, r0, lr
   4dd04:	muleq	r4, r0, lr
   4dd08:	muleq	r4, r0, lr
   4dd0c:	andeq	sp, r4, r0, ror #28
   4dd10:	andeq	sp, r4, r8, ror lr
   4dd14:	muleq	r4, r0, lr
   4dd18:	muleq	r4, r0, lr
   4dd1c:	muleq	r4, r0, lr
   4dd20:	muleq	r4, r0, lr
   4dd24:	muleq	r4, r0, lr
   4dd28:	muleq	r4, r0, lr
   4dd2c:	muleq	r4, r0, lr
   4dd30:	andeq	sp, r4, r8, lsl #27
   4dd34:			; <UNDEFINED> instruction: 0x0004ddb0
   4dd38:	muleq	r4, r0, lr
   4dd3c:	muleq	r4, r0, lr
   4dd40:	muleq	r4, r0, lr
   4dd44:	ldrdeq	sp, [r4], -r4
   4dd48:	muleq	r4, r0, lr
   4dd4c:	muleq	r4, r0, lr
   4dd50:	muleq	r4, r0, lr
   4dd54:	andeq	sp, r4, ip, ror #27
   4dd58:	muleq	r4, r0, lr
   4dd5c:	andeq	sp, r4, r4, lsl #28
   4dd60:	muleq	r4, r0, lr
   4dd64:	muleq	r4, r0, lr
   4dd68:	muleq	r4, r0, lr
   4dd6c:	muleq	r4, r0, lr
   4dd70:	muleq	r4, r0, lr
   4dd74:	muleq	r4, r0, lr
   4dd78:	andeq	sp, r4, r4, lsr lr
   4dd7c:	muleq	r4, r0, lr
   4dd80:	muleq	r4, r0, lr
   4dd84:	andeq	sp, r4, ip, asr #28
   4dd88:	add	r0, sp, #40	; 0x28
   4dd8c:	movw	r1, #512	; 0x200
   4dd90:	bl	4df24 <__assert_fail@plt+0x3b36c>
   4dd94:	str	r0, [sp, #16]
   4dd98:	b	4deb4 <__assert_fail@plt+0x3b2fc>
   4dd9c:	add	r0, sp, #40	; 0x28
   4dda0:	movw	r1, #1024	; 0x400
   4dda4:	bl	4df24 <__assert_fail@plt+0x3b36c>
   4dda8:	str	r0, [sp, #16]
   4ddac:	b	4deb4 <__assert_fail@plt+0x3b2fc>
   4ddb0:	movw	r0, #0
   4ddb4:	str	r0, [sp, #16]
   4ddb8:	b	4deb4 <__assert_fail@plt+0x3b2fc>
   4ddbc:	ldr	r1, [sp, #24]
   4ddc0:	add	r0, sp, #40	; 0x28
   4ddc4:	movw	r2, #6
   4ddc8:	bl	4dfc8 <__assert_fail@plt+0x3b410>
   4ddcc:	str	r0, [sp, #16]
   4ddd0:	b	4deb4 <__assert_fail@plt+0x3b2fc>
   4ddd4:	ldr	r1, [sp, #24]
   4ddd8:	add	r0, sp, #40	; 0x28
   4dddc:	movw	r2, #3
   4dde0:	bl	4dfc8 <__assert_fail@plt+0x3b410>
   4dde4:	str	r0, [sp, #16]
   4dde8:	b	4deb4 <__assert_fail@plt+0x3b2fc>
   4ddec:	ldr	r1, [sp, #24]
   4ddf0:	add	r0, sp, #40	; 0x28
   4ddf4:	movw	r2, #1
   4ddf8:	bl	4dfc8 <__assert_fail@plt+0x3b410>
   4ddfc:	str	r0, [sp, #16]
   4de00:	b	4deb4 <__assert_fail@plt+0x3b2fc>
   4de04:	ldr	r1, [sp, #24]
   4de08:	add	r0, sp, #40	; 0x28
   4de0c:	movw	r2, #2
   4de10:	bl	4dfc8 <__assert_fail@plt+0x3b410>
   4de14:	str	r0, [sp, #16]
   4de18:	b	4deb4 <__assert_fail@plt+0x3b2fc>
   4de1c:	ldr	r1, [sp, #24]
   4de20:	add	r0, sp, #40	; 0x28
   4de24:	movw	r2, #5
   4de28:	bl	4dfc8 <__assert_fail@plt+0x3b410>
   4de2c:	str	r0, [sp, #16]
   4de30:	b	4deb4 <__assert_fail@plt+0x3b2fc>
   4de34:	ldr	r1, [sp, #24]
   4de38:	add	r0, sp, #40	; 0x28
   4de3c:	movw	r2, #4
   4de40:	bl	4dfc8 <__assert_fail@plt+0x3b410>
   4de44:	str	r0, [sp, #16]
   4de48:	b	4deb4 <__assert_fail@plt+0x3b2fc>
   4de4c:	add	r0, sp, #40	; 0x28
   4de50:	movw	r1, #2
   4de54:	bl	4df24 <__assert_fail@plt+0x3b36c>
   4de58:	str	r0, [sp, #16]
   4de5c:	b	4deb4 <__assert_fail@plt+0x3b2fc>
   4de60:	ldr	r1, [sp, #24]
   4de64:	add	r0, sp, #40	; 0x28
   4de68:	movw	r2, #8
   4de6c:	bl	4dfc8 <__assert_fail@plt+0x3b410>
   4de70:	str	r0, [sp, #16]
   4de74:	b	4deb4 <__assert_fail@plt+0x3b2fc>
   4de78:	ldr	r1, [sp, #24]
   4de7c:	add	r0, sp, #40	; 0x28
   4de80:	movw	r2, #7
   4de84:	bl	4dfc8 <__assert_fail@plt+0x3b410>
   4de88:	str	r0, [sp, #16]
   4de8c:	b	4deb4 <__assert_fail@plt+0x3b2fc>
   4de90:	ldr	r0, [sp, #40]	; 0x28
   4de94:	ldr	r1, [sp, #44]	; 0x2c
   4de98:	ldr	r2, [fp, #-20]	; 0xffffffec
   4de9c:	str	r1, [r2, #4]
   4dea0:	str	r0, [r2]
   4dea4:	ldr	r0, [sp, #36]	; 0x24
   4dea8:	orr	r0, r0, #2
   4deac:	str	r0, [fp, #-4]
   4deb0:	b	4df18 <__assert_fail@plt+0x3b360>
   4deb4:	ldr	r0, [sp, #16]
   4deb8:	ldr	r1, [sp, #36]	; 0x24
   4debc:	orr	r0, r1, r0
   4dec0:	str	r0, [sp, #36]	; 0x24
   4dec4:	ldr	r0, [sp, #20]
   4dec8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4decc:	ldr	r2, [r1]
   4ded0:	add	r0, r2, r0
   4ded4:	str	r0, [r1]
   4ded8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   4dedc:	ldr	r0, [r0]
   4dee0:	ldrsb	r0, [r0]
   4dee4:	cmp	r0, #0
   4dee8:	beq	4def8 <__assert_fail@plt+0x3b340>
   4deec:	ldr	r0, [sp, #36]	; 0x24
   4def0:	orr	r0, r0, #2
   4def4:	str	r0, [sp, #36]	; 0x24
   4def8:	b	4defc <__assert_fail@plt+0x3b344>
   4defc:	ldr	r0, [sp, #40]	; 0x28
   4df00:	ldr	r1, [sp, #44]	; 0x2c
   4df04:	ldr	r2, [fp, #-20]	; 0xffffffec
   4df08:	str	r1, [r2, #4]
   4df0c:	str	r0, [r2]
   4df10:	ldr	r0, [sp, #36]	; 0x24
   4df14:	str	r0, [fp, #-4]
   4df18:	ldr	r0, [fp, #-4]
   4df1c:	mov	sp, fp
   4df20:	pop	{fp, pc}
   4df24:	push	{r4, sl, fp, lr}
   4df28:	add	fp, sp, #8
   4df2c:	sub	sp, sp, #16
   4df30:	str	r0, [sp, #8]
   4df34:	str	r1, [sp, #4]
   4df38:	ldr	r0, [sp, #4]
   4df3c:	asr	r3, r0, #31
   4df40:	mvn	r1, #0
   4df44:	str	r0, [sp]
   4df48:	mov	r0, r1
   4df4c:	ldr	r2, [sp]
   4df50:	bl	7540c <__assert_fail@plt+0x62854>
   4df54:	ldr	r2, [sp, #8]
   4df58:	ldr	r3, [r2]
   4df5c:	ldr	r2, [r2, #4]
   4df60:	subs	r0, r0, r3
   4df64:	sbcs	r1, r1, r2
   4df68:	bcs	4df8c <__assert_fail@plt+0x3b3d4>
   4df6c:	b	4df70 <__assert_fail@plt+0x3b3b8>
   4df70:	ldr	r0, [sp, #8]
   4df74:	mvn	r1, #0
   4df78:	str	r1, [r0, #4]
   4df7c:	str	r1, [r0]
   4df80:	movw	r0, #1
   4df84:	str	r0, [sp, #12]
   4df88:	b	4dfbc <__assert_fail@plt+0x3b404>
   4df8c:	ldr	r0, [sp, #4]
   4df90:	asr	r1, r0, #31
   4df94:	ldr	r2, [sp, #8]
   4df98:	ldr	r3, [r2]
   4df9c:	ldr	ip, [r2, #4]
   4dfa0:	umull	lr, r4, r3, r0
   4dfa4:	mla	r1, r3, r1, r4
   4dfa8:	mla	r0, ip, r0, r1
   4dfac:	str	lr, [r2]
   4dfb0:	str	r0, [r2, #4]
   4dfb4:	movw	r0, #0
   4dfb8:	str	r0, [sp, #12]
   4dfbc:	ldr	r0, [sp, #12]
   4dfc0:	sub	sp, fp, #8
   4dfc4:	pop	{r4, sl, fp, pc}
   4dfc8:	push	{fp, lr}
   4dfcc:	mov	fp, sp
   4dfd0:	sub	sp, sp, #16
   4dfd4:	str	r0, [fp, #-4]
   4dfd8:	str	r1, [sp, #8]
   4dfdc:	str	r2, [sp, #4]
   4dfe0:	movw	r0, #0
   4dfe4:	str	r0, [sp]
   4dfe8:	ldr	r0, [sp, #4]
   4dfec:	mvn	r1, #0
   4dff0:	add	r1, r0, r1
   4dff4:	str	r1, [sp, #4]
   4dff8:	cmp	r0, #0
   4dffc:	beq	4e01c <__assert_fail@plt+0x3b464>
   4e000:	ldr	r0, [fp, #-4]
   4e004:	ldr	r1, [sp, #8]
   4e008:	bl	4df24 <__assert_fail@plt+0x3b36c>
   4e00c:	ldr	r1, [sp]
   4e010:	orr	r0, r1, r0
   4e014:	str	r0, [sp]
   4e018:	b	4dfe8 <__assert_fail@plt+0x3b430>
   4e01c:	ldr	r0, [sp]
   4e020:	mov	sp, fp
   4e024:	pop	{fp, pc}
   4e028:	push	{fp, lr}
   4e02c:	mov	fp, sp
   4e030:	sub	sp, sp, #16
   4e034:	movw	r0, #0
   4e038:	str	r0, [sp, #8]
   4e03c:	str	r0, [sp, #4]
   4e040:	movw	r0, #55088	; 0xd730
   4e044:	movt	r0, #8
   4e048:	ldr	r2, [r0]
   4e04c:	add	r0, sp, #8
   4e050:	add	r1, sp, #4
   4e054:	bl	12b04 <getline@plt>
   4e058:	str	r0, [sp]
   4e05c:	ldr	r0, [sp]
   4e060:	cmp	r0, #0
   4e064:	bgt	4e074 <__assert_fail@plt+0x3b4bc>
   4e068:	movw	r0, #0
   4e06c:	strb	r0, [fp, #-1]
   4e070:	b	4e0c8 <__assert_fail@plt+0x3b510>
   4e074:	ldr	r0, [sp, #8]
   4e078:	ldr	r1, [sp]
   4e07c:	sub	r1, r1, #1
   4e080:	add	r0, r0, r1
   4e084:	ldrb	r0, [r0]
   4e088:	cmp	r0, #10
   4e08c:	bne	4e0a8 <__assert_fail@plt+0x3b4f0>
   4e090:	ldr	r0, [sp, #8]
   4e094:	ldr	r1, [sp]
   4e098:	sub	r1, r1, #1
   4e09c:	add	r0, r0, r1
   4e0a0:	movw	r1, #0
   4e0a4:	strb	r1, [r0]
   4e0a8:	ldr	r0, [sp, #8]
   4e0ac:	bl	129d8 <rpmatch@plt>
   4e0b0:	movw	r1, #0
   4e0b4:	cmp	r1, r0
   4e0b8:	movw	r0, #0
   4e0bc:	movlt	r0, #1
   4e0c0:	and	r0, r0, #1
   4e0c4:	strb	r0, [fp, #-1]
   4e0c8:	ldr	r0, [sp, #8]
   4e0cc:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   4e0d0:	ldrb	r0, [fp, #-1]
   4e0d4:	and	r0, r0, #1
   4e0d8:	mov	sp, fp
   4e0dc:	pop	{fp, pc}
   4e0e0:	push	{fp, lr}
   4e0e4:	mov	fp, sp
   4e0e8:	sub	sp, sp, #16
   4e0ec:	str	r0, [sp, #8]
   4e0f0:	str	r1, [sp, #4]
   4e0f4:	ldr	r0, [sp, #8]
   4e0f8:	cmp	r0, #0
   4e0fc:	beq	4e10c <__assert_fail@plt+0x3b554>
   4e100:	ldr	r0, [sp, #4]
   4e104:	cmp	r0, #0
   4e108:	bne	4e118 <__assert_fail@plt+0x3b560>
   4e10c:	movw	r0, #1
   4e110:	str	r0, [sp, #4]
   4e114:	str	r0, [sp, #8]
   4e118:	ldr	r0, [sp, #4]
   4e11c:	cmp	r0, #0
   4e120:	beq	4e154 <__assert_fail@plt+0x3b59c>
   4e124:	ldr	r0, [pc, #76]	; 4e178 <__assert_fail@plt+0x3b5c0>
   4e128:	ldr	r1, [sp, #4]
   4e12c:	udiv	r0, r0, r1
   4e130:	ldr	r1, [sp, #8]
   4e134:	cmp	r0, r1
   4e138:	bcs	4e154 <__assert_fail@plt+0x3b59c>
   4e13c:	bl	128d0 <__errno_location@plt>
   4e140:	movw	r1, #12
   4e144:	str	r1, [r0]
   4e148:	movw	r0, #0
   4e14c:	str	r0, [fp, #-4]
   4e150:	b	4e16c <__assert_fail@plt+0x3b5b4>
   4e154:	ldr	r0, [sp, #8]
   4e158:	ldr	r1, [sp, #4]
   4e15c:	bl	12450 <calloc@plt>
   4e160:	str	r0, [sp]
   4e164:	ldr	r0, [sp]
   4e168:	str	r0, [fp, #-4]
   4e16c:	ldr	r0, [fp, #-4]
   4e170:	mov	sp, fp
   4e174:	pop	{fp, pc}
   4e178:	svcvc	0x00ffffff
   4e17c:	push	{fp, lr}
   4e180:	mov	fp, sp
   4e184:	sub	sp, sp, #56	; 0x38
   4e188:	str	r0, [fp, #-8]
   4e18c:	ldr	r0, [fp, #-8]
   4e190:	bl	126a8 <chdir@plt>
   4e194:	str	r0, [fp, #-12]
   4e198:	ldr	r0, [fp, #-12]
   4e19c:	cmp	r0, #0
   4e1a0:	beq	4e1b4 <__assert_fail@plt+0x3b5fc>
   4e1a4:	bl	128d0 <__errno_location@plt>
   4e1a8:	ldr	r0, [r0]
   4e1ac:	cmp	r0, #36	; 0x24
   4e1b0:	beq	4e1c0 <__assert_fail@plt+0x3b608>
   4e1b4:	ldr	r0, [fp, #-12]
   4e1b8:	str	r0, [fp, #-4]
   4e1bc:	b	4e508 <__assert_fail@plt+0x3b950>
   4e1c0:	ldr	r0, [fp, #-8]
   4e1c4:	bl	12888 <strlen@plt>
   4e1c8:	str	r0, [fp, #-16]
   4e1cc:	ldr	r0, [fp, #-8]
   4e1d0:	ldr	r1, [fp, #-16]
   4e1d4:	add	r0, r0, r1
   4e1d8:	str	r0, [fp, #-20]	; 0xffffffec
   4e1dc:	sub	r0, fp, #24
   4e1e0:	bl	4e514 <__assert_fail@plt+0x3b95c>
   4e1e4:	ldr	r0, [fp, #-16]
   4e1e8:	movw	r1, #0
   4e1ec:	cmp	r1, r0
   4e1f0:	bcs	4e1f8 <__assert_fail@plt+0x3b640>
   4e1f4:	b	4e218 <__assert_fail@plt+0x3b660>
   4e1f8:	movw	r0, #49096	; 0xbfc8
   4e1fc:	movt	r0, #7
   4e200:	movw	r1, #49104	; 0xbfd0
   4e204:	movt	r1, #7
   4e208:	movw	r2, #126	; 0x7e
   4e20c:	movw	r3, #49117	; 0xbfdd
   4e210:	movt	r3, #7
   4e214:	bl	12bb8 <__assert_fail@plt>
   4e218:	ldr	r0, [fp, #-16]
   4e21c:	movw	r1, #4096	; 0x1000
   4e220:	cmp	r1, r0
   4e224:	bhi	4e22c <__assert_fail@plt+0x3b674>
   4e228:	b	4e24c <__assert_fail@plt+0x3b694>
   4e22c:	movw	r0, #49140	; 0xbff4
   4e230:	movt	r0, #7
   4e234:	movw	r1, #49104	; 0xbfd0
   4e238:	movt	r1, #7
   4e23c:	movw	r2, #127	; 0x7f
   4e240:	movw	r3, #49117	; 0xbfdd
   4e244:	movt	r3, #7
   4e248:	bl	12bb8 <__assert_fail@plt>
   4e24c:	ldr	r0, [fp, #-8]
   4e250:	movw	r1, #24848	; 0x6110
   4e254:	movt	r1, #7
   4e258:	bl	12bac <strspn@plt>
   4e25c:	str	r0, [sp, #28]
   4e260:	ldr	r0, [sp, #28]
   4e264:	cmp	r0, #2
   4e268:	bne	4e304 <__assert_fail@plt+0x3b74c>
   4e26c:	ldr	r0, [fp, #-8]
   4e270:	add	r0, r0, #3
   4e274:	ldr	r1, [fp, #-20]	; 0xffffffec
   4e278:	ldr	r2, [fp, #-8]
   4e27c:	add	r2, r2, #3
   4e280:	sub	r2, r1, r2
   4e284:	mov	r1, #47	; 0x2f
   4e288:	bl	1296c <memchr@plt>
   4e28c:	str	r0, [sp, #20]
   4e290:	ldr	r0, [sp, #20]
   4e294:	movw	r1, #0
   4e298:	cmp	r0, r1
   4e29c:	bne	4e2b8 <__assert_fail@plt+0x3b700>
   4e2a0:	bl	128d0 <__errno_location@plt>
   4e2a4:	movw	r1, #36	; 0x24
   4e2a8:	str	r1, [r0]
   4e2ac:	mvn	r0, #0
   4e2b0:	str	r0, [fp, #-4]
   4e2b4:	b	4e508 <__assert_fail@plt+0x3b950>
   4e2b8:	ldr	r0, [sp, #20]
   4e2bc:	movw	r1, #0
   4e2c0:	strb	r1, [r0]
   4e2c4:	ldr	r1, [fp, #-8]
   4e2c8:	sub	r0, fp, #24
   4e2cc:	bl	4e530 <__assert_fail@plt+0x3b978>
   4e2d0:	str	r0, [sp, #24]
   4e2d4:	ldr	r0, [sp, #20]
   4e2d8:	movw	r1, #47	; 0x2f
   4e2dc:	strb	r1, [r0]
   4e2e0:	ldr	r0, [sp, #24]
   4e2e4:	cmp	r0, #0
   4e2e8:	beq	4e2f0 <__assert_fail@plt+0x3b738>
   4e2ec:	b	4e4d8 <__assert_fail@plt+0x3b920>
   4e2f0:	ldr	r0, [sp, #20]
   4e2f4:	add	r0, r0, #1
   4e2f8:	bl	4e59c <__assert_fail@plt+0x3b9e4>
   4e2fc:	str	r0, [fp, #-8]
   4e300:	b	4e340 <__assert_fail@plt+0x3b788>
   4e304:	ldr	r0, [sp, #28]
   4e308:	cmp	r0, #0
   4e30c:	beq	4e33c <__assert_fail@plt+0x3b784>
   4e310:	sub	r0, fp, #24
   4e314:	movw	r1, #24848	; 0x6110
   4e318:	movt	r1, #7
   4e31c:	bl	4e530 <__assert_fail@plt+0x3b978>
   4e320:	cmp	r0, #0
   4e324:	beq	4e32c <__assert_fail@plt+0x3b774>
   4e328:	b	4e4d8 <__assert_fail@plt+0x3b920>
   4e32c:	ldr	r0, [sp, #28]
   4e330:	ldr	r1, [fp, #-8]
   4e334:	add	r0, r1, r0
   4e338:	str	r0, [fp, #-8]
   4e33c:	b	4e340 <__assert_fail@plt+0x3b788>
   4e340:	ldr	r0, [fp, #-8]
   4e344:	ldrb	r0, [r0]
   4e348:	cmp	r0, #47	; 0x2f
   4e34c:	beq	4e354 <__assert_fail@plt+0x3b79c>
   4e350:	b	4e374 <__assert_fail@plt+0x3b7bc>
   4e354:	movw	r0, #49152	; 0xc000
   4e358:	movt	r0, #7
   4e35c:	movw	r1, #49104	; 0xbfd0
   4e360:	movt	r1, #7
   4e364:	movw	r2, #162	; 0xa2
   4e368:	movw	r3, #49117	; 0xbfdd
   4e36c:	movt	r3, #7
   4e370:	bl	12bb8 <__assert_fail@plt>
   4e374:	ldr	r0, [fp, #-8]
   4e378:	ldr	r1, [fp, #-20]	; 0xffffffec
   4e37c:	cmp	r0, r1
   4e380:	bhi	4e388 <__assert_fail@plt+0x3b7d0>
   4e384:	b	4e3a8 <__assert_fail@plt+0x3b7f0>
   4e388:	movw	r0, #49164	; 0xc00c
   4e38c:	movt	r0, #7
   4e390:	movw	r1, #49104	; 0xbfd0
   4e394:	movt	r1, #7
   4e398:	movw	r2, #163	; 0xa3
   4e39c:	movw	r3, #49117	; 0xbfdd
   4e3a0:	movt	r3, #7
   4e3a4:	bl	12bb8 <__assert_fail@plt>
   4e3a8:	b	4e3ac <__assert_fail@plt+0x3b7f4>
   4e3ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   4e3b0:	ldr	r1, [fp, #-8]
   4e3b4:	sub	r0, r0, r1
   4e3b8:	movw	r1, #4096	; 0x1000
   4e3bc:	cmp	r1, r0
   4e3c0:	bgt	4e484 <__assert_fail@plt+0x3b8cc>
   4e3c4:	ldr	r0, [fp, #-8]
   4e3c8:	movw	r1, #47	; 0x2f
   4e3cc:	movw	r2, #4096	; 0x1000
   4e3d0:	bl	128b8 <memrchr@plt>
   4e3d4:	str	r0, [sp, #12]
   4e3d8:	ldr	r0, [sp, #12]
   4e3dc:	movw	r1, #0
   4e3e0:	cmp	r0, r1
   4e3e4:	bne	4e400 <__assert_fail@plt+0x3b848>
   4e3e8:	bl	128d0 <__errno_location@plt>
   4e3ec:	movw	r1, #36	; 0x24
   4e3f0:	str	r1, [r0]
   4e3f4:	mvn	r0, #0
   4e3f8:	str	r0, [fp, #-4]
   4e3fc:	b	4e508 <__assert_fail@plt+0x3b950>
   4e400:	ldr	r0, [sp, #12]
   4e404:	movw	r1, #0
   4e408:	strb	r1, [r0]
   4e40c:	ldr	r0, [sp, #12]
   4e410:	ldr	r1, [fp, #-8]
   4e414:	sub	r0, r0, r1
   4e418:	cmp	r0, #4096	; 0x1000
   4e41c:	bge	4e424 <__assert_fail@plt+0x3b86c>
   4e420:	b	4e444 <__assert_fail@plt+0x3b88c>
   4e424:	movw	r0, #49179	; 0xc01b
   4e428:	movt	r0, #7
   4e42c:	movw	r1, #49104	; 0xbfd0
   4e430:	movt	r1, #7
   4e434:	movw	r2, #179	; 0xb3
   4e438:	movw	r3, #49117	; 0xbfdd
   4e43c:	movt	r3, #7
   4e440:	bl	12bb8 <__assert_fail@plt>
   4e444:	ldr	r1, [fp, #-8]
   4e448:	sub	r0, fp, #24
   4e44c:	bl	4e530 <__assert_fail@plt+0x3b978>
   4e450:	str	r0, [sp, #16]
   4e454:	ldr	r0, [sp, #12]
   4e458:	movw	r1, #47	; 0x2f
   4e45c:	strb	r1, [r0]
   4e460:	ldr	r0, [sp, #16]
   4e464:	cmp	r0, #0
   4e468:	beq	4e470 <__assert_fail@plt+0x3b8b8>
   4e46c:	b	4e4d8 <__assert_fail@plt+0x3b920>
   4e470:	ldr	r0, [sp, #12]
   4e474:	add	r0, r0, #1
   4e478:	bl	4e59c <__assert_fail@plt+0x3b9e4>
   4e47c:	str	r0, [fp, #-8]
   4e480:	b	4e3ac <__assert_fail@plt+0x3b7f4>
   4e484:	ldr	r0, [fp, #-8]
   4e488:	ldr	r1, [fp, #-20]	; 0xffffffec
   4e48c:	cmp	r0, r1
   4e490:	bcs	4e4b0 <__assert_fail@plt+0x3b8f8>
   4e494:	ldr	r1, [fp, #-8]
   4e498:	sub	r0, fp, #24
   4e49c:	bl	4e530 <__assert_fail@plt+0x3b978>
   4e4a0:	cmp	r0, #0
   4e4a4:	beq	4e4ac <__assert_fail@plt+0x3b8f4>
   4e4a8:	b	4e4d8 <__assert_fail@plt+0x3b920>
   4e4ac:	b	4e4b0 <__assert_fail@plt+0x3b8f8>
   4e4b0:	sub	r0, fp, #24
   4e4b4:	bl	4e5d4 <__assert_fail@plt+0x3ba1c>
   4e4b8:	cmp	r0, #0
   4e4bc:	beq	4e4c4 <__assert_fail@plt+0x3b90c>
   4e4c0:	b	4e4d8 <__assert_fail@plt+0x3b920>
   4e4c4:	sub	r0, fp, #24
   4e4c8:	bl	4e5f8 <__assert_fail@plt+0x3ba40>
   4e4cc:	movw	r0, #0
   4e4d0:	str	r0, [fp, #-4]
   4e4d4:	b	4e508 <__assert_fail@plt+0x3b950>
   4e4d8:	bl	128d0 <__errno_location@plt>
   4e4dc:	ldr	r0, [r0]
   4e4e0:	str	r0, [sp, #8]
   4e4e4:	sub	r0, fp, #24
   4e4e8:	bl	4e5f8 <__assert_fail@plt+0x3ba40>
   4e4ec:	ldr	r0, [sp, #8]
   4e4f0:	str	r0, [sp, #4]
   4e4f4:	bl	128d0 <__errno_location@plt>
   4e4f8:	ldr	r1, [sp, #4]
   4e4fc:	str	r1, [r0]
   4e500:	mvn	r0, #0
   4e504:	str	r0, [fp, #-4]
   4e508:	ldr	r0, [fp, #-4]
   4e50c:	mov	sp, fp
   4e510:	pop	{fp, pc}
   4e514:	sub	sp, sp, #4
   4e518:	str	r0, [sp]
   4e51c:	ldr	r0, [sp]
   4e520:	mvn	r1, #99	; 0x63
   4e524:	str	r1, [r0]
   4e528:	add	sp, sp, #4
   4e52c:	bx	lr
   4e530:	push	{fp, lr}
   4e534:	mov	fp, sp
   4e538:	sub	sp, sp, #16
   4e53c:	str	r0, [sp, #8]
   4e540:	str	r1, [sp, #4]
   4e544:	ldr	r0, [sp, #8]
   4e548:	ldr	r0, [r0]
   4e54c:	ldr	r1, [sp, #4]
   4e550:	movw	r2, #18688	; 0x4900
   4e554:	bl	128ac <openat64@plt>
   4e558:	str	r0, [sp]
   4e55c:	ldr	r0, [sp]
   4e560:	cmp	r0, #0
   4e564:	bge	4e574 <__assert_fail@plt+0x3b9bc>
   4e568:	mvn	r0, #0
   4e56c:	str	r0, [fp, #-4]
   4e570:	b	4e590 <__assert_fail@plt+0x3b9d8>
   4e574:	ldr	r0, [sp, #8]
   4e578:	bl	4e5f8 <__assert_fail@plt+0x3ba40>
   4e57c:	ldr	r0, [sp]
   4e580:	ldr	r1, [sp, #8]
   4e584:	str	r0, [r1]
   4e588:	movw	r0, #0
   4e58c:	str	r0, [fp, #-4]
   4e590:	ldr	r0, [fp, #-4]
   4e594:	mov	sp, fp
   4e598:	pop	{fp, pc}
   4e59c:	push	{fp, lr}
   4e5a0:	mov	fp, sp
   4e5a4:	sub	sp, sp, #8
   4e5a8:	str	r0, [sp, #4]
   4e5ac:	ldr	r0, [sp, #4]
   4e5b0:	movw	r1, #24848	; 0x6110
   4e5b4:	movt	r1, #7
   4e5b8:	bl	12bac <strspn@plt>
   4e5bc:	str	r0, [sp]
   4e5c0:	ldr	r0, [sp, #4]
   4e5c4:	ldr	r1, [sp]
   4e5c8:	add	r0, r0, r1
   4e5cc:	mov	sp, fp
   4e5d0:	pop	{fp, pc}
   4e5d4:	push	{fp, lr}
   4e5d8:	mov	fp, sp
   4e5dc:	sub	sp, sp, #8
   4e5e0:	str	r0, [sp, #4]
   4e5e4:	ldr	r0, [sp, #4]
   4e5e8:	ldr	r0, [r0]
   4e5ec:	bl	12aa4 <fchdir@plt>
   4e5f0:	mov	sp, fp
   4e5f4:	pop	{fp, pc}
   4e5f8:	push	{fp, lr}
   4e5fc:	mov	fp, sp
   4e600:	sub	sp, sp, #8
   4e604:	str	r0, [sp, #4]
   4e608:	ldr	r0, [sp, #4]
   4e60c:	ldr	r0, [r0]
   4e610:	movw	r1, #0
   4e614:	cmp	r1, r0
   4e618:	bgt	4e670 <__assert_fail@plt+0x3bab8>
   4e61c:	ldr	r0, [sp, #4]
   4e620:	ldr	r0, [r0]
   4e624:	bl	12b70 <close@plt>
   4e628:	cmp	r0, #0
   4e62c:	movw	r0, #0
   4e630:	movne	r0, #1
   4e634:	and	r0, r0, #1
   4e638:	strb	r0, [sp, #3]
   4e63c:	ldrb	r0, [sp, #3]
   4e640:	tst	r0, #1
   4e644:	bne	4e64c <__assert_fail@plt+0x3ba94>
   4e648:	b	4e66c <__assert_fail@plt+0x3bab4>
   4e64c:	movw	r0, #49198	; 0xc02e
   4e650:	movt	r0, #7
   4e654:	movw	r1, #49104	; 0xbfd0
   4e658:	movt	r1, #7
   4e65c:	movw	r2, #64	; 0x40
   4e660:	movw	r3, #49211	; 0xc03b
   4e664:	movt	r3, #7
   4e668:	bl	12bb8 <__assert_fail@plt>
   4e66c:	b	4e670 <__assert_fail@plt+0x3bab8>
   4e670:	mov	sp, fp
   4e674:	pop	{fp, pc}
   4e678:	sub	sp, sp, #8
   4e67c:	push	{fp, lr}
   4e680:	mov	fp, sp
   4e684:	sub	sp, sp, #48	; 0x30
   4e688:	str	r3, [fp, #12]
   4e68c:	str	r2, [fp, #8]
   4e690:	str	r0, [fp, #-4]
   4e694:	str	r1, [fp, #-8]
   4e698:	mvn	r0, #0
   4e69c:	str	r0, [fp, #-16]
   4e6a0:	add	r0, fp, #8
   4e6a4:	str	r0, [fp, #-12]
   4e6a8:	ldr	r0, [fp, #-8]
   4e6ac:	cmp	r0, #0
   4e6b0:	str	r0, [sp, #12]
   4e6b4:	beq	4e6d0 <__assert_fail@plt+0x3bb18>
   4e6b8:	b	4e6bc <__assert_fail@plt+0x3bb04>
   4e6bc:	movw	r0, #1030	; 0x406
   4e6c0:	ldr	r1, [sp, #12]
   4e6c4:	cmp	r1, r0
   4e6c8:	beq	4e6f8 <__assert_fail@plt+0x3bb40>
   4e6cc:	b	4e720 <__assert_fail@plt+0x3bb68>
   4e6d0:	ldr	r0, [fp, #-12]
   4e6d4:	add	r1, r0, #4
   4e6d8:	str	r1, [fp, #-12]
   4e6dc:	ldr	r0, [r0]
   4e6e0:	str	r0, [fp, #-20]	; 0xffffffec
   4e6e4:	ldr	r0, [fp, #-4]
   4e6e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   4e6ec:	bl	4e8cc <__assert_fail@plt+0x3bd14>
   4e6f0:	str	r0, [fp, #-16]
   4e6f4:	b	4e8ac <__assert_fail@plt+0x3bcf4>
   4e6f8:	ldr	r0, [fp, #-12]
   4e6fc:	add	r1, r0, #4
   4e700:	str	r1, [fp, #-12]
   4e704:	ldr	r0, [r0]
   4e708:	str	r0, [sp, #24]
   4e70c:	ldr	r0, [fp, #-4]
   4e710:	ldr	r1, [sp, #24]
   4e714:	bl	4e900 <__assert_fail@plt+0x3bd48>
   4e718:	str	r0, [fp, #-16]
   4e71c:	b	4e8ac <__assert_fail@plt+0x3bcf4>
   4e720:	ldr	r0, [fp, #-8]
   4e724:	cmp	r0, #0
   4e728:	str	r0, [sp, #8]
   4e72c:	beq	4e854 <__assert_fail@plt+0x3bc9c>
   4e730:	b	4e734 <__assert_fail@plt+0x3bb7c>
   4e734:	ldr	r0, [sp, #8]
   4e738:	cmp	r0, #1
   4e73c:	beq	4e840 <__assert_fail@plt+0x3bc88>
   4e740:	b	4e744 <__assert_fail@plt+0x3bb8c>
   4e744:	ldr	r0, [sp, #8]
   4e748:	cmp	r0, #2
   4e74c:	beq	4e854 <__assert_fail@plt+0x3bc9c>
   4e750:	b	4e754 <__assert_fail@plt+0x3bb9c>
   4e754:	ldr	r0, [sp, #8]
   4e758:	cmp	r0, #3
   4e75c:	beq	4e840 <__assert_fail@plt+0x3bc88>
   4e760:	b	4e764 <__assert_fail@plt+0x3bbac>
   4e764:	ldr	r0, [sp, #8]
   4e768:	cmp	r0, #4
   4e76c:	beq	4e854 <__assert_fail@plt+0x3bc9c>
   4e770:	b	4e774 <__assert_fail@plt+0x3bbbc>
   4e774:	ldr	r0, [sp, #8]
   4e778:	cmp	r0, #8
   4e77c:	beq	4e854 <__assert_fail@plt+0x3bc9c>
   4e780:	b	4e784 <__assert_fail@plt+0x3bbcc>
   4e784:	ldr	r0, [sp, #8]
   4e788:	cmp	r0, #9
   4e78c:	beq	4e840 <__assert_fail@plt+0x3bc88>
   4e790:	b	4e794 <__assert_fail@plt+0x3bbdc>
   4e794:	ldr	r0, [sp, #8]
   4e798:	cmp	r0, #10
   4e79c:	beq	4e854 <__assert_fail@plt+0x3bc9c>
   4e7a0:	b	4e7a4 <__assert_fail@plt+0x3bbec>
   4e7a4:	ldr	r0, [sp, #8]
   4e7a8:	cmp	r0, #11
   4e7ac:	beq	4e840 <__assert_fail@plt+0x3bc88>
   4e7b0:	b	4e7b4 <__assert_fail@plt+0x3bbfc>
   4e7b4:	ldr	r0, [sp, #8]
   4e7b8:	cmp	r0, #1024	; 0x400
   4e7bc:	beq	4e854 <__assert_fail@plt+0x3bc9c>
   4e7c0:	b	4e7c4 <__assert_fail@plt+0x3bc0c>
   4e7c4:	movw	r0, #1025	; 0x401
   4e7c8:	ldr	r1, [sp, #8]
   4e7cc:	cmp	r1, r0
   4e7d0:	beq	4e840 <__assert_fail@plt+0x3bc88>
   4e7d4:	b	4e7d8 <__assert_fail@plt+0x3bc20>
   4e7d8:	movw	r0, #1026	; 0x402
   4e7dc:	ldr	r1, [sp, #8]
   4e7e0:	cmp	r1, r0
   4e7e4:	beq	4e854 <__assert_fail@plt+0x3bc9c>
   4e7e8:	b	4e7ec <__assert_fail@plt+0x3bc34>
   4e7ec:	movw	r0, #1030	; 0x406
   4e7f0:	ldr	r1, [sp, #8]
   4e7f4:	sub	r0, r1, r0
   4e7f8:	cmp	r0, #2
   4e7fc:	bcc	4e854 <__assert_fail@plt+0x3bc9c>
   4e800:	b	4e804 <__assert_fail@plt+0x3bc4c>
   4e804:	movw	r0, #1032	; 0x408
   4e808:	ldr	r1, [sp, #8]
   4e80c:	cmp	r1, r0
   4e810:	beq	4e840 <__assert_fail@plt+0x3bc88>
   4e814:	b	4e818 <__assert_fail@plt+0x3bc60>
   4e818:	movw	r0, #1033	; 0x409
   4e81c:	ldr	r1, [sp, #8]
   4e820:	cmp	r1, r0
   4e824:	beq	4e854 <__assert_fail@plt+0x3bc9c>
   4e828:	b	4e82c <__assert_fail@plt+0x3bc74>
   4e82c:	movw	r0, #1034	; 0x40a
   4e830:	ldr	r1, [sp, #8]
   4e834:	cmp	r1, r0
   4e838:	bne	4e880 <__assert_fail@plt+0x3bcc8>
   4e83c:	b	4e840 <__assert_fail@plt+0x3bc88>
   4e840:	ldr	r0, [fp, #-4]
   4e844:	ldr	r1, [fp, #-8]
   4e848:	bl	129cc <fcntl64@plt>
   4e84c:	str	r0, [fp, #-16]
   4e850:	b	4e8a8 <__assert_fail@plt+0x3bcf0>
   4e854:	ldr	r0, [fp, #-12]
   4e858:	add	r1, r0, #4
   4e85c:	str	r1, [fp, #-12]
   4e860:	ldr	r0, [r0]
   4e864:	str	r0, [sp, #20]
   4e868:	ldr	r0, [fp, #-4]
   4e86c:	ldr	r1, [fp, #-8]
   4e870:	ldr	r2, [sp, #20]
   4e874:	bl	129cc <fcntl64@plt>
   4e878:	str	r0, [fp, #-16]
   4e87c:	b	4e8a8 <__assert_fail@plt+0x3bcf0>
   4e880:	ldr	r0, [fp, #-12]
   4e884:	add	r1, r0, #4
   4e888:	str	r1, [fp, #-12]
   4e88c:	ldr	r0, [r0]
   4e890:	str	r0, [sp, #16]
   4e894:	ldr	r0, [fp, #-4]
   4e898:	ldr	r1, [fp, #-8]
   4e89c:	ldr	r2, [sp, #16]
   4e8a0:	bl	129cc <fcntl64@plt>
   4e8a4:	str	r0, [fp, #-16]
   4e8a8:	b	4e8ac <__assert_fail@plt+0x3bcf4>
   4e8ac:	sub	r0, fp, #12
   4e8b0:	ldr	r1, [fp, #-16]
   4e8b4:	str	r0, [sp, #4]
   4e8b8:	mov	r0, r1
   4e8bc:	mov	sp, fp
   4e8c0:	pop	{fp, lr}
   4e8c4:	add	sp, sp, #8
   4e8c8:	bx	lr
   4e8cc:	push	{fp, lr}
   4e8d0:	mov	fp, sp
   4e8d4:	sub	sp, sp, #16
   4e8d8:	str	r0, [fp, #-4]
   4e8dc:	str	r1, [sp, #8]
   4e8e0:	ldr	r0, [fp, #-4]
   4e8e4:	ldr	r2, [sp, #8]
   4e8e8:	movw	r1, #0
   4e8ec:	bl	129cc <fcntl64@plt>
   4e8f0:	str	r0, [sp, #4]
   4e8f4:	ldr	r0, [sp, #4]
   4e8f8:	mov	sp, fp
   4e8fc:	pop	{fp, pc}
   4e900:	push	{fp, lr}
   4e904:	mov	fp, sp
   4e908:	sub	sp, sp, #32
   4e90c:	str	r0, [fp, #-4]
   4e910:	str	r1, [fp, #-8]
   4e914:	movw	r0, #57428	; 0xe054
   4e918:	movt	r0, #8
   4e91c:	ldr	r0, [r0]
   4e920:	movw	r1, #0
   4e924:	cmp	r1, r0
   4e928:	bgt	4e9a8 <__assert_fail@plt+0x3bdf0>
   4e92c:	ldr	r0, [fp, #-4]
   4e930:	ldr	r2, [fp, #-8]
   4e934:	movw	r1, #1030	; 0x406
   4e938:	bl	129cc <fcntl64@plt>
   4e93c:	str	r0, [fp, #-12]
   4e940:	ldr	r0, [fp, #-12]
   4e944:	movw	r1, #0
   4e948:	cmp	r1, r0
   4e94c:	ble	4e960 <__assert_fail@plt+0x3bda8>
   4e950:	bl	128d0 <__errno_location@plt>
   4e954:	ldr	r0, [r0]
   4e958:	cmp	r0, #22
   4e95c:	beq	4e974 <__assert_fail@plt+0x3bdbc>
   4e960:	movw	r0, #57428	; 0xe054
   4e964:	movt	r0, #8
   4e968:	movw	r1, #1
   4e96c:	str	r1, [r0]
   4e970:	b	4e9a4 <__assert_fail@plt+0x3bdec>
   4e974:	ldr	r0, [fp, #-4]
   4e978:	ldr	r1, [fp, #-8]
   4e97c:	bl	4e8cc <__assert_fail@plt+0x3bd14>
   4e980:	str	r0, [fp, #-12]
   4e984:	ldr	r0, [fp, #-12]
   4e988:	cmp	r0, #0
   4e98c:	blt	4e9a0 <__assert_fail@plt+0x3bde8>
   4e990:	movw	r0, #57428	; 0xe054
   4e994:	movt	r0, #8
   4e998:	mvn	r1, #0
   4e99c:	str	r1, [r0]
   4e9a0:	b	4e9a4 <__assert_fail@plt+0x3bdec>
   4e9a4:	b	4e9b8 <__assert_fail@plt+0x3be00>
   4e9a8:	ldr	r0, [fp, #-4]
   4e9ac:	ldr	r1, [fp, #-8]
   4e9b0:	bl	4e8cc <__assert_fail@plt+0x3bd14>
   4e9b4:	str	r0, [fp, #-12]
   4e9b8:	ldr	r0, [fp, #-12]
   4e9bc:	movw	r1, #0
   4e9c0:	cmp	r1, r0
   4e9c4:	bgt	4ea4c <__assert_fail@plt+0x3be94>
   4e9c8:	movw	r0, #57428	; 0xe054
   4e9cc:	movt	r0, #8
   4e9d0:	ldr	r0, [r0]
   4e9d4:	cmn	r0, #1
   4e9d8:	bne	4ea4c <__assert_fail@plt+0x3be94>
   4e9dc:	ldr	r0, [fp, #-12]
   4e9e0:	movw	r1, #1
   4e9e4:	bl	129cc <fcntl64@plt>
   4e9e8:	str	r0, [sp, #16]
   4e9ec:	ldr	r0, [sp, #16]
   4e9f0:	cmp	r0, #0
   4e9f4:	blt	4ea14 <__assert_fail@plt+0x3be5c>
   4e9f8:	ldr	r0, [fp, #-12]
   4e9fc:	ldr	r1, [sp, #16]
   4ea00:	orr	r2, r1, #1
   4ea04:	movw	r1, #2
   4ea08:	bl	129cc <fcntl64@plt>
   4ea0c:	cmn	r0, #1
   4ea10:	bne	4ea48 <__assert_fail@plt+0x3be90>
   4ea14:	bl	128d0 <__errno_location@plt>
   4ea18:	ldr	r0, [r0]
   4ea1c:	str	r0, [sp, #12]
   4ea20:	ldr	r0, [fp, #-12]
   4ea24:	bl	12b70 <close@plt>
   4ea28:	ldr	r1, [sp, #12]
   4ea2c:	str	r0, [sp, #8]
   4ea30:	str	r1, [sp, #4]
   4ea34:	bl	128d0 <__errno_location@plt>
   4ea38:	ldr	r1, [sp, #4]
   4ea3c:	str	r1, [r0]
   4ea40:	mvn	r0, #0
   4ea44:	str	r0, [fp, #-12]
   4ea48:	b	4ea4c <__assert_fail@plt+0x3be94>
   4ea4c:	ldr	r0, [fp, #-12]
   4ea50:	mov	sp, fp
   4ea54:	pop	{fp, pc}
   4ea58:	push	{fp, lr}
   4ea5c:	mov	fp, sp
   4ea60:	sub	sp, sp, #8
   4ea64:	str	r0, [sp]
   4ea68:	ldr	r0, [sp]
   4ea6c:	movw	r1, #0
   4ea70:	cmp	r0, r1
   4ea74:	beq	4ea88 <__assert_fail@plt+0x3bed0>
   4ea78:	ldr	r0, [sp]
   4ea7c:	bl	12804 <__freading@plt>
   4ea80:	cmp	r0, #0
   4ea84:	bne	4ea98 <__assert_fail@plt+0x3bee0>
   4ea88:	ldr	r0, [sp]
   4ea8c:	bl	12528 <fflush@plt>
   4ea90:	str	r0, [sp, #4]
   4ea94:	b	4eaac <__assert_fail@plt+0x3bef4>
   4ea98:	ldr	r0, [sp]
   4ea9c:	bl	4eab8 <__assert_fail@plt+0x3bf00>
   4eaa0:	ldr	r0, [sp]
   4eaa4:	bl	12528 <fflush@plt>
   4eaa8:	str	r0, [sp, #4]
   4eaac:	ldr	r0, [sp, #4]
   4eab0:	mov	sp, fp
   4eab4:	pop	{fp, pc}
   4eab8:	push	{fp, lr}
   4eabc:	mov	fp, sp
   4eac0:	sub	sp, sp, #8
   4eac4:	str	r0, [sp, #4]
   4eac8:	ldr	r0, [sp, #4]
   4eacc:	ldr	r0, [r0]
   4ead0:	and	r0, r0, #256	; 0x100
   4ead4:	cmp	r0, #0
   4ead8:	beq	4eafc <__assert_fail@plt+0x3bf44>
   4eadc:	ldr	r0, [sp, #4]
   4eae0:	mov	r1, sp
   4eae4:	mov	r2, #1
   4eae8:	str	r2, [r1]
   4eaec:	mov	r1, #0
   4eaf0:	mov	r2, r1
   4eaf4:	mov	r3, r1
   4eaf8:	bl	4eb44 <__assert_fail@plt+0x3bf8c>
   4eafc:	mov	sp, fp
   4eb00:	pop	{fp, pc}
   4eb04:	push	{fp, lr}
   4eb08:	mov	fp, sp
   4eb0c:	sub	sp, sp, #16
   4eb10:	str	r0, [fp, #-4]
   4eb14:	bl	128d0 <__errno_location@plt>
   4eb18:	ldr	r0, [r0]
   4eb1c:	str	r0, [sp, #8]
   4eb20:	ldr	r0, [fp, #-4]
   4eb24:	bl	12564 <free@plt>
   4eb28:	ldr	r0, [sp, #8]
   4eb2c:	str	r0, [sp, #4]
   4eb30:	bl	128d0 <__errno_location@plt>
   4eb34:	ldr	r1, [sp, #4]
   4eb38:	str	r1, [r0]
   4eb3c:	mov	sp, fp
   4eb40:	pop	{fp, pc}
   4eb44:	push	{fp, lr}
   4eb48:	mov	fp, sp
   4eb4c:	sub	sp, sp, #32
   4eb50:	ldr	r1, [fp, #8]
   4eb54:	str	r0, [fp, #-8]
   4eb58:	str	r3, [sp, #20]
   4eb5c:	str	r2, [sp, #16]
   4eb60:	ldr	r0, [fp, #-8]
   4eb64:	ldr	r0, [r0, #8]
   4eb68:	ldr	r2, [fp, #-8]
   4eb6c:	ldr	r2, [r2, #4]
   4eb70:	cmp	r0, r2
   4eb74:	bne	4ec20 <__assert_fail@plt+0x3c068>
   4eb78:	ldr	r0, [fp, #-8]
   4eb7c:	ldr	r0, [r0, #20]
   4eb80:	ldr	r1, [fp, #-8]
   4eb84:	ldr	r1, [r1, #16]
   4eb88:	cmp	r0, r1
   4eb8c:	bne	4ec20 <__assert_fail@plt+0x3c068>
   4eb90:	ldr	r0, [fp, #-8]
   4eb94:	ldr	r0, [r0, #36]	; 0x24
   4eb98:	movw	r1, #0
   4eb9c:	cmp	r0, r1
   4eba0:	bne	4ec20 <__assert_fail@plt+0x3c068>
   4eba4:	ldr	r0, [fp, #-8]
   4eba8:	bl	12948 <fileno@plt>
   4ebac:	ldr	r2, [sp, #16]
   4ebb0:	ldr	r3, [sp, #20]
   4ebb4:	ldr	r1, [fp, #8]
   4ebb8:	mov	ip, sp
   4ebbc:	str	r1, [ip]
   4ebc0:	bl	12708 <lseek64@plt>
   4ebc4:	str	r1, [sp, #12]
   4ebc8:	str	r0, [sp, #8]
   4ebcc:	ldr	r0, [sp, #8]
   4ebd0:	ldr	r1, [sp, #12]
   4ebd4:	and	r0, r0, r1
   4ebd8:	cmn	r0, #1
   4ebdc:	bne	4ebf0 <__assert_fail@plt+0x3c038>
   4ebe0:	b	4ebe4 <__assert_fail@plt+0x3c02c>
   4ebe4:	mvn	r0, #0
   4ebe8:	str	r0, [fp, #-4]
   4ebec:	b	4ec40 <__assert_fail@plt+0x3c088>
   4ebf0:	ldr	r0, [fp, #-8]
   4ebf4:	ldr	r1, [r0]
   4ebf8:	bic	r1, r1, #16
   4ebfc:	str	r1, [r0]
   4ec00:	ldr	r0, [sp, #8]
   4ec04:	ldr	r1, [sp, #12]
   4ec08:	ldr	r2, [fp, #-8]
   4ec0c:	str	r1, [r2, #84]	; 0x54
   4ec10:	str	r0, [r2, #80]	; 0x50
   4ec14:	movw	r0, #0
   4ec18:	str	r0, [fp, #-4]
   4ec1c:	b	4ec40 <__assert_fail@plt+0x3c088>
   4ec20:	ldr	r0, [fp, #-8]
   4ec24:	ldr	r2, [sp, #16]
   4ec28:	ldr	r3, [sp, #20]
   4ec2c:	ldr	r1, [fp, #8]
   4ec30:	mov	ip, sp
   4ec34:	str	r1, [ip]
   4ec38:	bl	129a8 <fseeko64@plt>
   4ec3c:	str	r0, [fp, #-4]
   4ec40:	ldr	r0, [fp, #-4]
   4ec44:	mov	sp, fp
   4ec48:	pop	{fp, pc}
   4ec4c:	push	{fp, lr}
   4ec50:	mov	fp, sp
   4ec54:	sub	sp, sp, #80	; 0x50
   4ec58:	ldr	r3, [pc, #1452]	; 4f20c <__assert_fail@plt+0x3c654>
   4ec5c:	str	r0, [fp, #-8]
   4ec60:	str	r1, [fp, #-12]
   4ec64:	str	r2, [fp, #-16]
   4ec68:	movw	r0, #0
   4ec6c:	str	r0, [fp, #-36]	; 0xffffffdc
   4ec70:	str	r0, [sp, #40]	; 0x28
   4ec74:	ldr	r0, [fp, #-12]
   4ec78:	and	r0, r0, r3
   4ec7c:	cmp	r0, #0
   4ec80:	beq	4ec9c <__assert_fail@plt+0x3c0e4>
   4ec84:	bl	128d0 <__errno_location@plt>
   4ec88:	movw	r1, #22
   4ec8c:	str	r1, [r0]
   4ec90:	movw	r0, #0
   4ec94:	str	r0, [fp, #-4]
   4ec98:	b	4f200 <__assert_fail@plt+0x3c648>
   4ec9c:	ldr	r0, [fp, #-12]
   4eca0:	and	r0, r0, #4
   4eca4:	cmp	r0, #0
   4eca8:	beq	4ecd4 <__assert_fail@plt+0x3c11c>
   4ecac:	ldr	r0, [fp, #-12]
   4ecb0:	and	r0, r0, #512	; 0x200
   4ecb4:	cmp	r0, #0
   4ecb8:	beq	4ecd4 <__assert_fail@plt+0x3c11c>
   4ecbc:	bl	128d0 <__errno_location@plt>
   4ecc0:	movw	r1, #22
   4ecc4:	str	r1, [r0]
   4ecc8:	movw	r0, #0
   4eccc:	str	r0, [fp, #-4]
   4ecd0:	b	4f200 <__assert_fail@plt+0x3c648>
   4ecd4:	ldr	r0, [fp, #-12]
   4ecd8:	and	r0, r0, #18
   4ecdc:	cmp	r0, #0
   4ece0:	bne	4ecfc <__assert_fail@plt+0x3c144>
   4ece4:	bl	128d0 <__errno_location@plt>
   4ece8:	movw	r1, #22
   4ecec:	str	r1, [r0]
   4ecf0:	movw	r0, #0
   4ecf4:	str	r0, [fp, #-4]
   4ecf8:	b	4f200 <__assert_fail@plt+0x3c648>
   4ecfc:	movw	r0, #1
   4ed00:	movw	r1, #96	; 0x60
   4ed04:	bl	4e0e0 <__assert_fail@plt+0x3b528>
   4ed08:	str	r0, [fp, #-20]	; 0xffffffec
   4ed0c:	ldr	r0, [fp, #-20]	; 0xffffffec
   4ed10:	movw	r1, #0
   4ed14:	cmp	r0, r1
   4ed18:	bne	4ed28 <__assert_fail@plt+0x3c170>
   4ed1c:	movw	r0, #0
   4ed20:	str	r0, [fp, #-4]
   4ed24:	b	4f200 <__assert_fail@plt+0x3c648>
   4ed28:	ldr	r0, [fp, #-16]
   4ed2c:	ldr	r1, [fp, #-20]	; 0xffffffec
   4ed30:	str	r0, [r1, #44]	; 0x2c
   4ed34:	ldr	r0, [fp, #-12]
   4ed38:	ldr	r1, [fp, #-20]	; 0xffffffec
   4ed3c:	str	r0, [r1, #48]	; 0x30
   4ed40:	ldr	r0, [fp, #-20]	; 0xffffffec
   4ed44:	ldr	r0, [r0, #48]	; 0x30
   4ed48:	and	r0, r0, #2
   4ed4c:	cmp	r0, #0
   4ed50:	beq	4ed78 <__assert_fail@plt+0x3c1c0>
   4ed54:	ldr	r0, [fp, #-20]	; 0xffffffec
   4ed58:	ldr	r1, [r0, #48]	; 0x30
   4ed5c:	orr	r1, r1, #4
   4ed60:	str	r1, [r0, #48]	; 0x30
   4ed64:	ldr	r0, [fp, #-20]	; 0xffffffec
   4ed68:	ldr	r1, [r0, #48]	; 0x30
   4ed6c:	mvn	r2, #512	; 0x200
   4ed70:	and	r1, r1, r2
   4ed74:	str	r1, [r0, #48]	; 0x30
   4ed78:	ldr	r0, [fp, #-20]	; 0xffffffec
   4ed7c:	mvn	r1, #99	; 0x63
   4ed80:	str	r1, [r0, #32]
   4ed84:	ldr	r0, [fp, #-20]	; 0xffffffec
   4ed88:	ldr	r0, [r0, #48]	; 0x30
   4ed8c:	and	r0, r0, #512	; 0x200
   4ed90:	cmp	r0, #0
   4ed94:	beq	4edcc <__assert_fail@plt+0x3c214>
   4ed98:	b	4edcc <__assert_fail@plt+0x3c214>
   4ed9c:	ldr	r1, [pc, #1132]	; 4f210 <__assert_fail@plt+0x3c658>
   4eda0:	movw	r0, #26652	; 0x681c
   4eda4:	movt	r0, #7
   4eda8:	bl	2c5a4 <__assert_fail@plt+0x199ec>
   4edac:	str	r0, [sp, #32]
   4edb0:	ldr	r0, [sp, #32]
   4edb4:	cmp	r0, #0
   4edb8:	bge	4edc0 <__assert_fail@plt+0x3c208>
   4edbc:	b	4edc8 <__assert_fail@plt+0x3c210>
   4edc0:	ldr	r0, [sp, #32]
   4edc4:	bl	12b70 <close@plt>
   4edc8:	b	4edcc <__assert_fail@plt+0x3c214>
   4edcc:	ldr	r0, [fp, #-8]
   4edd0:	bl	4f214 <__assert_fail@plt+0x3c65c>
   4edd4:	str	r0, [sp, #28]
   4edd8:	ldr	r0, [fp, #-20]	; 0xffffffec
   4eddc:	ldr	r1, [sp, #28]
   4ede0:	cmp	r1, #4096	; 0x1000
   4ede4:	str	r0, [sp, #16]
   4ede8:	bls	4edf8 <__assert_fail@plt+0x3c240>
   4edec:	ldr	r0, [sp, #28]
   4edf0:	str	r0, [sp, #12]
   4edf4:	b	4ee04 <__assert_fail@plt+0x3c24c>
   4edf8:	movw	r0, #4096	; 0x1000
   4edfc:	str	r0, [sp, #12]
   4ee00:	b	4ee04 <__assert_fail@plt+0x3c24c>
   4ee04:	ldr	r0, [sp, #12]
   4ee08:	ldr	r1, [sp, #16]
   4ee0c:	str	r0, [sp, #8]
   4ee10:	mov	r0, r1
   4ee14:	ldr	r1, [sp, #8]
   4ee18:	bl	4f288 <__assert_fail@plt+0x3c6d0>
   4ee1c:	tst	r0, #1
   4ee20:	bne	4ee28 <__assert_fail@plt+0x3c270>
   4ee24:	b	4f1f0 <__assert_fail@plt+0x3c638>
   4ee28:	ldr	r0, [fp, #-8]
   4ee2c:	ldr	r0, [r0]
   4ee30:	movw	r1, #0
   4ee34:	cmp	r0, r1
   4ee38:	beq	4ee70 <__assert_fail@plt+0x3c2b8>
   4ee3c:	ldr	r0, [fp, #-20]	; 0xffffffec
   4ee40:	movw	r1, #29909	; 0x74d5
   4ee44:	movt	r1, #7
   4ee48:	movw	r2, #0
   4ee4c:	bl	4f380 <__assert_fail@plt+0x3c7c8>
   4ee50:	str	r0, [fp, #-36]	; 0xffffffdc
   4ee54:	movw	r1, #0
   4ee58:	cmp	r0, r1
   4ee5c:	bne	4ee64 <__assert_fail@plt+0x3c2ac>
   4ee60:	b	4f1e4 <__assert_fail@plt+0x3c62c>
   4ee64:	ldr	r0, [fp, #-36]	; 0xffffffdc
   4ee68:	mvn	r1, #0
   4ee6c:	str	r1, [r0, #48]	; 0x30
   4ee70:	ldr	r0, [fp, #-16]
   4ee74:	movw	r1, #0
   4ee78:	cmp	r0, r1
   4ee7c:	movw	r0, #1
   4ee80:	str	r0, [sp, #4]
   4ee84:	beq	4eea4 <__assert_fail@plt+0x3c2ec>
   4ee88:	ldr	r0, [fp, #-20]	; 0xffffffec
   4ee8c:	ldr	r0, [r0, #48]	; 0x30
   4ee90:	and	r0, r0, #1024	; 0x400
   4ee94:	cmp	r0, #0
   4ee98:	movw	r0, #0
   4ee9c:	movne	r0, #1
   4eea0:	str	r0, [sp, #4]
   4eea4:	ldr	r0, [sp, #4]
   4eea8:	and	r0, r0, #1
   4eeac:	strb	r0, [sp, #39]	; 0x27
   4eeb0:	movw	r0, #0
   4eeb4:	str	r0, [fp, #-28]	; 0xffffffe4
   4eeb8:	str	r0, [fp, #-32]	; 0xffffffe0
   4eebc:	ldr	r0, [fp, #-8]
   4eec0:	ldr	r0, [r0]
   4eec4:	movw	r1, #0
   4eec8:	cmp	r0, r1
   4eecc:	beq	4f0c0 <__assert_fail@plt+0x3c508>
   4eed0:	ldr	r0, [fp, #-8]
   4eed4:	ldr	r0, [r0]
   4eed8:	bl	12888 <strlen@plt>
   4eedc:	str	r0, [sp, #24]
   4eee0:	ldr	r0, [fp, #-12]
   4eee4:	and	r0, r0, #2048	; 0x800
   4eee8:	cmp	r0, #0
   4eeec:	bne	4ef90 <__assert_fail@plt+0x3c3d8>
   4eef0:	ldr	r0, [fp, #-8]
   4eef4:	ldr	r0, [r0]
   4eef8:	str	r0, [sp, #20]
   4eefc:	ldr	r0, [sp, #24]
   4ef00:	movw	r1, #2
   4ef04:	cmp	r1, r0
   4ef08:	bcs	4ef8c <__assert_fail@plt+0x3c3d4>
   4ef0c:	ldr	r0, [sp, #20]
   4ef10:	ldr	r1, [sp, #24]
   4ef14:	sub	r1, r1, #1
   4ef18:	add	r0, r0, r1
   4ef1c:	ldrb	r0, [r0]
   4ef20:	cmp	r0, #47	; 0x2f
   4ef24:	bne	4ef8c <__assert_fail@plt+0x3c3d4>
   4ef28:	b	4ef2c <__assert_fail@plt+0x3c374>
   4ef2c:	ldr	r0, [sp, #24]
   4ef30:	movw	r1, #1
   4ef34:	cmp	r1, r0
   4ef38:	movw	r0, #0
   4ef3c:	str	r0, [sp]
   4ef40:	bcs	4ef68 <__assert_fail@plt+0x3c3b0>
   4ef44:	ldr	r0, [sp, #20]
   4ef48:	ldr	r1, [sp, #24]
   4ef4c:	sub	r1, r1, #2
   4ef50:	add	r0, r0, r1
   4ef54:	ldrb	r0, [r0]
   4ef58:	cmp	r0, #47	; 0x2f
   4ef5c:	movw	r0, #0
   4ef60:	moveq	r0, #1
   4ef64:	str	r0, [sp]
   4ef68:	ldr	r0, [sp]
   4ef6c:	tst	r0, #1
   4ef70:	beq	4ef88 <__assert_fail@plt+0x3c3d0>
   4ef74:	ldr	r0, [sp, #24]
   4ef78:	mvn	r1, #0
   4ef7c:	add	r0, r0, r1
   4ef80:	str	r0, [sp, #24]
   4ef84:	b	4ef2c <__assert_fail@plt+0x3c374>
   4ef88:	b	4ef8c <__assert_fail@plt+0x3c3d4>
   4ef8c:	b	4ef90 <__assert_fail@plt+0x3c3d8>
   4ef90:	ldr	r0, [fp, #-20]	; 0xffffffec
   4ef94:	ldr	r1, [fp, #-8]
   4ef98:	ldr	r1, [r1]
   4ef9c:	ldr	r2, [sp, #24]
   4efa0:	bl	4f380 <__assert_fail@plt+0x3c7c8>
   4efa4:	str	r0, [fp, #-24]	; 0xffffffe8
   4efa8:	movw	r1, #0
   4efac:	cmp	r0, r1
   4efb0:	bne	4efb8 <__assert_fail@plt+0x3c400>
   4efb4:	b	4f1d4 <__assert_fail@plt+0x3c61c>
   4efb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4efbc:	movw	r1, #0
   4efc0:	str	r1, [r0, #48]	; 0x30
   4efc4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   4efc8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4efcc:	str	r0, [r1, #4]
   4efd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4efd4:	add	r0, r0, #168	; 0xa8
   4efd8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4efdc:	str	r0, [r1, #24]
   4efe0:	ldrb	r0, [sp, #39]	; 0x27
   4efe4:	tst	r0, #1
   4efe8:	beq	4f01c <__assert_fail@plt+0x3c464>
   4efec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   4eff0:	movw	r1, #0
   4eff4:	cmp	r0, r1
   4eff8:	beq	4f01c <__assert_fail@plt+0x3c464>
   4effc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4f000:	movw	r1, #11
   4f004:	strh	r1, [r0, #56]	; 0x38
   4f008:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4f00c:	movw	r1, #1
   4f010:	and	r1, r1, #1
   4f014:	bl	4f478 <__assert_fail@plt+0x3c8c0>
   4f018:	b	4f038 <__assert_fail@plt+0x3c480>
   4f01c:	ldr	r0, [fp, #-20]	; 0xffffffec
   4f020:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4f024:	movw	r2, #0
   4f028:	and	r2, r2, #1
   4f02c:	bl	4f4d0 <__assert_fail@plt+0x3c918>
   4f030:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4f034:	strh	r0, [r1, #56]	; 0x38
   4f038:	ldr	r0, [fp, #-16]
   4f03c:	movw	r1, #0
   4f040:	cmp	r0, r1
   4f044:	beq	4f060 <__assert_fail@plt+0x3c4a8>
   4f048:	ldr	r0, [fp, #-28]	; 0xffffffe4
   4f04c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4f050:	str	r0, [r1, #8]
   4f054:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4f058:	str	r0, [fp, #-28]	; 0xffffffe4
   4f05c:	b	4f0a0 <__assert_fail@plt+0x3c4e8>
   4f060:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4f064:	movw	r1, #0
   4f068:	str	r1, [r0, #8]
   4f06c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   4f070:	cmp	r0, r1
   4f074:	bne	4f088 <__assert_fail@plt+0x3c4d0>
   4f078:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4f07c:	str	r0, [fp, #-28]	; 0xffffffe4
   4f080:	str	r0, [sp, #40]	; 0x28
   4f084:	b	4f09c <__assert_fail@plt+0x3c4e4>
   4f088:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4f08c:	ldr	r1, [sp, #40]	; 0x28
   4f090:	str	r0, [r1, #8]
   4f094:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4f098:	str	r0, [sp, #40]	; 0x28
   4f09c:	b	4f0a0 <__assert_fail@plt+0x3c4e8>
   4f0a0:	b	4f0a4 <__assert_fail@plt+0x3c4ec>
   4f0a4:	ldr	r0, [fp, #-8]
   4f0a8:	add	r0, r0, #4
   4f0ac:	str	r0, [fp, #-8]
   4f0b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4f0b4:	add	r0, r0, #1
   4f0b8:	str	r0, [fp, #-32]	; 0xffffffe0
   4f0bc:	b	4eebc <__assert_fail@plt+0x3c304>
   4f0c0:	ldr	r0, [fp, #-16]
   4f0c4:	movw	r1, #0
   4f0c8:	cmp	r0, r1
   4f0cc:	beq	4f0f0 <__assert_fail@plt+0x3c538>
   4f0d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4f0d4:	cmp	r0, #1
   4f0d8:	bls	4f0f0 <__assert_fail@plt+0x3c538>
   4f0dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   4f0e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4f0e4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   4f0e8:	bl	4f6e8 <__assert_fail@plt+0x3cb30>
   4f0ec:	str	r0, [fp, #-28]	; 0xffffffe4
   4f0f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   4f0f4:	movw	r1, #29909	; 0x74d5
   4f0f8:	movt	r1, #7
   4f0fc:	movw	r2, #0
   4f100:	bl	4f380 <__assert_fail@plt+0x3c7c8>
   4f104:	ldr	r1, [fp, #-20]	; 0xffffffec
   4f108:	str	r0, [r1]
   4f10c:	movw	r1, #0
   4f110:	cmp	r0, r1
   4f114:	bne	4f11c <__assert_fail@plt+0x3c564>
   4f118:	b	4f1d4 <__assert_fail@plt+0x3c61c>
   4f11c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   4f120:	ldr	r1, [fp, #-20]	; 0xffffffec
   4f124:	ldr	r1, [r1]
   4f128:	str	r0, [r1, #8]
   4f12c:	ldr	r0, [fp, #-20]	; 0xffffffec
   4f130:	ldr	r0, [r0]
   4f134:	movw	r1, #9
   4f138:	strh	r1, [r0, #56]	; 0x38
   4f13c:	ldr	r0, [fp, #-20]	; 0xffffffec
   4f140:	ldr	r0, [r0]
   4f144:	movw	r1, #1
   4f148:	str	r1, [r0, #48]	; 0x30
   4f14c:	ldr	r0, [fp, #-20]	; 0xffffffec
   4f150:	bl	4f8b0 <__assert_fail@plt+0x3ccf8>
   4f154:	tst	r0, #1
   4f158:	bne	4f160 <__assert_fail@plt+0x3c5a8>
   4f15c:	b	4f1d4 <__assert_fail@plt+0x3c61c>
   4f160:	ldr	r0, [fp, #-20]	; 0xffffffec
   4f164:	ldr	r0, [r0, #48]	; 0x30
   4f168:	and	r0, r0, #4
   4f16c:	cmp	r0, #0
   4f170:	bne	4f1b8 <__assert_fail@plt+0x3c600>
   4f174:	ldr	r0, [fp, #-20]	; 0xffffffec
   4f178:	ldr	r0, [r0, #48]	; 0x30
   4f17c:	and	r0, r0, #512	; 0x200
   4f180:	cmp	r0, #0
   4f184:	bne	4f1b8 <__assert_fail@plt+0x3c600>
   4f188:	ldr	r0, [fp, #-20]	; 0xffffffec
   4f18c:	movw	r1, #26652	; 0x681c
   4f190:	movt	r1, #7
   4f194:	bl	4f98c <__assert_fail@plt+0x3cdd4>
   4f198:	ldr	r1, [fp, #-20]	; 0xffffffec
   4f19c:	str	r0, [r1, #28]
   4f1a0:	cmp	r0, #0
   4f1a4:	bge	4f1b8 <__assert_fail@plt+0x3c600>
   4f1a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   4f1ac:	ldr	r1, [r0, #48]	; 0x30
   4f1b0:	orr	r1, r1, #4
   4f1b4:	str	r1, [r0, #48]	; 0x30
   4f1b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   4f1bc:	add	r0, r0, #60	; 0x3c
   4f1c0:	mvn	r1, #0
   4f1c4:	bl	70ba8 <__assert_fail@plt+0x5dff0>
   4f1c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   4f1cc:	str	r0, [fp, #-4]
   4f1d0:	b	4f200 <__assert_fail@plt+0x3c648>
   4f1d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   4f1d8:	bl	4fa28 <__assert_fail@plt+0x3ce70>
   4f1dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   4f1e0:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   4f1e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   4f1e8:	ldr	r0, [r0, #24]
   4f1ec:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   4f1f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   4f1f4:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   4f1f8:	movw	r0, #0
   4f1fc:	str	r0, [fp, #-4]
   4f200:	ldr	r0, [fp, #-4]
   4f204:	mov	sp, fp
   4f208:	pop	{fp, pc}
   4f20c:			; <UNDEFINED> instruction: 0xfffff000
   4f210:	andeq	r0, r8, r0
   4f214:	push	{fp, lr}
   4f218:	mov	fp, sp
   4f21c:	sub	sp, sp, #16
   4f220:	str	r0, [fp, #-4]
   4f224:	movw	r0, #0
   4f228:	str	r0, [sp, #4]
   4f22c:	ldr	r0, [fp, #-4]
   4f230:	ldr	r0, [r0]
   4f234:	movw	r1, #0
   4f238:	cmp	r0, r1
   4f23c:	beq	4f278 <__assert_fail@plt+0x3c6c0>
   4f240:	ldr	r0, [fp, #-4]
   4f244:	ldr	r0, [r0]
   4f248:	bl	12888 <strlen@plt>
   4f24c:	str	r0, [sp, #8]
   4f250:	ldr	r1, [sp, #4]
   4f254:	cmp	r0, r1
   4f258:	bls	4f264 <__assert_fail@plt+0x3c6ac>
   4f25c:	ldr	r0, [sp, #8]
   4f260:	str	r0, [sp, #4]
   4f264:	b	4f268 <__assert_fail@plt+0x3c6b0>
   4f268:	ldr	r0, [fp, #-4]
   4f26c:	add	r0, r0, #4
   4f270:	str	r0, [fp, #-4]
   4f274:	b	4f22c <__assert_fail@plt+0x3c674>
   4f278:	ldr	r0, [sp, #4]
   4f27c:	add	r0, r0, #1
   4f280:	mov	sp, fp
   4f284:	pop	{fp, pc}
   4f288:	push	{fp, lr}
   4f28c:	mov	fp, sp
   4f290:	sub	sp, sp, #24
   4f294:	str	r0, [fp, #-8]
   4f298:	str	r1, [sp, #12]
   4f29c:	ldr	r0, [fp, #-8]
   4f2a0:	ldr	r0, [r0, #36]	; 0x24
   4f2a4:	ldr	r1, [sp, #12]
   4f2a8:	add	r0, r0, r1
   4f2ac:	add	r0, r0, #256	; 0x100
   4f2b0:	str	r0, [sp, #4]
   4f2b4:	ldr	r0, [sp, #4]
   4f2b8:	ldr	r1, [fp, #-8]
   4f2bc:	ldr	r1, [r1, #36]	; 0x24
   4f2c0:	cmp	r0, r1
   4f2c4:	bcs	4f2fc <__assert_fail@plt+0x3c744>
   4f2c8:	ldr	r0, [fp, #-8]
   4f2cc:	ldr	r0, [r0, #24]
   4f2d0:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   4f2d4:	ldr	r0, [fp, #-8]
   4f2d8:	movw	r1, #0
   4f2dc:	str	r1, [r0, #24]
   4f2e0:	bl	128d0 <__errno_location@plt>
   4f2e4:	movw	r1, #36	; 0x24
   4f2e8:	str	r1, [r0]
   4f2ec:	movw	r0, #0
   4f2f0:	and	r0, r0, #1
   4f2f4:	strb	r0, [fp, #-1]
   4f2f8:	b	4f370 <__assert_fail@plt+0x3c7b8>
   4f2fc:	ldr	r0, [sp, #4]
   4f300:	ldr	r1, [fp, #-8]
   4f304:	str	r0, [r1, #36]	; 0x24
   4f308:	ldr	r0, [fp, #-8]
   4f30c:	ldr	r0, [r0, #24]
   4f310:	ldr	r1, [fp, #-8]
   4f314:	ldr	r1, [r1, #36]	; 0x24
   4f318:	bl	538c8 <__assert_fail@plt+0x40d10>
   4f31c:	str	r0, [sp, #8]
   4f320:	ldr	r0, [sp, #8]
   4f324:	movw	r1, #0
   4f328:	cmp	r0, r1
   4f32c:	bne	4f358 <__assert_fail@plt+0x3c7a0>
   4f330:	ldr	r0, [fp, #-8]
   4f334:	ldr	r0, [r0, #24]
   4f338:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   4f33c:	ldr	r0, [fp, #-8]
   4f340:	movw	r1, #0
   4f344:	str	r1, [r0, #24]
   4f348:	movw	r0, #0
   4f34c:	and	r0, r0, #1
   4f350:	strb	r0, [fp, #-1]
   4f354:	b	4f370 <__assert_fail@plt+0x3c7b8>
   4f358:	ldr	r0, [sp, #8]
   4f35c:	ldr	r1, [fp, #-8]
   4f360:	str	r0, [r1, #24]
   4f364:	movw	r0, #1
   4f368:	and	r0, r0, #1
   4f36c:	strb	r0, [fp, #-1]
   4f370:	ldrb	r0, [fp, #-1]
   4f374:	and	r0, r0, #1
   4f378:	mov	sp, fp
   4f37c:	pop	{fp, pc}
   4f380:	push	{fp, lr}
   4f384:	mov	fp, sp
   4f388:	sub	sp, sp, #24
   4f38c:	str	r0, [fp, #-8]
   4f390:	str	r1, [sp, #12]
   4f394:	str	r2, [sp, #8]
   4f398:	ldr	r0, [sp, #8]
   4f39c:	add	r0, r0, #1
   4f3a0:	add	r0, r0, #175	; 0xaf
   4f3a4:	mvn	r1, #7
   4f3a8:	and	r0, r0, r1
   4f3ac:	str	r0, [sp]
   4f3b0:	ldr	r0, [sp]
   4f3b4:	bl	527f0 <__assert_fail@plt+0x3fc38>
   4f3b8:	str	r0, [sp, #4]
   4f3bc:	movw	r1, #0
   4f3c0:	cmp	r0, r1
   4f3c4:	bne	4f3d4 <__assert_fail@plt+0x3c81c>
   4f3c8:	movw	r0, #0
   4f3cc:	str	r0, [fp, #-4]
   4f3d0:	b	4f46c <__assert_fail@plt+0x3c8b4>
   4f3d4:	ldr	r0, [sp, #4]
   4f3d8:	add	r0, r0, #168	; 0xa8
   4f3dc:	ldr	r1, [sp, #12]
   4f3e0:	ldr	r2, [sp, #8]
   4f3e4:	bl	125c4 <memcpy@plt>
   4f3e8:	ldr	r0, [sp, #4]
   4f3ec:	add	r0, r0, #168	; 0xa8
   4f3f0:	ldr	r1, [sp, #8]
   4f3f4:	add	r0, r0, r1
   4f3f8:	movw	r1, #0
   4f3fc:	strb	r1, [r0]
   4f400:	ldr	r0, [sp, #8]
   4f404:	ldr	r1, [sp, #4]
   4f408:	str	r0, [r1, #52]	; 0x34
   4f40c:	ldr	r0, [fp, #-8]
   4f410:	ldr	r1, [sp, #4]
   4f414:	str	r0, [r1, #44]	; 0x2c
   4f418:	ldr	r0, [fp, #-8]
   4f41c:	ldr	r0, [r0, #24]
   4f420:	ldr	r1, [sp, #4]
   4f424:	str	r0, [r1, #28]
   4f428:	ldr	r0, [sp, #4]
   4f42c:	movw	r1, #0
   4f430:	str	r1, [r0, #32]
   4f434:	ldr	r0, [sp, #4]
   4f438:	str	r1, [r0, #12]
   4f43c:	ldr	r0, [sp, #4]
   4f440:	movw	r2, #0
   4f444:	strh	r2, [r0, #58]	; 0x3a
   4f448:	ldr	r0, [sp, #4]
   4f44c:	movw	r2, #3
   4f450:	strh	r2, [r0, #60]	; 0x3c
   4f454:	ldr	r0, [sp, #4]
   4f458:	str	r1, [r0, #16]
   4f45c:	ldr	r0, [sp, #4]
   4f460:	str	r1, [r0, #20]
   4f464:	ldr	r0, [sp, #4]
   4f468:	str	r0, [fp, #-4]
   4f46c:	ldr	r0, [fp, #-4]
   4f470:	mov	sp, fp
   4f474:	pop	{fp, pc}
   4f478:	push	{fp, lr}
   4f47c:	mov	fp, sp
   4f480:	sub	sp, sp, #8
   4f484:	str	r0, [sp, #4]
   4f488:	and	r0, r1, #1
   4f48c:	strb	r0, [sp, #3]
   4f490:	ldr	r0, [sp, #4]
   4f494:	ldrh	r0, [r0, #56]	; 0x38
   4f498:	cmp	r0, #11
   4f49c:	beq	4f4a4 <__assert_fail@plt+0x3c8ec>
   4f4a0:	bl	12b64 <abort@plt>
   4f4a4:	b	4f4a8 <__assert_fail@plt+0x3c8f0>
   4f4a8:	ldrb	r0, [sp, #3]
   4f4ac:	mov	r1, #1
   4f4b0:	tst	r0, #1
   4f4b4:	movwne	r1, #2
   4f4b8:	ldr	r0, [sp, #4]
   4f4bc:	mov	r2, #0
   4f4c0:	str	r2, [r0, #116]	; 0x74
   4f4c4:	str	r1, [r0, #112]	; 0x70
   4f4c8:	mov	sp, fp
   4f4cc:	pop	{fp, pc}
   4f4d0:	push	{fp, lr}
   4f4d4:	mov	fp, sp
   4f4d8:	sub	sp, sp, #24
   4f4dc:	str	r0, [fp, #-8]
   4f4e0:	str	r1, [sp, #12]
   4f4e4:	and	r0, r2, #1
   4f4e8:	strb	r0, [sp, #11]
   4f4ec:	ldr	r0, [sp, #12]
   4f4f0:	add	r0, r0, #64	; 0x40
   4f4f4:	str	r0, [sp, #4]
   4f4f8:	ldr	r0, [sp, #12]
   4f4fc:	ldr	r0, [r0, #48]	; 0x30
   4f500:	cmp	r0, #0
   4f504:	bne	4f524 <__assert_fail@plt+0x3c96c>
   4f508:	ldr	r0, [fp, #-8]
   4f50c:	ldr	r0, [r0, #48]	; 0x30
   4f510:	and	r0, r0, #1
   4f514:	cmp	r0, #0
   4f518:	beq	4f524 <__assert_fail@plt+0x3c96c>
   4f51c:	movw	r0, #1
   4f520:	strb	r0, [sp, #11]
   4f524:	ldr	r0, [fp, #-8]
   4f528:	ldr	r0, [r0, #48]	; 0x30
   4f52c:	and	r0, r0, #2
   4f530:	cmp	r0, #0
   4f534:	bne	4f544 <__assert_fail@plt+0x3c98c>
   4f538:	ldrb	r0, [sp, #11]
   4f53c:	tst	r0, #1
   4f540:	beq	4f5b4 <__assert_fail@plt+0x3c9fc>
   4f544:	ldr	r0, [sp, #12]
   4f548:	ldr	r0, [r0, #24]
   4f54c:	ldr	r1, [sp, #4]
   4f550:	bl	7563c <__assert_fail@plt+0x62a84>
   4f554:	cmp	r0, #0
   4f558:	beq	4f5b0 <__assert_fail@plt+0x3c9f8>
   4f55c:	bl	128d0 <__errno_location@plt>
   4f560:	ldr	r0, [r0]
   4f564:	cmp	r0, #2
   4f568:	bne	4f59c <__assert_fail@plt+0x3c9e4>
   4f56c:	ldr	r0, [sp, #12]
   4f570:	ldr	r0, [r0, #24]
   4f574:	ldr	r1, [sp, #4]
   4f578:	bl	7565c <__assert_fail@plt+0x62aa4>
   4f57c:	cmp	r0, #0
   4f580:	bne	4f59c <__assert_fail@plt+0x3c9e4>
   4f584:	bl	128d0 <__errno_location@plt>
   4f588:	movw	r1, #0
   4f58c:	str	r1, [r0]
   4f590:	movw	r0, #13
   4f594:	strh	r0, [fp, #-2]
   4f598:	b	4f6dc <__assert_fail@plt+0x3cb24>
   4f59c:	bl	128d0 <__errno_location@plt>
   4f5a0:	ldr	r0, [r0]
   4f5a4:	ldr	r1, [sp, #12]
   4f5a8:	str	r0, [r1, #32]
   4f5ac:	b	4f5e8 <__assert_fail@plt+0x3ca30>
   4f5b0:	b	4f60c <__assert_fail@plt+0x3ca54>
   4f5b4:	ldr	r0, [fp, #-8]
   4f5b8:	ldr	r0, [r0, #32]
   4f5bc:	ldr	r1, [sp, #12]
   4f5c0:	ldr	r1, [r1, #24]
   4f5c4:	ldr	r2, [sp, #4]
   4f5c8:	movw	r3, #256	; 0x100
   4f5cc:	bl	7566c <__assert_fail@plt+0x62ab4>
   4f5d0:	cmp	r0, #0
   4f5d4:	beq	4f608 <__assert_fail@plt+0x3ca50>
   4f5d8:	bl	128d0 <__errno_location@plt>
   4f5dc:	ldr	r0, [r0]
   4f5e0:	ldr	r1, [sp, #12]
   4f5e4:	str	r0, [r1, #32]
   4f5e8:	ldr	r0, [sp, #4]
   4f5ec:	movw	r1, #0
   4f5f0:	and	r1, r1, #255	; 0xff
   4f5f4:	movw	r2, #104	; 0x68
   4f5f8:	bl	12900 <memset@plt>
   4f5fc:	movw	r0, #10
   4f600:	strh	r0, [fp, #-2]
   4f604:	b	4f6dc <__assert_fail@plt+0x3cb24>
   4f608:	b	4f60c <__assert_fail@plt+0x3ca54>
   4f60c:	ldr	r0, [sp, #4]
   4f610:	ldr	r0, [r0, #16]
   4f614:	and	r0, r0, #61440	; 0xf000
   4f618:	cmp	r0, #16384	; 0x4000
   4f61c:	bne	4f694 <__assert_fail@plt+0x3cadc>
   4f620:	ldr	r0, [sp, #12]
   4f624:	ldrb	r0, [r0, #168]	; 0xa8
   4f628:	cmp	r0, #46	; 0x2e
   4f62c:	bne	4f688 <__assert_fail@plt+0x3cad0>
   4f630:	ldr	r0, [sp, #12]
   4f634:	ldrsb	r0, [r0, #169]	; 0xa9
   4f638:	cmp	r0, #0
   4f63c:	beq	4f660 <__assert_fail@plt+0x3caa8>
   4f640:	ldr	r0, [sp, #12]
   4f644:	ldrb	r0, [r0, #169]	; 0xa9
   4f648:	cmp	r0, #46	; 0x2e
   4f64c:	bne	4f688 <__assert_fail@plt+0x3cad0>
   4f650:	ldr	r0, [sp, #12]
   4f654:	ldrsb	r0, [r0, #170]	; 0xaa
   4f658:	cmp	r0, #0
   4f65c:	bne	4f688 <__assert_fail@plt+0x3cad0>
   4f660:	ldr	r0, [sp, #12]
   4f664:	ldr	r0, [r0, #48]	; 0x30
   4f668:	cmp	r0, #0
   4f66c:	movw	r0, #0
   4f670:	moveq	r0, #1
   4f674:	tst	r0, #1
   4f678:	movw	r0, #1
   4f67c:	moveq	r0, #5
   4f680:	strh	r0, [fp, #-2]
   4f684:	b	4f6dc <__assert_fail@plt+0x3cb24>
   4f688:	movw	r0, #1
   4f68c:	strh	r0, [fp, #-2]
   4f690:	b	4f6dc <__assert_fail@plt+0x3cb24>
   4f694:	ldr	r0, [sp, #4]
   4f698:	ldr	r0, [r0, #16]
   4f69c:	and	r0, r0, #61440	; 0xf000
   4f6a0:	cmp	r0, #40960	; 0xa000
   4f6a4:	bne	4f6b4 <__assert_fail@plt+0x3cafc>
   4f6a8:	movw	r0, #12
   4f6ac:	strh	r0, [fp, #-2]
   4f6b0:	b	4f6dc <__assert_fail@plt+0x3cb24>
   4f6b4:	ldr	r0, [sp, #4]
   4f6b8:	ldr	r0, [r0, #16]
   4f6bc:	and	r0, r0, #61440	; 0xf000
   4f6c0:	cmp	r0, #32768	; 0x8000
   4f6c4:	bne	4f6d4 <__assert_fail@plt+0x3cb1c>
   4f6c8:	movw	r0, #8
   4f6cc:	strh	r0, [fp, #-2]
   4f6d0:	b	4f6dc <__assert_fail@plt+0x3cb24>
   4f6d4:	movw	r0, #3
   4f6d8:	strh	r0, [fp, #-2]
   4f6dc:	ldrh	r0, [fp, #-2]
   4f6e0:	mov	sp, fp
   4f6e4:	pop	{fp, pc}
   4f6e8:	push	{fp, lr}
   4f6ec:	mov	fp, sp
   4f6f0:	sub	sp, sp, #48	; 0x30
   4f6f4:	add	r3, sp, #20
   4f6f8:	str	r0, [fp, #-8]
   4f6fc:	str	r1, [fp, #-12]
   4f700:	str	r2, [fp, #-16]
   4f704:	mov	r0, r3
   4f708:	cmp	r3, r0
   4f70c:	bne	4f720 <__assert_fail@plt+0x3cb68>
   4f710:	ldr	r0, [fp, #-8]
   4f714:	ldr	r0, [r0, #44]	; 0x2c
   4f718:	str	r0, [sp, #8]
   4f71c:	b	4f730 <__assert_fail@plt+0x3cb78>
   4f720:	movw	r0, #9804	; 0x264c
   4f724:	movt	r0, #5
   4f728:	str	r0, [sp, #8]
   4f72c:	b	4f730 <__assert_fail@plt+0x3cb78>
   4f730:	ldr	r0, [sp, #8]
   4f734:	str	r0, [sp, #16]
   4f738:	ldr	r0, [fp, #-16]
   4f73c:	ldr	r1, [fp, #-8]
   4f740:	ldr	r1, [r1, #40]	; 0x28
   4f744:	cmp	r0, r1
   4f748:	bls	4f7d8 <__assert_fail@plt+0x3cc20>
   4f74c:	ldr	r0, [pc, #344]	; 4f8ac <__assert_fail@plt+0x3ccf4>
   4f750:	ldr	r1, [fp, #-16]
   4f754:	add	r1, r1, #40	; 0x28
   4f758:	ldr	r2, [fp, #-8]
   4f75c:	str	r1, [r2, #40]	; 0x28
   4f760:	ldr	r1, [fp, #-8]
   4f764:	ldr	r1, [r1, #40]	; 0x28
   4f768:	cmp	r0, r1
   4f76c:	bcc	4f7a0 <__assert_fail@plt+0x3cbe8>
   4f770:	ldr	r0, [fp, #-8]
   4f774:	ldr	r1, [r0, #8]
   4f778:	ldr	r0, [r0, #40]	; 0x28
   4f77c:	lsl	r0, r0, #2
   4f780:	str	r0, [sp, #4]
   4f784:	mov	r0, r1
   4f788:	ldr	r1, [sp, #4]
   4f78c:	bl	538c8 <__assert_fail@plt+0x40d10>
   4f790:	str	r0, [sp, #12]
   4f794:	movw	r1, #0
   4f798:	cmp	r0, r1
   4f79c:	bne	4f7cc <__assert_fail@plt+0x3cc14>
   4f7a0:	ldr	r0, [fp, #-8]
   4f7a4:	ldr	r0, [r0, #8]
   4f7a8:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   4f7ac:	ldr	r0, [fp, #-8]
   4f7b0:	movw	r1, #0
   4f7b4:	str	r1, [r0, #8]
   4f7b8:	ldr	r0, [fp, #-8]
   4f7bc:	str	r1, [r0, #40]	; 0x28
   4f7c0:	ldr	r0, [fp, #-12]
   4f7c4:	str	r0, [fp, #-4]
   4f7c8:	b	4f8a0 <__assert_fail@plt+0x3cce8>
   4f7cc:	ldr	r0, [sp, #12]
   4f7d0:	ldr	r1, [fp, #-8]
   4f7d4:	str	r0, [r1, #8]
   4f7d8:	ldr	r0, [fp, #-8]
   4f7dc:	ldr	r0, [r0, #8]
   4f7e0:	str	r0, [fp, #-20]	; 0xffffffec
   4f7e4:	ldr	r0, [fp, #-12]
   4f7e8:	str	r0, [sp, #24]
   4f7ec:	ldr	r0, [sp, #24]
   4f7f0:	movw	r1, #0
   4f7f4:	cmp	r0, r1
   4f7f8:	beq	4f820 <__assert_fail@plt+0x3cc68>
   4f7fc:	ldr	r0, [sp, #24]
   4f800:	ldr	r1, [fp, #-20]	; 0xffffffec
   4f804:	add	r2, r1, #4
   4f808:	str	r2, [fp, #-20]	; 0xffffffec
   4f80c:	str	r0, [r1]
   4f810:	ldr	r0, [sp, #24]
   4f814:	ldr	r0, [r0, #8]
   4f818:	str	r0, [sp, #24]
   4f81c:	b	4f7ec <__assert_fail@plt+0x3cc34>
   4f820:	ldr	r0, [fp, #-8]
   4f824:	ldr	r0, [r0, #8]
   4f828:	ldr	r1, [fp, #-16]
   4f82c:	ldr	r3, [sp, #16]
   4f830:	movw	r2, #4
   4f834:	bl	12abc <qsort@plt>
   4f838:	ldr	r0, [fp, #-8]
   4f83c:	ldr	r0, [r0, #8]
   4f840:	str	r0, [fp, #-20]	; 0xffffffec
   4f844:	ldr	r0, [r0]
   4f848:	str	r0, [fp, #-12]
   4f84c:	ldr	r0, [fp, #-16]
   4f850:	mvn	r1, #0
   4f854:	add	r0, r0, r1
   4f858:	str	r0, [fp, #-16]
   4f85c:	cmp	r0, #0
   4f860:	beq	4f888 <__assert_fail@plt+0x3ccd0>
   4f864:	ldr	r0, [fp, #-20]	; 0xffffffec
   4f868:	ldr	r0, [r0, #4]
   4f86c:	ldr	r1, [fp, #-20]	; 0xffffffec
   4f870:	ldr	r1, [r1]
   4f874:	str	r0, [r1, #8]
   4f878:	ldr	r0, [fp, #-20]	; 0xffffffec
   4f87c:	add	r0, r0, #4
   4f880:	str	r0, [fp, #-20]	; 0xffffffec
   4f884:	b	4f84c <__assert_fail@plt+0x3cc94>
   4f888:	ldr	r0, [fp, #-20]	; 0xffffffec
   4f88c:	ldr	r0, [r0]
   4f890:	movw	r1, #0
   4f894:	str	r1, [r0, #8]
   4f898:	ldr	r0, [fp, #-12]
   4f89c:	str	r0, [fp, #-4]
   4f8a0:	ldr	r0, [fp, #-4]
   4f8a4:	mov	sp, fp
   4f8a8:	pop	{fp, pc}
   4f8ac:	svccc	0x00ffffff
   4f8b0:	push	{fp, lr}
   4f8b4:	mov	fp, sp
   4f8b8:	sub	sp, sp, #16
   4f8bc:	str	r0, [sp, #8]
   4f8c0:	ldr	r0, [sp, #8]
   4f8c4:	ldr	r0, [r0, #48]	; 0x30
   4f8c8:	movw	r1, #258	; 0x102
   4f8cc:	and	r0, r0, r1
   4f8d0:	cmp	r0, #0
   4f8d4:	beq	4f930 <__assert_fail@plt+0x3cd78>
   4f8d8:	movw	r0, #31
   4f8dc:	movw	r1, #0
   4f8e0:	movw	r2, #7984	; 0x1f30
   4f8e4:	movt	r2, #5
   4f8e8:	movw	r3, #8064	; 0x1f80
   4f8ec:	movt	r3, #5
   4f8f0:	movw	ip, #60164	; 0xeb04
   4f8f4:	movt	ip, #4
   4f8f8:	str	ip, [sp]
   4f8fc:	bl	2d364 <__assert_fail@plt+0x1a7ac>
   4f900:	ldr	r1, [sp, #8]
   4f904:	str	r0, [r1, #56]	; 0x38
   4f908:	ldr	r0, [sp, #8]
   4f90c:	ldr	r0, [r0, #56]	; 0x38
   4f910:	movw	r1, #0
   4f914:	cmp	r0, r1
   4f918:	bne	4f92c <__assert_fail@plt+0x3cd74>
   4f91c:	movw	r0, #0
   4f920:	and	r0, r0, #1
   4f924:	strb	r0, [fp, #-1]
   4f928:	b	4f97c <__assert_fail@plt+0x3cdc4>
   4f92c:	b	4f970 <__assert_fail@plt+0x3cdb8>
   4f930:	movw	r0, #32
   4f934:	bl	527f0 <__assert_fail@plt+0x3fc38>
   4f938:	ldr	r1, [sp, #8]
   4f93c:	str	r0, [r1, #56]	; 0x38
   4f940:	ldr	r0, [sp, #8]
   4f944:	ldr	r0, [r0, #56]	; 0x38
   4f948:	movw	r1, #0
   4f94c:	cmp	r0, r1
   4f950:	bne	4f964 <__assert_fail@plt+0x3cdac>
   4f954:	movw	r0, #0
   4f958:	and	r0, r0, #1
   4f95c:	strb	r0, [fp, #-1]
   4f960:	b	4f97c <__assert_fail@plt+0x3cdc4>
   4f964:	ldr	r0, [sp, #8]
   4f968:	ldr	r0, [r0, #56]	; 0x38
   4f96c:	bl	6f4b0 <__assert_fail@plt+0x5c8f8>
   4f970:	movw	r0, #1
   4f974:	and	r0, r0, #1
   4f978:	strb	r0, [fp, #-1]
   4f97c:	ldrb	r0, [fp, #-1]
   4f980:	and	r0, r0, #1
   4f984:	mov	sp, fp
   4f988:	pop	{fp, pc}
   4f98c:	push	{fp, lr}
   4f990:	mov	fp, sp
   4f994:	sub	sp, sp, #24
   4f998:	ldr	r2, [pc, #132]	; 4fa24 <__assert_fail@plt+0x3ce6c>
   4f99c:	str	r0, [fp, #-4]
   4f9a0:	str	r1, [fp, #-8]
   4f9a4:	ldr	r0, [fp, #-4]
   4f9a8:	ldr	r0, [r0, #48]	; 0x30
   4f9ac:	and	r0, r0, #16
   4f9b0:	cmp	r0, #0
   4f9b4:	movw	r0, #0
   4f9b8:	movne	r0, #1
   4f9bc:	tst	r0, #1
   4f9c0:	movw	r0, #32768	; 0x8000
   4f9c4:	moveq	r0, #0
   4f9c8:	orr	r0, r0, r2
   4f9cc:	str	r0, [sp, #12]
   4f9d0:	ldr	r0, [fp, #-4]
   4f9d4:	ldr	r0, [r0, #48]	; 0x30
   4f9d8:	and	r0, r0, #512	; 0x200
   4f9dc:	cmp	r0, #0
   4f9e0:	beq	4fa00 <__assert_fail@plt+0x3ce48>
   4f9e4:	ldr	r0, [fp, #-4]
   4f9e8:	ldr	r0, [r0, #32]
   4f9ec:	ldr	r1, [fp, #-8]
   4f9f0:	ldr	r2, [sp, #12]
   4f9f4:	bl	32480 <__assert_fail@plt+0x1f8c8>
   4f9f8:	str	r0, [sp, #4]
   4f9fc:	b	4fa10 <__assert_fail@plt+0x3ce58>
   4fa00:	ldr	r0, [fp, #-8]
   4fa04:	ldr	r1, [sp, #12]
   4fa08:	bl	2c5a4 <__assert_fail@plt+0x199ec>
   4fa0c:	str	r0, [sp, #4]
   4fa10:	ldr	r0, [sp, #4]
   4fa14:	str	r0, [sp, #8]
   4fa18:	ldr	r0, [sp, #8]
   4fa1c:	mov	sp, fp
   4fa20:	pop	{fp, pc}
   4fa24:	andeq	r4, r8, r0, lsl #18
   4fa28:	push	{fp, lr}
   4fa2c:	mov	fp, sp
   4fa30:	sub	sp, sp, #8
   4fa34:	str	r0, [sp, #4]
   4fa38:	ldr	r0, [sp, #4]
   4fa3c:	str	r0, [sp]
   4fa40:	movw	r1, #0
   4fa44:	cmp	r0, r1
   4fa48:	beq	4fa84 <__assert_fail@plt+0x3cecc>
   4fa4c:	ldr	r0, [sp, #4]
   4fa50:	ldr	r0, [r0, #8]
   4fa54:	str	r0, [sp, #4]
   4fa58:	ldr	r0, [sp]
   4fa5c:	ldr	r0, [r0, #12]
   4fa60:	movw	r1, #0
   4fa64:	cmp	r0, r1
   4fa68:	beq	4fa78 <__assert_fail@plt+0x3cec0>
   4fa6c:	ldr	r0, [sp]
   4fa70:	ldr	r0, [r0, #12]
   4fa74:	bl	12b88 <closedir@plt>
   4fa78:	ldr	r0, [sp]
   4fa7c:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   4fa80:	b	4fa38 <__assert_fail@plt+0x3ce80>
   4fa84:	mov	sp, fp
   4fa88:	pop	{fp, pc}
   4fa8c:	push	{fp, lr}
   4fa90:	mov	fp, sp
   4fa94:	sub	sp, sp, #32
   4fa98:	str	r0, [fp, #-8]
   4fa9c:	movw	r0, #0
   4faa0:	str	r0, [sp, #12]
   4faa4:	ldr	r1, [fp, #-8]
   4faa8:	ldr	r1, [r1]
   4faac:	cmp	r1, r0
   4fab0:	beq	4fb24 <__assert_fail@plt+0x3cf6c>
   4fab4:	ldr	r0, [fp, #-8]
   4fab8:	ldr	r0, [r0]
   4fabc:	str	r0, [sp, #16]
   4fac0:	ldr	r0, [sp, #16]
   4fac4:	ldr	r0, [r0, #48]	; 0x30
   4fac8:	cmp	r0, #0
   4facc:	blt	4fb1c <__assert_fail@plt+0x3cf64>
   4fad0:	ldr	r0, [sp, #16]
   4fad4:	str	r0, [fp, #-12]
   4fad8:	ldr	r0, [sp, #16]
   4fadc:	ldr	r0, [r0, #8]
   4fae0:	movw	r1, #0
   4fae4:	cmp	r0, r1
   4fae8:	beq	4fafc <__assert_fail@plt+0x3cf44>
   4faec:	ldr	r0, [sp, #16]
   4faf0:	ldr	r0, [r0, #8]
   4faf4:	str	r0, [sp, #8]
   4faf8:	b	4fb08 <__assert_fail@plt+0x3cf50>
   4fafc:	ldr	r0, [sp, #16]
   4fb00:	ldr	r0, [r0, #4]
   4fb04:	str	r0, [sp, #8]
   4fb08:	ldr	r0, [sp, #8]
   4fb0c:	str	r0, [sp, #16]
   4fb10:	ldr	r0, [fp, #-12]
   4fb14:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   4fb18:	b	4fac0 <__assert_fail@plt+0x3cf08>
   4fb1c:	ldr	r0, [sp, #16]
   4fb20:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   4fb24:	ldr	r0, [fp, #-8]
   4fb28:	ldr	r0, [r0, #4]
   4fb2c:	movw	r1, #0
   4fb30:	cmp	r0, r1
   4fb34:	beq	4fb44 <__assert_fail@plt+0x3cf8c>
   4fb38:	ldr	r0, [fp, #-8]
   4fb3c:	ldr	r0, [r0, #4]
   4fb40:	bl	4fa28 <__assert_fail@plt+0x3ce70>
   4fb44:	ldr	r0, [fp, #-8]
   4fb48:	ldr	r0, [r0, #8]
   4fb4c:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   4fb50:	ldr	r0, [fp, #-8]
   4fb54:	ldr	r0, [r0, #24]
   4fb58:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   4fb5c:	ldr	r0, [fp, #-8]
   4fb60:	ldr	r0, [r0, #48]	; 0x30
   4fb64:	and	r0, r0, #512	; 0x200
   4fb68:	cmp	r0, #0
   4fb6c:	beq	4fbac <__assert_fail@plt+0x3cff4>
   4fb70:	ldr	r0, [fp, #-8]
   4fb74:	ldr	r0, [r0, #32]
   4fb78:	movw	r1, #0
   4fb7c:	cmp	r1, r0
   4fb80:	bgt	4fba8 <__assert_fail@plt+0x3cff0>
   4fb84:	ldr	r0, [fp, #-8]
   4fb88:	ldr	r0, [r0, #32]
   4fb8c:	bl	12b70 <close@plt>
   4fb90:	cmp	r0, #0
   4fb94:	beq	4fba4 <__assert_fail@plt+0x3cfec>
   4fb98:	bl	128d0 <__errno_location@plt>
   4fb9c:	ldr	r0, [r0]
   4fba0:	str	r0, [sp, #12]
   4fba4:	b	4fba8 <__assert_fail@plt+0x3cff0>
   4fba8:	b	4fc18 <__assert_fail@plt+0x3d060>
   4fbac:	ldr	r0, [fp, #-8]
   4fbb0:	ldr	r0, [r0, #48]	; 0x30
   4fbb4:	and	r0, r0, #4
   4fbb8:	cmp	r0, #0
   4fbbc:	bne	4fc14 <__assert_fail@plt+0x3d05c>
   4fbc0:	ldr	r0, [fp, #-8]
   4fbc4:	ldr	r0, [r0, #28]
   4fbc8:	bl	12aa4 <fchdir@plt>
   4fbcc:	cmp	r0, #0
   4fbd0:	beq	4fbe0 <__assert_fail@plt+0x3d028>
   4fbd4:	bl	128d0 <__errno_location@plt>
   4fbd8:	ldr	r0, [r0]
   4fbdc:	str	r0, [sp, #12]
   4fbe0:	ldr	r0, [fp, #-8]
   4fbe4:	ldr	r0, [r0, #28]
   4fbe8:	bl	12b70 <close@plt>
   4fbec:	cmp	r0, #0
   4fbf0:	beq	4fc10 <__assert_fail@plt+0x3d058>
   4fbf4:	ldr	r0, [sp, #12]
   4fbf8:	cmp	r0, #0
   4fbfc:	bne	4fc0c <__assert_fail@plt+0x3d054>
   4fc00:	bl	128d0 <__errno_location@plt>
   4fc04:	ldr	r0, [r0]
   4fc08:	str	r0, [sp, #12]
   4fc0c:	b	4fc10 <__assert_fail@plt+0x3d058>
   4fc10:	b	4fc14 <__assert_fail@plt+0x3d05c>
   4fc14:	b	4fc18 <__assert_fail@plt+0x3d060>
   4fc18:	ldr	r0, [fp, #-8]
   4fc1c:	add	r0, r0, #60	; 0x3c
   4fc20:	bl	4fc94 <__assert_fail@plt+0x3d0dc>
   4fc24:	ldr	r0, [fp, #-8]
   4fc28:	ldr	r0, [r0, #52]	; 0x34
   4fc2c:	movw	r1, #0
   4fc30:	cmp	r0, r1
   4fc34:	beq	4fc44 <__assert_fail@plt+0x3d08c>
   4fc38:	ldr	r0, [fp, #-8]
   4fc3c:	ldr	r0, [r0, #52]	; 0x34
   4fc40:	bl	2d8b4 <__assert_fail@plt+0x1acfc>
   4fc44:	ldr	r0, [fp, #-8]
   4fc48:	bl	4fcec <__assert_fail@plt+0x3d134>
   4fc4c:	ldr	r0, [fp, #-8]
   4fc50:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   4fc54:	ldr	r0, [sp, #12]
   4fc58:	cmp	r0, #0
   4fc5c:	beq	4fc80 <__assert_fail@plt+0x3d0c8>
   4fc60:	ldr	r0, [sp, #12]
   4fc64:	str	r0, [sp, #4]
   4fc68:	bl	128d0 <__errno_location@plt>
   4fc6c:	ldr	r1, [sp, #4]
   4fc70:	str	r1, [r0]
   4fc74:	mvn	r0, #0
   4fc78:	str	r0, [fp, #-4]
   4fc7c:	b	4fc88 <__assert_fail@plt+0x3d0d0>
   4fc80:	movw	r0, #0
   4fc84:	str	r0, [fp, #-4]
   4fc88:	ldr	r0, [fp, #-4]
   4fc8c:	mov	sp, fp
   4fc90:	pop	{fp, pc}
   4fc94:	push	{fp, lr}
   4fc98:	mov	fp, sp
   4fc9c:	sub	sp, sp, #8
   4fca0:	str	r0, [sp, #4]
   4fca4:	ldr	r0, [sp, #4]
   4fca8:	bl	70c1c <__assert_fail@plt+0x5e064>
   4fcac:	mvn	r1, #0
   4fcb0:	eor	r0, r0, r1
   4fcb4:	tst	r0, #1
   4fcb8:	beq	4fce4 <__assert_fail@plt+0x3d12c>
   4fcbc:	ldr	r0, [sp, #4]
   4fcc0:	bl	70cec <__assert_fail@plt+0x5e134>
   4fcc4:	str	r0, [sp]
   4fcc8:	ldr	r0, [sp]
   4fccc:	movw	r1, #0
   4fcd0:	cmp	r1, r0
   4fcd4:	bgt	4fce0 <__assert_fail@plt+0x3d128>
   4fcd8:	ldr	r0, [sp]
   4fcdc:	bl	12b70 <close@plt>
   4fce0:	b	4fca4 <__assert_fail@plt+0x3d0ec>
   4fce4:	mov	sp, fp
   4fce8:	pop	{fp, pc}
   4fcec:	push	{fp, lr}
   4fcf0:	mov	fp, sp
   4fcf4:	sub	sp, sp, #8
   4fcf8:	str	r0, [sp, #4]
   4fcfc:	ldr	r0, [sp, #4]
   4fd00:	ldr	r0, [r0, #48]	; 0x30
   4fd04:	movw	r1, #258	; 0x102
   4fd08:	and	r0, r0, r1
   4fd0c:	cmp	r0, #0
   4fd10:	beq	4fd38 <__assert_fail@plt+0x3d180>
   4fd14:	ldr	r0, [sp, #4]
   4fd18:	ldr	r0, [r0, #56]	; 0x38
   4fd1c:	movw	r1, #0
   4fd20:	cmp	r0, r1
   4fd24:	beq	4fd34 <__assert_fail@plt+0x3d17c>
   4fd28:	ldr	r0, [sp, #4]
   4fd2c:	ldr	r0, [r0, #56]	; 0x38
   4fd30:	bl	2d8b4 <__assert_fail@plt+0x1acfc>
   4fd34:	b	4fd44 <__assert_fail@plt+0x3d18c>
   4fd38:	ldr	r0, [sp, #4]
   4fd3c:	ldr	r0, [r0, #56]	; 0x38
   4fd40:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   4fd44:	mov	sp, fp
   4fd48:	pop	{fp, pc}
   4fd4c:	push	{fp, lr}
   4fd50:	mov	fp, sp
   4fd54:	sub	sp, sp, #40	; 0x28
   4fd58:	str	r0, [fp, #-8]
   4fd5c:	ldr	r0, [fp, #-8]
   4fd60:	ldr	r0, [r0]
   4fd64:	movw	r1, #0
   4fd68:	cmp	r0, r1
   4fd6c:	beq	4fd84 <__assert_fail@plt+0x3d1cc>
   4fd70:	ldr	r0, [fp, #-8]
   4fd74:	ldr	r0, [r0, #48]	; 0x30
   4fd78:	and	r0, r0, #8192	; 0x2000
   4fd7c:	cmp	r0, #0
   4fd80:	beq	4fd90 <__assert_fail@plt+0x3d1d8>
   4fd84:	movw	r0, #0
   4fd88:	str	r0, [fp, #-4]
   4fd8c:	b	50720 <__assert_fail@plt+0x3db68>
   4fd90:	ldr	r0, [fp, #-8]
   4fd94:	ldr	r0, [r0]
   4fd98:	str	r0, [fp, #-12]
   4fd9c:	ldr	r0, [fp, #-12]
   4fda0:	ldrh	r0, [r0, #60]	; 0x3c
   4fda4:	strh	r0, [fp, #-18]	; 0xffffffee
   4fda8:	ldr	r0, [fp, #-12]
   4fdac:	movw	r1, #3
   4fdb0:	strh	r1, [r0, #60]	; 0x3c
   4fdb4:	ldrh	r0, [fp, #-18]	; 0xffffffee
   4fdb8:	cmp	r0, #1
   4fdbc:	bne	4fde8 <__assert_fail@plt+0x3d230>
   4fdc0:	ldr	r0, [fp, #-8]
   4fdc4:	ldr	r1, [fp, #-12]
   4fdc8:	movw	r2, #0
   4fdcc:	and	r2, r2, #1
   4fdd0:	bl	4f4d0 <__assert_fail@plt+0x3c918>
   4fdd4:	ldr	r1, [fp, #-12]
   4fdd8:	strh	r0, [r1, #56]	; 0x38
   4fddc:	ldr	r0, [fp, #-12]
   4fde0:	str	r0, [fp, #-4]
   4fde4:	b	50720 <__assert_fail@plt+0x3db68>
   4fde8:	ldrh	r0, [fp, #-18]	; 0xffffffee
   4fdec:	cmp	r0, #2
   4fdf0:	bne	4feac <__assert_fail@plt+0x3d2f4>
   4fdf4:	ldr	r0, [fp, #-12]
   4fdf8:	ldrh	r0, [r0, #56]	; 0x38
   4fdfc:	cmp	r0, #12
   4fe00:	beq	4fe14 <__assert_fail@plt+0x3d25c>
   4fe04:	ldr	r0, [fp, #-12]
   4fe08:	ldrh	r0, [r0, #56]	; 0x38
   4fe0c:	cmp	r0, #13
   4fe10:	bne	4feac <__assert_fail@plt+0x3d2f4>
   4fe14:	ldr	r0, [fp, #-8]
   4fe18:	ldr	r1, [fp, #-12]
   4fe1c:	movw	r2, #1
   4fe20:	and	r2, r2, #1
   4fe24:	bl	4f4d0 <__assert_fail@plt+0x3c918>
   4fe28:	ldr	r1, [fp, #-12]
   4fe2c:	strh	r0, [r1, #56]	; 0x38
   4fe30:	ldr	r0, [fp, #-12]
   4fe34:	ldrh	r0, [r0, #56]	; 0x38
   4fe38:	cmp	r0, #1
   4fe3c:	bne	4fea8 <__assert_fail@plt+0x3d2f0>
   4fe40:	ldr	r0, [fp, #-8]
   4fe44:	ldr	r0, [r0, #48]	; 0x30
   4fe48:	and	r0, r0, #4
   4fe4c:	cmp	r0, #0
   4fe50:	bne	4fea8 <__assert_fail@plt+0x3d2f0>
   4fe54:	ldr	r0, [fp, #-8]
   4fe58:	movw	r1, #26652	; 0x681c
   4fe5c:	movt	r1, #7
   4fe60:	bl	4f98c <__assert_fail@plt+0x3cdd4>
   4fe64:	ldr	r1, [fp, #-12]
   4fe68:	str	r0, [r1, #36]	; 0x24
   4fe6c:	cmp	r0, #0
   4fe70:	bge	4fe94 <__assert_fail@plt+0x3d2dc>
   4fe74:	bl	128d0 <__errno_location@plt>
   4fe78:	ldr	r0, [r0]
   4fe7c:	ldr	r1, [fp, #-12]
   4fe80:	str	r0, [r1, #32]
   4fe84:	ldr	r0, [fp, #-12]
   4fe88:	movw	r1, #7
   4fe8c:	strh	r1, [r0, #56]	; 0x38
   4fe90:	b	4fea4 <__assert_fail@plt+0x3d2ec>
   4fe94:	ldr	r0, [fp, #-12]
   4fe98:	ldrh	r1, [r0, #58]	; 0x3a
   4fe9c:	orr	r1, r1, #2
   4fea0:	strh	r1, [r0, #58]	; 0x3a
   4fea4:	b	4fea8 <__assert_fail@plt+0x3d2f0>
   4fea8:	b	503bc <__assert_fail@plt+0x3d804>
   4feac:	ldr	r0, [fp, #-12]
   4feb0:	ldrh	r0, [r0, #56]	; 0x38
   4feb4:	cmp	r0, #1
   4feb8:	bne	50114 <__assert_fail@plt+0x3d55c>
   4febc:	ldrh	r0, [fp, #-18]	; 0xffffffee
   4fec0:	cmp	r0, #4
   4fec4:	beq	4ff0c <__assert_fail@plt+0x3d354>
   4fec8:	ldr	r0, [fp, #-8]
   4fecc:	ldr	r0, [r0, #48]	; 0x30
   4fed0:	and	r0, r0, #64	; 0x40
   4fed4:	cmp	r0, #0
   4fed8:	beq	4ff7c <__assert_fail@plt+0x3d3c4>
   4fedc:	ldr	r0, [fp, #-12]
   4fee0:	ldr	r1, [r0, #64]	; 0x40
   4fee4:	ldr	r0, [r0, #68]	; 0x44
   4fee8:	ldr	r2, [fp, #-8]
   4feec:	ldr	r3, [r2, #16]
   4fef0:	ldr	r2, [r2, #20]
   4fef4:	eor	r0, r0, r2
   4fef8:	eor	r1, r1, r3
   4fefc:	orr	r0, r1, r0
   4ff00:	cmp	r0, #0
   4ff04:	beq	4ff7c <__assert_fail@plt+0x3d3c4>
   4ff08:	b	4ff0c <__assert_fail@plt+0x3d354>
   4ff0c:	ldr	r0, [fp, #-12]
   4ff10:	ldrh	r0, [r0, #58]	; 0x3a
   4ff14:	and	r0, r0, #2
   4ff18:	cmp	r0, #0
   4ff1c:	beq	4ff2c <__assert_fail@plt+0x3d374>
   4ff20:	ldr	r0, [fp, #-12]
   4ff24:	ldr	r0, [r0, #36]	; 0x24
   4ff28:	bl	12b70 <close@plt>
   4ff2c:	ldr	r0, [fp, #-8]
   4ff30:	ldr	r0, [r0, #4]
   4ff34:	movw	r1, #0
   4ff38:	cmp	r0, r1
   4ff3c:	beq	4ff58 <__assert_fail@plt+0x3d3a0>
   4ff40:	ldr	r0, [fp, #-8]
   4ff44:	ldr	r0, [r0, #4]
   4ff48:	bl	4fa28 <__assert_fail@plt+0x3ce70>
   4ff4c:	ldr	r0, [fp, #-8]
   4ff50:	movw	r1, #0
   4ff54:	str	r1, [r0, #4]
   4ff58:	ldr	r0, [fp, #-12]
   4ff5c:	movw	r1, #6
   4ff60:	strh	r1, [r0, #56]	; 0x38
   4ff64:	ldr	r0, [fp, #-8]
   4ff68:	ldr	r1, [fp, #-12]
   4ff6c:	bl	5072c <__assert_fail@plt+0x3db74>
   4ff70:	ldr	r0, [fp, #-12]
   4ff74:	str	r0, [fp, #-4]
   4ff78:	b	50720 <__assert_fail@plt+0x3db68>
   4ff7c:	ldr	r0, [fp, #-8]
   4ff80:	ldr	r0, [r0, #4]
   4ff84:	movw	r1, #0
   4ff88:	cmp	r0, r1
   4ff8c:	beq	4ffd0 <__assert_fail@plt+0x3d418>
   4ff90:	ldr	r0, [fp, #-8]
   4ff94:	ldr	r0, [r0, #48]	; 0x30
   4ff98:	and	r0, r0, #4096	; 0x1000
   4ff9c:	cmp	r0, #0
   4ffa0:	beq	4ffd0 <__assert_fail@plt+0x3d418>
   4ffa4:	ldr	r0, [fp, #-8]
   4ffa8:	ldr	r1, [r0, #48]	; 0x30
   4ffac:	mvn	r2, #4096	; 0x1000
   4ffb0:	and	r1, r1, r2
   4ffb4:	str	r1, [r0, #48]	; 0x30
   4ffb8:	ldr	r0, [fp, #-8]
   4ffbc:	ldr	r0, [r0, #4]
   4ffc0:	bl	4fa28 <__assert_fail@plt+0x3ce70>
   4ffc4:	ldr	r0, [fp, #-8]
   4ffc8:	movw	r1, #0
   4ffcc:	str	r1, [r0, #4]
   4ffd0:	ldr	r0, [fp, #-8]
   4ffd4:	ldr	r0, [r0, #4]
   4ffd8:	movw	r1, #0
   4ffdc:	cmp	r0, r1
   4ffe0:	beq	5006c <__assert_fail@plt+0x3d4b4>
   4ffe4:	ldr	r0, [fp, #-8]
   4ffe8:	ldr	r1, [fp, #-12]
   4ffec:	ldr	r2, [fp, #-12]
   4fff0:	ldr	r3, [r2, #24]
   4fff4:	mvn	r2, #0
   4fff8:	bl	508cc <__assert_fail@plt+0x3dd14>
   4fffc:	cmp	r0, #0
   50000:	beq	50068 <__assert_fail@plt+0x3d4b0>
   50004:	bl	128d0 <__errno_location@plt>
   50008:	ldr	r0, [r0]
   5000c:	ldr	r1, [fp, #-12]
   50010:	str	r0, [r1, #32]
   50014:	ldr	r0, [fp, #-12]
   50018:	ldrh	r1, [r0, #58]	; 0x3a
   5001c:	orr	r1, r1, #1
   50020:	strh	r1, [r0, #58]	; 0x3a
   50024:	ldr	r0, [fp, #-8]
   50028:	ldr	r0, [r0, #4]
   5002c:	str	r0, [fp, #-12]
   50030:	ldr	r0, [fp, #-12]
   50034:	movw	r1, #0
   50038:	cmp	r0, r1
   5003c:	beq	50064 <__assert_fail@plt+0x3d4ac>
   50040:	ldr	r0, [fp, #-12]
   50044:	ldr	r0, [r0, #4]
   50048:	ldr	r0, [r0, #24]
   5004c:	ldr	r1, [fp, #-12]
   50050:	str	r0, [r1, #24]
   50054:	ldr	r0, [fp, #-12]
   50058:	ldr	r0, [r0, #8]
   5005c:	str	r0, [fp, #-12]
   50060:	b	50030 <__assert_fail@plt+0x3d478>
   50064:	b	50068 <__assert_fail@plt+0x3d4b0>
   50068:	b	500f8 <__assert_fail@plt+0x3d540>
   5006c:	ldr	r0, [fp, #-8]
   50070:	movw	r1, #3
   50074:	bl	50b8c <__assert_fail@plt+0x3dfd4>
   50078:	ldr	r1, [fp, #-8]
   5007c:	str	r0, [r1, #4]
   50080:	movw	r1, #0
   50084:	cmp	r0, r1
   50088:	bne	500f4 <__assert_fail@plt+0x3d53c>
   5008c:	ldr	r0, [fp, #-8]
   50090:	ldr	r0, [r0, #48]	; 0x30
   50094:	and	r0, r0, #8192	; 0x2000
   50098:	cmp	r0, #0
   5009c:	beq	500ac <__assert_fail@plt+0x3d4f4>
   500a0:	movw	r0, #0
   500a4:	str	r0, [fp, #-4]
   500a8:	b	50720 <__assert_fail@plt+0x3db68>
   500ac:	ldr	r0, [fp, #-12]
   500b0:	ldr	r0, [r0, #32]
   500b4:	cmp	r0, #0
   500b8:	beq	500d8 <__assert_fail@plt+0x3d520>
   500bc:	ldr	r0, [fp, #-12]
   500c0:	ldrh	r0, [r0, #56]	; 0x38
   500c4:	cmp	r0, #4
   500c8:	beq	500d8 <__assert_fail@plt+0x3d520>
   500cc:	ldr	r0, [fp, #-12]
   500d0:	movw	r1, #7
   500d4:	strh	r1, [r0, #56]	; 0x38
   500d8:	b	500dc <__assert_fail@plt+0x3d524>
   500dc:	ldr	r0, [fp, #-8]
   500e0:	ldr	r1, [fp, #-12]
   500e4:	bl	5072c <__assert_fail@plt+0x3db74>
   500e8:	ldr	r0, [fp, #-12]
   500ec:	str	r0, [fp, #-4]
   500f0:	b	50720 <__assert_fail@plt+0x3db68>
   500f4:	b	500f8 <__assert_fail@plt+0x3d540>
   500f8:	ldr	r0, [fp, #-8]
   500fc:	ldr	r0, [r0, #4]
   50100:	str	r0, [fp, #-12]
   50104:	ldr	r0, [fp, #-8]
   50108:	movw	r1, #0
   5010c:	str	r1, [r0, #4]
   50110:	b	5031c <__assert_fail@plt+0x3d764>
   50114:	b	50118 <__assert_fail@plt+0x3d560>
   50118:	ldr	r0, [fp, #-12]
   5011c:	str	r0, [fp, #-16]
   50120:	ldr	r0, [fp, #-12]
   50124:	ldr	r0, [r0, #8]
   50128:	movw	r1, #0
   5012c:	cmp	r0, r1
   50130:	bne	501cc <__assert_fail@plt+0x3d614>
   50134:	ldr	r0, [fp, #-12]
   50138:	ldr	r0, [r0, #4]
   5013c:	ldr	r0, [r0, #12]
   50140:	movw	r1, #0
   50144:	cmp	r0, r1
   50148:	beq	501cc <__assert_fail@plt+0x3d614>
   5014c:	ldr	r0, [fp, #-16]
   50150:	ldr	r0, [r0, #4]
   50154:	str	r0, [fp, #-12]
   50158:	ldr	r0, [fp, #-12]
   5015c:	ldr	r1, [fp, #-8]
   50160:	str	r0, [r1]
   50164:	ldr	r0, [fp, #-8]
   50168:	ldr	r0, [r0, #24]
   5016c:	ldr	r1, [fp, #-12]
   50170:	ldr	r1, [r1, #40]	; 0x28
   50174:	add	r0, r0, r1
   50178:	movw	r1, #0
   5017c:	strb	r1, [r0]
   50180:	ldr	r0, [fp, #-8]
   50184:	movw	r1, #3
   50188:	bl	50b8c <__assert_fail@plt+0x3dfd4>
   5018c:	str	r0, [fp, #-12]
   50190:	movw	r1, #0
   50194:	cmp	r0, r1
   50198:	bne	501c0 <__assert_fail@plt+0x3d608>
   5019c:	ldr	r0, [fp, #-8]
   501a0:	ldr	r0, [r0, #48]	; 0x30
   501a4:	and	r0, r0, #8192	; 0x2000
   501a8:	cmp	r0, #0
   501ac:	beq	501bc <__assert_fail@plt+0x3d604>
   501b0:	movw	r0, #0
   501b4:	str	r0, [fp, #-4]
   501b8:	b	50720 <__assert_fail@plt+0x3db68>
   501bc:	b	504c4 <__assert_fail@plt+0x3d90c>
   501c0:	ldr	r0, [fp, #-16]
   501c4:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   501c8:	b	5031c <__assert_fail@plt+0x3d764>
   501cc:	ldr	r0, [fp, #-12]
   501d0:	ldr	r0, [r0, #8]
   501d4:	str	r0, [fp, #-12]
   501d8:	movw	r1, #0
   501dc:	cmp	r0, r1
   501e0:	beq	504c0 <__assert_fail@plt+0x3d908>
   501e4:	ldr	r0, [fp, #-12]
   501e8:	ldr	r1, [fp, #-8]
   501ec:	str	r0, [r1]
   501f0:	ldr	r0, [fp, #-16]
   501f4:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   501f8:	ldr	r0, [fp, #-12]
   501fc:	ldr	r0, [r0, #48]	; 0x30
   50200:	cmp	r0, #0
   50204:	bne	50254 <__assert_fail@plt+0x3d69c>
   50208:	ldr	r0, [fp, #-8]
   5020c:	bl	51850 <__assert_fail@plt+0x3ec98>
   50210:	cmp	r0, #0
   50214:	beq	50234 <__assert_fail@plt+0x3d67c>
   50218:	ldr	r0, [fp, #-8]
   5021c:	ldr	r1, [r0, #48]	; 0x30
   50220:	orr	r1, r1, #8192	; 0x2000
   50224:	str	r1, [r0, #48]	; 0x30
   50228:	movw	r0, #0
   5022c:	str	r0, [fp, #-4]
   50230:	b	50720 <__assert_fail@plt+0x3db68>
   50234:	ldr	r0, [fp, #-8]
   50238:	bl	4fcec <__assert_fail@plt+0x3d134>
   5023c:	ldr	r0, [fp, #-8]
   50240:	ldr	r1, [fp, #-12]
   50244:	bl	51960 <__assert_fail@plt+0x3eda8>
   50248:	ldr	r0, [fp, #-8]
   5024c:	bl	4f8b0 <__assert_fail@plt+0x3ccf8>
   50250:	b	503bc <__assert_fail@plt+0x3d804>
   50254:	ldr	r0, [fp, #-12]
   50258:	ldrh	r0, [r0, #60]	; 0x3c
   5025c:	cmp	r0, #4
   50260:	bne	50268 <__assert_fail@plt+0x3d6b0>
   50264:	b	50118 <__assert_fail@plt+0x3d560>
   50268:	ldr	r0, [fp, #-12]
   5026c:	ldrh	r0, [r0, #60]	; 0x3c
   50270:	cmp	r0, #2
   50274:	bne	50318 <__assert_fail@plt+0x3d760>
   50278:	ldr	r0, [fp, #-8]
   5027c:	ldr	r1, [fp, #-12]
   50280:	movw	r2, #1
   50284:	and	r2, r2, #1
   50288:	bl	4f4d0 <__assert_fail@plt+0x3c918>
   5028c:	ldr	r1, [fp, #-12]
   50290:	strh	r0, [r1, #56]	; 0x38
   50294:	ldr	r0, [fp, #-12]
   50298:	ldrh	r0, [r0, #56]	; 0x38
   5029c:	cmp	r0, #1
   502a0:	bne	5030c <__assert_fail@plt+0x3d754>
   502a4:	ldr	r0, [fp, #-8]
   502a8:	ldr	r0, [r0, #48]	; 0x30
   502ac:	and	r0, r0, #4
   502b0:	cmp	r0, #0
   502b4:	bne	5030c <__assert_fail@plt+0x3d754>
   502b8:	ldr	r0, [fp, #-8]
   502bc:	movw	r1, #26652	; 0x681c
   502c0:	movt	r1, #7
   502c4:	bl	4f98c <__assert_fail@plt+0x3cdd4>
   502c8:	ldr	r1, [fp, #-12]
   502cc:	str	r0, [r1, #36]	; 0x24
   502d0:	cmp	r0, #0
   502d4:	bge	502f8 <__assert_fail@plt+0x3d740>
   502d8:	bl	128d0 <__errno_location@plt>
   502dc:	ldr	r0, [r0]
   502e0:	ldr	r1, [fp, #-12]
   502e4:	str	r0, [r1, #32]
   502e8:	ldr	r0, [fp, #-12]
   502ec:	movw	r1, #7
   502f0:	strh	r1, [r0, #56]	; 0x38
   502f4:	b	50308 <__assert_fail@plt+0x3d750>
   502f8:	ldr	r0, [fp, #-12]
   502fc:	ldrh	r1, [r0, #58]	; 0x3a
   50300:	orr	r1, r1, #2
   50304:	strh	r1, [r0, #58]	; 0x3a
   50308:	b	5030c <__assert_fail@plt+0x3d754>
   5030c:	ldr	r0, [fp, #-12]
   50310:	movw	r1, #3
   50314:	strh	r1, [r0, #60]	; 0x3c
   50318:	b	5031c <__assert_fail@plt+0x3d764>
   5031c:	ldr	r0, [fp, #-8]
   50320:	ldr	r0, [r0, #24]
   50324:	ldr	r1, [fp, #-12]
   50328:	ldr	r1, [r1, #4]
   5032c:	ldr	r1, [r1, #28]
   50330:	ldr	r2, [fp, #-12]
   50334:	ldr	r2, [r2, #4]
   50338:	ldr	r2, [r2, #40]	; 0x28
   5033c:	sub	r2, r2, #1
   50340:	add	r1, r1, r2
   50344:	ldrb	r1, [r1]
   50348:	cmp	r1, #47	; 0x2f
   5034c:	str	r0, [sp, #12]
   50350:	bne	5036c <__assert_fail@plt+0x3d7b4>
   50354:	ldr	r0, [fp, #-12]
   50358:	ldr	r0, [r0, #4]
   5035c:	ldr	r0, [r0, #40]	; 0x28
   50360:	sub	r0, r0, #1
   50364:	str	r0, [sp, #8]
   50368:	b	5037c <__assert_fail@plt+0x3d7c4>
   5036c:	ldr	r0, [fp, #-12]
   50370:	ldr	r0, [r0, #4]
   50374:	ldr	r0, [r0, #40]	; 0x28
   50378:	str	r0, [sp, #8]
   5037c:	ldr	r0, [sp, #8]
   50380:	ldr	r1, [sp, #12]
   50384:	add	r0, r1, r0
   50388:	str	r0, [sp, #16]
   5038c:	ldr	r0, [sp, #16]
   50390:	add	r2, r0, #1
   50394:	str	r2, [sp, #16]
   50398:	movw	r2, #47	; 0x2f
   5039c:	strb	r2, [r0]
   503a0:	ldr	r0, [sp, #16]
   503a4:	ldr	r2, [fp, #-12]
   503a8:	add	r1, r2, #168	; 0xa8
   503ac:	ldr	r2, [fp, #-12]
   503b0:	ldr	r2, [r2, #52]	; 0x34
   503b4:	add	r2, r2, #1
   503b8:	bl	12558 <memmove@plt>
   503bc:	ldr	r0, [fp, #-12]
   503c0:	ldr	r1, [fp, #-8]
   503c4:	str	r0, [r1]
   503c8:	ldr	r0, [fp, #-12]
   503cc:	ldrh	r0, [r0, #56]	; 0x38
   503d0:	cmp	r0, #11
   503d4:	bne	5044c <__assert_fail@plt+0x3d894>
   503d8:	ldr	r0, [fp, #-12]
   503dc:	ldr	r1, [r0, #112]	; 0x70
   503e0:	ldr	r0, [r0, #116]	; 0x74
   503e4:	eor	r1, r1, #2
   503e8:	orr	r0, r1, r0
   503ec:	cmp	r0, #0
   503f0:	bne	50418 <__assert_fail@plt+0x3d860>
   503f4:	b	503f8 <__assert_fail@plt+0x3d840>
   503f8:	ldr	r0, [fp, #-8]
   503fc:	ldr	r1, [fp, #-12]
   50400:	movw	r2, #0
   50404:	and	r2, r2, #1
   50408:	bl	4f4d0 <__assert_fail@plt+0x3c918>
   5040c:	ldr	r1, [fp, #-12]
   50410:	strh	r0, [r1, #56]	; 0x38
   50414:	b	50448 <__assert_fail@plt+0x3d890>
   50418:	b	5041c <__assert_fail@plt+0x3d864>
   5041c:	ldr	r0, [fp, #-12]
   50420:	ldr	r1, [r0, #112]	; 0x70
   50424:	ldr	r0, [r0, #116]	; 0x74
   50428:	eor	r1, r1, #1
   5042c:	orr	r0, r1, r0
   50430:	cmp	r0, #0
   50434:	beq	50440 <__assert_fail@plt+0x3d888>
   50438:	b	5043c <__assert_fail@plt+0x3d884>
   5043c:	bl	12b64 <abort@plt>
   50440:	b	50444 <__assert_fail@plt+0x3d88c>
   50444:	b	50448 <__assert_fail@plt+0x3d890>
   50448:	b	5044c <__assert_fail@plt+0x3d894>
   5044c:	ldr	r0, [fp, #-12]
   50450:	ldrh	r0, [r0, #56]	; 0x38
   50454:	cmp	r0, #1
   50458:	bne	504b4 <__assert_fail@plt+0x3d8fc>
   5045c:	ldr	r0, [fp, #-12]
   50460:	ldr	r0, [r0, #48]	; 0x30
   50464:	cmp	r0, #0
   50468:	bne	50484 <__assert_fail@plt+0x3d8cc>
   5046c:	ldr	r0, [fp, #-12]
   50470:	ldr	r1, [r0, #64]	; 0x40
   50474:	ldr	r0, [r0, #68]	; 0x44
   50478:	ldr	r2, [fp, #-8]
   5047c:	str	r0, [r2, #20]
   50480:	str	r1, [r2, #16]
   50484:	ldr	r0, [fp, #-8]
   50488:	ldr	r1, [fp, #-12]
   5048c:	bl	51a40 <__assert_fail@plt+0x3ee88>
   50490:	tst	r0, #1
   50494:	bne	504b0 <__assert_fail@plt+0x3d8f8>
   50498:	bl	128d0 <__errno_location@plt>
   5049c:	movw	r1, #12
   504a0:	str	r1, [r0]
   504a4:	movw	r0, #0
   504a8:	str	r0, [fp, #-4]
   504ac:	b	50720 <__assert_fail@plt+0x3db68>
   504b0:	b	504b4 <__assert_fail@plt+0x3d8fc>
   504b4:	ldr	r0, [fp, #-12]
   504b8:	str	r0, [fp, #-4]
   504bc:	b	50720 <__assert_fail@plt+0x3db68>
   504c0:	b	504c4 <__assert_fail@plt+0x3d90c>
   504c4:	ldr	r0, [fp, #-16]
   504c8:	ldr	r0, [r0, #4]
   504cc:	str	r0, [fp, #-12]
   504d0:	ldr	r0, [fp, #-12]
   504d4:	ldr	r1, [fp, #-8]
   504d8:	str	r0, [r1]
   504dc:	ldr	r0, [fp, #-16]
   504e0:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   504e4:	ldr	r0, [fp, #-12]
   504e8:	ldr	r0, [r0, #48]	; 0x30
   504ec:	cmn	r0, #1
   504f0:	bne	50518 <__assert_fail@plt+0x3d960>
   504f4:	ldr	r0, [fp, #-12]
   504f8:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   504fc:	bl	128d0 <__errno_location@plt>
   50500:	movw	r1, #0
   50504:	str	r1, [r0]
   50508:	ldr	r0, [fp, #-8]
   5050c:	str	r1, [r0]
   50510:	str	r1, [fp, #-4]
   50514:	b	50720 <__assert_fail@plt+0x3db68>
   50518:	b	5051c <__assert_fail@plt+0x3d964>
   5051c:	ldr	r0, [fp, #-12]
   50520:	ldrh	r0, [r0, #56]	; 0x38
   50524:	cmp	r0, #11
   50528:	bne	50530 <__assert_fail@plt+0x3d978>
   5052c:	bl	12b64 <abort@plt>
   50530:	b	50534 <__assert_fail@plt+0x3d97c>
   50534:	ldr	r0, [fp, #-8]
   50538:	ldr	r0, [r0, #24]
   5053c:	ldr	r1, [fp, #-12]
   50540:	ldr	r1, [r1, #40]	; 0x28
   50544:	add	r0, r0, r1
   50548:	movw	r1, #0
   5054c:	strb	r1, [r0]
   50550:	ldr	r0, [fp, #-12]
   50554:	ldr	r0, [r0, #48]	; 0x30
   50558:	cmp	r0, #0
   5055c:	bne	50594 <__assert_fail@plt+0x3d9dc>
   50560:	ldr	r0, [fp, #-8]
   50564:	bl	51850 <__assert_fail@plt+0x3ec98>
   50568:	cmp	r0, #0
   5056c:	beq	50590 <__assert_fail@plt+0x3d9d8>
   50570:	bl	128d0 <__errno_location@plt>
   50574:	ldr	r0, [r0]
   50578:	ldr	r1, [fp, #-12]
   5057c:	str	r0, [r1, #32]
   50580:	ldr	r0, [fp, #-8]
   50584:	ldr	r1, [r0, #48]	; 0x30
   50588:	orr	r1, r1, #8192	; 0x2000
   5058c:	str	r1, [r0, #48]	; 0x30
   50590:	b	50690 <__assert_fail@plt+0x3dad8>
   50594:	ldr	r0, [fp, #-12]
   50598:	ldrh	r0, [r0, #58]	; 0x3a
   5059c:	and	r0, r0, #2
   505a0:	cmp	r0, #0
   505a4:	beq	50630 <__assert_fail@plt+0x3da78>
   505a8:	ldr	r0, [fp, #-8]
   505ac:	ldr	r0, [r0, #48]	; 0x30
   505b0:	and	r0, r0, #4
   505b4:	cmp	r0, #0
   505b8:	bne	50620 <__assert_fail@plt+0x3da68>
   505bc:	ldr	r0, [fp, #-8]
   505c0:	ldr	r0, [r0, #48]	; 0x30
   505c4:	and	r0, r0, #512	; 0x200
   505c8:	cmp	r0, #0
   505cc:	beq	505ec <__assert_fail@plt+0x3da34>
   505d0:	ldr	r0, [fp, #-8]
   505d4:	ldr	r1, [fp, #-12]
   505d8:	ldr	r1, [r1, #36]	; 0x24
   505dc:	movw	r2, #1
   505e0:	and	r2, r2, #1
   505e4:	bl	51ba0 <__assert_fail@plt+0x3efe8>
   505e8:	b	50620 <__assert_fail@plt+0x3da68>
   505ec:	ldr	r0, [fp, #-12]
   505f0:	ldr	r0, [r0, #36]	; 0x24
   505f4:	bl	12aa4 <fchdir@plt>
   505f8:	cmp	r0, #0
   505fc:	beq	50620 <__assert_fail@plt+0x3da68>
   50600:	bl	128d0 <__errno_location@plt>
   50604:	ldr	r0, [r0]
   50608:	ldr	r1, [fp, #-12]
   5060c:	str	r0, [r1, #32]
   50610:	ldr	r0, [fp, #-8]
   50614:	ldr	r1, [r0, #48]	; 0x30
   50618:	orr	r1, r1, #8192	; 0x2000
   5061c:	str	r1, [r0, #48]	; 0x30
   50620:	ldr	r0, [fp, #-12]
   50624:	ldr	r0, [r0, #36]	; 0x24
   50628:	bl	12b70 <close@plt>
   5062c:	b	5068c <__assert_fail@plt+0x3dad4>
   50630:	ldr	r0, [fp, #-12]
   50634:	ldrh	r0, [r0, #58]	; 0x3a
   50638:	and	r0, r0, #1
   5063c:	cmp	r0, #0
   50640:	bne	50688 <__assert_fail@plt+0x3dad0>
   50644:	ldr	r0, [fp, #-8]
   50648:	ldr	r1, [fp, #-12]
   5064c:	ldr	r1, [r1, #4]
   50650:	mvn	r2, #0
   50654:	movw	r3, #49248	; 0xc060
   50658:	movt	r3, #7
   5065c:	bl	508cc <__assert_fail@plt+0x3dd14>
   50660:	cmp	r0, #0
   50664:	beq	50688 <__assert_fail@plt+0x3dad0>
   50668:	bl	128d0 <__errno_location@plt>
   5066c:	ldr	r0, [r0]
   50670:	ldr	r1, [fp, #-12]
   50674:	str	r0, [r1, #32]
   50678:	ldr	r0, [fp, #-8]
   5067c:	ldr	r1, [r0, #48]	; 0x30
   50680:	orr	r1, r1, #8192	; 0x2000
   50684:	str	r1, [r0, #48]	; 0x30
   50688:	b	5068c <__assert_fail@plt+0x3dad4>
   5068c:	b	50690 <__assert_fail@plt+0x3dad8>
   50690:	ldr	r0, [fp, #-12]
   50694:	ldrh	r0, [r0, #56]	; 0x38
   50698:	cmp	r0, #2
   5069c:	beq	506f0 <__assert_fail@plt+0x3db38>
   506a0:	ldr	r0, [fp, #-12]
   506a4:	ldr	r0, [r0, #32]
   506a8:	cmp	r0, #0
   506ac:	movw	r0, #0
   506b0:	movne	r0, #1
   506b4:	tst	r0, #1
   506b8:	movw	r0, #7
   506bc:	moveq	r0, #6
   506c0:	ldr	r1, [fp, #-12]
   506c4:	strh	r0, [r1, #56]	; 0x38
   506c8:	ldr	r0, [fp, #-12]
   506cc:	ldr	r0, [r0, #32]
   506d0:	cmp	r0, #0
   506d4:	bne	506ec <__assert_fail@plt+0x3db34>
   506d8:	b	506dc <__assert_fail@plt+0x3db24>
   506dc:	ldr	r0, [fp, #-8]
   506e0:	ldr	r1, [fp, #-12]
   506e4:	bl	5072c <__assert_fail@plt+0x3db74>
   506e8:	b	506ec <__assert_fail@plt+0x3db34>
   506ec:	b	506f0 <__assert_fail@plt+0x3db38>
   506f0:	ldr	r0, [fp, #-8]
   506f4:	ldr	r0, [r0, #48]	; 0x30
   506f8:	and	r0, r0, #8192	; 0x2000
   506fc:	cmp	r0, #0
   50700:	beq	50710 <__assert_fail@plt+0x3db58>
   50704:	movw	r0, #0
   50708:	str	r0, [sp, #4]
   5070c:	b	50718 <__assert_fail@plt+0x3db60>
   50710:	ldr	r0, [fp, #-12]
   50714:	str	r0, [sp, #4]
   50718:	ldr	r0, [sp, #4]
   5071c:	str	r0, [fp, #-4]
   50720:	ldr	r0, [fp, #-4]
   50724:	mov	sp, fp
   50728:	pop	{fp, pc}
   5072c:	push	{fp, lr}
   50730:	mov	fp, sp
   50734:	sub	sp, sp, #48	; 0x30
   50738:	str	r0, [fp, #-4]
   5073c:	str	r1, [fp, #-8]
   50740:	ldr	r0, [fp, #-8]
   50744:	add	r0, r0, #64	; 0x40
   50748:	str	r0, [fp, #-12]
   5074c:	ldr	r0, [fp, #-4]
   50750:	ldr	r0, [r0, #48]	; 0x30
   50754:	movw	r1, #258	; 0x102
   50758:	and	r0, r0, r1
   5075c:	cmp	r0, #0
   50760:	beq	507c0 <__assert_fail@plt+0x3dc08>
   50764:	ldr	r0, [fp, #-12]
   50768:	ldr	r1, [r0]
   5076c:	ldr	r0, [r0, #4]
   50770:	str	r0, [sp, #12]
   50774:	str	r1, [sp, #8]
   50778:	ldr	r0, [fp, #-12]
   5077c:	ldr	r1, [r0, #96]	; 0x60
   50780:	ldr	r0, [r0, #100]	; 0x64
   50784:	str	r0, [sp, #20]
   50788:	str	r1, [sp, #16]
   5078c:	ldr	r0, [fp, #-4]
   50790:	ldr	r0, [r0, #56]	; 0x38
   50794:	add	r1, sp, #8
   50798:	bl	2e3fc <__assert_fail@plt+0x1b844>
   5079c:	str	r0, [sp, #4]
   507a0:	ldr	r0, [sp, #4]
   507a4:	movw	r1, #0
   507a8:	cmp	r0, r1
   507ac:	bne	507b4 <__assert_fail@plt+0x3dbfc>
   507b0:	bl	12b64 <abort@plt>
   507b4:	ldr	r0, [sp, #4]
   507b8:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   507bc:	b	508c4 <__assert_fail@plt+0x3dd0c>
   507c0:	ldr	r0, [fp, #-8]
   507c4:	ldr	r0, [r0, #4]
   507c8:	str	r0, [sp]
   507cc:	ldr	r0, [sp]
   507d0:	movw	r1, #0
   507d4:	cmp	r0, r1
   507d8:	beq	508c0 <__assert_fail@plt+0x3dd08>
   507dc:	ldr	r0, [sp]
   507e0:	ldr	r0, [r0, #48]	; 0x30
   507e4:	movw	r1, #0
   507e8:	cmp	r1, r0
   507ec:	bgt	508c0 <__assert_fail@plt+0x3dd08>
   507f0:	b	507f4 <__assert_fail@plt+0x3dc3c>
   507f4:	ldr	r0, [fp, #-4]
   507f8:	ldr	r0, [r0, #56]	; 0x38
   507fc:	ldr	r1, [r0, #16]
   50800:	ldr	r0, [r0, #20]
   50804:	orr	r0, r1, r0
   50808:	cmp	r0, #0
   5080c:	bne	50818 <__assert_fail@plt+0x3dc60>
   50810:	b	50814 <__assert_fail@plt+0x3dc5c>
   50814:	bl	12b64 <abort@plt>
   50818:	ldr	r0, [fp, #-4]
   5081c:	ldr	r0, [r0, #56]	; 0x38
   50820:	ldr	r1, [r0]
   50824:	ldr	r0, [r0, #4]
   50828:	ldr	r2, [fp, #-12]
   5082c:	ldr	r3, [r2, #96]	; 0x60
   50830:	ldr	r2, [r2, #100]	; 0x64
   50834:	eor	r0, r0, r2
   50838:	eor	r1, r1, r3
   5083c:	orr	r0, r1, r0
   50840:	cmp	r0, #0
   50844:	bne	508b8 <__assert_fail@plt+0x3dd00>
   50848:	b	5084c <__assert_fail@plt+0x3dc94>
   5084c:	ldr	r0, [fp, #-4]
   50850:	ldr	r0, [r0, #56]	; 0x38
   50854:	ldr	r1, [r0, #8]
   50858:	ldr	r0, [r0, #12]
   5085c:	ldr	r2, [fp, #-12]
   50860:	ldr	r3, [r2]
   50864:	ldr	r2, [r2, #4]
   50868:	eor	r0, r0, r2
   5086c:	eor	r1, r1, r3
   50870:	orr	r0, r1, r0
   50874:	cmp	r0, #0
   50878:	bne	508b8 <__assert_fail@plt+0x3dd00>
   5087c:	b	50880 <__assert_fail@plt+0x3dcc8>
   50880:	ldr	r0, [sp]
   50884:	ldr	r1, [r0, #64]	; 0x40
   50888:	ldr	r0, [r0, #68]	; 0x44
   5088c:	ldr	r2, [fp, #-4]
   50890:	ldr	r2, [r2, #56]	; 0x38
   50894:	str	r0, [r2, #12]
   50898:	str	r1, [r2, #8]
   5089c:	ldr	r0, [sp]
   508a0:	ldr	r1, [r0, #160]	; 0xa0
   508a4:	ldr	r0, [r0, #164]	; 0xa4
   508a8:	ldr	r2, [fp, #-4]
   508ac:	ldr	r2, [r2, #56]	; 0x38
   508b0:	str	r0, [r2, #4]
   508b4:	str	r1, [r2]
   508b8:	b	508bc <__assert_fail@plt+0x3dd04>
   508bc:	b	508c0 <__assert_fail@plt+0x3dd08>
   508c0:	b	508c4 <__assert_fail@plt+0x3dd0c>
   508c4:	mov	sp, fp
   508c8:	pop	{fp, pc}
   508cc:	push	{fp, lr}
   508d0:	mov	fp, sp
   508d4:	sub	sp, sp, #160	; 0xa0
   508d8:	str	r0, [fp, #-8]
   508dc:	str	r1, [fp, #-12]
   508e0:	str	r2, [fp, #-16]
   508e4:	str	r3, [fp, #-20]	; 0xffffffec
   508e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   508ec:	movw	r1, #0
   508f0:	cmp	r0, r1
   508f4:	movw	r0, #0
   508f8:	str	r0, [sp, #8]
   508fc:	beq	50920 <__assert_fail@plt+0x3dd68>
   50900:	ldr	r0, [fp, #-20]	; 0xffffffec
   50904:	movw	r1, #49248	; 0xc060
   50908:	movt	r1, #7
   5090c:	bl	124c8 <strcmp@plt>
   50910:	cmp	r0, #0
   50914:	movw	r0, #0
   50918:	moveq	r0, #1
   5091c:	str	r0, [sp, #8]
   50920:	ldr	r0, [sp, #8]
   50924:	and	r0, r0, #1
   50928:	strb	r0, [fp, #-25]	; 0xffffffe7
   5092c:	ldr	r0, [fp, #-8]
   50930:	ldr	r0, [r0, #48]	; 0x30
   50934:	and	r0, r0, #4
   50938:	cmp	r0, #0
   5093c:	beq	50978 <__assert_fail@plt+0x3ddc0>
   50940:	ldr	r0, [fp, #-8]
   50944:	ldr	r0, [r0, #48]	; 0x30
   50948:	and	r0, r0, #512	; 0x200
   5094c:	cmp	r0, #0
   50950:	beq	5096c <__assert_fail@plt+0x3ddb4>
   50954:	ldr	r0, [fp, #-16]
   50958:	movw	r1, #0
   5095c:	cmp	r1, r0
   50960:	bgt	5096c <__assert_fail@plt+0x3ddb4>
   50964:	ldr	r0, [fp, #-16]
   50968:	bl	12b70 <close@plt>
   5096c:	movw	r0, #0
   50970:	str	r0, [fp, #-4]
   50974:	b	50b80 <__assert_fail@plt+0x3dfc8>
   50978:	ldr	r0, [fp, #-16]
   5097c:	cmp	r0, #0
   50980:	bge	509f0 <__assert_fail@plt+0x3de38>
   50984:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   50988:	tst	r0, #1
   5098c:	beq	509f0 <__assert_fail@plt+0x3de38>
   50990:	ldr	r0, [fp, #-8]
   50994:	ldr	r0, [r0, #48]	; 0x30
   50998:	and	r0, r0, #512	; 0x200
   5099c:	cmp	r0, #0
   509a0:	beq	509f0 <__assert_fail@plt+0x3de38>
   509a4:	ldr	r0, [fp, #-8]
   509a8:	add	r0, r0, #60	; 0x3c
   509ac:	bl	70c1c <__assert_fail@plt+0x5e064>
   509b0:	tst	r0, #1
   509b4:	bne	509ec <__assert_fail@plt+0x3de34>
   509b8:	ldr	r0, [fp, #-8]
   509bc:	add	r0, r0, #60	; 0x3c
   509c0:	bl	70cec <__assert_fail@plt+0x5e134>
   509c4:	str	r0, [fp, #-36]	; 0xffffffdc
   509c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   509cc:	movw	r1, #0
   509d0:	cmp	r1, r0
   509d4:	bgt	509e8 <__assert_fail@plt+0x3de30>
   509d8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   509dc:	str	r0, [fp, #-16]
   509e0:	movw	r0, #0
   509e4:	str	r0, [fp, #-20]	; 0xffffffec
   509e8:	b	509ec <__assert_fail@plt+0x3de34>
   509ec:	b	509f0 <__assert_fail@plt+0x3de38>
   509f0:	ldr	r0, [fp, #-16]
   509f4:	str	r0, [fp, #-32]	; 0xffffffe0
   509f8:	ldr	r0, [fp, #-16]
   509fc:	cmp	r0, #0
   50a00:	bge	50a28 <__assert_fail@plt+0x3de70>
   50a04:	ldr	r0, [fp, #-8]
   50a08:	ldr	r1, [fp, #-20]	; 0xffffffec
   50a0c:	bl	4f98c <__assert_fail@plt+0x3cdd4>
   50a10:	str	r0, [fp, #-32]	; 0xffffffe0
   50a14:	cmp	r0, #0
   50a18:	bge	50a28 <__assert_fail@plt+0x3de70>
   50a1c:	mvn	r0, #0
   50a20:	str	r0, [fp, #-4]
   50a24:	b	50b80 <__assert_fail@plt+0x3dfc8>
   50a28:	ldr	r0, [fp, #-8]
   50a2c:	ldr	r0, [r0, #48]	; 0x30
   50a30:	and	r0, r0, #2
   50a34:	cmp	r0, #0
   50a38:	bne	50a64 <__assert_fail@plt+0x3deac>
   50a3c:	ldr	r0, [fp, #-20]	; 0xffffffec
   50a40:	movw	r1, #0
   50a44:	cmp	r0, r1
   50a48:	beq	50af8 <__assert_fail@plt+0x3df40>
   50a4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   50a50:	movw	r1, #49248	; 0xc060
   50a54:	movt	r1, #7
   50a58:	bl	124c8 <strcmp@plt>
   50a5c:	cmp	r0, #0
   50a60:	bne	50af8 <__assert_fail@plt+0x3df40>
   50a64:	ldr	r0, [fp, #-32]	; 0xffffffe0
   50a68:	add	r1, sp, #16
   50a6c:	bl	7564c <__assert_fail@plt+0x62a94>
   50a70:	cmp	r0, #0
   50a74:	beq	50a84 <__assert_fail@plt+0x3decc>
   50a78:	mvn	r0, #0
   50a7c:	str	r0, [fp, #-24]	; 0xffffffe8
   50a80:	b	50b40 <__assert_fail@plt+0x3df88>
   50a84:	ldr	r0, [fp, #-12]
   50a88:	ldr	r1, [r0, #64]	; 0x40
   50a8c:	ldr	r0, [r0, #68]	; 0x44
   50a90:	ldr	r2, [sp, #16]
   50a94:	ldr	r3, [sp, #20]
   50a98:	eor	r0, r0, r3
   50a9c:	eor	r1, r1, r2
   50aa0:	orr	r0, r1, r0
   50aa4:	cmp	r0, #0
   50aa8:	bne	50adc <__assert_fail@plt+0x3df24>
   50aac:	b	50ab0 <__assert_fail@plt+0x3def8>
   50ab0:	ldr	r0, [fp, #-12]
   50ab4:	ldr	r1, [r0, #160]	; 0xa0
   50ab8:	ldr	r0, [r0, #164]	; 0xa4
   50abc:	ldr	r2, [sp, #112]	; 0x70
   50ac0:	ldr	r3, [sp, #116]	; 0x74
   50ac4:	eor	r0, r0, r3
   50ac8:	eor	r1, r1, r2
   50acc:	orr	r0, r1, r0
   50ad0:	cmp	r0, #0
   50ad4:	beq	50af4 <__assert_fail@plt+0x3df3c>
   50ad8:	b	50adc <__assert_fail@plt+0x3df24>
   50adc:	bl	128d0 <__errno_location@plt>
   50ae0:	movw	r1, #2
   50ae4:	str	r1, [r0]
   50ae8:	mvn	r0, #0
   50aec:	str	r0, [fp, #-24]	; 0xffffffe8
   50af0:	b	50b40 <__assert_fail@plt+0x3df88>
   50af4:	b	50af8 <__assert_fail@plt+0x3df40>
   50af8:	ldr	r0, [fp, #-8]
   50afc:	ldr	r0, [r0, #48]	; 0x30
   50b00:	and	r0, r0, #512	; 0x200
   50b04:	cmp	r0, #0
   50b08:	beq	50b34 <__assert_fail@plt+0x3df7c>
   50b0c:	ldr	r0, [fp, #-8]
   50b10:	ldr	r1, [fp, #-32]	; 0xffffffe0
   50b14:	ldrb	r2, [fp, #-25]	; 0xffffffe7
   50b18:	mvn	r3, #0
   50b1c:	eor	r2, r2, r3
   50b20:	and	r2, r2, #1
   50b24:	bl	51ba0 <__assert_fail@plt+0x3efe8>
   50b28:	movw	r0, #0
   50b2c:	str	r0, [fp, #-4]
   50b30:	b	50b80 <__assert_fail@plt+0x3dfc8>
   50b34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   50b38:	bl	12aa4 <fchdir@plt>
   50b3c:	str	r0, [fp, #-24]	; 0xffffffe8
   50b40:	ldr	r0, [fp, #-16]
   50b44:	cmp	r0, #0
   50b48:	bge	50b78 <__assert_fail@plt+0x3dfc0>
   50b4c:	bl	128d0 <__errno_location@plt>
   50b50:	ldr	r0, [r0]
   50b54:	str	r0, [sp, #12]
   50b58:	ldr	r0, [fp, #-32]	; 0xffffffe0
   50b5c:	bl	12b70 <close@plt>
   50b60:	ldr	r1, [sp, #12]
   50b64:	str	r0, [sp, #4]
   50b68:	str	r1, [sp]
   50b6c:	bl	128d0 <__errno_location@plt>
   50b70:	ldr	r1, [sp]
   50b74:	str	r1, [r0]
   50b78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   50b7c:	str	r0, [fp, #-4]
   50b80:	ldr	r0, [fp, #-4]
   50b84:	mov	sp, fp
   50b88:	pop	{fp, pc}
   50b8c:	push	{fp, lr}
   50b90:	mov	fp, sp
   50b94:	sub	sp, sp, #152	; 0x98
   50b98:	str	r0, [fp, #-8]
   50b9c:	str	r1, [fp, #-12]
   50ba0:	ldr	r0, [fp, #-8]
   50ba4:	ldr	r0, [r0]
   50ba8:	str	r0, [fp, #-68]	; 0xffffffbc
   50bac:	ldr	r0, [fp, #-68]	; 0xffffffbc
   50bb0:	ldr	r0, [r0, #12]
   50bb4:	movw	r1, #0
   50bb8:	cmp	r0, r1
   50bbc:	movw	r0, #0
   50bc0:	movne	r0, #1
   50bc4:	mvn	r1, #0
   50bc8:	eor	r0, r0, r1
   50bcc:	eor	r0, r0, r1
   50bd0:	and	r0, r0, #1
   50bd4:	strb	r0, [fp, #-69]	; 0xffffffbb
   50bd8:	movw	r0, #0
   50bdc:	strb	r0, [fp, #-70]	; 0xffffffba
   50be0:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   50be4:	tst	r0, #1
   50be8:	beq	50c64 <__assert_fail@plt+0x3e0ac>
   50bec:	ldr	r0, [fp, #-68]	; 0xffffffbc
   50bf0:	ldr	r0, [r0, #12]
   50bf4:	str	r0, [sp, #72]	; 0x48
   50bf8:	ldr	r0, [sp, #72]	; 0x48
   50bfc:	bl	12a98 <dirfd@plt>
   50c00:	str	r0, [fp, #-64]	; 0xffffffc0
   50c04:	ldr	r0, [fp, #-64]	; 0xffffffc0
   50c08:	cmp	r0, #0
   50c0c:	bge	50c60 <__assert_fail@plt+0x3e0a8>
   50c10:	b	50c14 <__assert_fail@plt+0x3e05c>
   50c14:	ldr	r0, [fp, #-68]	; 0xffffffbc
   50c18:	ldr	r0, [r0, #12]
   50c1c:	bl	12b88 <closedir@plt>
   50c20:	ldr	r1, [fp, #-68]	; 0xffffffbc
   50c24:	movw	r2, #0
   50c28:	str	r2, [r1, #12]
   50c2c:	ldr	r0, [fp, #-12]
   50c30:	cmp	r0, #3
   50c34:	bne	50c54 <__assert_fail@plt+0x3e09c>
   50c38:	ldr	r0, [fp, #-68]	; 0xffffffbc
   50c3c:	movw	r1, #4
   50c40:	strh	r1, [r0, #56]	; 0x38
   50c44:	bl	128d0 <__errno_location@plt>
   50c48:	ldr	r0, [r0]
   50c4c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   50c50:	str	r0, [r1, #32]
   50c54:	movw	r0, #0
   50c58:	str	r0, [fp, #-4]
   50c5c:	b	51840 <__assert_fail@plt+0x3ec88>
   50c60:	b	50e3c <__assert_fail@plt+0x3e284>
   50c64:	ldr	r0, [fp, #-8]
   50c68:	ldr	r0, [r0, #48]	; 0x30
   50c6c:	and	r0, r0, #4
   50c70:	cmp	r0, #0
   50c74:	bne	50c9c <__assert_fail@plt+0x3e0e4>
   50c78:	ldr	r0, [fp, #-8]
   50c7c:	ldr	r0, [r0, #48]	; 0x30
   50c80:	and	r0, r0, #512	; 0x200
   50c84:	cmp	r0, #0
   50c88:	beq	50c9c <__assert_fail@plt+0x3e0e4>
   50c8c:	ldr	r0, [fp, #-8]
   50c90:	ldr	r0, [r0, #32]
   50c94:	str	r0, [sp, #56]	; 0x38
   50c98:	b	50ca8 <__assert_fail@plt+0x3e0f0>
   50c9c:	mvn	r0, #99	; 0x63
   50ca0:	str	r0, [sp, #56]	; 0x38
   50ca4:	b	50ca8 <__assert_fail@plt+0x3e0f0>
   50ca8:	ldr	r0, [sp, #56]	; 0x38
   50cac:	ldr	r1, [fp, #-68]	; 0xffffffbc
   50cb0:	ldr	r1, [r1, #24]
   50cb4:	ldr	r2, [fp, #-8]
   50cb8:	ldr	r2, [r2, #48]	; 0x30
   50cbc:	and	r2, r2, #16
   50cc0:	cmp	r2, #0
   50cc4:	movw	r2, #0
   50cc8:	str	r0, [sp, #52]	; 0x34
   50ccc:	str	r1, [sp, #48]	; 0x30
   50cd0:	str	r2, [sp, #44]	; 0x2c
   50cd4:	beq	50d1c <__assert_fail@plt+0x3e164>
   50cd8:	ldr	r0, [fp, #-8]
   50cdc:	ldr	r0, [r0, #48]	; 0x30
   50ce0:	and	r0, r0, #1
   50ce4:	cmp	r0, #0
   50ce8:	movw	r0, #0
   50cec:	str	r0, [sp, #40]	; 0x28
   50cf0:	beq	50d0c <__assert_fail@plt+0x3e154>
   50cf4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   50cf8:	ldr	r0, [r0, #48]	; 0x30
   50cfc:	cmp	r0, #0
   50d00:	movw	r0, #0
   50d04:	moveq	r0, #1
   50d08:	str	r0, [sp, #40]	; 0x28
   50d0c:	ldr	r0, [sp, #40]	; 0x28
   50d10:	mvn	r1, #0
   50d14:	eor	r0, r0, r1
   50d18:	str	r0, [sp, #44]	; 0x2c
   50d1c:	ldr	r0, [sp, #44]	; 0x2c
   50d20:	tst	r0, #1
   50d24:	movw	r0, #32768	; 0x8000
   50d28:	moveq	r0, #0
   50d2c:	ldr	r1, [sp, #52]	; 0x34
   50d30:	str	r0, [sp, #36]	; 0x24
   50d34:	mov	r0, r1
   50d38:	ldr	r1, [sp, #48]	; 0x30
   50d3c:	ldr	r2, [sp, #36]	; 0x24
   50d40:	sub	r3, fp, #64	; 0x40
   50d44:	bl	74d54 <__assert_fail@plt+0x6219c>
   50d48:	ldr	r1, [fp, #-68]	; 0xffffffbc
   50d4c:	str	r0, [r1, #12]
   50d50:	movw	r1, #0
   50d54:	cmp	r0, r1
   50d58:	bne	50d90 <__assert_fail@plt+0x3e1d8>
   50d5c:	ldr	r0, [fp, #-12]
   50d60:	cmp	r0, #3
   50d64:	bne	50d84 <__assert_fail@plt+0x3e1cc>
   50d68:	ldr	r0, [fp, #-68]	; 0xffffffbc
   50d6c:	movw	r1, #4
   50d70:	strh	r1, [r0, #56]	; 0x38
   50d74:	bl	128d0 <__errno_location@plt>
   50d78:	ldr	r0, [r0]
   50d7c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   50d80:	str	r0, [r1, #32]
   50d84:	movw	r0, #0
   50d88:	str	r0, [fp, #-4]
   50d8c:	b	51840 <__assert_fail@plt+0x3ec88>
   50d90:	ldr	r0, [fp, #-68]	; 0xffffffbc
   50d94:	ldrh	r0, [r0, #56]	; 0x38
   50d98:	cmp	r0, #11
   50d9c:	bne	50dc0 <__assert_fail@plt+0x3e208>
   50da0:	ldr	r0, [fp, #-8]
   50da4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   50da8:	movw	r2, #0
   50dac:	and	r2, r2, #1
   50db0:	bl	4f4d0 <__assert_fail@plt+0x3c918>
   50db4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   50db8:	strh	r0, [r1, #56]	; 0x38
   50dbc:	b	50e38 <__assert_fail@plt+0x3e280>
   50dc0:	ldr	r0, [fp, #-8]
   50dc4:	ldr	r0, [r0, #48]	; 0x30
   50dc8:	and	r0, r0, #256	; 0x100
   50dcc:	cmp	r0, #0
   50dd0:	beq	50e34 <__assert_fail@plt+0x3e27c>
   50dd4:	b	50dd8 <__assert_fail@plt+0x3e220>
   50dd8:	ldr	r0, [fp, #-8]
   50ddc:	ldr	r1, [fp, #-68]	; 0xffffffbc
   50de0:	bl	5072c <__assert_fail@plt+0x3db74>
   50de4:	ldr	r0, [fp, #-8]
   50de8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   50dec:	movw	r2, #0
   50df0:	and	r2, r2, #1
   50df4:	bl	4f4d0 <__assert_fail@plt+0x3c918>
   50df8:	ldr	r1, [fp, #-8]
   50dfc:	ldr	r2, [fp, #-68]	; 0xffffffbc
   50e00:	str	r0, [sp, #32]
   50e04:	mov	r0, r1
   50e08:	mov	r1, r2
   50e0c:	bl	51a40 <__assert_fail@plt+0x3ee88>
   50e10:	tst	r0, #1
   50e14:	bne	50e30 <__assert_fail@plt+0x3e278>
   50e18:	bl	128d0 <__errno_location@plt>
   50e1c:	movw	r1, #12
   50e20:	str	r1, [r0]
   50e24:	movw	r0, #0
   50e28:	str	r0, [fp, #-4]
   50e2c:	b	51840 <__assert_fail@plt+0x3ec88>
   50e30:	b	50e34 <__assert_fail@plt+0x3e27c>
   50e34:	b	50e38 <__assert_fail@plt+0x3e280>
   50e38:	b	50e3c <__assert_fail@plt+0x3e284>
   50e3c:	ldr	r0, [pc, #2568]	; 5184c <__assert_fail@plt+0x3ec94>
   50e40:	ldr	r1, [fp, #-8]
   50e44:	ldr	r1, [r1, #44]	; 0x2c
   50e48:	movw	r2, #0
   50e4c:	cmp	r1, r2
   50e50:	movw	r1, #0
   50e54:	movne	r1, #1
   50e58:	tst	r1, #1
   50e5c:	mvn	r1, #0
   50e60:	movne	r0, r1
   50e64:	str	r0, [sp, #76]	; 0x4c
   50e68:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   50e6c:	tst	r0, #1
   50e70:	beq	50e80 <__assert_fail@plt+0x3e2c8>
   50e74:	movw	r0, #1
   50e78:	strb	r0, [fp, #-37]	; 0xffffffdb
   50e7c:	b	51044 <__assert_fail@plt+0x3e48c>
   50e80:	ldr	r0, [fp, #-12]
   50e84:	cmp	r0, #2
   50e88:	movw	r0, #0
   50e8c:	str	r0, [sp, #28]
   50e90:	beq	50f2c <__assert_fail@plt+0x3e374>
   50e94:	ldr	r0, [fp, #-8]
   50e98:	ldr	r0, [r0, #48]	; 0x30
   50e9c:	and	r0, r0, #8
   50ea0:	cmp	r0, #0
   50ea4:	movw	r0, #0
   50ea8:	str	r0, [sp, #24]
   50eac:	beq	50f1c <__assert_fail@plt+0x3e364>
   50eb0:	ldr	r0, [fp, #-8]
   50eb4:	ldr	r0, [r0, #48]	; 0x30
   50eb8:	and	r0, r0, #16
   50ebc:	cmp	r0, #0
   50ec0:	movw	r0, #0
   50ec4:	str	r0, [sp, #24]
   50ec8:	beq	50f1c <__assert_fail@plt+0x3e364>
   50ecc:	ldr	r0, [fp, #-8]
   50ed0:	ldr	r0, [r0, #48]	; 0x30
   50ed4:	and	r0, r0, #32
   50ed8:	cmp	r0, #0
   50edc:	movw	r0, #0
   50ee0:	str	r0, [sp, #24]
   50ee4:	bne	50f1c <__assert_fail@plt+0x3e364>
   50ee8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   50eec:	ldr	r0, [r0, #84]	; 0x54
   50ef0:	cmp	r0, #2
   50ef4:	movw	r0, #0
   50ef8:	str	r0, [sp, #24]
   50efc:	bne	50f1c <__assert_fail@plt+0x3e364>
   50f00:	ldr	r0, [fp, #-68]	; 0xffffffbc
   50f04:	ldr	r1, [fp, #-64]	; 0xffffffc0
   50f08:	bl	52014 <__assert_fail@plt+0x3f45c>
   50f0c:	cmp	r0, #0
   50f10:	movw	r0, #0
   50f14:	movne	r0, #1
   50f18:	str	r0, [sp, #24]
   50f1c:	ldr	r0, [sp, #24]
   50f20:	mvn	r1, #0
   50f24:	eor	r0, r0, r1
   50f28:	str	r0, [sp, #28]
   50f2c:	ldr	r0, [sp, #28]
   50f30:	and	r0, r0, #1
   50f34:	strb	r0, [fp, #-37]	; 0xffffffdb
   50f38:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   50f3c:	tst	r0, #1
   50f40:	bne	50f50 <__assert_fail@plt+0x3e398>
   50f44:	ldr	r0, [fp, #-12]
   50f48:	cmp	r0, #3
   50f4c:	bne	51040 <__assert_fail@plt+0x3e488>
   50f50:	ldr	r0, [fp, #-8]
   50f54:	ldr	r0, [r0, #48]	; 0x30
   50f58:	and	r0, r0, #512	; 0x200
   50f5c:	cmp	r0, #0
   50f60:	beq	50f78 <__assert_fail@plt+0x3e3c0>
   50f64:	ldr	r0, [fp, #-64]	; 0xffffffc0
   50f68:	movw	r1, #1030	; 0x406
   50f6c:	movw	r2, #3
   50f70:	bl	4e678 <__assert_fail@plt+0x3bac0>
   50f74:	str	r0, [fp, #-64]	; 0xffffffc0
   50f78:	ldr	r0, [fp, #-64]	; 0xffffffc0
   50f7c:	cmp	r0, #0
   50f80:	blt	50fa0 <__assert_fail@plt+0x3e3e8>
   50f84:	ldr	r0, [fp, #-8]
   50f88:	ldr	r1, [fp, #-68]	; 0xffffffbc
   50f8c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   50f90:	movw	r3, #0
   50f94:	bl	508cc <__assert_fail@plt+0x3dd14>
   50f98:	cmp	r0, #0
   50f9c:	beq	51034 <__assert_fail@plt+0x3e47c>
   50fa0:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   50fa4:	tst	r0, #1
   50fa8:	beq	50fc8 <__assert_fail@plt+0x3e410>
   50fac:	ldr	r0, [fp, #-12]
   50fb0:	cmp	r0, #3
   50fb4:	bne	50fc8 <__assert_fail@plt+0x3e410>
   50fb8:	bl	128d0 <__errno_location@plt>
   50fbc:	ldr	r0, [r0]
   50fc0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   50fc4:	str	r0, [r1, #32]
   50fc8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   50fcc:	ldrh	r1, [r0, #58]	; 0x3a
   50fd0:	orr	r1, r1, #1
   50fd4:	strh	r1, [r0, #58]	; 0x3a
   50fd8:	movw	r0, #0
   50fdc:	strb	r0, [fp, #-37]	; 0xffffffdb
   50fe0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   50fe4:	ldr	r0, [r0, #12]
   50fe8:	bl	12b88 <closedir@plt>
   50fec:	ldr	r1, [fp, #-68]	; 0xffffffbc
   50ff0:	movw	r2, #0
   50ff4:	str	r2, [r1, #12]
   50ff8:	ldr	r0, [fp, #-8]
   50ffc:	ldr	r0, [r0, #48]	; 0x30
   51000:	and	r0, r0, #512	; 0x200
   51004:	cmp	r0, #0
   51008:	beq	51024 <__assert_fail@plt+0x3e46c>
   5100c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   51010:	movw	r1, #0
   51014:	cmp	r1, r0
   51018:	bgt	51024 <__assert_fail@plt+0x3e46c>
   5101c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   51020:	bl	12b70 <close@plt>
   51024:	ldr	r0, [fp, #-68]	; 0xffffffbc
   51028:	movw	r1, #0
   5102c:	str	r1, [r0, #12]
   51030:	b	5103c <__assert_fail@plt+0x3e484>
   51034:	movw	r0, #1
   51038:	strb	r0, [fp, #-37]	; 0xffffffdb
   5103c:	b	51040 <__assert_fail@plt+0x3e488>
   51040:	b	51044 <__assert_fail@plt+0x3e48c>
   51044:	ldr	r0, [fp, #-68]	; 0xffffffbc
   51048:	ldr	r0, [r0, #28]
   5104c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   51050:	ldr	r1, [r1, #40]	; 0x28
   51054:	sub	r1, r1, #1
   51058:	add	r0, r0, r1
   5105c:	ldrb	r0, [r0]
   51060:	cmp	r0, #47	; 0x2f
   51064:	bne	5107c <__assert_fail@plt+0x3e4c4>
   51068:	ldr	r0, [fp, #-68]	; 0xffffffbc
   5106c:	ldr	r0, [r0, #40]	; 0x28
   51070:	sub	r0, r0, #1
   51074:	str	r0, [sp, #20]
   51078:	b	51088 <__assert_fail@plt+0x3e4d0>
   5107c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   51080:	ldr	r0, [r0, #40]	; 0x28
   51084:	str	r0, [sp, #20]
   51088:	ldr	r0, [sp, #20]
   5108c:	str	r0, [fp, #-48]	; 0xffffffd0
   51090:	ldr	r0, [fp, #-8]
   51094:	ldr	r0, [r0, #48]	; 0x30
   51098:	and	r0, r0, #4
   5109c:	cmp	r0, #0
   510a0:	beq	510d0 <__assert_fail@plt+0x3e518>
   510a4:	ldr	r0, [fp, #-8]
   510a8:	ldr	r0, [r0, #24]
   510ac:	ldr	r1, [fp, #-48]	; 0xffffffd0
   510b0:	add	r0, r0, r1
   510b4:	str	r0, [fp, #-60]	; 0xffffffc4
   510b8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   510bc:	add	r1, r0, #1
   510c0:	str	r1, [fp, #-60]	; 0xffffffc4
   510c4:	movw	r1, #47	; 0x2f
   510c8:	strb	r1, [r0]
   510cc:	b	510d8 <__assert_fail@plt+0x3e520>
   510d0:	movw	r0, #0
   510d4:	str	r0, [fp, #-60]	; 0xffffffc4
   510d8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   510dc:	add	r0, r0, #1
   510e0:	str	r0, [fp, #-48]	; 0xffffffd0
   510e4:	ldr	r0, [fp, #-8]
   510e8:	ldr	r0, [r0, #36]	; 0x24
   510ec:	ldr	r1, [fp, #-48]	; 0xffffffd0
   510f0:	sub	r0, r0, r1
   510f4:	str	r0, [fp, #-52]	; 0xffffffcc
   510f8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   510fc:	ldr	r0, [r0, #48]	; 0x30
   51100:	add	r0, r0, #1
   51104:	str	r0, [fp, #-44]	; 0xffffffd4
   51108:	movw	r0, #0
   5110c:	strb	r0, [fp, #-38]	; 0xffffffda
   51110:	movw	r0, #0
   51114:	str	r0, [fp, #-20]	; 0xffffffec
   51118:	str	r0, [fp, #-28]	; 0xffffffe4
   5111c:	str	r0, [fp, #-24]	; 0xffffffe8
   51120:	ldr	r0, [fp, #-68]	; 0xffffffbc
   51124:	ldr	r0, [r0, #12]
   51128:	movw	r1, #0
   5112c:	cmp	r0, r1
   51130:	beq	51628 <__assert_fail@plt+0x3ea70>
   51134:	bl	128d0 <__errno_location@plt>
   51138:	movw	r1, #0
   5113c:	str	r1, [r0]
   51140:	ldr	r0, [fp, #-68]	; 0xffffffbc
   51144:	ldr	r0, [r0, #12]
   51148:	bl	12a68 <readdir64@plt>
   5114c:	str	r0, [sp, #64]	; 0x40
   51150:	ldr	r0, [sp, #64]	; 0x40
   51154:	movw	r1, #0
   51158:	cmp	r0, r1
   5115c:	bne	511c4 <__assert_fail@plt+0x3e60c>
   51160:	bl	128d0 <__errno_location@plt>
   51164:	ldr	r0, [r0]
   51168:	cmp	r0, #0
   5116c:	beq	511c0 <__assert_fail@plt+0x3e608>
   51170:	bl	128d0 <__errno_location@plt>
   51174:	ldr	r0, [r0]
   51178:	ldr	r1, [fp, #-68]	; 0xffffffbc
   5117c:	str	r0, [r1, #32]
   51180:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   51184:	tst	r0, #1
   51188:	movw	r0, #1
   5118c:	str	r0, [sp, #16]
   51190:	bne	511a8 <__assert_fail@plt+0x3e5f0>
   51194:	ldr	r0, [fp, #-24]	; 0xffffffe8
   51198:	cmp	r0, #0
   5119c:	movw	r0, #0
   511a0:	movne	r0, #1
   511a4:	str	r0, [sp, #16]
   511a8:	ldr	r0, [sp, #16]
   511ac:	tst	r0, #1
   511b0:	movw	r0, #7
   511b4:	moveq	r0, #4
   511b8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   511bc:	strh	r0, [r1, #56]	; 0x38
   511c0:	b	51628 <__assert_fail@plt+0x3ea70>
   511c4:	ldr	r0, [fp, #-8]
   511c8:	ldr	r0, [r0, #48]	; 0x30
   511cc:	and	r0, r0, #32
   511d0:	cmp	r0, #0
   511d4:	bne	5121c <__assert_fail@plt+0x3e664>
   511d8:	ldr	r0, [sp, #64]	; 0x40
   511dc:	ldrb	r0, [r0, #19]
   511e0:	cmp	r0, #46	; 0x2e
   511e4:	bne	5121c <__assert_fail@plt+0x3e664>
   511e8:	ldr	r0, [sp, #64]	; 0x40
   511ec:	ldrsb	r0, [r0, #20]
   511f0:	cmp	r0, #0
   511f4:	beq	51218 <__assert_fail@plt+0x3e660>
   511f8:	ldr	r0, [sp, #64]	; 0x40
   511fc:	ldrb	r0, [r0, #20]
   51200:	cmp	r0, #46	; 0x2e
   51204:	bne	5121c <__assert_fail@plt+0x3e664>
   51208:	ldr	r0, [sp, #64]	; 0x40
   5120c:	ldrsb	r0, [r0, #21]
   51210:	cmp	r0, #0
   51214:	bne	5121c <__assert_fail@plt+0x3e664>
   51218:	b	51120 <__assert_fail@plt+0x3e568>
   5121c:	ldr	r0, [sp, #64]	; 0x40
   51220:	add	r0, r0, #19
   51224:	bl	12888 <strlen@plt>
   51228:	str	r0, [sp, #68]	; 0x44
   5122c:	ldr	r0, [fp, #-8]
   51230:	ldr	r1, [sp, #64]	; 0x40
   51234:	add	r1, r1, #19
   51238:	ldr	r2, [sp, #68]	; 0x44
   5123c:	bl	4f380 <__assert_fail@plt+0x3c7c8>
   51240:	str	r0, [fp, #-16]
   51244:	ldr	r0, [fp, #-16]
   51248:	movw	r1, #0
   5124c:	cmp	r0, r1
   51250:	bne	51258 <__assert_fail@plt+0x3e6a0>
   51254:	b	51298 <__assert_fail@plt+0x3e6e0>
   51258:	ldr	r0, [sp, #68]	; 0x44
   5125c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   51260:	cmp	r0, r1
   51264:	bcc	51364 <__assert_fail@plt+0x3e7ac>
   51268:	ldr	r0, [fp, #-8]
   5126c:	ldr	r0, [r0, #24]
   51270:	str	r0, [fp, #-32]	; 0xffffffe0
   51274:	ldr	r0, [fp, #-8]
   51278:	ldr	r1, [sp, #68]	; 0x44
   5127c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   51280:	add	r1, r1, r2
   51284:	add	r1, r1, #1
   51288:	bl	4f288 <__assert_fail@plt+0x3c6d0>
   5128c:	tst	r0, #1
   51290:	bne	51308 <__assert_fail@plt+0x3e750>
   51294:	b	51298 <__assert_fail@plt+0x3e6e0>
   51298:	bl	128d0 <__errno_location@plt>
   5129c:	ldr	r0, [r0]
   512a0:	str	r0, [fp, #-36]	; 0xffffffdc
   512a4:	ldr	r0, [fp, #-16]
   512a8:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   512ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   512b0:	bl	4fa28 <__assert_fail@plt+0x3ce70>
   512b4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   512b8:	ldr	r0, [r0, #12]
   512bc:	bl	12b88 <closedir@plt>
   512c0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   512c4:	movw	r2, #0
   512c8:	str	r2, [r1, #12]
   512cc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   512d0:	movw	r1, #7
   512d4:	strh	r1, [r0, #56]	; 0x38
   512d8:	ldr	r0, [fp, #-8]
   512dc:	ldr	r1, [r0, #48]	; 0x30
   512e0:	orr	r1, r1, #8192	; 0x2000
   512e4:	str	r1, [r0, #48]	; 0x30
   512e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   512ec:	str	r0, [sp, #12]
   512f0:	bl	128d0 <__errno_location@plt>
   512f4:	ldr	r1, [sp, #12]
   512f8:	str	r1, [r0]
   512fc:	movw	r0, #0
   51300:	str	r0, [fp, #-4]
   51304:	b	51840 <__assert_fail@plt+0x3ec88>
   51308:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5130c:	ldr	r1, [fp, #-8]
   51310:	ldr	r1, [r1, #24]
   51314:	cmp	r0, r1
   51318:	beq	51350 <__assert_fail@plt+0x3e798>
   5131c:	movw	r0, #1
   51320:	strb	r0, [fp, #-38]	; 0xffffffda
   51324:	ldr	r0, [fp, #-8]
   51328:	ldr	r0, [r0, #48]	; 0x30
   5132c:	and	r0, r0, #4
   51330:	cmp	r0, #0
   51334:	beq	5134c <__assert_fail@plt+0x3e794>
   51338:	ldr	r0, [fp, #-8]
   5133c:	ldr	r0, [r0, #24]
   51340:	ldr	r1, [fp, #-48]	; 0xffffffd0
   51344:	add	r0, r0, r1
   51348:	str	r0, [fp, #-60]	; 0xffffffc4
   5134c:	b	51350 <__assert_fail@plt+0x3e798>
   51350:	ldr	r0, [fp, #-8]
   51354:	ldr	r0, [r0, #36]	; 0x24
   51358:	ldr	r1, [fp, #-48]	; 0xffffffd0
   5135c:	sub	r0, r0, r1
   51360:	str	r0, [fp, #-52]	; 0xffffffcc
   51364:	ldr	r0, [fp, #-48]	; 0xffffffd0
   51368:	ldr	r1, [sp, #68]	; 0x44
   5136c:	add	r0, r0, r1
   51370:	str	r0, [fp, #-56]	; 0xffffffc8
   51374:	ldr	r0, [fp, #-56]	; 0xffffffc8
   51378:	ldr	r1, [fp, #-48]	; 0xffffffd0
   5137c:	cmp	r0, r1
   51380:	bcs	513e0 <__assert_fail@plt+0x3e828>
   51384:	ldr	r0, [fp, #-16]
   51388:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   5138c:	ldr	r0, [fp, #-20]	; 0xffffffec
   51390:	bl	4fa28 <__assert_fail@plt+0x3ce70>
   51394:	ldr	r0, [fp, #-68]	; 0xffffffbc
   51398:	ldr	r0, [r0, #12]
   5139c:	bl	12b88 <closedir@plt>
   513a0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   513a4:	movw	r2, #0
   513a8:	str	r2, [r1, #12]
   513ac:	ldr	r0, [fp, #-68]	; 0xffffffbc
   513b0:	movw	r1, #7
   513b4:	strh	r1, [r0, #56]	; 0x38
   513b8:	ldr	r0, [fp, #-8]
   513bc:	ldr	r1, [r0, #48]	; 0x30
   513c0:	orr	r1, r1, #8192	; 0x2000
   513c4:	str	r1, [r0, #48]	; 0x30
   513c8:	bl	128d0 <__errno_location@plt>
   513cc:	movw	r1, #36	; 0x24
   513d0:	str	r1, [r0]
   513d4:	movw	r0, #0
   513d8:	str	r0, [fp, #-4]
   513dc:	b	51840 <__assert_fail@plt+0x3ec88>
   513e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   513e4:	ldr	r1, [fp, #-16]
   513e8:	str	r0, [r1, #48]	; 0x30
   513ec:	ldr	r0, [fp, #-8]
   513f0:	ldr	r0, [r0]
   513f4:	ldr	r1, [fp, #-16]
   513f8:	str	r0, [r1, #4]
   513fc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   51400:	ldr	r1, [fp, #-16]
   51404:	str	r0, [r1, #40]	; 0x28
   51408:	ldr	r0, [sp, #64]	; 0x40
   5140c:	ldr	r1, [r0]
   51410:	ldr	r0, [r0, #4]
   51414:	ldr	r2, [fp, #-16]
   51418:	str	r0, [r2, #164]	; 0xa4
   5141c:	str	r1, [r2, #160]	; 0xa0
   51420:	ldr	r0, [fp, #-8]
   51424:	ldr	r0, [r0, #48]	; 0x30
   51428:	and	r0, r0, #4
   5142c:	cmp	r0, #0
   51430:	beq	51464 <__assert_fail@plt+0x3e8ac>
   51434:	ldr	r0, [fp, #-16]
   51438:	ldr	r0, [r0, #28]
   5143c:	ldr	r1, [fp, #-16]
   51440:	str	r0, [r1, #24]
   51444:	ldr	r0, [fp, #-60]	; 0xffffffc4
   51448:	ldr	r1, [fp, #-16]
   5144c:	add	r1, r1, #168	; 0xa8
   51450:	ldr	r2, [fp, #-16]
   51454:	ldr	r2, [r2, #52]	; 0x34
   51458:	add	r2, r2, #1
   5145c:	bl	12558 <memmove@plt>
   51460:	b	51474 <__assert_fail@plt+0x3e8bc>
   51464:	ldr	r0, [fp, #-16]
   51468:	add	r0, r0, #168	; 0xa8
   5146c:	ldr	r1, [fp, #-16]
   51470:	str	r0, [r1, #24]
   51474:	ldr	r0, [fp, #-8]
   51478:	ldr	r0, [r0, #44]	; 0x2c
   5147c:	movw	r1, #0
   51480:	cmp	r0, r1
   51484:	beq	5149c <__assert_fail@plt+0x3e8e4>
   51488:	ldr	r0, [fp, #-8]
   5148c:	ldr	r0, [r0, #48]	; 0x30
   51490:	and	r0, r0, #1024	; 0x400
   51494:	cmp	r0, #0
   51498:	beq	51574 <__assert_fail@plt+0x3e9bc>
   5149c:	ldr	r0, [fp, #-8]
   514a0:	ldr	r0, [r0, #48]	; 0x30
   514a4:	and	r0, r0, #8
   514a8:	cmp	r0, #0
   514ac:	movw	r0, #0
   514b0:	str	r0, [sp, #8]
   514b4:	beq	5152c <__assert_fail@plt+0x3e974>
   514b8:	ldr	r0, [sp, #64]	; 0x40
   514bc:	ldrb	r0, [r0, #18]
   514c0:	cmp	r0, #0
   514c4:	movw	r0, #0
   514c8:	str	r0, [sp, #8]
   514cc:	beq	5152c <__assert_fail@plt+0x3e974>
   514d0:	ldr	r0, [sp, #64]	; 0x40
   514d4:	ldrb	r0, [r0, #18]
   514d8:	cmp	r0, #4
   514dc:	movw	r0, #0
   514e0:	str	r0, [sp, #8]
   514e4:	beq	5152c <__assert_fail@plt+0x3e974>
   514e8:	ldr	r0, [fp, #-8]
   514ec:	ldr	r0, [r0, #48]	; 0x30
   514f0:	and	r0, r0, #16
   514f4:	cmp	r0, #0
   514f8:	movw	r0, #1
   514fc:	str	r0, [sp, #4]
   51500:	bne	51524 <__assert_fail@plt+0x3e96c>
   51504:	ldr	r0, [sp, #64]	; 0x40
   51508:	ldrb	r0, [r0, #18]
   5150c:	cmp	r0, #10
   51510:	movw	r0, #0
   51514:	moveq	r0, #1
   51518:	mvn	r1, #0
   5151c:	eor	r0, r0, r1
   51520:	str	r0, [sp, #4]
   51524:	ldr	r0, [sp, #4]
   51528:	str	r0, [sp, #8]
   5152c:	ldr	r0, [sp, #8]
   51530:	and	r0, r0, #1
   51534:	strb	r0, [sp, #63]	; 0x3f
   51538:	ldr	r0, [fp, #-16]
   5153c:	movw	r1, #11
   51540:	strh	r1, [r0, #56]	; 0x38
   51544:	ldr	r0, [fp, #-16]
   51548:	add	r0, r0, #64	; 0x40
   5154c:	ldr	r1, [sp, #64]	; 0x40
   51550:	ldrb	r1, [r1, #18]
   51554:	bl	520d0 <__assert_fail@plt+0x3f518>
   51558:	ldr	r0, [fp, #-16]
   5155c:	ldrb	r1, [sp, #63]	; 0x3f
   51560:	mvn	r2, #0
   51564:	eor	r1, r1, r2
   51568:	and	r1, r1, #1
   5156c:	bl	4f478 <__assert_fail@plt+0x3c8c0>
   51570:	b	51590 <__assert_fail@plt+0x3e9d8>
   51574:	ldr	r0, [fp, #-8]
   51578:	ldr	r1, [fp, #-16]
   5157c:	movw	r2, #0
   51580:	and	r2, r2, #1
   51584:	bl	4f4d0 <__assert_fail@plt+0x3c918>
   51588:	ldr	r1, [fp, #-16]
   5158c:	strh	r0, [r1, #56]	; 0x38
   51590:	ldr	r0, [fp, #-16]
   51594:	movw	r1, #0
   51598:	str	r1, [r0, #8]
   5159c:	ldr	r0, [fp, #-20]	; 0xffffffec
   515a0:	cmp	r0, r1
   515a4:	bne	515b8 <__assert_fail@plt+0x3ea00>
   515a8:	ldr	r0, [fp, #-16]
   515ac:	str	r0, [fp, #-28]	; 0xffffffe4
   515b0:	str	r0, [fp, #-20]	; 0xffffffec
   515b4:	b	515cc <__assert_fail@plt+0x3ea14>
   515b8:	ldr	r0, [fp, #-16]
   515bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   515c0:	str	r0, [r1, #8]
   515c4:	ldr	r0, [fp, #-16]
   515c8:	str	r0, [fp, #-28]	; 0xffffffe4
   515cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   515d0:	movw	r1, #10000	; 0x2710
   515d4:	cmp	r0, r1
   515d8:	bne	51604 <__assert_fail@plt+0x3ea4c>
   515dc:	ldr	r0, [fp, #-8]
   515e0:	ldr	r0, [r0, #44]	; 0x2c
   515e4:	movw	r1, #0
   515e8:	cmp	r0, r1
   515ec:	bne	51604 <__assert_fail@plt+0x3ea4c>
   515f0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   515f4:	ldr	r1, [fp, #-64]	; 0xffffffc0
   515f8:	bl	521a0 <__assert_fail@plt+0x3f5e8>
   515fc:	and	r0, r0, #1
   51600:	strb	r0, [fp, #-70]	; 0xffffffba
   51604:	ldr	r0, [fp, #-24]	; 0xffffffe8
   51608:	add	r0, r0, #1
   5160c:	str	r0, [fp, #-24]	; 0xffffffe8
   51610:	ldr	r0, [sp, #76]	; 0x4c
   51614:	ldr	r1, [fp, #-24]	; 0xffffffe8
   51618:	cmp	r0, r1
   5161c:	bhi	51624 <__assert_fail@plt+0x3ea6c>
   51620:	b	51660 <__assert_fail@plt+0x3eaa8>
   51624:	b	51120 <__assert_fail@plt+0x3e568>
   51628:	ldr	r0, [fp, #-68]	; 0xffffffbc
   5162c:	ldr	r0, [r0, #12]
   51630:	movw	r1, #0
   51634:	cmp	r0, r1
   51638:	beq	5165c <__assert_fail@plt+0x3eaa4>
   5163c:	b	51640 <__assert_fail@plt+0x3ea88>
   51640:	ldr	r0, [fp, #-68]	; 0xffffffbc
   51644:	ldr	r0, [r0, #12]
   51648:	bl	12b88 <closedir@plt>
   5164c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   51650:	movw	r2, #0
   51654:	str	r2, [r1, #12]
   51658:	b	5165c <__assert_fail@plt+0x3eaa4>
   5165c:	b	51660 <__assert_fail@plt+0x3eaa8>
   51660:	ldrb	r0, [fp, #-38]	; 0xffffffda
   51664:	tst	r0, #1
   51668:	beq	51678 <__assert_fail@plt+0x3eac0>
   5166c:	ldr	r0, [fp, #-8]
   51670:	ldr	r1, [fp, #-20]	; 0xffffffec
   51674:	bl	52234 <__assert_fail@plt+0x3f67c>
   51678:	ldr	r0, [fp, #-8]
   5167c:	ldr	r0, [r0, #48]	; 0x30
   51680:	and	r0, r0, #4
   51684:	cmp	r0, #0
   51688:	beq	516c8 <__assert_fail@plt+0x3eb10>
   5168c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   51690:	ldr	r1, [fp, #-8]
   51694:	ldr	r1, [r1, #36]	; 0x24
   51698:	cmp	r0, r1
   5169c:	beq	516ac <__assert_fail@plt+0x3eaf4>
   516a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   516a4:	cmp	r0, #0
   516a8:	bne	516bc <__assert_fail@plt+0x3eb04>
   516ac:	ldr	r0, [fp, #-60]	; 0xffffffc4
   516b0:	mvn	r1, #0
   516b4:	add	r0, r0, r1
   516b8:	str	r0, [fp, #-60]	; 0xffffffc4
   516bc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   516c0:	movw	r1, #0
   516c4:	strb	r1, [r0]
   516c8:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   516cc:	tst	r0, #1
   516d0:	bne	51770 <__assert_fail@plt+0x3ebb8>
   516d4:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   516d8:	tst	r0, #1
   516dc:	beq	51770 <__assert_fail@plt+0x3ebb8>
   516e0:	ldr	r0, [fp, #-12]
   516e4:	cmp	r0, #1
   516e8:	beq	516f8 <__assert_fail@plt+0x3eb40>
   516ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   516f0:	cmp	r0, #0
   516f4:	bne	51770 <__assert_fail@plt+0x3ebb8>
   516f8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   516fc:	ldr	r0, [r0, #48]	; 0x30
   51700:	cmp	r0, #0
   51704:	bne	5171c <__assert_fail@plt+0x3eb64>
   51708:	ldr	r0, [fp, #-8]
   5170c:	bl	51850 <__assert_fail@plt+0x3ec98>
   51710:	cmp	r0, #0
   51714:	bne	51740 <__assert_fail@plt+0x3eb88>
   51718:	b	51770 <__assert_fail@plt+0x3ebb8>
   5171c:	ldr	r0, [fp, #-8]
   51720:	ldr	r1, [fp, #-68]	; 0xffffffbc
   51724:	ldr	r1, [r1, #4]
   51728:	mvn	r2, #0
   5172c:	movw	r3, #49248	; 0xc060
   51730:	movt	r3, #7
   51734:	bl	508cc <__assert_fail@plt+0x3dd14>
   51738:	cmp	r0, #0
   5173c:	beq	51770 <__assert_fail@plt+0x3ebb8>
   51740:	ldr	r0, [fp, #-68]	; 0xffffffbc
   51744:	movw	r1, #7
   51748:	strh	r1, [r0, #56]	; 0x38
   5174c:	ldr	r0, [fp, #-8]
   51750:	ldr	r1, [r0, #48]	; 0x30
   51754:	orr	r1, r1, #8192	; 0x2000
   51758:	str	r1, [r0, #48]	; 0x30
   5175c:	ldr	r0, [fp, #-20]	; 0xffffffec
   51760:	bl	4fa28 <__assert_fail@plt+0x3ce70>
   51764:	movw	r0, #0
   51768:	str	r0, [fp, #-4]
   5176c:	b	51840 <__assert_fail@plt+0x3ec88>
   51770:	ldr	r0, [fp, #-24]	; 0xffffffe8
   51774:	cmp	r0, #0
   51778:	bne	517c8 <__assert_fail@plt+0x3ec10>
   5177c:	ldr	r0, [fp, #-12]
   51780:	cmp	r0, #3
   51784:	bne	517b4 <__assert_fail@plt+0x3ebfc>
   51788:	ldr	r0, [fp, #-68]	; 0xffffffbc
   5178c:	ldrh	r0, [r0, #56]	; 0x38
   51790:	cmp	r0, #4
   51794:	beq	517b4 <__assert_fail@plt+0x3ebfc>
   51798:	ldr	r0, [fp, #-68]	; 0xffffffbc
   5179c:	ldrh	r0, [r0, #56]	; 0x38
   517a0:	cmp	r0, #7
   517a4:	beq	517b4 <__assert_fail@plt+0x3ebfc>
   517a8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   517ac:	movw	r1, #6
   517b0:	strh	r1, [r0, #56]	; 0x38
   517b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   517b8:	bl	4fa28 <__assert_fail@plt+0x3ce70>
   517bc:	movw	r0, #0
   517c0:	str	r0, [fp, #-4]
   517c4:	b	51840 <__assert_fail@plt+0x3ec88>
   517c8:	ldrb	r0, [fp, #-70]	; 0xffffffba
   517cc:	tst	r0, #1
   517d0:	beq	51804 <__assert_fail@plt+0x3ec4c>
   517d4:	ldr	r0, [fp, #-8]
   517d8:	movw	r1, #9072	; 0x2370
   517dc:	movt	r1, #5
   517e0:	str	r1, [r0, #44]	; 0x2c
   517e4:	ldr	r0, [fp, #-8]
   517e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   517ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   517f0:	bl	4f6e8 <__assert_fail@plt+0x3cb30>
   517f4:	str	r0, [fp, #-20]	; 0xffffffec
   517f8:	ldr	r0, [fp, #-8]
   517fc:	movw	r1, #0
   51800:	str	r1, [r0, #44]	; 0x2c
   51804:	ldr	r0, [fp, #-8]
   51808:	ldr	r0, [r0, #44]	; 0x2c
   5180c:	movw	r1, #0
   51810:	cmp	r0, r1
   51814:	beq	51838 <__assert_fail@plt+0x3ec80>
   51818:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5181c:	cmp	r0, #1
   51820:	bls	51838 <__assert_fail@plt+0x3ec80>
   51824:	ldr	r0, [fp, #-8]
   51828:	ldr	r1, [fp, #-20]	; 0xffffffec
   5182c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   51830:	bl	4f6e8 <__assert_fail@plt+0x3cb30>
   51834:	str	r0, [fp, #-20]	; 0xffffffec
   51838:	ldr	r0, [fp, #-20]	; 0xffffffec
   5183c:	str	r0, [fp, #-4]
   51840:	ldr	r0, [fp, #-4]
   51844:	mov	sp, fp
   51848:	pop	{fp, pc}
   5184c:	andeq	r8, r1, r0, lsr #13
   51850:	push	{fp, lr}
   51854:	mov	fp, sp
   51858:	sub	sp, sp, #32
   5185c:	str	r0, [fp, #-4]
   51860:	ldr	r0, [fp, #-4]
   51864:	ldr	r0, [r0, #48]	; 0x30
   51868:	and	r0, r0, #4
   5186c:	cmp	r0, #0
   51870:	movw	r0, #0
   51874:	str	r0, [fp, #-12]
   51878:	bne	5193c <__assert_fail@plt+0x3ed84>
   5187c:	ldr	r0, [fp, #-4]
   51880:	ldr	r0, [r0, #48]	; 0x30
   51884:	and	r0, r0, #512	; 0x200
   51888:	cmp	r0, #0
   5188c:	beq	518f0 <__assert_fail@plt+0x3ed38>
   51890:	ldr	r0, [fp, #-4]
   51894:	ldr	r1, [fp, #-4]
   51898:	ldr	r1, [r1, #48]	; 0x30
   5189c:	and	r1, r1, #512	; 0x200
   518a0:	cmp	r1, #0
   518a4:	str	r0, [sp, #16]
   518a8:	beq	518b8 <__assert_fail@plt+0x3ed00>
   518ac:	mvn	r0, #99	; 0x63
   518b0:	str	r0, [sp, #12]
   518b4:	b	518c4 <__assert_fail@plt+0x3ed0c>
   518b8:	ldr	r0, [fp, #-4]
   518bc:	ldr	r0, [r0, #28]
   518c0:	str	r0, [sp, #12]
   518c4:	ldr	r0, [sp, #12]
   518c8:	ldr	r1, [sp, #16]
   518cc:	str	r0, [sp, #8]
   518d0:	mov	r0, r1
   518d4:	ldr	r1, [sp, #8]
   518d8:	movw	r2, #1
   518dc:	and	r2, r2, #1
   518e0:	bl	51ba0 <__assert_fail@plt+0x3efe8>
   518e4:	movw	r0, #0
   518e8:	str	r0, [sp, #4]
   518ec:	b	51928 <__assert_fail@plt+0x3ed70>
   518f0:	ldr	r0, [fp, #-4]
   518f4:	ldr	r0, [r0, #48]	; 0x30
   518f8:	and	r0, r0, #512	; 0x200
   518fc:	cmp	r0, #0
   51900:	beq	51910 <__assert_fail@plt+0x3ed58>
   51904:	mvn	r0, #99	; 0x63
   51908:	str	r0, [sp]
   5190c:	b	5191c <__assert_fail@plt+0x3ed64>
   51910:	ldr	r0, [fp, #-4]
   51914:	ldr	r0, [r0, #28]
   51918:	str	r0, [sp]
   5191c:	ldr	r0, [sp]
   51920:	bl	12aa4 <fchdir@plt>
   51924:	str	r0, [sp, #4]
   51928:	ldr	r0, [sp, #4]
   5192c:	cmp	r0, #0
   51930:	movw	r0, #0
   51934:	movne	r0, #1
   51938:	str	r0, [fp, #-12]
   5193c:	ldr	r0, [fp, #-12]
   51940:	and	r0, r0, #1
   51944:	str	r0, [fp, #-8]
   51948:	ldr	r0, [fp, #-4]
   5194c:	add	r0, r0, #60	; 0x3c
   51950:	bl	4fc94 <__assert_fail@plt+0x3d0dc>
   51954:	ldr	r0, [fp, #-8]
   51958:	mov	sp, fp
   5195c:	pop	{fp, pc}
   51960:	push	{fp, lr}
   51964:	mov	fp, sp
   51968:	sub	sp, sp, #16
   5196c:	str	r0, [fp, #-4]
   51970:	str	r1, [sp, #8]
   51974:	ldr	r0, [sp, #8]
   51978:	ldr	r0, [r0, #52]	; 0x34
   5197c:	ldr	r1, [sp, #8]
   51980:	str	r0, [r1, #40]	; 0x28
   51984:	str	r0, [sp, #4]
   51988:	ldr	r0, [fp, #-4]
   5198c:	ldr	r0, [r0, #24]
   51990:	ldr	r1, [sp, #8]
   51994:	add	r1, r1, #168	; 0xa8
   51998:	ldr	r2, [sp, #4]
   5199c:	add	r2, r2, #1
   519a0:	bl	12558 <memmove@plt>
   519a4:	ldr	r0, [sp, #8]
   519a8:	add	r0, r0, #168	; 0xa8
   519ac:	movw	r1, #47	; 0x2f
   519b0:	bl	12a14 <strrchr@plt>
   519b4:	str	r0, [sp]
   519b8:	movw	r1, #0
   519bc:	cmp	r0, r1
   519c0:	beq	51a20 <__assert_fail@plt+0x3ee68>
   519c4:	ldr	r0, [sp]
   519c8:	ldr	r1, [sp, #8]
   519cc:	add	r1, r1, #168	; 0xa8
   519d0:	cmp	r0, r1
   519d4:	bne	519e8 <__assert_fail@plt+0x3ee30>
   519d8:	ldr	r0, [sp]
   519dc:	ldrb	r0, [r0, #1]
   519e0:	cmp	r0, #0
   519e4:	beq	51a20 <__assert_fail@plt+0x3ee68>
   519e8:	ldr	r0, [sp]
   519ec:	add	r0, r0, #1
   519f0:	str	r0, [sp]
   519f4:	bl	12888 <strlen@plt>
   519f8:	str	r0, [sp, #4]
   519fc:	ldr	r0, [sp, #8]
   51a00:	add	r0, r0, #168	; 0xa8
   51a04:	ldr	r1, [sp]
   51a08:	ldr	r2, [sp, #4]
   51a0c:	add	r2, r2, #1
   51a10:	bl	12558 <memmove@plt>
   51a14:	ldr	r0, [sp, #4]
   51a18:	ldr	r1, [sp, #8]
   51a1c:	str	r0, [r1, #52]	; 0x34
   51a20:	ldr	r0, [fp, #-4]
   51a24:	ldr	r0, [r0, #24]
   51a28:	ldr	r1, [sp, #8]
   51a2c:	str	r0, [r1, #28]
   51a30:	ldr	r1, [sp, #8]
   51a34:	str	r0, [r1, #24]
   51a38:	mov	sp, fp
   51a3c:	pop	{fp, pc}
   51a40:	push	{fp, lr}
   51a44:	mov	fp, sp
   51a48:	sub	sp, sp, #24
   51a4c:	str	r0, [fp, #-8]
   51a50:	str	r1, [sp, #12]
   51a54:	ldr	r0, [fp, #-8]
   51a58:	ldr	r0, [r0, #48]	; 0x30
   51a5c:	movw	r1, #258	; 0x102
   51a60:	and	r0, r0, r1
   51a64:	cmp	r0, #0
   51a68:	beq	51b4c <__assert_fail@plt+0x3ef94>
   51a6c:	ldr	r0, [sp, #12]
   51a70:	add	r0, r0, #64	; 0x40
   51a74:	str	r0, [sp, #8]
   51a78:	movw	r0, #24
   51a7c:	bl	527f0 <__assert_fail@plt+0x3fc38>
   51a80:	str	r0, [sp, #4]
   51a84:	ldr	r0, [sp, #4]
   51a88:	movw	r1, #0
   51a8c:	cmp	r0, r1
   51a90:	bne	51aa4 <__assert_fail@plt+0x3eeec>
   51a94:	movw	r0, #0
   51a98:	and	r0, r0, #1
   51a9c:	strb	r0, [fp, #-1]
   51aa0:	b	51b90 <__assert_fail@plt+0x3efd8>
   51aa4:	ldr	r0, [sp, #8]
   51aa8:	ldr	r1, [r0]
   51aac:	ldr	r0, [r0, #4]
   51ab0:	ldr	r2, [sp, #4]
   51ab4:	str	r0, [r2, #4]
   51ab8:	str	r1, [r2]
   51abc:	ldr	r0, [sp, #8]
   51ac0:	ldr	r1, [r0, #96]	; 0x60
   51ac4:	ldr	r0, [r0, #100]	; 0x64
   51ac8:	ldr	r2, [sp, #4]
   51acc:	str	r0, [r2, #12]
   51ad0:	str	r1, [r2, #8]
   51ad4:	ldr	r0, [sp, #12]
   51ad8:	ldr	r1, [sp, #4]
   51adc:	str	r0, [r1, #16]
   51ae0:	ldr	r0, [fp, #-8]
   51ae4:	ldr	r0, [r0, #56]	; 0x38
   51ae8:	ldr	r1, [sp, #4]
   51aec:	bl	2e388 <__assert_fail@plt+0x1b7d0>
   51af0:	str	r0, [sp]
   51af4:	ldr	r0, [sp]
   51af8:	ldr	r1, [sp, #4]
   51afc:	cmp	r0, r1
   51b00:	beq	51b48 <__assert_fail@plt+0x3ef90>
   51b04:	ldr	r0, [sp, #4]
   51b08:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   51b0c:	ldr	r0, [sp]
   51b10:	movw	r1, #0
   51b14:	cmp	r0, r1
   51b18:	bne	51b2c <__assert_fail@plt+0x3ef74>
   51b1c:	movw	r0, #0
   51b20:	and	r0, r0, #1
   51b24:	strb	r0, [fp, #-1]
   51b28:	b	51b90 <__assert_fail@plt+0x3efd8>
   51b2c:	ldr	r0, [sp]
   51b30:	ldr	r0, [r0, #16]
   51b34:	ldr	r1, [sp, #12]
   51b38:	str	r0, [r1]
   51b3c:	ldr	r0, [sp, #12]
   51b40:	movw	r1, #2
   51b44:	strh	r1, [r0, #56]	; 0x38
   51b48:	b	51b84 <__assert_fail@plt+0x3efcc>
   51b4c:	ldr	r0, [fp, #-8]
   51b50:	ldr	r0, [r0, #56]	; 0x38
   51b54:	ldr	r1, [sp, #12]
   51b58:	add	r1, r1, #64	; 0x40
   51b5c:	bl	6f4e0 <__assert_fail@plt+0x5c928>
   51b60:	tst	r0, #1
   51b64:	beq	51b80 <__assert_fail@plt+0x3efc8>
   51b68:	ldr	r0, [sp, #12]
   51b6c:	ldr	r1, [sp, #12]
   51b70:	str	r0, [r1]
   51b74:	ldr	r0, [sp, #12]
   51b78:	movw	r1, #2
   51b7c:	strh	r1, [r0, #56]	; 0x38
   51b80:	b	51b84 <__assert_fail@plt+0x3efcc>
   51b84:	movw	r0, #1
   51b88:	and	r0, r0, #1
   51b8c:	strb	r0, [fp, #-1]
   51b90:	ldrb	r0, [fp, #-1]
   51b94:	and	r0, r0, #1
   51b98:	mov	sp, fp
   51b9c:	pop	{fp, pc}
   51ba0:	push	{fp, lr}
   51ba4:	mov	fp, sp
   51ba8:	sub	sp, sp, #24
   51bac:	str	r0, [fp, #-4]
   51bb0:	str	r1, [fp, #-8]
   51bb4:	and	r0, r2, #1
   51bb8:	strb	r0, [fp, #-9]
   51bbc:	ldr	r0, [fp, #-4]
   51bc0:	ldr	r0, [r0, #32]
   51bc4:	str	r0, [sp, #8]
   51bc8:	ldr	r0, [sp, #8]
   51bcc:	ldr	r1, [fp, #-8]
   51bd0:	cmp	r0, r1
   51bd4:	bne	51be8 <__assert_fail@plt+0x3f030>
   51bd8:	ldr	r0, [sp, #8]
   51bdc:	cmn	r0, #100	; 0x64
   51be0:	beq	51be8 <__assert_fail@plt+0x3f030>
   51be4:	bl	12b64 <abort@plt>
   51be8:	b	51bec <__assert_fail@plt+0x3f034>
   51bec:	ldrb	r0, [fp, #-9]
   51bf0:	tst	r0, #1
   51bf4:	beq	51c28 <__assert_fail@plt+0x3f070>
   51bf8:	ldr	r0, [fp, #-4]
   51bfc:	add	r0, r0, #60	; 0x3c
   51c00:	ldr	r1, [sp, #8]
   51c04:	bl	70c38 <__assert_fail@plt+0x5e080>
   51c08:	str	r0, [sp, #4]
   51c0c:	ldr	r0, [sp, #4]
   51c10:	movw	r1, #0
   51c14:	cmp	r1, r0
   51c18:	bgt	51c24 <__assert_fail@plt+0x3f06c>
   51c1c:	ldr	r0, [sp, #4]
   51c20:	bl	12b70 <close@plt>
   51c24:	b	51c5c <__assert_fail@plt+0x3f0a4>
   51c28:	ldr	r0, [fp, #-4]
   51c2c:	ldr	r0, [r0, #48]	; 0x30
   51c30:	and	r0, r0, #4
   51c34:	cmp	r0, #0
   51c38:	bne	51c58 <__assert_fail@plt+0x3f0a0>
   51c3c:	ldr	r0, [sp, #8]
   51c40:	movw	r1, #0
   51c44:	cmp	r1, r0
   51c48:	bgt	51c54 <__assert_fail@plt+0x3f09c>
   51c4c:	ldr	r0, [sp, #8]
   51c50:	bl	12b70 <close@plt>
   51c54:	b	51c58 <__assert_fail@plt+0x3f0a0>
   51c58:	b	51c5c <__assert_fail@plt+0x3f0a4>
   51c5c:	ldr	r0, [fp, #-8]
   51c60:	ldr	r1, [fp, #-4]
   51c64:	str	r0, [r1, #32]
   51c68:	mov	sp, fp
   51c6c:	pop	{fp, pc}
   51c70:	push	{fp, lr}
   51c74:	mov	fp, sp
   51c78:	sub	sp, sp, #16
   51c7c:	str	r0, [sp, #8]
   51c80:	str	r1, [sp, #4]
   51c84:	str	r2, [sp]
   51c88:	ldr	r0, [sp]
   51c8c:	cmp	r0, #0
   51c90:	beq	51cdc <__assert_fail@plt+0x3f124>
   51c94:	ldr	r0, [sp]
   51c98:	cmp	r0, #1
   51c9c:	beq	51cdc <__assert_fail@plt+0x3f124>
   51ca0:	ldr	r0, [sp]
   51ca4:	cmp	r0, #2
   51ca8:	beq	51cdc <__assert_fail@plt+0x3f124>
   51cac:	ldr	r0, [sp]
   51cb0:	cmp	r0, #3
   51cb4:	beq	51cdc <__assert_fail@plt+0x3f124>
   51cb8:	ldr	r0, [sp]
   51cbc:	cmp	r0, #4
   51cc0:	beq	51cdc <__assert_fail@plt+0x3f124>
   51cc4:	bl	128d0 <__errno_location@plt>
   51cc8:	movw	r1, #22
   51ccc:	str	r1, [r0]
   51cd0:	movw	r0, #1
   51cd4:	str	r0, [fp, #-4]
   51cd8:	b	51cf0 <__assert_fail@plt+0x3f138>
   51cdc:	ldr	r0, [sp]
   51ce0:	ldr	r1, [sp, #4]
   51ce4:	strh	r0, [r1, #60]	; 0x3c
   51ce8:	movw	r0, #0
   51cec:	str	r0, [fp, #-4]
   51cf0:	ldr	r0, [fp, #-4]
   51cf4:	mov	sp, fp
   51cf8:	pop	{fp, pc}
   51cfc:	push	{fp, lr}
   51d00:	mov	fp, sp
   51d04:	sub	sp, sp, #32
   51d08:	str	r0, [fp, #-8]
   51d0c:	str	r1, [fp, #-12]
   51d10:	ldr	r0, [fp, #-12]
   51d14:	cmp	r0, #0
   51d18:	beq	51d40 <__assert_fail@plt+0x3f188>
   51d1c:	ldr	r0, [fp, #-12]
   51d20:	cmp	r0, #4096	; 0x1000
   51d24:	beq	51d40 <__assert_fail@plt+0x3f188>
   51d28:	bl	128d0 <__errno_location@plt>
   51d2c:	movw	r1, #22
   51d30:	str	r1, [r0]
   51d34:	movw	r0, #0
   51d38:	str	r0, [fp, #-4]
   51d3c:	b	51f24 <__assert_fail@plt+0x3f36c>
   51d40:	ldr	r0, [fp, #-8]
   51d44:	ldr	r0, [r0]
   51d48:	str	r0, [sp, #16]
   51d4c:	bl	128d0 <__errno_location@plt>
   51d50:	movw	r1, #0
   51d54:	str	r1, [r0]
   51d58:	ldr	r0, [fp, #-8]
   51d5c:	ldr	r0, [r0, #48]	; 0x30
   51d60:	and	r0, r0, #8192	; 0x2000
   51d64:	cmp	r0, #0
   51d68:	beq	51d78 <__assert_fail@plt+0x3f1c0>
   51d6c:	movw	r0, #0
   51d70:	str	r0, [fp, #-4]
   51d74:	b	51f24 <__assert_fail@plt+0x3f36c>
   51d78:	ldr	r0, [sp, #16]
   51d7c:	ldrh	r0, [r0, #56]	; 0x38
   51d80:	cmp	r0, #9
   51d84:	bne	51d98 <__assert_fail@plt+0x3f1e0>
   51d88:	ldr	r0, [sp, #16]
   51d8c:	ldr	r0, [r0, #8]
   51d90:	str	r0, [fp, #-4]
   51d94:	b	51f24 <__assert_fail@plt+0x3f36c>
   51d98:	ldr	r0, [sp, #16]
   51d9c:	ldrh	r0, [r0, #56]	; 0x38
   51da0:	cmp	r0, #1
   51da4:	beq	51db4 <__assert_fail@plt+0x3f1fc>
   51da8:	movw	r0, #0
   51dac:	str	r0, [fp, #-4]
   51db0:	b	51f24 <__assert_fail@plt+0x3f36c>
   51db4:	ldr	r0, [fp, #-8]
   51db8:	ldr	r0, [r0, #4]
   51dbc:	movw	r1, #0
   51dc0:	cmp	r0, r1
   51dc4:	beq	51dd4 <__assert_fail@plt+0x3f21c>
   51dc8:	ldr	r0, [fp, #-8]
   51dcc:	ldr	r0, [r0, #4]
   51dd0:	bl	4fa28 <__assert_fail@plt+0x3ce70>
   51dd4:	ldr	r0, [fp, #-12]
   51dd8:	cmp	r0, #4096	; 0x1000
   51ddc:	bne	51dfc <__assert_fail@plt+0x3f244>
   51de0:	ldr	r0, [fp, #-8]
   51de4:	ldr	r1, [r0, #48]	; 0x30
   51de8:	orr	r1, r1, #4096	; 0x1000
   51dec:	str	r1, [r0, #48]	; 0x30
   51df0:	movw	r0, #2
   51df4:	str	r0, [fp, #-12]
   51df8:	b	51e04 <__assert_fail@plt+0x3f24c>
   51dfc:	movw	r0, #1
   51e00:	str	r0, [fp, #-12]
   51e04:	ldr	r0, [sp, #16]
   51e08:	ldr	r0, [r0, #48]	; 0x30
   51e0c:	cmp	r0, #0
   51e10:	bne	51e3c <__assert_fail@plt+0x3f284>
   51e14:	ldr	r0, [sp, #16]
   51e18:	ldr	r0, [r0, #24]
   51e1c:	ldrb	r0, [r0]
   51e20:	cmp	r0, #47	; 0x2f
   51e24:	beq	51e3c <__assert_fail@plt+0x3f284>
   51e28:	ldr	r0, [fp, #-8]
   51e2c:	ldr	r0, [r0, #48]	; 0x30
   51e30:	and	r0, r0, #4
   51e34:	cmp	r0, #0
   51e38:	beq	51e58 <__assert_fail@plt+0x3f2a0>
   51e3c:	ldr	r0, [fp, #-8]
   51e40:	ldr	r1, [fp, #-12]
   51e44:	bl	50b8c <__assert_fail@plt+0x3dfd4>
   51e48:	ldr	r1, [fp, #-8]
   51e4c:	str	r0, [r1, #4]
   51e50:	str	r0, [fp, #-4]
   51e54:	b	51f24 <__assert_fail@plt+0x3f36c>
   51e58:	ldr	r0, [fp, #-8]
   51e5c:	movw	r1, #26652	; 0x681c
   51e60:	movt	r1, #7
   51e64:	bl	4f98c <__assert_fail@plt+0x3cdd4>
   51e68:	str	r0, [sp, #12]
   51e6c:	cmp	r0, #0
   51e70:	bge	51e88 <__assert_fail@plt+0x3f2d0>
   51e74:	ldr	r0, [fp, #-8]
   51e78:	movw	r1, #0
   51e7c:	str	r1, [r0, #4]
   51e80:	str	r1, [fp, #-4]
   51e84:	b	51f24 <__assert_fail@plt+0x3f36c>
   51e88:	ldr	r0, [fp, #-8]
   51e8c:	ldr	r1, [fp, #-12]
   51e90:	bl	50b8c <__assert_fail@plt+0x3dfd4>
   51e94:	ldr	r1, [fp, #-8]
   51e98:	str	r0, [r1, #4]
   51e9c:	ldr	r0, [fp, #-8]
   51ea0:	ldr	r0, [r0, #48]	; 0x30
   51ea4:	and	r0, r0, #512	; 0x200
   51ea8:	cmp	r0, #0
   51eac:	beq	51ec8 <__assert_fail@plt+0x3f310>
   51eb0:	ldr	r0, [fp, #-8]
   51eb4:	ldr	r1, [sp, #12]
   51eb8:	movw	r2, #1
   51ebc:	and	r2, r2, #1
   51ec0:	bl	51ba0 <__assert_fail@plt+0x3efe8>
   51ec4:	b	51f18 <__assert_fail@plt+0x3f360>
   51ec8:	ldr	r0, [sp, #12]
   51ecc:	bl	12aa4 <fchdir@plt>
   51ed0:	cmp	r0, #0
   51ed4:	beq	51f10 <__assert_fail@plt+0x3f358>
   51ed8:	bl	128d0 <__errno_location@plt>
   51edc:	ldr	r0, [r0]
   51ee0:	str	r0, [sp, #8]
   51ee4:	ldr	r0, [sp, #12]
   51ee8:	bl	12b70 <close@plt>
   51eec:	ldr	r1, [sp, #8]
   51ef0:	str	r0, [sp, #4]
   51ef4:	str	r1, [sp]
   51ef8:	bl	128d0 <__errno_location@plt>
   51efc:	ldr	r1, [sp]
   51f00:	str	r1, [r0]
   51f04:	movw	r0, #0
   51f08:	str	r0, [fp, #-4]
   51f0c:	b	51f24 <__assert_fail@plt+0x3f36c>
   51f10:	ldr	r0, [sp, #12]
   51f14:	bl	12b70 <close@plt>
   51f18:	ldr	r0, [fp, #-8]
   51f1c:	ldr	r0, [r0, #4]
   51f20:	str	r0, [fp, #-4]
   51f24:	ldr	r0, [fp, #-4]
   51f28:	mov	sp, fp
   51f2c:	pop	{fp, pc}
   51f30:	push	{fp, lr}
   51f34:	mov	fp, sp
   51f38:	sub	sp, sp, #24
   51f3c:	str	r0, [fp, #-4]
   51f40:	str	r1, [fp, #-8]
   51f44:	ldr	r0, [fp, #-4]
   51f48:	str	r0, [sp, #12]
   51f4c:	ldr	r0, [sp, #12]
   51f50:	ldr	r1, [r0, #8]
   51f54:	ldr	r0, [r0, #12]
   51f58:	ldr	r2, [fp, #-8]
   51f5c:	mov	r3, #0
   51f60:	str	r0, [sp, #8]
   51f64:	mov	r0, r1
   51f68:	ldr	r1, [sp, #8]
   51f6c:	bl	7540c <__assert_fail@plt+0x62854>
   51f70:	str	r0, [sp, #4]
   51f74:	mov	r0, r2
   51f78:	mov	sp, fp
   51f7c:	pop	{fp, pc}
   51f80:	sub	sp, sp, #20
   51f84:	str	r0, [sp, #16]
   51f88:	str	r1, [sp, #12]
   51f8c:	ldr	r0, [sp, #16]
   51f90:	str	r0, [sp, #8]
   51f94:	ldr	r0, [sp, #12]
   51f98:	str	r0, [sp, #4]
   51f9c:	ldr	r0, [sp, #8]
   51fa0:	ldr	r1, [r0, #8]
   51fa4:	ldr	r0, [r0, #12]
   51fa8:	ldr	r2, [sp, #4]
   51fac:	ldr	r3, [r2, #8]
   51fb0:	ldr	r2, [r2, #12]
   51fb4:	eor	r0, r0, r2
   51fb8:	eor	r1, r1, r3
   51fbc:	orr	r0, r1, r0
   51fc0:	mov	r1, #0
   51fc4:	cmp	r0, #0
   51fc8:	str	r1, [sp]
   51fcc:	bne	52004 <__assert_fail@plt+0x3f44c>
   51fd0:	b	51fd4 <__assert_fail@plt+0x3f41c>
   51fd4:	ldr	r0, [sp, #8]
   51fd8:	ldr	r1, [r0]
   51fdc:	ldr	r0, [r0, #4]
   51fe0:	ldr	r2, [sp, #4]
   51fe4:	ldr	r3, [r2]
   51fe8:	ldr	r2, [r2, #4]
   51fec:	eor	r0, r0, r2
   51ff0:	eor	r1, r1, r3
   51ff4:	orr	r0, r1, r0
   51ff8:	clz	r0, r0
   51ffc:	lsr	r0, r0, #5
   52000:	str	r0, [sp]
   52004:	ldr	r0, [sp]
   52008:	and	r0, r0, #1
   5200c:	add	sp, sp, #20
   52010:	bx	lr
   52014:	push	{fp, lr}
   52018:	mov	fp, sp
   5201c:	sub	sp, sp, #16
   52020:	str	r0, [sp, #8]
   52024:	str	r1, [sp, #4]
   52028:	ldr	r0, [sp, #8]
   5202c:	ldr	r1, [sp, #4]
   52030:	bl	523dc <__assert_fail@plt+0x3f824>
   52034:	mov	r1, r0
   52038:	movw	r2, #19778	; 0x4d42
   5203c:	movt	r2, #65363	; 0xff53
   52040:	cmp	r0, r2
   52044:	str	r1, [sp]
   52048:	beq	520a8 <__assert_fail@plt+0x3f4f0>
   5204c:	b	52050 <__assert_fail@plt+0x3f498>
   52050:	ldr	r0, [sp]
   52054:	cmp	r0, #0
   52058:	beq	520a0 <__assert_fail@plt+0x3f4e8>
   5205c:	b	52060 <__assert_fail@plt+0x3f4a8>
   52060:	movw	r0, #26985	; 0x6969
   52064:	ldr	r1, [sp]
   52068:	cmp	r1, r0
   5206c:	beq	520ac <__assert_fail@plt+0x3f4f4>
   52070:	b	52074 <__assert_fail@plt+0x3f4bc>
   52074:	movw	r0, #40864	; 0x9fa0
   52078:	ldr	r1, [sp]
   5207c:	cmp	r1, r0
   52080:	beq	520b0 <__assert_fail@plt+0x3f4f8>
   52084:	b	52088 <__assert_fail@plt+0x3f4d0>
   52088:	movw	r0, #16719	; 0x414f
   5208c:	movt	r0, #21318	; 0x5346
   52090:	ldr	r1, [sp]
   52094:	cmp	r1, r0
   52098:	beq	520a4 <__assert_fail@plt+0x3f4ec>
   5209c:	b	520bc <__assert_fail@plt+0x3f504>
   520a0:	b	520a4 <__assert_fail@plt+0x3f4ec>
   520a4:	b	520a8 <__assert_fail@plt+0x3f4f0>
   520a8:	b	520ac <__assert_fail@plt+0x3f4f4>
   520ac:	b	520b0 <__assert_fail@plt+0x3f4f8>
   520b0:	movw	r0, #0
   520b4:	str	r0, [fp, #-4]
   520b8:	b	520c4 <__assert_fail@plt+0x3f50c>
   520bc:	movw	r0, #1
   520c0:	str	r0, [fp, #-4]
   520c4:	ldr	r0, [fp, #-4]
   520c8:	mov	sp, fp
   520cc:	pop	{fp, pc}
   520d0:	sub	sp, sp, #16
   520d4:	str	r0, [sp, #12]
   520d8:	str	r1, [sp, #8]
   520dc:	ldr	r0, [sp, #8]
   520e0:	sub	r0, r0, #1
   520e4:	cmp	r0, #11
   520e8:	str	r0, [sp]
   520ec:	bhi	52184 <__assert_fail@plt+0x3f5cc>
   520f0:	add	r0, pc, #8
   520f4:	ldr	r1, [sp]
   520f8:	ldr	r0, [r0, r1, lsl #2]
   520fc:	mov	pc, r0
   52100:	andeq	r2, r5, r4, asr r1
   52104:	andeq	r2, r5, ip, lsr r1
   52108:	andeq	r2, r5, r4, lsl #3
   5210c:	andeq	r2, r5, r8, asr #2
   52110:	andeq	r2, r5, r4, lsl #3
   52114:	andeq	r2, r5, r0, lsr r1
   52118:	andeq	r2, r5, r4, lsl #3
   5211c:	andeq	r2, r5, ip, ror #2
   52120:	andeq	r2, r5, r4, lsl #3
   52124:	andeq	r2, r5, r0, ror #2
   52128:	andeq	r2, r5, r4, lsl #3
   5212c:	andeq	r2, r5, r8, ror r1
   52130:	movw	r0, #24576	; 0x6000
   52134:	str	r0, [sp, #4]
   52138:	b	5218c <__assert_fail@plt+0x3f5d4>
   5213c:	movw	r0, #8192	; 0x2000
   52140:	str	r0, [sp, #4]
   52144:	b	5218c <__assert_fail@plt+0x3f5d4>
   52148:	movw	r0, #16384	; 0x4000
   5214c:	str	r0, [sp, #4]
   52150:	b	5218c <__assert_fail@plt+0x3f5d4>
   52154:	movw	r0, #4096	; 0x1000
   52158:	str	r0, [sp, #4]
   5215c:	b	5218c <__assert_fail@plt+0x3f5d4>
   52160:	movw	r0, #40960	; 0xa000
   52164:	str	r0, [sp, #4]
   52168:	b	5218c <__assert_fail@plt+0x3f5d4>
   5216c:	movw	r0, #32768	; 0x8000
   52170:	str	r0, [sp, #4]
   52174:	b	5218c <__assert_fail@plt+0x3f5d4>
   52178:	movw	r0, #49152	; 0xc000
   5217c:	str	r0, [sp, #4]
   52180:	b	5218c <__assert_fail@plt+0x3f5d4>
   52184:	movw	r0, #0
   52188:	str	r0, [sp, #4]
   5218c:	ldr	r0, [sp, #4]
   52190:	ldr	r1, [sp, #12]
   52194:	str	r0, [r1, #16]
   52198:	add	sp, sp, #16
   5219c:	bx	lr
   521a0:	push	{fp, lr}
   521a4:	mov	fp, sp
   521a8:	sub	sp, sp, #16
   521ac:	str	r0, [sp, #8]
   521b0:	str	r1, [sp, #4]
   521b4:	ldr	r0, [sp, #8]
   521b8:	ldr	r1, [sp, #4]
   521bc:	bl	523dc <__assert_fail@plt+0x3f824>
   521c0:	mov	r1, r0
   521c4:	movw	r2, #19778	; 0x4d42
   521c8:	movt	r2, #65363	; 0xff53
   521cc:	cmp	r0, r2
   521d0:	str	r1, [sp]
   521d4:	beq	52208 <__assert_fail@plt+0x3f650>
   521d8:	b	521dc <__assert_fail@plt+0x3f624>
   521dc:	movw	r0, #26985	; 0x6969
   521e0:	ldr	r1, [sp]
   521e4:	cmp	r1, r0
   521e8:	beq	52208 <__assert_fail@plt+0x3f650>
   521ec:	b	521f0 <__assert_fail@plt+0x3f638>
   521f0:	movw	r0, #6548	; 0x1994
   521f4:	movt	r0, #258	; 0x102
   521f8:	ldr	r1, [sp]
   521fc:	cmp	r1, r0
   52200:	bne	52218 <__assert_fail@plt+0x3f660>
   52204:	b	52208 <__assert_fail@plt+0x3f650>
   52208:	movw	r0, #0
   5220c:	and	r0, r0, #1
   52210:	strb	r0, [fp, #-1]
   52214:	b	52224 <__assert_fail@plt+0x3f66c>
   52218:	movw	r0, #1
   5221c:	and	r0, r0, #1
   52220:	strb	r0, [fp, #-1]
   52224:	ldrb	r0, [fp, #-1]
   52228:	and	r0, r0, #1
   5222c:	mov	sp, fp
   52230:	pop	{fp, pc}
   52234:	sub	sp, sp, #20
   52238:	str	r0, [sp, #16]
   5223c:	str	r1, [sp, #12]
   52240:	ldr	r0, [sp, #16]
   52244:	ldr	r0, [r0, #24]
   52248:	str	r0, [sp, #4]
   5224c:	ldr	r0, [sp, #16]
   52250:	ldr	r0, [r0, #4]
   52254:	str	r0, [sp, #8]
   52258:	ldr	r0, [sp, #8]
   5225c:	movw	r1, #0
   52260:	cmp	r0, r1
   52264:	beq	522c8 <__assert_fail@plt+0x3f710>
   52268:	b	5226c <__assert_fail@plt+0x3f6b4>
   5226c:	ldr	r0, [sp, #8]
   52270:	ldr	r0, [r0, #24]
   52274:	ldr	r1, [sp, #8]
   52278:	add	r1, r1, #168	; 0xa8
   5227c:	cmp	r0, r1
   52280:	beq	522a8 <__assert_fail@plt+0x3f6f0>
   52284:	ldr	r0, [sp, #4]
   52288:	ldr	r1, [sp, #8]
   5228c:	ldr	r1, [r1, #24]
   52290:	ldr	r2, [sp, #8]
   52294:	ldr	r2, [r2, #28]
   52298:	sub	r1, r1, r2
   5229c:	add	r0, r0, r1
   522a0:	ldr	r1, [sp, #8]
   522a4:	str	r0, [r1, #24]
   522a8:	ldr	r0, [sp, #4]
   522ac:	ldr	r1, [sp, #8]
   522b0:	str	r0, [r1, #28]
   522b4:	b	522b8 <__assert_fail@plt+0x3f700>
   522b8:	ldr	r0, [sp, #8]
   522bc:	ldr	r0, [r0, #8]
   522c0:	str	r0, [sp, #8]
   522c4:	b	52258 <__assert_fail@plt+0x3f6a0>
   522c8:	ldr	r0, [sp, #12]
   522cc:	str	r0, [sp, #8]
   522d0:	ldr	r0, [sp, #8]
   522d4:	ldr	r0, [r0, #48]	; 0x30
   522d8:	cmp	r0, #0
   522dc:	blt	52368 <__assert_fail@plt+0x3f7b0>
   522e0:	b	522e4 <__assert_fail@plt+0x3f72c>
   522e4:	ldr	r0, [sp, #8]
   522e8:	ldr	r0, [r0, #24]
   522ec:	ldr	r1, [sp, #8]
   522f0:	add	r1, r1, #168	; 0xa8
   522f4:	cmp	r0, r1
   522f8:	beq	52320 <__assert_fail@plt+0x3f768>
   522fc:	ldr	r0, [sp, #4]
   52300:	ldr	r1, [sp, #8]
   52304:	ldr	r1, [r1, #24]
   52308:	ldr	r2, [sp, #8]
   5230c:	ldr	r2, [r2, #28]
   52310:	sub	r1, r1, r2
   52314:	add	r0, r0, r1
   52318:	ldr	r1, [sp, #8]
   5231c:	str	r0, [r1, #24]
   52320:	ldr	r0, [sp, #4]
   52324:	ldr	r1, [sp, #8]
   52328:	str	r0, [r1, #28]
   5232c:	ldr	r0, [sp, #8]
   52330:	ldr	r0, [r0, #8]
   52334:	movw	r1, #0
   52338:	cmp	r0, r1
   5233c:	beq	52350 <__assert_fail@plt+0x3f798>
   52340:	ldr	r0, [sp, #8]
   52344:	ldr	r0, [r0, #8]
   52348:	str	r0, [sp]
   5234c:	b	5235c <__assert_fail@plt+0x3f7a4>
   52350:	ldr	r0, [sp, #8]
   52354:	ldr	r0, [r0, #4]
   52358:	str	r0, [sp]
   5235c:	ldr	r0, [sp]
   52360:	str	r0, [sp, #8]
   52364:	b	522d0 <__assert_fail@plt+0x3f718>
   52368:	add	sp, sp, #20
   5236c:	bx	lr
   52370:	push	{r4, r5, fp, lr}
   52374:	add	fp, sp, #8
   52378:	sub	sp, sp, #12
   5237c:	str	r0, [sp, #8]
   52380:	str	r1, [sp, #4]
   52384:	ldr	r0, [sp, #8]
   52388:	ldr	r0, [r0]
   5238c:	ldr	r1, [r0, #160]	; 0xa0
   52390:	ldr	r0, [r0, #164]	; 0xa4
   52394:	ldr	r2, [sp, #4]
   52398:	ldr	r2, [r2]
   5239c:	ldr	r3, [r2, #160]	; 0xa0
   523a0:	ldr	r2, [r2, #164]	; 0xa4
   523a4:	subs	ip, r3, r1
   523a8:	sbcs	lr, r2, r0
   523ac:	mov	r4, #0
   523b0:	mov	r5, r4
   523b4:	movwcc	r5, #1
   523b8:	subs	r1, r1, r3
   523bc:	sbcs	r0, r0, r2
   523c0:	movwcc	r4, #1
   523c4:	and	r2, r4, #1
   523c8:	sub	r2, r5, r2
   523cc:	str	r0, [sp]
   523d0:	mov	r0, r2
   523d4:	sub	sp, fp, #8
   523d8:	pop	{r4, r5, fp, pc}
   523dc:	push	{fp, lr}
   523e0:	mov	fp, sp
   523e4:	sub	sp, sp, #136	; 0x88
   523e8:	str	r0, [fp, #-8]
   523ec:	str	r1, [fp, #-12]
   523f0:	ldr	r0, [fp, #-8]
   523f4:	ldr	r0, [r0, #44]	; 0x2c
   523f8:	str	r0, [fp, #-16]
   523fc:	ldr	r0, [fp, #-16]
   52400:	ldr	r0, [r0, #52]	; 0x34
   52404:	str	r0, [fp, #-20]	; 0xffffffec
   52408:	ldr	r0, [fp, #-16]
   5240c:	ldr	r0, [r0, #48]	; 0x30
   52410:	and	r0, r0, #512	; 0x200
   52414:	cmp	r0, #0
   52418:	bne	52428 <__assert_fail@plt+0x3f870>
   5241c:	movw	r0, #0
   52420:	str	r0, [fp, #-4]
   52424:	b	52598 <__assert_fail@plt+0x3f9e0>
   52428:	ldr	r0, [fp, #-20]	; 0xffffffec
   5242c:	movw	r1, #0
   52430:	cmp	r0, r1
   52434:	bne	5246c <__assert_fail@plt+0x3f8b4>
   52438:	movw	r0, #13
   5243c:	movw	r1, #0
   52440:	movw	r2, #9636	; 0x25a4
   52444:	movt	r2, #5
   52448:	movw	r3, #9720	; 0x25f8
   5244c:	movt	r3, #5
   52450:	movw	ip, #60164	; 0xeb04
   52454:	movt	ip, #4
   52458:	str	ip, [sp]
   5245c:	bl	2d364 <__assert_fail@plt+0x1a7ac>
   52460:	ldr	r1, [fp, #-16]
   52464:	str	r0, [r1, #52]	; 0x34
   52468:	str	r0, [fp, #-20]	; 0xffffffec
   5246c:	ldr	r0, [fp, #-20]	; 0xffffffec
   52470:	movw	r1, #0
   52474:	cmp	r0, r1
   52478:	beq	524c4 <__assert_fail@plt+0x3f90c>
   5247c:	ldr	r0, [fp, #-8]
   52480:	ldr	r1, [r0, #64]	; 0x40
   52484:	ldr	r0, [r0, #68]	; 0x44
   52488:	str	r0, [sp, #12]
   5248c:	str	r1, [sp, #8]
   52490:	ldr	r0, [fp, #-20]	; 0xffffffec
   52494:	add	r1, sp, #8
   52498:	bl	2ce48 <__assert_fail@plt+0x1a290>
   5249c:	str	r0, [fp, #-24]	; 0xffffffe8
   524a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   524a4:	movw	r1, #0
   524a8:	cmp	r0, r1
   524ac:	beq	524c0 <__assert_fail@plt+0x3f908>
   524b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   524b4:	ldr	r0, [r0, #8]
   524b8:	str	r0, [fp, #-4]
   524bc:	b	52598 <__assert_fail@plt+0x3f9e0>
   524c0:	b	524c4 <__assert_fail@plt+0x3f90c>
   524c4:	ldr	r0, [fp, #-12]
   524c8:	cmp	r0, #0
   524cc:	blt	524e4 <__assert_fail@plt+0x3f92c>
   524d0:	ldr	r0, [fp, #-12]
   524d4:	add	r1, sp, #24
   524d8:	bl	12444 <fstatfs64@plt>
   524dc:	cmp	r0, #0
   524e0:	beq	524f0 <__assert_fail@plt+0x3f938>
   524e4:	movw	r0, #0
   524e8:	str	r0, [fp, #-4]
   524ec:	b	52598 <__assert_fail@plt+0x3f9e0>
   524f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   524f4:	movw	r1, #0
   524f8:	cmp	r0, r1
   524fc:	beq	52590 <__assert_fail@plt+0x3f9d8>
   52500:	movw	r0, #16
   52504:	bl	527f0 <__assert_fail@plt+0x3fc38>
   52508:	str	r0, [sp, #4]
   5250c:	ldr	r0, [sp, #4]
   52510:	movw	r1, #0
   52514:	cmp	r0, r1
   52518:	beq	5258c <__assert_fail@plt+0x3f9d4>
   5251c:	ldr	r0, [fp, #-8]
   52520:	ldr	r1, [r0, #64]	; 0x40
   52524:	ldr	r0, [r0, #68]	; 0x44
   52528:	ldr	r2, [sp, #4]
   5252c:	str	r0, [r2, #4]
   52530:	str	r1, [r2]
   52534:	ldr	r0, [sp, #24]
   52538:	ldr	r1, [sp, #4]
   5253c:	str	r0, [r1, #8]
   52540:	ldr	r0, [fp, #-20]	; 0xffffffec
   52544:	ldr	r1, [sp, #4]
   52548:	bl	2e388 <__assert_fail@plt+0x1b7d0>
   5254c:	str	r0, [fp, #-24]	; 0xffffffe8
   52550:	ldr	r0, [fp, #-24]	; 0xffffffe8
   52554:	movw	r1, #0
   52558:	cmp	r0, r1
   5255c:	beq	52580 <__assert_fail@plt+0x3f9c8>
   52560:	b	52564 <__assert_fail@plt+0x3f9ac>
   52564:	ldr	r0, [fp, #-24]	; 0xffffffe8
   52568:	ldr	r1, [sp, #4]
   5256c:	cmp	r0, r1
   52570:	beq	52578 <__assert_fail@plt+0x3f9c0>
   52574:	bl	12b64 <abort@plt>
   52578:	b	5257c <__assert_fail@plt+0x3f9c4>
   5257c:	b	52588 <__assert_fail@plt+0x3f9d0>
   52580:	ldr	r0, [sp, #4]
   52584:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   52588:	b	5258c <__assert_fail@plt+0x3f9d4>
   5258c:	b	52590 <__assert_fail@plt+0x3f9d8>
   52590:	ldr	r0, [sp, #24]
   52594:	str	r0, [fp, #-4]
   52598:	ldr	r0, [fp, #-4]
   5259c:	mov	sp, fp
   525a0:	pop	{fp, pc}
   525a4:	push	{fp, lr}
   525a8:	mov	fp, sp
   525ac:	sub	sp, sp, #32
   525b0:	str	r0, [fp, #-4]
   525b4:	str	r1, [fp, #-8]
   525b8:	ldr	r0, [fp, #-4]
   525bc:	str	r0, [fp, #-12]
   525c0:	ldr	r0, [fp, #-12]
   525c4:	ldr	r1, [r0]
   525c8:	ldr	r0, [r0, #4]
   525cc:	str	r0, [sp, #12]
   525d0:	str	r1, [sp, #8]
   525d4:	ldr	r0, [sp, #8]
   525d8:	ldr	r1, [sp, #12]
   525dc:	ldr	r2, [fp, #-8]
   525e0:	mov	r3, #0
   525e4:	bl	7540c <__assert_fail@plt+0x62854>
   525e8:	str	r0, [sp, #4]
   525ec:	mov	r0, r2
   525f0:	mov	sp, fp
   525f4:	pop	{fp, pc}
   525f8:	sub	sp, sp, #16
   525fc:	str	r0, [sp, #12]
   52600:	str	r1, [sp, #8]
   52604:	ldr	r0, [sp, #12]
   52608:	str	r0, [sp, #4]
   5260c:	ldr	r0, [sp, #8]
   52610:	str	r0, [sp]
   52614:	ldr	r0, [sp, #4]
   52618:	ldr	r1, [r0]
   5261c:	ldr	r0, [r0, #4]
   52620:	ldr	r2, [sp]
   52624:	ldr	r3, [r2]
   52628:	ldr	r2, [r2, #4]
   5262c:	eor	r0, r0, r2
   52630:	eor	r1, r1, r3
   52634:	orr	r0, r1, r0
   52638:	clz	r0, r0
   5263c:	lsr	r0, r0, #5
   52640:	and	r0, r0, #1
   52644:	add	sp, sp, #16
   52648:	bx	lr
   5264c:	push	{fp, lr}
   52650:	mov	fp, sp
   52654:	sub	sp, sp, #24
   52658:	str	r0, [fp, #-4]
   5265c:	str	r1, [fp, #-8]
   52660:	ldr	r0, [fp, #-4]
   52664:	str	r0, [sp, #12]
   52668:	ldr	r0, [fp, #-8]
   5266c:	str	r0, [sp, #8]
   52670:	ldr	r0, [sp, #12]
   52674:	ldr	r0, [r0]
   52678:	ldr	r0, [r0, #44]	; 0x2c
   5267c:	ldr	r0, [r0, #44]	; 0x2c
   52680:	ldr	r1, [sp, #12]
   52684:	ldr	r2, [sp, #8]
   52688:	str	r0, [sp, #4]
   5268c:	mov	r0, r1
   52690:	mov	r1, r2
   52694:	ldr	r2, [sp, #4]
   52698:	blx	r2
   5269c:	mov	sp, fp
   526a0:	pop	{fp, pc}
   526a4:	push	{fp, lr}
   526a8:	mov	fp, sp
   526ac:	sub	sp, sp, #16
   526b0:	str	r0, [fp, #-4]
   526b4:	str	r1, [sp, #8]
   526b8:	ldr	r0, [fp, #-4]
   526bc:	ldr	r1, [sp, #8]
   526c0:	bl	12870 <getfilecon@plt>
   526c4:	str	r0, [sp, #4]
   526c8:	ldr	r0, [sp, #4]
   526cc:	ldr	r1, [sp, #8]
   526d0:	bl	526dc <__assert_fail@plt+0x3fb24>
   526d4:	mov	sp, fp
   526d8:	pop	{fp, pc}
   526dc:	push	{fp, lr}
   526e0:	mov	fp, sp
   526e4:	sub	sp, sp, #16
   526e8:	str	r0, [sp, #8]
   526ec:	str	r1, [sp, #4]
   526f0:	ldr	r0, [sp, #8]
   526f4:	cmp	r0, #0
   526f8:	bne	52714 <__assert_fail@plt+0x3fb5c>
   526fc:	bl	128d0 <__errno_location@plt>
   52700:	movw	r1, #95	; 0x5f
   52704:	str	r1, [r0]
   52708:	mvn	r0, #0
   5270c:	str	r0, [fp, #-4]
   52710:	b	52774 <__assert_fail@plt+0x3fbbc>
   52714:	ldr	r0, [sp, #8]
   52718:	cmp	r0, #10
   5271c:	bne	5276c <__assert_fail@plt+0x3fbb4>
   52720:	ldr	r0, [sp, #4]
   52724:	ldr	r0, [r0]
   52728:	movw	r1, #49251	; 0xc063
   5272c:	movt	r1, #7
   52730:	bl	124c8 <strcmp@plt>
   52734:	cmp	r0, #0
   52738:	bne	5276c <__assert_fail@plt+0x3fbb4>
   5273c:	ldr	r0, [sp, #4]
   52740:	ldr	r0, [r0]
   52744:	bl	12ac8 <freecon@plt>
   52748:	ldr	r0, [sp, #4]
   5274c:	movw	r1, #0
   52750:	str	r1, [r0]
   52754:	bl	128d0 <__errno_location@plt>
   52758:	movw	r1, #61	; 0x3d
   5275c:	str	r1, [r0]
   52760:	mvn	r0, #0
   52764:	str	r0, [fp, #-4]
   52768:	b	52774 <__assert_fail@plt+0x3fbbc>
   5276c:	ldr	r0, [sp, #8]
   52770:	str	r0, [fp, #-4]
   52774:	ldr	r0, [fp, #-4]
   52778:	mov	sp, fp
   5277c:	pop	{fp, pc}
   52780:	push	{fp, lr}
   52784:	mov	fp, sp
   52788:	sub	sp, sp, #16
   5278c:	str	r0, [fp, #-4]
   52790:	str	r1, [sp, #8]
   52794:	ldr	r0, [fp, #-4]
   52798:	ldr	r1, [sp, #8]
   5279c:	bl	127c8 <lgetfilecon@plt>
   527a0:	str	r0, [sp, #4]
   527a4:	ldr	r0, [sp, #4]
   527a8:	ldr	r1, [sp, #8]
   527ac:	bl	526dc <__assert_fail@plt+0x3fb24>
   527b0:	mov	sp, fp
   527b4:	pop	{fp, pc}
   527b8:	push	{fp, lr}
   527bc:	mov	fp, sp
   527c0:	sub	sp, sp, #16
   527c4:	str	r0, [fp, #-4]
   527c8:	str	r1, [sp, #8]
   527cc:	ldr	r0, [fp, #-4]
   527d0:	ldr	r1, [sp, #8]
   527d4:	bl	12678 <fgetfilecon@plt>
   527d8:	str	r0, [sp, #4]
   527dc:	ldr	r0, [sp, #4]
   527e0:	ldr	r1, [sp, #8]
   527e4:	bl	526dc <__assert_fail@plt+0x3fb24>
   527e8:	mov	sp, fp
   527ec:	pop	{fp, pc}
   527f0:	push	{fp, lr}
   527f4:	mov	fp, sp
   527f8:	sub	sp, sp, #16
   527fc:	str	r0, [sp, #8]
   52800:	ldr	r0, [sp, #8]
   52804:	cmp	r0, #0
   52808:	bne	52814 <__assert_fail@plt+0x3fc5c>
   5280c:	movw	r0, #1
   52810:	str	r0, [sp, #8]
   52814:	ldr	r0, [pc, #64]	; 5285c <__assert_fail@plt+0x3fca4>
   52818:	ldr	r1, [sp, #8]
   5281c:	cmp	r0, r1
   52820:	bcs	5283c <__assert_fail@plt+0x3fc84>
   52824:	bl	128d0 <__errno_location@plt>
   52828:	movw	r1, #12
   5282c:	str	r1, [r0]
   52830:	movw	r0, #0
   52834:	str	r0, [fp, #-4]
   52838:	b	52850 <__assert_fail@plt+0x3fc98>
   5283c:	ldr	r0, [sp, #8]
   52840:	bl	127d4 <malloc@plt>
   52844:	str	r0, [sp, #4]
   52848:	ldr	r0, [sp, #4]
   5284c:	str	r0, [fp, #-4]
   52850:	ldr	r0, [fp, #-4]
   52854:	mov	sp, fp
   52858:	pop	{fp, pc}
   5285c:	svcvc	0x00ffffff
   52860:	push	{fp, lr}
   52864:	mov	fp, sp
   52868:	sub	sp, sp, #32
   5286c:	str	r0, [fp, #-8]
   52870:	str	r1, [fp, #-12]
   52874:	str	r2, [sp, #16]
   52878:	str	r3, [sp, #12]
   5287c:	ldr	r0, [fp, #-8]
   52880:	movw	r1, #0
   52884:	cmp	r0, r1
   52888:	bne	52894 <__assert_fail@plt+0x3fcdc>
   5288c:	add	r0, sp, #4
   52890:	str	r0, [fp, #-8]
   52894:	ldr	r0, [fp, #-8]
   52898:	ldr	r1, [fp, #-12]
   5289c:	ldr	r2, [sp, #16]
   528a0:	ldr	r3, [sp, #12]
   528a4:	bl	12768 <mbrtowc@plt>
   528a8:	str	r0, [sp, #8]
   528ac:	ldr	r0, [sp, #8]
   528b0:	mvn	r1, #1
   528b4:	cmp	r1, r0
   528b8:	bhi	528fc <__assert_fail@plt+0x3fd44>
   528bc:	ldr	r0, [sp, #16]
   528c0:	cmp	r0, #0
   528c4:	beq	528fc <__assert_fail@plt+0x3fd44>
   528c8:	movw	r0, #0
   528cc:	bl	70b0c <__assert_fail@plt+0x5df54>
   528d0:	tst	r0, #1
   528d4:	bne	528fc <__assert_fail@plt+0x3fd44>
   528d8:	ldr	r0, [fp, #-12]
   528dc:	ldrb	r0, [r0]
   528e0:	strb	r0, [sp, #3]
   528e4:	ldrb	r0, [sp, #3]
   528e8:	ldr	r1, [fp, #-8]
   528ec:	str	r0, [r1]
   528f0:	movw	r0, #1
   528f4:	str	r0, [fp, #-4]
   528f8:	b	52904 <__assert_fail@plt+0x3fd4c>
   528fc:	ldr	r0, [sp, #8]
   52900:	str	r0, [fp, #-4]
   52904:	ldr	r0, [fp, #-4]
   52908:	mov	sp, fp
   5290c:	pop	{fp, pc}
   52910:	push	{fp, lr}
   52914:	mov	fp, sp
   52918:	sub	sp, sp, #136	; 0x88
   5291c:	and	r0, r0, #1
   52920:	strb	r0, [fp, #-5]
   52924:	sub	r0, fp, #12
   52928:	str	r0, [fp, #-20]	; 0xffffffec
   5292c:	movw	r0, #49261	; 0xc06d
   52930:	movt	r0, #7
   52934:	str	r0, [fp, #-28]	; 0xffffffe4
   52938:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5293c:	movw	r1, #39712	; 0x9b20
   52940:	movt	r1, #7
   52944:	bl	12ab0 <fopen64@plt>
   52948:	str	r0, [fp, #-24]	; 0xffffffe8
   5294c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   52950:	movw	r1, #0
   52954:	cmp	r0, r1
   52958:	beq	53010 <__assert_fail@plt+0x40458>
   5295c:	movw	r0, #0
   52960:	str	r0, [fp, #-32]	; 0xffffffe0
   52964:	str	r0, [fp, #-36]	; 0xffffffdc
   52968:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5296c:	sub	r0, fp, #32
   52970:	sub	r1, fp, #36	; 0x24
   52974:	bl	12b04 <getline@plt>
   52978:	cmn	r0, #1
   5297c:	beq	52fb0 <__assert_fail@plt+0x403f8>
   52980:	ldr	r0, [fp, #-32]	; 0xffffffe0
   52984:	movw	r1, #49282	; 0xc082
   52988:	movt	r1, #7
   5298c:	sub	r2, fp, #40	; 0x28
   52990:	sub	r3, fp, #44	; 0x2c
   52994:	sub	ip, fp, #52	; 0x34
   52998:	str	ip, [sp]
   5299c:	bl	12a44 <sscanf@plt>
   529a0:	str	r0, [fp, #-48]	; 0xffffffd0
   529a4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   529a8:	cmp	r0, #2
   529ac:	beq	529c0 <__assert_fail@plt+0x3fe08>
   529b0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   529b4:	cmp	r0, #3
   529b8:	beq	529c0 <__assert_fail@plt+0x3fe08>
   529bc:	b	52968 <__assert_fail@plt+0x3fdb0>
   529c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   529c4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   529c8:	add	r0, r0, r1
   529cc:	str	r0, [fp, #-56]	; 0xffffffc8
   529d0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   529d4:	bl	5362c <__assert_fail@plt+0x40a74>
   529d8:	str	r0, [fp, #-60]	; 0xffffffc4
   529dc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   529e0:	movw	r1, #0
   529e4:	cmp	r0, r1
   529e8:	bne	529f0 <__assert_fail@plt+0x3fe38>
   529ec:	b	52968 <__assert_fail@plt+0x3fdb0>
   529f0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   529f4:	add	r0, r0, #1
   529f8:	str	r0, [fp, #-64]	; 0xffffffc0
   529fc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   52a00:	bl	5362c <__assert_fail@plt+0x40a74>
   52a04:	str	r0, [fp, #-60]	; 0xffffffc4
   52a08:	ldr	r0, [fp, #-60]	; 0xffffffc4
   52a0c:	movw	r1, #0
   52a10:	cmp	r0, r1
   52a14:	bne	52a1c <__assert_fail@plt+0x3fe64>
   52a18:	b	52968 <__assert_fail@plt+0x3fdb0>
   52a1c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   52a20:	add	r0, r0, #1
   52a24:	movw	r1, #49299	; 0xc093
   52a28:	movt	r1, #7
   52a2c:	bl	6cb0c <__assert_fail@plt+0x59f54>
   52a30:	str	r0, [sp, #68]	; 0x44
   52a34:	ldr	r0, [sp, #68]	; 0x44
   52a38:	movw	r1, #0
   52a3c:	cmp	r0, r1
   52a40:	bne	52a48 <__assert_fail@plt+0x3fe90>
   52a44:	b	52968 <__assert_fail@plt+0x3fdb0>
   52a48:	ldr	r0, [sp, #68]	; 0x44
   52a4c:	add	r0, r0, #3
   52a50:	str	r0, [sp, #64]	; 0x40
   52a54:	ldr	r0, [sp, #64]	; 0x40
   52a58:	bl	5362c <__assert_fail@plt+0x40a74>
   52a5c:	str	r0, [fp, #-60]	; 0xffffffc4
   52a60:	ldr	r0, [fp, #-60]	; 0xffffffc4
   52a64:	movw	r1, #0
   52a68:	cmp	r0, r1
   52a6c:	bne	52a74 <__assert_fail@plt+0x3febc>
   52a70:	b	52968 <__assert_fail@plt+0x3fdb0>
   52a74:	ldr	r0, [fp, #-60]	; 0xffffffc4
   52a78:	add	r0, r0, #1
   52a7c:	str	r0, [sp, #60]	; 0x3c
   52a80:	ldr	r0, [sp, #60]	; 0x3c
   52a84:	bl	5362c <__assert_fail@plt+0x40a74>
   52a88:	movw	r1, #0
   52a8c:	cmp	r0, r1
   52a90:	bne	52a98 <__assert_fail@plt+0x3fee0>
   52a94:	b	52968 <__assert_fail@plt+0x3fdb0>
   52a98:	ldr	r0, [sp, #60]	; 0x3c
   52a9c:	bl	53674 <__assert_fail@plt+0x40abc>
   52aa0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   52aa4:	bl	53674 <__assert_fail@plt+0x40abc>
   52aa8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   52aac:	bl	53674 <__assert_fail@plt+0x40abc>
   52ab0:	ldr	r0, [sp, #64]	; 0x40
   52ab4:	bl	53674 <__assert_fail@plt+0x40abc>
   52ab8:	mov	r0, #32
   52abc:	bl	4a2f0 <__assert_fail@plt+0x37738>
   52ac0:	str	r0, [fp, #-16]
   52ac4:	ldr	r0, [sp, #60]	; 0x3c
   52ac8:	bl	4cff0 <__assert_fail@plt+0x3a438>
   52acc:	ldr	r1, [fp, #-16]
   52ad0:	str	r0, [r1]
   52ad4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   52ad8:	bl	4cff0 <__assert_fail@plt+0x3a438>
   52adc:	ldr	r1, [fp, #-16]
   52ae0:	str	r0, [r1, #4]
   52ae4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   52ae8:	bl	4cff0 <__assert_fail@plt+0x3a438>
   52aec:	ldr	r1, [fp, #-16]
   52af0:	str	r0, [r1, #8]
   52af4:	ldr	r0, [sp, #64]	; 0x40
   52af8:	bl	4cff0 <__assert_fail@plt+0x3a438>
   52afc:	ldr	r1, [fp, #-16]
   52b00:	str	r0, [r1, #12]
   52b04:	ldr	r0, [fp, #-16]
   52b08:	ldrb	r1, [r0, #24]
   52b0c:	orr	r1, r1, #4
   52b10:	strb	r1, [r0, #24]
   52b14:	ldr	r0, [fp, #-40]	; 0xffffffd8
   52b18:	ldr	r1, [fp, #-44]	; 0xffffffd4
   52b1c:	bl	124ec <gnu_dev_makedev@plt>
   52b20:	ldr	r2, [fp, #-16]
   52b24:	str	r1, [r2, #20]
   52b28:	str	r0, [r2, #16]
   52b2c:	ldr	r0, [fp, #-16]
   52b30:	ldr	r0, [r0, #12]
   52b34:	movw	r1, #49303	; 0xc097
   52b38:	movt	r1, #7
   52b3c:	bl	124c8 <strcmp@plt>
   52b40:	cmp	r0, #0
   52b44:	movw	r0, #1
   52b48:	str	r0, [sp, #36]	; 0x24
   52b4c:	beq	52d38 <__assert_fail@plt+0x40180>
   52b50:	ldr	r0, [fp, #-16]
   52b54:	ldr	r0, [r0, #12]
   52b58:	movw	r1, #49310	; 0xc09e
   52b5c:	movt	r1, #7
   52b60:	bl	124c8 <strcmp@plt>
   52b64:	cmp	r0, #0
   52b68:	movw	r0, #1
   52b6c:	str	r0, [sp, #36]	; 0x24
   52b70:	beq	52d38 <__assert_fail@plt+0x40180>
   52b74:	ldr	r0, [fp, #-16]
   52b78:	ldr	r0, [r0, #12]
   52b7c:	movw	r1, #49315	; 0xc0a3
   52b80:	movt	r1, #7
   52b84:	bl	124c8 <strcmp@plt>
   52b88:	cmp	r0, #0
   52b8c:	movw	r0, #1
   52b90:	str	r0, [sp, #36]	; 0x24
   52b94:	beq	52d38 <__assert_fail@plt+0x40180>
   52b98:	ldr	r0, [fp, #-16]
   52b9c:	ldr	r0, [r0, #12]
   52ba0:	movw	r1, #49321	; 0xc0a9
   52ba4:	movt	r1, #7
   52ba8:	bl	124c8 <strcmp@plt>
   52bac:	cmp	r0, #0
   52bb0:	movw	r0, #1
   52bb4:	str	r0, [sp, #36]	; 0x24
   52bb8:	beq	52d38 <__assert_fail@plt+0x40180>
   52bbc:	ldr	r0, [fp, #-16]
   52bc0:	ldr	r0, [r0, #12]
   52bc4:	movw	r1, #49329	; 0xc0b1
   52bc8:	movt	r1, #7
   52bcc:	bl	124c8 <strcmp@plt>
   52bd0:	cmp	r0, #0
   52bd4:	movw	r0, #1
   52bd8:	str	r0, [sp, #36]	; 0x24
   52bdc:	beq	52d38 <__assert_fail@plt+0x40180>
   52be0:	ldr	r0, [fp, #-16]
   52be4:	ldr	r0, [r0, #12]
   52be8:	movw	r1, #49336	; 0xc0b8
   52bec:	movt	r1, #7
   52bf0:	bl	124c8 <strcmp@plt>
   52bf4:	cmp	r0, #0
   52bf8:	movw	r0, #1
   52bfc:	str	r0, [sp, #36]	; 0x24
   52c00:	beq	52d38 <__assert_fail@plt+0x40180>
   52c04:	ldr	r0, [fp, #-16]
   52c08:	ldr	r0, [r0, #12]
   52c0c:	movw	r1, #49344	; 0xc0c0
   52c10:	movt	r1, #7
   52c14:	bl	124c8 <strcmp@plt>
   52c18:	cmp	r0, #0
   52c1c:	movw	r0, #1
   52c20:	str	r0, [sp, #36]	; 0x24
   52c24:	beq	52d38 <__assert_fail@plt+0x40180>
   52c28:	ldr	r0, [fp, #-16]
   52c2c:	ldr	r0, [r0, #12]
   52c30:	movw	r1, #49356	; 0xc0cc
   52c34:	movt	r1, #7
   52c38:	bl	124c8 <strcmp@plt>
   52c3c:	cmp	r0, #0
   52c40:	movw	r0, #1
   52c44:	str	r0, [sp, #36]	; 0x24
   52c48:	beq	52d38 <__assert_fail@plt+0x40180>
   52c4c:	ldr	r0, [fp, #-16]
   52c50:	ldr	r0, [r0, #12]
   52c54:	movw	r1, #49363	; 0xc0d3
   52c58:	movt	r1, #7
   52c5c:	bl	124c8 <strcmp@plt>
   52c60:	cmp	r0, #0
   52c64:	movw	r0, #1
   52c68:	str	r0, [sp, #36]	; 0x24
   52c6c:	beq	52d38 <__assert_fail@plt+0x40180>
   52c70:	ldr	r0, [fp, #-16]
   52c74:	ldr	r0, [r0, #12]
   52c78:	movw	r1, #49374	; 0xc0de
   52c7c:	movt	r1, #7
   52c80:	bl	124c8 <strcmp@plt>
   52c84:	cmp	r0, #0
   52c88:	movw	r0, #1
   52c8c:	str	r0, [sp, #36]	; 0x24
   52c90:	beq	52d38 <__assert_fail@plt+0x40180>
   52c94:	ldr	r0, [fp, #-16]
   52c98:	ldr	r0, [r0, #12]
   52c9c:	movw	r1, #49380	; 0xc0e4
   52ca0:	movt	r1, #7
   52ca4:	bl	124c8 <strcmp@plt>
   52ca8:	cmp	r0, #0
   52cac:	movw	r0, #1
   52cb0:	str	r0, [sp, #36]	; 0x24
   52cb4:	beq	52d38 <__assert_fail@plt+0x40180>
   52cb8:	ldr	r0, [fp, #-16]
   52cbc:	ldr	r0, [r0, #12]
   52cc0:	movw	r1, #49386	; 0xc0ea
   52cc4:	movt	r1, #7
   52cc8:	bl	124c8 <strcmp@plt>
   52ccc:	cmp	r0, #0
   52cd0:	movw	r0, #1
   52cd4:	str	r0, [sp, #36]	; 0x24
   52cd8:	beq	52d38 <__assert_fail@plt+0x40180>
   52cdc:	ldr	r0, [fp, #-16]
   52ce0:	ldr	r0, [r0, #12]
   52ce4:	movw	r1, #32901	; 0x8085
   52ce8:	movt	r1, #7
   52cec:	bl	124c8 <strcmp@plt>
   52cf0:	cmp	r0, #0
   52cf4:	movw	r0, #1
   52cf8:	str	r0, [sp, #36]	; 0x24
   52cfc:	beq	52d38 <__assert_fail@plt+0x40180>
   52d00:	ldr	r0, [fp, #-16]
   52d04:	ldr	r0, [r0, #12]
   52d08:	movw	r1, #37447	; 0x9247
   52d0c:	movt	r1, #7
   52d10:	bl	124c8 <strcmp@plt>
   52d14:	cmp	r0, #0
   52d18:	movw	r0, #0
   52d1c:	str	r0, [sp, #32]
   52d20:	bne	52d30 <__assert_fail@plt+0x40178>
   52d24:	movw	r0, #1
   52d28:	str	r0, [sp, #32]
   52d2c:	b	52d30 <__assert_fail@plt+0x40178>
   52d30:	ldr	r0, [sp, #32]
   52d34:	str	r0, [sp, #36]	; 0x24
   52d38:	ldr	r0, [sp, #36]	; 0x24
   52d3c:	ldr	r1, [fp, #-16]
   52d40:	ldrb	r2, [r1, #24]
   52d44:	and	r0, r0, #1
   52d48:	bic	r2, r2, #1
   52d4c:	orr	r0, r2, r0
   52d50:	strb	r0, [r1, #24]
   52d54:	ldr	r0, [fp, #-16]
   52d58:	ldr	r0, [r0]
   52d5c:	movw	r1, #58	; 0x3a
   52d60:	bl	12894 <strchr@plt>
   52d64:	movw	r1, #0
   52d68:	cmp	r0, r1
   52d6c:	movw	r0, #1
   52d70:	str	r0, [sp, #28]
   52d74:	bne	52f74 <__assert_fail@plt+0x403bc>
   52d78:	ldr	r0, [fp, #-16]
   52d7c:	ldr	r0, [r0]
   52d80:	ldrb	r0, [r0]
   52d84:	cmp	r0, #47	; 0x2f
   52d88:	bne	52e0c <__assert_fail@plt+0x40254>
   52d8c:	ldr	r0, [fp, #-16]
   52d90:	ldr	r0, [r0]
   52d94:	ldrb	r0, [r0, #1]
   52d98:	cmp	r0, #47	; 0x2f
   52d9c:	bne	52e0c <__assert_fail@plt+0x40254>
   52da0:	ldr	r0, [fp, #-16]
   52da4:	ldr	r0, [r0, #12]
   52da8:	movw	r1, #49393	; 0xc0f1
   52dac:	movt	r1, #7
   52db0:	bl	124c8 <strcmp@plt>
   52db4:	cmp	r0, #0
   52db8:	movw	r0, #1
   52dbc:	str	r0, [sp, #28]
   52dc0:	beq	52f74 <__assert_fail@plt+0x403bc>
   52dc4:	ldr	r0, [fp, #-16]
   52dc8:	ldr	r0, [r0, #12]
   52dcc:	movw	r1, #49399	; 0xc0f7
   52dd0:	movt	r1, #7
   52dd4:	bl	124c8 <strcmp@plt>
   52dd8:	cmp	r0, #0
   52ddc:	movw	r0, #1
   52de0:	str	r0, [sp, #28]
   52de4:	beq	52f74 <__assert_fail@plt+0x403bc>
   52de8:	ldr	r0, [fp, #-16]
   52dec:	ldr	r0, [r0, #12]
   52df0:	movw	r1, #49404	; 0xc0fc
   52df4:	movt	r1, #7
   52df8:	bl	124c8 <strcmp@plt>
   52dfc:	cmp	r0, #0
   52e00:	movw	r0, #1
   52e04:	str	r0, [sp, #28]
   52e08:	beq	52f74 <__assert_fail@plt+0x403bc>
   52e0c:	ldr	r0, [fp, #-16]
   52e10:	ldr	r0, [r0, #12]
   52e14:	movw	r1, #49409	; 0xc101
   52e18:	movt	r1, #7
   52e1c:	bl	124c8 <strcmp@plt>
   52e20:	cmp	r0, #0
   52e24:	movw	r0, #1
   52e28:	str	r0, [sp, #28]
   52e2c:	beq	52f74 <__assert_fail@plt+0x403bc>
   52e30:	ldr	r0, [fp, #-16]
   52e34:	ldr	r0, [r0, #12]
   52e38:	movw	r1, #32860	; 0x805c
   52e3c:	movt	r1, #7
   52e40:	bl	124c8 <strcmp@plt>
   52e44:	cmp	r0, #0
   52e48:	movw	r0, #1
   52e4c:	str	r0, [sp, #28]
   52e50:	beq	52f74 <__assert_fail@plt+0x403bc>
   52e54:	ldr	r0, [fp, #-16]
   52e58:	ldr	r0, [r0, #12]
   52e5c:	movw	r1, #49414	; 0xc106
   52e60:	movt	r1, #7
   52e64:	bl	124c8 <strcmp@plt>
   52e68:	cmp	r0, #0
   52e6c:	movw	r0, #1
   52e70:	str	r0, [sp, #28]
   52e74:	beq	52f74 <__assert_fail@plt+0x403bc>
   52e78:	ldr	r0, [fp, #-16]
   52e7c:	ldr	r0, [r0, #12]
   52e80:	movw	r1, #49419	; 0xc10b
   52e84:	movt	r1, #7
   52e88:	bl	124c8 <strcmp@plt>
   52e8c:	cmp	r0, #0
   52e90:	movw	r0, #1
   52e94:	str	r0, [sp, #28]
   52e98:	beq	52f74 <__assert_fail@plt+0x403bc>
   52e9c:	ldr	r0, [fp, #-16]
   52ea0:	ldr	r0, [r0, #12]
   52ea4:	movw	r1, #49430	; 0xc116
   52ea8:	movt	r1, #7
   52eac:	bl	124c8 <strcmp@plt>
   52eb0:	cmp	r0, #0
   52eb4:	movw	r0, #1
   52eb8:	str	r0, [sp, #28]
   52ebc:	beq	52f74 <__assert_fail@plt+0x403bc>
   52ec0:	ldr	r0, [fp, #-16]
   52ec4:	ldr	r0, [r0, #12]
   52ec8:	movw	r1, #49436	; 0xc11c
   52ecc:	movt	r1, #7
   52ed0:	bl	124c8 <strcmp@plt>
   52ed4:	cmp	r0, #0
   52ed8:	movw	r0, #1
   52edc:	str	r0, [sp, #28]
   52ee0:	beq	52f74 <__assert_fail@plt+0x403bc>
   52ee4:	ldr	r0, [fp, #-16]
   52ee8:	ldr	r0, [r0, #12]
   52eec:	movw	r1, #49441	; 0xc121
   52ef0:	movt	r1, #7
   52ef4:	bl	124c8 <strcmp@plt>
   52ef8:	cmp	r0, #0
   52efc:	movw	r0, #1
   52f00:	str	r0, [sp, #28]
   52f04:	beq	52f74 <__assert_fail@plt+0x403bc>
   52f08:	ldr	r0, [fp, #-16]
   52f0c:	ldr	r0, [r0, #12]
   52f10:	movw	r1, #49447	; 0xc127
   52f14:	movt	r1, #7
   52f18:	bl	124c8 <strcmp@plt>
   52f1c:	cmp	r0, #0
   52f20:	movw	r0, #1
   52f24:	str	r0, [sp, #28]
   52f28:	beq	52f74 <__assert_fail@plt+0x403bc>
   52f2c:	ldr	r0, [fp, #-16]
   52f30:	ldr	r0, [r0, #12]
   52f34:	movw	r1, #49453	; 0xc12d
   52f38:	movt	r1, #7
   52f3c:	bl	124c8 <strcmp@plt>
   52f40:	cmp	r0, #0
   52f44:	movw	r0, #1
   52f48:	str	r0, [sp, #28]
   52f4c:	beq	52f74 <__assert_fail@plt+0x403bc>
   52f50:	ldr	r0, [fp, #-16]
   52f54:	ldr	r1, [r0]
   52f58:	movw	r0, #49458	; 0xc132
   52f5c:	movt	r0, #7
   52f60:	bl	124c8 <strcmp@plt>
   52f64:	cmp	r0, #0
   52f68:	movw	r0, #0
   52f6c:	moveq	r0, #1
   52f70:	str	r0, [sp, #28]
   52f74:	ldr	r0, [sp, #28]
   52f78:	ldr	r1, [fp, #-16]
   52f7c:	and	r0, r0, #1
   52f80:	ldrb	r2, [r1, #24]
   52f84:	lsl	r0, r0, #1
   52f88:	bic	r2, r2, #2
   52f8c:	orr	r0, r2, r0
   52f90:	strb	r0, [r1, #24]
   52f94:	ldr	r0, [fp, #-16]
   52f98:	ldr	r1, [fp, #-20]	; 0xffffffec
   52f9c:	str	r0, [r1]
   52fa0:	ldr	r0, [fp, #-16]
   52fa4:	add	r0, r0, #28
   52fa8:	str	r0, [fp, #-20]	; 0xffffffec
   52fac:	b	52968 <__assert_fail@plt+0x3fdb0>
   52fb0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   52fb4:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   52fb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   52fbc:	bl	1275c <ferror_unlocked@plt>
   52fc0:	cmp	r0, #0
   52fc4:	beq	52ff8 <__assert_fail@plt+0x40440>
   52fc8:	bl	128d0 <__errno_location@plt>
   52fcc:	ldr	r0, [r0]
   52fd0:	str	r0, [sp, #56]	; 0x38
   52fd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   52fd8:	bl	12990 <fclose@plt>
   52fdc:	ldr	r1, [sp, #56]	; 0x38
   52fe0:	str	r0, [sp, #24]
   52fe4:	str	r1, [sp, #20]
   52fe8:	bl	128d0 <__errno_location@plt>
   52fec:	ldr	r1, [sp, #20]
   52ff0:	str	r1, [r0]
   52ff4:	b	535bc <__assert_fail@plt+0x40a04>
   52ff8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   52ffc:	bl	12990 <fclose@plt>
   53000:	cmn	r0, #1
   53004:	bne	5300c <__assert_fail@plt+0x40454>
   53008:	b	535bc <__assert_fail@plt+0x40a04>
   5300c:	b	535a4 <__assert_fail@plt+0x409ec>
   53010:	movw	r0, #49465	; 0xc139
   53014:	movt	r0, #7
   53018:	str	r0, [sp, #48]	; 0x30
   5301c:	ldr	r0, [sp, #48]	; 0x30
   53020:	movw	r1, #40292	; 0x9d64
   53024:	movt	r1, #7
   53028:	bl	12ae0 <setmntent@plt>
   5302c:	str	r0, [fp, #-24]	; 0xffffffe8
   53030:	ldr	r0, [fp, #-24]	; 0xffffffe8
   53034:	movw	r1, #0
   53038:	cmp	r0, r1
   5303c:	bne	5304c <__assert_fail@plt+0x40494>
   53040:	movw	r0, #0
   53044:	str	r0, [fp, #-4]
   53048:	b	53620 <__assert_fail@plt+0x40a68>
   5304c:	b	53050 <__assert_fail@plt+0x40498>
   53050:	ldr	r0, [fp, #-24]	; 0xffffffe8
   53054:	bl	1278c <getmntent@plt>
   53058:	str	r0, [sp, #52]	; 0x34
   5305c:	movw	r1, #0
   53060:	cmp	r0, r1
   53064:	beq	5358c <__assert_fail@plt+0x409d4>
   53068:	ldr	r0, [sp, #52]	; 0x34
   5306c:	movw	r1, #49475	; 0xc143
   53070:	movt	r1, #7
   53074:	bl	1272c <hasmntopt@plt>
   53078:	cmp	r0, #0
   5307c:	movwne	r0, #1
   53080:	strb	r0, [sp, #47]	; 0x2f
   53084:	mov	r0, #32
   53088:	bl	4a2f0 <__assert_fail@plt+0x37738>
   5308c:	str	r0, [fp, #-16]
   53090:	ldr	r0, [sp, #52]	; 0x34
   53094:	ldr	r0, [r0]
   53098:	bl	4cff0 <__assert_fail@plt+0x3a438>
   5309c:	ldr	r1, [fp, #-16]
   530a0:	str	r0, [r1]
   530a4:	ldr	r0, [sp, #52]	; 0x34
   530a8:	ldr	r0, [r0, #4]
   530ac:	bl	4cff0 <__assert_fail@plt+0x3a438>
   530b0:	ldr	r1, [fp, #-16]
   530b4:	str	r0, [r1, #4]
   530b8:	ldr	r0, [fp, #-16]
   530bc:	mov	r1, #0
   530c0:	str	r1, [r0, #8]
   530c4:	ldr	r0, [sp, #52]	; 0x34
   530c8:	ldr	r0, [r0, #8]
   530cc:	bl	4cff0 <__assert_fail@plt+0x3a438>
   530d0:	ldr	r1, [fp, #-16]
   530d4:	str	r0, [r1, #12]
   530d8:	ldr	r0, [fp, #-16]
   530dc:	ldrb	r1, [r0, #24]
   530e0:	bic	r1, r1, #4
   530e4:	movw	r2, #4
   530e8:	orr	r1, r1, r2
   530ec:	strb	r1, [r0, #24]
   530f0:	ldr	r0, [fp, #-16]
   530f4:	ldr	r0, [r0, #12]
   530f8:	movw	r1, #49303	; 0xc097
   530fc:	movt	r1, #7
   53100:	bl	124c8 <strcmp@plt>
   53104:	cmp	r0, #0
   53108:	movw	r0, #1
   5310c:	str	r0, [sp, #16]
   53110:	beq	53300 <__assert_fail@plt+0x40748>
   53114:	ldr	r0, [fp, #-16]
   53118:	ldr	r0, [r0, #12]
   5311c:	movw	r1, #49310	; 0xc09e
   53120:	movt	r1, #7
   53124:	bl	124c8 <strcmp@plt>
   53128:	cmp	r0, #0
   5312c:	movw	r0, #1
   53130:	str	r0, [sp, #16]
   53134:	beq	53300 <__assert_fail@plt+0x40748>
   53138:	ldr	r0, [fp, #-16]
   5313c:	ldr	r0, [r0, #12]
   53140:	movw	r1, #49315	; 0xc0a3
   53144:	movt	r1, #7
   53148:	bl	124c8 <strcmp@plt>
   5314c:	cmp	r0, #0
   53150:	movw	r0, #1
   53154:	str	r0, [sp, #16]
   53158:	beq	53300 <__assert_fail@plt+0x40748>
   5315c:	ldr	r0, [fp, #-16]
   53160:	ldr	r0, [r0, #12]
   53164:	movw	r1, #49321	; 0xc0a9
   53168:	movt	r1, #7
   5316c:	bl	124c8 <strcmp@plt>
   53170:	cmp	r0, #0
   53174:	movw	r0, #1
   53178:	str	r0, [sp, #16]
   5317c:	beq	53300 <__assert_fail@plt+0x40748>
   53180:	ldr	r0, [fp, #-16]
   53184:	ldr	r0, [r0, #12]
   53188:	movw	r1, #49329	; 0xc0b1
   5318c:	movt	r1, #7
   53190:	bl	124c8 <strcmp@plt>
   53194:	cmp	r0, #0
   53198:	movw	r0, #1
   5319c:	str	r0, [sp, #16]
   531a0:	beq	53300 <__assert_fail@plt+0x40748>
   531a4:	ldr	r0, [fp, #-16]
   531a8:	ldr	r0, [r0, #12]
   531ac:	movw	r1, #49336	; 0xc0b8
   531b0:	movt	r1, #7
   531b4:	bl	124c8 <strcmp@plt>
   531b8:	cmp	r0, #0
   531bc:	movw	r0, #1
   531c0:	str	r0, [sp, #16]
   531c4:	beq	53300 <__assert_fail@plt+0x40748>
   531c8:	ldr	r0, [fp, #-16]
   531cc:	ldr	r0, [r0, #12]
   531d0:	movw	r1, #49344	; 0xc0c0
   531d4:	movt	r1, #7
   531d8:	bl	124c8 <strcmp@plt>
   531dc:	cmp	r0, #0
   531e0:	movw	r0, #1
   531e4:	str	r0, [sp, #16]
   531e8:	beq	53300 <__assert_fail@plt+0x40748>
   531ec:	ldr	r0, [fp, #-16]
   531f0:	ldr	r0, [r0, #12]
   531f4:	movw	r1, #49356	; 0xc0cc
   531f8:	movt	r1, #7
   531fc:	bl	124c8 <strcmp@plt>
   53200:	cmp	r0, #0
   53204:	movw	r0, #1
   53208:	str	r0, [sp, #16]
   5320c:	beq	53300 <__assert_fail@plt+0x40748>
   53210:	ldr	r0, [fp, #-16]
   53214:	ldr	r0, [r0, #12]
   53218:	movw	r1, #49363	; 0xc0d3
   5321c:	movt	r1, #7
   53220:	bl	124c8 <strcmp@plt>
   53224:	cmp	r0, #0
   53228:	movw	r0, #1
   5322c:	str	r0, [sp, #16]
   53230:	beq	53300 <__assert_fail@plt+0x40748>
   53234:	ldr	r0, [fp, #-16]
   53238:	ldr	r0, [r0, #12]
   5323c:	movw	r1, #49374	; 0xc0de
   53240:	movt	r1, #7
   53244:	bl	124c8 <strcmp@plt>
   53248:	cmp	r0, #0
   5324c:	movw	r0, #1
   53250:	str	r0, [sp, #16]
   53254:	beq	53300 <__assert_fail@plt+0x40748>
   53258:	ldr	r0, [fp, #-16]
   5325c:	ldr	r0, [r0, #12]
   53260:	movw	r1, #49380	; 0xc0e4
   53264:	movt	r1, #7
   53268:	bl	124c8 <strcmp@plt>
   5326c:	cmp	r0, #0
   53270:	movw	r0, #1
   53274:	str	r0, [sp, #16]
   53278:	beq	53300 <__assert_fail@plt+0x40748>
   5327c:	ldr	r0, [fp, #-16]
   53280:	ldr	r0, [r0, #12]
   53284:	movw	r1, #49386	; 0xc0ea
   53288:	movt	r1, #7
   5328c:	bl	124c8 <strcmp@plt>
   53290:	cmp	r0, #0
   53294:	movw	r0, #1
   53298:	str	r0, [sp, #16]
   5329c:	beq	53300 <__assert_fail@plt+0x40748>
   532a0:	ldr	r0, [fp, #-16]
   532a4:	ldr	r0, [r0, #12]
   532a8:	movw	r1, #32901	; 0x8085
   532ac:	movt	r1, #7
   532b0:	bl	124c8 <strcmp@plt>
   532b4:	cmp	r0, #0
   532b8:	movw	r0, #1
   532bc:	str	r0, [sp, #16]
   532c0:	beq	53300 <__assert_fail@plt+0x40748>
   532c4:	ldr	r0, [fp, #-16]
   532c8:	ldr	r0, [r0, #12]
   532cc:	movw	r1, #37447	; 0x9247
   532d0:	movt	r1, #7
   532d4:	bl	124c8 <strcmp@plt>
   532d8:	cmp	r0, #0
   532dc:	movw	r0, #0
   532e0:	str	r0, [sp, #12]
   532e4:	bne	532f8 <__assert_fail@plt+0x40740>
   532e8:	ldrb	r0, [sp, #47]	; 0x2f
   532ec:	mvn	r1, #0
   532f0:	eor	r0, r0, r1
   532f4:	str	r0, [sp, #12]
   532f8:	ldr	r0, [sp, #12]
   532fc:	str	r0, [sp, #16]
   53300:	ldr	r0, [sp, #16]
   53304:	ldr	r1, [fp, #-16]
   53308:	ldrb	r2, [r1, #24]
   5330c:	and	r0, r0, #1
   53310:	bic	r2, r2, #1
   53314:	orr	r0, r2, r0
   53318:	strb	r0, [r1, #24]
   5331c:	ldr	r0, [fp, #-16]
   53320:	ldr	r0, [r0]
   53324:	movw	r1, #58	; 0x3a
   53328:	bl	12894 <strchr@plt>
   5332c:	movw	r1, #0
   53330:	cmp	r0, r1
   53334:	movw	r0, #1
   53338:	str	r0, [sp, #8]
   5333c:	bne	5353c <__assert_fail@plt+0x40984>
   53340:	ldr	r0, [fp, #-16]
   53344:	ldr	r0, [r0]
   53348:	ldrb	r0, [r0]
   5334c:	cmp	r0, #47	; 0x2f
   53350:	bne	533d4 <__assert_fail@plt+0x4081c>
   53354:	ldr	r0, [fp, #-16]
   53358:	ldr	r0, [r0]
   5335c:	ldrb	r0, [r0, #1]
   53360:	cmp	r0, #47	; 0x2f
   53364:	bne	533d4 <__assert_fail@plt+0x4081c>
   53368:	ldr	r0, [fp, #-16]
   5336c:	ldr	r0, [r0, #12]
   53370:	movw	r1, #49393	; 0xc0f1
   53374:	movt	r1, #7
   53378:	bl	124c8 <strcmp@plt>
   5337c:	cmp	r0, #0
   53380:	movw	r0, #1
   53384:	str	r0, [sp, #8]
   53388:	beq	5353c <__assert_fail@plt+0x40984>
   5338c:	ldr	r0, [fp, #-16]
   53390:	ldr	r0, [r0, #12]
   53394:	movw	r1, #49399	; 0xc0f7
   53398:	movt	r1, #7
   5339c:	bl	124c8 <strcmp@plt>
   533a0:	cmp	r0, #0
   533a4:	movw	r0, #1
   533a8:	str	r0, [sp, #8]
   533ac:	beq	5353c <__assert_fail@plt+0x40984>
   533b0:	ldr	r0, [fp, #-16]
   533b4:	ldr	r0, [r0, #12]
   533b8:	movw	r1, #49404	; 0xc0fc
   533bc:	movt	r1, #7
   533c0:	bl	124c8 <strcmp@plt>
   533c4:	cmp	r0, #0
   533c8:	movw	r0, #1
   533cc:	str	r0, [sp, #8]
   533d0:	beq	5353c <__assert_fail@plt+0x40984>
   533d4:	ldr	r0, [fp, #-16]
   533d8:	ldr	r0, [r0, #12]
   533dc:	movw	r1, #49409	; 0xc101
   533e0:	movt	r1, #7
   533e4:	bl	124c8 <strcmp@plt>
   533e8:	cmp	r0, #0
   533ec:	movw	r0, #1
   533f0:	str	r0, [sp, #8]
   533f4:	beq	5353c <__assert_fail@plt+0x40984>
   533f8:	ldr	r0, [fp, #-16]
   533fc:	ldr	r0, [r0, #12]
   53400:	movw	r1, #32860	; 0x805c
   53404:	movt	r1, #7
   53408:	bl	124c8 <strcmp@plt>
   5340c:	cmp	r0, #0
   53410:	movw	r0, #1
   53414:	str	r0, [sp, #8]
   53418:	beq	5353c <__assert_fail@plt+0x40984>
   5341c:	ldr	r0, [fp, #-16]
   53420:	ldr	r0, [r0, #12]
   53424:	movw	r1, #49414	; 0xc106
   53428:	movt	r1, #7
   5342c:	bl	124c8 <strcmp@plt>
   53430:	cmp	r0, #0
   53434:	movw	r0, #1
   53438:	str	r0, [sp, #8]
   5343c:	beq	5353c <__assert_fail@plt+0x40984>
   53440:	ldr	r0, [fp, #-16]
   53444:	ldr	r0, [r0, #12]
   53448:	movw	r1, #49419	; 0xc10b
   5344c:	movt	r1, #7
   53450:	bl	124c8 <strcmp@plt>
   53454:	cmp	r0, #0
   53458:	movw	r0, #1
   5345c:	str	r0, [sp, #8]
   53460:	beq	5353c <__assert_fail@plt+0x40984>
   53464:	ldr	r0, [fp, #-16]
   53468:	ldr	r0, [r0, #12]
   5346c:	movw	r1, #49430	; 0xc116
   53470:	movt	r1, #7
   53474:	bl	124c8 <strcmp@plt>
   53478:	cmp	r0, #0
   5347c:	movw	r0, #1
   53480:	str	r0, [sp, #8]
   53484:	beq	5353c <__assert_fail@plt+0x40984>
   53488:	ldr	r0, [fp, #-16]
   5348c:	ldr	r0, [r0, #12]
   53490:	movw	r1, #49436	; 0xc11c
   53494:	movt	r1, #7
   53498:	bl	124c8 <strcmp@plt>
   5349c:	cmp	r0, #0
   534a0:	movw	r0, #1
   534a4:	str	r0, [sp, #8]
   534a8:	beq	5353c <__assert_fail@plt+0x40984>
   534ac:	ldr	r0, [fp, #-16]
   534b0:	ldr	r0, [r0, #12]
   534b4:	movw	r1, #49441	; 0xc121
   534b8:	movt	r1, #7
   534bc:	bl	124c8 <strcmp@plt>
   534c0:	cmp	r0, #0
   534c4:	movw	r0, #1
   534c8:	str	r0, [sp, #8]
   534cc:	beq	5353c <__assert_fail@plt+0x40984>
   534d0:	ldr	r0, [fp, #-16]
   534d4:	ldr	r0, [r0, #12]
   534d8:	movw	r1, #49447	; 0xc127
   534dc:	movt	r1, #7
   534e0:	bl	124c8 <strcmp@plt>
   534e4:	cmp	r0, #0
   534e8:	movw	r0, #1
   534ec:	str	r0, [sp, #8]
   534f0:	beq	5353c <__assert_fail@plt+0x40984>
   534f4:	ldr	r0, [fp, #-16]
   534f8:	ldr	r0, [r0, #12]
   534fc:	movw	r1, #49453	; 0xc12d
   53500:	movt	r1, #7
   53504:	bl	124c8 <strcmp@plt>
   53508:	cmp	r0, #0
   5350c:	movw	r0, #1
   53510:	str	r0, [sp, #8]
   53514:	beq	5353c <__assert_fail@plt+0x40984>
   53518:	ldr	r0, [fp, #-16]
   5351c:	ldr	r1, [r0]
   53520:	movw	r0, #49458	; 0xc132
   53524:	movt	r0, #7
   53528:	bl	124c8 <strcmp@plt>
   5352c:	cmp	r0, #0
   53530:	movw	r0, #0
   53534:	moveq	r0, #1
   53538:	str	r0, [sp, #8]
   5353c:	ldr	r0, [sp, #8]
   53540:	ldr	r1, [fp, #-16]
   53544:	and	r0, r0, #1
   53548:	ldrb	r2, [r1, #24]
   5354c:	and	r2, r2, #253	; 0xfd
   53550:	orr	r0, r2, r0, lsl #1
   53554:	strb	r0, [r1, #24]
   53558:	ldr	r0, [sp, #52]	; 0x34
   5355c:	ldr	r0, [r0, #12]
   53560:	bl	53844 <__assert_fail@plt+0x40c8c>
   53564:	ldr	r2, [fp, #-16]
   53568:	str	r1, [r2, #20]
   5356c:	str	r0, [r2, #16]
   53570:	ldr	r0, [fp, #-16]
   53574:	ldr	r1, [fp, #-20]	; 0xffffffec
   53578:	str	r0, [r1]
   5357c:	ldr	r0, [fp, #-16]
   53580:	add	r0, r0, #28
   53584:	str	r0, [fp, #-20]	; 0xffffffec
   53588:	b	53050 <__assert_fail@plt+0x40498>
   5358c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   53590:	bl	129c0 <endmntent@plt>
   53594:	cmp	r0, #0
   53598:	bne	535a0 <__assert_fail@plt+0x409e8>
   5359c:	b	535bc <__assert_fail@plt+0x40a04>
   535a0:	b	535a4 <__assert_fail@plt+0x409ec>
   535a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   535a8:	movw	r1, #0
   535ac:	str	r1, [r0]
   535b0:	ldr	r0, [fp, #-12]
   535b4:	str	r0, [fp, #-4]
   535b8:	b	53620 <__assert_fail@plt+0x40a68>
   535bc:	bl	128d0 <__errno_location@plt>
   535c0:	ldr	r0, [r0]
   535c4:	str	r0, [sp, #40]	; 0x28
   535c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   535cc:	movw	r1, #0
   535d0:	str	r1, [r0]
   535d4:	ldr	r0, [fp, #-12]
   535d8:	movw	r1, #0
   535dc:	cmp	r0, r1
   535e0:	beq	53604 <__assert_fail@plt+0x40a4c>
   535e4:	ldr	r0, [fp, #-12]
   535e8:	ldr	r0, [r0, #28]
   535ec:	str	r0, [fp, #-16]
   535f0:	ldr	r0, [fp, #-12]
   535f4:	bl	53860 <__assert_fail@plt+0x40ca8>
   535f8:	ldr	r0, [fp, #-16]
   535fc:	str	r0, [fp, #-12]
   53600:	b	535d4 <__assert_fail@plt+0x40a1c>
   53604:	ldr	r0, [sp, #40]	; 0x28
   53608:	str	r0, [sp, #4]
   5360c:	bl	128d0 <__errno_location@plt>
   53610:	ldr	r1, [sp, #4]
   53614:	str	r1, [r0]
   53618:	movw	r0, #0
   5361c:	str	r0, [fp, #-4]
   53620:	ldr	r0, [fp, #-4]
   53624:	mov	sp, fp
   53628:	pop	{fp, pc}
   5362c:	push	{fp, lr}
   53630:	mov	fp, sp
   53634:	sub	sp, sp, #8
   53638:	str	r0, [sp, #4]
   5363c:	ldr	r0, [sp, #4]
   53640:	movw	r1, #32
   53644:	bl	12894 <strchr@plt>
   53648:	str	r0, [sp]
   5364c:	ldr	r0, [sp]
   53650:	movw	r1, #0
   53654:	cmp	r0, r1
   53658:	beq	53668 <__assert_fail@plt+0x40ab0>
   5365c:	ldr	r0, [sp]
   53660:	movw	r1, #0
   53664:	strb	r1, [r0]
   53668:	ldr	r0, [sp]
   5366c:	mov	sp, fp
   53670:	pop	{fp, pc}
   53674:	push	{fp, lr}
   53678:	mov	fp, sp
   5367c:	sub	sp, sp, #24
   53680:	str	r0, [fp, #-4]
   53684:	movw	r0, #0
   53688:	str	r0, [sp, #12]
   5368c:	ldr	r1, [fp, #-4]
   53690:	str	r0, [sp, #4]
   53694:	mov	r0, r1
   53698:	bl	12888 <strlen@plt>
   5369c:	add	r0, r0, #1
   536a0:	str	r0, [sp, #8]
   536a4:	ldr	r0, [sp, #4]
   536a8:	str	r0, [fp, #-8]
   536ac:	ldr	r0, [fp, #-8]
   536b0:	ldr	r1, [sp, #8]
   536b4:	cmp	r0, r1
   536b8:	bcs	5383c <__assert_fail@plt+0x40c84>
   536bc:	ldr	r0, [fp, #-4]
   536c0:	ldr	r1, [fp, #-8]
   536c4:	add	r0, r0, r1
   536c8:	ldrb	r0, [r0]
   536cc:	cmp	r0, #92	; 0x5c
   536d0:	bne	53800 <__assert_fail@plt+0x40c48>
   536d4:	ldr	r0, [fp, #-8]
   536d8:	add	r0, r0, #4
   536dc:	ldr	r1, [sp, #8]
   536e0:	cmp	r0, r1
   536e4:	bcs	53800 <__assert_fail@plt+0x40c48>
   536e8:	ldr	r0, [fp, #-4]
   536ec:	ldr	r1, [fp, #-8]
   536f0:	add	r1, r1, #1
   536f4:	add	r0, r0, r1
   536f8:	ldrb	r0, [r0]
   536fc:	cmp	r0, #48	; 0x30
   53700:	blt	53800 <__assert_fail@plt+0x40c48>
   53704:	ldr	r0, [fp, #-4]
   53708:	ldr	r1, [fp, #-8]
   5370c:	add	r1, r1, #1
   53710:	add	r0, r0, r1
   53714:	ldrb	r0, [r0]
   53718:	cmp	r0, #51	; 0x33
   5371c:	bgt	53800 <__assert_fail@plt+0x40c48>
   53720:	ldr	r0, [fp, #-4]
   53724:	ldr	r1, [fp, #-8]
   53728:	add	r1, r1, #2
   5372c:	add	r0, r0, r1
   53730:	ldrb	r0, [r0]
   53734:	cmp	r0, #48	; 0x30
   53738:	blt	53800 <__assert_fail@plt+0x40c48>
   5373c:	ldr	r0, [fp, #-4]
   53740:	ldr	r1, [fp, #-8]
   53744:	add	r1, r1, #2
   53748:	add	r0, r0, r1
   5374c:	ldrb	r0, [r0]
   53750:	cmp	r0, #55	; 0x37
   53754:	bgt	53800 <__assert_fail@plt+0x40c48>
   53758:	ldr	r0, [fp, #-4]
   5375c:	ldr	r1, [fp, #-8]
   53760:	add	r1, r1, #3
   53764:	add	r0, r0, r1
   53768:	ldrb	r0, [r0]
   5376c:	cmp	r0, #48	; 0x30
   53770:	blt	53800 <__assert_fail@plt+0x40c48>
   53774:	ldr	r0, [fp, #-4]
   53778:	ldr	r1, [fp, #-8]
   5377c:	add	r1, r1, #3
   53780:	add	r0, r0, r1
   53784:	ldrb	r0, [r0]
   53788:	cmp	r0, #55	; 0x37
   5378c:	bgt	53800 <__assert_fail@plt+0x40c48>
   53790:	ldr	r0, [fp, #-4]
   53794:	ldr	r1, [fp, #-8]
   53798:	add	r0, r1, r0
   5379c:	ldrb	r1, [r0, #1]
   537a0:	ldrb	r0, [r0, #2]
   537a4:	movw	r2, #62464	; 0xf400
   537a8:	movt	r2, #65535	; 0xffff
   537ac:	add	r1, r2, r1, lsl #6
   537b0:	sub	r0, r0, #48	; 0x30
   537b4:	lsl	r0, r0, #3
   537b8:	add	r0, r1, r0
   537bc:	ldr	r1, [fp, #-4]
   537c0:	ldr	r2, [fp, #-8]
   537c4:	add	r2, r2, #3
   537c8:	add	r1, r1, r2
   537cc:	ldrb	r1, [r1]
   537d0:	sub	r1, r1, #48	; 0x30
   537d4:	add	r0, r0, r1
   537d8:	ldr	r1, [fp, #-4]
   537dc:	ldr	r2, [sp, #12]
   537e0:	add	r3, r2, #1
   537e4:	str	r3, [sp, #12]
   537e8:	add	r1, r1, r2
   537ec:	strb	r0, [r1]
   537f0:	ldr	r0, [fp, #-8]
   537f4:	add	r0, r0, #3
   537f8:	str	r0, [fp, #-8]
   537fc:	b	53828 <__assert_fail@plt+0x40c70>
   53800:	ldr	r0, [fp, #-4]
   53804:	ldr	r1, [fp, #-8]
   53808:	add	r0, r0, r1
   5380c:	ldrb	r0, [r0]
   53810:	ldr	r1, [fp, #-4]
   53814:	ldr	r2, [sp, #12]
   53818:	add	r3, r2, #1
   5381c:	str	r3, [sp, #12]
   53820:	add	r1, r1, r2
   53824:	strb	r0, [r1]
   53828:	b	5382c <__assert_fail@plt+0x40c74>
   5382c:	ldr	r0, [fp, #-8]
   53830:	add	r0, r0, #1
   53834:	str	r0, [fp, #-8]
   53838:	b	536ac <__assert_fail@plt+0x40af4>
   5383c:	mov	sp, fp
   53840:	pop	{fp, pc}
   53844:	sub	sp, sp, #8
   53848:	str	r0, [sp, #4]
   5384c:	mvn	r0, #0
   53850:	str	r0, [sp]
   53854:	ldr	r1, [sp]
   53858:	add	sp, sp, #8
   5385c:	bx	lr
   53860:	push	{fp, lr}
   53864:	mov	fp, sp
   53868:	sub	sp, sp, #8
   5386c:	str	r0, [sp, #4]
   53870:	ldr	r0, [sp, #4]
   53874:	ldr	r0, [r0]
   53878:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   5387c:	ldr	r0, [sp, #4]
   53880:	ldr	r0, [r0, #4]
   53884:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   53888:	ldr	r0, [sp, #4]
   5388c:	ldr	r0, [r0, #8]
   53890:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   53894:	ldr	r0, [sp, #4]
   53898:	ldrb	r0, [r0, #24]
   5389c:	ubfx	r0, r0, #2, #1
   538a0:	and	r0, r0, #255	; 0xff
   538a4:	cmp	r0, #0
   538a8:	beq	538b8 <__assert_fail@plt+0x40d00>
   538ac:	ldr	r0, [sp, #4]
   538b0:	ldr	r0, [r0, #12]
   538b4:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   538b8:	ldr	r0, [sp, #4]
   538bc:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   538c0:	mov	sp, fp
   538c4:	pop	{fp, pc}
   538c8:	push	{fp, lr}
   538cc:	mov	fp, sp
   538d0:	sub	sp, sp, #16
   538d4:	str	r0, [sp, #8]
   538d8:	str	r1, [sp, #4]
   538dc:	ldr	r0, [sp, #8]
   538e0:	movw	r1, #0
   538e4:	cmp	r0, r1
   538e8:	bne	538fc <__assert_fail@plt+0x40d44>
   538ec:	ldr	r0, [sp, #4]
   538f0:	bl	527f0 <__assert_fail@plt+0x3fc38>
   538f4:	str	r0, [fp, #-4]
   538f8:	b	5395c <__assert_fail@plt+0x40da4>
   538fc:	ldr	r0, [sp, #4]
   53900:	cmp	r0, #0
   53904:	bne	5391c <__assert_fail@plt+0x40d64>
   53908:	ldr	r0, [sp, #8]
   5390c:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   53910:	movw	r0, #0
   53914:	str	r0, [fp, #-4]
   53918:	b	5395c <__assert_fail@plt+0x40da4>
   5391c:	ldr	r0, [pc, #68]	; 53968 <__assert_fail@plt+0x40db0>
   53920:	ldr	r1, [sp, #4]
   53924:	cmp	r0, r1
   53928:	bcs	53944 <__assert_fail@plt+0x40d8c>
   5392c:	bl	128d0 <__errno_location@plt>
   53930:	movw	r1, #12
   53934:	str	r1, [r0]
   53938:	movw	r0, #0
   5393c:	str	r0, [fp, #-4]
   53940:	b	5395c <__assert_fail@plt+0x40da4>
   53944:	ldr	r0, [sp, #8]
   53948:	ldr	r1, [sp, #4]
   5394c:	bl	1266c <realloc@plt>
   53950:	str	r0, [sp]
   53954:	ldr	r0, [sp]
   53958:	str	r0, [fp, #-4]
   5395c:	ldr	r0, [fp, #-4]
   53960:	mov	sp, fp
   53964:	pop	{fp, pc}
   53968:	svcvc	0x00ffffff
   5396c:	push	{fp, lr}
   53970:	mov	fp, sp
   53974:	sub	sp, sp, #96	; 0x60
   53978:	str	r0, [fp, #-8]
   5397c:	str	r1, [fp, #-12]
   53980:	str	r2, [fp, #-16]
   53984:	b	53d3c <__assert_fail@plt+0x41184>
   53988:	b	53b5c <__assert_fail@plt+0x40fa4>
   5398c:	ldr	r0, [fp, #-16]
   53990:	cmp	r0, #0
   53994:	bcs	53a98 <__assert_fail@plt+0x40ee0>
   53998:	ldr	r0, [fp, #-12]
   5399c:	cmp	r0, #0
   539a0:	bcs	53a28 <__assert_fail@plt+0x40e70>
   539a4:	b	539c4 <__assert_fail@plt+0x40e0c>
   539a8:	ldr	r0, [fp, #-12]
   539ac:	ldr	r1, [fp, #-16]
   539b0:	movw	r2, #127	; 0x7f
   539b4:	udiv	r1, r2, r1
   539b8:	cmp	r0, r1
   539bc:	bcc	53b2c <__assert_fail@plt+0x40f74>
   539c0:	b	53b44 <__assert_fail@plt+0x40f8c>
   539c4:	b	539d8 <__assert_fail@plt+0x40e20>
   539c8:	ldr	r0, [fp, #-16]
   539cc:	cmp	r0, #1
   539d0:	bcc	539e8 <__assert_fail@plt+0x40e30>
   539d4:	b	539f4 <__assert_fail@plt+0x40e3c>
   539d8:	ldr	r0, [fp, #-16]
   539dc:	movw	r1, #0
   539e0:	cmp	r1, r0
   539e4:	bcs	539f4 <__assert_fail@plt+0x40e3c>
   539e8:	movw	r0, #0
   539ec:	str	r0, [fp, #-24]	; 0xffffffe8
   539f0:	b	53a0c <__assert_fail@plt+0x40e54>
   539f4:	ldr	r0, [fp, #-16]
   539f8:	movw	r1, #0
   539fc:	sub	r0, r1, r0
   53a00:	movw	r1, #127	; 0x7f
   53a04:	udiv	r0, r1, r0
   53a08:	str	r0, [fp, #-24]	; 0xffffffe8
   53a0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   53a10:	ldr	r1, [fp, #-12]
   53a14:	mvn	r2, #0
   53a18:	sub	r1, r2, r1
   53a1c:	cmp	r0, r1
   53a20:	bls	53b2c <__assert_fail@plt+0x40f74>
   53a24:	b	53b44 <__assert_fail@plt+0x40f8c>
   53a28:	ldr	r0, [fp, #-16]
   53a2c:	cmn	r0, #1
   53a30:	bne	53a7c <__assert_fail@plt+0x40ec4>
   53a34:	b	53a54 <__assert_fail@plt+0x40e9c>
   53a38:	ldr	r0, [fp, #-12]
   53a3c:	mvn	r1, #127	; 0x7f
   53a40:	add	r0, r0, r1
   53a44:	movw	r1, #0
   53a48:	cmp	r1, r0
   53a4c:	bcc	53b2c <__assert_fail@plt+0x40f74>
   53a50:	b	53b44 <__assert_fail@plt+0x40f8c>
   53a54:	ldr	r0, [fp, #-12]
   53a58:	movw	r1, #0
   53a5c:	cmp	r1, r0
   53a60:	bcs	53b44 <__assert_fail@plt+0x40f8c>
   53a64:	ldr	r0, [fp, #-12]
   53a68:	sub	r0, r0, #1
   53a6c:	movw	r1, #127	; 0x7f
   53a70:	cmp	r1, r0
   53a74:	bcc	53b2c <__assert_fail@plt+0x40f74>
   53a78:	b	53b44 <__assert_fail@plt+0x40f8c>
   53a7c:	ldr	r0, [fp, #-16]
   53a80:	mvn	r1, #127	; 0x7f
   53a84:	udiv	r0, r1, r0
   53a88:	ldr	r1, [fp, #-12]
   53a8c:	cmp	r0, r1
   53a90:	bcc	53b2c <__assert_fail@plt+0x40f74>
   53a94:	b	53b44 <__assert_fail@plt+0x40f8c>
   53a98:	ldr	r0, [fp, #-16]
   53a9c:	cmp	r0, #0
   53aa0:	bne	53aa8 <__assert_fail@plt+0x40ef0>
   53aa4:	b	53b44 <__assert_fail@plt+0x40f8c>
   53aa8:	ldr	r0, [fp, #-12]
   53aac:	cmp	r0, #0
   53ab0:	bcs	53b14 <__assert_fail@plt+0x40f5c>
   53ab4:	ldr	r0, [fp, #-12]
   53ab8:	cmn	r0, #1
   53abc:	bne	53af8 <__assert_fail@plt+0x40f40>
   53ac0:	b	53ae0 <__assert_fail@plt+0x40f28>
   53ac4:	ldr	r0, [fp, #-16]
   53ac8:	mvn	r1, #127	; 0x7f
   53acc:	add	r0, r0, r1
   53ad0:	movw	r1, #0
   53ad4:	cmp	r1, r0
   53ad8:	bcc	53b2c <__assert_fail@plt+0x40f74>
   53adc:	b	53b44 <__assert_fail@plt+0x40f8c>
   53ae0:	ldr	r0, [fp, #-16]
   53ae4:	sub	r0, r0, #1
   53ae8:	movw	r1, #127	; 0x7f
   53aec:	cmp	r1, r0
   53af0:	bcc	53b2c <__assert_fail@plt+0x40f74>
   53af4:	b	53b44 <__assert_fail@plt+0x40f8c>
   53af8:	ldr	r0, [fp, #-12]
   53afc:	mvn	r1, #127	; 0x7f
   53b00:	udiv	r0, r1, r0
   53b04:	ldr	r1, [fp, #-16]
   53b08:	cmp	r0, r1
   53b0c:	bcc	53b2c <__assert_fail@plt+0x40f74>
   53b10:	b	53b44 <__assert_fail@plt+0x40f8c>
   53b14:	ldr	r0, [fp, #-16]
   53b18:	movw	r1, #127	; 0x7f
   53b1c:	udiv	r0, r1, r0
   53b20:	ldr	r1, [fp, #-12]
   53b24:	cmp	r0, r1
   53b28:	bcs	53b44 <__assert_fail@plt+0x40f8c>
   53b2c:	ldr	r0, [fp, #-12]
   53b30:	ldr	r1, [fp, #-16]
   53b34:	mul	r0, r0, r1
   53b38:	sxtb	r0, r0
   53b3c:	str	r0, [fp, #-20]	; 0xffffffec
   53b40:	b	54c6c <__assert_fail@plt+0x420b4>
   53b44:	ldr	r0, [fp, #-12]
   53b48:	ldr	r1, [fp, #-16]
   53b4c:	mul	r0, r0, r1
   53b50:	sxtb	r0, r0
   53b54:	str	r0, [fp, #-20]	; 0xffffffec
   53b58:	b	54c84 <__assert_fail@plt+0x420cc>
   53b5c:	ldr	r0, [fp, #-16]
   53b60:	cmp	r0, #0
   53b64:	bcs	53c70 <__assert_fail@plt+0x410b8>
   53b68:	ldr	r0, [fp, #-12]
   53b6c:	cmp	r0, #0
   53b70:	bcs	53bf8 <__assert_fail@plt+0x41040>
   53b74:	b	53b94 <__assert_fail@plt+0x40fdc>
   53b78:	ldr	r0, [fp, #-12]
   53b7c:	ldr	r1, [fp, #-16]
   53b80:	movw	r2, #255	; 0xff
   53b84:	udiv	r1, r2, r1
   53b88:	cmp	r0, r1
   53b8c:	bcc	53d0c <__assert_fail@plt+0x41154>
   53b90:	b	53d24 <__assert_fail@plt+0x4116c>
   53b94:	b	53ba8 <__assert_fail@plt+0x40ff0>
   53b98:	ldr	r0, [fp, #-16]
   53b9c:	cmp	r0, #1
   53ba0:	bcc	53bb8 <__assert_fail@plt+0x41000>
   53ba4:	b	53bc4 <__assert_fail@plt+0x4100c>
   53ba8:	ldr	r0, [fp, #-16]
   53bac:	movw	r1, #0
   53bb0:	cmp	r1, r0
   53bb4:	bcs	53bc4 <__assert_fail@plt+0x4100c>
   53bb8:	movw	r0, #0
   53bbc:	str	r0, [fp, #-28]	; 0xffffffe4
   53bc0:	b	53bdc <__assert_fail@plt+0x41024>
   53bc4:	ldr	r0, [fp, #-16]
   53bc8:	movw	r1, #0
   53bcc:	sub	r0, r1, r0
   53bd0:	movw	r1, #255	; 0xff
   53bd4:	udiv	r0, r1, r0
   53bd8:	str	r0, [fp, #-28]	; 0xffffffe4
   53bdc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   53be0:	ldr	r1, [fp, #-12]
   53be4:	mvn	r2, #0
   53be8:	sub	r1, r2, r1
   53bec:	cmp	r0, r1
   53bf0:	bls	53d0c <__assert_fail@plt+0x41154>
   53bf4:	b	53d24 <__assert_fail@plt+0x4116c>
   53bf8:	b	53c00 <__assert_fail@plt+0x41048>
   53bfc:	b	53c04 <__assert_fail@plt+0x4104c>
   53c00:	b	53c54 <__assert_fail@plt+0x4109c>
   53c04:	ldr	r0, [fp, #-16]
   53c08:	cmn	r0, #1
   53c0c:	bne	53c54 <__assert_fail@plt+0x4109c>
   53c10:	b	53c2c <__assert_fail@plt+0x41074>
   53c14:	ldr	r0, [fp, #-12]
   53c18:	add	r0, r0, #0
   53c1c:	movw	r1, #0
   53c20:	cmp	r1, r0
   53c24:	bcc	53d0c <__assert_fail@plt+0x41154>
   53c28:	b	53d24 <__assert_fail@plt+0x4116c>
   53c2c:	ldr	r0, [fp, #-12]
   53c30:	movw	r1, #0
   53c34:	cmp	r1, r0
   53c38:	bcs	53d24 <__assert_fail@plt+0x4116c>
   53c3c:	ldr	r0, [fp, #-12]
   53c40:	sub	r0, r0, #1
   53c44:	mvn	r1, #0
   53c48:	cmp	r1, r0
   53c4c:	bcc	53d0c <__assert_fail@plt+0x41154>
   53c50:	b	53d24 <__assert_fail@plt+0x4116c>
   53c54:	ldr	r0, [fp, #-16]
   53c58:	movw	r1, #0
   53c5c:	udiv	r0, r1, r0
   53c60:	ldr	r1, [fp, #-12]
   53c64:	cmp	r0, r1
   53c68:	bcc	53d0c <__assert_fail@plt+0x41154>
   53c6c:	b	53d24 <__assert_fail@plt+0x4116c>
   53c70:	ldr	r0, [fp, #-16]
   53c74:	cmp	r0, #0
   53c78:	bne	53c80 <__assert_fail@plt+0x410c8>
   53c7c:	b	53d24 <__assert_fail@plt+0x4116c>
   53c80:	ldr	r0, [fp, #-12]
   53c84:	cmp	r0, #0
   53c88:	bcs	53cf4 <__assert_fail@plt+0x4113c>
   53c8c:	b	53c94 <__assert_fail@plt+0x410dc>
   53c90:	b	53c98 <__assert_fail@plt+0x410e0>
   53c94:	b	53cd8 <__assert_fail@plt+0x41120>
   53c98:	ldr	r0, [fp, #-12]
   53c9c:	cmn	r0, #1
   53ca0:	bne	53cd8 <__assert_fail@plt+0x41120>
   53ca4:	b	53cc0 <__assert_fail@plt+0x41108>
   53ca8:	ldr	r0, [fp, #-16]
   53cac:	add	r0, r0, #0
   53cb0:	movw	r1, #0
   53cb4:	cmp	r1, r0
   53cb8:	bcc	53d0c <__assert_fail@plt+0x41154>
   53cbc:	b	53d24 <__assert_fail@plt+0x4116c>
   53cc0:	ldr	r0, [fp, #-16]
   53cc4:	sub	r0, r0, #1
   53cc8:	mvn	r1, #0
   53ccc:	cmp	r1, r0
   53cd0:	bcc	53d0c <__assert_fail@plt+0x41154>
   53cd4:	b	53d24 <__assert_fail@plt+0x4116c>
   53cd8:	ldr	r0, [fp, #-12]
   53cdc:	movw	r1, #0
   53ce0:	udiv	r0, r1, r0
   53ce4:	ldr	r1, [fp, #-16]
   53ce8:	cmp	r0, r1
   53cec:	bcc	53d0c <__assert_fail@plt+0x41154>
   53cf0:	b	53d24 <__assert_fail@plt+0x4116c>
   53cf4:	ldr	r0, [fp, #-16]
   53cf8:	movw	r1, #255	; 0xff
   53cfc:	udiv	r0, r1, r0
   53d00:	ldr	r1, [fp, #-12]
   53d04:	cmp	r0, r1
   53d08:	bcs	53d24 <__assert_fail@plt+0x4116c>
   53d0c:	ldr	r0, [fp, #-12]
   53d10:	ldr	r1, [fp, #-16]
   53d14:	mul	r0, r0, r1
   53d18:	and	r0, r0, #255	; 0xff
   53d1c:	str	r0, [fp, #-20]	; 0xffffffec
   53d20:	b	54c6c <__assert_fail@plt+0x420b4>
   53d24:	ldr	r0, [fp, #-12]
   53d28:	ldr	r1, [fp, #-16]
   53d2c:	mul	r0, r0, r1
   53d30:	and	r0, r0, #255	; 0xff
   53d34:	str	r0, [fp, #-20]	; 0xffffffec
   53d38:	b	54c84 <__assert_fail@plt+0x420cc>
   53d3c:	b	540f4 <__assert_fail@plt+0x4153c>
   53d40:	b	53f14 <__assert_fail@plt+0x4135c>
   53d44:	ldr	r0, [fp, #-16]
   53d48:	cmp	r0, #0
   53d4c:	bcs	53e50 <__assert_fail@plt+0x41298>
   53d50:	ldr	r0, [fp, #-12]
   53d54:	cmp	r0, #0
   53d58:	bcs	53de0 <__assert_fail@plt+0x41228>
   53d5c:	b	53d7c <__assert_fail@plt+0x411c4>
   53d60:	ldr	r0, [fp, #-12]
   53d64:	ldr	r1, [fp, #-16]
   53d68:	movw	r2, #32767	; 0x7fff
   53d6c:	udiv	r1, r2, r1
   53d70:	cmp	r0, r1
   53d74:	bcc	53ee4 <__assert_fail@plt+0x4132c>
   53d78:	b	53efc <__assert_fail@plt+0x41344>
   53d7c:	b	53d90 <__assert_fail@plt+0x411d8>
   53d80:	ldr	r0, [fp, #-16]
   53d84:	cmp	r0, #1
   53d88:	bcc	53da0 <__assert_fail@plt+0x411e8>
   53d8c:	b	53dac <__assert_fail@plt+0x411f4>
   53d90:	ldr	r0, [fp, #-16]
   53d94:	movw	r1, #0
   53d98:	cmp	r1, r0
   53d9c:	bcs	53dac <__assert_fail@plt+0x411f4>
   53da0:	movw	r0, #0
   53da4:	str	r0, [fp, #-32]	; 0xffffffe0
   53da8:	b	53dc4 <__assert_fail@plt+0x4120c>
   53dac:	ldr	r0, [fp, #-16]
   53db0:	movw	r1, #0
   53db4:	sub	r0, r1, r0
   53db8:	movw	r1, #32767	; 0x7fff
   53dbc:	udiv	r0, r1, r0
   53dc0:	str	r0, [fp, #-32]	; 0xffffffe0
   53dc4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   53dc8:	ldr	r1, [fp, #-12]
   53dcc:	mvn	r2, #0
   53dd0:	sub	r1, r2, r1
   53dd4:	cmp	r0, r1
   53dd8:	bls	53ee4 <__assert_fail@plt+0x4132c>
   53ddc:	b	53efc <__assert_fail@plt+0x41344>
   53de0:	ldr	r0, [fp, #-16]
   53de4:	cmn	r0, #1
   53de8:	bne	53e34 <__assert_fail@plt+0x4127c>
   53dec:	b	53e0c <__assert_fail@plt+0x41254>
   53df0:	ldr	r0, [pc, #3760]	; 54ca8 <__assert_fail@plt+0x420f0>
   53df4:	ldr	r1, [fp, #-12]
   53df8:	add	r0, r1, r0
   53dfc:	movw	r1, #0
   53e00:	cmp	r1, r0
   53e04:	bcc	53ee4 <__assert_fail@plt+0x4132c>
   53e08:	b	53efc <__assert_fail@plt+0x41344>
   53e0c:	ldr	r0, [fp, #-12]
   53e10:	movw	r1, #0
   53e14:	cmp	r1, r0
   53e18:	bcs	53efc <__assert_fail@plt+0x41344>
   53e1c:	ldr	r0, [fp, #-12]
   53e20:	sub	r0, r0, #1
   53e24:	movw	r1, #32767	; 0x7fff
   53e28:	cmp	r1, r0
   53e2c:	bcc	53ee4 <__assert_fail@plt+0x4132c>
   53e30:	b	53efc <__assert_fail@plt+0x41344>
   53e34:	ldr	r0, [pc, #3692]	; 54ca8 <__assert_fail@plt+0x420f0>
   53e38:	ldr	r1, [fp, #-16]
   53e3c:	udiv	r0, r0, r1
   53e40:	ldr	r1, [fp, #-12]
   53e44:	cmp	r0, r1
   53e48:	bcc	53ee4 <__assert_fail@plt+0x4132c>
   53e4c:	b	53efc <__assert_fail@plt+0x41344>
   53e50:	ldr	r0, [fp, #-16]
   53e54:	cmp	r0, #0
   53e58:	bne	53e60 <__assert_fail@plt+0x412a8>
   53e5c:	b	53efc <__assert_fail@plt+0x41344>
   53e60:	ldr	r0, [fp, #-12]
   53e64:	cmp	r0, #0
   53e68:	bcs	53ecc <__assert_fail@plt+0x41314>
   53e6c:	ldr	r0, [fp, #-12]
   53e70:	cmn	r0, #1
   53e74:	bne	53eb0 <__assert_fail@plt+0x412f8>
   53e78:	b	53e98 <__assert_fail@plt+0x412e0>
   53e7c:	ldr	r0, [pc, #3620]	; 54ca8 <__assert_fail@plt+0x420f0>
   53e80:	ldr	r1, [fp, #-16]
   53e84:	add	r0, r1, r0
   53e88:	movw	r1, #0
   53e8c:	cmp	r1, r0
   53e90:	bcc	53ee4 <__assert_fail@plt+0x4132c>
   53e94:	b	53efc <__assert_fail@plt+0x41344>
   53e98:	ldr	r0, [fp, #-16]
   53e9c:	sub	r0, r0, #1
   53ea0:	movw	r1, #32767	; 0x7fff
   53ea4:	cmp	r1, r0
   53ea8:	bcc	53ee4 <__assert_fail@plt+0x4132c>
   53eac:	b	53efc <__assert_fail@plt+0x41344>
   53eb0:	ldr	r0, [pc, #3568]	; 54ca8 <__assert_fail@plt+0x420f0>
   53eb4:	ldr	r1, [fp, #-12]
   53eb8:	udiv	r0, r0, r1
   53ebc:	ldr	r1, [fp, #-16]
   53ec0:	cmp	r0, r1
   53ec4:	bcc	53ee4 <__assert_fail@plt+0x4132c>
   53ec8:	b	53efc <__assert_fail@plt+0x41344>
   53ecc:	ldr	r0, [fp, #-16]
   53ed0:	movw	r1, #32767	; 0x7fff
   53ed4:	udiv	r0, r1, r0
   53ed8:	ldr	r1, [fp, #-12]
   53edc:	cmp	r0, r1
   53ee0:	bcs	53efc <__assert_fail@plt+0x41344>
   53ee4:	ldr	r0, [fp, #-12]
   53ee8:	ldr	r1, [fp, #-16]
   53eec:	mul	r0, r0, r1
   53ef0:	sxth	r0, r0
   53ef4:	str	r0, [fp, #-20]	; 0xffffffec
   53ef8:	b	54c6c <__assert_fail@plt+0x420b4>
   53efc:	ldr	r0, [fp, #-12]
   53f00:	ldr	r1, [fp, #-16]
   53f04:	mul	r0, r0, r1
   53f08:	sxth	r0, r0
   53f0c:	str	r0, [fp, #-20]	; 0xffffffec
   53f10:	b	54c84 <__assert_fail@plt+0x420cc>
   53f14:	ldr	r0, [fp, #-16]
   53f18:	cmp	r0, #0
   53f1c:	bcs	54028 <__assert_fail@plt+0x41470>
   53f20:	ldr	r0, [fp, #-12]
   53f24:	cmp	r0, #0
   53f28:	bcs	53fb0 <__assert_fail@plt+0x413f8>
   53f2c:	b	53f4c <__assert_fail@plt+0x41394>
   53f30:	ldr	r0, [fp, #-12]
   53f34:	ldr	r1, [fp, #-16]
   53f38:	movw	r2, #65535	; 0xffff
   53f3c:	udiv	r1, r2, r1
   53f40:	cmp	r0, r1
   53f44:	bcc	540c4 <__assert_fail@plt+0x4150c>
   53f48:	b	540dc <__assert_fail@plt+0x41524>
   53f4c:	b	53f60 <__assert_fail@plt+0x413a8>
   53f50:	ldr	r0, [fp, #-16]
   53f54:	cmp	r0, #1
   53f58:	bcc	53f70 <__assert_fail@plt+0x413b8>
   53f5c:	b	53f7c <__assert_fail@plt+0x413c4>
   53f60:	ldr	r0, [fp, #-16]
   53f64:	movw	r1, #0
   53f68:	cmp	r1, r0
   53f6c:	bcs	53f7c <__assert_fail@plt+0x413c4>
   53f70:	movw	r0, #0
   53f74:	str	r0, [fp, #-36]	; 0xffffffdc
   53f78:	b	53f94 <__assert_fail@plt+0x413dc>
   53f7c:	ldr	r0, [fp, #-16]
   53f80:	movw	r1, #0
   53f84:	sub	r0, r1, r0
   53f88:	movw	r1, #65535	; 0xffff
   53f8c:	udiv	r0, r1, r0
   53f90:	str	r0, [fp, #-36]	; 0xffffffdc
   53f94:	ldr	r0, [fp, #-36]	; 0xffffffdc
   53f98:	ldr	r1, [fp, #-12]
   53f9c:	mvn	r2, #0
   53fa0:	sub	r1, r2, r1
   53fa4:	cmp	r0, r1
   53fa8:	bls	540c4 <__assert_fail@plt+0x4150c>
   53fac:	b	540dc <__assert_fail@plt+0x41524>
   53fb0:	b	53fb8 <__assert_fail@plt+0x41400>
   53fb4:	b	53fbc <__assert_fail@plt+0x41404>
   53fb8:	b	5400c <__assert_fail@plt+0x41454>
   53fbc:	ldr	r0, [fp, #-16]
   53fc0:	cmn	r0, #1
   53fc4:	bne	5400c <__assert_fail@plt+0x41454>
   53fc8:	b	53fe4 <__assert_fail@plt+0x4142c>
   53fcc:	ldr	r0, [fp, #-12]
   53fd0:	add	r0, r0, #0
   53fd4:	movw	r1, #0
   53fd8:	cmp	r1, r0
   53fdc:	bcc	540c4 <__assert_fail@plt+0x4150c>
   53fe0:	b	540dc <__assert_fail@plt+0x41524>
   53fe4:	ldr	r0, [fp, #-12]
   53fe8:	movw	r1, #0
   53fec:	cmp	r1, r0
   53ff0:	bcs	540dc <__assert_fail@plt+0x41524>
   53ff4:	ldr	r0, [fp, #-12]
   53ff8:	sub	r0, r0, #1
   53ffc:	mvn	r1, #0
   54000:	cmp	r1, r0
   54004:	bcc	540c4 <__assert_fail@plt+0x4150c>
   54008:	b	540dc <__assert_fail@plt+0x41524>
   5400c:	ldr	r0, [fp, #-16]
   54010:	movw	r1, #0
   54014:	udiv	r0, r1, r0
   54018:	ldr	r1, [fp, #-12]
   5401c:	cmp	r0, r1
   54020:	bcc	540c4 <__assert_fail@plt+0x4150c>
   54024:	b	540dc <__assert_fail@plt+0x41524>
   54028:	ldr	r0, [fp, #-16]
   5402c:	cmp	r0, #0
   54030:	bne	54038 <__assert_fail@plt+0x41480>
   54034:	b	540dc <__assert_fail@plt+0x41524>
   54038:	ldr	r0, [fp, #-12]
   5403c:	cmp	r0, #0
   54040:	bcs	540ac <__assert_fail@plt+0x414f4>
   54044:	b	5404c <__assert_fail@plt+0x41494>
   54048:	b	54050 <__assert_fail@plt+0x41498>
   5404c:	b	54090 <__assert_fail@plt+0x414d8>
   54050:	ldr	r0, [fp, #-12]
   54054:	cmn	r0, #1
   54058:	bne	54090 <__assert_fail@plt+0x414d8>
   5405c:	b	54078 <__assert_fail@plt+0x414c0>
   54060:	ldr	r0, [fp, #-16]
   54064:	add	r0, r0, #0
   54068:	movw	r1, #0
   5406c:	cmp	r1, r0
   54070:	bcc	540c4 <__assert_fail@plt+0x4150c>
   54074:	b	540dc <__assert_fail@plt+0x41524>
   54078:	ldr	r0, [fp, #-16]
   5407c:	sub	r0, r0, #1
   54080:	mvn	r1, #0
   54084:	cmp	r1, r0
   54088:	bcc	540c4 <__assert_fail@plt+0x4150c>
   5408c:	b	540dc <__assert_fail@plt+0x41524>
   54090:	ldr	r0, [fp, #-12]
   54094:	movw	r1, #0
   54098:	udiv	r0, r1, r0
   5409c:	ldr	r1, [fp, #-16]
   540a0:	cmp	r0, r1
   540a4:	bcc	540c4 <__assert_fail@plt+0x4150c>
   540a8:	b	540dc <__assert_fail@plt+0x41524>
   540ac:	ldr	r0, [fp, #-16]
   540b0:	movw	r1, #65535	; 0xffff
   540b4:	udiv	r0, r1, r0
   540b8:	ldr	r1, [fp, #-12]
   540bc:	cmp	r0, r1
   540c0:	bcs	540dc <__assert_fail@plt+0x41524>
   540c4:	ldr	r0, [fp, #-12]
   540c8:	ldr	r1, [fp, #-16]
   540cc:	mul	r0, r0, r1
   540d0:	uxth	r0, r0
   540d4:	str	r0, [fp, #-20]	; 0xffffffec
   540d8:	b	54c6c <__assert_fail@plt+0x420b4>
   540dc:	ldr	r0, [fp, #-12]
   540e0:	ldr	r1, [fp, #-16]
   540e4:	mul	r0, r0, r1
   540e8:	uxth	r0, r0
   540ec:	str	r0, [fp, #-20]	; 0xffffffec
   540f0:	b	54c84 <__assert_fail@plt+0x420cc>
   540f4:	b	540f8 <__assert_fail@plt+0x41540>
   540f8:	b	542bc <__assert_fail@plt+0x41704>
   540fc:	ldr	r0, [fp, #-16]
   54100:	cmp	r0, #0
   54104:	bcs	54204 <__assert_fail@plt+0x4164c>
   54108:	ldr	r0, [fp, #-12]
   5410c:	cmp	r0, #0
   54110:	bcs	54198 <__assert_fail@plt+0x415e0>
   54114:	b	54134 <__assert_fail@plt+0x4157c>
   54118:	ldr	r0, [pc, #2944]	; 54ca0 <__assert_fail@plt+0x420e8>
   5411c:	ldr	r1, [fp, #-12]
   54120:	ldr	r2, [fp, #-16]
   54124:	udiv	r0, r0, r2
   54128:	cmp	r1, r0
   5412c:	bcc	54294 <__assert_fail@plt+0x416dc>
   54130:	b	542a8 <__assert_fail@plt+0x416f0>
   54134:	b	54148 <__assert_fail@plt+0x41590>
   54138:	ldr	r0, [fp, #-16]
   5413c:	cmp	r0, #1
   54140:	bcc	54158 <__assert_fail@plt+0x415a0>
   54144:	b	54164 <__assert_fail@plt+0x415ac>
   54148:	ldr	r0, [fp, #-16]
   5414c:	movw	r1, #0
   54150:	cmp	r1, r0
   54154:	bcs	54164 <__assert_fail@plt+0x415ac>
   54158:	movw	r0, #0
   5415c:	str	r0, [fp, #-40]	; 0xffffffd8
   54160:	b	5417c <__assert_fail@plt+0x415c4>
   54164:	ldr	r0, [pc, #2868]	; 54ca0 <__assert_fail@plt+0x420e8>
   54168:	ldr	r1, [fp, #-16]
   5416c:	movw	r2, #0
   54170:	sub	r1, r2, r1
   54174:	udiv	r0, r0, r1
   54178:	str	r0, [fp, #-40]	; 0xffffffd8
   5417c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   54180:	ldr	r1, [fp, #-12]
   54184:	mvn	r2, #0
   54188:	sub	r1, r2, r1
   5418c:	cmp	r0, r1
   54190:	bls	54294 <__assert_fail@plt+0x416dc>
   54194:	b	542a8 <__assert_fail@plt+0x416f0>
   54198:	ldr	r0, [fp, #-16]
   5419c:	cmn	r0, #1
   541a0:	bne	541e8 <__assert_fail@plt+0x41630>
   541a4:	b	541c0 <__assert_fail@plt+0x41608>
   541a8:	ldr	r0, [fp, #-12]
   541ac:	add	r0, r0, #-2147483648	; 0x80000000
   541b0:	movw	r1, #0
   541b4:	cmp	r1, r0
   541b8:	bcc	54294 <__assert_fail@plt+0x416dc>
   541bc:	b	542a8 <__assert_fail@plt+0x416f0>
   541c0:	ldr	r0, [fp, #-12]
   541c4:	movw	r1, #0
   541c8:	cmp	r1, r0
   541cc:	bcs	542a8 <__assert_fail@plt+0x416f0>
   541d0:	ldr	r0, [pc, #2760]	; 54ca0 <__assert_fail@plt+0x420e8>
   541d4:	ldr	r1, [fp, #-12]
   541d8:	sub	r1, r1, #1
   541dc:	cmp	r0, r1
   541e0:	bcc	54294 <__assert_fail@plt+0x416dc>
   541e4:	b	542a8 <__assert_fail@plt+0x416f0>
   541e8:	ldr	r0, [pc, #2740]	; 54ca4 <__assert_fail@plt+0x420ec>
   541ec:	ldr	r1, [fp, #-16]
   541f0:	udiv	r0, r0, r1
   541f4:	ldr	r1, [fp, #-12]
   541f8:	cmp	r0, r1
   541fc:	bcc	54294 <__assert_fail@plt+0x416dc>
   54200:	b	542a8 <__assert_fail@plt+0x416f0>
   54204:	ldr	r0, [fp, #-16]
   54208:	cmp	r0, #0
   5420c:	bne	54214 <__assert_fail@plt+0x4165c>
   54210:	b	542a8 <__assert_fail@plt+0x416f0>
   54214:	ldr	r0, [fp, #-12]
   54218:	cmp	r0, #0
   5421c:	bcs	5427c <__assert_fail@plt+0x416c4>
   54220:	ldr	r0, [fp, #-12]
   54224:	cmn	r0, #1
   54228:	bne	54260 <__assert_fail@plt+0x416a8>
   5422c:	b	54248 <__assert_fail@plt+0x41690>
   54230:	ldr	r0, [fp, #-16]
   54234:	add	r0, r0, #-2147483648	; 0x80000000
   54238:	movw	r1, #0
   5423c:	cmp	r1, r0
   54240:	bcc	54294 <__assert_fail@plt+0x416dc>
   54244:	b	542a8 <__assert_fail@plt+0x416f0>
   54248:	ldr	r0, [pc, #2640]	; 54ca0 <__assert_fail@plt+0x420e8>
   5424c:	ldr	r1, [fp, #-16]
   54250:	sub	r1, r1, #1
   54254:	cmp	r0, r1
   54258:	bcc	54294 <__assert_fail@plt+0x416dc>
   5425c:	b	542a8 <__assert_fail@plt+0x416f0>
   54260:	ldr	r0, [pc, #2620]	; 54ca4 <__assert_fail@plt+0x420ec>
   54264:	ldr	r1, [fp, #-12]
   54268:	udiv	r0, r0, r1
   5426c:	ldr	r1, [fp, #-16]
   54270:	cmp	r0, r1
   54274:	bcc	54294 <__assert_fail@plt+0x416dc>
   54278:	b	542a8 <__assert_fail@plt+0x416f0>
   5427c:	ldr	r0, [pc, #2588]	; 54ca0 <__assert_fail@plt+0x420e8>
   54280:	ldr	r1, [fp, #-16]
   54284:	udiv	r0, r0, r1
   54288:	ldr	r1, [fp, #-12]
   5428c:	cmp	r0, r1
   54290:	bcs	542a8 <__assert_fail@plt+0x416f0>
   54294:	ldr	r0, [fp, #-12]
   54298:	ldr	r1, [fp, #-16]
   5429c:	mul	r0, r0, r1
   542a0:	str	r0, [fp, #-20]	; 0xffffffec
   542a4:	b	54c6c <__assert_fail@plt+0x420b4>
   542a8:	ldr	r0, [fp, #-12]
   542ac:	ldr	r1, [fp, #-16]
   542b0:	mul	r0, r0, r1
   542b4:	str	r0, [fp, #-20]	; 0xffffffec
   542b8:	b	54c84 <__assert_fail@plt+0x420cc>
   542bc:	ldr	r0, [fp, #-16]
   542c0:	cmp	r0, #0
   542c4:	bcs	543d0 <__assert_fail@plt+0x41818>
   542c8:	ldr	r0, [fp, #-12]
   542cc:	cmp	r0, #0
   542d0:	bcs	54358 <__assert_fail@plt+0x417a0>
   542d4:	b	542f4 <__assert_fail@plt+0x4173c>
   542d8:	ldr	r0, [fp, #-12]
   542dc:	ldr	r1, [fp, #-16]
   542e0:	mvn	r2, #0
   542e4:	udiv	r1, r2, r1
   542e8:	cmp	r0, r1
   542ec:	bcc	5446c <__assert_fail@plt+0x418b4>
   542f0:	b	54480 <__assert_fail@plt+0x418c8>
   542f4:	b	54308 <__assert_fail@plt+0x41750>
   542f8:	ldr	r0, [fp, #-16]
   542fc:	cmp	r0, #1
   54300:	bcc	54318 <__assert_fail@plt+0x41760>
   54304:	b	54324 <__assert_fail@plt+0x4176c>
   54308:	ldr	r0, [fp, #-16]
   5430c:	movw	r1, #0
   54310:	cmp	r1, r0
   54314:	bcs	54324 <__assert_fail@plt+0x4176c>
   54318:	movw	r0, #1
   5431c:	str	r0, [fp, #-44]	; 0xffffffd4
   54320:	b	5433c <__assert_fail@plt+0x41784>
   54324:	ldr	r0, [fp, #-16]
   54328:	movw	r1, #0
   5432c:	sub	r0, r1, r0
   54330:	mvn	r1, #0
   54334:	udiv	r0, r1, r0
   54338:	str	r0, [fp, #-44]	; 0xffffffd4
   5433c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   54340:	ldr	r1, [fp, #-12]
   54344:	mvn	r2, #0
   54348:	sub	r1, r2, r1
   5434c:	cmp	r0, r1
   54350:	bls	5446c <__assert_fail@plt+0x418b4>
   54354:	b	54480 <__assert_fail@plt+0x418c8>
   54358:	b	54360 <__assert_fail@plt+0x417a8>
   5435c:	b	54364 <__assert_fail@plt+0x417ac>
   54360:	b	543b4 <__assert_fail@plt+0x417fc>
   54364:	ldr	r0, [fp, #-16]
   54368:	cmn	r0, #1
   5436c:	bne	543b4 <__assert_fail@plt+0x417fc>
   54370:	b	5438c <__assert_fail@plt+0x417d4>
   54374:	ldr	r0, [fp, #-12]
   54378:	add	r0, r0, #0
   5437c:	movw	r1, #0
   54380:	cmp	r1, r0
   54384:	bcc	5446c <__assert_fail@plt+0x418b4>
   54388:	b	54480 <__assert_fail@plt+0x418c8>
   5438c:	ldr	r0, [fp, #-12]
   54390:	movw	r1, #0
   54394:	cmp	r1, r0
   54398:	bcs	54480 <__assert_fail@plt+0x418c8>
   5439c:	ldr	r0, [fp, #-12]
   543a0:	sub	r0, r0, #1
   543a4:	mvn	r1, #0
   543a8:	cmp	r1, r0
   543ac:	bcc	5446c <__assert_fail@plt+0x418b4>
   543b0:	b	54480 <__assert_fail@plt+0x418c8>
   543b4:	ldr	r0, [fp, #-16]
   543b8:	movw	r1, #0
   543bc:	udiv	r0, r1, r0
   543c0:	ldr	r1, [fp, #-12]
   543c4:	cmp	r0, r1
   543c8:	bcc	5446c <__assert_fail@plt+0x418b4>
   543cc:	b	54480 <__assert_fail@plt+0x418c8>
   543d0:	ldr	r0, [fp, #-16]
   543d4:	cmp	r0, #0
   543d8:	bne	543e0 <__assert_fail@plt+0x41828>
   543dc:	b	54480 <__assert_fail@plt+0x418c8>
   543e0:	ldr	r0, [fp, #-12]
   543e4:	cmp	r0, #0
   543e8:	bcs	54454 <__assert_fail@plt+0x4189c>
   543ec:	b	543f4 <__assert_fail@plt+0x4183c>
   543f0:	b	543f8 <__assert_fail@plt+0x41840>
   543f4:	b	54438 <__assert_fail@plt+0x41880>
   543f8:	ldr	r0, [fp, #-12]
   543fc:	cmn	r0, #1
   54400:	bne	54438 <__assert_fail@plt+0x41880>
   54404:	b	54420 <__assert_fail@plt+0x41868>
   54408:	ldr	r0, [fp, #-16]
   5440c:	add	r0, r0, #0
   54410:	movw	r1, #0
   54414:	cmp	r1, r0
   54418:	bcc	5446c <__assert_fail@plt+0x418b4>
   5441c:	b	54480 <__assert_fail@plt+0x418c8>
   54420:	ldr	r0, [fp, #-16]
   54424:	sub	r0, r0, #1
   54428:	mvn	r1, #0
   5442c:	cmp	r1, r0
   54430:	bcc	5446c <__assert_fail@plt+0x418b4>
   54434:	b	54480 <__assert_fail@plt+0x418c8>
   54438:	ldr	r0, [fp, #-12]
   5443c:	movw	r1, #0
   54440:	udiv	r0, r1, r0
   54444:	ldr	r1, [fp, #-16]
   54448:	cmp	r0, r1
   5444c:	bcc	5446c <__assert_fail@plt+0x418b4>
   54450:	b	54480 <__assert_fail@plt+0x418c8>
   54454:	ldr	r0, [fp, #-16]
   54458:	mvn	r1, #0
   5445c:	udiv	r0, r1, r0
   54460:	ldr	r1, [fp, #-12]
   54464:	cmp	r0, r1
   54468:	bcs	54480 <__assert_fail@plt+0x418c8>
   5446c:	ldr	r0, [fp, #-12]
   54470:	ldr	r1, [fp, #-16]
   54474:	mul	r0, r0, r1
   54478:	str	r0, [fp, #-20]	; 0xffffffec
   5447c:	b	54c6c <__assert_fail@plt+0x420b4>
   54480:	ldr	r0, [fp, #-12]
   54484:	ldr	r1, [fp, #-16]
   54488:	mul	r0, r0, r1
   5448c:	str	r0, [fp, #-20]	; 0xffffffec
   54490:	b	54c84 <__assert_fail@plt+0x420cc>
   54494:	b	54498 <__assert_fail@plt+0x418e0>
   54498:	b	5465c <__assert_fail@plt+0x41aa4>
   5449c:	ldr	r0, [fp, #-16]
   544a0:	cmp	r0, #0
   544a4:	bcs	545a4 <__assert_fail@plt+0x419ec>
   544a8:	ldr	r0, [fp, #-12]
   544ac:	cmp	r0, #0
   544b0:	bcs	54538 <__assert_fail@plt+0x41980>
   544b4:	b	544d4 <__assert_fail@plt+0x4191c>
   544b8:	ldr	r0, [pc, #2016]	; 54ca0 <__assert_fail@plt+0x420e8>
   544bc:	ldr	r1, [fp, #-12]
   544c0:	ldr	r2, [fp, #-16]
   544c4:	udiv	r0, r0, r2
   544c8:	cmp	r1, r0
   544cc:	bcc	54634 <__assert_fail@plt+0x41a7c>
   544d0:	b	54648 <__assert_fail@plt+0x41a90>
   544d4:	b	544e8 <__assert_fail@plt+0x41930>
   544d8:	ldr	r0, [fp, #-16]
   544dc:	cmp	r0, #1
   544e0:	bcc	544f8 <__assert_fail@plt+0x41940>
   544e4:	b	54504 <__assert_fail@plt+0x4194c>
   544e8:	ldr	r0, [fp, #-16]
   544ec:	movw	r1, #0
   544f0:	cmp	r1, r0
   544f4:	bcs	54504 <__assert_fail@plt+0x4194c>
   544f8:	movw	r0, #0
   544fc:	str	r0, [sp, #48]	; 0x30
   54500:	b	5451c <__assert_fail@plt+0x41964>
   54504:	ldr	r0, [pc, #1940]	; 54ca0 <__assert_fail@plt+0x420e8>
   54508:	ldr	r1, [fp, #-16]
   5450c:	movw	r2, #0
   54510:	sub	r1, r2, r1
   54514:	udiv	r0, r0, r1
   54518:	str	r0, [sp, #48]	; 0x30
   5451c:	ldr	r0, [sp, #48]	; 0x30
   54520:	ldr	r1, [fp, #-12]
   54524:	mvn	r2, #0
   54528:	sub	r1, r2, r1
   5452c:	cmp	r0, r1
   54530:	bls	54634 <__assert_fail@plt+0x41a7c>
   54534:	b	54648 <__assert_fail@plt+0x41a90>
   54538:	ldr	r0, [fp, #-16]
   5453c:	cmn	r0, #1
   54540:	bne	54588 <__assert_fail@plt+0x419d0>
   54544:	b	54560 <__assert_fail@plt+0x419a8>
   54548:	ldr	r0, [fp, #-12]
   5454c:	add	r0, r0, #-2147483648	; 0x80000000
   54550:	movw	r1, #0
   54554:	cmp	r1, r0
   54558:	bcc	54634 <__assert_fail@plt+0x41a7c>
   5455c:	b	54648 <__assert_fail@plt+0x41a90>
   54560:	ldr	r0, [fp, #-12]
   54564:	movw	r1, #0
   54568:	cmp	r1, r0
   5456c:	bcs	54648 <__assert_fail@plt+0x41a90>
   54570:	ldr	r0, [pc, #1832]	; 54ca0 <__assert_fail@plt+0x420e8>
   54574:	ldr	r1, [fp, #-12]
   54578:	sub	r1, r1, #1
   5457c:	cmp	r0, r1
   54580:	bcc	54634 <__assert_fail@plt+0x41a7c>
   54584:	b	54648 <__assert_fail@plt+0x41a90>
   54588:	ldr	r0, [pc, #1812]	; 54ca4 <__assert_fail@plt+0x420ec>
   5458c:	ldr	r1, [fp, #-16]
   54590:	udiv	r0, r0, r1
   54594:	ldr	r1, [fp, #-12]
   54598:	cmp	r0, r1
   5459c:	bcc	54634 <__assert_fail@plt+0x41a7c>
   545a0:	b	54648 <__assert_fail@plt+0x41a90>
   545a4:	ldr	r0, [fp, #-16]
   545a8:	cmp	r0, #0
   545ac:	bne	545b4 <__assert_fail@plt+0x419fc>
   545b0:	b	54648 <__assert_fail@plt+0x41a90>
   545b4:	ldr	r0, [fp, #-12]
   545b8:	cmp	r0, #0
   545bc:	bcs	5461c <__assert_fail@plt+0x41a64>
   545c0:	ldr	r0, [fp, #-12]
   545c4:	cmn	r0, #1
   545c8:	bne	54600 <__assert_fail@plt+0x41a48>
   545cc:	b	545e8 <__assert_fail@plt+0x41a30>
   545d0:	ldr	r0, [fp, #-16]
   545d4:	add	r0, r0, #-2147483648	; 0x80000000
   545d8:	movw	r1, #0
   545dc:	cmp	r1, r0
   545e0:	bcc	54634 <__assert_fail@plt+0x41a7c>
   545e4:	b	54648 <__assert_fail@plt+0x41a90>
   545e8:	ldr	r0, [pc, #1712]	; 54ca0 <__assert_fail@plt+0x420e8>
   545ec:	ldr	r1, [fp, #-16]
   545f0:	sub	r1, r1, #1
   545f4:	cmp	r0, r1
   545f8:	bcc	54634 <__assert_fail@plt+0x41a7c>
   545fc:	b	54648 <__assert_fail@plt+0x41a90>
   54600:	ldr	r0, [pc, #1692]	; 54ca4 <__assert_fail@plt+0x420ec>
   54604:	ldr	r1, [fp, #-12]
   54608:	udiv	r0, r0, r1
   5460c:	ldr	r1, [fp, #-16]
   54610:	cmp	r0, r1
   54614:	bcc	54634 <__assert_fail@plt+0x41a7c>
   54618:	b	54648 <__assert_fail@plt+0x41a90>
   5461c:	ldr	r0, [pc, #1660]	; 54ca0 <__assert_fail@plt+0x420e8>
   54620:	ldr	r1, [fp, #-16]
   54624:	udiv	r0, r0, r1
   54628:	ldr	r1, [fp, #-12]
   5462c:	cmp	r0, r1
   54630:	bcs	54648 <__assert_fail@plt+0x41a90>
   54634:	ldr	r0, [fp, #-12]
   54638:	ldr	r1, [fp, #-16]
   5463c:	mul	r0, r0, r1
   54640:	str	r0, [fp, #-20]	; 0xffffffec
   54644:	b	54c6c <__assert_fail@plt+0x420b4>
   54648:	ldr	r0, [fp, #-12]
   5464c:	ldr	r1, [fp, #-16]
   54650:	mul	r0, r0, r1
   54654:	str	r0, [fp, #-20]	; 0xffffffec
   54658:	b	54c84 <__assert_fail@plt+0x420cc>
   5465c:	ldr	r0, [fp, #-16]
   54660:	cmp	r0, #0
   54664:	bcs	54770 <__assert_fail@plt+0x41bb8>
   54668:	ldr	r0, [fp, #-12]
   5466c:	cmp	r0, #0
   54670:	bcs	546f8 <__assert_fail@plt+0x41b40>
   54674:	b	54694 <__assert_fail@plt+0x41adc>
   54678:	ldr	r0, [fp, #-12]
   5467c:	ldr	r1, [fp, #-16]
   54680:	mvn	r2, #0
   54684:	udiv	r1, r2, r1
   54688:	cmp	r0, r1
   5468c:	bcc	5480c <__assert_fail@plt+0x41c54>
   54690:	b	54820 <__assert_fail@plt+0x41c68>
   54694:	b	546a8 <__assert_fail@plt+0x41af0>
   54698:	ldr	r0, [fp, #-16]
   5469c:	cmp	r0, #1
   546a0:	bcc	546b8 <__assert_fail@plt+0x41b00>
   546a4:	b	546c4 <__assert_fail@plt+0x41b0c>
   546a8:	ldr	r0, [fp, #-16]
   546ac:	movw	r1, #0
   546b0:	cmp	r1, r0
   546b4:	bcs	546c4 <__assert_fail@plt+0x41b0c>
   546b8:	movw	r0, #1
   546bc:	str	r0, [sp, #44]	; 0x2c
   546c0:	b	546dc <__assert_fail@plt+0x41b24>
   546c4:	ldr	r0, [fp, #-16]
   546c8:	movw	r1, #0
   546cc:	sub	r0, r1, r0
   546d0:	mvn	r1, #0
   546d4:	udiv	r0, r1, r0
   546d8:	str	r0, [sp, #44]	; 0x2c
   546dc:	ldr	r0, [sp, #44]	; 0x2c
   546e0:	ldr	r1, [fp, #-12]
   546e4:	mvn	r2, #0
   546e8:	sub	r1, r2, r1
   546ec:	cmp	r0, r1
   546f0:	bls	5480c <__assert_fail@plt+0x41c54>
   546f4:	b	54820 <__assert_fail@plt+0x41c68>
   546f8:	b	54700 <__assert_fail@plt+0x41b48>
   546fc:	b	54704 <__assert_fail@plt+0x41b4c>
   54700:	b	54754 <__assert_fail@plt+0x41b9c>
   54704:	ldr	r0, [fp, #-16]
   54708:	cmn	r0, #1
   5470c:	bne	54754 <__assert_fail@plt+0x41b9c>
   54710:	b	5472c <__assert_fail@plt+0x41b74>
   54714:	ldr	r0, [fp, #-12]
   54718:	add	r0, r0, #0
   5471c:	movw	r1, #0
   54720:	cmp	r1, r0
   54724:	bcc	5480c <__assert_fail@plt+0x41c54>
   54728:	b	54820 <__assert_fail@plt+0x41c68>
   5472c:	ldr	r0, [fp, #-12]
   54730:	movw	r1, #0
   54734:	cmp	r1, r0
   54738:	bcs	54820 <__assert_fail@plt+0x41c68>
   5473c:	ldr	r0, [fp, #-12]
   54740:	sub	r0, r0, #1
   54744:	mvn	r1, #0
   54748:	cmp	r1, r0
   5474c:	bcc	5480c <__assert_fail@plt+0x41c54>
   54750:	b	54820 <__assert_fail@plt+0x41c68>
   54754:	ldr	r0, [fp, #-16]
   54758:	movw	r1, #0
   5475c:	udiv	r0, r1, r0
   54760:	ldr	r1, [fp, #-12]
   54764:	cmp	r0, r1
   54768:	bcc	5480c <__assert_fail@plt+0x41c54>
   5476c:	b	54820 <__assert_fail@plt+0x41c68>
   54770:	ldr	r0, [fp, #-16]
   54774:	cmp	r0, #0
   54778:	bne	54780 <__assert_fail@plt+0x41bc8>
   5477c:	b	54820 <__assert_fail@plt+0x41c68>
   54780:	ldr	r0, [fp, #-12]
   54784:	cmp	r0, #0
   54788:	bcs	547f4 <__assert_fail@plt+0x41c3c>
   5478c:	b	54794 <__assert_fail@plt+0x41bdc>
   54790:	b	54798 <__assert_fail@plt+0x41be0>
   54794:	b	547d8 <__assert_fail@plt+0x41c20>
   54798:	ldr	r0, [fp, #-12]
   5479c:	cmn	r0, #1
   547a0:	bne	547d8 <__assert_fail@plt+0x41c20>
   547a4:	b	547c0 <__assert_fail@plt+0x41c08>
   547a8:	ldr	r0, [fp, #-16]
   547ac:	add	r0, r0, #0
   547b0:	movw	r1, #0
   547b4:	cmp	r1, r0
   547b8:	bcc	5480c <__assert_fail@plt+0x41c54>
   547bc:	b	54820 <__assert_fail@plt+0x41c68>
   547c0:	ldr	r0, [fp, #-16]
   547c4:	sub	r0, r0, #1
   547c8:	mvn	r1, #0
   547cc:	cmp	r1, r0
   547d0:	bcc	5480c <__assert_fail@plt+0x41c54>
   547d4:	b	54820 <__assert_fail@plt+0x41c68>
   547d8:	ldr	r0, [fp, #-12]
   547dc:	movw	r1, #0
   547e0:	udiv	r0, r1, r0
   547e4:	ldr	r1, [fp, #-16]
   547e8:	cmp	r0, r1
   547ec:	bcc	5480c <__assert_fail@plt+0x41c54>
   547f0:	b	54820 <__assert_fail@plt+0x41c68>
   547f4:	ldr	r0, [fp, #-16]
   547f8:	mvn	r1, #0
   547fc:	udiv	r0, r1, r0
   54800:	ldr	r1, [fp, #-12]
   54804:	cmp	r0, r1
   54808:	bcs	54820 <__assert_fail@plt+0x41c68>
   5480c:	ldr	r0, [fp, #-12]
   54810:	ldr	r1, [fp, #-16]
   54814:	mul	r0, r0, r1
   54818:	str	r0, [fp, #-20]	; 0xffffffec
   5481c:	b	54c6c <__assert_fail@plt+0x420b4>
   54820:	ldr	r0, [fp, #-12]
   54824:	ldr	r1, [fp, #-16]
   54828:	mul	r0, r0, r1
   5482c:	str	r0, [fp, #-20]	; 0xffffffec
   54830:	b	54c84 <__assert_fail@plt+0x420cc>
   54834:	b	54a50 <__assert_fail@plt+0x41e98>
   54838:	ldr	r0, [fp, #-16]
   5483c:	cmp	r0, #0
   54840:	bcs	54980 <__assert_fail@plt+0x41dc8>
   54844:	ldr	r0, [fp, #-12]
   54848:	cmp	r0, #0
   5484c:	bcs	5490c <__assert_fail@plt+0x41d54>
   54850:	b	54854 <__assert_fail@plt+0x41c9c>
   54854:	ldr	r0, [fp, #-12]
   54858:	ldr	r2, [fp, #-16]
   5485c:	mvn	r1, #0
   54860:	mvn	r3, #-2147483648	; 0x80000000
   54864:	mov	ip, #0
   54868:	str	r0, [sp, #40]	; 0x28
   5486c:	mov	r0, r1
   54870:	mov	r1, r3
   54874:	mov	r3, ip
   54878:	bl	7540c <__assert_fail@plt+0x62854>
   5487c:	ldr	r2, [sp, #40]	; 0x28
   54880:	subs	r0, r2, r0
   54884:	rscs	r1, r1, #0
   54888:	blt	54a28 <__assert_fail@plt+0x41e70>
   5488c:	b	54a3c <__assert_fail@plt+0x41e84>
   54890:	b	548a4 <__assert_fail@plt+0x41cec>
   54894:	ldr	r0, [fp, #-16]
   54898:	cmp	r0, #1
   5489c:	bcc	548b4 <__assert_fail@plt+0x41cfc>
   548a0:	b	548c8 <__assert_fail@plt+0x41d10>
   548a4:	ldr	r0, [fp, #-16]
   548a8:	movw	r1, #0
   548ac:	cmp	r1, r0
   548b0:	bcs	548c8 <__assert_fail@plt+0x41d10>
   548b4:	mov	r0, #0
   548b8:	mvn	r1, #0
   548bc:	str	r1, [sp, #36]	; 0x24
   548c0:	str	r0, [sp, #32]
   548c4:	b	548ec <__assert_fail@plt+0x41d34>
   548c8:	ldr	r0, [fp, #-16]
   548cc:	rsb	r2, r0, #0
   548d0:	mvn	r0, #0
   548d4:	mvn	r1, #-2147483648	; 0x80000000
   548d8:	mov	r3, #0
   548dc:	bl	7540c <__assert_fail@plt+0x62854>
   548e0:	str	r0, [sp, #36]	; 0x24
   548e4:	str	r1, [sp, #32]
   548e8:	b	548ec <__assert_fail@plt+0x41d34>
   548ec:	ldr	r0, [sp, #32]
   548f0:	ldr	r1, [sp, #36]	; 0x24
   548f4:	ldr	r2, [fp, #-12]
   548f8:	mvn	r2, r2
   548fc:	subs	r1, r2, r1
   54900:	rscs	r0, r0, #0
   54904:	bge	54a28 <__assert_fail@plt+0x41e70>
   54908:	b	54a3c <__assert_fail@plt+0x41e84>
   5490c:	ldr	r0, [fp, #-16]
   54910:	cmn	r0, #1
   54914:	bne	54954 <__assert_fail@plt+0x41d9c>
   54918:	b	54934 <__assert_fail@plt+0x41d7c>
   5491c:	ldr	r0, [fp, #-12]
   54920:	rsbs	r0, r0, #0
   54924:	mov	r1, #0
   54928:	sbcs	r1, r1, #-2147483648	; 0x80000000
   5492c:	blt	54a28 <__assert_fail@plt+0x41e70>
   54930:	b	54a3c <__assert_fail@plt+0x41e84>
   54934:	ldr	r0, [fp, #-12]
   54938:	movw	r1, #0
   5493c:	cmp	r1, r0
   54940:	bcs	54a3c <__assert_fail@plt+0x41e84>
   54944:	mov	r0, #0
   54948:	cmp	r0, #0
   5494c:	bne	54a28 <__assert_fail@plt+0x41e70>
   54950:	b	54a3c <__assert_fail@plt+0x41e84>
   54954:	ldr	r2, [fp, #-16]
   54958:	mov	r1, #-2147483648	; 0x80000000
   5495c:	mov	r0, #0
   54960:	str	r0, [sp, #28]
   54964:	ldr	r3, [sp, #28]
   54968:	bl	75338 <__assert_fail@plt+0x62780>
   5496c:	ldr	r2, [fp, #-12]
   54970:	subs	r0, r0, r2
   54974:	sbcs	r1, r1, #0
   54978:	blt	54a28 <__assert_fail@plt+0x41e70>
   5497c:	b	54a3c <__assert_fail@plt+0x41e84>
   54980:	ldr	r0, [fp, #-16]
   54984:	cmp	r0, #0
   54988:	bne	54990 <__assert_fail@plt+0x41dd8>
   5498c:	b	54a3c <__assert_fail@plt+0x41e84>
   54990:	ldr	r0, [fp, #-12]
   54994:	cmp	r0, #0
   54998:	bcs	54a00 <__assert_fail@plt+0x41e48>
   5499c:	ldr	r0, [fp, #-12]
   549a0:	cmn	r0, #1
   549a4:	bne	549d4 <__assert_fail@plt+0x41e1c>
   549a8:	b	549c4 <__assert_fail@plt+0x41e0c>
   549ac:	ldr	r0, [fp, #-16]
   549b0:	rsbs	r0, r0, #0
   549b4:	mov	r1, #0
   549b8:	sbcs	r1, r1, #-2147483648	; 0x80000000
   549bc:	blt	54a28 <__assert_fail@plt+0x41e70>
   549c0:	b	54a3c <__assert_fail@plt+0x41e84>
   549c4:	mov	r0, #0
   549c8:	cmp	r0, #0
   549cc:	bne	54a28 <__assert_fail@plt+0x41e70>
   549d0:	b	54a3c <__assert_fail@plt+0x41e84>
   549d4:	ldr	r2, [fp, #-12]
   549d8:	mov	r1, #-2147483648	; 0x80000000
   549dc:	mov	r0, #0
   549e0:	str	r0, [sp, #24]
   549e4:	ldr	r3, [sp, #24]
   549e8:	bl	75338 <__assert_fail@plt+0x62780>
   549ec:	ldr	r2, [fp, #-16]
   549f0:	subs	r0, r0, r2
   549f4:	sbcs	r1, r1, #0
   549f8:	blt	54a28 <__assert_fail@plt+0x41e70>
   549fc:	b	54a3c <__assert_fail@plt+0x41e84>
   54a00:	ldr	r2, [fp, #-16]
   54a04:	mvn	r0, #0
   54a08:	mvn	r1, #-2147483648	; 0x80000000
   54a0c:	mov	r3, #0
   54a10:	bl	7540c <__assert_fail@plt+0x62854>
   54a14:	ldr	r2, [fp, #-12]
   54a18:	subs	r0, r0, r2
   54a1c:	sbcs	r1, r1, #0
   54a20:	bge	54a3c <__assert_fail@plt+0x41e84>
   54a24:	b	54a28 <__assert_fail@plt+0x41e70>
   54a28:	ldr	r0, [fp, #-12]
   54a2c:	ldr	r1, [fp, #-16]
   54a30:	mul	r0, r0, r1
   54a34:	str	r0, [fp, #-20]	; 0xffffffec
   54a38:	b	54c6c <__assert_fail@plt+0x420b4>
   54a3c:	ldr	r0, [fp, #-12]
   54a40:	ldr	r1, [fp, #-16]
   54a44:	mul	r0, r0, r1
   54a48:	str	r0, [fp, #-20]	; 0xffffffec
   54a4c:	b	54c84 <__assert_fail@plt+0x420cc>
   54a50:	ldr	r0, [fp, #-16]
   54a54:	cmp	r0, #0
   54a58:	bcs	54b94 <__assert_fail@plt+0x41fdc>
   54a5c:	ldr	r0, [fp, #-12]
   54a60:	cmp	r0, #0
   54a64:	bcs	54b1c <__assert_fail@plt+0x41f64>
   54a68:	b	54a9c <__assert_fail@plt+0x41ee4>
   54a6c:	ldr	r0, [fp, #-12]
   54a70:	ldr	r2, [fp, #-16]
   54a74:	mvn	r1, #0
   54a78:	mov	r3, #0
   54a7c:	str	r0, [sp, #20]
   54a80:	mov	r0, r1
   54a84:	bl	7540c <__assert_fail@plt+0x62854>
   54a88:	ldr	r2, [sp, #20]
   54a8c:	subs	r0, r2, r0
   54a90:	rscs	r1, r1, #0
   54a94:	bcc	54c44 <__assert_fail@plt+0x4208c>
   54a98:	b	54c58 <__assert_fail@plt+0x420a0>
   54a9c:	b	54ab0 <__assert_fail@plt+0x41ef8>
   54aa0:	ldr	r0, [fp, #-16]
   54aa4:	cmp	r0, #1
   54aa8:	bcc	54ac0 <__assert_fail@plt+0x41f08>
   54aac:	b	54ad4 <__assert_fail@plt+0x41f1c>
   54ab0:	ldr	r0, [fp, #-16]
   54ab4:	movw	r1, #0
   54ab8:	cmp	r1, r0
   54abc:	bcs	54ad4 <__assert_fail@plt+0x41f1c>
   54ac0:	mov	r0, #1
   54ac4:	mvn	r1, #0
   54ac8:	str	r1, [sp, #16]
   54acc:	str	r0, [sp, #12]
   54ad0:	b	54afc <__assert_fail@plt+0x41f44>
   54ad4:	ldr	r0, [fp, #-16]
   54ad8:	rsb	r2, r0, #0
   54adc:	mvn	r0, #0
   54ae0:	mov	r3, #0
   54ae4:	str	r0, [sp, #8]
   54ae8:	ldr	r1, [sp, #8]
   54aec:	bl	7540c <__assert_fail@plt+0x62854>
   54af0:	str	r0, [sp, #16]
   54af4:	str	r1, [sp, #12]
   54af8:	b	54afc <__assert_fail@plt+0x41f44>
   54afc:	ldr	r0, [sp, #12]
   54b00:	ldr	r1, [sp, #16]
   54b04:	ldr	r2, [fp, #-12]
   54b08:	mvn	r2, r2
   54b0c:	subs	r1, r2, r1
   54b10:	rscs	r0, r0, #0
   54b14:	bcs	54c44 <__assert_fail@plt+0x4208c>
   54b18:	b	54c58 <__assert_fail@plt+0x420a0>
   54b1c:	b	54b24 <__assert_fail@plt+0x41f6c>
   54b20:	b	54b28 <__assert_fail@plt+0x41f70>
   54b24:	b	54b78 <__assert_fail@plt+0x41fc0>
   54b28:	ldr	r0, [fp, #-16]
   54b2c:	cmn	r0, #1
   54b30:	bne	54b78 <__assert_fail@plt+0x41fc0>
   54b34:	b	54b50 <__assert_fail@plt+0x41f98>
   54b38:	ldr	r0, [fp, #-12]
   54b3c:	add	r0, r0, #0
   54b40:	movw	r1, #0
   54b44:	cmp	r1, r0
   54b48:	bcc	54c44 <__assert_fail@plt+0x4208c>
   54b4c:	b	54c58 <__assert_fail@plt+0x420a0>
   54b50:	ldr	r0, [fp, #-12]
   54b54:	movw	r1, #0
   54b58:	cmp	r1, r0
   54b5c:	bcs	54c58 <__assert_fail@plt+0x420a0>
   54b60:	ldr	r0, [fp, #-12]
   54b64:	sub	r0, r0, #1
   54b68:	mvn	r1, #0
   54b6c:	cmp	r1, r0
   54b70:	bcc	54c44 <__assert_fail@plt+0x4208c>
   54b74:	b	54c58 <__assert_fail@plt+0x420a0>
   54b78:	ldr	r0, [fp, #-16]
   54b7c:	movw	r1, #0
   54b80:	udiv	r0, r1, r0
   54b84:	ldr	r1, [fp, #-12]
   54b88:	cmp	r0, r1
   54b8c:	bcc	54c44 <__assert_fail@plt+0x4208c>
   54b90:	b	54c58 <__assert_fail@plt+0x420a0>
   54b94:	ldr	r0, [fp, #-16]
   54b98:	cmp	r0, #0
   54b9c:	bne	54ba4 <__assert_fail@plt+0x41fec>
   54ba0:	b	54c58 <__assert_fail@plt+0x420a0>
   54ba4:	ldr	r0, [fp, #-12]
   54ba8:	cmp	r0, #0
   54bac:	bcs	54c18 <__assert_fail@plt+0x42060>
   54bb0:	b	54bb8 <__assert_fail@plt+0x42000>
   54bb4:	b	54bbc <__assert_fail@plt+0x42004>
   54bb8:	b	54bfc <__assert_fail@plt+0x42044>
   54bbc:	ldr	r0, [fp, #-12]
   54bc0:	cmn	r0, #1
   54bc4:	bne	54bfc <__assert_fail@plt+0x42044>
   54bc8:	b	54be4 <__assert_fail@plt+0x4202c>
   54bcc:	ldr	r0, [fp, #-16]
   54bd0:	add	r0, r0, #0
   54bd4:	movw	r1, #0
   54bd8:	cmp	r1, r0
   54bdc:	bcc	54c44 <__assert_fail@plt+0x4208c>
   54be0:	b	54c58 <__assert_fail@plt+0x420a0>
   54be4:	ldr	r0, [fp, #-16]
   54be8:	sub	r0, r0, #1
   54bec:	mvn	r1, #0
   54bf0:	cmp	r1, r0
   54bf4:	bcc	54c44 <__assert_fail@plt+0x4208c>
   54bf8:	b	54c58 <__assert_fail@plt+0x420a0>
   54bfc:	ldr	r0, [fp, #-12]
   54c00:	movw	r1, #0
   54c04:	udiv	r0, r1, r0
   54c08:	ldr	r1, [fp, #-16]
   54c0c:	cmp	r0, r1
   54c10:	bcc	54c44 <__assert_fail@plt+0x4208c>
   54c14:	b	54c58 <__assert_fail@plt+0x420a0>
   54c18:	ldr	r2, [fp, #-16]
   54c1c:	mvn	r0, #0
   54c20:	mov	r3, #0
   54c24:	str	r0, [sp, #4]
   54c28:	ldr	r1, [sp, #4]
   54c2c:	bl	7540c <__assert_fail@plt+0x62854>
   54c30:	ldr	r2, [fp, #-12]
   54c34:	subs	r0, r0, r2
   54c38:	sbcs	r1, r1, #0
   54c3c:	bcs	54c58 <__assert_fail@plt+0x420a0>
   54c40:	b	54c44 <__assert_fail@plt+0x4208c>
   54c44:	ldr	r0, [fp, #-12]
   54c48:	ldr	r1, [fp, #-16]
   54c4c:	mul	r0, r0, r1
   54c50:	str	r0, [fp, #-20]	; 0xffffffec
   54c54:	b	54c6c <__assert_fail@plt+0x420b4>
   54c58:	ldr	r0, [fp, #-12]
   54c5c:	ldr	r1, [fp, #-16]
   54c60:	mul	r0, r0, r1
   54c64:	str	r0, [fp, #-20]	; 0xffffffec
   54c68:	b	54c84 <__assert_fail@plt+0x420cc>
   54c6c:	bl	128d0 <__errno_location@plt>
   54c70:	movw	r1, #12
   54c74:	str	r1, [r0]
   54c78:	movw	r0, #0
   54c7c:	str	r0, [fp, #-4]
   54c80:	b	54c94 <__assert_fail@plt+0x420dc>
   54c84:	ldr	r0, [fp, #-8]
   54c88:	ldr	r1, [fp, #-20]	; 0xffffffec
   54c8c:	bl	538c8 <__assert_fail@plt+0x40d10>
   54c90:	str	r0, [fp, #-4]
   54c94:	ldr	r0, [fp, #-4]
   54c98:	mov	sp, fp
   54c9c:	pop	{fp, pc}
   54ca0:	svcvc	0x00ffffff
   54ca4:	andhi	r0, r0, r0
   54ca8:			; <UNDEFINED> instruction: 0xffff8000
   54cac:	push	{fp, lr}
   54cb0:	mov	fp, sp
   54cb4:	sub	sp, sp, #24
   54cb8:	str	r0, [fp, #-8]
   54cbc:	str	r1, [sp, #12]
   54cc0:	str	r2, [sp, #8]
   54cc4:	movw	r0, #57564	; 0xe0dc
   54cc8:	movt	r0, #8
   54ccc:	ldr	r0, [r0]
   54cd0:	and	r0, r0, #33554432	; 0x2000000
   54cd4:	ldr	r1, [sp, #8]
   54cd8:	ldrb	r2, [r1, #28]
   54cdc:	and	r2, r2, #239	; 0xef
   54ce0:	orr	r0, r2, r0, lsr #21
   54ce4:	strb	r0, [r1, #28]
   54ce8:	ldr	r0, [sp, #8]
   54cec:	ldrb	r1, [r0, #28]
   54cf0:	and	r1, r1, #127	; 0x7f
   54cf4:	movw	r2, #128	; 0x80
   54cf8:	orr	r1, r1, r2
   54cfc:	strb	r1, [r0, #28]
   54d00:	ldr	r0, [sp, #8]
   54d04:	ldr	r1, [fp, #-8]
   54d08:	ldr	r2, [sp, #12]
   54d0c:	movw	r3, #57564	; 0xe0dc
   54d10:	movt	r3, #8
   54d14:	ldr	r3, [r3]
   54d18:	bl	54d6c <__assert_fail@plt+0x421b4>
   54d1c:	str	r0, [sp, #4]
   54d20:	ldr	r0, [sp, #4]
   54d24:	cmp	r0, #0
   54d28:	bne	54d38 <__assert_fail@plt+0x42180>
   54d2c:	movw	r0, #0
   54d30:	str	r0, [fp, #-4]
   54d34:	b	54d60 <__assert_fail@plt+0x421a8>
   54d38:	ldr	r0, [sp, #4]
   54d3c:	movw	r1, #49864	; 0xc2c8
   54d40:	movt	r1, #7
   54d44:	add	r0, r1, r0, lsl #2
   54d48:	ldr	r0, [r0]
   54d4c:	movw	r1, #49480	; 0xc148
   54d50:	movt	r1, #7
   54d54:	add	r0, r1, r0
   54d58:	bl	12864 <gettext@plt>
   54d5c:	str	r0, [fp, #-4]
   54d60:	ldr	r0, [fp, #-4]
   54d64:	mov	sp, fp
   54d68:	pop	{fp, pc}
   54d6c:	push	{r4, sl, fp, lr}
   54d70:	add	fp, sp, #8
   54d74:	sub	sp, sp, #136	; 0x88
   54d78:	str	r0, [fp, #-16]
   54d7c:	str	r1, [fp, #-20]	; 0xffffffec
   54d80:	str	r2, [fp, #-24]	; 0xffffffe8
   54d84:	str	r3, [fp, #-28]	; 0xffffffe4
   54d88:	mov	r0, #0
   54d8c:	str	r0, [fp, #-32]	; 0xffffffe0
   54d90:	ldr	r1, [fp, #-16]
   54d94:	ldrb	r2, [r1, #28]
   54d98:	and	r2, r2, #247	; 0xf7
   54d9c:	strb	r2, [r1, #28]
   54da0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   54da4:	ldr	r2, [fp, #-16]
   54da8:	str	r1, [r2, #12]
   54dac:	ldr	r1, [fp, #-16]
   54db0:	ldrb	r2, [r1, #28]
   54db4:	and	r2, r2, #191	; 0xbf
   54db8:	strb	r2, [r1, #28]
   54dbc:	ldr	r1, [fp, #-16]
   54dc0:	ldrb	r2, [r1, #28]
   54dc4:	and	r2, r2, #223	; 0xdf
   54dc8:	strb	r2, [r1, #28]
   54dcc:	ldr	r1, [fp, #-16]
   54dd0:	str	r0, [r1, #8]
   54dd4:	ldr	r1, [fp, #-16]
   54dd8:	str	r0, [r1, #24]
   54ddc:	ldr	r0, [fp, #-16]
   54de0:	ldrb	r1, [r0, #28]
   54de4:	and	r1, r1, #254	; 0xfe
   54de8:	strb	r1, [r0, #28]
   54dec:	ldr	r0, [fp, #-16]
   54df0:	ldrb	r1, [r0, #28]
   54df4:	bic	r1, r1, #6
   54df8:	strb	r1, [r0, #28]
   54dfc:	ldr	r0, [fp, #-16]
   54e00:	ldr	r0, [r0]
   54e04:	str	r0, [fp, #-36]	; 0xffffffdc
   54e08:	ldr	r0, [fp, #-16]
   54e0c:	ldr	r0, [r0, #4]
   54e10:	cmp	r0, #160	; 0xa0
   54e14:	bcs	54e60 <__assert_fail@plt+0x422a8>
   54e18:	ldr	r0, [fp, #-16]
   54e1c:	ldr	r0, [r0]
   54e20:	movw	r1, #160	; 0xa0
   54e24:	bl	538c8 <__assert_fail@plt+0x40d10>
   54e28:	str	r0, [fp, #-36]	; 0xffffffdc
   54e2c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   54e30:	movw	r1, #0
   54e34:	cmp	r0, r1
   54e38:	bne	54e48 <__assert_fail@plt+0x42290>
   54e3c:	movw	r0, #12
   54e40:	str	r0, [fp, #-12]
   54e44:	b	55130 <__assert_fail@plt+0x42578>
   54e48:	ldr	r0, [fp, #-16]
   54e4c:	movw	r1, #160	; 0xa0
   54e50:	str	r1, [r0, #4]
   54e54:	ldr	r0, [fp, #-36]	; 0xffffffdc
   54e58:	ldr	r1, [fp, #-16]
   54e5c:	str	r0, [r1]
   54e60:	ldr	r0, [fp, #-16]
   54e64:	movw	r1, #160	; 0xa0
   54e68:	str	r1, [r0, #8]
   54e6c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   54e70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   54e74:	bl	57b20 <__assert_fail@plt+0x44f68>
   54e78:	str	r0, [fp, #-32]	; 0xffffffe0
   54e7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   54e80:	cmp	r0, #0
   54e84:	movw	r0, #0
   54e88:	str	r0, [sp, #20]
   54e8c:	bne	54ef0 <__assert_fail@plt+0x42338>
   54e90:	movw	r0, #10532	; 0x2924
   54e94:	movt	r0, #1
   54e98:	cmp	r0, #0
   54e9c:	bne	54eb8 <__assert_fail@plt+0x42300>
   54ea0:	b	54ea4 <__assert_fail@plt+0x422ec>
   54ea4:	movw	r0, #9620	; 0x2594
   54ea8:	movt	r0, #1
   54eac:	cmp	r0, #0
   54eb0:	beq	54ed0 <__assert_fail@plt+0x42318>
   54eb4:	b	54eb8 <__assert_fail@plt+0x42300>
   54eb8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   54ebc:	add	r0, r0, #136	; 0x88
   54ec0:	movw	r1, #0
   54ec4:	bl	125e8 <pthread_mutex_init@plt>
   54ec8:	str	r0, [sp, #16]
   54ecc:	b	54edc <__assert_fail@plt+0x42324>
   54ed0:	movw	r0, #0
   54ed4:	str	r0, [sp, #16]
   54ed8:	b	54edc <__assert_fail@plt+0x42324>
   54edc:	ldr	r0, [sp, #16]
   54ee0:	cmp	r0, #0
   54ee4:	movw	r0, #0
   54ee8:	movne	r0, #1
   54eec:	str	r0, [sp, #20]
   54ef0:	ldr	r0, [sp, #20]
   54ef4:	tst	r0, #1
   54ef8:	beq	54f04 <__assert_fail@plt+0x4234c>
   54efc:	movw	r0, #12
   54f00:	str	r0, [fp, #-32]	; 0xffffffe0
   54f04:	ldr	r0, [fp, #-32]	; 0xffffffe0
   54f08:	cmp	r0, #0
   54f0c:	beq	54f38 <__assert_fail@plt+0x42380>
   54f10:	ldr	r0, [fp, #-36]	; 0xffffffdc
   54f14:	bl	55d70 <__assert_fail@plt+0x431b8>
   54f18:	ldr	r0, [fp, #-16]
   54f1c:	movw	r1, #0
   54f20:	str	r1, [r0]
   54f24:	ldr	r0, [fp, #-16]
   54f28:	str	r1, [r0, #4]
   54f2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   54f30:	str	r0, [fp, #-12]
   54f34:	b	55130 <__assert_fail@plt+0x42578>
   54f38:	ldr	r1, [fp, #-20]	; 0xffffffec
   54f3c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   54f40:	ldr	r0, [fp, #-16]
   54f44:	ldr	r3, [r0, #20]
   54f48:	ldr	r0, [fp, #-28]	; 0xffffffe4
   54f4c:	and	r0, r0, #4194304	; 0x400000
   54f50:	cmp	r0, #0
   54f54:	movw	r0, #0
   54f58:	movne	r0, #1
   54f5c:	ldr	ip, [fp, #-36]	; 0xffffffdc
   54f60:	add	lr, sp, #24
   54f64:	str	r0, [sp, #12]
   54f68:	mov	r0, lr
   54f6c:	ldr	lr, [sp, #12]
   54f70:	and	r4, lr, #1
   54f74:	str	r4, [sp]
   54f78:	str	ip, [sp, #4]
   54f7c:	bl	5812c <__assert_fail@plt+0x45574>
   54f80:	str	r0, [fp, #-32]	; 0xffffffe0
   54f84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   54f88:	cmp	r0, #0
   54f8c:	beq	55008 <__assert_fail@plt+0x42450>
   54f90:	b	54f94 <__assert_fail@plt+0x423dc>
   54f94:	ldr	r0, [fp, #-16]
   54f98:	bl	58340 <__assert_fail@plt+0x45788>
   54f9c:	add	r0, sp, #24
   54fa0:	bl	583d8 <__assert_fail@plt+0x45820>
   54fa4:	movw	r0, #10532	; 0x2924
   54fa8:	movt	r0, #1
   54fac:	cmp	r0, #0
   54fb0:	bne	54fcc <__assert_fail@plt+0x42414>
   54fb4:	b	54fb8 <__assert_fail@plt+0x42400>
   54fb8:	movw	r0, #9620	; 0x2594
   54fbc:	movt	r0, #1
   54fc0:	cmp	r0, #0
   54fc4:	beq	54fdc <__assert_fail@plt+0x42424>
   54fc8:	b	54fcc <__assert_fail@plt+0x42414>
   54fcc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   54fd0:	add	r0, r0, #136	; 0x88
   54fd4:	bl	12510 <pthread_mutex_destroy@plt>
   54fd8:	b	54fe0 <__assert_fail@plt+0x42428>
   54fdc:	b	54fe0 <__assert_fail@plt+0x42428>
   54fe0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   54fe4:	bl	55d70 <__assert_fail@plt+0x431b8>
   54fe8:	ldr	r0, [fp, #-16]
   54fec:	movw	r1, #0
   54ff0:	str	r1, [r0]
   54ff4:	ldr	r0, [fp, #-16]
   54ff8:	str	r1, [r0, #4]
   54ffc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   55000:	str	r0, [fp, #-12]
   55004:	b	55130 <__assert_fail@plt+0x42578>
   55008:	ldr	r0, [fp, #-16]
   5500c:	movw	r1, #0
   55010:	str	r1, [r0, #24]
   55014:	ldr	r1, [fp, #-16]
   55018:	ldr	r2, [fp, #-28]	; 0xffffffe4
   5501c:	add	r0, sp, #24
   55020:	sub	r3, fp, #32
   55024:	bl	58424 <__assert_fail@plt+0x4586c>
   55028:	ldr	r1, [fp, #-36]	; 0xffffffdc
   5502c:	str	r0, [r1, #52]	; 0x34
   55030:	ldr	r0, [fp, #-36]	; 0xffffffdc
   55034:	ldr	r0, [r0, #52]	; 0x34
   55038:	movw	r1, #0
   5503c:	cmp	r0, r1
   55040:	bne	55048 <__assert_fail@plt+0x42490>
   55044:	b	54f94 <__assert_fail@plt+0x423dc>
   55048:	ldr	r0, [fp, #-16]
   5504c:	bl	585a0 <__assert_fail@plt+0x459e8>
   55050:	str	r0, [fp, #-32]	; 0xffffffe0
   55054:	ldr	r0, [fp, #-32]	; 0xffffffe0
   55058:	cmp	r0, #0
   5505c:	beq	55064 <__assert_fail@plt+0x424ac>
   55060:	b	54f94 <__assert_fail@plt+0x423dc>
   55064:	ldr	r0, [fp, #-36]	; 0xffffffdc
   55068:	ldrb	r0, [r0, #88]	; 0x58
   5506c:	ubfx	r0, r0, #2, #1
   55070:	and	r0, r0, #255	; 0xff
   55074:	cmp	r0, #0
   55078:	beq	550a8 <__assert_fail@plt+0x424f0>
   5507c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   55080:	and	r0, r0, #4194304	; 0x400000
   55084:	cmp	r0, #0
   55088:	bne	550a8 <__assert_fail@plt+0x424f0>
   5508c:	ldr	r0, [fp, #-16]
   55090:	ldr	r0, [r0, #20]
   55094:	movw	r1, #0
   55098:	cmp	r0, r1
   5509c:	bne	550a8 <__assert_fail@plt+0x424f0>
   550a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   550a4:	bl	58974 <__assert_fail@plt+0x45dbc>
   550a8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   550ac:	bl	58c80 <__assert_fail@plt+0x460c8>
   550b0:	str	r0, [fp, #-32]	; 0xffffffe0
   550b4:	ldr	r0, [fp, #-16]
   550b8:	bl	58340 <__assert_fail@plt+0x45788>
   550bc:	add	r0, sp, #24
   550c0:	bl	583d8 <__assert_fail@plt+0x45820>
   550c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   550c8:	cmp	r0, #0
   550cc:	beq	55128 <__assert_fail@plt+0x42570>
   550d0:	movw	r0, #10532	; 0x2924
   550d4:	movt	r0, #1
   550d8:	cmp	r0, #0
   550dc:	bne	550f8 <__assert_fail@plt+0x42540>
   550e0:	b	550e4 <__assert_fail@plt+0x4252c>
   550e4:	movw	r0, #9620	; 0x2594
   550e8:	movt	r0, #1
   550ec:	cmp	r0, #0
   550f0:	beq	55108 <__assert_fail@plt+0x42550>
   550f4:	b	550f8 <__assert_fail@plt+0x42540>
   550f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   550fc:	add	r0, r0, #136	; 0x88
   55100:	bl	12510 <pthread_mutex_destroy@plt>
   55104:	b	5510c <__assert_fail@plt+0x42554>
   55108:	b	5510c <__assert_fail@plt+0x42554>
   5510c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   55110:	bl	55d70 <__assert_fail@plt+0x431b8>
   55114:	ldr	r0, [fp, #-16]
   55118:	movw	r1, #0
   5511c:	str	r1, [r0]
   55120:	ldr	r0, [fp, #-16]
   55124:	str	r1, [r0, #4]
   55128:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5512c:	str	r0, [fp, #-12]
   55130:	ldr	r0, [fp, #-12]
   55134:	sub	sp, fp, #8
   55138:	pop	{r4, sl, fp, pc}
   5513c:	sub	sp, sp, #8
   55140:	str	r0, [sp, #4]
   55144:	movw	r0, #57564	; 0xe0dc
   55148:	movt	r0, #8
   5514c:	ldr	r1, [r0]
   55150:	str	r1, [sp]
   55154:	ldr	r1, [sp, #4]
   55158:	str	r1, [r0]
   5515c:	ldr	r0, [sp]
   55160:	add	sp, sp, #8
   55164:	bx	lr
   55168:	push	{fp, lr}
   5516c:	mov	fp, sp
   55170:	sub	sp, sp, #16
   55174:	str	r0, [fp, #-4]
   55178:	ldr	r0, [fp, #-4]
   5517c:	ldr	r0, [r0]
   55180:	str	r0, [sp, #8]
   55184:	ldr	r0, [fp, #-4]
   55188:	ldr	r0, [r0, #16]
   5518c:	str	r0, [sp, #4]
   55190:	ldr	r0, [sp, #4]
   55194:	movw	r1, #0
   55198:	and	r1, r1, #255	; 0xff
   5519c:	movw	r2, #256	; 0x100
   551a0:	bl	12900 <memset@plt>
   551a4:	ldr	r0, [fp, #-4]
   551a8:	ldr	r1, [sp, #8]
   551ac:	ldr	r1, [r1, #36]	; 0x24
   551b0:	ldr	r2, [sp, #4]
   551b4:	bl	55260 <__assert_fail@plt+0x426a8>
   551b8:	ldr	r0, [sp, #8]
   551bc:	ldr	r0, [r0, #36]	; 0x24
   551c0:	ldr	r1, [sp, #8]
   551c4:	ldr	r1, [r1, #40]	; 0x28
   551c8:	cmp	r0, r1
   551cc:	beq	551e4 <__assert_fail@plt+0x4262c>
   551d0:	ldr	r0, [fp, #-4]
   551d4:	ldr	r1, [sp, #8]
   551d8:	ldr	r1, [r1, #40]	; 0x28
   551dc:	ldr	r2, [sp, #4]
   551e0:	bl	55260 <__assert_fail@plt+0x426a8>
   551e4:	ldr	r0, [sp, #8]
   551e8:	ldr	r0, [r0, #36]	; 0x24
   551ec:	ldr	r1, [sp, #8]
   551f0:	ldr	r1, [r1, #44]	; 0x2c
   551f4:	cmp	r0, r1
   551f8:	beq	55210 <__assert_fail@plt+0x42658>
   551fc:	ldr	r0, [fp, #-4]
   55200:	ldr	r1, [sp, #8]
   55204:	ldr	r1, [r1, #44]	; 0x2c
   55208:	ldr	r2, [sp, #4]
   5520c:	bl	55260 <__assert_fail@plt+0x426a8>
   55210:	ldr	r0, [sp, #8]
   55214:	ldr	r0, [r0, #36]	; 0x24
   55218:	ldr	r1, [sp, #8]
   5521c:	ldr	r1, [r1, #48]	; 0x30
   55220:	cmp	r0, r1
   55224:	beq	5523c <__assert_fail@plt+0x42684>
   55228:	ldr	r0, [fp, #-4]
   5522c:	ldr	r1, [sp, #8]
   55230:	ldr	r1, [r1, #48]	; 0x30
   55234:	ldr	r2, [sp, #4]
   55238:	bl	55260 <__assert_fail@plt+0x426a8>
   5523c:	ldr	r0, [fp, #-4]
   55240:	ldrb	r1, [r0, #28]
   55244:	bic	r1, r1, #8
   55248:	movw	r2, #8
   5524c:	orr	r1, r1, r2
   55250:	strb	r1, [r0, #28]
   55254:	movw	r0, #0
   55258:	mov	sp, fp
   5525c:	pop	{fp, pc}
   55260:	push	{r4, r5, fp, lr}
   55264:	add	fp, sp, #8
   55268:	sub	sp, sp, #504	; 0x1f8
   5526c:	str	r0, [fp, #-84]	; 0xffffffac
   55270:	str	r1, [fp, #-88]	; 0xffffffa8
   55274:	str	r2, [fp, #-92]	; 0xffffffa4
   55278:	ldr	r0, [fp, #-84]	; 0xffffffac
   5527c:	ldr	r0, [r0]
   55280:	str	r0, [fp, #-96]	; 0xffffffa0
   55284:	ldr	r0, [fp, #-96]	; 0xffffffa0
   55288:	ldr	r0, [r0, #92]	; 0x5c
   5528c:	cmp	r0, #1
   55290:	movw	r0, #0
   55294:	str	r0, [sp, #60]	; 0x3c
   55298:	bne	552b8 <__assert_fail@plt+0x42700>
   5529c:	ldr	r0, [fp, #-84]	; 0xffffffac
   552a0:	ldr	r0, [r0, #12]
   552a4:	and	r0, r0, #4194304	; 0x400000
   552a8:	cmp	r0, #0
   552ac:	movw	r0, #0
   552b0:	movne	r0, #1
   552b4:	str	r0, [sp, #60]	; 0x3c
   552b8:	ldr	r0, [sp, #60]	; 0x3c
   552bc:	and	r0, r0, #1
   552c0:	strb	r0, [fp, #-101]	; 0xffffff9b
   552c4:	movw	r0, #0
   552c8:	str	r0, [fp, #-100]	; 0xffffff9c
   552cc:	ldr	r0, [fp, #-100]	; 0xffffff9c
   552d0:	ldr	r1, [fp, #-88]	; 0xffffffa8
   552d4:	ldr	r1, [r1, #8]
   552d8:	cmp	r0, r1
   552dc:	bge	559dc <__assert_fail@plt+0x42e24>
   552e0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   552e4:	ldr	r0, [r0, #12]
   552e8:	ldr	r1, [fp, #-100]	; 0xffffff9c
   552ec:	ldr	r0, [r0, r1, lsl #2]
   552f0:	str	r0, [fp, #-108]	; 0xffffff94
   552f4:	ldr	r0, [fp, #-96]	; 0xffffffa0
   552f8:	ldr	r0, [r0]
   552fc:	ldr	r1, [fp, #-108]	; 0xffffff94
   55300:	add	r0, r0, r1, lsl #3
   55304:	ldr	r0, [r0, #4]
   55308:	and	r0, r0, #255	; 0xff
   5530c:	str	r0, [fp, #-112]	; 0xffffff90
   55310:	ldr	r0, [fp, #-112]	; 0xffffff90
   55314:	cmp	r0, #1
   55318:	bne	5557c <__assert_fail@plt+0x429c4>
   5531c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   55320:	ldrb	r1, [fp, #-101]	; 0xffffff9b
   55324:	ldr	r2, [fp, #-96]	; 0xffffffa0
   55328:	ldr	r2, [r2]
   5532c:	ldr	r3, [fp, #-108]	; 0xffffff94
   55330:	add	r2, r2, r3, lsl #3
   55334:	ldrb	r2, [r2]
   55338:	str	r0, [fp, #-72]	; 0xffffffb8
   5533c:	and	r0, r1, #1
   55340:	strb	r0, [fp, #-73]	; 0xffffffb7
   55344:	str	r2, [fp, #-80]	; 0xffffffb0
   55348:	ldr	r0, [fp, #-72]	; 0xffffffb8
   5534c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   55350:	add	r0, r0, r1
   55354:	movw	r1, #1
   55358:	strb	r1, [r0]
   5535c:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   55360:	tst	r0, #1
   55364:	beq	5538c <__assert_fail@plt+0x427d4>
   55368:	ldr	r0, [fp, #-72]	; 0xffffffb8
   5536c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   55370:	str	r0, [sp, #56]	; 0x38
   55374:	mov	r0, r1
   55378:	bl	125dc <tolower@plt>
   5537c:	ldr	r1, [sp, #56]	; 0x38
   55380:	add	r0, r1, r0
   55384:	movw	r1, #1
   55388:	strb	r1, [r0]
   5538c:	ldr	r0, [fp, #-84]	; 0xffffffac
   55390:	ldr	r0, [r0, #12]
   55394:	and	r0, r0, #4194304	; 0x400000
   55398:	cmp	r0, #0
   5539c:	beq	55578 <__assert_fail@plt+0x429c0>
   553a0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   553a4:	ldr	r0, [r0, #92]	; 0x5c
   553a8:	cmp	r0, #1
   553ac:	ble	55578 <__assert_fail@plt+0x429c0>
   553b0:	sub	r0, fp, #128	; 0x80
   553b4:	str	r0, [fp, #-132]	; 0xffffff7c
   553b8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   553bc:	ldr	r0, [r0]
   553c0:	ldr	r1, [fp, #-108]	; 0xffffff94
   553c4:	add	r0, r0, r1, lsl #3
   553c8:	ldrb	r0, [r0]
   553cc:	ldr	r1, [fp, #-132]	; 0xffffff7c
   553d0:	add	r2, r1, #1
   553d4:	str	r2, [fp, #-132]	; 0xffffff7c
   553d8:	strb	r0, [r1]
   553dc:	ldr	r0, [fp, #-108]	; 0xffffff94
   553e0:	add	r0, r0, #1
   553e4:	str	r0, [fp, #-108]	; 0xffffff94
   553e8:	ldr	r1, [fp, #-96]	; 0xffffffa0
   553ec:	ldr	r1, [r1, #8]
   553f0:	cmp	r0, r1
   553f4:	movw	r0, #0
   553f8:	str	r0, [sp, #52]	; 0x34
   553fc:	bcs	55454 <__assert_fail@plt+0x4289c>
   55400:	ldr	r0, [fp, #-96]	; 0xffffffa0
   55404:	ldr	r0, [r0]
   55408:	ldr	r1, [fp, #-108]	; 0xffffff94
   5540c:	add	r0, r0, r1, lsl #3
   55410:	ldr	r0, [r0, #4]
   55414:	and	r0, r0, #255	; 0xff
   55418:	cmp	r0, #1
   5541c:	movw	r0, #0
   55420:	str	r0, [sp, #52]	; 0x34
   55424:	bne	55454 <__assert_fail@plt+0x4289c>
   55428:	ldr	r0, [fp, #-96]	; 0xffffffa0
   5542c:	ldr	r0, [r0]
   55430:	ldr	r1, [fp, #-108]	; 0xffffff94
   55434:	add	r0, r0, r1, lsl #3
   55438:	ldr	r0, [r0, #4]
   5543c:	lsr	r0, r0, #21
   55440:	and	r0, r0, #1
   55444:	cmp	r0, #0
   55448:	movw	r0, #0
   5544c:	movne	r0, #1
   55450:	str	r0, [sp, #52]	; 0x34
   55454:	ldr	r0, [sp, #52]	; 0x34
   55458:	tst	r0, #1
   5545c:	beq	55488 <__assert_fail@plt+0x428d0>
   55460:	ldr	r0, [fp, #-96]	; 0xffffffa0
   55464:	ldr	r0, [r0]
   55468:	ldr	r1, [fp, #-108]	; 0xffffff94
   5546c:	add	r0, r0, r1, lsl #3
   55470:	ldrb	r0, [r0]
   55474:	ldr	r1, [fp, #-132]	; 0xffffff7c
   55478:	add	r2, r1, #1
   5547c:	str	r2, [fp, #-132]	; 0xffffff7c
   55480:	strb	r0, [r1]
   55484:	b	553dc <__assert_fail@plt+0x42824>
   55488:	sub	r0, fp, #128	; 0x80
   5548c:	sub	r1, fp, #144	; 0x90
   55490:	mov	r2, r1
   55494:	str	r0, [sp, #48]	; 0x30
   55498:	mov	r0, r2
   5549c:	movw	r2, #0
   554a0:	and	r2, r2, #255	; 0xff
   554a4:	str	r1, [sp, #44]	; 0x2c
   554a8:	mov	r1, r2
   554ac:	movw	r2, #8
   554b0:	bl	12900 <memset@plt>
   554b4:	ldr	r0, [fp, #-132]	; 0xffffff7c
   554b8:	ldr	r1, [sp, #48]	; 0x30
   554bc:	sub	r2, r0, r1
   554c0:	sub	r0, fp, #136	; 0x88
   554c4:	ldr	r3, [sp, #44]	; 0x2c
   554c8:	bl	52860 <__assert_fail@plt+0x3fca8>
   554cc:	sub	r1, fp, #128	; 0x80
   554d0:	ldr	r2, [fp, #-132]	; 0xffffff7c
   554d4:	sub	r1, r2, r1
   554d8:	cmp	r0, r1
   554dc:	bne	55574 <__assert_fail@plt+0x429bc>
   554e0:	sub	r0, fp, #128	; 0x80
   554e4:	ldr	r1, [fp, #-136]	; 0xffffff78
   554e8:	str	r0, [sp, #40]	; 0x28
   554ec:	mov	r0, r1
   554f0:	bl	125f4 <towlower@plt>
   554f4:	ldr	r1, [sp, #40]	; 0x28
   554f8:	str	r0, [sp, #36]	; 0x24
   554fc:	mov	r0, r1
   55500:	ldr	r1, [sp, #36]	; 0x24
   55504:	sub	r2, fp, #144	; 0x90
   55508:	bl	1248c <wcrtomb@plt>
   5550c:	cmn	r0, #1
   55510:	beq	55574 <__assert_fail@plt+0x429bc>
   55514:	ldr	r0, [fp, #-92]	; 0xffffffa4
   55518:	ldrb	r1, [fp, #-128]	; 0xffffff80
   5551c:	str	r0, [fp, #-60]	; 0xffffffc4
   55520:	movw	r0, #0
   55524:	strb	r0, [fp, #-61]	; 0xffffffc3
   55528:	str	r1, [fp, #-68]	; 0xffffffbc
   5552c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   55530:	ldr	r1, [fp, #-68]	; 0xffffffbc
   55534:	add	r0, r0, r1
   55538:	movw	r1, #1
   5553c:	strb	r1, [r0]
   55540:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   55544:	tst	r0, #1
   55548:	beq	55570 <__assert_fail@plt+0x429b8>
   5554c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   55550:	ldr	r1, [fp, #-68]	; 0xffffffbc
   55554:	str	r0, [sp, #32]
   55558:	mov	r0, r1
   5555c:	bl	125dc <tolower@plt>
   55560:	ldr	r1, [sp, #32]
   55564:	add	r0, r1, r0
   55568:	movw	r1, #1
   5556c:	strb	r1, [r0]
   55570:	b	55574 <__assert_fail@plt+0x429bc>
   55574:	b	55578 <__assert_fail@plt+0x429c0>
   55578:	b	559c8 <__assert_fail@plt+0x42e10>
   5557c:	ldr	r0, [fp, #-112]	; 0xffffff90
   55580:	cmp	r0, #3
   55584:	bne	5568c <__assert_fail@plt+0x42ad4>
   55588:	movw	r0, #0
   5558c:	str	r0, [fp, #-148]	; 0xffffff6c
   55590:	str	r0, [fp, #-152]	; 0xffffff68
   55594:	ldr	r0, [fp, #-148]	; 0xffffff6c
   55598:	cmp	r0, #8
   5559c:	bge	55688 <__assert_fail@plt+0x42ad0>
   555a0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   555a4:	ldr	r0, [r0]
   555a8:	ldr	r1, [fp, #-108]	; 0xffffff94
   555ac:	ldr	r0, [r0, r1, lsl #3]
   555b0:	ldr	r1, [fp, #-148]	; 0xffffff6c
   555b4:	add	r0, r0, r1, lsl #2
   555b8:	ldr	r0, [r0]
   555bc:	str	r0, [fp, #-160]	; 0xffffff60
   555c0:	movw	r0, #0
   555c4:	str	r0, [fp, #-156]	; 0xffffff64
   555c8:	ldr	r0, [fp, #-156]	; 0xffffff64
   555cc:	cmp	r0, #32
   555d0:	bge	55674 <__assert_fail@plt+0x42abc>
   555d4:	ldr	r0, [fp, #-160]	; 0xffffff60
   555d8:	ldr	r1, [fp, #-156]	; 0xffffff64
   555dc:	movw	r2, #1
   555e0:	lsl	r1, r2, r1
   555e4:	and	r0, r0, r1
   555e8:	cmp	r0, #0
   555ec:	beq	55654 <__assert_fail@plt+0x42a9c>
   555f0:	ldr	r0, [fp, #-92]	; 0xffffffa4
   555f4:	ldrb	r1, [fp, #-101]	; 0xffffff9b
   555f8:	ldr	r2, [fp, #-152]	; 0xffffff68
   555fc:	str	r0, [fp, #-48]	; 0xffffffd0
   55600:	and	r0, r1, #1
   55604:	strb	r0, [fp, #-49]	; 0xffffffcf
   55608:	str	r2, [fp, #-56]	; 0xffffffc8
   5560c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   55610:	ldr	r1, [fp, #-56]	; 0xffffffc8
   55614:	add	r0, r0, r1
   55618:	movw	r1, #1
   5561c:	strb	r1, [r0]
   55620:	ldrb	r0, [fp, #-49]	; 0xffffffcf
   55624:	tst	r0, #1
   55628:	beq	55650 <__assert_fail@plt+0x42a98>
   5562c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   55630:	ldr	r1, [fp, #-56]	; 0xffffffc8
   55634:	str	r0, [sp, #28]
   55638:	mov	r0, r1
   5563c:	bl	125dc <tolower@plt>
   55640:	ldr	r1, [sp, #28]
   55644:	add	r0, r1, r0
   55648:	movw	r1, #1
   5564c:	strb	r1, [r0]
   55650:	b	55654 <__assert_fail@plt+0x42a9c>
   55654:	b	55658 <__assert_fail@plt+0x42aa0>
   55658:	ldr	r0, [fp, #-156]	; 0xffffff64
   5565c:	add	r0, r0, #1
   55660:	str	r0, [fp, #-156]	; 0xffffff64
   55664:	ldr	r0, [fp, #-152]	; 0xffffff68
   55668:	add	r0, r0, #1
   5566c:	str	r0, [fp, #-152]	; 0xffffff68
   55670:	b	555c8 <__assert_fail@plt+0x42a10>
   55674:	b	55678 <__assert_fail@plt+0x42ac0>
   55678:	ldr	r0, [fp, #-148]	; 0xffffff6c
   5567c:	add	r0, r0, #1
   55680:	str	r0, [fp, #-148]	; 0xffffff6c
   55684:	b	55594 <__assert_fail@plt+0x429dc>
   55688:	b	559c4 <__assert_fail@plt+0x42e0c>
   5568c:	ldr	r0, [fp, #-112]	; 0xffffff90
   55690:	cmp	r0, #6
   55694:	bne	5595c <__assert_fail@plt+0x42da4>
   55698:	ldr	r0, [fp, #-96]	; 0xffffffa0
   5569c:	ldr	r0, [r0]
   556a0:	ldr	r1, [fp, #-108]	; 0xffffff94
   556a4:	add	r0, r0, r1, lsl #3
   556a8:	ldr	r0, [r0]
   556ac:	str	r0, [fp, #-164]	; 0xffffff5c
   556b0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   556b4:	ldr	r0, [r0, #92]	; 0x5c
   556b8:	cmp	r0, #1
   556bc:	ble	557c0 <__assert_fail@plt+0x42c08>
   556c0:	ldr	r0, [fp, #-164]	; 0xffffff5c
   556c4:	ldr	r0, [r0, #36]	; 0x24
   556c8:	cmp	r0, #0
   556cc:	bne	556f8 <__assert_fail@plt+0x42b40>
   556d0:	ldr	r0, [fp, #-164]	; 0xffffff5c
   556d4:	ldrb	r0, [r0, #16]
   556d8:	and	r0, r0, #1
   556dc:	and	r0, r0, #255	; 0xff
   556e0:	cmp	r0, #0
   556e4:	bne	556f8 <__assert_fail@plt+0x42b40>
   556e8:	ldr	r0, [fp, #-164]	; 0xffffff5c
   556ec:	ldr	r0, [r0, #32]
   556f0:	cmp	r0, #0
   556f4:	beq	557c0 <__assert_fail@plt+0x42c08>
   556f8:	movw	r0, #0
   556fc:	strb	r0, [fp, #-169]	; 0xffffff57
   55700:	sub	r0, fp, #180	; 0xb4
   55704:	mov	r1, r0
   55708:	str	r0, [sp, #24]
   5570c:	mov	r0, r1
   55710:	movw	r1, #0
   55714:	and	r1, r1, #255	; 0xff
   55718:	movw	r2, #8
   5571c:	bl	12900 <memset@plt>
   55720:	movw	r0, #0
   55724:	sub	r1, fp, #169	; 0xa9
   55728:	movw	r2, #1
   5572c:	ldr	r3, [sp, #24]
   55730:	bl	52860 <__assert_fail@plt+0x3fca8>
   55734:	cmn	r0, #2
   55738:	bne	5579c <__assert_fail@plt+0x42be4>
   5573c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   55740:	ldrb	r1, [fp, #-169]	; 0xffffff57
   55744:	str	r0, [fp, #-36]	; 0xffffffdc
   55748:	movw	r0, #0
   5574c:	strb	r0, [fp, #-37]	; 0xffffffdb
   55750:	str	r1, [fp, #-44]	; 0xffffffd4
   55754:	ldr	r0, [fp, #-36]	; 0xffffffdc
   55758:	ldr	r1, [fp, #-44]	; 0xffffffd4
   5575c:	add	r0, r0, r1
   55760:	movw	r1, #1
   55764:	strb	r1, [r0]
   55768:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   5576c:	tst	r0, #1
   55770:	beq	55798 <__assert_fail@plt+0x42be0>
   55774:	ldr	r0, [fp, #-36]	; 0xffffffdc
   55778:	ldr	r1, [fp, #-44]	; 0xffffffd4
   5577c:	str	r0, [sp, #20]
   55780:	mov	r0, r1
   55784:	bl	125dc <tolower@plt>
   55788:	ldr	r1, [sp, #20]
   5578c:	add	r0, r1, r0
   55790:	movw	r1, #1
   55794:	strb	r1, [r0]
   55798:	b	5579c <__assert_fail@plt+0x42be4>
   5579c:	b	557a0 <__assert_fail@plt+0x42be8>
   557a0:	ldrb	r0, [fp, #-169]	; 0xffffff57
   557a4:	movw	r1, #1
   557a8:	add	r0, r0, r1
   557ac:	strb	r0, [fp, #-169]	; 0xffffff57
   557b0:	and	r0, r0, #255	; 0xff
   557b4:	cmp	r0, #0
   557b8:	bne	55700 <__assert_fail@plt+0x42b48>
   557bc:	b	55958 <__assert_fail@plt+0x42da0>
   557c0:	movw	r0, #0
   557c4:	str	r0, [fp, #-168]	; 0xffffff58
   557c8:	ldr	r0, [fp, #-168]	; 0xffffff58
   557cc:	ldr	r1, [fp, #-164]	; 0xffffff5c
   557d0:	ldr	r1, [r1, #20]
   557d4:	cmp	r0, r1
   557d8:	bge	55954 <__assert_fail@plt+0x42d9c>
   557dc:	mov	r0, #0
   557e0:	str	r0, [sp, #68]	; 0x44
   557e4:	str	r0, [sp, #64]	; 0x40
   557e8:	add	r0, sp, #76	; 0x4c
   557ec:	ldr	r1, [fp, #-164]	; 0xffffff5c
   557f0:	ldr	r1, [r1]
   557f4:	ldr	r2, [fp, #-168]	; 0xffffff58
   557f8:	add	r1, r1, r2, lsl #2
   557fc:	ldr	r1, [r1]
   55800:	add	r2, sp, #64	; 0x40
   55804:	bl	1248c <wcrtomb@plt>
   55808:	cmn	r0, #1
   5580c:	beq	55874 <__assert_fail@plt+0x42cbc>
   55810:	ldr	r0, [fp, #-92]	; 0xffffffa4
   55814:	ldrb	r1, [fp, #-101]	; 0xffffff9b
   55818:	ldrb	r2, [sp, #76]	; 0x4c
   5581c:	str	r0, [fp, #-24]	; 0xffffffe8
   55820:	and	r0, r1, #1
   55824:	strb	r0, [fp, #-25]	; 0xffffffe7
   55828:	str	r2, [fp, #-32]	; 0xffffffe0
   5582c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   55830:	ldr	r1, [fp, #-32]	; 0xffffffe0
   55834:	add	r0, r0, r1
   55838:	movw	r1, #1
   5583c:	strb	r1, [r0]
   55840:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   55844:	tst	r0, #1
   55848:	beq	55870 <__assert_fail@plt+0x42cb8>
   5584c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   55850:	ldr	r1, [fp, #-32]	; 0xffffffe0
   55854:	str	r0, [sp, #16]
   55858:	mov	r0, r1
   5585c:	bl	125dc <tolower@plt>
   55860:	ldr	r1, [sp, #16]
   55864:	add	r0, r1, r0
   55868:	movw	r1, #1
   5586c:	strb	r1, [r0]
   55870:	b	55874 <__assert_fail@plt+0x42cbc>
   55874:	ldr	r0, [fp, #-84]	; 0xffffffac
   55878:	ldr	r0, [r0, #12]
   5587c:	and	r0, r0, #4194304	; 0x400000
   55880:	cmp	r0, #0
   55884:	beq	55940 <__assert_fail@plt+0x42d88>
   55888:	ldr	r0, [fp, #-96]	; 0xffffffa0
   5588c:	ldr	r0, [r0, #92]	; 0x5c
   55890:	cmp	r0, #1
   55894:	ble	55940 <__assert_fail@plt+0x42d88>
   55898:	add	r0, sp, #76	; 0x4c
   5589c:	ldr	r1, [fp, #-164]	; 0xffffff5c
   558a0:	ldr	r1, [r1]
   558a4:	ldr	r2, [fp, #-168]	; 0xffffff58
   558a8:	add	r1, r1, r2, lsl #2
   558ac:	ldr	r1, [r1]
   558b0:	str	r0, [sp, #12]
   558b4:	mov	r0, r1
   558b8:	bl	125f4 <towlower@plt>
   558bc:	ldr	r1, [sp, #12]
   558c0:	str	r0, [sp, #8]
   558c4:	mov	r0, r1
   558c8:	ldr	r1, [sp, #8]
   558cc:	add	r2, sp, #64	; 0x40
   558d0:	bl	1248c <wcrtomb@plt>
   558d4:	cmn	r0, #1
   558d8:	beq	5593c <__assert_fail@plt+0x42d84>
   558dc:	ldr	r0, [fp, #-92]	; 0xffffffa4
   558e0:	ldrb	r1, [sp, #76]	; 0x4c
   558e4:	str	r0, [fp, #-12]
   558e8:	movw	r0, #0
   558ec:	strb	r0, [fp, #-13]
   558f0:	str	r1, [fp, #-20]	; 0xffffffec
   558f4:	ldr	r0, [fp, #-12]
   558f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   558fc:	add	r0, r0, r1
   55900:	movw	r1, #1
   55904:	strb	r1, [r0]
   55908:	ldrb	r0, [fp, #-13]
   5590c:	tst	r0, #1
   55910:	beq	55938 <__assert_fail@plt+0x42d80>
   55914:	ldr	r0, [fp, #-12]
   55918:	ldr	r1, [fp, #-20]	; 0xffffffec
   5591c:	str	r0, [sp, #4]
   55920:	mov	r0, r1
   55924:	bl	125dc <tolower@plt>
   55928:	ldr	r1, [sp, #4]
   5592c:	add	r0, r1, r0
   55930:	movw	r1, #1
   55934:	strb	r1, [r0]
   55938:	b	5593c <__assert_fail@plt+0x42d84>
   5593c:	b	55940 <__assert_fail@plt+0x42d88>
   55940:	b	55944 <__assert_fail@plt+0x42d8c>
   55944:	ldr	r0, [fp, #-168]	; 0xffffff58
   55948:	add	r0, r0, #1
   5594c:	str	r0, [fp, #-168]	; 0xffffff58
   55950:	b	557c8 <__assert_fail@plt+0x42c10>
   55954:	b	55958 <__assert_fail@plt+0x42da0>
   55958:	b	559c0 <__assert_fail@plt+0x42e08>
   5595c:	ldr	r0, [fp, #-112]	; 0xffffff90
   55960:	cmp	r0, #5
   55964:	beq	55980 <__assert_fail@plt+0x42dc8>
   55968:	ldr	r0, [fp, #-112]	; 0xffffff90
   5596c:	cmp	r0, #7
   55970:	beq	55980 <__assert_fail@plt+0x42dc8>
   55974:	ldr	r0, [fp, #-112]	; 0xffffff90
   55978:	cmp	r0, #2
   5597c:	bne	559bc <__assert_fail@plt+0x42e04>
   55980:	ldr	r0, [fp, #-92]	; 0xffffffa4
   55984:	movw	r1, #1
   55988:	and	r1, r1, #255	; 0xff
   5598c:	movw	r2, #256	; 0x100
   55990:	bl	12900 <memset@plt>
   55994:	ldr	r0, [fp, #-112]	; 0xffffff90
   55998:	cmp	r0, #2
   5599c:	bne	559b8 <__assert_fail@plt+0x42e00>
   559a0:	ldr	r0, [fp, #-84]	; 0xffffffac
   559a4:	ldrb	r1, [r0, #28]
   559a8:	bic	r1, r1, #1
   559ac:	movw	r2, #1
   559b0:	orr	r1, r1, r2
   559b4:	strb	r1, [r0, #28]
   559b8:	b	559dc <__assert_fail@plt+0x42e24>
   559bc:	b	559c0 <__assert_fail@plt+0x42e08>
   559c0:	b	559c4 <__assert_fail@plt+0x42e0c>
   559c4:	b	559c8 <__assert_fail@plt+0x42e10>
   559c8:	b	559cc <__assert_fail@plt+0x42e14>
   559cc:	ldr	r0, [fp, #-100]	; 0xffffff9c
   559d0:	add	r0, r0, #1
   559d4:	str	r0, [fp, #-100]	; 0xffffff9c
   559d8:	b	552cc <__assert_fail@plt+0x42714>
   559dc:	sub	sp, fp, #8
   559e0:	pop	{r4, r5, fp, pc}
   559e4:	push	{fp, lr}
   559e8:	mov	fp, sp
   559ec:	sub	sp, sp, #40	; 0x28
   559f0:	ldr	r3, [pc, #440]	; 55bb0 <__assert_fail@plt+0x42ff8>
   559f4:	ldr	ip, [pc, #440]	; 55bb4 <__assert_fail@plt+0x42ffc>
   559f8:	str	r0, [fp, #-8]
   559fc:	str	r1, [fp, #-12]
   55a00:	str	r2, [fp, #-16]
   55a04:	ldr	r0, [fp, #-16]
   55a08:	and	r0, r0, #1
   55a0c:	cmp	r0, #0
   55a10:	movw	r0, #0
   55a14:	movne	r0, #1
   55a18:	tst	r0, #1
   55a1c:	movne	ip, r3
   55a20:	str	ip, [sp, #16]
   55a24:	ldr	r0, [fp, #-8]
   55a28:	movw	r1, #0
   55a2c:	str	r1, [r0]
   55a30:	ldr	r0, [fp, #-8]
   55a34:	str	r1, [r0, #4]
   55a38:	ldr	r0, [fp, #-8]
   55a3c:	str	r1, [r0, #8]
   55a40:	movw	r0, #256	; 0x100
   55a44:	bl	527f0 <__assert_fail@plt+0x3fc38>
   55a48:	ldr	r1, [fp, #-8]
   55a4c:	str	r0, [r1, #16]
   55a50:	ldr	r0, [fp, #-8]
   55a54:	ldr	r0, [r0, #16]
   55a58:	movw	r1, #0
   55a5c:	cmp	r0, r1
   55a60:	bne	55a70 <__assert_fail@plt+0x42eb8>
   55a64:	movw	r0, #12
   55a68:	str	r0, [fp, #-4]
   55a6c:	b	55ba4 <__assert_fail@plt+0x42fec>
   55a70:	ldr	r0, [pc, #320]	; 55bb8 <__assert_fail@plt+0x43000>
   55a74:	ldr	r1, [fp, #-16]
   55a78:	and	r1, r1, #2
   55a7c:	cmp	r1, #0
   55a80:	movw	r1, #0
   55a84:	movne	r1, #1
   55a88:	tst	r1, #1
   55a8c:	moveq	r0, #0
   55a90:	ldr	r1, [sp, #16]
   55a94:	orr	r0, r1, r0
   55a98:	str	r0, [sp, #16]
   55a9c:	ldr	r0, [fp, #-16]
   55aa0:	and	r0, r0, #4
   55aa4:	cmp	r0, #0
   55aa8:	beq	55ae0 <__assert_fail@plt+0x42f28>
   55aac:	ldr	r0, [sp, #16]
   55ab0:	bic	r0, r0, #64	; 0x40
   55ab4:	str	r0, [sp, #16]
   55ab8:	ldr	r0, [sp, #16]
   55abc:	orr	r0, r0, #256	; 0x100
   55ac0:	str	r0, [sp, #16]
   55ac4:	ldr	r0, [fp, #-8]
   55ac8:	ldrb	r1, [r0, #28]
   55acc:	and	r1, r1, #127	; 0x7f
   55ad0:	movw	r2, #128	; 0x80
   55ad4:	orr	r1, r1, r2
   55ad8:	strb	r1, [r0, #28]
   55adc:	b	55af0 <__assert_fail@plt+0x42f38>
   55ae0:	ldr	r0, [fp, #-8]
   55ae4:	ldrb	r1, [r0, #28]
   55ae8:	and	r1, r1, #127	; 0x7f
   55aec:	strb	r1, [r0, #28]
   55af0:	ldrb	r0, [fp, #-16]
   55af4:	and	r0, r0, #8
   55af8:	ldr	r1, [fp, #-8]
   55afc:	ldrb	r2, [r1, #28]
   55b00:	lsl	r0, r0, #1
   55b04:	bic	r2, r2, #16
   55b08:	orr	r0, r2, r0
   55b0c:	strb	r0, [r1, #28]
   55b10:	ldr	r0, [fp, #-8]
   55b14:	movw	r1, #0
   55b18:	str	r1, [r0, #20]
   55b1c:	ldr	r0, [fp, #-8]
   55b20:	ldr	r1, [fp, #-12]
   55b24:	ldr	r2, [fp, #-12]
   55b28:	str	r0, [sp, #12]
   55b2c:	mov	r0, r2
   55b30:	str	r1, [sp, #8]
   55b34:	bl	12888 <strlen@plt>
   55b38:	ldr	r3, [sp, #16]
   55b3c:	ldr	r1, [sp, #12]
   55b40:	str	r0, [sp, #4]
   55b44:	mov	r0, r1
   55b48:	ldr	r1, [sp, #8]
   55b4c:	ldr	r2, [sp, #4]
   55b50:	bl	54d6c <__assert_fail@plt+0x421b4>
   55b54:	str	r0, [sp, #20]
   55b58:	ldr	r0, [sp, #20]
   55b5c:	cmp	r0, #16
   55b60:	bne	55b6c <__assert_fail@plt+0x42fb4>
   55b64:	movw	r0, #8
   55b68:	str	r0, [sp, #20]
   55b6c:	ldr	r0, [sp, #20]
   55b70:	cmp	r0, #0
   55b74:	bne	55b84 <__assert_fail@plt+0x42fcc>
   55b78:	ldr	r0, [fp, #-8]
   55b7c:	bl	55168 <__assert_fail@plt+0x425b0>
   55b80:	b	55b9c <__assert_fail@plt+0x42fe4>
   55b84:	ldr	r0, [fp, #-8]
   55b88:	ldr	r0, [r0, #16]
   55b8c:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   55b90:	ldr	r0, [fp, #-8]
   55b94:	movw	r1, #0
   55b98:	str	r1, [r0, #16]
   55b9c:	ldr	r0, [sp, #20]
   55ba0:	str	r0, [fp, #-4]
   55ba4:	ldr	r0, [fp, #-4]
   55ba8:	mov	sp, fp
   55bac:	pop	{fp, pc}
   55bb0:	strdeq	fp, [r3], -ip
   55bb4:	smlabteq	r1, r6, r2, r0
   55bb8:	subeq	r0, r0, r0
   55bbc:	push	{fp, lr}
   55bc0:	mov	fp, sp
   55bc4:	sub	sp, sp, #40	; 0x28
   55bc8:	str	r0, [fp, #-4]
   55bcc:	str	r1, [fp, #-8]
   55bd0:	str	r2, [fp, #-12]
   55bd4:	str	r3, [fp, #-16]
   55bd8:	movw	r0, #17
   55bdc:	str	r0, [sp, #12]
   55be0:	ldr	r0, [fp, #-4]
   55be4:	cmp	r0, #0
   55be8:	movw	r0, #1
   55bec:	str	r0, [sp, #4]
   55bf0:	blt	55c0c <__assert_fail@plt+0x43054>
   55bf4:	ldr	r0, [fp, #-4]
   55bf8:	ldr	r1, [sp, #12]
   55bfc:	cmp	r0, r1
   55c00:	movw	r0, #0
   55c04:	movge	r0, #1
   55c08:	str	r0, [sp, #4]
   55c0c:	ldr	r0, [sp, #4]
   55c10:	tst	r0, #1
   55c14:	beq	55c1c <__assert_fail@plt+0x43064>
   55c18:	bl	12b64 <abort@plt>
   55c1c:	ldr	r0, [fp, #-4]
   55c20:	movw	r1, #49864	; 0xc2c8
   55c24:	movt	r1, #7
   55c28:	add	r0, r1, r0, lsl #2
   55c2c:	ldr	r0, [r0]
   55c30:	movw	r1, #49480	; 0xc148
   55c34:	movt	r1, #7
   55c38:	add	r0, r1, r0
   55c3c:	bl	12864 <gettext@plt>
   55c40:	str	r0, [sp, #20]
   55c44:	ldr	r0, [sp, #20]
   55c48:	bl	12888 <strlen@plt>
   55c4c:	add	r0, r0, #1
   55c50:	str	r0, [sp, #16]
   55c54:	ldr	r0, [fp, #-16]
   55c58:	cmp	r0, #0
   55c5c:	beq	55ca8 <__assert_fail@plt+0x430f0>
   55c60:	ldr	r0, [sp, #16]
   55c64:	str	r0, [sp, #8]
   55c68:	ldr	r0, [sp, #16]
   55c6c:	ldr	r1, [fp, #-16]
   55c70:	cmp	r0, r1
   55c74:	bls	55c98 <__assert_fail@plt+0x430e0>
   55c78:	ldr	r0, [fp, #-16]
   55c7c:	sub	r0, r0, #1
   55c80:	str	r0, [sp, #8]
   55c84:	ldr	r0, [fp, #-12]
   55c88:	ldr	r1, [sp, #8]
   55c8c:	add	r0, r0, r1
   55c90:	movw	r1, #0
   55c94:	strb	r1, [r0]
   55c98:	ldr	r0, [fp, #-12]
   55c9c:	ldr	r1, [sp, #20]
   55ca0:	ldr	r2, [sp, #8]
   55ca4:	bl	125c4 <memcpy@plt>
   55ca8:	ldr	r0, [sp, #16]
   55cac:	mov	sp, fp
   55cb0:	pop	{fp, pc}
   55cb4:	push	{fp, lr}
   55cb8:	mov	fp, sp
   55cbc:	sub	sp, sp, #8
   55cc0:	str	r0, [sp, #4]
   55cc4:	ldr	r0, [sp, #4]
   55cc8:	ldr	r0, [r0]
   55ccc:	str	r0, [sp]
   55cd0:	ldr	r0, [sp]
   55cd4:	movw	r1, #0
   55cd8:	cmp	r0, r1
   55cdc:	beq	55d24 <__assert_fail@plt+0x4316c>
   55ce0:	movw	r0, #10532	; 0x2924
   55ce4:	movt	r0, #1
   55ce8:	cmp	r0, #0
   55cec:	bne	55d08 <__assert_fail@plt+0x43150>
   55cf0:	b	55cf4 <__assert_fail@plt+0x4313c>
   55cf4:	movw	r0, #9620	; 0x2594
   55cf8:	movt	r0, #1
   55cfc:	cmp	r0, #0
   55d00:	beq	55d18 <__assert_fail@plt+0x43160>
   55d04:	b	55d08 <__assert_fail@plt+0x43150>
   55d08:	ldr	r0, [sp]
   55d0c:	add	r0, r0, #136	; 0x88
   55d10:	bl	12510 <pthread_mutex_destroy@plt>
   55d14:	b	55d1c <__assert_fail@plt+0x43164>
   55d18:	b	55d1c <__assert_fail@plt+0x43164>
   55d1c:	ldr	r0, [sp]
   55d20:	bl	55d70 <__assert_fail@plt+0x431b8>
   55d24:	ldr	r0, [sp, #4]
   55d28:	movw	r1, #0
   55d2c:	str	r1, [r0]
   55d30:	ldr	r0, [sp, #4]
   55d34:	str	r1, [r0, #4]
   55d38:	ldr	r0, [sp, #4]
   55d3c:	ldr	r0, [r0, #16]
   55d40:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   55d44:	ldr	r0, [sp, #4]
   55d48:	movw	r1, #0
   55d4c:	str	r1, [r0, #16]
   55d50:	ldr	r0, [sp, #4]
   55d54:	ldr	r0, [r0, #20]
   55d58:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   55d5c:	ldr	r0, [sp, #4]
   55d60:	movw	r1, #0
   55d64:	str	r1, [r0, #20]
   55d68:	mov	sp, fp
   55d6c:	pop	{fp, pc}
   55d70:	push	{fp, lr}
   55d74:	mov	fp, sp
   55d78:	sub	sp, sp, #24
   55d7c:	str	r0, [fp, #-4]
   55d80:	ldr	r0, [fp, #-4]
   55d84:	ldr	r0, [r0]
   55d88:	movw	r1, #0
   55d8c:	cmp	r0, r1
   55d90:	beq	55dd8 <__assert_fail@plt+0x43220>
   55d94:	movw	r0, #0
   55d98:	str	r0, [fp, #-8]
   55d9c:	ldr	r0, [fp, #-8]
   55da0:	ldr	r1, [fp, #-4]
   55da4:	ldr	r1, [r1, #8]
   55da8:	cmp	r0, r1
   55dac:	bcs	55dd4 <__assert_fail@plt+0x4321c>
   55db0:	ldr	r0, [fp, #-4]
   55db4:	ldr	r0, [r0]
   55db8:	ldr	r1, [fp, #-8]
   55dbc:	add	r0, r0, r1, lsl #3
   55dc0:	bl	579b0 <__assert_fail@plt+0x44df8>
   55dc4:	ldr	r0, [fp, #-8]
   55dc8:	add	r0, r0, #1
   55dcc:	str	r0, [fp, #-8]
   55dd0:	b	55d9c <__assert_fail@plt+0x431e4>
   55dd4:	b	55dd8 <__assert_fail@plt+0x43220>
   55dd8:	ldr	r0, [fp, #-4]
   55ddc:	ldr	r0, [r0, #12]
   55de0:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   55de4:	movw	r0, #0
   55de8:	str	r0, [fp, #-8]
   55dec:	ldr	r0, [fp, #-8]
   55df0:	ldr	r1, [fp, #-4]
   55df4:	ldr	r1, [r1, #8]
   55df8:	cmp	r0, r1
   55dfc:	bcs	55eb0 <__assert_fail@plt+0x432f8>
   55e00:	ldr	r0, [fp, #-4]
   55e04:	ldr	r0, [r0, #24]
   55e08:	movw	r1, #0
   55e0c:	cmp	r0, r1
   55e10:	beq	55e34 <__assert_fail@plt+0x4327c>
   55e14:	ldr	r0, [fp, #-4]
   55e18:	ldr	r0, [r0, #24]
   55e1c:	ldr	r1, [fp, #-8]
   55e20:	movw	r2, #12
   55e24:	mul	r1, r1, r2
   55e28:	add	r0, r0, r1
   55e2c:	ldr	r0, [r0, #8]
   55e30:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   55e34:	ldr	r0, [fp, #-4]
   55e38:	ldr	r0, [r0, #28]
   55e3c:	movw	r1, #0
   55e40:	cmp	r0, r1
   55e44:	beq	55e68 <__assert_fail@plt+0x432b0>
   55e48:	ldr	r0, [fp, #-4]
   55e4c:	ldr	r0, [r0, #28]
   55e50:	ldr	r1, [fp, #-8]
   55e54:	movw	r2, #12
   55e58:	mul	r1, r1, r2
   55e5c:	add	r0, r0, r1
   55e60:	ldr	r0, [r0, #8]
   55e64:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   55e68:	ldr	r0, [fp, #-4]
   55e6c:	ldr	r0, [r0, #20]
   55e70:	movw	r1, #0
   55e74:	cmp	r0, r1
   55e78:	beq	55e9c <__assert_fail@plt+0x432e4>
   55e7c:	ldr	r0, [fp, #-4]
   55e80:	ldr	r0, [r0, #20]
   55e84:	ldr	r1, [fp, #-8]
   55e88:	movw	r2, #12
   55e8c:	mul	r1, r1, r2
   55e90:	add	r0, r0, r1
   55e94:	ldr	r0, [r0, #8]
   55e98:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   55e9c:	b	55ea0 <__assert_fail@plt+0x432e8>
   55ea0:	ldr	r0, [fp, #-8]
   55ea4:	add	r0, r0, #1
   55ea8:	str	r0, [fp, #-8]
   55eac:	b	55dec <__assert_fail@plt+0x43234>
   55eb0:	ldr	r0, [fp, #-4]
   55eb4:	ldr	r0, [r0, #20]
   55eb8:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   55ebc:	ldr	r0, [fp, #-4]
   55ec0:	ldr	r0, [r0, #24]
   55ec4:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   55ec8:	ldr	r0, [fp, #-4]
   55ecc:	ldr	r0, [r0, #28]
   55ed0:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   55ed4:	ldr	r0, [fp, #-4]
   55ed8:	ldr	r0, [r0]
   55edc:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   55ee0:	ldr	r0, [fp, #-4]
   55ee4:	ldr	r0, [r0, #32]
   55ee8:	movw	r1, #0
   55eec:	cmp	r0, r1
   55ef0:	beq	55f98 <__assert_fail@plt+0x433e0>
   55ef4:	movw	r0, #0
   55ef8:	str	r0, [fp, #-8]
   55efc:	ldr	r0, [fp, #-8]
   55f00:	ldr	r1, [fp, #-4]
   55f04:	ldr	r1, [r1, #68]	; 0x44
   55f08:	cmp	r0, r1
   55f0c:	bhi	55f94 <__assert_fail@plt+0x433dc>
   55f10:	ldr	r0, [fp, #-4]
   55f14:	ldr	r0, [r0, #32]
   55f18:	ldr	r1, [fp, #-8]
   55f1c:	movw	r2, #12
   55f20:	mul	r1, r1, r2
   55f24:	add	r0, r0, r1
   55f28:	str	r0, [sp, #8]
   55f2c:	movw	r0, #0
   55f30:	str	r0, [sp, #12]
   55f34:	ldr	r0, [sp, #12]
   55f38:	ldr	r1, [sp, #8]
   55f3c:	ldr	r1, [r1]
   55f40:	cmp	r0, r1
   55f44:	bge	55f78 <__assert_fail@plt+0x433c0>
   55f48:	ldr	r0, [sp, #8]
   55f4c:	ldr	r0, [r0, #8]
   55f50:	ldr	r1, [sp, #12]
   55f54:	add	r0, r0, r1, lsl #2
   55f58:	ldr	r0, [r0]
   55f5c:	str	r0, [sp, #4]
   55f60:	ldr	r0, [sp, #4]
   55f64:	bl	57a40 <__assert_fail@plt+0x44e88>
   55f68:	ldr	r0, [sp, #12]
   55f6c:	add	r0, r0, #1
   55f70:	str	r0, [sp, #12]
   55f74:	b	55f34 <__assert_fail@plt+0x4337c>
   55f78:	ldr	r0, [sp, #8]
   55f7c:	ldr	r0, [r0, #8]
   55f80:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   55f84:	ldr	r0, [fp, #-8]
   55f88:	add	r0, r0, #1
   55f8c:	str	r0, [fp, #-8]
   55f90:	b	55efc <__assert_fail@plt+0x43344>
   55f94:	b	55f98 <__assert_fail@plt+0x433e0>
   55f98:	ldr	r0, [fp, #-4]
   55f9c:	ldr	r0, [r0, #32]
   55fa0:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   55fa4:	ldr	r0, [fp, #-4]
   55fa8:	ldr	r0, [r0, #60]	; 0x3c
   55fac:	movw	r1, #49932	; 0xc30c
   55fb0:	movt	r1, #7
   55fb4:	cmp	r0, r1
   55fb8:	beq	55fc8 <__assert_fail@plt+0x43410>
   55fbc:	ldr	r0, [fp, #-4]
   55fc0:	ldr	r0, [r0, #60]	; 0x3c
   55fc4:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   55fc8:	ldr	r0, [fp, #-4]
   55fcc:	ldr	r0, [r0, #132]	; 0x84
   55fd0:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   55fd4:	ldr	r0, [fp, #-4]
   55fd8:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   55fdc:	mov	sp, fp
   55fe0:	pop	{fp, pc}
   55fe4:	push	{r4, r5, r6, sl, fp, lr}
   55fe8:	add	fp, sp, #16
   55fec:	sub	sp, sp, #56	; 0x38
   55ff0:	ldr	ip, [fp, #8]
   55ff4:	str	r0, [fp, #-24]	; 0xffffffe8
   55ff8:	str	r1, [fp, #-28]	; 0xffffffe4
   55ffc:	str	r2, [fp, #-32]	; 0xffffffe0
   56000:	str	r3, [sp, #36]	; 0x24
   56004:	ldr	r0, [fp, #-24]	; 0xffffffe8
   56008:	ldr	r0, [r0]
   5600c:	str	r0, [sp, #20]
   56010:	ldr	r0, [fp, #8]
   56014:	mvn	r1, #7
   56018:	and	r0, r0, r1
   5601c:	cmp	r0, #0
   56020:	beq	56030 <__assert_fail@plt+0x43478>
   56024:	movw	r0, #2
   56028:	str	r0, [fp, #-20]	; 0xffffffec
   5602c:	b	56198 <__assert_fail@plt+0x435e0>
   56030:	ldr	r0, [fp, #8]
   56034:	and	r0, r0, #4
   56038:	cmp	r0, #0
   5603c:	beq	5605c <__assert_fail@plt+0x434a4>
   56040:	ldr	r0, [sp, #36]	; 0x24
   56044:	ldr	r0, [r0]
   56048:	str	r0, [sp, #28]
   5604c:	ldr	r0, [sp, #36]	; 0x24
   56050:	ldr	r0, [r0, #4]
   56054:	str	r0, [sp, #24]
   56058:	b	56070 <__assert_fail@plt+0x434b8>
   5605c:	movw	r0, #0
   56060:	str	r0, [sp, #28]
   56064:	ldr	r0, [fp, #-28]	; 0xffffffe4
   56068:	bl	12888 <strlen@plt>
   5606c:	str	r0, [sp, #24]
   56070:	movw	r0, #10532	; 0x2924
   56074:	movt	r0, #1
   56078:	cmp	r0, #0
   5607c:	bne	56098 <__assert_fail@plt+0x434e0>
   56080:	b	56084 <__assert_fail@plt+0x434cc>
   56084:	movw	r0, #9620	; 0x2594
   56088:	movt	r0, #1
   5608c:	cmp	r0, #0
   56090:	beq	560a8 <__assert_fail@plt+0x434f0>
   56094:	b	56098 <__assert_fail@plt+0x434e0>
   56098:	ldr	r0, [sp, #20]
   5609c:	add	r0, r0, #136	; 0x88
   560a0:	bl	12570 <pthread_mutex_lock@plt>
   560a4:	b	560ac <__assert_fail@plt+0x434f4>
   560a8:	b	560ac <__assert_fail@plt+0x434f4>
   560ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   560b0:	ldrb	r0, [r0, #28]
   560b4:	ubfx	r0, r0, #4, #1
   560b8:	and	r0, r0, #255	; 0xff
   560bc:	cmp	r0, #0
   560c0:	beq	56104 <__assert_fail@plt+0x4354c>
   560c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   560c8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   560cc:	ldr	r2, [sp, #24]
   560d0:	ldr	r3, [sp, #28]
   560d4:	ldr	ip, [sp, #24]
   560d8:	ldr	lr, [sp, #24]
   560dc:	ldr	r4, [fp, #8]
   560e0:	str	ip, [sp]
   560e4:	str	lr, [sp, #4]
   560e8:	movw	ip, #0
   560ec:	str	ip, [sp, #8]
   560f0:	str	ip, [sp, #12]
   560f4:	str	r4, [sp, #16]
   560f8:	bl	561a4 <__assert_fail@plt+0x435ec>
   560fc:	str	r0, [sp, #32]
   56100:	b	56144 <__assert_fail@plt+0x4358c>
   56104:	ldr	r0, [fp, #-24]	; 0xffffffe8
   56108:	ldr	r1, [fp, #-28]	; 0xffffffe4
   5610c:	ldr	r2, [sp, #24]
   56110:	ldr	r3, [sp, #28]
   56114:	ldr	ip, [sp, #24]
   56118:	ldr	lr, [sp, #24]
   5611c:	ldr	r4, [fp, #-32]	; 0xffffffe0
   56120:	ldr	r5, [sp, #36]	; 0x24
   56124:	ldr	r6, [fp, #8]
   56128:	str	ip, [sp]
   5612c:	str	lr, [sp, #4]
   56130:	str	r4, [sp, #8]
   56134:	str	r5, [sp, #12]
   56138:	str	r6, [sp, #16]
   5613c:	bl	561a4 <__assert_fail@plt+0x435ec>
   56140:	str	r0, [sp, #32]
   56144:	movw	r0, #10532	; 0x2924
   56148:	movt	r0, #1
   5614c:	cmp	r0, #0
   56150:	bne	5616c <__assert_fail@plt+0x435b4>
   56154:	b	56158 <__assert_fail@plt+0x435a0>
   56158:	movw	r0, #9620	; 0x2594
   5615c:	movt	r0, #1
   56160:	cmp	r0, #0
   56164:	beq	5617c <__assert_fail@plt+0x435c4>
   56168:	b	5616c <__assert_fail@plt+0x435b4>
   5616c:	ldr	r0, [sp, #20]
   56170:	add	r0, r0, #136	; 0x88
   56174:	bl	1242c <pthread_mutex_unlock@plt>
   56178:	b	56180 <__assert_fail@plt+0x435c8>
   5617c:	b	56180 <__assert_fail@plt+0x435c8>
   56180:	ldr	r0, [sp, #32]
   56184:	cmp	r0, #0
   56188:	movw	r0, #0
   5618c:	movne	r0, #1
   56190:	and	r0, r0, #1
   56194:	str	r0, [fp, #-20]	; 0xffffffec
   56198:	ldr	r0, [fp, #-20]	; 0xffffffec
   5619c:	sub	sp, fp, #16
   561a0:	pop	{r4, r5, r6, sl, fp, pc}
   561a4:	push	{r4, r5, r6, sl, fp, lr}
   561a8:	add	fp, sp, #16
   561ac:	sub	sp, sp, #376	; 0x178
   561b0:	ldr	ip, [fp, #24]
   561b4:	ldr	lr, [fp, #20]
   561b8:	ldr	r4, [fp, #16]
   561bc:	ldr	r5, [fp, #12]
   561c0:	ldr	r6, [fp, #8]
   561c4:	str	r0, [fp, #-24]	; 0xffffffe8
   561c8:	str	r1, [fp, #-28]	; 0xffffffe4
   561cc:	str	r2, [fp, #-32]	; 0xffffffe0
   561d0:	str	r3, [fp, #-36]	; 0xffffffdc
   561d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   561d8:	ldr	r0, [r0]
   561dc:	str	r0, [fp, #-44]	; 0xffffffd4
   561e0:	mvn	r0, #0
   561e4:	str	r0, [fp, #-72]	; 0xffffffb8
   561e8:	add	r0, sp, #172	; 0xac
   561ec:	mov	r1, #0
   561f0:	mov	r2, #136	; 0x88
   561f4:	str	ip, [sp, #148]	; 0x94
   561f8:	str	lr, [sp, #144]	; 0x90
   561fc:	str	r4, [sp, #140]	; 0x8c
   56200:	str	r5, [sp, #136]	; 0x88
   56204:	str	r6, [sp, #132]	; 0x84
   56208:	bl	12900 <memset@plt>
   5620c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   56210:	str	r1, [sp, #256]	; 0x100
   56214:	ldr	r1, [fp, #-24]	; 0xffffffe8
   56218:	ldr	r1, [r1, #16]
   5621c:	movw	r2, #0
   56220:	cmp	r1, r2
   56224:	beq	56278 <__assert_fail@plt+0x436c0>
   56228:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5622c:	ldrb	r0, [r0, #28]
   56230:	ubfx	r0, r0, #3, #1
   56234:	and	r0, r0, #255	; 0xff
   56238:	cmp	r0, #0
   5623c:	beq	56278 <__assert_fail@plt+0x436c0>
   56240:	ldr	r0, [fp, #-36]	; 0xffffffdc
   56244:	ldr	r1, [fp, #8]
   56248:	cmp	r0, r1
   5624c:	beq	56278 <__assert_fail@plt+0x436c0>
   56250:	ldr	r0, [fp, #-24]	; 0xffffffe8
   56254:	ldrb	r0, [r0, #28]
   56258:	and	r0, r0, #1
   5625c:	and	r0, r0, #255	; 0xff
   56260:	cmp	r0, #0
   56264:	bne	56278 <__assert_fail@plt+0x436c0>
   56268:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5626c:	ldr	r0, [r0, #16]
   56270:	str	r0, [sp, #128]	; 0x80
   56274:	b	56284 <__assert_fail@plt+0x436cc>
   56278:	movw	r0, #0
   5627c:	str	r0, [sp, #128]	; 0x80
   56280:	b	56284 <__assert_fail@plt+0x436cc>
   56284:	ldr	r0, [sp, #128]	; 0x80
   56288:	str	r0, [sp, #168]	; 0xa8
   5628c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   56290:	ldr	r0, [r0, #20]
   56294:	str	r0, [sp, #164]	; 0xa4
   56298:	ldr	r0, [fp, #16]
   5629c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   562a0:	ldr	r1, [r1, #24]
   562a4:	cmp	r0, r1
   562a8:	bls	562c8 <__assert_fail@plt+0x43710>
   562ac:	ldr	r0, [fp, #16]
   562b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   562b4:	ldr	r1, [r1, #24]
   562b8:	add	r1, r1, #1
   562bc:	sub	r0, r0, r1
   562c0:	str	r0, [sp, #124]	; 0x7c
   562c4:	b	562d4 <__assert_fail@plt+0x4371c>
   562c8:	movw	r0, #0
   562cc:	str	r0, [sp, #124]	; 0x7c
   562d0:	b	562d4 <__assert_fail@plt+0x4371c>
   562d4:	ldr	r0, [sp, #124]	; 0x7c
   562d8:	str	r0, [fp, #-76]	; 0xffffffb4
   562dc:	ldr	r0, [fp, #-76]	; 0xffffffb4
   562e0:	ldr	r1, [fp, #16]
   562e4:	sub	r0, r1, r0
   562e8:	str	r0, [fp, #16]
   562ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   562f0:	ldr	r0, [r0, #8]
   562f4:	cmp	r0, #0
   562f8:	movw	r0, #1
   562fc:	str	r0, [sp, #120]	; 0x78
   56300:	beq	56374 <__assert_fail@plt+0x437bc>
   56304:	ldr	r0, [fp, #-44]	; 0xffffffd4
   56308:	ldr	r0, [r0, #36]	; 0x24
   5630c:	movw	r1, #0
   56310:	cmp	r0, r1
   56314:	movw	r0, #1
   56318:	str	r0, [sp, #120]	; 0x78
   5631c:	beq	56374 <__assert_fail@plt+0x437bc>
   56320:	ldr	r0, [fp, #-44]	; 0xffffffd4
   56324:	ldr	r0, [r0, #40]	; 0x28
   56328:	movw	r1, #0
   5632c:	cmp	r0, r1
   56330:	movw	r0, #1
   56334:	str	r0, [sp, #120]	; 0x78
   56338:	beq	56374 <__assert_fail@plt+0x437bc>
   5633c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   56340:	ldr	r0, [r0, #44]	; 0x2c
   56344:	movw	r1, #0
   56348:	cmp	r0, r1
   5634c:	movw	r0, #1
   56350:	str	r0, [sp, #120]	; 0x78
   56354:	beq	56374 <__assert_fail@plt+0x437bc>
   56358:	ldr	r0, [fp, #-44]	; 0xffffffd4
   5635c:	ldr	r0, [r0, #48]	; 0x30
   56360:	movw	r1, #0
   56364:	cmp	r0, r1
   56368:	movw	r0, #0
   5636c:	moveq	r0, #1
   56370:	str	r0, [sp, #120]	; 0x78
   56374:	ldr	r0, [sp, #120]	; 0x78
   56378:	tst	r0, #1
   5637c:	beq	5638c <__assert_fail@plt+0x437d4>
   56380:	movw	r0, #1
   56384:	str	r0, [fp, #-20]	; 0xffffffec
   56388:	b	570a8 <__assert_fail@plt+0x444f0>
   5638c:	ldr	r0, [fp, #8]
   56390:	movw	r1, #0
   56394:	cmp	r1, r0
   56398:	bgt	563b0 <__assert_fail@plt+0x437f8>
   5639c:	ldr	r0, [fp, #8]
   563a0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   563a4:	cmp	r0, r1
   563a8:	bgt	563b0 <__assert_fail@plt+0x437f8>
   563ac:	b	563b0 <__assert_fail@plt+0x437f8>
   563b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   563b4:	ldr	r0, [r0, #36]	; 0x24
   563b8:	ldr	r0, [r0, #8]
   563bc:	cmp	r0, #0
   563c0:	bne	56434 <__assert_fail@plt+0x4387c>
   563c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   563c8:	ldr	r0, [r0, #40]	; 0x28
   563cc:	ldr	r0, [r0, #8]
   563d0:	cmp	r0, #0
   563d4:	bne	56434 <__assert_fail@plt+0x4387c>
   563d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   563dc:	ldr	r0, [r0, #44]	; 0x2c
   563e0:	ldr	r0, [r0, #8]
   563e4:	cmp	r0, #0
   563e8:	beq	56404 <__assert_fail@plt+0x4384c>
   563ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   563f0:	ldrb	r0, [r0, #28]
   563f4:	lsr	r0, r0, #7
   563f8:	and	r0, r0, #255	; 0xff
   563fc:	cmp	r0, #0
   56400:	bne	56434 <__assert_fail@plt+0x4387c>
   56404:	ldr	r0, [fp, #-36]	; 0xffffffdc
   56408:	cmp	r0, #0
   5640c:	beq	56428 <__assert_fail@plt+0x43870>
   56410:	ldr	r0, [fp, #8]
   56414:	cmp	r0, #0
   56418:	beq	56428 <__assert_fail@plt+0x43870>
   5641c:	movw	r0, #1
   56420:	str	r0, [fp, #-20]	; 0xffffffec
   56424:	b	570a8 <__assert_fail@plt+0x444f0>
   56428:	movw	r0, #0
   5642c:	str	r0, [fp, #8]
   56430:	str	r0, [fp, #-36]	; 0xffffffdc
   56434:	ldr	r0, [fp, #16]
   56438:	cmp	r0, #0
   5643c:	movw	r0, #1
   56440:	str	r0, [sp, #116]	; 0x74
   56444:	bne	56460 <__assert_fail@plt+0x438a8>
   56448:	ldr	r0, [fp, #-44]	; 0xffffffd4
   5644c:	ldr	r0, [r0, #76]	; 0x4c
   56450:	cmp	r0, #0
   56454:	movw	r0, #0
   56458:	movne	r0, #1
   5645c:	str	r0, [sp, #116]	; 0x74
   56460:	ldr	r0, [sp, #116]	; 0x74
   56464:	add	r1, sp, #172	; 0xac
   56468:	and	r0, r0, #1
   5646c:	strb	r0, [fp, #-57]	; 0xffffffc7
   56470:	ldr	r0, [fp, #-28]	; 0xffffffe4
   56474:	ldr	r2, [fp, #-32]	; 0xffffffe0
   56478:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5647c:	ldr	r3, [r3, #8]
   56480:	add	r3, r3, #1
   56484:	ldr	ip, [fp, #-24]	; 0xffffffe8
   56488:	ldr	ip, [ip, #20]
   5648c:	ldr	lr, [fp, #-24]	; 0xffffffe8
   56490:	ldr	lr, [lr, #12]
   56494:	and	lr, lr, #4194304	; 0x400000
   56498:	cmp	lr, #0
   5649c:	movw	lr, #0
   564a0:	movne	lr, #1
   564a4:	ldr	r4, [fp, #-44]	; 0xffffffd4
   564a8:	str	r0, [sp, #112]	; 0x70
   564ac:	mov	r0, r1
   564b0:	ldr	r1, [sp, #112]	; 0x70
   564b4:	str	ip, [sp]
   564b8:	and	ip, lr, #1
   564bc:	str	ip, [sp, #4]
   564c0:	str	r4, [sp, #8]
   564c4:	bl	62c0c <__assert_fail@plt+0x50054>
   564c8:	str	r0, [fp, #-40]	; 0xffffffd8
   564cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   564d0:	cmp	r0, #0
   564d4:	beq	564dc <__assert_fail@plt+0x43924>
   564d8:	b	57078 <__assert_fail@plt+0x444c0>
   564dc:	ldr	r0, [fp, #12]
   564e0:	str	r0, [sp, #228]	; 0xe4
   564e4:	ldr	r0, [fp, #12]
   564e8:	str	r0, [sp, #224]	; 0xe0
   564ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   564f0:	ldrb	r0, [r0, #28]
   564f4:	lsr	r0, r0, #7
   564f8:	strb	r0, [sp, #249]	; 0xf9
   564fc:	ldr	r1, [fp, #24]
   56500:	ldr	r0, [fp, #-44]	; 0xffffffd4
   56504:	ldr	r0, [r0, #76]	; 0x4c
   56508:	lsl	r2, r0, #1
   5650c:	add	r0, sp, #172	; 0xac
   56510:	bl	62da0 <__assert_fail@plt+0x501e8>
   56514:	str	r0, [fp, #-40]	; 0xffffffd8
   56518:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5651c:	cmp	r0, #0
   56520:	beq	56528 <__assert_fail@plt+0x43970>
   56524:	b	57078 <__assert_fail@plt+0x444c0>
   56528:	ldr	r0, [fp, #16]
   5652c:	cmp	r0, #1
   56530:	bhi	5654c <__assert_fail@plt+0x43994>
   56534:	ldr	r0, [fp, #-44]	; 0xffffffd4
   56538:	ldrb	r0, [r0, #88]	; 0x58
   5653c:	ubfx	r0, r0, #1, #1
   56540:	and	r0, r0, #255	; 0xff
   56544:	cmp	r0, #0
   56548:	beq	5659c <__assert_fail@plt+0x439e4>
   5654c:	ldr	r0, [pc, #2912]	; 570b4 <__assert_fail@plt+0x444fc>
   56550:	ldr	r1, [sp, #208]	; 0xd0
   56554:	cmp	r0, r1
   56558:	bhi	56568 <__assert_fail@plt+0x439b0>
   5655c:	movw	r0, #12
   56560:	str	r0, [fp, #-40]	; 0xffffffd8
   56564:	b	57078 <__assert_fail@plt+0x444c0>
   56568:	ldr	r0, [sp, #208]	; 0xd0
   5656c:	add	r0, r0, #1
   56570:	lsl	r0, r0, #2
   56574:	bl	527f0 <__assert_fail@plt+0x3fc38>
   56578:	str	r0, [sp, #272]	; 0x110
   5657c:	ldr	r0, [sp, #272]	; 0x110
   56580:	movw	r1, #0
   56584:	cmp	r0, r1
   56588:	bne	56598 <__assert_fail@plt+0x439e0>
   5658c:	movw	r0, #12
   56590:	str	r0, [fp, #-40]	; 0xffffffd8
   56594:	b	57078 <__assert_fail@plt+0x444c0>
   56598:	b	5659c <__assert_fail@plt+0x439e4>
   5659c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   565a0:	str	r0, [fp, #-68]	; 0xffffffbc
   565a4:	ldr	r0, [fp, #24]
   565a8:	and	r0, r0, #1
   565ac:	cmp	r0, #0
   565b0:	movw	r0, #0
   565b4:	movne	r0, #1
   565b8:	tst	r0, #1
   565bc:	movw	r0, #4
   565c0:	moveq	r0, #6
   565c4:	str	r0, [sp, #232]	; 0xe8
   565c8:	ldr	r0, [fp, #8]
   565cc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   565d0:	cmp	r0, r1
   565d4:	movw	r0, #0
   565d8:	movlt	r0, #1
   565dc:	tst	r0, #1
   565e0:	mvn	r0, #0
   565e4:	moveq	r0, #1
   565e8:	str	r0, [fp, #-56]	; 0xffffffc8
   565ec:	ldr	r0, [fp, #8]
   565f0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   565f4:	cmp	r0, r1
   565f8:	bge	56608 <__assert_fail@plt+0x43a50>
   565fc:	ldr	r0, [fp, #8]
   56600:	str	r0, [sp, #108]	; 0x6c
   56604:	b	56610 <__assert_fail@plt+0x43a58>
   56608:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5660c:	str	r0, [sp, #108]	; 0x6c
   56610:	ldr	r0, [sp, #108]	; 0x6c
   56614:	str	r0, [fp, #-48]	; 0xffffffd0
   56618:	ldr	r0, [fp, #8]
   5661c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   56620:	cmp	r0, r1
   56624:	bge	56634 <__assert_fail@plt+0x43a7c>
   56628:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5662c:	str	r0, [sp, #104]	; 0x68
   56630:	b	5663c <__assert_fail@plt+0x43a84>
   56634:	ldr	r0, [fp, #8]
   56638:	str	r0, [sp, #104]	; 0x68
   5663c:	ldr	r0, [sp, #104]	; 0x68
   56640:	str	r0, [fp, #-52]	; 0xffffffcc
   56644:	ldr	r0, [fp, #-44]	; 0xffffffd4
   56648:	ldr	r0, [r0, #92]	; 0x5c
   5664c:	cmp	r0, #1
   56650:	movw	r0, #0
   56654:	moveq	r0, #1
   56658:	and	r0, r0, #1
   5665c:	strb	r0, [fp, #-77]	; 0xffffffb3
   56660:	ldr	r0, [sp, #168]	; 0xa8
   56664:	movw	r1, #0
   56668:	cmp	r0, r1
   5666c:	beq	56728 <__assert_fail@plt+0x43b70>
   56670:	ldrb	r0, [fp, #-77]	; 0xffffffb3
   56674:	tst	r0, #1
   56678:	movw	r0, #1
   5667c:	str	r0, [sp, #100]	; 0x64
   56680:	bne	566c8 <__assert_fail@plt+0x43b10>
   56684:	ldr	r0, [fp, #-24]	; 0xffffffe8
   56688:	ldr	r0, [r0, #12]
   5668c:	and	r0, r0, #4194304	; 0x400000
   56690:	cmp	r0, #0
   56694:	movw	r0, #1
   56698:	str	r0, [sp, #96]	; 0x60
   5669c:	bne	566b8 <__assert_fail@plt+0x43b00>
   566a0:	ldr	r0, [sp, #164]	; 0xa4
   566a4:	movw	r1, #0
   566a8:	cmp	r0, r1
   566ac:	movw	r0, #0
   566b0:	movne	r0, #1
   566b4:	str	r0, [sp, #96]	; 0x60
   566b8:	ldr	r0, [sp, #96]	; 0x60
   566bc:	mvn	r1, #0
   566c0:	eor	r0, r0, r1
   566c4:	str	r0, [sp, #100]	; 0x64
   566c8:	ldr	r0, [sp, #100]	; 0x64
   566cc:	tst	r0, #1
   566d0:	movw	r0, #4
   566d4:	moveq	r0, #0
   566d8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   566dc:	ldr	r2, [fp, #8]
   566e0:	cmp	r1, r2
   566e4:	movw	r1, #0
   566e8:	movle	r1, #1
   566ec:	tst	r1, #1
   566f0:	movw	r1, #2
   566f4:	moveq	r1, #0
   566f8:	orr	r0, r0, r1
   566fc:	ldr	r1, [sp, #164]	; 0xa4
   56700:	movw	r2, #0
   56704:	cmp	r1, r2
   56708:	movw	r1, #0
   5670c:	movne	r1, #1
   56710:	tst	r1, #1
   56714:	movw	r1, #1
   56718:	moveq	r1, #0
   5671c:	orr	r0, r0, r1
   56720:	str	r0, [sp, #92]	; 0x5c
   56724:	b	56734 <__assert_fail@plt+0x43b7c>
   56728:	movw	r0, #8
   5672c:	str	r0, [sp, #92]	; 0x5c
   56730:	b	56734 <__assert_fail@plt+0x43b7c>
   56734:	ldr	r0, [sp, #92]	; 0x5c
   56738:	str	r0, [fp, #-64]	; 0xffffffc0
   5673c:	movw	r0, #1
   56740:	str	r0, [fp, #-40]	; 0xffffffd8
   56744:	ldr	r0, [fp, #-68]	; 0xffffffbc
   56748:	ldr	r1, [fp, #-48]	; 0xffffffd0
   5674c:	cmp	r0, r1
   56750:	blt	56764 <__assert_fail@plt+0x43bac>
   56754:	ldr	r0, [fp, #-52]	; 0xffffffcc
   56758:	ldr	r1, [fp, #-68]	; 0xffffffbc
   5675c:	cmp	r0, r1
   56760:	bge	56768 <__assert_fail@plt+0x43bb0>
   56764:	b	57078 <__assert_fail@plt+0x444c0>
   56768:	ldr	r0, [fp, #-64]	; 0xffffffc0
   5676c:	sub	r0, r0, #4
   56770:	cmp	r0, #4
   56774:	str	r0, [sp, #88]	; 0x58
   56778:	bhi	56a00 <__assert_fail@plt+0x43e48>
   5677c:	add	r0, pc, #8
   56780:	ldr	r1, [sp, #88]	; 0x58
   56784:	ldr	r0, [r0, r1, lsl #2]
   56788:	mov	pc, r0
   5678c:	andeq	r6, r5, r4, lsr r9
   56790:	andeq	r6, r5, r4, lsr r9
   56794:	andeq	r6, r5, r0, lsr #16
   56798:	andeq	r6, r5, r4, lsr #15
   5679c:	andeq	r6, r5, r0, lsr #15
   567a0:	b	56af4 <__assert_fail@plt+0x43f3c>
   567a4:	b	567a8 <__assert_fail@plt+0x43bf0>
   567a8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   567ac:	ldr	r1, [fp, #-52]	; 0xffffffcc
   567b0:	cmp	r0, r1
   567b4:	movw	r0, #0
   567b8:	str	r0, [sp, #84]	; 0x54
   567bc:	bge	56800 <__assert_fail@plt+0x43c48>
   567c0:	ldr	r0, [sp, #168]	; 0xa8
   567c4:	ldr	r1, [sp, #164]	; 0xa4
   567c8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   567cc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   567d0:	add	r2, r2, r3
   567d4:	ldrb	r2, [r2]
   567d8:	add	r1, r1, r2
   567dc:	ldrb	r1, [r1]
   567e0:	add	r0, r0, r1
   567e4:	ldrsb	r0, [r0]
   567e8:	cmp	r0, #0
   567ec:	movw	r0, #0
   567f0:	movne	r0, #1
   567f4:	mvn	r1, #0
   567f8:	eor	r0, r0, r1
   567fc:	str	r0, [sp, #84]	; 0x54
   56800:	ldr	r0, [sp, #84]	; 0x54
   56804:	tst	r0, #1
   56808:	beq	5681c <__assert_fail@plt+0x43c64>
   5680c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   56810:	add	r0, r0, #1
   56814:	str	r0, [fp, #-68]	; 0xffffffbc
   56818:	b	567a8 <__assert_fail@plt+0x43bf0>
   5681c:	b	56890 <__assert_fail@plt+0x43cd8>
   56820:	b	56824 <__assert_fail@plt+0x43c6c>
   56824:	ldr	r0, [fp, #-68]	; 0xffffffbc
   56828:	ldr	r1, [fp, #-52]	; 0xffffffcc
   5682c:	cmp	r0, r1
   56830:	movw	r0, #0
   56834:	str	r0, [sp, #80]	; 0x50
   56838:	bge	56870 <__assert_fail@plt+0x43cb8>
   5683c:	ldr	r0, [sp, #168]	; 0xa8
   56840:	ldr	r1, [fp, #-28]	; 0xffffffe4
   56844:	ldr	r2, [fp, #-68]	; 0xffffffbc
   56848:	add	r1, r1, r2
   5684c:	ldrb	r1, [r1]
   56850:	add	r0, r0, r1
   56854:	ldrsb	r0, [r0]
   56858:	cmp	r0, #0
   5685c:	movw	r0, #0
   56860:	movne	r0, #1
   56864:	mvn	r1, #0
   56868:	eor	r0, r0, r1
   5686c:	str	r0, [sp, #80]	; 0x50
   56870:	ldr	r0, [sp, #80]	; 0x50
   56874:	tst	r0, #1
   56878:	beq	5688c <__assert_fail@plt+0x43cd4>
   5687c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   56880:	add	r0, r0, #1
   56884:	str	r0, [fp, #-68]	; 0xffffffbc
   56888:	b	56824 <__assert_fail@plt+0x43c6c>
   5688c:	b	56890 <__assert_fail@plt+0x43cd8>
   56890:	ldr	r0, [fp, #-68]	; 0xffffffbc
   56894:	ldr	r1, [fp, #-52]	; 0xffffffcc
   56898:	cmp	r0, r1
   5689c:	bne	56930 <__assert_fail@plt+0x43d78>
   568a0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   568a4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   568a8:	cmp	r0, r1
   568ac:	blt	568bc <__assert_fail@plt+0x43d04>
   568b0:	movw	r0, #0
   568b4:	str	r0, [sp, #76]	; 0x4c
   568b8:	b	568d0 <__assert_fail@plt+0x43d18>
   568bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   568c0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   568c4:	add	r0, r0, r1
   568c8:	ldrb	r0, [r0]
   568cc:	str	r0, [sp, #76]	; 0x4c
   568d0:	ldr	r0, [sp, #76]	; 0x4c
   568d4:	str	r0, [fp, #-84]	; 0xffffffac
   568d8:	ldr	r0, [sp, #168]	; 0xa8
   568dc:	ldr	r1, [sp, #164]	; 0xa4
   568e0:	movw	r2, #0
   568e4:	cmp	r1, r2
   568e8:	str	r0, [sp, #72]	; 0x48
   568ec:	beq	56908 <__assert_fail@plt+0x43d50>
   568f0:	ldr	r0, [sp, #164]	; 0xa4
   568f4:	ldr	r1, [fp, #-84]	; 0xffffffac
   568f8:	add	r0, r0, r1
   568fc:	ldrb	r0, [r0]
   56900:	str	r0, [sp, #68]	; 0x44
   56904:	b	56910 <__assert_fail@plt+0x43d58>
   56908:	ldr	r0, [fp, #-84]	; 0xffffffac
   5690c:	str	r0, [sp, #68]	; 0x44
   56910:	ldr	r0, [sp, #68]	; 0x44
   56914:	ldr	r1, [sp, #72]	; 0x48
   56918:	add	r0, r1, r0
   5691c:	ldrsb	r0, [r0]
   56920:	cmp	r0, #0
   56924:	bne	5692c <__assert_fail@plt+0x43d74>
   56928:	b	57078 <__assert_fail@plt+0x444c0>
   5692c:	b	56930 <__assert_fail@plt+0x43d78>
   56930:	b	56af4 <__assert_fail@plt+0x43f3c>
   56934:	b	56938 <__assert_fail@plt+0x43d80>
   56938:	ldr	r0, [fp, #-68]	; 0xffffffbc
   5693c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   56940:	cmp	r0, r1
   56944:	blt	569e8 <__assert_fail@plt+0x43e30>
   56948:	ldr	r0, [fp, #-68]	; 0xffffffbc
   5694c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   56950:	cmp	r0, r1
   56954:	blt	56964 <__assert_fail@plt+0x43dac>
   56958:	movw	r0, #0
   5695c:	str	r0, [sp, #64]	; 0x40
   56960:	b	56978 <__assert_fail@plt+0x43dc0>
   56964:	ldr	r0, [fp, #-28]	; 0xffffffe4
   56968:	ldr	r1, [fp, #-68]	; 0xffffffbc
   5696c:	add	r0, r0, r1
   56970:	ldrb	r0, [r0]
   56974:	str	r0, [sp, #64]	; 0x40
   56978:	ldr	r0, [sp, #64]	; 0x40
   5697c:	str	r0, [fp, #-84]	; 0xffffffac
   56980:	ldr	r0, [sp, #168]	; 0xa8
   56984:	ldr	r1, [sp, #164]	; 0xa4
   56988:	movw	r2, #0
   5698c:	cmp	r1, r2
   56990:	str	r0, [sp, #60]	; 0x3c
   56994:	beq	569b0 <__assert_fail@plt+0x43df8>
   56998:	ldr	r0, [sp, #164]	; 0xa4
   5699c:	ldr	r1, [fp, #-84]	; 0xffffffac
   569a0:	add	r0, r0, r1
   569a4:	ldrb	r0, [r0]
   569a8:	str	r0, [sp, #56]	; 0x38
   569ac:	b	569b8 <__assert_fail@plt+0x43e00>
   569b0:	ldr	r0, [fp, #-84]	; 0xffffffac
   569b4:	str	r0, [sp, #56]	; 0x38
   569b8:	ldr	r0, [sp, #56]	; 0x38
   569bc:	ldr	r1, [sp, #60]	; 0x3c
   569c0:	add	r0, r1, r0
   569c4:	ldrsb	r0, [r0]
   569c8:	cmp	r0, #0
   569cc:	beq	569d4 <__assert_fail@plt+0x43e1c>
   569d0:	b	569e8 <__assert_fail@plt+0x43e30>
   569d4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   569d8:	mvn	r1, #0
   569dc:	add	r0, r0, r1
   569e0:	str	r0, [fp, #-68]	; 0xffffffbc
   569e4:	b	56938 <__assert_fail@plt+0x43d80>
   569e8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   569ec:	ldr	r1, [fp, #-48]	; 0xffffffd0
   569f0:	cmp	r0, r1
   569f4:	bge	569fc <__assert_fail@plt+0x43e44>
   569f8:	b	57078 <__assert_fail@plt+0x444c0>
   569fc:	b	56af4 <__assert_fail@plt+0x43f3c>
   56a00:	b	56a04 <__assert_fail@plt+0x43e4c>
   56a04:	ldr	r0, [fp, #-68]	; 0xffffffbc
   56a08:	ldr	r1, [sp, #196]	; 0xc4
   56a0c:	sub	r0, r0, r1
   56a10:	str	r0, [sp, #160]	; 0xa0
   56a14:	ldr	r0, [sp, #160]	; 0xa0
   56a18:	ldr	r1, [sp, #204]	; 0xcc
   56a1c:	cmp	r0, r1
   56a20:	bcc	56a58 <__assert_fail@plt+0x43ea0>
   56a24:	add	r0, sp, #172	; 0xac
   56a28:	ldr	r1, [fp, #-68]	; 0xffffffbc
   56a2c:	ldr	r2, [fp, #24]
   56a30:	bl	62ef0 <__assert_fail@plt+0x50338>
   56a34:	str	r0, [fp, #-40]	; 0xffffffd8
   56a38:	ldr	r0, [fp, #-40]	; 0xffffffd8
   56a3c:	cmp	r0, #0
   56a40:	beq	56a48 <__assert_fail@plt+0x43e90>
   56a44:	b	57078 <__assert_fail@plt+0x444c0>
   56a48:	ldr	r0, [fp, #-68]	; 0xffffffbc
   56a4c:	ldr	r1, [sp, #196]	; 0xc4
   56a50:	sub	r0, r0, r1
   56a54:	str	r0, [sp, #160]	; 0xa0
   56a58:	ldr	r0, [sp, #160]	; 0xa0
   56a5c:	ldr	r1, [sp, #200]	; 0xc8
   56a60:	cmp	r0, r1
   56a64:	bcs	56a80 <__assert_fail@plt+0x43ec8>
   56a68:	ldr	r0, [sp, #176]	; 0xb0
   56a6c:	ldr	r1, [sp, #160]	; 0xa0
   56a70:	add	r0, r0, r1
   56a74:	ldrb	r0, [r0]
   56a78:	str	r0, [sp, #52]	; 0x34
   56a7c:	b	56a8c <__assert_fail@plt+0x43ed4>
   56a80:	movw	r0, #0
   56a84:	str	r0, [sp, #52]	; 0x34
   56a88:	b	56a8c <__assert_fail@plt+0x43ed4>
   56a8c:	ldr	r0, [sp, #52]	; 0x34
   56a90:	str	r0, [fp, #-84]	; 0xffffffac
   56a94:	ldr	r0, [sp, #168]	; 0xa8
   56a98:	ldr	r1, [fp, #-84]	; 0xffffffac
   56a9c:	add	r0, r0, r1
   56aa0:	ldrsb	r0, [r0]
   56aa4:	cmp	r0, #0
   56aa8:	beq	56ab0 <__assert_fail@plt+0x43ef8>
   56aac:	b	56af0 <__assert_fail@plt+0x43f38>
   56ab0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   56ab4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   56ab8:	add	r0, r1, r0
   56abc:	str	r0, [fp, #-68]	; 0xffffffbc
   56ac0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   56ac4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   56ac8:	cmp	r0, r1
   56acc:	blt	56ae0 <__assert_fail@plt+0x43f28>
   56ad0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   56ad4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   56ad8:	cmp	r0, r1
   56adc:	ble	56aec <__assert_fail@plt+0x43f34>
   56ae0:	movw	r0, #1
   56ae4:	str	r0, [fp, #-40]	; 0xffffffd8
   56ae8:	b	57078 <__assert_fail@plt+0x444c0>
   56aec:	b	56a04 <__assert_fail@plt+0x43e4c>
   56af0:	b	56af4 <__assert_fail@plt+0x43f3c>
   56af4:	add	r0, sp, #172	; 0xac
   56af8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   56afc:	ldr	r2, [fp, #24]
   56b00:	bl	62ef0 <__assert_fail@plt+0x50338>
   56b04:	str	r0, [fp, #-40]	; 0xffffffd8
   56b08:	ldr	r0, [fp, #-40]	; 0xffffffd8
   56b0c:	cmp	r0, #0
   56b10:	beq	56b18 <__assert_fail@plt+0x43f60>
   56b14:	b	57078 <__assert_fail@plt+0x444c0>
   56b18:	ldrb	r0, [fp, #-77]	; 0xffffffb3
   56b1c:	tst	r0, #1
   56b20:	bne	56b48 <__assert_fail@plt+0x43f90>
   56b24:	ldr	r0, [sp, #200]	; 0xc8
   56b28:	movw	r1, #0
   56b2c:	cmp	r1, r0
   56b30:	beq	56b48 <__assert_fail@plt+0x43f90>
   56b34:	ldr	r0, [sp, #180]	; 0xb4
   56b38:	ldr	r0, [r0]
   56b3c:	cmn	r0, #1
   56b40:	bne	56b48 <__assert_fail@plt+0x43f90>
   56b44:	b	56ccc <__assert_fail@plt+0x44114>
   56b48:	movw	r0, #0
   56b4c:	str	r0, [sp, #292]	; 0x124
   56b50:	str	r0, [sp, #280]	; 0x118
   56b54:	str	r0, [sp, #276]	; 0x114
   56b58:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   56b5c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   56b60:	ldr	r2, [fp, #8]
   56b64:	cmp	r1, r2
   56b68:	str	r0, [sp, #48]	; 0x30
   56b6c:	bgt	56b7c <__assert_fail@plt+0x43fc4>
   56b70:	sub	r0, fp, #68	; 0x44
   56b74:	str	r0, [sp, #44]	; 0x2c
   56b78:	b	56b88 <__assert_fail@plt+0x43fd0>
   56b7c:	movw	r0, #0
   56b80:	str	r0, [sp, #44]	; 0x2c
   56b84:	b	56b88 <__assert_fail@plt+0x43fd0>
   56b88:	ldr	r0, [sp, #44]	; 0x2c
   56b8c:	add	r1, sp, #172	; 0xac
   56b90:	str	r0, [sp, #40]	; 0x28
   56b94:	mov	r0, r1
   56b98:	ldr	r1, [sp, #48]	; 0x30
   56b9c:	and	r1, r1, #1
   56ba0:	ldr	r2, [sp, #40]	; 0x28
   56ba4:	bl	63adc <__assert_fail@plt+0x50f24>
   56ba8:	str	r0, [fp, #-72]	; 0xffffffb8
   56bac:	ldr	r0, [fp, #-72]	; 0xffffffb8
   56bb0:	cmn	r0, #1
   56bb4:	beq	56cc4 <__assert_fail@plt+0x4410c>
   56bb8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   56bbc:	cmn	r0, #2
   56bc0:	bne	56bd0 <__assert_fail@plt+0x44018>
   56bc4:	movw	r0, #12
   56bc8:	str	r0, [fp, #-40]	; 0xffffffd8
   56bcc:	b	57078 <__assert_fail@plt+0x444c0>
   56bd0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   56bd4:	str	r0, [sp, #264]	; 0x108
   56bd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   56bdc:	ldrb	r0, [r0, #28]
   56be0:	ubfx	r0, r0, #4, #1
   56be4:	and	r0, r0, #255	; 0xff
   56be8:	cmp	r0, #0
   56bec:	bne	56bfc <__assert_fail@plt+0x44044>
   56bf0:	ldr	r0, [fp, #16]
   56bf4:	cmp	r0, #1
   56bf8:	bhi	56c0c <__assert_fail@plt+0x44054>
   56bfc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   56c00:	ldr	r0, [r0, #76]	; 0x4c
   56c04:	cmp	r0, #0
   56c08:	beq	56c34 <__assert_fail@plt+0x4407c>
   56c0c:	ldr	r0, [sp, #272]	; 0x110
   56c10:	ldr	r1, [fp, #-72]	; 0xffffffb8
   56c14:	add	r0, r0, r1, lsl #2
   56c18:	ldr	r0, [r0]
   56c1c:	str	r0, [sp, #156]	; 0x9c
   56c20:	ldr	r1, [sp, #156]	; 0x9c
   56c24:	ldr	r2, [fp, #-72]	; 0xffffffb8
   56c28:	add	r0, sp, #172	; 0xac
   56c2c:	bl	64068 <__assert_fail@plt+0x514b0>
   56c30:	str	r0, [sp, #268]	; 0x10c
   56c34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   56c38:	ldrb	r0, [r0, #28]
   56c3c:	ubfx	r0, r0, #4, #1
   56c40:	and	r0, r0, #255	; 0xff
   56c44:	cmp	r0, #0
   56c48:	bne	56c70 <__assert_fail@plt+0x440b8>
   56c4c:	ldr	r0, [fp, #16]
   56c50:	cmp	r0, #1
   56c54:	bls	56c70 <__assert_fail@plt+0x440b8>
   56c58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   56c5c:	ldrb	r0, [r0, #88]	; 0x58
   56c60:	and	r0, r0, #1
   56c64:	and	r0, r0, #255	; 0xff
   56c68:	cmp	r0, #0
   56c6c:	bne	56c80 <__assert_fail@plt+0x440c8>
   56c70:	ldr	r0, [fp, #-44]	; 0xffffffd4
   56c74:	ldr	r0, [r0, #76]	; 0x4c
   56c78:	cmp	r0, #0
   56c7c:	beq	56cb8 <__assert_fail@plt+0x44100>
   56c80:	add	r0, sp, #172	; 0xac
   56c84:	bl	64140 <__assert_fail@plt+0x51588>
   56c88:	str	r0, [fp, #-40]	; 0xffffffd8
   56c8c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   56c90:	cmp	r0, #0
   56c94:	bne	56c9c <__assert_fail@plt+0x440e4>
   56c98:	b	56ce0 <__assert_fail@plt+0x44128>
   56c9c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   56ca0:	cmp	r0, #1
   56ca4:	beq	56cac <__assert_fail@plt+0x440f4>
   56ca8:	b	57078 <__assert_fail@plt+0x444c0>
   56cac:	mvn	r0, #0
   56cb0:	str	r0, [fp, #-72]	; 0xffffffb8
   56cb4:	b	56cbc <__assert_fail@plt+0x44104>
   56cb8:	b	56ce0 <__assert_fail@plt+0x44128>
   56cbc:	b	56cc0 <__assert_fail@plt+0x44108>
   56cc0:	b	56cc4 <__assert_fail@plt+0x4410c>
   56cc4:	add	r0, sp, #172	; 0xac
   56cc8:	bl	6448c <__assert_fail@plt+0x518d4>
   56ccc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   56cd0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   56cd4:	add	r0, r1, r0
   56cd8:	str	r0, [fp, #-68]	; 0xffffffbc
   56cdc:	b	5673c <__assert_fail@plt+0x43b84>
   56ce0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   56ce4:	cmn	r0, #1
   56ce8:	beq	56cf0 <__assert_fail@plt+0x44138>
   56cec:	b	56cf0 <__assert_fail@plt+0x44138>
   56cf0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   56cf4:	cmp	r0, #0
   56cf8:	bne	56d00 <__assert_fail@plt+0x44148>
   56cfc:	b	56d00 <__assert_fail@plt+0x44148>
   56d00:	ldr	r0, [fp, #16]
   56d04:	cmp	r0, #0
   56d08:	bls	57074 <__assert_fail@plt+0x444bc>
   56d0c:	movw	r0, #1
   56d10:	str	r0, [sp, #152]	; 0x98
   56d14:	ldr	r0, [sp, #152]	; 0x98
   56d18:	ldr	r1, [fp, #16]
   56d1c:	cmp	r0, r1
   56d20:	bcs	56d5c <__assert_fail@plt+0x441a4>
   56d24:	ldr	r0, [fp, #20]
   56d28:	ldr	r1, [sp, #152]	; 0x98
   56d2c:	add	r0, r0, r1, lsl #3
   56d30:	mvn	r1, #0
   56d34:	str	r1, [r0, #4]
   56d38:	ldr	r0, [fp, #20]
   56d3c:	ldr	r1, [sp, #152]	; 0x98
   56d40:	add	r0, r0, r1, lsl #3
   56d44:	mvn	r1, #0
   56d48:	str	r1, [r0]
   56d4c:	ldr	r0, [sp, #152]	; 0x98
   56d50:	add	r0, r0, #1
   56d54:	str	r0, [sp, #152]	; 0x98
   56d58:	b	56d14 <__assert_fail@plt+0x4415c>
   56d5c:	ldr	r0, [fp, #20]
   56d60:	mov	r1, #0
   56d64:	str	r1, [r0]
   56d68:	ldr	r0, [sp, #264]	; 0x108
   56d6c:	ldr	r1, [fp, #20]
   56d70:	str	r0, [r1, #4]
   56d74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   56d78:	ldrb	r0, [r0, #28]
   56d7c:	ubfx	r0, r0, #4, #1
   56d80:	and	r0, r0, #255	; 0xff
   56d84:	cmp	r0, #0
   56d88:	bne	56e2c <__assert_fail@plt+0x44274>
   56d8c:	ldr	r0, [fp, #16]
   56d90:	cmp	r0, #1
   56d94:	bls	56e2c <__assert_fail@plt+0x44274>
   56d98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   56d9c:	ldr	r2, [fp, #16]
   56da0:	ldr	r3, [fp, #20]
   56da4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   56da8:	ldrb	r1, [r1, #88]	; 0x58
   56dac:	and	r1, r1, #1
   56db0:	and	r1, r1, #255	; 0xff
   56db4:	cmp	r1, #0
   56db8:	movw	r1, #0
   56dbc:	str	r0, [sp, #36]	; 0x24
   56dc0:	str	r2, [sp, #32]
   56dc4:	str	r3, [sp, #28]
   56dc8:	str	r1, [sp, #24]
   56dcc:	beq	56de8 <__assert_fail@plt+0x44230>
   56dd0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   56dd4:	ldr	r0, [r0, #76]	; 0x4c
   56dd8:	cmp	r0, #0
   56ddc:	movw	r0, #0
   56de0:	movgt	r0, #1
   56de4:	str	r0, [sp, #24]
   56de8:	ldr	r0, [sp, #24]
   56dec:	ldr	r1, [sp, #36]	; 0x24
   56df0:	str	r0, [sp, #20]
   56df4:	mov	r0, r1
   56df8:	add	r1, sp, #172	; 0xac
   56dfc:	ldr	r2, [sp, #32]
   56e00:	ldr	r3, [sp, #28]
   56e04:	ldr	ip, [sp, #20]
   56e08:	and	lr, ip, #1
   56e0c:	str	lr, [sp]
   56e10:	bl	64598 <__assert_fail@plt+0x519e0>
   56e14:	str	r0, [fp, #-40]	; 0xffffffd8
   56e18:	ldr	r0, [fp, #-40]	; 0xffffffd8
   56e1c:	cmp	r0, #0
   56e20:	beq	56e28 <__assert_fail@plt+0x44270>
   56e24:	b	57078 <__assert_fail@plt+0x444c0>
   56e28:	b	56e2c <__assert_fail@plt+0x44274>
   56e2c:	movw	r0, #0
   56e30:	str	r0, [sp, #152]	; 0x98
   56e34:	ldr	r0, [sp, #152]	; 0x98
   56e38:	ldr	r1, [fp, #16]
   56e3c:	cmp	r0, r1
   56e40:	bcs	56f60 <__assert_fail@plt+0x443a8>
   56e44:	ldr	r0, [fp, #20]
   56e48:	ldr	r1, [sp, #152]	; 0x98
   56e4c:	add	r0, r0, r1, lsl #3
   56e50:	ldr	r0, [r0]
   56e54:	cmn	r0, #1
   56e58:	beq	56f4c <__assert_fail@plt+0x44394>
   56e5c:	ldrb	r0, [sp, #248]	; 0xf8
   56e60:	cmp	r0, #0
   56e64:	beq	56f18 <__assert_fail@plt+0x44360>
   56e68:	ldr	r0, [fp, #20]
   56e6c:	ldr	r1, [sp, #152]	; 0x98
   56e70:	add	r0, r0, r1, lsl #3
   56e74:	ldr	r0, [r0]
   56e78:	ldr	r1, [sp, #200]	; 0xc8
   56e7c:	cmp	r0, r1
   56e80:	bne	56e90 <__assert_fail@plt+0x442d8>
   56e84:	ldr	r0, [sp, #204]	; 0xcc
   56e88:	str	r0, [sp, #16]
   56e8c:	b	56eac <__assert_fail@plt+0x442f4>
   56e90:	ldr	r0, [sp, #184]	; 0xb8
   56e94:	ldr	r1, [fp, #20]
   56e98:	ldr	r2, [sp, #152]	; 0x98
   56e9c:	ldr	r1, [r1, r2, lsl #3]
   56ea0:	add	r0, r0, r1, lsl #2
   56ea4:	ldr	r0, [r0]
   56ea8:	str	r0, [sp, #16]
   56eac:	ldr	r0, [sp, #16]
   56eb0:	ldr	r1, [fp, #20]
   56eb4:	ldr	r2, [sp, #152]	; 0x98
   56eb8:	str	r0, [r1, r2, lsl #3]
   56ebc:	ldr	r0, [fp, #20]
   56ec0:	ldr	r1, [sp, #152]	; 0x98
   56ec4:	add	r0, r0, r1, lsl #3
   56ec8:	ldr	r0, [r0, #4]
   56ecc:	ldr	r1, [sp, #200]	; 0xc8
   56ed0:	cmp	r0, r1
   56ed4:	bne	56ee4 <__assert_fail@plt+0x4432c>
   56ed8:	ldr	r0, [sp, #204]	; 0xcc
   56edc:	str	r0, [sp, #12]
   56ee0:	b	56f04 <__assert_fail@plt+0x4434c>
   56ee4:	ldr	r0, [sp, #184]	; 0xb8
   56ee8:	ldr	r1, [fp, #20]
   56eec:	ldr	r2, [sp, #152]	; 0x98
   56ef0:	add	r1, r1, r2, lsl #3
   56ef4:	ldr	r1, [r1, #4]
   56ef8:	add	r0, r0, r1, lsl #2
   56efc:	ldr	r0, [r0]
   56f00:	str	r0, [sp, #12]
   56f04:	ldr	r0, [sp, #12]
   56f08:	ldr	r1, [fp, #20]
   56f0c:	ldr	r2, [sp, #152]	; 0x98
   56f10:	add	r1, r1, r2, lsl #3
   56f14:	str	r0, [r1, #4]
   56f18:	ldr	r0, [fp, #-68]	; 0xffffffbc
   56f1c:	ldr	r1, [fp, #20]
   56f20:	ldr	r2, [sp, #152]	; 0x98
   56f24:	ldr	r3, [r1, r2, lsl #3]
   56f28:	add	r0, r3, r0
   56f2c:	str	r0, [r1, r2, lsl #3]
   56f30:	ldr	r0, [fp, #-68]	; 0xffffffbc
   56f34:	ldr	r1, [fp, #20]
   56f38:	ldr	r2, [sp, #152]	; 0x98
   56f3c:	add	r1, r1, r2, lsl #3
   56f40:	ldr	r2, [r1, #4]
   56f44:	add	r0, r2, r0
   56f48:	str	r0, [r1, #4]
   56f4c:	b	56f50 <__assert_fail@plt+0x44398>
   56f50:	ldr	r0, [sp, #152]	; 0x98
   56f54:	add	r0, r0, #1
   56f58:	str	r0, [sp, #152]	; 0x98
   56f5c:	b	56e34 <__assert_fail@plt+0x4427c>
   56f60:	movw	r0, #0
   56f64:	str	r0, [sp, #152]	; 0x98
   56f68:	ldr	r0, [sp, #152]	; 0x98
   56f6c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   56f70:	cmp	r0, r1
   56f74:	bge	56fbc <__assert_fail@plt+0x44404>
   56f78:	ldr	r0, [fp, #20]
   56f7c:	ldr	r1, [fp, #16]
   56f80:	ldr	r2, [sp, #152]	; 0x98
   56f84:	add	r1, r1, r2
   56f88:	mvn	r2, #0
   56f8c:	str	r2, [r0, r1, lsl #3]
   56f90:	ldr	r0, [fp, #20]
   56f94:	ldr	r1, [fp, #16]
   56f98:	ldr	r2, [sp, #152]	; 0x98
   56f9c:	add	r1, r1, r2
   56fa0:	add	r0, r0, r1, lsl #3
   56fa4:	mvn	r1, #0
   56fa8:	str	r1, [r0, #4]
   56fac:	ldr	r0, [sp, #152]	; 0x98
   56fb0:	add	r0, r0, #1
   56fb4:	str	r0, [sp, #152]	; 0x98
   56fb8:	b	56f68 <__assert_fail@plt+0x443b0>
   56fbc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   56fc0:	ldr	r0, [r0, #132]	; 0x84
   56fc4:	movw	r1, #0
   56fc8:	cmp	r0, r1
   56fcc:	beq	57070 <__assert_fail@plt+0x444b8>
   56fd0:	movw	r0, #0
   56fd4:	str	r0, [sp, #152]	; 0x98
   56fd8:	ldr	r0, [sp, #152]	; 0x98
   56fdc:	add	r0, r0, #1
   56fe0:	ldr	r1, [fp, #16]
   56fe4:	cmp	r0, r1
   56fe8:	bcs	5706c <__assert_fail@plt+0x444b4>
   56fec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   56ff0:	ldr	r0, [r0, #132]	; 0x84
   56ff4:	ldr	r1, [sp, #152]	; 0x98
   56ff8:	add	r0, r0, r1, lsl #2
   56ffc:	ldr	r0, [r0]
   57000:	ldr	r1, [sp, #152]	; 0x98
   57004:	cmp	r0, r1
   57008:	beq	57058 <__assert_fail@plt+0x444a0>
   5700c:	ldr	r0, [fp, #20]
   57010:	ldr	r1, [fp, #-44]	; 0xffffffd4
   57014:	ldr	r1, [r1, #132]	; 0x84
   57018:	ldr	r2, [sp, #152]	; 0x98
   5701c:	ldr	r1, [r1, r2, lsl #2]
   57020:	add	r1, r0, r1, lsl #3
   57024:	ldr	r1, [r1, #8]
   57028:	add	r0, r0, r2, lsl #3
   5702c:	str	r1, [r0, #8]
   57030:	ldr	r0, [fp, #20]
   57034:	ldr	r1, [fp, #-44]	; 0xffffffd4
   57038:	ldr	r1, [r1, #132]	; 0x84
   5703c:	ldr	r2, [sp, #152]	; 0x98
   57040:	ldr	r1, [r1, r2, lsl #2]
   57044:	add	r1, r0, r1, lsl #3
   57048:	ldr	r1, [r1, #12]
   5704c:	add	r2, r2, #1
   57050:	add	r0, r0, r2, lsl #3
   57054:	str	r1, [r0, #4]
   57058:	b	5705c <__assert_fail@plt+0x444a4>
   5705c:	ldr	r0, [sp, #152]	; 0x98
   57060:	add	r0, r0, #1
   57064:	str	r0, [sp, #152]	; 0x98
   57068:	b	56fd8 <__assert_fail@plt+0x44420>
   5706c:	b	57070 <__assert_fail@plt+0x444b8>
   57070:	b	57074 <__assert_fail@plt+0x444bc>
   57074:	b	57078 <__assert_fail@plt+0x444c0>
   57078:	ldr	r0, [sp, #272]	; 0x110
   5707c:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   57080:	ldr	r0, [fp, #-44]	; 0xffffffd4
   57084:	ldr	r0, [r0, #76]	; 0x4c
   57088:	cmp	r0, #0
   5708c:	beq	57098 <__assert_fail@plt+0x444e0>
   57090:	add	r0, sp, #172	; 0xac
   57094:	bl	64960 <__assert_fail@plt+0x51da8>
   57098:	add	r0, sp, #172	; 0xac
   5709c:	bl	583d8 <__assert_fail@plt+0x45820>
   570a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   570a4:	str	r0, [fp, #-20]	; 0xffffffec
   570a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   570ac:	sub	sp, fp, #16
   570b0:	pop	{r4, r5, r6, sl, fp, pc}
   570b4:	svccc	0x00ffffff
   570b8:	push	{r4, r5, fp, lr}
   570bc:	add	fp, sp, #8
   570c0:	sub	sp, sp, #40	; 0x28
   570c4:	ldr	ip, [fp, #8]
   570c8:	str	r0, [fp, #-12]
   570cc:	str	r1, [fp, #-16]
   570d0:	str	r2, [fp, #-20]	; 0xffffffec
   570d4:	str	r3, [sp, #24]
   570d8:	ldr	r0, [fp, #-12]
   570dc:	ldr	r1, [fp, #-16]
   570e0:	ldr	r2, [fp, #-20]	; 0xffffffec
   570e4:	ldr	r3, [sp, #24]
   570e8:	ldr	lr, [fp, #-20]	; 0xffffffec
   570ec:	ldr	r4, [fp, #8]
   570f0:	movw	r5, #0
   570f4:	str	r5, [sp]
   570f8:	str	lr, [sp, #4]
   570fc:	str	r4, [sp, #8]
   57100:	movw	lr, #1
   57104:	and	lr, lr, #1
   57108:	str	lr, [sp, #12]
   5710c:	str	ip, [sp, #20]
   57110:	bl	5711c <__assert_fail@plt+0x44564>
   57114:	sub	sp, fp, #8
   57118:	pop	{r4, r5, fp, pc}
   5711c:	push	{r4, r5, r6, sl, fp, lr}
   57120:	add	fp, sp, #16
   57124:	sub	sp, sp, #96	; 0x60
   57128:	ldr	ip, [fp, #20]
   5712c:	ldr	lr, [fp, #16]
   57130:	ldr	r4, [fp, #12]
   57134:	ldr	r5, [fp, #8]
   57138:	str	r0, [fp, #-24]	; 0xffffffe8
   5713c:	str	r1, [fp, #-28]	; 0xffffffe4
   57140:	str	r2, [fp, #-32]	; 0xffffffe0
   57144:	str	r3, [fp, #-36]	; 0xffffffdc
   57148:	and	r0, ip, #1
   5714c:	strb	r0, [fp, #-37]	; 0xffffffdb
   57150:	movw	r0, #0
   57154:	str	r0, [sp, #52]	; 0x34
   57158:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5715c:	ldr	r0, [r0]
   57160:	str	r0, [sp, #48]	; 0x30
   57164:	ldr	r0, [fp, #-36]	; 0xffffffdc
   57168:	ldr	r1, [fp, #8]
   5716c:	add	r0, r0, r1
   57170:	str	r0, [sp, #44]	; 0x2c
   57174:	ldr	r0, [fp, #-36]	; 0xffffffdc
   57178:	cmp	r0, #0
   5717c:	movw	r0, #1
   57180:	str	r0, [sp, #40]	; 0x28
   57184:	blt	571a0 <__assert_fail@plt+0x445e8>
   57188:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5718c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   57190:	cmp	r0, r1
   57194:	movw	r0, #0
   57198:	movgt	r0, #1
   5719c:	str	r0, [sp, #40]	; 0x28
   571a0:	ldr	r0, [sp, #40]	; 0x28
   571a4:	tst	r0, #1
   571a8:	beq	571b8 <__assert_fail@plt+0x44600>
   571ac:	mvn	r0, #0
   571b0:	str	r0, [fp, #-20]	; 0xffffffec
   571b4:	b	575d0 <__assert_fail@plt+0x44a18>
   571b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   571bc:	ldr	r1, [sp, #44]	; 0x2c
   571c0:	cmp	r0, r1
   571c4:	movw	r0, #1
   571c8:	str	r0, [sp, #36]	; 0x24
   571cc:	blt	57208 <__assert_fail@plt+0x44650>
   571d0:	ldr	r0, [fp, #8]
   571d4:	movw	r1, #0
   571d8:	cmp	r1, r0
   571dc:	movw	r0, #0
   571e0:	str	r0, [sp, #32]
   571e4:	bgt	57200 <__assert_fail@plt+0x44648>
   571e8:	ldr	r0, [sp, #44]	; 0x2c
   571ec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   571f0:	cmp	r0, r1
   571f4:	movw	r0, #0
   571f8:	movlt	r0, #1
   571fc:	str	r0, [sp, #32]
   57200:	ldr	r0, [sp, #32]
   57204:	str	r0, [sp, #36]	; 0x24
   57208:	ldr	r0, [sp, #36]	; 0x24
   5720c:	tst	r0, #1
   57210:	beq	57220 <__assert_fail@plt+0x44668>
   57214:	ldr	r0, [fp, #-32]	; 0xffffffe0
   57218:	str	r0, [sp, #44]	; 0x2c
   5721c:	b	57280 <__assert_fail@plt+0x446c8>
   57220:	ldr	r0, [sp, #44]	; 0x2c
   57224:	cmp	r0, #0
   57228:	movw	r0, #1
   5722c:	str	r0, [sp, #28]
   57230:	blt	57268 <__assert_fail@plt+0x446b0>
   57234:	ldr	r0, [fp, #8]
   57238:	cmp	r0, #0
   5723c:	movw	r0, #0
   57240:	str	r0, [sp, #24]
   57244:	bge	57260 <__assert_fail@plt+0x446a8>
   57248:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5724c:	ldr	r1, [sp, #44]	; 0x2c
   57250:	cmp	r0, r1
   57254:	movw	r0, #0
   57258:	movle	r0, #1
   5725c:	str	r0, [sp, #24]
   57260:	ldr	r0, [sp, #24]
   57264:	str	r0, [sp, #28]
   57268:	ldr	r0, [sp, #28]
   5726c:	tst	r0, #1
   57270:	beq	5727c <__assert_fail@plt+0x446c4>
   57274:	movw	r0, #0
   57278:	str	r0, [sp, #44]	; 0x2c
   5727c:	b	57280 <__assert_fail@plt+0x446c8>
   57280:	movw	r0, #10532	; 0x2924
   57284:	movt	r0, #1
   57288:	cmp	r0, #0
   5728c:	bne	572a8 <__assert_fail@plt+0x446f0>
   57290:	b	57294 <__assert_fail@plt+0x446dc>
   57294:	movw	r0, #9620	; 0x2594
   57298:	movt	r0, #1
   5729c:	cmp	r0, #0
   572a0:	beq	572b8 <__assert_fail@plt+0x44700>
   572a4:	b	572a8 <__assert_fail@plt+0x446f0>
   572a8:	ldr	r0, [sp, #48]	; 0x30
   572ac:	add	r0, r0, #136	; 0x88
   572b0:	bl	12570 <pthread_mutex_lock@plt>
   572b4:	b	572bc <__assert_fail@plt+0x44704>
   572b8:	b	572bc <__assert_fail@plt+0x44704>
   572bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   572c0:	ldrb	r0, [r0, #28]
   572c4:	ldr	r1, [sp, #52]	; 0x34
   572c8:	orr	r2, r1, #1
   572cc:	mov	r3, #1
   572d0:	tst	r3, r0, lsr #5
   572d4:	movne	r1, r2
   572d8:	str	r1, [sp, #52]	; 0x34
   572dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   572e0:	ldrb	r0, [r0, #28]
   572e4:	ubfx	r0, r0, #6, #1
   572e8:	and	r0, r0, #255	; 0xff
   572ec:	cmp	r0, #0
   572f0:	movw	r0, #0
   572f4:	movne	r0, #1
   572f8:	tst	r0, #1
   572fc:	movw	r0, #2
   57300:	moveq	r0, #0
   57304:	ldr	r1, [sp, #52]	; 0x34
   57308:	orr	r0, r1, r0
   5730c:	str	r0, [sp, #52]	; 0x34
   57310:	ldr	r0, [fp, #-36]	; 0xffffffdc
   57314:	ldr	r1, [sp, #44]	; 0x2c
   57318:	cmp	r0, r1
   5731c:	bge	57354 <__assert_fail@plt+0x4479c>
   57320:	ldr	r0, [fp, #-24]	; 0xffffffe8
   57324:	ldr	r0, [r0, #16]
   57328:	movw	r1, #0
   5732c:	cmp	r0, r1
   57330:	beq	57354 <__assert_fail@plt+0x4479c>
   57334:	ldr	r0, [fp, #-24]	; 0xffffffe8
   57338:	ldrb	r0, [r0, #28]
   5733c:	ubfx	r0, r0, #3, #1
   57340:	and	r0, r0, #255	; 0xff
   57344:	cmp	r0, #0
   57348:	bne	57354 <__assert_fail@plt+0x4479c>
   5734c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   57350:	bl	55168 <__assert_fail@plt+0x425b0>
   57354:	ldr	r0, [fp, #-24]	; 0xffffffe8
   57358:	ldrb	r0, [r0, #28]
   5735c:	ubfx	r0, r0, #4, #1
   57360:	and	r0, r0, #255	; 0xff
   57364:	cmp	r0, #0
   57368:	beq	57374 <__assert_fail@plt+0x447bc>
   5736c:	movw	r0, #0
   57370:	str	r0, [fp, #16]
   57374:	ldr	r0, [fp, #16]
   57378:	movw	r1, #0
   5737c:	cmp	r0, r1
   57380:	bne	57390 <__assert_fail@plt+0x447d8>
   57384:	movw	r0, #1
   57388:	str	r0, [fp, #-52]	; 0xffffffcc
   5738c:	b	5741c <__assert_fail@plt+0x44864>
   57390:	ldr	r0, [fp, #-24]	; 0xffffffe8
   57394:	ldrb	r0, [r0, #28]
   57398:	ubfx	r0, r0, #1, #2
   5739c:	and	r0, r0, #255	; 0xff
   573a0:	cmp	r0, #2
   573a4:	movw	r0, #0
   573a8:	str	r0, [sp, #20]
   573ac:	bne	573d0 <__assert_fail@plt+0x44818>
   573b0:	ldr	r0, [fp, #16]
   573b4:	ldr	r0, [r0]
   573b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   573bc:	ldr	r1, [r1, #24]
   573c0:	cmp	r0, r1
   573c4:	movw	r0, #0
   573c8:	movls	r0, #1
   573cc:	str	r0, [sp, #20]
   573d0:	ldr	r0, [sp, #20]
   573d4:	tst	r0, #1
   573d8:	beq	57408 <__assert_fail@plt+0x44850>
   573dc:	ldr	r0, [fp, #16]
   573e0:	ldr	r0, [r0]
   573e4:	str	r0, [fp, #-52]	; 0xffffffcc
   573e8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   573ec:	cmp	r0, #1
   573f0:	bge	57404 <__assert_fail@plt+0x4484c>
   573f4:	movw	r0, #0
   573f8:	str	r0, [fp, #16]
   573fc:	movw	r0, #1
   57400:	str	r0, [fp, #-52]	; 0xffffffcc
   57404:	b	57418 <__assert_fail@plt+0x44860>
   57408:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5740c:	ldr	r0, [r0, #24]
   57410:	add	r0, r0, #1
   57414:	str	r0, [fp, #-52]	; 0xffffffcc
   57418:	b	5741c <__assert_fail@plt+0x44864>
   5741c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   57420:	lsl	r0, r0, #3
   57424:	bl	527f0 <__assert_fail@plt+0x3fc38>
   57428:	str	r0, [fp, #-48]	; 0xffffffd0
   5742c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   57430:	movw	r1, #0
   57434:	cmp	r0, r1
   57438:	bne	57448 <__assert_fail@plt+0x44890>
   5743c:	mvn	r0, #1
   57440:	str	r0, [sp, #56]	; 0x38
   57444:	b	5758c <__assert_fail@plt+0x449d4>
   57448:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5744c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   57450:	ldr	r2, [fp, #-32]	; 0xffffffe0
   57454:	ldr	r3, [fp, #-36]	; 0xffffffdc
   57458:	ldr	ip, [sp, #44]	; 0x2c
   5745c:	ldr	lr, [fp, #12]
   57460:	ldr	r4, [fp, #-52]	; 0xffffffcc
   57464:	ldr	r5, [fp, #-48]	; 0xffffffd0
   57468:	ldr	r6, [sp, #52]	; 0x34
   5746c:	str	ip, [sp]
   57470:	str	lr, [sp, #4]
   57474:	str	r4, [sp, #8]
   57478:	str	r5, [sp, #12]
   5747c:	str	r6, [sp, #16]
   57480:	bl	561a4 <__assert_fail@plt+0x435ec>
   57484:	str	r0, [fp, #-44]	; 0xffffffd4
   57488:	movw	r0, #0
   5748c:	str	r0, [sp, #56]	; 0x38
   57490:	ldr	r0, [fp, #-44]	; 0xffffffd4
   57494:	cmp	r0, #0
   57498:	beq	574c0 <__assert_fail@plt+0x44908>
   5749c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   574a0:	cmp	r0, #1
   574a4:	movw	r0, #0
   574a8:	moveq	r0, #1
   574ac:	tst	r0, #1
   574b0:	mvn	r0, #0
   574b4:	mvneq	r0, #1
   574b8:	str	r0, [sp, #56]	; 0x38
   574bc:	b	5752c <__assert_fail@plt+0x44974>
   574c0:	ldr	r0, [fp, #16]
   574c4:	movw	r1, #0
   574c8:	cmp	r0, r1
   574cc:	beq	57528 <__assert_fail@plt+0x44970>
   574d0:	ldr	r0, [fp, #16]
   574d4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   574d8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   574dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   574e0:	ldrb	r3, [r3, #28]
   574e4:	ubfx	r3, r3, #1, #2
   574e8:	bl	62998 <__assert_fail@plt+0x4fde0>
   574ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   574f0:	ldrb	r2, [r1, #28]
   574f4:	and	r0, r0, #3
   574f8:	and	r2, r2, #249	; 0xf9
   574fc:	orr	r0, r2, r0, lsl #1
   57500:	strb	r0, [r1, #28]
   57504:	ldr	r0, [fp, #-24]	; 0xffffffe8
   57508:	ldrb	r0, [r0, #28]
   5750c:	ubfx	r0, r0, #1, #2
   57510:	and	r0, r0, #255	; 0xff
   57514:	cmp	r0, #0
   57518:	bne	57524 <__assert_fail@plt+0x4496c>
   5751c:	mvn	r0, #1
   57520:	str	r0, [sp, #56]	; 0x38
   57524:	b	57528 <__assert_fail@plt+0x44970>
   57528:	b	5752c <__assert_fail@plt+0x44974>
   5752c:	ldr	r0, [sp, #56]	; 0x38
   57530:	cmp	r0, #0
   57534:	bne	57584 <__assert_fail@plt+0x449cc>
   57538:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   5753c:	tst	r0, #1
   57540:	beq	57574 <__assert_fail@plt+0x449bc>
   57544:	ldr	r0, [fp, #-48]	; 0xffffffd0
   57548:	ldr	r0, [r0]
   5754c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   57550:	cmp	r0, r1
   57554:	bne	5755c <__assert_fail@plt+0x449a4>
   57558:	b	5755c <__assert_fail@plt+0x449a4>
   5755c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   57560:	ldr	r0, [r0, #4]
   57564:	ldr	r1, [fp, #-36]	; 0xffffffdc
   57568:	sub	r0, r0, r1
   5756c:	str	r0, [sp, #56]	; 0x38
   57570:	b	57580 <__assert_fail@plt+0x449c8>
   57574:	ldr	r0, [fp, #-48]	; 0xffffffd0
   57578:	ldr	r0, [r0]
   5757c:	str	r0, [sp, #56]	; 0x38
   57580:	b	57584 <__assert_fail@plt+0x449cc>
   57584:	ldr	r0, [fp, #-48]	; 0xffffffd0
   57588:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   5758c:	movw	r0, #10532	; 0x2924
   57590:	movt	r0, #1
   57594:	cmp	r0, #0
   57598:	bne	575b4 <__assert_fail@plt+0x449fc>
   5759c:	b	575a0 <__assert_fail@plt+0x449e8>
   575a0:	movw	r0, #9620	; 0x2594
   575a4:	movt	r0, #1
   575a8:	cmp	r0, #0
   575ac:	beq	575c4 <__assert_fail@plt+0x44a0c>
   575b0:	b	575b4 <__assert_fail@plt+0x449fc>
   575b4:	ldr	r0, [sp, #48]	; 0x30
   575b8:	add	r0, r0, #136	; 0x88
   575bc:	bl	1242c <pthread_mutex_unlock@plt>
   575c0:	b	575c8 <__assert_fail@plt+0x44a10>
   575c4:	b	575c8 <__assert_fail@plt+0x44a10>
   575c8:	ldr	r0, [sp, #56]	; 0x38
   575cc:	str	r0, [fp, #-20]	; 0xffffffec
   575d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   575d4:	sub	sp, fp, #16
   575d8:	pop	{r4, r5, r6, sl, fp, pc}
   575dc:	push	{r4, r5, r6, sl, fp, lr}
   575e0:	add	fp, sp, #16
   575e4:	sub	sp, sp, #40	; 0x28
   575e8:	ldr	ip, [fp, #12]
   575ec:	ldr	lr, [fp, #8]
   575f0:	str	r0, [fp, #-20]	; 0xffffffec
   575f4:	str	r1, [fp, #-24]	; 0xffffffe8
   575f8:	str	r2, [sp, #28]
   575fc:	str	r3, [sp, #24]
   57600:	ldr	r0, [fp, #-20]	; 0xffffffec
   57604:	ldr	r1, [fp, #-24]	; 0xffffffe8
   57608:	ldr	r2, [sp, #28]
   5760c:	ldr	r3, [sp, #24]
   57610:	ldr	r4, [fp, #8]
   57614:	ldr	r5, [sp, #28]
   57618:	ldr	r6, [fp, #12]
   5761c:	str	r4, [sp]
   57620:	str	r5, [sp, #4]
   57624:	str	r6, [sp, #8]
   57628:	movw	r4, #0
   5762c:	and	r4, r4, #1
   57630:	str	r4, [sp, #12]
   57634:	str	ip, [sp, #20]
   57638:	str	lr, [sp, #16]
   5763c:	bl	5711c <__assert_fail@plt+0x44564>
   57640:	sub	sp, fp, #16
   57644:	pop	{r4, r5, r6, sl, fp, pc}
   57648:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   5764c:	add	fp, sp, #24
   57650:	sub	sp, sp, #56	; 0x38
   57654:	ldr	ip, [fp, #20]
   57658:	ldr	lr, [fp, #16]
   5765c:	ldr	r4, [fp, #12]
   57660:	ldr	r5, [fp, #8]
   57664:	str	r0, [fp, #-28]	; 0xffffffe4
   57668:	str	r1, [fp, #-32]	; 0xffffffe0
   5766c:	str	r2, [fp, #-36]	; 0xffffffdc
   57670:	str	r3, [sp, #40]	; 0x28
   57674:	ldr	r0, [fp, #-28]	; 0xffffffe4
   57678:	ldr	r1, [fp, #-32]	; 0xffffffe0
   5767c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   57680:	ldr	r3, [sp, #40]	; 0x28
   57684:	ldr	r6, [fp, #8]
   57688:	ldr	r7, [fp, #12]
   5768c:	ldr	r8, [fp, #16]
   57690:	ldr	r9, [fp, #20]
   57694:	str	r6, [sp]
   57698:	str	r7, [sp, #4]
   5769c:	movw	r6, #0
   576a0:	str	r6, [sp, #8]
   576a4:	str	r8, [sp, #12]
   576a8:	str	r9, [sp, #16]
   576ac:	movw	r6, #1
   576b0:	and	r6, r6, #1
   576b4:	str	r6, [sp, #20]
   576b8:	str	ip, [sp, #36]	; 0x24
   576bc:	str	lr, [sp, #32]
   576c0:	str	r4, [sp, #28]
   576c4:	str	r5, [sp, #24]
   576c8:	bl	576d4 <__assert_fail@plt+0x44b1c>
   576cc:	sub	sp, fp, #24
   576d0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   576d4:	push	{r4, r5, r6, r7, fp, lr}
   576d8:	add	fp, sp, #16
   576dc:	sub	sp, sp, #64	; 0x40
   576e0:	ldr	ip, [fp, #28]
   576e4:	ldr	lr, [fp, #24]
   576e8:	ldr	r4, [fp, #20]
   576ec:	ldr	r5, [fp, #16]
   576f0:	ldr	r6, [fp, #12]
   576f4:	ldr	r7, [fp, #8]
   576f8:	str	r0, [fp, #-24]	; 0xffffffe8
   576fc:	str	r1, [fp, #-28]	; 0xffffffe4
   57700:	str	r2, [fp, #-32]	; 0xffffffe0
   57704:	str	r3, [fp, #-36]	; 0xffffffdc
   57708:	and	r0, ip, #1
   5770c:	strb	r0, [fp, #-37]	; 0xffffffdb
   57710:	movw	r0, #0
   57714:	str	r0, [sp, #24]
   57718:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5771c:	cmp	r0, #0
   57720:	movw	r0, #1
   57724:	str	r0, [sp, #20]
   57728:	blt	57774 <__assert_fail@plt+0x44bbc>
   5772c:	ldr	r0, [fp, #8]
   57730:	cmp	r0, #0
   57734:	movw	r0, #1
   57738:	str	r0, [sp, #20]
   5773c:	blt	57774 <__assert_fail@plt+0x44bbc>
   57740:	ldr	r0, [fp, #24]
   57744:	cmp	r0, #0
   57748:	movw	r0, #1
   5774c:	str	r0, [sp, #20]
   57750:	blt	57774 <__assert_fail@plt+0x44bbc>
   57754:	ldr	r0, [fp, #-32]	; 0xffffffe0
   57758:	ldr	r1, [fp, #8]
   5775c:	add	r1, r0, r1
   57760:	mov	r2, #1
   57764:	cmp	r1, r0
   57768:	movwvc	r2, #0
   5776c:	str	r1, [sp, #28]
   57770:	str	r2, [sp, #20]
   57774:	ldr	r0, [sp, #20]
   57778:	tst	r0, #1
   5777c:	beq	5778c <__assert_fail@plt+0x44bd4>
   57780:	mvn	r0, #1
   57784:	str	r0, [fp, #-20]	; 0xffffffec
   57788:	b	57868 <__assert_fail@plt+0x44cb0>
   5778c:	ldr	r0, [fp, #8]
   57790:	cmp	r0, #0
   57794:	ble	57814 <__assert_fail@plt+0x44c5c>
   57798:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5779c:	cmp	r0, #0
   577a0:	ble	57808 <__assert_fail@plt+0x44c50>
   577a4:	ldr	r0, [sp, #28]
   577a8:	mov	r1, r0
   577ac:	str	r1, [sp, #16]
   577b0:	bl	527f0 <__assert_fail@plt+0x3fc38>
   577b4:	str	r0, [sp, #24]
   577b8:	ldr	r0, [sp, #24]
   577bc:	movw	r1, #0
   577c0:	cmp	r0, r1
   577c4:	bne	577d4 <__assert_fail@plt+0x44c1c>
   577c8:	mvn	r0, #1
   577cc:	str	r0, [fp, #-20]	; 0xffffffec
   577d0:	b	57868 <__assert_fail@plt+0x44cb0>
   577d4:	ldr	r0, [sp, #24]
   577d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   577dc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   577e0:	bl	125c4 <memcpy@plt>
   577e4:	ldr	r0, [sp, #24]
   577e8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   577ec:	add	r0, r0, r1
   577f0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   577f4:	ldr	r2, [fp, #8]
   577f8:	bl	125c4 <memcpy@plt>
   577fc:	ldr	r0, [sp, #24]
   57800:	str	r0, [sp, #36]	; 0x24
   57804:	b	57810 <__assert_fail@plt+0x44c58>
   57808:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5780c:	str	r0, [sp, #36]	; 0x24
   57810:	b	5781c <__assert_fail@plt+0x44c64>
   57814:	ldr	r0, [fp, #-28]	; 0xffffffe4
   57818:	str	r0, [sp, #36]	; 0x24
   5781c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   57820:	ldr	r1, [sp, #36]	; 0x24
   57824:	ldr	r2, [sp, #28]
   57828:	ldr	r3, [fp, #12]
   5782c:	ldr	ip, [fp, #16]
   57830:	ldr	lr, [fp, #24]
   57834:	ldr	r4, [fp, #20]
   57838:	ldrb	r5, [fp, #-37]	; 0xffffffdb
   5783c:	str	ip, [sp]
   57840:	str	lr, [sp, #4]
   57844:	str	r4, [sp, #8]
   57848:	and	ip, r5, #1
   5784c:	str	ip, [sp, #12]
   57850:	bl	5711c <__assert_fail@plt+0x44564>
   57854:	str	r0, [sp, #32]
   57858:	ldr	r0, [sp, #24]
   5785c:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   57860:	ldr	r0, [sp, #32]
   57864:	str	r0, [fp, #-20]	; 0xffffffec
   57868:	ldr	r0, [fp, #-20]	; 0xffffffec
   5786c:	sub	sp, fp, #16
   57870:	pop	{r4, r5, r6, r7, fp, pc}
   57874:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   57878:	add	fp, sp, #28
   5787c:	sub	sp, sp, #68	; 0x44
   57880:	ldr	ip, [fp, #24]
   57884:	ldr	lr, [fp, #20]
   57888:	ldr	r4, [fp, #16]
   5788c:	ldr	r5, [fp, #12]
   57890:	ldr	r6, [fp, #8]
   57894:	str	r0, [fp, #-32]	; 0xffffffe0
   57898:	str	r1, [fp, #-36]	; 0xffffffdc
   5789c:	str	r2, [fp, #-40]	; 0xffffffd8
   578a0:	str	r3, [fp, #-44]	; 0xffffffd4
   578a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   578a8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   578ac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   578b0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   578b4:	ldr	r7, [fp, #8]
   578b8:	ldr	r8, [fp, #12]
   578bc:	ldr	r9, [fp, #16]
   578c0:	ldr	sl, [fp, #20]
   578c4:	str	r0, [sp, #48]	; 0x30
   578c8:	ldr	r0, [fp, #24]
   578cc:	str	r0, [sp, #44]	; 0x2c
   578d0:	ldr	r0, [sp, #48]	; 0x30
   578d4:	str	r7, [sp]
   578d8:	str	r8, [sp, #4]
   578dc:	str	r9, [sp, #8]
   578e0:	str	sl, [sp, #12]
   578e4:	ldr	r7, [sp, #44]	; 0x2c
   578e8:	str	r7, [sp, #16]
   578ec:	movw	r8, #0
   578f0:	and	r8, r8, #1
   578f4:	str	r8, [sp, #20]
   578f8:	str	ip, [sp, #40]	; 0x28
   578fc:	str	lr, [sp, #36]	; 0x24
   57900:	str	r4, [sp, #32]
   57904:	str	r5, [sp, #28]
   57908:	str	r6, [sp, #24]
   5790c:	bl	576d4 <__assert_fail@plt+0x44b1c>
   57910:	sub	sp, fp, #28
   57914:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   57918:	sub	sp, sp, #16
   5791c:	ldr	ip, [sp, #16]
   57920:	str	r0, [sp, #12]
   57924:	str	r1, [sp, #8]
   57928:	str	r2, [sp, #4]
   5792c:	str	r3, [sp]
   57930:	ldr	r0, [sp, #4]
   57934:	cmp	r0, #0
   57938:	beq	5797c <__assert_fail@plt+0x44dc4>
   5793c:	ldr	r0, [sp, #12]
   57940:	ldrb	r1, [r0, #28]
   57944:	bic	r1, r1, #6
   57948:	movw	r2, #2
   5794c:	orr	r1, r1, r2
   57950:	strb	r1, [r0, #28]
   57954:	ldr	r0, [sp, #4]
   57958:	ldr	r1, [sp, #8]
   5795c:	str	r0, [r1]
   57960:	ldr	r0, [sp]
   57964:	ldr	r1, [sp, #8]
   57968:	str	r0, [r1, #4]
   5796c:	ldr	r0, [sp, #16]
   57970:	ldr	r1, [sp, #8]
   57974:	str	r0, [r1, #8]
   57978:	b	579a8 <__assert_fail@plt+0x44df0>
   5797c:	ldr	r0, [sp, #12]
   57980:	ldrb	r1, [r0, #28]
   57984:	bic	r1, r1, #6
   57988:	strb	r1, [r0, #28]
   5798c:	ldr	r0, [sp, #8]
   57990:	movw	r1, #0
   57994:	str	r1, [r0]
   57998:	ldr	r0, [sp, #8]
   5799c:	str	r1, [r0, #8]
   579a0:	ldr	r0, [sp, #8]
   579a4:	str	r1, [r0, #4]
   579a8:	add	sp, sp, #16
   579ac:	bx	lr
   579b0:	push	{fp, lr}
   579b4:	mov	fp, sp
   579b8:	sub	sp, sp, #8
   579bc:	str	r0, [sp, #4]
   579c0:	ldr	r0, [sp, #4]
   579c4:	ldr	r0, [r0, #4]
   579c8:	and	r0, r0, #255	; 0xff
   579cc:	cmp	r0, #6
   579d0:	bne	579fc <__assert_fail@plt+0x44e44>
   579d4:	ldr	r0, [sp, #4]
   579d8:	ldr	r0, [r0, #4]
   579dc:	lsr	r0, r0, #18
   579e0:	and	r0, r0, #1
   579e4:	cmp	r0, #0
   579e8:	bne	579fc <__assert_fail@plt+0x44e44>
   579ec:	ldr	r0, [sp, #4]
   579f0:	ldr	r0, [r0]
   579f4:	bl	57ad0 <__assert_fail@plt+0x44f18>
   579f8:	b	57a38 <__assert_fail@plt+0x44e80>
   579fc:	ldr	r0, [sp, #4]
   57a00:	ldr	r0, [r0, #4]
   57a04:	and	r0, r0, #255	; 0xff
   57a08:	cmp	r0, #3
   57a0c:	bne	57a34 <__assert_fail@plt+0x44e7c>
   57a10:	ldr	r0, [sp, #4]
   57a14:	ldr	r0, [r0, #4]
   57a18:	lsr	r0, r0, #18
   57a1c:	and	r0, r0, #1
   57a20:	cmp	r0, #0
   57a24:	bne	57a34 <__assert_fail@plt+0x44e7c>
   57a28:	ldr	r0, [sp, #4]
   57a2c:	ldr	r0, [r0]
   57a30:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   57a34:	b	57a38 <__assert_fail@plt+0x44e80>
   57a38:	mov	sp, fp
   57a3c:	pop	{fp, pc}
   57a40:	push	{fp, lr}
   57a44:	mov	fp, sp
   57a48:	sub	sp, sp, #8
   57a4c:	str	r0, [sp, #4]
   57a50:	ldr	r0, [sp, #4]
   57a54:	ldr	r0, [r0, #24]
   57a58:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   57a5c:	ldr	r0, [sp, #4]
   57a60:	ldr	r0, [r0, #36]	; 0x24
   57a64:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   57a68:	ldr	r0, [sp, #4]
   57a6c:	ldr	r0, [r0, #40]	; 0x28
   57a70:	ldr	r1, [sp, #4]
   57a74:	add	r1, r1, #4
   57a78:	cmp	r0, r1
   57a7c:	beq	57a9c <__assert_fail@plt+0x44ee4>
   57a80:	ldr	r0, [sp, #4]
   57a84:	ldr	r0, [r0, #40]	; 0x28
   57a88:	ldr	r0, [r0, #8]
   57a8c:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   57a90:	ldr	r0, [sp, #4]
   57a94:	ldr	r0, [r0, #40]	; 0x28
   57a98:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   57a9c:	ldr	r0, [sp, #4]
   57aa0:	ldr	r0, [r0, #12]
   57aa4:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   57aa8:	ldr	r0, [sp, #4]
   57aac:	ldr	r0, [r0, #48]	; 0x30
   57ab0:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   57ab4:	ldr	r0, [sp, #4]
   57ab8:	ldr	r0, [r0, #44]	; 0x2c
   57abc:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   57ac0:	ldr	r0, [sp, #4]
   57ac4:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   57ac8:	mov	sp, fp
   57acc:	pop	{fp, pc}
   57ad0:	push	{fp, lr}
   57ad4:	mov	fp, sp
   57ad8:	sub	sp, sp, #8
   57adc:	str	r0, [sp, #4]
   57ae0:	ldr	r0, [sp, #4]
   57ae4:	ldr	r0, [r0]
   57ae8:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   57aec:	ldr	r0, [sp, #4]
   57af0:	ldr	r0, [r0, #4]
   57af4:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   57af8:	ldr	r0, [sp, #4]
   57afc:	ldr	r0, [r0, #8]
   57b00:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   57b04:	ldr	r0, [sp, #4]
   57b08:	ldr	r0, [r0, #12]
   57b0c:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   57b10:	ldr	r0, [sp, #4]
   57b14:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   57b18:	mov	sp, fp
   57b1c:	pop	{fp, pc}
   57b20:	push	{fp, lr}
   57b24:	mov	fp, sp
   57b28:	sub	sp, sp, #120	; 0x78
   57b2c:	str	r0, [fp, #-8]
   57b30:	str	r1, [fp, #-12]
   57b34:	movw	r0, #4
   57b38:	str	r0, [fp, #-24]	; 0xffffffe8
   57b3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   57b40:	movw	r1, #8
   57b44:	cmp	r1, r0
   57b48:	bcs	57b58 <__assert_fail@plt+0x44fa0>
   57b4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   57b50:	str	r0, [fp, #-48]	; 0xffffffd0
   57b54:	b	57b64 <__assert_fail@plt+0x44fac>
   57b58:	movw	r0, #8
   57b5c:	str	r0, [fp, #-48]	; 0xffffffd0
   57b60:	b	57b64 <__assert_fail@plt+0x44fac>
   57b64:	ldr	r0, [fp, #-48]	; 0xffffffd0
   57b68:	movw	r1, #12
   57b6c:	cmp	r1, r0
   57b70:	bcs	57ba8 <__assert_fail@plt+0x44ff0>
   57b74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   57b78:	movw	r1, #8
   57b7c:	cmp	r1, r0
   57b80:	bcs	57b90 <__assert_fail@plt+0x44fd8>
   57b84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   57b88:	str	r0, [fp, #-52]	; 0xffffffcc
   57b8c:	b	57b9c <__assert_fail@plt+0x44fe4>
   57b90:	movw	r0, #8
   57b94:	str	r0, [fp, #-52]	; 0xffffffcc
   57b98:	b	57b9c <__assert_fail@plt+0x44fe4>
   57b9c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   57ba0:	str	r0, [fp, #-56]	; 0xffffffc8
   57ba4:	b	57bb4 <__assert_fail@plt+0x44ffc>
   57ba8:	movw	r0, #12
   57bac:	str	r0, [fp, #-56]	; 0xffffffc8
   57bb0:	b	57bb4 <__assert_fail@plt+0x44ffc>
   57bb4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   57bb8:	movw	r1, #8
   57bbc:	cmp	r1, r0
   57bc0:	bcs	57c48 <__assert_fail@plt+0x45090>
   57bc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   57bc8:	movw	r1, #8
   57bcc:	cmp	r1, r0
   57bd0:	bcs	57be0 <__assert_fail@plt+0x45028>
   57bd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   57bd8:	str	r0, [sp, #60]	; 0x3c
   57bdc:	b	57bec <__assert_fail@plt+0x45034>
   57be0:	movw	r0, #8
   57be4:	str	r0, [sp, #60]	; 0x3c
   57be8:	b	57bec <__assert_fail@plt+0x45034>
   57bec:	ldr	r0, [sp, #60]	; 0x3c
   57bf0:	movw	r1, #12
   57bf4:	cmp	r1, r0
   57bf8:	bcs	57c30 <__assert_fail@plt+0x45078>
   57bfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   57c00:	movw	r1, #8
   57c04:	cmp	r1, r0
   57c08:	bcs	57c18 <__assert_fail@plt+0x45060>
   57c0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   57c10:	str	r0, [sp, #56]	; 0x38
   57c14:	b	57c24 <__assert_fail@plt+0x4506c>
   57c18:	movw	r0, #8
   57c1c:	str	r0, [sp, #56]	; 0x38
   57c20:	b	57c24 <__assert_fail@plt+0x4506c>
   57c24:	ldr	r0, [sp, #56]	; 0x38
   57c28:	str	r0, [sp, #52]	; 0x34
   57c2c:	b	57c3c <__assert_fail@plt+0x45084>
   57c30:	movw	r0, #12
   57c34:	str	r0, [sp, #52]	; 0x34
   57c38:	b	57c3c <__assert_fail@plt+0x45084>
   57c3c:	ldr	r0, [sp, #52]	; 0x34
   57c40:	str	r0, [sp, #48]	; 0x30
   57c44:	b	57c54 <__assert_fail@plt+0x4509c>
   57c48:	movw	r0, #8
   57c4c:	str	r0, [sp, #48]	; 0x30
   57c50:	b	57c54 <__assert_fail@plt+0x4509c>
   57c54:	ldr	r0, [sp, #48]	; 0x30
   57c58:	movw	r1, #12
   57c5c:	cmp	r1, r0
   57c60:	bcs	57d88 <__assert_fail@plt+0x451d0>
   57c64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   57c68:	movw	r1, #8
   57c6c:	cmp	r1, r0
   57c70:	bcs	57c80 <__assert_fail@plt+0x450c8>
   57c74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   57c78:	str	r0, [sp, #44]	; 0x2c
   57c7c:	b	57c8c <__assert_fail@plt+0x450d4>
   57c80:	movw	r0, #8
   57c84:	str	r0, [sp, #44]	; 0x2c
   57c88:	b	57c8c <__assert_fail@plt+0x450d4>
   57c8c:	ldr	r0, [sp, #44]	; 0x2c
   57c90:	movw	r1, #12
   57c94:	cmp	r1, r0
   57c98:	bcs	57cd0 <__assert_fail@plt+0x45118>
   57c9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   57ca0:	movw	r1, #8
   57ca4:	cmp	r1, r0
   57ca8:	bcs	57cb8 <__assert_fail@plt+0x45100>
   57cac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   57cb0:	str	r0, [sp, #40]	; 0x28
   57cb4:	b	57cc4 <__assert_fail@plt+0x4510c>
   57cb8:	movw	r0, #8
   57cbc:	str	r0, [sp, #40]	; 0x28
   57cc0:	b	57cc4 <__assert_fail@plt+0x4510c>
   57cc4:	ldr	r0, [sp, #40]	; 0x28
   57cc8:	str	r0, [sp, #36]	; 0x24
   57ccc:	b	57cdc <__assert_fail@plt+0x45124>
   57cd0:	movw	r0, #12
   57cd4:	str	r0, [sp, #36]	; 0x24
   57cd8:	b	57cdc <__assert_fail@plt+0x45124>
   57cdc:	ldr	r0, [sp, #36]	; 0x24
   57ce0:	movw	r1, #8
   57ce4:	cmp	r1, r0
   57ce8:	bcs	57d70 <__assert_fail@plt+0x451b8>
   57cec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   57cf0:	movw	r1, #8
   57cf4:	cmp	r1, r0
   57cf8:	bcs	57d08 <__assert_fail@plt+0x45150>
   57cfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   57d00:	str	r0, [sp, #32]
   57d04:	b	57d14 <__assert_fail@plt+0x4515c>
   57d08:	movw	r0, #8
   57d0c:	str	r0, [sp, #32]
   57d10:	b	57d14 <__assert_fail@plt+0x4515c>
   57d14:	ldr	r0, [sp, #32]
   57d18:	movw	r1, #12
   57d1c:	cmp	r1, r0
   57d20:	bcs	57d58 <__assert_fail@plt+0x451a0>
   57d24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   57d28:	movw	r1, #8
   57d2c:	cmp	r1, r0
   57d30:	bcs	57d40 <__assert_fail@plt+0x45188>
   57d34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   57d38:	str	r0, [sp, #28]
   57d3c:	b	57d4c <__assert_fail@plt+0x45194>
   57d40:	movw	r0, #8
   57d44:	str	r0, [sp, #28]
   57d48:	b	57d4c <__assert_fail@plt+0x45194>
   57d4c:	ldr	r0, [sp, #28]
   57d50:	str	r0, [sp, #24]
   57d54:	b	57d64 <__assert_fail@plt+0x451ac>
   57d58:	movw	r0, #12
   57d5c:	str	r0, [sp, #24]
   57d60:	b	57d64 <__assert_fail@plt+0x451ac>
   57d64:	ldr	r0, [sp, #24]
   57d68:	str	r0, [sp, #20]
   57d6c:	b	57d7c <__assert_fail@plt+0x451c4>
   57d70:	movw	r0, #8
   57d74:	str	r0, [sp, #20]
   57d78:	b	57d7c <__assert_fail@plt+0x451c4>
   57d7c:	ldr	r0, [sp, #20]
   57d80:	str	r0, [sp, #16]
   57d84:	b	57d94 <__assert_fail@plt+0x451dc>
   57d88:	movw	r0, #12
   57d8c:	str	r0, [sp, #16]
   57d90:	b	57d94 <__assert_fail@plt+0x451dc>
   57d94:	ldr	r0, [sp, #16]
   57d98:	ldr	r1, [pc, #904]	; 58128 <__assert_fail@plt+0x45570>
   57d9c:	str	r0, [fp, #-28]	; 0xffffffe4
   57da0:	ldr	r0, [fp, #-8]
   57da4:	movw	r2, #0
   57da8:	and	r2, r2, #255	; 0xff
   57dac:	str	r1, [sp, #12]
   57db0:	mov	r1, r2
   57db4:	movw	r2, #160	; 0xa0
   57db8:	bl	12900 <memset@plt>
   57dbc:	ldr	r0, [fp, #-8]
   57dc0:	movw	r1, #31
   57dc4:	str	r1, [r0, #64]	; 0x40
   57dc8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   57dcc:	mvn	r1, #0
   57dd0:	udiv	r0, r1, r0
   57dd4:	ldr	r1, [sp, #12]
   57dd8:	cmp	r1, r0
   57ddc:	bcs	57dec <__assert_fail@plt+0x45234>
   57de0:	ldr	r0, [pc, #832]	; 58128 <__assert_fail@plt+0x45570>
   57de4:	str	r0, [sp, #8]
   57de8:	b	57dfc <__assert_fail@plt+0x45244>
   57dec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   57df0:	mvn	r1, #0
   57df4:	udiv	r0, r1, r0
   57df8:	str	r0, [sp, #8]
   57dfc:	ldr	r0, [sp, #8]
   57e00:	lsr	r0, r0, #1
   57e04:	ldr	r1, [fp, #-12]
   57e08:	cmp	r0, r1
   57e0c:	bhi	57e1c <__assert_fail@plt+0x45264>
   57e10:	movw	r0, #12
   57e14:	str	r0, [fp, #-4]
   57e18:	b	5811c <__assert_fail@plt+0x45564>
   57e1c:	ldr	r0, [fp, #-12]
   57e20:	add	r0, r0, #1
   57e24:	ldr	r1, [fp, #-8]
   57e28:	str	r0, [r1, #4]
   57e2c:	ldr	r0, [fp, #-8]
   57e30:	ldr	r0, [r0, #4]
   57e34:	lsl	r0, r0, #3
   57e38:	bl	527f0 <__assert_fail@plt+0x3fc38>
   57e3c:	ldr	r1, [fp, #-8]
   57e40:	str	r0, [r1]
   57e44:	movw	r0, #1
   57e48:	str	r0, [fp, #-16]
   57e4c:	ldr	r0, [fp, #-16]
   57e50:	ldr	r1, [fp, #-12]
   57e54:	cmp	r0, r1
   57e58:	bls	57e60 <__assert_fail@plt+0x452a8>
   57e5c:	b	57e74 <__assert_fail@plt+0x452bc>
   57e60:	b	57e64 <__assert_fail@plt+0x452ac>
   57e64:	ldr	r0, [fp, #-16]
   57e68:	lsl	r0, r0, #1
   57e6c:	str	r0, [fp, #-16]
   57e70:	b	57e4c <__assert_fail@plt+0x45294>
   57e74:	ldr	r1, [fp, #-16]
   57e78:	movw	r0, #12
   57e7c:	bl	4e0e0 <__assert_fail@plt+0x3b528>
   57e80:	ldr	r1, [fp, #-8]
   57e84:	str	r0, [r1, #32]
   57e88:	ldr	r0, [fp, #-16]
   57e8c:	sub	r0, r0, #1
   57e90:	ldr	r1, [fp, #-8]
   57e94:	str	r0, [r1, #68]	; 0x44
   57e98:	bl	12720 <__ctype_get_mb_cur_max@plt>
   57e9c:	ldr	r1, [fp, #-8]
   57ea0:	str	r0, [r1, #92]	; 0x5c
   57ea4:	movw	r0, #14
   57ea8:	bl	12a2c <nl_langinfo@plt>
   57eac:	str	r0, [fp, #-20]	; 0xffffffec
   57eb0:	ldr	r0, [fp, #-20]	; 0xffffffec
   57eb4:	ldrb	r0, [r0]
   57eb8:	cmp	r0, #85	; 0x55
   57ebc:	beq	57ed0 <__assert_fail@plt+0x45318>
   57ec0:	ldr	r0, [fp, #-20]	; 0xffffffec
   57ec4:	ldrb	r0, [r0]
   57ec8:	cmp	r0, #117	; 0x75
   57ecc:	bne	57f60 <__assert_fail@plt+0x453a8>
   57ed0:	ldr	r0, [fp, #-20]	; 0xffffffec
   57ed4:	ldrb	r0, [r0, #1]
   57ed8:	cmp	r0, #84	; 0x54
   57edc:	beq	57ef0 <__assert_fail@plt+0x45338>
   57ee0:	ldr	r0, [fp, #-20]	; 0xffffffec
   57ee4:	ldrb	r0, [r0, #1]
   57ee8:	cmp	r0, #116	; 0x74
   57eec:	bne	57f60 <__assert_fail@plt+0x453a8>
   57ef0:	ldr	r0, [fp, #-20]	; 0xffffffec
   57ef4:	ldrb	r0, [r0, #2]
   57ef8:	cmp	r0, #70	; 0x46
   57efc:	beq	57f10 <__assert_fail@plt+0x45358>
   57f00:	ldr	r0, [fp, #-20]	; 0xffffffec
   57f04:	ldrb	r0, [r0, #2]
   57f08:	cmp	r0, #102	; 0x66
   57f0c:	bne	57f60 <__assert_fail@plt+0x453a8>
   57f10:	ldr	r0, [fp, #-20]	; 0xffffffec
   57f14:	add	r0, r0, #3
   57f18:	ldr	r1, [fp, #-20]	; 0xffffffec
   57f1c:	ldrb	r1, [r1, #3]
   57f20:	cmp	r1, #45	; 0x2d
   57f24:	movw	r1, #0
   57f28:	moveq	r1, #1
   57f2c:	and	r1, r1, #1
   57f30:	add	r0, r0, r1
   57f34:	movw	r1, #48014	; 0xbb8e
   57f38:	movt	r1, #7
   57f3c:	bl	124c8 <strcmp@plt>
   57f40:	cmp	r0, #0
   57f44:	bne	57f60 <__assert_fail@plt+0x453a8>
   57f48:	ldr	r0, [fp, #-8]
   57f4c:	ldrb	r1, [r0, #88]	; 0x58
   57f50:	bic	r1, r1, #4
   57f54:	movw	r2, #4
   57f58:	orr	r1, r1, r2
   57f5c:	strb	r1, [r0, #88]	; 0x58
   57f60:	ldr	r0, [fp, #-8]
   57f64:	ldrb	r1, [r0, #88]	; 0x58
   57f68:	bic	r1, r1, #8
   57f6c:	strb	r1, [r0, #88]	; 0x58
   57f70:	ldr	r0, [fp, #-8]
   57f74:	ldr	r0, [r0, #92]	; 0x5c
   57f78:	cmp	r0, #1
   57f7c:	ble	580c4 <__assert_fail@plt+0x4550c>
   57f80:	ldr	r0, [fp, #-8]
   57f84:	ldrb	r0, [r0, #88]	; 0x58
   57f88:	ubfx	r0, r0, #2, #1
   57f8c:	and	r0, r0, #255	; 0xff
   57f90:	cmp	r0, #0
   57f94:	beq	57fac <__assert_fail@plt+0x453f4>
   57f98:	ldr	r0, [fp, #-8]
   57f9c:	movw	r1, #49932	; 0xc30c
   57fa0:	movt	r1, #7
   57fa4:	str	r1, [r0, #60]	; 0x3c
   57fa8:	b	580c0 <__assert_fail@plt+0x45508>
   57fac:	movw	r0, #32
   57fb0:	movw	r1, #1
   57fb4:	bl	4e0e0 <__assert_fail@plt+0x3b528>
   57fb8:	ldr	r1, [fp, #-8]
   57fbc:	str	r0, [r1, #60]	; 0x3c
   57fc0:	ldr	r0, [fp, #-8]
   57fc4:	ldr	r0, [r0, #60]	; 0x3c
   57fc8:	movw	r1, #0
   57fcc:	cmp	r0, r1
   57fd0:	bne	57fe0 <__assert_fail@plt+0x45428>
   57fd4:	movw	r0, #12
   57fd8:	str	r0, [fp, #-4]
   57fdc:	b	5811c <__assert_fail@plt+0x45564>
   57fe0:	movw	r0, #0
   57fe4:	str	r0, [fp, #-32]	; 0xffffffe0
   57fe8:	str	r0, [fp, #-40]	; 0xffffffd8
   57fec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   57ff0:	cmp	r0, #8
   57ff4:	bge	580bc <__assert_fail@plt+0x45504>
   57ff8:	movw	r0, #0
   57ffc:	str	r0, [fp, #-36]	; 0xffffffdc
   58000:	ldr	r0, [fp, #-36]	; 0xffffffdc
   58004:	cmp	r0, #32
   58008:	bge	580a8 <__assert_fail@plt+0x454f0>
   5800c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   58010:	bl	12930 <btowc@plt>
   58014:	str	r0, [fp, #-44]	; 0xffffffd4
   58018:	ldr	r0, [fp, #-44]	; 0xffffffd4
   5801c:	cmn	r0, #1
   58020:	beq	5804c <__assert_fail@plt+0x45494>
   58024:	ldr	r0, [fp, #-36]	; 0xffffffdc
   58028:	mov	r1, #1
   5802c:	lsl	r0, r1, r0
   58030:	ldr	r1, [fp, #-8]
   58034:	ldr	r1, [r1, #60]	; 0x3c
   58038:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5803c:	add	r1, r1, r2, lsl #2
   58040:	ldr	r2, [r1]
   58044:	orr	r0, r2, r0
   58048:	str	r0, [r1]
   5804c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   58050:	mvn	r1, #127	; 0x7f
   58054:	and	r0, r0, r1
   58058:	cmp	r0, #0
   5805c:	bne	58088 <__assert_fail@plt+0x454d0>
   58060:	ldr	r0, [fp, #-44]	; 0xffffffd4
   58064:	ldr	r1, [fp, #-40]	; 0xffffffd8
   58068:	cmp	r0, r1
   5806c:	beq	58088 <__assert_fail@plt+0x454d0>
   58070:	ldr	r0, [fp, #-8]
   58074:	ldrb	r1, [r0, #88]	; 0x58
   58078:	bic	r1, r1, #8
   5807c:	movw	r2, #8
   58080:	orr	r1, r1, r2
   58084:	strb	r1, [r0, #88]	; 0x58
   58088:	b	5808c <__assert_fail@plt+0x454d4>
   5808c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   58090:	add	r0, r0, #1
   58094:	str	r0, [fp, #-36]	; 0xffffffdc
   58098:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5809c:	add	r0, r0, #1
   580a0:	str	r0, [fp, #-40]	; 0xffffffd8
   580a4:	b	58000 <__assert_fail@plt+0x45448>
   580a8:	b	580ac <__assert_fail@plt+0x454f4>
   580ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   580b0:	add	r0, r0, #1
   580b4:	str	r0, [fp, #-32]	; 0xffffffe0
   580b8:	b	57fec <__assert_fail@plt+0x45434>
   580bc:	b	580c0 <__assert_fail@plt+0x45508>
   580c0:	b	580c4 <__assert_fail@plt+0x4550c>
   580c4:	ldr	r0, [fp, #-8]
   580c8:	ldr	r0, [r0]
   580cc:	movw	r1, #0
   580d0:	cmp	r0, r1
   580d4:	movw	r0, #1
   580d8:	str	r0, [sp, #4]
   580dc:	beq	580fc <__assert_fail@plt+0x45544>
   580e0:	ldr	r0, [fp, #-8]
   580e4:	ldr	r0, [r0, #32]
   580e8:	movw	r1, #0
   580ec:	cmp	r0, r1
   580f0:	movw	r0, #0
   580f4:	moveq	r0, #1
   580f8:	str	r0, [sp, #4]
   580fc:	ldr	r0, [sp, #4]
   58100:	tst	r0, #1
   58104:	beq	58114 <__assert_fail@plt+0x4555c>
   58108:	movw	r0, #12
   5810c:	str	r0, [fp, #-4]
   58110:	b	5811c <__assert_fail@plt+0x45564>
   58114:	movw	r0, #0
   58118:	str	r0, [fp, #-4]
   5811c:	ldr	r0, [fp, #-4]
   58120:	mov	sp, fp
   58124:	pop	{fp, pc}
   58128:	svcvc	0x00ffffff
   5812c:	push	{fp, lr}
   58130:	mov	fp, sp
   58134:	sub	sp, sp, #48	; 0x30
   58138:	ldr	ip, [fp, #12]
   5813c:	ldr	lr, [fp, #8]
   58140:	str	r0, [fp, #-8]
   58144:	str	r1, [fp, #-12]
   58148:	str	r2, [fp, #-16]
   5814c:	str	r3, [fp, #-20]	; 0xffffffec
   58150:	and	r0, lr, #1
   58154:	strb	r0, [fp, #-21]	; 0xffffffeb
   58158:	ldr	r0, [fp, #-8]
   5815c:	movw	r1, #0
   58160:	and	r1, r1, #255	; 0xff
   58164:	movw	r2, #84	; 0x54
   58168:	str	ip, [sp, #16]
   5816c:	bl	12900 <memset@plt>
   58170:	ldr	r0, [fp, #-12]
   58174:	ldr	r1, [fp, #-16]
   58178:	ldr	r2, [fp, #-8]
   5817c:	ldr	r3, [fp, #-20]	; 0xffffffec
   58180:	ldrb	ip, [fp, #-21]	; 0xffffffeb
   58184:	ldr	lr, [fp, #12]
   58188:	and	ip, ip, #1
   5818c:	str	ip, [sp]
   58190:	str	lr, [sp, #4]
   58194:	bl	58fe4 <__assert_fail@plt+0x4642c>
   58198:	ldr	r0, [fp, #-16]
   5819c:	cmp	r0, #0
   581a0:	ble	581d4 <__assert_fail@plt+0x4561c>
   581a4:	ldr	r0, [fp, #-8]
   581a8:	ldr	r1, [fp, #-16]
   581ac:	add	r1, r1, #1
   581b0:	bl	590e4 <__assert_fail@plt+0x4652c>
   581b4:	str	r0, [sp, #20]
   581b8:	ldr	r0, [sp, #20]
   581bc:	cmp	r0, #0
   581c0:	beq	581d0 <__assert_fail@plt+0x45618>
   581c4:	ldr	r0, [sp, #20]
   581c8:	str	r0, [fp, #-4]
   581cc:	b	58334 <__assert_fail@plt+0x4577c>
   581d0:	b	581d4 <__assert_fail@plt+0x4561c>
   581d4:	ldr	r0, [fp, #-8]
   581d8:	ldrb	r0, [r0, #75]	; 0x4b
   581dc:	cmp	r0, #0
   581e0:	beq	581f4 <__assert_fail@plt+0x4563c>
   581e4:	ldr	r0, [fp, #-8]
   581e8:	ldr	r0, [r0, #4]
   581ec:	str	r0, [sp, #12]
   581f0:	b	581fc <__assert_fail@plt+0x45644>
   581f4:	ldr	r0, [fp, #-12]
   581f8:	str	r0, [sp, #12]
   581fc:	ldr	r0, [sp, #12]
   58200:	ldr	r1, [fp, #-8]
   58204:	str	r0, [r1, #4]
   58208:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   5820c:	tst	r0, #1
   58210:	beq	582cc <__assert_fail@plt+0x45714>
   58214:	ldr	r0, [fp, #12]
   58218:	ldr	r0, [r0, #92]	; 0x5c
   5821c:	cmp	r0, #1
   58220:	ble	582c0 <__assert_fail@plt+0x45708>
   58224:	b	58228 <__assert_fail@plt+0x45670>
   58228:	ldr	r0, [fp, #-8]
   5822c:	bl	5923c <__assert_fail@plt+0x46684>
   58230:	str	r0, [sp, #20]
   58234:	ldr	r0, [sp, #20]
   58238:	cmp	r0, #0
   5823c:	beq	5824c <__assert_fail@plt+0x45694>
   58240:	ldr	r0, [sp, #20]
   58244:	str	r0, [fp, #-4]
   58248:	b	58334 <__assert_fail@plt+0x4577c>
   5824c:	ldr	r0, [fp, #-8]
   58250:	ldr	r0, [r0, #32]
   58254:	ldr	r1, [fp, #-16]
   58258:	cmp	r0, r1
   5825c:	blt	58264 <__assert_fail@plt+0x456ac>
   58260:	b	582bc <__assert_fail@plt+0x45704>
   58264:	ldr	r0, [fp, #-8]
   58268:	ldr	r0, [r0, #36]	; 0x24
   5826c:	ldr	r1, [fp, #-8]
   58270:	ldr	r1, [r1, #28]
   58274:	ldr	r2, [fp, #12]
   58278:	ldr	r2, [r2, #92]	; 0x5c
   5827c:	add	r1, r1, r2
   58280:	cmp	r0, r1
   58284:	ble	5828c <__assert_fail@plt+0x456d4>
   58288:	b	582bc <__assert_fail@plt+0x45704>
   5828c:	ldr	r0, [fp, #-8]
   58290:	ldr	r1, [r0, #36]	; 0x24
   58294:	lsl	r1, r1, #1
   58298:	bl	590e4 <__assert_fail@plt+0x4652c>
   5829c:	str	r0, [sp, #20]
   582a0:	ldr	r0, [sp, #20]
   582a4:	cmp	r0, #0
   582a8:	beq	582b8 <__assert_fail@plt+0x45700>
   582ac:	ldr	r0, [sp, #20]
   582b0:	str	r0, [fp, #-4]
   582b4:	b	58334 <__assert_fail@plt+0x4577c>
   582b8:	b	58228 <__assert_fail@plt+0x45670>
   582bc:	b	582c8 <__assert_fail@plt+0x45710>
   582c0:	ldr	r0, [fp, #-8]
   582c4:	bl	59ce4 <__assert_fail@plt+0x4712c>
   582c8:	b	5832c <__assert_fail@plt+0x45774>
   582cc:	ldr	r0, [fp, #12]
   582d0:	ldr	r0, [r0, #92]	; 0x5c
   582d4:	cmp	r0, #1
   582d8:	ble	582e8 <__assert_fail@plt+0x45730>
   582dc:	ldr	r0, [fp, #-8]
   582e0:	bl	59de8 <__assert_fail@plt+0x47230>
   582e4:	b	58328 <__assert_fail@plt+0x45770>
   582e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   582ec:	movw	r1, #0
   582f0:	cmp	r0, r1
   582f4:	beq	58304 <__assert_fail@plt+0x4574c>
   582f8:	ldr	r0, [fp, #-8]
   582fc:	bl	5a128 <__assert_fail@plt+0x47570>
   58300:	b	58324 <__assert_fail@plt+0x4576c>
   58304:	ldr	r0, [fp, #-8]
   58308:	ldr	r0, [r0, #36]	; 0x24
   5830c:	ldr	r1, [fp, #-8]
   58310:	str	r0, [r1, #28]
   58314:	ldr	r0, [fp, #-8]
   58318:	ldr	r0, [r0, #36]	; 0x24
   5831c:	ldr	r1, [fp, #-8]
   58320:	str	r0, [r1, #32]
   58324:	b	58328 <__assert_fail@plt+0x45770>
   58328:	b	5832c <__assert_fail@plt+0x45774>
   5832c:	movw	r0, #0
   58330:	str	r0, [fp, #-4]
   58334:	ldr	r0, [fp, #-4]
   58338:	mov	sp, fp
   5833c:	pop	{fp, pc}
   58340:	push	{fp, lr}
   58344:	mov	fp, sp
   58348:	sub	sp, sp, #16
   5834c:	str	r0, [fp, #-4]
   58350:	ldr	r0, [fp, #-4]
   58354:	ldr	r0, [r0]
   58358:	str	r0, [sp, #8]
   5835c:	ldr	r0, [sp, #8]
   58360:	ldr	r0, [r0, #56]	; 0x38
   58364:	str	r0, [sp, #4]
   58368:	ldr	r0, [sp, #4]
   5836c:	movw	r1, #0
   58370:	cmp	r0, r1
   58374:	beq	58398 <__assert_fail@plt+0x457e0>
   58378:	ldr	r0, [sp, #4]
   5837c:	ldr	r0, [r0]
   58380:	str	r0, [sp]
   58384:	ldr	r0, [sp, #4]
   58388:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   5838c:	ldr	r0, [sp]
   58390:	str	r0, [sp, #4]
   58394:	b	58368 <__assert_fail@plt+0x457b0>
   58398:	ldr	r0, [sp, #8]
   5839c:	movw	r1, #0
   583a0:	str	r1, [r0, #56]	; 0x38
   583a4:	ldr	r0, [sp, #8]
   583a8:	movw	r2, #31
   583ac:	str	r2, [r0, #64]	; 0x40
   583b0:	ldr	r0, [sp, #8]
   583b4:	str	r1, [r0, #52]	; 0x34
   583b8:	ldr	r0, [sp, #8]
   583bc:	ldr	r0, [r0, #16]
   583c0:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   583c4:	ldr	r0, [sp, #8]
   583c8:	movw	r1, #0
   583cc:	str	r1, [r0, #16]
   583d0:	mov	sp, fp
   583d4:	pop	{fp, pc}
   583d8:	push	{fp, lr}
   583dc:	mov	fp, sp
   583e0:	sub	sp, sp, #8
   583e4:	str	r0, [sp, #4]
   583e8:	ldr	r0, [sp, #4]
   583ec:	ldr	r0, [r0, #8]
   583f0:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   583f4:	ldr	r0, [sp, #4]
   583f8:	ldr	r0, [r0, #12]
   583fc:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   58400:	ldr	r0, [sp, #4]
   58404:	ldrsb	r0, [r0, #75]	; 0x4b
   58408:	cmp	r0, #0
   5840c:	beq	5841c <__assert_fail@plt+0x45864>
   58410:	ldr	r0, [sp, #4]
   58414:	ldr	r0, [r0, #4]
   58418:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   5841c:	mov	sp, fp
   58420:	pop	{fp, pc}
   58424:	push	{fp, lr}
   58428:	mov	fp, sp
   5842c:	sub	sp, sp, #72	; 0x48
   58430:	str	r0, [fp, #-8]
   58434:	str	r1, [fp, #-12]
   58438:	str	r2, [fp, #-16]
   5843c:	str	r3, [fp, #-20]	; 0xffffffec
   58440:	ldr	r0, [fp, #-12]
   58444:	ldr	r0, [r0]
   58448:	str	r0, [fp, #-24]	; 0xffffffe8
   5844c:	ldr	r0, [fp, #-16]
   58450:	ldr	r1, [fp, #-24]	; 0xffffffe8
   58454:	str	r0, [r1, #128]	; 0x80
   58458:	ldr	r1, [fp, #-8]
   5845c:	ldr	r0, [fp, #-16]
   58460:	orr	r2, r0, #8388608	; 0x800000
   58464:	add	r0, sp, #28
   58468:	bl	5a204 <__assert_fail@plt+0x4764c>
   5846c:	ldr	r0, [fp, #-8]
   58470:	ldr	r1, [fp, #-12]
   58474:	ldr	r3, [fp, #-16]
   58478:	ldr	r2, [fp, #-20]	; 0xffffffec
   5847c:	add	ip, sp, #28
   58480:	str	r2, [sp, #24]
   58484:	mov	r2, ip
   58488:	movw	ip, #0
   5848c:	str	ip, [sp]
   58490:	ldr	ip, [sp, #24]
   58494:	str	ip, [sp, #4]
   58498:	bl	5a244 <__assert_fail@plt+0x4768c>
   5849c:	str	r0, [fp, #-28]	; 0xffffffe4
   584a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   584a4:	ldr	r0, [r0]
   584a8:	cmp	r0, #0
   584ac:	movw	r0, #0
   584b0:	str	r0, [sp, #20]
   584b4:	beq	584d0 <__assert_fail@plt+0x45918>
   584b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   584bc:	movw	r1, #0
   584c0:	cmp	r0, r1
   584c4:	movw	r0, #0
   584c8:	moveq	r0, #1
   584cc:	str	r0, [sp, #20]
   584d0:	ldr	r0, [sp, #20]
   584d4:	tst	r0, #1
   584d8:	beq	584e8 <__assert_fail@plt+0x45930>
   584dc:	movw	r0, #0
   584e0:	str	r0, [fp, #-4]
   584e4:	b	58594 <__assert_fail@plt+0x459dc>
   584e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   584ec:	movw	r1, #0
   584f0:	str	r1, [sp, #16]
   584f4:	ldr	r2, [sp, #16]
   584f8:	movw	r3, #2
   584fc:	bl	5a498 <__assert_fail@plt+0x478e0>
   58500:	str	r0, [fp, #-32]	; 0xffffffe0
   58504:	ldr	r0, [fp, #-28]	; 0xffffffe4
   58508:	movw	r1, #0
   5850c:	cmp	r0, r1
   58510:	beq	58530 <__assert_fail@plt+0x45978>
   58514:	ldr	r0, [fp, #-24]	; 0xffffffe8
   58518:	ldr	r1, [fp, #-28]	; 0xffffffe4
   5851c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   58520:	movw	r3, #16
   58524:	bl	5a498 <__assert_fail@plt+0x478e0>
   58528:	str	r0, [sp, #36]	; 0x24
   5852c:	b	58538 <__assert_fail@plt+0x45980>
   58530:	ldr	r0, [fp, #-32]	; 0xffffffe0
   58534:	str	r0, [sp, #36]	; 0x24
   58538:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5853c:	movw	r1, #0
   58540:	cmp	r0, r1
   58544:	movw	r0, #1
   58548:	str	r0, [sp, #12]
   5854c:	beq	58568 <__assert_fail@plt+0x459b0>
   58550:	ldr	r0, [sp, #36]	; 0x24
   58554:	movw	r1, #0
   58558:	cmp	r0, r1
   5855c:	movw	r0, #0
   58560:	moveq	r0, #1
   58564:	str	r0, [sp, #12]
   58568:	ldr	r0, [sp, #12]
   5856c:	tst	r0, #1
   58570:	beq	5858c <__assert_fail@plt+0x459d4>
   58574:	ldr	r0, [fp, #-20]	; 0xffffffec
   58578:	movw	r1, #12
   5857c:	str	r1, [r0]
   58580:	movw	r0, #0
   58584:	str	r0, [fp, #-4]
   58588:	b	58594 <__assert_fail@plt+0x459dc>
   5858c:	ldr	r0, [sp, #36]	; 0x24
   58590:	str	r0, [fp, #-4]
   58594:	ldr	r0, [fp, #-4]
   58598:	mov	sp, fp
   5859c:	pop	{fp, pc}
   585a0:	push	{fp, lr}
   585a4:	mov	fp, sp
   585a8:	sub	sp, sp, #48	; 0x30
   585ac:	str	r0, [fp, #-8]
   585b0:	ldr	r0, [fp, #-8]
   585b4:	ldr	r0, [r0]
   585b8:	str	r0, [fp, #-12]
   585bc:	ldr	r0, [fp, #-12]
   585c0:	ldr	r0, [r0, #4]
   585c4:	lsl	r0, r0, #2
   585c8:	bl	527f0 <__assert_fail@plt+0x3fc38>
   585cc:	ldr	r1, [fp, #-12]
   585d0:	str	r0, [r1, #12]
   585d4:	ldr	r0, [fp, #-12]
   585d8:	ldr	r0, [r0, #4]
   585dc:	lsl	r0, r0, #2
   585e0:	bl	527f0 <__assert_fail@plt+0x3fc38>
   585e4:	ldr	r1, [fp, #-12]
   585e8:	str	r0, [r1, #16]
   585ec:	ldr	r0, [fp, #-12]
   585f0:	ldr	r0, [r0, #4]
   585f4:	movw	r1, #12
   585f8:	mul	r0, r0, r1
   585fc:	bl	527f0 <__assert_fail@plt+0x3fc38>
   58600:	ldr	r1, [fp, #-12]
   58604:	str	r0, [r1, #20]
   58608:	ldr	r0, [fp, #-12]
   5860c:	ldr	r0, [r0, #4]
   58610:	movw	r1, #12
   58614:	mul	r0, r0, r1
   58618:	bl	527f0 <__assert_fail@plt+0x3fc38>
   5861c:	ldr	r1, [fp, #-12]
   58620:	str	r0, [r1, #24]
   58624:	ldr	r0, [fp, #-12]
   58628:	ldr	r0, [r0, #12]
   5862c:	movw	r1, #0
   58630:	cmp	r0, r1
   58634:	movw	r0, #1
   58638:	str	r0, [sp, #24]
   5863c:	beq	58694 <__assert_fail@plt+0x45adc>
   58640:	ldr	r0, [fp, #-12]
   58644:	ldr	r0, [r0, #16]
   58648:	movw	r1, #0
   5864c:	cmp	r0, r1
   58650:	movw	r0, #1
   58654:	str	r0, [sp, #24]
   58658:	beq	58694 <__assert_fail@plt+0x45adc>
   5865c:	ldr	r0, [fp, #-12]
   58660:	ldr	r0, [r0, #20]
   58664:	movw	r1, #0
   58668:	cmp	r0, r1
   5866c:	movw	r0, #1
   58670:	str	r0, [sp, #24]
   58674:	beq	58694 <__assert_fail@plt+0x45adc>
   58678:	ldr	r0, [fp, #-12]
   5867c:	ldr	r0, [r0, #24]
   58680:	movw	r1, #0
   58684:	cmp	r0, r1
   58688:	movw	r0, #0
   5868c:	moveq	r0, #1
   58690:	str	r0, [sp, #24]
   58694:	ldr	r0, [sp, #24]
   58698:	tst	r0, #1
   5869c:	beq	586ac <__assert_fail@plt+0x45af4>
   586a0:	movw	r0, #12
   586a4:	str	r0, [fp, #-4]
   586a8:	b	58968 <__assert_fail@plt+0x45db0>
   586ac:	ldr	r0, [fp, #-8]
   586b0:	ldr	r0, [r0, #24]
   586b4:	lsl	r0, r0, #2
   586b8:	bl	527f0 <__assert_fail@plt+0x3fc38>
   586bc:	ldr	r1, [fp, #-12]
   586c0:	str	r0, [r1, #132]	; 0x84
   586c4:	ldr	r0, [fp, #-12]
   586c8:	ldr	r0, [r0, #132]	; 0x84
   586cc:	movw	r1, #0
   586d0:	cmp	r0, r1
   586d4:	beq	587c4 <__assert_fail@plt+0x45c0c>
   586d8:	movw	r0, #0
   586dc:	str	r0, [fp, #-20]	; 0xffffffec
   586e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   586e4:	ldr	r1, [fp, #-8]
   586e8:	ldr	r1, [r1, #24]
   586ec:	cmp	r0, r1
   586f0:	bcs	5871c <__assert_fail@plt+0x45b64>
   586f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   586f8:	mov	r1, r0
   586fc:	ldr	r2, [fp, #-12]
   58700:	ldr	r2, [r2, #132]	; 0x84
   58704:	add	r0, r2, r0, lsl #2
   58708:	str	r1, [r0]
   5870c:	ldr	r0, [fp, #-20]	; 0xffffffec
   58710:	add	r0, r0, #1
   58714:	str	r0, [fp, #-20]	; 0xffffffec
   58718:	b	586e0 <__assert_fail@plt+0x45b28>
   5871c:	ldr	r0, [fp, #-12]
   58720:	ldr	r0, [r0, #52]	; 0x34
   58724:	ldr	r1, [fp, #-12]
   58728:	movw	r2, #64812	; 0xfd2c
   5872c:	movt	r2, #5
   58730:	str	r1, [sp, #20]
   58734:	mov	r1, r2
   58738:	ldr	r2, [sp, #20]
   5873c:	bl	5fc10 <__assert_fail@plt+0x4d058>
   58740:	movw	r1, #0
   58744:	str	r1, [fp, #-20]	; 0xffffffec
   58748:	ldr	r0, [fp, #-20]	; 0xffffffec
   5874c:	ldr	r1, [fp, #-8]
   58750:	ldr	r1, [r1, #24]
   58754:	cmp	r0, r1
   58758:	bcs	58794 <__assert_fail@plt+0x45bdc>
   5875c:	ldr	r0, [fp, #-12]
   58760:	ldr	r0, [r0, #132]	; 0x84
   58764:	ldr	r1, [fp, #-20]	; 0xffffffec
   58768:	add	r0, r0, r1, lsl #2
   5876c:	ldr	r0, [r0]
   58770:	ldr	r1, [fp, #-20]	; 0xffffffec
   58774:	cmp	r0, r1
   58778:	beq	58780 <__assert_fail@plt+0x45bc8>
   5877c:	b	58794 <__assert_fail@plt+0x45bdc>
   58780:	b	58784 <__assert_fail@plt+0x45bcc>
   58784:	ldr	r0, [fp, #-20]	; 0xffffffec
   58788:	add	r0, r0, #1
   5878c:	str	r0, [fp, #-20]	; 0xffffffec
   58790:	b	58748 <__assert_fail@plt+0x45b90>
   58794:	ldr	r0, [fp, #-20]	; 0xffffffec
   58798:	ldr	r1, [fp, #-8]
   5879c:	ldr	r1, [r1, #24]
   587a0:	cmp	r0, r1
   587a4:	bne	587c0 <__assert_fail@plt+0x45c08>
   587a8:	ldr	r0, [fp, #-12]
   587ac:	ldr	r0, [r0, #132]	; 0x84
   587b0:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   587b4:	ldr	r0, [fp, #-12]
   587b8:	movw	r1, #0
   587bc:	str	r1, [r0, #132]	; 0x84
   587c0:	b	587c4 <__assert_fail@plt+0x45c0c>
   587c4:	ldr	r0, [fp, #-12]
   587c8:	ldr	r0, [r0, #52]	; 0x34
   587cc:	ldr	r1, [fp, #-8]
   587d0:	movw	r2, #65184	; 0xfea0
   587d4:	movt	r2, #5
   587d8:	str	r1, [sp, #16]
   587dc:	mov	r1, r2
   587e0:	ldr	r2, [sp, #16]
   587e4:	bl	5b888 <__assert_fail@plt+0x48cd0>
   587e8:	str	r0, [fp, #-16]
   587ec:	ldr	r0, [fp, #-16]
   587f0:	cmp	r0, #0
   587f4:	beq	58804 <__assert_fail@plt+0x45c4c>
   587f8:	ldr	r0, [fp, #-16]
   587fc:	str	r0, [fp, #-4]
   58800:	b	58968 <__assert_fail@plt+0x45db0>
   58804:	ldr	r0, [fp, #-12]
   58808:	ldr	r0, [r0, #52]	; 0x34
   5880c:	ldr	r1, [fp, #-12]
   58810:	movw	r2, #65452	; 0xffac
   58814:	movt	r2, #5
   58818:	str	r1, [sp, #12]
   5881c:	mov	r1, r2
   58820:	ldr	r2, [sp, #12]
   58824:	bl	5b888 <__assert_fail@plt+0x48cd0>
   58828:	str	r0, [fp, #-16]
   5882c:	ldr	r0, [fp, #-16]
   58830:	cmp	r0, #0
   58834:	beq	58844 <__assert_fail@plt+0x45c8c>
   58838:	ldr	r0, [fp, #-16]
   5883c:	str	r0, [fp, #-4]
   58840:	b	58968 <__assert_fail@plt+0x45db0>
   58844:	ldr	r0, [fp, #-12]
   58848:	ldr	r0, [r0, #52]	; 0x34
   5884c:	ldr	r1, [fp, #-12]
   58850:	movw	r2, #188	; 0xbc
   58854:	movt	r2, #6
   58858:	str	r1, [sp, #8]
   5885c:	mov	r1, r2
   58860:	ldr	r2, [sp, #8]
   58864:	bl	5fc10 <__assert_fail@plt+0x4d058>
   58868:	ldr	r1, [fp, #-12]
   5886c:	ldr	r1, [r1, #52]	; 0x34
   58870:	ldr	r2, [fp, #-12]
   58874:	str	r0, [sp, #4]
   58878:	mov	r0, r1
   5887c:	movw	r1, #408	; 0x198
   58880:	movt	r1, #6
   58884:	bl	5fc10 <__assert_fail@plt+0x4d058>
   58888:	str	r0, [fp, #-16]
   5888c:	ldr	r0, [fp, #-16]
   58890:	cmp	r0, #0
   58894:	beq	588a4 <__assert_fail@plt+0x45cec>
   58898:	ldr	r0, [fp, #-16]
   5889c:	str	r0, [fp, #-4]
   588a0:	b	58968 <__assert_fail@plt+0x45db0>
   588a4:	ldr	r0, [fp, #-12]
   588a8:	bl	60400 <__assert_fail@plt+0x4d848>
   588ac:	str	r0, [fp, #-16]
   588b0:	ldr	r0, [fp, #-16]
   588b4:	cmp	r0, #0
   588b8:	beq	588c8 <__assert_fail@plt+0x45d10>
   588bc:	ldr	r0, [fp, #-16]
   588c0:	str	r0, [fp, #-4]
   588c4:	b	58968 <__assert_fail@plt+0x45db0>
   588c8:	ldr	r0, [fp, #-8]
   588cc:	ldrb	r0, [r0, #28]
   588d0:	ubfx	r0, r0, #4, #1
   588d4:	and	r0, r0, #255	; 0xff
   588d8:	cmp	r0, #0
   588dc:	bne	58908 <__assert_fail@plt+0x45d50>
   588e0:	ldr	r0, [fp, #-8]
   588e4:	ldr	r0, [r0, #24]
   588e8:	cmp	r0, #0
   588ec:	bls	58908 <__assert_fail@plt+0x45d50>
   588f0:	ldr	r0, [fp, #-12]
   588f4:	ldrb	r0, [r0, #88]	; 0x58
   588f8:	and	r0, r0, #1
   588fc:	and	r0, r0, #255	; 0xff
   58900:	cmp	r0, #0
   58904:	bne	58918 <__assert_fail@plt+0x45d60>
   58908:	ldr	r0, [fp, #-12]
   5890c:	ldr	r0, [r0, #76]	; 0x4c
   58910:	cmp	r0, #0
   58914:	beq	58960 <__assert_fail@plt+0x45da8>
   58918:	ldr	r0, [fp, #-12]
   5891c:	ldr	r0, [r0, #8]
   58920:	movw	r1, #12
   58924:	mul	r0, r0, r1
   58928:	bl	527f0 <__assert_fail@plt+0x3fc38>
   5892c:	ldr	r1, [fp, #-12]
   58930:	str	r0, [r1, #28]
   58934:	ldr	r0, [fp, #-12]
   58938:	ldr	r0, [r0, #28]
   5893c:	movw	r1, #0
   58940:	cmp	r0, r1
   58944:	bne	58954 <__assert_fail@plt+0x45d9c>
   58948:	movw	r0, #12
   5894c:	str	r0, [fp, #-4]
   58950:	b	58968 <__assert_fail@plt+0x45db0>
   58954:	ldr	r0, [fp, #-12]
   58958:	bl	60548 <__assert_fail@plt+0x4d990>
   5895c:	str	r0, [fp, #-16]
   58960:	ldr	r0, [fp, #-16]
   58964:	str	r0, [fp, #-4]
   58968:	ldr	r0, [fp, #-4]
   5896c:	mov	sp, fp
   58970:	pop	{fp, pc}
   58974:	push	{fp, lr}
   58978:	mov	fp, sp
   5897c:	sub	sp, sp, #32
   58980:	str	r0, [fp, #-4]
   58984:	movw	r0, #0
   58988:	strb	r0, [fp, #-13]
   5898c:	strb	r0, [fp, #-14]
   58990:	movw	r0, #0
   58994:	str	r0, [fp, #-8]
   58998:	ldr	r0, [fp, #-8]
   5899c:	ldr	r1, [fp, #-4]
   589a0:	ldr	r1, [r1, #8]
   589a4:	cmp	r0, r1
   589a8:	bcs	58b28 <__assert_fail@plt+0x45f70>
   589ac:	ldr	r0, [fp, #-4]
   589b0:	ldr	r0, [r0]
   589b4:	ldr	r1, [fp, #-8]
   589b8:	add	r0, r0, r1, lsl #3
   589bc:	ldrb	r0, [r0, #4]
   589c0:	sub	r0, r0, #1
   589c4:	cmp	r0, #11
   589c8:	str	r0, [sp, #8]
   589cc:	bhi	58b10 <__assert_fail@plt+0x45f58>
   589d0:	add	r0, pc, #8
   589d4:	ldr	r1, [sp, #8]
   589d8:	ldr	r0, [r0, r1, lsl #2]
   589dc:	mov	pc, r0
   589e0:	andeq	r8, r5, r0, lsl sl
   589e4:	andeq	r8, r5, r0, lsr #21
   589e8:	andeq	r8, r5, r8, lsr #21
   589ec:	andeq	r8, r5, r0, lsr #21
   589f0:	muleq	r5, r4, sl
   589f4:	andeq	r8, r5, r4, lsr #21
   589f8:	andeq	r8, r5, r0, lsl fp
   589fc:	andeq	r8, r5, r0, lsr #21
   58a00:	andeq	r8, r5, r0, lsr #21
   58a04:	andeq	r8, r5, r0, lsr #21
   58a08:	andeq	r8, r5, r0, lsr #21
   58a0c:	andeq	r8, r5, r8, lsr sl
   58a10:	ldr	r0, [fp, #-4]
   58a14:	ldr	r0, [r0]
   58a18:	ldr	r1, [fp, #-8]
   58a1c:	add	r0, r0, r1, lsl #3
   58a20:	ldrb	r0, [r0]
   58a24:	cmp	r0, #128	; 0x80
   58a28:	blt	58a34 <__assert_fail@plt+0x45e7c>
   58a2c:	movw	r0, #1
   58a30:	strb	r0, [fp, #-13]
   58a34:	b	58b14 <__assert_fail@plt+0x45f5c>
   58a38:	ldr	r0, [fp, #-4]
   58a3c:	ldr	r0, [r0]
   58a40:	ldr	r1, [fp, #-8]
   58a44:	ldr	r0, [r0, r1, lsl #3]
   58a48:	cmp	r0, #16
   58a4c:	str	r0, [sp, #4]
   58a50:	beq	58a88 <__assert_fail@plt+0x45ed0>
   58a54:	b	58a58 <__assert_fail@plt+0x45ea0>
   58a58:	ldr	r0, [sp, #4]
   58a5c:	cmp	r0, #32
   58a60:	beq	58a88 <__assert_fail@plt+0x45ed0>
   58a64:	b	58a68 <__assert_fail@plt+0x45eb0>
   58a68:	ldr	r0, [sp, #4]
   58a6c:	cmp	r0, #64	; 0x40
   58a70:	beq	58a88 <__assert_fail@plt+0x45ed0>
   58a74:	b	58a78 <__assert_fail@plt+0x45ec0>
   58a78:	ldr	r0, [sp, #4]
   58a7c:	cmp	r0, #128	; 0x80
   58a80:	bne	58a8c <__assert_fail@plt+0x45ed4>
   58a84:	b	58a88 <__assert_fail@plt+0x45ed0>
   58a88:	b	58a90 <__assert_fail@plt+0x45ed8>
   58a8c:	b	58c78 <__assert_fail@plt+0x460c0>
   58a90:	b	58b14 <__assert_fail@plt+0x45f5c>
   58a94:	movw	r0, #1
   58a98:	strb	r0, [fp, #-14]
   58a9c:	b	58b14 <__assert_fail@plt+0x45f5c>
   58aa0:	b	58b14 <__assert_fail@plt+0x45f5c>
   58aa4:	b	58c78 <__assert_fail@plt+0x460c0>
   58aa8:	movw	r0, #0
   58aac:	str	r0, [sp, #12]
   58ab0:	movw	r0, #4
   58ab4:	str	r0, [fp, #-12]
   58ab8:	ldr	r0, [fp, #-12]
   58abc:	cmp	r0, #8
   58ac0:	bge	58b0c <__assert_fail@plt+0x45f54>
   58ac4:	ldr	r0, [fp, #-4]
   58ac8:	ldr	r0, [r0]
   58acc:	ldr	r1, [fp, #-8]
   58ad0:	ldr	r0, [r0, r1, lsl #3]
   58ad4:	ldr	r1, [fp, #-12]
   58ad8:	add	r0, r0, r1, lsl #2
   58adc:	ldr	r0, [r0]
   58ae0:	ldr	r1, [sp, #12]
   58ae4:	lsr	r0, r0, r1
   58ae8:	cmp	r0, #0
   58aec:	beq	58af4 <__assert_fail@plt+0x45f3c>
   58af0:	b	58c78 <__assert_fail@plt+0x460c0>
   58af4:	movw	r0, #0
   58af8:	str	r0, [sp, #12]
   58afc:	ldr	r0, [fp, #-12]
   58b00:	add	r0, r0, #1
   58b04:	str	r0, [fp, #-12]
   58b08:	b	58ab8 <__assert_fail@plt+0x45f00>
   58b0c:	b	58b14 <__assert_fail@plt+0x45f5c>
   58b10:	bl	12b64 <abort@plt>
   58b14:	b	58b18 <__assert_fail@plt+0x45f60>
   58b18:	ldr	r0, [fp, #-8]
   58b1c:	add	r0, r0, #1
   58b20:	str	r0, [fp, #-8]
   58b24:	b	58998 <__assert_fail@plt+0x45de0>
   58b28:	ldrb	r0, [fp, #-13]
   58b2c:	tst	r0, #1
   58b30:	bne	58b40 <__assert_fail@plt+0x45f88>
   58b34:	ldrb	r0, [fp, #-14]
   58b38:	tst	r0, #1
   58b3c:	beq	58c1c <__assert_fail@plt+0x46064>
   58b40:	movw	r0, #0
   58b44:	str	r0, [fp, #-8]
   58b48:	ldr	r0, [fp, #-8]
   58b4c:	ldr	r1, [fp, #-4]
   58b50:	ldr	r1, [r1, #8]
   58b54:	cmp	r0, r1
   58b58:	bcs	58c18 <__assert_fail@plt+0x46060>
   58b5c:	ldr	r0, [fp, #-4]
   58b60:	ldr	r0, [r0]
   58b64:	ldr	r1, [fp, #-8]
   58b68:	add	r0, r0, r1, lsl #3
   58b6c:	ldr	r0, [r0, #4]
   58b70:	and	r0, r0, #255	; 0xff
   58b74:	cmp	r0, #1
   58b78:	bne	58bbc <__assert_fail@plt+0x46004>
   58b7c:	ldr	r0, [fp, #-4]
   58b80:	ldr	r0, [r0]
   58b84:	ldr	r1, [fp, #-8]
   58b88:	add	r0, r0, r1, lsl #3
   58b8c:	ldrb	r0, [r0]
   58b90:	cmp	r0, #128	; 0x80
   58b94:	blt	58bbc <__assert_fail@plt+0x46004>
   58b98:	ldr	r0, [fp, #-4]
   58b9c:	ldr	r0, [r0]
   58ba0:	ldr	r1, [fp, #-8]
   58ba4:	add	r0, r0, r1, lsl #3
   58ba8:	ldr	r1, [r0, #4]
   58bac:	mvn	r2, #2097152	; 0x200000
   58bb0:	and	r1, r1, r2
   58bb4:	str	r1, [r0, #4]
   58bb8:	b	58c04 <__assert_fail@plt+0x4604c>
   58bbc:	ldr	r0, [fp, #-4]
   58bc0:	ldr	r0, [r0]
   58bc4:	ldr	r1, [fp, #-8]
   58bc8:	add	r0, r0, r1, lsl #3
   58bcc:	ldr	r0, [r0, #4]
   58bd0:	and	r0, r0, #255	; 0xff
   58bd4:	cmp	r0, #5
   58bd8:	bne	58c00 <__assert_fail@plt+0x46048>
   58bdc:	ldr	r0, [fp, #-4]
   58be0:	ldr	r0, [r0]
   58be4:	ldr	r1, [fp, #-8]
   58be8:	add	r0, r0, r1, lsl #3
   58bec:	ldr	r1, [r0, #4]
   58bf0:	mvn	r2, #255	; 0xff
   58bf4:	and	r1, r1, r2
   58bf8:	orr	r1, r1, #7
   58bfc:	str	r1, [r0, #4]
   58c00:	b	58c04 <__assert_fail@plt+0x4604c>
   58c04:	b	58c08 <__assert_fail@plt+0x46050>
   58c08:	ldr	r0, [fp, #-8]
   58c0c:	add	r0, r0, #1
   58c10:	str	r0, [fp, #-8]
   58c14:	b	58b48 <__assert_fail@plt+0x45f90>
   58c18:	b	58c1c <__assert_fail@plt+0x46064>
   58c1c:	ldr	r0, [fp, #-4]
   58c20:	mov	r1, #1
   58c24:	str	r1, [r0, #92]	; 0x5c
   58c28:	ldr	r0, [fp, #-4]
   58c2c:	ldrb	r1, [r0, #88]	; 0x58
   58c30:	bic	r1, r1, #4
   58c34:	strb	r1, [r0, #88]	; 0x58
   58c38:	ldr	r0, [fp, #-4]
   58c3c:	ldr	r0, [r0, #76]	; 0x4c
   58c40:	cmp	r0, #0
   58c44:	movw	r0, #1
   58c48:	str	r0, [sp]
   58c4c:	bgt	58c58 <__assert_fail@plt+0x460a0>
   58c50:	ldrb	r0, [fp, #-14]
   58c54:	str	r0, [sp]
   58c58:	ldr	r0, [sp]
   58c5c:	ldr	r1, [fp, #-4]
   58c60:	and	r0, r0, #1
   58c64:	ldrb	r2, [r1, #88]	; 0x58
   58c68:	lsl	r0, r0, #1
   58c6c:	bic	r2, r2, #2
   58c70:	orr	r0, r2, r0
   58c74:	strb	r0, [r1, #88]	; 0x58
   58c78:	mov	sp, fp
   58c7c:	pop	{fp, pc}
   58c80:	push	{fp, lr}
   58c84:	mov	fp, sp
   58c88:	sub	sp, sp, #64	; 0x40
   58c8c:	str	r0, [fp, #-8]
   58c90:	ldr	r0, [fp, #-8]
   58c94:	ldr	r0, [r0, #52]	; 0x34
   58c98:	ldr	r0, [r0, #12]
   58c9c:	ldr	r0, [r0, #28]
   58ca0:	str	r0, [fp, #-12]
   58ca4:	ldr	r0, [fp, #-12]
   58ca8:	ldr	r1, [fp, #-8]
   58cac:	str	r0, [r1, #72]	; 0x48
   58cb0:	ldr	r0, [fp, #-8]
   58cb4:	ldr	r0, [r0, #24]
   58cb8:	ldr	r1, [fp, #-12]
   58cbc:	movw	r2, #12
   58cc0:	mul	r1, r1, r2
   58cc4:	add	r1, r0, r1
   58cc8:	add	r0, sp, #32
   58ccc:	bl	61f98 <__assert_fail@plt+0x4f3e0>
   58cd0:	str	r0, [fp, #-20]	; 0xffffffec
   58cd4:	ldr	r0, [fp, #-20]	; 0xffffffec
   58cd8:	cmp	r0, #0
   58cdc:	beq	58cec <__assert_fail@plt+0x46134>
   58ce0:	ldr	r0, [fp, #-20]	; 0xffffffec
   58ce4:	str	r0, [fp, #-4]
   58ce8:	b	58fd8 <__assert_fail@plt+0x46420>
   58cec:	ldr	r0, [fp, #-8]
   58cf0:	ldr	r0, [r0, #76]	; 0x4c
   58cf4:	cmp	r0, #0
   58cf8:	ble	58e8c <__assert_fail@plt+0x462d4>
   58cfc:	movw	r0, #0
   58d00:	str	r0, [fp, #-16]
   58d04:	ldr	r0, [fp, #-16]
   58d08:	ldr	r1, [sp, #36]	; 0x24
   58d0c:	cmp	r0, r1
   58d10:	bge	58e88 <__assert_fail@plt+0x462d0>
   58d14:	ldr	r0, [sp, #40]	; 0x28
   58d18:	ldr	r1, [fp, #-16]
   58d1c:	ldr	r0, [r0, r1, lsl #2]
   58d20:	str	r0, [sp, #28]
   58d24:	ldr	r0, [fp, #-8]
   58d28:	ldr	r0, [r0]
   58d2c:	ldr	r1, [sp, #28]
   58d30:	add	r0, r0, r1, lsl #3
   58d34:	ldr	r0, [r0, #4]
   58d38:	and	r0, r0, #255	; 0xff
   58d3c:	str	r0, [sp, #24]
   58d40:	ldr	r0, [sp, #24]
   58d44:	cmp	r0, #4
   58d48:	beq	58d50 <__assert_fail@plt+0x46198>
   58d4c:	b	58e78 <__assert_fail@plt+0x462c0>
   58d50:	movw	r0, #0
   58d54:	str	r0, [sp, #20]
   58d58:	ldr	r0, [sp, #20]
   58d5c:	ldr	r1, [sp, #36]	; 0x24
   58d60:	cmp	r0, r1
   58d64:	bge	58dd4 <__assert_fail@plt+0x4621c>
   58d68:	ldr	r0, [fp, #-8]
   58d6c:	ldr	r0, [r0]
   58d70:	ldr	r1, [sp, #40]	; 0x28
   58d74:	ldr	r2, [sp, #20]
   58d78:	ldr	r1, [r1, r2, lsl #2]
   58d7c:	add	r0, r0, r1, lsl #3
   58d80:	str	r0, [sp, #16]
   58d84:	ldr	r0, [sp, #16]
   58d88:	ldr	r0, [r0, #4]
   58d8c:	and	r0, r0, #255	; 0xff
   58d90:	cmp	r0, #9
   58d94:	bne	58dc0 <__assert_fail@plt+0x46208>
   58d98:	ldr	r0, [sp, #16]
   58d9c:	ldr	r0, [r0]
   58da0:	ldr	r1, [fp, #-8]
   58da4:	ldr	r1, [r1]
   58da8:	ldr	r2, [sp, #28]
   58dac:	add	r1, r1, r2, lsl #3
   58db0:	ldr	r1, [r1]
   58db4:	cmp	r0, r1
   58db8:	bne	58dc0 <__assert_fail@plt+0x46208>
   58dbc:	b	58dd4 <__assert_fail@plt+0x4621c>
   58dc0:	b	58dc4 <__assert_fail@plt+0x4620c>
   58dc4:	ldr	r0, [sp, #20]
   58dc8:	add	r0, r0, #1
   58dcc:	str	r0, [sp, #20]
   58dd0:	b	58d58 <__assert_fail@plt+0x461a0>
   58dd4:	ldr	r0, [sp, #20]
   58dd8:	ldr	r1, [sp, #36]	; 0x24
   58ddc:	cmp	r0, r1
   58de0:	bne	58de8 <__assert_fail@plt+0x46230>
   58de4:	b	58e78 <__assert_fail@plt+0x462c0>
   58de8:	ldr	r0, [sp, #24]
   58dec:	cmp	r0, #4
   58df0:	bne	58e74 <__assert_fail@plt+0x462bc>
   58df4:	ldr	r0, [fp, #-8]
   58df8:	ldr	r0, [r0, #20]
   58dfc:	ldr	r1, [sp, #28]
   58e00:	movw	r2, #12
   58e04:	mul	r1, r1, r2
   58e08:	add	r0, r0, r1
   58e0c:	ldr	r0, [r0, #8]
   58e10:	ldr	r0, [r0]
   58e14:	str	r0, [sp, #12]
   58e18:	ldr	r1, [sp, #12]
   58e1c:	add	r0, sp, #32
   58e20:	bl	6206c <__assert_fail@plt+0x4f4b4>
   58e24:	cmp	r0, #0
   58e28:	bne	58e70 <__assert_fail@plt+0x462b8>
   58e2c:	ldr	r0, [fp, #-8]
   58e30:	ldr	r0, [r0, #24]
   58e34:	ldr	r1, [sp, #12]
   58e38:	movw	r2, #12
   58e3c:	mul	r1, r1, r2
   58e40:	add	r1, r0, r1
   58e44:	add	r0, sp, #32
   58e48:	bl	616c0 <__assert_fail@plt+0x4eb08>
   58e4c:	str	r0, [sp, #8]
   58e50:	ldr	r0, [sp, #8]
   58e54:	cmp	r0, #0
   58e58:	beq	58e68 <__assert_fail@plt+0x462b0>
   58e5c:	ldr	r0, [sp, #8]
   58e60:	str	r0, [fp, #-4]
   58e64:	b	58fd8 <__assert_fail@plt+0x46420>
   58e68:	movw	r0, #0
   58e6c:	str	r0, [fp, #-16]
   58e70:	b	58e74 <__assert_fail@plt+0x462bc>
   58e74:	b	58e78 <__assert_fail@plt+0x462c0>
   58e78:	ldr	r0, [fp, #-16]
   58e7c:	add	r0, r0, #1
   58e80:	str	r0, [fp, #-16]
   58e84:	b	58d04 <__assert_fail@plt+0x4614c>
   58e88:	b	58e8c <__assert_fail@plt+0x462d4>
   58e8c:	ldr	r1, [fp, #-8]
   58e90:	sub	r0, fp, #20
   58e94:	add	r2, sp, #32
   58e98:	movw	r3, #0
   58e9c:	bl	6215c <__assert_fail@plt+0x4f5a4>
   58ea0:	ldr	r1, [fp, #-8]
   58ea4:	str	r0, [r1, #36]	; 0x24
   58ea8:	ldr	r0, [fp, #-8]
   58eac:	ldr	r0, [r0, #36]	; 0x24
   58eb0:	movw	r1, #0
   58eb4:	cmp	r0, r1
   58eb8:	bne	58ec8 <__assert_fail@plt+0x46310>
   58ebc:	ldr	r0, [fp, #-20]	; 0xffffffec
   58ec0:	str	r0, [fp, #-4]
   58ec4:	b	58fd8 <__assert_fail@plt+0x46420>
   58ec8:	ldr	r0, [fp, #-8]
   58ecc:	ldr	r0, [r0, #36]	; 0x24
   58ed0:	ldrb	r0, [r0, #52]	; 0x34
   58ed4:	lsr	r0, r0, #7
   58ed8:	and	r0, r0, #255	; 0xff
   58edc:	cmp	r0, #0
   58ee0:	beq	58fa8 <__assert_fail@plt+0x463f0>
   58ee4:	ldr	r1, [fp, #-8]
   58ee8:	sub	r0, fp, #20
   58eec:	add	r2, sp, #32
   58ef0:	movw	r3, #1
   58ef4:	bl	6215c <__assert_fail@plt+0x4f5a4>
   58ef8:	ldr	r1, [fp, #-8]
   58efc:	str	r0, [r1, #40]	; 0x28
   58f00:	ldr	r1, [fp, #-8]
   58f04:	sub	r0, fp, #20
   58f08:	add	r2, sp, #32
   58f0c:	movw	r3, #2
   58f10:	bl	6215c <__assert_fail@plt+0x4f5a4>
   58f14:	ldr	r1, [fp, #-8]
   58f18:	str	r0, [r1, #44]	; 0x2c
   58f1c:	ldr	r1, [fp, #-8]
   58f20:	sub	r0, fp, #20
   58f24:	add	r2, sp, #32
   58f28:	movw	r3, #6
   58f2c:	bl	6215c <__assert_fail@plt+0x4f5a4>
   58f30:	ldr	r1, [fp, #-8]
   58f34:	str	r0, [r1, #48]	; 0x30
   58f38:	ldr	r0, [fp, #-8]
   58f3c:	ldr	r0, [r0, #40]	; 0x28
   58f40:	movw	r1, #0
   58f44:	cmp	r0, r1
   58f48:	movw	r0, #1
   58f4c:	str	r0, [sp, #4]
   58f50:	beq	58f8c <__assert_fail@plt+0x463d4>
   58f54:	ldr	r0, [fp, #-8]
   58f58:	ldr	r0, [r0, #44]	; 0x2c
   58f5c:	movw	r1, #0
   58f60:	cmp	r0, r1
   58f64:	movw	r0, #1
   58f68:	str	r0, [sp, #4]
   58f6c:	beq	58f8c <__assert_fail@plt+0x463d4>
   58f70:	ldr	r0, [fp, #-8]
   58f74:	ldr	r0, [r0, #48]	; 0x30
   58f78:	movw	r1, #0
   58f7c:	cmp	r0, r1
   58f80:	movw	r0, #0
   58f84:	moveq	r0, #1
   58f88:	str	r0, [sp, #4]
   58f8c:	ldr	r0, [sp, #4]
   58f90:	tst	r0, #1
   58f94:	beq	58fa4 <__assert_fail@plt+0x463ec>
   58f98:	ldr	r0, [fp, #-20]	; 0xffffffec
   58f9c:	str	r0, [fp, #-4]
   58fa0:	b	58fd8 <__assert_fail@plt+0x46420>
   58fa4:	b	58fc8 <__assert_fail@plt+0x46410>
   58fa8:	ldr	r0, [fp, #-8]
   58fac:	ldr	r0, [r0, #36]	; 0x24
   58fb0:	ldr	r1, [fp, #-8]
   58fb4:	str	r0, [r1, #48]	; 0x30
   58fb8:	ldr	r1, [fp, #-8]
   58fbc:	str	r0, [r1, #44]	; 0x2c
   58fc0:	ldr	r1, [fp, #-8]
   58fc4:	str	r0, [r1, #40]	; 0x28
   58fc8:	ldr	r0, [sp, #40]	; 0x28
   58fcc:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   58fd0:	movw	r0, #0
   58fd4:	str	r0, [fp, #-4]
   58fd8:	ldr	r0, [fp, #-4]
   58fdc:	mov	sp, fp
   58fe0:	pop	{fp, pc}
   58fe4:	push	{fp, lr}
   58fe8:	mov	fp, sp
   58fec:	sub	sp, sp, #24
   58ff0:	ldr	ip, [fp, #12]
   58ff4:	ldr	lr, [fp, #8]
   58ff8:	str	r0, [fp, #-4]
   58ffc:	str	r1, [fp, #-8]
   59000:	str	r2, [sp, #12]
   59004:	str	r3, [sp, #8]
   59008:	and	r0, lr, #1
   5900c:	strb	r0, [sp, #7]
   59010:	ldr	r0, [fp, #-4]
   59014:	ldr	r1, [sp, #12]
   59018:	str	r0, [r1]
   5901c:	ldr	r0, [fp, #-8]
   59020:	ldr	r1, [sp, #12]
   59024:	str	r0, [r1, #48]	; 0x30
   59028:	ldr	r0, [fp, #-8]
   5902c:	ldr	r1, [sp, #12]
   59030:	str	r0, [r1, #44]	; 0x2c
   59034:	ldr	r0, [sp, #8]
   59038:	ldr	r1, [sp, #12]
   5903c:	str	r0, [r1, #64]	; 0x40
   59040:	ldrb	r0, [sp, #7]
   59044:	and	r0, r0, #1
   59048:	ldr	r1, [sp, #12]
   5904c:	strb	r0, [r1, #72]	; 0x48
   59050:	ldr	r0, [sp, #8]
   59054:	movw	r1, #0
   59058:	cmp	r0, r1
   5905c:	movw	r0, #1
   59060:	str	r0, [sp]
   59064:	bne	59070 <__assert_fail@plt+0x464b8>
   59068:	ldrb	r0, [sp, #7]
   5906c:	str	r0, [sp]
   59070:	ldr	r0, [sp]
   59074:	and	r0, r0, #1
   59078:	ldr	r1, [sp, #12]
   5907c:	strb	r0, [r1, #75]	; 0x4b
   59080:	ldr	r0, [fp, #12]
   59084:	ldr	r0, [r0, #92]	; 0x5c
   59088:	ldr	r1, [sp, #12]
   5908c:	str	r0, [r1, #80]	; 0x50
   59090:	ldr	r0, [fp, #12]
   59094:	ldrb	r0, [r0, #88]	; 0x58
   59098:	ubfx	r0, r0, #2, #1
   5909c:	ldr	r1, [sp, #12]
   590a0:	strb	r0, [r1, #73]	; 0x49
   590a4:	ldr	r0, [fp, #12]
   590a8:	ldrb	r0, [r0, #88]	; 0x58
   590ac:	ubfx	r0, r0, #3, #1
   590b0:	and	r0, r0, #255	; 0xff
   590b4:	ldr	r1, [sp, #12]
   590b8:	strb	r0, [r1, #74]	; 0x4a
   590bc:	ldr	r0, [sp, #12]
   590c0:	ldr	r0, [r0, #48]	; 0x30
   590c4:	ldr	r1, [sp, #12]
   590c8:	str	r0, [r1, #56]	; 0x38
   590cc:	ldr	r0, [sp, #12]
   590d0:	ldr	r0, [r0, #56]	; 0x38
   590d4:	ldr	r1, [sp, #12]
   590d8:	str	r0, [r1, #52]	; 0x34
   590dc:	mov	sp, fp
   590e0:	pop	{fp, pc}
   590e4:	push	{fp, lr}
   590e8:	mov	fp, sp
   590ec:	sub	sp, sp, #32
   590f0:	str	r0, [fp, #-8]
   590f4:	str	r1, [fp, #-12]
   590f8:	ldr	r0, [fp, #-8]
   590fc:	ldr	r0, [r0, #80]	; 0x50
   59100:	cmp	r0, #1
   59104:	ble	591c4 <__assert_fail@plt+0x4660c>
   59108:	ldr	r0, [pc, #296]	; 59238 <__assert_fail@plt+0x46680>
   5910c:	movw	r1, #4
   59110:	str	r1, [sp, #12]
   59114:	ldr	r1, [fp, #-12]
   59118:	cmp	r0, r1
   5911c:	bcs	5912c <__assert_fail@plt+0x46574>
   59120:	movw	r0, #12
   59124:	str	r0, [fp, #-4]
   59128:	b	5922c <__assert_fail@plt+0x46674>
   5912c:	ldr	r0, [fp, #-8]
   59130:	ldr	r0, [r0, #8]
   59134:	ldr	r1, [fp, #-12]
   59138:	lsl	r1, r1, #2
   5913c:	bl	538c8 <__assert_fail@plt+0x40d10>
   59140:	str	r0, [sp, #16]
   59144:	ldr	r0, [sp, #16]
   59148:	movw	r1, #0
   5914c:	cmp	r0, r1
   59150:	bne	59160 <__assert_fail@plt+0x465a8>
   59154:	movw	r0, #12
   59158:	str	r0, [fp, #-4]
   5915c:	b	5922c <__assert_fail@plt+0x46674>
   59160:	ldr	r0, [sp, #16]
   59164:	ldr	r1, [fp, #-8]
   59168:	str	r0, [r1, #8]
   5916c:	ldr	r0, [fp, #-8]
   59170:	ldr	r0, [r0, #12]
   59174:	movw	r1, #0
   59178:	cmp	r0, r1
   5917c:	beq	591c0 <__assert_fail@plt+0x46608>
   59180:	ldr	r0, [fp, #-8]
   59184:	ldr	r0, [r0, #12]
   59188:	ldr	r1, [fp, #-12]
   5918c:	lsl	r1, r1, #2
   59190:	bl	538c8 <__assert_fail@plt+0x40d10>
   59194:	str	r0, [sp, #8]
   59198:	ldr	r0, [sp, #8]
   5919c:	movw	r1, #0
   591a0:	cmp	r0, r1
   591a4:	bne	591b4 <__assert_fail@plt+0x465fc>
   591a8:	movw	r0, #12
   591ac:	str	r0, [fp, #-4]
   591b0:	b	5922c <__assert_fail@plt+0x46674>
   591b4:	ldr	r0, [sp, #8]
   591b8:	ldr	r1, [fp, #-8]
   591bc:	str	r0, [r1, #12]
   591c0:	b	591c4 <__assert_fail@plt+0x4660c>
   591c4:	ldr	r0, [fp, #-8]
   591c8:	ldrsb	r0, [r0, #75]	; 0x4b
   591cc:	cmp	r0, #0
   591d0:	beq	59218 <__assert_fail@plt+0x46660>
   591d4:	ldr	r0, [fp, #-8]
   591d8:	ldr	r0, [r0, #4]
   591dc:	ldr	r1, [fp, #-12]
   591e0:	mov	r2, r1
   591e4:	str	r2, [sp]
   591e8:	bl	538c8 <__assert_fail@plt+0x40d10>
   591ec:	str	r0, [sp, #4]
   591f0:	ldr	r0, [sp, #4]
   591f4:	movw	r1, #0
   591f8:	cmp	r0, r1
   591fc:	bne	5920c <__assert_fail@plt+0x46654>
   59200:	movw	r0, #12
   59204:	str	r0, [fp, #-4]
   59208:	b	5922c <__assert_fail@plt+0x46674>
   5920c:	ldr	r0, [sp, #4]
   59210:	ldr	r1, [fp, #-8]
   59214:	str	r0, [r1, #4]
   59218:	ldr	r0, [fp, #-12]
   5921c:	ldr	r1, [fp, #-8]
   59220:	str	r0, [r1, #36]	; 0x24
   59224:	movw	r0, #0
   59228:	str	r0, [fp, #-4]
   5922c:	ldr	r0, [fp, #-4]
   59230:	mov	sp, fp
   59234:	pop	{fp, pc}
   59238:	svccc	0x00ffffff
   5923c:	push	{fp, lr}
   59240:	mov	fp, sp
   59244:	sub	sp, sp, #184	; 0xb8
   59248:	str	r0, [fp, #-8]
   5924c:	ldr	r0, [fp, #-8]
   59250:	ldr	r0, [r0, #28]
   59254:	str	r0, [fp, #-24]	; 0xffffffe8
   59258:	ldr	r0, [fp, #-8]
   5925c:	ldr	r0, [r0, #36]	; 0x24
   59260:	ldr	r1, [fp, #-8]
   59264:	ldr	r1, [r1, #48]	; 0x30
   59268:	cmp	r0, r1
   5926c:	ble	59280 <__assert_fail@plt+0x466c8>
   59270:	ldr	r0, [fp, #-8]
   59274:	ldr	r0, [r0, #48]	; 0x30
   59278:	str	r0, [sp, #24]
   5927c:	b	5928c <__assert_fail@plt+0x466d4>
   59280:	ldr	r0, [fp, #-8]
   59284:	ldr	r0, [r0, #36]	; 0x24
   59288:	str	r0, [sp, #24]
   5928c:	ldr	r0, [sp, #24]
   59290:	str	r0, [fp, #-28]	; 0xffffffe4
   59294:	ldr	r0, [fp, #-8]
   59298:	ldrsb	r0, [r0, #74]	; 0x4a
   5929c:	cmp	r0, #0
   592a0:	bne	59600 <__assert_fail@plt+0x46a48>
   592a4:	ldr	r0, [fp, #-8]
   592a8:	ldr	r0, [r0, #64]	; 0x40
   592ac:	movw	r1, #0
   592b0:	cmp	r0, r1
   592b4:	bne	59600 <__assert_fail@plt+0x46a48>
   592b8:	ldr	r0, [fp, #-8]
   592bc:	ldrsb	r0, [r0, #76]	; 0x4c
   592c0:	cmp	r0, #0
   592c4:	bne	59600 <__assert_fail@plt+0x46a48>
   592c8:	b	592cc <__assert_fail@plt+0x46714>
   592cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   592d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   592d4:	cmp	r0, r1
   592d8:	bge	595dc <__assert_fail@plt+0x46a24>
   592dc:	ldr	r0, [fp, #-8]
   592e0:	ldr	r0, [r0]
   592e4:	ldr	r1, [fp, #-8]
   592e8:	ldr	r1, [r1, #24]
   592ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   592f0:	add	r1, r1, r2
   592f4:	add	r0, r0, r1
   592f8:	ldrb	r0, [r0]
   592fc:	strb	r0, [sp, #79]	; 0x4f
   59300:	ldrb	r0, [sp, #79]	; 0x4f
   59304:	mvn	r1, #127	; 0x7f
   59308:	and	r0, r0, r1
   5930c:	cmp	r0, #0
   59310:	bne	59388 <__assert_fail@plt+0x467d0>
   59314:	ldr	r0, [fp, #-8]
   59318:	add	r0, r0, #16
   5931c:	bl	12600 <mbsinit@plt>
   59320:	cmp	r0, #0
   59324:	beq	59388 <__assert_fail@plt+0x467d0>
   59328:	ldrb	r0, [sp, #79]	; 0x4f
   5932c:	bl	12b40 <towupper@plt>
   59330:	str	r0, [sp, #72]	; 0x48
   59334:	ldr	r0, [sp, #72]	; 0x48
   59338:	mvn	r1, #127	; 0x7f
   5933c:	and	r0, r0, r1
   59340:	cmp	r0, #0
   59344:	bne	59384 <__assert_fail@plt+0x467cc>
   59348:	ldr	r0, [sp, #72]	; 0x48
   5934c:	ldr	r1, [fp, #-8]
   59350:	ldr	r1, [r1, #4]
   59354:	ldr	r2, [fp, #-24]	; 0xffffffe8
   59358:	strb	r0, [r1, r2]
   5935c:	ldr	r0, [sp, #72]	; 0x48
   59360:	ldr	r1, [fp, #-8]
   59364:	ldr	r1, [r1, #8]
   59368:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5936c:	add	r1, r1, r2, lsl #2
   59370:	str	r0, [r1]
   59374:	ldr	r0, [fp, #-24]	; 0xffffffe8
   59378:	add	r0, r0, #1
   5937c:	str	r0, [fp, #-24]	; 0xffffffe8
   59380:	b	592cc <__assert_fail@plt+0x46714>
   59384:	b	59388 <__assert_fail@plt+0x467d0>
   59388:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5938c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   59390:	sub	r0, r0, r1
   59394:	str	r0, [fp, #-32]	; 0xffffffe0
   59398:	ldr	r0, [fp, #-8]
   5939c:	ldr	r1, [r0, #16]
   593a0:	str	r1, [fp, #-16]
   593a4:	ldr	r0, [r0, #20]
   593a8:	str	r0, [fp, #-12]
   593ac:	ldr	r0, [fp, #-8]
   593b0:	ldr	r0, [r0]
   593b4:	ldr	r1, [fp, #-8]
   593b8:	ldr	r1, [r1, #24]
   593bc:	add	r0, r0, r1
   593c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   593c4:	add	r1, r0, r1
   593c8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   593cc:	ldr	r0, [fp, #-8]
   593d0:	add	r3, r0, #16
   593d4:	add	r0, sp, #80	; 0x50
   593d8:	bl	52860 <__assert_fail@plt+0x3fca8>
   593dc:	str	r0, [fp, #-36]	; 0xffffffdc
   593e0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   593e4:	movw	r1, #0
   593e8:	cmp	r1, r0
   593ec:	movw	r0, #0
   593f0:	str	r0, [sp, #20]
   593f4:	bcs	5940c <__assert_fail@plt+0x46854>
   593f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   593fc:	cmn	r0, #2
   59400:	movw	r0, #0
   59404:	movcc	r0, #1
   59408:	str	r0, [sp, #20]
   5940c:	ldr	r0, [sp, #20]
   59410:	tst	r0, #1
   59414:	beq	59528 <__assert_fail@plt+0x46970>
   59418:	ldr	r0, [sp, #80]	; 0x50
   5941c:	bl	12b40 <towupper@plt>
   59420:	str	r0, [sp, #68]	; 0x44
   59424:	ldr	r0, [sp, #68]	; 0x44
   59428:	ldr	r1, [sp, #80]	; 0x50
   5942c:	cmp	r0, r1
   59430:	beq	59488 <__assert_fail@plt+0x468d0>
   59434:	add	r0, sp, #84	; 0x54
   59438:	ldr	r1, [sp, #68]	; 0x44
   5943c:	sub	r2, fp, #16
   59440:	bl	1248c <wcrtomb@plt>
   59444:	str	r0, [sp, #64]	; 0x40
   59448:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5944c:	ldr	r1, [sp, #64]	; 0x40
   59450:	cmp	r0, r1
   59454:	bne	59478 <__assert_fail@plt+0x468c0>
   59458:	add	r1, sp, #84	; 0x54
   5945c:	ldr	r0, [fp, #-8]
   59460:	ldr	r0, [r0, #4]
   59464:	ldr	r2, [fp, #-24]	; 0xffffffe8
   59468:	add	r0, r0, r2
   5946c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   59470:	bl	125c4 <memcpy@plt>
   59474:	b	59484 <__assert_fail@plt+0x468cc>
   59478:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5947c:	str	r0, [fp, #-20]	; 0xffffffec
   59480:	b	59620 <__assert_fail@plt+0x46a68>
   59484:	b	594bc <__assert_fail@plt+0x46904>
   59488:	ldr	r0, [fp, #-8]
   5948c:	ldr	r0, [r0, #4]
   59490:	ldr	r1, [fp, #-24]	; 0xffffffe8
   59494:	add	r0, r0, r1
   59498:	ldr	r1, [fp, #-8]
   5949c:	ldr	r1, [r1]
   594a0:	ldr	r2, [fp, #-8]
   594a4:	ldr	r2, [r2, #24]
   594a8:	add	r1, r1, r2
   594ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   594b0:	add	r1, r1, r2
   594b4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   594b8:	bl	125c4 <memcpy@plt>
   594bc:	ldr	r0, [sp, #68]	; 0x44
   594c0:	ldr	r1, [fp, #-8]
   594c4:	ldr	r1, [r1, #8]
   594c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   594cc:	add	r3, r2, #1
   594d0:	str	r3, [fp, #-24]	; 0xffffffe8
   594d4:	add	r1, r1, r2, lsl #2
   594d8:	str	r0, [r1]
   594dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   594e0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   594e4:	add	r0, r0, r1
   594e8:	sub	r0, r0, #1
   594ec:	str	r0, [fp, #-32]	; 0xffffffe0
   594f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   594f4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   594f8:	cmp	r0, r1
   594fc:	bge	59524 <__assert_fail@plt+0x4696c>
   59500:	ldr	r0, [fp, #-8]
   59504:	ldr	r0, [r0, #8]
   59508:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5950c:	add	r2, r1, #1
   59510:	str	r2, [fp, #-24]	; 0xffffffe8
   59514:	add	r0, r0, r1, lsl #2
   59518:	mvn	r1, #0
   5951c:	str	r1, [r0]
   59520:	b	594f0 <__assert_fail@plt+0x46938>
   59524:	b	595d8 <__assert_fail@plt+0x46a20>
   59528:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5952c:	cmn	r0, #1
   59530:	beq	59564 <__assert_fail@plt+0x469ac>
   59534:	ldr	r0, [fp, #-36]	; 0xffffffdc
   59538:	cmp	r0, #0
   5953c:	beq	59564 <__assert_fail@plt+0x469ac>
   59540:	ldr	r0, [fp, #-36]	; 0xffffffdc
   59544:	cmn	r0, #2
   59548:	bne	595bc <__assert_fail@plt+0x46a04>
   5954c:	ldr	r0, [fp, #-8]
   59550:	ldr	r0, [r0, #36]	; 0x24
   59554:	ldr	r1, [fp, #-8]
   59558:	ldr	r1, [r1, #48]	; 0x30
   5955c:	cmp	r0, r1
   59560:	blt	595bc <__assert_fail@plt+0x46a04>
   59564:	ldrb	r0, [sp, #79]	; 0x4f
   59568:	ldr	r1, [fp, #-8]
   5956c:	ldr	r1, [r1, #4]
   59570:	ldr	r2, [fp, #-24]	; 0xffffffe8
   59574:	strb	r0, [r1, r2]
   59578:	ldrb	r0, [sp, #79]	; 0x4f
   5957c:	ldr	r1, [fp, #-8]
   59580:	ldr	r1, [r1, #8]
   59584:	ldr	r2, [fp, #-24]	; 0xffffffe8
   59588:	add	r3, r2, #1
   5958c:	str	r3, [fp, #-24]	; 0xffffffe8
   59590:	add	r1, r1, r2, lsl #2
   59594:	str	r0, [r1]
   59598:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5959c:	cmn	r0, #1
   595a0:	bne	595b8 <__assert_fail@plt+0x46a00>
   595a4:	ldr	r0, [fp, #-8]
   595a8:	ldr	r1, [fp, #-16]
   595ac:	str	r1, [r0, #16]
   595b0:	ldr	r1, [fp, #-12]
   595b4:	str	r1, [r0, #20]
   595b8:	b	595d4 <__assert_fail@plt+0x46a1c>
   595bc:	ldr	r0, [fp, #-8]
   595c0:	ldr	r1, [fp, #-16]
   595c4:	str	r1, [r0, #16]
   595c8:	ldr	r1, [fp, #-12]
   595cc:	str	r1, [r0, #20]
   595d0:	b	595dc <__assert_fail@plt+0x46a24>
   595d4:	b	595d8 <__assert_fail@plt+0x46a20>
   595d8:	b	592cc <__assert_fail@plt+0x46714>
   595dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   595e0:	ldr	r1, [fp, #-8]
   595e4:	str	r0, [r1, #28]
   595e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   595ec:	ldr	r1, [fp, #-8]
   595f0:	str	r0, [r1, #32]
   595f4:	movw	r0, #0
   595f8:	str	r0, [fp, #-4]
   595fc:	b	59cd8 <__assert_fail@plt+0x47120>
   59600:	ldr	r0, [fp, #-8]
   59604:	ldr	r0, [r0, #32]
   59608:	str	r0, [fp, #-20]	; 0xffffffec
   5960c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   59610:	ldr	r1, [fp, #-28]	; 0xffffffe4
   59614:	cmp	r0, r1
   59618:	bge	59cb4 <__assert_fail@plt+0x470fc>
   5961c:	b	59620 <__assert_fail@plt+0x46a68>
   59620:	ldr	r0, [fp, #-28]	; 0xffffffe4
   59624:	ldr	r1, [fp, #-24]	; 0xffffffe8
   59628:	sub	r0, r0, r1
   5962c:	str	r0, [fp, #-32]	; 0xffffffe0
   59630:	ldr	r0, [fp, #-8]
   59634:	ldr	r1, [r0, #16]
   59638:	str	r1, [fp, #-16]
   5963c:	ldr	r0, [r0, #20]
   59640:	str	r0, [fp, #-12]
   59644:	ldr	r0, [fp, #-8]
   59648:	ldr	r0, [r0, #64]	; 0x40
   5964c:	movw	r1, #0
   59650:	cmp	r0, r1
   59654:	beq	5970c <__assert_fail@plt+0x46b54>
   59658:	movw	r0, #0
   5965c:	str	r0, [sp, #52]	; 0x34
   59660:	ldr	r0, [sp, #52]	; 0x34
   59664:	ldr	r1, [fp, #-8]
   59668:	ldr	r1, [r1, #80]	; 0x50
   5966c:	cmp	r0, r1
   59670:	movw	r0, #0
   59674:	str	r0, [sp, #16]
   59678:	bge	59694 <__assert_fail@plt+0x46adc>
   5967c:	ldr	r0, [sp, #52]	; 0x34
   59680:	ldr	r1, [fp, #-32]	; 0xffffffe0
   59684:	cmp	r0, r1
   59688:	movw	r0, #0
   5968c:	movlt	r0, #1
   59690:	str	r0, [sp, #16]
   59694:	ldr	r0, [sp, #16]
   59698:	tst	r0, #1
   5969c:	beq	59700 <__assert_fail@plt+0x46b48>
   596a0:	ldr	r0, [fp, #-8]
   596a4:	ldr	r0, [r0]
   596a8:	ldr	r1, [fp, #-8]
   596ac:	ldr	r1, [r1, #24]
   596b0:	ldr	r2, [fp, #-20]	; 0xffffffec
   596b4:	add	r1, r1, r2
   596b8:	ldr	r2, [sp, #52]	; 0x34
   596bc:	add	r1, r1, r2
   596c0:	add	r0, r0, r1
   596c4:	ldrb	r0, [r0]
   596c8:	str	r0, [sp, #48]	; 0x30
   596cc:	ldr	r0, [fp, #-8]
   596d0:	ldr	r0, [r0, #64]	; 0x40
   596d4:	ldr	r1, [sp, #48]	; 0x30
   596d8:	add	r0, r0, r1
   596dc:	ldrb	r0, [r0]
   596e0:	ldr	r1, [sp, #52]	; 0x34
   596e4:	add	r2, sp, #84	; 0x54
   596e8:	add	r1, r2, r1
   596ec:	strb	r0, [r1]
   596f0:	ldr	r0, [sp, #52]	; 0x34
   596f4:	add	r0, r0, #1
   596f8:	str	r0, [sp, #52]	; 0x34
   596fc:	b	59660 <__assert_fail@plt+0x46aa8>
   59700:	add	r0, sp, #84	; 0x54
   59704:	str	r0, [sp, #56]	; 0x38
   59708:	b	5972c <__assert_fail@plt+0x46b74>
   5970c:	ldr	r0, [fp, #-8]
   59710:	ldr	r0, [r0]
   59714:	ldr	r1, [fp, #-8]
   59718:	ldr	r1, [r1, #24]
   5971c:	add	r0, r0, r1
   59720:	ldr	r1, [fp, #-20]	; 0xffffffec
   59724:	add	r0, r0, r1
   59728:	str	r0, [sp, #56]	; 0x38
   5972c:	ldr	r1, [sp, #56]	; 0x38
   59730:	ldr	r2, [fp, #-32]	; 0xffffffe0
   59734:	ldr	r0, [fp, #-8]
   59738:	add	r3, r0, #16
   5973c:	add	r0, sp, #60	; 0x3c
   59740:	bl	52860 <__assert_fail@plt+0x3fca8>
   59744:	str	r0, [fp, #-36]	; 0xffffffdc
   59748:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5974c:	movw	r1, #0
   59750:	cmp	r1, r0
   59754:	movw	r0, #0
   59758:	str	r0, [sp, #12]
   5975c:	bcs	59774 <__assert_fail@plt+0x46bbc>
   59760:	ldr	r0, [fp, #-36]	; 0xffffffdc
   59764:	cmn	r0, #2
   59768:	movw	r0, #0
   5976c:	movcc	r0, #1
   59770:	str	r0, [sp, #12]
   59774:	ldr	r0, [sp, #12]
   59778:	tst	r0, #1
   5977c:	beq	59b78 <__assert_fail@plt+0x46fc0>
   59780:	ldr	r0, [sp, #60]	; 0x3c
   59784:	bl	12b40 <towupper@plt>
   59788:	str	r0, [sp, #44]	; 0x2c
   5978c:	ldr	r0, [sp, #44]	; 0x2c
   59790:	ldr	r1, [sp, #60]	; 0x3c
   59794:	cmp	r0, r1
   59798:	beq	59a80 <__assert_fail@plt+0x46ec8>
   5979c:	add	r0, sp, #84	; 0x54
   597a0:	ldr	r1, [sp, #44]	; 0x2c
   597a4:	sub	r2, fp, #16
   597a8:	bl	1248c <wcrtomb@plt>
   597ac:	str	r0, [sp, #40]	; 0x28
   597b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   597b4:	ldr	r1, [sp, #40]	; 0x28
   597b8:	cmp	r0, r1
   597bc:	bne	597e0 <__assert_fail@plt+0x46c28>
   597c0:	add	r1, sp, #84	; 0x54
   597c4:	ldr	r0, [fp, #-8]
   597c8:	ldr	r0, [r0, #4]
   597cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   597d0:	add	r0, r0, r2
   597d4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   597d8:	bl	125c4 <memcpy@plt>
   597dc:	b	59a7c <__assert_fail@plt+0x46ec4>
   597e0:	ldr	r0, [sp, #40]	; 0x28
   597e4:	cmn	r0, #1
   597e8:	beq	59a5c <__assert_fail@plt+0x46ea4>
   597ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   597f0:	ldr	r1, [sp, #40]	; 0x28
   597f4:	add	r0, r0, r1
   597f8:	ldr	r1, [fp, #-8]
   597fc:	ldr	r1, [r1, #36]	; 0x24
   59800:	cmp	r0, r1
   59804:	bls	59820 <__assert_fail@plt+0x46c68>
   59808:	ldr	r0, [fp, #-8]
   5980c:	ldr	r1, [fp, #-16]
   59810:	str	r1, [r0, #16]
   59814:	ldr	r1, [fp, #-12]
   59818:	str	r1, [r0, #20]
   5981c:	b	59cb4 <__assert_fail@plt+0x470fc>
   59820:	ldr	r0, [fp, #-8]
   59824:	ldr	r0, [r0, #12]
   59828:	movw	r1, #0
   5982c:	cmp	r0, r1
   59830:	bne	59870 <__assert_fail@plt+0x46cb8>
   59834:	ldr	r0, [fp, #-8]
   59838:	ldr	r0, [r0, #36]	; 0x24
   5983c:	lsl	r0, r0, #2
   59840:	bl	527f0 <__assert_fail@plt+0x3fc38>
   59844:	ldr	r1, [fp, #-8]
   59848:	str	r0, [r1, #12]
   5984c:	ldr	r0, [fp, #-8]
   59850:	ldr	r0, [r0, #12]
   59854:	movw	r1, #0
   59858:	cmp	r0, r1
   5985c:	bne	5986c <__assert_fail@plt+0x46cb4>
   59860:	movw	r0, #12
   59864:	str	r0, [fp, #-4]
   59868:	b	59cd8 <__assert_fail@plt+0x47120>
   5986c:	b	59870 <__assert_fail@plt+0x46cb8>
   59870:	ldr	r0, [fp, #-8]
   59874:	ldrsb	r0, [r0, #76]	; 0x4c
   59878:	cmp	r0, #0
   5987c:	bne	598cc <__assert_fail@plt+0x46d14>
   59880:	movw	r0, #0
   59884:	str	r0, [sp, #36]	; 0x24
   59888:	ldr	r0, [sp, #36]	; 0x24
   5988c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   59890:	cmp	r0, r1
   59894:	bcs	598c0 <__assert_fail@plt+0x46d08>
   59898:	ldr	r0, [sp, #36]	; 0x24
   5989c:	mov	r1, r0
   598a0:	ldr	r2, [fp, #-8]
   598a4:	ldr	r2, [r2, #12]
   598a8:	add	r0, r2, r0, lsl #2
   598ac:	str	r1, [r0]
   598b0:	ldr	r0, [sp, #36]	; 0x24
   598b4:	add	r0, r0, #1
   598b8:	str	r0, [sp, #36]	; 0x24
   598bc:	b	59888 <__assert_fail@plt+0x46cd0>
   598c0:	ldr	r0, [fp, #-8]
   598c4:	movw	r1, #1
   598c8:	strb	r1, [r0, #76]	; 0x4c
   598cc:	ldr	r0, [fp, #-8]
   598d0:	ldr	r0, [r0, #4]
   598d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   598d8:	add	r0, r0, r1
   598dc:	ldr	r2, [sp, #40]	; 0x28
   598e0:	add	r1, sp, #84	; 0x54
   598e4:	bl	125c4 <memcpy@plt>
   598e8:	ldr	r1, [sp, #44]	; 0x2c
   598ec:	ldr	r2, [fp, #-8]
   598f0:	ldr	r2, [r2, #8]
   598f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   598f8:	str	r1, [r2, r3, lsl #2]
   598fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   59900:	ldr	r2, [fp, #-8]
   59904:	ldr	r2, [r2, #12]
   59908:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5990c:	add	r2, r2, r3, lsl #2
   59910:	str	r1, [r2]
   59914:	movw	r1, #1
   59918:	str	r1, [sp, #36]	; 0x24
   5991c:	ldr	r0, [sp, #36]	; 0x24
   59920:	ldr	r1, [sp, #40]	; 0x28
   59924:	cmp	r0, r1
   59928:	bcs	599b0 <__assert_fail@plt+0x46df8>
   5992c:	ldr	r0, [fp, #-20]	; 0xffffffec
   59930:	ldr	r1, [sp, #36]	; 0x24
   59934:	ldr	r2, [fp, #-36]	; 0xffffffdc
   59938:	cmp	r1, r2
   5993c:	str	r0, [sp, #8]
   59940:	bcs	59950 <__assert_fail@plt+0x46d98>
   59944:	ldr	r0, [sp, #36]	; 0x24
   59948:	str	r0, [sp, #4]
   5994c:	b	5995c <__assert_fail@plt+0x46da4>
   59950:	ldr	r0, [fp, #-36]	; 0xffffffdc
   59954:	sub	r0, r0, #1
   59958:	str	r0, [sp, #4]
   5995c:	ldr	r0, [sp, #4]
   59960:	ldr	r1, [sp, #8]
   59964:	add	r0, r1, r0
   59968:	ldr	r2, [fp, #-8]
   5996c:	ldr	r2, [r2, #12]
   59970:	ldr	r3, [fp, #-24]	; 0xffffffe8
   59974:	ldr	ip, [sp, #36]	; 0x24
   59978:	add	r3, r3, ip
   5997c:	str	r0, [r2, r3, lsl #2]
   59980:	ldr	r0, [fp, #-8]
   59984:	ldr	r0, [r0, #8]
   59988:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5998c:	ldr	r3, [sp, #36]	; 0x24
   59990:	add	r2, r2, r3
   59994:	add	r0, r0, r2, lsl #2
   59998:	mvn	r2, #0
   5999c:	str	r2, [r0]
   599a0:	ldr	r0, [sp, #36]	; 0x24
   599a4:	add	r0, r0, #1
   599a8:	str	r0, [sp, #36]	; 0x24
   599ac:	b	5991c <__assert_fail@plt+0x46d64>
   599b0:	ldr	r0, [sp, #40]	; 0x28
   599b4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   599b8:	sub	r0, r0, r1
   599bc:	ldr	r1, [fp, #-8]
   599c0:	ldr	r2, [r1, #48]	; 0x30
   599c4:	add	r0, r2, r0
   599c8:	str	r0, [r1, #48]	; 0x30
   599cc:	ldr	r0, [fp, #-8]
   599d0:	ldr	r0, [r0, #52]	; 0x34
   599d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   599d8:	cmp	r0, r1
   599dc:	ble	599fc <__assert_fail@plt+0x46e44>
   599e0:	ldr	r0, [sp, #40]	; 0x28
   599e4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   599e8:	sub	r0, r0, r1
   599ec:	ldr	r1, [fp, #-8]
   599f0:	ldr	r2, [r1, #56]	; 0x38
   599f4:	add	r0, r2, r0
   599f8:	str	r0, [r1, #56]	; 0x38
   599fc:	ldr	r0, [fp, #-8]
   59a00:	ldr	r0, [r0, #36]	; 0x24
   59a04:	ldr	r1, [fp, #-8]
   59a08:	ldr	r1, [r1, #48]	; 0x30
   59a0c:	cmp	r0, r1
   59a10:	ble	59a24 <__assert_fail@plt+0x46e6c>
   59a14:	ldr	r0, [fp, #-8]
   59a18:	ldr	r0, [r0, #48]	; 0x30
   59a1c:	str	r0, [sp]
   59a20:	b	59a30 <__assert_fail@plt+0x46e78>
   59a24:	ldr	r0, [fp, #-8]
   59a28:	ldr	r0, [r0, #36]	; 0x24
   59a2c:	str	r0, [sp]
   59a30:	ldr	r0, [sp]
   59a34:	str	r0, [fp, #-28]	; 0xffffffe4
   59a38:	ldr	r0, [sp, #40]	; 0x28
   59a3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   59a40:	add	r0, r1, r0
   59a44:	str	r0, [fp, #-24]	; 0xffffffe8
   59a48:	ldr	r0, [fp, #-36]	; 0xffffffdc
   59a4c:	ldr	r1, [fp, #-20]	; 0xffffffec
   59a50:	add	r0, r1, r0
   59a54:	str	r0, [fp, #-20]	; 0xffffffec
   59a58:	b	5960c <__assert_fail@plt+0x46a54>
   59a5c:	ldr	r0, [fp, #-8]
   59a60:	ldr	r0, [r0, #4]
   59a64:	ldr	r1, [fp, #-24]	; 0xffffffe8
   59a68:	add	r0, r0, r1
   59a6c:	ldr	r1, [sp, #56]	; 0x38
   59a70:	ldr	r2, [fp, #-36]	; 0xffffffdc
   59a74:	bl	125c4 <memcpy@plt>
   59a78:	b	59a7c <__assert_fail@plt+0x46ec4>
   59a7c:	b	59a9c <__assert_fail@plt+0x46ee4>
   59a80:	ldr	r0, [fp, #-8]
   59a84:	ldr	r0, [r0, #4]
   59a88:	ldr	r1, [fp, #-24]	; 0xffffffe8
   59a8c:	add	r0, r0, r1
   59a90:	ldr	r1, [sp, #56]	; 0x38
   59a94:	ldr	r2, [fp, #-36]	; 0xffffffdc
   59a98:	bl	125c4 <memcpy@plt>
   59a9c:	ldr	r0, [fp, #-8]
   59aa0:	ldrb	r0, [r0, #76]	; 0x4c
   59aa4:	cmp	r0, #0
   59aa8:	beq	59afc <__assert_fail@plt+0x46f44>
   59aac:	movw	r0, #0
   59ab0:	str	r0, [sp, #32]
   59ab4:	ldr	r0, [sp, #32]
   59ab8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   59abc:	cmp	r0, r1
   59ac0:	bcs	59af8 <__assert_fail@plt+0x46f40>
   59ac4:	ldr	r0, [fp, #-20]	; 0xffffffec
   59ac8:	ldr	r1, [sp, #32]
   59acc:	add	r0, r0, r1
   59ad0:	ldr	r2, [fp, #-8]
   59ad4:	ldr	r2, [r2, #12]
   59ad8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   59adc:	add	r1, r3, r1
   59ae0:	add	r1, r2, r1, lsl #2
   59ae4:	str	r0, [r1]
   59ae8:	ldr	r0, [sp, #32]
   59aec:	add	r0, r0, #1
   59af0:	str	r0, [sp, #32]
   59af4:	b	59ab4 <__assert_fail@plt+0x46efc>
   59af8:	b	59afc <__assert_fail@plt+0x46f44>
   59afc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   59b00:	ldr	r1, [fp, #-20]	; 0xffffffec
   59b04:	add	r0, r1, r0
   59b08:	str	r0, [fp, #-20]	; 0xffffffec
   59b0c:	ldr	r0, [sp, #44]	; 0x2c
   59b10:	ldr	r1, [fp, #-8]
   59b14:	ldr	r1, [r1, #8]
   59b18:	ldr	r2, [fp, #-24]	; 0xffffffe8
   59b1c:	add	r3, r2, #1
   59b20:	str	r3, [fp, #-24]	; 0xffffffe8
   59b24:	add	r1, r1, r2, lsl #2
   59b28:	str	r0, [r1]
   59b2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   59b30:	ldr	r1, [fp, #-36]	; 0xffffffdc
   59b34:	add	r0, r0, r1
   59b38:	sub	r0, r0, #1
   59b3c:	str	r0, [fp, #-32]	; 0xffffffe0
   59b40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   59b44:	ldr	r1, [fp, #-32]	; 0xffffffe0
   59b48:	cmp	r0, r1
   59b4c:	bge	59b74 <__assert_fail@plt+0x46fbc>
   59b50:	ldr	r0, [fp, #-8]
   59b54:	ldr	r0, [r0, #8]
   59b58:	ldr	r1, [fp, #-24]	; 0xffffffe8
   59b5c:	add	r2, r1, #1
   59b60:	str	r2, [fp, #-24]	; 0xffffffe8
   59b64:	add	r0, r0, r1, lsl #2
   59b68:	mvn	r1, #0
   59b6c:	str	r1, [r0]
   59b70:	b	59b40 <__assert_fail@plt+0x46f88>
   59b74:	b	59cb0 <__assert_fail@plt+0x470f8>
   59b78:	ldr	r0, [fp, #-36]	; 0xffffffdc
   59b7c:	cmn	r0, #1
   59b80:	beq	59bb4 <__assert_fail@plt+0x46ffc>
   59b84:	ldr	r0, [fp, #-36]	; 0xffffffdc
   59b88:	cmp	r0, #0
   59b8c:	beq	59bb4 <__assert_fail@plt+0x46ffc>
   59b90:	ldr	r0, [fp, #-36]	; 0xffffffdc
   59b94:	cmn	r0, #2
   59b98:	bne	59c94 <__assert_fail@plt+0x470dc>
   59b9c:	ldr	r0, [fp, #-8]
   59ba0:	ldr	r0, [r0, #36]	; 0x24
   59ba4:	ldr	r1, [fp, #-8]
   59ba8:	ldr	r1, [r1, #48]	; 0x30
   59bac:	cmp	r0, r1
   59bb0:	blt	59c94 <__assert_fail@plt+0x470dc>
   59bb4:	ldr	r0, [fp, #-8]
   59bb8:	ldr	r0, [r0]
   59bbc:	ldr	r1, [fp, #-8]
   59bc0:	ldr	r1, [r1, #24]
   59bc4:	ldr	r2, [fp, #-20]	; 0xffffffec
   59bc8:	add	r1, r1, r2
   59bcc:	add	r0, r0, r1
   59bd0:	ldrb	r0, [r0]
   59bd4:	str	r0, [sp, #28]
   59bd8:	ldr	r0, [fp, #-8]
   59bdc:	ldr	r0, [r0, #64]	; 0x40
   59be0:	movw	r1, #0
   59be4:	cmp	r0, r1
   59be8:	beq	59c04 <__assert_fail@plt+0x4704c>
   59bec:	ldr	r0, [fp, #-8]
   59bf0:	ldr	r0, [r0, #64]	; 0x40
   59bf4:	ldr	r1, [sp, #28]
   59bf8:	add	r0, r0, r1
   59bfc:	ldrb	r0, [r0]
   59c00:	str	r0, [sp, #28]
   59c04:	ldr	r0, [sp, #28]
   59c08:	ldr	r1, [fp, #-8]
   59c0c:	ldr	r1, [r1, #4]
   59c10:	ldr	r2, [fp, #-24]	; 0xffffffe8
   59c14:	add	r1, r1, r2
   59c18:	strb	r0, [r1]
   59c1c:	ldr	r0, [fp, #-8]
   59c20:	ldrb	r0, [r0, #76]	; 0x4c
   59c24:	cmp	r0, #0
   59c28:	beq	59c44 <__assert_fail@plt+0x4708c>
   59c2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   59c30:	ldr	r1, [fp, #-8]
   59c34:	ldr	r1, [r1, #12]
   59c38:	ldr	r2, [fp, #-24]	; 0xffffffe8
   59c3c:	add	r1, r1, r2, lsl #2
   59c40:	str	r0, [r1]
   59c44:	ldr	r0, [fp, #-20]	; 0xffffffec
   59c48:	add	r0, r0, #1
   59c4c:	str	r0, [fp, #-20]	; 0xffffffec
   59c50:	ldr	r0, [sp, #28]
   59c54:	ldr	r1, [fp, #-8]
   59c58:	ldr	r1, [r1, #8]
   59c5c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   59c60:	add	r3, r2, #1
   59c64:	str	r3, [fp, #-24]	; 0xffffffe8
   59c68:	add	r1, r1, r2, lsl #2
   59c6c:	str	r0, [r1]
   59c70:	ldr	r0, [fp, #-36]	; 0xffffffdc
   59c74:	cmn	r0, #1
   59c78:	bne	59c90 <__assert_fail@plt+0x470d8>
   59c7c:	ldr	r0, [fp, #-8]
   59c80:	ldr	r1, [fp, #-16]
   59c84:	str	r1, [r0, #16]
   59c88:	ldr	r1, [fp, #-12]
   59c8c:	str	r1, [r0, #20]
   59c90:	b	59cac <__assert_fail@plt+0x470f4>
   59c94:	ldr	r0, [fp, #-8]
   59c98:	ldr	r1, [fp, #-16]
   59c9c:	str	r1, [r0, #16]
   59ca0:	ldr	r1, [fp, #-12]
   59ca4:	str	r1, [r0, #20]
   59ca8:	b	59cb4 <__assert_fail@plt+0x470fc>
   59cac:	b	59cb0 <__assert_fail@plt+0x470f8>
   59cb0:	b	5960c <__assert_fail@plt+0x46a54>
   59cb4:	b	59cb8 <__assert_fail@plt+0x47100>
   59cb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   59cbc:	ldr	r1, [fp, #-8]
   59cc0:	str	r0, [r1, #28]
   59cc4:	ldr	r0, [fp, #-20]	; 0xffffffec
   59cc8:	ldr	r1, [fp, #-8]
   59ccc:	str	r0, [r1, #32]
   59cd0:	movw	r0, #0
   59cd4:	str	r0, [fp, #-4]
   59cd8:	ldr	r0, [fp, #-4]
   59cdc:	mov	sp, fp
   59ce0:	pop	{fp, pc}
   59ce4:	push	{fp, lr}
   59ce8:	mov	fp, sp
   59cec:	sub	sp, sp, #24
   59cf0:	str	r0, [fp, #-4]
   59cf4:	ldr	r0, [fp, #-4]
   59cf8:	ldr	r0, [r0, #36]	; 0x24
   59cfc:	ldr	r1, [fp, #-4]
   59d00:	ldr	r1, [r1, #48]	; 0x30
   59d04:	cmp	r0, r1
   59d08:	ble	59d1c <__assert_fail@plt+0x47164>
   59d0c:	ldr	r0, [fp, #-4]
   59d10:	ldr	r0, [r0, #48]	; 0x30
   59d14:	str	r0, [sp, #4]
   59d18:	b	59d28 <__assert_fail@plt+0x47170>
   59d1c:	ldr	r0, [fp, #-4]
   59d20:	ldr	r0, [r0, #36]	; 0x24
   59d24:	str	r0, [sp, #4]
   59d28:	ldr	r0, [sp, #4]
   59d2c:	str	r0, [sp, #12]
   59d30:	ldr	r0, [fp, #-4]
   59d34:	ldr	r0, [r0, #28]
   59d38:	str	r0, [fp, #-8]
   59d3c:	ldr	r0, [fp, #-8]
   59d40:	ldr	r1, [sp, #12]
   59d44:	cmp	r0, r1
   59d48:	bge	59dc8 <__assert_fail@plt+0x47210>
   59d4c:	ldr	r0, [fp, #-4]
   59d50:	ldr	r0, [r0]
   59d54:	ldr	r1, [fp, #-4]
   59d58:	ldr	r1, [r1, #24]
   59d5c:	ldr	r2, [fp, #-8]
   59d60:	add	r1, r1, r2
   59d64:	add	r0, r0, r1
   59d68:	ldrb	r0, [r0]
   59d6c:	str	r0, [sp, #8]
   59d70:	ldr	r0, [fp, #-4]
   59d74:	ldr	r0, [r0, #64]	; 0x40
   59d78:	movw	r1, #0
   59d7c:	cmp	r0, r1
   59d80:	beq	59d9c <__assert_fail@plt+0x471e4>
   59d84:	ldr	r0, [fp, #-4]
   59d88:	ldr	r0, [r0, #64]	; 0x40
   59d8c:	ldr	r1, [sp, #8]
   59d90:	add	r0, r0, r1
   59d94:	ldrb	r0, [r0]
   59d98:	str	r0, [sp, #8]
   59d9c:	ldr	r0, [sp, #8]
   59da0:	bl	12a08 <toupper@plt>
   59da4:	ldr	r1, [fp, #-4]
   59da8:	ldr	r1, [r1, #4]
   59dac:	ldr	r2, [fp, #-8]
   59db0:	add	r1, r1, r2
   59db4:	strb	r0, [r1]
   59db8:	ldr	r0, [fp, #-8]
   59dbc:	add	r0, r0, #1
   59dc0:	str	r0, [fp, #-8]
   59dc4:	b	59d3c <__assert_fail@plt+0x47184>
   59dc8:	ldr	r0, [fp, #-8]
   59dcc:	ldr	r1, [fp, #-4]
   59dd0:	str	r0, [r1, #28]
   59dd4:	ldr	r0, [fp, #-8]
   59dd8:	ldr	r1, [fp, #-4]
   59ddc:	str	r0, [r1, #32]
   59de0:	mov	sp, fp
   59de4:	pop	{fp, pc}
   59de8:	push	{fp, lr}
   59dec:	mov	fp, sp
   59df0:	sub	sp, sp, #128	; 0x80
   59df4:	str	r0, [fp, #-4]
   59df8:	ldr	r0, [fp, #-4]
   59dfc:	ldr	r0, [r0, #36]	; 0x24
   59e00:	ldr	r1, [fp, #-4]
   59e04:	ldr	r1, [r1, #48]	; 0x30
   59e08:	cmp	r0, r1
   59e0c:	ble	59e20 <__assert_fail@plt+0x47268>
   59e10:	ldr	r0, [fp, #-4]
   59e14:	ldr	r0, [r0, #48]	; 0x30
   59e18:	str	r0, [sp, #16]
   59e1c:	b	59e2c <__assert_fail@plt+0x47274>
   59e20:	ldr	r0, [fp, #-4]
   59e24:	ldr	r0, [r0, #36]	; 0x24
   59e28:	str	r0, [sp, #16]
   59e2c:	ldr	r0, [sp, #16]
   59e30:	str	r0, [sp, #44]	; 0x2c
   59e34:	ldr	r0, [fp, #-4]
   59e38:	ldr	r0, [r0, #28]
   59e3c:	str	r0, [sp, #48]	; 0x30
   59e40:	ldr	r0, [sp, #48]	; 0x30
   59e44:	ldr	r1, [sp, #44]	; 0x2c
   59e48:	cmp	r0, r1
   59e4c:	bge	5a108 <__assert_fail@plt+0x47550>
   59e50:	ldr	r0, [sp, #44]	; 0x2c
   59e54:	ldr	r1, [sp, #48]	; 0x30
   59e58:	sub	r0, r0, r1
   59e5c:	str	r0, [sp, #40]	; 0x28
   59e60:	ldr	r0, [fp, #-4]
   59e64:	ldr	r1, [r0, #16]
   59e68:	str	r1, [sp, #52]	; 0x34
   59e6c:	ldr	r0, [r0, #20]
   59e70:	str	r0, [sp, #56]	; 0x38
   59e74:	ldr	r0, [fp, #-4]
   59e78:	ldr	r0, [r0, #64]	; 0x40
   59e7c:	movw	r1, #0
   59e80:	cmp	r0, r1
   59e84:	beq	59f58 <__assert_fail@plt+0x473a0>
   59e88:	movw	r0, #0
   59e8c:	str	r0, [sp, #24]
   59e90:	ldr	r0, [sp, #24]
   59e94:	ldr	r1, [fp, #-4]
   59e98:	ldr	r1, [r1, #80]	; 0x50
   59e9c:	cmp	r0, r1
   59ea0:	movw	r0, #0
   59ea4:	str	r0, [sp, #12]
   59ea8:	bge	59ec4 <__assert_fail@plt+0x4730c>
   59eac:	ldr	r0, [sp, #24]
   59eb0:	ldr	r1, [sp, #40]	; 0x28
   59eb4:	cmp	r0, r1
   59eb8:	movw	r0, #0
   59ebc:	movlt	r0, #1
   59ec0:	str	r0, [sp, #12]
   59ec4:	ldr	r0, [sp, #12]
   59ec8:	tst	r0, #1
   59ecc:	beq	59f4c <__assert_fail@plt+0x47394>
   59ed0:	ldr	r0, [fp, #-4]
   59ed4:	ldr	r0, [r0]
   59ed8:	ldr	r1, [fp, #-4]
   59edc:	ldr	r1, [r1, #24]
   59ee0:	ldr	r2, [sp, #48]	; 0x30
   59ee4:	add	r1, r1, r2
   59ee8:	ldr	r2, [sp, #24]
   59eec:	add	r1, r1, r2
   59ef0:	add	r0, r0, r1
   59ef4:	ldrb	r0, [r0]
   59ef8:	str	r0, [sp, #20]
   59efc:	ldr	r0, [fp, #-4]
   59f00:	ldr	r0, [r0, #64]	; 0x40
   59f04:	ldr	r1, [sp, #20]
   59f08:	add	r0, r0, r1
   59f0c:	ldrb	r0, [r0]
   59f10:	ldr	r1, [fp, #-4]
   59f14:	ldr	r1, [r1, #4]
   59f18:	ldr	r2, [sp, #48]	; 0x30
   59f1c:	ldr	r3, [sp, #24]
   59f20:	add	r2, r2, r3
   59f24:	add	r1, r1, r2
   59f28:	strb	r0, [r1]
   59f2c:	ldr	r1, [sp, #24]
   59f30:	add	r2, sp, #60	; 0x3c
   59f34:	add	r1, r2, r1
   59f38:	strb	r0, [r1]
   59f3c:	ldr	r0, [sp, #24]
   59f40:	add	r0, r0, #1
   59f44:	str	r0, [sp, #24]
   59f48:	b	59e90 <__assert_fail@plt+0x472d8>
   59f4c:	add	r0, sp, #60	; 0x3c
   59f50:	str	r0, [sp, #28]
   59f54:	b	59f78 <__assert_fail@plt+0x473c0>
   59f58:	ldr	r0, [fp, #-4]
   59f5c:	ldr	r0, [r0]
   59f60:	ldr	r1, [fp, #-4]
   59f64:	ldr	r1, [r1, #24]
   59f68:	add	r0, r0, r1
   59f6c:	ldr	r1, [sp, #48]	; 0x30
   59f70:	add	r0, r0, r1
   59f74:	str	r0, [sp, #28]
   59f78:	ldr	r1, [sp, #28]
   59f7c:	ldr	r2, [sp, #40]	; 0x28
   59f80:	ldr	r0, [fp, #-4]
   59f84:	add	r3, r0, #16
   59f88:	add	r0, sp, #32
   59f8c:	bl	52860 <__assert_fail@plt+0x3fca8>
   59f90:	str	r0, [sp, #36]	; 0x24
   59f94:	ldr	r0, [sp, #36]	; 0x24
   59f98:	cmn	r0, #1
   59f9c:	movw	r0, #1
   59fa0:	str	r0, [sp, #8]
   59fa4:	beq	59ff8 <__assert_fail@plt+0x47440>
   59fa8:	ldr	r0, [sp, #36]	; 0x24
   59fac:	cmp	r0, #0
   59fb0:	movw	r0, #1
   59fb4:	str	r0, [sp, #8]
   59fb8:	beq	59ff8 <__assert_fail@plt+0x47440>
   59fbc:	ldr	r0, [sp, #36]	; 0x24
   59fc0:	cmn	r0, #2
   59fc4:	movw	r0, #0
   59fc8:	str	r0, [sp, #4]
   59fcc:	bne	59ff0 <__assert_fail@plt+0x47438>
   59fd0:	ldr	r0, [fp, #-4]
   59fd4:	ldr	r0, [r0, #36]	; 0x24
   59fd8:	ldr	r1, [fp, #-4]
   59fdc:	ldr	r1, [r1, #48]	; 0x30
   59fe0:	cmp	r0, r1
   59fe4:	movw	r0, #0
   59fe8:	movge	r0, #1
   59fec:	str	r0, [sp, #4]
   59ff0:	ldr	r0, [sp, #4]
   59ff4:	str	r0, [sp, #8]
   59ff8:	ldr	r0, [sp, #8]
   59ffc:	tst	r0, #1
   5a000:	beq	5a074 <__assert_fail@plt+0x474bc>
   5a004:	movw	r0, #1
   5a008:	str	r0, [sp, #36]	; 0x24
   5a00c:	ldr	r0, [fp, #-4]
   5a010:	ldr	r0, [r0]
   5a014:	ldr	r1, [fp, #-4]
   5a018:	ldr	r1, [r1, #24]
   5a01c:	ldr	r2, [sp, #48]	; 0x30
   5a020:	add	r1, r1, r2
   5a024:	add	r0, r0, r1
   5a028:	ldrb	r0, [r0]
   5a02c:	str	r0, [sp, #32]
   5a030:	ldr	r0, [fp, #-4]
   5a034:	ldr	r0, [r0, #64]	; 0x40
   5a038:	movw	r1, #0
   5a03c:	cmp	r0, r1
   5a040:	beq	5a05c <__assert_fail@plt+0x474a4>
   5a044:	ldr	r0, [fp, #-4]
   5a048:	ldr	r0, [r0, #64]	; 0x40
   5a04c:	ldr	r1, [sp, #32]
   5a050:	add	r0, r0, r1
   5a054:	ldrb	r0, [r0]
   5a058:	str	r0, [sp, #32]
   5a05c:	ldr	r0, [fp, #-4]
   5a060:	ldr	r1, [sp, #52]	; 0x34
   5a064:	str	r1, [r0, #16]
   5a068:	ldr	r1, [sp, #56]	; 0x38
   5a06c:	str	r1, [r0, #20]
   5a070:	b	5a09c <__assert_fail@plt+0x474e4>
   5a074:	ldr	r0, [sp, #36]	; 0x24
   5a078:	cmn	r0, #2
   5a07c:	bne	5a098 <__assert_fail@plt+0x474e0>
   5a080:	ldr	r0, [fp, #-4]
   5a084:	ldr	r1, [sp, #52]	; 0x34
   5a088:	str	r1, [r0, #16]
   5a08c:	ldr	r1, [sp, #56]	; 0x38
   5a090:	str	r1, [r0, #20]
   5a094:	b	5a108 <__assert_fail@plt+0x47550>
   5a098:	b	5a09c <__assert_fail@plt+0x474e4>
   5a09c:	ldr	r0, [sp, #32]
   5a0a0:	ldr	r1, [fp, #-4]
   5a0a4:	ldr	r1, [r1, #8]
   5a0a8:	ldr	r2, [sp, #48]	; 0x30
   5a0ac:	add	r3, r2, #1
   5a0b0:	str	r3, [sp, #48]	; 0x30
   5a0b4:	add	r1, r1, r2, lsl #2
   5a0b8:	str	r0, [r1]
   5a0bc:	ldr	r0, [sp, #48]	; 0x30
   5a0c0:	ldr	r1, [sp, #36]	; 0x24
   5a0c4:	add	r0, r0, r1
   5a0c8:	sub	r0, r0, #1
   5a0cc:	str	r0, [sp, #40]	; 0x28
   5a0d0:	ldr	r0, [sp, #48]	; 0x30
   5a0d4:	ldr	r1, [sp, #40]	; 0x28
   5a0d8:	cmp	r0, r1
   5a0dc:	bge	5a104 <__assert_fail@plt+0x4754c>
   5a0e0:	ldr	r0, [fp, #-4]
   5a0e4:	ldr	r0, [r0, #8]
   5a0e8:	ldr	r1, [sp, #48]	; 0x30
   5a0ec:	add	r2, r1, #1
   5a0f0:	str	r2, [sp, #48]	; 0x30
   5a0f4:	add	r0, r0, r1, lsl #2
   5a0f8:	mvn	r1, #0
   5a0fc:	str	r1, [r0]
   5a100:	b	5a0d0 <__assert_fail@plt+0x47518>
   5a104:	b	59e40 <__assert_fail@plt+0x47288>
   5a108:	ldr	r0, [sp, #48]	; 0x30
   5a10c:	ldr	r1, [fp, #-4]
   5a110:	str	r0, [r1, #28]
   5a114:	ldr	r0, [sp, #48]	; 0x30
   5a118:	ldr	r1, [fp, #-4]
   5a11c:	str	r0, [r1, #32]
   5a120:	mov	sp, fp
   5a124:	pop	{fp, pc}
   5a128:	sub	sp, sp, #20
   5a12c:	str	r0, [sp, #16]
   5a130:	ldr	r0, [sp, #16]
   5a134:	ldr	r0, [r0, #36]	; 0x24
   5a138:	ldr	r1, [sp, #16]
   5a13c:	ldr	r1, [r1, #48]	; 0x30
   5a140:	cmp	r0, r1
   5a144:	ble	5a158 <__assert_fail@plt+0x475a0>
   5a148:	ldr	r0, [sp, #16]
   5a14c:	ldr	r0, [r0, #48]	; 0x30
   5a150:	str	r0, [sp]
   5a154:	b	5a164 <__assert_fail@plt+0x475ac>
   5a158:	ldr	r0, [sp, #16]
   5a15c:	ldr	r0, [r0, #36]	; 0x24
   5a160:	str	r0, [sp]
   5a164:	ldr	r0, [sp]
   5a168:	str	r0, [sp, #8]
   5a16c:	ldr	r0, [sp, #16]
   5a170:	ldr	r0, [r0, #28]
   5a174:	str	r0, [sp, #12]
   5a178:	ldr	r0, [sp, #12]
   5a17c:	ldr	r1, [sp, #8]
   5a180:	cmp	r0, r1
   5a184:	bge	5a1e4 <__assert_fail@plt+0x4762c>
   5a188:	ldr	r0, [sp, #16]
   5a18c:	ldr	r0, [r0]
   5a190:	ldr	r1, [sp, #16]
   5a194:	ldr	r1, [r1, #24]
   5a198:	ldr	r2, [sp, #12]
   5a19c:	add	r1, r1, r2
   5a1a0:	add	r0, r0, r1
   5a1a4:	ldrb	r0, [r0]
   5a1a8:	str	r0, [sp, #4]
   5a1ac:	ldr	r0, [sp, #16]
   5a1b0:	ldr	r0, [r0, #64]	; 0x40
   5a1b4:	ldr	r1, [sp, #4]
   5a1b8:	add	r0, r0, r1
   5a1bc:	ldrb	r0, [r0]
   5a1c0:	ldr	r1, [sp, #16]
   5a1c4:	ldr	r1, [r1, #4]
   5a1c8:	ldr	r2, [sp, #12]
   5a1cc:	add	r1, r1, r2
   5a1d0:	strb	r0, [r1]
   5a1d4:	ldr	r0, [sp, #12]
   5a1d8:	add	r0, r0, #1
   5a1dc:	str	r0, [sp, #12]
   5a1e0:	b	5a178 <__assert_fail@plt+0x475c0>
   5a1e4:	ldr	r0, [sp, #12]
   5a1e8:	ldr	r1, [sp, #16]
   5a1ec:	str	r0, [r1, #28]
   5a1f0:	ldr	r0, [sp, #12]
   5a1f4:	ldr	r1, [sp, #16]
   5a1f8:	str	r0, [r1, #32]
   5a1fc:	add	sp, sp, #20
   5a200:	bx	lr
   5a204:	push	{fp, lr}
   5a208:	mov	fp, sp
   5a20c:	sub	sp, sp, #16
   5a210:	str	r0, [fp, #-4]
   5a214:	str	r1, [sp, #8]
   5a218:	str	r2, [sp, #4]
   5a21c:	ldr	r0, [fp, #-4]
   5a220:	ldr	r1, [sp, #8]
   5a224:	ldr	r2, [sp, #4]
   5a228:	bl	5a574 <__assert_fail@plt+0x479bc>
   5a22c:	ldr	r1, [sp, #8]
   5a230:	ldr	r2, [r1, #40]	; 0x28
   5a234:	add	r0, r2, r0
   5a238:	str	r0, [r1, #40]	; 0x28
   5a23c:	mov	sp, fp
   5a240:	pop	{fp, pc}
   5a244:	push	{r4, r5, fp, lr}
   5a248:	add	fp, sp, #8
   5a24c:	sub	sp, sp, #64	; 0x40
   5a250:	ldr	ip, [fp, #12]
   5a254:	ldr	lr, [fp, #8]
   5a258:	str	r0, [fp, #-16]
   5a25c:	str	r1, [fp, #-20]	; 0xffffffec
   5a260:	str	r2, [fp, #-24]	; 0xffffffe8
   5a264:	str	r3, [fp, #-28]	; 0xffffffe4
   5a268:	ldr	r0, [fp, #-20]	; 0xffffffec
   5a26c:	ldr	r0, [r0]
   5a270:	str	r0, [fp, #-32]	; 0xffffffe0
   5a274:	movw	r0, #0
   5a278:	str	r0, [sp, #32]
   5a27c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5a280:	ldr	r0, [r0, #84]	; 0x54
   5a284:	str	r0, [sp, #28]
   5a288:	ldr	r0, [fp, #-16]
   5a28c:	ldr	r1, [fp, #-20]	; 0xffffffec
   5a290:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5a294:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5a298:	ldr	r4, [fp, #8]
   5a29c:	ldr	r5, [fp, #12]
   5a2a0:	str	r4, [sp]
   5a2a4:	str	r5, [sp, #4]
   5a2a8:	str	ip, [sp, #20]
   5a2ac:	str	lr, [sp, #16]
   5a2b0:	bl	5b5fc <__assert_fail@plt+0x48a44>
   5a2b4:	str	r0, [sp, #36]	; 0x24
   5a2b8:	ldr	r0, [fp, #12]
   5a2bc:	ldr	r0, [r0]
   5a2c0:	cmp	r0, #0
   5a2c4:	movw	r0, #0
   5a2c8:	str	r0, [sp, #12]
   5a2cc:	beq	5a2e8 <__assert_fail@plt+0x47730>
   5a2d0:	ldr	r0, [sp, #36]	; 0x24
   5a2d4:	movw	r1, #0
   5a2d8:	cmp	r0, r1
   5a2dc:	movw	r0, #0
   5a2e0:	moveq	r0, #1
   5a2e4:	str	r0, [sp, #12]
   5a2e8:	ldr	r0, [sp, #12]
   5a2ec:	tst	r0, #1
   5a2f0:	beq	5a300 <__assert_fail@plt+0x47748>
   5a2f4:	movw	r0, #0
   5a2f8:	str	r0, [fp, #-12]
   5a2fc:	b	5a48c <__assert_fail@plt+0x478d4>
   5a300:	b	5a304 <__assert_fail@plt+0x4774c>
   5a304:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5a308:	ldr	r0, [r0, #4]
   5a30c:	and	r0, r0, #255	; 0xff
   5a310:	cmp	r0, #10
   5a314:	bne	5a484 <__assert_fail@plt+0x478cc>
   5a318:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5a31c:	ldr	r1, [fp, #-16]
   5a320:	ldr	r2, [fp, #-28]	; 0xffffffe4
   5a324:	orr	r2, r2, #8388608	; 0x800000
   5a328:	bl	5a204 <__assert_fail@plt+0x4764c>
   5a32c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5a330:	ldr	r0, [r0, #4]
   5a334:	and	r0, r0, #255	; 0xff
   5a338:	cmp	r0, #10
   5a33c:	beq	5a438 <__assert_fail@plt+0x47880>
   5a340:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5a344:	ldr	r0, [r0, #4]
   5a348:	and	r0, r0, #255	; 0xff
   5a34c:	cmp	r0, #2
   5a350:	beq	5a438 <__assert_fail@plt+0x47880>
   5a354:	ldr	r0, [fp, #8]
   5a358:	cmp	r0, #0
   5a35c:	beq	5a374 <__assert_fail@plt+0x477bc>
   5a360:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5a364:	ldr	r0, [r0, #4]
   5a368:	and	r0, r0, #255	; 0xff
   5a36c:	cmp	r0, #9
   5a370:	beq	5a438 <__assert_fail@plt+0x47880>
   5a374:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5a378:	ldr	r0, [r0, #84]	; 0x54
   5a37c:	str	r0, [sp, #24]
   5a380:	ldr	r0, [sp, #28]
   5a384:	ldr	r1, [fp, #-32]	; 0xffffffe0
   5a388:	str	r0, [r1, #84]	; 0x54
   5a38c:	ldr	r0, [fp, #-16]
   5a390:	ldr	r1, [fp, #-20]	; 0xffffffec
   5a394:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5a398:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5a39c:	ldr	ip, [fp, #8]
   5a3a0:	ldr	lr, [fp, #12]
   5a3a4:	str	ip, [sp]
   5a3a8:	str	lr, [sp, #4]
   5a3ac:	bl	5b5fc <__assert_fail@plt+0x48a44>
   5a3b0:	str	r0, [sp, #32]
   5a3b4:	ldr	r0, [fp, #12]
   5a3b8:	ldr	r0, [r0]
   5a3bc:	cmp	r0, #0
   5a3c0:	movw	r0, #0
   5a3c4:	str	r0, [sp, #8]
   5a3c8:	beq	5a3e4 <__assert_fail@plt+0x4782c>
   5a3cc:	ldr	r0, [sp, #32]
   5a3d0:	movw	r1, #0
   5a3d4:	cmp	r0, r1
   5a3d8:	movw	r0, #0
   5a3dc:	moveq	r0, #1
   5a3e0:	str	r0, [sp, #8]
   5a3e4:	ldr	r0, [sp, #8]
   5a3e8:	tst	r0, #1
   5a3ec:	beq	5a420 <__assert_fail@plt+0x47868>
   5a3f0:	ldr	r0, [sp, #36]	; 0x24
   5a3f4:	movw	r1, #0
   5a3f8:	cmp	r0, r1
   5a3fc:	beq	5a414 <__assert_fail@plt+0x4785c>
   5a400:	ldr	r0, [sp, #36]	; 0x24
   5a404:	movw	r1, #47608	; 0xb9f8
   5a408:	movt	r1, #5
   5a40c:	movw	r2, #0
   5a410:	bl	5b888 <__assert_fail@plt+0x48cd0>
   5a414:	movw	r0, #0
   5a418:	str	r0, [fp, #-12]
   5a41c:	b	5a48c <__assert_fail@plt+0x478d4>
   5a420:	ldr	r0, [sp, #24]
   5a424:	ldr	r1, [fp, #-32]	; 0xffffffe0
   5a428:	ldr	r2, [r1, #84]	; 0x54
   5a42c:	orr	r0, r2, r0
   5a430:	str	r0, [r1, #84]	; 0x54
   5a434:	b	5a440 <__assert_fail@plt+0x47888>
   5a438:	movw	r0, #0
   5a43c:	str	r0, [sp, #32]
   5a440:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5a444:	ldr	r1, [sp, #36]	; 0x24
   5a448:	ldr	r2, [sp, #32]
   5a44c:	movw	r3, #10
   5a450:	bl	5a498 <__assert_fail@plt+0x478e0>
   5a454:	str	r0, [sp, #36]	; 0x24
   5a458:	ldr	r0, [sp, #36]	; 0x24
   5a45c:	movw	r1, #0
   5a460:	cmp	r0, r1
   5a464:	bne	5a480 <__assert_fail@plt+0x478c8>
   5a468:	ldr	r0, [fp, #12]
   5a46c:	movw	r1, #12
   5a470:	str	r1, [r0]
   5a474:	movw	r0, #0
   5a478:	str	r0, [fp, #-12]
   5a47c:	b	5a48c <__assert_fail@plt+0x478d4>
   5a480:	b	5a304 <__assert_fail@plt+0x4774c>
   5a484:	ldr	r0, [sp, #36]	; 0x24
   5a488:	str	r0, [fp, #-12]
   5a48c:	ldr	r0, [fp, #-12]
   5a490:	sub	sp, fp, #8
   5a494:	pop	{r4, r5, fp, pc}
   5a498:	push	{fp, lr}
   5a49c:	mov	fp, sp
   5a4a0:	sub	sp, sp, #32
   5a4a4:	add	ip, sp, #8
   5a4a8:	ldr	lr, [pc, #192]	; 5a570 <__assert_fail@plt+0x479b8>
   5a4ac:	str	r0, [fp, #-4]
   5a4b0:	str	r1, [fp, #-8]
   5a4b4:	str	r2, [fp, #-12]
   5a4b8:	str	r3, [sp, #16]
   5a4bc:	mov	r0, ip
   5a4c0:	movw	r1, #0
   5a4c4:	and	r1, r1, #255	; 0xff
   5a4c8:	movw	r2, #4
   5a4cc:	str	ip, [sp, #4]
   5a4d0:	str	lr, [sp]
   5a4d4:	bl	12900 <memset@plt>
   5a4d8:	ldr	r0, [sp, #16]
   5a4dc:	ldr	r1, [sp, #12]
   5a4e0:	and	r0, r0, #255	; 0xff
   5a4e4:	mvn	r2, #255	; 0xff
   5a4e8:	and	r1, r1, r2
   5a4ec:	orr	r0, r1, r0
   5a4f0:	str	r0, [sp, #12]
   5a4f4:	ldr	r0, [sp, #12]
   5a4f8:	ldr	r1, [sp]
   5a4fc:	and	r0, r0, r1
   5a500:	str	r0, [sp, #12]
   5a504:	ldr	r0, [sp, #12]
   5a508:	mvn	r2, #262144	; 0x40000
   5a50c:	and	r0, r0, r2
   5a510:	str	r0, [sp, #12]
   5a514:	ldr	r0, [sp, #12]
   5a518:	mvn	r2, #524288	; 0x80000
   5a51c:	and	r0, r0, r2
   5a520:	str	r0, [sp, #12]
   5a524:	ldr	r0, [sp, #12]
   5a528:	mvn	r2, #1048576	; 0x100000
   5a52c:	and	r0, r0, r2
   5a530:	str	r0, [sp, #12]
   5a534:	ldr	r0, [sp, #12]
   5a538:	mvn	r2, #2097152	; 0x200000
   5a53c:	and	r0, r0, r2
   5a540:	str	r0, [sp, #12]
   5a544:	ldr	r0, [sp, #12]
   5a548:	mvn	r2, #4194304	; 0x400000
   5a54c:	and	r0, r0, r2
   5a550:	str	r0, [sp, #12]
   5a554:	ldr	r0, [fp, #-4]
   5a558:	ldr	r1, [fp, #-8]
   5a55c:	ldr	r2, [fp, #-12]
   5a560:	ldr	r3, [sp, #4]
   5a564:	bl	5c4fc <__assert_fail@plt+0x49944>
   5a568:	mov	sp, fp
   5a56c:	pop	{fp, pc}
   5a570:			; <UNDEFINED> instruction: 0xfffc00ff
   5a574:	push	{fp, lr}
   5a578:	mov	fp, sp
   5a57c:	sub	sp, sp, #64	; 0x40
   5a580:	str	r0, [fp, #-8]
   5a584:	str	r1, [fp, #-12]
   5a588:	str	r2, [fp, #-16]
   5a58c:	ldr	r0, [fp, #-12]
   5a590:	ldr	r0, [r0, #56]	; 0x38
   5a594:	ldr	r1, [fp, #-12]
   5a598:	ldr	r1, [r1, #40]	; 0x28
   5a59c:	cmp	r0, r1
   5a5a0:	bgt	5a5c8 <__assert_fail@plt+0x47a10>
   5a5a4:	ldr	r0, [fp, #-8]
   5a5a8:	ldr	r1, [r0, #4]
   5a5ac:	mvn	r2, #255	; 0xff
   5a5b0:	and	r1, r1, r2
   5a5b4:	orr	r1, r1, #2
   5a5b8:	str	r1, [r0, #4]
   5a5bc:	movw	r0, #0
   5a5c0:	str	r0, [fp, #-4]
   5a5c4:	b	5b3d0 <__assert_fail@plt+0x48818>
   5a5c8:	ldr	r0, [fp, #-12]
   5a5cc:	ldr	r0, [r0, #4]
   5a5d0:	ldr	r1, [fp, #-12]
   5a5d4:	ldr	r1, [r1, #40]	; 0x28
   5a5d8:	add	r1, r1, #0
   5a5dc:	add	r0, r0, r1
   5a5e0:	ldrb	r0, [r0]
   5a5e4:	strb	r0, [fp, #-17]	; 0xffffffef
   5a5e8:	ldrb	r0, [fp, #-17]	; 0xffffffef
   5a5ec:	ldr	r1, [fp, #-8]
   5a5f0:	strb	r0, [r1]
   5a5f4:	ldr	r0, [fp, #-8]
   5a5f8:	ldr	r1, [r0, #4]
   5a5fc:	mvn	r2, #4194304	; 0x400000
   5a600:	and	r1, r1, r2
   5a604:	str	r1, [r0, #4]
   5a608:	ldr	r0, [fp, #-8]
   5a60c:	ldr	r1, [r0, #4]
   5a610:	mvn	r2, #2097152	; 0x200000
   5a614:	and	r1, r1, r2
   5a618:	str	r1, [r0, #4]
   5a61c:	ldr	r0, [fp, #-12]
   5a620:	ldr	r0, [r0, #80]	; 0x50
   5a624:	cmp	r0, #1
   5a628:	ble	5a69c <__assert_fail@plt+0x47ae4>
   5a62c:	ldr	r0, [fp, #-12]
   5a630:	ldr	r0, [r0, #40]	; 0x28
   5a634:	ldr	r1, [fp, #-12]
   5a638:	ldr	r1, [r1, #28]
   5a63c:	cmp	r0, r1
   5a640:	beq	5a69c <__assert_fail@plt+0x47ae4>
   5a644:	ldr	r0, [fp, #-12]
   5a648:	ldr	r1, [r0, #8]
   5a64c:	ldr	r0, [r0, #40]	; 0x28
   5a650:	add	r0, r1, r0, lsl #2
   5a654:	ldr	r0, [r0]
   5a658:	cmn	r0, #1
   5a65c:	bne	5a69c <__assert_fail@plt+0x47ae4>
   5a660:	ldr	r0, [fp, #-8]
   5a664:	ldr	r1, [r0, #4]
   5a668:	mvn	r2, #255	; 0xff
   5a66c:	and	r1, r1, r2
   5a670:	orr	r1, r1, #1
   5a674:	str	r1, [r0, #4]
   5a678:	ldr	r0, [fp, #-8]
   5a67c:	ldr	r1, [r0, #4]
   5a680:	mvn	r2, #2097152	; 0x200000
   5a684:	and	r1, r1, r2
   5a688:	orr	r1, r1, #2097152	; 0x200000
   5a68c:	str	r1, [r0, #4]
   5a690:	movw	r0, #1
   5a694:	str	r0, [fp, #-4]
   5a698:	b	5b3d0 <__assert_fail@plt+0x48818>
   5a69c:	ldrb	r0, [fp, #-17]	; 0xffffffef
   5a6a0:	cmp	r0, #92	; 0x5c
   5a6a4:	bne	5ad74 <__assert_fail@plt+0x481bc>
   5a6a8:	ldr	r0, [fp, #-12]
   5a6ac:	ldr	r0, [r0, #40]	; 0x28
   5a6b0:	add	r0, r0, #1
   5a6b4:	ldr	r1, [fp, #-12]
   5a6b8:	ldr	r1, [r1, #48]	; 0x30
   5a6bc:	cmp	r0, r1
   5a6c0:	blt	5a6e8 <__assert_fail@plt+0x47b30>
   5a6c4:	ldr	r0, [fp, #-8]
   5a6c8:	ldr	r1, [r0, #4]
   5a6cc:	mvn	r2, #255	; 0xff
   5a6d0:	and	r1, r1, r2
   5a6d4:	orr	r1, r1, #36	; 0x24
   5a6d8:	str	r1, [r0, #4]
   5a6dc:	movw	r0, #1
   5a6e0:	str	r0, [fp, #-4]
   5a6e4:	b	5b3d0 <__assert_fail@plt+0x48818>
   5a6e8:	ldr	r0, [fp, #-12]
   5a6ec:	movw	r1, #1
   5a6f0:	bl	5b3e0 <__assert_fail@plt+0x48828>
   5a6f4:	strb	r0, [fp, #-18]	; 0xffffffee
   5a6f8:	ldrb	r0, [fp, #-18]	; 0xffffffee
   5a6fc:	ldr	r1, [fp, #-8]
   5a700:	strb	r0, [r1]
   5a704:	ldr	r0, [fp, #-8]
   5a708:	ldr	r1, [r0, #4]
   5a70c:	mvn	r2, #255	; 0xff
   5a710:	and	r1, r1, r2
   5a714:	orr	r1, r1, #1
   5a718:	str	r1, [r0, #4]
   5a71c:	ldr	r0, [fp, #-12]
   5a720:	ldr	r0, [r0, #80]	; 0x50
   5a724:	cmp	r0, #1
   5a728:	ble	5a7ac <__assert_fail@plt+0x47bf4>
   5a72c:	ldr	r0, [fp, #-12]
   5a730:	ldr	r1, [fp, #-12]
   5a734:	ldr	r1, [r1, #40]	; 0x28
   5a738:	add	r1, r1, #1
   5a73c:	bl	5b5a0 <__assert_fail@plt+0x489e8>
   5a740:	str	r0, [fp, #-24]	; 0xffffffe8
   5a744:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5a748:	bl	128dc <iswalnum@plt>
   5a74c:	cmp	r0, #0
   5a750:	movw	r0, #1
   5a754:	str	r0, [sp, #20]
   5a758:	bne	5a770 <__assert_fail@plt+0x47bb8>
   5a75c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5a760:	cmp	r0, #95	; 0x5f
   5a764:	movw	r0, #0
   5a768:	moveq	r0, #1
   5a76c:	str	r0, [sp, #20]
   5a770:	ldr	r0, [sp, #20]
   5a774:	and	r0, r0, #1
   5a778:	cmp	r0, #0
   5a77c:	movw	r0, #0
   5a780:	movne	r0, #1
   5a784:	and	r0, r0, #1
   5a788:	ldr	r1, [fp, #-8]
   5a78c:	ldr	r2, [r1, #4]
   5a790:	and	r0, r0, #1
   5a794:	lsl	r0, r0, #22
   5a798:	mvn	r3, #4194304	; 0x400000
   5a79c:	and	r2, r2, r3
   5a7a0:	orr	r0, r2, r0
   5a7a4:	str	r0, [r1, #4]
   5a7a8:	b	5a824 <__assert_fail@plt+0x47c6c>
   5a7ac:	bl	12834 <__ctype_b_loc@plt>
   5a7b0:	ldr	r0, [r0]
   5a7b4:	ldrb	r1, [fp, #-18]	; 0xffffffee
   5a7b8:	mov	r2, r1
   5a7bc:	add	r0, r0, r1, lsl #1
   5a7c0:	ldrh	r0, [r0]
   5a7c4:	and	r0, r0, #8
   5a7c8:	cmp	r0, #0
   5a7cc:	movw	r0, #1
   5a7d0:	str	r0, [sp, #16]
   5a7d4:	bne	5a7ec <__assert_fail@plt+0x47c34>
   5a7d8:	ldrb	r0, [fp, #-18]	; 0xffffffee
   5a7dc:	cmp	r0, #95	; 0x5f
   5a7e0:	movw	r0, #0
   5a7e4:	moveq	r0, #1
   5a7e8:	str	r0, [sp, #16]
   5a7ec:	ldr	r0, [sp, #16]
   5a7f0:	and	r0, r0, #1
   5a7f4:	cmp	r0, #0
   5a7f8:	movw	r0, #0
   5a7fc:	movne	r0, #1
   5a800:	and	r0, r0, #1
   5a804:	ldr	r1, [fp, #-8]
   5a808:	ldr	r2, [r1, #4]
   5a80c:	and	r0, r0, #1
   5a810:	lsl	r0, r0, #22
   5a814:	mvn	r3, #4194304	; 0x400000
   5a818:	and	r2, r2, r3
   5a81c:	orr	r0, r2, r0
   5a820:	str	r0, [r1, #4]
   5a824:	ldrb	r0, [fp, #-18]	; 0xffffffee
   5a828:	sub	r0, r0, #39	; 0x27
   5a82c:	cmp	r0, #86	; 0x56
   5a830:	str	r0, [sp, #12]
   5a834:	bhi	5ad64 <__assert_fail@plt+0x481ac>
   5a838:	add	r0, pc, #8
   5a83c:	ldr	r1, [sp, #12]
   5a840:	ldr	r0, [r0, r1, lsl #2]
   5a844:	mov	pc, r0
   5a848:	andeq	sl, r5, r4, ror #23
   5a84c:	andeq	sl, r5, ip, lsl ip
   5a850:	andeq	sl, r5, r8, asr #24
   5a854:	andeq	sl, r5, r4, ror #26
   5a858:	andeq	sl, r5, r4, ror ip
   5a85c:	andeq	sl, r5, r4, ror #26
   5a860:	andeq	sl, r5, r4, ror #26
   5a864:	andeq	sl, r5, r4, ror #26
   5a868:	andeq	sl, r5, r4, ror #26
   5a86c:	andeq	sl, r5, r4, ror #26
   5a870:	andeq	sl, r5, r0, ror #19
   5a874:	andeq	sl, r5, r0, ror #19
   5a878:	andeq	sl, r5, r0, ror #19
   5a87c:	andeq	sl, r5, r0, ror #19
   5a880:	andeq	sl, r5, r0, ror #19
   5a884:	andeq	sl, r5, r0, ror #19
   5a888:	andeq	sl, r5, r0, ror #19
   5a88c:	andeq	sl, r5, r0, ror #19
   5a890:	andeq	sl, r5, r0, ror #19
   5a894:	andeq	sl, r5, r4, ror #26
   5a898:	andeq	sl, r5, r4, ror #26
   5a89c:	andeq	sl, r5, ip, lsl sl
   5a8a0:	andeq	sl, r5, r4, ror #26
   5a8a4:	andeq	sl, r5, r4, asr sl
   5a8a8:			; <UNDEFINED> instruction: 0x0005acb0
   5a8ac:	andeq	sl, r5, r4, ror #26
   5a8b0:	andeq	sl, r5, r4, ror #26
   5a8b4:	andeq	sl, r5, r4, asr #21
   5a8b8:	andeq	sl, r5, r4, ror #26
   5a8bc:	andeq	sl, r5, r4, ror #26
   5a8c0:	andeq	sl, r5, r4, ror #26
   5a8c4:	andeq	sl, r5, r4, ror #26
   5a8c8:	andeq	sl, r5, r4, ror #26
   5a8cc:	andeq	sl, r5, r4, ror #26
   5a8d0:	andeq	sl, r5, r4, ror #26
   5a8d4:	andeq	sl, r5, r4, ror #26
   5a8d8:	andeq	sl, r5, r4, ror #26
   5a8dc:	andeq	sl, r5, r4, ror #26
   5a8e0:	andeq	sl, r5, r4, ror #26
   5a8e4:	andeq	sl, r5, r4, ror #26
   5a8e8:	andeq	sl, r5, r4, ror #26
   5a8ec:	andeq	sl, r5, r4, ror #26
   5a8f0:	andeq	sl, r5, r4, ror #26
   5a8f4:	andeq	sl, r5, r4, ror #26
   5a8f8:	andeq	sl, r5, r0, lsl #23
   5a8fc:	andeq	sl, r5, r4, ror #26
   5a900:	andeq	sl, r5, r4, ror #26
   5a904:	andeq	sl, r5, r4, ror #26
   5a908:	andeq	sl, r5, r8, lsr #22
   5a90c:	andeq	sl, r5, r4, ror #26
   5a910:	andeq	sl, r5, r4, ror #26
   5a914:	andeq	sl, r5, r4, ror #26
   5a918:	andeq	sl, r5, r4, ror #26
   5a91c:	andeq	sl, r5, r4, ror #26
   5a920:	andeq	sl, r5, r4, ror #26
   5a924:	andeq	sl, r5, r4, ror #26
   5a928:	andeq	sl, r5, r4, ror #26
   5a92c:	andeq	sl, r5, ip, lsr #23
   5a930:	andeq	sl, r5, r4, ror #26
   5a934:	andeq	sl, r5, ip, lsl #21
   5a938:	andeq	sl, r5, r4, ror #26
   5a93c:	andeq	sl, r5, r4, ror #26
   5a940:	andeq	sl, r5, r4, ror #26
   5a944:	andeq	sl, r5, r4, ror #26
   5a948:	andeq	sl, r5, r4, ror #26
   5a94c:	andeq	sl, r5, r4, ror #26
   5a950:	andeq	sl, r5, r4, ror #26
   5a954:	andeq	sl, r5, r4, ror #26
   5a958:	andeq	sl, r5, r4, ror #26
   5a95c:	andeq	sl, r5, r4, ror #26
   5a960:	andeq	sl, r5, r4, ror #26
   5a964:	andeq	sl, r5, r4, ror #26
   5a968:	andeq	sl, r5, r4, ror #26
   5a96c:	andeq	sl, r5, r4, ror #26
   5a970:	andeq	sl, r5, r4, ror #26
   5a974:	andeq	sl, r5, r4, ror #26
   5a978:	andeq	sl, r5, r4, asr fp
   5a97c:	andeq	sl, r5, r4, ror #26
   5a980:	andeq	sl, r5, r4, ror #26
   5a984:	andeq	sl, r5, r4, ror #26
   5a988:	strdeq	sl, [r5], -ip
   5a98c:	andeq	sl, r5, r4, ror #26
   5a990:	andeq	sl, r5, r4, ror #26
   5a994:	andeq	sl, r5, r4, ror #26
   5a998:	andeq	sl, r5, ip, ror #25
   5a99c:	andeq	sl, r5, r4, lsr #19
   5a9a0:	andeq	sl, r5, r8, lsr #26
   5a9a4:	ldr	r0, [fp, #-16]
   5a9a8:	and	r0, r0, #1024	; 0x400
   5a9ac:	cmp	r0, #0
   5a9b0:	bne	5a9dc <__assert_fail@plt+0x47e24>
   5a9b4:	ldr	r0, [fp, #-16]
   5a9b8:	and	r0, r0, #32768	; 0x8000
   5a9bc:	cmp	r0, #0
   5a9c0:	bne	5a9dc <__assert_fail@plt+0x47e24>
   5a9c4:	ldr	r0, [fp, #-8]
   5a9c8:	ldr	r1, [r0, #4]
   5a9cc:	mvn	r2, #255	; 0xff
   5a9d0:	and	r1, r1, r2
   5a9d4:	orr	r1, r1, #10
   5a9d8:	str	r1, [r0, #4]
   5a9dc:	b	5ad68 <__assert_fail@plt+0x481b0>
   5a9e0:	ldr	r0, [fp, #-16]
   5a9e4:	and	r0, r0, #16384	; 0x4000
   5a9e8:	cmp	r0, #0
   5a9ec:	bne	5aa18 <__assert_fail@plt+0x47e60>
   5a9f0:	ldr	r0, [fp, #-8]
   5a9f4:	ldr	r1, [r0, #4]
   5a9f8:	mvn	r2, #255	; 0xff
   5a9fc:	and	r1, r1, r2
   5aa00:	orr	r1, r1, #4
   5aa04:	str	r1, [r0, #4]
   5aa08:	ldrb	r0, [fp, #-18]	; 0xffffffee
   5aa0c:	sub	r0, r0, #49	; 0x31
   5aa10:	ldr	r1, [fp, #-8]
   5aa14:	str	r0, [r1]
   5aa18:	b	5ad68 <__assert_fail@plt+0x481b0>
   5aa1c:	ldr	r0, [fp, #-16]
   5aa20:	and	r0, r0, #524288	; 0x80000
   5aa24:	cmp	r0, #0
   5aa28:	bne	5aa50 <__assert_fail@plt+0x47e98>
   5aa2c:	ldr	r0, [fp, #-8]
   5aa30:	ldr	r1, [r0, #4]
   5aa34:	mvn	r2, #255	; 0xff
   5aa38:	and	r1, r1, r2
   5aa3c:	orr	r1, r1, #12
   5aa40:	str	r1, [r0, #4]
   5aa44:	ldr	r0, [fp, #-8]
   5aa48:	movw	r1, #6
   5aa4c:	str	r1, [r0]
   5aa50:	b	5ad68 <__assert_fail@plt+0x481b0>
   5aa54:	ldr	r0, [fp, #-16]
   5aa58:	and	r0, r0, #524288	; 0x80000
   5aa5c:	cmp	r0, #0
   5aa60:	bne	5aa88 <__assert_fail@plt+0x47ed0>
   5aa64:	ldr	r0, [fp, #-8]
   5aa68:	ldr	r1, [r0, #4]
   5aa6c:	mvn	r2, #255	; 0xff
   5aa70:	and	r1, r1, r2
   5aa74:	orr	r1, r1, #12
   5aa78:	str	r1, [r0, #4]
   5aa7c:	ldr	r0, [fp, #-8]
   5aa80:	movw	r1, #9
   5aa84:	str	r1, [r0]
   5aa88:	b	5ad68 <__assert_fail@plt+0x481b0>
   5aa8c:	ldr	r0, [fp, #-16]
   5aa90:	and	r0, r0, #524288	; 0x80000
   5aa94:	cmp	r0, #0
   5aa98:	bne	5aac0 <__assert_fail@plt+0x47f08>
   5aa9c:	ldr	r0, [fp, #-8]
   5aaa0:	ldr	r1, [r0, #4]
   5aaa4:	mvn	r2, #255	; 0xff
   5aaa8:	and	r1, r1, r2
   5aaac:	orr	r1, r1, #12
   5aab0:	str	r1, [r0, #4]
   5aab4:	ldr	r0, [fp, #-8]
   5aab8:	movw	r1, #256	; 0x100
   5aabc:	str	r1, [r0]
   5aac0:	b	5ad68 <__assert_fail@plt+0x481b0>
   5aac4:	ldr	r0, [fp, #-16]
   5aac8:	and	r0, r0, #524288	; 0x80000
   5aacc:	cmp	r0, #0
   5aad0:	bne	5aaf8 <__assert_fail@plt+0x47f40>
   5aad4:	ldr	r0, [fp, #-8]
   5aad8:	ldr	r1, [r0, #4]
   5aadc:	mvn	r2, #255	; 0xff
   5aae0:	and	r1, r1, r2
   5aae4:	orr	r1, r1, #12
   5aae8:	str	r1, [r0, #4]
   5aaec:	ldr	r0, [fp, #-8]
   5aaf0:	movw	r1, #512	; 0x200
   5aaf4:	str	r1, [r0]
   5aaf8:	b	5ad68 <__assert_fail@plt+0x481b0>
   5aafc:	ldr	r0, [fp, #-16]
   5ab00:	and	r0, r0, #524288	; 0x80000
   5ab04:	cmp	r0, #0
   5ab08:	bne	5ab24 <__assert_fail@plt+0x47f6c>
   5ab0c:	ldr	r0, [fp, #-8]
   5ab10:	ldr	r1, [r0, #4]
   5ab14:	mvn	r2, #255	; 0xff
   5ab18:	and	r1, r1, r2
   5ab1c:	orr	r1, r1, #32
   5ab20:	str	r1, [r0, #4]
   5ab24:	b	5ad68 <__assert_fail@plt+0x481b0>
   5ab28:	ldr	r0, [fp, #-16]
   5ab2c:	and	r0, r0, #524288	; 0x80000
   5ab30:	cmp	r0, #0
   5ab34:	bne	5ab50 <__assert_fail@plt+0x47f98>
   5ab38:	ldr	r0, [fp, #-8]
   5ab3c:	ldr	r1, [r0, #4]
   5ab40:	mvn	r2, #255	; 0xff
   5ab44:	and	r1, r1, r2
   5ab48:	orr	r1, r1, #33	; 0x21
   5ab4c:	str	r1, [r0, #4]
   5ab50:	b	5ad68 <__assert_fail@plt+0x481b0>
   5ab54:	ldr	r0, [fp, #-16]
   5ab58:	and	r0, r0, #524288	; 0x80000
   5ab5c:	cmp	r0, #0
   5ab60:	bne	5ab7c <__assert_fail@plt+0x47fc4>
   5ab64:	ldr	r0, [fp, #-8]
   5ab68:	ldr	r1, [r0, #4]
   5ab6c:	mvn	r2, #255	; 0xff
   5ab70:	and	r1, r1, r2
   5ab74:	orr	r1, r1, #34	; 0x22
   5ab78:	str	r1, [r0, #4]
   5ab7c:	b	5ad68 <__assert_fail@plt+0x481b0>
   5ab80:	ldr	r0, [fp, #-16]
   5ab84:	and	r0, r0, #524288	; 0x80000
   5ab88:	cmp	r0, #0
   5ab8c:	bne	5aba8 <__assert_fail@plt+0x47ff0>
   5ab90:	ldr	r0, [fp, #-8]
   5ab94:	ldr	r1, [r0, #4]
   5ab98:	mvn	r2, #255	; 0xff
   5ab9c:	and	r1, r1, r2
   5aba0:	orr	r1, r1, #35	; 0x23
   5aba4:	str	r1, [r0, #4]
   5aba8:	b	5ad68 <__assert_fail@plt+0x481b0>
   5abac:	ldr	r0, [fp, #-16]
   5abb0:	and	r0, r0, #524288	; 0x80000
   5abb4:	cmp	r0, #0
   5abb8:	bne	5abe0 <__assert_fail@plt+0x48028>
   5abbc:	ldr	r0, [fp, #-8]
   5abc0:	ldr	r1, [r0, #4]
   5abc4:	mvn	r2, #255	; 0xff
   5abc8:	and	r1, r1, r2
   5abcc:	orr	r1, r1, #12
   5abd0:	str	r1, [r0, #4]
   5abd4:	ldr	r0, [fp, #-8]
   5abd8:	movw	r1, #64	; 0x40
   5abdc:	str	r1, [r0]
   5abe0:	b	5ad68 <__assert_fail@plt+0x481b0>
   5abe4:	ldr	r0, [fp, #-16]
   5abe8:	and	r0, r0, #524288	; 0x80000
   5abec:	cmp	r0, #0
   5abf0:	bne	5ac18 <__assert_fail@plt+0x48060>
   5abf4:	ldr	r0, [fp, #-8]
   5abf8:	ldr	r1, [r0, #4]
   5abfc:	mvn	r2, #255	; 0xff
   5ac00:	and	r1, r1, r2
   5ac04:	orr	r1, r1, #12
   5ac08:	str	r1, [r0, #4]
   5ac0c:	ldr	r0, [fp, #-8]
   5ac10:	movw	r1, #128	; 0x80
   5ac14:	str	r1, [r0]
   5ac18:	b	5ad68 <__assert_fail@plt+0x481b0>
   5ac1c:	ldr	r0, [fp, #-16]
   5ac20:	and	r0, r0, #8192	; 0x2000
   5ac24:	cmp	r0, #0
   5ac28:	bne	5ac44 <__assert_fail@plt+0x4808c>
   5ac2c:	ldr	r0, [fp, #-8]
   5ac30:	ldr	r1, [r0, #4]
   5ac34:	mvn	r2, #255	; 0xff
   5ac38:	and	r1, r1, r2
   5ac3c:	orr	r1, r1, #8
   5ac40:	str	r1, [r0, #4]
   5ac44:	b	5ad68 <__assert_fail@plt+0x481b0>
   5ac48:	ldr	r0, [fp, #-16]
   5ac4c:	and	r0, r0, #8192	; 0x2000
   5ac50:	cmp	r0, #0
   5ac54:	bne	5ac70 <__assert_fail@plt+0x480b8>
   5ac58:	ldr	r0, [fp, #-8]
   5ac5c:	ldr	r1, [r0, #4]
   5ac60:	mvn	r2, #255	; 0xff
   5ac64:	and	r1, r1, r2
   5ac68:	orr	r1, r1, #9
   5ac6c:	str	r1, [r0, #4]
   5ac70:	b	5ad68 <__assert_fail@plt+0x481b0>
   5ac74:	ldr	r0, [fp, #-16]
   5ac78:	and	r0, r0, #1024	; 0x400
   5ac7c:	cmp	r0, #0
   5ac80:	bne	5acac <__assert_fail@plt+0x480f4>
   5ac84:	ldr	r0, [fp, #-16]
   5ac88:	and	r0, r0, #2
   5ac8c:	cmp	r0, #0
   5ac90:	beq	5acac <__assert_fail@plt+0x480f4>
   5ac94:	ldr	r0, [fp, #-8]
   5ac98:	ldr	r1, [r0, #4]
   5ac9c:	mvn	r2, #255	; 0xff
   5aca0:	and	r1, r1, r2
   5aca4:	orr	r1, r1, #18
   5aca8:	str	r1, [r0, #4]
   5acac:	b	5ad68 <__assert_fail@plt+0x481b0>
   5acb0:	ldr	r0, [fp, #-16]
   5acb4:	and	r0, r0, #1024	; 0x400
   5acb8:	cmp	r0, #0
   5acbc:	bne	5ace8 <__assert_fail@plt+0x48130>
   5acc0:	ldr	r0, [fp, #-16]
   5acc4:	and	r0, r0, #2
   5acc8:	cmp	r0, #0
   5accc:	beq	5ace8 <__assert_fail@plt+0x48130>
   5acd0:	ldr	r0, [fp, #-8]
   5acd4:	ldr	r1, [r0, #4]
   5acd8:	mvn	r2, #255	; 0xff
   5acdc:	and	r1, r1, r2
   5ace0:	orr	r1, r1, #19
   5ace4:	str	r1, [r0, #4]
   5ace8:	b	5ad68 <__assert_fail@plt+0x481b0>
   5acec:	ldr	r0, [fp, #-16]
   5acf0:	and	r0, r0, #512	; 0x200
   5acf4:	cmp	r0, #0
   5acf8:	beq	5ad24 <__assert_fail@plt+0x4816c>
   5acfc:	ldr	r0, [fp, #-16]
   5ad00:	and	r0, r0, #4096	; 0x1000
   5ad04:	cmp	r0, #0
   5ad08:	bne	5ad24 <__assert_fail@plt+0x4816c>
   5ad0c:	ldr	r0, [fp, #-8]
   5ad10:	ldr	r1, [r0, #4]
   5ad14:	mvn	r2, #255	; 0xff
   5ad18:	and	r1, r1, r2
   5ad1c:	orr	r1, r1, #23
   5ad20:	str	r1, [r0, #4]
   5ad24:	b	5ad68 <__assert_fail@plt+0x481b0>
   5ad28:	ldr	r0, [fp, #-16]
   5ad2c:	and	r0, r0, #512	; 0x200
   5ad30:	cmp	r0, #0
   5ad34:	beq	5ad60 <__assert_fail@plt+0x481a8>
   5ad38:	ldr	r0, [fp, #-16]
   5ad3c:	and	r0, r0, #4096	; 0x1000
   5ad40:	cmp	r0, #0
   5ad44:	bne	5ad60 <__assert_fail@plt+0x481a8>
   5ad48:	ldr	r0, [fp, #-8]
   5ad4c:	ldr	r1, [r0, #4]
   5ad50:	mvn	r2, #255	; 0xff
   5ad54:	and	r1, r1, r2
   5ad58:	orr	r1, r1, #24
   5ad5c:	str	r1, [r0, #4]
   5ad60:	b	5ad68 <__assert_fail@plt+0x481b0>
   5ad64:	b	5ad68 <__assert_fail@plt+0x481b0>
   5ad68:	movw	r0, #2
   5ad6c:	str	r0, [fp, #-4]
   5ad70:	b	5b3d0 <__assert_fail@plt+0x48818>
   5ad74:	ldr	r0, [fp, #-8]
   5ad78:	ldr	r1, [r0, #4]
   5ad7c:	mvn	r2, #255	; 0xff
   5ad80:	and	r1, r1, r2
   5ad84:	orr	r1, r1, #1
   5ad88:	str	r1, [r0, #4]
   5ad8c:	ldr	r0, [fp, #-12]
   5ad90:	ldr	r0, [r0, #80]	; 0x50
   5ad94:	cmp	r0, #1
   5ad98:	ble	5ae18 <__assert_fail@plt+0x48260>
   5ad9c:	ldr	r0, [fp, #-12]
   5ada0:	ldr	r1, [fp, #-12]
   5ada4:	ldr	r1, [r1, #40]	; 0x28
   5ada8:	bl	5b5a0 <__assert_fail@plt+0x489e8>
   5adac:	str	r0, [fp, #-28]	; 0xffffffe4
   5adb0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5adb4:	bl	128dc <iswalnum@plt>
   5adb8:	cmp	r0, #0
   5adbc:	movw	r0, #1
   5adc0:	str	r0, [sp, #8]
   5adc4:	bne	5addc <__assert_fail@plt+0x48224>
   5adc8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5adcc:	cmp	r0, #95	; 0x5f
   5add0:	movw	r0, #0
   5add4:	moveq	r0, #1
   5add8:	str	r0, [sp, #8]
   5addc:	ldr	r0, [sp, #8]
   5ade0:	and	r0, r0, #1
   5ade4:	cmp	r0, #0
   5ade8:	movw	r0, #0
   5adec:	movne	r0, #1
   5adf0:	and	r0, r0, #1
   5adf4:	ldr	r1, [fp, #-8]
   5adf8:	ldr	r2, [r1, #4]
   5adfc:	and	r0, r0, #1
   5ae00:	lsl	r0, r0, #22
   5ae04:	mvn	r3, #4194304	; 0x400000
   5ae08:	and	r2, r2, r3
   5ae0c:	orr	r0, r2, r0
   5ae10:	str	r0, [r1, #4]
   5ae14:	b	5ae88 <__assert_fail@plt+0x482d0>
   5ae18:	bl	12834 <__ctype_b_loc@plt>
   5ae1c:	ldr	r0, [r0]
   5ae20:	ldr	r1, [fp, #-8]
   5ae24:	ldrb	r1, [r1]
   5ae28:	mov	r2, r1
   5ae2c:	add	r0, r0, r1, lsl #1
   5ae30:	ldrh	r0, [r0]
   5ae34:	and	r0, r0, #8
   5ae38:	cmp	r0, #0
   5ae3c:	movw	r0, #1
   5ae40:	str	r0, [sp, #4]
   5ae44:	bne	5ae60 <__assert_fail@plt+0x482a8>
   5ae48:	ldr	r0, [fp, #-8]
   5ae4c:	ldrb	r0, [r0]
   5ae50:	cmp	r0, #95	; 0x5f
   5ae54:	movw	r0, #0
   5ae58:	moveq	r0, #1
   5ae5c:	str	r0, [sp, #4]
   5ae60:	ldr	r0, [sp, #4]
   5ae64:	and	r0, r0, #1
   5ae68:	ldr	r1, [fp, #-8]
   5ae6c:	ldr	r2, [r1, #4]
   5ae70:	and	r0, r0, #1
   5ae74:	lsl	r0, r0, #22
   5ae78:	mvn	r3, #4194304	; 0x400000
   5ae7c:	and	r2, r2, r3
   5ae80:	orr	r0, r2, r0
   5ae84:	str	r0, [r1, #4]
   5ae88:	ldrb	r0, [fp, #-17]	; 0xffffffef
   5ae8c:	sub	r0, r0, #10
   5ae90:	cmp	r0, #115	; 0x73
   5ae94:	str	r0, [sp]
   5ae98:	bhi	5b3c4 <__assert_fail@plt+0x4880c>
   5ae9c:	add	r0, pc, #8
   5aea0:	ldr	r1, [sp]
   5aea4:	ldr	r0, [r0, r1, lsl #2]
   5aea8:	mov	pc, r0
   5aeac:	andeq	fp, r5, ip, ror r0
   5aeb0:	andeq	fp, r5, r4, asr #7
   5aeb4:	andeq	fp, r5, r4, asr #7
   5aeb8:	andeq	fp, r5, r4, asr #7
   5aebc:	andeq	fp, r5, r4, asr #7
   5aec0:	andeq	fp, r5, r4, asr #7
   5aec4:	andeq	fp, r5, r4, asr #7
   5aec8:	andeq	fp, r5, r4, asr #7
   5aecc:	andeq	fp, r5, r4, asr #7
   5aed0:	andeq	fp, r5, r4, asr #7
   5aed4:	andeq	fp, r5, r4, asr #7
   5aed8:	andeq	fp, r5, r4, asr #7
   5aedc:	andeq	fp, r5, r4, asr #7
   5aee0:	andeq	fp, r5, r4, asr #7
   5aee4:	andeq	fp, r5, r4, asr #7
   5aee8:	andeq	fp, r5, r4, asr #7
   5aeec:	andeq	fp, r5, r4, asr #7
   5aef0:	andeq	fp, r5, r4, asr #7
   5aef4:	andeq	fp, r5, r4, asr #7
   5aef8:	andeq	fp, r5, r4, asr #7
   5aefc:	andeq	fp, r5, r4, asr #7
   5af00:	andeq	fp, r5, r4, asr #7
   5af04:	andeq	fp, r5, r4, asr #7
   5af08:	andeq	fp, r5, r4, asr #7
   5af0c:	andeq	fp, r5, r4, asr #7
   5af10:	andeq	fp, r5, r4, asr #7
   5af14:	andeq	fp, r5, r4, lsl r3
   5af18:	andeq	fp, r5, r4, asr #7
   5af1c:	andeq	fp, r5, r4, asr #7
   5af20:	andeq	fp, r5, r4, asr #7
   5af24:	strdeq	fp, [r5], -r0
   5af28:	andeq	fp, r5, ip, lsl r2
   5af2c:	andeq	fp, r5, r4, ror #1
   5af30:	andeq	fp, r5, r0, lsl #2
   5af34:	andeq	fp, r5, r4, asr #7
   5af38:	andeq	fp, r5, r4, asr #7
   5af3c:	andeq	fp, r5, r4, ror #4
   5af40:	andeq	fp, r5, r4, asr #7
   5af44:	andeq	fp, r5, r4, asr #7
   5af48:	andeq	fp, r5, r4, asr #7
   5af4c:	andeq	fp, r5, r4, asr #7
   5af50:	andeq	fp, r5, r4, asr #7
   5af54:	andeq	fp, r5, r4, asr #7
   5af58:	andeq	fp, r5, r4, asr #7
   5af5c:	andeq	fp, r5, r4, asr #7
   5af60:	andeq	fp, r5, r4, asr #7
   5af64:	andeq	fp, r5, r4, asr #7
   5af68:	andeq	fp, r5, r4, asr #7
   5af6c:	andeq	fp, r5, r4, asr #7
   5af70:	andeq	fp, r5, r4, asr #7
   5af74:	andeq	fp, r5, r4, asr #7
   5af78:	andeq	fp, r5, r4, asr #7
   5af7c:	andeq	fp, r5, r4, asr #7
   5af80:	andeq	fp, r5, ip, lsr r1
   5af84:	andeq	fp, r5, r4, asr #7
   5af88:	andeq	fp, r5, r4, asr #7
   5af8c:	andeq	fp, r5, r4, asr #7
   5af90:	andeq	fp, r5, r4, asr #7
   5af94:	andeq	fp, r5, r4, asr #7
   5af98:	andeq	fp, r5, r4, asr #7
   5af9c:	andeq	fp, r5, r4, asr #7
   5afa0:	andeq	fp, r5, r4, asr #7
   5afa4:	andeq	fp, r5, r4, asr #7
   5afa8:	andeq	fp, r5, r4, asr #7
   5afac:	andeq	fp, r5, r4, asr #7
   5afb0:	andeq	fp, r5, r4, asr #7
   5afb4:	andeq	fp, r5, r4, asr #7
   5afb8:	andeq	fp, r5, r4, asr #7
   5afbc:	andeq	fp, r5, r4, asr #7
   5afc0:	andeq	fp, r5, r4, asr #7
   5afc4:	andeq	fp, r5, r4, asr #7
   5afc8:	andeq	fp, r5, r4, asr #7
   5afcc:	andeq	fp, r5, r4, asr #7
   5afd0:	andeq	fp, r5, r4, asr #7
   5afd4:	andeq	fp, r5, r4, asr #7
   5afd8:	andeq	fp, r5, r4, asr #7
   5afdc:	andeq	fp, r5, r4, asr #7
   5afe0:	andeq	fp, r5, r4, asr #7
   5afe4:	andeq	fp, r5, r4, asr #7
   5afe8:	andeq	fp, r5, r4, asr #7
   5afec:	andeq	fp, r5, r4, asr #7
   5aff0:	andeq	fp, r5, r8, asr #4
   5aff4:	andeq	fp, r5, r4, asr #7
   5aff8:	andeq	fp, r5, r4, asr #7
   5affc:	andeq	fp, r5, r0, lsl #5
   5b000:	andeq	fp, r5, r4, asr #7
   5b004:	andeq	fp, r5, r4, asr #7
   5b008:	andeq	fp, r5, r4, asr #7
   5b00c:	andeq	fp, r5, r4, asr #7
   5b010:	andeq	fp, r5, r4, asr #7
   5b014:	andeq	fp, r5, r4, asr #7
   5b018:	andeq	fp, r5, r4, asr #7
   5b01c:	andeq	fp, r5, r4, asr #7
   5b020:	andeq	fp, r5, r4, asr #7
   5b024:	andeq	fp, r5, r4, asr #7
   5b028:	andeq	fp, r5, r4, asr #7
   5b02c:	andeq	fp, r5, r4, asr #7
   5b030:	andeq	fp, r5, r4, asr #7
   5b034:	andeq	fp, r5, r4, asr #7
   5b038:	andeq	fp, r5, r4, asr #7
   5b03c:	andeq	fp, r5, r4, asr #7
   5b040:	andeq	fp, r5, r4, asr #7
   5b044:	andeq	fp, r5, r4, asr #7
   5b048:	andeq	fp, r5, r4, asr #7
   5b04c:	andeq	fp, r5, r4, asr #7
   5b050:	andeq	fp, r5, r4, asr #7
   5b054:	andeq	fp, r5, r4, asr #7
   5b058:	andeq	fp, r5, r4, asr #7
   5b05c:	andeq	fp, r5, r4, asr #7
   5b060:	andeq	fp, r5, r4, asr #7
   5b064:	andeq	fp, r5, r4, asr #7
   5b068:	andeq	fp, r5, r4, asr #7
   5b06c:	andeq	fp, r5, r4, asr #7
   5b070:	andeq	fp, r5, r8, ror r1
   5b074:	andeq	fp, r5, r8, lsr #1
   5b078:			; <UNDEFINED> instruction: 0x0005b1b4
   5b07c:	ldr	r0, [fp, #-16]
   5b080:	and	r0, r0, #2048	; 0x800
   5b084:	cmp	r0, #0
   5b088:	beq	5b0a4 <__assert_fail@plt+0x484ec>
   5b08c:	ldr	r0, [fp, #-8]
   5b090:	ldr	r1, [r0, #4]
   5b094:	mvn	r2, #255	; 0xff
   5b098:	and	r1, r1, r2
   5b09c:	orr	r1, r1, #10
   5b0a0:	str	r1, [r0, #4]
   5b0a4:	b	5b3c8 <__assert_fail@plt+0x48810>
   5b0a8:	ldr	r0, [fp, #-16]
   5b0ac:	and	r0, r0, #1024	; 0x400
   5b0b0:	cmp	r0, #0
   5b0b4:	bne	5b0e0 <__assert_fail@plt+0x48528>
   5b0b8:	ldr	r0, [fp, #-16]
   5b0bc:	and	r0, r0, #32768	; 0x8000
   5b0c0:	cmp	r0, #0
   5b0c4:	beq	5b0e0 <__assert_fail@plt+0x48528>
   5b0c8:	ldr	r0, [fp, #-8]
   5b0cc:	ldr	r1, [r0, #4]
   5b0d0:	mvn	r2, #255	; 0xff
   5b0d4:	and	r1, r1, r2
   5b0d8:	orr	r1, r1, #10
   5b0dc:	str	r1, [r0, #4]
   5b0e0:	b	5b3c8 <__assert_fail@plt+0x48810>
   5b0e4:	ldr	r0, [fp, #-8]
   5b0e8:	ldr	r1, [r0, #4]
   5b0ec:	mvn	r2, #255	; 0xff
   5b0f0:	and	r1, r1, r2
   5b0f4:	orr	r1, r1, #11
   5b0f8:	str	r1, [r0, #4]
   5b0fc:	b	5b3c8 <__assert_fail@plt+0x48810>
   5b100:	ldr	r0, [fp, #-16]
   5b104:	and	r0, r0, #1024	; 0x400
   5b108:	cmp	r0, #0
   5b10c:	bne	5b138 <__assert_fail@plt+0x48580>
   5b110:	ldr	r0, [fp, #-16]
   5b114:	and	r0, r0, #2
   5b118:	cmp	r0, #0
   5b11c:	bne	5b138 <__assert_fail@plt+0x48580>
   5b120:	ldr	r0, [fp, #-8]
   5b124:	ldr	r1, [r0, #4]
   5b128:	mvn	r2, #255	; 0xff
   5b12c:	and	r1, r1, r2
   5b130:	orr	r1, r1, #18
   5b134:	str	r1, [r0, #4]
   5b138:	b	5b3c8 <__assert_fail@plt+0x48810>
   5b13c:	ldr	r0, [fp, #-16]
   5b140:	and	r0, r0, #1024	; 0x400
   5b144:	cmp	r0, #0
   5b148:	bne	5b174 <__assert_fail@plt+0x485bc>
   5b14c:	ldr	r0, [fp, #-16]
   5b150:	and	r0, r0, #2
   5b154:	cmp	r0, #0
   5b158:	bne	5b174 <__assert_fail@plt+0x485bc>
   5b15c:	ldr	r0, [fp, #-8]
   5b160:	ldr	r1, [r0, #4]
   5b164:	mvn	r2, #255	; 0xff
   5b168:	and	r1, r1, r2
   5b16c:	orr	r1, r1, #19
   5b170:	str	r1, [r0, #4]
   5b174:	b	5b3c8 <__assert_fail@plt+0x48810>
   5b178:	ldr	r0, [fp, #-16]
   5b17c:	and	r0, r0, #512	; 0x200
   5b180:	cmp	r0, #0
   5b184:	beq	5b1b0 <__assert_fail@plt+0x485f8>
   5b188:	ldr	r0, [fp, #-16]
   5b18c:	and	r0, r0, #4096	; 0x1000
   5b190:	cmp	r0, #0
   5b194:	beq	5b1b0 <__assert_fail@plt+0x485f8>
   5b198:	ldr	r0, [fp, #-8]
   5b19c:	ldr	r1, [r0, #4]
   5b1a0:	mvn	r2, #255	; 0xff
   5b1a4:	and	r1, r1, r2
   5b1a8:	orr	r1, r1, #23
   5b1ac:	str	r1, [r0, #4]
   5b1b0:	b	5b3c8 <__assert_fail@plt+0x48810>
   5b1b4:	ldr	r0, [fp, #-16]
   5b1b8:	and	r0, r0, #512	; 0x200
   5b1bc:	cmp	r0, #0
   5b1c0:	beq	5b1ec <__assert_fail@plt+0x48634>
   5b1c4:	ldr	r0, [fp, #-16]
   5b1c8:	and	r0, r0, #4096	; 0x1000
   5b1cc:	cmp	r0, #0
   5b1d0:	beq	5b1ec <__assert_fail@plt+0x48634>
   5b1d4:	ldr	r0, [fp, #-8]
   5b1d8:	ldr	r1, [r0, #4]
   5b1dc:	mvn	r2, #255	; 0xff
   5b1e0:	and	r1, r1, r2
   5b1e4:	orr	r1, r1, #24
   5b1e8:	str	r1, [r0, #4]
   5b1ec:	b	5b3c8 <__assert_fail@plt+0x48810>
   5b1f0:	ldr	r0, [fp, #-16]
   5b1f4:	and	r0, r0, #8192	; 0x2000
   5b1f8:	cmp	r0, #0
   5b1fc:	beq	5b218 <__assert_fail@plt+0x48660>
   5b200:	ldr	r0, [fp, #-8]
   5b204:	ldr	r1, [r0, #4]
   5b208:	mvn	r2, #255	; 0xff
   5b20c:	and	r1, r1, r2
   5b210:	orr	r1, r1, #8
   5b214:	str	r1, [r0, #4]
   5b218:	b	5b3c8 <__assert_fail@plt+0x48810>
   5b21c:	ldr	r0, [fp, #-16]
   5b220:	and	r0, r0, #8192	; 0x2000
   5b224:	cmp	r0, #0
   5b228:	beq	5b244 <__assert_fail@plt+0x4868c>
   5b22c:	ldr	r0, [fp, #-8]
   5b230:	ldr	r1, [r0, #4]
   5b234:	mvn	r2, #255	; 0xff
   5b238:	and	r1, r1, r2
   5b23c:	orr	r1, r1, #9
   5b240:	str	r1, [r0, #4]
   5b244:	b	5b3c8 <__assert_fail@plt+0x48810>
   5b248:	ldr	r0, [fp, #-8]
   5b24c:	ldr	r1, [r0, #4]
   5b250:	mvn	r2, #255	; 0xff
   5b254:	and	r1, r1, r2
   5b258:	orr	r1, r1, #20
   5b25c:	str	r1, [r0, #4]
   5b260:	b	5b3c8 <__assert_fail@plt+0x48810>
   5b264:	ldr	r0, [fp, #-8]
   5b268:	ldr	r1, [r0, #4]
   5b26c:	mvn	r2, #255	; 0xff
   5b270:	and	r1, r1, r2
   5b274:	orr	r1, r1, #5
   5b278:	str	r1, [r0, #4]
   5b27c:	b	5b3c8 <__assert_fail@plt+0x48810>
   5b280:	ldr	r0, [pc, #340]	; 5b3dc <__assert_fail@plt+0x48824>
   5b284:	ldr	r1, [fp, #-16]
   5b288:	and	r0, r1, r0
   5b28c:	cmp	r0, #0
   5b290:	bne	5b2ec <__assert_fail@plt+0x48734>
   5b294:	ldr	r0, [fp, #-12]
   5b298:	ldr	r0, [r0, #40]	; 0x28
   5b29c:	cmp	r0, #0
   5b2a0:	beq	5b2ec <__assert_fail@plt+0x48734>
   5b2a4:	ldr	r0, [fp, #-12]
   5b2a8:	ldr	r0, [r0, #4]
   5b2ac:	ldr	r1, [fp, #-12]
   5b2b0:	ldr	r1, [r1, #40]	; 0x28
   5b2b4:	mvn	r2, #0
   5b2b8:	add	r1, r1, r2
   5b2bc:	add	r0, r0, r1
   5b2c0:	ldrb	r0, [r0]
   5b2c4:	strb	r0, [fp, #-29]	; 0xffffffe3
   5b2c8:	ldr	r0, [fp, #-16]
   5b2cc:	and	r0, r0, #2048	; 0x800
   5b2d0:	cmp	r0, #0
   5b2d4:	beq	5b2e4 <__assert_fail@plt+0x4872c>
   5b2d8:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   5b2dc:	cmp	r0, #10
   5b2e0:	beq	5b2e8 <__assert_fail@plt+0x48730>
   5b2e4:	b	5b3c8 <__assert_fail@plt+0x48810>
   5b2e8:	b	5b2ec <__assert_fail@plt+0x48734>
   5b2ec:	ldr	r0, [fp, #-8]
   5b2f0:	ldr	r1, [r0, #4]
   5b2f4:	mvn	r2, #255	; 0xff
   5b2f8:	and	r1, r1, r2
   5b2fc:	orr	r1, r1, #12
   5b300:	str	r1, [r0, #4]
   5b304:	ldr	r0, [fp, #-8]
   5b308:	movw	r1, #16
   5b30c:	str	r1, [r0]
   5b310:	b	5b3c8 <__assert_fail@plt+0x48810>
   5b314:	ldr	r0, [fp, #-16]
   5b318:	and	r0, r0, #8
   5b31c:	cmp	r0, #0
   5b320:	bne	5b39c <__assert_fail@plt+0x487e4>
   5b324:	ldr	r0, [fp, #-12]
   5b328:	ldr	r0, [r0, #40]	; 0x28
   5b32c:	add	r0, r0, #1
   5b330:	ldr	r1, [fp, #-12]
   5b334:	ldr	r1, [r1, #48]	; 0x30
   5b338:	cmp	r0, r1
   5b33c:	beq	5b39c <__assert_fail@plt+0x487e4>
   5b340:	ldr	r0, [fp, #-12]
   5b344:	ldr	r1, [r0, #40]	; 0x28
   5b348:	add	r1, r1, #1
   5b34c:	str	r1, [r0, #40]	; 0x28
   5b350:	ldr	r1, [fp, #-12]
   5b354:	ldr	r2, [fp, #-16]
   5b358:	add	r0, sp, #24
   5b35c:	bl	5a574 <__assert_fail@plt+0x479bc>
   5b360:	ldr	r1, [fp, #-12]
   5b364:	ldr	r2, [r1, #40]	; 0x28
   5b368:	mvn	r3, #0
   5b36c:	add	r2, r2, r3
   5b370:	str	r2, [r1, #40]	; 0x28
   5b374:	ldr	r1, [sp, #28]
   5b378:	and	r1, r1, #255	; 0xff
   5b37c:	cmp	r1, #10
   5b380:	beq	5b398 <__assert_fail@plt+0x487e0>
   5b384:	ldr	r0, [sp, #28]
   5b388:	and	r0, r0, #255	; 0xff
   5b38c:	cmp	r0, #9
   5b390:	beq	5b398 <__assert_fail@plt+0x487e0>
   5b394:	b	5b3c8 <__assert_fail@plt+0x48810>
   5b398:	b	5b39c <__assert_fail@plt+0x487e4>
   5b39c:	ldr	r0, [fp, #-8]
   5b3a0:	ldr	r1, [r0, #4]
   5b3a4:	mvn	r2, #255	; 0xff
   5b3a8:	and	r1, r1, r2
   5b3ac:	orr	r1, r1, #12
   5b3b0:	str	r1, [r0, #4]
   5b3b4:	ldr	r0, [fp, #-8]
   5b3b8:	movw	r1, #32
   5b3bc:	str	r1, [r0]
   5b3c0:	b	5b3c8 <__assert_fail@plt+0x48810>
   5b3c4:	b	5b3c8 <__assert_fail@plt+0x48810>
   5b3c8:	movw	r0, #1
   5b3cc:	str	r0, [fp, #-4]
   5b3d0:	ldr	r0, [fp, #-4]
   5b3d4:	mov	sp, fp
   5b3d8:	pop	{fp, pc}
   5b3dc:	addeq	r0, r0, r8
   5b3e0:	sub	sp, sp, #20
   5b3e4:	str	r0, [sp, #12]
   5b3e8:	str	r1, [sp, #8]
   5b3ec:	ldr	r0, [sp, #12]
   5b3f0:	ldrsb	r0, [r0, #75]	; 0x4b
   5b3f4:	cmp	r0, #0
   5b3f8:	movw	r0, #0
   5b3fc:	movne	r0, #1
   5b400:	mvn	r1, #0
   5b404:	eor	r0, r0, r1
   5b408:	tst	r0, #1
   5b40c:	beq	5b438 <__assert_fail@plt+0x48880>
   5b410:	ldr	r0, [sp, #12]
   5b414:	ldr	r0, [r0, #4]
   5b418:	ldr	r1, [sp, #12]
   5b41c:	ldr	r1, [r1, #40]	; 0x28
   5b420:	ldr	r2, [sp, #8]
   5b424:	add	r1, r1, r2
   5b428:	add	r0, r0, r1
   5b42c:	ldrb	r0, [r0]
   5b430:	strb	r0, [sp, #19]
   5b434:	b	5b594 <__assert_fail@plt+0x489dc>
   5b438:	ldr	r0, [sp, #12]
   5b43c:	ldr	r0, [r0, #80]	; 0x50
   5b440:	cmp	r0, #1
   5b444:	ble	5b4e0 <__assert_fail@plt+0x48928>
   5b448:	ldr	r0, [sp, #12]
   5b44c:	ldr	r1, [r0, #8]
   5b450:	ldr	r0, [r0, #40]	; 0x28
   5b454:	ldr	r2, [sp, #8]
   5b458:	add	r0, r0, r2
   5b45c:	add	r0, r1, r0, lsl #2
   5b460:	ldr	r0, [r0]
   5b464:	cmn	r0, #1
   5b468:	beq	5b4b8 <__assert_fail@plt+0x48900>
   5b46c:	ldr	r0, [sp, #12]
   5b470:	ldr	r0, [r0, #28]
   5b474:	ldr	r1, [sp, #12]
   5b478:	ldr	r1, [r1, #40]	; 0x28
   5b47c:	ldr	r2, [sp, #8]
   5b480:	add	r1, r1, r2
   5b484:	add	r1, r1, #1
   5b488:	cmp	r0, r1
   5b48c:	beq	5b4e0 <__assert_fail@plt+0x48928>
   5b490:	ldr	r0, [sp, #12]
   5b494:	ldr	r1, [r0, #8]
   5b498:	ldr	r0, [r0, #40]	; 0x28
   5b49c:	ldr	r2, [sp, #8]
   5b4a0:	add	r0, r0, r2
   5b4a4:	add	r0, r0, #1
   5b4a8:	add	r0, r1, r0, lsl #2
   5b4ac:	ldr	r0, [r0]
   5b4b0:	cmn	r0, #1
   5b4b4:	bne	5b4e0 <__assert_fail@plt+0x48928>
   5b4b8:	ldr	r0, [sp, #12]
   5b4bc:	ldr	r0, [r0, #4]
   5b4c0:	ldr	r1, [sp, #12]
   5b4c4:	ldr	r1, [r1, #40]	; 0x28
   5b4c8:	ldr	r2, [sp, #8]
   5b4cc:	add	r1, r1, r2
   5b4d0:	add	r0, r0, r1
   5b4d4:	ldrb	r0, [r0]
   5b4d8:	strb	r0, [sp, #19]
   5b4dc:	b	5b594 <__assert_fail@plt+0x489dc>
   5b4e0:	ldr	r0, [sp, #12]
   5b4e4:	ldr	r0, [r0, #40]	; 0x28
   5b4e8:	ldr	r1, [sp, #8]
   5b4ec:	add	r0, r0, r1
   5b4f0:	str	r0, [sp]
   5b4f4:	ldr	r0, [sp, #12]
   5b4f8:	ldrsb	r0, [r0, #76]	; 0x4c
   5b4fc:	cmp	r0, #0
   5b500:	beq	5b51c <__assert_fail@plt+0x48964>
   5b504:	ldr	r0, [sp, #12]
   5b508:	ldr	r0, [r0, #12]
   5b50c:	ldr	r1, [sp]
   5b510:	add	r0, r0, r1, lsl #2
   5b514:	ldr	r0, [r0]
   5b518:	str	r0, [sp]
   5b51c:	ldr	r0, [sp, #12]
   5b520:	ldr	r0, [r0]
   5b524:	ldr	r1, [sp, #12]
   5b528:	ldr	r1, [r1, #24]
   5b52c:	ldr	r2, [sp]
   5b530:	add	r1, r1, r2
   5b534:	add	r0, r0, r1
   5b538:	ldrb	r0, [r0]
   5b53c:	str	r0, [sp, #4]
   5b540:	ldr	r0, [sp, #12]
   5b544:	ldrb	r0, [r0, #76]	; 0x4c
   5b548:	cmp	r0, #0
   5b54c:	beq	5b58c <__assert_fail@plt+0x489d4>
   5b550:	ldr	r0, [sp, #4]
   5b554:	mvn	r1, #127	; 0x7f
   5b558:	and	r0, r0, r1
   5b55c:	cmp	r0, #0
   5b560:	beq	5b58c <__assert_fail@plt+0x489d4>
   5b564:	ldr	r0, [sp, #12]
   5b568:	ldr	r0, [r0, #4]
   5b56c:	ldr	r1, [sp, #12]
   5b570:	ldr	r1, [r1, #40]	; 0x28
   5b574:	ldr	r2, [sp, #8]
   5b578:	add	r1, r1, r2
   5b57c:	add	r0, r0, r1
   5b580:	ldrb	r0, [r0]
   5b584:	strb	r0, [sp, #19]
   5b588:	b	5b594 <__assert_fail@plt+0x489dc>
   5b58c:	ldr	r0, [sp, #4]
   5b590:	strb	r0, [sp, #19]
   5b594:	ldrb	r0, [sp, #19]
   5b598:	add	sp, sp, #20
   5b59c:	bx	lr
   5b5a0:	sub	sp, sp, #12
   5b5a4:	str	r0, [sp, #4]
   5b5a8:	str	r1, [sp]
   5b5ac:	ldr	r0, [sp, #4]
   5b5b0:	ldr	r0, [r0, #80]	; 0x50
   5b5b4:	cmp	r0, #1
   5b5b8:	bne	5b5d8 <__assert_fail@plt+0x48a20>
   5b5bc:	ldr	r0, [sp, #4]
   5b5c0:	ldr	r0, [r0, #4]
   5b5c4:	ldr	r1, [sp]
   5b5c8:	add	r0, r0, r1
   5b5cc:	ldrb	r0, [r0]
   5b5d0:	str	r0, [sp, #8]
   5b5d4:	b	5b5f0 <__assert_fail@plt+0x48a38>
   5b5d8:	ldr	r0, [sp, #4]
   5b5dc:	ldr	r0, [r0, #8]
   5b5e0:	ldr	r1, [sp]
   5b5e4:	add	r0, r0, r1, lsl #2
   5b5e8:	ldr	r0, [r0]
   5b5ec:	str	r0, [sp, #8]
   5b5f0:	ldr	r0, [sp, #8]
   5b5f4:	add	sp, sp, #12
   5b5f8:	bx	lr
   5b5fc:	push	{r4, r5, fp, lr}
   5b600:	add	fp, sp, #8
   5b604:	sub	sp, sp, #72	; 0x48
   5b608:	ldr	ip, [fp, #12]
   5b60c:	ldr	lr, [fp, #8]
   5b610:	str	r0, [fp, #-16]
   5b614:	str	r1, [fp, #-20]	; 0xffffffec
   5b618:	str	r2, [fp, #-24]	; 0xffffffe8
   5b61c:	str	r3, [fp, #-28]	; 0xffffffe4
   5b620:	ldr	r0, [fp, #-20]	; 0xffffffec
   5b624:	ldr	r0, [r0]
   5b628:	str	r0, [sp, #40]	; 0x28
   5b62c:	ldr	r0, [fp, #-16]
   5b630:	ldr	r1, [fp, #-20]	; 0xffffffec
   5b634:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5b638:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5b63c:	ldr	r4, [fp, #8]
   5b640:	ldr	r5, [fp, #12]
   5b644:	str	r4, [sp]
   5b648:	str	r5, [sp, #4]
   5b64c:	str	ip, [sp, #32]
   5b650:	str	lr, [sp, #28]
   5b654:	bl	5ba24 <__assert_fail@plt+0x48e6c>
   5b658:	str	r0, [fp, #-32]	; 0xffffffe0
   5b65c:	ldr	r0, [fp, #12]
   5b660:	ldr	r0, [r0]
   5b664:	cmp	r0, #0
   5b668:	movw	r0, #0
   5b66c:	str	r0, [sp, #24]
   5b670:	beq	5b68c <__assert_fail@plt+0x48ad4>
   5b674:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5b678:	movw	r1, #0
   5b67c:	cmp	r0, r1
   5b680:	movw	r0, #0
   5b684:	moveq	r0, #1
   5b688:	str	r0, [sp, #24]
   5b68c:	ldr	r0, [sp, #24]
   5b690:	tst	r0, #1
   5b694:	beq	5b6a4 <__assert_fail@plt+0x48aec>
   5b698:	movw	r0, #0
   5b69c:	str	r0, [fp, #-12]
   5b6a0:	b	5b87c <__assert_fail@plt+0x48cc4>
   5b6a4:	b	5b6a8 <__assert_fail@plt+0x48af0>
   5b6a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5b6ac:	ldr	r0, [r0, #4]
   5b6b0:	and	r0, r0, #255	; 0xff
   5b6b4:	cmp	r0, #10
   5b6b8:	movw	r0, #0
   5b6bc:	str	r0, [sp, #20]
   5b6c0:	beq	5b718 <__assert_fail@plt+0x48b60>
   5b6c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5b6c8:	ldr	r0, [r0, #4]
   5b6cc:	and	r0, r0, #255	; 0xff
   5b6d0:	cmp	r0, #2
   5b6d4:	movw	r0, #0
   5b6d8:	str	r0, [sp, #20]
   5b6dc:	beq	5b718 <__assert_fail@plt+0x48b60>
   5b6e0:	ldr	r0, [fp, #8]
   5b6e4:	cmp	r0, #0
   5b6e8:	movw	r0, #1
   5b6ec:	str	r0, [sp, #16]
   5b6f0:	beq	5b710 <__assert_fail@plt+0x48b58>
   5b6f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5b6f8:	ldr	r0, [r0, #4]
   5b6fc:	and	r0, r0, #255	; 0xff
   5b700:	cmp	r0, #9
   5b704:	movw	r0, #0
   5b708:	movne	r0, #1
   5b70c:	str	r0, [sp, #16]
   5b710:	ldr	r0, [sp, #16]
   5b714:	str	r0, [sp, #20]
   5b718:	ldr	r0, [sp, #20]
   5b71c:	tst	r0, #1
   5b720:	beq	5b874 <__assert_fail@plt+0x48cbc>
   5b724:	ldr	r0, [fp, #-16]
   5b728:	ldr	r1, [fp, #-20]	; 0xffffffec
   5b72c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5b730:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5b734:	ldr	ip, [fp, #8]
   5b738:	ldr	lr, [fp, #12]
   5b73c:	str	ip, [sp]
   5b740:	str	lr, [sp, #4]
   5b744:	bl	5ba24 <__assert_fail@plt+0x48e6c>
   5b748:	str	r0, [fp, #-36]	; 0xffffffdc
   5b74c:	ldr	r0, [fp, #12]
   5b750:	ldr	r0, [r0]
   5b754:	cmp	r0, #0
   5b758:	movw	r0, #0
   5b75c:	str	r0, [sp, #12]
   5b760:	beq	5b77c <__assert_fail@plt+0x48bc4>
   5b764:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5b768:	movw	r1, #0
   5b76c:	cmp	r0, r1
   5b770:	movw	r0, #0
   5b774:	moveq	r0, #1
   5b778:	str	r0, [sp, #12]
   5b77c:	ldr	r0, [sp, #12]
   5b780:	tst	r0, #1
   5b784:	beq	5b7b8 <__assert_fail@plt+0x48c00>
   5b788:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5b78c:	movw	r1, #0
   5b790:	cmp	r0, r1
   5b794:	beq	5b7ac <__assert_fail@plt+0x48bf4>
   5b798:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5b79c:	movw	r1, #47608	; 0xb9f8
   5b7a0:	movt	r1, #5
   5b7a4:	movw	r2, #0
   5b7a8:	bl	5b888 <__assert_fail@plt+0x48cd0>
   5b7ac:	movw	r0, #0
   5b7b0:	str	r0, [fp, #-12]
   5b7b4:	b	5b87c <__assert_fail@plt+0x48cc4>
   5b7b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5b7bc:	movw	r1, #0
   5b7c0:	cmp	r0, r1
   5b7c4:	beq	5b854 <__assert_fail@plt+0x48c9c>
   5b7c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5b7cc:	movw	r1, #0
   5b7d0:	cmp	r0, r1
   5b7d4:	beq	5b854 <__assert_fail@plt+0x48c9c>
   5b7d8:	ldr	r0, [sp, #40]	; 0x28
   5b7dc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   5b7e0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   5b7e4:	movw	r3, #16
   5b7e8:	bl	5a498 <__assert_fail@plt+0x478e0>
   5b7ec:	str	r0, [sp, #36]	; 0x24
   5b7f0:	ldr	r0, [sp, #36]	; 0x24
   5b7f4:	movw	r1, #0
   5b7f8:	cmp	r0, r1
   5b7fc:	bne	5b848 <__assert_fail@plt+0x48c90>
   5b800:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5b804:	movw	r1, #47608	; 0xb9f8
   5b808:	movt	r1, #5
   5b80c:	movw	r2, #0
   5b810:	bl	5b888 <__assert_fail@plt+0x48cd0>
   5b814:	ldr	r1, [fp, #-32]	; 0xffffffe0
   5b818:	str	r0, [sp, #8]
   5b81c:	mov	r0, r1
   5b820:	movw	r1, #47608	; 0xb9f8
   5b824:	movt	r1, #5
   5b828:	movw	r2, #0
   5b82c:	bl	5b888 <__assert_fail@plt+0x48cd0>
   5b830:	ldr	r1, [fp, #12]
   5b834:	movw	r2, #12
   5b838:	str	r2, [r1]
   5b83c:	movw	r1, #0
   5b840:	str	r1, [fp, #-12]
   5b844:	b	5b87c <__assert_fail@plt+0x48cc4>
   5b848:	ldr	r0, [sp, #36]	; 0x24
   5b84c:	str	r0, [fp, #-32]	; 0xffffffe0
   5b850:	b	5b870 <__assert_fail@plt+0x48cb8>
   5b854:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5b858:	movw	r1, #0
   5b85c:	cmp	r0, r1
   5b860:	bne	5b86c <__assert_fail@plt+0x48cb4>
   5b864:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5b868:	str	r0, [fp, #-32]	; 0xffffffe0
   5b86c:	b	5b870 <__assert_fail@plt+0x48cb8>
   5b870:	b	5b6a8 <__assert_fail@plt+0x48af0>
   5b874:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5b878:	str	r0, [fp, #-12]
   5b87c:	ldr	r0, [fp, #-12]
   5b880:	sub	sp, fp, #8
   5b884:	pop	{r4, r5, fp, pc}
   5b888:	push	{fp, lr}
   5b88c:	mov	fp, sp
   5b890:	sub	sp, sp, #40	; 0x28
   5b894:	str	r0, [fp, #-8]
   5b898:	str	r1, [fp, #-12]
   5b89c:	str	r2, [fp, #-16]
   5b8a0:	ldr	r0, [fp, #-8]
   5b8a4:	str	r0, [sp, #20]
   5b8a8:	b	5b8ac <__assert_fail@plt+0x48cf4>
   5b8ac:	ldr	r0, [sp, #20]
   5b8b0:	ldr	r0, [r0, #4]
   5b8b4:	movw	r1, #0
   5b8b8:	cmp	r0, r1
   5b8bc:	movw	r0, #1
   5b8c0:	str	r0, [sp, #8]
   5b8c4:	bne	5b8e4 <__assert_fail@plt+0x48d2c>
   5b8c8:	ldr	r0, [sp, #20]
   5b8cc:	ldr	r0, [r0, #8]
   5b8d0:	movw	r1, #0
   5b8d4:	cmp	r0, r1
   5b8d8:	movw	r0, #0
   5b8dc:	movne	r0, #1
   5b8e0:	str	r0, [sp, #8]
   5b8e4:	ldr	r0, [sp, #8]
   5b8e8:	tst	r0, #1
   5b8ec:	beq	5b924 <__assert_fail@plt+0x48d6c>
   5b8f0:	ldr	r0, [sp, #20]
   5b8f4:	ldr	r0, [r0, #4]
   5b8f8:	movw	r1, #0
   5b8fc:	cmp	r0, r1
   5b900:	beq	5b914 <__assert_fail@plt+0x48d5c>
   5b904:	ldr	r0, [sp, #20]
   5b908:	ldr	r0, [r0, #4]
   5b90c:	str	r0, [sp, #20]
   5b910:	b	5b920 <__assert_fail@plt+0x48d68>
   5b914:	ldr	r0, [sp, #20]
   5b918:	ldr	r0, [r0, #8]
   5b91c:	str	r0, [sp, #20]
   5b920:	b	5b8ac <__assert_fail@plt+0x48cf4>
   5b924:	b	5b928 <__assert_fail@plt+0x48d70>
   5b928:	ldr	r0, [fp, #-12]
   5b92c:	ldr	r1, [fp, #-16]
   5b930:	ldr	r2, [sp, #20]
   5b934:	str	r0, [sp, #4]
   5b938:	mov	r0, r1
   5b93c:	mov	r1, r2
   5b940:	ldr	r2, [sp, #4]
   5b944:	blx	r2
   5b948:	str	r0, [sp, #12]
   5b94c:	ldr	r0, [sp, #12]
   5b950:	cmp	r0, #0
   5b954:	beq	5b964 <__assert_fail@plt+0x48dac>
   5b958:	ldr	r0, [sp, #12]
   5b95c:	str	r0, [fp, #-4]
   5b960:	b	5b9ec <__assert_fail@plt+0x48e34>
   5b964:	ldr	r0, [sp, #20]
   5b968:	ldr	r0, [r0]
   5b96c:	movw	r1, #0
   5b970:	cmp	r0, r1
   5b974:	bne	5b984 <__assert_fail@plt+0x48dcc>
   5b978:	movw	r0, #0
   5b97c:	str	r0, [fp, #-4]
   5b980:	b	5b9ec <__assert_fail@plt+0x48e34>
   5b984:	ldr	r0, [sp, #20]
   5b988:	str	r0, [sp, #16]
   5b98c:	ldr	r0, [sp, #20]
   5b990:	ldr	r0, [r0]
   5b994:	str	r0, [sp, #20]
   5b998:	ldr	r0, [sp, #20]
   5b99c:	ldr	r0, [r0, #8]
   5b9a0:	ldr	r1, [sp, #16]
   5b9a4:	cmp	r0, r1
   5b9a8:	movw	r0, #1
   5b9ac:	str	r0, [sp]
   5b9b0:	beq	5b9d0 <__assert_fail@plt+0x48e18>
   5b9b4:	ldr	r0, [sp, #20]
   5b9b8:	ldr	r0, [r0, #8]
   5b9bc:	movw	r1, #0
   5b9c0:	cmp	r0, r1
   5b9c4:	movw	r0, #0
   5b9c8:	moveq	r0, #1
   5b9cc:	str	r0, [sp]
   5b9d0:	ldr	r0, [sp]
   5b9d4:	tst	r0, #1
   5b9d8:	bne	5b928 <__assert_fail@plt+0x48d70>
   5b9dc:	ldr	r0, [sp, #20]
   5b9e0:	ldr	r0, [r0, #8]
   5b9e4:	str	r0, [sp, #20]
   5b9e8:	b	5b8a8 <__assert_fail@plt+0x48cf0>
   5b9ec:	ldr	r0, [fp, #-4]
   5b9f0:	mov	sp, fp
   5b9f4:	pop	{fp, pc}
   5b9f8:	push	{fp, lr}
   5b9fc:	mov	fp, sp
   5ba00:	sub	sp, sp, #8
   5ba04:	str	r0, [sp, #4]
   5ba08:	str	r1, [sp]
   5ba0c:	ldr	r0, [sp]
   5ba10:	add	r0, r0, #20
   5ba14:	bl	579b0 <__assert_fail@plt+0x44df8>
   5ba18:	movw	r0, #0
   5ba1c:	mov	sp, fp
   5ba20:	pop	{fp, pc}
   5ba24:	push	{fp, lr}
   5ba28:	mov	fp, sp
   5ba2c:	sub	sp, sp, #152	; 0x98
   5ba30:	ldr	ip, [fp, #12]
   5ba34:	ldr	lr, [fp, #8]
   5ba38:	str	r0, [fp, #-8]
   5ba3c:	str	r1, [fp, #-12]
   5ba40:	str	r2, [fp, #-16]
   5ba44:	str	r3, [fp, #-20]	; 0xffffffec
   5ba48:	ldr	r0, [fp, #-12]
   5ba4c:	ldr	r0, [r0]
   5ba50:	str	r0, [fp, #-24]	; 0xffffffe8
   5ba54:	ldr	r0, [fp, #-16]
   5ba58:	ldrb	r0, [r0, #4]
   5ba5c:	sub	r0, r0, #1
   5ba60:	str	r0, [fp, #-48]	; 0xffffffd0
   5ba64:	add	r0, pc, #8
   5ba68:	ldr	r1, [fp, #-48]	; 0xffffffd0
   5ba6c:	ldr	r0, [r0, r1, lsl #2]
   5ba70:	mov	pc, r0
   5ba74:	andeq	fp, r5, r4, lsl #22
   5ba78:	andeq	ip, r5, r4, lsr #6
   5ba7c:	andeq	ip, r5, r8, asr #6
   5ba80:	andeq	fp, r5, r4, ror #26
   5ba84:	andeq	ip, r5, r4, asr r1
   5ba88:	andeq	ip, r5, r8, asr #6
   5ba8c:	andeq	ip, r5, r8, asr #6
   5ba90:	andeq	fp, r5, r0, lsl #25
   5ba94:	ldrdeq	fp, [r5], -r8
   5ba98:	andeq	ip, r5, r4, lsr #6
   5ba9c:	andeq	fp, r5, ip, asr lr
   5baa0:	andeq	fp, r5, r8, ror pc
   5baa4:	andeq	ip, r5, r8, asr #6
   5baa8:	andeq	ip, r5, r8, asr #6
   5baac:	andeq	ip, r5, r8, asr #6
   5bab0:	andeq	ip, r5, r8, asr #6
   5bab4:	andeq	ip, r5, r8, asr #6
   5bab8:	andeq	fp, r5, ip, asr lr
   5babc:	andeq	fp, r5, ip, asr lr
   5bac0:	strdeq	fp, [r5], -r8
   5bac4:	andeq	ip, r5, r8, asr #6
   5bac8:	andeq	ip, r5, r8, asr #6
   5bacc:	andeq	fp, r5, r0, lsr lr
   5bad0:	andeq	fp, r5, r8, lsl pc
   5bad4:	andeq	ip, r5, r8, asr #6
   5bad8:	andeq	ip, r5, r8, asr #6
   5badc:	andeq	ip, r5, r8, asr #6
   5bae0:	andeq	ip, r5, r8, asr #6
   5bae4:	andeq	ip, r5, r8, asr #6
   5bae8:	andeq	ip, r5, r8, asr #6
   5baec:	andeq	ip, r5, r8, asr #6
   5baf0:	andeq	ip, r5, r4, asr #3
   5baf4:	andeq	ip, r5, r4, asr #3
   5baf8:	andeq	ip, r5, r4, ror r2
   5bafc:	andeq	ip, r5, r4, ror r2
   5bb00:	andeq	ip, r5, r0, lsr r3
   5bb04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5bb08:	ldr	r3, [fp, #-16]
   5bb0c:	movw	r1, #0
   5bb10:	str	r1, [fp, #-52]	; 0xffffffcc
   5bb14:	ldr	r2, [fp, #-52]	; 0xffffffcc
   5bb18:	bl	5c4fc <__assert_fail@plt+0x49944>
   5bb1c:	str	r0, [fp, #-28]	; 0xffffffe4
   5bb20:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5bb24:	movw	r1, #0
   5bb28:	cmp	r0, r1
   5bb2c:	bne	5bb48 <__assert_fail@plt+0x48f90>
   5bb30:	ldr	r0, [fp, #12]
   5bb34:	movw	r1, #12
   5bb38:	str	r1, [r0]
   5bb3c:	movw	r0, #0
   5bb40:	str	r0, [fp, #-4]
   5bb44:	b	5c4f0 <__assert_fail@plt+0x49938>
   5bb48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5bb4c:	ldr	r0, [r0, #92]	; 0x5c
   5bb50:	cmp	r0, #1
   5bb54:	ble	5bc7c <__assert_fail@plt+0x490c4>
   5bb58:	b	5bb5c <__assert_fail@plt+0x48fa4>
   5bb5c:	ldr	r0, [fp, #-8]
   5bb60:	ldr	r0, [r0, #56]	; 0x38
   5bb64:	ldr	r1, [fp, #-8]
   5bb68:	ldr	r1, [r1, #40]	; 0x28
   5bb6c:	cmp	r0, r1
   5bb70:	movw	r0, #0
   5bb74:	str	r0, [fp, #-56]	; 0xffffffc8
   5bb78:	ble	5bbd0 <__assert_fail@plt+0x49018>
   5bb7c:	ldr	r0, [fp, #-8]
   5bb80:	ldr	r0, [r0, #40]	; 0x28
   5bb84:	ldr	r1, [fp, #-8]
   5bb88:	ldr	r1, [r1, #28]
   5bb8c:	cmp	r0, r1
   5bb90:	movw	r0, #1
   5bb94:	str	r0, [fp, #-60]	; 0xffffffc4
   5bb98:	beq	5bbc0 <__assert_fail@plt+0x49008>
   5bb9c:	ldr	r0, [fp, #-8]
   5bba0:	ldr	r1, [r0, #8]
   5bba4:	ldr	r0, [r0, #40]	; 0x28
   5bba8:	add	r0, r1, r0, lsl #2
   5bbac:	ldr	r0, [r0]
   5bbb0:	cmn	r0, #1
   5bbb4:	movw	r0, #0
   5bbb8:	movne	r0, #1
   5bbbc:	str	r0, [fp, #-60]	; 0xffffffc4
   5bbc0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   5bbc4:	mvn	r1, #0
   5bbc8:	eor	r0, r0, r1
   5bbcc:	str	r0, [fp, #-56]	; 0xffffffc8
   5bbd0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   5bbd4:	tst	r0, #1
   5bbd8:	beq	5bc78 <__assert_fail@plt+0x490c0>
   5bbdc:	ldr	r0, [fp, #-16]
   5bbe0:	ldr	r1, [fp, #-8]
   5bbe4:	ldr	r2, [fp, #-20]	; 0xffffffec
   5bbe8:	bl	5a204 <__assert_fail@plt+0x4764c>
   5bbec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5bbf0:	ldr	r3, [fp, #-16]
   5bbf4:	movw	r1, #0
   5bbf8:	str	r1, [fp, #-64]	; 0xffffffc0
   5bbfc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   5bc00:	bl	5c4fc <__assert_fail@plt+0x49944>
   5bc04:	str	r0, [fp, #-32]	; 0xffffffe0
   5bc08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5bc0c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   5bc10:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5bc14:	movw	r3, #16
   5bc18:	bl	5a498 <__assert_fail@plt+0x478e0>
   5bc1c:	str	r0, [fp, #-28]	; 0xffffffe4
   5bc20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5bc24:	movw	r1, #0
   5bc28:	cmp	r0, r1
   5bc2c:	movw	r0, #1
   5bc30:	str	r0, [fp, #-68]	; 0xffffffbc
   5bc34:	beq	5bc50 <__assert_fail@plt+0x49098>
   5bc38:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5bc3c:	movw	r1, #0
   5bc40:	cmp	r0, r1
   5bc44:	movw	r0, #0
   5bc48:	moveq	r0, #1
   5bc4c:	str	r0, [fp, #-68]	; 0xffffffbc
   5bc50:	ldr	r0, [fp, #-68]	; 0xffffffbc
   5bc54:	tst	r0, #1
   5bc58:	beq	5bc74 <__assert_fail@plt+0x490bc>
   5bc5c:	ldr	r0, [fp, #12]
   5bc60:	movw	r1, #12
   5bc64:	str	r1, [r0]
   5bc68:	movw	r0, #0
   5bc6c:	str	r0, [fp, #-4]
   5bc70:	b	5c4f0 <__assert_fail@plt+0x49938>
   5bc74:	b	5bb5c <__assert_fail@plt+0x48fa4>
   5bc78:	b	5bc7c <__assert_fail@plt+0x490c4>
   5bc7c:	b	5c348 <__assert_fail@plt+0x49790>
   5bc80:	ldr	r0, [fp, #-8]
   5bc84:	ldr	r1, [fp, #-12]
   5bc88:	ldr	r2, [fp, #-16]
   5bc8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   5bc90:	ldr	ip, [fp, #8]
   5bc94:	add	ip, ip, #1
   5bc98:	ldr	lr, [fp, #12]
   5bc9c:	str	ip, [sp]
   5bca0:	str	lr, [sp, #4]
   5bca4:	bl	5c660 <__assert_fail@plt+0x49aa8>
   5bca8:	str	r0, [fp, #-28]	; 0xffffffe4
   5bcac:	ldr	r0, [fp, #12]
   5bcb0:	ldr	r0, [r0]
   5bcb4:	cmp	r0, #0
   5bcb8:	movw	r0, #0
   5bcbc:	str	r0, [fp, #-72]	; 0xffffffb8
   5bcc0:	beq	5bcdc <__assert_fail@plt+0x49124>
   5bcc4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5bcc8:	movw	r1, #0
   5bccc:	cmp	r0, r1
   5bcd0:	movw	r0, #0
   5bcd4:	moveq	r0, #1
   5bcd8:	str	r0, [fp, #-72]	; 0xffffffb8
   5bcdc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   5bce0:	tst	r0, #1
   5bce4:	beq	5bcf4 <__assert_fail@plt+0x4913c>
   5bce8:	movw	r0, #0
   5bcec:	str	r0, [fp, #-4]
   5bcf0:	b	5c4f0 <__assert_fail@plt+0x49938>
   5bcf4:	b	5c348 <__assert_fail@plt+0x49790>
   5bcf8:	ldr	r0, [fp, #-8]
   5bcfc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5bd00:	ldr	r2, [fp, #-16]
   5bd04:	ldr	r3, [fp, #-20]	; 0xffffffec
   5bd08:	ldr	ip, [fp, #12]
   5bd0c:	str	ip, [sp]
   5bd10:	bl	5c820 <__assert_fail@plt+0x49c68>
   5bd14:	str	r0, [fp, #-28]	; 0xffffffe4
   5bd18:	ldr	r0, [fp, #12]
   5bd1c:	ldr	r0, [r0]
   5bd20:	cmp	r0, #0
   5bd24:	movw	r0, #0
   5bd28:	str	r0, [sp, #76]	; 0x4c
   5bd2c:	beq	5bd48 <__assert_fail@plt+0x49190>
   5bd30:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5bd34:	movw	r1, #0
   5bd38:	cmp	r0, r1
   5bd3c:	movw	r0, #0
   5bd40:	moveq	r0, #1
   5bd44:	str	r0, [sp, #76]	; 0x4c
   5bd48:	ldr	r0, [sp, #76]	; 0x4c
   5bd4c:	tst	r0, #1
   5bd50:	beq	5bd60 <__assert_fail@plt+0x491a8>
   5bd54:	movw	r0, #0
   5bd58:	str	r0, [fp, #-4]
   5bd5c:	b	5c4f0 <__assert_fail@plt+0x49938>
   5bd60:	b	5c348 <__assert_fail@plt+0x49790>
   5bd64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5bd68:	ldr	r0, [r0, #84]	; 0x54
   5bd6c:	ldr	r1, [fp, #-16]
   5bd70:	ldr	r1, [r1]
   5bd74:	movw	r2, #1
   5bd78:	lsl	r1, r2, r1
   5bd7c:	and	r0, r0, r1
   5bd80:	cmp	r0, #0
   5bd84:	bne	5bda0 <__assert_fail@plt+0x491e8>
   5bd88:	ldr	r0, [fp, #12]
   5bd8c:	movw	r1, #6
   5bd90:	str	r1, [r0]
   5bd94:	movw	r0, #0
   5bd98:	str	r0, [fp, #-4]
   5bd9c:	b	5c4f0 <__assert_fail@plt+0x49938>
   5bda0:	ldr	r0, [fp, #-16]
   5bda4:	ldr	r0, [r0]
   5bda8:	movw	r1, #1
   5bdac:	lsl	r0, r1, r0
   5bdb0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5bdb4:	ldr	r2, [r1, #80]	; 0x50
   5bdb8:	orr	r0, r2, r0
   5bdbc:	str	r0, [r1, #80]	; 0x50
   5bdc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5bdc4:	ldr	r3, [fp, #-16]
   5bdc8:	movw	r1, #0
   5bdcc:	str	r1, [sp, #72]	; 0x48
   5bdd0:	ldr	r2, [sp, #72]	; 0x48
   5bdd4:	bl	5c4fc <__assert_fail@plt+0x49944>
   5bdd8:	str	r0, [fp, #-28]	; 0xffffffe4
   5bddc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5bde0:	movw	r1, #0
   5bde4:	cmp	r0, r1
   5bde8:	bne	5be04 <__assert_fail@plt+0x4924c>
   5bdec:	ldr	r0, [fp, #12]
   5bdf0:	movw	r1, #12
   5bdf4:	str	r1, [r0]
   5bdf8:	movw	r0, #0
   5bdfc:	str	r0, [fp, #-4]
   5be00:	b	5c4f0 <__assert_fail@plt+0x49938>
   5be04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5be08:	ldr	r1, [r0, #76]	; 0x4c
   5be0c:	add	r1, r1, #1
   5be10:	str	r1, [r0, #76]	; 0x4c
   5be14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5be18:	ldrb	r1, [r0, #88]	; 0x58
   5be1c:	bic	r1, r1, #2
   5be20:	movw	r2, #2
   5be24:	orr	r1, r1, r2
   5be28:	strb	r1, [r0, #88]	; 0x58
   5be2c:	b	5c348 <__assert_fail@plt+0x49790>
   5be30:	ldr	r0, [fp, #-20]	; 0xffffffec
   5be34:	and	r0, r0, #16777216	; 0x1000000
   5be38:	cmp	r0, #0
   5be3c:	beq	5be58 <__assert_fail@plt+0x492a0>
   5be40:	ldr	r0, [fp, #12]
   5be44:	movw	r1, #13
   5be48:	str	r1, [r0]
   5be4c:	movw	r0, #0
   5be50:	str	r0, [fp, #-4]
   5be54:	b	5c4f0 <__assert_fail@plt+0x49938>
   5be58:	b	5be5c <__assert_fail@plt+0x492a4>
   5be5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   5be60:	and	r0, r0, #32
   5be64:	cmp	r0, #0
   5be68:	beq	5be84 <__assert_fail@plt+0x492cc>
   5be6c:	ldr	r0, [fp, #12]
   5be70:	movw	r1, #13
   5be74:	str	r1, [r0]
   5be78:	movw	r0, #0
   5be7c:	str	r0, [fp, #-4]
   5be80:	b	5c4f0 <__assert_fail@plt+0x49938>
   5be84:	ldr	r0, [fp, #-20]	; 0xffffffec
   5be88:	and	r0, r0, #16
   5be8c:	cmp	r0, #0
   5be90:	beq	5bed0 <__assert_fail@plt+0x49318>
   5be94:	ldr	r0, [fp, #-16]
   5be98:	ldr	r1, [fp, #-8]
   5be9c:	ldr	r2, [fp, #-20]	; 0xffffffec
   5bea0:	bl	5a204 <__assert_fail@plt+0x4764c>
   5bea4:	ldr	r0, [fp, #-8]
   5bea8:	ldr	r1, [fp, #-12]
   5beac:	ldr	r2, [fp, #-16]
   5beb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   5beb4:	ldr	ip, [fp, #8]
   5beb8:	ldr	lr, [fp, #12]
   5bebc:	str	ip, [sp]
   5bec0:	str	lr, [sp, #4]
   5bec4:	bl	5ba24 <__assert_fail@plt+0x48e6c>
   5bec8:	str	r0, [fp, #-4]
   5becc:	b	5c4f0 <__assert_fail@plt+0x49938>
   5bed0:	b	5bed4 <__assert_fail@plt+0x4931c>
   5bed4:	b	5bed8 <__assert_fail@plt+0x49320>
   5bed8:	ldr	r0, [fp, #-16]
   5bedc:	ldr	r0, [r0, #4]
   5bee0:	and	r0, r0, #255	; 0xff
   5bee4:	cmp	r0, #9
   5bee8:	bne	5bf14 <__assert_fail@plt+0x4935c>
   5beec:	ldr	r0, [fp, #-20]	; 0xffffffec
   5bef0:	and	r0, r0, #131072	; 0x20000
   5bef4:	cmp	r0, #0
   5bef8:	bne	5bf14 <__assert_fail@plt+0x4935c>
   5befc:	ldr	r0, [fp, #12]
   5bf00:	movw	r1, #16
   5bf04:	str	r1, [r0]
   5bf08:	movw	r0, #0
   5bf0c:	str	r0, [fp, #-4]
   5bf10:	b	5c4f0 <__assert_fail@plt+0x49938>
   5bf14:	b	5bf18 <__assert_fail@plt+0x49360>
   5bf18:	ldr	r0, [fp, #-16]
   5bf1c:	ldr	r1, [r0, #4]
   5bf20:	mvn	r2, #255	; 0xff
   5bf24:	and	r1, r1, r2
   5bf28:	orr	r1, r1, #1
   5bf2c:	str	r1, [r0, #4]
   5bf30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5bf34:	ldr	r3, [fp, #-16]
   5bf38:	movw	r1, #0
   5bf3c:	str	r1, [sp, #68]	; 0x44
   5bf40:	ldr	r2, [sp, #68]	; 0x44
   5bf44:	bl	5c4fc <__assert_fail@plt+0x49944>
   5bf48:	str	r0, [fp, #-28]	; 0xffffffe4
   5bf4c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5bf50:	movw	r1, #0
   5bf54:	cmp	r0, r1
   5bf58:	bne	5bf74 <__assert_fail@plt+0x493bc>
   5bf5c:	ldr	r0, [fp, #12]
   5bf60:	movw	r1, #12
   5bf64:	str	r1, [r0]
   5bf68:	movw	r0, #0
   5bf6c:	str	r0, [fp, #-4]
   5bf70:	b	5c4f0 <__assert_fail@plt+0x49938>
   5bf74:	b	5c348 <__assert_fail@plt+0x49790>
   5bf78:	ldr	r0, [fp, #-16]
   5bf7c:	ldr	r0, [r0]
   5bf80:	movw	r1, #783	; 0x30f
   5bf84:	and	r0, r0, r1
   5bf88:	cmp	r0, #0
   5bf8c:	beq	5bfb0 <__assert_fail@plt+0x493f8>
   5bf90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5bf94:	ldrb	r0, [r0, #88]	; 0x58
   5bf98:	ubfx	r0, r0, #4, #1
   5bf9c:	and	r0, r0, #255	; 0xff
   5bfa0:	cmp	r0, #0
   5bfa4:	bne	5bfb0 <__assert_fail@plt+0x493f8>
   5bfa8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5bfac:	bl	5d148 <__assert_fail@plt+0x4a590>
   5bfb0:	ldr	r0, [fp, #-16]
   5bfb4:	ldr	r0, [r0]
   5bfb8:	cmp	r0, #256	; 0x100
   5bfbc:	beq	5bfd0 <__assert_fail@plt+0x49418>
   5bfc0:	ldr	r0, [fp, #-16]
   5bfc4:	ldr	r0, [r0]
   5bfc8:	cmp	r0, #512	; 0x200
   5bfcc:	bne	5c0f0 <__assert_fail@plt+0x49538>
   5bfd0:	ldr	r0, [fp, #-16]
   5bfd4:	ldr	r0, [r0]
   5bfd8:	cmp	r0, #256	; 0x100
   5bfdc:	bne	5c018 <__assert_fail@plt+0x49460>
   5bfe0:	ldr	r0, [fp, #-16]
   5bfe4:	movw	r1, #6
   5bfe8:	str	r1, [r0]
   5bfec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5bff0:	ldr	r3, [fp, #-16]
   5bff4:	movw	r1, #0
   5bff8:	str	r1, [sp, #64]	; 0x40
   5bffc:	ldr	r2, [sp, #64]	; 0x40
   5c000:	bl	5c4fc <__assert_fail@plt+0x49944>
   5c004:	str	r0, [fp, #-36]	; 0xffffffdc
   5c008:	ldr	r0, [fp, #-16]
   5c00c:	movw	r1, #9
   5c010:	str	r1, [r0]
   5c014:	b	5c04c <__assert_fail@plt+0x49494>
   5c018:	ldr	r0, [fp, #-16]
   5c01c:	movw	r1, #5
   5c020:	str	r1, [r0]
   5c024:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5c028:	ldr	r3, [fp, #-16]
   5c02c:	movw	r1, #0
   5c030:	str	r1, [sp, #60]	; 0x3c
   5c034:	ldr	r2, [sp, #60]	; 0x3c
   5c038:	bl	5c4fc <__assert_fail@plt+0x49944>
   5c03c:	str	r0, [fp, #-36]	; 0xffffffdc
   5c040:	ldr	r0, [fp, #-16]
   5c044:	movw	r1, #10
   5c048:	str	r1, [r0]
   5c04c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5c050:	ldr	r3, [fp, #-16]
   5c054:	movw	r1, #0
   5c058:	str	r1, [sp, #56]	; 0x38
   5c05c:	ldr	r2, [sp, #56]	; 0x38
   5c060:	bl	5c4fc <__assert_fail@plt+0x49944>
   5c064:	str	r0, [fp, #-40]	; 0xffffffd8
   5c068:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5c06c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   5c070:	ldr	r2, [fp, #-40]	; 0xffffffd8
   5c074:	movw	r3, #10
   5c078:	bl	5a498 <__assert_fail@plt+0x478e0>
   5c07c:	str	r0, [fp, #-28]	; 0xffffffe4
   5c080:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5c084:	movw	r1, #0
   5c088:	cmp	r0, r1
   5c08c:	movw	r0, #1
   5c090:	str	r0, [sp, #52]	; 0x34
   5c094:	beq	5c0c8 <__assert_fail@plt+0x49510>
   5c098:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5c09c:	movw	r1, #0
   5c0a0:	cmp	r0, r1
   5c0a4:	movw	r0, #1
   5c0a8:	str	r0, [sp, #52]	; 0x34
   5c0ac:	beq	5c0c8 <__assert_fail@plt+0x49510>
   5c0b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5c0b4:	movw	r1, #0
   5c0b8:	cmp	r0, r1
   5c0bc:	movw	r0, #0
   5c0c0:	moveq	r0, #1
   5c0c4:	str	r0, [sp, #52]	; 0x34
   5c0c8:	ldr	r0, [sp, #52]	; 0x34
   5c0cc:	tst	r0, #1
   5c0d0:	beq	5c0ec <__assert_fail@plt+0x49534>
   5c0d4:	ldr	r0, [fp, #12]
   5c0d8:	movw	r1, #12
   5c0dc:	str	r1, [r0]
   5c0e0:	movw	r0, #0
   5c0e4:	str	r0, [fp, #-4]
   5c0e8:	b	5c4f0 <__assert_fail@plt+0x49938>
   5c0ec:	b	5c138 <__assert_fail@plt+0x49580>
   5c0f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5c0f4:	ldr	r3, [fp, #-16]
   5c0f8:	movw	r1, #0
   5c0fc:	str	r1, [sp, #48]	; 0x30
   5c100:	ldr	r2, [sp, #48]	; 0x30
   5c104:	bl	5c4fc <__assert_fail@plt+0x49944>
   5c108:	str	r0, [fp, #-28]	; 0xffffffe4
   5c10c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5c110:	movw	r1, #0
   5c114:	cmp	r0, r1
   5c118:	bne	5c134 <__assert_fail@plt+0x4957c>
   5c11c:	ldr	r0, [fp, #12]
   5c120:	movw	r1, #12
   5c124:	str	r1, [r0]
   5c128:	movw	r0, #0
   5c12c:	str	r0, [fp, #-4]
   5c130:	b	5c4f0 <__assert_fail@plt+0x49938>
   5c134:	b	5c138 <__assert_fail@plt+0x49580>
   5c138:	ldr	r0, [fp, #-16]
   5c13c:	ldr	r1, [fp, #-8]
   5c140:	ldr	r2, [fp, #-20]	; 0xffffffec
   5c144:	bl	5a204 <__assert_fail@plt+0x4764c>
   5c148:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5c14c:	str	r0, [fp, #-4]
   5c150:	b	5c4f0 <__assert_fail@plt+0x49938>
   5c154:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5c158:	ldr	r3, [fp, #-16]
   5c15c:	movw	r1, #0
   5c160:	str	r1, [sp, #44]	; 0x2c
   5c164:	ldr	r2, [sp, #44]	; 0x2c
   5c168:	bl	5c4fc <__assert_fail@plt+0x49944>
   5c16c:	str	r0, [fp, #-28]	; 0xffffffe4
   5c170:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5c174:	movw	r1, #0
   5c178:	cmp	r0, r1
   5c17c:	bne	5c198 <__assert_fail@plt+0x495e0>
   5c180:	ldr	r0, [fp, #12]
   5c184:	movw	r1, #12
   5c188:	str	r1, [r0]
   5c18c:	movw	r0, #0
   5c190:	str	r0, [fp, #-4]
   5c194:	b	5c4f0 <__assert_fail@plt+0x49938>
   5c198:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5c19c:	ldr	r0, [r0, #92]	; 0x5c
   5c1a0:	cmp	r0, #1
   5c1a4:	ble	5c1c0 <__assert_fail@plt+0x49608>
   5c1a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5c1ac:	ldrb	r1, [r0, #88]	; 0x58
   5c1b0:	bic	r1, r1, #2
   5c1b4:	movw	r2, #2
   5c1b8:	orr	r1, r1, r2
   5c1bc:	strb	r1, [r0, #88]	; 0x58
   5c1c0:	b	5c348 <__assert_fail@plt+0x49790>
   5c1c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5c1c8:	ldr	r1, [fp, #-8]
   5c1cc:	ldr	r1, [r1, #64]	; 0x40
   5c1d0:	ldr	r2, [fp, #-16]
   5c1d4:	ldr	r2, [r2, #4]
   5c1d8:	and	r2, r2, #255	; 0xff
   5c1dc:	cmp	r2, #33	; 0x21
   5c1e0:	movw	r2, #0
   5c1e4:	moveq	r2, #1
   5c1e8:	ldr	r3, [fp, #12]
   5c1ec:	movw	ip, #49976	; 0xc338
   5c1f0:	movt	ip, #7
   5c1f4:	str	r2, [sp, #40]	; 0x28
   5c1f8:	mov	r2, ip
   5c1fc:	movw	ip, #49982	; 0xc33e
   5c200:	movt	ip, #7
   5c204:	str	r3, [sp, #36]	; 0x24
   5c208:	mov	r3, ip
   5c20c:	ldr	ip, [sp, #40]	; 0x28
   5c210:	and	lr, ip, #1
   5c214:	str	lr, [sp]
   5c218:	ldr	lr, [sp, #36]	; 0x24
   5c21c:	str	lr, [sp, #4]
   5c220:	bl	5d2f8 <__assert_fail@plt+0x4a740>
   5c224:	str	r0, [fp, #-28]	; 0xffffffe4
   5c228:	ldr	r0, [fp, #12]
   5c22c:	ldr	r0, [r0]
   5c230:	cmp	r0, #0
   5c234:	movw	r0, #0
   5c238:	str	r0, [sp, #32]
   5c23c:	beq	5c258 <__assert_fail@plt+0x496a0>
   5c240:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5c244:	movw	r1, #0
   5c248:	cmp	r0, r1
   5c24c:	movw	r0, #0
   5c250:	moveq	r0, #1
   5c254:	str	r0, [sp, #32]
   5c258:	ldr	r0, [sp, #32]
   5c25c:	tst	r0, #1
   5c260:	beq	5c270 <__assert_fail@plt+0x496b8>
   5c264:	movw	r0, #0
   5c268:	str	r0, [fp, #-4]
   5c26c:	b	5c4f0 <__assert_fail@plt+0x49938>
   5c270:	b	5c348 <__assert_fail@plt+0x49790>
   5c274:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5c278:	ldr	r1, [fp, #-8]
   5c27c:	ldr	r1, [r1, #64]	; 0x40
   5c280:	ldr	r2, [fp, #-16]
   5c284:	ldr	r2, [r2, #4]
   5c288:	and	r2, r2, #255	; 0xff
   5c28c:	cmp	r2, #35	; 0x23
   5c290:	movw	r2, #0
   5c294:	moveq	r2, #1
   5c298:	ldr	r3, [fp, #12]
   5c29c:	movw	ip, #49984	; 0xc340
   5c2a0:	movt	ip, #7
   5c2a4:	str	r2, [sp, #28]
   5c2a8:	mov	r2, ip
   5c2ac:	movw	ip, #29909	; 0x74d5
   5c2b0:	movt	ip, #7
   5c2b4:	str	r3, [sp, #24]
   5c2b8:	mov	r3, ip
   5c2bc:	ldr	ip, [sp, #28]
   5c2c0:	and	lr, ip, #1
   5c2c4:	str	lr, [sp]
   5c2c8:	ldr	lr, [sp, #24]
   5c2cc:	str	lr, [sp, #4]
   5c2d0:	bl	5d2f8 <__assert_fail@plt+0x4a740>
   5c2d4:	str	r0, [fp, #-28]	; 0xffffffe4
   5c2d8:	ldr	r0, [fp, #12]
   5c2dc:	ldr	r0, [r0]
   5c2e0:	cmp	r0, #0
   5c2e4:	movw	r0, #0
   5c2e8:	str	r0, [sp, #20]
   5c2ec:	beq	5c308 <__assert_fail@plt+0x49750>
   5c2f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5c2f4:	movw	r1, #0
   5c2f8:	cmp	r0, r1
   5c2fc:	movw	r0, #0
   5c300:	moveq	r0, #1
   5c304:	str	r0, [sp, #20]
   5c308:	ldr	r0, [sp, #20]
   5c30c:	tst	r0, #1
   5c310:	beq	5c320 <__assert_fail@plt+0x49768>
   5c314:	movw	r0, #0
   5c318:	str	r0, [fp, #-4]
   5c31c:	b	5c4f0 <__assert_fail@plt+0x49938>
   5c320:	b	5c348 <__assert_fail@plt+0x49790>
   5c324:	movw	r0, #0
   5c328:	str	r0, [fp, #-4]
   5c32c:	b	5c4f0 <__assert_fail@plt+0x49938>
   5c330:	ldr	r0, [fp, #12]
   5c334:	movw	r1, #5
   5c338:	str	r1, [r0]
   5c33c:	movw	r0, #0
   5c340:	str	r0, [fp, #-4]
   5c344:	b	5c4f0 <__assert_fail@plt+0x49938>
   5c348:	ldr	r0, [fp, #-16]
   5c34c:	ldr	r1, [fp, #-8]
   5c350:	ldr	r2, [fp, #-20]	; 0xffffffec
   5c354:	bl	5a204 <__assert_fail@plt+0x4764c>
   5c358:	ldr	r0, [fp, #-16]
   5c35c:	ldr	r0, [r0, #4]
   5c360:	and	r0, r0, #255	; 0xff
   5c364:	cmp	r0, #11
   5c368:	movw	r0, #1
   5c36c:	str	r0, [sp, #16]
   5c370:	beq	5c3c8 <__assert_fail@plt+0x49810>
   5c374:	ldr	r0, [fp, #-16]
   5c378:	ldr	r0, [r0, #4]
   5c37c:	and	r0, r0, #255	; 0xff
   5c380:	cmp	r0, #18
   5c384:	movw	r0, #1
   5c388:	str	r0, [sp, #16]
   5c38c:	beq	5c3c8 <__assert_fail@plt+0x49810>
   5c390:	ldr	r0, [fp, #-16]
   5c394:	ldr	r0, [r0, #4]
   5c398:	and	r0, r0, #255	; 0xff
   5c39c:	cmp	r0, #19
   5c3a0:	movw	r0, #1
   5c3a4:	str	r0, [sp, #16]
   5c3a8:	beq	5c3c8 <__assert_fail@plt+0x49810>
   5c3ac:	ldr	r0, [fp, #-16]
   5c3b0:	ldr	r0, [r0, #4]
   5c3b4:	and	r0, r0, #255	; 0xff
   5c3b8:	cmp	r0, #23
   5c3bc:	movw	r0, #0
   5c3c0:	moveq	r0, #1
   5c3c4:	str	r0, [sp, #16]
   5c3c8:	ldr	r0, [sp, #16]
   5c3cc:	tst	r0, #1
   5c3d0:	beq	5c4e8 <__assert_fail@plt+0x49930>
   5c3d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5c3d8:	ldr	r1, [fp, #-8]
   5c3dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5c3e0:	ldr	r3, [fp, #-16]
   5c3e4:	ldr	ip, [fp, #-20]	; 0xffffffec
   5c3e8:	ldr	lr, [fp, #12]
   5c3ec:	str	ip, [sp]
   5c3f0:	str	lr, [sp, #4]
   5c3f4:	bl	5d62c <__assert_fail@plt+0x4aa74>
   5c3f8:	str	r0, [fp, #-44]	; 0xffffffd4
   5c3fc:	ldr	r0, [fp, #12]
   5c400:	ldr	r0, [r0]
   5c404:	cmp	r0, #0
   5c408:	movw	r0, #0
   5c40c:	str	r0, [sp, #12]
   5c410:	beq	5c42c <__assert_fail@plt+0x49874>
   5c414:	ldr	r0, [fp, #-44]	; 0xffffffd4
   5c418:	movw	r1, #0
   5c41c:	cmp	r0, r1
   5c420:	movw	r0, #0
   5c424:	moveq	r0, #1
   5c428:	str	r0, [sp, #12]
   5c42c:	ldr	r0, [sp, #12]
   5c430:	tst	r0, #1
   5c434:	beq	5c468 <__assert_fail@plt+0x498b0>
   5c438:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5c43c:	movw	r1, #0
   5c440:	cmp	r0, r1
   5c444:	beq	5c45c <__assert_fail@plt+0x498a4>
   5c448:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5c44c:	movw	r1, #47608	; 0xb9f8
   5c450:	movt	r1, #5
   5c454:	movw	r2, #0
   5c458:	bl	5b888 <__assert_fail@plt+0x48cd0>
   5c45c:	movw	r0, #0
   5c460:	str	r0, [fp, #-4]
   5c464:	b	5c4f0 <__assert_fail@plt+0x49938>
   5c468:	ldr	r0, [fp, #-44]	; 0xffffffd4
   5c46c:	str	r0, [fp, #-28]	; 0xffffffe4
   5c470:	ldr	r0, [fp, #-20]	; 0xffffffec
   5c474:	and	r0, r0, #16777216	; 0x1000000
   5c478:	cmp	r0, #0
   5c47c:	beq	5c4e4 <__assert_fail@plt+0x4992c>
   5c480:	ldr	r0, [fp, #-16]
   5c484:	ldr	r0, [r0, #4]
   5c488:	and	r0, r0, #255	; 0xff
   5c48c:	cmp	r0, #11
   5c490:	beq	5c4a8 <__assert_fail@plt+0x498f0>
   5c494:	ldr	r0, [fp, #-16]
   5c498:	ldr	r0, [r0, #4]
   5c49c:	and	r0, r0, #255	; 0xff
   5c4a0:	cmp	r0, #23
   5c4a4:	bne	5c4e4 <__assert_fail@plt+0x4992c>
   5c4a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5c4ac:	movw	r1, #0
   5c4b0:	cmp	r0, r1
   5c4b4:	beq	5c4cc <__assert_fail@plt+0x49914>
   5c4b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5c4bc:	movw	r1, #47608	; 0xb9f8
   5c4c0:	movt	r1, #5
   5c4c4:	movw	r2, #0
   5c4c8:	bl	5b888 <__assert_fail@plt+0x48cd0>
   5c4cc:	ldr	r0, [fp, #12]
   5c4d0:	movw	r1, #13
   5c4d4:	str	r1, [r0]
   5c4d8:	movw	r0, #0
   5c4dc:	str	r0, [fp, #-4]
   5c4e0:	b	5c4f0 <__assert_fail@plt+0x49938>
   5c4e4:	b	5c358 <__assert_fail@plt+0x497a0>
   5c4e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5c4ec:	str	r0, [fp, #-4]
   5c4f0:	ldr	r0, [fp, #-4]
   5c4f4:	mov	sp, fp
   5c4f8:	pop	{fp, pc}
   5c4fc:	push	{fp, lr}
   5c500:	mov	fp, sp
   5c504:	sub	sp, sp, #32
   5c508:	str	r0, [fp, #-8]
   5c50c:	str	r1, [fp, #-12]
   5c510:	str	r2, [sp, #16]
   5c514:	str	r3, [sp, #12]
   5c518:	ldr	r0, [fp, #-8]
   5c51c:	ldr	r0, [r0, #64]	; 0x40
   5c520:	cmp	r0, #31
   5c524:	bne	5c578 <__assert_fail@plt+0x499c0>
   5c528:	movw	r0, #996	; 0x3e4
   5c52c:	bl	527f0 <__assert_fail@plt+0x3fc38>
   5c530:	str	r0, [sp, #4]
   5c534:	ldr	r0, [sp, #4]
   5c538:	movw	r1, #0
   5c53c:	cmp	r0, r1
   5c540:	bne	5c550 <__assert_fail@plt+0x49998>
   5c544:	movw	r0, #0
   5c548:	str	r0, [fp, #-4]
   5c54c:	b	5c654 <__assert_fail@plt+0x49a9c>
   5c550:	ldr	r0, [fp, #-8]
   5c554:	ldr	r0, [r0, #56]	; 0x38
   5c558:	ldr	r1, [sp, #4]
   5c55c:	str	r0, [r1]
   5c560:	ldr	r0, [sp, #4]
   5c564:	ldr	r1, [fp, #-8]
   5c568:	str	r0, [r1, #56]	; 0x38
   5c56c:	ldr	r0, [fp, #-8]
   5c570:	movw	r1, #0
   5c574:	str	r1, [r0, #64]	; 0x40
   5c578:	ldr	r0, [fp, #-8]
   5c57c:	ldr	r1, [r0, #56]	; 0x38
   5c580:	ldr	r2, [r0, #64]	; 0x40
   5c584:	add	r1, r1, #4
   5c588:	add	r3, r2, #1
   5c58c:	str	r3, [r0, #64]	; 0x40
   5c590:	add	r0, r1, r2, lsl #5
   5c594:	str	r0, [sp, #8]
   5c598:	ldr	r0, [sp, #8]
   5c59c:	movw	r1, #0
   5c5a0:	str	r1, [r0]
   5c5a4:	ldr	r0, [fp, #-12]
   5c5a8:	ldr	r2, [sp, #8]
   5c5ac:	str	r0, [r2, #4]
   5c5b0:	ldr	r0, [sp, #16]
   5c5b4:	ldr	r2, [sp, #8]
   5c5b8:	str	r0, [r2, #8]
   5c5bc:	ldr	r0, [sp, #8]
   5c5c0:	ldr	r2, [sp, #12]
   5c5c4:	ldr	r3, [r2]
   5c5c8:	str	r3, [r0, #20]
   5c5cc:	ldr	r2, [r2, #4]
   5c5d0:	str	r2, [r0, #24]
   5c5d4:	ldr	r0, [sp, #8]
   5c5d8:	ldr	r2, [r0, #24]
   5c5dc:	mvn	r3, #262144	; 0x40000
   5c5e0:	and	r2, r2, r3
   5c5e4:	str	r2, [r0, #24]
   5c5e8:	ldr	r0, [sp, #8]
   5c5ec:	ldr	r2, [r0, #24]
   5c5f0:	mvn	r3, #524288	; 0x80000
   5c5f4:	and	r2, r2, r3
   5c5f8:	str	r2, [r0, #24]
   5c5fc:	ldr	r0, [sp, #8]
   5c600:	str	r1, [r0, #12]
   5c604:	ldr	r0, [sp, #8]
   5c608:	str	r1, [r0, #16]
   5c60c:	ldr	r0, [sp, #8]
   5c610:	mvn	r2, #0
   5c614:	str	r2, [r0, #28]
   5c618:	ldr	r0, [fp, #-12]
   5c61c:	cmp	r0, r1
   5c620:	beq	5c630 <__assert_fail@plt+0x49a78>
   5c624:	ldr	r0, [sp, #8]
   5c628:	ldr	r1, [fp, #-12]
   5c62c:	str	r0, [r1]
   5c630:	ldr	r0, [sp, #16]
   5c634:	movw	r1, #0
   5c638:	cmp	r0, r1
   5c63c:	beq	5c64c <__assert_fail@plt+0x49a94>
   5c640:	ldr	r0, [sp, #8]
   5c644:	ldr	r1, [sp, #16]
   5c648:	str	r0, [r1]
   5c64c:	ldr	r0, [sp, #8]
   5c650:	str	r0, [fp, #-4]
   5c654:	ldr	r0, [fp, #-4]
   5c658:	mov	sp, fp
   5c65c:	pop	{fp, pc}
   5c660:	push	{fp, lr}
   5c664:	mov	fp, sp
   5c668:	sub	sp, sp, #56	; 0x38
   5c66c:	ldr	ip, [fp, #12]
   5c670:	ldr	lr, [fp, #8]
   5c674:	str	r0, [fp, #-8]
   5c678:	str	r1, [fp, #-12]
   5c67c:	str	r2, [fp, #-16]
   5c680:	str	r3, [fp, #-20]	; 0xffffffec
   5c684:	ldr	r0, [fp, #-12]
   5c688:	ldr	r0, [r0]
   5c68c:	str	r0, [fp, #-24]	; 0xffffffe8
   5c690:	ldr	r0, [fp, #-12]
   5c694:	ldr	r1, [r0, #24]
   5c698:	add	r2, r1, #1
   5c69c:	str	r2, [r0, #24]
   5c6a0:	str	r1, [sp, #24]
   5c6a4:	ldr	r0, [fp, #-16]
   5c6a8:	ldr	r1, [fp, #-8]
   5c6ac:	ldr	r2, [fp, #-20]	; 0xffffffec
   5c6b0:	orr	r2, r2, #8388608	; 0x800000
   5c6b4:	str	ip, [sp, #20]
   5c6b8:	str	lr, [sp, #16]
   5c6bc:	bl	5a204 <__assert_fail@plt+0x4764c>
   5c6c0:	ldr	r0, [fp, #-16]
   5c6c4:	ldr	r0, [r0, #4]
   5c6c8:	and	r0, r0, #255	; 0xff
   5c6cc:	cmp	r0, #9
   5c6d0:	bne	5c6e0 <__assert_fail@plt+0x49b28>
   5c6d4:	movw	r0, #0
   5c6d8:	str	r0, [sp, #28]
   5c6dc:	b	5c798 <__assert_fail@plt+0x49be0>
   5c6e0:	ldr	r0, [fp, #-8]
   5c6e4:	ldr	r1, [fp, #-12]
   5c6e8:	ldr	r2, [fp, #-16]
   5c6ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   5c6f0:	ldr	ip, [fp, #8]
   5c6f4:	ldr	lr, [fp, #12]
   5c6f8:	str	ip, [sp]
   5c6fc:	str	lr, [sp, #4]
   5c700:	bl	5a244 <__assert_fail@plt+0x4768c>
   5c704:	str	r0, [sp, #28]
   5c708:	ldr	r0, [fp, #12]
   5c70c:	ldr	r0, [r0]
   5c710:	cmp	r0, #0
   5c714:	movw	r0, #0
   5c718:	str	r0, [sp, #12]
   5c71c:	bne	5c73c <__assert_fail@plt+0x49b84>
   5c720:	ldr	r0, [fp, #-16]
   5c724:	ldr	r0, [r0, #4]
   5c728:	and	r0, r0, #255	; 0xff
   5c72c:	cmp	r0, #9
   5c730:	movw	r0, #0
   5c734:	movne	r0, #1
   5c738:	str	r0, [sp, #12]
   5c73c:	ldr	r0, [sp, #12]
   5c740:	tst	r0, #1
   5c744:	beq	5c778 <__assert_fail@plt+0x49bc0>
   5c748:	ldr	r0, [sp, #28]
   5c74c:	movw	r1, #0
   5c750:	cmp	r0, r1
   5c754:	beq	5c76c <__assert_fail@plt+0x49bb4>
   5c758:	ldr	r0, [sp, #28]
   5c75c:	movw	r1, #47608	; 0xb9f8
   5c760:	movt	r1, #5
   5c764:	movw	r2, #0
   5c768:	bl	5b888 <__assert_fail@plt+0x48cd0>
   5c76c:	ldr	r0, [fp, #12]
   5c770:	movw	r1, #8
   5c774:	str	r1, [r0]
   5c778:	ldr	r0, [fp, #12]
   5c77c:	ldr	r0, [r0]
   5c780:	cmp	r0, #0
   5c784:	beq	5c794 <__assert_fail@plt+0x49bdc>
   5c788:	movw	r0, #0
   5c78c:	str	r0, [fp, #-4]
   5c790:	b	5c814 <__assert_fail@plt+0x49c5c>
   5c794:	b	5c798 <__assert_fail@plt+0x49be0>
   5c798:	ldr	r0, [sp, #24]
   5c79c:	cmp	r0, #8
   5c7a0:	bhi	5c7c0 <__assert_fail@plt+0x49c08>
   5c7a4:	ldr	r0, [sp, #24]
   5c7a8:	movw	r1, #1
   5c7ac:	lsl	r0, r1, r0
   5c7b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5c7b4:	ldr	r2, [r1, #84]	; 0x54
   5c7b8:	orr	r0, r2, r0
   5c7bc:	str	r0, [r1, #84]	; 0x54
   5c7c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5c7c4:	ldr	r1, [sp, #28]
   5c7c8:	movw	r2, #0
   5c7cc:	movw	r3, #17
   5c7d0:	bl	5a498 <__assert_fail@plt+0x478e0>
   5c7d4:	str	r0, [sp, #28]
   5c7d8:	ldr	r0, [sp, #28]
   5c7dc:	movw	r1, #0
   5c7e0:	cmp	r0, r1
   5c7e4:	bne	5c800 <__assert_fail@plt+0x49c48>
   5c7e8:	ldr	r0, [fp, #12]
   5c7ec:	movw	r1, #12
   5c7f0:	str	r1, [r0]
   5c7f4:	movw	r0, #0
   5c7f8:	str	r0, [fp, #-4]
   5c7fc:	b	5c814 <__assert_fail@plt+0x49c5c>
   5c800:	ldr	r0, [sp, #24]
   5c804:	ldr	r1, [sp, #28]
   5c808:	str	r0, [r1, #20]
   5c80c:	ldr	r0, [sp, #28]
   5c810:	str	r0, [fp, #-4]
   5c814:	ldr	r0, [fp, #-4]
   5c818:	mov	sp, fp
   5c81c:	pop	{fp, pc}
   5c820:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   5c824:	add	fp, sp, #24
   5c828:	sub	sp, sp, #304	; 0x130
   5c82c:	ldr	ip, [fp, #8]
   5c830:	str	r0, [fp, #-36]	; 0xffffffdc
   5c834:	str	r1, [fp, #-40]	; 0xffffffd8
   5c838:	str	r2, [fp, #-44]	; 0xffffffd4
   5c83c:	str	r3, [fp, #-48]	; 0xffffffd0
   5c840:	movw	r0, #0
   5c844:	str	r0, [fp, #-52]	; 0xffffffcc
   5c848:	str	r0, [fp, #-56]	; 0xffffffc8
   5c84c:	str	r0, [fp, #-60]	; 0xffffffc4
   5c850:	str	r0, [fp, #-64]	; 0xffffffc0
   5c854:	str	r0, [fp, #-68]	; 0xffffffbc
   5c858:	str	r0, [fp, #-72]	; 0xffffffb8
   5c85c:	str	r0, [fp, #-92]	; 0xffffffa4
   5c860:	str	r0, [fp, #-96]	; 0xffffffa0
   5c864:	str	r0, [fp, #-100]	; 0xffffff9c
   5c868:	str	r0, [fp, #-104]	; 0xffffff98
   5c86c:	str	r0, [fp, #-108]	; 0xffffff94
   5c870:	movw	r0, #0
   5c874:	strb	r0, [fp, #-109]	; 0xffffff93
   5c878:	movw	r0, #1
   5c87c:	strb	r0, [fp, #-121]	; 0xffffff87
   5c880:	movw	r0, #32
   5c884:	movw	r1, #1
   5c888:	str	ip, [sp, #88]	; 0x58
   5c88c:	bl	4e0e0 <__assert_fail@plt+0x3b528>
   5c890:	str	r0, [fp, #-84]	; 0xffffffac
   5c894:	movw	r0, #40	; 0x28
   5c898:	movw	r1, #1
   5c89c:	bl	4e0e0 <__assert_fail@plt+0x3b528>
   5c8a0:	str	r0, [fp, #-88]	; 0xffffffa8
   5c8a4:	ldr	r0, [fp, #-84]	; 0xffffffac
   5c8a8:	movw	r1, #0
   5c8ac:	cmp	r0, r1
   5c8b0:	movw	r0, #1
   5c8b4:	str	r0, [sp, #84]	; 0x54
   5c8b8:	beq	5c8d4 <__assert_fail@plt+0x49d1c>
   5c8bc:	ldr	r0, [fp, #-88]	; 0xffffffa8
   5c8c0:	movw	r1, #0
   5c8c4:	cmp	r0, r1
   5c8c8:	movw	r0, #0
   5c8cc:	moveq	r0, #1
   5c8d0:	str	r0, [sp, #84]	; 0x54
   5c8d4:	ldr	r0, [sp, #84]	; 0x54
   5c8d8:	tst	r0, #1
   5c8dc:	beq	5c908 <__assert_fail@plt+0x49d50>
   5c8e0:	ldr	r0, [fp, #-84]	; 0xffffffac
   5c8e4:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   5c8e8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   5c8ec:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   5c8f0:	ldr	r0, [fp, #8]
   5c8f4:	movw	r1, #12
   5c8f8:	str	r1, [r0]
   5c8fc:	movw	r0, #0
   5c900:	str	r0, [fp, #-32]	; 0xffffffe0
   5c904:	b	5d13c <__assert_fail@plt+0x4a584>
   5c908:	ldr	r0, [fp, #-44]	; 0xffffffd4
   5c90c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   5c910:	ldr	r2, [fp, #-48]	; 0xffffffd0
   5c914:	bl	5dc78 <__assert_fail@plt+0x4b0c0>
   5c918:	str	r0, [fp, #-120]	; 0xffffff88
   5c91c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   5c920:	ldr	r0, [r0, #4]
   5c924:	and	r0, r0, #255	; 0xff
   5c928:	cmp	r0, #2
   5c92c:	bne	5c940 <__assert_fail@plt+0x49d88>
   5c930:	ldr	r0, [fp, #8]
   5c934:	movw	r1, #2
   5c938:	str	r1, [r0]
   5c93c:	b	5d124 <__assert_fail@plt+0x4a56c>
   5c940:	ldr	r0, [fp, #-44]	; 0xffffffd4
   5c944:	ldr	r0, [r0, #4]
   5c948:	and	r0, r0, #255	; 0xff
   5c94c:	cmp	r0, #25
   5c950:	bne	5c9dc <__assert_fail@plt+0x49e24>
   5c954:	ldr	r0, [fp, #-88]	; 0xffffffa8
   5c958:	ldrb	r1, [r0, #16]
   5c95c:	bic	r1, r1, #1
   5c960:	movw	r2, #1
   5c964:	orr	r1, r1, r2
   5c968:	strb	r1, [r0, #16]
   5c96c:	strb	r2, [fp, #-109]	; 0xffffff93
   5c970:	ldr	r0, [fp, #-48]	; 0xffffffd0
   5c974:	and	r0, r0, #256	; 0x100
   5c978:	cmp	r0, #0
   5c97c:	beq	5c98c <__assert_fail@plt+0x49dd4>
   5c980:	ldr	r0, [fp, #-84]	; 0xffffffac
   5c984:	movw	r1, #10
   5c988:	bl	5dfe8 <__assert_fail@plt+0x4b430>
   5c98c:	ldr	r0, [fp, #-120]	; 0xffffff88
   5c990:	ldr	r1, [fp, #-36]	; 0xffffffdc
   5c994:	ldr	r2, [r1, #40]	; 0x28
   5c998:	add	r0, r2, r0
   5c99c:	str	r0, [r1, #40]	; 0x28
   5c9a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   5c9a4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   5c9a8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   5c9ac:	bl	5dc78 <__assert_fail@plt+0x4b0c0>
   5c9b0:	str	r0, [fp, #-120]	; 0xffffff88
   5c9b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   5c9b8:	ldr	r0, [r0, #4]
   5c9bc:	and	r0, r0, #255	; 0xff
   5c9c0:	cmp	r0, #2
   5c9c4:	bne	5c9d8 <__assert_fail@plt+0x49e20>
   5c9c8:	ldr	r0, [fp, #8]
   5c9cc:	movw	r1, #2
   5c9d0:	str	r1, [r0]
   5c9d4:	b	5d124 <__assert_fail@plt+0x4a56c>
   5c9d8:	b	5c9dc <__assert_fail@plt+0x49e24>
   5c9dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   5c9e0:	ldr	r0, [r0, #4]
   5c9e4:	and	r0, r0, #255	; 0xff
   5c9e8:	cmp	r0, #21
   5c9ec:	bne	5ca08 <__assert_fail@plt+0x49e50>
   5c9f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   5c9f4:	ldr	r1, [r0, #4]
   5c9f8:	mvn	r2, #255	; 0xff
   5c9fc:	and	r1, r1, r2
   5ca00:	orr	r1, r1, #1
   5ca04:	str	r1, [r0, #4]
   5ca08:	b	5ca0c <__assert_fail@plt+0x49e54>
   5ca0c:	add	r0, sp, #156	; 0x9c
   5ca10:	movw	r1, #0
   5ca14:	str	r1, [sp, #116]	; 0x74
   5ca18:	movw	r1, #0
   5ca1c:	strb	r1, [sp, #115]	; 0x73
   5ca20:	str	r0, [fp, #-128]	; 0xffffff80
   5ca24:	movw	r0, #3
   5ca28:	str	r0, [fp, #-132]	; 0xffffff7c
   5ca2c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   5ca30:	ldr	r2, [fp, #-44]	; 0xffffffd4
   5ca34:	ldr	r3, [fp, #-120]	; 0xffffff88
   5ca38:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5ca3c:	ldr	ip, [fp, #-48]	; 0xffffffd0
   5ca40:	ldrb	lr, [fp, #-121]	; 0xffffff87
   5ca44:	sub	r4, fp, #132	; 0x84
   5ca48:	str	r0, [sp, #80]	; 0x50
   5ca4c:	mov	r0, r4
   5ca50:	ldr	r4, [sp, #80]	; 0x50
   5ca54:	str	r4, [sp]
   5ca58:	str	ip, [sp, #4]
   5ca5c:	and	ip, lr, #1
   5ca60:	str	ip, [sp, #8]
   5ca64:	bl	5e030 <__assert_fail@plt+0x4b478>
   5ca68:	str	r0, [sp, #120]	; 0x78
   5ca6c:	ldr	r0, [sp, #120]	; 0x78
   5ca70:	cmp	r0, #0
   5ca74:	beq	5ca88 <__assert_fail@plt+0x49ed0>
   5ca78:	ldr	r0, [sp, #120]	; 0x78
   5ca7c:	ldr	r1, [fp, #8]
   5ca80:	str	r0, [r1]
   5ca84:	b	5d124 <__assert_fail@plt+0x4a56c>
   5ca88:	movw	r0, #0
   5ca8c:	strb	r0, [fp, #-121]	; 0xffffff87
   5ca90:	ldr	r0, [fp, #-44]	; 0xffffffd4
   5ca94:	ldr	r1, [fp, #-36]	; 0xffffffdc
   5ca98:	ldr	r2, [fp, #-48]	; 0xffffffd0
   5ca9c:	bl	5dc78 <__assert_fail@plt+0x4b0c0>
   5caa0:	str	r0, [fp, #-120]	; 0xffffff88
   5caa4:	ldr	r0, [fp, #-132]	; 0xffffff7c
   5caa8:	cmp	r0, #4
   5caac:	beq	5cb94 <__assert_fail@plt+0x49fdc>
   5cab0:	ldr	r0, [fp, #-132]	; 0xffffff7c
   5cab4:	cmp	r0, #2
   5cab8:	beq	5cb94 <__assert_fail@plt+0x49fdc>
   5cabc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   5cac0:	ldr	r0, [r0, #4]
   5cac4:	and	r0, r0, #255	; 0xff
   5cac8:	cmp	r0, #2
   5cacc:	bne	5cae0 <__assert_fail@plt+0x49f28>
   5cad0:	ldr	r0, [fp, #8]
   5cad4:	movw	r1, #7
   5cad8:	str	r1, [r0]
   5cadc:	b	5d124 <__assert_fail@plt+0x4a56c>
   5cae0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   5cae4:	ldr	r0, [r0, #4]
   5cae8:	and	r0, r0, #255	; 0xff
   5caec:	cmp	r0, #22
   5caf0:	bne	5cb90 <__assert_fail@plt+0x49fd8>
   5caf4:	ldr	r0, [fp, #-120]	; 0xffffff88
   5caf8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   5cafc:	ldr	r2, [r1, #40]	; 0x28
   5cb00:	add	r0, r2, r0
   5cb04:	str	r0, [r1, #40]	; 0x28
   5cb08:	ldr	r1, [fp, #-36]	; 0xffffffdc
   5cb0c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   5cb10:	add	r0, sp, #104	; 0x68
   5cb14:	bl	5dc78 <__assert_fail@plt+0x4b0c0>
   5cb18:	str	r0, [sp, #116]	; 0x74
   5cb1c:	ldr	r0, [sp, #108]	; 0x6c
   5cb20:	and	r0, r0, #255	; 0xff
   5cb24:	cmp	r0, #2
   5cb28:	bne	5cb3c <__assert_fail@plt+0x49f84>
   5cb2c:	ldr	r0, [fp, #8]
   5cb30:	movw	r1, #7
   5cb34:	str	r1, [r0]
   5cb38:	b	5d124 <__assert_fail@plt+0x4a56c>
   5cb3c:	ldr	r0, [sp, #108]	; 0x6c
   5cb40:	and	r0, r0, #255	; 0xff
   5cb44:	cmp	r0, #21
   5cb48:	bne	5cb84 <__assert_fail@plt+0x49fcc>
   5cb4c:	ldr	r0, [fp, #-120]	; 0xffffff88
   5cb50:	movw	r1, #0
   5cb54:	sub	r0, r1, r0
   5cb58:	ldr	r1, [fp, #-36]	; 0xffffffdc
   5cb5c:	ldr	r2, [r1, #40]	; 0x28
   5cb60:	add	r0, r2, r0
   5cb64:	str	r0, [r1, #40]	; 0x28
   5cb68:	ldr	r0, [fp, #-44]	; 0xffffffd4
   5cb6c:	ldr	r1, [r0, #4]
   5cb70:	mvn	r2, #255	; 0xff
   5cb74:	and	r1, r1, r2
   5cb78:	orr	r1, r1, #1
   5cb7c:	str	r1, [r0, #4]
   5cb80:	b	5cb8c <__assert_fail@plt+0x49fd4>
   5cb84:	movw	r0, #1
   5cb88:	strb	r0, [sp, #115]	; 0x73
   5cb8c:	b	5cb90 <__assert_fail@plt+0x49fd8>
   5cb90:	b	5cb94 <__assert_fail@plt+0x49fdc>
   5cb94:	ldrb	r0, [sp, #115]	; 0x73
   5cb98:	and	r0, r0, #1
   5cb9c:	cmp	r0, #1
   5cba0:	bne	5ccc4 <__assert_fail@plt+0x4a10c>
   5cba4:	add	r0, sp, #124	; 0x7c
   5cba8:	str	r0, [fp, #-136]	; 0xffffff78
   5cbac:	movw	r0, #3
   5cbb0:	str	r0, [fp, #-140]	; 0xffffff74
   5cbb4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   5cbb8:	ldr	r3, [sp, #116]	; 0x74
   5cbbc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5cbc0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   5cbc4:	sub	ip, fp, #140	; 0x8c
   5cbc8:	str	r0, [sp, #76]	; 0x4c
   5cbcc:	mov	r0, ip
   5cbd0:	add	ip, sp, #104	; 0x68
   5cbd4:	str	r2, [sp, #72]	; 0x48
   5cbd8:	mov	r2, ip
   5cbdc:	ldr	ip, [sp, #76]	; 0x4c
   5cbe0:	str	ip, [sp]
   5cbe4:	ldr	lr, [sp, #72]	; 0x48
   5cbe8:	str	lr, [sp, #4]
   5cbec:	movw	r4, #1
   5cbf0:	and	r4, r4, #1
   5cbf4:	str	r4, [sp, #8]
   5cbf8:	bl	5e030 <__assert_fail@plt+0x4b478>
   5cbfc:	str	r0, [sp, #120]	; 0x78
   5cc00:	ldr	r0, [sp, #120]	; 0x78
   5cc04:	cmp	r0, #0
   5cc08:	beq	5cc1c <__assert_fail@plt+0x4a064>
   5cc0c:	ldr	r0, [sp, #120]	; 0x78
   5cc10:	ldr	r1, [fp, #8]
   5cc14:	str	r0, [r1]
   5cc18:	b	5d124 <__assert_fail@plt+0x4a56c>
   5cc1c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   5cc20:	ldr	r1, [fp, #-36]	; 0xffffffdc
   5cc24:	ldr	r2, [fp, #-48]	; 0xffffffd0
   5cc28:	bl	5dc78 <__assert_fail@plt+0x4b0c0>
   5cc2c:	str	r0, [fp, #-120]	; 0xffffff88
   5cc30:	ldr	r0, [fp, #-84]	; 0xffffffac
   5cc34:	ldr	r1, [fp, #-88]	; 0xffffffa8
   5cc38:	ldr	r2, [fp, #-40]	; 0xffffffd8
   5cc3c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5cc40:	ldr	ip, [fp, #-60]	; 0xffffffc4
   5cc44:	ldr	lr, [fp, #-52]	; 0xffffffcc
   5cc48:	ldr	r4, [fp, #-56]	; 0xffffffc8
   5cc4c:	ldr	r5, [fp, #-64]	; 0xffffffc0
   5cc50:	ldr	r6, [fp, #-68]	; 0xffffffbc
   5cc54:	ldr	r7, [fp, #-72]	; 0xffffffb8
   5cc58:	sub	r8, fp, #96	; 0x60
   5cc5c:	str	r2, [sp, #68]	; 0x44
   5cc60:	mov	r2, r8
   5cc64:	sub	r8, fp, #132	; 0x84
   5cc68:	str	r3, [sp, #64]	; 0x40
   5cc6c:	mov	r3, r8
   5cc70:	sub	r8, fp, #140	; 0x8c
   5cc74:	str	r8, [sp]
   5cc78:	ldr	r8, [sp, #68]	; 0x44
   5cc7c:	str	r8, [sp, #4]
   5cc80:	ldr	r9, [sp, #64]	; 0x40
   5cc84:	str	r9, [sp, #8]
   5cc88:	str	ip, [sp, #12]
   5cc8c:	str	lr, [sp, #16]
   5cc90:	str	r4, [sp, #20]
   5cc94:	str	r5, [sp, #24]
   5cc98:	str	r6, [sp, #28]
   5cc9c:	str	r7, [sp, #32]
   5cca0:	bl	5e1b0 <__assert_fail@plt+0x4b5f8>
   5cca4:	ldr	r1, [fp, #8]
   5cca8:	str	r0, [r1]
   5ccac:	ldr	r0, [fp, #8]
   5ccb0:	ldr	r0, [r0]
   5ccb4:	cmp	r0, #0
   5ccb8:	beq	5ccc0 <__assert_fail@plt+0x4a108>
   5ccbc:	b	5d124 <__assert_fail@plt+0x4a56c>
   5ccc0:	b	5ce70 <__assert_fail@plt+0x4a2b8>
   5ccc4:	ldr	r0, [fp, #-132]	; 0xffffff7c
   5ccc8:	str	r0, [sp, #60]	; 0x3c
   5cccc:	add	r0, pc, #8
   5ccd0:	ldr	r1, [sp, #60]	; 0x3c
   5ccd4:	ldr	r0, [r0, r1, lsl #2]
   5ccd8:	mov	pc, r0
   5ccdc:	strdeq	ip, [r5], -r0
   5cce0:	andeq	ip, r5, r0, lsl #26
   5cce4:	andeq	ip, r5, r4, lsl #27
   5cce8:			; <UNDEFINED> instruction: 0x0005cdb8
   5ccec:	andeq	ip, r5, r8, lsl lr
   5ccf0:	ldr	r0, [fp, #-84]	; 0xffffffac
   5ccf4:	ldrb	r1, [fp, #-128]	; 0xffffff80
   5ccf8:	bl	5dfe8 <__assert_fail@plt+0x4b430>
   5ccfc:	b	5ce6c <__assert_fail@plt+0x4a2b4>
   5cd00:	ldr	r0, [fp, #-100]	; 0xffffff9c
   5cd04:	ldr	r1, [fp, #-88]	; 0xffffffa8
   5cd08:	ldr	r1, [r1, #20]
   5cd0c:	cmp	r0, r1
   5cd10:	bne	5cd60 <__assert_fail@plt+0x4a1a8>
   5cd14:	ldr	r0, [fp, #-88]	; 0xffffffa8
   5cd18:	ldr	r0, [r0, #20]
   5cd1c:	mov	r1, #1
   5cd20:	orr	r0, r1, r0, lsl #1
   5cd24:	str	r0, [fp, #-100]	; 0xffffff9c
   5cd28:	ldr	r0, [fp, #-88]	; 0xffffffa8
   5cd2c:	ldr	r0, [r0]
   5cd30:	ldr	r1, [fp, #-100]	; 0xffffff9c
   5cd34:	lsl	r1, r1, #2
   5cd38:	bl	538c8 <__assert_fail@plt+0x40d10>
   5cd3c:	str	r0, [sp, #100]	; 0x64
   5cd40:	ldr	r0, [sp, #100]	; 0x64
   5cd44:	movw	r1, #0
   5cd48:	cmp	r0, r1
   5cd4c:	bne	5cd54 <__assert_fail@plt+0x4a19c>
   5cd50:	b	5d118 <__assert_fail@plt+0x4a560>
   5cd54:	ldr	r0, [sp, #100]	; 0x64
   5cd58:	ldr	r1, [fp, #-88]	; 0xffffffa8
   5cd5c:	str	r0, [r1]
   5cd60:	ldr	r0, [fp, #-128]	; 0xffffff80
   5cd64:	ldr	r1, [fp, #-88]	; 0xffffffa8
   5cd68:	ldr	r2, [r1]
   5cd6c:	ldr	r3, [r1, #20]
   5cd70:	add	ip, r3, #1
   5cd74:	str	ip, [r1, #20]
   5cd78:	add	r1, r2, r3, lsl #2
   5cd7c:	str	r0, [r1]
   5cd80:	b	5ce6c <__assert_fail@plt+0x4a2b4>
   5cd84:	ldr	r0, [fp, #-84]	; 0xffffffac
   5cd88:	ldr	r1, [fp, #-88]	; 0xffffffa8
   5cd8c:	ldr	r3, [fp, #-128]	; 0xffffff80
   5cd90:	sub	r2, fp, #104	; 0x68
   5cd94:	bl	5e634 <__assert_fail@plt+0x4ba7c>
   5cd98:	ldr	r1, [fp, #8]
   5cd9c:	str	r0, [r1]
   5cda0:	ldr	r0, [fp, #8]
   5cda4:	ldr	r0, [r0]
   5cda8:	cmp	r0, #0
   5cdac:	beq	5cdb4 <__assert_fail@plt+0x4a1fc>
   5cdb0:	b	5d124 <__assert_fail@plt+0x4a56c>
   5cdb4:	b	5ce6c <__assert_fail@plt+0x4a2b4>
   5cdb8:	ldr	r0, [fp, #-84]	; 0xffffffac
   5cdbc:	ldr	r1, [fp, #-88]	; 0xffffffa8
   5cdc0:	ldr	r3, [fp, #-128]	; 0xffffff80
   5cdc4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   5cdc8:	ldr	ip, [fp, #-64]	; 0xffffffc0
   5cdcc:	ldr	lr, [fp, #-68]	; 0xffffffbc
   5cdd0:	ldr	r4, [fp, #-72]	; 0xffffffb8
   5cdd4:	sub	r5, fp, #92	; 0x5c
   5cdd8:	str	r2, [sp, #56]	; 0x38
   5cddc:	mov	r2, r5
   5cde0:	ldr	r5, [sp, #56]	; 0x38
   5cde4:	str	r5, [sp]
   5cde8:	str	ip, [sp, #4]
   5cdec:	str	lr, [sp, #8]
   5cdf0:	str	r4, [sp, #12]
   5cdf4:	bl	5e690 <__assert_fail@plt+0x4bad8>
   5cdf8:	ldr	r1, [fp, #8]
   5cdfc:	str	r0, [r1]
   5ce00:	ldr	r0, [fp, #8]
   5ce04:	ldr	r0, [r0]
   5ce08:	cmp	r0, #0
   5ce0c:	beq	5ce14 <__assert_fail@plt+0x4a25c>
   5ce10:	b	5d124 <__assert_fail@plt+0x4a56c>
   5ce14:	b	5ce6c <__assert_fail@plt+0x4a2b4>
   5ce18:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5ce1c:	ldr	r0, [r0, #64]	; 0x40
   5ce20:	ldr	r1, [fp, #-84]	; 0xffffffac
   5ce24:	ldr	r2, [fp, #-88]	; 0xffffffa8
   5ce28:	ldr	r3, [fp, #-128]	; 0xffffff80
   5ce2c:	ldr	ip, [fp, #-48]	; 0xffffffd0
   5ce30:	sub	lr, fp, #108	; 0x6c
   5ce34:	str	r3, [sp, #52]	; 0x34
   5ce38:	mov	r3, lr
   5ce3c:	ldr	lr, [sp, #52]	; 0x34
   5ce40:	str	lr, [sp]
   5ce44:	str	ip, [sp, #4]
   5ce48:	bl	5e714 <__assert_fail@plt+0x4bb5c>
   5ce4c:	ldr	r1, [fp, #8]
   5ce50:	str	r0, [r1]
   5ce54:	ldr	r0, [fp, #8]
   5ce58:	ldr	r0, [r0]
   5ce5c:	cmp	r0, #0
   5ce60:	beq	5ce68 <__assert_fail@plt+0x4a2b0>
   5ce64:	b	5d124 <__assert_fail@plt+0x4a56c>
   5ce68:	b	5ce6c <__assert_fail@plt+0x4a2b4>
   5ce6c:	b	5ce70 <__assert_fail@plt+0x4a2b8>
   5ce70:	ldr	r0, [fp, #-44]	; 0xffffffd4
   5ce74:	ldr	r0, [r0, #4]
   5ce78:	and	r0, r0, #255	; 0xff
   5ce7c:	cmp	r0, #2
   5ce80:	bne	5ce94 <__assert_fail@plt+0x4a2dc>
   5ce84:	ldr	r0, [fp, #8]
   5ce88:	movw	r1, #7
   5ce8c:	str	r1, [r0]
   5ce90:	b	5d124 <__assert_fail@plt+0x4a56c>
   5ce94:	ldr	r0, [fp, #-44]	; 0xffffffd4
   5ce98:	ldr	r0, [r0, #4]
   5ce9c:	and	r0, r0, #255	; 0xff
   5cea0:	cmp	r0, #21
   5cea4:	bne	5ceac <__assert_fail@plt+0x4a2f4>
   5cea8:	b	5ceb0 <__assert_fail@plt+0x4a2f8>
   5ceac:	b	5ca0c <__assert_fail@plt+0x49e54>
   5ceb0:	ldr	r0, [fp, #-120]	; 0xffffff88
   5ceb4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   5ceb8:	ldr	r2, [r1, #40]	; 0x28
   5cebc:	add	r0, r2, r0
   5cec0:	str	r0, [r1, #40]	; 0x28
   5cec4:	ldrb	r0, [fp, #-109]	; 0xffffff93
   5cec8:	tst	r0, #1
   5cecc:	beq	5ced8 <__assert_fail@plt+0x4a320>
   5ced0:	ldr	r0, [fp, #-84]	; 0xffffffac
   5ced4:	bl	5f3b4 <__assert_fail@plt+0x4c7fc>
   5ced8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5cedc:	ldr	r0, [r0, #92]	; 0x5c
   5cee0:	cmp	r0, #1
   5cee4:	ble	5cef8 <__assert_fail@plt+0x4a340>
   5cee8:	ldr	r0, [fp, #-84]	; 0xffffffac
   5ceec:	ldr	r1, [fp, #-40]	; 0xffffffd8
   5cef0:	ldr	r1, [r1, #60]	; 0x3c
   5cef4:	bl	5f3fc <__assert_fail@plt+0x4c844>
   5cef8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   5cefc:	ldr	r0, [r0, #20]
   5cf00:	cmp	r0, #0
   5cf04:	bne	5cf70 <__assert_fail@plt+0x4a3b8>
   5cf08:	ldr	r0, [fp, #-88]	; 0xffffffa8
   5cf0c:	ldr	r0, [r0, #24]
   5cf10:	cmp	r0, #0
   5cf14:	bne	5cf70 <__assert_fail@plt+0x4a3b8>
   5cf18:	ldr	r0, [fp, #-88]	; 0xffffffa8
   5cf1c:	ldr	r0, [r0, #28]
   5cf20:	cmp	r0, #0
   5cf24:	bne	5cf70 <__assert_fail@plt+0x4a3b8>
   5cf28:	ldr	r0, [fp, #-88]	; 0xffffffa8
   5cf2c:	ldr	r0, [r0, #32]
   5cf30:	cmp	r0, #0
   5cf34:	bne	5cf70 <__assert_fail@plt+0x4a3b8>
   5cf38:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5cf3c:	ldr	r0, [r0, #92]	; 0x5c
   5cf40:	cmp	r0, #1
   5cf44:	ble	5d0b4 <__assert_fail@plt+0x4a4fc>
   5cf48:	ldr	r0, [fp, #-88]	; 0xffffffa8
   5cf4c:	ldr	r0, [r0, #36]	; 0x24
   5cf50:	cmp	r0, #0
   5cf54:	bne	5cf70 <__assert_fail@plt+0x4a3b8>
   5cf58:	ldr	r0, [fp, #-88]	; 0xffffffa8
   5cf5c:	ldrb	r0, [r0, #16]
   5cf60:	and	r0, r0, #1
   5cf64:	and	r0, r0, #255	; 0xff
   5cf68:	cmp	r0, #0
   5cf6c:	beq	5d0b4 <__assert_fail@plt+0x4a4fc>
   5cf70:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5cf74:	ldrb	r1, [r0, #88]	; 0x58
   5cf78:	bic	r1, r1, #2
   5cf7c:	movw	r2, #2
   5cf80:	orr	r1, r1, r2
   5cf84:	strb	r1, [r0, #88]	; 0x58
   5cf88:	ldr	r0, [fp, #-76]	; 0xffffffb4
   5cf8c:	mvn	r1, #255	; 0xff
   5cf90:	and	r0, r0, r1
   5cf94:	orr	r0, r0, #6
   5cf98:	str	r0, [fp, #-76]	; 0xffffffb4
   5cf9c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   5cfa0:	str	r0, [fp, #-80]	; 0xffffffb0
   5cfa4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5cfa8:	movw	r1, #0
   5cfac:	str	r1, [sp, #48]	; 0x30
   5cfb0:	ldr	r2, [sp, #48]	; 0x30
   5cfb4:	sub	r3, fp, #80	; 0x50
   5cfb8:	bl	5c4fc <__assert_fail@plt+0x49944>
   5cfbc:	str	r0, [sp, #96]	; 0x60
   5cfc0:	ldr	r0, [sp, #96]	; 0x60
   5cfc4:	movw	r1, #0
   5cfc8:	cmp	r0, r1
   5cfcc:	bne	5cfd4 <__assert_fail@plt+0x4a41c>
   5cfd0:	b	5d118 <__assert_fail@plt+0x4a560>
   5cfd4:	movw	r0, #0
   5cfd8:	str	r0, [sp, #92]	; 0x5c
   5cfdc:	ldr	r0, [sp, #92]	; 0x5c
   5cfe0:	cmp	r0, #8
   5cfe4:	bge	5d018 <__assert_fail@plt+0x4a460>
   5cfe8:	ldr	r0, [fp, #-84]	; 0xffffffac
   5cfec:	ldr	r1, [sp, #92]	; 0x5c
   5cff0:	add	r0, r0, r1, lsl #2
   5cff4:	ldr	r0, [r0]
   5cff8:	cmp	r0, #0
   5cffc:	beq	5d004 <__assert_fail@plt+0x4a44c>
   5d000:	b	5d018 <__assert_fail@plt+0x4a460>
   5d004:	b	5d008 <__assert_fail@plt+0x4a450>
   5d008:	ldr	r0, [sp, #92]	; 0x5c
   5d00c:	add	r0, r0, #1
   5d010:	str	r0, [sp, #92]	; 0x5c
   5d014:	b	5cfdc <__assert_fail@plt+0x4a424>
   5d018:	ldr	r0, [sp, #92]	; 0x5c
   5d01c:	cmp	r0, #8
   5d020:	bge	5d0a0 <__assert_fail@plt+0x4a4e8>
   5d024:	ldr	r0, [fp, #-76]	; 0xffffffb4
   5d028:	mvn	r1, #255	; 0xff
   5d02c:	and	r0, r0, r1
   5d030:	orr	r0, r0, #3
   5d034:	str	r0, [fp, #-76]	; 0xffffffb4
   5d038:	ldr	r0, [fp, #-84]	; 0xffffffac
   5d03c:	str	r0, [fp, #-80]	; 0xffffffb0
   5d040:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5d044:	movw	r1, #0
   5d048:	str	r1, [sp, #44]	; 0x2c
   5d04c:	ldr	r2, [sp, #44]	; 0x2c
   5d050:	sub	r3, fp, #80	; 0x50
   5d054:	bl	5c4fc <__assert_fail@plt+0x49944>
   5d058:	str	r0, [fp, #-116]	; 0xffffff8c
   5d05c:	ldr	r0, [fp, #-116]	; 0xffffff8c
   5d060:	movw	r1, #0
   5d064:	cmp	r0, r1
   5d068:	bne	5d070 <__assert_fail@plt+0x4a4b8>
   5d06c:	b	5d118 <__assert_fail@plt+0x4a560>
   5d070:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5d074:	ldr	r1, [fp, #-116]	; 0xffffff8c
   5d078:	ldr	r2, [sp, #96]	; 0x60
   5d07c:	movw	r3, #10
   5d080:	bl	5a498 <__assert_fail@plt+0x478e0>
   5d084:	str	r0, [fp, #-116]	; 0xffffff8c
   5d088:	ldr	r0, [fp, #-116]	; 0xffffff8c
   5d08c:	movw	r1, #0
   5d090:	cmp	r0, r1
   5d094:	bne	5d09c <__assert_fail@plt+0x4a4e4>
   5d098:	b	5d118 <__assert_fail@plt+0x4a560>
   5d09c:	b	5d0b0 <__assert_fail@plt+0x4a4f8>
   5d0a0:	ldr	r0, [fp, #-84]	; 0xffffffac
   5d0a4:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   5d0a8:	ldr	r0, [sp, #96]	; 0x60
   5d0ac:	str	r0, [fp, #-116]	; 0xffffff8c
   5d0b0:	b	5d10c <__assert_fail@plt+0x4a554>
   5d0b4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   5d0b8:	bl	57ad0 <__assert_fail@plt+0x44f18>
   5d0bc:	ldr	r0, [fp, #-76]	; 0xffffffb4
   5d0c0:	mvn	r1, #255	; 0xff
   5d0c4:	and	r0, r0, r1
   5d0c8:	orr	r0, r0, #3
   5d0cc:	str	r0, [fp, #-76]	; 0xffffffb4
   5d0d0:	ldr	r0, [fp, #-84]	; 0xffffffac
   5d0d4:	str	r0, [fp, #-80]	; 0xffffffb0
   5d0d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5d0dc:	movw	r1, #0
   5d0e0:	str	r1, [sp, #40]	; 0x28
   5d0e4:	ldr	r2, [sp, #40]	; 0x28
   5d0e8:	sub	r3, fp, #80	; 0x50
   5d0ec:	bl	5c4fc <__assert_fail@plt+0x49944>
   5d0f0:	str	r0, [fp, #-116]	; 0xffffff8c
   5d0f4:	ldr	r0, [fp, #-116]	; 0xffffff8c
   5d0f8:	movw	r1, #0
   5d0fc:	cmp	r0, r1
   5d100:	bne	5d108 <__assert_fail@plt+0x4a550>
   5d104:	b	5d118 <__assert_fail@plt+0x4a560>
   5d108:	b	5d10c <__assert_fail@plt+0x4a554>
   5d10c:	ldr	r0, [fp, #-116]	; 0xffffff8c
   5d110:	str	r0, [fp, #-32]	; 0xffffffe0
   5d114:	b	5d13c <__assert_fail@plt+0x4a584>
   5d118:	ldr	r0, [fp, #8]
   5d11c:	movw	r1, #12
   5d120:	str	r1, [r0]
   5d124:	ldr	r0, [fp, #-84]	; 0xffffffac
   5d128:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   5d12c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   5d130:	bl	57ad0 <__assert_fail@plt+0x44f18>
   5d134:	movw	r0, #0
   5d138:	str	r0, [fp, #-32]	; 0xffffffe0
   5d13c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5d140:	sub	sp, fp, #24
   5d144:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   5d148:	push	{fp, lr}
   5d14c:	mov	fp, sp
   5d150:	sub	sp, sp, #32
   5d154:	str	r0, [fp, #-4]
   5d158:	mov	r0, #0
   5d15c:	str	r0, [fp, #-8]
   5d160:	str	r0, [sp, #16]
   5d164:	ldr	r0, [fp, #-4]
   5d168:	ldrb	r1, [r0, #88]	; 0x58
   5d16c:	orr	r1, r1, #16
   5d170:	strb	r1, [r0, #88]	; 0x58
   5d174:	ldr	r0, [fp, #-4]
   5d178:	ldrb	r0, [r0, #88]	; 0x58
   5d17c:	ubfx	r0, r0, #3, #1
   5d180:	and	r0, r0, #255	; 0xff
   5d184:	cmp	r0, #0
   5d188:	bne	5d240 <__assert_fail@plt+0x4a688>
   5d18c:	mov	r0, #0
   5d190:	str	r0, [sp, #12]
   5d194:	movw	r0, #0
   5d198:	movt	r0, #1023	; 0x3ff
   5d19c:	str	r0, [sp, #8]
   5d1a0:	mvn	r0, #2013265921	; 0x78000001
   5d1a4:	str	r0, [sp, #4]
   5d1a8:	mvn	r0, #-134217727	; 0xf8000001
   5d1ac:	str	r0, [sp]
   5d1b0:	ldr	r0, [sp, #12]
   5d1b4:	ldr	r1, [fp, #-4]
   5d1b8:	str	r0, [r1, #96]	; 0x60
   5d1bc:	ldr	r0, [sp, #8]
   5d1c0:	ldr	r1, [fp, #-4]
   5d1c4:	str	r0, [r1, #100]	; 0x64
   5d1c8:	ldr	r0, [sp, #4]
   5d1cc:	ldr	r1, [fp, #-4]
   5d1d0:	str	r0, [r1, #104]	; 0x68
   5d1d4:	ldr	r0, [sp]
   5d1d8:	ldr	r1, [fp, #-4]
   5d1dc:	str	r0, [r1, #108]	; 0x6c
   5d1e0:	mov	r0, #4
   5d1e4:	str	r0, [fp, #-8]
   5d1e8:	mov	r0, #128	; 0x80
   5d1ec:	str	r0, [sp, #16]
   5d1f0:	ldr	r0, [fp, #-4]
   5d1f4:	ldrb	r0, [r0, #88]	; 0x58
   5d1f8:	ubfx	r0, r0, #2, #1
   5d1fc:	and	r0, r0, #255	; 0xff
   5d200:	cmp	r0, #0
   5d204:	beq	5d23c <__assert_fail@plt+0x4a684>
   5d208:	ldr	r0, [fp, #-4]
   5d20c:	add	r0, r0, #96	; 0x60
   5d210:	ldr	r1, [fp, #-8]
   5d214:	add	r0, r0, r1, lsl #2
   5d218:	ldr	r1, [sp, #16]
   5d21c:	movw	r2, #256	; 0x100
   5d220:	sub	r1, r2, r1
   5d224:	movw	r2, #8
   5d228:	sdiv	r2, r1, r2
   5d22c:	movw	r1, #0
   5d230:	and	r1, r1, #255	; 0xff
   5d234:	bl	12900 <memset@plt>
   5d238:	b	5d2f0 <__assert_fail@plt+0x4a738>
   5d23c:	b	5d240 <__assert_fail@plt+0x4a688>
   5d240:	b	5d244 <__assert_fail@plt+0x4a68c>
   5d244:	b	5d248 <__assert_fail@plt+0x4a690>
   5d248:	ldr	r0, [fp, #-8]
   5d24c:	cmp	r0, #8
   5d250:	bge	5d2f0 <__assert_fail@plt+0x4a738>
   5d254:	movw	r0, #0
   5d258:	str	r0, [fp, #-12]
   5d25c:	ldr	r0, [fp, #-12]
   5d260:	cmp	r0, #32
   5d264:	bge	5d2dc <__assert_fail@plt+0x4a724>
   5d268:	bl	12834 <__ctype_b_loc@plt>
   5d26c:	ldr	r0, [r0]
   5d270:	ldr	r1, [sp, #16]
   5d274:	add	r0, r0, r1, lsl #1
   5d278:	ldrh	r0, [r0]
   5d27c:	and	r0, r0, #8
   5d280:	cmp	r0, #0
   5d284:	bne	5d294 <__assert_fail@plt+0x4a6dc>
   5d288:	ldr	r0, [sp, #16]
   5d28c:	cmp	r0, #95	; 0x5f
   5d290:	bne	5d2bc <__assert_fail@plt+0x4a704>
   5d294:	ldr	r0, [fp, #-12]
   5d298:	mov	r1, #1
   5d29c:	lsl	r0, r1, r0
   5d2a0:	ldr	r1, [fp, #-4]
   5d2a4:	add	r1, r1, #96	; 0x60
   5d2a8:	ldr	r2, [fp, #-8]
   5d2ac:	add	r1, r1, r2, lsl #2
   5d2b0:	ldr	r2, [r1]
   5d2b4:	orr	r0, r2, r0
   5d2b8:	str	r0, [r1]
   5d2bc:	b	5d2c0 <__assert_fail@plt+0x4a708>
   5d2c0:	ldr	r0, [fp, #-12]
   5d2c4:	add	r0, r0, #1
   5d2c8:	str	r0, [fp, #-12]
   5d2cc:	ldr	r0, [sp, #16]
   5d2d0:	add	r0, r0, #1
   5d2d4:	str	r0, [sp, #16]
   5d2d8:	b	5d25c <__assert_fail@plt+0x4a6a4>
   5d2dc:	b	5d2e0 <__assert_fail@plt+0x4a728>
   5d2e0:	ldr	r0, [fp, #-8]
   5d2e4:	add	r0, r0, #1
   5d2e8:	str	r0, [fp, #-8]
   5d2ec:	b	5d248 <__assert_fail@plt+0x4a690>
   5d2f0:	mov	sp, fp
   5d2f4:	pop	{fp, pc}
   5d2f8:	push	{fp, lr}
   5d2fc:	mov	fp, sp
   5d300:	sub	sp, sp, #80	; 0x50
   5d304:	ldr	ip, [fp, #12]
   5d308:	ldr	lr, [fp, #8]
   5d30c:	str	r0, [fp, #-8]
   5d310:	str	r1, [fp, #-12]
   5d314:	str	r2, [fp, #-16]
   5d318:	str	r3, [fp, #-20]	; 0xffffffec
   5d31c:	and	r0, lr, #1
   5d320:	strb	r0, [fp, #-21]	; 0xffffffeb
   5d324:	movw	r0, #0
   5d328:	str	r0, [fp, #-36]	; 0xffffffdc
   5d32c:	movw	r0, #32
   5d330:	movw	r1, #1
   5d334:	str	ip, [sp, #20]
   5d338:	bl	4e0e0 <__assert_fail@plt+0x3b528>
   5d33c:	str	r0, [fp, #-28]	; 0xffffffe4
   5d340:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5d344:	movw	r1, #0
   5d348:	cmp	r0, r1
   5d34c:	bne	5d368 <__assert_fail@plt+0x4a7b0>
   5d350:	ldr	r0, [fp, #12]
   5d354:	movw	r1, #12
   5d358:	str	r1, [r0]
   5d35c:	movw	r0, #0
   5d360:	str	r0, [fp, #-4]
   5d364:	b	5d61c <__assert_fail@plt+0x4aa64>
   5d368:	movw	r0, #40	; 0x28
   5d36c:	movw	r1, #1
   5d370:	bl	4e0e0 <__assert_fail@plt+0x3b528>
   5d374:	str	r0, [fp, #-32]	; 0xffffffe0
   5d378:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5d37c:	movw	r1, #0
   5d380:	cmp	r0, r1
   5d384:	bne	5d3a8 <__assert_fail@plt+0x4a7f0>
   5d388:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5d38c:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   5d390:	ldr	r0, [fp, #12]
   5d394:	movw	r1, #12
   5d398:	str	r1, [r0]
   5d39c:	movw	r0, #0
   5d3a0:	str	r0, [fp, #-4]
   5d3a4:	b	5d61c <__assert_fail@plt+0x4aa64>
   5d3a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5d3ac:	ldrb	r1, [r0, #16]
   5d3b0:	ldrb	r2, [fp, #-21]	; 0xffffffeb
   5d3b4:	and	r2, r2, #1
   5d3b8:	bic	r1, r1, #1
   5d3bc:	orr	r1, r1, r2
   5d3c0:	strb	r1, [r0, #16]
   5d3c4:	ldr	r0, [fp, #-12]
   5d3c8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   5d3cc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5d3d0:	ldr	r3, [fp, #-16]
   5d3d4:	sub	ip, fp, #36	; 0x24
   5d3d8:	str	r3, [sp, #16]
   5d3dc:	mov	r3, ip
   5d3e0:	ldr	ip, [sp, #16]
   5d3e4:	str	ip, [sp]
   5d3e8:	movw	lr, #0
   5d3ec:	str	lr, [sp, #4]
   5d3f0:	bl	5e714 <__assert_fail@plt+0x4bb5c>
   5d3f4:	str	r0, [sp, #40]	; 0x28
   5d3f8:	ldr	r0, [sp, #40]	; 0x28
   5d3fc:	cmp	r0, #0
   5d400:	beq	5d42c <__assert_fail@plt+0x4a874>
   5d404:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5d408:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   5d40c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5d410:	bl	57ad0 <__assert_fail@plt+0x44f18>
   5d414:	ldr	r0, [sp, #40]	; 0x28
   5d418:	ldr	r1, [fp, #12]
   5d41c:	str	r0, [r1]
   5d420:	movw	r0, #0
   5d424:	str	r0, [fp, #-4]
   5d428:	b	5d61c <__assert_fail@plt+0x4aa64>
   5d42c:	b	5d430 <__assert_fail@plt+0x4a878>
   5d430:	ldr	r0, [fp, #-20]	; 0xffffffec
   5d434:	ldrsb	r0, [r0]
   5d438:	cmp	r0, #0
   5d43c:	beq	5d460 <__assert_fail@plt+0x4a8a8>
   5d440:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5d444:	ldr	r1, [fp, #-20]	; 0xffffffec
   5d448:	ldrb	r1, [r1]
   5d44c:	bl	5dfe8 <__assert_fail@plt+0x4b430>
   5d450:	ldr	r0, [fp, #-20]	; 0xffffffec
   5d454:	add	r0, r0, #1
   5d458:	str	r0, [fp, #-20]	; 0xffffffec
   5d45c:	b	5d430 <__assert_fail@plt+0x4a878>
   5d460:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   5d464:	tst	r0, #1
   5d468:	beq	5d474 <__assert_fail@plt+0x4a8bc>
   5d46c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5d470:	bl	5f3b4 <__assert_fail@plt+0x4c7fc>
   5d474:	ldr	r0, [fp, #-8]
   5d478:	ldr	r0, [r0, #92]	; 0x5c
   5d47c:	cmp	r0, #1
   5d480:	ble	5d494 <__assert_fail@plt+0x4a8dc>
   5d484:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5d488:	ldr	r1, [fp, #-8]
   5d48c:	ldr	r1, [r1, #60]	; 0x3c
   5d490:	bl	5f3fc <__assert_fail@plt+0x4c844>
   5d494:	ldr	r0, [pc, #396]	; 5d628 <__assert_fail@plt+0x4aa70>
   5d498:	ldr	r1, [fp, #-28]	; 0xffffffe4
   5d49c:	str	r1, [sp, #28]
   5d4a0:	ldr	r1, [sp, #32]
   5d4a4:	mvn	r2, #255	; 0xff
   5d4a8:	and	r1, r1, r2
   5d4ac:	orr	r1, r1, #3
   5d4b0:	str	r1, [sp, #32]
   5d4b4:	ldr	r1, [sp, #32]
   5d4b8:	and	r0, r1, r0
   5d4bc:	str	r0, [sp, #32]
   5d4c0:	ldr	r0, [sp, #32]
   5d4c4:	mvn	r1, #262144	; 0x40000
   5d4c8:	and	r0, r0, r1
   5d4cc:	str	r0, [sp, #32]
   5d4d0:	ldr	r0, [sp, #32]
   5d4d4:	mvn	r1, #524288	; 0x80000
   5d4d8:	and	r0, r0, r1
   5d4dc:	str	r0, [sp, #32]
   5d4e0:	ldr	r0, [sp, #32]
   5d4e4:	mvn	r1, #1048576	; 0x100000
   5d4e8:	and	r0, r0, r1
   5d4ec:	str	r0, [sp, #32]
   5d4f0:	ldr	r0, [sp, #32]
   5d4f4:	mvn	r1, #2097152	; 0x200000
   5d4f8:	and	r0, r0, r1
   5d4fc:	str	r0, [sp, #32]
   5d500:	ldr	r0, [sp, #32]
   5d504:	mvn	r1, #4194304	; 0x400000
   5d508:	and	r0, r0, r1
   5d50c:	str	r0, [sp, #32]
   5d510:	ldr	r0, [fp, #-8]
   5d514:	movw	r1, #0
   5d518:	str	r1, [sp, #12]
   5d51c:	ldr	r2, [sp, #12]
   5d520:	add	r3, sp, #28
   5d524:	bl	5c4fc <__assert_fail@plt+0x49944>
   5d528:	str	r0, [sp, #36]	; 0x24
   5d52c:	ldr	r0, [sp, #36]	; 0x24
   5d530:	movw	r1, #0
   5d534:	cmp	r0, r1
   5d538:	bne	5d540 <__assert_fail@plt+0x4a988>
   5d53c:	b	5d5f8 <__assert_fail@plt+0x4aa40>
   5d540:	ldr	r0, [fp, #-8]
   5d544:	ldr	r0, [r0, #92]	; 0x5c
   5d548:	cmp	r0, #1
   5d54c:	ble	5d5e0 <__assert_fail@plt+0x4aa28>
   5d550:	mov	r0, #6
   5d554:	strb	r0, [sp, #32]
   5d558:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5d55c:	str	r0, [sp, #28]
   5d560:	ldr	r0, [fp, #-8]
   5d564:	ldrb	r1, [r0, #88]	; 0x58
   5d568:	bic	r1, r1, #2
   5d56c:	movw	r2, #2
   5d570:	orr	r1, r1, r2
   5d574:	strb	r1, [r0, #88]	; 0x58
   5d578:	ldr	r0, [fp, #-8]
   5d57c:	movw	r1, #0
   5d580:	str	r1, [sp, #8]
   5d584:	ldr	r2, [sp, #8]
   5d588:	add	r3, sp, #28
   5d58c:	bl	5c4fc <__assert_fail@plt+0x49944>
   5d590:	str	r0, [sp, #24]
   5d594:	ldr	r0, [sp, #24]
   5d598:	movw	r1, #0
   5d59c:	cmp	r0, r1
   5d5a0:	bne	5d5a8 <__assert_fail@plt+0x4a9f0>
   5d5a4:	b	5d5f8 <__assert_fail@plt+0x4aa40>
   5d5a8:	ldr	r0, [fp, #-8]
   5d5ac:	ldr	r1, [sp, #36]	; 0x24
   5d5b0:	ldr	r2, [sp, #24]
   5d5b4:	movw	r3, #10
   5d5b8:	bl	5a498 <__assert_fail@plt+0x478e0>
   5d5bc:	str	r0, [sp, #36]	; 0x24
   5d5c0:	ldr	r0, [sp, #24]
   5d5c4:	movw	r1, #0
   5d5c8:	cmp	r0, r1
   5d5cc:	beq	5d5dc <__assert_fail@plt+0x4aa24>
   5d5d0:	ldr	r0, [sp, #36]	; 0x24
   5d5d4:	str	r0, [fp, #-4]
   5d5d8:	b	5d61c <__assert_fail@plt+0x4aa64>
   5d5dc:	b	5d5f4 <__assert_fail@plt+0x4aa3c>
   5d5e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5d5e4:	bl	57ad0 <__assert_fail@plt+0x44f18>
   5d5e8:	ldr	r0, [sp, #36]	; 0x24
   5d5ec:	str	r0, [fp, #-4]
   5d5f0:	b	5d61c <__assert_fail@plt+0x4aa64>
   5d5f4:	b	5d5f8 <__assert_fail@plt+0x4aa40>
   5d5f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5d5fc:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   5d600:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5d604:	bl	57ad0 <__assert_fail@plt+0x44f18>
   5d608:	ldr	r0, [fp, #12]
   5d60c:	movw	r1, #12
   5d610:	str	r1, [r0]
   5d614:	movw	r0, #0
   5d618:	str	r0, [fp, #-4]
   5d61c:	ldr	r0, [fp, #-4]
   5d620:	mov	sp, fp
   5d624:	pop	{fp, pc}
   5d628:			; <UNDEFINED> instruction: 0xfffc00ff
   5d62c:	push	{fp, lr}
   5d630:	mov	fp, sp
   5d634:	sub	sp, sp, #96	; 0x60
   5d638:	ldr	ip, [fp, #12]
   5d63c:	ldr	lr, [fp, #8]
   5d640:	str	r0, [fp, #-8]
   5d644:	str	r1, [fp, #-12]
   5d648:	str	r2, [fp, #-16]
   5d64c:	str	r3, [fp, #-20]	; 0xffffffec
   5d650:	movw	r0, #0
   5d654:	str	r0, [fp, #-24]	; 0xffffffe8
   5d658:	str	r0, [fp, #-28]	; 0xffffffe4
   5d65c:	ldr	r0, [fp, #-12]
   5d660:	ldr	r0, [r0, #40]	; 0x28
   5d664:	str	r0, [fp, #-44]	; 0xffffffd4
   5d668:	ldr	r0, [fp, #-20]	; 0xffffffec
   5d66c:	ldr	r1, [r0]
   5d670:	str	r1, [sp, #44]	; 0x2c
   5d674:	ldr	r0, [r0, #4]
   5d678:	str	r0, [sp, #48]	; 0x30
   5d67c:	ldr	r0, [fp, #-20]	; 0xffffffec
   5d680:	ldr	r0, [r0, #4]
   5d684:	and	r0, r0, #255	; 0xff
   5d688:	cmp	r0, #23
   5d68c:	bne	5d910 <__assert_fail@plt+0x4ad58>
   5d690:	movw	r0, #0
   5d694:	str	r0, [fp, #-40]	; 0xffffffd8
   5d698:	ldr	r0, [fp, #-12]
   5d69c:	ldr	r1, [fp, #-20]	; 0xffffffec
   5d6a0:	ldr	r2, [fp, #8]
   5d6a4:	bl	5f8c0 <__assert_fail@plt+0x4cd08>
   5d6a8:	str	r0, [fp, #-36]	; 0xffffffdc
   5d6ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5d6b0:	cmn	r0, #1
   5d6b4:	bne	5d704 <__assert_fail@plt+0x4ab4c>
   5d6b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   5d6bc:	ldr	r0, [r0, #4]
   5d6c0:	and	r0, r0, #255	; 0xff
   5d6c4:	cmp	r0, #1
   5d6c8:	bne	5d6e8 <__assert_fail@plt+0x4ab30>
   5d6cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   5d6d0:	ldrb	r0, [r0]
   5d6d4:	cmp	r0, #44	; 0x2c
   5d6d8:	bne	5d6e8 <__assert_fail@plt+0x4ab30>
   5d6dc:	movw	r0, #0
   5d6e0:	str	r0, [fp, #-36]	; 0xffffffdc
   5d6e4:	b	5d700 <__assert_fail@plt+0x4ab48>
   5d6e8:	ldr	r0, [fp, #12]
   5d6ec:	movw	r1, #10
   5d6f0:	str	r1, [r0]
   5d6f4:	movw	r0, #0
   5d6f8:	str	r0, [fp, #-4]
   5d6fc:	b	5dc6c <__assert_fail@plt+0x4b0b4>
   5d700:	b	5d704 <__assert_fail@plt+0x4ab4c>
   5d704:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5d708:	cmn	r0, #2
   5d70c:	beq	5d788 <__assert_fail@plt+0x4abd0>
   5d710:	ldr	r0, [fp, #-20]	; 0xffffffec
   5d714:	ldr	r0, [r0, #4]
   5d718:	and	r0, r0, #255	; 0xff
   5d71c:	cmp	r0, #24
   5d720:	bne	5d730 <__assert_fail@plt+0x4ab78>
   5d724:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5d728:	str	r0, [sp, #36]	; 0x24
   5d72c:	b	5d780 <__assert_fail@plt+0x4abc8>
   5d730:	ldr	r0, [fp, #-20]	; 0xffffffec
   5d734:	ldr	r0, [r0, #4]
   5d738:	and	r0, r0, #255	; 0xff
   5d73c:	cmp	r0, #1
   5d740:	bne	5d76c <__assert_fail@plt+0x4abb4>
   5d744:	ldr	r0, [fp, #-20]	; 0xffffffec
   5d748:	ldrb	r0, [r0]
   5d74c:	cmp	r0, #44	; 0x2c
   5d750:	bne	5d76c <__assert_fail@plt+0x4abb4>
   5d754:	ldr	r0, [fp, #-12]
   5d758:	ldr	r1, [fp, #-20]	; 0xffffffec
   5d75c:	ldr	r2, [fp, #8]
   5d760:	bl	5f8c0 <__assert_fail@plt+0x4cd08>
   5d764:	str	r0, [sp, #32]
   5d768:	b	5d778 <__assert_fail@plt+0x4abc0>
   5d76c:	mvn	r0, #1
   5d770:	str	r0, [sp, #32]
   5d774:	b	5d778 <__assert_fail@plt+0x4abc0>
   5d778:	ldr	r0, [sp, #32]
   5d77c:	str	r0, [sp, #36]	; 0x24
   5d780:	ldr	r0, [sp, #36]	; 0x24
   5d784:	str	r0, [fp, #-40]	; 0xffffffd8
   5d788:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5d78c:	cmn	r0, #2
   5d790:	movw	r0, #1
   5d794:	str	r0, [sp, #28]
   5d798:	beq	5d7b0 <__assert_fail@plt+0x4abf8>
   5d79c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5d7a0:	cmn	r0, #2
   5d7a4:	movw	r0, #0
   5d7a8:	moveq	r0, #1
   5d7ac:	str	r0, [sp, #28]
   5d7b0:	ldr	r0, [sp, #28]
   5d7b4:	tst	r0, #1
   5d7b8:	beq	5d860 <__assert_fail@plt+0x4aca8>
   5d7bc:	ldr	r0, [fp, #8]
   5d7c0:	and	r0, r0, #2097152	; 0x200000
   5d7c4:	cmp	r0, #0
   5d7c8:	movw	r0, #0
   5d7cc:	movne	r0, #1
   5d7d0:	mvn	r1, #0
   5d7d4:	eor	r0, r0, r1
   5d7d8:	tst	r0, #1
   5d7dc:	beq	5d81c <__assert_fail@plt+0x4ac64>
   5d7e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   5d7e4:	ldr	r0, [r0, #4]
   5d7e8:	and	r0, r0, #255	; 0xff
   5d7ec:	cmp	r0, #2
   5d7f0:	bne	5d804 <__assert_fail@plt+0x4ac4c>
   5d7f4:	ldr	r0, [fp, #12]
   5d7f8:	movw	r1, #9
   5d7fc:	str	r1, [r0]
   5d800:	b	5d810 <__assert_fail@plt+0x4ac58>
   5d804:	ldr	r0, [fp, #12]
   5d808:	movw	r1, #10
   5d80c:	str	r1, [r0]
   5d810:	movw	r0, #0
   5d814:	str	r0, [fp, #-4]
   5d818:	b	5dc6c <__assert_fail@plt+0x4b0b4>
   5d81c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   5d820:	ldr	r1, [fp, #-12]
   5d824:	str	r0, [r1, #40]	; 0x28
   5d828:	ldr	r0, [fp, #-20]	; 0xffffffec
   5d82c:	ldr	r1, [sp, #44]	; 0x2c
   5d830:	str	r1, [r0]
   5d834:	ldr	r1, [sp, #48]	; 0x30
   5d838:	str	r1, [r0, #4]
   5d83c:	ldr	r0, [fp, #-20]	; 0xffffffec
   5d840:	ldr	r1, [r0, #4]
   5d844:	mvn	r2, #255	; 0xff
   5d848:	and	r1, r1, r2
   5d84c:	orr	r1, r1, #1
   5d850:	str	r1, [r0, #4]
   5d854:	ldr	r0, [fp, #-8]
   5d858:	str	r0, [fp, #-4]
   5d85c:	b	5dc6c <__assert_fail@plt+0x4b0b4>
   5d860:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5d864:	cmn	r0, #1
   5d868:	beq	5d884 <__assert_fail@plt+0x4accc>
   5d86c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5d870:	ldr	r1, [fp, #-40]	; 0xffffffd8
   5d874:	cmp	r0, r1
   5d878:	movw	r0, #1
   5d87c:	str	r0, [sp, #24]
   5d880:	bgt	5d8a0 <__assert_fail@plt+0x4ace8>
   5d884:	ldr	r0, [fp, #-20]	; 0xffffffec
   5d888:	ldr	r0, [r0, #4]
   5d88c:	and	r0, r0, #255	; 0xff
   5d890:	cmp	r0, #24
   5d894:	movw	r0, #0
   5d898:	movne	r0, #1
   5d89c:	str	r0, [sp, #24]
   5d8a0:	ldr	r0, [sp, #24]
   5d8a4:	tst	r0, #1
   5d8a8:	beq	5d8c4 <__assert_fail@plt+0x4ad0c>
   5d8ac:	ldr	r0, [fp, #12]
   5d8b0:	movw	r1, #10
   5d8b4:	str	r1, [r0]
   5d8b8:	movw	r0, #0
   5d8bc:	str	r0, [fp, #-4]
   5d8c0:	b	5dc6c <__assert_fail@plt+0x4b0b4>
   5d8c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5d8c8:	cmn	r0, #1
   5d8cc:	bne	5d8dc <__assert_fail@plt+0x4ad24>
   5d8d0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5d8d4:	str	r0, [sp, #20]
   5d8d8:	b	5d8e4 <__assert_fail@plt+0x4ad2c>
   5d8dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5d8e0:	str	r0, [sp, #20]
   5d8e4:	ldr	r0, [sp, #20]
   5d8e8:	movw	r1, #32767	; 0x7fff
   5d8ec:	cmp	r1, r0
   5d8f0:	bge	5d90c <__assert_fail@plt+0x4ad54>
   5d8f4:	ldr	r0, [fp, #12]
   5d8f8:	movw	r1, #15
   5d8fc:	str	r1, [r0]
   5d900:	movw	r0, #0
   5d904:	str	r0, [fp, #-4]
   5d908:	b	5dc6c <__assert_fail@plt+0x4b0b4>
   5d90c:	b	5d960 <__assert_fail@plt+0x4ada8>
   5d910:	ldr	r0, [fp, #-20]	; 0xffffffec
   5d914:	ldr	r0, [r0, #4]
   5d918:	and	r0, r0, #255	; 0xff
   5d91c:	cmp	r0, #18
   5d920:	movw	r0, #0
   5d924:	moveq	r0, #1
   5d928:	tst	r0, #1
   5d92c:	movw	r0, #1
   5d930:	mov	r1, r0
   5d934:	moveq	r1, #0
   5d938:	str	r1, [fp, #-36]	; 0xffffffdc
   5d93c:	ldr	r1, [fp, #-20]	; 0xffffffec
   5d940:	ldr	r1, [r1, #4]
   5d944:	and	r1, r1, #255	; 0xff
   5d948:	cmp	r1, #19
   5d94c:	movw	r1, #0
   5d950:	moveq	r1, #1
   5d954:	tst	r1, #1
   5d958:	mvneq	r0, #0
   5d95c:	str	r0, [fp, #-40]	; 0xffffffd8
   5d960:	ldr	r0, [fp, #-20]	; 0xffffffec
   5d964:	ldr	r1, [fp, #-12]
   5d968:	ldr	r2, [fp, #8]
   5d96c:	bl	5a204 <__assert_fail@plt+0x4764c>
   5d970:	ldr	r0, [fp, #-8]
   5d974:	movw	r1, #0
   5d978:	cmp	r0, r1
   5d97c:	bne	5d98c <__assert_fail@plt+0x4add4>
   5d980:	movw	r0, #0
   5d984:	str	r0, [fp, #-4]
   5d988:	b	5dc6c <__assert_fail@plt+0x4b0b4>
   5d98c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5d990:	cmp	r0, #0
   5d994:	movw	r0, #0
   5d998:	str	r0, [sp, #16]
   5d99c:	bne	5d9b4 <__assert_fail@plt+0x4adfc>
   5d9a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5d9a4:	cmp	r0, #0
   5d9a8:	movw	r0, #0
   5d9ac:	moveq	r0, #1
   5d9b0:	str	r0, [sp, #16]
   5d9b4:	ldr	r0, [sp, #16]
   5d9b8:	tst	r0, #1
   5d9bc:	beq	5d9e0 <__assert_fail@plt+0x4ae28>
   5d9c0:	ldr	r0, [fp, #-8]
   5d9c4:	movw	r1, #47608	; 0xb9f8
   5d9c8:	movt	r1, #5
   5d9cc:	movw	r2, #0
   5d9d0:	bl	5b888 <__assert_fail@plt+0x48cd0>
   5d9d4:	movw	r1, #0
   5d9d8:	str	r1, [fp, #-4]
   5d9dc:	b	5dc6c <__assert_fail@plt+0x4b0b4>
   5d9e0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5d9e4:	cmp	r0, #0
   5d9e8:	ble	5dad4 <__assert_fail@plt+0x4af1c>
   5d9ec:	ldr	r0, [fp, #-8]
   5d9f0:	str	r0, [fp, #-24]	; 0xffffffe8
   5d9f4:	movw	r0, #2
   5d9f8:	str	r0, [fp, #-32]	; 0xffffffe0
   5d9fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5da00:	ldr	r1, [fp, #-36]	; 0xffffffdc
   5da04:	cmp	r0, r1
   5da08:	bgt	5da88 <__assert_fail@plt+0x4aed0>
   5da0c:	ldr	r0, [fp, #-8]
   5da10:	ldr	r1, [fp, #-16]
   5da14:	bl	5fa20 <__assert_fail@plt+0x4ce68>
   5da18:	str	r0, [fp, #-8]
   5da1c:	ldr	r0, [fp, #-16]
   5da20:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5da24:	ldr	r2, [fp, #-8]
   5da28:	movw	r3, #16
   5da2c:	bl	5a498 <__assert_fail@plt+0x478e0>
   5da30:	str	r0, [fp, #-24]	; 0xffffffe8
   5da34:	ldr	r0, [fp, #-8]
   5da38:	movw	r1, #0
   5da3c:	cmp	r0, r1
   5da40:	movw	r0, #1
   5da44:	str	r0, [sp, #12]
   5da48:	beq	5da64 <__assert_fail@plt+0x4aeac>
   5da4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5da50:	movw	r1, #0
   5da54:	cmp	r0, r1
   5da58:	movw	r0, #0
   5da5c:	moveq	r0, #1
   5da60:	str	r0, [sp, #12]
   5da64:	ldr	r0, [sp, #12]
   5da68:	tst	r0, #1
   5da6c:	beq	5da74 <__assert_fail@plt+0x4aebc>
   5da70:	b	5dc58 <__assert_fail@plt+0x4b0a0>
   5da74:	b	5da78 <__assert_fail@plt+0x4aec0>
   5da78:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5da7c:	add	r0, r0, #1
   5da80:	str	r0, [fp, #-32]	; 0xffffffe0
   5da84:	b	5d9fc <__assert_fail@plt+0x4ae44>
   5da88:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5da8c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   5da90:	cmp	r0, r1
   5da94:	bne	5daa4 <__assert_fail@plt+0x4aeec>
   5da98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5da9c:	str	r0, [fp, #-4]
   5daa0:	b	5dc6c <__assert_fail@plt+0x4b0b4>
   5daa4:	ldr	r0, [fp, #-8]
   5daa8:	ldr	r1, [fp, #-16]
   5daac:	bl	5fa20 <__assert_fail@plt+0x4ce68>
   5dab0:	str	r0, [fp, #-8]
   5dab4:	ldr	r0, [fp, #-8]
   5dab8:	movw	r1, #0
   5dabc:	cmp	r0, r1
   5dac0:	bne	5dac8 <__assert_fail@plt+0x4af10>
   5dac4:	b	5dc58 <__assert_fail@plt+0x4b0a0>
   5dac8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5dacc:	str	r0, [fp, #-28]	; 0xffffffe4
   5dad0:	b	5dadc <__assert_fail@plt+0x4af24>
   5dad4:	movw	r0, #0
   5dad8:	str	r0, [fp, #-28]	; 0xffffffe4
   5dadc:	ldr	r0, [fp, #-8]
   5dae0:	ldr	r0, [r0, #24]
   5dae4:	and	r0, r0, #255	; 0xff
   5dae8:	cmp	r0, #17
   5daec:	bne	5db10 <__assert_fail@plt+0x4af58>
   5daf0:	ldr	r0, [fp, #-8]
   5daf4:	ldr	r0, [r0, #20]
   5daf8:	str	r0, [sp, #40]	; 0x28
   5dafc:	ldr	r0, [fp, #-8]
   5db00:	ldr	r2, [sp, #40]	; 0x28
   5db04:	movw	r1, #64432	; 0xfbb0
   5db08:	movt	r1, #5
   5db0c:	bl	5b888 <__assert_fail@plt+0x48cd0>
   5db10:	ldr	r0, [fp, #-16]
   5db14:	ldr	r1, [fp, #-8]
   5db18:	ldr	r2, [fp, #-40]	; 0xffffffd8
   5db1c:	cmn	r2, #1
   5db20:	movw	r2, #0
   5db24:	moveq	r2, #1
   5db28:	tst	r2, #1
   5db2c:	movw	r2, #11
   5db30:	moveq	r2, #10
   5db34:	movw	r3, #0
   5db38:	str	r2, [sp, #8]
   5db3c:	mov	r2, r3
   5db40:	ldr	r3, [sp, #8]
   5db44:	bl	5a498 <__assert_fail@plt+0x478e0>
   5db48:	str	r0, [fp, #-24]	; 0xffffffe8
   5db4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5db50:	movw	r1, #0
   5db54:	cmp	r0, r1
   5db58:	bne	5db60 <__assert_fail@plt+0x4afa8>
   5db5c:	b	5dc58 <__assert_fail@plt+0x4b0a0>
   5db60:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5db64:	add	r0, r0, #2
   5db68:	str	r0, [fp, #-32]	; 0xffffffe0
   5db6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5db70:	ldr	r1, [fp, #-40]	; 0xffffffd8
   5db74:	cmp	r0, r1
   5db78:	bgt	5dc24 <__assert_fail@plt+0x4b06c>
   5db7c:	ldr	r0, [fp, #-8]
   5db80:	ldr	r1, [fp, #-16]
   5db84:	bl	5fa20 <__assert_fail@plt+0x4ce68>
   5db88:	str	r0, [fp, #-8]
   5db8c:	ldr	r0, [fp, #-16]
   5db90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5db94:	ldr	r2, [fp, #-8]
   5db98:	movw	r3, #16
   5db9c:	bl	5a498 <__assert_fail@plt+0x478e0>
   5dba0:	str	r0, [fp, #-24]	; 0xffffffe8
   5dba4:	ldr	r0, [fp, #-8]
   5dba8:	movw	r1, #0
   5dbac:	cmp	r0, r1
   5dbb0:	movw	r0, #1
   5dbb4:	str	r0, [sp, #4]
   5dbb8:	beq	5dbd4 <__assert_fail@plt+0x4b01c>
   5dbbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5dbc0:	movw	r1, #0
   5dbc4:	cmp	r0, r1
   5dbc8:	movw	r0, #0
   5dbcc:	moveq	r0, #1
   5dbd0:	str	r0, [sp, #4]
   5dbd4:	ldr	r0, [sp, #4]
   5dbd8:	tst	r0, #1
   5dbdc:	beq	5dbe4 <__assert_fail@plt+0x4b02c>
   5dbe0:	b	5dc58 <__assert_fail@plt+0x4b0a0>
   5dbe4:	ldr	r0, [fp, #-16]
   5dbe8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5dbec:	movw	r2, #0
   5dbf0:	movw	r3, #10
   5dbf4:	bl	5a498 <__assert_fail@plt+0x478e0>
   5dbf8:	str	r0, [fp, #-24]	; 0xffffffe8
   5dbfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5dc00:	movw	r1, #0
   5dc04:	cmp	r0, r1
   5dc08:	bne	5dc10 <__assert_fail@plt+0x4b058>
   5dc0c:	b	5dc58 <__assert_fail@plt+0x4b0a0>
   5dc10:	b	5dc14 <__assert_fail@plt+0x4b05c>
   5dc14:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5dc18:	add	r0, r0, #1
   5dc1c:	str	r0, [fp, #-32]	; 0xffffffe0
   5dc20:	b	5db6c <__assert_fail@plt+0x4afb4>
   5dc24:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5dc28:	movw	r1, #0
   5dc2c:	cmp	r0, r1
   5dc30:	beq	5dc4c <__assert_fail@plt+0x4b094>
   5dc34:	ldr	r0, [fp, #-16]
   5dc38:	ldr	r1, [fp, #-28]	; 0xffffffe4
   5dc3c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5dc40:	movw	r3, #16
   5dc44:	bl	5a498 <__assert_fail@plt+0x478e0>
   5dc48:	str	r0, [fp, #-24]	; 0xffffffe8
   5dc4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5dc50:	str	r0, [fp, #-4]
   5dc54:	b	5dc6c <__assert_fail@plt+0x4b0b4>
   5dc58:	ldr	r0, [fp, #12]
   5dc5c:	movw	r1, #12
   5dc60:	str	r1, [r0]
   5dc64:	movw	r0, #0
   5dc68:	str	r0, [fp, #-4]
   5dc6c:	ldr	r0, [fp, #-4]
   5dc70:	mov	sp, fp
   5dc74:	pop	{fp, pc}
   5dc78:	sub	sp, sp, #32
   5dc7c:	str	r0, [sp, #24]
   5dc80:	str	r1, [sp, #20]
   5dc84:	str	r2, [sp, #16]
   5dc88:	ldr	r0, [sp, #20]
   5dc8c:	ldr	r0, [r0, #56]	; 0x38
   5dc90:	ldr	r1, [sp, #20]
   5dc94:	ldr	r1, [r1, #40]	; 0x28
   5dc98:	cmp	r0, r1
   5dc9c:	bgt	5dcc4 <__assert_fail@plt+0x4b10c>
   5dca0:	ldr	r0, [sp, #24]
   5dca4:	ldr	r1, [r0, #4]
   5dca8:	mvn	r2, #255	; 0xff
   5dcac:	and	r1, r1, r2
   5dcb0:	orr	r1, r1, #2
   5dcb4:	str	r1, [r0, #4]
   5dcb8:	movw	r0, #0
   5dcbc:	str	r0, [sp, #28]
   5dcc0:	b	5dfdc <__assert_fail@plt+0x4b424>
   5dcc4:	ldr	r0, [sp, #20]
   5dcc8:	ldr	r0, [r0, #4]
   5dccc:	ldr	r1, [sp, #20]
   5dcd0:	ldr	r1, [r1, #40]	; 0x28
   5dcd4:	add	r1, r1, #0
   5dcd8:	add	r0, r0, r1
   5dcdc:	ldrb	r0, [r0]
   5dce0:	strb	r0, [sp, #15]
   5dce4:	ldrb	r0, [sp, #15]
   5dce8:	ldr	r1, [sp, #24]
   5dcec:	strb	r0, [r1]
   5dcf0:	ldr	r0, [sp, #20]
   5dcf4:	ldr	r0, [r0, #80]	; 0x50
   5dcf8:	cmp	r0, #1
   5dcfc:	ble	5dd58 <__assert_fail@plt+0x4b1a0>
   5dd00:	ldr	r0, [sp, #20]
   5dd04:	ldr	r0, [r0, #40]	; 0x28
   5dd08:	ldr	r1, [sp, #20]
   5dd0c:	ldr	r1, [r1, #28]
   5dd10:	cmp	r0, r1
   5dd14:	beq	5dd58 <__assert_fail@plt+0x4b1a0>
   5dd18:	ldr	r0, [sp, #20]
   5dd1c:	ldr	r1, [r0, #8]
   5dd20:	ldr	r0, [r0, #40]	; 0x28
   5dd24:	add	r0, r1, r0, lsl #2
   5dd28:	ldr	r0, [r0]
   5dd2c:	cmn	r0, #1
   5dd30:	bne	5dd58 <__assert_fail@plt+0x4b1a0>
   5dd34:	ldr	r0, [sp, #24]
   5dd38:	ldr	r1, [r0, #4]
   5dd3c:	mvn	r2, #255	; 0xff
   5dd40:	and	r1, r1, r2
   5dd44:	orr	r1, r1, #1
   5dd48:	str	r1, [r0, #4]
   5dd4c:	movw	r0, #1
   5dd50:	str	r0, [sp, #28]
   5dd54:	b	5dfdc <__assert_fail@plt+0x4b424>
   5dd58:	ldrb	r0, [sp, #15]
   5dd5c:	cmp	r0, #92	; 0x5c
   5dd60:	bne	5ddf0 <__assert_fail@plt+0x4b238>
   5dd64:	ldr	r0, [sp, #16]
   5dd68:	and	r0, r0, #1
   5dd6c:	cmp	r0, #0
   5dd70:	beq	5ddf0 <__assert_fail@plt+0x4b238>
   5dd74:	ldr	r0, [sp, #20]
   5dd78:	ldr	r0, [r0, #40]	; 0x28
   5dd7c:	add	r0, r0, #1
   5dd80:	ldr	r1, [sp, #20]
   5dd84:	ldr	r1, [r1, #48]	; 0x30
   5dd88:	cmp	r0, r1
   5dd8c:	bge	5ddf0 <__assert_fail@plt+0x4b238>
   5dd90:	ldr	r0, [sp, #20]
   5dd94:	ldr	r1, [r0, #40]	; 0x28
   5dd98:	add	r1, r1, #1
   5dd9c:	str	r1, [r0, #40]	; 0x28
   5dda0:	ldr	r0, [sp, #20]
   5dda4:	ldr	r0, [r0, #4]
   5dda8:	ldr	r1, [sp, #20]
   5ddac:	ldr	r1, [r1, #40]	; 0x28
   5ddb0:	add	r1, r1, #0
   5ddb4:	add	r0, r0, r1
   5ddb8:	ldrb	r0, [r0]
   5ddbc:	strb	r0, [sp, #14]
   5ddc0:	ldrb	r0, [sp, #14]
   5ddc4:	ldr	r1, [sp, #24]
   5ddc8:	strb	r0, [r1]
   5ddcc:	ldr	r0, [sp, #24]
   5ddd0:	ldr	r1, [r0, #4]
   5ddd4:	mvn	r2, #255	; 0xff
   5ddd8:	and	r1, r1, r2
   5dddc:	orr	r1, r1, #1
   5dde0:	str	r1, [r0, #4]
   5dde4:	movw	r0, #1
   5dde8:	str	r0, [sp, #28]
   5ddec:	b	5dfdc <__assert_fail@plt+0x4b424>
   5ddf0:	ldrb	r0, [sp, #15]
   5ddf4:	cmp	r0, #91	; 0x5b
   5ddf8:	bne	5df30 <__assert_fail@plt+0x4b378>
   5ddfc:	ldr	r0, [sp, #20]
   5de00:	ldr	r0, [r0, #40]	; 0x28
   5de04:	add	r0, r0, #1
   5de08:	ldr	r1, [sp, #20]
   5de0c:	ldr	r1, [r1, #48]	; 0x30
   5de10:	cmp	r0, r1
   5de14:	bge	5de3c <__assert_fail@plt+0x4b284>
   5de18:	ldr	r0, [sp, #20]
   5de1c:	ldr	r0, [r0, #4]
   5de20:	ldr	r1, [sp, #20]
   5de24:	ldr	r1, [r1, #40]	; 0x28
   5de28:	add	r1, r1, #1
   5de2c:	add	r0, r0, r1
   5de30:	ldrb	r0, [r0]
   5de34:	strb	r0, [sp, #13]
   5de38:	b	5de44 <__assert_fail@plt+0x4b28c>
   5de3c:	movw	r0, #0
   5de40:	strb	r0, [sp, #13]
   5de44:	ldrb	r0, [sp, #13]
   5de48:	ldr	r1, [sp, #24]
   5de4c:	strb	r0, [r1]
   5de50:	mov	r0, #2
   5de54:	str	r0, [sp, #8]
   5de58:	ldrb	r0, [sp, #13]
   5de5c:	mov	r1, r0
   5de60:	cmp	r0, #46	; 0x2e
   5de64:	str	r1, [sp, #4]
   5de68:	beq	5de90 <__assert_fail@plt+0x4b2d8>
   5de6c:	b	5de70 <__assert_fail@plt+0x4b2b8>
   5de70:	ldr	r0, [sp, #4]
   5de74:	cmp	r0, #58	; 0x3a
   5de78:	beq	5dec8 <__assert_fail@plt+0x4b310>
   5de7c:	b	5de80 <__assert_fail@plt+0x4b2c8>
   5de80:	ldr	r0, [sp, #4]
   5de84:	cmp	r0, #61	; 0x3d
   5de88:	beq	5deac <__assert_fail@plt+0x4b2f4>
   5de8c:	b	5def8 <__assert_fail@plt+0x4b340>
   5de90:	ldr	r0, [sp, #24]
   5de94:	ldr	r1, [r0, #4]
   5de98:	mvn	r2, #255	; 0xff
   5de9c:	and	r1, r1, r2
   5dea0:	orr	r1, r1, #26
   5dea4:	str	r1, [r0, #4]
   5dea8:	b	5df24 <__assert_fail@plt+0x4b36c>
   5deac:	ldr	r0, [sp, #24]
   5deb0:	ldr	r1, [r0, #4]
   5deb4:	mvn	r2, #255	; 0xff
   5deb8:	and	r1, r1, r2
   5debc:	orr	r1, r1, #28
   5dec0:	str	r1, [r0, #4]
   5dec4:	b	5df24 <__assert_fail@plt+0x4b36c>
   5dec8:	ldr	r0, [sp, #16]
   5decc:	and	r0, r0, #4
   5ded0:	cmp	r0, #0
   5ded4:	beq	5def4 <__assert_fail@plt+0x4b33c>
   5ded8:	ldr	r0, [sp, #24]
   5dedc:	ldr	r1, [r0, #4]
   5dee0:	mvn	r2, #255	; 0xff
   5dee4:	and	r1, r1, r2
   5dee8:	orr	r1, r1, #30
   5deec:	str	r1, [r0, #4]
   5def0:	b	5df24 <__assert_fail@plt+0x4b36c>
   5def4:	b	5def8 <__assert_fail@plt+0x4b340>
   5def8:	ldr	r0, [sp, #24]
   5defc:	ldr	r1, [r0, #4]
   5df00:	mvn	r2, #255	; 0xff
   5df04:	and	r1, r1, r2
   5df08:	orr	r1, r1, #1
   5df0c:	str	r1, [r0, #4]
   5df10:	ldrb	r0, [sp, #15]
   5df14:	ldr	r1, [sp, #24]
   5df18:	strb	r0, [r1]
   5df1c:	movw	r0, #1
   5df20:	str	r0, [sp, #8]
   5df24:	ldr	r0, [sp, #8]
   5df28:	str	r0, [sp, #28]
   5df2c:	b	5dfdc <__assert_fail@plt+0x4b424>
   5df30:	ldrb	r0, [sp, #15]
   5df34:	mov	r1, r0
   5df38:	cmp	r0, #45	; 0x2d
   5df3c:	str	r1, [sp]
   5df40:	beq	5df68 <__assert_fail@plt+0x4b3b0>
   5df44:	b	5df48 <__assert_fail@plt+0x4b390>
   5df48:	ldr	r0, [sp]
   5df4c:	cmp	r0, #93	; 0x5d
   5df50:	beq	5df84 <__assert_fail@plt+0x4b3cc>
   5df54:	b	5df58 <__assert_fail@plt+0x4b3a0>
   5df58:	ldr	r0, [sp]
   5df5c:	cmp	r0, #94	; 0x5e
   5df60:	beq	5dfa0 <__assert_fail@plt+0x4b3e8>
   5df64:	b	5dfbc <__assert_fail@plt+0x4b404>
   5df68:	ldr	r0, [sp, #24]
   5df6c:	ldr	r1, [r0, #4]
   5df70:	mvn	r2, #255	; 0xff
   5df74:	and	r1, r1, r2
   5df78:	orr	r1, r1, #22
   5df7c:	str	r1, [r0, #4]
   5df80:	b	5dfd4 <__assert_fail@plt+0x4b41c>
   5df84:	ldr	r0, [sp, #24]
   5df88:	ldr	r1, [r0, #4]
   5df8c:	mvn	r2, #255	; 0xff
   5df90:	and	r1, r1, r2
   5df94:	orr	r1, r1, #21
   5df98:	str	r1, [r0, #4]
   5df9c:	b	5dfd4 <__assert_fail@plt+0x4b41c>
   5dfa0:	ldr	r0, [sp, #24]
   5dfa4:	ldr	r1, [r0, #4]
   5dfa8:	mvn	r2, #255	; 0xff
   5dfac:	and	r1, r1, r2
   5dfb0:	orr	r1, r1, #25
   5dfb4:	str	r1, [r0, #4]
   5dfb8:	b	5dfd4 <__assert_fail@plt+0x4b41c>
   5dfbc:	ldr	r0, [sp, #24]
   5dfc0:	ldr	r1, [r0, #4]
   5dfc4:	mvn	r2, #255	; 0xff
   5dfc8:	and	r1, r1, r2
   5dfcc:	orr	r1, r1, #1
   5dfd0:	str	r1, [r0, #4]
   5dfd4:	movw	r0, #1
   5dfd8:	str	r0, [sp, #28]
   5dfdc:	ldr	r0, [sp, #28]
   5dfe0:	add	sp, sp, #32
   5dfe4:	bx	lr
   5dfe8:	sub	sp, sp, #8
   5dfec:	str	r0, [sp, #4]
   5dff0:	str	r1, [sp]
   5dff4:	ldr	r0, [sp]
   5dff8:	asr	r1, r0, #31
   5dffc:	add	r1, r0, r1, lsr #27
   5e000:	bic	r2, r1, #31
   5e004:	sub	r0, r0, r2
   5e008:	mov	r2, #1
   5e00c:	lsl	r0, r2, r0
   5e010:	ldr	r2, [sp, #4]
   5e014:	asr	r1, r1, #5
   5e018:	add	r1, r2, r1, lsl #2
   5e01c:	ldr	r2, [r1]
   5e020:	orr	r0, r2, r0
   5e024:	str	r0, [r1]
   5e028:	add	sp, sp, #8
   5e02c:	bx	lr
   5e030:	push	{r4, sl, fp, lr}
   5e034:	add	fp, sp, #8
   5e038:	sub	sp, sp, #48	; 0x30
   5e03c:	ldr	ip, [fp, #16]
   5e040:	ldr	lr, [fp, #12]
   5e044:	ldr	r4, [fp, #8]
   5e048:	str	r0, [fp, #-16]
   5e04c:	str	r1, [fp, #-20]	; 0xffffffec
   5e050:	str	r2, [fp, #-24]	; 0xffffffe8
   5e054:	str	r3, [sp, #28]
   5e058:	and	r0, ip, #1
   5e05c:	strb	r0, [sp, #27]
   5e060:	ldr	r0, [fp, #-20]	; 0xffffffec
   5e064:	ldr	r1, [fp, #-20]	; 0xffffffec
   5e068:	ldr	r1, [r1, #40]	; 0x28
   5e06c:	str	lr, [sp, #8]
   5e070:	str	r4, [sp, #4]
   5e074:	bl	5f454 <__assert_fail@plt+0x4c89c>
   5e078:	str	r0, [sp, #20]
   5e07c:	ldr	r0, [sp, #20]
   5e080:	cmp	r0, #1
   5e084:	ble	5e0cc <__assert_fail@plt+0x4b514>
   5e088:	ldr	r0, [fp, #-16]
   5e08c:	movw	r1, #1
   5e090:	str	r1, [r0]
   5e094:	ldr	r0, [fp, #-20]	; 0xffffffec
   5e098:	ldr	r1, [fp, #-20]	; 0xffffffec
   5e09c:	ldr	r1, [r1, #40]	; 0x28
   5e0a0:	bl	5b5a0 <__assert_fail@plt+0x489e8>
   5e0a4:	ldr	r1, [fp, #-16]
   5e0a8:	str	r0, [r1, #4]
   5e0ac:	ldr	r0, [sp, #20]
   5e0b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   5e0b4:	ldr	r2, [r1, #40]	; 0x28
   5e0b8:	add	r0, r2, r0
   5e0bc:	str	r0, [r1, #40]	; 0x28
   5e0c0:	movw	r0, #0
   5e0c4:	str	r0, [fp, #-12]
   5e0c8:	b	5e1a4 <__assert_fail@plt+0x4b5ec>
   5e0cc:	ldr	r0, [sp, #28]
   5e0d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   5e0d4:	ldr	r2, [r1, #40]	; 0x28
   5e0d8:	add	r0, r2, r0
   5e0dc:	str	r0, [r1, #40]	; 0x28
   5e0e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5e0e4:	ldr	r0, [r0, #4]
   5e0e8:	and	r0, r0, #255	; 0xff
   5e0ec:	cmp	r0, #26
   5e0f0:	beq	5e11c <__assert_fail@plt+0x4b564>
   5e0f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5e0f8:	ldr	r0, [r0, #4]
   5e0fc:	and	r0, r0, #255	; 0xff
   5e100:	cmp	r0, #30
   5e104:	beq	5e11c <__assert_fail@plt+0x4b564>
   5e108:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5e10c:	ldr	r0, [r0, #4]
   5e110:	and	r0, r0, #255	; 0xff
   5e114:	cmp	r0, #28
   5e118:	bne	5e134 <__assert_fail@plt+0x4b57c>
   5e11c:	ldr	r0, [fp, #-16]
   5e120:	ldr	r1, [fp, #-20]	; 0xffffffec
   5e124:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5e128:	bl	5f4f0 <__assert_fail@plt+0x4c938>
   5e12c:	str	r0, [fp, #-12]
   5e130:	b	5e1a4 <__assert_fail@plt+0x4b5ec>
   5e134:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5e138:	ldr	r0, [r0, #4]
   5e13c:	and	r0, r0, #255	; 0xff
   5e140:	cmp	r0, #22
   5e144:	bne	5e184 <__assert_fail@plt+0x4b5cc>
   5e148:	ldrb	r0, [sp, #27]
   5e14c:	tst	r0, #1
   5e150:	bne	5e184 <__assert_fail@plt+0x4b5cc>
   5e154:	ldr	r1, [fp, #-20]	; 0xffffffec
   5e158:	ldr	r2, [fp, #12]
   5e15c:	add	r0, sp, #12
   5e160:	bl	5dc78 <__assert_fail@plt+0x4b0c0>
   5e164:	ldr	r1, [sp, #16]
   5e168:	and	r1, r1, #255	; 0xff
   5e16c:	cmp	r1, #21
   5e170:	beq	5e180 <__assert_fail@plt+0x4b5c8>
   5e174:	movw	r0, #11
   5e178:	str	r0, [fp, #-12]
   5e17c:	b	5e1a4 <__assert_fail@plt+0x4b5ec>
   5e180:	b	5e184 <__assert_fail@plt+0x4b5cc>
   5e184:	ldr	r0, [fp, #-16]
   5e188:	movw	r1, #0
   5e18c:	str	r1, [r0]
   5e190:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5e194:	ldrb	r0, [r0]
   5e198:	ldr	r2, [fp, #-16]
   5e19c:	strb	r0, [r2, #4]
   5e1a0:	str	r1, [fp, #-12]
   5e1a4:	ldr	r0, [fp, #-12]
   5e1a8:	sub	sp, fp, #8
   5e1ac:	pop	{r4, sl, fp, pc}
   5e1b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   5e1b4:	add	fp, sp, #28
   5e1b8:	sub	sp, sp, #100	; 0x64
   5e1bc:	ldr	ip, [fp, #40]	; 0x28
   5e1c0:	ldr	lr, [fp, #36]	; 0x24
   5e1c4:	ldr	r4, [fp, #32]
   5e1c8:	ldr	r5, [fp, #28]
   5e1cc:	ldr	r6, [fp, #24]
   5e1d0:	ldr	r7, [fp, #20]
   5e1d4:	ldr	r8, [fp, #16]
   5e1d8:	ldr	r9, [fp, #12]
   5e1dc:	ldr	sl, [fp, #8]
   5e1e0:	str	r0, [fp, #-36]	; 0xffffffdc
   5e1e4:	str	r1, [fp, #-40]	; 0xffffffd8
   5e1e8:	str	r2, [fp, #-44]	; 0xffffffd4
   5e1ec:	str	r3, [fp, #-48]	; 0xffffffd0
   5e1f0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   5e1f4:	ldr	r0, [r0]
   5e1f8:	cmp	r0, #2
   5e1fc:	movw	r0, #1
   5e200:	str	r0, [sp, #44]	; 0x2c
   5e204:	beq	5e250 <__assert_fail@plt+0x4b698>
   5e208:	ldr	r0, [fp, #-48]	; 0xffffffd0
   5e20c:	ldr	r0, [r0]
   5e210:	cmp	r0, #4
   5e214:	movw	r0, #1
   5e218:	str	r0, [sp, #44]	; 0x2c
   5e21c:	beq	5e250 <__assert_fail@plt+0x4b698>
   5e220:	ldr	r0, [fp, #8]
   5e224:	ldr	r0, [r0]
   5e228:	cmp	r0, #2
   5e22c:	movw	r0, #1
   5e230:	str	r0, [sp, #44]	; 0x2c
   5e234:	beq	5e250 <__assert_fail@plt+0x4b698>
   5e238:	ldr	r0, [fp, #8]
   5e23c:	ldr	r0, [r0]
   5e240:	cmp	r0, #4
   5e244:	movw	r0, #0
   5e248:	moveq	r0, #1
   5e24c:	str	r0, [sp, #44]	; 0x2c
   5e250:	ldr	r0, [sp, #44]	; 0x2c
   5e254:	tst	r0, #1
   5e258:	beq	5e268 <__assert_fail@plt+0x4b6b0>
   5e25c:	movw	r0, #11
   5e260:	str	r0, [fp, #-32]	; 0xffffffe0
   5e264:	b	5e628 <__assert_fail@plt+0x4ba70>
   5e268:	ldr	r0, [fp, #-48]	; 0xffffffd0
   5e26c:	ldr	r0, [r0]
   5e270:	cmp	r0, #3
   5e274:	bne	5e294 <__assert_fail@plt+0x4b6dc>
   5e278:	ldr	r0, [fp, #-48]	; 0xffffffd0
   5e27c:	ldr	r0, [r0, #4]
   5e280:	bl	12888 <strlen@plt>
   5e284:	cmp	r0, #1
   5e288:	movw	r0, #1
   5e28c:	str	r0, [sp, #40]	; 0x28
   5e290:	bhi	5e2d0 <__assert_fail@plt+0x4b718>
   5e294:	ldr	r0, [fp, #8]
   5e298:	ldr	r0, [r0]
   5e29c:	cmp	r0, #3
   5e2a0:	movw	r0, #0
   5e2a4:	str	r0, [sp, #36]	; 0x24
   5e2a8:	bne	5e2c8 <__assert_fail@plt+0x4b710>
   5e2ac:	ldr	r0, [fp, #8]
   5e2b0:	ldr	r0, [r0, #4]
   5e2b4:	bl	12888 <strlen@plt>
   5e2b8:	cmp	r0, #1
   5e2bc:	movw	r0, #0
   5e2c0:	movhi	r0, #1
   5e2c4:	str	r0, [sp, #36]	; 0x24
   5e2c8:	ldr	r0, [sp, #36]	; 0x24
   5e2cc:	str	r0, [sp, #40]	; 0x28
   5e2d0:	ldr	r0, [sp, #40]	; 0x28
   5e2d4:	tst	r0, #1
   5e2d8:	beq	5e2e8 <__assert_fail@plt+0x4b730>
   5e2dc:	movw	r0, #3
   5e2e0:	str	r0, [fp, #-32]	; 0xffffffe0
   5e2e4:	b	5e628 <__assert_fail@plt+0x4ba70>
   5e2e8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   5e2ec:	ldr	r0, [r0]
   5e2f0:	cmp	r0, #0
   5e2f4:	bne	5e308 <__assert_fail@plt+0x4b750>
   5e2f8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   5e2fc:	ldrb	r0, [r0, #4]
   5e300:	str	r0, [sp, #32]
   5e304:	b	5e340 <__assert_fail@plt+0x4b788>
   5e308:	ldr	r0, [fp, #-48]	; 0xffffffd0
   5e30c:	ldr	r0, [r0]
   5e310:	cmp	r0, #3
   5e314:	bne	5e32c <__assert_fail@plt+0x4b774>
   5e318:	ldr	r0, [fp, #-48]	; 0xffffffd0
   5e31c:	ldr	r0, [r0, #4]
   5e320:	ldrb	r0, [r0]
   5e324:	str	r0, [sp, #28]
   5e328:	b	5e338 <__assert_fail@plt+0x4b780>
   5e32c:	movw	r0, #0
   5e330:	str	r0, [sp, #28]
   5e334:	b	5e338 <__assert_fail@plt+0x4b780>
   5e338:	ldr	r0, [sp, #28]
   5e33c:	str	r0, [sp, #32]
   5e340:	ldr	r0, [sp, #32]
   5e344:	str	r0, [fp, #-52]	; 0xffffffcc
   5e348:	ldr	r0, [fp, #8]
   5e34c:	ldr	r0, [r0]
   5e350:	cmp	r0, #0
   5e354:	bne	5e368 <__assert_fail@plt+0x4b7b0>
   5e358:	ldr	r0, [fp, #8]
   5e35c:	ldrb	r0, [r0, #4]
   5e360:	str	r0, [sp, #24]
   5e364:	b	5e3a0 <__assert_fail@plt+0x4b7e8>
   5e368:	ldr	r0, [fp, #8]
   5e36c:	ldr	r0, [r0]
   5e370:	cmp	r0, #3
   5e374:	bne	5e38c <__assert_fail@plt+0x4b7d4>
   5e378:	ldr	r0, [fp, #8]
   5e37c:	ldr	r0, [r0, #4]
   5e380:	ldrb	r0, [r0]
   5e384:	str	r0, [sp, #20]
   5e388:	b	5e398 <__assert_fail@plt+0x4b7e0>
   5e38c:	movw	r0, #0
   5e390:	str	r0, [sp, #20]
   5e394:	b	5e398 <__assert_fail@plt+0x4b7e0>
   5e398:	ldr	r0, [sp, #20]
   5e39c:	str	r0, [sp, #24]
   5e3a0:	ldr	r0, [sp, #24]
   5e3a4:	str	r0, [fp, #-56]	; 0xffffffc8
   5e3a8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   5e3ac:	ldr	r0, [r0]
   5e3b0:	cmp	r0, #0
   5e3b4:	beq	5e3c8 <__assert_fail@plt+0x4b810>
   5e3b8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   5e3bc:	ldr	r0, [r0]
   5e3c0:	cmp	r0, #3
   5e3c4:	bne	5e3e0 <__assert_fail@plt+0x4b828>
   5e3c8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   5e3cc:	ldr	r1, [fp, #12]
   5e3d0:	and	r0, r0, #255	; 0xff
   5e3d4:	bl	5f878 <__assert_fail@plt+0x4ccc0>
   5e3d8:	str	r0, [sp, #16]
   5e3dc:	b	5e3ec <__assert_fail@plt+0x4b834>
   5e3e0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   5e3e4:	ldr	r0, [r0, #4]
   5e3e8:	str	r0, [sp, #16]
   5e3ec:	ldr	r0, [sp, #16]
   5e3f0:	str	r0, [fp, #-60]	; 0xffffffc4
   5e3f4:	ldr	r0, [fp, #8]
   5e3f8:	ldr	r0, [r0]
   5e3fc:	cmp	r0, #0
   5e400:	beq	5e414 <__assert_fail@plt+0x4b85c>
   5e404:	ldr	r0, [fp, #8]
   5e408:	ldr	r0, [r0]
   5e40c:	cmp	r0, #3
   5e410:	bne	5e42c <__assert_fail@plt+0x4b874>
   5e414:	ldr	r0, [fp, #-56]	; 0xffffffc8
   5e418:	ldr	r1, [fp, #12]
   5e41c:	and	r0, r0, #255	; 0xff
   5e420:	bl	5f878 <__assert_fail@plt+0x4ccc0>
   5e424:	str	r0, [sp, #12]
   5e428:	b	5e438 <__assert_fail@plt+0x4b880>
   5e42c:	ldr	r0, [fp, #8]
   5e430:	ldr	r0, [r0, #4]
   5e434:	str	r0, [sp, #12]
   5e438:	ldr	r0, [sp, #12]
   5e43c:	str	r0, [sp, #64]	; 0x40
   5e440:	ldr	r0, [fp, #-60]	; 0xffffffc4
   5e444:	cmn	r0, #1
   5e448:	beq	5e458 <__assert_fail@plt+0x4b8a0>
   5e44c:	ldr	r0, [sp, #64]	; 0x40
   5e450:	cmn	r0, #1
   5e454:	bne	5e464 <__assert_fail@plt+0x4b8ac>
   5e458:	movw	r0, #3
   5e45c:	str	r0, [fp, #-32]	; 0xffffffe0
   5e460:	b	5e628 <__assert_fail@plt+0x4ba70>
   5e464:	ldr	r0, [fp, #16]
   5e468:	and	r0, r0, #65536	; 0x10000
   5e46c:	cmp	r0, #0
   5e470:	movw	r0, #0
   5e474:	str	r0, [sp, #8]
   5e478:	beq	5e494 <__assert_fail@plt+0x4b8dc>
   5e47c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   5e480:	ldr	r1, [sp, #64]	; 0x40
   5e484:	cmp	r0, r1
   5e488:	movw	r0, #0
   5e48c:	movhi	r0, #1
   5e490:	str	r0, [sp, #8]
   5e494:	ldr	r0, [sp, #8]
   5e498:	tst	r0, #1
   5e49c:	beq	5e4ac <__assert_fail@plt+0x4b8f4>
   5e4a0:	movw	r0, #11
   5e4a4:	str	r0, [fp, #-32]	; 0xffffffe0
   5e4a8:	b	5e628 <__assert_fail@plt+0x4ba70>
   5e4ac:	b	5e4b0 <__assert_fail@plt+0x4b8f8>
   5e4b0:	ldr	r0, [fp, #12]
   5e4b4:	ldr	r0, [r0, #92]	; 0x5c
   5e4b8:	cmp	r0, #1
   5e4bc:	ble	5e5cc <__assert_fail@plt+0x4ba14>
   5e4c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   5e4c4:	ldr	r0, [r0]
   5e4c8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   5e4cc:	ldr	r1, [r1, #32]
   5e4d0:	cmp	r0, r1
   5e4d4:	bne	5e598 <__assert_fail@plt+0x4b9e0>
   5e4d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5e4dc:	ldr	r0, [r0, #32]
   5e4e0:	mov	r1, #1
   5e4e4:	orr	r0, r1, r0, lsl #1
   5e4e8:	str	r0, [sp, #52]	; 0x34
   5e4ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5e4f0:	ldr	r0, [r0, #4]
   5e4f4:	ldr	r1, [sp, #52]	; 0x34
   5e4f8:	lsl	r1, r1, #2
   5e4fc:	bl	538c8 <__assert_fail@plt+0x40d10>
   5e500:	str	r0, [sp, #60]	; 0x3c
   5e504:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5e508:	ldr	r0, [r0, #8]
   5e50c:	ldr	r1, [sp, #52]	; 0x34
   5e510:	lsl	r1, r1, #2
   5e514:	bl	538c8 <__assert_fail@plt+0x40d10>
   5e518:	str	r0, [sp, #56]	; 0x38
   5e51c:	ldr	r0, [sp, #60]	; 0x3c
   5e520:	movw	r1, #0
   5e524:	cmp	r0, r1
   5e528:	movw	r0, #1
   5e52c:	str	r0, [sp, #4]
   5e530:	beq	5e54c <__assert_fail@plt+0x4b994>
   5e534:	ldr	r0, [sp, #56]	; 0x38
   5e538:	movw	r1, #0
   5e53c:	cmp	r0, r1
   5e540:	movw	r0, #0
   5e544:	moveq	r0, #1
   5e548:	str	r0, [sp, #4]
   5e54c:	ldr	r0, [sp, #4]
   5e550:	tst	r0, #1
   5e554:	beq	5e574 <__assert_fail@plt+0x4b9bc>
   5e558:	ldr	r0, [sp, #60]	; 0x3c
   5e55c:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   5e560:	ldr	r0, [sp, #56]	; 0x38
   5e564:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   5e568:	movw	r0, #12
   5e56c:	str	r0, [fp, #-32]	; 0xffffffe0
   5e570:	b	5e628 <__assert_fail@plt+0x4ba70>
   5e574:	ldr	r0, [sp, #60]	; 0x3c
   5e578:	ldr	r1, [fp, #-40]	; 0xffffffd8
   5e57c:	str	r0, [r1, #4]
   5e580:	ldr	r0, [sp, #56]	; 0x38
   5e584:	ldr	r1, [fp, #-40]	; 0xffffffd8
   5e588:	str	r0, [r1, #8]
   5e58c:	ldr	r0, [sp, #52]	; 0x34
   5e590:	ldr	r1, [fp, #-44]	; 0xffffffd4
   5e594:	str	r0, [r1]
   5e598:	ldr	r0, [fp, #-60]	; 0xffffffc4
   5e59c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   5e5a0:	ldr	r2, [r1, #4]
   5e5a4:	ldr	r1, [r1, #32]
   5e5a8:	str	r0, [r2, r1, lsl #2]
   5e5ac:	ldr	r0, [sp, #64]	; 0x40
   5e5b0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   5e5b4:	ldr	r2, [r1, #8]
   5e5b8:	ldr	r3, [r1, #32]
   5e5bc:	add	ip, r3, #1
   5e5c0:	str	ip, [r1, #32]
   5e5c4:	add	r1, r2, r3, lsl #2
   5e5c8:	str	r0, [r1]
   5e5cc:	movw	r0, #0
   5e5d0:	str	r0, [sp, #48]	; 0x30
   5e5d4:	ldr	r0, [sp, #48]	; 0x30
   5e5d8:	cmp	r0, #256	; 0x100
   5e5dc:	bcs	5e620 <__assert_fail@plt+0x4ba68>
   5e5e0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   5e5e4:	ldr	r1, [sp, #48]	; 0x30
   5e5e8:	cmp	r0, r1
   5e5ec:	bhi	5e60c <__assert_fail@plt+0x4ba54>
   5e5f0:	ldr	r0, [sp, #48]	; 0x30
   5e5f4:	ldr	r1, [sp, #64]	; 0x40
   5e5f8:	cmp	r0, r1
   5e5fc:	bhi	5e60c <__assert_fail@plt+0x4ba54>
   5e600:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5e604:	ldr	r1, [sp, #48]	; 0x30
   5e608:	bl	5dfe8 <__assert_fail@plt+0x4b430>
   5e60c:	b	5e610 <__assert_fail@plt+0x4ba58>
   5e610:	ldr	r0, [sp, #48]	; 0x30
   5e614:	add	r0, r0, #1
   5e618:	str	r0, [sp, #48]	; 0x30
   5e61c:	b	5e5d4 <__assert_fail@plt+0x4ba1c>
   5e620:	movw	r0, #0
   5e624:	str	r0, [fp, #-32]	; 0xffffffe0
   5e628:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5e62c:	sub	sp, fp, #28
   5e630:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   5e634:	push	{fp, lr}
   5e638:	mov	fp, sp
   5e63c:	sub	sp, sp, #24
   5e640:	str	r0, [fp, #-8]
   5e644:	str	r1, [sp, #12]
   5e648:	str	r2, [sp, #8]
   5e64c:	str	r3, [sp, #4]
   5e650:	ldr	r0, [sp, #4]
   5e654:	bl	12888 <strlen@plt>
   5e658:	cmp	r0, #1
   5e65c:	beq	5e66c <__assert_fail@plt+0x4bab4>
   5e660:	movw	r0, #3
   5e664:	str	r0, [fp, #-4]
   5e668:	b	5e684 <__assert_fail@plt+0x4bacc>
   5e66c:	ldr	r0, [fp, #-8]
   5e670:	ldr	r1, [sp, #4]
   5e674:	ldrb	r1, [r1]
   5e678:	bl	5dfe8 <__assert_fail@plt+0x4b430>
   5e67c:	movw	r0, #0
   5e680:	str	r0, [fp, #-4]
   5e684:	ldr	r0, [fp, #-4]
   5e688:	mov	sp, fp
   5e68c:	pop	{fp, pc}
   5e690:	push	{r4, r5, fp, lr}
   5e694:	add	fp, sp, #8
   5e698:	sub	sp, sp, #40	; 0x28
   5e69c:	ldr	ip, [fp, #20]
   5e6a0:	ldr	lr, [fp, #16]
   5e6a4:	ldr	r4, [fp, #12]
   5e6a8:	ldr	r5, [fp, #8]
   5e6ac:	str	r0, [fp, #-16]
   5e6b0:	str	r1, [fp, #-20]	; 0xffffffec
   5e6b4:	str	r2, [sp, #24]
   5e6b8:	str	r3, [sp, #20]
   5e6bc:	ldr	r0, [sp, #20]
   5e6c0:	str	ip, [sp, #12]
   5e6c4:	str	lr, [sp, #8]
   5e6c8:	str	r4, [sp, #4]
   5e6cc:	str	r5, [sp]
   5e6d0:	bl	12888 <strlen@plt>
   5e6d4:	str	r0, [sp, #16]
   5e6d8:	ldr	r0, [sp, #16]
   5e6dc:	cmp	r0, #1
   5e6e0:	beq	5e6f0 <__assert_fail@plt+0x4bb38>
   5e6e4:	movw	r0, #3
   5e6e8:	str	r0, [fp, #-12]
   5e6ec:	b	5e708 <__assert_fail@plt+0x4bb50>
   5e6f0:	ldr	r0, [fp, #-16]
   5e6f4:	ldr	r1, [sp, #20]
   5e6f8:	ldrb	r1, [r1]
   5e6fc:	bl	5dfe8 <__assert_fail@plt+0x4b430>
   5e700:	movw	r0, #0
   5e704:	str	r0, [fp, #-12]
   5e708:	ldr	r0, [fp, #-12]
   5e70c:	sub	sp, fp, #8
   5e710:	pop	{r4, r5, fp, pc}
   5e714:	push	{fp, lr}
   5e718:	mov	fp, sp
   5e71c:	sub	sp, sp, #40	; 0x28
   5e720:	ldr	ip, [fp, #12]
   5e724:	ldr	lr, [fp, #8]
   5e728:	str	r0, [fp, #-8]
   5e72c:	str	r1, [fp, #-12]
   5e730:	str	r2, [fp, #-16]
   5e734:	str	r3, [sp, #20]
   5e738:	ldr	r0, [fp, #8]
   5e73c:	str	r0, [sp, #12]
   5e740:	ldr	r0, [fp, #12]
   5e744:	and	r0, r0, #4194304	; 0x400000
   5e748:	cmp	r0, #0
   5e74c:	beq	5e78c <__assert_fail@plt+0x4bbd4>
   5e750:	ldr	r0, [sp, #12]
   5e754:	movw	r1, #49990	; 0xc346
   5e758:	movt	r1, #7
   5e75c:	bl	124c8 <strcmp@plt>
   5e760:	cmp	r0, #0
   5e764:	beq	5e780 <__assert_fail@plt+0x4bbc8>
   5e768:	ldr	r0, [sp, #12]
   5e76c:	movw	r1, #49996	; 0xc34c
   5e770:	movt	r1, #7
   5e774:	bl	124c8 <strcmp@plt>
   5e778:	cmp	r0, #0
   5e77c:	bne	5e78c <__assert_fail@plt+0x4bbd4>
   5e780:	movw	r0, #50002	; 0xc352
   5e784:	movt	r0, #7
   5e788:	str	r0, [sp, #12]
   5e78c:	ldr	r0, [sp, #20]
   5e790:	ldr	r0, [r0]
   5e794:	ldr	r1, [fp, #-16]
   5e798:	ldr	r1, [r1, #36]	; 0x24
   5e79c:	cmp	r0, r1
   5e7a0:	bne	5e804 <__assert_fail@plt+0x4bc4c>
   5e7a4:	ldr	r0, [fp, #-16]
   5e7a8:	ldr	r0, [r0, #36]	; 0x24
   5e7ac:	mov	r1, #1
   5e7b0:	orr	r0, r1, r0, lsl #1
   5e7b4:	str	r0, [sp, #8]
   5e7b8:	ldr	r0, [fp, #-16]
   5e7bc:	ldr	r0, [r0, #12]
   5e7c0:	ldr	r1, [sp, #8]
   5e7c4:	lsl	r1, r1, #2
   5e7c8:	bl	538c8 <__assert_fail@plt+0x40d10>
   5e7cc:	str	r0, [sp, #4]
   5e7d0:	ldr	r0, [sp, #4]
   5e7d4:	movw	r1, #0
   5e7d8:	cmp	r0, r1
   5e7dc:	bne	5e7ec <__assert_fail@plt+0x4bc34>
   5e7e0:	movw	r0, #12
   5e7e4:	str	r0, [fp, #-4]
   5e7e8:	b	5f3a8 <__assert_fail@plt+0x4c7f0>
   5e7ec:	ldr	r0, [sp, #4]
   5e7f0:	ldr	r1, [fp, #-16]
   5e7f4:	str	r0, [r1, #12]
   5e7f8:	ldr	r0, [sp, #8]
   5e7fc:	ldr	r1, [sp, #20]
   5e800:	str	r0, [r1]
   5e804:	ldr	r0, [sp, #12]
   5e808:	bl	12468 <wctype@plt>
   5e80c:	ldr	r1, [fp, #-16]
   5e810:	ldr	r2, [r1, #12]
   5e814:	ldr	r3, [r1, #36]	; 0x24
   5e818:	add	ip, r3, #1
   5e81c:	str	ip, [r1, #36]	; 0x24
   5e820:	add	r1, r2, r3, lsl #2
   5e824:	str	r0, [r1]
   5e828:	ldr	r0, [sp, #12]
   5e82c:	movw	r1, #49976	; 0xc338
   5e830:	movt	r1, #7
   5e834:	bl	124c8 <strcmp@plt>
   5e838:	cmp	r0, #0
   5e83c:	bne	5e918 <__assert_fail@plt+0x4bd60>
   5e840:	b	5e844 <__assert_fail@plt+0x4bc8c>
   5e844:	ldr	r0, [fp, #-8]
   5e848:	movw	r1, #0
   5e84c:	cmp	r0, r1
   5e850:	beq	5e8b8 <__assert_fail@plt+0x4bd00>
   5e854:	movw	r0, #0
   5e858:	str	r0, [sp, #16]
   5e85c:	ldr	r0, [sp, #16]
   5e860:	cmp	r0, #256	; 0x100
   5e864:	bge	5e8b4 <__assert_fail@plt+0x4bcfc>
   5e868:	bl	12834 <__ctype_b_loc@plt>
   5e86c:	ldr	r0, [r0]
   5e870:	ldr	r1, [sp, #16]
   5e874:	add	r0, r0, r1, lsl #1
   5e878:	ldrh	r0, [r0]
   5e87c:	and	r0, r0, #8
   5e880:	cmp	r0, #0
   5e884:	beq	5e8a0 <__assert_fail@plt+0x4bce8>
   5e888:	ldr	r0, [fp, #-12]
   5e88c:	ldr	r1, [fp, #-8]
   5e890:	ldr	r2, [sp, #16]
   5e894:	add	r1, r1, r2
   5e898:	ldrb	r1, [r1]
   5e89c:	bl	5dfe8 <__assert_fail@plt+0x4b430>
   5e8a0:	b	5e8a4 <__assert_fail@plt+0x4bcec>
   5e8a4:	ldr	r0, [sp, #16]
   5e8a8:	add	r0, r0, #1
   5e8ac:	str	r0, [sp, #16]
   5e8b0:	b	5e85c <__assert_fail@plt+0x4bca4>
   5e8b4:	b	5e910 <__assert_fail@plt+0x4bd58>
   5e8b8:	movw	r0, #0
   5e8bc:	str	r0, [sp, #16]
   5e8c0:	ldr	r0, [sp, #16]
   5e8c4:	cmp	r0, #256	; 0x100
   5e8c8:	bge	5e90c <__assert_fail@plt+0x4bd54>
   5e8cc:	bl	12834 <__ctype_b_loc@plt>
   5e8d0:	ldr	r0, [r0]
   5e8d4:	ldr	r1, [sp, #16]
   5e8d8:	add	r0, r0, r1, lsl #1
   5e8dc:	ldrh	r0, [r0]
   5e8e0:	and	r0, r0, #8
   5e8e4:	cmp	r0, #0
   5e8e8:	beq	5e8f8 <__assert_fail@plt+0x4bd40>
   5e8ec:	ldr	r0, [fp, #-12]
   5e8f0:	ldr	r1, [sp, #16]
   5e8f4:	bl	5dfe8 <__assert_fail@plt+0x4b430>
   5e8f8:	b	5e8fc <__assert_fail@plt+0x4bd44>
   5e8fc:	ldr	r0, [sp, #16]
   5e900:	add	r0, r0, #1
   5e904:	str	r0, [sp, #16]
   5e908:	b	5e8c0 <__assert_fail@plt+0x4bd08>
   5e90c:	b	5e910 <__assert_fail@plt+0x4bd58>
   5e910:	b	5e914 <__assert_fail@plt+0x4bd5c>
   5e914:	b	5f3a0 <__assert_fail@plt+0x4c7e8>
   5e918:	ldr	r0, [sp, #12]
   5e91c:	movw	r1, #50008	; 0xc358
   5e920:	movt	r1, #7
   5e924:	bl	124c8 <strcmp@plt>
   5e928:	cmp	r0, #0
   5e92c:	bne	5ea08 <__assert_fail@plt+0x4be50>
   5e930:	b	5e934 <__assert_fail@plt+0x4bd7c>
   5e934:	ldr	r0, [fp, #-8]
   5e938:	movw	r1, #0
   5e93c:	cmp	r0, r1
   5e940:	beq	5e9a8 <__assert_fail@plt+0x4bdf0>
   5e944:	movw	r0, #0
   5e948:	str	r0, [sp, #16]
   5e94c:	ldr	r0, [sp, #16]
   5e950:	cmp	r0, #256	; 0x100
   5e954:	bge	5e9a4 <__assert_fail@plt+0x4bdec>
   5e958:	bl	12834 <__ctype_b_loc@plt>
   5e95c:	ldr	r0, [r0]
   5e960:	ldr	r1, [sp, #16]
   5e964:	add	r0, r0, r1, lsl #1
   5e968:	ldrh	r0, [r0]
   5e96c:	and	r0, r0, #2
   5e970:	cmp	r0, #0
   5e974:	beq	5e990 <__assert_fail@plt+0x4bdd8>
   5e978:	ldr	r0, [fp, #-12]
   5e97c:	ldr	r1, [fp, #-8]
   5e980:	ldr	r2, [sp, #16]
   5e984:	add	r1, r1, r2
   5e988:	ldrb	r1, [r1]
   5e98c:	bl	5dfe8 <__assert_fail@plt+0x4b430>
   5e990:	b	5e994 <__assert_fail@plt+0x4bddc>
   5e994:	ldr	r0, [sp, #16]
   5e998:	add	r0, r0, #1
   5e99c:	str	r0, [sp, #16]
   5e9a0:	b	5e94c <__assert_fail@plt+0x4bd94>
   5e9a4:	b	5ea00 <__assert_fail@plt+0x4be48>
   5e9a8:	movw	r0, #0
   5e9ac:	str	r0, [sp, #16]
   5e9b0:	ldr	r0, [sp, #16]
   5e9b4:	cmp	r0, #256	; 0x100
   5e9b8:	bge	5e9fc <__assert_fail@plt+0x4be44>
   5e9bc:	bl	12834 <__ctype_b_loc@plt>
   5e9c0:	ldr	r0, [r0]
   5e9c4:	ldr	r1, [sp, #16]
   5e9c8:	add	r0, r0, r1, lsl #1
   5e9cc:	ldrh	r0, [r0]
   5e9d0:	and	r0, r0, #2
   5e9d4:	cmp	r0, #0
   5e9d8:	beq	5e9e8 <__assert_fail@plt+0x4be30>
   5e9dc:	ldr	r0, [fp, #-12]
   5e9e0:	ldr	r1, [sp, #16]
   5e9e4:	bl	5dfe8 <__assert_fail@plt+0x4b430>
   5e9e8:	b	5e9ec <__assert_fail@plt+0x4be34>
   5e9ec:	ldr	r0, [sp, #16]
   5e9f0:	add	r0, r0, #1
   5e9f4:	str	r0, [sp, #16]
   5e9f8:	b	5e9b0 <__assert_fail@plt+0x4bdf8>
   5e9fc:	b	5ea00 <__assert_fail@plt+0x4be48>
   5ea00:	b	5ea04 <__assert_fail@plt+0x4be4c>
   5ea04:	b	5f39c <__assert_fail@plt+0x4c7e4>
   5ea08:	ldr	r0, [sp, #12]
   5ea0c:	movw	r1, #49996	; 0xc34c
   5ea10:	movt	r1, #7
   5ea14:	bl	124c8 <strcmp@plt>
   5ea18:	cmp	r0, #0
   5ea1c:	bne	5eaf8 <__assert_fail@plt+0x4bf40>
   5ea20:	b	5ea24 <__assert_fail@plt+0x4be6c>
   5ea24:	ldr	r0, [fp, #-8]
   5ea28:	movw	r1, #0
   5ea2c:	cmp	r0, r1
   5ea30:	beq	5ea98 <__assert_fail@plt+0x4bee0>
   5ea34:	movw	r0, #0
   5ea38:	str	r0, [sp, #16]
   5ea3c:	ldr	r0, [sp, #16]
   5ea40:	cmp	r0, #256	; 0x100
   5ea44:	bge	5ea94 <__assert_fail@plt+0x4bedc>
   5ea48:	bl	12834 <__ctype_b_loc@plt>
   5ea4c:	ldr	r0, [r0]
   5ea50:	ldr	r1, [sp, #16]
   5ea54:	add	r0, r0, r1, lsl #1
   5ea58:	ldrh	r0, [r0]
   5ea5c:	and	r0, r0, #512	; 0x200
   5ea60:	cmp	r0, #0
   5ea64:	beq	5ea80 <__assert_fail@plt+0x4bec8>
   5ea68:	ldr	r0, [fp, #-12]
   5ea6c:	ldr	r1, [fp, #-8]
   5ea70:	ldr	r2, [sp, #16]
   5ea74:	add	r1, r1, r2
   5ea78:	ldrb	r1, [r1]
   5ea7c:	bl	5dfe8 <__assert_fail@plt+0x4b430>
   5ea80:	b	5ea84 <__assert_fail@plt+0x4becc>
   5ea84:	ldr	r0, [sp, #16]
   5ea88:	add	r0, r0, #1
   5ea8c:	str	r0, [sp, #16]
   5ea90:	b	5ea3c <__assert_fail@plt+0x4be84>
   5ea94:	b	5eaf0 <__assert_fail@plt+0x4bf38>
   5ea98:	movw	r0, #0
   5ea9c:	str	r0, [sp, #16]
   5eaa0:	ldr	r0, [sp, #16]
   5eaa4:	cmp	r0, #256	; 0x100
   5eaa8:	bge	5eaec <__assert_fail@plt+0x4bf34>
   5eaac:	bl	12834 <__ctype_b_loc@plt>
   5eab0:	ldr	r0, [r0]
   5eab4:	ldr	r1, [sp, #16]
   5eab8:	add	r0, r0, r1, lsl #1
   5eabc:	ldrh	r0, [r0]
   5eac0:	and	r0, r0, #512	; 0x200
   5eac4:	cmp	r0, #0
   5eac8:	beq	5ead8 <__assert_fail@plt+0x4bf20>
   5eacc:	ldr	r0, [fp, #-12]
   5ead0:	ldr	r1, [sp, #16]
   5ead4:	bl	5dfe8 <__assert_fail@plt+0x4b430>
   5ead8:	b	5eadc <__assert_fail@plt+0x4bf24>
   5eadc:	ldr	r0, [sp, #16]
   5eae0:	add	r0, r0, #1
   5eae4:	str	r0, [sp, #16]
   5eae8:	b	5eaa0 <__assert_fail@plt+0x4bee8>
   5eaec:	b	5eaf0 <__assert_fail@plt+0x4bf38>
   5eaf0:	b	5eaf4 <__assert_fail@plt+0x4bf3c>
   5eaf4:	b	5f398 <__assert_fail@plt+0x4c7e0>
   5eaf8:	ldr	r0, [sp, #12]
   5eafc:	movw	r1, #49984	; 0xc340
   5eb00:	movt	r1, #7
   5eb04:	bl	124c8 <strcmp@plt>
   5eb08:	cmp	r0, #0
   5eb0c:	bne	5ebe8 <__assert_fail@plt+0x4c030>
   5eb10:	b	5eb14 <__assert_fail@plt+0x4bf5c>
   5eb14:	ldr	r0, [fp, #-8]
   5eb18:	movw	r1, #0
   5eb1c:	cmp	r0, r1
   5eb20:	beq	5eb88 <__assert_fail@plt+0x4bfd0>
   5eb24:	movw	r0, #0
   5eb28:	str	r0, [sp, #16]
   5eb2c:	ldr	r0, [sp, #16]
   5eb30:	cmp	r0, #256	; 0x100
   5eb34:	bge	5eb84 <__assert_fail@plt+0x4bfcc>
   5eb38:	bl	12834 <__ctype_b_loc@plt>
   5eb3c:	ldr	r0, [r0]
   5eb40:	ldr	r1, [sp, #16]
   5eb44:	add	r0, r0, r1, lsl #1
   5eb48:	ldrh	r0, [r0]
   5eb4c:	and	r0, r0, #8192	; 0x2000
   5eb50:	cmp	r0, #0
   5eb54:	beq	5eb70 <__assert_fail@plt+0x4bfb8>
   5eb58:	ldr	r0, [fp, #-12]
   5eb5c:	ldr	r1, [fp, #-8]
   5eb60:	ldr	r2, [sp, #16]
   5eb64:	add	r1, r1, r2
   5eb68:	ldrb	r1, [r1]
   5eb6c:	bl	5dfe8 <__assert_fail@plt+0x4b430>
   5eb70:	b	5eb74 <__assert_fail@plt+0x4bfbc>
   5eb74:	ldr	r0, [sp, #16]
   5eb78:	add	r0, r0, #1
   5eb7c:	str	r0, [sp, #16]
   5eb80:	b	5eb2c <__assert_fail@plt+0x4bf74>
   5eb84:	b	5ebe0 <__assert_fail@plt+0x4c028>
   5eb88:	movw	r0, #0
   5eb8c:	str	r0, [sp, #16]
   5eb90:	ldr	r0, [sp, #16]
   5eb94:	cmp	r0, #256	; 0x100
   5eb98:	bge	5ebdc <__assert_fail@plt+0x4c024>
   5eb9c:	bl	12834 <__ctype_b_loc@plt>
   5eba0:	ldr	r0, [r0]
   5eba4:	ldr	r1, [sp, #16]
   5eba8:	add	r0, r0, r1, lsl #1
   5ebac:	ldrh	r0, [r0]
   5ebb0:	and	r0, r0, #8192	; 0x2000
   5ebb4:	cmp	r0, #0
   5ebb8:	beq	5ebc8 <__assert_fail@plt+0x4c010>
   5ebbc:	ldr	r0, [fp, #-12]
   5ebc0:	ldr	r1, [sp, #16]
   5ebc4:	bl	5dfe8 <__assert_fail@plt+0x4b430>
   5ebc8:	b	5ebcc <__assert_fail@plt+0x4c014>
   5ebcc:	ldr	r0, [sp, #16]
   5ebd0:	add	r0, r0, #1
   5ebd4:	str	r0, [sp, #16]
   5ebd8:	b	5eb90 <__assert_fail@plt+0x4bfd8>
   5ebdc:	b	5ebe0 <__assert_fail@plt+0x4c028>
   5ebe0:	b	5ebe4 <__assert_fail@plt+0x4c02c>
   5ebe4:	b	5f394 <__assert_fail@plt+0x4c7dc>
   5ebe8:	ldr	r0, [sp, #12]
   5ebec:	movw	r1, #50002	; 0xc352
   5ebf0:	movt	r1, #7
   5ebf4:	bl	124c8 <strcmp@plt>
   5ebf8:	cmp	r0, #0
   5ebfc:	bne	5ecd8 <__assert_fail@plt+0x4c120>
   5ec00:	b	5ec04 <__assert_fail@plt+0x4c04c>
   5ec04:	ldr	r0, [fp, #-8]
   5ec08:	movw	r1, #0
   5ec0c:	cmp	r0, r1
   5ec10:	beq	5ec78 <__assert_fail@plt+0x4c0c0>
   5ec14:	movw	r0, #0
   5ec18:	str	r0, [sp, #16]
   5ec1c:	ldr	r0, [sp, #16]
   5ec20:	cmp	r0, #256	; 0x100
   5ec24:	bge	5ec74 <__assert_fail@plt+0x4c0bc>
   5ec28:	bl	12834 <__ctype_b_loc@plt>
   5ec2c:	ldr	r0, [r0]
   5ec30:	ldr	r1, [sp, #16]
   5ec34:	add	r0, r0, r1, lsl #1
   5ec38:	ldrh	r0, [r0]
   5ec3c:	and	r0, r0, #1024	; 0x400
   5ec40:	cmp	r0, #0
   5ec44:	beq	5ec60 <__assert_fail@plt+0x4c0a8>
   5ec48:	ldr	r0, [fp, #-12]
   5ec4c:	ldr	r1, [fp, #-8]
   5ec50:	ldr	r2, [sp, #16]
   5ec54:	add	r1, r1, r2
   5ec58:	ldrb	r1, [r1]
   5ec5c:	bl	5dfe8 <__assert_fail@plt+0x4b430>
   5ec60:	b	5ec64 <__assert_fail@plt+0x4c0ac>
   5ec64:	ldr	r0, [sp, #16]
   5ec68:	add	r0, r0, #1
   5ec6c:	str	r0, [sp, #16]
   5ec70:	b	5ec1c <__assert_fail@plt+0x4c064>
   5ec74:	b	5ecd0 <__assert_fail@plt+0x4c118>
   5ec78:	movw	r0, #0
   5ec7c:	str	r0, [sp, #16]
   5ec80:	ldr	r0, [sp, #16]
   5ec84:	cmp	r0, #256	; 0x100
   5ec88:	bge	5eccc <__assert_fail@plt+0x4c114>
   5ec8c:	bl	12834 <__ctype_b_loc@plt>
   5ec90:	ldr	r0, [r0]
   5ec94:	ldr	r1, [sp, #16]
   5ec98:	add	r0, r0, r1, lsl #1
   5ec9c:	ldrh	r0, [r0]
   5eca0:	and	r0, r0, #1024	; 0x400
   5eca4:	cmp	r0, #0
   5eca8:	beq	5ecb8 <__assert_fail@plt+0x4c100>
   5ecac:	ldr	r0, [fp, #-12]
   5ecb0:	ldr	r1, [sp, #16]
   5ecb4:	bl	5dfe8 <__assert_fail@plt+0x4b430>
   5ecb8:	b	5ecbc <__assert_fail@plt+0x4c104>
   5ecbc:	ldr	r0, [sp, #16]
   5ecc0:	add	r0, r0, #1
   5ecc4:	str	r0, [sp, #16]
   5ecc8:	b	5ec80 <__assert_fail@plt+0x4c0c8>
   5eccc:	b	5ecd0 <__assert_fail@plt+0x4c118>
   5ecd0:	b	5ecd4 <__assert_fail@plt+0x4c11c>
   5ecd4:	b	5f390 <__assert_fail@plt+0x4c7d8>
   5ecd8:	ldr	r0, [sp, #12]
   5ecdc:	movw	r1, #50033	; 0xc371
   5ece0:	movt	r1, #7
   5ece4:	bl	124c8 <strcmp@plt>
   5ece8:	cmp	r0, #0
   5ecec:	bne	5edc8 <__assert_fail@plt+0x4c210>
   5ecf0:	b	5ecf4 <__assert_fail@plt+0x4c13c>
   5ecf4:	ldr	r0, [fp, #-8]
   5ecf8:	movw	r1, #0
   5ecfc:	cmp	r0, r1
   5ed00:	beq	5ed68 <__assert_fail@plt+0x4c1b0>
   5ed04:	movw	r0, #0
   5ed08:	str	r0, [sp, #16]
   5ed0c:	ldr	r0, [sp, #16]
   5ed10:	cmp	r0, #256	; 0x100
   5ed14:	bge	5ed64 <__assert_fail@plt+0x4c1ac>
   5ed18:	bl	12834 <__ctype_b_loc@plt>
   5ed1c:	ldr	r0, [r0]
   5ed20:	ldr	r1, [sp, #16]
   5ed24:	add	r0, r0, r1, lsl #1
   5ed28:	ldrh	r0, [r0]
   5ed2c:	and	r0, r0, #2048	; 0x800
   5ed30:	cmp	r0, #0
   5ed34:	beq	5ed50 <__assert_fail@plt+0x4c198>
   5ed38:	ldr	r0, [fp, #-12]
   5ed3c:	ldr	r1, [fp, #-8]
   5ed40:	ldr	r2, [sp, #16]
   5ed44:	add	r1, r1, r2
   5ed48:	ldrb	r1, [r1]
   5ed4c:	bl	5dfe8 <__assert_fail@plt+0x4b430>
   5ed50:	b	5ed54 <__assert_fail@plt+0x4c19c>
   5ed54:	ldr	r0, [sp, #16]
   5ed58:	add	r0, r0, #1
   5ed5c:	str	r0, [sp, #16]
   5ed60:	b	5ed0c <__assert_fail@plt+0x4c154>
   5ed64:	b	5edc0 <__assert_fail@plt+0x4c208>
   5ed68:	movw	r0, #0
   5ed6c:	str	r0, [sp, #16]
   5ed70:	ldr	r0, [sp, #16]
   5ed74:	cmp	r0, #256	; 0x100
   5ed78:	bge	5edbc <__assert_fail@plt+0x4c204>
   5ed7c:	bl	12834 <__ctype_b_loc@plt>
   5ed80:	ldr	r0, [r0]
   5ed84:	ldr	r1, [sp, #16]
   5ed88:	add	r0, r0, r1, lsl #1
   5ed8c:	ldrh	r0, [r0]
   5ed90:	and	r0, r0, #2048	; 0x800
   5ed94:	cmp	r0, #0
   5ed98:	beq	5eda8 <__assert_fail@plt+0x4c1f0>
   5ed9c:	ldr	r0, [fp, #-12]
   5eda0:	ldr	r1, [sp, #16]
   5eda4:	bl	5dfe8 <__assert_fail@plt+0x4b430>
   5eda8:	b	5edac <__assert_fail@plt+0x4c1f4>
   5edac:	ldr	r0, [sp, #16]
   5edb0:	add	r0, r0, #1
   5edb4:	str	r0, [sp, #16]
   5edb8:	b	5ed70 <__assert_fail@plt+0x4c1b8>
   5edbc:	b	5edc0 <__assert_fail@plt+0x4c208>
   5edc0:	b	5edc4 <__assert_fail@plt+0x4c20c>
   5edc4:	b	5f38c <__assert_fail@plt+0x4c7d4>
   5edc8:	ldr	r0, [sp, #12]
   5edcc:	movw	r1, #25840	; 0x64f0
   5edd0:	movt	r1, #7
   5edd4:	bl	124c8 <strcmp@plt>
   5edd8:	cmp	r0, #0
   5eddc:	bne	5eeb8 <__assert_fail@plt+0x4c300>
   5ede0:	b	5ede4 <__assert_fail@plt+0x4c22c>
   5ede4:	ldr	r0, [fp, #-8]
   5ede8:	movw	r1, #0
   5edec:	cmp	r0, r1
   5edf0:	beq	5ee58 <__assert_fail@plt+0x4c2a0>
   5edf4:	movw	r0, #0
   5edf8:	str	r0, [sp, #16]
   5edfc:	ldr	r0, [sp, #16]
   5ee00:	cmp	r0, #256	; 0x100
   5ee04:	bge	5ee54 <__assert_fail@plt+0x4c29c>
   5ee08:	bl	12834 <__ctype_b_loc@plt>
   5ee0c:	ldr	r0, [r0]
   5ee10:	ldr	r1, [sp, #16]
   5ee14:	add	r0, r0, r1, lsl #1
   5ee18:	ldrh	r0, [r0]
   5ee1c:	and	r0, r0, #16384	; 0x4000
   5ee20:	cmp	r0, #0
   5ee24:	beq	5ee40 <__assert_fail@plt+0x4c288>
   5ee28:	ldr	r0, [fp, #-12]
   5ee2c:	ldr	r1, [fp, #-8]
   5ee30:	ldr	r2, [sp, #16]
   5ee34:	add	r1, r1, r2
   5ee38:	ldrb	r1, [r1]
   5ee3c:	bl	5dfe8 <__assert_fail@plt+0x4b430>
   5ee40:	b	5ee44 <__assert_fail@plt+0x4c28c>
   5ee44:	ldr	r0, [sp, #16]
   5ee48:	add	r0, r0, #1
   5ee4c:	str	r0, [sp, #16]
   5ee50:	b	5edfc <__assert_fail@plt+0x4c244>
   5ee54:	b	5eeb0 <__assert_fail@plt+0x4c2f8>
   5ee58:	movw	r0, #0
   5ee5c:	str	r0, [sp, #16]
   5ee60:	ldr	r0, [sp, #16]
   5ee64:	cmp	r0, #256	; 0x100
   5ee68:	bge	5eeac <__assert_fail@plt+0x4c2f4>
   5ee6c:	bl	12834 <__ctype_b_loc@plt>
   5ee70:	ldr	r0, [r0]
   5ee74:	ldr	r1, [sp, #16]
   5ee78:	add	r0, r0, r1, lsl #1
   5ee7c:	ldrh	r0, [r0]
   5ee80:	and	r0, r0, #16384	; 0x4000
   5ee84:	cmp	r0, #0
   5ee88:	beq	5ee98 <__assert_fail@plt+0x4c2e0>
   5ee8c:	ldr	r0, [fp, #-12]
   5ee90:	ldr	r1, [sp, #16]
   5ee94:	bl	5dfe8 <__assert_fail@plt+0x4b430>
   5ee98:	b	5ee9c <__assert_fail@plt+0x4c2e4>
   5ee9c:	ldr	r0, [sp, #16]
   5eea0:	add	r0, r0, #1
   5eea4:	str	r0, [sp, #16]
   5eea8:	b	5ee60 <__assert_fail@plt+0x4c2a8>
   5eeac:	b	5eeb0 <__assert_fail@plt+0x4c2f8>
   5eeb0:	b	5eeb4 <__assert_fail@plt+0x4c2fc>
   5eeb4:	b	5f388 <__assert_fail@plt+0x4c7d0>
   5eeb8:	ldr	r0, [sp, #12]
   5eebc:	movw	r1, #49990	; 0xc346
   5eec0:	movt	r1, #7
   5eec4:	bl	124c8 <strcmp@plt>
   5eec8:	cmp	r0, #0
   5eecc:	bne	5efa8 <__assert_fail@plt+0x4c3f0>
   5eed0:	b	5eed4 <__assert_fail@plt+0x4c31c>
   5eed4:	ldr	r0, [fp, #-8]
   5eed8:	movw	r1, #0
   5eedc:	cmp	r0, r1
   5eee0:	beq	5ef48 <__assert_fail@plt+0x4c390>
   5eee4:	movw	r0, #0
   5eee8:	str	r0, [sp, #16]
   5eeec:	ldr	r0, [sp, #16]
   5eef0:	cmp	r0, #256	; 0x100
   5eef4:	bge	5ef44 <__assert_fail@plt+0x4c38c>
   5eef8:	bl	12834 <__ctype_b_loc@plt>
   5eefc:	ldr	r0, [r0]
   5ef00:	ldr	r1, [sp, #16]
   5ef04:	add	r0, r0, r1, lsl #1
   5ef08:	ldrh	r0, [r0]
   5ef0c:	and	r0, r0, #256	; 0x100
   5ef10:	cmp	r0, #0
   5ef14:	beq	5ef30 <__assert_fail@plt+0x4c378>
   5ef18:	ldr	r0, [fp, #-12]
   5ef1c:	ldr	r1, [fp, #-8]
   5ef20:	ldr	r2, [sp, #16]
   5ef24:	add	r1, r1, r2
   5ef28:	ldrb	r1, [r1]
   5ef2c:	bl	5dfe8 <__assert_fail@plt+0x4b430>
   5ef30:	b	5ef34 <__assert_fail@plt+0x4c37c>
   5ef34:	ldr	r0, [sp, #16]
   5ef38:	add	r0, r0, #1
   5ef3c:	str	r0, [sp, #16]
   5ef40:	b	5eeec <__assert_fail@plt+0x4c334>
   5ef44:	b	5efa0 <__assert_fail@plt+0x4c3e8>
   5ef48:	movw	r0, #0
   5ef4c:	str	r0, [sp, #16]
   5ef50:	ldr	r0, [sp, #16]
   5ef54:	cmp	r0, #256	; 0x100
   5ef58:	bge	5ef9c <__assert_fail@plt+0x4c3e4>
   5ef5c:	bl	12834 <__ctype_b_loc@plt>
   5ef60:	ldr	r0, [r0]
   5ef64:	ldr	r1, [sp, #16]
   5ef68:	add	r0, r0, r1, lsl #1
   5ef6c:	ldrh	r0, [r0]
   5ef70:	and	r0, r0, #256	; 0x100
   5ef74:	cmp	r0, #0
   5ef78:	beq	5ef88 <__assert_fail@plt+0x4c3d0>
   5ef7c:	ldr	r0, [fp, #-12]
   5ef80:	ldr	r1, [sp, #16]
   5ef84:	bl	5dfe8 <__assert_fail@plt+0x4b430>
   5ef88:	b	5ef8c <__assert_fail@plt+0x4c3d4>
   5ef8c:	ldr	r0, [sp, #16]
   5ef90:	add	r0, r0, #1
   5ef94:	str	r0, [sp, #16]
   5ef98:	b	5ef50 <__assert_fail@plt+0x4c398>
   5ef9c:	b	5efa0 <__assert_fail@plt+0x4c3e8>
   5efa0:	b	5efa4 <__assert_fail@plt+0x4c3ec>
   5efa4:	b	5f384 <__assert_fail@plt+0x4c7cc>
   5efa8:	ldr	r0, [sp, #12]
   5efac:	movw	r1, #50014	; 0xc35e
   5efb0:	movt	r1, #7
   5efb4:	bl	124c8 <strcmp@plt>
   5efb8:	cmp	r0, #0
   5efbc:	bne	5f098 <__assert_fail@plt+0x4c4e0>
   5efc0:	b	5efc4 <__assert_fail@plt+0x4c40c>
   5efc4:	ldr	r0, [fp, #-8]
   5efc8:	movw	r1, #0
   5efcc:	cmp	r0, r1
   5efd0:	beq	5f038 <__assert_fail@plt+0x4c480>
   5efd4:	movw	r0, #0
   5efd8:	str	r0, [sp, #16]
   5efdc:	ldr	r0, [sp, #16]
   5efe0:	cmp	r0, #256	; 0x100
   5efe4:	bge	5f034 <__assert_fail@plt+0x4c47c>
   5efe8:	bl	12834 <__ctype_b_loc@plt>
   5efec:	ldr	r0, [r0]
   5eff0:	ldr	r1, [sp, #16]
   5eff4:	add	r0, r0, r1, lsl #1
   5eff8:	ldrh	r0, [r0]
   5effc:	and	r0, r0, #1
   5f000:	cmp	r0, #0
   5f004:	beq	5f020 <__assert_fail@plt+0x4c468>
   5f008:	ldr	r0, [fp, #-12]
   5f00c:	ldr	r1, [fp, #-8]
   5f010:	ldr	r2, [sp, #16]
   5f014:	add	r1, r1, r2
   5f018:	ldrb	r1, [r1]
   5f01c:	bl	5dfe8 <__assert_fail@plt+0x4b430>
   5f020:	b	5f024 <__assert_fail@plt+0x4c46c>
   5f024:	ldr	r0, [sp, #16]
   5f028:	add	r0, r0, #1
   5f02c:	str	r0, [sp, #16]
   5f030:	b	5efdc <__assert_fail@plt+0x4c424>
   5f034:	b	5f090 <__assert_fail@plt+0x4c4d8>
   5f038:	movw	r0, #0
   5f03c:	str	r0, [sp, #16]
   5f040:	ldr	r0, [sp, #16]
   5f044:	cmp	r0, #256	; 0x100
   5f048:	bge	5f08c <__assert_fail@plt+0x4c4d4>
   5f04c:	bl	12834 <__ctype_b_loc@plt>
   5f050:	ldr	r0, [r0]
   5f054:	ldr	r1, [sp, #16]
   5f058:	add	r0, r0, r1, lsl #1
   5f05c:	ldrh	r0, [r0]
   5f060:	and	r0, r0, #1
   5f064:	cmp	r0, #0
   5f068:	beq	5f078 <__assert_fail@plt+0x4c4c0>
   5f06c:	ldr	r0, [fp, #-12]
   5f070:	ldr	r1, [sp, #16]
   5f074:	bl	5dfe8 <__assert_fail@plt+0x4b430>
   5f078:	b	5f07c <__assert_fail@plt+0x4c4c4>
   5f07c:	ldr	r0, [sp, #16]
   5f080:	add	r0, r0, #1
   5f084:	str	r0, [sp, #16]
   5f088:	b	5f040 <__assert_fail@plt+0x4c488>
   5f08c:	b	5f090 <__assert_fail@plt+0x4c4d8>
   5f090:	b	5f094 <__assert_fail@plt+0x4c4dc>
   5f094:	b	5f380 <__assert_fail@plt+0x4c7c8>
   5f098:	ldr	r0, [sp, #12]
   5f09c:	movw	r1, #50020	; 0xc364
   5f0a0:	movt	r1, #7
   5f0a4:	bl	124c8 <strcmp@plt>
   5f0a8:	cmp	r0, #0
   5f0ac:	bne	5f188 <__assert_fail@plt+0x4c5d0>
   5f0b0:	b	5f0b4 <__assert_fail@plt+0x4c4fc>
   5f0b4:	ldr	r0, [fp, #-8]
   5f0b8:	movw	r1, #0
   5f0bc:	cmp	r0, r1
   5f0c0:	beq	5f128 <__assert_fail@plt+0x4c570>
   5f0c4:	movw	r0, #0
   5f0c8:	str	r0, [sp, #16]
   5f0cc:	ldr	r0, [sp, #16]
   5f0d0:	cmp	r0, #256	; 0x100
   5f0d4:	bge	5f124 <__assert_fail@plt+0x4c56c>
   5f0d8:	bl	12834 <__ctype_b_loc@plt>
   5f0dc:	ldr	r0, [r0]
   5f0e0:	ldr	r1, [sp, #16]
   5f0e4:	add	r0, r0, r1, lsl #1
   5f0e8:	ldrh	r0, [r0]
   5f0ec:	and	r0, r0, #32768	; 0x8000
   5f0f0:	cmp	r0, #0
   5f0f4:	beq	5f110 <__assert_fail@plt+0x4c558>
   5f0f8:	ldr	r0, [fp, #-12]
   5f0fc:	ldr	r1, [fp, #-8]
   5f100:	ldr	r2, [sp, #16]
   5f104:	add	r1, r1, r2
   5f108:	ldrb	r1, [r1]
   5f10c:	bl	5dfe8 <__assert_fail@plt+0x4b430>
   5f110:	b	5f114 <__assert_fail@plt+0x4c55c>
   5f114:	ldr	r0, [sp, #16]
   5f118:	add	r0, r0, #1
   5f11c:	str	r0, [sp, #16]
   5f120:	b	5f0cc <__assert_fail@plt+0x4c514>
   5f124:	b	5f180 <__assert_fail@plt+0x4c5c8>
   5f128:	movw	r0, #0
   5f12c:	str	r0, [sp, #16]
   5f130:	ldr	r0, [sp, #16]
   5f134:	cmp	r0, #256	; 0x100
   5f138:	bge	5f17c <__assert_fail@plt+0x4c5c4>
   5f13c:	bl	12834 <__ctype_b_loc@plt>
   5f140:	ldr	r0, [r0]
   5f144:	ldr	r1, [sp, #16]
   5f148:	add	r0, r0, r1, lsl #1
   5f14c:	ldrh	r0, [r0]
   5f150:	and	r0, r0, #32768	; 0x8000
   5f154:	cmp	r0, #0
   5f158:	beq	5f168 <__assert_fail@plt+0x4c5b0>
   5f15c:	ldr	r0, [fp, #-12]
   5f160:	ldr	r1, [sp, #16]
   5f164:	bl	5dfe8 <__assert_fail@plt+0x4b430>
   5f168:	b	5f16c <__assert_fail@plt+0x4c5b4>
   5f16c:	ldr	r0, [sp, #16]
   5f170:	add	r0, r0, #1
   5f174:	str	r0, [sp, #16]
   5f178:	b	5f130 <__assert_fail@plt+0x4c578>
   5f17c:	b	5f180 <__assert_fail@plt+0x4c5c8>
   5f180:	b	5f184 <__assert_fail@plt+0x4c5cc>
   5f184:	b	5f37c <__assert_fail@plt+0x4c7c4>
   5f188:	ldr	r0, [sp, #12]
   5f18c:	movw	r1, #50026	; 0xc36a
   5f190:	movt	r1, #7
   5f194:	bl	124c8 <strcmp@plt>
   5f198:	cmp	r0, #0
   5f19c:	bne	5f278 <__assert_fail@plt+0x4c6c0>
   5f1a0:	b	5f1a4 <__assert_fail@plt+0x4c5ec>
   5f1a4:	ldr	r0, [fp, #-8]
   5f1a8:	movw	r1, #0
   5f1ac:	cmp	r0, r1
   5f1b0:	beq	5f218 <__assert_fail@plt+0x4c660>
   5f1b4:	movw	r0, #0
   5f1b8:	str	r0, [sp, #16]
   5f1bc:	ldr	r0, [sp, #16]
   5f1c0:	cmp	r0, #256	; 0x100
   5f1c4:	bge	5f214 <__assert_fail@plt+0x4c65c>
   5f1c8:	bl	12834 <__ctype_b_loc@plt>
   5f1cc:	ldr	r0, [r0]
   5f1d0:	ldr	r1, [sp, #16]
   5f1d4:	add	r0, r0, r1, lsl #1
   5f1d8:	ldrh	r0, [r0]
   5f1dc:	and	r0, r0, #4
   5f1e0:	cmp	r0, #0
   5f1e4:	beq	5f200 <__assert_fail@plt+0x4c648>
   5f1e8:	ldr	r0, [fp, #-12]
   5f1ec:	ldr	r1, [fp, #-8]
   5f1f0:	ldr	r2, [sp, #16]
   5f1f4:	add	r1, r1, r2
   5f1f8:	ldrb	r1, [r1]
   5f1fc:	bl	5dfe8 <__assert_fail@plt+0x4b430>
   5f200:	b	5f204 <__assert_fail@plt+0x4c64c>
   5f204:	ldr	r0, [sp, #16]
   5f208:	add	r0, r0, #1
   5f20c:	str	r0, [sp, #16]
   5f210:	b	5f1bc <__assert_fail@plt+0x4c604>
   5f214:	b	5f270 <__assert_fail@plt+0x4c6b8>
   5f218:	movw	r0, #0
   5f21c:	str	r0, [sp, #16]
   5f220:	ldr	r0, [sp, #16]
   5f224:	cmp	r0, #256	; 0x100
   5f228:	bge	5f26c <__assert_fail@plt+0x4c6b4>
   5f22c:	bl	12834 <__ctype_b_loc@plt>
   5f230:	ldr	r0, [r0]
   5f234:	ldr	r1, [sp, #16]
   5f238:	add	r0, r0, r1, lsl #1
   5f23c:	ldrh	r0, [r0]
   5f240:	and	r0, r0, #4
   5f244:	cmp	r0, #0
   5f248:	beq	5f258 <__assert_fail@plt+0x4c6a0>
   5f24c:	ldr	r0, [fp, #-12]
   5f250:	ldr	r1, [sp, #16]
   5f254:	bl	5dfe8 <__assert_fail@plt+0x4b430>
   5f258:	b	5f25c <__assert_fail@plt+0x4c6a4>
   5f25c:	ldr	r0, [sp, #16]
   5f260:	add	r0, r0, #1
   5f264:	str	r0, [sp, #16]
   5f268:	b	5f220 <__assert_fail@plt+0x4c668>
   5f26c:	b	5f270 <__assert_fail@plt+0x4c6b8>
   5f270:	b	5f274 <__assert_fail@plt+0x4c6bc>
   5f274:	b	5f378 <__assert_fail@plt+0x4c7c0>
   5f278:	ldr	r0, [sp, #12]
   5f27c:	movw	r1, #50032	; 0xc370
   5f280:	movt	r1, #7
   5f284:	bl	124c8 <strcmp@plt>
   5f288:	cmp	r0, #0
   5f28c:	bne	5f368 <__assert_fail@plt+0x4c7b0>
   5f290:	b	5f294 <__assert_fail@plt+0x4c6dc>
   5f294:	ldr	r0, [fp, #-8]
   5f298:	movw	r1, #0
   5f29c:	cmp	r0, r1
   5f2a0:	beq	5f308 <__assert_fail@plt+0x4c750>
   5f2a4:	movw	r0, #0
   5f2a8:	str	r0, [sp, #16]
   5f2ac:	ldr	r0, [sp, #16]
   5f2b0:	cmp	r0, #256	; 0x100
   5f2b4:	bge	5f304 <__assert_fail@plt+0x4c74c>
   5f2b8:	bl	12834 <__ctype_b_loc@plt>
   5f2bc:	ldr	r0, [r0]
   5f2c0:	ldr	r1, [sp, #16]
   5f2c4:	add	r0, r0, r1, lsl #1
   5f2c8:	ldrh	r0, [r0]
   5f2cc:	and	r0, r0, #4096	; 0x1000
   5f2d0:	cmp	r0, #0
   5f2d4:	beq	5f2f0 <__assert_fail@plt+0x4c738>
   5f2d8:	ldr	r0, [fp, #-12]
   5f2dc:	ldr	r1, [fp, #-8]
   5f2e0:	ldr	r2, [sp, #16]
   5f2e4:	add	r1, r1, r2
   5f2e8:	ldrb	r1, [r1]
   5f2ec:	bl	5dfe8 <__assert_fail@plt+0x4b430>
   5f2f0:	b	5f2f4 <__assert_fail@plt+0x4c73c>
   5f2f4:	ldr	r0, [sp, #16]
   5f2f8:	add	r0, r0, #1
   5f2fc:	str	r0, [sp, #16]
   5f300:	b	5f2ac <__assert_fail@plt+0x4c6f4>
   5f304:	b	5f360 <__assert_fail@plt+0x4c7a8>
   5f308:	movw	r0, #0
   5f30c:	str	r0, [sp, #16]
   5f310:	ldr	r0, [sp, #16]
   5f314:	cmp	r0, #256	; 0x100
   5f318:	bge	5f35c <__assert_fail@plt+0x4c7a4>
   5f31c:	bl	12834 <__ctype_b_loc@plt>
   5f320:	ldr	r0, [r0]
   5f324:	ldr	r1, [sp, #16]
   5f328:	add	r0, r0, r1, lsl #1
   5f32c:	ldrh	r0, [r0]
   5f330:	and	r0, r0, #4096	; 0x1000
   5f334:	cmp	r0, #0
   5f338:	beq	5f348 <__assert_fail@plt+0x4c790>
   5f33c:	ldr	r0, [fp, #-12]
   5f340:	ldr	r1, [sp, #16]
   5f344:	bl	5dfe8 <__assert_fail@plt+0x4b430>
   5f348:	b	5f34c <__assert_fail@plt+0x4c794>
   5f34c:	ldr	r0, [sp, #16]
   5f350:	add	r0, r0, #1
   5f354:	str	r0, [sp, #16]
   5f358:	b	5f310 <__assert_fail@plt+0x4c758>
   5f35c:	b	5f360 <__assert_fail@plt+0x4c7a8>
   5f360:	b	5f364 <__assert_fail@plt+0x4c7ac>
   5f364:	b	5f374 <__assert_fail@plt+0x4c7bc>
   5f368:	movw	r0, #4
   5f36c:	str	r0, [fp, #-4]
   5f370:	b	5f3a8 <__assert_fail@plt+0x4c7f0>
   5f374:	b	5f378 <__assert_fail@plt+0x4c7c0>
   5f378:	b	5f37c <__assert_fail@plt+0x4c7c4>
   5f37c:	b	5f380 <__assert_fail@plt+0x4c7c8>
   5f380:	b	5f384 <__assert_fail@plt+0x4c7cc>
   5f384:	b	5f388 <__assert_fail@plt+0x4c7d0>
   5f388:	b	5f38c <__assert_fail@plt+0x4c7d4>
   5f38c:	b	5f390 <__assert_fail@plt+0x4c7d8>
   5f390:	b	5f394 <__assert_fail@plt+0x4c7dc>
   5f394:	b	5f398 <__assert_fail@plt+0x4c7e0>
   5f398:	b	5f39c <__assert_fail@plt+0x4c7e4>
   5f39c:	b	5f3a0 <__assert_fail@plt+0x4c7e8>
   5f3a0:	movw	r0, #0
   5f3a4:	str	r0, [fp, #-4]
   5f3a8:	ldr	r0, [fp, #-4]
   5f3ac:	mov	sp, fp
   5f3b0:	pop	{fp, pc}
   5f3b4:	sub	sp, sp, #8
   5f3b8:	str	r0, [sp, #4]
   5f3bc:	movw	r0, #0
   5f3c0:	str	r0, [sp]
   5f3c4:	ldr	r0, [sp]
   5f3c8:	cmp	r0, #8
   5f3cc:	bge	5f3f4 <__assert_fail@plt+0x4c83c>
   5f3d0:	ldr	r0, [sp, #4]
   5f3d4:	ldr	r1, [sp]
   5f3d8:	ldr	r1, [r0, r1, lsl #2]!
   5f3dc:	mvn	r1, r1
   5f3e0:	str	r1, [r0]
   5f3e4:	ldr	r0, [sp]
   5f3e8:	add	r0, r0, #1
   5f3ec:	str	r0, [sp]
   5f3f0:	b	5f3c4 <__assert_fail@plt+0x4c80c>
   5f3f4:	add	sp, sp, #8
   5f3f8:	bx	lr
   5f3fc:	sub	sp, sp, #12
   5f400:	str	r0, [sp, #8]
   5f404:	str	r1, [sp, #4]
   5f408:	movw	r0, #0
   5f40c:	str	r0, [sp]
   5f410:	ldr	r0, [sp]
   5f414:	cmp	r0, #8
   5f418:	bge	5f44c <__assert_fail@plt+0x4c894>
   5f41c:	ldr	r0, [sp, #4]
   5f420:	ldr	r1, [sp]
   5f424:	ldr	r0, [r0, r1, lsl #2]
   5f428:	ldr	r2, [sp, #8]
   5f42c:	add	r1, r2, r1, lsl #2
   5f430:	ldr	r2, [r1]
   5f434:	and	r0, r2, r0
   5f438:	str	r0, [r1]
   5f43c:	ldr	r0, [sp]
   5f440:	add	r0, r0, #1
   5f444:	str	r0, [sp]
   5f448:	b	5f410 <__assert_fail@plt+0x4c858>
   5f44c:	add	sp, sp, #12
   5f450:	bx	lr
   5f454:	sub	sp, sp, #16
   5f458:	str	r0, [sp, #8]
   5f45c:	str	r1, [sp, #4]
   5f460:	ldr	r0, [sp, #8]
   5f464:	ldr	r0, [r0, #80]	; 0x50
   5f468:	cmp	r0, #1
   5f46c:	bne	5f47c <__assert_fail@plt+0x4c8c4>
   5f470:	movw	r0, #1
   5f474:	str	r0, [sp, #12]
   5f478:	b	5f4e4 <__assert_fail@plt+0x4c92c>
   5f47c:	movw	r0, #1
   5f480:	str	r0, [sp]
   5f484:	ldr	r0, [sp, #4]
   5f488:	ldr	r1, [sp]
   5f48c:	add	r0, r0, r1
   5f490:	ldr	r1, [sp, #8]
   5f494:	ldr	r1, [r1, #28]
   5f498:	cmp	r0, r1
   5f49c:	bge	5f4dc <__assert_fail@plt+0x4c924>
   5f4a0:	ldr	r0, [sp, #8]
   5f4a4:	ldr	r0, [r0, #8]
   5f4a8:	ldr	r1, [sp, #4]
   5f4ac:	ldr	r2, [sp]
   5f4b0:	add	r1, r1, r2
   5f4b4:	add	r0, r0, r1, lsl #2
   5f4b8:	ldr	r0, [r0]
   5f4bc:	cmn	r0, #1
   5f4c0:	beq	5f4c8 <__assert_fail@plt+0x4c910>
   5f4c4:	b	5f4dc <__assert_fail@plt+0x4c924>
   5f4c8:	b	5f4cc <__assert_fail@plt+0x4c914>
   5f4cc:	ldr	r0, [sp]
   5f4d0:	add	r0, r0, #1
   5f4d4:	str	r0, [sp]
   5f4d8:	b	5f484 <__assert_fail@plt+0x4c8cc>
   5f4dc:	ldr	r0, [sp]
   5f4e0:	str	r0, [sp, #12]
   5f4e4:	ldr	r0, [sp, #12]
   5f4e8:	add	sp, sp, #16
   5f4ec:	bx	lr
   5f4f0:	push	{fp, lr}
   5f4f4:	mov	fp, sp
   5f4f8:	sub	sp, sp, #32
   5f4fc:	str	r0, [fp, #-8]
   5f500:	str	r1, [fp, #-12]
   5f504:	str	r2, [sp, #16]
   5f508:	ldr	r0, [sp, #16]
   5f50c:	ldrb	r0, [r0]
   5f510:	strb	r0, [sp, #14]
   5f514:	movw	r0, #0
   5f518:	str	r0, [sp, #8]
   5f51c:	ldr	r0, [fp, #-12]
   5f520:	ldr	r0, [r0, #56]	; 0x38
   5f524:	ldr	r1, [fp, #-12]
   5f528:	ldr	r1, [r1, #40]	; 0x28
   5f52c:	cmp	r0, r1
   5f530:	bgt	5f540 <__assert_fail@plt+0x4c988>
   5f534:	movw	r0, #7
   5f538:	str	r0, [fp, #-4]
   5f53c:	b	5f6c4 <__assert_fail@plt+0x4cb0c>
   5f540:	b	5f544 <__assert_fail@plt+0x4c98c>
   5f544:	ldr	r0, [sp, #8]
   5f548:	cmp	r0, #32
   5f54c:	blt	5f55c <__assert_fail@plt+0x4c9a4>
   5f550:	movw	r0, #7
   5f554:	str	r0, [fp, #-4]
   5f558:	b	5f6c4 <__assert_fail@plt+0x4cb0c>
   5f55c:	ldr	r0, [sp, #16]
   5f560:	ldr	r0, [r0, #4]
   5f564:	and	r0, r0, #255	; 0xff
   5f568:	cmp	r0, #30
   5f56c:	bne	5f580 <__assert_fail@plt+0x4c9c8>
   5f570:	ldr	r0, [fp, #-12]
   5f574:	bl	5f6d0 <__assert_fail@plt+0x4cb18>
   5f578:	strb	r0, [sp, #15]
   5f57c:	b	5f5a4 <__assert_fail@plt+0x4c9ec>
   5f580:	ldr	r0, [fp, #-12]
   5f584:	ldr	r0, [r0, #4]
   5f588:	ldr	r1, [fp, #-12]
   5f58c:	ldr	r2, [r1, #40]	; 0x28
   5f590:	add	r3, r2, #1
   5f594:	str	r3, [r1, #40]	; 0x28
   5f598:	add	r0, r0, r2
   5f59c:	ldrb	r0, [r0]
   5f5a0:	strb	r0, [sp, #15]
   5f5a4:	ldr	r0, [fp, #-12]
   5f5a8:	ldr	r0, [r0, #56]	; 0x38
   5f5ac:	ldr	r1, [fp, #-12]
   5f5b0:	ldr	r1, [r1, #40]	; 0x28
   5f5b4:	cmp	r0, r1
   5f5b8:	bgt	5f5c8 <__assert_fail@plt+0x4ca10>
   5f5bc:	movw	r0, #7
   5f5c0:	str	r0, [fp, #-4]
   5f5c4:	b	5f6c4 <__assert_fail@plt+0x4cb0c>
   5f5c8:	ldrb	r0, [sp, #15]
   5f5cc:	ldrb	r1, [sp, #14]
   5f5d0:	cmp	r0, r1
   5f5d4:	bne	5f600 <__assert_fail@plt+0x4ca48>
   5f5d8:	ldr	r0, [fp, #-12]
   5f5dc:	ldr	r0, [r0, #4]
   5f5e0:	ldr	r1, [fp, #-12]
   5f5e4:	ldr	r1, [r1, #40]	; 0x28
   5f5e8:	add	r1, r1, #0
   5f5ec:	add	r0, r0, r1
   5f5f0:	ldrb	r0, [r0]
   5f5f4:	cmp	r0, #93	; 0x5d
   5f5f8:	bne	5f600 <__assert_fail@plt+0x4ca48>
   5f5fc:	b	5f628 <__assert_fail@plt+0x4ca70>
   5f600:	ldrb	r0, [sp, #15]
   5f604:	ldr	r1, [fp, #-8]
   5f608:	ldr	r1, [r1, #4]
   5f60c:	ldr	r2, [sp, #8]
   5f610:	add	r1, r1, r2
   5f614:	strb	r0, [r1]
   5f618:	ldr	r0, [sp, #8]
   5f61c:	add	r0, r0, #1
   5f620:	str	r0, [sp, #8]
   5f624:	b	5f544 <__assert_fail@plt+0x4c98c>
   5f628:	ldr	r0, [fp, #-12]
   5f62c:	ldr	r1, [r0, #40]	; 0x28
   5f630:	add	r1, r1, #1
   5f634:	str	r1, [r0, #40]	; 0x28
   5f638:	ldr	r0, [fp, #-8]
   5f63c:	ldr	r0, [r0, #4]
   5f640:	ldr	r1, [sp, #8]
   5f644:	mov	r2, #0
   5f648:	strb	r2, [r0, r1]
   5f64c:	ldr	r0, [sp, #16]
   5f650:	ldrb	r0, [r0, #4]
   5f654:	mov	r1, r0
   5f658:	cmp	r0, #26
   5f65c:	str	r1, [sp, #4]
   5f660:	beq	5f688 <__assert_fail@plt+0x4cad0>
   5f664:	b	5f668 <__assert_fail@plt+0x4cab0>
   5f668:	ldr	r0, [sp, #4]
   5f66c:	cmp	r0, #28
   5f670:	beq	5f698 <__assert_fail@plt+0x4cae0>
   5f674:	b	5f678 <__assert_fail@plt+0x4cac0>
   5f678:	ldr	r0, [sp, #4]
   5f67c:	cmp	r0, #30
   5f680:	beq	5f6a8 <__assert_fail@plt+0x4caf0>
   5f684:	b	5f6b8 <__assert_fail@plt+0x4cb00>
   5f688:	ldr	r0, [fp, #-8]
   5f68c:	movw	r1, #3
   5f690:	str	r1, [r0]
   5f694:	b	5f6bc <__assert_fail@plt+0x4cb04>
   5f698:	ldr	r0, [fp, #-8]
   5f69c:	movw	r1, #2
   5f6a0:	str	r1, [r0]
   5f6a4:	b	5f6bc <__assert_fail@plt+0x4cb04>
   5f6a8:	ldr	r0, [fp, #-8]
   5f6ac:	movw	r1, #4
   5f6b0:	str	r1, [r0]
   5f6b4:	b	5f6bc <__assert_fail@plt+0x4cb04>
   5f6b8:	b	5f6bc <__assert_fail@plt+0x4cb04>
   5f6bc:	movw	r0, #0
   5f6c0:	str	r0, [fp, #-4]
   5f6c4:	ldr	r0, [fp, #-4]
   5f6c8:	mov	sp, fp
   5f6cc:	pop	{fp, pc}
   5f6d0:	push	{fp, lr}
   5f6d4:	mov	fp, sp
   5f6d8:	sub	sp, sp, #16
   5f6dc:	str	r0, [sp, #8]
   5f6e0:	ldr	r0, [sp, #8]
   5f6e4:	ldrsb	r0, [r0, #75]	; 0x4b
   5f6e8:	cmp	r0, #0
   5f6ec:	movw	r0, #0
   5f6f0:	movne	r0, #1
   5f6f4:	mvn	r1, #0
   5f6f8:	eor	r0, r0, r1
   5f6fc:	tst	r0, #1
   5f700:	beq	5f72c <__assert_fail@plt+0x4cb74>
   5f704:	ldr	r0, [sp, #8]
   5f708:	ldr	r0, [r0, #4]
   5f70c:	ldr	r1, [sp, #8]
   5f710:	ldr	r2, [r1, #40]	; 0x28
   5f714:	add	r3, r2, #1
   5f718:	str	r3, [r1, #40]	; 0x28
   5f71c:	add	r0, r0, r2
   5f720:	ldrb	r0, [r0]
   5f724:	strb	r0, [fp, #-1]
   5f728:	b	5f86c <__assert_fail@plt+0x4ccb4>
   5f72c:	ldr	r0, [sp, #8]
   5f730:	ldrsb	r0, [r0, #76]	; 0x4c
   5f734:	cmp	r0, #0
   5f738:	beq	5f83c <__assert_fail@plt+0x4cc84>
   5f73c:	ldr	r0, [sp, #8]
   5f740:	ldr	r0, [r0, #40]	; 0x28
   5f744:	ldr	r1, [sp, #8]
   5f748:	ldr	r1, [r1, #28]
   5f74c:	cmp	r0, r1
   5f750:	beq	5f798 <__assert_fail@plt+0x4cbe0>
   5f754:	ldr	r0, [sp, #8]
   5f758:	ldr	r1, [r0, #8]
   5f75c:	ldr	r0, [r0, #40]	; 0x28
   5f760:	add	r0, r1, r0, lsl #2
   5f764:	ldr	r0, [r0]
   5f768:	cmn	r0, #1
   5f76c:	bne	5f798 <__assert_fail@plt+0x4cbe0>
   5f770:	ldr	r0, [sp, #8]
   5f774:	ldr	r0, [r0, #4]
   5f778:	ldr	r1, [sp, #8]
   5f77c:	ldr	r2, [r1, #40]	; 0x28
   5f780:	add	r3, r2, #1
   5f784:	str	r3, [r1, #40]	; 0x28
   5f788:	add	r0, r0, r2
   5f78c:	ldrb	r0, [r0]
   5f790:	strb	r0, [fp, #-1]
   5f794:	b	5f86c <__assert_fail@plt+0x4ccb4>
   5f798:	ldr	r0, [sp, #8]
   5f79c:	ldr	r1, [r0, #12]
   5f7a0:	ldr	r0, [r0, #40]	; 0x28
   5f7a4:	add	r0, r1, r0, lsl #2
   5f7a8:	ldr	r0, [r0]
   5f7ac:	str	r0, [sp, #4]
   5f7b0:	ldr	r0, [sp, #8]
   5f7b4:	ldr	r0, [r0]
   5f7b8:	ldr	r1, [sp, #8]
   5f7bc:	ldr	r1, [r1, #24]
   5f7c0:	ldr	r2, [sp, #4]
   5f7c4:	add	r1, r1, r2
   5f7c8:	add	r0, r0, r1
   5f7cc:	ldrb	r0, [r0]
   5f7d0:	str	r0, [sp]
   5f7d4:	ldr	r0, [sp]
   5f7d8:	mvn	r1, #127	; 0x7f
   5f7dc:	and	r0, r0, r1
   5f7e0:	cmp	r0, #0
   5f7e4:	beq	5f810 <__assert_fail@plt+0x4cc58>
   5f7e8:	ldr	r0, [sp, #8]
   5f7ec:	ldr	r0, [r0, #4]
   5f7f0:	ldr	r1, [sp, #8]
   5f7f4:	ldr	r2, [r1, #40]	; 0x28
   5f7f8:	add	r3, r2, #1
   5f7fc:	str	r3, [r1, #40]	; 0x28
   5f800:	add	r0, r0, r2
   5f804:	ldrb	r0, [r0]
   5f808:	strb	r0, [fp, #-1]
   5f80c:	b	5f86c <__assert_fail@plt+0x4ccb4>
   5f810:	ldr	r0, [sp, #8]
   5f814:	ldr	r1, [sp, #8]
   5f818:	ldr	r1, [r1, #40]	; 0x28
   5f81c:	bl	5f454 <__assert_fail@plt+0x4c89c>
   5f820:	ldr	r1, [sp, #8]
   5f824:	ldr	r2, [r1, #40]	; 0x28
   5f828:	add	r0, r2, r0
   5f82c:	str	r0, [r1, #40]	; 0x28
   5f830:	ldr	r0, [sp]
   5f834:	strb	r0, [fp, #-1]
   5f838:	b	5f86c <__assert_fail@plt+0x4ccb4>
   5f83c:	ldr	r0, [sp, #8]
   5f840:	ldr	r0, [r0]
   5f844:	ldr	r1, [sp, #8]
   5f848:	ldr	r1, [r1, #24]
   5f84c:	ldr	r2, [sp, #8]
   5f850:	ldr	r3, [r2, #40]	; 0x28
   5f854:	add	ip, r3, #1
   5f858:	str	ip, [r2, #40]	; 0x28
   5f85c:	add	r1, r1, r3
   5f860:	add	r0, r0, r1
   5f864:	ldrb	r0, [r0]
   5f868:	strb	r0, [fp, #-1]
   5f86c:	ldrb	r0, [fp, #-1]
   5f870:	mov	sp, fp
   5f874:	pop	{fp, pc}
   5f878:	push	{fp, lr}
   5f87c:	mov	fp, sp
   5f880:	sub	sp, sp, #16
   5f884:	strb	r0, [fp, #-1]
   5f888:	str	r1, [sp, #8]
   5f88c:	ldr	r0, [sp, #8]
   5f890:	ldr	r0, [r0, #92]	; 0x5c
   5f894:	cmp	r0, #1
   5f898:	ble	5f8ac <__assert_fail@plt+0x4ccf4>
   5f89c:	ldrb	r0, [fp, #-1]
   5f8a0:	bl	12930 <btowc@plt>
   5f8a4:	str	r0, [sp, #4]
   5f8a8:	b	5f8b4 <__assert_fail@plt+0x4ccfc>
   5f8ac:	ldrb	r0, [fp, #-1]
   5f8b0:	str	r0, [sp, #4]
   5f8b4:	ldr	r0, [sp, #4]
   5f8b8:	mov	sp, fp
   5f8bc:	pop	{fp, pc}
   5f8c0:	push	{fp, lr}
   5f8c4:	mov	fp, sp
   5f8c8:	sub	sp, sp, #40	; 0x28
   5f8cc:	str	r0, [fp, #-8]
   5f8d0:	str	r1, [fp, #-12]
   5f8d4:	str	r2, [fp, #-16]
   5f8d8:	mvn	r0, #0
   5f8dc:	str	r0, [sp, #20]
   5f8e0:	ldr	r0, [fp, #-12]
   5f8e4:	ldr	r1, [fp, #-8]
   5f8e8:	ldr	r2, [fp, #-16]
   5f8ec:	bl	5a204 <__assert_fail@plt+0x4764c>
   5f8f0:	ldr	r0, [fp, #-12]
   5f8f4:	ldrb	r0, [r0]
   5f8f8:	strb	r0, [sp, #19]
   5f8fc:	ldr	r0, [fp, #-12]
   5f900:	ldr	r0, [r0, #4]
   5f904:	and	r0, r0, #255	; 0xff
   5f908:	cmp	r0, #2
   5f90c:	bne	5f91c <__assert_fail@plt+0x4cd64>
   5f910:	mvn	r0, #1
   5f914:	str	r0, [fp, #-4]
   5f918:	b	5fa14 <__assert_fail@plt+0x4ce5c>
   5f91c:	ldr	r0, [fp, #-12]
   5f920:	ldr	r0, [r0, #4]
   5f924:	and	r0, r0, #255	; 0xff
   5f928:	cmp	r0, #24
   5f92c:	beq	5f93c <__assert_fail@plt+0x4cd84>
   5f930:	ldrb	r0, [sp, #19]
   5f934:	cmp	r0, #44	; 0x2c
   5f938:	bne	5f940 <__assert_fail@plt+0x4cd88>
   5f93c:	b	5fa0c <__assert_fail@plt+0x4ce54>
   5f940:	ldr	r0, [fp, #-12]
   5f944:	ldr	r0, [r0, #4]
   5f948:	and	r0, r0, #255	; 0xff
   5f94c:	cmp	r0, #1
   5f950:	bne	5f97c <__assert_fail@plt+0x4cdc4>
   5f954:	ldrb	r0, [sp, #19]
   5f958:	cmp	r0, #48	; 0x30
   5f95c:	blt	5f97c <__assert_fail@plt+0x4cdc4>
   5f960:	ldrb	r0, [sp, #19]
   5f964:	movw	r1, #57	; 0x39
   5f968:	cmp	r1, r0
   5f96c:	blt	5f97c <__assert_fail@plt+0x4cdc4>
   5f970:	ldr	r0, [sp, #20]
   5f974:	cmn	r0, #2
   5f978:	bne	5f988 <__assert_fail@plt+0x4cdd0>
   5f97c:	mvn	r0, #1
   5f980:	str	r0, [sp, #12]
   5f984:	b	5fa00 <__assert_fail@plt+0x4ce48>
   5f988:	ldr	r0, [sp, #20]
   5f98c:	cmn	r0, #1
   5f990:	bne	5f9a4 <__assert_fail@plt+0x4cdec>
   5f994:	ldrb	r0, [sp, #19]
   5f998:	sub	r0, r0, #48	; 0x30
   5f99c:	str	r0, [sp, #8]
   5f9a0:	b	5f9f8 <__assert_fail@plt+0x4ce40>
   5f9a4:	ldr	r0, [sp, #20]
   5f9a8:	movw	r1, #10
   5f9ac:	mul	r0, r0, r1
   5f9b0:	ldrb	r1, [sp, #19]
   5f9b4:	add	r0, r0, r1
   5f9b8:	sub	r0, r0, #48	; 0x30
   5f9bc:	movw	r1, #32768	; 0x8000
   5f9c0:	cmp	r1, r0
   5f9c4:	bge	5f9d4 <__assert_fail@plt+0x4ce1c>
   5f9c8:	movw	r0, #32768	; 0x8000
   5f9cc:	str	r0, [sp, #4]
   5f9d0:	b	5f9f0 <__assert_fail@plt+0x4ce38>
   5f9d4:	ldr	r0, [sp, #20]
   5f9d8:	movw	r1, #10
   5f9dc:	mul	r0, r0, r1
   5f9e0:	ldrb	r1, [sp, #19]
   5f9e4:	add	r0, r0, r1
   5f9e8:	sub	r0, r0, #48	; 0x30
   5f9ec:	str	r0, [sp, #4]
   5f9f0:	ldr	r0, [sp, #4]
   5f9f4:	str	r0, [sp, #8]
   5f9f8:	ldr	r0, [sp, #8]
   5f9fc:	str	r0, [sp, #12]
   5fa00:	ldr	r0, [sp, #12]
   5fa04:	str	r0, [sp, #20]
   5fa08:	b	5f8e0 <__assert_fail@plt+0x4cd28>
   5fa0c:	ldr	r0, [sp, #20]
   5fa10:	str	r0, [fp, #-4]
   5fa14:	ldr	r0, [fp, #-4]
   5fa18:	mov	sp, fp
   5fa1c:	pop	{fp, pc}
   5fa20:	push	{fp, lr}
   5fa24:	mov	fp, sp
   5fa28:	sub	sp, sp, #40	; 0x28
   5fa2c:	str	r0, [fp, #-8]
   5fa30:	str	r1, [fp, #-12]
   5fa34:	add	r0, sp, #20
   5fa38:	str	r0, [sp, #16]
   5fa3c:	ldr	r0, [fp, #-8]
   5fa40:	ldr	r0, [r0]
   5fa44:	str	r0, [sp, #12]
   5fa48:	ldr	r0, [fp, #-8]
   5fa4c:	str	r0, [fp, #-16]
   5fa50:	ldr	r0, [fp, #-12]
   5fa54:	ldr	r1, [fp, #-16]
   5fa58:	add	r3, r1, #20
   5fa5c:	movw	r1, #0
   5fa60:	str	r1, [sp, #4]
   5fa64:	ldr	r2, [sp, #4]
   5fa68:	bl	5c4fc <__assert_fail@plt+0x49944>
   5fa6c:	ldr	r1, [sp, #16]
   5fa70:	str	r0, [r1]
   5fa74:	ldr	r0, [sp, #16]
   5fa78:	ldr	r0, [r0]
   5fa7c:	movw	r1, #0
   5fa80:	cmp	r0, r1
   5fa84:	bne	5fa94 <__assert_fail@plt+0x4cedc>
   5fa88:	movw	r0, #0
   5fa8c:	str	r0, [fp, #-4]
   5fa90:	b	5fba4 <__assert_fail@plt+0x4cfec>
   5fa94:	ldr	r0, [sp, #12]
   5fa98:	ldr	r1, [sp, #16]
   5fa9c:	ldr	r1, [r1]
   5faa0:	str	r0, [r1]
   5faa4:	ldr	r0, [sp, #16]
   5faa8:	ldr	r0, [r0]
   5faac:	ldr	r1, [r0, #24]
   5fab0:	mvn	r2, #262144	; 0x40000
   5fab4:	and	r1, r1, r2
   5fab8:	orr	r1, r1, #262144	; 0x40000
   5fabc:	str	r1, [r0, #24]
   5fac0:	ldr	r0, [sp, #16]
   5fac4:	ldr	r0, [r0]
   5fac8:	str	r0, [sp, #12]
   5facc:	ldr	r0, [fp, #-16]
   5fad0:	ldr	r0, [r0, #4]
   5fad4:	movw	r1, #0
   5fad8:	cmp	r0, r1
   5fadc:	beq	5fafc <__assert_fail@plt+0x4cf44>
   5fae0:	ldr	r0, [fp, #-16]
   5fae4:	ldr	r0, [r0, #4]
   5fae8:	str	r0, [fp, #-16]
   5faec:	ldr	r0, [sp, #12]
   5faf0:	add	r0, r0, #4
   5faf4:	str	r0, [sp, #16]
   5faf8:	b	5fba0 <__assert_fail@plt+0x4cfe8>
   5fafc:	movw	r0, #0
   5fb00:	str	r0, [sp, #8]
   5fb04:	ldr	r0, [fp, #-16]
   5fb08:	ldr	r0, [r0, #8]
   5fb0c:	ldr	r1, [sp, #8]
   5fb10:	cmp	r0, r1
   5fb14:	movw	r0, #1
   5fb18:	str	r0, [sp]
   5fb1c:	beq	5fb3c <__assert_fail@plt+0x4cf84>
   5fb20:	ldr	r0, [fp, #-16]
   5fb24:	ldr	r0, [r0, #8]
   5fb28:	movw	r1, #0
   5fb2c:	cmp	r0, r1
   5fb30:	movw	r0, #0
   5fb34:	moveq	r0, #1
   5fb38:	str	r0, [sp]
   5fb3c:	ldr	r0, [sp]
   5fb40:	tst	r0, #1
   5fb44:	beq	5fb88 <__assert_fail@plt+0x4cfd0>
   5fb48:	ldr	r0, [fp, #-16]
   5fb4c:	str	r0, [sp, #8]
   5fb50:	ldr	r0, [fp, #-16]
   5fb54:	ldr	r0, [r0]
   5fb58:	str	r0, [fp, #-16]
   5fb5c:	ldr	r0, [sp, #12]
   5fb60:	ldr	r0, [r0]
   5fb64:	str	r0, [sp, #12]
   5fb68:	ldr	r0, [fp, #-16]
   5fb6c:	movw	r1, #0
   5fb70:	cmp	r0, r1
   5fb74:	bne	5fb84 <__assert_fail@plt+0x4cfcc>
   5fb78:	ldr	r0, [sp, #20]
   5fb7c:	str	r0, [fp, #-4]
   5fb80:	b	5fba4 <__assert_fail@plt+0x4cfec>
   5fb84:	b	5fb04 <__assert_fail@plt+0x4cf4c>
   5fb88:	ldr	r0, [fp, #-16]
   5fb8c:	ldr	r0, [r0, #8]
   5fb90:	str	r0, [fp, #-16]
   5fb94:	ldr	r0, [sp, #12]
   5fb98:	add	r0, r0, #8
   5fb9c:	str	r0, [sp, #16]
   5fba0:	b	5fa50 <__assert_fail@plt+0x4ce98>
   5fba4:	ldr	r0, [fp, #-4]
   5fba8:	mov	sp, fp
   5fbac:	pop	{fp, pc}
   5fbb0:	sub	sp, sp, #12
   5fbb4:	str	r0, [sp, #8]
   5fbb8:	str	r1, [sp, #4]
   5fbbc:	ldr	r0, [sp, #8]
   5fbc0:	str	r0, [sp]
   5fbc4:	ldr	r0, [sp, #4]
   5fbc8:	ldr	r0, [r0, #24]
   5fbcc:	and	r0, r0, #255	; 0xff
   5fbd0:	cmp	r0, #17
   5fbd4:	bne	5fc04 <__assert_fail@plt+0x4d04c>
   5fbd8:	ldr	r0, [sp, #4]
   5fbdc:	ldr	r0, [r0, #20]
   5fbe0:	ldr	r1, [sp]
   5fbe4:	cmp	r0, r1
   5fbe8:	bne	5fc04 <__assert_fail@plt+0x4d04c>
   5fbec:	ldr	r0, [sp, #4]
   5fbf0:	ldr	r1, [r0, #24]
   5fbf4:	mvn	r2, #524288	; 0x80000
   5fbf8:	and	r1, r1, r2
   5fbfc:	orr	r1, r1, #524288	; 0x80000
   5fc00:	str	r1, [r0, #24]
   5fc04:	movw	r0, #0
   5fc08:	add	sp, sp, #12
   5fc0c:	bx	lr
   5fc10:	push	{fp, lr}
   5fc14:	mov	fp, sp
   5fc18:	sub	sp, sp, #40	; 0x28
   5fc1c:	str	r0, [fp, #-8]
   5fc20:	str	r1, [fp, #-12]
   5fc24:	str	r2, [fp, #-16]
   5fc28:	ldr	r0, [fp, #-8]
   5fc2c:	str	r0, [sp, #20]
   5fc30:	ldr	r0, [fp, #-12]
   5fc34:	ldr	r1, [fp, #-16]
   5fc38:	ldr	r2, [sp, #20]
   5fc3c:	str	r0, [sp, #8]
   5fc40:	mov	r0, r1
   5fc44:	mov	r1, r2
   5fc48:	ldr	r2, [sp, #8]
   5fc4c:	blx	r2
   5fc50:	str	r0, [sp, #16]
   5fc54:	ldr	r0, [sp, #16]
   5fc58:	cmp	r0, #0
   5fc5c:	beq	5fc6c <__assert_fail@plt+0x4d0b4>
   5fc60:	ldr	r0, [sp, #16]
   5fc64:	str	r0, [fp, #-4]
   5fc68:	b	5fd20 <__assert_fail@plt+0x4d168>
   5fc6c:	ldr	r0, [sp, #20]
   5fc70:	ldr	r0, [r0, #4]
   5fc74:	movw	r1, #0
   5fc78:	cmp	r0, r1
   5fc7c:	beq	5fc90 <__assert_fail@plt+0x4d0d8>
   5fc80:	ldr	r0, [sp, #20]
   5fc84:	ldr	r0, [r0, #4]
   5fc88:	str	r0, [sp, #20]
   5fc8c:	b	5fd1c <__assert_fail@plt+0x4d164>
   5fc90:	movw	r0, #0
   5fc94:	str	r0, [sp, #12]
   5fc98:	ldr	r0, [sp, #20]
   5fc9c:	ldr	r0, [r0, #8]
   5fca0:	ldr	r1, [sp, #12]
   5fca4:	cmp	r0, r1
   5fca8:	movw	r0, #1
   5fcac:	str	r0, [sp, #4]
   5fcb0:	beq	5fcd0 <__assert_fail@plt+0x4d118>
   5fcb4:	ldr	r0, [sp, #20]
   5fcb8:	ldr	r0, [r0, #8]
   5fcbc:	movw	r1, #0
   5fcc0:	cmp	r0, r1
   5fcc4:	movw	r0, #0
   5fcc8:	moveq	r0, #1
   5fccc:	str	r0, [sp, #4]
   5fcd0:	ldr	r0, [sp, #4]
   5fcd4:	tst	r0, #1
   5fcd8:	beq	5fd10 <__assert_fail@plt+0x4d158>
   5fcdc:	ldr	r0, [sp, #20]
   5fce0:	str	r0, [sp, #12]
   5fce4:	ldr	r0, [sp, #20]
   5fce8:	ldr	r0, [r0]
   5fcec:	str	r0, [sp, #20]
   5fcf0:	ldr	r0, [sp, #20]
   5fcf4:	movw	r1, #0
   5fcf8:	cmp	r0, r1
   5fcfc:	bne	5fd0c <__assert_fail@plt+0x4d154>
   5fd00:	movw	r0, #0
   5fd04:	str	r0, [fp, #-4]
   5fd08:	b	5fd20 <__assert_fail@plt+0x4d168>
   5fd0c:	b	5fc98 <__assert_fail@plt+0x4d0e0>
   5fd10:	ldr	r0, [sp, #20]
   5fd14:	ldr	r0, [r0, #8]
   5fd18:	str	r0, [sp, #20]
   5fd1c:	b	5fc30 <__assert_fail@plt+0x4d078>
   5fd20:	ldr	r0, [fp, #-4]
   5fd24:	mov	sp, fp
   5fd28:	pop	{fp, pc}
   5fd2c:	sub	sp, sp, #20
   5fd30:	str	r0, [sp, #16]
   5fd34:	str	r1, [sp, #12]
   5fd38:	ldr	r0, [sp, #16]
   5fd3c:	str	r0, [sp, #8]
   5fd40:	ldr	r0, [sp, #12]
   5fd44:	ldr	r0, [r0, #24]
   5fd48:	and	r0, r0, #255	; 0xff
   5fd4c:	cmp	r0, #4
   5fd50:	bne	5fdb4 <__assert_fail@plt+0x4d1fc>
   5fd54:	ldr	r0, [sp, #8]
   5fd58:	ldr	r0, [r0, #132]	; 0x84
   5fd5c:	movw	r1, #0
   5fd60:	cmp	r0, r1
   5fd64:	beq	5fdb4 <__assert_fail@plt+0x4d1fc>
   5fd68:	ldr	r0, [sp, #12]
   5fd6c:	ldr	r0, [r0, #20]
   5fd70:	str	r0, [sp, #4]
   5fd74:	ldr	r0, [sp, #8]
   5fd78:	ldr	r0, [r0, #132]	; 0x84
   5fd7c:	ldr	r1, [sp, #4]
   5fd80:	add	r0, r0, r1, lsl #2
   5fd84:	ldr	r0, [r0]
   5fd88:	ldr	r1, [sp, #12]
   5fd8c:	str	r0, [r1, #20]
   5fd90:	ldr	r0, [sp, #12]
   5fd94:	ldr	r0, [r0, #20]
   5fd98:	movw	r1, #1
   5fd9c:	lsl	r0, r1, r0
   5fda0:	ldr	r1, [sp, #8]
   5fda4:	ldr	r2, [r1, #80]	; 0x50
   5fda8:	orr	r0, r2, r0
   5fdac:	str	r0, [r1, #80]	; 0x50
   5fdb0:	b	5fe94 <__assert_fail@plt+0x4d2dc>
   5fdb4:	ldr	r0, [sp, #12]
   5fdb8:	ldr	r0, [r0, #24]
   5fdbc:	and	r0, r0, #255	; 0xff
   5fdc0:	cmp	r0, #17
   5fdc4:	bne	5fe90 <__assert_fail@plt+0x4d2d8>
   5fdc8:	ldr	r0, [sp, #12]
   5fdcc:	ldr	r0, [r0, #4]
   5fdd0:	movw	r1, #0
   5fdd4:	cmp	r0, r1
   5fdd8:	beq	5fe90 <__assert_fail@plt+0x4d2d8>
   5fddc:	ldr	r0, [sp, #12]
   5fde0:	ldr	r0, [r0, #4]
   5fde4:	ldr	r0, [r0, #24]
   5fde8:	and	r0, r0, #255	; 0xff
   5fdec:	cmp	r0, #17
   5fdf0:	bne	5fe90 <__assert_fail@plt+0x4d2d8>
   5fdf4:	ldr	r0, [sp, #12]
   5fdf8:	ldr	r0, [r0, #4]
   5fdfc:	ldr	r0, [r0, #20]
   5fe00:	str	r0, [sp]
   5fe04:	ldr	r0, [sp, #12]
   5fe08:	ldr	r0, [r0, #4]
   5fe0c:	ldr	r0, [r0, #4]
   5fe10:	ldr	r1, [sp, #12]
   5fe14:	str	r0, [r1, #4]
   5fe18:	ldr	r0, [sp, #12]
   5fe1c:	ldr	r0, [r0, #4]
   5fe20:	movw	r1, #0
   5fe24:	cmp	r0, r1
   5fe28:	beq	5fe3c <__assert_fail@plt+0x4d284>
   5fe2c:	ldr	r0, [sp, #12]
   5fe30:	ldr	r1, [sp, #12]
   5fe34:	ldr	r1, [r1, #4]
   5fe38:	str	r0, [r1]
   5fe3c:	ldr	r0, [sp, #8]
   5fe40:	ldr	r0, [r0, #132]	; 0x84
   5fe44:	ldr	r1, [sp, #12]
   5fe48:	ldr	r1, [r1, #20]
   5fe4c:	ldr	r1, [r0, r1, lsl #2]
   5fe50:	ldr	r2, [sp]
   5fe54:	add	r0, r0, r2, lsl #2
   5fe58:	str	r1, [r0]
   5fe5c:	ldr	r0, [sp]
   5fe60:	cmp	r0, #32
   5fe64:	bge	5fe8c <__assert_fail@plt+0x4d2d4>
   5fe68:	ldr	r0, [sp]
   5fe6c:	movw	r1, #1
   5fe70:	lsl	r0, r1, r0
   5fe74:	mvn	r1, #0
   5fe78:	eor	r0, r0, r1
   5fe7c:	ldr	r1, [sp, #8]
   5fe80:	ldr	r2, [r1, #80]	; 0x50
   5fe84:	and	r0, r2, r0
   5fe88:	str	r0, [r1, #80]	; 0x50
   5fe8c:	b	5fe90 <__assert_fail@plt+0x4d2d8>
   5fe90:	b	5fe94 <__assert_fail@plt+0x4d2dc>
   5fe94:	movw	r0, #0
   5fe98:	add	sp, sp, #20
   5fe9c:	bx	lr
   5fea0:	push	{fp, lr}
   5fea4:	mov	fp, sp
   5fea8:	sub	sp, sp, #16
   5feac:	str	r0, [fp, #-4]
   5feb0:	str	r1, [sp, #8]
   5feb4:	ldr	r0, [fp, #-4]
   5feb8:	str	r0, [sp, #4]
   5febc:	movw	r0, #0
   5fec0:	str	r0, [sp]
   5fec4:	ldr	r1, [sp, #8]
   5fec8:	ldr	r1, [r1, #4]
   5fecc:	cmp	r1, r0
   5fed0:	beq	5ff30 <__assert_fail@plt+0x4d378>
   5fed4:	ldr	r0, [sp, #8]
   5fed8:	ldr	r0, [r0, #4]
   5fedc:	ldr	r0, [r0, #24]
   5fee0:	and	r0, r0, #255	; 0xff
   5fee4:	cmp	r0, #17
   5fee8:	bne	5ff30 <__assert_fail@plt+0x4d378>
   5feec:	ldr	r1, [sp, #4]
   5fef0:	ldr	r0, [sp, #8]
   5fef4:	ldr	r2, [r0, #4]
   5fef8:	mov	r0, sp
   5fefc:	bl	606a4 <__assert_fail@plt+0x4daec>
   5ff00:	ldr	r1, [sp, #8]
   5ff04:	str	r0, [r1, #4]
   5ff08:	ldr	r0, [sp, #8]
   5ff0c:	ldr	r0, [r0, #4]
   5ff10:	movw	r1, #0
   5ff14:	cmp	r0, r1
   5ff18:	beq	5ff2c <__assert_fail@plt+0x4d374>
   5ff1c:	ldr	r0, [sp, #8]
   5ff20:	ldr	r1, [sp, #8]
   5ff24:	ldr	r1, [r1, #4]
   5ff28:	str	r0, [r1]
   5ff2c:	b	5ff30 <__assert_fail@plt+0x4d378>
   5ff30:	ldr	r0, [sp, #8]
   5ff34:	ldr	r0, [r0, #8]
   5ff38:	movw	r1, #0
   5ff3c:	cmp	r0, r1
   5ff40:	beq	5ffa0 <__assert_fail@plt+0x4d3e8>
   5ff44:	ldr	r0, [sp, #8]
   5ff48:	ldr	r0, [r0, #8]
   5ff4c:	ldr	r0, [r0, #24]
   5ff50:	and	r0, r0, #255	; 0xff
   5ff54:	cmp	r0, #17
   5ff58:	bne	5ffa0 <__assert_fail@plt+0x4d3e8>
   5ff5c:	ldr	r1, [sp, #4]
   5ff60:	ldr	r0, [sp, #8]
   5ff64:	ldr	r2, [r0, #8]
   5ff68:	mov	r0, sp
   5ff6c:	bl	606a4 <__assert_fail@plt+0x4daec>
   5ff70:	ldr	r1, [sp, #8]
   5ff74:	str	r0, [r1, #8]
   5ff78:	ldr	r0, [sp, #8]
   5ff7c:	ldr	r0, [r0, #8]
   5ff80:	movw	r1, #0
   5ff84:	cmp	r0, r1
   5ff88:	beq	5ff9c <__assert_fail@plt+0x4d3e4>
   5ff8c:	ldr	r0, [sp, #8]
   5ff90:	ldr	r1, [sp, #8]
   5ff94:	ldr	r1, [r1, #8]
   5ff98:	str	r0, [r1]
   5ff9c:	b	5ffa0 <__assert_fail@plt+0x4d3e8>
   5ffa0:	ldr	r0, [sp]
   5ffa4:	mov	sp, fp
   5ffa8:	pop	{fp, pc}
   5ffac:	push	{fp, lr}
   5ffb0:	mov	fp, sp
   5ffb4:	sub	sp, sp, #24
   5ffb8:	str	r0, [fp, #-8]
   5ffbc:	str	r1, [sp, #12]
   5ffc0:	ldr	r0, [fp, #-8]
   5ffc4:	str	r0, [sp, #8]
   5ffc8:	ldr	r0, [sp, #12]
   5ffcc:	ldr	r0, [r0, #24]
   5ffd0:	and	r0, r0, #255	; 0xff
   5ffd4:	cmp	r0, #16
   5ffd8:	bne	60008 <__assert_fail@plt+0x4d450>
   5ffdc:	ldr	r0, [sp, #12]
   5ffe0:	ldr	r0, [r0, #4]
   5ffe4:	ldr	r0, [r0, #12]
   5ffe8:	ldr	r1, [sp, #12]
   5ffec:	str	r0, [r1, #12]
   5fff0:	ldr	r0, [sp, #12]
   5fff4:	ldr	r0, [r0, #4]
   5fff8:	ldr	r0, [r0, #28]
   5fffc:	ldr	r1, [sp, #12]
   60000:	str	r0, [r1, #28]
   60004:	b	600a4 <__assert_fail@plt+0x4d4ec>
   60008:	ldr	r0, [sp, #12]
   6000c:	str	r0, [r0, #12]
   60010:	ldr	r0, [sp, #8]
   60014:	ldr	r1, [sp, #12]
   60018:	ldr	r2, [r1, #20]
   6001c:	ldr	r1, [r1, #24]
   60020:	str	r1, [sp, #4]
   60024:	mov	r1, r2
   60028:	ldr	r2, [sp, #4]
   6002c:	bl	608cc <__assert_fail@plt+0x4dd14>
   60030:	ldr	r1, [sp, #12]
   60034:	str	r0, [r1, #28]
   60038:	ldr	r0, [sp, #12]
   6003c:	ldr	r0, [r0, #28]
   60040:	cmn	r0, #1
   60044:	bne	60054 <__assert_fail@plt+0x4d49c>
   60048:	movw	r0, #12
   6004c:	str	r0, [fp, #-4]
   60050:	b	600ac <__assert_fail@plt+0x4d4f4>
   60054:	ldr	r0, [sp, #12]
   60058:	ldr	r0, [r0, #24]
   6005c:	and	r0, r0, #255	; 0xff
   60060:	cmp	r0, #12
   60064:	bne	600a0 <__assert_fail@plt+0x4d4e8>
   60068:	ldr	r0, [pc, #72]	; 600b8 <__assert_fail@plt+0x4d500>
   6006c:	ldr	r1, [sp, #12]
   60070:	ldr	r2, [r1, #20]
   60074:	ldr	r1, [r1, #28]
   60078:	ldr	r3, [sp, #8]
   6007c:	ldr	r3, [r3]
   60080:	add	r1, r3, r1, lsl #3
   60084:	ldr	r3, [r1, #4]
   60088:	movw	ip, #1023	; 0x3ff
   6008c:	and	r2, r2, ip
   60090:	lsl	r2, r2, #8
   60094:	and	r0, r3, r0
   60098:	orr	r0, r0, r2
   6009c:	str	r0, [r1, #4]
   600a0:	b	600a4 <__assert_fail@plt+0x4d4ec>
   600a4:	movw	r0, #0
   600a8:	str	r0, [fp, #-4]
   600ac:	ldr	r0, [fp, #-4]
   600b0:	mov	sp, fp
   600b4:	pop	{fp, pc}
   600b8:			; <UNDEFINED> instruction: 0xfffc00ff
   600bc:	sub	sp, sp, #12
   600c0:	str	r0, [sp, #8]
   600c4:	str	r1, [sp, #4]
   600c8:	ldr	r0, [sp, #4]
   600cc:	ldrb	r0, [r0, #24]
   600d0:	mov	r1, r0
   600d4:	cmp	r0, #11
   600d8:	str	r1, [sp]
   600dc:	beq	600f4 <__assert_fail@plt+0x4d53c>
   600e0:	b	600e4 <__assert_fail@plt+0x4d52c>
   600e4:	ldr	r0, [sp]
   600e8:	cmp	r0, #16
   600ec:	beq	60108 <__assert_fail@plt+0x4d550>
   600f0:	b	60138 <__assert_fail@plt+0x4d580>
   600f4:	ldr	r0, [sp, #4]
   600f8:	ldr	r1, [sp, #4]
   600fc:	ldr	r1, [r1, #4]
   60100:	str	r0, [r1, #16]
   60104:	b	6018c <__assert_fail@plt+0x4d5d4>
   60108:	ldr	r0, [sp, #4]
   6010c:	ldr	r0, [r0, #8]
   60110:	ldr	r0, [r0, #12]
   60114:	ldr	r1, [sp, #4]
   60118:	ldr	r1, [r1, #4]
   6011c:	str	r0, [r1, #16]
   60120:	ldr	r0, [sp, #4]
   60124:	ldr	r0, [r0, #16]
   60128:	ldr	r1, [sp, #4]
   6012c:	ldr	r1, [r1, #8]
   60130:	str	r0, [r1, #16]
   60134:	b	6018c <__assert_fail@plt+0x4d5d4>
   60138:	ldr	r0, [sp, #4]
   6013c:	ldr	r0, [r0, #4]
   60140:	movw	r1, #0
   60144:	cmp	r0, r1
   60148:	beq	60160 <__assert_fail@plt+0x4d5a8>
   6014c:	ldr	r0, [sp, #4]
   60150:	ldr	r0, [r0, #16]
   60154:	ldr	r1, [sp, #4]
   60158:	ldr	r1, [r1, #4]
   6015c:	str	r0, [r1, #16]
   60160:	ldr	r0, [sp, #4]
   60164:	ldr	r0, [r0, #8]
   60168:	movw	r1, #0
   6016c:	cmp	r0, r1
   60170:	beq	60188 <__assert_fail@plt+0x4d5d0>
   60174:	ldr	r0, [sp, #4]
   60178:	ldr	r0, [r0, #16]
   6017c:	ldr	r1, [sp, #4]
   60180:	ldr	r1, [r1, #8]
   60184:	str	r0, [r1, #16]
   60188:	b	6018c <__assert_fail@plt+0x4d5d4>
   6018c:	movw	r0, #0
   60190:	add	sp, sp, #12
   60194:	bx	lr
   60198:	push	{fp, lr}
   6019c:	mov	fp, sp
   601a0:	sub	sp, sp, #32
   601a4:	str	r0, [fp, #-4]
   601a8:	str	r1, [fp, #-8]
   601ac:	ldr	r0, [fp, #-4]
   601b0:	str	r0, [fp, #-12]
   601b4:	ldr	r0, [fp, #-8]
   601b8:	ldr	r0, [r0, #28]
   601bc:	str	r0, [sp, #16]
   601c0:	mov	r0, #0
   601c4:	str	r0, [sp, #12]
   601c8:	ldr	r0, [fp, #-8]
   601cc:	ldrb	r0, [r0, #24]
   601d0:	sub	r0, r0, #2
   601d4:	cmp	r0, #14
   601d8:	str	r0, [sp]
   601dc:	bhi	603b8 <__assert_fail@plt+0x4d800>
   601e0:	add	r0, pc, #8
   601e4:	ldr	r1, [sp]
   601e8:	ldr	r0, [r0, r1, lsl #2]
   601ec:	mov	pc, r0
   601f0:	andeq	r0, r6, r0, lsr r2
   601f4:			; <UNDEFINED> instruction: 0x000603b8
   601f8:	andeq	r0, r6, r8, asr r3
   601fc:			; <UNDEFINED> instruction: 0x000603b8
   60200:			; <UNDEFINED> instruction: 0x000603b8
   60204:			; <UNDEFINED> instruction: 0x000603b8
   60208:	andeq	r0, r6, r8, lsr #6
   6020c:	andeq	r0, r6, r8, lsr #6
   60210:	andeq	r0, r6, ip, asr #4
   60214:	andeq	r0, r6, ip, asr #4
   60218:	andeq	r0, r6, r8, lsr #6
   6021c:			; <UNDEFINED> instruction: 0x000603b8
   60220:			; <UNDEFINED> instruction: 0x000603b8
   60224:			; <UNDEFINED> instruction: 0x000603b8
   60228:	andeq	r0, r6, ip, lsr #4
   6022c:	b	603f4 <__assert_fail@plt+0x4d83c>
   60230:	ldr	r0, [fp, #-8]
   60234:	ldr	r0, [r0, #16]
   60238:	movw	r1, #0
   6023c:	cmp	r0, r1
   60240:	bne	60248 <__assert_fail@plt+0x4d690>
   60244:	b	60248 <__assert_fail@plt+0x4d690>
   60248:	b	603f4 <__assert_fail@plt+0x4d83c>
   6024c:	ldr	r0, [fp, #-12]
   60250:	ldrb	r1, [r0, #88]	; 0x58
   60254:	bic	r1, r1, #1
   60258:	movw	r2, #1
   6025c:	orr	r1, r1, r2
   60260:	strb	r1, [r0, #88]	; 0x58
   60264:	ldr	r0, [fp, #-8]
   60268:	ldr	r0, [r0, #4]
   6026c:	movw	r1, #0
   60270:	cmp	r0, r1
   60274:	beq	60290 <__assert_fail@plt+0x4d6d8>
   60278:	ldr	r0, [fp, #-8]
   6027c:	ldr	r0, [r0, #4]
   60280:	ldr	r0, [r0, #12]
   60284:	ldr	r0, [r0, #28]
   60288:	str	r0, [sp, #8]
   6028c:	b	602a0 <__assert_fail@plt+0x4d6e8>
   60290:	ldr	r0, [fp, #-8]
   60294:	ldr	r0, [r0, #16]
   60298:	ldr	r0, [r0, #28]
   6029c:	str	r0, [sp, #8]
   602a0:	ldr	r0, [fp, #-8]
   602a4:	ldr	r0, [r0, #8]
   602a8:	movw	r1, #0
   602ac:	cmp	r0, r1
   602b0:	beq	602cc <__assert_fail@plt+0x4d714>
   602b4:	ldr	r0, [fp, #-8]
   602b8:	ldr	r0, [r0, #8]
   602bc:	ldr	r0, [r0, #12]
   602c0:	ldr	r0, [r0, #28]
   602c4:	str	r0, [sp, #4]
   602c8:	b	602dc <__assert_fail@plt+0x4d724>
   602cc:	ldr	r0, [fp, #-8]
   602d0:	ldr	r0, [r0, #16]
   602d4:	ldr	r0, [r0, #28]
   602d8:	str	r0, [sp, #4]
   602dc:	ldr	r0, [sp, #8]
   602e0:	cmn	r0, #1
   602e4:	ble	602ec <__assert_fail@plt+0x4d734>
   602e8:	b	602ec <__assert_fail@plt+0x4d734>
   602ec:	ldr	r0, [sp, #4]
   602f0:	cmn	r0, #1
   602f4:	ble	602fc <__assert_fail@plt+0x4d744>
   602f8:	b	602fc <__assert_fail@plt+0x4d744>
   602fc:	ldr	r0, [fp, #-12]
   60300:	ldr	r0, [r0, #20]
   60304:	ldr	r1, [sp, #16]
   60308:	movw	r2, #12
   6030c:	mul	r1, r1, r2
   60310:	add	r0, r0, r1
   60314:	ldr	r1, [sp, #8]
   60318:	ldr	r2, [sp, #4]
   6031c:	bl	60be8 <__assert_fail@plt+0x4e030>
   60320:	str	r0, [sp, #12]
   60324:	b	603f4 <__assert_fail@plt+0x4d83c>
   60328:	ldr	r0, [fp, #-12]
   6032c:	ldr	r0, [r0, #20]
   60330:	ldr	r1, [sp, #16]
   60334:	movw	r2, #12
   60338:	mul	r1, r1, r2
   6033c:	add	r0, r0, r1
   60340:	ldr	r1, [fp, #-8]
   60344:	ldr	r1, [r1, #16]
   60348:	ldr	r1, [r1, #28]
   6034c:	bl	60ce4 <__assert_fail@plt+0x4e12c>
   60350:	str	r0, [sp, #12]
   60354:	b	603f4 <__assert_fail@plt+0x4d83c>
   60358:	ldr	r0, [fp, #-8]
   6035c:	ldr	r0, [r0, #16]
   60360:	ldr	r0, [r0, #28]
   60364:	ldr	r1, [fp, #-12]
   60368:	ldr	r1, [r1, #12]
   6036c:	ldr	r2, [sp, #16]
   60370:	add	r1, r1, r2, lsl #2
   60374:	str	r0, [r1]
   60378:	ldr	r0, [fp, #-8]
   6037c:	ldr	r0, [r0, #24]
   60380:	and	r0, r0, #255	; 0xff
   60384:	cmp	r0, #4
   60388:	bne	603b4 <__assert_fail@plt+0x4d7fc>
   6038c:	ldr	r0, [fp, #-12]
   60390:	ldr	r1, [r0, #12]
   60394:	ldr	r0, [r0, #20]
   60398:	ldr	r2, [sp, #16]
   6039c:	add	r3, r2, r2, lsl #1
   603a0:	add	r0, r0, r3, lsl #2
   603a4:	add	r1, r1, r2, lsl #2
   603a8:	ldr	r1, [r1]
   603ac:	bl	60ce4 <__assert_fail@plt+0x4e12c>
   603b0:	str	r0, [sp, #12]
   603b4:	b	603f4 <__assert_fail@plt+0x4d83c>
   603b8:	ldr	r0, [fp, #-8]
   603bc:	ldr	r0, [r0, #24]
   603c0:	and	r0, r0, #255	; 0xff
   603c4:	and	r0, r0, #8
   603c8:	cmp	r0, #0
   603cc:	bne	603d4 <__assert_fail@plt+0x4d81c>
   603d0:	b	603d4 <__assert_fail@plt+0x4d81c>
   603d4:	ldr	r0, [fp, #-8]
   603d8:	ldr	r0, [r0, #16]
   603dc:	ldr	r0, [r0, #28]
   603e0:	ldr	r1, [fp, #-12]
   603e4:	ldr	r1, [r1, #12]
   603e8:	ldr	r2, [sp, #16]
   603ec:	add	r1, r1, r2, lsl #2
   603f0:	str	r0, [r1]
   603f4:	ldr	r0, [sp, #12]
   603f8:	mov	sp, fp
   603fc:	pop	{fp, pc}
   60400:	push	{fp, lr}
   60404:	mov	fp, sp
   60408:	sub	sp, sp, #32
   6040c:	str	r0, [fp, #-8]
   60410:	ldr	r0, [fp, #-8]
   60414:	ldr	r0, [r0, #8]
   60418:	cmp	r0, #0
   6041c:	bls	60424 <__assert_fail@plt+0x4d86c>
   60420:	b	60424 <__assert_fail@plt+0x4d86c>
   60424:	movw	r0, #0
   60428:	strb	r0, [fp, #-13]
   6042c:	movw	r0, #0
   60430:	str	r0, [fp, #-12]
   60434:	ldr	r0, [fp, #-12]
   60438:	ldr	r1, [fp, #-8]
   6043c:	ldr	r1, [r1, #8]
   60440:	cmp	r0, r1
   60444:	bne	60468 <__assert_fail@plt+0x4d8b0>
   60448:	ldrb	r0, [fp, #-13]
   6044c:	tst	r0, #1
   60450:	bne	60458 <__assert_fail@plt+0x4d8a0>
   60454:	b	60534 <__assert_fail@plt+0x4d97c>
   60458:	movw	r0, #0
   6045c:	strb	r0, [fp, #-13]
   60460:	movw	r0, #0
   60464:	str	r0, [fp, #-12]
   60468:	ldr	r0, [fp, #-8]
   6046c:	ldr	r0, [r0, #24]
   60470:	ldr	r1, [fp, #-12]
   60474:	movw	r2, #12
   60478:	mul	r1, r1, r2
   6047c:	add	r0, r0, r1
   60480:	ldr	r0, [r0, #4]
   60484:	cmn	r0, #1
   60488:	beq	60490 <__assert_fail@plt+0x4d8d8>
   6048c:	b	60490 <__assert_fail@plt+0x4d8d8>
   60490:	ldr	r0, [fp, #-8]
   60494:	ldr	r0, [r0, #24]
   60498:	ldr	r1, [fp, #-12]
   6049c:	movw	r2, #12
   604a0:	mul	r1, r1, r2
   604a4:	add	r0, r0, r1
   604a8:	ldr	r0, [r0, #4]
   604ac:	cmp	r0, #0
   604b0:	beq	604b8 <__assert_fail@plt+0x4d900>
   604b4:	b	60524 <__assert_fail@plt+0x4d96c>
   604b8:	ldr	r1, [fp, #-8]
   604bc:	ldr	r2, [fp, #-12]
   604c0:	mov	r0, sp
   604c4:	movw	r3, #1
   604c8:	and	r3, r3, #1
   604cc:	bl	60d74 <__assert_fail@plt+0x4e1bc>
   604d0:	str	r0, [sp, #12]
   604d4:	ldr	r0, [sp, #12]
   604d8:	cmp	r0, #0
   604dc:	beq	604ec <__assert_fail@plt+0x4d934>
   604e0:	ldr	r0, [sp, #12]
   604e4:	str	r0, [fp, #-4]
   604e8:	b	6053c <__assert_fail@plt+0x4d984>
   604ec:	ldr	r0, [fp, #-8]
   604f0:	ldr	r0, [r0, #24]
   604f4:	ldr	r1, [fp, #-12]
   604f8:	movw	r2, #12
   604fc:	mul	r1, r1, r2
   60500:	add	r0, r0, r1
   60504:	ldr	r0, [r0, #4]
   60508:	cmp	r0, #0
   6050c:	bne	60520 <__assert_fail@plt+0x4d968>
   60510:	movw	r0, #1
   60514:	strb	r0, [fp, #-13]
   60518:	ldr	r0, [sp, #8]
   6051c:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   60520:	b	60524 <__assert_fail@plt+0x4d96c>
   60524:	ldr	r0, [fp, #-12]
   60528:	add	r0, r0, #1
   6052c:	str	r0, [fp, #-12]
   60530:	b	60434 <__assert_fail@plt+0x4d87c>
   60534:	movw	r0, #0
   60538:	str	r0, [fp, #-4]
   6053c:	ldr	r0, [fp, #-4]
   60540:	mov	sp, fp
   60544:	pop	{fp, pc}
   60548:	push	{fp, lr}
   6054c:	mov	fp, sp
   60550:	sub	sp, sp, #24
   60554:	str	r0, [fp, #-8]
   60558:	movw	r0, #0
   6055c:	str	r0, [sp, #8]
   60560:	ldr	r0, [sp, #8]
   60564:	ldr	r1, [fp, #-8]
   60568:	ldr	r1, [r1, #8]
   6056c:	cmp	r0, r1
   60570:	bcs	605a8 <__assert_fail@plt+0x4d9f0>
   60574:	ldr	r0, [fp, #-8]
   60578:	ldr	r0, [r0, #28]
   6057c:	ldr	r1, [sp, #8]
   60580:	movw	r2, #12
   60584:	mul	r1, r1, r2
   60588:	add	r0, r0, r1
   6058c:	movw	r1, #0
   60590:	and	r1, r1, #255	; 0xff
   60594:	bl	12900 <memset@plt>
   60598:	ldr	r0, [sp, #8]
   6059c:	add	r0, r0, #1
   605a0:	str	r0, [sp, #8]
   605a4:	b	60560 <__assert_fail@plt+0x4d9a8>
   605a8:	movw	r0, #0
   605ac:	str	r0, [sp, #12]
   605b0:	ldr	r0, [sp, #12]
   605b4:	ldr	r1, [fp, #-8]
   605b8:	ldr	r1, [r1, #8]
   605bc:	cmp	r0, r1
   605c0:	bcs	60690 <__assert_fail@plt+0x4dad8>
   605c4:	ldr	r0, [fp, #-8]
   605c8:	ldr	r0, [r0, #24]
   605cc:	ldr	r1, [sp, #12]
   605d0:	movw	r2, #12
   605d4:	mul	r1, r1, r2
   605d8:	add	r0, r0, r1
   605dc:	ldr	r0, [r0, #8]
   605e0:	str	r0, [sp]
   605e4:	movw	r0, #0
   605e8:	str	r0, [sp, #8]
   605ec:	ldr	r0, [sp, #8]
   605f0:	ldr	r1, [fp, #-8]
   605f4:	ldr	r1, [r1, #24]
   605f8:	ldr	r2, [sp, #12]
   605fc:	movw	r3, #12
   60600:	mul	r2, r2, r3
   60604:	add	r1, r1, r2
   60608:	ldr	r1, [r1, #4]
   6060c:	cmp	r0, r1
   60610:	bge	6067c <__assert_fail@plt+0x4dac4>
   60614:	ldr	r0, [fp, #-8]
   60618:	ldr	r0, [r0, #28]
   6061c:	ldr	r1, [sp]
   60620:	ldr	r2, [sp, #8]
   60624:	add	r1, r1, r2, lsl #2
   60628:	ldr	r1, [r1]
   6062c:	movw	r2, #12
   60630:	mul	r1, r1, r2
   60634:	add	r0, r0, r1
   60638:	ldr	r1, [sp, #12]
   6063c:	bl	61ed8 <__assert_fail@plt+0x4f320>
   60640:	and	r0, r0, #1
   60644:	strb	r0, [sp, #7]
   60648:	ldrb	r0, [sp, #7]
   6064c:	mvn	r1, #0
   60650:	eor	r0, r0, r1
   60654:	tst	r0, #1
   60658:	beq	60668 <__assert_fail@plt+0x4dab0>
   6065c:	movw	r0, #12
   60660:	str	r0, [fp, #-4]
   60664:	b	60698 <__assert_fail@plt+0x4dae0>
   60668:	b	6066c <__assert_fail@plt+0x4dab4>
   6066c:	ldr	r0, [sp, #8]
   60670:	add	r0, r0, #1
   60674:	str	r0, [sp, #8]
   60678:	b	605ec <__assert_fail@plt+0x4da34>
   6067c:	b	60680 <__assert_fail@plt+0x4dac8>
   60680:	ldr	r0, [sp, #12]
   60684:	add	r0, r0, #1
   60688:	str	r0, [sp, #12]
   6068c:	b	605b0 <__assert_fail@plt+0x4d9f8>
   60690:	movw	r0, #0
   60694:	str	r0, [fp, #-4]
   60698:	ldr	r0, [fp, #-4]
   6069c:	mov	sp, fp
   606a0:	pop	{fp, pc}
   606a4:	push	{fp, lr}
   606a8:	mov	fp, sp
   606ac:	sub	sp, sp, #56	; 0x38
   606b0:	str	r0, [fp, #-8]
   606b4:	str	r1, [fp, #-12]
   606b8:	str	r2, [fp, #-16]
   606bc:	ldr	r0, [fp, #-12]
   606c0:	ldr	r0, [r0]
   606c4:	str	r0, [fp, #-20]	; 0xffffffec
   606c8:	ldr	r0, [fp, #-16]
   606cc:	ldr	r0, [r0, #4]
   606d0:	str	r0, [fp, #-24]	; 0xffffffe8
   606d4:	ldr	r0, [fp, #-12]
   606d8:	ldrb	r0, [r0, #28]
   606dc:	ubfx	r0, r0, #4, #1
   606e0:	and	r0, r0, #255	; 0xff
   606e4:	cmp	r0, #0
   606e8:	beq	60744 <__assert_fail@plt+0x4db8c>
   606ec:	ldr	r0, [fp, #-16]
   606f0:	ldr	r0, [r0, #4]
   606f4:	movw	r1, #0
   606f8:	cmp	r0, r1
   606fc:	beq	60744 <__assert_fail@plt+0x4db8c>
   60700:	ldr	r0, [fp, #-16]
   60704:	ldr	r0, [r0, #20]
   60708:	cmp	r0, #32
   6070c:	bge	60734 <__assert_fail@plt+0x4db7c>
   60710:	ldr	r0, [fp, #-20]	; 0xffffffec
   60714:	ldr	r0, [r0, #80]	; 0x50
   60718:	ldr	r1, [fp, #-16]
   6071c:	ldr	r1, [r1, #20]
   60720:	movw	r2, #1
   60724:	lsl	r1, r2, r1
   60728:	and	r0, r0, r1
   6072c:	cmp	r0, #0
   60730:	bne	60744 <__assert_fail@plt+0x4db8c>
   60734:	ldr	r0, [fp, #-16]
   60738:	ldr	r0, [r0, #4]
   6073c:	str	r0, [fp, #-4]
   60740:	b	608c0 <__assert_fail@plt+0x4dd08>
   60744:	ldr	r0, [fp, #-20]	; 0xffffffec
   60748:	movw	r1, #0
   6074c:	str	r1, [sp, #12]
   60750:	ldr	r2, [sp, #12]
   60754:	movw	r3, #8
   60758:	bl	5a498 <__assert_fail@plt+0x478e0>
   6075c:	str	r0, [sp, #28]
   60760:	ldr	r0, [fp, #-20]	; 0xffffffec
   60764:	movw	r1, #0
   60768:	str	r1, [sp, #8]
   6076c:	ldr	r2, [sp, #8]
   60770:	movw	r3, #9
   60774:	bl	5a498 <__assert_fail@plt+0x478e0>
   60778:	str	r0, [sp, #24]
   6077c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   60780:	movw	r1, #0
   60784:	cmp	r0, r1
   60788:	beq	607a8 <__assert_fail@plt+0x4dbf0>
   6078c:	ldr	r0, [fp, #-20]	; 0xffffffec
   60790:	ldr	r1, [fp, #-24]	; 0xffffffe8
   60794:	ldr	r2, [sp, #24]
   60798:	movw	r3, #16
   6079c:	bl	5a498 <__assert_fail@plt+0x478e0>
   607a0:	str	r0, [sp, #4]
   607a4:	b	607b0 <__assert_fail@plt+0x4dbf8>
   607a8:	ldr	r0, [sp, #24]
   607ac:	str	r0, [sp, #4]
   607b0:	ldr	r0, [sp, #4]
   607b4:	str	r0, [sp, #20]
   607b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   607bc:	ldr	r1, [sp, #28]
   607c0:	ldr	r2, [sp, #20]
   607c4:	movw	r3, #16
   607c8:	bl	5a498 <__assert_fail@plt+0x478e0>
   607cc:	str	r0, [sp, #16]
   607d0:	ldr	r0, [sp, #16]
   607d4:	movw	r1, #0
   607d8:	cmp	r0, r1
   607dc:	movw	r0, #1
   607e0:	str	r0, [sp]
   607e4:	beq	60830 <__assert_fail@plt+0x4dc78>
   607e8:	ldr	r0, [sp, #20]
   607ec:	movw	r1, #0
   607f0:	cmp	r0, r1
   607f4:	movw	r0, #1
   607f8:	str	r0, [sp]
   607fc:	beq	60830 <__assert_fail@plt+0x4dc78>
   60800:	ldr	r0, [sp, #28]
   60804:	movw	r1, #0
   60808:	cmp	r0, r1
   6080c:	movw	r0, #1
   60810:	str	r0, [sp]
   60814:	beq	60830 <__assert_fail@plt+0x4dc78>
   60818:	ldr	r0, [sp, #24]
   6081c:	movw	r1, #0
   60820:	cmp	r0, r1
   60824:	movw	r0, #0
   60828:	moveq	r0, #1
   6082c:	str	r0, [sp]
   60830:	ldr	r0, [sp]
   60834:	tst	r0, #1
   60838:	beq	60854 <__assert_fail@plt+0x4dc9c>
   6083c:	ldr	r0, [fp, #-8]
   60840:	movw	r1, #12
   60844:	str	r1, [r0]
   60848:	movw	r0, #0
   6084c:	str	r0, [fp, #-4]
   60850:	b	608c0 <__assert_fail@plt+0x4dd08>
   60854:	ldr	r0, [fp, #-16]
   60858:	ldr	r0, [r0, #20]
   6085c:	ldr	r1, [sp, #24]
   60860:	str	r0, [r1, #20]
   60864:	ldr	r1, [sp, #28]
   60868:	str	r0, [r1, #20]
   6086c:	ldr	r0, [fp, #-16]
   60870:	ldr	r0, [r0, #24]
   60874:	lsr	r0, r0, #19
   60878:	and	r0, r0, #1
   6087c:	ldr	r1, [sp, #24]
   60880:	ldr	r2, [r1, #24]
   60884:	and	r0, r0, #1
   60888:	lsl	r3, r0, #19
   6088c:	mvn	ip, #524288	; 0x80000
   60890:	and	r2, r2, ip
   60894:	orr	r2, r2, r3
   60898:	str	r2, [r1, #24]
   6089c:	ldr	r1, [sp, #28]
   608a0:	ldr	r2, [r1, #24]
   608a4:	and	r0, r0, #1
   608a8:	lsl	r0, r0, #19
   608ac:	and	r2, r2, ip
   608b0:	orr	r0, r2, r0
   608b4:	str	r0, [r1, #24]
   608b8:	ldr	r0, [sp, #16]
   608bc:	str	r0, [fp, #-4]
   608c0:	ldr	r0, [fp, #-4]
   608c4:	mov	sp, fp
   608c8:	pop	{fp, pc}
   608cc:	push	{fp, lr}
   608d0:	mov	fp, sp
   608d4:	sub	sp, sp, #64	; 0x40
   608d8:	str	r1, [fp, #-12]
   608dc:	str	r2, [fp, #-8]
   608e0:	str	r0, [fp, #-16]
   608e4:	ldr	r0, [fp, #-16]
   608e8:	ldr	r0, [r0, #8]
   608ec:	ldr	r1, [fp, #-16]
   608f0:	ldr	r1, [r1, #4]
   608f4:	cmp	r0, r1
   608f8:	bcc	60aac <__assert_fail@plt+0x4def4>
   608fc:	ldr	r0, [pc, #732]	; 60be0 <__assert_fail@plt+0x4e028>
   60900:	ldr	r1, [fp, #-16]
   60904:	ldr	r1, [r1, #4]
   60908:	lsl	r1, r1, #1
   6090c:	str	r1, [fp, #-20]	; 0xffffffec
   60910:	movw	r1, #12
   60914:	str	r1, [sp, #20]
   60918:	ldr	r1, [fp, #-20]	; 0xffffffec
   6091c:	cmp	r0, r1
   60920:	bcs	60930 <__assert_fail@plt+0x4dd78>
   60924:	mvn	r0, #0
   60928:	str	r0, [fp, #-4]
   6092c:	b	60bd4 <__assert_fail@plt+0x4e01c>
   60930:	ldr	r0, [fp, #-16]
   60934:	ldr	r0, [r0]
   60938:	ldr	r1, [fp, #-20]	; 0xffffffec
   6093c:	lsl	r1, r1, #3
   60940:	bl	538c8 <__assert_fail@plt+0x40d10>
   60944:	str	r0, [sp, #24]
   60948:	ldr	r0, [sp, #24]
   6094c:	movw	r1, #0
   60950:	cmp	r0, r1
   60954:	bne	60964 <__assert_fail@plt+0x4ddac>
   60958:	mvn	r0, #0
   6095c:	str	r0, [fp, #-4]
   60960:	b	60bd4 <__assert_fail@plt+0x4e01c>
   60964:	ldr	r0, [sp, #24]
   60968:	ldr	r1, [fp, #-16]
   6096c:	str	r0, [r1]
   60970:	ldr	r0, [fp, #-16]
   60974:	ldr	r0, [r0, #12]
   60978:	ldr	r1, [fp, #-20]	; 0xffffffec
   6097c:	lsl	r1, r1, #2
   60980:	bl	538c8 <__assert_fail@plt+0x40d10>
   60984:	str	r0, [fp, #-24]	; 0xffffffe8
   60988:	ldr	r0, [fp, #-16]
   6098c:	ldr	r0, [r0, #16]
   60990:	ldr	r1, [fp, #-20]	; 0xffffffec
   60994:	lsl	r1, r1, #2
   60998:	bl	538c8 <__assert_fail@plt+0x40d10>
   6099c:	str	r0, [fp, #-28]	; 0xffffffe4
   609a0:	ldr	r0, [fp, #-16]
   609a4:	ldr	r0, [r0, #20]
   609a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   609ac:	movw	r2, #12
   609b0:	mul	r1, r1, r2
   609b4:	bl	538c8 <__assert_fail@plt+0x40d10>
   609b8:	str	r0, [sp, #32]
   609bc:	ldr	r0, [fp, #-16]
   609c0:	ldr	r0, [r0, #24]
   609c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   609c8:	movw	r2, #12
   609cc:	mul	r1, r1, r2
   609d0:	bl	538c8 <__assert_fail@plt+0x40d10>
   609d4:	str	r0, [sp, #28]
   609d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   609dc:	movw	r1, #0
   609e0:	cmp	r0, r1
   609e4:	movw	r0, #1
   609e8:	str	r0, [sp, #16]
   609ec:	beq	60a38 <__assert_fail@plt+0x4de80>
   609f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   609f4:	movw	r1, #0
   609f8:	cmp	r0, r1
   609fc:	movw	r0, #1
   60a00:	str	r0, [sp, #16]
   60a04:	beq	60a38 <__assert_fail@plt+0x4de80>
   60a08:	ldr	r0, [sp, #32]
   60a0c:	movw	r1, #0
   60a10:	cmp	r0, r1
   60a14:	movw	r0, #1
   60a18:	str	r0, [sp, #16]
   60a1c:	beq	60a38 <__assert_fail@plt+0x4de80>
   60a20:	ldr	r0, [sp, #28]
   60a24:	movw	r1, #0
   60a28:	cmp	r0, r1
   60a2c:	movw	r0, #0
   60a30:	moveq	r0, #1
   60a34:	str	r0, [sp, #16]
   60a38:	ldr	r0, [sp, #16]
   60a3c:	tst	r0, #1
   60a40:	beq	60a70 <__assert_fail@plt+0x4deb8>
   60a44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   60a48:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   60a4c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   60a50:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   60a54:	ldr	r0, [sp, #32]
   60a58:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   60a5c:	ldr	r0, [sp, #28]
   60a60:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   60a64:	mvn	r0, #0
   60a68:	str	r0, [fp, #-4]
   60a6c:	b	60bd4 <__assert_fail@plt+0x4e01c>
   60a70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   60a74:	ldr	r1, [fp, #-16]
   60a78:	str	r0, [r1, #12]
   60a7c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   60a80:	ldr	r1, [fp, #-16]
   60a84:	str	r0, [r1, #16]
   60a88:	ldr	r0, [sp, #32]
   60a8c:	ldr	r1, [fp, #-16]
   60a90:	str	r0, [r1, #20]
   60a94:	ldr	r0, [sp, #28]
   60a98:	ldr	r1, [fp, #-16]
   60a9c:	str	r0, [r1, #24]
   60aa0:	ldr	r0, [fp, #-20]	; 0xffffffec
   60aa4:	ldr	r1, [fp, #-16]
   60aa8:	str	r0, [r1, #4]
   60aac:	ldr	r0, [pc, #304]	; 60be4 <__assert_fail@plt+0x4e02c>
   60ab0:	ldr	r1, [fp, #-16]
   60ab4:	ldr	r2, [r1]
   60ab8:	ldr	r1, [r1, #8]
   60abc:	add	r1, r2, r1, lsl #3
   60ac0:	vldr	d16, [fp, #-12]
   60ac4:	vstr	d16, [r1]
   60ac8:	ldr	r1, [fp, #-16]
   60acc:	ldr	r2, [r1]
   60ad0:	ldr	r1, [r1, #8]
   60ad4:	add	r1, r2, r1, lsl #3
   60ad8:	ldr	r2, [r1, #4]
   60adc:	and	r0, r2, r0
   60ae0:	str	r0, [r1, #4]
   60ae4:	ldr	r0, [fp, #-8]
   60ae8:	and	r0, r0, #255	; 0xff
   60aec:	cmp	r0, #5
   60af0:	bne	60b0c <__assert_fail@plt+0x4df54>
   60af4:	ldr	r0, [fp, #-16]
   60af8:	ldr	r0, [r0, #92]	; 0x5c
   60afc:	cmp	r0, #1
   60b00:	movw	r0, #1
   60b04:	str	r0, [sp, #12]
   60b08:	bgt	60b24 <__assert_fail@plt+0x4df6c>
   60b0c:	ldr	r0, [fp, #-8]
   60b10:	and	r0, r0, #255	; 0xff
   60b14:	cmp	r0, #6
   60b18:	movw	r0, #0
   60b1c:	moveq	r0, #1
   60b20:	str	r0, [sp, #12]
   60b24:	ldr	r0, [sp, #12]
   60b28:	and	r0, r0, #1
   60b2c:	ldr	r1, [fp, #-16]
   60b30:	ldr	r2, [r1]
   60b34:	ldr	r1, [r1, #8]
   60b38:	add	r1, r2, r1, lsl #3
   60b3c:	ldr	r2, [r1, #4]
   60b40:	bic	r2, r2, #1048576	; 0x100000
   60b44:	orr	r0, r2, r0, lsl #20
   60b48:	str	r0, [r1, #4]
   60b4c:	ldr	r0, [fp, #-16]
   60b50:	ldr	r1, [r0, #8]
   60b54:	ldr	r0, [r0, #12]
   60b58:	add	r0, r0, r1, lsl #2
   60b5c:	mvn	r1, #0
   60b60:	str	r1, [r0]
   60b64:	ldr	r0, [fp, #-16]
   60b68:	ldr	r0, [r0, #20]
   60b6c:	ldr	r1, [fp, #-16]
   60b70:	ldr	r1, [r1, #8]
   60b74:	movw	r2, #12
   60b78:	mul	r1, r1, r2
   60b7c:	add	r0, r0, r1
   60b80:	movw	r1, #0
   60b84:	and	r3, r1, #255	; 0xff
   60b88:	str	r1, [sp, #8]
   60b8c:	mov	r1, r3
   60b90:	str	r2, [sp, #4]
   60b94:	bl	12900 <memset@plt>
   60b98:	ldr	r0, [fp, #-16]
   60b9c:	ldr	r0, [r0, #24]
   60ba0:	ldr	r1, [fp, #-16]
   60ba4:	ldr	r1, [r1, #8]
   60ba8:	ldr	r2, [sp, #4]
   60bac:	mul	r1, r1, r2
   60bb0:	add	r0, r0, r1
   60bb4:	ldr	r1, [sp, #8]
   60bb8:	and	r1, r1, #255	; 0xff
   60bbc:	bl	12900 <memset@plt>
   60bc0:	ldr	r0, [fp, #-16]
   60bc4:	ldr	r1, [r0, #8]
   60bc8:	add	r2, r1, #1
   60bcc:	str	r2, [r0, #8]
   60bd0:	str	r1, [fp, #-4]
   60bd4:	ldr	r0, [fp, #-4]
   60bd8:	mov	sp, fp
   60bdc:	pop	{fp, pc}
   60be0:	ldrbne	r5, [r5, #-1365]	; 0xfffffaab
   60be4:			; <UNDEFINED> instruction: 0xfffc00ff
   60be8:	push	{fp, lr}
   60bec:	mov	fp, sp
   60bf0:	sub	sp, sp, #16
   60bf4:	str	r0, [sp, #8]
   60bf8:	str	r1, [sp, #4]
   60bfc:	str	r2, [sp]
   60c00:	ldr	r0, [sp, #8]
   60c04:	movw	r1, #2
   60c08:	str	r1, [r0]
   60c0c:	movw	r0, #8
   60c10:	bl	527f0 <__assert_fail@plt+0x3fc38>
   60c14:	ldr	r1, [sp, #8]
   60c18:	str	r0, [r1, #8]
   60c1c:	ldr	r0, [sp, #8]
   60c20:	ldr	r0, [r0, #8]
   60c24:	movw	r1, #0
   60c28:	cmp	r0, r1
   60c2c:	bne	60c3c <__assert_fail@plt+0x4e084>
   60c30:	movw	r0, #12
   60c34:	str	r0, [fp, #-4]
   60c38:	b	60cd8 <__assert_fail@plt+0x4e120>
   60c3c:	ldr	r0, [sp, #4]
   60c40:	ldr	r1, [sp]
   60c44:	cmp	r0, r1
   60c48:	bne	60c6c <__assert_fail@plt+0x4e0b4>
   60c4c:	ldr	r0, [sp, #8]
   60c50:	movw	r1, #1
   60c54:	str	r1, [r0, #4]
   60c58:	ldr	r0, [sp, #4]
   60c5c:	ldr	r1, [sp, #8]
   60c60:	ldr	r1, [r1, #8]
   60c64:	str	r0, [r1]
   60c68:	b	60cd0 <__assert_fail@plt+0x4e118>
   60c6c:	ldr	r0, [sp, #8]
   60c70:	movw	r1, #2
   60c74:	str	r1, [r0, #4]
   60c78:	ldr	r0, [sp, #4]
   60c7c:	ldr	r1, [sp]
   60c80:	cmp	r0, r1
   60c84:	bge	60cac <__assert_fail@plt+0x4e0f4>
   60c88:	ldr	r0, [sp, #4]
   60c8c:	ldr	r1, [sp, #8]
   60c90:	ldr	r1, [r1, #8]
   60c94:	str	r0, [r1]
   60c98:	ldr	r0, [sp]
   60c9c:	ldr	r1, [sp, #8]
   60ca0:	ldr	r1, [r1, #8]
   60ca4:	str	r0, [r1, #4]
   60ca8:	b	60ccc <__assert_fail@plt+0x4e114>
   60cac:	ldr	r0, [sp]
   60cb0:	ldr	r1, [sp, #8]
   60cb4:	ldr	r1, [r1, #8]
   60cb8:	str	r0, [r1]
   60cbc:	ldr	r0, [sp, #4]
   60cc0:	ldr	r1, [sp, #8]
   60cc4:	ldr	r1, [r1, #8]
   60cc8:	str	r0, [r1, #4]
   60ccc:	b	60cd0 <__assert_fail@plt+0x4e118>
   60cd0:	movw	r0, #0
   60cd4:	str	r0, [fp, #-4]
   60cd8:	ldr	r0, [fp, #-4]
   60cdc:	mov	sp, fp
   60ce0:	pop	{fp, pc}
   60ce4:	push	{fp, lr}
   60ce8:	mov	fp, sp
   60cec:	sub	sp, sp, #16
   60cf0:	str	r0, [sp, #8]
   60cf4:	str	r1, [sp, #4]
   60cf8:	ldr	r0, [sp, #8]
   60cfc:	movw	r1, #1
   60d00:	str	r1, [r0]
   60d04:	ldr	r0, [sp, #8]
   60d08:	str	r1, [r0, #4]
   60d0c:	movw	r0, #4
   60d10:	bl	527f0 <__assert_fail@plt+0x3fc38>
   60d14:	ldr	r1, [sp, #8]
   60d18:	str	r0, [r1, #8]
   60d1c:	ldr	r0, [sp, #8]
   60d20:	ldr	r0, [r0, #8]
   60d24:	movw	r1, #0
   60d28:	cmp	r0, r1
   60d2c:	bne	60d50 <__assert_fail@plt+0x4e198>
   60d30:	ldr	r0, [sp, #8]
   60d34:	movw	r1, #0
   60d38:	str	r1, [r0, #4]
   60d3c:	ldr	r0, [sp, #8]
   60d40:	str	r1, [r0]
   60d44:	movw	r0, #12
   60d48:	str	r0, [fp, #-4]
   60d4c:	b	60d68 <__assert_fail@plt+0x4e1b0>
   60d50:	ldr	r0, [sp, #4]
   60d54:	ldr	r1, [sp, #8]
   60d58:	ldr	r1, [r1, #8]
   60d5c:	str	r0, [r1]
   60d60:	movw	r0, #0
   60d64:	str	r0, [fp, #-4]
   60d68:	ldr	r0, [fp, #-4]
   60d6c:	mov	sp, fp
   60d70:	pop	{fp, pc}
   60d74:	push	{fp, lr}
   60d78:	mov	fp, sp
   60d7c:	sub	sp, sp, #72	; 0x48
   60d80:	str	r0, [fp, #-8]
   60d84:	str	r1, [fp, #-12]
   60d88:	str	r2, [fp, #-16]
   60d8c:	and	r0, r3, #1
   60d90:	strb	r0, [fp, #-17]	; 0xffffffef
   60d94:	movw	r0, #0
   60d98:	strb	r0, [sp, #31]
   60d9c:	ldr	r0, [fp, #-12]
   60da0:	ldr	r0, [r0, #20]
   60da4:	ldr	r1, [fp, #-16]
   60da8:	movw	r2, #12
   60dac:	mul	r1, r1, r2
   60db0:	add	r0, r0, r1
   60db4:	ldr	r0, [r0, #4]
   60db8:	add	r1, r0, #1
   60dbc:	add	r0, sp, #32
   60dc0:	bl	61148 <__assert_fail@plt+0x4e590>
   60dc4:	str	r0, [fp, #-24]	; 0xffffffe8
   60dc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   60dcc:	cmp	r0, #0
   60dd0:	beq	60de0 <__assert_fail@plt+0x4e228>
   60dd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   60dd8:	str	r0, [fp, #-4]
   60ddc:	b	6113c <__assert_fail@plt+0x4e584>
   60de0:	ldr	r0, [fp, #-16]
   60de4:	ldr	r1, [sp, #36]	; 0x24
   60de8:	ldr	r2, [sp, #40]	; 0x28
   60dec:	add	r3, r1, #1
   60df0:	str	r3, [sp, #36]	; 0x24
   60df4:	str	r0, [r2, r1, lsl #2]
   60df8:	ldr	r0, [fp, #-12]
   60dfc:	ldr	r0, [r0, #24]
   60e00:	ldr	r1, [fp, #-16]
   60e04:	add	r1, r1, r1, lsl #1
   60e08:	add	r0, r0, r1, lsl #2
   60e0c:	mvn	r1, #0
   60e10:	str	r1, [r0, #4]
   60e14:	ldr	r0, [fp, #-12]
   60e18:	ldr	r0, [r0]
   60e1c:	ldr	r1, [fp, #-16]
   60e20:	add	r0, r0, r1, lsl #3
   60e24:	ldr	r0, [r0, #4]
   60e28:	lsr	r0, r0, #8
   60e2c:	movw	r1, #1023	; 0x3ff
   60e30:	and	r0, r0, r1
   60e34:	cmp	r0, #0
   60e38:	beq	60f00 <__assert_fail@plt+0x4e348>
   60e3c:	ldr	r0, [fp, #-12]
   60e40:	ldr	r0, [r0, #20]
   60e44:	ldr	r1, [fp, #-16]
   60e48:	movw	r2, #12
   60e4c:	mul	r1, r1, r2
   60e50:	add	r0, r0, r1
   60e54:	ldr	r0, [r0, #4]
   60e58:	cmp	r0, #0
   60e5c:	beq	60f00 <__assert_fail@plt+0x4e348>
   60e60:	ldr	r0, [fp, #-12]
   60e64:	ldr	r1, [r0]
   60e68:	ldr	r0, [r0, #20]
   60e6c:	ldr	r2, [fp, #-16]
   60e70:	add	r2, r2, r2, lsl #1
   60e74:	add	r0, r0, r2, lsl #2
   60e78:	ldr	r0, [r0, #8]
   60e7c:	ldr	r0, [r0]
   60e80:	add	r0, r1, r0, lsl #3
   60e84:	ldr	r0, [r0, #4]
   60e88:	lsr	r0, r0, #18
   60e8c:	and	r0, r0, #1
   60e90:	cmp	r0, #0
   60e94:	bne	60f00 <__assert_fail@plt+0x4e348>
   60e98:	ldr	r0, [fp, #-12]
   60e9c:	ldr	r1, [fp, #-16]
   60ea0:	mov	r2, r1
   60ea4:	mov	r3, r1
   60ea8:	mov	ip, r1
   60eac:	ldr	lr, [r0]
   60eb0:	add	r1, lr, r1, lsl #3
   60eb4:	ldr	r1, [r1, #4]
   60eb8:	lsr	r1, r1, #8
   60ebc:	movw	lr, #1023	; 0x3ff
   60ec0:	and	r1, r1, lr
   60ec4:	str	r1, [sp, #8]
   60ec8:	mov	r1, r2
   60ecc:	mov	r2, r3
   60ed0:	mov	r3, ip
   60ed4:	ldr	ip, [sp, #8]
   60ed8:	str	ip, [sp]
   60edc:	bl	611bc <__assert_fail@plt+0x4e604>
   60ee0:	str	r0, [fp, #-24]	; 0xffffffe8
   60ee4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   60ee8:	cmp	r0, #0
   60eec:	beq	60efc <__assert_fail@plt+0x4e344>
   60ef0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   60ef4:	str	r0, [fp, #-4]
   60ef8:	b	6113c <__assert_fail@plt+0x4e584>
   60efc:	b	60f00 <__assert_fail@plt+0x4e348>
   60f00:	ldr	r0, [fp, #-12]
   60f04:	ldr	r0, [r0]
   60f08:	ldr	r1, [fp, #-16]
   60f0c:	add	r0, r0, r1, lsl #3
   60f10:	ldr	r0, [r0, #4]
   60f14:	and	r0, r0, #255	; 0xff
   60f18:	and	r0, r0, #8
   60f1c:	cmp	r0, #0
   60f20:	beq	610ac <__assert_fail@plt+0x4e4f4>
   60f24:	movw	r0, #0
   60f28:	str	r0, [fp, #-28]	; 0xffffffe4
   60f2c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   60f30:	ldr	r1, [fp, #-12]
   60f34:	ldr	r1, [r1, #20]
   60f38:	ldr	r2, [fp, #-16]
   60f3c:	movw	r3, #12
   60f40:	mul	r2, r2, r3
   60f44:	add	r1, r1, r2
   60f48:	ldr	r1, [r1, #4]
   60f4c:	cmp	r0, r1
   60f50:	bge	610a8 <__assert_fail@plt+0x4e4f0>
   60f54:	ldr	r0, [fp, #-12]
   60f58:	ldr	r0, [r0, #20]
   60f5c:	ldr	r1, [fp, #-16]
   60f60:	add	r1, r1, r1, lsl #1
   60f64:	add	r0, r0, r1, lsl #2
   60f68:	ldr	r0, [r0, #8]
   60f6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   60f70:	add	r0, r0, r1, lsl #2
   60f74:	ldr	r0, [r0]
   60f78:	str	r0, [sp, #12]
   60f7c:	ldr	r0, [fp, #-12]
   60f80:	ldr	r0, [r0, #24]
   60f84:	ldr	r1, [sp, #12]
   60f88:	movw	r2, #12
   60f8c:	mul	r1, r1, r2
   60f90:	add	r0, r0, r1
   60f94:	ldr	r0, [r0, #4]
   60f98:	cmn	r0, #1
   60f9c:	bne	60fac <__assert_fail@plt+0x4e3f4>
   60fa0:	movw	r0, #1
   60fa4:	strb	r0, [sp, #31]
   60fa8:	b	61098 <__assert_fail@plt+0x4e4e0>
   60fac:	ldr	r0, [fp, #-12]
   60fb0:	ldr	r0, [r0, #24]
   60fb4:	ldr	r1, [sp, #12]
   60fb8:	movw	r2, #12
   60fbc:	mul	r1, r1, r2
   60fc0:	add	r0, r0, r1
   60fc4:	ldr	r0, [r0, #4]
   60fc8:	cmp	r0, #0
   60fcc:	bne	61008 <__assert_fail@plt+0x4e450>
   60fd0:	ldr	r1, [fp, #-12]
   60fd4:	ldr	r2, [sp, #12]
   60fd8:	add	r0, sp, #16
   60fdc:	movw	r3, #0
   60fe0:	and	r3, r3, #1
   60fe4:	bl	60d74 <__assert_fail@plt+0x4e1bc>
   60fe8:	str	r0, [fp, #-24]	; 0xffffffe8
   60fec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   60ff0:	cmp	r0, #0
   60ff4:	beq	61004 <__assert_fail@plt+0x4e44c>
   60ff8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   60ffc:	str	r0, [fp, #-4]
   61000:	b	6113c <__assert_fail@plt+0x4e584>
   61004:	b	61038 <__assert_fail@plt+0x4e480>
   61008:	ldr	r0, [fp, #-12]
   6100c:	ldr	r0, [r0, #24]
   61010:	ldr	r1, [sp, #12]
   61014:	movw	r2, #12
   61018:	mul	r1, r1, r2
   6101c:	add	r0, r0, r1
   61020:	ldr	r1, [r0]
   61024:	str	r1, [sp, #16]
   61028:	ldr	r1, [r0, #4]
   6102c:	str	r1, [sp, #20]
   61030:	ldr	r0, [r0, #8]
   61034:	str	r0, [sp, #24]
   61038:	add	r0, sp, #32
   6103c:	add	r1, sp, #16
   61040:	bl	616c0 <__assert_fail@plt+0x4eb08>
   61044:	str	r0, [fp, #-24]	; 0xffffffe8
   61048:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6104c:	cmp	r0, #0
   61050:	beq	61060 <__assert_fail@plt+0x4e4a8>
   61054:	ldr	r0, [fp, #-24]	; 0xffffffe8
   61058:	str	r0, [fp, #-4]
   6105c:	b	6113c <__assert_fail@plt+0x4e584>
   61060:	ldr	r0, [fp, #-12]
   61064:	ldr	r0, [r0, #24]
   61068:	ldr	r1, [sp, #12]
   6106c:	movw	r2, #12
   61070:	mul	r1, r1, r2
   61074:	add	r0, r0, r1
   61078:	ldr	r0, [r0, #4]
   6107c:	cmp	r0, #0
   61080:	bne	61094 <__assert_fail@plt+0x4e4dc>
   61084:	movw	r0, #1
   61088:	strb	r0, [sp, #31]
   6108c:	ldr	r0, [sp, #24]
   61090:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   61094:	b	61098 <__assert_fail@plt+0x4e4e0>
   61098:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6109c:	add	r0, r0, #1
   610a0:	str	r0, [fp, #-28]	; 0xffffffe4
   610a4:	b	60f2c <__assert_fail@plt+0x4e374>
   610a8:	b	610ac <__assert_fail@plt+0x4e4f4>
   610ac:	ldrb	r0, [sp, #31]
   610b0:	tst	r0, #1
   610b4:	beq	610e8 <__assert_fail@plt+0x4e530>
   610b8:	ldrb	r0, [fp, #-17]	; 0xffffffef
   610bc:	tst	r0, #1
   610c0:	bne	610e8 <__assert_fail@plt+0x4e530>
   610c4:	ldr	r0, [fp, #-12]
   610c8:	ldr	r0, [r0, #24]
   610cc:	ldr	r1, [fp, #-16]
   610d0:	movw	r2, #12
   610d4:	mul	r1, r1, r2
   610d8:	add	r0, r0, r1
   610dc:	movw	r1, #0
   610e0:	str	r1, [r0, #4]
   610e4:	b	61118 <__assert_fail@plt+0x4e560>
   610e8:	ldr	r0, [fp, #-12]
   610ec:	ldr	r0, [r0, #24]
   610f0:	ldr	r1, [fp, #-16]
   610f4:	movw	r2, #12
   610f8:	mul	r1, r1, r2
   610fc:	add	r0, r0, r1
   61100:	ldr	r1, [sp, #32]
   61104:	str	r1, [r0]
   61108:	ldr	r1, [sp, #36]	; 0x24
   6110c:	str	r1, [r0, #4]
   61110:	ldr	r1, [sp, #40]	; 0x28
   61114:	str	r1, [r0, #8]
   61118:	ldr	r0, [fp, #-8]
   6111c:	ldr	r1, [sp, #32]
   61120:	str	r1, [r0]
   61124:	ldr	r1, [sp, #36]	; 0x24
   61128:	str	r1, [r0, #4]
   6112c:	ldr	r1, [sp, #40]	; 0x28
   61130:	str	r1, [r0, #8]
   61134:	movw	r0, #0
   61138:	str	r0, [fp, #-4]
   6113c:	ldr	r0, [fp, #-4]
   61140:	mov	sp, fp
   61144:	pop	{fp, pc}
   61148:	push	{fp, lr}
   6114c:	mov	fp, sp
   61150:	sub	sp, sp, #16
   61154:	str	r0, [sp, #8]
   61158:	str	r1, [sp, #4]
   6115c:	ldr	r0, [sp, #4]
   61160:	ldr	r1, [sp, #8]
   61164:	str	r0, [r1]
   61168:	ldr	r0, [sp, #8]
   6116c:	mov	r1, #0
   61170:	str	r1, [r0, #4]
   61174:	ldr	r0, [sp, #4]
   61178:	lsl	r0, r0, #2
   6117c:	bl	527f0 <__assert_fail@plt+0x3fc38>
   61180:	ldr	r1, [sp, #8]
   61184:	str	r0, [r1, #8]
   61188:	ldr	r0, [sp, #8]
   6118c:	ldr	r0, [r0, #8]
   61190:	movw	r1, #0
   61194:	cmp	r0, r1
   61198:	bne	611a8 <__assert_fail@plt+0x4e5f0>
   6119c:	movw	r0, #12
   611a0:	str	r0, [fp, #-4]
   611a4:	b	611b0 <__assert_fail@plt+0x4e5f8>
   611a8:	movw	r0, #0
   611ac:	str	r0, [fp, #-4]
   611b0:	ldr	r0, [fp, #-4]
   611b4:	mov	sp, fp
   611b8:	pop	{fp, pc}
   611bc:	push	{fp, lr}
   611c0:	mov	fp, sp
   611c4:	sub	sp, sp, #56	; 0x38
   611c8:	ldr	ip, [fp, #8]
   611cc:	str	r0, [fp, #-8]
   611d0:	str	r1, [fp, #-12]
   611d4:	str	r2, [fp, #-16]
   611d8:	str	r3, [fp, #-20]	; 0xffffffec
   611dc:	ldr	r0, [fp, #8]
   611e0:	str	r0, [sp, #20]
   611e4:	ldr	r0, [fp, #-12]
   611e8:	str	r0, [fp, #-24]	; 0xffffffe8
   611ec:	ldr	r0, [fp, #-16]
   611f0:	str	r0, [sp, #28]
   611f4:	ldr	r0, [fp, #-8]
   611f8:	ldr	r0, [r0]
   611fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   61200:	add	r0, r0, r1, lsl #3
   61204:	ldr	r0, [r0, #4]
   61208:	and	r0, r0, #255	; 0xff
   6120c:	cmp	r0, #4
   61210:	bne	612e0 <__assert_fail@plt+0x4e728>
   61214:	ldr	r0, [fp, #-8]
   61218:	ldr	r0, [r0, #12]
   6121c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   61220:	add	r0, r0, r1, lsl #2
   61224:	ldr	r0, [r0]
   61228:	str	r0, [sp, #16]
   6122c:	ldr	r0, [fp, #-8]
   61230:	ldr	r0, [r0, #20]
   61234:	ldr	r1, [sp, #28]
   61238:	movw	r2, #12
   6123c:	mul	r1, r1, r2
   61240:	add	r0, r0, r1
   61244:	movw	r1, #0
   61248:	str	r1, [r0, #4]
   6124c:	ldr	r0, [fp, #-8]
   61250:	ldr	r1, [sp, #16]
   61254:	ldr	r2, [sp, #20]
   61258:	bl	61ac8 <__assert_fail@plt+0x4ef10>
   6125c:	str	r0, [sp, #12]
   61260:	ldr	r0, [sp, #12]
   61264:	cmn	r0, #1
   61268:	bne	61278 <__assert_fail@plt+0x4e6c0>
   6126c:	movw	r0, #12
   61270:	str	r0, [fp, #-4]
   61274:	b	616b4 <__assert_fail@plt+0x4eafc>
   61278:	ldr	r0, [fp, #-8]
   6127c:	ldr	r0, [r0, #12]
   61280:	ldr	r1, [fp, #-24]	; 0xffffffe8
   61284:	ldr	r1, [r0, r1, lsl #2]
   61288:	ldr	r2, [sp, #28]
   6128c:	add	r0, r0, r2, lsl #2
   61290:	str	r1, [r0]
   61294:	ldr	r0, [fp, #-8]
   61298:	ldr	r0, [r0, #20]
   6129c:	ldr	r1, [sp, #28]
   612a0:	movw	r2, #12
   612a4:	mul	r1, r1, r2
   612a8:	add	r0, r0, r1
   612ac:	ldr	r1, [sp, #12]
   612b0:	bl	61bb0 <__assert_fail@plt+0x4eff8>
   612b4:	and	r0, r0, #1
   612b8:	strb	r0, [sp, #27]
   612bc:	ldrb	r0, [sp, #27]
   612c0:	mvn	r1, #0
   612c4:	eor	r0, r0, r1
   612c8:	tst	r0, #1
   612cc:	beq	612dc <__assert_fail@plt+0x4e724>
   612d0:	movw	r0, #12
   612d4:	str	r0, [fp, #-4]
   612d8:	b	616b4 <__assert_fail@plt+0x4eafc>
   612dc:	b	61698 <__assert_fail@plt+0x4eae0>
   612e0:	ldr	r0, [fp, #-8]
   612e4:	ldr	r0, [r0, #20]
   612e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   612ec:	movw	r2, #12
   612f0:	mul	r1, r1, r2
   612f4:	add	r0, r0, r1
   612f8:	ldr	r0, [r0, #4]
   612fc:	cmp	r0, #0
   61300:	bne	61324 <__assert_fail@plt+0x4e76c>
   61304:	ldr	r0, [fp, #-8]
   61308:	ldr	r0, [r0, #12]
   6130c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   61310:	ldr	r1, [r0, r1, lsl #2]
   61314:	ldr	r2, [sp, #28]
   61318:	add	r0, r0, r2, lsl #2
   6131c:	str	r1, [r0]
   61320:	b	616ac <__assert_fail@plt+0x4eaf4>
   61324:	ldr	r0, [fp, #-8]
   61328:	ldr	r0, [r0, #20]
   6132c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   61330:	movw	r2, #12
   61334:	mul	r1, r1, r2
   61338:	add	r0, r0, r1
   6133c:	ldr	r0, [r0, #4]
   61340:	cmp	r0, #1
   61344:	bne	61498 <__assert_fail@plt+0x4e8e0>
   61348:	ldr	r0, [fp, #-8]
   6134c:	ldr	r0, [r0, #20]
   61350:	ldr	r1, [fp, #-24]	; 0xffffffe8
   61354:	movw	r2, #12
   61358:	mul	r1, r1, r2
   6135c:	add	r0, r0, r1
   61360:	ldr	r0, [r0, #8]
   61364:	ldr	r0, [r0]
   61368:	str	r0, [sp, #16]
   6136c:	ldr	r0, [fp, #-8]
   61370:	ldr	r0, [r0, #20]
   61374:	ldr	r1, [sp, #28]
   61378:	mul	r1, r1, r2
   6137c:	add	r0, r0, r1
   61380:	movw	r1, #0
   61384:	str	r1, [r0, #4]
   61388:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6138c:	ldr	r1, [fp, #-20]	; 0xffffffec
   61390:	cmp	r0, r1
   61394:	bne	613f4 <__assert_fail@plt+0x4e83c>
   61398:	ldr	r0, [sp, #28]
   6139c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   613a0:	cmp	r0, r1
   613a4:	beq	613f4 <__assert_fail@plt+0x4e83c>
   613a8:	ldr	r0, [fp, #-8]
   613ac:	ldr	r0, [r0, #20]
   613b0:	ldr	r1, [sp, #28]
   613b4:	movw	r2, #12
   613b8:	mul	r1, r1, r2
   613bc:	add	r0, r0, r1
   613c0:	ldr	r1, [sp, #16]
   613c4:	bl	61bb0 <__assert_fail@plt+0x4eff8>
   613c8:	and	r0, r0, #1
   613cc:	strb	r0, [sp, #27]
   613d0:	ldrb	r0, [sp, #27]
   613d4:	mvn	r1, #0
   613d8:	eor	r0, r0, r1
   613dc:	tst	r0, #1
   613e0:	beq	613f0 <__assert_fail@plt+0x4e838>
   613e4:	movw	r0, #12
   613e8:	str	r0, [fp, #-4]
   613ec:	b	616b4 <__assert_fail@plt+0x4eafc>
   613f0:	b	616ac <__assert_fail@plt+0x4eaf4>
   613f4:	ldr	r0, [fp, #-8]
   613f8:	ldr	r0, [r0]
   613fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   61400:	add	r0, r0, r1, lsl #3
   61404:	ldr	r0, [r0, #4]
   61408:	lsr	r0, r0, #8
   6140c:	movw	r1, #1023	; 0x3ff
   61410:	and	r0, r0, r1
   61414:	ldr	r1, [sp, #20]
   61418:	orr	r0, r1, r0
   6141c:	str	r0, [sp, #20]
   61420:	ldr	r0, [fp, #-8]
   61424:	ldr	r1, [sp, #16]
   61428:	ldr	r2, [sp, #20]
   6142c:	bl	61ac8 <__assert_fail@plt+0x4ef10>
   61430:	str	r0, [sp, #12]
   61434:	ldr	r0, [sp, #12]
   61438:	cmn	r0, #1
   6143c:	bne	6144c <__assert_fail@plt+0x4e894>
   61440:	movw	r0, #12
   61444:	str	r0, [fp, #-4]
   61448:	b	616b4 <__assert_fail@plt+0x4eafc>
   6144c:	ldr	r0, [fp, #-8]
   61450:	ldr	r0, [r0, #20]
   61454:	ldr	r1, [sp, #28]
   61458:	movw	r2, #12
   6145c:	mul	r1, r1, r2
   61460:	add	r0, r0, r1
   61464:	ldr	r1, [sp, #12]
   61468:	bl	61bb0 <__assert_fail@plt+0x4eff8>
   6146c:	and	r0, r0, #1
   61470:	strb	r0, [sp, #27]
   61474:	ldrb	r0, [sp, #27]
   61478:	mvn	r1, #0
   6147c:	eor	r0, r0, r1
   61480:	tst	r0, #1
   61484:	beq	61494 <__assert_fail@plt+0x4e8dc>
   61488:	movw	r0, #12
   6148c:	str	r0, [fp, #-4]
   61490:	b	616b4 <__assert_fail@plt+0x4eafc>
   61494:	b	61690 <__assert_fail@plt+0x4ead8>
   61498:	ldr	r0, [fp, #-8]
   6149c:	ldr	r0, [r0, #20]
   614a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   614a4:	movw	r2, #12
   614a8:	mul	r1, r1, r2
   614ac:	add	r0, r0, r1
   614b0:	ldr	r0, [r0, #8]
   614b4:	ldr	r0, [r0]
   614b8:	str	r0, [sp, #16]
   614bc:	ldr	r0, [fp, #-8]
   614c0:	ldr	r0, [r0, #20]
   614c4:	ldr	r1, [sp, #28]
   614c8:	mul	r1, r1, r2
   614cc:	add	r0, r0, r1
   614d0:	movw	r1, #0
   614d4:	str	r1, [r0, #4]
   614d8:	ldr	r0, [fp, #-8]
   614dc:	ldr	r1, [sp, #16]
   614e0:	ldr	r2, [sp, #20]
   614e4:	bl	61de8 <__assert_fail@plt+0x4f230>
   614e8:	str	r0, [sp, #12]
   614ec:	ldr	r0, [sp, #12]
   614f0:	cmn	r0, #1
   614f4:	bne	615a8 <__assert_fail@plt+0x4e9f0>
   614f8:	ldr	r0, [fp, #-8]
   614fc:	ldr	r1, [sp, #16]
   61500:	ldr	r2, [sp, #20]
   61504:	bl	61ac8 <__assert_fail@plt+0x4ef10>
   61508:	str	r0, [sp, #12]
   6150c:	ldr	r0, [sp, #12]
   61510:	cmn	r0, #1
   61514:	bne	61524 <__assert_fail@plt+0x4e96c>
   61518:	movw	r0, #12
   6151c:	str	r0, [fp, #-4]
   61520:	b	616b4 <__assert_fail@plt+0x4eafc>
   61524:	ldr	r0, [fp, #-8]
   61528:	ldr	r0, [r0, #20]
   6152c:	ldr	r1, [sp, #28]
   61530:	movw	r2, #12
   61534:	mul	r1, r1, r2
   61538:	add	r0, r0, r1
   6153c:	ldr	r1, [sp, #12]
   61540:	bl	61bb0 <__assert_fail@plt+0x4eff8>
   61544:	and	r0, r0, #1
   61548:	strb	r0, [sp, #27]
   6154c:	ldrb	r0, [sp, #27]
   61550:	mvn	r1, #0
   61554:	eor	r0, r0, r1
   61558:	tst	r0, #1
   6155c:	beq	6156c <__assert_fail@plt+0x4e9b4>
   61560:	movw	r0, #12
   61564:	str	r0, [fp, #-4]
   61568:	b	616b4 <__assert_fail@plt+0x4eafc>
   6156c:	ldr	r0, [fp, #-8]
   61570:	ldr	r1, [sp, #16]
   61574:	ldr	r2, [sp, #12]
   61578:	ldr	r3, [fp, #-20]	; 0xffffffec
   6157c:	ldr	ip, [sp, #20]
   61580:	str	ip, [sp]
   61584:	bl	611bc <__assert_fail@plt+0x4e604>
   61588:	str	r0, [sp, #8]
   6158c:	ldr	r0, [sp, #8]
   61590:	cmp	r0, #0
   61594:	beq	615a4 <__assert_fail@plt+0x4e9ec>
   61598:	ldr	r0, [sp, #8]
   6159c:	str	r0, [fp, #-4]
   615a0:	b	616b4 <__assert_fail@plt+0x4eafc>
   615a4:	b	615f4 <__assert_fail@plt+0x4ea3c>
   615a8:	ldr	r0, [fp, #-8]
   615ac:	ldr	r0, [r0, #20]
   615b0:	ldr	r1, [sp, #28]
   615b4:	movw	r2, #12
   615b8:	mul	r1, r1, r2
   615bc:	add	r0, r0, r1
   615c0:	ldr	r1, [sp, #12]
   615c4:	bl	61bb0 <__assert_fail@plt+0x4eff8>
   615c8:	and	r0, r0, #1
   615cc:	strb	r0, [sp, #27]
   615d0:	ldrb	r0, [sp, #27]
   615d4:	mvn	r1, #0
   615d8:	eor	r0, r0, r1
   615dc:	tst	r0, #1
   615e0:	beq	615f0 <__assert_fail@plt+0x4ea38>
   615e4:	movw	r0, #12
   615e8:	str	r0, [fp, #-4]
   615ec:	b	616b4 <__assert_fail@plt+0x4eafc>
   615f0:	b	615f4 <__assert_fail@plt+0x4ea3c>
   615f4:	ldr	r0, [fp, #-8]
   615f8:	ldr	r0, [r0, #20]
   615fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   61600:	movw	r2, #12
   61604:	mul	r1, r1, r2
   61608:	add	r0, r0, r1
   6160c:	ldr	r0, [r0, #8]
   61610:	ldr	r0, [r0, #4]
   61614:	str	r0, [sp, #16]
   61618:	ldr	r0, [fp, #-8]
   6161c:	ldr	r1, [sp, #16]
   61620:	ldr	r2, [sp, #20]
   61624:	bl	61ac8 <__assert_fail@plt+0x4ef10>
   61628:	str	r0, [sp, #12]
   6162c:	ldr	r0, [sp, #12]
   61630:	cmn	r0, #1
   61634:	bne	61644 <__assert_fail@plt+0x4ea8c>
   61638:	movw	r0, #12
   6163c:	str	r0, [fp, #-4]
   61640:	b	616b4 <__assert_fail@plt+0x4eafc>
   61644:	ldr	r0, [fp, #-8]
   61648:	ldr	r0, [r0, #20]
   6164c:	ldr	r1, [sp, #28]
   61650:	movw	r2, #12
   61654:	mul	r1, r1, r2
   61658:	add	r0, r0, r1
   6165c:	ldr	r1, [sp, #12]
   61660:	bl	61bb0 <__assert_fail@plt+0x4eff8>
   61664:	and	r0, r0, #1
   61668:	strb	r0, [sp, #27]
   6166c:	ldrb	r0, [sp, #27]
   61670:	mvn	r1, #0
   61674:	eor	r0, r0, r1
   61678:	tst	r0, #1
   6167c:	beq	6168c <__assert_fail@plt+0x4ead4>
   61680:	movw	r0, #12
   61684:	str	r0, [fp, #-4]
   61688:	b	616b4 <__assert_fail@plt+0x4eafc>
   6168c:	b	61690 <__assert_fail@plt+0x4ead8>
   61690:	b	61694 <__assert_fail@plt+0x4eadc>
   61694:	b	61698 <__assert_fail@plt+0x4eae0>
   61698:	ldr	r0, [sp, #16]
   6169c:	str	r0, [fp, #-24]	; 0xffffffe8
   616a0:	ldr	r0, [sp, #12]
   616a4:	str	r0, [sp, #28]
   616a8:	b	611f4 <__assert_fail@plt+0x4e63c>
   616ac:	movw	r0, #0
   616b0:	str	r0, [fp, #-4]
   616b4:	ldr	r0, [fp, #-4]
   616b8:	mov	sp, fp
   616bc:	pop	{fp, pc}
   616c0:	push	{fp, lr}
   616c4:	mov	fp, sp
   616c8:	sub	sp, sp, #40	; 0x28
   616cc:	str	r0, [fp, #-8]
   616d0:	str	r1, [fp, #-12]
   616d4:	ldr	r0, [fp, #-12]
   616d8:	movw	r1, #0
   616dc:	cmp	r0, r1
   616e0:	beq	616f4 <__assert_fail@plt+0x4eb3c>
   616e4:	ldr	r0, [fp, #-12]
   616e8:	ldr	r0, [r0, #4]
   616ec:	cmp	r0, #0
   616f0:	bne	61700 <__assert_fail@plt+0x4eb48>
   616f4:	movw	r0, #0
   616f8:	str	r0, [fp, #-4]
   616fc:	b	61abc <__assert_fail@plt+0x4ef04>
   61700:	ldr	r0, [fp, #-8]
   61704:	ldr	r0, [r0]
   61708:	ldr	r1, [fp, #-12]
   6170c:	ldr	r1, [r1, #4]
   61710:	lsl	r1, r1, #1
   61714:	ldr	r2, [fp, #-8]
   61718:	ldr	r2, [r2, #4]
   6171c:	add	r1, r1, r2
   61720:	cmp	r0, r1
   61724:	bge	61790 <__assert_fail@plt+0x4ebd8>
   61728:	ldr	r0, [fp, #-12]
   6172c:	ldr	r0, [r0, #4]
   61730:	ldr	r1, [fp, #-8]
   61734:	ldr	r1, [r1]
   61738:	add	r0, r0, r1
   6173c:	lsl	r0, r0, #1
   61740:	str	r0, [sp, #8]
   61744:	ldr	r0, [fp, #-8]
   61748:	ldr	r0, [r0, #8]
   6174c:	ldr	r1, [sp, #8]
   61750:	lsl	r1, r1, #2
   61754:	bl	538c8 <__assert_fail@plt+0x40d10>
   61758:	str	r0, [sp, #4]
   6175c:	ldr	r0, [sp, #4]
   61760:	movw	r1, #0
   61764:	cmp	r0, r1
   61768:	bne	61778 <__assert_fail@plt+0x4ebc0>
   6176c:	movw	r0, #12
   61770:	str	r0, [fp, #-4]
   61774:	b	61abc <__assert_fail@plt+0x4ef04>
   61778:	ldr	r0, [sp, #4]
   6177c:	ldr	r1, [fp, #-8]
   61780:	str	r0, [r1, #8]
   61784:	ldr	r0, [sp, #8]
   61788:	ldr	r1, [fp, #-8]
   6178c:	str	r0, [r1]
   61790:	ldr	r0, [fp, #-8]
   61794:	ldr	r0, [r0, #4]
   61798:	cmp	r0, #0
   6179c:	bne	617f0 <__assert_fail@plt+0x4ec38>
   617a0:	ldr	r0, [fp, #-8]
   617a4:	ldr	r0, [r0, #8]
   617a8:	movw	r1, #0
   617ac:	cmp	r0, r1
   617b0:	beq	617b8 <__assert_fail@plt+0x4ec00>
   617b4:	b	617b8 <__assert_fail@plt+0x4ec00>
   617b8:	ldr	r0, [fp, #-12]
   617bc:	ldr	r0, [r0, #4]
   617c0:	ldr	r1, [fp, #-8]
   617c4:	str	r0, [r1, #4]
   617c8:	ldr	r0, [fp, #-8]
   617cc:	ldr	r0, [r0, #8]
   617d0:	ldr	r1, [fp, #-12]
   617d4:	ldr	r2, [r1, #4]
   617d8:	ldr	r1, [r1, #8]
   617dc:	lsl	r2, r2, #2
   617e0:	bl	125c4 <memcpy@plt>
   617e4:	movw	r0, #0
   617e8:	str	r0, [fp, #-4]
   617ec:	b	61abc <__assert_fail@plt+0x4ef04>
   617f0:	ldr	r0, [fp, #-8]
   617f4:	ldr	r0, [r0, #4]
   617f8:	ldr	r1, [fp, #-12]
   617fc:	ldr	r1, [r1, #4]
   61800:	lsl	r1, r1, #1
   61804:	add	r0, r0, r1
   61808:	str	r0, [sp, #16]
   6180c:	ldr	r0, [fp, #-12]
   61810:	ldr	r0, [r0, #4]
   61814:	sub	r0, r0, #1
   61818:	str	r0, [fp, #-16]
   6181c:	ldr	r0, [fp, #-8]
   61820:	ldr	r0, [r0, #4]
   61824:	sub	r0, r0, #1
   61828:	str	r0, [sp, #20]
   6182c:	ldr	r0, [fp, #-16]
   61830:	cmp	r0, #0
   61834:	movw	r0, #0
   61838:	str	r0, [sp]
   6183c:	blt	61854 <__assert_fail@plt+0x4ec9c>
   61840:	ldr	r0, [sp, #20]
   61844:	cmp	r0, #0
   61848:	movw	r0, #0
   6184c:	movge	r0, #1
   61850:	str	r0, [sp]
   61854:	ldr	r0, [sp]
   61858:	tst	r0, #1
   6185c:	beq	61928 <__assert_fail@plt+0x4ed70>
   61860:	ldr	r0, [fp, #-8]
   61864:	ldr	r0, [r0, #8]
   61868:	ldr	r1, [sp, #20]
   6186c:	ldr	r0, [r0, r1, lsl #2]
   61870:	ldr	r1, [fp, #-12]
   61874:	ldr	r1, [r1, #8]
   61878:	ldr	r2, [fp, #-16]
   6187c:	add	r1, r1, r2, lsl #2
   61880:	ldr	r1, [r1]
   61884:	cmp	r0, r1
   61888:	bne	618ac <__assert_fail@plt+0x4ecf4>
   6188c:	ldr	r0, [fp, #-16]
   61890:	mvn	r1, #0
   61894:	add	r0, r0, r1
   61898:	str	r0, [fp, #-16]
   6189c:	ldr	r0, [sp, #20]
   618a0:	add	r0, r0, r1
   618a4:	str	r0, [sp, #20]
   618a8:	b	61924 <__assert_fail@plt+0x4ed6c>
   618ac:	ldr	r0, [fp, #-8]
   618b0:	ldr	r0, [r0, #8]
   618b4:	ldr	r1, [sp, #20]
   618b8:	ldr	r0, [r0, r1, lsl #2]
   618bc:	ldr	r1, [fp, #-12]
   618c0:	ldr	r1, [r1, #8]
   618c4:	ldr	r2, [fp, #-16]
   618c8:	add	r1, r1, r2, lsl #2
   618cc:	ldr	r1, [r1]
   618d0:	cmp	r0, r1
   618d4:	bge	61910 <__assert_fail@plt+0x4ed58>
   618d8:	ldr	r0, [fp, #-12]
   618dc:	ldr	r0, [r0, #8]
   618e0:	ldr	r1, [fp, #-16]
   618e4:	sub	r2, r1, #1
   618e8:	str	r2, [fp, #-16]
   618ec:	ldr	r0, [r0, r1, lsl #2]
   618f0:	ldr	r1, [fp, #-8]
   618f4:	ldr	r1, [r1, #8]
   618f8:	ldr	r2, [sp, #16]
   618fc:	sub	r2, r2, #1
   61900:	str	r2, [sp, #16]
   61904:	add	r1, r1, r2, lsl #2
   61908:	str	r0, [r1]
   6190c:	b	61920 <__assert_fail@plt+0x4ed68>
   61910:	ldr	r0, [sp, #20]
   61914:	mvn	r1, #0
   61918:	add	r0, r0, r1
   6191c:	str	r0, [sp, #20]
   61920:	b	61924 <__assert_fail@plt+0x4ed6c>
   61924:	b	6182c <__assert_fail@plt+0x4ec74>
   61928:	ldr	r0, [fp, #-16]
   6192c:	cmp	r0, #0
   61930:	blt	61970 <__assert_fail@plt+0x4edb8>
   61934:	ldr	r0, [fp, #-16]
   61938:	ldr	r1, [sp, #16]
   6193c:	mvn	r0, r0
   61940:	add	r0, r0, r1
   61944:	str	r0, [sp, #16]
   61948:	ldr	r0, [fp, #-8]
   6194c:	ldr	r0, [r0, #8]
   61950:	ldr	r1, [sp, #16]
   61954:	add	r0, r0, r1, lsl #2
   61958:	ldr	r1, [fp, #-12]
   6195c:	ldr	r1, [r1, #8]
   61960:	ldr	r2, [fp, #-16]
   61964:	add	r2, r2, #1
   61968:	lsl	r2, r2, #2
   6196c:	bl	125c4 <memcpy@plt>
   61970:	ldr	r0, [fp, #-8]
   61974:	ldr	r0, [r0, #4]
   61978:	sub	r0, r0, #1
   6197c:	str	r0, [sp, #20]
   61980:	ldr	r0, [fp, #-8]
   61984:	ldr	r0, [r0, #4]
   61988:	ldr	r1, [fp, #-12]
   6198c:	ldr	r1, [r1, #4]
   61990:	lsl	r1, r1, #1
   61994:	add	r0, r0, r1
   61998:	sub	r0, r0, #1
   6199c:	str	r0, [fp, #-16]
   619a0:	ldr	r0, [fp, #-16]
   619a4:	ldr	r1, [sp, #16]
   619a8:	sub	r0, r0, r1
   619ac:	add	r0, r0, #1
   619b0:	str	r0, [sp, #12]
   619b4:	ldr	r0, [sp, #12]
   619b8:	cmp	r0, #0
   619bc:	bne	619cc <__assert_fail@plt+0x4ee14>
   619c0:	movw	r0, #0
   619c4:	str	r0, [fp, #-4]
   619c8:	b	61abc <__assert_fail@plt+0x4ef04>
   619cc:	ldr	r0, [sp, #12]
   619d0:	ldr	r1, [fp, #-8]
   619d4:	ldr	r2, [r1, #4]
   619d8:	add	r0, r2, r0
   619dc:	str	r0, [r1, #4]
   619e0:	ldr	r0, [fp, #-8]
   619e4:	ldr	r0, [r0, #8]
   619e8:	ldr	r1, [fp, #-16]
   619ec:	ldr	r1, [r0, r1, lsl #2]
   619f0:	ldr	r2, [sp, #20]
   619f4:	add	r0, r0, r2, lsl #2
   619f8:	ldr	r0, [r0]
   619fc:	cmp	r1, r0
   61a00:	ble	61a54 <__assert_fail@plt+0x4ee9c>
   61a04:	ldr	r0, [fp, #-8]
   61a08:	ldr	r0, [r0, #8]
   61a0c:	ldr	r1, [fp, #-16]
   61a10:	sub	r2, r1, #1
   61a14:	str	r2, [fp, #-16]
   61a18:	ldr	r0, [r0, r1, lsl #2]
   61a1c:	ldr	r1, [fp, #-8]
   61a20:	ldr	r1, [r1, #8]
   61a24:	ldr	r2, [sp, #20]
   61a28:	ldr	r3, [sp, #12]
   61a2c:	sub	ip, r3, #1
   61a30:	str	ip, [sp, #12]
   61a34:	add	r2, r2, r3
   61a38:	add	r1, r1, r2, lsl #2
   61a3c:	str	r0, [r1]
   61a40:	ldr	r0, [sp, #12]
   61a44:	cmp	r0, #0
   61a48:	bne	61a50 <__assert_fail@plt+0x4ee98>
   61a4c:	b	61ab4 <__assert_fail@plt+0x4eefc>
   61a50:	b	61ab0 <__assert_fail@plt+0x4eef8>
   61a54:	ldr	r0, [fp, #-8]
   61a58:	ldr	r0, [r0, #8]
   61a5c:	ldr	r1, [sp, #20]
   61a60:	ldr	r2, [r0, r1, lsl #2]
   61a64:	ldr	r3, [sp, #12]
   61a68:	add	r1, r1, r3
   61a6c:	add	r0, r0, r1, lsl #2
   61a70:	str	r2, [r0]
   61a74:	ldr	r0, [sp, #20]
   61a78:	mvn	r1, #0
   61a7c:	add	r0, r0, r1
   61a80:	str	r0, [sp, #20]
   61a84:	cmp	r0, #0
   61a88:	bge	61aac <__assert_fail@plt+0x4eef4>
   61a8c:	ldr	r0, [fp, #-8]
   61a90:	ldr	r0, [r0, #8]
   61a94:	ldr	r1, [sp, #16]
   61a98:	add	r1, r0, r1, lsl #2
   61a9c:	ldr	r2, [sp, #12]
   61aa0:	lsl	r2, r2, #2
   61aa4:	bl	125c4 <memcpy@plt>
   61aa8:	b	61ab4 <__assert_fail@plt+0x4eefc>
   61aac:	b	61ab0 <__assert_fail@plt+0x4eef8>
   61ab0:	b	619e0 <__assert_fail@plt+0x4ee28>
   61ab4:	movw	r0, #0
   61ab8:	str	r0, [fp, #-4]
   61abc:	ldr	r0, [fp, #-4]
   61ac0:	mov	sp, fp
   61ac4:	pop	{fp, pc}
   61ac8:	push	{fp, lr}
   61acc:	mov	fp, sp
   61ad0:	sub	sp, sp, #24
   61ad4:	str	r0, [fp, #-4]
   61ad8:	str	r1, [fp, #-8]
   61adc:	str	r2, [sp, #12]
   61ae0:	ldr	r0, [fp, #-4]
   61ae4:	ldr	r1, [r0]
   61ae8:	ldr	r2, [fp, #-8]
   61aec:	ldr	r2, [r1, r2, lsl #3]!
   61af0:	ldr	r1, [r1, #4]
   61af4:	str	r1, [sp, #4]
   61af8:	mov	r1, r2
   61afc:	ldr	r2, [sp, #4]
   61b00:	bl	608cc <__assert_fail@plt+0x4dd14>
   61b04:	str	r0, [sp, #8]
   61b08:	ldr	r0, [sp, #8]
   61b0c:	cmn	r0, #1
   61b10:	beq	61ba4 <__assert_fail@plt+0x4efec>
   61b14:	ldr	r0, [sp, #12]
   61b18:	ldr	r1, [fp, #-4]
   61b1c:	ldr	r1, [r1]
   61b20:	ldr	r2, [sp, #8]
   61b24:	add	r1, r1, r2, lsl #3
   61b28:	ldr	r2, [r1, #4]
   61b2c:	bfc	r0, #10, #22
   61b30:	bfc	r2, #8, #10
   61b34:	orr	r0, r2, r0, lsl #8
   61b38:	str	r0, [r1, #4]
   61b3c:	ldr	r0, [fp, #-4]
   61b40:	ldr	r0, [r0]
   61b44:	ldr	r1, [fp, #-8]
   61b48:	add	r1, r0, r1, lsl #3
   61b4c:	ldr	r1, [r1, #4]
   61b50:	ldr	r2, [sp, #8]
   61b54:	add	r0, r0, r2, lsl #3
   61b58:	ldr	r2, [r0, #4]
   61b5c:	orr	r1, r2, r1
   61b60:	ubfx	r1, r1, #8, #10
   61b64:	bfc	r2, #8, #10
   61b68:	orr	r1, r2, r1, lsl #8
   61b6c:	str	r1, [r0, #4]
   61b70:	ldr	r0, [fp, #-4]
   61b74:	ldr	r0, [r0]
   61b78:	ldr	r1, [sp, #8]
   61b7c:	add	r0, r0, r1, lsl #3
   61b80:	ldr	r1, [r0, #4]
   61b84:	orr	r1, r1, #262144	; 0x40000
   61b88:	str	r1, [r0, #4]
   61b8c:	ldr	r0, [fp, #-8]
   61b90:	ldr	r1, [fp, #-4]
   61b94:	ldr	r1, [r1, #16]
   61b98:	ldr	r2, [sp, #8]
   61b9c:	add	r1, r1, r2, lsl #2
   61ba0:	str	r0, [r1]
   61ba4:	ldr	r0, [sp, #8]
   61ba8:	mov	sp, fp
   61bac:	pop	{fp, pc}
   61bb0:	push	{fp, lr}
   61bb4:	mov	fp, sp
   61bb8:	sub	sp, sp, #24
   61bbc:	str	r0, [fp, #-8]
   61bc0:	str	r1, [sp, #12]
   61bc4:	ldr	r0, [fp, #-8]
   61bc8:	ldr	r0, [r0]
   61bcc:	cmp	r0, #0
   61bd0:	bne	61bf8 <__assert_fail@plt+0x4f040>
   61bd4:	ldr	r0, [fp, #-8]
   61bd8:	ldr	r1, [sp, #12]
   61bdc:	bl	60ce4 <__assert_fail@plt+0x4e12c>
   61be0:	cmp	r0, #0
   61be4:	movw	r0, #0
   61be8:	moveq	r0, #1
   61bec:	and	r0, r0, #1
   61bf0:	strb	r0, [fp, #-1]
   61bf4:	b	61dd8 <__assert_fail@plt+0x4f220>
   61bf8:	ldr	r0, [fp, #-8]
   61bfc:	ldr	r0, [r0, #4]
   61c00:	cmp	r0, #0
   61c04:	bne	61c50 <__assert_fail@plt+0x4f098>
   61c08:	ldr	r0, [fp, #-8]
   61c0c:	ldr	r0, [r0, #8]
   61c10:	movw	r1, #0
   61c14:	cmp	r0, r1
   61c18:	beq	61c20 <__assert_fail@plt+0x4f068>
   61c1c:	b	61c20 <__assert_fail@plt+0x4f068>
   61c20:	ldr	r0, [sp, #12]
   61c24:	ldr	r1, [fp, #-8]
   61c28:	ldr	r1, [r1, #8]
   61c2c:	str	r0, [r1]
   61c30:	ldr	r0, [fp, #-8]
   61c34:	ldr	r1, [r0, #4]
   61c38:	add	r1, r1, #1
   61c3c:	str	r1, [r0, #4]
   61c40:	movw	r0, #1
   61c44:	and	r0, r0, #1
   61c48:	strb	r0, [fp, #-1]
   61c4c:	b	61dd8 <__assert_fail@plt+0x4f220>
   61c50:	ldr	r0, [fp, #-8]
   61c54:	ldr	r0, [r0]
   61c58:	ldr	r1, [fp, #-8]
   61c5c:	ldr	r1, [r1, #4]
   61c60:	cmp	r0, r1
   61c64:	bne	61cbc <__assert_fail@plt+0x4f104>
   61c68:	ldr	r0, [fp, #-8]
   61c6c:	ldr	r1, [r0]
   61c70:	lsl	r1, r1, #1
   61c74:	str	r1, [r0]
   61c78:	ldr	r0, [fp, #-8]
   61c7c:	ldr	r1, [r0]
   61c80:	ldr	r0, [r0, #8]
   61c84:	lsl	r1, r1, #2
   61c88:	bl	538c8 <__assert_fail@plt+0x40d10>
   61c8c:	str	r0, [sp, #4]
   61c90:	ldr	r0, [sp, #4]
   61c94:	movw	r1, #0
   61c98:	cmp	r0, r1
   61c9c:	bne	61cb0 <__assert_fail@plt+0x4f0f8>
   61ca0:	movw	r0, #0
   61ca4:	and	r0, r0, #1
   61ca8:	strb	r0, [fp, #-1]
   61cac:	b	61dd8 <__assert_fail@plt+0x4f220>
   61cb0:	ldr	r0, [sp, #4]
   61cb4:	ldr	r1, [fp, #-8]
   61cb8:	str	r0, [r1, #8]
   61cbc:	ldr	r0, [sp, #12]
   61cc0:	ldr	r1, [fp, #-8]
   61cc4:	ldr	r1, [r1, #8]
   61cc8:	ldr	r1, [r1]
   61ccc:	cmp	r0, r1
   61cd0:	bge	61d1c <__assert_fail@plt+0x4f164>
   61cd4:	ldr	r0, [fp, #-8]
   61cd8:	ldr	r0, [r0, #4]
   61cdc:	str	r0, [sp, #8]
   61ce0:	ldr	r0, [sp, #8]
   61ce4:	cmp	r0, #0
   61ce8:	ble	61d18 <__assert_fail@plt+0x4f160>
   61cec:	ldr	r0, [fp, #-8]
   61cf0:	ldr	r0, [r0, #8]
   61cf4:	ldr	r1, [sp, #8]
   61cf8:	add	r0, r0, r1, lsl #2
   61cfc:	ldr	r1, [r0, #-4]
   61d00:	str	r1, [r0]
   61d04:	ldr	r0, [sp, #8]
   61d08:	mvn	r1, #0
   61d0c:	add	r0, r0, r1
   61d10:	str	r0, [sp, #8]
   61d14:	b	61ce0 <__assert_fail@plt+0x4f128>
   61d18:	b	61da4 <__assert_fail@plt+0x4f1ec>
   61d1c:	ldr	r0, [fp, #-8]
   61d20:	ldr	r0, [r0, #4]
   61d24:	str	r0, [sp, #8]
   61d28:	ldr	r0, [fp, #-8]
   61d2c:	ldr	r0, [r0, #8]
   61d30:	ldr	r1, [sp, #8]
   61d34:	sub	r1, r1, #1
   61d38:	add	r0, r0, r1, lsl #2
   61d3c:	ldr	r0, [r0]
   61d40:	ldr	r1, [sp, #12]
   61d44:	cmp	r0, r1
   61d48:	ble	61d78 <__assert_fail@plt+0x4f1c0>
   61d4c:	ldr	r0, [fp, #-8]
   61d50:	ldr	r0, [r0, #8]
   61d54:	ldr	r1, [sp, #8]
   61d58:	add	r0, r0, r1, lsl #2
   61d5c:	ldr	r1, [r0, #-4]
   61d60:	str	r1, [r0]
   61d64:	ldr	r0, [sp, #8]
   61d68:	mvn	r1, #0
   61d6c:	add	r0, r0, r1
   61d70:	str	r0, [sp, #8]
   61d74:	b	61d28 <__assert_fail@plt+0x4f170>
   61d78:	ldr	r0, [fp, #-8]
   61d7c:	ldr	r0, [r0, #8]
   61d80:	ldr	r1, [sp, #8]
   61d84:	sub	r1, r1, #1
   61d88:	add	r0, r0, r1, lsl #2
   61d8c:	ldr	r0, [r0]
   61d90:	ldr	r1, [sp, #12]
   61d94:	cmp	r0, r1
   61d98:	bge	61da0 <__assert_fail@plt+0x4f1e8>
   61d9c:	b	61da0 <__assert_fail@plt+0x4f1e8>
   61da0:	b	61da4 <__assert_fail@plt+0x4f1ec>
   61da4:	ldr	r0, [sp, #12]
   61da8:	ldr	r1, [fp, #-8]
   61dac:	ldr	r1, [r1, #8]
   61db0:	ldr	r2, [sp, #8]
   61db4:	add	r1, r1, r2, lsl #2
   61db8:	str	r0, [r1]
   61dbc:	ldr	r0, [fp, #-8]
   61dc0:	ldr	r1, [r0, #4]
   61dc4:	add	r1, r1, #1
   61dc8:	str	r1, [r0, #4]
   61dcc:	movw	r0, #1
   61dd0:	and	r0, r0, #1
   61dd4:	strb	r0, [fp, #-1]
   61dd8:	ldrb	r0, [fp, #-1]
   61ddc:	and	r0, r0, #1
   61de0:	mov	sp, fp
   61de4:	pop	{fp, pc}
   61de8:	sub	sp, sp, #24
   61dec:	str	r0, [sp, #16]
   61df0:	str	r1, [sp, #12]
   61df4:	str	r2, [sp, #8]
   61df8:	ldr	r0, [sp, #16]
   61dfc:	ldr	r0, [r0, #8]
   61e00:	sub	r0, r0, #1
   61e04:	str	r0, [sp, #4]
   61e08:	ldr	r0, [sp, #16]
   61e0c:	ldr	r0, [r0]
   61e10:	ldr	r1, [sp, #4]
   61e14:	add	r0, r0, r1, lsl #3
   61e18:	ldr	r0, [r0, #4]
   61e1c:	lsr	r0, r0, #18
   61e20:	and	r0, r0, #1
   61e24:	cmp	r0, #0
   61e28:	movw	r0, #0
   61e2c:	str	r0, [sp]
   61e30:	beq	61e48 <__assert_fail@plt+0x4f290>
   61e34:	ldr	r0, [sp, #4]
   61e38:	cmp	r0, #0
   61e3c:	movw	r0, #0
   61e40:	movgt	r0, #1
   61e44:	str	r0, [sp]
   61e48:	ldr	r0, [sp]
   61e4c:	tst	r0, #1
   61e50:	beq	61ec4 <__assert_fail@plt+0x4f30c>
   61e54:	ldr	r0, [sp, #12]
   61e58:	ldr	r1, [sp, #16]
   61e5c:	ldr	r1, [r1, #16]
   61e60:	ldr	r2, [sp, #4]
   61e64:	add	r1, r1, r2, lsl #2
   61e68:	ldr	r1, [r1]
   61e6c:	cmp	r0, r1
   61e70:	bne	61eac <__assert_fail@plt+0x4f2f4>
   61e74:	ldr	r0, [sp, #8]
   61e78:	ldr	r1, [sp, #16]
   61e7c:	ldr	r1, [r1]
   61e80:	ldr	r2, [sp, #4]
   61e84:	add	r1, r1, r2, lsl #3
   61e88:	ldr	r1, [r1, #4]
   61e8c:	lsr	r1, r1, #8
   61e90:	movw	r2, #1023	; 0x3ff
   61e94:	and	r1, r1, r2
   61e98:	cmp	r0, r1
   61e9c:	bne	61eac <__assert_fail@plt+0x4f2f4>
   61ea0:	ldr	r0, [sp, #4]
   61ea4:	str	r0, [sp, #20]
   61ea8:	b	61ecc <__assert_fail@plt+0x4f314>
   61eac:	b	61eb0 <__assert_fail@plt+0x4f2f8>
   61eb0:	ldr	r0, [sp, #4]
   61eb4:	mvn	r1, #0
   61eb8:	add	r0, r0, r1
   61ebc:	str	r0, [sp, #4]
   61ec0:	b	61e08 <__assert_fail@plt+0x4f250>
   61ec4:	mvn	r0, #0
   61ec8:	str	r0, [sp, #20]
   61ecc:	ldr	r0, [sp, #20]
   61ed0:	add	sp, sp, #24
   61ed4:	bx	lr
   61ed8:	push	{fp, lr}
   61edc:	mov	fp, sp
   61ee0:	sub	sp, sp, #16
   61ee4:	str	r0, [sp, #8]
   61ee8:	str	r1, [sp, #4]
   61eec:	ldr	r0, [sp, #8]
   61ef0:	ldr	r0, [r0]
   61ef4:	ldr	r1, [sp, #8]
   61ef8:	ldr	r1, [r1, #4]
   61efc:	cmp	r0, r1
   61f00:	bne	61f5c <__assert_fail@plt+0x4f3a4>
   61f04:	ldr	r0, [sp, #8]
   61f08:	ldr	r1, [r0]
   61f0c:	mov	r2, #2
   61f10:	add	r1, r2, r1, lsl #1
   61f14:	str	r1, [r0]
   61f18:	ldr	r0, [sp, #8]
   61f1c:	ldr	r1, [r0]
   61f20:	ldr	r0, [r0, #8]
   61f24:	lsl	r1, r1, #2
   61f28:	bl	538c8 <__assert_fail@plt+0x40d10>
   61f2c:	str	r0, [sp]
   61f30:	ldr	r0, [sp]
   61f34:	movw	r1, #0
   61f38:	cmp	r0, r1
   61f3c:	bne	61f50 <__assert_fail@plt+0x4f398>
   61f40:	movw	r0, #0
   61f44:	and	r0, r0, #1
   61f48:	strb	r0, [fp, #-1]
   61f4c:	b	61f88 <__assert_fail@plt+0x4f3d0>
   61f50:	ldr	r0, [sp]
   61f54:	ldr	r1, [sp, #8]
   61f58:	str	r0, [r1, #8]
   61f5c:	ldr	r0, [sp, #4]
   61f60:	ldr	r1, [sp, #8]
   61f64:	ldr	r2, [r1, #4]
   61f68:	ldr	r3, [r1, #8]
   61f6c:	add	ip, r2, #1
   61f70:	str	ip, [r1, #4]
   61f74:	add	r1, r3, r2, lsl #2
   61f78:	str	r0, [r1]
   61f7c:	movw	r0, #1
   61f80:	and	r0, r0, #1
   61f84:	strb	r0, [fp, #-1]
   61f88:	ldrb	r0, [fp, #-1]
   61f8c:	and	r0, r0, #1
   61f90:	mov	sp, fp
   61f94:	pop	{fp, pc}
   61f98:	push	{fp, lr}
   61f9c:	mov	fp, sp
   61fa0:	sub	sp, sp, #16
   61fa4:	str	r0, [sp, #8]
   61fa8:	str	r1, [sp, #4]
   61fac:	ldr	r0, [sp, #4]
   61fb0:	ldr	r0, [r0, #4]
   61fb4:	ldr	r1, [sp, #8]
   61fb8:	str	r0, [r1, #4]
   61fbc:	ldr	r0, [sp, #4]
   61fc0:	ldr	r0, [r0, #4]
   61fc4:	cmp	r0, #0
   61fc8:	ble	62044 <__assert_fail@plt+0x4f48c>
   61fcc:	ldr	r0, [sp, #8]
   61fd0:	ldr	r1, [r0, #4]
   61fd4:	str	r1, [r0]
   61fd8:	ldr	r0, [sp, #8]
   61fdc:	ldr	r0, [r0]
   61fe0:	lsl	r0, r0, #2
   61fe4:	bl	527f0 <__assert_fail@plt+0x3fc38>
   61fe8:	ldr	r1, [sp, #8]
   61fec:	str	r0, [r1, #8]
   61ff0:	ldr	r0, [sp, #8]
   61ff4:	ldr	r0, [r0, #8]
   61ff8:	movw	r1, #0
   61ffc:	cmp	r0, r1
   62000:	bne	62024 <__assert_fail@plt+0x4f46c>
   62004:	ldr	r0, [sp, #8]
   62008:	movw	r1, #0
   6200c:	str	r1, [r0, #4]
   62010:	ldr	r0, [sp, #8]
   62014:	str	r1, [r0]
   62018:	movw	r0, #12
   6201c:	str	r0, [fp, #-4]
   62020:	b	62060 <__assert_fail@plt+0x4f4a8>
   62024:	ldr	r0, [sp, #8]
   62028:	ldr	r0, [r0, #8]
   6202c:	ldr	r1, [sp, #4]
   62030:	ldr	r2, [r1, #4]
   62034:	ldr	r1, [r1, #8]
   62038:	lsl	r2, r2, #2
   6203c:	bl	125c4 <memcpy@plt>
   62040:	b	62058 <__assert_fail@plt+0x4f4a0>
   62044:	ldr	r0, [sp, #8]
   62048:	movw	r1, #0
   6204c:	and	r1, r1, #255	; 0xff
   62050:	movw	r2, #12
   62054:	bl	12900 <memset@plt>
   62058:	movw	r0, #0
   6205c:	str	r0, [fp, #-4]
   62060:	ldr	r0, [fp, #-4]
   62064:	mov	sp, fp
   62068:	pop	{fp, pc}
   6206c:	sub	sp, sp, #28
   62070:	str	r0, [sp, #20]
   62074:	str	r1, [sp, #16]
   62078:	ldr	r0, [sp, #20]
   6207c:	ldr	r0, [r0, #4]
   62080:	cmp	r0, #0
   62084:	bgt	62094 <__assert_fail@plt+0x4f4dc>
   62088:	movw	r0, #0
   6208c:	str	r0, [sp, #24]
   62090:	b	62150 <__assert_fail@plt+0x4f598>
   62094:	movw	r0, #0
   62098:	str	r0, [sp, #12]
   6209c:	ldr	r0, [sp, #20]
   620a0:	ldr	r0, [r0, #4]
   620a4:	sub	r0, r0, #1
   620a8:	str	r0, [sp, #8]
   620ac:	ldr	r0, [sp, #12]
   620b0:	ldr	r1, [sp, #8]
   620b4:	cmp	r0, r1
   620b8:	bcs	6210c <__assert_fail@plt+0x4f554>
   620bc:	ldr	r0, [sp, #12]
   620c0:	ldr	r1, [sp, #8]
   620c4:	add	r0, r0, r1
   620c8:	lsr	r0, r0, #1
   620cc:	str	r0, [sp, #4]
   620d0:	ldr	r0, [sp, #20]
   620d4:	ldr	r0, [r0, #8]
   620d8:	ldr	r1, [sp, #4]
   620dc:	add	r0, r0, r1, lsl #2
   620e0:	ldr	r0, [r0]
   620e4:	ldr	r1, [sp, #16]
   620e8:	cmp	r0, r1
   620ec:	bge	62100 <__assert_fail@plt+0x4f548>
   620f0:	ldr	r0, [sp, #4]
   620f4:	add	r0, r0, #1
   620f8:	str	r0, [sp, #12]
   620fc:	b	62108 <__assert_fail@plt+0x4f550>
   62100:	ldr	r0, [sp, #4]
   62104:	str	r0, [sp, #8]
   62108:	b	620ac <__assert_fail@plt+0x4f4f4>
   6210c:	ldr	r0, [sp, #20]
   62110:	ldr	r0, [r0, #8]
   62114:	ldr	r1, [sp, #12]
   62118:	add	r0, r0, r1, lsl #2
   6211c:	ldr	r0, [r0]
   62120:	ldr	r1, [sp, #16]
   62124:	cmp	r0, r1
   62128:	bne	6213c <__assert_fail@plt+0x4f584>
   6212c:	ldr	r0, [sp, #12]
   62130:	add	r0, r0, #1
   62134:	str	r0, [sp]
   62138:	b	62148 <__assert_fail@plt+0x4f590>
   6213c:	movw	r0, #0
   62140:	str	r0, [sp]
   62144:	b	62148 <__assert_fail@plt+0x4f590>
   62148:	ldr	r0, [sp]
   6214c:	str	r0, [sp, #24]
   62150:	ldr	r0, [sp, #24]
   62154:	add	sp, sp, #28
   62158:	bx	lr
   6215c:	push	{fp, lr}
   62160:	mov	fp, sp
   62164:	sub	sp, sp, #40	; 0x28
   62168:	str	r0, [fp, #-8]
   6216c:	str	r1, [fp, #-12]
   62170:	str	r2, [fp, #-16]
   62174:	str	r3, [sp, #20]
   62178:	ldr	r0, [fp, #-16]
   6217c:	ldr	r0, [r0, #4]
   62180:	cmp	r0, #0
   62184:	bne	6219c <__assert_fail@plt+0x4f5e4>
   62188:	ldr	r0, [fp, #-8]
   6218c:	movw	r1, #0
   62190:	str	r1, [r0]
   62194:	str	r1, [fp, #-4]
   62198:	b	622ac <__assert_fail@plt+0x4f6f4>
   6219c:	ldr	r0, [fp, #-16]
   621a0:	ldr	r1, [sp, #20]
   621a4:	bl	622b8 <__assert_fail@plt+0x4f700>
   621a8:	str	r0, [sp, #16]
   621ac:	ldr	r0, [fp, #-12]
   621b0:	ldr	r0, [r0, #32]
   621b4:	ldr	r1, [sp, #16]
   621b8:	ldr	r2, [fp, #-12]
   621bc:	ldr	r2, [r2, #68]	; 0x44
   621c0:	and	r1, r1, r2
   621c4:	movw	r2, #12
   621c8:	mul	r1, r1, r2
   621cc:	add	r0, r0, r1
   621d0:	str	r0, [sp, #8]
   621d4:	movw	r0, #0
   621d8:	str	r0, [sp, #4]
   621dc:	ldr	r0, [sp, #4]
   621e0:	ldr	r1, [sp, #8]
   621e4:	ldr	r1, [r1]
   621e8:	cmp	r0, r1
   621ec:	bge	62270 <__assert_fail@plt+0x4f6b8>
   621f0:	ldr	r0, [sp, #8]
   621f4:	ldr	r0, [r0, #8]
   621f8:	ldr	r1, [sp, #4]
   621fc:	add	r0, r0, r1, lsl #2
   62200:	ldr	r0, [r0]
   62204:	str	r0, [sp]
   62208:	ldr	r0, [sp]
   6220c:	ldr	r0, [r0]
   62210:	ldr	r1, [sp, #16]
   62214:	cmp	r0, r1
   62218:	bne	6225c <__assert_fail@plt+0x4f6a4>
   6221c:	ldr	r0, [sp]
   62220:	ldrb	r0, [r0, #52]	; 0x34
   62224:	and	r0, r0, #15
   62228:	and	r0, r0, #255	; 0xff
   6222c:	ldr	r1, [sp, #20]
   62230:	cmp	r0, r1
   62234:	bne	6225c <__assert_fail@plt+0x4f6a4>
   62238:	ldr	r0, [sp]
   6223c:	ldr	r0, [r0, #40]	; 0x28
   62240:	ldr	r1, [fp, #-16]
   62244:	bl	62330 <__assert_fail@plt+0x4f778>
   62248:	tst	r0, #1
   6224c:	beq	6225c <__assert_fail@plt+0x4f6a4>
   62250:	ldr	r0, [sp]
   62254:	str	r0, [fp, #-4]
   62258:	b	622ac <__assert_fail@plt+0x4f6f4>
   6225c:	b	62260 <__assert_fail@plt+0x4f6a8>
   62260:	ldr	r0, [sp, #4]
   62264:	add	r0, r0, #1
   62268:	str	r0, [sp, #4]
   6226c:	b	621dc <__assert_fail@plt+0x4f624>
   62270:	ldr	r0, [fp, #-12]
   62274:	ldr	r1, [fp, #-16]
   62278:	ldr	r2, [sp, #20]
   6227c:	ldr	r3, [sp, #16]
   62280:	bl	62400 <__assert_fail@plt+0x4f848>
   62284:	str	r0, [sp, #12]
   62288:	ldr	r0, [sp, #12]
   6228c:	movw	r1, #0
   62290:	cmp	r0, r1
   62294:	bne	622a4 <__assert_fail@plt+0x4f6ec>
   62298:	ldr	r0, [fp, #-8]
   6229c:	movw	r1, #12
   622a0:	str	r1, [r0]
   622a4:	ldr	r0, [sp, #12]
   622a8:	str	r0, [fp, #-4]
   622ac:	ldr	r0, [fp, #-4]
   622b0:	mov	sp, fp
   622b4:	pop	{fp, pc}
   622b8:	sub	sp, sp, #16
   622bc:	str	r0, [sp, #12]
   622c0:	str	r1, [sp, #8]
   622c4:	ldr	r0, [sp, #12]
   622c8:	ldr	r0, [r0, #4]
   622cc:	ldr	r1, [sp, #8]
   622d0:	add	r0, r0, r1
   622d4:	str	r0, [sp, #4]
   622d8:	movw	r0, #0
   622dc:	str	r0, [sp]
   622e0:	ldr	r0, [sp]
   622e4:	ldr	r1, [sp, #12]
   622e8:	ldr	r1, [r1, #4]
   622ec:	cmp	r0, r1
   622f0:	bge	62324 <__assert_fail@plt+0x4f76c>
   622f4:	ldr	r0, [sp, #12]
   622f8:	ldr	r0, [r0, #8]
   622fc:	ldr	r1, [sp]
   62300:	add	r0, r0, r1, lsl #2
   62304:	ldr	r0, [r0]
   62308:	ldr	r1, [sp, #4]
   6230c:	add	r0, r1, r0
   62310:	str	r0, [sp, #4]
   62314:	ldr	r0, [sp]
   62318:	add	r0, r0, #1
   6231c:	str	r0, [sp]
   62320:	b	622e0 <__assert_fail@plt+0x4f728>
   62324:	ldr	r0, [sp, #4]
   62328:	add	sp, sp, #16
   6232c:	bx	lr
   62330:	sub	sp, sp, #16
   62334:	str	r0, [sp, #8]
   62338:	str	r1, [sp, #4]
   6233c:	ldr	r0, [sp, #8]
   62340:	movw	r1, #0
   62344:	cmp	r0, r1
   62348:	beq	62374 <__assert_fail@plt+0x4f7bc>
   6234c:	ldr	r0, [sp, #4]
   62350:	movw	r1, #0
   62354:	cmp	r0, r1
   62358:	beq	62374 <__assert_fail@plt+0x4f7bc>
   6235c:	ldr	r0, [sp, #8]
   62360:	ldr	r0, [r0, #4]
   62364:	ldr	r1, [sp, #4]
   62368:	ldr	r1, [r1, #4]
   6236c:	cmp	r0, r1
   62370:	beq	62384 <__assert_fail@plt+0x4f7cc>
   62374:	movw	r0, #0
   62378:	and	r0, r0, #1
   6237c:	strb	r0, [sp, #15]
   62380:	b	623f0 <__assert_fail@plt+0x4f838>
   62384:	ldr	r0, [sp, #8]
   62388:	ldr	r0, [r0, #4]
   6238c:	str	r0, [sp]
   62390:	ldr	r0, [sp]
   62394:	mvn	r1, #0
   62398:	add	r0, r0, r1
   6239c:	str	r0, [sp]
   623a0:	cmp	r0, #0
   623a4:	blt	623e4 <__assert_fail@plt+0x4f82c>
   623a8:	ldr	r0, [sp, #8]
   623ac:	ldr	r0, [r0, #8]
   623b0:	ldr	r1, [sp]
   623b4:	ldr	r0, [r0, r1, lsl #2]
   623b8:	ldr	r2, [sp, #4]
   623bc:	ldr	r2, [r2, #8]
   623c0:	add	r1, r2, r1, lsl #2
   623c4:	ldr	r1, [r1]
   623c8:	cmp	r0, r1
   623cc:	beq	623e0 <__assert_fail@plt+0x4f828>
   623d0:	movw	r0, #0
   623d4:	and	r0, r0, #1
   623d8:	strb	r0, [sp, #15]
   623dc:	b	623f0 <__assert_fail@plt+0x4f838>
   623e0:	b	62390 <__assert_fail@plt+0x4f7d8>
   623e4:	movw	r0, #1
   623e8:	and	r0, r0, #1
   623ec:	strb	r0, [sp, #15]
   623f0:	ldrb	r0, [sp, #15]
   623f4:	and	r0, r0, #1
   623f8:	add	sp, sp, #16
   623fc:	bx	lr
   62400:	push	{fp, lr}
   62404:	mov	fp, sp
   62408:	sub	sp, sp, #56	; 0x38
   6240c:	str	r0, [fp, #-8]
   62410:	str	r1, [fp, #-12]
   62414:	str	r2, [fp, #-16]
   62418:	str	r3, [fp, #-20]	; 0xffffffec
   6241c:	movw	r0, #0
   62420:	str	r0, [sp, #28]
   62424:	movw	r0, #56	; 0x38
   62428:	movw	r1, #1
   6242c:	bl	4e0e0 <__assert_fail@plt+0x3b528>
   62430:	str	r0, [sp, #20]
   62434:	ldr	r0, [sp, #20]
   62438:	movw	r1, #0
   6243c:	cmp	r0, r1
   62440:	bne	62450 <__assert_fail@plt+0x4f898>
   62444:	movw	r0, #0
   62448:	str	r0, [fp, #-4]
   6244c:	b	6274c <__assert_fail@plt+0x4fb94>
   62450:	ldr	r0, [sp, #20]
   62454:	add	r0, r0, #4
   62458:	ldr	r1, [fp, #-12]
   6245c:	bl	61f98 <__assert_fail@plt+0x4f3e0>
   62460:	str	r0, [sp, #24]
   62464:	ldr	r0, [sp, #24]
   62468:	cmp	r0, #0
   6246c:	beq	62484 <__assert_fail@plt+0x4f8cc>
   62470:	ldr	r0, [sp, #20]
   62474:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   62478:	movw	r0, #0
   6247c:	str	r0, [fp, #-4]
   62480:	b	6274c <__assert_fail@plt+0x4fb94>
   62484:	ldr	r0, [fp, #-16]
   62488:	ldr	r1, [sp, #20]
   6248c:	ldrb	r2, [r1, #52]	; 0x34
   62490:	and	r0, r0, #15
   62494:	bic	r2, r2, #15
   62498:	orr	r0, r2, r0
   6249c:	strb	r0, [r1, #52]	; 0x34
   624a0:	ldr	r0, [sp, #20]
   624a4:	add	r0, r0, #4
   624a8:	ldr	r1, [sp, #20]
   624ac:	str	r0, [r1, #40]	; 0x28
   624b0:	movw	r0, #0
   624b4:	str	r0, [fp, #-24]	; 0xffffffe8
   624b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   624bc:	ldr	r1, [fp, #-12]
   624c0:	ldr	r1, [r1, #4]
   624c4:	cmp	r0, r1
   624c8:	bge	62714 <__assert_fail@plt+0x4fb5c>
   624cc:	ldr	r0, [fp, #-8]
   624d0:	ldr	r0, [r0]
   624d4:	ldr	r1, [fp, #-12]
   624d8:	ldr	r1, [r1, #8]
   624dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   624e0:	ldr	r1, [r1, r2, lsl #2]
   624e4:	add	r0, r0, r1, lsl #3
   624e8:	str	r0, [sp, #16]
   624ec:	ldr	r0, [sp, #16]
   624f0:	ldr	r0, [r0, #4]
   624f4:	and	r0, r0, #255	; 0xff
   624f8:	str	r0, [sp, #12]
   624fc:	ldr	r0, [sp, #16]
   62500:	ldr	r0, [r0, #4]
   62504:	lsr	r0, r0, #8
   62508:	movw	r1, #1023	; 0x3ff
   6250c:	and	r0, r0, r1
   62510:	str	r0, [sp, #8]
   62514:	ldr	r0, [sp, #12]
   62518:	cmp	r0, #1
   6251c:	bne	62530 <__assert_fail@plt+0x4f978>
   62520:	ldr	r0, [sp, #8]
   62524:	cmp	r0, #0
   62528:	bne	62530 <__assert_fail@plt+0x4f978>
   6252c:	b	62704 <__assert_fail@plt+0x4fb4c>
   62530:	ldr	r0, [sp, #16]
   62534:	ldr	r0, [r0, #4]
   62538:	ldr	r1, [sp, #20]
   6253c:	ldrb	r2, [r1, #52]	; 0x34
   62540:	lsr	r3, r2, #5
   62544:	orr	r0, r3, r0, lsr #20
   62548:	and	r0, r0, #1
   6254c:	lsl	r0, r0, #5
   62550:	bic	r2, r2, #32
   62554:	orr	r0, r2, r0
   62558:	strb	r0, [r1, #52]	; 0x34
   6255c:	ldr	r0, [sp, #12]
   62560:	cmp	r0, #2
   62564:	bne	62584 <__assert_fail@plt+0x4f9cc>
   62568:	ldr	r0, [sp, #20]
   6256c:	ldrb	r1, [r0, #52]	; 0x34
   62570:	bic	r1, r1, #16
   62574:	movw	r2, #16
   62578:	orr	r1, r1, r2
   6257c:	strb	r1, [r0, #52]	; 0x34
   62580:	b	625ac <__assert_fail@plt+0x4f9f4>
   62584:	ldr	r0, [sp, #12]
   62588:	cmp	r0, #4
   6258c:	bne	625a8 <__assert_fail@plt+0x4f9f0>
   62590:	ldr	r0, [sp, #20]
   62594:	ldrb	r1, [r0, #52]	; 0x34
   62598:	bic	r1, r1, #64	; 0x40
   6259c:	movw	r2, #64	; 0x40
   625a0:	orr	r1, r1, r2
   625a4:	strb	r1, [r0, #52]	; 0x34
   625a8:	b	625ac <__assert_fail@plt+0x4f9f4>
   625ac:	ldr	r0, [sp, #8]
   625b0:	cmp	r0, #0
   625b4:	beq	62700 <__assert_fail@plt+0x4fb48>
   625b8:	ldr	r0, [sp, #20]
   625bc:	ldr	r0, [r0, #40]	; 0x28
   625c0:	ldr	r1, [sp, #20]
   625c4:	add	r1, r1, #4
   625c8:	cmp	r0, r1
   625cc:	bne	62658 <__assert_fail@plt+0x4faa0>
   625d0:	movw	r0, #12
   625d4:	bl	527f0 <__assert_fail@plt+0x3fc38>
   625d8:	str	r0, [sp, #4]
   625dc:	ldr	r0, [sp, #4]
   625e0:	movw	r1, #0
   625e4:	cmp	r0, r1
   625e8:	bne	62600 <__assert_fail@plt+0x4fa48>
   625ec:	ldr	r0, [sp, #20]
   625f0:	bl	57a40 <__assert_fail@plt+0x44e88>
   625f4:	movw	r0, #0
   625f8:	str	r0, [fp, #-4]
   625fc:	b	6274c <__assert_fail@plt+0x4fb94>
   62600:	ldr	r0, [sp, #4]
   62604:	ldr	r1, [sp, #20]
   62608:	str	r0, [r1, #40]	; 0x28
   6260c:	ldr	r0, [sp, #20]
   62610:	ldr	r0, [r0, #40]	; 0x28
   62614:	ldr	r1, [fp, #-12]
   62618:	bl	61f98 <__assert_fail@plt+0x4f3e0>
   6261c:	cmp	r0, #0
   62620:	beq	62638 <__assert_fail@plt+0x4fa80>
   62624:	ldr	r0, [sp, #20]
   62628:	bl	57a40 <__assert_fail@plt+0x44e88>
   6262c:	movw	r0, #0
   62630:	str	r0, [fp, #-4]
   62634:	b	6274c <__assert_fail@plt+0x4fb94>
   62638:	mov	r0, #0
   6263c:	str	r0, [sp, #28]
   62640:	ldr	r0, [sp, #20]
   62644:	ldrb	r1, [r0, #52]	; 0x34
   62648:	and	r1, r1, #127	; 0x7f
   6264c:	movw	r2, #128	; 0x80
   62650:	orr	r1, r1, r2
   62654:	strb	r1, [r0, #52]	; 0x34
   62658:	ldr	r0, [sp, #8]
   6265c:	and	r0, r0, #1
   62660:	cmp	r0, #0
   62664:	beq	62678 <__assert_fail@plt+0x4fac0>
   62668:	ldr	r0, [fp, #-16]
   6266c:	and	r0, r0, #1
   62670:	cmp	r0, #0
   62674:	beq	626d8 <__assert_fail@plt+0x4fb20>
   62678:	ldr	r0, [sp, #8]
   6267c:	and	r0, r0, #2
   62680:	cmp	r0, #0
   62684:	beq	62698 <__assert_fail@plt+0x4fae0>
   62688:	ldr	r0, [fp, #-16]
   6268c:	and	r0, r0, #1
   62690:	cmp	r0, #0
   62694:	bne	626d8 <__assert_fail@plt+0x4fb20>
   62698:	ldr	r0, [sp, #8]
   6269c:	and	r0, r0, #16
   626a0:	cmp	r0, #0
   626a4:	beq	626b8 <__assert_fail@plt+0x4fb00>
   626a8:	ldr	r0, [fp, #-16]
   626ac:	and	r0, r0, #2
   626b0:	cmp	r0, #0
   626b4:	beq	626d8 <__assert_fail@plt+0x4fb20>
   626b8:	ldr	r0, [sp, #8]
   626bc:	and	r0, r0, #64	; 0x40
   626c0:	cmp	r0, #0
   626c4:	beq	626fc <__assert_fail@plt+0x4fb44>
   626c8:	ldr	r0, [fp, #-16]
   626cc:	and	r0, r0, #4
   626d0:	cmp	r0, #0
   626d4:	bne	626fc <__assert_fail@plt+0x4fb44>
   626d8:	ldr	r0, [sp, #20]
   626dc:	add	r0, r0, #4
   626e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   626e4:	ldr	r2, [sp, #28]
   626e8:	sub	r1, r1, r2
   626ec:	bl	62758 <__assert_fail@plt+0x4fba0>
   626f0:	ldr	r0, [sp, #28]
   626f4:	add	r0, r0, #1
   626f8:	str	r0, [sp, #28]
   626fc:	b	62700 <__assert_fail@plt+0x4fb48>
   62700:	b	62704 <__assert_fail@plt+0x4fb4c>
   62704:	ldr	r0, [fp, #-24]	; 0xffffffe8
   62708:	add	r0, r0, #1
   6270c:	str	r0, [fp, #-24]	; 0xffffffe8
   62710:	b	624b8 <__assert_fail@plt+0x4f900>
   62714:	ldr	r0, [fp, #-8]
   62718:	ldr	r1, [sp, #20]
   6271c:	ldr	r2, [fp, #-20]	; 0xffffffec
   62720:	bl	627e0 <__assert_fail@plt+0x4fc28>
   62724:	str	r0, [sp, #24]
   62728:	ldr	r0, [sp, #24]
   6272c:	cmp	r0, #0
   62730:	beq	62744 <__assert_fail@plt+0x4fb8c>
   62734:	ldr	r0, [sp, #20]
   62738:	bl	57a40 <__assert_fail@plt+0x44e88>
   6273c:	movw	r0, #0
   62740:	str	r0, [sp, #20]
   62744:	ldr	r0, [sp, #20]
   62748:	str	r0, [fp, #-4]
   6274c:	ldr	r0, [fp, #-4]
   62750:	mov	sp, fp
   62754:	pop	{fp, pc}
   62758:	sub	sp, sp, #8
   6275c:	str	r0, [sp, #4]
   62760:	str	r1, [sp]
   62764:	ldr	r0, [sp]
   62768:	cmp	r0, #0
   6276c:	blt	62784 <__assert_fail@plt+0x4fbcc>
   62770:	ldr	r0, [sp]
   62774:	ldr	r1, [sp, #4]
   62778:	ldr	r1, [r1, #4]
   6277c:	cmp	r0, r1
   62780:	blt	62788 <__assert_fail@plt+0x4fbd0>
   62784:	b	627d8 <__assert_fail@plt+0x4fc20>
   62788:	ldr	r0, [sp, #4]
   6278c:	ldr	r1, [r0, #4]
   62790:	mvn	r2, #0
   62794:	add	r1, r1, r2
   62798:	str	r1, [r0, #4]
   6279c:	ldr	r0, [sp]
   627a0:	ldr	r1, [sp, #4]
   627a4:	ldr	r1, [r1, #4]
   627a8:	cmp	r0, r1
   627ac:	bge	627d8 <__assert_fail@plt+0x4fc20>
   627b0:	ldr	r0, [sp, #4]
   627b4:	ldr	r0, [r0, #8]
   627b8:	ldr	r1, [sp]
   627bc:	add	r0, r0, r1, lsl #2
   627c0:	ldr	r1, [r0, #4]
   627c4:	str	r1, [r0]
   627c8:	ldr	r0, [sp]
   627cc:	add	r0, r0, #1
   627d0:	str	r0, [sp]
   627d4:	b	6279c <__assert_fail@plt+0x4fbe4>
   627d8:	add	sp, sp, #8
   627dc:	bx	lr
   627e0:	push	{fp, lr}
   627e4:	mov	fp, sp
   627e8:	sub	sp, sp, #40	; 0x28
   627ec:	str	r0, [fp, #-8]
   627f0:	str	r1, [fp, #-12]
   627f4:	str	r2, [fp, #-16]
   627f8:	ldr	r0, [fp, #-16]
   627fc:	ldr	r1, [fp, #-12]
   62800:	str	r0, [r1]
   62804:	ldr	r0, [fp, #-12]
   62808:	add	r0, r0, #16
   6280c:	ldr	r1, [fp, #-12]
   62810:	ldr	r1, [r1, #8]
   62814:	bl	61148 <__assert_fail@plt+0x4e590>
   62818:	str	r0, [sp, #16]
   6281c:	ldr	r0, [sp, #16]
   62820:	cmp	r0, #0
   62824:	beq	62834 <__assert_fail@plt+0x4fc7c>
   62828:	movw	r0, #12
   6282c:	str	r0, [fp, #-4]
   62830:	b	6298c <__assert_fail@plt+0x4fdd4>
   62834:	movw	r0, #0
   62838:	str	r0, [sp, #12]
   6283c:	ldr	r0, [sp, #12]
   62840:	ldr	r1, [fp, #-12]
   62844:	ldr	r1, [r1, #8]
   62848:	cmp	r0, r1
   6284c:	bge	628c4 <__assert_fail@plt+0x4fd0c>
   62850:	ldr	r0, [fp, #-12]
   62854:	ldr	r0, [r0, #12]
   62858:	ldr	r1, [sp, #12]
   6285c:	ldr	r0, [r0, r1, lsl #2]
   62860:	str	r0, [sp, #8]
   62864:	ldr	r0, [fp, #-8]
   62868:	ldr	r0, [r0]
   6286c:	ldr	r1, [sp, #8]
   62870:	add	r0, r0, r1, lsl #3
   62874:	ldr	r0, [r0, #4]
   62878:	and	r0, r0, #255	; 0xff
   6287c:	and	r0, r0, #8
   62880:	cmp	r0, #0
   62884:	bne	628b0 <__assert_fail@plt+0x4fcf8>
   62888:	ldr	r0, [fp, #-12]
   6288c:	add	r0, r0, #16
   62890:	ldr	r1, [sp, #8]
   62894:	bl	61ed8 <__assert_fail@plt+0x4f320>
   62898:	tst	r0, #1
   6289c:	bne	628ac <__assert_fail@plt+0x4fcf4>
   628a0:	movw	r0, #12
   628a4:	str	r0, [fp, #-4]
   628a8:	b	6298c <__assert_fail@plt+0x4fdd4>
   628ac:	b	628b0 <__assert_fail@plt+0x4fcf8>
   628b0:	b	628b4 <__assert_fail@plt+0x4fcfc>
   628b4:	ldr	r0, [sp, #12]
   628b8:	add	r0, r0, #1
   628bc:	str	r0, [sp, #12]
   628c0:	b	6283c <__assert_fail@plt+0x4fc84>
   628c4:	ldr	r0, [fp, #-8]
   628c8:	ldr	r0, [r0, #32]
   628cc:	ldr	r1, [fp, #-16]
   628d0:	ldr	r2, [fp, #-8]
   628d4:	ldr	r2, [r2, #68]	; 0x44
   628d8:	and	r1, r1, r2
   628dc:	movw	r2, #12
   628e0:	mul	r1, r1, r2
   628e4:	add	r0, r0, r1
   628e8:	str	r0, [sp, #20]
   628ec:	ldr	r0, [sp, #20]
   628f0:	ldr	r0, [r0, #4]
   628f4:	ldr	r1, [sp, #20]
   628f8:	ldr	r1, [r1]
   628fc:	cmp	r0, r1
   62900:	bgt	62964 <__assert_fail@plt+0x4fdac>
   62904:	ldr	r0, [sp, #20]
   62908:	ldr	r0, [r0]
   6290c:	mov	r1, #2
   62910:	add	r0, r1, r0, lsl #1
   62914:	str	r0, [sp, #4]
   62918:	ldr	r0, [sp, #20]
   6291c:	ldr	r0, [r0, #8]
   62920:	ldr	r1, [sp, #4]
   62924:	lsl	r1, r1, #2
   62928:	bl	538c8 <__assert_fail@plt+0x40d10>
   6292c:	str	r0, [sp]
   62930:	ldr	r0, [sp]
   62934:	movw	r1, #0
   62938:	cmp	r0, r1
   6293c:	bne	6294c <__assert_fail@plt+0x4fd94>
   62940:	movw	r0, #12
   62944:	str	r0, [fp, #-4]
   62948:	b	6298c <__assert_fail@plt+0x4fdd4>
   6294c:	ldr	r0, [sp]
   62950:	ldr	r1, [sp, #20]
   62954:	str	r0, [r1, #8]
   62958:	ldr	r0, [sp, #4]
   6295c:	ldr	r1, [sp, #20]
   62960:	str	r0, [r1, #4]
   62964:	ldr	r0, [fp, #-12]
   62968:	ldr	r1, [sp, #20]
   6296c:	ldr	r2, [r1]
   62970:	ldr	r3, [r1, #8]
   62974:	add	ip, r2, #1
   62978:	str	ip, [r1]
   6297c:	add	r1, r3, r2, lsl #2
   62980:	str	r0, [r1]
   62984:	movw	r0, #0
   62988:	str	r0, [fp, #-4]
   6298c:	ldr	r0, [fp, #-4]
   62990:	mov	sp, fp
   62994:	pop	{fp, pc}
   62998:	push	{fp, lr}
   6299c:	mov	fp, sp
   629a0:	sub	sp, sp, #40	; 0x28
   629a4:	str	r0, [fp, #-8]
   629a8:	str	r1, [fp, #-12]
   629ac:	str	r2, [fp, #-16]
   629b0:	str	r3, [sp, #20]
   629b4:	movw	r0, #1
   629b8:	str	r0, [sp, #16]
   629bc:	ldr	r0, [fp, #-16]
   629c0:	add	r0, r0, #1
   629c4:	str	r0, [sp, #8]
   629c8:	ldr	r0, [sp, #20]
   629cc:	cmp	r0, #0
   629d0:	bne	62a58 <__assert_fail@plt+0x4fea0>
   629d4:	ldr	r0, [sp, #8]
   629d8:	lsl	r0, r0, #2
   629dc:	bl	527f0 <__assert_fail@plt+0x3fc38>
   629e0:	ldr	r1, [fp, #-8]
   629e4:	str	r0, [r1, #4]
   629e8:	ldr	r0, [fp, #-8]
   629ec:	ldr	r0, [r0, #4]
   629f0:	movw	r1, #0
   629f4:	cmp	r0, r1
   629f8:	bne	62a08 <__assert_fail@plt+0x4fe50>
   629fc:	movw	r0, #0
   62a00:	str	r0, [fp, #-4]
   62a04:	b	62c00 <__assert_fail@plt+0x50048>
   62a08:	ldr	r0, [sp, #8]
   62a0c:	lsl	r0, r0, #2
   62a10:	bl	527f0 <__assert_fail@plt+0x3fc38>
   62a14:	ldr	r1, [fp, #-8]
   62a18:	str	r0, [r1, #8]
   62a1c:	ldr	r0, [fp, #-8]
   62a20:	ldr	r0, [r0, #8]
   62a24:	movw	r1, #0
   62a28:	cmp	r0, r1
   62a2c:	bne	62a48 <__assert_fail@plt+0x4fe90>
   62a30:	ldr	r0, [fp, #-8]
   62a34:	ldr	r0, [r0, #4]
   62a38:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   62a3c:	movw	r0, #0
   62a40:	str	r0, [fp, #-4]
   62a44:	b	62c00 <__assert_fail@plt+0x50048>
   62a48:	ldr	r0, [sp, #8]
   62a4c:	ldr	r1, [fp, #-8]
   62a50:	str	r0, [r1]
   62a54:	b	62b44 <__assert_fail@plt+0x4ff8c>
   62a58:	ldr	r0, [sp, #20]
   62a5c:	cmp	r0, #1
   62a60:	bne	62b10 <__assert_fail@plt+0x4ff58>
   62a64:	ldr	r0, [sp, #8]
   62a68:	ldr	r1, [fp, #-8]
   62a6c:	ldr	r1, [r1]
   62a70:	cmp	r0, r1
   62a74:	bls	62b0c <__assert_fail@plt+0x4ff54>
   62a78:	ldr	r0, [fp, #-8]
   62a7c:	ldr	r0, [r0, #4]
   62a80:	ldr	r1, [sp, #8]
   62a84:	lsl	r1, r1, #2
   62a88:	bl	538c8 <__assert_fail@plt+0x40d10>
   62a8c:	str	r0, [sp, #4]
   62a90:	ldr	r0, [sp, #4]
   62a94:	movw	r1, #0
   62a98:	cmp	r0, r1
   62a9c:	bne	62aac <__assert_fail@plt+0x4fef4>
   62aa0:	movw	r0, #0
   62aa4:	str	r0, [fp, #-4]
   62aa8:	b	62c00 <__assert_fail@plt+0x50048>
   62aac:	ldr	r0, [fp, #-8]
   62ab0:	ldr	r0, [r0, #8]
   62ab4:	ldr	r1, [sp, #8]
   62ab8:	lsl	r1, r1, #2
   62abc:	bl	538c8 <__assert_fail@plt+0x40d10>
   62ac0:	str	r0, [sp]
   62ac4:	ldr	r0, [sp]
   62ac8:	movw	r1, #0
   62acc:	cmp	r0, r1
   62ad0:	bne	62ae8 <__assert_fail@plt+0x4ff30>
   62ad4:	ldr	r0, [sp, #4]
   62ad8:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   62adc:	movw	r0, #0
   62ae0:	str	r0, [fp, #-4]
   62ae4:	b	62c00 <__assert_fail@plt+0x50048>
   62ae8:	ldr	r0, [sp, #4]
   62aec:	ldr	r1, [fp, #-8]
   62af0:	str	r0, [r1, #4]
   62af4:	ldr	r0, [sp]
   62af8:	ldr	r1, [fp, #-8]
   62afc:	str	r0, [r1, #8]
   62b00:	ldr	r0, [sp, #8]
   62b04:	ldr	r1, [fp, #-8]
   62b08:	str	r0, [r1]
   62b0c:	b	62b40 <__assert_fail@plt+0x4ff88>
   62b10:	ldr	r0, [sp, #20]
   62b14:	cmp	r0, #2
   62b18:	bne	62b20 <__assert_fail@plt+0x4ff68>
   62b1c:	b	62b20 <__assert_fail@plt+0x4ff68>
   62b20:	ldr	r0, [fp, #-16]
   62b24:	ldr	r1, [fp, #-8]
   62b28:	ldr	r1, [r1]
   62b2c:	cmp	r0, r1
   62b30:	bhi	62b38 <__assert_fail@plt+0x4ff80>
   62b34:	b	62b38 <__assert_fail@plt+0x4ff80>
   62b38:	movw	r0, #2
   62b3c:	str	r0, [sp, #16]
   62b40:	b	62b44 <__assert_fail@plt+0x4ff8c>
   62b44:	movw	r0, #0
   62b48:	str	r0, [sp, #12]
   62b4c:	ldr	r0, [sp, #12]
   62b50:	ldr	r1, [fp, #-16]
   62b54:	cmp	r0, r1
   62b58:	bge	62ba4 <__assert_fail@plt+0x4ffec>
   62b5c:	ldr	r0, [fp, #-12]
   62b60:	ldr	r1, [sp, #12]
   62b64:	ldr	r0, [r0, r1, lsl #3]
   62b68:	ldr	r2, [fp, #-8]
   62b6c:	ldr	r2, [r2, #4]
   62b70:	str	r0, [r2, r1, lsl #2]
   62b74:	ldr	r0, [fp, #-12]
   62b78:	ldr	r1, [sp, #12]
   62b7c:	add	r0, r0, r1, lsl #3
   62b80:	ldr	r0, [r0, #4]
   62b84:	ldr	r2, [fp, #-8]
   62b88:	ldr	r2, [r2, #8]
   62b8c:	add	r1, r2, r1, lsl #2
   62b90:	str	r0, [r1]
   62b94:	ldr	r0, [sp, #12]
   62b98:	add	r0, r0, #1
   62b9c:	str	r0, [sp, #12]
   62ba0:	b	62b4c <__assert_fail@plt+0x4ff94>
   62ba4:	b	62ba8 <__assert_fail@plt+0x4fff0>
   62ba8:	ldr	r0, [sp, #12]
   62bac:	ldr	r1, [fp, #-8]
   62bb0:	ldr	r1, [r1]
   62bb4:	cmp	r0, r1
   62bb8:	bcs	62bf8 <__assert_fail@plt+0x50040>
   62bbc:	ldr	r0, [fp, #-8]
   62bc0:	ldr	r0, [r0, #8]
   62bc4:	ldr	r1, [sp, #12]
   62bc8:	mvn	r2, #0
   62bcc:	str	r2, [r0, r1, lsl #2]
   62bd0:	ldr	r0, [fp, #-8]
   62bd4:	ldr	r0, [r0, #4]
   62bd8:	ldr	r1, [sp, #12]
   62bdc:	add	r0, r0, r1, lsl #2
   62be0:	mvn	r1, #0
   62be4:	str	r1, [r0]
   62be8:	ldr	r0, [sp, #12]
   62bec:	add	r0, r0, #1
   62bf0:	str	r0, [sp, #12]
   62bf4:	b	62ba8 <__assert_fail@plt+0x4fff0>
   62bf8:	ldr	r0, [sp, #16]
   62bfc:	str	r0, [fp, #-4]
   62c00:	ldr	r0, [fp, #-4]
   62c04:	mov	sp, fp
   62c08:	pop	{fp, pc}
   62c0c:	push	{r4, sl, fp, lr}
   62c10:	add	fp, sp, #8
   62c14:	sub	sp, sp, #56	; 0x38
   62c18:	ldr	ip, [fp, #16]
   62c1c:	ldr	lr, [fp, #12]
   62c20:	ldr	r4, [fp, #8]
   62c24:	str	r0, [fp, #-16]
   62c28:	str	r1, [fp, #-20]	; 0xffffffec
   62c2c:	str	r2, [fp, #-24]	; 0xffffffe8
   62c30:	str	r3, [fp, #-28]	; 0xffffffe4
   62c34:	and	r0, lr, #1
   62c38:	strb	r0, [fp, #-29]	; 0xffffffe3
   62c3c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   62c40:	ldr	r1, [fp, #16]
   62c44:	ldr	r1, [r1, #92]	; 0x5c
   62c48:	cmp	r0, r1
   62c4c:	bge	62c5c <__assert_fail@plt+0x500a4>
   62c50:	ldr	r0, [fp, #16]
   62c54:	ldr	r0, [r0, #92]	; 0x5c
   62c58:	str	r0, [fp, #-28]	; 0xffffffe4
   62c5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   62c60:	add	r0, r0, #1
   62c64:	ldr	r1, [fp, #-28]	; 0xffffffe4
   62c68:	cmp	r0, r1
   62c6c:	bge	62c80 <__assert_fail@plt+0x500c8>
   62c70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   62c74:	add	r0, r0, #1
   62c78:	str	r0, [sp, #20]
   62c7c:	b	62c88 <__assert_fail@plt+0x500d0>
   62c80:	ldr	r0, [fp, #-28]	; 0xffffffe4
   62c84:	str	r0, [sp, #20]
   62c88:	ldr	r0, [sp, #20]
   62c8c:	str	r0, [sp, #24]
   62c90:	ldr	r0, [fp, #-20]	; 0xffffffec
   62c94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   62c98:	ldr	r2, [fp, #-16]
   62c9c:	ldr	r3, [fp, #8]
   62ca0:	ldrb	ip, [fp, #-29]	; 0xffffffe3
   62ca4:	ldr	lr, [fp, #16]
   62ca8:	and	ip, ip, #1
   62cac:	str	ip, [sp]
   62cb0:	str	lr, [sp, #4]
   62cb4:	bl	58fe4 <__assert_fail@plt+0x4642c>
   62cb8:	ldr	r0, [fp, #-16]
   62cbc:	ldr	r1, [sp, #24]
   62cc0:	bl	590e4 <__assert_fail@plt+0x4652c>
   62cc4:	str	r0, [sp, #28]
   62cc8:	ldr	r0, [sp, #28]
   62ccc:	cmp	r0, #0
   62cd0:	beq	62ce0 <__assert_fail@plt+0x50128>
   62cd4:	ldr	r0, [sp, #28]
   62cd8:	str	r0, [fp, #-12]
   62cdc:	b	62d94 <__assert_fail@plt+0x501dc>
   62ce0:	ldr	r0, [fp, #16]
   62ce4:	add	r0, r0, #96	; 0x60
   62ce8:	ldr	r1, [fp, #-16]
   62cec:	str	r0, [r1, #68]	; 0x44
   62cf0:	ldr	r0, [fp, #16]
   62cf4:	ldrb	r0, [r0, #88]	; 0x58
   62cf8:	ubfx	r0, r0, #4, #1
   62cfc:	and	r0, r0, #255	; 0xff
   62d00:	ldr	r1, [fp, #-16]
   62d04:	strb	r0, [r1, #78]	; 0x4e
   62d08:	ldr	r0, [fp, #-16]
   62d0c:	ldrb	r0, [r0, #75]	; 0x4b
   62d10:	cmp	r0, #0
   62d14:	beq	62d28 <__assert_fail@plt+0x50170>
   62d18:	ldr	r0, [fp, #-16]
   62d1c:	ldr	r0, [r0, #4]
   62d20:	str	r0, [sp, #16]
   62d24:	b	62d30 <__assert_fail@plt+0x50178>
   62d28:	ldr	r0, [fp, #-20]	; 0xffffffec
   62d2c:	str	r0, [sp, #16]
   62d30:	ldr	r0, [sp, #16]
   62d34:	ldr	r1, [fp, #-16]
   62d38:	str	r0, [r1, #4]
   62d3c:	ldr	r0, [fp, #-16]
   62d40:	ldrb	r0, [r0, #75]	; 0x4b
   62d44:	cmp	r0, #0
   62d48:	bne	62d5c <__assert_fail@plt+0x501a4>
   62d4c:	ldr	r0, [fp, #16]
   62d50:	ldr	r0, [r0, #92]	; 0x5c
   62d54:	cmp	r0, #1
   62d58:	ble	62d68 <__assert_fail@plt+0x501b0>
   62d5c:	movw	r0, #0
   62d60:	str	r0, [sp, #12]
   62d64:	b	62d70 <__assert_fail@plt+0x501b8>
   62d68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   62d6c:	str	r0, [sp, #12]
   62d70:	ldr	r0, [sp, #12]
   62d74:	ldr	r1, [fp, #-16]
   62d78:	str	r0, [r1, #28]
   62d7c:	ldr	r0, [fp, #-16]
   62d80:	ldr	r0, [r0, #28]
   62d84:	ldr	r1, [fp, #-16]
   62d88:	str	r0, [r1, #32]
   62d8c:	movw	r0, #0
   62d90:	str	r0, [fp, #-12]
   62d94:	ldr	r0, [fp, #-12]
   62d98:	sub	sp, fp, #8
   62d9c:	pop	{r4, sl, fp, pc}
   62da0:	push	{fp, lr}
   62da4:	mov	fp, sp
   62da8:	sub	sp, sp, #32
   62dac:	str	r0, [fp, #-8]
   62db0:	str	r1, [fp, #-12]
   62db4:	str	r2, [sp, #16]
   62db8:	ldr	r0, [fp, #-12]
   62dbc:	ldr	r1, [fp, #-8]
   62dc0:	str	r0, [r1, #88]	; 0x58
   62dc4:	ldr	r0, [fp, #-8]
   62dc8:	mvn	r1, #0
   62dcc:	str	r1, [r0, #92]	; 0x5c
   62dd0:	ldr	r0, [sp, #16]
   62dd4:	cmp	r0, #0
   62dd8:	ble	62eb4 <__assert_fail@plt+0x502fc>
   62ddc:	ldr	r0, [pc, #264]	; 62eec <__assert_fail@plt+0x50334>
   62de0:	movw	r1, #24
   62de4:	str	r1, [sp, #12]
   62de8:	ldr	r1, [sp, #12]
   62dec:	mvn	r2, #0
   62df0:	udiv	r1, r2, r1
   62df4:	cmp	r0, r1
   62df8:	bcs	62e08 <__assert_fail@plt+0x50250>
   62dfc:	ldr	r0, [pc, #232]	; 62eec <__assert_fail@plt+0x50334>
   62e00:	str	r0, [sp, #8]
   62e04:	b	62e18 <__assert_fail@plt+0x50260>
   62e08:	ldr	r0, [sp, #12]
   62e0c:	mvn	r1, #0
   62e10:	udiv	r0, r1, r0
   62e14:	str	r0, [sp, #8]
   62e18:	ldr	r0, [sp, #8]
   62e1c:	ldr	r1, [sp, #16]
   62e20:	cmp	r0, r1
   62e24:	bcs	62e34 <__assert_fail@plt+0x5027c>
   62e28:	movw	r0, #12
   62e2c:	str	r0, [fp, #-4]
   62e30:	b	62ee0 <__assert_fail@plt+0x50328>
   62e34:	ldr	r0, [sp, #16]
   62e38:	add	r0, r0, r0, lsl #1
   62e3c:	lsl	r0, r0, #3
   62e40:	bl	527f0 <__assert_fail@plt+0x3fc38>
   62e44:	ldr	r1, [fp, #-8]
   62e48:	str	r0, [r1, #116]	; 0x74
   62e4c:	ldr	r0, [sp, #16]
   62e50:	lsl	r0, r0, #2
   62e54:	bl	527f0 <__assert_fail@plt+0x3fc38>
   62e58:	ldr	r1, [fp, #-8]
   62e5c:	str	r0, [r1, #132]	; 0x84
   62e60:	ldr	r0, [fp, #-8]
   62e64:	ldr	r0, [r0, #116]	; 0x74
   62e68:	movw	r1, #0
   62e6c:	cmp	r0, r1
   62e70:	movw	r0, #1
   62e74:	str	r0, [sp, #4]
   62e78:	beq	62e98 <__assert_fail@plt+0x502e0>
   62e7c:	ldr	r0, [fp, #-8]
   62e80:	ldr	r0, [r0, #132]	; 0x84
   62e84:	movw	r1, #0
   62e88:	cmp	r0, r1
   62e8c:	movw	r0, #0
   62e90:	moveq	r0, #1
   62e94:	str	r0, [sp, #4]
   62e98:	ldr	r0, [sp, #4]
   62e9c:	tst	r0, #1
   62ea0:	beq	62eb0 <__assert_fail@plt+0x502f8>
   62ea4:	movw	r0, #12
   62ea8:	str	r0, [fp, #-4]
   62eac:	b	62ee0 <__assert_fail@plt+0x50328>
   62eb0:	b	62eb4 <__assert_fail@plt+0x502fc>
   62eb4:	ldr	r0, [sp, #16]
   62eb8:	ldr	r1, [fp, #-8]
   62ebc:	str	r0, [r1, #112]	; 0x70
   62ec0:	ldr	r0, [fp, #-8]
   62ec4:	movw	r1, #1
   62ec8:	str	r1, [r0, #120]	; 0x78
   62ecc:	ldr	r0, [sp, #16]
   62ed0:	ldr	r1, [fp, #-8]
   62ed4:	str	r0, [r1, #128]	; 0x80
   62ed8:	movw	r0, #0
   62edc:	str	r0, [fp, #-4]
   62ee0:	ldr	r0, [fp, #-4]
   62ee4:	mov	sp, fp
   62ee8:	pop	{fp, pc}
   62eec:	svcvc	0x00ffffff
   62ef0:	push	{fp, lr}
   62ef4:	mov	fp, sp
   62ef8:	sub	sp, sp, #128	; 0x80
   62efc:	str	r0, [fp, #-8]
   62f00:	str	r1, [fp, #-12]
   62f04:	str	r2, [fp, #-16]
   62f08:	ldr	r0, [fp, #-8]
   62f0c:	ldr	r0, [r0, #24]
   62f10:	ldr	r1, [fp, #-12]
   62f14:	cmp	r0, r1
   62f18:	bgt	62f34 <__assert_fail@plt+0x5037c>
   62f1c:	ldr	r0, [fp, #-12]
   62f20:	ldr	r1, [fp, #-8]
   62f24:	ldr	r1, [r1, #24]
   62f28:	sub	r0, r0, r1
   62f2c:	str	r0, [fp, #-20]	; 0xffffffec
   62f30:	b	62ff4 <__assert_fail@plt+0x5043c>
   62f34:	ldr	r0, [fp, #-8]
   62f38:	ldr	r0, [r0, #80]	; 0x50
   62f3c:	cmp	r0, #1
   62f40:	ble	62f5c <__assert_fail@plt+0x503a4>
   62f44:	ldr	r0, [fp, #-8]
   62f48:	add	r0, r0, #16
   62f4c:	movw	r1, #0
   62f50:	and	r1, r1, #255	; 0xff
   62f54:	movw	r2, #8
   62f58:	bl	12900 <memset@plt>
   62f5c:	ldr	r0, [fp, #-8]
   62f60:	ldr	r0, [r0, #44]	; 0x2c
   62f64:	ldr	r1, [fp, #-8]
   62f68:	str	r0, [r1, #48]	; 0x30
   62f6c:	ldr	r0, [fp, #-8]
   62f70:	ldr	r0, [r0, #52]	; 0x34
   62f74:	ldr	r1, [fp, #-8]
   62f78:	str	r0, [r1, #56]	; 0x38
   62f7c:	ldr	r0, [fp, #-8]
   62f80:	movw	r1, #0
   62f84:	str	r1, [r0, #28]
   62f88:	ldr	r0, [fp, #-8]
   62f8c:	str	r1, [r0, #24]
   62f90:	ldr	r0, [fp, #-8]
   62f94:	str	r1, [r0, #32]
   62f98:	ldr	r0, [fp, #-8]
   62f9c:	movw	r1, #0
   62fa0:	strb	r1, [r0, #76]	; 0x4c
   62fa4:	ldr	r0, [fp, #-16]
   62fa8:	and	r0, r0, #1
   62fac:	cmp	r0, #0
   62fb0:	movw	r0, #0
   62fb4:	movne	r0, #1
   62fb8:	tst	r0, #1
   62fbc:	movw	r0, #4
   62fc0:	moveq	r0, #6
   62fc4:	ldr	r1, [fp, #-8]
   62fc8:	str	r0, [r1, #60]	; 0x3c
   62fcc:	ldr	r0, [fp, #-8]
   62fd0:	ldrsb	r0, [r0, #75]	; 0x4b
   62fd4:	cmp	r0, #0
   62fd8:	bne	62fec <__assert_fail@plt+0x50434>
   62fdc:	ldr	r0, [fp, #-8]
   62fe0:	ldr	r0, [r0]
   62fe4:	ldr	r1, [fp, #-8]
   62fe8:	str	r0, [r1, #4]
   62fec:	ldr	r0, [fp, #-12]
   62ff0:	str	r0, [fp, #-20]	; 0xffffffec
   62ff4:	ldr	r0, [fp, #-20]	; 0xffffffec
   62ff8:	cmp	r0, #0
   62ffc:	beq	639d4 <__assert_fail@plt+0x50e1c>
   63000:	ldr	r0, [fp, #-20]	; 0xffffffec
   63004:	ldr	r1, [fp, #-8]
   63008:	ldr	r1, [r1, #32]
   6300c:	cmp	r0, r1
   63010:	bge	634bc <__assert_fail@plt+0x50904>
   63014:	ldr	r0, [fp, #-8]
   63018:	ldrb	r0, [r0, #76]	; 0x4c
   6301c:	cmp	r0, #0
   63020:	beq	633e8 <__assert_fail@plt+0x50830>
   63024:	movw	r0, #0
   63028:	str	r0, [fp, #-24]	; 0xffffffe8
   6302c:	ldr	r0, [fp, #-8]
   63030:	ldr	r0, [r0, #28]
   63034:	str	r0, [fp, #-28]	; 0xffffffe4
   63038:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6303c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   63040:	add	r0, r0, r1
   63044:	add	r0, r0, r0, lsr #31
   63048:	asr	r0, r0, #1
   6304c:	str	r0, [fp, #-32]	; 0xffffffe0
   63050:	ldr	r0, [fp, #-8]
   63054:	ldr	r0, [r0, #12]
   63058:	ldr	r1, [fp, #-32]	; 0xffffffe0
   6305c:	add	r0, r0, r1, lsl #2
   63060:	ldr	r0, [r0]
   63064:	ldr	r1, [fp, #-20]	; 0xffffffec
   63068:	cmp	r0, r1
   6306c:	ble	6307c <__assert_fail@plt+0x504c4>
   63070:	ldr	r0, [fp, #-32]	; 0xffffffe0
   63074:	str	r0, [fp, #-28]	; 0xffffffe4
   63078:	b	630b4 <__assert_fail@plt+0x504fc>
   6307c:	ldr	r0, [fp, #-8]
   63080:	ldr	r0, [r0, #12]
   63084:	ldr	r1, [fp, #-32]	; 0xffffffe0
   63088:	add	r0, r0, r1, lsl #2
   6308c:	ldr	r0, [r0]
   63090:	ldr	r1, [fp, #-20]	; 0xffffffec
   63094:	cmp	r0, r1
   63098:	bge	630ac <__assert_fail@plt+0x504f4>
   6309c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   630a0:	add	r0, r0, #1
   630a4:	str	r0, [fp, #-24]	; 0xffffffe8
   630a8:	b	630b0 <__assert_fail@plt+0x504f8>
   630ac:	b	630c8 <__assert_fail@plt+0x50510>
   630b0:	b	630b4 <__assert_fail@plt+0x504fc>
   630b4:	b	630b8 <__assert_fail@plt+0x50500>
   630b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   630bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   630c0:	cmp	r0, r1
   630c4:	blt	63038 <__assert_fail@plt+0x50480>
   630c8:	ldr	r0, [fp, #-8]
   630cc:	ldr	r0, [r0, #12]
   630d0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   630d4:	add	r0, r0, r1, lsl #2
   630d8:	ldr	r0, [r0]
   630dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   630e0:	cmp	r0, r1
   630e4:	bge	630f4 <__assert_fail@plt+0x5053c>
   630e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   630ec:	add	r0, r0, #1
   630f0:	str	r0, [fp, #-32]	; 0xffffffe0
   630f4:	ldr	r0, [fp, #-8]
   630f8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   630fc:	sub	r1, r1, #1
   63100:	ldr	r2, [fp, #-16]
   63104:	bl	64998 <__assert_fail@plt+0x51de0>
   63108:	ldr	r1, [fp, #-8]
   6310c:	str	r0, [r1, #60]	; 0x3c
   63110:	ldr	r0, [fp, #-8]
   63114:	ldr	r0, [r0, #28]
   63118:	ldr	r1, [fp, #-20]	; 0xffffffec
   6311c:	cmp	r0, r1
   63120:	ble	63224 <__assert_fail@plt+0x5066c>
   63124:	ldr	r0, [fp, #-32]	; 0xffffffe0
   63128:	ldr	r1, [fp, #-20]	; 0xffffffec
   6312c:	cmp	r0, r1
   63130:	bne	63224 <__assert_fail@plt+0x5066c>
   63134:	ldr	r0, [fp, #-8]
   63138:	ldr	r0, [r0, #12]
   6313c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   63140:	add	r0, r0, r1, lsl #2
   63144:	ldr	r0, [r0]
   63148:	ldr	r1, [fp, #-20]	; 0xffffffec
   6314c:	cmp	r0, r1
   63150:	bne	63224 <__assert_fail@plt+0x5066c>
   63154:	ldr	r0, [fp, #-8]
   63158:	ldr	r1, [r0, #8]
   6315c:	ldr	r0, [r0, #28]
   63160:	ldr	r2, [fp, #-20]	; 0xffffffec
   63164:	add	r3, r1, r2, lsl #2
   63168:	sub	r0, r0, r2
   6316c:	lsl	r2, r0, #2
   63170:	mov	r0, r1
   63174:	mov	r1, r3
   63178:	bl	12558 <memmove@plt>
   6317c:	ldr	r0, [fp, #-8]
   63180:	ldr	r0, [r0, #4]
   63184:	ldr	r1, [fp, #-8]
   63188:	ldr	r1, [r1, #4]
   6318c:	ldr	r2, [fp, #-20]	; 0xffffffec
   63190:	add	r1, r1, r2
   63194:	ldr	r2, [fp, #-8]
   63198:	ldr	r2, [r2, #28]
   6319c:	ldr	r3, [fp, #-20]	; 0xffffffec
   631a0:	sub	r2, r2, r3
   631a4:	bl	12558 <memmove@plt>
   631a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   631ac:	ldr	r1, [fp, #-8]
   631b0:	ldr	r2, [r1, #28]
   631b4:	sub	r0, r2, r0
   631b8:	str	r0, [r1, #28]
   631bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   631c0:	ldr	r1, [fp, #-8]
   631c4:	ldr	r2, [r1, #32]
   631c8:	sub	r0, r2, r0
   631cc:	str	r0, [r1, #32]
   631d0:	movw	r0, #0
   631d4:	str	r0, [fp, #-24]	; 0xffffffe8
   631d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   631dc:	ldr	r1, [fp, #-8]
   631e0:	ldr	r1, [r1, #28]
   631e4:	cmp	r0, r1
   631e8:	bge	63220 <__assert_fail@plt+0x50668>
   631ec:	ldr	r0, [fp, #-8]
   631f0:	ldr	r0, [r0, #12]
   631f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   631f8:	ldr	r2, [fp, #-20]	; 0xffffffec
   631fc:	add	r3, r1, r2
   63200:	ldr	r3, [r0, r3, lsl #2]
   63204:	sub	r2, r3, r2
   63208:	add	r0, r0, r1, lsl #2
   6320c:	str	r2, [r0]
   63210:	ldr	r0, [fp, #-24]	; 0xffffffe8
   63214:	add	r0, r0, #1
   63218:	str	r0, [fp, #-24]	; 0xffffffe8
   6321c:	b	631d8 <__assert_fail@plt+0x50620>
   63220:	b	633e4 <__assert_fail@plt+0x5082c>
   63224:	ldr	r0, [fp, #-8]
   63228:	ldr	r0, [r0, #44]	; 0x2c
   6322c:	ldr	r1, [fp, #-12]
   63230:	sub	r0, r0, r1
   63234:	ldr	r1, [fp, #-20]	; 0xffffffec
   63238:	add	r0, r0, r1
   6323c:	ldr	r1, [fp, #-8]
   63240:	str	r0, [r1, #48]	; 0x30
   63244:	ldr	r0, [fp, #-8]
   63248:	ldr	r0, [r0, #52]	; 0x34
   6324c:	ldr	r1, [fp, #-12]
   63250:	sub	r0, r0, r1
   63254:	ldr	r1, [fp, #-20]	; 0xffffffec
   63258:	add	r0, r0, r1
   6325c:	ldr	r1, [fp, #-8]
   63260:	str	r0, [r1, #56]	; 0x38
   63264:	ldr	r0, [fp, #-8]
   63268:	movw	r1, #0
   6326c:	strb	r1, [r0, #76]	; 0x4c
   63270:	ldr	r0, [fp, #-32]	; 0xffffffe0
   63274:	cmp	r0, #0
   63278:	movw	r0, #0
   6327c:	str	r0, [sp, #24]
   63280:	ble	632b0 <__assert_fail@plt+0x506f8>
   63284:	ldr	r0, [fp, #-8]
   63288:	ldr	r0, [r0, #12]
   6328c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   63290:	sub	r1, r1, #1
   63294:	add	r0, r0, r1, lsl #2
   63298:	ldr	r0, [r0]
   6329c:	ldr	r1, [fp, #-20]	; 0xffffffec
   632a0:	cmp	r0, r1
   632a4:	movw	r0, #0
   632a8:	moveq	r0, #1
   632ac:	str	r0, [sp, #24]
   632b0:	ldr	r0, [sp, #24]
   632b4:	tst	r0, #1
   632b8:	beq	632d0 <__assert_fail@plt+0x50718>
   632bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   632c0:	mvn	r1, #0
   632c4:	add	r0, r0, r1
   632c8:	str	r0, [fp, #-32]	; 0xffffffe0
   632cc:	b	63270 <__assert_fail@plt+0x506b8>
   632d0:	b	632d4 <__assert_fail@plt+0x5071c>
   632d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   632d8:	ldr	r1, [fp, #-8]
   632dc:	ldr	r1, [r1, #28]
   632e0:	cmp	r0, r1
   632e4:	bge	63318 <__assert_fail@plt+0x50760>
   632e8:	ldr	r0, [fp, #-8]
   632ec:	ldr	r0, [r0, #8]
   632f0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   632f4:	add	r0, r0, r1, lsl #2
   632f8:	ldr	r0, [r0]
   632fc:	cmn	r0, #1
   63300:	beq	63308 <__assert_fail@plt+0x50750>
   63304:	b	63318 <__assert_fail@plt+0x50760>
   63308:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6330c:	add	r0, r0, #1
   63310:	str	r0, [fp, #-32]	; 0xffffffe0
   63314:	b	632d4 <__assert_fail@plt+0x5071c>
   63318:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6331c:	ldr	r1, [fp, #-8]
   63320:	ldr	r1, [r1, #28]
   63324:	cmp	r0, r1
   63328:	bne	6333c <__assert_fail@plt+0x50784>
   6332c:	ldr	r0, [fp, #-8]
   63330:	movw	r1, #0
   63334:	str	r1, [r0, #28]
   63338:	b	633d4 <__assert_fail@plt+0x5081c>
   6333c:	ldr	r0, [fp, #-8]
   63340:	ldr	r0, [r0, #12]
   63344:	ldr	r1, [fp, #-32]	; 0xffffffe0
   63348:	add	r0, r0, r1, lsl #2
   6334c:	ldr	r0, [r0]
   63350:	ldr	r1, [fp, #-20]	; 0xffffffec
   63354:	sub	r0, r0, r1
   63358:	ldr	r1, [fp, #-8]
   6335c:	str	r0, [r1, #28]
   63360:	ldr	r0, [fp, #-8]
   63364:	ldr	r0, [r0, #28]
   63368:	cmp	r0, #0
   6336c:	beq	633d0 <__assert_fail@plt+0x50818>
   63370:	movw	r0, #0
   63374:	str	r0, [fp, #-24]	; 0xffffffe8
   63378:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6337c:	ldr	r1, [fp, #-8]
   63380:	ldr	r1, [r1, #28]
   63384:	cmp	r0, r1
   63388:	bge	633b4 <__assert_fail@plt+0x507fc>
   6338c:	ldr	r0, [fp, #-8]
   63390:	ldr	r0, [r0, #8]
   63394:	ldr	r1, [fp, #-24]	; 0xffffffe8
   63398:	add	r0, r0, r1, lsl #2
   6339c:	mvn	r1, #0
   633a0:	str	r1, [r0]
   633a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   633a8:	add	r0, r0, #1
   633ac:	str	r0, [fp, #-24]	; 0xffffffe8
   633b0:	b	63378 <__assert_fail@plt+0x507c0>
   633b4:	ldr	r0, [fp, #-8]
   633b8:	ldr	r0, [r0, #4]
   633bc:	ldr	r1, [fp, #-8]
   633c0:	ldr	r2, [r1, #28]
   633c4:	movw	r1, #255	; 0xff
   633c8:	and	r1, r1, #255	; 0xff
   633cc:	bl	12900 <memset@plt>
   633d0:	b	633d4 <__assert_fail@plt+0x5081c>
   633d4:	ldr	r0, [fp, #-8]
   633d8:	ldr	r0, [r0, #28]
   633dc:	ldr	r1, [fp, #-8]
   633e0:	str	r0, [r1, #32]
   633e4:	b	634b8 <__assert_fail@plt+0x50900>
   633e8:	ldr	r0, [fp, #-8]
   633ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   633f0:	sub	r1, r1, #1
   633f4:	ldr	r2, [fp, #-16]
   633f8:	bl	64998 <__assert_fail@plt+0x51de0>
   633fc:	ldr	r1, [fp, #-8]
   63400:	str	r0, [r1, #60]	; 0x3c
   63404:	ldr	r0, [fp, #-8]
   63408:	ldr	r0, [r0, #80]	; 0x50
   6340c:	cmp	r0, #1
   63410:	ble	6343c <__assert_fail@plt+0x50884>
   63414:	ldr	r0, [fp, #-8]
   63418:	ldr	r1, [r0, #8]
   6341c:	ldr	r0, [r0, #28]
   63420:	ldr	r2, [fp, #-20]	; 0xffffffec
   63424:	add	r3, r1, r2, lsl #2
   63428:	sub	r0, r0, r2
   6342c:	lsl	r2, r0, #2
   63430:	mov	r0, r1
   63434:	mov	r1, r3
   63438:	bl	12558 <memmove@plt>
   6343c:	ldr	r0, [fp, #-8]
   63440:	ldrb	r0, [r0, #75]	; 0x4b
   63444:	cmp	r0, #0
   63448:	beq	63478 <__assert_fail@plt+0x508c0>
   6344c:	ldr	r0, [fp, #-8]
   63450:	ldr	r0, [r0, #4]
   63454:	ldr	r1, [fp, #-8]
   63458:	ldr	r1, [r1, #4]
   6345c:	ldr	r2, [fp, #-20]	; 0xffffffec
   63460:	add	r1, r1, r2
   63464:	ldr	r2, [fp, #-8]
   63468:	ldr	r2, [r2, #28]
   6346c:	ldr	r3, [fp, #-20]	; 0xffffffec
   63470:	sub	r2, r2, r3
   63474:	bl	12558 <memmove@plt>
   63478:	ldr	r0, [fp, #-20]	; 0xffffffec
   6347c:	ldr	r1, [fp, #-8]
   63480:	ldr	r2, [r1, #28]
   63484:	sub	r0, r2, r0
   63488:	str	r0, [r1, #28]
   6348c:	ldr	r0, [fp, #-20]	; 0xffffffec
   63490:	ldr	r1, [fp, #-8]
   63494:	ldr	r2, [r1, #32]
   63498:	sub	r0, r2, r0
   6349c:	str	r0, [r1, #32]
   634a0:	ldr	r0, [fp, #-8]
   634a4:	ldr	r0, [r0, #28]
   634a8:	cmp	r0, #0
   634ac:	ble	634b4 <__assert_fail@plt+0x508fc>
   634b0:	b	634b4 <__assert_fail@plt+0x508fc>
   634b4:	b	634b8 <__assert_fail@plt+0x50900>
   634b8:	b	639ac <__assert_fail@plt+0x50df4>
   634bc:	ldr	r0, [fp, #-8]
   634c0:	ldr	r0, [r0, #28]
   634c4:	str	r0, [fp, #-36]	; 0xffffffdc
   634c8:	ldr	r0, [fp, #-8]
   634cc:	ldrb	r0, [r0, #76]	; 0x4c
   634d0:	cmp	r0, #0
   634d4:	beq	63524 <__assert_fail@plt+0x5096c>
   634d8:	ldr	r0, [fp, #-8]
   634dc:	ldr	r0, [r0, #44]	; 0x2c
   634e0:	ldr	r1, [fp, #-12]
   634e4:	sub	r0, r0, r1
   634e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   634ec:	add	r0, r0, r1
   634f0:	ldr	r1, [fp, #-8]
   634f4:	str	r0, [r1, #48]	; 0x30
   634f8:	ldr	r0, [fp, #-8]
   634fc:	ldr	r0, [r0, #52]	; 0x34
   63500:	ldr	r1, [fp, #-12]
   63504:	sub	r0, r0, r1
   63508:	ldr	r1, [fp, #-20]	; 0xffffffec
   6350c:	add	r0, r0, r1
   63510:	ldr	r1, [fp, #-8]
   63514:	str	r0, [r1, #56]	; 0x38
   63518:	ldr	r0, [fp, #-8]
   6351c:	movw	r1, #0
   63520:	strb	r1, [r0, #76]	; 0x4c
   63524:	ldr	r0, [fp, #-8]
   63528:	movw	r1, #0
   6352c:	str	r1, [r0, #28]
   63530:	ldr	r0, [fp, #-8]
   63534:	ldr	r0, [r0, #80]	; 0x50
   63538:	cmp	r0, #1
   6353c:	ble	638dc <__assert_fail@plt+0x50d24>
   63540:	mvn	r0, #0
   63544:	str	r0, [fp, #-44]	; 0xffffffd4
   63548:	ldr	r0, [fp, #-8]
   6354c:	ldrsb	r0, [r0, #73]	; 0x49
   63550:	cmp	r0, #0
   63554:	beq	63768 <__assert_fail@plt+0x50bb0>
   63558:	ldr	r0, [fp, #-8]
   6355c:	ldr	r0, [r0]
   63560:	ldr	r1, [fp, #-8]
   63564:	ldr	r1, [r1, #24]
   63568:	add	r0, r0, r1
   6356c:	str	r0, [fp, #-48]	; 0xffffffd0
   63570:	ldr	r0, [fp, #-48]	; 0xffffffd0
   63574:	ldr	r1, [fp, #-20]	; 0xffffffec
   63578:	ldr	r2, [fp, #-8]
   6357c:	ldr	r2, [r2, #80]	; 0x50
   63580:	sub	r1, r1, r2
   63584:	add	r0, r0, r1
   63588:	str	r0, [fp, #-56]	; 0xffffffc8
   6358c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   63590:	ldr	r1, [fp, #-8]
   63594:	ldr	r1, [r1]
   63598:	cmp	r0, r1
   6359c:	bcs	635ac <__assert_fail@plt+0x509f4>
   635a0:	ldr	r0, [fp, #-8]
   635a4:	ldr	r0, [r0]
   635a8:	str	r0, [fp, #-56]	; 0xffffffc8
   635ac:	ldr	r0, [fp, #-48]	; 0xffffffd0
   635b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   635b4:	add	r0, r0, r1
   635b8:	mvn	r1, #0
   635bc:	add	r0, r0, r1
   635c0:	str	r0, [fp, #-52]	; 0xffffffcc
   635c4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   635c8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   635cc:	cmp	r0, r1
   635d0:	bcc	63764 <__assert_fail@plt+0x50bac>
   635d4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   635d8:	ldrb	r0, [r0]
   635dc:	and	r0, r0, #192	; 0xc0
   635e0:	cmp	r0, #128	; 0x80
   635e4:	beq	6374c <__assert_fail@plt+0x50b94>
   635e8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   635ec:	ldr	r1, [fp, #-8]
   635f0:	ldr	r1, [r1, #48]	; 0x30
   635f4:	add	r0, r0, r1
   635f8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   635fc:	sub	r0, r0, r1
   63600:	str	r0, [sp, #56]	; 0x38
   63604:	ldr	r0, [fp, #-52]	; 0xffffffcc
   63608:	str	r0, [sp, #40]	; 0x28
   6360c:	ldr	r0, [fp, #-8]
   63610:	ldr	r0, [r0, #64]	; 0x40
   63614:	movw	r1, #0
   63618:	cmp	r0, r1
   6361c:	beq	636a0 <__assert_fail@plt+0x50ae8>
   63620:	ldr	r0, [sp, #56]	; 0x38
   63624:	cmp	r0, #6
   63628:	bge	63638 <__assert_fail@plt+0x50a80>
   6362c:	ldr	r0, [sp, #56]	; 0x38
   63630:	str	r0, [sp, #20]
   63634:	b	63644 <__assert_fail@plt+0x50a8c>
   63638:	movw	r0, #6
   6363c:	str	r0, [sp, #20]
   63640:	b	63644 <__assert_fail@plt+0x50a8c>
   63644:	ldr	r0, [sp, #20]
   63648:	str	r0, [sp, #36]	; 0x24
   6364c:	ldr	r0, [sp, #36]	; 0x24
   63650:	mvn	r1, #0
   63654:	add	r0, r0, r1
   63658:	str	r0, [sp, #36]	; 0x24
   6365c:	cmp	r0, #0
   63660:	blt	63698 <__assert_fail@plt+0x50ae0>
   63664:	ldr	r0, [fp, #-8]
   63668:	ldr	r0, [r0, #64]	; 0x40
   6366c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   63670:	ldr	r2, [sp, #36]	; 0x24
   63674:	add	r1, r1, r2
   63678:	ldrb	r1, [r1]
   6367c:	add	r0, r0, r1
   63680:	ldrb	r0, [r0]
   63684:	ldr	r1, [sp, #36]	; 0x24
   63688:	add	r2, sp, #50	; 0x32
   6368c:	add	r1, r2, r1
   63690:	strb	r0, [r1]
   63694:	b	6364c <__assert_fail@plt+0x50a94>
   63698:	add	r0, sp, #50	; 0x32
   6369c:	str	r0, [sp, #40]	; 0x28
   636a0:	add	r0, sp, #64	; 0x40
   636a4:	mov	r1, r0
   636a8:	str	r0, [sp, #16]
   636ac:	mov	r0, r1
   636b0:	movw	r1, #0
   636b4:	and	r1, r1, #255	; 0xff
   636b8:	movw	r2, #8
   636bc:	bl	12900 <memset@plt>
   636c0:	ldr	r1, [sp, #40]	; 0x28
   636c4:	ldr	r2, [sp, #56]	; 0x38
   636c8:	add	r0, sp, #60	; 0x3c
   636cc:	ldr	r3, [sp, #16]
   636d0:	bl	52860 <__assert_fail@plt+0x3fca8>
   636d4:	str	r0, [sp, #44]	; 0x2c
   636d8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   636dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   636e0:	add	r0, r0, r1
   636e4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   636e8:	sub	r0, r0, r1
   636ec:	ldr	r1, [sp, #44]	; 0x2c
   636f0:	cmp	r0, r1
   636f4:	bhi	63748 <__assert_fail@plt+0x50b90>
   636f8:	ldr	r0, [sp, #44]	; 0x2c
   636fc:	cmn	r0, #2
   63700:	bcs	63748 <__assert_fail@plt+0x50b90>
   63704:	ldr	r0, [fp, #-8]
   63708:	add	r0, r0, #16
   6370c:	movw	r1, #0
   63710:	and	r1, r1, #255	; 0xff
   63714:	movw	r2, #8
   63718:	bl	12900 <memset@plt>
   6371c:	ldr	r0, [sp, #44]	; 0x2c
   63720:	ldr	r1, [fp, #-48]	; 0xffffffd0
   63724:	ldr	r2, [fp, #-20]	; 0xffffffec
   63728:	add	r1, r1, r2
   6372c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   63730:	sub	r1, r1, r2
   63734:	sub	r0, r0, r1
   63738:	ldr	r1, [fp, #-8]
   6373c:	str	r0, [r1, #28]
   63740:	ldr	r0, [sp, #60]	; 0x3c
   63744:	str	r0, [fp, #-44]	; 0xffffffd4
   63748:	b	63764 <__assert_fail@plt+0x50bac>
   6374c:	b	63750 <__assert_fail@plt+0x50b98>
   63750:	ldr	r0, [fp, #-52]	; 0xffffffcc
   63754:	mvn	r1, #0
   63758:	add	r0, r0, r1
   6375c:	str	r0, [fp, #-52]	; 0xffffffcc
   63760:	b	635c4 <__assert_fail@plt+0x50a0c>
   63764:	b	63768 <__assert_fail@plt+0x50bb0>
   63768:	ldr	r0, [fp, #-44]	; 0xffffffd4
   6376c:	cmn	r0, #1
   63770:	bne	63794 <__assert_fail@plt+0x50bdc>
   63774:	ldr	r0, [fp, #-8]
   63778:	ldr	r1, [fp, #-12]
   6377c:	sub	r2, fp, #44	; 0x2c
   63780:	bl	64b98 <__assert_fail@plt+0x51fe0>
   63784:	ldr	r1, [fp, #-12]
   63788:	sub	r0, r0, r1
   6378c:	ldr	r1, [fp, #-8]
   63790:	str	r0, [r1, #28]
   63794:	ldr	r0, [fp, #-44]	; 0xffffffd4
   63798:	cmn	r0, #1
   6379c:	bne	637c0 <__assert_fail@plt+0x50c08>
   637a0:	ldr	r0, [fp, #-8]
   637a4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   637a8:	sub	r1, r1, #1
   637ac:	ldr	r2, [fp, #-16]
   637b0:	bl	64998 <__assert_fail@plt+0x51de0>
   637b4:	ldr	r1, [fp, #-8]
   637b8:	str	r0, [r1, #60]	; 0x3c
   637bc:	b	63844 <__assert_fail@plt+0x50c8c>
   637c0:	ldr	r0, [fp, #-8]
   637c4:	ldrb	r0, [r0, #78]	; 0x4e
   637c8:	cmp	r0, #0
   637cc:	beq	637f8 <__assert_fail@plt+0x50c40>
   637d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   637d4:	bl	128dc <iswalnum@plt>
   637d8:	cmp	r0, #0
   637dc:	bne	637ec <__assert_fail@plt+0x50c34>
   637e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   637e4:	cmp	r0, #95	; 0x5f
   637e8:	bne	637f8 <__assert_fail@plt+0x50c40>
   637ec:	movw	r0, #1
   637f0:	str	r0, [sp, #12]
   637f4:	b	63838 <__assert_fail@plt+0x50c80>
   637f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   637fc:	cmp	r0, #10
   63800:	movw	r0, #0
   63804:	str	r0, [sp, #8]
   63808:	bne	63824 <__assert_fail@plt+0x50c6c>
   6380c:	ldr	r0, [fp, #-8]
   63810:	ldrb	r0, [r0, #77]	; 0x4d
   63814:	cmp	r0, #0
   63818:	movw	r0, #0
   6381c:	movne	r0, #1
   63820:	str	r0, [sp, #8]
   63824:	ldr	r0, [sp, #8]
   63828:	tst	r0, #1
   6382c:	movw	r0, #2
   63830:	moveq	r0, #0
   63834:	str	r0, [sp, #12]
   63838:	ldr	r0, [sp, #12]
   6383c:	ldr	r1, [fp, #-8]
   63840:	str	r0, [r1, #60]	; 0x3c
   63844:	ldr	r0, [fp, #-8]
   63848:	ldr	r0, [r0, #28]
   6384c:	cmp	r0, #0
   63850:	beq	638c8 <__assert_fail@plt+0x50d10>
   63854:	movw	r0, #0
   63858:	str	r0, [fp, #-40]	; 0xffffffd8
   6385c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   63860:	ldr	r1, [fp, #-8]
   63864:	ldr	r1, [r1, #28]
   63868:	cmp	r0, r1
   6386c:	bge	63898 <__assert_fail@plt+0x50ce0>
   63870:	ldr	r0, [fp, #-8]
   63874:	ldr	r0, [r0, #8]
   63878:	ldr	r1, [fp, #-40]	; 0xffffffd8
   6387c:	add	r0, r0, r1, lsl #2
   63880:	mvn	r1, #0
   63884:	str	r1, [r0]
   63888:	ldr	r0, [fp, #-40]	; 0xffffffd8
   6388c:	add	r0, r0, #1
   63890:	str	r0, [fp, #-40]	; 0xffffffd8
   63894:	b	6385c <__assert_fail@plt+0x50ca4>
   63898:	ldr	r0, [fp, #-8]
   6389c:	ldrsb	r0, [r0, #75]	; 0x4b
   638a0:	cmp	r0, #0
   638a4:	beq	638c4 <__assert_fail@plt+0x50d0c>
   638a8:	ldr	r0, [fp, #-8]
   638ac:	ldr	r0, [r0, #4]
   638b0:	ldr	r1, [fp, #-8]
   638b4:	ldr	r2, [r1, #28]
   638b8:	movw	r1, #255	; 0xff
   638bc:	and	r1, r1, #255	; 0xff
   638c0:	bl	12900 <memset@plt>
   638c4:	b	638c8 <__assert_fail@plt+0x50d10>
   638c8:	ldr	r0, [fp, #-8]
   638cc:	ldr	r0, [r0, #28]
   638d0:	ldr	r1, [fp, #-8]
   638d4:	str	r0, [r1, #32]
   638d8:	b	639a8 <__assert_fail@plt+0x50df0>
   638dc:	ldr	r0, [fp, #-8]
   638e0:	ldr	r0, [r0]
   638e4:	ldr	r1, [fp, #-8]
   638e8:	ldr	r1, [r1, #24]
   638ec:	ldr	r2, [fp, #-20]	; 0xffffffec
   638f0:	add	r1, r1, r2
   638f4:	sub	r1, r1, #1
   638f8:	add	r0, r0, r1
   638fc:	ldrb	r0, [r0]
   63900:	str	r0, [sp, #32]
   63904:	ldr	r0, [fp, #-8]
   63908:	movw	r1, #0
   6390c:	str	r1, [r0, #32]
   63910:	ldr	r0, [fp, #-8]
   63914:	ldr	r0, [r0, #64]	; 0x40
   63918:	cmp	r0, r1
   6391c:	beq	63938 <__assert_fail@plt+0x50d80>
   63920:	ldr	r0, [fp, #-8]
   63924:	ldr	r0, [r0, #64]	; 0x40
   63928:	ldr	r1, [sp, #32]
   6392c:	add	r0, r0, r1
   63930:	ldrb	r0, [r0]
   63934:	str	r0, [sp, #32]
   63938:	ldr	r0, [fp, #-8]
   6393c:	ldr	r0, [r0, #68]	; 0x44
   63940:	ldr	r1, [sp, #32]
   63944:	bl	64d08 <__assert_fail@plt+0x52150>
   63948:	tst	r0, #1
   6394c:	beq	6395c <__assert_fail@plt+0x50da4>
   63950:	movw	r0, #1
   63954:	str	r0, [sp, #4]
   63958:	b	6399c <__assert_fail@plt+0x50de4>
   6395c:	ldr	r0, [sp, #32]
   63960:	cmp	r0, #10
   63964:	movw	r0, #0
   63968:	str	r0, [sp]
   6396c:	bne	63988 <__assert_fail@plt+0x50dd0>
   63970:	ldr	r0, [fp, #-8]
   63974:	ldrb	r0, [r0, #77]	; 0x4d
   63978:	cmp	r0, #0
   6397c:	movw	r0, #0
   63980:	movne	r0, #1
   63984:	str	r0, [sp]
   63988:	ldr	r0, [sp]
   6398c:	tst	r0, #1
   63990:	movw	r0, #2
   63994:	moveq	r0, #0
   63998:	str	r0, [sp, #4]
   6399c:	ldr	r0, [sp, #4]
   639a0:	ldr	r1, [fp, #-8]
   639a4:	str	r0, [r1, #60]	; 0x3c
   639a8:	b	639ac <__assert_fail@plt+0x50df4>
   639ac:	ldr	r0, [fp, #-8]
   639b0:	ldrb	r0, [r0, #75]	; 0x4b
   639b4:	cmp	r0, #0
   639b8:	bne	639d0 <__assert_fail@plt+0x50e18>
   639bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   639c0:	ldr	r1, [fp, #-8]
   639c4:	ldr	r2, [r1, #4]
   639c8:	add	r0, r2, r0
   639cc:	str	r0, [r1, #4]
   639d0:	b	639d4 <__assert_fail@plt+0x50e1c>
   639d4:	ldr	r0, [fp, #-12]
   639d8:	ldr	r1, [fp, #-8]
   639dc:	str	r0, [r1, #24]
   639e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   639e4:	ldr	r1, [fp, #-8]
   639e8:	ldr	r2, [r1, #48]	; 0x30
   639ec:	sub	r0, r2, r0
   639f0:	str	r0, [r1, #48]	; 0x30
   639f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   639f8:	ldr	r1, [fp, #-8]
   639fc:	ldr	r2, [r1, #56]	; 0x38
   63a00:	sub	r0, r2, r0
   63a04:	str	r0, [r1, #56]	; 0x38
   63a08:	ldr	r0, [fp, #-8]
   63a0c:	ldr	r0, [r0, #80]	; 0x50
   63a10:	cmp	r0, #1
   63a14:	ble	63a5c <__assert_fail@plt+0x50ea4>
   63a18:	ldr	r0, [fp, #-8]
   63a1c:	ldrsb	r0, [r0, #72]	; 0x48
   63a20:	cmp	r0, #0
   63a24:	beq	63a50 <__assert_fail@plt+0x50e98>
   63a28:	ldr	r0, [fp, #-8]
   63a2c:	bl	5923c <__assert_fail@plt+0x46684>
   63a30:	str	r0, [sp, #28]
   63a34:	ldr	r0, [sp, #28]
   63a38:	cmp	r0, #0
   63a3c:	beq	63a4c <__assert_fail@plt+0x50e94>
   63a40:	ldr	r0, [sp, #28]
   63a44:	str	r0, [fp, #-4]
   63a48:	b	63ad0 <__assert_fail@plt+0x50f18>
   63a4c:	b	63a58 <__assert_fail@plt+0x50ea0>
   63a50:	ldr	r0, [fp, #-8]
   63a54:	bl	59de8 <__assert_fail@plt+0x47230>
   63a58:	b	63ac0 <__assert_fail@plt+0x50f08>
   63a5c:	ldr	r0, [fp, #-8]
   63a60:	ldrb	r0, [r0, #75]	; 0x4b
   63a64:	cmp	r0, #0
   63a68:	beq	63aac <__assert_fail@plt+0x50ef4>
   63a6c:	ldr	r0, [fp, #-8]
   63a70:	ldrsb	r0, [r0, #72]	; 0x48
   63a74:	cmp	r0, #0
   63a78:	beq	63a88 <__assert_fail@plt+0x50ed0>
   63a7c:	ldr	r0, [fp, #-8]
   63a80:	bl	59ce4 <__assert_fail@plt+0x4712c>
   63a84:	b	63aa8 <__assert_fail@plt+0x50ef0>
   63a88:	ldr	r0, [fp, #-8]
   63a8c:	ldr	r0, [r0, #64]	; 0x40
   63a90:	movw	r1, #0
   63a94:	cmp	r0, r1
   63a98:	beq	63aa4 <__assert_fail@plt+0x50eec>
   63a9c:	ldr	r0, [fp, #-8]
   63aa0:	bl	5a128 <__assert_fail@plt+0x47570>
   63aa4:	b	63aa8 <__assert_fail@plt+0x50ef0>
   63aa8:	b	63abc <__assert_fail@plt+0x50f04>
   63aac:	ldr	r0, [fp, #-8]
   63ab0:	ldr	r0, [r0, #48]	; 0x30
   63ab4:	ldr	r1, [fp, #-8]
   63ab8:	str	r0, [r1, #28]
   63abc:	b	63ac0 <__assert_fail@plt+0x50f08>
   63ac0:	ldr	r0, [fp, #-8]
   63ac4:	movw	r1, #0
   63ac8:	str	r1, [r0, #40]	; 0x28
   63acc:	str	r1, [fp, #-4]
   63ad0:	ldr	r0, [fp, #-4]
   63ad4:	mov	sp, fp
   63ad8:	pop	{fp, pc}
   63adc:	push	{fp, lr}
   63ae0:	mov	fp, sp
   63ae4:	sub	sp, sp, #80	; 0x50
   63ae8:	str	r0, [fp, #-32]	; 0xffffffe0
   63aec:	and	r0, r1, #1
   63af0:	strb	r0, [fp, #-33]	; 0xffffffdf
   63af4:	str	r2, [sp, #40]	; 0x28
   63af8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   63afc:	ldr	r0, [r0, #84]	; 0x54
   63b00:	str	r0, [sp, #36]	; 0x24
   63b04:	mov	r0, #0
   63b08:	str	r0, [sp, #28]
   63b0c:	mvn	r1, #0
   63b10:	str	r1, [sp, #24]
   63b14:	ldr	r1, [fp, #-32]	; 0xffffffe0
   63b18:	ldr	r1, [r1, #40]	; 0x28
   63b1c:	str	r1, [sp, #20]
   63b20:	ldr	r1, [sp, #40]	; 0x28
   63b24:	cmp	r1, #0
   63b28:	movwne	r1, #1
   63b2c:	strb	r1, [sp, #15]
   63b30:	ldr	r1, [sp, #20]
   63b34:	str	r1, [sp, #8]
   63b38:	str	r0, [sp, #32]
   63b3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   63b40:	ldr	r1, [sp, #20]
   63b44:	add	r2, sp, #32
   63b48:	str	r2, [fp, #-8]
   63b4c:	str	r0, [fp, #-12]
   63b50:	str	r1, [fp, #-16]
   63b54:	ldr	r0, [fp, #-12]
   63b58:	ldr	r0, [r0, #84]	; 0x54
   63b5c:	str	r0, [fp, #-20]	; 0xffffffec
   63b60:	ldr	r0, [fp, #-20]	; 0xffffffec
   63b64:	ldr	r0, [r0, #36]	; 0x24
   63b68:	ldrb	r0, [r0, #52]	; 0x34
   63b6c:	lsr	r0, r0, #7
   63b70:	and	r0, r0, #255	; 0xff
   63b74:	cmp	r0, #0
   63b78:	beq	63c68 <__assert_fail@plt+0x510b0>
   63b7c:	ldr	r0, [fp, #-12]
   63b80:	ldr	r1, [fp, #-16]
   63b84:	sub	r1, r1, #1
   63b88:	ldr	r2, [fp, #-12]
   63b8c:	ldr	r2, [r2, #88]	; 0x58
   63b90:	bl	64998 <__assert_fail@plt+0x51de0>
   63b94:	str	r0, [fp, #-24]	; 0xffffffe8
   63b98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   63b9c:	and	r0, r0, #1
   63ba0:	cmp	r0, #0
   63ba4:	beq	63bb8 <__assert_fail@plt+0x51000>
   63ba8:	ldr	r0, [fp, #-20]	; 0xffffffec
   63bac:	ldr	r0, [r0, #40]	; 0x28
   63bb0:	str	r0, [fp, #-4]
   63bb4:	b	63c74 <__assert_fail@plt+0x510bc>
   63bb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   63bbc:	cmp	r0, #0
   63bc0:	bne	63bd4 <__assert_fail@plt+0x5101c>
   63bc4:	ldr	r0, [fp, #-20]	; 0xffffffec
   63bc8:	ldr	r0, [r0, #36]	; 0x24
   63bcc:	str	r0, [fp, #-4]
   63bd0:	b	63c74 <__assert_fail@plt+0x510bc>
   63bd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   63bd8:	and	r0, r0, #4
   63bdc:	cmp	r0, #0
   63be0:	beq	63c04 <__assert_fail@plt+0x5104c>
   63be4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   63be8:	and	r0, r0, #2
   63bec:	cmp	r0, #0
   63bf0:	beq	63c04 <__assert_fail@plt+0x5104c>
   63bf4:	ldr	r0, [fp, #-20]	; 0xffffffec
   63bf8:	ldr	r0, [r0, #48]	; 0x30
   63bfc:	str	r0, [fp, #-4]
   63c00:	b	63c74 <__assert_fail@plt+0x510bc>
   63c04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   63c08:	and	r0, r0, #2
   63c0c:	cmp	r0, #0
   63c10:	beq	63c24 <__assert_fail@plt+0x5106c>
   63c14:	ldr	r0, [fp, #-20]	; 0xffffffec
   63c18:	ldr	r0, [r0, #44]	; 0x2c
   63c1c:	str	r0, [fp, #-4]
   63c20:	b	63c74 <__assert_fail@plt+0x510bc>
   63c24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   63c28:	and	r0, r0, #4
   63c2c:	cmp	r0, #0
   63c30:	beq	63c58 <__assert_fail@plt+0x510a0>
   63c34:	ldr	r0, [fp, #-8]
   63c38:	ldr	r1, [fp, #-20]	; 0xffffffec
   63c3c:	ldr	r2, [fp, #-20]	; 0xffffffec
   63c40:	ldr	r2, [r2, #36]	; 0x24
   63c44:	ldr	r2, [r2, #40]	; 0x28
   63c48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   63c4c:	bl	6215c <__assert_fail@plt+0x4f5a4>
   63c50:	str	r0, [fp, #-4]
   63c54:	b	63c74 <__assert_fail@plt+0x510bc>
   63c58:	ldr	r0, [fp, #-20]	; 0xffffffec
   63c5c:	ldr	r0, [r0, #36]	; 0x24
   63c60:	str	r0, [fp, #-4]
   63c64:	b	63c74 <__assert_fail@plt+0x510bc>
   63c68:	ldr	r0, [fp, #-20]	; 0xffffffec
   63c6c:	ldr	r0, [r0, #36]	; 0x24
   63c70:	str	r0, [fp, #-4]
   63c74:	ldr	r0, [fp, #-4]
   63c78:	str	r0, [sp, #16]
   63c7c:	ldr	r0, [sp, #16]
   63c80:	movw	r1, #0
   63c84:	cmp	r0, r1
   63c88:	bne	63ca8 <__assert_fail@plt+0x510f0>
   63c8c:	ldr	r0, [sp, #32]
   63c90:	cmp	r0, #12
   63c94:	bne	63c9c <__assert_fail@plt+0x510e4>
   63c98:	b	63c9c <__assert_fail@plt+0x510e4>
   63c9c:	mvn	r0, #1
   63ca0:	str	r0, [fp, #-28]	; 0xffffffe4
   63ca4:	b	6405c <__assert_fail@plt+0x514a4>
   63ca8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   63cac:	ldr	r0, [r0, #100]	; 0x64
   63cb0:	movw	r1, #0
   63cb4:	cmp	r0, r1
   63cb8:	beq	63d6c <__assert_fail@plt+0x511b4>
   63cbc:	ldr	r0, [sp, #16]
   63cc0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   63cc4:	ldr	r1, [r1, #100]	; 0x64
   63cc8:	ldr	r2, [sp, #20]
   63ccc:	add	r1, r1, r2, lsl #2
   63cd0:	str	r0, [r1]
   63cd4:	ldr	r0, [sp, #36]	; 0x24
   63cd8:	ldr	r0, [r0, #76]	; 0x4c
   63cdc:	cmp	r0, #0
   63ce0:	beq	63d68 <__assert_fail@plt+0x511b0>
   63ce4:	movw	r0, #0
   63ce8:	strb	r0, [sp, #15]
   63cec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   63cf0:	ldr	r1, [sp, #16]
   63cf4:	add	r1, r1, #4
   63cf8:	movw	r2, #0
   63cfc:	bl	64d54 <__assert_fail@plt+0x5219c>
   63d00:	str	r0, [sp, #32]
   63d04:	ldr	r0, [sp, #32]
   63d08:	cmp	r0, #0
   63d0c:	beq	63d1c <__assert_fail@plt+0x51164>
   63d10:	ldr	r0, [sp, #32]
   63d14:	str	r0, [fp, #-28]	; 0xffffffe4
   63d18:	b	6405c <__assert_fail@plt+0x514a4>
   63d1c:	ldr	r0, [sp, #16]
   63d20:	ldrb	r0, [r0, #52]	; 0x34
   63d24:	ubfx	r0, r0, #6, #1
   63d28:	and	r0, r0, #255	; 0xff
   63d2c:	cmp	r0, #0
   63d30:	beq	63d64 <__assert_fail@plt+0x511ac>
   63d34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   63d38:	ldr	r1, [sp, #16]
   63d3c:	add	r1, r1, #4
   63d40:	bl	64e68 <__assert_fail@plt+0x522b0>
   63d44:	str	r0, [sp, #32]
   63d48:	ldr	r0, [sp, #32]
   63d4c:	cmp	r0, #0
   63d50:	beq	63d60 <__assert_fail@plt+0x511a8>
   63d54:	ldr	r0, [sp, #32]
   63d58:	str	r0, [fp, #-28]	; 0xffffffe4
   63d5c:	b	6405c <__assert_fail@plt+0x514a4>
   63d60:	b	63d64 <__assert_fail@plt+0x511ac>
   63d64:	b	63d68 <__assert_fail@plt+0x511b0>
   63d68:	b	63d6c <__assert_fail@plt+0x511b4>
   63d6c:	ldr	r0, [sp, #16]
   63d70:	ldrb	r0, [r0, #52]	; 0x34
   63d74:	ubfx	r0, r0, #4, #1
   63d78:	and	r0, r0, #255	; 0xff
   63d7c:	cmp	r0, #0
   63d80:	beq	63de4 <__assert_fail@plt+0x5122c>
   63d84:	ldr	r0, [sp, #16]
   63d88:	ldrb	r0, [r0, #52]	; 0x34
   63d8c:	lsr	r0, r0, #7
   63d90:	and	r0, r0, #255	; 0xff
   63d94:	cmp	r0, #0
   63d98:	beq	63db4 <__assert_fail@plt+0x511fc>
   63d9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   63da0:	ldr	r1, [sp, #16]
   63da4:	ldr	r2, [sp, #20]
   63da8:	bl	64068 <__assert_fail@plt+0x514b0>
   63dac:	cmp	r0, #0
   63db0:	beq	63de0 <__assert_fail@plt+0x51228>
   63db4:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   63db8:	tst	r0, #1
   63dbc:	bne	63dcc <__assert_fail@plt+0x51214>
   63dc0:	ldr	r0, [sp, #20]
   63dc4:	str	r0, [fp, #-28]	; 0xffffffe4
   63dc8:	b	6405c <__assert_fail@plt+0x514a4>
   63dcc:	ldr	r0, [sp, #20]
   63dd0:	str	r0, [sp, #24]
   63dd4:	movw	r0, #1
   63dd8:	str	r0, [sp, #28]
   63ddc:	b	63de0 <__assert_fail@plt+0x51228>
   63de0:	b	63de4 <__assert_fail@plt+0x5122c>
   63de4:	b	63de8 <__assert_fail@plt+0x51230>
   63de8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   63dec:	ldr	r0, [r0, #56]	; 0x38
   63df0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   63df4:	ldr	r1, [r1, #40]	; 0x28
   63df8:	cmp	r0, r1
   63dfc:	movw	r0, #0
   63e00:	movle	r0, #1
   63e04:	mvn	r1, #0
   63e08:	eor	r0, r0, r1
   63e0c:	tst	r0, #1
   63e10:	beq	64030 <__assert_fail@plt+0x51478>
   63e14:	ldr	r0, [sp, #16]
   63e18:	str	r0, [sp, #4]
   63e1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   63e20:	ldr	r0, [r0, #40]	; 0x28
   63e24:	add	r0, r0, #1
   63e28:	str	r0, [sp]
   63e2c:	ldr	r0, [sp]
   63e30:	ldr	r1, [fp, #-32]	; 0xffffffe0
   63e34:	ldr	r1, [r1, #36]	; 0x24
   63e38:	cmp	r0, r1
   63e3c:	blt	63e58 <__assert_fail@plt+0x512a0>
   63e40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   63e44:	ldr	r0, [r0, #36]	; 0x24
   63e48:	ldr	r1, [fp, #-32]	; 0xffffffe0
   63e4c:	ldr	r1, [r1, #48]	; 0x30
   63e50:	cmp	r0, r1
   63e54:	blt	63e84 <__assert_fail@plt+0x512cc>
   63e58:	ldr	r0, [sp]
   63e5c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   63e60:	ldr	r1, [r1, #28]
   63e64:	cmp	r0, r1
   63e68:	blt	63ec4 <__assert_fail@plt+0x5130c>
   63e6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   63e70:	ldr	r0, [r0, #28]
   63e74:	ldr	r1, [fp, #-32]	; 0xffffffe0
   63e78:	ldr	r1, [r1, #48]	; 0x30
   63e7c:	cmp	r0, r1
   63e80:	bge	63ec4 <__assert_fail@plt+0x5130c>
   63e84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   63e88:	ldr	r1, [sp]
   63e8c:	add	r1, r1, #1
   63e90:	bl	653a4 <__assert_fail@plt+0x527ec>
   63e94:	str	r0, [sp, #32]
   63e98:	ldr	r0, [sp, #32]
   63e9c:	cmp	r0, #0
   63ea0:	beq	63ec0 <__assert_fail@plt+0x51308>
   63ea4:	ldr	r0, [sp, #32]
   63ea8:	cmp	r0, #12
   63eac:	bne	63eb4 <__assert_fail@plt+0x512fc>
   63eb0:	b	63eb4 <__assert_fail@plt+0x512fc>
   63eb4:	mvn	r0, #1
   63eb8:	str	r0, [fp, #-28]	; 0xffffffe4
   63ebc:	b	6405c <__assert_fail@plt+0x514a4>
   63ec0:	b	63ec4 <__assert_fail@plt+0x5130c>
   63ec4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   63ec8:	ldr	r2, [sp, #16]
   63ecc:	add	r0, sp, #32
   63ed0:	bl	655bc <__assert_fail@plt+0x52a04>
   63ed4:	str	r0, [sp, #16]
   63ed8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   63edc:	ldr	r0, [r0, #100]	; 0x64
   63ee0:	movw	r1, #0
   63ee4:	cmp	r0, r1
   63ee8:	beq	63f00 <__assert_fail@plt+0x51348>
   63eec:	ldr	r1, [fp, #-32]	; 0xffffffe0
   63ef0:	ldr	r2, [sp, #16]
   63ef4:	add	r0, sp, #32
   63ef8:	bl	65740 <__assert_fail@plt+0x52b88>
   63efc:	str	r0, [sp, #16]
   63f00:	ldr	r0, [sp, #16]
   63f04:	movw	r1, #0
   63f08:	cmp	r0, r1
   63f0c:	bne	63f78 <__assert_fail@plt+0x513c0>
   63f10:	ldr	r0, [sp, #32]
   63f14:	cmp	r0, #0
   63f18:	beq	63f28 <__assert_fail@plt+0x51370>
   63f1c:	mvn	r0, #1
   63f20:	str	r0, [fp, #-28]	; 0xffffffe4
   63f24:	b	6405c <__assert_fail@plt+0x514a4>
   63f28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   63f2c:	ldr	r0, [r0, #100]	; 0x64
   63f30:	movw	r1, #0
   63f34:	cmp	r0, r1
   63f38:	beq	63f70 <__assert_fail@plt+0x513b8>
   63f3c:	ldr	r0, [sp, #28]
   63f40:	cmp	r0, #0
   63f44:	beq	63f54 <__assert_fail@plt+0x5139c>
   63f48:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   63f4c:	tst	r0, #1
   63f50:	beq	63f70 <__assert_fail@plt+0x513b8>
   63f54:	ldr	r1, [fp, #-32]	; 0xffffffe0
   63f58:	add	r0, sp, #32
   63f5c:	bl	659bc <__assert_fail@plt+0x52e04>
   63f60:	str	r0, [sp, #16]
   63f64:	movw	r1, #0
   63f68:	cmp	r0, r1
   63f6c:	bne	63f74 <__assert_fail@plt+0x513bc>
   63f70:	b	64030 <__assert_fail@plt+0x51478>
   63f74:	b	63f78 <__assert_fail@plt+0x513c0>
   63f78:	ldrb	r0, [sp, #15]
   63f7c:	tst	r0, #1
   63f80:	beq	63fac <__assert_fail@plt+0x513f4>
   63f84:	ldr	r0, [sp, #4]
   63f88:	ldr	r1, [sp, #16]
   63f8c:	cmp	r0, r1
   63f90:	bne	63fa0 <__assert_fail@plt+0x513e8>
   63f94:	ldr	r0, [sp]
   63f98:	str	r0, [sp, #8]
   63f9c:	b	63fa8 <__assert_fail@plt+0x513f0>
   63fa0:	movw	r0, #0
   63fa4:	strb	r0, [sp, #15]
   63fa8:	b	63fac <__assert_fail@plt+0x513f4>
   63fac:	ldr	r0, [sp, #16]
   63fb0:	ldrb	r0, [r0, #52]	; 0x34
   63fb4:	ubfx	r0, r0, #4, #1
   63fb8:	and	r0, r0, #255	; 0xff
   63fbc:	cmp	r0, #0
   63fc0:	beq	6402c <__assert_fail@plt+0x51474>
   63fc4:	ldr	r0, [sp, #16]
   63fc8:	ldrb	r0, [r0, #52]	; 0x34
   63fcc:	lsr	r0, r0, #7
   63fd0:	and	r0, r0, #255	; 0xff
   63fd4:	cmp	r0, #0
   63fd8:	beq	63ff8 <__assert_fail@plt+0x51440>
   63fdc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   63fe0:	ldr	r1, [sp, #16]
   63fe4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   63fe8:	ldr	r2, [r2, #40]	; 0x28
   63fec:	bl	64068 <__assert_fail@plt+0x514b0>
   63ff0:	cmp	r0, #0
   63ff4:	beq	64028 <__assert_fail@plt+0x51470>
   63ff8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   63ffc:	ldr	r0, [r0, #40]	; 0x28
   64000:	str	r0, [sp, #24]
   64004:	movw	r0, #1
   64008:	str	r0, [sp, #28]
   6400c:	movw	r0, #0
   64010:	str	r0, [sp, #40]	; 0x28
   64014:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   64018:	tst	r0, #1
   6401c:	bne	64024 <__assert_fail@plt+0x5146c>
   64020:	b	64030 <__assert_fail@plt+0x51478>
   64024:	b	64028 <__assert_fail@plt+0x51470>
   64028:	b	6402c <__assert_fail@plt+0x51474>
   6402c:	b	63de8 <__assert_fail@plt+0x51230>
   64030:	ldr	r0, [sp, #40]	; 0x28
   64034:	movw	r1, #0
   64038:	cmp	r0, r1
   6403c:	beq	64054 <__assert_fail@plt+0x5149c>
   64040:	ldr	r0, [sp, #8]
   64044:	ldr	r1, [sp, #40]	; 0x28
   64048:	ldr	r2, [r1]
   6404c:	add	r0, r2, r0
   64050:	str	r0, [r1]
   64054:	ldr	r0, [sp, #24]
   64058:	str	r0, [fp, #-28]	; 0xffffffe4
   6405c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   64060:	mov	sp, fp
   64064:	pop	{fp, pc}
   64068:	push	{fp, lr}
   6406c:	mov	fp, sp
   64070:	sub	sp, sp, #24
   64074:	str	r0, [fp, #-8]
   64078:	str	r1, [sp, #12]
   6407c:	str	r2, [sp, #8]
   64080:	ldr	r0, [sp, #12]
   64084:	ldrb	r0, [r0, #52]	; 0x34
   64088:	ubfx	r0, r0, #4, #1
   6408c:	and	r0, r0, #255	; 0xff
   64090:	cmp	r0, #0
   64094:	beq	6409c <__assert_fail@plt+0x514e4>
   64098:	b	6409c <__assert_fail@plt+0x514e4>
   6409c:	ldr	r0, [fp, #-8]
   640a0:	ldr	r1, [sp, #8]
   640a4:	ldr	r2, [fp, #-8]
   640a8:	ldr	r2, [r2, #88]	; 0x58
   640ac:	bl	64998 <__assert_fail@plt+0x51de0>
   640b0:	str	r0, [sp]
   640b4:	movw	r0, #0
   640b8:	str	r0, [sp, #4]
   640bc:	ldr	r0, [sp, #4]
   640c0:	ldr	r1, [sp, #12]
   640c4:	ldr	r1, [r1, #8]
   640c8:	cmp	r0, r1
   640cc:	bge	6412c <__assert_fail@plt+0x51574>
   640d0:	ldr	r0, [fp, #-8]
   640d4:	ldr	r0, [r0, #84]	; 0x54
   640d8:	ldr	r1, [sp, #12]
   640dc:	ldr	r1, [r1, #12]
   640e0:	ldr	r2, [sp, #4]
   640e4:	add	r1, r1, r2, lsl #2
   640e8:	ldr	r1, [r1]
   640ec:	ldr	r2, [sp]
   640f0:	bl	69e40 <__assert_fail@plt+0x57288>
   640f4:	tst	r0, #1
   640f8:	beq	64118 <__assert_fail@plt+0x51560>
   640fc:	ldr	r0, [sp, #12]
   64100:	ldr	r0, [r0, #12]
   64104:	ldr	r1, [sp, #4]
   64108:	add	r0, r0, r1, lsl #2
   6410c:	ldr	r0, [r0]
   64110:	str	r0, [fp, #-4]
   64114:	b	64134 <__assert_fail@plt+0x5157c>
   64118:	b	6411c <__assert_fail@plt+0x51564>
   6411c:	ldr	r0, [sp, #4]
   64120:	add	r0, r0, #1
   64124:	str	r0, [sp, #4]
   64128:	b	640bc <__assert_fail@plt+0x51504>
   6412c:	movw	r0, #0
   64130:	str	r0, [fp, #-4]
   64134:	ldr	r0, [fp, #-4]
   64138:	mov	sp, fp
   6413c:	pop	{fp, pc}
   64140:	push	{fp, lr}
   64144:	mov	fp, sp
   64148:	sub	sp, sp, #80	; 0x50
   6414c:	str	r0, [fp, #-8]
   64150:	ldr	r0, [fp, #-8]
   64154:	ldr	r0, [r0, #84]	; 0x54
   64158:	str	r0, [fp, #-12]
   6415c:	movw	r0, #0
   64160:	str	r0, [fp, #-32]	; 0xffffffe0
   64164:	ldr	r1, [fp, #-8]
   64168:	ldr	r1, [r1, #100]	; 0x64
   6416c:	cmp	r1, r0
   64170:	beq	64178 <__assert_fail@plt+0x515c0>
   64174:	b	64178 <__assert_fail@plt+0x515c0>
   64178:	ldr	r0, [pc, #776]	; 64488 <__assert_fail@plt+0x518d0>
   6417c:	ldr	r1, [fp, #-8]
   64180:	ldr	r1, [r1, #92]	; 0x5c
   64184:	str	r1, [fp, #-20]	; 0xffffffec
   64188:	ldr	r1, [fp, #-8]
   6418c:	ldr	r1, [r1, #96]	; 0x60
   64190:	str	r1, [fp, #-16]
   64194:	ldr	r1, [fp, #-20]	; 0xffffffec
   64198:	cmp	r0, r1
   6419c:	bhi	641ac <__assert_fail@plt+0x515f4>
   641a0:	movw	r0, #12
   641a4:	str	r0, [fp, #-4]
   641a8:	b	6447c <__assert_fail@plt+0x518c4>
   641ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   641b0:	add	r0, r0, #1
   641b4:	lsl	r0, r0, #2
   641b8:	bl	527f0 <__assert_fail@plt+0x3fc38>
   641bc:	str	r0, [fp, #-28]	; 0xffffffe4
   641c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   641c4:	movw	r1, #0
   641c8:	cmp	r0, r1
   641cc:	bne	641dc <__assert_fail@plt+0x51624>
   641d0:	movw	r0, #12
   641d4:	str	r0, [fp, #-24]	; 0xffffffe8
   641d8:	b	64464 <__assert_fail@plt+0x518ac>
   641dc:	ldr	r0, [fp, #-12]
   641e0:	ldr	r0, [r0, #76]	; 0x4c
   641e4:	cmp	r0, #0
   641e8:	beq	643b4 <__assert_fail@plt+0x517fc>
   641ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   641f0:	add	r0, r0, #1
   641f4:	lsl	r0, r0, #2
   641f8:	bl	527f0 <__assert_fail@plt+0x3fc38>
   641fc:	str	r0, [fp, #-32]	; 0xffffffe0
   64200:	ldr	r0, [fp, #-32]	; 0xffffffe0
   64204:	movw	r1, #0
   64208:	cmp	r0, r1
   6420c:	bne	6421c <__assert_fail@plt+0x51664>
   64210:	movw	r0, #12
   64214:	str	r0, [fp, #-24]	; 0xffffffe8
   64218:	b	64464 <__assert_fail@plt+0x518ac>
   6421c:	b	64220 <__assert_fail@plt+0x51668>
   64220:	ldr	r0, [fp, #-32]	; 0xffffffe0
   64224:	ldr	r1, [fp, #-20]	; 0xffffffec
   64228:	add	r1, r1, #1
   6422c:	lsl	r2, r1, #2
   64230:	movw	r1, #0
   64234:	and	r1, r1, #255	; 0xff
   64238:	bl	12900 <memset@plt>
   6423c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   64240:	ldr	r2, [fp, #-32]	; 0xffffffe0
   64244:	ldr	r3, [fp, #-16]
   64248:	ldr	r0, [fp, #-20]	; 0xffffffec
   6424c:	add	ip, sp, #20
   64250:	str	r0, [sp, #16]
   64254:	mov	r0, ip
   64258:	ldr	ip, [sp, #16]
   6425c:	str	ip, [sp]
   64260:	bl	69f70 <__assert_fail@plt+0x573b8>
   64264:	ldr	r0, [fp, #-8]
   64268:	add	r1, sp, #20
   6426c:	bl	69fe4 <__assert_fail@plt+0x5742c>
   64270:	str	r0, [fp, #-24]	; 0xffffffe8
   64274:	ldr	r0, [sp, #44]	; 0x2c
   64278:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   6427c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   64280:	cmp	r0, #0
   64284:	beq	6428c <__assert_fail@plt+0x516d4>
   64288:	b	64464 <__assert_fail@plt+0x518ac>
   6428c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   64290:	ldr	r0, [r0]
   64294:	movw	r1, #0
   64298:	cmp	r0, r1
   6429c:	bne	642b4 <__assert_fail@plt+0x516fc>
   642a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   642a4:	ldr	r0, [r0]
   642a8:	movw	r1, #0
   642ac:	cmp	r0, r1
   642b0:	beq	642b8 <__assert_fail@plt+0x51700>
   642b4:	b	64374 <__assert_fail@plt+0x517bc>
   642b8:	b	642bc <__assert_fail@plt+0x51704>
   642bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   642c0:	mvn	r1, #0
   642c4:	add	r0, r0, r1
   642c8:	str	r0, [fp, #-20]	; 0xffffffec
   642cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   642d0:	cmp	r0, #0
   642d4:	bge	642e4 <__assert_fail@plt+0x5172c>
   642d8:	movw	r0, #1
   642dc:	str	r0, [fp, #-24]	; 0xffffffe8
   642e0:	b	64464 <__assert_fail@plt+0x518ac>
   642e4:	b	642e8 <__assert_fail@plt+0x51730>
   642e8:	ldr	r0, [fp, #-8]
   642ec:	ldr	r0, [r0, #100]	; 0x64
   642f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   642f4:	add	r0, r0, r1, lsl #2
   642f8:	ldr	r0, [r0]
   642fc:	movw	r1, #0
   64300:	cmp	r0, r1
   64304:	movw	r0, #1
   64308:	str	r0, [sp, #12]
   6430c:	beq	64344 <__assert_fail@plt+0x5178c>
   64310:	ldr	r0, [fp, #-8]
   64314:	ldr	r0, [r0, #100]	; 0x64
   64318:	ldr	r1, [fp, #-20]	; 0xffffffec
   6431c:	ldr	r0, [r0, r1, lsl #2]
   64320:	ldrb	r0, [r0, #52]	; 0x34
   64324:	ubfx	r0, r0, #4, #1
   64328:	and	r0, r0, #255	; 0xff
   6432c:	cmp	r0, #0
   64330:	movw	r0, #0
   64334:	movne	r0, #1
   64338:	mvn	r1, #0
   6433c:	eor	r0, r0, r1
   64340:	str	r0, [sp, #12]
   64344:	ldr	r0, [sp, #12]
   64348:	tst	r0, #1
   6434c:	bne	642bc <__assert_fail@plt+0x51704>
   64350:	ldr	r0, [fp, #-8]
   64354:	ldr	r1, [r0, #100]	; 0x64
   64358:	ldr	r2, [fp, #-20]	; 0xffffffec
   6435c:	add	r1, r1, r2, lsl #2
   64360:	ldr	r1, [r1]
   64364:	ldr	r2, [fp, #-20]	; 0xffffffec
   64368:	bl	64068 <__assert_fail@plt+0x514b0>
   6436c:	str	r0, [fp, #-16]
   64370:	b	64220 <__assert_fail@plt+0x51668>
   64374:	ldr	r0, [fp, #-12]
   64378:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6437c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   64380:	ldr	r3, [fp, #-20]	; 0xffffffec
   64384:	add	r3, r3, #1
   64388:	bl	6a1dc <__assert_fail@plt+0x57624>
   6438c:	str	r0, [fp, #-24]	; 0xffffffe8
   64390:	ldr	r0, [fp, #-32]	; 0xffffffe0
   64394:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   64398:	movw	r0, #0
   6439c:	str	r0, [fp, #-32]	; 0xffffffe0
   643a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   643a4:	cmp	r0, #0
   643a8:	beq	643b0 <__assert_fail@plt+0x517f8>
   643ac:	b	64464 <__assert_fail@plt+0x518ac>
   643b0:	b	64428 <__assert_fail@plt+0x51870>
   643b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   643b8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   643bc:	ldr	r3, [fp, #-16]
   643c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   643c4:	add	ip, sp, #20
   643c8:	str	r0, [sp, #8]
   643cc:	mov	r0, ip
   643d0:	ldr	ip, [sp, #8]
   643d4:	str	ip, [sp]
   643d8:	bl	69f70 <__assert_fail@plt+0x573b8>
   643dc:	ldr	r0, [fp, #-8]
   643e0:	add	r1, sp, #20
   643e4:	bl	69fe4 <__assert_fail@plt+0x5742c>
   643e8:	str	r0, [fp, #-24]	; 0xffffffe8
   643ec:	ldr	r0, [sp, #44]	; 0x2c
   643f0:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   643f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   643f8:	cmp	r0, #0
   643fc:	beq	64404 <__assert_fail@plt+0x5184c>
   64400:	b	64464 <__assert_fail@plt+0x518ac>
   64404:	ldr	r0, [fp, #-28]	; 0xffffffe4
   64408:	ldr	r0, [r0]
   6440c:	movw	r1, #0
   64410:	cmp	r0, r1
   64414:	bne	64424 <__assert_fail@plt+0x5186c>
   64418:	movw	r0, #1
   6441c:	str	r0, [fp, #-24]	; 0xffffffe8
   64420:	b	64464 <__assert_fail@plt+0x518ac>
   64424:	b	64428 <__assert_fail@plt+0x51870>
   64428:	ldr	r0, [fp, #-8]
   6442c:	ldr	r0, [r0, #100]	; 0x64
   64430:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   64434:	ldr	r0, [fp, #-28]	; 0xffffffe4
   64438:	ldr	r1, [fp, #-8]
   6443c:	str	r0, [r1, #100]	; 0x64
   64440:	movw	r0, #0
   64444:	str	r0, [fp, #-28]	; 0xffffffe4
   64448:	ldr	r1, [fp, #-16]
   6444c:	ldr	r2, [fp, #-8]
   64450:	str	r1, [r2, #96]	; 0x60
   64454:	ldr	r1, [fp, #-20]	; 0xffffffec
   64458:	ldr	r2, [fp, #-8]
   6445c:	str	r1, [r2, #92]	; 0x5c
   64460:	str	r0, [fp, #-24]	; 0xffffffe8
   64464:	ldr	r0, [fp, #-28]	; 0xffffffe4
   64468:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   6446c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   64470:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   64474:	ldr	r0, [fp, #-24]	; 0xffffffe8
   64478:	str	r0, [fp, #-4]
   6447c:	ldr	r0, [fp, #-4]
   64480:	mov	sp, fp
   64484:	pop	{fp, pc}
   64488:	svccc	0x00ffffff
   6448c:	push	{fp, lr}
   64490:	mov	fp, sp
   64494:	sub	sp, sp, #24
   64498:	str	r0, [fp, #-4]
   6449c:	movw	r0, #0
   644a0:	str	r0, [fp, #-8]
   644a4:	ldr	r0, [fp, #-8]
   644a8:	ldr	r1, [fp, #-4]
   644ac:	ldr	r1, [r1, #124]	; 0x7c
   644b0:	cmp	r0, r1
   644b4:	bge	6457c <__assert_fail@plt+0x519c4>
   644b8:	ldr	r0, [fp, #-4]
   644bc:	ldr	r0, [r0, #132]	; 0x84
   644c0:	ldr	r1, [fp, #-8]
   644c4:	add	r0, r0, r1, lsl #2
   644c8:	ldr	r0, [r0]
   644cc:	str	r0, [sp, #8]
   644d0:	movw	r0, #0
   644d4:	str	r0, [sp, #12]
   644d8:	ldr	r0, [sp, #12]
   644dc:	ldr	r1, [sp, #8]
   644e0:	ldr	r1, [r1, #16]
   644e4:	cmp	r0, r1
   644e8:	bge	64528 <__assert_fail@plt+0x51970>
   644ec:	ldr	r0, [sp, #8]
   644f0:	ldr	r0, [r0, #20]
   644f4:	ldr	r1, [sp, #12]
   644f8:	add	r0, r0, r1, lsl #2
   644fc:	ldr	r0, [r0]
   64500:	str	r0, [sp, #4]
   64504:	ldr	r0, [sp, #4]
   64508:	ldr	r0, [r0, #16]
   6450c:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   64510:	ldr	r0, [sp, #4]
   64514:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   64518:	ldr	r0, [sp, #12]
   6451c:	add	r0, r0, #1
   64520:	str	r0, [sp, #12]
   64524:	b	644d8 <__assert_fail@plt+0x51920>
   64528:	ldr	r0, [sp, #8]
   6452c:	ldr	r0, [r0, #20]
   64530:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   64534:	ldr	r0, [sp, #8]
   64538:	ldr	r0, [r0, #8]
   6453c:	movw	r1, #0
   64540:	cmp	r0, r1
   64544:	beq	64564 <__assert_fail@plt+0x519ac>
   64548:	ldr	r0, [sp, #8]
   6454c:	ldr	r0, [r0, #8]
   64550:	ldr	r0, [r0, #8]
   64554:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   64558:	ldr	r0, [sp, #8]
   6455c:	ldr	r0, [r0, #8]
   64560:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   64564:	ldr	r0, [sp, #8]
   64568:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   6456c:	ldr	r0, [fp, #-8]
   64570:	add	r0, r0, #1
   64574:	str	r0, [fp, #-8]
   64578:	b	644a4 <__assert_fail@plt+0x518ec>
   6457c:	ldr	r0, [fp, #-4]
   64580:	movw	r1, #0
   64584:	str	r1, [r0, #124]	; 0x7c
   64588:	ldr	r0, [fp, #-4]
   6458c:	str	r1, [r0, #108]	; 0x6c
   64590:	mov	sp, fp
   64594:	pop	{fp, pc}
   64598:	push	{r4, sl, fp, lr}
   6459c:	add	fp, sp, #8
   645a0:	sub	sp, sp, #240	; 0xf0
   645a4:	ldr	ip, [fp, #8]
   645a8:	str	r0, [fp, #-16]
   645ac:	str	r1, [fp, #-20]	; 0xffffffec
   645b0:	str	r2, [fp, #-24]	; 0xffffffe8
   645b4:	str	r3, [fp, #-28]	; 0xffffffe4
   645b8:	and	r0, ip, #1
   645bc:	strb	r0, [fp, #-29]	; 0xffffffe3
   645c0:	ldr	r0, [fp, #-16]
   645c4:	ldr	r0, [r0]
   645c8:	str	r0, [fp, #-36]	; 0xffffffdc
   645cc:	movw	r0, #49964	; 0xc32c
   645d0:	movt	r0, #7
   645d4:	ldr	r1, [r0]
   645d8:	str	r1, [fp, #-72]	; 0xffffffb8
   645dc:	ldr	r1, [r0, #4]
   645e0:	str	r1, [fp, #-68]	; 0xffffffbc
   645e4:	ldr	r0, [r0, #8]
   645e8:	str	r0, [fp, #-64]	; 0xffffffc0
   645ec:	add	r0, sp, #36	; 0x24
   645f0:	bl	6bde8 <__assert_fail@plt+0x59230>
   645f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   645f8:	cmp	r0, #1
   645fc:	bls	64604 <__assert_fail@plt+0x51a4c>
   64600:	b	64604 <__assert_fail@plt+0x51a4c>
   64604:	ldr	r0, [fp, #-20]	; 0xffffffec
   64608:	ldr	r0, [r0, #100]	; 0x64
   6460c:	movw	r1, #0
   64610:	cmp	r0, r1
   64614:	beq	6461c <__assert_fail@plt+0x51a64>
   64618:	b	6461c <__assert_fail@plt+0x51a64>
   6461c:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   64620:	tst	r0, #1
   64624:	beq	64670 <__assert_fail@plt+0x51ab8>
   64628:	sub	r0, fp, #72	; 0x48
   6462c:	str	r0, [fp, #-60]	; 0xffffffc4
   64630:	ldr	r0, [fp, #-60]	; 0xffffffc4
   64634:	ldr	r0, [r0, #4]
   64638:	movw	r1, #24
   6463c:	mul	r0, r0, r1
   64640:	bl	527f0 <__assert_fail@plt+0x3fc38>
   64644:	ldr	r1, [fp, #-60]	; 0xffffffc4
   64648:	str	r0, [r1, #8]
   6464c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   64650:	ldr	r0, [r0, #8]
   64654:	movw	r1, #0
   64658:	cmp	r0, r1
   6465c:	bne	6466c <__assert_fail@plt+0x51ab4>
   64660:	movw	r0, #12
   64664:	str	r0, [fp, #-12]
   64668:	b	64954 <__assert_fail@plt+0x51d9c>
   6466c:	b	64678 <__assert_fail@plt+0x51ac0>
   64670:	movw	r0, #0
   64674:	str	r0, [fp, #-60]	; 0xffffffc4
   64678:	ldr	r0, [fp, #-36]	; 0xffffffdc
   6467c:	ldr	r0, [r0, #72]	; 0x48
   64680:	str	r0, [fp, #-44]	; 0xffffffd4
   64684:	sub	r0, fp, #56	; 0x38
   64688:	movw	r1, #0
   6468c:	and	r1, r1, #255	; 0xff
   64690:	movw	r2, #12
   64694:	bl	12900 <memset@plt>
   64698:	ldr	r1, [fp, #-24]	; 0xffffffe8
   6469c:	add	r0, sp, #36	; 0x24
   646a0:	bl	6be20 <__assert_fail@plt+0x59268>
   646a4:	tst	r0, #1
   646a8:	bne	646c8 <__assert_fail@plt+0x51b10>
   646ac:	add	r0, sp, #36	; 0x24
   646b0:	bl	6bee0 <__assert_fail@plt+0x59328>
   646b4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   646b8:	bl	6bf1c <__assert_fail@plt+0x59364>
   646bc:	movw	r1, #12
   646c0:	str	r1, [fp, #-12]
   646c4:	b	64954 <__assert_fail@plt+0x51d9c>
   646c8:	add	r0, sp, #36	; 0x24
   646cc:	bl	6bfc0 <__assert_fail@plt+0x59408>
   646d0:	str	r0, [sp, #32]
   646d4:	ldr	r0, [sp, #32]
   646d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   646dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   646e0:	lsl	r2, r2, #3
   646e4:	bl	125c4 <memcpy@plt>
   646e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   646ec:	ldr	r0, [r0]
   646f0:	str	r0, [fp, #-40]	; 0xffffffd8
   646f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   646f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   646fc:	ldr	r1, [r1, #4]
   64700:	cmp	r0, r1
   64704:	bgt	64938 <__assert_fail@plt+0x51d80>
   64708:	ldr	r0, [fp, #-36]	; 0xffffffdc
   6470c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   64710:	ldr	r2, [sp, #32]
   64714:	ldr	r3, [fp, #-44]	; 0xffffffd4
   64718:	ldr	ip, [fp, #-40]	; 0xffffffd8
   6471c:	ldr	lr, [fp, #-24]	; 0xffffffe8
   64720:	str	ip, [sp]
   64724:	str	lr, [sp, #4]
   64728:	bl	6bfd8 <__assert_fail@plt+0x59420>
   6472c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   64730:	ldr	r1, [fp, #-28]	; 0xffffffe4
   64734:	ldr	r1, [r1, #4]
   64738:	cmp	r0, r1
   6473c:	bne	64754 <__assert_fail@plt+0x51b9c>
   64740:	ldr	r0, [fp, #-44]	; 0xffffffd4
   64744:	ldr	r1, [fp, #-20]	; 0xffffffec
   64748:	ldr	r1, [r1, #96]	; 0x60
   6474c:	cmp	r0, r1
   64750:	beq	64778 <__assert_fail@plt+0x51bc0>
   64754:	ldr	r0, [fp, #-60]	; 0xffffffc4
   64758:	movw	r1, #0
   6475c:	cmp	r0, r1
   64760:	beq	64858 <__assert_fail@plt+0x51ca0>
   64764:	ldr	r1, [fp, #-44]	; 0xffffffd4
   64768:	sub	r0, fp, #56	; 0x38
   6476c:	bl	6206c <__assert_fail@plt+0x4f4b4>
   64770:	cmp	r0, #0
   64774:	beq	64858 <__assert_fail@plt+0x51ca0>
   64778:	mvn	r0, #0
   6477c:	str	r0, [fp, #-44]	; 0xffffffd4
   64780:	ldr	r0, [fp, #-60]	; 0xffffffc4
   64784:	movw	r1, #0
   64788:	cmp	r0, r1
   6478c:	beq	64828 <__assert_fail@plt+0x51c70>
   64790:	movw	r0, #0
   64794:	str	r0, [sp, #28]
   64798:	ldr	r0, [sp, #28]
   6479c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   647a0:	cmp	r0, r1
   647a4:	bcs	64824 <__assert_fail@plt+0x51c6c>
   647a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   647ac:	ldr	r1, [sp, #28]
   647b0:	add	r0, r0, r1, lsl #3
   647b4:	ldr	r0, [r0]
   647b8:	cmn	r0, #1
   647bc:	ble	64810 <__assert_fail@plt+0x51c58>
   647c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   647c4:	ldr	r1, [sp, #28]
   647c8:	add	r0, r0, r1, lsl #3
   647cc:	ldr	r0, [r0, #4]
   647d0:	cmn	r0, #1
   647d4:	bne	64810 <__assert_fail@plt+0x51c58>
   647d8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   647dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   647e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   647e4:	ldr	r1, [sp, #32]
   647e8:	sub	ip, fp, #40	; 0x28
   647ec:	str	r1, [sp, #24]
   647f0:	mov	r1, ip
   647f4:	ldr	ip, [sp, #24]
   647f8:	str	ip, [sp]
   647fc:	sub	lr, fp, #56	; 0x38
   64800:	str	lr, [sp, #4]
   64804:	bl	6c178 <__assert_fail@plt+0x595c0>
   64808:	str	r0, [fp, #-44]	; 0xffffffd4
   6480c:	b	64824 <__assert_fail@plt+0x51c6c>
   64810:	b	64814 <__assert_fail@plt+0x51c5c>
   64814:	ldr	r0, [sp, #28]
   64818:	add	r0, r0, #1
   6481c:	str	r0, [sp, #28]
   64820:	b	64798 <__assert_fail@plt+0x51be0>
   64824:	b	64828 <__assert_fail@plt+0x51c70>
   64828:	ldr	r0, [fp, #-44]	; 0xffffffd4
   6482c:	cmp	r0, #0
   64830:	bge	64854 <__assert_fail@plt+0x51c9c>
   64834:	ldr	r0, [fp, #-48]	; 0xffffffd0
   64838:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   6483c:	add	r0, sp, #36	; 0x24
   64840:	bl	6bee0 <__assert_fail@plt+0x59328>
   64844:	ldr	r0, [fp, #-60]	; 0xffffffc4
   64848:	bl	6bf1c <__assert_fail@plt+0x59364>
   6484c:	str	r0, [fp, #-12]
   64850:	b	64954 <__assert_fail@plt+0x51d9c>
   64854:	b	64858 <__assert_fail@plt+0x51ca0>
   64858:	ldr	r0, [fp, #-20]	; 0xffffffec
   6485c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   64860:	ldr	r2, [fp, #-28]	; 0xffffffe4
   64864:	ldr	r3, [sp, #32]
   64868:	ldr	ip, [fp, #-44]	; 0xffffffd4
   6486c:	ldr	lr, [fp, #-60]	; 0xffffffc4
   64870:	sub	r4, fp, #40	; 0x28
   64874:	str	r4, [sp]
   64878:	str	ip, [sp, #4]
   6487c:	sub	ip, fp, #56	; 0x38
   64880:	str	ip, [sp, #8]
   64884:	str	lr, [sp, #12]
   64888:	bl	6c310 <__assert_fail@plt+0x59758>
   6488c:	str	r0, [fp, #-44]	; 0xffffffd4
   64890:	ldr	r0, [fp, #-44]	; 0xffffffd4
   64894:	cmp	r0, #0
   64898:	bge	64934 <__assert_fail@plt+0x51d7c>
   6489c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   648a0:	cmn	r0, #2
   648a4:	bne	648cc <__assert_fail@plt+0x51d14>
   648a8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   648ac:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   648b0:	add	r0, sp, #36	; 0x24
   648b4:	bl	6bee0 <__assert_fail@plt+0x59328>
   648b8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   648bc:	bl	6bf1c <__assert_fail@plt+0x59364>
   648c0:	movw	r1, #12
   648c4:	str	r1, [fp, #-12]
   648c8:	b	64954 <__assert_fail@plt+0x51d9c>
   648cc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   648d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   648d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   648d8:	ldr	r1, [sp, #32]
   648dc:	sub	ip, fp, #40	; 0x28
   648e0:	str	r1, [sp, #20]
   648e4:	mov	r1, ip
   648e8:	ldr	ip, [sp, #20]
   648ec:	str	ip, [sp]
   648f0:	sub	lr, fp, #56	; 0x38
   648f4:	str	lr, [sp, #4]
   648f8:	bl	6c178 <__assert_fail@plt+0x595c0>
   648fc:	str	r0, [fp, #-44]	; 0xffffffd4
   64900:	ldr	r0, [fp, #-44]	; 0xffffffd4
   64904:	cmp	r0, #0
   64908:	bge	64930 <__assert_fail@plt+0x51d78>
   6490c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   64910:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   64914:	add	r0, sp, #36	; 0x24
   64918:	bl	6bee0 <__assert_fail@plt+0x59328>
   6491c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   64920:	bl	6bf1c <__assert_fail@plt+0x59364>
   64924:	movw	r1, #1
   64928:	str	r1, [fp, #-12]
   6492c:	b	64954 <__assert_fail@plt+0x51d9c>
   64930:	b	64934 <__assert_fail@plt+0x51d7c>
   64934:	b	646f4 <__assert_fail@plt+0x51b3c>
   64938:	ldr	r0, [fp, #-48]	; 0xffffffd0
   6493c:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   64940:	add	r0, sp, #36	; 0x24
   64944:	bl	6bee0 <__assert_fail@plt+0x59328>
   64948:	ldr	r0, [fp, #-60]	; 0xffffffc4
   6494c:	bl	6bf1c <__assert_fail@plt+0x59364>
   64950:	str	r0, [fp, #-12]
   64954:	ldr	r0, [fp, #-12]
   64958:	sub	sp, fp, #8
   6495c:	pop	{r4, sl, fp, pc}
   64960:	push	{fp, lr}
   64964:	mov	fp, sp
   64968:	sub	sp, sp, #8
   6496c:	str	r0, [sp, #4]
   64970:	ldr	r0, [sp, #4]
   64974:	bl	6448c <__assert_fail@plt+0x518d4>
   64978:	ldr	r0, [sp, #4]
   6497c:	ldr	r0, [r0, #132]	; 0x84
   64980:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   64984:	ldr	r0, [sp, #4]
   64988:	ldr	r0, [r0, #116]	; 0x74
   6498c:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   64990:	mov	sp, fp
   64994:	pop	{fp, pc}
   64998:	push	{fp, lr}
   6499c:	mov	fp, sp
   649a0:	sub	sp, sp, #40	; 0x28
   649a4:	str	r0, [fp, #-8]
   649a8:	str	r1, [fp, #-12]
   649ac:	str	r2, [fp, #-16]
   649b0:	ldr	r0, [fp, #-12]
   649b4:	cmp	r0, #0
   649b8:	bge	649cc <__assert_fail@plt+0x51e14>
   649bc:	ldr	r0, [fp, #-8]
   649c0:	ldr	r0, [r0, #60]	; 0x3c
   649c4:	str	r0, [fp, #-4]
   649c8:	b	64b8c <__assert_fail@plt+0x51fd4>
   649cc:	ldr	r0, [fp, #-12]
   649d0:	ldr	r1, [fp, #-8]
   649d4:	ldr	r1, [r1, #48]	; 0x30
   649d8:	cmp	r0, r1
   649dc:	bne	64a08 <__assert_fail@plt+0x51e50>
   649e0:	ldr	r0, [fp, #-16]
   649e4:	and	r0, r0, #2
   649e8:	cmp	r0, #0
   649ec:	movw	r0, #0
   649f0:	movne	r0, #1
   649f4:	tst	r0, #1
   649f8:	movw	r0, #8
   649fc:	moveq	r0, #10
   64a00:	str	r0, [fp, #-4]
   64a04:	b	64b8c <__assert_fail@plt+0x51fd4>
   64a08:	ldr	r0, [fp, #-8]
   64a0c:	ldr	r0, [r0, #80]	; 0x50
   64a10:	cmp	r0, #1
   64a14:	ble	64b10 <__assert_fail@plt+0x51f58>
   64a18:	ldr	r0, [fp, #-12]
   64a1c:	str	r0, [sp, #12]
   64a20:	ldr	r0, [fp, #-8]
   64a24:	ldr	r0, [r0, #8]
   64a28:	ldr	r1, [sp, #12]
   64a2c:	add	r0, r0, r1, lsl #2
   64a30:	ldr	r0, [r0]
   64a34:	cmn	r0, #1
   64a38:	bne	64a7c <__assert_fail@plt+0x51ec4>
   64a3c:	ldr	r0, [sp, #12]
   64a40:	cmp	r0, #0
   64a44:	blt	64a4c <__assert_fail@plt+0x51e94>
   64a48:	b	64a4c <__assert_fail@plt+0x51e94>
   64a4c:	ldr	r0, [sp, #12]
   64a50:	mvn	r1, #0
   64a54:	add	r0, r0, r1
   64a58:	str	r0, [sp, #12]
   64a5c:	ldr	r0, [sp, #12]
   64a60:	cmp	r0, #0
   64a64:	bge	64a78 <__assert_fail@plt+0x51ec0>
   64a68:	ldr	r0, [fp, #-8]
   64a6c:	ldr	r0, [r0, #60]	; 0x3c
   64a70:	str	r0, [fp, #-4]
   64a74:	b	64b8c <__assert_fail@plt+0x51fd4>
   64a78:	b	64a20 <__assert_fail@plt+0x51e68>
   64a7c:	ldr	r0, [fp, #-8]
   64a80:	ldr	r0, [r0, #8]
   64a84:	ldr	r1, [sp, #12]
   64a88:	add	r0, r0, r1, lsl #2
   64a8c:	ldr	r0, [r0]
   64a90:	str	r0, [sp, #16]
   64a94:	ldr	r0, [fp, #-8]
   64a98:	ldrb	r0, [r0, #78]	; 0x4e
   64a9c:	cmp	r0, #0
   64aa0:	beq	64acc <__assert_fail@plt+0x51f14>
   64aa4:	ldr	r0, [sp, #16]
   64aa8:	bl	128dc <iswalnum@plt>
   64aac:	cmp	r0, #0
   64ab0:	bne	64ac0 <__assert_fail@plt+0x51f08>
   64ab4:	ldr	r0, [sp, #16]
   64ab8:	cmp	r0, #95	; 0x5f
   64abc:	bne	64acc <__assert_fail@plt+0x51f14>
   64ac0:	movw	r0, #1
   64ac4:	str	r0, [fp, #-4]
   64ac8:	b	64b8c <__assert_fail@plt+0x51fd4>
   64acc:	ldr	r0, [sp, #16]
   64ad0:	cmp	r0, #10
   64ad4:	movw	r0, #0
   64ad8:	str	r0, [sp, #8]
   64adc:	bne	64af8 <__assert_fail@plt+0x51f40>
   64ae0:	ldr	r0, [fp, #-8]
   64ae4:	ldrb	r0, [r0, #77]	; 0x4d
   64ae8:	cmp	r0, #0
   64aec:	movw	r0, #0
   64af0:	movne	r0, #1
   64af4:	str	r0, [sp, #8]
   64af8:	ldr	r0, [sp, #8]
   64afc:	tst	r0, #1
   64b00:	movw	r0, #2
   64b04:	moveq	r0, #0
   64b08:	str	r0, [fp, #-4]
   64b0c:	b	64b8c <__assert_fail@plt+0x51fd4>
   64b10:	ldr	r0, [fp, #-8]
   64b14:	ldr	r0, [r0, #4]
   64b18:	ldr	r1, [fp, #-12]
   64b1c:	add	r0, r0, r1
   64b20:	ldrb	r0, [r0]
   64b24:	str	r0, [sp, #20]
   64b28:	ldr	r0, [fp, #-8]
   64b2c:	ldr	r0, [r0, #68]	; 0x44
   64b30:	ldr	r1, [sp, #20]
   64b34:	bl	64d08 <__assert_fail@plt+0x52150>
   64b38:	tst	r0, #1
   64b3c:	beq	64b4c <__assert_fail@plt+0x51f94>
   64b40:	movw	r0, #1
   64b44:	str	r0, [fp, #-4]
   64b48:	b	64b8c <__assert_fail@plt+0x51fd4>
   64b4c:	ldr	r0, [sp, #20]
   64b50:	cmp	r0, #10
   64b54:	movw	r0, #0
   64b58:	str	r0, [sp, #4]
   64b5c:	bne	64b78 <__assert_fail@plt+0x51fc0>
   64b60:	ldr	r0, [fp, #-8]
   64b64:	ldrb	r0, [r0, #77]	; 0x4d
   64b68:	cmp	r0, #0
   64b6c:	movw	r0, #0
   64b70:	movne	r0, #1
   64b74:	str	r0, [sp, #4]
   64b78:	ldr	r0, [sp, #4]
   64b7c:	tst	r0, #1
   64b80:	movw	r0, #2
   64b84:	moveq	r0, #0
   64b88:	str	r0, [fp, #-4]
   64b8c:	ldr	r0, [fp, #-4]
   64b90:	mov	sp, fp
   64b94:	pop	{fp, pc}
   64b98:	push	{fp, lr}
   64b9c:	mov	fp, sp
   64ba0:	sub	sp, sp, #48	; 0x30
   64ba4:	str	r0, [fp, #-4]
   64ba8:	str	r1, [fp, #-8]
   64bac:	str	r2, [fp, #-12]
   64bb0:	mvn	r0, #0
   64bb4:	str	r0, [sp, #16]
   64bb8:	ldr	r0, [fp, #-4]
   64bbc:	ldr	r0, [r0, #24]
   64bc0:	ldr	r1, [fp, #-4]
   64bc4:	ldr	r1, [r1, #32]
   64bc8:	add	r0, r0, r1
   64bcc:	str	r0, [sp, #24]
   64bd0:	ldr	r0, [sp, #24]
   64bd4:	ldr	r1, [fp, #-8]
   64bd8:	cmp	r0, r1
   64bdc:	bge	64cf0 <__assert_fail@plt+0x52138>
   64be0:	ldr	r0, [fp, #-4]
   64be4:	ldr	r0, [r0, #44]	; 0x2c
   64be8:	ldr	r1, [sp, #24]
   64bec:	sub	r0, r0, r1
   64bf0:	str	r0, [sp, #8]
   64bf4:	ldr	r0, [fp, #-4]
   64bf8:	ldr	r1, [r0, #16]
   64bfc:	str	r1, [fp, #-20]	; 0xffffffec
   64c00:	ldr	r0, [r0, #20]
   64c04:	str	r0, [fp, #-16]
   64c08:	ldr	r0, [fp, #-4]
   64c0c:	ldr	r0, [r0]
   64c10:	ldr	r1, [sp, #24]
   64c14:	add	r1, r0, r1
   64c18:	ldr	r2, [sp, #8]
   64c1c:	ldr	r0, [fp, #-4]
   64c20:	add	r3, r0, #16
   64c24:	add	r0, sp, #12
   64c28:	bl	52860 <__assert_fail@plt+0x3fca8>
   64c2c:	str	r0, [sp, #20]
   64c30:	ldr	r0, [sp, #20]
   64c34:	cmn	r0, #2
   64c38:	movw	r0, #1
   64c3c:	str	r0, [sp, #4]
   64c40:	beq	64c6c <__assert_fail@plt+0x520b4>
   64c44:	ldr	r0, [sp, #20]
   64c48:	cmn	r0, #1
   64c4c:	movw	r0, #1
   64c50:	str	r0, [sp, #4]
   64c54:	beq	64c6c <__assert_fail@plt+0x520b4>
   64c58:	ldr	r0, [sp, #20]
   64c5c:	cmp	r0, #0
   64c60:	movw	r0, #0
   64c64:	moveq	r0, #1
   64c68:	str	r0, [sp, #4]
   64c6c:	ldr	r0, [sp, #4]
   64c70:	tst	r0, #1
   64c74:	beq	64cd4 <__assert_fail@plt+0x5211c>
   64c78:	ldr	r0, [sp, #20]
   64c7c:	cmp	r0, #0
   64c80:	beq	64c90 <__assert_fail@plt+0x520d8>
   64c84:	ldr	r0, [sp, #8]
   64c88:	cmp	r0, #0
   64c8c:	bne	64c9c <__assert_fail@plt+0x520e4>
   64c90:	movw	r0, #0
   64c94:	str	r0, [sp, #16]
   64c98:	b	64cb4 <__assert_fail@plt+0x520fc>
   64c9c:	ldr	r0, [fp, #-4]
   64ca0:	ldr	r0, [r0]
   64ca4:	ldr	r1, [sp, #24]
   64ca8:	add	r0, r0, r1
   64cac:	ldrb	r0, [r0]
   64cb0:	str	r0, [sp, #16]
   64cb4:	movw	r0, #1
   64cb8:	str	r0, [sp, #20]
   64cbc:	ldr	r0, [fp, #-4]
   64cc0:	ldr	r1, [fp, #-20]	; 0xffffffec
   64cc4:	str	r1, [r0, #16]
   64cc8:	ldr	r1, [fp, #-16]
   64ccc:	str	r1, [r0, #20]
   64cd0:	b	64cdc <__assert_fail@plt+0x52124>
   64cd4:	ldr	r0, [sp, #12]
   64cd8:	str	r0, [sp, #16]
   64cdc:	ldr	r0, [sp, #20]
   64ce0:	ldr	r1, [sp, #24]
   64ce4:	add	r0, r1, r0
   64ce8:	str	r0, [sp, #24]
   64cec:	b	64bd0 <__assert_fail@plt+0x52018>
   64cf0:	ldr	r0, [sp, #16]
   64cf4:	ldr	r1, [fp, #-12]
   64cf8:	str	r0, [r1]
   64cfc:	ldr	r0, [sp, #24]
   64d00:	mov	sp, fp
   64d04:	pop	{fp, pc}
   64d08:	sub	sp, sp, #8
   64d0c:	str	r0, [sp, #4]
   64d10:	str	r1, [sp]
   64d14:	ldr	r0, [sp, #4]
   64d18:	ldr	r1, [sp]
   64d1c:	asr	r2, r1, #31
   64d20:	add	r2, r1, r2, lsr #27
   64d24:	asr	r3, r2, #5
   64d28:	ldr	r0, [r0, r3, lsl #2]
   64d2c:	bic	r2, r2, #31
   64d30:	sub	r1, r1, r2
   64d34:	lsr	r0, r0, r1
   64d38:	and	r0, r0, #1
   64d3c:	cmp	r0, #0
   64d40:	movw	r0, #0
   64d44:	movne	r0, #1
   64d48:	and	r0, r0, #1
   64d4c:	add	sp, sp, #8
   64d50:	bx	lr
   64d54:	push	{fp, lr}
   64d58:	mov	fp, sp
   64d5c:	sub	sp, sp, #32
   64d60:	str	r0, [fp, #-8]
   64d64:	str	r1, [fp, #-12]
   64d68:	str	r2, [sp, #16]
   64d6c:	ldr	r0, [fp, #-8]
   64d70:	ldr	r0, [r0, #84]	; 0x54
   64d74:	str	r0, [sp, #12]
   64d78:	movw	r0, #0
   64d7c:	str	r0, [sp, #8]
   64d80:	ldr	r0, [sp, #8]
   64d84:	ldr	r1, [fp, #-12]
   64d88:	ldr	r1, [r1, #4]
   64d8c:	cmp	r0, r1
   64d90:	bge	64e54 <__assert_fail@plt+0x5229c>
   64d94:	ldr	r0, [fp, #-12]
   64d98:	ldr	r0, [r0, #8]
   64d9c:	ldr	r1, [sp, #8]
   64da0:	ldr	r0, [r0, r1, lsl #2]
   64da4:	str	r0, [sp]
   64da8:	ldr	r0, [sp, #12]
   64dac:	ldr	r0, [r0]
   64db0:	ldr	r1, [sp]
   64db4:	add	r0, r0, r1, lsl #3
   64db8:	ldr	r0, [r0, #4]
   64dbc:	and	r0, r0, #255	; 0xff
   64dc0:	cmp	r0, #8
   64dc4:	bne	64e40 <__assert_fail@plt+0x52288>
   64dc8:	ldr	r0, [sp, #12]
   64dcc:	ldr	r0, [r0]
   64dd0:	ldr	r1, [sp]
   64dd4:	add	r0, r0, r1, lsl #3
   64dd8:	ldr	r0, [r0]
   64ddc:	cmp	r0, #32
   64de0:	bge	64e40 <__assert_fail@plt+0x52288>
   64de4:	ldr	r0, [sp, #12]
   64de8:	ldr	r1, [r0]
   64dec:	ldr	r0, [r0, #80]	; 0x50
   64df0:	ldr	r2, [sp]
   64df4:	add	r1, r1, r2, lsl #3
   64df8:	ldr	r1, [r1]
   64dfc:	movw	r2, #1
   64e00:	lsl	r1, r2, r1
   64e04:	and	r0, r0, r1
   64e08:	cmp	r0, #0
   64e0c:	beq	64e40 <__assert_fail@plt+0x52288>
   64e10:	ldr	r0, [fp, #-8]
   64e14:	ldr	r1, [sp]
   64e18:	ldr	r2, [sp, #16]
   64e1c:	bl	65aa0 <__assert_fail@plt+0x52ee8>
   64e20:	str	r0, [sp, #4]
   64e24:	ldr	r0, [sp, #4]
   64e28:	cmp	r0, #0
   64e2c:	beq	64e3c <__assert_fail@plt+0x52284>
   64e30:	ldr	r0, [sp, #4]
   64e34:	str	r0, [fp, #-4]
   64e38:	b	64e5c <__assert_fail@plt+0x522a4>
   64e3c:	b	64e40 <__assert_fail@plt+0x52288>
   64e40:	b	64e44 <__assert_fail@plt+0x5228c>
   64e44:	ldr	r0, [sp, #8]
   64e48:	add	r0, r0, #1
   64e4c:	str	r0, [sp, #8]
   64e50:	b	64d80 <__assert_fail@plt+0x521c8>
   64e54:	movw	r0, #0
   64e58:	str	r0, [fp, #-4]
   64e5c:	ldr	r0, [fp, #-4]
   64e60:	mov	sp, fp
   64e64:	pop	{fp, pc}
   64e68:	push	{fp, lr}
   64e6c:	mov	fp, sp
   64e70:	sub	sp, sp, #96	; 0x60
   64e74:	str	r0, [fp, #-4]
   64e78:	str	r1, [fp, #-8]
   64e7c:	ldr	r0, [fp, #-4]
   64e80:	ldr	r0, [r0, #84]	; 0x54
   64e84:	str	r0, [fp, #-12]
   64e88:	ldr	r0, [fp, #-4]
   64e8c:	ldr	r0, [r0, #40]	; 0x28
   64e90:	str	r0, [fp, #-24]	; 0xffffffe8
   64e94:	movw	r0, #0
   64e98:	str	r0, [fp, #-20]	; 0xffffffec
   64e9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   64ea0:	ldr	r1, [fp, #-8]
   64ea4:	ldr	r1, [r1, #4]
   64ea8:	cmp	r0, r1
   64eac:	bge	65390 <__assert_fail@plt+0x527d8>
   64eb0:	ldr	r0, [fp, #-8]
   64eb4:	ldr	r0, [r0, #8]
   64eb8:	ldr	r1, [fp, #-20]	; 0xffffffec
   64ebc:	ldr	r0, [r0, r1, lsl #2]
   64ec0:	str	r0, [fp, #-40]	; 0xffffffd8
   64ec4:	ldr	r0, [fp, #-12]
   64ec8:	ldr	r0, [r0]
   64ecc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   64ed0:	add	r0, r0, r1, lsl #3
   64ed4:	str	r0, [sp, #48]	; 0x30
   64ed8:	ldr	r0, [sp, #48]	; 0x30
   64edc:	ldr	r0, [r0, #4]
   64ee0:	and	r0, r0, #255	; 0xff
   64ee4:	cmp	r0, #4
   64ee8:	beq	64ef0 <__assert_fail@plt+0x52338>
   64eec:	b	65380 <__assert_fail@plt+0x527c8>
   64ef0:	ldr	r0, [sp, #48]	; 0x30
   64ef4:	ldr	r0, [r0, #4]
   64ef8:	lsr	r0, r0, #8
   64efc:	movw	r1, #1023	; 0x3ff
   64f00:	and	r0, r0, r1
   64f04:	cmp	r0, #0
   64f08:	beq	64fec <__assert_fail@plt+0x52434>
   64f0c:	ldr	r0, [fp, #-4]
   64f10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   64f14:	ldr	r2, [fp, #-4]
   64f18:	ldr	r2, [r2, #88]	; 0x58
   64f1c:	bl	64998 <__assert_fail@plt+0x51de0>
   64f20:	str	r0, [fp, #-44]	; 0xffffffd4
   64f24:	ldr	r0, [sp, #48]	; 0x30
   64f28:	ldr	r0, [r0, #4]
   64f2c:	lsr	r0, r0, #8
   64f30:	movw	r1, #1023	; 0x3ff
   64f34:	and	r0, r0, r1
   64f38:	and	r0, r0, #4
   64f3c:	cmp	r0, #0
   64f40:	beq	64f54 <__assert_fail@plt+0x5239c>
   64f44:	ldr	r0, [fp, #-44]	; 0xffffffd4
   64f48:	and	r0, r0, #1
   64f4c:	cmp	r0, #0
   64f50:	beq	64fe4 <__assert_fail@plt+0x5242c>
   64f54:	ldr	r0, [sp, #48]	; 0x30
   64f58:	ldr	r0, [r0, #4]
   64f5c:	lsr	r0, r0, #8
   64f60:	movw	r1, #1023	; 0x3ff
   64f64:	and	r0, r0, r1
   64f68:	and	r0, r0, #8
   64f6c:	cmp	r0, #0
   64f70:	beq	64f84 <__assert_fail@plt+0x523cc>
   64f74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   64f78:	and	r0, r0, #1
   64f7c:	cmp	r0, #0
   64f80:	bne	64fe4 <__assert_fail@plt+0x5242c>
   64f84:	ldr	r0, [sp, #48]	; 0x30
   64f88:	ldr	r0, [r0, #4]
   64f8c:	lsr	r0, r0, #8
   64f90:	movw	r1, #1023	; 0x3ff
   64f94:	and	r0, r0, r1
   64f98:	and	r0, r0, #32
   64f9c:	cmp	r0, #0
   64fa0:	beq	64fb4 <__assert_fail@plt+0x523fc>
   64fa4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   64fa8:	and	r0, r0, #2
   64fac:	cmp	r0, #0
   64fb0:	beq	64fe4 <__assert_fail@plt+0x5242c>
   64fb4:	ldr	r0, [sp, #48]	; 0x30
   64fb8:	ldr	r0, [r0, #4]
   64fbc:	lsr	r0, r0, #8
   64fc0:	movw	r1, #1023	; 0x3ff
   64fc4:	and	r0, r0, r1
   64fc8:	and	r0, r0, #128	; 0x80
   64fcc:	cmp	r0, #0
   64fd0:	beq	64fe8 <__assert_fail@plt+0x52430>
   64fd4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   64fd8:	and	r0, r0, #8
   64fdc:	cmp	r0, #0
   64fe0:	bne	64fe8 <__assert_fail@plt+0x52430>
   64fe4:	b	65380 <__assert_fail@plt+0x527c8>
   64fe8:	b	64fec <__assert_fail@plt+0x52434>
   64fec:	ldr	r0, [fp, #-4]
   64ff0:	ldr	r0, [r0, #108]	; 0x6c
   64ff4:	str	r0, [fp, #-36]	; 0xffffffdc
   64ff8:	ldr	r0, [fp, #-4]
   64ffc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   65000:	ldr	r2, [fp, #-24]	; 0xffffffe8
   65004:	bl	65bf0 <__assert_fail@plt+0x53038>
   65008:	str	r0, [fp, #-16]
   6500c:	ldr	r0, [fp, #-16]
   65010:	cmp	r0, #0
   65014:	beq	6501c <__assert_fail@plt+0x52464>
   65018:	b	65398 <__assert_fail@plt+0x527e0>
   6501c:	ldr	r0, [fp, #-12]
   65020:	ldr	r0, [r0, #12]
   65024:	ldr	r1, [fp, #-40]	; 0xffffffd8
   65028:	add	r0, r0, r1, lsl #2
   6502c:	ldr	r0, [r0]
   65030:	cmn	r0, #1
   65034:	beq	6503c <__assert_fail@plt+0x52484>
   65038:	b	6503c <__assert_fail@plt+0x52484>
   6503c:	b	65040 <__assert_fail@plt+0x52488>
   65040:	ldr	r0, [fp, #-36]	; 0xffffffdc
   65044:	ldr	r1, [fp, #-4]
   65048:	ldr	r1, [r1, #108]	; 0x6c
   6504c:	cmp	r0, r1
   65050:	bge	6537c <__assert_fail@plt+0x527c4>
   65054:	ldr	r0, [fp, #-4]
   65058:	ldr	r0, [r0, #116]	; 0x74
   6505c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   65060:	movw	r2, #24
   65064:	mul	r1, r1, r2
   65068:	add	r0, r0, r1
   6506c:	str	r0, [sp, #32]
   65070:	ldr	r0, [sp, #32]
   65074:	ldr	r0, [r0]
   65078:	ldr	r1, [fp, #-40]	; 0xffffffd8
   6507c:	cmp	r0, r1
   65080:	bne	65098 <__assert_fail@plt+0x524e0>
   65084:	ldr	r0, [sp, #32]
   65088:	ldr	r0, [r0, #4]
   6508c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   65090:	cmp	r0, r1
   65094:	beq	6509c <__assert_fail@plt+0x524e4>
   65098:	b	6536c <__assert_fail@plt+0x527b4>
   6509c:	ldr	r0, [sp, #32]
   650a0:	ldr	r0, [r0, #12]
   650a4:	ldr	r1, [sp, #32]
   650a8:	ldr	r1, [r1, #8]
   650ac:	sub	r0, r0, r1
   650b0:	str	r0, [sp, #40]	; 0x28
   650b4:	ldr	r0, [sp, #40]	; 0x28
   650b8:	cmp	r0, #0
   650bc:	bne	650f8 <__assert_fail@plt+0x52540>
   650c0:	ldr	r0, [fp, #-12]
   650c4:	ldr	r0, [r0, #24]
   650c8:	ldr	r1, [fp, #-12]
   650cc:	ldr	r1, [r1, #20]
   650d0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   650d4:	movw	r3, #12
   650d8:	mul	r2, r2, r3
   650dc:	add	r1, r1, r2
   650e0:	ldr	r1, [r1, #8]
   650e4:	ldr	r1, [r1]
   650e8:	mul	r1, r1, r3
   650ec:	add	r0, r0, r1
   650f0:	str	r0, [sp, #16]
   650f4:	b	65120 <__assert_fail@plt+0x52568>
   650f8:	ldr	r0, [fp, #-12]
   650fc:	ldr	r1, [r0, #12]
   65100:	ldr	r0, [r0, #24]
   65104:	ldr	r2, [fp, #-40]	; 0xffffffd8
   65108:	add	r1, r1, r2, lsl #2
   6510c:	ldr	r1, [r1]
   65110:	movw	r2, #12
   65114:	mul	r1, r1, r2
   65118:	add	r0, r0, r1
   6511c:	str	r0, [sp, #16]
   65120:	ldr	r0, [sp, #16]
   65124:	str	r0, [sp, #44]	; 0x2c
   65128:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6512c:	ldr	r1, [sp, #32]
   65130:	ldr	r2, [r1, #8]
   65134:	ldr	r1, [r1, #12]
   65138:	add	r0, r0, r1
   6513c:	sub	r0, r0, r2
   65140:	str	r0, [fp, #-28]	; 0xffffffe4
   65144:	ldr	r0, [fp, #-4]
   65148:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6514c:	sub	r1, r1, #1
   65150:	ldr	r2, [r0, #88]	; 0x58
   65154:	bl	64998 <__assert_fail@plt+0x51de0>
   65158:	str	r0, [fp, #-44]	; 0xffffffd4
   6515c:	ldr	r0, [fp, #-4]
   65160:	ldr	r0, [r0, #100]	; 0x64
   65164:	ldr	r1, [fp, #-28]	; 0xffffffe4
   65168:	ldr	r0, [r0, r1, lsl #2]
   6516c:	str	r0, [sp, #36]	; 0x24
   65170:	ldr	r0, [fp, #-4]
   65174:	ldr	r0, [r0, #100]	; 0x64
   65178:	ldr	r1, [fp, #-24]	; 0xffffffe8
   6517c:	add	r0, r0, r1, lsl #2
   65180:	ldr	r0, [r0]
   65184:	movw	r1, #0
   65188:	cmp	r0, r1
   6518c:	bne	6519c <__assert_fail@plt+0x525e4>
   65190:	movw	r0, #0
   65194:	str	r0, [sp, #12]
   65198:	b	651b8 <__assert_fail@plt+0x52600>
   6519c:	ldr	r0, [fp, #-4]
   651a0:	ldr	r0, [r0, #100]	; 0x64
   651a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   651a8:	add	r0, r0, r1, lsl #2
   651ac:	ldr	r0, [r0]
   651b0:	ldr	r0, [r0, #8]
   651b4:	str	r0, [sp, #12]
   651b8:	ldr	r0, [sp, #12]
   651bc:	str	r0, [fp, #-32]	; 0xffffffe0
   651c0:	ldr	r0, [sp, #36]	; 0x24
   651c4:	movw	r1, #0
   651c8:	cmp	r0, r1
   651cc:	bne	65244 <__assert_fail@plt+0x5268c>
   651d0:	ldr	r1, [fp, #-12]
   651d4:	ldr	r2, [sp, #44]	; 0x2c
   651d8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   651dc:	sub	r0, fp, #16
   651e0:	bl	6215c <__assert_fail@plt+0x4f5a4>
   651e4:	ldr	r1, [fp, #-4]
   651e8:	ldr	r1, [r1, #100]	; 0x64
   651ec:	ldr	r2, [fp, #-28]	; 0xffffffe4
   651f0:	str	r0, [r1, r2, lsl #2]
   651f4:	ldr	r0, [fp, #-4]
   651f8:	ldr	r0, [r0, #100]	; 0x64
   651fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   65200:	add	r0, r0, r1, lsl #2
   65204:	ldr	r0, [r0]
   65208:	movw	r1, #0
   6520c:	cmp	r0, r1
   65210:	movw	r0, #0
   65214:	str	r0, [sp, #8]
   65218:	bne	65230 <__assert_fail@plt+0x52678>
   6521c:	ldr	r0, [fp, #-16]
   65220:	cmp	r0, #0
   65224:	movw	r0, #0
   65228:	movne	r0, #1
   6522c:	str	r0, [sp, #8]
   65230:	ldr	r0, [sp, #8]
   65234:	tst	r0, #1
   65238:	beq	65240 <__assert_fail@plt+0x52688>
   6523c:	b	65398 <__assert_fail@plt+0x527e0>
   65240:	b	652f0 <__assert_fail@plt+0x52738>
   65244:	ldr	r0, [sp, #36]	; 0x24
   65248:	ldr	r1, [r0, #40]	; 0x28
   6524c:	ldr	r2, [sp, #44]	; 0x2c
   65250:	add	r0, sp, #20
   65254:	bl	6618c <__assert_fail@plt+0x535d4>
   65258:	str	r0, [fp, #-16]
   6525c:	ldr	r0, [fp, #-16]
   65260:	cmp	r0, #0
   65264:	beq	65274 <__assert_fail@plt+0x526bc>
   65268:	ldr	r0, [sp, #28]
   6526c:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   65270:	b	65398 <__assert_fail@plt+0x527e0>
   65274:	ldr	r1, [fp, #-12]
   65278:	ldr	r3, [fp, #-44]	; 0xffffffd4
   6527c:	sub	r0, fp, #16
   65280:	add	r2, sp, #20
   65284:	bl	6215c <__assert_fail@plt+0x4f5a4>
   65288:	ldr	r1, [fp, #-4]
   6528c:	ldr	r1, [r1, #100]	; 0x64
   65290:	ldr	r2, [fp, #-28]	; 0xffffffe4
   65294:	str	r0, [r1, r2, lsl #2]
   65298:	ldr	r0, [sp, #28]
   6529c:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   652a0:	ldr	r0, [fp, #-4]
   652a4:	ldr	r0, [r0, #100]	; 0x64
   652a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   652ac:	add	r0, r0, r1, lsl #2
   652b0:	ldr	r0, [r0]
   652b4:	movw	r1, #0
   652b8:	cmp	r0, r1
   652bc:	movw	r0, #0
   652c0:	str	r0, [sp, #4]
   652c4:	bne	652dc <__assert_fail@plt+0x52724>
   652c8:	ldr	r0, [fp, #-16]
   652cc:	cmp	r0, #0
   652d0:	movw	r0, #0
   652d4:	movne	r0, #1
   652d8:	str	r0, [sp, #4]
   652dc:	ldr	r0, [sp, #4]
   652e0:	tst	r0, #1
   652e4:	beq	652ec <__assert_fail@plt+0x52734>
   652e8:	b	65398 <__assert_fail@plt+0x527e0>
   652ec:	b	652f0 <__assert_fail@plt+0x52738>
   652f0:	ldr	r0, [sp, #40]	; 0x28
   652f4:	cmp	r0, #0
   652f8:	bne	65368 <__assert_fail@plt+0x527b0>
   652fc:	ldr	r0, [fp, #-4]
   65300:	ldr	r0, [r0, #100]	; 0x64
   65304:	ldr	r1, [fp, #-24]	; 0xffffffe8
   65308:	add	r0, r0, r1, lsl #2
   6530c:	ldr	r0, [r0]
   65310:	ldr	r0, [r0, #8]
   65314:	ldr	r1, [fp, #-32]	; 0xffffffe0
   65318:	cmp	r0, r1
   6531c:	ble	65368 <__assert_fail@plt+0x527b0>
   65320:	ldr	r0, [fp, #-4]
   65324:	ldr	r1, [sp, #44]	; 0x2c
   65328:	ldr	r2, [fp, #-24]	; 0xffffffe8
   6532c:	bl	64d54 <__assert_fail@plt+0x5219c>
   65330:	str	r0, [fp, #-16]
   65334:	ldr	r0, [fp, #-16]
   65338:	cmp	r0, #0
   6533c:	beq	65344 <__assert_fail@plt+0x5278c>
   65340:	b	65398 <__assert_fail@plt+0x527e0>
   65344:	ldr	r0, [fp, #-4]
   65348:	ldr	r1, [sp, #44]	; 0x2c
   6534c:	bl	64e68 <__assert_fail@plt+0x522b0>
   65350:	str	r0, [fp, #-16]
   65354:	ldr	r0, [fp, #-16]
   65358:	cmp	r0, #0
   6535c:	beq	65364 <__assert_fail@plt+0x527ac>
   65360:	b	65398 <__assert_fail@plt+0x527e0>
   65364:	b	65368 <__assert_fail@plt+0x527b0>
   65368:	b	6536c <__assert_fail@plt+0x527b4>
   6536c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   65370:	add	r0, r0, #1
   65374:	str	r0, [fp, #-36]	; 0xffffffdc
   65378:	b	65040 <__assert_fail@plt+0x52488>
   6537c:	b	65380 <__assert_fail@plt+0x527c8>
   65380:	ldr	r0, [fp, #-20]	; 0xffffffec
   65384:	add	r0, r0, #1
   65388:	str	r0, [fp, #-20]	; 0xffffffec
   6538c:	b	64e9c <__assert_fail@plt+0x522e4>
   65390:	movw	r0, #0
   65394:	str	r0, [fp, #-16]
   65398:	ldr	r0, [fp, #-16]
   6539c:	mov	sp, fp
   653a0:	pop	{fp, pc}
   653a4:	push	{fp, lr}
   653a8:	mov	fp, sp
   653ac:	sub	sp, sp, #48	; 0x30
   653b0:	ldr	r2, [pc, #512]	; 655b8 <__assert_fail@plt+0x52a00>
   653b4:	str	r0, [fp, #-8]
   653b8:	str	r1, [fp, #-12]
   653bc:	ldr	r0, [fp, #-8]
   653c0:	str	r0, [fp, #-20]	; 0xffffffec
   653c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   653c8:	ldr	r0, [r0, #36]	; 0x24
   653cc:	cmp	r2, r0
   653d0:	bhi	653e0 <__assert_fail@plt+0x52828>
   653d4:	movw	r0, #12
   653d8:	str	r0, [fp, #-4]
   653dc:	b	655ac <__assert_fail@plt+0x529f4>
   653e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   653e4:	ldr	r1, [fp, #-12]
   653e8:	ldr	r2, [r0, #36]	; 0x24
   653ec:	ldr	r3, [r0, #48]	; 0x30
   653f0:	lsl	r2, r2, #1
   653f4:	cmp	r3, r2
   653f8:	str	r0, [sp, #20]
   653fc:	str	r1, [sp, #16]
   65400:	bge	65414 <__assert_fail@plt+0x5285c>
   65404:	ldr	r0, [fp, #-20]	; 0xffffffec
   65408:	ldr	r0, [r0, #48]	; 0x30
   6540c:	str	r0, [sp, #12]
   65410:	b	65424 <__assert_fail@plt+0x5286c>
   65414:	ldr	r0, [fp, #-20]	; 0xffffffec
   65418:	ldr	r0, [r0, #36]	; 0x24
   6541c:	lsl	r0, r0, #1
   65420:	str	r0, [sp, #12]
   65424:	ldr	r0, [sp, #12]
   65428:	ldr	r1, [sp, #16]
   6542c:	cmp	r1, r0
   65430:	bge	65478 <__assert_fail@plt+0x528c0>
   65434:	ldr	r0, [fp, #-20]	; 0xffffffec
   65438:	ldr	r1, [r0, #36]	; 0x24
   6543c:	ldr	r0, [r0, #48]	; 0x30
   65440:	lsl	r1, r1, #1
   65444:	cmp	r0, r1
   65448:	bge	6545c <__assert_fail@plt+0x528a4>
   6544c:	ldr	r0, [fp, #-20]	; 0xffffffec
   65450:	ldr	r0, [r0, #48]	; 0x30
   65454:	str	r0, [sp, #8]
   65458:	b	6546c <__assert_fail@plt+0x528b4>
   6545c:	ldr	r0, [fp, #-20]	; 0xffffffec
   65460:	ldr	r0, [r0, #36]	; 0x24
   65464:	lsl	r0, r0, #1
   65468:	str	r0, [sp, #8]
   6546c:	ldr	r0, [sp, #8]
   65470:	str	r0, [sp, #4]
   65474:	b	65480 <__assert_fail@plt+0x528c8>
   65478:	ldr	r0, [fp, #-12]
   6547c:	str	r0, [sp, #4]
   65480:	ldr	r0, [sp, #4]
   65484:	ldr	r1, [sp, #20]
   65488:	str	r0, [sp]
   6548c:	mov	r0, r1
   65490:	ldr	r1, [sp]
   65494:	bl	590e4 <__assert_fail@plt+0x4652c>
   65498:	str	r0, [fp, #-16]
   6549c:	ldr	r0, [fp, #-16]
   654a0:	cmp	r0, #0
   654a4:	beq	654b4 <__assert_fail@plt+0x528fc>
   654a8:	ldr	r0, [fp, #-16]
   654ac:	str	r0, [fp, #-4]
   654b0:	b	655ac <__assert_fail@plt+0x529f4>
   654b4:	ldr	r0, [fp, #-8]
   654b8:	ldr	r0, [r0, #100]	; 0x64
   654bc:	movw	r1, #0
   654c0:	cmp	r0, r1
   654c4:	beq	65510 <__assert_fail@plt+0x52958>
   654c8:	ldr	r0, [fp, #-8]
   654cc:	ldr	r0, [r0, #100]	; 0x64
   654d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   654d4:	ldr	r1, [r1, #36]	; 0x24
   654d8:	add	r1, r1, #1
   654dc:	lsl	r1, r1, #2
   654e0:	bl	538c8 <__assert_fail@plt+0x40d10>
   654e4:	str	r0, [sp, #24]
   654e8:	ldr	r0, [sp, #24]
   654ec:	movw	r1, #0
   654f0:	cmp	r0, r1
   654f4:	bne	65504 <__assert_fail@plt+0x5294c>
   654f8:	movw	r0, #12
   654fc:	str	r0, [fp, #-4]
   65500:	b	655ac <__assert_fail@plt+0x529f4>
   65504:	ldr	r0, [sp, #24]
   65508:	ldr	r1, [fp, #-8]
   6550c:	str	r0, [r1, #100]	; 0x64
   65510:	ldr	r0, [fp, #-20]	; 0xffffffec
   65514:	ldrsb	r0, [r0, #72]	; 0x48
   65518:	cmp	r0, #0
   6551c:	beq	65564 <__assert_fail@plt+0x529ac>
   65520:	ldr	r0, [fp, #-20]	; 0xffffffec
   65524:	ldr	r0, [r0, #80]	; 0x50
   65528:	cmp	r0, #1
   6552c:	ble	65558 <__assert_fail@plt+0x529a0>
   65530:	ldr	r0, [fp, #-20]	; 0xffffffec
   65534:	bl	5923c <__assert_fail@plt+0x46684>
   65538:	str	r0, [fp, #-16]
   6553c:	ldr	r0, [fp, #-16]
   65540:	cmp	r0, #0
   65544:	beq	65554 <__assert_fail@plt+0x5299c>
   65548:	ldr	r0, [fp, #-16]
   6554c:	str	r0, [fp, #-4]
   65550:	b	655ac <__assert_fail@plt+0x529f4>
   65554:	b	65560 <__assert_fail@plt+0x529a8>
   65558:	ldr	r0, [fp, #-20]	; 0xffffffec
   6555c:	bl	59ce4 <__assert_fail@plt+0x4712c>
   65560:	b	655a4 <__assert_fail@plt+0x529ec>
   65564:	ldr	r0, [fp, #-20]	; 0xffffffec
   65568:	ldr	r0, [r0, #80]	; 0x50
   6556c:	cmp	r0, #1
   65570:	ble	65580 <__assert_fail@plt+0x529c8>
   65574:	ldr	r0, [fp, #-20]	; 0xffffffec
   65578:	bl	59de8 <__assert_fail@plt+0x47230>
   6557c:	b	655a0 <__assert_fail@plt+0x529e8>
   65580:	ldr	r0, [fp, #-20]	; 0xffffffec
   65584:	ldr	r0, [r0, #64]	; 0x40
   65588:	movw	r1, #0
   6558c:	cmp	r0, r1
   65590:	beq	6559c <__assert_fail@plt+0x529e4>
   65594:	ldr	r0, [fp, #-20]	; 0xffffffec
   65598:	bl	5a128 <__assert_fail@plt+0x47570>
   6559c:	b	655a0 <__assert_fail@plt+0x529e8>
   655a0:	b	655a4 <__assert_fail@plt+0x529ec>
   655a4:	movw	r0, #0
   655a8:	str	r0, [fp, #-4]
   655ac:	ldr	r0, [fp, #-4]
   655b0:	mov	sp, fp
   655b4:	pop	{fp, pc}
   655b8:	svcne	0x00ffffff
   655bc:	push	{fp, lr}
   655c0:	mov	fp, sp
   655c4:	sub	sp, sp, #32
   655c8:	str	r0, [fp, #-8]
   655cc:	str	r1, [fp, #-12]
   655d0:	str	r2, [sp, #16]
   655d4:	ldr	r0, [sp, #16]
   655d8:	ldrb	r0, [r0, #52]	; 0x34
   655dc:	ubfx	r0, r0, #5, #1
   655e0:	and	r0, r0, #255	; 0xff
   655e4:	cmp	r0, #0
   655e8:	beq	65620 <__assert_fail@plt+0x52a68>
   655ec:	ldr	r0, [fp, #-12]
   655f0:	ldr	r1, [sp, #16]
   655f4:	bl	68938 <__assert_fail@plt+0x55d80>
   655f8:	ldr	r1, [fp, #-8]
   655fc:	str	r0, [r1]
   65600:	ldr	r0, [fp, #-8]
   65604:	ldr	r0, [r0]
   65608:	cmp	r0, #0
   6560c:	beq	6561c <__assert_fail@plt+0x52a64>
   65610:	movw	r0, #0
   65614:	str	r0, [fp, #-4]
   65618:	b	65734 <__assert_fail@plt+0x52b7c>
   6561c:	b	65620 <__assert_fail@plt+0x52a68>
   65620:	ldr	r0, [fp, #-12]
   65624:	ldr	r0, [r0, #4]
   65628:	ldr	r1, [fp, #-12]
   6562c:	ldr	r2, [r1, #40]	; 0x28
   65630:	add	r3, r2, #1
   65634:	str	r3, [r1, #40]	; 0x28
   65638:	add	r0, r0, r2
   6563c:	ldrb	r0, [r0]
   65640:	strb	r0, [sp, #11]
   65644:	ldr	r0, [sp, #16]
   65648:	ldr	r0, [r0, #44]	; 0x2c
   6564c:	str	r0, [sp, #12]
   65650:	ldr	r0, [sp, #12]
   65654:	movw	r1, #0
   65658:	cmp	r0, r1
   6565c:	beq	6567c <__assert_fail@plt+0x52ac4>
   65660:	ldr	r0, [sp, #12]
   65664:	ldrb	r1, [sp, #11]
   65668:	mov	r2, r1
   6566c:	add	r0, r0, r1, lsl #2
   65670:	ldr	r0, [r0]
   65674:	str	r0, [fp, #-4]
   65678:	b	65734 <__assert_fail@plt+0x52b7c>
   6567c:	ldr	r0, [sp, #16]
   65680:	ldr	r0, [r0, #48]	; 0x30
   65684:	str	r0, [sp, #12]
   65688:	ldr	r0, [sp, #12]
   6568c:	movw	r1, #0
   65690:	cmp	r0, r1
   65694:	beq	65700 <__assert_fail@plt+0x52b48>
   65698:	ldr	r0, [fp, #-12]
   6569c:	ldr	r1, [fp, #-12]
   656a0:	ldr	r1, [r1, #40]	; 0x28
   656a4:	sub	r1, r1, #1
   656a8:	ldr	r2, [fp, #-12]
   656ac:	ldr	r2, [r2, #88]	; 0x58
   656b0:	bl	64998 <__assert_fail@plt+0x51de0>
   656b4:	str	r0, [sp, #4]
   656b8:	ldr	r0, [sp, #4]
   656bc:	and	r0, r0, #1
   656c0:	cmp	r0, #0
   656c4:	beq	656e4 <__assert_fail@plt+0x52b2c>
   656c8:	ldr	r0, [sp, #12]
   656cc:	ldrb	r1, [sp, #11]
   656d0:	orr	r1, r1, #256	; 0x100
   656d4:	add	r0, r0, r1, lsl #2
   656d8:	ldr	r0, [r0]
   656dc:	str	r0, [fp, #-4]
   656e0:	b	65734 <__assert_fail@plt+0x52b7c>
   656e4:	ldr	r0, [sp, #12]
   656e8:	ldrb	r1, [sp, #11]
   656ec:	mov	r2, r1
   656f0:	add	r0, r0, r1, lsl #2
   656f4:	ldr	r0, [r0]
   656f8:	str	r0, [fp, #-4]
   656fc:	b	65734 <__assert_fail@plt+0x52b7c>
   65700:	ldr	r0, [fp, #-12]
   65704:	ldr	r0, [r0, #84]	; 0x54
   65708:	ldr	r1, [sp, #16]
   6570c:	bl	68d14 <__assert_fail@plt+0x5615c>
   65710:	tst	r0, #1
   65714:	bne	65730 <__assert_fail@plt+0x52b78>
   65718:	ldr	r0, [fp, #-8]
   6571c:	movw	r1, #12
   65720:	str	r1, [r0]
   65724:	movw	r0, #0
   65728:	str	r0, [fp, #-4]
   6572c:	b	65734 <__assert_fail@plt+0x52b7c>
   65730:	b	65644 <__assert_fail@plt+0x52a8c>
   65734:	ldr	r0, [fp, #-4]
   65738:	mov	sp, fp
   6573c:	pop	{fp, pc}
   65740:	push	{fp, lr}
   65744:	mov	fp, sp
   65748:	sub	sp, sp, #56	; 0x38
   6574c:	str	r0, [fp, #-8]
   65750:	str	r1, [fp, #-12]
   65754:	str	r2, [fp, #-16]
   65758:	ldr	r0, [fp, #-12]
   6575c:	ldr	r0, [r0, #84]	; 0x54
   65760:	str	r0, [fp, #-20]	; 0xffffffec
   65764:	ldr	r0, [fp, #-12]
   65768:	ldr	r0, [r0, #40]	; 0x28
   6576c:	str	r0, [fp, #-24]	; 0xffffffe8
   65770:	ldr	r0, [fp, #-24]	; 0xffffffe8
   65774:	ldr	r1, [fp, #-12]
   65778:	ldr	r1, [r1, #104]	; 0x68
   6577c:	cmp	r0, r1
   65780:	ble	657ac <__assert_fail@plt+0x52bf4>
   65784:	ldr	r0, [fp, #-16]
   65788:	ldr	r1, [fp, #-12]
   6578c:	ldr	r1, [r1, #100]	; 0x64
   65790:	ldr	r2, [fp, #-24]	; 0xffffffe8
   65794:	add	r1, r1, r2, lsl #2
   65798:	str	r0, [r1]
   6579c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   657a0:	ldr	r1, [fp, #-12]
   657a4:	str	r0, [r1, #104]	; 0x68
   657a8:	b	658e8 <__assert_fail@plt+0x52d30>
   657ac:	ldr	r0, [fp, #-12]
   657b0:	ldr	r0, [r0, #100]	; 0x64
   657b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   657b8:	add	r0, r0, r1, lsl #2
   657bc:	ldr	r0, [r0]
   657c0:	movw	r1, #0
   657c4:	cmp	r0, r1
   657c8:	bne	657e8 <__assert_fail@plt+0x52c30>
   657cc:	ldr	r0, [fp, #-16]
   657d0:	ldr	r1, [fp, #-12]
   657d4:	ldr	r1, [r1, #100]	; 0x64
   657d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   657dc:	add	r1, r1, r2, lsl #2
   657e0:	str	r0, [r1]
   657e4:	b	658e4 <__assert_fail@plt+0x52d2c>
   657e8:	mov	r0, #0
   657ec:	str	r0, [sp, #4]
   657f0:	ldr	r0, [fp, #-12]
   657f4:	ldr	r0, [r0, #100]	; 0x64
   657f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   657fc:	add	r0, r0, r1, lsl #2
   65800:	ldr	r0, [r0]
   65804:	str	r0, [sp, #28]
   65808:	ldr	r0, [sp, #28]
   6580c:	ldr	r0, [r0, #40]	; 0x28
   65810:	str	r0, [sp, #8]
   65814:	ldr	r0, [fp, #-16]
   65818:	movw	r1, #0
   6581c:	cmp	r0, r1
   65820:	beq	65868 <__assert_fail@plt+0x52cb0>
   65824:	ldr	r0, [fp, #-16]
   65828:	ldr	r0, [r0, #40]	; 0x28
   6582c:	str	r0, [sp, #4]
   65830:	ldr	r1, [sp, #4]
   65834:	ldr	r2, [sp, #8]
   65838:	add	r0, sp, #12
   6583c:	bl	6618c <__assert_fail@plt+0x535d4>
   65840:	ldr	r1, [fp, #-8]
   65844:	str	r0, [r1]
   65848:	ldr	r0, [fp, #-8]
   6584c:	ldr	r0, [r0]
   65850:	cmp	r0, #0
   65854:	beq	65864 <__assert_fail@plt+0x52cac>
   65858:	movw	r0, #0
   6585c:	str	r0, [fp, #-4]
   65860:	b	659b0 <__assert_fail@plt+0x52df8>
   65864:	b	65884 <__assert_fail@plt+0x52ccc>
   65868:	ldr	r0, [sp, #8]
   6586c:	ldr	r1, [r0]
   65870:	str	r1, [sp, #12]
   65874:	ldr	r1, [r0, #4]
   65878:	str	r1, [sp, #16]
   6587c:	ldr	r0, [r0, #8]
   65880:	str	r0, [sp, #20]
   65884:	ldr	r0, [fp, #-12]
   65888:	ldr	r1, [r0, #40]	; 0x28
   6588c:	ldr	r2, [r0, #88]	; 0x58
   65890:	sub	r1, r1, #1
   65894:	bl	64998 <__assert_fail@plt+0x51de0>
   65898:	str	r0, [sp, #24]
   6589c:	ldr	r0, [fp, #-8]
   658a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   658a4:	ldr	r3, [sp, #24]
   658a8:	add	r2, sp, #12
   658ac:	bl	6215c <__assert_fail@plt+0x4f5a4>
   658b0:	ldr	r1, [fp, #-12]
   658b4:	ldr	r1, [r1, #100]	; 0x64
   658b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   658bc:	add	r1, r1, r2, lsl #2
   658c0:	str	r0, [r1]
   658c4:	str	r0, [fp, #-16]
   658c8:	ldr	r0, [sp, #4]
   658cc:	movw	r1, #0
   658d0:	cmp	r0, r1
   658d4:	beq	658e0 <__assert_fail@plt+0x52d28>
   658d8:	ldr	r0, [sp, #20]
   658dc:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   658e0:	b	658e4 <__assert_fail@plt+0x52d2c>
   658e4:	b	658e8 <__assert_fail@plt+0x52d30>
   658e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   658ec:	ldr	r0, [r0, #76]	; 0x4c
   658f0:	cmp	r0, #0
   658f4:	beq	659a8 <__assert_fail@plt+0x52df0>
   658f8:	ldr	r0, [fp, #-16]
   658fc:	movw	r1, #0
   65900:	cmp	r0, r1
   65904:	beq	659a8 <__assert_fail@plt+0x52df0>
   65908:	ldr	r0, [fp, #-12]
   6590c:	ldr	r1, [fp, #-16]
   65910:	add	r1, r1, #4
   65914:	ldr	r2, [fp, #-24]	; 0xffffffe8
   65918:	bl	64d54 <__assert_fail@plt+0x5219c>
   6591c:	ldr	r1, [fp, #-8]
   65920:	str	r0, [r1]
   65924:	ldr	r0, [fp, #-8]
   65928:	ldr	r0, [r0]
   6592c:	cmp	r0, #0
   65930:	beq	65940 <__assert_fail@plt+0x52d88>
   65934:	movw	r0, #0
   65938:	str	r0, [fp, #-4]
   6593c:	b	659b0 <__assert_fail@plt+0x52df8>
   65940:	ldr	r0, [fp, #-16]
   65944:	ldrb	r0, [r0, #52]	; 0x34
   65948:	ubfx	r0, r0, #6, #1
   6594c:	and	r0, r0, #255	; 0xff
   65950:	cmp	r0, #0
   65954:	beq	659a4 <__assert_fail@plt+0x52dec>
   65958:	ldr	r0, [fp, #-12]
   6595c:	ldr	r1, [fp, #-16]
   65960:	add	r1, r1, #4
   65964:	bl	64e68 <__assert_fail@plt+0x522b0>
   65968:	ldr	r1, [fp, #-8]
   6596c:	str	r0, [r1]
   65970:	ldr	r0, [fp, #-8]
   65974:	ldr	r0, [r0]
   65978:	cmp	r0, #0
   6597c:	beq	6598c <__assert_fail@plt+0x52dd4>
   65980:	movw	r0, #0
   65984:	str	r0, [fp, #-4]
   65988:	b	659b0 <__assert_fail@plt+0x52df8>
   6598c:	ldr	r0, [fp, #-12]
   65990:	ldr	r0, [r0, #100]	; 0x64
   65994:	ldr	r1, [fp, #-24]	; 0xffffffe8
   65998:	add	r0, r0, r1, lsl #2
   6599c:	ldr	r0, [r0]
   659a0:	str	r0, [fp, #-16]
   659a4:	b	659a8 <__assert_fail@plt+0x52df0>
   659a8:	ldr	r0, [fp, #-16]
   659ac:	str	r0, [fp, #-4]
   659b0:	ldr	r0, [fp, #-4]
   659b4:	mov	sp, fp
   659b8:	pop	{fp, pc}
   659bc:	push	{fp, lr}
   659c0:	mov	fp, sp
   659c4:	sub	sp, sp, #32
   659c8:	str	r0, [fp, #-8]
   659cc:	str	r1, [fp, #-12]
   659d0:	ldr	r0, [fp, #-12]
   659d4:	ldr	r0, [r0, #104]	; 0x68
   659d8:	str	r0, [sp, #12]
   659dc:	ldr	r0, [fp, #-12]
   659e0:	ldr	r0, [r0, #40]	; 0x28
   659e4:	str	r0, [sp, #8]
   659e8:	ldr	r0, [sp, #8]
   659ec:	add	r0, r0, #1
   659f0:	str	r0, [sp, #8]
   659f4:	ldr	r1, [sp, #12]
   659f8:	cmp	r0, r1
   659fc:	ble	65a0c <__assert_fail@plt+0x52e54>
   65a00:	movw	r0, #0
   65a04:	str	r0, [fp, #-4]
   65a08:	b	65a94 <__assert_fail@plt+0x52edc>
   65a0c:	ldr	r0, [fp, #-12]
   65a10:	ldr	r1, [r0, #40]	; 0x28
   65a14:	add	r1, r1, #1
   65a18:	str	r1, [r0, #40]	; 0x28
   65a1c:	ldr	r0, [fp, #-12]
   65a20:	ldr	r0, [r0, #100]	; 0x64
   65a24:	ldr	r1, [sp, #8]
   65a28:	add	r0, r0, r1, lsl #2
   65a2c:	ldr	r0, [r0]
   65a30:	movw	r1, #0
   65a34:	cmp	r0, r1
   65a38:	beq	659e8 <__assert_fail@plt+0x52e30>
   65a3c:	ldr	r0, [fp, #-8]
   65a40:	ldr	r1, [fp, #-12]
   65a44:	movw	r2, #0
   65a48:	bl	65740 <__assert_fail@plt+0x52b88>
   65a4c:	str	r0, [sp, #16]
   65a50:	ldr	r0, [fp, #-8]
   65a54:	ldr	r0, [r0]
   65a58:	cmp	r0, #0
   65a5c:	movw	r0, #0
   65a60:	str	r0, [sp, #4]
   65a64:	bne	65a80 <__assert_fail@plt+0x52ec8>
   65a68:	ldr	r0, [sp, #16]
   65a6c:	movw	r1, #0
   65a70:	cmp	r0, r1
   65a74:	movw	r0, #0
   65a78:	moveq	r0, #1
   65a7c:	str	r0, [sp, #4]
   65a80:	ldr	r0, [sp, #4]
   65a84:	tst	r0, #1
   65a88:	bne	659d0 <__assert_fail@plt+0x52e18>
   65a8c:	ldr	r0, [sp, #16]
   65a90:	str	r0, [fp, #-4]
   65a94:	ldr	r0, [fp, #-4]
   65a98:	mov	sp, fp
   65a9c:	pop	{fp, pc}
   65aa0:	push	{fp, lr}
   65aa4:	mov	fp, sp
   65aa8:	sub	sp, sp, #24
   65aac:	str	r0, [fp, #-8]
   65ab0:	str	r1, [sp, #12]
   65ab4:	str	r2, [sp, #8]
   65ab8:	ldr	r0, [fp, #-8]
   65abc:	ldr	r0, [r0, #132]	; 0x84
   65ac0:	movw	r1, #0
   65ac4:	cmp	r0, r1
   65ac8:	beq	65ad0 <__assert_fail@plt+0x52f18>
   65acc:	b	65ad0 <__assert_fail@plt+0x52f18>
   65ad0:	ldr	r0, [fp, #-8]
   65ad4:	ldr	r0, [r0, #128]	; 0x80
   65ad8:	cmp	r0, #0
   65adc:	ble	65ae4 <__assert_fail@plt+0x52f2c>
   65ae0:	b	65ae4 <__assert_fail@plt+0x52f2c>
   65ae4:	ldr	r0, [fp, #-8]
   65ae8:	ldr	r0, [r0, #124]	; 0x7c
   65aec:	ldr	r1, [fp, #-8]
   65af0:	ldr	r1, [r1, #128]	; 0x80
   65af4:	cmp	r0, r1
   65af8:	bne	65b58 <__assert_fail@plt+0x52fa0>
   65afc:	ldr	r0, [fp, #-8]
   65b00:	ldr	r0, [r0, #128]	; 0x80
   65b04:	lsl	r0, r0, #1
   65b08:	str	r0, [sp, #4]
   65b0c:	ldr	r0, [fp, #-8]
   65b10:	ldr	r0, [r0, #132]	; 0x84
   65b14:	ldr	r1, [sp, #4]
   65b18:	lsl	r1, r1, #2
   65b1c:	bl	538c8 <__assert_fail@plt+0x40d10>
   65b20:	str	r0, [sp]
   65b24:	ldr	r0, [sp]
   65b28:	movw	r1, #0
   65b2c:	cmp	r0, r1
   65b30:	bne	65b40 <__assert_fail@plt+0x52f88>
   65b34:	movw	r0, #12
   65b38:	str	r0, [fp, #-4]
   65b3c:	b	65be4 <__assert_fail@plt+0x5302c>
   65b40:	ldr	r0, [sp]
   65b44:	ldr	r1, [fp, #-8]
   65b48:	str	r0, [r1, #132]	; 0x84
   65b4c:	ldr	r0, [sp, #4]
   65b50:	ldr	r1, [fp, #-8]
   65b54:	str	r0, [r1, #128]	; 0x80
   65b58:	mov	r0, #1
   65b5c:	mov	r1, #24
   65b60:	bl	4e0e0 <__assert_fail@plt+0x3b528>
   65b64:	ldr	r1, [fp, #-8]
   65b68:	ldr	r2, [r1, #124]	; 0x7c
   65b6c:	ldr	r1, [r1, #132]	; 0x84
   65b70:	str	r0, [r1, r2, lsl #2]
   65b74:	ldr	r0, [fp, #-8]
   65b78:	ldr	r1, [r0, #124]	; 0x7c
   65b7c:	ldr	r0, [r0, #132]	; 0x84
   65b80:	add	r0, r0, r1, lsl #2
   65b84:	ldr	r0, [r0]
   65b88:	movw	r1, #0
   65b8c:	cmp	r0, r1
   65b90:	bne	65ba0 <__assert_fail@plt+0x52fe8>
   65b94:	movw	r0, #12
   65b98:	str	r0, [fp, #-4]
   65b9c:	b	65be4 <__assert_fail@plt+0x5302c>
   65ba0:	ldr	r0, [sp, #12]
   65ba4:	ldr	r1, [fp, #-8]
   65ba8:	ldr	r2, [r1, #124]	; 0x7c
   65bac:	ldr	r1, [r1, #132]	; 0x84
   65bb0:	ldr	r1, [r1, r2, lsl #2]
   65bb4:	str	r0, [r1, #4]
   65bb8:	ldr	r0, [sp, #8]
   65bbc:	ldr	r1, [fp, #-8]
   65bc0:	ldr	r2, [r1, #124]	; 0x7c
   65bc4:	ldr	r3, [r1, #132]	; 0x84
   65bc8:	add	ip, r2, #1
   65bcc:	str	ip, [r1, #124]	; 0x7c
   65bd0:	add	r1, r3, r2, lsl #2
   65bd4:	ldr	r1, [r1]
   65bd8:	str	r0, [r1]
   65bdc:	movw	r0, #0
   65be0:	str	r0, [fp, #-4]
   65be4:	ldr	r0, [fp, #-4]
   65be8:	mov	sp, fp
   65bec:	pop	{fp, pc}
   65bf0:	push	{fp, lr}
   65bf4:	mov	fp, sp
   65bf8:	sub	sp, sp, #96	; 0x60
   65bfc:	str	r0, [fp, #-8]
   65c00:	str	r1, [fp, #-12]
   65c04:	str	r2, [fp, #-16]
   65c08:	ldr	r0, [fp, #-8]
   65c0c:	ldr	r0, [r0, #84]	; 0x54
   65c10:	str	r0, [fp, #-20]	; 0xffffffec
   65c14:	ldr	r0, [fp, #-8]
   65c18:	ldr	r0, [r0, #4]
   65c1c:	str	r0, [fp, #-32]	; 0xffffffe0
   65c20:	ldr	r0, [fp, #-8]
   65c24:	ldr	r1, [fp, #-16]
   65c28:	bl	664d8 <__assert_fail@plt+0x53920>
   65c2c:	str	r0, [fp, #-36]	; 0xffffffdc
   65c30:	ldr	r0, [fp, #-36]	; 0xffffffdc
   65c34:	cmn	r0, #1
   65c38:	beq	65c98 <__assert_fail@plt+0x530e0>
   65c3c:	ldr	r0, [fp, #-8]
   65c40:	ldr	r0, [r0, #116]	; 0x74
   65c44:	ldr	r1, [fp, #-36]	; 0xffffffdc
   65c48:	movw	r2, #24
   65c4c:	mul	r1, r1, r2
   65c50:	add	r0, r0, r1
   65c54:	str	r0, [fp, #-40]	; 0xffffffd8
   65c58:	ldr	r0, [fp, #-40]	; 0xffffffd8
   65c5c:	ldr	r0, [r0]
   65c60:	ldr	r1, [fp, #-12]
   65c64:	cmp	r0, r1
   65c68:	bne	65c78 <__assert_fail@plt+0x530c0>
   65c6c:	movw	r0, #0
   65c70:	str	r0, [fp, #-4]
   65c74:	b	66180 <__assert_fail@plt+0x535c8>
   65c78:	b	65c7c <__assert_fail@plt+0x530c4>
   65c7c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   65c80:	add	r1, r0, #24
   65c84:	str	r1, [fp, #-40]	; 0xffffffd8
   65c88:	ldrsb	r0, [r0, #20]
   65c8c:	cmp	r0, #0
   65c90:	bne	65c58 <__assert_fail@plt+0x530a0>
   65c94:	b	65c98 <__assert_fail@plt+0x530e0>
   65c98:	ldr	r0, [fp, #-20]	; 0xffffffec
   65c9c:	ldr	r0, [r0]
   65ca0:	ldr	r1, [fp, #-12]
   65ca4:	add	r0, r0, r1, lsl #3
   65ca8:	ldr	r0, [r0]
   65cac:	str	r0, [fp, #-24]	; 0xffffffe8
   65cb0:	movw	r0, #0
   65cb4:	str	r0, [fp, #-28]	; 0xffffffe4
   65cb8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   65cbc:	ldr	r1, [fp, #-8]
   65cc0:	ldr	r1, [r1, #124]	; 0x7c
   65cc4:	cmp	r0, r1
   65cc8:	bge	66178 <__assert_fail@plt+0x535c0>
   65ccc:	ldr	r0, [fp, #-8]
   65cd0:	ldr	r0, [r0, #132]	; 0x84
   65cd4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   65cd8:	ldr	r0, [r0, r1, lsl #2]
   65cdc:	str	r0, [sp, #48]	; 0x30
   65ce0:	ldr	r0, [fp, #-20]	; 0xffffffec
   65ce4:	ldr	r0, [r0]
   65ce8:	ldr	r1, [sp, #48]	; 0x30
   65cec:	ldr	r1, [r1, #4]
   65cf0:	add	r0, r0, r1, lsl #3
   65cf4:	ldr	r0, [r0]
   65cf8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   65cfc:	cmp	r0, r1
   65d00:	beq	65d08 <__assert_fail@plt+0x53150>
   65d04:	b	66168 <__assert_fail@plt+0x535b0>
   65d08:	ldr	r0, [sp, #48]	; 0x30
   65d0c:	ldr	r0, [r0]
   65d10:	str	r0, [sp, #36]	; 0x24
   65d14:	ldr	r0, [fp, #-16]
   65d18:	str	r0, [sp, #32]
   65d1c:	movw	r0, #0
   65d20:	str	r0, [sp, #40]	; 0x28
   65d24:	ldr	r0, [sp, #40]	; 0x28
   65d28:	ldr	r1, [sp, #48]	; 0x30
   65d2c:	ldr	r1, [r1, #16]
   65d30:	cmp	r0, r1
   65d34:	bge	65ea0 <__assert_fail@plt+0x532e8>
   65d38:	ldr	r0, [sp, #48]	; 0x30
   65d3c:	ldr	r0, [r0, #20]
   65d40:	ldr	r1, [sp, #40]	; 0x28
   65d44:	add	r0, r0, r1, lsl #2
   65d48:	ldr	r0, [r0]
   65d4c:	str	r0, [sp, #44]	; 0x2c
   65d50:	ldr	r0, [sp, #44]	; 0x2c
   65d54:	ldr	r0, [r0, #4]
   65d58:	ldr	r1, [sp, #36]	; 0x24
   65d5c:	sub	r0, r0, r1
   65d60:	str	r0, [sp, #28]
   65d64:	ldr	r0, [sp, #28]
   65d68:	cmp	r0, #0
   65d6c:	ble	65e18 <__assert_fail@plt+0x53260>
   65d70:	ldr	r0, [sp, #32]
   65d74:	ldr	r1, [sp, #28]
   65d78:	add	r0, r0, r1
   65d7c:	ldr	r1, [fp, #-8]
   65d80:	ldr	r1, [r1, #28]
   65d84:	cmp	r0, r1
   65d88:	ble	65de8 <__assert_fail@plt+0x53230>
   65d8c:	ldr	r0, [sp, #32]
   65d90:	ldr	r1, [sp, #28]
   65d94:	add	r0, r0, r1
   65d98:	ldr	r1, [fp, #-8]
   65d9c:	ldr	r1, [r1, #48]	; 0x30
   65da0:	cmp	r0, r1
   65da4:	ble	65dac <__assert_fail@plt+0x531f4>
   65da8:	b	65ea0 <__assert_fail@plt+0x532e8>
   65dac:	ldr	r0, [fp, #-8]
   65db0:	ldr	r1, [sp, #32]
   65db4:	ldr	r2, [sp, #28]
   65db8:	add	r1, r1, r2
   65dbc:	bl	665c0 <__assert_fail@plt+0x53a08>
   65dc0:	str	r0, [fp, #-44]	; 0xffffffd4
   65dc4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   65dc8:	cmp	r0, #0
   65dcc:	beq	65ddc <__assert_fail@plt+0x53224>
   65dd0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   65dd4:	str	r0, [fp, #-4]
   65dd8:	b	66180 <__assert_fail@plt+0x535c8>
   65ddc:	ldr	r0, [fp, #-8]
   65de0:	ldr	r0, [r0, #4]
   65de4:	str	r0, [fp, #-32]	; 0xffffffe0
   65de8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   65dec:	ldr	r1, [sp, #32]
   65df0:	add	r0, r0, r1
   65df4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   65df8:	ldr	r2, [sp, #36]	; 0x24
   65dfc:	add	r1, r1, r2
   65e00:	ldr	r2, [sp, #28]
   65e04:	bl	12624 <memcmp@plt>
   65e08:	cmp	r0, #0
   65e0c:	beq	65e14 <__assert_fail@plt+0x5325c>
   65e10:	b	65ea0 <__assert_fail@plt+0x532e8>
   65e14:	b	65e18 <__assert_fail@plt+0x53260>
   65e18:	ldr	r0, [sp, #28]
   65e1c:	ldr	r1, [sp, #32]
   65e20:	add	r0, r1, r0
   65e24:	str	r0, [sp, #32]
   65e28:	ldr	r0, [sp, #28]
   65e2c:	ldr	r1, [sp, #36]	; 0x24
   65e30:	add	r0, r1, r0
   65e34:	str	r0, [sp, #36]	; 0x24
   65e38:	ldr	r0, [fp, #-8]
   65e3c:	ldr	r1, [sp, #48]	; 0x30
   65e40:	ldr	r2, [sp, #44]	; 0x2c
   65e44:	ldr	r3, [fp, #-12]
   65e48:	ldr	ip, [fp, #-16]
   65e4c:	str	ip, [sp]
   65e50:	bl	666dc <__assert_fail@plt+0x53b24>
   65e54:	str	r0, [fp, #-44]	; 0xffffffd4
   65e58:	ldr	r0, [fp, #-8]
   65e5c:	ldr	r0, [r0, #4]
   65e60:	str	r0, [fp, #-32]	; 0xffffffe0
   65e64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   65e68:	cmp	r0, #1
   65e6c:	bne	65e74 <__assert_fail@plt+0x532bc>
   65e70:	b	65e90 <__assert_fail@plt+0x532d8>
   65e74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   65e78:	cmp	r0, #0
   65e7c:	beq	65e8c <__assert_fail@plt+0x532d4>
   65e80:	ldr	r0, [fp, #-44]	; 0xffffffd4
   65e84:	str	r0, [fp, #-4]
   65e88:	b	66180 <__assert_fail@plt+0x535c8>
   65e8c:	b	65e90 <__assert_fail@plt+0x532d8>
   65e90:	ldr	r0, [sp, #40]	; 0x28
   65e94:	add	r0, r0, #1
   65e98:	str	r0, [sp, #40]	; 0x28
   65e9c:	b	65d24 <__assert_fail@plt+0x5316c>
   65ea0:	ldr	r0, [sp, #40]	; 0x28
   65ea4:	ldr	r1, [sp, #48]	; 0x30
   65ea8:	ldr	r1, [r1, #16]
   65eac:	cmp	r0, r1
   65eb0:	bge	65eb8 <__assert_fail@plt+0x53300>
   65eb4:	b	66168 <__assert_fail@plt+0x535b0>
   65eb8:	ldr	r0, [sp, #40]	; 0x28
   65ebc:	cmp	r0, #0
   65ec0:	ble	65ed0 <__assert_fail@plt+0x53318>
   65ec4:	ldr	r0, [sp, #36]	; 0x24
   65ec8:	add	r0, r0, #1
   65ecc:	str	r0, [sp, #36]	; 0x24
   65ed0:	b	65ed4 <__assert_fail@plt+0x5331c>
   65ed4:	ldr	r0, [sp, #36]	; 0x24
   65ed8:	ldr	r1, [fp, #-16]
   65edc:	cmp	r0, r1
   65ee0:	bgt	66164 <__assert_fail@plt+0x535ac>
   65ee4:	ldr	r0, [sp, #36]	; 0x24
   65ee8:	ldr	r1, [sp, #48]	; 0x30
   65eec:	ldr	r1, [r1]
   65ef0:	sub	r0, r0, r1
   65ef4:	str	r0, [sp, #20]
   65ef8:	ldr	r0, [sp, #20]
   65efc:	cmp	r0, #0
   65f00:	ble	65fa4 <__assert_fail@plt+0x533ec>
   65f04:	ldr	r0, [sp, #32]
   65f08:	ldr	r1, [fp, #-8]
   65f0c:	ldr	r1, [r1, #28]
   65f10:	cmp	r0, r1
   65f14:	blt	65f68 <__assert_fail@plt+0x533b0>
   65f18:	ldr	r0, [sp, #32]
   65f1c:	ldr	r1, [fp, #-8]
   65f20:	ldr	r1, [r1, #48]	; 0x30
   65f24:	cmp	r0, r1
   65f28:	blt	65f30 <__assert_fail@plt+0x53378>
   65f2c:	b	66164 <__assert_fail@plt+0x535ac>
   65f30:	ldr	r0, [fp, #-8]
   65f34:	ldr	r1, [sp, #32]
   65f38:	add	r1, r1, #1
   65f3c:	bl	653a4 <__assert_fail@plt+0x527ec>
   65f40:	str	r0, [fp, #-44]	; 0xffffffd4
   65f44:	ldr	r0, [fp, #-44]	; 0xffffffd4
   65f48:	cmp	r0, #0
   65f4c:	beq	65f5c <__assert_fail@plt+0x533a4>
   65f50:	ldr	r0, [fp, #-44]	; 0xffffffd4
   65f54:	str	r0, [fp, #-4]
   65f58:	b	66180 <__assert_fail@plt+0x535c8>
   65f5c:	ldr	r0, [fp, #-8]
   65f60:	ldr	r0, [r0, #4]
   65f64:	str	r0, [fp, #-32]	; 0xffffffe0
   65f68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   65f6c:	ldr	r1, [sp, #32]
   65f70:	add	r2, r1, #1
   65f74:	str	r2, [sp, #32]
   65f78:	add	r0, r0, r1
   65f7c:	ldrb	r0, [r0]
   65f80:	ldr	r1, [fp, #-32]	; 0xffffffe0
   65f84:	ldr	r2, [sp, #36]	; 0x24
   65f88:	sub	r2, r2, #1
   65f8c:	add	r1, r1, r2
   65f90:	ldrb	r1, [r1]
   65f94:	cmp	r0, r1
   65f98:	beq	65fa0 <__assert_fail@plt+0x533e8>
   65f9c:	b	66164 <__assert_fail@plt+0x535ac>
   65fa0:	b	65fa4 <__assert_fail@plt+0x533ec>
   65fa4:	ldr	r0, [fp, #-8]
   65fa8:	ldr	r0, [r0, #100]	; 0x64
   65fac:	ldr	r1, [sp, #36]	; 0x24
   65fb0:	add	r0, r0, r1, lsl #2
   65fb4:	ldr	r0, [r0]
   65fb8:	movw	r1, #0
   65fbc:	cmp	r0, r1
   65fc0:	bne	65fc8 <__assert_fail@plt+0x53410>
   65fc4:	b	66154 <__assert_fail@plt+0x5359c>
   65fc8:	ldr	r0, [fp, #-8]
   65fcc:	ldr	r0, [r0, #100]	; 0x64
   65fd0:	ldr	r1, [sp, #36]	; 0x24
   65fd4:	add	r0, r0, r1, lsl #2
   65fd8:	ldr	r0, [r0]
   65fdc:	add	r0, r0, #4
   65fe0:	str	r0, [sp, #16]
   65fe4:	ldr	r0, [fp, #-20]	; 0xffffffec
   65fe8:	ldr	r1, [sp, #16]
   65fec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   65ff0:	movw	r3, #9
   65ff4:	bl	667d0 <__assert_fail@plt+0x53c18>
   65ff8:	str	r0, [sp, #24]
   65ffc:	ldr	r0, [sp, #24]
   66000:	cmn	r0, #1
   66004:	bne	6600c <__assert_fail@plt+0x53454>
   66008:	b	66154 <__assert_fail@plt+0x5359c>
   6600c:	ldr	r0, [sp, #48]	; 0x30
   66010:	ldr	r0, [r0, #8]
   66014:	movw	r1, #0
   66018:	cmp	r0, r1
   6601c:	bne	66068 <__assert_fail@plt+0x534b0>
   66020:	ldr	r0, [sp, #36]	; 0x24
   66024:	ldr	r1, [sp, #48]	; 0x30
   66028:	ldr	r1, [r1]
   6602c:	sub	r0, r0, r1
   66030:	add	r1, r0, #1
   66034:	movw	r0, #12
   66038:	bl	4e0e0 <__assert_fail@plt+0x3b528>
   6603c:	ldr	r1, [sp, #48]	; 0x30
   66040:	str	r0, [r1, #8]
   66044:	ldr	r0, [sp, #48]	; 0x30
   66048:	ldr	r0, [r0, #8]
   6604c:	movw	r1, #0
   66050:	cmp	r0, r1
   66054:	bne	66064 <__assert_fail@plt+0x534ac>
   66058:	movw	r0, #12
   6605c:	str	r0, [fp, #-4]
   66060:	b	66180 <__assert_fail@plt+0x535c8>
   66064:	b	66068 <__assert_fail@plt+0x534b0>
   66068:	ldr	r0, [fp, #-8]
   6606c:	ldr	r1, [sp, #48]	; 0x30
   66070:	ldr	r1, [r1, #8]
   66074:	ldr	r2, [sp, #48]	; 0x30
   66078:	ldr	r2, [r2, #4]
   6607c:	ldr	r3, [sp, #48]	; 0x30
   66080:	ldr	r3, [r3]
   66084:	ldr	ip, [sp, #24]
   66088:	ldr	lr, [sp, #36]	; 0x24
   6608c:	str	ip, [sp]
   66090:	str	lr, [sp, #4]
   66094:	movw	ip, #9
   66098:	str	ip, [sp, #8]
   6609c:	bl	66888 <__assert_fail@plt+0x53cd0>
   660a0:	str	r0, [fp, #-44]	; 0xffffffd4
   660a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   660a8:	cmp	r0, #1
   660ac:	bne	660b4 <__assert_fail@plt+0x534fc>
   660b0:	b	66154 <__assert_fail@plt+0x5359c>
   660b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   660b8:	cmp	r0, #0
   660bc:	beq	660cc <__assert_fail@plt+0x53514>
   660c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   660c4:	str	r0, [fp, #-4]
   660c8:	b	66180 <__assert_fail@plt+0x535c8>
   660cc:	ldr	r0, [sp, #48]	; 0x30
   660d0:	ldr	r1, [sp, #24]
   660d4:	ldr	r2, [sp, #36]	; 0x24
   660d8:	bl	66fc0 <__assert_fail@plt+0x54408>
   660dc:	str	r0, [sp, #44]	; 0x2c
   660e0:	ldr	r0, [sp, #44]	; 0x2c
   660e4:	movw	r1, #0
   660e8:	cmp	r0, r1
   660ec:	bne	660fc <__assert_fail@plt+0x53544>
   660f0:	movw	r0, #12
   660f4:	str	r0, [fp, #-4]
   660f8:	b	66180 <__assert_fail@plt+0x535c8>
   660fc:	ldr	r0, [fp, #-8]
   66100:	ldr	r1, [sp, #48]	; 0x30
   66104:	ldr	r2, [sp, #44]	; 0x2c
   66108:	ldr	r3, [fp, #-12]
   6610c:	ldr	ip, [fp, #-16]
   66110:	str	ip, [sp]
   66114:	bl	666dc <__assert_fail@plt+0x53b24>
   66118:	str	r0, [fp, #-44]	; 0xffffffd4
   6611c:	ldr	r0, [fp, #-8]
   66120:	ldr	r0, [r0, #4]
   66124:	str	r0, [fp, #-32]	; 0xffffffe0
   66128:	ldr	r0, [fp, #-44]	; 0xffffffd4
   6612c:	cmp	r0, #1
   66130:	bne	66138 <__assert_fail@plt+0x53580>
   66134:	b	66154 <__assert_fail@plt+0x5359c>
   66138:	ldr	r0, [fp, #-44]	; 0xffffffd4
   6613c:	cmp	r0, #0
   66140:	beq	66150 <__assert_fail@plt+0x53598>
   66144:	ldr	r0, [fp, #-44]	; 0xffffffd4
   66148:	str	r0, [fp, #-4]
   6614c:	b	66180 <__assert_fail@plt+0x535c8>
   66150:	b	66154 <__assert_fail@plt+0x5359c>
   66154:	ldr	r0, [sp, #36]	; 0x24
   66158:	add	r0, r0, #1
   6615c:	str	r0, [sp, #36]	; 0x24
   66160:	b	65ed4 <__assert_fail@plt+0x5331c>
   66164:	b	66168 <__assert_fail@plt+0x535b0>
   66168:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6616c:	add	r0, r0, #1
   66170:	str	r0, [fp, #-28]	; 0xffffffe4
   66174:	b	65cb8 <__assert_fail@plt+0x53100>
   66178:	movw	r0, #0
   6617c:	str	r0, [fp, #-4]
   66180:	ldr	r0, [fp, #-4]
   66184:	mov	sp, fp
   66188:	pop	{fp, pc}
   6618c:	push	{fp, lr}
   66190:	mov	fp, sp
   66194:	sub	sp, sp, #32
   66198:	str	r0, [fp, #-8]
   6619c:	str	r1, [fp, #-12]
   661a0:	str	r2, [sp, #16]
   661a4:	ldr	r0, [fp, #-12]
   661a8:	movw	r1, #0
   661ac:	cmp	r0, r1
   661b0:	beq	6623c <__assert_fail@plt+0x53684>
   661b4:	ldr	r0, [fp, #-12]
   661b8:	ldr	r0, [r0, #4]
   661bc:	cmp	r0, #0
   661c0:	ble	6623c <__assert_fail@plt+0x53684>
   661c4:	ldr	r0, [sp, #16]
   661c8:	movw	r1, #0
   661cc:	cmp	r0, r1
   661d0:	beq	6623c <__assert_fail@plt+0x53684>
   661d4:	ldr	r0, [sp, #16]
   661d8:	ldr	r0, [r0, #4]
   661dc:	cmp	r0, #0
   661e0:	ble	6623c <__assert_fail@plt+0x53684>
   661e4:	ldr	r0, [fp, #-12]
   661e8:	ldr	r0, [r0, #4]
   661ec:	ldr	r1, [sp, #16]
   661f0:	ldr	r1, [r1, #4]
   661f4:	add	r0, r0, r1
   661f8:	ldr	r1, [fp, #-8]
   661fc:	str	r0, [r1]
   66200:	ldr	r0, [fp, #-8]
   66204:	ldr	r0, [r0]
   66208:	lsl	r0, r0, #2
   6620c:	bl	527f0 <__assert_fail@plt+0x3fc38>
   66210:	ldr	r1, [fp, #-8]
   66214:	str	r0, [r1, #8]
   66218:	ldr	r0, [fp, #-8]
   6621c:	ldr	r0, [r0, #8]
   66220:	movw	r1, #0
   66224:	cmp	r0, r1
   66228:	bne	66238 <__assert_fail@plt+0x53680>
   6622c:	movw	r0, #12
   66230:	str	r0, [fp, #-4]
   66234:	b	664cc <__assert_fail@plt+0x53914>
   66238:	b	662c8 <__assert_fail@plt+0x53710>
   6623c:	ldr	r0, [fp, #-12]
   66240:	movw	r1, #0
   66244:	cmp	r0, r1
   66248:	beq	66270 <__assert_fail@plt+0x536b8>
   6624c:	ldr	r0, [fp, #-12]
   66250:	ldr	r0, [r0, #4]
   66254:	cmp	r0, #0
   66258:	ble	66270 <__assert_fail@plt+0x536b8>
   6625c:	ldr	r0, [fp, #-8]
   66260:	ldr	r1, [fp, #-12]
   66264:	bl	61f98 <__assert_fail@plt+0x4f3e0>
   66268:	str	r0, [fp, #-4]
   6626c:	b	664cc <__assert_fail@plt+0x53914>
   66270:	ldr	r0, [sp, #16]
   66274:	movw	r1, #0
   66278:	cmp	r0, r1
   6627c:	beq	662a4 <__assert_fail@plt+0x536ec>
   66280:	ldr	r0, [sp, #16]
   66284:	ldr	r0, [r0, #4]
   66288:	cmp	r0, #0
   6628c:	ble	662a4 <__assert_fail@plt+0x536ec>
   66290:	ldr	r0, [fp, #-8]
   66294:	ldr	r1, [sp, #16]
   66298:	bl	61f98 <__assert_fail@plt+0x4f3e0>
   6629c:	str	r0, [fp, #-4]
   662a0:	b	664cc <__assert_fail@plt+0x53914>
   662a4:	ldr	r0, [fp, #-8]
   662a8:	movw	r1, #0
   662ac:	and	r1, r1, #255	; 0xff
   662b0:	movw	r2, #12
   662b4:	bl	12900 <memset@plt>
   662b8:	b	662bc <__assert_fail@plt+0x53704>
   662bc:	movw	r0, #0
   662c0:	str	r0, [fp, #-4]
   662c4:	b	664cc <__assert_fail@plt+0x53914>
   662c8:	movw	r0, #0
   662cc:	str	r0, [sp, #4]
   662d0:	str	r0, [sp, #8]
   662d4:	str	r0, [sp, #12]
   662d8:	ldr	r0, [sp, #12]
   662dc:	ldr	r1, [fp, #-12]
   662e0:	ldr	r1, [r1, #4]
   662e4:	cmp	r0, r1
   662e8:	movw	r0, #0
   662ec:	str	r0, [sp]
   662f0:	bge	66310 <__assert_fail@plt+0x53758>
   662f4:	ldr	r0, [sp, #8]
   662f8:	ldr	r1, [sp, #16]
   662fc:	ldr	r1, [r1, #4]
   66300:	cmp	r0, r1
   66304:	movw	r0, #0
   66308:	movlt	r0, #1
   6630c:	str	r0, [sp]
   66310:	ldr	r0, [sp]
   66314:	tst	r0, #1
   66318:	beq	663f0 <__assert_fail@plt+0x53838>
   6631c:	ldr	r0, [fp, #-12]
   66320:	ldr	r0, [r0, #8]
   66324:	ldr	r1, [sp, #12]
   66328:	ldr	r0, [r0, r1, lsl #2]
   6632c:	ldr	r1, [sp, #16]
   66330:	ldr	r1, [r1, #8]
   66334:	ldr	r2, [sp, #8]
   66338:	add	r1, r1, r2, lsl #2
   6633c:	ldr	r1, [r1]
   66340:	cmp	r0, r1
   66344:	ble	66380 <__assert_fail@plt+0x537c8>
   66348:	ldr	r0, [sp, #16]
   6634c:	ldr	r0, [r0, #8]
   66350:	ldr	r1, [sp, #8]
   66354:	add	r2, r1, #1
   66358:	str	r2, [sp, #8]
   6635c:	ldr	r0, [r0, r1, lsl #2]
   66360:	ldr	r1, [fp, #-8]
   66364:	ldr	r1, [r1, #8]
   66368:	ldr	r2, [sp, #4]
   6636c:	add	r3, r2, #1
   66370:	str	r3, [sp, #4]
   66374:	add	r1, r1, r2, lsl #2
   66378:	str	r0, [r1]
   6637c:	b	662d8 <__assert_fail@plt+0x53720>
   66380:	ldr	r0, [fp, #-12]
   66384:	ldr	r0, [r0, #8]
   66388:	ldr	r1, [sp, #12]
   6638c:	ldr	r0, [r0, r1, lsl #2]
   66390:	ldr	r1, [sp, #16]
   66394:	ldr	r1, [r1, #8]
   66398:	ldr	r2, [sp, #8]
   6639c:	add	r1, r1, r2, lsl #2
   663a0:	ldr	r1, [r1]
   663a4:	cmp	r0, r1
   663a8:	bne	663b8 <__assert_fail@plt+0x53800>
   663ac:	ldr	r0, [sp, #8]
   663b0:	add	r0, r0, #1
   663b4:	str	r0, [sp, #8]
   663b8:	ldr	r0, [fp, #-12]
   663bc:	ldr	r0, [r0, #8]
   663c0:	ldr	r1, [sp, #12]
   663c4:	add	r2, r1, #1
   663c8:	str	r2, [sp, #12]
   663cc:	ldr	r0, [r0, r1, lsl #2]
   663d0:	ldr	r1, [fp, #-8]
   663d4:	ldr	r1, [r1, #8]
   663d8:	ldr	r2, [sp, #4]
   663dc:	add	r3, r2, #1
   663e0:	str	r3, [sp, #4]
   663e4:	add	r1, r1, r2, lsl #2
   663e8:	str	r0, [r1]
   663ec:	b	662d8 <__assert_fail@plt+0x53720>
   663f0:	ldr	r0, [sp, #12]
   663f4:	ldr	r1, [fp, #-12]
   663f8:	ldr	r1, [r1, #4]
   663fc:	cmp	r0, r1
   66400:	bge	66454 <__assert_fail@plt+0x5389c>
   66404:	ldr	r0, [fp, #-8]
   66408:	ldr	r0, [r0, #8]
   6640c:	ldr	r1, [sp, #4]
   66410:	add	r0, r0, r1, lsl #2
   66414:	ldr	r1, [fp, #-12]
   66418:	ldr	r2, [r1, #4]
   6641c:	ldr	r1, [r1, #8]
   66420:	ldr	r3, [sp, #12]
   66424:	add	r1, r1, r3, lsl #2
   66428:	sub	r2, r2, r3
   6642c:	lsl	r2, r2, #2
   66430:	bl	125c4 <memcpy@plt>
   66434:	ldr	r0, [fp, #-12]
   66438:	ldr	r0, [r0, #4]
   6643c:	ldr	r1, [sp, #12]
   66440:	sub	r0, r0, r1
   66444:	ldr	r1, [sp, #4]
   66448:	add	r0, r1, r0
   6644c:	str	r0, [sp, #4]
   66450:	b	664b8 <__assert_fail@plt+0x53900>
   66454:	ldr	r0, [sp, #8]
   66458:	ldr	r1, [sp, #16]
   6645c:	ldr	r1, [r1, #4]
   66460:	cmp	r0, r1
   66464:	bge	664b4 <__assert_fail@plt+0x538fc>
   66468:	ldr	r0, [fp, #-8]
   6646c:	ldr	r0, [r0, #8]
   66470:	ldr	r1, [sp, #4]
   66474:	add	r0, r0, r1, lsl #2
   66478:	ldr	r1, [sp, #16]
   6647c:	ldr	r2, [r1, #4]
   66480:	ldr	r1, [r1, #8]
   66484:	ldr	r3, [sp, #8]
   66488:	add	r1, r1, r3, lsl #2
   6648c:	sub	r2, r2, r3
   66490:	lsl	r2, r2, #2
   66494:	bl	125c4 <memcpy@plt>
   66498:	ldr	r0, [sp, #16]
   6649c:	ldr	r0, [r0, #4]
   664a0:	ldr	r1, [sp, #8]
   664a4:	sub	r0, r0, r1
   664a8:	ldr	r1, [sp, #4]
   664ac:	add	r0, r1, r0
   664b0:	str	r0, [sp, #4]
   664b4:	b	664b8 <__assert_fail@plt+0x53900>
   664b8:	ldr	r0, [sp, #4]
   664bc:	ldr	r1, [fp, #-8]
   664c0:	str	r0, [r1, #4]
   664c4:	movw	r0, #0
   664c8:	str	r0, [fp, #-4]
   664cc:	ldr	r0, [fp, #-4]
   664d0:	mov	sp, fp
   664d4:	pop	{fp, pc}
   664d8:	sub	sp, sp, #28
   664dc:	str	r0, [sp, #20]
   664e0:	str	r1, [sp, #16]
   664e4:	ldr	r0, [sp, #20]
   664e8:	ldr	r0, [r0, #108]	; 0x6c
   664ec:	str	r0, [sp, #8]
   664f0:	str	r0, [sp]
   664f4:	movw	r0, #0
   664f8:	str	r0, [sp, #12]
   664fc:	ldr	r0, [sp, #12]
   66500:	ldr	r1, [sp, #8]
   66504:	cmp	r0, r1
   66508:	bge	66568 <__assert_fail@plt+0x539b0>
   6650c:	ldr	r0, [sp, #12]
   66510:	ldr	r1, [sp, #8]
   66514:	add	r0, r0, r1
   66518:	movw	r1, #2
   6651c:	sdiv	r0, r0, r1
   66520:	str	r0, [sp, #4]
   66524:	ldr	r0, [sp, #20]
   66528:	ldr	r0, [r0, #116]	; 0x74
   6652c:	ldr	r1, [sp, #4]
   66530:	movw	r2, #24
   66534:	mul	r1, r1, r2
   66538:	add	r0, r0, r1
   6653c:	ldr	r0, [r0, #4]
   66540:	ldr	r1, [sp, #16]
   66544:	cmp	r0, r1
   66548:	bge	6655c <__assert_fail@plt+0x539a4>
   6654c:	ldr	r0, [sp, #4]
   66550:	add	r0, r0, #1
   66554:	str	r0, [sp, #12]
   66558:	b	66564 <__assert_fail@plt+0x539ac>
   6655c:	ldr	r0, [sp, #4]
   66560:	str	r0, [sp, #8]
   66564:	b	664fc <__assert_fail@plt+0x53944>
   66568:	ldr	r0, [sp, #12]
   6656c:	ldr	r1, [sp]
   66570:	cmp	r0, r1
   66574:	bge	665ac <__assert_fail@plt+0x539f4>
   66578:	ldr	r0, [sp, #20]
   6657c:	ldr	r0, [r0, #116]	; 0x74
   66580:	ldr	r1, [sp, #12]
   66584:	movw	r2, #24
   66588:	mul	r1, r1, r2
   6658c:	add	r0, r0, r1
   66590:	ldr	r0, [r0, #4]
   66594:	ldr	r1, [sp, #16]
   66598:	cmp	r0, r1
   6659c:	bne	665ac <__assert_fail@plt+0x539f4>
   665a0:	ldr	r0, [sp, #12]
   665a4:	str	r0, [sp, #24]
   665a8:	b	665b4 <__assert_fail@plt+0x539fc>
   665ac:	mvn	r0, #0
   665b0:	str	r0, [sp, #24]
   665b4:	ldr	r0, [sp, #24]
   665b8:	add	sp, sp, #28
   665bc:	bx	lr
   665c0:	push	{fp, lr}
   665c4:	mov	fp, sp
   665c8:	sub	sp, sp, #24
   665cc:	str	r0, [fp, #-8]
   665d0:	str	r1, [sp, #12]
   665d4:	ldr	r0, [fp, #-8]
   665d8:	ldr	r0, [r0, #104]	; 0x68
   665dc:	str	r0, [sp, #8]
   665e0:	ldr	r0, [sp, #12]
   665e4:	ldr	r1, [fp, #-8]
   665e8:	ldr	r1, [r1, #36]	; 0x24
   665ec:	cmp	r0, r1
   665f0:	blt	6660c <__assert_fail@plt+0x53a54>
   665f4:	ldr	r0, [fp, #-8]
   665f8:	ldr	r0, [r0, #36]	; 0x24
   665fc:	ldr	r1, [fp, #-8]
   66600:	ldr	r1, [r1, #48]	; 0x30
   66604:	cmp	r0, r1
   66608:	blt	66638 <__assert_fail@plt+0x53a80>
   6660c:	ldr	r0, [sp, #12]
   66610:	ldr	r1, [fp, #-8]
   66614:	ldr	r1, [r1, #28]
   66618:	cmp	r0, r1
   6661c:	blt	66668 <__assert_fail@plt+0x53ab0>
   66620:	ldr	r0, [fp, #-8]
   66624:	ldr	r0, [r0, #28]
   66628:	ldr	r1, [fp, #-8]
   6662c:	ldr	r1, [r1, #48]	; 0x30
   66630:	cmp	r0, r1
   66634:	bge	66668 <__assert_fail@plt+0x53ab0>
   66638:	ldr	r0, [fp, #-8]
   6663c:	ldr	r1, [sp, #12]
   66640:	add	r1, r1, #1
   66644:	bl	653a4 <__assert_fail@plt+0x527ec>
   66648:	str	r0, [sp, #4]
   6664c:	ldr	r0, [sp, #4]
   66650:	cmp	r0, #0
   66654:	beq	66664 <__assert_fail@plt+0x53aac>
   66658:	ldr	r0, [sp, #4]
   6665c:	str	r0, [fp, #-4]
   66660:	b	666d0 <__assert_fail@plt+0x53b18>
   66664:	b	66668 <__assert_fail@plt+0x53ab0>
   66668:	ldr	r0, [sp, #8]
   6666c:	ldr	r1, [sp, #12]
   66670:	cmp	r0, r1
   66674:	bge	666c8 <__assert_fail@plt+0x53b10>
   66678:	ldr	r0, [fp, #-8]
   6667c:	ldr	r0, [r0, #100]	; 0x64
   66680:	movw	r1, #0
   66684:	cmp	r0, r1
   66688:	beq	66690 <__assert_fail@plt+0x53ad8>
   6668c:	b	66690 <__assert_fail@plt+0x53ad8>
   66690:	ldr	r0, [fp, #-8]
   66694:	ldr	r0, [r0, #100]	; 0x64
   66698:	ldr	r1, [sp, #8]
   6669c:	add	r0, r0, r1, lsl #2
   666a0:	add	r0, r0, #4
   666a4:	ldr	r2, [sp, #12]
   666a8:	sub	r1, r2, r1
   666ac:	lsl	r2, r1, #2
   666b0:	movw	r1, #0
   666b4:	and	r1, r1, #255	; 0xff
   666b8:	bl	12900 <memset@plt>
   666bc:	ldr	r0, [sp, #12]
   666c0:	ldr	r1, [fp, #-8]
   666c4:	str	r0, [r1, #104]	; 0x68
   666c8:	movw	r0, #0
   666cc:	str	r0, [fp, #-4]
   666d0:	ldr	r0, [fp, #-4]
   666d4:	mov	sp, fp
   666d8:	pop	{fp, pc}
   666dc:	push	{r4, sl, fp, lr}
   666e0:	add	fp, sp, #8
   666e4:	sub	sp, sp, #48	; 0x30
   666e8:	ldr	ip, [fp, #8]
   666ec:	str	r0, [fp, #-16]
   666f0:	str	r1, [fp, #-20]	; 0xffffffec
   666f4:	str	r2, [fp, #-24]	; 0xffffffe8
   666f8:	str	r3, [sp, #28]
   666fc:	ldr	r0, [fp, #-16]
   66700:	ldr	r1, [fp, #-24]	; 0xffffffe8
   66704:	add	r1, r1, #8
   66708:	ldr	r2, [fp, #-24]	; 0xffffffe8
   6670c:	ldr	r2, [r2]
   66710:	ldr	r3, [fp, #-24]	; 0xffffffe8
   66714:	ldr	r3, [r3, #4]
   66718:	ldr	lr, [sp, #28]
   6671c:	ldr	r4, [fp, #8]
   66720:	str	lr, [sp]
   66724:	str	r4, [sp, #4]
   66728:	movw	lr, #8
   6672c:	str	lr, [sp, #8]
   66730:	str	ip, [sp, #16]
   66734:	bl	66888 <__assert_fail@plt+0x53cd0>
   66738:	str	r0, [sp, #24]
   6673c:	ldr	r0, [sp, #24]
   66740:	cmp	r0, #0
   66744:	beq	66754 <__assert_fail@plt+0x53b9c>
   66748:	ldr	r0, [sp, #24]
   6674c:	str	r0, [fp, #-12]
   66750:	b	667c4 <__assert_fail@plt+0x53c0c>
   66754:	ldr	r0, [fp, #-16]
   66758:	ldr	r1, [sp, #28]
   6675c:	ldr	r2, [fp, #8]
   66760:	ldr	r3, [fp, #-20]	; 0xffffffec
   66764:	ldr	r3, [r3]
   66768:	ldr	ip, [fp, #-24]	; 0xffffffe8
   6676c:	ldr	ip, [ip, #4]
   66770:	str	ip, [sp]
   66774:	bl	670c4 <__assert_fail@plt+0x5450c>
   66778:	str	r0, [sp, #24]
   6677c:	ldr	r0, [sp, #24]
   66780:	cmp	r0, #0
   66784:	beq	66794 <__assert_fail@plt+0x53bdc>
   66788:	ldr	r0, [sp, #24]
   6678c:	str	r0, [fp, #-12]
   66790:	b	667c4 <__assert_fail@plt+0x53c0c>
   66794:	ldr	r0, [fp, #8]
   66798:	ldr	r1, [fp, #-24]	; 0xffffffe8
   6679c:	ldr	r1, [r1, #4]
   667a0:	add	r0, r0, r1
   667a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   667a8:	ldr	r1, [r1]
   667ac:	sub	r0, r0, r1
   667b0:	str	r0, [sp, #20]
   667b4:	ldr	r0, [fp, #-16]
   667b8:	ldr	r1, [sp, #20]
   667bc:	bl	665c0 <__assert_fail@plt+0x53a08>
   667c0:	str	r0, [fp, #-12]
   667c4:	ldr	r0, [fp, #-12]
   667c8:	sub	sp, fp, #8
   667cc:	pop	{r4, sl, fp, pc}
   667d0:	sub	sp, sp, #32
   667d4:	str	r0, [sp, #24]
   667d8:	str	r1, [sp, #20]
   667dc:	str	r2, [sp, #16]
   667e0:	str	r3, [sp, #12]
   667e4:	movw	r0, #0
   667e8:	str	r0, [sp, #8]
   667ec:	ldr	r0, [sp, #8]
   667f0:	ldr	r1, [sp, #20]
   667f4:	ldr	r1, [r1, #4]
   667f8:	cmp	r0, r1
   667fc:	bge	66874 <__assert_fail@plt+0x53cbc>
   66800:	ldr	r0, [sp, #20]
   66804:	ldr	r0, [r0, #8]
   66808:	ldr	r1, [sp, #8]
   6680c:	ldr	r0, [r0, r1, lsl #2]
   66810:	str	r0, [sp, #4]
   66814:	ldr	r0, [sp, #24]
   66818:	ldr	r0, [r0]
   6681c:	ldr	r1, [sp, #4]
   66820:	add	r0, r0, r1, lsl #3
   66824:	str	r0, [sp]
   66828:	ldr	r0, [sp]
   6682c:	ldr	r0, [r0, #4]
   66830:	and	r0, r0, #255	; 0xff
   66834:	ldr	r1, [sp, #12]
   66838:	cmp	r0, r1
   6683c:	bne	66860 <__assert_fail@plt+0x53ca8>
   66840:	ldr	r0, [sp]
   66844:	ldr	r0, [r0]
   66848:	ldr	r1, [sp, #16]
   6684c:	cmp	r0, r1
   66850:	bne	66860 <__assert_fail@plt+0x53ca8>
   66854:	ldr	r0, [sp, #4]
   66858:	str	r0, [sp, #28]
   6685c:	b	6687c <__assert_fail@plt+0x53cc4>
   66860:	b	66864 <__assert_fail@plt+0x53cac>
   66864:	ldr	r0, [sp, #8]
   66868:	add	r0, r0, #1
   6686c:	str	r0, [sp, #8]
   66870:	b	667ec <__assert_fail@plt+0x53c34>
   66874:	mvn	r0, #0
   66878:	str	r0, [sp, #28]
   6687c:	ldr	r0, [sp, #28]
   66880:	add	sp, sp, #32
   66884:	bx	lr
   66888:	push	{r4, sl, fp, lr}
   6688c:	add	fp, sp, #8
   66890:	sub	sp, sp, #128	; 0x80
   66894:	ldr	ip, [fp, #16]
   66898:	ldr	lr, [fp, #12]
   6689c:	ldr	r4, [fp, #8]
   668a0:	str	r0, [fp, #-16]
   668a4:	str	r1, [fp, #-20]	; 0xffffffec
   668a8:	str	r2, [fp, #-24]	; 0xffffffe8
   668ac:	str	r3, [fp, #-28]	; 0xffffffe4
   668b0:	ldr	r0, [fp, #-16]
   668b4:	ldr	r0, [r0, #84]	; 0x54
   668b8:	str	r0, [fp, #-32]	; 0xffffffe0
   668bc:	mov	r0, #0
   668c0:	str	r0, [fp, #-36]	; 0xffffffdc
   668c4:	str	r0, [fp, #-56]	; 0xffffffc8
   668c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   668cc:	ldr	r0, [r0]
   668d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   668d4:	add	r0, r0, r1, lsl #3
   668d8:	ldr	r0, [r0]
   668dc:	str	r0, [fp, #-40]	; 0xffffffd8
   668e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   668e4:	ldr	r0, [r0, #4]
   668e8:	ldr	r1, [fp, #12]
   668ec:	ldr	r2, [fp, #-16]
   668f0:	ldr	r2, [r2, #120]	; 0x78
   668f4:	add	r1, r1, r2
   668f8:	add	r1, r1, #1
   668fc:	cmp	r0, r1
   66900:	bge	669ec <__assert_fail@plt+0x53e34>
   66904:	ldr	r0, [pc, #1708]	; 66fb8 <__assert_fail@plt+0x54400>
   66908:	ldr	r1, [fp, #-20]	; 0xffffffec
   6690c:	ldr	r1, [r1, #4]
   66910:	str	r1, [sp, #48]	; 0x30
   66914:	ldr	r1, [fp, #12]
   66918:	ldr	r2, [fp, #-16]
   6691c:	ldr	r2, [r2, #120]	; 0x78
   66920:	add	r1, r1, r2
   66924:	add	r1, r1, #1
   66928:	str	r1, [sp, #44]	; 0x2c
   6692c:	ldr	r1, [sp, #48]	; 0x30
   66930:	sub	r0, r0, r1
   66934:	ldr	r1, [sp, #44]	; 0x2c
   66938:	cmp	r0, r1
   6693c:	bge	6694c <__assert_fail@plt+0x53d94>
   66940:	movw	r0, #12
   66944:	str	r0, [fp, #-12]
   66948:	b	66fac <__assert_fail@plt+0x543f4>
   6694c:	ldr	r0, [pc, #1640]	; 66fbc <__assert_fail@plt+0x54404>
   66950:	ldr	r1, [sp, #48]	; 0x30
   66954:	ldr	r2, [sp, #44]	; 0x2c
   66958:	add	r1, r1, r2
   6695c:	str	r1, [sp, #40]	; 0x28
   66960:	ldr	r1, [sp, #40]	; 0x28
   66964:	cmp	r0, r1
   66968:	bcs	66978 <__assert_fail@plt+0x53dc0>
   6696c:	movw	r0, #12
   66970:	str	r0, [fp, #-12]
   66974:	b	66fac <__assert_fail@plt+0x543f4>
   66978:	ldr	r0, [fp, #-20]	; 0xffffffec
   6697c:	ldr	r0, [r0, #8]
   66980:	ldr	r1, [sp, #40]	; 0x28
   66984:	lsl	r1, r1, #2
   66988:	bl	538c8 <__assert_fail@plt+0x40d10>
   6698c:	str	r0, [sp, #52]	; 0x34
   66990:	ldr	r0, [sp, #52]	; 0x34
   66994:	movw	r1, #0
   66998:	cmp	r0, r1
   6699c:	bne	669ac <__assert_fail@plt+0x53df4>
   669a0:	movw	r0, #12
   669a4:	str	r0, [fp, #-12]
   669a8:	b	66fac <__assert_fail@plt+0x543f4>
   669ac:	ldr	r0, [sp, #52]	; 0x34
   669b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   669b4:	str	r0, [r1, #8]
   669b8:	ldr	r0, [sp, #40]	; 0x28
   669bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   669c0:	str	r0, [r1, #4]
   669c4:	ldr	r0, [sp, #52]	; 0x34
   669c8:	ldr	r1, [sp, #48]	; 0x30
   669cc:	add	r0, r0, r1, lsl #2
   669d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   669d4:	ldr	r2, [r2, #4]
   669d8:	sub	r1, r2, r1
   669dc:	lsl	r2, r1, #2
   669e0:	movw	r1, #0
   669e4:	and	r1, r1, #255	; 0xff
   669e8:	bl	12900 <memset@plt>
   669ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   669f0:	ldr	r0, [r0]
   669f4:	cmp	r0, #0
   669f8:	beq	66a0c <__assert_fail@plt+0x53e54>
   669fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   66a00:	ldr	r0, [r0]
   66a04:	str	r0, [sp, #36]	; 0x24
   66a08:	b	66a14 <__assert_fail@plt+0x53e5c>
   66a0c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   66a10:	str	r0, [sp, #36]	; 0x24
   66a14:	ldr	r0, [sp, #36]	; 0x24
   66a18:	str	r0, [fp, #-48]	; 0xffffffd0
   66a1c:	ldr	r0, [fp, #-16]
   66a20:	ldr	r0, [r0, #100]	; 0x64
   66a24:	str	r0, [sp, #60]	; 0x3c
   66a28:	ldr	r0, [fp, #-16]
   66a2c:	ldr	r0, [r0, #40]	; 0x28
   66a30:	str	r0, [fp, #-44]	; 0xffffffd4
   66a34:	ldr	r0, [fp, #-20]	; 0xffffffec
   66a38:	ldr	r0, [r0, #8]
   66a3c:	ldr	r1, [fp, #-16]
   66a40:	str	r0, [r1, #100]	; 0x64
   66a44:	ldr	r0, [fp, #-48]	; 0xffffffd0
   66a48:	ldr	r1, [fp, #-16]
   66a4c:	str	r0, [r1, #40]	; 0x28
   66a50:	ldr	r0, [fp, #-16]
   66a54:	ldr	r1, [fp, #-48]	; 0xffffffd0
   66a58:	sub	r1, r1, #1
   66a5c:	ldr	r2, [fp, #-16]
   66a60:	ldr	r2, [r2, #88]	; 0x58
   66a64:	bl	64998 <__assert_fail@plt+0x51de0>
   66a68:	str	r0, [sp, #56]	; 0x38
   66a6c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   66a70:	ldr	r1, [fp, #-28]	; 0xffffffe4
   66a74:	cmp	r0, r1
   66a78:	bne	66ae0 <__assert_fail@plt+0x53f28>
   66a7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   66a80:	add	r0, sp, #64	; 0x40
   66a84:	bl	60ce4 <__assert_fail@plt+0x4e12c>
   66a88:	str	r0, [fp, #-36]	; 0xffffffdc
   66a8c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   66a90:	cmp	r0, #0
   66a94:	beq	66aa4 <__assert_fail@plt+0x53eec>
   66a98:	ldr	r0, [fp, #-36]	; 0xffffffdc
   66a9c:	str	r0, [fp, #-12]
   66aa0:	b	66fac <__assert_fail@plt+0x543f4>
   66aa4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   66aa8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   66aac:	ldr	r3, [fp, #16]
   66ab0:	add	r1, sp, #64	; 0x40
   66ab4:	bl	6731c <__assert_fail@plt+0x54764>
   66ab8:	str	r0, [fp, #-36]	; 0xffffffdc
   66abc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   66ac0:	cmp	r0, #0
   66ac4:	beq	66adc <__assert_fail@plt+0x53f24>
   66ac8:	ldr	r0, [sp, #72]	; 0x48
   66acc:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   66ad0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   66ad4:	str	r0, [fp, #-12]
   66ad8:	b	66fac <__assert_fail@plt+0x543f4>
   66adc:	b	66b68 <__assert_fail@plt+0x53fb0>
   66ae0:	ldr	r0, [fp, #-16]
   66ae4:	ldr	r0, [r0, #100]	; 0x64
   66ae8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   66aec:	add	r0, r0, r1, lsl #2
   66af0:	ldr	r0, [r0]
   66af4:	str	r0, [fp, #-56]	; 0xffffffc8
   66af8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   66afc:	movw	r1, #0
   66b00:	cmp	r0, r1
   66b04:	beq	66b50 <__assert_fail@plt+0x53f98>
   66b08:	ldr	r0, [fp, #-56]	; 0xffffffc8
   66b0c:	ldrb	r0, [r0, #52]	; 0x34
   66b10:	ubfx	r0, r0, #6, #1
   66b14:	and	r0, r0, #255	; 0xff
   66b18:	cmp	r0, #0
   66b1c:	beq	66b50 <__assert_fail@plt+0x53f98>
   66b20:	ldr	r0, [fp, #-56]	; 0xffffffc8
   66b24:	add	r1, r0, #4
   66b28:	add	r0, sp, #64	; 0x40
   66b2c:	bl	61f98 <__assert_fail@plt+0x4f3e0>
   66b30:	str	r0, [fp, #-36]	; 0xffffffdc
   66b34:	ldr	r0, [fp, #-36]	; 0xffffffdc
   66b38:	cmp	r0, #0
   66b3c:	beq	66b4c <__assert_fail@plt+0x53f94>
   66b40:	ldr	r0, [fp, #-36]	; 0xffffffdc
   66b44:	str	r0, [fp, #-12]
   66b48:	b	66fac <__assert_fail@plt+0x543f4>
   66b4c:	b	66b64 <__assert_fail@plt+0x53fac>
   66b50:	add	r0, sp, #64	; 0x40
   66b54:	movw	r1, #0
   66b58:	and	r1, r1, #255	; 0xff
   66b5c:	movw	r2, #12
   66b60:	bl	12900 <memset@plt>
   66b64:	b	66b68 <__assert_fail@plt+0x53fb0>
   66b68:	ldr	r0, [fp, #-48]	; 0xffffffd0
   66b6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   66b70:	cmp	r0, r1
   66b74:	beq	66ba0 <__assert_fail@plt+0x53fe8>
   66b78:	ldr	r0, [fp, #-56]	; 0xffffffc8
   66b7c:	movw	r1, #0
   66b80:	cmp	r0, r1
   66b84:	beq	66c78 <__assert_fail@plt+0x540c0>
   66b88:	ldr	r0, [fp, #-56]	; 0xffffffc8
   66b8c:	ldrb	r0, [r0, #52]	; 0x34
   66b90:	ubfx	r0, r0, #6, #1
   66b94:	and	r0, r0, #255	; 0xff
   66b98:	cmp	r0, #0
   66b9c:	beq	66c78 <__assert_fail@plt+0x540c0>
   66ba0:	ldr	r0, [sp, #68]	; 0x44
   66ba4:	cmp	r0, #0
   66ba8:	beq	66bfc <__assert_fail@plt+0x54044>
   66bac:	ldr	r0, [fp, #-16]
   66bb0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   66bb4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   66bb8:	ldr	r1, [fp, #16]
   66bbc:	add	ip, sp, #64	; 0x40
   66bc0:	str	r1, [sp, #32]
   66bc4:	mov	r1, ip
   66bc8:	ldr	ip, [sp, #32]
   66bcc:	str	ip, [sp]
   66bd0:	bl	674c0 <__assert_fail@plt+0x54908>
   66bd4:	str	r0, [fp, #-36]	; 0xffffffdc
   66bd8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   66bdc:	cmp	r0, #0
   66be0:	beq	66bf8 <__assert_fail@plt+0x54040>
   66be4:	ldr	r0, [sp, #72]	; 0x48
   66be8:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   66bec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   66bf0:	str	r0, [fp, #-12]
   66bf4:	b	66fac <__assert_fail@plt+0x543f4>
   66bf8:	b	66bfc <__assert_fail@plt+0x54044>
   66bfc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   66c00:	ldr	r3, [sp, #56]	; 0x38
   66c04:	sub	r0, fp, #36	; 0x24
   66c08:	add	r2, sp, #64	; 0x40
   66c0c:	bl	6215c <__assert_fail@plt+0x4f5a4>
   66c10:	str	r0, [fp, #-56]	; 0xffffffc8
   66c14:	ldr	r0, [fp, #-56]	; 0xffffffc8
   66c18:	movw	r1, #0
   66c1c:	cmp	r0, r1
   66c20:	movw	r0, #0
   66c24:	str	r0, [sp, #28]
   66c28:	bne	66c40 <__assert_fail@plt+0x54088>
   66c2c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   66c30:	cmp	r0, #0
   66c34:	movw	r0, #0
   66c38:	movne	r0, #1
   66c3c:	str	r0, [sp, #28]
   66c40:	ldr	r0, [sp, #28]
   66c44:	tst	r0, #1
   66c48:	beq	66c60 <__assert_fail@plt+0x540a8>
   66c4c:	ldr	r0, [sp, #72]	; 0x48
   66c50:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   66c54:	ldr	r0, [fp, #-36]	; 0xffffffdc
   66c58:	str	r0, [fp, #-12]
   66c5c:	b	66fac <__assert_fail@plt+0x543f4>
   66c60:	ldr	r0, [fp, #-56]	; 0xffffffc8
   66c64:	ldr	r1, [fp, #-16]
   66c68:	ldr	r1, [r1, #100]	; 0x64
   66c6c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   66c70:	add	r1, r1, r2, lsl #2
   66c74:	str	r0, [r1]
   66c78:	movw	r0, #0
   66c7c:	str	r0, [fp, #-52]	; 0xffffffcc
   66c80:	ldr	r0, [fp, #-48]	; 0xffffffd0
   66c84:	ldr	r1, [fp, #12]
   66c88:	cmp	r0, r1
   66c8c:	movw	r0, #0
   66c90:	str	r0, [sp, #24]
   66c94:	bge	66cb4 <__assert_fail@plt+0x540fc>
   66c98:	ldr	r0, [fp, #-52]	; 0xffffffcc
   66c9c:	ldr	r1, [fp, #-16]
   66ca0:	ldr	r1, [r1, #120]	; 0x78
   66ca4:	cmp	r0, r1
   66ca8:	movw	r0, #0
   66cac:	movle	r0, #1
   66cb0:	str	r0, [sp, #24]
   66cb4:	ldr	r0, [sp, #24]
   66cb8:	tst	r0, #1
   66cbc:	beq	66ef8 <__assert_fail@plt+0x54340>
   66cc0:	mov	r0, #0
   66cc4:	str	r0, [sp, #68]	; 0x44
   66cc8:	ldr	r0, [fp, #-16]
   66ccc:	ldr	r0, [r0, #100]	; 0x64
   66cd0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   66cd4:	add	r1, r1, #1
   66cd8:	add	r0, r0, r1, lsl #2
   66cdc:	ldr	r0, [r0]
   66ce0:	movw	r1, #0
   66ce4:	cmp	r0, r1
   66ce8:	beq	66d38 <__assert_fail@plt+0x54180>
   66cec:	ldr	r0, [fp, #-16]
   66cf0:	ldr	r0, [r0, #100]	; 0x64
   66cf4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   66cf8:	add	r1, r1, #1
   66cfc:	add	r0, r0, r1, lsl #2
   66d00:	ldr	r0, [r0]
   66d04:	add	r1, r0, #4
   66d08:	add	r0, sp, #64	; 0x40
   66d0c:	bl	616c0 <__assert_fail@plt+0x4eb08>
   66d10:	str	r0, [fp, #-36]	; 0xffffffdc
   66d14:	ldr	r0, [fp, #-36]	; 0xffffffdc
   66d18:	cmp	r0, #0
   66d1c:	beq	66d34 <__assert_fail@plt+0x5417c>
   66d20:	ldr	r0, [sp, #72]	; 0x48
   66d24:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   66d28:	ldr	r0, [fp, #-36]	; 0xffffffdc
   66d2c:	str	r0, [fp, #-12]
   66d30:	b	66fac <__assert_fail@plt+0x543f4>
   66d34:	b	66d38 <__assert_fail@plt+0x54180>
   66d38:	ldr	r0, [fp, #-56]	; 0xffffffc8
   66d3c:	movw	r1, #0
   66d40:	cmp	r0, r1
   66d44:	beq	66d88 <__assert_fail@plt+0x541d0>
   66d48:	ldr	r0, [fp, #-16]
   66d4c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   66d50:	ldr	r2, [fp, #-56]	; 0xffffffc8
   66d54:	add	r2, r2, #16
   66d58:	add	r3, sp, #64	; 0x40
   66d5c:	bl	67890 <__assert_fail@plt+0x54cd8>
   66d60:	str	r0, [fp, #-36]	; 0xffffffdc
   66d64:	ldr	r0, [fp, #-36]	; 0xffffffdc
   66d68:	cmp	r0, #0
   66d6c:	beq	66d84 <__assert_fail@plt+0x541cc>
   66d70:	ldr	r0, [sp, #72]	; 0x48
   66d74:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   66d78:	ldr	r0, [fp, #-36]	; 0xffffffdc
   66d7c:	str	r0, [fp, #-12]
   66d80:	b	66fac <__assert_fail@plt+0x543f4>
   66d84:	b	66d88 <__assert_fail@plt+0x541d0>
   66d88:	ldr	r0, [fp, #-48]	; 0xffffffd0
   66d8c:	add	r0, r0, #1
   66d90:	str	r0, [fp, #-48]	; 0xffffffd0
   66d94:	ldr	r0, [sp, #68]	; 0x44
   66d98:	cmp	r0, #0
   66d9c:	beq	66e28 <__assert_fail@plt+0x54270>
   66da0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   66da4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   66da8:	ldr	r3, [fp, #16]
   66dac:	add	r1, sp, #64	; 0x40
   66db0:	bl	6731c <__assert_fail@plt+0x54764>
   66db4:	str	r0, [fp, #-36]	; 0xffffffdc
   66db8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   66dbc:	cmp	r0, #0
   66dc0:	beq	66dd8 <__assert_fail@plt+0x54220>
   66dc4:	ldr	r0, [sp, #72]	; 0x48
   66dc8:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   66dcc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   66dd0:	str	r0, [fp, #-12]
   66dd4:	b	66fac <__assert_fail@plt+0x543f4>
   66dd8:	ldr	r0, [fp, #-16]
   66ddc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   66de0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   66de4:	ldr	r1, [fp, #16]
   66de8:	add	ip, sp, #64	; 0x40
   66dec:	str	r1, [sp, #20]
   66df0:	mov	r1, ip
   66df4:	ldr	ip, [sp, #20]
   66df8:	str	ip, [sp]
   66dfc:	bl	674c0 <__assert_fail@plt+0x54908>
   66e00:	str	r0, [fp, #-36]	; 0xffffffdc
   66e04:	ldr	r0, [fp, #-36]	; 0xffffffdc
   66e08:	cmp	r0, #0
   66e0c:	beq	66e24 <__assert_fail@plt+0x5426c>
   66e10:	ldr	r0, [sp, #72]	; 0x48
   66e14:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   66e18:	ldr	r0, [fp, #-36]	; 0xffffffdc
   66e1c:	str	r0, [fp, #-12]
   66e20:	b	66fac <__assert_fail@plt+0x543f4>
   66e24:	b	66e28 <__assert_fail@plt+0x54270>
   66e28:	ldr	r0, [fp, #-16]
   66e2c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   66e30:	sub	r1, r1, #1
   66e34:	ldr	r2, [fp, #-16]
   66e38:	ldr	r2, [r2, #88]	; 0x58
   66e3c:	bl	64998 <__assert_fail@plt+0x51de0>
   66e40:	str	r0, [sp, #56]	; 0x38
   66e44:	ldr	r1, [fp, #-32]	; 0xffffffe0
   66e48:	ldr	r3, [sp, #56]	; 0x38
   66e4c:	sub	r0, fp, #36	; 0x24
   66e50:	add	r2, sp, #64	; 0x40
   66e54:	bl	6215c <__assert_fail@plt+0x4f5a4>
   66e58:	str	r0, [fp, #-56]	; 0xffffffc8
   66e5c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   66e60:	movw	r1, #0
   66e64:	cmp	r0, r1
   66e68:	movw	r0, #0
   66e6c:	str	r0, [sp, #16]
   66e70:	bne	66e88 <__assert_fail@plt+0x542d0>
   66e74:	ldr	r0, [fp, #-36]	; 0xffffffdc
   66e78:	cmp	r0, #0
   66e7c:	movw	r0, #0
   66e80:	movne	r0, #1
   66e84:	str	r0, [sp, #16]
   66e88:	ldr	r0, [sp, #16]
   66e8c:	tst	r0, #1
   66e90:	beq	66ea8 <__assert_fail@plt+0x542f0>
   66e94:	ldr	r0, [sp, #72]	; 0x48
   66e98:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   66e9c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   66ea0:	str	r0, [fp, #-12]
   66ea4:	b	66fac <__assert_fail@plt+0x543f4>
   66ea8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   66eac:	ldr	r1, [fp, #-16]
   66eb0:	ldr	r1, [r1, #100]	; 0x64
   66eb4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   66eb8:	add	r1, r1, r2, lsl #2
   66ebc:	str	r0, [r1]
   66ec0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   66ec4:	movw	r1, #0
   66ec8:	cmp	r0, r1
   66ecc:	bne	66ee0 <__assert_fail@plt+0x54328>
   66ed0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   66ed4:	add	r0, r0, #1
   66ed8:	str	r0, [sp, #12]
   66edc:	b	66eec <__assert_fail@plt+0x54334>
   66ee0:	movw	r0, #0
   66ee4:	str	r0, [sp, #12]
   66ee8:	b	66eec <__assert_fail@plt+0x54334>
   66eec:	ldr	r0, [sp, #12]
   66ef0:	str	r0, [fp, #-52]	; 0xffffffcc
   66ef4:	b	66c80 <__assert_fail@plt+0x540c8>
   66ef8:	ldr	r0, [sp, #72]	; 0x48
   66efc:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   66f00:	ldr	r0, [fp, #-16]
   66f04:	ldr	r0, [r0, #100]	; 0x64
   66f08:	ldr	r1, [fp, #12]
   66f0c:	add	r0, r0, r1, lsl #2
   66f10:	ldr	r0, [r0]
   66f14:	movw	r1, #0
   66f18:	cmp	r0, r1
   66f1c:	bne	66f2c <__assert_fail@plt+0x54374>
   66f20:	movw	r0, #0
   66f24:	str	r0, [sp, #8]
   66f28:	b	66f48 <__assert_fail@plt+0x54390>
   66f2c:	ldr	r0, [fp, #-16]
   66f30:	ldr	r0, [r0, #100]	; 0x64
   66f34:	ldr	r1, [fp, #12]
   66f38:	add	r0, r0, r1, lsl #2
   66f3c:	ldr	r0, [r0]
   66f40:	add	r0, r0, #4
   66f44:	str	r0, [sp, #8]
   66f48:	ldr	r0, [sp, #8]
   66f4c:	str	r0, [fp, #-60]	; 0xffffffc4
   66f50:	ldr	r0, [fp, #-48]	; 0xffffffd0
   66f54:	ldr	r1, [fp, #-20]	; 0xffffffec
   66f58:	str	r0, [r1]
   66f5c:	ldr	r0, [sp, #60]	; 0x3c
   66f60:	ldr	r1, [fp, #-16]
   66f64:	str	r0, [r1, #100]	; 0x64
   66f68:	ldr	r0, [fp, #-44]	; 0xffffffd4
   66f6c:	ldr	r1, [fp, #-16]
   66f70:	str	r0, [r1, #40]	; 0x28
   66f74:	ldr	r0, [fp, #-60]	; 0xffffffc4
   66f78:	movw	r1, #0
   66f7c:	cmp	r0, r1
   66f80:	beq	66fa4 <__assert_fail@plt+0x543ec>
   66f84:	ldr	r0, [fp, #-60]	; 0xffffffc4
   66f88:	ldr	r1, [fp, #8]
   66f8c:	bl	6206c <__assert_fail@plt+0x4f4b4>
   66f90:	cmp	r0, #0
   66f94:	beq	66fa4 <__assert_fail@plt+0x543ec>
   66f98:	movw	r0, #0
   66f9c:	str	r0, [fp, #-12]
   66fa0:	b	66fac <__assert_fail@plt+0x543f4>
   66fa4:	movw	r0, #1
   66fa8:	str	r0, [fp, #-12]
   66fac:	ldr	r0, [fp, #-12]
   66fb0:	sub	sp, fp, #8
   66fb4:	pop	{r4, sl, fp, pc}
   66fb8:	svcvc	0x00ffffff
   66fbc:	svccc	0x00ffffff
   66fc0:	push	{fp, lr}
   66fc4:	mov	fp, sp
   66fc8:	sub	sp, sp, #32
   66fcc:	str	r0, [fp, #-8]
   66fd0:	str	r1, [fp, #-12]
   66fd4:	str	r2, [sp, #16]
   66fd8:	ldr	r0, [fp, #-8]
   66fdc:	ldr	r0, [r0, #16]
   66fe0:	ldr	r1, [fp, #-8]
   66fe4:	ldr	r1, [r1, #12]
   66fe8:	cmp	r0, r1
   66fec:	bne	67050 <__assert_fail@plt+0x54498>
   66ff0:	ldr	r0, [fp, #-8]
   66ff4:	ldr	r0, [r0, #12]
   66ff8:	mov	r1, #1
   66ffc:	orr	r0, r1, r0, lsl #1
   67000:	str	r0, [sp, #8]
   67004:	ldr	r0, [fp, #-8]
   67008:	ldr	r0, [r0, #20]
   6700c:	ldr	r1, [sp, #8]
   67010:	lsl	r1, r1, #2
   67014:	bl	538c8 <__assert_fail@plt+0x40d10>
   67018:	str	r0, [sp, #4]
   6701c:	ldr	r0, [sp, #4]
   67020:	movw	r1, #0
   67024:	cmp	r0, r1
   67028:	bne	67038 <__assert_fail@plt+0x54480>
   6702c:	movw	r0, #0
   67030:	str	r0, [fp, #-4]
   67034:	b	670b8 <__assert_fail@plt+0x54500>
   67038:	ldr	r0, [sp, #4]
   6703c:	ldr	r1, [fp, #-8]
   67040:	str	r0, [r1, #20]
   67044:	ldr	r0, [sp, #8]
   67048:	ldr	r1, [fp, #-8]
   6704c:	str	r0, [r1, #12]
   67050:	movw	r0, #1
   67054:	movw	r1, #20
   67058:	bl	4e0e0 <__assert_fail@plt+0x3b528>
   6705c:	str	r0, [sp, #12]
   67060:	ldr	r0, [sp, #12]
   67064:	movw	r1, #0
   67068:	cmp	r0, r1
   6706c:	beq	670b0 <__assert_fail@plt+0x544f8>
   67070:	ldr	r0, [sp, #12]
   67074:	ldr	r1, [fp, #-8]
   67078:	ldr	r2, [r1, #16]
   6707c:	ldr	r1, [r1, #20]
   67080:	add	r1, r1, r2, lsl #2
   67084:	str	r0, [r1]
   67088:	ldr	r0, [fp, #-12]
   6708c:	ldr	r1, [sp, #12]
   67090:	str	r0, [r1]
   67094:	ldr	r0, [sp, #16]
   67098:	ldr	r1, [sp, #12]
   6709c:	str	r0, [r1, #4]
   670a0:	ldr	r0, [fp, #-8]
   670a4:	ldr	r1, [r0, #16]
   670a8:	add	r1, r1, #1
   670ac:	str	r1, [r0, #16]
   670b0:	ldr	r0, [sp, #12]
   670b4:	str	r0, [fp, #-4]
   670b8:	ldr	r0, [fp, #-4]
   670bc:	mov	sp, fp
   670c0:	pop	{fp, pc}
   670c4:	push	{fp, lr}
   670c8:	mov	fp, sp
   670cc:	sub	sp, sp, #24
   670d0:	ldr	ip, [fp, #8]
   670d4:	str	r0, [fp, #-8]
   670d8:	str	r1, [sp, #12]
   670dc:	str	r2, [sp, #8]
   670e0:	str	r3, [sp, #4]
   670e4:	ldr	r0, [fp, #-8]
   670e8:	ldr	r0, [r0, #108]	; 0x6c
   670ec:	ldr	r1, [fp, #-8]
   670f0:	ldr	r1, [r1, #112]	; 0x70
   670f4:	cmp	r0, r1
   670f8:	blt	67188 <__assert_fail@plt+0x545d0>
   670fc:	ldr	r0, [fp, #-8]
   67100:	ldr	r1, [r0, #112]	; 0x70
   67104:	ldr	r0, [r0, #116]	; 0x74
   67108:	lsl	r1, r1, #1
   6710c:	movw	r2, #24
   67110:	mul	r1, r1, r2
   67114:	bl	538c8 <__assert_fail@plt+0x40d10>
   67118:	str	r0, [sp]
   6711c:	ldr	r0, [sp]
   67120:	movw	r1, #0
   67124:	cmp	r0, r1
   67128:	bne	67144 <__assert_fail@plt+0x5458c>
   6712c:	ldr	r0, [fp, #-8]
   67130:	ldr	r0, [r0, #116]	; 0x74
   67134:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   67138:	movw	r0, #12
   6713c:	str	r0, [fp, #-4]
   67140:	b	67310 <__assert_fail@plt+0x54758>
   67144:	ldr	r0, [sp]
   67148:	ldr	r1, [fp, #-8]
   6714c:	str	r0, [r1, #116]	; 0x74
   67150:	ldr	r0, [fp, #-8]
   67154:	ldr	r1, [r0, #108]	; 0x6c
   67158:	ldr	r2, [r0, #112]	; 0x70
   6715c:	ldr	r0, [r0, #116]	; 0x74
   67160:	add	r1, r1, r1, lsl #1
   67164:	add	r0, r0, r1, lsl #3
   67168:	add	r1, r2, r2, lsl #1
   6716c:	lsl	r2, r1, #3
   67170:	mov	r1, #0
   67174:	bl	12900 <memset@plt>
   67178:	ldr	r1, [fp, #-8]
   6717c:	ldr	r2, [r1, #112]	; 0x70
   67180:	lsl	r2, r2, #1
   67184:	str	r2, [r1, #112]	; 0x70
   67188:	ldr	r0, [fp, #-8]
   6718c:	ldr	r0, [r0, #108]	; 0x6c
   67190:	cmp	r0, #0
   67194:	ble	671f0 <__assert_fail@plt+0x54638>
   67198:	ldr	r0, [fp, #-8]
   6719c:	ldr	r0, [r0, #116]	; 0x74
   671a0:	ldr	r1, [fp, #-8]
   671a4:	ldr	r1, [r1, #108]	; 0x6c
   671a8:	sub	r1, r1, #1
   671ac:	movw	r2, #24
   671b0:	mul	r1, r1, r2
   671b4:	add	r0, r0, r1
   671b8:	ldr	r0, [r0, #4]
   671bc:	ldr	r1, [sp, #8]
   671c0:	cmp	r0, r1
   671c4:	bne	671f0 <__assert_fail@plt+0x54638>
   671c8:	ldr	r0, [fp, #-8]
   671cc:	ldr	r0, [r0, #116]	; 0x74
   671d0:	ldr	r1, [fp, #-8]
   671d4:	ldr	r1, [r1, #108]	; 0x6c
   671d8:	sub	r1, r1, #1
   671dc:	movw	r2, #24
   671e0:	mul	r1, r1, r2
   671e4:	add	r0, r0, r1
   671e8:	movw	r1, #1
   671ec:	strb	r1, [r0, #20]
   671f0:	ldr	r0, [sp, #12]
   671f4:	ldr	r1, [fp, #-8]
   671f8:	ldr	r1, [r1, #116]	; 0x74
   671fc:	ldr	r2, [fp, #-8]
   67200:	ldr	r2, [r2, #108]	; 0x6c
   67204:	movw	r3, #24
   67208:	mul	r2, r2, r3
   6720c:	add	r1, r1, r2
   67210:	str	r0, [r1]
   67214:	ldr	r0, [sp, #8]
   67218:	ldr	r1, [fp, #-8]
   6721c:	ldr	r1, [r1, #116]	; 0x74
   67220:	ldr	r2, [fp, #-8]
   67224:	ldr	r2, [r2, #108]	; 0x6c
   67228:	mul	r2, r2, r3
   6722c:	add	r1, r1, r2
   67230:	str	r0, [r1, #4]
   67234:	ldr	r0, [sp, #4]
   67238:	ldr	r1, [fp, #-8]
   6723c:	ldr	r1, [r1, #116]	; 0x74
   67240:	ldr	r2, [fp, #-8]
   67244:	ldr	r2, [r2, #108]	; 0x6c
   67248:	mul	r2, r2, r3
   6724c:	add	r1, r1, r2
   67250:	str	r0, [r1, #8]
   67254:	ldr	r0, [fp, #8]
   67258:	ldr	r1, [fp, #-8]
   6725c:	ldr	r1, [r1, #116]	; 0x74
   67260:	ldr	r2, [fp, #-8]
   67264:	ldr	r2, [r2, #108]	; 0x6c
   67268:	mul	r2, r2, r3
   6726c:	add	r1, r1, r2
   67270:	str	r0, [r1, #12]
   67274:	ldr	r0, [sp, #4]
   67278:	ldr	r1, [fp, #8]
   6727c:	cmp	r0, r1
   67280:	movw	r0, #0
   67284:	moveq	r0, #1
   67288:	tst	r0, #1
   6728c:	mvn	r0, #0
   67290:	moveq	r0, #0
   67294:	ldr	r1, [fp, #-8]
   67298:	ldr	r1, [r1, #116]	; 0x74
   6729c:	ldr	r2, [fp, #-8]
   672a0:	ldr	r2, [r2, #108]	; 0x6c
   672a4:	mul	r2, r2, r3
   672a8:	add	r1, r1, r2
   672ac:	str	r0, [r1, #16]
   672b0:	ldr	r0, [fp, #-8]
   672b4:	ldr	r0, [r0, #116]	; 0x74
   672b8:	ldr	r1, [fp, #-8]
   672bc:	ldr	r2, [r1, #108]	; 0x6c
   672c0:	add	ip, r2, #1
   672c4:	str	ip, [r1, #108]	; 0x6c
   672c8:	mul	r1, r2, r3
   672cc:	add	r0, r0, r1
   672d0:	movw	r1, #0
   672d4:	strb	r1, [r0, #20]
   672d8:	ldr	r0, [fp, #-8]
   672dc:	ldr	r0, [r0, #120]	; 0x78
   672e0:	ldr	r1, [fp, #8]
   672e4:	ldr	r2, [sp, #4]
   672e8:	sub	r1, r1, r2
   672ec:	cmp	r0, r1
   672f0:	bge	67308 <__assert_fail@plt+0x54750>
   672f4:	ldr	r0, [fp, #8]
   672f8:	ldr	r1, [sp, #4]
   672fc:	sub	r0, r0, r1
   67300:	ldr	r1, [fp, #-8]
   67304:	str	r0, [r1, #120]	; 0x78
   67308:	movw	r0, #0
   6730c:	str	r0, [fp, #-4]
   67310:	ldr	r0, [fp, #-4]
   67314:	mov	sp, fp
   67318:	pop	{fp, pc}
   6731c:	push	{fp, lr}
   67320:	mov	fp, sp
   67324:	sub	sp, sp, #64	; 0x40
   67328:	str	r0, [fp, #-8]
   6732c:	str	r1, [fp, #-12]
   67330:	str	r2, [fp, #-16]
   67334:	str	r3, [fp, #-20]	; 0xffffffec
   67338:	ldr	r0, [fp, #-12]
   6733c:	ldr	r0, [r0, #4]
   67340:	cmp	r0, #0
   67344:	beq	6734c <__assert_fail@plt+0x54794>
   67348:	b	6734c <__assert_fail@plt+0x54794>
   6734c:	ldr	r0, [fp, #-12]
   67350:	ldr	r1, [r0, #4]
   67354:	add	r0, sp, #20
   67358:	bl	61148 <__assert_fail@plt+0x4e590>
   6735c:	str	r0, [fp, #-24]	; 0xffffffe8
   67360:	ldr	r0, [fp, #-24]	; 0xffffffe8
   67364:	cmp	r0, #0
   67368:	beq	67378 <__assert_fail@plt+0x547c0>
   6736c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   67370:	str	r0, [fp, #-4]
   67374:	b	674b4 <__assert_fail@plt+0x548fc>
   67378:	movw	r0, #0
   6737c:	str	r0, [fp, #-28]	; 0xffffffe4
   67380:	ldr	r0, [fp, #-28]	; 0xffffffe4
   67384:	ldr	r1, [fp, #-12]
   67388:	ldr	r1, [r1, #4]
   6738c:	cmp	r0, r1
   67390:	bge	67484 <__assert_fail@plt+0x548cc>
   67394:	ldr	r0, [fp, #-12]
   67398:	ldr	r0, [r0, #8]
   6739c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   673a0:	add	r0, r0, r1, lsl #2
   673a4:	ldr	r0, [r0]
   673a8:	str	r0, [sp, #16]
   673ac:	ldr	r0, [fp, #-8]
   673b0:	ldr	r0, [r0, #24]
   673b4:	ldr	r1, [sp, #16]
   673b8:	movw	r2, #12
   673bc:	mul	r1, r1, r2
   673c0:	add	r0, r0, r1
   673c4:	str	r0, [sp, #12]
   673c8:	ldr	r0, [fp, #-8]
   673cc:	ldr	r1, [sp, #12]
   673d0:	ldr	r2, [fp, #-16]
   673d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   673d8:	bl	667d0 <__assert_fail@plt+0x53c18>
   673dc:	str	r0, [sp, #32]
   673e0:	ldr	r0, [sp, #32]
   673e4:	cmn	r0, #1
   673e8:	bne	67420 <__assert_fail@plt+0x54868>
   673ec:	ldr	r1, [sp, #12]
   673f0:	add	r0, sp, #20
   673f4:	bl	616c0 <__assert_fail@plt+0x4eb08>
   673f8:	str	r0, [fp, #-24]	; 0xffffffe8
   673fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   67400:	cmp	r0, #0
   67404:	beq	6741c <__assert_fail@plt+0x54864>
   67408:	ldr	r0, [sp, #28]
   6740c:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   67410:	ldr	r0, [fp, #-24]	; 0xffffffe8
   67414:	str	r0, [fp, #-4]
   67418:	b	674b4 <__assert_fail@plt+0x548fc>
   6741c:	b	67470 <__assert_fail@plt+0x548b8>
   67420:	ldr	r0, [fp, #-8]
   67424:	ldr	r2, [sp, #16]
   67428:	ldr	r3, [fp, #-16]
   6742c:	ldr	r1, [fp, #-20]	; 0xffffffec
   67430:	add	ip, sp, #20
   67434:	str	r1, [sp, #8]
   67438:	mov	r1, ip
   6743c:	ldr	ip, [sp, #8]
   67440:	str	ip, [sp]
   67444:	bl	67b7c <__assert_fail@plt+0x54fc4>
   67448:	str	r0, [fp, #-24]	; 0xffffffe8
   6744c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   67450:	cmp	r0, #0
   67454:	beq	6746c <__assert_fail@plt+0x548b4>
   67458:	ldr	r0, [sp, #28]
   6745c:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   67460:	ldr	r0, [fp, #-24]	; 0xffffffe8
   67464:	str	r0, [fp, #-4]
   67468:	b	674b4 <__assert_fail@plt+0x548fc>
   6746c:	b	67470 <__assert_fail@plt+0x548b8>
   67470:	b	67474 <__assert_fail@plt+0x548bc>
   67474:	ldr	r0, [fp, #-28]	; 0xffffffe4
   67478:	add	r0, r0, #1
   6747c:	str	r0, [fp, #-28]	; 0xffffffe4
   67480:	b	67380 <__assert_fail@plt+0x547c8>
   67484:	ldr	r0, [fp, #-12]
   67488:	ldr	r0, [r0, #8]
   6748c:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   67490:	ldr	r0, [fp, #-12]
   67494:	ldr	r1, [sp, #20]
   67498:	str	r1, [r0]
   6749c:	ldr	r1, [sp, #24]
   674a0:	str	r1, [r0, #4]
   674a4:	ldr	r1, [sp, #28]
   674a8:	str	r1, [r0, #8]
   674ac:	movw	r0, #0
   674b0:	str	r0, [fp, #-4]
   674b4:	ldr	r0, [fp, #-4]
   674b8:	mov	sp, fp
   674bc:	pop	{fp, pc}
   674c0:	push	{fp, lr}
   674c4:	mov	fp, sp
   674c8:	sub	sp, sp, #112	; 0x70
   674cc:	ldr	ip, [fp, #8]
   674d0:	str	r0, [fp, #-8]
   674d4:	str	r1, [fp, #-12]
   674d8:	str	r2, [fp, #-16]
   674dc:	str	r3, [fp, #-20]	; 0xffffffec
   674e0:	ldr	r0, [fp, #-8]
   674e4:	ldr	r0, [r0, #84]	; 0x54
   674e8:	str	r0, [fp, #-24]	; 0xffffffe8
   674ec:	ldr	r0, [fp, #-8]
   674f0:	ldr	r1, [fp, #-16]
   674f4:	str	ip, [sp, #28]
   674f8:	bl	664d8 <__assert_fail@plt+0x53920>
   674fc:	str	r0, [fp, #-32]	; 0xffffffe0
   67500:	ldr	r0, [fp, #-32]	; 0xffffffe0
   67504:	cmn	r0, #1
   67508:	bne	67518 <__assert_fail@plt+0x54960>
   6750c:	movw	r0, #0
   67510:	str	r0, [fp, #-4]
   67514:	b	67884 <__assert_fail@plt+0x54ccc>
   67518:	b	6751c <__assert_fail@plt+0x54964>
   6751c:	ldr	r0, [fp, #-8]
   67520:	ldr	r0, [r0, #116]	; 0x74
   67524:	ldr	r1, [fp, #-32]	; 0xffffffe0
   67528:	movw	r2, #24
   6752c:	mul	r1, r1, r2
   67530:	add	r0, r0, r1
   67534:	str	r0, [fp, #-36]	; 0xffffffdc
   67538:	ldr	r0, [fp, #-12]
   6753c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   67540:	ldr	r1, [r1]
   67544:	bl	6206c <__assert_fail@plt+0x4f4b4>
   67548:	cmp	r0, #0
   6754c:	bne	67554 <__assert_fail@plt+0x5499c>
   67550:	b	67864 <__assert_fail@plt+0x54cac>
   67554:	ldr	r0, [fp, #-16]
   67558:	ldr	r1, [fp, #-36]	; 0xffffffdc
   6755c:	ldr	r1, [r1, #12]
   67560:	add	r0, r0, r1
   67564:	ldr	r1, [fp, #-36]	; 0xffffffdc
   67568:	ldr	r1, [r1, #8]
   6756c:	sub	r0, r0, r1
   67570:	str	r0, [fp, #-40]	; 0xffffffd8
   67574:	ldr	r0, [fp, #-40]	; 0xffffffd8
   67578:	ldr	r1, [fp, #-16]
   6757c:	cmp	r0, r1
   67580:	bne	676a4 <__assert_fail@plt+0x54aec>
   67584:	ldr	r0, [fp, #-24]	; 0xffffffe8
   67588:	ldr	r0, [r0, #20]
   6758c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   67590:	ldr	r1, [r1]
   67594:	movw	r2, #12
   67598:	mul	r1, r1, r2
   6759c:	add	r0, r0, r1
   675a0:	ldr	r0, [r0, #8]
   675a4:	ldr	r0, [r0]
   675a8:	str	r0, [fp, #-44]	; 0xffffffd4
   675ac:	ldr	r0, [fp, #-12]
   675b0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   675b4:	bl	6206c <__assert_fail@plt+0x4f4b4>
   675b8:	cmp	r0, #0
   675bc:	beq	675c4 <__assert_fail@plt+0x54a0c>
   675c0:	b	67864 <__assert_fail@plt+0x54cac>
   675c4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   675c8:	add	r0, sp, #56	; 0x38
   675cc:	bl	60ce4 <__assert_fail@plt+0x4e12c>
   675d0:	str	r0, [fp, #-28]	; 0xffffffe4
   675d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   675d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   675dc:	ldr	r3, [fp, #8]
   675e0:	add	r1, sp, #56	; 0x38
   675e4:	bl	6731c <__assert_fail@plt+0x54764>
   675e8:	str	r0, [sp, #52]	; 0x34
   675ec:	ldr	r0, [fp, #-12]
   675f0:	add	r1, sp, #56	; 0x38
   675f4:	bl	616c0 <__assert_fail@plt+0x4eb08>
   675f8:	str	r0, [sp, #48]	; 0x30
   675fc:	ldr	r0, [sp, #64]	; 0x40
   67600:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   67604:	ldr	r0, [fp, #-28]	; 0xffffffe4
   67608:	cmp	r0, #0
   6760c:	movw	r0, #1
   67610:	str	r0, [sp, #24]
   67614:	bne	67640 <__assert_fail@plt+0x54a88>
   67618:	ldr	r0, [sp, #52]	; 0x34
   6761c:	cmp	r0, #0
   67620:	movw	r0, #1
   67624:	str	r0, [sp, #24]
   67628:	bne	67640 <__assert_fail@plt+0x54a88>
   6762c:	ldr	r0, [sp, #48]	; 0x30
   67630:	cmp	r0, #0
   67634:	movw	r0, #0
   67638:	movne	r0, #1
   6763c:	str	r0, [sp, #24]
   67640:	ldr	r0, [sp, #24]
   67644:	tst	r0, #1
   67648:	beq	676a0 <__assert_fail@plt+0x54ae8>
   6764c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   67650:	cmp	r0, #0
   67654:	beq	67664 <__assert_fail@plt+0x54aac>
   67658:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6765c:	str	r0, [sp, #20]
   67660:	b	6768c <__assert_fail@plt+0x54ad4>
   67664:	ldr	r0, [sp, #52]	; 0x34
   67668:	cmp	r0, #0
   6766c:	beq	6767c <__assert_fail@plt+0x54ac4>
   67670:	ldr	r0, [sp, #52]	; 0x34
   67674:	str	r0, [sp, #16]
   67678:	b	67684 <__assert_fail@plt+0x54acc>
   6767c:	ldr	r0, [sp, #48]	; 0x30
   67680:	str	r0, [sp, #16]
   67684:	ldr	r0, [sp, #16]
   67688:	str	r0, [sp, #20]
   6768c:	ldr	r0, [sp, #20]
   67690:	str	r0, [fp, #-28]	; 0xffffffe4
   67694:	ldr	r0, [fp, #-28]	; 0xffffffe4
   67698:	str	r0, [fp, #-4]
   6769c:	b	67884 <__assert_fail@plt+0x54ccc>
   676a0:	b	6751c <__assert_fail@plt+0x54964>
   676a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   676a8:	ldr	r0, [r0, #12]
   676ac:	ldr	r1, [fp, #-36]	; 0xffffffdc
   676b0:	ldr	r1, [r1]
   676b4:	ldr	r0, [r0, r1, lsl #2]
   676b8:	str	r0, [fp, #-44]	; 0xffffffd4
   676bc:	ldr	r0, [fp, #-8]
   676c0:	ldr	r0, [r0, #100]	; 0x64
   676c4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   676c8:	add	r0, r0, r1, lsl #2
   676cc:	ldr	r0, [r0]
   676d0:	movw	r1, #0
   676d4:	cmp	r0, r1
   676d8:	beq	677b4 <__assert_fail@plt+0x54bfc>
   676dc:	ldr	r0, [fp, #-8]
   676e0:	ldr	r0, [r0, #100]	; 0x64
   676e4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   676e8:	add	r0, r0, r1, lsl #2
   676ec:	ldr	r0, [r0]
   676f0:	add	r0, r0, #4
   676f4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   676f8:	bl	6206c <__assert_fail@plt+0x4f4b4>
   676fc:	cmp	r0, #0
   67700:	beq	67708 <__assert_fail@plt+0x54b50>
   67704:	b	67864 <__assert_fail@plt+0x54cac>
   67708:	ldr	r0, [fp, #-8]
   6770c:	ldr	r0, [r0, #100]	; 0x64
   67710:	ldr	r1, [fp, #-40]	; 0xffffffd8
   67714:	add	r0, r0, r1, lsl #2
   67718:	ldr	r0, [r0]
   6771c:	add	r1, r0, #4
   67720:	add	r0, sp, #36	; 0x24
   67724:	bl	61f98 <__assert_fail@plt+0x4f3e0>
   67728:	str	r0, [fp, #-28]	; 0xffffffe4
   6772c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   67730:	add	r0, sp, #36	; 0x24
   67734:	bl	61bb0 <__assert_fail@plt+0x4eff8>
   67738:	and	r0, r0, #1
   6773c:	strb	r0, [sp, #35]	; 0x23
   67740:	ldr	r0, [fp, #-28]	; 0xffffffe4
   67744:	cmp	r0, #0
   67748:	movw	r0, #1
   6774c:	str	r0, [sp, #12]
   67750:	bne	67764 <__assert_fail@plt+0x54bac>
   67754:	ldrb	r0, [sp, #35]	; 0x23
   67758:	mvn	r1, #0
   6775c:	eor	r0, r0, r1
   67760:	str	r0, [sp, #12]
   67764:	ldr	r0, [sp, #12]
   67768:	tst	r0, #1
   6776c:	beq	677b0 <__assert_fail@plt+0x54bf8>
   67770:	ldr	r0, [sp, #44]	; 0x2c
   67774:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   67778:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6777c:	cmp	r0, #0
   67780:	beq	67790 <__assert_fail@plt+0x54bd8>
   67784:	ldr	r0, [fp, #-28]	; 0xffffffe4
   67788:	str	r0, [sp, #8]
   6778c:	b	6779c <__assert_fail@plt+0x54be4>
   67790:	movw	r0, #12
   67794:	str	r0, [sp, #8]
   67798:	b	6779c <__assert_fail@plt+0x54be4>
   6779c:	ldr	r0, [sp, #8]
   677a0:	str	r0, [fp, #-28]	; 0xffffffe4
   677a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   677a8:	str	r0, [fp, #-4]
   677ac:	b	67884 <__assert_fail@plt+0x54ccc>
   677b0:	b	677e0 <__assert_fail@plt+0x54c28>
   677b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   677b8:	add	r0, sp, #36	; 0x24
   677bc:	bl	60ce4 <__assert_fail@plt+0x4e12c>
   677c0:	str	r0, [fp, #-28]	; 0xffffffe4
   677c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   677c8:	cmp	r0, #0
   677cc:	beq	677dc <__assert_fail@plt+0x54c24>
   677d0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   677d4:	str	r0, [fp, #-4]
   677d8:	b	67884 <__assert_fail@plt+0x54ccc>
   677dc:	b	677e0 <__assert_fail@plt+0x54c28>
   677e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   677e4:	sub	r0, fp, #28
   677e8:	add	r2, sp, #36	; 0x24
   677ec:	bl	67d6c <__assert_fail@plt+0x551b4>
   677f0:	ldr	r1, [fp, #-8]
   677f4:	ldr	r1, [r1, #100]	; 0x64
   677f8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   677fc:	str	r0, [r1, r2, lsl #2]
   67800:	ldr	r0, [sp, #44]	; 0x2c
   67804:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   67808:	ldr	r0, [fp, #-8]
   6780c:	ldr	r0, [r0, #100]	; 0x64
   67810:	ldr	r1, [fp, #-40]	; 0xffffffd8
   67814:	add	r0, r0, r1, lsl #2
   67818:	ldr	r0, [r0]
   6781c:	movw	r1, #0
   67820:	cmp	r0, r1
   67824:	movw	r0, #0
   67828:	str	r0, [sp, #4]
   6782c:	bne	67844 <__assert_fail@plt+0x54c8c>
   67830:	ldr	r0, [fp, #-28]	; 0xffffffe4
   67834:	cmp	r0, #0
   67838:	movw	r0, #0
   6783c:	movne	r0, #1
   67840:	str	r0, [sp, #4]
   67844:	ldr	r0, [sp, #4]
   67848:	tst	r0, #1
   6784c:	beq	6785c <__assert_fail@plt+0x54ca4>
   67850:	ldr	r0, [fp, #-28]	; 0xffffffe4
   67854:	str	r0, [fp, #-4]
   67858:	b	67884 <__assert_fail@plt+0x54ccc>
   6785c:	b	67860 <__assert_fail@plt+0x54ca8>
   67860:	b	67864 <__assert_fail@plt+0x54cac>
   67864:	ldr	r0, [fp, #-36]	; 0xffffffdc
   67868:	add	r1, r0, #24
   6786c:	str	r1, [fp, #-36]	; 0xffffffdc
   67870:	ldrsb	r0, [r0, #20]
   67874:	cmp	r0, #0
   67878:	bne	67538 <__assert_fail@plt+0x54980>
   6787c:	movw	r0, #0
   67880:	str	r0, [fp, #-4]
   67884:	ldr	r0, [fp, #-4]
   67888:	mov	sp, fp
   6788c:	pop	{fp, pc}
   67890:	push	{fp, lr}
   67894:	mov	fp, sp
   67898:	sub	sp, sp, #80	; 0x50
   6789c:	str	r0, [fp, #-8]
   678a0:	str	r1, [fp, #-12]
   678a4:	str	r2, [fp, #-16]
   678a8:	str	r3, [fp, #-20]	; 0xffffffec
   678ac:	ldr	r0, [fp, #-8]
   678b0:	ldr	r0, [r0, #84]	; 0x54
   678b4:	str	r0, [fp, #-24]	; 0xffffffe8
   678b8:	movw	r0, #0
   678bc:	str	r0, [fp, #-36]	; 0xffffffdc
   678c0:	add	r1, sp, #32
   678c4:	str	r0, [sp, #8]
   678c8:	mov	r0, r1
   678cc:	movw	r1, #0
   678d0:	and	r1, r1, #255	; 0xff
   678d4:	movw	r2, #12
   678d8:	bl	12900 <memset@plt>
   678dc:	ldr	r0, [sp, #8]
   678e0:	str	r0, [fp, #-32]	; 0xffffffe0
   678e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   678e8:	ldr	r1, [fp, #-16]
   678ec:	ldr	r1, [r1, #4]
   678f0:	cmp	r0, r1
   678f4:	bge	67b60 <__assert_fail@plt+0x54fa8>
   678f8:	mov	r0, #0
   678fc:	str	r0, [sp, #28]
   67900:	ldr	r0, [fp, #-16]
   67904:	ldr	r0, [r0, #8]
   67908:	ldr	r1, [fp, #-32]	; 0xffffffe0
   6790c:	ldr	r0, [r0, r1, lsl #2]
   67910:	str	r0, [sp, #24]
   67914:	ldr	r0, [fp, #-24]	; 0xffffffe8
   67918:	ldr	r0, [r0]
   6791c:	ldr	r1, [sp, #24]
   67920:	add	r0, r0, r1, lsl #3
   67924:	ldr	r0, [r0, #4]
   67928:	and	r0, r0, #255	; 0xff
   6792c:	and	r0, r0, #8
   67930:	cmp	r0, #0
   67934:	bne	6793c <__assert_fail@plt+0x54d84>
   67938:	b	6793c <__assert_fail@plt+0x54d84>
   6793c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   67940:	ldr	r0, [r0]
   67944:	ldr	r1, [sp, #24]
   67948:	add	r0, r0, r1, lsl #3
   6794c:	ldr	r0, [r0, #4]
   67950:	lsr	r0, r0, #20
   67954:	and	r0, r0, #1
   67958:	cmp	r0, #0
   6795c:	beq	67acc <__assert_fail@plt+0x54f14>
   67960:	ldr	r0, [fp, #-24]	; 0xffffffe8
   67964:	ldr	r1, [sp, #24]
   67968:	ldr	r2, [fp, #-8]
   6796c:	ldr	r3, [fp, #-12]
   67970:	bl	680c4 <__assert_fail@plt+0x5550c>
   67974:	str	r0, [sp, #28]
   67978:	ldr	r0, [sp, #28]
   6797c:	cmp	r0, #1
   67980:	ble	67ac8 <__assert_fail@plt+0x54f10>
   67984:	ldr	r0, [fp, #-24]	; 0xffffffe8
   67988:	ldr	r0, [r0, #12]
   6798c:	ldr	r1, [sp, #24]
   67990:	ldr	r0, [r0, r1, lsl #2]
   67994:	str	r0, [sp, #16]
   67998:	ldr	r0, [fp, #-12]
   6799c:	ldr	r1, [sp, #28]
   679a0:	add	r0, r0, r1
   679a4:	str	r0, [sp, #12]
   679a8:	ldr	r0, [fp, #-8]
   679ac:	ldr	r0, [r0, #100]	; 0x64
   679b0:	ldr	r1, [sp, #12]
   679b4:	add	r0, r0, r1, lsl #2
   679b8:	ldr	r0, [r0]
   679bc:	str	r0, [sp, #20]
   679c0:	movw	r0, #0
   679c4:	str	r0, [sp, #36]	; 0x24
   679c8:	ldr	r1, [sp, #20]
   679cc:	cmp	r1, r0
   679d0:	beq	67a0c <__assert_fail@plt+0x54e54>
   679d4:	ldr	r0, [sp, #20]
   679d8:	add	r1, r0, #4
   679dc:	add	r0, sp, #32
   679e0:	bl	616c0 <__assert_fail@plt+0x4eb08>
   679e4:	str	r0, [fp, #-36]	; 0xffffffdc
   679e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   679ec:	cmp	r0, #0
   679f0:	beq	67a08 <__assert_fail@plt+0x54e50>
   679f4:	ldr	r0, [sp, #40]	; 0x28
   679f8:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   679fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   67a00:	str	r0, [fp, #-4]
   67a04:	b	67b70 <__assert_fail@plt+0x54fb8>
   67a08:	b	67a0c <__assert_fail@plt+0x54e54>
   67a0c:	ldr	r1, [sp, #16]
   67a10:	add	r0, sp, #32
   67a14:	bl	61bb0 <__assert_fail@plt+0x4eff8>
   67a18:	and	r0, r0, #1
   67a1c:	strb	r0, [fp, #-25]	; 0xffffffe7
   67a20:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   67a24:	mvn	r1, #0
   67a28:	eor	r0, r0, r1
   67a2c:	tst	r0, #1
   67a30:	beq	67a48 <__assert_fail@plt+0x54e90>
   67a34:	ldr	r0, [sp, #40]	; 0x28
   67a38:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   67a3c:	movw	r0, #12
   67a40:	str	r0, [fp, #-4]
   67a44:	b	67b70 <__assert_fail@plt+0x54fb8>
   67a48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   67a4c:	sub	r0, fp, #36	; 0x24
   67a50:	add	r2, sp, #32
   67a54:	bl	67d6c <__assert_fail@plt+0x551b4>
   67a58:	ldr	r1, [fp, #-8]
   67a5c:	ldr	r1, [r1, #100]	; 0x64
   67a60:	ldr	r2, [sp, #12]
   67a64:	str	r0, [r1, r2, lsl #2]
   67a68:	ldr	r0, [fp, #-8]
   67a6c:	ldr	r0, [r0, #100]	; 0x64
   67a70:	ldr	r1, [sp, #12]
   67a74:	add	r0, r0, r1, lsl #2
   67a78:	ldr	r0, [r0]
   67a7c:	movw	r1, #0
   67a80:	cmp	r0, r1
   67a84:	movw	r0, #0
   67a88:	str	r0, [sp, #4]
   67a8c:	bne	67aa4 <__assert_fail@plt+0x54eec>
   67a90:	ldr	r0, [fp, #-36]	; 0xffffffdc
   67a94:	cmp	r0, #0
   67a98:	movw	r0, #0
   67a9c:	movne	r0, #1
   67aa0:	str	r0, [sp, #4]
   67aa4:	ldr	r0, [sp, #4]
   67aa8:	tst	r0, #1
   67aac:	beq	67ac4 <__assert_fail@plt+0x54f0c>
   67ab0:	ldr	r0, [sp, #40]	; 0x28
   67ab4:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   67ab8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   67abc:	str	r0, [fp, #-4]
   67ac0:	b	67b70 <__assert_fail@plt+0x54fb8>
   67ac4:	b	67ac8 <__assert_fail@plt+0x54f10>
   67ac8:	b	67acc <__assert_fail@plt+0x54f14>
   67acc:	ldr	r0, [sp, #28]
   67ad0:	cmp	r0, #0
   67ad4:	bne	67afc <__assert_fail@plt+0x54f44>
   67ad8:	ldr	r0, [fp, #-8]
   67adc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   67ae0:	ldr	r1, [r1]
   67ae4:	ldr	r2, [sp, #24]
   67ae8:	add	r1, r1, r2, lsl #3
   67aec:	ldr	r2, [fp, #-12]
   67af0:	bl	686ac <__assert_fail@plt+0x55af4>
   67af4:	tst	r0, #1
   67af8:	beq	67b4c <__assert_fail@plt+0x54f94>
   67afc:	ldr	r0, [fp, #-20]	; 0xffffffec
   67b00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   67b04:	ldr	r1, [r1, #12]
   67b08:	ldr	r2, [sp, #24]
   67b0c:	add	r1, r1, r2, lsl #2
   67b10:	ldr	r1, [r1]
   67b14:	bl	61bb0 <__assert_fail@plt+0x4eff8>
   67b18:	and	r0, r0, #1
   67b1c:	strb	r0, [fp, #-25]	; 0xffffffe7
   67b20:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   67b24:	mvn	r1, #0
   67b28:	eor	r0, r0, r1
   67b2c:	tst	r0, #1
   67b30:	beq	67b48 <__assert_fail@plt+0x54f90>
   67b34:	ldr	r0, [sp, #40]	; 0x28
   67b38:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   67b3c:	movw	r0, #12
   67b40:	str	r0, [fp, #-4]
   67b44:	b	67b70 <__assert_fail@plt+0x54fb8>
   67b48:	b	67b4c <__assert_fail@plt+0x54f94>
   67b4c:	b	67b50 <__assert_fail@plt+0x54f98>
   67b50:	ldr	r0, [fp, #-32]	; 0xffffffe0
   67b54:	add	r0, r0, #1
   67b58:	str	r0, [fp, #-32]	; 0xffffffe0
   67b5c:	b	678e4 <__assert_fail@plt+0x54d2c>
   67b60:	ldr	r0, [sp, #40]	; 0x28
   67b64:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   67b68:	movw	r0, #0
   67b6c:	str	r0, [fp, #-4]
   67b70:	ldr	r0, [fp, #-4]
   67b74:	mov	sp, fp
   67b78:	pop	{fp, pc}
   67b7c:	push	{fp, lr}
   67b80:	mov	fp, sp
   67b84:	sub	sp, sp, #40	; 0x28
   67b88:	ldr	ip, [fp, #8]
   67b8c:	str	r0, [fp, #-8]
   67b90:	str	r1, [fp, #-12]
   67b94:	str	r2, [fp, #-16]
   67b98:	str	r3, [sp, #20]
   67b9c:	ldr	r0, [fp, #-16]
   67ba0:	str	r0, [sp, #16]
   67ba4:	ldr	r0, [fp, #-12]
   67ba8:	ldr	r1, [sp, #16]
   67bac:	bl	6206c <__assert_fail@plt+0x4f4b4>
   67bb0:	cmp	r0, #0
   67bb4:	movw	r0, #0
   67bb8:	movne	r0, #1
   67bbc:	mvn	r1, #0
   67bc0:	eor	r0, r0, r1
   67bc4:	tst	r0, #1
   67bc8:	beq	67d58 <__assert_fail@plt+0x551a0>
   67bcc:	ldr	r0, [fp, #-8]
   67bd0:	ldr	r0, [r0]
   67bd4:	ldr	r1, [sp, #16]
   67bd8:	add	r0, r0, r1, lsl #3
   67bdc:	ldr	r0, [r0, #4]
   67be0:	and	r0, r0, #255	; 0xff
   67be4:	ldr	r1, [fp, #8]
   67be8:	cmp	r0, r1
   67bec:	bne	67c58 <__assert_fail@plt+0x550a0>
   67bf0:	ldr	r0, [fp, #-8]
   67bf4:	ldr	r0, [r0]
   67bf8:	ldr	r1, [sp, #16]
   67bfc:	add	r0, r0, r1, lsl #3
   67c00:	ldr	r0, [r0]
   67c04:	ldr	r1, [sp, #20]
   67c08:	cmp	r0, r1
   67c0c:	bne	67c58 <__assert_fail@plt+0x550a0>
   67c10:	ldr	r0, [fp, #8]
   67c14:	cmp	r0, #9
   67c18:	bne	67c54 <__assert_fail@plt+0x5509c>
   67c1c:	ldr	r0, [fp, #-12]
   67c20:	ldr	r1, [sp, #16]
   67c24:	bl	61bb0 <__assert_fail@plt+0x4eff8>
   67c28:	and	r0, r0, #1
   67c2c:	strb	r0, [sp, #15]
   67c30:	ldrb	r0, [sp, #15]
   67c34:	mvn	r1, #0
   67c38:	eor	r0, r0, r1
   67c3c:	tst	r0, #1
   67c40:	beq	67c50 <__assert_fail@plt+0x55098>
   67c44:	movw	r0, #12
   67c48:	str	r0, [fp, #-4]
   67c4c:	b	67d60 <__assert_fail@plt+0x551a8>
   67c50:	b	67c54 <__assert_fail@plt+0x5509c>
   67c54:	b	67d58 <__assert_fail@plt+0x551a0>
   67c58:	ldr	r0, [fp, #-12]
   67c5c:	ldr	r1, [sp, #16]
   67c60:	bl	61bb0 <__assert_fail@plt+0x4eff8>
   67c64:	and	r0, r0, #1
   67c68:	strb	r0, [sp, #15]
   67c6c:	ldrb	r0, [sp, #15]
   67c70:	mvn	r1, #0
   67c74:	eor	r0, r0, r1
   67c78:	tst	r0, #1
   67c7c:	beq	67c8c <__assert_fail@plt+0x550d4>
   67c80:	movw	r0, #12
   67c84:	str	r0, [fp, #-4]
   67c88:	b	67d60 <__assert_fail@plt+0x551a8>
   67c8c:	ldr	r0, [fp, #-8]
   67c90:	ldr	r0, [r0, #20]
   67c94:	ldr	r1, [sp, #16]
   67c98:	movw	r2, #12
   67c9c:	mul	r1, r1, r2
   67ca0:	add	r0, r0, r1
   67ca4:	ldr	r0, [r0, #4]
   67ca8:	cmp	r0, #0
   67cac:	bne	67cb4 <__assert_fail@plt+0x550fc>
   67cb0:	b	67d58 <__assert_fail@plt+0x551a0>
   67cb4:	ldr	r0, [fp, #-8]
   67cb8:	ldr	r0, [r0, #20]
   67cbc:	ldr	r1, [sp, #16]
   67cc0:	movw	r2, #12
   67cc4:	mul	r1, r1, r2
   67cc8:	add	r0, r0, r1
   67ccc:	ldr	r0, [r0, #4]
   67cd0:	cmp	r0, #2
   67cd4:	bne	67d30 <__assert_fail@plt+0x55178>
   67cd8:	ldr	r0, [fp, #-8]
   67cdc:	ldr	r1, [fp, #-12]
   67ce0:	ldr	r2, [fp, #-8]
   67ce4:	ldr	r2, [r2, #20]
   67ce8:	ldr	r3, [sp, #16]
   67cec:	movw	ip, #12
   67cf0:	mul	r3, r3, ip
   67cf4:	add	r2, r2, r3
   67cf8:	ldr	r2, [r2, #8]
   67cfc:	ldr	r2, [r2, #4]
   67d00:	ldr	r3, [sp, #20]
   67d04:	ldr	ip, [fp, #8]
   67d08:	str	ip, [sp]
   67d0c:	bl	67b7c <__assert_fail@plt+0x54fc4>
   67d10:	str	r0, [sp, #8]
   67d14:	ldr	r0, [sp, #8]
   67d18:	cmp	r0, #0
   67d1c:	beq	67d2c <__assert_fail@plt+0x55174>
   67d20:	ldr	r0, [sp, #8]
   67d24:	str	r0, [fp, #-4]
   67d28:	b	67d60 <__assert_fail@plt+0x551a8>
   67d2c:	b	67d30 <__assert_fail@plt+0x55178>
   67d30:	ldr	r0, [fp, #-8]
   67d34:	ldr	r0, [r0, #20]
   67d38:	ldr	r1, [sp, #16]
   67d3c:	movw	r2, #12
   67d40:	mul	r1, r1, r2
   67d44:	add	r0, r0, r1
   67d48:	ldr	r0, [r0, #8]
   67d4c:	ldr	r0, [r0]
   67d50:	str	r0, [sp, #16]
   67d54:	b	67ba4 <__assert_fail@plt+0x54fec>
   67d58:	movw	r0, #0
   67d5c:	str	r0, [fp, #-4]
   67d60:	ldr	r0, [fp, #-4]
   67d64:	mov	sp, fp
   67d68:	pop	{fp, pc}
   67d6c:	push	{fp, lr}
   67d70:	mov	fp, sp
   67d74:	sub	sp, sp, #40	; 0x28
   67d78:	str	r0, [fp, #-8]
   67d7c:	str	r1, [fp, #-12]
   67d80:	str	r2, [fp, #-16]
   67d84:	ldr	r0, [fp, #-16]
   67d88:	ldr	r0, [r0, #4]
   67d8c:	cmp	r0, #0
   67d90:	bne	67da8 <__assert_fail@plt+0x551f0>
   67d94:	ldr	r0, [fp, #-8]
   67d98:	movw	r1, #0
   67d9c:	str	r1, [r0]
   67da0:	str	r1, [fp, #-4]
   67da4:	b	67e9c <__assert_fail@plt+0x552e4>
   67da8:	ldr	r0, [fp, #-16]
   67dac:	movw	r1, #0
   67db0:	bl	622b8 <__assert_fail@plt+0x4f700>
   67db4:	str	r0, [sp, #20]
   67db8:	ldr	r0, [fp, #-12]
   67dbc:	ldr	r0, [r0, #32]
   67dc0:	ldr	r1, [sp, #20]
   67dc4:	ldr	r2, [fp, #-12]
   67dc8:	ldr	r2, [r2, #68]	; 0x44
   67dcc:	and	r1, r1, r2
   67dd0:	movw	r2, #12
   67dd4:	mul	r1, r1, r2
   67dd8:	add	r0, r0, r1
   67ddc:	str	r0, [sp, #12]
   67de0:	movw	r0, #0
   67de4:	str	r0, [sp, #8]
   67de8:	ldr	r0, [sp, #8]
   67dec:	ldr	r1, [sp, #12]
   67df0:	ldr	r1, [r1]
   67df4:	cmp	r0, r1
   67df8:	bge	67e64 <__assert_fail@plt+0x552ac>
   67dfc:	ldr	r0, [sp, #12]
   67e00:	ldr	r0, [r0, #8]
   67e04:	ldr	r1, [sp, #8]
   67e08:	add	r0, r0, r1, lsl #2
   67e0c:	ldr	r0, [r0]
   67e10:	str	r0, [sp, #4]
   67e14:	ldr	r0, [sp, #20]
   67e18:	ldr	r1, [sp, #4]
   67e1c:	ldr	r1, [r1]
   67e20:	cmp	r0, r1
   67e24:	beq	67e2c <__assert_fail@plt+0x55274>
   67e28:	b	67e54 <__assert_fail@plt+0x5529c>
   67e2c:	ldr	r0, [sp, #4]
   67e30:	add	r0, r0, #4
   67e34:	ldr	r1, [fp, #-16]
   67e38:	bl	62330 <__assert_fail@plt+0x4f778>
   67e3c:	tst	r0, #1
   67e40:	beq	67e50 <__assert_fail@plt+0x55298>
   67e44:	ldr	r0, [sp, #4]
   67e48:	str	r0, [fp, #-4]
   67e4c:	b	67e9c <__assert_fail@plt+0x552e4>
   67e50:	b	67e54 <__assert_fail@plt+0x5529c>
   67e54:	ldr	r0, [sp, #8]
   67e58:	add	r0, r0, #1
   67e5c:	str	r0, [sp, #8]
   67e60:	b	67de8 <__assert_fail@plt+0x55230>
   67e64:	ldr	r0, [fp, #-12]
   67e68:	ldr	r1, [fp, #-16]
   67e6c:	ldr	r2, [sp, #20]
   67e70:	bl	67ea8 <__assert_fail@plt+0x552f0>
   67e74:	str	r0, [sp, #16]
   67e78:	ldr	r0, [sp, #16]
   67e7c:	movw	r1, #0
   67e80:	cmp	r0, r1
   67e84:	bne	67e94 <__assert_fail@plt+0x552dc>
   67e88:	ldr	r0, [fp, #-8]
   67e8c:	movw	r1, #12
   67e90:	str	r1, [r0]
   67e94:	ldr	r0, [sp, #16]
   67e98:	str	r0, [fp, #-4]
   67e9c:	ldr	r0, [fp, #-4]
   67ea0:	mov	sp, fp
   67ea4:	pop	{fp, pc}
   67ea8:	push	{fp, lr}
   67eac:	mov	fp, sp
   67eb0:	sub	sp, sp, #40	; 0x28
   67eb4:	str	r0, [fp, #-8]
   67eb8:	str	r1, [fp, #-12]
   67ebc:	str	r2, [fp, #-16]
   67ec0:	movw	r0, #56	; 0x38
   67ec4:	movw	r1, #1
   67ec8:	bl	4e0e0 <__assert_fail@plt+0x3b528>
   67ecc:	str	r0, [sp, #12]
   67ed0:	ldr	r0, [sp, #12]
   67ed4:	movw	r1, #0
   67ed8:	cmp	r0, r1
   67edc:	bne	67eec <__assert_fail@plt+0x55334>
   67ee0:	movw	r0, #0
   67ee4:	str	r0, [fp, #-4]
   67ee8:	b	680b8 <__assert_fail@plt+0x55500>
   67eec:	ldr	r0, [sp, #12]
   67ef0:	add	r0, r0, #4
   67ef4:	ldr	r1, [fp, #-12]
   67ef8:	bl	61f98 <__assert_fail@plt+0x4f3e0>
   67efc:	str	r0, [sp, #16]
   67f00:	ldr	r0, [sp, #16]
   67f04:	cmp	r0, #0
   67f08:	beq	67f20 <__assert_fail@plt+0x55368>
   67f0c:	ldr	r0, [sp, #12]
   67f10:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   67f14:	movw	r0, #0
   67f18:	str	r0, [fp, #-4]
   67f1c:	b	680b8 <__assert_fail@plt+0x55500>
   67f20:	ldr	r0, [sp, #12]
   67f24:	add	r0, r0, #4
   67f28:	ldr	r1, [sp, #12]
   67f2c:	str	r0, [r1, #40]	; 0x28
   67f30:	movw	r0, #0
   67f34:	str	r0, [sp, #20]
   67f38:	ldr	r0, [sp, #20]
   67f3c:	ldr	r1, [fp, #-12]
   67f40:	ldr	r1, [r1, #4]
   67f44:	cmp	r0, r1
   67f48:	bge	68080 <__assert_fail@plt+0x554c8>
   67f4c:	ldr	r0, [fp, #-8]
   67f50:	ldr	r0, [r0]
   67f54:	ldr	r1, [fp, #-12]
   67f58:	ldr	r1, [r1, #8]
   67f5c:	ldr	r2, [sp, #20]
   67f60:	ldr	r1, [r1, r2, lsl #2]
   67f64:	add	r0, r0, r1, lsl #3
   67f68:	str	r0, [sp, #8]
   67f6c:	ldr	r0, [sp, #8]
   67f70:	ldr	r0, [r0, #4]
   67f74:	and	r0, r0, #255	; 0xff
   67f78:	str	r0, [sp, #4]
   67f7c:	ldr	r0, [sp, #4]
   67f80:	cmp	r0, #1
   67f84:	bne	67fa8 <__assert_fail@plt+0x553f0>
   67f88:	ldr	r0, [sp, #8]
   67f8c:	ldr	r0, [r0, #4]
   67f90:	lsr	r0, r0, #8
   67f94:	movw	r1, #1023	; 0x3ff
   67f98:	and	r0, r0, r1
   67f9c:	cmp	r0, #0
   67fa0:	bne	67fa8 <__assert_fail@plt+0x553f0>
   67fa4:	b	68070 <__assert_fail@plt+0x554b8>
   67fa8:	ldr	r0, [sp, #8]
   67fac:	ldr	r0, [r0, #4]
   67fb0:	ldr	r1, [sp, #12]
   67fb4:	ldrb	r2, [r1, #52]	; 0x34
   67fb8:	lsr	r3, r2, #5
   67fbc:	orr	r0, r3, r0, lsr #20
   67fc0:	and	r0, r0, #1
   67fc4:	lsl	r0, r0, #5
   67fc8:	bic	r2, r2, #32
   67fcc:	orr	r0, r2, r0
   67fd0:	strb	r0, [r1, #52]	; 0x34
   67fd4:	ldr	r0, [sp, #4]
   67fd8:	cmp	r0, #2
   67fdc:	bne	67ffc <__assert_fail@plt+0x55444>
   67fe0:	ldr	r0, [sp, #12]
   67fe4:	ldrb	r1, [r0, #52]	; 0x34
   67fe8:	bic	r1, r1, #16
   67fec:	movw	r2, #16
   67ff0:	orr	r1, r1, r2
   67ff4:	strb	r1, [r0, #52]	; 0x34
   67ff8:	b	6806c <__assert_fail@plt+0x554b4>
   67ffc:	ldr	r0, [sp, #4]
   68000:	cmp	r0, #4
   68004:	bne	68024 <__assert_fail@plt+0x5546c>
   68008:	ldr	r0, [sp, #12]
   6800c:	ldrb	r1, [r0, #52]	; 0x34
   68010:	bic	r1, r1, #64	; 0x40
   68014:	movw	r2, #64	; 0x40
   68018:	orr	r1, r1, r2
   6801c:	strb	r1, [r0, #52]	; 0x34
   68020:	b	68068 <__assert_fail@plt+0x554b0>
   68024:	ldr	r0, [sp, #4]
   68028:	cmp	r0, #12
   6802c:	beq	6804c <__assert_fail@plt+0x55494>
   68030:	ldr	r0, [sp, #8]
   68034:	ldr	r0, [r0, #4]
   68038:	lsr	r0, r0, #8
   6803c:	movw	r1, #1023	; 0x3ff
   68040:	and	r0, r0, r1
   68044:	cmp	r0, #0
   68048:	beq	68064 <__assert_fail@plt+0x554ac>
   6804c:	ldr	r0, [sp, #12]
   68050:	ldrb	r1, [r0, #52]	; 0x34
   68054:	and	r1, r1, #127	; 0x7f
   68058:	movw	r2, #128	; 0x80
   6805c:	orr	r1, r1, r2
   68060:	strb	r1, [r0, #52]	; 0x34
   68064:	b	68068 <__assert_fail@plt+0x554b0>
   68068:	b	6806c <__assert_fail@plt+0x554b4>
   6806c:	b	68070 <__assert_fail@plt+0x554b8>
   68070:	ldr	r0, [sp, #20]
   68074:	add	r0, r0, #1
   68078:	str	r0, [sp, #20]
   6807c:	b	67f38 <__assert_fail@plt+0x55380>
   68080:	ldr	r0, [fp, #-8]
   68084:	ldr	r1, [sp, #12]
   68088:	ldr	r2, [fp, #-16]
   6808c:	bl	627e0 <__assert_fail@plt+0x4fc28>
   68090:	str	r0, [sp, #16]
   68094:	ldr	r0, [sp, #16]
   68098:	cmp	r0, #0
   6809c:	beq	680b0 <__assert_fail@plt+0x554f8>
   680a0:	ldr	r0, [sp, #12]
   680a4:	bl	57a40 <__assert_fail@plt+0x44e88>
   680a8:	movw	r0, #0
   680ac:	str	r0, [sp, #12]
   680b0:	ldr	r0, [sp, #12]
   680b4:	str	r0, [fp, #-4]
   680b8:	ldr	r0, [fp, #-4]
   680bc:	mov	sp, fp
   680c0:	pop	{fp, pc}
   680c4:	push	{fp, lr}
   680c8:	mov	fp, sp
   680cc:	sub	sp, sp, #72	; 0x48
   680d0:	str	r0, [fp, #-8]
   680d4:	str	r1, [fp, #-12]
   680d8:	str	r2, [fp, #-16]
   680dc:	str	r3, [fp, #-20]	; 0xffffffec
   680e0:	ldr	r0, [fp, #-8]
   680e4:	ldr	r0, [r0]
   680e8:	ldr	r1, [fp, #-12]
   680ec:	add	r0, r0, r1, lsl #3
   680f0:	str	r0, [fp, #-24]	; 0xffffffe8
   680f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   680f8:	ldr	r0, [r0, #4]
   680fc:	and	r0, r0, #255	; 0xff
   68100:	cmp	r0, #7
   68104:	bne	68374 <__assert_fail@plt+0x557bc>
   68108:	ldr	r0, [fp, #-16]
   6810c:	ldr	r0, [r0, #4]
   68110:	ldr	r1, [fp, #-20]	; 0xffffffec
   68114:	add	r0, r0, r1
   68118:	ldrb	r0, [r0]
   6811c:	strb	r0, [sp, #35]	; 0x23
   68120:	ldrb	r0, [sp, #35]	; 0x23
   68124:	cmp	r0, #194	; 0xc2
   68128:	bge	68138 <__assert_fail@plt+0x55580>
   6812c:	movw	r0, #0
   68130:	str	r0, [fp, #-4]
   68134:	b	686a0 <__assert_fail@plt+0x55ae8>
   68138:	ldr	r0, [fp, #-20]	; 0xffffffec
   6813c:	add	r0, r0, #2
   68140:	ldr	r1, [fp, #-16]
   68144:	ldr	r1, [r1, #48]	; 0x30
   68148:	cmp	r0, r1
   6814c:	ble	6815c <__assert_fail@plt+0x555a4>
   68150:	movw	r0, #0
   68154:	str	r0, [fp, #-4]
   68158:	b	686a0 <__assert_fail@plt+0x55ae8>
   6815c:	ldr	r0, [fp, #-16]
   68160:	ldr	r0, [r0, #4]
   68164:	ldr	r1, [fp, #-20]	; 0xffffffec
   68168:	add	r1, r1, #1
   6816c:	add	r0, r0, r1
   68170:	ldrb	r0, [r0]
   68174:	strb	r0, [sp, #34]	; 0x22
   68178:	ldrb	r0, [sp, #35]	; 0x23
   6817c:	cmp	r0, #224	; 0xe0
   68180:	bge	681c4 <__assert_fail@plt+0x5560c>
   68184:	ldrb	r0, [sp, #34]	; 0x22
   68188:	cmp	r0, #128	; 0x80
   6818c:	movw	r0, #1
   68190:	str	r0, [sp, #12]
   68194:	blt	681ac <__assert_fail@plt+0x555f4>
   68198:	ldrb	r0, [sp, #34]	; 0x22
   6819c:	cmp	r0, #191	; 0xbf
   681a0:	movw	r0, #0
   681a4:	movgt	r0, #1
   681a8:	str	r0, [sp, #12]
   681ac:	ldr	r0, [sp, #12]
   681b0:	tst	r0, #1
   681b4:	movw	r0, #0
   681b8:	moveq	r0, #2
   681bc:	str	r0, [fp, #-4]
   681c0:	b	686a0 <__assert_fail@plt+0x55ae8>
   681c4:	ldrb	r0, [sp, #35]	; 0x23
   681c8:	cmp	r0, #240	; 0xf0
   681cc:	bge	68200 <__assert_fail@plt+0x55648>
   681d0:	movw	r0, #3
   681d4:	str	r0, [fp, #-28]	; 0xffffffe4
   681d8:	ldrb	r0, [sp, #35]	; 0x23
   681dc:	cmp	r0, #224	; 0xe0
   681e0:	bne	681fc <__assert_fail@plt+0x55644>
   681e4:	ldrb	r0, [sp, #34]	; 0x22
   681e8:	cmp	r0, #160	; 0xa0
   681ec:	bge	681fc <__assert_fail@plt+0x55644>
   681f0:	movw	r0, #0
   681f4:	str	r0, [fp, #-4]
   681f8:	b	686a0 <__assert_fail@plt+0x55ae8>
   681fc:	b	682cc <__assert_fail@plt+0x55714>
   68200:	ldrb	r0, [sp, #35]	; 0x23
   68204:	cmp	r0, #248	; 0xf8
   68208:	bge	6823c <__assert_fail@plt+0x55684>
   6820c:	movw	r0, #4
   68210:	str	r0, [fp, #-28]	; 0xffffffe4
   68214:	ldrb	r0, [sp, #35]	; 0x23
   68218:	cmp	r0, #240	; 0xf0
   6821c:	bne	68238 <__assert_fail@plt+0x55680>
   68220:	ldrb	r0, [sp, #34]	; 0x22
   68224:	cmp	r0, #144	; 0x90
   68228:	bge	68238 <__assert_fail@plt+0x55680>
   6822c:	movw	r0, #0
   68230:	str	r0, [fp, #-4]
   68234:	b	686a0 <__assert_fail@plt+0x55ae8>
   68238:	b	682c8 <__assert_fail@plt+0x55710>
   6823c:	ldrb	r0, [sp, #35]	; 0x23
   68240:	cmp	r0, #252	; 0xfc
   68244:	bge	68278 <__assert_fail@plt+0x556c0>
   68248:	movw	r0, #5
   6824c:	str	r0, [fp, #-28]	; 0xffffffe4
   68250:	ldrb	r0, [sp, #35]	; 0x23
   68254:	cmp	r0, #248	; 0xf8
   68258:	bne	68274 <__assert_fail@plt+0x556bc>
   6825c:	ldrb	r0, [sp, #34]	; 0x22
   68260:	cmp	r0, #136	; 0x88
   68264:	bge	68274 <__assert_fail@plt+0x556bc>
   68268:	movw	r0, #0
   6826c:	str	r0, [fp, #-4]
   68270:	b	686a0 <__assert_fail@plt+0x55ae8>
   68274:	b	682c4 <__assert_fail@plt+0x5570c>
   68278:	ldrb	r0, [sp, #35]	; 0x23
   6827c:	cmp	r0, #254	; 0xfe
   68280:	bge	682b4 <__assert_fail@plt+0x556fc>
   68284:	movw	r0, #6
   68288:	str	r0, [fp, #-28]	; 0xffffffe4
   6828c:	ldrb	r0, [sp, #35]	; 0x23
   68290:	cmp	r0, #252	; 0xfc
   68294:	bne	682b0 <__assert_fail@plt+0x556f8>
   68298:	ldrb	r0, [sp, #34]	; 0x22
   6829c:	cmp	r0, #132	; 0x84
   682a0:	bge	682b0 <__assert_fail@plt+0x556f8>
   682a4:	movw	r0, #0
   682a8:	str	r0, [fp, #-4]
   682ac:	b	686a0 <__assert_fail@plt+0x55ae8>
   682b0:	b	682c0 <__assert_fail@plt+0x55708>
   682b4:	movw	r0, #0
   682b8:	str	r0, [fp, #-4]
   682bc:	b	686a0 <__assert_fail@plt+0x55ae8>
   682c0:	b	682c4 <__assert_fail@plt+0x5570c>
   682c4:	b	682c8 <__assert_fail@plt+0x55710>
   682c8:	b	682cc <__assert_fail@plt+0x55714>
   682cc:	b	682d0 <__assert_fail@plt+0x55718>
   682d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   682d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   682d8:	add	r0, r0, r1
   682dc:	ldr	r1, [fp, #-16]
   682e0:	ldr	r1, [r1, #48]	; 0x30
   682e4:	cmp	r0, r1
   682e8:	ble	682f8 <__assert_fail@plt+0x55740>
   682ec:	movw	r0, #0
   682f0:	str	r0, [fp, #-4]
   682f4:	b	686a0 <__assert_fail@plt+0x55ae8>
   682f8:	movw	r0, #1
   682fc:	str	r0, [sp, #36]	; 0x24
   68300:	ldr	r0, [sp, #36]	; 0x24
   68304:	ldr	r1, [fp, #-28]	; 0xffffffe4
   68308:	cmp	r0, r1
   6830c:	bge	68368 <__assert_fail@plt+0x557b0>
   68310:	ldr	r0, [fp, #-16]
   68314:	ldr	r0, [r0, #4]
   68318:	ldr	r1, [fp, #-20]	; 0xffffffec
   6831c:	ldr	r2, [sp, #36]	; 0x24
   68320:	add	r1, r1, r2
   68324:	add	r0, r0, r1
   68328:	ldrb	r0, [r0]
   6832c:	strb	r0, [sp, #34]	; 0x22
   68330:	ldrb	r0, [sp, #34]	; 0x22
   68334:	cmp	r0, #128	; 0x80
   68338:	blt	68348 <__assert_fail@plt+0x55790>
   6833c:	ldrb	r0, [sp, #34]	; 0x22
   68340:	cmp	r0, #191	; 0xbf
   68344:	ble	68354 <__assert_fail@plt+0x5579c>
   68348:	movw	r0, #0
   6834c:	str	r0, [fp, #-4]
   68350:	b	686a0 <__assert_fail@plt+0x55ae8>
   68354:	b	68358 <__assert_fail@plt+0x557a0>
   68358:	ldr	r0, [sp, #36]	; 0x24
   6835c:	add	r0, r0, #1
   68360:	str	r0, [sp, #36]	; 0x24
   68364:	b	68300 <__assert_fail@plt+0x55748>
   68368:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6836c:	str	r0, [fp, #-4]
   68370:	b	686a0 <__assert_fail@plt+0x55ae8>
   68374:	ldr	r0, [fp, #-16]
   68378:	ldr	r1, [fp, #-20]	; 0xffffffec
   6837c:	bl	5f454 <__assert_fail@plt+0x4c89c>
   68380:	str	r0, [fp, #-28]	; 0xffffffe4
   68384:	ldr	r0, [fp, #-24]	; 0xffffffe8
   68388:	ldr	r0, [r0, #4]
   6838c:	and	r0, r0, #255	; 0xff
   68390:	cmp	r0, #5
   68394:	bne	68428 <__assert_fail@plt+0x55870>
   68398:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6839c:	cmp	r0, #1
   683a0:	bgt	683b0 <__assert_fail@plt+0x557f8>
   683a4:	movw	r0, #0
   683a8:	str	r0, [fp, #-4]
   683ac:	b	686a0 <__assert_fail@plt+0x55ae8>
   683b0:	ldr	r0, [fp, #-8]
   683b4:	ldr	r0, [r0, #128]	; 0x80
   683b8:	and	r0, r0, #64	; 0x40
   683bc:	cmp	r0, #0
   683c0:	bne	683e0 <__assert_fail@plt+0x55828>
   683c4:	ldr	r0, [fp, #-16]
   683c8:	ldr	r0, [r0, #4]
   683cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   683d0:	add	r0, r0, r1
   683d4:	ldrb	r0, [r0]
   683d8:	cmp	r0, #10
   683dc:	beq	68410 <__assert_fail@plt+0x55858>
   683e0:	ldr	r0, [fp, #-8]
   683e4:	ldr	r0, [r0, #128]	; 0x80
   683e8:	and	r0, r0, #128	; 0x80
   683ec:	cmp	r0, #0
   683f0:	beq	6841c <__assert_fail@plt+0x55864>
   683f4:	ldr	r0, [fp, #-16]
   683f8:	ldr	r0, [r0, #4]
   683fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   68400:	add	r0, r0, r1
   68404:	ldrb	r0, [r0]
   68408:	cmp	r0, #0
   6840c:	bne	6841c <__assert_fail@plt+0x55864>
   68410:	movw	r0, #0
   68414:	str	r0, [fp, #-4]
   68418:	b	686a0 <__assert_fail@plt+0x55ae8>
   6841c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   68420:	str	r0, [fp, #-4]
   68424:	b	686a0 <__assert_fail@plt+0x55ae8>
   68428:	ldr	r0, [fp, #-16]
   6842c:	ldr	r1, [fp, #-20]	; 0xffffffec
   68430:	bl	68920 <__assert_fail@plt+0x55d68>
   68434:	str	r0, [fp, #-32]	; 0xffffffe0
   68438:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6843c:	cmp	r0, #1
   68440:	bgt	68450 <__assert_fail@plt+0x55898>
   68444:	ldr	r0, [fp, #-28]	; 0xffffffe4
   68448:	cmp	r0, #1
   6844c:	ble	6845c <__assert_fail@plt+0x558a4>
   68450:	ldr	r0, [fp, #-28]	; 0xffffffe4
   68454:	cmp	r0, #0
   68458:	bne	68468 <__assert_fail@plt+0x558b0>
   6845c:	movw	r0, #0
   68460:	str	r0, [fp, #-4]
   68464:	b	686a0 <__assert_fail@plt+0x55ae8>
   68468:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6846c:	ldr	r0, [r0, #4]
   68470:	and	r0, r0, #255	; 0xff
   68474:	cmp	r0, #6
   68478:	bne	68698 <__assert_fail@plt+0x55ae0>
   6847c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   68480:	ldr	r0, [r0]
   68484:	str	r0, [sp, #28]
   68488:	movw	r0, #0
   6848c:	str	r0, [sp, #24]
   68490:	ldr	r0, [sp, #28]
   68494:	ldr	r0, [r0, #32]
   68498:	cmp	r0, #0
   6849c:	bne	684c0 <__assert_fail@plt+0x55908>
   684a0:	ldr	r0, [sp, #28]
   684a4:	ldr	r0, [r0, #36]	; 0x24
   684a8:	cmp	r0, #0
   684ac:	bne	684c0 <__assert_fail@plt+0x55908>
   684b0:	ldr	r0, [sp, #28]
   684b4:	ldr	r0, [r0, #20]
   684b8:	cmp	r0, #0
   684bc:	beq	684d4 <__assert_fail@plt+0x5591c>
   684c0:	ldr	r0, [fp, #-16]
   684c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   684c8:	bl	5b5a0 <__assert_fail@plt+0x489e8>
   684cc:	str	r0, [sp, #8]
   684d0:	b	684e0 <__assert_fail@plt+0x55928>
   684d4:	movw	r0, #0
   684d8:	str	r0, [sp, #8]
   684dc:	b	684e0 <__assert_fail@plt+0x55928>
   684e0:	ldr	r0, [sp, #8]
   684e4:	str	r0, [sp, #20]
   684e8:	movw	r0, #0
   684ec:	str	r0, [sp, #36]	; 0x24
   684f0:	ldr	r0, [sp, #36]	; 0x24
   684f4:	ldr	r1, [sp, #28]
   684f8:	ldr	r1, [r1, #20]
   684fc:	cmp	r0, r1
   68500:	bge	68544 <__assert_fail@plt+0x5598c>
   68504:	ldr	r0, [sp, #20]
   68508:	ldr	r1, [sp, #28]
   6850c:	ldr	r1, [r1]
   68510:	ldr	r2, [sp, #36]	; 0x24
   68514:	add	r1, r1, r2, lsl #2
   68518:	ldr	r1, [r1]
   6851c:	cmp	r0, r1
   68520:	bne	68530 <__assert_fail@plt+0x55978>
   68524:	ldr	r0, [fp, #-28]	; 0xffffffe4
   68528:	str	r0, [sp, #24]
   6852c:	b	6862c <__assert_fail@plt+0x55a74>
   68530:	b	68534 <__assert_fail@plt+0x5597c>
   68534:	ldr	r0, [sp, #36]	; 0x24
   68538:	add	r0, r0, #1
   6853c:	str	r0, [sp, #36]	; 0x24
   68540:	b	684f0 <__assert_fail@plt+0x55938>
   68544:	movw	r0, #0
   68548:	str	r0, [sp, #36]	; 0x24
   6854c:	ldr	r0, [sp, #36]	; 0x24
   68550:	ldr	r1, [sp, #28]
   68554:	ldr	r1, [r1, #36]	; 0x24
   68558:	cmp	r0, r1
   6855c:	bge	685ac <__assert_fail@plt+0x559f4>
   68560:	ldr	r0, [sp, #28]
   68564:	ldr	r0, [r0, #12]
   68568:	ldr	r1, [sp, #36]	; 0x24
   6856c:	add	r0, r0, r1, lsl #2
   68570:	ldr	r0, [r0]
   68574:	str	r0, [sp, #16]
   68578:	ldr	r0, [sp, #20]
   6857c:	ldr	r1, [sp, #16]
   68580:	bl	124bc <iswctype@plt>
   68584:	cmp	r0, #0
   68588:	beq	68598 <__assert_fail@plt+0x559e0>
   6858c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   68590:	str	r0, [sp, #24]
   68594:	b	6862c <__assert_fail@plt+0x55a74>
   68598:	b	6859c <__assert_fail@plt+0x559e4>
   6859c:	ldr	r0, [sp, #36]	; 0x24
   685a0:	add	r0, r0, #1
   685a4:	str	r0, [sp, #36]	; 0x24
   685a8:	b	6854c <__assert_fail@plt+0x55994>
   685ac:	movw	r0, #0
   685b0:	str	r0, [sp, #36]	; 0x24
   685b4:	ldr	r0, [sp, #36]	; 0x24
   685b8:	ldr	r1, [sp, #28]
   685bc:	ldr	r1, [r1, #32]
   685c0:	cmp	r0, r1
   685c4:	bge	68628 <__assert_fail@plt+0x55a70>
   685c8:	ldr	r0, [sp, #28]
   685cc:	ldr	r0, [r0, #4]
   685d0:	ldr	r1, [sp, #36]	; 0x24
   685d4:	add	r0, r0, r1, lsl #2
   685d8:	ldr	r0, [r0]
   685dc:	ldr	r1, [sp, #20]
   685e0:	cmp	r0, r1
   685e4:	bhi	68614 <__assert_fail@plt+0x55a5c>
   685e8:	ldr	r0, [sp, #20]
   685ec:	ldr	r1, [sp, #28]
   685f0:	ldr	r1, [r1, #8]
   685f4:	ldr	r2, [sp, #36]	; 0x24
   685f8:	add	r1, r1, r2, lsl #2
   685fc:	ldr	r1, [r1]
   68600:	cmp	r0, r1
   68604:	bhi	68614 <__assert_fail@plt+0x55a5c>
   68608:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6860c:	str	r0, [sp, #24]
   68610:	b	6862c <__assert_fail@plt+0x55a74>
   68614:	b	68618 <__assert_fail@plt+0x55a60>
   68618:	ldr	r0, [sp, #36]	; 0x24
   6861c:	add	r0, r0, #1
   68620:	str	r0, [sp, #36]	; 0x24
   68624:	b	685b4 <__assert_fail@plt+0x559fc>
   68628:	b	6862c <__assert_fail@plt+0x55a74>
   6862c:	ldr	r0, [sp, #28]
   68630:	ldrb	r0, [r0, #16]
   68634:	and	r0, r0, #1
   68638:	and	r0, r0, #255	; 0xff
   6863c:	cmp	r0, #0
   68640:	bne	68650 <__assert_fail@plt+0x55a98>
   68644:	ldr	r0, [sp, #24]
   68648:	str	r0, [fp, #-4]
   6864c:	b	686a0 <__assert_fail@plt+0x55ae8>
   68650:	ldr	r0, [sp, #24]
   68654:	cmp	r0, #0
   68658:	ble	68668 <__assert_fail@plt+0x55ab0>
   6865c:	movw	r0, #0
   68660:	str	r0, [fp, #-4]
   68664:	b	686a0 <__assert_fail@plt+0x55ae8>
   68668:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6866c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   68670:	cmp	r0, r1
   68674:	ble	68684 <__assert_fail@plt+0x55acc>
   68678:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6867c:	str	r0, [sp, #4]
   68680:	b	6868c <__assert_fail@plt+0x55ad4>
   68684:	ldr	r0, [fp, #-28]	; 0xffffffe4
   68688:	str	r0, [sp, #4]
   6868c:	ldr	r0, [sp, #4]
   68690:	str	r0, [fp, #-4]
   68694:	b	686a0 <__assert_fail@plt+0x55ae8>
   68698:	movw	r0, #0
   6869c:	str	r0, [fp, #-4]
   686a0:	ldr	r0, [fp, #-4]
   686a4:	mov	sp, fp
   686a8:	pop	{fp, pc}
   686ac:	push	{fp, lr}
   686b0:	mov	fp, sp
   686b4:	sub	sp, sp, #32
   686b8:	str	r0, [fp, #-8]
   686bc:	str	r1, [fp, #-12]
   686c0:	str	r2, [sp, #16]
   686c4:	ldr	r0, [fp, #-8]
   686c8:	ldr	r0, [r0, #4]
   686cc:	ldr	r1, [sp, #16]
   686d0:	ldrb	r0, [r0, r1]
   686d4:	strb	r0, [sp, #15]
   686d8:	ldr	r0, [fp, #-12]
   686dc:	ldrb	r0, [r0, #4]
   686e0:	sub	r0, r0, #1
   686e4:	cmp	r0, #6
   686e8:	str	r0, [sp, #4]
   686ec:	bhi	687ec <__assert_fail@plt+0x55c34>
   686f0:	add	r0, pc, #8
   686f4:	ldr	r1, [sp, #4]
   686f8:	ldr	r0, [r0, r1, lsl #2]
   686fc:	mov	pc, r0
   68700:	andeq	r8, r6, ip, lsl r7
   68704:	andeq	r8, r6, ip, ror #15
   68708:	andeq	r8, r6, r4, asr #14
   6870c:	andeq	r8, r6, ip, ror #15
   68710:	muleq	r6, r0, r7
   68714:	andeq	r8, r6, ip, ror #15
   68718:	andeq	r8, r6, r0, ror r7
   6871c:	ldr	r0, [fp, #-12]
   68720:	ldrb	r0, [r0]
   68724:	ldrb	r1, [sp, #15]
   68728:	cmp	r0, r1
   6872c:	beq	68740 <__assert_fail@plt+0x55b88>
   68730:	movw	r0, #0
   68734:	and	r0, r0, #1
   68738:	strb	r0, [fp, #-1]
   6873c:	b	68910 <__assert_fail@plt+0x55d58>
   68740:	b	687fc <__assert_fail@plt+0x55c44>
   68744:	ldr	r0, [fp, #-12]
   68748:	ldr	r0, [r0]
   6874c:	ldrb	r1, [sp, #15]
   68750:	bl	64d08 <__assert_fail@plt+0x52150>
   68754:	tst	r0, #1
   68758:	bne	6876c <__assert_fail@plt+0x55bb4>
   6875c:	movw	r0, #0
   68760:	and	r0, r0, #1
   68764:	strb	r0, [fp, #-1]
   68768:	b	68910 <__assert_fail@plt+0x55d58>
   6876c:	b	687fc <__assert_fail@plt+0x55c44>
   68770:	ldrb	r0, [sp, #15]
   68774:	cmp	r0, #128	; 0x80
   68778:	blt	6878c <__assert_fail@plt+0x55bd4>
   6877c:	movw	r0, #0
   68780:	and	r0, r0, #1
   68784:	strb	r0, [fp, #-1]
   68788:	b	68910 <__assert_fail@plt+0x55d58>
   6878c:	b	68790 <__assert_fail@plt+0x55bd8>
   68790:	ldrb	r0, [sp, #15]
   68794:	cmp	r0, #10
   68798:	bne	687b4 <__assert_fail@plt+0x55bfc>
   6879c:	ldr	r0, [fp, #-8]
   687a0:	ldr	r0, [r0, #84]	; 0x54
   687a4:	ldr	r0, [r0, #128]	; 0x80
   687a8:	and	r0, r0, #64	; 0x40
   687ac:	cmp	r0, #0
   687b0:	beq	687d8 <__assert_fail@plt+0x55c20>
   687b4:	ldrb	r0, [sp, #15]
   687b8:	cmp	r0, #0
   687bc:	bne	687e8 <__assert_fail@plt+0x55c30>
   687c0:	ldr	r0, [fp, #-8]
   687c4:	ldr	r0, [r0, #84]	; 0x54
   687c8:	ldr	r0, [r0, #128]	; 0x80
   687cc:	and	r0, r0, #128	; 0x80
   687d0:	cmp	r0, #0
   687d4:	beq	687e8 <__assert_fail@plt+0x55c30>
   687d8:	movw	r0, #0
   687dc:	and	r0, r0, #1
   687e0:	strb	r0, [fp, #-1]
   687e4:	b	68910 <__assert_fail@plt+0x55d58>
   687e8:	b	687fc <__assert_fail@plt+0x55c44>
   687ec:	movw	r0, #0
   687f0:	and	r0, r0, #1
   687f4:	strb	r0, [fp, #-1]
   687f8:	b	68910 <__assert_fail@plt+0x55d58>
   687fc:	ldr	r0, [fp, #-12]
   68800:	ldr	r0, [r0, #4]
   68804:	lsr	r0, r0, #8
   68808:	movw	r1, #1023	; 0x3ff
   6880c:	and	r0, r0, r1
   68810:	cmp	r0, #0
   68814:	beq	68904 <__assert_fail@plt+0x55d4c>
   68818:	ldr	r0, [fp, #-8]
   6881c:	ldr	r1, [sp, #16]
   68820:	ldr	r2, [fp, #-8]
   68824:	ldr	r2, [r2, #88]	; 0x58
   68828:	bl	64998 <__assert_fail@plt+0x51de0>
   6882c:	str	r0, [sp, #8]
   68830:	ldr	r0, [fp, #-12]
   68834:	ldr	r0, [r0, #4]
   68838:	lsr	r0, r0, #8
   6883c:	movw	r1, #1023	; 0x3ff
   68840:	and	r0, r0, r1
   68844:	and	r0, r0, #4
   68848:	cmp	r0, #0
   6884c:	beq	68860 <__assert_fail@plt+0x55ca8>
   68850:	ldr	r0, [sp, #8]
   68854:	and	r0, r0, #1
   68858:	cmp	r0, #0
   6885c:	beq	688f0 <__assert_fail@plt+0x55d38>
   68860:	ldr	r0, [fp, #-12]
   68864:	ldr	r0, [r0, #4]
   68868:	lsr	r0, r0, #8
   6886c:	movw	r1, #1023	; 0x3ff
   68870:	and	r0, r0, r1
   68874:	and	r0, r0, #8
   68878:	cmp	r0, #0
   6887c:	beq	68890 <__assert_fail@plt+0x55cd8>
   68880:	ldr	r0, [sp, #8]
   68884:	and	r0, r0, #1
   68888:	cmp	r0, #0
   6888c:	bne	688f0 <__assert_fail@plt+0x55d38>
   68890:	ldr	r0, [fp, #-12]
   68894:	ldr	r0, [r0, #4]
   68898:	lsr	r0, r0, #8
   6889c:	movw	r1, #1023	; 0x3ff
   688a0:	and	r0, r0, r1
   688a4:	and	r0, r0, #32
   688a8:	cmp	r0, #0
   688ac:	beq	688c0 <__assert_fail@plt+0x55d08>
   688b0:	ldr	r0, [sp, #8]
   688b4:	and	r0, r0, #2
   688b8:	cmp	r0, #0
   688bc:	beq	688f0 <__assert_fail@plt+0x55d38>
   688c0:	ldr	r0, [fp, #-12]
   688c4:	ldr	r0, [r0, #4]
   688c8:	lsr	r0, r0, #8
   688cc:	movw	r1, #1023	; 0x3ff
   688d0:	and	r0, r0, r1
   688d4:	and	r0, r0, #128	; 0x80
   688d8:	cmp	r0, #0
   688dc:	beq	68900 <__assert_fail@plt+0x55d48>
   688e0:	ldr	r0, [sp, #8]
   688e4:	and	r0, r0, #8
   688e8:	cmp	r0, #0
   688ec:	bne	68900 <__assert_fail@plt+0x55d48>
   688f0:	movw	r0, #0
   688f4:	and	r0, r0, #1
   688f8:	strb	r0, [fp, #-1]
   688fc:	b	68910 <__assert_fail@plt+0x55d58>
   68900:	b	68904 <__assert_fail@plt+0x55d4c>
   68904:	movw	r0, #1
   68908:	and	r0, r0, #1
   6890c:	strb	r0, [fp, #-1]
   68910:	ldrb	r0, [fp, #-1]
   68914:	and	r0, r0, #1
   68918:	mov	sp, fp
   6891c:	pop	{fp, pc}
   68920:	sub	sp, sp, #8
   68924:	str	r0, [sp, #4]
   68928:	str	r1, [sp]
   6892c:	movw	r0, #1
   68930:	add	sp, sp, #8
   68934:	bx	lr
   68938:	push	{fp, lr}
   6893c:	mov	fp, sp
   68940:	sub	sp, sp, #72	; 0x48
   68944:	str	r0, [fp, #-8]
   68948:	str	r1, [fp, #-12]
   6894c:	ldr	r0, [fp, #-8]
   68950:	ldr	r0, [r0, #84]	; 0x54
   68954:	str	r0, [fp, #-16]
   68958:	movw	r0, #0
   6895c:	str	r0, [fp, #-24]	; 0xffffffe8
   68960:	ldr	r0, [fp, #-24]	; 0xffffffe8
   68964:	ldr	r1, [fp, #-12]
   68968:	ldr	r1, [r1, #8]
   6896c:	cmp	r0, r1
   68970:	bge	68d00 <__assert_fail@plt+0x56148>
   68974:	ldr	r0, [fp, #-12]
   68978:	ldr	r0, [r0, #12]
   6897c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   68980:	ldr	r0, [r0, r1, lsl #2]
   68984:	str	r0, [sp, #28]
   68988:	ldr	r0, [fp, #-16]
   6898c:	ldr	r0, [r0]
   68990:	ldr	r1, [sp, #28]
   68994:	add	r0, r0, r1, lsl #3
   68998:	ldr	r0, [r0, #4]
   6899c:	lsr	r0, r0, #20
   689a0:	and	r0, r0, #1
   689a4:	cmp	r0, #0
   689a8:	bne	689b0 <__assert_fail@plt+0x55df8>
   689ac:	b	68cf0 <__assert_fail@plt+0x56138>
   689b0:	ldr	r0, [fp, #-16]
   689b4:	ldr	r0, [r0]
   689b8:	ldr	r1, [sp, #28]
   689bc:	add	r0, r0, r1, lsl #3
   689c0:	ldr	r0, [r0, #4]
   689c4:	lsr	r0, r0, #8
   689c8:	movw	r1, #1023	; 0x3ff
   689cc:	and	r0, r0, r1
   689d0:	cmp	r0, #0
   689d4:	beq	68ae4 <__assert_fail@plt+0x55f2c>
   689d8:	ldr	r0, [fp, #-8]
   689dc:	ldr	r1, [r0, #40]	; 0x28
   689e0:	ldr	r2, [r0, #88]	; 0x58
   689e4:	bl	64998 <__assert_fail@plt+0x51de0>
   689e8:	str	r0, [sp, #16]
   689ec:	ldr	r0, [fp, #-16]
   689f0:	ldr	r0, [r0]
   689f4:	ldr	r1, [sp, #28]
   689f8:	add	r0, r0, r1, lsl #3
   689fc:	ldr	r0, [r0, #4]
   68a00:	lsr	r0, r0, #8
   68a04:	movw	r1, #1023	; 0x3ff
   68a08:	and	r0, r0, r1
   68a0c:	and	r0, r0, #4
   68a10:	cmp	r0, #0
   68a14:	beq	68a28 <__assert_fail@plt+0x55e70>
   68a18:	ldr	r0, [sp, #16]
   68a1c:	and	r0, r0, #1
   68a20:	cmp	r0, #0
   68a24:	beq	68adc <__assert_fail@plt+0x55f24>
   68a28:	ldr	r0, [fp, #-16]
   68a2c:	ldr	r0, [r0]
   68a30:	ldr	r1, [sp, #28]
   68a34:	add	r0, r0, r1, lsl #3
   68a38:	ldr	r0, [r0, #4]
   68a3c:	lsr	r0, r0, #8
   68a40:	movw	r1, #1023	; 0x3ff
   68a44:	and	r0, r0, r1
   68a48:	and	r0, r0, #8
   68a4c:	cmp	r0, #0
   68a50:	beq	68a64 <__assert_fail@plt+0x55eac>
   68a54:	ldr	r0, [sp, #16]
   68a58:	and	r0, r0, #1
   68a5c:	cmp	r0, #0
   68a60:	bne	68adc <__assert_fail@plt+0x55f24>
   68a64:	ldr	r0, [fp, #-16]
   68a68:	ldr	r0, [r0]
   68a6c:	ldr	r1, [sp, #28]
   68a70:	add	r0, r0, r1, lsl #3
   68a74:	ldr	r0, [r0, #4]
   68a78:	lsr	r0, r0, #8
   68a7c:	movw	r1, #1023	; 0x3ff
   68a80:	and	r0, r0, r1
   68a84:	and	r0, r0, #32
   68a88:	cmp	r0, #0
   68a8c:	beq	68aa0 <__assert_fail@plt+0x55ee8>
   68a90:	ldr	r0, [sp, #16]
   68a94:	and	r0, r0, #2
   68a98:	cmp	r0, #0
   68a9c:	beq	68adc <__assert_fail@plt+0x55f24>
   68aa0:	ldr	r0, [fp, #-16]
   68aa4:	ldr	r0, [r0]
   68aa8:	ldr	r1, [sp, #28]
   68aac:	add	r0, r0, r1, lsl #3
   68ab0:	ldr	r0, [r0, #4]
   68ab4:	lsr	r0, r0, #8
   68ab8:	movw	r1, #1023	; 0x3ff
   68abc:	and	r0, r0, r1
   68ac0:	and	r0, r0, #128	; 0x80
   68ac4:	cmp	r0, #0
   68ac8:	beq	68ae0 <__assert_fail@plt+0x55f28>
   68acc:	ldr	r0, [sp, #16]
   68ad0:	and	r0, r0, #8
   68ad4:	cmp	r0, #0
   68ad8:	bne	68ae0 <__assert_fail@plt+0x55f28>
   68adc:	b	68cf0 <__assert_fail@plt+0x56138>
   68ae0:	b	68ae4 <__assert_fail@plt+0x55f2c>
   68ae4:	ldr	r0, [fp, #-16]
   68ae8:	ldr	r1, [sp, #28]
   68aec:	ldr	r2, [fp, #-8]
   68af0:	ldr	r3, [fp, #-8]
   68af4:	ldr	r3, [r3, #40]	; 0x28
   68af8:	bl	680c4 <__assert_fail@plt+0x5550c>
   68afc:	str	r0, [sp, #24]
   68b00:	ldr	r0, [sp, #24]
   68b04:	cmp	r0, #0
   68b08:	bne	68b10 <__assert_fail@plt+0x55f58>
   68b0c:	b	68cf0 <__assert_fail@plt+0x56138>
   68b10:	ldr	r0, [fp, #-8]
   68b14:	ldr	r0, [r0, #40]	; 0x28
   68b18:	ldr	r1, [sp, #24]
   68b1c:	add	r0, r0, r1
   68b20:	str	r0, [sp, #20]
   68b24:	ldr	r0, [fp, #-8]
   68b28:	ldr	r0, [r0, #120]	; 0x78
   68b2c:	ldr	r1, [sp, #24]
   68b30:	cmp	r0, r1
   68b34:	bge	68b44 <__assert_fail@plt+0x55f8c>
   68b38:	ldr	r0, [sp, #24]
   68b3c:	str	r0, [sp, #8]
   68b40:	b	68b50 <__assert_fail@plt+0x55f98>
   68b44:	ldr	r0, [fp, #-8]
   68b48:	ldr	r0, [r0, #120]	; 0x78
   68b4c:	str	r0, [sp, #8]
   68b50:	ldr	r0, [sp, #8]
   68b54:	ldr	r1, [fp, #-8]
   68b58:	str	r0, [r1, #120]	; 0x78
   68b5c:	ldr	r0, [fp, #-8]
   68b60:	ldr	r1, [sp, #20]
   68b64:	bl	665c0 <__assert_fail@plt+0x53a08>
   68b68:	str	r0, [fp, #-20]	; 0xffffffec
   68b6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   68b70:	cmp	r0, #0
   68b74:	beq	68b84 <__assert_fail@plt+0x55fcc>
   68b78:	ldr	r0, [fp, #-20]	; 0xffffffec
   68b7c:	str	r0, [fp, #-4]
   68b80:	b	68d08 <__assert_fail@plt+0x56150>
   68b84:	ldr	r0, [fp, #-16]
   68b88:	ldr	r0, [r0, #12]
   68b8c:	ldr	r1, [sp, #28]
   68b90:	add	r0, r0, r1, lsl #2
   68b94:	ldr	r0, [r0]
   68b98:	cmn	r0, #1
   68b9c:	beq	68ba4 <__assert_fail@plt+0x55fec>
   68ba0:	b	68ba4 <__assert_fail@plt+0x55fec>
   68ba4:	ldr	r0, [fp, #-16]
   68ba8:	ldr	r1, [r0, #12]
   68bac:	ldr	r0, [r0, #24]
   68bb0:	ldr	r2, [sp, #28]
   68bb4:	ldr	r1, [r1, r2, lsl #2]
   68bb8:	add	r1, r1, r1, lsl #1
   68bbc:	add	r0, r0, r1, lsl #2
   68bc0:	str	r0, [sp, #32]
   68bc4:	ldr	r0, [fp, #-8]
   68bc8:	ldr	r0, [r0, #100]	; 0x64
   68bcc:	ldr	r1, [sp, #20]
   68bd0:	add	r0, r0, r1, lsl #2
   68bd4:	ldr	r0, [r0]
   68bd8:	str	r0, [sp, #12]
   68bdc:	ldr	r0, [sp, #12]
   68be0:	movw	r1, #0
   68be4:	cmp	r0, r1
   68be8:	bne	68c0c <__assert_fail@plt+0x56054>
   68bec:	ldr	r0, [sp, #32]
   68bf0:	ldr	r1, [r0]
   68bf4:	str	r1, [sp, #36]	; 0x24
   68bf8:	ldr	r1, [r0, #4]
   68bfc:	str	r1, [sp, #40]	; 0x28
   68c00:	ldr	r0, [r0, #8]
   68c04:	str	r0, [sp, #44]	; 0x2c
   68c08:	b	68c40 <__assert_fail@plt+0x56088>
   68c0c:	ldr	r0, [sp, #12]
   68c10:	ldr	r1, [r0, #40]	; 0x28
   68c14:	ldr	r2, [sp, #32]
   68c18:	add	r0, sp, #36	; 0x24
   68c1c:	bl	6618c <__assert_fail@plt+0x535d4>
   68c20:	str	r0, [fp, #-20]	; 0xffffffec
   68c24:	ldr	r0, [fp, #-20]	; 0xffffffec
   68c28:	cmp	r0, #0
   68c2c:	beq	68c3c <__assert_fail@plt+0x56084>
   68c30:	ldr	r0, [fp, #-20]	; 0xffffffec
   68c34:	str	r0, [fp, #-4]
   68c38:	b	68d08 <__assert_fail@plt+0x56150>
   68c3c:	b	68c40 <__assert_fail@plt+0x56088>
   68c40:	ldr	r0, [fp, #-8]
   68c44:	ldr	r1, [sp, #20]
   68c48:	sub	r1, r1, #1
   68c4c:	ldr	r2, [r0, #88]	; 0x58
   68c50:	bl	64998 <__assert_fail@plt+0x51de0>
   68c54:	str	r0, [sp, #16]
   68c58:	ldr	r1, [fp, #-16]
   68c5c:	ldr	r3, [sp, #16]
   68c60:	sub	r0, fp, #20
   68c64:	add	r2, sp, #36	; 0x24
   68c68:	bl	6215c <__assert_fail@plt+0x4f5a4>
   68c6c:	ldr	r1, [fp, #-8]
   68c70:	ldr	r1, [r1, #100]	; 0x64
   68c74:	ldr	r2, [sp, #20]
   68c78:	add	r1, r1, r2, lsl #2
   68c7c:	str	r0, [r1]
   68c80:	ldr	r0, [sp, #12]
   68c84:	movw	r1, #0
   68c88:	cmp	r0, r1
   68c8c:	beq	68c98 <__assert_fail@plt+0x560e0>
   68c90:	ldr	r0, [sp, #44]	; 0x2c
   68c94:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   68c98:	ldr	r0, [fp, #-8]
   68c9c:	ldr	r0, [r0, #100]	; 0x64
   68ca0:	ldr	r1, [sp, #20]
   68ca4:	add	r0, r0, r1, lsl #2
   68ca8:	ldr	r0, [r0]
   68cac:	movw	r1, #0
   68cb0:	cmp	r0, r1
   68cb4:	movw	r0, #0
   68cb8:	str	r0, [sp, #4]
   68cbc:	bne	68cd4 <__assert_fail@plt+0x5611c>
   68cc0:	ldr	r0, [fp, #-20]	; 0xffffffec
   68cc4:	cmp	r0, #0
   68cc8:	movw	r0, #0
   68ccc:	movne	r0, #1
   68cd0:	str	r0, [sp, #4]
   68cd4:	ldr	r0, [sp, #4]
   68cd8:	tst	r0, #1
   68cdc:	beq	68cec <__assert_fail@plt+0x56134>
   68ce0:	ldr	r0, [fp, #-20]	; 0xffffffec
   68ce4:	str	r0, [fp, #-4]
   68ce8:	b	68d08 <__assert_fail@plt+0x56150>
   68cec:	b	68cf0 <__assert_fail@plt+0x56138>
   68cf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   68cf4:	add	r0, r0, #1
   68cf8:	str	r0, [fp, #-24]	; 0xffffffe8
   68cfc:	b	68960 <__assert_fail@plt+0x55da8>
   68d00:	movw	r0, #0
   68d04:	str	r0, [fp, #-4]
   68d08:	ldr	r0, [fp, #-4]
   68d0c:	mov	sp, fp
   68d10:	pop	{fp, pc}
   68d14:	push	{r4, r5, fp, lr}
   68d18:	add	fp, sp, #8
   68d1c:	sub	sp, sp, #2160	; 0x870
   68d20:	sub	sp, sp, #12288	; 0x3000
   68d24:	add	r3, sp, #20
   68d28:	sub	lr, fp, #6144	; 0x1800
   68d2c:	sub	r2, lr, #100	; 0x64
   68d30:	str	r0, [fp, #-16]
   68d34:	str	r1, [fp, #-20]	; 0xffffffec
   68d38:	movw	r0, #0
   68d3c:	strb	r0, [fp, #-37]	; 0xffffffdb
   68d40:	ldr	r0, [fp, #-20]	; 0xffffffec
   68d44:	movw	r1, #0
   68d48:	str	r1, [r0, #44]	; 0x2c
   68d4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   68d50:	str	r1, [r0, #48]	; 0x30
   68d54:	ldr	r0, [fp, #-16]
   68d58:	ldr	r1, [fp, #-20]	; 0xffffffec
   68d5c:	bl	6953c <__assert_fail@plt+0x56984>
   68d60:	str	r0, [fp, #-52]	; 0xffffffcc
   68d64:	ldr	r0, [fp, #-52]	; 0xffffffcc
   68d68:	cmp	r0, #0
   68d6c:	bgt	68dd4 <__assert_fail@plt+0x5621c>
   68d70:	ldr	r0, [fp, #-52]	; 0xffffffcc
   68d74:	cmp	r0, #0
   68d78:	bne	68dc4 <__assert_fail@plt+0x5620c>
   68d7c:	movw	r0, #4
   68d80:	movw	r1, #256	; 0x100
   68d84:	bl	4e0e0 <__assert_fail@plt+0x3b528>
   68d88:	ldr	r1, [fp, #-20]	; 0xffffffec
   68d8c:	str	r0, [r1, #44]	; 0x2c
   68d90:	ldr	r0, [fp, #-20]	; 0xffffffec
   68d94:	ldr	r0, [r0, #44]	; 0x2c
   68d98:	movw	r1, #0
   68d9c:	cmp	r0, r1
   68da0:	bne	68db4 <__assert_fail@plt+0x561fc>
   68da4:	movw	r0, #0
   68da8:	and	r0, r0, #1
   68dac:	strb	r0, [fp, #-9]
   68db0:	b	6952c <__assert_fail@plt+0x56974>
   68db4:	movw	r0, #1
   68db8:	and	r0, r0, #1
   68dbc:	strb	r0, [fp, #-9]
   68dc0:	b	6952c <__assert_fail@plt+0x56974>
   68dc4:	movw	r0, #0
   68dc8:	and	r0, r0, #1
   68dcc:	strb	r0, [fp, #-9]
   68dd0:	b	6952c <__assert_fail@plt+0x56974>
   68dd4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   68dd8:	add	r1, r0, #1
   68ddc:	sub	lr, fp, #3072	; 0xc00
   68de0:	sub	r0, lr, #68	; 0x44
   68de4:	bl	61148 <__assert_fail@plt+0x4e590>
   68de8:	str	r0, [fp, #-24]	; 0xffffffe8
   68dec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   68df0:	cmp	r0, #0
   68df4:	beq	68e5c <__assert_fail@plt+0x562a4>
   68df8:	b	68dfc <__assert_fail@plt+0x56244>
   68dfc:	ldr	r0, [fp, #-3132]	; 0xfffff3c4
   68e00:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   68e04:	movw	r0, #0
   68e08:	str	r0, [fp, #-28]	; 0xffffffe4
   68e0c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   68e10:	ldr	r1, [fp, #-52]	; 0xffffffcc
   68e14:	cmp	r0, r1
   68e18:	bge	68e4c <__assert_fail@plt+0x56294>
   68e1c:	sub	lr, fp, #6144	; 0x1800
   68e20:	sub	r0, lr, #100	; 0x64
   68e24:	ldr	r1, [fp, #-28]	; 0xffffffe4
   68e28:	movw	r2, #12
   68e2c:	mul	r1, r1, r2
   68e30:	add	r0, r0, r1
   68e34:	ldr	r0, [r0, #8]
   68e38:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   68e3c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   68e40:	add	r0, r0, #1
   68e44:	str	r0, [fp, #-28]	; 0xffffffe4
   68e48:	b	68e0c <__assert_fail@plt+0x56254>
   68e4c:	movw	r0, #0
   68e50:	and	r0, r0, #1
   68e54:	strb	r0, [fp, #-9]
   68e58:	b	6952c <__assert_fail@plt+0x56974>
   68e5c:	sub	lr, fp, #3072	; 0xc00
   68e60:	sub	r0, lr, #100	; 0x64
   68e64:	bl	69d1c <__assert_fail@plt+0x57164>
   68e68:	movw	r0, #0
   68e6c:	str	r0, [fp, #-28]	; 0xffffffe4
   68e70:	ldr	r0, [fp, #-28]	; 0xffffffe4
   68e74:	ldr	r1, [fp, #-52]	; 0xffffffcc
   68e78:	cmp	r0, r1
   68e7c:	bge	6914c <__assert_fail@plt+0x56594>
   68e80:	movw	r0, #0
   68e84:	str	r0, [fp, #-3136]	; 0xfffff3c0
   68e88:	str	r0, [fp, #-32]	; 0xffffffe0
   68e8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   68e90:	ldr	r1, [fp, #-28]	; 0xffffffe4
   68e94:	movw	r2, #12
   68e98:	mul	r1, r1, r2
   68e9c:	sub	lr, fp, #6144	; 0x1800
   68ea0:	sub	r2, lr, #100	; 0x64
   68ea4:	add	r1, r2, r1
   68ea8:	ldr	r1, [r1, #4]
   68eac:	cmp	r0, r1
   68eb0:	bge	68f44 <__assert_fail@plt+0x5638c>
   68eb4:	ldr	r0, [fp, #-16]
   68eb8:	ldr	r0, [r0, #12]
   68ebc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   68ec0:	add	r1, r1, r1, lsl #1
   68ec4:	sub	lr, fp, #6144	; 0x1800
   68ec8:	sub	r2, lr, #100	; 0x64
   68ecc:	add	r1, r2, r1, lsl #2
   68ed0:	ldr	r1, [r1, #8]
   68ed4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   68ed8:	ldr	r1, [r1, r2, lsl #2]
   68edc:	add	r0, r0, r1, lsl #2
   68ee0:	ldr	r0, [r0]
   68ee4:	str	r0, [sp, #16]
   68ee8:	ldr	r0, [sp, #16]
   68eec:	cmn	r0, #1
   68ef0:	beq	68f30 <__assert_fail@plt+0x56378>
   68ef4:	ldr	r0, [fp, #-16]
   68ef8:	ldr	r0, [r0, #24]
   68efc:	ldr	r1, [sp, #16]
   68f00:	movw	r2, #12
   68f04:	mul	r1, r1, r2
   68f08:	add	r1, r0, r1
   68f0c:	sub	lr, fp, #3072	; 0xc00
   68f10:	sub	r0, lr, #68	; 0x44
   68f14:	bl	616c0 <__assert_fail@plt+0x4eb08>
   68f18:	str	r0, [fp, #-24]	; 0xffffffe8
   68f1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   68f20:	cmp	r0, #0
   68f24:	beq	68f2c <__assert_fail@plt+0x56374>
   68f28:	b	68dfc <__assert_fail@plt+0x56244>
   68f2c:	b	68f30 <__assert_fail@plt+0x56378>
   68f30:	b	68f34 <__assert_fail@plt+0x5637c>
   68f34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   68f38:	add	r0, r0, #1
   68f3c:	str	r0, [fp, #-32]	; 0xffffffe0
   68f40:	b	68e8c <__assert_fail@plt+0x562d4>
   68f44:	ldr	r1, [fp, #-16]
   68f48:	sub	r0, fp, #24
   68f4c:	sub	lr, fp, #3072	; 0xc00
   68f50:	sub	r2, lr, #68	; 0x44
   68f54:	mov	r3, #0
   68f58:	bl	6215c <__assert_fail@plt+0x4f5a4>
   68f5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   68f60:	sub	lr, fp, #1024	; 0x400
   68f64:	sub	r2, lr, #56	; 0x38
   68f68:	str	r0, [r2, r1, lsl #2]
   68f6c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   68f70:	add	r0, r2, r0, lsl #2
   68f74:	ldr	r0, [r0]
   68f78:	movw	r1, #0
   68f7c:	cmp	r0, r1
   68f80:	movw	r0, #0
   68f84:	str	r0, [sp, #12]
   68f88:	bne	68fa0 <__assert_fail@plt+0x563e8>
   68f8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   68f90:	cmp	r0, #0
   68f94:	movw	r0, #0
   68f98:	movne	r0, #1
   68f9c:	str	r0, [sp, #12]
   68fa0:	ldr	r0, [sp, #12]
   68fa4:	tst	r0, #1
   68fa8:	beq	68fb0 <__assert_fail@plt+0x563f8>
   68fac:	b	68dfc <__assert_fail@plt+0x56244>
   68fb0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   68fb4:	sub	lr, fp, #1024	; 0x400
   68fb8:	sub	r1, lr, #56	; 0x38
   68fbc:	ldr	r0, [r1, r0, lsl #2]
   68fc0:	ldrb	r0, [r0, #52]	; 0x34
   68fc4:	lsr	r0, r0, #7
   68fc8:	and	r0, r0, #255	; 0xff
   68fcc:	cmp	r0, #0
   68fd0:	beq	690f0 <__assert_fail@plt+0x56538>
   68fd4:	ldr	r1, [fp, #-16]
   68fd8:	sub	r0, fp, #24
   68fdc:	sub	lr, fp, #3072	; 0xc00
   68fe0:	sub	r2, lr, #68	; 0x44
   68fe4:	mov	r3, #1
   68fe8:	bl	6215c <__assert_fail@plt+0x4f5a4>
   68fec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   68ff0:	sub	lr, fp, #2048	; 0x800
   68ff4:	sub	r2, lr, #56	; 0x38
   68ff8:	str	r0, [r2, r1, lsl #2]
   68ffc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   69000:	add	r0, r2, r0, lsl #2
   69004:	ldr	r0, [r0]
   69008:	movw	r1, #0
   6900c:	cmp	r0, r1
   69010:	movw	r0, #0
   69014:	str	r0, [sp, #8]
   69018:	bne	69030 <__assert_fail@plt+0x56478>
   6901c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   69020:	cmp	r0, #0
   69024:	movw	r0, #0
   69028:	movne	r0, #1
   6902c:	str	r0, [sp, #8]
   69030:	ldr	r0, [sp, #8]
   69034:	tst	r0, #1
   69038:	beq	69040 <__assert_fail@plt+0x56488>
   6903c:	b	68dfc <__assert_fail@plt+0x56244>
   69040:	ldr	r0, [fp, #-28]	; 0xffffffe4
   69044:	sub	lr, fp, #1024	; 0x400
   69048:	sub	r1, lr, #56	; 0x38
   6904c:	ldr	r1, [r1, r0, lsl #2]
   69050:	sub	lr, fp, #2048	; 0x800
   69054:	sub	r2, lr, #56	; 0x38
   69058:	add	r0, r2, r0, lsl #2
   6905c:	ldr	r0, [r0]
   69060:	cmp	r1, r0
   69064:	beq	69080 <__assert_fail@plt+0x564c8>
   69068:	ldr	r0, [fp, #-16]
   6906c:	ldr	r0, [r0, #92]	; 0x5c
   69070:	cmp	r0, #1
   69074:	ble	69080 <__assert_fail@plt+0x564c8>
   69078:	movw	r0, #1
   6907c:	strb	r0, [fp, #-37]	; 0xffffffdb
   69080:	ldr	r1, [fp, #-16]
   69084:	sub	r0, fp, #24
   69088:	sub	lr, fp, #3072	; 0xc00
   6908c:	sub	r2, lr, #68	; 0x44
   69090:	mov	r3, #2
   69094:	bl	6215c <__assert_fail@plt+0x4f5a4>
   69098:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6909c:	sub	lr, fp, #3072	; 0xc00
   690a0:	sub	r2, lr, #56	; 0x38
   690a4:	str	r0, [r2, r1, lsl #2]
   690a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   690ac:	add	r0, r2, r0, lsl #2
   690b0:	ldr	r0, [r0]
   690b4:	movw	r1, #0
   690b8:	cmp	r0, r1
   690bc:	movw	r0, #0
   690c0:	str	r0, [sp, #4]
   690c4:	bne	690dc <__assert_fail@plt+0x56524>
   690c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   690cc:	cmp	r0, #0
   690d0:	movw	r0, #0
   690d4:	movne	r0, #1
   690d8:	str	r0, [sp, #4]
   690dc:	ldr	r0, [sp, #4]
   690e0:	tst	r0, #1
   690e4:	beq	690ec <__assert_fail@plt+0x56534>
   690e8:	b	68dfc <__assert_fail@plt+0x56244>
   690ec:	b	69124 <__assert_fail@plt+0x5656c>
   690f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   690f4:	sub	lr, fp, #1024	; 0x400
   690f8:	sub	r1, lr, #56	; 0x38
   690fc:	ldr	r2, [r1, r0, lsl #2]
   69100:	sub	lr, fp, #2048	; 0x800
   69104:	sub	r3, lr, #56	; 0x38
   69108:	str	r2, [r3, r0, lsl #2]
   6910c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   69110:	ldr	r1, [r1, r0, lsl #2]
   69114:	sub	lr, fp, #3072	; 0xc00
   69118:	sub	r2, lr, #56	; 0x38
   6911c:	add	r0, r2, r0, lsl #2
   69120:	str	r1, [r0]
   69124:	sub	lr, fp, #3072	; 0xc00
   69128:	sub	r0, lr, #100	; 0x64
   6912c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   69130:	add	r2, sp, #20
   69134:	add	r1, r2, r1, lsl #5
   69138:	bl	69d48 <__assert_fail@plt+0x57190>
   6913c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   69140:	add	r0, r0, #1
   69144:	str	r0, [fp, #-28]	; 0xffffffe4
   69148:	b	68e70 <__assert_fail@plt+0x562b8>
   6914c:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   69150:	tst	r0, #1
   69154:	bne	692d4 <__assert_fail@plt+0x5671c>
   69158:	movw	r0, #4
   6915c:	movw	r1, #256	; 0x100
   69160:	bl	4e0e0 <__assert_fail@plt+0x3b528>
   69164:	ldr	r1, [fp, #-20]	; 0xffffffec
   69168:	str	r0, [r1, #44]	; 0x2c
   6916c:	str	r0, [fp, #-56]	; 0xffffffc8
   69170:	ldr	r0, [fp, #-56]	; 0xffffffc8
   69174:	movw	r1, #0
   69178:	cmp	r0, r1
   6917c:	bne	69184 <__assert_fail@plt+0x565cc>
   69180:	b	68dfc <__assert_fail@plt+0x56244>
   69184:	movw	r0, #0
   69188:	str	r0, [fp, #-28]	; 0xffffffe4
   6918c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   69190:	cmp	r0, #8
   69194:	bge	692d0 <__assert_fail@plt+0x56718>
   69198:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6919c:	lsl	r0, r0, #5
   691a0:	str	r0, [fp, #-36]	; 0xffffffdc
   691a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   691a8:	sub	lr, fp, #3072	; 0xc00
   691ac:	sub	r1, lr, #100	; 0x64
   691b0:	add	r0, r1, r0, lsl #2
   691b4:	ldr	r0, [r0]
   691b8:	str	r0, [fp, #-44]	; 0xffffffd4
   691bc:	movw	r0, #1
   691c0:	str	r0, [fp, #-48]	; 0xffffffd0
   691c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   691c8:	cmp	r0, #0
   691cc:	beq	692bc <__assert_fail@plt+0x56704>
   691d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   691d4:	and	r0, r0, #1
   691d8:	cmp	r0, #0
   691dc:	beq	69290 <__assert_fail@plt+0x566d8>
   691e0:	movw	r0, #0
   691e4:	str	r0, [fp, #-32]	; 0xffffffe0
   691e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   691ec:	add	r1, sp, #20
   691f0:	add	r0, r1, r0, lsl #5
   691f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   691f8:	add	r0, r0, r1, lsl #2
   691fc:	ldr	r0, [r0]
   69200:	ldr	r1, [fp, #-48]	; 0xffffffd0
   69204:	and	r0, r0, r1
   69208:	cmp	r0, #0
   6920c:	bne	69224 <__assert_fail@plt+0x5666c>
   69210:	b	69214 <__assert_fail@plt+0x5665c>
   69214:	ldr	r0, [fp, #-32]	; 0xffffffe0
   69218:	add	r0, r0, #1
   6921c:	str	r0, [fp, #-32]	; 0xffffffe0
   69220:	b	691e8 <__assert_fail@plt+0x56630>
   69224:	ldr	r0, [fp, #-16]
   69228:	add	r0, r0, #96	; 0x60
   6922c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   69230:	add	r0, r0, r1, lsl #2
   69234:	ldr	r0, [r0]
   69238:	ldr	r1, [fp, #-48]	; 0xffffffd0
   6923c:	and	r0, r0, r1
   69240:	cmp	r0, #0
   69244:	beq	6926c <__assert_fail@plt+0x566b4>
   69248:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6924c:	sub	lr, fp, #2048	; 0x800
   69250:	sub	r1, lr, #56	; 0x38
   69254:	ldr	r0, [r1, r0, lsl #2]
   69258:	ldr	r1, [fp, #-56]	; 0xffffffc8
   6925c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   69260:	add	r1, r1, r2, lsl #2
   69264:	str	r0, [r1]
   69268:	b	6928c <__assert_fail@plt+0x566d4>
   6926c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   69270:	sub	lr, fp, #1024	; 0x400
   69274:	sub	r1, lr, #56	; 0x38
   69278:	ldr	r0, [r1, r0, lsl #2]
   6927c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   69280:	ldr	r2, [fp, #-36]	; 0xffffffdc
   69284:	add	r1, r1, r2, lsl #2
   69288:	str	r0, [r1]
   6928c:	b	69290 <__assert_fail@plt+0x566d8>
   69290:	b	69294 <__assert_fail@plt+0x566dc>
   69294:	ldr	r0, [fp, #-48]	; 0xffffffd0
   69298:	lsl	r0, r0, #1
   6929c:	str	r0, [fp, #-48]	; 0xffffffd0
   692a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   692a4:	lsr	r0, r0, #1
   692a8:	str	r0, [fp, #-44]	; 0xffffffd4
   692ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   692b0:	add	r0, r0, #1
   692b4:	str	r0, [fp, #-36]	; 0xffffffdc
   692b8:	b	691c4 <__assert_fail@plt+0x5660c>
   692bc:	b	692c0 <__assert_fail@plt+0x56708>
   692c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   692c4:	add	r0, r0, #1
   692c8:	str	r0, [fp, #-28]	; 0xffffffe4
   692cc:	b	6918c <__assert_fail@plt+0x565d4>
   692d0:	b	69424 <__assert_fail@plt+0x5686c>
   692d4:	movw	r0, #4
   692d8:	movw	r1, #512	; 0x200
   692dc:	bl	4e0e0 <__assert_fail@plt+0x3b528>
   692e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   692e4:	str	r0, [r1, #48]	; 0x30
   692e8:	str	r0, [fp, #-56]	; 0xffffffc8
   692ec:	ldr	r0, [fp, #-56]	; 0xffffffc8
   692f0:	movw	r1, #0
   692f4:	cmp	r0, r1
   692f8:	bne	69300 <__assert_fail@plt+0x56748>
   692fc:	b	68dfc <__assert_fail@plt+0x56244>
   69300:	movw	r0, #0
   69304:	str	r0, [fp, #-28]	; 0xffffffe4
   69308:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6930c:	cmp	r0, #8
   69310:	bge	69420 <__assert_fail@plt+0x56868>
   69314:	ldr	r0, [fp, #-28]	; 0xffffffe4
   69318:	lsl	r0, r0, #5
   6931c:	str	r0, [fp, #-36]	; 0xffffffdc
   69320:	ldr	r0, [fp, #-28]	; 0xffffffe4
   69324:	sub	lr, fp, #3072	; 0xc00
   69328:	sub	r1, lr, #100	; 0x64
   6932c:	add	r0, r1, r0, lsl #2
   69330:	ldr	r0, [r0]
   69334:	str	r0, [fp, #-44]	; 0xffffffd4
   69338:	movw	r0, #1
   6933c:	str	r0, [fp, #-48]	; 0xffffffd0
   69340:	ldr	r0, [fp, #-44]	; 0xffffffd4
   69344:	cmp	r0, #0
   69348:	beq	6940c <__assert_fail@plt+0x56854>
   6934c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   69350:	and	r0, r0, #1
   69354:	cmp	r0, #0
   69358:	beq	693e0 <__assert_fail@plt+0x56828>
   6935c:	movw	r0, #0
   69360:	str	r0, [fp, #-32]	; 0xffffffe0
   69364:	ldr	r0, [fp, #-32]	; 0xffffffe0
   69368:	add	r1, sp, #20
   6936c:	add	r0, r1, r0, lsl #5
   69370:	ldr	r1, [fp, #-28]	; 0xffffffe4
   69374:	add	r0, r0, r1, lsl #2
   69378:	ldr	r0, [r0]
   6937c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   69380:	and	r0, r0, r1
   69384:	cmp	r0, #0
   69388:	bne	693a0 <__assert_fail@plt+0x567e8>
   6938c:	b	69390 <__assert_fail@plt+0x567d8>
   69390:	ldr	r0, [fp, #-32]	; 0xffffffe0
   69394:	add	r0, r0, #1
   69398:	str	r0, [fp, #-32]	; 0xffffffe0
   6939c:	b	69364 <__assert_fail@plt+0x567ac>
   693a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   693a4:	sub	lr, fp, #1024	; 0x400
   693a8:	sub	r1, lr, #56	; 0x38
   693ac:	ldr	r0, [r1, r0, lsl #2]
   693b0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   693b4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   693b8:	str	r0, [r1, r2, lsl #2]
   693bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   693c0:	sub	lr, fp, #2048	; 0x800
   693c4:	sub	r1, lr, #56	; 0x38
   693c8:	ldr	r0, [r1, r0, lsl #2]
   693cc:	ldr	r1, [fp, #-56]	; 0xffffffc8
   693d0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   693d4:	add	r2, r2, #256	; 0x100
   693d8:	add	r1, r1, r2, lsl #2
   693dc:	str	r0, [r1]
   693e0:	b	693e4 <__assert_fail@plt+0x5682c>
   693e4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   693e8:	lsl	r0, r0, #1
   693ec:	str	r0, [fp, #-48]	; 0xffffffd0
   693f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   693f4:	lsr	r0, r0, #1
   693f8:	str	r0, [fp, #-44]	; 0xffffffd4
   693fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   69400:	add	r0, r0, #1
   69404:	str	r0, [fp, #-36]	; 0xffffffdc
   69408:	b	69340 <__assert_fail@plt+0x56788>
   6940c:	b	69410 <__assert_fail@plt+0x56858>
   69410:	ldr	r0, [fp, #-28]	; 0xffffffe4
   69414:	add	r0, r0, #1
   69418:	str	r0, [fp, #-28]	; 0xffffffe4
   6941c:	b	69308 <__assert_fail@plt+0x56750>
   69420:	b	69424 <__assert_fail@plt+0x5686c>
   69424:	sub	lr, fp, #3072	; 0xc00
   69428:	sub	r0, lr, #100	; 0x64
   6942c:	movw	r1, #10
   69430:	bl	64d08 <__assert_fail@plt+0x52150>
   69434:	tst	r0, #1
   69438:	beq	694d0 <__assert_fail@plt+0x56918>
   6943c:	movw	r0, #0
   69440:	str	r0, [fp, #-32]	; 0xffffffe0
   69444:	ldr	r0, [fp, #-32]	; 0xffffffe0
   69448:	ldr	r1, [fp, #-52]	; 0xffffffcc
   6944c:	cmp	r0, r1
   69450:	bge	694cc <__assert_fail@plt+0x56914>
   69454:	ldr	r0, [fp, #-32]	; 0xffffffe0
   69458:	add	r1, sp, #20
   6945c:	add	r0, r1, r0, lsl #5
   69460:	movw	r1, #10
   69464:	bl	64d08 <__assert_fail@plt+0x52150>
   69468:	tst	r0, #1
   6946c:	beq	694b8 <__assert_fail@plt+0x56900>
   69470:	ldr	r0, [fp, #-32]	; 0xffffffe0
   69474:	sub	lr, fp, #3072	; 0xc00
   69478:	sub	r1, lr, #56	; 0x38
   6947c:	add	r0, r1, r0, lsl #2
   69480:	ldr	r0, [r0]
   69484:	ldr	r1, [fp, #-56]	; 0xffffffc8
   69488:	str	r0, [r1, #40]	; 0x28
   6948c:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   69490:	tst	r0, #1
   69494:	beq	694b4 <__assert_fail@plt+0x568fc>
   69498:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6949c:	sub	lr, fp, #3072	; 0xc00
   694a0:	sub	r1, lr, #56	; 0x38
   694a4:	add	r0, r1, r0, lsl #2
   694a8:	ldr	r0, [r0]
   694ac:	ldr	r1, [fp, #-56]	; 0xffffffc8
   694b0:	str	r0, [r1, #1064]	; 0x428
   694b4:	b	694cc <__assert_fail@plt+0x56914>
   694b8:	b	694bc <__assert_fail@plt+0x56904>
   694bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   694c0:	add	r0, r0, #1
   694c4:	str	r0, [fp, #-32]	; 0xffffffe0
   694c8:	b	69444 <__assert_fail@plt+0x5688c>
   694cc:	b	694d0 <__assert_fail@plt+0x56918>
   694d0:	ldr	r0, [fp, #-3132]	; 0xfffff3c4
   694d4:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   694d8:	movw	r0, #0
   694dc:	str	r0, [fp, #-28]	; 0xffffffe4
   694e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   694e4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   694e8:	cmp	r0, r1
   694ec:	bge	69520 <__assert_fail@plt+0x56968>
   694f0:	sub	lr, fp, #6144	; 0x1800
   694f4:	sub	r0, lr, #100	; 0x64
   694f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   694fc:	movw	r2, #12
   69500:	mul	r1, r1, r2
   69504:	add	r0, r0, r1
   69508:	ldr	r0, [r0, #8]
   6950c:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   69510:	ldr	r0, [fp, #-28]	; 0xffffffe4
   69514:	add	r0, r0, #1
   69518:	str	r0, [fp, #-28]	; 0xffffffe4
   6951c:	b	694e0 <__assert_fail@plt+0x56928>
   69520:	movw	r0, #1
   69524:	and	r0, r0, #1
   69528:	strb	r0, [fp, #-9]
   6952c:	ldrb	r0, [fp, #-9]
   69530:	and	r0, r0, #1
   69534:	sub	sp, fp, #8
   69538:	pop	{r4, r5, fp, pc}
   6953c:	push	{fp, lr}
   69540:	mov	fp, sp
   69544:	sub	sp, sp, #184	; 0xb8
   69548:	sub	ip, fp, #76	; 0x4c
   6954c:	str	r0, [fp, #-8]
   69550:	str	r1, [fp, #-12]
   69554:	str	r2, [fp, #-16]
   69558:	str	r3, [fp, #-20]	; 0xffffffec
   6955c:	ldr	r0, [fp, #-12]
   69560:	add	r0, r0, #4
   69564:	str	r0, [fp, #-80]	; 0xffffffb0
   69568:	mov	r0, ip
   6956c:	bl	69d1c <__assert_fail@plt+0x57164>
   69570:	movw	r0, #0
   69574:	str	r0, [fp, #-44]	; 0xffffffd4
   69578:	str	r0, [fp, #-32]	; 0xffffffe0
   6957c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   69580:	ldr	r1, [fp, #-80]	; 0xffffffb0
   69584:	ldr	r1, [r1, #4]
   69588:	cmp	r0, r1
   6958c:	bge	69ca8 <__assert_fail@plt+0x570f0>
   69590:	ldr	r0, [fp, #-8]
   69594:	ldr	r0, [r0]
   69598:	ldr	r1, [fp, #-80]	; 0xffffffb0
   6959c:	ldr	r1, [r1, #8]
   695a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   695a4:	ldr	r1, [r1, r2, lsl #2]
   695a8:	add	r0, r0, r1, lsl #3
   695ac:	str	r0, [fp, #-84]	; 0xffffffac
   695b0:	ldr	r0, [fp, #-84]	; 0xffffffac
   695b4:	ldr	r0, [r0, #4]
   695b8:	and	r0, r0, #255	; 0xff
   695bc:	str	r0, [fp, #-88]	; 0xffffffa8
   695c0:	ldr	r0, [fp, #-84]	; 0xffffffac
   695c4:	ldr	r0, [r0, #4]
   695c8:	lsr	r0, r0, #8
   695cc:	movw	r1, #1023	; 0x3ff
   695d0:	and	r0, r0, r1
   695d4:	str	r0, [sp, #92]	; 0x5c
   695d8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   695dc:	cmp	r0, #1
   695e0:	bne	695f8 <__assert_fail@plt+0x56a40>
   695e4:	sub	r0, fp, #76	; 0x4c
   695e8:	ldr	r1, [fp, #-84]	; 0xffffffac
   695ec:	ldrb	r1, [r1]
   695f0:	bl	5dfe8 <__assert_fail@plt+0x4b430>
   695f4:	b	69708 <__assert_fail@plt+0x56b50>
   695f8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   695fc:	cmp	r0, #3
   69600:	bne	69618 <__assert_fail@plt+0x56a60>
   69604:	sub	r0, fp, #76	; 0x4c
   69608:	ldr	r1, [fp, #-84]	; 0xffffffac
   6960c:	ldr	r1, [r1]
   69610:	bl	69d48 <__assert_fail@plt+0x57190>
   69614:	b	69704 <__assert_fail@plt+0x56b4c>
   69618:	ldr	r0, [fp, #-88]	; 0xffffffa8
   6961c:	cmp	r0, #5
   69620:	bne	69694 <__assert_fail@plt+0x56adc>
   69624:	ldr	r0, [fp, #-8]
   69628:	ldr	r0, [r0, #92]	; 0x5c
   6962c:	cmp	r0, #1
   69630:	ble	69648 <__assert_fail@plt+0x56a90>
   69634:	sub	r0, fp, #76	; 0x4c
   69638:	ldr	r1, [fp, #-8]
   6963c:	ldr	r1, [r1, #60]	; 0x3c
   69640:	bl	69d48 <__assert_fail@plt+0x57190>
   69644:	b	69650 <__assert_fail@plt+0x56a98>
   69648:	sub	r0, fp, #76	; 0x4c
   6964c:	bl	69da0 <__assert_fail@plt+0x571e8>
   69650:	ldr	r0, [fp, #-8]
   69654:	ldr	r0, [r0, #128]	; 0x80
   69658:	and	r0, r0, #64	; 0x40
   6965c:	cmp	r0, #0
   69660:	bne	69670 <__assert_fail@plt+0x56ab8>
   69664:	sub	r0, fp, #76	; 0x4c
   69668:	movw	r1, #10
   6966c:	bl	69dcc <__assert_fail@plt+0x57214>
   69670:	ldr	r0, [fp, #-8]
   69674:	ldr	r0, [r0, #128]	; 0x80
   69678:	and	r0, r0, #128	; 0x80
   6967c:	cmp	r0, #0
   69680:	beq	69690 <__assert_fail@plt+0x56ad8>
   69684:	sub	r0, fp, #76	; 0x4c
   69688:	movw	r1, #0
   6968c:	bl	69dcc <__assert_fail@plt+0x57214>
   69690:	b	69700 <__assert_fail@plt+0x56b48>
   69694:	ldr	r0, [fp, #-88]	; 0xffffffa8
   69698:	cmp	r0, #7
   6969c:	bne	696f8 <__assert_fail@plt+0x56b40>
   696a0:	sub	r0, fp, #76	; 0x4c
   696a4:	movw	r1, #255	; 0xff
   696a8:	and	r1, r1, #255	; 0xff
   696ac:	movw	r2, #16
   696b0:	bl	12900 <memset@plt>
   696b4:	ldr	r0, [fp, #-8]
   696b8:	ldr	r0, [r0, #128]	; 0x80
   696bc:	and	r0, r0, #64	; 0x40
   696c0:	cmp	r0, #0
   696c4:	bne	696d4 <__assert_fail@plt+0x56b1c>
   696c8:	sub	r0, fp, #76	; 0x4c
   696cc:	movw	r1, #10
   696d0:	bl	69dcc <__assert_fail@plt+0x57214>
   696d4:	ldr	r0, [fp, #-8]
   696d8:	ldr	r0, [r0, #128]	; 0x80
   696dc:	and	r0, r0, #128	; 0x80
   696e0:	cmp	r0, #0
   696e4:	beq	696f4 <__assert_fail@plt+0x56b3c>
   696e8:	sub	r0, fp, #76	; 0x4c
   696ec:	movw	r1, #0
   696f0:	bl	69dcc <__assert_fail@plt+0x57214>
   696f4:	b	696fc <__assert_fail@plt+0x56b44>
   696f8:	b	69c98 <__assert_fail@plt+0x570e0>
   696fc:	b	69700 <__assert_fail@plt+0x56b48>
   69700:	b	69704 <__assert_fail@plt+0x56b4c>
   69704:	b	69708 <__assert_fail@plt+0x56b50>
   69708:	ldr	r0, [sp, #92]	; 0x5c
   6970c:	cmp	r0, #0
   69710:	beq	699e4 <__assert_fail@plt+0x56e2c>
   69714:	ldr	r0, [sp, #92]	; 0x5c
   69718:	and	r0, r0, #32
   6971c:	cmp	r0, #0
   69720:	beq	69768 <__assert_fail@plt+0x56bb0>
   69724:	sub	r0, fp, #76	; 0x4c
   69728:	movw	r1, #10
   6972c:	bl	64d08 <__assert_fail@plt+0x52150>
   69730:	sub	r1, fp, #76	; 0x4c
   69734:	and	r0, r0, #1
   69738:	strb	r0, [sp, #91]	; 0x5b
   6973c:	mov	r0, r1
   69740:	bl	69d1c <__assert_fail@plt+0x57164>
   69744:	ldrb	r0, [sp, #91]	; 0x5b
   69748:	tst	r0, #1
   6974c:	beq	69760 <__assert_fail@plt+0x56ba8>
   69750:	sub	r0, fp, #76	; 0x4c
   69754:	movw	r1, #10
   69758:	bl	5dfe8 <__assert_fail@plt+0x4b430>
   6975c:	b	69764 <__assert_fail@plt+0x56bac>
   69760:	b	69c98 <__assert_fail@plt+0x570e0>
   69764:	b	69768 <__assert_fail@plt+0x56bb0>
   69768:	ldr	r0, [sp, #92]	; 0x5c
   6976c:	and	r0, r0, #128	; 0x80
   69770:	cmp	r0, #0
   69774:	beq	69784 <__assert_fail@plt+0x56bcc>
   69778:	sub	r0, fp, #76	; 0x4c
   6977c:	bl	69d1c <__assert_fail@plt+0x57164>
   69780:	b	69c98 <__assert_fail@plt+0x570e0>
   69784:	ldr	r0, [sp, #92]	; 0x5c
   69788:	and	r0, r0, #4
   6978c:	cmp	r0, #0
   69790:	beq	698b0 <__assert_fail@plt+0x56cf8>
   69794:	movw	r0, #0
   69798:	str	r0, [sp, #84]	; 0x54
   6979c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   697a0:	cmp	r0, #1
   697a4:	bne	697cc <__assert_fail@plt+0x56c14>
   697a8:	ldr	r0, [fp, #-84]	; 0xffffffac
   697ac:	ldr	r0, [r0, #4]
   697b0:	lsr	r0, r0, #22
   697b4:	and	r0, r0, #1
   697b8:	cmp	r0, #0
   697bc:	bne	697cc <__assert_fail@plt+0x56c14>
   697c0:	sub	r0, fp, #76	; 0x4c
   697c4:	bl	69d1c <__assert_fail@plt+0x57164>
   697c8:	b	69c98 <__assert_fail@plt+0x570e0>
   697cc:	ldr	r0, [fp, #-8]
   697d0:	ldr	r0, [r0, #92]	; 0x5c
   697d4:	cmp	r0, #1
   697d8:	ble	69844 <__assert_fail@plt+0x56c8c>
   697dc:	movw	r0, #0
   697e0:	str	r0, [fp, #-36]	; 0xffffffdc
   697e4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   697e8:	cmp	r0, #8
   697ec:	bge	69840 <__assert_fail@plt+0x56c88>
   697f0:	ldr	r0, [fp, #-8]
   697f4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   697f8:	add	r2, r0, r1, lsl #2
   697fc:	ldr	r2, [r2, #96]	; 0x60
   69800:	ldr	r0, [r0, #60]	; 0x3c
   69804:	ldr	r0, [r0, r1, lsl #2]
   69808:	mvn	r0, r0
   6980c:	orr	r0, r2, r0
   69810:	sub	r2, fp, #76	; 0x4c
   69814:	add	r1, r2, r1, lsl #2
   69818:	ldr	r2, [r1]
   6981c:	and	r0, r2, r0
   69820:	str	r0, [r1]
   69824:	ldr	r1, [sp, #84]	; 0x54
   69828:	orr	r0, r1, r0
   6982c:	str	r0, [sp, #84]	; 0x54
   69830:	ldr	r0, [fp, #-36]	; 0xffffffdc
   69834:	add	r0, r0, #1
   69838:	str	r0, [fp, #-36]	; 0xffffffdc
   6983c:	b	697e4 <__assert_fail@plt+0x56c2c>
   69840:	b	6989c <__assert_fail@plt+0x56ce4>
   69844:	movw	r0, #0
   69848:	str	r0, [fp, #-36]	; 0xffffffdc
   6984c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   69850:	cmp	r0, #8
   69854:	bge	69898 <__assert_fail@plt+0x56ce0>
   69858:	ldr	r0, [fp, #-8]
   6985c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   69860:	add	r0, r0, r1, lsl #2
   69864:	ldr	r0, [r0, #96]	; 0x60
   69868:	sub	r2, fp, #76	; 0x4c
   6986c:	add	r1, r2, r1, lsl #2
   69870:	ldr	r2, [r1]
   69874:	and	r0, r2, r0
   69878:	str	r0, [r1]
   6987c:	ldr	r1, [sp, #84]	; 0x54
   69880:	orr	r0, r1, r0
   69884:	str	r0, [sp, #84]	; 0x54
   69888:	ldr	r0, [fp, #-36]	; 0xffffffdc
   6988c:	add	r0, r0, #1
   69890:	str	r0, [fp, #-36]	; 0xffffffdc
   69894:	b	6984c <__assert_fail@plt+0x56c94>
   69898:	b	6989c <__assert_fail@plt+0x56ce4>
   6989c:	ldr	r0, [sp, #84]	; 0x54
   698a0:	cmp	r0, #0
   698a4:	bne	698ac <__assert_fail@plt+0x56cf4>
   698a8:	b	69c98 <__assert_fail@plt+0x570e0>
   698ac:	b	698b0 <__assert_fail@plt+0x56cf8>
   698b0:	ldr	r0, [sp, #92]	; 0x5c
   698b4:	and	r0, r0, #8
   698b8:	cmp	r0, #0
   698bc:	beq	699e0 <__assert_fail@plt+0x56e28>
   698c0:	movw	r0, #0
   698c4:	str	r0, [sp, #80]	; 0x50
   698c8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   698cc:	cmp	r0, #1
   698d0:	bne	698f8 <__assert_fail@plt+0x56d40>
   698d4:	ldr	r0, [fp, #-84]	; 0xffffffac
   698d8:	ldr	r0, [r0, #4]
   698dc:	lsr	r0, r0, #22
   698e0:	and	r0, r0, #1
   698e4:	cmp	r0, #0
   698e8:	beq	698f8 <__assert_fail@plt+0x56d40>
   698ec:	sub	r0, fp, #76	; 0x4c
   698f0:	bl	69d1c <__assert_fail@plt+0x57164>
   698f4:	b	69c98 <__assert_fail@plt+0x570e0>
   698f8:	ldr	r0, [fp, #-8]
   698fc:	ldr	r0, [r0, #92]	; 0x5c
   69900:	cmp	r0, #1
   69904:	ble	69970 <__assert_fail@plt+0x56db8>
   69908:	movw	r0, #0
   6990c:	str	r0, [fp, #-36]	; 0xffffffdc
   69910:	ldr	r0, [fp, #-36]	; 0xffffffdc
   69914:	cmp	r0, #8
   69918:	bge	6996c <__assert_fail@plt+0x56db4>
   6991c:	ldr	r0, [fp, #-8]
   69920:	ldr	r1, [fp, #-36]	; 0xffffffdc
   69924:	add	r2, r0, r1, lsl #2
   69928:	ldr	r2, [r2, #96]	; 0x60
   6992c:	ldr	r0, [r0, #60]	; 0x3c
   69930:	ldr	r0, [r0, r1, lsl #2]
   69934:	and	r0, r2, r0
   69938:	mvn	r0, r0
   6993c:	sub	r2, fp, #76	; 0x4c
   69940:	add	r1, r2, r1, lsl #2
   69944:	ldr	r2, [r1]
   69948:	and	r0, r2, r0
   6994c:	str	r0, [r1]
   69950:	ldr	r1, [sp, #80]	; 0x50
   69954:	orr	r0, r1, r0
   69958:	str	r0, [sp, #80]	; 0x50
   6995c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   69960:	add	r0, r0, #1
   69964:	str	r0, [fp, #-36]	; 0xffffffdc
   69968:	b	69910 <__assert_fail@plt+0x56d58>
   6996c:	b	699cc <__assert_fail@plt+0x56e14>
   69970:	movw	r0, #0
   69974:	str	r0, [fp, #-36]	; 0xffffffdc
   69978:	ldr	r0, [fp, #-36]	; 0xffffffdc
   6997c:	cmp	r0, #8
   69980:	bge	699c8 <__assert_fail@plt+0x56e10>
   69984:	ldr	r0, [fp, #-8]
   69988:	ldr	r1, [fp, #-36]	; 0xffffffdc
   6998c:	add	r0, r0, r1, lsl #2
   69990:	ldr	r0, [r0, #96]	; 0x60
   69994:	mvn	r0, r0
   69998:	sub	r2, fp, #76	; 0x4c
   6999c:	add	r1, r2, r1, lsl #2
   699a0:	ldr	r2, [r1]
   699a4:	and	r0, r2, r0
   699a8:	str	r0, [r1]
   699ac:	ldr	r1, [sp, #80]	; 0x50
   699b0:	orr	r0, r1, r0
   699b4:	str	r0, [sp, #80]	; 0x50
   699b8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   699bc:	add	r0, r0, #1
   699c0:	str	r0, [fp, #-36]	; 0xffffffdc
   699c4:	b	69978 <__assert_fail@plt+0x56dc0>
   699c8:	b	699cc <__assert_fail@plt+0x56e14>
   699cc:	ldr	r0, [sp, #80]	; 0x50
   699d0:	cmp	r0, #0
   699d4:	bne	699dc <__assert_fail@plt+0x56e24>
   699d8:	b	69c98 <__assert_fail@plt+0x570e0>
   699dc:	b	699e0 <__assert_fail@plt+0x56e28>
   699e0:	b	699e4 <__assert_fail@plt+0x56e2c>
   699e4:	movw	r0, #0
   699e8:	str	r0, [fp, #-36]	; 0xffffffdc
   699ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   699f0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   699f4:	cmp	r0, r1
   699f8:	bge	69c20 <__assert_fail@plt+0x57068>
   699fc:	ldr	r0, [fp, #-88]	; 0xffffffa8
   69a00:	cmp	r0, #1
   69a04:	bne	69a2c <__assert_fail@plt+0x56e74>
   69a08:	ldr	r0, [fp, #-20]	; 0xffffffec
   69a0c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   69a10:	add	r0, r0, r1, lsl #5
   69a14:	ldr	r1, [fp, #-84]	; 0xffffffac
   69a18:	ldrb	r1, [r1]
   69a1c:	bl	64d08 <__assert_fail@plt+0x52150>
   69a20:	tst	r0, #1
   69a24:	bne	69a2c <__assert_fail@plt+0x56e74>
   69a28:	b	69c10 <__assert_fail@plt+0x57058>
   69a2c:	movw	r0, #0
   69a30:	str	r0, [sp, #12]
   69a34:	str	r0, [fp, #-40]	; 0xffffffd8
   69a38:	ldr	r0, [fp, #-40]	; 0xffffffd8
   69a3c:	cmp	r0, #8
   69a40:	bge	69a8c <__assert_fail@plt+0x56ed4>
   69a44:	ldr	r0, [fp, #-40]	; 0xffffffd8
   69a48:	sub	r1, fp, #76	; 0x4c
   69a4c:	ldr	r1, [r1, r0, lsl #2]
   69a50:	ldr	r2, [fp, #-20]	; 0xffffffec
   69a54:	ldr	r3, [fp, #-36]	; 0xffffffdc
   69a58:	add	r2, r2, r3, lsl #5
   69a5c:	ldr	r2, [r2, r0, lsl #2]
   69a60:	and	r1, r1, r2
   69a64:	add	r2, sp, #48	; 0x30
   69a68:	add	r0, r2, r0, lsl #2
   69a6c:	str	r1, [r0]
   69a70:	ldr	r0, [sp, #12]
   69a74:	orr	r0, r0, r1
   69a78:	str	r0, [sp, #12]
   69a7c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   69a80:	add	r0, r0, #1
   69a84:	str	r0, [fp, #-40]	; 0xffffffd8
   69a88:	b	69a38 <__assert_fail@plt+0x56e80>
   69a8c:	ldr	r0, [sp, #12]
   69a90:	cmp	r0, #0
   69a94:	bne	69a9c <__assert_fail@plt+0x56ee4>
   69a98:	b	69c10 <__assert_fail@plt+0x57058>
   69a9c:	movw	r0, #0
   69aa0:	str	r0, [sp, #4]
   69aa4:	str	r0, [sp, #8]
   69aa8:	str	r0, [fp, #-40]	; 0xffffffd8
   69aac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   69ab0:	cmp	r0, #8
   69ab4:	bge	69b2c <__assert_fail@plt+0x56f74>
   69ab8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   69abc:	sub	r1, fp, #76	; 0x4c
   69ac0:	ldr	r2, [r1, r0, lsl #2]
   69ac4:	ldr	r3, [fp, #-20]	; 0xffffffec
   69ac8:	ldr	ip, [fp, #-36]	; 0xffffffdc
   69acc:	add	r3, r3, ip, lsl #5
   69ad0:	ldr	r3, [r3, r0, lsl #2]
   69ad4:	bic	r2, r3, r2
   69ad8:	add	r3, sp, #16
   69adc:	str	r2, [r3, r0, lsl #2]
   69ae0:	ldr	r0, [sp, #8]
   69ae4:	orr	r0, r0, r2
   69ae8:	str	r0, [sp, #8]
   69aec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   69af0:	add	r2, r1, r0, lsl #2
   69af4:	ldr	r1, [r1, r0, lsl #2]
   69af8:	ldr	r3, [fp, #-20]	; 0xffffffec
   69afc:	ldr	ip, [fp, #-36]	; 0xffffffdc
   69b00:	add	r3, r3, ip, lsl #5
   69b04:	ldr	r0, [r3, r0, lsl #2]
   69b08:	bic	r0, r1, r0
   69b0c:	str	r0, [r2]
   69b10:	ldr	r1, [sp, #4]
   69b14:	orr	r0, r1, r0
   69b18:	str	r0, [sp, #4]
   69b1c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   69b20:	add	r0, r0, #1
   69b24:	str	r0, [fp, #-40]	; 0xffffffd8
   69b28:	b	69aac <__assert_fail@plt+0x56ef4>
   69b2c:	ldr	r0, [sp, #8]
   69b30:	cmp	r0, #0
   69b34:	beq	69bb4 <__assert_fail@plt+0x56ffc>
   69b38:	add	r1, sp, #48	; 0x30
   69b3c:	ldr	r0, [fp, #-20]	; 0xffffffec
   69b40:	ldr	r2, [fp, #-44]	; 0xffffffd4
   69b44:	add	r0, r0, r2, lsl #5
   69b48:	add	r2, sp, #16
   69b4c:	str	r1, [sp]
   69b50:	mov	r1, r2
   69b54:	bl	69e14 <__assert_fail@plt+0x5725c>
   69b58:	ldr	r0, [fp, #-20]	; 0xffffffec
   69b5c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   69b60:	add	r0, r0, r1, lsl #5
   69b64:	ldr	r1, [sp]
   69b68:	bl	69e14 <__assert_fail@plt+0x5725c>
   69b6c:	ldr	r0, [fp, #-16]
   69b70:	ldr	r1, [fp, #-44]	; 0xffffffd4
   69b74:	movw	r2, #12
   69b78:	mul	r1, r1, r2
   69b7c:	add	r0, r0, r1
   69b80:	ldr	r1, [fp, #-16]
   69b84:	ldr	r3, [fp, #-36]	; 0xffffffdc
   69b88:	mul	r2, r3, r2
   69b8c:	add	r1, r1, r2
   69b90:	bl	61f98 <__assert_fail@plt+0x4f3e0>
   69b94:	str	r0, [fp, #-24]	; 0xffffffe8
   69b98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   69b9c:	cmp	r0, #0
   69ba0:	beq	69ba8 <__assert_fail@plt+0x56ff0>
   69ba4:	b	69cc4 <__assert_fail@plt+0x5710c>
   69ba8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   69bac:	add	r0, r0, #1
   69bb0:	str	r0, [fp, #-44]	; 0xffffffd4
   69bb4:	ldr	r0, [fp, #-16]
   69bb8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   69bbc:	add	r1, r1, r1, lsl #1
   69bc0:	add	r0, r0, r1, lsl #2
   69bc4:	ldr	r1, [fp, #-80]	; 0xffffffb0
   69bc8:	ldr	r1, [r1, #8]
   69bcc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   69bd0:	add	r1, r1, r2, lsl #2
   69bd4:	ldr	r1, [r1]
   69bd8:	bl	61bb0 <__assert_fail@plt+0x4eff8>
   69bdc:	and	r0, r0, #1
   69be0:	strb	r0, [fp, #-25]	; 0xffffffe7
   69be4:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   69be8:	mvn	r1, #0
   69bec:	eor	r0, r0, r1
   69bf0:	tst	r0, #1
   69bf4:	beq	69bfc <__assert_fail@plt+0x57044>
   69bf8:	b	69cc4 <__assert_fail@plt+0x5710c>
   69bfc:	ldr	r0, [sp, #4]
   69c00:	cmp	r0, #0
   69c04:	bne	69c0c <__assert_fail@plt+0x57054>
   69c08:	b	69c20 <__assert_fail@plt+0x57068>
   69c0c:	b	69c10 <__assert_fail@plt+0x57058>
   69c10:	ldr	r0, [fp, #-36]	; 0xffffffdc
   69c14:	add	r0, r0, #1
   69c18:	str	r0, [fp, #-36]	; 0xffffffdc
   69c1c:	b	699ec <__assert_fail@plt+0x56e34>
   69c20:	ldr	r0, [fp, #-36]	; 0xffffffdc
   69c24:	ldr	r1, [fp, #-44]	; 0xffffffd4
   69c28:	cmp	r0, r1
   69c2c:	bne	69c94 <__assert_fail@plt+0x570dc>
   69c30:	ldr	r0, [fp, #-20]	; 0xffffffec
   69c34:	ldr	r1, [fp, #-44]	; 0xffffffd4
   69c38:	add	r0, r0, r1, lsl #5
   69c3c:	sub	r1, fp, #76	; 0x4c
   69c40:	bl	69e14 <__assert_fail@plt+0x5725c>
   69c44:	ldr	r0, [fp, #-16]
   69c48:	ldr	r1, [fp, #-44]	; 0xffffffd4
   69c4c:	add	r1, r1, r1, lsl #1
   69c50:	add	r0, r0, r1, lsl #2
   69c54:	ldr	r1, [fp, #-80]	; 0xffffffb0
   69c58:	ldr	r1, [r1, #8]
   69c5c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   69c60:	add	r1, r1, r2, lsl #2
   69c64:	ldr	r1, [r1]
   69c68:	bl	60ce4 <__assert_fail@plt+0x4e12c>
   69c6c:	str	r0, [fp, #-24]	; 0xffffffe8
   69c70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   69c74:	cmp	r0, #0
   69c78:	beq	69c80 <__assert_fail@plt+0x570c8>
   69c7c:	b	69cc4 <__assert_fail@plt+0x5710c>
   69c80:	sub	r0, fp, #76	; 0x4c
   69c84:	ldr	r1, [fp, #-44]	; 0xffffffd4
   69c88:	add	r1, r1, #1
   69c8c:	str	r1, [fp, #-44]	; 0xffffffd4
   69c90:	bl	69d1c <__assert_fail@plt+0x57164>
   69c94:	b	69c98 <__assert_fail@plt+0x570e0>
   69c98:	ldr	r0, [fp, #-32]	; 0xffffffe0
   69c9c:	add	r0, r0, #1
   69ca0:	str	r0, [fp, #-32]	; 0xffffffe0
   69ca4:	b	6957c <__assert_fail@plt+0x569c4>
   69ca8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   69cac:	cmp	r0, #256	; 0x100
   69cb0:	bgt	69cb8 <__assert_fail@plt+0x57100>
   69cb4:	b	69cb8 <__assert_fail@plt+0x57100>
   69cb8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   69cbc:	str	r0, [fp, #-4]
   69cc0:	b	69d10 <__assert_fail@plt+0x57158>
   69cc4:	movw	r0, #0
   69cc8:	str	r0, [fp, #-36]	; 0xffffffdc
   69ccc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   69cd0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   69cd4:	cmp	r0, r1
   69cd8:	bge	69d08 <__assert_fail@plt+0x57150>
   69cdc:	ldr	r0, [fp, #-16]
   69ce0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   69ce4:	movw	r2, #12
   69ce8:	mul	r1, r1, r2
   69cec:	add	r0, r0, r1
   69cf0:	ldr	r0, [r0, #8]
   69cf4:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   69cf8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   69cfc:	add	r0, r0, #1
   69d00:	str	r0, [fp, #-36]	; 0xffffffdc
   69d04:	b	69ccc <__assert_fail@plt+0x57114>
   69d08:	mvn	r0, #0
   69d0c:	str	r0, [fp, #-4]
   69d10:	ldr	r0, [fp, #-4]
   69d14:	mov	sp, fp
   69d18:	pop	{fp, pc}
   69d1c:	push	{fp, lr}
   69d20:	mov	fp, sp
   69d24:	sub	sp, sp, #8
   69d28:	str	r0, [sp, #4]
   69d2c:	ldr	r0, [sp, #4]
   69d30:	movw	r1, #0
   69d34:	and	r1, r1, #255	; 0xff
   69d38:	movw	r2, #32
   69d3c:	bl	12900 <memset@plt>
   69d40:	mov	sp, fp
   69d44:	pop	{fp, pc}
   69d48:	sub	sp, sp, #12
   69d4c:	str	r0, [sp, #8]
   69d50:	str	r1, [sp, #4]
   69d54:	movw	r0, #0
   69d58:	str	r0, [sp]
   69d5c:	ldr	r0, [sp]
   69d60:	cmp	r0, #8
   69d64:	bge	69d98 <__assert_fail@plt+0x571e0>
   69d68:	ldr	r0, [sp, #4]
   69d6c:	ldr	r1, [sp]
   69d70:	ldr	r0, [r0, r1, lsl #2]
   69d74:	ldr	r2, [sp, #8]
   69d78:	add	r1, r2, r1, lsl #2
   69d7c:	ldr	r2, [r1]
   69d80:	orr	r0, r2, r0
   69d84:	str	r0, [r1]
   69d88:	ldr	r0, [sp]
   69d8c:	add	r0, r0, #1
   69d90:	str	r0, [sp]
   69d94:	b	69d5c <__assert_fail@plt+0x571a4>
   69d98:	add	sp, sp, #12
   69d9c:	bx	lr
   69da0:	push	{fp, lr}
   69da4:	mov	fp, sp
   69da8:	sub	sp, sp, #8
   69dac:	str	r0, [sp, #4]
   69db0:	ldr	r0, [sp, #4]
   69db4:	movw	r1, #255	; 0xff
   69db8:	and	r1, r1, #255	; 0xff
   69dbc:	movw	r2, #32
   69dc0:	bl	12900 <memset@plt>
   69dc4:	mov	sp, fp
   69dc8:	pop	{fp, pc}
   69dcc:	sub	sp, sp, #8
   69dd0:	str	r0, [sp, #4]
   69dd4:	str	r1, [sp]
   69dd8:	ldr	r0, [sp]
   69ddc:	asr	r1, r0, #31
   69de0:	add	r1, r0, r1, lsr #27
   69de4:	bic	r2, r1, #31
   69de8:	sub	r0, r0, r2
   69dec:	mov	r2, #1
   69df0:	mvn	r0, r2, lsl r0
   69df4:	ldr	r2, [sp, #4]
   69df8:	asr	r1, r1, #5
   69dfc:	add	r1, r2, r1, lsl #2
   69e00:	ldr	r2, [r1]
   69e04:	and	r0, r2, r0
   69e08:	str	r0, [r1]
   69e0c:	add	sp, sp, #8
   69e10:	bx	lr
   69e14:	push	{fp, lr}
   69e18:	mov	fp, sp
   69e1c:	sub	sp, sp, #8
   69e20:	str	r0, [sp, #4]
   69e24:	str	r1, [sp]
   69e28:	ldr	r0, [sp, #4]
   69e2c:	ldr	r1, [sp]
   69e30:	movw	r2, #32
   69e34:	bl	125c4 <memcpy@plt>
   69e38:	mov	sp, fp
   69e3c:	pop	{fp, pc}
   69e40:	sub	sp, sp, #24
   69e44:	str	r0, [sp, #16]
   69e48:	str	r1, [sp, #12]
   69e4c:	str	r2, [sp, #8]
   69e50:	ldr	r0, [sp, #16]
   69e54:	ldr	r0, [r0]
   69e58:	ldr	r1, [sp, #12]
   69e5c:	add	r0, r0, r1, lsl #3
   69e60:	ldrb	r0, [r0, #4]
   69e64:	str	r0, [sp, #4]
   69e68:	ldr	r0, [sp, #16]
   69e6c:	ldr	r0, [r0]
   69e70:	ldr	r1, [sp, #12]
   69e74:	add	r0, r0, r1, lsl #3
   69e78:	ldr	r0, [r0, #4]
   69e7c:	lsr	r0, r0, #8
   69e80:	movw	r1, #1023	; 0x3ff
   69e84:	and	r0, r0, r1
   69e88:	str	r0, [sp]
   69e8c:	ldr	r0, [sp, #4]
   69e90:	cmp	r0, #2
   69e94:	beq	69ea8 <__assert_fail@plt+0x572f0>
   69e98:	movw	r0, #0
   69e9c:	and	r0, r0, #1
   69ea0:	strb	r0, [sp, #23]
   69ea4:	b	69f60 <__assert_fail@plt+0x573a8>
   69ea8:	ldr	r0, [sp]
   69eac:	cmp	r0, #0
   69eb0:	bne	69ec4 <__assert_fail@plt+0x5730c>
   69eb4:	movw	r0, #1
   69eb8:	and	r0, r0, #1
   69ebc:	strb	r0, [sp, #23]
   69ec0:	b	69f60 <__assert_fail@plt+0x573a8>
   69ec4:	ldr	r0, [sp]
   69ec8:	and	r0, r0, #4
   69ecc:	cmp	r0, #0
   69ed0:	beq	69ee4 <__assert_fail@plt+0x5732c>
   69ed4:	ldr	r0, [sp, #8]
   69ed8:	and	r0, r0, #1
   69edc:	cmp	r0, #0
   69ee0:	beq	69f44 <__assert_fail@plt+0x5738c>
   69ee4:	ldr	r0, [sp]
   69ee8:	and	r0, r0, #8
   69eec:	cmp	r0, #0
   69ef0:	beq	69f04 <__assert_fail@plt+0x5734c>
   69ef4:	ldr	r0, [sp, #8]
   69ef8:	and	r0, r0, #1
   69efc:	cmp	r0, #0
   69f00:	bne	69f44 <__assert_fail@plt+0x5738c>
   69f04:	ldr	r0, [sp]
   69f08:	and	r0, r0, #32
   69f0c:	cmp	r0, #0
   69f10:	beq	69f24 <__assert_fail@plt+0x5736c>
   69f14:	ldr	r0, [sp, #8]
   69f18:	and	r0, r0, #2
   69f1c:	cmp	r0, #0
   69f20:	beq	69f44 <__assert_fail@plt+0x5738c>
   69f24:	ldr	r0, [sp]
   69f28:	and	r0, r0, #128	; 0x80
   69f2c:	cmp	r0, #0
   69f30:	beq	69f54 <__assert_fail@plt+0x5739c>
   69f34:	ldr	r0, [sp, #8]
   69f38:	and	r0, r0, #8
   69f3c:	cmp	r0, #0
   69f40:	bne	69f54 <__assert_fail@plt+0x5739c>
   69f44:	movw	r0, #0
   69f48:	and	r0, r0, #1
   69f4c:	strb	r0, [sp, #23]
   69f50:	b	69f60 <__assert_fail@plt+0x573a8>
   69f54:	movw	r0, #1
   69f58:	and	r0, r0, #1
   69f5c:	strb	r0, [sp, #23]
   69f60:	ldrb	r0, [sp, #23]
   69f64:	and	r0, r0, #1
   69f68:	add	sp, sp, #24
   69f6c:	bx	lr
   69f70:	push	{fp, lr}
   69f74:	mov	fp, sp
   69f78:	sub	sp, sp, #24
   69f7c:	ldr	ip, [fp, #8]
   69f80:	str	r0, [fp, #-4]
   69f84:	str	r1, [fp, #-8]
   69f88:	str	r2, [sp, #12]
   69f8c:	str	r3, [sp, #8]
   69f90:	ldr	r0, [fp, #-8]
   69f94:	ldr	r1, [fp, #-4]
   69f98:	str	r0, [r1]
   69f9c:	ldr	r0, [sp, #12]
   69fa0:	ldr	r1, [fp, #-4]
   69fa4:	str	r0, [r1, #4]
   69fa8:	ldr	r0, [sp, #8]
   69fac:	ldr	r1, [fp, #-4]
   69fb0:	str	r0, [r1, #8]
   69fb4:	ldr	r0, [fp, #8]
   69fb8:	ldr	r1, [fp, #-4]
   69fbc:	str	r0, [r1, #12]
   69fc0:	ldr	r0, [fp, #-4]
   69fc4:	add	r0, r0, #16
   69fc8:	movw	r1, #0
   69fcc:	and	r1, r1, #255	; 0xff
   69fd0:	movw	r2, #12
   69fd4:	str	ip, [sp, #4]
   69fd8:	bl	12900 <memset@plt>
   69fdc:	mov	sp, fp
   69fe0:	pop	{fp, pc}
   69fe4:	push	{fp, lr}
   69fe8:	mov	fp, sp
   69fec:	sub	sp, sp, #40	; 0x28
   69ff0:	str	r0, [fp, #-8]
   69ff4:	str	r1, [fp, #-12]
   69ff8:	movw	r0, #0
   69ffc:	str	r0, [sp, #20]
   6a000:	ldr	r1, [fp, #-12]
   6a004:	ldr	r1, [r1, #12]
   6a008:	str	r1, [sp, #16]
   6a00c:	ldr	r1, [fp, #-8]
   6a010:	ldr	r1, [r1, #100]	; 0x64
   6a014:	cmp	r1, r0
   6a018:	beq	6a040 <__assert_fail@plt+0x57488>
   6a01c:	ldr	r0, [fp, #-8]
   6a020:	ldr	r0, [r0, #100]	; 0x64
   6a024:	ldr	r1, [sp, #16]
   6a028:	add	r0, r0, r1, lsl #2
   6a02c:	ldr	r0, [r0]
   6a030:	movw	r1, #0
   6a034:	cmp	r0, r1
   6a038:	beq	6a040 <__assert_fail@plt+0x57488>
   6a03c:	b	6a040 <__assert_fail@plt+0x57488>
   6a040:	ldr	r0, [fp, #-12]
   6a044:	ldr	r1, [r0, #8]
   6a048:	add	r0, sp, #4
   6a04c:	bl	60ce4 <__assert_fail@plt+0x4e12c>
   6a050:	str	r0, [fp, #-16]
   6a054:	ldr	r0, [fp, #-16]
   6a058:	cmp	r0, #0
   6a05c:	beq	6a06c <__assert_fail@plt+0x574b4>
   6a060:	ldr	r0, [fp, #-16]
   6a064:	str	r0, [fp, #-4]
   6a068:	b	6a1d0 <__assert_fail@plt+0x57618>
   6a06c:	ldr	r0, [fp, #-8]
   6a070:	ldr	r1, [fp, #-12]
   6a074:	ldr	r2, [sp, #16]
   6a078:	add	r3, sp, #4
   6a07c:	bl	6a324 <__assert_fail@plt+0x5776c>
   6a080:	str	r0, [fp, #-16]
   6a084:	ldr	r0, [fp, #-16]
   6a088:	cmp	r0, #0
   6a08c:	beq	6a094 <__assert_fail@plt+0x574dc>
   6a090:	b	6a1c0 <__assert_fail@plt+0x57608>
   6a094:	b	6a098 <__assert_fail@plt+0x574e0>
   6a098:	ldr	r0, [sp, #16]
   6a09c:	cmp	r0, #0
   6a0a0:	ble	6a1b8 <__assert_fail@plt+0x57600>
   6a0a4:	ldr	r0, [fp, #-12]
   6a0a8:	ldr	r0, [r0]
   6a0ac:	ldr	r1, [sp, #16]
   6a0b0:	add	r0, r0, r1, lsl #2
   6a0b4:	ldr	r0, [r0]
   6a0b8:	movw	r1, #0
   6a0bc:	cmp	r0, r1
   6a0c0:	bne	6a0d4 <__assert_fail@plt+0x5751c>
   6a0c4:	ldr	r0, [sp, #20]
   6a0c8:	add	r0, r0, #1
   6a0cc:	str	r0, [sp]
   6a0d0:	b	6a0e0 <__assert_fail@plt+0x57528>
   6a0d4:	movw	r0, #0
   6a0d8:	str	r0, [sp]
   6a0dc:	b	6a0e0 <__assert_fail@plt+0x57528>
   6a0e0:	ldr	r0, [sp]
   6a0e4:	str	r0, [sp, #20]
   6a0e8:	ldr	r0, [sp, #20]
   6a0ec:	ldr	r1, [fp, #-8]
   6a0f0:	ldr	r1, [r1, #120]	; 0x78
   6a0f4:	cmp	r0, r1
   6a0f8:	ble	6a12c <__assert_fail@plt+0x57574>
   6a0fc:	ldr	r0, [fp, #-12]
   6a100:	ldr	r0, [r0]
   6a104:	ldr	r1, [sp, #16]
   6a108:	lsl	r2, r1, #2
   6a10c:	movw	r1, #0
   6a110:	and	r1, r1, #255	; 0xff
   6a114:	bl	12900 <memset@plt>
   6a118:	ldr	r0, [sp, #12]
   6a11c:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   6a120:	movw	r0, #0
   6a124:	str	r0, [fp, #-4]
   6a128:	b	6a1d0 <__assert_fail@plt+0x57618>
   6a12c:	mov	r0, #0
   6a130:	str	r0, [sp, #8]
   6a134:	ldr	r0, [sp, #16]
   6a138:	sub	r0, r0, #1
   6a13c:	str	r0, [sp, #16]
   6a140:	ldr	r0, [fp, #-8]
   6a144:	ldr	r0, [r0, #100]	; 0x64
   6a148:	ldr	r1, [sp, #16]
   6a14c:	add	r0, r0, r1, lsl #2
   6a150:	ldr	r0, [r0]
   6a154:	movw	r1, #0
   6a158:	cmp	r0, r1
   6a15c:	beq	6a18c <__assert_fail@plt+0x575d4>
   6a160:	ldr	r0, [fp, #-8]
   6a164:	ldr	r1, [fp, #-12]
   6a168:	ldr	r2, [sp, #16]
   6a16c:	add	r3, sp, #4
   6a170:	bl	6a528 <__assert_fail@plt+0x57970>
   6a174:	str	r0, [fp, #-16]
   6a178:	ldr	r0, [fp, #-16]
   6a17c:	cmp	r0, #0
   6a180:	beq	6a188 <__assert_fail@plt+0x575d0>
   6a184:	b	6a1c0 <__assert_fail@plt+0x57608>
   6a188:	b	6a18c <__assert_fail@plt+0x575d4>
   6a18c:	ldr	r0, [fp, #-8]
   6a190:	ldr	r1, [fp, #-12]
   6a194:	ldr	r2, [sp, #16]
   6a198:	add	r3, sp, #4
   6a19c:	bl	6a324 <__assert_fail@plt+0x5776c>
   6a1a0:	str	r0, [fp, #-16]
   6a1a4:	ldr	r0, [fp, #-16]
   6a1a8:	cmp	r0, #0
   6a1ac:	beq	6a1b4 <__assert_fail@plt+0x575fc>
   6a1b0:	b	6a1c0 <__assert_fail@plt+0x57608>
   6a1b4:	b	6a098 <__assert_fail@plt+0x574e0>
   6a1b8:	movw	r0, #0
   6a1bc:	str	r0, [fp, #-16]
   6a1c0:	ldr	r0, [sp, #12]
   6a1c4:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   6a1c8:	ldr	r0, [fp, #-16]
   6a1cc:	str	r0, [fp, #-4]
   6a1d0:	ldr	r0, [fp, #-4]
   6a1d4:	mov	sp, fp
   6a1d8:	pop	{fp, pc}
   6a1dc:	push	{fp, lr}
   6a1e0:	mov	fp, sp
   6a1e4:	sub	sp, sp, #48	; 0x30
   6a1e8:	str	r0, [fp, #-8]
   6a1ec:	str	r1, [fp, #-12]
   6a1f0:	str	r2, [fp, #-16]
   6a1f4:	str	r3, [fp, #-20]	; 0xffffffec
   6a1f8:	movw	r0, #0
   6a1fc:	str	r0, [sp, #24]
   6a200:	ldr	r0, [sp, #24]
   6a204:	ldr	r1, [fp, #-20]	; 0xffffffec
   6a208:	cmp	r0, r1
   6a20c:	bge	6a310 <__assert_fail@plt+0x57758>
   6a210:	ldr	r0, [fp, #-12]
   6a214:	ldr	r1, [sp, #24]
   6a218:	add	r0, r0, r1, lsl #2
   6a21c:	ldr	r0, [r0]
   6a220:	movw	r1, #0
   6a224:	cmp	r0, r1
   6a228:	bne	6a248 <__assert_fail@plt+0x57690>
   6a22c:	ldr	r0, [fp, #-16]
   6a230:	ldr	r1, [sp, #24]
   6a234:	ldr	r0, [r0, r1, lsl #2]
   6a238:	ldr	r2, [fp, #-12]
   6a23c:	add	r1, r2, r1, lsl #2
   6a240:	str	r0, [r1]
   6a244:	b	6a2fc <__assert_fail@plt+0x57744>
   6a248:	ldr	r0, [fp, #-16]
   6a24c:	ldr	r1, [sp, #24]
   6a250:	add	r0, r0, r1, lsl #2
   6a254:	ldr	r0, [r0]
   6a258:	movw	r1, #0
   6a25c:	cmp	r0, r1
   6a260:	beq	6a2f8 <__assert_fail@plt+0x57740>
   6a264:	ldr	r0, [fp, #-12]
   6a268:	ldr	r1, [sp, #24]
   6a26c:	ldr	r0, [r0, r1, lsl #2]
   6a270:	add	r0, r0, #4
   6a274:	ldr	r2, [fp, #-16]
   6a278:	add	r1, r2, r1, lsl #2
   6a27c:	ldr	r1, [r1]
   6a280:	add	r2, r1, #4
   6a284:	add	r1, sp, #8
   6a288:	str	r0, [sp, #4]
   6a28c:	mov	r0, r1
   6a290:	ldr	r1, [sp, #4]
   6a294:	bl	6618c <__assert_fail@plt+0x535d4>
   6a298:	str	r0, [sp, #20]
   6a29c:	ldr	r0, [sp, #20]
   6a2a0:	cmp	r0, #0
   6a2a4:	beq	6a2b4 <__assert_fail@plt+0x576fc>
   6a2a8:	ldr	r0, [sp, #20]
   6a2ac:	str	r0, [fp, #-4]
   6a2b0:	b	6a318 <__assert_fail@plt+0x57760>
   6a2b4:	ldr	r1, [fp, #-8]
   6a2b8:	add	r0, sp, #20
   6a2bc:	add	r2, sp, #8
   6a2c0:	bl	67d6c <__assert_fail@plt+0x551b4>
   6a2c4:	ldr	r1, [fp, #-12]
   6a2c8:	ldr	r2, [sp, #24]
   6a2cc:	add	r1, r1, r2, lsl #2
   6a2d0:	str	r0, [r1]
   6a2d4:	ldr	r0, [sp, #16]
   6a2d8:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   6a2dc:	ldr	r0, [sp, #20]
   6a2e0:	cmp	r0, #0
   6a2e4:	beq	6a2f4 <__assert_fail@plt+0x5773c>
   6a2e8:	ldr	r0, [sp, #20]
   6a2ec:	str	r0, [fp, #-4]
   6a2f0:	b	6a318 <__assert_fail@plt+0x57760>
   6a2f4:	b	6a2f8 <__assert_fail@plt+0x57740>
   6a2f8:	b	6a2fc <__assert_fail@plt+0x57744>
   6a2fc:	b	6a300 <__assert_fail@plt+0x57748>
   6a300:	ldr	r0, [sp, #24]
   6a304:	add	r0, r0, #1
   6a308:	str	r0, [sp, #24]
   6a30c:	b	6a200 <__assert_fail@plt+0x57648>
   6a310:	movw	r0, #0
   6a314:	str	r0, [fp, #-4]
   6a318:	ldr	r0, [fp, #-4]
   6a31c:	mov	sp, fp
   6a320:	pop	{fp, pc}
   6a324:	push	{fp, lr}
   6a328:	mov	fp, sp
   6a32c:	sub	sp, sp, #48	; 0x30
   6a330:	str	r0, [fp, #-8]
   6a334:	str	r1, [fp, #-12]
   6a338:	str	r2, [fp, #-16]
   6a33c:	str	r3, [fp, #-20]	; 0xffffffec
   6a340:	ldr	r0, [fp, #-8]
   6a344:	ldr	r0, [r0, #84]	; 0x54
   6a348:	str	r0, [sp, #24]
   6a34c:	mov	r0, #0
   6a350:	str	r0, [sp, #20]
   6a354:	ldr	r0, [fp, #-8]
   6a358:	ldr	r0, [r0, #100]	; 0x64
   6a35c:	ldr	r1, [fp, #-16]
   6a360:	add	r0, r0, r1, lsl #2
   6a364:	ldr	r0, [r0]
   6a368:	movw	r1, #0
   6a36c:	cmp	r0, r1
   6a370:	bne	6a380 <__assert_fail@plt+0x577c8>
   6a374:	movw	r0, #0
   6a378:	str	r0, [sp, #12]
   6a37c:	b	6a39c <__assert_fail@plt+0x577e4>
   6a380:	ldr	r0, [fp, #-8]
   6a384:	ldr	r0, [r0, #100]	; 0x64
   6a388:	ldr	r1, [fp, #-16]
   6a38c:	add	r0, r0, r1, lsl #2
   6a390:	ldr	r0, [r0]
   6a394:	add	r0, r0, #4
   6a398:	str	r0, [sp, #12]
   6a39c:	ldr	r0, [sp, #12]
   6a3a0:	str	r0, [sp, #16]
   6a3a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   6a3a8:	ldr	r0, [r0, #4]
   6a3ac:	cmp	r0, #0
   6a3b0:	bne	6a3d0 <__assert_fail@plt+0x57818>
   6a3b4:	ldr	r0, [fp, #-12]
   6a3b8:	ldr	r0, [r0]
   6a3bc:	ldr	r1, [fp, #-16]
   6a3c0:	add	r0, r0, r1, lsl #2
   6a3c4:	movw	r1, #0
   6a3c8:	str	r1, [r0]
   6a3cc:	b	6a4ac <__assert_fail@plt+0x578f4>
   6a3d0:	ldr	r0, [sp, #16]
   6a3d4:	movw	r1, #0
   6a3d8:	cmp	r0, r1
   6a3dc:	beq	6a46c <__assert_fail@plt+0x578b4>
   6a3e0:	ldr	r0, [sp, #24]
   6a3e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   6a3e8:	ldr	r2, [sp, #16]
   6a3ec:	bl	6a77c <__assert_fail@plt+0x57bc4>
   6a3f0:	str	r0, [sp, #20]
   6a3f4:	ldr	r0, [sp, #20]
   6a3f8:	cmp	r0, #0
   6a3fc:	beq	6a40c <__assert_fail@plt+0x57854>
   6a400:	ldr	r0, [sp, #20]
   6a404:	str	r0, [fp, #-4]
   6a408:	b	6a51c <__assert_fail@plt+0x57964>
   6a40c:	ldr	r0, [fp, #-12]
   6a410:	ldr	r0, [r0, #20]
   6a414:	cmp	r0, #0
   6a418:	beq	6a468 <__assert_fail@plt+0x578b0>
   6a41c:	ldr	r0, [sp, #24]
   6a420:	ldr	r1, [fp, #-20]	; 0xffffffec
   6a424:	ldr	r2, [sp, #16]
   6a428:	ldr	r3, [fp, #-12]
   6a42c:	add	r3, r3, #16
   6a430:	ldr	ip, [fp, #-8]
   6a434:	ldr	ip, [ip, #116]	; 0x74
   6a438:	ldr	lr, [fp, #-16]
   6a43c:	str	ip, [sp]
   6a440:	str	lr, [sp, #4]
   6a444:	bl	6a8b0 <__assert_fail@plt+0x57cf8>
   6a448:	str	r0, [sp, #20]
   6a44c:	ldr	r0, [sp, #20]
   6a450:	cmp	r0, #0
   6a454:	beq	6a464 <__assert_fail@plt+0x578ac>
   6a458:	ldr	r0, [sp, #20]
   6a45c:	str	r0, [fp, #-4]
   6a460:	b	6a51c <__assert_fail@plt+0x57964>
   6a464:	b	6a468 <__assert_fail@plt+0x578b0>
   6a468:	b	6a46c <__assert_fail@plt+0x578b4>
   6a46c:	ldr	r1, [sp, #24]
   6a470:	ldr	r2, [fp, #-20]	; 0xffffffec
   6a474:	add	r0, sp, #20
   6a478:	bl	67d6c <__assert_fail@plt+0x551b4>
   6a47c:	ldr	r1, [fp, #-12]
   6a480:	ldr	r1, [r1]
   6a484:	ldr	r2, [fp, #-16]
   6a488:	add	r1, r1, r2, lsl #2
   6a48c:	str	r0, [r1]
   6a490:	ldr	r0, [sp, #20]
   6a494:	cmp	r0, #0
   6a498:	beq	6a4a8 <__assert_fail@plt+0x578f0>
   6a49c:	ldr	r0, [sp, #20]
   6a4a0:	str	r0, [fp, #-4]
   6a4a4:	b	6a51c <__assert_fail@plt+0x57964>
   6a4a8:	b	6a4ac <__assert_fail@plt+0x578f4>
   6a4ac:	ldr	r0, [sp, #16]
   6a4b0:	movw	r1, #0
   6a4b4:	cmp	r0, r1
   6a4b8:	beq	6a514 <__assert_fail@plt+0x5795c>
   6a4bc:	ldr	r0, [fp, #-8]
   6a4c0:	ldr	r0, [r0, #100]	; 0x64
   6a4c4:	ldr	r1, [fp, #-16]
   6a4c8:	ldr	r0, [r0, r1, lsl #2]
   6a4cc:	ldrb	r0, [r0, #52]	; 0x34
   6a4d0:	ubfx	r0, r0, #6, #1
   6a4d4:	and	r0, r0, #255	; 0xff
   6a4d8:	cmp	r0, #0
   6a4dc:	beq	6a514 <__assert_fail@plt+0x5795c>
   6a4e0:	ldr	r0, [fp, #-8]
   6a4e4:	ldr	r1, [fp, #-12]
   6a4e8:	ldr	r2, [fp, #-16]
   6a4ec:	ldr	r3, [sp, #16]
   6a4f0:	bl	6ac78 <__assert_fail@plt+0x580c0>
   6a4f4:	str	r0, [sp, #20]
   6a4f8:	ldr	r0, [sp, #20]
   6a4fc:	cmp	r0, #0
   6a500:	beq	6a510 <__assert_fail@plt+0x57958>
   6a504:	ldr	r0, [sp, #20]
   6a508:	str	r0, [fp, #-4]
   6a50c:	b	6a51c <__assert_fail@plt+0x57964>
   6a510:	b	6a514 <__assert_fail@plt+0x5795c>
   6a514:	movw	r0, #0
   6a518:	str	r0, [fp, #-4]
   6a51c:	ldr	r0, [fp, #-4]
   6a520:	mov	sp, fp
   6a524:	pop	{fp, pc}
   6a528:	push	{fp, lr}
   6a52c:	mov	fp, sp
   6a530:	sub	sp, sp, #56	; 0x38
   6a534:	str	r0, [fp, #-8]
   6a538:	str	r1, [fp, #-12]
   6a53c:	str	r2, [fp, #-16]
   6a540:	str	r3, [fp, #-20]	; 0xffffffec
   6a544:	ldr	r0, [fp, #-8]
   6a548:	ldr	r0, [r0, #84]	; 0x54
   6a54c:	str	r0, [fp, #-24]	; 0xffffffe8
   6a550:	ldr	r0, [fp, #-8]
   6a554:	ldr	r0, [r0, #100]	; 0x64
   6a558:	ldr	r1, [fp, #-16]
   6a55c:	add	r0, r0, r1, lsl #2
   6a560:	ldr	r0, [r0]
   6a564:	add	r0, r0, #16
   6a568:	str	r0, [sp, #28]
   6a56c:	movw	r0, #0
   6a570:	str	r0, [sp, #24]
   6a574:	ldr	r0, [sp, #24]
   6a578:	ldr	r1, [sp, #28]
   6a57c:	ldr	r1, [r1, #4]
   6a580:	cmp	r0, r1
   6a584:	bge	6a768 <__assert_fail@plt+0x57bb0>
   6a588:	ldr	r0, [sp, #28]
   6a58c:	ldr	r0, [r0, #8]
   6a590:	ldr	r1, [sp, #24]
   6a594:	ldr	r0, [r0, r1, lsl #2]
   6a598:	str	r0, [sp, #20]
   6a59c:	mov	r0, #0
   6a5a0:	str	r0, [sp, #16]
   6a5a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6a5a8:	ldr	r0, [r0]
   6a5ac:	ldr	r1, [sp, #20]
   6a5b0:	add	r0, r0, r1, lsl #3
   6a5b4:	ldr	r0, [r0, #4]
   6a5b8:	and	r0, r0, #255	; 0xff
   6a5bc:	and	r0, r0, #8
   6a5c0:	cmp	r0, #0
   6a5c4:	bne	6a5cc <__assert_fail@plt+0x57a14>
   6a5c8:	b	6a5cc <__assert_fail@plt+0x57a14>
   6a5cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6a5d0:	ldr	r0, [r0]
   6a5d4:	ldr	r1, [sp, #20]
   6a5d8:	add	r0, r0, r1, lsl #3
   6a5dc:	ldr	r0, [r0, #4]
   6a5e0:	lsr	r0, r0, #20
   6a5e4:	and	r0, r0, #1
   6a5e8:	cmp	r0, #0
   6a5ec:	beq	6a614 <__assert_fail@plt+0x57a5c>
   6a5f0:	ldr	r0, [fp, #-8]
   6a5f4:	ldr	r1, [fp, #-12]
   6a5f8:	ldr	r2, [sp, #20]
   6a5fc:	ldr	r3, [fp, #-16]
   6a600:	ldr	ip, [fp, #-12]
   6a604:	ldr	ip, [ip, #12]
   6a608:	str	ip, [sp]
   6a60c:	bl	6bd04 <__assert_fail@plt+0x5914c>
   6a610:	str	r0, [sp, #16]
   6a614:	ldr	r0, [sp, #16]
   6a618:	cmp	r0, #0
   6a61c:	bne	6a6a8 <__assert_fail@plt+0x57af0>
   6a620:	ldr	r0, [fp, #-8]
   6a624:	ldr	r1, [fp, #-24]	; 0xffffffe8
   6a628:	ldr	r1, [r1]
   6a62c:	ldr	r2, [sp, #20]
   6a630:	add	r1, r1, r2, lsl #3
   6a634:	ldr	r2, [fp, #-16]
   6a638:	bl	686ac <__assert_fail@plt+0x55af4>
   6a63c:	tst	r0, #1
   6a640:	beq	6a6a8 <__assert_fail@plt+0x57af0>
   6a644:	ldr	r0, [fp, #-12]
   6a648:	ldr	r0, [r0]
   6a64c:	ldr	r1, [fp, #-16]
   6a650:	add	r1, r1, #1
   6a654:	add	r0, r0, r1, lsl #2
   6a658:	ldr	r0, [r0]
   6a65c:	movw	r1, #0
   6a660:	cmp	r0, r1
   6a664:	beq	6a6a8 <__assert_fail@plt+0x57af0>
   6a668:	ldr	r0, [fp, #-12]
   6a66c:	ldr	r0, [r0]
   6a670:	ldr	r1, [fp, #-16]
   6a674:	add	r0, r0, r1, lsl #2
   6a678:	ldr	r0, [r0, #4]
   6a67c:	add	r0, r0, #4
   6a680:	ldr	r1, [fp, #-24]	; 0xffffffe8
   6a684:	ldr	r1, [r1, #12]
   6a688:	ldr	r2, [sp, #20]
   6a68c:	add	r1, r1, r2, lsl #2
   6a690:	ldr	r1, [r1]
   6a694:	bl	6206c <__assert_fail@plt+0x4f4b4>
   6a698:	cmp	r0, #0
   6a69c:	beq	6a6a8 <__assert_fail@plt+0x57af0>
   6a6a0:	movw	r0, #1
   6a6a4:	str	r0, [sp, #16]
   6a6a8:	ldr	r0, [sp, #16]
   6a6ac:	cmp	r0, #0
   6a6b0:	bne	6a6b8 <__assert_fail@plt+0x57b00>
   6a6b4:	b	6a758 <__assert_fail@plt+0x57ba0>
   6a6b8:	ldr	r0, [fp, #-12]
   6a6bc:	ldr	r0, [r0, #20]
   6a6c0:	cmp	r0, #0
   6a6c4:	beq	6a720 <__assert_fail@plt+0x57b68>
   6a6c8:	ldr	r0, [fp, #-16]
   6a6cc:	ldr	r1, [sp, #16]
   6a6d0:	add	r0, r0, r1
   6a6d4:	str	r0, [sp, #8]
   6a6d8:	ldr	r0, [fp, #-8]
   6a6dc:	ldr	r1, [fp, #-12]
   6a6e0:	add	r1, r1, #16
   6a6e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   6a6e8:	ldr	r2, [r2, #12]
   6a6ec:	ldr	r3, [sp, #20]
   6a6f0:	add	r2, r2, r3, lsl #2
   6a6f4:	ldr	r2, [r2]
   6a6f8:	ldr	r3, [sp, #8]
   6a6fc:	ldr	ip, [sp, #20]
   6a700:	ldr	lr, [fp, #-16]
   6a704:	str	ip, [sp]
   6a708:	str	lr, [sp, #4]
   6a70c:	bl	6b77c <__assert_fail@plt+0x58bc4>
   6a710:	tst	r0, #1
   6a714:	beq	6a71c <__assert_fail@plt+0x57b64>
   6a718:	b	6a758 <__assert_fail@plt+0x57ba0>
   6a71c:	b	6a720 <__assert_fail@plt+0x57b68>
   6a720:	ldr	r0, [fp, #-20]	; 0xffffffec
   6a724:	ldr	r1, [sp, #20]
   6a728:	bl	61bb0 <__assert_fail@plt+0x4eff8>
   6a72c:	and	r0, r0, #1
   6a730:	strb	r0, [sp, #15]
   6a734:	ldrb	r0, [sp, #15]
   6a738:	mvn	r1, #0
   6a73c:	eor	r0, r0, r1
   6a740:	tst	r0, #1
   6a744:	beq	6a754 <__assert_fail@plt+0x57b9c>
   6a748:	movw	r0, #12
   6a74c:	str	r0, [fp, #-4]
   6a750:	b	6a770 <__assert_fail@plt+0x57bb8>
   6a754:	b	6a758 <__assert_fail@plt+0x57ba0>
   6a758:	ldr	r0, [sp, #24]
   6a75c:	add	r0, r0, #1
   6a760:	str	r0, [sp, #24]
   6a764:	b	6a574 <__assert_fail@plt+0x579bc>
   6a768:	movw	r0, #0
   6a76c:	str	r0, [fp, #-4]
   6a770:	ldr	r0, [fp, #-4]
   6a774:	mov	sp, fp
   6a778:	pop	{fp, pc}
   6a77c:	push	{fp, lr}
   6a780:	mov	fp, sp
   6a784:	sub	sp, sp, #32
   6a788:	str	r0, [fp, #-8]
   6a78c:	str	r1, [fp, #-12]
   6a790:	str	r2, [sp, #16]
   6a794:	movw	r0, #0
   6a798:	str	r0, [sp, #12]
   6a79c:	ldr	r1, [fp, #-8]
   6a7a0:	ldr	r2, [fp, #-12]
   6a7a4:	add	r0, sp, #12
   6a7a8:	bl	67d6c <__assert_fail@plt+0x551b4>
   6a7ac:	str	r0, [sp, #4]
   6a7b0:	ldr	r0, [sp, #12]
   6a7b4:	cmp	r0, #0
   6a7b8:	beq	6a7c8 <__assert_fail@plt+0x57c10>
   6a7bc:	ldr	r0, [sp, #12]
   6a7c0:	str	r0, [fp, #-4]
   6a7c4:	b	6a8a4 <__assert_fail@plt+0x57cec>
   6a7c8:	ldr	r0, [sp, #4]
   6a7cc:	ldr	r0, [r0, #28]
   6a7d0:	cmp	r0, #0
   6a7d4:	bne	6a88c <__assert_fail@plt+0x57cd4>
   6a7d8:	ldr	r0, [sp, #4]
   6a7dc:	add	r0, r0, #28
   6a7e0:	ldr	r1, [fp, #-12]
   6a7e4:	ldr	r1, [r1, #4]
   6a7e8:	bl	61148 <__assert_fail@plt+0x4e590>
   6a7ec:	str	r0, [sp, #12]
   6a7f0:	ldr	r0, [sp, #12]
   6a7f4:	cmp	r0, #0
   6a7f8:	beq	6a808 <__assert_fail@plt+0x57c50>
   6a7fc:	movw	r0, #12
   6a800:	str	r0, [fp, #-4]
   6a804:	b	6a8a4 <__assert_fail@plt+0x57cec>
   6a808:	movw	r0, #0
   6a80c:	str	r0, [sp, #8]
   6a810:	ldr	r0, [sp, #8]
   6a814:	ldr	r1, [fp, #-12]
   6a818:	ldr	r1, [r1, #4]
   6a81c:	cmp	r0, r1
   6a820:	bge	6a888 <__assert_fail@plt+0x57cd0>
   6a824:	ldr	r0, [sp, #4]
   6a828:	add	r0, r0, #28
   6a82c:	ldr	r1, [fp, #-8]
   6a830:	ldr	r1, [r1, #28]
   6a834:	ldr	r2, [fp, #-12]
   6a838:	ldr	r2, [r2, #8]
   6a83c:	ldr	r3, [sp, #8]
   6a840:	add	r2, r2, r3, lsl #2
   6a844:	ldr	r2, [r2]
   6a848:	movw	r3, #12
   6a84c:	mul	r2, r2, r3
   6a850:	add	r1, r1, r2
   6a854:	bl	616c0 <__assert_fail@plt+0x4eb08>
   6a858:	str	r0, [sp, #12]
   6a85c:	ldr	r0, [sp, #12]
   6a860:	cmp	r0, #0
   6a864:	beq	6a874 <__assert_fail@plt+0x57cbc>
   6a868:	movw	r0, #12
   6a86c:	str	r0, [fp, #-4]
   6a870:	b	6a8a4 <__assert_fail@plt+0x57cec>
   6a874:	b	6a878 <__assert_fail@plt+0x57cc0>
   6a878:	ldr	r0, [sp, #8]
   6a87c:	add	r0, r0, #1
   6a880:	str	r0, [sp, #8]
   6a884:	b	6a810 <__assert_fail@plt+0x57c58>
   6a888:	b	6a88c <__assert_fail@plt+0x57cd4>
   6a88c:	ldr	r0, [fp, #-12]
   6a890:	ldr	r1, [sp, #16]
   6a894:	ldr	r2, [sp, #4]
   6a898:	add	r2, r2, #28
   6a89c:	bl	6b0a8 <__assert_fail@plt+0x584f0>
   6a8a0:	str	r0, [fp, #-4]
   6a8a4:	ldr	r0, [fp, #-4]
   6a8a8:	mov	sp, fp
   6a8ac:	pop	{fp, pc}
   6a8b0:	push	{fp, lr}
   6a8b4:	mov	fp, sp
   6a8b8:	sub	sp, sp, #72	; 0x48
   6a8bc:	ldr	ip, [fp, #12]
   6a8c0:	ldr	lr, [fp, #8]
   6a8c4:	str	r0, [fp, #-8]
   6a8c8:	str	r1, [fp, #-12]
   6a8cc:	str	r2, [fp, #-16]
   6a8d0:	str	r3, [fp, #-20]	; 0xffffffec
   6a8d4:	movw	r0, #0
   6a8d8:	str	r0, [fp, #-32]	; 0xffffffe0
   6a8dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6a8e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   6a8e4:	ldr	r1, [r1, #4]
   6a8e8:	cmp	r0, r1
   6a8ec:	bge	6ac64 <__assert_fail@plt+0x580ac>
   6a8f0:	ldr	r0, [fp, #8]
   6a8f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   6a8f8:	ldr	r1, [r1, #8]
   6a8fc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   6a900:	add	r1, r1, r2, lsl #2
   6a904:	ldr	r1, [r1]
   6a908:	movw	r2, #24
   6a90c:	mul	r1, r1, r2
   6a910:	add	r0, r0, r1
   6a914:	str	r0, [sp, #32]
   6a918:	ldr	r0, [fp, #12]
   6a91c:	ldr	r1, [sp, #32]
   6a920:	ldr	r1, [r1, #8]
   6a924:	cmp	r0, r1
   6a928:	ble	6a940 <__assert_fail@plt+0x57d88>
   6a92c:	ldr	r0, [sp, #32]
   6a930:	ldr	r0, [r0, #4]
   6a934:	ldr	r1, [fp, #12]
   6a938:	cmp	r0, r1
   6a93c:	bge	6a944 <__assert_fail@plt+0x57d8c>
   6a940:	b	6ac54 <__assert_fail@plt+0x5809c>
   6a944:	ldr	r0, [fp, #-8]
   6a948:	ldr	r0, [r0]
   6a94c:	ldr	r1, [sp, #32]
   6a950:	ldr	r1, [r1]
   6a954:	add	r0, r0, r1, lsl #3
   6a958:	ldr	r0, [r0]
   6a95c:	str	r0, [sp, #36]	; 0x24
   6a960:	ldr	r0, [sp, #32]
   6a964:	ldr	r0, [r0, #12]
   6a968:	ldr	r1, [fp, #12]
   6a96c:	cmp	r0, r1
   6a970:	bne	6ab7c <__assert_fail@plt+0x57fc4>
   6a974:	mvn	r0, #0
   6a978:	str	r0, [sp, #28]
   6a97c:	str	r0, [sp, #24]
   6a980:	movw	r0, #0
   6a984:	str	r0, [fp, #-28]	; 0xffffffe4
   6a988:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6a98c:	ldr	r1, [fp, #-12]
   6a990:	ldr	r1, [r1, #4]
   6a994:	cmp	r0, r1
   6a998:	bge	6aa50 <__assert_fail@plt+0x57e98>
   6a99c:	ldr	r0, [fp, #-12]
   6a9a0:	ldr	r0, [r0, #8]
   6a9a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6a9a8:	ldr	r0, [r0, r1, lsl #2]
   6a9ac:	str	r0, [sp, #20]
   6a9b0:	ldr	r0, [fp, #-8]
   6a9b4:	ldr	r0, [r0]
   6a9b8:	ldr	r1, [sp, #20]
   6a9bc:	add	r0, r0, r1, lsl #3
   6a9c0:	ldr	r0, [r0, #4]
   6a9c4:	and	r0, r0, #255	; 0xff
   6a9c8:	str	r0, [sp, #16]
   6a9cc:	ldr	r0, [sp, #16]
   6a9d0:	cmp	r0, #8
   6a9d4:	bne	6aa04 <__assert_fail@plt+0x57e4c>
   6a9d8:	ldr	r0, [sp, #36]	; 0x24
   6a9dc:	ldr	r1, [fp, #-8]
   6a9e0:	ldr	r1, [r1]
   6a9e4:	ldr	r2, [sp, #20]
   6a9e8:	add	r1, r1, r2, lsl #3
   6a9ec:	ldr	r1, [r1]
   6a9f0:	cmp	r0, r1
   6a9f4:	bne	6aa04 <__assert_fail@plt+0x57e4c>
   6a9f8:	ldr	r0, [sp, #20]
   6a9fc:	str	r0, [sp, #28]
   6aa00:	b	6aa3c <__assert_fail@plt+0x57e84>
   6aa04:	ldr	r0, [sp, #16]
   6aa08:	cmp	r0, #9
   6aa0c:	bne	6aa38 <__assert_fail@plt+0x57e80>
   6aa10:	ldr	r0, [sp, #36]	; 0x24
   6aa14:	ldr	r1, [fp, #-8]
   6aa18:	ldr	r1, [r1]
   6aa1c:	ldr	r2, [sp, #20]
   6aa20:	add	r1, r1, r2, lsl #3
   6aa24:	ldr	r1, [r1]
   6aa28:	cmp	r0, r1
   6aa2c:	bne	6aa38 <__assert_fail@plt+0x57e80>
   6aa30:	ldr	r0, [sp, #20]
   6aa34:	str	r0, [sp, #24]
   6aa38:	b	6aa3c <__assert_fail@plt+0x57e84>
   6aa3c:	b	6aa40 <__assert_fail@plt+0x57e88>
   6aa40:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6aa44:	add	r0, r0, #1
   6aa48:	str	r0, [fp, #-28]	; 0xffffffe4
   6aa4c:	b	6a988 <__assert_fail@plt+0x57dd0>
   6aa50:	ldr	r0, [sp, #28]
   6aa54:	cmp	r0, #0
   6aa58:	blt	6aa90 <__assert_fail@plt+0x57ed8>
   6aa5c:	ldr	r0, [fp, #-8]
   6aa60:	ldr	r1, [sp, #28]
   6aa64:	ldr	r2, [fp, #-12]
   6aa68:	ldr	r3, [fp, #-16]
   6aa6c:	bl	6b4f0 <__assert_fail@plt+0x58938>
   6aa70:	str	r0, [fp, #-24]	; 0xffffffe8
   6aa74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6aa78:	cmp	r0, #0
   6aa7c:	beq	6aa8c <__assert_fail@plt+0x57ed4>
   6aa80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6aa84:	str	r0, [fp, #-4]
   6aa88:	b	6ac6c <__assert_fail@plt+0x580b4>
   6aa8c:	b	6aa90 <__assert_fail@plt+0x57ed8>
   6aa90:	ldr	r0, [sp, #24]
   6aa94:	cmp	r0, #0
   6aa98:	blt	6ab78 <__assert_fail@plt+0x57fc0>
   6aa9c:	movw	r0, #0
   6aaa0:	str	r0, [fp, #-28]	; 0xffffffe4
   6aaa4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6aaa8:	ldr	r1, [fp, #-12]
   6aaac:	ldr	r1, [r1, #4]
   6aab0:	cmp	r0, r1
   6aab4:	bge	6ab74 <__assert_fail@plt+0x57fbc>
   6aab8:	ldr	r0, [fp, #-12]
   6aabc:	ldr	r0, [r0, #8]
   6aac0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6aac4:	add	r0, r0, r1, lsl #2
   6aac8:	ldr	r0, [r0]
   6aacc:	str	r0, [sp, #12]
   6aad0:	ldr	r0, [fp, #-8]
   6aad4:	ldr	r0, [r0, #28]
   6aad8:	ldr	r1, [sp, #12]
   6aadc:	movw	r2, #12
   6aae0:	mul	r1, r1, r2
   6aae4:	add	r0, r0, r1
   6aae8:	ldr	r1, [sp, #24]
   6aaec:	bl	6206c <__assert_fail@plt+0x4f4b4>
   6aaf0:	cmp	r0, #0
   6aaf4:	bne	6ab60 <__assert_fail@plt+0x57fa8>
   6aaf8:	ldr	r0, [fp, #-8]
   6aafc:	ldr	r0, [r0, #24]
   6ab00:	ldr	r1, [sp, #12]
   6ab04:	movw	r2, #12
   6ab08:	mul	r1, r1, r2
   6ab0c:	add	r0, r0, r1
   6ab10:	ldr	r1, [sp, #24]
   6ab14:	bl	6206c <__assert_fail@plt+0x4f4b4>
   6ab18:	cmp	r0, #0
   6ab1c:	bne	6ab60 <__assert_fail@plt+0x57fa8>
   6ab20:	ldr	r0, [fp, #-8]
   6ab24:	ldr	r1, [sp, #12]
   6ab28:	ldr	r2, [fp, #-12]
   6ab2c:	ldr	r3, [fp, #-16]
   6ab30:	bl	6b4f0 <__assert_fail@plt+0x58938>
   6ab34:	str	r0, [fp, #-24]	; 0xffffffe8
   6ab38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6ab3c:	cmp	r0, #0
   6ab40:	beq	6ab50 <__assert_fail@plt+0x57f98>
   6ab44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6ab48:	str	r0, [fp, #-4]
   6ab4c:	b	6ac6c <__assert_fail@plt+0x580b4>
   6ab50:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6ab54:	mvn	r1, #0
   6ab58:	add	r0, r0, r1
   6ab5c:	str	r0, [fp, #-28]	; 0xffffffe4
   6ab60:	b	6ab64 <__assert_fail@plt+0x57fac>
   6ab64:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6ab68:	add	r0, r0, #1
   6ab6c:	str	r0, [fp, #-28]	; 0xffffffe4
   6ab70:	b	6aaa4 <__assert_fail@plt+0x57eec>
   6ab74:	b	6ab78 <__assert_fail@plt+0x57fc0>
   6ab78:	b	6ac50 <__assert_fail@plt+0x58098>
   6ab7c:	movw	r0, #0
   6ab80:	str	r0, [fp, #-28]	; 0xffffffe4
   6ab84:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6ab88:	ldr	r1, [fp, #-12]
   6ab8c:	ldr	r1, [r1, #4]
   6ab90:	cmp	r0, r1
   6ab94:	bge	6ac4c <__assert_fail@plt+0x58094>
   6ab98:	ldr	r0, [fp, #-12]
   6ab9c:	ldr	r0, [r0, #8]
   6aba0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6aba4:	ldr	r0, [r0, r1, lsl #2]
   6aba8:	str	r0, [sp, #8]
   6abac:	ldr	r0, [fp, #-8]
   6abb0:	ldr	r0, [r0]
   6abb4:	ldr	r1, [sp, #8]
   6abb8:	add	r0, r0, r1, lsl #3
   6abbc:	ldr	r0, [r0, #4]
   6abc0:	and	r0, r0, #255	; 0xff
   6abc4:	str	r0, [sp, #4]
   6abc8:	ldr	r0, [sp, #4]
   6abcc:	cmp	r0, #9
   6abd0:	beq	6abe0 <__assert_fail@plt+0x58028>
   6abd4:	ldr	r0, [sp, #4]
   6abd8:	cmp	r0, #8
   6abdc:	bne	6ac38 <__assert_fail@plt+0x58080>
   6abe0:	ldr	r0, [sp, #36]	; 0x24
   6abe4:	ldr	r1, [fp, #-8]
   6abe8:	ldr	r1, [r1]
   6abec:	ldr	r2, [sp, #8]
   6abf0:	add	r1, r1, r2, lsl #3
   6abf4:	ldr	r1, [r1]
   6abf8:	cmp	r0, r1
   6abfc:	beq	6ac04 <__assert_fail@plt+0x5804c>
   6ac00:	b	6ac3c <__assert_fail@plt+0x58084>
   6ac04:	ldr	r0, [fp, #-8]
   6ac08:	ldr	r1, [sp, #8]
   6ac0c:	ldr	r2, [fp, #-12]
   6ac10:	ldr	r3, [fp, #-16]
   6ac14:	bl	6b4f0 <__assert_fail@plt+0x58938>
   6ac18:	str	r0, [fp, #-24]	; 0xffffffe8
   6ac1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6ac20:	cmp	r0, #0
   6ac24:	beq	6ac34 <__assert_fail@plt+0x5807c>
   6ac28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6ac2c:	str	r0, [fp, #-4]
   6ac30:	b	6ac6c <__assert_fail@plt+0x580b4>
   6ac34:	b	6ac38 <__assert_fail@plt+0x58080>
   6ac38:	b	6ac3c <__assert_fail@plt+0x58084>
   6ac3c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6ac40:	add	r0, r0, #1
   6ac44:	str	r0, [fp, #-28]	; 0xffffffe4
   6ac48:	b	6ab84 <__assert_fail@plt+0x57fcc>
   6ac4c:	b	6ac50 <__assert_fail@plt+0x58098>
   6ac50:	b	6ac54 <__assert_fail@plt+0x5809c>
   6ac54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6ac58:	add	r0, r0, #1
   6ac5c:	str	r0, [fp, #-32]	; 0xffffffe0
   6ac60:	b	6a8dc <__assert_fail@plt+0x57d24>
   6ac64:	movw	r0, #0
   6ac68:	str	r0, [fp, #-4]
   6ac6c:	ldr	r0, [fp, #-4]
   6ac70:	mov	sp, fp
   6ac74:	pop	{fp, pc}
   6ac78:	push	{fp, lr}
   6ac7c:	mov	fp, sp
   6ac80:	sub	sp, sp, #128	; 0x80
   6ac84:	str	r0, [fp, #-8]
   6ac88:	str	r1, [fp, #-12]
   6ac8c:	str	r2, [fp, #-16]
   6ac90:	str	r3, [fp, #-20]	; 0xffffffec
   6ac94:	ldr	r0, [fp, #-8]
   6ac98:	ldr	r0, [r0, #84]	; 0x54
   6ac9c:	str	r0, [fp, #-24]	; 0xffffffe8
   6aca0:	ldr	r0, [fp, #-8]
   6aca4:	ldr	r1, [fp, #-16]
   6aca8:	bl	664d8 <__assert_fail@plt+0x53920>
   6acac:	str	r0, [sp, #60]	; 0x3c
   6acb0:	ldr	r0, [sp, #60]	; 0x3c
   6acb4:	cmn	r0, #1
   6acb8:	bne	6acc8 <__assert_fail@plt+0x58110>
   6acbc:	movw	r0, #0
   6acc0:	str	r0, [fp, #-4]
   6acc4:	b	6b09c <__assert_fail@plt+0x584e4>
   6acc8:	movw	r0, #0
   6accc:	str	r0, [sp, #64]	; 0x40
   6acd0:	str	r0, [fp, #-32]	; 0xffffffe0
   6acd4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6acd8:	ldr	r1, [fp, #-20]	; 0xffffffec
   6acdc:	ldr	r1, [r1, #4]
   6ace0:	cmp	r0, r1
   6ace4:	bge	6b074 <__assert_fail@plt+0x584bc>
   6ace8:	ldr	r0, [fp, #-20]	; 0xffffffec
   6acec:	ldr	r0, [r0, #8]
   6acf0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   6acf4:	ldr	r0, [r0, r1, lsl #2]
   6acf8:	str	r0, [fp, #-36]	; 0xffffffdc
   6acfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6ad00:	ldr	r0, [r0]
   6ad04:	ldr	r1, [fp, #-36]	; 0xffffffdc
   6ad08:	add	r0, r0, r1, lsl #3
   6ad0c:	ldr	r0, [r0, #4]
   6ad10:	and	r0, r0, #255	; 0xff
   6ad14:	str	r0, [sp, #52]	; 0x34
   6ad18:	ldr	r0, [fp, #-36]	; 0xffffffdc
   6ad1c:	ldr	r1, [fp, #-12]
   6ad20:	ldr	r1, [r1, #8]
   6ad24:	cmp	r0, r1
   6ad28:	bne	6ad44 <__assert_fail@plt+0x5818c>
   6ad2c:	ldr	r0, [fp, #-16]
   6ad30:	ldr	r1, [fp, #-12]
   6ad34:	ldr	r1, [r1, #12]
   6ad38:	cmp	r0, r1
   6ad3c:	bne	6ad44 <__assert_fail@plt+0x5818c>
   6ad40:	b	6b064 <__assert_fail@plt+0x584ac>
   6ad44:	ldr	r0, [sp, #52]	; 0x34
   6ad48:	cmp	r0, #4
   6ad4c:	beq	6ad54 <__assert_fail@plt+0x5819c>
   6ad50:	b	6b064 <__assert_fail@plt+0x584ac>
   6ad54:	ldr	r0, [fp, #-8]
   6ad58:	ldr	r0, [r0, #116]	; 0x74
   6ad5c:	ldr	r1, [sp, #60]	; 0x3c
   6ad60:	movw	r2, #24
   6ad64:	mul	r1, r1, r2
   6ad68:	add	r0, r0, r1
   6ad6c:	str	r0, [sp, #48]	; 0x30
   6ad70:	ldr	r0, [sp, #60]	; 0x3c
   6ad74:	str	r0, [sp, #56]	; 0x38
   6ad78:	ldr	r0, [sp, #48]	; 0x30
   6ad7c:	ldr	r0, [r0]
   6ad80:	ldr	r1, [fp, #-36]	; 0xffffffdc
   6ad84:	cmp	r0, r1
   6ad88:	beq	6ad90 <__assert_fail@plt+0x581d8>
   6ad8c:	b	6b03c <__assert_fail@plt+0x58484>
   6ad90:	ldr	r0, [sp, #48]	; 0x30
   6ad94:	ldr	r0, [r0, #12]
   6ad98:	ldr	r1, [sp, #48]	; 0x30
   6ad9c:	ldr	r1, [r1, #8]
   6ada0:	sub	r0, r0, r1
   6ada4:	str	r0, [sp, #44]	; 0x2c
   6ada8:	ldr	r0, [fp, #-16]
   6adac:	ldr	r1, [sp, #44]	; 0x2c
   6adb0:	add	r0, r0, r1
   6adb4:	str	r0, [sp, #40]	; 0x28
   6adb8:	ldr	r0, [sp, #44]	; 0x2c
   6adbc:	cmp	r0, #0
   6adc0:	beq	6ade0 <__assert_fail@plt+0x58228>
   6adc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6adc8:	ldr	r0, [r0, #12]
   6adcc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   6add0:	add	r0, r0, r1, lsl #2
   6add4:	ldr	r0, [r0]
   6add8:	str	r0, [sp, #24]
   6addc:	b	6ae04 <__assert_fail@plt+0x5824c>
   6ade0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6ade4:	ldr	r0, [r0, #20]
   6ade8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   6adec:	movw	r2, #12
   6adf0:	mul	r1, r1, r2
   6adf4:	add	r0, r0, r1
   6adf8:	ldr	r0, [r0, #8]
   6adfc:	ldr	r0, [r0]
   6ae00:	str	r0, [sp, #24]
   6ae04:	ldr	r0, [sp, #24]
   6ae08:	str	r0, [sp, #36]	; 0x24
   6ae0c:	ldr	r0, [sp, #40]	; 0x28
   6ae10:	ldr	r1, [fp, #-12]
   6ae14:	ldr	r1, [r1, #12]
   6ae18:	cmp	r0, r1
   6ae1c:	bgt	6aeb8 <__assert_fail@plt+0x58300>
   6ae20:	ldr	r0, [fp, #-12]
   6ae24:	ldr	r0, [r0]
   6ae28:	ldr	r1, [sp, #40]	; 0x28
   6ae2c:	add	r0, r0, r1, lsl #2
   6ae30:	ldr	r0, [r0]
   6ae34:	movw	r1, #0
   6ae38:	cmp	r0, r1
   6ae3c:	beq	6aeb8 <__assert_fail@plt+0x58300>
   6ae40:	ldr	r0, [fp, #-12]
   6ae44:	ldr	r0, [r0]
   6ae48:	ldr	r1, [sp, #40]	; 0x28
   6ae4c:	add	r0, r0, r1, lsl #2
   6ae50:	ldr	r0, [r0]
   6ae54:	movw	r1, #0
   6ae58:	cmp	r0, r1
   6ae5c:	beq	6aeb8 <__assert_fail@plt+0x58300>
   6ae60:	ldr	r0, [fp, #-12]
   6ae64:	ldr	r0, [r0]
   6ae68:	ldr	r1, [sp, #40]	; 0x28
   6ae6c:	add	r0, r0, r1, lsl #2
   6ae70:	ldr	r0, [r0]
   6ae74:	add	r0, r0, #4
   6ae78:	ldr	r1, [sp, #36]	; 0x24
   6ae7c:	bl	6206c <__assert_fail@plt+0x4f4b4>
   6ae80:	cmp	r0, #0
   6ae84:	beq	6aeb8 <__assert_fail@plt+0x58300>
   6ae88:	ldr	r0, [fp, #-8]
   6ae8c:	ldr	r1, [fp, #-12]
   6ae90:	add	r1, r1, #16
   6ae94:	ldr	r2, [fp, #-36]	; 0xffffffdc
   6ae98:	ldr	r3, [fp, #-16]
   6ae9c:	ldr	ip, [sp, #36]	; 0x24
   6aea0:	ldr	lr, [sp, #40]	; 0x28
   6aea4:	str	ip, [sp]
   6aea8:	str	lr, [sp, #4]
   6aeac:	bl	6b77c <__assert_fail@plt+0x58bc4>
   6aeb0:	tst	r0, #1
   6aeb4:	beq	6aebc <__assert_fail@plt+0x58304>
   6aeb8:	b	6b03c <__assert_fail@plt+0x58484>
   6aebc:	ldr	r0, [sp, #64]	; 0x40
   6aec0:	movw	r1, #0
   6aec4:	cmp	r0, r1
   6aec8:	bne	6af20 <__assert_fail@plt+0x58368>
   6aecc:	ldr	r0, [fp, #-12]
   6aed0:	add	r1, sp, #64	; 0x40
   6aed4:	mov	r2, r1
   6aed8:	str	r0, [sp, #20]
   6aedc:	mov	r0, r2
   6aee0:	ldr	r2, [sp, #20]
   6aee4:	str	r1, [sp, #16]
   6aee8:	mov	r1, r2
   6aeec:	movw	r2, #28
   6aef0:	bl	125c4 <memcpy@plt>
   6aef4:	ldr	r0, [sp, #16]
   6aef8:	add	r0, r0, #16
   6aefc:	ldr	r1, [fp, #-12]
   6af00:	add	r1, r1, #16
   6af04:	bl	61f98 <__assert_fail@plt+0x4f3e0>
   6af08:	str	r0, [fp, #-28]	; 0xffffffe4
   6af0c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6af10:	cmp	r0, #0
   6af14:	beq	6af1c <__assert_fail@plt+0x58364>
   6af18:	b	6b07c <__assert_fail@plt+0x584c4>
   6af1c:	b	6af20 <__assert_fail@plt+0x58368>
   6af20:	ldr	r0, [fp, #-36]	; 0xffffffdc
   6af24:	str	r0, [sp, #72]	; 0x48
   6af28:	ldr	r0, [fp, #-16]
   6af2c:	str	r0, [sp, #76]	; 0x4c
   6af30:	add	r0, sp, #64	; 0x40
   6af34:	add	r0, r0, #16
   6af38:	ldr	r1, [sp, #56]	; 0x38
   6af3c:	bl	61bb0 <__assert_fail@plt+0x4eff8>
   6af40:	and	r0, r0, #1
   6af44:	strb	r0, [sp, #35]	; 0x23
   6af48:	ldrb	r0, [sp, #35]	; 0x23
   6af4c:	mvn	r1, #0
   6af50:	eor	r0, r0, r1
   6af54:	tst	r0, #1
   6af58:	beq	6af68 <__assert_fail@plt+0x583b0>
   6af5c:	movw	r0, #12
   6af60:	str	r0, [fp, #-28]	; 0xffffffe4
   6af64:	b	6b07c <__assert_fail@plt+0x584c4>
   6af68:	ldr	r0, [sp, #64]	; 0x40
   6af6c:	ldr	r1, [fp, #-16]
   6af70:	add	r0, r0, r1, lsl #2
   6af74:	ldr	r0, [r0]
   6af78:	str	r0, [sp, #28]
   6af7c:	ldr	r0, [fp, #-8]
   6af80:	add	r1, sp, #64	; 0x40
   6af84:	bl	69fe4 <__assert_fail@plt+0x5742c>
   6af88:	str	r0, [fp, #-28]	; 0xffffffe4
   6af8c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6af90:	cmp	r0, #0
   6af94:	beq	6af9c <__assert_fail@plt+0x583e4>
   6af98:	b	6b07c <__assert_fail@plt+0x584c4>
   6af9c:	ldr	r0, [fp, #-12]
   6afa0:	ldr	r0, [r0, #4]
   6afa4:	movw	r1, #0
   6afa8:	cmp	r0, r1
   6afac:	beq	6afe4 <__assert_fail@plt+0x5842c>
   6afb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6afb4:	ldr	r1, [fp, #-12]
   6afb8:	ldr	r1, [r1, #4]
   6afbc:	ldr	r2, [sp, #64]	; 0x40
   6afc0:	ldr	r3, [fp, #-16]
   6afc4:	add	r3, r3, #1
   6afc8:	bl	6a1dc <__assert_fail@plt+0x57624>
   6afcc:	str	r0, [fp, #-28]	; 0xffffffe4
   6afd0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6afd4:	cmp	r0, #0
   6afd8:	beq	6afe0 <__assert_fail@plt+0x58428>
   6afdc:	b	6b07c <__assert_fail@plt+0x584c4>
   6afe0:	b	6afe4 <__assert_fail@plt+0x5842c>
   6afe4:	ldr	r0, [sp, #28]
   6afe8:	ldr	r1, [sp, #64]	; 0x40
   6afec:	ldr	r2, [fp, #-16]
   6aff0:	add	r1, r1, r2, lsl #2
   6aff4:	str	r0, [r1]
   6aff8:	add	r0, sp, #64	; 0x40
   6affc:	add	r1, r0, #16
   6b000:	add	r0, r0, #16
   6b004:	ldr	r2, [sp, #56]	; 0x38
   6b008:	str	r1, [sp, #12]
   6b00c:	mov	r1, r2
   6b010:	bl	6206c <__assert_fail@plt+0x4f4b4>
   6b014:	sub	r1, r0, #1
   6b018:	ldr	r0, [sp, #12]
   6b01c:	bl	62758 <__assert_fail@plt+0x4fba0>
   6b020:	ldr	r0, [fp, #-8]
   6b024:	ldr	r0, [r0, #116]	; 0x74
   6b028:	ldr	r1, [sp, #56]	; 0x38
   6b02c:	movw	r2, #24
   6b030:	mul	r1, r1, r2
   6b034:	add	r0, r0, r1
   6b038:	str	r0, [sp, #48]	; 0x30
   6b03c:	ldr	r0, [sp, #56]	; 0x38
   6b040:	add	r0, r0, #1
   6b044:	str	r0, [sp, #56]	; 0x38
   6b048:	ldr	r0, [sp, #48]	; 0x30
   6b04c:	add	r1, r0, #24
   6b050:	str	r1, [sp, #48]	; 0x30
   6b054:	ldrsb	r0, [r0, #20]
   6b058:	cmp	r0, #0
   6b05c:	bne	6ad78 <__assert_fail@plt+0x581c0>
   6b060:	b	6b064 <__assert_fail@plt+0x584ac>
   6b064:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6b068:	add	r0, r0, #1
   6b06c:	str	r0, [fp, #-32]	; 0xffffffe0
   6b070:	b	6acd4 <__assert_fail@plt+0x5811c>
   6b074:	movw	r0, #0
   6b078:	str	r0, [fp, #-28]	; 0xffffffe4
   6b07c:	ldr	r0, [sp, #64]	; 0x40
   6b080:	movw	r1, #0
   6b084:	cmp	r0, r1
   6b088:	beq	6b094 <__assert_fail@plt+0x584dc>
   6b08c:	ldr	r0, [sp, #88]	; 0x58
   6b090:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   6b094:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6b098:	str	r0, [fp, #-4]
   6b09c:	ldr	r0, [fp, #-4]
   6b0a0:	mov	sp, fp
   6b0a4:	pop	{fp, pc}
   6b0a8:	push	{fp, lr}
   6b0ac:	mov	fp, sp
   6b0b0:	sub	sp, sp, #56	; 0x38
   6b0b4:	str	r0, [fp, #-8]
   6b0b8:	str	r1, [fp, #-12]
   6b0bc:	str	r2, [fp, #-16]
   6b0c0:	ldr	r0, [fp, #-12]
   6b0c4:	ldr	r0, [r0, #4]
   6b0c8:	cmp	r0, #0
   6b0cc:	beq	6b0e0 <__assert_fail@plt+0x58528>
   6b0d0:	ldr	r0, [fp, #-16]
   6b0d4:	ldr	r0, [r0, #4]
   6b0d8:	cmp	r0, #0
   6b0dc:	bne	6b0ec <__assert_fail@plt+0x58534>
   6b0e0:	movw	r0, #0
   6b0e4:	str	r0, [fp, #-4]
   6b0e8:	b	6b4e4 <__assert_fail@plt+0x5892c>
   6b0ec:	ldr	r0, [fp, #-12]
   6b0f0:	ldr	r0, [r0, #4]
   6b0f4:	ldr	r1, [fp, #-16]
   6b0f8:	ldr	r1, [r1, #4]
   6b0fc:	add	r0, r0, r1
   6b100:	ldr	r1, [fp, #-8]
   6b104:	ldr	r1, [r1, #4]
   6b108:	add	r0, r0, r1
   6b10c:	ldr	r1, [fp, #-8]
   6b110:	ldr	r1, [r1]
   6b114:	cmp	r0, r1
   6b118:	ble	6b18c <__assert_fail@plt+0x585d4>
   6b11c:	ldr	r0, [fp, #-12]
   6b120:	ldr	r0, [r0, #4]
   6b124:	ldr	r1, [fp, #-16]
   6b128:	ldr	r1, [r1, #4]
   6b12c:	add	r0, r0, r1
   6b130:	ldr	r1, [fp, #-8]
   6b134:	ldr	r1, [r1]
   6b138:	add	r0, r0, r1
   6b13c:	str	r0, [sp, #12]
   6b140:	ldr	r0, [fp, #-8]
   6b144:	ldr	r0, [r0, #8]
   6b148:	ldr	r1, [sp, #12]
   6b14c:	lsl	r1, r1, #2
   6b150:	bl	538c8 <__assert_fail@plt+0x40d10>
   6b154:	str	r0, [sp, #8]
   6b158:	ldr	r0, [sp, #8]
   6b15c:	movw	r1, #0
   6b160:	cmp	r0, r1
   6b164:	bne	6b174 <__assert_fail@plt+0x585bc>
   6b168:	movw	r0, #12
   6b16c:	str	r0, [fp, #-4]
   6b170:	b	6b4e4 <__assert_fail@plt+0x5892c>
   6b174:	ldr	r0, [sp, #8]
   6b178:	ldr	r1, [fp, #-8]
   6b17c:	str	r0, [r1, #8]
   6b180:	ldr	r0, [sp, #12]
   6b184:	ldr	r1, [fp, #-8]
   6b188:	str	r0, [r1]
   6b18c:	ldr	r0, [fp, #-8]
   6b190:	ldr	r0, [r0, #4]
   6b194:	ldr	r1, [fp, #-12]
   6b198:	ldr	r1, [r1, #4]
   6b19c:	add	r0, r0, r1
   6b1a0:	ldr	r1, [fp, #-16]
   6b1a4:	ldr	r1, [r1, #4]
   6b1a8:	add	r0, r0, r1
   6b1ac:	str	r0, [sp, #16]
   6b1b0:	ldr	r0, [fp, #-12]
   6b1b4:	ldr	r0, [r0, #4]
   6b1b8:	sub	r0, r0, #1
   6b1bc:	str	r0, [fp, #-20]	; 0xffffffec
   6b1c0:	ldr	r0, [fp, #-16]
   6b1c4:	ldr	r0, [r0, #4]
   6b1c8:	sub	r0, r0, #1
   6b1cc:	str	r0, [fp, #-24]	; 0xffffffe8
   6b1d0:	ldr	r0, [fp, #-8]
   6b1d4:	ldr	r0, [r0, #4]
   6b1d8:	sub	r0, r0, #1
   6b1dc:	str	r0, [sp, #24]
   6b1e0:	ldr	r0, [fp, #-12]
   6b1e4:	ldr	r0, [r0, #8]
   6b1e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   6b1ec:	ldr	r0, [r0, r1, lsl #2]
   6b1f0:	ldr	r1, [fp, #-16]
   6b1f4:	ldr	r1, [r1, #8]
   6b1f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   6b1fc:	add	r1, r1, r2, lsl #2
   6b200:	ldr	r1, [r1]
   6b204:	cmp	r0, r1
   6b208:	bne	6b314 <__assert_fail@plt+0x5875c>
   6b20c:	b	6b210 <__assert_fail@plt+0x58658>
   6b210:	ldr	r0, [sp, #24]
   6b214:	cmp	r0, #0
   6b218:	movw	r0, #0
   6b21c:	str	r0, [sp, #4]
   6b220:	blt	6b258 <__assert_fail@plt+0x586a0>
   6b224:	ldr	r0, [fp, #-8]
   6b228:	ldr	r0, [r0, #8]
   6b22c:	ldr	r1, [sp, #24]
   6b230:	ldr	r0, [r0, r1, lsl #2]
   6b234:	ldr	r1, [fp, #-12]
   6b238:	ldr	r1, [r1, #8]
   6b23c:	ldr	r2, [fp, #-20]	; 0xffffffec
   6b240:	add	r1, r1, r2, lsl #2
   6b244:	ldr	r1, [r1]
   6b248:	cmp	r0, r1
   6b24c:	movw	r0, #0
   6b250:	movgt	r0, #1
   6b254:	str	r0, [sp, #4]
   6b258:	ldr	r0, [sp, #4]
   6b25c:	tst	r0, #1
   6b260:	beq	6b278 <__assert_fail@plt+0x586c0>
   6b264:	ldr	r0, [sp, #24]
   6b268:	mvn	r1, #0
   6b26c:	add	r0, r0, r1
   6b270:	str	r0, [sp, #24]
   6b274:	b	6b210 <__assert_fail@plt+0x58658>
   6b278:	ldr	r0, [sp, #24]
   6b27c:	cmp	r0, #0
   6b280:	blt	6b2b0 <__assert_fail@plt+0x586f8>
   6b284:	ldr	r0, [fp, #-8]
   6b288:	ldr	r0, [r0, #8]
   6b28c:	ldr	r1, [sp, #24]
   6b290:	ldr	r0, [r0, r1, lsl #2]
   6b294:	ldr	r1, [fp, #-12]
   6b298:	ldr	r1, [r1, #8]
   6b29c:	ldr	r2, [fp, #-20]	; 0xffffffec
   6b2a0:	add	r1, r1, r2, lsl #2
   6b2a4:	ldr	r1, [r1]
   6b2a8:	cmp	r0, r1
   6b2ac:	beq	6b2dc <__assert_fail@plt+0x58724>
   6b2b0:	ldr	r0, [fp, #-12]
   6b2b4:	ldr	r0, [r0, #8]
   6b2b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   6b2bc:	ldr	r0, [r0, r1, lsl #2]
   6b2c0:	ldr	r1, [fp, #-8]
   6b2c4:	ldr	r1, [r1, #8]
   6b2c8:	ldr	r2, [sp, #16]
   6b2cc:	sub	r2, r2, #1
   6b2d0:	str	r2, [sp, #16]
   6b2d4:	add	r1, r1, r2, lsl #2
   6b2d8:	str	r0, [r1]
   6b2dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   6b2e0:	mvn	r1, #0
   6b2e4:	add	r0, r0, r1
   6b2e8:	str	r0, [fp, #-20]	; 0xffffffec
   6b2ec:	cmp	r0, #0
   6b2f0:	blt	6b30c <__assert_fail@plt+0x58754>
   6b2f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6b2f8:	mvn	r1, #0
   6b2fc:	add	r0, r0, r1
   6b300:	str	r0, [fp, #-24]	; 0xffffffe8
   6b304:	cmp	r0, #0
   6b308:	bge	6b310 <__assert_fail@plt+0x58758>
   6b30c:	b	6b388 <__assert_fail@plt+0x587d0>
   6b310:	b	6b384 <__assert_fail@plt+0x587cc>
   6b314:	ldr	r0, [fp, #-12]
   6b318:	ldr	r0, [r0, #8]
   6b31c:	ldr	r1, [fp, #-20]	; 0xffffffec
   6b320:	ldr	r0, [r0, r1, lsl #2]
   6b324:	ldr	r1, [fp, #-16]
   6b328:	ldr	r1, [r1, #8]
   6b32c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   6b330:	add	r1, r1, r2, lsl #2
   6b334:	ldr	r1, [r1]
   6b338:	cmp	r0, r1
   6b33c:	bge	6b360 <__assert_fail@plt+0x587a8>
   6b340:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6b344:	mvn	r1, #0
   6b348:	add	r0, r0, r1
   6b34c:	str	r0, [fp, #-24]	; 0xffffffe8
   6b350:	cmp	r0, #0
   6b354:	bge	6b35c <__assert_fail@plt+0x587a4>
   6b358:	b	6b388 <__assert_fail@plt+0x587d0>
   6b35c:	b	6b380 <__assert_fail@plt+0x587c8>
   6b360:	ldr	r0, [fp, #-20]	; 0xffffffec
   6b364:	mvn	r1, #0
   6b368:	add	r0, r0, r1
   6b36c:	str	r0, [fp, #-20]	; 0xffffffec
   6b370:	cmp	r0, #0
   6b374:	bge	6b37c <__assert_fail@plt+0x587c4>
   6b378:	b	6b388 <__assert_fail@plt+0x587d0>
   6b37c:	b	6b380 <__assert_fail@plt+0x587c8>
   6b380:	b	6b384 <__assert_fail@plt+0x587cc>
   6b384:	b	6b1e0 <__assert_fail@plt+0x58628>
   6b388:	ldr	r0, [fp, #-8]
   6b38c:	ldr	r0, [r0, #4]
   6b390:	sub	r0, r0, #1
   6b394:	str	r0, [sp, #24]
   6b398:	ldr	r0, [fp, #-8]
   6b39c:	ldr	r0, [r0, #4]
   6b3a0:	ldr	r1, [fp, #-12]
   6b3a4:	ldr	r1, [r1, #4]
   6b3a8:	add	r0, r0, r1
   6b3ac:	ldr	r1, [fp, #-16]
   6b3b0:	ldr	r1, [r1, #4]
   6b3b4:	add	r0, r0, r1
   6b3b8:	sub	r0, r0, #1
   6b3bc:	str	r0, [sp, #28]
   6b3c0:	ldr	r0, [sp, #28]
   6b3c4:	ldr	r1, [sp, #16]
   6b3c8:	sub	r0, r0, r1
   6b3cc:	add	r0, r0, #1
   6b3d0:	str	r0, [sp, #20]
   6b3d4:	ldr	r0, [sp, #20]
   6b3d8:	ldr	r1, [fp, #-8]
   6b3dc:	ldr	r2, [r1, #4]
   6b3e0:	add	r0, r2, r0
   6b3e4:	str	r0, [r1, #4]
   6b3e8:	ldr	r0, [sp, #20]
   6b3ec:	cmp	r0, #0
   6b3f0:	ble	6b4c0 <__assert_fail@plt+0x58908>
   6b3f4:	ldr	r0, [sp, #24]
   6b3f8:	cmp	r0, #0
   6b3fc:	blt	6b4c0 <__assert_fail@plt+0x58908>
   6b400:	b	6b404 <__assert_fail@plt+0x5884c>
   6b404:	ldr	r0, [fp, #-8]
   6b408:	ldr	r0, [r0, #8]
   6b40c:	ldr	r1, [sp, #28]
   6b410:	ldr	r1, [r0, r1, lsl #2]
   6b414:	ldr	r2, [sp, #24]
   6b418:	add	r0, r0, r2, lsl #2
   6b41c:	ldr	r0, [r0]
   6b420:	cmp	r1, r0
   6b424:	ble	6b478 <__assert_fail@plt+0x588c0>
   6b428:	ldr	r0, [fp, #-8]
   6b42c:	ldr	r0, [r0, #8]
   6b430:	ldr	r1, [sp, #28]
   6b434:	sub	r2, r1, #1
   6b438:	str	r2, [sp, #28]
   6b43c:	ldr	r0, [r0, r1, lsl #2]
   6b440:	ldr	r1, [fp, #-8]
   6b444:	ldr	r1, [r1, #8]
   6b448:	ldr	r2, [sp, #24]
   6b44c:	ldr	r3, [sp, #20]
   6b450:	sub	ip, r3, #1
   6b454:	str	ip, [sp, #20]
   6b458:	add	r2, r2, r3
   6b45c:	add	r1, r1, r2, lsl #2
   6b460:	str	r0, [r1]
   6b464:	ldr	r0, [sp, #20]
   6b468:	cmp	r0, #0
   6b46c:	bne	6b474 <__assert_fail@plt+0x588bc>
   6b470:	b	6b4bc <__assert_fail@plt+0x58904>
   6b474:	b	6b4b8 <__assert_fail@plt+0x58900>
   6b478:	ldr	r0, [fp, #-8]
   6b47c:	ldr	r0, [r0, #8]
   6b480:	ldr	r1, [sp, #24]
   6b484:	ldr	r2, [r0, r1, lsl #2]
   6b488:	ldr	r3, [sp, #20]
   6b48c:	add	r1, r1, r3
   6b490:	add	r0, r0, r1, lsl #2
   6b494:	str	r2, [r0]
   6b498:	ldr	r0, [sp, #24]
   6b49c:	mvn	r1, #0
   6b4a0:	add	r0, r0, r1
   6b4a4:	str	r0, [sp, #24]
   6b4a8:	cmp	r0, #0
   6b4ac:	bge	6b4b4 <__assert_fail@plt+0x588fc>
   6b4b0:	b	6b4bc <__assert_fail@plt+0x58904>
   6b4b4:	b	6b4b8 <__assert_fail@plt+0x58900>
   6b4b8:	b	6b404 <__assert_fail@plt+0x5884c>
   6b4bc:	b	6b4c0 <__assert_fail@plt+0x58908>
   6b4c0:	ldr	r0, [fp, #-8]
   6b4c4:	ldr	r0, [r0, #8]
   6b4c8:	ldr	r1, [sp, #16]
   6b4cc:	add	r1, r0, r1, lsl #2
   6b4d0:	ldr	r2, [sp, #20]
   6b4d4:	lsl	r2, r2, #2
   6b4d8:	bl	125c4 <memcpy@plt>
   6b4dc:	movw	r0, #0
   6b4e0:	str	r0, [fp, #-4]
   6b4e4:	ldr	r0, [fp, #-4]
   6b4e8:	mov	sp, fp
   6b4ec:	pop	{fp, pc}
   6b4f0:	push	{fp, lr}
   6b4f4:	mov	fp, sp
   6b4f8:	sub	sp, sp, #72	; 0x48
   6b4fc:	str	r0, [fp, #-8]
   6b500:	str	r1, [fp, #-12]
   6b504:	str	r2, [fp, #-16]
   6b508:	str	r3, [fp, #-20]	; 0xffffffec
   6b50c:	ldr	r0, [fp, #-8]
   6b510:	ldr	r0, [r0, #28]
   6b514:	ldr	r1, [fp, #-12]
   6b518:	movw	r2, #12
   6b51c:	mul	r1, r1, r2
   6b520:	add	r0, r0, r1
   6b524:	str	r0, [fp, #-32]	; 0xffffffe0
   6b528:	add	r0, sp, #28
   6b52c:	movw	r1, #0
   6b530:	and	r1, r1, #255	; 0xff
   6b534:	bl	12900 <memset@plt>
   6b538:	movw	r0, #0
   6b53c:	str	r0, [fp, #-24]	; 0xffffffe8
   6b540:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6b544:	ldr	r1, [fp, #-32]	; 0xffffffe0
   6b548:	ldr	r1, [r1, #4]
   6b54c:	cmp	r0, r1
   6b550:	bge	6b6e4 <__assert_fail@plt+0x58b2c>
   6b554:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6b558:	ldr	r0, [r0, #8]
   6b55c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   6b560:	add	r0, r0, r1, lsl #2
   6b564:	ldr	r0, [r0]
   6b568:	str	r0, [sp, #24]
   6b56c:	ldr	r0, [sp, #24]
   6b570:	ldr	r1, [fp, #-12]
   6b574:	cmp	r0, r1
   6b578:	bne	6b580 <__assert_fail@plt+0x589c8>
   6b57c:	b	6b6d4 <__assert_fail@plt+0x58b1c>
   6b580:	ldr	r0, [fp, #-8]
   6b584:	ldr	r0, [r0]
   6b588:	ldr	r1, [sp, #24]
   6b58c:	add	r0, r0, r1, lsl #3
   6b590:	ldr	r0, [r0, #4]
   6b594:	and	r0, r0, #255	; 0xff
   6b598:	and	r0, r0, #8
   6b59c:	cmp	r0, #0
   6b5a0:	beq	6b6d0 <__assert_fail@plt+0x58b18>
   6b5a4:	ldr	r0, [fp, #-8]
   6b5a8:	ldr	r0, [r0, #20]
   6b5ac:	ldr	r1, [sp, #24]
   6b5b0:	movw	r2, #12
   6b5b4:	mul	r1, r1, r2
   6b5b8:	add	r0, r0, r1
   6b5bc:	ldr	r0, [r0, #8]
   6b5c0:	ldr	r0, [r0]
   6b5c4:	str	r0, [sp, #20]
   6b5c8:	ldr	r0, [fp, #-8]
   6b5cc:	ldr	r0, [r0, #20]
   6b5d0:	ldr	r1, [sp, #24]
   6b5d4:	mul	r1, r1, r2
   6b5d8:	add	r0, r0, r1
   6b5dc:	ldr	r0, [r0, #4]
   6b5e0:	cmp	r0, #1
   6b5e4:	ble	6b610 <__assert_fail@plt+0x58a58>
   6b5e8:	ldr	r0, [fp, #-8]
   6b5ec:	ldr	r0, [r0, #20]
   6b5f0:	ldr	r1, [sp, #24]
   6b5f4:	movw	r2, #12
   6b5f8:	mul	r1, r1, r2
   6b5fc:	add	r0, r0, r1
   6b600:	ldr	r0, [r0, #8]
   6b604:	ldr	r0, [r0, #4]
   6b608:	str	r0, [sp, #4]
   6b60c:	b	6b61c <__assert_fail@plt+0x58a64>
   6b610:	mvn	r0, #0
   6b614:	str	r0, [sp, #4]
   6b618:	b	6b61c <__assert_fail@plt+0x58a64>
   6b61c:	ldr	r0, [sp, #4]
   6b620:	str	r0, [sp, #16]
   6b624:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6b628:	ldr	r1, [sp, #20]
   6b62c:	bl	6206c <__assert_fail@plt+0x4f4b4>
   6b630:	cmp	r0, #0
   6b634:	bne	6b64c <__assert_fail@plt+0x58a94>
   6b638:	ldr	r0, [fp, #-16]
   6b63c:	ldr	r1, [sp, #20]
   6b640:	bl	6206c <__assert_fail@plt+0x4f4b4>
   6b644:	cmp	r0, #0
   6b648:	bne	6b680 <__assert_fail@plt+0x58ac8>
   6b64c:	ldr	r0, [sp, #16]
   6b650:	cmp	r0, #0
   6b654:	ble	6b6cc <__assert_fail@plt+0x58b14>
   6b658:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6b65c:	ldr	r1, [sp, #16]
   6b660:	bl	6206c <__assert_fail@plt+0x4f4b4>
   6b664:	cmp	r0, #0
   6b668:	bne	6b6cc <__assert_fail@plt+0x58b14>
   6b66c:	ldr	r0, [fp, #-16]
   6b670:	ldr	r1, [sp, #16]
   6b674:	bl	6206c <__assert_fail@plt+0x4f4b4>
   6b678:	cmp	r0, #0
   6b67c:	beq	6b6cc <__assert_fail@plt+0x58b14>
   6b680:	ldr	r1, [fp, #-20]	; 0xffffffec
   6b684:	ldr	r0, [fp, #-8]
   6b688:	ldr	r0, [r0, #28]
   6b68c:	ldr	r2, [sp, #24]
   6b690:	movw	r3, #12
   6b694:	mul	r2, r2, r3
   6b698:	add	r2, r0, r2
   6b69c:	add	r0, sp, #28
   6b6a0:	bl	6b0a8 <__assert_fail@plt+0x584f0>
   6b6a4:	str	r0, [fp, #-28]	; 0xffffffe4
   6b6a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6b6ac:	cmp	r0, #0
   6b6b0:	beq	6b6c8 <__assert_fail@plt+0x58b10>
   6b6b4:	ldr	r0, [sp, #36]	; 0x24
   6b6b8:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   6b6bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6b6c0:	str	r0, [fp, #-4]
   6b6c4:	b	6b770 <__assert_fail@plt+0x58bb8>
   6b6c8:	b	6b6cc <__assert_fail@plt+0x58b14>
   6b6cc:	b	6b6d0 <__assert_fail@plt+0x58b18>
   6b6d0:	b	6b6d4 <__assert_fail@plt+0x58b1c>
   6b6d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6b6d8:	add	r0, r0, #1
   6b6dc:	str	r0, [fp, #-24]	; 0xffffffe8
   6b6e0:	b	6b540 <__assert_fail@plt+0x58988>
   6b6e4:	movw	r0, #0
   6b6e8:	str	r0, [fp, #-24]	; 0xffffffe8
   6b6ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6b6f0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   6b6f4:	ldr	r1, [r1, #4]
   6b6f8:	cmp	r0, r1
   6b6fc:	bge	6b760 <__assert_fail@plt+0x58ba8>
   6b700:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6b704:	ldr	r0, [r0, #8]
   6b708:	ldr	r1, [fp, #-24]	; 0xffffffe8
   6b70c:	add	r0, r0, r1, lsl #2
   6b710:	ldr	r0, [r0]
   6b714:	str	r0, [sp, #12]
   6b718:	ldr	r1, [sp, #12]
   6b71c:	add	r0, sp, #28
   6b720:	bl	6206c <__assert_fail@plt+0x4f4b4>
   6b724:	cmp	r0, #0
   6b728:	bne	6b74c <__assert_fail@plt+0x58b94>
   6b72c:	ldr	r0, [fp, #-16]
   6b730:	ldr	r1, [sp, #12]
   6b734:	bl	6206c <__assert_fail@plt+0x4f4b4>
   6b738:	sub	r0, r0, #1
   6b73c:	str	r0, [sp, #8]
   6b740:	ldr	r0, [fp, #-16]
   6b744:	ldr	r1, [sp, #8]
   6b748:	bl	62758 <__assert_fail@plt+0x4fba0>
   6b74c:	b	6b750 <__assert_fail@plt+0x58b98>
   6b750:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6b754:	add	r0, r0, #1
   6b758:	str	r0, [fp, #-24]	; 0xffffffe8
   6b75c:	b	6b6ec <__assert_fail@plt+0x58b34>
   6b760:	ldr	r0, [sp, #36]	; 0x24
   6b764:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   6b768:	movw	r0, #0
   6b76c:	str	r0, [fp, #-4]
   6b770:	ldr	r0, [fp, #-4]
   6b774:	mov	sp, fp
   6b778:	pop	{fp, pc}
   6b77c:	push	{r4, sl, fp, lr}
   6b780:	add	fp, sp, #8
   6b784:	sub	sp, sp, #72	; 0x48
   6b788:	ldr	ip, [fp, #12]
   6b78c:	ldr	lr, [fp, #8]
   6b790:	str	r0, [fp, #-16]
   6b794:	str	r1, [fp, #-20]	; 0xffffffec
   6b798:	str	r2, [fp, #-24]	; 0xffffffe8
   6b79c:	str	r3, [fp, #-28]	; 0xffffffe4
   6b7a0:	ldr	r0, [fp, #-16]
   6b7a4:	ldr	r0, [r0, #84]	; 0x54
   6b7a8:	str	r0, [fp, #-32]	; 0xffffffe0
   6b7ac:	ldr	r0, [fp, #-16]
   6b7b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6b7b4:	str	ip, [sp, #16]
   6b7b8:	str	lr, [sp, #12]
   6b7bc:	bl	664d8 <__assert_fail@plt+0x53920>
   6b7c0:	str	r0, [sp, #32]
   6b7c4:	ldr	r0, [fp, #-16]
   6b7c8:	ldr	r1, [fp, #12]
   6b7cc:	bl	664d8 <__assert_fail@plt+0x53920>
   6b7d0:	str	r0, [sp, #28]
   6b7d4:	movw	r0, #0
   6b7d8:	str	r0, [fp, #-36]	; 0xffffffdc
   6b7dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   6b7e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   6b7e4:	ldr	r1, [r1, #4]
   6b7e8:	cmp	r0, r1
   6b7ec:	bge	6b8d0 <__assert_fail@plt+0x58d18>
   6b7f0:	ldr	r0, [fp, #-16]
   6b7f4:	ldr	r0, [r0, #116]	; 0x74
   6b7f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   6b7fc:	ldr	r1, [r1, #8]
   6b800:	ldr	r2, [fp, #-36]	; 0xffffffdc
   6b804:	ldr	r1, [r1, r2, lsl #2]
   6b808:	add	r1, r1, r1, lsl #1
   6b80c:	add	r0, r0, r1, lsl #3
   6b810:	str	r0, [sp, #20]
   6b814:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6b818:	ldr	r0, [r0]
   6b81c:	ldr	r1, [sp, #20]
   6b820:	ldr	r1, [r1]
   6b824:	ldr	r0, [r0, r1, lsl #3]
   6b828:	str	r0, [sp, #24]
   6b82c:	ldr	r0, [fp, #-16]
   6b830:	ldr	r1, [fp, #-20]	; 0xffffffec
   6b834:	ldr	r1, [r1, #8]
   6b838:	ldr	r2, [fp, #-36]	; 0xffffffdc
   6b83c:	ldr	r1, [r1, r2, lsl #2]
   6b840:	ldr	r2, [sp, #24]
   6b844:	ldr	r3, [fp, #-24]	; 0xffffffe8
   6b848:	ldr	ip, [fp, #-28]	; 0xffffffe4
   6b84c:	ldr	lr, [sp, #32]
   6b850:	mov	r4, sp
   6b854:	str	lr, [r4, #4]
   6b858:	str	ip, [r4]
   6b85c:	bl	6b8ec <__assert_fail@plt+0x58d34>
   6b860:	str	r0, [sp, #36]	; 0x24
   6b864:	ldr	r0, [fp, #-16]
   6b868:	ldr	r1, [fp, #-20]	; 0xffffffec
   6b86c:	ldr	r1, [r1, #8]
   6b870:	ldr	r2, [fp, #-36]	; 0xffffffdc
   6b874:	add	r1, r1, r2, lsl #2
   6b878:	ldr	r1, [r1]
   6b87c:	ldr	r2, [sp, #24]
   6b880:	ldr	r3, [fp, #8]
   6b884:	ldr	ip, [fp, #12]
   6b888:	ldr	lr, [sp, #28]
   6b88c:	str	ip, [sp]
   6b890:	str	lr, [sp, #4]
   6b894:	bl	6b8ec <__assert_fail@plt+0x58d34>
   6b898:	str	r0, [sp, #40]	; 0x28
   6b89c:	ldr	r0, [sp, #40]	; 0x28
   6b8a0:	ldr	r1, [sp, #36]	; 0x24
   6b8a4:	cmp	r0, r1
   6b8a8:	bne	6b8b0 <__assert_fail@plt+0x58cf8>
   6b8ac:	b	6b8c0 <__assert_fail@plt+0x58d08>
   6b8b0:	movw	r0, #1
   6b8b4:	and	r0, r0, #1
   6b8b8:	strb	r0, [fp, #-9]
   6b8bc:	b	6b8dc <__assert_fail@plt+0x58d24>
   6b8c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   6b8c4:	add	r0, r0, #1
   6b8c8:	str	r0, [fp, #-36]	; 0xffffffdc
   6b8cc:	b	6b7dc <__assert_fail@plt+0x58c24>
   6b8d0:	movw	r0, #0
   6b8d4:	and	r0, r0, #1
   6b8d8:	strb	r0, [fp, #-9]
   6b8dc:	ldrb	r0, [fp, #-9]
   6b8e0:	and	r0, r0, #1
   6b8e4:	sub	sp, fp, #8
   6b8e8:	pop	{r4, sl, fp, pc}
   6b8ec:	push	{fp, lr}
   6b8f0:	mov	fp, sp
   6b8f4:	sub	sp, sp, #32
   6b8f8:	ldr	ip, [fp, #12]
   6b8fc:	ldr	lr, [fp, #8]
   6b900:	str	r0, [fp, #-8]
   6b904:	str	r1, [fp, #-12]
   6b908:	str	r2, [sp, #16]
   6b90c:	str	r3, [sp, #12]
   6b910:	ldr	r0, [fp, #-8]
   6b914:	ldr	r0, [r0, #116]	; 0x74
   6b918:	ldr	r1, [fp, #-12]
   6b91c:	movw	r2, #24
   6b920:	mul	r1, r1, r2
   6b924:	add	r0, r0, r1
   6b928:	str	r0, [sp, #8]
   6b92c:	ldr	r0, [fp, #8]
   6b930:	ldr	r1, [sp, #8]
   6b934:	ldr	r1, [r1, #8]
   6b938:	cmp	r0, r1
   6b93c:	bge	6b94c <__assert_fail@plt+0x58d94>
   6b940:	mvn	r0, #0
   6b944:	str	r0, [fp, #-4]
   6b948:	b	6b9f0 <__assert_fail@plt+0x58e38>
   6b94c:	ldr	r0, [sp, #8]
   6b950:	ldr	r0, [r0, #12]
   6b954:	ldr	r1, [fp, #8]
   6b958:	cmp	r0, r1
   6b95c:	bge	6b96c <__assert_fail@plt+0x58db4>
   6b960:	movw	r0, #1
   6b964:	str	r0, [fp, #-4]
   6b968:	b	6b9f0 <__assert_fail@plt+0x58e38>
   6b96c:	ldr	r0, [fp, #8]
   6b970:	ldr	r1, [sp, #8]
   6b974:	ldr	r1, [r1, #8]
   6b978:	cmp	r0, r1
   6b97c:	movw	r0, #0
   6b980:	moveq	r0, #1
   6b984:	and	r0, r0, #1
   6b988:	str	r0, [sp, #4]
   6b98c:	ldr	r0, [fp, #8]
   6b990:	ldr	r1, [sp, #8]
   6b994:	ldr	r1, [r1, #12]
   6b998:	cmp	r0, r1
   6b99c:	movw	r0, #0
   6b9a0:	moveq	r0, #1
   6b9a4:	and	r0, r0, #1
   6b9a8:	lsl	r0, r0, #1
   6b9ac:	ldr	r1, [sp, #4]
   6b9b0:	orr	r0, r1, r0
   6b9b4:	str	r0, [sp, #4]
   6b9b8:	ldr	r0, [sp, #4]
   6b9bc:	cmp	r0, #0
   6b9c0:	bne	6b9d0 <__assert_fail@plt+0x58e18>
   6b9c4:	movw	r0, #0
   6b9c8:	str	r0, [fp, #-4]
   6b9cc:	b	6b9f0 <__assert_fail@plt+0x58e38>
   6b9d0:	ldr	r0, [fp, #-8]
   6b9d4:	ldr	r1, [sp, #4]
   6b9d8:	ldr	r2, [sp, #16]
   6b9dc:	ldr	r3, [sp, #12]
   6b9e0:	ldr	ip, [fp, #12]
   6b9e4:	str	ip, [sp]
   6b9e8:	bl	6b9fc <__assert_fail@plt+0x58e44>
   6b9ec:	str	r0, [fp, #-4]
   6b9f0:	ldr	r0, [fp, #-4]
   6b9f4:	mov	sp, fp
   6b9f8:	pop	{fp, pc}
   6b9fc:	push	{fp, lr}
   6ba00:	mov	fp, sp
   6ba04:	sub	sp, sp, #56	; 0x38
   6ba08:	ldr	ip, [fp, #8]
   6ba0c:	str	r0, [fp, #-8]
   6ba10:	str	r1, [fp, #-12]
   6ba14:	str	r2, [fp, #-16]
   6ba18:	str	r3, [fp, #-20]	; 0xffffffec
   6ba1c:	ldr	r0, [fp, #-8]
   6ba20:	ldr	r0, [r0, #84]	; 0x54
   6ba24:	str	r0, [fp, #-24]	; 0xffffffe8
   6ba28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6ba2c:	ldr	r0, [r0, #24]
   6ba30:	ldr	r1, [fp, #-20]	; 0xffffffec
   6ba34:	movw	r2, #12
   6ba38:	mul	r1, r1, r2
   6ba3c:	add	r0, r0, r1
   6ba40:	str	r0, [sp, #28]
   6ba44:	movw	r0, #0
   6ba48:	str	r0, [sp, #24]
   6ba4c:	ldr	r0, [sp, #24]
   6ba50:	ldr	r1, [sp, #28]
   6ba54:	ldr	r1, [r1, #4]
   6ba58:	cmp	r0, r1
   6ba5c:	bge	6bcd4 <__assert_fail@plt+0x5911c>
   6ba60:	ldr	r0, [sp, #28]
   6ba64:	ldr	r0, [r0, #8]
   6ba68:	ldr	r1, [sp, #24]
   6ba6c:	ldr	r0, [r0, r1, lsl #2]
   6ba70:	str	r0, [sp, #20]
   6ba74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6ba78:	ldr	r0, [r0]
   6ba7c:	ldr	r1, [sp, #20]
   6ba80:	add	r0, r0, r1, lsl #3
   6ba84:	ldrb	r0, [r0, #4]
   6ba88:	mov	r1, r0
   6ba8c:	cmp	r0, #4
   6ba90:	str	r1, [sp, #4]
   6ba94:	beq	6babc <__assert_fail@plt+0x58f04>
   6ba98:	b	6ba9c <__assert_fail@plt+0x58ee4>
   6ba9c:	ldr	r0, [sp, #4]
   6baa0:	cmp	r0, #8
   6baa4:	beq	6bc3c <__assert_fail@plt+0x59084>
   6baa8:	b	6baac <__assert_fail@plt+0x58ef4>
   6baac:	ldr	r0, [sp, #4]
   6bab0:	cmp	r0, #9
   6bab4:	beq	6bc7c <__assert_fail@plt+0x590c4>
   6bab8:	b	6bcbc <__assert_fail@plt+0x59104>
   6babc:	ldr	r0, [fp, #8]
   6bac0:	cmn	r0, #1
   6bac4:	beq	6bc38 <__assert_fail@plt+0x59080>
   6bac8:	ldr	r0, [fp, #-8]
   6bacc:	ldr	r0, [r0, #116]	; 0x74
   6bad0:	ldr	r1, [fp, #8]
   6bad4:	movw	r2, #24
   6bad8:	mul	r1, r1, r2
   6badc:	add	r0, r0, r1
   6bae0:	str	r0, [sp, #16]
   6bae4:	ldr	r0, [sp, #16]
   6bae8:	ldr	r0, [r0]
   6baec:	ldr	r1, [sp, #20]
   6baf0:	cmp	r0, r1
   6baf4:	beq	6bafc <__assert_fail@plt+0x58f44>
   6baf8:	b	6bc1c <__assert_fail@plt+0x59064>
   6bafc:	ldr	r0, [fp, #-16]
   6bb00:	cmp	r0, #32
   6bb04:	bge	6bb2c <__assert_fail@plt+0x58f74>
   6bb08:	ldr	r0, [sp, #16]
   6bb0c:	ldr	r0, [r0, #16]
   6bb10:	ldr	r1, [fp, #-16]
   6bb14:	movw	r2, #1
   6bb18:	lsl	r1, r2, r1
   6bb1c:	and	r0, r0, r1
   6bb20:	cmp	r0, #0
   6bb24:	bne	6bb2c <__assert_fail@plt+0x58f74>
   6bb28:	b	6bc1c <__assert_fail@plt+0x59064>
   6bb2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6bb30:	ldr	r0, [r0, #20]
   6bb34:	ldr	r1, [sp, #20]
   6bb38:	movw	r2, #12
   6bb3c:	mul	r1, r1, r2
   6bb40:	add	r0, r0, r1
   6bb44:	ldr	r0, [r0, #8]
   6bb48:	ldr	r0, [r0]
   6bb4c:	str	r0, [sp, #12]
   6bb50:	ldr	r0, [sp, #12]
   6bb54:	ldr	r1, [fp, #-20]	; 0xffffffec
   6bb58:	cmp	r0, r1
   6bb5c:	bne	6bb88 <__assert_fail@plt+0x58fd0>
   6bb60:	ldr	r0, [fp, #-12]
   6bb64:	and	r0, r0, #1
   6bb68:	cmp	r0, #0
   6bb6c:	beq	6bb7c <__assert_fail@plt+0x58fc4>
   6bb70:	mvn	r0, #0
   6bb74:	str	r0, [fp, #-4]
   6bb78:	b	6bcf8 <__assert_fail@plt+0x59140>
   6bb7c:	movw	r0, #0
   6bb80:	str	r0, [fp, #-4]
   6bb84:	b	6bcf8 <__assert_fail@plt+0x59140>
   6bb88:	ldr	r0, [fp, #-8]
   6bb8c:	ldr	r1, [fp, #-12]
   6bb90:	ldr	r2, [fp, #-16]
   6bb94:	ldr	r3, [sp, #12]
   6bb98:	ldr	ip, [fp, #8]
   6bb9c:	str	ip, [sp]
   6bba0:	bl	6b9fc <__assert_fail@plt+0x58e44>
   6bba4:	str	r0, [sp, #8]
   6bba8:	ldr	r0, [sp, #8]
   6bbac:	cmn	r0, #1
   6bbb0:	bne	6bbc0 <__assert_fail@plt+0x59008>
   6bbb4:	mvn	r0, #0
   6bbb8:	str	r0, [fp, #-4]
   6bbbc:	b	6bcf8 <__assert_fail@plt+0x59140>
   6bbc0:	ldr	r0, [sp, #8]
   6bbc4:	cmp	r0, #0
   6bbc8:	bne	6bbe8 <__assert_fail@plt+0x59030>
   6bbcc:	ldr	r0, [fp, #-12]
   6bbd0:	and	r0, r0, #2
   6bbd4:	cmp	r0, #0
   6bbd8:	beq	6bbe8 <__assert_fail@plt+0x59030>
   6bbdc:	movw	r0, #0
   6bbe0:	str	r0, [fp, #-4]
   6bbe4:	b	6bcf8 <__assert_fail@plt+0x59140>
   6bbe8:	ldr	r0, [fp, #-16]
   6bbec:	cmp	r0, #32
   6bbf0:	bge	6bc18 <__assert_fail@plt+0x59060>
   6bbf4:	ldr	r0, [fp, #-16]
   6bbf8:	movw	r1, #1
   6bbfc:	lsl	r0, r1, r0
   6bc00:	mvn	r1, #0
   6bc04:	eor	r0, r0, r1
   6bc08:	ldr	r1, [sp, #16]
   6bc0c:	ldr	r2, [r1, #16]
   6bc10:	and	r0, r2, r0
   6bc14:	str	r0, [r1, #16]
   6bc18:	b	6bc1c <__assert_fail@plt+0x59064>
   6bc1c:	ldr	r0, [sp, #16]
   6bc20:	add	r1, r0, #24
   6bc24:	str	r1, [sp, #16]
   6bc28:	ldrsb	r0, [r0, #20]
   6bc2c:	cmp	r0, #0
   6bc30:	bne	6bae4 <__assert_fail@plt+0x58f2c>
   6bc34:	b	6bc38 <__assert_fail@plt+0x59080>
   6bc38:	b	6bcc0 <__assert_fail@plt+0x59108>
   6bc3c:	ldr	r0, [fp, #-12]
   6bc40:	and	r0, r0, #1
   6bc44:	cmp	r0, #0
   6bc48:	beq	6bc78 <__assert_fail@plt+0x590c0>
   6bc4c:	ldr	r0, [fp, #-16]
   6bc50:	ldr	r1, [fp, #-24]	; 0xffffffe8
   6bc54:	ldr	r1, [r1]
   6bc58:	ldr	r2, [sp, #20]
   6bc5c:	add	r1, r1, r2, lsl #3
   6bc60:	ldr	r1, [r1]
   6bc64:	cmp	r0, r1
   6bc68:	bne	6bc78 <__assert_fail@plt+0x590c0>
   6bc6c:	mvn	r0, #0
   6bc70:	str	r0, [fp, #-4]
   6bc74:	b	6bcf8 <__assert_fail@plt+0x59140>
   6bc78:	b	6bcc0 <__assert_fail@plt+0x59108>
   6bc7c:	ldr	r0, [fp, #-12]
   6bc80:	and	r0, r0, #2
   6bc84:	cmp	r0, #0
   6bc88:	beq	6bcb8 <__assert_fail@plt+0x59100>
   6bc8c:	ldr	r0, [fp, #-16]
   6bc90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   6bc94:	ldr	r1, [r1]
   6bc98:	ldr	r2, [sp, #20]
   6bc9c:	add	r1, r1, r2, lsl #3
   6bca0:	ldr	r1, [r1]
   6bca4:	cmp	r0, r1
   6bca8:	bne	6bcb8 <__assert_fail@plt+0x59100>
   6bcac:	movw	r0, #0
   6bcb0:	str	r0, [fp, #-4]
   6bcb4:	b	6bcf8 <__assert_fail@plt+0x59140>
   6bcb8:	b	6bcc0 <__assert_fail@plt+0x59108>
   6bcbc:	b	6bcc0 <__assert_fail@plt+0x59108>
   6bcc0:	b	6bcc4 <__assert_fail@plt+0x5910c>
   6bcc4:	ldr	r0, [sp, #24]
   6bcc8:	add	r0, r0, #1
   6bccc:	str	r0, [sp, #24]
   6bcd0:	b	6ba4c <__assert_fail@plt+0x58e94>
   6bcd4:	ldr	r0, [fp, #-12]
   6bcd8:	and	r0, r0, #2
   6bcdc:	cmp	r0, #0
   6bce0:	movw	r0, #0
   6bce4:	movne	r0, #1
   6bce8:	tst	r0, #1
   6bcec:	movw	r0, #1
   6bcf0:	moveq	r0, #0
   6bcf4:	str	r0, [fp, #-4]
   6bcf8:	ldr	r0, [fp, #-4]
   6bcfc:	mov	sp, fp
   6bd00:	pop	{fp, pc}
   6bd04:	push	{fp, lr}
   6bd08:	mov	fp, sp
   6bd0c:	sub	sp, sp, #32
   6bd10:	ldr	ip, [fp, #8]
   6bd14:	str	r0, [fp, #-4]
   6bd18:	str	r1, [fp, #-8]
   6bd1c:	str	r2, [fp, #-12]
   6bd20:	str	r3, [sp, #16]
   6bd24:	ldr	r0, [fp, #-4]
   6bd28:	ldr	r0, [r0, #84]	; 0x54
   6bd2c:	str	r0, [sp, #12]
   6bd30:	ldr	r0, [sp, #12]
   6bd34:	ldr	r1, [fp, #-12]
   6bd38:	ldr	r2, [fp, #-4]
   6bd3c:	ldr	r3, [sp, #16]
   6bd40:	str	ip, [sp, #4]
   6bd44:	bl	680c4 <__assert_fail@plt+0x5550c>
   6bd48:	str	r0, [sp, #8]
   6bd4c:	ldr	r0, [sp, #8]
   6bd50:	cmp	r0, #0
   6bd54:	ble	6bddc <__assert_fail@plt+0x59224>
   6bd58:	ldr	r0, [sp, #16]
   6bd5c:	ldr	r1, [sp, #8]
   6bd60:	add	r0, r0, r1
   6bd64:	ldr	r1, [fp, #8]
   6bd68:	cmp	r0, r1
   6bd6c:	bgt	6bddc <__assert_fail@plt+0x59224>
   6bd70:	ldr	r0, [fp, #-8]
   6bd74:	ldr	r0, [r0]
   6bd78:	ldr	r1, [sp, #16]
   6bd7c:	ldr	r2, [sp, #8]
   6bd80:	add	r1, r1, r2
   6bd84:	add	r0, r0, r1, lsl #2
   6bd88:	ldr	r0, [r0]
   6bd8c:	movw	r1, #0
   6bd90:	cmp	r0, r1
   6bd94:	beq	6bdd4 <__assert_fail@plt+0x5921c>
   6bd98:	ldr	r0, [fp, #-8]
   6bd9c:	ldr	r0, [r0]
   6bda0:	ldr	r1, [sp, #16]
   6bda4:	ldr	r2, [sp, #8]
   6bda8:	add	r1, r1, r2
   6bdac:	ldr	r0, [r0, r1, lsl #2]
   6bdb0:	add	r0, r0, #4
   6bdb4:	ldr	r1, [sp, #12]
   6bdb8:	ldr	r1, [r1, #12]
   6bdbc:	ldr	r2, [fp, #-12]
   6bdc0:	add	r1, r1, r2, lsl #2
   6bdc4:	ldr	r1, [r1]
   6bdc8:	bl	6206c <__assert_fail@plt+0x4f4b4>
   6bdcc:	cmp	r0, #0
   6bdd0:	bne	6bddc <__assert_fail@plt+0x59224>
   6bdd4:	movw	r0, #0
   6bdd8:	str	r0, [sp, #8]
   6bddc:	ldr	r0, [sp, #8]
   6bde0:	mov	sp, fp
   6bde4:	pop	{fp, pc}
   6bde8:	sub	sp, sp, #4
   6bdec:	str	r0, [sp]
   6bdf0:	ldr	r0, [sp]
   6bdf4:	movw	r1, #0
   6bdf8:	str	r1, [r0]
   6bdfc:	ldr	r0, [sp]
   6be00:	movw	r1, #16
   6be04:	str	r1, [r0, #4]
   6be08:	ldr	r0, [sp]
   6be0c:	add	r0, r0, #12
   6be10:	ldr	r1, [sp]
   6be14:	str	r0, [r1, #8]
   6be18:	add	sp, sp, #4
   6be1c:	bx	lr
   6be20:	push	{fp, lr}
   6be24:	mov	fp, sp
   6be28:	sub	sp, sp, #16
   6be2c:	str	r0, [sp, #8]
   6be30:	str	r1, [sp, #4]
   6be34:	ldr	r0, [sp, #4]
   6be38:	ldr	r1, [sp, #8]
   6be3c:	ldr	r1, [r1]
   6be40:	cmp	r0, r1
   6be44:	bls	6be94 <__assert_fail@plt+0x592dc>
   6be48:	ldr	r0, [sp, #8]
   6be4c:	ldr	r1, [sp, #4]
   6be50:	ldr	r2, [sp, #8]
   6be54:	add	r2, r2, #12
   6be58:	movw	r3, #8
   6be5c:	bl	6f6a0 <__assert_fail@plt+0x5cae8>
   6be60:	and	r0, r0, #1
   6be64:	strb	r0, [sp, #3]
   6be68:	ldrb	r0, [sp, #3]
   6be6c:	mvn	r1, #0
   6be70:	eor	r0, r0, r1
   6be74:	tst	r0, #1
   6be78:	beq	6be84 <__assert_fail@plt+0x592cc>
   6be7c:	ldr	r0, [sp, #8]
   6be80:	bl	6c87c <__assert_fail@plt+0x59cc4>
   6be84:	ldrb	r0, [sp, #3]
   6be88:	and	r0, r0, #1
   6be8c:	strb	r0, [fp, #-1]
   6be90:	b	6bed0 <__assert_fail@plt+0x59318>
   6be94:	ldr	r0, [sp, #8]
   6be98:	ldr	r0, [r0, #8]
   6be9c:	ldr	r1, [sp, #4]
   6bea0:	add	r0, r0, r1, lsl #3
   6bea4:	ldr	r1, [sp, #8]
   6bea8:	ldr	r1, [r1]
   6beac:	ldr	r2, [sp, #4]
   6beb0:	sub	r1, r1, r2
   6beb4:	bl	6c8d8 <__assert_fail@plt+0x59d20>
   6beb8:	ldr	r0, [sp, #4]
   6bebc:	ldr	r1, [sp, #8]
   6bec0:	str	r0, [r1]
   6bec4:	movw	r0, #1
   6bec8:	and	r0, r0, #1
   6becc:	strb	r0, [fp, #-1]
   6bed0:	ldrb	r0, [fp, #-1]
   6bed4:	and	r0, r0, #1
   6bed8:	mov	sp, fp
   6bedc:	pop	{fp, pc}
   6bee0:	push	{fp, lr}
   6bee4:	mov	fp, sp
   6bee8:	sub	sp, sp, #8
   6beec:	str	r0, [sp, #4]
   6bef0:	ldr	r0, [sp, #4]
   6bef4:	ldr	r0, [r0, #8]
   6bef8:	ldr	r1, [sp, #4]
   6befc:	ldr	r1, [r1]
   6bf00:	bl	6c8d8 <__assert_fail@plt+0x59d20>
   6bf04:	ldr	r0, [sp, #4]
   6bf08:	bl	6c8ec <__assert_fail@plt+0x59d34>
   6bf0c:	ldr	r0, [sp, #4]
   6bf10:	bl	6bde8 <__assert_fail@plt+0x59230>
   6bf14:	mov	sp, fp
   6bf18:	pop	{fp, pc}
   6bf1c:	push	{fp, lr}
   6bf20:	mov	fp, sp
   6bf24:	sub	sp, sp, #8
   6bf28:	str	r0, [sp, #4]
   6bf2c:	ldr	r0, [sp, #4]
   6bf30:	movw	r1, #0
   6bf34:	cmp	r0, r1
   6bf38:	beq	6bfb4 <__assert_fail@plt+0x593fc>
   6bf3c:	movw	r0, #0
   6bf40:	str	r0, [sp]
   6bf44:	ldr	r0, [sp]
   6bf48:	ldr	r1, [sp, #4]
   6bf4c:	ldr	r1, [r1]
   6bf50:	cmp	r0, r1
   6bf54:	bge	6bfa8 <__assert_fail@plt+0x593f0>
   6bf58:	ldr	r0, [sp, #4]
   6bf5c:	ldr	r0, [r0, #8]
   6bf60:	ldr	r1, [sp]
   6bf64:	movw	r2, #24
   6bf68:	mul	r1, r1, r2
   6bf6c:	add	r0, r0, r1
   6bf70:	ldr	r0, [r0, #20]
   6bf74:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   6bf78:	ldr	r0, [sp, #4]
   6bf7c:	ldr	r0, [r0, #8]
   6bf80:	ldr	r1, [sp]
   6bf84:	movw	r2, #24
   6bf88:	mul	r1, r1, r2
   6bf8c:	add	r0, r0, r1
   6bf90:	ldr	r0, [r0, #8]
   6bf94:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   6bf98:	ldr	r0, [sp]
   6bf9c:	add	r0, r0, #1
   6bfa0:	str	r0, [sp]
   6bfa4:	b	6bf44 <__assert_fail@plt+0x5938c>
   6bfa8:	ldr	r0, [sp, #4]
   6bfac:	ldr	r0, [r0, #8]
   6bfb0:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   6bfb4:	movw	r0, #0
   6bfb8:	mov	sp, fp
   6bfbc:	pop	{fp, pc}
   6bfc0:	sub	sp, sp, #4
   6bfc4:	str	r0, [sp]
   6bfc8:	ldr	r0, [sp]
   6bfcc:	ldr	r0, [r0, #8]
   6bfd0:	add	sp, sp, #4
   6bfd4:	bx	lr
   6bfd8:	push	{fp, lr}
   6bfdc:	mov	fp, sp
   6bfe0:	sub	sp, sp, #32
   6bfe4:	ldr	ip, [fp, #12]
   6bfe8:	ldr	lr, [fp, #8]
   6bfec:	str	r0, [fp, #-4]
   6bff0:	str	r1, [fp, #-8]
   6bff4:	str	r2, [fp, #-12]
   6bff8:	str	r3, [sp, #16]
   6bffc:	ldr	r0, [fp, #-4]
   6c000:	ldr	r0, [r0]
   6c004:	ldr	r1, [sp, #16]
   6c008:	add	r0, r0, r1, lsl #3
   6c00c:	ldr	r0, [r0, #4]
   6c010:	and	r0, r0, #255	; 0xff
   6c014:	str	r0, [sp, #12]
   6c018:	ldr	r0, [sp, #12]
   6c01c:	cmp	r0, #8
   6c020:	bne	6c078 <__assert_fail@plt+0x594c0>
   6c024:	ldr	r0, [fp, #-4]
   6c028:	ldr	r0, [r0]
   6c02c:	ldr	r1, [sp, #16]
   6c030:	add	r0, r0, r1, lsl #3
   6c034:	ldr	r0, [r0]
   6c038:	add	r0, r0, #1
   6c03c:	str	r0, [sp, #8]
   6c040:	ldr	r0, [sp, #8]
   6c044:	ldr	r1, [fp, #12]
   6c048:	cmp	r0, r1
   6c04c:	bge	6c074 <__assert_fail@plt+0x594bc>
   6c050:	ldr	r0, [fp, #8]
   6c054:	ldr	r1, [fp, #-8]
   6c058:	ldr	r2, [sp, #8]
   6c05c:	str	r0, [r1, r2, lsl #3]
   6c060:	ldr	r0, [fp, #-8]
   6c064:	ldr	r1, [sp, #8]
   6c068:	add	r0, r0, r1, lsl #3
   6c06c:	mvn	r1, #0
   6c070:	str	r1, [r0, #4]
   6c074:	b	6c170 <__assert_fail@plt+0x595b8>
   6c078:	ldr	r0, [sp, #12]
   6c07c:	cmp	r0, #9
   6c080:	bne	6c16c <__assert_fail@plt+0x595b4>
   6c084:	ldr	r0, [fp, #-4]
   6c088:	ldr	r0, [r0]
   6c08c:	ldr	r1, [sp, #16]
   6c090:	add	r0, r0, r1, lsl #3
   6c094:	ldr	r0, [r0]
   6c098:	add	r0, r0, #1
   6c09c:	str	r0, [sp, #4]
   6c0a0:	ldr	r0, [sp, #4]
   6c0a4:	ldr	r1, [fp, #12]
   6c0a8:	cmp	r0, r1
   6c0ac:	bge	6c168 <__assert_fail@plt+0x595b0>
   6c0b0:	ldr	r0, [fp, #-8]
   6c0b4:	ldr	r1, [sp, #4]
   6c0b8:	add	r0, r0, r1, lsl #3
   6c0bc:	ldr	r0, [r0]
   6c0c0:	ldr	r1, [fp, #8]
   6c0c4:	cmp	r0, r1
   6c0c8:	bge	6c0f8 <__assert_fail@plt+0x59540>
   6c0cc:	ldr	r0, [fp, #8]
   6c0d0:	ldr	r1, [fp, #-8]
   6c0d4:	ldr	r2, [sp, #4]
   6c0d8:	add	r1, r1, r2, lsl #3
   6c0dc:	str	r0, [r1, #4]
   6c0e0:	ldr	r0, [fp, #-12]
   6c0e4:	ldr	r1, [fp, #-8]
   6c0e8:	ldr	r2, [fp, #12]
   6c0ec:	lsl	r2, r2, #3
   6c0f0:	bl	125c4 <memcpy@plt>
   6c0f4:	b	6c164 <__assert_fail@plt+0x595ac>
   6c0f8:	ldr	r0, [fp, #-4]
   6c0fc:	ldr	r0, [r0]
   6c100:	ldr	r1, [sp, #16]
   6c104:	add	r0, r0, r1, lsl #3
   6c108:	ldr	r0, [r0, #4]
   6c10c:	lsr	r0, r0, #19
   6c110:	and	r0, r0, #1
   6c114:	cmp	r0, #0
   6c118:	beq	6c14c <__assert_fail@plt+0x59594>
   6c11c:	ldr	r0, [fp, #-12]
   6c120:	ldr	r1, [sp, #4]
   6c124:	add	r0, r0, r1, lsl #3
   6c128:	ldr	r0, [r0]
   6c12c:	cmn	r0, #1
   6c130:	beq	6c14c <__assert_fail@plt+0x59594>
   6c134:	ldr	r0, [fp, #-8]
   6c138:	ldr	r1, [fp, #-12]
   6c13c:	ldr	r2, [fp, #12]
   6c140:	lsl	r2, r2, #3
   6c144:	bl	125c4 <memcpy@plt>
   6c148:	b	6c160 <__assert_fail@plt+0x595a8>
   6c14c:	ldr	r0, [fp, #8]
   6c150:	ldr	r1, [fp, #-8]
   6c154:	ldr	r2, [sp, #4]
   6c158:	add	r1, r1, r2, lsl #3
   6c15c:	str	r0, [r1, #4]
   6c160:	b	6c164 <__assert_fail@plt+0x595ac>
   6c164:	b	6c168 <__assert_fail@plt+0x595b0>
   6c168:	b	6c16c <__assert_fail@plt+0x595b4>
   6c16c:	b	6c170 <__assert_fail@plt+0x595b8>
   6c170:	mov	sp, fp
   6c174:	pop	{fp, pc}
   6c178:	push	{fp, lr}
   6c17c:	mov	fp, sp
   6c180:	sub	sp, sp, #32
   6c184:	ldr	ip, [fp, #12]
   6c188:	ldr	lr, [fp, #8]
   6c18c:	str	r0, [fp, #-8]
   6c190:	str	r1, [fp, #-12]
   6c194:	str	r2, [sp, #16]
   6c198:	str	r3, [sp, #12]
   6c19c:	ldr	r0, [fp, #-8]
   6c1a0:	movw	r1, #0
   6c1a4:	cmp	r0, r1
   6c1a8:	beq	6c1bc <__assert_fail@plt+0x59604>
   6c1ac:	ldr	r0, [fp, #-8]
   6c1b0:	ldr	r0, [r0]
   6c1b4:	cmp	r0, #0
   6c1b8:	bne	6c1c8 <__assert_fail@plt+0x59610>
   6c1bc:	mvn	r0, #0
   6c1c0:	str	r0, [fp, #-4]
   6c1c4:	b	6c304 <__assert_fail@plt+0x5974c>
   6c1c8:	ldr	r0, [fp, #-8]
   6c1cc:	ldr	r1, [r0]
   6c1d0:	sub	r1, r1, #1
   6c1d4:	str	r1, [r0]
   6c1d8:	str	r1, [sp, #8]
   6c1dc:	ldr	r0, [fp, #-8]
   6c1e0:	ldr	r0, [r0, #8]
   6c1e4:	ldr	r1, [sp, #8]
   6c1e8:	add	r1, r1, r1, lsl #1
   6c1ec:	ldr	r0, [r0, r1, lsl #3]
   6c1f0:	ldr	r1, [fp, #-12]
   6c1f4:	str	r0, [r1]
   6c1f8:	ldr	r0, [sp, #12]
   6c1fc:	ldr	r1, [fp, #-8]
   6c200:	ldr	r1, [r1, #8]
   6c204:	ldr	r2, [sp, #8]
   6c208:	add	r2, r2, r2, lsl #1
   6c20c:	add	r1, r1, r2, lsl #3
   6c210:	ldr	r1, [r1, #8]
   6c214:	ldr	r2, [sp, #16]
   6c218:	lsl	r2, r2, #3
   6c21c:	bl	125c4 <memcpy@plt>
   6c220:	ldr	r1, [fp, #8]
   6c224:	ldr	r2, [fp, #-8]
   6c228:	ldr	r2, [r2, #8]
   6c22c:	ldr	r3, [sp, #8]
   6c230:	add	r3, r3, r3, lsl #1
   6c234:	add	r2, r2, r3, lsl #3
   6c238:	ldr	r2, [r2, #8]
   6c23c:	ldr	r3, [sp, #16]
   6c240:	add	r2, r2, r3, lsl #3
   6c244:	lsl	r3, r3, #3
   6c248:	str	r0, [sp, #4]
   6c24c:	mov	r0, r1
   6c250:	mov	r1, r2
   6c254:	mov	r2, r3
   6c258:	bl	125c4 <memcpy@plt>
   6c25c:	ldr	r0, [fp, #12]
   6c260:	ldr	r0, [r0, #8]
   6c264:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   6c268:	ldr	r0, [fp, #-8]
   6c26c:	ldr	r0, [r0, #8]
   6c270:	ldr	r1, [sp, #8]
   6c274:	movw	r2, #24
   6c278:	mul	r1, r1, r2
   6c27c:	add	r0, r0, r1
   6c280:	ldr	r0, [r0, #8]
   6c284:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   6c288:	ldr	r0, [fp, #12]
   6c28c:	ldr	r1, [fp, #-8]
   6c290:	ldr	r1, [r1, #8]
   6c294:	ldr	r2, [sp, #8]
   6c298:	movw	r3, #24
   6c29c:	mul	r2, r2, r3
   6c2a0:	add	r1, r1, r2
   6c2a4:	ldr	r2, [r1, #12]
   6c2a8:	str	r2, [r0]
   6c2ac:	ldr	r2, [r1, #16]
   6c2b0:	str	r2, [r0, #4]
   6c2b4:	ldr	r1, [r1, #20]
   6c2b8:	str	r1, [r0, #8]
   6c2bc:	ldr	r0, [fp, #-8]
   6c2c0:	ldr	r0, [r0, #8]
   6c2c4:	ldr	r1, [sp, #8]
   6c2c8:	mul	r1, r1, r3
   6c2cc:	add	r0, r0, r1
   6c2d0:	ldr	r0, [r0, #4]
   6c2d4:	movw	r1, #0
   6c2d8:	cmp	r1, r0
   6c2dc:	bgt	6c2e4 <__assert_fail@plt+0x5972c>
   6c2e0:	b	6c2e4 <__assert_fail@plt+0x5972c>
   6c2e4:	ldr	r0, [fp, #-8]
   6c2e8:	ldr	r0, [r0, #8]
   6c2ec:	ldr	r1, [sp, #8]
   6c2f0:	movw	r2, #24
   6c2f4:	mul	r1, r1, r2
   6c2f8:	add	r0, r0, r1
   6c2fc:	ldr	r0, [r0, #4]
   6c300:	str	r0, [fp, #-4]
   6c304:	ldr	r0, [fp, #-4]
   6c308:	mov	sp, fp
   6c30c:	pop	{fp, pc}
   6c310:	push	{r4, r5, fp, lr}
   6c314:	add	fp, sp, #8
   6c318:	sub	sp, sp, #96	; 0x60
   6c31c:	ldr	ip, [fp, #20]
   6c320:	ldr	lr, [fp, #16]
   6c324:	ldr	r4, [fp, #12]
   6c328:	ldr	r5, [fp, #8]
   6c32c:	str	r0, [fp, #-16]
   6c330:	str	r1, [fp, #-20]	; 0xffffffec
   6c334:	str	r2, [fp, #-24]	; 0xffffffe8
   6c338:	str	r3, [fp, #-28]	; 0xffffffe4
   6c33c:	ldr	r0, [fp, #-16]
   6c340:	ldr	r0, [r0, #84]	; 0x54
   6c344:	str	r0, [fp, #-32]	; 0xffffffe0
   6c348:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6c34c:	ldr	r0, [r0]
   6c350:	ldr	r1, [fp, #12]
   6c354:	add	r0, r0, r1, lsl #3
   6c358:	ldr	r0, [r0, #4]
   6c35c:	and	r0, r0, #255	; 0xff
   6c360:	and	r0, r0, #8
   6c364:	cmp	r0, #0
   6c368:	beq	6c4fc <__assert_fail@plt+0x59944>
   6c36c:	ldr	r0, [fp, #-16]
   6c370:	ldr	r0, [r0, #100]	; 0x64
   6c374:	ldr	r1, [fp, #8]
   6c378:	ldr	r1, [r1]
   6c37c:	add	r0, r0, r1, lsl #2
   6c380:	ldr	r0, [r0]
   6c384:	add	r0, r0, #4
   6c388:	str	r0, [fp, #-36]	; 0xffffffdc
   6c38c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6c390:	ldr	r0, [r0, #20]
   6c394:	ldr	r1, [fp, #12]
   6c398:	movw	r2, #12
   6c39c:	mul	r1, r1, r2
   6c3a0:	add	r0, r0, r1
   6c3a4:	str	r0, [fp, #-40]	; 0xffffffd8
   6c3a8:	ldr	r0, [fp, #16]
   6c3ac:	ldr	r1, [fp, #12]
   6c3b0:	bl	6206c <__assert_fail@plt+0x4f4b4>
   6c3b4:	cmp	r0, #0
   6c3b8:	bne	6c3f4 <__assert_fail@plt+0x5983c>
   6c3bc:	ldr	r0, [fp, #16]
   6c3c0:	ldr	r1, [fp, #12]
   6c3c4:	bl	61bb0 <__assert_fail@plt+0x4eff8>
   6c3c8:	and	r0, r0, #1
   6c3cc:	strb	r0, [fp, #-41]	; 0xffffffd7
   6c3d0:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   6c3d4:	mvn	r1, #0
   6c3d8:	eor	r0, r0, r1
   6c3dc:	tst	r0, #1
   6c3e0:	beq	6c3f0 <__assert_fail@plt+0x59838>
   6c3e4:	mvn	r0, #1
   6c3e8:	str	r0, [fp, #-12]
   6c3ec:	b	6c870 <__assert_fail@plt+0x59cb8>
   6c3f0:	b	6c3f4 <__assert_fail@plt+0x5983c>
   6c3f4:	mvn	r0, #0
   6c3f8:	str	r0, [fp, #-48]	; 0xffffffd0
   6c3fc:	movw	r0, #0
   6c400:	str	r0, [sp, #52]	; 0x34
   6c404:	ldr	r0, [sp, #52]	; 0x34
   6c408:	ldr	r1, [fp, #-40]	; 0xffffffd8
   6c40c:	ldr	r1, [r1, #4]
   6c410:	cmp	r0, r1
   6c414:	bge	6c4f0 <__assert_fail@plt+0x59938>
   6c418:	ldr	r0, [fp, #-40]	; 0xffffffd8
   6c41c:	ldr	r0, [r0, #8]
   6c420:	ldr	r1, [sp, #52]	; 0x34
   6c424:	add	r0, r0, r1, lsl #2
   6c428:	ldr	r0, [r0]
   6c42c:	str	r0, [sp, #48]	; 0x30
   6c430:	ldr	r0, [fp, #-36]	; 0xffffffdc
   6c434:	ldr	r1, [sp, #48]	; 0x30
   6c438:	bl	6206c <__assert_fail@plt+0x4f4b4>
   6c43c:	cmp	r0, #0
   6c440:	bne	6c448 <__assert_fail@plt+0x59890>
   6c444:	b	6c4e0 <__assert_fail@plt+0x59928>
   6c448:	ldr	r0, [fp, #-48]	; 0xffffffd0
   6c44c:	cmn	r0, #1
   6c450:	bne	6c460 <__assert_fail@plt+0x598a8>
   6c454:	ldr	r0, [sp, #48]	; 0x30
   6c458:	str	r0, [fp, #-48]	; 0xffffffd0
   6c45c:	b	6c4dc <__assert_fail@plt+0x59924>
   6c460:	ldr	r0, [fp, #16]
   6c464:	ldr	r1, [fp, #-48]	; 0xffffffd0
   6c468:	bl	6206c <__assert_fail@plt+0x4f4b4>
   6c46c:	cmp	r0, #0
   6c470:	beq	6c480 <__assert_fail@plt+0x598c8>
   6c474:	ldr	r0, [sp, #48]	; 0x30
   6c478:	str	r0, [fp, #-12]
   6c47c:	b	6c870 <__assert_fail@plt+0x59cb8>
   6c480:	ldr	r0, [fp, #20]
   6c484:	movw	r1, #0
   6c488:	cmp	r0, r1
   6c48c:	beq	6c4d4 <__assert_fail@plt+0x5991c>
   6c490:	ldr	r0, [fp, #20]
   6c494:	ldr	r1, [fp, #8]
   6c498:	ldr	r1, [r1]
   6c49c:	ldr	r2, [sp, #48]	; 0x30
   6c4a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   6c4a4:	ldr	ip, [fp, #-24]	; 0xffffffe8
   6c4a8:	ldr	lr, [fp, #-28]	; 0xffffffe4
   6c4ac:	ldr	r4, [fp, #16]
   6c4b0:	str	ip, [sp]
   6c4b4:	str	lr, [sp, #4]
   6c4b8:	str	r4, [sp, #8]
   6c4bc:	bl	6c930 <__assert_fail@plt+0x59d78>
   6c4c0:	cmp	r0, #0
   6c4c4:	beq	6c4d4 <__assert_fail@plt+0x5991c>
   6c4c8:	mvn	r0, #1
   6c4cc:	str	r0, [fp, #-12]
   6c4d0:	b	6c870 <__assert_fail@plt+0x59cb8>
   6c4d4:	b	6c4d8 <__assert_fail@plt+0x59920>
   6c4d8:	b	6c4f0 <__assert_fail@plt+0x59938>
   6c4dc:	b	6c4e0 <__assert_fail@plt+0x59928>
   6c4e0:	ldr	r0, [sp, #52]	; 0x34
   6c4e4:	add	r0, r0, #1
   6c4e8:	str	r0, [sp, #52]	; 0x34
   6c4ec:	b	6c404 <__assert_fail@plt+0x5984c>
   6c4f0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   6c4f4:	str	r0, [fp, #-12]
   6c4f8:	b	6c870 <__assert_fail@plt+0x59cb8>
   6c4fc:	mov	r0, #0
   6c500:	str	r0, [sp, #44]	; 0x2c
   6c504:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6c508:	ldr	r0, [r0]
   6c50c:	ldr	r1, [fp, #12]
   6c510:	add	r0, r0, r1, lsl #3
   6c514:	ldrb	r0, [r0, #4]
   6c518:	str	r0, [sp, #40]	; 0x28
   6c51c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6c520:	ldr	r0, [r0]
   6c524:	ldr	r1, [fp, #12]
   6c528:	add	r0, r0, r1, lsl #3
   6c52c:	ldr	r0, [r0, #4]
   6c530:	lsr	r0, r0, #20
   6c534:	and	r0, r0, #1
   6c538:	cmp	r0, #0
   6c53c:	beq	6c560 <__assert_fail@plt+0x599a8>
   6c540:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6c544:	ldr	r1, [fp, #12]
   6c548:	ldr	r2, [fp, #-16]
   6c54c:	ldr	r3, [fp, #8]
   6c550:	ldr	r3, [r3]
   6c554:	bl	680c4 <__assert_fail@plt+0x5550c>
   6c558:	str	r0, [sp, #44]	; 0x2c
   6c55c:	b	6c73c <__assert_fail@plt+0x59b84>
   6c560:	ldr	r0, [sp, #40]	; 0x28
   6c564:	cmp	r0, #4
   6c568:	bne	6c738 <__assert_fail@plt+0x59b80>
   6c56c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6c570:	ldr	r0, [r0]
   6c574:	ldr	r1, [fp, #12]
   6c578:	add	r0, r0, r1, lsl #3
   6c57c:	ldr	r0, [r0]
   6c580:	add	r0, r0, #1
   6c584:	str	r0, [sp, #36]	; 0x24
   6c588:	ldr	r0, [sp, #36]	; 0x24
   6c58c:	ldr	r1, [fp, #-20]	; 0xffffffec
   6c590:	cmp	r0, r1
   6c594:	bge	6c5b4 <__assert_fail@plt+0x599fc>
   6c598:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6c59c:	ldr	r1, [sp, #36]	; 0x24
   6c5a0:	add	r0, r0, r1, lsl #3
   6c5a4:	ldr	r1, [r0, #4]
   6c5a8:	ldr	r0, [r0]
   6c5ac:	sub	r0, r1, r0
   6c5b0:	str	r0, [sp, #44]	; 0x2c
   6c5b4:	ldr	r0, [fp, #20]
   6c5b8:	movw	r1, #0
   6c5bc:	cmp	r0, r1
   6c5c0:	beq	6c698 <__assert_fail@plt+0x59ae0>
   6c5c4:	ldr	r0, [sp, #36]	; 0x24
   6c5c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   6c5cc:	cmp	r0, r1
   6c5d0:	bge	6c604 <__assert_fail@plt+0x59a4c>
   6c5d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6c5d8:	ldr	r1, [sp, #36]	; 0x24
   6c5dc:	add	r0, r0, r1, lsl #3
   6c5e0:	ldr	r0, [r0]
   6c5e4:	cmn	r0, #1
   6c5e8:	beq	6c604 <__assert_fail@plt+0x59a4c>
   6c5ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6c5f0:	ldr	r1, [sp, #36]	; 0x24
   6c5f4:	add	r0, r0, r1, lsl #3
   6c5f8:	ldr	r0, [r0, #4]
   6c5fc:	cmn	r0, #1
   6c600:	bne	6c610 <__assert_fail@plt+0x59a58>
   6c604:	mvn	r0, #0
   6c608:	str	r0, [fp, #-12]
   6c60c:	b	6c870 <__assert_fail@plt+0x59cb8>
   6c610:	ldr	r0, [sp, #44]	; 0x2c
   6c614:	cmp	r0, #0
   6c618:	beq	6c690 <__assert_fail@plt+0x59ad8>
   6c61c:	ldr	r0, [fp, #-16]
   6c620:	ldr	r0, [r0, #4]
   6c624:	str	r0, [sp, #32]
   6c628:	ldr	r0, [fp, #-16]
   6c62c:	ldr	r0, [r0, #28]
   6c630:	ldr	r1, [fp, #8]
   6c634:	ldr	r1, [r1]
   6c638:	sub	r0, r0, r1
   6c63c:	ldr	r1, [sp, #44]	; 0x2c
   6c640:	cmp	r0, r1
   6c644:	blt	6c680 <__assert_fail@plt+0x59ac8>
   6c648:	ldr	r0, [sp, #32]
   6c64c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   6c650:	ldr	r2, [sp, #36]	; 0x24
   6c654:	add	r1, r1, r2, lsl #3
   6c658:	ldr	r1, [r1]
   6c65c:	add	r0, r0, r1
   6c660:	ldr	r1, [sp, #32]
   6c664:	ldr	r2, [fp, #8]
   6c668:	ldr	r2, [r2]
   6c66c:	add	r1, r1, r2
   6c670:	ldr	r2, [sp, #44]	; 0x2c
   6c674:	bl	12624 <memcmp@plt>
   6c678:	cmp	r0, #0
   6c67c:	beq	6c68c <__assert_fail@plt+0x59ad4>
   6c680:	mvn	r0, #0
   6c684:	str	r0, [fp, #-12]
   6c688:	b	6c870 <__assert_fail@plt+0x59cb8>
   6c68c:	b	6c690 <__assert_fail@plt+0x59ad8>
   6c690:	b	6c694 <__assert_fail@plt+0x59adc>
   6c694:	b	6c698 <__assert_fail@plt+0x59ae0>
   6c698:	ldr	r0, [sp, #44]	; 0x2c
   6c69c:	cmp	r0, #0
   6c6a0:	bne	6c734 <__assert_fail@plt+0x59b7c>
   6c6a4:	ldr	r0, [fp, #16]
   6c6a8:	ldr	r1, [fp, #12]
   6c6ac:	bl	61bb0 <__assert_fail@plt+0x4eff8>
   6c6b0:	and	r0, r0, #1
   6c6b4:	strb	r0, [sp, #27]
   6c6b8:	ldrb	r0, [sp, #27]
   6c6bc:	mvn	r1, #0
   6c6c0:	eor	r0, r0, r1
   6c6c4:	tst	r0, #1
   6c6c8:	beq	6c6d8 <__assert_fail@plt+0x59b20>
   6c6cc:	mvn	r0, #1
   6c6d0:	str	r0, [fp, #-12]
   6c6d4:	b	6c870 <__assert_fail@plt+0x59cb8>
   6c6d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6c6dc:	ldr	r0, [r0, #20]
   6c6e0:	ldr	r1, [fp, #12]
   6c6e4:	add	r1, r1, r1, lsl #1
   6c6e8:	add	r0, r0, r1, lsl #2
   6c6ec:	ldr	r0, [r0, #8]
   6c6f0:	ldr	r0, [r0]
   6c6f4:	str	r0, [sp, #28]
   6c6f8:	ldr	r0, [fp, #-16]
   6c6fc:	ldr	r0, [r0, #100]	; 0x64
   6c700:	ldr	r1, [fp, #8]
   6c704:	ldr	r1, [r1]
   6c708:	add	r0, r0, r1, lsl #2
   6c70c:	ldr	r0, [r0]
   6c710:	add	r0, r0, #4
   6c714:	ldr	r1, [sp, #28]
   6c718:	bl	6206c <__assert_fail@plt+0x4f4b4>
   6c71c:	cmp	r0, #0
   6c720:	beq	6c730 <__assert_fail@plt+0x59b78>
   6c724:	ldr	r0, [sp, #28]
   6c728:	str	r0, [fp, #-12]
   6c72c:	b	6c870 <__assert_fail@plt+0x59cb8>
   6c730:	b	6c734 <__assert_fail@plt+0x59b7c>
   6c734:	b	6c738 <__assert_fail@plt+0x59b80>
   6c738:	b	6c73c <__assert_fail@plt+0x59b84>
   6c73c:	ldr	r0, [sp, #44]	; 0x2c
   6c740:	cmp	r0, #0
   6c744:	bne	6c770 <__assert_fail@plt+0x59bb8>
   6c748:	ldr	r0, [fp, #-16]
   6c74c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   6c750:	ldr	r1, [r1]
   6c754:	ldr	r2, [fp, #12]
   6c758:	add	r1, r1, r2, lsl #3
   6c75c:	ldr	r2, [fp, #8]
   6c760:	ldr	r2, [r2]
   6c764:	bl	686ac <__assert_fail@plt+0x55af4>
   6c768:	tst	r0, #1
   6c76c:	beq	6c864 <__assert_fail@plt+0x59cac>
   6c770:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6c774:	ldr	r0, [r0, #12]
   6c778:	ldr	r1, [fp, #12]
   6c77c:	add	r0, r0, r1, lsl #2
   6c780:	ldr	r0, [r0]
   6c784:	str	r0, [sp, #20]
   6c788:	ldr	r0, [sp, #44]	; 0x2c
   6c78c:	cmp	r0, #0
   6c790:	bne	6c7a8 <__assert_fail@plt+0x59bf0>
   6c794:	ldr	r0, [fp, #8]
   6c798:	ldr	r0, [r0]
   6c79c:	add	r0, r0, #1
   6c7a0:	str	r0, [sp, #16]
   6c7a4:	b	6c7bc <__assert_fail@plt+0x59c04>
   6c7a8:	ldr	r0, [fp, #8]
   6c7ac:	ldr	r0, [r0]
   6c7b0:	ldr	r1, [sp, #44]	; 0x2c
   6c7b4:	add	r0, r0, r1
   6c7b8:	str	r0, [sp, #16]
   6c7bc:	ldr	r0, [sp, #16]
   6c7c0:	ldr	r1, [fp, #8]
   6c7c4:	str	r0, [r1]
   6c7c8:	ldr	r0, [fp, #20]
   6c7cc:	movw	r1, #0
   6c7d0:	cmp	r0, r1
   6c7d4:	beq	6c84c <__assert_fail@plt+0x59c94>
   6c7d8:	ldr	r0, [fp, #8]
   6c7dc:	ldr	r0, [r0]
   6c7e0:	ldr	r1, [fp, #-16]
   6c7e4:	ldr	r1, [r1, #92]	; 0x5c
   6c7e8:	cmp	r0, r1
   6c7ec:	bgt	6c840 <__assert_fail@plt+0x59c88>
   6c7f0:	ldr	r0, [fp, #-16]
   6c7f4:	ldr	r0, [r0, #100]	; 0x64
   6c7f8:	ldr	r1, [fp, #8]
   6c7fc:	ldr	r1, [r1]
   6c800:	add	r0, r0, r1, lsl #2
   6c804:	ldr	r0, [r0]
   6c808:	movw	r1, #0
   6c80c:	cmp	r0, r1
   6c810:	beq	6c840 <__assert_fail@plt+0x59c88>
   6c814:	ldr	r0, [fp, #-16]
   6c818:	ldr	r0, [r0, #100]	; 0x64
   6c81c:	ldr	r1, [fp, #8]
   6c820:	ldr	r1, [r1]
   6c824:	add	r0, r0, r1, lsl #2
   6c828:	ldr	r0, [r0]
   6c82c:	add	r0, r0, #4
   6c830:	ldr	r1, [sp, #20]
   6c834:	bl	6206c <__assert_fail@plt+0x4f4b4>
   6c838:	cmp	r0, #0
   6c83c:	bne	6c84c <__assert_fail@plt+0x59c94>
   6c840:	mvn	r0, #0
   6c844:	str	r0, [fp, #-12]
   6c848:	b	6c870 <__assert_fail@plt+0x59cb8>
   6c84c:	ldr	r0, [fp, #16]
   6c850:	movw	r1, #0
   6c854:	str	r1, [r0, #4]
   6c858:	ldr	r0, [sp, #20]
   6c85c:	str	r0, [fp, #-12]
   6c860:	b	6c870 <__assert_fail@plt+0x59cb8>
   6c864:	b	6c868 <__assert_fail@plt+0x59cb0>
   6c868:	mvn	r0, #0
   6c86c:	str	r0, [fp, #-12]
   6c870:	ldr	r0, [fp, #-12]
   6c874:	sub	sp, fp, #8
   6c878:	pop	{r4, r5, fp, pc}
   6c87c:	push	{fp, lr}
   6c880:	mov	fp, sp
   6c884:	sub	sp, sp, #8
   6c888:	str	r0, [sp, #4]
   6c88c:	ldr	r0, [sp, #4]
   6c890:	ldr	r0, [r0, #8]
   6c894:	ldr	r1, [sp, #4]
   6c898:	ldr	r1, [r1]
   6c89c:	bl	6c8d8 <__assert_fail@plt+0x59d20>
   6c8a0:	ldr	r0, [sp, #4]
   6c8a4:	bl	6c8ec <__assert_fail@plt+0x59d34>
   6c8a8:	ldr	r0, [sp, #4]
   6c8ac:	add	r0, r0, #12
   6c8b0:	ldr	r1, [sp, #4]
   6c8b4:	str	r0, [r1, #8]
   6c8b8:	ldr	r0, [sp, #4]
   6c8bc:	movw	r1, #0
   6c8c0:	str	r1, [r0]
   6c8c4:	bl	6c928 <__assert_fail@plt+0x59d70>
   6c8c8:	ldr	r1, [sp, #4]
   6c8cc:	str	r0, [r1, #4]
   6c8d0:	mov	sp, fp
   6c8d4:	pop	{fp, pc}
   6c8d8:	sub	sp, sp, #8
   6c8dc:	str	r0, [sp, #4]
   6c8e0:	str	r1, [sp]
   6c8e4:	add	sp, sp, #8
   6c8e8:	bx	lr
   6c8ec:	push	{fp, lr}
   6c8f0:	mov	fp, sp
   6c8f4:	sub	sp, sp, #8
   6c8f8:	str	r0, [sp, #4]
   6c8fc:	ldr	r0, [sp, #4]
   6c900:	ldr	r0, [r0, #8]
   6c904:	ldr	r1, [sp, #4]
   6c908:	add	r1, r1, #12
   6c90c:	cmp	r0, r1
   6c910:	beq	6c920 <__assert_fail@plt+0x59d68>
   6c914:	ldr	r0, [sp, #4]
   6c918:	ldr	r0, [r0, #8]
   6c91c:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   6c920:	mov	sp, fp
   6c924:	pop	{fp, pc}
   6c928:	mvn	r0, #0
   6c92c:	bx	lr
   6c930:	push	{r4, sl, fp, lr}
   6c934:	add	fp, sp, #8
   6c938:	sub	sp, sp, #40	; 0x28
   6c93c:	ldr	ip, [fp, #16]
   6c940:	ldr	lr, [fp, #12]
   6c944:	ldr	r4, [fp, #8]
   6c948:	str	r0, [fp, #-16]
   6c94c:	str	r1, [fp, #-20]	; 0xffffffec
   6c950:	str	r2, [sp, #24]
   6c954:	str	r3, [sp, #20]
   6c958:	ldr	r0, [fp, #-16]
   6c95c:	ldr	r1, [r0]
   6c960:	add	r2, r1, #1
   6c964:	str	r2, [r0]
   6c968:	str	r1, [sp, #12]
   6c96c:	ldr	r0, [fp, #-16]
   6c970:	ldr	r0, [r0]
   6c974:	ldr	r1, [fp, #-16]
   6c978:	ldr	r1, [r1, #4]
   6c97c:	cmp	r0, r1
   6c980:	bne	6c9dc <__assert_fail@plt+0x59e24>
   6c984:	ldr	r0, [fp, #-16]
   6c988:	ldr	r1, [r0, #4]
   6c98c:	ldr	r0, [r0, #8]
   6c990:	lsl	r1, r1, #1
   6c994:	movw	r2, #24
   6c998:	mul	r1, r1, r2
   6c99c:	bl	538c8 <__assert_fail@plt+0x40d10>
   6c9a0:	str	r0, [sp, #8]
   6c9a4:	ldr	r0, [sp, #8]
   6c9a8:	movw	r1, #0
   6c9ac:	cmp	r0, r1
   6c9b0:	bne	6c9c0 <__assert_fail@plt+0x59e08>
   6c9b4:	movw	r0, #12
   6c9b8:	str	r0, [fp, #-12]
   6c9bc:	b	6cb00 <__assert_fail@plt+0x59f48>
   6c9c0:	ldr	r0, [fp, #-16]
   6c9c4:	ldr	r1, [r0, #4]
   6c9c8:	lsl	r1, r1, #1
   6c9cc:	str	r1, [r0, #4]
   6c9d0:	ldr	r0, [sp, #8]
   6c9d4:	ldr	r1, [fp, #-16]
   6c9d8:	str	r0, [r1, #8]
   6c9dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   6c9e0:	ldr	r1, [fp, #-16]
   6c9e4:	ldr	r1, [r1, #8]
   6c9e8:	ldr	r2, [sp, #12]
   6c9ec:	add	r2, r2, r2, lsl #1
   6c9f0:	str	r0, [r1, r2, lsl #3]
   6c9f4:	ldr	r0, [sp, #24]
   6c9f8:	ldr	r1, [fp, #-16]
   6c9fc:	ldr	r1, [r1, #8]
   6ca00:	ldr	r2, [sp, #12]
   6ca04:	add	r2, r2, r2, lsl #1
   6ca08:	add	r1, r1, r2, lsl #3
   6ca0c:	str	r0, [r1, #4]
   6ca10:	ldr	r0, [sp, #20]
   6ca14:	lsl	r1, r0, #1
   6ca18:	lsl	r0, r0, #4
   6ca1c:	str	r1, [sp, #4]
   6ca20:	bl	527f0 <__assert_fail@plt+0x3fc38>
   6ca24:	ldr	r1, [fp, #-16]
   6ca28:	ldr	r1, [r1, #8]
   6ca2c:	ldr	r2, [sp, #12]
   6ca30:	movw	r3, #24
   6ca34:	mul	r2, r2, r3
   6ca38:	add	r1, r1, r2
   6ca3c:	str	r0, [r1, #8]
   6ca40:	ldr	r0, [fp, #-16]
   6ca44:	ldr	r0, [r0, #8]
   6ca48:	ldr	r1, [sp, #12]
   6ca4c:	mul	r1, r1, r3
   6ca50:	add	r0, r0, r1
   6ca54:	ldr	r0, [r0, #8]
   6ca58:	movw	r1, #0
   6ca5c:	cmp	r0, r1
   6ca60:	bne	6ca70 <__assert_fail@plt+0x59eb8>
   6ca64:	movw	r0, #12
   6ca68:	str	r0, [fp, #-12]
   6ca6c:	b	6cb00 <__assert_fail@plt+0x59f48>
   6ca70:	ldr	r0, [fp, #-16]
   6ca74:	ldr	r0, [r0, #8]
   6ca78:	ldr	r1, [sp, #12]
   6ca7c:	add	r1, r1, r1, lsl #1
   6ca80:	add	r0, r0, r1, lsl #3
   6ca84:	ldr	r0, [r0, #8]
   6ca88:	ldr	r1, [fp, #8]
   6ca8c:	ldr	r2, [sp, #20]
   6ca90:	lsl	r2, r2, #3
   6ca94:	bl	125c4 <memcpy@plt>
   6ca98:	ldr	r1, [fp, #-16]
   6ca9c:	ldr	r1, [r1, #8]
   6caa0:	ldr	r2, [sp, #12]
   6caa4:	add	r2, r2, r2, lsl #1
   6caa8:	add	r1, r1, r2, lsl #3
   6caac:	ldr	r1, [r1, #8]
   6cab0:	ldr	r2, [sp, #20]
   6cab4:	add	r1, r1, r2, lsl #3
   6cab8:	lsl	r2, r2, #3
   6cabc:	ldr	r3, [fp, #12]
   6cac0:	str	r0, [sp]
   6cac4:	mov	r0, r1
   6cac8:	mov	r1, r3
   6cacc:	bl	125c4 <memcpy@plt>
   6cad0:	ldr	r0, [fp, #-16]
   6cad4:	ldr	r0, [r0, #8]
   6cad8:	ldr	r1, [sp, #12]
   6cadc:	movw	r2, #24
   6cae0:	mul	r1, r1, r2
   6cae4:	add	r0, r0, r1
   6cae8:	add	r0, r0, #12
   6caec:	ldr	r1, [fp, #16]
   6caf0:	bl	61f98 <__assert_fail@plt+0x4f3e0>
   6caf4:	str	r0, [sp, #16]
   6caf8:	ldr	r0, [sp, #16]
   6cafc:	str	r0, [fp, #-12]
   6cb00:	ldr	r0, [fp, #-12]
   6cb04:	sub	sp, fp, #8
   6cb08:	pop	{r4, sl, fp, pc}
   6cb0c:	push	{fp, lr}
   6cb10:	mov	fp, sp
   6cb14:	sub	sp, sp, #40	; 0x28
   6cb18:	str	r0, [fp, #-8]
   6cb1c:	str	r1, [fp, #-12]
   6cb20:	ldr	r0, [fp, #-8]
   6cb24:	str	r0, [fp, #-16]
   6cb28:	ldr	r0, [fp, #-12]
   6cb2c:	str	r0, [sp, #20]
   6cb30:	movw	r0, #1
   6cb34:	strb	r0, [sp, #11]
   6cb38:	ldr	r0, [fp, #-16]
   6cb3c:	ldrb	r0, [r0]
   6cb40:	cmp	r0, #0
   6cb44:	movw	r0, #0
   6cb48:	str	r0, [sp, #4]
   6cb4c:	beq	6cb68 <__assert_fail@plt+0x59fb0>
   6cb50:	ldr	r0, [sp, #20]
   6cb54:	ldrb	r0, [r0]
   6cb58:	cmp	r0, #0
   6cb5c:	movw	r0, #0
   6cb60:	movne	r0, #1
   6cb64:	str	r0, [sp, #4]
   6cb68:	ldr	r0, [sp, #4]
   6cb6c:	tst	r0, #1
   6cb70:	beq	6cbc8 <__assert_fail@plt+0x5a010>
   6cb74:	ldr	r0, [fp, #-16]
   6cb78:	add	r1, r0, #1
   6cb7c:	str	r1, [fp, #-16]
   6cb80:	ldrb	r0, [r0]
   6cb84:	ldr	r1, [sp, #20]
   6cb88:	add	r2, r1, #1
   6cb8c:	str	r2, [sp, #20]
   6cb90:	ldrb	r1, [r1]
   6cb94:	cmp	r0, r1
   6cb98:	movw	r0, #0
   6cb9c:	moveq	r0, #1
   6cba0:	and	r0, r0, #1
   6cba4:	ldrb	r1, [sp, #11]
   6cba8:	and	r1, r1, #1
   6cbac:	and	r0, r1, r0
   6cbb0:	cmp	r0, #0
   6cbb4:	movw	r0, #0
   6cbb8:	movne	r0, #1
   6cbbc:	and	r0, r0, #1
   6cbc0:	strb	r0, [sp, #11]
   6cbc4:	b	6cb38 <__assert_fail@plt+0x59f80>
   6cbc8:	ldr	r0, [sp, #20]
   6cbcc:	ldrsb	r0, [r0]
   6cbd0:	cmp	r0, #0
   6cbd4:	beq	6cbe4 <__assert_fail@plt+0x5a02c>
   6cbd8:	movw	r0, #0
   6cbdc:	str	r0, [fp, #-4]
   6cbe0:	b	6cce8 <__assert_fail@plt+0x5a130>
   6cbe4:	ldrb	r0, [sp, #11]
   6cbe8:	tst	r0, #1
   6cbec:	beq	6cbfc <__assert_fail@plt+0x5a044>
   6cbf0:	ldr	r0, [fp, #-8]
   6cbf4:	str	r0, [fp, #-4]
   6cbf8:	b	6cce8 <__assert_fail@plt+0x5a130>
   6cbfc:	ldr	r0, [sp, #20]
   6cc00:	ldr	r1, [fp, #-12]
   6cc04:	sub	r0, r0, r1
   6cc08:	str	r0, [sp, #16]
   6cc0c:	ldr	r0, [fp, #-8]
   6cc10:	add	r0, r0, #1
   6cc14:	ldr	r1, [fp, #-12]
   6cc18:	ldrb	r1, [r1]
   6cc1c:	bl	12894 <strchr@plt>
   6cc20:	str	r0, [fp, #-16]
   6cc24:	ldr	r0, [fp, #-16]
   6cc28:	movw	r1, #0
   6cc2c:	cmp	r0, r1
   6cc30:	beq	6cc40 <__assert_fail@plt+0x5a088>
   6cc34:	ldr	r0, [sp, #16]
   6cc38:	cmp	r0, #1
   6cc3c:	bne	6cc4c <__assert_fail@plt+0x5a094>
   6cc40:	ldr	r0, [fp, #-16]
   6cc44:	str	r0, [fp, #-4]
   6cc48:	b	6cce8 <__assert_fail@plt+0x5a130>
   6cc4c:	ldr	r0, [sp, #16]
   6cc50:	ldr	r1, [sp, #20]
   6cc54:	movw	r2, #0
   6cc58:	sub	r0, r2, r0
   6cc5c:	add	r0, r1, r0
   6cc60:	str	r0, [sp, #20]
   6cc64:	ldr	r0, [fp, #-16]
   6cc68:	ldr	r1, [fp, #-8]
   6cc6c:	ldr	r2, [sp, #16]
   6cc70:	add	r1, r1, r2
   6cc74:	cmp	r0, r1
   6cc78:	bls	6cc88 <__assert_fail@plt+0x5a0d0>
   6cc7c:	movw	r0, #1
   6cc80:	str	r0, [sp]
   6cc84:	b	6cca0 <__assert_fail@plt+0x5a0e8>
   6cc88:	ldr	r0, [sp, #16]
   6cc8c:	ldr	r1, [fp, #-8]
   6cc90:	add	r0, r1, r0
   6cc94:	ldr	r1, [fp, #-16]
   6cc98:	sub	r0, r0, r1
   6cc9c:	str	r0, [sp]
   6cca0:	ldr	r0, [sp]
   6cca4:	str	r0, [sp, #12]
   6cca8:	ldr	r0, [sp, #16]
   6ccac:	cmp	r0, #32
   6ccb0:	bcs	6ccd0 <__assert_fail@plt+0x5a118>
   6ccb4:	ldr	r0, [fp, #-16]
   6ccb8:	ldr	r1, [sp, #12]
   6ccbc:	ldr	r2, [sp, #20]
   6ccc0:	ldr	r3, [sp, #16]
   6ccc4:	bl	6ccf4 <__assert_fail@plt+0x5a13c>
   6ccc8:	str	r0, [fp, #-4]
   6cccc:	b	6cce8 <__assert_fail@plt+0x5a130>
   6ccd0:	ldr	r0, [fp, #-16]
   6ccd4:	ldr	r1, [sp, #12]
   6ccd8:	ldr	r2, [sp, #20]
   6ccdc:	ldr	r3, [sp, #16]
   6cce0:	bl	6d174 <__assert_fail@plt+0x5a5bc>
   6cce4:	str	r0, [fp, #-4]
   6cce8:	ldr	r0, [fp, #-4]
   6ccec:	mov	sp, fp
   6ccf0:	pop	{fp, pc}
   6ccf4:	push	{fp, lr}
   6ccf8:	mov	fp, sp
   6ccfc:	sub	sp, sp, #72	; 0x48
   6cd00:	str	r0, [fp, #-8]
   6cd04:	str	r1, [fp, #-12]
   6cd08:	str	r2, [fp, #-16]
   6cd0c:	str	r3, [fp, #-20]	; 0xffffffec
   6cd10:	ldr	r0, [fp, #-16]
   6cd14:	ldr	r1, [fp, #-20]	; 0xffffffec
   6cd18:	sub	r2, fp, #32
   6cd1c:	bl	6d760 <__assert_fail@plt+0x5aba8>
   6cd20:	str	r0, [sp, #36]	; 0x24
   6cd24:	ldr	r0, [fp, #-16]
   6cd28:	ldr	r1, [fp, #-16]
   6cd2c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   6cd30:	add	r1, r1, r2
   6cd34:	ldr	r2, [sp, #36]	; 0x24
   6cd38:	bl	12624 <memcmp@plt>
   6cd3c:	cmp	r0, #0
   6cd40:	bne	6cf5c <__assert_fail@plt+0x5a3a4>
   6cd44:	movw	r0, #0
   6cd48:	str	r0, [sp, #32]
   6cd4c:	str	r0, [fp, #-28]	; 0xffffffe4
   6cd50:	ldr	r0, [fp, #-8]
   6cd54:	ldr	r1, [fp, #-12]
   6cd58:	add	r0, r0, r1
   6cd5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6cd60:	ldr	r2, [fp, #-20]	; 0xffffffec
   6cd64:	add	r1, r1, r2
   6cd68:	ldr	r2, [fp, #-12]
   6cd6c:	sub	r2, r1, r2
   6cd70:	mov	r1, #0
   6cd74:	bl	1296c <memchr@plt>
   6cd78:	movw	r1, #0
   6cd7c:	cmp	r0, r1
   6cd80:	movw	r0, #0
   6cd84:	str	r0, [sp, #28]
   6cd88:	bne	6cdac <__assert_fail@plt+0x5a1f4>
   6cd8c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6cd90:	ldr	r1, [fp, #-20]	; 0xffffffec
   6cd94:	add	r0, r0, r1
   6cd98:	str	r0, [fp, #-12]
   6cd9c:	cmp	r0, #0
   6cda0:	movw	r0, #0
   6cda4:	movne	r0, #1
   6cda8:	str	r0, [sp, #28]
   6cdac:	ldr	r0, [sp, #28]
   6cdb0:	tst	r0, #1
   6cdb4:	beq	6cf58 <__assert_fail@plt+0x5a3a0>
   6cdb8:	ldr	r0, [sp, #36]	; 0x24
   6cdbc:	ldr	r1, [sp, #32]
   6cdc0:	cmp	r0, r1
   6cdc4:	bcs	6cdd4 <__assert_fail@plt+0x5a21c>
   6cdc8:	ldr	r0, [sp, #32]
   6cdcc:	str	r0, [sp, #24]
   6cdd0:	b	6cddc <__assert_fail@plt+0x5a224>
   6cdd4:	ldr	r0, [sp, #36]	; 0x24
   6cdd8:	str	r0, [sp, #24]
   6cddc:	ldr	r0, [sp, #24]
   6cde0:	str	r0, [fp, #-24]	; 0xffffffe8
   6cde4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6cde8:	ldr	r1, [fp, #-20]	; 0xffffffec
   6cdec:	cmp	r0, r1
   6cdf0:	movw	r0, #0
   6cdf4:	str	r0, [sp, #20]
   6cdf8:	bcs	6ce34 <__assert_fail@plt+0x5a27c>
   6cdfc:	ldr	r0, [fp, #-16]
   6ce00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   6ce04:	add	r0, r0, r1
   6ce08:	ldrb	r0, [r0]
   6ce0c:	ldr	r1, [fp, #-8]
   6ce10:	ldr	r2, [fp, #-24]	; 0xffffffe8
   6ce14:	ldr	r3, [fp, #-28]	; 0xffffffe4
   6ce18:	add	r2, r2, r3
   6ce1c:	add	r1, r1, r2
   6ce20:	ldrb	r1, [r1]
   6ce24:	cmp	r0, r1
   6ce28:	movw	r0, #0
   6ce2c:	moveq	r0, #1
   6ce30:	str	r0, [sp, #20]
   6ce34:	ldr	r0, [sp, #20]
   6ce38:	tst	r0, #1
   6ce3c:	beq	6ce50 <__assert_fail@plt+0x5a298>
   6ce40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6ce44:	add	r0, r0, #1
   6ce48:	str	r0, [fp, #-24]	; 0xffffffe8
   6ce4c:	b	6cde4 <__assert_fail@plt+0x5a22c>
   6ce50:	ldr	r0, [fp, #-20]	; 0xffffffec
   6ce54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   6ce58:	cmp	r0, r1
   6ce5c:	bhi	6cf30 <__assert_fail@plt+0x5a378>
   6ce60:	ldr	r0, [sp, #36]	; 0x24
   6ce64:	sub	r0, r0, #1
   6ce68:	str	r0, [fp, #-24]	; 0xffffffe8
   6ce6c:	ldr	r0, [sp, #32]
   6ce70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   6ce74:	add	r1, r1, #1
   6ce78:	cmp	r0, r1
   6ce7c:	movw	r0, #0
   6ce80:	str	r0, [sp, #16]
   6ce84:	bcs	6cec0 <__assert_fail@plt+0x5a308>
   6ce88:	ldr	r0, [fp, #-16]
   6ce8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   6ce90:	add	r0, r0, r1
   6ce94:	ldrb	r0, [r0]
   6ce98:	ldr	r1, [fp, #-8]
   6ce9c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   6cea0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   6cea4:	add	r2, r2, r3
   6cea8:	add	r1, r1, r2
   6ceac:	ldrb	r1, [r1]
   6ceb0:	cmp	r0, r1
   6ceb4:	movw	r0, #0
   6ceb8:	moveq	r0, #1
   6cebc:	str	r0, [sp, #16]
   6cec0:	ldr	r0, [sp, #16]
   6cec4:	tst	r0, #1
   6cec8:	beq	6cee0 <__assert_fail@plt+0x5a328>
   6cecc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6ced0:	mvn	r1, #0
   6ced4:	add	r0, r0, r1
   6ced8:	str	r0, [fp, #-24]	; 0xffffffe8
   6cedc:	b	6ce6c <__assert_fail@plt+0x5a2b4>
   6cee0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6cee4:	add	r0, r0, #1
   6cee8:	ldr	r1, [sp, #32]
   6ceec:	add	r1, r1, #1
   6cef0:	cmp	r0, r1
   6cef4:	bcs	6cf0c <__assert_fail@plt+0x5a354>
   6cef8:	ldr	r0, [fp, #-8]
   6cefc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6cf00:	add	r0, r0, r1
   6cf04:	str	r0, [fp, #-4]
   6cf08:	b	6d168 <__assert_fail@plt+0x5a5b0>
   6cf0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6cf10:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6cf14:	add	r0, r1, r0
   6cf18:	str	r0, [fp, #-28]	; 0xffffffe4
   6cf1c:	ldr	r0, [fp, #-20]	; 0xffffffec
   6cf20:	ldr	r1, [fp, #-32]	; 0xffffffe0
   6cf24:	sub	r0, r0, r1
   6cf28:	str	r0, [sp, #32]
   6cf2c:	b	6cf54 <__assert_fail@plt+0x5a39c>
   6cf30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6cf34:	ldr	r1, [sp, #36]	; 0x24
   6cf38:	sub	r0, r0, r1
   6cf3c:	add	r0, r0, #1
   6cf40:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6cf44:	add	r0, r1, r0
   6cf48:	str	r0, [fp, #-28]	; 0xffffffe4
   6cf4c:	movw	r0, #0
   6cf50:	str	r0, [sp, #32]
   6cf54:	b	6cd50 <__assert_fail@plt+0x5a198>
   6cf58:	b	6d160 <__assert_fail@plt+0x5a5a8>
   6cf5c:	ldr	r0, [sp, #36]	; 0x24
   6cf60:	ldr	r1, [fp, #-20]	; 0xffffffec
   6cf64:	ldr	r2, [sp, #36]	; 0x24
   6cf68:	sub	r1, r1, r2
   6cf6c:	cmp	r0, r1
   6cf70:	bcs	6cf88 <__assert_fail@plt+0x5a3d0>
   6cf74:	ldr	r0, [fp, #-20]	; 0xffffffec
   6cf78:	ldr	r1, [sp, #36]	; 0x24
   6cf7c:	sub	r0, r0, r1
   6cf80:	str	r0, [sp, #12]
   6cf84:	b	6cf90 <__assert_fail@plt+0x5a3d8>
   6cf88:	ldr	r0, [sp, #36]	; 0x24
   6cf8c:	str	r0, [sp, #12]
   6cf90:	ldr	r0, [sp, #12]
   6cf94:	add	r0, r0, #1
   6cf98:	str	r0, [fp, #-32]	; 0xffffffe0
   6cf9c:	movw	r0, #0
   6cfa0:	str	r0, [fp, #-28]	; 0xffffffe4
   6cfa4:	ldr	r0, [fp, #-8]
   6cfa8:	ldr	r1, [fp, #-12]
   6cfac:	add	r0, r0, r1
   6cfb0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6cfb4:	ldr	r2, [fp, #-20]	; 0xffffffec
   6cfb8:	add	r1, r1, r2
   6cfbc:	ldr	r2, [fp, #-12]
   6cfc0:	sub	r2, r1, r2
   6cfc4:	mov	r1, #0
   6cfc8:	bl	1296c <memchr@plt>
   6cfcc:	movw	r1, #0
   6cfd0:	cmp	r0, r1
   6cfd4:	movw	r0, #0
   6cfd8:	str	r0, [sp, #8]
   6cfdc:	bne	6d000 <__assert_fail@plt+0x5a448>
   6cfe0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6cfe4:	ldr	r1, [fp, #-20]	; 0xffffffec
   6cfe8:	add	r0, r0, r1
   6cfec:	str	r0, [fp, #-12]
   6cff0:	cmp	r0, #0
   6cff4:	movw	r0, #0
   6cff8:	movne	r0, #1
   6cffc:	str	r0, [sp, #8]
   6d000:	ldr	r0, [sp, #8]
   6d004:	tst	r0, #1
   6d008:	beq	6d15c <__assert_fail@plt+0x5a5a4>
   6d00c:	ldr	r0, [sp, #36]	; 0x24
   6d010:	str	r0, [fp, #-24]	; 0xffffffe8
   6d014:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6d018:	ldr	r1, [fp, #-20]	; 0xffffffec
   6d01c:	cmp	r0, r1
   6d020:	movw	r0, #0
   6d024:	str	r0, [sp, #4]
   6d028:	bcs	6d064 <__assert_fail@plt+0x5a4ac>
   6d02c:	ldr	r0, [fp, #-16]
   6d030:	ldr	r1, [fp, #-24]	; 0xffffffe8
   6d034:	add	r0, r0, r1
   6d038:	ldrb	r0, [r0]
   6d03c:	ldr	r1, [fp, #-8]
   6d040:	ldr	r2, [fp, #-24]	; 0xffffffe8
   6d044:	ldr	r3, [fp, #-28]	; 0xffffffe4
   6d048:	add	r2, r2, r3
   6d04c:	add	r1, r1, r2
   6d050:	ldrb	r1, [r1]
   6d054:	cmp	r0, r1
   6d058:	movw	r0, #0
   6d05c:	moveq	r0, #1
   6d060:	str	r0, [sp, #4]
   6d064:	ldr	r0, [sp, #4]
   6d068:	tst	r0, #1
   6d06c:	beq	6d080 <__assert_fail@plt+0x5a4c8>
   6d070:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6d074:	add	r0, r0, #1
   6d078:	str	r0, [fp, #-24]	; 0xffffffe8
   6d07c:	b	6d014 <__assert_fail@plt+0x5a45c>
   6d080:	ldr	r0, [fp, #-20]	; 0xffffffec
   6d084:	ldr	r1, [fp, #-24]	; 0xffffffe8
   6d088:	cmp	r0, r1
   6d08c:	bhi	6d13c <__assert_fail@plt+0x5a584>
   6d090:	ldr	r0, [sp, #36]	; 0x24
   6d094:	sub	r0, r0, #1
   6d098:	str	r0, [fp, #-24]	; 0xffffffe8
   6d09c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6d0a0:	cmn	r0, #1
   6d0a4:	movw	r0, #0
   6d0a8:	str	r0, [sp]
   6d0ac:	beq	6d0e8 <__assert_fail@plt+0x5a530>
   6d0b0:	ldr	r0, [fp, #-16]
   6d0b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   6d0b8:	add	r0, r0, r1
   6d0bc:	ldrb	r0, [r0]
   6d0c0:	ldr	r1, [fp, #-8]
   6d0c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   6d0c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   6d0cc:	add	r2, r2, r3
   6d0d0:	add	r1, r1, r2
   6d0d4:	ldrb	r1, [r1]
   6d0d8:	cmp	r0, r1
   6d0dc:	movw	r0, #0
   6d0e0:	moveq	r0, #1
   6d0e4:	str	r0, [sp]
   6d0e8:	ldr	r0, [sp]
   6d0ec:	tst	r0, #1
   6d0f0:	beq	6d108 <__assert_fail@plt+0x5a550>
   6d0f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6d0f8:	mvn	r1, #0
   6d0fc:	add	r0, r0, r1
   6d100:	str	r0, [fp, #-24]	; 0xffffffe8
   6d104:	b	6d09c <__assert_fail@plt+0x5a4e4>
   6d108:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6d10c:	cmn	r0, #1
   6d110:	bne	6d128 <__assert_fail@plt+0x5a570>
   6d114:	ldr	r0, [fp, #-8]
   6d118:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6d11c:	add	r0, r0, r1
   6d120:	str	r0, [fp, #-4]
   6d124:	b	6d168 <__assert_fail@plt+0x5a5b0>
   6d128:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6d12c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6d130:	add	r0, r1, r0
   6d134:	str	r0, [fp, #-28]	; 0xffffffe4
   6d138:	b	6d158 <__assert_fail@plt+0x5a5a0>
   6d13c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6d140:	ldr	r1, [sp, #36]	; 0x24
   6d144:	sub	r0, r0, r1
   6d148:	add	r0, r0, #1
   6d14c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6d150:	add	r0, r1, r0
   6d154:	str	r0, [fp, #-28]	; 0xffffffe4
   6d158:	b	6cfa4 <__assert_fail@plt+0x5a3ec>
   6d15c:	b	6d160 <__assert_fail@plt+0x5a5a8>
   6d160:	movw	r0, #0
   6d164:	str	r0, [fp, #-4]
   6d168:	ldr	r0, [fp, #-4]
   6d16c:	mov	sp, fp
   6d170:	pop	{fp, pc}
   6d174:	push	{r4, r5, fp, lr}
   6d178:	add	fp, sp, #8
   6d17c:	sub	sp, sp, #1104	; 0x450
   6d180:	str	r0, [fp, #-16]
   6d184:	str	r1, [fp, #-20]	; 0xffffffec
   6d188:	str	r2, [fp, #-24]	; 0xffffffe8
   6d18c:	str	r3, [fp, #-28]	; 0xffffffe4
   6d190:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6d194:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6d198:	sub	r2, fp, #40	; 0x28
   6d19c:	bl	6d760 <__assert_fail@plt+0x5aba8>
   6d1a0:	str	r0, [fp, #-44]	; 0xffffffd4
   6d1a4:	movw	r0, #0
   6d1a8:	str	r0, [fp, #-32]	; 0xffffffe0
   6d1ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6d1b0:	cmp	r0, #256	; 0x100
   6d1b4:	bcs	6d1dc <__assert_fail@plt+0x5a624>
   6d1b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6d1bc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   6d1c0:	add	r2, sp, #44	; 0x2c
   6d1c4:	add	r1, r2, r1, lsl #2
   6d1c8:	str	r0, [r1]
   6d1cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6d1d0:	add	r0, r0, #1
   6d1d4:	str	r0, [fp, #-32]	; 0xffffffe0
   6d1d8:	b	6d1ac <__assert_fail@plt+0x5a5f4>
   6d1dc:	movw	r0, #0
   6d1e0:	str	r0, [fp, #-32]	; 0xffffffe0
   6d1e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6d1e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6d1ec:	cmp	r0, r1
   6d1f0:	bcs	6d22c <__assert_fail@plt+0x5a674>
   6d1f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6d1f8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   6d1fc:	mvn	r2, r1
   6d200:	add	r0, r2, r0
   6d204:	ldr	r2, [fp, #-24]	; 0xffffffe8
   6d208:	ldrb	r1, [r2, r1]
   6d20c:	mov	r2, r1
   6d210:	add	r3, sp, #44	; 0x2c
   6d214:	add	r1, r3, r1, lsl #2
   6d218:	str	r0, [r1]
   6d21c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6d220:	add	r0, r0, #1
   6d224:	str	r0, [fp, #-32]	; 0xffffffe0
   6d228:	b	6d1e4 <__assert_fail@plt+0x5a62c>
   6d22c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6d230:	ldr	r1, [fp, #-24]	; 0xffffffe8
   6d234:	ldr	r2, [fp, #-40]	; 0xffffffd8
   6d238:	add	r1, r1, r2
   6d23c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   6d240:	bl	12624 <memcmp@plt>
   6d244:	cmp	r0, #0
   6d248:	bne	6d4f0 <__assert_fail@plt+0x5a938>
   6d24c:	movw	r0, #0
   6d250:	str	r0, [sp, #40]	; 0x28
   6d254:	str	r0, [fp, #-36]	; 0xffffffdc
   6d258:	ldr	r0, [fp, #-16]
   6d25c:	ldr	r1, [fp, #-20]	; 0xffffffec
   6d260:	add	r0, r0, r1
   6d264:	ldr	r1, [fp, #-36]	; 0xffffffdc
   6d268:	ldr	r2, [fp, #-28]	; 0xffffffe4
   6d26c:	add	r1, r1, r2
   6d270:	ldr	r2, [fp, #-20]	; 0xffffffec
   6d274:	sub	r2, r1, r2
   6d278:	mov	r1, #0
   6d27c:	bl	1296c <memchr@plt>
   6d280:	movw	r1, #0
   6d284:	cmp	r0, r1
   6d288:	movw	r0, #0
   6d28c:	str	r0, [sp, #28]
   6d290:	bne	6d2b4 <__assert_fail@plt+0x5a6fc>
   6d294:	ldr	r0, [fp, #-36]	; 0xffffffdc
   6d298:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6d29c:	add	r0, r0, r1
   6d2a0:	str	r0, [fp, #-20]	; 0xffffffec
   6d2a4:	cmp	r0, #0
   6d2a8:	movw	r0, #0
   6d2ac:	movne	r0, #1
   6d2b0:	str	r0, [sp, #28]
   6d2b4:	ldr	r0, [sp, #28]
   6d2b8:	tst	r0, #1
   6d2bc:	beq	6d4ec <__assert_fail@plt+0x5a934>
   6d2c0:	ldr	r0, [fp, #-16]
   6d2c4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   6d2c8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   6d2cc:	add	r1, r1, r2
   6d2d0:	add	r0, r1, r0
   6d2d4:	ldrb	r0, [r0, #-1]
   6d2d8:	mov	r1, r0
   6d2dc:	add	r2, sp, #44	; 0x2c
   6d2e0:	add	r0, r2, r0, lsl #2
   6d2e4:	ldr	r0, [r0]
   6d2e8:	str	r0, [sp, #36]	; 0x24
   6d2ec:	ldr	r0, [sp, #36]	; 0x24
   6d2f0:	movw	r2, #0
   6d2f4:	cmp	r2, r0
   6d2f8:	bcs	6d344 <__assert_fail@plt+0x5a78c>
   6d2fc:	ldr	r0, [sp, #40]	; 0x28
   6d300:	cmp	r0, #0
   6d304:	beq	6d328 <__assert_fail@plt+0x5a770>
   6d308:	ldr	r0, [sp, #36]	; 0x24
   6d30c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   6d310:	cmp	r0, r1
   6d314:	bcs	6d328 <__assert_fail@plt+0x5a770>
   6d318:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6d31c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   6d320:	sub	r0, r0, r1
   6d324:	str	r0, [sp, #36]	; 0x24
   6d328:	movw	r0, #0
   6d32c:	str	r0, [sp, #40]	; 0x28
   6d330:	ldr	r0, [sp, #36]	; 0x24
   6d334:	ldr	r1, [fp, #-36]	; 0xffffffdc
   6d338:	add	r0, r1, r0
   6d33c:	str	r0, [fp, #-36]	; 0xffffffdc
   6d340:	b	6d258 <__assert_fail@plt+0x5a6a0>
   6d344:	ldr	r0, [fp, #-44]	; 0xffffffd4
   6d348:	ldr	r1, [sp, #40]	; 0x28
   6d34c:	cmp	r0, r1
   6d350:	bcs	6d360 <__assert_fail@plt+0x5a7a8>
   6d354:	ldr	r0, [sp, #40]	; 0x28
   6d358:	str	r0, [sp, #24]
   6d35c:	b	6d368 <__assert_fail@plt+0x5a7b0>
   6d360:	ldr	r0, [fp, #-44]	; 0xffffffd4
   6d364:	str	r0, [sp, #24]
   6d368:	ldr	r0, [sp, #24]
   6d36c:	str	r0, [fp, #-32]	; 0xffffffe0
   6d370:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6d374:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6d378:	sub	r1, r1, #1
   6d37c:	cmp	r0, r1
   6d380:	movw	r0, #0
   6d384:	str	r0, [sp, #20]
   6d388:	bcs	6d3c4 <__assert_fail@plt+0x5a80c>
   6d38c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6d390:	ldr	r1, [fp, #-32]	; 0xffffffe0
   6d394:	add	r0, r0, r1
   6d398:	ldrb	r0, [r0]
   6d39c:	ldr	r1, [fp, #-16]
   6d3a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   6d3a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   6d3a8:	add	r2, r2, r3
   6d3ac:	add	r1, r1, r2
   6d3b0:	ldrb	r1, [r1]
   6d3b4:	cmp	r0, r1
   6d3b8:	movw	r0, #0
   6d3bc:	moveq	r0, #1
   6d3c0:	str	r0, [sp, #20]
   6d3c4:	ldr	r0, [sp, #20]
   6d3c8:	tst	r0, #1
   6d3cc:	beq	6d3e0 <__assert_fail@plt+0x5a828>
   6d3d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6d3d4:	add	r0, r0, #1
   6d3d8:	str	r0, [fp, #-32]	; 0xffffffe0
   6d3dc:	b	6d370 <__assert_fail@plt+0x5a7b8>
   6d3e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6d3e4:	sub	r0, r0, #1
   6d3e8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   6d3ec:	cmp	r0, r1
   6d3f0:	bhi	6d4c4 <__assert_fail@plt+0x5a90c>
   6d3f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   6d3f8:	sub	r0, r0, #1
   6d3fc:	str	r0, [fp, #-32]	; 0xffffffe0
   6d400:	ldr	r0, [sp, #40]	; 0x28
   6d404:	ldr	r1, [fp, #-32]	; 0xffffffe0
   6d408:	add	r1, r1, #1
   6d40c:	cmp	r0, r1
   6d410:	movw	r0, #0
   6d414:	str	r0, [sp, #16]
   6d418:	bcs	6d454 <__assert_fail@plt+0x5a89c>
   6d41c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6d420:	ldr	r1, [fp, #-32]	; 0xffffffe0
   6d424:	add	r0, r0, r1
   6d428:	ldrb	r0, [r0]
   6d42c:	ldr	r1, [fp, #-16]
   6d430:	ldr	r2, [fp, #-32]	; 0xffffffe0
   6d434:	ldr	r3, [fp, #-36]	; 0xffffffdc
   6d438:	add	r2, r2, r3
   6d43c:	add	r1, r1, r2
   6d440:	ldrb	r1, [r1]
   6d444:	cmp	r0, r1
   6d448:	movw	r0, #0
   6d44c:	moveq	r0, #1
   6d450:	str	r0, [sp, #16]
   6d454:	ldr	r0, [sp, #16]
   6d458:	tst	r0, #1
   6d45c:	beq	6d474 <__assert_fail@plt+0x5a8bc>
   6d460:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6d464:	mvn	r1, #0
   6d468:	add	r0, r0, r1
   6d46c:	str	r0, [fp, #-32]	; 0xffffffe0
   6d470:	b	6d400 <__assert_fail@plt+0x5a848>
   6d474:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6d478:	add	r0, r0, #1
   6d47c:	ldr	r1, [sp, #40]	; 0x28
   6d480:	add	r1, r1, #1
   6d484:	cmp	r0, r1
   6d488:	bcs	6d4a0 <__assert_fail@plt+0x5a8e8>
   6d48c:	ldr	r0, [fp, #-16]
   6d490:	ldr	r1, [fp, #-36]	; 0xffffffdc
   6d494:	add	r0, r0, r1
   6d498:	str	r0, [fp, #-12]
   6d49c:	b	6d754 <__assert_fail@plt+0x5ab9c>
   6d4a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   6d4a4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   6d4a8:	add	r0, r1, r0
   6d4ac:	str	r0, [fp, #-36]	; 0xffffffdc
   6d4b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6d4b4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   6d4b8:	sub	r0, r0, r1
   6d4bc:	str	r0, [sp, #40]	; 0x28
   6d4c0:	b	6d4e8 <__assert_fail@plt+0x5a930>
   6d4c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6d4c8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   6d4cc:	sub	r0, r0, r1
   6d4d0:	add	r0, r0, #1
   6d4d4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   6d4d8:	add	r0, r1, r0
   6d4dc:	str	r0, [fp, #-36]	; 0xffffffdc
   6d4e0:	movw	r0, #0
   6d4e4:	str	r0, [sp, #40]	; 0x28
   6d4e8:	b	6d258 <__assert_fail@plt+0x5a6a0>
   6d4ec:	b	6d74c <__assert_fail@plt+0x5ab94>
   6d4f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   6d4f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6d4f8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   6d4fc:	sub	r1, r1, r2
   6d500:	cmp	r0, r1
   6d504:	bcs	6d51c <__assert_fail@plt+0x5a964>
   6d508:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6d50c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   6d510:	sub	r0, r0, r1
   6d514:	str	r0, [sp, #12]
   6d518:	b	6d524 <__assert_fail@plt+0x5a96c>
   6d51c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   6d520:	str	r0, [sp, #12]
   6d524:	ldr	r0, [sp, #12]
   6d528:	add	r0, r0, #1
   6d52c:	str	r0, [fp, #-40]	; 0xffffffd8
   6d530:	movw	r0, #0
   6d534:	str	r0, [fp, #-36]	; 0xffffffdc
   6d538:	ldr	r0, [fp, #-16]
   6d53c:	ldr	r1, [fp, #-20]	; 0xffffffec
   6d540:	add	r0, r0, r1
   6d544:	ldr	r1, [fp, #-36]	; 0xffffffdc
   6d548:	ldr	r2, [fp, #-28]	; 0xffffffe4
   6d54c:	add	r1, r1, r2
   6d550:	ldr	r2, [fp, #-20]	; 0xffffffec
   6d554:	sub	r2, r1, r2
   6d558:	mov	r1, #0
   6d55c:	bl	1296c <memchr@plt>
   6d560:	movw	r1, #0
   6d564:	cmp	r0, r1
   6d568:	movw	r0, #0
   6d56c:	str	r0, [sp, #8]
   6d570:	bne	6d594 <__assert_fail@plt+0x5a9dc>
   6d574:	ldr	r0, [fp, #-36]	; 0xffffffdc
   6d578:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6d57c:	add	r0, r0, r1
   6d580:	str	r0, [fp, #-20]	; 0xffffffec
   6d584:	cmp	r0, #0
   6d588:	movw	r0, #0
   6d58c:	movne	r0, #1
   6d590:	str	r0, [sp, #8]
   6d594:	ldr	r0, [sp, #8]
   6d598:	tst	r0, #1
   6d59c:	beq	6d748 <__assert_fail@plt+0x5ab90>
   6d5a0:	ldr	r0, [fp, #-16]
   6d5a4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   6d5a8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   6d5ac:	add	r1, r1, r2
   6d5b0:	add	r0, r1, r0
   6d5b4:	ldrb	r0, [r0, #-1]
   6d5b8:	mov	r1, r0
   6d5bc:	add	r2, sp, #44	; 0x2c
   6d5c0:	add	r0, r2, r0, lsl #2
   6d5c4:	ldr	r0, [r0]
   6d5c8:	str	r0, [sp, #32]
   6d5cc:	ldr	r0, [sp, #32]
   6d5d0:	movw	r2, #0
   6d5d4:	cmp	r2, r0
   6d5d8:	bcs	6d5f0 <__assert_fail@plt+0x5aa38>
   6d5dc:	ldr	r0, [sp, #32]
   6d5e0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   6d5e4:	add	r0, r1, r0
   6d5e8:	str	r0, [fp, #-36]	; 0xffffffdc
   6d5ec:	b	6d538 <__assert_fail@plt+0x5a980>
   6d5f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   6d5f4:	str	r0, [fp, #-32]	; 0xffffffe0
   6d5f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6d5fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6d600:	sub	r1, r1, #1
   6d604:	cmp	r0, r1
   6d608:	movw	r0, #0
   6d60c:	str	r0, [sp, #4]
   6d610:	bcs	6d64c <__assert_fail@plt+0x5aa94>
   6d614:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6d618:	ldr	r1, [fp, #-32]	; 0xffffffe0
   6d61c:	add	r0, r0, r1
   6d620:	ldrb	r0, [r0]
   6d624:	ldr	r1, [fp, #-16]
   6d628:	ldr	r2, [fp, #-32]	; 0xffffffe0
   6d62c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   6d630:	add	r2, r2, r3
   6d634:	add	r1, r1, r2
   6d638:	ldrb	r1, [r1]
   6d63c:	cmp	r0, r1
   6d640:	movw	r0, #0
   6d644:	moveq	r0, #1
   6d648:	str	r0, [sp, #4]
   6d64c:	ldr	r0, [sp, #4]
   6d650:	tst	r0, #1
   6d654:	beq	6d668 <__assert_fail@plt+0x5aab0>
   6d658:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6d65c:	add	r0, r0, #1
   6d660:	str	r0, [fp, #-32]	; 0xffffffe0
   6d664:	b	6d5f8 <__assert_fail@plt+0x5aa40>
   6d668:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6d66c:	sub	r0, r0, #1
   6d670:	ldr	r1, [fp, #-32]	; 0xffffffe0
   6d674:	cmp	r0, r1
   6d678:	bhi	6d728 <__assert_fail@plt+0x5ab70>
   6d67c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   6d680:	sub	r0, r0, #1
   6d684:	str	r0, [fp, #-32]	; 0xffffffe0
   6d688:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6d68c:	cmn	r0, #1
   6d690:	movw	r0, #0
   6d694:	str	r0, [sp]
   6d698:	beq	6d6d4 <__assert_fail@plt+0x5ab1c>
   6d69c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6d6a0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   6d6a4:	add	r0, r0, r1
   6d6a8:	ldrb	r0, [r0]
   6d6ac:	ldr	r1, [fp, #-16]
   6d6b0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   6d6b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   6d6b8:	add	r2, r2, r3
   6d6bc:	add	r1, r1, r2
   6d6c0:	ldrb	r1, [r1]
   6d6c4:	cmp	r0, r1
   6d6c8:	movw	r0, #0
   6d6cc:	moveq	r0, #1
   6d6d0:	str	r0, [sp]
   6d6d4:	ldr	r0, [sp]
   6d6d8:	tst	r0, #1
   6d6dc:	beq	6d6f4 <__assert_fail@plt+0x5ab3c>
   6d6e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6d6e4:	mvn	r1, #0
   6d6e8:	add	r0, r0, r1
   6d6ec:	str	r0, [fp, #-32]	; 0xffffffe0
   6d6f0:	b	6d688 <__assert_fail@plt+0x5aad0>
   6d6f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6d6f8:	cmn	r0, #1
   6d6fc:	bne	6d714 <__assert_fail@plt+0x5ab5c>
   6d700:	ldr	r0, [fp, #-16]
   6d704:	ldr	r1, [fp, #-36]	; 0xffffffdc
   6d708:	add	r0, r0, r1
   6d70c:	str	r0, [fp, #-12]
   6d710:	b	6d754 <__assert_fail@plt+0x5ab9c>
   6d714:	ldr	r0, [fp, #-40]	; 0xffffffd8
   6d718:	ldr	r1, [fp, #-36]	; 0xffffffdc
   6d71c:	add	r0, r1, r0
   6d720:	str	r0, [fp, #-36]	; 0xffffffdc
   6d724:	b	6d744 <__assert_fail@plt+0x5ab8c>
   6d728:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6d72c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   6d730:	sub	r0, r0, r1
   6d734:	add	r0, r0, #1
   6d738:	ldr	r1, [fp, #-36]	; 0xffffffdc
   6d73c:	add	r0, r1, r0
   6d740:	str	r0, [fp, #-36]	; 0xffffffdc
   6d744:	b	6d538 <__assert_fail@plt+0x5a980>
   6d748:	b	6d74c <__assert_fail@plt+0x5ab94>
   6d74c:	movw	r0, #0
   6d750:	str	r0, [fp, #-12]
   6d754:	ldr	r0, [fp, #-12]
   6d758:	sub	sp, fp, #8
   6d75c:	pop	{r4, r5, fp, pc}
   6d760:	sub	sp, sp, #40	; 0x28
   6d764:	str	r0, [sp, #32]
   6d768:	str	r1, [sp, #28]
   6d76c:	str	r2, [sp, #24]
   6d770:	ldr	r0, [sp, #28]
   6d774:	cmp	r0, #3
   6d778:	bcs	6d798 <__assert_fail@plt+0x5abe0>
   6d77c:	ldr	r0, [sp, #24]
   6d780:	movw	r1, #1
   6d784:	str	r1, [r0]
   6d788:	ldr	r0, [sp, #28]
   6d78c:	sub	r0, r0, #1
   6d790:	str	r0, [sp, #36]	; 0x24
   6d794:	b	6da14 <__assert_fail@plt+0x5ae5c>
   6d798:	mvn	r0, #0
   6d79c:	str	r0, [sp, #20]
   6d7a0:	movw	r0, #0
   6d7a4:	str	r0, [sp, #12]
   6d7a8:	movw	r0, #1
   6d7ac:	str	r0, [sp, #4]
   6d7b0:	str	r0, [sp, #8]
   6d7b4:	ldr	r0, [sp, #12]
   6d7b8:	ldr	r1, [sp, #8]
   6d7bc:	add	r0, r0, r1
   6d7c0:	ldr	r1, [sp, #28]
   6d7c4:	cmp	r0, r1
   6d7c8:	bcs	6d8b0 <__assert_fail@plt+0x5acf8>
   6d7cc:	ldr	r0, [sp, #32]
   6d7d0:	ldr	r1, [sp, #12]
   6d7d4:	ldr	r2, [sp, #8]
   6d7d8:	add	r1, r1, r2
   6d7dc:	add	r0, r0, r1
   6d7e0:	ldrb	r0, [r0]
   6d7e4:	strb	r0, [sp, #3]
   6d7e8:	ldr	r0, [sp, #32]
   6d7ec:	ldr	r1, [sp, #20]
   6d7f0:	ldr	r2, [sp, #8]
   6d7f4:	add	r1, r1, r2
   6d7f8:	add	r0, r0, r1
   6d7fc:	ldrb	r0, [r0]
   6d800:	strb	r0, [sp, #2]
   6d804:	ldrb	r0, [sp, #3]
   6d808:	ldrb	r1, [sp, #2]
   6d80c:	cmp	r0, r1
   6d810:	bge	6d840 <__assert_fail@plt+0x5ac88>
   6d814:	ldr	r0, [sp, #8]
   6d818:	ldr	r1, [sp, #12]
   6d81c:	add	r0, r1, r0
   6d820:	str	r0, [sp, #12]
   6d824:	movw	r0, #1
   6d828:	str	r0, [sp, #8]
   6d82c:	ldr	r0, [sp, #12]
   6d830:	ldr	r1, [sp, #20]
   6d834:	sub	r0, r0, r1
   6d838:	str	r0, [sp, #4]
   6d83c:	b	6d8ac <__assert_fail@plt+0x5acf4>
   6d840:	ldrb	r0, [sp, #3]
   6d844:	ldrb	r1, [sp, #2]
   6d848:	cmp	r0, r1
   6d84c:	bne	6d88c <__assert_fail@plt+0x5acd4>
   6d850:	ldr	r0, [sp, #8]
   6d854:	ldr	r1, [sp, #4]
   6d858:	cmp	r0, r1
   6d85c:	beq	6d870 <__assert_fail@plt+0x5acb8>
   6d860:	ldr	r0, [sp, #8]
   6d864:	add	r0, r0, #1
   6d868:	str	r0, [sp, #8]
   6d86c:	b	6d888 <__assert_fail@plt+0x5acd0>
   6d870:	ldr	r0, [sp, #4]
   6d874:	ldr	r1, [sp, #12]
   6d878:	add	r0, r1, r0
   6d87c:	str	r0, [sp, #12]
   6d880:	movw	r0, #1
   6d884:	str	r0, [sp, #8]
   6d888:	b	6d8a8 <__assert_fail@plt+0x5acf0>
   6d88c:	ldr	r0, [sp, #12]
   6d890:	add	r1, r0, #1
   6d894:	str	r1, [sp, #12]
   6d898:	str	r0, [sp, #20]
   6d89c:	movw	r0, #1
   6d8a0:	str	r0, [sp, #4]
   6d8a4:	str	r0, [sp, #8]
   6d8a8:	b	6d8ac <__assert_fail@plt+0x5acf4>
   6d8ac:	b	6d7b4 <__assert_fail@plt+0x5abfc>
   6d8b0:	ldr	r0, [sp, #4]
   6d8b4:	ldr	r1, [sp, #24]
   6d8b8:	str	r0, [r1]
   6d8bc:	mvn	r0, #0
   6d8c0:	str	r0, [sp, #16]
   6d8c4:	movw	r0, #0
   6d8c8:	str	r0, [sp, #12]
   6d8cc:	movw	r0, #1
   6d8d0:	str	r0, [sp, #4]
   6d8d4:	str	r0, [sp, #8]
   6d8d8:	ldr	r0, [sp, #12]
   6d8dc:	ldr	r1, [sp, #8]
   6d8e0:	add	r0, r0, r1
   6d8e4:	ldr	r1, [sp, #28]
   6d8e8:	cmp	r0, r1
   6d8ec:	bcs	6d9d4 <__assert_fail@plt+0x5ae1c>
   6d8f0:	ldr	r0, [sp, #32]
   6d8f4:	ldr	r1, [sp, #12]
   6d8f8:	ldr	r2, [sp, #8]
   6d8fc:	add	r1, r1, r2
   6d900:	add	r0, r0, r1
   6d904:	ldrb	r0, [r0]
   6d908:	strb	r0, [sp, #3]
   6d90c:	ldr	r0, [sp, #32]
   6d910:	ldr	r1, [sp, #16]
   6d914:	ldr	r2, [sp, #8]
   6d918:	add	r1, r1, r2
   6d91c:	add	r0, r0, r1
   6d920:	ldrb	r0, [r0]
   6d924:	strb	r0, [sp, #2]
   6d928:	ldrb	r0, [sp, #2]
   6d92c:	ldrb	r1, [sp, #3]
   6d930:	cmp	r0, r1
   6d934:	bge	6d964 <__assert_fail@plt+0x5adac>
   6d938:	ldr	r0, [sp, #8]
   6d93c:	ldr	r1, [sp, #12]
   6d940:	add	r0, r1, r0
   6d944:	str	r0, [sp, #12]
   6d948:	movw	r0, #1
   6d94c:	str	r0, [sp, #8]
   6d950:	ldr	r0, [sp, #12]
   6d954:	ldr	r1, [sp, #16]
   6d958:	sub	r0, r0, r1
   6d95c:	str	r0, [sp, #4]
   6d960:	b	6d9d0 <__assert_fail@plt+0x5ae18>
   6d964:	ldrb	r0, [sp, #3]
   6d968:	ldrb	r1, [sp, #2]
   6d96c:	cmp	r0, r1
   6d970:	bne	6d9b0 <__assert_fail@plt+0x5adf8>
   6d974:	ldr	r0, [sp, #8]
   6d978:	ldr	r1, [sp, #4]
   6d97c:	cmp	r0, r1
   6d980:	beq	6d994 <__assert_fail@plt+0x5addc>
   6d984:	ldr	r0, [sp, #8]
   6d988:	add	r0, r0, #1
   6d98c:	str	r0, [sp, #8]
   6d990:	b	6d9ac <__assert_fail@plt+0x5adf4>
   6d994:	ldr	r0, [sp, #4]
   6d998:	ldr	r1, [sp, #12]
   6d99c:	add	r0, r1, r0
   6d9a0:	str	r0, [sp, #12]
   6d9a4:	movw	r0, #1
   6d9a8:	str	r0, [sp, #8]
   6d9ac:	b	6d9cc <__assert_fail@plt+0x5ae14>
   6d9b0:	ldr	r0, [sp, #12]
   6d9b4:	add	r1, r0, #1
   6d9b8:	str	r1, [sp, #12]
   6d9bc:	str	r0, [sp, #16]
   6d9c0:	movw	r0, #1
   6d9c4:	str	r0, [sp, #4]
   6d9c8:	str	r0, [sp, #8]
   6d9cc:	b	6d9d0 <__assert_fail@plt+0x5ae18>
   6d9d0:	b	6d8d8 <__assert_fail@plt+0x5ad20>
   6d9d4:	ldr	r0, [sp, #16]
   6d9d8:	add	r0, r0, #1
   6d9dc:	ldr	r1, [sp, #20]
   6d9e0:	add	r1, r1, #1
   6d9e4:	cmp	r0, r1
   6d9e8:	bcs	6d9fc <__assert_fail@plt+0x5ae44>
   6d9ec:	ldr	r0, [sp, #20]
   6d9f0:	add	r0, r0, #1
   6d9f4:	str	r0, [sp, #36]	; 0x24
   6d9f8:	b	6da14 <__assert_fail@plt+0x5ae5c>
   6d9fc:	ldr	r0, [sp, #4]
   6da00:	ldr	r1, [sp, #24]
   6da04:	str	r0, [r1]
   6da08:	ldr	r0, [sp, #16]
   6da0c:	add	r0, r0, #1
   6da10:	str	r0, [sp, #36]	; 0x24
   6da14:	ldr	r0, [sp, #36]	; 0x24
   6da18:	add	sp, sp, #40	; 0x28
   6da1c:	bx	lr
   6da20:	push	{fp, lr}
   6da24:	mov	fp, sp
   6da28:	sub	sp, sp, #24
   6da2c:	str	r0, [fp, #-4]
   6da30:	ldr	r0, [fp, #-4]
   6da34:	movw	r1, #0
   6da38:	cmp	r0, r1
   6da3c:	beq	6da54 <__assert_fail@plt+0x5ae9c>
   6da40:	ldr	r0, [fp, #-4]
   6da44:	bl	12888 <strlen@plt>
   6da48:	add	r0, r0, #1
   6da4c:	str	r0, [sp, #4]
   6da50:	b	6da60 <__assert_fail@plt+0x5aea8>
   6da54:	movw	r0, #0
   6da58:	str	r0, [sp, #4]
   6da5c:	b	6da60 <__assert_fail@plt+0x5aea8>
   6da60:	ldr	r0, [sp, #4]
   6da64:	str	r0, [fp, #-8]
   6da68:	ldr	r0, [fp, #-8]
   6da6c:	cmp	r0, #59	; 0x3b
   6da70:	bcs	6da80 <__assert_fail@plt+0x5aec8>
   6da74:	movw	r0, #59	; 0x3b
   6da78:	str	r0, [sp]
   6da7c:	b	6da8c <__assert_fail@plt+0x5aed4>
   6da80:	ldr	r0, [fp, #-8]
   6da84:	add	r0, r0, #1
   6da88:	str	r0, [sp]
   6da8c:	ldr	r0, [sp]
   6da90:	str	r0, [sp, #12]
   6da94:	ldr	r0, [sp, #12]
   6da98:	add	r0, r0, #8
   6da9c:	mvn	r1, #3
   6daa0:	and	r0, r0, r1
   6daa4:	bl	527f0 <__assert_fail@plt+0x3fc38>
   6daa8:	str	r0, [sp, #8]
   6daac:	ldr	r0, [sp, #8]
   6dab0:	movw	r1, #0
   6dab4:	cmp	r0, r1
   6dab8:	beq	6db20 <__assert_fail@plt+0x5af68>
   6dabc:	ldr	r0, [sp, #8]
   6dac0:	movw	r1, #0
   6dac4:	str	r1, [r0]
   6dac8:	ldr	r0, [fp, #-4]
   6dacc:	cmp	r0, r1
   6dad0:	movw	r0, #0
   6dad4:	movne	r0, #1
   6dad8:	mvn	r2, #0
   6dadc:	eor	r0, r0, r2
   6dae0:	eor	r0, r0, r2
   6dae4:	and	r0, r0, #1
   6dae8:	ldr	r2, [sp, #8]
   6daec:	strb	r0, [r2, #4]
   6daf0:	ldr	r0, [sp, #8]
   6daf4:	movw	r2, #0
   6daf8:	strb	r2, [r0, #5]
   6dafc:	ldr	r0, [fp, #-4]
   6db00:	cmp	r0, r1
   6db04:	beq	6db1c <__assert_fail@plt+0x5af64>
   6db08:	ldr	r0, [sp, #8]
   6db0c:	add	r0, r0, #5
   6db10:	ldr	r1, [fp, #-4]
   6db14:	ldr	r2, [fp, #-8]
   6db18:	bl	6db2c <__assert_fail@plt+0x5af74>
   6db1c:	b	6db20 <__assert_fail@plt+0x5af68>
   6db20:	ldr	r0, [sp, #8]
   6db24:	mov	sp, fp
   6db28:	pop	{fp, pc}
   6db2c:	push	{fp, lr}
   6db30:	mov	fp, sp
   6db34:	sub	sp, sp, #16
   6db38:	str	r0, [fp, #-4]
   6db3c:	str	r1, [sp, #8]
   6db40:	str	r2, [sp, #4]
   6db44:	ldr	r0, [fp, #-4]
   6db48:	ldr	r1, [sp, #8]
   6db4c:	ldr	r2, [sp, #4]
   6db50:	bl	125c4 <memcpy@plt>
   6db54:	ldr	r0, [fp, #-4]
   6db58:	ldr	r1, [sp, #4]
   6db5c:	add	r0, r0, r1
   6db60:	movw	r1, #0
   6db64:	strb	r1, [r0]
   6db68:	mov	sp, fp
   6db6c:	pop	{fp, pc}
   6db70:	push	{fp, lr}
   6db74:	mov	fp, sp
   6db78:	sub	sp, sp, #8
   6db7c:	str	r0, [sp, #4]
   6db80:	ldr	r0, [sp, #4]
   6db84:	movw	r1, #1
   6db88:	cmp	r0, r1
   6db8c:	beq	6dbc8 <__assert_fail@plt+0x5b010>
   6db90:	b	6db94 <__assert_fail@plt+0x5afdc>
   6db94:	ldr	r0, [sp, #4]
   6db98:	movw	r1, #0
   6db9c:	cmp	r0, r1
   6dba0:	beq	6dbc4 <__assert_fail@plt+0x5b00c>
   6dba4:	ldr	r0, [sp, #4]
   6dba8:	ldr	r0, [r0]
   6dbac:	str	r0, [sp]
   6dbb0:	ldr	r0, [sp, #4]
   6dbb4:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   6dbb8:	ldr	r0, [sp]
   6dbbc:	str	r0, [sp, #4]
   6dbc0:	b	6db94 <__assert_fail@plt+0x5afdc>
   6dbc4:	b	6dbc8 <__assert_fail@plt+0x5b010>
   6dbc8:	mov	sp, fp
   6dbcc:	pop	{fp, pc}
   6dbd0:	push	{fp, lr}
   6dbd4:	mov	fp, sp
   6dbd8:	sub	sp, sp, #32
   6dbdc:	str	r0, [fp, #-8]
   6dbe0:	str	r1, [fp, #-12]
   6dbe4:	str	r2, [sp, #16]
   6dbe8:	ldr	r0, [fp, #-8]
   6dbec:	movw	r1, #0
   6dbf0:	cmp	r0, r1
   6dbf4:	bne	6dc0c <__assert_fail@plt+0x5b054>
   6dbf8:	ldr	r0, [fp, #-12]
   6dbfc:	ldr	r1, [sp, #16]
   6dc00:	bl	12498 <gmtime_r@plt>
   6dc04:	str	r0, [fp, #-4]
   6dc08:	b	6dc98 <__assert_fail@plt+0x5b0e0>
   6dc0c:	ldr	r0, [fp, #-8]
   6dc10:	bl	6dca4 <__assert_fail@plt+0x5b0ec>
   6dc14:	str	r0, [sp, #12]
   6dc18:	ldr	r0, [sp, #12]
   6dc1c:	movw	r1, #0
   6dc20:	cmp	r0, r1
   6dc24:	beq	6dc90 <__assert_fail@plt+0x5b0d8>
   6dc28:	ldr	r0, [fp, #-12]
   6dc2c:	ldr	r1, [sp, #16]
   6dc30:	bl	12684 <localtime_r@plt>
   6dc34:	movw	r1, #0
   6dc38:	cmp	r0, r1
   6dc3c:	movw	r0, #0
   6dc40:	str	r0, [sp, #4]
   6dc44:	beq	6dc58 <__assert_fail@plt+0x5b0a0>
   6dc48:	ldr	r0, [fp, #-8]
   6dc4c:	ldr	r1, [sp, #16]
   6dc50:	bl	6dd94 <__assert_fail@plt+0x5b1dc>
   6dc54:	str	r0, [sp, #4]
   6dc58:	ldr	r0, [sp, #4]
   6dc5c:	and	r0, r0, #1
   6dc60:	strb	r0, [sp, #11]
   6dc64:	ldr	r0, [sp, #12]
   6dc68:	bl	6df84 <__assert_fail@plt+0x5b3cc>
   6dc6c:	tst	r0, #1
   6dc70:	beq	6dc8c <__assert_fail@plt+0x5b0d4>
   6dc74:	ldrb	r0, [sp, #11]
   6dc78:	tst	r0, #1
   6dc7c:	beq	6dc8c <__assert_fail@plt+0x5b0d4>
   6dc80:	ldr	r0, [sp, #16]
   6dc84:	str	r0, [fp, #-4]
   6dc88:	b	6dc98 <__assert_fail@plt+0x5b0e0>
   6dc8c:	b	6dc90 <__assert_fail@plt+0x5b0d8>
   6dc90:	movw	r0, #0
   6dc94:	str	r0, [fp, #-4]
   6dc98:	ldr	r0, [fp, #-4]
   6dc9c:	mov	sp, fp
   6dca0:	pop	{fp, pc}
   6dca4:	push	{fp, lr}
   6dca8:	mov	fp, sp
   6dcac:	sub	sp, sp, #24
   6dcb0:	str	r0, [fp, #-8]
   6dcb4:	bl	6e174 <__assert_fail@plt+0x5b5bc>
   6dcb8:	str	r0, [sp, #12]
   6dcbc:	ldr	r0, [sp, #12]
   6dcc0:	movw	r1, #0
   6dcc4:	cmp	r0, r1
   6dcc8:	beq	6dcf8 <__assert_fail@plt+0x5b140>
   6dccc:	ldr	r0, [fp, #-8]
   6dcd0:	ldrb	r0, [r0, #4]
   6dcd4:	cmp	r0, #0
   6dcd8:	beq	6dd14 <__assert_fail@plt+0x5b15c>
   6dcdc:	ldr	r0, [fp, #-8]
   6dce0:	add	r0, r0, #5
   6dce4:	ldr	r1, [sp, #12]
   6dce8:	bl	124c8 <strcmp@plt>
   6dcec:	cmp	r0, #0
   6dcf0:	beq	6dd08 <__assert_fail@plt+0x5b150>
   6dcf4:	b	6dd14 <__assert_fail@plt+0x5b15c>
   6dcf8:	ldr	r0, [fp, #-8]
   6dcfc:	ldrsb	r0, [r0, #4]
   6dd00:	cmp	r0, #0
   6dd04:	bne	6dd14 <__assert_fail@plt+0x5b15c>
   6dd08:	movw	r0, #1
   6dd0c:	str	r0, [fp, #-4]
   6dd10:	b	6dd88 <__assert_fail@plt+0x5b1d0>
   6dd14:	ldr	r0, [sp, #12]
   6dd18:	bl	6da20 <__assert_fail@plt+0x5ae68>
   6dd1c:	str	r0, [sp, #8]
   6dd20:	ldr	r0, [sp, #8]
   6dd24:	movw	r1, #0
   6dd28:	cmp	r0, r1
   6dd2c:	bne	6dd3c <__assert_fail@plt+0x5b184>
   6dd30:	ldr	r0, [sp, #8]
   6dd34:	str	r0, [fp, #-4]
   6dd38:	b	6dd88 <__assert_fail@plt+0x5b1d0>
   6dd3c:	ldr	r0, [fp, #-8]
   6dd40:	bl	6e18c <__assert_fail@plt+0x5b5d4>
   6dd44:	tst	r0, #1
   6dd48:	bne	6dd80 <__assert_fail@plt+0x5b1c8>
   6dd4c:	bl	128d0 <__errno_location@plt>
   6dd50:	ldr	r0, [r0]
   6dd54:	str	r0, [sp, #4]
   6dd58:	ldr	r0, [sp, #8]
   6dd5c:	bl	6db70 <__assert_fail@plt+0x5afb8>
   6dd60:	ldr	r0, [sp, #4]
   6dd64:	str	r0, [sp]
   6dd68:	bl	128d0 <__errno_location@plt>
   6dd6c:	ldr	r1, [sp]
   6dd70:	str	r1, [r0]
   6dd74:	movw	r0, #0
   6dd78:	str	r0, [fp, #-4]
   6dd7c:	b	6dd88 <__assert_fail@plt+0x5b1d0>
   6dd80:	ldr	r0, [sp, #8]
   6dd84:	str	r0, [fp, #-4]
   6dd88:	ldr	r0, [fp, #-4]
   6dd8c:	mov	sp, fp
   6dd90:	pop	{fp, pc}
   6dd94:	push	{fp, lr}
   6dd98:	mov	fp, sp
   6dd9c:	sub	sp, sp, #24
   6dda0:	str	r0, [fp, #-8]
   6dda4:	str	r1, [sp, #12]
   6dda8:	movw	r0, #0
   6ddac:	str	r0, [sp, #8]
   6ddb0:	movw	r1, #29909	; 0x74d5
   6ddb4:	movt	r1, #7
   6ddb8:	str	r1, [sp, #4]
   6ddbc:	ldr	r1, [sp, #12]
   6ddc0:	ldr	r1, [r1, #40]	; 0x28
   6ddc4:	str	r1, [sp, #8]
   6ddc8:	ldr	r1, [sp, #8]
   6ddcc:	cmp	r1, r0
   6ddd0:	beq	6ddf8 <__assert_fail@plt+0x5b240>
   6ddd4:	ldr	r0, [sp, #12]
   6ddd8:	ldr	r1, [sp, #8]
   6dddc:	cmp	r0, r1
   6dde0:	bhi	6de08 <__assert_fail@plt+0x5b250>
   6dde4:	ldr	r0, [sp, #8]
   6dde8:	ldr	r1, [sp, #12]
   6ddec:	add	r1, r1, #44	; 0x2c
   6ddf0:	cmp	r0, r1
   6ddf4:	bcs	6de08 <__assert_fail@plt+0x5b250>
   6ddf8:	movw	r0, #1
   6ddfc:	and	r0, r0, #1
   6de00:	strb	r0, [fp, #-1]
   6de04:	b	6df74 <__assert_fail@plt+0x5b3bc>
   6de08:	ldr	r0, [sp, #8]
   6de0c:	ldrsb	r0, [r0]
   6de10:	cmp	r0, #0
   6de14:	beq	6df5c <__assert_fail@plt+0x5b3a4>
   6de18:	ldr	r0, [fp, #-8]
   6de1c:	add	r0, r0, #5
   6de20:	str	r0, [sp, #4]
   6de24:	ldr	r0, [sp, #4]
   6de28:	ldr	r1, [sp, #8]
   6de2c:	bl	124c8 <strcmp@plt>
   6de30:	cmp	r0, #0
   6de34:	beq	6df58 <__assert_fail@plt+0x5b3a0>
   6de38:	ldr	r0, [sp, #4]
   6de3c:	ldrb	r0, [r0]
   6de40:	cmp	r0, #0
   6de44:	bne	6df00 <__assert_fail@plt+0x5b348>
   6de48:	ldr	r0, [sp, #4]
   6de4c:	ldr	r1, [fp, #-8]
   6de50:	add	r1, r1, #5
   6de54:	cmp	r0, r1
   6de58:	bne	6de6c <__assert_fail@plt+0x5b2b4>
   6de5c:	ldr	r0, [fp, #-8]
   6de60:	ldrb	r0, [r0, #4]
   6de64:	cmp	r0, #0
   6de68:	bne	6df00 <__assert_fail@plt+0x5b348>
   6de6c:	ldr	r0, [sp, #8]
   6de70:	bl	12888 <strlen@plt>
   6de74:	add	r0, r0, #1
   6de78:	str	r0, [sp]
   6de7c:	ldr	r0, [sp]
   6de80:	ldr	r1, [fp, #-8]
   6de84:	add	r1, r1, #5
   6de88:	add	r1, r1, #59	; 0x3b
   6de8c:	ldr	r2, [sp, #4]
   6de90:	sub	r1, r1, r2
   6de94:	cmp	r0, r1
   6de98:	bge	6deb0 <__assert_fail@plt+0x5b2f8>
   6de9c:	ldr	r0, [sp, #4]
   6dea0:	ldr	r1, [sp, #8]
   6dea4:	ldr	r2, [sp]
   6dea8:	bl	6db2c <__assert_fail@plt+0x5af74>
   6deac:	b	6defc <__assert_fail@plt+0x5b344>
   6deb0:	ldr	r0, [sp, #8]
   6deb4:	bl	6da20 <__assert_fail@plt+0x5ae68>
   6deb8:	ldr	r1, [fp, #-8]
   6debc:	str	r0, [r1]
   6dec0:	str	r0, [fp, #-8]
   6dec4:	ldr	r0, [fp, #-8]
   6dec8:	movw	r1, #0
   6decc:	cmp	r0, r1
   6ded0:	bne	6dee4 <__assert_fail@plt+0x5b32c>
   6ded4:	movw	r0, #0
   6ded8:	and	r0, r0, #1
   6dedc:	strb	r0, [fp, #-1]
   6dee0:	b	6df74 <__assert_fail@plt+0x5b3bc>
   6dee4:	ldr	r0, [fp, #-8]
   6dee8:	movw	r1, #0
   6deec:	strb	r1, [r0, #4]
   6def0:	ldr	r0, [fp, #-8]
   6def4:	add	r0, r0, #5
   6def8:	str	r0, [sp, #4]
   6defc:	b	6df58 <__assert_fail@plt+0x5b3a0>
   6df00:	ldr	r0, [sp, #4]
   6df04:	bl	12888 <strlen@plt>
   6df08:	add	r0, r0, #1
   6df0c:	ldr	r1, [sp, #4]
   6df10:	add	r0, r1, r0
   6df14:	str	r0, [sp, #4]
   6df18:	ldr	r0, [sp, #4]
   6df1c:	ldrsb	r0, [r0]
   6df20:	cmp	r0, #0
   6df24:	bne	6df54 <__assert_fail@plt+0x5b39c>
   6df28:	ldr	r0, [fp, #-8]
   6df2c:	ldr	r0, [r0]
   6df30:	movw	r1, #0
   6df34:	cmp	r0, r1
   6df38:	beq	6df54 <__assert_fail@plt+0x5b39c>
   6df3c:	ldr	r0, [fp, #-8]
   6df40:	ldr	r0, [r0]
   6df44:	str	r0, [fp, #-8]
   6df48:	ldr	r0, [fp, #-8]
   6df4c:	add	r0, r0, #5
   6df50:	str	r0, [sp, #4]
   6df54:	b	6de24 <__assert_fail@plt+0x5b26c>
   6df58:	b	6df5c <__assert_fail@plt+0x5b3a4>
   6df5c:	ldr	r0, [sp, #4]
   6df60:	ldr	r1, [sp, #12]
   6df64:	str	r0, [r1, #40]	; 0x28
   6df68:	movw	r0, #1
   6df6c:	and	r0, r0, #1
   6df70:	strb	r0, [fp, #-1]
   6df74:	ldrb	r0, [fp, #-1]
   6df78:	and	r0, r0, #1
   6df7c:	mov	sp, fp
   6df80:	pop	{fp, pc}
   6df84:	push	{fp, lr}
   6df88:	mov	fp, sp
   6df8c:	sub	sp, sp, #24
   6df90:	str	r0, [fp, #-8]
   6df94:	ldr	r0, [fp, #-8]
   6df98:	movw	r1, #1
   6df9c:	cmp	r0, r1
   6dfa0:	bne	6dfb4 <__assert_fail@plt+0x5b3fc>
   6dfa4:	movw	r0, #1
   6dfa8:	and	r0, r0, #1
   6dfac:	strb	r0, [fp, #-1]
   6dfb0:	b	6e010 <__assert_fail@plt+0x5b458>
   6dfb4:	bl	128d0 <__errno_location@plt>
   6dfb8:	ldr	r0, [r0]
   6dfbc:	str	r0, [sp, #12]
   6dfc0:	ldr	r0, [fp, #-8]
   6dfc4:	bl	6e18c <__assert_fail@plt+0x5b5d4>
   6dfc8:	and	r0, r0, #1
   6dfcc:	strb	r0, [sp, #11]
   6dfd0:	ldrb	r0, [sp, #11]
   6dfd4:	tst	r0, #1
   6dfd8:	bne	6dfe8 <__assert_fail@plt+0x5b430>
   6dfdc:	bl	128d0 <__errno_location@plt>
   6dfe0:	ldr	r0, [r0]
   6dfe4:	str	r0, [sp, #12]
   6dfe8:	ldr	r0, [fp, #-8]
   6dfec:	bl	6db70 <__assert_fail@plt+0x5afb8>
   6dff0:	ldr	r0, [sp, #12]
   6dff4:	str	r0, [sp, #4]
   6dff8:	bl	128d0 <__errno_location@plt>
   6dffc:	ldr	r1, [sp, #4]
   6e000:	str	r1, [r0]
   6e004:	ldrb	r0, [sp, #11]
   6e008:	and	r0, r0, #1
   6e00c:	strb	r0, [fp, #-1]
   6e010:	ldrb	r0, [fp, #-1]
   6e014:	and	r0, r0, #1
   6e018:	mov	sp, fp
   6e01c:	pop	{fp, pc}
   6e020:	push	{fp, lr}
   6e024:	mov	fp, sp
   6e028:	sub	sp, sp, #72	; 0x48
   6e02c:	str	r0, [fp, #-8]
   6e030:	str	r1, [fp, #-12]
   6e034:	ldr	r0, [fp, #-8]
   6e038:	movw	r1, #0
   6e03c:	cmp	r0, r1
   6e040:	bne	6e054 <__assert_fail@plt+0x5b49c>
   6e044:	ldr	r0, [fp, #-12]
   6e048:	bl	12a80 <timegm@plt>
   6e04c:	str	r0, [fp, #-4]
   6e050:	b	6e168 <__assert_fail@plt+0x5b5b0>
   6e054:	ldr	r0, [fp, #-8]
   6e058:	bl	6dca4 <__assert_fail@plt+0x5b0ec>
   6e05c:	str	r0, [fp, #-16]
   6e060:	ldr	r0, [fp, #-16]
   6e064:	movw	r1, #0
   6e068:	cmp	r0, r1
   6e06c:	beq	6e160 <__assert_fail@plt+0x5b5a8>
   6e070:	ldr	r0, [fp, #-12]
   6e074:	ldr	r0, [r0]
   6e078:	str	r0, [sp, #12]
   6e07c:	ldr	r0, [fp, #-12]
   6e080:	ldr	r0, [r0, #4]
   6e084:	str	r0, [sp, #16]
   6e088:	ldr	r0, [fp, #-12]
   6e08c:	ldr	r0, [r0, #8]
   6e090:	str	r0, [sp, #20]
   6e094:	ldr	r0, [fp, #-12]
   6e098:	ldr	r0, [r0, #12]
   6e09c:	str	r0, [sp, #24]
   6e0a0:	ldr	r0, [fp, #-12]
   6e0a4:	ldr	r0, [r0, #16]
   6e0a8:	str	r0, [sp, #28]
   6e0ac:	ldr	r0, [fp, #-12]
   6e0b0:	ldr	r0, [r0, #20]
   6e0b4:	str	r0, [sp, #32]
   6e0b8:	mvn	r0, #0
   6e0bc:	str	r0, [sp, #40]	; 0x28
   6e0c0:	ldr	r0, [fp, #-12]
   6e0c4:	ldr	r0, [r0, #32]
   6e0c8:	str	r0, [sp, #44]	; 0x2c
   6e0cc:	add	r0, sp, #12
   6e0d0:	bl	1251c <mktime@plt>
   6e0d4:	str	r0, [sp, #8]
   6e0d8:	ldr	r0, [sp, #40]	; 0x28
   6e0dc:	movw	r1, #0
   6e0e0:	cmp	r1, r0
   6e0e4:	movw	r0, #0
   6e0e8:	movle	r0, #1
   6e0ec:	and	r0, r0, #1
   6e0f0:	strb	r0, [sp, #7]
   6e0f4:	ldrb	r0, [sp, #7]
   6e0f8:	tst	r0, #1
   6e0fc:	movw	r0, #0
   6e100:	str	r0, [sp]
   6e104:	beq	6e118 <__assert_fail@plt+0x5b560>
   6e108:	ldr	r0, [fp, #-8]
   6e10c:	add	r1, sp, #12
   6e110:	bl	6dd94 <__assert_fail@plt+0x5b1dc>
   6e114:	str	r0, [sp]
   6e118:	ldr	r0, [sp]
   6e11c:	and	r0, r0, #1
   6e120:	strb	r0, [sp, #7]
   6e124:	ldr	r0, [fp, #-16]
   6e128:	bl	6df84 <__assert_fail@plt+0x5b3cc>
   6e12c:	tst	r0, #1
   6e130:	beq	6e15c <__assert_fail@plt+0x5b5a4>
   6e134:	ldrb	r0, [sp, #7]
   6e138:	tst	r0, #1
   6e13c:	beq	6e15c <__assert_fail@plt+0x5b5a4>
   6e140:	ldr	r0, [fp, #-12]
   6e144:	add	r1, sp, #12
   6e148:	movw	r2, #44	; 0x2c
   6e14c:	bl	125c4 <memcpy@plt>
   6e150:	ldr	r0, [sp, #8]
   6e154:	str	r0, [fp, #-4]
   6e158:	b	6e168 <__assert_fail@plt+0x5b5b0>
   6e15c:	b	6e160 <__assert_fail@plt+0x5b5a8>
   6e160:	mvn	r0, #0
   6e164:	str	r0, [fp, #-4]
   6e168:	ldr	r0, [fp, #-4]
   6e16c:	mov	sp, fp
   6e170:	pop	{fp, pc}
   6e174:	push	{fp, lr}
   6e178:	mov	fp, sp
   6e17c:	movw	r0, #44520	; 0xade8
   6e180:	movt	r0, #7
   6e184:	bl	127bc <getenv@plt>
   6e188:	pop	{fp, pc}
   6e18c:	push	{fp, lr}
   6e190:	mov	fp, sp
   6e194:	sub	sp, sp, #16
   6e198:	str	r0, [sp, #8]
   6e19c:	ldr	r0, [sp, #8]
   6e1a0:	ldrb	r0, [r0, #4]
   6e1a4:	cmp	r0, #0
   6e1a8:	beq	6e1bc <__assert_fail@plt+0x5b604>
   6e1ac:	ldr	r0, [sp, #8]
   6e1b0:	add	r0, r0, #5
   6e1b4:	str	r0, [sp, #4]
   6e1b8:	b	6e1c8 <__assert_fail@plt+0x5b610>
   6e1bc:	movw	r0, #0
   6e1c0:	str	r0, [sp, #4]
   6e1c4:	b	6e1c8 <__assert_fail@plt+0x5b610>
   6e1c8:	ldr	r0, [sp, #4]
   6e1cc:	bl	6e208 <__assert_fail@plt+0x5b650>
   6e1d0:	cmp	r0, #0
   6e1d4:	beq	6e1e8 <__assert_fail@plt+0x5b630>
   6e1d8:	movw	r0, #0
   6e1dc:	and	r0, r0, #1
   6e1e0:	strb	r0, [fp, #-1]
   6e1e4:	b	6e1f8 <__assert_fail@plt+0x5b640>
   6e1e8:	bl	126cc <tzset@plt>
   6e1ec:	movw	r0, #1
   6e1f0:	and	r0, r0, #1
   6e1f4:	strb	r0, [fp, #-1]
   6e1f8:	ldrb	r0, [fp, #-1]
   6e1fc:	and	r0, r0, #1
   6e200:	mov	sp, fp
   6e204:	pop	{fp, pc}
   6e208:	push	{fp, lr}
   6e20c:	mov	fp, sp
   6e210:	sub	sp, sp, #8
   6e214:	str	r0, [sp, #4]
   6e218:	ldr	r0, [sp, #4]
   6e21c:	movw	r1, #0
   6e220:	cmp	r0, r1
   6e224:	beq	6e244 <__assert_fail@plt+0x5b68c>
   6e228:	ldr	r1, [sp, #4]
   6e22c:	movw	r0, #44520	; 0xade8
   6e230:	movt	r0, #7
   6e234:	movw	r2, #1
   6e238:	bl	128a0 <setenv@plt>
   6e23c:	str	r0, [sp]
   6e240:	b	6e254 <__assert_fail@plt+0x5b69c>
   6e244:	movw	r0, #44520	; 0xade8
   6e248:	movt	r0, #7
   6e24c:	bl	12b34 <unsetenv@plt>
   6e250:	str	r0, [sp]
   6e254:	ldr	r0, [sp]
   6e258:	mov	sp, fp
   6e25c:	pop	{fp, pc}
   6e260:	push	{fp, lr}
   6e264:	mov	fp, sp
   6e268:	movw	r0, #54988	; 0xd6cc
   6e26c:	movt	r0, #8
   6e270:	ldr	r0, [r0]
   6e274:	bl	1284c <exit@plt>
   6e278:	push	{fp, lr}
   6e27c:	mov	fp, sp
   6e280:	sub	sp, sp, #40	; 0x28
   6e284:	str	r0, [fp, #-8]
   6e288:	str	r1, [fp, #-12]
   6e28c:	str	r2, [fp, #-16]
   6e290:	str	r3, [sp, #20]
   6e294:	mvn	r0, #0
   6e298:	str	r0, [sp, #8]
   6e29c:	movw	r0, #0
   6e2a0:	strb	r0, [sp, #7]
   6e2a4:	ldr	r0, [fp, #-8]
   6e2a8:	bl	12888 <strlen@plt>
   6e2ac:	str	r0, [sp, #12]
   6e2b0:	movw	r0, #0
   6e2b4:	str	r0, [sp, #16]
   6e2b8:	ldr	r0, [fp, #-12]
   6e2bc:	ldr	r1, [sp, #16]
   6e2c0:	add	r0, r0, r1, lsl #2
   6e2c4:	ldr	r0, [r0]
   6e2c8:	movw	r1, #0
   6e2cc:	cmp	r0, r1
   6e2d0:	beq	6e3ac <__assert_fail@plt+0x5b7f4>
   6e2d4:	ldr	r0, [fp, #-12]
   6e2d8:	ldr	r1, [sp, #16]
   6e2dc:	add	r0, r0, r1, lsl #2
   6e2e0:	ldr	r0, [r0]
   6e2e4:	ldr	r1, [fp, #-8]
   6e2e8:	ldr	r2, [sp, #12]
   6e2ec:	bl	12b58 <strncmp@plt>
   6e2f0:	cmp	r0, #0
   6e2f4:	bne	6e398 <__assert_fail@plt+0x5b7e0>
   6e2f8:	ldr	r0, [fp, #-12]
   6e2fc:	ldr	r1, [sp, #16]
   6e300:	add	r0, r0, r1, lsl #2
   6e304:	ldr	r0, [r0]
   6e308:	bl	12888 <strlen@plt>
   6e30c:	ldr	r1, [sp, #12]
   6e310:	cmp	r0, r1
   6e314:	bne	6e324 <__assert_fail@plt+0x5b76c>
   6e318:	ldr	r0, [sp, #16]
   6e31c:	str	r0, [fp, #-4]
   6e320:	b	6e3cc <__assert_fail@plt+0x5b814>
   6e324:	ldr	r0, [sp, #8]
   6e328:	cmn	r0, #1
   6e32c:	bne	6e33c <__assert_fail@plt+0x5b784>
   6e330:	ldr	r0, [sp, #16]
   6e334:	str	r0, [sp, #8]
   6e338:	b	6e390 <__assert_fail@plt+0x5b7d8>
   6e33c:	ldr	r0, [fp, #-16]
   6e340:	movw	r1, #0
   6e344:	cmp	r0, r1
   6e348:	beq	6e384 <__assert_fail@plt+0x5b7cc>
   6e34c:	ldr	r0, [fp, #-16]
   6e350:	ldr	r1, [sp, #20]
   6e354:	ldr	r2, [sp, #8]
   6e358:	mul	r1, r1, r2
   6e35c:	add	r0, r0, r1
   6e360:	ldr	r1, [fp, #-16]
   6e364:	ldr	r2, [sp, #20]
   6e368:	ldr	r3, [sp, #16]
   6e36c:	mul	r2, r2, r3
   6e370:	add	r1, r1, r2
   6e374:	ldr	r2, [sp, #20]
   6e378:	bl	12624 <memcmp@plt>
   6e37c:	cmp	r0, #0
   6e380:	beq	6e38c <__assert_fail@plt+0x5b7d4>
   6e384:	movw	r0, #1
   6e388:	strb	r0, [sp, #7]
   6e38c:	b	6e390 <__assert_fail@plt+0x5b7d8>
   6e390:	b	6e394 <__assert_fail@plt+0x5b7dc>
   6e394:	b	6e398 <__assert_fail@plt+0x5b7e0>
   6e398:	b	6e39c <__assert_fail@plt+0x5b7e4>
   6e39c:	ldr	r0, [sp, #16]
   6e3a0:	add	r0, r0, #1
   6e3a4:	str	r0, [sp, #16]
   6e3a8:	b	6e2b8 <__assert_fail@plt+0x5b700>
   6e3ac:	ldrb	r0, [sp, #7]
   6e3b0:	tst	r0, #1
   6e3b4:	beq	6e3c4 <__assert_fail@plt+0x5b80c>
   6e3b8:	mvn	r0, #1
   6e3bc:	str	r0, [fp, #-4]
   6e3c0:	b	6e3cc <__assert_fail@plt+0x5b814>
   6e3c4:	ldr	r0, [sp, #8]
   6e3c8:	str	r0, [fp, #-4]
   6e3cc:	ldr	r0, [fp, #-4]
   6e3d0:	mov	sp, fp
   6e3d4:	pop	{fp, pc}
   6e3d8:	push	{fp, lr}
   6e3dc:	mov	fp, sp
   6e3e0:	sub	sp, sp, #40	; 0x28
   6e3e4:	str	r0, [fp, #-4]
   6e3e8:	str	r1, [fp, #-8]
   6e3ec:	str	r2, [fp, #-12]
   6e3f0:	ldr	r0, [fp, #-12]
   6e3f4:	cmn	r0, #1
   6e3f8:	bne	6e410 <__assert_fail@plt+0x5b858>
   6e3fc:	movw	r0, #50056	; 0xc388
   6e400:	movt	r0, #7
   6e404:	bl	12864 <gettext@plt>
   6e408:	str	r0, [sp, #20]
   6e40c:	b	6e420 <__assert_fail@plt+0x5b868>
   6e410:	movw	r0, #50083	; 0xc3a3
   6e414:	movt	r0, #7
   6e418:	bl	12864 <gettext@plt>
   6e41c:	str	r0, [sp, #20]
   6e420:	ldr	r0, [sp, #20]
   6e424:	str	r0, [fp, #-16]
   6e428:	ldr	r2, [fp, #-16]
   6e42c:	ldr	r0, [fp, #-8]
   6e430:	movw	r1, #0
   6e434:	str	r0, [sp, #16]
   6e438:	mov	r0, r1
   6e43c:	movw	r1, #8
   6e440:	ldr	r3, [sp, #16]
   6e444:	str	r2, [sp, #12]
   6e448:	mov	r2, r3
   6e44c:	bl	487d0 <__assert_fail@plt+0x35c18>
   6e450:	ldr	r1, [fp, #-4]
   6e454:	movw	r2, #1
   6e458:	str	r0, [sp, #8]
   6e45c:	mov	r0, r2
   6e460:	bl	48c10 <__assert_fail@plt+0x36058>
   6e464:	movw	r1, #0
   6e468:	str	r0, [sp, #4]
   6e46c:	mov	r0, r1
   6e470:	ldr	r2, [sp, #12]
   6e474:	ldr	r3, [sp, #8]
   6e478:	ldr	ip, [sp, #4]
   6e47c:	str	ip, [sp]
   6e480:	bl	12780 <error@plt>
   6e484:	mov	sp, fp
   6e488:	pop	{fp, pc}
   6e48c:	push	{fp, lr}
   6e490:	mov	fp, sp
   6e494:	sub	sp, sp, #40	; 0x28
   6e498:	str	r0, [fp, #-4]
   6e49c:	str	r1, [fp, #-8]
   6e4a0:	str	r2, [fp, #-12]
   6e4a4:	movw	r0, #0
   6e4a8:	str	r0, [sp, #20]
   6e4ac:	movw	r0, #50112	; 0xc3c0
   6e4b0:	movt	r0, #7
   6e4b4:	bl	12864 <gettext@plt>
   6e4b8:	movw	r1, #55080	; 0xd728
   6e4bc:	movt	r1, #8
   6e4c0:	ldr	r1, [r1]
   6e4c4:	bl	12b4c <fputs@plt>
   6e4c8:	movw	r1, #0
   6e4cc:	str	r1, [fp, #-16]
   6e4d0:	ldr	r0, [fp, #-4]
   6e4d4:	ldr	r1, [fp, #-16]
   6e4d8:	add	r0, r0, r1, lsl #2
   6e4dc:	ldr	r0, [r0]
   6e4e0:	movw	r1, #0
   6e4e4:	cmp	r0, r1
   6e4e8:	beq	6e5d8 <__assert_fail@plt+0x5ba20>
   6e4ec:	ldr	r0, [fp, #-16]
   6e4f0:	cmp	r0, #0
   6e4f4:	beq	6e520 <__assert_fail@plt+0x5b968>
   6e4f8:	ldr	r0, [sp, #20]
   6e4fc:	ldr	r1, [fp, #-8]
   6e500:	ldr	r2, [fp, #-12]
   6e504:	ldr	r3, [fp, #-16]
   6e508:	mul	r2, r2, r3
   6e50c:	add	r1, r1, r2
   6e510:	ldr	r2, [fp, #-12]
   6e514:	bl	12624 <memcmp@plt>
   6e518:	cmp	r0, #0
   6e51c:	beq	6e580 <__assert_fail@plt+0x5b9c8>
   6e520:	movw	r0, #55080	; 0xd728
   6e524:	movt	r0, #8
   6e528:	ldr	r0, [r0]
   6e52c:	ldr	r1, [fp, #-4]
   6e530:	ldr	r2, [fp, #-16]
   6e534:	add	r1, r1, r2, lsl #2
   6e538:	ldr	r1, [r1]
   6e53c:	str	r0, [sp, #16]
   6e540:	mov	r0, r1
   6e544:	bl	48c3c <__assert_fail@plt+0x36084>
   6e548:	ldr	r1, [sp, #16]
   6e54c:	str	r0, [sp, #12]
   6e550:	mov	r0, r1
   6e554:	movw	r1, #50133	; 0xc3d5
   6e558:	movt	r1, #7
   6e55c:	ldr	r2, [sp, #12]
   6e560:	bl	128c4 <fprintf@plt>
   6e564:	ldr	r1, [fp, #-8]
   6e568:	ldr	r2, [fp, #-12]
   6e56c:	ldr	r3, [fp, #-16]
   6e570:	mul	r2, r2, r3
   6e574:	add	r1, r1, r2
   6e578:	str	r1, [sp, #20]
   6e57c:	b	6e5c4 <__assert_fail@plt+0x5ba0c>
   6e580:	movw	r0, #55080	; 0xd728
   6e584:	movt	r0, #8
   6e588:	ldr	r0, [r0]
   6e58c:	ldr	r1, [fp, #-4]
   6e590:	ldr	r2, [fp, #-16]
   6e594:	add	r1, r1, r2, lsl #2
   6e598:	ldr	r1, [r1]
   6e59c:	str	r0, [sp, #8]
   6e5a0:	mov	r0, r1
   6e5a4:	bl	48c3c <__assert_fail@plt+0x36084>
   6e5a8:	ldr	r1, [sp, #8]
   6e5ac:	str	r0, [sp, #4]
   6e5b0:	mov	r0, r1
   6e5b4:	movw	r1, #50141	; 0xc3dd
   6e5b8:	movt	r1, #7
   6e5bc:	ldr	r2, [sp, #4]
   6e5c0:	bl	128c4 <fprintf@plt>
   6e5c4:	b	6e5c8 <__assert_fail@plt+0x5ba10>
   6e5c8:	ldr	r0, [fp, #-16]
   6e5cc:	add	r0, r0, #1
   6e5d0:	str	r0, [fp, #-16]
   6e5d4:	b	6e4d0 <__assert_fail@plt+0x5b918>
   6e5d8:	movw	r0, #55080	; 0xd728
   6e5dc:	movt	r0, #8
   6e5e0:	ldr	r1, [r0]
   6e5e4:	movw	r0, #10
   6e5e8:	bl	12a8c <putc@plt>
   6e5ec:	mov	sp, fp
   6e5f0:	pop	{fp, pc}
   6e5f4:	push	{fp, lr}
   6e5f8:	mov	fp, sp
   6e5fc:	sub	sp, sp, #32
   6e600:	ldr	ip, [fp, #12]
   6e604:	ldr	lr, [fp, #8]
   6e608:	str	r0, [fp, #-8]
   6e60c:	str	r1, [fp, #-12]
   6e610:	str	r2, [sp, #16]
   6e614:	str	r3, [sp, #12]
   6e618:	ldr	r0, [fp, #-12]
   6e61c:	ldr	r1, [sp, #16]
   6e620:	ldr	r2, [sp, #12]
   6e624:	ldr	r3, [fp, #8]
   6e628:	str	ip, [sp, #4]
   6e62c:	str	lr, [sp]
   6e630:	bl	6e278 <__assert_fail@plt+0x5b6c0>
   6e634:	str	r0, [sp, #8]
   6e638:	ldr	r0, [sp, #8]
   6e63c:	cmp	r0, #0
   6e640:	blt	6e650 <__assert_fail@plt+0x5ba98>
   6e644:	ldr	r0, [sp, #8]
   6e648:	str	r0, [fp, #-4]
   6e64c:	b	6e680 <__assert_fail@plt+0x5bac8>
   6e650:	ldr	r0, [fp, #-8]
   6e654:	ldr	r1, [fp, #-12]
   6e658:	ldr	r2, [sp, #8]
   6e65c:	bl	6e3d8 <__assert_fail@plt+0x5b820>
   6e660:	ldr	r0, [sp, #16]
   6e664:	ldr	r1, [sp, #12]
   6e668:	ldr	r2, [fp, #8]
   6e66c:	bl	6e48c <__assert_fail@plt+0x5b8d4>
   6e670:	ldr	r0, [fp, #12]
   6e674:	blx	r0
   6e678:	mvn	r0, #0
   6e67c:	str	r0, [fp, #-4]
   6e680:	ldr	r0, [fp, #-4]
   6e684:	mov	sp, fp
   6e688:	pop	{fp, pc}
   6e68c:	push	{fp, lr}
   6e690:	mov	fp, sp
   6e694:	sub	sp, sp, #24
   6e698:	str	r0, [fp, #-8]
   6e69c:	str	r1, [sp, #12]
   6e6a0:	str	r2, [sp, #8]
   6e6a4:	str	r3, [sp, #4]
   6e6a8:	movw	r0, #0
   6e6ac:	str	r0, [sp]
   6e6b0:	ldr	r0, [sp, #12]
   6e6b4:	ldr	r1, [sp]
   6e6b8:	add	r0, r0, r1, lsl #2
   6e6bc:	ldr	r0, [r0]
   6e6c0:	movw	r1, #0
   6e6c4:	cmp	r0, r1
   6e6c8:	beq	6e720 <__assert_fail@plt+0x5bb68>
   6e6cc:	ldr	r0, [fp, #-8]
   6e6d0:	ldr	r1, [sp, #8]
   6e6d4:	ldr	r2, [sp, #4]
   6e6d8:	ldr	r3, [sp]
   6e6dc:	mul	r2, r2, r3
   6e6e0:	add	r1, r1, r2
   6e6e4:	ldr	r2, [sp, #4]
   6e6e8:	bl	12624 <memcmp@plt>
   6e6ec:	cmp	r0, #0
   6e6f0:	bne	6e70c <__assert_fail@plt+0x5bb54>
   6e6f4:	ldr	r0, [sp, #12]
   6e6f8:	ldr	r1, [sp]
   6e6fc:	add	r0, r0, r1, lsl #2
   6e700:	ldr	r0, [r0]
   6e704:	str	r0, [fp, #-4]
   6e708:	b	6e728 <__assert_fail@plt+0x5bb70>
   6e70c:	b	6e710 <__assert_fail@plt+0x5bb58>
   6e710:	ldr	r0, [sp]
   6e714:	add	r0, r0, #1
   6e718:	str	r0, [sp]
   6e71c:	b	6e6b0 <__assert_fail@plt+0x5baf8>
   6e720:	movw	r0, #0
   6e724:	str	r0, [fp, #-4]
   6e728:	ldr	r0, [fp, #-4]
   6e72c:	mov	sp, fp
   6e730:	pop	{fp, pc}
   6e734:	push	{fp, lr}
   6e738:	mov	fp, sp
   6e73c:	sub	sp, sp, #72	; 0x48
   6e740:	str	r0, [fp, #-8]
   6e744:	str	r1, [fp, #-12]
   6e748:	str	r2, [fp, #-16]
   6e74c:	ldr	r0, [fp, #-8]
   6e750:	str	r0, [fp, #-20]	; 0xffffffec
   6e754:	ldr	r0, [fp, #-16]
   6e758:	ldrsb	r0, [r0]
   6e75c:	cmp	r0, #0
   6e760:	bne	6e77c <__assert_fail@plt+0x5bbc4>
   6e764:	ldr	r0, [fp, #-8]
   6e768:	movw	r1, #0
   6e76c:	strb	r1, [r0]
   6e770:	ldr	r0, [fp, #-8]
   6e774:	str	r0, [fp, #-4]
   6e778:	b	6e8bc <__assert_fail@plt+0x5bd04>
   6e77c:	movw	r0, #57432	; 0xe058
   6e780:	movt	r0, #8
   6e784:	ldr	r0, [r0]
   6e788:	cmp	r0, #0
   6e78c:	bne	6e81c <__assert_fail@plt+0x5bc64>
   6e790:	ldr	r1, [pc, #304]	; 6e8c8 <__assert_fail@plt+0x5bd10>
   6e794:	movw	r0, #40093	; 0x9c9d
   6e798:	movt	r0, #7
   6e79c:	bl	127b0 <open64@plt>
   6e7a0:	str	r0, [fp, #-28]	; 0xffffffe4
   6e7a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6e7a8:	cmp	r0, #0
   6e7ac:	bge	6e7c4 <__assert_fail@plt+0x5bc0c>
   6e7b0:	movw	r0, #57432	; 0xe058
   6e7b4:	movt	r0, #8
   6e7b8:	mvn	r1, #0
   6e7bc:	str	r1, [r0]
   6e7c0:	b	6e818 <__assert_fail@plt+0x5bc60>
   6e7c4:	add	r0, sp, #12
   6e7c8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   6e7cc:	movw	r1, #50146	; 0xc3e2
   6e7d0:	movt	r1, #7
   6e7d4:	bl	12a5c <sprintf@plt>
   6e7d8:	add	r1, sp, #12
   6e7dc:	str	r0, [sp, #4]
   6e7e0:	mov	r0, r1
   6e7e4:	movw	r1, #0
   6e7e8:	bl	12984 <access@plt>
   6e7ec:	cmp	r0, #0
   6e7f0:	movw	r0, #0
   6e7f4:	movne	r0, #1
   6e7f8:	tst	r0, #1
   6e7fc:	mvn	r0, #0
   6e800:	moveq	r0, #1
   6e804:	movw	r1, #57432	; 0xe058
   6e808:	movt	r1, #8
   6e80c:	str	r0, [r1]
   6e810:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6e814:	bl	12b70 <close@plt>
   6e818:	b	6e81c <__assert_fail@plt+0x5bc64>
   6e81c:	movw	r0, #57432	; 0xe058
   6e820:	movt	r0, #8
   6e824:	ldr	r0, [r0]
   6e828:	cmp	r0, #0
   6e82c:	bge	6e83c <__assert_fail@plt+0x5bc84>
   6e830:	movw	r0, #0
   6e834:	str	r0, [fp, #-4]
   6e838:	b	6e8bc <__assert_fail@plt+0x5bd04>
   6e83c:	ldr	r0, [fp, #-16]
   6e840:	bl	12888 <strlen@plt>
   6e844:	add	r0, r0, #27
   6e848:	str	r0, [sp, #8]
   6e84c:	ldr	r0, [sp, #8]
   6e850:	movw	r1, #4032	; 0xfc0
   6e854:	cmp	r1, r0
   6e858:	bcs	6e888 <__assert_fail@plt+0x5bcd0>
   6e85c:	ldr	r0, [sp, #8]
   6e860:	bl	527f0 <__assert_fail@plt+0x3fc38>
   6e864:	str	r0, [fp, #-20]	; 0xffffffec
   6e868:	ldr	r0, [fp, #-20]	; 0xffffffec
   6e86c:	movw	r1, #0
   6e870:	cmp	r0, r1
   6e874:	bne	6e884 <__assert_fail@plt+0x5bccc>
   6e878:	movw	r0, #0
   6e87c:	str	r0, [fp, #-4]
   6e880:	b	6e8bc <__assert_fail@plt+0x5bd04>
   6e884:	b	6e888 <__assert_fail@plt+0x5bcd0>
   6e888:	ldr	r0, [fp, #-20]	; 0xffffffec
   6e88c:	ldr	r2, [fp, #-12]
   6e890:	movw	r1, #50169	; 0xc3f9
   6e894:	movt	r1, #7
   6e898:	bl	12a5c <sprintf@plt>
   6e89c:	str	r0, [fp, #-24]	; 0xffffffe8
   6e8a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   6e8a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   6e8a8:	add	r0, r0, r1
   6e8ac:	ldr	r1, [fp, #-16]
   6e8b0:	bl	12738 <strcpy@plt>
   6e8b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   6e8b8:	str	r1, [fp, #-4]
   6e8bc:	ldr	r0, [fp, #-4]
   6e8c0:	mov	sp, fp
   6e8c4:	pop	{fp, pc}
   6e8c8:	andeq	r4, r8, r0, lsl #18
   6e8cc:	sub	sp, sp, #16
   6e8d0:	str	r0, [sp, #12]
   6e8d4:	ldr	r0, [sp, #12]
   6e8d8:	str	r0, [sp, #8]
   6e8dc:	movw	r0, #0
   6e8e0:	strb	r0, [sp, #3]
   6e8e4:	ldr	r0, [sp, #8]
   6e8e8:	ldrb	r0, [r0]
   6e8ec:	cmp	r0, #47	; 0x2f
   6e8f0:	bne	6e904 <__assert_fail@plt+0x5bd4c>
   6e8f4:	ldr	r0, [sp, #8]
   6e8f8:	add	r0, r0, #1
   6e8fc:	str	r0, [sp, #8]
   6e900:	b	6e8e4 <__assert_fail@plt+0x5bd2c>
   6e904:	ldr	r0, [sp, #8]
   6e908:	str	r0, [sp, #4]
   6e90c:	ldr	r0, [sp, #4]
   6e910:	ldrsb	r0, [r0]
   6e914:	cmp	r0, #0
   6e918:	beq	6e96c <__assert_fail@plt+0x5bdb4>
   6e91c:	ldr	r0, [sp, #4]
   6e920:	ldrb	r0, [r0]
   6e924:	cmp	r0, #47	; 0x2f
   6e928:	bne	6e938 <__assert_fail@plt+0x5bd80>
   6e92c:	movw	r0, #1
   6e930:	strb	r0, [sp, #3]
   6e934:	b	6e958 <__assert_fail@plt+0x5bda0>
   6e938:	ldrb	r0, [sp, #3]
   6e93c:	tst	r0, #1
   6e940:	beq	6e954 <__assert_fail@plt+0x5bd9c>
   6e944:	ldr	r0, [sp, #4]
   6e948:	str	r0, [sp, #8]
   6e94c:	movw	r0, #0
   6e950:	strb	r0, [sp, #3]
   6e954:	b	6e958 <__assert_fail@plt+0x5bda0>
   6e958:	b	6e95c <__assert_fail@plt+0x5bda4>
   6e95c:	ldr	r0, [sp, #4]
   6e960:	add	r0, r0, #1
   6e964:	str	r0, [sp, #4]
   6e968:	b	6e90c <__assert_fail@plt+0x5bd54>
   6e96c:	ldr	r0, [sp, #8]
   6e970:	add	sp, sp, #16
   6e974:	bx	lr
   6e978:	push	{fp, lr}
   6e97c:	mov	fp, sp
   6e980:	sub	sp, sp, #16
   6e984:	str	r0, [fp, #-4]
   6e988:	movw	r0, #0
   6e98c:	str	r0, [sp, #4]
   6e990:	ldr	r0, [fp, #-4]
   6e994:	bl	12888 <strlen@plt>
   6e998:	str	r0, [sp, #8]
   6e99c:	ldr	r0, [sp, #8]
   6e9a0:	movw	r1, #1
   6e9a4:	cmp	r1, r0
   6e9a8:	movw	r0, #0
   6e9ac:	str	r0, [sp]
   6e9b0:	bcs	6e9d8 <__assert_fail@plt+0x5be20>
   6e9b4:	ldr	r0, [fp, #-4]
   6e9b8:	ldr	r1, [sp, #8]
   6e9bc:	sub	r1, r1, #1
   6e9c0:	add	r0, r0, r1
   6e9c4:	ldrb	r0, [r0]
   6e9c8:	cmp	r0, #47	; 0x2f
   6e9cc:	movw	r0, #0
   6e9d0:	moveq	r0, #1
   6e9d4:	str	r0, [sp]
   6e9d8:	ldr	r0, [sp]
   6e9dc:	tst	r0, #1
   6e9e0:	beq	6e9fc <__assert_fail@plt+0x5be44>
   6e9e4:	b	6e9e8 <__assert_fail@plt+0x5be30>
   6e9e8:	ldr	r0, [sp, #8]
   6e9ec:	mvn	r1, #0
   6e9f0:	add	r0, r0, r1
   6e9f4:	str	r0, [sp, #8]
   6e9f8:	b	6e99c <__assert_fail@plt+0x5bde4>
   6e9fc:	ldr	r0, [sp, #8]
   6ea00:	mov	sp, fp
   6ea04:	pop	{fp, pc}
   6ea08:	push	{r4, sl, fp, lr}
   6ea0c:	add	fp, sp, #8
   6ea10:	sub	sp, sp, #16
   6ea14:	str	r0, [sp, #8]
   6ea18:	str	r1, [sp, #12]
   6ea1c:	str	r2, [sp, #4]
   6ea20:	ldr	r0, [sp, #8]
   6ea24:	ldr	r1, [sp, #12]
   6ea28:	ldr	r2, [sp, #4]
   6ea2c:	rsb	r3, r2, #32
   6ea30:	lsr	ip, r0, r3
   6ea34:	orr	ip, ip, r1, lsl r2
   6ea38:	sub	lr, r2, #32
   6ea3c:	cmp	lr, #0
   6ea40:	lslpl	ip, r0, lr
   6ea44:	lsl	r4, r0, r2
   6ea48:	cmp	lr, #0
   6ea4c:	movwpl	r4, #0
   6ea50:	rsb	r2, r2, #64	; 0x40
   6ea54:	lsr	lr, r1, r2
   6ea58:	cmp	r3, #0
   6ea5c:	movwpl	lr, #0
   6ea60:	lsr	r0, r0, r2
   6ea64:	rsb	r2, r2, #32
   6ea68:	orr	r0, r0, r1, lsl r2
   6ea6c:	cmp	r3, #0
   6ea70:	lsrpl	r0, r1, r3
   6ea74:	orr	r0, r4, r0
   6ea78:	orr	r1, ip, lr
   6ea7c:	sub	sp, fp, #8
   6ea80:	pop	{r4, sl, fp, pc}
   6ea84:	push	{r4, sl, fp, lr}
   6ea88:	add	fp, sp, #8
   6ea8c:	sub	sp, sp, #16
   6ea90:	str	r0, [sp, #8]
   6ea94:	str	r1, [sp, #12]
   6ea98:	str	r2, [sp, #4]
   6ea9c:	ldr	r0, [sp, #8]
   6eaa0:	ldr	r1, [sp, #12]
   6eaa4:	ldr	r2, [sp, #4]
   6eaa8:	lsr	r3, r1, r2
   6eaac:	sub	ip, r2, #32
   6eab0:	cmp	ip, #0
   6eab4:	movwpl	r3, #0
   6eab8:	lsr	lr, r0, r2
   6eabc:	rsb	r4, r2, #32
   6eac0:	orr	lr, lr, r1, lsl r4
   6eac4:	cmp	ip, #0
   6eac8:	lsrpl	lr, r1, ip
   6eacc:	rsb	r2, r2, #64	; 0x40
   6ead0:	rsb	ip, r2, #32
   6ead4:	lsr	ip, r0, ip
   6ead8:	orr	r1, ip, r1, lsl r2
   6eadc:	cmp	r4, #0
   6eae0:	lslpl	r1, r0, r4
   6eae4:	lsl	r0, r0, r2
   6eae8:	cmp	r4, #0
   6eaec:	movwpl	r0, #0
   6eaf0:	orr	r0, lr, r0
   6eaf4:	orr	r1, r3, r1
   6eaf8:	sub	sp, fp, #8
   6eafc:	pop	{r4, sl, fp, pc}
   6eb00:	sub	sp, sp, #8
   6eb04:	str	r0, [sp, #4]
   6eb08:	str	r1, [sp]
   6eb0c:	ldr	r0, [sp, #4]
   6eb10:	ldr	r1, [sp]
   6eb14:	lsl	r0, r0, r1
   6eb18:	ldr	r1, [sp, #4]
   6eb1c:	ldr	r2, [sp]
   6eb20:	movw	r3, #32
   6eb24:	sub	r2, r3, r2
   6eb28:	lsr	r1, r1, r2
   6eb2c:	orr	r0, r0, r1
   6eb30:	add	sp, sp, #8
   6eb34:	bx	lr
   6eb38:	sub	sp, sp, #8
   6eb3c:	str	r0, [sp, #4]
   6eb40:	str	r1, [sp]
   6eb44:	ldr	r0, [sp, #4]
   6eb48:	ldr	r1, [sp]
   6eb4c:	lsr	r0, r0, r1
   6eb50:	ldr	r1, [sp, #4]
   6eb54:	ldr	r2, [sp]
   6eb58:	movw	r3, #32
   6eb5c:	sub	r2, r3, r2
   6eb60:	lsl	r1, r1, r2
   6eb64:	orr	r0, r0, r1
   6eb68:	add	sp, sp, #8
   6eb6c:	bx	lr
   6eb70:	sub	sp, sp, #8
   6eb74:	str	r0, [sp, #4]
   6eb78:	str	r1, [sp]
   6eb7c:	ldr	r0, [sp, #4]
   6eb80:	ldr	r1, [sp]
   6eb84:	lsl	r0, r0, r1
   6eb88:	ldr	r1, [sp, #4]
   6eb8c:	ldr	r2, [sp]
   6eb90:	movw	r3, #32
   6eb94:	sub	r2, r3, r2
   6eb98:	lsr	r1, r1, r2
   6eb9c:	orr	r0, r0, r1
   6eba0:	add	sp, sp, #8
   6eba4:	bx	lr
   6eba8:	sub	sp, sp, #8
   6ebac:	str	r0, [sp, #4]
   6ebb0:	str	r1, [sp]
   6ebb4:	ldr	r0, [sp, #4]
   6ebb8:	ldr	r1, [sp]
   6ebbc:	lsr	r0, r0, r1
   6ebc0:	ldr	r1, [sp, #4]
   6ebc4:	ldr	r2, [sp]
   6ebc8:	movw	r3, #32
   6ebcc:	sub	r2, r3, r2
   6ebd0:	lsl	r1, r1, r2
   6ebd4:	orr	r0, r0, r1
   6ebd8:	add	sp, sp, #8
   6ebdc:	bx	lr
   6ebe0:	sub	sp, sp, #8
   6ebe4:	strh	r0, [sp, #6]
   6ebe8:	str	r1, [sp]
   6ebec:	ldrh	r0, [sp, #6]
   6ebf0:	ldr	r1, [sp]
   6ebf4:	lsl	r0, r0, r1
   6ebf8:	ldrh	r1, [sp, #6]
   6ebfc:	ldr	r2, [sp]
   6ec00:	movw	r3, #16
   6ec04:	sub	r2, r3, r2
   6ec08:	lsr	r1, r1, r2
   6ec0c:	orr	r0, r0, r1
   6ec10:	movw	r1, #65535	; 0xffff
   6ec14:	and	r0, r0, r1
   6ec18:	uxth	r0, r0
   6ec1c:	add	sp, sp, #8
   6ec20:	bx	lr
   6ec24:	sub	sp, sp, #8
   6ec28:	strh	r0, [sp, #6]
   6ec2c:	str	r1, [sp]
   6ec30:	ldrh	r0, [sp, #6]
   6ec34:	ldr	r1, [sp]
   6ec38:	lsr	r0, r0, r1
   6ec3c:	ldrh	r1, [sp, #6]
   6ec40:	ldr	r2, [sp]
   6ec44:	movw	r3, #16
   6ec48:	sub	r2, r3, r2
   6ec4c:	lsl	r1, r1, r2
   6ec50:	orr	r0, r0, r1
   6ec54:	movw	r1, #65535	; 0xffff
   6ec58:	and	r0, r0, r1
   6ec5c:	uxth	r0, r0
   6ec60:	add	sp, sp, #8
   6ec64:	bx	lr
   6ec68:	sub	sp, sp, #8
   6ec6c:	strb	r0, [sp, #7]
   6ec70:	str	r1, [sp]
   6ec74:	ldrb	r0, [sp, #7]
   6ec78:	ldr	r1, [sp]
   6ec7c:	lsl	r0, r0, r1
   6ec80:	ldrb	r1, [sp, #7]
   6ec84:	ldr	r2, [sp]
   6ec88:	movw	r3, #8
   6ec8c:	sub	r2, r3, r2
   6ec90:	lsr	r1, r1, r2
   6ec94:	orr	r0, r0, r1
   6ec98:	and	r0, r0, #255	; 0xff
   6ec9c:	and	r0, r0, #255	; 0xff
   6eca0:	add	sp, sp, #8
   6eca4:	bx	lr
   6eca8:	sub	sp, sp, #8
   6ecac:	strb	r0, [sp, #7]
   6ecb0:	str	r1, [sp]
   6ecb4:	ldrb	r0, [sp, #7]
   6ecb8:	ldr	r1, [sp]
   6ecbc:	lsr	r0, r0, r1
   6ecc0:	ldrb	r1, [sp, #7]
   6ecc4:	ldr	r2, [sp]
   6ecc8:	movw	r3, #8
   6eccc:	sub	r2, r3, r2
   6ecd0:	lsl	r1, r1, r2
   6ecd4:	orr	r0, r0, r1
   6ecd8:	and	r0, r0, #255	; 0xff
   6ecdc:	and	r0, r0, #255	; 0xff
   6ece0:	add	sp, sp, #8
   6ece4:	bx	lr
   6ece8:	sub	sp, sp, #12
   6ecec:	str	r0, [sp, #4]
   6ecf0:	ldr	r0, [sp, #4]
   6ecf4:	sub	r1, r0, #48	; 0x30
   6ecf8:	cmp	r1, #10
   6ecfc:	str	r0, [sp]
   6ed00:	bcc	6ed30 <__assert_fail@plt+0x5c178>
   6ed04:	b	6ed08 <__assert_fail@plt+0x5c150>
   6ed08:	ldr	r0, [sp]
   6ed0c:	sub	r1, r0, #65	; 0x41
   6ed10:	cmp	r1, #26
   6ed14:	bcc	6ed30 <__assert_fail@plt+0x5c178>
   6ed18:	b	6ed1c <__assert_fail@plt+0x5c164>
   6ed1c:	ldr	r0, [sp]
   6ed20:	sub	r1, r0, #97	; 0x61
   6ed24:	cmp	r1, #25
   6ed28:	bhi	6ed40 <__assert_fail@plt+0x5c188>
   6ed2c:	b	6ed30 <__assert_fail@plt+0x5c178>
   6ed30:	movw	r0, #1
   6ed34:	and	r0, r0, #1
   6ed38:	strb	r0, [sp, #11]
   6ed3c:	b	6ed4c <__assert_fail@plt+0x5c194>
   6ed40:	movw	r0, #0
   6ed44:	and	r0, r0, #1
   6ed48:	strb	r0, [sp, #11]
   6ed4c:	ldrb	r0, [sp, #11]
   6ed50:	and	r0, r0, #1
   6ed54:	add	sp, sp, #12
   6ed58:	bx	lr
   6ed5c:	sub	sp, sp, #12
   6ed60:	str	r0, [sp, #4]
   6ed64:	ldr	r0, [sp, #4]
   6ed68:	sub	r1, r0, #65	; 0x41
   6ed6c:	cmp	r1, #26
   6ed70:	str	r0, [sp]
   6ed74:	bcc	6ed90 <__assert_fail@plt+0x5c1d8>
   6ed78:	b	6ed7c <__assert_fail@plt+0x5c1c4>
   6ed7c:	ldr	r0, [sp]
   6ed80:	sub	r1, r0, #97	; 0x61
   6ed84:	cmp	r1, #25
   6ed88:	bhi	6eda0 <__assert_fail@plt+0x5c1e8>
   6ed8c:	b	6ed90 <__assert_fail@plt+0x5c1d8>
   6ed90:	movw	r0, #1
   6ed94:	and	r0, r0, #1
   6ed98:	strb	r0, [sp, #11]
   6ed9c:	b	6edac <__assert_fail@plt+0x5c1f4>
   6eda0:	movw	r0, #0
   6eda4:	and	r0, r0, #1
   6eda8:	strb	r0, [sp, #11]
   6edac:	ldrb	r0, [sp, #11]
   6edb0:	and	r0, r0, #1
   6edb4:	add	sp, sp, #12
   6edb8:	bx	lr
   6edbc:	sub	sp, sp, #8
   6edc0:	str	r0, [sp]
   6edc4:	ldr	r0, [sp]
   6edc8:	cmp	r0, #127	; 0x7f
   6edcc:	bhi	6ede4 <__assert_fail@plt+0x5c22c>
   6edd0:	b	6edd4 <__assert_fail@plt+0x5c21c>
   6edd4:	movw	r0, #1
   6edd8:	and	r0, r0, #1
   6eddc:	strb	r0, [sp, #7]
   6ede0:	b	6edf0 <__assert_fail@plt+0x5c238>
   6ede4:	movw	r0, #0
   6ede8:	and	r0, r0, #1
   6edec:	strb	r0, [sp, #7]
   6edf0:	ldrb	r0, [sp, #7]
   6edf4:	and	r0, r0, #1
   6edf8:	add	sp, sp, #8
   6edfc:	bx	lr
   6ee00:	sub	sp, sp, #8
   6ee04:	str	r0, [sp, #4]
   6ee08:	ldr	r0, [sp, #4]
   6ee0c:	cmp	r0, #32
   6ee10:	movw	r0, #1
   6ee14:	str	r0, [sp]
   6ee18:	beq	6ee30 <__assert_fail@plt+0x5c278>
   6ee1c:	ldr	r0, [sp, #4]
   6ee20:	cmp	r0, #9
   6ee24:	movw	r0, #0
   6ee28:	moveq	r0, #1
   6ee2c:	str	r0, [sp]
   6ee30:	ldr	r0, [sp]
   6ee34:	and	r0, r0, #1
   6ee38:	add	sp, sp, #8
   6ee3c:	bx	lr
   6ee40:	sub	sp, sp, #12
   6ee44:	str	r0, [sp, #4]
   6ee48:	ldr	r0, [sp, #4]
   6ee4c:	cmp	r0, #32
   6ee50:	str	r0, [sp]
   6ee54:	bcc	6ee6c <__assert_fail@plt+0x5c2b4>
   6ee58:	b	6ee5c <__assert_fail@plt+0x5c2a4>
   6ee5c:	ldr	r0, [sp]
   6ee60:	cmp	r0, #127	; 0x7f
   6ee64:	bne	6ee7c <__assert_fail@plt+0x5c2c4>
   6ee68:	b	6ee6c <__assert_fail@plt+0x5c2b4>
   6ee6c:	movw	r0, #1
   6ee70:	and	r0, r0, #1
   6ee74:	strb	r0, [sp, #11]
   6ee78:	b	6ee88 <__assert_fail@plt+0x5c2d0>
   6ee7c:	movw	r0, #0
   6ee80:	and	r0, r0, #1
   6ee84:	strb	r0, [sp, #11]
   6ee88:	ldrb	r0, [sp, #11]
   6ee8c:	and	r0, r0, #1
   6ee90:	add	sp, sp, #12
   6ee94:	bx	lr
   6ee98:	sub	sp, sp, #8
   6ee9c:	str	r0, [sp]
   6eea0:	ldr	r0, [sp]
   6eea4:	sub	r0, r0, #48	; 0x30
   6eea8:	cmp	r0, #9
   6eeac:	bhi	6eec4 <__assert_fail@plt+0x5c30c>
   6eeb0:	b	6eeb4 <__assert_fail@plt+0x5c2fc>
   6eeb4:	movw	r0, #1
   6eeb8:	and	r0, r0, #1
   6eebc:	strb	r0, [sp, #7]
   6eec0:	b	6eed0 <__assert_fail@plt+0x5c318>
   6eec4:	movw	r0, #0
   6eec8:	and	r0, r0, #1
   6eecc:	strb	r0, [sp, #7]
   6eed0:	ldrb	r0, [sp, #7]
   6eed4:	and	r0, r0, #1
   6eed8:	add	sp, sp, #8
   6eedc:	bx	lr
   6eee0:	sub	sp, sp, #8
   6eee4:	str	r0, [sp]
   6eee8:	ldr	r0, [sp]
   6eeec:	sub	r0, r0, #33	; 0x21
   6eef0:	cmp	r0, #93	; 0x5d
   6eef4:	bhi	6ef0c <__assert_fail@plt+0x5c354>
   6eef8:	b	6eefc <__assert_fail@plt+0x5c344>
   6eefc:	movw	r0, #1
   6ef00:	and	r0, r0, #1
   6ef04:	strb	r0, [sp, #7]
   6ef08:	b	6ef18 <__assert_fail@plt+0x5c360>
   6ef0c:	movw	r0, #0
   6ef10:	and	r0, r0, #1
   6ef14:	strb	r0, [sp, #7]
   6ef18:	ldrb	r0, [sp, #7]
   6ef1c:	and	r0, r0, #1
   6ef20:	add	sp, sp, #8
   6ef24:	bx	lr
   6ef28:	sub	sp, sp, #8
   6ef2c:	str	r0, [sp]
   6ef30:	ldr	r0, [sp]
   6ef34:	sub	r0, r0, #97	; 0x61
   6ef38:	cmp	r0, #25
   6ef3c:	bhi	6ef54 <__assert_fail@plt+0x5c39c>
   6ef40:	b	6ef44 <__assert_fail@plt+0x5c38c>
   6ef44:	movw	r0, #1
   6ef48:	and	r0, r0, #1
   6ef4c:	strb	r0, [sp, #7]
   6ef50:	b	6ef60 <__assert_fail@plt+0x5c3a8>
   6ef54:	movw	r0, #0
   6ef58:	and	r0, r0, #1
   6ef5c:	strb	r0, [sp, #7]
   6ef60:	ldrb	r0, [sp, #7]
   6ef64:	and	r0, r0, #1
   6ef68:	add	sp, sp, #8
   6ef6c:	bx	lr
   6ef70:	sub	sp, sp, #8
   6ef74:	str	r0, [sp]
   6ef78:	ldr	r0, [sp]
   6ef7c:	sub	r0, r0, #32
   6ef80:	cmp	r0, #94	; 0x5e
   6ef84:	bhi	6ef9c <__assert_fail@plt+0x5c3e4>
   6ef88:	b	6ef8c <__assert_fail@plt+0x5c3d4>
   6ef8c:	movw	r0, #1
   6ef90:	and	r0, r0, #1
   6ef94:	strb	r0, [sp, #7]
   6ef98:	b	6efa8 <__assert_fail@plt+0x5c3f0>
   6ef9c:	movw	r0, #0
   6efa0:	and	r0, r0, #1
   6efa4:	strb	r0, [sp, #7]
   6efa8:	ldrb	r0, [sp, #7]
   6efac:	and	r0, r0, #1
   6efb0:	add	sp, sp, #8
   6efb4:	bx	lr
   6efb8:	sub	sp, sp, #12
   6efbc:	str	r0, [sp, #4]
   6efc0:	ldr	r0, [sp, #4]
   6efc4:	sub	r0, r0, #33	; 0x21
   6efc8:	cmp	r0, #93	; 0x5d
   6efcc:	str	r0, [sp]
   6efd0:	bhi	6f16c <__assert_fail@plt+0x5c5b4>
   6efd4:	add	r0, pc, #8
   6efd8:	ldr	r1, [sp]
   6efdc:	ldr	r0, [r0, r1, lsl #2]
   6efe0:	mov	pc, r0
   6efe4:	andeq	pc, r6, ip, asr r1	; <UNPREDICTABLE>
   6efe8:	andeq	pc, r6, ip, asr r1	; <UNPREDICTABLE>
   6efec:	andeq	pc, r6, ip, asr r1	; <UNPREDICTABLE>
   6eff0:	andeq	pc, r6, ip, asr r1	; <UNPREDICTABLE>
   6eff4:	andeq	pc, r6, ip, asr r1	; <UNPREDICTABLE>
   6eff8:	andeq	pc, r6, ip, asr r1	; <UNPREDICTABLE>
   6effc:	andeq	pc, r6, ip, asr r1	; <UNPREDICTABLE>
   6f000:	andeq	pc, r6, ip, asr r1	; <UNPREDICTABLE>
   6f004:	andeq	pc, r6, ip, asr r1	; <UNPREDICTABLE>
   6f008:	andeq	pc, r6, ip, asr r1	; <UNPREDICTABLE>
   6f00c:	andeq	pc, r6, ip, asr r1	; <UNPREDICTABLE>
   6f010:	andeq	pc, r6, ip, asr r1	; <UNPREDICTABLE>
   6f014:	andeq	pc, r6, ip, asr r1	; <UNPREDICTABLE>
   6f018:	andeq	pc, r6, ip, asr r1	; <UNPREDICTABLE>
   6f01c:	andeq	pc, r6, ip, asr r1	; <UNPREDICTABLE>
   6f020:	andeq	pc, r6, ip, ror #2
   6f024:	andeq	pc, r6, ip, ror #2
   6f028:	andeq	pc, r6, ip, ror #2
   6f02c:	andeq	pc, r6, ip, ror #2
   6f030:	andeq	pc, r6, ip, ror #2
   6f034:	andeq	pc, r6, ip, ror #2
   6f038:	andeq	pc, r6, ip, ror #2
   6f03c:	andeq	pc, r6, ip, ror #2
   6f040:	andeq	pc, r6, ip, ror #2
   6f044:	andeq	pc, r6, ip, ror #2
   6f048:	andeq	pc, r6, ip, asr r1	; <UNPREDICTABLE>
   6f04c:	andeq	pc, r6, ip, asr r1	; <UNPREDICTABLE>
   6f050:	andeq	pc, r6, ip, asr r1	; <UNPREDICTABLE>
   6f054:	andeq	pc, r6, ip, asr r1	; <UNPREDICTABLE>
   6f058:	andeq	pc, r6, ip, asr r1	; <UNPREDICTABLE>
   6f05c:	andeq	pc, r6, ip, asr r1	; <UNPREDICTABLE>
   6f060:	andeq	pc, r6, ip, asr r1	; <UNPREDICTABLE>
   6f064:	andeq	pc, r6, ip, ror #2
   6f068:	andeq	pc, r6, ip, ror #2
   6f06c:	andeq	pc, r6, ip, ror #2
   6f070:	andeq	pc, r6, ip, ror #2
   6f074:	andeq	pc, r6, ip, ror #2
   6f078:	andeq	pc, r6, ip, ror #2
   6f07c:	andeq	pc, r6, ip, ror #2
   6f080:	andeq	pc, r6, ip, ror #2
   6f084:	andeq	pc, r6, ip, ror #2
   6f088:	andeq	pc, r6, ip, ror #2
   6f08c:	andeq	pc, r6, ip, ror #2
   6f090:	andeq	pc, r6, ip, ror #2
   6f094:	andeq	pc, r6, ip, ror #2
   6f098:	andeq	pc, r6, ip, ror #2
   6f09c:	andeq	pc, r6, ip, ror #2
   6f0a0:	andeq	pc, r6, ip, ror #2
   6f0a4:	andeq	pc, r6, ip, ror #2
   6f0a8:	andeq	pc, r6, ip, ror #2
   6f0ac:	andeq	pc, r6, ip, ror #2
   6f0b0:	andeq	pc, r6, ip, ror #2
   6f0b4:	andeq	pc, r6, ip, ror #2
   6f0b8:	andeq	pc, r6, ip, ror #2
   6f0bc:	andeq	pc, r6, ip, ror #2
   6f0c0:	andeq	pc, r6, ip, ror #2
   6f0c4:	andeq	pc, r6, ip, ror #2
   6f0c8:	andeq	pc, r6, ip, ror #2
   6f0cc:	andeq	pc, r6, ip, asr r1	; <UNPREDICTABLE>
   6f0d0:	andeq	pc, r6, ip, asr r1	; <UNPREDICTABLE>
   6f0d4:	andeq	pc, r6, ip, asr r1	; <UNPREDICTABLE>
   6f0d8:	andeq	pc, r6, ip, asr r1	; <UNPREDICTABLE>
   6f0dc:	andeq	pc, r6, ip, asr r1	; <UNPREDICTABLE>
   6f0e0:	andeq	pc, r6, ip, asr r1	; <UNPREDICTABLE>
   6f0e4:	andeq	pc, r6, ip, ror #2
   6f0e8:	andeq	pc, r6, ip, ror #2
   6f0ec:	andeq	pc, r6, ip, ror #2
   6f0f0:	andeq	pc, r6, ip, ror #2
   6f0f4:	andeq	pc, r6, ip, ror #2
   6f0f8:	andeq	pc, r6, ip, ror #2
   6f0fc:	andeq	pc, r6, ip, ror #2
   6f100:	andeq	pc, r6, ip, ror #2
   6f104:	andeq	pc, r6, ip, ror #2
   6f108:	andeq	pc, r6, ip, ror #2
   6f10c:	andeq	pc, r6, ip, ror #2
   6f110:	andeq	pc, r6, ip, ror #2
   6f114:	andeq	pc, r6, ip, ror #2
   6f118:	andeq	pc, r6, ip, ror #2
   6f11c:	andeq	pc, r6, ip, ror #2
   6f120:	andeq	pc, r6, ip, ror #2
   6f124:	andeq	pc, r6, ip, ror #2
   6f128:	andeq	pc, r6, ip, ror #2
   6f12c:	andeq	pc, r6, ip, ror #2
   6f130:	andeq	pc, r6, ip, ror #2
   6f134:	andeq	pc, r6, ip, ror #2
   6f138:	andeq	pc, r6, ip, ror #2
   6f13c:	andeq	pc, r6, ip, ror #2
   6f140:	andeq	pc, r6, ip, ror #2
   6f144:	andeq	pc, r6, ip, ror #2
   6f148:	andeq	pc, r6, ip, ror #2
   6f14c:	andeq	pc, r6, ip, asr r1	; <UNPREDICTABLE>
   6f150:	andeq	pc, r6, ip, asr r1	; <UNPREDICTABLE>
   6f154:	andeq	pc, r6, ip, asr r1	; <UNPREDICTABLE>
   6f158:	andeq	pc, r6, ip, asr r1	; <UNPREDICTABLE>
   6f15c:	movw	r0, #1
   6f160:	and	r0, r0, #1
   6f164:	strb	r0, [sp, #11]
   6f168:	b	6f178 <__assert_fail@plt+0x5c5c0>
   6f16c:	movw	r0, #0
   6f170:	and	r0, r0, #1
   6f174:	strb	r0, [sp, #11]
   6f178:	ldrb	r0, [sp, #11]
   6f17c:	and	r0, r0, #1
   6f180:	add	sp, sp, #12
   6f184:	bx	lr
   6f188:	sub	sp, sp, #12
   6f18c:	str	r0, [sp, #4]
   6f190:	ldr	r0, [sp, #4]
   6f194:	sub	r1, r0, #9
   6f198:	cmp	r1, #5
   6f19c:	str	r0, [sp]
   6f1a0:	bcc	6f1b8 <__assert_fail@plt+0x5c600>
   6f1a4:	b	6f1a8 <__assert_fail@plt+0x5c5f0>
   6f1a8:	ldr	r0, [sp]
   6f1ac:	cmp	r0, #32
   6f1b0:	bne	6f1c8 <__assert_fail@plt+0x5c610>
   6f1b4:	b	6f1b8 <__assert_fail@plt+0x5c600>
   6f1b8:	movw	r0, #1
   6f1bc:	and	r0, r0, #1
   6f1c0:	strb	r0, [sp, #11]
   6f1c4:	b	6f1d4 <__assert_fail@plt+0x5c61c>
   6f1c8:	movw	r0, #0
   6f1cc:	and	r0, r0, #1
   6f1d0:	strb	r0, [sp, #11]
   6f1d4:	ldrb	r0, [sp, #11]
   6f1d8:	and	r0, r0, #1
   6f1dc:	add	sp, sp, #12
   6f1e0:	bx	lr
   6f1e4:	sub	sp, sp, #8
   6f1e8:	str	r0, [sp]
   6f1ec:	ldr	r0, [sp]
   6f1f0:	sub	r0, r0, #65	; 0x41
   6f1f4:	cmp	r0, #25
   6f1f8:	bhi	6f210 <__assert_fail@plt+0x5c658>
   6f1fc:	b	6f200 <__assert_fail@plt+0x5c648>
   6f200:	movw	r0, #1
   6f204:	and	r0, r0, #1
   6f208:	strb	r0, [sp, #7]
   6f20c:	b	6f21c <__assert_fail@plt+0x5c664>
   6f210:	movw	r0, #0
   6f214:	and	r0, r0, #1
   6f218:	strb	r0, [sp, #7]
   6f21c:	ldrb	r0, [sp, #7]
   6f220:	and	r0, r0, #1
   6f224:	add	sp, sp, #8
   6f228:	bx	lr
   6f22c:	sub	sp, sp, #12
   6f230:	str	r0, [sp, #4]
   6f234:	ldr	r0, [sp, #4]
   6f238:	sub	r1, r0, #48	; 0x30
   6f23c:	cmp	r1, #10
   6f240:	str	r0, [sp]
   6f244:	bcc	6f274 <__assert_fail@plt+0x5c6bc>
   6f248:	b	6f24c <__assert_fail@plt+0x5c694>
   6f24c:	ldr	r0, [sp]
   6f250:	sub	r1, r0, #65	; 0x41
   6f254:	cmp	r1, #6
   6f258:	bcc	6f274 <__assert_fail@plt+0x5c6bc>
   6f25c:	b	6f260 <__assert_fail@plt+0x5c6a8>
   6f260:	ldr	r0, [sp]
   6f264:	sub	r1, r0, #97	; 0x61
   6f268:	cmp	r1, #5
   6f26c:	bhi	6f284 <__assert_fail@plt+0x5c6cc>
   6f270:	b	6f274 <__assert_fail@plt+0x5c6bc>
   6f274:	movw	r0, #1
   6f278:	and	r0, r0, #1
   6f27c:	strb	r0, [sp, #11]
   6f280:	b	6f290 <__assert_fail@plt+0x5c6d8>
   6f284:	movw	r0, #0
   6f288:	and	r0, r0, #1
   6f28c:	strb	r0, [sp, #11]
   6f290:	ldrb	r0, [sp, #11]
   6f294:	and	r0, r0, #1
   6f298:	add	sp, sp, #12
   6f29c:	bx	lr
   6f2a0:	sub	sp, sp, #8
   6f2a4:	str	r0, [sp]
   6f2a8:	ldr	r0, [sp]
   6f2ac:	sub	r0, r0, #65	; 0x41
   6f2b0:	cmp	r0, #25
   6f2b4:	bhi	6f2d0 <__assert_fail@plt+0x5c718>
   6f2b8:	b	6f2bc <__assert_fail@plt+0x5c704>
   6f2bc:	ldr	r0, [sp]
   6f2c0:	sub	r0, r0, #65	; 0x41
   6f2c4:	add	r0, r0, #97	; 0x61
   6f2c8:	str	r0, [sp, #4]
   6f2cc:	b	6f2d8 <__assert_fail@plt+0x5c720>
   6f2d0:	ldr	r0, [sp]
   6f2d4:	str	r0, [sp, #4]
   6f2d8:	ldr	r0, [sp, #4]
   6f2dc:	add	sp, sp, #8
   6f2e0:	bx	lr
   6f2e4:	sub	sp, sp, #8
   6f2e8:	str	r0, [sp]
   6f2ec:	ldr	r0, [sp]
   6f2f0:	sub	r0, r0, #97	; 0x61
   6f2f4:	cmp	r0, #25
   6f2f8:	bhi	6f314 <__assert_fail@plt+0x5c75c>
   6f2fc:	b	6f300 <__assert_fail@plt+0x5c748>
   6f300:	ldr	r0, [sp]
   6f304:	sub	r0, r0, #97	; 0x61
   6f308:	add	r0, r0, #65	; 0x41
   6f30c:	str	r0, [sp, #4]
   6f310:	b	6f31c <__assert_fail@plt+0x5c764>
   6f314:	ldr	r0, [sp]
   6f318:	str	r0, [sp, #4]
   6f31c:	ldr	r0, [sp, #4]
   6f320:	add	sp, sp, #8
   6f324:	bx	lr
   6f328:	push	{fp, lr}
   6f32c:	mov	fp, sp
   6f330:	sub	sp, sp, #24
   6f334:	str	r0, [fp, #-8]
   6f338:	str	r1, [sp, #12]
   6f33c:	ldr	r0, [fp, #-8]
   6f340:	str	r0, [sp, #8]
   6f344:	ldr	r0, [sp, #12]
   6f348:	str	r0, [sp, #4]
   6f34c:	ldr	r0, [sp, #8]
   6f350:	ldr	r1, [sp, #4]
   6f354:	cmp	r0, r1
   6f358:	bne	6f368 <__assert_fail@plt+0x5c7b0>
   6f35c:	movw	r0, #0
   6f360:	str	r0, [fp, #-4]
   6f364:	b	6f3d4 <__assert_fail@plt+0x5c81c>
   6f368:	b	6f36c <__assert_fail@plt+0x5c7b4>
   6f36c:	ldr	r0, [sp, #8]
   6f370:	ldrb	r0, [r0]
   6f374:	bl	6f2a0 <__assert_fail@plt+0x5c6e8>
   6f378:	strb	r0, [sp, #3]
   6f37c:	ldr	r0, [sp, #4]
   6f380:	ldrb	r0, [r0]
   6f384:	bl	6f2a0 <__assert_fail@plt+0x5c6e8>
   6f388:	strb	r0, [sp, #2]
   6f38c:	ldrb	r0, [sp, #3]
   6f390:	cmp	r0, #0
   6f394:	bne	6f39c <__assert_fail@plt+0x5c7e4>
   6f398:	b	6f3c4 <__assert_fail@plt+0x5c80c>
   6f39c:	ldr	r0, [sp, #8]
   6f3a0:	add	r0, r0, #1
   6f3a4:	str	r0, [sp, #8]
   6f3a8:	ldr	r0, [sp, #4]
   6f3ac:	add	r0, r0, #1
   6f3b0:	str	r0, [sp, #4]
   6f3b4:	ldrb	r0, [sp, #3]
   6f3b8:	ldrb	r1, [sp, #2]
   6f3bc:	cmp	r0, r1
   6f3c0:	beq	6f36c <__assert_fail@plt+0x5c7b4>
   6f3c4:	ldrb	r0, [sp, #3]
   6f3c8:	ldrb	r1, [sp, #2]
   6f3cc:	sub	r0, r0, r1
   6f3d0:	str	r0, [fp, #-4]
   6f3d4:	ldr	r0, [fp, #-4]
   6f3d8:	mov	sp, fp
   6f3dc:	pop	{fp, pc}
   6f3e0:	push	{fp, lr}
   6f3e4:	mov	fp, sp
   6f3e8:	sub	sp, sp, #16
   6f3ec:	str	r0, [sp, #8]
   6f3f0:	ldr	r0, [sp, #8]
   6f3f4:	bl	12750 <__fpending@plt>
   6f3f8:	cmp	r0, #0
   6f3fc:	movw	r0, #0
   6f400:	movne	r0, #1
   6f404:	and	r0, r0, #1
   6f408:	strb	r0, [sp, #7]
   6f40c:	ldr	r0, [sp, #8]
   6f410:	bl	12588 <ferror@plt>
   6f414:	cmp	r0, #0
   6f418:	movw	r0, #0
   6f41c:	movne	r0, #1
   6f420:	and	r0, r0, #1
   6f424:	strb	r0, [sp, #6]
   6f428:	ldr	r0, [sp, #8]
   6f42c:	bl	12990 <fclose@plt>
   6f430:	cmp	r0, #0
   6f434:	movw	r0, #0
   6f438:	movne	r0, #1
   6f43c:	and	r0, r0, #1
   6f440:	strb	r0, [sp, #5]
   6f444:	ldrb	r0, [sp, #6]
   6f448:	tst	r0, #1
   6f44c:	bne	6f478 <__assert_fail@plt+0x5c8c0>
   6f450:	ldrb	r0, [sp, #5]
   6f454:	tst	r0, #1
   6f458:	beq	6f49c <__assert_fail@plt+0x5c8e4>
   6f45c:	ldrb	r0, [sp, #7]
   6f460:	tst	r0, #1
   6f464:	bne	6f478 <__assert_fail@plt+0x5c8c0>
   6f468:	bl	128d0 <__errno_location@plt>
   6f46c:	ldr	r0, [r0]
   6f470:	cmp	r0, #9
   6f474:	beq	6f49c <__assert_fail@plt+0x5c8e4>
   6f478:	ldrb	r0, [sp, #5]
   6f47c:	tst	r0, #1
   6f480:	bne	6f490 <__assert_fail@plt+0x5c8d8>
   6f484:	bl	128d0 <__errno_location@plt>
   6f488:	movw	r1, #0
   6f48c:	str	r1, [r0]
   6f490:	mvn	r0, #0
   6f494:	str	r0, [fp, #-4]
   6f498:	b	6f4a4 <__assert_fail@plt+0x5c8ec>
   6f49c:	movw	r0, #0
   6f4a0:	str	r0, [fp, #-4]
   6f4a4:	ldr	r0, [fp, #-4]
   6f4a8:	mov	sp, fp
   6f4ac:	pop	{fp, pc}
   6f4b0:	sub	sp, sp, #4
   6f4b4:	ldr	r1, [pc, #32]	; 6f4dc <__assert_fail@plt+0x5c924>
   6f4b8:	str	r0, [sp]
   6f4bc:	ldr	r0, [sp]
   6f4c0:	mov	r2, #0
   6f4c4:	str	r2, [r0, #20]
   6f4c8:	str	r2, [r0, #16]
   6f4cc:	ldr	r0, [sp]
   6f4d0:	str	r1, [r0, #24]
   6f4d4:	add	sp, sp, #4
   6f4d8:	bx	lr
   6f4dc:	addseq	pc, r5, r6, lsl r6	; <UNPREDICTABLE>
   6f4e0:	push	{fp, lr}
   6f4e4:	mov	fp, sp
   6f4e8:	sub	sp, sp, #16
   6f4ec:	ldr	r2, [pc, #364]	; 6f660 <__assert_fail@plt+0x5caa8>
   6f4f0:	str	r0, [sp, #8]
   6f4f4:	str	r1, [sp, #4]
   6f4f8:	ldr	r0, [sp, #8]
   6f4fc:	ldr	r0, [r0, #24]
   6f500:	cmp	r0, r2
   6f504:	bne	6f50c <__assert_fail@plt+0x5c954>
   6f508:	b	6f52c <__assert_fail@plt+0x5c974>
   6f50c:	movw	r0, #50187	; 0xc40b
   6f510:	movt	r0, #7
   6f514:	movw	r1, #50211	; 0xc423
   6f518:	movt	r1, #7
   6f51c:	movw	r2, #60	; 0x3c
   6f520:	movw	r3, #50225	; 0xc431
   6f524:	movt	r3, #7
   6f528:	bl	12bb8 <__assert_fail@plt>
   6f52c:	ldr	r0, [sp, #8]
   6f530:	ldr	r1, [r0, #16]
   6f534:	ldr	r0, [r0, #20]
   6f538:	orr	r0, r1, r0
   6f53c:	cmp	r0, #0
   6f540:	beq	6f5b8 <__assert_fail@plt+0x5ca00>
   6f544:	b	6f548 <__assert_fail@plt+0x5c990>
   6f548:	ldr	r0, [sp, #4]
   6f54c:	ldr	r1, [r0, #96]	; 0x60
   6f550:	ldr	r0, [r0, #100]	; 0x64
   6f554:	ldr	r2, [sp, #8]
   6f558:	ldr	r3, [r2]
   6f55c:	ldr	r2, [r2, #4]
   6f560:	eor	r0, r0, r2
   6f564:	eor	r1, r1, r3
   6f568:	orr	r0, r1, r0
   6f56c:	cmp	r0, #0
   6f570:	bne	6f5b8 <__assert_fail@plt+0x5ca00>
   6f574:	b	6f578 <__assert_fail@plt+0x5c9c0>
   6f578:	ldr	r0, [sp, #4]
   6f57c:	ldr	r1, [r0]
   6f580:	ldr	r0, [r0, #4]
   6f584:	ldr	r2, [sp, #8]
   6f588:	ldr	r3, [r2, #8]
   6f58c:	ldr	r2, [r2, #12]
   6f590:	eor	r0, r0, r2
   6f594:	eor	r1, r1, r3
   6f598:	orr	r0, r1, r0
   6f59c:	cmp	r0, #0
   6f5a0:	bne	6f5b8 <__assert_fail@plt+0x5ca00>
   6f5a4:	b	6f5a8 <__assert_fail@plt+0x5c9f0>
   6f5a8:	movw	r0, #1
   6f5ac:	and	r0, r0, #1
   6f5b0:	strb	r0, [fp, #-1]
   6f5b4:	b	6f650 <__assert_fail@plt+0x5ca98>
   6f5b8:	ldr	r0, [sp, #8]
   6f5bc:	ldr	r1, [r0, #16]
   6f5c0:	ldr	r2, [r0, #20]
   6f5c4:	adds	r1, r1, #1
   6f5c8:	adc	r2, r2, #0
   6f5cc:	str	r1, [r0, #16]
   6f5d0:	str	r2, [r0, #20]
   6f5d4:	mov	r0, r1
   6f5d8:	mov	r1, r2
   6f5dc:	bl	6f664 <__assert_fail@plt+0x5caac>
   6f5e0:	tst	r0, #1
   6f5e4:	beq	6f644 <__assert_fail@plt+0x5ca8c>
   6f5e8:	ldr	r0, [sp, #8]
   6f5ec:	ldr	r1, [r0, #16]
   6f5f0:	ldr	r0, [r0, #20]
   6f5f4:	orr	r0, r1, r0
   6f5f8:	cmp	r0, #0
   6f5fc:	bne	6f614 <__assert_fail@plt+0x5ca5c>
   6f600:	b	6f604 <__assert_fail@plt+0x5ca4c>
   6f604:	movw	r0, #1
   6f608:	and	r0, r0, #1
   6f60c:	strb	r0, [fp, #-1]
   6f610:	b	6f650 <__assert_fail@plt+0x5ca98>
   6f614:	ldr	r0, [sp, #4]
   6f618:	ldr	r1, [r0]
   6f61c:	ldr	r0, [r0, #4]
   6f620:	ldr	r2, [sp, #8]
   6f624:	str	r0, [r2, #12]
   6f628:	str	r1, [r2, #8]
   6f62c:	ldr	r0, [sp, #4]
   6f630:	ldr	r1, [r0, #96]	; 0x60
   6f634:	ldr	r0, [r0, #100]	; 0x64
   6f638:	ldr	r2, [sp, #8]
   6f63c:	str	r0, [r2, #4]
   6f640:	str	r1, [r2]
   6f644:	movw	r0, #0
   6f648:	and	r0, r0, #1
   6f64c:	strb	r0, [fp, #-1]
   6f650:	ldrb	r0, [fp, #-1]
   6f654:	and	r0, r0, #1
   6f658:	mov	sp, fp
   6f65c:	pop	{fp, pc}
   6f660:	addseq	pc, r5, r6, lsl r6	; <UNPREDICTABLE>
   6f664:	sub	sp, sp, #8
   6f668:	str	r0, [sp]
   6f66c:	str	r1, [sp, #4]
   6f670:	ldr	r0, [sp]
   6f674:	ldr	r1, [sp, #4]
   6f678:	subs	r2, r0, #1
   6f67c:	sbc	r3, r1, #0
   6f680:	and	r0, r0, r2
   6f684:	and	r1, r1, r3
   6f688:	orr	r0, r0, r1
   6f68c:	clz	r0, r0
   6f690:	lsr	r0, r0, #5
   6f694:	and	r0, r0, #1
   6f698:	add	sp, sp, #8
   6f69c:	bx	lr
   6f6a0:	push	{fp, lr}
   6f6a4:	mov	fp, sp
   6f6a8:	sub	sp, sp, #104	; 0x68
   6f6ac:	str	r0, [fp, #-8]
   6f6b0:	str	r1, [fp, #-12]
   6f6b4:	str	r2, [fp, #-16]
   6f6b8:	str	r3, [fp, #-20]	; 0xffffffec
   6f6bc:	ldr	r0, [fp, #-12]
   6f6c0:	ldr	r1, [fp, #-8]
   6f6c4:	ldr	r1, [r1, #4]
   6f6c8:	cmp	r0, r1
   6f6cc:	bhi	6f6ec <__assert_fail@plt+0x5cb34>
   6f6d0:	ldr	r0, [fp, #-12]
   6f6d4:	ldr	r1, [fp, #-8]
   6f6d8:	str	r0, [r1]
   6f6dc:	movw	r0, #1
   6f6e0:	and	r0, r0, #1
   6f6e4:	strb	r0, [fp, #-1]
   6f6e8:	b	70abc <__assert_fail@plt+0x5df04>
   6f6ec:	b	6faa4 <__assert_fail@plt+0x5ceec>
   6f6f0:	b	6f8c4 <__assert_fail@plt+0x5cd0c>
   6f6f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   6f6f8:	cmp	r0, #0
   6f6fc:	bcs	6f800 <__assert_fail@plt+0x5cc48>
   6f700:	ldr	r0, [fp, #-12]
   6f704:	cmp	r0, #0
   6f708:	bcs	6f790 <__assert_fail@plt+0x5cbd8>
   6f70c:	b	6f72c <__assert_fail@plt+0x5cb74>
   6f710:	ldr	r0, [fp, #-12]
   6f714:	ldr	r1, [fp, #-20]	; 0xffffffec
   6f718:	movw	r2, #127	; 0x7f
   6f71c:	udiv	r1, r2, r1
   6f720:	cmp	r0, r1
   6f724:	bcc	6f894 <__assert_fail@plt+0x5ccdc>
   6f728:	b	6f8ac <__assert_fail@plt+0x5ccf4>
   6f72c:	b	6f740 <__assert_fail@plt+0x5cb88>
   6f730:	ldr	r0, [fp, #-20]	; 0xffffffec
   6f734:	cmp	r0, #1
   6f738:	bcc	6f750 <__assert_fail@plt+0x5cb98>
   6f73c:	b	6f75c <__assert_fail@plt+0x5cba4>
   6f740:	ldr	r0, [fp, #-20]	; 0xffffffec
   6f744:	movw	r1, #0
   6f748:	cmp	r1, r0
   6f74c:	bcs	6f75c <__assert_fail@plt+0x5cba4>
   6f750:	movw	r0, #0
   6f754:	str	r0, [fp, #-32]	; 0xffffffe0
   6f758:	b	6f774 <__assert_fail@plt+0x5cbbc>
   6f75c:	ldr	r0, [fp, #-20]	; 0xffffffec
   6f760:	movw	r1, #0
   6f764:	sub	r0, r1, r0
   6f768:	movw	r1, #127	; 0x7f
   6f76c:	udiv	r0, r1, r0
   6f770:	str	r0, [fp, #-32]	; 0xffffffe0
   6f774:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6f778:	ldr	r1, [fp, #-12]
   6f77c:	mvn	r2, #0
   6f780:	sub	r1, r2, r1
   6f784:	cmp	r0, r1
   6f788:	bls	6f894 <__assert_fail@plt+0x5ccdc>
   6f78c:	b	6f8ac <__assert_fail@plt+0x5ccf4>
   6f790:	ldr	r0, [fp, #-20]	; 0xffffffec
   6f794:	cmn	r0, #1
   6f798:	bne	6f7e4 <__assert_fail@plt+0x5cc2c>
   6f79c:	b	6f7bc <__assert_fail@plt+0x5cc04>
   6f7a0:	ldr	r0, [fp, #-12]
   6f7a4:	mvn	r1, #127	; 0x7f
   6f7a8:	add	r0, r0, r1
   6f7ac:	movw	r1, #0
   6f7b0:	cmp	r1, r0
   6f7b4:	bcc	6f894 <__assert_fail@plt+0x5ccdc>
   6f7b8:	b	6f8ac <__assert_fail@plt+0x5ccf4>
   6f7bc:	ldr	r0, [fp, #-12]
   6f7c0:	movw	r1, #0
   6f7c4:	cmp	r1, r0
   6f7c8:	bcs	6f8ac <__assert_fail@plt+0x5ccf4>
   6f7cc:	ldr	r0, [fp, #-12]
   6f7d0:	sub	r0, r0, #1
   6f7d4:	movw	r1, #127	; 0x7f
   6f7d8:	cmp	r1, r0
   6f7dc:	bcc	6f894 <__assert_fail@plt+0x5ccdc>
   6f7e0:	b	6f8ac <__assert_fail@plt+0x5ccf4>
   6f7e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   6f7e8:	mvn	r1, #127	; 0x7f
   6f7ec:	udiv	r0, r1, r0
   6f7f0:	ldr	r1, [fp, #-12]
   6f7f4:	cmp	r0, r1
   6f7f8:	bcc	6f894 <__assert_fail@plt+0x5ccdc>
   6f7fc:	b	6f8ac <__assert_fail@plt+0x5ccf4>
   6f800:	ldr	r0, [fp, #-20]	; 0xffffffec
   6f804:	cmp	r0, #0
   6f808:	bne	6f810 <__assert_fail@plt+0x5cc58>
   6f80c:	b	6f8ac <__assert_fail@plt+0x5ccf4>
   6f810:	ldr	r0, [fp, #-12]
   6f814:	cmp	r0, #0
   6f818:	bcs	6f87c <__assert_fail@plt+0x5ccc4>
   6f81c:	ldr	r0, [fp, #-12]
   6f820:	cmn	r0, #1
   6f824:	bne	6f860 <__assert_fail@plt+0x5cca8>
   6f828:	b	6f848 <__assert_fail@plt+0x5cc90>
   6f82c:	ldr	r0, [fp, #-20]	; 0xffffffec
   6f830:	mvn	r1, #127	; 0x7f
   6f834:	add	r0, r0, r1
   6f838:	movw	r1, #0
   6f83c:	cmp	r1, r0
   6f840:	bcc	6f894 <__assert_fail@plt+0x5ccdc>
   6f844:	b	6f8ac <__assert_fail@plt+0x5ccf4>
   6f848:	ldr	r0, [fp, #-20]	; 0xffffffec
   6f84c:	sub	r0, r0, #1
   6f850:	movw	r1, #127	; 0x7f
   6f854:	cmp	r1, r0
   6f858:	bcc	6f894 <__assert_fail@plt+0x5ccdc>
   6f85c:	b	6f8ac <__assert_fail@plt+0x5ccf4>
   6f860:	ldr	r0, [fp, #-12]
   6f864:	mvn	r1, #127	; 0x7f
   6f868:	udiv	r0, r1, r0
   6f86c:	ldr	r1, [fp, #-20]	; 0xffffffec
   6f870:	cmp	r0, r1
   6f874:	bcc	6f894 <__assert_fail@plt+0x5ccdc>
   6f878:	b	6f8ac <__assert_fail@plt+0x5ccf4>
   6f87c:	ldr	r0, [fp, #-20]	; 0xffffffec
   6f880:	movw	r1, #127	; 0x7f
   6f884:	udiv	r0, r1, r0
   6f888:	ldr	r1, [fp, #-12]
   6f88c:	cmp	r0, r1
   6f890:	bcs	6f8ac <__assert_fail@plt+0x5ccf4>
   6f894:	ldr	r0, [fp, #-12]
   6f898:	ldr	r1, [fp, #-20]	; 0xffffffec
   6f89c:	mul	r0, r0, r1
   6f8a0:	sxtb	r0, r0
   6f8a4:	str	r0, [fp, #-24]	; 0xffffffe8
   6f8a8:	b	709d4 <__assert_fail@plt+0x5de1c>
   6f8ac:	ldr	r0, [fp, #-12]
   6f8b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   6f8b4:	mul	r0, r0, r1
   6f8b8:	sxtb	r0, r0
   6f8bc:	str	r0, [fp, #-24]	; 0xffffffe8
   6f8c0:	b	709f0 <__assert_fail@plt+0x5de38>
   6f8c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   6f8c8:	cmp	r0, #0
   6f8cc:	bcs	6f9d8 <__assert_fail@plt+0x5ce20>
   6f8d0:	ldr	r0, [fp, #-12]
   6f8d4:	cmp	r0, #0
   6f8d8:	bcs	6f960 <__assert_fail@plt+0x5cda8>
   6f8dc:	b	6f8fc <__assert_fail@plt+0x5cd44>
   6f8e0:	ldr	r0, [fp, #-12]
   6f8e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   6f8e8:	movw	r2, #255	; 0xff
   6f8ec:	udiv	r1, r2, r1
   6f8f0:	cmp	r0, r1
   6f8f4:	bcc	6fa74 <__assert_fail@plt+0x5cebc>
   6f8f8:	b	6fa8c <__assert_fail@plt+0x5ced4>
   6f8fc:	b	6f910 <__assert_fail@plt+0x5cd58>
   6f900:	ldr	r0, [fp, #-20]	; 0xffffffec
   6f904:	cmp	r0, #1
   6f908:	bcc	6f920 <__assert_fail@plt+0x5cd68>
   6f90c:	b	6f92c <__assert_fail@plt+0x5cd74>
   6f910:	ldr	r0, [fp, #-20]	; 0xffffffec
   6f914:	movw	r1, #0
   6f918:	cmp	r1, r0
   6f91c:	bcs	6f92c <__assert_fail@plt+0x5cd74>
   6f920:	movw	r0, #0
   6f924:	str	r0, [fp, #-36]	; 0xffffffdc
   6f928:	b	6f944 <__assert_fail@plt+0x5cd8c>
   6f92c:	ldr	r0, [fp, #-20]	; 0xffffffec
   6f930:	movw	r1, #0
   6f934:	sub	r0, r1, r0
   6f938:	movw	r1, #255	; 0xff
   6f93c:	udiv	r0, r1, r0
   6f940:	str	r0, [fp, #-36]	; 0xffffffdc
   6f944:	ldr	r0, [fp, #-36]	; 0xffffffdc
   6f948:	ldr	r1, [fp, #-12]
   6f94c:	mvn	r2, #0
   6f950:	sub	r1, r2, r1
   6f954:	cmp	r0, r1
   6f958:	bls	6fa74 <__assert_fail@plt+0x5cebc>
   6f95c:	b	6fa8c <__assert_fail@plt+0x5ced4>
   6f960:	b	6f968 <__assert_fail@plt+0x5cdb0>
   6f964:	b	6f96c <__assert_fail@plt+0x5cdb4>
   6f968:	b	6f9bc <__assert_fail@plt+0x5ce04>
   6f96c:	ldr	r0, [fp, #-20]	; 0xffffffec
   6f970:	cmn	r0, #1
   6f974:	bne	6f9bc <__assert_fail@plt+0x5ce04>
   6f978:	b	6f994 <__assert_fail@plt+0x5cddc>
   6f97c:	ldr	r0, [fp, #-12]
   6f980:	add	r0, r0, #0
   6f984:	movw	r1, #0
   6f988:	cmp	r1, r0
   6f98c:	bcc	6fa74 <__assert_fail@plt+0x5cebc>
   6f990:	b	6fa8c <__assert_fail@plt+0x5ced4>
   6f994:	ldr	r0, [fp, #-12]
   6f998:	movw	r1, #0
   6f99c:	cmp	r1, r0
   6f9a0:	bcs	6fa8c <__assert_fail@plt+0x5ced4>
   6f9a4:	ldr	r0, [fp, #-12]
   6f9a8:	sub	r0, r0, #1
   6f9ac:	mvn	r1, #0
   6f9b0:	cmp	r1, r0
   6f9b4:	bcc	6fa74 <__assert_fail@plt+0x5cebc>
   6f9b8:	b	6fa8c <__assert_fail@plt+0x5ced4>
   6f9bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   6f9c0:	movw	r1, #0
   6f9c4:	udiv	r0, r1, r0
   6f9c8:	ldr	r1, [fp, #-12]
   6f9cc:	cmp	r0, r1
   6f9d0:	bcc	6fa74 <__assert_fail@plt+0x5cebc>
   6f9d4:	b	6fa8c <__assert_fail@plt+0x5ced4>
   6f9d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   6f9dc:	cmp	r0, #0
   6f9e0:	bne	6f9e8 <__assert_fail@plt+0x5ce30>
   6f9e4:	b	6fa8c <__assert_fail@plt+0x5ced4>
   6f9e8:	ldr	r0, [fp, #-12]
   6f9ec:	cmp	r0, #0
   6f9f0:	bcs	6fa5c <__assert_fail@plt+0x5cea4>
   6f9f4:	b	6f9fc <__assert_fail@plt+0x5ce44>
   6f9f8:	b	6fa00 <__assert_fail@plt+0x5ce48>
   6f9fc:	b	6fa40 <__assert_fail@plt+0x5ce88>
   6fa00:	ldr	r0, [fp, #-12]
   6fa04:	cmn	r0, #1
   6fa08:	bne	6fa40 <__assert_fail@plt+0x5ce88>
   6fa0c:	b	6fa28 <__assert_fail@plt+0x5ce70>
   6fa10:	ldr	r0, [fp, #-20]	; 0xffffffec
   6fa14:	add	r0, r0, #0
   6fa18:	movw	r1, #0
   6fa1c:	cmp	r1, r0
   6fa20:	bcc	6fa74 <__assert_fail@plt+0x5cebc>
   6fa24:	b	6fa8c <__assert_fail@plt+0x5ced4>
   6fa28:	ldr	r0, [fp, #-20]	; 0xffffffec
   6fa2c:	sub	r0, r0, #1
   6fa30:	mvn	r1, #0
   6fa34:	cmp	r1, r0
   6fa38:	bcc	6fa74 <__assert_fail@plt+0x5cebc>
   6fa3c:	b	6fa8c <__assert_fail@plt+0x5ced4>
   6fa40:	ldr	r0, [fp, #-12]
   6fa44:	movw	r1, #0
   6fa48:	udiv	r0, r1, r0
   6fa4c:	ldr	r1, [fp, #-20]	; 0xffffffec
   6fa50:	cmp	r0, r1
   6fa54:	bcc	6fa74 <__assert_fail@plt+0x5cebc>
   6fa58:	b	6fa8c <__assert_fail@plt+0x5ced4>
   6fa5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   6fa60:	movw	r1, #255	; 0xff
   6fa64:	udiv	r0, r1, r0
   6fa68:	ldr	r1, [fp, #-12]
   6fa6c:	cmp	r0, r1
   6fa70:	bcs	6fa8c <__assert_fail@plt+0x5ced4>
   6fa74:	ldr	r0, [fp, #-12]
   6fa78:	ldr	r1, [fp, #-20]	; 0xffffffec
   6fa7c:	mul	r0, r0, r1
   6fa80:	and	r0, r0, #255	; 0xff
   6fa84:	str	r0, [fp, #-24]	; 0xffffffe8
   6fa88:	b	709d4 <__assert_fail@plt+0x5de1c>
   6fa8c:	ldr	r0, [fp, #-12]
   6fa90:	ldr	r1, [fp, #-20]	; 0xffffffec
   6fa94:	mul	r0, r0, r1
   6fa98:	and	r0, r0, #255	; 0xff
   6fa9c:	str	r0, [fp, #-24]	; 0xffffffe8
   6faa0:	b	709f0 <__assert_fail@plt+0x5de38>
   6faa4:	b	6fe5c <__assert_fail@plt+0x5d2a4>
   6faa8:	b	6fc7c <__assert_fail@plt+0x5d0c4>
   6faac:	ldr	r0, [fp, #-20]	; 0xffffffec
   6fab0:	cmp	r0, #0
   6fab4:	bcs	6fbb8 <__assert_fail@plt+0x5d000>
   6fab8:	ldr	r0, [fp, #-12]
   6fabc:	cmp	r0, #0
   6fac0:	bcs	6fb48 <__assert_fail@plt+0x5cf90>
   6fac4:	b	6fae4 <__assert_fail@plt+0x5cf2c>
   6fac8:	ldr	r0, [fp, #-12]
   6facc:	ldr	r1, [fp, #-20]	; 0xffffffec
   6fad0:	movw	r2, #32767	; 0x7fff
   6fad4:	udiv	r1, r2, r1
   6fad8:	cmp	r0, r1
   6fadc:	bcc	6fc4c <__assert_fail@plt+0x5d094>
   6fae0:	b	6fc64 <__assert_fail@plt+0x5d0ac>
   6fae4:	b	6faf8 <__assert_fail@plt+0x5cf40>
   6fae8:	ldr	r0, [fp, #-20]	; 0xffffffec
   6faec:	cmp	r0, #1
   6faf0:	bcc	6fb08 <__assert_fail@plt+0x5cf50>
   6faf4:	b	6fb14 <__assert_fail@plt+0x5cf5c>
   6faf8:	ldr	r0, [fp, #-20]	; 0xffffffec
   6fafc:	movw	r1, #0
   6fb00:	cmp	r1, r0
   6fb04:	bcs	6fb14 <__assert_fail@plt+0x5cf5c>
   6fb08:	movw	r0, #0
   6fb0c:	str	r0, [fp, #-40]	; 0xffffffd8
   6fb10:	b	6fb2c <__assert_fail@plt+0x5cf74>
   6fb14:	ldr	r0, [fp, #-20]	; 0xffffffec
   6fb18:	movw	r1, #0
   6fb1c:	sub	r0, r1, r0
   6fb20:	movw	r1, #32767	; 0x7fff
   6fb24:	udiv	r0, r1, r0
   6fb28:	str	r0, [fp, #-40]	; 0xffffffd8
   6fb2c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   6fb30:	ldr	r1, [fp, #-12]
   6fb34:	mvn	r2, #0
   6fb38:	sub	r1, r2, r1
   6fb3c:	cmp	r0, r1
   6fb40:	bls	6fc4c <__assert_fail@plt+0x5d094>
   6fb44:	b	6fc64 <__assert_fail@plt+0x5d0ac>
   6fb48:	ldr	r0, [fp, #-20]	; 0xffffffec
   6fb4c:	cmn	r0, #1
   6fb50:	bne	6fb9c <__assert_fail@plt+0x5cfe4>
   6fb54:	b	6fb74 <__assert_fail@plt+0x5cfbc>
   6fb58:	ldr	r0, [pc, #3956]	; 70ad4 <__assert_fail@plt+0x5df1c>
   6fb5c:	ldr	r1, [fp, #-12]
   6fb60:	add	r0, r1, r0
   6fb64:	movw	r1, #0
   6fb68:	cmp	r1, r0
   6fb6c:	bcc	6fc4c <__assert_fail@plt+0x5d094>
   6fb70:	b	6fc64 <__assert_fail@plt+0x5d0ac>
   6fb74:	ldr	r0, [fp, #-12]
   6fb78:	movw	r1, #0
   6fb7c:	cmp	r1, r0
   6fb80:	bcs	6fc64 <__assert_fail@plt+0x5d0ac>
   6fb84:	ldr	r0, [fp, #-12]
   6fb88:	sub	r0, r0, #1
   6fb8c:	movw	r1, #32767	; 0x7fff
   6fb90:	cmp	r1, r0
   6fb94:	bcc	6fc4c <__assert_fail@plt+0x5d094>
   6fb98:	b	6fc64 <__assert_fail@plt+0x5d0ac>
   6fb9c:	ldr	r0, [pc, #3888]	; 70ad4 <__assert_fail@plt+0x5df1c>
   6fba0:	ldr	r1, [fp, #-20]	; 0xffffffec
   6fba4:	udiv	r0, r0, r1
   6fba8:	ldr	r1, [fp, #-12]
   6fbac:	cmp	r0, r1
   6fbb0:	bcc	6fc4c <__assert_fail@plt+0x5d094>
   6fbb4:	b	6fc64 <__assert_fail@plt+0x5d0ac>
   6fbb8:	ldr	r0, [fp, #-20]	; 0xffffffec
   6fbbc:	cmp	r0, #0
   6fbc0:	bne	6fbc8 <__assert_fail@plt+0x5d010>
   6fbc4:	b	6fc64 <__assert_fail@plt+0x5d0ac>
   6fbc8:	ldr	r0, [fp, #-12]
   6fbcc:	cmp	r0, #0
   6fbd0:	bcs	6fc34 <__assert_fail@plt+0x5d07c>
   6fbd4:	ldr	r0, [fp, #-12]
   6fbd8:	cmn	r0, #1
   6fbdc:	bne	6fc18 <__assert_fail@plt+0x5d060>
   6fbe0:	b	6fc00 <__assert_fail@plt+0x5d048>
   6fbe4:	ldr	r0, [pc, #3816]	; 70ad4 <__assert_fail@plt+0x5df1c>
   6fbe8:	ldr	r1, [fp, #-20]	; 0xffffffec
   6fbec:	add	r0, r1, r0
   6fbf0:	movw	r1, #0
   6fbf4:	cmp	r1, r0
   6fbf8:	bcc	6fc4c <__assert_fail@plt+0x5d094>
   6fbfc:	b	6fc64 <__assert_fail@plt+0x5d0ac>
   6fc00:	ldr	r0, [fp, #-20]	; 0xffffffec
   6fc04:	sub	r0, r0, #1
   6fc08:	movw	r1, #32767	; 0x7fff
   6fc0c:	cmp	r1, r0
   6fc10:	bcc	6fc4c <__assert_fail@plt+0x5d094>
   6fc14:	b	6fc64 <__assert_fail@plt+0x5d0ac>
   6fc18:	ldr	r0, [pc, #3764]	; 70ad4 <__assert_fail@plt+0x5df1c>
   6fc1c:	ldr	r1, [fp, #-12]
   6fc20:	udiv	r0, r0, r1
   6fc24:	ldr	r1, [fp, #-20]	; 0xffffffec
   6fc28:	cmp	r0, r1
   6fc2c:	bcc	6fc4c <__assert_fail@plt+0x5d094>
   6fc30:	b	6fc64 <__assert_fail@plt+0x5d0ac>
   6fc34:	ldr	r0, [fp, #-20]	; 0xffffffec
   6fc38:	movw	r1, #32767	; 0x7fff
   6fc3c:	udiv	r0, r1, r0
   6fc40:	ldr	r1, [fp, #-12]
   6fc44:	cmp	r0, r1
   6fc48:	bcs	6fc64 <__assert_fail@plt+0x5d0ac>
   6fc4c:	ldr	r0, [fp, #-12]
   6fc50:	ldr	r1, [fp, #-20]	; 0xffffffec
   6fc54:	mul	r0, r0, r1
   6fc58:	sxth	r0, r0
   6fc5c:	str	r0, [fp, #-24]	; 0xffffffe8
   6fc60:	b	709d4 <__assert_fail@plt+0x5de1c>
   6fc64:	ldr	r0, [fp, #-12]
   6fc68:	ldr	r1, [fp, #-20]	; 0xffffffec
   6fc6c:	mul	r0, r0, r1
   6fc70:	sxth	r0, r0
   6fc74:	str	r0, [fp, #-24]	; 0xffffffe8
   6fc78:	b	709f0 <__assert_fail@plt+0x5de38>
   6fc7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   6fc80:	cmp	r0, #0
   6fc84:	bcs	6fd90 <__assert_fail@plt+0x5d1d8>
   6fc88:	ldr	r0, [fp, #-12]
   6fc8c:	cmp	r0, #0
   6fc90:	bcs	6fd18 <__assert_fail@plt+0x5d160>
   6fc94:	b	6fcb4 <__assert_fail@plt+0x5d0fc>
   6fc98:	ldr	r0, [fp, #-12]
   6fc9c:	ldr	r1, [fp, #-20]	; 0xffffffec
   6fca0:	movw	r2, #65535	; 0xffff
   6fca4:	udiv	r1, r2, r1
   6fca8:	cmp	r0, r1
   6fcac:	bcc	6fe2c <__assert_fail@plt+0x5d274>
   6fcb0:	b	6fe44 <__assert_fail@plt+0x5d28c>
   6fcb4:	b	6fcc8 <__assert_fail@plt+0x5d110>
   6fcb8:	ldr	r0, [fp, #-20]	; 0xffffffec
   6fcbc:	cmp	r0, #1
   6fcc0:	bcc	6fcd8 <__assert_fail@plt+0x5d120>
   6fcc4:	b	6fce4 <__assert_fail@plt+0x5d12c>
   6fcc8:	ldr	r0, [fp, #-20]	; 0xffffffec
   6fccc:	movw	r1, #0
   6fcd0:	cmp	r1, r0
   6fcd4:	bcs	6fce4 <__assert_fail@plt+0x5d12c>
   6fcd8:	movw	r0, #0
   6fcdc:	str	r0, [fp, #-44]	; 0xffffffd4
   6fce0:	b	6fcfc <__assert_fail@plt+0x5d144>
   6fce4:	ldr	r0, [fp, #-20]	; 0xffffffec
   6fce8:	movw	r1, #0
   6fcec:	sub	r0, r1, r0
   6fcf0:	movw	r1, #65535	; 0xffff
   6fcf4:	udiv	r0, r1, r0
   6fcf8:	str	r0, [fp, #-44]	; 0xffffffd4
   6fcfc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   6fd00:	ldr	r1, [fp, #-12]
   6fd04:	mvn	r2, #0
   6fd08:	sub	r1, r2, r1
   6fd0c:	cmp	r0, r1
   6fd10:	bls	6fe2c <__assert_fail@plt+0x5d274>
   6fd14:	b	6fe44 <__assert_fail@plt+0x5d28c>
   6fd18:	b	6fd20 <__assert_fail@plt+0x5d168>
   6fd1c:	b	6fd24 <__assert_fail@plt+0x5d16c>
   6fd20:	b	6fd74 <__assert_fail@plt+0x5d1bc>
   6fd24:	ldr	r0, [fp, #-20]	; 0xffffffec
   6fd28:	cmn	r0, #1
   6fd2c:	bne	6fd74 <__assert_fail@plt+0x5d1bc>
   6fd30:	b	6fd4c <__assert_fail@plt+0x5d194>
   6fd34:	ldr	r0, [fp, #-12]
   6fd38:	add	r0, r0, #0
   6fd3c:	movw	r1, #0
   6fd40:	cmp	r1, r0
   6fd44:	bcc	6fe2c <__assert_fail@plt+0x5d274>
   6fd48:	b	6fe44 <__assert_fail@plt+0x5d28c>
   6fd4c:	ldr	r0, [fp, #-12]
   6fd50:	movw	r1, #0
   6fd54:	cmp	r1, r0
   6fd58:	bcs	6fe44 <__assert_fail@plt+0x5d28c>
   6fd5c:	ldr	r0, [fp, #-12]
   6fd60:	sub	r0, r0, #1
   6fd64:	mvn	r1, #0
   6fd68:	cmp	r1, r0
   6fd6c:	bcc	6fe2c <__assert_fail@plt+0x5d274>
   6fd70:	b	6fe44 <__assert_fail@plt+0x5d28c>
   6fd74:	ldr	r0, [fp, #-20]	; 0xffffffec
   6fd78:	movw	r1, #0
   6fd7c:	udiv	r0, r1, r0
   6fd80:	ldr	r1, [fp, #-12]
   6fd84:	cmp	r0, r1
   6fd88:	bcc	6fe2c <__assert_fail@plt+0x5d274>
   6fd8c:	b	6fe44 <__assert_fail@plt+0x5d28c>
   6fd90:	ldr	r0, [fp, #-20]	; 0xffffffec
   6fd94:	cmp	r0, #0
   6fd98:	bne	6fda0 <__assert_fail@plt+0x5d1e8>
   6fd9c:	b	6fe44 <__assert_fail@plt+0x5d28c>
   6fda0:	ldr	r0, [fp, #-12]
   6fda4:	cmp	r0, #0
   6fda8:	bcs	6fe14 <__assert_fail@plt+0x5d25c>
   6fdac:	b	6fdb4 <__assert_fail@plt+0x5d1fc>
   6fdb0:	b	6fdb8 <__assert_fail@plt+0x5d200>
   6fdb4:	b	6fdf8 <__assert_fail@plt+0x5d240>
   6fdb8:	ldr	r0, [fp, #-12]
   6fdbc:	cmn	r0, #1
   6fdc0:	bne	6fdf8 <__assert_fail@plt+0x5d240>
   6fdc4:	b	6fde0 <__assert_fail@plt+0x5d228>
   6fdc8:	ldr	r0, [fp, #-20]	; 0xffffffec
   6fdcc:	add	r0, r0, #0
   6fdd0:	movw	r1, #0
   6fdd4:	cmp	r1, r0
   6fdd8:	bcc	6fe2c <__assert_fail@plt+0x5d274>
   6fddc:	b	6fe44 <__assert_fail@plt+0x5d28c>
   6fde0:	ldr	r0, [fp, #-20]	; 0xffffffec
   6fde4:	sub	r0, r0, #1
   6fde8:	mvn	r1, #0
   6fdec:	cmp	r1, r0
   6fdf0:	bcc	6fe2c <__assert_fail@plt+0x5d274>
   6fdf4:	b	6fe44 <__assert_fail@plt+0x5d28c>
   6fdf8:	ldr	r0, [fp, #-12]
   6fdfc:	movw	r1, #0
   6fe00:	udiv	r0, r1, r0
   6fe04:	ldr	r1, [fp, #-20]	; 0xffffffec
   6fe08:	cmp	r0, r1
   6fe0c:	bcc	6fe2c <__assert_fail@plt+0x5d274>
   6fe10:	b	6fe44 <__assert_fail@plt+0x5d28c>
   6fe14:	ldr	r0, [fp, #-20]	; 0xffffffec
   6fe18:	movw	r1, #65535	; 0xffff
   6fe1c:	udiv	r0, r1, r0
   6fe20:	ldr	r1, [fp, #-12]
   6fe24:	cmp	r0, r1
   6fe28:	bcs	6fe44 <__assert_fail@plt+0x5d28c>
   6fe2c:	ldr	r0, [fp, #-12]
   6fe30:	ldr	r1, [fp, #-20]	; 0xffffffec
   6fe34:	mul	r0, r0, r1
   6fe38:	uxth	r0, r0
   6fe3c:	str	r0, [fp, #-24]	; 0xffffffe8
   6fe40:	b	709d4 <__assert_fail@plt+0x5de1c>
   6fe44:	ldr	r0, [fp, #-12]
   6fe48:	ldr	r1, [fp, #-20]	; 0xffffffec
   6fe4c:	mul	r0, r0, r1
   6fe50:	uxth	r0, r0
   6fe54:	str	r0, [fp, #-24]	; 0xffffffe8
   6fe58:	b	709f0 <__assert_fail@plt+0x5de38>
   6fe5c:	b	6fe60 <__assert_fail@plt+0x5d2a8>
   6fe60:	b	70024 <__assert_fail@plt+0x5d46c>
   6fe64:	ldr	r0, [fp, #-20]	; 0xffffffec
   6fe68:	cmp	r0, #0
   6fe6c:	bcs	6ff6c <__assert_fail@plt+0x5d3b4>
   6fe70:	ldr	r0, [fp, #-12]
   6fe74:	cmp	r0, #0
   6fe78:	bcs	6ff00 <__assert_fail@plt+0x5d348>
   6fe7c:	b	6fe9c <__assert_fail@plt+0x5d2e4>
   6fe80:	ldr	r0, [pc, #3140]	; 70acc <__assert_fail@plt+0x5df14>
   6fe84:	ldr	r1, [fp, #-12]
   6fe88:	ldr	r2, [fp, #-20]	; 0xffffffec
   6fe8c:	udiv	r0, r0, r2
   6fe90:	cmp	r1, r0
   6fe94:	bcc	6fffc <__assert_fail@plt+0x5d444>
   6fe98:	b	70010 <__assert_fail@plt+0x5d458>
   6fe9c:	b	6feb0 <__assert_fail@plt+0x5d2f8>
   6fea0:	ldr	r0, [fp, #-20]	; 0xffffffec
   6fea4:	cmp	r0, #1
   6fea8:	bcc	6fec0 <__assert_fail@plt+0x5d308>
   6feac:	b	6fecc <__assert_fail@plt+0x5d314>
   6feb0:	ldr	r0, [fp, #-20]	; 0xffffffec
   6feb4:	movw	r1, #0
   6feb8:	cmp	r1, r0
   6febc:	bcs	6fecc <__assert_fail@plt+0x5d314>
   6fec0:	movw	r0, #0
   6fec4:	str	r0, [fp, #-48]	; 0xffffffd0
   6fec8:	b	6fee4 <__assert_fail@plt+0x5d32c>
   6fecc:	ldr	r0, [pc, #3064]	; 70acc <__assert_fail@plt+0x5df14>
   6fed0:	ldr	r1, [fp, #-20]	; 0xffffffec
   6fed4:	movw	r2, #0
   6fed8:	sub	r1, r2, r1
   6fedc:	udiv	r0, r0, r1
   6fee0:	str	r0, [fp, #-48]	; 0xffffffd0
   6fee4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   6fee8:	ldr	r1, [fp, #-12]
   6feec:	mvn	r2, #0
   6fef0:	sub	r1, r2, r1
   6fef4:	cmp	r0, r1
   6fef8:	bls	6fffc <__assert_fail@plt+0x5d444>
   6fefc:	b	70010 <__assert_fail@plt+0x5d458>
   6ff00:	ldr	r0, [fp, #-20]	; 0xffffffec
   6ff04:	cmn	r0, #1
   6ff08:	bne	6ff50 <__assert_fail@plt+0x5d398>
   6ff0c:	b	6ff28 <__assert_fail@plt+0x5d370>
   6ff10:	ldr	r0, [fp, #-12]
   6ff14:	add	r0, r0, #-2147483648	; 0x80000000
   6ff18:	movw	r1, #0
   6ff1c:	cmp	r1, r0
   6ff20:	bcc	6fffc <__assert_fail@plt+0x5d444>
   6ff24:	b	70010 <__assert_fail@plt+0x5d458>
   6ff28:	ldr	r0, [fp, #-12]
   6ff2c:	movw	r1, #0
   6ff30:	cmp	r1, r0
   6ff34:	bcs	70010 <__assert_fail@plt+0x5d458>
   6ff38:	ldr	r0, [pc, #2956]	; 70acc <__assert_fail@plt+0x5df14>
   6ff3c:	ldr	r1, [fp, #-12]
   6ff40:	sub	r1, r1, #1
   6ff44:	cmp	r0, r1
   6ff48:	bcc	6fffc <__assert_fail@plt+0x5d444>
   6ff4c:	b	70010 <__assert_fail@plt+0x5d458>
   6ff50:	ldr	r0, [pc, #2936]	; 70ad0 <__assert_fail@plt+0x5df18>
   6ff54:	ldr	r1, [fp, #-20]	; 0xffffffec
   6ff58:	udiv	r0, r0, r1
   6ff5c:	ldr	r1, [fp, #-12]
   6ff60:	cmp	r0, r1
   6ff64:	bcc	6fffc <__assert_fail@plt+0x5d444>
   6ff68:	b	70010 <__assert_fail@plt+0x5d458>
   6ff6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   6ff70:	cmp	r0, #0
   6ff74:	bne	6ff7c <__assert_fail@plt+0x5d3c4>
   6ff78:	b	70010 <__assert_fail@plt+0x5d458>
   6ff7c:	ldr	r0, [fp, #-12]
   6ff80:	cmp	r0, #0
   6ff84:	bcs	6ffe4 <__assert_fail@plt+0x5d42c>
   6ff88:	ldr	r0, [fp, #-12]
   6ff8c:	cmn	r0, #1
   6ff90:	bne	6ffc8 <__assert_fail@plt+0x5d410>
   6ff94:	b	6ffb0 <__assert_fail@plt+0x5d3f8>
   6ff98:	ldr	r0, [fp, #-20]	; 0xffffffec
   6ff9c:	add	r0, r0, #-2147483648	; 0x80000000
   6ffa0:	movw	r1, #0
   6ffa4:	cmp	r1, r0
   6ffa8:	bcc	6fffc <__assert_fail@plt+0x5d444>
   6ffac:	b	70010 <__assert_fail@plt+0x5d458>
   6ffb0:	ldr	r0, [pc, #2836]	; 70acc <__assert_fail@plt+0x5df14>
   6ffb4:	ldr	r1, [fp, #-20]	; 0xffffffec
   6ffb8:	sub	r1, r1, #1
   6ffbc:	cmp	r0, r1
   6ffc0:	bcc	6fffc <__assert_fail@plt+0x5d444>
   6ffc4:	b	70010 <__assert_fail@plt+0x5d458>
   6ffc8:	ldr	r0, [pc, #2816]	; 70ad0 <__assert_fail@plt+0x5df18>
   6ffcc:	ldr	r1, [fp, #-12]
   6ffd0:	udiv	r0, r0, r1
   6ffd4:	ldr	r1, [fp, #-20]	; 0xffffffec
   6ffd8:	cmp	r0, r1
   6ffdc:	bcc	6fffc <__assert_fail@plt+0x5d444>
   6ffe0:	b	70010 <__assert_fail@plt+0x5d458>
   6ffe4:	ldr	r0, [pc, #2784]	; 70acc <__assert_fail@plt+0x5df14>
   6ffe8:	ldr	r1, [fp, #-20]	; 0xffffffec
   6ffec:	udiv	r0, r0, r1
   6fff0:	ldr	r1, [fp, #-12]
   6fff4:	cmp	r0, r1
   6fff8:	bcs	70010 <__assert_fail@plt+0x5d458>
   6fffc:	ldr	r0, [fp, #-12]
   70000:	ldr	r1, [fp, #-20]	; 0xffffffec
   70004:	mul	r0, r0, r1
   70008:	str	r0, [fp, #-24]	; 0xffffffe8
   7000c:	b	709d4 <__assert_fail@plt+0x5de1c>
   70010:	ldr	r0, [fp, #-12]
   70014:	ldr	r1, [fp, #-20]	; 0xffffffec
   70018:	mul	r0, r0, r1
   7001c:	str	r0, [fp, #-24]	; 0xffffffe8
   70020:	b	709f0 <__assert_fail@plt+0x5de38>
   70024:	ldr	r0, [fp, #-20]	; 0xffffffec
   70028:	cmp	r0, #0
   7002c:	bcs	70138 <__assert_fail@plt+0x5d580>
   70030:	ldr	r0, [fp, #-12]
   70034:	cmp	r0, #0
   70038:	bcs	700c0 <__assert_fail@plt+0x5d508>
   7003c:	b	7005c <__assert_fail@plt+0x5d4a4>
   70040:	ldr	r0, [fp, #-12]
   70044:	ldr	r1, [fp, #-20]	; 0xffffffec
   70048:	mvn	r2, #0
   7004c:	udiv	r1, r2, r1
   70050:	cmp	r0, r1
   70054:	bcc	701d4 <__assert_fail@plt+0x5d61c>
   70058:	b	701e8 <__assert_fail@plt+0x5d630>
   7005c:	b	70070 <__assert_fail@plt+0x5d4b8>
   70060:	ldr	r0, [fp, #-20]	; 0xffffffec
   70064:	cmp	r0, #1
   70068:	bcc	70080 <__assert_fail@plt+0x5d4c8>
   7006c:	b	7008c <__assert_fail@plt+0x5d4d4>
   70070:	ldr	r0, [fp, #-20]	; 0xffffffec
   70074:	movw	r1, #0
   70078:	cmp	r1, r0
   7007c:	bcs	7008c <__assert_fail@plt+0x5d4d4>
   70080:	movw	r0, #1
   70084:	str	r0, [sp, #52]	; 0x34
   70088:	b	700a4 <__assert_fail@plt+0x5d4ec>
   7008c:	ldr	r0, [fp, #-20]	; 0xffffffec
   70090:	movw	r1, #0
   70094:	sub	r0, r1, r0
   70098:	mvn	r1, #0
   7009c:	udiv	r0, r1, r0
   700a0:	str	r0, [sp, #52]	; 0x34
   700a4:	ldr	r0, [sp, #52]	; 0x34
   700a8:	ldr	r1, [fp, #-12]
   700ac:	mvn	r2, #0
   700b0:	sub	r1, r2, r1
   700b4:	cmp	r0, r1
   700b8:	bls	701d4 <__assert_fail@plt+0x5d61c>
   700bc:	b	701e8 <__assert_fail@plt+0x5d630>
   700c0:	b	700c8 <__assert_fail@plt+0x5d510>
   700c4:	b	700cc <__assert_fail@plt+0x5d514>
   700c8:	b	7011c <__assert_fail@plt+0x5d564>
   700cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   700d0:	cmn	r0, #1
   700d4:	bne	7011c <__assert_fail@plt+0x5d564>
   700d8:	b	700f4 <__assert_fail@plt+0x5d53c>
   700dc:	ldr	r0, [fp, #-12]
   700e0:	add	r0, r0, #0
   700e4:	movw	r1, #0
   700e8:	cmp	r1, r0
   700ec:	bcc	701d4 <__assert_fail@plt+0x5d61c>
   700f0:	b	701e8 <__assert_fail@plt+0x5d630>
   700f4:	ldr	r0, [fp, #-12]
   700f8:	movw	r1, #0
   700fc:	cmp	r1, r0
   70100:	bcs	701e8 <__assert_fail@plt+0x5d630>
   70104:	ldr	r0, [fp, #-12]
   70108:	sub	r0, r0, #1
   7010c:	mvn	r1, #0
   70110:	cmp	r1, r0
   70114:	bcc	701d4 <__assert_fail@plt+0x5d61c>
   70118:	b	701e8 <__assert_fail@plt+0x5d630>
   7011c:	ldr	r0, [fp, #-20]	; 0xffffffec
   70120:	movw	r1, #0
   70124:	udiv	r0, r1, r0
   70128:	ldr	r1, [fp, #-12]
   7012c:	cmp	r0, r1
   70130:	bcc	701d4 <__assert_fail@plt+0x5d61c>
   70134:	b	701e8 <__assert_fail@plt+0x5d630>
   70138:	ldr	r0, [fp, #-20]	; 0xffffffec
   7013c:	cmp	r0, #0
   70140:	bne	70148 <__assert_fail@plt+0x5d590>
   70144:	b	701e8 <__assert_fail@plt+0x5d630>
   70148:	ldr	r0, [fp, #-12]
   7014c:	cmp	r0, #0
   70150:	bcs	701bc <__assert_fail@plt+0x5d604>
   70154:	b	7015c <__assert_fail@plt+0x5d5a4>
   70158:	b	70160 <__assert_fail@plt+0x5d5a8>
   7015c:	b	701a0 <__assert_fail@plt+0x5d5e8>
   70160:	ldr	r0, [fp, #-12]
   70164:	cmn	r0, #1
   70168:	bne	701a0 <__assert_fail@plt+0x5d5e8>
   7016c:	b	70188 <__assert_fail@plt+0x5d5d0>
   70170:	ldr	r0, [fp, #-20]	; 0xffffffec
   70174:	add	r0, r0, #0
   70178:	movw	r1, #0
   7017c:	cmp	r1, r0
   70180:	bcc	701d4 <__assert_fail@plt+0x5d61c>
   70184:	b	701e8 <__assert_fail@plt+0x5d630>
   70188:	ldr	r0, [fp, #-20]	; 0xffffffec
   7018c:	sub	r0, r0, #1
   70190:	mvn	r1, #0
   70194:	cmp	r1, r0
   70198:	bcc	701d4 <__assert_fail@plt+0x5d61c>
   7019c:	b	701e8 <__assert_fail@plt+0x5d630>
   701a0:	ldr	r0, [fp, #-12]
   701a4:	movw	r1, #0
   701a8:	udiv	r0, r1, r0
   701ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   701b0:	cmp	r0, r1
   701b4:	bcc	701d4 <__assert_fail@plt+0x5d61c>
   701b8:	b	701e8 <__assert_fail@plt+0x5d630>
   701bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   701c0:	mvn	r1, #0
   701c4:	udiv	r0, r1, r0
   701c8:	ldr	r1, [fp, #-12]
   701cc:	cmp	r0, r1
   701d0:	bcs	701e8 <__assert_fail@plt+0x5d630>
   701d4:	ldr	r0, [fp, #-12]
   701d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   701dc:	mul	r0, r0, r1
   701e0:	str	r0, [fp, #-24]	; 0xffffffe8
   701e4:	b	709d4 <__assert_fail@plt+0x5de1c>
   701e8:	ldr	r0, [fp, #-12]
   701ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   701f0:	mul	r0, r0, r1
   701f4:	str	r0, [fp, #-24]	; 0xffffffe8
   701f8:	b	709f0 <__assert_fail@plt+0x5de38>
   701fc:	b	70200 <__assert_fail@plt+0x5d648>
   70200:	b	703c4 <__assert_fail@plt+0x5d80c>
   70204:	ldr	r0, [fp, #-20]	; 0xffffffec
   70208:	cmp	r0, #0
   7020c:	bcs	7030c <__assert_fail@plt+0x5d754>
   70210:	ldr	r0, [fp, #-12]
   70214:	cmp	r0, #0
   70218:	bcs	702a0 <__assert_fail@plt+0x5d6e8>
   7021c:	b	7023c <__assert_fail@plt+0x5d684>
   70220:	ldr	r0, [pc, #2212]	; 70acc <__assert_fail@plt+0x5df14>
   70224:	ldr	r1, [fp, #-12]
   70228:	ldr	r2, [fp, #-20]	; 0xffffffec
   7022c:	udiv	r0, r0, r2
   70230:	cmp	r1, r0
   70234:	bcc	7039c <__assert_fail@plt+0x5d7e4>
   70238:	b	703b0 <__assert_fail@plt+0x5d7f8>
   7023c:	b	70250 <__assert_fail@plt+0x5d698>
   70240:	ldr	r0, [fp, #-20]	; 0xffffffec
   70244:	cmp	r0, #1
   70248:	bcc	70260 <__assert_fail@plt+0x5d6a8>
   7024c:	b	7026c <__assert_fail@plt+0x5d6b4>
   70250:	ldr	r0, [fp, #-20]	; 0xffffffec
   70254:	movw	r1, #0
   70258:	cmp	r1, r0
   7025c:	bcs	7026c <__assert_fail@plt+0x5d6b4>
   70260:	movw	r0, #0
   70264:	str	r0, [sp, #48]	; 0x30
   70268:	b	70284 <__assert_fail@plt+0x5d6cc>
   7026c:	ldr	r0, [pc, #2136]	; 70acc <__assert_fail@plt+0x5df14>
   70270:	ldr	r1, [fp, #-20]	; 0xffffffec
   70274:	movw	r2, #0
   70278:	sub	r1, r2, r1
   7027c:	udiv	r0, r0, r1
   70280:	str	r0, [sp, #48]	; 0x30
   70284:	ldr	r0, [sp, #48]	; 0x30
   70288:	ldr	r1, [fp, #-12]
   7028c:	mvn	r2, #0
   70290:	sub	r1, r2, r1
   70294:	cmp	r0, r1
   70298:	bls	7039c <__assert_fail@plt+0x5d7e4>
   7029c:	b	703b0 <__assert_fail@plt+0x5d7f8>
   702a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   702a4:	cmn	r0, #1
   702a8:	bne	702f0 <__assert_fail@plt+0x5d738>
   702ac:	b	702c8 <__assert_fail@plt+0x5d710>
   702b0:	ldr	r0, [fp, #-12]
   702b4:	add	r0, r0, #-2147483648	; 0x80000000
   702b8:	movw	r1, #0
   702bc:	cmp	r1, r0
   702c0:	bcc	7039c <__assert_fail@plt+0x5d7e4>
   702c4:	b	703b0 <__assert_fail@plt+0x5d7f8>
   702c8:	ldr	r0, [fp, #-12]
   702cc:	movw	r1, #0
   702d0:	cmp	r1, r0
   702d4:	bcs	703b0 <__assert_fail@plt+0x5d7f8>
   702d8:	ldr	r0, [pc, #2028]	; 70acc <__assert_fail@plt+0x5df14>
   702dc:	ldr	r1, [fp, #-12]
   702e0:	sub	r1, r1, #1
   702e4:	cmp	r0, r1
   702e8:	bcc	7039c <__assert_fail@plt+0x5d7e4>
   702ec:	b	703b0 <__assert_fail@plt+0x5d7f8>
   702f0:	ldr	r0, [pc, #2008]	; 70ad0 <__assert_fail@plt+0x5df18>
   702f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   702f8:	udiv	r0, r0, r1
   702fc:	ldr	r1, [fp, #-12]
   70300:	cmp	r0, r1
   70304:	bcc	7039c <__assert_fail@plt+0x5d7e4>
   70308:	b	703b0 <__assert_fail@plt+0x5d7f8>
   7030c:	ldr	r0, [fp, #-20]	; 0xffffffec
   70310:	cmp	r0, #0
   70314:	bne	7031c <__assert_fail@plt+0x5d764>
   70318:	b	703b0 <__assert_fail@plt+0x5d7f8>
   7031c:	ldr	r0, [fp, #-12]
   70320:	cmp	r0, #0
   70324:	bcs	70384 <__assert_fail@plt+0x5d7cc>
   70328:	ldr	r0, [fp, #-12]
   7032c:	cmn	r0, #1
   70330:	bne	70368 <__assert_fail@plt+0x5d7b0>
   70334:	b	70350 <__assert_fail@plt+0x5d798>
   70338:	ldr	r0, [fp, #-20]	; 0xffffffec
   7033c:	add	r0, r0, #-2147483648	; 0x80000000
   70340:	movw	r1, #0
   70344:	cmp	r1, r0
   70348:	bcc	7039c <__assert_fail@plt+0x5d7e4>
   7034c:	b	703b0 <__assert_fail@plt+0x5d7f8>
   70350:	ldr	r0, [pc, #1908]	; 70acc <__assert_fail@plt+0x5df14>
   70354:	ldr	r1, [fp, #-20]	; 0xffffffec
   70358:	sub	r1, r1, #1
   7035c:	cmp	r0, r1
   70360:	bcc	7039c <__assert_fail@plt+0x5d7e4>
   70364:	b	703b0 <__assert_fail@plt+0x5d7f8>
   70368:	ldr	r0, [pc, #1888]	; 70ad0 <__assert_fail@plt+0x5df18>
   7036c:	ldr	r1, [fp, #-12]
   70370:	udiv	r0, r0, r1
   70374:	ldr	r1, [fp, #-20]	; 0xffffffec
   70378:	cmp	r0, r1
   7037c:	bcc	7039c <__assert_fail@plt+0x5d7e4>
   70380:	b	703b0 <__assert_fail@plt+0x5d7f8>
   70384:	ldr	r0, [pc, #1856]	; 70acc <__assert_fail@plt+0x5df14>
   70388:	ldr	r1, [fp, #-20]	; 0xffffffec
   7038c:	udiv	r0, r0, r1
   70390:	ldr	r1, [fp, #-12]
   70394:	cmp	r0, r1
   70398:	bcs	703b0 <__assert_fail@plt+0x5d7f8>
   7039c:	ldr	r0, [fp, #-12]
   703a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   703a4:	mul	r0, r0, r1
   703a8:	str	r0, [fp, #-24]	; 0xffffffe8
   703ac:	b	709d4 <__assert_fail@plt+0x5de1c>
   703b0:	ldr	r0, [fp, #-12]
   703b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   703b8:	mul	r0, r0, r1
   703bc:	str	r0, [fp, #-24]	; 0xffffffe8
   703c0:	b	709f0 <__assert_fail@plt+0x5de38>
   703c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   703c8:	cmp	r0, #0
   703cc:	bcs	704d8 <__assert_fail@plt+0x5d920>
   703d0:	ldr	r0, [fp, #-12]
   703d4:	cmp	r0, #0
   703d8:	bcs	70460 <__assert_fail@plt+0x5d8a8>
   703dc:	b	703fc <__assert_fail@plt+0x5d844>
   703e0:	ldr	r0, [fp, #-12]
   703e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   703e8:	mvn	r2, #0
   703ec:	udiv	r1, r2, r1
   703f0:	cmp	r0, r1
   703f4:	bcc	70574 <__assert_fail@plt+0x5d9bc>
   703f8:	b	70588 <__assert_fail@plt+0x5d9d0>
   703fc:	b	70410 <__assert_fail@plt+0x5d858>
   70400:	ldr	r0, [fp, #-20]	; 0xffffffec
   70404:	cmp	r0, #1
   70408:	bcc	70420 <__assert_fail@plt+0x5d868>
   7040c:	b	7042c <__assert_fail@plt+0x5d874>
   70410:	ldr	r0, [fp, #-20]	; 0xffffffec
   70414:	movw	r1, #0
   70418:	cmp	r1, r0
   7041c:	bcs	7042c <__assert_fail@plt+0x5d874>
   70420:	movw	r0, #1
   70424:	str	r0, [sp, #44]	; 0x2c
   70428:	b	70444 <__assert_fail@plt+0x5d88c>
   7042c:	ldr	r0, [fp, #-20]	; 0xffffffec
   70430:	movw	r1, #0
   70434:	sub	r0, r1, r0
   70438:	mvn	r1, #0
   7043c:	udiv	r0, r1, r0
   70440:	str	r0, [sp, #44]	; 0x2c
   70444:	ldr	r0, [sp, #44]	; 0x2c
   70448:	ldr	r1, [fp, #-12]
   7044c:	mvn	r2, #0
   70450:	sub	r1, r2, r1
   70454:	cmp	r0, r1
   70458:	bls	70574 <__assert_fail@plt+0x5d9bc>
   7045c:	b	70588 <__assert_fail@plt+0x5d9d0>
   70460:	b	70468 <__assert_fail@plt+0x5d8b0>
   70464:	b	7046c <__assert_fail@plt+0x5d8b4>
   70468:	b	704bc <__assert_fail@plt+0x5d904>
   7046c:	ldr	r0, [fp, #-20]	; 0xffffffec
   70470:	cmn	r0, #1
   70474:	bne	704bc <__assert_fail@plt+0x5d904>
   70478:	b	70494 <__assert_fail@plt+0x5d8dc>
   7047c:	ldr	r0, [fp, #-12]
   70480:	add	r0, r0, #0
   70484:	movw	r1, #0
   70488:	cmp	r1, r0
   7048c:	bcc	70574 <__assert_fail@plt+0x5d9bc>
   70490:	b	70588 <__assert_fail@plt+0x5d9d0>
   70494:	ldr	r0, [fp, #-12]
   70498:	movw	r1, #0
   7049c:	cmp	r1, r0
   704a0:	bcs	70588 <__assert_fail@plt+0x5d9d0>
   704a4:	ldr	r0, [fp, #-12]
   704a8:	sub	r0, r0, #1
   704ac:	mvn	r1, #0
   704b0:	cmp	r1, r0
   704b4:	bcc	70574 <__assert_fail@plt+0x5d9bc>
   704b8:	b	70588 <__assert_fail@plt+0x5d9d0>
   704bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   704c0:	movw	r1, #0
   704c4:	udiv	r0, r1, r0
   704c8:	ldr	r1, [fp, #-12]
   704cc:	cmp	r0, r1
   704d0:	bcc	70574 <__assert_fail@plt+0x5d9bc>
   704d4:	b	70588 <__assert_fail@plt+0x5d9d0>
   704d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   704dc:	cmp	r0, #0
   704e0:	bne	704e8 <__assert_fail@plt+0x5d930>
   704e4:	b	70588 <__assert_fail@plt+0x5d9d0>
   704e8:	ldr	r0, [fp, #-12]
   704ec:	cmp	r0, #0
   704f0:	bcs	7055c <__assert_fail@plt+0x5d9a4>
   704f4:	b	704fc <__assert_fail@plt+0x5d944>
   704f8:	b	70500 <__assert_fail@plt+0x5d948>
   704fc:	b	70540 <__assert_fail@plt+0x5d988>
   70500:	ldr	r0, [fp, #-12]
   70504:	cmn	r0, #1
   70508:	bne	70540 <__assert_fail@plt+0x5d988>
   7050c:	b	70528 <__assert_fail@plt+0x5d970>
   70510:	ldr	r0, [fp, #-20]	; 0xffffffec
   70514:	add	r0, r0, #0
   70518:	movw	r1, #0
   7051c:	cmp	r1, r0
   70520:	bcc	70574 <__assert_fail@plt+0x5d9bc>
   70524:	b	70588 <__assert_fail@plt+0x5d9d0>
   70528:	ldr	r0, [fp, #-20]	; 0xffffffec
   7052c:	sub	r0, r0, #1
   70530:	mvn	r1, #0
   70534:	cmp	r1, r0
   70538:	bcc	70574 <__assert_fail@plt+0x5d9bc>
   7053c:	b	70588 <__assert_fail@plt+0x5d9d0>
   70540:	ldr	r0, [fp, #-12]
   70544:	movw	r1, #0
   70548:	udiv	r0, r1, r0
   7054c:	ldr	r1, [fp, #-20]	; 0xffffffec
   70550:	cmp	r0, r1
   70554:	bcc	70574 <__assert_fail@plt+0x5d9bc>
   70558:	b	70588 <__assert_fail@plt+0x5d9d0>
   7055c:	ldr	r0, [fp, #-20]	; 0xffffffec
   70560:	mvn	r1, #0
   70564:	udiv	r0, r1, r0
   70568:	ldr	r1, [fp, #-12]
   7056c:	cmp	r0, r1
   70570:	bcs	70588 <__assert_fail@plt+0x5d9d0>
   70574:	ldr	r0, [fp, #-12]
   70578:	ldr	r1, [fp, #-20]	; 0xffffffec
   7057c:	mul	r0, r0, r1
   70580:	str	r0, [fp, #-24]	; 0xffffffe8
   70584:	b	709d4 <__assert_fail@plt+0x5de1c>
   70588:	ldr	r0, [fp, #-12]
   7058c:	ldr	r1, [fp, #-20]	; 0xffffffec
   70590:	mul	r0, r0, r1
   70594:	str	r0, [fp, #-24]	; 0xffffffe8
   70598:	b	709f0 <__assert_fail@plt+0x5de38>
   7059c:	b	707b8 <__assert_fail@plt+0x5dc00>
   705a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   705a4:	cmp	r0, #0
   705a8:	bcs	706e8 <__assert_fail@plt+0x5db30>
   705ac:	ldr	r0, [fp, #-12]
   705b0:	cmp	r0, #0
   705b4:	bcs	70674 <__assert_fail@plt+0x5dabc>
   705b8:	b	705bc <__assert_fail@plt+0x5da04>
   705bc:	ldr	r0, [fp, #-12]
   705c0:	ldr	r2, [fp, #-20]	; 0xffffffec
   705c4:	mvn	r1, #0
   705c8:	mvn	r3, #-2147483648	; 0x80000000
   705cc:	mov	ip, #0
   705d0:	str	r0, [sp, #40]	; 0x28
   705d4:	mov	r0, r1
   705d8:	mov	r1, r3
   705dc:	mov	r3, ip
   705e0:	bl	7540c <__assert_fail@plt+0x62854>
   705e4:	ldr	r2, [sp, #40]	; 0x28
   705e8:	subs	r0, r2, r0
   705ec:	rscs	r1, r1, #0
   705f0:	blt	70790 <__assert_fail@plt+0x5dbd8>
   705f4:	b	707a4 <__assert_fail@plt+0x5dbec>
   705f8:	b	7060c <__assert_fail@plt+0x5da54>
   705fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   70600:	cmp	r0, #1
   70604:	bcc	7061c <__assert_fail@plt+0x5da64>
   70608:	b	70630 <__assert_fail@plt+0x5da78>
   7060c:	ldr	r0, [fp, #-20]	; 0xffffffec
   70610:	movw	r1, #0
   70614:	cmp	r1, r0
   70618:	bcs	70630 <__assert_fail@plt+0x5da78>
   7061c:	mov	r0, #0
   70620:	mvn	r1, #0
   70624:	str	r1, [sp, #36]	; 0x24
   70628:	str	r0, [sp, #32]
   7062c:	b	70654 <__assert_fail@plt+0x5da9c>
   70630:	ldr	r0, [fp, #-20]	; 0xffffffec
   70634:	rsb	r2, r0, #0
   70638:	mvn	r0, #0
   7063c:	mvn	r1, #-2147483648	; 0x80000000
   70640:	mov	r3, #0
   70644:	bl	7540c <__assert_fail@plt+0x62854>
   70648:	str	r0, [sp, #36]	; 0x24
   7064c:	str	r1, [sp, #32]
   70650:	b	70654 <__assert_fail@plt+0x5da9c>
   70654:	ldr	r0, [sp, #32]
   70658:	ldr	r1, [sp, #36]	; 0x24
   7065c:	ldr	r2, [fp, #-12]
   70660:	mvn	r2, r2
   70664:	subs	r1, r2, r1
   70668:	rscs	r0, r0, #0
   7066c:	bge	70790 <__assert_fail@plt+0x5dbd8>
   70670:	b	707a4 <__assert_fail@plt+0x5dbec>
   70674:	ldr	r0, [fp, #-20]	; 0xffffffec
   70678:	cmn	r0, #1
   7067c:	bne	706bc <__assert_fail@plt+0x5db04>
   70680:	b	7069c <__assert_fail@plt+0x5dae4>
   70684:	ldr	r0, [fp, #-12]
   70688:	rsbs	r0, r0, #0
   7068c:	mov	r1, #0
   70690:	sbcs	r1, r1, #-2147483648	; 0x80000000
   70694:	blt	70790 <__assert_fail@plt+0x5dbd8>
   70698:	b	707a4 <__assert_fail@plt+0x5dbec>
   7069c:	ldr	r0, [fp, #-12]
   706a0:	movw	r1, #0
   706a4:	cmp	r1, r0
   706a8:	bcs	707a4 <__assert_fail@plt+0x5dbec>
   706ac:	mov	r0, #0
   706b0:	cmp	r0, #0
   706b4:	bne	70790 <__assert_fail@plt+0x5dbd8>
   706b8:	b	707a4 <__assert_fail@plt+0x5dbec>
   706bc:	ldr	r2, [fp, #-20]	; 0xffffffec
   706c0:	mov	r1, #-2147483648	; 0x80000000
   706c4:	mov	r0, #0
   706c8:	str	r0, [sp, #28]
   706cc:	ldr	r3, [sp, #28]
   706d0:	bl	75338 <__assert_fail@plt+0x62780>
   706d4:	ldr	r2, [fp, #-12]
   706d8:	subs	r0, r0, r2
   706dc:	sbcs	r1, r1, #0
   706e0:	blt	70790 <__assert_fail@plt+0x5dbd8>
   706e4:	b	707a4 <__assert_fail@plt+0x5dbec>
   706e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   706ec:	cmp	r0, #0
   706f0:	bne	706f8 <__assert_fail@plt+0x5db40>
   706f4:	b	707a4 <__assert_fail@plt+0x5dbec>
   706f8:	ldr	r0, [fp, #-12]
   706fc:	cmp	r0, #0
   70700:	bcs	70768 <__assert_fail@plt+0x5dbb0>
   70704:	ldr	r0, [fp, #-12]
   70708:	cmn	r0, #1
   7070c:	bne	7073c <__assert_fail@plt+0x5db84>
   70710:	b	7072c <__assert_fail@plt+0x5db74>
   70714:	ldr	r0, [fp, #-20]	; 0xffffffec
   70718:	rsbs	r0, r0, #0
   7071c:	mov	r1, #0
   70720:	sbcs	r1, r1, #-2147483648	; 0x80000000
   70724:	blt	70790 <__assert_fail@plt+0x5dbd8>
   70728:	b	707a4 <__assert_fail@plt+0x5dbec>
   7072c:	mov	r0, #0
   70730:	cmp	r0, #0
   70734:	bne	70790 <__assert_fail@plt+0x5dbd8>
   70738:	b	707a4 <__assert_fail@plt+0x5dbec>
   7073c:	ldr	r2, [fp, #-12]
   70740:	mov	r1, #-2147483648	; 0x80000000
   70744:	mov	r0, #0
   70748:	str	r0, [sp, #24]
   7074c:	ldr	r3, [sp, #24]
   70750:	bl	75338 <__assert_fail@plt+0x62780>
   70754:	ldr	r2, [fp, #-20]	; 0xffffffec
   70758:	subs	r0, r0, r2
   7075c:	sbcs	r1, r1, #0
   70760:	blt	70790 <__assert_fail@plt+0x5dbd8>
   70764:	b	707a4 <__assert_fail@plt+0x5dbec>
   70768:	ldr	r2, [fp, #-20]	; 0xffffffec
   7076c:	mvn	r0, #0
   70770:	mvn	r1, #-2147483648	; 0x80000000
   70774:	mov	r3, #0
   70778:	bl	7540c <__assert_fail@plt+0x62854>
   7077c:	ldr	r2, [fp, #-12]
   70780:	subs	r0, r0, r2
   70784:	sbcs	r1, r1, #0
   70788:	bge	707a4 <__assert_fail@plt+0x5dbec>
   7078c:	b	70790 <__assert_fail@plt+0x5dbd8>
   70790:	ldr	r0, [fp, #-12]
   70794:	ldr	r1, [fp, #-20]	; 0xffffffec
   70798:	mul	r0, r0, r1
   7079c:	str	r0, [fp, #-24]	; 0xffffffe8
   707a0:	b	709d4 <__assert_fail@plt+0x5de1c>
   707a4:	ldr	r0, [fp, #-12]
   707a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   707ac:	mul	r0, r0, r1
   707b0:	str	r0, [fp, #-24]	; 0xffffffe8
   707b4:	b	709f0 <__assert_fail@plt+0x5de38>
   707b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   707bc:	cmp	r0, #0
   707c0:	bcs	708fc <__assert_fail@plt+0x5dd44>
   707c4:	ldr	r0, [fp, #-12]
   707c8:	cmp	r0, #0
   707cc:	bcs	70884 <__assert_fail@plt+0x5dccc>
   707d0:	b	70804 <__assert_fail@plt+0x5dc4c>
   707d4:	ldr	r0, [fp, #-12]
   707d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   707dc:	mvn	r1, #0
   707e0:	mov	r3, #0
   707e4:	str	r0, [sp, #20]
   707e8:	mov	r0, r1
   707ec:	bl	7540c <__assert_fail@plt+0x62854>
   707f0:	ldr	r2, [sp, #20]
   707f4:	subs	r0, r2, r0
   707f8:	rscs	r1, r1, #0
   707fc:	bcc	709ac <__assert_fail@plt+0x5ddf4>
   70800:	b	709c0 <__assert_fail@plt+0x5de08>
   70804:	b	70818 <__assert_fail@plt+0x5dc60>
   70808:	ldr	r0, [fp, #-20]	; 0xffffffec
   7080c:	cmp	r0, #1
   70810:	bcc	70828 <__assert_fail@plt+0x5dc70>
   70814:	b	7083c <__assert_fail@plt+0x5dc84>
   70818:	ldr	r0, [fp, #-20]	; 0xffffffec
   7081c:	movw	r1, #0
   70820:	cmp	r1, r0
   70824:	bcs	7083c <__assert_fail@plt+0x5dc84>
   70828:	mov	r0, #1
   7082c:	mvn	r1, #0
   70830:	str	r1, [sp, #16]
   70834:	str	r0, [sp, #12]
   70838:	b	70864 <__assert_fail@plt+0x5dcac>
   7083c:	ldr	r0, [fp, #-20]	; 0xffffffec
   70840:	rsb	r2, r0, #0
   70844:	mvn	r0, #0
   70848:	mov	r3, #0
   7084c:	str	r0, [sp, #8]
   70850:	ldr	r1, [sp, #8]
   70854:	bl	7540c <__assert_fail@plt+0x62854>
   70858:	str	r0, [sp, #16]
   7085c:	str	r1, [sp, #12]
   70860:	b	70864 <__assert_fail@plt+0x5dcac>
   70864:	ldr	r0, [sp, #12]
   70868:	ldr	r1, [sp, #16]
   7086c:	ldr	r2, [fp, #-12]
   70870:	mvn	r2, r2
   70874:	subs	r1, r2, r1
   70878:	rscs	r0, r0, #0
   7087c:	bcs	709ac <__assert_fail@plt+0x5ddf4>
   70880:	b	709c0 <__assert_fail@plt+0x5de08>
   70884:	b	7088c <__assert_fail@plt+0x5dcd4>
   70888:	b	70890 <__assert_fail@plt+0x5dcd8>
   7088c:	b	708e0 <__assert_fail@plt+0x5dd28>
   70890:	ldr	r0, [fp, #-20]	; 0xffffffec
   70894:	cmn	r0, #1
   70898:	bne	708e0 <__assert_fail@plt+0x5dd28>
   7089c:	b	708b8 <__assert_fail@plt+0x5dd00>
   708a0:	ldr	r0, [fp, #-12]
   708a4:	add	r0, r0, #0
   708a8:	movw	r1, #0
   708ac:	cmp	r1, r0
   708b0:	bcc	709ac <__assert_fail@plt+0x5ddf4>
   708b4:	b	709c0 <__assert_fail@plt+0x5de08>
   708b8:	ldr	r0, [fp, #-12]
   708bc:	movw	r1, #0
   708c0:	cmp	r1, r0
   708c4:	bcs	709c0 <__assert_fail@plt+0x5de08>
   708c8:	ldr	r0, [fp, #-12]
   708cc:	sub	r0, r0, #1
   708d0:	mvn	r1, #0
   708d4:	cmp	r1, r0
   708d8:	bcc	709ac <__assert_fail@plt+0x5ddf4>
   708dc:	b	709c0 <__assert_fail@plt+0x5de08>
   708e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   708e4:	movw	r1, #0
   708e8:	udiv	r0, r1, r0
   708ec:	ldr	r1, [fp, #-12]
   708f0:	cmp	r0, r1
   708f4:	bcc	709ac <__assert_fail@plt+0x5ddf4>
   708f8:	b	709c0 <__assert_fail@plt+0x5de08>
   708fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   70900:	cmp	r0, #0
   70904:	bne	7090c <__assert_fail@plt+0x5dd54>
   70908:	b	709c0 <__assert_fail@plt+0x5de08>
   7090c:	ldr	r0, [fp, #-12]
   70910:	cmp	r0, #0
   70914:	bcs	70980 <__assert_fail@plt+0x5ddc8>
   70918:	b	70920 <__assert_fail@plt+0x5dd68>
   7091c:	b	70924 <__assert_fail@plt+0x5dd6c>
   70920:	b	70964 <__assert_fail@plt+0x5ddac>
   70924:	ldr	r0, [fp, #-12]
   70928:	cmn	r0, #1
   7092c:	bne	70964 <__assert_fail@plt+0x5ddac>
   70930:	b	7094c <__assert_fail@plt+0x5dd94>
   70934:	ldr	r0, [fp, #-20]	; 0xffffffec
   70938:	add	r0, r0, #0
   7093c:	movw	r1, #0
   70940:	cmp	r1, r0
   70944:	bcc	709ac <__assert_fail@plt+0x5ddf4>
   70948:	b	709c0 <__assert_fail@plt+0x5de08>
   7094c:	ldr	r0, [fp, #-20]	; 0xffffffec
   70950:	sub	r0, r0, #1
   70954:	mvn	r1, #0
   70958:	cmp	r1, r0
   7095c:	bcc	709ac <__assert_fail@plt+0x5ddf4>
   70960:	b	709c0 <__assert_fail@plt+0x5de08>
   70964:	ldr	r0, [fp, #-12]
   70968:	movw	r1, #0
   7096c:	udiv	r0, r1, r0
   70970:	ldr	r1, [fp, #-20]	; 0xffffffec
   70974:	cmp	r0, r1
   70978:	bcc	709ac <__assert_fail@plt+0x5ddf4>
   7097c:	b	709c0 <__assert_fail@plt+0x5de08>
   70980:	ldr	r2, [fp, #-20]	; 0xffffffec
   70984:	mvn	r0, #0
   70988:	mov	r3, #0
   7098c:	str	r0, [sp, #4]
   70990:	ldr	r1, [sp, #4]
   70994:	bl	7540c <__assert_fail@plt+0x62854>
   70998:	ldr	r2, [fp, #-12]
   7099c:	subs	r0, r0, r2
   709a0:	sbcs	r1, r1, #0
   709a4:	bcs	709c0 <__assert_fail@plt+0x5de08>
   709a8:	b	709ac <__assert_fail@plt+0x5ddf4>
   709ac:	ldr	r0, [fp, #-12]
   709b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   709b4:	mul	r0, r0, r1
   709b8:	str	r0, [fp, #-24]	; 0xffffffe8
   709bc:	b	709d4 <__assert_fail@plt+0x5de1c>
   709c0:	ldr	r0, [fp, #-12]
   709c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   709c8:	mul	r0, r0, r1
   709cc:	str	r0, [fp, #-24]	; 0xffffffe8
   709d0:	b	709f0 <__assert_fail@plt+0x5de38>
   709d4:	bl	128d0 <__errno_location@plt>
   709d8:	movw	r1, #12
   709dc:	str	r1, [r0]
   709e0:	movw	r0, #0
   709e4:	and	r0, r0, #1
   709e8:	strb	r0, [fp, #-1]
   709ec:	b	70abc <__assert_fail@plt+0x5df04>
   709f0:	ldr	r0, [fp, #-8]
   709f4:	ldr	r0, [r0, #8]
   709f8:	ldr	r1, [fp, #-16]
   709fc:	cmp	r0, r1
   70a00:	bne	70a58 <__assert_fail@plt+0x5dea0>
   70a04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   70a08:	bl	527f0 <__assert_fail@plt+0x3fc38>
   70a0c:	str	r0, [fp, #-28]	; 0xffffffe4
   70a10:	ldr	r0, [fp, #-28]	; 0xffffffe4
   70a14:	movw	r1, #0
   70a18:	cmp	r0, r1
   70a1c:	beq	70a54 <__assert_fail@plt+0x5de9c>
   70a20:	ldr	r0, [fp, #-8]
   70a24:	ldr	r0, [r0, #8]
   70a28:	movw	r1, #0
   70a2c:	cmp	r0, r1
   70a30:	beq	70a54 <__assert_fail@plt+0x5de9c>
   70a34:	ldr	r0, [fp, #-28]	; 0xffffffe4
   70a38:	ldr	r1, [fp, #-8]
   70a3c:	ldr	r1, [r1, #8]
   70a40:	ldr	r2, [fp, #-8]
   70a44:	ldr	r2, [r2]
   70a48:	ldr	r3, [fp, #-20]	; 0xffffffec
   70a4c:	mul	r2, r2, r3
   70a50:	bl	125c4 <memcpy@plt>
   70a54:	b	70a6c <__assert_fail@plt+0x5deb4>
   70a58:	ldr	r0, [fp, #-8]
   70a5c:	ldr	r0, [r0, #8]
   70a60:	ldr	r1, [fp, #-24]	; 0xffffffe8
   70a64:	bl	538c8 <__assert_fail@plt+0x40d10>
   70a68:	str	r0, [fp, #-28]	; 0xffffffe4
   70a6c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   70a70:	movw	r1, #0
   70a74:	cmp	r0, r1
   70a78:	bne	70a8c <__assert_fail@plt+0x5ded4>
   70a7c:	movw	r0, #0
   70a80:	and	r0, r0, #1
   70a84:	strb	r0, [fp, #-1]
   70a88:	b	70abc <__assert_fail@plt+0x5df04>
   70a8c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   70a90:	ldr	r1, [fp, #-8]
   70a94:	str	r0, [r1, #8]
   70a98:	ldr	r0, [fp, #-12]
   70a9c:	ldr	r1, [fp, #-8]
   70aa0:	str	r0, [r1, #4]
   70aa4:	ldr	r0, [fp, #-12]
   70aa8:	ldr	r1, [fp, #-8]
   70aac:	str	r0, [r1]
   70ab0:	movw	r0, #1
   70ab4:	and	r0, r0, #1
   70ab8:	strb	r0, [fp, #-1]
   70abc:	ldrb	r0, [fp, #-1]
   70ac0:	and	r0, r0, #1
   70ac4:	mov	sp, fp
   70ac8:	pop	{fp, pc}
   70acc:	svcvc	0x00ffffff
   70ad0:	andhi	r0, r0, r0
   70ad4:			; <UNDEFINED> instruction: 0xffff8000
   70ad8:	push	{fp, lr}
   70adc:	mov	fp, sp
   70ae0:	sub	sp, sp, #8
   70ae4:	str	r0, [sp, #4]
   70ae8:	ldr	r1, [sp, #4]
   70aec:	movw	r0, #0
   70af0:	bl	125ac <clock_gettime@plt>
   70af4:	mov	sp, fp
   70af8:	pop	{fp, pc}
   70afc:	push	{fp, lr}
   70b00:	mov	fp, sp
   70b04:	bl	70ad8 <__assert_fail@plt+0x5df20>
   70b08:	pop	{fp, pc}
   70b0c:	push	{r4, r5, fp, lr}
   70b10:	add	fp, sp, #8
   70b14:	sub	sp, sp, #272	; 0x110
   70b18:	add	r1, sp, #7
   70b1c:	str	r0, [fp, #-16]
   70b20:	ldr	r0, [fp, #-16]
   70b24:	movw	r2, #257	; 0x101
   70b28:	bl	74e1c <__assert_fail@plt+0x62264>
   70b2c:	cmp	r0, #0
   70b30:	beq	70b44 <__assert_fail@plt+0x5df8c>
   70b34:	movw	r0, #0
   70b38:	and	r0, r0, #1
   70b3c:	strb	r0, [fp, #-9]
   70b40:	b	70b98 <__assert_fail@plt+0x5dfe0>
   70b44:	add	r0, sp, #7
   70b48:	movw	r1, #23338	; 0x5b2a
   70b4c:	movt	r1, #7
   70b50:	bl	124c8 <strcmp@plt>
   70b54:	cmp	r0, #0
   70b58:	movw	r0, #1
   70b5c:	str	r0, [sp]
   70b60:	beq	70b84 <__assert_fail@plt+0x5dfcc>
   70b64:	add	r0, sp, #7
   70b68:	movw	r1, #50292	; 0xc474
   70b6c:	movt	r1, #7
   70b70:	bl	124c8 <strcmp@plt>
   70b74:	cmp	r0, #0
   70b78:	movw	r0, #0
   70b7c:	moveq	r0, #1
   70b80:	str	r0, [sp]
   70b84:	ldr	r0, [sp]
   70b88:	mvn	r1, #0
   70b8c:	eor	r0, r0, r1
   70b90:	and	r0, r0, #1
   70b94:	strb	r0, [fp, #-9]
   70b98:	ldrb	r0, [fp, #-9]
   70b9c:	and	r0, r0, #1
   70ba0:	sub	sp, fp, #8
   70ba4:	pop	{r4, r5, fp, pc}
   70ba8:	sub	sp, sp, #12
   70bac:	str	r0, [sp, #8]
   70bb0:	str	r1, [sp, #4]
   70bb4:	ldr	r0, [sp, #8]
   70bb8:	movw	r1, #1
   70bbc:	strb	r1, [r0, #28]
   70bc0:	ldr	r0, [sp, #8]
   70bc4:	movw	r1, #0
   70bc8:	str	r1, [r0, #20]
   70bcc:	ldr	r0, [sp, #8]
   70bd0:	str	r1, [r0, #24]
   70bd4:	str	r1, [sp]
   70bd8:	ldr	r0, [sp]
   70bdc:	cmp	r0, #4
   70be0:	bge	70c08 <__assert_fail@plt+0x5e050>
   70be4:	ldr	r0, [sp, #4]
   70be8:	ldr	r1, [sp, #8]
   70bec:	ldr	r2, [sp]
   70bf0:	add	r1, r1, r2, lsl #2
   70bf4:	str	r0, [r1]
   70bf8:	ldr	r0, [sp]
   70bfc:	add	r0, r0, #1
   70c00:	str	r0, [sp]
   70c04:	b	70bd8 <__assert_fail@plt+0x5e020>
   70c08:	ldr	r0, [sp, #4]
   70c0c:	ldr	r1, [sp, #8]
   70c10:	str	r0, [r1, #16]
   70c14:	add	sp, sp, #12
   70c18:	bx	lr
   70c1c:	sub	sp, sp, #4
   70c20:	str	r0, [sp]
   70c24:	ldr	r0, [sp]
   70c28:	ldrb	r0, [r0, #28]
   70c2c:	and	r0, r0, #1
   70c30:	add	sp, sp, #4
   70c34:	bx	lr
   70c38:	sub	sp, sp, #16
   70c3c:	str	r0, [sp, #12]
   70c40:	str	r1, [sp, #8]
   70c44:	ldr	r0, [sp, #12]
   70c48:	ldr	r1, [r0, #20]
   70c4c:	ldrb	r0, [r0, #28]
   70c50:	mov	r2, #1
   70c54:	bic	r0, r2, r0
   70c58:	add	r0, r1, r0
   70c5c:	and	r0, r0, #3
   70c60:	str	r0, [sp, #4]
   70c64:	ldr	r0, [sp, #12]
   70c68:	ldr	r1, [sp, #4]
   70c6c:	ldr	r0, [r0, r1, lsl #2]
   70c70:	str	r0, [sp]
   70c74:	ldr	r0, [sp, #8]
   70c78:	ldr	r1, [sp, #12]
   70c7c:	ldr	r2, [sp, #4]
   70c80:	add	r1, r1, r2, lsl #2
   70c84:	str	r0, [r1]
   70c88:	ldr	r0, [sp, #4]
   70c8c:	ldr	r1, [sp, #12]
   70c90:	str	r0, [r1, #20]
   70c94:	ldr	r0, [sp, #4]
   70c98:	ldr	r1, [sp, #12]
   70c9c:	ldr	r1, [r1, #24]
   70ca0:	cmp	r0, r1
   70ca4:	bne	70cd4 <__assert_fail@plt+0x5e11c>
   70ca8:	ldr	r0, [sp, #12]
   70cac:	ldr	r0, [r0, #24]
   70cb0:	ldr	r1, [sp, #12]
   70cb4:	ldrb	r1, [r1, #28]
   70cb8:	mvn	r2, #0
   70cbc:	eor	r1, r1, r2
   70cc0:	and	r1, r1, #1
   70cc4:	add	r0, r0, r1
   70cc8:	and	r0, r0, #3
   70ccc:	ldr	r1, [sp, #12]
   70cd0:	str	r0, [r1, #24]
   70cd4:	ldr	r0, [sp, #12]
   70cd8:	movw	r1, #0
   70cdc:	strb	r1, [r0, #28]
   70ce0:	ldr	r0, [sp]
   70ce4:	add	sp, sp, #16
   70ce8:	bx	lr
   70cec:	push	{fp, lr}
   70cf0:	mov	fp, sp
   70cf4:	sub	sp, sp, #8
   70cf8:	str	r0, [sp, #4]
   70cfc:	ldr	r0, [sp, #4]
   70d00:	bl	70c1c <__assert_fail@plt+0x5e064>
   70d04:	tst	r0, #1
   70d08:	beq	70d10 <__assert_fail@plt+0x5e158>
   70d0c:	bl	12b64 <abort@plt>
   70d10:	ldr	r0, [sp, #4]
   70d14:	ldr	r1, [r0, #20]
   70d18:	ldr	r0, [r0, r1, lsl #2]
   70d1c:	str	r0, [sp]
   70d20:	ldr	r0, [sp, #4]
   70d24:	ldr	r1, [r0, #16]
   70d28:	ldr	r2, [r0, #20]
   70d2c:	add	r0, r0, r2, lsl #2
   70d30:	str	r1, [r0]
   70d34:	ldr	r0, [sp, #4]
   70d38:	ldr	r0, [r0, #20]
   70d3c:	ldr	r1, [sp, #4]
   70d40:	ldr	r1, [r1, #24]
   70d44:	cmp	r0, r1
   70d48:	bne	70d5c <__assert_fail@plt+0x5e1a4>
   70d4c:	ldr	r0, [sp, #4]
   70d50:	movw	r1, #1
   70d54:	strb	r1, [r0, #28]
   70d58:	b	70d78 <__assert_fail@plt+0x5e1c0>
   70d5c:	ldr	r0, [sp, #4]
   70d60:	ldr	r0, [r0, #20]
   70d64:	add	r0, r0, #4
   70d68:	sub	r0, r0, #1
   70d6c:	and	r0, r0, #3
   70d70:	ldr	r1, [sp, #4]
   70d74:	str	r0, [r1, #20]
   70d78:	ldr	r0, [sp]
   70d7c:	mov	sp, fp
   70d80:	pop	{fp, pc}
   70d84:	push	{fp, lr}
   70d88:	mov	fp, sp
   70d8c:	bl	128d0 <__errno_location@plt>
   70d90:	movw	r1, #12
   70d94:	str	r1, [r0]
   70d98:	movw	r0, #0
   70d9c:	pop	{fp, pc}
   70da0:	push	{fp, lr}
   70da4:	mov	fp, sp
   70da8:	sub	sp, sp, #8
   70dac:	str	r0, [sp, #4]
   70db0:	ldr	r0, [sp, #4]
   70db4:	cmn	r0, #1
   70db8:	bhi	70dcc <__assert_fail@plt+0x5e214>
   70dbc:	ldr	r0, [sp, #4]
   70dc0:	bl	527f0 <__assert_fail@plt+0x3fc38>
   70dc4:	str	r0, [sp]
   70dc8:	b	70dd4 <__assert_fail@plt+0x5e21c>
   70dcc:	bl	70d84 <__assert_fail@plt+0x5e1cc>
   70dd0:	str	r0, [sp]
   70dd4:	ldr	r0, [sp]
   70dd8:	mov	sp, fp
   70ddc:	pop	{fp, pc}
   70de0:	push	{fp, lr}
   70de4:	mov	fp, sp
   70de8:	sub	sp, sp, #16
   70dec:	str	r0, [fp, #-4]
   70df0:	str	r1, [sp, #8]
   70df4:	ldr	r0, [sp, #8]
   70df8:	cmn	r0, #1
   70dfc:	bhi	70e34 <__assert_fail@plt+0x5e27c>
   70e00:	ldr	r0, [fp, #-4]
   70e04:	ldr	r1, [sp, #8]
   70e08:	ldr	r2, [sp, #8]
   70e0c:	cmp	r2, #0
   70e10:	movw	r2, #0
   70e14:	movne	r2, #1
   70e18:	mvn	r3, #0
   70e1c:	eor	r2, r2, r3
   70e20:	and	r2, r2, #1
   70e24:	orr	r1, r1, r2
   70e28:	bl	538c8 <__assert_fail@plt+0x40d10>
   70e2c:	str	r0, [sp, #4]
   70e30:	b	70e3c <__assert_fail@plt+0x5e284>
   70e34:	bl	70d84 <__assert_fail@plt+0x5e1cc>
   70e38:	str	r0, [sp, #4]
   70e3c:	ldr	r0, [sp, #4]
   70e40:	mov	sp, fp
   70e44:	pop	{fp, pc}
   70e48:	push	{fp, lr}
   70e4c:	mov	fp, sp
   70e50:	sub	sp, sp, #16
   70e54:	str	r0, [sp, #8]
   70e58:	str	r1, [sp, #4]
   70e5c:	ldr	r0, [sp, #8]
   70e60:	mvn	r1, #0
   70e64:	cmp	r1, r0
   70e68:	bcs	70e8c <__assert_fail@plt+0x5e2d4>
   70e6c:	ldr	r0, [sp, #4]
   70e70:	cmp	r0, #0
   70e74:	beq	70e84 <__assert_fail@plt+0x5e2cc>
   70e78:	bl	70d84 <__assert_fail@plt+0x5e1cc>
   70e7c:	str	r0, [fp, #-4]
   70e80:	b	70ecc <__assert_fail@plt+0x5e314>
   70e84:	movw	r0, #0
   70e88:	str	r0, [sp, #8]
   70e8c:	ldr	r0, [sp, #4]
   70e90:	mvn	r1, #0
   70e94:	cmp	r1, r0
   70e98:	bcs	70ebc <__assert_fail@plt+0x5e304>
   70e9c:	ldr	r0, [sp, #8]
   70ea0:	cmp	r0, #0
   70ea4:	beq	70eb4 <__assert_fail@plt+0x5e2fc>
   70ea8:	bl	70d84 <__assert_fail@plt+0x5e1cc>
   70eac:	str	r0, [fp, #-4]
   70eb0:	b	70ecc <__assert_fail@plt+0x5e314>
   70eb4:	movw	r0, #0
   70eb8:	str	r0, [sp, #4]
   70ebc:	ldr	r0, [sp, #8]
   70ec0:	ldr	r1, [sp, #4]
   70ec4:	bl	4e0e0 <__assert_fail@plt+0x3b528>
   70ec8:	str	r0, [fp, #-4]
   70ecc:	ldr	r0, [fp, #-4]
   70ed0:	mov	sp, fp
   70ed4:	pop	{fp, pc}
   70ed8:	push	{fp, lr}
   70edc:	mov	fp, sp
   70ee0:	sub	sp, sp, #16
   70ee4:	str	r0, [fp, #-4]
   70ee8:	str	r1, [sp, #8]
   70eec:	str	r2, [sp, #4]
   70ef0:	ldr	r0, [sp, #8]
   70ef4:	cmp	r0, #0
   70ef8:	beq	70f08 <__assert_fail@plt+0x5e350>
   70efc:	ldr	r0, [sp, #4]
   70f00:	cmp	r0, #0
   70f04:	bne	70f14 <__assert_fail@plt+0x5e35c>
   70f08:	movw	r0, #1
   70f0c:	str	r0, [sp, #4]
   70f10:	str	r0, [sp, #8]
   70f14:	ldr	r0, [sp, #8]
   70f18:	cmn	r0, #1
   70f1c:	bhi	70f44 <__assert_fail@plt+0x5e38c>
   70f20:	ldr	r0, [sp, #4]
   70f24:	cmn	r0, #1
   70f28:	bhi	70f44 <__assert_fail@plt+0x5e38c>
   70f2c:	ldr	r0, [fp, #-4]
   70f30:	ldr	r1, [sp, #8]
   70f34:	ldr	r2, [sp, #4]
   70f38:	bl	5396c <__assert_fail@plt+0x40db4>
   70f3c:	str	r0, [sp]
   70f40:	b	70f4c <__assert_fail@plt+0x5e394>
   70f44:	bl	70d84 <__assert_fail@plt+0x5e1cc>
   70f48:	str	r0, [sp]
   70f4c:	ldr	r0, [sp]
   70f50:	mov	sp, fp
   70f54:	pop	{fp, pc}
   70f58:	push	{fp, lr}
   70f5c:	mov	fp, sp
   70f60:	sub	sp, sp, #8
   70f64:	movw	r0, #14
   70f68:	bl	12a2c <nl_langinfo@plt>
   70f6c:	str	r0, [sp, #4]
   70f70:	ldr	r0, [sp, #4]
   70f74:	movw	r1, #0
   70f78:	cmp	r0, r1
   70f7c:	bne	70f8c <__assert_fail@plt+0x5e3d4>
   70f80:	movw	r0, #29909	; 0x74d5
   70f84:	movt	r0, #7
   70f88:	str	r0, [sp, #4]
   70f8c:	ldr	r0, [sp, #4]
   70f90:	ldrb	r0, [r0]
   70f94:	cmp	r0, #0
   70f98:	bne	70fa8 <__assert_fail@plt+0x5e3f0>
   70f9c:	movw	r0, #50298	; 0xc47a
   70fa0:	movt	r0, #7
   70fa4:	str	r0, [sp, #4]
   70fa8:	ldr	r0, [sp, #4]
   70fac:	mov	sp, fp
   70fb0:	pop	{fp, pc}
   70fb4:	push	{fp, lr}
   70fb8:	mov	fp, sp
   70fbc:	sub	sp, sp, #48	; 0x30
   70fc0:	str	r0, [fp, #-8]
   70fc4:	mov	r0, #15
   70fc8:	str	r0, [fp, #-12]
   70fcc:	ldr	r0, [fp, #-12]
   70fd0:	add	r0, r0, #1
   70fd4:	str	r0, [fp, #-16]
   70fd8:	ldr	r0, [fp, #-8]
   70fdc:	ldr	r1, [fp, #-16]
   70fe0:	asr	r2, r1, #31
   70fe4:	adds	r0, r0, r1
   70fe8:	adc	r1, r2, #0
   70fec:	and	r2, r1, #1
   70ff0:	rsb	r3, r2, #0
   70ff4:	eor	r1, r3, r1
   70ff8:	cmp	r1, #0
   70ffc:	movwne	r1, #1
   71000:	eor	r2, r2, r0, lsr #31
   71004:	cmp	r2, #0
   71008:	movwne	r2, #1
   7100c:	orr	r1, r1, r2
   71010:	str	r0, [fp, #-20]	; 0xffffffec
   71014:	tst	r1, #1
   71018:	bne	710c0 <__assert_fail@plt+0x5e508>
   7101c:	ldr	r0, [pc, #176]	; 710d4 <__assert_fail@plt+0x5e51c>
   71020:	ldr	r1, [fp, #-20]	; 0xffffffec
   71024:	cmp	r0, r1
   71028:	bcc	710c0 <__assert_fail@plt+0x5e508>
   7102c:	ldr	r0, [fp, #-20]	; 0xffffffec
   71030:	bl	127d4 <malloc@plt>
   71034:	str	r0, [sp, #24]
   71038:	ldr	r0, [sp, #24]
   7103c:	movw	r1, #0
   71040:	cmp	r0, r1
   71044:	beq	710bc <__assert_fail@plt+0x5e504>
   71048:	ldr	r0, [sp, #24]
   7104c:	str	r0, [sp, #20]
   71050:	ldr	r0, [sp, #20]
   71054:	adds	r0, r0, #8
   71058:	mov	r1, #0
   7105c:	adc	r1, r1, #0
   71060:	str	r0, [sp, #16]
   71064:	ldr	r0, [sp, #16]
   71068:	ldr	r2, [fp, #-12]
   7106c:	mvn	r3, #0
   71070:	eor	r2, r2, r3
   71074:	and	r0, r0, r2
   71078:	add	r0, r0, #8
   7107c:	ldr	r2, [sp, #20]
   71080:	sub	r0, r0, r2
   71084:	str	r0, [sp, #12]
   71088:	ldr	r0, [sp, #24]
   7108c:	ldr	r2, [sp, #12]
   71090:	add	r0, r0, r2
   71094:	str	r0, [sp, #8]
   71098:	ldr	r0, [sp, #8]
   7109c:	str	r0, [sp, #4]
   710a0:	ldr	r0, [sp, #12]
   710a4:	ldr	r2, [sp, #4]
   710a8:	add	r2, r2, r3
   710ac:	strb	r0, [r2]
   710b0:	ldr	r0, [sp, #4]
   710b4:	str	r0, [fp, #-4]
   710b8:	b	710c8 <__assert_fail@plt+0x5e510>
   710bc:	b	710c0 <__assert_fail@plt+0x5e508>
   710c0:	movw	r0, #0
   710c4:	str	r0, [fp, #-4]
   710c8:	ldr	r0, [fp, #-4]
   710cc:	mov	sp, fp
   710d0:	pop	{fp, pc}
   710d4:	svcvc	0x00ffffff
   710d8:	push	{fp, lr}
   710dc:	mov	fp, sp
   710e0:	sub	sp, sp, #8
   710e4:	str	r0, [sp, #4]
   710e8:	ldr	r0, [sp, #4]
   710ec:	and	r0, r0, #7
   710f0:	cmp	r0, #0
   710f4:	beq	710fc <__assert_fail@plt+0x5e544>
   710f8:	bl	12b64 <abort@plt>
   710fc:	ldr	r0, [sp, #4]
   71100:	and	r0, r0, #8
   71104:	cmp	r0, #0
   71108:	beq	71138 <__assert_fail@plt+0x5e580>
   7110c:	ldr	r0, [sp, #4]
   71110:	ldr	r1, [sp, #4]
   71114:	mvn	r2, #0
   71118:	add	r1, r1, r2
   7111c:	ldrb	r1, [r1]
   71120:	movw	r2, #0
   71124:	sub	r1, r2, r1
   71128:	add	r0, r0, r1
   7112c:	str	r0, [sp]
   71130:	ldr	r0, [sp]
   71134:	bl	4eb04 <__assert_fail@plt+0x3bf4c>
   71138:	mov	sp, fp
   7113c:	pop	{fp, pc}
   71140:	push	{fp, lr}
   71144:	mov	fp, sp
   71148:	sub	sp, sp, #16
   7114c:	str	r0, [fp, #-4]
   71150:	ldr	r0, [fp, #-4]
   71154:	bl	12540 <wcwidth@plt>
   71158:	str	r0, [sp, #8]
   7115c:	ldr	r0, [sp, #8]
   71160:	cmp	r0, #0
   71164:	blt	71174 <__assert_fail@plt+0x5e5bc>
   71168:	ldr	r0, [sp, #8]
   7116c:	str	r0, [sp, #4]
   71170:	b	71198 <__assert_fail@plt+0x5e5e0>
   71174:	ldr	r0, [fp, #-4]
   71178:	bl	1269c <iswcntrl@plt>
   7117c:	cmp	r0, #0
   71180:	movw	r0, #0
   71184:	movne	r0, #1
   71188:	tst	r0, #1
   7118c:	movw	r0, #0
   71190:	moveq	r0, #1
   71194:	str	r0, [sp, #4]
   71198:	ldr	r0, [sp, #4]
   7119c:	mov	sp, fp
   711a0:	pop	{fp, pc}
   711a4:	push	{fp, lr}
   711a8:	mov	fp, sp
   711ac:	sub	sp, sp, #8
   711b0:	str	r0, [sp, #4]
   711b4:	str	r1, [sp]
   711b8:	ldr	r0, [sp]
   711bc:	ldr	r0, [r0]
   711c0:	ldr	r1, [sp]
   711c4:	add	r1, r1, #16
   711c8:	cmp	r0, r1
   711cc:	bne	71200 <__assert_fail@plt+0x5e648>
   711d0:	ldr	r0, [sp, #4]
   711d4:	add	r0, r0, #16
   711d8:	ldr	r1, [sp]
   711dc:	add	r1, r1, #16
   711e0:	ldr	r2, [sp]
   711e4:	ldr	r2, [r2, #4]
   711e8:	bl	125c4 <memcpy@plt>
   711ec:	ldr	r0, [sp, #4]
   711f0:	add	r0, r0, #16
   711f4:	ldr	r1, [sp, #4]
   711f8:	str	r0, [r1]
   711fc:	b	71210 <__assert_fail@plt+0x5e658>
   71200:	ldr	r0, [sp]
   71204:	ldr	r0, [r0]
   71208:	ldr	r1, [sp, #4]
   7120c:	str	r0, [r1]
   71210:	ldr	r0, [sp]
   71214:	ldr	r0, [r0, #4]
   71218:	ldr	r1, [sp, #4]
   7121c:	str	r0, [r1, #4]
   71220:	ldr	r0, [sp]
   71224:	ldrb	r0, [r0, #8]
   71228:	ldr	r1, [sp, #4]
   7122c:	and	r2, r0, #1
   71230:	strb	r2, [r1, #8]
   71234:	tst	r0, #1
   71238:	beq	7124c <__assert_fail@plt+0x5e694>
   7123c:	ldr	r0, [sp]
   71240:	ldr	r0, [r0, #12]
   71244:	ldr	r1, [sp, #4]
   71248:	str	r0, [r1, #12]
   7124c:	mov	sp, fp
   71250:	pop	{fp, pc}
   71254:	sub	sp, sp, #4
   71258:	movw	r1, #50304	; 0xc480
   7125c:	movt	r1, #7
   71260:	strb	r0, [sp, #3]
   71264:	ldrb	r0, [sp, #3]
   71268:	lsr	r0, r0, #5
   7126c:	movw	r2, #50304	; 0xc480
   71270:	movt	r2, #7
   71274:	add	r0, r2, r0, lsl #2
   71278:	ldr	r0, [r0]
   7127c:	ldrb	r2, [sp, #3]
   71280:	and	r2, r2, #31
   71284:	lsr	r0, r0, r2
   71288:	and	r0, r0, #1
   7128c:	cmp	r0, #0
   71290:	movw	r0, #0
   71294:	movne	r0, #1
   71298:	and	r0, r0, #1
   7129c:	add	sp, sp, #4
   712a0:	bx	lr
   712a4:	push	{fp, lr}
   712a8:	mov	fp, sp
   712ac:	sub	sp, sp, #80	; 0x50
   712b0:	str	r0, [fp, #-8]
   712b4:	bl	12720 <__ctype_get_mb_cur_max@plt>
   712b8:	cmp	r0, #1
   712bc:	bls	71378 <__assert_fail@plt+0x5e7c0>
   712c0:	movw	r0, #0
   712c4:	str	r0, [fp, #-12]
   712c8:	ldr	r0, [fp, #-8]
   712cc:	str	r0, [sp, #28]
   712d0:	movw	r0, #0
   712d4:	strb	r0, [sp, #12]
   712d8:	add	r1, sp, #12
   712dc:	add	r1, r1, #4
   712e0:	str	r0, [sp, #8]
   712e4:	mov	r0, r1
   712e8:	ldr	r1, [sp, #8]
   712ec:	and	r1, r1, #255	; 0xff
   712f0:	movw	r2, #8
   712f4:	bl	12900 <memset@plt>
   712f8:	ldr	r0, [sp, #8]
   712fc:	strb	r0, [sp, #24]
   71300:	add	r0, sp, #12
   71304:	bl	314f4 <__assert_fail@plt+0x1e93c>
   71308:	ldrb	r0, [sp, #36]	; 0x24
   7130c:	tst	r0, #1
   71310:	movw	r0, #0
   71314:	str	r0, [sp, #4]
   71318:	beq	71330 <__assert_fail@plt+0x5e778>
   7131c:	ldr	r0, [sp, #40]	; 0x28
   71320:	cmp	r0, #0
   71324:	movw	r0, #0
   71328:	moveq	r0, #1
   7132c:	str	r0, [sp, #4]
   71330:	ldr	r0, [sp, #4]
   71334:	mvn	r1, #0
   71338:	eor	r0, r0, r1
   7133c:	tst	r0, #1
   71340:	beq	7136c <__assert_fail@plt+0x5e7b4>
   71344:	ldr	r0, [fp, #-12]
   71348:	add	r0, r0, #1
   7134c:	str	r0, [fp, #-12]
   71350:	ldr	r0, [sp, #32]
   71354:	ldr	r1, [sp, #28]
   71358:	add	r0, r1, r0
   7135c:	str	r0, [sp, #28]
   71360:	movw	r0, #0
   71364:	strb	r0, [sp, #24]
   71368:	b	71300 <__assert_fail@plt+0x5e748>
   7136c:	ldr	r0, [fp, #-12]
   71370:	str	r0, [fp, #-4]
   71374:	b	71384 <__assert_fail@plt+0x5e7cc>
   71378:	ldr	r0, [fp, #-8]
   7137c:	bl	12888 <strlen@plt>
   71380:	str	r0, [fp, #-4]
   71384:	ldr	r0, [fp, #-4]
   71388:	mov	sp, fp
   7138c:	pop	{fp, pc}
   71390:	push	{r4, r5, r6, sl, fp, lr}
   71394:	add	fp, sp, #16
   71398:	sub	sp, sp, #56	; 0x38
   7139c:	ldr	ip, [fp, #12]
   713a0:	ldr	lr, [fp, #8]
   713a4:	str	r0, [fp, #-20]	; 0xffffffec
   713a8:	str	r1, [fp, #-24]	; 0xffffffe8
   713ac:	str	r2, [fp, #-28]	; 0xffffffe4
   713b0:	str	r3, [fp, #-32]	; 0xffffffe0
   713b4:	movw	r0, #0
   713b8:	strb	r0, [fp, #-33]	; 0xffffffdf
   713bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   713c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   713c4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   713c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   713cc:	ldr	r4, [fp, #8]
   713d0:	ldr	r5, [fp, #12]
   713d4:	movw	r6, #0
   713d8:	and	r6, r6, #1
   713dc:	str	r6, [sp]
   713e0:	movw	r6, #0
   713e4:	str	r6, [sp, #4]
   713e8:	mvn	r6, #0
   713ec:	str	r6, [sp, #8]
   713f0:	sub	r6, fp, #33	; 0x21
   713f4:	str	r6, [sp, #12]
   713f8:	str	r4, [sp, #16]
   713fc:	str	r5, [sp, #20]
   71400:	str	ip, [sp, #32]
   71404:	str	lr, [sp, #28]
   71408:	bl	71414 <__assert_fail@plt+0x5e85c>
   7140c:	sub	sp, fp, #16
   71410:	pop	{r4, r5, r6, sl, fp, pc}
   71414:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   71418:	add	fp, sp, #24
   7141c:	sub	sp, sp, #1760	; 0x6e0
   71420:	ldr	ip, [fp, #28]
   71424:	ldr	lr, [fp, #24]
   71428:	ldr	r4, [fp, #20]
   7142c:	ldr	r5, [fp, #16]
   71430:	ldr	r6, [fp, #12]
   71434:	ldr	r7, [fp, #8]
   71438:	str	r0, [fp, #-32]	; 0xffffffe0
   7143c:	str	r1, [fp, #-36]	; 0xffffffdc
   71440:	str	r2, [fp, #-40]	; 0xffffffd8
   71444:	str	r3, [fp, #-44]	; 0xffffffd4
   71448:	and	r0, r7, #1
   7144c:	strb	r0, [fp, #-45]	; 0xffffffd3
   71450:	str	ip, [sp, #268]	; 0x10c
   71454:	str	lr, [sp, #264]	; 0x108
   71458:	str	r4, [sp, #260]	; 0x104
   7145c:	str	r5, [sp, #256]	; 0x100
   71460:	str	r6, [sp, #252]	; 0xfc
   71464:	bl	128d0 <__errno_location@plt>
   71468:	ldr	r0, [r0]
   7146c:	str	r0, [fp, #-52]	; 0xffffffcc
   71470:	ldr	r0, [fp, #-44]	; 0xffffffd4
   71474:	ldr	r0, [r0, #8]
   71478:	str	r0, [fp, #-56]	; 0xffffffc8
   7147c:	movw	r0, #0
   71480:	str	r0, [fp, #-64]	; 0xffffffc0
   71484:	ldr	r1, [fp, #-32]	; 0xffffffe0
   71488:	str	r1, [fp, #-68]	; 0xffffffbc
   7148c:	str	r0, [fp, #-60]	; 0xffffffc4
   71490:	ldr	r1, [fp, #-44]	; 0xffffffd4
   71494:	ldr	r1, [r1, #40]	; 0x28
   71498:	str	r1, [fp, #-60]	; 0xffffffc4
   7149c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   714a0:	cmp	r1, r0
   714a4:	bne	714b4 <__assert_fail@plt+0x5e8fc>
   714a8:	movw	r0, #29909	; 0x74d5
   714ac:	movt	r0, #7
   714b0:	str	r0, [fp, #-60]	; 0xffffffc4
   714b4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   714b8:	cmp	r0, #12
   714bc:	ble	714d0 <__assert_fail@plt+0x5e918>
   714c0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   714c4:	sub	r0, r0, #12
   714c8:	str	r0, [fp, #-56]	; 0xffffffc8
   714cc:	b	714e8 <__assert_fail@plt+0x5e930>
   714d0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   714d4:	cmp	r0, #0
   714d8:	bne	714e4 <__assert_fail@plt+0x5e92c>
   714dc:	movw	r0, #12
   714e0:	str	r0, [fp, #-56]	; 0xffffffc8
   714e4:	b	714e8 <__assert_fail@plt+0x5e930>
   714e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   714ec:	str	r0, [fp, #-72]	; 0xffffffb8
   714f0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   714f4:	ldrb	r0, [r0]
   714f8:	cmp	r0, #0
   714fc:	beq	74bdc <__assert_fail@plt+0x62024>
   71500:	movw	r0, #0
   71504:	str	r0, [fp, #-76]	; 0xffffffb4
   71508:	str	r0, [fp, #-84]	; 0xffffffac
   7150c:	movw	r0, #0
   71510:	strb	r0, [fp, #-123]	; 0xffffff85
   71514:	ldrb	r1, [fp, #-45]	; 0xffffffd3
   71518:	and	r1, r1, #1
   7151c:	strb	r1, [fp, #-124]	; 0xffffff84
   71520:	strb	r0, [fp, #-129]	; 0xffffff7f
   71524:	ldr	r0, [fp, #-72]	; 0xffffffb8
   71528:	ldrb	r0, [r0]
   7152c:	cmp	r0, #37	; 0x25
   71530:	beq	7169c <__assert_fail@plt+0x5eae4>
   71534:	b	71538 <__assert_fail@plt+0x5e980>
   71538:	movw	r0, #1
   7153c:	str	r0, [fp, #-144]	; 0xffffff70
   71540:	ldr	r0, [fp, #-76]	; 0xffffffb4
   71544:	cmp	r0, #45	; 0x2d
   71548:	beq	71558 <__assert_fail@plt+0x5e9a0>
   7154c:	ldr	r0, [fp, #16]
   71550:	cmp	r0, #0
   71554:	bge	71564 <__assert_fail@plt+0x5e9ac>
   71558:	movw	r0, #0
   7155c:	str	r0, [sp, #248]	; 0xf8
   71560:	b	7156c <__assert_fail@plt+0x5e9b4>
   71564:	ldr	r0, [fp, #16]
   71568:	str	r0, [sp, #248]	; 0xf8
   7156c:	ldr	r0, [sp, #248]	; 0xf8
   71570:	str	r0, [fp, #-148]	; 0xffffff6c
   71574:	ldr	r0, [fp, #-144]	; 0xffffff70
   71578:	ldr	r1, [fp, #-148]	; 0xffffff6c
   7157c:	cmp	r0, r1
   71580:	bcs	71590 <__assert_fail@plt+0x5e9d8>
   71584:	ldr	r0, [fp, #-148]	; 0xffffff6c
   71588:	str	r0, [sp, #244]	; 0xf4
   7158c:	b	71598 <__assert_fail@plt+0x5e9e0>
   71590:	ldr	r0, [fp, #-144]	; 0xffffff70
   71594:	str	r0, [sp, #244]	; 0xf4
   71598:	ldr	r0, [sp, #244]	; 0xf4
   7159c:	str	r0, [fp, #-152]	; 0xffffff68
   715a0:	ldr	r0, [fp, #-152]	; 0xffffff68
   715a4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   715a8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   715ac:	sub	r1, r1, r2
   715b0:	cmp	r0, r1
   715b4:	bcc	715d0 <__assert_fail@plt+0x5ea18>
   715b8:	bl	128d0 <__errno_location@plt>
   715bc:	movw	r1, #34	; 0x22
   715c0:	str	r1, [r0]
   715c4:	movw	r0, #0
   715c8:	str	r0, [fp, #-28]	; 0xffffffe4
   715cc:	b	74c20 <__assert_fail@plt+0x62068>
   715d0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   715d4:	movw	r1, #0
   715d8:	cmp	r0, r1
   715dc:	beq	71688 <__assert_fail@plt+0x5ead0>
   715e0:	ldr	r0, [fp, #-144]	; 0xffffff70
   715e4:	ldr	r1, [fp, #-148]	; 0xffffff6c
   715e8:	cmp	r0, r1
   715ec:	bcs	71668 <__assert_fail@plt+0x5eab0>
   715f0:	ldr	r0, [fp, #-148]	; 0xffffff6c
   715f4:	ldr	r1, [fp, #-144]	; 0xffffff70
   715f8:	sub	r0, r0, r1
   715fc:	str	r0, [fp, #-156]	; 0xffffff64
   71600:	ldr	r0, [fp, #-76]	; 0xffffffb4
   71604:	cmp	r0, #48	; 0x30
   71608:	beq	71618 <__assert_fail@plt+0x5ea60>
   7160c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   71610:	cmp	r0, #43	; 0x2b
   71614:	bne	71640 <__assert_fail@plt+0x5ea88>
   71618:	ldr	r0, [fp, #-68]	; 0xffffffbc
   7161c:	ldr	r2, [fp, #-156]	; 0xffffff64
   71620:	movw	r1, #48	; 0x30
   71624:	and	r1, r1, #255	; 0xff
   71628:	bl	12900 <memset@plt>
   7162c:	ldr	r0, [fp, #-156]	; 0xffffff64
   71630:	ldr	r1, [fp, #-68]	; 0xffffffbc
   71634:	add	r0, r1, r0
   71638:	str	r0, [fp, #-68]	; 0xffffffbc
   7163c:	b	71664 <__assert_fail@plt+0x5eaac>
   71640:	ldr	r0, [fp, #-68]	; 0xffffffbc
   71644:	ldr	r2, [fp, #-156]	; 0xffffff64
   71648:	movw	r1, #32
   7164c:	and	r1, r1, #255	; 0xff
   71650:	bl	12900 <memset@plt>
   71654:	ldr	r0, [fp, #-156]	; 0xffffff64
   71658:	ldr	r1, [fp, #-68]	; 0xffffffbc
   7165c:	add	r0, r1, r0
   71660:	str	r0, [fp, #-68]	; 0xffffffbc
   71664:	b	71668 <__assert_fail@plt+0x5eab0>
   71668:	ldr	r0, [fp, #-72]	; 0xffffffb8
   7166c:	ldrb	r0, [r0]
   71670:	ldr	r1, [fp, #-68]	; 0xffffffbc
   71674:	strb	r0, [r1]
   71678:	ldr	r0, [fp, #-144]	; 0xffffff70
   7167c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   71680:	add	r0, r1, r0
   71684:	str	r0, [fp, #-68]	; 0xffffffbc
   71688:	ldr	r0, [fp, #-152]	; 0xffffff68
   7168c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   71690:	add	r0, r1, r0
   71694:	str	r0, [fp, #-64]	; 0xffffffc0
   71698:	b	74bc4 <__assert_fail@plt+0x6200c>
   7169c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   716a0:	str	r0, [fp, #-160]	; 0xffffff60
   716a4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   716a8:	add	r1, r0, #1
   716ac:	str	r1, [fp, #-72]	; 0xffffffb8
   716b0:	ldrb	r0, [r0, #1]
   716b4:	mov	r1, r0
   716b8:	cmp	r0, #35	; 0x23
   716bc:	str	r1, [sp, #240]	; 0xf0
   716c0:	beq	71734 <__assert_fail@plt+0x5eb7c>
   716c4:	b	716c8 <__assert_fail@plt+0x5eb10>
   716c8:	ldr	r0, [sp, #240]	; 0xf0
   716cc:	cmp	r0, #43	; 0x2b
   716d0:	beq	71718 <__assert_fail@plt+0x5eb60>
   716d4:	b	716d8 <__assert_fail@plt+0x5eb20>
   716d8:	ldr	r0, [sp, #240]	; 0xf0
   716dc:	cmp	r0, #45	; 0x2d
   716e0:	beq	71718 <__assert_fail@plt+0x5eb60>
   716e4:	b	716e8 <__assert_fail@plt+0x5eb30>
   716e8:	ldr	r0, [sp, #240]	; 0xf0
   716ec:	cmp	r0, #48	; 0x30
   716f0:	beq	71718 <__assert_fail@plt+0x5eb60>
   716f4:	b	716f8 <__assert_fail@plt+0x5eb40>
   716f8:	ldr	r0, [sp, #240]	; 0xf0
   716fc:	cmp	r0, #94	; 0x5e
   71700:	beq	71728 <__assert_fail@plt+0x5eb70>
   71704:	b	71708 <__assert_fail@plt+0x5eb50>
   71708:	ldr	r0, [sp, #240]	; 0xf0
   7170c:	cmp	r0, #95	; 0x5f
   71710:	bne	71740 <__assert_fail@plt+0x5eb88>
   71714:	b	71718 <__assert_fail@plt+0x5eb60>
   71718:	ldr	r0, [fp, #-72]	; 0xffffffb8
   7171c:	ldrb	r0, [r0]
   71720:	str	r0, [fp, #-76]	; 0xffffffb4
   71724:	b	716a4 <__assert_fail@plt+0x5eaec>
   71728:	movw	r0, #1
   7172c:	strb	r0, [fp, #-124]	; 0xffffff84
   71730:	b	716a4 <__assert_fail@plt+0x5eaec>
   71734:	movw	r0, #1
   71738:	strb	r0, [fp, #-129]	; 0xffffff7f
   7173c:	b	716a4 <__assert_fail@plt+0x5eaec>
   71740:	b	71744 <__assert_fail@plt+0x5eb8c>
   71744:	b	71748 <__assert_fail@plt+0x5eb90>
   71748:	ldr	r0, [fp, #-72]	; 0xffffffb8
   7174c:	ldrb	r0, [r0]
   71750:	sub	r0, r0, #48	; 0x30
   71754:	cmp	r0, #9
   71758:	bhi	7242c <__assert_fail@plt+0x5f874>
   7175c:	movw	r0, #0
   71760:	str	r0, [fp, #16]
   71764:	b	719e0 <__assert_fail@plt+0x5ee28>
   71768:	b	7176c <__assert_fail@plt+0x5ebb4>
   7176c:	b	71818 <__assert_fail@plt+0x5ec60>
   71770:	ldr	r0, [fp, #16]
   71774:	cmp	r0, #0
   71778:	bge	717ac <__assert_fail@plt+0x5ebf4>
   7177c:	b	71780 <__assert_fail@plt+0x5ebc8>
   71780:	ldr	r0, [fp, #16]
   71784:	cmp	r0, #12
   71788:	blt	71878 <__assert_fail@plt+0x5ecc0>
   7178c:	b	71890 <__assert_fail@plt+0x5ecd8>
   71790:	ldr	r0, [fp, #16]
   71794:	mvn	r1, #0
   71798:	sub	r0, r1, r0
   7179c:	mvn	r1, #11
   717a0:	cmp	r1, r0
   717a4:	ble	71878 <__assert_fail@plt+0x5ecc0>
   717a8:	b	71890 <__assert_fail@plt+0x5ecd8>
   717ac:	b	717b0 <__assert_fail@plt+0x5ebf8>
   717b0:	b	71804 <__assert_fail@plt+0x5ec4c>
   717b4:	b	71804 <__assert_fail@plt+0x5ec4c>
   717b8:	b	71804 <__assert_fail@plt+0x5ec4c>
   717bc:	b	717c0 <__assert_fail@plt+0x5ec08>
   717c0:	ldr	r0, [fp, #16]
   717c4:	mvn	r1, #127	; 0x7f
   717c8:	add	r0, r0, r1
   717cc:	movw	r1, #0
   717d0:	cmp	r1, r0
   717d4:	blt	71878 <__assert_fail@plt+0x5ecc0>
   717d8:	b	71890 <__assert_fail@plt+0x5ecd8>
   717dc:	ldr	r0, [fp, #16]
   717e0:	movw	r1, #0
   717e4:	cmp	r1, r0
   717e8:	bge	71890 <__assert_fail@plt+0x5ecd8>
   717ec:	ldr	r0, [fp, #16]
   717f0:	sub	r0, r0, #1
   717f4:	movw	r1, #127	; 0x7f
   717f8:	cmp	r1, r0
   717fc:	blt	71878 <__assert_fail@plt+0x5ecc0>
   71800:	b	71890 <__assert_fail@plt+0x5ecd8>
   71804:	ldr	r0, [fp, #16]
   71808:	mvn	r1, #11
   7180c:	cmp	r1, r0
   71810:	blt	71878 <__assert_fail@plt+0x5ecc0>
   71814:	b	71890 <__assert_fail@plt+0x5ecd8>
   71818:	b	71820 <__assert_fail@plt+0x5ec68>
   7181c:	b	71890 <__assert_fail@plt+0x5ecd8>
   71820:	ldr	r0, [fp, #16]
   71824:	cmp	r0, #0
   71828:	bge	71868 <__assert_fail@plt+0x5ecb0>
   7182c:	b	71830 <__assert_fail@plt+0x5ec78>
   71830:	b	71850 <__assert_fail@plt+0x5ec98>
   71834:	b	71850 <__assert_fail@plt+0x5ec98>
   71838:	ldr	r0, [fp, #16]
   7183c:	cmn	r0, #1
   71840:	bne	71850 <__assert_fail@plt+0x5ec98>
   71844:	b	71848 <__assert_fail@plt+0x5ec90>
   71848:	b	71890 <__assert_fail@plt+0x5ecd8>
   7184c:	b	71890 <__assert_fail@plt+0x5ecd8>
   71850:	ldr	r0, [fp, #16]
   71854:	mvn	r1, #127	; 0x7f
   71858:	sdiv	r0, r1, r0
   7185c:	cmp	r0, #10
   71860:	blt	71878 <__assert_fail@plt+0x5ecc0>
   71864:	b	71890 <__assert_fail@plt+0x5ecd8>
   71868:	ldr	r0, [fp, #16]
   7186c:	movw	r1, #12
   71870:	cmp	r1, r0
   71874:	bge	71890 <__assert_fail@plt+0x5ecd8>
   71878:	ldr	r0, [fp, #16]
   7187c:	movw	r1, #10
   71880:	mul	r0, r0, r1
   71884:	sxtb	r0, r0
   71888:	str	r0, [fp, #16]
   7188c:	b	72400 <__assert_fail@plt+0x5f848>
   71890:	ldr	r0, [fp, #16]
   71894:	movw	r1, #10
   71898:	mul	r0, r0, r1
   7189c:	sxtb	r0, r0
   718a0:	str	r0, [fp, #16]
   718a4:	b	723d4 <__assert_fail@plt+0x5f81c>
   718a8:	b	71950 <__assert_fail@plt+0x5ed98>
   718ac:	ldr	r0, [fp, #16]
   718b0:	cmp	r0, #0
   718b4:	bge	718e8 <__assert_fail@plt+0x5ed30>
   718b8:	b	718bc <__assert_fail@plt+0x5ed04>
   718bc:	ldr	r0, [fp, #16]
   718c0:	cmp	r0, #25
   718c4:	blt	719b0 <__assert_fail@plt+0x5edf8>
   718c8:	b	719c8 <__assert_fail@plt+0x5ee10>
   718cc:	ldr	r0, [fp, #16]
   718d0:	mvn	r1, #0
   718d4:	sub	r0, r1, r0
   718d8:	mvn	r1, #24
   718dc:	cmp	r1, r0
   718e0:	ble	719b0 <__assert_fail@plt+0x5edf8>
   718e4:	b	719c8 <__assert_fail@plt+0x5ee10>
   718e8:	b	718ec <__assert_fail@plt+0x5ed34>
   718ec:	b	7193c <__assert_fail@plt+0x5ed84>
   718f0:	b	7193c <__assert_fail@plt+0x5ed84>
   718f4:	b	7193c <__assert_fail@plt+0x5ed84>
   718f8:	b	718fc <__assert_fail@plt+0x5ed44>
   718fc:	ldr	r0, [fp, #16]
   71900:	add	r0, r0, #0
   71904:	movw	r1, #0
   71908:	cmp	r1, r0
   7190c:	blt	719b0 <__assert_fail@plt+0x5edf8>
   71910:	b	719c8 <__assert_fail@plt+0x5ee10>
   71914:	ldr	r0, [fp, #16]
   71918:	movw	r1, #0
   7191c:	cmp	r1, r0
   71920:	bge	719c8 <__assert_fail@plt+0x5ee10>
   71924:	ldr	r0, [fp, #16]
   71928:	sub	r0, r0, #1
   7192c:	mvn	r1, #0
   71930:	cmp	r1, r0
   71934:	blt	719b0 <__assert_fail@plt+0x5edf8>
   71938:	b	719c8 <__assert_fail@plt+0x5ee10>
   7193c:	ldr	r0, [fp, #16]
   71940:	movw	r1, #0
   71944:	cmp	r1, r0
   71948:	blt	719b0 <__assert_fail@plt+0x5edf8>
   7194c:	b	719c8 <__assert_fail@plt+0x5ee10>
   71950:	b	71958 <__assert_fail@plt+0x5eda0>
   71954:	b	719c8 <__assert_fail@plt+0x5ee10>
   71958:	ldr	r0, [fp, #16]
   7195c:	cmp	r0, #0
   71960:	bge	719a0 <__assert_fail@plt+0x5ede8>
   71964:	b	71968 <__assert_fail@plt+0x5edb0>
   71968:	b	71988 <__assert_fail@plt+0x5edd0>
   7196c:	b	71988 <__assert_fail@plt+0x5edd0>
   71970:	ldr	r0, [fp, #16]
   71974:	cmn	r0, #1
   71978:	bne	71988 <__assert_fail@plt+0x5edd0>
   7197c:	b	71980 <__assert_fail@plt+0x5edc8>
   71980:	b	719b0 <__assert_fail@plt+0x5edf8>
   71984:	b	719b0 <__assert_fail@plt+0x5edf8>
   71988:	ldr	r0, [fp, #16]
   7198c:	movw	r1, #0
   71990:	sdiv	r0, r1, r0
   71994:	cmp	r0, #10
   71998:	blt	719b0 <__assert_fail@plt+0x5edf8>
   7199c:	b	719c8 <__assert_fail@plt+0x5ee10>
   719a0:	ldr	r0, [fp, #16]
   719a4:	movw	r1, #25
   719a8:	cmp	r1, r0
   719ac:	bge	719c8 <__assert_fail@plt+0x5ee10>
   719b0:	ldr	r0, [fp, #16]
   719b4:	movw	r1, #10
   719b8:	mul	r0, r0, r1
   719bc:	and	r0, r0, #255	; 0xff
   719c0:	str	r0, [fp, #16]
   719c4:	b	72400 <__assert_fail@plt+0x5f848>
   719c8:	ldr	r0, [fp, #16]
   719cc:	movw	r1, #10
   719d0:	mul	r0, r0, r1
   719d4:	and	r0, r0, #255	; 0xff
   719d8:	str	r0, [fp, #16]
   719dc:	b	723d4 <__assert_fail@plt+0x5f81c>
   719e0:	b	71c64 <__assert_fail@plt+0x5f0ac>
   719e4:	b	719e8 <__assert_fail@plt+0x5ee30>
   719e8:	b	71a98 <__assert_fail@plt+0x5eee0>
   719ec:	ldr	r0, [fp, #16]
   719f0:	cmp	r0, #0
   719f4:	bge	71a2c <__assert_fail@plt+0x5ee74>
   719f8:	b	719fc <__assert_fail@plt+0x5ee44>
   719fc:	ldr	r0, [fp, #16]
   71a00:	movw	r1, #3276	; 0xccc
   71a04:	cmp	r0, r1
   71a08:	blt	71af8 <__assert_fail@plt+0x5ef40>
   71a0c:	b	71b10 <__assert_fail@plt+0x5ef58>
   71a10:	ldr	r0, [pc, #4052]	; 729ec <__assert_fail@plt+0x5fe34>
   71a14:	ldr	r1, [fp, #16]
   71a18:	mvn	r2, #0
   71a1c:	sub	r1, r2, r1
   71a20:	cmp	r0, r1
   71a24:	ble	71af8 <__assert_fail@plt+0x5ef40>
   71a28:	b	71b10 <__assert_fail@plt+0x5ef58>
   71a2c:	b	71a30 <__assert_fail@plt+0x5ee78>
   71a30:	b	71a84 <__assert_fail@plt+0x5eecc>
   71a34:	b	71a84 <__assert_fail@plt+0x5eecc>
   71a38:	b	71a84 <__assert_fail@plt+0x5eecc>
   71a3c:	b	71a40 <__assert_fail@plt+0x5ee88>
   71a40:	ldr	r0, [pc, #4008]	; 729f0 <__assert_fail@plt+0x5fe38>
   71a44:	ldr	r1, [fp, #16]
   71a48:	add	r0, r1, r0
   71a4c:	movw	r1, #0
   71a50:	cmp	r1, r0
   71a54:	blt	71af8 <__assert_fail@plt+0x5ef40>
   71a58:	b	71b10 <__assert_fail@plt+0x5ef58>
   71a5c:	ldr	r0, [fp, #16]
   71a60:	movw	r1, #0
   71a64:	cmp	r1, r0
   71a68:	bge	71b10 <__assert_fail@plt+0x5ef58>
   71a6c:	ldr	r0, [fp, #16]
   71a70:	sub	r0, r0, #1
   71a74:	movw	r1, #32767	; 0x7fff
   71a78:	cmp	r1, r0
   71a7c:	blt	71af8 <__assert_fail@plt+0x5ef40>
   71a80:	b	71b10 <__assert_fail@plt+0x5ef58>
   71a84:	ldr	r0, [pc, #3936]	; 729ec <__assert_fail@plt+0x5fe34>
   71a88:	ldr	r1, [fp, #16]
   71a8c:	cmp	r0, r1
   71a90:	blt	71af8 <__assert_fail@plt+0x5ef40>
   71a94:	b	71b10 <__assert_fail@plt+0x5ef58>
   71a98:	b	71aa0 <__assert_fail@plt+0x5eee8>
   71a9c:	b	71b10 <__assert_fail@plt+0x5ef58>
   71aa0:	ldr	r0, [fp, #16]
   71aa4:	cmp	r0, #0
   71aa8:	bge	71ae8 <__assert_fail@plt+0x5ef30>
   71aac:	b	71ab0 <__assert_fail@plt+0x5eef8>
   71ab0:	b	71ad0 <__assert_fail@plt+0x5ef18>
   71ab4:	b	71ad0 <__assert_fail@plt+0x5ef18>
   71ab8:	ldr	r0, [fp, #16]
   71abc:	cmn	r0, #1
   71ac0:	bne	71ad0 <__assert_fail@plt+0x5ef18>
   71ac4:	b	71ac8 <__assert_fail@plt+0x5ef10>
   71ac8:	b	71b10 <__assert_fail@plt+0x5ef58>
   71acc:	b	71b10 <__assert_fail@plt+0x5ef58>
   71ad0:	ldr	r0, [pc, #3864]	; 729f0 <__assert_fail@plt+0x5fe38>
   71ad4:	ldr	r1, [fp, #16]
   71ad8:	sdiv	r0, r0, r1
   71adc:	cmp	r0, #10
   71ae0:	blt	71af8 <__assert_fail@plt+0x5ef40>
   71ae4:	b	71b10 <__assert_fail@plt+0x5ef58>
   71ae8:	ldr	r0, [fp, #16]
   71aec:	movw	r1, #3276	; 0xccc
   71af0:	cmp	r1, r0
   71af4:	bge	71b10 <__assert_fail@plt+0x5ef58>
   71af8:	ldr	r0, [fp, #16]
   71afc:	movw	r1, #10
   71b00:	mul	r0, r0, r1
   71b04:	sxth	r0, r0
   71b08:	str	r0, [fp, #16]
   71b0c:	b	72400 <__assert_fail@plt+0x5f848>
   71b10:	ldr	r0, [fp, #16]
   71b14:	movw	r1, #10
   71b18:	mul	r0, r0, r1
   71b1c:	sxth	r0, r0
   71b20:	str	r0, [fp, #16]
   71b24:	b	723d4 <__assert_fail@plt+0x5f81c>
   71b28:	b	71bd4 <__assert_fail@plt+0x5f01c>
   71b2c:	ldr	r0, [fp, #16]
   71b30:	cmp	r0, #0
   71b34:	bge	71b6c <__assert_fail@plt+0x5efb4>
   71b38:	b	71b3c <__assert_fail@plt+0x5ef84>
   71b3c:	ldr	r0, [fp, #16]
   71b40:	movw	r1, #6553	; 0x1999
   71b44:	cmp	r0, r1
   71b48:	blt	71c34 <__assert_fail@plt+0x5f07c>
   71b4c:	b	71c4c <__assert_fail@plt+0x5f094>
   71b50:	ldr	r0, [pc, #4008]	; 72b00 <__assert_fail@plt+0x5ff48>
   71b54:	ldr	r1, [fp, #16]
   71b58:	mvn	r2, #0
   71b5c:	sub	r1, r2, r1
   71b60:	cmp	r0, r1
   71b64:	ble	71c34 <__assert_fail@plt+0x5f07c>
   71b68:	b	71c4c <__assert_fail@plt+0x5f094>
   71b6c:	b	71b70 <__assert_fail@plt+0x5efb8>
   71b70:	b	71bc0 <__assert_fail@plt+0x5f008>
   71b74:	b	71bc0 <__assert_fail@plt+0x5f008>
   71b78:	b	71bc0 <__assert_fail@plt+0x5f008>
   71b7c:	b	71b80 <__assert_fail@plt+0x5efc8>
   71b80:	ldr	r0, [fp, #16]
   71b84:	add	r0, r0, #0
   71b88:	movw	r1, #0
   71b8c:	cmp	r1, r0
   71b90:	blt	71c34 <__assert_fail@plt+0x5f07c>
   71b94:	b	71c4c <__assert_fail@plt+0x5f094>
   71b98:	ldr	r0, [fp, #16]
   71b9c:	movw	r1, #0
   71ba0:	cmp	r1, r0
   71ba4:	bge	71c4c <__assert_fail@plt+0x5f094>
   71ba8:	ldr	r0, [fp, #16]
   71bac:	sub	r0, r0, #1
   71bb0:	mvn	r1, #0
   71bb4:	cmp	r1, r0
   71bb8:	blt	71c34 <__assert_fail@plt+0x5f07c>
   71bbc:	b	71c4c <__assert_fail@plt+0x5f094>
   71bc0:	ldr	r0, [fp, #16]
   71bc4:	movw	r1, #0
   71bc8:	cmp	r1, r0
   71bcc:	blt	71c34 <__assert_fail@plt+0x5f07c>
   71bd0:	b	71c4c <__assert_fail@plt+0x5f094>
   71bd4:	b	71bdc <__assert_fail@plt+0x5f024>
   71bd8:	b	71c4c <__assert_fail@plt+0x5f094>
   71bdc:	ldr	r0, [fp, #16]
   71be0:	cmp	r0, #0
   71be4:	bge	71c24 <__assert_fail@plt+0x5f06c>
   71be8:	b	71bec <__assert_fail@plt+0x5f034>
   71bec:	b	71c0c <__assert_fail@plt+0x5f054>
   71bf0:	b	71c0c <__assert_fail@plt+0x5f054>
   71bf4:	ldr	r0, [fp, #16]
   71bf8:	cmn	r0, #1
   71bfc:	bne	71c0c <__assert_fail@plt+0x5f054>
   71c00:	b	71c04 <__assert_fail@plt+0x5f04c>
   71c04:	b	71c34 <__assert_fail@plt+0x5f07c>
   71c08:	b	71c34 <__assert_fail@plt+0x5f07c>
   71c0c:	ldr	r0, [fp, #16]
   71c10:	movw	r1, #0
   71c14:	sdiv	r0, r1, r0
   71c18:	cmp	r0, #10
   71c1c:	blt	71c34 <__assert_fail@plt+0x5f07c>
   71c20:	b	71c4c <__assert_fail@plt+0x5f094>
   71c24:	ldr	r0, [fp, #16]
   71c28:	movw	r1, #6553	; 0x1999
   71c2c:	cmp	r1, r0
   71c30:	bge	71c4c <__assert_fail@plt+0x5f094>
   71c34:	ldr	r0, [fp, #16]
   71c38:	movw	r1, #10
   71c3c:	mul	r0, r0, r1
   71c40:	uxth	r0, r0
   71c44:	str	r0, [fp, #16]
   71c48:	b	72400 <__assert_fail@plt+0x5f848>
   71c4c:	ldr	r0, [fp, #16]
   71c50:	movw	r1, #10
   71c54:	mul	r0, r0, r1
   71c58:	uxth	r0, r0
   71c5c:	str	r0, [fp, #16]
   71c60:	b	723d4 <__assert_fail@plt+0x5f81c>
   71c64:	b	71c68 <__assert_fail@plt+0x5f0b0>
   71c68:	b	71c6c <__assert_fail@plt+0x5f0b4>
   71c6c:	b	71d0c <__assert_fail@plt+0x5f154>
   71c70:	ldr	r0, [fp, #16]
   71c74:	cmp	r0, #0
   71c78:	bge	71cb0 <__assert_fail@plt+0x5f0f8>
   71c7c:	b	71c80 <__assert_fail@plt+0x5f0c8>
   71c80:	ldr	r0, [pc, #4016]	; 72c38 <__assert_fail@plt+0x60080>
   71c84:	ldr	r1, [fp, #16]
   71c88:	cmp	r1, r0
   71c8c:	blt	71d60 <__assert_fail@plt+0x5f1a8>
   71c90:	b	71d74 <__assert_fail@plt+0x5f1bc>
   71c94:	ldr	r0, [pc, #4000]	; 72c3c <__assert_fail@plt+0x60084>
   71c98:	ldr	r1, [fp, #16]
   71c9c:	mvn	r2, #0
   71ca0:	sub	r1, r2, r1
   71ca4:	cmp	r0, r1
   71ca8:	ble	71d60 <__assert_fail@plt+0x5f1a8>
   71cac:	b	71d74 <__assert_fail@plt+0x5f1bc>
   71cb0:	b	71cf8 <__assert_fail@plt+0x5f140>
   71cb4:	b	71cb8 <__assert_fail@plt+0x5f100>
   71cb8:	ldr	r0, [fp, #16]
   71cbc:	add	r0, r0, #-2147483648	; 0x80000000
   71cc0:	movw	r1, #0
   71cc4:	cmp	r1, r0
   71cc8:	blt	71d60 <__assert_fail@plt+0x5f1a8>
   71ccc:	b	71d74 <__assert_fail@plt+0x5f1bc>
   71cd0:	ldr	r0, [fp, #16]
   71cd4:	movw	r1, #0
   71cd8:	cmp	r1, r0
   71cdc:	bge	71d74 <__assert_fail@plt+0x5f1bc>
   71ce0:	ldr	r0, [pc, #4040]	; 72cb0 <__assert_fail@plt+0x600f8>
   71ce4:	ldr	r1, [fp, #16]
   71ce8:	sub	r1, r1, #1
   71cec:	cmp	r0, r1
   71cf0:	blt	71d60 <__assert_fail@plt+0x5f1a8>
   71cf4:	b	71d74 <__assert_fail@plt+0x5f1bc>
   71cf8:	ldr	r0, [pc, #3900]	; 72c3c <__assert_fail@plt+0x60084>
   71cfc:	ldr	r1, [fp, #16]
   71d00:	cmp	r0, r1
   71d04:	blt	71d60 <__assert_fail@plt+0x5f1a8>
   71d08:	b	71d74 <__assert_fail@plt+0x5f1bc>
   71d0c:	b	71d14 <__assert_fail@plt+0x5f15c>
   71d10:	b	71d74 <__assert_fail@plt+0x5f1bc>
   71d14:	ldr	r0, [fp, #16]
   71d18:	cmp	r0, #0
   71d1c:	bge	71d50 <__assert_fail@plt+0x5f198>
   71d20:	ldr	r0, [fp, #16]
   71d24:	cmn	r0, #1
   71d28:	bne	71d38 <__assert_fail@plt+0x5f180>
   71d2c:	b	71d30 <__assert_fail@plt+0x5f178>
   71d30:	b	71d74 <__assert_fail@plt+0x5f1bc>
   71d34:	b	71d74 <__assert_fail@plt+0x5f1bc>
   71d38:	ldr	r0, [pc, #4092]	; 72d3c <__assert_fail@plt+0x60184>
   71d3c:	ldr	r1, [fp, #16]
   71d40:	sdiv	r0, r0, r1
   71d44:	cmp	r0, #10
   71d48:	blt	71d60 <__assert_fail@plt+0x5f1a8>
   71d4c:	b	71d74 <__assert_fail@plt+0x5f1bc>
   71d50:	ldr	r0, [pc, #3808]	; 72c38 <__assert_fail@plt+0x60080>
   71d54:	ldr	r1, [fp, #16]
   71d58:	cmp	r0, r1
   71d5c:	bge	71d74 <__assert_fail@plt+0x5f1bc>
   71d60:	ldr	r0, [fp, #16]
   71d64:	movw	r1, #10
   71d68:	mul	r0, r0, r1
   71d6c:	str	r0, [fp, #16]
   71d70:	b	72400 <__assert_fail@plt+0x5f848>
   71d74:	ldr	r0, [fp, #16]
   71d78:	movw	r1, #10
   71d7c:	mul	r0, r0, r1
   71d80:	str	r0, [fp, #16]
   71d84:	b	723d4 <__assert_fail@plt+0x5f81c>
   71d88:	b	71e34 <__assert_fail@plt+0x5f27c>
   71d8c:	ldr	r0, [fp, #16]
   71d90:	cmp	r0, #0
   71d94:	bge	71dcc <__assert_fail@plt+0x5f214>
   71d98:	b	71db0 <__assert_fail@plt+0x5f1f8>
   71d9c:	ldr	r0, [pc, #4088]	; 72d9c <__assert_fail@plt+0x601e4>
   71da0:	ldr	r1, [fp, #16]
   71da4:	cmp	r1, r0
   71da8:	bcc	71e94 <__assert_fail@plt+0x5f2dc>
   71dac:	b	71ea8 <__assert_fail@plt+0x5f2f0>
   71db0:	ldr	r0, [fp, #16]
   71db4:	mvn	r1, #0
   71db8:	sub	r0, r1, r0
   71dbc:	movw	r1, #1
   71dc0:	cmp	r1, r0
   71dc4:	bls	71e94 <__assert_fail@plt+0x5f2dc>
   71dc8:	b	71ea8 <__assert_fail@plt+0x5f2f0>
   71dcc:	b	71dd0 <__assert_fail@plt+0x5f218>
   71dd0:	b	71e20 <__assert_fail@plt+0x5f268>
   71dd4:	b	71e20 <__assert_fail@plt+0x5f268>
   71dd8:	b	71e20 <__assert_fail@plt+0x5f268>
   71ddc:	b	71de0 <__assert_fail@plt+0x5f228>
   71de0:	ldr	r0, [fp, #16]
   71de4:	add	r0, r0, #0
   71de8:	movw	r1, #0
   71dec:	cmp	r1, r0
   71df0:	blt	71e94 <__assert_fail@plt+0x5f2dc>
   71df4:	b	71ea8 <__assert_fail@plt+0x5f2f0>
   71df8:	ldr	r0, [fp, #16]
   71dfc:	movw	r1, #0
   71e00:	cmp	r1, r0
   71e04:	bge	71ea8 <__assert_fail@plt+0x5f2f0>
   71e08:	ldr	r0, [fp, #16]
   71e0c:	sub	r0, r0, #1
   71e10:	mvn	r1, #0
   71e14:	cmp	r1, r0
   71e18:	blt	71e94 <__assert_fail@plt+0x5f2dc>
   71e1c:	b	71ea8 <__assert_fail@plt+0x5f2f0>
   71e20:	ldr	r0, [fp, #16]
   71e24:	movw	r1, #0
   71e28:	cmp	r1, r0
   71e2c:	blt	71e94 <__assert_fail@plt+0x5f2dc>
   71e30:	b	71ea8 <__assert_fail@plt+0x5f2f0>
   71e34:	b	71e3c <__assert_fail@plt+0x5f284>
   71e38:	b	71ea8 <__assert_fail@plt+0x5f2f0>
   71e3c:	ldr	r0, [fp, #16]
   71e40:	cmp	r0, #0
   71e44:	bge	71e84 <__assert_fail@plt+0x5f2cc>
   71e48:	b	71e4c <__assert_fail@plt+0x5f294>
   71e4c:	b	71e6c <__assert_fail@plt+0x5f2b4>
   71e50:	b	71e6c <__assert_fail@plt+0x5f2b4>
   71e54:	ldr	r0, [fp, #16]
   71e58:	cmn	r0, #1
   71e5c:	bne	71e6c <__assert_fail@plt+0x5f2b4>
   71e60:	b	71e64 <__assert_fail@plt+0x5f2ac>
   71e64:	b	71e94 <__assert_fail@plt+0x5f2dc>
   71e68:	b	71e94 <__assert_fail@plt+0x5f2dc>
   71e6c:	ldr	r0, [fp, #16]
   71e70:	movw	r1, #0
   71e74:	sdiv	r0, r1, r0
   71e78:	cmp	r0, #10
   71e7c:	blt	71e94 <__assert_fail@plt+0x5f2dc>
   71e80:	b	71ea8 <__assert_fail@plt+0x5f2f0>
   71e84:	ldr	r0, [pc, #3856]	; 72d9c <__assert_fail@plt+0x601e4>
   71e88:	ldr	r1, [fp, #16]
   71e8c:	cmp	r0, r1
   71e90:	bcs	71ea8 <__assert_fail@plt+0x5f2f0>
   71e94:	ldr	r0, [fp, #16]
   71e98:	movw	r1, #10
   71e9c:	mul	r0, r0, r1
   71ea0:	str	r0, [fp, #16]
   71ea4:	b	72400 <__assert_fail@plt+0x5f848>
   71ea8:	ldr	r0, [fp, #16]
   71eac:	movw	r1, #10
   71eb0:	mul	r0, r0, r1
   71eb4:	str	r0, [fp, #16]
   71eb8:	b	723d4 <__assert_fail@plt+0x5f81c>
   71ebc:	b	71ec0 <__assert_fail@plt+0x5f308>
   71ec0:	b	71ec4 <__assert_fail@plt+0x5f30c>
   71ec4:	b	71f64 <__assert_fail@plt+0x5f3ac>
   71ec8:	ldr	r0, [fp, #16]
   71ecc:	cmp	r0, #0
   71ed0:	bge	71f08 <__assert_fail@plt+0x5f350>
   71ed4:	b	71ed8 <__assert_fail@plt+0x5f320>
   71ed8:	ldr	r0, [pc, #3416]	; 72c38 <__assert_fail@plt+0x60080>
   71edc:	ldr	r1, [fp, #16]
   71ee0:	cmp	r1, r0
   71ee4:	blt	71fb8 <__assert_fail@plt+0x5f400>
   71ee8:	b	71fcc <__assert_fail@plt+0x5f414>
   71eec:	ldr	r0, [pc, #3400]	; 72c3c <__assert_fail@plt+0x60084>
   71ef0:	ldr	r1, [fp, #16]
   71ef4:	mvn	r2, #0
   71ef8:	sub	r1, r2, r1
   71efc:	cmp	r0, r1
   71f00:	ble	71fb8 <__assert_fail@plt+0x5f400>
   71f04:	b	71fcc <__assert_fail@plt+0x5f414>
   71f08:	b	71f50 <__assert_fail@plt+0x5f398>
   71f0c:	b	71f10 <__assert_fail@plt+0x5f358>
   71f10:	ldr	r0, [fp, #16]
   71f14:	add	r0, r0, #-2147483648	; 0x80000000
   71f18:	movw	r1, #0
   71f1c:	cmp	r1, r0
   71f20:	blt	71fb8 <__assert_fail@plt+0x5f400>
   71f24:	b	71fcc <__assert_fail@plt+0x5f414>
   71f28:	ldr	r0, [fp, #16]
   71f2c:	movw	r1, #0
   71f30:	cmp	r1, r0
   71f34:	bge	71fcc <__assert_fail@plt+0x5f414>
   71f38:	ldr	r0, [pc, #3440]	; 72cb0 <__assert_fail@plt+0x600f8>
   71f3c:	ldr	r1, [fp, #16]
   71f40:	sub	r1, r1, #1
   71f44:	cmp	r0, r1
   71f48:	blt	71fb8 <__assert_fail@plt+0x5f400>
   71f4c:	b	71fcc <__assert_fail@plt+0x5f414>
   71f50:	ldr	r0, [pc, #3300]	; 72c3c <__assert_fail@plt+0x60084>
   71f54:	ldr	r1, [fp, #16]
   71f58:	cmp	r0, r1
   71f5c:	blt	71fb8 <__assert_fail@plt+0x5f400>
   71f60:	b	71fcc <__assert_fail@plt+0x5f414>
   71f64:	b	71f6c <__assert_fail@plt+0x5f3b4>
   71f68:	b	71fcc <__assert_fail@plt+0x5f414>
   71f6c:	ldr	r0, [fp, #16]
   71f70:	cmp	r0, #0
   71f74:	bge	71fa8 <__assert_fail@plt+0x5f3f0>
   71f78:	ldr	r0, [fp, #16]
   71f7c:	cmn	r0, #1
   71f80:	bne	71f90 <__assert_fail@plt+0x5f3d8>
   71f84:	b	71f88 <__assert_fail@plt+0x5f3d0>
   71f88:	b	71fcc <__assert_fail@plt+0x5f414>
   71f8c:	b	71fcc <__assert_fail@plt+0x5f414>
   71f90:	ldr	r0, [pc, #3492]	; 72d3c <__assert_fail@plt+0x60184>
   71f94:	ldr	r1, [fp, #16]
   71f98:	sdiv	r0, r0, r1
   71f9c:	cmp	r0, #10
   71fa0:	blt	71fb8 <__assert_fail@plt+0x5f400>
   71fa4:	b	71fcc <__assert_fail@plt+0x5f414>
   71fa8:	ldr	r0, [pc, #3208]	; 72c38 <__assert_fail@plt+0x60080>
   71fac:	ldr	r1, [fp, #16]
   71fb0:	cmp	r0, r1
   71fb4:	bge	71fcc <__assert_fail@plt+0x5f414>
   71fb8:	ldr	r0, [fp, #16]
   71fbc:	movw	r1, #10
   71fc0:	mul	r0, r0, r1
   71fc4:	str	r0, [fp, #16]
   71fc8:	b	72400 <__assert_fail@plt+0x5f848>
   71fcc:	ldr	r0, [fp, #16]
   71fd0:	movw	r1, #10
   71fd4:	mul	r0, r0, r1
   71fd8:	str	r0, [fp, #16]
   71fdc:	b	723d4 <__assert_fail@plt+0x5f81c>
   71fe0:	b	7208c <__assert_fail@plt+0x5f4d4>
   71fe4:	ldr	r0, [fp, #16]
   71fe8:	cmp	r0, #0
   71fec:	bge	72024 <__assert_fail@plt+0x5f46c>
   71ff0:	b	72008 <__assert_fail@plt+0x5f450>
   71ff4:	ldr	r0, [pc, #3488]	; 72d9c <__assert_fail@plt+0x601e4>
   71ff8:	ldr	r1, [fp, #16]
   71ffc:	cmp	r1, r0
   72000:	bcc	720ec <__assert_fail@plt+0x5f534>
   72004:	b	72100 <__assert_fail@plt+0x5f548>
   72008:	ldr	r0, [fp, #16]
   7200c:	mvn	r1, #0
   72010:	sub	r0, r1, r0
   72014:	movw	r1, #1
   72018:	cmp	r1, r0
   7201c:	bls	720ec <__assert_fail@plt+0x5f534>
   72020:	b	72100 <__assert_fail@plt+0x5f548>
   72024:	b	72028 <__assert_fail@plt+0x5f470>
   72028:	b	72078 <__assert_fail@plt+0x5f4c0>
   7202c:	b	72078 <__assert_fail@plt+0x5f4c0>
   72030:	b	72078 <__assert_fail@plt+0x5f4c0>
   72034:	b	72038 <__assert_fail@plt+0x5f480>
   72038:	ldr	r0, [fp, #16]
   7203c:	add	r0, r0, #0
   72040:	movw	r1, #0
   72044:	cmp	r1, r0
   72048:	blt	720ec <__assert_fail@plt+0x5f534>
   7204c:	b	72100 <__assert_fail@plt+0x5f548>
   72050:	ldr	r0, [fp, #16]
   72054:	movw	r1, #0
   72058:	cmp	r1, r0
   7205c:	bge	72100 <__assert_fail@plt+0x5f548>
   72060:	ldr	r0, [fp, #16]
   72064:	sub	r0, r0, #1
   72068:	mvn	r1, #0
   7206c:	cmp	r1, r0
   72070:	blt	720ec <__assert_fail@plt+0x5f534>
   72074:	b	72100 <__assert_fail@plt+0x5f548>
   72078:	ldr	r0, [fp, #16]
   7207c:	movw	r1, #0
   72080:	cmp	r1, r0
   72084:	blt	720ec <__assert_fail@plt+0x5f534>
   72088:	b	72100 <__assert_fail@plt+0x5f548>
   7208c:	b	72094 <__assert_fail@plt+0x5f4dc>
   72090:	b	72100 <__assert_fail@plt+0x5f548>
   72094:	ldr	r0, [fp, #16]
   72098:	cmp	r0, #0
   7209c:	bge	720dc <__assert_fail@plt+0x5f524>
   720a0:	b	720a4 <__assert_fail@plt+0x5f4ec>
   720a4:	b	720c4 <__assert_fail@plt+0x5f50c>
   720a8:	b	720c4 <__assert_fail@plt+0x5f50c>
   720ac:	ldr	r0, [fp, #16]
   720b0:	cmn	r0, #1
   720b4:	bne	720c4 <__assert_fail@plt+0x5f50c>
   720b8:	b	720bc <__assert_fail@plt+0x5f504>
   720bc:	b	720ec <__assert_fail@plt+0x5f534>
   720c0:	b	720ec <__assert_fail@plt+0x5f534>
   720c4:	ldr	r0, [fp, #16]
   720c8:	movw	r1, #0
   720cc:	sdiv	r0, r1, r0
   720d0:	cmp	r0, #10
   720d4:	blt	720ec <__assert_fail@plt+0x5f534>
   720d8:	b	72100 <__assert_fail@plt+0x5f548>
   720dc:	ldr	r0, [pc, #3256]	; 72d9c <__assert_fail@plt+0x601e4>
   720e0:	ldr	r1, [fp, #16]
   720e4:	cmp	r0, r1
   720e8:	bcs	72100 <__assert_fail@plt+0x5f548>
   720ec:	ldr	r0, [fp, #16]
   720f0:	movw	r1, #10
   720f4:	mul	r0, r0, r1
   720f8:	str	r0, [fp, #16]
   720fc:	b	72400 <__assert_fail@plt+0x5f848>
   72100:	ldr	r0, [fp, #16]
   72104:	movw	r1, #10
   72108:	mul	r0, r0, r1
   7210c:	str	r0, [fp, #16]
   72110:	b	723d4 <__assert_fail@plt+0x5f81c>
   72114:	b	72118 <__assert_fail@plt+0x5f560>
   72118:	b	721e0 <__assert_fail@plt+0x5f628>
   7211c:	ldr	r0, [fp, #16]
   72120:	cmp	r0, #0
   72124:	bge	72178 <__assert_fail@plt+0x5f5c0>
   72128:	b	7212c <__assert_fail@plt+0x5f574>
   7212c:	ldr	r0, [fp, #16]
   72130:	movw	r1, #52428	; 0xcccc
   72134:	movt	r1, #52428	; 0xcccc
   72138:	subs	r1, r0, r1
   7213c:	movw	r2, #52428	; 0xcccc
   72140:	movt	r2, #3276	; 0xccc
   72144:	rscs	r0, r2, r0, asr #31
   72148:	blt	72264 <__assert_fail@plt+0x5f6ac>
   7214c:	b	72278 <__assert_fail@plt+0x5f6c0>
   72150:	ldr	r0, [fp, #16]
   72154:	mvn	r0, r0
   72158:	movw	r1, #13107	; 0x3333
   7215c:	movt	r1, #13107	; 0x3333
   72160:	subs	r1, r1, r0
   72164:	movw	r2, #13107	; 0x3333
   72168:	movt	r2, #62259	; 0xf333
   7216c:	sbcs	r0, r2, r0, asr #31
   72170:	blt	72264 <__assert_fail@plt+0x5f6ac>
   72174:	b	72278 <__assert_fail@plt+0x5f6c0>
   72178:	b	721bc <__assert_fail@plt+0x5f604>
   7217c:	b	72180 <__assert_fail@plt+0x5f5c8>
   72180:	ldr	r0, [fp, #16]
   72184:	mov	r1, #-2147483648	; 0x80000000
   72188:	add	r1, r1, r0, asr #31
   7218c:	rsbs	r0, r0, #0
   72190:	rscs	r1, r1, #0
   72194:	blt	72264 <__assert_fail@plt+0x5f6ac>
   72198:	b	72278 <__assert_fail@plt+0x5f6c0>
   7219c:	ldr	r0, [fp, #16]
   721a0:	movw	r1, #0
   721a4:	cmp	r1, r0
   721a8:	bge	72278 <__assert_fail@plt+0x5f6c0>
   721ac:	mov	r0, #0
   721b0:	cmp	r0, #0
   721b4:	bne	72264 <__assert_fail@plt+0x5f6ac>
   721b8:	b	72278 <__assert_fail@plt+0x5f6c0>
   721bc:	ldr	r0, [fp, #16]
   721c0:	movw	r1, #13108	; 0x3334
   721c4:	movt	r1, #13107	; 0x3333
   721c8:	subs	r1, r1, r0
   721cc:	movw	r2, #13107	; 0x3333
   721d0:	movt	r2, #62259	; 0xf333
   721d4:	sbcs	r0, r2, r0, asr #31
   721d8:	blt	72264 <__assert_fail@plt+0x5f6ac>
   721dc:	b	72278 <__assert_fail@plt+0x5f6c0>
   721e0:	b	721e8 <__assert_fail@plt+0x5f630>
   721e4:	b	72278 <__assert_fail@plt+0x5f6c0>
   721e8:	ldr	r0, [fp, #16]
   721ec:	cmp	r0, #0
   721f0:	bge	72240 <__assert_fail@plt+0x5f688>
   721f4:	ldr	r0, [fp, #16]
   721f8:	cmn	r0, #1
   721fc:	bne	7220c <__assert_fail@plt+0x5f654>
   72200:	b	72204 <__assert_fail@plt+0x5f64c>
   72204:	b	72278 <__assert_fail@plt+0x5f6c0>
   72208:	b	72278 <__assert_fail@plt+0x5f6c0>
   7220c:	ldr	r0, [fp, #16]
   72210:	asr	r3, r0, #31
   72214:	mov	r1, #0
   72218:	mov	r2, #-2147483648	; 0x80000000
   7221c:	str	r0, [sp, #236]	; 0xec
   72220:	mov	r0, r1
   72224:	mov	r1, r2
   72228:	ldr	r2, [sp, #236]	; 0xec
   7222c:	bl	75338 <__assert_fail@plt+0x62780>
   72230:	subs	r0, r0, #10
   72234:	sbcs	r1, r1, #0
   72238:	blt	72264 <__assert_fail@plt+0x5f6ac>
   7223c:	b	72278 <__assert_fail@plt+0x5f6c0>
   72240:	ldr	r0, [fp, #16]
   72244:	movw	r1, #52429	; 0xcccd
   72248:	movt	r1, #52428	; 0xcccc
   7224c:	subs	r1, r0, r1
   72250:	movw	r2, #52428	; 0xcccc
   72254:	movt	r2, #3276	; 0xccc
   72258:	rscs	r0, r2, r0, asr #31
   7225c:	blt	72278 <__assert_fail@plt+0x5f6c0>
   72260:	b	72264 <__assert_fail@plt+0x5f6ac>
   72264:	ldr	r0, [fp, #16]
   72268:	add	r0, r0, r0, lsl #2
   7226c:	lsl	r0, r0, #1
   72270:	str	r0, [fp, #16]
   72274:	b	72400 <__assert_fail@plt+0x5f848>
   72278:	ldr	r0, [fp, #16]
   7227c:	add	r0, r0, r0, lsl #2
   72280:	lsl	r0, r0, #1
   72284:	str	r0, [fp, #16]
   72288:	b	723d4 <__assert_fail@plt+0x5f81c>
   7228c:	b	7233c <__assert_fail@plt+0x5f784>
   72290:	ldr	r0, [fp, #16]
   72294:	cmp	r0, #0
   72298:	bge	722d4 <__assert_fail@plt+0x5f71c>
   7229c:	b	722c4 <__assert_fail@plt+0x5f70c>
   722a0:	ldr	r0, [fp, #16]
   722a4:	movw	r1, #39321	; 0x9999
   722a8:	movt	r1, #39321	; 0x9999
   722ac:	subs	r1, r0, r1
   722b0:	movw	r2, #39321	; 0x9999
   722b4:	movt	r2, #6553	; 0x1999
   722b8:	rscs	r0, r2, r0, asr #31
   722bc:	bcc	723b0 <__assert_fail@plt+0x5f7f8>
   722c0:	b	723c4 <__assert_fail@plt+0x5f80c>
   722c4:	ldr	r0, [fp, #16]
   722c8:	cmn	r0, #1
   722cc:	bne	723b0 <__assert_fail@plt+0x5f7f8>
   722d0:	b	723c4 <__assert_fail@plt+0x5f80c>
   722d4:	b	722d8 <__assert_fail@plt+0x5f720>
   722d8:	b	72328 <__assert_fail@plt+0x5f770>
   722dc:	b	72328 <__assert_fail@plt+0x5f770>
   722e0:	b	72328 <__assert_fail@plt+0x5f770>
   722e4:	b	722e8 <__assert_fail@plt+0x5f730>
   722e8:	ldr	r0, [fp, #16]
   722ec:	add	r0, r0, #0
   722f0:	movw	r1, #0
   722f4:	cmp	r1, r0
   722f8:	blt	723b0 <__assert_fail@plt+0x5f7f8>
   722fc:	b	723c4 <__assert_fail@plt+0x5f80c>
   72300:	ldr	r0, [fp, #16]
   72304:	movw	r1, #0
   72308:	cmp	r1, r0
   7230c:	bge	723c4 <__assert_fail@plt+0x5f80c>
   72310:	ldr	r0, [fp, #16]
   72314:	sub	r0, r0, #1
   72318:	mvn	r1, #0
   7231c:	cmp	r1, r0
   72320:	blt	723b0 <__assert_fail@plt+0x5f7f8>
   72324:	b	723c4 <__assert_fail@plt+0x5f80c>
   72328:	ldr	r0, [fp, #16]
   7232c:	movw	r1, #0
   72330:	cmp	r1, r0
   72334:	blt	723b0 <__assert_fail@plt+0x5f7f8>
   72338:	b	723c4 <__assert_fail@plt+0x5f80c>
   7233c:	b	72344 <__assert_fail@plt+0x5f78c>
   72340:	b	723c4 <__assert_fail@plt+0x5f80c>
   72344:	ldr	r0, [fp, #16]
   72348:	cmp	r0, #0
   7234c:	bge	7238c <__assert_fail@plt+0x5f7d4>
   72350:	b	72354 <__assert_fail@plt+0x5f79c>
   72354:	b	72374 <__assert_fail@plt+0x5f7bc>
   72358:	b	72374 <__assert_fail@plt+0x5f7bc>
   7235c:	ldr	r0, [fp, #16]
   72360:	cmn	r0, #1
   72364:	bne	72374 <__assert_fail@plt+0x5f7bc>
   72368:	b	7236c <__assert_fail@plt+0x5f7b4>
   7236c:	b	723b0 <__assert_fail@plt+0x5f7f8>
   72370:	b	723b0 <__assert_fail@plt+0x5f7f8>
   72374:	ldr	r0, [fp, #16]
   72378:	movw	r1, #0
   7237c:	sdiv	r0, r1, r0
   72380:	cmp	r0, #10
   72384:	blt	723b0 <__assert_fail@plt+0x5f7f8>
   72388:	b	723c4 <__assert_fail@plt+0x5f80c>
   7238c:	ldr	r0, [fp, #16]
   72390:	movw	r1, #39322	; 0x999a
   72394:	movt	r1, #39321	; 0x9999
   72398:	subs	r1, r0, r1
   7239c:	movw	r2, #39321	; 0x9999
   723a0:	movt	r2, #6553	; 0x1999
   723a4:	rscs	r0, r2, r0, asr #31
   723a8:	bcc	723c4 <__assert_fail@plt+0x5f80c>
   723ac:	b	723b0 <__assert_fail@plt+0x5f7f8>
   723b0:	ldr	r0, [fp, #16]
   723b4:	add	r0, r0, r0, lsl #2
   723b8:	lsl	r0, r0, #1
   723bc:	str	r0, [fp, #16]
   723c0:	b	72400 <__assert_fail@plt+0x5f848>
   723c4:	ldr	r0, [fp, #16]
   723c8:	add	r0, r0, r0, lsl #2
   723cc:	lsl	r0, r0, #1
   723d0:	str	r0, [fp, #16]
   723d4:	ldr	r0, [fp, #16]
   723d8:	ldr	r1, [fp, #-72]	; 0xffffffb8
   723dc:	ldrb	r1, [r1]
   723e0:	sub	r1, r1, #48	; 0x30
   723e4:	add	r1, r0, r1
   723e8:	mov	r2, #1
   723ec:	cmp	r1, r0
   723f0:	movwvc	r2, #0
   723f4:	str	r1, [fp, #16]
   723f8:	tst	r2, #1
   723fc:	beq	72408 <__assert_fail@plt+0x5f850>
   72400:	ldr	r0, [pc, #2216]	; 72cb0 <__assert_fail@plt+0x600f8>
   72404:	str	r0, [fp, #16]
   72408:	ldr	r0, [fp, #-72]	; 0xffffffb8
   7240c:	add	r0, r0, #1
   72410:	str	r0, [fp, #-72]	; 0xffffffb8
   72414:	ldr	r0, [fp, #-72]	; 0xffffffb8
   72418:	ldrb	r0, [r0]
   7241c:	sub	r0, r0, #48	; 0x30
   72420:	cmp	r0, #9
   72424:	bls	71764 <__assert_fail@plt+0x5ebac>
   72428:	b	7242c <__assert_fail@plt+0x5f874>
   7242c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   72430:	ldrb	r0, [r0]
   72434:	mov	r1, r0
   72438:	cmp	r0, #69	; 0x45
   7243c:	str	r1, [sp, #232]	; 0xe8
   72440:	beq	72458 <__assert_fail@plt+0x5f8a0>
   72444:	b	72448 <__assert_fail@plt+0x5f890>
   72448:	ldr	r0, [sp, #232]	; 0xe8
   7244c:	cmp	r0, #79	; 0x4f
   72450:	bne	72470 <__assert_fail@plt+0x5f8b8>
   72454:	b	72458 <__assert_fail@plt+0x5f8a0>
   72458:	ldr	r0, [fp, #-72]	; 0xffffffb8
   7245c:	add	r1, r0, #1
   72460:	str	r1, [fp, #-72]	; 0xffffffb8
   72464:	ldrb	r0, [r0]
   72468:	str	r0, [fp, #-80]	; 0xffffffb0
   7246c:	b	72478 <__assert_fail@plt+0x5f8c0>
   72470:	movw	r0, #0
   72474:	str	r0, [fp, #-80]	; 0xffffffb0
   72478:	ldr	r0, [fp, #-72]	; 0xffffffb8
   7247c:	ldrb	r0, [r0]
   72480:	str	r0, [fp, #-136]	; 0xffffff78
   72484:	ldr	r0, [fp, #-136]	; 0xffffff78
   72488:	cmp	r0, #122	; 0x7a
   7248c:	str	r0, [sp, #228]	; 0xe4
   72490:	bhi	74a04 <__assert_fail@plt+0x61e4c>
   72494:	add	r0, pc, #8
   72498:	ldr	r1, [sp, #228]	; 0xe4
   7249c:	ldr	r0, [r0, r1, lsl #2]
   724a0:	mov	pc, r0
   724a4:	strdeq	r4, [r7], -r0
   724a8:	andeq	r4, r7, r4, lsl #20
   724ac:	andeq	r4, r7, r4, lsl #20
   724b0:	andeq	r4, r7, r4, lsl #20
   724b4:	andeq	r4, r7, r4, lsl #20
   724b8:	andeq	r4, r7, r4, lsl #20
   724bc:	andeq	r4, r7, r4, lsl #20
   724c0:	andeq	r4, r7, r4, lsl #20
   724c4:	andeq	r4, r7, r4, lsl #20
   724c8:	andeq	r4, r7, r4, lsl #20
   724cc:	andeq	r4, r7, r4, lsl #20
   724d0:	andeq	r4, r7, r4, lsl #20
   724d4:	andeq	r4, r7, r4, lsl #20
   724d8:	andeq	r4, r7, r4, lsl #20
   724dc:	andeq	r4, r7, r4, lsl #20
   724e0:	andeq	r4, r7, r4, lsl #20
   724e4:	andeq	r4, r7, r4, lsl #20
   724e8:	andeq	r4, r7, r4, lsl #20
   724ec:	andeq	r4, r7, r4, lsl #20
   724f0:	andeq	r4, r7, r4, lsl #20
   724f4:	andeq	r4, r7, r4, lsl #20
   724f8:	andeq	r4, r7, r4, lsl #20
   724fc:	andeq	r4, r7, r4, lsl #20
   72500:	andeq	r4, r7, r4, lsl #20
   72504:	andeq	r4, r7, r4, lsl #20
   72508:	andeq	r4, r7, r4, lsl #20
   7250c:	andeq	r4, r7, r4, lsl #20
   72510:	andeq	r4, r7, r4, lsl #20
   72514:	andeq	r4, r7, r4, lsl #20
   72518:	andeq	r4, r7, r4, lsl #20
   7251c:	andeq	r4, r7, r4, lsl #20
   72520:	andeq	r4, r7, r4, lsl #20
   72524:	andeq	r4, r7, r4, lsl #20
   72528:	andeq	r4, r7, r4, lsl #20
   7252c:	andeq	r4, r7, r4, lsl #20
   72530:	andeq	r4, r7, r4, lsl #20
   72534:	andeq	r4, r7, r4, lsl #20
   72538:	muleq	r7, r0, r6
   7253c:	andeq	r4, r7, r4, lsl #20
   72540:	andeq	r4, r7, r4, lsl #20
   72544:	andeq	r4, r7, r4, lsl #20
   72548:	andeq	r4, r7, r4, lsl #20
   7254c:	andeq	r4, r7, r4, lsl #20
   72550:	andeq	r4, r7, r4, lsl #20
   72554:	andeq	r4, r7, r4, lsl #20
   72558:	andeq	r4, r7, r4, lsl #20
   7255c:	andeq	r4, r7, r4, lsl #20
   72560:	andeq	r4, r7, r4, lsl #20
   72564:	andeq	r4, r7, r4, lsl #20
   72568:	andeq	r4, r7, r4, lsl #20
   7256c:	andeq	r4, r7, r4, lsl #20
   72570:	andeq	r4, r7, r4, lsl #20
   72574:	andeq	r4, r7, r4, lsl #20
   72578:	andeq	r4, r7, r4, lsl #20
   7257c:	andeq	r4, r7, r4, lsl #20
   72580:	andeq	r4, r7, r4, lsl #20
   72584:	andeq	r4, r7, r4, lsl #20
   72588:	andeq	r4, r7, r4, lsl #20
   7258c:	andeq	r4, r7, r8, lsl #15
   72590:	andeq	r4, r7, r4, lsl #20
   72594:	andeq	r4, r7, r4, lsl #20
   72598:	andeq	r4, r7, r4, lsl #20
   7259c:	andeq	r4, r7, r4, lsl #20
   725a0:	andeq	r4, r7, r4, lsl #20
   725a4:	andeq	r4, r7, r4, lsl #20
   725a8:	andeq	r2, r7, r4, asr #16
   725ac:	andeq	r2, r7, r4, lsr #17
   725b0:	andeq	r2, r7, ip, lsl #27
   725b4:	andeq	r2, r7, r0, ror #28
   725b8:	andeq	r4, r7, r4, lsl #20
   725bc:	andeq	r3, r7, r0, lsr #10
   725c0:	andeq	r4, r7, r4, lsr #1
   725c4:	muleq	r7, r0, r5
   725c8:			; <UNDEFINED> instruction: 0x000735bc
   725cc:	andeq	r4, r7, r4, lsl #20
   725d0:	andeq	r4, r7, r4, lsl #20
   725d4:	andeq	r4, r7, r4, lsl #20
   725d8:	andeq	r3, r7, r4, lsl #13
   725dc:	strdeq	r3, [r7], -ip
   725e0:	andeq	r4, r7, r4, lsl #20
   725e4:	andeq	r3, r7, ip, asr #25
   725e8:	andeq	r4, r7, r4, lsl #20
   725ec:	andeq	r3, r7, r0, lsr sp
   725f0:	andeq	r3, r7, r4, asr #26
   725f4:	andeq	r3, r7, ip, lsr #29
   725f8:	andeq	r4, r7, r0, rrx
   725fc:	andeq	r4, r7, r4, lsr #1
   72600:	andeq	r4, r7, ip, lsr #8
   72604:	muleq	r7, r8, lr
   72608:			; <UNDEFINED> instruction: 0x000744b8
   7260c:			; <UNDEFINED> instruction: 0x000745bc
   72610:	andeq	r4, r7, r4, lsl #20
   72614:	andeq	r4, r7, r4, lsl #20
   72618:	andeq	r4, r7, r4, lsl #20
   7261c:	andeq	r4, r7, r4, lsl #20
   72620:	andeq	r4, r7, r4, lsl #20
   72624:	andeq	r4, r7, r4, lsl #20
   72628:	andeq	r2, r7, r4, lsl r8
   7262c:	andeq	r2, r7, r4, ror r8
   72630:	ldrdeq	r2, [r7], -r4
   72634:	andeq	r2, r7, r0, lsl #29
   72638:	andeq	r2, r7, ip, lsr #29
   7263c:	andeq	r4, r7, r4, lsl #20
   72640:	andeq	r4, r7, r4, lsr #1
   72644:	andeq	r2, r7, r4, ror r8
   72648:	andeq	r4, r7, r4, lsl #20
   7264c:	andeq	r3, r7, r8, lsr r6
   72650:	andeq	r3, r7, r4, ror #11
   72654:	andeq	r3, r7, r0, lsl r6
   72658:			; <UNDEFINED> instruction: 0x000736b0
   7265c:	andeq	r3, r7, r8, ror #22
   72660:	andeq	r4, r7, r4, lsl #20
   72664:	ldrdeq	r3, [r7], -ip
   72668:	strdeq	r3, [r7], -ip
   7266c:	andeq	r3, r7, r0, asr #26
   72670:	andeq	r3, r7, r4, ror sp
   72674:			; <UNDEFINED> instruction: 0x00073ebc
   72678:	andeq	r4, r7, r0, lsr #32
   7267c:	andeq	r4, r7, r4, lsl #20
   72680:	andeq	r4, r7, ip, lsl #9
   72684:	andeq	r2, r7, ip, asr #28
   72688:	andeq	r4, r7, ip, lsl r5
   7268c:	andeq	r4, r7, ip, ror #15
   72690:	ldr	r0, [fp, #-72]	; 0xffffffb8
   72694:	mvn	r1, #0
   72698:	add	r0, r0, r1
   7269c:	ldr	r1, [fp, #-160]	; 0xffffff60
   726a0:	cmp	r0, r1
   726a4:	beq	726ac <__assert_fail@plt+0x5faf4>
   726a8:	b	749f4 <__assert_fail@plt+0x61e3c>
   726ac:	b	726b0 <__assert_fail@plt+0x5faf8>
   726b0:	movw	r0, #1
   726b4:	str	r0, [fp, #-164]	; 0xffffff5c
   726b8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   726bc:	cmp	r0, #45	; 0x2d
   726c0:	beq	726d0 <__assert_fail@plt+0x5fb18>
   726c4:	ldr	r0, [fp, #16]
   726c8:	cmp	r0, #0
   726cc:	bge	726dc <__assert_fail@plt+0x5fb24>
   726d0:	movw	r0, #0
   726d4:	str	r0, [sp, #224]	; 0xe0
   726d8:	b	726e4 <__assert_fail@plt+0x5fb2c>
   726dc:	ldr	r0, [fp, #16]
   726e0:	str	r0, [sp, #224]	; 0xe0
   726e4:	ldr	r0, [sp, #224]	; 0xe0
   726e8:	str	r0, [fp, #-168]	; 0xffffff58
   726ec:	ldr	r0, [fp, #-164]	; 0xffffff5c
   726f0:	ldr	r1, [fp, #-168]	; 0xffffff58
   726f4:	cmp	r0, r1
   726f8:	bcs	72708 <__assert_fail@plt+0x5fb50>
   726fc:	ldr	r0, [fp, #-168]	; 0xffffff58
   72700:	str	r0, [sp, #220]	; 0xdc
   72704:	b	72710 <__assert_fail@plt+0x5fb58>
   72708:	ldr	r0, [fp, #-164]	; 0xffffff5c
   7270c:	str	r0, [sp, #220]	; 0xdc
   72710:	ldr	r0, [sp, #220]	; 0xdc
   72714:	str	r0, [fp, #-172]	; 0xffffff54
   72718:	ldr	r0, [fp, #-172]	; 0xffffff54
   7271c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   72720:	ldr	r2, [fp, #-64]	; 0xffffffc0
   72724:	sub	r1, r1, r2
   72728:	cmp	r0, r1
   7272c:	bcc	72748 <__assert_fail@plt+0x5fb90>
   72730:	bl	128d0 <__errno_location@plt>
   72734:	movw	r1, #34	; 0x22
   72738:	str	r1, [r0]
   7273c:	movw	r0, #0
   72740:	str	r0, [fp, #-28]	; 0xffffffe4
   72744:	b	74c20 <__assert_fail@plt+0x62068>
   72748:	ldr	r0, [fp, #-68]	; 0xffffffbc
   7274c:	movw	r1, #0
   72750:	cmp	r0, r1
   72754:	beq	72800 <__assert_fail@plt+0x5fc48>
   72758:	ldr	r0, [fp, #-164]	; 0xffffff5c
   7275c:	ldr	r1, [fp, #-168]	; 0xffffff58
   72760:	cmp	r0, r1
   72764:	bcs	727e0 <__assert_fail@plt+0x5fc28>
   72768:	ldr	r0, [fp, #-168]	; 0xffffff58
   7276c:	ldr	r1, [fp, #-164]	; 0xffffff5c
   72770:	sub	r0, r0, r1
   72774:	str	r0, [fp, #-176]	; 0xffffff50
   72778:	ldr	r0, [fp, #-76]	; 0xffffffb4
   7277c:	cmp	r0, #48	; 0x30
   72780:	beq	72790 <__assert_fail@plt+0x5fbd8>
   72784:	ldr	r0, [fp, #-76]	; 0xffffffb4
   72788:	cmp	r0, #43	; 0x2b
   7278c:	bne	727b8 <__assert_fail@plt+0x5fc00>
   72790:	ldr	r0, [fp, #-68]	; 0xffffffbc
   72794:	ldr	r2, [fp, #-176]	; 0xffffff50
   72798:	movw	r1, #48	; 0x30
   7279c:	and	r1, r1, #255	; 0xff
   727a0:	bl	12900 <memset@plt>
   727a4:	ldr	r0, [fp, #-176]	; 0xffffff50
   727a8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   727ac:	add	r0, r1, r0
   727b0:	str	r0, [fp, #-68]	; 0xffffffbc
   727b4:	b	727dc <__assert_fail@plt+0x5fc24>
   727b8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   727bc:	ldr	r2, [fp, #-176]	; 0xffffff50
   727c0:	movw	r1, #32
   727c4:	and	r1, r1, #255	; 0xff
   727c8:	bl	12900 <memset@plt>
   727cc:	ldr	r0, [fp, #-176]	; 0xffffff50
   727d0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   727d4:	add	r0, r1, r0
   727d8:	str	r0, [fp, #-68]	; 0xffffffbc
   727dc:	b	727e0 <__assert_fail@plt+0x5fc28>
   727e0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   727e4:	ldrb	r0, [r0]
   727e8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   727ec:	strb	r0, [r1]
   727f0:	ldr	r0, [fp, #-164]	; 0xffffff5c
   727f4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   727f8:	add	r0, r1, r0
   727fc:	str	r0, [fp, #-68]	; 0xffffffbc
   72800:	ldr	r0, [fp, #-172]	; 0xffffff54
   72804:	ldr	r1, [fp, #-64]	; 0xffffffc0
   72808:	add	r0, r1, r0
   7280c:	str	r0, [fp, #-64]	; 0xffffffc0
   72810:	b	74bc0 <__assert_fail@plt+0x62008>
   72814:	ldr	r0, [fp, #-80]	; 0xffffffb0
   72818:	cmp	r0, #0
   7281c:	beq	72824 <__assert_fail@plt+0x5fc6c>
   72820:	b	74a08 <__assert_fail@plt+0x61e50>
   72824:	ldrb	r0, [fp, #-129]	; 0xffffff7f
   72828:	tst	r0, #1
   7282c:	beq	72840 <__assert_fail@plt+0x5fc88>
   72830:	movw	r0, #1
   72834:	strb	r0, [fp, #-124]	; 0xffffff84
   72838:	movw	r0, #0
   7283c:	strb	r0, [fp, #-123]	; 0xffffff85
   72840:	b	72b04 <__assert_fail@plt+0x5ff4c>
   72844:	ldr	r0, [fp, #-80]	; 0xffffffb0
   72848:	cmp	r0, #0
   7284c:	beq	72854 <__assert_fail@plt+0x5fc9c>
   72850:	b	74a08 <__assert_fail@plt+0x61e50>
   72854:	ldrb	r0, [fp, #-129]	; 0xffffff7f
   72858:	tst	r0, #1
   7285c:	beq	72870 <__assert_fail@plt+0x5fcb8>
   72860:	movw	r0, #1
   72864:	strb	r0, [fp, #-124]	; 0xffffff84
   72868:	movw	r0, #0
   7286c:	strb	r0, [fp, #-123]	; 0xffffff85
   72870:	b	72b04 <__assert_fail@plt+0x5ff4c>
   72874:	ldrb	r0, [fp, #-129]	; 0xffffff7f
   72878:	tst	r0, #1
   7287c:	beq	72890 <__assert_fail@plt+0x5fcd8>
   72880:	movw	r0, #1
   72884:	strb	r0, [fp, #-124]	; 0xffffff84
   72888:	movw	r0, #0
   7288c:	strb	r0, [fp, #-123]	; 0xffffff85
   72890:	ldr	r0, [fp, #-80]	; 0xffffffb0
   72894:	cmp	r0, #69	; 0x45
   72898:	bne	728a0 <__assert_fail@plt+0x5fce8>
   7289c:	b	74a08 <__assert_fail@plt+0x61e50>
   728a0:	b	72b04 <__assert_fail@plt+0x5ff4c>
   728a4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   728a8:	cmp	r0, #69	; 0x45
   728ac:	bne	728b4 <__assert_fail@plt+0x5fcfc>
   728b0:	b	74a08 <__assert_fail@plt+0x61e50>
   728b4:	ldrb	r0, [fp, #-129]	; 0xffffff7f
   728b8:	tst	r0, #1
   728bc:	beq	728d0 <__assert_fail@plt+0x5fd18>
   728c0:	movw	r0, #1
   728c4:	strb	r0, [fp, #-124]	; 0xffffff84
   728c8:	movw	r0, #0
   728cc:	strb	r0, [fp, #-123]	; 0xffffff85
   728d0:	b	72b04 <__assert_fail@plt+0x5ff4c>
   728d4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   728d8:	cmp	r0, #79	; 0x4f
   728dc:	bne	728e4 <__assert_fail@plt+0x5fd2c>
   728e0:	b	74a08 <__assert_fail@plt+0x61e50>
   728e4:	b	72b04 <__assert_fail@plt+0x5ff4c>
   728e8:	mvn	r0, #0
   728ec:	str	r0, [fp, #-140]	; 0xffffff74
   728f0:	ldr	r2, [fp, #-104]	; 0xffffff98
   728f4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   728f8:	ldrb	r0, [fp, #-124]	; 0xffffff84
   728fc:	ldr	r1, [fp, #-76]	; 0xffffffb4
   72900:	ldr	ip, [fp, #-140]	; 0xffffff74
   72904:	ldr	lr, [fp, #20]
   72908:	ldr	r4, [fp, #24]
   7290c:	ldr	r5, [fp, #28]
   72910:	movw	r6, #0
   72914:	str	r0, [sp, #216]	; 0xd8
   72918:	mov	r0, r6
   7291c:	mvn	r6, #0
   72920:	str	r1, [sp, #212]	; 0xd4
   72924:	mov	r1, r6
   72928:	ldr	r6, [sp, #216]	; 0xd8
   7292c:	and	r7, r6, #1
   72930:	str	r7, [sp]
   72934:	ldr	r7, [sp, #212]	; 0xd4
   72938:	str	r7, [sp, #4]
   7293c:	str	ip, [sp, #8]
   72940:	str	lr, [sp, #12]
   72944:	str	r4, [sp, #16]
   72948:	str	r5, [sp, #20]
   7294c:	bl	71414 <__assert_fail@plt+0x5e85c>
   72950:	str	r0, [fp, #-180]	; 0xffffff4c
   72954:	ldr	r0, [fp, #-180]	; 0xffffff4c
   72958:	str	r0, [fp, #-184]	; 0xffffff48
   7295c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   72960:	cmp	r0, #45	; 0x2d
   72964:	beq	72974 <__assert_fail@plt+0x5fdbc>
   72968:	ldr	r0, [fp, #16]
   7296c:	cmp	r0, #0
   72970:	bge	72980 <__assert_fail@plt+0x5fdc8>
   72974:	movw	r0, #0
   72978:	str	r0, [sp, #208]	; 0xd0
   7297c:	b	72988 <__assert_fail@plt+0x5fdd0>
   72980:	ldr	r0, [fp, #16]
   72984:	str	r0, [sp, #208]	; 0xd0
   72988:	ldr	r0, [sp, #208]	; 0xd0
   7298c:	str	r0, [fp, #-188]	; 0xffffff44
   72990:	ldr	r0, [fp, #-184]	; 0xffffff48
   72994:	ldr	r1, [fp, #-188]	; 0xffffff44
   72998:	cmp	r0, r1
   7299c:	bcs	729ac <__assert_fail@plt+0x5fdf4>
   729a0:	ldr	r0, [fp, #-188]	; 0xffffff44
   729a4:	str	r0, [sp, #204]	; 0xcc
   729a8:	b	729b4 <__assert_fail@plt+0x5fdfc>
   729ac:	ldr	r0, [fp, #-184]	; 0xffffff48
   729b0:	str	r0, [sp, #204]	; 0xcc
   729b4:	ldr	r0, [sp, #204]	; 0xcc
   729b8:	str	r0, [fp, #-192]	; 0xffffff40
   729bc:	ldr	r0, [fp, #-192]	; 0xffffff40
   729c0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   729c4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   729c8:	sub	r1, r1, r2
   729cc:	cmp	r0, r1
   729d0:	bcc	729f4 <__assert_fail@plt+0x5fe3c>
   729d4:	bl	128d0 <__errno_location@plt>
   729d8:	movw	r1, #34	; 0x22
   729dc:	str	r1, [r0]
   729e0:	movw	r0, #0
   729e4:	str	r0, [fp, #-28]	; 0xffffffe4
   729e8:	b	74c20 <__assert_fail@plt+0x62068>
   729ec:			; <UNDEFINED> instruction: 0xfffff334
   729f0:			; <UNDEFINED> instruction: 0xffff8000
   729f4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   729f8:	movw	r1, #0
   729fc:	cmp	r0, r1
   72a00:	beq	72aec <__assert_fail@plt+0x5ff34>
   72a04:	ldr	r0, [fp, #-184]	; 0xffffff48
   72a08:	ldr	r1, [fp, #-188]	; 0xffffff44
   72a0c:	cmp	r0, r1
   72a10:	bcs	72a8c <__assert_fail@plt+0x5fed4>
   72a14:	ldr	r0, [fp, #-188]	; 0xffffff44
   72a18:	ldr	r1, [fp, #-184]	; 0xffffff48
   72a1c:	sub	r0, r0, r1
   72a20:	str	r0, [fp, #-196]	; 0xffffff3c
   72a24:	ldr	r0, [fp, #-76]	; 0xffffffb4
   72a28:	cmp	r0, #48	; 0x30
   72a2c:	beq	72a3c <__assert_fail@plt+0x5fe84>
   72a30:	ldr	r0, [fp, #-76]	; 0xffffffb4
   72a34:	cmp	r0, #43	; 0x2b
   72a38:	bne	72a64 <__assert_fail@plt+0x5feac>
   72a3c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   72a40:	ldr	r2, [fp, #-196]	; 0xffffff3c
   72a44:	movw	r1, #48	; 0x30
   72a48:	and	r1, r1, #255	; 0xff
   72a4c:	bl	12900 <memset@plt>
   72a50:	ldr	r0, [fp, #-196]	; 0xffffff3c
   72a54:	ldr	r1, [fp, #-68]	; 0xffffffbc
   72a58:	add	r0, r1, r0
   72a5c:	str	r0, [fp, #-68]	; 0xffffffbc
   72a60:	b	72a88 <__assert_fail@plt+0x5fed0>
   72a64:	ldr	r0, [fp, #-68]	; 0xffffffbc
   72a68:	ldr	r2, [fp, #-196]	; 0xffffff3c
   72a6c:	movw	r1, #32
   72a70:	and	r1, r1, #255	; 0xff
   72a74:	bl	12900 <memset@plt>
   72a78:	ldr	r0, [fp, #-196]	; 0xffffff3c
   72a7c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   72a80:	add	r0, r1, r0
   72a84:	str	r0, [fp, #-68]	; 0xffffffbc
   72a88:	b	72a8c <__assert_fail@plt+0x5fed4>
   72a8c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   72a90:	ldr	r1, [fp, #-36]	; 0xffffffdc
   72a94:	ldr	r2, [fp, #-64]	; 0xffffffc0
   72a98:	sub	r1, r1, r2
   72a9c:	ldr	r2, [fp, #-104]	; 0xffffff98
   72aa0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   72aa4:	ldrb	ip, [fp, #-124]	; 0xffffff84
   72aa8:	ldr	lr, [fp, #-76]	; 0xffffffb4
   72aac:	ldr	r4, [fp, #-140]	; 0xffffff74
   72ab0:	ldr	r5, [fp, #20]
   72ab4:	ldr	r6, [fp, #24]
   72ab8:	ldr	r7, [fp, #28]
   72abc:	and	ip, ip, #1
   72ac0:	str	ip, [sp]
   72ac4:	str	lr, [sp, #4]
   72ac8:	str	r4, [sp, #8]
   72acc:	str	r5, [sp, #12]
   72ad0:	str	r6, [sp, #16]
   72ad4:	str	r7, [sp, #20]
   72ad8:	bl	71414 <__assert_fail@plt+0x5e85c>
   72adc:	ldr	r1, [fp, #-184]	; 0xffffff48
   72ae0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   72ae4:	add	r1, r2, r1
   72ae8:	str	r1, [fp, #-68]	; 0xffffffbc
   72aec:	ldr	r0, [fp, #-192]	; 0xffffff40
   72af0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   72af4:	add	r0, r1, r0
   72af8:	str	r0, [fp, #-64]	; 0xffffffc0
   72afc:	b	74bc0 <__assert_fail@plt+0x62008>
   72b00:			; <UNDEFINED> instruction: 0xffffe667
   72b04:	sub	r0, fp, #201	; 0xc9
   72b08:	str	r0, [fp, #-208]	; 0xffffff30
   72b0c:	ldr	r0, [fp, #-208]	; 0xffffff30
   72b10:	add	r1, r0, #1
   72b14:	str	r1, [fp, #-208]	; 0xffffff30
   72b18:	movw	r1, #32
   72b1c:	strb	r1, [r0]
   72b20:	ldr	r0, [fp, #-208]	; 0xffffff30
   72b24:	add	r1, r0, #1
   72b28:	str	r1, [fp, #-208]	; 0xffffff30
   72b2c:	movw	r1, #37	; 0x25
   72b30:	strb	r1, [r0]
   72b34:	ldr	r0, [fp, #-80]	; 0xffffffb0
   72b38:	cmp	r0, #0
   72b3c:	beq	72b54 <__assert_fail@plt+0x5ff9c>
   72b40:	ldr	r0, [fp, #-80]	; 0xffffffb0
   72b44:	ldr	r1, [fp, #-208]	; 0xffffff30
   72b48:	add	r2, r1, #1
   72b4c:	str	r2, [fp, #-208]	; 0xffffff30
   72b50:	strb	r0, [r1]
   72b54:	sub	r2, fp, #201	; 0xc9
   72b58:	add	r0, sp, #552	; 0x228
   72b5c:	ldr	r1, [fp, #-136]	; 0xffffff78
   72b60:	ldr	r3, [fp, #-208]	; 0xffffff30
   72b64:	add	ip, r3, #1
   72b68:	str	ip, [fp, #-208]	; 0xffffff30
   72b6c:	strb	r1, [r3]
   72b70:	ldr	r1, [fp, #-208]	; 0xffffff30
   72b74:	movw	r3, #0
   72b78:	strb	r3, [r1]
   72b7c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   72b80:	movw	r1, #1024	; 0x400
   72b84:	bl	127f8 <strftime@plt>
   72b88:	str	r0, [sp, #548]	; 0x224
   72b8c:	ldr	r0, [sp, #548]	; 0x224
   72b90:	cmp	r0, #0
   72b94:	beq	72d88 <__assert_fail@plt+0x601d0>
   72b98:	b	72b9c <__assert_fail@plt+0x5ffe4>
   72b9c:	ldr	r0, [sp, #548]	; 0x224
   72ba0:	sub	r0, r0, #1
   72ba4:	str	r0, [sp, #544]	; 0x220
   72ba8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   72bac:	cmp	r0, #45	; 0x2d
   72bb0:	beq	72bc0 <__assert_fail@plt+0x60008>
   72bb4:	ldr	r0, [fp, #16]
   72bb8:	cmp	r0, #0
   72bbc:	bge	72bcc <__assert_fail@plt+0x60014>
   72bc0:	movw	r0, #0
   72bc4:	str	r0, [sp, #200]	; 0xc8
   72bc8:	b	72bd4 <__assert_fail@plt+0x6001c>
   72bcc:	ldr	r0, [fp, #16]
   72bd0:	str	r0, [sp, #200]	; 0xc8
   72bd4:	ldr	r0, [sp, #200]	; 0xc8
   72bd8:	str	r0, [sp, #540]	; 0x21c
   72bdc:	ldr	r0, [sp, #544]	; 0x220
   72be0:	ldr	r1, [sp, #540]	; 0x21c
   72be4:	cmp	r0, r1
   72be8:	bcs	72bf8 <__assert_fail@plt+0x60040>
   72bec:	ldr	r0, [sp, #540]	; 0x21c
   72bf0:	str	r0, [sp, #196]	; 0xc4
   72bf4:	b	72c00 <__assert_fail@plt+0x60048>
   72bf8:	ldr	r0, [sp, #544]	; 0x220
   72bfc:	str	r0, [sp, #196]	; 0xc4
   72c00:	ldr	r0, [sp, #196]	; 0xc4
   72c04:	str	r0, [sp, #536]	; 0x218
   72c08:	ldr	r0, [sp, #536]	; 0x218
   72c0c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   72c10:	ldr	r2, [fp, #-64]	; 0xffffffc0
   72c14:	sub	r1, r1, r2
   72c18:	cmp	r0, r1
   72c1c:	bcc	72c40 <__assert_fail@plt+0x60088>
   72c20:	bl	128d0 <__errno_location@plt>
   72c24:	movw	r1, #34	; 0x22
   72c28:	str	r1, [r0]
   72c2c:	movw	r0, #0
   72c30:	str	r0, [fp, #-28]	; 0xffffffe4
   72c34:	b	74c20 <__assert_fail@plt+0x62068>
   72c38:	stcleq	12, cr12, [ip], {204}	; 0xcc
   72c3c:	vcge.u<illegal width 64>	d3, d3, d20
   72c40:	ldr	r0, [fp, #-68]	; 0xffffffbc
   72c44:	movw	r1, #0
   72c48:	cmp	r0, r1
   72c4c:	beq	72d74 <__assert_fail@plt+0x601bc>
   72c50:	ldr	r0, [sp, #544]	; 0x220
   72c54:	ldr	r1, [sp, #540]	; 0x21c
   72c58:	cmp	r0, r1
   72c5c:	bcs	72cdc <__assert_fail@plt+0x60124>
   72c60:	ldr	r0, [sp, #540]	; 0x21c
   72c64:	ldr	r1, [sp, #544]	; 0x220
   72c68:	sub	r0, r0, r1
   72c6c:	str	r0, [sp, #532]	; 0x214
   72c70:	ldr	r0, [fp, #-76]	; 0xffffffb4
   72c74:	cmp	r0, #48	; 0x30
   72c78:	beq	72c88 <__assert_fail@plt+0x600d0>
   72c7c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   72c80:	cmp	r0, #43	; 0x2b
   72c84:	bne	72cb4 <__assert_fail@plt+0x600fc>
   72c88:	ldr	r0, [fp, #-68]	; 0xffffffbc
   72c8c:	ldr	r2, [sp, #532]	; 0x214
   72c90:	movw	r1, #48	; 0x30
   72c94:	and	r1, r1, #255	; 0xff
   72c98:	bl	12900 <memset@plt>
   72c9c:	ldr	r0, [sp, #532]	; 0x214
   72ca0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   72ca4:	add	r0, r1, r0
   72ca8:	str	r0, [fp, #-68]	; 0xffffffbc
   72cac:	b	72cd8 <__assert_fail@plt+0x60120>
   72cb0:	svcvc	0x00ffffff
   72cb4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   72cb8:	ldr	r2, [sp, #532]	; 0x214
   72cbc:	movw	r1, #32
   72cc0:	and	r1, r1, #255	; 0xff
   72cc4:	bl	12900 <memset@plt>
   72cc8:	ldr	r0, [sp, #532]	; 0x214
   72ccc:	ldr	r1, [fp, #-68]	; 0xffffffbc
   72cd0:	add	r0, r1, r0
   72cd4:	str	r0, [fp, #-68]	; 0xffffffbc
   72cd8:	b	72cdc <__assert_fail@plt+0x60124>
   72cdc:	ldrb	r0, [fp, #-123]	; 0xffffff85
   72ce0:	tst	r0, #1
   72ce4:	beq	72d0c <__assert_fail@plt+0x60154>
   72ce8:	add	r0, sp, #552	; 0x228
   72cec:	ldr	r1, [fp, #-68]	; 0xffffffbc
   72cf0:	add	r0, r0, #1
   72cf4:	ldr	r2, [sp, #544]	; 0x220
   72cf8:	str	r0, [sp, #192]	; 0xc0
   72cfc:	mov	r0, r1
   72d00:	ldr	r1, [sp, #192]	; 0xc0
   72d04:	bl	74c30 <__assert_fail@plt+0x62078>
   72d08:	b	72d64 <__assert_fail@plt+0x601ac>
   72d0c:	ldrb	r0, [fp, #-124]	; 0xffffff84
   72d10:	tst	r0, #1
   72d14:	beq	72d40 <__assert_fail@plt+0x60188>
   72d18:	add	r0, sp, #552	; 0x228
   72d1c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   72d20:	add	r0, r0, #1
   72d24:	ldr	r2, [sp, #544]	; 0x220
   72d28:	str	r0, [sp, #188]	; 0xbc
   72d2c:	mov	r0, r1
   72d30:	ldr	r1, [sp, #188]	; 0xbc
   72d34:	bl	74c94 <__assert_fail@plt+0x620dc>
   72d38:	b	72d60 <__assert_fail@plt+0x601a8>
   72d3c:	andhi	r0, r0, r0
   72d40:	add	r0, sp, #552	; 0x228
   72d44:	ldr	r1, [fp, #-68]	; 0xffffffbc
   72d48:	add	r0, r0, #1
   72d4c:	ldr	r2, [sp, #544]	; 0x220
   72d50:	str	r0, [sp, #184]	; 0xb8
   72d54:	mov	r0, r1
   72d58:	ldr	r1, [sp, #184]	; 0xb8
   72d5c:	bl	125c4 <memcpy@plt>
   72d60:	b	72d64 <__assert_fail@plt+0x601ac>
   72d64:	ldr	r0, [sp, #544]	; 0x220
   72d68:	ldr	r1, [fp, #-68]	; 0xffffffbc
   72d6c:	add	r0, r1, r0
   72d70:	str	r0, [fp, #-68]	; 0xffffffbc
   72d74:	ldr	r0, [sp, #536]	; 0x218
   72d78:	ldr	r1, [fp, #-64]	; 0xffffffc0
   72d7c:	add	r0, r1, r0
   72d80:	str	r0, [fp, #-64]	; 0xffffffc0
   72d84:	b	72d88 <__assert_fail@plt+0x601d0>
   72d88:	b	74bc0 <__assert_fail@plt+0x62008>
   72d8c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   72d90:	cmp	r0, #69	; 0x45
   72d94:	bne	72da0 <__assert_fail@plt+0x601e8>
   72d98:	b	72b04 <__assert_fail@plt+0x5ff4c>
   72d9c:	ldmibne	r9, {r0, r3, r4, r7, r8, fp, ip, pc}
   72da0:	ldr	r0, [pc, #4040]	; 73d70 <__assert_fail@plt+0x611b8>
   72da4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   72da8:	ldr	r1, [r1, #20]
   72dac:	cmp	r1, r0
   72db0:	movw	r0, #0
   72db4:	movlt	r0, #1
   72db8:	and	r0, r0, #1
   72dbc:	strb	r0, [sp, #531]	; 0x213
   72dc0:	ldrb	r0, [sp, #531]	; 0x213
   72dc4:	mvn	r1, #0
   72dc8:	eor	r0, r0, r1
   72dcc:	and	r0, r0, #1
   72dd0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   72dd4:	ldr	r1, [r1, #20]
   72dd8:	cmp	r1, #0
   72ddc:	movw	r1, #0
   72de0:	movlt	r1, #1
   72de4:	and	r1, r1, #1
   72de8:	and	r0, r0, r1
   72dec:	cmp	r0, #0
   72df0:	movw	r0, #0
   72df4:	movne	r0, #1
   72df8:	and	r0, r0, #1
   72dfc:	strb	r0, [sp, #530]	; 0x212
   72e00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   72e04:	ldr	r0, [r0, #20]
   72e08:	ldrb	r1, [sp, #530]	; 0x212
   72e0c:	and	r1, r1, #1
   72e10:	movw	r2, #99	; 0x63
   72e14:	mul	r1, r1, r2
   72e18:	sub	r0, r0, r1
   72e1c:	movw	r1, #100	; 0x64
   72e20:	sdiv	r0, r0, r1
   72e24:	add	r0, r0, #19
   72e28:	str	r0, [sp, #524]	; 0x20c
   72e2c:	movw	r0, #2
   72e30:	str	r0, [fp, #-84]	; 0xffffffac
   72e34:	ldrb	r0, [sp, #531]	; 0x213
   72e38:	and	r0, r0, #1
   72e3c:	strb	r0, [fp, #-93]	; 0xffffffa3
   72e40:	ldr	r0, [sp, #524]	; 0x20c
   72e44:	str	r0, [fp, #-92]	; 0xffffffa4
   72e48:	b	72ee4 <__assert_fail@plt+0x6032c>
   72e4c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   72e50:	cmp	r0, #79	; 0x4f
   72e54:	bne	72e5c <__assert_fail@plt+0x602a4>
   72e58:	b	74a08 <__assert_fail@plt+0x61e50>
   72e5c:	b	72b04 <__assert_fail@plt+0x5ff4c>
   72e60:	ldr	r0, [fp, #-80]	; 0xffffffb0
   72e64:	cmp	r0, #0
   72e68:	beq	72e70 <__assert_fail@plt+0x602b8>
   72e6c:	b	74a08 <__assert_fail@plt+0x61e50>
   72e70:	movw	r0, #50336	; 0xc4a0
   72e74:	movt	r0, #7
   72e78:	str	r0, [fp, #-104]	; 0xffffff98
   72e7c:	b	728e8 <__assert_fail@plt+0x5fd30>
   72e80:	ldr	r0, [fp, #-80]	; 0xffffffb0
   72e84:	cmp	r0, #69	; 0x45
   72e88:	bne	72e90 <__assert_fail@plt+0x602d8>
   72e8c:	b	74a08 <__assert_fail@plt+0x61e50>
   72e90:	b	72e94 <__assert_fail@plt+0x602dc>
   72e94:	movw	r0, #2
   72e98:	str	r0, [fp, #-84]	; 0xffffffac
   72e9c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   72ea0:	ldr	r0, [r0, #12]
   72ea4:	str	r0, [fp, #-88]	; 0xffffffa8
   72ea8:	b	72f88 <__assert_fail@plt+0x603d0>
   72eac:	ldr	r0, [fp, #-80]	; 0xffffffb0
   72eb0:	cmp	r0, #69	; 0x45
   72eb4:	bne	72ebc <__assert_fail@plt+0x60304>
   72eb8:	b	74a08 <__assert_fail@plt+0x61e50>
   72ebc:	b	72ec0 <__assert_fail@plt+0x60308>
   72ec0:	movw	r0, #2
   72ec4:	str	r0, [fp, #-84]	; 0xffffffac
   72ec8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   72ecc:	ldr	r0, [r0, #12]
   72ed0:	str	r0, [fp, #-88]	; 0xffffffa8
   72ed4:	b	72f70 <__assert_fail@plt+0x603b8>
   72ed8:	movw	r0, #1
   72edc:	strb	r0, [fp, #-94]	; 0xffffffa2
   72ee0:	b	72fb8 <__assert_fail@plt+0x60400>
   72ee4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   72ee8:	cmp	r0, #0
   72eec:	bne	72ef8 <__assert_fail@plt+0x60340>
   72ef0:	ldr	r0, [fp, #12]
   72ef4:	str	r0, [fp, #-76]	; 0xffffffb4
   72ef8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   72efc:	cmp	r0, #43	; 0x2b
   72f00:	movw	r0, #0
   72f04:	str	r0, [sp, #180]	; 0xb4
   72f08:	bne	72f60 <__assert_fail@plt+0x603a8>
   72f0c:	ldr	r0, [fp, #-84]	; 0xffffffac
   72f10:	cmp	r0, #2
   72f14:	movw	r0, #0
   72f18:	moveq	r0, #1
   72f1c:	tst	r0, #1
   72f20:	movw	r0, #9999	; 0x270f
   72f24:	movw	r1, #99	; 0x63
   72f28:	movne	r0, r1
   72f2c:	ldr	r1, [fp, #-92]	; 0xffffffa4
   72f30:	cmp	r0, r1
   72f34:	movw	r0, #1
   72f38:	str	r0, [sp, #176]	; 0xb0
   72f3c:	bcc	72f58 <__assert_fail@plt+0x603a0>
   72f40:	ldr	r0, [fp, #-84]	; 0xffffffac
   72f44:	ldr	r1, [fp, #16]
   72f48:	cmp	r0, r1
   72f4c:	movw	r0, #0
   72f50:	movlt	r0, #1
   72f54:	str	r0, [sp, #176]	; 0xb0
   72f58:	ldr	r0, [sp, #176]	; 0xb0
   72f5c:	str	r0, [sp, #180]	; 0xb4
   72f60:	ldr	r0, [sp, #180]	; 0xb4
   72f64:	and	r0, r0, #1
   72f68:	strb	r0, [fp, #-94]	; 0xffffffa2
   72f6c:	b	72fb0 <__assert_fail@plt+0x603f8>
   72f70:	ldr	r0, [fp, #-76]	; 0xffffffb4
   72f74:	cmp	r0, #0
   72f78:	bne	72f84 <__assert_fail@plt+0x603cc>
   72f7c:	movw	r0, #95	; 0x5f
   72f80:	str	r0, [fp, #-76]	; 0xffffffb4
   72f84:	b	72f88 <__assert_fail@plt+0x603d0>
   72f88:	ldr	r0, [fp, #-88]	; 0xffffffa8
   72f8c:	cmp	r0, #0
   72f90:	movw	r0, #0
   72f94:	movlt	r0, #1
   72f98:	and	r0, r0, #1
   72f9c:	strb	r0, [fp, #-93]	; 0xffffffa3
   72fa0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   72fa4:	str	r0, [fp, #-92]	; 0xffffffa4
   72fa8:	movw	r0, #0
   72fac:	strb	r0, [fp, #-94]	; 0xffffffa2
   72fb0:	movw	r0, #0
   72fb4:	str	r0, [fp, #-100]	; 0xffffff9c
   72fb8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   72fbc:	cmp	r0, #79	; 0x4f
   72fc0:	bne	72fd4 <__assert_fail@plt+0x6041c>
   72fc4:	ldrb	r0, [fp, #-93]	; 0xffffffa3
   72fc8:	tst	r0, #1
   72fcc:	bne	72fd4 <__assert_fail@plt+0x6041c>
   72fd0:	b	72b04 <__assert_fail@plt+0x5ff4c>
   72fd4:	sub	r0, fp, #122	; 0x7a
   72fd8:	add	r0, r0, #14
   72fdc:	str	r0, [fp, #-108]	; 0xffffff94
   72fe0:	ldrb	r0, [fp, #-93]	; 0xffffffa3
   72fe4:	tst	r0, #1
   72fe8:	beq	72ffc <__assert_fail@plt+0x60444>
   72fec:	ldr	r0, [fp, #-92]	; 0xffffffa4
   72ff0:	movw	r1, #0
   72ff4:	sub	r0, r1, r0
   72ff8:	str	r0, [fp, #-92]	; 0xffffffa4
   72ffc:	b	73000 <__assert_fail@plt+0x60448>
   73000:	ldr	r0, [fp, #-100]	; 0xffffff9c
   73004:	and	r0, r0, #1
   73008:	cmp	r0, #0
   7300c:	beq	7302c <__assert_fail@plt+0x60474>
   73010:	ldr	r0, [fp, #-108]	; 0xffffff94
   73014:	mvn	r1, #0
   73018:	add	r2, r0, r1
   7301c:	str	r2, [fp, #-108]	; 0xffffff94
   73020:	add	r0, r0, r1
   73024:	movw	r1, #58	; 0x3a
   73028:	strb	r1, [r0]
   7302c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   73030:	asr	r0, r0, #1
   73034:	str	r0, [fp, #-100]	; 0xffffff9c
   73038:	ldr	r0, [fp, #-92]	; 0xffffffa4
   7303c:	movw	r1, #52429	; 0xcccd
   73040:	movt	r1, #52428	; 0xcccc
   73044:	umull	r1, r2, r0, r1
   73048:	lsr	r2, r2, #3
   7304c:	add	r2, r2, r2, lsl #2
   73050:	sub	r0, r0, r2, lsl #1
   73054:	add	r0, r0, #48	; 0x30
   73058:	ldr	r2, [fp, #-108]	; 0xffffff94
   7305c:	mvn	r3, #0
   73060:	add	ip, r2, r3
   73064:	str	ip, [fp, #-108]	; 0xffffff94
   73068:	add	r2, r2, r3
   7306c:	strb	r0, [r2]
   73070:	ldr	r0, [fp, #-92]	; 0xffffffa4
   73074:	movw	r2, #10
   73078:	udiv	r0, r0, r2
   7307c:	str	r0, [fp, #-92]	; 0xffffffa4
   73080:	ldr	r0, [fp, #-92]	; 0xffffffa4
   73084:	cmp	r0, #0
   73088:	movw	r0, #1
   7308c:	str	r0, [sp, #172]	; 0xac
   73090:	bne	730a8 <__assert_fail@plt+0x604f0>
   73094:	ldr	r0, [fp, #-100]	; 0xffffff9c
   73098:	cmp	r0, #0
   7309c:	movw	r0, #0
   730a0:	movne	r0, #1
   730a4:	str	r0, [sp, #172]	; 0xac
   730a8:	ldr	r0, [sp, #172]	; 0xac
   730ac:	tst	r0, #1
   730b0:	bne	73000 <__assert_fail@plt+0x60448>
   730b4:	b	730b8 <__assert_fail@plt+0x60500>
   730b8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   730bc:	cmp	r0, #0
   730c0:	bne	730cc <__assert_fail@plt+0x60514>
   730c4:	movw	r0, #48	; 0x30
   730c8:	str	r0, [fp, #-76]	; 0xffffffb4
   730cc:	ldr	r0, [fp, #16]
   730d0:	cmp	r0, #0
   730d4:	bge	730e0 <__assert_fail@plt+0x60528>
   730d8:	ldr	r0, [fp, #-84]	; 0xffffffac
   730dc:	str	r0, [fp, #16]
   730e0:	ldrb	r0, [fp, #-93]	; 0xffffffa3
   730e4:	tst	r0, #1
   730e8:	beq	730f8 <__assert_fail@plt+0x60540>
   730ec:	movw	r0, #45	; 0x2d
   730f0:	str	r0, [sp, #168]	; 0xa8
   730f4:	b	7310c <__assert_fail@plt+0x60554>
   730f8:	ldrb	r0, [fp, #-94]	; 0xffffffa2
   730fc:	tst	r0, #1
   73100:	movw	r0, #43	; 0x2b
   73104:	moveq	r0, #0
   73108:	str	r0, [sp, #168]	; 0xa8
   7310c:	ldr	r0, [sp, #168]	; 0xa8
   73110:	sub	r1, fp, #122	; 0x7a
   73114:	strb	r0, [sp, #523]	; 0x20b
   73118:	add	r0, r1, #14
   7311c:	ldr	r1, [fp, #-108]	; 0xffffff94
   73120:	sub	r0, r0, r1
   73124:	str	r0, [sp, #516]	; 0x204
   73128:	ldr	r0, [fp, #16]
   7312c:	add	lr, sp, #512	; 0x200
   73130:	ldrsb	r1, [lr, #11]
   73134:	cmp	r1, #0
   73138:	movw	r1, #0
   7313c:	movne	r1, #1
   73140:	mvn	r2, #0
   73144:	eor	r1, r1, r2
   73148:	eor	r1, r1, r2
   7314c:	and	r1, r1, #1
   73150:	sub	r0, r0, r1
   73154:	ldr	r1, [sp, #516]	; 0x204
   73158:	sub	r0, r0, r1
   7315c:	str	r0, [sp, #512]	; 0x200
   73160:	ldr	r0, [fp, #-76]	; 0xffffffb4
   73164:	cmp	r0, #45	; 0x2d
   73168:	beq	73178 <__assert_fail@plt+0x605c0>
   7316c:	ldr	r0, [sp, #512]	; 0x200
   73170:	cmp	r0, #0
   73174:	bgt	73184 <__assert_fail@plt+0x605cc>
   73178:	movw	r0, #0
   7317c:	str	r0, [sp, #164]	; 0xa4
   73180:	b	7318c <__assert_fail@plt+0x605d4>
   73184:	ldr	r0, [sp, #512]	; 0x200
   73188:	str	r0, [sp, #164]	; 0xa4
   7318c:	ldr	r0, [sp, #164]	; 0xa4
   73190:	str	r0, [sp, #508]	; 0x1fc
   73194:	add	lr, sp, #512	; 0x200
   73198:	ldrsb	r0, [lr, #11]
   7319c:	cmp	r0, #0
   731a0:	beq	73374 <__assert_fail@plt+0x607bc>
   731a4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   731a8:	cmp	r0, #95	; 0x5f
   731ac:	bne	73204 <__assert_fail@plt+0x6064c>
   731b0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   731b4:	movw	r1, #0
   731b8:	cmp	r0, r1
   731bc:	beq	731e4 <__assert_fail@plt+0x6062c>
   731c0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   731c4:	ldr	r2, [sp, #508]	; 0x1fc
   731c8:	movw	r1, #32
   731cc:	and	r1, r1, #255	; 0xff
   731d0:	bl	12900 <memset@plt>
   731d4:	ldr	r0, [sp, #508]	; 0x1fc
   731d8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   731dc:	add	r0, r1, r0
   731e0:	str	r0, [fp, #-68]	; 0xffffffbc
   731e4:	ldr	r0, [sp, #508]	; 0x1fc
   731e8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   731ec:	add	r0, r1, r0
   731f0:	str	r0, [fp, #-64]	; 0xffffffc0
   731f4:	ldr	r0, [sp, #508]	; 0x1fc
   731f8:	ldr	r1, [fp, #16]
   731fc:	sub	r0, r1, r0
   73200:	str	r0, [fp, #16]
   73204:	b	73208 <__assert_fail@plt+0x60650>
   73208:	movw	r0, #1
   7320c:	str	r0, [sp, #504]	; 0x1f8
   73210:	ldr	r0, [fp, #-76]	; 0xffffffb4
   73214:	cmp	r0, #45	; 0x2d
   73218:	movw	r0, #1
   7321c:	str	r0, [sp, #160]	; 0xa0
   73220:	beq	73230 <__assert_fail@plt+0x60678>
   73224:	movw	r0, #0
   73228:	str	r0, [sp, #160]	; 0xa0
   7322c:	b	73230 <__assert_fail@plt+0x60678>
   73230:	ldr	r0, [sp, #160]	; 0xa0
   73234:	tst	r0, #1
   73238:	movw	r0, #0
   7323c:	moveq	r0, #0
   73240:	str	r0, [sp, #500]	; 0x1f4
   73244:	ldr	r0, [sp, #504]	; 0x1f8
   73248:	ldr	r1, [sp, #500]	; 0x1f4
   7324c:	cmp	r0, r1
   73250:	bcs	73260 <__assert_fail@plt+0x606a8>
   73254:	ldr	r0, [sp, #500]	; 0x1f4
   73258:	str	r0, [sp, #156]	; 0x9c
   7325c:	b	73268 <__assert_fail@plt+0x606b0>
   73260:	ldr	r0, [sp, #504]	; 0x1f8
   73264:	str	r0, [sp, #156]	; 0x9c
   73268:	ldr	r0, [sp, #156]	; 0x9c
   7326c:	str	r0, [sp, #496]	; 0x1f0
   73270:	ldr	r0, [sp, #496]	; 0x1f0
   73274:	ldr	r1, [fp, #-36]	; 0xffffffdc
   73278:	ldr	r2, [fp, #-64]	; 0xffffffc0
   7327c:	sub	r1, r1, r2
   73280:	cmp	r0, r1
   73284:	bcc	732a0 <__assert_fail@plt+0x606e8>
   73288:	bl	128d0 <__errno_location@plt>
   7328c:	movw	r1, #34	; 0x22
   73290:	str	r1, [r0]
   73294:	movw	r0, #0
   73298:	str	r0, [fp, #-28]	; 0xffffffe4
   7329c:	b	74c20 <__assert_fail@plt+0x62068>
   732a0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   732a4:	movw	r1, #0
   732a8:	cmp	r0, r1
   732ac:	beq	73354 <__assert_fail@plt+0x6079c>
   732b0:	ldr	r0, [sp, #504]	; 0x1f8
   732b4:	ldr	r1, [sp, #500]	; 0x1f4
   732b8:	cmp	r0, r1
   732bc:	bcs	73338 <__assert_fail@plt+0x60780>
   732c0:	ldr	r0, [sp, #500]	; 0x1f4
   732c4:	ldr	r1, [sp, #504]	; 0x1f8
   732c8:	sub	r0, r0, r1
   732cc:	str	r0, [sp, #492]	; 0x1ec
   732d0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   732d4:	cmp	r0, #48	; 0x30
   732d8:	beq	732e8 <__assert_fail@plt+0x60730>
   732dc:	ldr	r0, [fp, #-76]	; 0xffffffb4
   732e0:	cmp	r0, #43	; 0x2b
   732e4:	bne	73310 <__assert_fail@plt+0x60758>
   732e8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   732ec:	ldr	r2, [sp, #492]	; 0x1ec
   732f0:	movw	r1, #48	; 0x30
   732f4:	and	r1, r1, #255	; 0xff
   732f8:	bl	12900 <memset@plt>
   732fc:	ldr	r0, [sp, #492]	; 0x1ec
   73300:	ldr	r1, [fp, #-68]	; 0xffffffbc
   73304:	add	r0, r1, r0
   73308:	str	r0, [fp, #-68]	; 0xffffffbc
   7330c:	b	73334 <__assert_fail@plt+0x6077c>
   73310:	ldr	r0, [fp, #-68]	; 0xffffffbc
   73314:	ldr	r2, [sp, #492]	; 0x1ec
   73318:	movw	r1, #32
   7331c:	and	r1, r1, #255	; 0xff
   73320:	bl	12900 <memset@plt>
   73324:	ldr	r0, [sp, #492]	; 0x1ec
   73328:	ldr	r1, [fp, #-68]	; 0xffffffbc
   7332c:	add	r0, r1, r0
   73330:	str	r0, [fp, #-68]	; 0xffffffbc
   73334:	b	73338 <__assert_fail@plt+0x60780>
   73338:	ldrb	r0, [sp, #523]	; 0x20b
   7333c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   73340:	strb	r0, [r1]
   73344:	ldr	r0, [sp, #504]	; 0x1f8
   73348:	ldr	r1, [fp, #-68]	; 0xffffffbc
   7334c:	add	r0, r1, r0
   73350:	str	r0, [fp, #-68]	; 0xffffffbc
   73354:	ldr	r0, [sp, #496]	; 0x1f0
   73358:	ldr	r1, [fp, #-64]	; 0xffffffc0
   7335c:	add	r0, r1, r0
   73360:	str	r0, [fp, #-64]	; 0xffffffc0
   73364:	ldr	r0, [fp, #16]
   73368:	mvn	r1, #0
   7336c:	add	r0, r0, r1
   73370:	str	r0, [fp, #16]
   73374:	b	73378 <__assert_fail@plt+0x607c0>
   73378:	ldr	r0, [sp, #516]	; 0x204
   7337c:	str	r0, [sp, #488]	; 0x1e8
   73380:	ldr	r0, [fp, #-76]	; 0xffffffb4
   73384:	cmp	r0, #45	; 0x2d
   73388:	beq	73398 <__assert_fail@plt+0x607e0>
   7338c:	ldr	r0, [fp, #16]
   73390:	cmp	r0, #0
   73394:	bge	733a4 <__assert_fail@plt+0x607ec>
   73398:	movw	r0, #0
   7339c:	str	r0, [sp, #152]	; 0x98
   733a0:	b	733ac <__assert_fail@plt+0x607f4>
   733a4:	ldr	r0, [fp, #16]
   733a8:	str	r0, [sp, #152]	; 0x98
   733ac:	ldr	r0, [sp, #152]	; 0x98
   733b0:	str	r0, [sp, #484]	; 0x1e4
   733b4:	ldr	r0, [sp, #488]	; 0x1e8
   733b8:	ldr	r1, [sp, #484]	; 0x1e4
   733bc:	cmp	r0, r1
   733c0:	bcs	733d0 <__assert_fail@plt+0x60818>
   733c4:	ldr	r0, [sp, #484]	; 0x1e4
   733c8:	str	r0, [sp, #148]	; 0x94
   733cc:	b	733d8 <__assert_fail@plt+0x60820>
   733d0:	ldr	r0, [sp, #488]	; 0x1e8
   733d4:	str	r0, [sp, #148]	; 0x94
   733d8:	ldr	r0, [sp, #148]	; 0x94
   733dc:	str	r0, [sp, #480]	; 0x1e0
   733e0:	ldr	r0, [sp, #480]	; 0x1e0
   733e4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   733e8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   733ec:	sub	r1, r1, r2
   733f0:	cmp	r0, r1
   733f4:	bcc	73410 <__assert_fail@plt+0x60858>
   733f8:	bl	128d0 <__errno_location@plt>
   733fc:	movw	r1, #34	; 0x22
   73400:	str	r1, [r0]
   73404:	movw	r0, #0
   73408:	str	r0, [fp, #-28]	; 0xffffffe4
   7340c:	b	74c20 <__assert_fail@plt+0x62068>
   73410:	ldr	r0, [fp, #-68]	; 0xffffffbc
   73414:	movw	r1, #0
   73418:	cmp	r0, r1
   7341c:	beq	7350c <__assert_fail@plt+0x60954>
   73420:	ldr	r0, [sp, #488]	; 0x1e8
   73424:	ldr	r1, [sp, #484]	; 0x1e4
   73428:	cmp	r0, r1
   7342c:	bcs	734a8 <__assert_fail@plt+0x608f0>
   73430:	ldr	r0, [sp, #484]	; 0x1e4
   73434:	ldr	r1, [sp, #488]	; 0x1e8
   73438:	sub	r0, r0, r1
   7343c:	str	r0, [sp, #476]	; 0x1dc
   73440:	ldr	r0, [fp, #-76]	; 0xffffffb4
   73444:	cmp	r0, #48	; 0x30
   73448:	beq	73458 <__assert_fail@plt+0x608a0>
   7344c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   73450:	cmp	r0, #43	; 0x2b
   73454:	bne	73480 <__assert_fail@plt+0x608c8>
   73458:	ldr	r0, [fp, #-68]	; 0xffffffbc
   7345c:	ldr	r2, [sp, #476]	; 0x1dc
   73460:	movw	r1, #48	; 0x30
   73464:	and	r1, r1, #255	; 0xff
   73468:	bl	12900 <memset@plt>
   7346c:	ldr	r0, [sp, #476]	; 0x1dc
   73470:	ldr	r1, [fp, #-68]	; 0xffffffbc
   73474:	add	r0, r1, r0
   73478:	str	r0, [fp, #-68]	; 0xffffffbc
   7347c:	b	734a4 <__assert_fail@plt+0x608ec>
   73480:	ldr	r0, [fp, #-68]	; 0xffffffbc
   73484:	ldr	r2, [sp, #476]	; 0x1dc
   73488:	movw	r1, #32
   7348c:	and	r1, r1, #255	; 0xff
   73490:	bl	12900 <memset@plt>
   73494:	ldr	r0, [sp, #476]	; 0x1dc
   73498:	ldr	r1, [fp, #-68]	; 0xffffffbc
   7349c:	add	r0, r1, r0
   734a0:	str	r0, [fp, #-68]	; 0xffffffbc
   734a4:	b	734a8 <__assert_fail@plt+0x608f0>
   734a8:	ldrb	r0, [fp, #-123]	; 0xffffff85
   734ac:	tst	r0, #1
   734b0:	beq	734c8 <__assert_fail@plt+0x60910>
   734b4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   734b8:	ldr	r1, [fp, #-108]	; 0xffffff94
   734bc:	ldr	r2, [sp, #488]	; 0x1e8
   734c0:	bl	74c30 <__assert_fail@plt+0x62078>
   734c4:	b	734fc <__assert_fail@plt+0x60944>
   734c8:	ldrb	r0, [fp, #-124]	; 0xffffff84
   734cc:	tst	r0, #1
   734d0:	beq	734e8 <__assert_fail@plt+0x60930>
   734d4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   734d8:	ldr	r1, [fp, #-108]	; 0xffffff94
   734dc:	ldr	r2, [sp, #488]	; 0x1e8
   734e0:	bl	74c94 <__assert_fail@plt+0x620dc>
   734e4:	b	734f8 <__assert_fail@plt+0x60940>
   734e8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   734ec:	ldr	r1, [fp, #-108]	; 0xffffff94
   734f0:	ldr	r2, [sp, #488]	; 0x1e8
   734f4:	bl	125c4 <memcpy@plt>
   734f8:	b	734fc <__assert_fail@plt+0x60944>
   734fc:	ldr	r0, [sp, #488]	; 0x1e8
   73500:	ldr	r1, [fp, #-68]	; 0xffffffbc
   73504:	add	r0, r1, r0
   73508:	str	r0, [fp, #-68]	; 0xffffffbc
   7350c:	ldr	r0, [sp, #480]	; 0x1e0
   73510:	ldr	r1, [fp, #-64]	; 0xffffffc0
   73514:	add	r0, r1, r0
   73518:	str	r0, [fp, #-64]	; 0xffffffc0
   7351c:	b	74bc0 <__assert_fail@plt+0x62008>
   73520:	ldr	r0, [fp, #-80]	; 0xffffffb0
   73524:	cmp	r0, #0
   73528:	beq	73530 <__assert_fail@plt+0x60978>
   7352c:	b	74a08 <__assert_fail@plt+0x61e50>
   73530:	ldr	r0, [fp, #-76]	; 0xffffffb4
   73534:	cmp	r0, #0
   73538:	bne	7355c <__assert_fail@plt+0x609a4>
   7353c:	ldr	r0, [fp, #16]
   73540:	cmp	r0, #0
   73544:	bge	7355c <__assert_fail@plt+0x609a4>
   73548:	movw	r0, #43	; 0x2b
   7354c:	str	r0, [fp, #-76]	; 0xffffffb4
   73550:	movw	r0, #4
   73554:	str	r0, [fp, #-140]	; 0xffffff74
   73558:	b	73580 <__assert_fail@plt+0x609c8>
   7355c:	ldr	r0, [fp, #16]
   73560:	sub	r0, r0, #6
   73564:	str	r0, [fp, #-140]	; 0xffffff74
   73568:	ldr	r0, [fp, #-140]	; 0xffffff74
   7356c:	cmp	r0, #0
   73570:	bge	7357c <__assert_fail@plt+0x609c4>
   73574:	movw	r0, #0
   73578:	str	r0, [fp, #-140]	; 0xffffff74
   7357c:	b	73580 <__assert_fail@plt+0x609c8>
   73580:	movw	r0, #50345	; 0xc4a9
   73584:	movt	r0, #7
   73588:	str	r0, [fp, #-104]	; 0xffffff98
   7358c:	b	728f0 <__assert_fail@plt+0x5fd38>
   73590:	ldr	r0, [fp, #-80]	; 0xffffffb0
   73594:	cmp	r0, #69	; 0x45
   73598:	bne	735a0 <__assert_fail@plt+0x609e8>
   7359c:	b	74a08 <__assert_fail@plt+0x61e50>
   735a0:	b	735a4 <__assert_fail@plt+0x609ec>
   735a4:	movw	r0, #2
   735a8:	str	r0, [fp, #-84]	; 0xffffffac
   735ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   735b0:	ldr	r0, [r0, #8]
   735b4:	str	r0, [fp, #-88]	; 0xffffffa8
   735b8:	b	72f88 <__assert_fail@plt+0x603d0>
   735bc:	ldr	r0, [fp, #-80]	; 0xffffffb0
   735c0:	cmp	r0, #69	; 0x45
   735c4:	bne	735cc <__assert_fail@plt+0x60a14>
   735c8:	b	74a08 <__assert_fail@plt+0x61e50>
   735cc:	b	735d0 <__assert_fail@plt+0x60a18>
   735d0:	movw	r0, #2
   735d4:	str	r0, [fp, #-84]	; 0xffffffac
   735d8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   735dc:	str	r0, [fp, #-88]	; 0xffffffa8
   735e0:	b	72f88 <__assert_fail@plt+0x603d0>
   735e4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   735e8:	cmp	r0, #69	; 0x45
   735ec:	bne	735f4 <__assert_fail@plt+0x60a3c>
   735f0:	b	74a08 <__assert_fail@plt+0x61e50>
   735f4:	b	735f8 <__assert_fail@plt+0x60a40>
   735f8:	movw	r0, #2
   735fc:	str	r0, [fp, #-84]	; 0xffffffac
   73600:	ldr	r0, [fp, #-44]	; 0xffffffd4
   73604:	ldr	r0, [r0, #8]
   73608:	str	r0, [fp, #-88]	; 0xffffffa8
   7360c:	b	72f70 <__assert_fail@plt+0x603b8>
   73610:	ldr	r0, [fp, #-80]	; 0xffffffb0
   73614:	cmp	r0, #69	; 0x45
   73618:	bne	73620 <__assert_fail@plt+0x60a68>
   7361c:	b	74a08 <__assert_fail@plt+0x61e50>
   73620:	b	73624 <__assert_fail@plt+0x60a6c>
   73624:	movw	r0, #2
   73628:	str	r0, [fp, #-84]	; 0xffffffac
   7362c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   73630:	str	r0, [fp, #-88]	; 0xffffffa8
   73634:	b	72f70 <__assert_fail@plt+0x603b8>
   73638:	ldr	r0, [fp, #-80]	; 0xffffffb0
   7363c:	cmp	r0, #69	; 0x45
   73640:	bne	73648 <__assert_fail@plt+0x60a90>
   73644:	b	74a08 <__assert_fail@plt+0x61e50>
   73648:	b	7364c <__assert_fail@plt+0x60a94>
   7364c:	movw	r0, #3
   73650:	str	r0, [fp, #-84]	; 0xffffffac
   73654:	ldr	r0, [fp, #-44]	; 0xffffffd4
   73658:	ldr	r0, [r0, #28]
   7365c:	cmn	r0, #1
   73660:	movw	r0, #0
   73664:	movlt	r0, #1
   73668:	and	r0, r0, #1
   7366c:	strb	r0, [fp, #-93]	; 0xffffffa3
   73670:	ldr	r0, [fp, #-44]	; 0xffffffd4
   73674:	ldr	r0, [r0, #28]
   73678:	add	r0, r0, #1
   7367c:	str	r0, [fp, #-92]	; 0xffffffa4
   73680:	b	72fa8 <__assert_fail@plt+0x603f0>
   73684:	ldr	r0, [fp, #-80]	; 0xffffffb0
   73688:	cmp	r0, #69	; 0x45
   7368c:	bne	73694 <__assert_fail@plt+0x60adc>
   73690:	b	74a08 <__assert_fail@plt+0x61e50>
   73694:	b	73698 <__assert_fail@plt+0x60ae0>
   73698:	movw	r0, #2
   7369c:	str	r0, [fp, #-84]	; 0xffffffac
   736a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   736a4:	ldr	r0, [r0, #4]
   736a8:	str	r0, [fp, #-88]	; 0xffffffa8
   736ac:	b	72f88 <__assert_fail@plt+0x603d0>
   736b0:	ldr	r0, [fp, #-80]	; 0xffffffb0
   736b4:	cmp	r0, #69	; 0x45
   736b8:	bne	736c0 <__assert_fail@plt+0x60b08>
   736bc:	b	74a08 <__assert_fail@plt+0x61e50>
   736c0:	b	736c4 <__assert_fail@plt+0x60b0c>
   736c4:	movw	r0, #2
   736c8:	str	r0, [fp, #-84]	; 0xffffffac
   736cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   736d0:	ldr	r0, [r0, #16]
   736d4:	cmn	r0, #1
   736d8:	movw	r0, #0
   736dc:	movlt	r0, #1
   736e0:	and	r0, r0, #1
   736e4:	strb	r0, [fp, #-93]	; 0xffffffa3
   736e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   736ec:	ldr	r0, [r0, #16]
   736f0:	add	r0, r0, #1
   736f4:	str	r0, [fp, #-92]	; 0xffffffa4
   736f8:	b	72fa8 <__assert_fail@plt+0x603f0>
   736fc:	ldr	r0, [fp, #-80]	; 0xffffffb0
   73700:	cmp	r0, #69	; 0x45
   73704:	bne	7370c <__assert_fail@plt+0x60b54>
   73708:	b	74a08 <__assert_fail@plt+0x61e50>
   7370c:	ldr	r0, [fp, #28]
   73710:	str	r0, [sp, #472]	; 0x1d8
   73714:	movw	r0, #9
   73718:	str	r0, [sp, #468]	; 0x1d4
   7371c:	ldr	r0, [fp, #16]
   73720:	cmp	r0, #0
   73724:	bgt	73730 <__assert_fail@plt+0x60b78>
   73728:	ldr	r0, [sp, #468]	; 0x1d4
   7372c:	str	r0, [fp, #16]
   73730:	ldr	r0, [sp, #468]	; 0x1d4
   73734:	str	r0, [sp, #464]	; 0x1d0
   73738:	ldr	r0, [fp, #16]
   7373c:	ldr	r1, [sp, #464]	; 0x1d0
   73740:	cmp	r0, r1
   73744:	movw	r0, #1
   73748:	str	r0, [sp, #144]	; 0x90
   7374c:	blt	737a0 <__assert_fail@plt+0x60be8>
   73750:	ldr	r0, [sp, #464]	; 0x1d0
   73754:	movw	r1, #1
   73758:	cmp	r1, r0
   7375c:	movw	r0, #0
   73760:	str	r0, [sp, #140]	; 0x8c
   73764:	bge	73798 <__assert_fail@plt+0x60be0>
   73768:	ldr	r0, [sp, #472]	; 0x1d8
   7376c:	movw	r1, #26215	; 0x6667
   73770:	movt	r1, #26214	; 0x6666
   73774:	smmul	r1, r0, r1
   73778:	asr	r2, r1, #2
   7377c:	add	r1, r2, r1, lsr #31
   73780:	add	r1, r1, r1, lsl #2
   73784:	sub	r0, r0, r1, lsl #1
   73788:	cmp	r0, #0
   7378c:	movw	r0, #0
   73790:	moveq	r0, #1
   73794:	str	r0, [sp, #140]	; 0x8c
   73798:	ldr	r0, [sp, #140]	; 0x8c
   7379c:	str	r0, [sp, #144]	; 0x90
   737a0:	ldr	r0, [sp, #144]	; 0x90
   737a4:	tst	r0, #1
   737a8:	beq	737d0 <__assert_fail@plt+0x60c18>
   737ac:	ldr	r0, [sp, #464]	; 0x1d0
   737b0:	mvn	r1, #0
   737b4:	add	r0, r0, r1
   737b8:	str	r0, [sp, #464]	; 0x1d0
   737bc:	ldr	r0, [sp, #472]	; 0x1d8
   737c0:	movw	r1, #10
   737c4:	sdiv	r0, r0, r1
   737c8:	str	r0, [sp, #472]	; 0x1d8
   737cc:	b	73738 <__assert_fail@plt+0x60b80>
   737d0:	ldr	r0, [sp, #464]	; 0x1d0
   737d4:	str	r0, [sp, #460]	; 0x1cc
   737d8:	ldr	r0, [sp, #460]	; 0x1cc
   737dc:	movw	r1, #0
   737e0:	cmp	r1, r0
   737e4:	bge	73844 <__assert_fail@plt+0x60c8c>
   737e8:	ldr	r0, [sp, #472]	; 0x1d8
   737ec:	movw	r1, #26215	; 0x6667
   737f0:	movt	r1, #26214	; 0x6666
   737f4:	smmul	r1, r0, r1
   737f8:	asr	r2, r1, #2
   737fc:	add	r1, r2, r1, lsr #31
   73800:	add	r1, r1, r1, lsl #2
   73804:	sub	r0, r0, r1, lsl #1
   73808:	add	r0, r0, #48	; 0x30
   7380c:	ldr	r1, [sp, #460]	; 0x1cc
   73810:	sub	r1, r1, #1
   73814:	sub	r2, fp, #122	; 0x7a
   73818:	add	r1, r2, r1
   7381c:	strb	r0, [r1]
   73820:	ldr	r0, [sp, #472]	; 0x1d8
   73824:	movw	r1, #10
   73828:	sdiv	r0, r0, r1
   7382c:	str	r0, [sp, #472]	; 0x1d8
   73830:	ldr	r0, [sp, #460]	; 0x1cc
   73834:	mvn	r1, #0
   73838:	add	r0, r0, r1
   7383c:	str	r0, [sp, #460]	; 0x1cc
   73840:	b	737d8 <__assert_fail@plt+0x60c20>
   73844:	ldr	r0, [fp, #-76]	; 0xffffffb4
   73848:	cmp	r0, #0
   7384c:	bne	73858 <__assert_fail@plt+0x60ca0>
   73850:	movw	r0, #48	; 0x30
   73854:	str	r0, [fp, #-76]	; 0xffffffb4
   73858:	b	7385c <__assert_fail@plt+0x60ca4>
   7385c:	ldr	r0, [sp, #464]	; 0x1d0
   73860:	str	r0, [sp, #456]	; 0x1c8
   73864:	ldr	r0, [fp, #-76]	; 0xffffffb4
   73868:	cmp	r0, #45	; 0x2d
   7386c:	movw	r0, #1
   73870:	str	r0, [sp, #136]	; 0x88
   73874:	beq	73884 <__assert_fail@plt+0x60ccc>
   73878:	movw	r0, #0
   7387c:	str	r0, [sp, #136]	; 0x88
   73880:	b	73884 <__assert_fail@plt+0x60ccc>
   73884:	ldr	r0, [sp, #136]	; 0x88
   73888:	tst	r0, #1
   7388c:	movw	r0, #0
   73890:	moveq	r0, #0
   73894:	str	r0, [sp, #452]	; 0x1c4
   73898:	ldr	r0, [sp, #456]	; 0x1c8
   7389c:	ldr	r1, [sp, #452]	; 0x1c4
   738a0:	cmp	r0, r1
   738a4:	bcs	738b4 <__assert_fail@plt+0x60cfc>
   738a8:	ldr	r0, [sp, #452]	; 0x1c4
   738ac:	str	r0, [sp, #132]	; 0x84
   738b0:	b	738bc <__assert_fail@plt+0x60d04>
   738b4:	ldr	r0, [sp, #456]	; 0x1c8
   738b8:	str	r0, [sp, #132]	; 0x84
   738bc:	ldr	r0, [sp, #132]	; 0x84
   738c0:	str	r0, [sp, #448]	; 0x1c0
   738c4:	ldr	r0, [sp, #448]	; 0x1c0
   738c8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   738cc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   738d0:	sub	r1, r1, r2
   738d4:	cmp	r0, r1
   738d8:	bcc	738f4 <__assert_fail@plt+0x60d3c>
   738dc:	bl	128d0 <__errno_location@plt>
   738e0:	movw	r1, #34	; 0x22
   738e4:	str	r1, [r0]
   738e8:	movw	r0, #0
   738ec:	str	r0, [fp, #-28]	; 0xffffffe4
   738f0:	b	74c20 <__assert_fail@plt+0x62068>
   738f4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   738f8:	movw	r1, #0
   738fc:	cmp	r0, r1
   73900:	beq	739f0 <__assert_fail@plt+0x60e38>
   73904:	ldr	r0, [sp, #456]	; 0x1c8
   73908:	ldr	r1, [sp, #452]	; 0x1c4
   7390c:	cmp	r0, r1
   73910:	bcs	7398c <__assert_fail@plt+0x60dd4>
   73914:	ldr	r0, [sp, #452]	; 0x1c4
   73918:	ldr	r1, [sp, #456]	; 0x1c8
   7391c:	sub	r0, r0, r1
   73920:	str	r0, [sp, #444]	; 0x1bc
   73924:	ldr	r0, [fp, #-76]	; 0xffffffb4
   73928:	cmp	r0, #48	; 0x30
   7392c:	beq	7393c <__assert_fail@plt+0x60d84>
   73930:	ldr	r0, [fp, #-76]	; 0xffffffb4
   73934:	cmp	r0, #43	; 0x2b
   73938:	bne	73964 <__assert_fail@plt+0x60dac>
   7393c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   73940:	ldr	r2, [sp, #444]	; 0x1bc
   73944:	movw	r1, #48	; 0x30
   73948:	and	r1, r1, #255	; 0xff
   7394c:	bl	12900 <memset@plt>
   73950:	ldr	r0, [sp, #444]	; 0x1bc
   73954:	ldr	r1, [fp, #-68]	; 0xffffffbc
   73958:	add	r0, r1, r0
   7395c:	str	r0, [fp, #-68]	; 0xffffffbc
   73960:	b	73988 <__assert_fail@plt+0x60dd0>
   73964:	ldr	r0, [fp, #-68]	; 0xffffffbc
   73968:	ldr	r2, [sp, #444]	; 0x1bc
   7396c:	movw	r1, #32
   73970:	and	r1, r1, #255	; 0xff
   73974:	bl	12900 <memset@plt>
   73978:	ldr	r0, [sp, #444]	; 0x1bc
   7397c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   73980:	add	r0, r1, r0
   73984:	str	r0, [fp, #-68]	; 0xffffffbc
   73988:	b	7398c <__assert_fail@plt+0x60dd4>
   7398c:	ldrb	r0, [fp, #-123]	; 0xffffff85
   73990:	tst	r0, #1
   73994:	beq	739ac <__assert_fail@plt+0x60df4>
   73998:	sub	r1, fp, #122	; 0x7a
   7399c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   739a0:	ldr	r2, [sp, #456]	; 0x1c8
   739a4:	bl	74c30 <__assert_fail@plt+0x62078>
   739a8:	b	739e0 <__assert_fail@plt+0x60e28>
   739ac:	ldrb	r0, [fp, #-124]	; 0xffffff84
   739b0:	tst	r0, #1
   739b4:	beq	739cc <__assert_fail@plt+0x60e14>
   739b8:	sub	r1, fp, #122	; 0x7a
   739bc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   739c0:	ldr	r2, [sp, #456]	; 0x1c8
   739c4:	bl	74c94 <__assert_fail@plt+0x620dc>
   739c8:	b	739dc <__assert_fail@plt+0x60e24>
   739cc:	sub	r1, fp, #122	; 0x7a
   739d0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   739d4:	ldr	r2, [sp, #456]	; 0x1c8
   739d8:	bl	125c4 <memcpy@plt>
   739dc:	b	739e0 <__assert_fail@plt+0x60e28>
   739e0:	ldr	r0, [sp, #456]	; 0x1c8
   739e4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   739e8:	add	r0, r1, r0
   739ec:	str	r0, [fp, #-68]	; 0xffffffbc
   739f0:	ldr	r0, [sp, #448]	; 0x1c0
   739f4:	ldr	r1, [fp, #-64]	; 0xffffffc0
   739f8:	add	r0, r1, r0
   739fc:	str	r0, [fp, #-64]	; 0xffffffc0
   73a00:	b	73a04 <__assert_fail@plt+0x60e4c>
   73a04:	movw	r0, #0
   73a08:	str	r0, [sp, #440]	; 0x1b8
   73a0c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   73a10:	cmp	r0, #45	; 0x2d
   73a14:	beq	73a2c <__assert_fail@plt+0x60e74>
   73a18:	ldr	r0, [fp, #16]
   73a1c:	ldr	r1, [sp, #464]	; 0x1d0
   73a20:	sub	r0, r0, r1
   73a24:	cmp	r0, #0
   73a28:	bge	73a38 <__assert_fail@plt+0x60e80>
   73a2c:	movw	r0, #0
   73a30:	str	r0, [sp, #128]	; 0x80
   73a34:	b	73a48 <__assert_fail@plt+0x60e90>
   73a38:	ldr	r0, [fp, #16]
   73a3c:	ldr	r1, [sp, #464]	; 0x1d0
   73a40:	sub	r0, r0, r1
   73a44:	str	r0, [sp, #128]	; 0x80
   73a48:	ldr	r0, [sp, #128]	; 0x80
   73a4c:	str	r0, [sp, #436]	; 0x1b4
   73a50:	ldr	r0, [sp, #440]	; 0x1b8
   73a54:	ldr	r1, [sp, #436]	; 0x1b4
   73a58:	cmp	r0, r1
   73a5c:	bcs	73a6c <__assert_fail@plt+0x60eb4>
   73a60:	ldr	r0, [sp, #436]	; 0x1b4
   73a64:	str	r0, [sp, #124]	; 0x7c
   73a68:	b	73a74 <__assert_fail@plt+0x60ebc>
   73a6c:	ldr	r0, [sp, #440]	; 0x1b8
   73a70:	str	r0, [sp, #124]	; 0x7c
   73a74:	ldr	r0, [sp, #124]	; 0x7c
   73a78:	str	r0, [sp, #432]	; 0x1b0
   73a7c:	ldr	r0, [sp, #432]	; 0x1b0
   73a80:	ldr	r1, [fp, #-36]	; 0xffffffdc
   73a84:	ldr	r2, [fp, #-64]	; 0xffffffc0
   73a88:	sub	r1, r1, r2
   73a8c:	cmp	r0, r1
   73a90:	bcc	73aac <__assert_fail@plt+0x60ef4>
   73a94:	bl	128d0 <__errno_location@plt>
   73a98:	movw	r1, #34	; 0x22
   73a9c:	str	r1, [r0]
   73aa0:	movw	r0, #0
   73aa4:	str	r0, [fp, #-28]	; 0xffffffe4
   73aa8:	b	74c20 <__assert_fail@plt+0x62068>
   73aac:	ldr	r0, [fp, #-68]	; 0xffffffbc
   73ab0:	movw	r1, #0
   73ab4:	cmp	r0, r1
   73ab8:	beq	73b54 <__assert_fail@plt+0x60f9c>
   73abc:	ldr	r0, [sp, #440]	; 0x1b8
   73ac0:	ldr	r1, [sp, #436]	; 0x1b4
   73ac4:	cmp	r0, r1
   73ac8:	bcs	73b44 <__assert_fail@plt+0x60f8c>
   73acc:	ldr	r0, [sp, #436]	; 0x1b4
   73ad0:	ldr	r1, [sp, #440]	; 0x1b8
   73ad4:	sub	r0, r0, r1
   73ad8:	str	r0, [sp, #428]	; 0x1ac
   73adc:	ldr	r0, [fp, #-76]	; 0xffffffb4
   73ae0:	cmp	r0, #48	; 0x30
   73ae4:	beq	73af4 <__assert_fail@plt+0x60f3c>
   73ae8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   73aec:	cmp	r0, #43	; 0x2b
   73af0:	bne	73b1c <__assert_fail@plt+0x60f64>
   73af4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   73af8:	ldr	r2, [sp, #428]	; 0x1ac
   73afc:	movw	r1, #48	; 0x30
   73b00:	and	r1, r1, #255	; 0xff
   73b04:	bl	12900 <memset@plt>
   73b08:	ldr	r0, [sp, #428]	; 0x1ac
   73b0c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   73b10:	add	r0, r1, r0
   73b14:	str	r0, [fp, #-68]	; 0xffffffbc
   73b18:	b	73b40 <__assert_fail@plt+0x60f88>
   73b1c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   73b20:	ldr	r2, [sp, #428]	; 0x1ac
   73b24:	movw	r1, #32
   73b28:	and	r1, r1, #255	; 0xff
   73b2c:	bl	12900 <memset@plt>
   73b30:	ldr	r0, [sp, #428]	; 0x1ac
   73b34:	ldr	r1, [fp, #-68]	; 0xffffffbc
   73b38:	add	r0, r1, r0
   73b3c:	str	r0, [fp, #-68]	; 0xffffffbc
   73b40:	b	73b44 <__assert_fail@plt+0x60f8c>
   73b44:	ldr	r0, [sp, #440]	; 0x1b8
   73b48:	ldr	r1, [fp, #-68]	; 0xffffffbc
   73b4c:	add	r0, r1, r0
   73b50:	str	r0, [fp, #-68]	; 0xffffffbc
   73b54:	ldr	r0, [sp, #432]	; 0x1b0
   73b58:	ldr	r1, [fp, #-64]	; 0xffffffc0
   73b5c:	add	r0, r1, r0
   73b60:	str	r0, [fp, #-64]	; 0xffffffc0
   73b64:	b	74bc0 <__assert_fail@plt+0x62008>
   73b68:	b	73b6c <__assert_fail@plt+0x60fb4>
   73b6c:	movw	r0, #1
   73b70:	str	r0, [sp, #424]	; 0x1a8
   73b74:	ldr	r0, [fp, #-76]	; 0xffffffb4
   73b78:	cmp	r0, #45	; 0x2d
   73b7c:	beq	73b8c <__assert_fail@plt+0x60fd4>
   73b80:	ldr	r0, [fp, #16]
   73b84:	cmp	r0, #0
   73b88:	bge	73b98 <__assert_fail@plt+0x60fe0>
   73b8c:	movw	r0, #0
   73b90:	str	r0, [sp, #120]	; 0x78
   73b94:	b	73ba0 <__assert_fail@plt+0x60fe8>
   73b98:	ldr	r0, [fp, #16]
   73b9c:	str	r0, [sp, #120]	; 0x78
   73ba0:	ldr	r0, [sp, #120]	; 0x78
   73ba4:	str	r0, [sp, #420]	; 0x1a4
   73ba8:	ldr	r0, [sp, #424]	; 0x1a8
   73bac:	ldr	r1, [sp, #420]	; 0x1a4
   73bb0:	cmp	r0, r1
   73bb4:	bcs	73bc4 <__assert_fail@plt+0x6100c>
   73bb8:	ldr	r0, [sp, #420]	; 0x1a4
   73bbc:	str	r0, [sp, #116]	; 0x74
   73bc0:	b	73bcc <__assert_fail@plt+0x61014>
   73bc4:	ldr	r0, [sp, #424]	; 0x1a8
   73bc8:	str	r0, [sp, #116]	; 0x74
   73bcc:	ldr	r0, [sp, #116]	; 0x74
   73bd0:	str	r0, [sp, #416]	; 0x1a0
   73bd4:	ldr	r0, [sp, #416]	; 0x1a0
   73bd8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   73bdc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   73be0:	sub	r1, r1, r2
   73be4:	cmp	r0, r1
   73be8:	bcc	73c04 <__assert_fail@plt+0x6104c>
   73bec:	bl	128d0 <__errno_location@plt>
   73bf0:	movw	r1, #34	; 0x22
   73bf4:	str	r1, [r0]
   73bf8:	movw	r0, #0
   73bfc:	str	r0, [fp, #-28]	; 0xffffffe4
   73c00:	b	74c20 <__assert_fail@plt+0x62068>
   73c04:	ldr	r0, [fp, #-68]	; 0xffffffbc
   73c08:	movw	r1, #0
   73c0c:	cmp	r0, r1
   73c10:	beq	73cb8 <__assert_fail@plt+0x61100>
   73c14:	ldr	r0, [sp, #424]	; 0x1a8
   73c18:	ldr	r1, [sp, #420]	; 0x1a4
   73c1c:	cmp	r0, r1
   73c20:	bcs	73c9c <__assert_fail@plt+0x610e4>
   73c24:	ldr	r0, [sp, #420]	; 0x1a4
   73c28:	ldr	r1, [sp, #424]	; 0x1a8
   73c2c:	sub	r0, r0, r1
   73c30:	str	r0, [sp, #412]	; 0x19c
   73c34:	ldr	r0, [fp, #-76]	; 0xffffffb4
   73c38:	cmp	r0, #48	; 0x30
   73c3c:	beq	73c4c <__assert_fail@plt+0x61094>
   73c40:	ldr	r0, [fp, #-76]	; 0xffffffb4
   73c44:	cmp	r0, #43	; 0x2b
   73c48:	bne	73c74 <__assert_fail@plt+0x610bc>
   73c4c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   73c50:	ldr	r2, [sp, #412]	; 0x19c
   73c54:	movw	r1, #48	; 0x30
   73c58:	and	r1, r1, #255	; 0xff
   73c5c:	bl	12900 <memset@plt>
   73c60:	ldr	r0, [sp, #412]	; 0x19c
   73c64:	ldr	r1, [fp, #-68]	; 0xffffffbc
   73c68:	add	r0, r1, r0
   73c6c:	str	r0, [fp, #-68]	; 0xffffffbc
   73c70:	b	73c98 <__assert_fail@plt+0x610e0>
   73c74:	ldr	r0, [fp, #-68]	; 0xffffffbc
   73c78:	ldr	r2, [sp, #412]	; 0x19c
   73c7c:	movw	r1, #32
   73c80:	and	r1, r1, #255	; 0xff
   73c84:	bl	12900 <memset@plt>
   73c88:	ldr	r0, [sp, #412]	; 0x19c
   73c8c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   73c90:	add	r0, r1, r0
   73c94:	str	r0, [fp, #-68]	; 0xffffffbc
   73c98:	b	73c9c <__assert_fail@plt+0x610e4>
   73c9c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   73ca0:	movw	r1, #10
   73ca4:	strb	r1, [r0]
   73ca8:	ldr	r0, [sp, #424]	; 0x1a8
   73cac:	ldr	r1, [fp, #-68]	; 0xffffffbc
   73cb0:	add	r0, r1, r0
   73cb4:	str	r0, [fp, #-68]	; 0xffffffbc
   73cb8:	ldr	r0, [sp, #416]	; 0x1a0
   73cbc:	ldr	r1, [fp, #-64]	; 0xffffffc0
   73cc0:	add	r0, r1, r0
   73cc4:	str	r0, [fp, #-64]	; 0xffffffc0
   73cc8:	b	74bc0 <__assert_fail@plt+0x62008>
   73ccc:	movw	r0, #1
   73cd0:	strb	r0, [fp, #-123]	; 0xffffff85
   73cd4:	movw	r0, #112	; 0x70
   73cd8:	str	r0, [fp, #-136]	; 0xffffff78
   73cdc:	ldrb	r0, [fp, #-129]	; 0xffffff7f
   73ce0:	tst	r0, #1
   73ce4:	beq	73cf8 <__assert_fail@plt+0x61140>
   73ce8:	movw	r0, #0
   73cec:	strb	r0, [fp, #-124]	; 0xffffff84
   73cf0:	movw	r0, #1
   73cf4:	strb	r0, [fp, #-123]	; 0xffffff85
   73cf8:	b	72b04 <__assert_fail@plt+0x5ff4c>
   73cfc:	b	73d00 <__assert_fail@plt+0x61148>
   73d00:	movw	r0, #1
   73d04:	str	r0, [fp, #-84]	; 0xffffffac
   73d08:	movw	r0, #0
   73d0c:	strb	r0, [fp, #-93]	; 0xffffffa3
   73d10:	ldr	r0, [fp, #-44]	; 0xffffffd4
   73d14:	ldr	r0, [r0, #16]
   73d18:	movw	r1, #11
   73d1c:	mul	r0, r0, r1
   73d20:	asr	r0, r0, #5
   73d24:	add	r0, r0, #1
   73d28:	str	r0, [fp, #-92]	; 0xffffffa4
   73d2c:	b	72fa8 <__assert_fail@plt+0x603f0>
   73d30:	movw	r0, #40212	; 0x9d14
   73d34:	movt	r0, #7
   73d38:	str	r0, [fp, #-104]	; 0xffffff98
   73d3c:	b	728e8 <__assert_fail@plt+0x5fd30>
   73d40:	b	72b04 <__assert_fail@plt+0x5ff4c>
   73d44:	ldr	r0, [fp, #-80]	; 0xffffffb0
   73d48:	cmp	r0, #69	; 0x45
   73d4c:	bne	73d54 <__assert_fail@plt+0x6119c>
   73d50:	b	74a08 <__assert_fail@plt+0x61e50>
   73d54:	b	73d58 <__assert_fail@plt+0x611a0>
   73d58:	movw	r0, #2
   73d5c:	str	r0, [fp, #-84]	; 0xffffffac
   73d60:	ldr	r0, [fp, #-44]	; 0xffffffd4
   73d64:	ldr	r0, [r0]
   73d68:	str	r0, [fp, #-88]	; 0xffffffa8
   73d6c:	b	72f88 <__assert_fail@plt+0x603d0>
   73d70:			; <UNDEFINED> instruction: 0xfffff894
   73d74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   73d78:	add	r1, sp, #368	; 0x170
   73d7c:	mov	r2, r1
   73d80:	str	r0, [sp, #112]	; 0x70
   73d84:	mov	r0, r2
   73d88:	ldr	r2, [sp, #112]	; 0x70
   73d8c:	str	r1, [sp, #108]	; 0x6c
   73d90:	mov	r1, r2
   73d94:	movw	r2, #44	; 0x2c
   73d98:	bl	125c4 <memcpy@plt>
   73d9c:	mvn	r0, #0
   73da0:	str	r0, [sp, #396]	; 0x18c
   73da4:	ldr	r0, [fp, #24]
   73da8:	ldr	r1, [sp, #108]	; 0x6c
   73dac:	bl	6e020 <__assert_fail@plt+0x5b468>
   73db0:	str	r0, [sp, #364]	; 0x16c
   73db4:	ldr	r0, [sp, #396]	; 0x18c
   73db8:	cmp	r0, #0
   73dbc:	bge	73dd8 <__assert_fail@plt+0x61220>
   73dc0:	bl	128d0 <__errno_location@plt>
   73dc4:	movw	r1, #75	; 0x4b
   73dc8:	str	r1, [r0]
   73dcc:	movw	r0, #0
   73dd0:	str	r0, [fp, #-28]	; 0xffffffe4
   73dd4:	b	74c20 <__assert_fail@plt+0x62068>
   73dd8:	sub	r0, fp, #122	; 0x7a
   73ddc:	add	r0, r0, #14
   73de0:	str	r0, [fp, #-108]	; 0xffffff94
   73de4:	ldr	r0, [sp, #364]	; 0x16c
   73de8:	cmp	r0, #0
   73dec:	movw	r0, #0
   73df0:	movlt	r0, #1
   73df4:	and	r0, r0, #1
   73df8:	strb	r0, [fp, #-93]	; 0xffffffa3
   73dfc:	ldr	r0, [sp, #364]	; 0x16c
   73e00:	movw	r1, #26215	; 0x6667
   73e04:	movt	r1, #26214	; 0x6666
   73e08:	smmul	r1, r0, r1
   73e0c:	asr	r2, r1, #2
   73e10:	add	r1, r2, r1, lsr #31
   73e14:	add	r1, r1, r1, lsl #2
   73e18:	sub	r0, r0, r1, lsl #1
   73e1c:	str	r0, [sp, #360]	; 0x168
   73e20:	ldr	r0, [sp, #364]	; 0x16c
   73e24:	movw	r1, #10
   73e28:	sdiv	r0, r0, r1
   73e2c:	str	r0, [sp, #364]	; 0x16c
   73e30:	ldrb	r0, [fp, #-93]	; 0xffffffa3
   73e34:	tst	r0, #1
   73e38:	beq	73e50 <__assert_fail@plt+0x61298>
   73e3c:	ldr	r0, [sp, #360]	; 0x168
   73e40:	movw	r1, #0
   73e44:	sub	r0, r1, r0
   73e48:	str	r0, [sp, #104]	; 0x68
   73e4c:	b	73e58 <__assert_fail@plt+0x612a0>
   73e50:	ldr	r0, [sp, #360]	; 0x168
   73e54:	str	r0, [sp, #104]	; 0x68
   73e58:	ldr	r0, [sp, #104]	; 0x68
   73e5c:	add	r0, r0, #48	; 0x30
   73e60:	ldr	r1, [fp, #-108]	; 0xffffff94
   73e64:	mvn	r2, #0
   73e68:	add	r3, r1, r2
   73e6c:	str	r3, [fp, #-108]	; 0xffffff94
   73e70:	add	r1, r1, r2
   73e74:	strb	r0, [r1]
   73e78:	ldr	r0, [sp, #364]	; 0x16c
   73e7c:	cmp	r0, #0
   73e80:	bne	73dfc <__assert_fail@plt+0x61244>
   73e84:	movw	r0, #1
   73e88:	str	r0, [fp, #-84]	; 0xffffffac
   73e8c:	movw	r0, #0
   73e90:	strb	r0, [fp, #-94]	; 0xffffffa2
   73e94:	b	730b8 <__assert_fail@plt+0x60500>
   73e98:	ldr	r0, [fp, #-80]	; 0xffffffb0
   73e9c:	cmp	r0, #79	; 0x4f
   73ea0:	bne	73ea8 <__assert_fail@plt+0x612f0>
   73ea4:	b	74a08 <__assert_fail@plt+0x61e50>
   73ea8:	b	72b04 <__assert_fail@plt+0x5ff4c>
   73eac:	movw	r0, #47817	; 0xbac9
   73eb0:	movt	r0, #7
   73eb4:	str	r0, [fp, #-104]	; 0xffffff98
   73eb8:	b	728e8 <__assert_fail@plt+0x5fd30>
   73ebc:	b	73ec0 <__assert_fail@plt+0x61308>
   73ec0:	movw	r0, #1
   73ec4:	str	r0, [sp, #356]	; 0x164
   73ec8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   73ecc:	cmp	r0, #45	; 0x2d
   73ed0:	beq	73ee0 <__assert_fail@plt+0x61328>
   73ed4:	ldr	r0, [fp, #16]
   73ed8:	cmp	r0, #0
   73edc:	bge	73eec <__assert_fail@plt+0x61334>
   73ee0:	movw	r0, #0
   73ee4:	str	r0, [sp, #100]	; 0x64
   73ee8:	b	73ef4 <__assert_fail@plt+0x6133c>
   73eec:	ldr	r0, [fp, #16]
   73ef0:	str	r0, [sp, #100]	; 0x64
   73ef4:	ldr	r0, [sp, #100]	; 0x64
   73ef8:	str	r0, [sp, #352]	; 0x160
   73efc:	ldr	r0, [sp, #356]	; 0x164
   73f00:	ldr	r1, [sp, #352]	; 0x160
   73f04:	cmp	r0, r1
   73f08:	bcs	73f18 <__assert_fail@plt+0x61360>
   73f0c:	ldr	r0, [sp, #352]	; 0x160
   73f10:	str	r0, [sp, #96]	; 0x60
   73f14:	b	73f20 <__assert_fail@plt+0x61368>
   73f18:	ldr	r0, [sp, #356]	; 0x164
   73f1c:	str	r0, [sp, #96]	; 0x60
   73f20:	ldr	r0, [sp, #96]	; 0x60
   73f24:	str	r0, [sp, #348]	; 0x15c
   73f28:	ldr	r0, [sp, #348]	; 0x15c
   73f2c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   73f30:	ldr	r2, [fp, #-64]	; 0xffffffc0
   73f34:	sub	r1, r1, r2
   73f38:	cmp	r0, r1
   73f3c:	bcc	73f58 <__assert_fail@plt+0x613a0>
   73f40:	bl	128d0 <__errno_location@plt>
   73f44:	movw	r1, #34	; 0x22
   73f48:	str	r1, [r0]
   73f4c:	movw	r0, #0
   73f50:	str	r0, [fp, #-28]	; 0xffffffe4
   73f54:	b	74c20 <__assert_fail@plt+0x62068>
   73f58:	ldr	r0, [fp, #-68]	; 0xffffffbc
   73f5c:	movw	r1, #0
   73f60:	cmp	r0, r1
   73f64:	beq	7400c <__assert_fail@plt+0x61454>
   73f68:	ldr	r0, [sp, #356]	; 0x164
   73f6c:	ldr	r1, [sp, #352]	; 0x160
   73f70:	cmp	r0, r1
   73f74:	bcs	73ff0 <__assert_fail@plt+0x61438>
   73f78:	ldr	r0, [sp, #352]	; 0x160
   73f7c:	ldr	r1, [sp, #356]	; 0x164
   73f80:	sub	r0, r0, r1
   73f84:	str	r0, [sp, #344]	; 0x158
   73f88:	ldr	r0, [fp, #-76]	; 0xffffffb4
   73f8c:	cmp	r0, #48	; 0x30
   73f90:	beq	73fa0 <__assert_fail@plt+0x613e8>
   73f94:	ldr	r0, [fp, #-76]	; 0xffffffb4
   73f98:	cmp	r0, #43	; 0x2b
   73f9c:	bne	73fc8 <__assert_fail@plt+0x61410>
   73fa0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   73fa4:	ldr	r2, [sp, #344]	; 0x158
   73fa8:	movw	r1, #48	; 0x30
   73fac:	and	r1, r1, #255	; 0xff
   73fb0:	bl	12900 <memset@plt>
   73fb4:	ldr	r0, [sp, #344]	; 0x158
   73fb8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   73fbc:	add	r0, r1, r0
   73fc0:	str	r0, [fp, #-68]	; 0xffffffbc
   73fc4:	b	73fec <__assert_fail@plt+0x61434>
   73fc8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   73fcc:	ldr	r2, [sp, #344]	; 0x158
   73fd0:	movw	r1, #32
   73fd4:	and	r1, r1, #255	; 0xff
   73fd8:	bl	12900 <memset@plt>
   73fdc:	ldr	r0, [sp, #344]	; 0x158
   73fe0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   73fe4:	add	r0, r1, r0
   73fe8:	str	r0, [fp, #-68]	; 0xffffffbc
   73fec:	b	73ff0 <__assert_fail@plt+0x61438>
   73ff0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   73ff4:	movw	r1, #9
   73ff8:	strb	r1, [r0]
   73ffc:	ldr	r0, [sp, #356]	; 0x164
   74000:	ldr	r1, [fp, #-68]	; 0xffffffbc
   74004:	add	r0, r1, r0
   74008:	str	r0, [fp, #-68]	; 0xffffffbc
   7400c:	ldr	r0, [sp, #348]	; 0x15c
   74010:	ldr	r1, [fp, #-64]	; 0xffffffc0
   74014:	add	r0, r1, r0
   74018:	str	r0, [fp, #-64]	; 0xffffffc0
   7401c:	b	74bc0 <__assert_fail@plt+0x62008>
   74020:	b	74024 <__assert_fail@plt+0x6146c>
   74024:	mov	r0, #1
   74028:	str	r0, [fp, #-84]	; 0xffffffac
   7402c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   74030:	ldr	r0, [r0, #24]
   74034:	add	r0, r0, #6
   74038:	movw	r1, #9363	; 0x2493
   7403c:	movt	r1, #37449	; 0x9249
   74040:	smmla	r1, r0, r1, r0
   74044:	asr	r2, r1, #2
   74048:	add	r1, r2, r1, lsr #31
   7404c:	rsb	r1, r1, r1, lsl #3
   74050:	sub	r0, r0, r1
   74054:	add	r0, r0, #1
   74058:	str	r0, [fp, #-88]	; 0xffffffa8
   7405c:	b	72f88 <__assert_fail@plt+0x603d0>
   74060:	ldr	r0, [fp, #-80]	; 0xffffffb0
   74064:	cmp	r0, #69	; 0x45
   74068:	bne	74070 <__assert_fail@plt+0x614b8>
   7406c:	b	74a08 <__assert_fail@plt+0x61e50>
   74070:	b	74074 <__assert_fail@plt+0x614bc>
   74074:	movw	r0, #2
   74078:	str	r0, [fp, #-84]	; 0xffffffac
   7407c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   74080:	ldr	r0, [r0, #28]
   74084:	ldr	r1, [fp, #-44]	; 0xffffffd4
   74088:	ldr	r1, [r1, #24]
   7408c:	sub	r0, r0, r1
   74090:	add	r0, r0, #7
   74094:	movw	r1, #7
   74098:	sdiv	r0, r0, r1
   7409c:	str	r0, [fp, #-88]	; 0xffffffa8
   740a0:	b	72f88 <__assert_fail@plt+0x603d0>
   740a4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   740a8:	cmp	r0, #69	; 0x45
   740ac:	bne	740b4 <__assert_fail@plt+0x614fc>
   740b0:	b	74a08 <__assert_fail@plt+0x61e50>
   740b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   740b8:	ldr	r0, [r0, #20]
   740bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   740c0:	ldr	r1, [r1, #20]
   740c4:	cmp	r1, #0
   740c8:	movw	r1, #0
   740cc:	movlt	r1, #1
   740d0:	tst	r1, #1
   740d4:	movw	r1, #300	; 0x12c
   740d8:	mvneq	r1, #99	; 0x63
   740dc:	add	r0, r0, r1
   740e0:	str	r0, [sp, #340]	; 0x154
   740e4:	movw	r0, #0
   740e8:	str	r0, [sp, #336]	; 0x150
   740ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   740f0:	ldr	r0, [r0, #28]
   740f4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   740f8:	ldr	r1, [r1, #24]
   740fc:	bl	74cf8 <__assert_fail@plt+0x62140>
   74100:	str	r0, [sp, #332]	; 0x14c
   74104:	ldr	r0, [sp, #332]	; 0x14c
   74108:	cmp	r0, #0
   7410c:	bge	741e8 <__assert_fail@plt+0x61630>
   74110:	mvn	r0, #0
   74114:	str	r0, [sp, #336]	; 0x150
   74118:	ldr	r0, [fp, #-44]	; 0xffffffd4
   7411c:	ldr	r0, [r0, #28]
   74120:	ldr	r1, [sp, #340]	; 0x154
   74124:	sub	r1, r1, #1
   74128:	asr	r2, r1, #31
   7412c:	add	r2, r1, r2, lsr #30
   74130:	bic	r2, r2, #3
   74134:	sub	r1, r1, r2
   74138:	cmp	r1, #0
   7413c:	movw	r1, #0
   74140:	str	r0, [sp, #92]	; 0x5c
   74144:	str	r1, [sp, #88]	; 0x58
   74148:	bne	741bc <__assert_fail@plt+0x61604>
   7414c:	ldr	r0, [sp, #340]	; 0x154
   74150:	sub	r0, r0, #1
   74154:	movw	r1, #34079	; 0x851f
   74158:	movt	r1, #20971	; 0x51eb
   7415c:	smmul	r1, r0, r1
   74160:	asr	r2, r1, #5
   74164:	add	r1, r2, r1, lsr #31
   74168:	mov	r2, #100	; 0x64
   7416c:	mls	r0, r1, r2, r0
   74170:	cmp	r0, #0
   74174:	movw	r0, #1
   74178:	str	r0, [sp, #84]	; 0x54
   7417c:	bne	741b4 <__assert_fail@plt+0x615fc>
   74180:	ldr	r0, [sp, #340]	; 0x154
   74184:	sub	r0, r0, #1
   74188:	movw	r1, #34079	; 0x851f
   7418c:	movt	r1, #20971	; 0x51eb
   74190:	smmul	r1, r0, r1
   74194:	asr	r2, r1, #7
   74198:	add	r1, r2, r1, lsr #31
   7419c:	mov	r2, #400	; 0x190
   741a0:	mls	r0, r1, r2, r0
   741a4:	cmp	r0, #0
   741a8:	movw	r0, #0
   741ac:	moveq	r0, #1
   741b0:	str	r0, [sp, #84]	; 0x54
   741b4:	ldr	r0, [sp, #84]	; 0x54
   741b8:	str	r0, [sp, #88]	; 0x58
   741bc:	ldr	r0, [sp, #88]	; 0x58
   741c0:	and	r0, r0, #1
   741c4:	movw	r1, #365	; 0x16d
   741c8:	add	r0, r0, r1
   741cc:	ldr	r1, [sp, #92]	; 0x5c
   741d0:	add	r0, r1, r0
   741d4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   741d8:	ldr	r1, [r2, #24]
   741dc:	bl	74cf8 <__assert_fail@plt+0x62140>
   741e0:	str	r0, [sp, #332]	; 0x14c
   741e4:	b	742cc <__assert_fail@plt+0x61714>
   741e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   741ec:	ldr	r0, [r0, #28]
   741f0:	ldr	r1, [sp, #340]	; 0x154
   741f4:	asr	r2, r1, #31
   741f8:	add	r2, r1, r2, lsr #30
   741fc:	bic	r2, r2, #3
   74200:	sub	r1, r1, r2
   74204:	cmp	r1, #0
   74208:	movw	r1, #0
   7420c:	str	r0, [sp, #80]	; 0x50
   74210:	str	r1, [sp, #76]	; 0x4c
   74214:	bne	74280 <__assert_fail@plt+0x616c8>
   74218:	ldr	r0, [sp, #340]	; 0x154
   7421c:	movw	r1, #34079	; 0x851f
   74220:	movt	r1, #20971	; 0x51eb
   74224:	smmul	r1, r0, r1
   74228:	asr	r2, r1, #5
   7422c:	add	r1, r2, r1, lsr #31
   74230:	mov	r2, #100	; 0x64
   74234:	mls	r0, r1, r2, r0
   74238:	cmp	r0, #0
   7423c:	movw	r0, #1
   74240:	str	r0, [sp, #72]	; 0x48
   74244:	bne	74278 <__assert_fail@plt+0x616c0>
   74248:	ldr	r0, [sp, #340]	; 0x154
   7424c:	movw	r1, #34079	; 0x851f
   74250:	movt	r1, #20971	; 0x51eb
   74254:	smmul	r1, r0, r1
   74258:	asr	r2, r1, #7
   7425c:	add	r1, r2, r1, lsr #31
   74260:	mov	r2, #400	; 0x190
   74264:	mls	r0, r1, r2, r0
   74268:	cmp	r0, #0
   7426c:	movw	r0, #0
   74270:	moveq	r0, #1
   74274:	str	r0, [sp, #72]	; 0x48
   74278:	ldr	r0, [sp, #72]	; 0x48
   7427c:	str	r0, [sp, #76]	; 0x4c
   74280:	ldr	r0, [sp, #76]	; 0x4c
   74284:	and	r0, r0, #1
   74288:	movw	r1, #365	; 0x16d
   7428c:	add	r0, r0, r1
   74290:	ldr	r1, [sp, #80]	; 0x50
   74294:	sub	r0, r1, r0
   74298:	ldr	r2, [fp, #-44]	; 0xffffffd4
   7429c:	ldr	r1, [r2, #24]
   742a0:	bl	74cf8 <__assert_fail@plt+0x62140>
   742a4:	str	r0, [sp, #328]	; 0x148
   742a8:	ldr	r0, [sp, #328]	; 0x148
   742ac:	movw	r1, #0
   742b0:	cmp	r1, r0
   742b4:	bgt	742c8 <__assert_fail@plt+0x61710>
   742b8:	movw	r0, #1
   742bc:	str	r0, [sp, #336]	; 0x150
   742c0:	ldr	r0, [sp, #328]	; 0x148
   742c4:	str	r0, [sp, #332]	; 0x14c
   742c8:	b	742cc <__assert_fail@plt+0x61714>
   742cc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   742d0:	ldrb	r0, [r0]
   742d4:	mov	r1, r0
   742d8:	cmp	r0, #71	; 0x47
   742dc:	str	r1, [sp, #68]	; 0x44
   742e0:	beq	743b4 <__assert_fail@plt+0x617fc>
   742e4:	b	742e8 <__assert_fail@plt+0x61730>
   742e8:	ldr	r0, [sp, #68]	; 0x44
   742ec:	cmp	r0, #103	; 0x67
   742f0:	bne	74408 <__assert_fail@plt+0x61850>
   742f4:	b	742f8 <__assert_fail@plt+0x61740>
   742f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   742fc:	ldr	r0, [r0, #20]
   74300:	movw	r1, #34079	; 0x851f
   74304:	movt	r1, #20971	; 0x51eb
   74308:	smmul	r2, r0, r1
   7430c:	asr	r3, r2, #5
   74310:	add	r2, r3, r2, lsr #31
   74314:	mov	r3, #100	; 0x64
   74318:	mls	r0, r2, r3, r0
   7431c:	ldr	r2, [sp, #336]	; 0x150
   74320:	add	r0, r0, r2
   74324:	smmul	r1, r0, r1
   74328:	asr	r2, r1, #5
   7432c:	add	r1, r2, r1, lsr #31
   74330:	mls	r0, r1, r3, r0
   74334:	str	r0, [sp, #324]	; 0x144
   74338:	movw	r0, #2
   7433c:	str	r0, [fp, #-84]	; 0xffffffac
   74340:	movw	r0, #0
   74344:	strb	r0, [fp, #-93]	; 0xffffffa3
   74348:	ldr	r0, [sp, #324]	; 0x144
   7434c:	movw	r1, #0
   74350:	cmp	r1, r0
   74354:	bgt	74364 <__assert_fail@plt+0x617ac>
   74358:	ldr	r0, [sp, #324]	; 0x144
   7435c:	str	r0, [sp, #64]	; 0x40
   74360:	b	743a8 <__assert_fail@plt+0x617f0>
   74364:	ldr	r0, [pc, #2240]	; 74c2c <__assert_fail@plt+0x62074>
   74368:	ldr	r1, [fp, #-44]	; 0xffffffd4
   7436c:	ldr	r1, [r1, #20]
   74370:	ldr	r2, [sp, #336]	; 0x150
   74374:	sub	r0, r0, r2
   74378:	cmp	r1, r0
   7437c:	bge	74394 <__assert_fail@plt+0x617dc>
   74380:	ldr	r0, [sp, #324]	; 0x144
   74384:	movw	r1, #0
   74388:	sub	r0, r1, r0
   7438c:	str	r0, [sp, #60]	; 0x3c
   74390:	b	743a0 <__assert_fail@plt+0x617e8>
   74394:	ldr	r0, [sp, #324]	; 0x144
   74398:	add	r0, r0, #100	; 0x64
   7439c:	str	r0, [sp, #60]	; 0x3c
   743a0:	ldr	r0, [sp, #60]	; 0x3c
   743a4:	str	r0, [sp, #64]	; 0x40
   743a8:	ldr	r0, [sp, #64]	; 0x40
   743ac:	str	r0, [fp, #-92]	; 0xffffffa4
   743b0:	b	72ee4 <__assert_fail@plt+0x6032c>
   743b4:	b	743b8 <__assert_fail@plt+0x61800>
   743b8:	ldr	r0, [pc, #2156]	; 74c2c <__assert_fail@plt+0x62074>
   743bc:	movw	r1, #4
   743c0:	str	r1, [fp, #-84]	; 0xffffffac
   743c4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   743c8:	ldr	r1, [r1, #20]
   743cc:	ldr	r2, [sp, #336]	; 0x150
   743d0:	sub	r0, r0, r2
   743d4:	cmp	r1, r0
   743d8:	movw	r0, #0
   743dc:	movlt	r0, #1
   743e0:	and	r0, r0, #1
   743e4:	strb	r0, [fp, #-93]	; 0xffffffa3
   743e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   743ec:	ldr	r0, [r0, #20]
   743f0:	movw	r1, #1900	; 0x76c
   743f4:	add	r0, r0, r1
   743f8:	ldr	r1, [sp, #336]	; 0x150
   743fc:	add	r0, r0, r1
   74400:	str	r0, [fp, #-92]	; 0xffffffa4
   74404:	b	72ee4 <__assert_fail@plt+0x6032c>
   74408:	b	7440c <__assert_fail@plt+0x61854>
   7440c:	movw	r0, #2
   74410:	str	r0, [fp, #-84]	; 0xffffffac
   74414:	ldr	r0, [sp, #332]	; 0x14c
   74418:	movw	r1, #7
   7441c:	sdiv	r0, r0, r1
   74420:	add	r0, r0, #1
   74424:	str	r0, [fp, #-88]	; 0xffffffa8
   74428:	b	72f88 <__assert_fail@plt+0x603d0>
   7442c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   74430:	cmp	r0, #69	; 0x45
   74434:	bne	7443c <__assert_fail@plt+0x61884>
   74438:	b	74a08 <__assert_fail@plt+0x61e50>
   7443c:	b	74440 <__assert_fail@plt+0x61888>
   74440:	mov	r0, #2
   74444:	str	r0, [fp, #-84]	; 0xffffffac
   74448:	ldr	r0, [fp, #-44]	; 0xffffffd4
   7444c:	ldr	r1, [r0, #24]
   74450:	ldr	r0, [r0, #28]
   74454:	add	r1, r1, #6
   74458:	movw	r2, #9363	; 0x2493
   7445c:	movt	r2, #37449	; 0x9249
   74460:	smmla	r2, r1, r2, r1
   74464:	asr	r3, r2, #2
   74468:	add	r2, r3, r2, lsr #31
   7446c:	rsb	r2, r2, r2, lsl #3
   74470:	sub	r1, r1, r2
   74474:	sub	r0, r0, r1
   74478:	add	r0, r0, #7
   7447c:	movw	r1, #7
   74480:	sdiv	r0, r0, r1
   74484:	str	r0, [fp, #-88]	; 0xffffffa8
   74488:	b	72f88 <__assert_fail@plt+0x603d0>
   7448c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   74490:	cmp	r0, #69	; 0x45
   74494:	bne	7449c <__assert_fail@plt+0x618e4>
   74498:	b	74a08 <__assert_fail@plt+0x61e50>
   7449c:	b	744a0 <__assert_fail@plt+0x618e8>
   744a0:	movw	r0, #1
   744a4:	str	r0, [fp, #-84]	; 0xffffffac
   744a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   744ac:	ldr	r0, [r0, #24]
   744b0:	str	r0, [fp, #-88]	; 0xffffffa8
   744b4:	b	72f88 <__assert_fail@plt+0x603d0>
   744b8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   744bc:	cmp	r0, #69	; 0x45
   744c0:	bne	744c8 <__assert_fail@plt+0x61910>
   744c4:	b	72b04 <__assert_fail@plt+0x5ff4c>
   744c8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   744cc:	cmp	r0, #79	; 0x4f
   744d0:	bne	744d8 <__assert_fail@plt+0x61920>
   744d4:	b	74a08 <__assert_fail@plt+0x61e50>
   744d8:	b	744dc <__assert_fail@plt+0x61924>
   744dc:	ldr	r0, [pc, #1864]	; 74c2c <__assert_fail@plt+0x62074>
   744e0:	movw	r1, #4
   744e4:	str	r1, [fp, #-84]	; 0xffffffac
   744e8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   744ec:	ldr	r1, [r1, #20]
   744f0:	cmp	r1, r0
   744f4:	movw	r0, #0
   744f8:	movlt	r0, #1
   744fc:	and	r0, r0, #1
   74500:	strb	r0, [fp, #-93]	; 0xffffffa3
   74504:	ldr	r0, [fp, #-44]	; 0xffffffd4
   74508:	ldr	r0, [r0, #20]
   7450c:	movw	r1, #1900	; 0x76c
   74510:	add	r0, r0, r1
   74514:	str	r0, [fp, #-92]	; 0xffffffa4
   74518:	b	72ee4 <__assert_fail@plt+0x6032c>
   7451c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   74520:	cmp	r0, #69	; 0x45
   74524:	bne	7452c <__assert_fail@plt+0x61974>
   74528:	b	72b04 <__assert_fail@plt+0x5ff4c>
   7452c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   74530:	ldr	r0, [r0, #20]
   74534:	movw	r1, #34079	; 0x851f
   74538:	movt	r1, #20971	; 0x51eb
   7453c:	smmul	r1, r0, r1
   74540:	asr	r2, r1, #5
   74544:	add	r1, r2, r1, lsr #31
   74548:	mov	r2, #100	; 0x64
   7454c:	mls	r0, r1, r2, r0
   74550:	str	r0, [sp, #320]	; 0x140
   74554:	ldr	r0, [sp, #320]	; 0x140
   74558:	cmp	r0, #0
   7455c:	bge	7459c <__assert_fail@plt+0x619e4>
   74560:	ldr	r0, [pc, #1732]	; 74c2c <__assert_fail@plt+0x62074>
   74564:	ldr	r1, [fp, #-44]	; 0xffffffd4
   74568:	ldr	r1, [r1, #20]
   7456c:	cmp	r1, r0
   74570:	bge	74588 <__assert_fail@plt+0x619d0>
   74574:	ldr	r0, [sp, #320]	; 0x140
   74578:	movw	r1, #0
   7457c:	sub	r0, r1, r0
   74580:	str	r0, [sp, #56]	; 0x38
   74584:	b	74594 <__assert_fail@plt+0x619dc>
   74588:	ldr	r0, [sp, #320]	; 0x140
   7458c:	add	r0, r0, #100	; 0x64
   74590:	str	r0, [sp, #56]	; 0x38
   74594:	ldr	r0, [sp, #56]	; 0x38
   74598:	str	r0, [sp, #320]	; 0x140
   7459c:	b	745a0 <__assert_fail@plt+0x619e8>
   745a0:	movw	r0, #2
   745a4:	str	r0, [fp, #-84]	; 0xffffffac
   745a8:	movw	r0, #0
   745ac:	strb	r0, [fp, #-93]	; 0xffffffa3
   745b0:	ldr	r0, [sp, #320]	; 0x140
   745b4:	str	r0, [fp, #-92]	; 0xffffffa4
   745b8:	b	72ee4 <__assert_fail@plt+0x6032c>
   745bc:	ldrb	r0, [fp, #-129]	; 0xffffff7f
   745c0:	tst	r0, #1
   745c4:	beq	745d8 <__assert_fail@plt+0x61a20>
   745c8:	movw	r0, #0
   745cc:	strb	r0, [fp, #-124]	; 0xffffff84
   745d0:	movw	r0, #1
   745d4:	strb	r0, [fp, #-123]	; 0xffffff85
   745d8:	b	745dc <__assert_fail@plt+0x61a24>
   745dc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   745e0:	bl	12888 <strlen@plt>
   745e4:	str	r0, [sp, #316]	; 0x13c
   745e8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   745ec:	cmp	r0, #45	; 0x2d
   745f0:	beq	74600 <__assert_fail@plt+0x61a48>
   745f4:	ldr	r0, [fp, #16]
   745f8:	cmp	r0, #0
   745fc:	bge	7460c <__assert_fail@plt+0x61a54>
   74600:	movw	r0, #0
   74604:	str	r0, [sp, #52]	; 0x34
   74608:	b	74614 <__assert_fail@plt+0x61a5c>
   7460c:	ldr	r0, [fp, #16]
   74610:	str	r0, [sp, #52]	; 0x34
   74614:	ldr	r0, [sp, #52]	; 0x34
   74618:	str	r0, [sp, #312]	; 0x138
   7461c:	ldr	r0, [sp, #316]	; 0x13c
   74620:	ldr	r1, [sp, #312]	; 0x138
   74624:	cmp	r0, r1
   74628:	bcs	74638 <__assert_fail@plt+0x61a80>
   7462c:	ldr	r0, [sp, #312]	; 0x138
   74630:	str	r0, [sp, #48]	; 0x30
   74634:	b	74640 <__assert_fail@plt+0x61a88>
   74638:	ldr	r0, [sp, #316]	; 0x13c
   7463c:	str	r0, [sp, #48]	; 0x30
   74640:	ldr	r0, [sp, #48]	; 0x30
   74644:	str	r0, [sp, #308]	; 0x134
   74648:	ldr	r0, [sp, #308]	; 0x134
   7464c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   74650:	ldr	r2, [fp, #-64]	; 0xffffffc0
   74654:	sub	r1, r1, r2
   74658:	cmp	r0, r1
   7465c:	bcc	74678 <__assert_fail@plt+0x61ac0>
   74660:	bl	128d0 <__errno_location@plt>
   74664:	movw	r1, #34	; 0x22
   74668:	str	r1, [r0]
   7466c:	movw	r0, #0
   74670:	str	r0, [fp, #-28]	; 0xffffffe4
   74674:	b	74c20 <__assert_fail@plt+0x62068>
   74678:	ldr	r0, [fp, #-68]	; 0xffffffbc
   7467c:	movw	r1, #0
   74680:	cmp	r0, r1
   74684:	beq	74774 <__assert_fail@plt+0x61bbc>
   74688:	ldr	r0, [sp, #316]	; 0x13c
   7468c:	ldr	r1, [sp, #312]	; 0x138
   74690:	cmp	r0, r1
   74694:	bcs	74710 <__assert_fail@plt+0x61b58>
   74698:	ldr	r0, [sp, #312]	; 0x138
   7469c:	ldr	r1, [sp, #316]	; 0x13c
   746a0:	sub	r0, r0, r1
   746a4:	str	r0, [sp, #304]	; 0x130
   746a8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   746ac:	cmp	r0, #48	; 0x30
   746b0:	beq	746c0 <__assert_fail@plt+0x61b08>
   746b4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   746b8:	cmp	r0, #43	; 0x2b
   746bc:	bne	746e8 <__assert_fail@plt+0x61b30>
   746c0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   746c4:	ldr	r2, [sp, #304]	; 0x130
   746c8:	movw	r1, #48	; 0x30
   746cc:	and	r1, r1, #255	; 0xff
   746d0:	bl	12900 <memset@plt>
   746d4:	ldr	r0, [sp, #304]	; 0x130
   746d8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   746dc:	add	r0, r1, r0
   746e0:	str	r0, [fp, #-68]	; 0xffffffbc
   746e4:	b	7470c <__assert_fail@plt+0x61b54>
   746e8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   746ec:	ldr	r2, [sp, #304]	; 0x130
   746f0:	movw	r1, #32
   746f4:	and	r1, r1, #255	; 0xff
   746f8:	bl	12900 <memset@plt>
   746fc:	ldr	r0, [sp, #304]	; 0x130
   74700:	ldr	r1, [fp, #-68]	; 0xffffffbc
   74704:	add	r0, r1, r0
   74708:	str	r0, [fp, #-68]	; 0xffffffbc
   7470c:	b	74710 <__assert_fail@plt+0x61b58>
   74710:	ldrb	r0, [fp, #-123]	; 0xffffff85
   74714:	tst	r0, #1
   74718:	beq	74730 <__assert_fail@plt+0x61b78>
   7471c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   74720:	ldr	r1, [fp, #-60]	; 0xffffffc4
   74724:	ldr	r2, [sp, #316]	; 0x13c
   74728:	bl	74c30 <__assert_fail@plt+0x62078>
   7472c:	b	74764 <__assert_fail@plt+0x61bac>
   74730:	ldrb	r0, [fp, #-124]	; 0xffffff84
   74734:	tst	r0, #1
   74738:	beq	74750 <__assert_fail@plt+0x61b98>
   7473c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   74740:	ldr	r1, [fp, #-60]	; 0xffffffc4
   74744:	ldr	r2, [sp, #316]	; 0x13c
   74748:	bl	74c94 <__assert_fail@plt+0x620dc>
   7474c:	b	74760 <__assert_fail@plt+0x61ba8>
   74750:	ldr	r0, [fp, #-68]	; 0xffffffbc
   74754:	ldr	r1, [fp, #-60]	; 0xffffffc4
   74758:	ldr	r2, [sp, #316]	; 0x13c
   7475c:	bl	125c4 <memcpy@plt>
   74760:	b	74764 <__assert_fail@plt+0x61bac>
   74764:	ldr	r0, [sp, #316]	; 0x13c
   74768:	ldr	r1, [fp, #-68]	; 0xffffffbc
   7476c:	add	r0, r1, r0
   74770:	str	r0, [fp, #-68]	; 0xffffffbc
   74774:	ldr	r0, [sp, #308]	; 0x134
   74778:	ldr	r1, [fp, #-64]	; 0xffffffc0
   7477c:	add	r0, r1, r0
   74780:	str	r0, [fp, #-64]	; 0xffffffc0
   74784:	b	74bc0 <__assert_fail@plt+0x62008>
   74788:	movw	r0, #1
   7478c:	str	r0, [fp, #-128]	; 0xffffff80
   74790:	ldr	r0, [fp, #-72]	; 0xffffffb8
   74794:	ldr	r1, [fp, #-128]	; 0xffffff80
   74798:	add	r0, r0, r1
   7479c:	ldrb	r0, [r0]
   747a0:	cmp	r0, #58	; 0x3a
   747a4:	bne	747bc <__assert_fail@plt+0x61c04>
   747a8:	b	747ac <__assert_fail@plt+0x61bf4>
   747ac:	ldr	r0, [fp, #-128]	; 0xffffff80
   747b0:	add	r0, r0, #1
   747b4:	str	r0, [fp, #-128]	; 0xffffff80
   747b8:	b	74790 <__assert_fail@plt+0x61bd8>
   747bc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   747c0:	ldr	r1, [fp, #-128]	; 0xffffff80
   747c4:	add	r0, r0, r1
   747c8:	ldrb	r0, [r0]
   747cc:	cmp	r0, #122	; 0x7a
   747d0:	beq	747d8 <__assert_fail@plt+0x61c20>
   747d4:	b	74a08 <__assert_fail@plt+0x61e50>
   747d8:	ldr	r0, [fp, #-128]	; 0xffffff80
   747dc:	ldr	r1, [fp, #-72]	; 0xffffffb8
   747e0:	add	r0, r1, r0
   747e4:	str	r0, [fp, #-72]	; 0xffffffb8
   747e8:	b	747f4 <__assert_fail@plt+0x61c3c>
   747ec:	movw	r0, #0
   747f0:	str	r0, [fp, #-128]	; 0xffffff80
   747f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   747f8:	ldr	r0, [r0, #32]
   747fc:	cmp	r0, #0
   74800:	bge	74808 <__assert_fail@plt+0x61c50>
   74804:	b	74bc0 <__assert_fail@plt+0x62008>
   74808:	ldr	r0, [fp, #-44]	; 0xffffffd4
   7480c:	ldr	r0, [r0, #36]	; 0x24
   74810:	str	r0, [sp, #300]	; 0x12c
   74814:	ldr	r0, [sp, #300]	; 0x12c
   74818:	cmp	r0, #0
   7481c:	movw	r0, #1
   74820:	str	r0, [sp, #44]	; 0x2c
   74824:	blt	7485c <__assert_fail@plt+0x61ca4>
   74828:	ldr	r0, [sp, #300]	; 0x12c
   7482c:	cmp	r0, #0
   74830:	movw	r0, #0
   74834:	str	r0, [sp, #40]	; 0x28
   74838:	bne	74854 <__assert_fail@plt+0x61c9c>
   7483c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   74840:	ldrb	r0, [r0]
   74844:	cmp	r0, #45	; 0x2d
   74848:	movw	r0, #0
   7484c:	moveq	r0, #1
   74850:	str	r0, [sp, #40]	; 0x28
   74854:	ldr	r0, [sp, #40]	; 0x28
   74858:	str	r0, [sp, #44]	; 0x2c
   7485c:	ldr	r0, [sp, #44]	; 0x2c
   74860:	and	r0, r0, #1
   74864:	strb	r0, [fp, #-93]	; 0xffffffa3
   74868:	ldr	r0, [sp, #300]	; 0x12c
   7486c:	movw	r1, #34953	; 0x8889
   74870:	movt	r1, #34952	; 0x8888
   74874:	smmla	r0, r0, r1, r0
   74878:	asr	r2, r0, #5
   7487c:	add	r0, r2, r0, lsr #31
   74880:	smmla	r0, r0, r1, r0
   74884:	asr	r2, r0, #5
   74888:	add	r0, r2, r0, lsr #31
   7488c:	str	r0, [sp, #296]	; 0x128
   74890:	ldr	r0, [sp, #300]	; 0x12c
   74894:	smmla	r0, r0, r1, r0
   74898:	asr	r2, r0, #5
   7489c:	add	r0, r2, r0, lsr #31
   748a0:	smmla	r2, r0, r1, r0
   748a4:	asr	r3, r2, #5
   748a8:	add	r2, r3, r2, lsr #31
   748ac:	rsb	r2, r2, r2, lsl #4
   748b0:	sub	r0, r0, r2, lsl #2
   748b4:	str	r0, [sp, #292]	; 0x124
   748b8:	ldr	r0, [sp, #300]	; 0x12c
   748bc:	smmla	r1, r0, r1, r0
   748c0:	asr	r2, r1, #5
   748c4:	add	r1, r2, r1, lsr #31
   748c8:	rsb	r1, r1, r1, lsl #4
   748cc:	sub	r0, r0, r1, lsl #2
   748d0:	str	r0, [sp, #288]	; 0x120
   748d4:	ldr	r0, [fp, #-128]	; 0xffffff80
   748d8:	cmp	r0, #3
   748dc:	str	r0, [sp, #36]	; 0x24
   748e0:	bhi	749ec <__assert_fail@plt+0x61e34>
   748e4:	add	r0, pc, #8
   748e8:	ldr	r1, [sp, #36]	; 0x24
   748ec:	ldr	r0, [r0, r1, lsl #2]
   748f0:	mov	pc, r0
   748f4:	andeq	r4, r7, r4, lsl #18
   748f8:	andeq	r4, r7, r4, lsr r9
   748fc:	andeq	r4, r7, r8, ror #18
   74900:	andeq	r4, r7, ip, lsr #19
   74904:	b	74908 <__assert_fail@plt+0x61d50>
   74908:	movw	r0, #5
   7490c:	str	r0, [fp, #-84]	; 0xffffffac
   74910:	movw	r0, #0
   74914:	str	r0, [fp, #-100]	; 0xffffff9c
   74918:	ldr	r0, [sp, #296]	; 0x128
   7491c:	movw	r1, #100	; 0x64
   74920:	mul	r0, r0, r1
   74924:	ldr	r1, [sp, #292]	; 0x124
   74928:	add	r0, r0, r1
   7492c:	str	r0, [fp, #-92]	; 0xffffffa4
   74930:	b	72ed8 <__assert_fail@plt+0x60320>
   74934:	b	74938 <__assert_fail@plt+0x61d80>
   74938:	b	7493c <__assert_fail@plt+0x61d84>
   7493c:	movw	r0, #6
   74940:	str	r0, [fp, #-84]	; 0xffffffac
   74944:	movw	r0, #4
   74948:	str	r0, [fp, #-100]	; 0xffffff9c
   7494c:	ldr	r0, [sp, #296]	; 0x128
   74950:	movw	r1, #100	; 0x64
   74954:	mul	r0, r0, r1
   74958:	ldr	r1, [sp, #292]	; 0x124
   7495c:	add	r0, r0, r1
   74960:	str	r0, [fp, #-92]	; 0xffffffa4
   74964:	b	72ed8 <__assert_fail@plt+0x60320>
   74968:	b	7496c <__assert_fail@plt+0x61db4>
   7496c:	b	74970 <__assert_fail@plt+0x61db8>
   74970:	movw	r0, #9
   74974:	str	r0, [fp, #-84]	; 0xffffffac
   74978:	movw	r0, #20
   7497c:	str	r0, [fp, #-100]	; 0xffffff9c
   74980:	ldr	r0, [sp, #296]	; 0x128
   74984:	movw	r1, #10000	; 0x2710
   74988:	mul	r0, r0, r1
   7498c:	ldr	r1, [sp, #292]	; 0x124
   74990:	movw	r2, #100	; 0x64
   74994:	mul	r1, r1, r2
   74998:	add	r0, r0, r1
   7499c:	ldr	r1, [sp, #288]	; 0x120
   749a0:	add	r0, r0, r1
   749a4:	str	r0, [fp, #-92]	; 0xffffffa4
   749a8:	b	72ed8 <__assert_fail@plt+0x60320>
   749ac:	ldr	r0, [sp, #288]	; 0x120
   749b0:	cmp	r0, #0
   749b4:	beq	749bc <__assert_fail@plt+0x61e04>
   749b8:	b	7496c <__assert_fail@plt+0x61db4>
   749bc:	ldr	r0, [sp, #292]	; 0x124
   749c0:	cmp	r0, #0
   749c4:	beq	749cc <__assert_fail@plt+0x61e14>
   749c8:	b	74938 <__assert_fail@plt+0x61d80>
   749cc:	b	749d0 <__assert_fail@plt+0x61e18>
   749d0:	movw	r0, #3
   749d4:	str	r0, [fp, #-84]	; 0xffffffac
   749d8:	movw	r0, #0
   749dc:	str	r0, [fp, #-100]	; 0xffffff9c
   749e0:	ldr	r0, [sp, #296]	; 0x128
   749e4:	str	r0, [fp, #-92]	; 0xffffffa4
   749e8:	b	72ed8 <__assert_fail@plt+0x60320>
   749ec:	b	74a08 <__assert_fail@plt+0x61e50>
   749f0:	b	749f4 <__assert_fail@plt+0x61e3c>
   749f4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   749f8:	mvn	r1, #0
   749fc:	add	r0, r0, r1
   74a00:	str	r0, [fp, #-72]	; 0xffffffb8
   74a04:	b	74a08 <__assert_fail@plt+0x61e50>
   74a08:	b	74a0c <__assert_fail@plt+0x61e54>
   74a0c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   74a10:	ldr	r1, [fp, #-160]	; 0xffffff60
   74a14:	sub	r0, r0, r1
   74a18:	add	r0, r0, #1
   74a1c:	str	r0, [sp, #284]	; 0x11c
   74a20:	ldr	r0, [fp, #-76]	; 0xffffffb4
   74a24:	cmp	r0, #45	; 0x2d
   74a28:	beq	74a38 <__assert_fail@plt+0x61e80>
   74a2c:	ldr	r0, [fp, #16]
   74a30:	cmp	r0, #0
   74a34:	bge	74a44 <__assert_fail@plt+0x61e8c>
   74a38:	movw	r0, #0
   74a3c:	str	r0, [sp, #32]
   74a40:	b	74a4c <__assert_fail@plt+0x61e94>
   74a44:	ldr	r0, [fp, #16]
   74a48:	str	r0, [sp, #32]
   74a4c:	ldr	r0, [sp, #32]
   74a50:	str	r0, [sp, #280]	; 0x118
   74a54:	ldr	r0, [sp, #284]	; 0x11c
   74a58:	ldr	r1, [sp, #280]	; 0x118
   74a5c:	cmp	r0, r1
   74a60:	bcs	74a70 <__assert_fail@plt+0x61eb8>
   74a64:	ldr	r0, [sp, #280]	; 0x118
   74a68:	str	r0, [sp, #28]
   74a6c:	b	74a78 <__assert_fail@plt+0x61ec0>
   74a70:	ldr	r0, [sp, #284]	; 0x11c
   74a74:	str	r0, [sp, #28]
   74a78:	ldr	r0, [sp, #28]
   74a7c:	str	r0, [sp, #276]	; 0x114
   74a80:	ldr	r0, [sp, #276]	; 0x114
   74a84:	ldr	r1, [fp, #-36]	; 0xffffffdc
   74a88:	ldr	r2, [fp, #-64]	; 0xffffffc0
   74a8c:	sub	r1, r1, r2
   74a90:	cmp	r0, r1
   74a94:	bcc	74ab0 <__assert_fail@plt+0x61ef8>
   74a98:	bl	128d0 <__errno_location@plt>
   74a9c:	movw	r1, #34	; 0x22
   74aa0:	str	r1, [r0]
   74aa4:	movw	r0, #0
   74aa8:	str	r0, [fp, #-28]	; 0xffffffe4
   74aac:	b	74c20 <__assert_fail@plt+0x62068>
   74ab0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   74ab4:	movw	r1, #0
   74ab8:	cmp	r0, r1
   74abc:	beq	74bac <__assert_fail@plt+0x61ff4>
   74ac0:	ldr	r0, [sp, #284]	; 0x11c
   74ac4:	ldr	r1, [sp, #280]	; 0x118
   74ac8:	cmp	r0, r1
   74acc:	bcs	74b48 <__assert_fail@plt+0x61f90>
   74ad0:	ldr	r0, [sp, #280]	; 0x118
   74ad4:	ldr	r1, [sp, #284]	; 0x11c
   74ad8:	sub	r0, r0, r1
   74adc:	str	r0, [sp, #272]	; 0x110
   74ae0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   74ae4:	cmp	r0, #48	; 0x30
   74ae8:	beq	74af8 <__assert_fail@plt+0x61f40>
   74aec:	ldr	r0, [fp, #-76]	; 0xffffffb4
   74af0:	cmp	r0, #43	; 0x2b
   74af4:	bne	74b20 <__assert_fail@plt+0x61f68>
   74af8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   74afc:	ldr	r2, [sp, #272]	; 0x110
   74b00:	movw	r1, #48	; 0x30
   74b04:	and	r1, r1, #255	; 0xff
   74b08:	bl	12900 <memset@plt>
   74b0c:	ldr	r0, [sp, #272]	; 0x110
   74b10:	ldr	r1, [fp, #-68]	; 0xffffffbc
   74b14:	add	r0, r1, r0
   74b18:	str	r0, [fp, #-68]	; 0xffffffbc
   74b1c:	b	74b44 <__assert_fail@plt+0x61f8c>
   74b20:	ldr	r0, [fp, #-68]	; 0xffffffbc
   74b24:	ldr	r2, [sp, #272]	; 0x110
   74b28:	movw	r1, #32
   74b2c:	and	r1, r1, #255	; 0xff
   74b30:	bl	12900 <memset@plt>
   74b34:	ldr	r0, [sp, #272]	; 0x110
   74b38:	ldr	r1, [fp, #-68]	; 0xffffffbc
   74b3c:	add	r0, r1, r0
   74b40:	str	r0, [fp, #-68]	; 0xffffffbc
   74b44:	b	74b48 <__assert_fail@plt+0x61f90>
   74b48:	ldrb	r0, [fp, #-123]	; 0xffffff85
   74b4c:	tst	r0, #1
   74b50:	beq	74b68 <__assert_fail@plt+0x61fb0>
   74b54:	ldr	r0, [fp, #-68]	; 0xffffffbc
   74b58:	ldr	r1, [fp, #-160]	; 0xffffff60
   74b5c:	ldr	r2, [sp, #284]	; 0x11c
   74b60:	bl	74c30 <__assert_fail@plt+0x62078>
   74b64:	b	74b9c <__assert_fail@plt+0x61fe4>
   74b68:	ldrb	r0, [fp, #-124]	; 0xffffff84
   74b6c:	tst	r0, #1
   74b70:	beq	74b88 <__assert_fail@plt+0x61fd0>
   74b74:	ldr	r0, [fp, #-68]	; 0xffffffbc
   74b78:	ldr	r1, [fp, #-160]	; 0xffffff60
   74b7c:	ldr	r2, [sp, #284]	; 0x11c
   74b80:	bl	74c94 <__assert_fail@plt+0x620dc>
   74b84:	b	74b98 <__assert_fail@plt+0x61fe0>
   74b88:	ldr	r0, [fp, #-68]	; 0xffffffbc
   74b8c:	ldr	r1, [fp, #-160]	; 0xffffff60
   74b90:	ldr	r2, [sp, #284]	; 0x11c
   74b94:	bl	125c4 <memcpy@plt>
   74b98:	b	74b9c <__assert_fail@plt+0x61fe4>
   74b9c:	ldr	r0, [sp, #284]	; 0x11c
   74ba0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   74ba4:	add	r0, r1, r0
   74ba8:	str	r0, [fp, #-68]	; 0xffffffbc
   74bac:	ldr	r0, [sp, #276]	; 0x114
   74bb0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   74bb4:	add	r0, r1, r0
   74bb8:	str	r0, [fp, #-64]	; 0xffffffc0
   74bbc:	b	74bc0 <__assert_fail@plt+0x62008>
   74bc0:	b	74bc4 <__assert_fail@plt+0x6200c>
   74bc4:	mvn	r0, #0
   74bc8:	str	r0, [fp, #16]
   74bcc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   74bd0:	add	r0, r0, #1
   74bd4:	str	r0, [fp, #-72]	; 0xffffffb8
   74bd8:	b	714f0 <__assert_fail@plt+0x5e938>
   74bdc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   74be0:	movw	r1, #0
   74be4:	cmp	r0, r1
   74be8:	beq	74c04 <__assert_fail@plt+0x6204c>
   74bec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   74bf0:	cmp	r0, #0
   74bf4:	beq	74c04 <__assert_fail@plt+0x6204c>
   74bf8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   74bfc:	movw	r1, #0
   74c00:	strb	r1, [r0]
   74c04:	ldr	r0, [fp, #-52]	; 0xffffffcc
   74c08:	str	r0, [sp, #24]
   74c0c:	bl	128d0 <__errno_location@plt>
   74c10:	ldr	r1, [sp, #24]
   74c14:	str	r1, [r0]
   74c18:	ldr	r0, [fp, #-64]	; 0xffffffc0
   74c1c:	str	r0, [fp, #-28]	; 0xffffffe4
   74c20:	ldr	r0, [fp, #-28]	; 0xffffffe4
   74c24:	sub	sp, fp, #24
   74c28:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   74c2c:			; <UNDEFINED> instruction: 0xfffff894
   74c30:	push	{fp, lr}
   74c34:	mov	fp, sp
   74c38:	sub	sp, sp, #16
   74c3c:	str	r0, [fp, #-4]
   74c40:	str	r1, [sp, #8]
   74c44:	str	r2, [sp, #4]
   74c48:	ldr	r0, [sp, #4]
   74c4c:	mvn	r1, #0
   74c50:	add	r1, r0, r1
   74c54:	str	r1, [sp, #4]
   74c58:	cmp	r0, #0
   74c5c:	bls	74c88 <__assert_fail@plt+0x620d0>
   74c60:	ldr	r0, [sp, #8]
   74c64:	ldr	r1, [sp, #4]
   74c68:	add	r0, r0, r1
   74c6c:	ldrb	r0, [r0]
   74c70:	bl	125dc <tolower@plt>
   74c74:	ldr	r1, [fp, #-4]
   74c78:	ldr	r2, [sp, #4]
   74c7c:	add	r1, r1, r2
   74c80:	strb	r0, [r1]
   74c84:	b	74c48 <__assert_fail@plt+0x62090>
   74c88:	ldr	r0, [fp, #-4]
   74c8c:	mov	sp, fp
   74c90:	pop	{fp, pc}
   74c94:	push	{fp, lr}
   74c98:	mov	fp, sp
   74c9c:	sub	sp, sp, #16
   74ca0:	str	r0, [fp, #-4]
   74ca4:	str	r1, [sp, #8]
   74ca8:	str	r2, [sp, #4]
   74cac:	ldr	r0, [sp, #4]
   74cb0:	mvn	r1, #0
   74cb4:	add	r1, r0, r1
   74cb8:	str	r1, [sp, #4]
   74cbc:	cmp	r0, #0
   74cc0:	bls	74cec <__assert_fail@plt+0x62134>
   74cc4:	ldr	r0, [sp, #8]
   74cc8:	ldr	r1, [sp, #4]
   74ccc:	add	r0, r0, r1
   74cd0:	ldrb	r0, [r0]
   74cd4:	bl	12a08 <toupper@plt>
   74cd8:	ldr	r1, [fp, #-4]
   74cdc:	ldr	r2, [sp, #4]
   74ce0:	add	r1, r1, r2
   74ce4:	strb	r0, [r1]
   74ce8:	b	74cac <__assert_fail@plt+0x620f4>
   74cec:	ldr	r0, [fp, #-4]
   74cf0:	mov	sp, fp
   74cf4:	pop	{fp, pc}
   74cf8:	sub	sp, sp, #12
   74cfc:	str	r0, [sp, #8]
   74d00:	str	r1, [sp, #4]
   74d04:	movw	r0, #378	; 0x17a
   74d08:	str	r0, [sp]
   74d0c:	ldr	r0, [sp, #8]
   74d10:	ldr	r1, [sp, #4]
   74d14:	sub	r1, r0, r1
   74d18:	ldr	r2, [sp]
   74d1c:	add	r1, r1, r2
   74d20:	add	r1, r1, #4
   74d24:	movw	r2, #9363	; 0x2493
   74d28:	movt	r2, #37449	; 0x9249
   74d2c:	smmla	r2, r1, r2, r1
   74d30:	asr	r3, r2, #2
   74d34:	add	r2, r3, r2, lsr #31
   74d38:	rsb	r2, r2, r2, lsl #3
   74d3c:	sub	r1, r1, r2
   74d40:	sub	r0, r0, r1
   74d44:	add	r0, r0, #4
   74d48:	sub	r0, r0, #1
   74d4c:	add	sp, sp, #12
   74d50:	bx	lr
   74d54:	push	{fp, lr}
   74d58:	mov	fp, sp
   74d5c:	sub	sp, sp, #48	; 0x30
   74d60:	ldr	ip, [pc, #176]	; 74e18 <__assert_fail@plt+0x62260>
   74d64:	str	r0, [fp, #-8]
   74d68:	str	r1, [fp, #-12]
   74d6c:	str	r2, [fp, #-16]
   74d70:	str	r3, [fp, #-20]	; 0xffffffec
   74d74:	ldr	r0, [fp, #-16]
   74d78:	orr	r0, r0, ip
   74d7c:	str	r0, [sp, #24]
   74d80:	ldr	r0, [fp, #-8]
   74d84:	ldr	r1, [fp, #-12]
   74d88:	ldr	r2, [sp, #24]
   74d8c:	bl	32480 <__assert_fail@plt+0x1f8c8>
   74d90:	str	r0, [sp, #20]
   74d94:	ldr	r0, [sp, #20]
   74d98:	cmp	r0, #0
   74d9c:	bge	74dac <__assert_fail@plt+0x621f4>
   74da0:	movw	r0, #0
   74da4:	str	r0, [fp, #-4]
   74da8:	b	74e0c <__assert_fail@plt+0x62254>
   74dac:	ldr	r0, [sp, #20]
   74db0:	bl	12a74 <fdopendir@plt>
   74db4:	str	r0, [sp, #16]
   74db8:	ldr	r0, [sp, #16]
   74dbc:	movw	r1, #0
   74dc0:	cmp	r0, r1
   74dc4:	beq	74dd8 <__assert_fail@plt+0x62220>
   74dc8:	ldr	r0, [sp, #20]
   74dcc:	ldr	r1, [fp, #-20]	; 0xffffffec
   74dd0:	str	r0, [r1]
   74dd4:	b	74e04 <__assert_fail@plt+0x6224c>
   74dd8:	bl	128d0 <__errno_location@plt>
   74ddc:	ldr	r0, [r0]
   74de0:	str	r0, [sp, #12]
   74de4:	ldr	r0, [sp, #20]
   74de8:	bl	12b70 <close@plt>
   74dec:	ldr	r1, [sp, #12]
   74df0:	str	r0, [sp, #8]
   74df4:	str	r1, [sp, #4]
   74df8:	bl	128d0 <__errno_location@plt>
   74dfc:	ldr	r1, [sp, #4]
   74e00:	str	r1, [r0]
   74e04:	ldr	r0, [sp, #16]
   74e08:	str	r0, [fp, #-4]
   74e0c:	ldr	r0, [fp, #-4]
   74e10:	mov	sp, fp
   74e14:	pop	{fp, pc}
   74e18:	andeq	r4, r8, r0, lsl #18
   74e1c:	push	{fp, lr}
   74e20:	mov	fp, sp
   74e24:	sub	sp, sp, #16
   74e28:	str	r0, [fp, #-4]
   74e2c:	str	r1, [sp, #8]
   74e30:	str	r2, [sp, #4]
   74e34:	ldr	r0, [fp, #-4]
   74e38:	ldr	r1, [sp, #8]
   74e3c:	ldr	r2, [sp, #4]
   74e40:	bl	74e4c <__assert_fail@plt+0x62294>
   74e44:	mov	sp, fp
   74e48:	pop	{fp, pc}
   74e4c:	push	{fp, lr}
   74e50:	mov	fp, sp
   74e54:	sub	sp, sp, #24
   74e58:	str	r0, [fp, #-8]
   74e5c:	str	r1, [sp, #12]
   74e60:	str	r2, [sp, #8]
   74e64:	ldr	r0, [fp, #-8]
   74e68:	bl	74f4c <__assert_fail@plt+0x62394>
   74e6c:	str	r0, [sp, #4]
   74e70:	ldr	r0, [sp, #4]
   74e74:	movw	r1, #0
   74e78:	cmp	r0, r1
   74e7c:	bne	74ea4 <__assert_fail@plt+0x622ec>
   74e80:	ldr	r0, [sp, #8]
   74e84:	cmp	r0, #0
   74e88:	bls	74e98 <__assert_fail@plt+0x622e0>
   74e8c:	ldr	r0, [sp, #12]
   74e90:	movw	r1, #0
   74e94:	strb	r1, [r0]
   74e98:	movw	r0, #22
   74e9c:	str	r0, [fp, #-4]
   74ea0:	b	74f20 <__assert_fail@plt+0x62368>
   74ea4:	ldr	r0, [sp, #4]
   74ea8:	bl	12888 <strlen@plt>
   74eac:	str	r0, [sp]
   74eb0:	ldr	r0, [sp]
   74eb4:	ldr	r1, [sp, #8]
   74eb8:	cmp	r0, r1
   74ebc:	bcs	74ee0 <__assert_fail@plt+0x62328>
   74ec0:	ldr	r0, [sp, #12]
   74ec4:	ldr	r1, [sp, #4]
   74ec8:	ldr	r2, [sp]
   74ecc:	add	r2, r2, #1
   74ed0:	bl	125c4 <memcpy@plt>
   74ed4:	movw	r0, #0
   74ed8:	str	r0, [fp, #-4]
   74edc:	b	74f20 <__assert_fail@plt+0x62368>
   74ee0:	ldr	r0, [sp, #8]
   74ee4:	cmp	r0, #0
   74ee8:	bls	74f18 <__assert_fail@plt+0x62360>
   74eec:	ldr	r0, [sp, #12]
   74ef0:	ldr	r1, [sp, #4]
   74ef4:	ldr	r2, [sp, #8]
   74ef8:	sub	r2, r2, #1
   74efc:	bl	125c4 <memcpy@plt>
   74f00:	ldr	r0, [sp, #12]
   74f04:	ldr	r1, [sp, #8]
   74f08:	sub	r1, r1, #1
   74f0c:	add	r0, r0, r1
   74f10:	movw	r1, #0
   74f14:	strb	r1, [r0]
   74f18:	movw	r0, #34	; 0x22
   74f1c:	str	r0, [fp, #-4]
   74f20:	ldr	r0, [fp, #-4]
   74f24:	mov	sp, fp
   74f28:	pop	{fp, pc}
   74f2c:	push	{fp, lr}
   74f30:	mov	fp, sp
   74f34:	sub	sp, sp, #8
   74f38:	str	r0, [sp, #4]
   74f3c:	ldr	r0, [sp, #4]
   74f40:	bl	74f4c <__assert_fail@plt+0x62394>
   74f44:	mov	sp, fp
   74f48:	pop	{fp, pc}
   74f4c:	push	{fp, lr}
   74f50:	mov	fp, sp
   74f54:	sub	sp, sp, #8
   74f58:	str	r0, [sp, #4]
   74f5c:	ldr	r0, [sp, #4]
   74f60:	movw	r1, #0
   74f64:	bl	129e4 <setlocale@plt>
   74f68:	str	r0, [sp]
   74f6c:	ldr	r0, [sp]
   74f70:	mov	sp, fp
   74f74:	pop	{fp, pc}
   74f78:	eor	r1, r1, #-2147483648	; 0x80000000
   74f7c:	b	74f84 <__assert_fail@plt+0x623cc>
   74f80:	eor	r3, r3, #-2147483648	; 0x80000000
   74f84:	push	{r4, r5, lr}
   74f88:	lsl	r4, r1, #1
   74f8c:	lsl	r5, r3, #1
   74f90:	teq	r4, r5
   74f94:	teqeq	r0, r2
   74f98:	orrsne	ip, r4, r0
   74f9c:	orrsne	ip, r5, r2
   74fa0:	mvnsne	ip, r4, asr #21
   74fa4:	mvnsne	ip, r5, asr #21
   74fa8:	beq	75194 <__assert_fail@plt+0x625dc>
   74fac:	lsr	r4, r4, #21
   74fb0:	rsbs	r5, r4, r5, lsr #21
   74fb4:	rsblt	r5, r5, #0
   74fb8:	ble	74fd8 <__assert_fail@plt+0x62420>
   74fbc:	add	r4, r4, r5
   74fc0:	eor	r2, r0, r2
   74fc4:	eor	r3, r1, r3
   74fc8:	eor	r0, r2, r0
   74fcc:	eor	r1, r3, r1
   74fd0:	eor	r2, r0, r2
   74fd4:	eor	r3, r1, r3
   74fd8:	cmp	r5, #54	; 0x36
   74fdc:	pophi	{r4, r5, pc}
   74fe0:	tst	r1, #-2147483648	; 0x80000000
   74fe4:	lsl	r1, r1, #12
   74fe8:	mov	ip, #1048576	; 0x100000
   74fec:	orr	r1, ip, r1, lsr #12
   74ff0:	beq	74ffc <__assert_fail@plt+0x62444>
   74ff4:	rsbs	r0, r0, #0
   74ff8:	rsc	r1, r1, #0
   74ffc:	tst	r3, #-2147483648	; 0x80000000
   75000:	lsl	r3, r3, #12
   75004:	orr	r3, ip, r3, lsr #12
   75008:	beq	75014 <__assert_fail@plt+0x6245c>
   7500c:	rsbs	r2, r2, #0
   75010:	rsc	r3, r3, #0
   75014:	teq	r4, r5
   75018:	beq	7517c <__assert_fail@plt+0x625c4>
   7501c:	sub	r4, r4, #1
   75020:	rsbs	lr, r5, #32
   75024:	blt	75040 <__assert_fail@plt+0x62488>
   75028:	lsl	ip, r2, lr
   7502c:	adds	r0, r0, r2, lsr r5
   75030:	adc	r1, r1, #0
   75034:	adds	r0, r0, r3, lsl lr
   75038:	adcs	r1, r1, r3, asr r5
   7503c:	b	7505c <__assert_fail@plt+0x624a4>
   75040:	sub	r5, r5, #32
   75044:	add	lr, lr, #32
   75048:	cmp	r2, #1
   7504c:	lsl	ip, r3, lr
   75050:	orrcs	ip, ip, #2
   75054:	adds	r0, r0, r3, asr r5
   75058:	adcs	r1, r1, r3, asr #31
   7505c:	and	r5, r1, #-2147483648	; 0x80000000
   75060:	bpl	75070 <__assert_fail@plt+0x624b8>
   75064:	rsbs	ip, ip, #0
   75068:	rscs	r0, r0, #0
   7506c:	rsc	r1, r1, #0
   75070:	cmp	r1, #1048576	; 0x100000
   75074:	bcc	750b4 <__assert_fail@plt+0x624fc>
   75078:	cmp	r1, #2097152	; 0x200000
   7507c:	bcc	7509c <__assert_fail@plt+0x624e4>
   75080:	lsrs	r1, r1, #1
   75084:	rrxs	r0, r0
   75088:	rrx	ip, ip
   7508c:	add	r4, r4, #1
   75090:	lsl	r2, r4, #21
   75094:	cmn	r2, #4194304	; 0x400000
   75098:	bcs	751f4 <__assert_fail@plt+0x6263c>
   7509c:	cmp	ip, #-2147483648	; 0x80000000
   750a0:	lsrseq	ip, r0, #1
   750a4:	adcs	r0, r0, #0
   750a8:	adc	r1, r1, r4, lsl #20
   750ac:	orr	r1, r1, r5
   750b0:	pop	{r4, r5, pc}
   750b4:	lsls	ip, ip, #1
   750b8:	adcs	r0, r0, r0
   750bc:	adc	r1, r1, r1
   750c0:	tst	r1, #1048576	; 0x100000
   750c4:	sub	r4, r4, #1
   750c8:	bne	7509c <__assert_fail@plt+0x624e4>
   750cc:	teq	r1, #0
   750d0:	moveq	r1, r0
   750d4:	moveq	r0, #0
   750d8:	clz	r3, r1
   750dc:	addeq	r3, r3, #32
   750e0:	sub	r3, r3, #11
   750e4:	subs	r2, r3, #32
   750e8:	bge	7510c <__assert_fail@plt+0x62554>
   750ec:	adds	r2, r2, #12
   750f0:	ble	75108 <__assert_fail@plt+0x62550>
   750f4:	add	ip, r2, #20
   750f8:	rsb	r2, r2, #12
   750fc:	lsl	r0, r1, ip
   75100:	lsr	r1, r1, r2
   75104:	b	7511c <__assert_fail@plt+0x62564>
   75108:	add	r2, r2, #20
   7510c:	rsble	ip, r2, #32
   75110:	lsl	r1, r1, r2
   75114:	orrle	r1, r1, r0, lsr ip
   75118:	lslle	r0, r0, r2
   7511c:	subs	r4, r4, r3
   75120:	addge	r1, r1, r4, lsl #20
   75124:	orrge	r1, r1, r5
   75128:	popge	{r4, r5, pc}
   7512c:	mvn	r4, r4
   75130:	subs	r4, r4, #31
   75134:	bge	75170 <__assert_fail@plt+0x625b8>
   75138:	adds	r4, r4, #12
   7513c:	bgt	75158 <__assert_fail@plt+0x625a0>
   75140:	add	r4, r4, #20
   75144:	rsb	r2, r4, #32
   75148:	lsr	r0, r0, r4
   7514c:	orr	r0, r0, r1, lsl r2
   75150:	orr	r1, r5, r1, lsr r4
   75154:	pop	{r4, r5, pc}
   75158:	rsb	r4, r4, #12
   7515c:	rsb	r2, r4, #32
   75160:	lsr	r0, r0, r2
   75164:	orr	r0, r0, r1, lsl r4
   75168:	mov	r1, r5
   7516c:	pop	{r4, r5, pc}
   75170:	lsr	r0, r1, r4
   75174:	mov	r1, r5
   75178:	pop	{r4, r5, pc}
   7517c:	teq	r4, #0
   75180:	eor	r3, r3, #1048576	; 0x100000
   75184:	eoreq	r1, r1, #1048576	; 0x100000
   75188:	addeq	r4, r4, #1
   7518c:	subne	r5, r5, #1
   75190:	b	7501c <__assert_fail@plt+0x62464>
   75194:	mvns	ip, r4, asr #21
   75198:	mvnsne	ip, r5, asr #21
   7519c:	beq	75204 <__assert_fail@plt+0x6264c>
   751a0:	teq	r4, r5
   751a4:	teqeq	r0, r2
   751a8:	beq	751bc <__assert_fail@plt+0x62604>
   751ac:	orrs	ip, r4, r0
   751b0:	moveq	r1, r3
   751b4:	moveq	r0, r2
   751b8:	pop	{r4, r5, pc}
   751bc:	teq	r1, r3
   751c0:	movne	r1, #0
   751c4:	movne	r0, #0
   751c8:	popne	{r4, r5, pc}
   751cc:	lsrs	ip, r4, #21
   751d0:	bne	751e4 <__assert_fail@plt+0x6262c>
   751d4:	lsls	r0, r0, #1
   751d8:	adcs	r1, r1, r1
   751dc:	orrcs	r1, r1, #-2147483648	; 0x80000000
   751e0:	pop	{r4, r5, pc}
   751e4:	adds	r4, r4, #4194304	; 0x400000
   751e8:	addcc	r1, r1, #1048576	; 0x100000
   751ec:	popcc	{r4, r5, pc}
   751f0:	and	r5, r1, #-2147483648	; 0x80000000
   751f4:	orr	r1, r5, #2130706432	; 0x7f000000
   751f8:	orr	r1, r1, #15728640	; 0xf00000
   751fc:	mov	r0, #0
   75200:	pop	{r4, r5, pc}
   75204:	mvns	ip, r4, asr #21
   75208:	movne	r1, r3
   7520c:	movne	r0, r2
   75210:	mvnseq	ip, r5, asr #21
   75214:	movne	r3, r1
   75218:	movne	r2, r0
   7521c:	orrs	r4, r0, r1, lsl #12
   75220:	orrseq	r5, r2, r3, lsl #12
   75224:	teqeq	r1, r3
   75228:	orrne	r1, r1, #524288	; 0x80000
   7522c:	pop	{r4, r5, pc}
   75230:	teq	r0, #0
   75234:	moveq	r1, #0
   75238:	bxeq	lr
   7523c:	push	{r4, r5, lr}
   75240:	mov	r4, #1024	; 0x400
   75244:	add	r4, r4, #50	; 0x32
   75248:	mov	r5, #0
   7524c:	mov	r1, #0
   75250:	b	750cc <__assert_fail@plt+0x62514>
   75254:	teq	r0, #0
   75258:	moveq	r1, #0
   7525c:	bxeq	lr
   75260:	push	{r4, r5, lr}
   75264:	mov	r4, #1024	; 0x400
   75268:	add	r4, r4, #50	; 0x32
   7526c:	ands	r5, r0, #-2147483648	; 0x80000000
   75270:	rsbmi	r0, r0, #0
   75274:	mov	r1, #0
   75278:	b	750cc <__assert_fail@plt+0x62514>
   7527c:	lsls	r2, r0, #1
   75280:	asr	r1, r2, #3
   75284:	rrx	r1, r1
   75288:	lsl	r0, r2, #28
   7528c:	andsne	r3, r2, #-16777216	; 0xff000000
   75290:	teqne	r3, #-16777216	; 0xff000000
   75294:	eorne	r1, r1, #939524096	; 0x38000000
   75298:	bxne	lr
   7529c:	bics	r2, r2, #-16777216	; 0xff000000
   752a0:	bxeq	lr
   752a4:	teq	r3, #-16777216	; 0xff000000
   752a8:	orreq	r1, r1, #524288	; 0x80000
   752ac:	bxeq	lr
   752b0:	push	{r4, r5, lr}
   752b4:	mov	r4, #896	; 0x380
   752b8:	and	r5, r1, #-2147483648	; 0x80000000
   752bc:	bic	r1, r1, #-2147483648	; 0x80000000
   752c0:	b	750cc <__assert_fail@plt+0x62514>
   752c4:	orrs	r2, r0, r1
   752c8:	bxeq	lr
   752cc:	push	{r4, r5, lr}
   752d0:	mov	r5, #0
   752d4:	b	752f4 <__assert_fail@plt+0x6273c>
   752d8:	orrs	r2, r0, r1
   752dc:	bxeq	lr
   752e0:	push	{r4, r5, lr}
   752e4:	ands	r5, r1, #-2147483648	; 0x80000000
   752e8:	bpl	752f4 <__assert_fail@plt+0x6273c>
   752ec:	rsbs	r0, r0, #0
   752f0:	rsc	r1, r1, #0
   752f4:	mov	r4, #1024	; 0x400
   752f8:	add	r4, r4, #50	; 0x32
   752fc:	lsrs	ip, r1, #22
   75300:	beq	75070 <__assert_fail@plt+0x624b8>
   75304:	mov	r2, #3
   75308:	lsrs	ip, ip, #3
   7530c:	addne	r2, r2, #3
   75310:	lsrs	ip, ip, #3
   75314:	addne	r2, r2, #3
   75318:	add	r2, r2, ip, lsr #3
   7531c:	rsb	r3, r2, #32
   75320:	lsl	ip, r0, r3
   75324:	lsr	r0, r0, r2
   75328:	orr	r0, r0, r1, lsl r3
   7532c:	lsr	r1, r1, r2
   75330:	add	r4, r4, r2
   75334:	b	75070 <__assert_fail@plt+0x624b8>
   75338:	cmp	r3, #0
   7533c:	cmpeq	r2, #0
   75340:	bne	75364 <__assert_fail@plt+0x627ac>
   75344:	cmp	r1, #0
   75348:	movlt	r1, #-2147483648	; 0x80000000
   7534c:	movlt	r0, #0
   75350:	blt	75360 <__assert_fail@plt+0x627a8>
   75354:	cmpeq	r0, #0
   75358:	mvnne	r1, #-2147483648	; 0x80000000
   7535c:	mvnne	r0, #0
   75360:	b	75448 <__assert_fail@plt+0x62890>
   75364:	sub	sp, sp, #8
   75368:	push	{sp, lr}
   7536c:	cmp	r1, #0
   75370:	blt	75390 <__assert_fail@plt+0x627d8>
   75374:	cmp	r3, #0
   75378:	blt	753c4 <__assert_fail@plt+0x6280c>
   7537c:	bl	75498 <__assert_fail@plt+0x628e0>
   75380:	ldr	lr, [sp, #4]
   75384:	add	sp, sp, #8
   75388:	pop	{r2, r3}
   7538c:	bx	lr
   75390:	rsbs	r0, r0, #0
   75394:	sbc	r1, r1, r1, lsl #1
   75398:	cmp	r3, #0
   7539c:	blt	753e8 <__assert_fail@plt+0x62830>
   753a0:	bl	75498 <__assert_fail@plt+0x628e0>
   753a4:	ldr	lr, [sp, #4]
   753a8:	add	sp, sp, #8
   753ac:	pop	{r2, r3}
   753b0:	rsbs	r0, r0, #0
   753b4:	sbc	r1, r1, r1, lsl #1
   753b8:	rsbs	r2, r2, #0
   753bc:	sbc	r3, r3, r3, lsl #1
   753c0:	bx	lr
   753c4:	rsbs	r2, r2, #0
   753c8:	sbc	r3, r3, r3, lsl #1
   753cc:	bl	75498 <__assert_fail@plt+0x628e0>
   753d0:	ldr	lr, [sp, #4]
   753d4:	add	sp, sp, #8
   753d8:	pop	{r2, r3}
   753dc:	rsbs	r0, r0, #0
   753e0:	sbc	r1, r1, r1, lsl #1
   753e4:	bx	lr
   753e8:	rsbs	r2, r2, #0
   753ec:	sbc	r3, r3, r3, lsl #1
   753f0:	bl	75498 <__assert_fail@plt+0x628e0>
   753f4:	ldr	lr, [sp, #4]
   753f8:	add	sp, sp, #8
   753fc:	pop	{r2, r3}
   75400:	rsbs	r2, r2, #0
   75404:	sbc	r3, r3, r3, lsl #1
   75408:	bx	lr
   7540c:	cmp	r3, #0
   75410:	cmpeq	r2, #0
   75414:	bne	7542c <__assert_fail@plt+0x62874>
   75418:	cmp	r1, #0
   7541c:	cmpeq	r0, #0
   75420:	mvnne	r1, #0
   75424:	mvnne	r0, #0
   75428:	b	75448 <__assert_fail@plt+0x62890>
   7542c:	sub	sp, sp, #8
   75430:	push	{sp, lr}
   75434:	bl	75498 <__assert_fail@plt+0x628e0>
   75438:	ldr	lr, [sp, #4]
   7543c:	add	sp, sp, #8
   75440:	pop	{r2, r3}
   75444:	bx	lr
   75448:	push	{r1, lr}
   7544c:	mov	r0, #8
   75450:	bl	12480 <raise@plt>
   75454:	pop	{r1, pc}
   75458:	vmov	d6, r0, r1
   7545c:	vldr	d7, [pc, #36]	; 75488 <__assert_fail@plt+0x628d0>
   75460:	vldr	d5, [pc, #40]	; 75490 <__assert_fail@plt+0x628d8>
   75464:	vmul.f64	d7, d6, d7
   75468:	vcvt.u32.f64	s14, d7
   7546c:	vcvt.f64.u32	d4, s14
   75470:	vmov	r1, s14
   75474:	vmls.f64	d6, d4, d5
   75478:	vcvt.u32.f64	s15, d6
   7547c:	vmov	r0, s15
   75480:	bx	lr
   75484:	nop			; (mov r0, r0)
   75488:	andeq	r0, r0, r0
   7548c:	ldclcc	0, cr0, [r0]
   75490:	andeq	r0, r0, r0
   75494:	mvnsmi	r0, r0
   75498:	cmp	r1, r3
   7549c:	cmpeq	r0, r2
   754a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   754a4:	mov	r4, r0
   754a8:	movcc	r0, #0
   754ac:	mov	r5, r1
   754b0:	ldr	lr, [sp, #36]	; 0x24
   754b4:	movcc	r1, r0
   754b8:	bcc	755b4 <__assert_fail@plt+0x629fc>
   754bc:	cmp	r3, #0
   754c0:	clzeq	ip, r2
   754c4:	clzne	ip, r3
   754c8:	addeq	ip, ip, #32
   754cc:	cmp	r5, #0
   754d0:	clzeq	r1, r4
   754d4:	addeq	r1, r1, #32
   754d8:	clzne	r1, r5
   754dc:	sub	ip, ip, r1
   754e0:	sub	sl, ip, #32
   754e4:	lsl	r9, r3, ip
   754e8:	rsb	fp, ip, #32
   754ec:	orr	r9, r9, r2, lsl sl
   754f0:	orr	r9, r9, r2, lsr fp
   754f4:	lsl	r8, r2, ip
   754f8:	cmp	r5, r9
   754fc:	cmpeq	r4, r8
   75500:	movcc	r0, #0
   75504:	movcc	r1, r0
   75508:	bcc	75524 <__assert_fail@plt+0x6296c>
   7550c:	mov	r0, #1
   75510:	subs	r4, r4, r8
   75514:	lsl	r1, r0, sl
   75518:	orr	r1, r1, r0, lsr fp
   7551c:	lsl	r0, r0, ip
   75520:	sbc	r5, r5, r9
   75524:	cmp	ip, #0
   75528:	beq	755b4 <__assert_fail@plt+0x629fc>
   7552c:	lsr	r6, r8, #1
   75530:	orr	r6, r6, r9, lsl #31
   75534:	lsr	r7, r9, #1
   75538:	mov	r2, ip
   7553c:	b	75560 <__assert_fail@plt+0x629a8>
   75540:	subs	r3, r4, r6
   75544:	sbc	r8, r5, r7
   75548:	adds	r3, r3, r3
   7554c:	adc	r8, r8, r8
   75550:	adds	r4, r3, #1
   75554:	adc	r5, r8, #0
   75558:	subs	r2, r2, #1
   7555c:	beq	7557c <__assert_fail@plt+0x629c4>
   75560:	cmp	r5, r7
   75564:	cmpeq	r4, r6
   75568:	bcs	75540 <__assert_fail@plt+0x62988>
   7556c:	adds	r4, r4, r4
   75570:	adc	r5, r5, r5
   75574:	subs	r2, r2, #1
   75578:	bne	75560 <__assert_fail@plt+0x629a8>
   7557c:	lsr	r3, r4, ip
   75580:	orr	r3, r3, r5, lsl fp
   75584:	lsr	r2, r5, ip
   75588:	orr	r3, r3, r5, lsr sl
   7558c:	adds	r0, r0, r4
   75590:	mov	r4, r3
   75594:	lsl	r3, r2, ip
   75598:	orr	r3, r3, r4, lsl sl
   7559c:	lsl	ip, r4, ip
   755a0:	orr	r3, r3, r4, lsr fp
   755a4:	adc	r1, r1, r5
   755a8:	subs	r0, r0, ip
   755ac:	mov	r5, r2
   755b0:	sbc	r1, r1, r3
   755b4:	cmp	lr, #0
   755b8:	strdne	r4, [lr]
   755bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   755c0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   755c4:	mov	r7, r0
   755c8:	ldr	r6, [pc, #72]	; 75618 <__assert_fail@plt+0x62a60>
   755cc:	ldr	r5, [pc, #72]	; 7561c <__assert_fail@plt+0x62a64>
   755d0:	add	r6, pc, r6
   755d4:	add	r5, pc, r5
   755d8:	sub	r6, r6, r5
   755dc:	mov	r8, r1
   755e0:	mov	r9, r2
   755e4:	bl	1240c <pthread_mutex_unlock@plt-0x20>
   755e8:	asrs	r6, r6, #2
   755ec:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   755f0:	mov	r4, #0
   755f4:	add	r4, r4, #1
   755f8:	ldr	r3, [r5], #4
   755fc:	mov	r2, r9
   75600:	mov	r1, r8
   75604:	mov	r0, r7
   75608:	blx	r3
   7560c:	cmp	r6, r4
   75610:	bne	755f4 <__assert_fail@plt+0x62a3c>
   75614:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   75618:	andeq	r7, r1, r4, lsr #18
   7561c:	andeq	r7, r1, ip, lsl r9
   75620:	bx	lr
   75624:	ldr	r3, [pc, #12]	; 75638 <__assert_fail@plt+0x62a80>
   75628:	mov	r1, #0
   7562c:	add	r3, pc, r3
   75630:	ldr	r2, [r3]
   75634:	b	128f4 <__cxa_atexit@plt>
   75638:	andeq	r7, r1, r8, ror #24
   7563c:	mov	r2, r1
   75640:	mov	r1, r0
   75644:	mov	r0, #3
   75648:	b	12b1c <__xstat64@plt>
   7564c:	mov	r2, r1
   75650:	mov	r1, r0
   75654:	mov	r0, #3
   75658:	b	126e4 <__fxstat64@plt>
   7565c:	mov	r2, r1
   75660:	mov	r1, r0
   75664:	mov	r0, #3
   75668:	b	12b7c <__lxstat64@plt>
   7566c:	push	{lr}		; (str lr, [sp, #-4]!)
   75670:	sub	sp, sp, #12
   75674:	str	r3, [sp]
   75678:	mov	r3, r2
   7567c:	mov	r2, r1
   75680:	mov	r1, r0
   75684:	mov	r0, #3
   75688:	bl	126b4 <__fxstatat64@plt>
   7568c:	add	sp, sp, #12
   75690:	pop	{pc}		; (ldr pc, [sp], #4)

Disassembly of section .fini:

00075694 <.fini>:
   75694:	push	{r3, lr}
   75698:	pop	{r3, pc}
