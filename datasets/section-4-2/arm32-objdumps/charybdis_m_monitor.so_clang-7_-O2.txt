
../repos/charybdis/modules/.libs/m_monitor.so:     file format elf32-littlearm


Disassembly of section .init:

0000078c <_init>:
 78c:	push	{r3, lr}
 790:	bl	890 <call_weak_fn>
 794:	pop	{r3, pc}

Disassembly of section .plt:

00000798 <.plt>:
 798:	push	{lr}		; (str lr, [sp, #-4]!)
 79c:	ldr	lr, [pc, #4]	; 7a8 <.plt+0x10>
 7a0:	add	lr, pc, lr
 7a4:	ldr	pc, [lr, #8]!
 7a8:	.word	0x00011858

000007ac <delete_isupport@plt>:
 7ac:	add	ip, pc, #0, 12
 7b0:	add	ip, ip, #69632	; 0x11000
 7b4:	ldr	pc, [ip, #2136]!	; 0x858

000007b8 <__cxa_finalize@plt>:
 7b8:	add	ip, pc, #0, 12
 7bc:	add	ip, ip, #69632	; 0x11000
 7c0:	ldr	pc, [ip, #2128]!	; 0x850

000007c4 <sendto_one@plt>:
 7c4:	add	ip, pc, #0, 12
 7c8:	add	ip, ip, #69632	; 0x11000
 7cc:	ldr	pc, [ip, #2120]!	; 0x848

000007d0 <memcpy@plt>:
 7d0:	add	ip, pc, #0, 12
 7d4:	add	ip, ip, #69632	; 0x11000
 7d8:	ldr	pc, [ip, #2112]!	; 0x840

000007dc <free_monitor@plt>:
 7dc:	add	ip, pc, #0, 12
 7e0:	add	ip, ip, #69632	; 0x11000
 7e4:	ldr	pc, [ip, #2104]!	; 0x838

000007e8 <rb_free_rb_dlink_node@plt>:
 7e8:	add	ip, pc, #0, 12
 7ec:	add	ip, ip, #69632	; 0x11000
 7f0:	ldr	pc, [ip, #2096]!	; 0x830

000007f4 <strcpy@plt>:
 7f4:	add	ip, pc, #0, 12
 7f8:	add	ip, ip, #69632	; 0x11000
 7fc:	ldr	pc, [ip, #2088]!	; 0x828

00000800 <find_monitor@plt>:
 800:	add	ip, pc, #0, 12
 804:	add	ip, ip, #69632	; 0x11000
 808:	ldr	pc, [ip, #2080]!	; 0x820

0000080c <__gmon_start__@plt>:
 80c:	add	ip, pc, #0, 12
 810:	add	ip, ip, #69632	; 0x11000
 814:	ldr	pc, [ip, #2072]!	; 0x818

00000818 <rb_make_rb_dlink_node@plt>:
 818:	add	ip, pc, #0, 12
 81c:	add	ip, ip, #69632	; 0x11000
 820:	ldr	pc, [ip, #2064]!	; 0x810

00000824 <strlen@plt>:
 824:	add	ip, pc, #0, 12
 828:	add	ip, ip, #69632	; 0x11000
 82c:	ldr	pc, [ip, #2056]!	; 0x808

00000830 <clear_monitor@plt>:
 830:	add	ip, pc, #0, 12
 834:	add	ip, ip, #69632	; 0x11000
 838:	ldr	pc, [ip, #2048]!	; 0x800

0000083c <snprintf@plt>:
 83c:	add	ip, pc, #0, 12
 840:	add	ip, ip, #69632	; 0x11000
 844:	ldr	pc, [ip, #2040]!	; 0x7f8

00000848 <clean_nick@plt>:
 848:	add	ip, pc, #0, 12
 84c:	add	ip, ip, #69632	; 0x11000
 850:	ldr	pc, [ip, #2032]!	; 0x7f0

00000854 <rb_strtok_r@plt>:
 854:	add	ip, pc, #0, 12
 858:	add	ip, ip, #69632	; 0x11000
 85c:	ldr	pc, [ip, #2024]!	; 0x7e8

00000860 <sprintf@plt>:
 860:	add	ip, pc, #0, 12
 864:	add	ip, ip, #69632	; 0x11000
 868:	ldr	pc, [ip, #2016]!	; 0x7e0

0000086c <find_named_person@plt>:
 86c:	add	ip, pc, #0, 12
 870:	add	ip, ip, #69632	; 0x11000
 874:	ldr	pc, [ip, #2008]!	; 0x7d8

00000878 <add_isupport@plt>:
 878:	add	ip, pc, #0, 12
 87c:	add	ip, ip, #69632	; 0x11000
 880:	ldr	pc, [ip, #2000]!	; 0x7d0

00000884 <__assert_fail@plt>:
 884:	add	ip, pc, #0, 12
 888:	add	ip, ip, #69632	; 0x11000
 88c:	ldr	pc, [ip, #1992]!	; 0x7c8

Disassembly of section .text:

00000890 <call_weak_fn>:
     890:	ldr	r3, [pc, #20]	; 8ac <call_weak_fn+0x1c>
     894:	ldr	r2, [pc, #20]	; 8b0 <call_weak_fn+0x20>
     898:	add	r3, pc, r3
     89c:	ldr	r2, [r3, r2]
     8a0:	cmp	r2, #0
     8a4:	bxeq	lr
     8a8:	b	80c <__gmon_start__@plt>
     8ac:	.word	0x00011760
     8b0:	.word	0x00000064

000008b4 <deregister_tm_clones>:
     8b4:	ldr	r0, [pc, #44]	; 8e8 <deregister_tm_clones+0x34>
     8b8:	ldr	r3, [pc, #44]	; 8ec <deregister_tm_clones+0x38>
     8bc:	add	r0, pc, r0
     8c0:	add	r3, pc, r3
     8c4:	cmp	r3, r0
     8c8:	ldr	r3, [pc, #32]	; 8f0 <deregister_tm_clones+0x3c>
     8cc:	add	r3, pc, r3
     8d0:	bxeq	lr
     8d4:	ldr	r2, [pc, #24]	; 8f4 <deregister_tm_clones+0x40>
     8d8:	ldr	r3, [r3, r2]
     8dc:	cmp	r3, #0
     8e0:	bxeq	lr
     8e4:	bx	r3
     8e8:	.word	0x00011828
     8ec:	.word	0x00011824
     8f0:	.word	0x0001172c
     8f4:	.word	0x00000060

000008f8 <register_tm_clones>:
     8f8:	ldr	r0, [pc, #56]	; 938 <register_tm_clones+0x40>
     8fc:	ldr	r3, [pc, #56]	; 93c <register_tm_clones+0x44>
     900:	add	r0, pc, r0
     904:	add	r3, pc, r3
     908:	sub	r1, r3, r0
     90c:	ldr	r3, [pc, #44]	; 940 <register_tm_clones+0x48>
     910:	asr	r1, r1, #2
     914:	add	r3, pc, r3
     918:	add	r1, r1, r1, lsr #31
     91c:	asrs	r1, r1, #1
     920:	bxeq	lr
     924:	ldr	r2, [pc, #24]	; 944 <register_tm_clones+0x4c>
     928:	ldr	r3, [r3, r2]
     92c:	cmp	r3, #0
     930:	bxeq	lr
     934:	bx	r3
     938:	.word	0x000117e4
     93c:	.word	0x000117e0
     940:	.word	0x000116e4
     944:	.word	0x00000068

00000948 <__do_global_dtors_aux>:
     948:	ldr	r3, [pc, #76]	; 99c <__do_global_dtors_aux+0x54>
     94c:	ldr	r2, [pc, #76]	; 9a0 <__do_global_dtors_aux+0x58>
     950:	add	r3, pc, r3
     954:	add	r2, pc, r2
     958:	ldrb	r3, [r3]
     95c:	cmp	r3, #0
     960:	bxne	lr
     964:	ldr	r3, [pc, #56]	; 9a4 <__do_global_dtors_aux+0x5c>
     968:	push	{r4, lr}
     96c:	ldr	r3, [r2, r3]
     970:	cmp	r3, #0
     974:	beq	984 <__do_global_dtors_aux+0x3c>
     978:	ldr	r3, [pc, #40]	; 9a8 <__do_global_dtors_aux+0x60>
     97c:	ldr	r0, [pc, r3]
     980:	bl	7b8 <__cxa_finalize@plt>
     984:	bl	8b4 <deregister_tm_clones>
     988:	ldr	r3, [pc, #28]	; 9ac <__do_global_dtors_aux+0x64>
     98c:	mov	r2, #1
     990:	add	r3, pc, r3
     994:	strb	r2, [r3]
     998:	pop	{r4, pc}
     99c:	.word	0x00011794
     9a0:	.word	0x000116a4
     9a4:	.word	0x00000058
     9a8:	.word	0x000116f0
     9ac:	.word	0x00011754

000009b0 <frame_dummy>:
     9b0:	b	8f8 <register_tm_clones>

000009b4 <m_monitor>:
     9b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     9b8:	add	fp, sp, #28
     9bc:	sub	sp, sp, #36	; 0x24
     9c0:	sub	sp, sp, #1024	; 0x400
     9c4:	ldr	r0, [fp, #8]
     9c8:	mov	r4, r2
     9cc:	ldr	r2, [r0, #4]
     9d0:	ldrb	r2, [r2]
     9d4:	sub	r2, r2, #43	; 0x2b
     9d8:	cmp	r2, #72	; 0x48
     9dc:	bhi	f00 <m_monitor+0x54c>
     9e0:	add	r7, pc, #4
     9e4:	ldr	r2, [r7, r2, lsl #2]
     9e8:	add	pc, r7, r2
     9ec:	.word	0x00000430
     9f0:	.word	0x00000514
     9f4:	.word	0x00000460
     9f8:	.word	0x00000514
     9fc:	.word	0x00000514
     a00:	.word	0x00000514
     a04:	.word	0x00000514
     a08:	.word	0x00000514
     a0c:	.word	0x00000514
     a10:	.word	0x00000514
     a14:	.word	0x00000514
     a18:	.word	0x00000514
     a1c:	.word	0x00000514
     a20:	.word	0x00000514
     a24:	.word	0x00000514
     a28:	.word	0x00000514
     a2c:	.word	0x00000514
     a30:	.word	0x00000514
     a34:	.word	0x00000514
     a38:	.word	0x00000514
     a3c:	.word	0x00000514
     a40:	.word	0x00000514
     a44:	.word	0x00000514
     a48:	.word	0x00000514
     a4c:	.word	0x00000124
     a50:	.word	0x00000514
     a54:	.word	0x00000514
     a58:	.word	0x00000514
     a5c:	.word	0x00000514
     a60:	.word	0x00000514
     a64:	.word	0x00000514
     a68:	.word	0x00000514
     a6c:	.word	0x00000514
     a70:	.word	0x00000134
     a74:	.word	0x00000514
     a78:	.word	0x00000514
     a7c:	.word	0x00000514
     a80:	.word	0x00000514
     a84:	.word	0x00000514
     a88:	.word	0x00000514
     a8c:	.word	0x0000024c
     a90:	.word	0x00000514
     a94:	.word	0x00000514
     a98:	.word	0x00000514
     a9c:	.word	0x00000514
     aa0:	.word	0x00000514
     aa4:	.word	0x00000514
     aa8:	.word	0x00000514
     aac:	.word	0x00000514
     ab0:	.word	0x00000514
     ab4:	.word	0x00000514
     ab8:	.word	0x00000514
     abc:	.word	0x00000514
     ac0:	.word	0x00000514
     ac4:	.word	0x00000514
     ac8:	.word	0x00000514
     acc:	.word	0x00000124
     ad0:	.word	0x00000514
     ad4:	.word	0x00000514
     ad8:	.word	0x00000514
     adc:	.word	0x00000514
     ae0:	.word	0x00000514
     ae4:	.word	0x00000514
     ae8:	.word	0x00000514
     aec:	.word	0x00000514
     af0:	.word	0x00000134
     af4:	.word	0x00000514
     af8:	.word	0x00000514
     afc:	.word	0x00000514
     b00:	.word	0x00000514
     b04:	.word	0x00000514
     b08:	.word	0x00000514
     b0c:	.word	0x0000024c
     b10:	mov	r0, r4
     b14:	sub	sp, fp, #28
     b18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     b1c:	b	830 <clear_monitor@plt>
     b20:	ldr	r0, [r4, #432]	; 0x1b0
     b24:	add	r3, r4, #88	; 0x58
     b28:	ldr	r0, [r0, #336]	; 0x150
     b2c:	cmp	r0, #0
     b30:	beq	e98 <m_monitor+0x4e4>
     b34:	ldr	r0, [pc, #1000]	; f24 <m_monitor+0x570>
     b38:	add	r6, sp, #32
     b3c:	add	r0, pc, r0
     b40:	str	r0, [sp]
     b44:	ldr	r0, [pc, #988]	; f28 <m_monitor+0x574>
     b48:	ldr	r0, [pc, r0]
     b4c:	ldr	r1, [pc, #984]	; f2c <m_monitor+0x578>
     b50:	add	r2, r0, #88	; 0x58
     b54:	add	r1, pc, r1
     b58:	mov	r0, r6
     b5c:	str	r2, [sp, #24]
     b60:	str	r3, [sp, #28]
     b64:	bl	860 <sprintf@plt>
     b68:	mov	r5, r0
     b6c:	ldr	r0, [r4, #432]	; 0x1b0
     b70:	str	r4, [sp, #16]
     b74:	ldr	r9, [r0, #328]	; 0x148
     b78:	cmp	r9, #0
     b7c:	beq	c08 <m_monitor+0x254>
     b80:	add	sl, r6, r5
     b84:	mov	r4, r5
     b88:	mov	r6, sl
     b8c:	ldr	r8, [r9]
     b90:	mov	r0, r8
     b94:	bl	824 <strlen@plt>
     b98:	add	r7, r4, #1
     b9c:	add	r0, r0, r7
     ba0:	cmp	r0, #508	; 0x1fc
     ba4:	bls	bc8 <m_monitor+0x214>
     ba8:	ldr	r0, [sp, #16]
     bac:	ldr	r1, [pc, #892]	; f30 <m_monitor+0x57c>
     bb0:	add	r2, sp, #32
     bb4:	add	r1, pc, r1
     bb8:	bl	7c4 <sendto_one@plt>
     bbc:	mov	r6, sl
     bc0:	mov	r7, r5
     bc4:	b	bd8 <m_monitor+0x224>
     bc8:	cmp	r4, r5
     bcc:	movne	r0, #44	; 0x2c
     bd0:	moveq	r7, r5
     bd4:	strbne	r0, [r6], #1
     bd8:	mov	r0, r8
     bdc:	bl	824 <strlen@plt>
     be0:	mov	r4, r0
     be4:	add	r2, r0, #1
     be8:	mov	r0, r6
     bec:	mov	r1, r8
     bf0:	bl	7d0 <memcpy@plt>
     bf4:	ldr	r9, [r9, #8]
     bf8:	add	r6, r6, r4
     bfc:	add	r4, r4, r7
     c00:	cmp	r9, #0
     c04:	bne	b8c <m_monitor+0x1d8>
     c08:	ldr	r1, [pc, #804]	; f34 <m_monitor+0x580>
     c0c:	ldr	r4, [sp, #16]
     c10:	add	r2, sp, #32
     c14:	add	r1, pc, r1
     c18:	mov	r0, r4
     c1c:	bl	7c4 <sendto_one@plt>
     c20:	ldr	r1, [pc, #784]	; f38 <m_monitor+0x584>
     c24:	ldr	r2, [sp, #24]
     c28:	ldr	r3, [sp, #28]
     c2c:	mov	r0, r4
     c30:	add	r1, pc, r1
     c34:	b	eb0 <m_monitor+0x4fc>
     c38:	ldr	r5, [pc, #764]	; f3c <m_monitor+0x588>
     c3c:	add	r6, r4, #88	; 0x58
     c40:	add	r8, sp, #32
     c44:	mov	r3, r6
     c48:	add	r5, pc, r5
     c4c:	str	r5, [sp]
     c50:	ldr	r0, [pc, #744]	; f40 <m_monitor+0x58c>
     c54:	ldr	r0, [pc, r0]
     c58:	ldr	r1, [pc, #740]	; f44 <m_monitor+0x590>
     c5c:	add	r7, r0, #88	; 0x58
     c60:	add	r1, pc, r1
     c64:	mov	r0, r8
     c68:	mov	r2, r7
     c6c:	bl	860 <sprintf@plt>
     c70:	str	r5, [sp]
     c74:	add	r5, sp, #544	; 0x220
     c78:	mov	r9, r0
     c7c:	mov	r2, r7
     c80:	mov	r3, r6
     c84:	ldr	r1, [pc, #700]	; f48 <m_monitor+0x594>
     c88:	mov	r0, r5
     c8c:	add	r1, pc, r1
     c90:	bl	860 <sprintf@plt>
     c94:	str	r0, [sp, #12]
     c98:	ldr	r0, [r4, #432]	; 0x1b0
     c9c:	ldr	r6, [r0, #328]	; 0x148
     ca0:	cmp	r6, #0
     ca4:	beq	ebc <m_monitor+0x508>
     ca8:	add	r5, r5, r9
     cac:	add	r8, r8, r9
     cb0:	str	r4, [sp, #16]
     cb4:	str	r9, [sp, #20]
     cb8:	str	r9, [sp, #28]
     cbc:	stmib	sp, {r5, r8}
     cc0:	ldr	r7, [r6]
     cc4:	mov	r0, r7
     cc8:	bl	86c <find_named_person@plt>
     ccc:	cmp	r0, #0
     cd0:	beq	d3c <m_monitor+0x388>
     cd4:	add	sl, r0, #88	; 0x58
     cd8:	mov	r4, r0
     cdc:	str	r5, [sp, #24]
     ce0:	mov	r0, sl
     ce4:	bl	824 <strlen@plt>
     ce8:	ldr	r9, [sp, #28]
     cec:	add	r7, r4, #152	; 0x98
     cf0:	add	r5, r9, r0
     cf4:	mov	r0, r7
     cf8:	bl	824 <strlen@plt>
     cfc:	add	r4, r4, #163	; 0xa3
     d00:	add	r5, r5, r0
     d04:	mov	r0, r4
     d08:	bl	824 <strlen@plt>
     d0c:	add	r0, r5, r0
     d10:	add	r0, r0, #3
     d14:	cmp	r0, #508	; 0x1fc
     d18:	bls	d78 <m_monitor+0x3c4>
     d1c:	ldr	r0, [sp, #16]
     d20:	ldr	r1, [pc, #548]	; f4c <m_monitor+0x598>
     d24:	add	r2, sp, #32
     d28:	add	r1, pc, r1
     d2c:	bl	7c4 <sendto_one@plt>
     d30:	ldr	r5, [sp, #20]
     d34:	ldr	r8, [sp, #8]
     d38:	b	d8c <m_monitor+0x3d8>
     d3c:	mov	r0, r7
     d40:	bl	824 <strlen@plt>
     d44:	ldr	r1, [sp, #12]
     d48:	add	r9, r1, #1
     d4c:	add	r0, r0, r9
     d50:	cmp	r0, #508	; 0x1fc
     d54:	bls	dbc <m_monitor+0x408>
     d58:	ldr	r0, [sp, #16]
     d5c:	ldr	r1, [pc, #496]	; f54 <m_monitor+0x5a0>
     d60:	add	r2, sp, #544	; 0x220
     d64:	add	r1, pc, r1
     d68:	bl	7c4 <sendto_one@plt>
     d6c:	ldr	r5, [sp, #4]
     d70:	ldr	r9, [sp, #20]
     d74:	b	dd0 <m_monitor+0x41c>
     d78:	ldr	r5, [sp, #20]
     d7c:	cmp	r9, r5
     d80:	movne	r0, #44	; 0x2c
     d84:	addne	r5, r9, #1
     d88:	strbne	r0, [r8], #1
     d8c:	str	r4, [sp]
     d90:	mov	r0, r8
     d94:	mov	r2, sl
     d98:	mov	r3, r7
     d9c:	ldr	r1, [pc, #428]	; f50 <m_monitor+0x59c>
     da0:	add	r1, pc, r1
     da4:	bl	860 <sprintf@plt>
     da8:	add	r1, r0, r5
     dac:	add	r8, r8, r0
     db0:	str	r1, [sp, #28]
     db4:	ldr	r5, [sp, #24]
     db8:	b	df8 <m_monitor+0x444>
     dbc:	ldr	r0, [sp, #20]
     dc0:	cmp	r1, r0
     dc4:	movne	r0, #44	; 0x2c
     dc8:	strbne	r0, [r5], #1
     dcc:	moveq	r9, r0
     dd0:	mov	r0, r7
     dd4:	bl	824 <strlen@plt>
     dd8:	mov	r4, r0
     ddc:	add	r2, r0, #1
     de0:	mov	r0, r5
     de4:	mov	r1, r7
     de8:	bl	7d0 <memcpy@plt>
     dec:	add	r0, r4, r9
     df0:	add	r5, r5, r4
     df4:	str	r0, [sp, #12]
     df8:	ldr	r6, [r6, #8]
     dfc:	cmp	r6, #0
     e00:	bne	cc0 <m_monitor+0x30c>
     e04:	ldr	r0, [sp, #20]
     e08:	ldr	r1, [sp, #28]
     e0c:	cmp	r1, r0
     e10:	bne	ec4 <m_monitor+0x510>
     e14:	ldr	r4, [sp, #16]
     e18:	b	ee0 <m_monitor+0x52c>
     e1c:	cmp	r3, #3
     e20:	blt	e68 <m_monitor+0x4b4>
     e24:	ldr	r2, [r0, #8]
     e28:	cmp	r2, #0
     e2c:	ldrbne	r0, [r2]
     e30:	cmpne	r0, #0
     e34:	beq	e68 <m_monitor+0x4b4>
     e38:	mov	r0, r4
     e3c:	mov	r1, r2
     e40:	sub	sp, fp, #28
     e44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     e48:	b	fb8 <add_monitor>
     e4c:	cmp	r3, #3
     e50:	blt	e68 <m_monitor+0x4b4>
     e54:	ldr	r2, [r0, #8]
     e58:	cmp	r2, #0
     e5c:	ldrbne	r0, [r2]
     e60:	cmpne	r0, #0
     e64:	bne	f08 <m_monitor+0x554>
     e68:	ldr	r0, [pc, #240]	; f60 <m_monitor+0x5ac>
     e6c:	add	r3, r4, #88	; 0x58
     e70:	add	r0, pc, r0
     e74:	str	r0, [sp]
     e78:	ldr	r0, [pc, #228]	; f64 <m_monitor+0x5b0>
     e7c:	ldr	r0, [pc, r0]
     e80:	ldr	r7, [pc, #224]	; f68 <m_monitor+0x5b4>
     e84:	add	r7, pc, r7
     e88:	add	r2, r0, #88	; 0x58
     e8c:	mov	r0, r1
     e90:	mov	r1, r7
     e94:	b	eb0 <m_monitor+0x4fc>
     e98:	ldr	r0, [pc, #124]	; f1c <m_monitor+0x568>
     e9c:	ldr	r0, [pc, r0]
     ea0:	ldr	r1, [pc, #120]	; f20 <m_monitor+0x56c>
     ea4:	add	r2, r0, #88	; 0x58
     ea8:	add	r1, pc, r1
     eac:	mov	r0, r4
     eb0:	bl	7c4 <sendto_one@plt>
     eb4:	sub	sp, fp, #28
     eb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     ebc:	mov	r0, r9
     ec0:	b	ee0 <m_monitor+0x52c>
     ec4:	ldr	r1, [pc, #140]	; f58 <m_monitor+0x5a4>
     ec8:	ldr	r4, [sp, #16]
     ecc:	add	r2, sp, #32
     ed0:	add	r1, pc, r1
     ed4:	mov	r0, r4
     ed8:	bl	7c4 <sendto_one@plt>
     edc:	ldr	r0, [sp, #20]
     ee0:	ldr	r1, [sp, #12]
     ee4:	cmp	r1, r0
     ee8:	beq	f00 <m_monitor+0x54c>
     eec:	ldr	r1, [pc, #104]	; f5c <m_monitor+0x5a8>
     ef0:	add	r2, sp, #544	; 0x220
     ef4:	mov	r0, r4
     ef8:	add	r1, pc, r1
     efc:	bl	7c4 <sendto_one@plt>
     f00:	sub	sp, fp, #28
     f04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     f08:	mov	r0, r4
     f0c:	mov	r1, r2
     f10:	sub	sp, fp, #28
     f14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     f18:	b	1558 <del_monitor>
     f1c:	.word	0x000111c8
     f20:	.word	0x00000914
     f24:	.word	0x00000c75
     f28:	.word	0x0001151c
     f2c:	.word	0x00000c88
     f30:	.word	0x00000b74
     f34:	.word	0x00000b14
     f38:	.word	0x00000b8c
     f3c:	.word	0x00000b69
     f40:	.word	0x00011410
     f44:	.word	0x00000aa5
     f48:	.word	0x00000a88
     f4c:	.word	0x00000a00
     f50:	.word	0x000009b2
     f54:	.word	0x000009c4
     f58:	.word	0x00000858
     f5c:	.word	0x00000830
     f60:	.word	0x00000868
     f64:	.word	0x000111e8
     f68:	.word	0x0000085c

00000f6c <monitor_init>:
     f6c:	push	{fp, lr}
     f70:	mov	fp, sp
     f74:	ldr	r0, [pc, #32]	; f9c <monitor_init+0x30>
     f78:	ldr	r0, [pc, r0]
     f7c:	ldr	r1, [pc, #28]	; fa0 <monitor_init+0x34>
     f80:	add	r2, r0, #100	; 0x64
     f84:	ldr	r1, [pc, r1]
     f88:	ldr	r0, [pc, #20]	; fa4 <monitor_init+0x38>
     f8c:	add	r0, pc, r0
     f90:	bl	878 <add_isupport@plt>
     f94:	mov	r0, #0
     f98:	pop	{fp, pc}
     f9c:	.word	0x000110f0
     fa0:	.word	0x000110d0
     fa4:	.word	0x0000074c

00000fa8 <monitor_deinit>:
     fa8:	ldr	r0, [pc, #4]	; fb4 <monitor_deinit+0xc>
     fac:	add	r0, pc, r0
     fb0:	b	7ac <delete_isupport@plt>
     fb4:	.word	0x0000072c

00000fb8 <add_monitor>:
     fb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     fbc:	add	fp, sp, #28
     fc0:	sub	sp, sp, #148	; 0x94
     fc4:	sub	sp, sp, #1024	; 0x400
     fc8:	mov	sl, r0
     fcc:	mov	r6, r1
     fd0:	sub	sp, sp, #8
     fd4:	ldr	r9, [pc, #1304]	; 14f4 <add_monitor+0x53c>
     fd8:	add	r7, r0, #88	; 0x58
     fdc:	mov	r3, r7
     fe0:	add	r9, pc, r9
     fe4:	str	r9, [sp]
     fe8:	ldr	r0, [pc, #1288]	; 14f8 <add_monitor+0x540>
     fec:	ldr	r0, [pc, r0]
     ff0:	ldr	r1, [pc, #1284]	; 14fc <add_monitor+0x544>
     ff4:	add	r5, r0, #88	; 0x58
     ff8:	sub	r0, fp, #544	; 0x220
     ffc:	add	r1, pc, r1
    1000:	mov	r2, r5
    1004:	bl	860 <sprintf@plt>
    1008:	add	sp, sp, #8
    100c:	mov	r8, r0
    1010:	sub	sp, sp, #8
    1014:	str	r9, [sp]
    1018:	sub	r4, fp, #1056	; 0x420
    101c:	mov	r2, r5
    1020:	mov	r3, r7
    1024:	ldr	r1, [pc, #1236]	; 1500 <add_monitor+0x548>
    1028:	mov	r0, r4
    102c:	str	r5, [fp, #-1188]	; 0xfffffb5c
    1030:	add	r1, pc, r1
    1034:	bl	860 <sprintf@plt>
    1038:	add	sp, sp, #8
    103c:	mov	r0, r6
    1040:	bl	824 <strlen@plt>
    1044:	add	r0, r0, #8
    1048:	bic	r0, r0, #7
    104c:	sub	r5, sp, r0
    1050:	mov	sp, r5
    1054:	mov	r0, r5
    1058:	mov	r1, r6
    105c:	bl	7f4 <strcpy@plt>
    1060:	ldr	r1, [pc, #1180]	; 1504 <add_monitor+0x54c>
    1064:	sub	lr, fp, #1024	; 0x400
    1068:	mov	r0, r5
    106c:	sub	r2, lr, #36	; 0x24
    1070:	add	r1, pc, r1
    1074:	bl	854 <rb_strtok_r@plt>
    1078:	cmp	r0, #0
    107c:	beq	13f8 <add_monitor+0x440>
    1080:	str	r7, [fp, #-1196]	; 0xfffffb54
    1084:	sub	r1, fp, #544	; 0x220
    1088:	sub	lr, fp, #1024	; 0x400
    108c:	mov	r9, r0
    1090:	add	r0, r4, r8
    1094:	mov	r5, #0
    1098:	ldr	r7, [pc, #1128]	; 1508 <add_monitor+0x550>
    109c:	ldr	r6, [pc, #1128]	; 150c <add_monitor+0x554>
    10a0:	add	r1, r1, r8
    10a4:	sub	r4, lr, #36	; 0x24
    10a8:	ldr	r6, [pc, r6]
    10ac:	add	r7, pc, r7
    10b0:	str	r1, [fp, #-1184]	; 0xfffffb60
    10b4:	str	r1, [fp, #-1180]	; 0xfffffb64
    10b8:	str	r8, [fp, #-1176]	; 0xfffffb68
    10bc:	str	r8, [fp, #-1164]	; 0xfffffb74
    10c0:	str	r0, [fp, #-1192]	; 0xfffffb58
    10c4:	str	r0, [fp, #-1168]	; 0xfffffb70
    10c8:	str	r8, [fp, #-1172]	; 0xfffffb6c
    10cc:	ldrb	r0, [r9]
    10d0:	cmp	r0, #0
    10d4:	beq	1398 <add_monitor+0x3e0>
    10d8:	mov	r0, r9
    10dc:	bl	824 <strlen@plt>
    10e0:	cmp	r0, #31
    10e4:	bhi	1398 <add_monitor+0x3e0>
    10e8:	ldr	r1, [sl, #432]	; 0x1b0
    10ec:	ldr	r0, [r6, #100]	; 0x64
    10f0:	ldr	r1, [r1, #336]	; 0x150
    10f4:	cmp	r1, r0
    10f8:	bcs	1400 <add_monitor+0x448>
    10fc:	mov	r0, r9
    1100:	mov	r1, #0
    1104:	bl	848 <clean_nick@plt>
    1108:	cmp	r0, #0
    110c:	beq	1398 <add_monitor+0x3e0>
    1110:	mov	r0, r9
    1114:	mov	r1, #1
    1118:	bl	800 <find_monitor@plt>
    111c:	mov	r8, r0
    1120:	ldr	r0, [r0, #32]
    1124:	cmp	r0, #0
    1128:	bne	113c <add_monitor+0x184>
    112c:	b	114c <add_monitor+0x194>
    1130:	ldr	r0, [r0, #8]
    1134:	cmp	r0, #0
    1138:	beq	114c <add_monitor+0x194>
    113c:	ldr	r1, [r0]
    1140:	cmp	r1, sl
    1144:	bne	1130 <add_monitor+0x178>
    1148:	b	1388 <add_monitor+0x3d0>
    114c:	bl	818 <rb_make_rb_dlink_node@plt>
    1150:	cmp	r0, #0
    1154:	beq	14d4 <add_monitor+0x51c>
    1158:	str	r5, [r0, #4]
    115c:	str	sl, [r0]
    1160:	ldr	r1, [r8, #32]
    1164:	cmp	r1, #0
    1168:	str	r1, [r0, #8]
    116c:	beq	117c <add_monitor+0x1c4>
    1170:	add	r1, r1, #4
    1174:	str	r0, [r1]
    1178:	b	118c <add_monitor+0x1d4>
    117c:	mov	r1, r8
    1180:	ldr	r2, [r1, #36]!	; 0x24
    1184:	cmp	r2, #0
    1188:	streq	r0, [r1]
    118c:	str	r0, [r8, #32]
    1190:	ldr	r0, [r8, #40]	; 0x28
    1194:	add	r0, r0, #1
    1198:	str	r0, [r8, #40]	; 0x28
    119c:	bl	818 <rb_make_rb_dlink_node@plt>
    11a0:	cmp	r0, #0
    11a4:	beq	14d4 <add_monitor+0x51c>
    11a8:	ldr	r1, [sl, #432]	; 0x1b0
    11ac:	str	r5, [r0, #4]
    11b0:	str	r8, [r0]
    11b4:	ldr	r2, [r1, #328]	; 0x148
    11b8:	cmp	r2, #0
    11bc:	str	r2, [r0, #8]
    11c0:	beq	11e0 <add_monitor+0x228>
    11c4:	ldr	r7, [pc, #860]	; 1528 <add_monitor+0x570>
    11c8:	ldr	r8, [fp, #-1168]	; 0xfffffb70
    11cc:	ldr	r5, [fp, #-1172]	; 0xfffffb6c
    11d0:	add	r2, r2, #4
    11d4:	str	r0, [r2]
    11d8:	add	r7, pc, r7
    11dc:	b	1200 <add_monitor+0x248>
    11e0:	mov	r2, r1
    11e4:	ldr	r3, [r2, #332]!	; 0x14c
    11e8:	ldr	r7, [pc, #828]	; 152c <add_monitor+0x574>
    11ec:	ldr	r8, [fp, #-1168]	; 0xfffffb70
    11f0:	ldr	r5, [fp, #-1172]	; 0xfffffb6c
    11f4:	cmp	r3, #0
    11f8:	add	r7, pc, r7
    11fc:	streq	r0, [r2]
    1200:	str	r0, [r1, #328]	; 0x148
    1204:	ldr	r0, [r1, #336]	; 0x150
    1208:	add	r0, r0, #1
    120c:	str	r0, [r1, #336]	; 0x150
    1210:	mov	r0, r9
    1214:	bl	86c <find_named_person@plt>
    1218:	cmp	r0, #0
    121c:	beq	1288 <add_monitor+0x2d0>
    1220:	add	r8, r0, #88	; 0x58
    1224:	mov	r6, r0
    1228:	mov	r9, r5
    122c:	mov	r0, r8
    1230:	bl	824 <strlen@plt>
    1234:	ldr	r4, [fp, #-1164]	; 0xfffffb74
    1238:	add	r5, r6, #152	; 0x98
    123c:	add	r7, r4, r0
    1240:	mov	r0, r5
    1244:	bl	824 <strlen@plt>
    1248:	add	r6, r6, #163	; 0xa3
    124c:	add	r7, r7, r0
    1250:	mov	r0, r6
    1254:	bl	824 <strlen@plt>
    1258:	add	r0, r7, r0
    125c:	add	r0, r0, #3
    1260:	cmp	r0, #508	; 0x1fc
    1264:	bls	12cc <add_monitor+0x314>
    1268:	ldr	r1, [pc, #704]	; 1530 <add_monitor+0x578>
    126c:	mov	r0, sl
    1270:	sub	r2, fp, #544	; 0x220
    1274:	add	r1, pc, r1
    1278:	bl	7c4 <sendto_one@plt>
    127c:	ldr	r1, [fp, #-1184]	; 0xfffffb60
    1280:	mov	r7, r9
    1284:	b	1344 <add_monitor+0x38c>
    1288:	mov	r0, r9
    128c:	bl	824 <strlen@plt>
    1290:	ldr	r1, [fp, #-1176]	; 0xfffffb68
    1294:	add	r6, r1, #1
    1298:	add	r0, r6, r0
    129c:	cmp	r0, #508	; 0x1fc
    12a0:	bls	12e0 <add_monitor+0x328>
    12a4:	ldr	r1, [pc, #656]	; 153c <add_monitor+0x584>
    12a8:	mov	r0, sl
    12ac:	sub	r2, fp, #1056	; 0x420
    12b0:	add	r1, pc, r1
    12b4:	bl	7c4 <sendto_one@plt>
    12b8:	ldr	r8, [fp, #-1192]	; 0xfffffb58
    12bc:	sub	lr, fp, #1024	; 0x400
    12c0:	mov	r6, r5
    12c4:	sub	r4, lr, #36	; 0x24
    12c8:	b	12f8 <add_monitor+0x340>
    12cc:	cmp	r4, r9
    12d0:	bne	1334 <add_monitor+0x37c>
    12d4:	ldr	r1, [fp, #-1180]	; 0xfffffb64
    12d8:	mov	r7, r9
    12dc:	b	1344 <add_monitor+0x38c>
    12e0:	cmp	r1, r5
    12e4:	sub	lr, fp, #1024	; 0x400
    12e8:	movne	r0, #44	; 0x2c
    12ec:	sub	r4, lr, #36	; 0x24
    12f0:	moveq	r6, r5
    12f4:	strbne	r0, [r8], #1
    12f8:	mov	r0, r9
    12fc:	bl	824 <strlen@plt>
    1300:	mov	r5, r0
    1304:	add	r2, r0, #1
    1308:	mov	r0, r8
    130c:	mov	r1, r9
    1310:	bl	7d0 <memcpy@plt>
    1314:	add	r0, r5, r6
    1318:	add	r8, r8, r5
    131c:	mov	r5, #0
    1320:	str	r0, [fp, #-1176]	; 0xfffffb68
    1324:	str	r8, [fp, #-1168]	; 0xfffffb70
    1328:	ldr	r6, [pc, #528]	; 1540 <add_monitor+0x588>
    132c:	ldr	r6, [pc, r6]
    1330:	b	1398 <add_monitor+0x3e0>
    1334:	ldr	r1, [fp, #-1180]	; 0xfffffb64
    1338:	mov	r0, #44	; 0x2c
    133c:	add	r7, r4, #1
    1340:	strb	r0, [r1], #1
    1344:	sub	sp, sp, #8
    1348:	str	r6, [sp]
    134c:	mov	r0, r1
    1350:	mov	r6, r1
    1354:	mov	r2, r8
    1358:	mov	r3, r5
    135c:	ldr	r1, [pc, #464]	; 1534 <add_monitor+0x57c>
    1360:	add	r1, pc, r1
    1364:	bl	860 <sprintf@plt>
    1368:	add	sp, sp, #8
    136c:	add	r1, r0, r7
    1370:	add	r6, r6, r0
    1374:	mov	r5, #0
    1378:	str	r1, [fp, #-1164]	; 0xfffffb74
    137c:	str	r6, [fp, #-1180]	; 0xfffffb64
    1380:	ldr	r6, [pc, #432]	; 1538 <add_monitor+0x580>
    1384:	ldr	r6, [pc, r6]
    1388:	ldr	r7, [pc, #404]	; 1524 <add_monitor+0x56c>
    138c:	sub	lr, fp, #1024	; 0x400
    1390:	sub	r4, lr, #36	; 0x24
    1394:	add	r7, pc, r7
    1398:	mov	r0, #0
    139c:	mov	r1, r7
    13a0:	mov	r2, r4
    13a4:	bl	854 <rb_strtok_r@plt>
    13a8:	mov	r9, r0
    13ac:	cmp	r0, #0
    13b0:	bne	10cc <add_monitor+0x114>
    13b4:	ldr	r0, [fp, #-1164]	; 0xfffffb74
    13b8:	ldr	r4, [fp, #-1172]	; 0xfffffb6c
    13bc:	cmp	r0, r4
    13c0:	beq	13d8 <add_monitor+0x420>
    13c4:	ldr	r1, [pc, #376]	; 1544 <add_monitor+0x58c>
    13c8:	sub	r2, fp, #544	; 0x220
    13cc:	mov	r0, sl
    13d0:	add	r1, pc, r1
    13d4:	bl	7c4 <sendto_one@plt>
    13d8:	ldr	r0, [fp, #-1176]	; 0xfffffb68
    13dc:	cmp	r0, r4
    13e0:	beq	13f8 <add_monitor+0x440>
    13e4:	ldr	r1, [pc, #348]	; 1548 <add_monitor+0x590>
    13e8:	sub	r2, fp, #1056	; 0x420
    13ec:	mov	r0, sl
    13f0:	add	r1, pc, r1
    13f4:	bl	7c4 <sendto_one@plt>
    13f8:	sub	sp, fp, #28
    13fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1400:	ldr	r0, [fp, #-1164]	; 0xfffffb74
    1404:	ldr	r4, [fp, #-1172]	; 0xfffffb6c
    1408:	cmp	r0, r4
    140c:	beq	1424 <add_monitor+0x46c>
    1410:	ldr	r1, [pc, #248]	; 1510 <add_monitor+0x558>
    1414:	sub	r2, fp, #544	; 0x220
    1418:	mov	r0, sl
    141c:	add	r1, pc, r1
    1420:	bl	7c4 <sendto_one@plt>
    1424:	ldr	r0, [fp, #-1176]	; 0xfffffb68
    1428:	ldr	r5, [fp, #-1196]	; 0xfffffb54
    142c:	cmp	r0, r4
    1430:	beq	1448 <add_monitor+0x490>
    1434:	ldr	r1, [pc, #216]	; 1514 <add_monitor+0x55c>
    1438:	sub	r2, fp, #1056	; 0x420
    143c:	mov	r0, sl
    1440:	add	r1, pc, r1
    1444:	bl	7c4 <sendto_one@plt>
    1448:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
    144c:	cmp	r0, #0
    1450:	beq	1480 <add_monitor+0x4c8>
    1454:	sub	sp, sp, #8
    1458:	str	r0, [sp]
    145c:	sub	lr, fp, #1024	; 0x400
    1460:	mov	r1, #100	; 0x64
    1464:	mov	r3, r9
    1468:	ldr	r2, [pc, #168]	; 1518 <add_monitor+0x560>
    146c:	sub	r0, lr, #136	; 0x88
    1470:	add	r2, pc, r2
    1474:	bl	83c <snprintf@plt>
    1478:	add	sp, sp, #8
    147c:	b	149c <add_monitor+0x4e4>
    1480:	ldr	r2, [pc, #148]	; 151c <add_monitor+0x564>
    1484:	sub	lr, fp, #1024	; 0x400
    1488:	mov	r1, #100	; 0x64
    148c:	mov	r3, r9
    1490:	sub	r0, lr, #136	; 0x88
    1494:	add	r2, pc, r2
    1498:	bl	83c <snprintf@plt>
    149c:	ldr	r0, [r6, #100]	; 0x64
    14a0:	sub	sp, sp, #8
    14a4:	sub	lr, fp, #1024	; 0x400
    14a8:	mov	r3, r5
    14ac:	sub	r1, lr, #136	; 0x88
    14b0:	stm	sp, {r0, r1}
    14b4:	mov	r0, sl
    14b8:	ldr	r1, [pc, #96]	; 1520 <add_monitor+0x568>
    14bc:	ldr	r2, [fp, #-1188]	; 0xfffffb5c
    14c0:	add	r1, pc, r1
    14c4:	bl	7c4 <sendto_one@plt>
    14c8:	add	sp, sp, #8
    14cc:	sub	sp, fp, #28
    14d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    14d4:	ldr	r0, [pc, #112]	; 154c <add_monitor+0x594>
    14d8:	ldr	r1, [pc, #112]	; 1550 <add_monitor+0x598>
    14dc:	ldr	r3, [pc, #112]	; 1554 <add_monitor+0x59c>
    14e0:	mov	r2, #144	; 0x90
    14e4:	add	r0, pc, r0
    14e8:	add	r1, pc, r1
    14ec:	add	r3, pc, r3
    14f0:	bl	884 <__assert_fail@plt>
    14f4:	.word	0x000007d1
    14f8:	.word	0x00011078
    14fc:	.word	0x00000709
    1500:	.word	0x000006e4
    1504:	.word	0x000006b3
    1508:	.word	0x00000677
    150c:	.word	0x00010fc0
    1510:	.word	0x0000030c
    1514:	.word	0x000002e8
    1518:	.word	0x000002b5
    151c:	.word	0x00000294
    1520:	.word	0x0000026b
    1524:	.word	0x0000038f
    1528:	.word	0x0000054b
    152c:	.word	0x0000052b
    1530:	.word	0x000004b4
    1534:	.word	0x000003f2
    1538:	.word	0x00010ce4
    153c:	.word	0x00000478
    1540:	.word	0x00010d3c
    1544:	.word	0x00000358
    1548:	.word	0x00000338
    154c:	.word	0x000002ce
    1550:	.word	0x00000273
    1554:	.word	0x0000028b

00001558 <del_monitor>:
    1558:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    155c:	add	fp, sp, #24
    1560:	sub	sp, sp, #8
    1564:	mov	r4, r0
    1568:	ldr	r0, [r0, #432]	; 0x1b0
    156c:	ldr	r0, [r0, #336]	; 0x150
    1570:	cmp	r0, #0
    1574:	beq	16c8 <del_monitor+0x170>
    1578:	mov	r0, r1
    157c:	mov	r5, r1
    1580:	bl	824 <strlen@plt>
    1584:	add	r0, r0, #8
    1588:	bic	r0, r0, #7
    158c:	sub	r6, sp, r0
    1590:	mov	sp, r6
    1594:	mov	r0, r6
    1598:	mov	r1, r5
    159c:	bl	7f4 <strcpy@plt>
    15a0:	ldr	r1, [pc, #296]	; 16d0 <del_monitor+0x178>
    15a4:	sub	r2, fp, #32
    15a8:	mov	r0, r6
    15ac:	add	r1, pc, r1
    15b0:	bl	854 <rb_strtok_r@plt>
    15b4:	cmp	r0, #0
    15b8:	beq	16c8 <del_monitor+0x170>
    15bc:	ldr	r9, [pc, #272]	; 16d4 <del_monitor+0x17c>
    15c0:	mov	r8, #0
    15c4:	sub	r6, fp, #32
    15c8:	add	r9, pc, r9
    15cc:	ldrb	r1, [r0]
    15d0:	cmp	r1, #0
    15d4:	beq	16b0 <del_monitor+0x158>
    15d8:	mov	r1, #0
    15dc:	bl	800 <find_monitor@plt>
    15e0:	cmp	r0, #0
    15e4:	beq	16b0 <del_monitor+0x158>
    15e8:	mov	r1, r0
    15ec:	mov	r7, r0
    15f0:	ldr	r2, [r1, #32]!
    15f4:	cmp	r2, #0
    15f8:	beq	1648 <del_monitor+0xf0>
    15fc:	ldr	r3, [r2]
    1600:	mov	r0, r2
    1604:	ldr	r2, [r2, #8]
    1608:	cmp	r3, r4
    160c:	bne	15f4 <del_monitor+0x9c>
    1610:	ldr	r3, [r0, #4]
    1614:	cmp	r2, #0
    1618:	streq	r3, [r7, #36]	; 0x24
    161c:	strne	r3, [r2, #4]
    1620:	ldrne	r3, [r0, #4]
    1624:	cmp	r3, #0
    1628:	addne	r1, r3, #8
    162c:	str	r2, [r1]
    1630:	str	r8, [r0, #4]
    1634:	str	r8, [r0, #8]
    1638:	ldr	r1, [r7, #40]	; 0x28
    163c:	sub	r1, r1, #1
    1640:	str	r1, [r7, #40]	; 0x28
    1644:	bl	7e8 <rb_free_rb_dlink_node@plt>
    1648:	ldr	r1, [r4, #432]	; 0x1b0
    164c:	mov	r2, r1
    1650:	ldr	r3, [r2, #328]!	; 0x148
    1654:	cmp	r3, #0
    1658:	beq	16a8 <del_monitor+0x150>
    165c:	ldr	r5, [r3]
    1660:	mov	r0, r3
    1664:	ldr	r3, [r3, #8]
    1668:	cmp	r5, r7
    166c:	bne	1654 <del_monitor+0xfc>
    1670:	ldr	r5, [r0, #4]
    1674:	cmp	r3, #0
    1678:	streq	r5, [r1, #332]	; 0x14c
    167c:	strne	r5, [r3, #4]
    1680:	ldrne	r5, [r0, #4]
    1684:	cmp	r5, #0
    1688:	addne	r2, r5, #8
    168c:	str	r3, [r2]
    1690:	str	r8, [r0, #4]
    1694:	str	r8, [r0, #8]
    1698:	ldr	r2, [r1, #336]	; 0x150
    169c:	sub	r2, r2, #1
    16a0:	str	r2, [r1, #336]	; 0x150
    16a4:	bl	7e8 <rb_free_rb_dlink_node@plt>
    16a8:	mov	r0, r7
    16ac:	bl	7dc <free_monitor@plt>
    16b0:	mov	r0, #0
    16b4:	mov	r1, r9
    16b8:	mov	r2, r6
    16bc:	bl	854 <rb_strtok_r@plt>
    16c0:	cmp	r0, #0
    16c4:	bne	15cc <del_monitor+0x74>
    16c8:	sub	sp, fp, #24
    16cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    16d0:	.word	0x00000177
    16d4:	.word	0x0000015b

Disassembly of section .fini:

000016d8 <_fini>:
    16d8:	push	{r3, lr}
    16dc:	pop	{r3, pc}
