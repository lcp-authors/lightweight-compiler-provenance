
../repos/prog2/0.2:     file format elf32-littlearm


Disassembly of section .init:

00010624 <.init>:
   10624:	push	{r3, lr}
   10628:	bl	106c8 <_start@@Base+0x3c>
   1062c:	pop	{r3, pc}

Disassembly of section .plt:

00010630 <printf@plt-0x14>:
   10630:	push	{lr}		; (str lr, [sp, #-4]!)
   10634:	ldr	lr, [pc, #4]	; 10640 <printf@plt-0x4>
   10638:	add	lr, pc, lr
   1063c:	ldr	pc, [lr, #8]!
   10640:	andeq	r0, r1, r0, asr #19

00010644 <printf@plt>:
   10644:	add	ip, pc, #0, 12
   10648:	add	ip, ip, #16, 20	; 0x10000
   1064c:	ldr	pc, [ip, #2496]!	; 0x9c0

00010650 <__libc_start_main@plt>:
   10650:	add	ip, pc, #0, 12
   10654:	add	ip, ip, #16, 20	; 0x10000
   10658:	ldr	pc, [ip, #2488]!	; 0x9b8

0001065c <__gmon_start__@plt>:
   1065c:	add	ip, pc, #0, 12
   10660:	add	ip, ip, #16, 20	; 0x10000
   10664:	ldr	pc, [ip, #2480]!	; 0x9b0

00010668 <memset@plt>:
   10668:	add	ip, pc, #0, 12
   1066c:	add	ip, ip, #16, 20	; 0x10000
   10670:	ldr	pc, [ip, #2472]!	; 0x9a8

00010674 <__isoc99_scanf@plt>:
   10674:	add	ip, pc, #0, 12
   10678:	add	ip, ip, #16, 20	; 0x10000
   1067c:	ldr	pc, [ip, #2464]!	; 0x9a0

00010680 <abort@plt>:
   10680:	add	ip, pc, #0, 12
   10684:	add	ip, ip, #16, 20	; 0x10000
   10688:	ldr	pc, [ip, #2456]!	; 0x998

Disassembly of section .text:

0001068c <_start@@Base>:
   1068c:	mov	fp, #0
   10690:	mov	lr, #0
   10694:	pop	{r1}		; (ldr r1, [sp], #4)
   10698:	mov	r2, sp
   1069c:	push	{r2}		; (str r2, [sp, #-4]!)
   106a0:	push	{r0}		; (str r0, [sp, #-4]!)
   106a4:	ldr	ip, [pc, #16]	; 106bc <_start@@Base+0x30>
   106a8:	push	{ip}		; (str ip, [sp, #-4]!)
   106ac:	ldr	r0, [pc, #12]	; 106c0 <_start@@Base+0x34>
   106b0:	ldr	r3, [pc, #12]	; 106c4 <_start@@Base+0x38>
   106b4:	bl	10650 <__libc_start_main@plt>
   106b8:	bl	10680 <abort@plt>
   106bc:	andeq	r0, r1, r8, lsl #20
   106c0:	andeq	r0, r1, ip, ror r7
   106c4:	andeq	r0, r1, r8, lsr #19
   106c8:	ldr	r3, [pc, #20]	; 106e4 <_start@@Base+0x58>
   106cc:	ldr	r2, [pc, #20]	; 106e8 <_start@@Base+0x5c>
   106d0:	add	r3, pc, r3
   106d4:	ldr	r2, [r3, r2]
   106d8:	cmp	r2, #0
   106dc:	bxeq	lr
   106e0:	b	1065c <__gmon_start__@plt>
   106e4:	andeq	r0, r1, r8, lsr #18
   106e8:	andeq	r0, r0, r4, lsr #32
   106ec:	ldr	r0, [pc, #24]	; 1070c <_start@@Base+0x80>
   106f0:	ldr	r3, [pc, #24]	; 10710 <_start@@Base+0x84>
   106f4:	cmp	r3, r0
   106f8:	bxeq	lr
   106fc:	ldr	r3, [pc, #16]	; 10714 <_start@@Base+0x88>
   10700:	cmp	r3, #0
   10704:	bxeq	lr
   10708:	bx	r3
   1070c:	andeq	r1, r2, r0, lsr r0
   10710:	andeq	r1, r2, r0, lsr r0
   10714:	andeq	r0, r0, r0
   10718:	ldr	r0, [pc, #36]	; 10744 <_start@@Base+0xb8>
   1071c:	ldr	r1, [pc, #36]	; 10748 <_start@@Base+0xbc>
   10720:	sub	r1, r1, r0
   10724:	asr	r1, r1, #2
   10728:	add	r1, r1, r1, lsr #31
   1072c:	asrs	r1, r1, #1
   10730:	bxeq	lr
   10734:	ldr	r3, [pc, #16]	; 1074c <_start@@Base+0xc0>
   10738:	cmp	r3, #0
   1073c:	bxeq	lr
   10740:	bx	r3
   10744:	andeq	r1, r2, r0, lsr r0
   10748:	andeq	r1, r2, r0, lsr r0
   1074c:	andeq	r0, r0, r0
   10750:	push	{r4, lr}
   10754:	ldr	r4, [pc, #24]	; 10774 <_start@@Base+0xe8>
   10758:	ldrb	r3, [r4]
   1075c:	cmp	r3, #0
   10760:	popne	{r4, pc}
   10764:	bl	106ec <_start@@Base+0x60>
   10768:	mov	r3, #1
   1076c:	strb	r3, [r4]
   10770:	pop	{r4, pc}
   10774:	andeq	r1, r2, r0, lsr r0
   10778:	b	10718 <_start@@Base+0x8c>

0001077c <main@@Base>:
   1077c:	push	{fp, lr}
   10780:	mov	fp, sp
   10784:	sub	sp, sp, #88	; 0x58
   10788:	ldr	r0, [pc, #496]	; 10980 <main@@Base+0x204>
   1078c:	add	r0, pc, r0
   10790:	movw	r1, #0
   10794:	str	r1, [fp, #-4]
   10798:	sub	r1, fp, #32
   1079c:	str	r0, [sp, #32]
   107a0:	mov	r0, r1
   107a4:	movw	r1, #0
   107a8:	and	r2, r1, #255	; 0xff
   107ac:	str	r1, [sp, #28]
   107b0:	mov	r1, r2
   107b4:	movw	r2, #20
   107b8:	str	r2, [sp, #24]
   107bc:	bl	10668 <memset@plt>
   107c0:	add	r0, sp, #36	; 0x24
   107c4:	ldr	r1, [sp, #28]
   107c8:	and	r1, r1, #255	; 0xff
   107cc:	ldr	r2, [sp, #24]
   107d0:	bl	10668 <memset@plt>
   107d4:	ldr	r0, [sp, #32]
   107d8:	bl	10644 <printf@plt>
   107dc:	movw	r1, #0
   107e0:	str	r1, [fp, #-8]
   107e4:	ldr	r0, [fp, #-8]
   107e8:	cmp	r0, #5
   107ec:	bge	10840 <main@@Base+0xc4>
   107f0:	ldr	r0, [pc, #420]	; 1099c <main@@Base+0x220>
   107f4:	add	r0, pc, r0
   107f8:	ldr	r1, [fp, #-8]
   107fc:	add	r1, r1, #1
   10800:	ldr	r2, [pc, #408]	; 109a0 <main@@Base+0x224>
   10804:	add	r2, pc, r2
   10808:	str	r0, [sp, #20]
   1080c:	mov	r0, r2
   10810:	bl	10644 <printf@plt>
   10814:	ldr	r1, [fp, #-8]
   10818:	sub	r2, fp, #32
   1081c:	add	r1, r2, r1, lsl #2
   10820:	ldr	r2, [sp, #20]
   10824:	str	r0, [sp, #16]
   10828:	mov	r0, r2
   1082c:	bl	10674 <__isoc99_scanf@plt>
   10830:	ldr	r0, [fp, #-8]
   10834:	add	r0, r0, #1
   10838:	str	r0, [fp, #-8]
   1083c:	b	107e4 <main@@Base+0x68>
   10840:	ldr	r0, [pc, #316]	; 10984 <main@@Base+0x208>
   10844:	add	r0, pc, r0
   10848:	bl	10644 <printf@plt>
   1084c:	movw	r1, #0
   10850:	str	r1, [fp, #-8]
   10854:	ldr	r0, [fp, #-8]
   10858:	cmp	r0, #5
   1085c:	bge	108b0 <main@@Base+0x134>
   10860:	ldr	r0, [pc, #304]	; 10998 <main@@Base+0x21c>
   10864:	add	r0, pc, r0
   10868:	ldr	r1, [fp, #-8]
   1086c:	add	r1, r1, #1
   10870:	ldr	r2, [pc, #300]	; 109a4 <main@@Base+0x228>
   10874:	add	r2, pc, r2
   10878:	str	r0, [sp, #12]
   1087c:	mov	r0, r2
   10880:	bl	10644 <printf@plt>
   10884:	ldr	r1, [fp, #-8]
   10888:	add	r2, sp, #36	; 0x24
   1088c:	add	r1, r2, r1, lsl #2
   10890:	ldr	r2, [sp, #12]
   10894:	str	r0, [sp, #8]
   10898:	mov	r0, r2
   1089c:	bl	10674 <__isoc99_scanf@plt>
   108a0:	ldr	r0, [fp, #-8]
   108a4:	add	r0, r0, #1
   108a8:	str	r0, [fp, #-8]
   108ac:	b	10854 <main@@Base+0xd8>
   108b0:	ldr	r0, [pc, #212]	; 1098c <main@@Base+0x210>
   108b4:	add	r0, pc, r0
   108b8:	bl	10644 <printf@plt>
   108bc:	ldr	r1, [pc, #196]	; 10988 <main@@Base+0x20c>
   108c0:	add	r1, pc, r1
   108c4:	str	r0, [sp, #4]
   108c8:	mov	r0, r1
   108cc:	bl	10644 <printf@plt>
   108d0:	movw	r1, #0
   108d4:	str	r1, [fp, #-8]
   108d8:	ldr	r0, [fp, #-8]
   108dc:	cmp	r0, #5
   108e0:	bge	10960 <main@@Base+0x1e4>
   108e4:	movw	r0, #0
   108e8:	str	r0, [fp, #-12]
   108ec:	ldr	r0, [fp, #-12]
   108f0:	cmp	r0, #5
   108f4:	bge	1094c <main@@Base+0x1d0>
   108f8:	ldr	r0, [fp, #-8]
   108fc:	sub	r1, fp, #32
   10900:	ldr	r0, [r1, r0, lsl #2]
   10904:	ldr	r1, [fp, #-12]
   10908:	add	r2, sp, #36	; 0x24
   1090c:	add	r1, r2, r1, lsl #2
   10910:	ldr	r1, [r1]
   10914:	cmp	r0, r1
   10918:	bne	10938 <main@@Base+0x1bc>
   1091c:	ldr	r0, [pc, #112]	; 10994 <main@@Base+0x218>
   10920:	add	r0, pc, r0
   10924:	ldr	r1, [fp, #-8]
   10928:	sub	r2, fp, #32
   1092c:	add	r1, r2, r1, lsl #2
   10930:	ldr	r1, [r1]
   10934:	bl	10644 <printf@plt>
   10938:	b	1093c <main@@Base+0x1c0>
   1093c:	ldr	r0, [fp, #-12]
   10940:	add	r0, r0, #1
   10944:	str	r0, [fp, #-12]
   10948:	b	108ec <main@@Base+0x170>
   1094c:	b	10950 <main@@Base+0x1d4>
   10950:	ldr	r0, [fp, #-8]
   10954:	add	r0, r0, #1
   10958:	str	r0, [fp, #-8]
   1095c:	b	108d8 <main@@Base+0x15c>
   10960:	ldr	r0, [pc, #40]	; 10990 <main@@Base+0x214>
   10964:	add	r0, pc, r0
   10968:	bl	10644 <printf@plt>
   1096c:	movw	r1, #0
   10970:	str	r0, [sp]
   10974:	mov	r0, r1
   10978:	mov	sp, fp
   1097c:	pop	{fp, pc}
   10980:	andeq	r0, r0, r4, lsl #5
   10984:	andeq	r0, r0, ip, ror #3
   10988:	andeq	r0, r0, sl, ror r1
   1098c:	andeq	r0, r0, r4, ror #2
   10990:	strheq	r0, [r0], -r4
   10994:	andeq	r0, r0, r2, lsr #2
   10998:	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   1099c:	andeq	r0, r0, pc, asr #4
   109a0:	andeq	r0, r0, r6, lsl r2
   109a4:	andeq	r0, r0, r6, lsr #3

000109a8 <__libc_csu_init@@Base>:
   109a8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   109ac:	mov	r7, r0
   109b0:	ldr	r6, [pc, #72]	; 10a00 <__libc_csu_init@@Base+0x58>
   109b4:	ldr	r5, [pc, #72]	; 10a04 <__libc_csu_init@@Base+0x5c>
   109b8:	add	r6, pc, r6
   109bc:	add	r5, pc, r5
   109c0:	sub	r6, r6, r5
   109c4:	mov	r8, r1
   109c8:	mov	r9, r2
   109cc:	bl	10624 <printf@plt-0x20>
   109d0:	asrs	r6, r6, #2
   109d4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   109d8:	mov	r4, #0
   109dc:	add	r4, r4, #1
   109e0:	ldr	r3, [r5], #4
   109e4:	mov	r2, r9
   109e8:	mov	r1, r8
   109ec:	mov	r0, r7
   109f0:	blx	r3
   109f4:	cmp	r6, r4
   109f8:	bne	109dc <__libc_csu_init@@Base+0x34>
   109fc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10a00:	andeq	r0, r1, ip, asr #10
   10a04:	andeq	r0, r1, r4, asr #10

00010a08 <__libc_csu_fini@@Base>:
   10a08:	bx	lr

Disassembly of section .fini:

00010a0c <.fini>:
   10a0c:	push	{r3, lr}
   10a10:	pop	{r3, pc}
