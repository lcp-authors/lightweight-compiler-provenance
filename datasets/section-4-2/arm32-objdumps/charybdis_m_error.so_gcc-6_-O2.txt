
../repos/charybdis/modules/core/.libs/m_error.so:     file format elf32-littlearm


Disassembly of section .init:

00000560 <_init>:
 560:	push	{r3, lr}
 564:	bl	610 <call_weak_fn>
 568:	pop	{r3, pc}

Disassembly of section .plt:

0000056c <.plt>:
 56c:	push	{lr}		; (str lr, [sp, #-4]!)
 570:	ldr	lr, [pc, #4]	; 57c <.plt+0x10>
 574:	add	lr, pc, lr
 578:	ldr	pc, [lr, #8]!
 57c:	.word	0x00010a84

00000580 <__cxa_finalize@plt>:
 580:	add	ip, pc, #0, 12
 584:	add	ip, ip, #16, 20	; 0x10000
 588:	ldr	pc, [ip, #2692]!	; 0xa84

0000058c <rb_strncasecmp@plt>:
 58c:	add	ip, pc, #0, 12
 590:	add	ip, ip, #16, 20	; 0x10000
 594:	ldr	pc, [ip, #2684]!	; 0xa7c

00000598 <sendto_realops_snomask@plt>:
 598:	add	ip, pc, #0, 12
 59c:	add	ip, ip, #16, 20	; 0x10000
 5a0:	ldr	pc, [ip, #2676]!	; 0xa74

000005a4 <__gmon_start__@plt>:
 5a4:	add	ip, pc, #0, 12
 5a8:	add	ip, ip, #16, 20	; 0x10000
 5ac:	ldr	pc, [ip, #2668]!	; 0xa6c

000005b0 <strlen@plt>:
 5b0:	add	ip, pc, #0, 12
 5b4:	add	ip, ip, #16, 20	; 0x10000
 5b8:	ldr	pc, [ip, #2660]!	; 0xa64

000005bc <strchr@plt>:
 5bc:	add	ip, pc, #0, 12
 5c0:	add	ip, ip, #16, 20	; 0x10000
 5c4:	ldr	pc, [ip, #2652]!	; 0xa5c

000005c8 <snprintf@plt>:
 5c8:	add	ip, pc, #0, 12
 5cc:	add	ip, ip, #16, 20	; 0x10000
 5d0:	ldr	pc, [ip, #2644]!	; 0xa54

000005d4 <is_remote_connect@plt>:
 5d4:	add	ip, pc, #0, 12
 5d8:	add	ip, ip, #16, 20	; 0x10000
 5dc:	ldr	pc, [ip, #2636]!	; 0xa4c

000005e0 <ilog@plt>:
 5e0:	add	ip, pc, #0, 12
 5e4:	add	ip, ip, #16, 20	; 0x10000
 5e8:	ldr	pc, [ip, #2628]!	; 0xa44

000005ec <log_client_name@plt>:
 5ec:	add	ip, pc, #0, 12
 5f0:	add	ip, ip, #16, 20	; 0x10000
 5f4:	ldr	pc, [ip, #2620]!	; 0xa3c

000005f8 <exit_client@plt>:
 5f8:	add	ip, pc, #0, 12
 5fc:	add	ip, ip, #16, 20	; 0x10000
 600:	ldr	pc, [ip, #2612]!	; 0xa34

00000604 <strncmp@plt>:
 604:	add	ip, pc, #0, 12
 608:	add	ip, ip, #16, 20	; 0x10000
 60c:	ldr	pc, [ip, #2604]!	; 0xa2c

Disassembly of section .text:

00000610 <call_weak_fn>:
 610:	ldr	r3, [pc, #20]	; 62c <call_weak_fn+0x1c>
 614:	ldr	r2, [pc, #20]	; 630 <call_weak_fn+0x20>
 618:	add	r3, pc, r3
 61c:	ldr	r2, [r3, r2]
 620:	cmp	r2, #0
 624:	bxeq	lr
 628:	b	5a4 <__gmon_start__@plt>
 62c:	.word	0x000109e0
 630:	.word	0x00000044

00000634 <deregister_tm_clones>:
 634:	ldr	r3, [pc, #52]	; 670 <deregister_tm_clones+0x3c>
 638:	ldr	r0, [pc, #52]	; 674 <deregister_tm_clones+0x40>
 63c:	add	r3, pc, r3
 640:	add	r0, pc, r0
 644:	add	r3, r3, #3
 648:	sub	r3, r3, r0
 64c:	cmp	r3, #6
 650:	ldr	r3, [pc, #32]	; 678 <deregister_tm_clones+0x44>
 654:	add	r3, pc, r3
 658:	bxls	lr
 65c:	ldr	r2, [pc, #24]	; 67c <deregister_tm_clones+0x48>
 660:	ldr	r3, [r3, r2]
 664:	cmp	r3, #0
 668:	bxeq	lr
 66c:	bx	r3
 670:	.word	0x00010a8c
 674:	.word	0x00010a88
 678:	.word	0x000109a4
 67c:	.word	0x00000040

00000680 <register_tm_clones>:
 680:	ldr	r1, [pc, #56]	; 6c0 <register_tm_clones+0x40>
 684:	ldr	r0, [pc, #56]	; 6c4 <register_tm_clones+0x44>
 688:	add	r1, pc, r1
 68c:	add	r0, pc, r0
 690:	sub	r1, r1, r0
 694:	ldr	r3, [pc, #44]	; 6c8 <register_tm_clones+0x48>
 698:	asr	r1, r1, #2
 69c:	add	r3, pc, r3
 6a0:	add	r1, r1, r1, lsr #31
 6a4:	asrs	r1, r1, #1
 6a8:	bxeq	lr
 6ac:	ldr	r2, [pc, #24]	; 6cc <register_tm_clones+0x4c>
 6b0:	ldr	r3, [r3, r2]
 6b4:	cmp	r3, #0
 6b8:	bxeq	lr
 6bc:	bx	r3
 6c0:	.word	0x00010a40
 6c4:	.word	0x00010a3c
 6c8:	.word	0x0001095c
 6cc:	.word	0x0000004c

000006d0 <__do_global_dtors_aux>:
 6d0:	ldr	r3, [pc, #76]	; 724 <__do_global_dtors_aux+0x54>
 6d4:	ldr	r2, [pc, #76]	; 728 <__do_global_dtors_aux+0x58>
 6d8:	add	r3, pc, r3
 6dc:	add	r2, pc, r2
 6e0:	ldrb	r3, [r3]
 6e4:	cmp	r3, #0
 6e8:	bxne	lr
 6ec:	ldr	r3, [pc, #56]	; 72c <__do_global_dtors_aux+0x5c>
 6f0:	push	{r4, lr}
 6f4:	ldr	r3, [r2, r3]
 6f8:	cmp	r3, #0
 6fc:	beq	70c <__do_global_dtors_aux+0x3c>
 700:	ldr	r3, [pc, #40]	; 730 <__do_global_dtors_aux+0x60>
 704:	ldr	r0, [pc, r3]
 708:	bl	580 <__cxa_finalize@plt>
 70c:	bl	634 <deregister_tm_clones>
 710:	ldr	r3, [pc, #28]	; 734 <__do_global_dtors_aux+0x64>
 714:	mov	r2, #1
 718:	add	r3, pc, r3
 71c:	strb	r2, [r3]
 720:	pop	{r4, pc}
 724:	.word	0x000109f0
 728:	.word	0x0001091c
 72c:	.word	0x0000003c
 730:	.word	0x0001094c
 734:	.word	0x000109b0

00000738 <frame_dummy>:
 738:	ldr	r0, [pc, #56]	; 778 <frame_dummy+0x40>
 73c:	ldr	r3, [pc, #56]	; 77c <frame_dummy+0x44>
 740:	add	r0, pc, r0
 744:	ldr	r2, [r0]
 748:	add	r3, pc, r3
 74c:	cmp	r2, #0
 750:	bne	758 <frame_dummy+0x20>
 754:	b	680 <register_tm_clones>
 758:	ldr	r2, [pc, #32]	; 780 <frame_dummy+0x48>
 75c:	ldr	r3, [r3, r2]
 760:	cmp	r3, #0
 764:	beq	754 <frame_dummy+0x1c>
 768:	push	{r4, lr}
 76c:	blx	r3
 770:	pop	{r4, lr}
 774:	b	680 <register_tm_clones>
 778:	.word	0x000107b4
 77c:	.word	0x000108b0
 780:	.word	0x00000048

00000784 <is_safe_error>:
 784:	ldr	r1, [pc, #284]	; 8a8 <is_safe_error+0x124>
 788:	push	{r4, r5, lr}
 78c:	mov	r2, #25
 790:	sub	sp, sp, #108	; 0x6c
 794:	add	r1, pc, r1
 798:	mov	r5, r0
 79c:	bl	604 <strncmp@plt>
 7a0:	ldr	r3, [pc, #260]	; 8ac <is_safe_error+0x128>
 7a4:	add	r3, pc, r3
 7a8:	cmp	r0, #0
 7ac:	bne	7bc <is_safe_error+0x38>
 7b0:	mov	r0, #1
 7b4:	add	sp, sp, #108	; 0x6c
 7b8:	pop	{r4, r5, pc}
 7bc:	ldr	r2, [pc, #236]	; 8b0 <is_safe_error+0x12c>
 7c0:	add	r4, sp, #4
 7c4:	mov	r1, #100	; 0x64
 7c8:	ldr	r3, [r3, r2]
 7cc:	ldr	r2, [pc, #224]	; 8b4 <is_safe_error+0x130>
 7d0:	add	r3, r3, #88	; 0x58
 7d4:	add	r2, pc, r2
 7d8:	mov	r0, r4
 7dc:	bl	5c8 <snprintf@plt>
 7e0:	mov	r0, r4
 7e4:	bl	5b0 <strlen@plt>
 7e8:	mov	r1, r4
 7ec:	mov	r2, r0
 7f0:	mov	r0, r5
 7f4:	bl	604 <strncmp@plt>
 7f8:	cmp	r0, #0
 7fc:	beq	7b0 <is_safe_error+0x2c>
 800:	ldr	r1, [pc, #176]	; 8b8 <is_safe_error+0x134>
 804:	mov	r2, #11
 808:	add	r1, pc, r1
 80c:	mov	r0, r5
 810:	bl	604 <strncmp@plt>
 814:	cmp	r0, #0
 818:	beq	7b0 <is_safe_error+0x2c>
 81c:	ldr	r1, [pc, #152]	; 8bc <is_safe_error+0x138>
 820:	mov	r2, #14
 824:	add	r1, pc, r1
 828:	mov	r0, r5
 82c:	bl	604 <strncmp@plt>
 830:	cmp	r0, #0
 834:	beq	7b0 <is_safe_error+0x2c>
 838:	ldr	r1, [pc, #128]	; 8c0 <is_safe_error+0x13c>
 83c:	mov	r2, #12
 840:	add	r1, pc, r1
 844:	mov	r0, r5
 848:	bl	58c <rb_strncasecmp@plt>
 84c:	cmp	r0, #0
 850:	beq	7b4 <is_safe_error+0x30>
 854:	mov	r1, #91	; 0x5b
 858:	mov	r0, r5
 85c:	bl	5bc <strchr@plt>
 860:	subs	r4, r0, #0
 864:	movne	r0, #0
 868:	bne	7b4 <is_safe_error+0x30>
 86c:	mov	r1, #46	; 0x2e
 870:	mov	r0, r5
 874:	bl	5bc <strchr@plt>
 878:	cmp	r0, #0
 87c:	beq	890 <is_safe_error+0x10c>
 880:	ldrb	r3, [r0, #1]
 884:	cmp	r3, #0
 888:	movne	r0, r4
 88c:	bne	7b4 <is_safe_error+0x30>
 890:	mov	r0, r5
 894:	mov	r1, #58	; 0x3a
 898:	bl	5bc <strchr@plt>
 89c:	clz	r0, r0
 8a0:	lsr	r0, r0, #5
 8a4:	b	7b4 <is_safe_error+0x30>
 8a8:	.word	0x00000444
 8ac:	.word	0x00010854
 8b0:	.word	0x00000050
 8b4:	.word	0x00000420
 8b8:	.word	0x0000040c
 8bc:	.word	0x000003fc
 8c0:	.word	0x000003f0

000008c4 <ms_error>:
 8c4:	ldr	r0, [pc, #252]	; 9c8 <ms_error+0x104>
 8c8:	ldr	ip, [pc, #252]	; 9cc <ms_error+0x108>
 8cc:	add	r0, pc, r0
 8d0:	push	{r4, r5, r6, r7, lr}
 8d4:	mov	r5, r1
 8d8:	ldr	r1, [r0, ip]
 8dc:	sub	sp, sp, #12
 8e0:	cmp	r3, #1
 8e4:	mov	r7, r2
 8e8:	mov	r3, r0
 8ec:	ldr	r6, [r1, #208]	; 0xd0
 8f0:	ldr	r3, [sp, #32]
 8f4:	ble	9bc <ms_error+0xf8>
 8f8:	ldr	r4, [r3, #4]
 8fc:	ldrb	r3, [r4]
 900:	cmp	r3, #0
 904:	beq	9b0 <ms_error+0xec>
 908:	mov	r1, #1
 90c:	mov	r0, r7
 910:	bl	5ec <log_client_name@plt>
 914:	ldr	r1, [pc, #180]	; 9d0 <ms_error+0x10c>
 918:	mov	r3, r4
 91c:	add	r1, pc, r1
 920:	mov	r2, r0
 924:	mov	r0, #5
 928:	bl	5e0 <ilog@plt>
 92c:	mov	r0, r4
 930:	bl	784 <is_safe_error>
 934:	cmp	r0, #0
 938:	bne	980 <ms_error+0xbc>
 93c:	cmp	r6, #2
 940:	beq	978 <ms_error+0xb4>
 944:	cmp	r6, #0
 948:	movne	r6, #2
 94c:	cmp	r7, r5
 950:	beq	98c <ms_error+0xc8>
 954:	ldr	r2, [pc, #120]	; 9d4 <ms_error+0x110>
 958:	add	r5, r5, #88	; 0x58
 95c:	str	r5, [sp]
 960:	str	r4, [sp, #4]
 964:	add	r3, r7, #88	; 0x58
 968:	mov	r1, r6
 96c:	add	r2, pc, r2
 970:	mov	r0, #256	; 0x100
 974:	bl	598 <sendto_realops_snomask@plt>
 978:	add	sp, sp, #12
 97c:	pop	{r4, r5, r6, r7, pc}
 980:	cmp	r7, r5
 984:	mov	r6, #0
 988:	bne	954 <ms_error+0x90>
 98c:	ldr	r2, [pc, #68]	; 9d8 <ms_error+0x114>
 990:	str	r4, [sp, #32]
 994:	add	r3, r7, #88	; 0x58
 998:	mov	r1, r6
 99c:	add	r2, pc, r2
 9a0:	mov	r0, #256	; 0x100
 9a4:	add	sp, sp, #12
 9a8:	pop	{r4, r5, r6, r7, lr}
 9ac:	b	598 <sendto_realops_snomask@plt>
 9b0:	ldr	r4, [pc, #36]	; 9dc <ms_error+0x118>
 9b4:	add	r4, pc, r4
 9b8:	b	908 <ms_error+0x44>
 9bc:	ldr	r4, [pc, #28]	; 9e0 <ms_error+0x11c>
 9c0:	add	r4, pc, r4
 9c4:	b	908 <ms_error+0x44>
 9c8:	.word	0x0001072c
 9cc:	.word	0x00000054
 9d0:	.word	0x00000328
 9d4:	.word	0x00000314
 9d8:	.word	0x000002cc
 9dc:	.word	0x0000028c
 9e0:	.word	0x00000280

000009e4 <m_error>:
 9e4:	ldr	r0, [pc, #404]	; b80 <m_error+0x19c>
 9e8:	ldr	ip, [pc, #404]	; b84 <m_error+0x1a0>
 9ec:	add	r0, pc, r0
 9f0:	push	{r4, r5, r6, r7, r8, lr}
 9f4:	mov	r4, r1
 9f8:	ldr	r1, [r0, ip]
 9fc:	sub	sp, sp, #8
 a00:	cmp	r3, #1
 a04:	mov	r7, r2
 a08:	mov	r3, r0
 a0c:	ldr	r6, [r1, #208]	; 0xd0
 a10:	ldr	r3, [sp, #32]
 a14:	ble	b30 <m_error+0x14c>
 a18:	ldr	r5, [r3, #4]
 a1c:	ldrb	r3, [r5]
 a20:	cmp	r3, #0
 a24:	beq	b24 <m_error+0x140>
 a28:	ldrh	r3, [r4, #80]	; 0x50
 a2c:	sub	r2, r3, #1
 a30:	cmp	r3, #32
 a34:	cmpne	r2, #1
 a38:	bhi	a60 <m_error+0x7c>
 a3c:	mov	r1, #1
 a40:	mov	r0, r7
 a44:	bl	5ec <log_client_name@plt>
 a48:	ldr	r1, [pc, #312]	; b88 <m_error+0x1a4>
 a4c:	mov	r3, r5
 a50:	add	r1, pc, r1
 a54:	mov	r2, r0
 a58:	mov	r0, #5
 a5c:	bl	5e0 <ilog@plt>
 a60:	mov	r0, r5
 a64:	bl	784 <is_safe_error>
 a68:	ldrh	r3, [r4, #80]	; 0x50
 a6c:	cmp	r0, #0
 a70:	bne	ae0 <m_error+0xfc>
 a74:	cmp	r3, #32
 a78:	bne	b3c <m_error+0x158>
 a7c:	cmp	r6, #1
 a80:	ble	b4c <m_error+0x168>
 a84:	add	r8, r4, #88	; 0x58
 a88:	mov	r0, r4
 a8c:	bl	5d4 <is_remote_connect@plt>
 a90:	ldr	r2, [pc, #244]	; b8c <m_error+0x1a8>
 a94:	sub	r6, r6, #1
 a98:	clz	r6, r6
 a9c:	lsr	r6, r6, #5
 aa0:	mov	r3, r8
 aa4:	add	r2, pc, r2
 aa8:	cmp	r0, #0
 aac:	movne	r1, #256	; 0x100
 ab0:	moveq	r1, #0
 ab4:	orr	r1, r1, r6
 ab8:	mov	r0, #256	; 0x100
 abc:	bl	598 <sendto_realops_snomask@plt>
 ac0:	ldr	r3, [pc, #200]	; b90 <m_error+0x1ac>
 ac4:	mov	r0, r4
 ac8:	add	r3, pc, r3
 acc:	mov	r2, r7
 ad0:	mov	r1, r7
 ad4:	add	sp, sp, #8
 ad8:	pop	{r4, r5, r6, r7, r8, lr}
 adc:	b	5f8 <exit_client@plt>
 ae0:	cmp	r3, #2
 ae4:	cmpne	r3, #32
 ae8:	beq	af4 <m_error+0x110>
 aec:	cmp	r3, #1
 af0:	bne	ac0 <m_error+0xdc>
 af4:	mov	r0, r4
 af8:	bl	5d4 <is_remote_connect@plt>
 afc:	ldr	r2, [pc, #144]	; b94 <m_error+0x1b0>
 b00:	str	r5, [sp]
 b04:	add	r3, r4, #88	; 0x58
 b08:	add	r2, pc, r2
 b0c:	cmp	r0, #0
 b10:	movne	r1, #256	; 0x100
 b14:	moveq	r1, #0
 b18:	mov	r0, #256	; 0x100
 b1c:	bl	598 <sendto_realops_snomask@plt>
 b20:	b	ac0 <m_error+0xdc>
 b24:	ldr	r5, [pc, #108]	; b98 <m_error+0x1b4>
 b28:	add	r5, pc, r5
 b2c:	b	a28 <m_error+0x44>
 b30:	ldr	r5, [pc, #100]	; b9c <m_error+0x1b8>
 b34:	add	r5, pc, r5
 b38:	b	a28 <m_error+0x44>
 b3c:	sub	r3, r3, #1
 b40:	cmp	r3, #1
 b44:	bls	a7c <m_error+0x98>
 b48:	b	ac0 <m_error+0xdc>
 b4c:	cmp	r6, #0
 b50:	beq	af4 <m_error+0x110>
 b54:	ldr	r2, [pc, #68]	; ba0 <m_error+0x1bc>
 b58:	add	r8, r4, #88	; 0x58
 b5c:	str	r5, [sp]
 b60:	mov	r3, r8
 b64:	add	r2, pc, r2
 b68:	mov	r1, #2
 b6c:	mov	r0, #256	; 0x100
 b70:	bl	598 <sendto_realops_snomask@plt>
 b74:	cmp	r6, #1
 b78:	bne	ac0 <m_error+0xdc>
 b7c:	b	a88 <m_error+0xa4>
 b80:	.word	0x0001060c
 b84:	.word	0x00000054
 b88:	.word	0x000001f4
 b8c:	.word	0x000001f8
 b90:	.word	0x000001f0
 b94:	.word	0x00000160
 b98:	.word	0x00000118
 b9c:	.word	0x0000010c
 ba0:	.word	0x00000104

Disassembly of section .fini:

00000ba4 <_fini>:
 ba4:	push	{r3, lr}
 ba8:	pop	{r3, pc}
